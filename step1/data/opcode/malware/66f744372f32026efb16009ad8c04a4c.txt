pusha
or
or
sub
or
xor
sbb
mov
sub
sub
sbb
dec
xor
mov
or
jmp
daa
scas
cmp
sti
nop
pop
inc
adc
jmp
jb
add
jmp
iret
js
fdivr
loop
call
paddsb
adc
or
mov
jne
add
jmp
adc
mov
repz
xchg
pop
sbb
pmaddwd
js
jmp
cld
mul
lock
jno
or
jg
mov
adc
push
stc
pop
adc
add
jmp
inc
mov
rcpps
and
rcl
js
mov
jmp
adc
enter
stc
pop
jmp
data16
adc
and
push
xchg
pop
mov
xor
jmp
div
sbb
pop
jge
push
xchg
pop
shr
punpckhwd
and
jmp
in
xor
sbb
sub
jno
add
rcr
xchg
mov
rol
add
mov
and
adc
sbb
jmp
lahf
push
jnp
ja
ret
sub
xor
add
sub
sbb
or
and
or
jmp
in
inc
xchg
mov
add
(bad)
(bad)
jmp
pop
push
lock
(bad)
sbb
sub
and
sbb
sub
add
dec
mov
adc
and
pminsw
and
dec
mov
shl
xor
rcr
jmp
xchg
jmp
and
push
inc
pop
adc
jmp
data16
sbb
sbb
add
pop
sub
xorps
sub
jle
jmp
mov
sbb
jmp
or
retf
or
add
test
(bad)
(bad)
inc
clc
push
ret
sahf
jo
bsf
pusha
or
iret
stc
add
push
or
mov
pop
jge
dec
jne
pop
test
mov
mov
push
addr16
jb
dec
jne
dec
sbb
mov
or
and
push
(bad)
(bad)
cli
sub
(bad)
mov
push
and
ss
and
pusha
xchg
popf
and
xor
pusha
mov
dec
jne
pushf
adc
or
jp
jnp
or
sti
mov
adc
and
or
pop
mov
or
jge
loop
or
sub
jl
push
mov
jge
or
pop
xor
arpl
or
arpl
dec
sbb
or
or
mov
movs
call
mov
jne
sbb
(bad)
arpl
or
inc
mov
sbb
or
mov
mov
lods
dec
call
inc
jecxz
mov
mov
mov
xor
jne
stc
mov
mov
mov
test
pusha
ins
pop
(bad)
mov
stos
and
sub
mul
loop
jne
mov
fdivr
stos
(bad)
test
(bad)
and
test
(bad)
and
enter
cmp
pusha
jae
aam
mov
add
and
pop
mul
add
jne
mov
dec
jns
repnz
repz
in
xor
in
xor
mul
push
or
sub
xchg
rcl
in
push
hlt
movs
pop
or
cld
pop
and
jne
lea
jb
call
mov
push
(bad)
pushf
idiv
inc
cmps
neg
xchg
dec
pushf
or
add
stos
jecxz
pop
sub
pushf
add
mov
popf
loopne
xor
arpl
or
stos
mov
mov
push
jns
fild
outs
mov
fild
bound
jp
or
mov
sbb
cmc
or
dec
arpl
inc
and
and
jne
mov
or
(bad)
add
pop
or
dec
sub
and
ja
dec
adc
fs
jno
mov
add
pop
or
dec
push
jbe
and
ja
icebp
mul
pop
mov
ja
pusha
or
sar
mov
xlat
(bad)
sub
pop
sub
jbe
and
pop
call
data16
loopne
or
mov
mov
or
(bad)
jnp
repz
or
call
sub
pop
add
jne
mov
or
mov
or
sbb
sub
mov
xchg
je
or
call
loop
and
sub
mul
loop
and
sub
mul
loop
and
sub
mul
mov
jne
dec
int3
jne
mov
or
or
xor
arpl
pop
xor
arpl
into
jno
popa
arpl
adc
ins
sbb
adc
into
or
or
jl
add
dec
pop
push
(bad)
or
or
jl
add
dec
sbb
int
jne
int
adc
retf
push
add
jno
arpl
ins
add
shl
and
ins
pop
push
sar
or
mov
mov
gs
hlt
popa
adc
jl
or
or
push
(bad)
js
pop
out
pop
push
lds
adc
data16
mov
ins
pop
sbb
adc
gs
retf
sbb
shl
push
sar
arpl
or
mov
or
outs
not
or
xchg
arpl
cmc
dec
mov
jbe
add
js
add
mov
add
add
add
add
add
add
ja
add
cmps
pop
add
adc
out
jl
stos
mov
add
xchg
pop
out
cmovnp
and
lds
aaa
mov
sub
out
mov
mul
loopne
mov
add
add
add
dec
or
pushf
lods
icebp
ret
jbe
mov
jo
loop
sub
popa
mov
sbb
clc
push
stos
or
ss
mov
call
fcom
scas
adc
mov
sahf
mov
or
adc
mov
dec
pop
icebp
loop
std
lods
add
inc
popf
test
adc
add
add
add
add
add
adc
fwait
jmp
add
add
add
add
add
add
cli
add
add
add
add
add
add
int3
add
fld
add
mov
add
mov
add
add
or
add
add
add
add
sbb
add
add
push
add
add
test
add
add
push
add
push
int
add
pop
add
add
and
nop
ins
add
add
add
add
add
add
add
add
add
mov
add
jo
fst
jae
add
add
add
out
add
iret
add
mov
jns
call
add
add
add
add
add
and
add
push
jns
xchg
add
xchg
jg
inc
push
scas
outs
add
add
dec
add
(bad)
sti
inc
add
add
out
add
stos
xor
dec
push
shl
add
add
add
setne
sbb
cmps
mov
cmp
lods
jbe
push
inc
jp
rol
inc
add
cld
add
add
js
add
scas
add
js
out
repnz
add
scas
adc
retf
cmps
or
adc
add
shr
sub
ins
adc
ins
add
rcl
ins
add
add
add
add
add
repz
xor
daa
add
jo
add
cmc
add
bound
push
(bad)
dec
movs
add
add
daa
add
cmps
and
mov
movs
add
add
push
loopne
rcl
add
ficomp
ins
pop
add
loop
add
or
cmp
add
dec
scas
xor
or
jmp
nop
ret
add
add
sub
xchg
loopne
add
add
mov
pop
pop
add
sbb
inc
add
outs
add
scas
jmp
test
add
hlt
loop
int3
fisttp
rol
add
mov
cmps
add
or
dec
(bad)
fadd
jb
add
add
add
aaa
clc
add
or
mov
xchg
dec
add
(bad)
push
and
pop
mov
bound
add
add
das
push
sbb
out
rol
cli
add
loope
and
mov
adc
mov
add
shl
es
add
add
fild
clc
stc
addr16
retf
call
pop
pop
dec
retf
add
inc
push
ja
adc
add
ret
add
call
pop
neg
pop
sub
shr
call
mov
cmp
(bad)
xchg
add
add
addr16
fdivr
inc
scas
jae
push
mov
dec
add
cmp
xchg
call
add
je
sub
daa
fild
leave
add
push
mov
add
outs
add
add
in
into
or
add
jl
inc
jnp
add
add
add
add
cmp
pop
int3
add
add
add
cmp
cmp
add
xor
mov
add
add
cmps
mov
and
xor
(bad)
add
push
adc
add
cmp
add
sbb
js
push
sub
das
iret
iret
pushf
dec
cmp
cwde
add
xlat
std
mov
ja
add
fistp
fmul
dec
add
fs
add
push
xchg
add
or
add
lahf
inc
add
arpl
add
xchg
add
push
cmp
out
(bad)
add
or
add
add
add
add
mov
fwait
push
add
add
add
repz
mov
add
aam
add
jmp
shl
add
and
mov
add
add
call
and
mov
jg
adc
mov
jl
add
add
fild
dec
add
mov
add
stos
add
jg
ret
repnz
loop
es
cmc
add
add
mov
sub
scas
sub
loope
add
xor
adc
add
xchg
daa
inc
add
call
inc
(bad)
add
add
mov
add
xor
sub
cmp
int3
add
in
add
icebp
sub
repz
pop
int
add
add
add
sub
aam
and
ficomp
adc
test
adc
add
add
in
jl
add
or
stc
mov
scas
dec
add
sub
mov
into
jnp
cmp
aas
add
pop
icebp
outs
pop
popf
add
std
movs
add
mov
add
mov
retf
out
add
xor
mov
xor
add
fild
lea
jl
lock
rol
push
in
xchg
pop
add
loop
sar
jne
push
add
mov
push
cld
add
push
add
ret
movs
outs
adc
add
add
add
add
hlt
add
jl
lods
fs
cmp
pop
add
add
ja
add
xor
dec
push
cwde
sbb
ins
(bad)
mov
add
sub
add
pop
mov
ja
fsub
retf
add
daa
add
sahf
jmp
aas
lds
lds
(bad)
dec
push
add
add
sub
push
add
push
cwde
dec
sbb
push
add
clc
jne
dec
add
xor
retf
mov
aas
retf
lods
movs
jo
add
cmp
nop
mov
sti
lea
not
add
add
adc
mov
mov
add
loop
add
jnp
mov
test
cmp
dec
sahf
push
add
add
mov
xchg
mov
add
add
cmp
xchg
jp
inc
add
push
pop
jnp
test
add
out
mov
or
xchg
hlt
jmp
add
or
retf
jecxz
ins
popa
add
add
add
cld
cmp
add
add
mov
mov
inc
add
add
and
scas
pop
movs
arpl
rol
mov
add
add
rol
push
mov
add
shl
mov
(bad)
outs
in
push
mov
es
jmp
cmp
or
pop
js
add
cdq
push
adc
pop
add
stos
inc
push
inc
add
retf
dec
xchg
stos
lods
dec
(bad)
jle
ret
test
add
mov
push
xchg
mov
cmps
stos
add
push
jp
rol
aas
fnstsw
jle
sti
and
and
int3
and
xor
xor
cmp
rol
add
and
ficom
add
clc
fidivr
xor
add
mov
hlt
add
sbb
lods
leave
add
test
cmc
sub
add
fnstcw
movs
mov
mov
test
cwde
sub
cmps
add
add
jb
test
add
add
add
add
add
jnp
fs
loopne
add
add
add
jg
mov
and
data16
add
jecxz
add
daa
add
add
add
cmc
xor
add
scas
rol
sbb
out
push
je
add
mov
std
cmp
jle
out
loope
mov
and
add
mov
add
pop
add
xchg
je
ins
add
push
sbb
sub
xor
or
dec
or
int3
add
add
cs
or
aaa
test
es
out
add
mov
mov
and
jg
and
dec
add
add
sbb
sar
add
popa
add
add
jge
(bad)
sbb
popa
nop
add
aas
add
sahf
cmp
mov
add
mov
movs
sub
add
add
add
fwait
ins
inc
add
int3
lods
dec
add
mov
pop
add
lock
add
add
or
pop
inc
rol
xchg
sbb
popa
add
xchg
xchg
int
add
scas
add
add
add
xchg
jl
mov
inc
sbb
push
add
cmp
fwait
sub
movs
add
add
add
fistp
clc
mov
das
data16
add
dec
rcl
sbb
jb
mov
add
into
add
add
je
mov
mov
add
std
add
jecxz
add
or
scas
dec
add
add
mov
scas
add
add
add
add
test
add
sti
add
call
add
sbb
pop
cmps
cmp
add
add
std
adc
dec
inc
sar
call
inc
add
popa
sub
xor
lds
imul
xchg
mov
cli
push
sub
arpl
mov
pusha
in
(bad)
aam
add
mov
and
add
fadd
pop
add
add
fs
inc
add
mov
cwde
add
(bad)
mov
mov
adc
retf
xchg
add
add
jecxz
jl
lock
add
fiadd
or
inc
sbb
add
popf
add
pop
add
popa
add
in
fnstcw
ret
in
hlt
add
inc
push
dec
out
push
mov
ins
add
and
add
add
push
adc
add
in
pop
jbe
add
add
test
add
add
cmp
push
xchg
hlt
mov
sub
jmp
out
inc
dec
mov
xlat
add
ret
add
mov
jp
outs
add
add
jns
xor
enterw
add
mov
cli
xchg
cli
test
dec
add
add
int3
inc
test
add
jge
mov
(bad)
xchg
mov
in
inc
add
push
stos
je
jnp
add
gs
fisttp
sub
hlt
fist
sub
daa
and
sbb
add
sbb
inc
inc
xor
mov
xchg
es
xlat
xchg
cmp
add
xor
out
jns
mov
into
add
cwde
push
sbb
add
add
or
pop
in
jmp
add
js
lahf
or
add
add
nop
add
inc
add
add
shl
imul
cmp
(bad)
out
xchg
outs
jmp
icebp
dec
add
xor
xchg
int
loop
push
mov
sar
add
sub
xchg
pop
pop
inc
add
sub
jge
cdq
mov
dec
add
mov
outs
fnsave
add
add
add
cmp
inc
popf
imul
in
add
repz
add
xchg
leave
inc
mov
sub
icebp
add
fwait
test
push
add
(bad)
add
stc
pushf
dec
add
mov
mov
pusha
push
push
hlt
add
inc
push
add
rcr
pushf
inc
add
mov
fcmovnb
(bad)
xlat
push
sub
add
hlt
es
into
add
add
retf
add
push
mov
jne
loop
push
sbb
add
inc
push
add
dec
push
add
and
call
fadd
outs
inc
stc
mov
jge
push
add
add
xchg
mov
jne
rcr
cmps
inc
add
je
mov
xchg
out
add
adc
add
add
stc
add
add
add
add
mov
neg
das
xor
or
div
add
add
dec
sbb
adc
cmp
jo
stos
adc
movs
inc
fs
add
add
mov
mov
fisttp
pusha
add
cld
rcl
cmp
jb
jmp
jne
adc
add
xlat
leave
pop
add
int3
outs
mov
add
fnstenv
sub
or
add
mov
add
add
add
add
add
xchg
add
jbe
mov
imul
add
jp
add
and
or
retf
xchg
cli
jno
add
aam
cmp
add
add
or
retf
fs
add
add
in
fdivr
fwait
jb
out
loop
add
add
and
popf
add
mov
jae
mov
xchg
jbe
add
cmp
fcmovnb
add
add
lea
arpl
jnp
stos
pop
arpl
in
add
mov
add
sub
add
fwait
push
add
add
add
xchg
add
add
test
push
add
mov
dec
add
rol
add
in
mov
xor
or
fiadd
add
add
aam
mov
call
jmp
shr
jne
cli
add
imul
jle
sub
mov
test
mov
mov
add
in
add
fisubr
leave
cmc
add
stc
outs
pop
aas
test
add
and
add
or
add
fadd
in
inc
add
add
cli
add
sbb
xchg
add
fnsave
dec
or
icebp
add
call
add
cs
add
add
sub
test
inc
or
and
fiadd
adc
cmc
xchg
add
js
sub
add
rcr
mov
or
popf
ret
imul
add
jne
pop
cwde
add
pop
add
aas
fld
add
add
sahf
add
push
cdq
sbb
jmp
mov
mov
xor
in
pop
xchg
cmps
pusha
int
fmul
add
pop
ret
add
outs
add
jns
mov
or
xchg
add
mov
add
out
mov
mov
add
and
adc
add
(bad)
mov
jmp
adc
sub
xchg
jg
sub
jne
dec
add
jbe
das
inc
mov
dec
dec
addr16
pop
add
stos
add
push
cs
stos
add
ins
add
xchg
sub
add
bound
int
pop
inc
icebp
cmps
fisub
add
add
sbb
loopne
jp
mov
push
add
daa
mov
pop
mov
mov
jl
add
add
add
inc
xchg
mov
fiadd
push
xchg
fcomp
add
jo
in
sti
or
cmp
div
ja
rcl
add
sbb
inc
add
cmp
lock
xor
mov
rol
cld
je
xor
or
or
add
and
sbb
mov
and
ficomp
cmp
cmp
mov
adc
add
adc
add
add
mov
push
mov
imul
sub
movs
add
xchg
jne
std
out
pop
sub
sub
fiadd
adc
add
sub
test
pop
imul
add
int3
add
add
jge
data16
lods
add
xor
mov
add
iret
add
and
cmp
cli
mov
xchg
cmp
or
inc
xchg
add
and
cdq
add
fstp
rol
inc
stc
sbb
mov
or
aad
shr
add
cmp
jns
std
pop
push
add
push
cmp
jp
fadd
jge
dec
add
add
dec
add
add
add
push
push
int3
in
pop
or
jmp
mov
add
adc
ret
adc
mov
add
jp
push
pusha
add
add
data16
sub
add
pop
push
xlat
add
and
cmp
sbb
add
xor
test
inc
add
mov
mov
not
jbe
adc
push
cmp
std
out
add
add
fist
adc
iret
cmp
adc
or
add
add
mov
push
add
(bad)
cmps
xchg
retf
push
push
add
call
ret
(bad)
repnz
lahf
and
inc
cmp
js
dec
cmp
mov
jns
arpl
add
add
stc
dec
push
sbb
add
mov
les
sub
outs
add
movs
imul
jecxz
mov
add
sbb
dec
(bad)
loopne
stos
add
lea
sub
mov
ins
or
add
add
pusha
add
mov
pop
add
loope
dec
add
std
xchg
inc
jb
xchg
ds
adc
mov
imul
or
adc
add
jl
in
mov
inc
add
add
adc
arpl
adc
jo
pop
std
and
cmp
jmp
in
and
leave
jns
cs
leave
add
ret
push
dec
rcr
pop
fild
inc
add
xchg
popa
add
add
add
add
mov
add
rol
dec
loop
add
xor
mov
mov
aaa
push
add
mov
rcr
xchg
add
into
aaa
add
das
xchg
rol
call
cmp
out
add
mov
add
in
je
fist
imul
ja
mov
add
add
and
sub
aam
pop
aam
stos
sub
and
int
fcom
neg
add
add
push
add
jg
add
(bad)
int3
lods
mov
add
add
add
xabort
add
mov
mov
add
out
push
add
add
bound
add
add
add
test
in
cmps
add
fstp
add
xor
jp
and
imul
mov
fnstenv
nop
xchg
aam
add
mov
jmp
dec
jmp
sub
iret
test
into
add
rol
add
mov
in
cmc
pop
rol
jno
push
add
xor
or
xchg
gs
add
push
add
add
xor
add
pop
or
into
add
add
xchg
xor
xor
inc
add
jns
add
in
xchg
add
fadd
xchg
rol
jl
imul
std
scas
xchg
icebp
add
cmp
xor
(bad)
imul
in
or
pop
add
mov
mov
sbb
mov
les
into
add
add
ret
aas
ins
test
ret
add
and
pop
(bad)
cmp
add
and
add
cmp
clc
add
push
sti
jp
(bad)
push
sbb
push
adc
retf
scas
js
jle
mov
out
add
jne
add
adc
jns
je
outs
add
cmp
add
shl
data16
xchg
push
cld
add
adc
add
mov
add
add
mov
inc
adc
push
fld
lock
xchg
out
push
add
add
xor
test
movs
cmc
(bad)
xor
mov
inc
add
add
mul
ror
jp
scas
sbb
add
add
jge
cmp
shl
call
fadd
push
enter
add
mov
add
repz
js
add
and
jge
hlt
add
adc
movs
add
pop
and
add
das
(bad)
aas
repnz
icebp
xchg
add
add
jle
push
push
add
or
add
push
push
add
add
(bad)
pop
daa
imul
stos
add
dec
add
stos
sub
cld
in
jae
push
scas
mov
add
fistp
add
push
push
add
sbb
sbb
leave
or
mov
xchg
add
fistp
add
pop
add
dec
das
test
mov
mov
retf
push
(bad)
clc
add
add
cs
imul
add
add
add
shl
mov
push
(bad)
cmp
add
lods
dec
push
movs
mov
test
inc
scas
sti
cmp
enter
xor
dec
dec
push
(bad)
test
inc
and
and
cmp
push
add
bound
inc
jg
add
hlt
add
loopne
sub
retf
sbb
add
inc
sar
sub
add
add
retf
add
xchg
mov
es
xchg
popf
shl
das
fistp
add
sub
nop
sbb
sub
jle
adc
or
add
dec
push
adc
add
push
cmp
cmp
je
scas
or
add
add
xor
add
mov
in
cmp
aam
adc
jle
repz
int
bound
das
loopne
add
test
fiadd
xor
xchg
mov
and
stos
push
popa
dec
sar
jecxz
jae
add
jmp
lahf
jnp
pop
test
ja
or
xor
mov
pop
vpackuswb
add
xor
add
jecxz
add
out
add
popa
add
ins
mov
bnd
pop
les
das
add
daa
adc
sti
sub
push
add
pop
add
or
fdivr
pop
mov
ins
add
add
iret
mov
in
pop
add
cmp
inc
ret
push
or
sti
shl
or
adc
add
mov
mov
add
xor
mov
or
xchg
dec
out
add
(bad)
enter
xchg
mov
add
push
add
adc
mov
add
pop
jns
add
arpl
and
add
xor
aaa
aas
add
loopne
xlat
inc
xchg
add
and
add
js
test
and
cmps
mov
aas
fisttp
add
add
movs
add
inc
adc
mov
xlat
int
jecxz
fimul
call
add
loope
popa
mov
add
add
ja
add
or
loop
mov
pop
inc
hlt
add
xchg
sbb
add
adc
add
inc
add
cmp
mov
dec
ror
and
mov
loopne
sub
mov
jecxz
pusha
add
add
loopne
add
adc
lods
dec
mov
add
add
jo
pop
add
mov
inc
sbb
add
inc
popf
pop
les
jno
add
sub
xchg
add
loop
fadd
inc
sub
xor
sub
loop
add
aaa
iret
sti
lods
xor
fwait
add
faddp
stc
adc
scas
icebp
in
add
ins
gs
add
repz
aam
add
bound
xor
or
mov
in
outs
je
rol
aad
out
and
outs
rcl
inc
add
retf
fbstp
cmps
xchg
add
cmp
ret
push
ret
rol
sbb
add
sbb
fisub
add
mov
add
push
push
jb
add
cmp
mov
push
add
add
inc
fiadd
sbb
add
sbb
add
push
add
(bad)
mov
sbb
js
sbb
adc
add
dec
jns
sub
add
sti
sbb
idiv
add
cs
aad
push
add
add
daa
xchg
xchg
push
mov
jno
add
xor
pusha
jp
loope
push
add
add
sbb
jle
add
xor
xor
push
and
pop
adc
pushf
mov
xchg
in
push
add
pop
mov
mov
adc
cwde
(bad)
push
add
xor
mov
add
sub
xchg
sbb
inc
jmp
sub
push
out
add
add
iret
int3
pop
add
scas
popa
in
or
push
test
fiadd
test
add
lock
or
add
ins
add
arpl
add
pop
test
xchg
add
add
fiadd
inc
mov
sub
add
cmp
xor
jae
mov
mov
xchg
add
sbb
sbb
popf
add
jns
add
cli
add
jmp
fsub
mov
add
push
rol
jmp
call
std
in
movs
fbld
and
push
mov
loop
(bad)
inc
cs
cmc
repnz
add
push
test
jg
bound
shl
xor
xchg
mov
add
add
sbb
std
jnp
add
pop
cmps
icebp
xchg
mov
pop
mov
add
adc
add
add
and
(bad)
sar
jnp
add
stos
loopne
add
adc
push
xor
add
jg
stos
add
in
add
test
pusha
rol
lods
hlt
add
call
xchg
aad
add
das
jle
jmp
add
inc
adc
fsubr
inc
fiadd
mov
arpl
add
ret
(bad)
cmp
imul
test
push
mov
in
in
add
or
movs
int
mov
add
fist
lea
stos
add
ja
add
dec
add
ret
std
mov
xchg
add
sti
icebp
cmp
daa
add
add
add
add
add
mov
iret
push
cmp
rcl
aas
loope
xchg
ror
add
add
dec
adc
mov
out
dec
or
xor
inc
add
pop
rol
nop
add
dec
hlt
je
gs
daa
les
inc
add
push
adc
add
add
add
or
add
jae
loopne
test
std
add
add
jnp
push
retf
add
sub
fiadd
adc
cld
outs
stos
cs
(bad)
sbb
jle
call
loopne
inc
pop
mov
addr16
inc
loope
add
push
push
add
xor
xchg
jmp
aas
pop
add
out
adc
in
add
push
inc
shl
pop
mov
or
jl
xor
adc
and
jb
lods
add
cmp
dec
enter
pushf
test
mov
sbb
add
add
jns
push
adc
mov
cwde
add
add
xor
add
add
aaa
cmp
test
add
jo
clc
rcr
retf
add
int3
add
rcr
bound
cmp
mov
push
xchg
retf
es
test
pusha
mov
add
add
mov
add
pop
fcmovnu
data16
add
in
push
add
xor
call
imul
lldt
inc
sti
add
rol
add
add
icebp
add
jmp
add
xor
push
mov
lahf
add
add
in
in
pushf
dec
push
jbe
jle
xchg
jmp
arpl
push
add
ror
add
rcl
sub
adc
cmp
stos
add
add
add
or
pop
mov
mov
cmc
ret
sub
stos
add
(bad)
fcom
cs
add
leave
inc
add
add
add
dec
jmp
xor
add
iret
fstp
push
jne
jns
push
add
mov
or
inc
add
mov
add
test
adc
sti
push
add
jno
push
push
stc
pushw
inc
xchg
add
or
or
add
mov
add
jb
mov
retf
add
add
pop
fdiv
jno
xor
retf
ds
push
popf
add
or
add
mov
add
mov
popf
add
xchg
push
pop
clc
in
sub
aam
loopne
add
add
add
ret
(bad)
lock
jmp
xchg
ins
adc
inc
add
mov
mov
std
in
jecxz
mov
dec
add
mov
scas
jns
push
test
push
pop
lds
add
fisttp
sahf
add
and
sbb
js
mov
shr
add
dec
add
add
std
sahf
int
div
stc
add
mov
retf
xchg
mov
add
addr16
dec
push
cli
lods
in
sti
mov
add
add
jmp
add
pushf
inc
add
outs
add
inc
stos
mov
add
and
push
push
xchg
movs
add
nop
dec
adc
ret
add
ror
rol
test
add
add
adc
popa
mov
add
add
add
add
push
add
fadd
xor
ss
rol
mov
mov
add
sbb
not
mov
or
aad
add
rol
push
je
loope
mov
add
jmp
add
add
sub
dec
rol
fnstcw
sti
rcr
xor
hlt
add
add
sub
jmp
out
icebp
inc
add
add
push
pop
or
pop
les
cld
test
mov
inc
add
add
jne
daa
add
and
push
mov
ret
in
repnz
mov
add
jp
rol
test
add
push
shl
test
add
cwde
jb
add
inc
mov
add
lods
add
(bad)
enter
add
xor
add
inc
add
dec
mov
add
rcl
inc
dec
add
add
add
fwait
scas
and
dec
mov
js
mov
in
add
mov
outs
fwait
add
mov
rcr
je
rol
add
inc
add
add
xchg
add
in
rol
lods
jnp
pop
add
push
mov
cld
add
add
and
add
push
add
out
ins
mov
add
rcr
loopne
add
loop
imul
pop
add
sbb
dec
pushf
pop
lods
push
jmp
jae
push
je
dec
push
add
mov
rol
add
int3
sub
xor
fild
cmp
push
jno
add
dec
inc
sbb
inc
add
and
mov
jne
hlt
enter
ss
aaa
add
cli
push
sbb
ret
mov
xor
cmc
and
test
xchg
add
xchg
jge
sbb
addr16
add
jmp
cmp
add
fistp
into
(bad)
daa
in
imul
cmp
push
(bad)
enter
mov
sbb
xchg
mov
daa
add
sbb
pop
cmp
out
outs
fild
add
shl
pop
inc
inc
out
xor
add
add
add
adc
jge
leave
add
out
add
add
add
rcl
test
xchg
xlat
test
pop
sar
push
scas
add
dec
add
(bad)
idiv
in
adc
push
add
push
add
inc
pop
fadd
xchg
adc
call
add
ja
scas
jmp
xor
fdiv
add
add
add
dec
arpl
add
test
push
add
pop
mov
add
jne
dec
stos
pop
out
repz
(bad)
add
inc
mov
adc
add
loop
fistp
cmc
arpl
test
mov
jne
add
imul
mov
idiv
mov
xchg
mov
jno
xor
add
mov
jns
cmp
sbb
sub
xor
pop
enter
aaa
mov
jecxz
arpl
fdivr
and
fld
jb
sahf
xchg
sbb
bound
in
push
add
stos
add
aaa
jae
xchg
dec
cmp
movs
stos
add
mov
das
add
add
add
lahf
clc
mov
add
jp
push
add
jmp
mov
(bad)
cdq
add
or
xchg
add
add
sti
shl
push
adc
add
add
cmp
sahf
add
add
push
repnz
xchg
add
rol
add
pop
fsub
sbb
sbb
mov
add
dec
sbb
add
cdq
push
in
adc
fcomp
call
add
add
or
popf
loop
add
add
and
push
push
rcl
push
add
adc
jp
add
aam
add
jo
pop
add
xchg
int
inc
sti
lods
sub
xor
ret
int3
aaa
add
sbb
or
repnz
ja
dec
lea
jl
fdiv
popf
cli
shl
add
dec
jecxz
add
jg
add
sub
imul
and
loope
adc
outs
sbb
inc
push
sbb
add
xchg
add
add
add
call
in
ins
and
mov
jbe
(bad)
add
(bad)
loopne
pop
retf
sub
and
add
cmps
add
cld
jne
retf
add
pop
xchg
lea
add
inc
stos
add
cmps
in
add
int3
inc
push
add
je
mov
add
add
div
retf
add
ja
jecxz
jb
repz
add
mov
add
lods
mov
call
pop
ret
xchg
push
add
adc
addr16
add
sub
jl
ja
add
dec
xor
rol
add
add
push
rol
fdivr
inc
mov
pop
add
or
add
and
js
sbb
stos
mov
cmps
retf
dec
add
add
ret
(bad)
sub
aad
int3
add
stos
test
stc
(bad)
imul
ltr
cmp
ficomp
sub
outs
pop
jns
or
mov
pmullw
lds
add
sub
add
mov
cwde
cs
inc
mov
test
ror
(bad)
add
fnstsw
add
popf
add
add
jecxz
sar
add
jno
adc
push
pop
add
sahf
sbb
adc
sub
add
jb
les
inc
mov
push
hlt
add
dec
ins
clc
dec
(bad)
fdivr
jecxz
(bad)
retf
sti
add
loope
jb
add
in
movq
pusha
or
cmc
test
outs
cmp
add
pop
les
add
stos
sbb
test
pop
repz
imul
test
mov
mov
cli
(bad)
ss
clc
setnp
add
push
jo
adc
push
add
int3
adc
jbe
sub
add
sbb
fdivp
push
pop
or
fsubp
add
iret
dec
add
cmp
fs
xlat
add
xchg
test
add
add
movs
add
add
add
xor
fs
movs
popa
mov
retf
cmps
add
push
mov
ficom
dec
push
loope
jns
(bad)
std
pop
arpl
popf
add
add
add
nop
aad
and
xchg
push
in
pop
sub
inc
lods
cmp
push
lea
add
add
hlt
pusha
add
rol
xchg
add
mov
xchg
sub
add
retf
add
jb
or
pop
cmp
jmp
xchg
inc
mov
mov
stos
xchg
adc
push
and
cmp
fucom
lea
mov
add
add
add
ds
add
cmp
loope
add
leave
or
jo
adc
adc
add
retf
int3
jecxz
imul
add
add
mov
add
mov
and
int
ror
add
fistp
add
out
add
push
add
add
jbe
jmp
add
pop
add
add
imul
xor
add
jns
pop
imul
aaa
add
mov
add
movs
dec
mov
xor
xor
mov
add
mov
daa
add
or
xchg
cmc
sbb
add
push
jg
or
sti
cs
test
or
add
dec
add
ins
add
jmp
jecxz
add
jmp
adc
add
movs
je
aaa
add
inc
dec
and
add
in
inc
add
add
cmp
(bad)
add
or
fwait
mov
gs
cmp
ret
add
add
inc
pop
add
push
add
add
add
mov
jbe
mov
stc
or
mov
cdq
cli
ds
ja
add
or
add
mov
sbb
sar
mov
add
push
jmp
add
hlt
rol
(bad)
sahf
loop
fs
fs
inc
cdq
out
add
xor
idiv
stc
(bad)
pop
lods
loope
js
push
icebp
call
ja
fst
nop
cmps
cmp
add
xor
jne
cmp
add
add
add
ret
add
mov
pop
cmove
rol
sub
add
cwde
adc
add
mov
dec
mov
cmps
add
mov
ss
jmp
pushf
jbe
shl
mov
repnz
daa
mov
fwait
add
repz
dec
add
add
cmp
std
sbb
sbb
add
sub
fdiv
inc
fcom
ins
ins
add
add
cmp
add
add
int
push
fwait
cmp
pop
cs
jne
and
fwait
retf
fisttp
bnd
xor
sub
cmp
cmps
out
add
das
lahf
cmc
inc
sub
fsubr
adc
push
sub
push
mov
adc
out
add
sub
jp
shl
add
(bad)
add
jp
add
and
xlat
ficomp
stos
add
imul
mov
out
and
and
pop
add
mov
cmc
(bad)
add
(bad)
aaa
add
jb
jo
add
jbe
add
icebp
loope
imul
add
lods
imul
adc
mov
out
inc
arpl
xor
xor
les
rcl
add
call
into
add
stc
sar
sbb
jmp
in
add
pop
lea
mov
ss
add
add
fsub
mov
cli
les
xor
add
aaa
add
mov
rol
mov
add
push
mov
add
adc
(bad)
aam
add
add
jg
push
movaps
add
movs
test
(bad)
dec
inc
add
inc
adc
mov
jl
fninit
pusha
ror
fs
add
rol
mov
arpl
in
adc
inc
add
add
add
add
ds
adc
fiadd
adc
push
xor
add
add
add
ins
add
add
add
mov
add
lock
test
jge
add
add
sbb
stos
add
add
test
push
lods
ror
add
add
clc
call
add
add
jecxz
je
js
fisttp
add
add
mov
add
or
jno
push
stos
call
loop
adc
add
xchg
rol
sub
add
and
adc
fisub
adc
jno
mov
add
fild
pushf
xor
add
add
rol
push
xor
sti
mov
add
mov
adc
add
add
pop
add
std
mov
add
xchg
cmp
pushf
js
loop
add
xchg
enter
add
jns
nop
test
add
daa
add
sbb
push
sbb
add
xchg
or
push
inc
pop
xchg
aas
add
repz
sbb
sar
pushf
mov
pop
repz
(bad)
pop
sbb
adc
test
inc
sahf
popa
ins
add
(bad)
push
out
inc
icebp
add
push
sub
xchg
dec
add
ret
add
arpl
push
xchg
pop
pop
jbe
add
xor
mov
cmp
fcomp
(bad)
jmp
aas
and
and
add
aas
adc
inc
inc
cmc
icebp
add
in
add
mov
add
mov
jnp
out
dec
add
cmps
movs
add
cmps
add
mov
mov
add
test
adc
dec
add
sub
add
cld
dec
lds
cmp
jp
sahf
in
data16
pop
mov
adc
cwde
add
add
pop
inc
inc
mov
inc
call
push
dec
add
aaa
les
add
jmp
add
add
or
not
add
xchg
add
mov
inc
add
add
jmp
add
nop
movs
sbb
pop
sbb
(bad)
pop
add
iret
jb
lea
add
push
sub
pop
add
xor
stos
mov
jnp
cmp
add
cmp
add
sbb
loope
add
add
dec
jl
mov
add
sbb
pop
add
add
add
sbb
push
retf
jne
cwde
icebp
sbb
and
jle
test
push
add
ss
add
loop
sub
sub
jmp
jmp
add
dec
xchg
pop
jecxz
adc
iret
jp
add
push
sub
add
sbb
push
push
jmp
enter
pop
jno
add
std
jge
push
add
mov
sbb
pushf
and
or
in
xchg
pushf
ja
inc
mov
cmp
add
add
mov
stos
sahf
add
lods
add
add
enter
jp
mov
int3
dec
dec
mov
movs
mov
scas
add
gs
iret
inc
and
or
add
add
add
nop
add
sbb
sub
pop
push
clc
popf
ds
dec
fdivr
repnz
mov
add
ret
add
add
xchg
ret
push
add
add
sbb
ret
lea
mov
mov
add
push
sub
add
pop
add
add
inc
sbb
adc
movs
add
jp
(bad)
div
add
shr
add
add
and
dec
jnp
xchg
add
jnp
call
add
fwait
add
sub
add
add
inc
cmps
add
cwde
add
inc
add
add
sub
(bad)
fild
xchg
ins
nop
js
sbb
ds
arpl
out
cwde
fs
push
add
aad
add
mov
lods
add
jmp
pop
xor
push
inc
idiv
adc
in
or
add
add
add
ins
pop
loopne
call
push
add
add
in
add
ds
and
pop
add
inc
retf
add
icebp
sbb
shl
add
sahf
xchg
test
pop
xor
loopne
dec
das
scas
add
cdq
add
add
lds
out
fistp
add
dec
add
imul
or
(bad)
xchg
add
add
add
call
stc
push
stos
add
out
add
pop
add
cmps
int3
add
dec
ja
mov
adc
inc
add
jae
lea
add
jmp
inc
out
add
clc
push
and
sbb
add
fdiv
sub
cmp
cmp
test
out
pop
mov
ret
add
jp
add
lahf
xchg
push
add
popf
iret
add
or
add
add
loope
add
add
lock
sbb
les
imul
xchg
add
(bad)
and
neg
ret
es
add
hlt
aas
fild
add
in
add
add
and
or
cmps
or
mov
imul
add
sub
push
add
jae
jae
add
add
inc
dec
add
outs
add
mov
jge
outs
add
or
push
xchg
add
jmp
mov
(bad)
aas
xchg
add
jne
scas
mov
add
push
pop
in
gs
jns
cmp
cs
cmp
adc
xor
addr16
add
add
add
xchg
add
add
dec
and
dec
add
add
(bad)
dec
stc
xchg
imul
xor
adc
cmp
jno
bound
ja
xlat
shl
add
dec
rol
in
dec
xor
xchg
add
int
push
push
jle
test
mov
add
das
xchg
add
add
lods
aas
pop
jge
popa
mov
add
inc
dec
outs
add
xchg
sahf
and
mov
icebp
mov
add
jecxz
add
dec
add
mov
mov
add
cmp
aam
mov
add
mov
nop
sub
pop
pop
add
xor
stos
pop
fistp
add
push
imul
lock
xlat
add
je
or
push
scas
sahf
mov
sub
pushf
xchg
ins
inc
add
add
xor
arpl
sub
mov
mov
add
and
add
retf
in
or
add
movs
inc
dec
mov
cld
add
jb
dec
cmp
add
sar
imul
repz
add
mov
sbb
in
push
push
js
push
add
add
call
pop
add
xlat
bound
out
in
sbb
add
loopne
lea
jge
aas
mov
stc
out
inc
add
sbb
dec
outs
add
add
into
adc
add
ss
or
add
add
add
sub
mov
(bad)
xchg
add
dec
int3
mov
ins
imul
mov
popa
and
adc
rol
mov
in
xchg
push
dec
out
add
ficomp
xchg
add
jmp
ins
pop
push
add
std
or
and
movs
or
add
push
(bad)
cmp
outs
stos
inc
jo
xchg
lahf
retf
add
retf
repz
aas
jmp
xchg
fst
test
sub
mov
and
cwde
test
sub
add
ret
inc
jmp
loopne
add
xchg
and
cmp
mov
xor
(bad)
mov
retf
mov
sub
fucom
add
int
add
lahf
add
add
in
js
int
fnstsw
rol
cmp
add
add
out
xchg
dec
add
sbb
out
lds
(bad)
js
add
jecxz
cmps
adc
daa
or
data16
add
lea
mov
add
or
les
dec
out
inc
mov
sbb
pshufw
(bad)
(bad)
jmp
jbe
add
dec
add
add
pusha
jo
push
pop
add
add
dec
adc
sbb
jbe
add
jmp
or
mov
add
aaa
dec
enter
jg
jp
pusha
in
add
mov
jge
call
pop
inc
mov
cmp
lea
or
xor
rcr
(bad)
arpl
add
inc
mov
add
movs
cmp
push
out
rol
daa
add
imul
in
adc
add
out
xchg
js
sub
stos
loop
mov
or
or
aad
(bad)
mov
data16
and
add
fiadd
add
test
ror
loopne
pop
add
fisttp
cli
xchg
call
lahf
jns
jbe
add
test
adc
mov
fs
cwde
cmc
push
add
cmp
add
add
jmp
add
push
pop
inc
push
les
xor
jno
add
call
sbb
call
jo
test
push
add
pop
dec
add
add
stos
add
add
push
outs
add
add
imul
add
ret
mov
add
add
loop
out
add
inc
add
mov
(bad)
xor
hlt
adc
pop
add
push
loope
sti
add
lahf
pop
lea
xor
jnp
mov
add
add
outs
add
in
push
(bad)
in
cmps
(bad)
lahf
add
add
push
mov
sub
push
movs
outs
inc
data16
adc
mov
add
add
mov
div
repz
inc
aas
pop
in
(bad)
xor
push
mov
add
movs
add
loopne
add
outs
mov
cli
imul
add
(bad)
add
ss
inc
add
add
add
mov
cmp
add
jl
lea
add
add
pop
sbb
cld
test
mov
sbb
dec
or
add
add
add
or
repz
inc
add
adc
arpl
dec
add
mov
call
adc
and
ficomp
and
adc
out
xor
or
xchg
mov
jmp
add
dec
lods
add
add
add
pop
add
add
inc
mov
add
pop
jbe
cld
push
add
add
and
adc
jbe
and
sahf
add
add
push
add
cld
add
inc
xchg
add
add
mov
xchg
xchg
xchg
add
add
push
jmp
fadd
fld
sub
repnz
add
mov
in
cdq
add
dec
or
sub
setp
xor
add
sbb
xchg
adc
add
push
hlt
add
int3
add
add
in
add
stc
test
add
add
push
fild
sbb
jo
aaa
add
pop
rol
xchg
iret
fmul
rol
cmp
gs
jb
fadd
inc
add
rcl
inc
adc
mov
add
dec
add
aas
out
loop
push
add
mov
dec
dec
push
mov
add
sbb
mov
or
inc
add
mov
cld
test
xchg
jbe
dec
sub
scas
and
and
xchg
dec
cmp
add
fcom
fs
jecxz
or
ficomp
ds
xor
loope
dec
inc
mov
xor
jecxz
cmc
aad
cmp
jb
add
and
add
in
ins
add
sahf
fld
jl
loopne
mov
sti
stos
pop
add
(bad)
rol
add
ins
add
pop
std
or
xor
(bad)
jne
pop
movs
add
inc
sbb
pop
jmp
mov
cld
adc
jle
sub
leave
mov
mov
mov
inc
enter
dec
add
jnp
in
add
add
test
add
jmp
sub
ret
into
cmps
add
add
add
pop
in
add
cld
nop
cs
leave
add
jmp
jmp
dec
add
lahf
xchg
div
and
xchg
xchg
add
add
add
inc
rcpps
inc
les
add
pop
test
dec
out
add
add
pop
add
xor
add
xchg
inc
adc
jo
adc
adc
add
neg
je
add
sbb
add
imul
lock
mov
cmc
shl
add
sar
das
add
jns
xor
cmp
or
bound
imul
add
sub
fs
add
(bad)
repz
add
jle
mov
aaa
pop
dec
push
test
pop
call
pop
outs
mov
xchg
jle
mov
inc
add
mov
add
mov
fsub
sar
dec
xchg
out
xchg
mov
stos
or
xor
rol
mov
add
jg
mov
out
add
or
and
and
cmps
imul
in
add
(bad)
sti
add
fs
lahf
sbb
movs
push
add
add
cs
push
in
hlt
repnz
aaa
add
in
mov
add
or
loope
add
jnp
sbb
add
mov
jmp
(bad)
in
fwait
add
jno
test
ret
add
dec
in
push
add
into
fidiv
arpl
ja
mov
add
stos
loopne
add
loopne
or
jnp
test
xor
sbb
cmps
leave
add
push
add
ins
add
add
jg
add
hlt
pop
jge
or
(bad)
lahf
movs
aas
pop
out
ret
add
retf
sbb
stos
loopne
ins
div
retf
in
add
add
cmps
add
cmp
add
(bad)
push
add
xchg
lds
dec
add
out
add
and
adc
add
push
ja
jge
add
(bad)
and
fsubr
or
dec
in
push
sub
fild
mov
add
xchg
lods
(bad)
aas
add
lods
dec
add
sbb
fistp
xor
xchg
fmul
loope
mov
add
add
jle
inc
cmp
jbe
add
fmul
pop
and
test
dec
dec
mov
arpl
sbb
pop
add
je
stc
mov
dec
sbb
fwait
mov
out
add
cmp
add
add
add
or
and
cs
add
mov
add
push
mov
add
add
push
add
cmps
adc
and
add
dec
xlat
add
loop
add
adc
(bad)
lock
in
jbe
or
pop
add
jmp
sub
add
cmps
add
add
out
mov
retf
xchg
out
add
adc
inc
mov
mov
mov
add
jmp
pop
add
xacquire
cwde
test
lods
add
sub
jp
and
xchg
and
ins
add
call
cwde
mov
mov
jle
sbb
mov
out
and
mov
and
mov
movs
add
sbb
mov
mov
add
xor
cld
mov
jmp
cmp
pop
pop
fwait
add
adc
cmp
xchg
lock
repnz
stc
loope
pop
push
nop
xchg
mov
stos
add
add
add
rol
icebp
sti
(bad)
lea
adc
jae
mov
sub
test
jmp
push
jmp
add
sbb
lock
add
push
cmc
pushf
mov
fsubr
mov
add
add
and
add
xchg
and
in
ins
add
xor
or
adc
sar
aaa
js
cwde
add
mov
xor
sbb
add
add
add
or
add
pop
add
psrlw
inc
imul
mov
adc
add
ss
add
js
pop
add
add
add
mov
xchg
mov
loopne
push
add
add
fmul
dec
push
add
cmp
or
sbb
mov
movs
add
js
repz
add
xchg
xchg
jns
jo
xchg
sbb
add
and
adc
add
push
sbb
retf
xchg
das
and
add
mov
stos
xor
jnp
add
cdq
add
push
jg
jecxz
xchg
icebp
push
add
arpl
mov
daa
add
inc
sub
cmp
sar
xor
mov
pop
fsubr
push
arpl
add
push
add
cmp
add
retf
js
sub
bound
add
int
movs
inc
add
jecxz
outs
aad
repz
mov
fild
inc
in
pop
sysenter
pop
int3
mov
add
aas
add
add
add
mov
mov
mov
push
add
mov
jecxz
rol
add
mov
add
add
cwde
add
or
xchg
add
sub
dec
push
add
push
add
mov
dec
add
push
loope
sbb
push
mov
add
adc
add
int
fisttp
add
push
jno
add
add
outs
add
push
pop
out
test
adc
xchg
sub
add
in
jb
pop
(bad)
mov
jle
add
mov
fisub
add
add
test
add
add
mov
cmp
adc
pop
add
dec
add
das
sbb
aad
add
push
sub
dec
out
mov
add
cmps
add
sbb
loopne
add
add
xchg
pop
add
pop
jl
add
adc
in
add
xchg
das
not
or
xchg
out
or
add
mov
jns
add
jge
push
jne
add
jle
hlt
sub
in
cmp
xchg
aas
je
es
adc
fdiv
mov
test
add
pusha
add
ret
dec
xchg
sub
out
add
out
int
adc
add
dec
les
xlat
mov
gs
add
xchg
add
xchg
add
add
add
mov
push
pop
add
inc
pushf
ins
add
push
dec
add
mov
ins
out
sub
cmp
add
add
add
xchg
sbb
add
mov
cmps
ss
fild
xor
lods
dec
je
sti
movs
add
cmc
pop
push
add
add
add
hlt
jmp
gs
add
lahf
pop
sbb
sub
add
xor
cmp
add
sar
add
test
add
add
add
cmp
lods
xor
and
add
sub
aaa
add
add
fsubr
inc
(bad)
shr
pop
cmc
and
mov
add
dec
sub
sti
inc
cld
rol
add
(bad)
mov
add
pop
add
lods
mov
sbb
add
push
xchg
add
sub
add
mov
add
mov
ins
push
xchg
ins
iret
retf
inc
adc
xchg
sub
fisubr
xchg
adc
fcom
or
movs
repz
sbb
mov
dec
sbb
add
add
add
add
loopne
cmc
and
sub
out
xchg
rcr
test
stos
cmp
sbb
cmp
pop
data16
bsr
int3
loopne
jae
add
dec
popf
add
push
scas
dec
icebp
imul
rcl
mov
pusha
mov
(bad)
add
int3
cmps
add
mov
mov
add
dec
jns
or
add
ja
in
add
test
(bad)
je
cwde
out
jne
add
add
int
add
pop
jge
add
leave
and
es
or
push
add
sub
add
add
ret
dec
sbb
lahf
jmp
add
fwait
xor
clc
es
dec
ret
fld
adc
mov
add
scas
lock
add
add
add
out
add
sub
push
xchg
add
mov
in
verr
add
add
push
nop
mov
rcr
sub
out
lods
cmp
pop
jns
add
outs
test
add
add
fwait
test
or
jns
dec
xchg
add
dec
sub
mov
xor
gs
add
in
pop
add
or
ins
(bad)
mov
arpl
sub
add
int3
or
sub
(bad)
shl
lods
js
lods
xchg
ret
add
pop
leave
add
add
mov
lock
mov
adc
out
push
bound
add
fadd
dec
rol
push
sar
add
mov
leave
jecxz
es
imul
(bad)
lea
pop
or
ret
mov
(bad)
out
jmp
add
adc
jae
fdiv
xor
push
add
add
xor
test
push
es
outs
inc
retf
loop
add
mov
test
outs
add
lea
pop
add
inc
test
call
mov
daa
add
inc
add
add
xor
mov
movs
add
je
shl
add
inc
ficomp
add
mov
test
rol
add
lahf
push
shr
and
into
sub
xor
adc
add
sbb
add
and
add
sub
push
add
adc
or
and
mov
dec
and
inc
add
pop
enter
in
aam
mov
mov
idiv
add
sub
sbb
dec
xor
nop
jne
out
add
call
scas
in
add
test
add
out
push
daa
add
add
mov
push
sub
mov
std
jl
daa
inc
add
test
or
add
(bad)
add
add
add
add
add
lds
add
add
fidivr
mov
add
cmps
enter
push
xor
int3
or
sbb
push
clc
add
inc
add
cmp
add
sbb
jle
add
add
or
jno
xchg
add
add
add
sbb
cmovno
add
jle
sbb
add
add
xor
jne
fs
jl
push
rcr
jmp
(bad)
add
imul
add
add
jg
std
cmp
test
or
sub
jg
add
push
add
sbb
xor
sahf
repz
aam
add
data16
test
or
add
mov
movs
push
jne
icebp
(bad)
lock
fld
cmp
xchg
add
fiadd
add
push
cmp
out
adc
add
int3
inc
loop
adc
popa
sbb
ror
pushf
add
cmp
outs
add
xor
popw
repz
and
add
aaa
add
inc
enter
(bad)
es
add
retf
add
add
jmp
add
dec
add
loop
xlat
add
add
xor
mov
dec
call
add
dec
mov
add
pop
retf
out
xchg
add
sub
adc
add
mov
jb
aas
cmp
xor
(bad)
xchg
fist
push
push
mov
pusha
std
sbb
add
mov
xchg
add
ins
add
push
add
add
(bad)
push
cmp
xchg
add
pop
add
push
add
sbb
dec
loope
push
rcl
dec
fdiv
mov
add
data16
imul
imul
add
add
sub
xchg
sbb
fwait
add
and
pop
push
add
adc
add
mov
add
sub
sub
or
ret
add
add
add
fsub
mov
add
out
inc
and
mov
sar
ret
add
xor
push
adc
or
es
sbb
addr16
add
iret
or
add
stos
or
add
xchg
(bad)
(bad)
cmp
inc
ja
add
rol
add
and
sbb
add
mov
add
test
push
lods
add
inc
adc
imul
add
nop
add
mov
add
add
ins
add
dec
mov
test
add
(bad)
popa
push
pop
sbb
pusha
cwde
pop
add
dec
jne
pop
add
jmp
add
push
mov
cmp
mov
out
scas
add
pop
jbe
add
xor
mov
add
add
add
xchg
repz
mov
aas
add
gs
add
add
add
xchg
sub
or
add
test
rol
(bad)
scas
add
add
push
add
mov
add
push
fs
add
add
push
add
sti
add
jecxz
add
mov
add
xlat
loope
jle
add
mov
aad
mov
outs
lahf
and
xor
push
add
inc
cmc
add
and
cld
fidivr
or
xor
add
add
and
add
adc
add
cmps
cld
add
xchg
add
add
add
movs
add
sbb
push
add
adc
add
add
add
add
in
stc
xchg
adc
fisubr
push
add
pop
pop
inc
mov
dec
adc
pop
pusha
jg
mov
add
sub
add
jo
or
dec
(bad)
push
fldl2e
add
add
jmp
add
mov
jns
jbe
and
jecxz
sti
sbb
add
add
add
xor
add
jo
add
mov
lock
mov
jl
jecxz
add
pop
xchg
aam
leave
dec
add
inc
fidiv
cmp
push
imul
xlat
add
arpl
adc
and
sub
ins
outs
gs
ja
inc
add
add
xchg
push
mov
cmp
mov
mov
sbb
sub
mov
icebp
add
ins
mov
xor
daa
clc
cld
add
add
jo
ds
jb
(bad)
cmps
push
mov
enter
add
test
ja
add
add
xor
or
hlt
dec
mov
add
loop
push
add
mov
(bad)
sub
inc
push
add
or
xor
cs
add
cmp
gs
jmp
pop
mov
add
mov
mov
add
inc
dec
mov
mulps
ss
jmp
jmp
fucomp
add
add
movs
js
add
add
pop
add
(bad)
call
xor
stos
add
sub
or
out
and
sbb
push
dec
mov
rcl
ret
fisubr
dec
rol
add
or
call
push
add
add
add
add
loop
(bad)
out
mov
shl
cld
adc
pop
mov
fild
mov
or
xchg
push
push
add
addr16
add
add
inc
lods
adc
mov
xchg
jmp
push
pop
inc
stos
push
jecxz
jo
add
ret
jle
mov
push
add
add
test
repnz
add
sbb
out
clc
cmc
pop
add
test
outs
add
outs
add
add
add
test
add
mov
add
push
add
add
movs
add
ret
add
add
add
xchg
add
add
xchg
aam
push
add
inc
jge
nop
add
fadd
loop
repnz
(bad)
add
in
add
jae
cs
mov
push
add
cld
inc
add
adc
add
ret
sub
add
or
(bad)
mov
(bad)
xlat
add
add
je
cwde
add
imul
xchg
push
and
fwait
add
add
dec
mov
add
adc
fwait
add
jb
loopne
out
push
add
rcl
shl
cmp
ret
add
and
dec
aam
fwait
inc
add
mov
ja
add
mov
or
test
cwde
fld
mov
and
mov
mov
dec
cmps
call
and
jno
push
mov
sbb
cdq
test
mov
add
lock
add
rol
push
out
xchg
cmps
add
inc
sahf
inc
test
fidivr
ss
add
add
call
repnz
repz
sahf
add
cmp
(bad)
add
push
out
mov
mov
retf
sub
pop
out
push
add
add
add
add
shr
and
pop
rcr
mov
add
adc
inc
add
add
(bad)
scas
xor
fiadd
ss
adc
pop
add
xchg
pop
add
mov
jecxz
movs
push
mov
xchg
scas
adc
add
mov
rol
fcomp
add
aam
sub
push
lock
cmp
pop
push
add
repz
frstor
add
add
or
cmp
xacquire
lods
scas
add
data16
adc
add
std
loop
add
or
es
add
(bad)
add
div
fiadd
ss
add
xchg
lods
inc
add
cmp
add
cmp
lahf
add
sbb
add
add
sub
stc
add
add
add
clc
adc
cmp
xchg
add
mov
pusha
xor
jmp
imul
add
out
add
pushf
add
sbb
cmp
arpl
mov
int
fdiv
push
dec
in
test
push
add
jmp
add
add
pushf
cmps
add
pushf
push
add
add
aaa
pop
sbb
movs
add
inc
retf
pushf
sbb
and
add
push
inc
add
jmp
add
call
sub
outs
movs
test
loopne
add
pop
jge
lods
adc
xor
push
inc
jb
add
pop
push
mov
loope
add
fcom
add
and
pop
pause
jmp
out
add
add
ret
xchg
add
adc
push
cmp
add
jle
(bad)
xor
pop
(bad)
call
add
push
ss
inc
add
test
mov
push
jo
lods
and
add
add
sahf
jecxz
add
sar
sub
or
add
lea
push
mov
adc
add
repnz
add
inc
movs
mov
mov
sbb
lods
or
lea
xchg
fiadd
es
add
cmps
add
add
sbb
imul
les
scas
cmp
ins
lds
pop
add
je
fild
pop
adc
jecxz
pop
add
add
add
movs
fwait
(bad)
stos
test
aam
cmc
add
and
push
push
add
add
in
cli
add
add
add
inc
push
add
add
aaa
inc
add
xlat
(bad)
pmulhw
add
add
lods
lock
out
add
add
push
adc
add
fadd
les
push
dec
nop
inc
mov
loop
add
fcomi
pop
mov
pop
(bad)
cmp
lds
call
(bad)
pop
add
xor
mov
fidiv
add
add
add
add
leave
rcl
cli
xor
popf
dec
dec
mov
mov
fimul
add
das
add
fwait
ins
jle
add
into
or
sub
add
enter
add
add
out
add
fucomp
push
add
aaa
and
mov
xchg
or
inc
test
inc
pause
add
scas
adc
(bad)
outs
push
sub
xor
add
pop
or
or
xchg
mov
cmp
add
imul
add
in
movs
loopne
sbb
inc
fistp
je
add
jno
ds
add
jbe
add
and
fs
pop
add
dec
add
dec
sbb
cmps
adc
ror
add
aad
mov
shr
xchg
test
add
(bad)
(bad)
out
xchg
add
ret
aas
add
and
add
movs
mov
arpl
adc
mov
dec
or
in
fcmovnbe
add
fadd
sub
add
cmp
xor
rol
imul
out
or
add
xor
adc
scas
add
cmp
add
in
add
add
xchg
push
add
rol
add
mov
cmp
test
jbe
add
ja
out
cmp
stos
mov
inc
das
or
ins
call
stc
pop
xchg
add
lock
cwde
or
jp
add
daa
cmp
test
add
add
clc
jl
add
dec
add
pusha
jg
adc
cmps
(bad)
add
fistp
push
or
add
push
add
add
jns
(bad)
(bad)
mov
add
push
bound
bound
repnz
cmps
sahf
test
add
outs
add
pop
pop
cmp
add
add
mov
sub
rol
xchg
xchg
push
add
lock
add
mov
add
xchg
push
sti
(bad)
add
dec
loop
add
push
add
call
inc
imul
mov
or
movs
dec
scas
int3
add
stos
and
(bad)
mov
mov
aam
aad
add
mov
dec
add
int3
add
lock
fcmovb
add
mov
std
(bad)
jge
add
sbb
add
rol
hlt
mov
add
sahf
sbb
add
aas
sbb
sbb
fucomp
add
fsub
ins
adc
add
mov
mov
add
add
add
add
(bad)
fild
jmp
out
stos
pop
inc
add
mov
outs
xchg
lds
add
jbe
inc
jae
mov
lods
jnp
addr16
fisub
or
add
add
push
jno
out
mov
jp
(bad)
fimul
jae
add
add
cmps
ins
add
add
mov
push
add
add
shr
add
add
add
scas
dec
sbb
(bad)
pop
add
sti
cmps
xchg
gs
push
add
add
add
lahf
push
sub
cmp
add
mov
add
xchg
mov
mov
adc
imul
jge
and
jno
call
xchg
inc
popa
in
inc
sub
xchg
push
mov
add
mov
dec
sti
inc
fiadd
add
add
dec
pop
push
sub
aas
mov
push
(bad)
add
add
dec
jnp
in
add
lahf
sbb
xchg
add
in
and
(bad)
(bad)
add
retf
add
mov
mov
mov
test
mov
je
rol
cwde
popf
loop
add
jbe
std
cdq
add
jp
add
pop
data16
push
adc
push
and
dec
dec
mov
add
add
add
ins
xchg
out
popf
cmp
xchg
pusha
sbb
cmp
aad
add
add
test
repz
add
add
add
sti
dec
out
int
add
call
popa
push
add
push
cmp
cmp
sbb
pop
mov
mov
push
aaa
add
cmps
dec
out
das
inc
or
cwde
imul
test
scas
js
xchg
bound
add
fild
inc
fiadd
push
lds
sub
fimul
mov
popf
add
push
bound
stos
add
fnstenv
fadd
pop
add
sbb
outs
add
inc
dec
mov
cwde
sub
mov
lds
add
pushf
pop
adc
mov
sbb
leave
xor
add
adc
sub
mov
cmps
sub
ss
sbb
scas
add
or
addr16
add
bound
dec
xor
sti
(bad)
and
aam
mov
push
add
mov
stos
fnstsw
ins
add
outs
pop
add
pop
add
mov
push
mov
add
mov
add
add
dec
add
pop
fsubr
sub
xchg
jmp
lahf
add
add
xor
add
jns
test
mov
pop
loopne
dec
imul
popf
add
jns
inc
add
mov
outs
std
add
imul
mov
or
add
popf
sbb
mov
mov
popa
loopne
leave
add
mov
add
add
mov
mov
mov
aas
inc
add
jmp
(bad)
mov
pop
in
add
add
add
add
add
add
aad
daa
adc
add
loop
mov
xlat
add
test
xlat
and
add
add
add
xchg
scas
or
cld
mov
mov
xchg
add
mov
xor
test
popa
pop
mov
pop
into
cmps
push
add
add
xor
lods
cld
imul
mov
iret
data16
xchg
pop
rcr
test
mov
add
cmp
cs
jmp
add
mov
jbe
adc
fstp
or
or
add
mov
and
jne
in
cmp
push
mov
imul
add
cmp
shl
push
repz
add
inc
cmp
add
jmp
retf
add
inc
and
add
and
cmps
push
sahf
inc
add
add
push
push
xchg
and
(bad)
xlat
add
and
pop
test
add
push
inc
dec
cli
add
pushf
jbe
test
pushf
add
aas
add
jg
sub
js
add
adc
ja
add
sub
add
call
add
iret
mov
or
call
sbb
je
add
mov
bound
ds
jecxz
pop
add
outs
jne
icebp
lds
and
call
add
imul
add
xchg
mov
stos
xlat
mov
sbb
inc
add
das
stos
mov
ins
xchg
adc
(bad)
into
add
add
add
xor
iret
popf
add
lods
std
pop
add
xchg
mov
push
add
imul
test
pop
out
push
clc
lock
jmp
cdq
cmp
loope
add
sbb
bound
arpl
out
add
aas
add
cmp
fidiv
add
sbb
push
add
add
aam
add
xor
mov
add
xor
pop
add
popa
and
and
xchg
add
jb
add
add
push
dec
data16
or
xchg
add
std
xchg
add
imul
(bad)
lock
push
or
add
sbb
sti
shr
inc
cwde
xchg
stos
add
popa
xor
add
push
cs
aam
adc
mov
int3
inc
int3
pop
mov
ret
out
loop
adc
dec
mov
jmp
les
mov
imul
push
add
jo
and
stos
add
push
cmps
scas
clc
cmp
sub
nop
xlat
div
add
outs
sbb
mov
in
dec
add
in
and
push
lock
out
jae
add
popf
lods
pop
sbb
inc
push
add
outs
xchg
test
and
test
jge
add
pop
int3
add
cmc
jge
movs
add
inc
pop
in
add
repnz
ins
rcl
mov
dec
pusha
sahf
add
sbb
cmp
dec
add
add
mov
cmc
jbe
imul
add
cld
add
and
and
jb
and
(bad)
movs
adc
mov
push
add
mov
fld
push
xchg
and
jno
adc
inc
adc
repz
add
fs
xlat
mov
clc
add
add
cmps
call
adc
push
push
dec
fild
add
adc
mov
jg
out
scas
cmp
jb
call
inc
add
add
mov
std
push
mov
call
xchg
fiadd
mov
iret
sbb
pop
dec
jmp
xor
add
adc
mov
shl
adc
lock
add
cmp
jo
pop
dec
fld
xor
into
ss
add
call
mov
hlt
nop
imul
outs
inc
xchg
and
sti
pushf
pop
add
shl
add
into
psrlq
pop
cli
fwait
cmp
add
(bad)
out
xchg
enter
or
lea
retf
mov
push
outs
inc
jo
sbb
stc
bound
and
mov
int3
or
pusha
add
jno
jnp
jp
add
push
dec
adc
cs
add
test
call
mov
test
into
dec
dec
pop
xor
xor
xchg
push
mov
add
mov
ins
inc
out
pop
repz
mov
sbb
adc
sbb
xchg
add
test
jae
add
mov
adc
rol
xchg
sahf
inc
out
popf
pop
(bad)
into
cmp
ror
(bad)
add
add
test
add
data16
xchg
add
xor
addr16
pop
fwait
(bad)
rcl
sbb
sub
or
outs
add
add
cmp
add
add
movs
push
pop
jge
rol
cmp
jmp
xchg
inc
or
nop
sbb
imul
xchg
adc
add
sti
sbb
rcr
add
loope
dec
int
add
xchg
pop
js
mov
pusha
nop
fidiv
xor
pop
add
and
push
add
rcl
icebp
jmp
rcr
mov
and
add
add
mov
add
inc
add
or
fadd
add
dec
pop
add
cli
sub
jae
jne
add
adc
pusha
lahf
push
push
jl
icebp
add
cmc
adc
fild
repz
in
mov
and
outs
inc
add
jbe
mov
in
add
add
add
mov
mov
add
in
push
add
add
scas
popf
add
test
fldenv
add
mov
add
dec
xchg
add
cmps
add
mov
je
je
cmc
jmp
add
sar
add
add
inc
push
pop
add
add
xchg
or
add
add
add
xor
add
or
add
pop
pop
mov
jle
add
fld
push
pop
dec
add
jge
push
in
aas
add
int
add
mov
xchg
and
ret
pushf
mov
ins
ds
add
daa
rol
sub
dec
inc
stos
dec
xor
add
repnz
add
mov
data16
mov
add
shr
pop
add
mov
mov
jmp
pop
aaa
add
add
add
mov
adc
fidivr
add
inc
add
mov
outs
mov
imul
cmp
xlat
imul
cwde
addr16
add
loope
add
or
jae
jae
add
jne
test
ins
sub
add
sub
(bad)
add
xchg
add
fild
push
add
add
rol
std
cld
push
sbb
cmps
repz
add
push
sub
retf
rol
out
nop
(bad)
call
jmp
sbb
adc
add
cwde
retf
add
in
add
adc
jp
cmps
mov
push
movs
add
pop
enter
and
call
add
call
xchg
dec
inc
mov
pushf
add
add
or
push
ja
ds
add
push
leave
xchg
mov
xor
jp
push
loopne
daa
jp
inc
mov
add
cdq
not
adc
ret
bound
out
and
add
sbb
add
pop
add
add
cmp
or
out
mov
add
mov
push
dec
int3
add
push
add
add
mov
jae
loop
sub
mov
add
add
in
fwait
ret
sub
add
add
in
in
ficomp
stos
imul
mov
xchg
and
add
pop
xor
add
ror
sbb
pushf
mov
add
sbb
fild
or
gs
or
jge
add
dec
dec
xlat
add
add
add
mov
rcr
add
pop
sub
ret
add
pop
push
add
js
add
add
ror
in
push
add
add
fxch
mov
jns
loope
adc
in
loopne
inc
lds
test
les
mov
xchg
push
rol
cmps
add
xchg
das
add
fild
jge
pop
popa
mov
jno
xor
push
sbb
in
xor
add
dec
add
add
scas
xor
jle
add
movs
lods
and
loop
add
repz
add
std
out
fstp
add
jl
aam
daa
mov
and
add
add
pop
xchg
rcr
sbb
lods
stos
add
or
mov
into
xchg
pop
sub
cld
add
out
pop
mov
add
xchg
add
pop
add
ror
add
add
sub
sub
add
je
mov
mov
pop
into
mov
mov
mov
pop
mov
sahf
push
add
movs
push
inc
test
add
or
add
and
leave
outs
imul
add
repnz
fisubr
aas
xor
add
add
test
ffree
add
xchg
cld
add
dec
mov
lahf
xor
lock
jp
sub
sub
fldenv
inc
jo
or
mov
add
mov
add
add
sub
inc
ficom
dec
add
dec
lods
push
mov
cmp
add
addr16
add
xchg
repnz
xchg
xchg
or
jne
nop
add
xor
add
fisttp
(bad)
cmc
add
inc
add
pop
inc
add
adc
and
adc
clc
sbb
xor
jbe
je
iret
or
in
inc
push
add
cli
pop
(bad)
cmp
add
adc
iret
add
(bad)
call
xchg
add
idiv
cld
mov
fisttp
mov
add
xchg
jne
jmp
inc
adc
mov
mov
add
add
shl
sub
add
cmp
push
mov
jns
xchg
pop
dec
add
add
ja
mov
add
add
outs
cli
add
dec
movs
add
ss
mov
mov
add
jmp
or
add
call
jns
add
icebp
pop
add
shl
movs
icebp
add
add
dec
add
pop
add
add
xor
movs
add
in
dec
add
call
mov
add
pushf
add
and
add
cmps
add
adc
mov
xor
add
add
add
rdrand
add
or
add
and
out
add
add
add
shl
mov
lock
retf
popa
sahf
cld
add
add
push
add
add
add
mov
jbe
fisub
jb
pop
add
xor
add
outs
jle
ins
add
mov
dec
push
add
add
lods
add
cmp
jb
ja
test
ret
xchg
add
mov
in
ins
add
add
add
add
(bad)
sub
sub
(bad)
jmp
xchg
or
(bad)
repz
loop
add
popf
in
add
xchg
adc
mov
jnp
sahf
data16
pop
lods
pop
pushf
add
add
push
inc
pop
add
and
mov
nop
pusha
add
mov
add
call
add
add
dec
add
add
add
or
aas
xchg
mov
das
add
pop
movs
mov
jns
add
inc
rol
jb
add
xchg
inc
retf
add
pop
dec
push
ins
add
dec
and
(bad)
enter
xor
mov
inc
mov
xchg
add
mov
(bad)
aad
imul
loope
outs
add
rol
inc
and
add
jl
in
add
add
add
(bad)
push
sub
repz
test
ror
sbb
aas
popa
and
mov
add
add
pushf
fistp
outs
(bad)
out
add
cmp
nop
add
add
mov
pushf
and
add
js
add
jbe
xchg
jl
adc
pop
xchg
xchg
add
add
add
ret
test
fcom
mov
push
mov
jle
add
or
add
xchg
into
sbb
out
sbb
add
jbe
sbb
stos
add
dec
mov
adc
inc
add
add
add
lods
xor
and
outs
jmp
add
jecxz
add
mov
rol
mov
jmp
push
(bad)
dec
lldt
mov
add
(bad)
retf
cmps
cmps
das
jae
sbb
clc
add
fld
aad
out
cld
mov
lock
jae
add
add
movs
add
(bad)
add
pop
sub
jecxz
fs
add
xchg
sbb
add
jbe
imul
mov
inc
xchg
add
add
daa
jns
or
cli
addr16
mov
fnstcw
add
ret
pop
int
mov
outs
add
jmp
adc
add
pop
pop
cmp
add
outs
in
and
lods
add
push
add
add
shl
inc
add
les
add
mov
aad
sahf
add
fadd
arpl
icebp
jle
add
mov
add
nop
xchg
add
adc
add
jno
add
add
mov
jmp
cmp
add
pop
push
popa
stos
and
fisubr
mov
call
add
mov
rol
add
add
add
aaa
mov
bound
ret
and
push
mov
std
je
xchg
cmp
jge
mov
jns
(bad)
mov
mov
call
cmp
fadd
ror
cmp
aad
xchg
sbb
in
add
xchg
jmp
mov
add
push
out
add
lock
jle
dec
dec
sbb
mov
add
popf
xor
sbb
sbb
test
pop
add
clc
jns
icebp
in
fadd
inc
in
jge
add
mov
sub
sbb
and
and
sar
mov
add
mov
cdq
pop
xor
pop
jno
lods
in
xchg
pop
add
add
fs
stos
add
aam
sbb
in
push
add
add
and
and
fiadd
sbb
or
add
add
fbld
dec
add
xor
sbb
or
adc
scas
dec
mov
loopne
xchg
add
xor
add
shr
mov
mov
in
and
add
xchg
mov
or
pop
add
add
add
dec
pop
enter
je
inc
mov
add
dec
mov
add
pop
and
add
mov
fnsave
enter
pop
xchg
(bad)
ret
sbb
add
push
sbb
cld
mov
add
popf
popa
jp
push
iret
inc
add
jge
jmp
mov
push
(bad)
xchg
mov
add
cmp
jmp
mov
int3
add
cmp
cmp
cmps
sahf
call
add
ins
mov
inc
jae
xchg
pop
add
add
fbstp
add
push
sub
mov
xchg
add
gs
movs
imul
pop
popf
add
sti
push
aaa
add
in
stos
sbb
inc
add
add
cmp
out
inc
add
add
add
test
add
dec
jnp
add
fsub
mov
loopne
add
icebp
retf
cmp
mov
jo
add
pop
jnp
push
add
sub
dec
sbb
xor
add
inc
dec
add
fadd
call
jo
hlt
out
add
fwait
in
add
or
xchg
sub
inc
dec
scas
lahf
jae
add
ins
add
add
(bad)
add
sub
xor
jg
add
add
xor
idiv
test
add
cmps
add
mov
addr16
clc
mov
loopne
bound
(bad)
cmp
mov
add
ror
xor
icebp
shr
add
mov
add
(bad)
sahf
add
mov
add
pushf
add
add
add
add
and
mov
push
and
add
ret
xchg
add
jb
mov
add
rcl
add
inc
imul
jno
add
loop
inc
add
add
cmp
add
pop
leave
add
xor
out
std
ja
xor
add
cmp
add
ret
add
bnd
data16
jge
sub
(bad)
adc
xor
add
jp
add
xor
add
push
call
xchg
add
sbb
shl
leave
cmp
loope
mov
add
add
inc
add
push
inc
add
mov
fld
inc
xchg
out
sahf
or
fisttp
dec
ins
fild
add
test
aaa
push
push
pop
sbb
test
lea
sti
jp
add
les
rol
sub
add
cmps
adc
aad
mov
fild
add
jbe
lea
jo
sbb
int3
add
add
add
es
add
xchg
(bad)
in
cmp
push
add
add
add
pop
int
bswap
mov
cmps
das
cmp
cmp
adc
test
add
fs
mov
xor
add
out
es
pop
cmps
cmp
add
add
sbb
cdq
xchg
add
xor
add
xchg
pop
fld
xchg
pusha
add
push
imul
add
adc
fidivr
mov
xor
lods
repnz
aaa
or
add
adc
mov
add
xor
fadd
dec
xlat
mov
sub
je
inc
add
inc
add
mov
add
es
inc
sbb
xor
lea
add
adc
call
jle
and
jmp
adc
mov
adc
dec
push
sahf
add
xor
add
(bad)
fadd
push
and
push
add
outs
xor
and
repnz
enter
cmp
add
dec
clc
and
mov
adc
and
enter
int3
cmp
scas
lock
aad
sbb
add
ins
push
sub
aad
stos
lea
jns
cmp
(bad)
add
cmp
out
dec
xor
add
les
cld
xor
jg
loop
cs
add
jns
add
std
add
mov
mov
add
mov
xor
cld
mov
add
fadd
fild
sar
push
loope
push
repnz
daa
add
adc
mov
lahf
add
retf
enter
jo
lea
scas
daa
add
add
cmp
stos
sub
add
push
pop
ja
sbb
xchg
xchg
rol
and
add
cmp
movs
add
add
mov
add
nop
adc
pop
sbb
cmp
inc
int3
lods
add
jg
repnz
ret
repz
pop
add
mov
dec
aam
dec
add
cmp
push
in
sbb
pop
add
add
stos
cmp
mov
inc
mov
jecxz
int3
mov
imul
inc
add
cmp
add
lock
pushf
inc
add
out
mov
fild
iret
add
sbb
jp
sahf
mov
out
lods
inc
jae
fadd
aaa
add
add
int
cmp
add
mov
cdq
add
aam
add
sbb
or
add
add
pop
call
add
add
outs
inc
add
add
inc
add
cmp
add
sbb
add
add
add
stos
aas
inc
add
enter
mov
pop
add
sbb
mov
fs
sub
(bad)
pop
and
das
aaa
add
push
add
cmp
mov
mov
jecxz
ja
mov
xor
add
out
mov
inc
pop
xchg
xchg
leave
add
mov
arpl
test
fdiv
add
mov
add
mov
sub
call
jp
add
das
pop
adc
pusha
mov
cwde
pop
mov
and
xor
icebp
add
dec
mov
push
add
std
outs
add
add
je
ret
outs
and
data16
ja
cmp
bound
and
scas
add
mov
inc
mov
inc
add
outs
adc
ret
add
jmp
iret
and
retf
mov
cmps
mov
add
add
pop
add
add
test
add
rol
pop
fld
loope
inc
pop
add
jmp
add
mov
and
aaa
lods
shr
cmps
inc
les
dec
cmps
test
sti
movs
add
retf
mov
cmp
add
test
add
aad
add
add
movs
add
es
retf
pop
rcl
fiadd
xchg
ins
or
add
add
stc
aaa
add
pop
leave
push
add
xchg
dec
add
xchg
pusha
jp
add
mov
add
pop
ret
inc
loopne
and
push
movs
mov
and
lea
out
lds
add
test
jmp
mov
aad
dec
add
test
jnp
add
lea
ins
push
inc
ss
sub
sub
add
add
ds
neg
adc
push
fistp
mov
movs
int
add
jge
add
call
cmp
arpl
add
outs
jb
test
cmp
add
adc
cs
add
xchg
sti
movs
add
xchg
(bad)
jns
inc
dec
mov
add
add
add
mov
addr16
add
fcomp
add
or
add
popa
stc
cwde
mov
jmp
mov
jl
add
cmp
js
push
cli
add
ds
jmp
add
add
pop
cmp
sahf
add
adc
mov
sahf
sbb
(bad)
mov
push
retf
add
dec
mov
add
cmps
pop
adc
retf
add
add
inc
push
popf
dec
add
push
or
ins
loope
popf
inc
mov
push
add
mov
push
add
dec
nop
sbb
in
out
add
xchg
jns
mov
into
ror
cmp
mov
pop
mov
add
jp
add
es
add
add
mov
push
stos
add
add
add
add
mov
inc
add
jg
mov
stc
pusha
add
jbe
sub
add
mov
aad
add
cmps
fisubr
push
mov
cdq
cdq
jne
add
xchg
lahf
add
xor
in
xor
ins
fild
js
dec
add
mov
push
add
mov
sbb
add
mov
dec
gs
pop
push
mov
adc
jne
jecxz
loop
sbb
mov
sbb
add
dec
push
cwde
mov
mov
imul
push
add
sbb
push
scas
mov
cli
adc
sbb
icebp
xchg
out
mov
push
loop
add
adc
je
lock
(bad)
mov
call
add
add
jg
out
push
add
add
adc
add
mov
pop
addr16
inc
stos
scas
mov
pop
outs
push
add
ins
cmp
add
cmp
fidiv
jge
add
sub
comiss
jp
enter
retf
xchg
or
sbb
cli
jb
(bad)
add
sub
ja
dec
mov
push
xchg
les
add
add
cmp
add
lahf
push
add
test
jae
rol
in
cli
pop
frstor
and
xor
and
and
add
mov
fisttp
les
in
imul
mov
xchg
push
fwait
add
popa
lea
sub
add
add
mov
pop
add
cld
fist
mov
adc
pop
test
adc
int3
xchg
js
xchg
or
add
add
into
shr
ficomp
not
in
add
(bad)
add
add
and
push
mov
xchg
clc
jb
add
and
jbe
or
jo
out
add
sub
inc
imul
pop
std
add
add
jmp
xchg
aam
cli
call
jnp
es
and
shr
jmp
mov
sub
ret
fsub
add
or
outs
add
imul
adc
inc
add
inc
pusha
add
ficomp
add
sbb
pop
dec
ret
dec
pop
mov
repz
mov
cmp
add
lods
cwde
mov
add
mov
add
(bad)
add
add
xchg
cmps
loopne
jmp
movs
or
inc
add
data16
jle
pop
mov
ret
inc
sub
fadd
pop
clc
jo
inc
mov
or
push
add
fild
nop
scas
lahf
add
add
add
out
add
sub
and
add
mov
add
add
repnz
adc
stc
pusha
movs
or
mov
lds
inc
add
add
and
xor
out
mov
add
add
add
mov
add
xor
add
push
xlat
mov
push
fs
sar
stc
loopne
mov
jmp
mov
add
jnp
inc
ins
sub
push
cli
add
rol
sub
sub
add
sbb
bound
(bad)
mov
add
pop
add
cmp
xor
call
add
mov
ret
push
add
sbb
sbb
add
rol
add
sub
push
popa
jne
mov
add
fcomp
aad
dec
outs
imul
clc
add
sbb
mov
add
jne
pop
ins
bound
inc
add
out
shr
add
add
rol
mov
add
rol
popa
push
mov
add
add
clc
inc
mov
add
fadd
jmp
cmp
repnz
add
push
loopne
jl
add
dec
les
dec
add
and
dec
cmp
push
add
or
add
cdq
push
mov
icebp
repz
xchg
stos
add
jmp
add
dec
add
add
jecxz
out
xor
and
(bad)
ret
int3
mov
jle
cmp
into
movs
add
add
adc
add
add
xchg
rcr
xchg
ror
scas
ret
test
jo
(bad)
hlt
add
add
or
rcr
lea
xchg
cmp
test
mov
add
add
push
aaa
add
mov
xchg
jb
nop
jmp
add
add
adc
sub
mov
add
std
call
add
jp
mov
add
call
add
sbb
shr
add
pop
add
mov
add
and
movs
sbb
std
inc
and
or
push
xor
xor
add
aam
lods
outs
ss
scas
cmp
jg
jmp
dec
add
or
in
xor
jl
inc
push
or
push
jbe
imul
inc
sbb
xor
mov
js
in
jmp
imul
pop
add
retf
xchg
repnz
pop
imul
cmps
mov
add
cs
call
fs
add
fadd
pushf
icebp
mov
jmp
xor
add
push
jo
fimul
fadd
mov
add
or
repnz
add
push
sub
in
xor
sbb
mov
add
add
push
jle
xor
add
jl
out
stos
add
pop
xchg
mov
aas
(bad)
push
add
sbb
xchg
add
add
mov
push
cmps
add
fstp
add
add
fs
add
(bad)
xchg
cmps
add
push
add
mov
(bad)
retf
jle
jne
leave
add
xchg
add
add
cmps
imul
xchg
add
fadd
xor
add
add
js
fld
xchg
add
add
dec
add
and
sbb
push
sbb
inc
mov
mov
xor
inc
dec
(bad)
jo
rol
adc
or
add
cmps
add
add
add
jnp
call
sbb
fistp
add
cmp
int
add
add
in
enter
pop
pop
add
es
add
cmp
add
cwde
inc
jae
push
add
add
addr16
mov
push
xor
retf
bound
xchg
jge
add
sbb
mov
lock
add
rol
adc
push
push
add
cli
add
mov
add
xchg
add
mov
inc
add
add
aas
in
fisubr
and
and
inc
test
and
cmp
add
sub
dec
add
add
fadd
pop
xor
std
inc
add
add
mov
pusha
cmp
test
sbb
jb
pushf
loope
add
bound
sti
sub
clc
retf
push
(bad)
add
add
daa
add
cld
call
add
cdq
sub
xor
ja
and
add
(bad)
test
iret
movs
retf
or
jo
leave
add
add
or
sub
in
jmp
stos
jecxz
das
call
or
das
add
jne
add
rol
add
rol
add
lahf
ret
push
add
inc
add
in
add
rol
pop
test
outs
add
and
mov
inc
mov
jno
rol
add
add
cld
call
and
xchg
add
jno
xor
push
fnsave
sar
add
rol
sub
adc
faddp
cdq
rol
les
xor
dec
loop
pop
push
fadd
fwait
sub
xchg
dec
mov
stc
add
xchg
sbb
add
pop
ds
adc
add
int3
add
sqrtps
adc
mov
pop
pop
into
rol
jo
add
add
aaa
add
add
dec
add
pop
xchg
sbb
ss
add
je
sub
arpl
lea
lea
fnsave
add
pusha
test
push
add
add
inc
mov
and
add
add
xchg
inc
add
cmp
add
cmc
sub
add
add
xchg
mov
add
add
or
add
int3
jmp
cmp
push
fiadd
or
fwait
out
fs
pop
push
add
xor
outs
add
push
shl
fcmovb
pop
retf
add
arpl
nop
cmp
sbb
pop
xchg
lock
fadd
mov
add
lock
pop
inc
fld
add
outs
mov
lds
repz
cdq
mov
gs
mov
add
xlat
imul
dec
call
add
popf
stc
push
repnz
arpl
call
jp
jae
inc
add
imul
jl
pushf
and
dec
add
add
movs
jmp
pop
add
xchg
add
add
add
adc
(bad)
add
add
retf
mov
mov
or
add
(bad)
stos
sub
in
outs
fisttp
add
add
mov
jmp
hlt
add
jae
add
or
add
iret
mov
xor
lahf
xchg
call
leave
add
sbb
sbb
in
add
or
shr
add
add
jo
add
out
push
add
add
(bad)
push
in
or
test
lea
add
xchg
lods
dec
in
mov
mov
add
and
inc
leave
cmp
jo
fld
add
jmp
div
mov
xor
dec
mov
jns
int3
lock
xchg
into
jns
and
add
popa
dec
push
push
ss
dec
stos
outs
add
das
add
outs
(bad)
fiadd
out
jecxz
mov
fs
icebp
add
add
sbb
(bad)
dec
loop
add
aam
dec
add
xchg
add
sbb
and
das
xchg
cmp
pushf
cmp
push
add
jno
push
jg
add
in
add
add
jno
add
imul
xchg
xor
sbb
pushf
mov
aad
mov
add
cdq
pop
fld
ret
mov
inc
or
jecxz
add
movs
out
pop
loop
arpl
stc
sbb
xchg
add
add
rol
xchg
mov
sbb
add
mov
aam
add
jbe
xchg
jo
cmp
js
ja
pop
adc
push
shl
push
shr
add
lock
shr
inc
add
add
fwait
hlt
sub
sar
add
and
or
pushf
cmp
hlt
jp
mov
jno
std
and
and
pop
sub
test
int
mov
jno
adc
or
add
fidivr
add
add
call
or
outs
add
jg
inc
ret
jmp
add
add
add
dec
add
scas
mov
nop
out
add
in
dec
add
iret
inc
call
inc
add
stos
jnp
add
out
icebp
xchg
add
adc
adc
bound
or
mov
int
xor
loope
add
ss
retf
repnz
in
mov
add
pop
(bad)
mov
and
push
sldt
jl
(bad)
in
xor
add
add
dec
idiv
pop
and
ss
in
adc
sbb
adc
add
or
repz
rol
add
mov
jp
add
add
lock
nop
call
add
sbb
test
mov
aaa
xchg
xor
pop
int
je
dec
add
add
add
lock
add
pop
push
clc
add
mov
add
jbe
es
dec
arpl
rcr
adc
mov
fdivp
clc
add
fadd
push
loop
add
fcmovnbe
mov
add
dec
call
gs
(bad)
inc
ins
in
dec
add
xchg
add
les
movs
bound
fmulp
mov
xchg
xchg
xchg
add
xchg
add
add
aam
push
add
test
adc
add
sahf
cmc
das
add
stos
add
push
add
jo
sti
add
add
mov
add
push
adc
pop
add
mov
add
push
(bad)
mov
jp
add
add
jno
dec
mov
xchg
add
pop
push
int
rol
imul
or
iret
imul
mov
add
inc
pop
add
add
adc
add
xor
pushf
ja
add
in
mov
sar
jle
in
push
add
retf
fiadd
adc
add
xor
adc
add
and
call
sub
iret
add
cmp
out
in
adc
push
add
mov
sub
push
mov
add
add
push
add
xchg
jl
fld
pop
or
add
sahf
pop
add
loop
inc
cmps
mov
mov
lds
add
add
int3
add
loopne
out
sbb
(bad)
xchg
add
mov
sbb
dec
add
dec
arpl
or
js
xor
add
ins
xor
fwait
ret
(bad)
fidivr
mov
add
test
hlt
push
jnp
sub
add
dec
add
les
add
jmp
add
outs
loopne
push
mov
add
(bad)
jge
test
xor
push
ret
fidivr
aaa
cmp
and
pop
ret
fild
aad
jns
or
mov
dec
add
loop
addr16
add
xchg
add
add
dec
add
addr16
add
cmp
out
xchg
mov
add
add
add
add
xchg
pop
mov
lock
scas
les
rcr
xchg
add
stos
add
add
mov
mov
rol
add
add
fldcw
inc
jl
adc
cwde
mov
xchg
xchg
add
cmp
mov
in
xlat
jp
jmp
das
or
mov
add
sub
xchg
icebp
cmp
add
add
outs
add
adc
das
outs
add
test
test
out
es
gs
imul
daa
add
add
enter
add
and
add
fdiv
ret
mov
movs
fbstp
adc
sub
cmc
add
daa
jle
xchg
mov
add
mov
xchg
nop
in
mov
mov
jg
lahf
shrd
jmp
jne
xor
(bad)
ss
hlt
repz
call
add
add
jg
jns
cmps
popa
push
push
add
add
add
push
call
pop
(bad)
(bad)
add
add
xor
cmp
pop
add
data16
add
fs
mov
dec
add
add
test
push
mov
popa
add
add
mov
push
inc
lods
mov
jbe
jmp
inc
movs
movs
add
mov
add
add
call
add
add
inc
mov
mov
jmp
xchg
cmp
mov
(bad)
add
pop
add
add
xchg
jle
adc
mov
fimul
mov
mov
adc
jp
adc
add
fld
fist
outs
rol
mov
add
add
shl
adc
add
imul
sahf
rol
add
add
add
mov
fsubr
mov
add
mov
add
add
test
in
arpl
xchg
in
or
aaa
mov
add
or
ds
cmps
add
or
js
cmp
rcl
xchg
cwde
add
aas
add
test
mov
test
mov
popf
and
or
push
ins
pusha
test
stos
les
pop
and
pop
fnstenv
and
(bad)
jle
add
push
sbb
push
sahf
out
mov
jno
and
inc
(bad)
fcmovnu
sbb
adc
dec
add
mov
fcomp
push
scas
scas
and
xchg
dec
inc
mov
shr
pop
xchg
push
push
hlt
movs
fmul
shl
nop
mov
fcom
iret
or
sbb
and
in
and
jp
inc
mov
jae
jle
mov
cs
sbb
cmp
adc
adc
jb
push
inc
jecxz
fild
mov
fistp
mov
inc
adc
xor
cmc
ss
aad
jecxz
add
cmp
shl
push
push
mov
xor
and
ins
push
xchg
xchg
mov
retf
repnz
mov
mov
iret
(bad)
cs
adc
repz
into
and
fisubr
ss
pushf
into
adc
lock
call
ja
cmp
sbb
pop
shl
cmp
jmp
(bad)
adc
and
xchg
push
je
pop
sub
ret
fs
scas
xchg
ret
das
test
jne
inc
pushf
neg
jnp
push
aas
xchg
jmp
sahf
sub
jnp
inc
mov
clc
(bad)
cmp
icebp
leave
jmp
adc
in
or
test
cmp
hlt
cmp
sbb
mov
jmp
mov
mov
pop
sbb
mov
cli
leave
jbe
add
cli
add
sbb
arpl
in
add
mov
dec
xchg
add
or
add
fadd
gs
add
jl
or
dec
add
dec
jmp
dec
mov
pop
retf
shl
add
xchg
or
add
pushf
add
push
add
stc
ins
imul
pop
add
add
sbb
sub
add
add
sgdtd
jmp
adc
jmp
lods
add
xchg
stos
mov
iret
push
retf
int
add
add
iret
add
add
add
or
inc
cmp
jne
scas
xchg
add
add
icebp
pop
add
xor
mov
fiadd
adc
(bad)
ror
or
add
enter
mov
mov
ror
les
ins
add
mov
cdq
int3
arpl
push
pop
pop
add
add
test
add
out
add
add
add
add
sbb
ror
sub
add
ins
icebp
or
lods
add
xchg
xor
lahf
aam
out
ds
cmp
loop
out
add
or
add
push
leave
loopne
jle
add
scas
dec
clc
xchg
add
jno
int
add
jmp
movs
jo
in
add
sahf
lds
retf
ret
in
inc
xchg
push
add
cwde
dec
add
pop
push
add
loope
mov
repz
or
inc
das
add
add
(bad)
(bad)
(bad)
adc
mov
inc
mov
sub
(bad)
out
add
jno
cwde
add
mov
repz
jnp
add
shr
add
cs
out
xchg
idiv
sbb
push
mov
mov
add
sbb
and
dec
add
add
add
xchg
dec
mov
mov
add
jge
adc
add
xchg
pushf
dec
cmp
push
stc
jle
fincstp
add
test
(bad)
clc
add
add
add
add
push
xor
outs
add
mov
add
iret
pushf
add
pop
and
adc
add
add
fst
ja
add
test
or
xlat
pusha
add
loopne
add
out
xchg
(bad)
add
mov
xchg
inc
xchg
ficomp
sub
in
xchg
add
inc
leave
(bad)
icebp
(bad)
mov
retf
add
cdq
add
add
add
add
add
rol
fcom
cmp
adc
retf
cmp
add
fsub
scas
add
adc
add
add
xchg
fsubr
inc
inc
add
xchg
movs
add
xor
mov
or
aaa
aas
(bad)
fadd
xchg
push
rcr
lock
add
cmc
xchg
lock
xchg
and
add
and
mov
add
pop
loopne
and
stos
add
add
jb
int
sub
inc
add
add
scas
xchg
push
add
mov
jle
int3
push
dec
pusha
and
add
add
cld
or
hlt
(bad)
xlat
adc
jge
add
sbb
or
pop
mov
adc
and
add
retf
rol
rcl
add
dec
add
and
cmps
add
sbb
add
jl
and
add
bound
and
mov
pop
add
add
retf
add
dec
aad
test
scas
jecxz
stc
or
xchg
pop
fadd
fscale
xlat
jno
xchg
outs
icebp
dec
push
dec
loope
mov
pop
nop
sub
add
(bad)
lldt
jae
into
add
cmps
das
mov
aam
(bad)
scas
add
add
add
add
dec
mov
or
js
sub
push
pop
jne
cmp
add
test
jp
popa
add
pop
arpl
(bad)
enter
and
inc
cli
add
adc
repz
jb
add
xchg
pop
push
xchg
popf
adc
add
add
add
push
mov
mov
xchg
push
add
mov
sbb
mov
xchg
cmps
out
add
sbb
lds
mov
mov
xchg
pop
add
cmp
call
sbb
add
xchg
add
add
sub
and
xchg
das
stos
add
jmp
mov
bnd
add
clc
mov
in
stc
mov
add
fwait
loopne
aad
jecxz
xchg
iret
sub
sbb
cmps
bnd
cmp
xchg
and
add
gs
shr
push
mov
jp
add
(bad)
adc
loope
xchg
(bad)
nop
scas
pop
mov
add
add
shl
jnp
out
inc
or
mov
pusha
hlt
mov
test
cmps
jmp
mov
add
add
cmp
std
add
inc
add
loope
jl
add
sub
cmps
mov
add
add
inc
dec
std
add
mov
sub
leave
xor
sti
add
cli
add
jbe
add
rol
add
(bad)
ror
mov
bound
rcl
add
add
aam
push
out
add
repz
sbb
lea
dec
stos
add
pop
sti
add
bound
add
mov
xchg
push
cwde
in
add
add
push
add
fmul
mov
jns
loop
cmp
jl
or
jnp
add
add
lock
add
cmps
lea
pushf
or
xchg
stc
stos
adc
or
cmp
outs
fistp
jp
aaa
add
or
add
add
add
add
xlat
xor
dec
ror
add
rol
test
mov
adc
add
sahf
add
mov
add
dec
shl
add
sbb
add
aaa
dec
adc
imul
sub
add
jmp
sbb
jne
add
add
pop
cmp
mov
add
mov
pop
lds
into
add
add
jp
xchg
fild
in
add
(bad)
retf
imul
push
add
add
call
xchg
sub
ja
add
jbe
mov
cmp
mov
add
lds
add
cmp
jmp
inc
add
mov
call
sbb
mov
fadd
enter
xor
cmps
mov
inc
outs
cmovge
jle
loopne
cmp
aas
sub
xor
sub
fs
iret
mov
inc
sub
or
jge
mul
and
inc
daa
add
sub
pop
inc
call
or
loop
pop
adc
popa
add
jns
add
arpl
jmp
add
mov
dec
out
out
ret
or
add
cld
adc
add
and
xchg
adc
xchg
jecxz
add
add
add
mov
push
inc
hlt
add
(bad)
jge
jmp
mov
ins
in
jb
jmp
in
arpl
ret
add
ins
add
dec
add
cdq
mov
sahf
arpl
mov
add
xchg
add
xchg
lock
fs
dec
je
cmc
lahf
popa
add
or
add
pop
dec
add
push
add
xor
add
jle
mov
rcl
sahf
add
xor
mov
std
adc
xchg
jne
test
add
and
push
retf
jne
pop
xchg
mov
popf
adc
add
pusha
test
pop
or
add
call
push
and
mov
mov
and
mov
push
add
lock
xchg
test
jl
add
or
cmp
pop
sbb
xchg
or
mov
xchg
lods
sbb
inc
add
add
mov
mov
icebp
add
enter
add
push
sbb
sbb
loope
repz
add
rol
cmps
push
xor
popf
pop
data16
and
sub
sub
sub
jl
fwait
mov
cmps
or
ficom
mov
add
add
add
and
jne
add
neg
xorps
lds
adc
add
sub
or
add
sbb
repz
(bad)
and
mov
add
inc
in
ja
add
data16
add
and
(bad)
je
test
add
push
mov
fdiv
add
dec
add
daa
add
mov
jne
push
add
add
pushf
sbb
add
adc
add
dec
inc
add
mov
and
fsubr
mov
pop
shr
ds
add
fiadd
hlt
popa
repnz
xor
add
outs
adc
add
pop
enter
loope
dec
dec
and
aas
cmp
add
xchg
rol
inc
mov
add
adc
inc
add
add
sbb
jno
adc
sub
jle
jge
xchg
and
sub
les
loope
sub
add
mov
dec
add
xor
test
std
inc
add
or
loopne
mov
dec
jbe
mov
add
mov
jno
add
in
add
push
sbb
loope
fidiv
mov
mov
mov
mov
push
addr16
jnp
add
cmp
mov
stos
add
arpl
add
lds
sbb
push
jmp
das
add
mov
add
or
repz
mov
scas
dec
out
cdq
add
add
add
and
cmp
pop
scas
jmp
add
add
cmp
push
fcomp
inc
cmps
loop
imul
dec
data16
add
fcom
push
mov
jb
add
dec
jge
icebp
or
test
add
add
mov
and
add
clc
add
add
pop
(bad)
aam
fadd
mov
enter
add
aaa
pop
dec
pop
add
or
cmp
adc
in
sbb
mov
dec
add
pop
add
jae
add
data16
mov
mov
pop
cld
int
add
adc
scas
push
adc
xchg
(bad)
in
add
ins
add
add
shl
test
ins
add
aas
inc
inc
xchg
mov
push
add
aam
jb
xor
push
fld
push
jns
and
into
(bad)
inc
rol
jae
mov
movs
dec
(bad)
add
push
iret
adc
add
pop
aam
mov
cmp
add
cmp
mov
dec
sbb
add
adc
bound
add
pop
jmp
pop
add
iret
adc
mov
out
clc
mov
sub
add
add
add
add
cmp
sub
cmp
mov
add
add
add
in
add
add
outs
add
add
cmp
add
add
mov
xor
mov
cdq
sub
add
add
pop
pop
push
adc
fidivr
add
push
ja
cmp
mov
sahf
jbe
mov
xor
xchg
in
test
jns
retf
mov
xchg
add
add
jbe
adc
jbe
bound
push
sub
pop
add
add
cld
dec
pop
add
add
add
std
add
add
mov
fs
dec
(bad)
in
push
and
cmp
mov
scas
add
mov
add
out
add
dec
inc
jmp
sti
ins
gs
stos
jnp
mov
fst
adc
pop
in
in
leave
es
ds
outs
add
mov
add
xchg
add
out
nop
add
add
cmp
sub
add
mov
mov
push
not
or
add
add
idiv
lea
stos
out
add
jmp
test
dec
mov
inc
popa
pop
dec
adc
sub
and
add
in
xor
dec
pop
adc
add
int
pop
(bad)
xchg
add
out
sub
add
dec
add
add
add
rol
add
std
xchg
add
dec
es
add
out
add
mov
iret
ins
ss
popa
shufps
add
and
fdivrp
add
jmp
adc
add
lahf
add
add
(bad)
ror
cwde
mov
out
xchg
or
data16
cmp
xor
mov
add
add
cmc
add
mov
add
add
mov
sti
add
gs
sbb
jg
icebp
add
inc
pop
xchg
jecxz
push
cmp
sub
and
and
push
add
inc
push
push
cli
add
add
add
dec
aas
add
test
stos
aad
mov
add
add
dec
call
test
pop
push
add
mov
test
aam
add
add
xor
add
mov
scas
add
add
jns
into
mov
and
out
push
loop
pop
lds
mov
xor
xchg
or
add
sub
push
ds
jne
imul
shl
xchg
in
loop
sbb
test
push
xchg
add
fmul
or
aad
add
add
inc
sbb
sbb
mov
mov
inc
data16
add
cdq
lds
inc
add
add
add
sbb
data16
add
iret
jle
lea
add
nop
add
aaa
aas
bound
jns
cmc
mov
mov
add
fiadd
mov
xor
sbb
dec
(bad)
retf
add
lods
adc
sahf
add
lock
movs
mov
hlt
fwait
and
add
movs
lea
mov
xchg
test
add
sub
add
add
push
in
push
add
test
fbld
iret
inc
jl
cmp
dec
stc
add
adc
push
and
adc
(bad)
sbb
movs
and
mov
add
loop
push
pop
add
dec
add
ja
into
les
push
xchg
cs
mov
retf
jmp
sti
add
into
lods
int
inc
shr
jecxz
sti
push
or
add
and
cli
int
add
cmps
sbb
add
repnz
add
add
ret
add
add
add
add
rcl
inc
add
sub
aaa
fdiv
xchg
add
add
cmp
and
pop
call
add
add
add
jecxz
xchg
add
or
add
arpl
mul
add
add
mov
add
add
mov
mov
imul
lods
xchg
mov
sbb
pop
add
ror
mov
fild
push
in
retf
inc
sbb
mov
mov
xchg
add
xor
add
cmp
push
mov
mov
add
adc
jae
cmps
sbb
movs
add
add
sub
std
add
add
fs
add
(bad)
fisttp
jno
inc
mov
add
sbb
fst
loope
mov
mov
loopne
inc
inc
jecxz
push
popf
pop
jmp
in
add
push
jb
jo
add
jbe
push
pop
add
cmp
xor
jmp
pop
cmp
mov
cmps
push
add
mov
aam
ja
mov
add
loopne
add
mov
aaa
push
add
mov
adc
(bad)
jp
leave
adc
repz
add
cmc
test
sti
push
mov
mov
mov
in
add
fwait
add
mov
bound
int3
popf
adc
in
add
add
inc
add
xor
jns
dec
pop
cli
outs
cmp
icebp
add
push
test
add
in
xchg
jb
and
add
rol
xor
add
loopne
mov
push
idiv
pushf
lds
shr
xor
les
mov
enter
jno
cmps
aad
daa
enter
add
neg
add
jne
pop
mov
sbb
adc
add
xchg
inc
add
adc
sub
aam
shl
add
inc
xlat
pmaddwd
(bad)
dec
jbe
add
inc
dec
add
fmul
add
add
pop
in
movs
xlat
and
add
dec
bnd
add
pop
outs
call
inc
xor
inc
sar
call
add
imul
js
fld
or
iret
mov
icebp
and
pop
add
jl
pop
add
add
jp
fstp
out
add
clc
jmp
add
pop
in
aad
js
cmp
jo
add
xor
cld
xor
sbb
add
cmp
add
push
sbb
mov
out
add
loopne
mov
mov
verw
adc
cmps
imul
rcr
movs
inc
hlt
out
ins
add
sub
fdiv
add
out
add
xor
add
xchg
add
cmp
sbb
sbb
movs
jl
jge
ds
add
and
add
push
add
push
push
pop
xor
out
jecxz
pop
add
mov
add
add
add
pop
add
xor
xchg
fld
xchg
lahf
daa
sbb
push
inc
movs
add
xchg
mov
sbb
ret
je
aad
pop
add
les
mov
xor
xor
xor
add
add
sahf
xchg
add
and
inc
xor
movs
in
jl
pop
ins
add
int3
rol
adc
add
leave
add
push
push
popf
inc
lds
dec
mov
stos
add
(bad)
inc
pop
add
add
pusha
lahf
pop
mov
add
add
add
scas
(bad)
add
add
movs
out
ss
call
adc
add
add
push
inc
cmps
add
add
into
adc
adc
test
add
jecxz
out
mov
loope
sub
shl
fs
xor
mov
add
sub
pop
mov
add
icebp
mov
lock
xor
ins
push
add
add
add
mov
fs
xchg
inc
ja
inc
add
ret
sub
(bad)
or
xchg
dec
add
mov
test
mov
add
cmp
add
sbb
sar
add
stos
aaa
add
inc
sub
pop
adc
call
add
sub
add
push
fst
mov
add
fimul
shl
xchg
pop
rcl
add
mov
jae
xchg
fild
mov
adc
shl
ret
push
sbb
jns
add
loope
add
(bad)
sub
add
pop
add
popa
push
inc
mov
xchg
xchg
add
add
ret
inc
pop
pop
add
test
push
add
and
mov
sti
enter
xor
mov
hlt
ret
fcom
jge
add
add
pop
sbb
pop
ret
leave
jae
loop
add
sub
lods
jmp
aad
test
lahf
fiadd
test
mov
aaa
add
mov
dec
or
add
mov
push
xor
mov
add
sub
into
ret
adc
inc
add
fcomp
jb
xchg
dec
fcomp
add
add
xchg
str
in
fwait
add
xchg
stos
push
xor
loop
and
add
dec
cmp
mov
in
ja
mov
adc
push
inc
add
fistp
add
ret
fiadd
retf
lds
movs
and
inc
adc
stos
pop
add
lea
in
xor
add
sti
(bad)
inc
add
add
add
add
pusha
std
or
mov
add
xchg
cmp
adc
pop
ins
add
int
mov
jmp
cmp
push
scas
clc
stos
sbb
and
cmc
cwde
add
dec
or
xchg
or
dec
js
cwde
fmul
dec
and
jbe
data16
sbb
add
(bad)
cld
pop
add
xchg
add
cmp
add
add
cmp
pop
xor
mov
add
inc
add
sbb
add
enter
push
or
add
test
xor
punpckhbw
xor
push
shl
jb
push
out
mov
pop
jb
add
push
arpl
add
push
jbe
loope
add
pop
add
hlt
fsqrt
jb
adc
fild
jle
aas
add
stos
cmp
add
int
push
sub
std
add
ror
add
repz
dec
add
and
or
mov
sub
push
dec
test
rol
popa
add
clc
das
mov
cmp
add
add
adc
imul
mov
add
fld
repz
jb
add
lods
add
fild
dec
mov
or
dec
push
add
lock
test
add
add
add
and
inc
add
repnz
mov
inc
cli
test
cmc
inc
test
pop
xor
add
mov
inc
add
lea
adc
add
xlat
lahf
add
pop
daa
mov
xlat
aad
add
test
inc
and
ret
test
lock
jl
mov
add
mov
add
je
inc
rol
mov
mov
inc
xor
add
les
add
and
add
cmps
add
mov
outs
add
fcom
add
repz
mov
aam
sub
add
data16
add
dec
add
fisttp
add
add
call
mov
fist
mul
sti
jp
out
mov
add
jo
and
push
aam
cmp
add
sbb
lock
rcl
add
or
inc
sub
add
data16
xchg
outs
add
test
pop
add
push
data16
cmp
jo
pop
ret
jne
out
mov
imul
add
addr16
bound
int3
clc
dec
add
dec
lods
fiadd
and
add
add
mov
test
xchg
pushf
push
xchg
jb
jg
push
(bad)
xchg
lahf
pop
aaa
pop
add
rcr
shl
loopne
enter
movs
add
pop
cld
loopne
cmps
add
xchg
test
nop
les
sbb
sbb
call
cs
pop
fist
push
mov
sbb
add
popa
add
dec
sbb
sti
pop
repnz
add
add
add
mov
test
cdq
std
lahf
mov
std
mov
and
or
movs
ret
add
add
mov
add
or
pop
lock
in
test
add
add
ins
and
fld
push
or
push
inc
xchg
add
lods
sbb
push
int3
cmp
adc
iret
add
dec
movs
push
cwde
mov
daa
add
dec
add
xor
or
inc
add
jo
add
pop
dec
add
push
mov
push
inc
test
add
(bad)
scas
add
call
add
or
cmc
test
inc
and
add
cli
add
dec
mov
ss
enter
add
add
lods
mov
retf
cmp
adc
loope
add
mov
ds
lds
scas
add
add
retf
pop
jp
aad
dec
ja
push
out
lahf
scas
pop
add
jno
and
add
add
push
add
aad
mov
(bad)
sahf
push
add
test
je
inc
add
rcr
xor
add
jbe
add
(bad)
lock
jno
lock
pop
xchg
pusha
jbe
pop
inc
mov
test
xlat
mov
pusha
add
sbb
add
lods
lods
(bad)
(bad)
aaa
aad
cmps
das
and
stc
retf
in
je
add
mov
jmp
pop
scas
adc
bound
sbb
xchg
mov
xchg
or
add
and
add
inc
add
(bad)
arpl
jge
add
mov
or
jbe
add
int
add
or
in
dec
add
dec
add
add
popa
add
xchg
inc
jne
add
movs
dec
inc
cmp
mov
aad
and
dec
add
xor
add
adc
add
test
add
add
cmps
xor
into
add
rcl
ltr
dec
inc
jbe
add
cs
jns
mov
shl
pop
and
shr
add
fs
add
pop
adc
aam
mov
add
repnz
add
inc
inc
cmps
pop
xor
push
stc
add
fist
xlat
outs
imul
add
inc
dec
pop
and
jmp
int3
lock
add
cmp
js
in
cwde
add
les
add
add
push
add
xchg
add
pop
lds
test
inc
int3
add
cmps
loopne
mov
loope
imul
add
mov
inc
xor
loop
(bad)
pop
ins
add
cmp
cld
push
pusha
ins
mov
sbb
sub
cmp
pusha
jl
mov
add
adc
test
int3
pop
add
cdq
or
in
add
stos
add
out
add
add
mov
add
inc
add
ret
add
loop
add
inc
std
add
add
dec
loop
add
sbb
popf
push
rcr
cmps
xor
add
mov
or
sub
sub
xchg
fimul
inc
dec
fiadd
and
fwait
lock
cdq
retf
aaa
add
(bad)
jmp
jae
mov
add
out
adc
add
jae
ror
push
adc
fwait
mov
jne
push
mov
sti
inc
add
and
and
bound
sbb
push
xchg
lds
or
jns
add
jecxz
xor
inc
add
push
sub
jnp
add
add
mov
jne
add
cli
movs
mov
movs
push
xor
adc
xchg
int
clc
dec
test
xor
cmps
or
or
das
in
add
add
div
add
int3
jb
hlt
cs
xchg
inc
add
add
aam
iret
add
sbb
add
add
lock
sub
inc
scas
leave
pop
xor
jns
jmp
out
adc
add
(bad)
mov
call
loope
inc
add
pop
add
ret
add
enter
add
out
call
mov
std
std
cs
scas
lods
sbb
test
rol
add
push
add
xchg
add
or
xchg
(bad)
(bad)
cli
mov
xchg
add
ins
mov
jne
adc
pop
dec
push
add
push
add
stc
push
outs
sbb
add
xor
push
fwait
mov
xor
rol
repz
sbb
out
mov
pop
sub
mov
or
pop
add
inc
ror
not
pop
add
sbb
sbb
push
mov
add
add
clc
add
jmp
stos
adc
add
dec
in
xor
add
add
add
push
addr16
inc
xor
add
sbb
outs
fst
imul
es
cmp
out
sub
push
add
in
sub
imul
add
push
add
imul
push
add
movs
xor
mov
sub
cmp
jp
sub
sub
leave
lods
mov
xlat
mov
mov
addr16
pop
xchg
add
mov
call
sub
add
or
pop
cmc
add
add
add
dec
mov
add
inc
jge
add
lods
mov
add
add
loop
xchg
ins
test
push
or
jb
aas
add
xchg
mov
aas
add
cmp
nop
add
sbb
rol
inc
add
ja
mov
(bad)
imul
xchg
addr16
cmp
mov
addr16
add
pop
add
add
iret
push
icebp
push
enter
icebp
sub
and
xor
mov
adc
in
ins
add
rol
mov
add
push
mov
lea
push
add
bound
add
std
popf
adc
sbb
jmp
add
jns
dec
and
push
mov
add
sbb
into
cmp
add
loope
nop
add
cdq
daa
jbe
xsavec
jns
mov
or
mov
fild
pop
jb
mov
leave
add
stos
adc
rol
sub
ret
mov
cmp
inc
add
xor
add
imul
add
ins
add
inc
cwde
xor
psrlw
jmp
aas
add
add
sahf
mov
and
add
push
sbb
call
mov
shl
jl
dec
sub
repnz
fiadd
and
(bad)
add
mov
add
xchg
add
push
retf
retf
sub
add
push
pop
jg
push
add
aas
add
add
push
mov
add
push
add
add
cmp
sti
add
cmp
out
jno
loope
xchg
mov
add
loope
add
xchg
repnz
add
imul
mov
add
push
add
inc
add
push
aad
cmp
add
add
add
out
mov
daa
cmp
fs
and
cmps
loope
mov
bound
xor
add
mov
add
mov
add
retf
pop
mov
loop
add
add
jae
dec
xchg
add
fcom
pop
pusha
push
add
adc
ds
(bad)
mov
sub
mov
sbb
dec
ja
std
clc
adc
add
xor
pop
xor
imul
loope
xor
pop
add
add
add
outs
cmp
push
jecxz
add
add
mov
sub
add
add
js
fwait
push
and
inc
xchg
push
jae
inc
fwait
out
add
mov
jae
mov
into
jne
dec
mov
adc
dec
add
loope
xor
adc
cwde
inc
add
ret
xor
sub
sub
pop
xchg
add
dec
mov
outs
sub
add
jbe
xor
cwde
pop
add
arpl
add
add
add
mov
iret
add
mov
fs
call
xlat
outs
cmp
das
sub
push
push
add
add
xor
add
pop
ret
jp
add
mov
push
add
ror
mov
add
add
xchg
sub
add
add
mov
aam
rcr
mov
movs
call
add
clc
sbb
mov
xchg
les
add
xor
add
cmp
jmp
cdq
sub
(bad)
push
div
test
movs
add
data16
jle
ds
jecxz
ret
je
add
xor
ficomp
mov
add
retf
add
add
sbb
add
xchg
lods
add
pusha
add
int
add
lea
fwait
xchg
inc
xor
inc
dec
add
add
sub
mov
pop
fcmovnb
and
xor
mov
add
sbb
add
add
push
add
xchg
test
add
xor
mov
clc
imul
aaa
rol
xor
inc
add
or
push
int3
rol
movs
js
add
or
enter
mov
push
add
rol
sar
add
mov
inc
mov
shr
add
or
cwde
jg
jbe
es
mov
ret
add
mov
inc
test
cmp
sbb
add
add
xchg
pop
shl
loopne
stc
add
add
add
dec
xchg
btr
add
dec
lods
sar
mov
fs
jmp
adc
xchg
repnz
test
sbb
call
add
icebp
cmp
sbb
mov
fwait
push
cmps
sbb
jnp
in
adc
xchg
loope
sbb
fld
mov
cmp
mov
(bad)
xchg
xor
ds
lds
add
add
ds
add
push
add
test
fs
pop
mov
xchg
add
adc
add
mul
clc
(bad)
cmp
inc
iret
sub
add
fisub
add
lock
jno
(bad)
dec
push
inc
add
fcomp
fild
adc
mov
mov
in
jl
cmp
out
aad
test
cwde
add
retf
jno
stos
test
cmps
repz
mov
add
les
cmp
mov
jno
xor
xor
add
add
add
mov
int3
test
mov
add
mov
hlt
int
mov
add
aam
jge
add
cs
ror
lock
add
add
loop
jae
out
fwait
dec
inc
cs
pop
add
fiadd
inc
pop
jp
mov
shr
pop
add
es
fs
inc
sbb
out
fadd
sahf
popa
add
jg
cwde
idiv
push
stos
cs
sbb
dec
add
cmps
pusha
jg
add
add
add
jge
mov
push
sub
add
rol
push
push
mov
add
pop
pop
push
mov
jmp
add
retf
imul
xchg
outs
inc
pop
add
xchg
add
popa
add
or
cmp
push
lock
add
cmp
data16
out
sub
add
xchg
(bad)
icebp
sub
inc
loopne
loop
mov
add
push
add
adc
iret
add
inc
mov
into
add
add
add
and
or
lock
aam
inc
(bad)
movs
mov
cmc
add
or
add
mov
add
add
ins
add
mov
rol
jno
mov
leave
jbe
xchg
add
add
and
inc
add
fdivr
mov
add
test
add
xchg
add
lea
push
mov
out
add
add
xlat
int3
mov
(bad)
adc
add
mov
mov
add
jne
jmp
test
add
scas
add
pushf
add
add
(bad)
and
add
push
aad
xor
add
gs
add
cli
cmps
add
daa
add
add
rol
pop
sbb
push
jle
add
xor
inc
out
pop
add
ins
push
dec
movs
pop
gs
or
sbb
add
sub
lods
add
add
jge
add
addr16
add
add
xchg
jmp
xor
std
in
iret
or
mov
loop
xchg
movs
mov
mov
aam
cmps
add
add
add
sbb
dec
and
cmps
sub
or
jo
gs
mov
mov
ror
jecxz
(bad)
verr
scas
add
cmps
add
push
out
add
cs
add
jbe
movs
pop
add
or
dec
xchg
jb
test
cld
add
pop
cmc
shl
add
dec
cmps
into
loop
add
out
pop
in
add
push
loope
ins
xor
(bad)
gs
jae
retf
add
xchg
add
push
add
add
xor
add
adc
push
add
cmps
xlat
add
cmp
jnp
add
jmp
add
add
into
pop
mov
mov
pop
mov
lock
pop
add
add
sbb
xor
add
mov
and
add
mov
addr16
fs
xor
in
outs
add
jmp
loopne
add
into
or
stc
push
add
les
fsubr
add
adc
sub
jb
test
or
lea
loop
xchg
pop
mov
dec
add
sbb
mov
mov
sub
stc
rol
out
add
add
mov
sti
mov
add
shl
jae
add
stc
lods
mov
outs
ret
or
pop
test
adc
(bad)
out
mov
add
sbb
xchg
add
call
in
add
adc
xchg
adc
add
ret
or
jb
stos
cli
add
jns
iret
in
add
ins
rcr
or
add
les
fistp
int
(bad)
push
jg
add
out
push
movs
add
push
cli
loop
jne
add
add
fild
daa
xchg
and
das
aaa
add
mov
jp
add
lock
outs
test
enter
sub
leave
fisubr
add
leave
mov
inc
pop
add
repz
mov
cmp
fadd
pushf
test
ds
jp
add
stc
add
or
add
add
call
sub
mov
aaa
mov
inc
mov
test
out
es
add
cmp
mov
fwait
inc
or
add
mov
add
sbb
fnstenv
cmps
add
lods
add
mov
add
lods
cmp
int
dec
mov
jmp
arpl
add
dec
jg
add
or
mov
(bad)
dec
add
mov
icebp
cmps
add
test
inc
iret
ror
mov
add
pop
add
and
add
rol
mov
mov
add
xchg
(bad)
icebp
add
add
out
xor
add
mov
leave
pop
add
(bad)
nop
mov
rcl
cmp
(bad)
dec
add
mov
mov
add
inc
sbb
add
lods
mov
xchg
rol
inc
add
ja
sbb
adc
je
out
add
ja
pop
sub
test
test
add
and
mov
shr
mov
fiadd
inc
cmp
add
add
add
add
jno
add
add
pop
adc
pop
add
add
add
aad
add
pop
add
cmps
jp
retf
add
je
cmp
add
cmp
les
add
in
add
cmc
lea
xchg
add
fild
pop
test
inc
add
add
cmp
sti
sub
add
lea
add
add
add
add
scas
xor
mov
add
stos
sti
add
out
lds
fild
xor
nop
add
aas
add
mov
add
jecxz
add
xor
je
push
popf
jle
mov
xchg
or
add
push
sbb
add
nop
mov
fwait
cwde
add
add
add
add
xchg
xchg
add
sti
pop
add
sub
test
in
sbb
add
add
cmps
add
add
jge
mov
movs
push
mov
popa
sbb
cmp
mov
ret
es
out
or
adc
in
jl
test
(bad)
aas
adc
mov
aam
cmp
cmc
dec
jmp
pop
jbe
outs
xor
add
inc
jp
ja
add
std
add
mov
add
add
jno
add
jne
cmp
add
rcr
cmps
sbb
pop
int
ds
retf
add
or
cmps
jecxz
push
add
add
das
aad
ins
je
cmc
lds
xor
int3
sub
xlat
aaa
push
fldcw
and
inc
xchg
mov
hlt
gs
jae
mov
push
enter
retf
iret
push
aad
xchg
ja
or
int3
or
pop
xchg
mul
sti
rol
add
ins
outs
add
inc
jmp
add
(bad)
add
add
add
add
loopne
sub
add
jo
test
add
xchg
cmp
add
add
dec
jo
inc
stos
imul
paddusb
arpl
repz
push
mov
cdq
cmps
push
es
xchg
push
fcom
aas
inc
push
xor
popa
jle
in
and
add
addr16
inc
pop
retf
cld
lock
fnstcw
inc
aas
into
push
add
add
dec
nop
sbb
imul
retf
add
mov
shl
add
add
push
add
add
add
sti
sbb
pop
add
xchg
call
xor
add
add
add
xor
jo
cmp
add
cmps
ins
push
sub
movs
(bad)
dec
out
and
sub
div
add
mov
and
push
xor
cmp
sub
sub
ror
adc
lock
mov
add
add
add
inc
mov
xchg
add
mov
or
sub
out
adc
sub
jnp
pop
adc
sub
add
pushf
add
sahf
int
imul
add
add
jno
dec
adc
(bad)
sahf
in
sbb
inc
cmp
fld
jae
and
add
pop
stos
cmp
leave
pop
add
inc
scas
sub
(bad)
jl
(bad)
jmp
mov
mov
inc
mov
dec
jbe
in
int
fdiv
jnp
xor
loopne
lods
xchg
sbb
aaa
or
push
out
add
pop
or
add
xor
jl
inc
xchg
call
cmp
fistp
out
add
push
dec
out
add
push
test
lahf
das
pop
sub
adc
jp
int
and
addr16
jmp
sti
add
fimul
fdivrp
retf
retf
add
add
add
outs
or
mov
stos
mov
jae
adc
add
or
inc
pop
les
sahf
icebp
dec
push
add
add
adc
cld
repnz
mov
and
add
jmp
fldcw
xchg
dec
imul
lds
cld
ret
xchg
add
mov
sbb
add
mov
out
(bad)
popf
xchg
add
stc
push
jbe
dec
add
test
add
addr16
in
out
add
ss
imul
xchg
loope
test
add
xor
dec
pop
and
push
or
add
add
rol
ins
les
dec
or
push
add
xor
add
adc
mov
ficomp
add
add
lahf
test
mov
add
and
mov
mov
push
fld
inc
repz
push
mov
add
push
add
fwait
pop
add
(bad)
daa
cmp
ror
inc
add
add
into
add
or
pop
in
enter
sub
iret
add
and
test
bound
jge
sub
xchg
sbb
add
push
scas
add
sub
sub
fiadd
pop
mov
fild
add
les
add
aas
jl
xchg
add
mov
stc
xchg
jl
in
hlt
pusha
add
rcr
or
dec
dec
add
cmp
push
add
(bad)
inc
add
ja
mov
std
add
fst
mov
movs
cmps
out
adc
jbe
sub
inc
add
inc
add
xchg
imul
add
dec
imul
sbb
add
call
add
cmp
jo
inc
stos
dec
add
pop
jne
mov
xchg
inc
mov
ret
add
in
add
add
mov
call
outs
add
add
lods
jo
xchg
mov
add
or
clc
mov
outs
and
mov
xchg
xchg
dec
xchg
add
xchg
lds
or
les
add
mov
retf
sbb
in
add
add
pop
add
sbb
icebp
add
push
mov
add
inc
add
jmp
add
int
add
lahf
add
add
daa
jg
mov
into
aas
aad
rcr
or
adc
dec
add
mov
pushf
mov
jecxz
mov
add
cmps
xor
jbe
cmp
push
xchg
and
xor
stc
add
fcomp
adc
add
fisub
jg
(bad)
sub
xor
xor
sbb
cmp
mov
pop
and
clc
dec
sub
jecxz
inc
add
sub
ret
mov
push
dec
push
fild
add
add
jae
inc
jle
sbb
push
xchg
add
popf
aaa
pusha
add
cmp
loop
ret
sbb
pusha
mov
sbb
clc
push
outs
add
enter
sbb
gs
(bad)
daa
add
add
add
jne
hlt
hlt
push
add
add
mov
fwait
add
lahf
xchg
dec
sub
test
adc
push
sub
adc
sysexit
cmps
add
or
dec
jne
ins
in
sub
jp
arpl
add
test
inc
xor
sahf
lahf
out
ins
pop
add
ins
jns
inc
dec
add
and
jnp
adc
inc
push
add
add
mov
add
push
aad
mov
pop
(bad)
scas
fwait
add
ret
mov
add
sbb
fbstp
push
mov
test
mov
add
repz
mov
sub
add
push
and
cmp
mov
and
xchg
add
test
push
add
mov
mov
and
mov
push
add
mov
imul
mov
cmps
push
jmp
push
add
cmp
dec
add
leave
out
sbb
retf
stc
and
xor
stos
aas
or
fwait
ret
add
loope
inc
xor
fbstp
add
jp
pop
ins
leave
add
das
add
les
inc
add
jg
add
cmp
xchg
rol
repz
test
out
pop
inc
push
inc
cmp
lahf
or
ret
movs
jbe
fdivr
sbb
sub
add
pop
sub
(bad)
pop
mov
pop
cli
stc
jnp
ret
mov
mov
inc
xchg
add
cdq
(bad)
cwde
add
xchg
fwait
in
mov
mov
test
inc
push
jmp
add
frstor
add
add
jno
stc
pop
add
xchg
add
add
mov
out
add
pop
add
cwde
push
add
xor
xlat
inc
add
enter
xlat
add
ins
and
mov
dec
add
stos
test
arpl
add
add
add
or
add
sub
mov
add
inc
fadd
mov
test
cdq
sub
xchg
sub
cwde
xor
movs
add
cwde
in
dec
sub
rcl
add
hlt
add
push
jmp
jle
sub
shl
rol
add
or
pop
fld
ins
adc
outs
cmp
add
cwde
dec
cli
fadd
sub
sbb
movs
lods
ja
lea
xor
(bad)
sub
jo
mov
imul
sbb
mov
add
add
mov
xor
mov
or
rcr
loopne
add
ds
xchg
mov
fst
inc
add
sbb
outs
adc
jmp
mov
xchg
mov
and
add
add
add
pop
cwde
add
xlat
add
push
into
outs
jb
pop
add
add
sub
cmp
add
iret
add
ja
les
mov
mov
add
add
add
jp
fwait
adc
add
mov
aaa
lahf
mov
mov
add
retf
addr16
lds
xor
out
fs
add
add
jle
add
add
add
add
test
add
es
outs
stos
add
add
fs
movs
add
lods
add
out
add
es
sub
stos
add
add
inc
xlat
adc
in
add
jae
jmp
push
in
add
call
ins
or
imul
inc
add
mov
xchg
xor
jp
adc
add
add
rol
add
mov
jne
add
push
lds
add
and
pop
add
loope
adc
aaa
and
jae
xchg
dec
jle
dec
jmp
add
add
fldenv
xchg
fisub
mov
dec
pusha
mov
inc
pop
pop
add
dec
inc
cmps
add
add
mov
aaa
dec
xchg
add
adc
sub
add
jmp
add
pushf
cmc
aaa
shr
mov
add
push
add
xor
jl
adc
mov
add
std
sbb
add
nop
call
aad
push
add
add
movs
dec
in
mov
inc
add
data16
push
pop
xlat
add
mov
nop
jecxz
mov
jmp
(bad)
in
add
rol
xchg
jg
daa
test
dec
add
push
cli
daa
add
pop
xchg
add
stos
ins
mov
jl
popf
sbb
jmp
or
cmc
add
push
cwde
js
cmp
add
jns
add
jge
out
pusha
add
and
add
aaa
lds
mov
call
cmp
test
xlat
add
push
cmp
pop
mov
mov
das
movs
cs
xor
dec
mov
loope
add
sub
add
push
pop
add
pushf
add
dec
xchg
mov
adc
add
pushf
nop
dec
sahf
add
lock
add
sbb
pop
ins
je
mov
xor
nop
clc
in
sbb
gs
jbe
mov
add
and
xchg
pop
or
and
jmp
jb
ret
add
or
push
xchg
imul
pusha
add
adc
out
dec
pop
lods
add
add
or
aaa
(bad)
fild
out
cmp
jge
loopne
in
cmp
add
sbb
or
sbb
add
add
or
inc
add
fs
add
add
cmp
add
pop
ins
aas
or
mov
xchg
xor
xchg
std
push
loope
mov
mov
mov
add
xchg
add
add
icebp
scas
scas
add
add
jae
and
rol
xlat
sub
pushf
inc
dec
add
jmp
cmp
or
out
mov
dec
mov
jae
add
and
add
sbb
add
scas
add
clc
inc
add
add
test
loope
cwde
scas
jg
ins
sub
das
sbb
add
mov
jne
add
adc
add
ret
add
add
sbb
push
mov
xor
cdq
and
add
out
add
pop
test
add
dec
sub
add
out
imul
inc
aam
dec
pop
cmp
out
lea
rol
cdq
inc
add
ret
das
and
loope
or
add
or
add
add
ja
call
mov
call
mov
xor
in
mov
xchg
dec
add
sub
adc
dec
out
sub
mov
xor
add
jae
add
jns
inc
cmp
fdiv
add
rcl
push
loopne
pop
xor
pop
in
(bad)
ds
push
fiadd
inc
nop
or
aaa
or
pop
mov
add
fwait
inc
stos
mov
push
out
cmp
in
fs
repnz
sub
sbb
xchg
xor
hlt
xor
sub
add
sbb
xchg
fst
pusha
inc
add
add
mov
loopne
iret
jp
ret
push
add
mov
data16
pop
test
jmp
adc
pusha
stc
xor
add
sbb
fsubr
rol
add
add
or
retf
add
pop
sub
in
cmp
jnp
cmp
jnp
jecxz
dec
add
loopne
out
dec
outs
or
push
sub
push
sub
add
aad
add
mov
std
jl
rcr
lods
cmp
xor
cwde
dec
cdq
sbb
aaa
add
or
add
add
add
into
mov
cmc
or
loope
jg
and
(bad)
push
mov
jl
xor
stos
add
mov
stc
call
call
or
or
jge
jnp
xchg
and
mov
push
mov
add
add
ret
or
loope
add
mov
test
ja
out
arpl
add
stos
sbb
mov
jecxz
cmp
mov
xchg
nop
jp
cwde
xchg
loopne
add
pop
test
add
sub
push
mov
and
adc
out
in
jmp
or
pop
add
add
lods
data16
pushf
sti
int
add
xchg
in
in
inc
push
dec
jl
adc
aas
daa
add
sbb
inc
add
fist
mov
sbb
pop
add
add
or
fwait
arpl
lds
ror
popf
jl
enter
daa
sub
add
cld
add
repnz
sar
cmc
lock
(bad)
adc
sbb
addr16
xchg
add
add
inc
jno
mov
mov
inc
inc
add
inc
add
out
test
outs
repnz
add
dec
jmp
fld
cmps
adc
add
scas
add
int
mov
add
add
mov
iret
mov
xor
push
add
jge
inc
add
mov
cwde
mul
mov
add
add
push
jbe
cmc
add
cld
add
outs
jb
lock
dec
add
add
and
out
jecxz
fs
push
mov
add
add
pop
xchg
pop
fadd
add
aam
add
add
sub
enter
out
xor
sub
jb
jb
icebp
cmp
jecxz
sub
hlt
add
inc
add
add
or
add
push
add
or
add
sbb
push
jb
mov
pop
dec
add
imul
cwde
xchg
sub
mov
add
fcmovnb
fcomp
add
ficom
cwde
inc
and
jmp
add
add
cmp
and
jecxz
xchg
add
imul
fistp
add
adc
cwde
lahf
mov
add
repnz
imul
jmp
push
call
add
stos
sub
xchg
dec
call
add
adc
stos
add
jl
cli
pushf
lea
sub
retf
add
sti
ins
mov
add
add
repnz
add
add
xor
add
aas
add
mov
fisubr
cmp
add
add
sbb
push
test
pop
mov
repz
js
add
aas
mov
xchg
shl
and
stos
mov
rol
push
jno
xchg
mov
nop
jl
or
mov
(bad)
xchg
in
(bad)
or
mov
mov
and
cdq
xlat
xlat
mov
or
mov
and
imul
pop
dec
mov
dec
and
cmps
xor
mov
sbb
push
mov
fstp
mov
jno
lea
inc
cmp
fidivr
push
mov
gs
or
add
das
loope
arpl
(bad)
pusha
shl
test
into
sub
add
adc
mov
push
mov
int
adc
es
scas
add
sbb
int
imul
sbb
sub
mov
pop
fld
fwait
imul
push
ja
or
jbe
or
ret
mov
xchg
jb
stc
imul
sub
add
jne
pushf
mov
push
cmp
sti
sti
or
jle
xor
pop
ins
dec
xlat
push
xchg
mov
lahf
inc
jmp
adc
aas
sbb
add
xchg
mov
push
stos
xchg
mov
fisttp
repz
dec
stos
(bad)
pop
fimul
jns
mov
mov
dec
popa
ret
clc
sti
popa
mov
shl
scas
cmp
xchg
fst
pop
mov
cli
mov
and
mov
inc
or
xor
mov
sub
lods
cmc
mov
retf
fild
mov
mov
adc
sahf
scas
fist
xor
push
mov
cmps
inc
dec
mov
int
push
cdq
sbb
push
outs
push
sub
cli
test
in
and
push
xchg
pushf
sub
lds
jb
loop
add
push
push
dec
xchg
repnz
jmp
pop
xchg
fidivr
pop
sub
cmp
mov
aas
data16
fidivr
lds
in
out
(bad)
xchg
cmp
mov
fidiv
mov
cmc
mov
popf
push
mov
pop
mov
fldcw
sbb
and
outs
sbb
idiv
aam
sub
inc
lods
cld
jmp
int
(bad)
mov
inc
and
aas
fisttp
call
mov
iret
arpl
pop
(bad)
sub
je
add
add
sub
aam
xchg
stc
fnsave
leave
shl
stc
lds
(bad)
ins
sbb
cmp
iret
mov
(bad)
mov
xchg
mov
inc
sahf
lods
mov
pusha
call
push
sbb
inc
call
and
in
mov
pop
call
adc
cdq
loopne
and
jle
les
mov
das
mov
call
jle
cmp
call
test
fidiv
jno
sar
push
xchg
(bad)
mov
sub
or
inc
not
cmp
arpl
call
pop
mov
sbb
push
ds
sahf
add
clc
bound
pop
js
(bad)
xchg
adc
pop
test
xlat
jmp
add
push
int
xchg
movs
adc
sub
out
data16
or
ins
retf
and
(bad)
jmp
push
je
mov
and
mov
and
int
fwait
lods
movs
xchg
(bad)
mov
jmp
sahf
mov
ret
lds
add
mov
add
ficom
repnz
dec
inc
(bad)
iret
popa
sub
das
add
shr
dec
push
(bad)
dec
add
out
sub
gs
pushf
aad
xor
adc
push
outs
xchg
push
out
popf
or
mov
cmp
loop
mov
push
out
std
mov
inc
inc
mov
add
hlt
arpl
in
popf
mov
test
xor
jg
and
lea
mov
mov
sbb
add
cld
cmc
cmps
lods
leave
jge
jmp
push
ret
test
cmp
xchg
out
adc
mov
jae
fstp
jle
call
jmp
adc
inc
scas
fadd
out
mul
sar
rcr
cmps
pop
vphaddbw
mov
mov
fs
or
and
mov
ror
xchg
mov
sbb
lods
ret
outs
xor
fisub
aad
xchg
test
mov
mov
sti
pop
out
dec
dec
sub
sub
icebp
cmp
xchg
add
repnz
je
jbe
je
fldcw
sbb
bound
js
out
add
and
push
popf
jmp
or
xlat
popf
or
clc
push
ins
mov
test
mov
add
out
cdq
iret
int
aas
push
mov
(bad)
add
add
pop
push
mov
dec
(bad)
cli
push
jecxz
jo
leave
test
sub
cmc
and
push
scas
xchg
out
jo
test
or
xor
ret
bnd
or
sbb
and
(bad)
sbb
sub
sbb
js
lahf
cli
and
mov
test
dec
(bad)
stos
in
sub
mov
in
movs
jne
lea
loop
sbb
inc
dec
popf
leave
leave
add
pushf
xor
sbb
sub
loopne
or
sub
pop
int3
jg
jmp
mov
jp
clc
jp
repz
pop
inc
retf
call
sub
stos
cmp
mov
pop
outs
clc
push
and
xchg
test
jmp
pop
sbb
icebp
ins
or
aas
xchg
mov
add
mov
jnp
pop
in
test
out
mov
add
test
cmc
mov
sahf
inc
iret
xchg
out
add
cld
xchg
push
inc
fild
gs
and
push
(bad)
mov
push
(bad)
sub
out
mov
sub
mov
cmp
out
jne
mov
cmp
add
enter
cli
iret
sub
mov
mov
mov
es
movs
(bad)
and
cli
mov
push
pop
or
sub
dec
mov
std
inc
inc
lds
add
adc
mov
and
repnz
fsub
inc
sub
clc
push
add
jb
mov
cmp
in
pop
sbb
or
jmp
cmp
lods
adc
shl
cli
mov
xor
cmp
les
imul
scas
out
sub
mov
lock
jp
mov
xor
imul
jb
sub
call
arpl
iret
pop
pop
loop
ja
loope
sbb
cmp
aad
fdiv
out
jnp
pop
fidiv
retf
mov
push
or
fadd
fadd
out
and
(bad)
pop
mov
cdq
inc
daa
xor
jl
xchg
in
repnz
repz
scas
sbb
ret
sbb
or
in
mov
leave
fcom
cdq
leave
jle
pop
pop
fsub
popf
popa
call
cs
jns
sahf
add
div
add
push
out
add
jb
push
popa
mov
out
add
xor
aad
adc
jle
push
(bad)
iret
add
mov
push
inc
cld
add
xor
xor
add
ror
ja
stos
dec
dec
pop
idiv
and
outs
xor
in
retf
dec
jge
shl
imul
jmp
lds
cmp
mov
cmps
mov
repz
push
xchg
cdq
mov
out
inc
mov
cmp
ror
lea
ret
inc
push
and
mul
sub
pop
enter
mov
mov
pusha
dec
jecxz
push
pushf
pop
fdivr
fmul
fild
icebp
int3
mov
xchg
xor
mov
push
sbb
pop
sub
mov
movs
mov
add
xchg
xchg
pop
jns
ror
jno
loope
iret
pop
scas
jbe
mov
mov
enter
hlt
div
cmp
mov
je
push
jp
jecxz
rcl
cs
adc
jp
push
fdivr
fistp
ret
outs
xor
sub
call
(bad)
in
lds
adc
test
test
push
xor
(bad)
int
xor
mov
fsub
sbb
xor
push
fist
cmc
stos
rol
addr16
sahf
lods
mov
dec
and
call
call
ret
mov
mov
cmp
and
popf
dec
jne
push
retf
ja
loop
lock
inc
movs
retf
sub
sub
mov
sub
inc
(bad)
jne
mov
jae
or
xor
xlat
jg
add
mov
adc
mov
mov
mov
dec
cwde
fsubr
mov
(bad)
mov
ds
pusha
icebp
jge
mov
sar
jmp
dec
and
pop
js
inc
push
cld
xchg
pop
hlt
div
dec
std
or
pop
or
jg
aam
xchg
inc
mov
mov
xor
sar
inc
rol
daa
clc
mov
inc
sbb
int
pop
push
loope
xchg
stos
cmps
lods
and
dec
stos
jo
imul
pop
aas
retf
sbb
mov
movs
xchg
(bad)
xor
sar
add
in
cmp
cmp
xchg
push
pop
cld
add
inc
stos
scas
or
test
mov
lds
lock
test
add
in
pusha
loopne
mov
add
ja
push
inc
mov
je
aad
sbb
mov
mov
xchg
xchg
scas
pop
popa
rol
sbb
mov
retf
(bad)
and
jge
dec
jbe
add
inc
outs
or
adc
imul
sub
dec
dec
lahf
loopne
push
mov
sub
or
dec
into
hlt
jb
mov
cs
popa
mov
(bad)
jno
lock
xor
test
mov
mov
test
mov
jge
or
daa
loopne
faddp
cdq
push
jl
stos
or
lds
cmp
gs
into
inc
call
mov
loope
add
add
sub
xchg
mov
ror
cmp
es
call
rcr
mov
mov
pop
adc
or
lds
mov
retf
sub
pop
stc
call
lahf
mov
inc
add
das
xor
mov
and
mov
fsub
mov
lahf
(bad)
mov
mov
push
in
mov
aam
(bad)
mov
jmp
mov
mov
inc
mov
jne
int
stos
xchg
inc
push
mov
arpl
out
outs
jb
fs
movs
inc
adc
dec
call
arpl
out
push
mov
jle
mov
sub
mov
ror
and
scas
leave
jp
cld
ins
dec
xor
rcl
xor
std
mov
aas
movs
jns
jae
xchg
jmp
aad
adc
inc
jp
jp
test
leave
loopne
mov
add
cmp
les
xchg
sbb
pop
repnz
jmp
sbb
cmp
mov
sub
adc
jae
and
mov
(bad)
idiv
fwait
cmp
int3
push
pop
jmp
mov
dec
movs
and
sub
or
jmp
idiv
lods
fcmovbe
mov
out
fild
test
mov
stos
outs
jno
in
mov
hlt
cmc
dec
xor
loope
push
mov
clc
xchg
add
mov
jno
pop
es
xchg
pop
fldpi
jo
(bad)
clc
add
pcmpgtd
jno
(bad)
pop
push
out
inc
ret
inc
jns
je
clc
bound
ret
dec
xor
int3
dec
(bad)
sub
ficomp
repnz
xor
push
test
cmps
imul
inc
xchg
movs
test
aas
push
mov
jae
push
jmp
fild
shl
enter
or
pop
and
call
xlat
hlt
sbb
out
adc
fwait
jg
mov
or
sahf
ja
mov
and
mov
ins
mov
movs
popa
lds
push
add
mov
cmp
test
test
lahf
mov
inc
adc
jl
jbe
add
aaa
xchg
pushf
and
call
mov
call
jbe
popf
stos
aam
retf
repnz
mov
call
(bad)
retf
add
and
and
push
jne
pop
pop
xchg
icebp
inc
(bad)
xor
xchg
cmp
js
sbb
push
mov
retf
mov
in
jl
aad
add
out
(bad)
inc
aas
cmp
cwde
ins
mov
mov
stos
mov
lahf
mov
dec
and
fiadd
adc
dec
mov
xlat
mov
ins
jl
rcr
outs
push
jmp
mov
mov
addr16
or
cmp
shl
loop
aad
fs
pop
pop
xchg
in
(bad)
mov
add
aas
and
mov
(bad)
pop
inc
test
mov
dec
mov
mov
pop
test
xor
sub
aam
xchg
daa
fadd
push
pusha
jmp
ret
xor
jnp
lahf
icebp
sub
movs
jp
fld
fst
mov
int3
and
loop
mov
inc
jmp
fisub
add
out
ror
xchg
(bad)
or
mov
adc
ficom
jmp
dec
inc
pop
lahf
cmp
std
push
ds
and
test
jbe
popa
or
push
(bad)
in
sub
mov
cmp
xchg
mov
xor
test
jp
pop
adc
loopne
fistp
clc
mov
xor
(bad)
mov
pop
int3
sbb
jg
cdq
mov
mov
adc
es
xchg
(bad)
mov
add
pusha
jae
pop
jmp
test
xlat
je
clc
mov
sub
int3
ret
xlat
ins
fisubr
jecxz
or
adc
rol
lea
and
sahf
jmp
mov
inc
or
test
in
add
dec
lods
out
mov
dec
fist
sets
add
mov
add
in
jae
xlat
jne
mov
ins
mov
in
lahf
dec
jl
cld
xchg
push
jg
test
iret
sub
movs
adc
jno
int3
scas
jnp
jmp
je
inc
add
mov
push
push
inc
cld
call
mov
in
sbb
sub
arpl
js
jne
lahf
jnp
mov
ins
mov
xchg
cmp
cwde
add
icebp
sahf
pop
in
mov
add
int
xchg
scas
sar
xor
cli
inc
or
imul
retf
push
(bad)
int
jno
pop
leave
mov
mov
push
pop
call
adc
mov
imul
loope
mov
gs
mov
add
add
add
mov
es
(bad)
and
xlat
xor
nop
add
pop
mov
mov
xchg
int
jmp
mov
sbb
popa
lock
clc
scas
pop
push
mov
add
out
idiv
and
in
in
push
call
mov
jne
sar
inc
(bad)
mov
fidiv
into
pop
xchg
add
mov
(bad)
xchg
cmp
loopne
jg
inc
inc
mov
int3
js
dec
pop
aas
jno
push
bswap
je
jecxz
inc
mov
pop
sbb
inc
fdiv
xor
ret
xchg
jns
sub
repnz
push
xor
sti
xor
(bad)
xchg
int3
mov
push
adc
push
bound
pop
jmp
cmp
jge
rcl
sahf
add
ror
repnz
pop
scas
mov
repnz
std
out
or
popa
mov
pop
sbb
out
and
fs
xchg
sbb
mov
test
jnp
fidivr
leave
imul
(bad)
outs
mov
and
outs
mov
jle
xchg
leave
div
mov
int3
mov
mov
jb
xchg
into
lock
mov
xchg
dec
cmp
and
hlt
add
dec
adc
and
sub
adc
fwait
lea
dec
pushf
xchg
pop
sbb
gs
cs
addr16
mov
nop
inc
(bad)
xchg
jne
mov
lahf
gs
and
sahf
mov
imul
cmp
call
pop
scas
pusha
pop
or
mov
xchg
ja
fstp
retf
xlat
pop
jmp
std
aad
ja
lea
sub
out
(bad)
push
movs
lods
jo
dec
rol
(bad)
repz
sbb
mov
(bad)
pop
sub
or
fistp
shr
jmp
xlat
sbb
sub
dec
nop
fnstcw
lock
dec
mov
sub
mov
cwde
dec
outs
pop
mov
adc
mov
pop
cmp
rol
dec
mov
fsub
pop
hlt
mov
or
shr
mov
xchg
(bad)
push
test
push
add
mov
imul
bound
arpl
mov
sbb
test
add
mov
cmp
jmp
add
mov
enter
jmp
or
add
push
xor
nop
mov
out
dec
out
pop
cmp
ret
add
sub
mov
xor
push
outs
jnp
mov
ins
fistp
cmp
xchg
rcl
in
sbb
jecxz
test
retf
psubd
int3
xchg
mov
ins
jmp
add
fisttp
add
sbb
inc
or
push
fdivr
fnstcw
xchg
je
add
pop
ret
into
aas
add
xor
cmps
xor
es
jb
mov
cwde
xor
mov
loope
or
ins
mov
addr16
jns
fs
hlt
jge
(bad)
mov
cmp
into
mov
cwde
ret
cs
retf
cmp
repz
movs
(bad)
mov
mov
push
xchg
iret
mov
dec
icebp
pop
ja
mov
jle
xchg
pop
shl
inc
dec
stc
loop
push
mov
addr16
adc
jbe
dec
jmp
jp
fdiv
rol
dec
movs
jmp
in
jl
xor
xor
push
cli
into
scas
repnz
pop
pop
lock
loopne
retf
or
cmpxchg
cmps
mov
or
jno
cmp
repz
jne
sahf
xchg
mov
sub
test
leave
pop
retf
call
xor
aaa
cli
stos
push
or
out
es
mov
and
scas
dec
(bad)
lea
rcr
cmp
(bad)
inc
cmp
into
cmp
pop
cmp
jno
out
addr16
lahf
inc
sbb
inc
add
pop
pop
lahf
retf
jbe
add
lods
fcmovbe
dec
out
movs
fsub
pop
mov
lods
fild
bound
mov
in
hlt
ds
clc
jle
mov
icebp
adc
not
inc
in
js
das
sub
sti
add
add
mov
sbb
iret
cmp
pop
mov
mov
push
sbb
jo
call
dec
dec
xchg
add
imul
dec
sahf
mov
stc
cmp
push
rol
sbb
or
jne
cdq
jmp
call
(bad)
add
mov
lods
mov
popa
into
add
ret
mov
push
fisttp
test
jno
ds
pop
sbb
mov
add
aam
pop
adc
pop
retf
xchg
fisttp
test
dec
ror
dec
lods
mov
dec
dec
leave
fidivr
xchg
sub
pop
scas
mov
lods
pop
and
adc
jmp
inc
movs
pop
pop
fiadd
(bad)
cld
pop
in
mov
add
fcmovb
mov
mov
retf
(bad)
das
push
std
mov
sbb
ror
jmp
adc
mov
lods
das
and
into
shl
jmp
jp
lds
inc
ds
mov
adc
xchg
sub
aad
cmp
jmp
add
fld
ins
or
and
xlat
imul
adc
adc
mov
push
ret
xor
ror
add
mov
pop
aas
xchg
mov
inc
cmp
push
cmp
shl
xor
cmp
ja
adc
lods
mov
int
jmp
xchg
test
iret
(bad)
jmp
scas
hlt
fadd
mov
stc
fwait
imul
popf
dec
add
test
jo
rcr
shl
sub
push
fimul
arpl
or
cwde
cmp
dec
mov
adc
add
imul
or
sub
int
mul
scas
in
mov
mov
sar
xor
fcmovnu
imul
cmp
fxtract
ficomp
or
pushf
dec
das
scas
leave
mov
js
xor
es
outs
cmp
adc
add
jno
add
sahf
or
nop
sub
adc
into
sub
pop
xor
dec
ror
cmp
or
or
xlat
mov
xchg
les
cmp
rol
movs
cmp
lea
pop
pop
(bad)
data16
cmp
sbb
scas
jno
jge
cmps
pop
sti
mov
scas
les
repz
mov
fs
cmp
mov
int3
not
xlat
test
das
int3
std
xchg
addr16
xchg
adc
scas
add
pop
and
sub
hlt
mov
pop
int3
sbb
pop
lods
mov
loop
jb
push
mov
(bad)
xor
mov
dec
imul
aas
jge
js
sti
call
add
repz
retf
test
ret
adc
sbb
stos
cmps
push
aam
popf
mov
int3
dec
loope
jl
ror
xor
xor
inc
push
xchg
sub
out
loop
lock
sbb
cld
jle
jns
push
popf
sub
in
push
push
jmp
outs
xor
push
or
inc
dec
push
xchg
lds
push
jecxz
retf
inc
hlt
cmps
and
cmps
and
add
aaa
mov
fsub
add
je
push
mov
push
xor
fisttp
xchg
dec
mov
mov
mov
gs
add
aaa
add
cwde
jb
test
outs
sub
adc
adc
push
ret
neg
jns
out
fst
ficomp
int
cmp
ret
xor
inc
clc
mov
int3
pop
and
in
mov
dec
jns
test
push
xchg
add
in
pop
lock
sahf
rol
cdq
ret
fisttp
ffree
cmp
pop
vcvtpd2udq
(bad)
fild
into
es
mov
xor
add
mov
pop
sar
adc
xchg
cmp
test
inc
xchg
jmp
fs
inc
out
out
pop
and
je
popf
lea
push
jnp
pop
test
and
nop
cwde
jae
xor
pop
push
and
mov
pop
sub
les
ins
xlat
cmp
jl
test
in
scas
outs
or
cs
xchg
mov
or
mov
(bad)
and
int3
popf
enter
out
sub
fisttp
stos
mov
sahf
lahf
pop
add
sbb
das
jle
ret
stos
and
add
retf
sub
mov
icebp
jb
and
aas
icebp
loopne
ret
dec
pop
aam
pushf
rcl
pop
xchg
dec
add
push
stos
pop
jns
icebp
cs
(bad)
lock
lods
iret
out
fadd
mov
mov
add
push
mov
loop
pop
mov
xor
adc
dec
push
and
aaa
adc
inc
(bad)
jecxz
mov
out
jae
(bad)
mov
push
je
jp
cmp
(bad)
inc
inc
fisubr
mov
sbb
jmp
les
dec
aas
out
clc
jge
das
scas
inc
addr16
(bad)
sbb
es
add
push
sahf
scas
mov
ret
pop
pop
(bad)
pop
addr16
loopne
ret
adc
mov
mov
test
jmp
add
test
fchs
dec
cld
xor
pop
or
shl
add
shl
arpl
rcr
cmps
add
les
adc
lahf
mov
push
rep
cmp
push
aam
test
xor
jnp
rcl
pop
mov
sbb
sbb
pop
lea
xchg
sar
dec
ss
ret
test
or
fdiv
retf
lea
mov
dec
xchg
mov
outs
and
cmp
jbe
aaa
cmp
nop
inc
cmc
enter
mov
sub
add
es
out
das
push
mov
and
popa
jecxz
mov
push
jecxz
add
iret
lea
pop
fiadd
sub
(bad)
sbb
mov
fidiv
add
outs
pop
xor
dec
ss
shl
push
cmp
test
cmps
dec
sar
mov
xchg
cmc
sti
cmps
enter
mov
nop
mov
fwait
push
or
std
xchg
xor
add
mov
outs
(bad)
sub
ins
out
out
mov
leave
pusha
mov
rcr
xchg
pop
rcl
shld
sbb
sar
pusha
(bad)
cs
test
outs
lds
mov
and
mov
pushf
(bad)
mov
(bad)
stos
and
pop
adc
mov
bound
push
mov
into
and
mov
aad
stos
jns
int3
jle
inc
inc
into
lds
icebp
sbb
ret
push
sbb
and
leave
push
xor
sti
or
loopne
adc
imul
movs
inc
xchg
push
sub
add
retf
xchg
pusha
push
sbb
or
into
push
add
sti
neg
(bad)
ja
and
push
icebp
cld
mov
xchg
(bad)
dec
dec
and
mov
ja
add
cld
lods
mov
xor
pop
in
(bad)
jmp
shl
fild
fwait
loopne
stos
mov
ret
ret
out
call
mov
mov
or
and
add
sbb
mov
push
mov
test
mov
sbb
push
inc
cmp
mov
dec
leave
dec
mov
dec
xor
adc
sbb
sub
sbb
pop
inc
in
pop
test
aam
jb
mov
cmp
ret
out
fldenv
or
cmps
xchg
fwait
retf
and
sub
jl
mov
sbb
ret
dec
das
dec
xchg
xchg
sub
xchg
pop
cmp
pushf
add
add
jle
push
inc
(bad)
rol
int3
push
inc
iret
cdq
jg
add
es
and
and
aad
rcr
adc
pop
iret
mov
dec
inc
aaa
(bad)
int
pop
shr
xchg
lahf
mov
rcr
mov
add
mov
iret
std
adc
inc
add
jnp
mov
movs
xchg
add
aaa
pop
ret
test
cld
cmp
mov
xor
in
push
lea
ror
and
lods
fs
mov
mov
mov
dec
cmp
lock
leave
and
mov
mov
les
jae
sar
ret
jne
and
repnz
jbe
lock
mov
adc
mov
or
imul
movs
cld
mov
cmp
pop
loopne
imul
aas
je
xchg
add
iret
jbe
cmp
xchg
out
fadd
pop
pop
fild
jae
or
add
cmp
call
push
mov
in
cmp
(bad)
push
dec
sbb
jmp
jmp
into
stos
push
dec
(bad)
fstp
jne
or
test
mov
push
mov
mov
dec
jnp
jnp
mov
add
sbb
aas
fnstsw
jmp
mov
sub
cwde
push
cmp
xor
mov
(bad)
lea
rcr
(bad)
mov
mov
aas
enter
cmp
mov
xchg
mov
in
lods
dec
adc
outs
xchg
add
xchg
xchg
and
icebp
test
test
and
push
cmp
sbb
fld
pop
in
je
push
jo
fdiv
push
jp
lock
and
gs
mov
cmp
fwait
xchg
cmp
sbb
ja
pop
ret
std
jl
and
xchg
adc
jge
sub
mov
push
and
daa
jecxz
sbb
sti
jo
inc
scas
adc
xchg
fld
add
scas
inc
dec
push
lods
movs
pop
mov
xor
pusha
sub
bndldx
fwait
mov
leave
loop
push
iret
adc
cmp
jne
std
cmps
pushf
jecxz
ja
dec
sub
aam
outs
test
cld
mov
ins
sbb
sti
pop
and
imul
or
imul
and
or
fcomp
mov
inc
out
fwait
shl
xlat
pop
adc
mov
femms
mov
dec
test
xchg
aad
je
retf
retf
inc
cmp
mov
pop
bound
jle
mov
pop
aam
(bad)
jne
mov
rol
sbb
out
es
and
inc
add
push
cli
not
out
pushf
popa
je
test
data16
repz
and
jae
mov
in
dec
mov
pop
or
inc
cmp
inc
adc
or
enter
movs
cmp
std
cmps
xor
(bad)
xor
test
mov
adc
shl
inc
add
xchg
aam
(bad)
popa
pop
frstor
sbb
fst
in
sahf
jg
call
sti
ss
nop
in
cld
out
pop
mov
adc
cmp
out
push
jb
into
popf
jle
mov
js
test
lahf
push
sbb
shrd
data16
fbstp
lods
aaa
popa
push
add
mov
mov
dec
out
push
xchg
fisttp
mov
scas
xor
inc
pop
mov
jle
out
and
scas
test
(bad)
sbb
hlt
test
sub
idiv
mov
test
stos
aaa
mov
nop
sub
mov
cmps
push
and
xchg
ins
and
and
xor
in
sbb
call
mov
and
or
inc
icebp
xchg
mov
jne
outs
mov
push
repnz
push
sbb
in
(bad)
xchg
add
and
std
mov
js
cmp
xchg
lods
mov
sub
pop
movups
pushf
mov
mov
or
ror
pushf
mov
mov
imul
ret
dec
shr
in
pop
ret
jge
rcl
or
jp
clc
and
(bad)
xor
ret
mov
jb
pop
lods
fild
sub
mov
pop
mov
push
mov
arpl
std
sub
addr16
and
adc
cmp
ret
adc
rcl
mov
out
inc
mov
jecxz
retf
call
cld
rcl
and
mov
popf
xchg
pushf
push
dec
scas
shl
jbe
xchg
mov
adc
imul
test
in
xchg
sbb
pop
or
push
cmp
in
addr16
push
icebp
jae
mov
cmp
sti
sbb
jns
fcom
pop
sub
fmulp
bound
mov
pop
sti
add
dec
push
jmp
xor
fbstp
adc
hlt
mov
sub
xchg
adc
jb
aam
lahf
xchg
repnz
enter
(bad)
xor
mov
sti
rcr
pop
(bad)
in
push
movs
mov
in
sbb
in
sbb
push
and
pop
mov
jo
adc
push
xchg
mov
fidiv
test
dec
cmps
fwait
add
push
aas
xchg
in
mov
add
pop
inc
mov
or
xchg
mov
mov
int
movs
add
dec
shr
mov
mov
adc
sbb
loop
enter
cmp
scas
mov
add
lahf
xchg
pop
lds
pusha
or
inc
add
inc
popf
enter
daa
dec
(bad)
call
sub
or
push
mov
push
les
test
xchg
cs
add
sbb
mov
pop
pop
pop
cmp
data16
mov
or
scas
cmp
mov
mov
xlat
push
sbb
ret
ficomp
mov
jns
jnp
mov
(bad)
xchg
adc
mov
push
xchg
mov
hlt
mov
call
js
loope
adc
add
sbb
sahf
imul
and
mov
imul
das
nop
mov
sub
xchg
(bad)
imul
mov
cmps
outs
and
jo
xlat
pop
mov
call
jnp
adc
pushf
icebp
dec
fidivr
fsubr
out
cmps
mov
into
ror
lds
test
aas
repz
mov
ficom
out
inc
mov
mov
mov
inc
mov
pop
retf
test
mov
jae
repnz
outs
adc
les
shl
and
pop
pop
(bad)
lock
in
push
inc
lock
and
lahf
out
shl
std
mov
dec
adc
pop
mov
lods
shr
into
gs
iret
pop
push
imul
mov
or
(bad)
adc
xchg
(bad)
stos
xlat
push
fmulp
movs
ret
sbb
test
stos
retf
cwde
pusha
(bad)
xchg
cwde
sub
clc
cwde
dec
cmp
call
hlt
jno
mov
mov
fiadd
xchg
lock
fsubr
stos
data16
shr
pop
mov
repnz
outs
cld
sbb
ds
sbb
add
and
jne
test
aad
ret
call
mov
push
(bad)
call
pop
sbb
icebp
f2xm1
jae
sbb
iret
retf
aaa
sub
rol
cmps
jne
push
push
inc
xchg
or
and
mov
ja
fnstsw
cmp
pop
into
and
fist
les
out
sub
cmp
ins
push
mov
or
shl
ss
shr
and
adc
dec
pop
ss
icebp
jle
jo
shl
sar
cmp
mov
in
hlt
scas
les
mov
sbb
loop
mov
mov
call
arpl
outs
adc
push
or
push
scas
test
fidivr
cmp
retf
jb
lea
mov
ss
mov
adc
or
gs
push
mov
push
std
call
jecxz
cmps
xchg
iret
mov
push
sub
or
mov
outs
pusha
jg
mov
lea
xlat
dec
idiv
movs
mov
ins
imul
sbb
adc
and
xchg
(bad)
out
dec
sahf
fldcw
outs
and
push
(bad)
jo
test
lds
inc
mov
and
add
dec
in
add
stos
push
or
dec
into
fwait
push
mov
pop
xchg
hlt
test
lock
cmp
cli
les
add
adc
daa
sahf
pop
push
movs
popa
add
and
out
pop
rcl
jno
mov
lea
ror
mov
movs
mov
int
adc
mov
jge
push
add
xlat
repnz
sbb
into
pop
adc
inc
scas
lods
cmc
popa
mov
rcr
(bad)
sub
popf
enter
in
jnp
fsubr
ds
adc
movs
ja
js
inc
jge
mov
pop
push
xchg
ja
test
ds
(bad)
fcmove
fwait
(bad)
in
inc
mov
lahf
mov
or
std
scas
push
ds
mov
sbb
jbe
popa
add
popf
add
sbb
cli
xlat
les
and
add
lock
add
or
add
push
sub
add
loope
add
xchg
add
cmp
add
fadd
add
xor
inc
stc
ltr
jnp
lods
iret
mov
aam
xchg
add
mov
add
sti
sub
jnp
or
add
add
jmp
repz
out
add
sbb
add
jmp
jns
dec
add
add
add
jle
cdq
(bad)
jecxz
aas
mov
sub
push
pcmpgtw
aaa
fneni(8087
add
add
xchg
push
add
dec
outs
add
add
add
jo
add
and
add
sbb
add
fnstenv
add
adc
add
sbb
das
fld
mov
add
and
add
mov
fiadd
add
pop
add
add
add
outs
mov
jmp
(bad)
jbe
mov
out
jne
cli
dec
(bad)
ret
jl
mov
ins
enter
push
add
adc
enter
es
test
lahf
inc
js
loopne
ficom
pop
pop
scas
pop
pop
dec
imul
add
neg
add
add
add
pop
sbb
aam
fldenv
dec
add
repnz
add
add
stos
add
test
add
add
add
add
add
add
add
push
add
fcmove
add
mov
add
fwait
sti
add
mov
int
mov
or
sbb
hlt
loopne
add
stos
add
mov
jne
addr16
push
add
test
dec
adc
add
or
pop
mov
add
sbb
xchg
add
add
add
or
out
fild
jne
mov
add
xchg
push
add
mov
jge
add
add
pop
mov
add
sbb
add
fidiv
add
adc
add
jecxz
add
dec
add
fsubr
mov
add
add
add
ret
and
add
outs
mov
push
inc
cmp
xchg
jo
add
xchg
xor
add
das
pop
add
xchg
sbb
movs
fstp
and
add
or
jle
mov
movs
add
add
add
add
xor
cdq
and
data16
adc
or
scas
leave
inc
outs
ins
or
jl
add
in
outs
jg
add
out
out
add
mov
xchg
mov
or
mov
push
gs
add
int
leave
xchg
mov
outs
cmps
mov
lods
ror
add
ficom
ins
fyl2xp1
cmp
add
enter
out
inc
aam
je
mov
push
xchg
inc
jo
retf
rcl
mov
inc
mov
cvtdq2ps
enter
add
add
mov
adc
add
xchg
or
or
int
inc
or
lock
mul
ins
retf
jb
mov
or
add
cwde
jb
(bad)
test
pop
push
sahf
test
pop
ret
pop
lds
scas
into
popa
repz
xchg
out
push
ins
mov
jo
mov
add
dec
frstor
icebp
pop
hlt
scas
mov
add
std
xor
aas
test
jne
ss
(bad)
jns
add
pop
mov
xchg
aad
je
xchg
mov
and
pop
push
pop
scas
dec
add
sbb
inc
pop
jnp
xchg
dec
es
inc
xchg
loop
arpl
leave
lea
cdq
popf
sbb
push
inc
in
add
(bad)
push
movs
sar
stos
fmul
adc
dec
pop
retf
lahf
ins
int3
in
xor
cld
mov
fst
dec
bound
push
stc
mov
int3
es
pushf
or
shl
out
add
xor
lahf
shr
xchg
aad
cld
add
aaa
push
pop
adc
inc
out
mov
aaa
add
or
jp
add
add
call
jecxz
sub
add
popa
push
xor
fstp
loopne
inc
scas
cli
or
mov
pop
in
cmp
dec
add
mov
mov
mov
add
pop
push
mov
(bad)
xchg
je
daa
dec
add
std
add
aam
out
adc
add
in
pop
add
cmp
arpl
jb
dec
adc
(bad)
sub
or
mov
add
cmc
jb
dec
mov
push
and
add
add
inc
and
dec
or
data16
mov
pop
iret
xchg
push
es
cmc
ds
sahf
add
push
lea
dec
inc
in
mov
lds
sub
sub
jle
dec
inc
gs
outs
add
daa
(bad)
cmp
out
sahf
cmp
cli
add
mov
and
and
cli
mov
stos
in
sub
add
push
fdiv
stos
or
add
fst
adc
cmp
lock
sub
ins
hlt
pop
xor
arpl
sub
mov
add
sub
xchg
inc
nop
shr
sbb
out
ss
leave
adc
add
test
mov
mov
jbe
mov
fstp
add
stos
mov
push
retf
add
rcr
mov
jns
adc
fld
pop
sub
mov
push
push
gs
adc
pop
and
in
or
push
mov
dec
cmp
pop
add
lods
scas
mov
in
es
xchg
ja
add
push
jecxz
xor
mov
(bad)
rol
or
add
xor
fistp
adc
lds
jo
xchg
div
int3
add
aam
push
adc
add
nop
cdq
jl
mov
fs
clc
add
jp
and
or
mov
ja
fbld
pop
jb
and
shl
sbb
inc
sbb
jecxz
adc
add
push
add
loop
das
mov
jb
sub
shl
xchg
inc
nop
shr
add
add
xor
cwde
sub
imul
add
inc
cmp
in
scas
add
call
mov
out
enter
pop
add
pop
mov
add
fs
add
ret
inc
inc
dec
add
and
dec
and
loopne
cmp
cmp
and
xchg
pushf
add
cdq
add
loope
add
push
mov
add
push
inc
add
dec
add
test
loope
add
pop
push
add
cmp
add
cmp
ret
dec
xor
add
add
add
and
xor
add
