faddp
dec
(bad)
mov
add
dec
out
add
inc
sub
fs
sub
data16
mov
sbb
inc
sub
xor
ins
(bad)
retf
dec
out
mov
mov
fs
into
adc
jl
aam
sub
fwait
sbb
(bad)
fs
sub
fs
add
xchg
mov
dec
call
pushf
mov
or
sub
adc
pop
sbb
push
idiv
out
data16
out
add
mov
and
out
pop
sbb
inc
add
arpl
cwde
std
lods
add
or
out
jge
les
mov
dec
nop
mov
mov
inc
hlt
(bad)
pushf
or
ss
div
out
add
ret
jl
mov
mov
add
pxor
stos
jns
inc
or
lods
add
jne
inc
or
mov
add
rcl
mov
jns
inc
or
pop
inc
or
shl
pxor
adc
push
xchg
pop
adc
or
cmp
js
(bad)
xchg
or
(bad)
mov
les
test
pop
push
pop
ret
div
bound
(bad)
jmp
or
call
mov
bound
(bad)
fisttp
idiv
jns
bound
daa
adc
fcom
push
into
sub
dec
sub
add
add
pop
xor
int3
inc
out
jge
test
iret
dec
push
or
or
and
add
into
sub
add
out
add
cmps
enter
fwait
sub
ficom
mov
xor
add
pop
pop
inc
or
ins
les
mov
push
push
data16
push
mov
std
lods
add
cmp
mov
jecxz
dec
sub
pxor
mov
pop
mov
out
add
cmps
cmp
out
add
sbb
bound
out
push
pop
sub
or
add
sbb
loopne
ss
sub
sub
in
fldenv
ins
les
out
push
and
xchg
pxor
std
lods
add
or
mov
imul
mov
pop
pop
inc
or
ins
les
jl
mov
mov
add
mov
add
dec
mov
dec
or
scas
jle
out
push
pop
sbb
imul
mov
mov
pop
(bad)
test
out
push
daa
out
push
and
xchg
cwde
or
out
add
dec
out
imul
les
mov
into
adc
jge
faddp
jecxz
test
test
sbb
add
out
add
mov
push
loopne
cwde
add
int3
add
xor
push
loopne
cwde
add
jl
push
and
bound
sbb
out
or
sar
test
inc
jecxz
ins
(bad)
sbb
add
dec
sbb
or
data16
xor
sbb
cmp
sub
sub
xlat
and
shr
pop
daa
out
push
bound
add
adc
mov
or
lock
add
les
or
inc
sbb
das
jmp
mov
sbb
cmp
(bad)
jge
test
idiv
(bad)
(bad)
jge
pop
(bad)
jno
out
mov
mov
cld
loopne
xchg
add
inc
sbb
das
jmp
into
xchg
clc
or
call
add
inc
outs
mov
scas
pop
push
test
add
mov
js
jns
add
mov
mov
add
daa
out
(bad)
jge
adc
movs
mov
mov
fwait
add
lea
idiv
idiv
jge
adc
daa
out
(bad)
jge
adc
movs
scas
jns
dec
data16
idiv
adc
push
xor
add
mov
add
cmp
pop
imul
les
pop
ror
adc
mov
inc
lock
stos
clc
or
pop
inc
or
mov
or
mov
or
stos
clc
or
pop
inc
or
dec
(bad)
stos
cld
or
push
add
inc
push
adc
je
jne
push
data16
mov
out
add
(bad)
ret
jge
adc
(bad)
stos
adc
or
jne
(bad)
stos
cld
jecxz
push
cmp
imul
inc
clc
les
add
scas
xor
jne
je
jb
mov
cld
or
mov
into
daa
dec
rol
or
push
cmp
loopne
jae
adc
mov
adc
or
mov
ror
add
dec
pop
cmp
push
pop
sbb
(bad)
mov
iret
enter
mov
xor
fs
mov
inc
fcom
push
mov
add
or
mov
into
daa
dec
rol
or
push
cmp
cmp
(bad)
lea
test
adc
sbb
mov
addr16
or
or
fbstp
test
mov
inc
mov
test
mov
(bad)
(bad)
call
test
mov
inc
mov
fsub
mov
out
push
dec
bound
push
adc
mov
fs
add
stos
cld
lods
je
cmpxchg
mov
or
fdivp
jecxz
pop
aaa
jo
out
mov
push
rol
call
mov
jmp
(bad)
retf
mov
retf
popa
sbb
xor
out
or
out
mov
inc
cld
les
mov
inc
hlt
adc
mov
sbb
push
pop
sbb
mov
dec
or
mov
jl
mov
fdivp
jecxz
pop
iret
jg
out
mov
push
rol
call
mov
jmp
(bad)
retf
mov
retf
popa
sbb
xor
fld
or
pop
mov
adc
or
(bad)
or
out
pop
push
push
es
pop
les
push
pop
sbb
pop
sbb
stos
cld
mov
inc
or
mov
jl
mov
adc
cmp
xlat
mov
fs
mov
jl
faddp
dec
cmps
loope
xor
adc
dec
dec
out
xor
adc
mov
sbb
push
pop
sbb
repnz
cdq
sbb
data16
test
jne
and
mov
inc
inc
lods
push
pusha
adc
inc
or
pop
xor
mov
push
adc
inc
pop
sbb
jecxz
mov
or
add
xor
mov
ror
push
pop
sbb
repnz
pop
or
out
imul
les
jne
movs
ret
je
dec
data16
bound
add
lock
push
mov
add
pop
jecxz
dec
out
mov
jmp
sub
or
out
mov
adc
mov
sbb
push
pop
(bad)
call
int3
sbb
xor
dec
fwait
or
sbb
out
dec
dec
adc
(bad)
idiv
pop
inc
fs
idiv
sbb
push
out
lock
data16
loopne
lahf
add
adc
mov
into
add
sbb
inc
xor
fs
mov
into
leave
add
dec
pop
mov
dec
mov
lods
add
les
mov
dec
pop
mov
jl
or
inc
jae
or
mov
inc
or
jmp
or
stos
lock
movs
mov
ret
cmp
das
mov
out
jge
lock
push
inc
or
jmp
call
out
add
dec
retw
mov
faddp
add
stos
in
lea
jmp
les
add
les
push
loopne
adc
not
rcl
leave
retf
sbb
mov
out
add
movs
pop
jo
dec
mov
jb
arpl
and
xchg
mov
dec
adc
or
pop
mov
mov
dec
out
mov
xor
jecxz
mov
stos
or
xor
sub
pop
dec
out
xor
fwait
sbb
sbb
out
jecxz
mov
pushf
stos
pxor
pusha
mov
add
shr
mov
push
idiv
jecxz
xchg
aas
out
add
xchg
call
lods
adc
neg
adc
test
pushf
stos
pxor
loope
out
add
int3
sbb
add
cmp
shr
or
push
adc
stos
cld
mov
sbb
pop
leave
fadd
or
jge
dec
loopne
and
mov
pop
add
dec
adc
or
sub
xchg
sbb
or
retw
test
inc
cld
je
jl
pxor
into
retf
pxor
test
les
outs
or
add
mov
add
adc
fdivr
xchg
retw
outs
mov
inc
lock
inc
or
stos
lock
rcr
out
hlt
jmp
or
movs
xor
mov
mov
and
mov
adc
test
out
jne
and
xchg
jmp
mov
sti
cmp
or
fmul
retf
shr
mov
push
test
sbb
jnp
or
inc
hlt
inc
das
jne
mov
jl
pxor
test
test
mov
(bad)
jl
outs
xrelease
add
dec
out
je
in
jae
dec
dec
mov
or
or
mov
(bad)
inc
lock
ins
sub
mov
sub
push
inc
add
imul
les
div
mov
ror
adc
mov
xor
dec
fdivp
cmp
adc
or
xor
add
inc
xor
sbb
stos
cld
or
add
stos
inc
lock
jmp
les
sub
add
mov
dec
inc
gs
or
jl
shl
hlt
dec
fs
add
stos
add
sbb
out
call
mov
or
into
dec
dec
mov
mov
add
adc
mov
adc
jl
dec
push
test
out
mov
jecxz
data16
or
adc
cmp
inc
lock
jmp
inc
xor
or
sbb
or
gs
jno
jg
jno
jge
into
mov
or
pop
xor
les
inc
or
xor
push
into
mov
or
xchg
cld
or
loopne
jge
xchg
xchg
or
out
add
aaa
outs
(bad)
call
add
test
bound
add
dec
scas
push
loopne
add
les
add
mov
add
into
daa
dec
rol
or
push
mov
daa
out
lea
mov
(bad)
jge
pop
jg
dec
out
push
shr
clc
lods
lods
add
cmp
call
xor
data16
idiv
pop
call
push
adc
mov
out
add
movs
retf
ins
or
push
pop
test
jle
out
imul
les
div
sub
add
(bad)
lea
xchg
call
and
add
mov
test
mov
call
lahf
sti
div
imul
dec
out
mov
jl
mov
daa
out
call
loopne
add
les
div
aaa
mov
mov
int3
div
adc
neg
adc
xchg
out
lods
add
cmp
add
scas
test
mov
call
in
jae
dec
dec
mov
dec
or
dec
mov
mov
adc
test
adc
neg
out
mov
sbb
rol
or
mov
out
pop
enter
dec
outs
ret
mov
enter
mov
mov
pop
(bad)
xlat
call
inc
hlt
inc
das
jge
and
adc
loopne
push
push
into
sub
or
push
div
lods
add
mov
mov
adc
pop
in
jae
dec
dec
mov
jl
or
or
inc
push
cmovge
mov
push
push
mov
jl
int
std
div
jb
or
add
push
inc
or
push
div
sbb
test
mov
test
out
movsx
dec
push
mov
push
dec
out
jl
inc
pop
test
sbb
adc
pop
and
pop
sti
addr16
out
or
loopne
(bad)
jmp
(bad)
test
dec
test
mov
add
dec
out
jge
int3
sub
sub
and
xchg
or
call
mov
out
add
add
cmovb
rcl
mov
push
loopne
sbb
test
adc
or
in
(bad)
in
(bad)
test
leave
lods
lods
add
dec
inc
or
ins
les
adc
or
daa
bound
call
mov
(bad)
neg
pop
retf
std
mov
or
sar
test
test
mov
add
dec
out
push
and
xchg
or
call
mov
out
add
add
cmovb
rcl
mov
push
loopne
sbb
test
adc
or
in
(bad)
in
(bad)
test
stos
lods
lods
add
dec
inc
or
ins
les
adc
or
daa
bound
call
mov
(bad)
neg
pop
inc
std
mov
or
sar
test
test
mov
add
dec
out
mov
mov
adc
test
jnp
dec
dec
xchg
or
call
mov
out
add
test
dec
out
add
xchg
pop
in
scas
add
mov
sub
cmp
(bad)
(bad)
in
(bad)
test
jo
lods
add
dec
inc
or
ins
les
adc
or
inc
bound
call
mov
(bad)
neg
pop
scas
cld
mov
or
sar
test
push
test
adc
div
adc
mov
out
add
test
dec
out
add
dec
ins
mov
or
stc
(bad)
or
dec
bound
pop
movs
inc
cli
div
jmp
sbb
or
mov
xchg
retw
into
enter
mov
jmp
mov
bound
pop
(bad)
push
div
adc
les
test
dec
out
add
mov
mov
sbb
iret
mov
data16
xchg
retw
mov
adc
pop
enter
dec
ins
movs
fdiv
sbb
inc
dec
out
sub
ins
mov
or
mov
dec
out
or
sub
test
dec
sub
or
add
mov
lea
sbb
adc
pop
(bad)
(bad)
pop
push
data16
scas
test
bound
pop
and
test
(bad)
xlat
call
out
add
dec
inc
hlt
inc
das
jge
shr
mov
push
or
push
mov
mov
mov
ror
dec
out
mov
data16
xchg
retw
mov
adc
pop
enter
dec
bound
pop
(bad)
push
div
adc
les
test
dec
out
add
dec
add
test
pop
push
mov
mov
sbb
xlat
mov
push
and
out
imul
les
div
xchg
cld
or
ror
out
lea
sbb
adc
pop
(bad)
xlat
call
inc
hlt
les
xor
les
jne
out
jge
int3
add
ins
dec
out
sub
adc
pusha
sbb
push
div
add
into
sub
call
out
jmp
bound
jmp
dec
out
cmp
mov
in
div
adc
neg
out
lea
sbb
out
or
data16
xchg
retw
outs
mov
div
push
div
adc
test
adc
clc
addr16
mov
in
sbb
or
sti
call
adc
mov
jmp
or
movs
xor
push
mov
mov
mov
sub
or
or
inc
push
or
sub
outs
ret
test
add
mov
push
or
push
mov
mov
mov
cmp
or
push
or
cmp
shr
mov
push
or
push
mov
mov
mov
ins
or
push
or
sub
push
loope
dec
out
push
movs
adc
dec
mov
sar
retf
sub
test
adc
or
test
enter
mov
test
rcr
mov
and
out
dec
out
add
mov
adc
test
push
add
dec
out
rep
(bad)
push
movs
div
adc
les
add
mov
adc
test
out
jge
into
dec
test
mov
add
mov
push
or
push
mov
mov
mov
cmp
or
push
or
xor
loopne
add
test
(bad)
push
mov
push
mov
hlt
div
adc
neg
iret
mov
data16
xchg
retw
mov
adc
pop
enter
dec
mov
test
add
mov
jl
shr
mov
push
idiv
xchg
div
adc
dec
les
div
in
or
push
pop
div
pusha
add
dec
sub
or
add
adc
test
adc
div
lods
add
mov
call
mov
adc
test
rol
or
push
mov
int3
add
adc
adc
push
div
pop
push
mov
test
sbb
out
or
test
mov
push
test
adc
div
out
add
xor
push
test
mov
add
test
(bad)
(bad)
pop
inc
data16
scas
test
adc
or
dec
push
mov
test
iret
loop
div
adc
pop
(bad)
(bad)
pop
inc
test
(bad)
pop
inc
adc
or
push
mov
test
mov
inc
iret
add
div
adc
or
call
(bad)
test
imul
les
div
push
div
adc
into
push
shl
mov
add
test
mov
call
(bad)
pop
inc
ins
mov
or
jecxz
lea
fs
sbb
mov
sbb
out
lea
fs
sbb
mov
jl
mov
(bad)
push
div
adc
movs
enter
mov
push
test
pusha
leave
pop
inc
or
mov
pop
sub
or
add
sbb
loopne
stos
in
jp
sub
dec
out
(bad)
dec
mov
add
dec
outs
inc
in
test
add
and
pop
or
out
or
pop
jb
mov
xor
call
mov
push
cmps
mov
or
inc
call
mov
add
jl
mov
add
iret
or
push
mov
pop
push
push
jle
dec
mov
out
add
sbb
pop
sbb
outs
outs
mov
mov
data16
pusha
int
inc
or
out
push
and
test
bound
outs
ins
dec
out
mov
sbb
out
dec
out
pop
ror
adc
sbb
repz
cmp
or
fwait
mov
dec
data16
dec
out
mov
dec
pop
mov
into
retf
or
add
dec
out
sub
sub
or
out
add
dec
stos
cdq
dec
dec
jmp
or
enter
mov
pop
sti
jmp
inc
arpl
dec
out
cmp
pop
ret
or
and
fstp
or
loop
xchg
or
inc
loope
in
add
mov
je
pxor
enter
pop
fsubr
dec
mov
pop
add
movs
rol
or
or
dec
mov
rol
dec
sbb
or
loop
in
scas
add
dec
xlat
lahf
dec
dec
add
test
lock
sub
or
dec
xlat
lahf
dec
dec
push
cli
or
dec
mov
out
adc
shl
in
add
int3
sbb
cmovge
add
dec
inc
xchg
or
mov
loope
adc
idiv
out
add
dec
faddp
loope
in
add
int3
sbb
dec
out
add
push
maskmovq
div
jo
or
pop
cmp
out
or
int
sbb
or
scas
mov
div
jo
or
cmp
out
mov
fs
mov
int
sbb
dec
add
or
mov
mov
test
fwait
pop
cmp
out
and
int
sbb
dec
stos
cdq
dec
dec
in
add
dec
push
mov
mov
dec
mov
cmp
dec
pop
mov
int
sbb
dec
out
add
in
add
xor
scas
add
mov
data16
mov
lahf
dec
dec
scas
jmp
test
into
das
add
dec
xlat
lahf
dec
dec
push
into
or
mov
or
nop
dec
dec
push
mov
in
scas
add
dec
xlat
lahf
dec
dec
push
scas
or
dec
into
jmp
shr
add
les
sub
les
or
push
mov
dec
out
xor
movs
and
or
or
sub
sub
dec
out
mov
or
add
inc
pop
add
add
in
(bad)
retf
test
int
add
xor
add
adc
int
sbb
jp
add
jecxz
dec
in
xchg
or
add
cmps
int
or
les
xor
les
add
add
cmp
out
cmp
mov
je
pxor
or
or
out
add
out
lahf
mov
and
jmp
dec
out
add
dec
lahf
mov
pextrw
stos
cli
pop
sti
stos
sti
xor
inc
imul
mov
jne
mov
or
push
lods
add
inc
pop
inc
repz
add
dec
call
dec
jmp
or
or
adc
jge
outs
jge
dec
call
dec
in
jmp
int
cli
or
retf
add
lock
scas
mov
out
or
or
into
sysret
or
xor
jne
int
sti
or
call
inc
or
lock
jecxz
dec
dec
out
jmp
les
inc
sbb
dec
dec
add
or
dec
in
out
dec
dec
(bad)
add
jp
outs
out
push
imul
mov
nop
dec
dec
out
jmp
les
inc
sbb
dec
dec
add
pxor
or
in
xlat
lahf
dec
dec
(bad)
add
jp
adc
add
das
inc
push
push
es
pop
les
push
pop
sbb
adc
mov
data16
test
or
adc
add
pxor
int3
mov
or
mov
dec
dec
xchg
mov
out
push
loopne
mov
or
call
add
imul
les
cmp
loopne
mov
or
sbb
mov
out
push
loopne
mov
or
fistp
mov
out
push
loopne
mov
or
mov
dec
dec
mov
ror
jo
sbb
jle
xchg
out
fadd
stc
lods
add
push
inc
or
stos
test
mov
pop
test
out
(bad)
dec
movs
test
or
add
test
inc
mov
sub
or
add
xor
out
sub
sub
dec
into
mov
or
aaa
xor
les
ins
cdq
out
(bad)
dec
xchg
out
add
dec
sub
dec
out
add
cmc
mov
or
jecxz
or
retf
shr
mov
out
mov
adc
iret
or
or
mov
jmp
sub
dec
stc
out
add
dec
ins
gs
bound
rcr
or
mov
add
pop
sbb
cmp
jae
bound
inc
lods
sbb
test
dec
adc
movs
jae
or
inc
test
adc
shr
stos
sub
add
dec
fwait
mov
dec
test
idiv
dec
push
daa
out
push
daa
jmp
jnp
dec
out
mov
jmp
sub
jge
pop
out
push
dec
out
dec
shr
test
or
pop
sbb
in
cmps
jmp
add
adc
mov
into
add
or
and
dec
mov
inc
in
les
mov
inc
hlt
(bad)
stos
or
or
mov
dec
lock
mov
or
pop
mov
jmp
or
out
lea
mov
(bad)
jge
test
test
sbb
mov
jne
mov
xor
mov
adc
dec
dec
out
leave
retf
sbb
pop
sbb
imul
mov
mov
je
pxor
jge
test
neg
lahf
dec
dec
push
out
dec
out
imul
les
leave
retf
sbb
mov
fs
(bad)
mov
test
inc
sti
jmp
xor
cmp
movsx
fadd
xor
cmp
movsx
fadd
xor
cmp
movsx
fadd
xor
cmp
movsx
fadd
inc
imul
dec
out
mov
bound
gs
(bad)
into
or
add
sti
stos
inc
sti
jmp
push
lods
add
sti
sti
xor
out
add
pop
stc
cmp
inc
push
or
mov
into
add
push
xor
ins
jmp
sub
and
loopne
or
shr
or
jne
inc
pop
inc
mul
das
jne
pxor
adc
add
inc
pop
push
mul
cmp
shl
mov
or
inc
lock
daa
inc
pop
jmp
popf
in
inc
lock
pop
add
or
mov
bound
out
clc
mov
data16
dec
out
add
cmps
iret
movsx
adc
pop
outs
cmp
lahf
push
inc
or
js
jp
push
mov
je
pxor
pop
les
dec
mov
add
push
data16
mov
jmp
dec
les
and
outs
cmp
dec
call
inc
pop
add
jno
je
jo
add
dec
fwait
or
int
push
sub
stc
mov
dec
stos
adc
cmps
jmp
enter
sbb
int
or
mov
push
dec
call
int
push
or
mov
add
or
mov
jmp
add
jmp
daa
into
daa
inc
pop
jmp
popf
out
fmul
mov
inc
sbb
stos
add
dec
fs
lock
sti
add
mov
add
data16
inc
int
push
or
cmps
mov
into
pop
add
jae
clc
mov
out
jne
les
and
loopne
or
sar
or
je
jo
add
dec
call
(bad)
mov
add
or
jmp
or
add
adc
or
out
jp
adc
mov
into
add
sbb
inc
or
call
dec
outs
cmp
dec
call
dec
out
jbe
int3
adc
or
jae
or
pusha
pop
add
dec
(bad)
(bad)
jle
push
jmp
into
inc
adc
pop
sti
mov
mov
iret
xchg
dec
dec
(bad)
xor
mov
or
inc
pop
add
jo
add
dec
fwait
daa
xor
cmp
sub
jmp
les
add
gs
(bad)
test
scas
add
or
jb
cmps
enter
addr16
shr
dec
mov
repnz
out
fimul
popf
inc
cld
shr
sbb
add
into
daa
inc
popf
data16
or
jmp
dec
mov
add
movs
bound
fs
lock
(bad)
dec
into
daa
jmp
mov
push
push
dec
out
ror
mov
pop
loope
jmp
or
add
loopne
pop
pop
cs
mov
adc
loopne
adc
test
mov
retf
sbb
mov
retf
movs
and
dec
mov
stc
div
adc
or
rol
or
jae
mov
xlat
mov
add
enter
mov
or
outs
mov
or
dec
mov
mov
cmp
sub
fwait
sbb
mov
je
inc
pop
test
mov
jmp
dec
add
pop
sti
jp
out
adc
mul
and
cmp
mov
or
jp
(bad)
mov
mov
mov
mov
mov
and
fidiv
scas
in
mov
mov
adc
loopne
mov
or
jp
(bad)
mov
mov
iret
xchg
dec
dec
outs
test
mov
pop
test
mov
icebp
xor
mov
lea
adc
test
jp
out
adc
jmp
inc
or
test
sti
jp
out
adc
jmp
inc
or
jp
xlat
mov
dec
int
jecxz
mov
add
leave
js
or
aas
icebp
mov
mov
mov
je
pxor
test
cs
les
add
or
fdivrp
jecxz
xchg
sbb
push
loopne
mov
or
sub
or
pop
mov
dec
int3
sub
sbb
cmp
cmp
lea
sbb
out
dec
into
dec
in
out
adc
loope
out
add
and
adc
idiv
aaa
fcomip
mov
pslld
inc
hlt
inc
das
je
into
dec
adc
adc
adc
fdivp
mov
inc
cmp
in
shr
in
push
hlt
(bad)
fstp
mov
mov
or
adc
or
out
jb
int3
adc
or
jb
les
add
or
add
mov
outs
sti
or
adc
movs
in
div
add
test
mov
mov
sub
xor
add
div
adc
test
mov
xchg
adc
loopne
mov
add
dec
loopne
popf
mov
or
and
mov
dec
hlt
out
adc
sbb
out
div
ss
cs
dec
mov
mov
fs
cld
mov
in
mov
mov
add
lods
in
add
out
retf
in
dec
int3
push
hlt
out
adc
or
out
jb
mov
je
pxor
test
inc
or
test
(bad)
in
adc
jno
add
les
(bad)
mov
or
in
add
mov
test
fdiv
div
in
mov
(bad)
push
(bad)
mov
mov
dec
in
mov
les
xlat
mov
mov
les
xlat
mov
push
shr
mov
push
idiv
xor
div
out
mov
je
mov
dec
(bad)
push
xlat
mov
mov
dec
push
xlat
mov
xor
call
daa
out
mov
mov
mov
loop
mov
add
fadd
div
fwait
mov
dec
loopne
popf
mov
or
fcomip
mov
(bad)
fcom
cli
xor
fcomp
div
sti
adc
sbb
xchg
sbb
push
loopne
mov
mov
mov
or
inc
push
or
xor
jl
(bad)
push
out
adc
mov
dec
out
je
int
or
inc
imul
out
jmp
or
out
div
out
add
into
add
add
enter
mov
test
into
inc
in
mov
add
div
xlat
add
lock
call
int
add
lock
call
int
add
jmp
mov
je
pxor
mov
mov
loop
les
lods
xchg
adc
mov
dec
fdivp
mov
movsx
jmp
push
(bad)
jmp
or
add
jge
mov
cmps
ins
mov
cmps
loopne
lea
pop
sub
xbegin
mov
jp
outs
lods
stos
xchg
adc
or
xchg
stos
xchg
adc
leave
scas
in
mov
sub
or
sar
or
mov
push
int
cmp
or
sti
xor
add
dec
out
jne
int
cmp
or
in
inc
jecxz
loopne
(bad)
out
xor
test
or
repz
sbb
div
xor
div
adc
jle
adc
mov
xor
test
out
div
add
test
add
add
mov
data16
mov
hlt
out
adc
test
dec
movs
sar
mov
test
mov
pop
test
mov
icebp
xor
mov
lea
push
adc
mov
into
add
sbb
inc
lock
loope
int3
cmp
sub
add
or
add
cmp
or
inc
or
movs
or
mov
inc
sar
mov
bound
rcr
mov
out
mov
sti
jmp
ficom
dec
out
add
jmp
aad
or
aam
jge
lods
or
mov
retw
push
lock
mov
inc
pop
push
div
adc
dec
mov
jmp
int
dec
int
(bad)
sbb
or
dec
mov
jmp
or
pop
mov
inc
sbb
dec
out
add
dec
out
or
movsx
out
cmp
jne
loopne
dec
dec
retf
dec
out
xor
call
sti
lods
add
into
adc
cli
or
or
adc
pop
sti
lods
add
push
out
sar
loopne
into
pop
add
test
sub
les
add
jo
add
dec
call
sti
in
cmp
jge
sbb
jne
add
or
add
or
add
iret
mov
inc
hlt
dec
add
or
pop
mov
inc
sbb
or
add
inc
outs
inc
hlt
dec
outs
jge
dec
popf
in
and
stos
dec
dec
out
movsx
or
out
jne
int
dec
inc
pop
inc
not
mov
ror
push
cmp
mov
mov
xchg
or
push
bound
pop
pop
dec
out
mov
into
daa
dec
rol
or
push
mov
cmps
loope
xor
mov
jnp
add
inc
into
adc
ja
data16
xchg
retw
push
adc
mov
iret
add
movs
iret
push
or
push
mov
sbb
out
les
xlat
mov
mov
fs
mov
rcr
test
out
loopne
mov
call
test
out
loopne
mov
call
mov
pop
mov
jl
pop
push
test
sahf
push
inc
mov
test
bound
jne
daa
out
call
push
adc
add
mov
pop
pop
int3
sbb
out
push
and
test
bound
add
out
add
push
mov
xor
call
dec
fs
add
iret
add
or
mov
jl
jmp
daa
out
push
loopne
mov
or
mov
push
or
inc
hlt
int3
add
or
xchg
or
cmp
mov
inc
cld
cmps
jmp
inc
cld
mov
hlt
pop
mov
cld
pop
movs
daa
push
or
call
or
jmp
les
sub
les
pop
push
push
es
pop
les
push
pop
sbb
sub
mov
add
daa
jmp
or
out
push
idiv
out
jb
out
add
inc
out
add
jl
jmp
daa
in
push
daa
out
push
loopne
mov
or
mov
or
call
sbb
push
pop
mov
or
movs
and
dec
test
test
adc
dec
xchg
call
hlt
mov
fsub
dec
out
push
loopne
mov
add
dec
mov
push
test
add
mov
adc
outs
test
or
data16
bound
or
out
push
daa
out
push
and
adc
movs
(bad)
or
mov
sbb
jge
faddp
jecxz
test
bound
add
or
dec
test
test
adc
cmp
(bad)
jge
mov
add
mov
add
lea
push
sub
stos
cld
loope
gs
mov
adc
rol
xor
cmovb
ss
sub
xor
jecxz
cld
push
adc
and
pop
jnp
dec
out
cmp
xchg
call
push
out
add
cmps
cld
movsx
push
pusha
js
inc
or
ins
les
push
aam
add
pop
xor
cmps
in
xor
out
jne
mov
ds
jge
xor
push
pusha
cmovb
movs
ret
push
or
les
(bad)
stos
cld
or
es
pop
les
push
pop
sbb
jne
mov
jg
or
les
dec
out
push
loopne
mov
jmp
pop
loopne
or
mov
add
lods
mov
or
sbb
and
pop
iret
pop
dec
out
pop
or
mov
dec
sub
pop
push
test
and
mov
cmp
les
add
les
iret
or
in
or
mov
or
mov
or
xchg
repnz
mov
or
rep
cmc
jb
or
jecxz
or
mov
int
adc
cmp
iretw
or
or
cli
scas
add
cmc
add
dec
sbb
or
pop
inc
test
rcl
stos
in
mov
adc
jge
ins
ins
in
outs
jmp
jns
add
xor
add
fs
add
pop
inc
or
stos
(bad)
jecxz
outs
jmp
inc
out
add
sti
stos
inc
sti
stos
add
or
pop
xor
jne
into
sub
int
dec
int
dec
cmp
mov
mov
retw
or
movsx
push
add
adc
popf
xchg
gs
out
add
cli
mov
add
data16
xchg
retw
add
mov
data16
in
pop
cli
mov
inc
fmul
or
movsx
loopne
pop
dec
(bad)
rol
cli
mov
add
fs
add
pop
inc
add
mov
or
popf
out
inc
in
(bad)
stos
in
dec
data16
xchg
retw
push
adc
cwde
fnstsw
or
add
dec
jg
jo
clc
pop
cwde
enter
fnstsw
fnstsw
cwde
jl
nop
cwde
fnstsw
cwde
fnstsw
cwde
or
jg
cwde
fnstsw
cwde
or
jg
rcr
jg
cwde
cmp
mov
cwde
idiv
loope
dec
jg
dec
inc
sub
cwde
enter
fnstsw
adc
jg
cwde
jl
nop
cwde
fnstsw
enter
cwde
je
nop
cwde
fnstsw
in
jg
cwde
sub
nop
cwde
fnstsw
loope
(bad)
std
test
out
add
dec
mov
cwde
fnstsw
or
ffree
and
push
jg
cwde
frstor
fnstsw
sbb
adc
mov
nop
cwde
fst
retf
cwde
fnstsw
je
jg
cwde
(bad)
fnstsw
mov
nop
cwde
fstp
nop
imul
mov
mov
pop
scas
add
clc
pop
or
lods
add
lods
lods
add
sub
retf
sub
jg
or
add
fnstsw
cwde
fnstsw
cwde
into
pop
add
fnstsw
cwde
imul
dec
dec
jg
rcr
jg
cwde
fs
cwde
fnstsw
fcmovu
jg
cwde
sbb
jg
rcr
nop
cwde
mov
jg
cwde
fnstsw
cwde
adc
jg
jo
clc
pop
cwde
jl
nop
cwde
fnstsw
lock
cwde
scas
sbb
mov
cwde
into
pop
add
fnstsw
cwde
idiv
loope
dec
jg
rcr
jg
cwde
fs
cwde
fnstsw
fcmovu
jg
cwde
sbb
jg
rcr
nop
cwde
mov
jg
cwde
fnstsw
cwde
adc
jg
dec
inc
sub
cwde
jl
nop
cwde
fnstsw
lock
cwde
scas
sbb
popa
cwde
fnstsw
cwde
sub
cmp
mov
ret
retf
sbb
mov
fs
add
stos
or
les
in
dec
jae
mov
retw
push
hlt
jl
iretw
or
add
movs
xor
or
fmul
mov
adc
push
les
jge
dec
call
addr16
push
inc
dec
out
mov
push
push
out
mov
pop
sti
mov
rcl
(bad)
stos
in
xchg
mov
mov
add
mov
pop
mov
gs
jno
jb
jno
ja
les
add
or
pop
dec
repnz
add
jo
add
dec
call
inc
pop
adc
sti
mov
adc
dec
out
push
and
bound
sbb
out
movsx
adc
adc
mov
call
bound
inc
cli
sbb
mov
add
dec
outs
jne
jnp
add
sub
inc
clc
inc
pop
inc
add
(bad)
mov
idiv
div
sub
sub
stc
rcl
int3
sub
and
call
mov
out
add
sbb
sar
out
retf
loop
icebp
push
(bad)
retf
mov
retf
out
mov
mov
(bad)
das
jmp
test
movmskps
cmp
call
mov
das
jl
inc
pop
jge
mov
add
pxor
sbb
inc
mov
inc
les
jge
mov
add
jns
test
pxor
mov
out
push
loopne
mov
push
les
add
dec
stos
call
or
les
in
daa
mov
hlt
cmps
clc
or
les
add
fs
cmp
inc
hlt
dec
dec
enter
add
je
cld
jp
dec
aam
pxor
mov
mov
mov
retw
cmp
out
xor
into
stos
clc
or
cmp
shl
lods
add
or
jb
movs
or
inc
aam
mov
dec
fs
inc
pop
inc
mov
cmp
mov
pop
inc
inc
dec
out
mov
pop
cmp
out
mov
loopne
test
cs
inc
cmp
or
scas
push
cmp
cmovl
dec
ins
les
daa
mov
cld
cmps
clc
and
les
add
fs
cmp
inc
cld
dec
dec
enter
add
je
hlt
jp
dec
aam
pxor
cmp
out
xor
into
stos
lock
cmp
shl
lods
add
or
jb
les
add
inc
pop
push
out
or
mov
fdiv
lods
add
dec
rol
mov
out
movsx
add
jmp
add
dec
data16
int3
sub
pop
dec
out
xor
jne
into
sub
inc
pop
inc
loopne
lock
mov
movs
mov
dec
daa
out
push
daa
out
push
and
adc
movs
out
or
inc
in
int3
sbb
pop
dec
out
push
shr
pop
mov
in
xor
in
push
cmps
add
sbb
mov
add
mov
rol
or
retw
push
adc
mov
mov
xor
jno
out
imul
les
cmc
mov
mov
int3
jmp
dec
out
lea
les
xor
les
call
mov
mov
sar
cs
jl
data16
sub
sbb
(bad)
div
add
loopne
movs
add
inc
pop
jge
idiv
leave
mov
cs
pop
fs
ret
mov
div
gs
div
jbe
mov
div
movs
add
les
push
into
enter
mov
(bad)
lea
push
jg
not
adc
add
mov
push
pusha
mov
push
cmc
mov
push
loopne
movs
add
daa
out
push
daa
in
push
daa
out
push
test
adc
div
out
add
mov
jne
cmc
addr16
mov
add
bound
pop
and
xchg
mov
out
(bad)
mov
movs
fisttp
dec
lock
sbb
div
out
dec
push
xchg
xlat
pxor
neg
out
lea
sbb
out
lea
sbb
outs
call
mov
cmps
add
mov
adc
test
pop
inc
or
xchg
xlat
pxor
neg
outs
call
pop
and
xchg
pxor
dec
out
and
out
add
into
sub
mov
or
pop
push
test
add
mov
mov
xor
lods
add
or
mov
into
mov
or
stos
clc
pop
shr
aaa
dec
loopne
bound
add
adc
mov
or
ins
cmps
add
les
add
scas
xor
jne
les
push
bound
idiv
(bad)
(bad)
jge
pop
das
inc
dec
out
and
mov
cld
loopne
cmps
add
adc
mov
sbb
and
mov
add
mov
adc
inc
test
or
out
push
idiv
sti
(bad)
jge
adc
mov
or
js
add
into
sub
push
adc
mov
shl
daa
les
imul
les
add
dec
bound
sbb
call
dec
out
add
mov
push
mov
mov
xor
les
lea
mov
push
and
test
bound
add
cmp
(bad)
jge
pop
pop
inc
dec
out
or
cmp
xor
cmps
fdivr
jge
adc
mov
sbb
dec
adc
mov
cld
loopne
cmps
add
inc
das
je
mov
cld
loopne
cmps
add
jl
jmp
les
sub
les
(bad)
jge
pop
sub
out
xor
or
in
mov
call
or
mov
mov
sub
or
pop
xor
les
lea
mov
add
adc
mov
or
mov
das
je
jl
jmp
shr
bound
jne
mov
cld
loopne
test
or
add
call
jl
jmp
mov
cld
loopne
test
or
inc
adc
out
add
stos
inc
clc
les
pop
push
test
pop
sbb
outs
sub
or
into
sar
fisttp
out
add
pop
dec
dec
out
push
loopne
test
clc
xor
out
cmp
call
daa
out
push
bound
add
xchg
pxor
push
or
add
int3
sbb
enter
enter
cmp
movs
cmps
inc
or
inc
hlt
cmps
jmp
add
adc
ja
pop
enterw
rol
mov
dec
dec
push
add
mov
or
mov
inc
cmp
hlt
les
cld
adc
data16
and
aaa
push
idiv
(bad)
call
mov
aaa
mov
sub
dec
data16
mov
stos
cld
fcomp
add
sar
or
sub
sar
into
xor
jne
les
dec
mov
or
fs
sbb
adc
ror
out
fcomp
dec
inc
or
(bad)
mov
adc
idiv
repnz
dec
aaa
push
idiv
(bad)
call
or
mov
fs
fmul
mov
add
lea
push
sub
out
dec
mov
outs
jne
imul
push
dec
dec
out
mov
data16
fldcw
test
int3
lods
add
les
push
pop
sti
jmp
mov
in
mov
cmp
add
or
jne
aas
or
or
(bad)
dec
mov
add
add
loopne
xor
data16
mov
out
add
aam
stc
sbb
out
add
mul
loop
cmps
in
mov
data16
mov
sbb
pop
xor
sbb
jnp
dec
out
or
mov
dec
mov
mov
mov
inc
lock
inc
mov
mov
push
test
or
call
pop
sbb
cmp
stos
jmp
lods
mov
ins
movs
in
adc
or
push
div
jecxz
xchg
mov
out
retf
les
add
les
or
cmp
xor
movs
(bad)
or
dec
ins
mov
or
loop
loopne
lods
add
jl
jmp
idiv
sti
call
or
push
sbb
dec
out
imul
les
div
adc
mul
push
fdiv
mov
xor
mov
mov
or
test
sbb
cld
div
call
dec
out
add
movs
push
inc
or
lock
out
lea
cs
scas
xor
jne
les
push
(bad)
jp
div
pop
outs
lds
xchg
pxor
jge
pop
(bad)
dec
dec
out
or
xchg
pxor
mov
movs
mov
or
les
movs
xlat
inc
or
or
dec
out
cdq
push
push
idiv
adc
div
out
or
lock
stos
add
hlt
in
or
div
into
adc
sti
dec
dec
out
mov
xchg
mov
adc
div
lods
add
pop
inc
or
les
movs
aaa
inc
or
or
dec
out
cdq
push
push
idiv
adc
div
out
or
xchg
xlat
pxor
mov
movs
or
ins
les
movs
dec
inc
or
or
dec
out
cdq
push
push
idiv
adc
div
out
or
pop
jnp
dec
out
mov
xchg
mov
xchg
and
and
add
hlt
mov
or
div
pop
fs
pop
and
mov
add
imul
(bad)
neg
out
push
loopne
stos
add
into
sub
mov
pop
and
mov
xchg
mov
xchg
adc
cmovb
mov
cld
div
out
add
xchg
lods
add
clc
adc
div
out
or
pop
jmp
dec
out
mov
xchg
mov
xchg
adc
cmovb
mov
cld
div
out
add
xchg
lods
add
clc
adc
div
out
or
pop
mov
dec
out
mov
xchg
mov
xchg
and
in
lods
add
hlt
mov
or
div
pop
fs
pop
and
mov
add
and
add
stos
test
mov
inc
dec
out
mov
xchg
mov
xor
rcl
mov
push
loopne
lods
add
shr
mov
push
idiv
dec
neg
out
push
loopne
lods
add
into
sub
loopne
lods
add
hlt
in
or
div
into
adc
pop
dec
dec
out
mov
xchg
mov
adc
div
lods
add
repz
or
les
les
imul
les
div
pop
inc
or
or
dec
out
cdq
push
push
idiv
adc
div
out
or
pop
retf
dec
dec
out
mov
xchg
mov
xchg
adc
xor
mov
cld
div
out
add
pxor
mov
out
add
aam
stc
mov
pop
loopne
dec
adc
loopne
lods
add
into
sub
cmp
out
(bad)
jge
fs
mov
call
jne
dec
dec
mov
add
pxor
mov
out
add
aam
stc
mov
and
dec
dec
adc
loopne
lods
add
into
sub
loopne
lods
add
hlt
in
or
div
into
adc
lock
mov
(bad)
mul
ins
les
movs
sti
inc
or
or
dec
out
cdq
push
call
mov
out
add
aam
stc
pop
(bad)
push
cld
div
xor
sbb
dec
out
or
ins
jge
dec
loopne
mov
mov
sub
cmc
mov
jmp
into
enter
mov
and
into
dec
shl
adc
jecxz
fs
mov
dec
enter
mov
test
mov
(bad)
jnp
fs
or
das
push
mov
mov
jbe
clc
mov
out
add
aam
stc
mov
push
sbb
dec
out
mov
jmp
jp
div
sub
rcl
mov
push
pusha
pop
xor
rcl
mov
push
loopne
scas
add
into
sub
gs
mov
les
dec
int3
push
shl
adc
mov
push
mov
hlt
div
bound
pop
(bad)
push
div
xor
sbb
out
or
pop
dec
out
mov
xchg
mov
xchg
adc
xor
mov
cld
div
out
add
or
out
add
aam
stc
mov
and
dec
dec
adc
loopne
scas
add
into
sub
cmp
out
mov
xchg
mov
xchg
adc
cmovb
mov
cld
div
out
add
mov
std
test
push
div
adc
div
div
adc
test
adc
lea
sub
jae
out
add
mov
(bad)
mul
mov
or
cmp
dec
out
mov
jl
mov
(bad)
stos
sbb
dec
daa
add
je
clc
div
out
add
(bad)
push
div
adc
div
xor
shr
mov
push
loopne
scas
add
into
sub
mov
enter
cmp
dec
call
mov
std
test
sub
neg
adc
test
adc
pop
movs
retf
cmp
dec
bound
pop
movs
pop
clc
div
push
div
adc
div
pop
push
mov
test
mov
call
mov
dec
dec
mov
add
jb
add
aam
stc
mov
mov
dec
dec
adc
loopne
rol
or
sub
cmp
out
mov
xchg
mov
xchg
adc
xor
mov
cld
div
out
add
jb
add
aam
stc
mov
pop
loopne
dec
adc
loopne
rol
or
sub
idiv
pop
push
mov
ret
xor
or
mov
hlt
div
out
push
sbb
adc
pop
movs
(bad)
div
mov
les
push
div
push
div
lods
add
clc
adc
div
out
or
pop
ret
ss
out
mov
xchg
mov
xchg
adc
xor
mov
cld
div
out
add
jae
add
aam
stc
mov
and
dec
dec
adc
loopne
rol
or
sub
cmp
data16
loopne
rol
or
in
or
div
into
adc
lock
mov
(bad)
mul
ins
les
and
adc
loopne
rol
or
sub
loopne
rol
or
in
or
div
into
adc
and
dec
out
mov
xchg
mov
adc
div
lods
add
iret
or
les
movs
out
or
or
dec
out
cdq
push
push
idiv
adc
div
out
or
outs
not
addr16
add
cwde
rol
or
in
or
div
into
adc
retf
(bad)
pxor
mov
movs
sbb
add
push
or
dec
out
cdq
push
push
idiv
adc
div
out
or
pop
mov
dec
out
add
dec
xchg
and
xor
add
hlt
mov
or
div
pop
fs
pop
and
mov
add
xchg
lods
add
clc
adc
div
out
or
lock
rol
or
in
or
div
into
adc
lock
mov
(bad)
mul
ins
les
and
adc
loopne
rol
or
sub
loopne
rol
or
in
or
div
into
adc
lock
mov
(bad)
mul
ins
les
and
adc
loopne
rol
or
sub
mov
pop
(bad)
xor
out
mov
xchg
mov
xchg
adc
cmovb
mov
cld
div
out
add
xchg
adc
neg
adc
pop
and
mov
add
jno
add
aam
stc
mov
pop
loopne
dec
adc
loopne
rol
or
sub
pusha
dec
xor
mov
cld
div
out
add
jno
add
aam
stc
mov
pop
loopne
dec
adc
loopne
rol
or
sub
mov
xchg
add
mov
adc
test
out
add
aam
stc
sbb
push
cld
div
xor
sbb
sysenter
dec
out
or
pop
out
xor
mov
xchg
mov
xchg
adc
cmovb
mov
cld
div
out
add
nop
lods
add
clc
adc
div
out
or
pop
mov
dec
out
mov
xchg
mov
xchg
adc
cmovb
mov
cld
div
out
add
ds
add
movs
arpl
or
or
dec
out
cdq
push
call
mov
out
add
aam
stc
pop
(bad)
push
cld
div
xor
sbb
ja
dec
out
or
xchg
aad
out
(bad)
mov
movs
cmp
dec
ins
les
daa
out
push
daa
in
push
daa
out
push
idiv
out
or
add
mov
(bad)
xchg
xor
add
clc
adc
div
out
push
rcl
mov
push
pop
mov
cld
div
adc
mul
adc
loopne
fld
or
adc
stos
jp
add
mov
or
push
mov
pop
push
test
add
pop
repnz
add
stos
test
mov
inc
dec
add
pop
sti
stos
call
fisttp
bound
pop
movs
pop
cmp
dec
data16
cmp
xchg
lea
xchg
or
call
mov
out
mov
rol
pusha
jne
inc
or
xchg
or
call
pusha
fwait
xor
and
xchg
aam
out
push
loopne
pop
push
into
sub
mov
mov
retf
sbb
mov
mov
or
cmp
data16
mov
jae
div
outs
cmp
inc
jnp
mov
adc
test
jmp
rcl
test
sub
rol
stos
or
sbb
dec
aas
dec
out
mov
bound
lods
mov
sbb
aaa
aas
dec
out
mov
mov
mov
cs
add
xor
push
sar
or
xchg
nop
mov
inc
mov
add
mov
mov
mov
jmp
mov
push
cmc
mov
(bad)
mov
movs
(bad)
or
push
add
bound
mov
lea
mov
sar
or
xchg
xor
xor
dec
xchg
fimul
out
call
or
outs
mul
inc
out
add
test
test
dec
std
div
out
add
sbb
add
sbb
out
push
test
pop
std
div
lods
add
xor
and
pop
push
clc
mov
or
out
jge
mov
add
lea
pop
or
call
pusha
dec
out
add
shr
mov
push
test
pop
std
div
out
add
clc
jnp
div
adc
idiv
arpl
div
adc
idiv
ja
div
adc
pop
shr
mov
push
loopne
sbb
and
mov
sar
call
cmp
out
push
test
adc
div
out
add
mov
mov
shr
mov
push
loopne
xlat
add
movs
push
out
div
adc
bound
test
test
push
(bad)
div
out
add
fs
mov
mov
div
out
(bad)
lea
out
add
sub
test
mov
dec
dec
ins
mov
or
repz
enter
mov
add
dec
bound
pop
movs
cld
lock
adc
neg
adc
pop
daa
out
push
daa
iret
push
daa
out
push
shr
mov
push
bound
idiv
imul
dec
out
(bad)
mov
movs
push
xor
dec
data16
and
jnp
div
out
push
test
adc
div
out
add
ds
test
pop
or
test
mov
call
call
dec
out
mov
inc
das
jne
and
pop
imul
push
dec
test
adc
xor
popf
enter
push
pusha
dec
xchg
add
movs
mov
mov
or
in
or
fild
or
bound
pop
push
pop
mov
dec
out
push
and
bound
pop
movs
stos
mov
add
adc
or
and
div
dec
pushf
cmc
mov
add
dec
add
mov
jae
div
fild
or
push
cmc
mov
push
loopne
fild
or
js
or
out
enter
mov
(bad)
pop
movs
lahf
xor
dec
test
idiv
dec
std
div
out
(bad)
mov
movs
dec
xor
dec
test
push
pop
add
imul
les
cmc
mov
mov
adc
add
or
pop
(bad)
mov
mov
loope
dec
les
xor
les
(bad)
jge
pop
iret
cmp
mov
sub
test
xor
les
(bad)
jge
pop
mov
retf
push
hlt
mov
adc
loopne
add
les
push
loopne
fadd
or
sub
movsx
adc
mov
inc
pop
push
dec
mov
pop
(bad)
push
bound
mov
into
int3
add
dec
out
xor
into
xchg
sbb
inc
jnp
or
jmp
dec
push
mov
call
mov
lock
fiadd
or
stos
inc
sbb
out
mov
fs
mov
mov
adc
cli
stos
inc
cli
mov
add
out
or
movsx
adc
mov
inc
pop
push
inc
stos
adc
sbb
out
lea
mov
jecxz
or
out
call
or
mov
add
movs
fbstp
or
call
or
pop
push
push
es
pop
les
mov
loopne
fild
or
mov
mov
xor
out
imul
les
call
mov
call
dec
out
lea
sbb
adc
pop
and
pop
ret
daa
dec
out
mov
inc
das
jl
int3
sbb
dec
out
push
idiv
sub
div
out
or
out
jge
adc
idiv
jecxz
es
add
enter
mov
(bad)
cmp
push
call
dec
out
lea
sbb
adc
pop
sbb
outs
daa
dec
out
or
cmp
mov
fs
mov
push
adc
loopne
fild
or
sub
add
daa
loopne
mov
jne
movs
cmp
or
ror
and
cmps
inc
xor
adc
mov
cmc
sti
and
dec
pop
xchg
daa
dec
out
push
pop
sbb
repz
pop
std
adc
(bad)
sub
add
mov
loopne
fild
or
ss
scas
xor
jne
les
push
les
and
xchg
pxor
or
add
into
sub
mov
lock
xor
shr
mov
push
loopne
fild
or
sub
loopne
fadd
or
in
or
div
into
adc
lock
dec
ud0
sbb
out
or
pop
mov
add
add
dec
xchg
sub
in
add
hlt
mov
or
div
pop
bound
pop
and
bound
pop
movs
dec
xor
dec
ins
les
movs
outs
xor
dec
push
or
dec
out
cdq
push
push
test
out
loopne
mov
call
mov
pop
mov
and
bound
pop
movs
imul
dec
ins
les
movs
scas
xor
dec
push
or
dec
out
cdq
push
push
test
out
loopne
mov
call
mov
out
add
aam
stc
mov
out
or
arpl
dec
out
cdq
push
push
sbb
lea
sbb
(bad)
cmp
or
adc
and
bound
pop
and
bound
pop
movs
xor
or
les
pop
imul
les
xlat
mov
mov
movs
pop
xor
dec
push
or
dec
out
cdq
push
push
test
out
loopne
mov
call
mov
lods
add
mov
call
mov
out
add
aam
stc
mov
pop
loopne
dec
bound
pop
movs
jnp
or
les
and
bound
pop
movs
outs
xor
dec
ins
les
les
imul
les
xlat
mov
mov
movs
fbstp
or
or
dec
out
cdq
push
call
mov
out
add
aam
stc
pop
rcl
mov
push
pusha
adc
push
add
mov
push
loopne
fld
or
sub
pusha
xor
shr
mov
push
loopne
fld
or
sub
loopne
fiadd
or
in
or
div
into
adc
lock
dec
ud0
sbb
out
or
xchg
pxor
neg
out
or
lock
fiadd
or
in
or
div
into
adc
lock
dec
ud0
sbb
out
or
xchg
(bad)
pxor
neg
out
or
pop
cmp
mov
xchg
mov
xchg
adc
mov
push
call
enter
into
sub
mov
adc
shr
mov
push
pusha
arpl
inc
or
push
call
jo
add
into
sub
loopne
fiadd
or
in
or
div
into
adc
lock
dec
ud0
sbb
out
or
xchg
(bad)
pxor
neg
out
or
pop
jecxz
dec
out
mov
xchg
mov
xchg
adc
mov
push
call
dec
fiadd
or
sub
mov
add
mov
xor
test
out
add
aam
stc
sbb
push
add
mov
push
pusha
pop
xor
rcl
mov
push
loopne
fild
or
sub
loopne
fild
or
in
or
div
into
adc
lock
dec
ud0
sbb
out
or
xchg
aad
out
lea
sbb
out
or
outs
out
mov
jo
add
hlt
in
or
div
into
adc
lock
dec
ud0
sbb
out
or
pop
pop
cmp
mov
xchg
mov
xchg
sub
dec
fild
or
mov
or
div
pop
bound
pop
and
bound
pop
movs
adc
or
les
and
bound
pop
movs
jecxz
or
les
daa
out
push
daa
in
push
daa
out
push
pop
movs
addr16
dec
test
xchg
adc
mov
bound
pop
movs
jecxz
or
add
mov
push
test
out
loopne
mov
(bad)
mov
movs
or
dec
adc
loopne
les
or
jecxz
lock
mov
retf
sbb
mov
mov
gs
jmp
adc
or
sbb
or
mov
pop
movs
dec
sub
dec
fs
add
mov
xchg
cmc
mov
mov
mov
adc
test
out
add
fld
or
cmp
mov
or
and
pop
ja
dec
out
mov
daa
jmp
shr
mov
push
loopne
rol
and
bound
pop
and
xchg
dec
out
and
or
test
loopne
movs
dec
out
add
out
add
shr
mov
push
test
pop
std
div
out
add
mov
mov
mov
call
push
cmc
mov
push
loopne
adc
or
(bad)
loopne
jns
out
add
xor
shr
mov
push
loopne
rol
shr
mov
push
test
adc
div
out
add
mov
push
cmc
mov
mov
dec
pop
mov
daa
stos
push
shr
mov
push
loopne
rol
into
sub
mov
add
dec
sub
dec
dec
out
add
enter
mov
add
dec
ins
mov
or
repz
enter
mov
add
dec
bound
pop
movs
hlt
out
mov
lea
sbb
adc
pop
daa
out
push
daa
iret
push
daa
out
push
shr
mov
push
bound
jmp
dec
out
or
inc
imul
in
push
movs
das
sub
dec
data16
or
dec
std
div
out
push
test
adc
div
out
add
xor
test
cmp
dec
bound
pop
and
pop
sub
dec
out
mov
inc
das
jne
and
pop
jae
dec
out
or
test
adc
xor
popf
enter
test
dec
out
add
pop
add
movs
mov
clc
and
out
add
shr
mov
push
pop
movs
daa
sub
dec
test
pusha
daa
xor
shr
mov
push
loopne
pop
push
into
sub
inc
imul
dec
out
lea
sbb
adc
mov
imul
mov
xchg
cmc
mov
lea
sbb
out
cmp
shr
mov
push
idiv
jnp
div
adc
cmc
mov
call
pusha
inc
xor
movs
repz
dec
mov
add
pop
sub
dec
ins
les
das
jne
and
pop
jmp
dec
out
mov
into
add
pop
les
sti
push
adc
loopne
aaa
push
into
sub
push
test
fcom
mov
xchg
cmc
mov
call
mov
test
or
pop
pop
and
(bad)
(bad)
rcl
push
dec
out
add
shr
mov
push
loopne
mov
les
add
les
push
mov
movs
cmc
mov
call
idiv
dec
std
div
out
mov
cmps
jmp
add
adc
add
or
pop
(bad)
mov
mov
mov
imul
out
push
loopne
mov
les
call
sbb
lea
push
bound
out
mov
push
mov
add
mov
data16
pop
movs
iret
sub
dec
adc
sar
das
dec
out
push
loopne
leave
add
shr
pusha
loop
inc
or
out
push
movs
jmp
or
(bad)
bound
out
add
or
mov
shr
das
dec
out
push
loopne
enter
stos
cld
push
adc
mov
inc
or
mov
jbe
int3
sub
aas
dec
out
push
mov
or
mov
add
les
mov
fs
mov
inc
sbb
jl
jmp
and
bound
pop
sbb
out
dec
out
push
mov
or
enter
mov
call
mov
out
add
lock
outs
not
sub
add
mov
add
adc
ret
pop
les
and
mov
push
mov
mov
dec
mov
add
das
loopne
dec
mov
push
test
sbb
pushf
lds
or
sbb
push
dec
out
lea
mov
add
dec
adc
loopne
mov
inc
pop
inc
test
add
adc
dec
dec
bound
sbb
out
or
bound
sbb
out
add
mov
sub
or
call
outs
mov
inc
cli
stos
dec
adc
ret
pop
les
and
mov
sbb
push
or
dec
sbb
or
out
push
daa
out
push
daa
jmp
daa
out
push
bound
add
test
loopne
mov
les
mov
jmp
sub
sbb
mov
and
push
sbb
popf
dec
dec
pop
jg
dec
out
push
sbb
mov
and
push
sbb
lahf
dec
dec
pop
pop
and
push
sbb
xchg
dec
dec
pop
dec
and
and
daa
out
push
bound
xor
loopne
mov
bound
xor
loopne
mov
bound
xor
loopne
mov
bound
xor
loopne
mov
clc
les
push
sbb
cdq
dec
dec
pop
repz
dec
out
push
sbb
popf
dec
dec
pop
jecxz
dec
out
push
sbb
mov
das
dec
out
push
sbb
mov
das
dec
out
mov
jmp
sub
test
mov
icebp
popf
jbe
sbb
dec
out
push
mov
call
dec
push
add
and
test
idiv
popf
dec
dec
pop
cmp
dec
out
push
mov
sub
out
add
and
test
idiv
mov
das
dec
out
cmp
daa
adc
cmp
movs
pop
or
and
or
push
bound
scas
add
mov
adc
cmp
movs
cmp
or
add
retf
bound
scas
add
test
add
daa
adc
cmp
movs
pop
or
js
pxor
retf
bound
scas
add
call
adc
cmp
movs
arpl
or
sub
or
scas
add
adc
loopne
leave
add
les
xor
les
push
mov
test
imul
stos
push
jo
or
test
idiv
mov
cs
out
pop
retf
sbb
mov
sbb
push
outs
out
aad
out
add
xor
or
adc
test
lods
add
ins
cld
div
out
dec
dec
test
pop
movs
xchg
or
test
push
pop
movs
and
js
lahf
dec
dec
test
pop
(bad)
stos
cld
and
sbb
or
sub
mov
push
pusha
xchg
xor
and
xchg
or
call
stos
or
or
out
(bad)
cmp
daa
out
push
bound
inc
lock
lock
test
dec
out
sbb
fisttp
xchg
ror
out
push
movs
out
or
add
or
mov
fs
mov
daa
out
(bad)
cmp
daa
out
(bad)
cmp
and
fs
lock
lock
test
inc
out
sbb
fisttp
xchg
ror
out
push
movs
sub
test
out
push
daa
in
push
daa
out
push
daa
out
push
daa
out
push
and
test
bound
or
pop
pop
cs
out
mov
daa
out
push
bound
xor
loopne
retf
daa
out
(bad)
cmp
daa
out
(bad)
cmp
daa
jmp
dec
out
add
test
pusha
dec
out
add
sbb
dec
xchg
ror
out
push
movs
mov
or
jl
pxor
or
out
(bad)
cmp
daa
out
(bad)
cmp
daa
jmp
dec
out
add
test
pusha
dec
out
add
neg
dec
dec
xchg
ror
out
push
movs
repz
stos
pxor
mov
xor
or
push
mov
inc
test
out
push
and
xchg
and
xchg
ror
out
push
bound
jecxz
dec
out
mov
bound
xor
bound
xor
bound
js
dec
out
push
bound
add
dec
mov
add
xor
or
out
call
stos
pop
jo
or
out
(bad)
cmp
daa
out
(bad)
cmp
daa
mov
and
test
dec
out
sbb
fisttp
xchg
or
dec
call
iret
(bad)
retf
add
and
test
pusha
push
out
add
sbb
out
push
bound
inc
or
(bad)
cmp
movs
repz
dec
test
idiv
lahf
dec
dec
test
idiv
mov
or
push
and
test
dec
out
sbb
fisttp
xchg
or
dec
sub
test
or
out
(bad)
cmp
daa
out
(bad)
cmp
and
test
out
add
and
xchg
or
mov
add
xor
call
stos
popa
jo
or
test
idiv
lahf
dec
dec
test
idiv
mov
bound
out
dec
out
push
pusha
dec
out
add
test
dec
dec
xchg
ror
out
push
movs
arpl
or
nop
stos
pxor
dec
mov
adc
bound
xor
bound
or
dec
out
add
out
add
and
xchg
pxor
xchg
lods
add
pop
inc
sub
mov
bound
xor
bound
xor
bound
addr16
push
out
add
and
xchg
or
push
pusha
xchg
xor
or
out
call
stos
jge
inc
or
out
(bad)
cmp
daa
out
(bad)
cmp
daa
jmp
dec
out
add
out
add
daa
mov
dec
out
push
pusha
pop
xor
fisttp
test
loopne
int
or
pop
popf
dec
dec
test
idiv
lahf
dec
dec
test
idiv
mov
bound
xchg
dec
out
push
pusha
dec
out
add
jmp
fcmovbe
pxor
movs
jae
or
xchg
stos
pxor
mov
xor
or
push
mov
pusha
test
out
push
and
xchg
sbb
out
add
pxor
xchg
lods
add
in
add
movs
(bad)
and
dec
dec
test
mov
xor
or
push
mov
pusha
test
out
push
and
xchg
or
push
and
xchg
or
in
add
movs
retf
and
dec
dec
sbb
or
pop
mov
daa
out
(bad)
cmp
daa
out
(bad)
cmp
daa
imul
and
test
dec
out
sbb
fisttp
xchg
ror
out
push
loopne
into
add
out
(bad)
lahf
dec
dec
test
idiv
lahf
dec
dec
test
idiv
mov
bound
xchg
or
push
and
xchg
xlat
pxor
xchg
lods
add
in
add
movs
inc
and
dec
dec
and
mov
xor
or
push
mov
inc
test
out
push
and
xchg
push
and
xchg
ror
out
push
bound
jae
dec
out
mov
loopne
pop
push
les
sub
les
call
push
adc
ret
pop
les
and
mov
out
les
xor
les
push
idiv
out
and
xchg
ror
out
push
loopne
sbb
test
jo
or
pop
sub
les
push
mov
or
ins
out
add
movs
out
and
dec
test
idiv
lahf
dec
dec
test
pop
(bad)
stos
cld
and
sbb
or
sub
mov
push
pusha
xchg
xor
and
xchg
or
call
stos
or
or
out
(bad)
cmp
daa
out
push
bound
inc
lock
lock
test
dec
out
sbb
(bad)
xchg
ror
out
push
movs
jae
or
add
or
and
daa
out
(bad)
cmp
daa
out
(bad)
cmp
and
fs
lock
lock
test
inc
out
sbb
fisttp
xchg
ror
out
push
movs
mov
or
pusha
test
out
push
daa
in
push
daa
out
push
daa
out
push
daa
out
push
and
test
bound
or
pop
fwait
sub
mov
daa
out
push
bound
xor
loopne
lock
daa
out
(bad)
cmp
daa
out
(bad)
cmp
daa
mov
daa
sti
push
and
xchg
xlat
pxor
xchg
lods
add
pop
out
pop
dec
out
mov
mov
xchg
pxor
and
mov
add
xor
push
idiv
popf
dec
dec
pop
xchg
pop
dec
out
xor
call
add
add
mov
call
jb
out
add
pop
test
bound
dec
or
(bad)
cmp
movs
mov
or
add
js
lahf
dec
dec
test
idiv
mov
or
push
daa
sti
push
and
xchg
xlat
pxor
xchg
lods
add
pop
push
pop
dec
out
mov
xor
fistp
idiv
mov
or
push
daa
sti
push
pusha
dec
out
sbb
fisttp
xchg
or
dec
sub
or
call
bound
xor
bound
xor
bound
or
and
xchg
or
push
pusha
xchg
xor
or
out
call
stos
cmp
or
out
(bad)
cmp
daa
out
(bad)
cmp
daa
jmp
and
xchg
or
push
pusha
sysexit
inc
or
test
loopne
icebp
add
out
fistp
cmp
imul
les
add
js
lahf
dec
dec
test
idiv
mov
pusha
mov
add
and
test
out
add
cld
fimul
xchg
ror
out
push
movs
mov
or
lock
or
push
mov
xor
or
push
mov
inc
test
out
push
daa
mov
add
out
add
and
xchg
ror
out
push
bound
and
dec
out
mov
bound
xor
bound
xor
bound
in
dec
out
push
bound
add
dec
mov
add
xor
or
out
call
stos
xor
or
out
(bad)
cmp
daa
out
(bad)
cmp
daa
jmp
dec
out
add
out
add
daa
icebp
push
pusha
sbb
inc
or
test
loopne
repnz
out
dec
mov
idiv
lahf
dec
dec
test
idiv
mov
pusha
iret
out
add
daa
ret
and
xchg
or
in
add
movs
xchg
sbb
popf
or
xchg
add
daa
out
(bad)
cmp
daa
out
(bad)
cmp
daa
imul
daa
test
add
pxor
xchg
lods
add
in
add
movs
rcr
xchg
or
push
mov
xor
or
push
mov
pusha
test
out
push
daa
mov
daa
sti
push
pusha
xchg
xor
and
xchg
or
call
stos
ins
jo
or
out
(bad)
cmp
daa
out
(bad)
cmp
daa
clc
push
pusha
or
icebp
push
pusha
scas
ss
or
test
loopne
repz
out
ja
dec
dec
pop
mov
mov
mov
jmp
sub
sar
es
pop
les
and
mov
ss
data16
jmp
sub
and
test
bound
add
out
add
shl
add
les
xor
loopne
cdq
dec
out
add
mov
add
push
out
add
or
add
dec
out
mov
mov
mov
push
test
adc
cmp
push
pusha
dec
out
add
mov
les
je
cld
jnp
test
idiv
adc
xchg
lods
add
ss
or
out
aam
adc
mov
out
jl
test
dec
bound
sbb
shl
dec
outs
call
mov
pop
mov
adc
mov
int3
add
or
push
pop
repz
cs
sub
or
pop
inc
or
mov
lea
push
sbb
out
call
mov
out
add
aam
stc
sbb
(bad)
push
test
out
push
mov
call
cmp
call
shr
mov
push
loopne
test
or
(bad)
push
test
out
push
mov
call
mov
adc
pxor
neg
out
mov
dec
pop
mov
int
dec
cld
lods
add
mov
call
mov
adc
jge
xchg
pxor
neg
out
xor
jne
and
bound
pop
movs
dec
pop
or
jge
inc
call
shr
mov
push
loopne
clc
add
les
sub
les
xor
jne
and
bound
pop
movs
adc
dec
outs
jge
inc
call
shr
mov
push
loopne
clc
add
int
inc
cmp
push
test
out
push
mov
call
mov
adc
pxor
neg
out
xor
jne
and
bound
pop
movs
call
or
lock
adc
or
pop
inc
or
push
div
stc
add
daa
out
push
and
xchg
pxor
neg
out
call
pusha
jbe
inc
or
xchg
or
call
pusha
(bad)
enter
pop
sbb
dec
ins
les
les
imul
les
div
leave
(bad)
div
jmp
pop
les
push
pop
sbb
repnz
pop
data16
and
mov
add
push
pop
or
mov
or
out
jl
test
pop
movs
mov
pop
push
adc
in
mov
mov
cmp
outs
idiv
out
add
dec
xchg
pxor
neg
out
call
mov
out
add
aam
stc
sbb
clc
div
adc
or
(bad)
push
test
add
div
out
add
mov
jne
and
bound
pop
movs
or
sti
mov
dec
cmp
push
test
add
div
out
add
mov
sbb
test
pop
push
dec
call
shr
mov
push
loopne
cli
add
int
repz
add
mov
mov
pop
xchg
mov
call
shr
mov
push
loopne
cli
add
int
repz
pop
jge
xchg
pxor
neg
out
mov
dec
pop
mov
int
repz
or
xchg
out
lea
sbb
out
xor
call
shr
mov
push
loopne
cli
add
int
repz
or
xchg
lea
pop
call
pop
push
inc
call
shr
mov
push
loopne
sti
add
les
imul
les
push
push
repz
or
pop
xchg
mov
mov
pop
mov
mov
pop
push
inc
call
shr
mov
push
loopne
sti
add
int
repz
push
jge
xchg
mov
mov
pop
mov
lods
add
mov
call
cmp
data16
pusha
cmp
pusha
mov
dec
pop
stc
in
adc
loopne
adc
mov
sbb
div
push
call
pop
leave
aam
or
out
mov
add
enter
mov
(bad)
and
test
pusha
cmp
scas
ret
div
push
lock
or
inc
push
or
jmp
mov
adc
div
in
add
int
cld
hlt
mov
cmp
enter
dec
outs
mov
xor
or
(bad)
lea
push
dec
cmp
out
imul
les
push
push
lock
push
pusha
js
inc
or
push
hlt
mov
push
loopne
test
mov
pop
clc
div
scas
sbb
dec
push
ret
lahf
push
lea
mov
jmp
(bad)
retf
mov
iret
or
mov
pop
retf
or
cmp
or
fsubr
in
lods
add
ss
or
push
div
test
clc
les
push
pusha
push
ss
or
push
lock
push
loopne
clc
add
into
sub
jecxz
xchg
or
out
lea
sbb
out
mov
jmp
adc
or
(bad)
(bad)
bound
pop
movs
push
pop
or
add
pxor
neg
out
or
bound
pop
movs
sti
adc
hlt
mov
dec
enter
mov
push
test
adc
div
out
add
shr
mov
push
loopne
sti
add
daa
out
push
test
adc
div
adc
mov
push
or
lea
into
das
add
or
mov
les
imul
les
push
push
clc
lock
or
retf
fild
or
mov
mov
jmp
dec
inc
or
bound
pop
movs
out
pop
or
les
and
bound
pop
movs
fist
or
test
mov
call
fist
dec
test
mov
fs
mov
jmp
pop
fs
mov
jmp
inc
adc
mov
cmp
div
pop
imul
les
push
pop
clc
lock
lea
sbb
out
lea
sbb
out
or
bound
pop
movs
sub
or
test
mov
adc
div
out
add
mov
jl
pop
mov
adc
dec
test
mov
dec
dec
bound
pop
mov
hlt
lock
call
test
adc
div
out
add
mov
mov
rcl
sbb
lea
sbb
sbb
div
out
push
daa
out
call
pop
movs
cmp
or
test
mov
call
adc
loopne
and
test
out
pop
enter
mov
mov
mov
jmp
adc
add
int3
add
inc
dec
out
push
loopne
cli
add
adc
lods
repnz
pop
push
push
es
mov
adc
dec
pop
mov
pop
sbb
mov
mov
jl
mov
and
test
pusha
dec
out
pop
or
test
fwait
adc
movs
mov
add
inc
cli
add
adc
jmp
jne
add
shr
popf
dec
dec
jnp
or
fdivr
scas
test
xchg
or
call
pusha
mov
add
and
pop
and
dec
out
call
pop
movs
iret
adc
retf
push
add
out
add
shr
mov
push
idiv
out
(bad)
pop
out
add
xchg
(bad)
cld
add
neg
adc
test
add
into
jmp
push
adc
mov
pop
mov
fild
lea
pop
les
mul
mov
sub
les
pop
or
add
test
pop
jae
dec
out
movsx
pop
in
div
call
mov
jmp
(bad)
retf
mov
into
into
sub
mov
add
test
adc
or
in
div
outs
ret
jne
out
add
enter
mov
call
or
add
idiv
test
shr
mov
push
pusha
fisttp
or
bound
pop
movs
jecxz
or
repz
pop
out
add
bound
pop
shr
mov
push
loopne
inc
or
push
in
adc
or
push
shr
mov
push
loopne
sub
test
bound
pop
movs
jmp
or
add
js
add
int3
sbb
cs
out
push
pusha
fisttp
or
xchg
or
call
test
(bad)
out
div
lods
add
mov
aaa
inc
or
xchg
ror
out
push
loopne
cld
add
les
sub
les
test
out
mov
sti
sub
mov
fisttp
or
xchg
cwde
or
out
add
mov
xor
mov
out
add
mov
aaa
inc
or
xchg
ror
out
push
loopne
cld
add
into
sub
lock
in
div
lods
add
mov
aaa
mov
daa
out
push
daa
jmp
or
out
push
pusha
dec
jno
or
inc
mov
daa
out
push
loopne
loopne
or
out
add
enter
mov
call
test
pop
out
div
outs
cmp
dec
call
sbb
push
sbb
jne
movs
xor
or
add
dec
xchg
call
stc
pop
mov
push
test
mov
test
push
push
test
pop
out
div
out
add
mov
enter
cmp
dec
call
sbb
push
sbb
jne
movs
imul
dec
test
test
push
push
bound
lock
stc
pop
outs
pop
dec
out
(bad)
jge
pop
or
dec
out
mov
jmp
adc
or
in
div
push
fisttp
inc
call
dec
inc
(bad)
shr
jne
out
mov
xchg
ja
out
push
movs
push
invd
dec
inc
fsub
test
loopne
loopne
or
stos
ror
dec
sub
dec
out
add
daa
out
call
or
in
add
dec
data16
xchg
retw
iret
or
add
dec
out
(bad)
dec
test
add
dec
bound
sbb
out
push
mov
xor
or
push
daa
out
push
daa
out
push
daa
out
push
pusha
lods
xor
or
test
loopne
inc
or
out
lahf
dec
dec
xchg
daa
out
call
bound
mov
int3
dec
pop
jae
dec
out
cmp
jp
xchg
adc
add
aaa
inc
or
out
mov
int3
add
pop
dec
out
call
bound
popf
loope
push
mov
out
adc
dec
out
mov
fs
mov
shr
mov
push
test
inc
out
div
lods
add
aaa
inc
or
xchg
or
call
mov
call
inc
or
add
or
add
fld
test
sub
(bad)
in
push
sbb
xchg
js
out
push
daa
out
call
pop
movs
addr16
dec
bound
pop
daa
out
push
and
test
bound
out
add
and
add
daa
out
push
bound
or
scas
add
adc
add
cmps
test
mov
bound
sbb
out
push
daa
out
push
shr
or
sar
pop
push
test
in
mov
mov
cmp
sub
out
add
pop
loopne
cwde
dec
out
add
ins
clc
or
or
jmp
xor
inc
imul
out
cmp
jl
rcl
or
je
jo
add
dec
loopne
jbe
out
add
shl
add
into
shr
pxor
pop
leave
cmp
or
cmc
ror
out
(bad)
cmp
movs
shl
div
adc
xor
out
(bad)
mov
movs
int3
in
mov
les
les
cmc
mov
lea
sbb
adc
loopne
loop
or
mov
out
add
shr
mov
push
idiv
mov
add
out
or
cmp
push
pushw
cmc
mov
and
fs
fdiv
daa
std
div
fs
mov
jmp
enter
mov
call
cmc
mov
sub
je
je
daa
out
mov
pushw
cmc
mov
push
or
std
div
adc
pop
daa
out
push
mov
inc
test
out
call
mov
ins
cmp
or
ror
out
mov
stos
and
sbb
xor
sub
outs
cmp
or
call
push
adc
cmp
or
mov
dec
out
(bad)
cmp
movs
nop
out
mov
jmp
xor
out
cmp
loopne
outs
dec
out
add
pop
pop
add
dec
out
add
je
or
adc
movs
sti
or
and
les
cmc
mov
mov
movs
fiadd
or
inc
sbb
push
div
lds
or
nop
stos
pxor
jmp
jbe
xor
jbe
lock
or
je
jbe
xchg
stos
pxor
jmp
jbe
mov
sbb
jmp
jbe
adc
or
jge
daa
out
(bad)
jge
pop
jecxz
dec
out
mov
jbe
jl
pxor
jmp
jbe
xor
or
jne
and
adc
movs
push
or
dec
xchg
div
pop
lahf
add
out
mov
jmp
adc
or
dec
loopne
mov
add
mov
call
or
outs
(bad)
mov
add
adc
add
les
sub
les
push
test
out
push
mov
(bad)
cmp
movs
add
or
mov
or
iret
push
daa
out
push
bound
push
add
(bad)
cmp
movs
jmp
or
test
pop
mov
(bad)
push
div
adc
test
lahf
mov
dec
out
jge
and
bound
pop
mov
test
inc
out
add
mov
enter
cmp
dec
call
daa
out
push
test
out
push
mov
call
mov
out
add
test
bound
xor
pxor
movs
daa
or
dec
adc
loopne
in
or
xchg
les
cmc
mov
mov
shr
mov
push
test
sbb
div
lods
add
mov
call
mov
out
add
mov
(bad)
cmp
movs
add
or
mov
or
iret
push
daa
out
push
bound
push
add
(bad)
cmp
movs
jmp
or
test
push
into
daa
dec
rol
or
push
xor
fwait
and
test
pusha
stos
cmp
daa
out
call
idiv
xchg
dec
dec
pop
iret
add
jmp
into
enter
mov
jmp
inc
pop
test
mov
inc
mov
cmp
xor
cmp
xor
push
daa
out
push
bound
jecxz
dec
out
(bad)
cmp
movs
jg
or
or
push
dec
test
mov
push
xabort
mov
or
push
cmc
mov
push
pusha
pusha
aaa
inc
or
push
cmc
mov
push
loopne
in
or
sub
pusha
mov
add
shr
mov
push
idiv
mov
add
xor
call
mov
inc
or
out
call
idiv
mov
add
jmp
mov
bound
pop
shr
mov
push
pusha
pusha
aaa
inc
or
push
cmc
mov
push
loopne
in
or
sub
pusha
mov
add
shr
mov
push
idiv
lahf
dec
dec
pop
xchg
add
xor
call
in
inc
or
out
call
idiv
lahf
dec
dec
pop
scas
add
jmp
xor
adc
pop
shr
mov
push
pusha
out
cmp
shr
mov
push
loopne
in
or
sub
pusha
mov
add
shr
mov
push
idiv
lahf
dec
dec
pop
das
add
xor
call
cmp
daa
out
call
idiv
lahf
dec
dec
pop
inc
add
jmp
test
out
push
mov
enter
cmp
dec
call
daa
out
push
and
test
loopne
out
or
out
call
loope
in
add
mov
div
loopne
lea
imul
jge
add
je
and
test
pusha
popa
cmp
daa
out
call
idiv
lahf
dec
dec
pop
ror
dec
out
jmp
mov
adc
div
adc
div
jb
les
sub
les
lea
sbb
adc
pop
and
bound
pop
movs
aaa
or
dec
ins
les
and
bound
pop
mov
and
dec
out
add
mov
jne
daa
out
push
and
test
loopne
call
and
dec
out
add
add
add
mov
div
loopne
lea
imul
jge
add
je
and
test
pusha
mov
out
call
idiv
lahf
dec
dec
pop
sbb
dec
out
jmp
mov
adc
div
adc
test
rol
or
push
movsx
adc
div
data16
cmp
out
push
mov
lea
sbb
out
lea
sbb
out
or
push
mov
out
les
cmc
mov
mov
les
push
daa
out
push
daa
out
push
and
xchg
or
call
or
test
bound
add
clc
sbb
div
out
xor
call
dec
ins
enter
cmp
dec
call
fcomp
std
div
jbe
or
adc
ror
add
bound
pop
daa
in
push
idiv
sbb
div
out
lea
into
daa
dec
rol
or
push
push
sar
mov
push
pop
shl
mov
push
idiv
sbb
div
out
push
shr
mov
push
bound
lock
mov
xchg
add
cld
mov
jmp
pop
jmp
or
out
call
bound
add
test
bound
add
dec
scas
push
loopne
jmp
or
push
div
or
test
adc
or
out
(bad)
mov
movs
pop
add
dec
bound
mov
out
add
retw
bound
xchg
clc
mov
call
xchg
mov
movs
sbb
dec
test
test
pop
std
div
add
dec
dec
adc
loopne
jmp
or
adc
jp
out
add
dec
xor
data16
and
test
and
or
xchg
pxor
dec
out
and
arpl
test
adc
loopne
jmp
dec
sbb
or
data16
jecxz
adc
mov
adc
cmp
(bad)
jge
pop
jecxz
dec
out
pop
push
push
es
mov
adc
mov
popa
add
lea
iret
(bad)
stos
or
dec
out
add
inc
push
or
xor
jge
jbe
test
mov
call
xchg
dec
out
add
or
mov
jbe
call
add
out
call
xor
mov
idiv
lahf
dec
dec
pop
outs
or
out
cmp
cmp
(bad)
cmp
movs
mov
or
clc
jmp
sub
cmp
cmp
(bad)
cmp
movs
scas
add
dec
aam
and
scas
add
adc
loopne
jmp
or
and
int
jo
pxor
jge
adc
loopne
jmp
or
and
int
jo
pxor
jge
adc
loopne
in
add
cmps
out
lock
data16
cmp
scas
add
fs
xor
mov
adc
dec
dec
aam
and
scas
add
fs
mov
aam
adc
scas
add
fs
xor
lahf
dec
dec
call
dec
aam
sub
scas
add
fs
xor
mov
adc
dec
dec
out
jl
adc
mov
adc
cmp
push
pop
movs
fwait
add
dec
add
mov
mov
push
test
and
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
mov
call
or
pop
inc
pop
movs
mov
les
les
sub
or
sub
adc
mov
or
mov
push
pop
add
iret
je
daa
out
call
bound
or
adc
mov
add
pusha
out
adc
dec
push
sub
out
adc
dec
pushf
jmp
mov
sub
push
add
dec
fs
sub
faddp
mov
adc
test
lea
fs
sub
jns
je
jmp
lods
fld
or
add
inc
out
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
adc
cwde
fucomp
add
dec
