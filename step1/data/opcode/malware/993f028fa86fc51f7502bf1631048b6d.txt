mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
mov
ins
jae
add
jb
lea
sub
add
push
outs
(bad)
test
pop
dec
outs
je
addr16
and
rcr
xor
add
jns
ins
daa
push
outs
jb
add
pop
jns
inc
outs
(bad)
mov
repz
add
cwde
or
push
je
sub
movs
push
ins
repz
std
or
push
imul
push
imul
les
or
and
lods
or
aas
add
sar
iret
repz
fdivr
cmp
(bad)
jns
pop
push
dec
bound
arpl
pop
sbb
push
lods
rol
les
and
xchg
lock
dec
adc
popa
arpl
add
pop
daa
mov
pop
inc
add
int3
add
jmp
jb
push
clc
adc
xor
int3
jne
jg
pop
jnp
push
mov
mov
adc
fnstsw
or
push
out
pushf
in
data16
adc
rcl
fs
sub
outs
jmp
inc
cmp
cmp
add
push
inc
popa
push
push
imul
jmp
dec
push
add
pushf
pushf
mov
xor
hlt
lock
mov
in
pushf
mov
fcomp
fcom
popf
pushf
pushf
pushf
rcr
int3
enter
mov
mov
mov
lods
test
jbe
jb
movs
mov
in
in
xchg
sub
pslld
and
xor
xor
xor
xor
jl
je
(bad)
mov
add
mov
add
not
add
mov
and
mov
ss
pop
ret
addr16
dec
outs
mov
punpckhbw
fs
pop
inc
dec
pop
push
push
mov
cmp
jne
dec
idiv
push
add
mov
test
jne
xor
pop
enter
push
inc
mov
mov
ret
lea
mov
mov
mov
inc
cmp
fnstsw
mov
mov
mov
push
nop
mov
add
scas
mov
mov
jnp
(bad)
xchg
add
test
xchg
mov
mov
mov
or
adc
pop
pop
adc
add
or
jg
call
ret
mov
push
mov
mov
mov
mov
add
rcr
mov
(bad)
out
push
or
push
or
ret
and
movs
mov
push
mov
int
or
inc
add
adc
or
fdivr
fistp
jmp
loopne
mov
cmp
mov
pop
pop
push
fbstp
je
sti
mov
xchg
cmp
jb
mov
add
call
pop
shr
ja
and
mov
or
mov
cmps
jnp
jne
ret
jmp
pop
mov
add
pop
or
cmp
sub
jbe
xchg
or
sub
mov
lock
pop
ret
or
or
jmp
sbb
inc
add
sti
jne
sbb
nop
es
mov
cmp
aam
jge
mov
enter
in
and
xchg
add
add
and
push
jg
clc
mov
cmp
sar
mov
add
add
hlt
ja
cmp
lock
push
mov
data16
dec
stc
shr
fild
lahf
push
pop
icebp
shr
add
pushf
cmp
in
mov
fild
inc
rol
or
xor
retf
and
call
sub
mov
popf
jmp
in
es
ja
mov
add
in
scas
hlt
cmp
ja
cmp
jp
sub
mov
sbb
jmp
mov
fild
adc
jne
mov
adc
cmp
push
mov
jne
sbb
dec
lods
loopne
shl
mov
mov
and
sbb
ret
ds
mov
test
sub
mov
pop
cmp
add
and
mov
cmp
or
or
jbe
scas
adc
sti
push
push
or
sbb
xchg
add
mov
pop
sbb
push
jb
inc
(bad)
aad
mov
xor
jmp
sahf
nop
enter
out
sub
or
push
or
sbb
jae
mov
cmp
jae
std
add
jae
dec
or
inc
add
and
add
dec
dec
loopne
(bad)
dec
ja
clc
mov
(bad)
aas
cmps
inc
(bad)
or
add
repnz
shl
cmp
jg
inc
cmps
jg
cmps
xlat
mov
pop
push
in
je
mov
aas
or
xor
test
jl
push
(bad)
pop
add
jne
jne
inc
hlt
cmp
pop
movs
and
push
and
popa
xchg
aad
pushf
xchg
ins
pop
add
cli
jl
sub
add
je
cmp
inc
push
mov
loope
mov
ds
stos
mov
shl
xor
lea
sti
gs
sub
shl
push
out
adc
lea
test
scas
and
cld
xchg
jmp
imul
add
xchg
cmp
idiv
cmps
sub
inc
push
sbb
adc
ds
ficom
stc
cmp
cwde
aaa
jecxz
add
fild
cmp
jae
mov
out
ror
sub
mov
push
push
and
test
je
imul
jo
lock
adc
jmp
lock
jmp
pop
pop
adc
pusha
sbb
add
ss
push
mov
xchg
push
mov
push
cmp
push
imul
add
ins
popf
and
daa
mov
clc
seta
call
sub
mov
cmp
push
leave
jle
hlt
inc
cmp
in
mov
inc
jp
add
les
sub
pop
jo
pop
pop
push
adc
sub
sbb
or
mov
mov
ss
xchg
test
shl
add
mov
and
in
arpl
rol
add
fs
add
lock
adc
push
mov
or
inc
mov
sbb
jbe
loopne
adc
pop
mov
jne
lock
adc
cld
pop
test
data16
adc
test
jns
add
sar
nop
test
test
and
fldenv
push
mov
iret
lds
pop
adc
sti
inc
inc
push
pop
add
or
mov
cmp
das
jne
or
sbb
mov
sub
lea
cmp
jl
mov
pop
push
mov
jb
mov
es
or
or
jg
mov
mov
and
add
sub
test
cld
xlat
or
test
add
jbe
jmp
or
push
rol
adc
or
ret
dec
pop
loope
or
hlt
int3
push
add
cmps
(bad)
sub
fsubr
test
test
je
mov
jb
sub
cmp
cmp
cmp
or
add
test
mov
xor
jbe
add
mov
clc
add
and
mov
(bad)
bound
and
mov
(bad)
cmc
adc
mov
jmp
test
dec
cmp
into
push
lea
sub
cmc
outs
or
cld
jg
clc
sub
sub
cmp
jge
out
loop
mov
or
fild
fucomip
adc
xlat
cld
lea
and
in
push
aaa
jnp
mov
aad
(bad)
(bad)
clc
add
dec
jae
lea
shl
jnp
jp
or
cmp
mov
xlat
mov
add
sub
jo
(bad)
movs
stc
pop
jo
adc
repz
enter
sbb
push
jmp
hlt
inc
adc
cmp
add
sub
cmp
or
in
push
add
fs
mov
mov
scas
add
inc
adc
or
mov
adc
mov
or
adc
mov
xchg
sbb
cmp
lea
movs
mov
ss
mov
cwde
(bad)
or
out
sahf
push
sbb
es
push
mov
cmp
addr16
jl
pusha
xchg
pop
sub
add
adc
mov
shl
repz
(bad)
sub
int3
sub
sub
xor
gs
jge
sub
add
mov
mov
cld
adc
pushf
dec
adc
xchg
or
mov
sub
add
pop
dec
fsubr
int3
(bad)
rol
push
outs
test
mov
sub
sar
cmp
das
stos
adc
or
sahf
pop
int
jmp
cmps
retf
mov
arpl
mov
xor
mov
sahf
ret
cs
pop
mov
pop
je
call
jmp
sub
jae
pop
jne
sbb
pop
shl
jle
adc
sub
cmp
loope
sbb
add
xor
dec
(bad)
loope
sub
mov
jmp
ret
stos
mov
cmp
cmps
rol
(bad)
xchg
mov
jmp
repnz
jne
int3
pop
inc
pop
js
pop
xor
jmp
pop
push
jl
fwait
pop
movs
pusha
or
je
sti
clc
stos
jle
inc
inc
adc
xor
push
push
mov
or
dec
add
or
sti
mov
mov
push
test
jg
popa
fst
or
xchg
pop
test
add
pop
inc
scas
shl
push
sar
or
xor
loop
xchg
test
pushf
or
cwde
push
add
or
mov
pusha
adc
jmp
xor
sbb
cmp
sar
sub
mov
add
arpl
sbb
mov
adc
and
adc
or
sbb
aad
mov
jne
out
bnd
or
jo
xor
mov
and
push
test
jne
test
ja
dec
popa
ret
and
add
mov
mov
or
test
(bad)
jge
inc
inc
mov
xor
cmp
mov
rcl
clc
cmp
(bad)
ret
cmp
stos
in
sbb
add
sbb
orps
mov
adc
ret
sbb
or
inc
cli
test
jmp
mov
cmp
xor
fdiv
clc
push
adc
or
adc
sbb
and
cmp
nop
add
mov
mov
pop
jns
out
mov
(bad)
jge
icebp
add
(bad)
mov
(bad)
pushf
cs
lods
lock
push
fwait
adc
add
into
not
cmp
mov
cli
add
inc
mov
in
sub
xor
ror
add
sbb
mov
push
pop
mov
mov
and
xor
mov
data16
sub
(bad)
clc
jp
cmp
mov
adc
xor
dec
ds
xor
adc
push
sbb
and
mov
sbb
sub
test
in
and
sbb
cmp
mov
mov
cmp
push
mov
or
add
popa
loopne
or
cmp
xchg
ret
and
jmp
add
ret
xor
inc
xchg
push
mov
mov
sbb
inc
mov
or
add
cmc
adc
xor
add
pop
pop
call
mov
adc
aam
aas
inc
ss
adc
cli
(bad)
mov
(bad)
add
out
(bad)
retf
xchg
dec
sbb
and
pusha
daa
mov
adc
cmps
test
jle
call
std
out
pop
or
add
(bad)
cmp
je
je
mov
loopne
mov
test
je
sbb
enter
dec
jnp
pop
or
add
push
jmp
out
xor
add
popf
jno
xlat
shl
arpl
mov
adc
and
fist
lock
jl
mov
pop
sbb
or
scas
pop
ret
aas
add
inc
icebp
pop
inc
push
sbb
das
and
push
or
pop
test
popf
shl
cmp
sbb
or
jo
cwde
mov
mov
jne
jl
sar
ja
loopne
dec
adc
push
sbb
pop
xor
pop
jne
xor
retf
addr16
cmovg
mov
xor
popa
jp
mov
repnz
scas
clc
outs
js
push
je
xchg
jle
cmp
jg
sub
inc
adc
adc
rcl
(bad)
jg
add
mov
inc
rep
jmp
mov
jmp
xchg
sub
in
mov
jmp
mov
out
ret
pop
sub
sbb
test
ds
mov
jb
div
je
cmp
jbe
js
rep
xchg
inc
je
cld
lea
scas
or
xor
add
fld
pop
jmp
rol
ja
(bad)
mov
adc
and
cmp
into
cmp
mov
outs
or
out
in
mov
jmp
cmp
xor
xor
sti
xchg
push
shr
rol
jmp
adc
in
sbb
ja
mov
aad
ds
mov
mov
xor
jmp
outs
cmp
mov
(bad)
cmp
jbe
mov
mov
inc
inc
adc
cmc
shl
fisubr
test
dec
addr16
pop
or
test
jne
push
push
add
push
test
jne
add
test
push
and
ret
fsubr
sbb
adc
je
sbb
scas
std
adc
dec
jmp
mov
add
fwait
test
or
push
fld
pop
xchg
add
sar
cmp
jb
cmp
ja
sub
push
mov
fldcw
xor
add
cmp
pop
push
sub
adc
shl
outs
fistp
fwait
or
ins
frndint
fldcw
fwait
int
xchg
dec
ds
fwait
pop
pop
out
push
jne
pop
dec
or
es
pop
cmp
movs
jmp
or
mov
or
std
es
les
mov
or
data16
cmp
or
pop
push
data16
test
loop
cmp
cmps
xlat
outs
or
mov
push
sbb
idiv
aad
push
sbb
sbb
(bad)
(bad)
mov
mov
jle
adc
push
ror
or
lea
push
add
adc
mov
add
push
adc
cmp
jne
push
cwde
pop
test
jo
or
pop
fwait
loop
xor
push
push
sbb
push
or
std
(bad)
jnp
not
dec
sete
sbb
mov
test
popf
add
xor
or
or
mov
je
call
cs
mov
scas
jg
push
inc
sbb
and
daa
movs
sti
sbb
das
inc
add
push
ror
jbe
js
and
and
sub
sbb
push
push
push
lea
push
sbb
scas
mov
mov
jle
dec
jne
dec
dec
dec
push
inc
pop
inc
inc
out
sub
clc
or
jbe
xchg
push
aaa
mov
jbe
(bad)
mov
loop
ror
fisttp
jo
dec
mov
jae
cmp
inc
rol
out
push
xchg
sub
jp
cmp
out
dec
jne
jmp
lea
ret
sbb
je
adc
inc
jl
xchg
hlt
pushw
push
cmp
shl
call
cmps
pop
fwait
popf
mov
pop
mov
add
shr
cs
xchg
dec
push
xor
imul
out
jo
push
ja
xor
mov
lea
call
mov
mov
push
push
test
cmp
(bad)
jo
push
dec
pop
imul
and
dec
idiv
dec
dec
sub
sub
inc
(bad)
(bad)
ror
xor
jmp
cmp
test
add
data16
sbb
push
sbb
push
hlt
pop
and
enter
fdiv
div
sub
and
push
sub
dec
or
cmp
and
outs
pop
sub
mov
adc
mov
je
mov
push
(bad)
(bad)
jg
(bad)
xchg
mov
mov
xor
mov
inc
add
jb
cmp
ja
mov
mov
mov
ud0
inc
add
arpl
test
loope
inc
xchg
or
retf
retf
fist
inc
and
inc
jo
or
(bad)
inc
cmp
add
push
shr
je
mov
mov
cmp
jne
std
call
dec
je
mov
add
aaa
add
add
dec
jne
jmp
(bad)
(bad)
jmp
and
je
mov
cmp
jne
dec
je
mov
cmp
jne
aad
shl
add
sbb
shl
out
push
pop
cmp
cmp
jne
shr
shr
sbb
stc
fdivr
adc
shr
or
int
out
pop
cmp
cmp
out
rol
pop
and
mov
cmp
jne
dec
dec
ins
call
dec
sbb
and
rcr
jecxz
cmc
sub
inc
pusha
js
sbb
adc
inc
or
push
add
push
adc
test
cmp
je
dec
inc
mov
mov
shl
ds
or
pusha
or
stos
mov
stos
pop
mov
xor
imul
mov
ja
loopne
adc
sbb
inc
fadd
cmps
and
dec
(bad)
or
and
pop
pop
loopne
add
ins
retf
dec
mov
sbb
push
adc
or
je
loopne
mov
jbe
xor
push
pop
adc
test
call
sbb
xor
leave
adc
sbb
inc
adc
(bad)
pop
mov
mov
bound
out
out
mov
push
jle
mov
dec
adc
rol
push
adc
jl
mov
inc
cmp
push
cmp
je
cmp
sub
outs
test
dec
jg
jmp
into
inc
bnd
cmp
loope
add
fmul
push
mov
sbb
mov
add
mov
sub
enter
out
push
inc
and
mov
aaa
in
ins
add
sub
inc
push
cld
mov
enter
lock
cmp
cmp
jne
ds
mov
cmp
mov
mov
popa
je
add
dec
jo
xor
sub
push
test
in
daa
or
add
mov
ins
je
in
push
fstp
push
inc
cmp
je
mov
or
je
or
je
aaa
push
call
je
xor
test
and
add
outs
sar
imul
or
cmp
ja
lea
add
push
pop
icebp
in
aas
push
out
int
or
jge
jmp
inc
pusha
neg
jle
js
add
dec
pop
sub
jmp
inc
inc
jmp
mov
addr16
div
popa
jb
xchg
and
pop
shr
mov
or
pop
fisttp
push
cwde
pop
xor
mov
inc
sbb
add
push
call
jecxz
mov
shl
and
jbe
(bad)
iret
clc
ins
movntq
jp
cmp
(bad)
je
mov
add
sub
cmp
jg
add
call
push
fcmovbe
jbe
fdivr
mov
pop
pop
jmp
xchg
adc
add
stos
nop
inc
mov
fcmovnu
in
inc
jle
sub
fs
mov
imul
ret
and
sbb
leave
jg
test
add
sahf
je
sbb
or
bsf
shl
mov
jmp
xor
and
dec
mov
pop
sti
call
and
stc
sbb
jbe
sub
inc
mov
dec
jne
pop
sub
mov
sbb
add
jg
outs
mov
rcl
rcl
or
push
pusha
ret
cmp
je
fidivr
(bad)
repz
bound
sub
sub
leave
jne
xchg
test
dec
je
push
jmp
add
lea
pop
lea
fld
mov
je
cmp
add
je
das
aad
fucomi
xchg
aaa
add
popa
and
cmp
retf
mov
xchg
jge
mov
pop
push
cdq
xchg
xor
sbb
jmp
adc
fstp
fld
fldz
movs
cmp
xor
in
dec
mov
cli
or
pushf
or
ret
mov
adc
inc
repnz
sbb
imul
lds
xchg
and
inc
mov
mov
push
ja
repnz
addr16
es
test
out
sub
out
jle
pop
jecxz
add
leave
sbb
mov
jg
inc
jbe
imul
cmp
mov
(bad)
mov
bound
fwait
jg
outs
cmp
xlat
fadd
outs
xor
xchg
push
call
cld
or
push
push
int3
into
sbb
ror
mov
(bad)
call
push
inc
enter
movs
outs
movs
push
inc
cmp
and
daa
(bad)
retf
into
pop
inc
test
(bad)
(bad)
(bad)
call
pop
inc
in
mov
mov
addr16
leave
repnz
bound
and
inc
outs
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
inc
mov
(bad)
(bad)
call
stos
mov
cmp
or
mov
pop
out
sub
imul
(bad)
idiv
sub
push
jl
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
(bad)
(bad)
call
sar
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
(bad)
jmp
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
(bad)
(bad)
(bad)
mov
push
cmps
scas
mov
pop
or
add
cmp
xor
(bad)
(bad)
call
pop
cmp
sahf
xchg
pop
cmps
lock
mov
popa
mov
and
dec
repz
mov
sub
and
and
outs
bound
xor
cld
retf
jmp
fist
fsubr
out
mov
pop
jne
push
pop
and
add
lock
daa
loopne
add
into
fild
movzx
lea
push
push
and
cmc
scas
rol
jne
xor
push
push
fs
repz
mov
mov
data16
add
aad
repz
push
out
cmp
sub
aas
out
mov
jmp
sar
mov
pop
aas
or
mov
or
adc
inc
push
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
scas
cld
(bad)
jmp
jo
imul
push
dec
popa
jae
push
popa
ins
jne
fninit
fwait
pop
jmp
movs
mov
jmp
lods
jnp
cli
adc
mov
xor
mov
inc
rep
cs
clc
(bad)
fild
or
dec
cld
jne
dec
mov
xor
and
jne
adc
loope
sbb
inc
mov
inc
inc
(bad)
jge
inc
pop
add
scas
popf
std
or
push
pop
aaa
sub
pop
mov
rcr
test
or
push
test
add
xchg
(bad)
stc
mov
pop
adc
loope
clc
outs
loopne
inc
mov
or
push
cld
into
out
mov
mov
dec
fdiv
rcl
add
stos
pop
jmp
stos
icebp
int
sub
pop
fmul
outs
(bad)
idiv
sbb
in
cmp
je
pop
mov
add
jae
mov
popf
clc
add
mov
push
sbb
cmp
out
lahf
add
mov
mov
mov
sub
inc
or
cli
stos
(bad)
mov
cmp
inc
xchg
cmp
aad
adc
(bad)
jb
(bad)
add
jmp
sub
inc
sbb
fadd
rol
adc
fs
ja
and
or
mov
cmp
mov
arpl
enter
cmp
dec
popf
mov
mov
sub
in
xor
cld
xor
mov
xchg
push
push
mov
add
call
lea
js
pop
and
dec
(bad)
rcr
fistp
add
mov
xor
mov
loop
aaa
jl
xor
xor
jb
cmp
fmul
or
jne
or
push
inc
jb
xor
inc
fcom
jo
aaa
and
and
ja
push
mov
test
mov
mov
cmp
je
mov
leave
xchg
mov
add
retf
or
or
mov
clc
jmp
neg
pop
add
sub
mov
pop
out
mov
xchg
add
push
out
jmp
imul
mov
sbb
les
sbb
push
pop
pop
push
ror
or
pop
data16
inc
(bad)
adc
stos
add
pop
mov
popa
lock
add
dec
jge
dec
int3
bound
mov
cmp
push
in
ja
push
add
dec
jne
icebp
fucomi
sbb
add
jo
fwait
cmps
sbb
jecxz
dec
cmp
scas
in
je
lahf
push
popf
enter
movs
push
imul
pop
call
xchg
imul
in
push
pop
add
mov
push
push
push
xor
hlt
xor
pop
movs
(bad)
fild
adc
mov
mov
mov
or
mov
call
stc
das
and
das
dec
stos
push
sub
or
or
sub
rcr
pop
xor
adc
push
clc
jbe
cs
pop
sbb
ja
pop
imul
out
push
and
pop
mov
rcr
jbe
mov
ret
in
push
call
pop
push
sbb
pop
push
push
mov
int
or
pop
iret
cs
add
or
jae
stos
retf
sahf
mov
pusha
xlat
pop
push
push
and
or
mov
cmp
je
or
jne
movsx
inc
inc
jmp
fadd
aam
add
cmps
and
push
jecxz
add
adc
loop
fiadd
push
fdivr
adc
add
pop
(bad)
in
test
loop
test
mov
mov
jnp
push
mov
jo
adc
shr
or
icebp
pop
les
out
pop
push
cmp
je
dec
cmp
outs
pop
imul
and
sbb
adc
xchg
push
enter
adc
jne
jbe
adc
mov
jns
jo
dec
push
pop
mov
cmp
test
cmp
sub
ins
test
mov
or
rcl
mov
mov
jle
add
pop
mov
jecxz
jle
mov
adc
xor
pushf
mov
jmp
je
dec
or
add
call
rcr
push
or
retw
movs
pop
add
lds
pop
cdq
add
aas
repnz
mov
sbb
push
fdivr
dec
fdiv
mov
std
ror
push
or
mov
mov
fsub
jne
inc
dec
jne
sub
fiadd
je
xor
and
cmp
jmp
sbb
inc
mov
adc
xchg
adc
adc
mov
add
inc
pop
and
mov
and
dec
cmp
js
arpl
cmp
setge
xor
test
add
inc
cmp
popf
jle
push
sub
add
xchg
and
inc
stos
call
push
push
push
push
mov
or
fs
mov
das
adc
sbb
mov
inc
and
test
and
into
adc
adc
or
mov
mov
cmc
lea
stc
pop
mov
(bad)
lods
pop
(bad)
loopne
pushf
jle
jmp
ret
xor
mov
ffreep
add
xchg
ret
pop
imul
sbb
push
add
je
cmp
in
jl
je
sub
and
jmp
add
jno
(bad)
aas
sub
jb
je
jmp
cmp
cmp
(bad)
jge
inc
adc
jmp
sub
cmp
mov
jmp
(bad)
sti
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
ret
pop
mov
jmp
mov
jmp
mov
in
lea
xchg
push
or
pop
out
pusha
jb
cs
mov
sbb
pusha
cmp
push
jns
push
jnp
jno
outs
jp
cmp
inc
pop
test
mov
pop
push
inc
sbb
cli
addr16
add
dec
mov
or
push
inc
sti
pop
add
das
and
adc
fadd
sub
cmp
xor
sub
xor
inc
cld
mov
call
cmp
pop
mov
adc
enter
mov
or
cmp
jne
clc
xor
cmp
add
scas
xlat
pop
int
pop
dec
mov
mov
jle
in
push
cmps
inc
test
jle
dec
mov
inc
fiadd
mov
daa
(bad)
call
and
mov
adc
sub
adc
loopne
mov
pop
outs
mov
push
sahf
pop
dec
mov
pushf
js
push
inc
fldcw
jle
add
sbb
jg
cmp
jg
mov
sbb
fs
and
fwait
mov
mov
cmp
adc
mov
or
jp
cmp
sbb
jmp
fadd
mov
adc
push
cli
add
dec
jne
pop
add
mov
pop
sbb
out
bound
dec
add
sbb
inc
inc
ds
jecxz
mov
mov
je
mov
ds
cmps
lock
inc
outs
adc
mov
es
dec
fst
or
mov
mov
fiadd
xchg
adc
mov
push
push
mov
push
out
push
add
fcomp
rol
sbb
cli
not
ja
add
mov
mov
leave
aaa
push
mov
cdq
push
cmp
and
sub
cmp
aam
cld
or
add
add
push
push
pop
jecxz
xor
repnz
ret
mov
push
lock
xchg
ins
adc
cmp
in
cdq
rcl
or
ficomp
mov
mov
cmp
push
cmp
adc
dec
mov
pop
mov
out
sbb
pop
aad
jne
dec
and
xchg
xor
call
push
jne
ret
sbb
push
add
out
mov
mov
mov
fcomp
inc
adc
movs
jnp
jbe
je
es
ins
fsub
mov
add
adc
rol
adc
cmp
cmc
pop
mov
adc
push
retf
inc
stos
sbb
pop
mov
pop
mov
add
mov
dec
mov
nop
and
or
or
push
fs
push
and
stos
sub
loope
xor
push
out
rcl
js
inc
ins
mov
adc
test
in
mov
jle
pop
pop
mov
rcl
stc
dec
mov
add
adc
sub
add
push
push
or
add
cmc
push
push
mov
xchg
test
pop
cmps
or
mov
sub
(bad)
aaa
clc
fisub
mov
dec
jl
lock
push
lea
std
pop
push
stc
mov
push
sbb
add
jmp
test
push
cli
dec
jne
push
mov
cmp
dec
and
inc
jg
mov
pop
test
pop
mov
pop
push
dec
sbb
pop
mov
jbe
xchg
adc
xchg
or
pop
icebp
pop
out
clc
jle
push
add
loopne
push
adc
add
or
mov
xchg
pop
and
(bad)
mov
clc
in
jbe
icebp
add
add
iret
mov
das
stc
mov
add
or
lock
int3
ret
cmp
popa
pop
push
mov
push
ret
or
rol
int
aaa
inc
fild
sbb
(bad)
cmp
cld
jns
cmp
or
(bad)
jmp
lea
add
push
pushf
push
and
mov
outs
push
xor
push
sub
fistp
mov
mov
pop
jge
inc
pop
fiadd
xor
adc
add
cs
in
and
or
out
push
cwde
(bad)
or
je
add
fsubr
add
jmp
inc
add
jmp
sbb
pop
sub
and
pop
pop
gs
out
stc
or
push
push
addr16
in
add
jae
ja
mov
inc
xchg
lock
mov
push
cli
repnz
imul
pop
add
pop
pop
xor
mov
xor
add
cld
cmps
push
cmp
pop
cld
int
fistp
jl
(bad)
sub
rol
ja
add
inc
ret
xlat
ret
je
pop
shr
cld
add
cmp
xchg
pop
js
or
and
addr16
cld
cmps
jmp
popa
and
adc
or
and
(bad)
pop
cmp
mov
ror
inc
jmp
(bad)
in
mov
mov
cli
lds
push
mov
movs
xchg
sbb
dec
clc
mov
mov
jmp
lods
fcomp
cmps
xor
(bad)
xchg
adc
or
ror
je
mov
dec
jmp
popa
jnp
pop
sub
add
cmp
push
dec
jne
lahf
xchg
call
clc
lea
aaa
add
dec
jmp
and
jp
inc
inc
mov
or
add
mov
dec
jne
mov
ror
dec
pop
and
lea
jmp
sbb
add
inc
cmp
add
popa
sti
cmp
(bad)
imul
dec
cmps
add
jmp
inc
pop
sub
cmp
jmp
loope
jo
xchg
and
adc
sbb
or
(bad)
jmp
addr16
cmps
dec
scas
inc
std
add
add
cmp
add
sbb
mov
pop
adc
jecxz
dec
gs
inc
es
mov
adc
ret
cmp
inc
mov
dec
jl
cmp
jge
sub
sbb
jb
adc
mov
jg
xchg
push
in
jmp
and
hlt
pop
fs
cli
cmp
(bad)
cmp
jl
fisttp
es
mov
add
stc
xchg
cmp
add
lea
inc
dec
movs
push
push
pop
pop
retf
ds
or
xlat
aas
mov
mov
push
mov
sub
xlat
or
xlat
mov
add
gs
cmp
mov
sbb
push
mov
lea
lock
push
add
fwait
cmp
add
push
pop
ins
xchg
xor
mov
(bad)
jmp
dec
js
mov
inc
jb
adc
adc
js
shl
inc
retf
push
shr
pop
ss
pop
mov
nop
pusha
xor
xchg
inc
push
mov
out
and
inc
clc
add
sub
or
loopne
adc
pop
mov
jo
(bad)
in
ins
xor
arpl
cli
push
sub
adc
mov
pop
jle
mov
adc
add
mov
repz
sbb
push
push
retf
hlt
into
shr
pop
mov
lock
or
and
mov
fisttp
adc
fstp
xchg
push
cmp
pop
sbb
or
cmp
call
fmul
or
sbb
sub
adc
sbb
mov
aaa
sub
inc
or
push
das
sbb
sub
sub
sub
or
push
ss
loope
inc
call
xor
pushf
mov
xor
xchg
into
fsub
js
jmp
xchg
inc
push
jmp
xchg
out
add
jle
inc
xor
fisttp
xor
aam
aam
lock
outs
push
add
pop
push
or
cmp
aas
(bad)
(bad)
pop
push
mov
xor
sub
nop
xlat
inc
mov
sbb
or
inc
mov
inc
inc
scas
aaa
and
fldcw
jmp
add
ds
cwde
jle
mov
fdivr
cmp
inc
cdq
pop
cs
sbb
ins
iret
rol
arpl
jge
dec
jge
jno
les
jle
lea
mov
lods
mov
push
scas
add
sbb
lahf
and
push
add
shl
jmp
fiadd
inc
mov
add
(bad)
int3
stos
nop
imul
mov
xor
cs
fsub
aas
into
enter
in
fidivr
xlat
pop
inc
pop
xchg
adc
xlat
xlat
clc
retf
push
cmp
mov
test
out
jbe
rcl
push
test
cmp
pop
jg
cmp
or
adc
repnz
dec
jne
mov
inc
add
repz
or
out
xchg
dec
xchg
and
mov
mov
pop
mov
and
pop
xor
mov
das
or
bound
cld
cmp
pop
pop
dec
cmp
aam
fnstsw
or
ret
cmp
push
je
rol
arpl
rcr
dec
or
imul
cmp
mov
mov
loopne
add
iret
adc
cmps
mov
or
inc
push
enter
adc
mov
push
nop
pop
pop
sbb
pop
dec
cld
adc
enter
mov
mov
push
lock
(bad)
sbb
xor
pop
scas
in
cli
mov
aad
push
pop
pop
push
mov
lea
push
jmp
push
and
je
call
cmp
mov
mov
pop
pusha
es
and
or
jo
jo
scas
and
jle
je
mov
mov
xor
je
cmp
xchg
cmp
push
jo
mov
shr
xor
adc
loopne
outs
pop
or
adc
jmp
push
mov
mov
mov
add
mov
mov
dec
cs
adc
cmp
pop
jmp
cmp
adc
cmp
out
adc
sqrtps
lahf
inc
or
cwde
call
cmp
pop
call
mov
les
(bad)
jns
inc
(bad)
and
data16
pop
jbe
test
push
or
inc
mov
inc
test
int3
jg
int3
xchg
out
into
daa
and
mov
pop
mov
fisttp
iret
ja
inc
push
daa
nop
sbb
dec
cmp
repz
inc
push
mov
inc
cs
inc
or
sub
add
test
cmp
dec
fcomp
or
ss
xor
adc
and
daa
inc
xchg
rcl
adc
or
jnp
iret
repz
push
sub
retf
bnd
add
lahf
movntps
dec
in
jl
inc
xchg
xor
cmp
inc
dec
sbb
push
rcr
or
sbb
and
pop
dec
xchg
lea
outs
cld
(bad)
inc
outs
int
jo
push
add
sar
add
inc
and
sbb
jmp
mov
dec
or
jo
sbb
into
adc
mov
pop
js
lock
adc
in
arpl
xchg
sub
inc
mov
repnz
lea
mov
fadd
jae
push
push
or
mov
jle
mov
cmp
add
sbb
mov
xor
mov
adc
dec
rol
push
pop
js
in
dec
jne
test
sub
mov
aas
int
xchg
and
mov
in
xchg
dec
movs
jb
push
popa
jge
into
dec
enter
out
or
jmp
ror
sub
xor
xchg
jae
mov
jp
push
sub
std
adc
les
scas
jo
xor
add
es
ja
sti
sbb
scas
test
add
inc
jmp
fnstcw
pop
mov
cmp
add
in
cmp
xor
push
fs
popa
sbb
in
pop
adc
gs
aam
xor
cdq
xchg
mov
cld
adc
(bad)
xchg
xchg
push
push
loopne
sbb
mov
push
jle
int
mov
dec
mov
cwde
cmps
push
cmp
sub
shl
les
and
mov
mov
cmps
dec
jge
loopne
(bad)
mul
mov
and
shr
fisttp
retf
ret
push
xor
popf
push
adc
pop
es
or
jne
fwait
mov
or
je
push
jns
neg
neg
(bad)
in
or
xor
neg
neg
sbb
int
(bad)
push
aaa
ins
xor
shl
rcl
rcl
rcl
cmp
jb
cwde
cmp
xlat
or
ficomp
out
inc
loop
ins
cli
pop
test
cmps
dec
lea
out
repz
arpl
test
bnd
inc
in
push
mov
mov
xor
retf
push
or
les
rcl
sub
jl
inc
pop
pop
cli
(bad)
lods
add
pop
mov
add
add
mov
inc
and
sub
adc
jg
sahf
xor
pop
je
daa
xor
fidivr
ins
jnp
adc
sub
fneni(8087
fidiv
popa
fadd
jb
push
cmp
int
stc
push
jb
out
sahf
mov
repnz
les
xor
sbb
aaa
jmp
cmp
dec
push
sbb
inc
loop
jb
jmp
jl
and
or
xor
mov
cdq
aaa
in
adc
adc
adc
retf
jb
push
scas
loopne
pop
aam
add
xor
jmp
inc
ficom
and
or
cmp
cmp
je
mov
or
cmp
loopne
das
call
das
jg
shl
add
jmp
and
gs
clc
sub
add
add
or
xchg
shr
setl
cmp
je
dec
add
ror
or
dec
mov
test
pop
mov
add
int3
dec
xchg
inc
(bad)
xchg
inc
adc
push
test
loopne
scas
jg
mov
dec
pop
add
aam
test
jg
cmp
mov
jle
mov
pushf
sahf
mov
hlt
xchg
out
sub
xor
dec
shl
cs
push
push
push
xchg
add
mov
sbb
push
add
adc
jle
dec
fiadd
call
loopne
inc
call
ret
mov
and
fiadd
mov
cmp
icebp
jge
jge
test
inc
adc
ins
xchg
clc
imul
sub
add
ficomp
ror
mov
pop
dec
es
loop
stos
xchg
les
retf
or
sub
mov
push
in
test
repnz
dec
in
push
sbb
in
dec
adc
(bad)
fadd
push
xor
dec
shl
pop
jo
sbb
add
je
adc
push
lock
test
loopne
fadd
ret
cmps
cmp
jle
cwde
or
jmp
dec
jo
and
add
call
cmp
outs
daa
xor
test
call
dec
jne
enter
adc
in
push
sub
movs
outs
xlat
xor
adc
daa
out
push
adc
aaa
cmp
mov
pop
sub
sahf
sbb
mov
adc
dec
push
push
push
mov
inc
out
pop
pop
les
and
dec
mov
sbb
fldcw
cmp
mov
jne
sub
cmp
fiadd
inc
sbb
push
adc
or
add
loop
test
push
add
mov
in
push
test
push
jo
and
xchg
xor
and
ss
ret
jecxz
mov
and
sbb
add
jmp
fsub
fldenv
inc
cmp
cli
pop
jne
je
mov
jne
clc
inc
mov
mov
push
bound
movs
out
mov
stos
inc
push
push
and
pop
test
je
and
rcl
(bad)
push
test
jl
pop
xor
mov
inc
sbb
js
pop
jne
xlat
jno
je
retf
cmp
add
mov
and
or
in
jne
jl
fisubr
sbb
lea
mov
fwait
mov
(bad)
sub
add
inc
cmp
dec
jg
gs
jbe
int3
fsubr
mov
pop
rcr
and
push
sbb
shl
cmp
cmps
add
cmp
test
mov
fdiv
sub
dec
push
push
mov
push
fst
inc
jp
lahf
test
mov
mov
inc
imul
gs
xor
cs
ins
ja
gs
outs
outs
addr16
popa
je
stc
ret
dec
popa
ins
gs
daa
outs
loopne
push
inc
ja
sbb
push
ja
mov
jmp
int3
push
xor
push
movs
add
add
ja
and
test
mov
arpl
push
or
sub
mov
popf
rol
cmps
out
inc
stc
int
pusha
cmps
(bad)
aas
iret
loopne
sub
push
repnz
shr
in
arpl
sti
imul
(bad)
push
lods
repz
std
mov
lock
cmp
test
and
repz
or
pop
rcr
jmp
in
xor
mov
mov
cs
pop
cmp
jne
adc
popf
inc
sub
daa
js
(bad)
sub
sbb
add
add
lods
and
icebp
je
leave
les
xor
cmc
add
(bad)
mov
pop
outs
data16
popa
jb
pop
lods
data16
mov
jae
aaa
jl
test
push
lock
add
adc
pop
cmps
add
cmp
in
(bad)
adc
jbe
mov
sbb
jmp
pop
pop
or
daa
mov
sbb
mov
sti
cs
pop
fcom
icebp
mov
mov
dec
mov
add
sbb
add
(bad)
jp
cmp
mov
das
mov
inc
xchg
inc
dec
add
or
sti
js
mov
jb
cmp
or
outs
int3
and
adc
dec
stos
dec
mov
push
jo
cmp
out
iret
or
mov
pop
mov
pop
mov
adc
push
cld
jne
jae
fiadd
aam
dec
jmp
add
mov
call
sub
ins
les
push
add
pop
mov
pop
and
lock
mov
dec
mov
je
sbb
push
mov
shr
cmp
push
push
mov
inc
mov
outs
iret
les
mov
pop
pop
ret
les
cmc
xchg
push
aas
adc
jmp
xor
mov
adc
and
(bad)
or
arpl
pusha
add
cs
and
lods
inc
test
inc
(bad)
js
inc
(bad)
or
xor
or
jnp
mov
mov
jmp
test
leave
call
stos
movzx
inc
cmp
ja
mov
inc
jmp
cmp
push
jbe
lea
cmp
ja
fcmovb
jmp
or
mov
fwait
div
jecxz
sbb
and
retf
push
imul
and
and
jae
mov
rol
dec
or
mov
jne
jb
or
dec
mov
and
loopne
xor
or
mov
cmp
push
jl
mov
hlt
repz
pop
lock
mov
or
jbe
(bad)
(bad)
push
pop
rcl
pop
cmc
adc
cld
test
pop
cld
or
inc
test
je
or
jae
fmul
loope
and
je
cmp
adc
mov
xor
inc
or
mov
in
mov
shl
or
mov
pop
lea
dec
dec
cld
mov
jo
mov
dec
les
add
(bad)
or
pop
cmp
loopne
jo
adc
or
(bad)
cmp
lds
and
inc
inc
mov
ret
mov
scas
sbb
pop
mul
in
xor
sbb
or
dec
mov
jb
inc
sbb
leave
add
(bad)
out
jbe
(bad)
xchg
push
jno
push
xchg
in
dec
and
je
adc
mul
mov
and
mov
int
loopne
cmp
push
pop
or
mov
dec
outs
jmp
mov
push
enter
add
cmp
push
ret
adc
clc
in
in
es
test
cmp
add
cmp
inc
ds
pop
cmp
push
push
jb
inc
inc
mov
cmp
pop
imul
pop
out
inc
adc
jo
push
imul
and
jo
fstp
shl
add
cli
mov
dec
mov
inc
push
jl
sub
loopne
dec
loope
or
adc
cmp
cmp
ficomp
push
lock
imul
loopne
push
lea
push
push
loopne
xor
and
jb
xor
push
and
push
les
xchg
je
and
iret
mov
(bad)
ret
cmp
daa
sub
mov
and
xchg
and
adc
jecxz
cmp
dec
or
ins
mov
jle
mov
test
sbb
mov
cmp
dec
xor
xor
gs
loopne
and
pop
push
mov
aam
add
fbld
push
mov
adc
loop
or
mov
icebp
test
mov
pop
cmc
lods
mov
mov
cmp
jbe
push
push
pop
mov
mov
inc
cmp
push
lea
xor
push
adc
and
dec
mov
test
mov
xor
icebp
lock
inc
cmp
loope
dec
loop
pop
and
or
je
cmps
sub
or
mov
sub
sbb
and
mov
std
push
cmp
ss
fcom
jo
and
ret
mov
ret
int3
outs
cmp
mov
pop
add
push
in
frstor
or
mov
pop
push
xor
outs
in
fsub
jle
cmp
inc
loopne
mov
sub
and
xchg
inc
push
pop
or
or
adc
cmp
pcmpeqw
xor
push
sub
pusha
inc
add
add
push
or
inc
cs
ins
cld
pop
mov
add
xor
sbb
and
outs
fs
gs
jg
jbe
jbe
or
jb
jns
es
imul
bound
inc
push
outs
arpl
mov
gs
jne
je
dec
outs
je
imul
mov
pop
sti
ja
jbe
ds
outs
inc
arpl
or
pop
fistp
jle
inc
xor
xor
cmp
inc
outs
ins
bound
outs
js
imul
ja
nop
je
cmp
mov
push
dec
ja
dec
inc
xor
je
cld
sbb
add
js
cmp
cmp
fs
cmp
pusha
pop
pop
push
xor
pushf
pushf
mov
dec
inc
adc
leave
test
cwde
test
fcmovu
adc
or
sbb
inc
jp
clc
loope
xchg
inc
pusha
or
nop
jb
cmp
cmp
xor
jb
jb
and
sbb
jb
jb
adc
or
jb
jb
add
cld
xchg
xchg
xchg
xchg
xor
hlt
lock
xchg
xchg
xchg
in
call
xchg
xchg
(bad)
aam
nop
xchg
xchg
xchg
int3
enter
cmp
mov
xchg
xchg
xchg
or
xchg
mov
xchg
xchg
xchg
nop
mov
xchg
cmp
cmp
cmp
push
cmp
pop
xchg
xchg
xchg
xchg
push
push
dec
dec
xchg
xchg
xchg
xchg
inc
inc
cmp
xchg
xchg
xchg
xchg
xor
sub
xchg
xchg
xchg
xchg
and
sbb
xchg
xchg
xchg
xchg
adc
or
leave
enter
add
xor
leave
leave
leave
leave
hlt
lock
call
in
(bad)
leave
leave
leave
leave
aam
int3
enter
leave
(bad)
sar
mov
test
leave
leave
leave
movs
mov
leave
leave
xchg
nop
mov
test
xor
in
inc
xor
jb
xor
sub
jb
jb
and
sbb
jb
jb
adc
or
sbb
jb
add
xor
cmp
cmp
hlt
lock
call
in
(bad)
cmp
cmp
aam
int3
enter
cmp
sar
mov
test
cmp
cmp
cmp
xchg
nop
mov
test
cmp
je
ins
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
xchg
mov
pushf
pushf
nop
mov
pushf
cmp
pushf
pushf
pushf
jo
push
pushf
pusha
pop
pop
push
pushf
pushf
pushf
pushf
push
dec
dec
inc
pushf
pushf
pushf
pushf
inc
cmp
xor
pushf
pushf
pushf
xor
and
pushf
pushf
pushf
and
adc
pushf
pushf
pushf
adc
add
inc
sahf
pushf
add
ss
hlt
dec
dec
dec
dec
lock
call
dec
loopne
fcom
pushf
fmul
ror
mov
pushf
pushf
sar
mov
test
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
nop
mov
test
cmp
nop
xchg
je
ins
push
fs
pop
pop
cmp
cmp
push
push
dec
dec
cmp
cmp
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
mov
cmp
cld
xor
pushf
hlt
lock
call
in
(bad)
pushf
pushf
pushf
pushf
aam
int3
enter
pushf
(bad)
sar
mov
test
pushf
pushf
pushf
movs
mov
pushf
pushf
xchg
nop
mov
test
pushf
pushf
je
ins
push
fs
pop
pop
mov
push
dec
movzx
loop
inc
shl
or
adc
loopne
sbb
fwait
mov
dec
imul
lods
nop
div
mov
or
and
fnsave
push
or
xor
add
cmp
sub
fcomp
iret
jmp
cmp
not
movsx
mov
mov
add
mov
push
mov
mov
jo
or
add
sub
outs
mov
add
pop
pusha
imul
inc
jl
out
xor
icebp
or
adc
cmp
repz
and
fs
mov
xchg
push
imul
dec
jl
inc
mov
repz
jns
or
dec
dec
lods
stos
stos
and
push
and
adc
jge
xchg
jl
les
test
ret
push
popa
sbb
pusha
push
push
push
add
pop
stos
sbb
scas
add
add
push
gs
adc
call
and
stos
aas
inc
pop
or
outs
ret
xchg
(bad)
pop
fst
add
gs
cwde
scas
inc
fnstsw
dec
push
push
dec
inc
inc
dec
add
outs
dec
pop
push
icebp
sti
fcmove
and
dec
push
inc
push
dec
pop
and
fistp
pop
ror
push
pop
sub
push
inc
dec
pop
dec
dec
dec
inc
push
jns
mov
das
iret
adc
enter
js
ror
psllw
jb
jb
repz
cmc
div
jb
idiv
stc
cli
jb
jb
sti
cld
std
(bad)
jb
jb
jmp
loope
jb
jb
jecxz
in
jb
jb
out
jmp
jb
in
in
out
jb
jb
out
rcl
shl
jb
rcl
aad
jb
jb
xlat
fcomp
fidiv
jb
fcmovnu
fstp
jb
jb
ffreep
rol
jb
jb
(bad)
(bad)
jb
jb
enter
jb
jb
int3
int
jb
jb
iret
mov
mov
jb
jb
mov
mov
jb
jb
mov
jb
mov
jb
jb
mov
jb
mov
jb
jb
test
stos
jb
jb
stos
lods
lods
scas
xor
arpl
jmp
cmp
add
fs
mov
push
inc
imul
or
popa
dec
push
ss
push
loopne
out
pusha
cs
fadd
pop
mov
inc
fs
out
sbb
test
jg
arpl
jno
or
inc
js
gs
imul
je
dec
ds
nop
and
inc
bound
je
cwde
cmps
add
adc
mov
jo
nop
hlt
mov
xchg
cmp
hlt
dec
or
dec
gs
push
push
push
xor
adc
or
outs
nop
mov
jle
inc
jb
mov
scas
test
sbb
jb
jbe
or
add
scas
ds
pop
xor
mov
pusha
or
pop
dec
inc
sbb
scas
mov
adc
or
imul
or
inc
repnz
nop
adc
inc
jle
popa
outs
addr16
enter
dec
jbe
push
out
xor
ins
outs
ja
and
outs
shl
or
nop
sbb
dec
jle
push
test
fidiv
data16
imul
pop
test
xor
ins
jle
gs
scas
jo
inc
cs
(bad)
mov
and
pcmpeqd
inc
enter
outs
fs
jl
and
jo
pandn
push
xchg
mov
fadd
ds
invd
bndstx
inc
popa
jae
push
and
fidiv
mov
xchg
inc
inc
dec
shr
je
ds
adc
add
add
jae
push
adc
xchg
sbb
sbb
ds
cwde
push
push
jb
ins
in
mov
mov
jo
push
inc
xchg
arpl
mov
movs
mov
sbb
je
or
je
ins
inc
(bad)
cld
sub
outs
shr
or
pop
mov
pop
mov
mov
popa
fsub
jnp
outs
mov
adc
ror
xor
out
adc
mov
adc
cmp
push
out
mov
jo
or
adc
inc
push
stos
nop
mov
enter
sub
arpl
and
or
xor
das
xchg
clc
das
xor
mov
xchg
xchg
dec
sahf
sbb
sub
inc
push
andps
ins
push
push
gs
cmp
call
inc
or
(bad)
jb
jb
adc
sbb
sahf
out
and
mov
push
sar
aas
enter
mov
iret
mov
outs
dec
fbld
push
or
pop
or
fadd
mov
cmp
push
mov
fisubr
out
push
hlt
xchg
adc
push
push
pop
je
sbb
add
cmp
ins
(bad)
loope
in
fcomp
out
sbb
or
aam
aam
out
sahf
idiv
xchg
push
popf
imul
add
pushf
fist
jno
cmp
pop
lock
xor
mov
lea
xor
les
and
push
dec
and
xor
inc
imul
pusha
add
ss
mov
lods
outs
arpl
pusha
xchg
jmp
inc
ret
adc
repz
add
daa
ficom
mov
mov
test
and
push
aas
rol
jmp
inc
clc
test
pop
push
stos
jge
cmp
scas
je
push
fs
and
adc
adc
mov
rcr
and
sbb
aam
or
(bad)
das
pop
add
jne
stos
rcr
ja
aaa
aas
add
adc
push
inc
inc
pusha
or
inc
ja
movs
jns
inc
pop
add
sar
std
or
xchg
pop
mov
cmp
jbe
cmp
repz
in
xchg
mov
je
movzx
push
push
inc
call
mov
cmps
jne
jmp
inc
inc
ds
mov
add
in
sbb
cwde
mov
mov
(bad)
(bad)
out
and
sti
je
dec
jns
loopne
out
sub
pop
call
sbb
adc
xchg
pusha
or
jle
push
lahf
pop
cmp
ror
shl
test
or
inc
outs
push
call
mov
sar
adc
dec
xchg
sbb
data16
and
mov
add
sbb
xor
jg
cs
inc
retf
rcl
adc
imul
or
mov
cmc
add
repz
cmp
jbe
adc
or
pop
popf
pop
dec
sub
clc
push
sub
inc
add
cmp
(bad)
das
lahf
inc
pushf
dec
push
jl
(bad)
mov
cmp
ja
mov
pop
or
cmp
push
pop
inc
or
push
mov
mov
push
xor
mov
add
lock
outs
ss
add
stc
mov
fimul
push
xchg
div
mov
fsubr
mov
mov
mul
jne
jle
mov
sub
jne
sbb
add
and
(bad)
(bad)
mov
lahf
xor
jmp
or
push
dec
pop
pop
(bad)
enter
cmp
sti
sbb
mov
lahf
cwde
shl
(bad)
xchg
sub
add
jle
(bad)
outs
push
repz
adc
sbb
addr16
add
arpl
pop
xchg
mov
or
cmp
mov
loopne
mov
lock
ficomp
fld
cld
push
mov
mov
jl
push
mov
jmp
sub
adc
in
test
in
loopne
shl
mov
std
add
mov
dec
idiv
sub
std
jno
dec
cmp
sbb
(bad)
in
jae
sub
mov
sar
scas
rcl
xor
add
xor
add
shr
imul
or
lock
imul
sbb
jg
ss
sub
je
(bad)
jae
cmp
xor
hlt
push
xchg
mov
int
(bad)
rcr
call
(bad)
jae
inc
dec
jne
ror
leave
jne
jg
das
push
sar
fadd
dec
mov
ret
mov
or
xor
div
dec
mov
sub
pop
mov
mov
icebp
sub
jbe
add
mov
xor
(bad)
jmp
mov
dec
jne
push
sbb
inc
inc
inc
out
fstp
or
add
pop
data16
dec
scas
in
jmp
(bad)
shr
add
stc
faddp
(bad)
fwait
or
push
mov
sub
xor
push
mov
mov
pop
add
push
cs
repnz
jnp
pop
(bad)
xor
cmp
cmps
mov
ret
push
mov
and
dec
add
in
cmp
ins
xor
cmp
jmp
dec
jp
or
jl
adc
mov
kmovb
and
push
and
fistp
ret
loopne
sti
pop
or
add
sub
add
shr
push
mov
add
cmp
pop
jg
fistp
push
push
cmp
rcr
(bad)
jp
add
ret
fld
ffree
ffree
pop
std
or
js
add
or
sbb
xor
test
test
sub
mov
dec
mov
cmp
out
cmp
add
scas
ins
test
pop
sub
add
jns
push
xchg
movs
and
mov
push
data16
mov
and
push
and
inc
mov
mov
push
push
mov
enter
or
cmp
scas
or
lock
jnp
xchg
sbb
sub
mov
inc
lods
cmp
jp
xchg
out
fidiv
imul
fadd
inc
cmp
mov
fcomp
jg
or
cmp
mov
jecxz
pop
push
xchg
je
pop
rcl
mov
mov
lahf
cmps
pop
jae
js
push
loopne
mov
fcom
add
sub
push
mov
cmp
dec
mov
imul
out
ror
xchg
and
call
push
sbb
add
add
out
adc
jge
jo
mov
ffreep
inc
call
test
jl
inc
lea
sub
clc
push
cmp
ins
sub
add
push
sbb
dec
test
scas
iret
mov
or
jmp
lock
adc
ins
lock
adc
(bad)
ins
setne
jmp
xchg
aam
lods
std
mov
addr16
inc
mov
dec
enter
add
inc
push
jns
mov
dec
ja
xor
jnp
(bad)
fcomp
bound
test
scas
sbb
in
loop
jecxz
adc
(bad)
and
jmp
and
loopne
mov
mov
scas
xor
(bad)
clc
or
sub
add
inc
ja
mov
and
ja
outs
add
test
sub
or
push
push
mov
retf
dec
xor
mov
js
ret
add
jae
push
mov
ins
dec
dec
or
xor
push
or
add
mov
sbb
arpl
(bad)
push
mov
mov
pop
ins
lods
ror
xor
add
mov
pusha
das
iret
cmc
inc
je
(bad)
sar
fadd
popf
sub
data16
test
out
mov
cmp
xor
js
cmp
dec
cmp
es
enter
stc
loopne
call
inc
cld
jmp
fstp
cmps
mov
iret
popa
sub
cmp
mov
push
jle
and
sbb
stc
inc
add
(bad)
add
and
loopne
inc
sub
and
push
sub
or
or
push
inc
mov
jecxz
and
daa
push
not
and
mov
aad
dec
push
mov
push
jge
jg
mov
mov
loopne
mov
or
or
pop
fmul
cmp
ds
(bad)
sbb
inc
add
push
cmps
pop
les
mov
mov
rol
cmp
je
mov
adc
lea
dec
or
and
fiadd
cli
sub
sbb
std
pop
loop
in
popf
jne
dec
mov
jg
scas
cli
pushf
xor
pop
clc
sar
in
and
xchg
enter
push
pop
cmp
fadd
mov
mov
(bad)
bound
int3
pop
pop
inc
cwde
mov
retf
dec
cmp
mov
xchg
call
dec
sbb
hlt
dec
mov
add
(bad)
in
pop
cmp
sbb
sbb
adc
aaa
inc
cs
movs
or
inc
and
clc
mov
sub
aaa
push
outs
rol
scas
call
and
pop
jge
cmps
push
hlt
clc
cld
push
jnp
pop
cld
test
clc
xchg
inc
call
call
mov
leave
mov
or
xor
lahf
(bad)
jb
adc
mov
movs
cmc
ret
nop
fadd
mov
xor
imul
(bad)
mov
mov
ret
das
lea
or
mov
xor
xchg
dec
add
push
aas
not
mov
pop
retf
xchg
add
push
pusha
rcr
lods
xor
pop
ret
or
retf
dec
jg
pop
and
add
retf
pop
cli
mov
stos
add
pop
inc
jp
jecxz
lahf
inc
addr16
aas
imul
xchg
ss
add
push
ds
xlat
mov
jnp
jg
xor
xor
repz
mov
mov
out
add
and
sti
jl
sbb
cli
add
jmp
je
dec
mov
mov
add
xor
ror
mov
xchg
jl
pop
pop
jmp
aam
mov
inc
outs
shl
scas
and
je
movs
inc
inc
fsub
shl
jb
inc
dec
je
in
(bad)
sub
fistp
sub
jbe
sbb
and
inc
(bad)
lods
mov
mov
push
add
mov
jne
jo
or
pop
ins
cmp
mov
mov
test
xchg
xrelease
test
loope
frstor
in
or
mov
pop
dec
and
loop
inc
mov
adc
xchg
mov
scas
sub
ja
push
stos
xor
ds
fcompp
lock
aad
mov
pop
jbe
mov
jnp
cmp
sahf
std
cdq
sub
mov
mov
mov
mov
push
mov
mov
sub
adc
sbb
mov
cmp
sbb
cli
mov
call
pop
cmps
lahf
daa
inc
push
or
xlat
xchg
push
mov
(bad)
dec
sub
lahf
mov
jle
(bad)
add
jge
js
xchg
jbe
hlt
mov
or
into
or
jne
fisubr
or
xchg
aaa
sub
inc
mov
dec
jmp
enter
cmp
mov
dec
call
loope
mov
ins
cmp
sub
sub
mov
push
mov
outs
jae
cli
pop
push
push
cmc
imul
call
sub
jae
xchg
rcl
outs
movs
xchg
pop
mov
rep
sbb
cmp
push
mov
imul
mov
les
mov
sub
(bad)
jg
push
xor
cmp
ja
imul
mov
(bad)
loopne
add
and
in
dec
xchg
or
mov
jg
(bad)
or
fsub
sbb
je
int3
dec
sar
ret
and
mov
cmc
cmp
dec
push
pop
pop
jne
lea
mov
call
jnp
ret
and
imul
repz
cmp
ja
das
pop
xor
pop
mov
daa
aaa
push
xor
pop
sbb
xchg
sub
sbb
dec
lea
and
xchg
sub
je
rcr
xor
into
in
rcr
push
shr
push
in
xor
pop
outs
adc
lock
and
call
xchg
cmp
imul
jne
ret
(bad)
stc
sbb
add
mov
aad
push
jne
fisttp
lock
xor
inc
inc
in
js
sbb
mov
mov
mov
out
jne
aas
and
sti
add
js
mov
add
clc
mov
or
ja
or
jmp
jecxz
mov
mov
add
push
push
cmp
ror
mov
out
bound
outs
repz
sub
aas
mov
or
je
mov
jg
fstp
adc
dec
jl
mov
mov
jo
pop
cmp
jbe
dec
ss
cmp
mov
adc
and
mov
adc
setge
loopne
mov
inc
iret
dec
fwait
sbb
or
xchg
ret
xor
and
jb
lahf
ds
add
xor
add
cmc
movs
xchg
scas
test
xor
scas
cld
nop
shl
pop
(bad)
pop
xor
mov
nop
dec
leave
mov
icebp
mov
dec
ins
test
jg
dec
mov
xchg
fisubr
push
dec
xchg
fadd
outs
lea
ret
int
push
jnp
inc
jge
(bad)
mov
clc
dec
cld
lea
mov
add
out
or
push
inc
mov
jl
jmp
add
add
shl
cdq
adc
lea
pop
inc
add
push
lea
das
adc
xchg
iret
mov
mov
push
add
rcl
inc
aam
jge
cld
mov
lea
ins
ret
cmp
jecxz
rcr
ja
mov
and
lahf
xchg
sbb
add
test
test
rol
out
(bad)
pop
jmp
lock
or
jmp
std
cmps
add
adc
and
dec
jne
in
ret
push
cmp
stos
mov
cld
jecxz
pop
cld
test
jmp
adc
aam
xchg
and
inc
fistp
or
shl
ficom
pusha
repnz
mov
xor
push
stos
movs
fld
push
mov
or
in
stos
loop
jmp
mov
add
mov
and
cmp
fcom
pusha
ficomp
add
xor
lock
pop
add
and
mov
add
and
jo
fisttp
xchg
or
stos
cmps
int3
ds
repz
add
jp
test
mov
shr
aaa
mov
xlat
add
leave
repz
fwait
stc
push
or
or
inc
pushf
lea
mov
jns
dec
push
jo
(bad)
in
push
in
inc
cmp
jp
jo
xchg
xchg
mov
jmp
jmp
pop
loopne
sub
ins
lock
cmp
cmp
or
sbb
sub
mov
sub
inc
mov
mov
push
js
pushf
iret
or
or
xchg
push
and
cmp
(bad)
rol
aaa
cwde
mov
cmp
aas
loopne
ds
in
push
jecxz
add
dec
pop
dec
inc
push
add
add
cmp
movaps
loopne
or
mov
add
lds
nop
xchg
xchg
lock
push
cdq
fadd
push
mov
push
sbb
or
xchg
dec
repnz
aas
mov
add
inc
pushf
sahf
lods
cmp
fistp
xchg
inc
inc
pushf
add
dec
mov
ins
cdq
dec
xchg
inc
leave
xchg
retf
aam
inc
inc
jl
push
pusha
neg
stos
or
fs
add
(bad)
fucomip
jge
mov
neg
jmp
or
je
mov
stos
xchg
push
mov
outs
add
cmp
adc
lock
add
jmp
cmp
jne
pop
pop
xor
push
in
cld
std
lds
sti
mov
sub
push
clc
in
mov
repnz
popf
adc
mov
jge
das
dec
loope
test
fisttp
cmps
xchg
daa
call
add
pusha
jle
enter
clc
push
adc
je
sbb
pop
(bad)
cmps
mov
pushf
sbb
repnz
aad
ror
sub
jb
add
mov
ja
movsx
jge
(bad)
jo
mov
add
lea
mov
sbb
call
sar
cmp
leave
jnp
ds
jmp
mov
or
dec
dec
inc
dec
inc
dec
lods
or
(bad)
mov
jo
ret
std
ret
mov
aam
dec
or
sbb
sbb
in
movs
ficomp
dec
stos
ss
call
fnsave
stos
neg
sbb
stos
jmp
add
clc
mov
adc
pop
pop
inc
clc
dec
ja
adc
jmp
mov
adc
je
sahf
dec
sbb
sub
(bad)
add
leave
mov
mov
mov
ja
mov
call
add
mov
jmp
aaa
jge
sbb
scas
je
mov
dec
fdivp
xrelease
adc
(bad)
inc
test
jne
sbb
ins
ins
pusha
pop
in
stos
xor
call
out
mov
or
je
inc
jne
pop
jge
push
xchg
repnz
or
sar
cmp
push
lea
add
inc
je
push
push
cmp
(bad)
lock
adc
sbb
popf
jbe
lock
movs
mov
fadd
push
mov
test
fisub
and
inc
add
and
fcmovnu
sahf
out
and
adc
and
sub
inc
sub
jne
into
mov
sub
sbb
and
out
mov
sub
or
iret
mov
xor
sub
xor
out
sbb
xor
add
call
xor
add
movs
lods
xor
scas
retf
and
enter
inc
ds
xchg
or
repz
sbb
aam
leave
xor
pop
mov
push
xchg
or
mov
sahf
repz
or
scas
sub
mov
scas
or
pop
and
sahf
repz
add
and
sahf
jmp
popa
mov
dec
lahf
xchg
loopne
sbb
adc
mov
scas
add
test
mov
xchg
mov
adc
xor
ret
movs
cmp
test
xchg
adc
jl
cmp
inc
xor
inc
inc
add
adc
push
clc
fld
je
imul
inc
lods
clc
clc
adc
test
fldenv
sar
div
fld
fstsw
fwait
mov
test
je
fidiv
loop
pop
fbstp
lea
mov
inc
sub
mov
shr
and
fdiv
popf
jecxz
aas
sub
xor
stos
mov
add
jns
call
cmp
pushf
or
cmp
jb
mov
mov
or
ja
jmp
ja
mov
leave
jmp
mov
fimul
jo
je
not
cmp
jmp
clc
push
add
inc
out
or
int
fs
adc
push
ror
mov
add
pop
fs
add
or
or
mov
jl
push
inc
sub
mov
loopne
jae
dec
add
xchg
rol
mov
fild
cli
mov
mov
or
mov
pop
mov
xchg
data16
xchg
push
push
sub
mov
and
jne
dec
sub
and
mov
add
aas
and
(bad)
pop
in
or
jmp
enter
cmp
or
add
pop
jmp
mov
mov
iret
inc
shl
ret
push
push
mov
inc
ret
f2xm1
fwait
mov
icebp
push
fldz
cmps
mov
jmp
lods
or
sub
mov
daa
mov
cmp
or
mov
mov
icebp
je
and
fistp
sub
cld
jmp
rcr
ret
jne
mov
sahf
shl
add
push
test
fchs
xor
add
aas
jmp
fstp
dec
pop
mov
or
mov
sub
test
ins
and
push
and
js
scas
mov
test
or
fimul
inc
adc
add
jmp
aaa
mov
idiv
adc
or
push
inc
imul
mov
cmp
aaa
add
shl
sub
daa
jb
loope
push
inc
sub
movs
shl
retf
movs
out
rol
call
aam
xor
cmps
dec
shl
loope
daa
test
push
ror
add
ss
pop
cli
gs
imul
lock
aad
inc
push
imul
add
adc
dec
in
add
add
lock
mov
cld
imul
cdq
or
adc
idiv
(bad)
inc
mov
push
or
cmp
test
fstp
fwait
mov
push
in
out
push
(bad)
xlat
dec
sub
xor
loop
pop
xor
fucom
inc
test
xchg
scas
xor
adc
mov
xor
fist
push
adc
imul
adc
or
dec
repz
sbb
or
cmp
inc
stc
inc
mov
dec
or
jae
mov
imul
imul
adc
shr
add
lods
add
(bad)
or
mov
xchg
lock
xor
fstp
fstcw
call
movs
dec
(bad)
xor
mov
mov
xchg
iret
scas
cmps
int3
test
lea
mov
outs
jle
cmp
jne
add
dec
jnp
popf
loopne
add
(bad)
mov
push
sub
retf
sbb
add
(bad)
and
call
loopne
sbb
enter
add
and
fldenv
mov
(bad)
neg
adc
mov
or
xchg
cli
aam
scas
in
add
mov
std
add
push
dec
jmp
xor
in
mov
int
xchg
inc
jb
(bad)
ja
and
dec
sti
ins
push
jb
or
jb
sti
ins
cli
(bad)
cmp
lods
test
out
push
xchg
or
mov
inc
jne
sub
dec
mov
aas
cmp
cdq
idiv
imul
add
push
lea
repnz
ds
ds
add
popa
icebp
bound
ret
or
xor
inc
inc
std
std
lds
mov
dec
ret
mov
dec
mov
dec
push
test
and
dec
in
test
jg
mov
int3
push
clc
stos
loopne
xchg
hlt
or
movs
pop
stos
dec
push
adc
pop
sahf
pop
inc
test
sti
das
and
cmp
jl
add
addr16
loop
and
pusha
inc
mov
jne
dec
xlat
shl
xor
sub
imul
fcom
mov
mov
jmp
fcmovbe
cli
shl
cmp
sub
ret
adc
mov
outs
ret
pop
adc
js
mov
adc
pusha
loop
cmp
jb
adc
sub
fistp
xor
sbb
mov
xor
ret
xchg
push
pusha
pop
jbe
pushf
inc
js
cmp
loope
ret
ss
clc
(bad)
mov
addr16
xchg
inc
shl
cmp
popa
jo
adc
push
cmp
scas
sbb
push
pop
adc
cmp
sbb
movs
or
sbb
xchg
mov
push
or
add
mov
(bad)
pop
sbb
call
movs
adc
pop
add
xchg
push
cmp
add
adc
shr
push
jbe
clc
xchg
and
push
cmp
dec
add
cwde
xor
push
rol
daa
mov
mov
stos
cmp
xchg
inc
inc
pop
push
imul
(bad)
enter
sub
or
or
dec
push
and
mov
mov
push
or
cs
ret
rcr
and
rol
rcl
push
adc
mov
mov
leave
and
sub
out
push
fadd
out
and
sub
in
jle
push
add
push
lea
or
xchg
repnz
fild
in
add
jecxz
in
ins
or
push
jge
call
jmp
sub
inc
shl
je
or
cdq
test
cwde
adc
in
out
repnz
mov
test
push
popa
or
mov
pop
or
mov
mov
cmps
pop
dec
jns
inc
out
outs
pop
test
je
or
popa
sti
xor
inc
aad
mov
sbb
pop
cmp
sub
mov
aam
push
aas
jb
add
pushf
adc
xor
dec
adc
dec
cmp
sbb
ret
ret
xor
or
lock
push
and
xchg
in
adc
cmp
jmp
push
repnz
pop
iret
in
ret
(bad)
mov
dec
jg
int
jbe
mov
mov
mov
je
jecxz
push
inc
cmp
xchg
lock
push
or
xchg
inc
test
mov
out
jns
add
add
push
lahf
out
sbb
mov
inc
stos
sub
add
jnp
(bad)
or
cmp
sub
(bad)
add
sub
int
pop
cmp
xor
fs
(bad)
loop
mov
pop
push
outs
ins
cdq
lock
bt
and
mov
loop
jnp
mov
cmp
hlt
repnz
jns
les
lahf
dec
out
(bad)
call
iret
cmc
dec
cmp
jne
mov
xor
xchg
fiadd
cmp
xchg
inc
and
adc
test
int3
cmp
push
inc
pop
jns
or
or
or
jbe
jbe
push
pop
add
or
or
ds
neg
or
push
fadd
mov
pop
ret
inc
jae
jns
out
(bad)
shr
xchg
mov
call
pop
cmp
and
xor
adc
mov
cdq
stos
pushf
pop
std
adc
ins
inc
mov
dec
push
in
dec
push
lea
and
pop
jl
lods
hlt
dec
js
cmp
hlt
dec
or
jp
mov
lock
add
sbb
mov
xor
or
ins
mov
or
dec
add
jmp
out
aad
add
jo
push
mov
mov
daa
(bad)
js
mov
not
daa
scas
cld
jp
sub
nop
and
iret
gs
loope
cwde
xor
adc
pop
aam
add
jl
push
add
adc
fild
or
push
jmp
sub
je
jmp
jmp
cmp
dec
mov
sub
mov
(bad)
sub
jmp
pushf
add
jle
push
adc
loope
or
add
loope
test
push
xchg
mov
mov
jmp
outs
dec
push
mov
jmp
or
ss
or
jle
cmp
out
sahf
or
jo
adc
fcomip
bound
ss
inc
call
xchg
push
add
rol
and
or
add
in
sbb
movs
push
mov
push
jne
(bad)
call
pop
cmp
mov
add
(bad)
mov
jns
add
xchg
or
ja
jnp
movd
adc
cwde
inc
jmp
and
in
nop
add
outs
cmc
inc
dec
gs
lea
add
leave
sti
mov
push
pop
out
ret
cmp
adc
loopne
sahf
rcl
imul
mov
fld
sbb
cmp
pop
pusha
pop
push
imul
mov
popa
sbb
push
div
test
or
add
add
add
jl
aam
mov
sub
test
mov
adc
sbb
clc
inc
mov
mov
pop
mov
fdivr
dec
add
xlat
inc
dec
das
push
dec
popf
mov
push
adc
xor
ins
mov
and
sub
inc
ret
jne
xor
jp
or
add
call
sub
outs
adc
mov
pop
icebp
xor
test
out
das
movs
xor
daa
and
daa
dec
dec
mov
add
inc
mov
mov
adc
movs
xchg
pop
sub
push
not
mov
loop
ficomp
mov
(bad)
and
xchg
aas
rcl
mov
adc
add
nop
push
shr
fwait
test
inc
jmp
(bad)
ss
movups
sub
jae
jmp
int
ret
xchg
add
popf
adc
sbb
fadd
pop
and
xor
js
adc
or
and
mov
enter
fdiv
cli
cmp
xor
or
sbb
in
fcomp
rol
in
or
add
mov
xor
daa
mov
jo
xchg
cmp
fwait
pop
mov
add
push
(bad)
cmp
jne
inc
sub
pop
jmp
test
jmp
sub
je
dec
je
out
jg
test
sub
je
jmp
mov
jmp
push
push
jnp
dec
fs
scas
jbe
push
inc
mov
jle
fadd
(bad)
mov
mov
add
xchg
adc
mov
std
(bad)
cmp
add
test
rol
mov
xchg
call
scas
(bad)
into
mov
mov
dec
jb
pop
lock
lock
or
in
ss
je
jne
xchg
adc
sbb
cmc
aas
shl
jne
cmp
jg
mov
and
xlat
cdq
xor
shr
sbb
sub
add
mov
shl
(bad)
scas
cmp
jle
adc
pop
lods
push
outs
mov
rcr
dec
cld
gs
psubusb
or
fdiv
icebp
outs
mov
inc
int
cmp
mov
sbb
inc
out
mov
add
loopne
and
cmp
push
and
fdivr
xor
or
and
mov
dec
cmc
call
fsubr
shr
sub
mov
ja
sbb
mov
sbb
into
loope
or
push
hlt
fucomi
add
lods
mov
xor
cmp
mov
jb
dec
jmp
into
add
lock
mov
sub
jb
and
cmp
push
push
mov
lock
in
call
rcr
ss
imul
adc
xchg
or
jo
jge
push
inc
icebp
call
xchg
loopne
push
pop
xor
(bad)
push
fstp
out
or
xlat
fmul
lock
add
ins
neg
inc
and
fs
jne
mov
add
or
ds
bound
add
sub
or
mov
dec
jmp
aaa
push
ret
fwait
in
add
bound
mov
jmp
fcmovu
int
or
sar
jbe
bound
xchg
mov
(bad)
das
fiadd
movs
imul
xor
mov
das
xor
shl
push
out
dec
xchg
adc
or
rol
jno
cwde
or
aam
fst
add
mov
repnz
fild
add
fnstsw
add
and
push
iret
inc
and
add
xchg
out
(bad)
jmp
push
pushf
pop
sbb
mov
add
js
lds
inc
inc
fwait
xchg
mov
call
or
enter
or
xor
push
enter
pop
inc
fs
or
(bad)
add
sbb
test
test
xor
mov
std
ss
(bad)
ja
jne
sbb
cmp
sbb
cmps
shr
inc
add
adc
mov
fsubr
(bad)
mov
xor
bound
push
push
inc
add
dec
sbb
and
sub
xchg
cmp
or
or
mov
push
into
call
add
fisub
in
jecxz
add
(bad)
sbb
int
push
cmp
ret
jne
jg
or
mov
cmp
sbb
mov
sbb
fwait
jmp
fld1
mov
sbb
aam
icebp
loopne
out
(bad)
int
push
xor
lods
mov
push
jae
(bad)
jnp
scas
pusha
mov
push
add
sub
jb
gs
fmul
or
xchg
dec
xor
mov
int
rcr
mov
mov
mov
sub
in
dec
cmp
sbb
inc
cdq
mov
outs
adc
cmp
fist
pop
or
push
mov
call
push
adc
leave
movs
rcr
mov
pop
add
lea
jns
loope
xor
push
add
arpl
sub
mov
push
push
mov
mov
push
call
inc
inc
dec
push
rcl
mov
lods
call
mov
mov
inc
out
pop
push
xchg
sub
or
out
dec
inc
mov
cmps
inc
call
lock
xor
add
add
loope
dec
fsub
call
call
or
aas
push
and
hlt
ds
adc
mul
add
xchg
adc
jne
push
rol
sti
dec
mov
xchg
cmp
xchg
mov
lea
shl
ret
imul
scas
mov
lods
movs
sbb
pop
lea
lea
inc
sub
call
movs
pushf
movs
mov
mov
xor
test
or
in
push
jbe
je
mov
fadd
into
es
setne
nop
xchg
inc
outs
jge
aam
retf
xchg
sub
inc
ins
jno
(bad)
xor
xor
fld
mov
enter
push
enter
in
or
xchg
and
pop
fwait
loopne
and
mov
inc
not
and
in
std
add
sbb
rol
sub
mov
sbb
mov
adc
add
xchg
sbb
and
aad
outs
enter
xor
mov
lock
cmp
mov
add
or
cs
and
jb
lock
fwait
or
repz
pop
or
and
sbb
mov
jmp
push
sbb
jge
enter
js
add
sbb
jle
(bad)
iret
cs
mov
dec
adc
cld
cmp
jge
inc
cmp
pop
lock
add
test
sbb
or
push
inc
frstor
or
add
or
jmp
mov
sub
add
xor
cwde
xor
pop
je
jne
xor
and
cmp
jmp
in
in
xchg
js
js
mov
cmp
(bad)
in
dec
dec
fs
xor
push
add
sbb
stos
loopne
fstp
add
sub
and
loope
cmps
jno
sub
rcr
test
cmp
fisub
ss
mov
(bad)
adc
cmp
add
out
test
stc
loopne
cmp
and
lea
rol
xchg
fmul
test
jmp
sub
test
dec
mov
dec
add
rol
repz
mov
fcomp
and
jmp
mov
or
sub
and
or
daa
fsubr
xor
pop
add
cs
push
sub
(bad)
pusha
loopne
adc
or
loopne
or
lea
jmp
sub
pop
sbb
lods
add
jae
pop
and
mov
xor
std
mov
add
les
mov
stc
push
lea
ja
adc
loopne
push
jae
cmps
loop
add
push
or
ror
push
mov
xor
mov
xlat
pop
mov
in
sub
pop
push
inc
sub
sub
jne
gs
stos
or
push
repnz
ins
mov
mov
sbb
movs
fld
ss
adc
xchg
push
adc
xor
call
pop
pop
mov
imul
add
leave
movs
in
cmps
dec
sar
or
or
xchg
mov
mov
cs
(bad)
inc
xchg
loope
pop
pusha
rcl
or
dec
pop
dec
or
retf
sar
xchg
enter
jmp
sti
or
sub
movs
push
push
ja
scas
or
xor
js
push
sub
adc
add
cmp
adc
or
dec
sbb
or
xchg
inc
sar
cmp
sub
mov
sbb
push
jge
inc
or
je
mov
rdpmc
fcmovne
pusha
fdivr
cmp
jg
cmp
jle
jecxz
sbb
add
or
jmp
jmp
(bad)
cld
push
loop
in
bound
retf
jo
pop
lods
add
fs
xor
ja
sub
rol
push
(bad)
out
rcl
retf
adc
jmp
popf
cs
push
cwde
push
push
outs
test
sbb
xchg
in
loopne
pushf
(bad)
or
(bad)
fidiv
retf
adc
jl
mov
or
or
cmp
loop
or
popa
test
xchg
call
bound
mov
or
jge
jns
pop
xor
scas
in
push
loopne
pushf
fild
loopne
or
add
js
cmp
fucom
add
or
and
dec
ins
add
xor
add
(bad)
int3
pushf
lea
rol
dec
scas
sbb
jns
mov
ins
mov
add
daa
pop
and
push
xchg
pop
in
cmp
je
jmp
xor
inc
aas
xchg
sub
das
and
imul
add
push
pop
call
or
push
cmp
dec
mov
mov
pop
int
and
scas
mov
pop
jecxz
(bad)
pop
xchg
fild
cld
bswap
adc
sub
push
jae
cmp
inc
or
popf
sub
mov
add
cmc
test
add
add
dec
loope
xchg
fist
pop
cld
or
and
les
in
icebp
or
enter
shl
aam
sub
lods
mov
out
rol
inc
xchg
pop
sub
cwde
mov
mov
in
xchg
add
leave
and
jmp
or
cli
adc
dec
mov
aad
jp
scas
loopne
std
fild
loopne
rol
or
jae
push
mov
sti
enter
adc
xor
shl
(bad)
hlt
add
aad
or
mov
push
add
loop
pop
adc
push
jp
push
add
mov
xchg
hlt
sbb
repnz
or
(bad)
test
enter
mov
xor
cwde
mov
mov
jnp
ss
xlat
shl
test
mov
inc
in
hlt
(bad)
outs
jle
mov
fimul
mov
jge
and
jo
icebp
fimul
mov
adc
xchg
xchg
jbe
lods
pop
inc
cwde
cwde
add
xchg
aaa
ja
and
inc
sub
movs
in
adc
xchg
inc
in
fisub
push
xchg
xchg
aaa
sbb
xor
mov
int3
add
rcl
or
in
or
das
add
addr16
sub
jmp
or
jle
mov
mov
and
int3
mov
arpl
pcmpeqw
cmp
mov
fucomip
clc
jne
test
std
fcmovnb
movs
or
adc
add
ret
in
jne
and
fsubr
jae
inc
xchg
xchg
sbb
xchg
xchg
mov
jnp
xchg
(bad)
mov
pop
xor
jmp
cmps
inc
mov
(bad)
jecxz
retf
fist
xor
jecxz
cmp
push
call
shl
pusha
add
add
dec
or
test
mov
or
and
mov
xchg
in
iret
sub
and
jns
dec
or
inc
or
mov
fiadd
xchg
(bad)
out
xchg
add
loope
std
ss
sti
je
lds
outs
std
test
dec
inc
xor
cmp
daa
lods
mov
add
shl
ins
fbstp
cmp
push
mov
dec
call
mul
cmps
inc
pop
jg
mov
scas
das
push
clc
aaa
mov
and
push
add
and
pop
adc
xor
mov
inc
inc
inc
jge
shr
jp
push
push
cmp
mov
and
dec
int3
rcr
mov
pop
hlt
jge
(bad)
ins
push
scas
jl
jne
sbb
fidiv
sbb
sbb
push
adc
aam
sub
cmp
aam
pop
aaa
fild
push
cli
add
aam
dec
cmp
add
mov
lock
add
in
mov
dec
jmp
imul
pop
mov
jns
fisub
sub
sub
jmp
pop
cmp
mov
add
das
pop
and
loope
dec
xor
mov
and
imul
pop
fs
adc
and
xor
test
fimul
loope
sub
stc
ja
pop
or
and
or
jne
ja
xor
add
jb
sub
inc
dec
test
sub
je
cs
outs
add
mov
jmp
pop
pop
test
dec
jmp
mov
lds
add
mov
sub
inc
mov
imul
mov
jle
test
mov
cmp
test
shl
repz
adc
push
test
or
shr
mov
scas
mov
or
push
push
daa
clc
sub
dec
fisub
retf
inc
inc
add
sub
mov
adc
sub
cmp
jbe
stos
push
add
xchg
mov
inc
and
add
popa
pop
mov
repnz
rcr
rcl
add
into
stos
or
add
and
inc
fiadd
inc
(bad)
jne
xchg
jl
and
hlt
aam
stc
test
and
add
loope
pop
add
xchg
mov
sbb
cmps
mov
or
jge
in
test
adc
push
rcr
ins
fwait
(bad)
mov
aaa
push
mov
sub
jb
fisubr
ja
inc
mov
mov
stos
(bad)
sbb
retf
jne
sti
xchg
and
fsub
imul
call
ja
enter
scas
je
lds
push
xchg
mov
in
or
inc
add
repnz
jns
gs
jecxz
loopne
dec
data16
enter
(bad)
sub
bound
mov
or
arpl
mov
sub
jge
jne
pop
(bad)
fld
adc
sub
retf
or
sub
mov
push
out
loopne
mov
jbe
jbe
sub
repnz
inc
outs
sbb
popa
mov
cmp
mov
inc
inc
cmp
outs
or
jnp
and
jbe
jae
imul
loopne
cmp
xchg
ror
(bad)
in
ss
dec
jne
jmp
push
arpl
call
sub
or
xor
jp
mov
add
out
leave
dec
loopne
and
stc
push
add
xor
ja
dec
add
push
jbe
les
pushf
xchg
aad
jecxz
lock
sub
or
push
lock
pop
pop
mov
inc
movs
cdq
add
pop
mov
or
call
lahf
inc
test
call
stc
cs
xchg
in
in
nop
add
mov
mov
mov
aaa
cmove
(bad)
mov
mov
pop
int3
and
enter
fcomp
mov
push
mov
xchg
sar
sub
in
sar
inc
lock
nop
sub
mov
jmp
or
enter
fs
in
or
and
jb
jl
and
enter
aas
ret
adc
add
xchg
pop
hlt
mov
and
pop
sbb
xchg
data16
push
add
lds
lds
outs
cmp
lock
je
or
add
sbb
in
mov
icebp
mov
push
ins
das
fs
loopne
pop
add
scas
ins
add
fs
cdq
mov
and
popa
ins
pop
jo
lock
aaa
xchg
push
sahf
mov
addr16
pop
iret
cmps
push
call
int3
pop
adc
jae
out
test
(bad)
push
sti
sti
lock
push
mov
xor
bound
addr16
jmp
ret
inc
dec
rol
lea
stc
adc
mov
sbb
icebp
mov
pop
push
dec
dec
out
and
jmp
pop
or
jmp
inc
add
dec
fistp
and
jb
or
test
xor
ins
xor
xlat
int3
push
push
sbb
dec
ror
pusha
adc
cwde
fimul
push
icebp
ds
inc
push
and
icebp
(bad)
xchg
add
ins
icebp
adc
adc
repnz
push
and
adc
mov
rol
movs
xor
push
inc
outs
pop
mov
cmp
popf
push
mov
hlt
imul
mul
or
pop
fadd
xchg
mov
push
lea
jmp
shl
xlat
adc
daa
mov
ds
xor
cmps
pop
add
clc
pop
xlat
daa
stos
push
mov
jge
ss
sbb
inc
adc
ret
in
dec
popa
daa
jno
inc
mov
test
push
cmp
ror
adc
mov
clc
jns
ror
test
(bad)
repnz
and
test
push
xlat
in
pop
or
ret
sub
shr
dec
push
mov
js
cld
pop
in
mov
add
add
jle
or
mov
push
add
ins
adc
dec
fadd
sub
sbb
mov
ret
adc
movs
inc
jg
in
ins
sub
or
out
in
loop
push
mov
sbb
adc
jmp
clc
mov
imul
pop
mov
loope
clc
adc
in
push
fs
sbb
xlat
mov
hlt
int3
cmps
mov
fcom
pop
sbb
push
and
or
inc
iret
ficomp
mov
mov
test
popf
cmp
inc
jb
gs
jo
inc
js
imul
xchg
xchg
lock
inc
(bad)
call
icebp
mov
dec
ret
xchg
nop
and
(bad)
pop
les
ins
mov
push
jbe
adc
or
mov
icebp
outs
or
jne
inc
cmp
jne
cli
and
add
mov
adc
jecxz
adc
add
inc
jmp
sub
xchg
popa
in
dec
jmp
mov
in
xchg
add
jmp
push
loopne
push
in
mov
sbb
push
mov
scas
mov
mov
inc
or
dec
outs
mov
mov
inc
mov
scas
sbb
lea
fs
add
shl
dec
add
jle
call
lea
rol
sub
je
aas
pop
int
adc
(bad)
sbb
outs
test
xor
sub
pop
call
inc
shl
or
adc
sbb
add
mov
and
popf
add
or
out
or
in
sbb
adc
movs
lds
and
std
jle
mov
arpl
pop
pop
adc
ins
fcom
mov
adc
cld
rcr
clc
mov
jnp
cmp
je
push
out
mov
sub
loopne
in
stc
in
hlt
push
loope
std
loopne
xchg
ret
mov
lea
sub
jmp
adc
dec
sbb
cs
mov
data16
add
aam
mul
ins
scas
or
mov
xchg
sub
stos
jle
cmp
(bad)
inc
sbb
fst
add
sbb
cmp
jle
pusha
test
shr
out
or
mov
retf
xor
loopne
push
pop
mov
inc
or
jecxz
cdq
scas
add
cmp
cmp
jmp
adc
rol
xchg
les
loop
jmp
fmul
xor
pop
add
rcr
and
dec
or
dec
out
fbld
mov
stc
rol
hlt
or
jmp
in
jmp
xchg
sbb
pop
xor
pop
rcl
push
popa
mov
add
movs
movs
adc
jg
push
jo
fistp
out
clc
cmp
imul
add
xor
pop
dec
inc
cmp
mov
call
retf
jne
cmp
cmp
dec
mov
aas
pusha
push
add
push
and
sub
fnstcw
and
xor
pop
jbe
fnsave
out
imul
ja
jae
repz
adc
out
int3
cmps
push
push
loopne
ror
(bad)
dec
rep
mov
cld
add
hlt
shl
sar
in
sub
in
xlat
jl
repz
fdiv
cmp
push
or
in
iret
rol
nop
mov
sahf
out
push
lods
jle
movs
xor
pushf
iret
jnp
out
fcom
out
out
jns
fdivr
je
push
jl
out
ins
dec
push
sbb
add
out
jns
rcl
jle
inc
scas
fdivp
scas
jnp
cmp
aad
out
hlt
sub
dec
jne
mov
and
add
iret
enter
test
sbb
lods
ficomp
pop
in
jne
adc
(bad)
pop
adc
or
aam
pop
inc
fadd
in
stc
cld
fld
pushf
cld
add
jns
mov
adc
hlt
add
idiv
lock
pop
in
and
and
xlat
in
aad
fmulp
popf
cmp
fsubr
mov
ja
dec
aam
or
push
fmul
leave
mov
enter
push
stc
mov
push
test
mov
repnz
dec
sahf
out
mov
sbb
cmp
in
repnz
and
out
pushf
xor
mov
jae
pushf
nop
push
nop
fcom
pop
fsub
in
adc
std
nop
mov
test
jo
sbb
cld
stc
or
lods
rcl
pusha
dec
mov
idiv
fadd
mov
nop
xchg
pop
lods
fstp
add
mov
enter
int
and
jl
neg
jb
push
mov
xor
es
or
mov
or
cmp
dec
adc
nop
inc
push
cwde
nop
mov
and
cmp
inc
pop
ret
inc
push
les
mov
loopne
dec
lock
add
xchg
adc
icebp
pop
repz
adc
mov
shl
pop
jns
das
or
int3
adc
shl
fcmove
in
push
inc
push
push
(bad)
out
cwde
push
call
leave
inc
add
out
aad
and
cmp
les
and
cmps
ins
fistp
dec
les
push
(bad)
call
jl
adc
xor
repz
repz
pushf
scas
out
cmp
rcl
test
sahf
out
sahf
sbb
dec
pop
outs
jns
out
adc
in
call
adc
push
sub
out
cmp
out
sahf
out
movs
mov
fcmove
sar
dec
adc
repz
gs
fwait
repz
rep
mov
jns
out
adc
cmp
out
sahf
pop
outs
or
jns
shl
hlt
push
adc
sbb
repz
ins
jg
mov
repz
jmp
movhps
jns
out
xor
imul
lahf
mov
aad
sar
stc
or
sbb
repz
gs
fwait
repz
rep
mov
jns
out
sbb
sub
sahf
popa
jae
xchg
test
jns
fcomip
add
adc
daa
cmp
outs
iret
repz
adc
in
call
sbb
xor
inc
pop
imul
jns
out
mov
xlat
jmp
sti
or
push
cmp
repz
jns
popf
scas
stc
cmp
repz
test
cmps
sbb
out
sahf
jne
cdq
stos
mov
jns
repz
cmp
repz
jno
iret
repz
xchg
cmps
mov
out
add
adc
out
pop
ins
jg
mov
mov
fldpi
std
iret
repz
nop
xor
imul
lahf
mov
imul
stc
or
sbb
das
inc
push
gs
out
sahf
mov
cmp
repz
pop
and
sub
dec
popa
jae
xchg
iret
repz
test
add
adc
jns
out
outs
adc
in
call
and
repz
and
cmp
repz
mov
call
pop
xor
jns
out
push
addr16
sahf
out
sahf
popf
scas
rcl
idiv
sar
sbb
iret
repz
cdq
stos
out
cmp
mov
es
out
sahf
pop
sub
dec
pop
jno
sahf
out
adc
lahf
out
out
add
adc
aaa
dec
pop
ins
jg
cmp
repz
mov
fldpi
jns
out
std
movaps
xor
jns
out
imul
sahf
mov
aad
stc
or
cmp
repz
das
inc
push
gs
repz
fwait
lods
mov
shl
cmc
pop
sub
sahf
out
sahf
sub
jns
out
xchg
test
cmp
out
add
adc
cmp
dec
pop
outs
adc
in
(bad)
jns
cmps
stc
adc
xor
sahf
out
jge
mov
sahf
(bad)
sti
or
repz
inc
push
addr16
cmp
repz
imul
sbb
sahf
out
sahf
cmp
jge
jns
out
mov
repz
out
or
sbb
iret
repz
push
bound
stos
ds
repz
into
loopne
add
jns
out
push
sub
dec
pop
out
sahf
out
jge
mov
sahf
(bad)
sti
or
repz
inc
push
addr16
cmp
repz
out
repz
xor
xor
xor
cmp
repz
xor
xor
repz
repz
xor
xor
cmp
xor
push
sub
push
repz
repz
xchg
movs
iret
repz
mov
fucomi
call
sahf
out
call
jns
out
jge
pushf
scas
rcl
sahf
out
in
or
iret
sub
push
bound
iret
repz
stos
mov
out
repnz
push
sub
out
sahf
out
pop
jo
xchg
lahf
out
sahf
cmps
mov
aaa
cmp
repz
and
dec
pop
repz
rep
jle
mov
iret
(bad)
fsubr
cld
push
cmp
xor
jp
sahf
out
mov
xor
out
clc
or
sbb
iret
repz
inc
push
fs
call
shl
hlt
jns
cmps
stc
push
cmp
sub
out
sahf
out
jb
xchg
test
out
sahf
mov
cmp
iret
repz
cmp
outs
repz
repz
cmp
(bad)
(bad)
adc
sahf
out
sahf
xor
pop
push
mov
out
mov
repz
out
or
push
xor
clc
cmp
push
data16
cmp
sahf
out
cmp
out
sahf
ds
out
ds
sahf
out
ds
aas
sahf
out
sahf
aas
aas
aas
aas
aas
aas
jns
out
aas
aas
aas
aas
aas
out
sahf
out
inc
inc
inc
inc
sahf
out
sahf
inc
inc
inc
inc
inc
inc
jns
out
inc
inc
inc
inc
inc
iret
repz
sar
push
xor
iret
repz
jp
sahf
mov
cmp
repz
clc
or
jns
cmps
sbb
inc
push
fs
out
sahf
jbe
call
jns
hlt
push
inc
sbb
repz
repz
pusha
jb
iret
repz
xchg
test
int3
fdivp
sahf
out
add
cmp
sahf
out
pop
outs
adc
mov
(bad)
dec
repz
adc
xor
pop
push
iret
repz
mov
iret
repz
call
out
sahf
out
inc
push
data16
out
sahf
mov
dec
repz
or
sub
repz
repz
bound
iret
repz
stos
mov
sahf
out
call
jns
out
jo
xchg
cmps
mov
retf
add
iret
repz
and
dec
pop
ins
jle
iret
repz
mov
call
and
out
sahf
out
push
push
jns
sahf
mov
aam
clc
cmp
sar
sbb
inc
push
repz
repz
call
shl
hlt
push
dec
sahf
out
sahf
sbb
cmp
pusha
jb
sahf
out
test
xor
out
lock
es
repz
cmp
outs
adc
mov
(bad)
jns
out
(bad)
adc
xor
out
sahf
out
push
mov
mov
(bad)
call
iret
repz
xor
data16
repz
pushf
scas
shl
test
sbb
ds
bound
sahf
out
cwde
stos
mov
int
repnz
push
sub
iret
repz
dec
pop
jo
xchg
cmps
ds
repz
retf
add
sahf
out
adc
dec
pop
out
sahf
out
jle
mov
sahf
(bad)
fsubr
cld
push
push
and
repz
inc
push
push
repz
imul
push
sbb
sahf
out
sahf
inc
push
fs
call
shl
hlt
repz
repz
push
sbb
cmp
iret
repz
pusha
jb
xchg
test
call
add
jns
out
cmp
outs
out
sahf
out
xchg
movs
mov
dec
repz
(bad)
(bad)
adc
xor
iret
repz
pop
push
mov
cmp
repz
out
call
inc
sahf
out
sahf
push
data16
pushf
scas
jl
out
rcl
test
repz
rcr
sub
push
(bad)
iret
repz
je
cwde
stos
mov
cmp
repnz
push
sub
out
cmp
and
sahf
out
cmps
mov
xor
out
add
and
dec
cmp
repz
ins
jle
mov
mov
fsub
mul
jns
out
pop
adc
xor
cld
and
push
outs
sub
inc
jmp
mov
inc
push
in
scas
xchg
fs
sub
xchg
stos
cwde
mov
dec
mov
rcl
xchg
or
and
pop
cmp
mov
leave
fmul
xchg
inc
cmp
lock
cmp
pop
and
xchg
and
xchg
and
xchg
lods
int3
call
or
jecxz
push
jl
mov
aad
lock
popa
stos
sbb
nop
inc
push
bound
and
push
cmp
mov
bound
push
inc
add
in
fcomp
push
jo
dec
ins
mov
inc
pushf
fcmovbe
scas
cmp
mov
in
and
and
cld
and
xor
push
leave
xchg
push
push
ror
mov
and
and
xchg
and
hlt
leave
xchg
or
or
sbb
xchg
sbb
pop
ins
xchg
sbb
xchg
adc
rcr
leave
xchg
sbb
clc
or
dec
mov
xor
dec
mov
dec
pop
jo
in
mov
dec
int3
adc
and
xor
cmp
and
push
pop
push
js
jb
inc
jb
mov
inc
fdiv
or
and
xchg
and
xchg
and
pusha
nop
mov
(bad)
aam
stos
nop
inc
add
addr16
and
or
sub
jb
mov
jl
xchg
pop
and
xchg
sbb
in
dec
xchg
xchg
or
and
dec
mov
inc
fs
in
mov
dec
cld
sbb
and
xor
cmp
jb
inc
je
mov
mov
jns
inc
jb
lock
and
xchg
and
sub
and
xchg
cmp
push
test
(bad)
loopne
lds
imul
cmp
es
ins
retf
push
jmp
ins
daa
test
les
add
dec
mov
and
mov
dec
mov
dec
mov
dec
mov
xor
in
or
cmp
jb
inc
push
mov
jb
mov
sbb
outs
sub
cmp
and
xchg
js
mov
lods
shl
xchg
or
and
jo
leave
xchg
sbb
inc
dec
pop
cmp
jl
xchg
sbb
sub
leave
(bad)
aam
jae
sub
(bad)
(bad)
hlt
add
and
and
jno
mov
bound
jb
inc
je
xchg
add
mov
sbb
xchg
sbb
aam
jno
inc
test
jl
inc
jnp
mov
jb
inc
jb
pop
je
jb
inc
or
xor
in
mov
in
and
repnz
or
test
dec
jae
dec
mov
push
inc
ins
and
pushf
lods
mov
dec
mov
aam
and
in
clc
or
inc
xor
xor
jb
inc
pop
ins
and
and
pushf
jb
inc
jb
(bad)
fadd
and
call
sbb
add
xlat
xchg
xchg
and
push
and
mov
dec
hlt
or
jb
inc
xor
dec
pop
inc
jb
inc
fs
and
jb
nop
movs
jns
inc
jb
fadd
ja
cmp
and
xchg
inc
pusha
je
xchg
and
nop
test
and
xchg
and
clc
leave
xchg
or
sbb
push
stos
loop
sbb
les
sbb
js
loopne
jg
imul
clc
inc
sbb
and
sbb
dec
dec
jns
pusha
and
fcmovbe
inc
js
test
mov
mov
and
jns
clc
inc
inc
pop
dec
js
jp
sbb
scas
mov
mov
and
fiadd
pop
cmp
cmp
push
movs
inc
mov
jb
in
add
(bad)
jbe
daa
sbb
xor
dec
adc
sub
push
xchg
dec
and
sub
push
ins
jnp
stos
fcmovbe
inc
add
cmp
mov
loopne
jl
jb
mov
and
jb
inc
test
clc
xchg
and
sub
dec
cmp
mov
shl
leave
nop
cmp
cld
adc
sub
xchg
sbb
push
jle
jo
push
mov
mov
jbe
pushf
inc
lods
and
fsubr
adc
or
test
aas
fwait
dec
push
sub
or
jne
inc
cmp
inc
les
stos
sbb
xor
pop
and
mov
xchg
loopne
test
sub
push
add
push
and
sub
mov
mov
push
jb
int3
clc
xchg
or
add
and
in
mov
test
and
stos
and
sbb
mov
mov
in
scas
hlt
and
xor
(bad)
in
pop
ins
adc
lds
inc
sub
push
and
mov
xchg
adc
sub
clc
rol
dec
sbb
leave
inc
pop
xor
test
neg
aad
or
inc
inc
xor
test
mov
or
mov
inc
int3
and
jb
inc
repnz
inc
jo
mov
test
cmp
jge
and
fimul
test
sbb
mov
or
dec
and
inc
jb
test
stos
and
and
in
adc
sub
mov
xlat
je
sub
xchg
xchg
nop
imul
mov
sar
lock
leave
xchg
or
add
and
xor
adc
popf
pop
imul
mov
mov
rol
ror
leave
xchg
sbb
pop
jo
sbb
mov
mov
inc
jb
inc
jo
les
add
cmp
test
cmp
and
xchg
int3
cld
or
xor
mov
inc
jmp
jl
mov
out
mov
cdq
dec
dec
sub
xchg
or
and
sbb
xchg
sbb
sub
leave
xchg
sbb
mov
mov
dec
cmps
or
add
and
or
(bad)
mov
adc
and
xchg
sbb
jo
mov
xchg
sbb
stos
repz
leave
push
jnp
mov
dec
xor
xchg
mov
repz
push
and
dec
xchg
xchg
or
push
in
mov
jl
mov
add
les
cmp
inc
cmp
ficom
test
mov
mov
in
sbb
leave
and
xchg
js
or
sbb
xchg
or
sub
xchg
sbb
xchg
fs
mov
sti
shl
fwait
xchg
and
dec
inc
jb
inc
pop
ins
jl
inc
jb
mov
mov
popf
jmp
jnp
hlt
inc
sub
jb
test
xchg
pop
lock
cmc
in
xchg
movs
and
xchg
inc
sub
stos
adc
dec
xchg
xchg
pop
xchg
jbe
mov
jl
push
add
mov
sub
fsubr
shl
pop
and
and
fidivr
pop
jl
push
pushf
inc
lods
and
dec
mov
mov
dec
mov
clc
xchg
pop
inc
fwait
push
adc
push
in
and
xchg
sti
push
in
sub
jb
pop
and
jmp
adc
mov
inc
inc
and
pop
ins
pushf
shl
jl
cwde
test
ficom
imul
fcom
add
adc
and
xchg
and
and
xchg
je
cwde
cmp
shl
cmp
xchg
or
adc
sub
leave
xchg
sbb
pusha
jo
sbb
xchg
test
mov
sbb
cld
adc
sub
dec
mov
push
pusha
je
in
mov
in
enter
push
cmc
adc
jbe
cmp
push
and
pop
(bad)
in
mov
push
popf
in
mov
fmul
sahf
xlat
sahf
lahf
cmp
push
aaa
jecxz
inc
adc
rcr
mov
pop
xlat
or
mov
pop
inc
xchg
mov
scas
or
shl
push
mov
mov
and
stos
in
mov
scas
xchg
nop
test
pop
ror
mov
lock
cmps
xchg
push
or
mov
scas
xchg
jo
mov
mov
xchg
pop
mov
loopne
hlt
stos
sub
mov
xchg
xor
ins
xlat
stos
in
mov
push
mov
pop
aam
inc
jnp
push
call
add
ficom
push
aas
movs
je
jne
dec
scas
mov
pop
(bad)
shr
xor
pop
and
sbb
movs
fild
js
mov
movs
scas
push
rcl
inc
xchg
cmp
push
leave
test
movs
iret
movs
and
or
sub
stos
pop
push
inc
ins
pop
pop
mov
in
test
mov
shl
cmps
leave
mov
inc
sbb
sub
inc
cmps
fild
mov
sub
stos
in
mov
xor
(bad)
test
inc
or
shl
cmp
dec
(bad)
pusha
je
stos
loope
mov
push
leave
push
movs
mov
shl
add
push
xor
sbb
xor
dec
fs
and
js
mov
lods
mov
int3
fsub
and
inc
call
cmp
xchg
and
fs
adc
loopne
xor
mov
dec
clc
inc
stos
and
jb
inc
cmp
and
jb
jo
push
jmp
jbe
lods
addr16
sub
nop
retf
dec
aam
loopne
jb
in
lock
add
lods
retf
fcmovnb
dec
jne
add
lock
push
repz
add
inc
inc
dec
or
jmp
or
mov
xor
mov
cmp
xor
add
add
or
jne
ds
lock
sub
adc
push
mov
pop
inc
out
add
cmp
jmp
fs
cs
daa
add
jmp
or
jae
outs
jns
gs
daa
pop
inc
outs
add
into
xor
ins
ins
gs
addr16
inc
daa
push
imul
cs
addr16
push
xsave
in
pop
inc
pop
xchg
jae
arpl
push
(bad)
jmp
daa
pop
inc
pop
iret
pop
in
pop
jmp
out
pop
loopne
std
pop
and
out
(bad)
cld
pop
icebp
pop
lock
loopne
pop
loopne
jmp
pop
out
sar
xlat
dec
in
push
in
pop
out
repz
repz
call
pop
jg
movs
shl
nop
push
(bad)
(bad)
sub
outs
data16
ins
fisub
ins
cmp
jno
jge
imul
jmp
clc
jno
popa
jns
test
jg
jae
ins
ja
imul
arpl
dec
sbb
jg
gs
je
pusha
cs
cmp
jne
push
pusha
call
inc
ja
sub
cmp
jbe
jnp
je
ins
imul
in
jmp
cmp
sub
xchg
(bad)
jo
jae
cld
jmp
sub
mov
inc
outs
arpl
je
ja
sub
jg
in
cmp
pop
pop
add
pop
mov
jl
mov
je
add
xchg
dec
adc
push
iret
xlat
(bad)
mov
shl
imul
arpl
jbe
outs
aaa
punpckhwd
mov
fwait
outs
popa
ins
ins
pop
outs
out
je
daa
mov
data16
fs
cs
das
ja
cwde
mov
mov
das
fldcw
mov
sbb
ins
push
neg
sbb
fs
push
jb
inc
pop
shl
jne
jb
add
(bad)
and
out
pusha
ja
adc
ds
adc
push
xor
and
jb
outs
pop
push
adc
outs
aas
bound
scas
and
je
shl
xchg
inc
out
je
je
pop
sub
iret
add
outs
jb
jbe
int3
sub
mov
and
cwde
ins
addr16
push
inc
pop
jle
and
shl
jne
push
arpl
arpl
and
sub
int
push
imul
inc
ins
js
push
shr
or
inc
and
jae
test
out
pop
dec
mov
sbb
and
xchg
arpl
idiv
mov
dec
das
ds
inc
into
fsub
ins
fsub
jbe
push
sub
and
(bad)
dec
jg
pop
stc
mov
loope
lock
cmp
pop
jmp
pop
sti
ds
dec
out
dec
out
dec
cmc
push
out
ja
pop
out
loop
repnz
cs
retf
scas
das
(bad)
push
push
cmp
pop
imul
pop
arpl
pop
jno
cmp
fild
pop
addr16
pop
dec
ds
pop
gs
mov
cmp
imul
pop
fs
or
jae
mov
sbb
gs
pop
jns
push
add
dec
mov
scas
std
jg
mov
aaa
pop
jnp
ins
pop
outs
cmp
imul
push
outs
aas
jb
and
imul
dec
inc
sub
sub
outs
mov
inc
gs
data16
and
inc
jbe
push
jne
aas
mov
aad
lahf
out
cmp
inc
pop
mov
mov
pop
jg
xchg
xlat
xor
or
sub
pop
mov
xchg
das
dec
outs
inc
xor
gs
mov
(bad)
xlat
jbe
ins
ret
mov
mov
daa
xchg
xor
pusha
call
outs
jae
je
in
xor
fmul
ins
ins
cs
push
pcmpeqw
ja
ret
pusha
jo
xchg
addr16
jp
pop
jmp
mov
sbb
stos
inc
dec
push
dec
adc
js
addr16
dec
outs
(bad)
(bad)
pminub
outs
lahf
cs
outs
inc
outs
push
ss
sbb
lock
bound
lods
mov
popa
jbe
gs
jbe
je
(bad)
mov
gs
gs
pusha
xchg
pusha
push
push
adc
clc
addr16
push
pop
pop
out
pop
jb
(bad)
jae
jp
(bad)
out
js
cs
mov
data16
jb
and
data16
jne
or
imul
test
ja
scas
mov
push
daa
arpl
fist
repnz
jbe
je
addr16
nop
inc
pop
daa
data16
out
pop
xchg
je
retf
jbe
sar
jno
jb
js
je
sbb
jns
sbb
xchg
or
(bad)
daa
xor
outs
jno
jp
or
je
outs
gs
adc
(bad)
out
push
pusha
scas
jo
jo
ins
jb
or
sub
sub
push
hlt
jg
cmp
cmp
xor
sub
mov
dec
dec
out
and
xor
and
xchg
(bad)
in
outs
xor
xor
cmp
and
jae
mov
xor
mov
es
pop
or
push
and
jbe
pop
cs
mov
add
pop
dec
inc
loopne
xchg
dec
push
add
bound
mov
out
mov
push
addr16
ins
jo
mov
push
ds
ins
jg
push
sar
ins
imul
fs
adc
cmp
push
clc
pop
(bad)
xlat
adc
pop
imul
jmp
adc
ins
int3
inc
pop
mov
outs
(bad)
jmp
daa
mov
pop
mov
ins
mov
gs
jno
jae
aas
arpl
cs
imul
ja
daa
jg
data16
mov
ja
lahf
pop
push
popa
mov
mov
mov
scas
fs
das
imul
add
aas
push
loopne
mov
out
push
ja
inc
es
js
mov
out
or
outs
jae
jnp
push
out
mov
mov
popa
les
(bad)
das
das
aas
adc
(bad)
clc
pop
imul
outs
jno
jno
inc
shrd
test
xchg
(bad)
push
pop
sub
stos
mov
mov
mov
bound
ins
outs
inc
scas
push
push
cmp
inc
ins
arpl
ja
bound
outs
imul
es
xor
xlat
ja
jl
shr
gs
outs
arpl
pop
sbb
cs
jns
push
cwde
adc
push
(bad)
aas
add
sbb
cmps
data16
pop
mov
add
(bad)
das
bswap
ja
popa
je
in
and
jo
icebp
mov
outs
inc
cmp
sub
fcmovb
push
mov
xchg
fsubr
cmp
sar
sub
xlat
push
lock
push
popa
nop
ins
cs
ss
(bad)
gs
popa
mov
and
ja
pop
cmp
pop
jp
xchg
cs
imul
pop
enter
cmps
sbb
push
adc
pop
dec
inc
jae
popa
ins
outs
add
ins
nop
jb
fistp
fs
mov
jg
adc
ins
daa
pusha
jb
jbe
gs
idiv
in
add
push
ins
mov
popa
inc
pop
mov
test
pop
adc
arpl
sahf
jne
shl
(bad)
mov
jno
outs
rcr
push
inc
das
cmp
mov
inc
arpl
jb
or
cmp
inc
bound
jo
adc
xor
ins
fidiv
int3
adc
pop
mov
mov
es
outs
inc
sbb
jo
jne
inc
jne
inc
(bad)
cmp
pop
out
mul
cmp
mov
jmp
mov
test
outs
push
in
call
mov
stos
xchg
outs
push
arpl
sub
dec
gs
cwde
add
adc
xchg
ja
mov
lods
(bad)
je
push
jo
jo
xchg
xchg
jbe
push
je
jo
test
cld
jb
mov
repnz
mov
arpl
adc
push
les
fadd
push
outs
push
push
jge
stos
cmps
jae
aas
dec
jae
pop
ss
inc
bound
(bad)
adc
hlt
cmps
xchg
inc
push
inc
mov
push
(bad)
cld
push
arpl
ds
addr16
push
mov
jbe
jb
aam
push
mov
sub
adc
fidiv
or
les
mov
neg
dec
push
xor
mov
sbb
mov
lods
xchg
xor
dec
ja
call
fsubr
pop
push
inc
dec
inc
inc
push
and
jl
and
pop
lock
dec
and
xor
pop
push
je
bnd
(bad)
push
push
dec
scas
sub
cmp
adc
jl
cmp
jbe
outs
hlt
aaa
adc
loopne
mov
pop
push
pusha
ins
je
out
or
iret
pop
das
push
xchg
idiv
jmp
and
and
xor
xor
xor
imul
push
xchg
jl
arpl
xor
dec
iret
test
shl
iret
jle
scas
push
pop
inc
and
fs
dec
lods
xor
rol
ja
imul
jo
cmp
shl
mov
dec
inc
xor
inc
aas
and
push
sub
das
test
or
and
in
or
sub
mov
jns
jnp
aaa
cmp
mov
add
js
dec
dec
inc
(bad)
cmp
dec
push
and
push
ret
pushaw
out
ja
jo
push
popa
cmps
push
clc
adc
call
and
je
jno
xor
in
ins
dec
pop
pop
or
jo
lods
or
out
jg
imul
pusha
ins
pop
aaa
pop
inc
lods
mov
jmp
mov
(bad)
pusha
(bad)
dec
pop
jb
outs
ja
sub
jb
idiv
outs
pop
push
pop
inc
fisubr
call
aas
outs
jo
aas
or
jg
popa
jae
ins
jae
cdq
adc
jg
adc
push
lea
push
outs
iret
pop
dec
xor
ja
call
bound
outs
sub
dec
push
outs
mov
sbb
imul
test
imul
ins
out
imul
cmp
pop
mov
jp
adc
sub
sub
clc
sbb
xchg
arpl
neg
jo
or
add
outs
ja
jns
xor
mov
je
jno
js
xor
std
inc
jne
jo
(bad)
jae
adc
and
cmps
jb
(bad)
gs
nop
int
jbe
jb
xchg
(bad)
popa
jb
dec
push
call
iret
mov
lahf
ins
popa
outs
imul
sub
punpckldq
(bad)
lock
pop
sbb
mov
dec
push
ficom
jbe
aas
or
jl
test
inc
arpl
(bad)
fistp
outs
pusha
outs
pop
ja
or
fs
in
mov
imul
jmp
sub
jns
addr16
repz
(bad)
test
dec
rcl
jb
dec
fs
push
mov
push
imul
mov
int
jne
adc
call
ins
gs
push
cmc
cs
jns
dec
jne
das
inc
inc
jmp
outs
addr16
jp
outs
js
mov
out
dec
inc
and
inc
js
jo
stos
outs
ja
packssdw
(bad)
jo
mov
call
jmp
mov
sbb
inc
jne
xchg
lea
sub
mov
add
pop
xor
neg
cs
and
push
jne
fs
xor
sbb
imul
dec
in
inc
jb
add
add
inc
or
outs
fs
pop
xchg
loop
add
mov
adc
jo
lahf
cvtdq2ps
push
imul
and
mov
pop
push
and
and
xchg
out
add
mov
cmps
dec
inc
xchg
bound
pop
je
inc
inc
das
adc
daa
and
lods
jne
cs
lods
call
ins
popa
fild
inc
ds
jl
mov
inc
ins
ins
in
in
or
inc
imul
aaa
into
jno
inc
pop
int
jno
inc
scas
aas
fsubr
loope
inc
outs
scas
ja
push
enter
outs
ins
dec
jno
loopne
lds
dec
inc
and
sbb
ins
ins
push
(bad)
sub
pop
sub
sub
cs
dec
movs
xchg
jo
jae
arpl
push
mov
xlat
inc
cs
ins
mov
adc
push
cmps
adc
push
mov
push
xlat
sbb
adc
cld
lahf
push
das
dec
lds
enter
jp
push
xlat
and
(bad)
mov
push
cmp
cs
push
imul
dec
sub
and
mov
outs
scas
xor
jne
mov
cmps
sub
push
ins
pusha
xchg
pop
adc
(bad)
ins
pextrw
outs
adc
push
enter
std
outs
je
jae
ja
mov
pop
(bad)
or
pusha
cmp
movs
jbe
retf
mov
inc
cmp
loop
and
jno
jle
outs
xchg
push
ins
fcomp
leave
in
es
jne
jg
popa
mov
cmp
ins
xchg
popa
bound
sub
fidiv
ss
rcl
gs
addr16
push
pop
enter
iret
push
sub
outs
(bad)
push
cli
out
xor
xor
fist
test
push
jae
aaa
cmp
clc
mov
jae
jno
pop
or
stos
iret
and
xor
pop
push
dec
or
push
outs
sub
push
outs
clc
in
data16
data16
cmp
aas
jae
cs
movd
aas
cmp
jg
push
das
pop
cld
or
(bad)
fs
addr16
push
gs
jle
jmp
jbe
(bad)
imul
mov
jo
adc
dec
addr16
popa
push
(bad)
sar
mov
jo
outs
push
jae
mov
fldenv
addr16
jne
jno
mov
xchg
and
cs
jle
aas
out
std
fisubr
arpl
push
(bad)
je
jb
gs
jmp
sub
dec
and
sub
pop
cs
add
dec
jae
ja
outs
pop
jne
fisttp
pop
daa
outs
ins
pop
fs
stos
push
sbb
cs
js
popa
std
gs
sbb
jb
je
dec
std
outs
cld
inc
push
jbe
std
inc
test
(bad)
jmp
mov
and
outs
mov
inc
mov
jae
push
dec
idiv
jns
iret
iret
lock
loop
repz
and
jmp
sbb
jecxz
in
push
stos
and
(bad)
dec
out
clc
in
call
loope
lock
fild
js
mov
gs
and
add
jo
inc
push
add
fsubp
jae
push
sub
push
gs
xlat
pop
lods
add
inc
push
pushf
jb
fs
nop
add
mov
pop
adc
push
imul
dec
jae
arpl
push
(bad)
fwait
sub
in
fs
mov
xchg
cwde
or
dec
sub
xor
ffreep
or
add
add
push
das
xor
das
data16
adc
pop
pop
jmp
pop
pop
inc
dec
inc
dec
imul
push
push
pusha
inc
jo
push
jae
add
test
add
fisttp
inc
cmp
push
pop
test
push
fs
dec
enter
push
add
and
je
popa
jo
push
or
sbb
push
bound
push
sub
imul
(bad)
scas
scas
jo
push
and
fcmovu
in
push
push
outs
pop
cs
cmp
(bad)
gs
xor
xor
sub
mov
dec
bound
sub
pop
stos
jge
outs
jne
aaa
xchg
mov
(bad)
pushf
shr
out
pop
das
xchg
push
jg
jg
jno
jb
push
xchg
scas
lods
inc
lock
ja
repnz
mov
jmp
sbb
mov
scas
add
bound
and
pop
data16
push
daa
outs
sub
and
arpl
data16
loopne
les
fist
bound
(bad)
sbb
addr16
retf
or
and
push
dec
or
xchg
dec
arpl
dec
adc
dec
and
fdiv
or
inc
jb
push
push
dec
xchg
leave
push
out
sbb
push
ss
push
dec
(bad)
jg
pop
mov
jg
push
jo
sub
and
cmp
cmp
ins
or
cmp
fisubr
andnps
sub
xor
inc
sub
push
xchg
inc
test
ret
push
daa
jg
pop
shl
shl
jnp
mov
bound
out
push
les
popa
fs
iret
scas
ss
int3
or
dec
adc
sbb
push
ret
jne
adc
jbe
jle
inc
ror
push
jg
fcmovu
xchg
inc
outs
push
mov
pop
stos
cmps
jmp
imul
icebp
or
and
jae
das
jbe
je
mov
dec
adc
ins
ins
stc
mov
pop
scas
xlat
arpl
xchg
pop
and
pop
push
test
add
dec
inc
rcl
inc
outs
jae
iret
jbe
fiadd
in
sbb
jmp
and
cmps
sbb
inc
push
int3
pop
outs
rcr
daa
imul
pop
and
inc
push
inc
and
pop
mov
mov
pop
(bad)
addr16
icebp
lea
jne
or
sub
push
push
or
sbb
push
outs
jno
outs
sub
(bad)
jae
sbb
mov
sub
fisubr
movs
nop
scas
pop
call
push
scas
data16
call
and
dec
jo
out
jbe
ins
out
dec
or
addr16
dec
jno
and
es
push
jne
push
adc
lock
and
and
xchg
int3
inc
out
and
jo
scas
int
lock
(bad)
loopne
push
add
pop
pop
xchg
arpl
xchg
pop
and
inc
imul
jg
jmp
in
in
std
mov
shr
repnz
loopne
in
mov
ret
inc
cwde
into
xor
and
shl
inc
es
jne
push
(bad)
fist
mov
pop
das
shl
stc
imul
out
in
clc
repz
push
xlat
movs
icebp
xchg
push
and
mov
jmp
jae
pop
push
cmps
and
data16
jmp
push
jecxz
jbe
outs
(bad)
cmp
push
sar
cmp
jge
cmps
mov
shl
addr16
and
mov
neg
mov
and
jp
out
inc
imul
pop
pop
pop
(bad)
test
push
ins
mov
xor
cmp
cmp
mov
data16
push
jmp
jb
jb
jne
jae
cmps
ins
call
adc
cmp
ins
pop
out
cs
shr
aas
lahf
outs
jns
jns
add
dec
inc
pop
cmp
jcxz
sbb
and
mov
jno
and
je
cmp
cs
jl
gs
xor
xor
das
arpl
jb
outs
das
and
shr
repz
or
push
or
add
push
adc
scas
mov
dec
push
cmp
xor
inc
and
call
mov
ja
inc
addr16
repz
mul
std
inc
popa
rol
outs
aas
push
push
inc
sub
dec
aam
mov
push
fisub
test
push
pop
ins
fisub
mov
sahf
xor
and
add
ds
imul
js
imul
or
cmp
addr16
push
xor
retf
inc
inc
push
push
push
inc
inc
inc
push
cmp
push
push
push
das
das
popa
(bad)
adc
adc
je
or
and
push
push
mov
cs
jae
rcl
fcmovnu
add
and
cli
or
mov
dec
inc
inc
push
and
and
and
jae
(bad)
mov
cmp
push
test
jbe
and
out
js
sub
push
mov
ret
inc
clc
scas
inc
inc
push
pop
(bad)
pushf
sub
scas
scas
aas
and
rol
mov
and
mov
ja
mov
cmp
jnp
push
data16
dec
in
sub
and
into
fild
add
je
push
push
inc
sub
(bad)
das
mov
push
xchg
push
jo
bound
fs
daa
into
out
mov
pusha
push
sub
jb
ret
(bad)
push
jo
xchg
rol
mov
xchg
ja
xchg
push
outs
jg
das
sbb
mov
call
and
das
ja
fwait
cs
xchg
jb
sub
and
and
cmp
xchg
fcom
outs
iret
xchg
sub
pusha
inc
sub
sub
daa
cs
aad
push
bound
mov
and
gs
(bad)
aas
aas
adc
out
and
push
push
dec
inc
dec
dec
(bad)
sbb
dec
ins
ins
and
jbe
jno
arpl
jb
arpl
sub
ins
mov
imul
adc
mov
and
xchg
jge
or
(bad)
xor
and
pop
mov
cmp
scas
inc
sbb
add
pop
out
inc
jl
push
into
and
inc
inc
and
jno
hlt
pushf
popa
arpl
xchg
mov
ins
sub
and
outs
ins
and
and
push
xchg
pop
jo
jae
mov
ja
push
fmul
pusha
loopne
pop
jne
pop
push
pop
xor
add
pop
out
(bad)
mov
sahf
aaa
out
pop
imul
push
inc
pop
lahf
and
ret
push
div
outs
ja
mov
out
out
push
test
push
(bad)
sahf
push
jno
cmp
out
dec
aas
outs
mov
cmps
jno
and
aas
adc
addr16
fsubp
fidiv
mov
test
das
inc
outs
je
ja
arpl
sbb
mul
and
inc
xor
movs
sahf
jbe
je
aaa
bswap
popf
mov
out
xor
sbb
push
jo
fisubr
mov
adc
pop
je
aas
xchg
out
sub
pxor
xchg
jne
jle
add
push
arpl
inc
fbld
and
inc
jb
inc
mov
and
(bad)
(bad)
(bad)
jnp
das
jo
es
and
push
xor
lock
cmps
and
mov
pop
xchg
dec
push
inc
daa
cmp
dec
pop
dec
cmp
pop
je
std
adc
fisub
jbe
outs
jne
sub
inc
fs
adc
es
ins
jbe
dec
and
or
fimul
and
xor
mov
je
inc
and
outs
add
pop
hlt
adc
sub
scas
gs
aaa
and
push
out
sub
outs
out
scas
cs
out
sub
pop
dec
pushw
out
daa
mov
dec
jnp
sub
xor
cmp
xor
xor
call
lods
fistp
xor
and
xor
inc
std
neg
(bad)
cmp
ss
cmp
inc
xor
inc
inc
inc
aaa
inc
xor
xor
xor
ficomp
daa
sub
lahf
or
pop
call
inc
push
push
inc
push
inc
jl
and
xchg
and
dec
mov
cmps
cs
js
outs
and
dec
push
and
ss
out
inc
scas
les
icebp
enter
dec
pop
pop
sbb
in
movups
jo
mov
mov
add
movsx
add
adc
adc
mov
xor
ins
retf
aaa
lock
jno
or
sub
clc
das
add
xor
or
inc
fwait
(bad)
dec
aaa
ss
aaa
xor
inc
xor
sub
add
xor
jge
pop
push
mov
sahf
xor
inc
inc
lods
xchg
aaa
js
dec
repnz
xor
inc
xor
sub
xor
mov
dec
mov
cwde
lea
scas
add
out
xchg
rcr
inc
mov
das
inc
add
xlat
inc
sub
sub
imul
andnps
outs
gs
inc
das
daa
inc
push
xchg
daa
das
cmp
xor
js
dec
or
mov
adc
inc
dec
xor
adc
inc
inc
inc
mov
dec
xchg
stos
mov
cmovns
dec
sub
sub
dec
sub
(bad)
(bad)
call
jnp
inc
inc
ins
inc
xor
imul
push
pusha
outs
inc
jp
jb
push
outs
popa
dec
dec
push
dec
loop
jmp
push
sub
dec
ja
cmp
das
pushf
les
jp
aas
pop
in
and
outs
imul
pop
mov
out
jns
outs
inc
js
dec
jb
out
pop
xchg
mov
jae
add
pop
out
lahf
pop
loope
sub
dec
push
xchg
lods
das
scas
pop
pop
adc
mov
push
sbb
sbb
inc
jle
dec
fisubr
and
test
addr16
stos
mov
pop
imul
add
add
xchg
cdq
add
jmp
rcr
je
popa
mov
test
jle
add
inc
js
aas
and
js
dec
and
cs
mov
jns
ins
dec
clc
mov
(bad)
push
outs
imul
sbb
dec
imul
add
in
push
push
ja
inc
je
push
adc
dec
xchg
xor
xchg
dec
xchg
add
push
pop
pop
(bad)
fimul
outs
imul
fisub
sahf
arpl
xchg
out
call
outs
ins
scas
mov
jo
push
out
test
jne
jae
adc
jbe
mov
test
out
inc
mul
pusha
mov
push
dec
push
scas
adc
jg
add
sub
cs
neg
and
xchg
and
sbb
loopne
xchg
pop
retf
pop
int3
ret
or
add
loope
push
sbb
xor
(bad)
jbe
aad
push
add
mov
or
push
(bad)
adc
or
rcl
(bad)
ss
scas
pusha
jg
pop
sub
js
sub
pop
mov
sub
sbb
inc
mov
dec
fs
bound
pop
ret
xchg
or
pop
in
push
aas
cmps
pop
dec
outs
ja
es
xchg
call
push
push
adc
mov
xchg
inc
xor
push
cmps
lods
xchg
test
addr16
imul
cmp
aas
pop
dec
outs
mov
and
mov
adc
inc
push
shl
outs
xchg
mov
add
push
mov
dec
stc
dec
dec
adc
ds
data16
cmp
or
xchg
outs
gs
push
pusha
xor
and
adc
das
inc
jae
retf
jb
fld
outs
cs
aas
popa
cmp
adc
inc
aaa
popa
jbe
ins
je
daa
or
adc
inc
daa
fmul
cwde
inc
jb
jo
xchg
retf
iret
call
arpl
out
or
dec
mul
xchg
mov
jl
sub
arpl
mov
xchg
or
xchg
pusha
jb
dec
je
cmp
jp
mov
sbb
js
fcmovnb
or
sub
gs
jb
ret
fcomip
dec
das
scas
shl
dec
push
loopne
fcom
mov
stc
cmps
xlat
ins
popa
jns
push
not
repnz
imul
mov
ins
pusha
daa
xchg
arpl
addr16
dec
or
pusha
fsubr
daa
dec
out
lods
cmp
jbe
push
cs
or
or
mov
outs
shr
push
aaa
data16
push
cs
and
shl
jb
arpl
and
es
cmp
xchg
pop
popa
inc
(bad)
mov
push
or
inc
push
ins
pop
pusha
sbb
jge
jb
xchg
sub
pop
das
jbe
jb
sub
push
pop
push
into
(bad)
cmp
(bad)
ins
xor
cmp
jge
xchg
or
inc
mov
ins
daa
outs
add
jne
addr16
retf
arpl
jbe
and
pop
xor
and
lods
(bad)
retf
cmps
scas
bound
sbb
faddp
sbb
push
(bad)
loopne
cmc
dec
fild
pusha
popa
imul
out
cmp
test
ja
imul
das
data16
ds
data16
ins
call
outs
jbe
xor
add
push
out
xor
dec
xchg
xor
adc
pop
test
inc
pop
push
inc
push
test
xchg
dec
inc
push
inc
out
aad
loop
aas
mov
sbb
inc
push
xchg
inc
cmp
push
dec
inc
push
inc
cmps
std
out
scas
sahf
dec
dec
push
and
push
dec
push
push
inc
or
call
daa
and
scas
add
sub
jae
call
xor
xor
cmp
or
or
xor
daa
inc
inc
cmp
aaa
(bad)
(bad)
push
sub
sub
xor
xor
pop
cmp
aaa
xor
ss
inc
xor
pop
sti
into
pop
pop
scas
daa
fistp
cmp
movs
jg
(bad)
add
add
sahf
mov
cmp
scas
pop
fisttp
dec
enter
adc
sbb
and
push
cmp
push
push
jmp
dec
dec
cmovge
fs
data16
push
imul
mov
jo
jo
ja
adc
inc
(bad)
(bad)
cld
xor
push
(bad)
outs
ins
xor
xchg
daa
xchg
(bad)
push
test
sbb
inc
jne
out
ins
inc
and
jbe
cmp
pop
xchg
sbb
inc
dec
jle
sub
and
xor
imul
enter
arpl
je
stos
icebp
retf
addr16
xchg
cmps
gs
jae
imul
lea
jns
or
and
and
ja
inc
pop
pop
cmps
push
inc
outs
sbb
(bad)
fdiv
add
addr16
push
clc
sub
push
pop
inc
inc
dec
xchg
push
push
xor
adc
out
js
cmovae
sbb
add
(bad)
push
bswap
repz
or
jbe
fadd
daa
inc
dec
outs
pusha
das
add
and
bound
xor
xchg
push
shl
gs
sbb
add
dec
xchg
nop
gs
push
push
dec
ds
or
outs
mov
push
jo
scas
add
inc
mov
or
je
sub
cmps
addr16
out
and
push
data16
push
sub
mov
es
sbb
or
jecxz
inc
scas
out
fcmovbe
fstp
lahf
jnp
sbb
dec
dec
jbe
mov
pop
inc
ins
out
push
aam
sub
adc
push
imul
arpl
je
inc
outs
mov
(bad)
jbe
fidiv
jo
xchg
push
addr16
scas
dec
and
pop
adc
ins
add
add
push
mov
jo
dec
inc
jne
pop
je
jge
and
je
push
bound
jnp
popa
outs
sub
push
pushf
push
dec
ss
jl
add
push
call
ret
push
or
add
(bad)
push
add
or
jg
cmps
push
jo
inc
fist
inc
xchg
or
jo
add
addr16
jns
mov
cld
sbb
ja
dec
addr16
mov
push
loope
scas
dec
addr16
jo
jbe
push
push
jle
sbb
das
imul
sub
jle
push
push
push
inc
test
push
outs
push
pusha
es
jg
and
stos
pop
mov
ins
and
inc
aas
push
outs
push
ins
imul
aaa
adc
jle
dec
mov
mov
inc
ins
mov
dec
shr
dec
or
das
push
pop
push
ror
out
adc
pop
outs
loopne
sub
dec
xchg
push
(bad)
pop
inc
inc
push
xor
jbe
gs
jmp
push
or
inc
popf
fwait
mov
push
je
icebp
scas
dec
sub
jno
popa
jae
push
pop
xor
shl
adc
outs
imul
mov
popa
push
adc
into
imul
push
outs
push
(bad)
ds
mov
push
jbe
or
sbb
sub
push
or
out
xchg
sbb
scas
adc
ficom
(bad)
mov
mov
fbstp
aaa
es
cs
and
ins
xchg
int3
ss
adc
inc
cmps
out
loop
jno
sbb
and
sbb
daa
push
ins
xor
jg
push
cmc
shl
retf
push
fs
paddusw
addr16
add
aas
daa
xchg
dec
xlat
(bad)
add
xor
repnz
adc
xor
popa
in
(bad)
push
aaa
inc
test
jbe
aaa
jns
inc
test
push
daa
add
inc
cmps
jg
pusha
fdiv
test
addr16
fmul
lods
push
mov
push
add
adc
or
adc
add
xchg
or
(bad)
jns
sbb
mov
push
(bad)
dec
jne
outs
dec
stos
lea
or
cmps
dec
or
outs
pop
and
jl
push
xchg
and
ds
push
test
push
mov
fiadd
add
add
jae
bound
sbb
jb
fidivr
inc
jns
bound
and
push
and
cmp
in
pusha
ds
inc
pusha
fcom
pop
or
mov
ds
pusha
mov
hlt
dec
inc
inc
iret
out
jecxz
loopne
repnz
in
loop
loope
xor
mov
lock
out
popa
je
les
enter
das
inc
jecxz
push
mul
lock
out
loope
jmp
clc
(bad)
jmp
in
in
out
in
out
(bad)
cmp
iret
es
add
lock
pop
aas
add
inc
sub
jmp
repnz
call
pop
inc
js
jl
dec
arpl
es
cmps
adc
aad
adc
push
cmps
ret
jg
jb
fimul
scas
push
dec
dec
cmps
daa
mov
ja
push
jne
add
pop
(bad)
adc
cmc
pop
pop
pop
das
pop
push
push
(bad)
fadd
and
dec
das
inc
lods
std
dec
dec
inc
pop
push
dec
push
pop
xchg
les
inc
push
pop
inc
inc
dec
pop
jno
xlat
push
out
dec
xchg
rcl
(bad)
data16
lahf
clc
and
inc
aaa
imul
sub
inc
dec
push
pop
jns
cmp
mov
xchg
jl
or
sub
movs
mov
aaa
pmulhuw
outs
cmp
scas
cmp
inc
je
mov
mov
mov
pop
neg
pop
ret
dec
and
pop
or
nop
pop
(bad)
adc
pop
push
lods
call
or
and
push
pop
or
(bad)
jg
shl
adc
loopne
sbb
sbb
cmp
in
shr
ficom
leave
adc
inc
push
sbb
push
adc
scas
sub
jb
mov
nop
popf
add
cmps
ins
or
push
clc
clc
jecxz
repz
call
(bad)
sti
loopne
in
and
sbb
adc
mov
std
add
mov
jne
xor
imul
bound
hlt
adc
add
(bad)
cld
mov
mov
jb
fninit
sti
add
xor
pusha
nop
fisttp
in
enter
cmp
and
imul
mov
or
pcmpgtw
lea
or
xchg
out
mov
pop
out
(bad)
(bad)
aam
mov
scas
neg
rcr
jns
clc
adc
push
mov
outs
add
loop
cmp
out
mov
jge
push
mov
jo
mov
and
xor
or
lods
push
cs
dec
pop
mov
pusha
xor
and
mov
mov
jo
js
xchg
dec
xor
add
dec
xor
mov
nop
int3
dec
xor
and
shl
aam
test
das
xchg
push
cs
mov
lods
push
cs
cmp
loopne
rcl
cmp
loopne
das
xchg
push
cs
in
adc
sub
lock
adc
xchg
dec
hlt
add
and
xor
inc
and
add
xor
inc
daa
push
out
jnp
push
jecxz
jns
dec
daa
dec
gs
repnz
movq
fs
pop
dec
das
dec
jne
inc
imul
retf
imul
jb
inc
sbb
jb
ins
jo
inc
sbb
inc
repnz
sub
push
cmp
and
jns
clc
and
pusha
aas
inc
jae
pop
inc
jns
or
outs
(bad)
pop
outs
add
xchg
ins
mov
sbb
jae
mov
xchg
pop
neg
pop
mov
(bad)
or
push
push
lock
mov
cwde
enter
sbb
mov
mov
and
pop
jg
ins
jmp
pop
jns
out
adc
call
in
aaa
lahf
neg
push
nop
sbb
lods
sub
xor
xor
push
fadd
adc
jae
mov
(bad)
push
inc
cmp
(bad)
and
pusha
addr16
pop
dec
push
mov
sub
inc
jns
cdq
aam
push
aas
call
sub
mov
inc
mov
dec
test
movs
mov
or
in
inc
add
(bad)
fsub
jge
pop
lods
and
mov
mov
sbb
adc
ret
and
push
inc
jb
retf
js
jmp
and
adc
xchg
out
jnp
(bad)
ret
add
fs
or
inc
jnp
mov
inc
sbb
sahf
jns
outs
mov
mov
leave
inc
test
jb
dec
and
or
adc
adc
dec
xchg
ins
(bad)
je
adc
or
iret
fdivr
sub
test
neg
mov
pop
test
and
mov
xor
adc
or
push
add
xchg
js
mov
movs
mov
in
in
add
fidivr
gs
jns
mov
inc
jns
sti
mov
mov
(bad)
call
mov
aad
enter
retf
add
in
add
rcr
mov
daa
pushf
mov
mov
sub
cmp
push
enter
mov
and
add
xchg
sar
aad
or
push
shl
jg
add
sbb
in
dec
es
cmp
mov
hlt
pop
push
scas
add
je
imul
sbb
push
call
es
mov
loopne
jbe
add
ss
fsubr
clc
leave
test
clc
mov
xchg
arpl
clc
pop
dec
hlt
sub
sbb
fcomi
nop
mov
repnz
lock
xchg
jl
stc
in
mov
mov
call
sub
inc
adc
enter
jb
jmp
nop
loopne
and
nop
jl
mov
jmp
mov
add
enter
or
movs
cdq
inc
aam
(bad)
les
fcomp
enter
jmp
jns
std
popa
jecxz
adc
mov
dec
loopne
or
add
xor
lahf
aam
mov
dec
push
or
jmp
xchg
add
push
je
call
ret
aad
jmp
adc
hlt
pop
test
daa
mov
adc
adc
and
dec
adc
push
movs
sahf
sar
popf
nop
dec
fimul
test
jmp
jb
nop
mov
push
jmp
mov
jge
add
and
aad
nop
pop
enter
mov
mov
add
sub
rol
mov
push
rol
ror
cmp
xchg
add
dec
and
dec
add
jge
packuswb
inc
ins
jnp
mov
add
div
adc
jmp
std
push
xchg
cmp
mov
xlat
loopne
dec
push
mov
pop
in
pop
mov
out
in
jle
cld
test
adc
sti
jo
lea
jbe
add
pop
fsubr
cli
add
xor
pop
cmpxchg
jne
in
fist
adc
mov
dec
xor
jmp
and
rcr
movzx
lock
or
jl
inc
xor
lea
mov
sbb
jle
sti
lea
push
jno
mov
rcl
test
aaa
hlt
pop
add
inc
sub
inc
pop
dec
inc
ror
dec
sahf
jmp
inc
mov
dec
push
or
add
in
repz
dec
cs
jecxz
jnp
or
sub
in
test
dec
push
out
in
cld
cmp
fst
cmp
push
cld
pushf
mov
sbb
adc
xlat
movs
xor
push
cmp
imul
hlt
xor
call
add
pop
add
sbb
jmp
div
and
inc
and
sbb
cmps
mov
rcr
cmp
add
and
or
addr16
mov
movs
push
xchg
aas
adc
pusha
inc
(bad)
je
ret
(bad)
mov
cmp
jne
pop
or
cmc
add
cmps
aam
push
test
(bad)
xor
jo
mov
ins
push
fidiv
adc
mov
cmp
jmp
adc
mov
sbb
hlt
(bad)
cmp
je
sub
mov
es
jmp
sub
dec
test
jne
add
mov
push
call
push
mov
pushf
loopne
out
call
jecxz
push
iret
pop
inc
push
retf
push
push
sbb
cmp
cmps
ret
cmp
call
cli
mov
mov
cmc
pop
add
(bad)
inc
xchg
daa
pop
repnz
loopne
clc
ficom
stos
mov
add
lods
into
xor
sub
adc
add
loopne
sbb
loopne
adc
or
call
push
jno
push
cmps
push
mov
cmp
xor
adc
cmp
mov
test
push
dec
call
mov
in
retf
outs
push
pop
cld
push
cmp
xchg
pop
fnsave
fcom
nop
frstor
sbb
add
pop
sbb
jmp
jle
push
push
sbb
and
pop
mov
pushf
push
pop
cmp
push
inc
adc
cmp
cmp
inc
(bad)
pop
pop
xor
adc
dec
sub
enter
jmp
(bad)
leave
push
daa
mov
inc
add
outs
sub
or
pop
movs
loopne
aas
lock
je
pop
jne
push
retf
(bad)
out
push
inc
add
or
or
xchg
and
inc
mov
xchg
dec
in
movs
lock
repnz
pop
(bad)
(bad)
xor
lock
and
iret
xor
out
mov
fs
mov
push
sub
(bad)
sbb
dec
add
fdiv
movs
dec
cld
in
shr
call
mov
and
xchg
push
jns
add
out
push
adc
cmp
enter
pop
and
jns
enter
push
cmp
test
test
xchg
pusha
push
hlt
shl
jge
jb
inc
pop
mov
push
pop
data16
sti
push
push
mov
and
popf
sbb
cwde
loop
jbe
jae
push
push
aam
out
pop
adc
add
sub
or
jmp
(bad)
lds
push
add
pop
adc
sbb
es
not
in
xor
jmp
mov
sbb
lock
or
test
adc
cmp
pop
inc
lock
push
shr
in
mov
rol
sub
int
push
cmp
dec
pop
ins
sbb
jmp
cmps
(bad)
jne
pop
or
out
inc
pop
data16
test
and
hlt
adc
rcr
dec
or
mov
scas
hlt
ret
ret
and
pushf
div
cld
sub
and
(bad)
pushf
in
fidiv
test
clc
fnsave
fcomip
fistp
xchg
add
leave
cwde
fimul
sar
mov
into
or
lock
xor
dec
rcr
mul
jl
jp
ret
call
out
inc
pop
(bad)
sar
push
sub
lods
and
(bad)
mov
loope
cmovl
mov
dec
push
cld
add
sbb
jmp
data16
sbb
arpl
cmp
bswap
push
int3
inc
xchg
clc
cli
adc
mov
adc
inc
fdivrp
or
or
jg
(bad)
std
jg
sub
xor
add
adc
hlt
lea
sbb
inc
fmul
leave
inc
jmp
data16
ret
inc
jmp
dec
sub
and
and
scas
retf
add
or
adc
inc
mov
movs
mov
mov
or
mov
in
hlt
js
adc
in
and
sar
das
add
pop
aam
add
loop
push
pop
sbb
je
shr
and
xchg
(bad)
xor
sbb
inc
fstp
add
sahf
mov
push
iret
loope
rol
cmp
mov
arpl
ds
imul
std
or
jns
out
sbb
pop
and
dec
mov
es
daa
out
jns
jae
rol
loope
pop
es
xchg
xor
je
pop
imul
mov
mov
push
cmp
sbb
sub
push
sar
cmp
scas
mov
aam
fnsave
push
push
pop
movhps
mov
xor
adc
sbb
mov
xor
cmp
add
aaa
and
mov
dec
mov
cmp
cwde
je
dec
je
jmp
outs
ror
pop
shl
or
test
mov
push
dec
shl
mul
in
mov
rol
test
or
sbb
pop
xchg
rol
push
sub
retf
sar
clc
push
mov
mov
ret
mov
and
outs
inc
fisttp
ds
fild
pop
xchg
rcl
push
pop
outs
sub
jmp
sbb
adc
adc
push
js
or
lods
xlat
jno
or
daa
add
ror
push
or
add
mov
das
pop
and
and
sbb
lods
mov
inc
jle
fwait
and
in
addr16
jb
sub
sti
cmp
or
mov
stos
or
rcl
xor
pop
mov
jmp
bt
sub
arpl
or
call
shl
and
sbb
fld
adc
push
jb
xchg
pushf
je
pop
lods
movs
jb
push
dec
iret
in
pusha
adc
adc
dec
xchg
push
cmps
jmp
cmp
inc
sub
(bad)
add
iret
jnp
daa
add
add
push
dec
imul
jnp
enter
lock
fbstp
pop
sub
jno
push
test
pop
mov
push
enter
jb
add
and
aas
add
mov
pop
out
adc
out
aam
aam
dec
adc
sub
push
xor
iret
cmp
nop
add
cmps
fadd
and
sbb
call
imul
jo
mov
push
pop
aad
out
es
and
inc
dec
mov
aad
lds
lahf
add
mov
repz
mov
xlat
inc
pop
jnp
leave
mov
sub
pusha
mov
mov
call
(bad)
lods
(bad)
sbb
cmp
or
fcomp
sub
push
push
adc
add
cmp
in
pop
aaa
ret
push
and
stc
xor
aaa
sbb
in
rcl
inc
adc
sub
rcr
inc
mov
scas
in
rcr
iret
in
hlt
push
inc
mov
in
xlat
hlt
jno
push
jl
clc
in
pushf
mov
ins
dec
xchg
xchg
jnp
cmp
hlt
jno
and
pop
jmp
dec
call
rcr
adc
ss
push
xor
xchg
pop
rcr
inc
clc
cmp
sbb
paddusw
in
mov
mov
addr16
push
scas
xlat
call
adc
inc
jbe
sbb
mov
and
ror
add
sub
movs
add
adc
mov
sbb
pop
das
pop
enter
fmul
inc
fdiv
cmp
imul
stos
shl
clc
out
jns
out
fldenv
push
hlt
push
pop
fldcw
fiadd
jl
ret
jns
cmps
(bad)
mov
push
retf
hlt
adc
push
dec
lods
xchg
in
push
cmp
ss
mov
mov
bound
dec
outs
and
(bad)
push
sub
dec
dec
sbb
mov
sub
mov
push
or
lock
dec
sub
adc
jmp
mov
jl
xor
repnz
and
push
xor
fcmovne
repz
pop
mov
adc
cmps
jge
(bad)
dec
fild
push
sar
cmps
pop
pop
jb
call
fild
(bad)
push
xchg
das
push
arpl
(bad)
shr
imul
xchg
mov
sub
push
movs
jmp
and
and
push
adc
add
inc
out
sub
daa
jmp
jo
mov
pop
and
daa
adc
pushf
inc
and
(bad)
dec
add
outs
inc
cdq
xchg
outs
mov
scas
fs
test
adc
adc
pop
ins
call
loope
loopne
xor
test
or
or
fwait
and
or
or
(bad)
adc
and
or
push
xchg
mov
xchg
dec
inc
xchg
push
jno
xchg
xchg
rol
mov
sbb
fs
out
out
sub
popf
and
into
pop
mov
rol
mov
es
or
js
test
jns
stos
sub
sbb
add
jp
out
pop
repz
fidivr
and
mov
fisttp
cdq
and
pop
xor
iret
repz
dec
pop
gs
das
sbb
mov
inc
or
xchg
pop
jnp
lods
push
add
xchg
sbb
sbb
and
fld
loope
add
in
xor
fstp
mov
push
sub
pop
outs
movd
push
inc
push
dec
inc
fsubr
xchg
jbe
sub
aad
int
sbb
sbb
mov
nop
fstp
pop
arpl
xor
add
cmp
jae
fisub
loope
cmp
dec
pop
jb
mov
xrelease
push
sbb
aad
push
in
cli
sub
jnp
xor
cs
add
imul
pop
sbb
shr
adc
jne
and
imul
push
mov
inc
js
jne
and
dec
lds
jmp
cmp
aam
mov
xchg
mov
sub
sbb
adc
fadd
unpckhps
add
cs
popa
cmp
inc
addr16
and
pop
dec
shl
add
add
jno
call
fadd
cmp
cmp
and
mov
fnstsw
arpl
das
das
(bad)
xor
and
add
cmp
loop
sbb
add
rcl
jecxz
repz
nop
push
sahf
ret
out
cmps
stc
cmp
or
sbb
enter
jnp
push
cmps
pop
inc
push
and
out
ins
sbb
mov
inc
cmps
xor
xchg
jl
loopne
aam
fcmovnu
cmp
test
bound
sbb
xor
loopne
jno
jge
mov
pop
inc
movsx
imul
mov
jle
mov
push
pop
mov
hlt
pop
add
fsubr
fild
inc
dec
repnz
repz
and
push
shl
add
add
ja
sbb
pop
pop
ins
popa
add
nop
je
sbb
iret
rcr
in
mov
stos
mov
pop
out
jns
sub
push
xor
loopne
dec
(bad)
loope
inc
push
jbe
sbb
addps
lods
test
and
sbb
pop
imul
inc
add
sub
cdq
nop
out
sub
pop
or
push
mov
ins
loop
js
ins
jmp
inc
adc
and
adc
add
rcl
push
xor
imul
mul
aaa
pusha
pusha
or
cmp
fld
aam
or
push
and
push
cmp
out
pop
addr16
out
push
mov
mov
jmp
mov
aaa
arpl
aas
or
shl
sbb
test
ds
hlt
fild
sub
mov
and
nop
jb
and
outs
push
aad
lock
dec
xchg
pop
repnz
fist
inc
xor
call
retf
aaa
pop
add
push
jbe
(bad)
cmps
and
into
loopne
aad
jns
mov
push
popf
pop
push
mov
mov
outs
inc
in
or
daa
loope
loopne
adc
dec
call
cld
adc
test
pop
pop
sub
pusha
ret
scas
loopne
jbe
ret
xchg
adc
scas
lock
push
les
dec
in
pop
or
mov
data16
mov
xor
xchg
dec
(bad)
cmp
retf
add
inc
pop
cmp
add
push
push
xor
dec
cmps
stc
cmp
pop
ins
push
in
es
mov
add
push
mov
shr
jmp
fst
seto
fst
in
add
pop
fisttp
nop
pop
in
xor
lahf
inc
fadd
call
call
cwde
mov
fst
add
push
sub
cmp
imul
xchg
pop
fcom
ror
inc
mov
das
cs
mov
pop
retf
in
(bad)
in
repnz
or
sbb
shr
xor
push
dec
clc
cmp
mov
mov
mov
test
outs
xor
and
pop
and
jns
dec
fiadd
mov
enter
fiadd
popa
imul
dec
pop
sub
add
xor
xchg
sub
cmps
ins
in
push
jns
enter
out
lock
jo
fild
repnz
push
xchg
push
push
fild
push
enter
xchg
sbb
push
fild
jg
data16
jge
out
fild
and
and
mov
adc
jl
jbe
jns
xchg
out
mov
ds
repz
icebp
pop
pop
clc
cmp
jae
ss
ins
(bad)
icebp
nop
dec
push
or
jecxz
push
xor
or
push
frstpm(287
fdivrp
pop
pop
ins
or
mov
or
fstp
pop
mov
xor
sbb
ins
mov
pop
sub
aaa
aas
inc
mov
jae
lods
or
mov
inc
movs
xchg
or
pushf
jle
daa
dec
jae
mov
adc
fst
or
sahf
imul
dec
imul
daa
fild
and
push
lods
pop
fisub
ror
pop
cmp
sbb
lods
movs
cmp
pop
mov
sbb
mov
imul
fwait
xor
dec
cmp
pop
xchg
mov
xlat
ror
mov
dec
(bad)
loopne
es
xchg
xchg
add
mov
outs
nop
or
and
test
imul
inc
push
not
inc
fist
pop
int
movs
inc
dec
je
and
nop
clc
movs
clc
mov
add
div
lock
inc
adc
es
lock
call
mov
icebp
and
je
xor
mov
mov
push
push
arpl
mov
adc
(bad)
sub
or
in
inc
add
dec
add
add
xchg
mov
std
sub
pop
jg
inc
cmp
inc
mov
daa
xchg
jno
mov
sbb
cmc
cmp
ss
push
inc
(bad)
or
sbb
daa
adc
add
mov
or
neg
fs
lahf
push
push
pop
inc
jns
or
sub
jae
xchg
pop
add
adc
cmp
adc
pop
push
add
popf
pop
mov
test
mov
mov
push
inc
mov
pusha
push
jne
jecxz
mul
sti
(bad)
and
daa
ds
sti
xchg
push
test
mov
sahf
cmps
jge
cmp
push
inc
ins
mov
ret
in
clc
push
pop
stc
in
xchg
mov
test
clc
jmp
mov
enter
jmp
cmp
add
and
sbb
scas
fisub
test
(bad)
test
clc
mov
push
inc
push
cld
push
movs
and
and
(bad)
cwde
push
jae
add
in
jmp
stc
cmp
leave
and
dec
clc
call
ds
push
or
push
mov
fsub
inc
fimul
lahf
in
xor
fsub
cmp
or
shl
xor
pusha
or
call
pop
mov
enter
inc
(bad)
adc
dec
cmp
les
js
or
xor
outs
in
ror
add
jns
imul
pop
int
jmp
out
imul
ds
cdq
mov
mov
sti
cmp
imul
inc
outs
xchg
mov
mov
xor
popf
sbb
mov
fld
sub
fs
leave
dec
xchg
pop
shr
cmp
out
ror
mov
pusha
cmp
neg
nop
push
aad
mov
jmp
(bad)
shl
dec
mov
xor
stos
or
xchg
jmp
add
aaa
nop
dec
mov
jmp
pushf
mov
jbe
dec
stos
out
adc
adc
dec
mov
out
sti
mov
jnp
and
xor
add
icebp
mov
dec
test
push
in
out
jmp
call
pop
xchg
add
jecxz
in
popa
jno
iret
test
rol
sbb
sub
inc
(bad)
cld
nop
sbb
push
in
rol
js
push
xor
add
aad
std
in
fs
jo
cmps
std
jne
xchg
xchg
push
mov
xchg
xor
pushf
retf
std
loopne
test
jo
dec
push
push
mov
add
push
dec
repz
movs
bound
outs
xchg
mov
in
stc
out
ds
add
cmp
outs
cmp
push
adc
daa
test
push
mov
inc
push
mov
lods
or
inc
adc
xor
push
xor
adc
mov
push
inc
test
add
push
inc
mov
adc
cli
in
loope
test
jno
repnz
aaa
loopne
(bad)
movsx
test
fdiv
ins
call
aam
xor
dec
or
rcl
mov
test
jno
shr
add
inc
or
inc
jmp
ins
enter
pusha
aaa
xchg
cmps
in
movs
and
aaa
call
add
jmp
imul
out
cdq
mov
mov
fs
aam
push
push
imul
xchg
rcl
pop
mov
mov
mov
arpl
movs
sub
adc
jne
(bad)
lods
popf
mov
loope
popa
test
test
pusha
ret
movs
aaa
movs
pop
ror
mov
jno
cmp
nop
dec
pop
jno
cmp
mov
aaa
cwde
jno
lods
or
aaa
outs
mov
xor
aaa
aaa
in
rcl
cmp
in
in
or
popa
add
add
xchg
daa
ins
ret
push
test
mov
loope
sbb
or
test
pop
inc
cwde
nop
pop
sahf
movs
adc
xchg
push
mov
add
pushf
and
or
fs
movs
pop
dec
or
aas
cs
sub
cmp
pusha
or
inc
mov
bound
jle
push
sub
je
ss
and
push
dec
jmp
cmc
or
cmp
jge
call
stc
repz
xor
mov
sbb
(bad)
aad
inc
push
fst
xchg
pop
or
retf
ret
test
imul
mov
pop
data16
clc
xchg
dec
push
cmp
ins
or
inc
cs
dec
inc
pop
inc
scas
in
adc
or
aam
lock
push
push
inc
jmp
test
addr16
sub
rol
mov
jg
mov
jmp
mov
ja
fisubr
fistp
or
rcl
adc
mov
sub
arpl
cmp
adc
loopne
dec
add
add
sub
scas
mov
cmp
lahf
push
dec
adc
xor
cwde
dec
or
fwait
jmp
add
add
pop
xor
or
adc
inc
outs
leave
dec
out
and
fst
or
sbb
mov
scas
xchg
mov
shl
(bad)
dec
(bad)
out
jno
cmp
push
or
push
lahf
fcmovb
or
mov
add
sbb
or
sub
or
test
test
xor
dec
and
aas
xchg
inc
push
xor
or
add
and
ror
mov
inc
jle
int3
pop
xchg
mov
mov
mov
adc
int3
cli
pop
jmp
cmp
sub
or
cld
js
push
fwait
jp
add
sub
das
xor
leave
sub
jge
dec
shr
test
add
je
mov
push
repnz
cmp
shl
jmp
in
imul
adc
fmul
jno
jne
jmp
stos
rol
iret
test
cmp
sub
pusha
jmp
scas
enter
and
aaa
pop
and
mov
add
scas
enter
jmp
ds
(bad)
into
ror
shl
stos
push
leave
pop
pop
aaa
adc
jb
sub
xor
xchg
lods
invlpg
leave
fistp
jns
jne
test
cmp
pop
ins
popa
and
sub
adc
jnp
ins
arpl
jg
ins
and
jge
lahf
inc
outs
jne
pop
or
jb
outs
arpl
fwait
(bad)
or
add
pusha
lods
mov
add
or
mov
pop
add
stos
lock
(bad)
mov
push
outs
imul
inc
arpl
sbb
xor
push
inc
je
inc
inc
jns
addr16
fcomp
adc
pusha
inc
adc
dec
daa
dec
rcr
idiv
fstp
into
clc
sub
cmp
or
sti
mov
int3
dec
ja
enter
inc
scas
xlat
mov
mov
sti
add
(bad)
mov
fsubr
push
lock
and
jno
ret
cmp
lds
xchg
cld
stc
loopne
fwait
pop
(bad)
lds
lods
jnp
push
cmp
jmp
xabort
sub
(bad)
into
mov
adc
inc
adc
push
cmp
xchg
push
or
and
iret
jecxz
sbb
or
(bad)
and
scas
and
jno
bound
ret
mov
outs
cmps
call
and
rol
push
gs
jmp
js
sub
clc
idiv
add
dec
in
dec
(bad)
data16
sbb
push
jmp
jmp
aam
add
lock
sub
unpckhps
mov
cmc
dec
pop
cdq
std
pop
out
or
xor
xor
add
clc
and
pop
cmp
retf
mov
dec
jb
cmps
cmp
mov
mov
add
arpl
mov
adc
or
mov
daa
pop
push
stos
pop
jb
cmp
push
add
in
arpl
sbb
dec
repz
sub
mov
loopne
rcl
popf
lds
(bad)
xor
jno
arpl
ins
mov
(bad)
hlt
fisttp
cld
das
push
mov
or
repnz
fbstp
ins
dec
(bad)
dec
cmp
sbb
add
cmp
xor
out
pushf
push
in
mov
dec
jb
bound
(bad)
out
and
pop
sbb
popa
mov
into
psubusw
push
adc
cmps
jmp
jp
into
push
pop
int
sub
pusha
add
aam
cmp
cmp
je
(bad)
fistp
push
xchg
inc
clc
xchg
pop
bound
sub
pop
jae
retf
xor
test
aam
inc
sti
sar
add
add
sub
mov
cmp
(bad)
movs
sub
push
or
adc
sbb
ret
xchg
adc
bound
add
std
push
scas
or
adc
inc
add
retf
movs
and
push
push
es
mov
push
sbb
sbb
mov
out
mov
jle
sbb
in
xchg
sbb
pop
mov
cmp
pushf
sbb
add
int3
sbb
add
adc
out
or
enter
pop
dec
ror
rol
bound
mov
call
or
pop
jbe
inc
inc
push
test
add
fsub
scas
ds
mov
sub
xchg
sti
cmp
add
outs
jno
inc
mov
dec
mov
fnstenv
in
movs
leave
loope
adc
or
xor
inc
and
dec
lock
enter
pop
pop
imul
aam
inc
add
clc
jl
inc
xor
inc
sbb
push
jb
cli
out
cmp
leave
cwde
add
pop
loop
or
xchg
sar
xor
add
loop
inc
lock
inc
inc
dec
jne
xchg
cld
bnd
sbb
sbb
inc
jno
mov
popf
nop
add
cmp
fild
hlt
mov
in
out
adc
jne
xor
(bad)
cmp
add
mov
popf
pushf
nop
push
xor
jae
in
jno
mov
sbb
sub
jae
jne
lods
mov
stos
fisub
sbb
pop
mov
xchg
lds
js
fldenv
pop
jbe
fisttp
inc
sbb
fisubr
sub
aam
test
ins
add
xchg
cwde
call
xchg
daa
daa
popf
dec
sahf
setno
daa
xchg
xchg
xchg
xchg
daa
daa
daa
daa
cwde
cdq
call
popf
sahf
lahf
daa
daa
daa
daa
add
daa
test
daa
daa
mov
daa
daa
mov
daa
daa
jo
jb
xor
cmp
je
movs
and
enter
lods
adc
xor
mov
and
jmp
in
dec
sub
push
add
add
jo
nop
dec
add
shr
adc
or
sub
push
mov
inc
clc
jmp
call
sbb
test
jne
sbb
inc
add
push
cs
dec
xor
cmp
jle
(bad)
and
imul
test
aam
mov
cli
jge
pusha
mov
cmp
(bad)
sub
mov
cs
fild
or
test
sub
cmp
pop
inc
gs
or
mov
int
push
mov
pop
fbld
ror
pop
or
jl
or
mov
mov
mov
fwait
jmp
retf
je
mov
and
sbb
sahf
dec
(bad)
jne
mov
and
jmp
das
mov
in
je
jmp
cmp
sbb
mul
add
lods
xchg
xor
sub
fisttp
xor
mov
push
or
stos
mov
push
mov
inc
push
or
or
dec
sbb
cmp
jb
or
bndstx
mov
add
pushf
(bad)
call
(bad)
ss
cmps
push
mov
mov
mov
cmp
je
mov
mov
ror
pop
dec
adc
fild
call
jmp
add
mov
cmp
mov
push
add
add
adc
add
mov
xor
pop
(bad)
jle
add
mov
add
notrack
fwait
out
mov
push
adc
mov
jns
loopne
mov
cmp
ja
jb
add
add
call
(bad)
ins
cmp
in
lock
mov
or
mov
and
inc
push
(bad)
test
xor
adc
inc
cmp
pop
dec
ror
je
inc
xlat
or
xchg
(bad)
sti
jg
sbb
dec
or
lods
cmp
call
stos
mov
pop
test
and
sub
das
ret
les
cli
icebp
test
or
ror
jle
pop
jmp
es
clc
push
push
or
mov
jl
pop
sbb
xlat
inc
mov
jl
dec
cld
and
nop
cmc
pop
xor
push
iret
mov
mov
mov
and
or
inc
inc
adc
adc
test
int3
add
call
mov
scas
mov
(bad)
pop
sbb
outs
add
cmp
xlat
mov
push
sbb
lahf
inc
mov
fs
add
(bad)
sub
dec
xor
jecxz
hlt
popf
sbb
out
cmp
inc
push
xchg
add
mov
lods
add
push
dec
sbb
xchg
cmp
rol
iret
sahf
ret
test
lods
pop
(bad)
popa
sbb
bound
mov
imul
add
push
mov
mov
pop
cmp
ss
ror
xor
mov
les
iret
(bad)
std
repnz
and
fld
fstp
cmp
or
adc
in
imul
add
inc
add
or
mul
mov
push
or
cmp
or
jae
popa
and
pop
retf
add
mov
mov
jno
sub
cld
stos
jne
xor
or
jne
into
repz
mov
ret
inc
mov
out
adc
dec
push
adc
mov
cmp
ror
dec
outs
xor
iret
sar
repz
add
push
add
jmp
pop
jmp
cmp
or
jmp
adc
push
mov
add
sub
js
mov
mov
jp
test
add
xor
add
call
mov
cmp
rol
sbb
mov
ins
ja
jbe
ins
ja
jae
jne
movs
stc
add
pop
adc
stos
xchg
outs
or
dec
add
push
cwde
or
outs
icebp
jbe
fnstenv
cmp
fs
out
or
clc
cmp
lods
mov
or
nop
xlat
dec
pop
push
mov
inc
fwait
or
push
call
inc
pushf
les
dec
enter
iret
and
iret
loop
dec
pop
mov
loope
mov
add
jmp
pop
cmp
clc
sub
or
popa
addr16
pop
inc
inc
push
and
and
cmp
mov
mov
or
pop
cmp
dec
ficom
cld
aaa
retf
enter
hlt
or
or
fsubr
iret
(bad)
repnz
and
mov
(bad)
dec
nop
push
sar
pop
dec
mov
inc
imul
ror
cs
xor
or
push
outs
push
jmp
(bad)
push
sbb
sbb
adc
xor
out
dec
outs
inc
ins
outs
sbb
inc
cmps
xchg
push
jle
dec
add
pop
inc
ins
popa
push
xchg
or
and
xchg
(bad)
cmp
and
ss
push
mov
je
or
jb
or
outs
and
pusha
ins
gs
push
cmp
popa
test
or
es
add
(bad)
jl
push
dec
pop
test
add
mov
add
nop
cwde
add
pop
ja
and
sbb
ins
cmp
jns
push
adc
loope
xor
shl
je
outs
cwde
sub
call
adc
mov
gs
in
or
push
push
mov
es
lods
add
add
and
ds
push
add
jbe
add
mov
mov
push
and
xchg
dec
dec
in
movs
mov
jae
jl
ins
or
leave
pop
je
or
adc
fsub
int3
scas
ds
cs
xor
or
and
xchg
cld
cs
ds
and
div
or
lods
nop
jl
add
sub
iret
add
aam
aam
sahf
pop
or
adc
test
and
nop
and
mov
jb
ds
mov
mov
dec
imul
and
in
imul
dec
cmp
push
adc
nop
mov
pop
pushf
mov
mov
mov
adc
push
aas
sub
push
test
or
jb
or
add
daa
push
and
and
xchg
test
dec
adc
movs
dec
mov
dec
push
mov
push
je
and
inc
and
sbb
js
lods
dec
aas
and
loopne
or
fimul
xchg
leave
jae
or
push
push
mov
push
(bad)
lock
dec
and
fisub
imul
push
add
(bad)
(bad)
mov
in
jae
jmp
xor
or
sbb
mov
out
pop
sbb
adc
pusha
or
inc
sahf
nop
clc
imul
daa
hlt
push
sub
inc
cmp
inc
out
loop
and
xlat
push
lock
in
sub
(bad)
daa
js
add
push
inc
push
cmp
pusha
sahf
iret
inc
adc
adc
sahf
or
movs
fucom
pop
xor
and
sub
add
mov
xchg
sub
adc
mov
push
sbb
clc
or
push
and
hlt
or
mov
sub
andps
inc
daa
adc
ja
adc
test
pop
sub
add
dec
lock
fimul
test
pop
je
ins
daa
jns
outs
movs
push
adc
and
idiv
shr
sub
and
inc
pop
pop
shr
cld
lds
std
(bad)
cld
(bad)
sti
stos
xor
xor
inc
or
or
inc
pusha
and
hlt
fisub
mov
pop
cmp
sbb
and
add
push
sbb
aam
xor
sahf
dec
je
push
adc
add
fs
push
dec
jns
mov
xor
js
sub
lock
push
push
(bad)
cmovns
std
fild
inc
fs
jo
push
add
pushf
jae
push
rcl
sahf
cmps
add
test
fisubr
outs
adc
fiadd
pop
mov
scas
sub
rol
push
adc
out
out
pop
enter
cmp
shl
sub
test
fdivr
imul
ins
outs
pop
jbe
jbe
ret
in
pop
outs
ins
pusha
sub
data16
div
push
rcl
mov
fisttp
push
nop
push
mov
dec
pop
sub
push
and
scas
pop
sbb
mov
push
or
cmp
(bad)
sub
jae
add
pop
mov
pop
dec
enter
sub
outs
xchg
jb
sbb
out
push
push
int3
shl
inc
je
mov
je
pop
jne
jbe
jo
out
fst
push
xor
jno
(bad)
clc
cmp
push
div
fwait
mov
jae
fdivr
in
jne
out
mov
and
test
ja
cmp
ret
jg
sub
stos
mov
mov
call
jbe
js
cld
push
pop
push
iret
jae
push
pop
mov
cmp
add
sub
mov
dec
cld
mov
push
or
push
(bad)
cld
or
cs
inc
jb
inc
xor
push
sub
mov
shl
test
enter
jge
mov
inc
adc
leave
fld
pop
test
jl
das
adc
cs
jge
js
xchg
mov
inc
fs
jnp
jae
repz
test
mov
lss
or
mov
add
inc
push
xchg
or
jb
pop
or
xor
pop
or
inc
(bad)
fadd
and
ror
inc
in
or
enter
or
adc
enter
sbb
sbb
and
mov
xor
enter
in
shl
jns
mul
fadd
out
les
sahf
out
sahf
inc
push
arpl
lea
das
icebp
jns
test
aaa
test
repnz
cwde
xor
(bad)
nop
sub
sub
inc
les
lds
lds
dec
repz
sahf
ja
leave
es
push
pushf
test
retf
cwde
je
push
mov
and
push
sub
daa
aas
or
push
push
cmp
inc
xchg
mov
and
mov
cmp
(bad)
adc
pop
pop
push
scas
jle
movs
aaa
mov
or
fistp
es
cmp
outs
outs
dec
(bad)
cld
mov
cmp
movs
mov
or
hlt
fnstsw
push
loopne
iret
jo
bound
test
popa
call
and
cmp
jo
pop
iret
inc
sti
mov
int3
cmp
cmp
mov
fdiv
clc
mov
push
fadd
sbb
cld
sub
dec
and
rol
adc
inc
inc
and
lock
dec
sbb
(bad)
mov
cmps
jecxz
adc
mov
mov
push
rcr
mov
inc
fcom
out
xor
mov
aam
dec
jns
out
or
gs
outs
jge
dec
pop
sbb
inc
(bad)
int
dec
add
jns
mov
aas
mov
movs
sub
xor
jno
lahf
push
in
push
xchg
push
fdiv
or
push
xor
mov
inc
xchg
mov
push
fs
(bad)
test
mov
push
mov
cdq
push
sbb
fmul
mov
jg
lea
aas
add
(bad)
stc
(bad)
clc
push
push
push
push
push
out
out
(bad)
push
data16
push
dec
push
pop
sahf
out
sahf
jo
je
or
dec
push
push
push
dec
xor
push
or
sahf
cmp
les
xor
add
cmp
or
inc
add
clc
add
mov
inc
mov
mov
dec
repz
fdivr
ret
or
pop
ret
hlt
imul
push
arpl
add
dec
cmp
xlat
push
in
aaa
jl
pusha
push
push
lds
xor
fidiv
test
les
pop
(bad)
jns
jnp
push
sbb
lock
add
jmp
iret
inc
and
pop
push
jl
inc
mov
pusha
sub
xor
mov
dec
dec
fs
or
add
or
inc
inc
push
push
xchg
lods
adc
inc
jge
push
data16
push
fimul
push
cdq
xchg
cdq
inc
ins
gs
cdq
push
push
cmp
jne
outs
inc
xor
pushf
cmp
jo
in
cmp
(bad)
xor
addr16
adc
cmp
lods
(bad)
hlt
scas
hlt
and
cmp
fcmovu
mov
cmp
ds
push
inc
les
in
push
inc
cld
sbb
or
cmp
cmp
xlat
bound
cmp
je
sbb
retf
into
or
js
jmp
add
fcmovb
push
(bad)
pop
or
add
call
inc
add
push
sub
add
in
cdq
sub
(bad)
jne
or
xor
sbb
outs
jmp
dec
pop
xchg
pop
retf
(bad)
add
jne
ficom
fistp
inc
jmp
mov
ja
push
sbb
sub
cmp
xchg
or
or
ret
inc
pop
jl
cmc
mov
mov
loop
mov
mov
setl
or
and
lods
not
inc
add
mov
fistp
sar
clc
mov
repz
jne
inc
dec
jne
and
sub
mov
pop
sbb
sub
xchg
call
mov
call
cmps
clc
cs
or
push
inc
or
(bad)
lds
js
add
sti
cs
push
xchg
rol
hlt
movs
leave
cwde
pushf
arpl
cmp
mov
cld
add
ret
sub
or
add
or
or
in
(bad)
inc
mov
xchg
sbb
sbb
adc
fidivr
inc
mov
inc
add
gs
clc
dec
or
adc
repnz
add
push
add
fsub
hlt
cmps
fld
aas
push
in
lock
sub
mov
add
or
cmp
inc
pop
pop
push
(bad)
add
cmp
imul
or
mov
mov
sub
icebp
je
cli
pop
pop
inc
and
xor
pop
xor
xor
sbb
aad
imul
xchg
sbb
imul
mov
inc
adc
jecxz
mov
fisubr
push
(bad)
call
push
cmp
ds
cmp
jg
mov
mov
(bad)
cmp
inc
adc
sub
add
mov
lea
pusha
cmp
push
jl
inc
xor
out
rcr
jne
(bad)
mov
inc
dec
sub
xchg
outs
lds
inc
adc
jg
lods
test
push
sub
xchg
mov
js
js
nop
dec
popf
dec
mov
add
add
xchg
xchg
enter
mov
pop
cmp
clc
adc
pop
ror
lods
(bad)
outs
add
inc
hlt
pop
nop
dec
add
cmp
pop
cmps
or
dec
jecxz
mov
xchg
add
call
lods
rcl
jl
fdiv
in
jne
push
sbb
pusha
pop
xor
lock
push
mov
(bad)
jl
inc
push
call
and
push
in
mov
cmp
inc
pop
loopne
sub
mov
push
imul
icebp
cmp
fidiv
ficom
call
fistp
jecxz
(bad)
(bad)
dec
call
shr
pop
push
movd
outs
js
(bad)
adc
push
add
sbb
int
sbb
out
test
adc
xor
es
into
shl
jge
and
int
shr
mov
push
movs
ret
fidiv
mov
sbb
mov
push
aaa
jle
jp
scas
js
ins
dec
xchg
mov
hlt
mov
into
hlt
or
test
aad
or
mov
fs
mov
imul
out
int
adc
mov
enter
ja
enter
rol
pop
push
dec
out
rol
sub
jnp
add
xor
jecxz
sbb
dec
pop
in
cs
or
rol
mov
dec
inc
or
(bad)
imul
jb
sub
jecxz
(bad)
loopne
xchg
cmp
push
sbb
cmp
adc
lahf
add
cmp
rcl
sti
and
pop
or
nop
push
or
fmul
jo
daa
inc
mov
jae
shl
lahf
enter
(bad)
es
jbe
cs
mov
inc
inc
mov
pop
push
or
jne
pop
xor
in
sbb
mov
cmp
in
inc
(bad)
lock
les
sbb
xlat
out
adc
rol
jns
and
mov
pop
lds
test
cdq
pop
nop
add
sahf
and
adc
nop
shl
mov
lock
inc
add
test
lahf
dec
inc
in
adc
dec
cld
mov
mov
shr
or
mov
cmp
sub
(bad)
jae
addr16
add
dec
add
or
push
mov
push
mov
mov
mov
(bad)
outs
xor
sub
pusha
xchg
pop
fistp
(bad)
loopne
inc
mov
push
leave
jle
pop
lock
pop
jp
and
mov
or
mov
xor
pusha
inc
ins
pusha
leave
inc
inc
aaa
add
(bad)
mov
sub
lea
add
adc
sbb
xchg
cld
mov
jmp
ret
pop
and
add
loope
in
lock
push
inc
adc
xor
cmp
jne
sbb
or
add
ficom
or
sub
jbe
dec
or
jne
cmp
cmp
dec
or
mov
adc
fsubr
and
pop
cmp
ja
xor
cmp
mov
lahf
cdq
add
cmp
mov
or
sbb
pop
mov
(bad)
call
add
(bad)
jbe
xor
add
fs
push
jne
popa
imul
clc
imul
sbb
push
in
pusha
nop
js
jecxz
xchg
dec
push
xor
shr
ins
dec
xchg
mov
mov
dec
push
adc
sub
sbb
mov
(bad)
dec
cmp
push
adc
xor
fmul
fisttp
cwde
jo
add
xlat
fdivr
cmps
mov
or
jge
aas
add
mov
sar
sub
cmp
mov
out
call
add
xor
jo
mov
cmp
movs
push
or
or
or
fild
pop
arpl
push
cmps
jle
xchg
inc
into
dec
xor
cmp
jecxz
push
mov
jo
je
mov
or
mov
ret
pop
mov
sub
pop
push
sub
push
shl
pop
fxch
add
mov
jmp
cmp
push
fnsave
mov
mov
sbb
and
mov
nop
sbb
movs
mov
push
imul
jmp
outs
sub
inc
push
mov
(bad)
mov
fmul
aas
xchg
jno
inc
jo
sbb
mov
add
jge
inc
mov
or
push
or
pop
jae
jae
pop
dec
js
loop
inc
adc
cmp
call
std
test
int3
or
leave
push
add
xor
ins
xchg
or
ds
lock
das
punpckhdq
prefetcht0
mov
sub
or
dec
out
mov
mov
sub
shl
loop
adc
or
jbe
nop
sti
cmc
mov
sbb
jo
mov
fisub
aad
push
cmp
or
inc
and
jmp
mov
hlt
dec
dec
test
push
xchg
es
sbb
mov
test
out
test
dec
popa
xchg
inc
ret
aas
push
sbb
pop
int
sbb
sbb
add
push
call
adc
push
mov
mov
push
fiadd
aaa
add
mov
aad
std
or
add
dec
or
pop
add
adc
jne
ficom
jp
rcl
std
bound
movs
in
jae
jo
mov
inc
dec
xor
jno
and
dec
pop
dec
mov
adc
pop
in
cmp
je
adc
aaa
call
and
(bad)
mov
mov
cli
or
or
popf
push
mov
cmp
and
mov
adc
add
xor
popa
dec
retf
js
aad
dec
nop
jne
(bad)
cdq
sbb
out
mov
pop
xor
outs
xor
shl
xchg
pop
pop
cwde
iret
pop
test
in
add
cwde
fdivr
mov
es
mov
add
test
add
and
lock
xchg
outs
fmul
lods
jmp
dec
dec
mov
sub
jg
dec
mov
dec
inc
jne
stos
and
jl
aaa
pop
nop
test
xor
sbb
inc
and
xchg
xor
add
paddsb
adc
aas
loopne
inc
dec
mov
add
inc
lahf
jecxz
dec
fwait
je
sub
push
test
jo
fisttp
add
cmp
push
xchg
inc
jne
fucomp
push
dec
scas
in
push
cmp
jne
add
dec
pop
jb
pop
or
xor
mov
mov
sbb
aaa
cmp
inc
push
sbb
jbe
inc
push
popa
push
leave
xchg
pop
cmps
jno
movs
loop
sbb
sbb
mov
rol
in
and
cmp
jge
fs
pop
test
(bad)
popf
add
push
shl
mov
jge
(bad)
dec
popa
mov
pop
pop
int3
lods
inc
clc
add
std
sbb
call
ror
mov
push
and
push
sbb
mov
mov
mov
push
(bad)
lds
test
data16
adc
mov
adc
add
mov
add
jp
jae
mov
loopne
cli
or
je
stos
jle
mov
loope
cmps
sub
jl
jl
push
push
inc
adc
add
fidiv
dec
mov
dec
inc
cli
idiv
push
test
int3
fimul
cmp
je
sbb
jbe
cmp
ja
adc
(bad)
loop
bt
jb
ja
out
shr
(bad)
mov
jmp
inc
cmp
jne
inc
dec
jne
les
and
dec
and
js
add
or
loop
ret
movs
adc
fcomp
inc
sub
out
sub
repnz
mov
ds
dec
xchg
cld
pop
inc
mov
cmp
lock
lock
(bad)
add
and
mov
push
add
enter
in
push
es
loope
pop
outs
imul
adc
xchg
fs
pop
mov
sub
lea
mov
(bad)
into
add
adc
push
or
mov
aaa
leave
and
popf
jne
push
sub
xor
fadd
and
add
clc
xor
sub
bound
call
loope
or
mov
cmps
(bad)
sar
fidivr
or
mov
mov
cmp
or
lods
mov
push
sbb
jne
adc
test
call
inc
test
je
gs
push
pusha
ss
push
sub
daa
push
aaa
xor
sbb
inc
je
dec
fstp
xchg
in
clc
gs
xchg
test
cmc
bound
popa
movs
mov
or
push
inc
mov
adc
mov
mov
add
and
push
xor
add
pop
cmp
mov
lods
mov
jne
xchg
sbb
push
or
sti
ret
xchg
xlat
sbb
leave
loope
pop
adc
test
xchg
addr16
in
aas
xchg
cmp
push
cmp
arpl
push
or
or
pop
add
or
shl
in
and
pop
inc
xor
sbb
in
retf
xor
fcom
mov
inc
cmps
lock
and
add
loopne
and
lock
gs
mov
pop
fstp
pop
push
ins
daa
cmp
fcomp
xchg
outs
pop
pop
jo
xchg
cmp
loope
pop
das
(bad)
mov
cld
sahf
cmp
jns
dec
rol
push
add
out
cmp
test
inc
dec
sti
outs
push
dec
mov
popa
les
js
mov
pop
sbb
rcl
mov
aam
or
(bad)
movs
xchg
inc
jg
sbb
jmp
sub
pop
dec
sub
jl
pop
setle
jle
dec
pop
mov
je
into
and
in
pop
ror
jbe
sar
cmp
loop
jno
xor
inc
cwde
movs
sbb
mov
jno
popa
xor
push
mov
jmp
add
push
pop
dec
out
dec
movs
or
cmp
sub
fwait
jnp
call
mov
or
test
adc
add
xlat
mov
sbb
shl
jb
fucom
inc
add
adc
popw
or
je
cwde
ja
fild
and
sub
pop
and
enter
mov
pop
repnz
inc
out
pop
adc
inc
clc
pop
adc
ss
adc
clc
nop
arpl
cmp
push
xor
ins
add
cmps
sub
cmp
iret
out
test
add
je
or
les
mov
dec
adc
sahf
and
add
add
mov
sub
cmps
add
xchg
adc
fld
or
jb
aaa
inc
pop
dec
call
mov
mov
or
mov
adc
fs
pusha
cmp
nop
hlt
lock
(bad)
adc
push
sbb
fmul
add
bound
add
add
jmp
das
cmps
pop
xchg
and
or
jbe
xchg
push
test
fcomp
pop
data16
dec
sub
iret
pop
aaa
sbb
call
or
pop
bound
and
xlat
iret
sbb
fstp
shl
dec
ss
push
shr
or
mov
addr16
push
pusha
jnp
mov
xchg
push
sub
jb
dec
je
jmp
popf
push
fsubr
jb
pop
ret
in
pop
rol
push
daa
cmc
sbb
aaa
inc
ds
inc
push
fnstcw
inc
outs
data16
mov
(bad)
outs
xchg
xlat
mov
ffreep
pop
add
iret
pusha
jo
and
lahf
fcom
(bad)
int
cmp
stos
ret
sub
and
fnsave
popf
dec
pop
sub
add
pop
push
sub
in
sub
or
mov
stos
enter
cmp
or
push
push
mov
or
sbb
pop
push
inc
mov
addr16
mov
in
jo
arpl
cld
sti
enter
repz
jbe
inc
add
rcr
pop
pop
push
push
add
add
xchg
or
ror
adc
fisub
jmp
xor
mov
dec
add
call
sub
ja
call
(bad)
dec
clc
shr
cmc
nop
mov
adc
jecxz
lahf
adc
movlps
jp
push
ret
jo
sbb
mov
test
loopne
adc
lahf
add
rcl
pop
or
outs
rcl
cdq
stos
aam
mov
js
sub
jne
xor
rcl
out
pop
ret
mov
mov
fdivr
xor
cld
lock
pop
jecxz
js
in
push
in
dec
cmp
jne
xchg
add
inc
shl
xchg
cmp
gs
out
iret
dec
aam
sbb
pop
lock
scas
pop
cmps
pop
pop
pusha
aad
in
call
fdiv
pusha
sbb
adc
imul
ss
cmp
cmps
mov
fwait
cld
adc
push
xchg
(bad)
stos
and
aad
xchg
sub
(bad)
push
sbb
clc
and
sbb
dec
cmp
add
and
pop
sub
mov
ret
ror
es
imul
inc
and
xor
ds
repnz
sbb
adc
retf
or
xchg
mov
pushf
or
loopne
stc
and
push
arpl
jne
call
ficomp
pop
cdq
mov
call
pop
adc
mov
sbb
ficomp
fdivr
loopne
mov
cmp
lods
icebp
mov
ins
push
imul
aad
adc
repnz
sub
js
or
or
jb
test
inc
rol
lea
jmp
cmp
mov
xor
xchg
adc
fidiv
rcl
add
mov
imul
mov
int3
jmp
sbb
dec
inc
jno
imul
loopne
jno
mov
test
jmp
fwait
add
mov
add
adc
dec
sub
ss
ins
xchg
out
add
cmp
sbb
push
call
mov
push
push
lods
test
and
sbb
call
jo
stc
and
mov
dec
push
xor
fs
and
xor
dec
loopne
inc
js
cmp
movs
mov
and
dec
dec
adc
les
dec
jno
movs
xor
jne
sbb
arpl
inc
(bad)
loopne
dec
dec
dec
jmp
popa
push
inc
or
fistp
dec
wrmsr
out
fmul
mov
test
xor
in
fwait
pop
rol
inc
xchg
call
xor
add
and
add
in
in
dec
jl
out
mov
xchg
gs
loopne
pop
mov
lds
adc
data16
or
sbb
adc
adc
ins
(bad)
jo
shl
popa
add
xchg
mov
pop
push
or
icebp
sub
inc
movs
inc
adc
pop
sub
sbb
xchg
clc
int3
add
hlt
sbb
pusha
jo
ret
or
jmp
pusha
and
(bad)
dec
add
out
(bad)
ja
enter
and
add
and
dec
daa
ret
and
in
mov
add
je
add
xor
jb
mov
test
clc
je
(bad)
movups
jne
xchg
adc
mov
pop
sub
lods
and
movs
rcr
jb
into
adc
cmp
xchg
adc
out
add
sbb
pop
mov
mov
push
or
dec
ja
or
xor
mov
pop
arpl
inc
push
test
add
inc
push
mov
clc
mov
push
int3
sub
pop
std
xchg
jmp
sub
lea
push
mov
jg
lahf
sub
test
push
shr
push
lahf
add
add
inc
pop
cdq
imul
sbb
mov
inc
clc
bound
inc
jo
cmp
mov
pop
and
nop
imul
jge
out
popf
loope
adc
or
sbb
push
pushf
or
mov
pop
push
push
cmp
push
xchg
ins
sbb
test
loopne
faddp
pushw
ror
aad
scas
mov
mov
push
leave
add
push
loop
dec
and
push
mov
ret
xor
push
and
mov
sub
cmp
fnstenv
cmp
mov
and
add
into
movs
mov
icebp
sub
add
in
xor
mov
lea
imul
and
test
mov
call
sub
jmp
inc
movs
ins
or
sub
add
fcom
mov
aas
popa
loope
enter
(bad)
add
add
dec
enter
dec
(bad)
xchg
imul
or
jne
or
add
adc
pop
and
pusha
ret
daa
pop
or
ins
xlat
fld
test
sti
inc
push
or
or
add
icebp
push
xlat
push
inc
cwde
hlt
aad
jg
sbb
jmp
dec
fwait
test
cmp
pop
push
ins
hlt
popf
test
jo
(bad)
ins
add
xor
popa
ret
lea
or
push
popa
push
shl
pop
ret
test
ins
pop
jmp
xchg
pop
clc
lea
xor
outs
or
and
das
or
aam
push
js
jne
sbb
push
adc
jb
mov
lock
outs
xchg
sti
(bad)
mov
fld
ds
or
pop
sbb
jno
add
jae
loope
jmp
add
das
test
ficomp
ss
out
jae
push
cmp
jne
mov
cld
inc
cmp
shl
jl
pop
outs
cmc
test
jne
inc
mov
outs
xchg
jns
push
(bad)
test
std
cmp
push
jp
add
mov
push
daa
imul
jne
test
or
sbb
aaa
inc
imul
push
les
jo
cmp
cmp
int3
call
add
push
sub
pop
cmps
lock
mov
scas
add
movaps
mov
mov
dec
enter
test
je
inc
pop
inc
push
push
adc
test
out
sub
mov
inc
ins
je
cmp
jns
sbb
loopne
pop
fmul
cmp
call
xchg
mov
sbb
je
sub
or
add
mov
xlat
sbb
js
sub
push
lds
add
sbb
xor
sbb
gs
or
push
inc
and
out
arpl
aaa
sub
pop
pop
adc
xor
xchg
and
add
adc
and
dec
gs
ret
push
and
sub
pop
adc
ds
and
add
cmp
ret
inc
inc
stos
inc
add
das
popa
mov
lock
rol
add
push
xor
rol
or
popa
hlt
mov
cmps
pop
cld
ror
mov
mov
mov
push
and
cmp
mov
pop
xchg
pop
sbb
adc
mov
inc
adc
cmp
aas
mov
(bad)
push
or
jmp
in
adc
inc
(bad)
loope
icebp
adc
push
jge
lea
add
and
ror
adc
adc
scas
adc
jge
or
ja
jmp
inc
add
out
mov
xchg
repnz
addr16
push
inc
pushw
adc
aas
inc
inc
shl
push
cmp
in
push
sbb
test
mov
(bad)
mov
mov
outs
sbb
scas
push
xor
sbb
push
adc
jmp
lock
pop
in
ins
ror
je
xchg
fsub
jle
push
outs
sbb
adc
inc
xchg
jg
hlt
or
sti
lea
push
seto
mov
adc
push
fimul
aas
jmp
xchg
repz
shl
mov
mov
and
lds
xchg
adc
inc
test
or
inc
hlt
shr
push
xchg
ins
or
push
test
jg
jns
sbb
xchg
and
mov
cmp
jne
mov
or
or
mov
neg
dec
inc
jge
sbb
jle
inc
outs
outs
pushf
cdq
pop
ficomp
fadd
pusha
hlt
jl
and
ins
ss
xchg
and
jg
add
add
jg
je
dec
or
imul
nop
loopne
inc
or
loope
jmp
sbb
clc
retf
or
pop
sub
enter
enter
xchg
inc
push
jge
push
sbb
add
add
push
add
jo
or
xchg
add
push
mov
mov
and
cwde
adc
test
imul
pop
ins
xor
adc
inc
sbb
push
cmp
mov
rcr
fild
sub
fwait
call
xchg
popf
jnp
pop
sub
pusha
outs
bound
mov
and
movs
cmp
jmp
adc
loopne
xchg
jbe
and
pop
mov
sub
mov
pop
xlat
xor
sub
test
shl
add
adc
in
adc
out
lea
add
or
rcr
rcl
inc
js
sbb
test
mov
add
clc
and
sub
in
xor
dec
fs
bound
xor
cmp
mov
clc
jecxz
sub
push
loopne
retf
and
sub
xchg
fidiv
test
and
test
(bad)
and
fsub
sbb
pusha
pop
pop
outs
adc
mov
iret
pusha
cmp
pop
jbe
popf
sbb
sub
int
pop
inc
push
rcl
adc
or
adc
add
jbe
add
adc
ficomp
jmp
out
in
lods
push
add
call
fidivr
cmp
pop
test
or
add
mul
mov
stc
mov
push
jecxz
rcr
sub
push
mov
adc
mov
loop
in
in
mul
adc
mov
movs
loope
leave
push
cmp
xchg
xor
cdq
inc
bswap
jno
inc
nop
pop
add
jp
xchg
and
shr
sbb
mov
rol
sbb
push
imul
ja
fst
or
iret
ret
mov
fcomp
mov
pop
inc
loopne
or
cmp
test
and
sub
lods
push
and
jmp
pop
mov
jge
inc
arpl
jecxz
jae
add
data16
dec
and
push
inc
and
das
fsub
call
add
sub
popa
jl
mov
push
test
les
push
jge
in
xchg
lea
inc
or
jae
and
xor
rcl
scas
iret
retf
or
in
add
retf
rol
int3
jmp
dec
jnp
fist
ror
jge
enter
adc
(bad)
add
push
jp
aad
sub
cmp
adc
push
loop
inc
popa
push
or
xor
or
add
mov
push
rol
aam
or
adc
leave
pop
jae
sub
outs
loop
adc
cmp
test
or
jecxz
popf
movs
push
push
jae
(bad)
mov
inc
loope
mov
dec
sar
fnstcw
or
push
add
sbb
mov
add
mov
test
xchg
ret
pop
pop
in
mov
jg
xchg
adc
jno
and
jge
lds
scas
inc
ins
mov
(bad)
outs
or
or
inc
pusha
or
inc
sub
rcr
push
add
adc
fdivr
jge
jbe
add
or
fadd
loope
pop
pop
scas
jnp
sbb
cmp
jge
xchg
push
ror
sub
adc
cmp
jp
inc
ja
imul
call
or
cmp
loopne
and
je
push
jne
mov
test
ds
adc
ins
pop
test
jb
mov
push
mov
daa
cwde
and
or
jb
popa
aam
pop
inc
jmp
jmp
in
(bad)
adc
scas
(bad)
div
(bad)
clc
add
jo
sub
jnp
jle
or
sub
xlat
test
push
jb
cli
lds
loopne
jp
or
cdq
push
adc
xor
stc
xor
pusha
add
ret
int3
and
sub
xlat
(bad)
div
enter
aas
inc
ret
xchg
ja
or
icebp
inc
(bad)
popa
lods
sbb
jno
adc
jae
rcr
jno
mov
dec
jmp
sbb
(bad)
mov
sbb
adc
xor
mov
xchg
or
or
dec
cmps
(bad)
mov
adc
jge
scas
or
hlt
inc
dec
inc
mov
enter
adc
and
mov
add
mov
out
sub
jl
adc
lock
lock
in
or
mov
adc
imul
sub
add
inc
ss
jle
std
push
pop
xor
(bad)
rcl
loope
arpl
add
(bad)
(bad)
loopne
pop
fild
add
das
adc
mov
push
lahf
loopne
mov
pop
ret
pop
test
scas
fcmovu
mov
mov
inc
sbb
jmp
dec
das
pusha
mov
xor
pushf
or
arpl
push
sbb
mov
pop
dec
iret
mov
mov
sbb
lahf
jg
add
outs
jo
lods
or
inc
imul
push
repnz
inc
xor
inc
dec
js
lock
jp
lahf
aad
adc
xor
dec
adc
or
adc
or
lods
inc
cs
pushf
daa
pop
mov
shl
pusha
(bad)
aam
je
xchg
jne
outs
and
int
adc
or
adc
les
ret
pop
inc
popa
cmp
scas
retf
lock
inc
pop
aam
xchg
jno
mov
test
shr
add
stos
mov
dec
aas
add
push
aaa
push
fcomp
movs
mov
push
sub
retf
push
ds
or
push
ror
pop
in
add
pop
mov
push
shr
cmp
(bad)
jmp
push
rol
jmp
arpl
adc
movs
lds
test
sbb
add
or
mov
or
adc
shr
or
push
jge
push
js
fisttp
rcr
sub
cmp
xchg
outs
mov
dec
enter
add
xchg
or
clc
push
xchg
inc
stos
mov
push
rcl
clc
xor
cmp
sbb
pop
daa
in
dec
in
fcom
xchg
and
jo
xchg
push
test
repz
adc
add
jbe
movaps
mov
xor
ret
dec
inc
sub
imul
pop
(bad)
adc
jne
pop
fwait
cli
push
or
jo
inc
cmp
jl
nop
inc
mov
mul
sub
jno
aaa
dec
cdq
(bad)
daa
and
and
pop
test
dec
push
push
xchg
sub
ins
mov
xchg
fild
cmp
xchg
mov
inc
fidiv
jo
push
or
push
fwait
or
inc
and
xchg
int3
push
adc
inc
js
fist
pop
push
inc
push
rcl
mov
add
inc
shr
je
inc
xchg
sub
add
sbb
inc
(bad)
mov
rol
imul
sbb
and
pop
js
ret
adc
cs
mov
or
(bad)
and
add
fild
cmp
add
sub
push
jle
test
js
ret
and
inc
xchg
outs
mov
jb
out
ret
cmp
out
dec
lods
test
adc
cdq
sbb
xlat
ret
jl
push
jo
test
adc
push
inc
adc
push
aad
mov
icebp
cmps
xchg
test
mov
ret
mov
or
cmps
popf
cmps
lock
ds
es
or
repnz
js
adc
dec
pop
cli
push
mov
mov
arpl
in
pop
into
cmp
aaa
test
loopne
pop
pop
mov
or
and
enter
sbb
dec
or
dec
adc
ficom
loopne
push
int3
push
inc
retf
xor
in
pop
call
pop
add
push
pop
ret
xor
pop
xor
pop
xor
and
cmp
push
rol
lods
popa
pusha
cmp
add
out
inc
lods
push
and
test
mov
cmp
push
add
push
push
or
jne
add
jns
and
out
loope
jg
jne
ret
rol
repnz
inc
adc
mov
fld
cmp
xor
sub
sahf
ins
pusha
or
inc
aaa
push
fnstenv
div
pop
fstp
xchg
pusha
or
in
cwde
sbb
in
lea
or
clc
arpl
jnp
sahf
xor
sub
push
jae
mov
movs
rol
xor
leave
pop
mov
push
inc
xchg
adc
into
nop
cmp
or
les
mov
sbb
mov
rcl
pushf
push
or
pop
(bad)
xor
add
je
imul
inc
ja
dec
jne
and
ja
js
into
push
out
hlt
and
mov
fiadd
in
mov
jmp
push
mov
test
movsx
lahf
mov
rcl
mov
push
xchg
bound
mov
xchg
sti
cmp
jne
jnp
call
cmp
je
pushf
sbb
fsub
cmp
jmp
xor
cmp
mov
xor
(bad)
cmp
sub
jmp
iret
xchg
pop
mov
jecxz
js
inc
xor
pushf
inc
retf
mov
add
xor
mov
fldcw
cmp
fst
retf
add
adc
cmp
retf
mov
adc
(bad)
pop
das
inc
lods
push
pusha
jge
dec
xchg
and
xchg
dec
rcl
pop
sub
add
pop
out
cmp
aaa
pop
bnd
xchg
loope
mov
dec
bound
push
mov
xchg
ret
sbb
sub
add
adc
int
jne
nop
xor
mov
inc
lods
lods
mov
add
mov
int3
add
push
into
and
mov
push
or
cmp
jo
xchg
imul
mov
outs
(bad)
mov
jns
outs
ss
add
sbb
add
cmp
into
mov
imul
das
mov
icebp
in
jns
js
shl
push
pop
fnsetpm(287
je
mov
and
xor
je
inc
(bad)
pop
cmp
imul
cmps
pop
fs
cmps
bound
jl
xor
xor
std
pop
mov
cmp
pop
test
mov
or
pushf
fs
xor
not
data16
outs
mov
sub
int3
ret
or
in
sbb
inc
sbb
add
call
inc
into
push
scas
mov
pusha
push
pushf
xor
ins
or
push
popf
fistp
loope
cld
sub
imul
push
mov
dec
jle
sbb
xor
mov
in
sub
push
scas
in
std
lock
xchg
jo
imul
push
call
xor
outs
mov
pop
mov
dec
sbb
dec
ss
adc
out
xchg
pop
jmp
push
pop
dec
sub
retf
sub
sub
pop
das
mov
fadd
aad
cwde
and
mov
and
in
iret
cmp
je
rol
push
or
push
sub
pop
or
in
mov
or
xor
dec
aam
adc
inc
mov
lock
or
jne
in
inc
sub
xchg
cmp
inc
enter
loopne
adc
add
cmp
cmovne
xor
inc
xor
adc
add
ss
dec
mov
pusha
push
(bad)
out
and
pop
adc
dec
sub
mov
sub
fcom
sbb
fmul
mov
movs
jns
jbe
pop
sbb
or
(bad)
cli
mov
and
jmp
xor
push
daa
(bad)
cmp
call
and
adc
ss
add
mov
popf
jne
adc
ret
repnz
pop
jecxz
push
outs
add
adc
cmps
in
jno
in
adc
fwait
add
mov
in
adc
pusha
sbb
push
xor
retf
mov
mov
or
lock
stc
adc
mov
inc
mov
(bad)
push
xchg
pop
aaa
loopne
xor
mov
scas
and
icebp
jp
(bad)
lods
sbb
jns
cmp
fsubr
fmul
loope
out
out
mov
in
mov
imul
inc
add
xchg
test
mov
or
xchg
xchg
sbb
pushf
(bad)
adc
(bad)
enter
xlat
pop
je
ret
jle
jmp
cmp
loope
jmp
clc
mov
sub
ret
dec
movs
shl
out
es
cmp
imul
jge
popa
sub
xor
add
and
imul
loop
les
dec
pop
push
add
pop
mov
shr
sbb
les
loop
mov
inc
push
xchg
dec
pop
xor
nop
xchg
(bad)
repz
add
add
sbb
xchg
xchg
fld
or
adc
jb
or
or
pop
or
retf
loope
das
adc
xchg
pop
pop
lahf
adc
mov
xchg
or
mov
sbb
mov
mov
(bad)
and
push
or
xchg
out
fdivrp
addr16
and
mov
in
retf
xchg
popa
xchg
lock
pop
sub
ret
in
cwde
das
sbb
enter
and
adc
jns
or
jbe
pop
ja
push
jns
xchg
sub
or
and
ss
aaa
push
or
loop
movsx
and
push
mov
mov
sub
xor
fs
daa
cmp
ret
cwde
test
fld
pushf
mov
add
xor
ja
outs
push
jg
imul
mov
mov
jne
add
and
test
mov
or
mov
sbb
push
fsub
repnz
out
pusha
(bad)
leave
adc
dec
xchg
xchg
int3
ror
jmp
inc
cmp
arpl
repnz
lods
inc
mul
fsubr
aam
loopne
adc
add
in
movs
xor
xchg
add
jo
add
fsub
jmp
sbb
loope
sbb
mov
mov
and
out
into
or
scas
in
stc
or
movs
leave
sub
rcr
inc
xor
sub
mov
aam
or
cmp
sti
adc
ds
ss
xor
push
or
mov
cmp
and
out
jo
push
push
pop
push
push
pushf
push
xchg
std
jge
mov
sti
or
adc
es
push
mov
popa
inc
jmp
or
lock
rcl
jl
mov
scas
lock
pusha
shr
xor
xor
sbb
add
jl
push
jp
mov
pop
out
mov
out
js
push
fisttp
adc
jnp
fisttp
and
add
movs
inc
in
mov
dec
sub
ss
lea
call
ror
push
cmp
stos
fxch
stos
adc
add
nop
jns
push
adc
retf
adc
fstp
repnz
fld
adc
mov
xor
and
cmp
inc
or
hlt
or
sbb
jno
popf
mov
pop
inc
or
sahf
add
mov
or
push
loopne
lods
lods
mov
sub
pop
mov
xlat
clc
jge
sbb
sbb
inc
pop
xor
and
cmps
or
mov
adc
xchg
push
jno
adc
dec
aam
xchg
inc
daa
add
sub
xor
push
lahf
mov
xor
pusha
or
sub
cs
and
adc
mov
push
lahf
(bad)
fcom
sahf
cmps
stc
sbb
mov
inc
daa
pop
push
fs
test
ins
sbb
ds
jmp
call
mov
test
xchg
aam
push
call
inc
adc
cmp
pop
xchg
repnz
inc
push
mov
fcom
xor
nop
arpl
push
in
cli
sub
mov
mov
cmp
add
pop
dec
xchg
push
xor
add
sbb
pop
cmp
fsub
or
popa
arpl
xchg
xor
or
jmp
mov
adc
jp
sbb
rol
pop
adc
je
pop
mov
daa
push
fbld
pop
xchg
fist
aas
call
outs
mov
mov
pop
fsubr
pop
(bad)
daa
xchg
xor
test
and
jge
mov
shl
js
fcomp
lahf
aaa
test
pop
movs
test
and
xor
rcl
add
nop
push
push
rcr
fsub
arpl
stos
popa
inc
movs
aaa
or
or
jns
mov
dec
mov
movs
lods
xchg
sub
sbb
test
lods
cld
shr
sub
jl
js
jnp
out
call
lods
add
sbb
pop
mov
fdiv
mov
or
sub
mov
rol
out
out
xchg
(bad)
aam
add
sbb
ror
inc
ret
xor
cmp
inc
sbb
xchg
dec
xor
fs
je
cmp
xor
adc
or
imul
jecxz
adc
lods
inc
fistp
dec
sbb
adc
mov
and
das
xchg
(bad)
and
mov
mov
cmp
push
push
mov
push
or
fimul
aam
jl
fadd
fistp
dec
je
push
xlat
or
jecxz
xchg
pop
ret
shr
adc
inc
dec
jecxz
test
mov
mov
ja
js
push
jmp
movs
adc
stos
inc
xchg
ret
add
mov
mov
inc
je
in
rcl
lds
inc
or
test
add
add
sbb
push
loopne
cmc
mov
stos
ret
jmp
vxorps
pop
movs
and
sbb
or
mov
inc
aad
mov
aaa
mov
add
mov
ror
popf
or
pop
ret
daa
dec
or
xchg
outs
jo
mov
sbb
xor
adc
rol
ret
mov
mov
xchg
and
adc
mov
and
fdiv
push
loope
and
or
and
inc
push
or
and
out
jae
test
and
push
int3
pop
adc
inc
bound
ja
pusha
adc
jae
add
pop
push
add
inc
aam
add
dec
or
jecxz
sub
pop
sbb
mov
test
call
ja
and
inc
add
jns
mov
addr16
test
sbb
mov
addr16
aad
rcl
icebp
add
pop
add
add
adc
pop
adc
push
add
rcr
imul
mov
popf
adc
cmp
leave
das
pusha
cmps
and
pop
mov
pop
xor
push
mov
sub
in
or
inc
cdq
dec
mov
enter
mov
add
cmp
leave
cdq
adc
and
push
iret
repz
inc
push
popa
jo
(bad)
jmp
ins
xchg
push
jecxz
pop
pop
leave
sub
bound
adc
add
leave
xchg
sbb
or
sbb
ret
(bad)
mov
out
ror
xchg
jmp
das
pop
push
adc
sti
rcr
mov
xchg
and
xchg
sbb
pop
or
pop
lods
sub
mov
xor
add
stos
ja
pushf
dec
dec
movs
hlt
mov
jmp
ficom
xchg
iret
and
xor
lock
mov
ret
ret
ret
adc
mov
jmp
dec
lea
scas
add
stos
push
or
inc
xlat
lock
xchg
xchg
push
lods
push
adc
in
aad
jae
cmp
mov
jb
inc
(bad)
es
shr
mov
push
outs
sub
ficomp
push
lock
mov
sbb
rcl
pop
xor
scas
pop
lods
ins
sub
xor
(bad)
test
cmp
dec
shr
iret
clc
add
clc
inc
push
xchg
cmp
movs
xor
xchg
jge
(bad)
loope
mov
or
add
sahf
sub
mov
sbb
push
inc
sbb
jns
sbb
(bad)
enter
test
sbb
adc
mov
adc
mov
mov
adc
cmp
dec
das
push
je
pop
sbb
push
cmp
sub
push
sub
push
push
js
and
add
jg
inc
dec
jp
push
(bad)
call
scas
rcr
or
mov
shl
push
or
add
inc
bound
data16
dec
or
outs
jecxz
lds
xor
pop
prefetch
or
in
jnp
push
ins
enter
clc
add
jbe
clc
mov
(bad)
(bad)
mov
dec
retf
sbb
inc
dec
add
sbb
pop
ret
mov
clc
and
push
inc
in
mov
ins
mov
xor
sti
cmp
dec
(bad)
scas
hlt
sub
clc
stc
dec
adc
adc
adc
call
mul
mov
sub
aas
sbb
xor
or
and
and
rcr
stc
fisubr
mov
push
cmc
adc
jns
imul
push
js
cmps
mov
outs
cs
push
push
fs
ds
cwde
cmp
jne
je
call
mov
inc
xor
jmp
xchg
and
mov
or
cld
xchg
neg
and
and
shl
and
sub
dec
adc
out
xor
jbe
sub
adc
jg
test
sub
daa
pop
sub
lock
cli
add
pop
pop
dec
imul
sub
test
jle
sbb
sar
sub
push
push
pusha
inc
loopne
int
cmps
jns
(bad)
(bad)
dec
or
dec
clc
mov
js
mov
retf
lods
inc
mov
sti
or
inc
adc
cmp
ret
xchg
pop
mov
pop
into
ret
push
(bad)
cmp
and
movsx
nop
fisubr
jle
jl
or
sbb
cmp
mov
pop
shl
dec
ret
jl
adc
and
mov
push
add
add
jae
add
inc
loope
adc
fistp
clc
sbb
sbb
fld
and
adc
push
fadd
in
and
dec
adc
aaa
add
(bad)
xor
push
lods
aaa
or
(bad)
popf
or
pop
pop
or
pop
pop
shl
inc
popa
mov
sub
loope
push
mov
pop
ror
xchg
mov
mov
add
mov
xor
xor
test
out
inc
push
fdivr
mov
cs
sbb
(bad)
push
pop
mov
mul
test
ret
dec
sbb
xchg
adc
add
call
jp
cmp
add
scas
dec
das
or
lahf
pusha
or
popa
leave
and
sbb
stc
outs
leave
pop
loopne
jnp
xchg
push
mov
fwait
cmp
push
mov
rcl
xor
pop
sbb
or
and
jg
hlt
gs
ins
jle
push
movs
or
test
jo
xchg
sbb
or
test
mov
push
mov
sbb
mov
adc
movs
inc
stc
jg
sbb
cli
adc
inc
xor
pop
fs
(bad)
pop
push
sbb
test
mov
pop
mov
inc
ins
test
stos
aaa
cmps
les
nop
pop
(bad)
cli
mov
enter
jmp
rcl
mov
inc
mov
pop
adc
jo
jg
pop
adc
add
sbb
ss
add
sbb
fldenv
enter
mov
mov
ret
test
pop
push
add
push
push
int3
push
scas
or
fs
ds
mov
dec
pop
inc
out
mov
mov
lock
in
inc
hlt
xor
add
into
adc
mov
or
adc
sbb
aas
test
mov
jle
inc
ins
in
dec
push
test
je
jo
dec
cmc
dec
les
jo
dec
outs
cmp
pushf
sub
add
mov
or
scas
jmp
mov
adc
add
add
mov
xor
leave
mov
les
test
pop
push
outs
mov
cmp
stos
mov
push
push
ret
push
int
and
push
scas
adc
sbb
data16
and
adc
sahf
jne
xchg
fchs
adc
nop
lea
pushf
shr
push
inc
push
or
repz
cs
adc
cmp
mov
xchg
in
sub
mov
imul
ins
rcl
mov
jno
outs
add
in
or
mov
sub
mov
clc
mov
cmp
mov
out
cmps
and
out
lods
adc
mov
rol
pop
rol
iret
mov
loopne
test
adc
or
or
push
movs
lods
test
fimul
cmps
cmps
clc
fwait
cwde
sub
ret
dec
pop
xchg
mov
jne
mov
jl
add
dec
mov
cmp
je
pop
pop
aad
inc
pop
inc
xor
adc
fldenv
cmp
ret
outs
sub
pop
imul
xor
adc
and
dec
fcmovnbe
sbb
xchg
out
xabort
ret
sub
pop
xor
rcl
(bad)
fmul
xchg
movs
xchg
push
adc
mov
rol
adc
sub
test
ret
out
and
sub
movs
xlat
stos
cld
adc
fdivrp
sub
in
sbb
imul
sub
nop
leave
std
outs
shr
mov
push
(bad)
push
(bad)
jg
lea
ret
mov
add
push
mov
test
and
retf
ret
in
mov
(bad)
fadd
jo
(bad)
jnp
cmp
je
pop
mov
adc
add
adc
ins
mov
sbb
and
fsub
dec
sbb
retf
imul
data16
addr16
out
ret
sbb
and
pop
nop
sbb
adc
stc
adc
jle
ja
sub
add
cmp
sbb
stc
or
outs
adc
xlat
adc
repnz
jmp
sub
lahf
push
or
test
mov
test
xor
xchg
or
and
inc
pusha
add
push
in
or
or
bound
mov
lock
div
jmp
cmp
bound
pop
aam
sbb
in
and
pop
ins
loopne
inc
sbb
in
jne
les
in
movs
lods
jmp
aam
mov
pop
adc
shr
mov
shr
dec
or
xchg
and
push
adc
inc
or
push
xchg
adc
in
cmps
adc
xchg
adc
push
lods
rcl
lods
and
popf
dec
adc
shl
mov
(bad)
and
push
adc
jp
cwde
xlat
adc
aam
fadd
add
jge
or
xor
mov
sbb
loopne
pushf
es
push
fsubr
sar
gs
inc
and
xchg
or
icebp
outs
dec
gs
cmp
cld
push
outs
jo
aas
and
cmp
pop
fist
jo
inc
arpl
pop
fcomp
inc
pop
inc
xchg
dec
out
not
arpl
(bad)
xchg
shr
dec
pop
test
fild
or
sbb
test
xor
jg
cmp
jne
daa
clc
cmp
xchg
and
jne
hlt
(bad)
leave
dec
aad
and
sbb
call
push
js
scas
daa
xchg
or
sbb
and
or
in
ins
ret
hlt
pop
dec
cmp
aad
cmps
cmp
cmp
sub
test
inc
fnsave
in
sbb
pop
movs
pop
add
arpl
inc
dec
jne
les
push
xor
mov
inc
call
or
stc
push
pop
and
or
or
dec
jne
push
sbb
jmp
sbb
adc
jp
test
aaa
mov
popa
in
push
push
push
(bad)
adc
shl
dec
mov
addr16
arpl
xchg
pop
adc
(bad)
or
lods
aas
adc
xor
jp
push
or
stos
and
add
cmp
aam
xor
inc
ins
gs
xor
pop
xlat
mov
and
fisttp
or
sbb
and
mov
inc
jecxz
sub
mov
sbb
and
adc
popf
ret
mov
or
clc
cdq
inc
ja
sub
sub
aam
pop
retf
clc
pop
or
add
cmp
ror
dec
js
push
push
add
sbb
sbb
or
cmp
js
add
movs
inc
and
dec
(bad)
int3
jg
or
pop
xor
addr16
jge
push
push
mov
jp
or
sbb
daa
adc
push
push
pop
jmp
push
mov
cwde
adc
dec
or
adc
loop
iret
ins
aas
or
inc
aam
sbb
bound
or
ret
dec
shl
cmp
call
out
rcr
arpl
out
mov
js
rcr
jns
pop
dec
sbb
test
xchg
cmp
sbb
rol
ret
jnp
xchg
add
mov
mov
fild
dec
aam
mov
inc
sti
lea
fadd
or
clc
(bad)
add
adc
into
inc
mov
adc
ins
jmp
dec
shl
sbb
ja
pop
out
inc
push
and
cmps
inc
push
inc
das
mov
aas
ja
pusha
add
cmp
(bad)
add
call
add
push
ja
mov
sbb
xchg
cmps
ss
fcom
(bad)
in
dec
clc
mov
cmp
loopne
push
inc
sub
adc
je
dec
push
out
xchg
sub
sub
adc
out
mov
xor
add
and
push
xchg
int3
mov
aam
push
lea
xor
add
retf
cmp
aad
jnp
jne
pop
adc
mov
retf
xchg
xor
and
pop
mov
dec
add
lahf
mov
cwde
mov
cdq
or
(bad)
dec
sbb
inc
xor
lods
or
stc
push
and
ja
shufps
add
add
das
sub
adc
jo
pop
popa
enter
adc
enter
jnp
sbb
repz
iret
dec
es
xchg
inc
and
and
daa
test
cmp
add
jp
add
popa
or
retf
ss
popf
push
or
mov
retf
sbb
mov
inc
xlat
pop
sti
cmovnp
repnz
(bad)
or
xchg
icebp
push
adc
sar
cmp
jne
cmp
dec
mov
(bad)
inc
fcmovu
pusha
or
mov
adc
add
jl
in
leave
mov
imul
into
or
repnz
jle
adc
add
hlt
add
adc
aaa
xchg
gs
out
pop
clc
jne
push
imul
xchg
(bad)
adc
fs
mov
jle
mov
cld
pop
push
jns
fbstp
or
fwait
(bad)
inc
add
jne
ret
sub
dec
inc
add
adc
js
fmul
sbb
adc
inc
cld
cmp
inc
push
in
push
and
push
push
pop
les
sbb
mov
mov
repz
sbb
push
out
out
ror
ja
stos
sbb
sbb
mov
loopne
xchg
data16
in
lds
outs
call
lea
sbb
lds
inc
inc
sti
ins
leave
or
mov
daa
sbb
mov
cld
pop
push
pop
add
sbb
or
sub
xor
repnz
or
cmp
or
add
adc
sub
push
test
and
sub
jb
popf
add
(bad)
mov
pop
pop
daa
or
push
sbb
mov
push
shr
stos
push
ret
inc
popa
sub
add
sub
test
pusha
fcomp
mov
out
xor
xor
xor
adc
call
push
pop
push
add
and
sub
ret
aaa
jmp
ins
mov
mov
or
jne
loop
mov
mov
or
(bad)
mov
mov
push
mov
fisttp
mov
mov
and
or
leave
jo
ja
cmp
fisttp
push
mov
cmp
or
or
aas
adc
sub
mov
push
push
jl
les
inc
or
ror
sbb
pop
mov
lahf
xchg
jp
adc
rol
loop
xor
jbe
pop
daa
mov
sub
push
neg
or
sub
outs
cdq
fld
mov
pop
xor
addr16
sbb
inc
add
adc
and
push
cld
push
xchg
xchg
add
ss
jo
data16
or
inc
cmp
ins
enter
pop
cmps
adc
(bad)
(bad)
pop
jge
retf
sub
in
(bad)
loop
stos
and
out
iret
fcom
or
dec
outs
fdivr
jmp
lods
leave
mov
add
pop
mov
test
inc
sbb
scas
jb
test
sub
push
lahf
(bad)
loopne
mov
sub
outs
pop
je
sub
ret
fs
pop
sbb
test
or
shl
mov
aad
test
sub
arpl
jbe
inc
into
fs
sub
repnz
dec
into
popa
out
sbb
ins
push
push
dec
push
mov
jbe
dec
mov
rcl
mov
out
pop
loopne
adc
(bad)
int3
les
push
fiadd
add
pop
cld
int
repnz
pusha
and
clc
mov
push
js
aad
adc
out
jae
pop
int
sahf
stc
nop
dec
iret
(bad)
dec
adc
sub
fisub
mov
cmp
mov
sub
mov
add
sar
or
or
dec
sbb
mov
push
adc
pop
inc
les
dec
out
or
add
jmp
sub
sbb
movs
ror
shl
inc
and
xor
push
iret
inc
or
lods
shl
or
sub
shl
shr
les
and
push
mov
pop
add
sbb
cmp
adc
retf
and
call
add
lock
lock
in
shl
mov
dec
or
aam
pop
sar
fiadd
mov
or
mov
adc
sub
jnp
cmc
out
adc
shr
xchg
out
lea
ror
add
or
xchg
les
sbb
in
and
in
mov
push
fsub
and
cmp
sbb
in
sbb
push
fwait
das
pop
xor
jbe
cs
inc
aas
(bad)
retf
jmp
inc
cmp
sub
push
adc
xor
arpl
fmul
pop
mov
ret
or
dec
push
pop
inc
cs
mov
inc
jo
cld
inc
adc
movsx
in
inc
sbb
mov
push
xor
jmp
nop
inc
outs
rol
push
sbb
sbb
sbb
adc
test
aam
in
bound
mov
outs
sub
mov
pop
or
ds
xor
lea
push
mov
and
inc
call
adc
ror
mov
and
mov
xchg
pop
shl
mov
sub
enter
pusha
sar
icebp
cmp
movs
shl
xor
add
fdivr
or
iret
sbb
jnp
dec
ret
xor
test
jae
(bad)
mov
or
jnp
cmp
(bad)
dec
lea
sub
clc
imul
mov
adc
inc
rol
jle
imul
movs
adc
mov
movs
stc
add
and
shl
xor
push
xchg
mov
adc
cmp
xchg
sub
jo
push
add
std
aas
(bad)
stos
inc
cld
adc
mov
cmp
push
add
cmp
cli
xchg
imul
add
push
(bad)
xchg
jb
add
dec
mov
jae
lock
push
jp
inc
cld
fisub
xor
cmp
push
mov
or
loope
sub
sbb
add
or
js
out
dec
inc
or
inc
or
movq
clc
inc
jbe
sub
and
or
jle
outs
ret
cmp
test
arpl
push
fsubr
or
mov
lods
push
or
mov
xor
sbb
hlt
jge
and
shl
inc
push
pop
mov
imul
dec
rcr
sbb
cmp
ds
push
jno
jb
and
ss
add
icebp
sbb
loope
lods
popf
es
dec
xor
jo
mov
add
enter
loope
fsubr
ss
add
shl
mov
les
gs
and
mov
xor
out
jge
cmp
adc
add
bound
movs
mov
pushf
xor
mov
mov
out
mov
mov
push
jmp
mov
outs
jmp
mov
aaa
cld
push
lea
or
mov
shr
xor
jbe
pushf
jp
mov
sub
sbb
mov
add
test
call
jmp
sbb
xor
dec
js
mov
cmp
push
sub
mov
fdivrp
xchg
dec
sbb
aas
mov
test
add
jl
movs
xor
inc
mov
mov
inc
push
sub
fistp
sbb
cmp
and
push
pop
sub
in
ss
sti
cmps
adc
push
sub
sub
fld
inc
ins
pop
ficomp
cmps
push
fimul
das
jbe
popf
into
dec
or
cmp
mov
pushf
rcl
cmp
mov
xor
and
push
inc
jp
(bad)
mov
jmp
pop
outs
dec
les
call
mov
mov
dec
and
outs
rol
cmp
adc
movzx
out
neg
and
adc
mov
ss
inc
lods
sub
dec
int3
adc
xchg
stos
add
adc
sbb
or
call
sbb
clc
xor
adc
inc
pop
sub
mov
pop
push
adc
jo
test
or
xchg
cli
mov
inc
sub
pusha
push
rol
mov
int
push
repz
cwde
imul
add
push
or
enter
sar
jno
cs
loopne
dec
mov
mov
jae
(bad)
push
push
sbb
mov
xlat
mul
jmp
xor
call
add
xor
xor
retf
ror
pop
xchg
inc
ss
repz
ds
push
sbb
mov
pop
pop
or
rol
lea
leave
push
xor
push
push
ss
je
mov
jo
sbb
fisttp
out
xor
data16
inc
jbe
sbb
jb
in
pop
loop
imul
in
ins
add
pop
outs
outs
mov
loope
cld
dec
jp
(bad)
sbb
js
addr16
adc
xchg
mov
jmp
pop
inc
xor
ins
or
mov
lock
sbb
cmc
(bad)
out
adc
or
popa
sub
jg
push
mov
aad
adc
adc
out
scas
mov
push
test
mov
sub
inc
inc
adc
dec
into
loope
dec
sbb
sub
mov
ret
mov
mov
push
inc
push
sub
leave
jecxz
lock
jg
push
jge
shr
and
call
mov
add
mov
lahf
or
call
xor
xchg
rol
cmp
or
sti
rcl
sub
sbb
add
outs
sbb
dec
adc
sub
call
xchg
push
or
mov
sar
into
(bad)
cmp
adc
add
addr16
xor
or
mov
adc
int
mov
dec
mov
or
retf
mov
imul
mov
mov
aaa
pop
or
fstp
push
xor
jo
popf
out
jmp
and
ret
shl
cld
sub
dec
sbb
loope
repz
add
scas
xor
pop
or
cmp
adc
sub
push
scas
es
inc
fwait
xchg
data16
je
rcl
and
jecxz
add
push
push
shl
or
shr
out
jle
sub
add
add
jnp
inc
add
dec
mov
add
cs
ds
sbb
add
jp
add
adc
jmp
mov
leave
xchg
adc
bswap
inc
les
lods
call
mov
pop
aam
jo
ds
add
es
shl
mov
xlat
or
push
enter
stos
and
jae
test
xor
sub
jmp
mov
or
adc
add
mov
loopne
inc
out
lods
add
push
push
inc
mov
mov
inc
xchg
jge
push
sub
fcom
fucomp
inc
inc
js
push
add
mov
(bad)
cmp
pop
inc
xor
inc
mov
sub
ret
push
pop
and
push
mov
sahf
jge
dec
cmp
pop
sub
pop
rol
retf
push
clc
mov
mov
in
ror
icebp
movs
add
jmp
shl
out
call
movs
dec
ror
inc
push
lahf
lock
cmp
js
sbb
or
inc
cmp
movs
mov
bound
mov
and
xchg
adc
mov
push
adc
adc
lock
ja
dec
jne
push
push
sub
push
and
sti
add
mov
sbb
inc
inc
adc
mov
push
adc
out
and
push
adc
inc
or
mov
cmp
int
jb
sub
sub
fwait
add
push
or
imul
sub
or
(bad)
outs
pushw
loop
outs
pop
cmp
pop
xor
jp
les
dec
dec
mov
inc
push
pop
cmp
int3
out
cmp
add
int3
retf
inc
pop
jecxz
inc
addr16
in
push
sub
xor
ret
sbb
sub
push
add
lea
pusha
pop
sub
pop
idiv
scas
xor
ficomp
add
scas
adc
mov
dec
xor
jg
fistp
adc
addr16
inc
jle
add
shr
adc
mov
popf
or
out
push
mov
add
repz
jne
add
sub
push
imul
pop
push
loopne
add
dec
in
mov
push
xor
inc
add
sub
aaa
ds
aad
fnstsw
add
sbb
pop
enter
sub
add
push
cmp
sbb
mov
loope
cmp
clc
sub
push
mov
inc
pushf
retf
jecxz
sbb
xchg
cwde
push
bound
aaa
sbb
lea
inc
pop
ror
and
aad
(bad)
shl
dec
push
jbe
call
push
mov
xchg
inc
fdiv
mov
loop
push
aas
jmp
inc
pop
sbb
push
mov
push
inc
or
pop
ja
cs
sub
sub
neg
push
pop
sbb
ret
or
or
ret
or
fisttp
jne
call
test
add
push
add
pop
icebp
dec
stos
xor
out
outs
leave
or
sub
xchg
sets
xchg
adc
dec
ds
rcr
adc
aas
loop
or
jo
and
cmp
mov
dec
mov
mov
jmp
jne
lea
cwde
sar
scas
test
mov
inc
push
inc
dec
gs
dec
dec
shr
faddp
cwde
or
dec
mov
dec
sub
loope
pop
cmp
rcl
jge
popf
bound
in
pop
fsubp
fidivr
xor
add
leave
fild
ins
ins
movzx
adc
inc
test
scas
mov
inc
inc
pop
pop
retf
add
shl
mov
(bad)
or
sub
push
lea
inc
icebp
adc
sub
aad
rol
fsub
es
popa
dec
mov
imul
add
cmp
sbb
pop
call
jo
mov
sbb
lds
dec
mov
imul
xor
cmp
je
inc
ror
inc
push
and
pop
imul
adc
pop
dec
add
dec
cmp
mov
jno
mov
and
aad
sub
test
mov
enter
and
push
test
push
addr16
sbb
loop
movs
sbb
pop
mov
pop
fld
add
je
outs
mov
addr16
or
movs
sub
xchg
imul
mul
popa
or
dec
out
sub
and
jno
dec
call
imul
cmps
mov
dec
stos
push
xchg
out
cmp
retf
sahf
mov
jp
inc
jle
clc
shr
out
push
inc
cmps
add
xor
stos
mov
jmp
pop
add
and
cmc
mov
xor
popw
cmp
mov
adc
call
add
dec
dec
add
inc
ret
dec
push
and
xor
sbb
test
stos
popa
jp
inc
pop
dec
fld
push
mov
pop
iret
push
imul
push
pushf
xchg
sbb
dec
push
ret
and
pop
jb
add
push
clc
mov
pop
sub
shl
push
inc
hlt
arpl
loopne
sahf
std
test
xlat
mov
inc
sub
mov
adc
jmp
stos
jecxz
inc
and
scas
in
loopne
popa
sbb
dec
add
das
xor
pop
bound
sub
xchg
inc
push
std
repz
push
cwde
push
push
inc
sbb
sar
cmp
inc
mov
ja
fld
rol
setp
sti
push
add
je
add
pop
sub
cmp
jmp
xchg
mov
leave
ins
push
dec
push
and
ret
pop
add
pushf
pusha
dec
and
xor
enter
push
int
push
add
or
mov
jmp
sahf
inc
pop
or
mov
adc
sub
call
xchg
xchg
retf
mov
pop
je
cmps
add
sub
pop
pop
mov
cmovl
jmp
cli
and
inc
pop
mov
in
and
cmp
push
or
or
xchg
and
pop
push
and
sbb
push
shl
mov
rol
adc
out
push
dec
adc
jns
or
mov
mov
ret
lea
xchg
sar
inc
inc
adc
and
adc
mov
adc
cli
dec
mov
pushf
cmp
sbb
inc
pop
icebp
rcl
inc
sbb
das
hlt
ins
adc
aam
jl
adc
adc
cmp
(bad)
mov
movs
sbb
xor
test
jne
sub
(bad)
cld
ins
jno
mov
push
cmps
adc
neg
daa
(bad)
std
or
sub
or
movd
das
loope
mov
fidivr
arpl
outs
add
or
add
aaa
or
pusha
aas
push
mov
inc
mov
test
ins
shl
and
jne
cld
int3
xchg
lods
or
adc
test
hlt
pop
dec
ret
push
mov
jl
dec
lock
sbb
jo
add
shl
adc
(bad)
add
push
xor
mov
add
cmps
movs
mov
sbb
add
or
test
cmps
stc
cmp
cmp
sbb
neg
in
div
loopne
sar
or
jp
iret
popa
rol
push
movs
add
stc
inc
mov
xor
rcr
mov
ret
sub
mov
bound
mov
add
fmul
xchg
inc
mov
add
pop
sub
add
sub
pushf
fcmovnu
inc
adc
outs
or
push
push
push
outs
ror
push
inc
data16
jo
xchg
outs
scas
add
mov
cmp
bound
or
ret
adc
mov
cmp
xchg
mov
loop
or
mov
add
fs
mov
add
mov
add
or
fs
cmps
mov
ins
add
push
cdq
clc
add
into
xor
jns
push
(bad)
leave
push
dec
shl
test
(bad)
sbb
jmp
sbb
rol
push
cmp
out
loop
or
add
add
push
ins
shr
int3
xor
add
push
mov
inc
out
or
jns
add
push
or
sub
xchg
leave
stos
push
lods
mov
fmul
je
jae
pop
dec
or
cmp
mov
add
sbb
enter
inc
adc
add
cmp
je
int3
inc
rcr
mov
loopne
fwait
std
cmp
je
(bad)
gs
cmp
push
cmp
shl
cmp
or
or
dec
test
cmp
push
js
jbe
je
imul
mov
cmp
ins
sahf
cld
pop
and
pop
cwde
xchg
push
push
add
or
cmp
in
and
adc
sti
pop
or
or
pop
sbb
xchg
out
adc
das
loop
add
mov
loope
push
jmp
sub
mov
or
xor
mov
lea
mov
lds
lock
mov
add
sbb
dec
pop
ds
adc
int
out
(bad)
mov
shl
jo
mov
sub
sbb
adc
clc
adc
in
lods
sbb
pop
pop
pop
fs
lea
pusha
mov
xor
sub
adc
push
in
jnp
push
adc
jo
add
scas
fstp
arpl
cmp
jmp
out
lea
dec
loopne
jmp
xchg
sbb
jp
push
pushf
cmp
or
out
popf
push
lock
js
movs
mov
test
js
jmp
xchg
mov
add
outs
(bad)
jge
pcmpeqd
adc
aam
sub
jmp
adc
xor
int
addr16
imul
cld
loopne
ret
sbb
out
xchg
mov
test
jbe
or
fisub
sbb
in
and
adc
cmp
mov
test
loopne
xor
cdq
sub
sub
ds
pop
fcmovnb
inc
or
jae
test
cmp
jnp
int
gs
test
push
inc
mov
mov
fcomp
or
jp
push
pop
sbb
mov
ins
sbb
mov
fisub
leave
adc
mov
mov
mov
jecxz
pop
mov
dec
(bad)
pop
pop
int3
mov
push
mov
or
or
cmp
jb
jp
push
or
cmp
test
mov
ds
mov
nop
and
lods
int3
push
xchg
lea
call
push
push
int
sbb
in
cmps
fistp
sbb
mov
movs
cmp
inc
icebp
cmps
mov
cs
movs
aam
inc
rcr
shl
mov
sub
mov
mov
or
in
xor
mov
rol
fbld
lock
cmp
jbe
rol
inc
mov
ror
cmp
cmps
mov
mov
es
lock
sub
cmp
imul
add
icebp
mov
and
arpl
inc
std
add
jp
inc
push
mov
inc
pop
sub
js
test
scas
dec
adc
mov
sub
js
or
stos
repz
xchg
and
mov
int3
add
or
(bad)
push
adc
int3
mov
jmp
and
je
cmp
mov
shr
mov
mov
push
les
mov
mov
shr
shr
mov
inc
pop
mov
mov
les
or
rol
fmul
mov
xor
xor
mov
enter
vpcmpeqb
push
mov
jmp
scas
push
hlt
jae
mov
push
cmp
cli
mov
pop
(bad)
enter
push
call
mov
add
scas
inc
sub
sub
fwait
je
or
dec
(bad)
and
or
push
ins
in
mov
or
jo
lods
fcom
jne
add
arpl
fild
or
xor
shl
data16
es
and
fs
mov
ds
cld
jb
in
ret
xchg
mov
mov
sbb
into
loopne
xchg
or
icebp
lds
pop
mov
or
mov
je
call
and
jp
out
lock
psllq
jmp
push
mov
adc
and
adc
std
pop
sub
pusha
ja
jl
leave
jb
inc
lock
sti
pop
cs
jecxz
add
pop
inc
cmps
ins
mov
std
or
or
xchg
add
push
push
dec
or
out
adc
push
jmp
xor
rcl
enter
pmulhuw
imul
jmp
push
or
adc
mov
cwde
add
inc
clc
aad
and
enter
or
cmp
and
add
or
enter
pop
sbb
and
add
dec
and
jge
cmp
jne
mov
cmp
adc
or
inc
inc
adc
add
test
sbb
fsubr
xchg
dec
or
pop
sti
sub
pop
ss
pusha
pop
mov
not
fwait
sub
popf
dec
xor
sub
out
aaa
(bad)
mov
ficomp
add
call
loopne
jae
xchg
inc
loopne
fmul
and
leave
and
or
mov
add
cmp
cmp
or
das
lea
pop
push
lods
push
mov
jo
cld
xchg
int
pop
int
or
rcr
sbb
push
ja
jl
mov
mov
cmp
test
fdiv
mov
add
xchg
mov
inc
mov
imul
or
or
ds
adc
scas
test
pop
je
dec
cld
retf
adc
pop
and
push
ret
and
mov
xor
or
lods
stos
cmps
inc
sub
outs
jnp
xchg
popa
jne
(bad)
imul
call
mov
jp
in
or
dec
mov
xchg
xor
push
fucomip
pop
jecxz
adc
add
fimul
mov
into
or
(bad)
aam
scas
or
jns
sbb
add
cmp
into
mov
or
push
pushf
inc
je
xor
adc
ja
out
mov
sbb
fwait
mov
leave
mov
arpl
loopne
loope
and
sbb
push
in
jnp
out
sbb
nop
xor
inc
ret
mul
xor
xchg
out
iret
das
sub
adc
sub
rcr
xor
or
sbb
test
pop
fstp
push
jns
adc
stc
mov
sbb
lea
mov
xor
push
jge
adc
cmc
xor
loop
adc
pop
and
mov
xchg
xor
test
and
cmp
or
adc
cmp
fs
pop
jo
inc
(bad)
sub
call
xchg
sub
pop
addr16
dec
sti
xchg
scas
mov
push
dec
inc
add
movd
dec
add
ds
dec
dec
inc
xor
ror
scas
dec
mov
pop
push
in
pop
xchg
pop
ret
dec
ja
fsubp
in
push
or
sahf
xchg
iret
shr
pop
add
sbb
pop
dec
push
cmp
enter
pop
push
inc
push
stos
ins
xor
in
cmp
ret
pop
sbb
enter
gs
push
jge
add
out
xchg
sbb
dec
test
mov
push
push
aam
xchg
or
(bad)
adc
(bad)
js
ficom
sbb
dec
int
lahf
push
jg
imul
rol
mov
aas
push
adc
push
je
jp
jns
xor
push
imul
repnz
and
jg
into
out
mov
or
stos
rcl
out
sub
fadd
shl
cmps
or
test
mov
lds
or
add
push
outs
in
add
xor
pop
aam
cmp
out
xor
arpl
nop
xchg
pop
sti
push
add
adc
add
das
mov
push
rcl
adc
popf
(bad)
(bad)
xchg
add
add
(bad)
in
dec
or
jae
mov
dec
adc
je
pop
add
icebp
mov
stc
imul
cmp
loopne
dec
and
lods
sbb
xchg
xchg
push
adc
aam
or
mov
pusha
xchg
retf
inc
fidiv
pop
adc
mov
xor
jle
mov
pop
data16
out
test
cmp
cdq
dec
cmp
push
or
push
inc
rol
xchg
stos
adc
popa
pop
cdq
fcom
jne
popf
aam
in
sbb
mov
mov
lods
ins
xchg
or
mov
sub
adc
(bad)
push
or
fs
adc
fcomp
icebp
ins
and
popa
(bad)
pop
ret
mov
pop
fimul
aaa
xchg
imul
es
mov
sbb
sbb
add
mov
inc
inc
or
cmp
xchg
paddq
or
dec
in
sub
sub
js
or
jne
and
add
cmp
ins
pop
mov
pusha
mov
inc
mov
and
mov
add
xchg
push
xchg
dec
nop
add
imul
sub
int
pusha
mov
jle
pop
sbb
cmp
inc
and
std
sub
cmps
jg
pop
pop
xor
xor
inc
mov
fisub
adc
nop
add
imul
xor
jg
loope
outs
jp
jmp
adc
je
adc
std
fld
sbb
enter
add
mov
mov
cmp
jo
loope
inc
sbb
not
lea
push
sub
and
in
repz
(bad)
xchg
sub
data16
in
mov
fiadd
mov
test
sbb
jmp
mov
add
jg
ret
rcr
ret
repnz
inc
rcl
pop
sbb
mov
dec
mov
test
loope
jne
dec
mov
lds
outs
js
sub
cld
js
scas
js
test
push
push
jg
sub
xor
and
je
test
dec
and
mov
nop
mov
das
adc
and
jne
add
rcr
dec
(bad)
pop
test
and
ret
jl
lea
aam
xor
inc
or
lock
push
sbb
js
hlt
aas
jp
mov
mov
mov
adc
ficomp
ror
loope
fsub
xor
jg
icebp
clc
push
cmp
dec
and
mov
ret
ins
dec
ror
and
(bad)
aad
daa
and
add
mov
cmp
or
or
mov
xlat
pop
dec
add
add
cmp
xchg
repz
dec
adc
in
add
adc
retf
xchg
mov
fsubrp
pop
nop
add
inc
mov
pop
arpl
lock
mov
jb
sub
jl
jmp
and
cmp
test
jge
add
jmp
add
or
pop
jno
and
and
data16
and
xlat
push
mov
pop
sahf
(bad)
push
mov
add
pop
mov
jl
mov
add
out
stos
inc
sar
xor
aad
loopne
sbb
push
jg
add
adc
and
jge
dec
jo
xor
aam
dec
cmp
daa
cmp
add
dec
test
add
js
add
sbb
cmovne
call
ror
mov
retf
mov
and
pop
adc
add
inc
mov
inc
call
xchg
or
cmp
push
mov
inc
in
lock
adc
push
sub
sbb
loopne
mov
in
or
and
int3
push
push
push
rol
xor
ret
add
stc
mov
cs
in
aaa
sbb
scas
push
sub
dec
and
leave
adc
jb
xchg
adc
and
fisttp
pop
ror
push
and
cmp
mov
sub
push
push
mov
mov
loopne
faddp
xchg
sub
(bad)
pushf
rcl
adc
and
mov
push
cmp
cmp
repnz
test
out
loope
jge
add
inc
push
fld
addr16
and
mov
in
cmps
scas
imul
sbb
pusha
or
and
mov
jno
mov
push
xor
aad
and
jnp
aaa
push
sahf
stos
shl
adc
or
push
(bad)
repz
inc
mov
or
xchg
ins
ins
cmp
dec
inc
dec
push
mov
js
outs
push
adc
adc
jmp
push
push
dec
dec
cmp
shl
sbb
cld
inc
xchg
push
rcl
icebp
adc
mov
push
or
movs
push
outs
or
push
mov
dec
sar
dec
dec
rcr
call
nop
inc
ror
or
loopne
mov
xchg
rol
cmp
(bad)
cdq
ss
(bad)
test
sar
mov
movs
mov
sub
mov
adc
cmc
mov
xor
xor
xor
inc
pusha
cmps
sar
jg
lock
jae
push
jne
f2xm1
icebp
add
ret
test
adc
mov
inc
sub
push
and
mov
ret
inc
push
movs
add
popa
xor
xor
mov
lods
pop
mov
sbb
sbb
sub
xchg
sbb
inc
sbb
or
dec
xor
ins
xchg
in
xor
mov
std
cmp
pop
movs
add
neg
sub
scas
in
cmp
lock
nop
inc
out
mov
or
add
loope
stc
or
fild
rcl
inc
fstp
and
inc
dec
leave
adc
mov
je
mov
std
inc
rcr
lods
test
xlat
push
in
jb
mov
add
or
dec
dec
fild
mov
sub
xlat
lds
lods
sbb
adc
call
enter
dec
adc
and
dec
mov
inc
push
xor
add
and
and
push
fs
in
sbb
pop
adc
pop
or
pop
leave
pop
mov
push
cdq
nop
xchg
pusha
pushf
test
cmc
fs
shl
and
sub
cmc
pusha
dec
and
mov
call
pop
and
cmp
in
mov
into
aad
ss
add
pushf
ret
or
jne
pop
xor
mov
pop
xor
and
std
les
mov
or
enter
call
inc
or
std
rcr
jp
dec
inc
xchg
inc
call
fisttp
loop
ret
pop
mov
or
mov
out
call
sbb
movs
adc
std
dec
dec
clc
dec
add
outs
or
sub
repnz
cld
push
cld
inc
cld
inc
cld
and
and
mov
sbb
dec
in
push
stc
sub
daa
push
add
xchg
sbb
xchg
add
in
jl
pop
xchg
inc
dec
in
sahf
push
clc
loopne
icebp
hlt
dec
cli
pushf
loopne
aad
jbe
outs
mov
push
ins
add
cld
cmp
dec
adc
nop
xchg
or
call
inc
xchg
fadd
or
sbb
inc
scas
or
fmul
in
cdq
fmul
cld
xor
fdiv
lea
lods
sbb
inc
imul
jne
ss
lea
push
aam
add
push
aam
aam
jo
pusha
mov
cmp
call
cld
inc
ds
dec
dec
cld
push
cld
push
cld
ret
inc
shl
cld
adc
adc
leave
adc
xor
adc
xchg
nop
jo
xchg
inc
sbb
sbb
adc
add
ss
dec
stos
imul
mov
dec
(bad)
mov
mov
lea
cmp
hlt
call
in
sbb
push
add
xchg
repnz
jge
imul
dec
adc
outs
lock
rcl
push
sub
sbb
cmp
pop
jbe
dec
call
clc
sbb
loope
dec
and
icebp
sbb
add
add
pop
pusha
or
xor
cmps
cwde
jo
or
add
mov
dec
daa
and
lahf
jb
add
add
or
sar
dec
or
sbb
push
inc
cmp
push
adc
retf
sbb
inc
cmp
mov
retf
push
jle
or
daa
das
mov
scas
cmp
loop
push
cmps
mov
xor
adc
cdq
icebp
sbb
cmp
mov
aas
jge
inc
xor
and
out
leave
add
adc
or
and
or
and
popa
icebp
mov
fdivr
call
jne
add
xchg
cmp
pop
adc
jl
adc
ret
fmul
and
push
mov
xor
mov
and
fwait
add
jmp
cmp
ja
loope
jbe
ins
inc
pop
ss
imul
sbb
das
movs
popa
clc
fld
sbb
jmp
dec
jne
dec
aaa
in
popa
lahf
push
mov
sbb
adc
out
leave
iret
push
test
or
mov
mov
stos
pop
xor
fwait
add
push
dec
lahf
das
add
adc
rol
sub
push
xchg
mov
or
or
outs
rcl
int3
loope
xchg
dec
adc
xchg
mov
and
xor
scas
mov
daa
sub
pop
imul
shr
push
xchg
retf
mov
nop
es
xor
in
or
mov
add
xchg
push
mov
adc
pop
test
sar
mov
mov
xor
mov
jns
outs
enter
pusha
test
ret
jmp
ror
pop
mov
jmp
ret
mov
iret
not
psubb
push
and
or
mov
loop
sub
mov
scas
test
dec
pop
sbb
inc
test
and
lahf
dec
popa
push
sbb
sbb
fild
pushf
or
gs
push
adc
stos
jmp
sub
push
jae
cmps
dec
sbb
dec
xchg
sub
add
imul
pop
mov
arpl
sbb
mov
add
lods
mov
or
jecxz
stos
xchg
mov
xor
or
pop
sbb
dec
loop
xchg
adc
and
mov
add
nop
sub
dec
cmp
sbb
cmps
nop
and
pop
pop
push
dec
sub
aas
jae
outs
push
retf
jg
mov
xor
mov
mov
push
add
xchg
pushf
xor
sub
cmps
cmps
(bad)
nop
push
or
add
ror
rol
xor
addr16
add
pop
jo
mov
cdq
bound
pop
in
lock
lock
enter
cmp
xor
cmp
pop
mov
push
test
xor
mov
dec
mov
cmp
push
jo
or
lods
or
hlt
or
xchg
add
adc
or
fwait
bound
add
xchg
pushf
cmp
inc
add
das
pop
cdq
adc
or
xor
leave
enter
inc
adc
xlat
mov
or
adc
or
xchg
xchg
imul
push
dec
mov
in
and
mov
dec
add
or
adc
(bad)
clc
mov
add
add
nop
xchg
and
push
xchg
adc
or
sbb
or
add
leave
fld
jl
xor
mov
cmp
dec
clc
mov
push
jge
add
or
adc
add
jl
lods
mov
or
int
inc
pop
(bad)
(bad)
jb
adc
jmp
jb
push
js
xlat
or
call
inc
push
sbb
dec
sbb
jbe
mov
push
test
push
shr
(bad)
xlat
or
mov
xchg
or
cmp
adc
mov
(bad)
sub
mov
adc
aas
imul
imul
add
test
jle
push
add
jle
push
push
nop
dec
cwde
add
xor
popa
jle
add
rcl
inc
xor
push
hlt
or
pushf
hlt
inc
(bad)
(bad)
mov
not
repz
sbb
shr
add
xor
clc
mov
xor
push
neg
cmp
mov
jne
mov
out
mov
xchg
pop
iret
jo
mov
or
push
loop
or
and
xchg
mov
mov
push
xor
setp
sbb
pop
pop
mov
dec
dec
fdiv
lods
adc
mov
add
imul
mov
sub
add
add
add
push
pop
or
add
or
or
add
or
or
or
xor
add
add
ret
mov
xor
aad
(bad)
aas
mov
mov
push
jmp
add
adc
ret
xchg
xchg
or
mov
push
dec
and
adc
cmp
inc
or
scas
mov
add
xchg
sub
jle
adc
inc
push
jne
jmp
sbb
lea
mov
fcomp
pop
xor
sbb
and
and
cmp
sub
nop
push
(bad)
xchg
xchg
xor
aaa
sbb
cmp
movs
xchg
repz
cmc
ins
push
nop
loope
mov
add
cmp
imul
mov
inc
mov
nop
frstor
sti
clc
mov
cmp
and
fisttp
sbb
push
sbb
push
xor
push
cli
mov
(bad)
iret
dec
add
adc
dec
mov
sbb
add
sbb
and
cmps
fiadd
cmp
jae
aas
sub
dec
fst
les
sbb
pusha
push
pop
add
xchg
or
fst
ss
out
pop
lea
push
inc
cmp
mov
ins
loopne
jmp
fild
dec
jnp
xor
jae
int3
std
sbb
jmp
add
mov
or
cwde
xchg
sub
and
and
or
shl
(bad)
call
lock
cli
ret
or
sbb
or
and
sub
pop
mov
sbb
stc
fld
lahf
cdq
mov
shl
shr
sub
cdq
xor
inc
dec
dec
or
popf
ss
cwde
adc
xlat
add
mov
xor
ins
inc
dec
rol
cmps
mov
enter
jge
call
mov
dec
xor
fmul
cmp
sub
dec
popa
je
lock
push
(bad)
bnd
and
sub
popa
pop
jp
rol
sub
and
adc
imul
test
or
pusha
add
fwait
sub
pop
or
add
or
lea
add
std
jb
and
cld
shl
not
shr
fs
or
shl
mul
cmps
adc
pop
int
xchg
retf
xor
popa
ja
ins
or
jmp
jge
test
les
ss
pop
test
dec
and
cmp
retf
adc
push
dec
push
bswap
cmp
and
loop
outs
and
shl
push
pop
dec
jbe
cmc
sub
movs
sub
loopne
mov
iret
adc
aas
fwait
call
dec
dec
dec
cmp
sub
dec
sbb
fwait
mov
push
xor
ret
and
xor
dec
retf
adc
out
call
loop
adc
dec
mov
outs
test
cdq
std
push
sub
mov
jns
cmps
sbb
sbb
push
sbb
and
push
push
mov
cli
sub
xor
bound
sbb
pop
rol
iret
and
ins
xor
sub
call
push
imul
adc
push
push
and
stos
mov
scas
xchg
push
js
loopne
xor
cmps
pop
xor
pop
cmp
ja
ja
test
sbb
sbb
in
movs
add
adc
rcl
les
push
(bad)
lock
loop
xor
rol
fisttp
ror
icebp
inc
ror
arpl
mov
je
stc
inc
stos
cmp
push
rol
jae
push
dec
stos
add
sub
adc
mov
lods
lea
clc
pop
or
adc
sub
shr
push
mov
ja
in
dec
sbb
std
sub
jb
cdq
adc
fldenv
add
push
adc
add
test
cmp
lods
(bad)
jge
movs
dec
daa
jno
addr16
jae
scas
sub
out
repz
add
add
movs
out
leave
adc
nop
stos
or
xchg
clc
add
adc
jns
dec
add
mov
and
scas
mov
(bad)
add
inc
sahf
cmp
cs
pop
dec
cmp
cld
loopne
xchg
inc
adc
add
ret
mov
mov
sub
or
push
sub
add
ins
xchg
push
clc
pushf
push
je
jnp
or
xor
daa
pop
jnp
xchg
push
pop
adc
rcl
loop
pop
push
je
xor
bound
push
and
lea
adc
cmp
dec
sbb
adc
cmps
ret
or
or
add
jbe
sti
loope
loopne
jg
shl
shl
or
sbb
lock
jae
cmp
cmps
push
ins
push
(bad)
fiadd
inc
retf
sub
gs
es
jne
lods
cmp
push
addr16
ret
and
mov
sar
adc
cmp
outs
pusha
dec
push
dec
cmc
push
dec
loopne
add
inc
lea
js
mov
fisttp
pusha
push
out
cmp
sbb
add
in
aad
clc
call
jge
sbb
ins
aaa
xor
xchg
inc
sbb
push
pop
sbb
js
xchg
xchg
push
ficomp
addr16
fild
push
adc
adc
push
mov
icebp
pop
push
str
sub
or
push
cmp
and
add
add
push
dec
je
push
movs
ror
or
fwait
arpl
(bad)
xor
rcr
(bad)
xor
sbb
int
jbe
xor
ret
pop
jmp
pop
pop
adc
mov
cs
and
arpl
or
dec
cwde
dec
add
and
std
jmp
fisub
inc
enter
pop
mov
pop
dec
inc
xchg
mov
or
jg
push
add
das
nop
cmp
repnz
and
addr16
(bad)
pop
aad
adc
or
push
add
ins
loopne
push
xor
mov
push
lock
xor
mov
mov
movs
lods
dec
mov
dec
inc
sbb
inc
push
or
cmp
test
enter
loopne
pop
stos
add
sahf
xchg
cmp
int
inc
adc
sub
sar
retf
mov
fs
inc
add
mov
dec
ja
push
push
dec
mov
ins
push
push
xlat
push
xchg
push
hlt
les
add
std
or
and
adc
sbb
sbb
shl
inc
inc
jmp
ret
xchg
xor
xchg
xchg
mov
fld
mov
adc
fld
mov
out
pushf
and
and
sbb
sub
inc
add
cmp
sub
xchg
cmp
clc
xchg
xor
fadd
pop
push
cmp
sbb
push
adc
mov
pop
adc
or
mov
xor
xchg
cwde
bound
int
jno
enter
xor
jb
nop
dec
and
sub
stos
popf
jo
je
imul
xor
jae
arpl
push
or
push
add
push
xchg
push
jl
mov
push
inc
sar
rol
test
add
mov
and
ds
inc
push
jge
dec
adc
cmp
push
cmova
add
jb
add
push
lahf
mov
into
(bad)
mov
arpl
je
jne
addr16
cmp
sbb
and
mov
in
and
and
nop
sub
repnz
rol
addr16
xchg
xlat
mov
cld
mov
loopne
cmp
xchg
mov
xor
inc
dec
data16
inc
push
mov
add
stc
rol
xor
or
xchg
add
pop
std
sub
sti
mov
dec
out
push
push
pop
ss
jae
push
inc
or
dec
jns
inc
repz
rcl
dec
ret
pop
(bad)
inc
add
sub
or
ret
or
jbe
cmps
loopne
and
aas
mov
pop
mov
ja
pop
pop
and
inc
add
jnp
scas
nop
sbb
or
mov
xor
sub
inc
or
lock
sbb
xsha256
cmps
push
and
xchg
push
pusha
fadd
push
add
js
push
push
ret
jb
mov
sbb
sub
inc
add
add
sub
adc
dec
sbb
mov
and
mov
push
sub
and
xor
inc
js
fsubrp
dec
aam
push
inc
jo
pusha
lds
xchg
xchg
bound
inc
jb
dec
cmp
sbb
popa
adc
shl
push
inc
xchg
cmps
stc
xchg
push
sub
sub
add
inc
fsubr
inc
mov
dec
push
jecxz
dec
push
addr16
dec
mov
jns
mul
and
pop
popa
outs
das
test
cmps
imul
push
push
xchg
pop
ret
test
movs
and
add
cwde
and
or
push
and
fwait
imul
les
xbegin
inc
shr
movups
sahf
dec
jmp
ja
jo
outs
popa
jmp
fist
add
adc
jae
xchg
jns
mov
or
sbb
inc
lock
pop
aaa
xchg
inc
movs
cli
and
in
shr
or
add
and
sbb
out
bound
xchg
jb
sub
lds
xlat
and
sbb
mov
dec
fadd
adc
mov
aas
sub
push
popa
adc
or
lock
iret
cwde
popa
adc
in
sub
mov
push
std
sbb
sbb
push
pusha
sbb
cmp
(bad)
dec
call
call
fdivr
dec
fdiv
cmp
lods
lock
mov
push
mov
jbe
adc
shl
mov
or
adc
and
inc
cwde
add
fsub
in
lods
arpl
fild
push
ror
add
lock
rol
sub
pop
shld
xor
mov
sub
and
mov
dec
loopne
lock
sbb
mov
gs
add
push
test
verr
mov
mov
sbb
or
enter
dec
push
outs
push
in
bound
mov
jb
int3
adc
sti
add
cmp
jae
shr
sbb
xor
or
fstp
popf
dec
rcl
enter
sub
xor
test
jb
adc
sub
pop
sub
sbb
push
enter
ins
in
jmp
jge
les
shl
lock
nop
adc
or
mov
and
push
stos
jle
mov
dec
mov
paddsb
push
and
cmp
or
daa
or
in
adc
sub
cmp
jo
repnz
dec
add
fsubr
add
jo
or
enter
sub
gs
cmp
sbb
adc
dec
in
clc
cdq
rcl
cs
dec
sub
add
mov
aas
in
mov
and
push
and
adc
or
shl
mov
pop
jae
and
and
adc
loop
cmp
es
push
or
cmp
cmp
nop
cmps
imul
cwde
popa
add
inc
mov
test
xlat
xchg
or
xchg
out
pop
inc
cwde
sbb
cwde
cmp
jg
mov
push
jl
movs
lea
and
push
lods
inc
cs
frstor
pop
mov
cmp
inc
or
or
repz
call
cmp
repz
ror
ins
imul
dec
bound
gs
lahf
out
out
aam
lock
inc
in
and
inc
sub
ins
addr16
mov
inc
push
or
bound
jns
add
pusha
not
inc
sub
and
enter
aam
add
push
push
or
inc
push
lods
mov
jmp
das
and
fcom
dec
cld
cmp
adc
adc
add
xchg
out
sti
nop
cmp
pop
popa
add
nop
inc
adc
sar
mov
cs
push
or
ins
ins
mov
mov
or
cmps
sbb
push
xchg
sbb
xor
sbb
aaa
push
imul
cmp
mov
cmp
push
cmp
ss
push
loope
adc
arpl
ins
adc
bound
out
leave
xchg
bound
outs
or
enter
cmp
aaa
adc
and
stos
out
pop
ret
or
sub
inc
push
addr16
inc
add
adc
je
jne
dec
ins
mov
outs
fs
cmp
push
or
popa
ins
or
adc
movs
arpl
ds
cmps
arpl
mov
push
lds
cld
scas
inc
fs
push
enter
pop
jae
mov
test
cmp
jb
jnp
imul
or
jle
push
add
push
ret
or
jbe
repnz
mov
rcr
pop
inc
cmp
mov
push
ins
sub
or
mov
shr
add
stc
(bad)
push
mov
lea
adc
ds
cmp
jl
pop
sub
inc
pop
enter
dec
mov
inc
movs
cdq
cdq
or
xchg
jbe
cli
shl
leave
and
and
rcr
or
mov
lock
or
dec
push
push
add
xchg
inc
adc
xchg
mov
pop
pop
lahf
pop
es
lock
xchg
mov
adc
and
or
(bad)
fidivr
push
xchg
or
lahf
pop
or
fcom
popa
fimul
push
push
mov
loopne
and
dec
push
adc
add
pop
sub
add
push
clc
dec
test
or
or
dec
push
adc
mov
fld
push
add
xchg
add
sbb
pusha
addr16
cmp
pop
dec
or
xor
push
(bad)
xchg
clc
mov
addr16
lods
dec
(bad)
mov
and
cwde
fstp
fwait
nop
cmp
xor
shl
pusha
xor
or
inc
push
daa
inc
push
jecxz
lea
inc
mov
nop
add
cmps
sub
sbb
add
rcr
inc
cmps
mov
test
add
or
pop
sbb
daa
mov
pop
enter
push
push
xchg
push
fidiv
shld
test
pusha
sbb
and
lock
arpl
mov
repnz
inc
test
add
mov
fwait
push
jg
pushf
loopne
js
push
mov
jg
and
sbb
jl
jmp
aas
cmp
in
jmp
dec
inc
push
inc
jmp
xor
pusha
bound
pop
push
sub
ror
fdiv
movs
addr16
or
test
push
pop
or
sub
rcr
inc
push
bndstx
mul
jmp
dec
cmp
jle
lds
ja
and
push
add
inc
outs
and
outs
fisttp
inc
fiadd
pop
jne
cdq
xchg
mov
mov
pop
xor
es
sub
and
jnp
xchg
cmp
lea
movs
add
inc
out
movs
sbb
sbb
dec
imul
in
outs
sub
jl
scas
adc
mov
jecxz
or
leave
cmp
push
imul
cmps
pop
pushf
xchg
lods
imul
(bad)
cmp
mov
and
mov
rol
sub
ins
popf
adc
mov
dec
push
or
inc
call
push
call
leave
leave
add
mov
jg
stos
mov
cmp
fnsave
lock
js
add
shl
adc
mov
sbb
ror
ins
xlat
in
push
jo
or
cmp
adc
or
lods
dec
leave
arpl
xor
jb
fs
cmps
inc
push
and
push
(bad)
adc
out
sbb
pusha
jo
rol
adc
outs
nop
ja
push
adc
add
es
leave
push
pop
cmp
pop
xchg
xor
rol
aaa
fmul
and
xchg
inc
mov
push
jno
xchg
fdiv
xchg
rcl
lea
push
pop
rcl
inc
jecxz
jecxz
push
and
add
js
sbb
(bad)
jmp
pop
cwde
mov
mov
or
add
movs
pop
cmp
add
call
icebp
repnz
outs
or
fsub
xor
pop
int3
pop
ror
or
dec
idiv
outs
fadd
bound
xor
jno
add
or
ret
xchg
mov
pop
xchg
es
div
inc
mov
cwde
ss
dec
mov
out
pusha
lahf
and
cmovs
jbe
push
jg
int3
dec
bound
sbb
pop
xchg
addr16
add
das
push
jb
pop
(bad)
jo
stos
pop
mov
jo
xchg
xor
arpl
(bad)
aas
and
cmp
fild
pop
repnz
xchg
shl
ret
test
mov
inc
fidivr
push
jno
dec
lea
aas
mov
(bad)
cmp
and
push
pcmpgtb
jns
push
stc
jmp
jno
dec
pop
shr
adc
js
xor
movs
bound
add
addr16
sbb
cmp
jb
imul
and
push
adc
jb
or
in
cmp
jb
or
pusha
or
ds
sbb
jb
scas
inc
pop
fmul
inc
test
or
sub
cmp
arpl
jp
mov
sub
adc
xchg
or
call
adc
cli
test
ret
xchg
jae
lahf
mov
and
sti
in
push
sbb
pusha
cmp
xlat
adc
sub
add
test
jbe
neg
jge
call
push
popa
lahf
out
jne
pusha
daa
(bad)
out
mov
push
stc
jne
push
jge
shr
out
cld
std
movs
add
and
pop
add
push
jnp
pop
les
dec
push
ja
das
and
pop
jno
pop
pop
mov
pop
shl
dec
scas
pop
hlt
in
das
ret
fsubr
gs
pop
das
sbb
out
mov
push
call
popa
adc
adc
inc
jbe
jge
cmp
aaa
sub
aas
pop
jecxz
sub
pop
mov
mov
adc
outs
adc
xchg
pop
fwait
dec
xchg
pop
out
lock
sub
xchg
clc
and
sub
jle
cmp
or
out
push
mov
add
movs
pop
test
xchg
pop
sahf
push
jnp
mov
dec
add
mov
pop
jns
mov
xchg
add
push
add
pop
xor
dec
je
add
je
xor
adc
fild
or
in
rol
xchg
pop
pop
xor
sar
into
daa
xchg
jnp
xchg
pop
fsub
jmp
and
cdq
in
popa
cld
fld
and
test
rol
cmp
jge
pop
inc
xor
fidiv
mov
ins
cmp
cmp
repnz
and
dec
fiadd
in
jno
jl
in
dec
or
(bad)
pop
and
push
call
and
repnz
or
pop
jae
test
lods
sbb
scas
pop
enter
pop
movs
retf
jbe
test
iret
jl
(bad)
mov
int3
fisubr
mov
cmp
xor
xchg
scas
push
ins
fchs
es
clc
cmp
fnstenv
es
jnp
inc
cmp
mov
inc
mov
add
scas
bound
and
outs
jb
adc
leave
data16
in
inc
retf
je
outs
data16
and
push
cmps
lods
ret
daa
mov
pop
cmp
mov
cmp
dec
mov
inc
lea
jg
inc
mov
fmul
sub
inc
adc
cmp
jo
mov
xlat
mov
inc
or
out
ins
rcr
mov
sahf
rcr
fiadd
in
fcomp
dec
aad
mov
and
ficomp
aaa
mov
out
add
inc
ins
adc
add
or
mov
call
jmp
xor
or
in
ds
jmp
aaa
mov
and
jb
push
cli
pop
mov
xchg
xchg
(bad)
aad
push
sahf
jg
shl
mov
sbb
pop
imul
cdq
push
mov
aam
lds
jne
dec
ret
push
mov
add
add
mov
mov
jl
lock
and
adc
mov
add
push
push
mov
push
inc
call
jle
and
or
adc
jmp
and
adc
cmp
test
movs
add
inc
sbb
xchg
inc
test
jb
sub
mov
outs
mov
jl
inc
rcl
cmp
pop
in
ret
pop
xor
enter
test
and
sbb
add
mov
add
jle
cdq
add
xlat
das
outs
sub
sbb
add
pop
ja
cmps
cmp
(bad)
jne
pushf
jno
dec
jle
adc
and
add
gs
cmp
dec
dec
push
ds
(bad)
ror
cmp
xchg
test
bound
stos
cmp
pop
cmp
push
push
and
add
mov
mov
mov
xor
sahf
bound
jb
fs
dec
nop
or
inc
psubsb
xchg
out
ror
lea
jg
and
adc
sahf
dec
ss
test
sbb
je
cmps
popf
jbe
push
je
outs
pop
test
add
add
xchg
mov
mov
dec
xchg
js
xchg
dec
out
sbb
and
sbb
pop
sbb
sbb
test
dec
ret
xchg
dec
xor
inc
pop
dec
ror
mov
or
push
mov
and
add
lock
les
loope
push
cmp
inc
and
pop
xchg
pop
jb
and
das
or
and
into
and
mov
les
jns
(bad)
test
and
mov
cmp
or
or
sub
mov
dec
adc
retf
(bad)
(bad)
sbb
add
fimul
and
inc
dec
sbb
adc
jg
and
mov
scas
jmp
in
or
add
pop
push
lods
pop
add
jnp
stc
mov
add
add
sbb
(bad)
je
shl
call
sbb
cmp
js
push
call
sbb
in
hlt
sub
mov
jne
int
mov
test
repz
movs
push
ja
mov
xor
mov
or
dec
xor
mov
or
pop
js
pop
add
sar
pop
test
nop
fimul
xchg
cmp
jmp
test
sub
es
ja
jne
xchg
loop
in
pop
add
sub
cmp
sbb
push
jmp
mov
aad
jne
cmp
popa
sbb
pusha
sub
call
movs
sti
call
adc
lea
cmp
gs
pushf
rcl
adc
loop
mov
fsubr
xchg
xor
call
popf
sbb
mov
(bad)
inc
pop
adc
add
and
pusha
mov
add
ja
dec
dec
leave
and
hlt
and
and
add
cmp
outs
fldenv
bound
ins
test
sub
in
repnz
int3
outs
rol
add
jb
je
jbe
mov
or
add
nop
or
rcl
in
or
mov
jo
adc
cmp
mov
inc
mov
mov
adc
test
rcl
mov
cli
fimul
sub
sbb
jge
imul
(bad)
jmp
(bad)
cmp
inc
or
aaa
xlat
mov
cmp
push
inc
fstp
xchg
in
mov
cmp
or
add
mov
retf
idiv
adc
push
or
loopne
adc
in
add
xor
xor
rcl
repz
push
mov
gs
adc
cmp
mov
mov
pop
imul
add
cwde
lods
sub
mov
(bad)
jl
sbb
mov
mov
or
xor
mov
xchg
inc
sbb
pusha
xor
pop
mov
sbb
xor
cmps
addr16
lds
mov
dec
pop
mov
sub
cmp
pop
test
mov
fld
jae
sbb
add
movs
jg
pushf
add
shl
js
sbb
inc
mov
adc
ds
push
mov
movs
xchg
daa
mov
mov
rcr
add
xor
les
sbb
inc
or
int
adc
xchg
push
clc
add
jge
cmp
sbb
push
in
inc
jbe
fmul
(bad)
mov
call
mov
sbb
mov
das
xor
(bad)
jmp
mov
inc
or
(bad)
dec
or
dec
sbb
loopne
sbb
aam
adc
add
add
daa
inc
dec
inc
daa
mov
mov
popa
cmp
pop
sbb
mov
sbb
xor
xor
xchg
sub
data16
xor
call
(bad)
sub
je
sub
and
or
loope
aaa
sub
and
push
mov
adc
and
xor
and
xor
fwait
gs
add
and
hlt
mov
dec
dec
loop
fdivr
ja
movs
adc
push
dec
es
add
mov
mov
push
outs
pop
dec
call
add
repnz
std
mov
push
jle
pop
je
add
lea
pop
cmp
and
mov
sbb
push
add
sub
and
ja
mov
inc
jl
push
sbb
adc
std
add
lea
mov
mov
out
inc
fs
pop
adc
in
outs
shl
and
jp
pusha
loopne
mov
fisttp
or
add
aas
add
push
add
jo
aaa
mov
pop
and
dec
adc
call
jmp
inc
(bad)
adc
inc
shl
jae
cmps
adc
or
mov
rol
mov
push
mov
cmc
pop
push
xor
and
xor
add
add
mov
mov
retf
mov
shr
push
mov
shl
jnp
ins
cld
or
mov
add
jmp
addr16
mov
and
into
add
or
jae
sub
fs
mov
or
mov
jno
mov
xor
dec
adc
fimul
(bad)
or
out
das
inc
int
fnstcw
stos
mov
inc
pop
inc
mov
push
lock
jmp
pop
in
add
push
push
lock
or
xor
scas
jle
jne
add
add
data16
mov
or
push
cmovs
(bad)
xchg
pusha
or
and
data16
lahf
pop
in
xor
into
mov
lods
or
mov
jg
add
xlat
adc
sub
xchg
inc
inc
sbb
sbb
add
inc
std
and
in
and
and
scas
test
(bad)
aas
cmp
xlat
pop
mov
add
repnz
add
enter
cmp
cmp
and
mov
pushf
movs
stc
adc
add
out
sbb
or
icebp
xchg
xor
sub
push
pop
pop
es
xor
shr
(bad)
mov
aam
lahf
in
inc
(bad)
das
(bad)
aad
add
pop
leave
pop
inc
cmp
and
mov
std
enter
xlat
and
out
loope
aas
cmp
cmp
or
xchg
nop
hlt
and
enter
xor
add
add
push
sub
add
std
sub
(bad)
lock
xchg
cli
call
cld
xchg
dec
push
and
or
and
ins
(bad)
adc
cld
retf
push
cmp
pop
xor
cmp
xor
xlat
adc
add
mov
add
xchg
aas
cmp
mov
jle
sub
sar
mov
aad
add
repnz
sbb
mov
add
repz
(bad)
pop
and
xlat
cmp
clc
jl
pop
or
in
lods
les
and
hlt
aam
sar
xchg
dec
mov
or
in
push
pop
mov
aam
xchg
xor
xor
xchg
cld
adc
xor
ret
pop
pop
xlat
or
xchg
int3
add
add
or
sub
in
and
add
rcr
test
add
aas
cmp
cmp
loopne
sub
sbb
repnz
or
aas
inc
(bad)
adc
sub
xor
add
add
add
and
xchg
rol
and
pop
add
int
or
in
mov
pop
cmps
adc
pop
push
sbb
mov
xchg
mov
or
nop
imul
(bad)
cmp
push
xor
fisttp
mov
fwait
hlt
mov
jg
xor
(bad)
sub
push
jge
pusha
inc
jae
fidiv
shr
add
mov
bndldx
add
nop
nop
in
push
cdq
jne
sbb
fist
inc
mov
inc
inc
cmp
hlt
sbb
jmp
sub
loop
xchg
add
sub
and
popa
fadd
sar
in
lea
mov
nop
inc
or
push
mov
or
inc
nop
stos
mov
sbb
lock
cwde
and
cmp
lea
xchg
jb
pop
add
loope
add
popa
loop
test
or
cwde
mov
cmp
push
add
xor
fcomp
pop
sub
mov
ror
push
and
add
and
mov
jne
mov
inc
or
enter
ror
mov
mov
xor
cmp
push
je
sbb
push
jbe
ror
jbe
pop
push
lock
ins
cmp
bound
not
divps
xchg
xchg
cdq
ja
cmp
mov
mov
leave
dec
xor
aam
mov
loopne
div
cmp
jb
punpcklbw
cmc
jb
push
push
push
push
leave
in
movs
fstp
ret
aaa
dec
dec
cmove
leave
leave
leave
inc
cmp
xor
leave
leave
leave
xor
and
leave
leave
leave
and
adc
cdq
in
out
call
call
mov
add
inc
xchg
add
xchg
cmp
in
push
in
jo
sbb
test
sbb
pop
mov
dec
(bad)
pop
inc
or
push
dec
xchg
aas
les
inc
inc
inc
push
push
or
aas
lea
inc
inc
push
pop
push
dec
pop
psrlq
jne
dec
dec
pop
inc
inc
addr16
inc
loope
mov
jp
inc
aas
dec
je
gs
or
cmp
rcr
cmp
xchg
jl
xor
add
dec
inc
dec
daa
(bad)
inc
inc
pop
pop
xor
aaa
aaa
and
paddsb
inc
mov
gs
dec
push
dec
call
fidiv
xor
xor
or
push
shr
imul
push
shl
push
je
jb
popa
outs
sbb
xchg
mov
mov
outs
xor
cmp
jns
ss
push
rcl
test
ja
inc
push
pop
inc
lods
or
scas
aas
push
inc
dec
inc
pop
add
add
mov
push
add
lds
retf
or
and
repz
or
push
add
dec
outs
repnz
jns
popa
arpl
dec
dec
mov
ds
xor
pop
push
dec
xchg
aas
cwde
in
pop
push
dec
add
jb
push
cmp
dec
push
sbb
mov
dec
ins
gs
ins
jns
push
push
data16
js
mov
popa
xchg
aaa
mov
shl
pop
sub
inc
push
dec
ja
dec
dec
mov
(bad)
cmp
jne
ss
inc
sbb
sbb
aas
xor
add
add
and
jmp
push
dec
inc
push
pop
inc
pop
dec
xchg
mov
push
jb
out
push
xor
ds
push
push
dec
push
push
dec
or
ins
out
adc
mov
inc
pop
(bad)
pop
push
push
dec
(bad)
leave
daa
pop
aaa
dec
inc
dec
push
cmp
xchg
lock
daa
paddsb
push
dec
jne
ja
inc
add
xor
shl
bound
or
mov
dec
scas
(bad)
popf
scas
daa
inc
pusha
mov
enter
inc
inc
push
pop
inc
ins
jne
inc
imul
scas
fdiv
xor
ss
shl
xor
xor
daa
xor
iret
push
dec
out
pop
pop
sbb
cmp
scas
call
inc
xor
dec
inc
xchg
cld
adc
dec
xor
outs
inc
mov
in
dec
push
(bad)
pop
push
pop
dec
es
push
pop
inc
ja
push
push
ja
je
xchg
bswap
arpl
push
push
inc
out
pop
xchg
stos
test
push
addr16
out
dec
outs
add
arpl
inc
dec
push
inc
jne
sar
aas
inc
push
inc
out
jae
outs
ja
mov
push
das
pop
(bad)
mov
add
inc
push
inc
dec
mov
dec
out
mov
pop
inc
mov
outs
jae
fs
dec
xlat
xor
push
gs
xchg
mov
js
add
xor
jnp
jmp
pop
and
push
jg
jmp
jns
push
push
push
outs
fs
outs
sub
cli
dec
ja
inc
pop
xor
in
and
fisttp
push
ss
mov
jp
call
inc
push
dec
dec
inc
dec
dec
inc
aaa
or
mov
cmp
dec
jbe
cs
in
sbb
push
dec
xor
daa
cmc
sub
jb
pusha
or
(bad)
pop
fs
fmul
(bad)
loope
push
imul
jmp
cmp
cli
inc
imul
rol
mov
cmp
test
add
jb
jae
or
test
scas
jp
gs
jbe
add
add
rcr
push
rol
in
imul
ja
push
push
jo
sbb
pusha
pop
scas
stos
dec
adc
ja
push
jne
test
inc
outs
mov
jmp
fcom
mov
add
push
dec
inc
dec
sub
les
and
daa
pop
push
dec
push
jg
mov
je
dec
gs
imul
popa
imul
sbb
sbb
fs
dec
add
or
or
sub
lods
rol
dec
dec
mov
and
push
push
add
push
movs
xchg
mov
dec
mov
fcomp
mov
test
dec
sbb
or
pusha
add
adc
inc
ja
sub
in
pop
(bad)
dec
jmp
xor
bound
xchg
cmps
inc
or
bound
inc
mov
ror
or
iret
pop
test
dec
jle
sbb
mov
clc
mov
xchg
mov
pushf
dec
es
and
inc
and
and
dec
inc
or
dec
loop
into
out
cmps
add
inc
push
pop
daa
sbb
lahf
mov
pop
pop
test
sbb
mov
sbb
aaa
mov
sbb
in
pop
push
add
add
dec
arpl
sub
js
adc
test
cdq
sub
test
sub
pop
jmp
repnz
sub
xor
add
popa
aaa
mov
mov
and
adc
jo
xchg
clc
push
or
sub
add
nop
test
(bad)
adc
add
dec
dec
mov
stos
inc
pop
jb
fld
fiadd
and
stos
xor
jle
(bad)
mov
or
lods
(bad)
add
(bad)
lods
add
or
adc
sub
in
or
or
out
mov
adc
xor
jle
jmp
push
and
and
lds
or
push
xor
mov
sbb
add
add
scas
leave
dec
push
enter
add
add
in
retf
scas
dec
mov
or
inc
pop
or
sbb
inc
dec
dec
mov
mov
inc
leave
dec
push
or
or
shl
xlat
mov
mov
dec
xchg
or
adc
pop
mov
adc
inc
call
sbb
in
adc
out
mov
or
push
and
add
jecxz
scas
push
sbb
xchg
push
div
je
dec
dec
cmp
jb
jnp
add
and
jns
(bad)
push
add
icebp
or
add
mov
mov
or
inc
aaa
pop
pop
and
inc
dec
xchg
mov
mov
and
xor
pop
push
add
mov
fwait
movs
and
dec
bound
shl
arpl
cmp
enter
mov
push
sbb
fdiv
and
ins
jecxz
and
rol
and
xor
sbb
mov
daa
dec
push
fs
xchg
out
mov
xchg
and
cdq
jb
fs
call
or
inc
push
mov
add
mov
and
test
mov
lahf
and
push
cmp
dec
cmp
mov
enter
test
or
stos
mov
repnz
xchg
(bad)
mov
rcl
test
enter
add
leave
retf
add
push
mov
aam
or
and
adc
mov
cmp
xor
test
mov
leave
dec
pop
adc
add
popa
and
out
mov
sbb
sbb
push
test
mov
add
mov
je
(bad)
jnp
enter
add
sbb
push
add
or
in
pop
or
pop
fs
push
in
rcr
cmp
jb
xchg
add
loopne
and
inc
repnz
pop
or
jb
add
nop
pop
mov
and
add
nop
add
nop
add
sub
sbb
sub
add
adc
sbb
lock
ret
pop
sbb
(bad)
ror
push
sahf
rcr
adc
push
adc
or
aaa
inc
lds
in
test
mov
cmp
lock
pop
add
sub
ss
ret
in
dec
and
mov
mov
pushf
sbb
pop
inc
or
mov
add
imul
sar
mov
and
rcl
outs
(bad)
fld
in
ret
pop
add
inc
add
adc
adc
ret
cwde
jne
add
nop
add
add
into
or
jmp
(bad)
fwait
lods
jl
mov
or
inc
sub
jmp
and
aam
inc
cs
adc
pop
pop
div
pop
push
xchg
call
mov
add
sbb
loop
ss
cmp
add
je
adc
xchg
add
cwde
loope
(bad)
mov
fdivr
fcom
push
lods
in
and
sbb
cmp
push
fstp
xchg
add
int3
shl
rol
enter
mov
sar
jmp
sub
xchg
ss
xlat
dec
sar
fidiv
xor
int
mov
sbb
mov
mov
sar
mov
(bad)
(bad)
je
test
mov
cld
iret
or
inc
in
mov
pop
mov
add
mov
add
sub
enter
je
push
int3
sar
es
call
push
mov
push
lahf
add
push
cmps
fs
mov
adc
call
imul
(bad)
idiv
imul
adc
add
ret
shl
or
rcr
pop
and
add
sbb
addr16
sahf
sub
test
and
and
or
push
mov
add
mov
push
adc
stos
test
inc
sti
adc
or
dec
pop
pop
leave
stc
add
inc
xchg
nop
adc
or
and
mov
leave
mov
and
lar
sub
dec
xor
jge
xor
cs
aaa
mov
rol
mov
sbb
push
mov
mov
(bad)
jo
shl
pop
pushf
mov
leave
mov
test
rol
inc
xor
test
mov
mov
add
mov
adc
lahf
ror
adc
add
mov
mov
cmp
stos
fsub
fs
and
jg
retf
mov
push
adc
fs
pop
imul
jle
(bad)
push
inc
ds
or
and
inc
mov
js
inc
inc
mov
inc
adc
mov
add
xchg
mov
iret
pop
inc
scas
outs
inc
ins
outs
inc
outs
mov
inc
mov
sbb
adc
daa
or
mov
sub
mov
(bad)
enter
or
int3
retf
push
dec
out
push
popa
adc
or
outs
je
gs
outs
outs
inc
imul
pushf
mov
inc
and
test
push
adc
jae
dec
nop
dec
int
cs
int
adc
sub
ror
push
and
iret
mov
sbb
retf
push
mov
sub
loope
mov
xchg
jae
and
xlat
and
mov
es
adc
in
mov
test
mov
add
and
lahf
outs
outs
ror
nop
push
sub
lea
les
inc
mov
ja
or
gs
std
into
les
leave
enter
push
cmc
add
xchg
sbb
push
or
dec
ret
add
xor
fs
dec
mov
test
cmp
sub
loopne
jg
loopne
fisub
mov
sub
push
dec
cmps
jmp
and
movs
iret
jo
jns
xchg
lods
iret
cmp
pop
ja
setae
jnp
xchg
xchg
xchg
xchg
jge
jg
xchg
xchg
xchg
xchg
popa
bound
xchg
xchg
xchg
xchg
gs
xchg
xchg
imul
xchg
ins
outs
outs
push
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
push
push
push
pop
xchg
xchg
xchg
xchg
pop
pop
pop
pop
xchg
xchg
xchg
xchg
pop
pop
pop
inc
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
inc
inc
inc
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
xor
xor
xor
pushf
xchg
xchg
xor
and
fs
rcr
lock
ror
shl
sbb
test
movs
pop
add
jae
xchg
jp
je
je
inc
sub
xor
fcmovbe
pushf
(bad)
xor
nop
rol
mov
test
mov
push
nop
icebp
(bad)
popa
add
cmc
ficom
adc
cmp
xlat
js
jl
jae
push
sbb
add
or
jecxz
and
pop
mov
add
vcmpss
push
adc
test
cmp
mov
add
sub
or
cs
mov
cwde
add
retf
clc
rol
je
push
jo
jmp
jne
lods
and
shr
idiv
ret
aam
ret
cmp
movs
pop
or
inc
inc
dec
test
lahf
mov
aaa
jo
mov
aaa
sbb
add
movs
mov
cmps
mov
movs
scas
dec
push
stc
int3
outs
outs
test
pop
push
adc
movs
test
pop
stc
pushf
jo
div
xlat
lods
ja
add
hlt
lods
pop
ja
retf
mov
in
and
outs
arpl
or
inc
inc
push
gs
dec
in
adc
movs
mov
jmp
mov
and
xchg
adc
outs
aaa
in
jbe
rol
(bad)
rol
outs
ins
nop
retf
pop
les
popa
leave
mov
mov
pop
xor
(bad)
mov
popa
fs
int3
test
mov
fsub
popa
iret
sbb
aaa
rcl
ins
xlat
push
in
cmp
nop
out
outs
push
enter
jae
and
dec
fadd
mov
push
stc
xor
pop
adc
jbe
adc
rcr
jmp
add
pop
(bad)
in
pop
leave
push
push
adc
in
dec
inc
iret
push
jae
jb
lods
dec
xchg
push
fsubr
or
(bad)
in
xchg
in
push
xchg
mov
aam
(bad)
or
aas
mov
fxtract
or
jne
dec
test
nop
add
dec
fprem
dec
in
mov
outs
cld
xor
push
pop
bound
add
and
fldenv
outs
add
retf
sub
hlt
iret
push
fisub
add
or
xchg
and
sbb
or
inc
(bad)
mov
fwait
sbb
out
ja
jo
and
adc
sub
xor
outs
jo
retf
(bad)
ja
fsubr
cs
adc
jmp
outs
sbb
sbb
add
or
pop
inc
and
sbb
pop
xchg
retf
inc
and
cdq
and
bound
pop
and
push
sbb
fs
push
outs
bound
push
es
addr16
push
add
leave
test
adc
mov
push
out
sbb
sub
push
mov
out
push
dec
ds
popa
ins
ins
xor
test
cmps
xchg
cld
je
std
inc
push
push
inc
jns
xor
xor
je
dec
rcl
cmp
fnsave
mov
push
cmp
push
lahf
push
dec
in
loopne
dec
lahf
cmp
adc
and
movs
cmp
sbb
xchg
inc
out
sub
ret
aam
inc
or
xchg
mov
push
loope
inc
sbb
add
daa
iret
cwde
sbb
retf
fimul
repz
mov
jno
gs
or
dec
sub
jb
adc
push
pop
in
neg
push
xor
mov
pop
pop
jp
inc
(bad)
and
ret
xor
iret
push
sbb
xor
xchg
sbb
or
pop
pop
push
fistp
lods
enter
retf
xor
daa
pop
arpl
add
mov
xor
pop
pushaw
cwde
dec
jb
int3
fbld
jle
and
addr16
pop
fs
loopne
fs
bound
jbe
jg
jne
sbb
jl
jne
outs
inc
xchg
xchg
mov
ins
cs
inc
sub
inc
add
pusha
in
or
inc
loop
stos
jne
dec
jbe
and
add
sub
je
loope
xchg
in
je
ja
mov
add
jae
xchg
loopne
cdq
inc
js
enter
(bad)
test
dec
and
add
cwde
sbb
xchg
push
adc
test
loop
es
dec
inc
xor
mov
jo
gs
mov
mov
ret
mov
jmp
push
cmp
xor
leave
add
or
test
nop
cld
push
jns
cmp
fs
iret
jecxz
fisubr
and
in
mov
cmps
cwde
xchg
mov
cwde
and
inc
or
cmovge
pushf
fsub
push
nop
jecxz
dec
or
push
fs
mov
add
push
(bad)
ror
mov
xchg
movs
pushf
addr16
xchg
adc
bound
in
cmp
lods
or
inc
push
mov
sub
shr
add
push
add
xchg
dec
leave
add
push
jb
sub
shl
addr16
mov
leave
inc
mov
in
jbe
cmps
shl
out
retf
mov
les
iret
les
in
enter
push
ror
inc
leave
retf
int3
sbb
int3
pop
or
and
jns
neg
xchg
xchg
ror
and
jo
paddq
dec
aam
adc
add
jo
push
mov
xchg
fdivr
retf
push
xor
xchg
xchg
fmul
fsubr
add
xchg
gs
test
cmps
inc
xchg
in
adc
(bad)
call
sub
call
cs
jo
push
mov
dec
pop
xor
jo
lods
inc
sub
mov
sbb
add
in
pop
add
hlt
adc
addr16
dec
jmp
adc
movs
jb
gs
inc
cld
cwde
cmp
scas
xchg
cld
push
add
in
cmp
pop
cmp
jg
xchg
retf
gs
adc
and
adc
or
or
pop
add
dec
push
jo
jns
sub
lds
or
retf
fs
adc
cdq
nop
loopne
push
pop
mov
cmp
adc
in
adc
cs
out
jns
cwde
or
jge
sbb
in
sbb
sub
sub
fist
retf
xchg
sbb
sbb
pop
push
inc
push
and
and
sub
in
add
xchg
jecxz
and
fistp
cmp
sbb
push
call
nop
sub
xchg
xchg
push
sub
sub
sub
es
jne
inc
xor
and
or
jns
fs
stc
lods
lds
inc
enter
in
or
jl
lahf
cmp
out
mov
jb
and
push
add
scas
sbb
xchg
and
dec
and
movs
xor
add
mov
xchg
inc
dec
pop
in
enter
xchg
mov
push
(bad)
dec
xor
outs
xor
or
add
mov
sbb
mov
iret
sti
xor
inc
adc
cs
in
test
lods
les
cld
mov
aad
je
ja
cs
out
sub
adc
movs
mov
rcl
(bad)
repz
adc
repnz
sahf
retf
xchg
in
call
jns
movs
in
adc
pushf
hlt
jns
lahf
retf
loopne
sbb
cld
push
cs
movs
jns
pop
nop
add
or
in
jl
fimul
adc
jae
cs
sbb
jae
sub
push
and
pop
sahf
retf
test
mov
sub
xor
cmp
lahf
retf
fdivr
fld
jmp
int3
dec
fcmovnu
adc
iret
in
push
test
in
cmp
ja
mov
adc
stc
cs
in
fsubr
and
jl
movs
push
ins
loopne
adc
out
lock
loope
js
out
pop
cmp
ds
loop
mov
enter
cwde
pop
mov
lods
mov
cmps
repnz
test
lods
mov
cmps
repnz
cmp
iret
in
cmp
mov
mov
dec
enter
cs
int3
(bad)
and
aam
stc
fsub
js
mov
fcom
call
loopne
in
call
hlt
in
inc
jmp
in
hlt
sar
sbb
cld
out
mov
mov
repnz
ds
cld
or
jmp
js
cmp
out
mov
repnz
sahf
scas
in
adc
and
pop
sahf
retf
sbb
sub
xchg
out
lods
xor
xor
out
xchg
out
push
cmp
push
ds
inc
ins
dec
mov
(bad)
sub
mov
sahf
sbb
gs
and
sbb
sub
inc
daa
push
lahf
sub
mov
mov
push
cmps
push
lods
mov
js
test
sbb
xor
ret
push
inc
push
push
xor
or
jb
dec
dec
iret
adc
lea
adc
pop
jno
push
push
push
mov
loope
aam
add
dec
push
jb
xchg
fprem1
push
or
pop
enter
or
inc
mov
or
pop
and
cs
outs
push
pop
pop
mov
pop
mov
nop
pop
popf
push
daa
mov
and
not
push
push
push
cld
add
idiv
push
dec
idiv
sbb
fs
test
test
mov
push
adc
add
ror
push
dec
add
call
dec
(bad)
xor
fadd
adc
cmp
into
imul
adc
jns
mov
mul
inc
jb
cld
mul
clc
rol
dec
and
ds
push
dec
push
sahf
cmp
unpckhps
adc
enter
int3
out
aam
outs
enter
adc
in
mov
xor
icebp
mov
or
pop
mov
adc
dec
add
or
clc
jne
pop
or
jge
or
cmp
ins
popa
and
xchg
mov
push
push
push
dec
pushf
out
pop
je
push
jg
pop
test
push
pop
xor
jbe
(bad)
outs
clc
push
cld
mov
test
js
xor
dec
push
jns
mov
add
xchg
arpl
xor
inc
xchg
ficom
cmp
and
jne
nop
das
add
clc
mov
test
pop
push
imul
dec
add
add
inc
retf
fcomp
iret
or
xchg
ret
fcom
pop
out
imul
in
mov
cmp
sbb
or
retf
add
es
sbb
pop
xchg
mov
xor
add
popa
mov
cs
add
jmp
sbb
or
mov
pop
or
or
mov
xor
dec
fldcw
retf
inc
sub
jg
add
pop
xlat
cmp
cmp
into
add
mov
adc
and
(bad)
loope
mov
pop
test
push
push
add
mov
jmp
pop
push
mov
add
jle
mov
dec
sbb
sbb
pop
or
and
test
xor
sub
and
nop
(bad)
and
inc
dec
retf
or
jb
mov
movs
daa
push
adc
add
js
mov
cmp
or
stc
fmul
test
scas
popa
or
jg
dec
enter
cmp
ja
dec
loopne
loope
sub
pop
mov
fadd
rcl
iret
pop
or
nop
push
inc
pop
inc
rol
test
mov
and
add
mov
lds
test
mov
sbb
adc
xor
rep
in
nop
and
jg
push
dec
xor
xchg
jbe
add
out
fistp
push
inc
jbe
cmp
cmps
data16
inc
arpl
adc
or
loopne
add
dec
xchg
outs
das
mov
leave
mov
inc
or
push
add
or
stos
dec
add
inc
push
mov
push
sar
nop
dec
push
ja
nop
sar
xlat
xchg
xchg
icebp
sbb
add
adc
inc
xchg
cmp
push
cmp
jne
mov
mov
dec
(bad)
dec
mov
add
inc
or
into
adc
jp
in
and
cmp
push
gs
and
jg
je
sub
dec
adc
mov
dec
or
mov
pop
movs
fnsave
cmp
out
sub
leave
jge
pop
ins
add
lea
fimul
xchg
mov
clc
or
aas
xchg
test
push
add
(bad)
xchg
inc
push
adc
xchg
xchg
xchg
test
mov
aas
in
call
imul
sar
test
je
int
dec
pop
jmp
inc
push
dec
mov
dec
int3
adc
pusha
add
lock
mov
inc
ret
xchg
mov
clc
mov
xor
add
dec
mov
(bad)
fld
enter
mov
mov
xchg
add
push
int3
mov
adc
cmp
(bad)
jne
pop
or
jo
mov
mov
push
mov
jle
jp
and
das
ficom
xchg
ins
jmp
mov
add
inc
lea
mov
or
repz
cwde
test
aaa
js
jb
push
shl
cmp
ins
xlat
jne
shl
dec
xor
movs
test
movs
pushf
in
test
and
inc
arpl
pop
test
sub
shl
fild
pusha
inc
scas
or
mov
cmp
js
nop
les
mov
cmps
lea
ret
sbb
mov
nop
or
test
bound
movs
cmp
add
jmp
bound
mov
imul
jno
jnp
jge
sub
lea
daa
loopne
mov
xor
pop
and
xchg
(bad)
or
cmp
jb
add
cmp
rol
dec
fadd
or
xor
ins
hlt
gs
sbb
jns
add
sub
xor
ins
inc
pop
adc
and
outs
icebp
push
cmp
mov
mov
mov
pop
fld
xchg
inc
sahf
aad
clc
inc
mov
add
inc
xchg
adc
push
and
outs
and
invd
mov
jae
adc
dec
scas
imul
outs
push
mov
mov
sbb
int3
mov
push
jp
enter
dec
inc
push
push
add
mov
jg
mov
jmp
pusha
inc
mov
adc
jp
out
pop
push
dec
cmp
sub
jo
sar
push
daa
xor
dec
clc
ror
sub
cli
fadd
pop
dec
push
push
and
xchg
inc
cmp
sbb
aam
dec
adc
add
adc
sbb
xchg
add
xor
jmp
push
add
faddp
push
ja
outs
jne
push
data16
sub
add
shl
pusha
fcom
add
inc
pusha
in
inc
dec
cmp
ret
ror
inc
repnz
pop
push
in
mov
dec
adc
enter
test
push
sbb
push
leave
scas
shl
sbb
xchg
add
lock
push
rol
push
cmp
in
push
out
sub
sub
jmp
inc
pop
and
fwait
or
out
loopne
sub
stos
pop
and
mov
mov
movs
push
jecxz
jb
lds
push
(bad)
xchg
push
and
inc
cmp
adc
inc
jl
mov
jae
jo
adc
push
add
xchg
adc
push
jno
outs
cmp
leave
shl
and
sub
or
es
cmc
popf
das
clc
pop
inc
fs
adc
fcomp
xor
inc
nop
sbb
adc
jmp
xor
shl
sbb
retf
adc
xchg
mov
xchg
xchg
sahf
movs
out
sahf
out
mov
ror
movs
jo
iret
(bad)
or
cli
sub
inc
mov
mov
aas
ja
mov
cs
cld
and
mov
adc
adc
in
add
xor
es
cmp
mul
mov
cmc
sbb
nop
inc
cmp
or
(bad)
lods
scas
xor
push
mov
inc
mov
push
in
nop
and
cdq
inc
and
or
outs
clc
in
push
jae
imul
sti
mov
xor
push
push
adc
enter
dec
dec
fidiv
xor
aas
or
mov
cmps
pop
or
cs
or
stc
es
inc
dec
push
sub
sub
inc
adc
and
add
cmp
cmp
fisubr
nop
fadd
add
add
nop
fcomp
xor
ds
sbb
fsubr
ins
ss
xor
sbb
pop
cld
sbb
repz
je
cmp
and
dec
iret
(bad)
not
push
push
adc
fild
je
out
inc
adc
push
sti
mov
mov
pop
mov
or
push
cmp
or
and
idiv
push
xor
push
sub
jnp
jnp
push
mov
cwde
xor
les
xor
and
mov
aam
sahf
jo
push
adc
sbb
rol
loopne
sbb
push
je
pop
jmp
ins
mov
mov
inc
and
nop
push
daa
ins
adc
and
inc
(bad)
enter
inc
dec
jne
and
and
jb
push
(bad)
mov
sbb
lods
cmps
scas
add
nop
pushf
pop
and
inc
mov
test
mov
shr
inc
dec
sub
ins
push
push
push
sbb
xchg
call
das
call
movs
xchg
or
shr
jne
push
mov
or
mov
add
ror
jecxz
dec
clc
mov
cmp
das
gs
push
mov
outs
pop
dec
pop
and
gs
or
sbb
or
mov
xor
retf
sbb
pop
je
mov
mov
cmc
adc
out
or
mov
push
(bad)
cwde
xor
sub
or
inc
or
(bad)
pop
push
push
js
push
mov
ret
sbb
into
mov
xor
and
aaa
imul
inc
(bad)
push
aam
sbb
out
pop
adc
aam
mov
sbb
mov
xlat
call
loopne
arpl
mov
adc
mov
jmp
inc
sub
fxtract
dec
fcmovnb
push
es
shr
add
es
inc
mov
jmp
add
adc
mov
and
in
mov
mov
sub
inc
sahf
xchg
out
or
fist
cmp
cmps
ficom
out
add
add
hlt
and
mov
imul
push
or
inc
clc
sbb
add
sbb
dec
and
mov
xor
sub
leave
mov
or
sar
cmp
jecxz
out
loop
pop
loopne
icebp
jbe
imul
sub
out
aam
inc
in
add
pop
call
out
add
add
mov
and
add
add
xlat
push
push
fld
inc
popa
jno
push
movs
mov
push
call
enter
dec
mov
rcl
mov
push
pop
ret
jae
add
aad
push
div
test
test
lahf
and
nop
sbb
enter
mov
rol
or
adc
scas
nop
aad
inc
loop
lds
xchg
ins
fbstp
pushf
jmp
mov
js
mov
mov
sbb
addr16
jbe
ins
adc
fstp
lock
jo
test
in
repz
rol
inc
mul
add
lock
movs
xor
dec
sahf
rcr
pop
add
add
int
movs
mov
or
mov
cmp
sbb
cmps
shl
int3
mov
int3
inc
mov
xchg
jmp
cmp
je
pop
enter
nop
out
fcmovne
pushf
aaa
sub
adc
sub
sbb
pop
push
loopne
add
rcl
inc
pop
mov
sub
in
shl
fs
xchg
inc
dec
loopne
aas
test
adc
imul
jmp
inc
and
aas
mov
push
dec
mov
push
sbb
aam
dec
enter
je
mov
jne
movs
sub
imul
stos
and
jge
fcomp
inc
mov
mov
jns
and
stc
or
inc
inc
lock
inc
fadd
and
xchg
inc
sbb
or
shr
fchs
and
outs
fimul
xor
cmp
lock
fistp
leave
push
pop
rcl
ins
js
inc
mov
adc
mov
dec
xchg
and
xlat
or
(bad)
or
xchg
mov
mov
pop
pusha
inc
fdiv
lock
xchg
les
push
adc
inc
and
xchg
add
push
dec
fimul
or
push
add
imul
test
cmp
int
arpl
dec
pop
stos
cs
cmp
mov
cmp
sar
dec
sub
rol
sbb
loopne
or
inc
es
movs
fmul
icebp
ret
jp
jo
adc
jmp
loop
add
clc
mov
ins
icebp
cmp
mov
pop
and
and
(bad)
add
sbb
mov
in
xchg
sub
jns
add
retf
push
por
or
retf
pop
fstp
or
dec
mov
mov
lods
pop
ins
popa
sar
pop
dec
daa
js
leave
and
xor
mov
add
(bad)
aam
jno
xor
ret
invd
sbb
dec
repnz
popa
sbb
xchg
sbb
cmp
xchg
xor
shl
je
shl
or
push
sbb
adc
ins
xchg
rol
retf
xor
add
cmp
fidiv
dec
adc
(bad)
loop
pop
mov
arpl
punpckhbw
inc
fcomp
repnz
fimul
adc
or
outs
jmp
sbb
push
sub
loop
inc
add
and
add
cld
aad
repz
leave
add
neg
sbb
cmps
aaa
sahf
xchg
adc
sbb
call
or
mov
push
in
shl
and
fs
sbb
mov
nop
and
xchg
mov
fild
pop
cmp
es
sbb
pop
pop
aas
hlt
hlt
out
sbb
rcl
std
pop
fwait
mov
cmp
jge
in
cwde
or
push
in
push
jmp
hlt
hlt
stos
xchg
sbb
sub
test
add
mov
or
add
and
jae
cmp
jb
inc
imul
sub
int3
jl
bound
push
xchg
or
mov
clc
in
push
pop
sub
add
dec
jne
push
xlat
push
dec
leave
sbb
call
jae
clc
mov
jne
and
sbb
mov
lods
imul
add
call
jo
jne
mov
or
mov
mov
femms
inc
push
sbb
gs
std
nop
push
mov
ds
(bad)
sbb
clc
pop
pcmpgtb
bnd
mov
hlt
inc
lahf
jle
push
pop
or
scas
mov
adc
cmp
jo
push
push
mov
mov
cmps
push
mov
movs
ins
jno
ret
mov
jnp
imul
mov
ror
pop
pop
rcl
pusha
les
leave
inc
jo
test
mov
dec
push
addr16
or
clc
jge
sub
mov
push
xor
pop
scas
or
add
xor
aas
sbb
push
xchg
adc
shl
bound
push
push
push
into
pushf
cmp
lock
(bad)
in
imul
mov
in
push
pop
(bad)
sbb
jns
clc
rcr
ss
xchg
cmp
jbe
add
xchg
and
scas
mov
call
rol
lock
in
xor
js
mov
pop
push
mov
sbb
cmps
scas
xor
and
mov
xor
inc
arpl
dec
js
sbb
pop
rcl
data16
push
mov
add
mov
add
dec
mov
das
rcl
pop
and
loopne
pop
inc
and
ret
push
xor
adc
inc
dec
inc
(bad)
pop
test
loopne
or
adc
mov
leave
shl
sub
push
adc
pusha
mov
push
je
mov
test
mov
std
ret
call
inc
sbb
sub
popa
leave
movs
cmp
mov
pop
movs
jae
push
mov
add
lock
sbb
scas
and
mov
test
mov
jmp
jns
pop
enter
fldenv
lods
or
(bad)
imul
adc
lock
sar
lods
mov
mov
outs
jns
inc
push
inc
pop
test
fdiv
jge
daa
xchg
daa
dec
lods
add
aas
nop
inc
enter
inc
(bad)
and
add
inc
or
sub
inc
popf
jl
loop
and
pusha
test
sbb
lea
jo
repnz
jmp
sub
sub
hlt
popw
jg
clc
lea
mov
jb
test
mov
imul
scas
test
mov
xor
mov
pushf
push
pop
enter
and
sbb
mov
dec
pop
sete
pop
push
dec
push
outs
or
add
mov
ret
std
and
jae
iret
je
std
je
mov
adc
sub
mov
sub
mov
mov
les
ins
and
mov
pop
pusha
push
pop
inc
cmp
adc
aaa
pop
xchg
and
(bad)
(bad)
nop
mov
daa
push
inc
pop
mov
sub
hlt
sub
push
daa
nop
test
loopne
add
in
es
enter
lock
cmp
iret
mov
fimul
push
daa
adc
push
(bad)
imul
and
mov
add
pop
push
adc
fdivr
xlat
and
dec
test
mov
test
rcr
mov
nop
sbb
arpl
bound
imul
into
das
add
test
popa
fnsave
jle
sub
inc
fwait
add
cwde
xor
mov
retf
fucom
test
dec
sub
sub
leave
dec
jae
lock
in
stos
or
pop
popa
inc
add
push
and
loopne
pop
add
sbb
lea
popf
and
jg
in
in
add
leave
add
inc
test
sub
mov
inc
aaa
cs
mov
add
push
sbb
push
push
sub
jo
nop
(bad)
movs
dec
sub
fmul
sub
or
test
std
dec
rcl
mov
ret
pop
fsubr
jmp
mov
inc
in
dec
dec
not
call
xchg
add
in
add
add
ins
shr
or
loopne
pushf
je
sbb
hlt
mov
jo
add
mov
rcr
rcr
stos
xchg
cmp
mov
mov
ret
add
and
pop
test
adc
daa
inc
or
xor
(bad)
fisub
(bad)
cmp
xchg
pop
stos
inc
push
icebp
inc
or
adc
jae
push
imul
or
call
jmp
loopne
adc
test
ins
pop
push
ret
sub
mov
lods
xchg
pop
sbb
dec
into
es
xchg
xchg
mov
pop
push
inc
and
clc
in
sub
sti
ss
lea
xlat
xchg
cwde
mov
mov
(bad)
sub
xchg
fldcw
xor
cmp
(bad)
sub
cs
aam
(bad)
jl
inc
jmp
scas
retf
outs
push
clc
test
add
pop
pop
stc
ds
push
cs
jb
fidivr
cs
aas
dec
sub
push
cs
sahf
cmps
mov
xchg
movs
jns
out
mov
fsubr
cli
repz
repz
sbb
ds
iret
repz
pusha
jno
xchg
movs
mov
iret
repz
xlat
call
sahf
out
adc
cs
enter
pop
data16
mov
jnp
fild
jo
add
inc
or
and
int3
xchg
fcmovbe
xchg
fidiv
and
retf
leave
lds
leave
enter
lock
adc
jl
movs
(bad)
enter
nop
mov
in
pop
cmp
mov
gs
in
mov
xchg
mov
and
push
jl
pop
in
rol
and
and
ficom
and
les
and
ficomp
push
fcom
and
and
inc
mov
fnstenv
jl
iret
and
sub
sbb
or
inc
inc
pusha
je
cmp
push
rcr
bound
mov
and
inc
sub
push
nop
int
mov
mov
or
inc
mov
sub
arpl
call
mov
add
cs
je
inc
pusha
lods
mov
test
lods
xchg
lods
mov
daa
mov
or
ja
pop
pop
fist
xlat
jne
pop
js
push
add
ins
sbb
lock
and
push
mov
jge
add
nop
sub
dec
push
jns
push
mov
push
es
xor
cmp
retf
mov
or
xlat
out
int
jmp
(bad)
aad
or
push
push
fdiv
inc
dec
sbb
pusha
xor
add
inc
push
or
ja
in
test
js
pop
pop
cmps
adc
add
inc
sbb
es
and
dec
push
mov
test
fsubr
inc
dec
cmp
es
or
inc
and
retf
fs
xor
mov
leave
inc
cmc
jl
jl
push
add
add
(bad)
xor
scas
ins
aad
mov
iret
daa
sbb
jg
leave
or
daa
xchg
xlat
and
fwait
out
jp
cld
hlt
ss
(bad)
aad
clc
lods
ret
sub
and
fs
nop
fs
cmp
ins
and
nop
sub
jno
xchg
cs
lock
sub
cmp
adc
jge
test
or
dec
push
hlt
jecxz
cmp
shr
inc
jle
outs
adc
inc
xchg
dec
mov
das
aam
aam
inc
ds
cmps
add
xchg
add
xchg
cmp
mov
cmp
sahf
and
xchg
clc
cmp
cmp
push
and
cmp
in
or
in
cmp
add
nop
xchg
add
xchg
and
add
cmp
xchg
repnz
adc
cmp
cmp
inc
sub
leave
movs
ror
adc
cmp
mov
ret
movs
cmp
jl
fld
mov
xor
jl
das
cmps
nop
inc
push
test
ins
jecxz
dec
ret
bound
cmp
mov
mul
je
add
imul
jle
push
sub
lods
cmp
in
into
or
sahf
leave
adc
adc
sub
push
and
addr16
fstp
mov
mov
adc
inc
out
daa
stc
pop
dec
inc
inc
dec
dec
dec
push
push
xor
aaa
xor
xor
push
adc
inc
lea
fsub
adc
cmp
xor
lods
cmp
jb
add
or
fmul
inc
ret
sbb
cmp
jns
xchg
sbb
adc
lahf
xchg
mov
ins
mov
inc
sbb
or
mov
nop
mov
sbb
fdivr
mov
push
xor
cmp
mov
inc
aas
push
dec
outs
rol
push
popa
dec
outs
mov
cmp
out
in
adc
pop
push
mov
daa
adc
repnz
pusha
aas
push
sub
sbb
add
push
inc
rcl
adc
sub
dec
inc
les
(bad)
jb
stos
mov
mov
iret
js
inc
scas
in
xlat
loop
pop
adc
mov
inc
(bad)
dec
inc
mov
bound
out
cmp
push
rcr
aad
mov
or
dec
call
push
mov
xchg
or
ins
mov
test
je
push
pushf
mov
push
fadd
fmul
mov
mov
popa
cmp
mov
sbb
push
add
mov
jle
js
inc
sbb
test
aam
enter
inc
xlat
stos
es
jae
or
add
or
pop
inc
inc
mov
jne
adc
mov
jo
jbe
push
jb
push
add
jb
data16
xlat
loopne
ret
sbb
dec
aad
nop
adc
nop
dec
inc
xlat
dec
inc
jb
inc
nop
adc
adc
cwde
ja
iret
mov
cmps
xchg
ret
xor
mov
outs
sbb
xlat
or
inc
pop
inc
jge
adc
dec
stc
rol
mov
popa
add
jp
jno
repnz
inc
inc
inc
jb
int
or
outs
push
inc
dec
enter
inc
xlat
sbb
mov
ins
imul
inc
and
nop
out
or
jbe
push
jb
push
fs
inc
cmp
and
jmp
nop
lods
out
and
arpl
or
imul
dec
adc
das
fcmove
call
inc
js
imul
dec
cmp
push
mov
or
dec
mov
xlat
add
dec
or
and
mov
mov
test
push
cwde
je
retf
(bad)
sbb
add
ja
movs
das
test
in
mov
or
mov
outs
mov
jmp
add
mov
push
push
sub
push
mov
dec
dec
iret
inc
xor
mov
xor
xor
xor
ss
push
cmp
iret
jae
sub
cmp
sbb
cmp
adc
cmp
cs
jbe
xor
xor
ins
jmp
dec
loope
or
add
push
sub
and
sahf
div
aaa
and
sbb
mov
sbb
movs
out
(bad)
fst
dec
push
xor
xor
jno
add
adc
fwait
js
(bad)
pop
cmp
pop
out
cmp
adc
daa
jmp
js
xchg
inc
push
dec
inc
dec
push
or
push
jnp
sub
rcr
fwait
sbb
mov
dec
or
call
cmp
sub
push
push
pop
xor
xor
lahf
xor
xor
inc
inc
addr16
out
adc
fmul
imul
xor
imul
xchg
mov
jb
inc
inc
(bad)
push
rcr
cmp
daa
xchg
or
not
or
or
jg
repnz
dec
dec
cmp
das
and
movs
fs
pop
push
out
mov
aas
inc
dec
pop
cmp
pop
inc
xchg
xor
cld
mov
push
rol
push
inc
mov
rcl
mov
add
and
push
enter
or
add
push
xor
mov
ins
je
xor
(bad)
cmps
iret
dec
push
pop
inc
pop
xor
addr16
fild
push
das
or
jne
enter
sar
fisttp
les
or
aad
shl
push
daa
iret
and
sub
inc
pop
mov
sbb
dec
push
daa
fcom
jbe
dec
pop
or
xchg
push
xchg
daa
(bad)
jecxz
test
dec
dec
inc
ror
mov
adc
cmps
xor
cmps
shl
imul
lock
add
out
aaa
adc
push
stos
xlat
movntps
xchg
mov
push
je
bound
xlat
in
ins
or
lahf
ja
push
mov
cs
out
fisttp
mov
and
push
loopne
jb
ss
call
ss
jne
xchg
cmp
xor
mov
stos
dec
leave
aaa
dec
daa
aaa
push
xchg
sbb
in
popa
outs
xlat
pushf
es
push
imul
pop
not
jg
cmp
cmps
mov
xchg
adc
in
cmp
xchg
cmps
cmc
or
jge
dec
popa
pop
xchg
addr16
dec
jb
fcom
ss
xor
dec
pop
fs
inc
(bad)
inc
(bad)
test
inc
xchg
shl
sbb
inc
and
inc
imul
dec
inc
pop
pop
lock
leave
stos
add
sub
xor
inc
push
xor
pop
dec
fdivr
call
xor
xchg
in
aaa
(bad)
and
xor
xor
xchg
aaa
push
sbb
push
inc
push
int3
out
pop
ss
cmp
add
fs
popa
or
gs
shr
pop
xchg
gs
int
pop
push
pop
mov
xor
xchg
in
movs
jnp
or
mov
inc
repnz
outs
jl
cmp
xor
arpl
mov
das
xchg
inc
sbb
(bad)
pop
in
xchg
xor
mov
arpl
cmp
xor
mov
inc
pop
jp
cmps
mov
jg
das
arpl
test
xchg
inc
dec
bound
add
cmp
mov
or
cmp
adc
cmps
mov
or
inc
push
popa
sbb
outs
add
add
bound
sbb
ins
xor
cmps
adc
mov
pop
xor
fidiv
das
in
jbe
(bad)
xor
call
sub
cmp
add
loopne
jb
cmp
or
mov
sub
imul
aaa
iret
and
pop
push
sub
movs
call
pop
dec
in
xor
xor
pusha
mov
xchg
dec
push
dec
sub
in
cmp
xor
xchg
xchg
xor
out
dec
push
dec
push
mov
bound
jge
aaa
cmp
inc
js
test
jne
or
or
bound
popa
xchg
das
es
aad
cmp
aaa
pop
add
cmp
daa
ja
loope
push
lahf
aaa
cmp
lahf
push
mov
cmp
retf
test
xchg
iret
or
pusha
xor
xor
repnz
pop
cmp
xor
push
aam
(bad)
cmp
cmp
lahf
and
sbb
cmp
and
pop
mov
sub
sar
iret
or
sub
xchg
xchg
sbb
aas
(bad)
(bad)
jmp
jno
xor
jg
dec
inc
push
sub
push
pop
push
pop
pop
aas
imul
or
pop
or
mov
lods
iret
push
push
xlat
xor
mov
xlat
adc
cmp
or
(bad)
xor
adc
idiv
nop
xchg
test
mov
xlat
xor
adc
jb
ss
pop
ss
jae
mov
or
lahf
cs
xchg
cmp
sub
mov
mov
(bad)
dec
ins
jnp
adc
xor
movs
cmps
cmp
ins
call
inc
push
inc
pop
push
xor
inc
cmc
retf
dec
push
push
outs
jb
loope
adc
shl
pop
pop
daa
cli
push
mov
mov
push
aaa
arpl
push
mul
(bad)
mov
cmp
pop
mov
add
xor
in
scas
in
xor
cmp
and
sbb
aam
pop
sbb
in
xchg
xlat
push
and
pop
pop
jg
add
xor
outs
daa
add
ret
cmp
xor
movs
jb
cmp
nop
dec
cs
xor
sub
xor
and
xor
leave
and
ficom
inc
dec
inc
fistp
mov
addr16
xchg
add
xor
int
add
xor
xor
mov
les
jo
popa
mov
inc
and
ins
out
div
xor
inc
push
mov
div
xor
and
xor
les
xor
out
mov
imul
ss
jg
mov
mov
test
mov
cmp
cmps
sub
out
adc
dec
in
pcmpgtb
mov
ss
xchg
in
sbb
in
cmps
xchg
aaa
aaa
das
mov
dec
dec
mov
xor
xchg
add
iret
jg
cmp
loop
rcl
pop
lods
sub
test
and
jne
pop
pop
pop
cmp
loop
dec
and
cmp
fild
repnz
imul
bound
ja
xor
pop
adc
pop
leave
add
add
dec
add
xor
cmp
fistp
mov
sub
jg
pop
pop
fild
pop
inc
jecxz
push
sub
inc
mov
xor
inc
imul
push
pop
xor
fidivr
out
mov
cmp
cmp
(bad)
loop
aad
in
out
fild
or
push
add
pop
and
jg
mov
pop
pop
xor
xor
movs
jmp
add
stc
xchg
(bad)
adc
test
mov
not
xor
fisub
add
lods
mov
mov
das
ss
das
adc
scas
jbe
dec
sbb
outs
outs
pop
xlat
aaa
popa
mov
or
dec
pop
dec
in
mov
cmp
inc
cmps
sub
cmp
xor
icebp
lods
fstp
lods
cmp
je
push
daa
and
adc
cmp
push
iret
lods
inc
lods
iret
xor
xor
out
add
mov
jbe
jne
jbe
mov
xor
dec
mov
shl
xor
or
call
std
(bad)
jbe
xor
ss
aaa
xor
sub
push
imul
dec
mov
mov
and
inc
movs
bound
pop
xor
call
sbb
test
js
test
pusha
scas
xchg
push
enter
pop
dec
mov
test
scas
xor
adc
mov
ss
(bad)
or
mov
fistp
(bad)
and
lahf
loop
jne
(bad)
test
out
idiv
or
xor
add
mov
js
inc
pop
sbb
pop
dec
lahf
imul
cs
inc
jmp
dec
jne
sub
mov
cmp
aas
imul
mov
cmps
addr16
pop
dec
popa
ins
xor
inc
call
loope
test
ret
pusha
shl
push
imul
popa
pop
dec
add
(bad)
inc
cmp
inc
rcl
and
gs
xor
mov
ret
pop
push
xor
inc
inc
sub
push
pop
mov
cmp
inc
or
jo
lds
aas
and
sti
nop
push
sbb
aas
push
push
push
aas
repnz
pop
or
je
jae
sbb
dec
inc
das
and
sbb
scas
bound
push
sub
xchg
jne
arpl
je
cwde
pushf
inc
outs
ins
pop
or
rcl
add
xlat
sbb
adc
movs
inc
dec
pushf
dec
dec
enter
push
dec
cmp
pop
xor
xor
sbb
leave
in
push
test
inc
pop
(bad)
xor
xchg
and
sub
(bad)
xor
aaa
or
das
pusha
mov
cmp
fs
aaa
cmp
cmp
push
cmp
(bad)
cmp
xor
xchg
imul
xor
or
(bad)
ror
xchg
inc
(bad)
adc
dec
xor
xor
inc
cmp
inc
xlat
gs
xor
adc
xor
push
bound
cmp
mov
(bad)
push
jbe
sbb
adc
aaa
aaa
das
test
aaa
nop
out
or
xchg
or
popa
jb
push
xchg
cmp
cwde
nop
xor
das
addr16
mov
push
xchg
xor
leave
add
gs
inc
adc
or
dec
inc
mov
inc
push
stos
xor
xor
jns
cmps
bound
push
test
pop
jg
or
xchg
movs
lods
je
(bad)
push
jo
cmp
xor
xchg
out
sbb
inc
mov
ins
ss
(bad)
loopne
es
xor
cmp
add
enter
push
xor
aaa
xchg
sbb
ss
ss
mov
inc
sbb
xor
xor
mov
adc
lahf
or
mov
push
pop
enter
(bad)
xor
inc
xor
xor
xor
push
xor
xor
xor
mov
and
sbb
ss
or
pop
sbb
jmp
cmp
sbb
cmp
and
cmp
and
scas
aaa
xchg
aaa
cmovs
pop
jb
arpl
jne
nop
mov
xor
add
push
jno
sbb
test
(bad)
pop
inc
mov
cmp
push
xchg
mov
cmp
xor
pop
inc
sbb
and
lods
bound
xor
addr16
fistp
jg
pop
jg
loope
sub
sbb
xor
xor
add
outs
and
inc
mov
push
xchg
pop
lock
or
ss
sbb
xchg
inc
addr16
push
mov
clc
and
and
pop
ss
push
or
pop
inc
mov
lods
das
pop
into
mov
xchg
dec
mov
pop
xor
push
pop
push
rcr
pop
pop
inc
stos
lods
mov
mov
push
fwait
push
pop
mov
mov
mov
or
dec
push
xchg
add
dec
push
push
in
xchg
pushf
inc
push
sub
jb
sbb
daa
dec
inc
xchg
push
push
push
out
push
dec
leave
shr
sub
in
nop
pop
sub
ds
call
imul
dec
xchg
test
imul
cmps
leave
dec
and
mov
pop
push
dec
jno
or
mov
push
or
(bad)
xchg
dec
cmp
sub
sub
push
(bad)
pop
xor
or
and
inc
sub
mov
call
push
or
push
mov
sub
push
sub
and
cmp
xor
(bad)
fimul
mov
ja
and
fist
inc
cmp
ds
xor
xor
sub
leave
not
cmps
and
jbe
xor
push
cmps
xor
xchg
add
xor
rcr
sub
and
enter
xlat
xchg
cmp
imul
outs
add
push
outs
fbstp
iret
and
xchg
xor
imul
dec
and
aaa
fbstp
nop
sbb
xor
cmps
fs
sbb
je
xor
xor
iret
gs
cmp
jb
bound
in
aaa
aaa
int
popa
dec
aaa
lahf
data16
cmp
nop
aaa
cmp
mov
sbb
movs
outs
dec
nop
mov
xor
push
cmp
imul
test
ins
xchg
xor
push
push
dec
sub
xor
mov
add
mov
push
sub
xchg
mov
inc
imul
xor
pop
rcr
xor
mov
fcmovnbe
xchg
xor
xlat
xor
sub
xor
xor
adc
rol
(bad)
loopne
ror
scas
clc
rcl
sub
xor
xor
add
dec
lahf
cmp
pop
rcr
out
cmp
dec
jnp
pop
out
pop
cmps
arpl
mov
cmp
xor
sub
dec
jg
mov
pop
scas
pop
dec
push
out
xchg
sub
stc
jg
xor
mov
popa
sub
pop
inc
mov
push
dec
adc
xor
pop
and
test
out
sbb
and
push
inc
pop
adc
(bad)
fst
(bad)
lahf
xchg
xchg
cdq
pop
test
sub
add
fisttp
(bad)
mov
push
pop
data16
popa
test
xchg
(bad)
pop
addr16
push
imul
cmp
add
push
mov
mov
or
in
outs
dec
inc
aaa
and
inc
cmp
pop
out
adc
enter
push
bound
jmp
(bad)
xor
imul
test
das
adc
out
add
(bad)
adc
aaa
ja
dec
mov
leave
cmp
ss
aaa
ss
or
sbb
aaa
push
mov
xor
xor
ficom
pop
es
cmp
inc
xor
add
sbb
dec
and
and
xor
dec
dec
xor
or
mov
jp
inc
mov
ret
daa
test
inc
aas
jmp
dec
cmps
push
mov
mov
add
sub
dec
adc
dec
popa
mov
mov
aas
inc
inc
xlat
cld
push
mov
vrsqrtss
aas
mov
or
sub
ja
push
mov
sub
arpl
ins
bound
sub
imul
push
mov
dec
push
cs
lods
sbb
sub
add
jl
or
sub
test
xlat
sub
fidiv
cmp
sub
jno
mov
add
or
pop
imul
or
loop
sub
jnp
mov
and
xor
push
push
inc
dec
sbb
add
pop
in
data16
sahf
dec
cdq
push
sbb
(bad)
adc
ins
inc
pop
leave
push
mov
loop
dec
das
sub
push
cmp
sbb
fist
test
daa
mov
pop
pop
mov
leave
or
xor
add
sbb
add
inc
add
xor
inc
xchg
aaa
inc
into
inc
and
lea
mov
mov
add
inc
imul
sbb
mov
mov
cli
sub
dec
mov
mov
loop
add
sar
enter
iret
jne
fild
mov
pop
adc
shl
mov
adc
mov
sbb
repz
ins
add
mov
mov
ds
push
jbe
push
inc
aaa
scas
jns
sbb
sahf
arpl
mov
(bad)
push
lea
pop
push
mov
cdq
sbb
in
sub
mov
push
jb
mov
push
adc
or
repz
push
push
adc
adc
aas
rcl
jmp
add
movs
pop
dec
mov
add
pop
pause
mov
add
adc
shr
add
or
add
sub
inc
mov
add
or
test
aas
jo
inc
xchg
mov
jno
retf
test
sub
add
int3
mov
sahf
or
js
adc
movs
aam
adc
push
and
pop
push
mov
int
adc
sar
ret
sbb
mov
inc
push
les
iret
psraw
or
mov
cmp
test
dec
clc
adc
sbb
int3
mov
lea
push
lock
sbb
sbb
or
mov
(bad)
push
lods
add
mov
je
test
sub
sbb
or
hlt
data16
add
push
clc
lock
or
fwait
mov
inc
(bad)
jmp
jbe
gs
push
pop
add
imul
and
les
cmc
je
push
xor
add
fadd
mov
push
pop
mov
cmp
nop
mov
pop
pop
iret
xacquire
or
inc
rcl
popa
pop
sbb
call
inc
mov
in
xchg
add
mov
jmp
or
sub
sbb
or
arpl
add
aaa
push
in
mov
jno
xchg
pop
adc
les
and
lds
xor
pop
xchg
jnp
sub
dec
lock
adc
lock
dec
dec
mov
pop
sub
sbb
arpl
adc
ds
jg
enter
add
and
test
in
sbb
mov
inc
int3
inc
rcr
dec
push
pop
int3
xchg
movs
adc
mov
mov
xor
les
ret
or
xchg
test
(bad)
(bad)
mov
or
in
lock
(bad)
sub
dec
outs
cwde
ret
(bad)
pusha
les
fdivr
sub
inc
pop
jecxz
or
sub
mov
push
shl
daa
jne
or
sbb
adc
imul
xlat
inc
add
mov
xor
loop
mov
mov
daa
or
das
enter
shr
push
add
add
or
mov
test
lds
jno
repnz
popa
sub
mov
lods
add
retf
inc
test
pusha
aad
mov
fiadd
nop
pusha
call
mov
mov
or
scas
pop
dec
cmps
cmp
sub
cmps
inc
inc
pop
imul
rcl
imul
push
stc
sbb
mov
movs
aad
test
push
push
dec
lods
dec
xor
xchg
out
dec
push
pop
pop
test
add
fist
movs
enter
daa
inc
or
cmp
add
sbb
push
inc
push
aad
adc
push
mov
xchg
fisubr
addr16
sahf
dec
jmp
inc
hlt
xchg
ins
adc
or
lea
jbe
cmps
and
fst
imul
test
fnsave
test
and
add
div
or
gs
fisubr
rol
push
enter
mov
sub
movs
std
mov
ret
out
int3
or
or
xchg
fdiv
cmp
shl
mov
clc
xchg
or
and
clc
inc
outs
add
jno
clc
cmp
test
sar
xchg
xchg
sub
loope
cmps
adc
and
add
pop
sbb
jbe
push
push
out
setne
daa
ins
shr
add
enter
test
in
mov
xchg
in
in
cmp
ds
and
in
in
and
and
in
in
es
sub
in
in
sub
sub
in
in
cs
adc
in
in
adc
adc
pop
out
in
pop
sbb
nop
push
mov
cwde
hlt
adc
cwde
or
sbb
sbb
sbb
xchg
xchg
xchg
xchg
push
pop
add
xchg
xchg
xchg
xchg
add
add
xchg
xchg
xchg
xchg
push
pop
or
jb
xchg
xchg
or
or
cdq
xchg
or
clc
lea
inc
pop
mov
mov
dec
outs
push
and
stc
fdiv
das
push
gs
lea
(bad)
popa
je
cmp
inc
bound
in
das
inc
jo
jns
ror
sub
push
ins
pop
jne
xlat
xor
dec
arpl
jbe
pop
fwait
mov
out
push
inc
push
in
pop
pop
add
mov
jbe
popa
xchg
jno
scas
dec
cmp
fwait
daa
aaa
push
(bad)
lds
adc
jmp
xor
add
push
cmp
xlat
fwait
aaa
adc
mov
jmp
shl
or
lock
sub
adc
pop
or
ficomp
inc
maxps
xchg
sub
pmuludq
xchg
dec
pop
pushfw
imul
sub
or
mov
add
push
mov
sub
fcmovnb
inc
fbstp
sub
loopne
imul
das
leave
(bad)
xchg
lock
or
daa
test
push
lea
aam
test
sub
push
dec
push
test
cmp
mov
and
adc
repnz
mov
and
mov
pop
lods
loopne
sbb
mov
test
outs
les
xchg
adc
push
mov
dec
jle
daa
jl
add
or
test
bndldx
sbb
inc
in
pushf
retf
cmp
shl
or
hlt
fcomi
out
ja
adc
mov
pop
or
adc
ja
fwait
sbb
pusha
jne
mov
and
jbe
jne
mov
in
or
sbb
loopne
cmp
fyl2xp1
std
pop
fcmovb
rol
jmp
sbb
push
inc
pop
mov
clc
pop
nop
sahf
and
pop
call
sub
pop
(bad)
and
mov
and
imul
leave
and
push
mov
jle
(bad)
daa
mov
cs
je
or
and
fld
add
inc
lods
xchg
inc
lods
leave
and
test
mov
test
push
jne
dec
je
or
cli
pop
cmp
cmps
in
jae
or
or
mov
out
add
mov
dec
pop
movs
cmp
mov
cmp
sub
add
push
loopne
sub
inc
xchg
adc
sub
and
jne
pop
repnz
push
push
dec
or
sbb
movs
dec
or
ror
dec
cli
add
cmc
push
rcl
xor
stos
das
and
cmp
push
dec
mov
sahf
dec
rcl
add
cmp
pop
inc
xor
mov
ss
mov
pusha
sub
mov
or
shl
enter
mov
enter
sbb
out
lahf
dec
dec
and
and
or
xchg
clc
sbb
dec
push
xchg
lock
and
push
xor
xor
cs
pop
and
dec
ss
sbb
cwde
cmp
pop
lock
jl
nop
retf
adc
cld
mov
aam
outs
push
daa
mov
popf
mov
xor
or
adc
xchg
sub
scas
and
pop
jmp
and
loope
mov
or
jnp
shr
or
add
clc
fsubr
hlt
bound
loope
add
jmp
test
or
ret
out
inc
(bad)
sub
stos
or
retf
in
mov
mov
nop
pop
cmp
adc
dec
mov
mov
test
loopne
push
dec
sti
adc
inc
xor
inc
lea
adc
dec
jmp
pop
mov
call
cmp
popa
sbb
daa
mov
add
rcl
mov
ins
mov
push
daa
and
stc
xor
pop
pop
test
inc
or
mov
gs
cmp
xchg
stc
push
es
jmp
aas
rcr
inc
test
mov
push
dec
or
lahf
movs
jmp
sbb
repnz
push
mov
mov
rcr
jl
call
call
mov
xchg
movs
clc
mov
mov
sub
test
enter
movs
cmp
and
dec
dec
repnz
xchg
push
xor
inc
push
push
dec
inc
push
(bad)
adc
nop
add
dec
movs
test
aam
dec
push
imul
inc
into
das
sbb
jl
in
cmp
dec
cmps
push
cmps
int3
mov
cmp
fcom
dec
inc
push
inc
push
lods
and
xchg
push
pop
ja
cmp
push
mov
inc
inc
push
sub
nop
xchg
dec
push
ror
inc
dec
lahf
add
in
sbb
push
xchg
test
js
inc
xor
out
pop
test
add
loopne
or
adc
push
inc
das
inc
fstp
sti
xor
je
sub
scas
inc
xchg
mov
pop
push
xor
fldcw
mov
rcl
fadd
dec
push
ss
and
lock
outs
adc
push
lock
pusha
nop
call
cmp
fmul
imul
xor
not
aas
sub
cmp
popa
xchg
add
push
pushf
push
push
loope
jge
fucomi
mov
push
movs
mov
fcomp
mov
fabs
fcom
iret
jne
or
call
das
jecxz
repnz
cmp
mov
xchg
jns
jno
fs
cdq
mov
add
loopne
and
inc
mov
jb
shr
pop
cmp
jne
nop
ret
(bad)
rcl
test
and
or
adc
ss
mov
call
sar
or
cmp
jg
scas
lods
dec
push
test
push
xchg
daa
shl
jb
cs
sub
pusha
and
adc
lds
daa
or
dec
jne
or
pushf
adc
push
add
ja
sbb
xor
inc
sbb
inc
cmovno
push
or
sti
lea
mov
daa
dec
mov
and
mov
frstor
cmp
jnp
mov
xlat
ins
and
jns
xor
adc
jbe
add
xchg
jne
adc
pusha
cmp
(bad)
fwait
mov
push
push
sub
out
pop
test
outs
je
add
pop
push
loopne
js
sti
mov
imul
cmp
cs
test
es
dec
(bad)
push
or
mov
dec
lods
sbb
ret
sbb
adc
loopne
mov
add
and
mov
ror
xor
jmp
xor
int3
test
xor
mov
lock
push
inc
out
enter
test
sbb
jne
dec
pop
push
and
imul
xchg
adc
xchg
es
jns
sbb
fild
cdq
test
mov
out
aad
xor
dec
es
nop
add
sbb
sub
out
inc
add
lods
add
addr16
add
xor
call
add
and
xor
mov
sbb
adc
sbb
movs
mov
or
dec
daa
les
inc
push
test
pusha
xlat
push
mov
scas
push
mov
add
adc
push
cmp
int3
sub
or
or
les
add
xor
dec
pushf
and
adc
jae
les
out
and
rol
fmul
imul
push
and
mov
sub
push
ja
mov
inc
repz
dec
fdivr
stc
xchg
lock
mov
push
out
jecxz
es
into
adc
inc
cld
das
dec
mov
(bad)
dec
jge
loope
xor
pushf
dec
je
pusha
lahf
inc
inc
jmp
push
frstor
add
jmp
call
lock
mov
cmp
jmp
jmp
(bad)
pop
dec
loopne
push
cmp
jge
jecxz
test
dec
xor
or
mov
mov
fild
call
pop
out
push
lods
jmp
imul
test
dec
retf
out
mov
scas
push
xor
xchg
adc
or
clc
addr16
push
cmps
adc
or
xor
jae
lods
push
lock
test
jmp
inc
cwde
push
pop
icebp
mov
jne
data16
add
add
cmp
push
mov
xor
jns
leave
cmp
jbe
push
int3
or
add
out
cmp
pop
loopne
and
test
jns
cmp
test
push
nop
mov
add
sbb
and
std
scas
pcmpeqb
xor
inc
xor
push
jle
push
xor
inc
cmp
ret
mov
inc
and
imul
cmp
adc
jmp
sbb
sub
or
mov
xlat
cld
mov
adc
enter
mov
mov
sbb
mov
in
in
add
inc
adc
repnz
cs
xchg
lock
in
push
fidivr
in
inc
mov
(bad)
sbb
in
xor
test
push
adc
and
mov
in
pushf
fild
in
imul
cmps
inc
test
sbb
sbb
sbb
test
repz
or
in
mov
or
push
mov
and
push
push
pushf
jle
jae
in
mov
jg
jnp
hlt
push
rcl
lock
mov
sub
aad
inc
or
or
pmuludq
clc
out
retf
push
ins
xchg
clc
es
or
sahf
int3
sub
out
or
jl
popa
dec
add
in
or
shr
and
add
movs
adc
(bad)
not
inc
or
or
sbb
lods
arpl
fisttp
mov
iret
cmp
cmp
adc
jne
sub
ja
xchg
inc
xchg
lds
xor
call
sahf
push
sbb
in
repz
and
fiadd
pop
sbb
adc
enter
movs
aad
adc
adc
nop
out
push
jge
out
fmul
lea
cdq
mov
je
sub
fsub
and
hlt
adc
imul
jb
mov
scas
mov
dec
dec
cmp
aas
sub
push
mov
std
inc
ins
or
and
and
jmp
adc
outs
and
sbb
sbb
dec
push
xchg
imul
add
push
out
xor
pop
scas
add
cdq
(bad)
adc
mov
sbb
loopne
fmul
mov
imul
daa
lahf
mov
fs
aas
bound
mov
sub
jae
into
sub
ret
cmp
imul
jl
aas
mov
push
sbb
or
rol
nop
scas
sbb
xor
cmps
mov
nop
outs
aad
or
clc
mov
or
xor
pushf
mov
push
imul
xor
sbb
cld
push
pop
fs
gs
bound
cmp
jle
les
in
ins
sbb
and
sub
mov
cmp
call
push
rcl
sub
push
pop
xor
push
or
xchg
inc
xchg
and
ja
or
mov
adc
or
and
push
mov
js
lea
or
mov
fwait
out
pop
mov
adc
xor
add
ds
test
ret
rol
leave
sub
les
mov
sbb
adc
call
and
fcmovnbe
(bad)
fadd
das
bound
shr
ret
and
sbb
cmp
cdq
in
mov
sbb
xchg
add
dec
mov
ins
mov
dec
data16
retf
mov
nop
sbb
mov
loope
dec
and
mov
xor
shr
sahf
dec
aaa
or
rcr
dec
ins
call
dec
xchg
or
pop
sbb
outs
inc
in
and
lock
lods
jmp
je
or
data16
jge
or
mov
jmp
neg
mov
outs
xor
cmp
jne
das
or
icebp
pop
or
add
pop
add
repz
enter
bound
mov
fisub
dec
jge
xchg
ret
mov
and
call
pop
int
les
jb
xor
popf
mov
sbb
mov
ret
or
sbb
mov
mov
fcomp
in
es
out
mov
sbb
add
mov
lock
pop
or
pop
xlat
lea
cmp
sti
fiadd
jne
sub
cli
add
xor
fmulp
pop
jg
adc
loope
jge
push
cmp
jge
in
add
in
or
or
lds
loope
loop
(bad)
mov
add
pop
add
adc
fadd
dec
int3
enter
fwait
call
sar
aas
pop
fcmovnu
pushf
and
jo
inc
in
les
xchg
mov
enter
fsubr
adc
adc
shl
sbb
inc
inc
inc
or
int3
push
push
or
adc
fnsave
mov
push
pop
cmp
rol
xchg
ror
sbb
dec
xor
sbb
leave
rcr
aas
dec
and
sar
fsub
hlt
pop
push
sub
inc
aas
fwait
mov
xor
pop
inc
and
sar
dec
xchg
adc
aaa
and
outs
jp
dec
and
pop
dec
inc
in
mov
rol
lock
inc
pushf
inc
sub
movs
addr16
pop
addr16
rol
sbb
xor
dec
enter
xchg
jmp
bound
retf
inc
xor
cdq
add
fisubr
cmp
dec
add
fadd
sbb
push
jmp
jmp
sbb
stos
sbb
sbb
out
xchg
mov
add
fild
sub
call
pop
add
push
(bad)
mov
pushf
arpl
pushf
jg
xchg
ret
and
daa
xchg
xchg
sbb
ret
jo
adc
and
ret
(bad)
and
retf
nop
sbb
ret
and
aam
inc
xor
or
sub
mov
mov
jbe
pop
pop
ret
(bad)
push
dec
(bad)
mov
inc
loope
(bad)
ja
mov
add
dec
pop
cmp
inc
dec
arpl
rol
cdq
in
addr16
les
mov
and
(bad)
iret
jns
and
cmp
sub
mov
or
aaa
and
pusha
lods
pop
and
push
dec
add
fcomp
xor
movs
lds
jns
fs
in
fchs
inc
das
adc
xchg
ja
shl
sbb
and
test
add
daa
mov
push
movs
pop
jle
into
(bad)
or
test
adc
xchg
sub
add
mov
pop
aas
je
xor
pushf
mov
dec
and
rcl
mov
js
ret
outs
cld
mov
popf
pop
sub
(bad)
out
into
mov
mov
cmps
or
jno
cmps
das
push
enter
cmp
sub
fwait
in
dec
sub
int
loop
(bad)
out
(bad)
cmp
push
int3
inc
jg
jl
cmps
push
push
xor
scas
xlat
push
mov
xor
imul
mov
or
sub
mov
stos
xlat
shr
daa
xor
dec
sub
daa
inc
push
(bad)
jge
out
mov
dec
add
or
sub
sahf
fsubr
mov
enter
and
daa
or
int
leave
mov
xchg
leave
inc
dec
xor
gs
repnz
sub
xchg
dec
add
ror
dec
or
xchg
hlt
mov
scas
mov
inc
dec
jne
aam
sub
je
add
inc
rcl
push
call
pop
mov
aam
push
adc
lods
scas
mov
adc
xchg
cs
das
clc
lea
xchg
cmp
push
push
ins
dec
jae
popa
jecxz
dec
mov
push
pop
sbb
outs
jns
retf
sub
in
rcr
mov
jl
dec
clc
retf
xchg
xchg
out
and
push
mov
push
dec
lock
mov
sbb
test
add
adc
inc
adc
ss
fsubr
lods
mov
js
xchg
push
sbb
es
push
push
ja
frstor
xlat
mov
loopne
xchg
mov
dec
out
and
cmp
mov
imul
test
cmp
or
ret
bound
pop
aaa
shl
outs
repz
ror
or
ret
inc
mov
pushf
push
not
xchg
add
cmps
xchg
retf
xchg
sub
loope
add
aam
add
sbb
popa
sbb
or
jmp
inc
add
fist
push
repnz
and
div
add
cmp
sub
mov
dec
push
or
or
or
adc
jle
sub
and
pusha
and
rcr
lods
shl
mov
xlat
sahf
add
and
cmc
rcl
xchg
and
sub
push
sub
loop
loopne
mov
adc
add
popa
or
cmp
pushf
shr
push
push
ror
adc
int
lds
pop
aam
arpl
sub
ficom
adc
xor
jbe
xchg
fild
ss
sub
cmp
xchg
jle
sar
or
fcmovbe
mov
adc
add
add
add
pop
add
push
sar
nop
push
xor
inc
dec
jle
pop
and
not
jbe
mov
adc
xor
ins
or
test
add
jbe
addr16
sti
mov
int3
loope
mov
xchg
paddsb
loope
push
scas
std
inc
push
test
add
iret
cmp
div
int
add
push
out
xor
sbb
cmc
sbb
out
mov
cmp
xor
rcl
jl
adc
dec
jae
pushf
add
add
inc
sar
dec
xor
mov
nop
fild
call
jne
(bad)
mov
adc
imul
inc
test
fild
iret
retf
in
xor
sub
or
mov
rol
test
fisttp
ror
ror
nop
pop
adc
sub
(bad)
mov
call
fst
inc
mov
dec
dec
dec
dec
dec
dec
dec
pop
das
mov
push
cli
pop
pop
pop
popa
dec
add
aaa
mov
addr16
imul
out
xor
push
jb
je
jbe
js
jp
out
xor
xchg
cmc
cmp
sub
aaa
inc
ret
cld
clc
lea
je
dec
das
sub
hlt
inc
xor
iret
cdq
ins
mov
sub
mov
je
mov
rol
jae
mov
in
push
mov
mov
outs
adc
(bad)
mov
bound
cmp
sbb
sub
aad
out
dec
lds
mov
int3
aam
out
popf
xor
adc
add
mov
nop
pop
xchg
call
and
inc
test
movs
and
cld
push
sub
and
int
jg
rcl
rol
stc
pop
rcl
add
push
xor
loopne
mov
fnstcw
sub
inc
mov
or
cmp
jg
push
mov
(bad)
inc
das
mov
das
test
pop
sub
pushw
out
push
dec
pop
and
imul
aas
or
popf
sbb
push
leave
mov
mov
xor
add
not
sbb
fimul
add
icebp
mov
mov
and
cld
enter
inc
loopne
inc
mov
mov
sub
jmp
push
imul
adc
dec
sbb
add
mov
adc
inc
rcl
or
sbb
fs
clc
xor
es
rcl
in
xchg
add
add
cs
xchg
add
adc
add
ret
aam
dec
and
cmps
mov
lods
lods
inc
add
pushf
mov
inc
(bad)
out
pop
les
push
out
inc
add
mov
ins
movs
mov
inc
and
fs
push
xor
rol
addr16
inc
and
jnp
imul
test
xor
mov
adc
mov
iret
mov
inc
loopne
mov
ret
mov
adc
jne
aad
push
enter
adc
mov
hlt
or
jg
inc
(bad)
sbb
xor
aam
cdq
mov
lds
ja
and
jne
sub
sub
retf
movs
push
mov
fcom
inc
add
mov
pop
ror
scas
les
mov
cmp
seta
cmp
dec
jl
jbe
(bad)
pop
call
and
dec
lock
cmp
pop
mov
cmps
or
rcl
outs
inc
sahf
and
jg
bound
lods
push
daa
ja
or
push
dec
fcom
add
mov
sbb
stc
lds
fadd
jle
mov
shl
(bad)
popa
inc
pop
or
mov
xor
hlt
pop
mov
adc
jg
mov
popa
xor
adc
and
fcmovbe
xchg
sbb
repnz
mov
cmp
pop
mov
rol
sbb
mov
stc
into
in
(bad)
sbb
lahf
add
push
sbb
mov
fcmovnu
and
movs
adc
jp
xchg
jg
and
lea
jmp
ins
ins
dec
mov
(bad)
sub
lods
je
aas
out
xchg
rcl
ins
shr
fnstenv
jbe
jmp
push
add
cmc
sbb
push
mov
shr
jno
mov
pop
(bad)
jne
add
jle
in
mov
cmp
ficom
loope
xlat
sub
dec
movs
call
push
pop
into
add
pop
jecxz
push
jl
jnp
mov
in
je
push
mov
cmp
mov
xchg
pop
icebp
pushf
fsub
xchg
add
cvttps2pi
sub
jns
pop
dec
xlat
xchg
cmps
or
xor
repz
push
xor
dec
movs
sbb
or
cmp
fdivr
je
or
push
or
jecxz
mov
mov
adc
(bad)
out
cmps
fld
push
adc
and
ud1
dec
popa
adc
dec
add
push
sbb
inc
dec
push
nop
add
or
lea
sbb
or
and
pop
enter
and
add
dec
out
sub
push
and
mov
add
add
stc
inc
fiadd
push
dec
test
sub
cwde
jl
or
push
in
mov
mov
push
add
jo
or
popf
jae
adc
test
or
nop
cmps
inc
inc
mov
mov
or
jno
repnz
call
or
mov
push
jb
ins
popa
(bad)
enter
js
xchg
test
(bad)
(bad)
sub
cmps
fstp
in
aaa
int
fs
in
ja
or
and
jge
sub
rcr
cs
in
inc
add
call
je
or
or
push
inc
cmp
mov
lods
ret
aam
dec
pop
or
je
movs
add
bound
add
ret
je
cdq
add
int
pop
lods
loope
adc
sub
mov
rcr
nop
jle
fldcw
sar
hlt
dec
lock
xor
fwait
int
out
mov
in
in
pop
subps
in
in
push
in
in
jl
mov
add
popa
rcr
inc
addr16
scas
pop
xor
add
adc
cwde
or
mov
push
xchg
fs
sahf
pop
pop
adc
lahf
bound
sub
pusha
xor
add
adc
in
fisub
adc
inc
sbb
or
adc
test
nop
int3
test
adc
int3
cmp
mov
inc
je
outs
or
test
inc
js
pusha
mov
inc
addr16
sar
test
sbb
test
add
cmps
call
mov
loop
loop
dec
jae
sub
ins
mov
in
test
jg
cmc
sub
bound
cmc
add
aad
or
and
xor
adc
loopne
icebp
adc
(bad)
shr
dec
cwde
fiadd
xlat
les
mov
cmp
sahf
cs
push
icebp
cdq
push
in
adc
push
add
pop
test
sub
rcl
and
inc
xor
dec
bound
or
and
add
add
loopne
pusha
ja
fld
sub
fcom
or
cmp
or
aaa
pop
push
adc
int
fwait
adc
sub
sub
mov
xor
bound
dec
shl
and
xor
shl
cmp
dec
shl
dec
dec
inc
popa
shl
dec
inc
jmp
sar
int
inc
or
push
sub
enter
adc
(bad)
jmp
or
push
call
dec
inc
add
or
imul
or
inc
out
dec
(bad)
mov
test
pusha
and
sub
in
sub
mov
jl
adc
mov
or
daa
loopne
(bad)
loopne
and
xchg
jl
mov
and
mov
bound
sbb
push
pop
ret
shl
hlt
and
mov
clc
sub
repz
iret
or
push
sar
inc
mov
movs
jb
sar
idiv
sbb
pop
sub
pop
mov
stos
xchg
mov
pop
cmp
push
in
fs
pop
les
or
inc
je
cmp
shl
cmp
mov
mov
nop
div
std
fild
fdiv
cwde
inc
fwait
jmp
bound
mov
ins
call
call
dec
and
mov
add
push
nop
add
sbb
jg
sub
mov
test
test
das
push
leave
in
sbb
das
or
retf
(bad)
xor
xor
mov
xchg
xchg
mov
and
inc
push
fnstenv
push
addr16
push
rsm
and
imul
sti
minps
or
das
imul
xor
nop
das
sbb
adc
nop
das
adc
push
mov
xchg
test
jl
sahf
in
jmp
(bad)
pushf
aas
xchg
stos
add
add
jo
sbb
push
mov
sbb
mov
pusha
dec
sub
jmp
jle
cvttps2pi
mov
out
in
ins
inc
mov
mov
push
out
loopne
aam
inc
jmp
xor
push
in
fidivr
aam
xchg
(bad)
mov
add
sbb
in
or
pop
add
mov
jmp
fcomp
sbb
jp
stos
add
adc
pop
sub
dec
jae
add
inc
shl
es
in
push
push
inc
or
xor
and
push
cmp
sbb
cmc
sbb
ret
lods
popa
inc
sub
adc
mov
test
sub
in
test
xchg
and
push
imul
and
(bad)
jp
add
das
push
(bad)
cli
test
sub
push
mov
and
fisttp
inc
xor
hlt
in
(bad)
or
mov
leave
push
mov
cmps
retf
in
xlat
xchg
and
xchg
rol
and
inc
add
add
adc
push
pop
sbb
xor
inc
push
and
nop
das
sub
or
and
rcr
jno
mov
mov
mov
mov
and
inc
fwait
out
jg
inc
sub
inc
add
mov
out
jecxz
daa
in
jo
jnp
and
imul
out
(bad)
adc
nop
aam
ret
push
ror
dec
loop
rol
aam
fcomp
nop
push
push
or
xchg
mov
mov
cmp
adc
xlat
mov
inc
sub
adc
aas
scas
mov
or
or
mov
(bad)
push
and
test
dec
enter
xor
aas
jg
pusha
xacquire
aam
mov
ficom
int
mov
pop
jae
add
and
xor
xor
repnz
pop
hlt
mov
and
mov
cmp
fs
inc
push
push
lock
fs
in
pop
jb
lock
lock
push
js
out
out
mov
or
movs
pop
mov
sub
ficomp
mov
bound
lods
das
movs
loopne
sub
outs
movs
shl
outs
daa
popf
cld
enter
sub
push
add
fiadd
sub
pop
sbb
pushf
xor
in
pop
adc
pusha
pusha
fs
jae
fs
ins
jo
push
popf
xor
je
js
js
cmp
pushf
jl
add
or
rcr
jbe
jae
pop
mov
xchg
sub
mov
jmp
push
add
outs
das
push
and
das
sub
es
call
shl
mov
test
xor
cmp
or
dec
push
call
sub
push
(bad)
js
daa
lds
ja
aad
xchg
mov
mov
scas
sbb
inc
adc
aaa
pop
jle
ror
clc
xor
hlt
add
xchg
dec
pusha
pusha
mov
xchg
fs
add
ins
mov
pusha
(bad)
xchg
add
jo
push
dec
fcomp
dec
fcmovbe
and
add
mov
in
mov
sub
pop
(bad)
sub
jmp
cmp
push
in
(bad)
fidivr
pop
pop
jo
rcr
or
pusha
(bad)
punpcklwd
repz
jmp
test
aad
daa
imul
push
xlat
mov
lea
dec
mov
cmp
mov
push
xor
shr
add
mov
daa
push
cmp
mov
xor
mov
xor
outs
push
add
wbinvd
pop
movs
or
iret
push
dec
inc
fbld
mov
pop
mov
cmp
in
fdiv
sub
xchg
push
and
imul
nop
out
test
cmps
test
push
sub
dec
push
push
and
sub
xchg
in
lods
enter
cmp
pop
ror
dec
xchg
push
dec
xor
call
mov
xchg
jg
sbb
out
jmp
and
adc
je
add
and
sbb
inc
fwait
cmp
daa
stc
push
ret
sub
or
inc
cwde
cld
and
repz
push
js
cld
(bad)
jl
neg
je
mov
jl
nop
data16
push
pop
cld
pop
mov
scas
or
hlt
adc
xor
or
cmp
pop
(bad)
repz
and
dec
je
jle
pusha
sti
pop
add
scas
imul
cli
(bad)
sub
sbb
enter
out
stc
xchg
mov
in
and
neg
mov
mov
repnz
jne
mov
aaa
push
or
(bad)
dec
mov
mov
pop
xchg
xchg
jp
test
adc
mov
adc
adc
imul
inc
test
push
jmp
mov
xor
mov
add
xor
adc
mov
enter
sub
imul
(bad)
mov
neg
xor
jns
cdq
mov
test
out
test
sbb
sbb
xchg
push
jo
dec
sbb
rol
or
xor
ror
xor
mov
mov
add
hlt
or
pop
dec
xchg
or
sub
xor
lock
fadd
je
dec
mov
sbb
pop
fild
xor
jae
cs
add
les
and
or
out
sbb
gs
and
mov
test
xor
rol
sahf
or
pop
dec
jp
pop
cmp
add
cwde
daa
adc
inc
jo
xchg
scas
inc
jo
sbb
sbb
or
adc
and
cmp
shr
mov
sbb
iret
add
pushf
inc
call
neg
xor
inc
iret
add
cld
push
pop
or
add
adc
daa
pop
and
mov
mov
sub
popf
rcl
add
shl
lahf
je
mov
inc
ret
in
pusha
add
dec
and
inc
xchg
cmp
sbb
or
aad
jmp
pop
add
jmp
dec
jle
stc
(bad)
mov
(bad)
fs
(bad)
cmp
cld
bnd
xlat
sub
mov
imul
aaa
add
loop
and
xor
mov
mov
fdivr
dec
mov
shl
jg
and
sub
add
ins
rcr
adc
mov
pop
aas
nop
retf
daa
mov
sbb
dec
repz
sub
push
clc
cmp
shl
xor
ins
int3
fcom
cmc
shr
adc
movs
mov
inc
cmp
mov
xlat
mov
pop
int
pop
rol
xchg
add
sub
add
lea
xor
mov
ja
sub
out
retf
jo
(bad)
fsubr
shl
push
add
add
arpl
mov
std
inc
add
sub
fs
cmp
mov
mov
adc
jne
xlat
inc
pop
and
aaa
mov
inc
mov
jecxz
ins
ror
jno
adc
add
aaa
in
xor
sub
push
xor
int
icebp
loopne
cmp
inc
mov
in
les
lahf
fwait
cmp
ds
jne
mov
retf
xor
inc
pusha
mov
mov
loopne
sar
rol
add
jae
dec
mov
jo
push
enter
pop
add
mov
imul
add
mov
push
add
inc
inc
pop
pop
xor
pop
xchg
inc
gs
add
xor
sbb
dec
lar
pusha
inc
xor
test
in
pop
inc
push
inc
cli
outs
mov
sub
dec
cwde
push
jb
add
jns
outs
stos
xchg
or
imul
popf
dec
lods
cmp
jne
mov
or
xchg
icebp
loopne
mov
mov
cmc
stos
nop
jg
push
retf
ret
call
fisttp
sub
cmp
sub
nop
push
or
jne
jne
pop
fisubr
or
or
sbb
xchg
and
iret
ror
mov
mov
adc
sbb
fnstsw
(bad)
add
xor
mov
rcl
inc
add
add
lahf
aaa
jno
les
xchg
add
(bad)
shr
in
outs
sbb
add
and
inc
inc
pop
xor
push
addr16
aad
ret
dec
cmp
cdq
or
rcl
inc
push
push
pop
mov
jne
rcl
movs
iret
push
iret
mov
repnz
add
inc
and
sub
pop
rcl
popa
cmp
push
pop
neg
mov
xor
rcr
xchg
lods
xchg
mov
jp
and
cmp
or
(bad)
or
in
(bad)
iret
cmp
repnz
lods
push
jmp
xchg
mov
sub
hlt
sti
xchg
push
std
call
addr16
test
hlt
repz
mov
aaa
push
push
lahf
test
pop
and
push
inc
lahf
add
mov
pop
sbb
push
or
fst
test
sbb
xor
or
and
pop
and
mov
xchg
rol
or
out
aas
div
rcl
and
stc
and
or
cli
push
test
push
and
push
mov
or
and
aaa
in
add
retf
push
or
mov
into
cmps
sub
push
push
lock
jns
mov
clc
adc
add
nop
jae
add
mov
push
push
movs
jmp
xor
dec
cmp
fsubr
jge
push
push
push
xor
cmc
adc
cli
dec
popa
and
cmps
xchg
(bad)
dec
inc
stc
daa
in
loope
inc
dec
pop
sbb
xchg
inc
jo
std
add
shl
iret
stos
add
add
dec
fadd
sub
pusha
test
enter
pop
dec
pop
out
mov
jecxz
jl
pop
hlt
jmp
push
sub
aaa
dec
mov
cmps
bound
cmp
into
mov
jg
mov
dec
xchg
and
dec
(bad)
xor
iret
icebp
popa
mov
repz
sub
jnp
mov
add
inc
and
sbb
adc
mov
mov
mov
xchg
push
dec
sbb
push
stos
or
mov
cli
push
ret
cmp
ins
(bad)
sub
lock
add
jnp
xor
push
in
add
lods
and
(bad)
dec
add
inc
ret
or
or
adc
xchg
and
sbb
inc
jp
push
stos
retf
fwait
cmp
sub
and
scas
out
dec
pop
pop
add
or
pop
in
dec
ds
arpl
jle
mov
test
movs
hlt
ret
adc
in
add
cmps
and
mov
call
fisttp
jg
inc
and
add
enter
dec
pop
call
push
and
mov
jae
enter
lea
cmp
in
fwait
es
or
jge
add
sbb
adc
rcl
sar
cmp
je
push
add
cmp
daa
xchg
xor
shl
lods
mov
inc
int3
jne
sti
add
mov
xchg
inc
nop
or
inc
and
test
and
ins
ror
xchg
and
jmp
adc
in
inc
enter
adc
dec
inc
popa
push
mov
imul
or
adc
sbb
ins
jbe
ins
add
or
inc
retf
fs
aaa
sub
in
push
pop
cmp
mov
cdq
(bad)
das
sbb
data16
cmp
jge
push
push
or
push
dec
or
retf
mov
pop
pop
pop
mov
push
mov
or
ret
clc
das
push
test
add
add
inc
lea
or
jae
mov
and
lods
xor
mov
pop
es
xchg
push
outs
jb
mov
popa
pop
sub
or
sub
nop
and
outs
or
xchg
sbb
xor
out
mov
inc
mov
add
sub
call
push
xor
mov
pop
addr16
mov
or
xchg
ret
add
ret
xchg
int3
xchg
inc
xchg
xchg
dec
or
jo
jae
adc
les
mov
pushf
push
ins
ja
adc
dec
fistp
sub
pop
adc
movs
call
nop
cmp
pop
sub
pop
or
xor
fsubr
(bad)
mov
mov
sub
dec
cdq
pop
cmps
add
mov
pop
pop
mov
pop
inc
jmp
movs
sbb
adc
jle
dec
sbb
push
jns
add
add
push
sbb
imul
out
imul
mul
inc
dec
or
adc
jle
add
sbb
cwde
bound
adc
xchg
lea
add
sub
inc
movs
jno
bound
call
jmp
xchg
(bad)
sbb
sub
mov
pop
rcl
dec
adc
bound
push
rol
xlat
jmp
std
in
iret
add
pop
cmp
push
mov
adc
aas
and
push
mov
in
fadd
push
mov
out
sahf
fimul
cdq
seta
jmp
loope
ror
sbb
dec
cmp
mov
inc
loopne
push
push
xchg
cmp
das
sub
cmp
pmaddwd
mov
and
cmp
or
sbb
jmp
cs
jne
adc
xor
and
adc
repnz
clc
jg
xchg
fiadd
aas
or
jo
xchg
xchg
fist
push
sets
cld
mov
jl
(bad)
test
nop
pusha
pop
(bad)
adc
test
pushf
jb
adc
repnz
adc
ins
mov
sbb
sbb
mov
xchg
shl
or
or
xchg
adc
int
sub
or
adc
adc
jle
xchg
pop
mov
add
ds
and
push
mov
push
jmp
mov
pop
in
push
inc
mov
adc
jo
dec
pop
adc
nop
retf
sbb
pop
cmp
or
aas
rol
mov
mov
test
pop
ja
pop
jmp
ja
inc
cmc
add
push
inc
push
popf
and
add
cmp
xor
mov
cmp
rcl
das
push
xor
push
inc
xchg
mov
inc
inc
inc
loop
xor
jns
(bad)
xor
push
mov
out
xor
xor
mov
gs
(bad)
sbb
mov
xor
pop
jno
ins
loope
inc
dec
out
adc
cmps
xor
pop
xchg
xor
xchg
sbb
and
dec
test
pop
xor
mov
mov
out
push
push
neg
mov
outs
and
inc
or
inc
push
xchg
(bad)
mov
ds
inc
sbb
int3
sub
push
test
xchg
mov
and
push
scas
in
sbb
das
out
in
loopne
loopne
push
je
inc
ins
dec
mov
fisub
or
or
fnsave
into
jl
pop
inc
cs
push
call
cmp
cwde
out
push
je
adc
sub
ror
mov
nop
mov
pop
and
xlat
in
push
or
sub
jg
dec
mov
cmp
mov
cs
or
dec
dec
add
in
cli
ja
test
hlt
mov
adc
nop
mov
nop
repnz
pop
mov
mov
nop
xor
mov
or
ja
int3
test
dec
cmp
test
test
and
jb
enter
adc
lods
lods
sub
retf
xor
sub
scas
and
adc
ins
add
pop
loope
lea
dec
ds
imul
(bad)
test
mov
lea
cmp
pop
mov
cmp
inc
clc
and
dec
push
mov
cmp
test
xchg
xchg
jae
push
out
xchg
mov
add
add
inc
add
mov
fcom
scas
lods
sbb
loop
and
daa
aam
sub
cmp
sub
xchg
pop
xor
jnp
js
xlat
xchg
xchg
fwait
cmp
and
xchg
mov
mov
pop
ja
(bad)
add
rcr
add
loope
xlat
xor
add
mov
out
dec
out
fsubr
xchg
les
jg
loope
xor
movs
test
out
cdq
and
push
ret
(bad)
mov
adc
(bad)
stos
gs
cmp
xchg
ret
add
test
das
or
(bad)
ret
stos
enter
cmp
adc
aaa
hlt
mov
mov
mov
pop
(bad)
push
jmp
(bad)
in
test
daa
movs
(bad)
jge
ja
sbb
adc
cmps
cmp
and
adc
mov
ret
repz
pop
push
mov
lock
mov
inc
dec
test
mov
jg
stos
ins
bound
ds
pusha
xor
jno
(bad)
xchg
push
inc
mov
jl
mov
xchg
in
loopne
sub
(bad)
lds
ins
mov
lods
add
add
call
inc
push
xor
lds
dec
fisttp
pop
inc
lods
cmp
div
call
mov
dec
adc
test
xchg
push
or
pushf
push
add
xchg
mov
and
and
mov
adc
movs
and
jl
pusha
and
sbb
xchg
(bad)
call
adc
hlt
sub
push
and
adc
lods
xor
pavgb
les
cmp
inc
scas
inc
push
stc
sub
fcom
cmp
lock
cmp
call
or
cwde
push
add
mov
mov
scas
inc
inc
and
jb
call
imul
mov
mov
(bad)
daa
pop
inc
and
cmc
mov
jne
lea
mov
cmp
pop
xchg
adc
or
add
mov
loopne
in
dec
jnp
lods
leave
mov
xchg
sbb
sbb
add
adc
fiadd
xchg
jo
xor
movs
cmp
inc
jge
dec
and
sbb
rcl
push
add
adc
inc
clc
jecxz
fs
clc
int
inc
loopne
add
jmp
inc
xchg
shr
cdq
cmps
add
jg
mov
pop
daa
and
and
or
lahf
ror
mov
ins
and
jge
shl
mov
fcomp
sub
cmp
jmp
pusha
jne
lods
popf
test
inc
fs
setp
or
or
jnp
pop
add
jo
bound
movs
or
inc
push
inc
pushf
stos
dec
xchg
jns
cmp
add
(bad)
aas
ds
retf
add
dec
push
jmp
mov
repnz
stc
popa
test
mov
add
xor
or
les
sub
add
pop
add
sbb
dec
pop
jnp
cmp
aad
push
loop
jg
sub
sbb
push
es
pop
call
(bad)
cmp
add
jg
out
add
pop
stc
daa
mov
jmp
inc
jne
push
mov
xchg
arpl
imul
pop
shl
and
and
adc
adc
imul
sbb
loop
fs
pop
aaa
rcr
cmp
cwde
inc
aaa
clc
leave
scas
push
cmp
mov
pop
cmovg
push
or
mov
or
jb
sbb
shl
or
dec
pop
pop
push
mov
scas
or
xchg
inc
xlat
into
test
dec
adc
jne
mov
push
pushf
div
jle
fwait
out
rcr
pop
aas
jge
adc
xor
je
dec
iret
daa
jmp
je
and
add
popa
or
dec
push
or
call
int
xchg
or
enter
or
mov
in
add
in
pusha
int3
fadd
sub
movs
movs
xchg
jl
lock
ret
les
pop
push
movs
cmp
hlt
hlt
loop
add
and
jp
retf
inc
and
pushf
and
xchg
movs
test
icebp
dec
jecxz
mov
call
dec
ins
adc
pop
mov
jp
xor
and
xor
out
stos
xchg
(bad)
hlt
(bad)
imul
adc
enter
sti
in
inc
stc
cmp
or
jmp
or
push
cmp
mov
data16
fld
int
into
mov
aaa
jg
daa
inc
sub
dec
dec
fisub
lock
add
jmp
mov
jecxz
mov
push
and
imul
cmp
xor
xor
fisttp
push
push
gs
adc
pop
call
push
pushf
jne
adc
xchg
inc
and
cmp
push
push
xor
imul
ins
leave
movs
sub
leave
adc
inc
iret
jnp
lods
xchg
es
(bad)
stc
leave
out
xor
inc
sub
sub
add
xor
in
dec
jmp
lock
aad
enter
lock
imul
(bad)
inc
mov
pmullw
pop
popf
dec
scas
pop
sbb
mov
cmp
fwait
inc
pop
test
in
mov
dec
pop
ret
shl
loopne
movs
fprem1
shr
pop
aad
fiadd
aaa
inc
test
mov
mov
push
sbb
sub
imul
fdiv
ins
pop
sub
loopne
cmp
hlt
enter
jmp
out
dec
clc
push
xor
pop
pop
sbb
push
push
fs
stos
mov
shl
cmps
sub
push
pop
jbe
cmp
pop
rol
cmp
add
mov
mov
inc
sub
or
or
jmp
push
fidiv
mov
ret
out
sbb
rcl
shl
mov
clc
pusha
cmps
xor
adc
and
call
test
jecxz
mov
xchg
jle
cmp
loopne
fisttp
sbb
mov
rol
sub
or
add
movs
mov
dec
call
(bad)
outs
repz
push
pusha
dec
mov
sti
or
xor
(bad)
loopne
jae
add
push
cmp
repnz
or
xchg
jbe
adc
je
popa
wbinvd
dec
push
(bad)
adc
test
cs
daa
shr
or
or
in
or
sub
popa
sub
push
sbb
pop
(bad)
push
or
shl
push
xlat
and
retf
sub
push
nop
or
loop
adc
and
push
mov
lock
sub
cmc
jo
fistp
jmp
jp
adc
xchg
mov
movs
mov
sub
mov
pushf
movs
push
dec
xchg
push
jmp
in
mov
mov
out
pusha
mov
aad
fadd
rcl
sub
in
mov
and
xor
inc
inc
push
or
and
pop
int3
sub
inc
add
in
cs
xchg
sub
mov
inc
out
jo
(bad)
and
inc
loope
sub
les
hlt
cmp
dec
test
push
das
jl
add
adc
cld
cmps
mov
scas
movs
add
inc
pop
add
sub
adc
pop
xchg
dec
push
xchg
les
dec
xor
add
ins
popa
adc
or
mov
cwde
add
xchg
das
out
pop
push
jns
xor
lods
sbb
and
and
adc
xchg
(bad)
fisub
sub
push
les
push
pop
shr
add
bnd
(bad)
xor
lods
xor
inc
jo
es
xchg
xor
mov
inc
and
adc
andps
adc
ror
sub
imul
add
jo
inc
inc
ins
imul
hlt
dec
imul
ds
add
xchg
inc
adc
add
loop
or
fbstp
mov
add
add
inc
dec
(bad)
cmp
add
or
dec
xlat
xchg
xor
shl
xor
(bad)
idiv
cmp
ins
inc
and
adc
jg
inc
xchg
ins
sbb
call
cwde
jnp
inc
fld
push
xchg
jnp
xor
push
cli
aad
pushf
std
dec
and
or
shl
mov
cmc
mov
adc
loope
dec
(bad)
push
dec
jecxz
or
dec
xchg
rcr
fdivr
pusha
out
push
sbb
sub
sub
rcr
repnz
fdiv
int3
pop
and
jnp
mov
adc
xchg
adc
mov
inc
adc
push
sbb
in
cmp
xchg
test
movs
xor
adc
xchg
fcomp
aam
inc
jmp
aaa
mov
imul
push
sub
and
(bad)
int
push
inc
shl
shl
jne
or
sahf
inc
cmp
hlt
and
aam
xlat
aaa
sbb
(bad)
xchg
(bad)
adc
inc
and
pop
or
dec
sbb
rcr
cmp
sub
xchg
(bad)
mov
jl
pop
hlt
(bad)
or
xchg
(bad)
cmps
dec
push
pop
ret
mov
in
dec
enter
inc
sbb
and
dec
xor
xchg
add
(bad)
imul
xor
mov
jp
adc
xchg
mov
inc
xor
ss
sbb
jno
out
inc
mov
dec
mov
cmc
inc
loope
inc
xor
mov
idiv
aas
inc
xor
and
pop
xor
ss
mov
push
jle
adc
ins
mov
pop
xor
sub
fimul
sbb
dec
repz
aaa
aam
pop
or
sbb
sub
dec
push
pop
mov
dec
ror
cli
and
and
push
pop
int
sub
sbb
push
lea
cmp
ss
dec
sahf
sub
sub
imul
inc
stos
arpl
cmp
lock
sub
loop
stc
or
popf
add
add
mov
adc
or
sbb
and
xchg
cmp
call
add
sub
jg
jmp
xchg
je
xchg
mov
jb
dec
inc
jne
xchg
cwde
lock
sub
pusha
xchg
jl
leave
xchg
add
sbb
ret
lods
xchg
add
add
pusha
xchg
sbb
cmp
or
pop
or
jmp
xchg
xchg
xchg
push
xor
repnz
(bad)
mov
xlat
cmp
jb
add
in
icebp
push
(bad)
push
inc
test
cmp
aaa
lahf
push
add
retf
cmp
sub
or
inc
pop
or
adc
jb
push
enter
sub
fbstp
and
push
push
and
cmp
cmp
mov
push
test
inc
and
out
pop
add
inc
or
inc
repz
cmp
mov
cmp
ins
sbb
sar
dec
push
add
inc
sbb
div
or
inc
xchg
jle
cmps
pop
aam
inc
sub
push
nop
arpl
out
movs
ret
dec
fld
and
or
inc
or
out
push
fwait
adc
inc
mov
daa
xchg
push
js
enter
loopne
dec
dec
mov
movs
mov
cmp
jmp
sub
adc
loopne
lahf
jne
push
or
nop
fsub
xchg
cmp
mov
inc
inc
adc
scas
inc
outs
sub
ror
repnz
fcom
sbb
cwde
adc
or
xor
dec
scas
or
jle
lea
popf
push
cmp
mov
sub
not
xchg
hlt
dec
ret
ins
sbb
ds
adc
sbb
cmp
xchg
inc
lock
aaa
inc
mov
daa
or
mov
jo
xchg
test
repz
xchg
in
pop
cmp
mov
push
dec
lock
enter
xchg
scas
cmp
aad
add
inc
pusha
cmp
cmp
cmp
cmp
pushf
or
cmp
bound
and
mov
add
pop
xor
push
jmp
test
xor
js
dec
ds
sbb
aas
push
in
inc
adc
xlat
nop
mov
dec
add
fxch
lock
stc
inc
or
enter
movs
jo
fadd
mov
mov
adc
mov
push
mov
idiv
sub
fimul
inc
adc
push
imul
pop
jne
(bad)
lock
inc
xchg
xchg
fistp
(bad)
retf
mov
cld
adc
mov
push
add
xlat
popa
jae
sub
xor
adc
sub
xchg
repnz
hlt
xor
es
adc
xlat
sbb
push
shl
aas
std
outs
ret
sub
dec
je
dec
jne
jmp
jmp
and
push
or
xchg
and
push
sub
inc
imul
mov
cmp
neg
xor
add
lock
inc
inc
or
pop
mov
fnstcw
jne
lods
or
inc
xor
retf
cmp
shl
add
(bad)
out
sahf
mov
inc
sub
add
sbb
xchg
push
add
push
xchg
icebp
retf
in
add
enter
xchg
sti
jo
add
jmp
cs
in
sub
xchg
sub
fisub
cs
cmp
mov
pop
sbb
xor
cmps
dec
jb
pop
mov
loopne
stos
add
ret
cmps
ja
sub
cmps
jg
rol
xor
cs
cli
push
inc
ins
inc
jmp
push
cwde
or
sub
lahf
mov
aam
sahf
dec
jge
inc
inc
sbb
out
stos
in
(bad)
inc
mov
inc
test
push
mov
das
fisubr
inc
loop
xor
ret
jae
cmp
xchg
je
adc
sub
movs
add
inc
pop
js
das
mov
loope
test
outs
imul
sub
adc
inc
push
cmp
fldpi
pop
adc
or
sbb
and
push
push
xlat
stos
inc
inc
leave
push
enter
inc
rol
inc
repnz
add
adc
adc
inc
inc
fcom
add
inc
inc
add
add
in
inc
int3
inc
inc
and
aaa
sbb
inc
add
or
or
pushf
add
add
and
aaa
sbb
inc
dec
inc
repnz
aaa
sbb
inc
inc
enter
inc
inc
xchg
inc
jle
inc
or
pop
repnz
in
dec
mov
pop
call
push
leave
push
dec
in
dec
xchg
test
aam
call
ficom
push
test
je
lock
ss
popf
in
push
push
adc
je
sbb
adc
movs
iret
adc
outs
xor
xor
xchg
pop
xor
xchg
xor
fnstcw
stos
mov
pop
or
in
inc
ss
and
add
push
jecxz
cli
imul
fs
js
lods
cmps
sub
paddusb
sbb
push
mov
xor
inc
and
add
jl
dec
push
in
sahf
mov
add
je
xchg
ret
cmp
pop
mov
mov
mov
add
retf
cwde
retf
xor
jo
inc
inc
test
ja
test
fld
leave
dec
loopne
fist
or
call
xchg
out
sub
cmp
sub
in
and
int
cmp
cmp
mov
adc
cmp
sbb
xor
inc
loopne
cmps
fs
cld
rol
mov
dec
scas
addr16
pushf
xchg
loopne
imul
add
xchg
stos
daa
outs
dec
sub
fwait
nop
jo
out
cmp
lea
inc
cwde
icebp
(bad)
dec
mov
mov
ins
jmp
adc
popf
add
unpcklps
stos
jmp
les
stos
push
dec
add
jle
lock
inc
ins
scas
push
xchg
jnp
test
rcl
rcr
fmul
je
inc
adc
js
ret
enter
ret
pop
or
movs
popa
sub
mov
dec
xchg
and
xor
fs
ret
(bad)
(bad)
pop
out
mov
pop
or
push
addr16
addr16
xor
add
xlat
mov
add
dec
lahf
retf
pop
ds
dec
fnstcw
daa
jbe
xchg
mov
xor
sub
mov
stos
and
js
ret
bound
adc
jo
mov
xlat
jns
mov
add
jae
sbb
push
out
jns
mov
lock
inc
inc
adc
xchg
rcr
ret
mov
dec
xchg
jb
imul
pop
neg
sbb
add
sub
out
dec
or
dec
repnz
gs
sbb
fidivr
push
icebp
push
or
cld
push
rol
addr16
mov
mov
add
xchg
shl
or
pusha
ror
rcl
ins
pop
std
jo
xor
jmp
call
mov
push
mov
push
sub
ins
xchg
push
xor
inc
jo
ds
ja
xor
js
mov
pop
shr
je
pop
inc
leave
add
arpl
xor
push
push
sub
adc
ret
nop
jle
cwde
ret
pop
ret
dec
inc
push
enter
inc
lar
jb
add
pop
rcl
mov
leave
and
lea
les
pmulhuw
push
inc
mov
push
pop
shl
lock
call
push
(bad)
xor
push
push
push
jmp
fidivr
xchg
inc
outs
push
lds
ds
xor
test
adc
adc
add
mov
mov
push
fcom
popf
mov
push
aas
sar
lods
pop
daa
cmps
dec
popa
add
or
call
adc
sbb
xchg
xchg
aas
push
clc
sub
cmp
mov
clc
mov
mov
mov
dec
add
sbb
adc
xor
push
inc
dec
cmps
or
(bad)
fsub
mov
sahf
out
cmp
or
xor
mov
mov
dec
cmp
mov
das
jle
jle
cmp
loopne
std
retf
sub
daa
lds
xchg
dec
xor
and
mov
pop
jl
mov
(bad)
sbb
das
aas
test
jno
imul
and
jmp
cmp
dec
mov
xor
ja
stos
xchg
and
mov
call
inc
cmp
push
inc
push
inc
pop
push
sub
and
xor
adc
andnps
loopne
push
fnstcw
adc
adc
inc
shl
call
in
in
js
sub
push
jl
jbe
loop
fstp
mov
sub
es
jno
ds
popa
imul
pop
add
push
outs
dec
sbb
jbe
mov
dec
sub
jmp
cmp
mov
in
and
cmps
sbb
lds
loop
jmp
rol
inc
inc
rcr
push
test
xchg
mov
das
pop
imul
mov
push
adc
xchg
out
dec
jl
call
sbb
mov
push
pop
inc
xchg
mov
and
lods
ret
das
jmp
mov
les
es
xchg
int
adc
adc
xchg
es
adc
xor
cmps
sahf
ja
sub
or
shr
test
into
dec
jl
dec
dec
and
inc
jo
adc
mov
add
pop
jl
xchg
pop
jb
sub
push
cld
rcr
mov
add
jg
psubusw
pop
hlt
push
ret
and
and
add
push
jp
fs
cdq
mov
mov
inc
and
movs
sahf
adc
xor
add
jne
fsubr
mov
test
arpl
add
enter
popa
mov
sbb
int
mov
add
push
ins
js
pop
xchg
ss
test
or
in
loopne
aaa
jo
cld
jge
xor
adc
adc
and
add
cmp
lock
dec
lds
arpl
sbb
sub
shl
and
arpl
loopne
mov
daa
mov
iret
cmp
test
jmp
push
inc
enter
(bad)
pop
dec
or
pop
inc
add
pop
and
add
mov
jo
sub
add
hlt
xlat
mov
imul
cmp
cmp
mov
aad
icebp
and
or
add
pop
xor
ror
out
into
adc
pop
mov
arpl
xchg
sbb
movs
sbb
stos
inc
shl
add
cmp
repnz
cmp
inc
aaa
lds
inc
xchg
icebp
enter
add
ret
lds
in
fld
xor
mov
mov
sbb
push
stc
mov
mov
pop
in
xchg
pop
enter
cmp
push
movs
dec
add
pop
or
sbb
and
nop
lods
aam
push
push
enter
(bad)
mov
adc
lahf
ja
dec
pusha
push
xchg
nop
pop
ins
in
push
scas
pop
pop
rcpps
leave
leave
cwde
test
adc
test
or
sbb
daa
pop
xor
push
dec
inc
or
mov
xchg
xor
push
enter
sbb
inc
inc
pop
sub
push
xchg
or
adc
or
sub
fnsave
cmp
push
adc
shl
xchg
shl
test
xor
cmp
xchg
data16
or
push
jnp
jns
fs
or
es
mov
or
dec
enter
adc
or
add
push
jae
ror
fst
push
gs
dec
rcr
pop
fisub
mov
data16
cdq
adc
mov
push
pop
and
sbb
mov
ret
scas
int3
cmp
addr16
es
cdq
mov
xchg
mov
int
cdq
xchg
push
or
mov
xor
lahf
mov
dec
popa
jl
js
pop
mov
in
(bad)
adc
out
nop
pop
jge
lods
sbb
jb
push
cwde
dec
adc
pop
inc
aas
and
nop
test
movs
pushf
jbe
add
mov
mov
je
xor
cdq
sahf
sub
leave
mov
add
je
popa
mov
in
movs
pop
test
out
push
and
xchg
jge
xchg
cs
retf
sbb
repz
pop
push
xor
pusha
adc
clc
sbb
mov
dec
xchg
mov
mov
dec
xchg
adc
sbb
inc
aas
pop
and
mov
retf
xor
or
mov
je
fwait
mov
fsub
out
loope
aad
push
je
pop
mov
fisubr
cs
mov
mov
push
iret
xchg
mov
movs
xor
fild
xchg
dec
inc
shl
je
sub
xchg
js
xadd
mov
call
or
aas
push
jne
lahf
pushf
inc
ja
mov
xchg
loopne
push
mov
cmps
in
and
je
cmps
cmp
mov
xchg
fst
xchg
sub
mov
xchg
iret
xchg
or
or
fadd
and
sbb
ss
sbb
mov
mov
pop
movs
jl
add
das
mov
mov
in
loopne
dec
inc
xlat
cmp
ss
cwde
push
mov
adc
xchg
xchg
retf
ja
or
rcl
mov
pop
cs
arpl
das
sbb
clc
cmp
dec
lock
jb
sub
(bad)
lock
bound
in
lock
(bad)
out
mov
bound
and
fld
push
dec
inc
dec
push
out
(bad)
aam
(bad)
idiv
add
mov
jo
shl
or
jl
or
mov
xchg
sysenter
or
inc
and
inc
in
sahf
and
adc
repz
and
jae
inc
push
xor
and
sub
sub
outs
push
and
nop
inc
aam
and
inc
push
push
fdiv
loope
jl
jno
cwde
push
inc
xor
cmp
in
mov
pushf
mov
jns
out
rol
xor
fdiv
sbb
pop
sub
add
mov
iret
test
jo
sbb
pop
test
cmp
xor
ja
xor
movs
xchg
dec
push
cdq
nop
or
sub
sub
mov
push
or
push
xchg
xchg
mov
lods
xchg
pop
xor
call
loopne
or
js
xchg
into
les
inc
(bad)
stos
stos
cmp
popa
popa
pop
mov
movs
dec
jmp
jle
mov
jno
xchg
cld
dec
cmp
addr16
retf
(bad)
pop
icebp
lock
jb
cmp
and
ret
inc
add
sub
out
daa
je
test
shl
in
call
enter
add
cmc
not
adc
dec
in
dec
adc
or
loope
pop
in
dec
dec
pop
in
pop
fcomp
leave
sbb
pushf
dec
rcl
aam
pushf
dec
leave
enter
int3
aam
test
mov
mov
mov
les
adc
xchg
sub
(bad)
mov
mov
and
xor
inc
jl
adc
mov
daa
int3
xor
rcl
pop
jb
and
fsub
and
daa
in
hlt
out
mov
into
lods
mov
dec
cmp
xchg
loop
in
imul
xchg
aam
ret
push
pushf
mov
in
inc
add
xchg
sbb
pop
je
cli
jns
sub
imul
sbb
inc
jl
jns
addr16
hlt
mov
inc
in
(bad)
add
nop
inc
repz
jne
imul
repnz
jle
in
cld
inc
test
test
pop
dec
fnstenv
ja
into
mov
jp
push
mov
and
add
add
rcr
aaa
repz
dec
add
adc
je
lods
adc
add
adc
dec
push
rcr
and
popf
enter
inc
inc
rol
push
imul
bswap
push
push
dec
add
cld
mov
adc
pop
mov
into
pop
cmp
cwde
push
jo
add
dec
leave
push
add
add
pop
leave
xchg
dec
lock
adc
idiv
int
jmp
fild
retf
cmp
inc
shl
add
adc
outs
iret
add
daa
xchg
and
pop
cmp
hlt
in
sbb
ds
xchg
or
add
sub
cmp
je
xchg
call
cmp
xor
imul
pop
popa
push
add
jg
pop
jo
lahf
mov
xor
outs
scas
adc
clc
call
sbb
dec
add
mov
popa
popf
sub
pusha
add
add
cmp
pop
ins
ret
push
push
scas
mov
adc
mov
sbb
mov
leave
and
or
push
imul
push
out
push
adc
cmp
out
sahf
pusha
xchg
pcmpgtb
pushf
inc
jl
stc
sub
aad
or
push
stc
xchg
in
push
xchg
mov
lahf
inc
ds
adc
fsub
add
mov
xor
inc
repnz
aam
hlt
aam
enter
dec
shl
inc
xchg
mov
int3
int3
fcomp
push
js
enter
ss
je
pop
cwde
bound
xchg
inc
jecxz
push
dec
add
or
pop
mov
xchg
adc
das
cld
dec
sub
sbb
xchg
xchg
add
outs
inc
or
and
mov
nop
cmps
xor
sbb
xchg
scas
jl
inc
add
or
xor
or
xchg
xchg
fcomp
xor
push
jo
sub
sbb
ror
rcl
inc
jns
xor
add
call
dec
push
nop
dec
hlt
lock
dec
push
nop
lock
in
and
cmp
call
xchg
push
jne
pop
(bad)
test
addr16
xchg
ror
daa
daa
and
pusha
sub
add
fsub
daa
daa
and
aam
nop
adc
aam
and
cmp
in
add
add
push
stos
or
add
cmps
xor
push
shl
rol
cld
in
cwde
cwde
test
out
shl
stc
cmp
imul
push
mov
cwde
dec
sub
or
pushf
inc
push
jp
fs
adc
movs
lods
inc
mov
mov
push
repnz
(bad)
cld
mov
mov
js
sub
call
mov
dec
xor
inc
je
sbb
pop
add
mov
xchg
cmp
adc
stos
push
lahf
and
pop
jnp
add
and
stos
jb
pop
sub
aaa
xor
pop
aaa
(bad)
mov
inc
in
imul
cwde
push
cmps
jno
add
push
and
inc
clc
aad
imul
mov
sbb
mov
dec
sub
inc
ret
mov
sbb
stc
add
push
sub
std
push
cli
pop
mov
jg
jge
add
push
cmp
(bad)
in
push
mov
add
ja
mov
inc
outs
stc
xchg
movs
and
call
xchg
add
push
pop
and
sbb
xchg
adc
enter
fiadd
data16
neg
cmp
adc
add
test
add
xor
add
mov
xor
or
repz
cwde
adc
cmp
mov
adc
js
shl
and
and
jns
lods
xchg
push
and
pop
aam
bound
jmp
in
js
dec
mov
mov
inc
cs
fist
jbe
xchg
aas
jbe
mov
xlat
std
and
pop
leave
and
lea
in
pop
leave
xor
dec
push
xor
mov
push
xor
mov
pop
leave
xor
dec
add
xor
int3
and
enter
enter
enter
hlt
clc
hlt
and
xor
clc
push
and
sar
adc
push
out
and
mov
mov
and
mov
sub
or
shl
imul
and
js
add
lock
js
push
enter
mov
adc
iret
addr16
out
pop
aam
xor
cmp
mov
arpl
dec
ins
push
bound
push
mov
jb
popw
pusha
adc
add
and
mov
xor
jg
sub
lahf
pusha
pusha
jns
fnstenv
xchg
jnp
push
jp
jns
cmps
inc
push
mov
and
push
lahf
jmp
jnp
imul
cli
push
xor
dec
hlt
mov
hlt
dec
lock
lock
in
mov
in
dec
call
outs
and
nop
add
inc
loopne
add
(bad)
xchg
sub
nop
fcomp
cld
push
xchg
and
test
mov
inc
icebp
mov
and
fisttp
mov
int3
add
enter
sbb
(bad)
aam
cmps
jmp
xchg
dec
and
mov
push
xor
push
mov
pop
add
add
push
jne
mov
repz
dec
ins
push
mov
in
mov
js
push
in
xchg
sbb
jle
pop
jle
aaa
xor
add
add
sbb
in
sbb
dec
mov
nop
mov
push
pop
mov
cmp
add
das
sub
mov
nop
outs
xor
xchg
dec
dec
cmp
unpcklps
xor
mov
ins
and
xor
jne
sub
xor
jnp
shl
enter
rcl
or
imul
mov
inc
xchg
sbb
int
or
push
push
cmp
cmp
xrelease
push
xor
outs
and
dec
add
dec
les
pusha
sbb
loopne
out
mov
fsubr
push
mov
aam
enter
aam
rol
enter
int3
enter
push
mov
adc
jecxz
sub
and
push
call
aas
sbb
jne
and
jmp
fs
and
(bad)
les
jmp
int3
ret
arpl
pop
(bad)
pop
jb
pop
mov
ret
adc
jo
ret
xlat
xor
cmp
jno
pop
cmp
or
mov
sub
jmp
mov
mov
add
and
pop
or
or
jp
or
in
push
adc
test
or
out
push
dec
push
repnz
mov
push
push
add
inc
mov
aam
dec
imul
mov
mov
movs
fadd
sub
test
pop
(bad)
aaa
cs
cmp
das
js
push
jle
sbb
loopne
cmp
sbb
in
push
inc
mov
test
cmp
mov
xchg
push
int3
inc
cmps
mov
or
mov
xor
cmp
lahf
ror
and
in
js
mov
fdivr
cdq
outs
out
enter
stc
in
in
inc
int3
push
add
and
mov
add
xor
or
stos
ret
pop
ins
jge
add
mov
std
mov
xor
or
inc
out
imul
xor
cmp
int3
mov
inc
or
out
jo
loope
outs
aam
or
inc
nop
mov
ffreep
and
rcr
fcom
jb
out
mov
or
lock
cmp
fimul
je
stc
sbb
fcomi
mov
ins
dec
sti
add
cmps
xlat
in
mov
ret
xchg
sbb
ja
and
xchg
stos
ja
add
stos
pusha
add
inc
xchg
xchg
dec
shr
call
or
push
cmps
sbb
or
xor
mov
outs
imul
mov
push
sub
or
and
fchs
dec
rol
jne
add
xor
add
test
rcl
dec
dec
push
and
xchg
loopne
lods
push
sub
daa
loopne
cmp
cmp
mov
loopne
imul
fcomp
and
inc
ror
add
mov
fdivr
sub
aas
add
loope
pop
jmp
adc
or
lock
and
cmp
jo
mov
lods
xchg
push
dec
dec
or
int3
jo
clc
xchg
push
adc
mov
nop
xchg
aam
push
pop
adc
or
inc
jae
mov
adc
push
add
dec
jo
js
retf
mov
std
inc
ret
nop
and
fidivr
pop
jne
mov
jl
adc
enter
mov
repnz
rcr
mov
sbb
push
repnz
pop
xor
push
cwde
(bad)
(bad)
mov
das
ins
and
adc
or
aas
push
or
or
mov
loope
xchg
pop
lods
pop
xor
in
xchg
adc
aaa
push
cmps
dec
jmp
xor
mov
out
stos
dec
push
cmp
rol
or
or
frstor
int3
ds
mov
xor
xchg
loope
iret
dec
xchg
in
xchg
in
xchg
sub
inc
push
xchg
retf
adc
fadd
dec
lock
adc
call
fst
dec
popa
dec
repnz
ins
pop
mov
dec
or
out
cmp
bound
int3
adc
ror
sbb
sbb
pushf
mov
dec
fs
sahf
cmp
push
add
push
or
jae
dec
xor
push
adc
or
fild
pop
adc
les
push
ror
jg
or
fsubr
sub
adc
ja
adc
mov
dec
ins
loopne
mov
mov
or
xchg
dec
cmp
add
es
fcmovu
fsubr
add
and
in
inc
sub
out
mov
repnz
sub
mov
lea
jle
push
push
ficom
loop
add
leave
xor
add
jne
dec
and
stc
in
in
sub
ins
mov
pop
es
es
sti
inc
adc
les
sbb
inc
adc
cwde
jle
add
adc
dec
pop
je
sub
ja
cld
(bad)
popa
lods
dec
daa
push
mov
sbb
xor
cmps
mov
arpl
stc
sbb
fiadd
pop
add
ret
xchg
int3
test
jo
adc
push
pop
outs
add
and
mov
jae
add
pop
push
nop
xchg
and
imul
adc
and
pop
pop
jno
sbb
(bad)
leave
push
xchg
mov
and
and
push
xor
fsub
inc
in
or
mov
jle
das
lea
scas
add
and
mov
int
jmp
sbb
ins
ins
dec
or
arpl
add
or
jmp
jno
lds
into
push
xor
dec
shl
pop
sbb
dec
cmp
mov
xchg
push
mov
mov
sti
and
add
inc
inc
ins
cwde
mov
sub
push
test
ins
and
in
pop
call
sub
pop
xlat
pop
fild
sub
pusha
or
adc
in
xchg
pop
jb
cs
outs
cmp
add
jns
jne
push
jl
jbe
fdivr
add
leave
mov
xchg
jp
cmp
push
push
inc
mov
cs
mov
pop
cmp
mov
mov
or
lods
jmp
add
cmp
xchg
mov
lock
dec
ficom
xchg
mov
sub
es
xor
mov
fld
or
dec
pop
jbe
and
popa
imul
mov
scas
loop
cmp
stos
retf
push
xchg
mov
push
je
aaa
push
fcom
out
mov
loop
repz
lods
and
add
push
aas
pop
xor
xchg
sbb
push
push
xchg
sbb
inc
pop
xchg
mov
ret
outs
rcl
enter
adc
adc
mov
clc
pop
movs
dec
mov
sub
pop
call
hlt
cmp
rol
int3
dec
or
pop
cmp
xor
pop
mov
bound
mov
cmp
leave
mov
jo
call
sbb
and
test
and
int3
cmp
fbld
add
mov
aam
sbb
inc
das
jno
fistp
sub
sub
gs
sbb
add
add
xor
mov
rcr
(bad)
pop
sub
mov
add
gs
iret
lds
mov
jae
adc
sub
(bad)
fst
sub
dec
mov
push
inc
adc
adc
adc
les
pop
lock
fcomp
loope
inc
adc
rcl
adc
or
mov
lock
sbb
fs
dec
aaa
gs
push
aaa
inc
in
push
pop
adc
push
ss
into
pop
jns
add
push
mov
and
adc
call
adc
pop
mov
and
add
pop
ins
aam
mov
out
fcomp
aas
int3
pushf
inc
add
cmps
or
outs
jb
fs
pusha
out
fwait
cmp
aad
cmp
dec
cmps
mov
add
rol
add
sbb
(bad)
popf
xchg
fisub
cmp
and
push
mov
xchg
add
(bad)
fmul
cmp
jne
pushf
sti
nop
mov
cmp
cmp
lods
push
mov
add
adc
and
mov
push
mov
popa
cdq
int
rol
not
push
or
(bad)
outs
pop
adc
inc
sbb
or
jo
add
mov
or
pushf
inc
mov
in
mov
add
xor
rol
in
sbb
fisttp
jno
lea
fiadd
mov
and
dec
cmp
aam
clc
mov
aad
mov
cli
dec
int
call
cmp
das
cmp
das
xlat
sub
sbb
mov
lods
pop
daa
jmp
push
lahf
inc
fnstenv
stc
xchg
xchg
mov
ficomp
push
dec
(bad)
into
inc
enter
das
inc
lahf
inc
adc
push
mov
cwde
sub
mov
(bad)
xchg
xchg
mov
sti
sub
bound
jecxz
call
xchg
xchg
sub
mov
lods
add
xchg
and
inc
adc
loope
dec
sbb
mov
lods
push
or
test
push
enter
lods
shl
add
rcr
xor
cmp
loope
adc
push
adc
adc
cmp
cmp
and
mov
pop
test
test
ret
nop
xor
xor
fimul
sbb
and
mov
aad
lea
clc
cmp
cld
es
pop
push
cmp
inc
test
aam
in
clc
cdq
cld
stos
(bad)
enter
sub
hlt
push
pop
sahf
push
fidiv
bound
push
adc
or
pusha
mov
(bad)
and
ins
jo
cmp
cwde
ss
aad
out
ja
xchg
call
daa
pop
nop
pusha
imul
xchg
in
ret
movs
or
jne
and
js
into
adc
jp
jnp
and
nop
or
xchg
and
cmps
xor
sahf
not
pshufw
rcl
xor
add
loope
and
jecxz
mov
fisttp
pusha
sbb
xchg
clc
mov
leave
ret
in
pop
fcom
push
nop
fsub
mov
js
outs
xchg
retf
adc
rol
movs
push
cmp
inc
dec
push
jns
sub
cmp
cmps
loopne
int
movs
push
xchg
mov
or
push
icebp
retf
xchg
scas
das
jo
sbb
cmps
inc
pop
dec
and
dec
pop
xlat
pop
test
xchg
pop
and
in
movs
inc
mov
(bad)
(bad)
fst
xor
xor
movs
xchg
enter
movs
pop
xchg
mov
or
and
imul
cmps
add
fimul
test
and
das
sbb
or
or
adc
cmp
cmp
inc
mov
ss
xor
js
movups
test
jae
xlat
add
nop
cs
stc
outs
push
sbb
lock
lock
outs
and
mov
inc
cmps
into
mov
xlat
lods
fld
adc
and
add
adc
pop
dec
push
jb
push
add
sbb
enter
or
cmps
jle
leave
ror
xor
shl
and
cmps
out
pop
adc
adc
sub
fild
outs
inc
outs
outs
imul
xchg
sbb
pop
sub
dec
or
fimul
push
push
aam
add
push
sub
and
add
scas
cs
cmps
pop
movs
mov
dec
pop
mov
sub
data16
add
aam
arpl
mov
pop
pop
sub
repnz
dec
test
adc
call
jae
mov
les
loopne
push
mov
test
cmp
jns
mov
dec
lods
xor
shl
push
aas
pop
sub
push
jo
mov
fsubr
(bad)
into
mov
cmp
lea
(bad)
stos
stos
stos
mov
cld
xchg
pushf
nop
int
mov
inc
rol
fcmovnu
jb
(bad)
cmp
xor
dec
add
sub
movs
sahf
mov
dec
and
test
pusha
or
xor
inc
or
lods
jne
xor
and
cmp
adc
or
xchg
stc
dec
pusha
stc
pmuludq
sbb
xor
pop
sbb
lods
cmps
sar
push
sbb
outs
hlt
push
adc
and
aaa
mov
test
pop
mov
scas
aaa
fnstcw
mov
jb
xchg
push
clc
mov
retf
cmps
inc
rol
mov
and
add
test
ss
or
out
xchg
push
sbb
sub
ror
dec
add
loope
stos
cmp
in
pop
lods
and
ins
sahf
add
or
shr
js
add
dec
pusha
cmp
sbb
or
in
cmps
enter
test
inc
jmp
enter
inc
test
jmp
adc
xchg
popa
scas
pop
adc
scas
lods
sub
or
and
lock
xchg
sub
sbb
(bad)
xchg
mov
rcr
push
daa
adc
and
fist
pop
(bad)
cld
xchg
jns
loopne
pop
xchg
call
clc
dec
xchg
lods
xor
cmp
inc
call
push
fs
cmp
add
push
dec
pop
outs
add
or
cdq
cmp
sar
pop
push
add
and
push
push
mov
inc
leave
mov
std
and
fcom
mov
jl
ja
sub
mov
xor
dec
mov
inc
clc
adc
int3
xchg
jl
xchg
clc
jle
adc
mov
sbb
xor
in
cmp
inc
dec
(bad)
or
pop
jo
je
add
and
add
arpl
fistp
xchg
mov
sbb
inc
lock
push
movs
lds
(bad)
inc
push
cmp
ret
mov
dec
sbb
sbb
xchg
inc
and
ror
jge
jp
dec
int3
(bad)
push
xor
sbb
adc
and
hlt
mov
aam
adc
lock
inc
and
in
mov
push
inc
push
mov
test
lahf
icebp
xchg
inc
out
inc
pop
push
dec
push
inc
push
dec
dec
inc
dec
dec
cmps
in
imul
pop
out
dec
pop
pop
inc
sub
mov
or
add
fcmovbe
in
or
pusha
and
xchg
nop
pusha
or
jb
clc
mov
fimul
and
cli
inc
pop
push
pop
adc
adc
jl
and
push
dec
jp
jg
sbb
or
dec
sub
xor
inc
xchg
pop
push
les
ret
xor
retf
mul
mov
push
loopne
jge
push
and
ins
push
js
mov
mov
inc
and
mov
xchg
fdivr
sub
mov
pop
imul
les
(bad)
enter
pop
ss
ds
out
rol
(bad)
cmc
imul
inc
adc
adc
sub
jno
pop
inc
fist
addr16
cmp
clc
scas
sub
pop
cmp
imul
mov
xchg
push
inc
mov
mov
pop
fst
pop
call
and
jp
popa
jecxz
fs
jo
or
fdiv
mov
imul
xor
jg
out
cmp
push
xchg
mov
clc
(bad)
jecxz
adc
ficom
das
mov
mov
loope
xchg
inc
push
loopne
jnp
jne
or
jbe
shl
test
mov
jae
jae
sub
push
cmp
cmp
mov
es
and
mov
mov
jg
es
popa
js
popa
arpl
ins
gs
cdq
(bad)
and
(bad)
fcom
add
pop
mov
add
mov
push
or
mov
cdq
sbb
add
dec
mov
and
mov
in
and
mov
cmp
push
xor
fiadd
retf
out
jb
jl
dec
jecxz
leave
rcl
lds
fstp
fwait
push
sub
aaa
mov
mov
imul
(bad)
jne
and
fild
nop
sbb
fld
faddp
pop
xor
shr
jns
ret
pop
push
movs
aas
movs
loopne
std
(bad)
nop
dec
addr16
inc
pop
sub
psubw
push
dec
dec
dec
inc
dec
dec
dec
inc
xor
ret
dec
js
outs
sub
lods
add
push
or
mov
out
mov
xor
jo
mov
pop
add
in
mov
mov
movs
les
imul
paddusw
pop
and
clc
sub
fidiv
enter
arpl
out
movs
add
mov
clc
push
fcomp
push
push
adc
test
fwait
stos
mov
shl
call
mov
sub
imul
(bad)
push
xchg
adc
pushf
inc
push
retf
mov
push
jl
xchg
(bad)
or
inc
push
push
dec
daa
jecxz
adc
inc
push
xor
and
lods
pop
xchg
shr
inc
dec
jae
sub
dec
pop
jge
mov
dec
add
mov
lea
push
dec
sbb
and
or
test
adc
ja
ss
div
inc
cmp
fiadd
rcl
mov
mul
adc
dec
dec
xchg
mov
cmp
mov
adc
mov
cmps
inc
or
loop
mov
or
jns
sbb
dec
xchg
mov
pop
and
popa
xor
clc
ret
mov
and
inc
and
call
outs
dec
dec
pop
dec
lds
fwait
inc
pop
mov
test
mov
push
movs
jne
xchg
xor
sar
sbb
dec
mov
jae
xor
cli
test
rol
(bad)
pop
lods
fmul
fwait
xchg
ret
imul
add
sti
add
inc
xor
test
cmp
in
xor
sbb
or
mov
sti
outs
loopne
jmp
mov
ins
jmp
adc
add
inc
mov
out
push
stos
inc
inc
fadd
adc
cmp
jae
iret
cmc
mov
push
push
shr
mov
dec
shr
mov
inc
lods
or
mov
dec
gs
jo
cmp
add
push
xor
jl
sub
lahf
nop
aaa
mov
imul
dec
xor
dec
push
scas
jb
add
lods
jno
shl
xchg
test
mov
cmps
pusha
pop
dec
dec
test
loope
in
dec
lds
sbb
pop
pop
lods
add
or
mov
ins
test
mov
adc
stos
imul
loopne
cmp
cld
jb
jns
mov
popa
xchg
ror
mov
jno
dec
jecxz
ret
fwait
cmp
add
pop
loope
mov
movs
xchg
dec
ret
or
mov
push
imul
xlat
pusha
mov
jb
inc
mov
add
clc
shl
mov
int
mov
leave
js
loopne
in
(bad)
stos
test
sbb
es
cmp
stc
adc
jp
dec
aaa
lea
pop
add
pop
call
lock
sbb
adc
dec
jne
aaa
inc
cli
imul
loopne
cmp
add
aas
add
js
sub
jne
pop
test
rcr
loopne
test
test
movs
mov
mov
call
fadd
out
sbb
xor
and
xchg
in
inc
int
bound
ja
cmp
and
imul
and
add
pop
jo
mov
add
mov
inc
daa
xchg
jecxz
inc
add
mov
inc
ret
mov
add
or
test
push
cmps
xor
xchg
adc
clc
ds
xor
sar
or
cmp
int
pop
add
jmp
out
jmp
mov
loopne
add
pop
or
and
adc
mov
add
xchg
push
sbb
bound
jno
sbb
loopne
jo
mov
ins
xlat
and
push
lea
or
les
mov
push
add
call
fistp
inc
xor
xor
xor
aad
push
das
cmp
inc
in
xchg
(bad)
jne
lds
mov
xchg
out
lock
jmp
test
add
xchg
push
mov
inc
sbb
xlat
mov
cmp
pop
push
adc
inc
movs
jmp
in
imul
(bad)
jle
sbb
clc
cmp
clc
jne
add
push
repz
not
mov
lock
movs
lds
add
lea
cdq
addr16
jp
jl
stos
sti
stos
xchg
mov
adc
pop
xor
jg
(bad)
pop
js
and
sbb
aaa
ss
pop
sub
add
nop
adc
dec
outs
and
mov
test
jne
pusha
nop
pusha
das
mov
cmp
mov
cmp
mov
daa
and
mov
repnz
(bad)
or
xor
and
sbb
nop
push
(bad)
sub
add
pop
loop
cs
(bad)
nop
div
out
sahf
(bad)
push
adc
or
push
les
test
pop
adc
dec
sub
enter
jb
outs
dec
xor
mov
fs
sub
add
mov
pop
pop
ss
push
rol
push
fimul
je
dec
xchg
jae
adc
inc
adc
inc
dec
dec
loopne
gs
dec
gs
mov
mov
fmulp
iret
jnp
sbb
pop
add
dec
outs
lods
mov
adc
dec
fst
jo
jb
arpl
and
xchg
sbb
inc
arpl
ins
jae
sar
push
jae
mov
fwait
jl
mov
add
fwait
jmp
sub
sti
inc
dec
add
adc
fnstsw
test
or
imul
dec
add
test
ret
rol
scas
test
out
popa
ja
pop
arpl
pop
and
push
sub
or
dec
cmp
dec
pushf
adc
adc
push
sbb
inc
lods
lods
clc
stc
bound
or
add
adc
sbb
add
lahf
push
add
stos
sub
cmp
aam
adc
nop
hlt
push
cwde
or
xchg
adc
or
inc
mov
pop
dec
add
inc
dec
retf
xchg
ins
cmp
xchg
pop
mov
sbb
mov
mov
js
adc
daa
jns
inc
dec
inc
loop
mov
(bad)
xchg
push
jb
int3
outs
and
aaa
and
push
movs
lock
fdivp
out
push
cwde
into
push
outs
xchg
adc
inc
sub
inc
lods
fild
mov
dec
add
mov
aad
das
test
cmps
and
sbb
addr16
add
add
dec
push
leave
mov
and
cmp
sub
(bad)
out
jmp
aam
popa
mov
pop
sub
and
or
dec
inc
into
push
clc
into
or
pushf
in
into
int3
int3
or
mov
pop
pop
xlat
pop
sbb
imul
adc
enter
fisub
or
mov
xor
push
fsub
fadd
add
mov
add
xchg
(bad)
add
or
test
outs
jno
push
sub
clc
jno
sub
out
imul
in
push
in
add
push
inc
hlt
push
hlt
xor
pop
femms
fwait
push
scas
xor
jne
rol
inc
adc
add
mov
mov
out
xor
cmp
dec
mov
nop
ja
xor
add
neg
pop
adc
dec
inc
clc
inc
sahf
adc
adc
adc
add
sbb
cmp
inc
nop
sbb
nop
out
and
mov
sub
push
pushf
call
mov
gs
push
rol
aam
aam
sub
inc
add
or
and
adc
add
stos
imul
test
nop
fbld
in
mov
lock
aam
mov
sbb
adc
retf
xlat
pop
fld
xor
pop
push
dec
jecxz
push
imul
sub
xor
push
or
or
push
cs
cld
adc
leave
arpl
xor
lea
cmps
sub
dec
push
mov
xchg
das
xchg
nop
mov
fldln2
adc
sbb
or
inc
outs
scas
mov
(bad)
mov
cmps
xor
dec
jmp
dec
sbb
clc
jns
pop
mov
pop
mov
mov
xchg
adc
ficom
mov
dec
aam
or
adc
aam
ret
shl
bound
in
inc
pop
add
inc
ins
lock
mov
cmps
push
lock
add
add
lea
inc
push
cmps
mov
jbe
pop
and
je
or
or
xchg
sub
sbb
inc
pop
inc
xor
mov
mov
icebp
nop
jae
cmc
inc
je
adc
call
xor
adc
or
and
inc
sub
inc
pop
xlat
push
icebp
or
clc
xor
mov
nop
fadd
push
mov
mov
xor
cmp
xor
cmp
test
ficomp
sub
xchg
jmp
add
je
imul
inc
sbb
test
ins
inc
(bad)
popa
mov
cmp
nop
or
add
mov
fistp
clc
xor
enter
add
iret
cmp
loopne
mov
shl
popf
mov
dec
jge
out
sub
cmp
cdq
sub
test
mov
shr
mov
out
inc
jno
ret
jp
adc
and
adc
push
ss
out
mov
push
sbb
pop
add
xor
mov
hlt
hlt
or
addr16
ror
xor
sub
test
push
je
ins
mov
ror
icebp
loop
pop
outs
fadd
and
daa
inc
mov
xchg
repnz
fchs
cdq
inc
add
sub
adc
ja
jae
lea
cmp
xor
jne
lods
adc
xchg
sub
(bad)
mov
(bad)
push
lea
add
and
leave
inc
inc
arpl
xlat
add
rol
sbb
es
adc
sub
add
fucomi
mov
dec
das
iret
fldcw
enter
and
add
mov
dec
test
ror
stc
cmp
loope
cwde
loopne
xlat
xor
out
scas
movs
cwde
shl
popa
pop
dec
dec
mov
add
jo
inc
push
or
pop
movs
leave
int
call
test
sar
push
ins
cmp
xchg
das
popa
dec
jnp
adc
pop
jg
xor
fs
push
js
pop
or
add
adc
jnp
nop
nop
add
add
les
cmp
nop
out
(bad)
sub
mov
adc
xor
jmp
lahf
and
sub
adc
push
push
jmp
fist
mov
xchg
inc
scas
xchg
lock
mov
shr
cld
push
les
push
adc
aam
inc
movs
(bad)
pop
addr16
sbb
out
add
or
xchg
test
and
or
sbb
mov
test
and
(bad)
es
push
jl
clc
mov
out
jo
mov
sbb
cli
adc
dec
fisttp
jbe
loope
pop
shl
jge
pop
cs
sti
mov
cmp
or
enter
or
mov
mov
jmp
sub
outs
sbb
in
fist
mov
mov
sub
dec
call
adc
int
dec
outs
mov
imul
addr16
pop
enter
mov
pop
mov
pop
and
outs
inc
push
(bad)
aam
mov
add
push
adc
aaa
sub
fcomp
ret
add
add
mov
in
xchg
je
pop
cmp
mov
push
out
mov
inc
sub
mov
inc
cmp
mov
cwde
aad
sub
nop
and
inc
jmp
xchg
arpl
pusha
jmp
push
stc
xchg
pop
and
sbb
pop
js
add
rcr
add
and
movs
sub
cmp
push
or
por
push
xchg
jne
xor
xchg
ss
fimul
pop
sbb
test
pop
je
jae
add
jo
(bad)
iret
sub
dec
and
movs
fbld
pusha
js
stos
dec
daa
mov
add
pop
inc
bound
in
fisttp
sub
adc
ins
movs
out
or
dec
inc
xchg
inc
inc
nop
loopne
test
(bad)
mov
or
mov
push
enter
inc
in
pushf
ins
loop
add
adc
pop
add
sub
mov
clc
adc
mov
mov
hlt
std
call
ins
cmp
test
or
dec
sbb
or
mov
inc
scas
mov
and
movs
popf
outs
adc
mov
es
es
push
mov
push
pusha
and
je
jne
cmp
or
mov
in
lods
sbb
lods
cmp
cmp
cld
push
push
mov
fucomip
jo
dec
loopne
adc
loopne
add
push
mov
pop
js
daa
add
rcr
arpl
shr
js
jnp
mov
pop
ins
(bad)
out
aam
push
mov
inc
sub
(bad)
mov
sbb
pop
lea
add
lea
jecxz
(bad)
or
icebp
add
mov
repz
xchg
cs
mov
xchg
mov
sub
das
add
stos
and
and
nop
lea
in
jle
in
dec
dec
adc
or
add
jp
gs
fild
enter
bound
sbb
ds
push
jge
add
nop
sbb
ror
or
ffreep
or
dec
xchg
add
and
mov
lock
and
dec
movs
hlt
adc
mov
ret
popf
add
nop
out
in
dec
in
jae
pushf
das
(bad)
test
les
int
sub
push
cmp
pop
imul
and
and
sub
lock
daa
shl
adc
fs
cmp
das
inc
and
ror
adc
jg
xchg
jmp
add
push
inc
mov
and
sbb
cmp
mov
jg
daa
cmp
pop
mov
adc
push
or
popa
mov
ret
mov
adc
xchg
mov
jg
clc
inc
ins
push
mov
dec
shl
add
popa
push
retf
div
mov
pop
aad
aad
push
mov
mov
packuswb
cmp
les
add
add
sbb
pop
dec
jecxz
je
or
add
add
mov
nop
retf
and
adc
call
and
adc
mov
adc
pop
adc
cmp
adc
jns
add
xor
add
clc
mov
ret
jmp
xor
mov
inc
sub
fnsetpm(287
lock
adc
in
xchg
jmp
in
push
pop
push
jno
mov
ret
pop
or
pusha
dec
inc
sub
push
and
adc
(bad)
dec
in
ins
cmps
jne
mov
adc
sub
jl
xchg
adc
cdq
jns
cmp
and
mov
mov
sbb
mul
xlat
cmp
mov
push
jl
xor
push
jo
adc
pop
jge
loop
add
mov
pop
push
popa
push
popa
dec
imul
and
or
cmps
sub
dec
nop
cmp
loope
jnp
mov
je
fdiv
xchg
push
scas
inc
push
retf
mov
xlat
and
stos
sbb
cmp
dec
inc
test
cmp
push
jl
dec
call
jmp
aam
rcr
mov
repz
in
jle
sub
push
add
(bad)
fs
neg
adc
in
sbb
inc
in
or
push
int3
popa
add
push
mov
stc
xchg
cmp
mov
inc
nop
fstp
dec
jmp
in
(bad)
and
or
mov
pop
sbb
pop
leave
enter
fsub
sbb
jb
pop
sbb
adc
sub
iret
push
data16
setne
xchg
sbb
in
mov
pop
and
and
movs
shr
and
mov
or
sub
adc
pop
xchg
pop
cmp
test
pop
mov
aam
fidiv
adc
shl
sbb
dec
add
sub
stos
inc
imul
xchg
or
ror
xchg
dec
cmc
dec
or
mov
or
adc
aaa
into
push
add
fild
fidivr
add
pop
or
call
jl
add
push
nop
lods
imul
and
daa
jo
add
int3
inc
xchg
xchg
sbb
in
push
add
cld
stos
mov
imul
out
mov
cdq
dec
pop
cmp
(bad)
fstp
in
fcomp
cmp
push
xor
and
test
inc
xchg
scas
in
mov
mov
aad
out
adc
or
js
pop
mov
add
add
dec
sbb
mov
dec
shr
mov
mov
jnp
inc
mov
daa
mov
sbb
(bad)
in
fs
or
jp
mov
in
xchg
push
imul
movs
das
adc
mov
add
mov
pusha
lock
or
xchg
shld
jl
dec
xchg
in
in
mov
out
call
add
jb
xchg
or
mov
out
in
jecxz
les
dec
push
inc
es
inc
inc
push
sub
inc
mov
fdiv
xlat
push
mov
or
mov
aad
out
inc
dec
retf
popa
inc
cmp
ror
add
xor
lahf
adc
aam
(bad)
ficomp
lods
pop
and
fsubrp
scas
clc
sub
cmp
popf
xchg
xchg
inc
mov
mov
adc
jl
or
gs
dec
add
and
adc
loopne
fild
pushf
fwait
cwde
or
fcmovbe
inc
hlt
add
xlat
or
push
add
or
js
cmp
or
or
mov
dec
pop
fs
push
daa
xor
mov
shl
jle
clc
pop
ja
inc
iret
sar
push
loopne
repnz
hlt
shl
imul
pop
nop
push
sub
push
retf
jmp
cmp
jb
add
inc
cmp
jb
js
hlt
add
xchg
add
mov
xchg
add
lock
xchg
add
add
in
scas
xor
cmp
or
call
push
in
jmp
push
pusha
and
dec
xor
or
dec
or
and
pop
or
int3
aaa
fdivr
(bad)
dec
push
add
push
mov
fwait
ret
adc
and
xlat
and
pop
adc
jecxz
hlt
adc
test
inc
inc
inc
and
add
adc
movs
div
test
dec
push
and
dec
push
push
sub
inc
xchg
in
jg
push
inc
inc
inc
and
addr16
pusha
dec
inc
inc
daa
pop
push
in
adc
out
cmc
adc
test
add
pop
shr
pop
aaa
test
and
jno
pop
cmp
adc
(bad)
shl
mov
push
mov
mov
jg
mov
inc
stc
jmp
loope
push
aad
and
pop
pop
mov
mov
add
push
xchg
fisubr
js
push
je
ret
mov
(bad)
jmp
mul
cmp
cwde
inc
cmp
add
rcl
jo
jecxz
shl
repnz
imul
sbb
movzx
shl
leave
xor
nop
xor
mov
xchg
hlt
mov
ss
inc
or
inc
xchg
ror
fldcw
test
jne
jne
imul
je
adc
std
imul
fwait
lahf
mov
inc
add
push
xor
push
fld
ret
jno
ficomp
mov
jne
in
shl
mov
clc
and
mov
cld
mov
sub
xor
sub
jb
das
mov
ins
sub
pop
loop
pop
xlat
dec
in
mov
add
inc
test
sbb
add
mov
aam
ror
in
hlt
ficomp
xor
cmps
inc
iret
and
xchg
xor
add
pop
pushf
or
mov
adc
sub
hlt
and
repz
mov
sbb
xlat
or
ins
test
cmp
or
fwait
lahf
cld
lods
and
cmp
sahf
cs
das
sbb
xchg
in
fdivr
adc
jmp
nop
sub
jno
mov
pop
in
pop
in
adc
inc
mov
imul
push
pusha
lds
push
xchg
lods
and
push
sbb
jns
inc
sbb
js
adc
fs
in
retf
stc
mov
xchg
mov
add
fisub
ret
mov
mov
mov
scas
inc
clc
je
xor
mov
adc
sbb
sbb
add
add
push
dec
sub
cmp
scas
sbb
fidiv
mov
xor
in
scas
pushf
adc
sub
(bad)
adc
shl
cmp
sbb
ret
jbe
jmp
aad
mov
(bad)
adc
arpl
cmp
arpl
adc
call
dec
and
sub
push
int3
sbb
mov
jge
adc
mov
mov
lea
rol
(bad)
jge
xor
lea
movs
loopne
ds
add
xchg
ror
movs
push
enter
aam
push
icebp
add
mov
stc
pushf
push
shl
mov
jnp
ss
mov
and
fisttp
pop
adc
fadd
sub
(bad)
fild
mov
loopne
push
loopne
add
push
ja
cs
adc
int3
or
mov
cmps
add
in
xor
mov
movs
adc
sub
cld
popf
inc
pop
sub
add
mov
add
cld
shl
in
std
repnz
add
xchg
mov
and
or
div
outs
push
test
out
cmp
dec
push
mov
add
add
and
sbb
or
adc
dec
imul
adc
mov
mov
inc
test
je
pop
add
jbe
and
adc
adc
mov
pop
ret
inc
adc
retf
cwde
movs
ins
pushf
nop
test
sti
outs
and
imul
cwde
or
jo
into
sbb
push
xchg
push
ficomp
in
push
xor
push
call
xchg
dec
addr16
mov
loopne
cmp
dec
in
stos
aad
rcr
aaa
pop
fst
jnp
pop
nop
lods
cmp
xor
push
(bad)
jmp
sbb
sahf
push
jnp
sbb
mov
jmp
lea
adc
mov
add
add
adc
xchg
jno
test
les
fsub
call
scas
jbe
test
sub
stos
(bad)
stc
adc
into
xor
sbb
nop
mov
aaa
cmp
jo
outs
and
out
push
add
outs
and
inc
inc
ins
xchg
dec
or
add
cwde
rcl
mov
mov
loop
mov
add
aas
cmp
in
std
inc
cmp
jge
mov
jmp
push
inc
inc
push
add
push
add
jge
sbb
xor
aas
add
xor
aas
add
in
stc
ins
dec
mov
xchg
mov
out
out
inc
and
pop
ja
sub
mov
adc
cmp
or
ins
mov
jnp
sub
clc
add
test
in
inc
adc
push
add
sbb
adc
push
adc
inc
enter
icebp
test
mov
jle
mov
mov
sub
adc
fnstcw
test
test
sub
add
adc
movs
mov
pop
xchg
cwde
icebp
xchg
call
repnz
aad
xchg
sbb
mov
or
inc
add
leave
inc
or
fadd
inc
cmp
mov
les
scas
and
xchg
or
sub
inc
cmp
add
daa
mov
dec
inc
rcl
xor
scas
add
adc
push
add
or
sub
jp
mov
rol
add
div
sbb
mov
adc
jnp
cmp
jle
jmp
dec
je
cwde
jne
or
add
iret
xor
mov
inc
inc
mov
dec
push
inc
mov
dec
jle
xor
push
xor
adc
arpl
rol
add
add
fist
ret
fst
or
adc
lds
cmp
pop
inc
sbb
jg
fiadd
push
jne
in
push
pusha
dec
add
call
sbb
push
push
add
lahf
push
adc
je
and
test
inc
bound
sbb
mov
dec
pop
cmps
loope
add
add
or
clc
mov
loope
mov
retf
hlt
push
imul
into
cmp
repz
hlt
mov
pop
cwde
pushf
add
pop
jne
pop
in
cmp
or
mov
push
push
mov
cmp
pop
sub
xor
leave
inc
jg
add
sbb
push
or
add
add
adc
and
jb
inc
jae
loopne
or
dec
addr16
push
or
in
in
(bad)
icebp
repnz
in
hlt
cmc
div
in
in
clc
stc
cli
sti
in
in
cld
std
(bad)
jmp
in
in
loope
jecxz
in
in
in
out
in
in
jmp
in
in
in
out
out
in
in
rcl
rcl
in
in
aam
(bad)
xlat
in
in
fcomp
fcmovu
in
in
(bad)
(bad)
in
in
rol
ret
in
in
(bad)
(bad)
in
in
enter
in
in
int3
int
iret
in
in
mov
mov
out
in
mov
mov
add
or
or
and
push
dec
rcl
xor
lea
add
sub
or
or
pop
adc
push
les
pop
enter
lock
xchg
add
push
jmp
push
mov
lock
loopne
or
or
mov
jmp
in
je
fld
sub
or
xchg
or
cmp
add
arpl
or
aaa
dec
and
push
je
call
lock
data16
enter
and
or
push
pushf
adc
cmovp
gs
fisubr
jne
push
arpl
(bad)
ins
or
pop
jae
lahf
jae
xchg
cs
sar
iret
mov
int
mov
pop
idiv
neg
push
inc
popa
jae
add
sbb
or
or
add
add
sub
jb
push
fimul
or
ret
neg
nop
xchg
ja
or
or
jecxz
aaa
bswap
and
ins
inc
ins
idiv
push
push
dec
outs
jo
je
push
and
sbb
or
out
frstor
nop
and
add
sbb
adc
xor
pop
idiv
aas
mov
loopne
loope
rcr
or
adc
or
fdiv
inc
jb
fimul
mov
pop
fmul
bound
add
lock
or
dec
rcl
xchg
loopne
lods
or
cs
int3
mov
or
inc
inc
imul
rol
js
es
mov
int3
pop
mov
mov
or
fistp
mov
push
jbe
push
aad
out
push
or
mov
lods
xor
sbb
clc
sub
mov
dec
or
xchg
out
pop
and
mov
cmps
inc
xchg
ins
xchg
clc
dec
test
sahf
imul
test
xchg
sahf
and
ds
cmps
pop
or
les
inc
or
push
loop
and
hlt
jb
mov
in
dec
add
pusha
lock
adc
mov
xor
ins
es
je
push
sbb
add
dec
enter
inc
and
lods
and
xchg
out
push
dec
gs
sbb
push
inc
ins
pop
pop
xor
gs
nop
cmp
cmp
jmp
jl
add
and
mov
fiadd
adc
test
es
nop
sbb
addr16
mov
mov
and
out
jne
pop
sbb
lds
in
mov
sub
sub
add
ds
aas
add
inc
scas
pop
xchg
add
mov
sub
shl
repnz
idiv
cmp
add
cmps
add
data16
sysenter
pop
jb
call
adc
cmc
es
test
rcl
push
ds
int
nop
lahf
pop
sbb
add
and
xchg
dec
add
sub
sub
neg
repnz
(bad)
jmp
sub
daa
jns
add
mov
fcomp
rcr
out
icebp
inc
mov
xor
test
pop
push
inc
popa
sbb
pop
sbb
push
mov
or
inc
ror
mov
push
add
bound
or
aad
and
mov
jmp
inc
xor
and
mov
xchg
mov
push
fs
xchg
ret
sbb
dec
retf
pop
add
fcmove
and
(bad)
xchg
adc
repz
scas
jge
adc
mov
es
fsincos
fld
xchg
dec
pusha
mov
mov
pop
repz
cmp
into
and
mov
imul
in
nop
lds
push
(bad)
test
sub
mov
inc
inc
outs
mov
inc
dec
push
adc
xlat
jl
pop
push
dec
pop
sub
inc
xor
scas
add
mov
aas
pop
adc
mov
mov
inc
pop
and
daa
cmc
push
sbb
nop
and
mov
cmps
pusha
mov
or
push
cs
mov
dec
ins
popa
addr16
test
jp
push
fcom
adc
xchg
or
push
or
fmul
sbb
mov
mov
and
loop
push
cmp
lock
xchg
psubw
pop
inc
cmp
or
mov
clc
mov
inc
inc
pop
push
hlt
xor
dec
nop
cmp
data16
push
jl
push
js
dec
ins
dec
and
in
popf
mov
xchg
pop
dec
pop
bound
jo
aam
iret
jnp
popa
cmp
xchg
push
xor
sbb
mov
pop
int3
adc
dec
jae
(bad)
rcl
fadd
xchg
rol
or
inc
push
adc
add
mov
stos
xchg
bound
mov
cmp
aaa
leave
js
test
xlat
or
repnz
mov
xlat
mov
sar
inc
and
sub
pop
jno
div
inc
push
sbb
push
ja
dec
pop
sbb
test
xor
hlt
cmp
sbb
jecxz
nop
adc
(bad)
adc
fist
sar
(bad)
aas
inc
add
xor
rol
xor
inc
jle
dec
jmp
mov
test
sbb
xchg
ins
adc
inc
out
sub
rcl
cdq
ror
or
push
mov
push
and
fidiv
adc
stc
fmul
lea
or
je
test
pop
dec
data16
jne
(bad)
inc
test
loopne
mov
inc
cmp
add
icebp
xor
xor
add
pop
idiv
or
xchg
sub
(bad)
mov
or
cdq
sbb
inc
dec
or
arpl
or
pop
push
dec
and
arpl
loopne
test
inc
push
lds
pop
sub
pop
sbb
dec
lock
xchg
adc
sub
or
cmp
sbb
aam
int
adc
imul
jns
lahf
push
adc
sar
sbb
jo
mov
pop
mov
out
lods
adc
loop
adc
jnp
aaa
mov
rol
je
adc
cmp
xchg
and
pop
leave
mov
mov
sbb
mov
inc
dec
cmps
sbb
xor
das
inc
neg
int
mov
test
inc
popa
pop
xchg
repz
(bad)
lahf
inc
pop
adc
xor
or
mov
sbb
jmp
fld
test
xchg
jp
inc
add
jb
adc
xor
js
push
cmp
in
dec
xlat
or
adc
mov
in
push
jg
mov
sub
ret
cmp
pop
cld
outs
pop
scas
ins
pop
push
cmps
dec
and
inc
xor
rcl
fld
daa
or
ins
pop
adc
or
push
movs
cmp
out
inc
call
outs
pop
dec
leave
pop
cmp
cmp
jns
mov
xchg
jg
jne
jo
gs
push
int3
add
and
ss
in
push
imul
pusha
dec
push
xchg
push
dec
jle
pop
gs
jb
mov
jne
or
arpl
imul
inc
jno
popa
mov
pop
pop
or
ins
or
jmp
jns
add
jl
add
inc
dec
data16
push
inc
mov
cmc
xchg
cdq
and
das
cmovae
sbb
and
pop
jo
add
xor
addr16
sti
inc
mov
das
inc
je
inc
push
xchg
push
xchg
es
or
adc
sbb
sub
ins
outs
or
jg
jg
xchg
lods
sub
arpl
outs
cmp
daa
pop
xchg
fs
loopne
bound
cmp
popa
inc
pop
or
push
adc
mov
add
jg
sub
xor
adc
dec
adc
adc
adc
or
jg
xor
outs
jne
pop
pusha
enter
adc
sysenter
mov
mov
or
lahf
dec
mov
loop
jno
inc
xor
shr
loopne
outs
das
cmp
sbb
or
movs
das
or
pop
mov
dec
cli
aas
rcl
xor
xchg
cmp
ss
es
add
mov
dec
mov
sbb
add
fdivr
test
dec
inc
push
push
inc
push
jnp
lods
jne
add
dec
push
xor
not
dec
inc
dec
dec
arpl
xchg
xor
adc
push
xor
and
inc
shl
in
jae
dec
dec
and
out
dec
sub
or
out
adc
fcmovu
out
inc
dec
inc
and
inc
xor
inc
in
mov
dec
mov
push
push
dec
dec
push
dec
ins
imul
dec
mov
(bad)
das
nop
jl
lods
sbb
mov
dec
push
mov
push
push
push
push
dec
inc
dec
or
int
mov
adc
push
push
push
aas
in
loope
push
inc
scas
dec
inc
dec
push
mov
mov
lahf
sbb
mov
mov
loopne
pop
mov
jo
add
push
mov
jl
sub
xor
adc
mov
and
cs
adc
xchg
push
or
mov
lea
or
push
or
sbb
and
into
jg
jge
cmp
inc
or
out
call
and
int
or
inc
or
jmp
or
add
iret
jmp
add
fdiv
mov
pushf
and
xor
xchg
in
add
mov
mov
scas
push
inc
(bad)
push
adc
stos
ja
adc
test
push
mov
jp
add
add
pop
sub
sbb
cmps
xor
inc
cmp
inc
mov
ret
js
add
push
mov
ret
and
das
cmps
or
aam
dec
adc
sar
adc
or
sbb
daa
xor
(bad)
jne
les
mov
mov
xchg
and
push
aam
cmp
xor
or
das
cmp
mov
push
cli
das
sub
sbb
nop
add
cmp
retf
movs
in
xor
sti
mov
sbb
or
call
mov
imul
mov
mov
and
sbb
push
inc
adc
jmp
jne
mov
dec
out
out
scas
push
imul
(bad)
enter
ss
mov
inc
sbb
je
rol
jmp
iret
add
not
nop
stos
xor
pop
inc
pop
inc
cs
sbb
imul
adc
adc
dec
xchg
cmp
ret
pusha
lock
sbb
jne
aas
sbb
ss
cmp
inc
ficom
sbb
xor
les
lahf
test
fiadd
push
fcomp
add
push
cmp
push
or
or
fisttp
test
les
inc
fcmovnb
inc
popf
mov
popa
and
push
(bad)
and
ror
xor
pop
xor
jmp
int3
call
push
add
sub
out
fwait
mov
(bad)
mov
mov
lock
inc
retf
mov
pop
sti
loop
nop
push
inc
fsub
movs
aam
movs
pop
daa
or
jmp
sub
inc
data16
add
mov
jmp
retf
in
jb
sub
(bad)
xor
mov
push
push
gs
dec
mov
fsubr
fldenv
inc
push
das
fdivp
ficom
and
mov
push
sbb
push
mov
out
out
push
(bad)
mov
or
and
scas
outs
jnp
fidiv
xchg
pop
add
mov
leave
add
or
test
and
test
movs
inc
aaa
rol
sbb
mov
jmp
or
cmps
daa
mov
mov
mov
in
mov
daa
sub
adc
sub
sub
xchg
add
aam
push
adc
imul
push
mov
add
jne
fistp
fisubr
jne
adc
aad
sbb
push
rcl
mov
es
or
leave
repz
cs
sub
or
inc
add
mov
leave
repz
xchg
sbb
pop
mov
xor
or
pop
or
mov
enter
and
movs
add
inc
scas
pcmpeqb
pusha
jb
daa
nop
sub
movs
push
enter
dec
sub
mov
push
sub
adc
js
aas
inc
jb
cmps
fldcw
movs
loopne
push
es
sub
mov
push
mov
inc
sbb
pop
mov
mov
and
mov
call
dec
lock
mov
inc
push
adc
mov
mov
adc
mov
das
lds
pop
and
or
pop
or
or
mov
mov
je
push
aaa
xchg
inc
add
out
call
lock
enter
sub
or
es
push
aas
ss
sbb
mov
xor
sub
nop
sbb
cmp
movs
adc
dec
xchg
daa
sub
dec
xchg
clc
push
adc
or
inc
or
xor
xor
test
push
cwde
retf
sbb
add
psubb
adc
mov
js
and
shl
stos
adc
xlat
cmps
pop
push
nop
push
add
test
mov
call
outs
pop
inc
inc
pop
aad
sbb
adc
inc
mov
pusha
cmp
sub
mov
mov
ins
mov
sub
mov
jo
mov
push
or
push
add
or
pop
or
or
imul
or
add
mov
mov
or
xchg
movs
imul
test
(bad)
push
gs
mov
mov
jge
popa
mov
sbb
sar
ins
bound
xchg
xor
inc
loope
add
sbb
inc
(bad)
iret
test
add
call
outs
mov
in
cmps
rcr
cmp
inc
push
push
in
mov
mov
and
ins
fs
xchg
outs
or
mov
inc
sbb
rcl
push
mov
imul
add
lods
xor
or
pop
mov
iret
adc
dec
pop
jbe
into
clc
or
inc
add
or
sbb
pop
sti
enter
pmullw
addr16
pop
mov
rcl
aas
aaa
(bad)
lods
and
mov
sub
xor
add
xchg
or
dec
sub
mov
ins
push
ins
inc
cmp
cmp
and
outs
add
pop
adc
nop
push
add
pop
or
lds
movs
inc
inc
add
inc
dec
cmc
xchg
ins
xor
mov
sbb
xor
dec
pop
inc
outs
add
cmps
cwde
imul
push
retf
das
jge
pop
mov
cmp
mov
retf
popa
aam
inc
push
(bad)
mov
adc
not
and
mov
cmp
je
mov
push
push
(bad)
mov
mov
mov
add
add
sbb
fs
dec
aas
mov
dec
and
loopne
iret
dec
retf
mov
and
cld
ror
and
or
jmp
add
push
add
jg
lock
not
and
mov
je
or
mov
and
xchg
mov
test
std
ds
or
and
push
add
add
xor
or
mov
mov
and
inc
push
sub
cmp
jne
xchg
fild
cmp
adc
adc
inc
sahf
adc
adc
leave
xor
fcomp
outs
ins
lods
pop
cmp
or
add
ror
adc
movs
inc
inc
rcl
add
or
push
xor
mov
ja
add
mov
pop
or
mov
sbb
sbb
das
sbb
ror
ret
xchg
push
adc
or
loope
(bad)
xor
add
pop
mov
or
dec
add
movs
and
dec
cli
jl
inc
add
xchg
inc
push
mov
sbb
fnsave
lahf
xchg
sub
adc
ds
lea
add
add
jmp
aaa
outs
sbb
pop
cmps
ins
add
add
mov
int3
hlt
fldenv
or
call
in
out
add
add
push
sub
scas
rcl
push
mov
and
daa
ds
add
lock
bound
mov
cs
sahf
in
add
pop
lock
bound
imul
inc
test
cmp
fcomp
in
push
mov
aam
jle
push
out
sbb
fistp
push
mov
xchg
retf
adc
adc
and
fs
cmp
sbb
out
mov
or
jmp
nop
shl
adc
mov
mov
and
dec
div
shl
and
fcmovnbe
jg
iret
pop
sar
xchg
ss
lock
and
dec
push
jne
adc
xchg
test
sub
pop
xor
mov
test
stc
push
mov
xchg
xor
jle
cmps
jmp
or
ins
cwde
xchg
in
sub
dec
push
(bad)
or
cmp
lock
mov
or
sbb
sbb
lods
cmp
jge
outs
sub
call
add
xor
test
sub
mov
ss
jmp
jns
adc
pop
ret
pop
or
fild
cmp
pop
ret
stc
mov
add
cmc
add
sub
int
js
cmp
push
mov
outs
xor
add
dec
out
adc
push
jmp
imul
or
punpckhdq
adc
sar
js
inc
into
sub
mov
stos
xchg
lea
add
mov
mov
or
stos
fadd
aaa
add
add
pop
pusha
cli
jne
mov
xchg
es
out
lock
xchg
cmp
or
xor
cmps
imul
push
mov
pop
pop
sbb
(bad)
aaa
push
add
jne
mov
jbe
mov
sbb
sub
mov
and
push
push
inc
push
inc
add
fs
push
add
add
add
xchg
outs
pop
jecxz
(bad)
mov
movs
dec
js
mov
and
ins
mov
enter
xchg
mov
bnd
push
xor
and
mov
mov
sub
shl
mov
mov
jmp
and
clc
sti
mov
add
cli
adc
xchg
cld
push
mov
imul
repnz
pextrw
cmp
jno
mov
cwde
xchg
sar
jnp
aas
int3
adc
or
cld
rol
data16
ds
fidivr
dec
enter
inc
movzx
jp
std
lea
inc
fcmovu
pop
push
cmp
cs
and
fwait
imul
push
addr16
data16
ret
sbb
cmp
mov
out
loopne
icebp
push
xor
lods
inc
mov
or
add
add
xor
add
mov
test
mov
das
ja
xor
icebp
aaa
das
ficom
mov
add
mov
or
cmp
inc
mov
pop
lds
test
pop
push
fld
adc
pop
mov
pop
pop
push
push
dec
clc
pop
ror
sbb
shl
jmp
es
mov
test
add
test
sbb
aam
add
sub
adc
les
fsubr
mov
add
and
les
push
js
push
mov
inc
xchg
add
not
add
ss
push
in
mov
test
sub
add
sub
or
add
outs
push
dec
lods
fnsave
in
test
mov
xor
cmps
jl
sbb
push
inc
imul
aaa
leave
push
daa
adc
test
popa
adc
push
cs
adc
xchg
xor
cmp
push
and
rcl
dec
movs
jb
fstp
mov
mov
sbb
movs
sbb
push
sbb
sbb
inc
ds
addr16
push
sub
xchg
mov
add
sub
rol
test
test
add
adc
and
test
fistp
adc
lock
sub
push
nop
inc
ds
pop
cld
push
push
cld
mov
jb
mov
ins
and
jae
aas
cmp
call
pusha
sbb
push
add
mov
inc
and
dec
inc
mov
add
fcom
add
or
pop
loopne
add
pop
jne
ss
and
rcr
or
jg
push
cmp
add
icebp
jl
sti
imul
dec
cmp
jg
push
dec
sub
jle
pop
and
sbb
or
or
jb
jecxz
mov
inc
mov
or
mov
jne
push
mov
sbb
or
cmp
adc
or
push
dec
jae
pop
fcomp
mov
fild
fsub
xor
imul
pop
jbe
in
ret
(bad)
jmp
add
sub
stos
and
inc
sub
out
das
inc
inc
sub
add
loopne
test
sbb
mov
ds
ret
or
in
sub
loopne
es
cmp
adc
mov
aam
xor
push
mov
into
in
dec
mov
dec
jne
cmp
gs
adc
xor
loope
adc
fcom
sbb
push
aas
add
in
add
test
mov
adc
xor
pop
bound
inc
ror
push
xor
push
jecxz
mov
and
nop
pop
cwde
loopne
cmp
inc
mov
ins
mov
push
mov
ret
fadd
ret
xchg
retf
mov
popa
pop
je
sar
add
push
push
mov
(bad)
mov
ret
mov
push
mov
mov
push
push
mov
push
add
sub
mov
shl
adc
jae
adc
xchg
cmps
ins
inc
fiadd
jmp
pusha
lock
or
lods
xor
push
push
push
inc
or
jo
ret
jecxz
inc
jl
sub
adc
test
or
add
(bad)
jno
and
sub
cmp
add
dec
adc
ret
mov
neg
jle
xchg
jmp
data16
cs
mov
push
mov
jmp
adc
or
data16
imul
data16
or
inc
and
test
cmps
jmp
adc
push
push
sub
lds
mov
xor
mov
mov
xchg
jno
lea
or
ins
scas
data16
mov
adc
pop
test
add
movs
xor
sub
adc
xchg
(bad)
push
mov
mov
hlt
inc
sub
data16
xchg
xlat
hlt
or
pop
nop
jae
fiadd
and
adc
and
test
sar
popa
div
push
popf
clc
pop
add
rol
sub
shl
push
pop
sbb
ins
and
inc
jmp
les
xor
clc
clc
hlt
hlt
push
cwde
fs
inc
pop
push
jg
sbb
call
jbe
loopne
rol
adc
nop
mov
sbb
mov
es
mov
mov
mov
cmp
push
imul
push
in
hlt
int3
inc
call
or
loopne
cmp
clc
call
xchg
out
hlt
loopne
fdivr
loop
dec
shl
adc
lds
xchg
int3
out
sub
in
lock
pop
push
adc
and
repz
inc
fmul
fidiv
mov
scas
and
(bad)
mov
mov
or
lods
pop
push
add
mov
jb
ins
fsubr
outs
jle
mov
sub
ins
fadd
add
hlt
test
sbb
in
xor
push
dec
add
mov
ret
hlt
loopne
push
daa
int
fcom
in
cmp
and
sub
arpl
or
sub
(bad)
push
mov
data16
fist
jmp
add
or
inc
adc
sbb
adc
add
jmp
sub
sub
out
into
xor
nop
(bad)
push
xor
push
adc
lahf
or
xchg
push
aaa
cmp
inc
inc
cmps
sbb
xchg
or
std
adc
jne
icebp
adc
xchg
cmp
aam
cmp
or
fsub
sub
dec
fwait
jne
enter
stos
sub
fidivr
inc
sahf
sbb
mov
inc
dec
hlt
dec
pop
push
push
retf
mov
retf
push
add
adc
pop
and
mov
push
adc
jnp
mov
dec
inc
and
add
cmp
mov
sub
mov
ret
ja
jbe
pop
jl
inc
push
rol
sar
or
mov
push
push
adc
or
(bad)
nop
mov
push
xchg
and
repnz
mov
pop
push
dec
cli
add
dec
inc
and
ror
cmp
loope
pop
xor
nop
mov
in
mov
add
adc
dec
add
xchg
add
or
cmp
mov
push
fcom
push
xlat
shl
(bad)
mov
and
push
fwait
lods
dec
or
pop
dec
loope
inc
imul
test
nop
dec
push
(bad)
cmp
(bad)
dec
dec
push
and
dec
imul
cmp
fbld
lahf
sbb
imul
ins
mov
dec
xor
pop
mov
pop
test
pop
test
in
jbe
cli
(bad)
test
sbb
(bad)
lea
adc
sbb
mov
cmp
sbb
add
add
add
and
mov
pop
mov
push
adc
mov
punpckhdq
xor
fistp
das
sbb
push
shl
sub
xchg
hlt
fsincos
dec
and
sahf
and
pop
sar
leave
push
pop
fisttp
pop
xor
push
sti
mov
adc
cmp
push
sbb
or
adc
cmps
repnz
xor
data16
pop
int3
push
xor
lock
pop
or
push
loope
cmp
and
pop
out
loopne
mov
cmc
test
pop
push
dec
push
xor
push
cmc
mov
jmp
mov
add
push
mov
aaa
add
imul
pop
ret
push
or
inc
into
mov
cmp
je
mov
or
fild
fcmovbe
iret
adc
mov
lods
rcl
adc
lock
loope
(bad)
mov
ss
mov
js
gs
call
call
jmp
sbb
jp
bound
adc
inc
rcl
or
inc
test
mov
push
imul
jnp
add
(bad)
not
add
(bad)
fsub
fiadd
jne
mov
pop
dec
clc
adc
mov
retf
pop
dec
pop
test
cmp
jne
add
(bad)
jmp
mov
(bad)
stos
or
jl
shl
loopne
adc
and
and
sbb
sub
dec
popa
clc
push
or
cmc
add
add
or
push
int
or
sbb
jo
sbb
push
dec
xor
inc
and
cmp
dec
mov
push
push
jmp
jae
data16
sbb
sub
inc
adc
add
outs
shl
pop
sub
test
aas
cwde
clc
pusha
ret
fild
inc
mov
(bad)
dec
(bad)
push
xchg
jge
push
add
inc
inc
test
adc
es
xchg
loopne
call
lods
cmp
jns
ret
mov
jo
cli
pop
sbb
test
sbb
sub
push
and
lods
ss
fistp
push
jo
int3
sub
adc
push
imul
rcr
add
dec
mov
jno
cmps
hlt
cmp
pusha
stos
add
dec
pusha
(bad)
in
nop
add
add
retf
je
scas
fwait
ror
push
cmp
and
jo
icebp
or
xchg
mov
neg
mov
aas
dec
jno
cmp
je
mov
cmp
pop
daa
sub
push
adc
sar
imul
inc
mov
inc
or
or
jne
cmps
xchg
data16
jo
inc
push
mov
or
ror
jne
dec
cmp
jne
mov
or
jbe
xchg
test
mov
push
inc
adc
pop
sub
pop
inc
and
sbb
imul
mov
mov
pop
rcr
scas
and
fcmovnu
sbb
outs
jg
xor
push
ficom
pop
or
mov
jbe
adc
inc
(bad)
out
push
call
mov
pop
sub
cmps
fst
shl
add
sbb
pop
pusha
pop
adc
adc
jl
(bad)
adc
and
inc
xor
push
call
dec
repnz
push
inc
xlat
xor
punpckldq
loopne
mov
or
cmp
pop
sbb
fcom
cmp
xor
loopne
faddp
ins
xor
mov
jo
jns
call
sub
push
inc
cmc
push
(bad)
xchg
xchg
imul
xchg
sub
punpckhdq
int3
push
jecxz
mov
cmps
in
loope
dec
add
and
push
or
lock
popa
mov
jg
call
add
into
fs
mov
dec
iret
add
mov
jle
sbb
sub
adc
ror
add
xchg
inc
push
leave
and
mov
add
push
mov
sbb
pop
out
pop
push
or
ins
popa
(bad)
rol
fdiv
lods
mov
shl
push
test
in
inc
mov
pop
push
cli
xchg
lods
loopne
lahf
hlt
in
ds
in
cmps
pop
jne
push
and
sbb
inc
addr16
inc
dec
ds
hlt
mov
pop
xor
movs
movs
sub
inc
out
add
daa
loop
sbb
ss
aas
ds
out
jne
or
psubsb
sub
neg
mov
iret
repnz
lock
lock
imul
stos
inc
pop
adc
out
sub
test
push
mov
pop
hlt
arpl
mov
in
popa
popa
and
jle
mov
or
lea
aaa
loopne
push
jmp
mov
inc
bound
inc
xor
fisubr
jmp
shl
stc
cmp
xor
push
adc
cwd
ins
(bad)
and
outs
mov
inc
sub
movs
inc
mov
movs
sahf
and
adc
mov
ins
stos
add
pusha
jae
push
adc
mov
icebp
cmp
inc
and
rcr
and
cmp
add
mov
xchg
test
aad
enter
push
js
pop
xor
sti
sub
popa
sub
and
push
or
mov
rcl
pop
xchg
push
mov
adc
push
mov
and
mov
inc
cmp
and
mov
outs
cdq
test
mov
movs
es
or
add
add
stos
pop
pop
ror
test
sbb
clc
xor
cld
add
sar
adc
xor
or
or
ins
or
xor
and
mov
aas
lods
push
retf
and
add
lods
pop
lods
pushf
mov
sub
lea
pop
call
frstor
scas
or
jno
push
test
test
push
fwait
mov
adc
dec
test
ret
rol
mov
xor
and
or
xchg
and
adc
xchg
sbb
ds
outs
jg
movzx
push
dec
sub
mov
loopne
adc
sti
fimul
and
add
ds
pop
push
gs
jmp
adc
popa
dec
adc
adc
mov
push
nop
cmp
enter
sar
mov
or
push
fs
inc
shl
fnsave
add
punpckhwd
xchg
add
movs
xchg
call
repz
inc
or
inc
leave
xlat
sub
inc
sbb
pop
and
dec
into
cmp
push
adc
test
sub
sub
(bad)
sti
cmps
add
and
mov
ins
cmp
icebp
adc
das
adc
mov
into
iret
adc
jo
inc
or
clc
out
cmp
bound
add
loopne
rol
jle
ret
sahf
add
add
xor
call
inc
nop
add
inc
cmp
repz
mov
sub
adc
stos
sub
outs
or
mov
ret
jg
xchg
aas
dec
leave
adc
ins
add
or
call
sbb
adc
stos
cmp
or
pop
sub
add
mov
jbe
scas
dec
shl
(bad)
movs
ins
aaa
sar
dec
in
add
cmp
movs
mov
rol
push
adc
pop
sbb
cs
or
or
loopne
sub
jno
fnstsw
das
jmp
in
mov
cs
pop
lea
pop
out
pop
loope
jmp
cmp
ss
in
fwait
mov
mov
jnp
inc
cmps
stos
jo
cli
pop
pop
and
rcl
add
mov
ja
jb
mov
cmp
adc
je
add
inc
jne
inc
or
pop
(bad)
mov
mov
dec
or
mov
inc
push
adc
data16
ja
ret
ret
repnz
jne
call
sub
lods
int
lods
cmps
inc
pop
cs
icebp
aaa
iret
jne
imul
test
adc
jbe
and
pusha
add
ss
dec
(bad)
addr16
push
es
cmps
pop
sub
std
adc
adc
sub
push
mov
xor
sahf
xor
xor
(bad)
cmp
or
or
fcom
sbb
clc
in
push
and
inc
test
inc
xor
or
jmp
mov
stos
add
outs
sub
push
mov
adc
test
cmp
nop
xor
sbb
dec
ds
je
fld
je
sub
jmp
pushf
sbb
push
push
add
mov
leave
adc
sub
or
imul
cmp
xchg
or
inc
mov
sbb
xchg
adc
xchg
mov
xor
pop
aas
lods
sbb
sub
ret
xor
pusha
cld
popa
dec
mov
push
test
dec
lods
retf
mov
dec
pop
shr
rol
das
in
int3
sub
sub
icebp
mov
xchg
pop
jne
arpl
jecxz
sti
pushf
add
sub
lea
or
dec
in
xchg
or
outs
add
pop
or
jo
jl
icebp
xor
mov
pop
(bad)
mov
jo
mov
sub
iret
test
sub
adc
lea
daa
ins
xchg
pop
and
sbb
dec
ja
arpl
and
pop
fs
and
push
push
pop
xor
or
mov
xor
daa
dec
pop
jmp
test
(bad)
push
mov
dec
pop
add
inc
test
icebp
test
or
jns
inc
mov
fild
adc
(bad)
ins
(bad)
inc
push
add
enter
rol
sbb
fist
mov
adc
mov
sbb
pusha
push
sbb
adc
pop
iret
cs
sbb
lahf
cmps
jne
pushw
or
push
sub
sub
dec
push
cmp
sub
jo
ret
into
adc
jge
and
stos
clc
add
mov
lahf
xchg
jno
mov
or
mov
inc
push
sbb
push
xchg
cmp
or
add
sub
cs
sbb
or
mov
push
sub
dec
add
cvtdq2ps
and
ror
xor
mov
push
mov
and
sub
popa
dec
or
jp
add
add
inc
in
or
je
push
jl
sbb
sub
inc
inc
fcomp
cmp
adc
mov
pushf
mov
push
in
mov
jmp
add
fs
xor
mov
ror
add
add
add
adc
imul
xchg
xor
lock
inc
dec
ror
jbe
(bad)
mov
mov
imul
nop
bound
jp
jne
rcr
icebp
add
dec
faddp
test
fnstenv
addr16
into
sub
inc
pop
lods
adc
call
aam
jo
cmp
mov
es
enter
mov
je
scas
ret
pop
int3
std
dec
ds
xor
add
adc
and
addr16
push
push
jmp
xchg
out
addr16
in
xchg
nop
adc
rcl
sub
dec
stc
mul
jo
push
call
out
stc
cmp
push
dec
and
imul
fcom
ret
inc
sahf
mov
hlt
in
add
push
or
fsub
sbb
adc
dec
and
dec
aad
adc
fs
(bad)
jmp
fcomp
loope
call
and
out
pushf
and
and
retf
ror
inc
enter
mov
mov
cmc
dec
fwait
hlt
xchg
cmp
sbb
shl
mov
out
mov
inc
nop
push
mov
push
fisttp
js
mov
xor
mov
and
not
(bad)
fs
lock
movs
test
sub
jle
movs
mov
add
stc
loope
mov
or
mov
mov
add
pop
mov
mov
sbb
jl
fmul
cld
and
push
mov
mov
pop
cld
mov
xor
lock
daa
gs
push
cld
pop
add
cmp
mov
test
cmp
sbb
sbb
nop
xchg
mov
pop
in
push
or
(bad)
push
jo
sub
inc
sub
or
inc
add
(bad)
mov
push
sbb
xchg
loop
push
mov
nop
pushf
cwde
inc
outs
adc
fwait
ret
adc
push
jo
xchg
int
jecxz
loopne
xchg
mov
lea
adc
mov
cmps
jge
jns
ja
or
and
ja
or
xchg
inc
pop
test
jmp
dec
lock
std
popa
inc
adc
add
sbb
lea
mov
test
inc
mov
fiadd
and
and
repnz
je
jmp
arpl
mov
push
xor
adc
cmps
push
sub
pop
adc
jp
ror
sar
dec
inc
add
dec
ja
mov
jle
or
in
popa
xchg
adc
inc
xlat
mov
bound
adc
dec
add
cwde
mov
jbe
push
pop
arpl
loopne
mov
stc
jge
and
lock
iret
retf
cmp
jecxz
mov
iret
mov
or
(bad)
pop
or
dec
sbb
adc
sar
ds
inc
and
rcl
sbb
sbb
aaa
mov
pop
js
fwait
inc
add
sti
mov
adc
mov
cmps
and
jg
mov
push
lds
ror
loopne
movs
(bad)
dec
pop
inc
adc
xchg
es
add
jmp
fs
pop
mov
jp
push
cmp
repz
sbb
push
mov
into
movs
rol
xchg
movs
popa
cmp
adc
cmp
ja
jne
add
mov
aam
cmp
adc
xor
(bad)
sub
int3
rol
fiadd
loope
jle
sub
inc
fcomp
jno
mov
or
out
mov
jbe
cmp
jae
inc
ds
mov
jne
cmp
push
cmp
adc
xor
push
data16
pop
inc
sbb
sub
or
cmps
sbb
test
les
sbb
pop
cld
or
in
daa
and
jnp
es
and
popa
mov
sbb
fcomip
and
push
push
je
and
or
movs
repz
pop
inc
push
loope
xchg
fbstp
adc
or
fimul
push
xor
rol
adc
ss
test
movs
sar
js
pop
mov
push
xor
push
loopne
inc
sbb
add
dec
retf
push
dec
fs
mov
cmp
addr16
call
mov
and
stos
aad
pop
jmp
adc
mov
nop
lods
mov
jo
vmread
xor
add
outs
dec
cmps
enter
arpl
xor
cmps
or
dec
loope
xor
xchg
or
xor
xchg
sub
adc
xor
push
pop
rcl
push
sti
fcom
dec
add
mov
sti
mov
retf
(bad)
mov
or
or
mov
movs
movs
cmp
dec
pop
mov
xchg
push
cmp
loopne
shl
inc
maskmovq
neg
inc
mov
fstp
cmp
pop
mov
bound
sub
or
xchg
mov
lock
cld
push
fidiv
popf
stos
dec
in
push
sub
add
out
sub
jmp
mov
shl
adc
or
bound
shr
push
sbb
movs
les
mov
mov
sub
pop
push
dec
movs
outs
test
sbb
pop
dec
mov
inc
outs
(bad)
push
cmp
fdivr
idiv
push
imul
mov
pop
pop
jno
mov
mov
sbb
xor
ins
add
call
in
cmp
daa
(bad)
out
push
sub
sub
cmp
adc
cmc
popa
adc
inc
clc
pop
stos
or
mov
sub
mov
pop
test
rol
ret
cmp
ret
aaa
cdq
sub
inc
ins
adc
ins
lods
xor
int3
pop
ror
addr16
adc
inc
jmp
xor
mov
sub
stc
push
push
pop
fisub
cmp
sub
or
mov
add
daa
jbe
xchg
push
push
or
pop
push
sub
mov
sub
mov
mov
enter
mov
jnp
fisttp
mov
jnp
mov
push
adc
add
add
xor
dec
jmp
nop
mov
push
fnstsw
jg
dec
sub
jmp
aaa
in
gs
adc
sub
jne
mov
in
cdq
jp
lods
ja
dec
push
or
ins
xor
jbe
clc
sub
sbb
dec
enter
or
adc
sbb
push
gs
push
pop
in
lock
sub
sub
and
inc
aas
scas
pop
mov
mov
cmp
ret
or
add
jne
push
push
loop
mov
pop
add
sub
jge
into
and
rol
pop
inc
add
jno
ret
in
add
inc
mov
daa
and
rcr
lds
arpl
jbe
test
or
rol
adc
jp
clc
inc
xchg
sub
pushf
add
movs
test
pusha
and
adc
mov
sbb
cli
mov
adc
add
adc
aam
add
dec
or
inc
sbb
dec
or
sbb
nop
mov
fisub
push
push
or
inc
cmp
ret
loopne
cmovnp
ror
add
lahf
ret
pop
pop
outs
hlt
movs
ret
cmp
push
jns
jns
sbb
retf
and
hlt
fucomip
jle
push
rcr
jne
scas
or
aaa
mov
pop
dec
xor
out
or
cmp
ret
bndldx
pop
or
jne
push
ins
mov
outs
cmp
push
push
sahf
imul
mov
clc
cwde
cmp
(bad)
mov
jno
test
pushf
adc
movs
push
dec
or
cmp
jecxz
cmp
push
adc
sbb
js
sub
jb
or
mov
in
mov
mov
bound
mov
or
push
pop
pusha
or
fs
push
or
sub
mov
adc
push
cmp
cmp
enter
jl
sub
data16
lods
arpl
and
mov
xor
in
sub
fistp
or
adc
inc
sbb
cmps
neg
idiv
xor
mov
push
test
sub
mov
cwde
sti
dec
js
mov
imul
push
inc
mov
mov
popa
nop
inc
mov
add
imul
ja
and
test
adc
dec
sub
inc
aaa
or
dec
stos
push
add
add
outs
out
inc
stc
push
mov
aas
pop
fsub
mov
jae
xor
pop
push
jmp
add
call
clc
inc
je
dec
je
dec
adc
adc
mov
test
sub
sbb
out
push
jnp
and
pusha
out
pop
adc
in
xor
dec
adc
xchg
(bad)
call
pop
movs
push
stc
and
pop
push
and
loopne
sbb
cmp
loop
dec
fwait
cmps
loopne
loopne
inc
sar
jle
or
(bad)
popa
enter
cmp
jle
push
pop
inc
add
add
in
xor
sub
fcom
sub
mov
dec
inc
mov
movs
and
and
sub
ds
test
daa
inc
sbb
xchg
mov
sub
jo
or
dec
lods
ja
sbb
lock
adc
sub
mov
adc
inc
cmp
mov
(bad)
dec
mov
jb
or
mov
xchg
or
sbb
jl
inc
or
ins
mov
das
or
nop
nop
adc
lock
call
je
std
fisttp
outs
cmp
mov
sub
fnsave
movs
sub
mov
dec
lea
or
adc
push
adc
(bad)
pop
bound
jmp
and
add
dec
jb
push
add
(bad)
and
and
mov
xchg
push
xlat
push
dec
inc
sub
sbb
dec
add
pushf
mov
les
xchg
adc
bswap
xchg
sub
inc
ficomp
and
and
fs
add
adc
jge
cmps
fild
jo
dec
in
push
or
pop
fucomip
inc
mov
lods
xchg
cmp
add
xchg
mov
scas
jno
and
lea
test
fs
add
popa
movs
sbb
add
mov
fsub
(bad)
clc
pop
sbb
std
xchg
mov
push
and
ror
scas
xchg
inc
xor
xor
adc
push
add
adc
dec
adc
mov
fisubr
jbe
popa
jns
jae
les
add
mov
jo
push
ds
out
adc
jae
sub
mov
mov
in
jg
pusha
or
ss
les
ret
push
push
inc
push
(bad)
cmp
add
aas
cmc
adc
jb
das
cld
adc
out
mov
ret
nop
pop
and
ds
pop
and
push
and
cwde
test
inc
cmp
pop
inc
push
and
sub
push
or
xchg
loopne
cmp
fs
inc
cmp
and
test
or
adc
aaa
lea
inc
add
ret
cmps
adc
ret
je
into
jo
xor
xchg
and
test
ins
mov
pop
pop
sbb
inc
sub
push
xchg
pop
push
mov
inc
lock
aas
jo
or
cmp
imul
movs
mov
add
stos
inc
arpl
dec
ret
test
dec
cs
mov
enter
call
retf
call
dec
loope
mov
(bad)
out
outs
or
pop
xchg
cld
mov
pop
rcl
mov
mov
or
push
fcmovbe
in
out
outs
or
stc
push
mov
imul
mov
adc
fldenv
fild
lods
adc
ins
mov
inc
jnp
xchg
iret
adc
data16
ja
dec
push
and
sub
push
popa
pusha
and
add
movs
in
xlat
sub
xor
test
nop
pop
adc
cdq
dec
ret
and
add
mov
pop
mov
jo
daa
push
enter
pop
test
sbb
push
not
mov
retf
test
mov
push
stc
dec
adc
xor
aam
jb
in
jg
jno
xchg
cmp
sbb
dec
lods
push
push
pop
sahf
out
sahf
xor
inc
xchg
mov
jns
outs
ja
xchg
(bad)
ja
fmul
gs
aaa
iret
outs
inc
sti
in
nop
jl
sbb
iret
pop
inc
add
add
jne
pop
xchg
inc
test
xchg
and
fst
into
mov
sub
clc
and
clc
dec
cmp
inc
push
lock
push
xor
jae
ins
shl
mov
dec
les
mov
ins
add
push
sub
mov
bound
add
or
mov
sub
add
nop
movs
lahf
nop
ins
add
(bad)
in
stc
test
shl
test
mov
adc
cmp
sub
cmp
sbb
adc
lea
adc
cmp
not
inc
adc
pop
dec
iret
rol
sbb
movs
pushf
test
nop
in
into
in
leave
movs
or
dec
cmp
stos
retf
add
push
leave
add
pop
pop
pop
(bad)
adc
sbb
sub
es
xor
inc
and
mov
ret
jmp
(bad)
sub
call
or
popa
scas
cmp
dec
ins
loope
std
int3
js
sub
ss
and
xchg
cmp
xchg
pop
and
rcl
pop
mov
adc
mov
jmp
pushf
ret
pop
jb
or
or
out
push
fadd
add
xor
xor
push
xchg
push
jmp
aam
dec
mov
inc
mov
mov
or
inc
test
inc
jecxz
mov
in
test
ret
push
iret
add
(bad)
outs
sbb
xor
ins
lea
mov
pop
imul
sbb
bound
inc
or
in
daa
and
(bad)
or
push
repnz
add
je
and
jmp
mov
cmp
jns
add
cwde
(bad)
arpl
bound
in
fistp
out
jbe
pop
ja
inc
mov
test
jle
dec
jne
sbb
xchg
adc
sbb
or
les
cmp
cmp
inc
fxch
and
push
cmp
push
lock
mov
cmp
loopne
mov
daa
ffree
imul
add
sar
inc
sub
jne
lea
sbb
inc
xor
push
jge
and
mov
jp
daa
xor
lock
add
and
or
fdivr
rol
ins
and
js
cmps
push
jl
mov
ret
jle
or
mov
push
mov
dec
add
dec
xor
pop
ins
jle
sub
adc
xor
pusha
adc
cmp
adc
adc
xchg
and
rcr
pop
shr
daa
movs
fldenv
sbb
in
js
ins
or
scas
xchg
jo
fadd
xor
jbe
(bad)
fsub
sub
pop
dec
dec
jg
lock
(bad)
loopne
test
loopne
mov
xor
xor
out
xor
daa
ja
xchg
inc
add
xchg
shl
retf
adc
xchg
fs
test
inc
sbb
cli
(bad)
adc
jne
mov
dec
or
data16
imul
repnz
sbb
js
int3
sub
call
sbb
out
cld
loopne
push
jo
dec
in
xchg
call
in
jnp
dec
ret
cmovb
adc
or
xchg
xchg
or
sbb
shl
mov
pop
jno
sbb
xchg
pop
pop
clc
jmp
xchg
cld
xchg
movs
xchg
out
xor
in
and
cmp
lock
stos
cdq
xchg
retf
xchg
lock
loop
mov
mov
xchg
icebp
push
rcr
xchg
cmp
or
shl
aas
leave
push
xor
or
imul
inc
fsubr
jecxz
add
aas
pushf
xchg
and
(bad)
dec
je
dec
push
mov
jmp
lds
jmp
adc
sbb
dec
sbb
fsubr
adc
(bad)
jle
jns
sar
xchg
inc
and
mov
outs
(bad)
fs
and
xchg
pop
jns
into
inc
adc
movs
in
pop
cwde
sbb
or
inc
loope
adc
and
xor
adc
mov
sbb
jl
cmp
xor
pop
cs
mov
adc
cmp
xchg
in
retf
sbb
int3
in
js
mov
mov
or
push
fcom
call
hlt
xchg
hlt
fwait
mov
clc
jb
aaa
lock
push
clc
pop
and
fucomp
and
mov
pop
mov
sub
sub
xor
das
leave
xchg
pop
(bad)
sbb
fwait
dec
push
imul
sub
inc
sub
xor
or
mov
jbe
mov
add
pop
bnd
and
add
int3
add
xchg
out
les
in
test
or
xchg
retf
or
or
cmp
sbb
adc
add
cmp
in
mov
shld
arpl
sbb
and
sbb
je
outs
push
inc
daa
push
sub
daa
test
fwait
pop
add
das
nop
push
inc
outs
sub
bound
cmp
xor
js
push
cmp
lock
outs
jae
daa
pusha
dec
sub
jg
fisttp
repnz
jns
sbb
or
enter
pop
xchg
rol
movs
fucomi
mov
fcomp
fwait
hlt
pop
jle
dec
rcr
enter
test
jno
test
xor
sbb
xor
sbb
sbb
cmp
inc
dec
sbb
sbb
dec
push
push
pop
sbb
sbb
pop
pusha
fs
ins
jo
js
sbb
sbb
mov
sbb
sbb
sbb
pushf
mov
sbb
lods
mov
mov
mov
sbb
sbb
rcl
fcomp
sbb
sbb
loopne
call
(bad)
push
fwait
push
les
xchg
out
pop
lahf
and
lock
jnp
pop
arpl
cmp
out
cmps
or
xor
lahf
retf
and
add
push
push
movs
pop
jne
xor
inc
sbb
cmp
and
push
push
push
movs
mov
push
sbb
les
sub
push
loopne
xchg
lods
or
clc
pop
or
sub
fs
add
fs
movs
xor
jo
je
retf
test
sub
push
sbb
mov
dec
gs
test
mov
xchg
add
push
movs
xor
xor
xchg
dec
cwde
and
mov
retf
test
gs
sub
lods
xor
mov
movs
xor
xchg
mov
adc
les
push
sbb
nop
retf
or
shr
sub
push
sbb
inc
fcomp
dec
gs
fsubr
xchg
add
push
fbstp
xlat
xchg
inc
push
lahf
(bad)
and
sub
ret
ins
gs
push
inc
lds
sbb
cdq
add
or
and
sbb
mov
leave
int
mov
enter
add
arpl
in
jo
popf
and
and
adc
je
push
xchg
push
pop
popf
mov
and
imul
scas
addr16
fs
dec
arpl
and
dec
in
lea
daa
lea
push
pop
jp
les
repz
sub
inc
movs
and
mov
push
mov
int
pop
xchg
pop
inc
adc
scas
adc
(bad)
jo
push
or
cmp
cmp
daa
out
pop
and
or
or
(bad)
and
pop
sbb
mul
inc
add
out
pop
lock
pop
cmp
sbb
(bad)
popa
and
cmp
xor
or
(bad)
in
and
pop
in
pop
mov
in
pusha
xchg
pop
pop
xchg
mov
add
ja
adc
push
jg
js
call
addr16
xchg
fidivr
sbb
outs
das
pop
sbb
outs
ins
fs
inc
outs
ror
push
ds
pop
test
or
mov
xchg
cwde
xor
sub
xchg
xchg
pop
popa
push
pop
mov
jbe
push
outs
test
mov
and
add
clc
xchg
pushf
pop
sub
pop
outs
pop
movs
into
mov
cmps
mov
lea
mov
inc
test
div
mov
add
jno
repnz
jne
idiv
mov
outs
lods
add
dec
push
leave
and
push
in
in
in
enter
add
movs
or
gs
push
and
or
fidiv
mov
rcl
int3
test
nop
xchg
push
test
mov
sbb
adc
sbb
push
add
out
out
dec
cs
cld
(bad)
clc
push
or
adc
imul
push
pop
sub
ret
and
adc
inc
push
add
js
inc
add
fild
loopne
add
push
popf
in
sub
mov
sbb
mov
dec
or
lods
mov
mov
inc
xor
push
push
mov
sub
adc
mov
dec
pop
xchg
push
mov
mov
adc
cmp
clc
add
mov
in
das
or
xchg
push
pop
cmp
ret
(bad)
ss
mov
sbb
xor
sub
xor
pop
retf
clc
test
sub
pop
pop
and
fild
push
(bad)
fwait
aad
imul
hlt
jg
aam
push
dec
popa
in
jmp
inc
or
shr
sbb
xchg
xchg
shl
and
xchg
cmc
pop
push
jne
data16
dec
out
cmp
xchg
lods
adc
call
add
das
in
dec
jle
sbb
xor
movs
dec
das
jmp
sbb
call
aas
sbb
inc
fnstsw
pusha
push
push
lea
pop
fimul
and
pop
mov
js
xor
dec
scas
add
jmp
push
push
inc
dec
or
scas
pop
and
popf
add
add
push
ins
jecxz
dec
aas
or
xchg
rcr
bound
push
cmps
jo
mov
imul
retf
in
mov
pop
lea
ins
or
and
mov
shr
test
pop
imul
adc
inc
add
push
sbb
or
pop
inc
stos
rcr
sub
(bad)
and
cmp
int3
mov
pusha
dec
xchg
dec
test
js
imul
mov
out
retfw
dec
mov
out
add
imul
dec
into
cmp
lock
retf
cmp
out
xor
pop
out
mov
mov
push
and
cmp
mov
cmp
fidiv
data16
movs
mov
fsub
in
repnz
cwde
mov
popf
mov
pop
inc
or
and
shl
aam
push
stos
mov
icebp
je
pop
fadd
ret
mov
ror
mov
test
mov
pop
stos
push
or
jo
lahf
sbb
mov
and
lods
mov
adc
stos
mov
into
pushf
adc
movs
pop
push
jns
pusha
in
stos
fbstp
stos
sbb
xor
not
and
inc
outs
jmp
mov
sbb
scas
or
pusha
jmp
fcom
jb
test
shr
add
fwait
mov
add
shl
jae
jns
loop
(bad)
jl
xor
mov
call
out
mov
pop
add
je
inc
jno
mov
inc
add
ss
hlt
xchg
mov
pop
xor
lods
das
mov
lods
inc
enter
dec
mov
outs
xor
shl
xor
add
add
adc
sbb
push
jb
add
dec
xchg
sbb
pop
push
xchg
nop
xchg
das
lods
pop
and
sub
jbe
xor
jp
or
cmp
sub
cmp
xor
call
call
dec
jle
enter
push
icebp
add
idiv
push
inc
or
or
push
minps
xor
mov
push
xor
mov
jmp
outs
or
cmp
and
and
outs
and
ret
mov
dec
dec
mov
dec
dec
dec
mov
dec
dec
dec
cmps
test
stos
dec
dec
dec
dec
stos
lods
lods
scas
dec
dec
dec
dec
scas
nop
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
cwde
cdq
call
popf
sahf
dec
dec
dec
dec
lahf
add
add
xchg
cmp
cmp
dec
add
scas
push
iret
repz
lock
and
sbb
repz
adc
or
jns
iret
repz
clc
pop
mov
out
call
out
sahf
fcomp
jns
out
rol
sahf
out
test
mov
sahf
cwde
pop
nop
push
mov
sahf
out
add
jo
jns
out
push
out
sahf
pop
sbb
dec
or
out
inc
add
clc
lods
xor
cmp
repz
and
iret
repz
sbb
adc
or
sahf
out
cmp
sar
mov
jns
call
jns
out
cwde
rcl
pushf
mov
mov
add
sbb
les
ins
das
pusha
test
or
or
add
push
xchg
and
inc
push
neg
mov
sbb
mov
cmp
or
pop
mov
sbb
nop
sub
sbb
xchg
psllw
inc
daa
push
mov
sbb
or
xchg
xchg
and
popa
mov
pop
out
xlat
push
call
pusha
xor
rol
scas
jl
retf
jne
scas
or
xchg
outs
sub
or
push
inc
(bad)
and
and
push
xlat
and
push
and
in
jbe
mov
inc
sub
dec
xor
inc
sbb
out
cmps
inc
inc
cmps
rcl
xor
test
xchg
cmp
mov
and
xchg
neg
mov
add
sub
cmp
pop
mov
xlat
push
xchg
and
cmp
sub
addr16
mov
dec
xchg
sub
push
ds
rol
or
mov
cmp
push
xchg
(bad)
mov
xlat
pusha
scas
mov
fs
shr
repnz
cmps
mov
fs
inc
fs
fnstenv
mov
pop
jo
pcmpeqb
ret
test
and
push
fadd
push
dec
cmp
mov
push
adc
adc
or
push
in
adc
jb
data16
je
in
sub
cmp
mov
mov
pop
mov
sahf
inc
jmp
mov
in
jl
mov
pop
pop
mov
sub
xchg
je
or
js
aaa
imul
add
out
mov
mov
sub
add
pushf
dec
pop
sbb
je
mov
mov
in
push
shl
mov
mov
mov
ficom
ja
cld
xlat
jae
daa
sub
ins
jnp
jecxz
and
cld
xor
fild
sar
xor
arpl
add
clc
or
mov
add
arpl
ins
sti
pop
pop
jle
arpl
imul
inc
outs
pop
js
jge
popf
(bad)
add
es
jb
cdq
jo
push
jb
popa
or
mov
bound
jbe
jne
(bad)
es
imul
jo
mul
pop
addr16
jb
addr16
(bad)
(bad)
fiadd
pop
mov
arpl
ins
daa
neg
xor
je
fistp
das
je
cmps
sbb
gs
ins
mov
xchg
pop
shr
jo
daa
mov
in
out
je
jo
jb
arpl
sbb
sbb
outs
dec
pushw
das
gs
mov
imul
adc
mov
mov
ret
jne
and
and
shr
or
adc
scas
and
cmps
aaa
pop
test
push
inc
adc
pop
aaa
fsubr
daa
and
or
jl
or
sbb
aas
jl
and
mov
and
push
mov
jbe
mov
js
dec
retf
movs
or
push
ins
enter
pop
cs
add
ins
ins
push
sbb
mov
imul
imul
fstp
scas
je
push
push
daa
loopne
mov
xchg
icebp
movs
mov
xor
sub
cld
jae
nop
or
xchg
imul
nop
stos
sub
adc
adc
cdq
or
cdq
sbb
sbb
repnz
xor
pop
es
xchg
dec
cdq
dec
sub
fimul
push
add
sahf
add
adc
and
jmp
jmp
jmp
mov
movs
repnz
or
nop
push
or
outs
xchg
and
mov
push
fs
sahf
lahf
dec
dec
mov
sahf
dec
shl
add
push
pop
pop
or
or
or
or
or
or
movss
adc
iret
repz
adc
push
pop
sbb
(bad)
iret
repz
sbb
ja
sub
and
nop
mov
inc
out
sahf
out
imul
sahf
lods
mov
mov
adc
iret
repz
out
cmp
mov
mov
adc
cs
pop
xor
je
xchg
ss
lods
test
test
or
sub
push
adc
and
or
in
push
or
or
movs
sbb
sbb
xchg
push
cs
and
movaps
xchg
retf
adc
push
mov
adc
push
cs
inc
xchg
dec
sub
in
retf
dec
sbb
sbb
test
pop
sbb
xor
sbb
popa
repnz
sub
pop
bound
push
sub
arpl
fs
sub
repnz
and
test
and
and
push
loop
int
add
jg
or
hlt
jecxz
test
mov
sub
call
ret
dec
fcomp
inc
add
(bad)
mov
movs
pop
pop
jge
arpl
cmps
es
push
(bad)
fdivr
add
ret
fldcw
adc
push
add
call
xchg
lock
loopne
jbe
jns
aam
(bad)
int3
mov
push
ja
xor
pop
adc
in
fs
fadd
sub
fs
add
mov
fcomp
pcmpgtb
shl
xchg
imul
out
jnp
mov
sbb
mov
addr16
lahf
test
mov
cmp
mov
dec
push
jns
mov
mov
pop
mov
add
pop
sub
imul
xchg
or
push
rol
fld
sub
inc
jns
(bad)
and
inc
movs
rol
jo
lock
fst
fadd
adc
hlt
fistp
dec
inc
rcr
xchg
shl
and
popa
cmp
arpl
fs
add
hlt
outs
ret
adc
std
sub
jae
push
leave
test
inc
pusha
fldenv
push
add
iret
add
es
or
nop
or
in
ins
push
fsubp
mov
je
cmp
mov
int3
cdq
popf
pushf
sbb
inc
call
cmp
rcr
push
sbb
repnz
loopne
jns
out
pop
fwait
push
movs
dec
push
pop
out
sahf
out
imul
sahf
mov
xor
inc
and
cmps
mov
in
cmp
jno
or
push
push
pop
add
es
pop
xchg
pop
jb
int
adc
sbb
and
aad
lods
inc
jns
sbb
push
mov
stos
sub
rol
dec
dec
sub
or
push
(bad)
cwde
movs
loope
dec
mov
jmp
test
div
nop
into
push
cld
mov
add
pop
cld
or
mov
pop
sub
pop
cmp
adc
push
dec
adc
or
jmp
adc
iret
aaa
les
dec
sbb
jmp
lea
jne
add
jb
pushf
test
mov
test
push
enter
test
cmc
shl
ins
cmp
mov
push
jl
shl
fmul
imul
inc
add
test
adc
xlat
jnp
or
adc
iret
es
cmp
inc
dec
imul
mov
lar
pop
inc
mov
dec
mov
add
mov
loopne
je
push
jl
xchg
xchg
jb
inc
jno
xchg
xor
push
pushf
xchg
(bad)
(bad)
mov
mov
nop
cmp
bound
sahf
in
in
add
xchg
xchg
add
push
call
pop
fs
icebp
cld
adc
cmp
mov
add
cli
or
(bad)
add
in
mov
call
nop
in
add
dec
dec
aaa
mov
sub
sub
xor
sub
retf
jnp
pop
sbb
cmp
sub
sub
and
adc
xchg
xor
sub
sbb
adc
shr
dec
add
in
adc
cmps
add
(bad)
in
or
pop
jns
mov
mov
test
(bad)
xlat
adc
and
cmps
outs
mov
lock
jb
adc
mov
in
outs
enter
sub
test
inc
cmc
bound
ror
fldcw
push
lock
mov
(bad)
sub
mov
mov
mov
(bad)
stc
jne
sub
(bad)
lock
mov
jne
data16
lds
mov
adc
pop
or
enter
fild
je
pop
adc
jbe
push
push
(bad)
(bad)
inc
fsub
mov
push
mov
jns
adc
and
sbb
cmp
(bad)
out
pop
mov
inc
rcl
jnp
cmc
loope
test
and
dec
xor
sbb
or
add
sbb
or
or
pop
mul
jnp
mov
mov
push
(bad)
pop
push
jae
mov
add
adc
mov
sub
mov
and
push
add
cli
fcomip
jo
jp
fild
or
fild
inc
dec
in
xlat
ss
pop
dec
das
sub
daa
push
callw
sub
loopne
and
mov
push
rol
or
mov
xor
mov
sbb
dec
xchg
push
dec
dec
dec
inc
dec
data16
xchg
add
cmp
enter
mov
or
cs
add
in
or
or
cmovo
call
enter
(bad)
retf
inc
icebp
shl
cs
std
popf
push
(bad)
hlt
adc
pop
adc
sub
and
inc
loope
push
adc
jle
inc
sti
jmp
test
sbb
aam
and
retf
stos
mov
cmp
fwait
add
add
add
mov
pop
cmps
aaa
rol
or
inc
loop
movs
jno
add
in
retf
inc
sub
cmp
sar
test
call
add
cdq
movs
mov
dec
lock
int3
jbe
sbb
arpl
adc
sbb
ret
cmp
cmps
imul
inc
call
sub
mov
inc
test
fcomp
push
das
push
jb
fsub
nop
jae
ror
pushf
inc
mov
nop
dec
or
clc
nop
or
pop
sbb
fist
neg
int
in
outs
out
cs
sub
mov
sbb
dec
sahf
xor
inc
in
jns
shl
jnp
mov
fild
jns
mov
into
jge
out
inc
test
int3
push
adc
or
jnp
pop
fdivrp
push
pusha
aaa
ss
pop
push
push
das
sub
(bad)
es
pop
xlat
pop
xchg
ror
xchg
jne
xchg
add
clc
(bad)
out
cmps
stc
fimul
ds
push
jl
mov
dec
je
stos
inc
retf
xchg
xor
js
inc
in
ret
sbb
bound
rcl
cmp
sbb
xor
je
outs
or
test
add
rcr
loopne
cli
push
push
ja
aad
fcomip
lea
pop
pop
xlat
jmp
stc
repz
inc
dec
push
push
fdiv
sbb
jo
retf
lods
aas
pop
sub
mov
add
retf
dec
(bad)
rcl
cdq
fadd
pop
sbb
das
mov
ss
movs
cmps
mov
and
xlat
aaa
mov
rcr
add
push
fist
push
and
inc
cmp
add
and
mov
test
ficom
stos
pop
aam
outs
inc
push
ins
into
xchg
icebp
push
or
ret
inc
add
in
dec
add
cmp
push
add
or
sbb
pop
aam
nop
mov
repz
int3
loopne
or
sbb
cmp
repz
pop
pop
pusha
fs
repz
test
add
lds
pop
push
(bad)
cmp
mov
mov
xchg
push
repnz
mov
add
aaa
inc
ret
xor
je
int
pop
loopne
mov
inc
(bad)
fs
push
(bad)
and
movs
mov
sbb
fmul
add
mov
push
sub
iret
xchg
hlt
ret
pop
xchg
pop
mov
movs
add
inc
pop
mov
nop
clc
add
cwde
mov
cdq
push
push
push
add
add
lea
push
repnz
push
(bad)
cmp
pop
pop
outs
sbb
or
xchg
xchg
stos
jl
jg
sar
je
xchg
mov
jle
mov
fdiv
jae
pop
xchg
test
loope
lock
inc
mov
adc
add
mov
retf
jl
sbb
jne
in
scas
lock
sar
aas
push
or
ja
imul
out
inc
xor
mov
loopne
jae
mov
ds
into
add
jmp
movs
inc
mov
lods
cmps
and
jmp
xor
and
dec
dec
sub
aam
pop
loope
dec
inc
pop
push
xor
and
sub
sub
push
outs
and
and
or
push
pusha
loop
movs
pop
loopne
mov
mov
dec
add
adc
sbb
pop
aad
into
dec
out
int3
ds
sbb
ror
and
arpl
cmps
cmp
out
aaa
pop
mov
adc
mov
pop
add
push
cmp
jle
test
sub
jle
or
xor
pop
add
inc
pop
mov
movs
out
add
aas
cmp
(bad)
jne
pop
cmp
push
mov
adc
mov
loope
(bad)
adc
pop
sub
pop
lock
mov
enter
sub
add
mov
adc
push
or
pop
repnz
cmp
clc
(bad)
mov
js
cmp
push
and
xor
ficom
cmp
aad
retf
sbb
cmp
gs
inc
push
fstp
mov
push
outs
mov
ret
out
ins
imul
fcomp
in
hlt
inc
dec
aas
push
push
lods
mov
adc
mov
daa
sbb
data16
sqrtps
push
mov
xchg
mov
addr16
ficom
pushf
mov
in
movs
test
shl
push
ret
sub
fadd
es
cwde
cmp
int
pop
or
imul
enter
cmp
je
dec
adc
sar
xchg
test
or
jle
test
xor
jge
hlt
gs
xor
imul
mov
cmp
dec
imul
retf
cmps
jecxz
movs
inc
sti
daa
sti
xor
ds
rol
dec
neg
outs
fsubr
push
fs
mov
or
jp
xchg
clc
dec
stos
xchg
out
mov
stos
loope
jle
xor
cmp
push
test
shl
js
or
sub
adc
xchg
xchg
mov
test
adc
jle
out
ret
adc
pop
dec
mov
inc
pop
cmp
js
cld
je
lds
adc
lds
outs
sub
dec
pusha
rol
mov
or
mov
dec
xchg
iret
mov
jg
push
pop
cmp
mov
cmp
test
jmp
or
pop
test
add
mov
mov
aam
mov
lds
mov
pop
cmp
scas
pop
out
adc
aad
pusha
call
sbb
int
sbb
fs
(bad)
cmp
inc
xor
test
jb
jb
jg
and
pop
rol
jl
xor
dec
iret
je
jne
ret
or
mov
int
aad
test
outs
cmps
nop
sub
mov
jg
lods
mov
mov
cmp
popf
xchg
push
mov
mov
sub
mov
mov
icebp
test
mov
dec
ficom
arpl
inc
pop
(bad)
and
lods
jnp
(bad)
movs
xor
xchg
pop
push
shr
sbb
dec
push
out
xor
lock
inc
xchg
fldenv
mov
test
xor
out
inc
les
jmp
sub
test
or
stos
sbb
push
fidiv
mov
add
sbb
pop
or
test
pop
and
aas
dec
push
and
pop
jne
xchg
rol
push
or
push
loop
lea
(bad)
pusha
inc
add
add
jne
inc
jge
xlat
cmp
mov
or
xchg
push
pop
xchg
xor
mov
es
test
movs
ins
jmp
outs
pop
xchg
loopne
test
inc
dec
gs
and
dec
gs
cmp
shl
call
daa
dec
outs
arpl
stc
mov
outs
jg
add
rcr
and
(bad)
aaa
cmp
jae
ins
adc
push
adc
or
dec
pop
sbb
jae
loope
jae
sbb
sahf
mov
cmps
cmp
adc
js
test
cmp
mov
xor
jl
or
ins
jecxz
jg
or
pop
xchg
or
or
pop
jle
cs
ss
pop
adc
pop
ins
jecxz
dec
(bad)
push
stc
push
mov
ja
jge
aaa
or
shr
or
mov
enter
xchg
pop
pminsw
xor
push
mov
movs
adc
lahf
and
lahf
outs
inc
adc
or
or
jae
dec
fld
dec
lds
pop
mov
pop
enter
in
or
or
fbstp
es
fcmovnu
mov
gs
repnz
sbb
ds
inc
out
in
and
movs
btc
or
cmp
dec
push
sbb
or
cli
pop
push
imul
fisub
test
cs
inc
xor
es
sub
xor
jae
mov
ins
or
dec
mov
enter
popa
js
pop
adc
out
dec
cmp
pop
sub
pop
call
aam
cmps
jle
pusha
xor
dec
sahf
cli
fisub
cmova
push
stos
dec
out
cli
ins
fstp
push
adc
push
pop
xchg
outs
dec
out
jge
or
data16
loopne
mov
jnp
data16
pop
bound
aam
mov
jl
xchg
je
outs
dec
fs
outs
shr
or
jno
enter
mov
sub
push
call
pop
push
mov
stc
adc
cwde
stos
loopne
sub
repz
mov
ss
int
out
sar
push
adc
inc
out
jg
repnz
add
in
inc
(bad)
cmp
adc
jnp
jnp
cmp
int3
adc
jo
adc
loope
lds
and
nop
jmp
jmp
cmp
pop
xor
inc
or
call
sub
or
enter
dec
or
or
in
or
lock
movs
neg
dec
pusha
sbb
mov
icebp
jno
inc
mov
in
bound
or
hlt
mov
xor
movs
not
lods
or
push
mov
jae
fmul
or
add
or
cmovg
pop
imul
or
movs
sbb
out
mov
das
mov
out
pop
or
pop
daa
inc
or
outs
or
mov
and
inc
xchg
fisubr
pop
jo
aaa
jb
xor
out
data16
xchg
ins
sub
cmp
push
in
or
xchg
xchg
ins
xchg
outs
jo
sahf
ror
inc
push
xchg
mov
mov
pop
es
outs
jne
sbb
jnp
hlt
push
in
push
adc
xchg
sub
dec
mov
sahf
push
or
add
fild
popa
push
mov
or
addr16
xchg
jno
pop
adc
adc
data16
or
cmp
int
outs
sbb
inc
xor
pcmpgtw
cmp
(bad)
cmp
imul
add
(bad)
out
mov
in
sar
fs
jecxz
ins
mov
ins
push
ss
jbe
jns
adc
int3
jge
sbb
outs
lahf
iret
sbb
add
jo
fadd
pop
jno
xchg
inc
sti
or
pop
or
dec
push
ds
add
pop
test
xchg
fld
inc
pop
xchg
dec
fst
imul
or
iret
test
in
test
or
xor
mov
rcr
xchg
not
aam
xchg
adc
inc
mov
jle
mov
js
and
push
call
add
addr16
push
push
dec
lea
push
dec
cs
and
add
ja
(bad)
mov
or
test
pop
out
add
mov
aam
mov
jge
popa
dec
cld
pop
xchg
mov
inc
stos
inc
outs
outs
jmp
jmp
in
push
loopne
cmps
pop
es
clc
test
inc
sbb
sbb
pushf
sbb
aas
inc
add
ror
sbb
les
sbb
jo
push
inc
test
seto
and
and
mov
outs
dec
dec
mov
and
inc
(bad)
pop
push
and
sub
inc
add
inc
push
in
les
inc
mov
sbb
int3
pop
inc
lods
dec
retf
iret
data16
sbb
pop
and
mov
nop
inc
pop
jo
add
neg
cmp
sahf
ja
push
or
push
push
cmp
cmp
mov
xchg
aaa
add
mov
jmp
adc
pop
add
add
jmp
add
add
add
add
adc
push
cs
int
inc
mov
push
mov
mov
(bad)
(bad)
(bad)
cmp
add
adc
sbb
adc
or
push
(bad)
(bad)
push
push
jmp
jmp
adc
scas
(bad)
in
int
int3
jmp
inc
or
xchg
int
fnstcw
cmp
jo
dec
pusha
cmp
lods
in
dec
push
fistp
iret
in
jo
cld
xchg
dec
push
push
sbb
addr16
xor
inc
push
push
xor
and
ds
push
push
aam
push
mov
loopne
fdiv
sub
mov
es
push
pop
push
sbb
fldcw
push
je
daa
inc
xchg
inc
mov
fild
dec
inc
add
and
(bad)
ja
in
cwde
bound
pop
push
test
lahf
data16
das
in
pop
test
inc
pusha
mov
dec
loopne
mov
lea
imul
add
repnz
ficom
adc
pop
or
pop
loope
add
jmp
in
pushf
xlat
adc
sbb
loope
retf
or
pop
(bad)
mov
sub
inc
adc
xor
xor
xor
pop
cmp
dec
pop
nop
call
add
cmc
retf
retf
outs
ds
loopne
and
adc
or
popa
inc
sahf
aaa
movs
mov
loope
push
xchg
lahf
dec
call
add
ret
xor
daa
int3
popa
loopne
clc
ror
xor
adc
repz
arpl
cmp
inc
add
jne
jno
ret
add
out
sub
(bad)
xor
dec
out
ficom
(bad)
and
pop
mov
or
pop
push
jge
leave
xchg
inc
hlt
cs
repz
(bad)
and
add
and
xor
fdiv
adc
sbb
sbb
mov
push
cld
xor
push
sub
mov
push
jecxz
push
jo
sbb
push
sbb
imul
call
mov
dec
inc
sbb
or
loope
lock
(bad)
jmp
scas
pop
sbb
mov
enter
inc
pop
test
test
pop
and
push
add
cwde
mov
pop
test
div
inc
test
inc
fstp
push
pop
push
enter
shl
cmps
stos
call
and
push
push
jae
imul
sub
rcl
mov
push
and
xor
lahf
outs
mov
sbb
popf
push
inc
gs
xor
mov
and
jb
dec
jb
test
inc
pop
(bad)
pusha
and
push
mov
push
clc
(bad)
xor
inc
pop
mov
mov
xor
ror
adc
or
add
mov
in
xor
xor
or
mov
inc
repz
test
add
movs
xlat
inc
fwait
push
sub
or
xor
cdq
movs
stc
mov
xchg
adc
hlt
icebp
jmp
mov
sub
dec
sub
adc
call
rol
xor
xchg
pop
xor
mov
aam
xlat
cmps
test
test
mov
dec
cmp
das
push
ret
fwait
pop
jb
or
ins
push
pop
sub
xchg
sbb
or
js
dec
test
push
ins
jae
data16
iret
test
mov
(bad)
mov
inc
out
sub
xor
push
outs
jo
jo
push
adc
loop
xor
xor
mov
(bad)
xor
out
add
and
xchg
jo
sti
icebp
aas
int
add
sub
xor
out
push
sbb
dec
loopne
out
cdq
int3
test
ss
xchg
sbb
cld
cmp
cmp
and
cmp
mov
jl
xor
push
mov
fcom
nop
out
imul
ret
movs
push
adc
sub
mov
cmp
test
in
xchg
pop
pop
cmp
and
dec
adc
ret
mov
mov
out
jae
cmp
xchg
mov
sbb
aad
cmp
and
push
push
jbe
retf
xchg
xor
std
mov
xlat
imul
pop
test
fcom
and
call
xor
dec
inc
ins
sub
dec
leave
or
xchg
aaa
adc
jo
fmul
sbb
or
mov
dec
add
push
pop
sbb
lods
in
add
push
aaa
pop
pop
repnz
add
aaa
and
inc
test
pop
inc
inc
jbe
enter
(bad)
fcomp
inc
cmp
call
je
test
out
inc
sahf
sub
mov
inc
(bad)
adc
cld
in
mov
mov
add
sub
sar
dec
lock
nop
or
dec
xchg
and
push
jne
sbb
fcmove
sar
sub
add
or
(bad)
ret
dec
add
or
mov
add
mov
push
test
lock
test
inc
inc
mov
pop
enter
and
dec
repnz
gs
outs
cld
inc
loopne
sti
add
pop
push
lods
sti
jae
xchg
mov
dec
call
jo
sub
test
call
(bad)
enter
fcom
jns
ror
xchg
loopne
loopne
or
or
mov
adc
inc
cmp
add
add
das
dec
inc
inc
or
repnz
adc
popf
or
push
dec
adc
push
xchg
lahf
scas
push
push
adc
inc
push
push
pop
push
add
pop
xchg
std
pop
pop
nop
out
scas
and
rol
test
pop
in
adc
jns
pop
add
in
js
sub
add
pop
ret
inc
adc
lahf
xchg
loopne
sahf
xlat
loope
dec
lock
lds
icebp
aam
push
or
cli
outs
fiadd
pop
test
loopne
push
push
mov
rol
cmp
arpl
stos
nop
cmc
fbld
mov
mov
mov
imul
xor
pushw
mov
clc
int3
addr16
fs
mov
(bad)
or
(bad)
popa
ss
pop
sub
pop
adc
or
push
mov
adc
add
mov
sbb
(bad)
(bad)
cmp
push
pop
lea
mov
scas
scas
adc
pop
std
iret
cmp
imul
push
je
adc
les
cmp
and
dec
cli
mov
xor
push
ds
or
enter
jl
loopne
mov
(bad)
and
add
adc
jns
xlat
push
mov
xchg
push
(bad)
xor
mov
nop
addr16
mov
stos
adc
and
out
xchg
clc
push
mov
pop
mov
mov
dec
arpl
jne
stos
out
sbb
test
add
ins
mov
call
imul
fmul
mov
push
xor
dec
push
push
sub
stc
mov
je
sub
add
add
cmp
or
push
or
mov
and
push
ja
adc
dec
xchg
jle
add
xchg
outs
sub
and
clc
jae
hlt
jle
js
mov
push
(bad)
sbb
mov
test
mov
in
movs
loopne
fldcw
add
mov
dec
push
and
xchg
rcl
ds
pop
dec
data16
pminsw
faddp
out
or
sub
or
xor
jne
dec
inc
adc
aam
ja
xor
xchg
cmp
je
mov
xchg
hlt
push
jno
les
or
mov
bound
in
adc
mov
push
adc
pop
add
cmp
sub
add
je
mov
outs
ret
mov
shl
push
adc
cmp
adc
xchg
add
jbe
mov
cmp
sub
or
movs
sub
add
lea
repz
and
jecxz
mov
pop
push
(bad)
xchg
outs
pop
xchg
sub
sbb
push
loope
mov
mov
fs
(bad)
jmp
pop
xor
pop
in
addr16
loopne
mov
add
inc
sbb
call
into
add
or
adc
pop
sahf
retf
or
or
xchg
cmp
adc
inc
data16
jge
add
inc
cmps
inc
push
inc
add
fisub
nop
push
je
movs
sbb
inc
adc
imul
add
mov
dec
add
add
xchg
dec
pop
daa
inc
xchg
aam
stc
sub
or
cld
push
fstp
jl
push
fld
dec
cmc
or
je
push
mov
xchg
fucomip
add
in
jno
test
sbb
add
adc
add
test
xor
sub
movs
fisttp
add
and
fcomp
or
mov
inc
or
xchg
movs
mov
add
data16
jb
ror
sar
fistp
inc
or
inc
sbb
or
or
add
or
push
xchg
xchg
mov
ds
push
inc
add
mov
xor
pop
clc
sbb
loope
sub
cmp
cld
xor
ss
out
or
mov
push
shl
pop
cmp
sbb
inc
ja
test
pop
mov
push
bound
clc
push
adc
das
jne
add
push
das
mov
cld
(bad)
jbe
sub
push
cmp
inc
sub
add
and
push
cmc
neg
scas
and
mov
jne
dec
pop
sti
lds
or
push
inc
add
sbb
inc
or
(bad)
adc
cmp
add
sub
mov
dec
in
sub
mov
sub
nop
inc
dec
test
ret
push
cmp
retf
xlat
dec
shr
pop
dec
mov
rol
xchg
in
adc
dec
xchg
cmp
fdiv
cmp
cmp
sbb
call
in
pop
jp
mov
cmc
sub
inc
call
push
not
adc
(bad)
in
pop
adc
fdivr
mov
adc
jbe
test
mov
push
or
dec
test
pop
sub
pop
xchg
clc
mov
xchg
sbb
ficom
adc
push
mov
inc
callw
adc
fs
fadd
js
pop
bound
xchg
sar
mov
mov
hlt
neg
jmp
arpl
ins
pusha
sbb
ret
daa
mov
loop
xor
push
push
test
and
push
pop
hlt
test
es
and
push
mov
(bad)
dec
pushf
int
pop
stos
ins
pop
mov
xchg
(bad)
jmp
ins
push
cmps
jbe
inc
inc
iret
xor
sbb
cs
not
in
xchg
mov
setl
push
(bad)
in
inc
cdq
push
add
aas
loop
mov
inc
push
xlat
(bad)
jecxz
mov
or
mov
mov
mov
out
add
or
fisttp
pop
adc
or
ds
nop
xchg
or
xor
or
jmp
or
cmp
add
push
dec
fld
cmp
xlat
adc
jmp
inc
inc
mov
icebp
mov
cmp
cmp
test
sar
retf
mov
dec
fwait
jmp
fsubr
(bad)
dec
mov
pusha
dec
mov
push
push
xor
inc
mov
push
je
aas
sub
sbb
jmp
push
sub
jae
push
jmp
sub
mov
dec
adc
pop
adc
fmul
(bad)
gs
pop
push
mov
sub
je
ss
jmp
jl
vmovntps
mov
and
add
jmp
add
or
jmp
fmul
push
sub
sahf
test
xchg
xchg
shl
mov
xchg
nop
add
mov
les
mov
mov
add
xchg
pop
jle
push
dec
inc
dec
sbb
fs
push
push
and
xor
push
pop
sbb
mov
nop
sbb
enter
fwait
mov
ins
push
and
and
inc
push
and
dec
pop
and
or
jnp
inc
ror
cdq
mov
add
call
and
sub
ret
pop
sub
mov
ds
inc
xchg
dec
fnstcw
mov
or
(bad)
cwde
call
ins
leave
push
(bad)
pushf
push
add
sub
xor
dec
sbb
and
jle
fsubrp
push
test
mov
push
add
jmp
mov
bound
fidivr
je
pop
adc
inc
js
dec
fadd
das
xchg
std
ret
enter
js
in
sbb
adc
inc
dec
mov
and
mov
cmp
outs
ins
shl
or
cmp
lds
push
nop
and
sbb
xor
pusha
outs
pop
ds
js
sub
cmp
jmp
leave
jge
adc
xor
add
cmp
or
mov
daa
xchg
les
lea
pusha
mov
push
(bad)
(bad)
cld
pop
push
stos
imul
push
sbb
lea
and
push
adc
jmp
push
inc
push
(bad)
std
test
sub
xor
and
inc
push
sbb
cmp
xor
int3
add
sub
sub
imul
shl
xlat
iret
je
rcl
lea
push
mov
shl
or
mov
push
(bad)
and
push
mov
push
lods
call
jp
clc
sbb
add
jae
inc
fimul
and
pop
jecxz
push
push
sbb
adc
jmp
fwait
inc
and
push
mov
jmp
not
mov
xor
or
mov
fimul
ret
xchg
int3
mov
fisub
int3
push
mov
add
jecxz
add
ret
or
mov
popa
outs
xchg
mov
xchg
cwde
mov
mov
or
mov
mov
fimul
rep
mov
sub
mov
dec
and
sbb
inc
(bad)
adc
or
shl
xchg
cmp
xchg
add
dec
or
or
add
stos
or
sbb
or
pushf
fsub
icebp
inc
pop
add
pusha
frstor
push
test
je
xor
mov
adc
pop
mov
mov
jo
add
push
adc
aad
sub
xor
cmp
loopne
test
push
mov
mov
ins
imul
pop
push
inc
(bad)
adc
mov
pop
sub
add
xor
jecxz
lea
sbb
sub
outs
xor
ds
movs
rol
push
pop
xor
or
hlt
jg
or
jno
pop
sbb
(bad)
jbe
add
shr
jns
nop
adc
clc
and
ja
xchg
pop
je
mov
lods
cmp
sbb
rsm
xor
loopne
or
loope
xor
ja
and
inc
pop
pop
or
adc
sbb
cmp
inc
leave
push
jnp
push
out
retf
inc
repz
sbb
in
mov
or
or
aad
(bad)
adc
and
pop
dec
sbb
xor
icebp
outs
(bad)
add
cli
adc
out
rcl
(bad)
xchg
call
adc
inc
pusha
xchg
inc
and
es
rcl
xchg
clc
cwde
add
loopne
cs
sub
nop
xlat
mov
rol
mov
loopne
lock
popf
add
das
sbb
retf
addr16
push
je
pop
lea
movs
pop
mov
data16
push
adc
out
ins
adc
push
push
lea
push
mov
push
sbb
jle
icebp
hlt
push
loop
fcmovbe
add
dec
mov
cmp
jge
sbb
out
sbb
pop
and
mov
pop
push
jle
mov
(bad)
dec
ja
mov
inc
fcomip
xor
mov
sbb
outs
sbb
xchg
enter
mov
sub
mov
xchg
push
or
inc
out
lods
nop
mov
xchg
sub
adc
aam
stos
cmp
push
push
enter
mov
ins
je
scas
ins
in
or
xchg
in
add
and
ret
xchg
sub
add
ret
sbb
xor
jl
in
adc
and
test
cwde
je
pop
pop
dec
je
mov
add
fnsave
rcl
test
shr
lods
xlat
pop
loope
add
push
rcr
call
(bad)
cmp
or
enter
ret
and
mov
jns
or
clc
sbb
sbb
stos
js
inc
or
dec
enter
xchg
dec
aas
out
fcomp
enter
loope
sbb
mov
adc
enter
inc
sbb
fdiv
or
mov
mov
lea
sub
xor
mov
mov
pop
sub
pop
out
add
mov
push
(bad)
aam
or
gs
xchg
xor
pop
adc
mov
sbb
add
xlat
(bad)
outs
pop
mov
and
sahf
fisttp
mov
sti
retf
sbb
add
jecxz
mov
and
mov
or
jp
and
pop
and
ror
daa
mov
test
sbb
xchg
sbb
out
dec
mov
add
adc
sub
and
shr
pop
push
ins
clc
imul
and
lea
repz
and
jl
mov
out
sub
jae
jbe
outs
in
inc
mov
in
lea
and
dec
jo
lds
repz
icebp
test
and
mov
mov
daa
fild
xchg
test
mov
call
adc
ins
or
pop
cld
mov
dec
cmp
and
fcom
and
jge
inc
mov
sbb
aas
nop
mov
mov
adc
lods
cld
add
adc
sahf
mov
rcr
cmp
jmp
cmp
mov
sub
sub
add
add
inc
js
outs
repnz
mov
out
cmp
es
xchg
push
in
push
aaa
adc
enter
pop
or
enter
pop
cmp
cmp
push
jp
inc
push
jge
stos
add
pop
sbb
adc
mov
out
leave
mov
add
fs
push
jmp
test
fsubr
stos
fwait
cmps
inc
jns
jmp
inc
pop
mov
inc
push
ret
aam
and
inc
pop
(bad)
nop
ret
cmp
in
lea
mov
inc
add
pushf
sbb
inc
mov
out
pop
aad
repnz
pop
push
push
lock
pop
rol
dec
pop
cmps
xchg
sbb
popf
push
popa
add
add
or
pop
pop
mov
lods
popa
dec
xchg
rol
pop
(bad)
xchg
xor
mov
neg
inc
inc
cs
push
movs
(bad)
adc
inc
fs
jb
add
pop
sbb
daa
mov
dec
sti
lds
mov
cmp
(bad)
aam
retf
pop
das
push
mov
pop
or
mov
outs
out
pop
or
mov
das
retf
outs
mov
xchg
jnp
in
sub
add
jne
jb
das
jp
jle
jne
stos
mov
inc
fs
mov
stc
pop
and
scas
xchg
or
test
in
in
jmp
cmp
xor
shl
pop
cmp
js
rcl
(bad)
xchg
rcr
arpl
inc
dec
push
loop
(bad)
clc
cmps
bound
dec
jb
sub
outs
adc
lea
(bad)
jbe
fld
push
add
mov
mov
aas
pop
jo
dec
cmps
pop
nop
sbb
cmp
je
adc
push
dec
rol
je
fmul
pop
push
and
les
sbb
nop
or
xchg
add
pop
adc
shl
mov
loop
enter
loopne
fdivr
jo
sar
add
and
push
adc
int3
mov
ins
leave
add
and
inc
rcr
inc
push
cli
add
enter
adc
push
mov
ins
test
iret
nop
mov
mov
pushf
and
ret
mov
sub
lahf
pusha
sbb
sub
mov
mov
and
add
sub
(bad)
jmp
test
or
mov
jno
dec
pop
call
inc
aas
inc
cmp
inc
es
and
push
test
add
rol
and
pop
push
and
arpl
movs
iret
les
dec
adc
xchg
xor
enter
inc
push
inc
jle
add
jmp
jo
and
rcr
in
rol
jb
mul
xor
sbb
mov
jmp
test
xor
push
jecxz
ja
and
xchg
bound
add
arpl
inc
sbb
pop
ja
(bad)
or
ins
push
(bad)
lods
and
imul
adc
ds
fcom
ss
leave
fwait
ret
fld
cmp
xor
push
hlt
mov
sbb
shl
cwde
stos
jl
adc
xchg
cmp
mov
push
js
ret
outs
sbb
ja
xor
sar
add
xchg
adc
jo
es
adc
xchg
or
daa
mov
cmp
push
ds
leave
gs
enter
adc
inc
arpl
in
push
or
mov
aaa
sahf
out
(bad)
aam
mov
cmp
sub
int
loope
or
loop
dec
or
push
jmp
mov
mov
iret
sti
cmps
inc
mov
mov
push
jle
sub
mov
popa
inc
or
mov
sub
xor
movs
or
dec
xchg
icebp
js
cs
dec
clc
jne
add
or
test
in
pop
(bad)
lock
sbb
iret
pop
pop
push
(bad)
push
stos
inc
pop
loope
mov
pop
pusha
mov
adc
add
sub
and
sub
cmp
ret
dec
add
sbb
ja
je
xchg
push
cmp
inc
(bad)
dec
js
sub
inc
arpl
je
shr
push
xor
ret
loope
mov
or
xchg
ss
jl
mov
loopne
mov
mov
int
push
scas
lea
pushf
and
jae
mov
jle
test
inc
mov
jmp
and
les
cmp
repnz
pop
es
out
pop
push
shl
push
cmp
in
xor
stc
push
int3
lock
add
add
and
dec
push
pop
xchg
pusha
mov
outs
and
jo
jp
pushf
dec
rcr
or
popf
(bad)
(bad)
aad
sbb
iret
jnp
mov
adc
(bad)
inc
sbb
imul
push
outs
push
scas
test
add
inc
jg
je
ins
xchg
mov
or
and
fmul
inc
mov
lahf
mov
sbb
jmp
jg
cmp
call
pop
jne
mov
push
rcr
xchg
pop
les
aad
in
cmps
sub
push
cmp
sbb
and
mov
cmp
pop
jbe
imul
xchg
push
cwde
repz
mov
push
inc
out
mov
fadd
lahf
cmps
adc
sub
or
xchg
inc
test
xor
jecxz
movups
test
sti
mov
dec
sbb
inc
nop
(bad)
xor
bound
add
dec
imul
jmp
sar
mov
mov
ins
out
push
aam
jnp
cmp
or
inc
imul
movs
ror
jb
pop
test
cmp
inc
sbb
xchg
jmp
xor
push
xchg
xchg
out
sbb
out
int3
stos
and
mov
add
mov
push
push
cmp
xor
je
ss
jne
inc
loope
cdq
movs
sbb
inc
push
xor
sbb
hlt
nop
add
pop
push
out
arpl
pusha
aad
adc
imul
inc
sub
mov
popa
lock
daa
xor
pop
fcmovb
mov
inc
dec
or
dec
add
adc
sub
lock
inc
dec
inc
js
cdq
shl
cmp
or
data16
and
xchg
das
and
or
cmp
or
mov
mov
movs
ja
adc
inc
ss
jbe
sbb
je
scas
jne
dec
fisttp
xchg
cmps
sbb
test
and
sub
clc
adc
sar
jg
mov
cmovs
ss
cwde
xchg
xor
inc
xor
div
push
sahf
sbb
pop
push
or
es
xchg
or
jecxz
or
xor
or
lea
xchg
jle
add
jp
push
popf
ds
push
ret
in
dec
movs
jnp
jge
add
xchg
cmp
pop
add
ins
and
cmps
out
sbb
inc
xor
dec
sub
inc
or
inc
add
fsincos
ins
loope
out
fs
ret
test
inc
mov
sub
jbe
dec
jecxz
mov
add
push
sub
pop
inc
xchg
or
sbb
inc
mov
sti
mov
fst
ret
push
dec
jl
mov
sbb
or
(bad)
cbw
add
arpl
pop
icebp
sar
mov
add
and
inc
call
jle
pop
and
or
pop
push
sub
xchg
xor
rcl
cdq
mov
xchg
outs
lds
cmp
daa
push
fild
das
add
dec
sbb
lds
(bad)
dec
fistp
pop
push
mov
push
pop
mov
loop
loope
clc
aam
bound
sub
mov
mov
xchg
push
das
js
int3
aaa
mov
stos
add
cmps
mov
leave
das
jne
add
jmp
jp
dec
adc
adc
mov
push
xor
jo
or
pop
push
repz
ins
jmp
test
sbb
xor
mov
push
adc
cld
sbb
xchg
dec
cmp
sub
jl
les
test
in
cmp
std
adc
xor
inc
inc
cld
add
inc
push
pop
adc
cmp
je
mov
mov
and
lahf
and
imul
iret
jmp
sbb
xchg
outs
daa
mov
pop
push
(bad)
sar
movs
and
push
rcr
push
pop
lahf
popf
jecxz
rol
das
and
xlat
jo
aaa
cmp
xchg
movmskps
add
outs
sbb
add
add
gs
(bad)
out
mov
enter
cmp
and
js
and
inc
arpl
adc
xchg
in
jle
cld
inc
mov
hlt
or
or
popf
sbb
dec
dec
and
scas
repz
mov
add
aas
test
fcomp
mov
pusha
sub
dec
mov
adc
pop
inc
and
fld
retf
sub
mov
or
jmp
adc
pop
or
xchg
cdq
js
pop
push
in
push
and
fnstenv
mov
scas
ucomiss
mov
ja
add
lahf
add
xchg
add
adc
cld
sahf
das
mov
jp
cmp
nop
pop
icebp
and
push
mov
mov
and
sbb
push
fldenv
add
arpl
fimul
movs
jne
call
rol
inc
inc
xlat
xor
pop
cmp
lock
call
enter
jo
lds
push
and
push
push
scas
lods
call
into
mov
fcomp
stos
adc
push
daa
add
loop
inc
cmp
jmp
std
adc
cwde
inc
mov
mov
xor
lods
jo
cmp
(bad)
out
popa
cld
popf
cmp
fld
fdiv
push
or
lock
sbb
or
movs
jmp
xchg
(bad)
adc
dec
arpl
aaa
or
adc
jbe
push
mov
push
arpl
add
imul
cwde
mov
std
or
pop
inc
test
cmc
pop
add
push
mov
ret
mov
add
je
cmp
push
in
in
test
jnp
jmp
lock
sub
rcr
int3
add
sbb
pavgb
ins
jl
lahf
popf
xor
mov
out
fbstp
xor
rcl
adc
aam
movs
jmp
push
push
jbe
cmp
jl
(bad)
and
loope
into
cmp
iret
dec
sbb
(bad)
and
inc
(bad)
mov
jmp
xchg
mov
xor
pop
push
sbb
add
cmp
push
add
icebp
rcr
sub
cmp
sub
cmp
aam
jo
add
sub
add
mov
xor
jle
fidiv
std
daa
test
jne
mov
mov
es
out
cmp
mov
push
fimul
sub
push
push
sbb
mov
and
sub
cmc
jmp
mov
pop
and
daa
sbb
cmps
push
inc
inc
(bad)
(bad)
mov
sub
in
retf
ret
div
jp
add
shr
and
add
cmps
inc
mov
push
push
inc
ja
cs
or
outs
mov
jo
cs
push
mov
push
cmp
sbb
xor
test
cmp
mov
mov
adc
ins
mov
jne
xor
push
push
outs
sbb
cmps
pop
and
sbb
mov
sbb
jne
loopne
jno
sub
pusha
aaa
mov
push
fisttp
pop
push
and
cmp
sub
dec
mov
add
push
cmp
data16
mul
push
cmp
jno
push
add
sub
sub
cmp
sti
and
or
add
gs
add
(bad)
sbb
xlat
es
adc
add
(bad)
sub
pop
imul
inc
push
mov
movs
inc
cvtps2pi
jo
xor
mov
inc
cmp
pusha
or
adc
add
push
dec
mov
mov
icebp
add
shl
pusha
cmps
inc
mov
dec
jnp
adc
mov
pop
lahf
inc
js
pop
(bad)
fsub
int3
cmp
mov
mov
and
data16
push
adc
cld
mov
sub
pop
or
dec
push
iret
aas
sub
gs
jmp
mov
pop
imul
sub
ss
cmp
sbb
push
jecxz
pusha
pusha
sub
pusha
or
and
inc
xor
xchg
test
push
adc
in
fisub
pop
adc
jmp
rcr
imul
adc
div
shr
and
jne
adc
dec
push
mov
dec
retf
fisub
das
mov
xor
add
dec
xchg
inc
test
and
mov
mov
fadd
fiadd
cmp
sub
cld
add
neg
fstp
xchg
inc
push
inc
dec
imul
or
data16
pop
sub
popf
xor
add
jmp
stos
ret
and
adc
jnp
popf
jbe
add
pop
(bad)
aas
add
push
or
add
sbb
das
jge
jmp
or
sub
and
or
ret
pusha
cmp
cmp
pop
push
jmp
add
lods
es
jl
ds
test
add
repz
movs
cmps
scas
sub
in
out
sahf
or
mov
pop
les
push
nop
sbb
jmp
sbb
pop
fsubr
mov
mov
xchg
add
out
sbb
mov
inc
rol
pop
pop
cld
in
or
je
pusha
cmps
xor
imul
push
test
cmp
pop
cmp
pop
add
dec
dec
inc
nop
push
xor
addr16
dec
(bad)
push
mov
int3
jo
adc
sub
push
loope
ret
xor
sub
dec
ds
mov
xchg
icebp
lock
imul
in
adc
imul
mov
push
and
sti
pop
ja
dec
mov
movs
push
xor
mov
cmp
push
cli
mov
ret
pop
and
sub
xor
sar
jecxz
push
push
movs
aad
sub
inc
dec
inc
pop
dec
pop
or
and
or
and
mov
xor
inc
cmp
jne
and
or
pop
pusha
xchg
ret
into
or
mov
dec
dec
stos
adc
cwde
ror
cmp
ins
lods
mov
je
lock
dec
test
mov
add
bound
sbb
fwait
inc
mov
add
push
sbb
inc
and
inc
inc
mov
mov
xlat
test
jbe
std
rcl
cmp
movs
mov
mov
xchg
into
sub
das
push
fistp
nop
gs
ret
les
clc
xor
inc
mov
jne
cmp
cdq
fidiv
stos
adc
aam
and
fs
inc
dec
cld
adc
sub
sub
adc
cmp
cwde
xor
sub
dec
dec
cmp
fiadd
or
ficom
sub
leave
aam
cmp
not
add
fnsetpm(287
mov
je
stos
add
and
push
pop
pop
clc
arpl
adc
add
jg
(bad)
int3
in
loope
mov
cmp
pop
sbb
dec
add
mov
mov
fsubr
xor
movs
mov
sbb
ds
mov
lods
inc
scas
sbb
lock
ret
pop
cmp
cwde
add
jnp
call
add
sub
movs
xor
and
lods
cmp
or
push
mov
js
mov
arpl
mov
sub
vphsubsw
pop
neg
cmp
and
pop
mov
mov
mov
mov
sub
xchg
adc
inc
scas
hlt
and
and
xor
fisubr
inc
jp
inc
cwde
int3
and
cmps
lock
sub
mov
fild
push
mov
mov
test
aaa
cmp
ret
and
push
mov
(bad)
sbb
mov
sbb
mov
jae
lock
dec
push
and
mov
sbb
aas
arpl
test
sub
imul
clc
mov
fadd
cmp
inc
inc
je
mov
imul
sar
xor
jecxz
stos
ins
xchg
dec
das
cmp
jns
(bad)
push
pusha
test
hlt
xchg
dec
sub
add
and
into
adc
pop
addr16
jno
mov
fiadd
std
add
adc
out
push
sub
bound
jo
ss
in
mov
push
xchg
push
mov
jo
(bad)
int3
xchg
mov
pop
push
dec
or
pop
add
movs
mov
xchg
dec
mov
mov
jns
imul
and
and
imul
aaa
clc
stos
cmp
dec
inc
inc
add
jp
pop
or
sub
or
lods
cmp
adc
dec
dec
je
xor
or
ins
mov
or
sbb
or
lds
cli
sbb
or
sar
add
test
int
in
dec
and
mov
fwait
test
inc
cmps
mov
mov
mov
test
fdivr
or
jo
cmp
mov
lods
xchg
pop
rcr
sub
nop
inc
mov
pusha
scas
push
js
mov
ins
add
pop
xor
xor
inc
xor
rcr
pushaw
inc
cbw
loopne
and
daa
jne
in
sbb
inc
pop
pop
xor
icebp
das
adc
dec
popf
lods
xchg
sbb
push
jne
and
pusha
add
ret
mov
div
mov
jmp
or
(bad)
dec
jp
add
sbb
and
cmp
retf
test
lods
sbb
outs
ins
sub
push
cmp
add
les
icebp
es
add
pop
push
push
push
sbb
dec
lock
shl
add
fwait
jmp
dec
cwde
inc
or
outs
or
aaa
add
sbb
xchg
or
dec
pop
retf
popf
dec
add
addr16
pop
cmp
lods
push
jne
fwait
add
shl
ins
data16
and
ret
or
mov
arpl
inc
in
scas
loope
dec
fild
mov
inc
mov
add
pop
adc
loopne
inc
sbb
add
mov
inc
xor
mov
loopne
lea
xchg
pop
clc
aas
jo
scas
or
addr16
mov
test
ins
dec
rol
cs
push
in
fmul
mov
jo
adc
pop
cmps
clc
es
xchg
jg
mov
inc
xchg
add
movs
loopne
jp
call
mov
mov
add
inc
push
adc
add
lea
inc
or
enter
jmp
mov
mov
xor
xchg
data16
xchg
imul
mov
xchg
ins
xchg
scas
pusha
inc
scas
outs
bound
xchg
jbe
sbb
addr16
jne
mov
sub
or
loopne
lea
jecxz
mov
inc
jbe
js
xchg
push
in
sbb
scas
ret
adc
jp
int3
sub
pop
push
add
lock
mov
ins
or
xor
(bad)
push
call
fsubr
fwait
inc
cwde
inc
xchg
stos
arpl
push
adc
mov
sub
xchg
xlat
ins
mov
cmps
call
adc
pop
stos
das
sub
or
movs
dec
jmp
pop
(bad)
mov
sub
and
iret
test
push
cwde
add
mov
jmp
mov
push
pop
ret
jno
add
pop
mov
add
daa
cmp
ins
sub
mov
addr16
inc
aaa
push
and
xchg
inc
cmp
cwde
nop
sbb
ror
hlt
mov
mov
jp
ret
es
add
loop
scas
sbb
leave
neg
lds
test
fild
inc
fild
bound
sub
mov
sub
or
leave
test
outs
cmp
js
shr
cmp
inc
adc
add
retfw
push
add
adc
or
outs
mov
add
data16
outs
adc
xchg
xchg
push
sbb
and
push
dec
ins
xor
pop
push
jne
push
mov
cmps
and
fld
mov
pop
fmul
nop
sbb
stc
fimul
sbb
xor
or
jne
mov
leave
xor
fisub
das
idiv
test
fcom
pop
add
in
and
imul
pop
adc
dec
and
lock
add
xor
ins
mov
inc
jl
cdq
pop
loope
pop
(bad)
test
dec
jb
lock
push
les
inc
adc
or
mov
sub
mov
stc
cmp
(bad)
in
add
pop
and
sahf
mov
jo
jp
add
push
cmp
push
mov
inc
je
dec
fs
mul
mov
adc
add
or
jnp
inc
or
push
push
and
sbb
add
inc
(bad)
and
not
and
sub
sbb
ins
lea
punpckhbw
icebp
mov
pop
mov
shr
mov
inc
dec
mov
or
adc
dec
jns
xor
add
xchg
test
fs
stos
xor
and
mov
jae
aas
cmp
loopne
lock
mov
and
gs
in
fdiv
and
lock
push
nop
lods
xlat
enter
jle
mov
mov
dec
inc
add
mov
ret
push
(bad)
jmp
jl
test
adc
adc
movs
sub
xchg
aam
in
jb
jmp
retf
(bad)
retf
jb
jl
sub
jbe
shl
ss
mov
lahf
cmps
jl
push
cli
daa
mov
sub
leave
jmp
sbb
xchg
imul
jo
xor
adc
aaa
bound
mov
pop
dec
xor
call
jg
or
add
leave
push
out
push
push
ins
scas
jmp
dec
ds
pop
pushf
add
xor
sub
sbb
xchg
xor
pop
push
int3
mov
or
add
pop
push
movs
adc
jnp
sub
sar
cwde
rol
(bad)
pusha
aaa
mov
sub
int3
xor
jmp
adc
into
mov
xor
add
push
sbb
jge
or
lods
fist
dec
push
js
shl
test
js
and
sub
fadd
inc
mov
scas
ret
mov
or
jge
xchg
jo
jmp
jne
xchg
cmp
loope
cld
ins
push
xchg
addr16
adc
add
cs
pop
add
das
in
adc
mov
cmp
rcl
inc
popf
inc
jge
adc
adc
adc
mov
into
retf
ss
sbb
add
fmul
aam
sub
push
dec
sub
mov
mov
rol
das
imul
jbe
lods
add
sahf
mov
bound
add
out
lods
in
fldl2e
test
rcl
add
nop
scas
rep
mov
call
sub
inc
lds
sbb
jmp
push
inc
lds
xor
outs
pop
and
pop
repz
data16
dec
loopne
test
pop
in
mov
xor
ins
sub
test
popa
xchg
ret
and
rcl
sbb
dec
loope
cmp
xchg
loopne
pop
dec
cmps
les
jmp
push
(bad)
or
jl
add
sub
js
cld
xchg
mov
adc
ss
bound
jle
push
inc
xchg
and
loope
push
pop
jnp
in
pop
aaa
sbb
xchg
push
pop
push
repnz
or
inc
stc
xchg
stos
sahf
push
add
sub
out
push
xchg
dec
pop
pusha
add
dec
mov
dec
movs
ins
lock
pop
test
ja
and
cmp
pusha
addr16
or
xchg
sub
mov
push
int
cmp
daa
mov
or
imul
sbb
cdq
pusha
arpl
and
adc
pop
dec
inc
div
gs
retfw
xchg
sbb
ins
sbb
jmp
(bad)
and
call
pushf
add
mov
adc
ret
pop
inc
inc
push
scas
cmp
scas
adc
pusha
sub
sbb
mov
jle
leave
and
hlt
por
pusha
pusha
xchg
xchg
inc
ss
or
ins
xor
and
jg
aaa
dec
mov
mov
test
inc
cmp
and
jbe
jg
add
jo
mov
inc
popaw
jmp
je
in
pop
inc
in
jmp
mov
add
and
in
xchg
loopne
cmps
sub
push
or
ret
sbb
aas
add
shl
push
imul
mov
push
or
push
data16
movs
jp
mov
sbb
pop
mov
shl
divps
add
fimul
mov
mov
jge
pusha
mov
pop
aad
int3
inc
out
xor
add
ret
and
push
pusha
xor
sahf
dec
jbe
add
cmovae
dec
popf
dec
mov
lea
xchg
adc
push
(bad)
jle
ja
sbb
pushf
sbb
push
aad
cmp
retf
dec
mov
aad
daa
xchg
jl
cmp
add
fdivr
cmp
data16
pop
cmps
test
test
std
cmp
cmps
shl
mov
xor
mov
lea
pop
mov
mov
loopne
test
mov
movs
push
cmp
and
sbb
push
sbb
xchg
nop
cmp
jno
and
lock
inc
inc
lock
neg
call
pop
sub
adc
pop
loopne
mov
sub
lock
sbb
(bad)
fwait
mov
inc
inc
sbb
pop
std
pop
push
xor
js
push
inc
mov
or
lock
cmc
dec
cmp
shl
retf
ja
pop
push
cwde
or
(bad)
int
xor
jecxz
shl
xor
mov
sub
xor
pop
imul
jo
ins
inc
shl
fisttp
shr
cmp
mov
mov
inc
rol
adc
nop
dec
or
(bad)
cld
int3
mov
push
sbb
jne
pop
(bad)
pop
ds
inc
dec
adc
push
clc
sbb
push
pop
mov
or
mov
loop
xor
rcl
cs
push
shl
dec
test
test
jo
dec
cdq
and
sub
lock
mov
push
and
jae
pop
lock
cmp
add
sub
mov
popf
push
call
test
or
aam
shr
clc
xchg
(bad)
iret
seta
add
push
aam
xchg
sar
sub
dec
xchg
aam
popa
pop
stos
cmp
add
out
mov
cmp
push
mov
mov
iret
xchg
xchg
push
push
or
xchg
mov
mov
add
push
xchg
mov
xchg
rcl
daa
or
shl
and
sub
xchg
add
inc
mov
(bad)
jmp
and
ror
xchg
ffree
add
mov
enter
mov
add
into
mov
xchg
lods
icebp
je
test
orps
jp
add
data16
and
push
call
push
or
call
xchg
call
out
xor
push
adc
push
cmp
pop
add
paddsw
es
mov
nop
in
dec
mov
or
aas
adc
jp
sbb
inc
pop
push
in
mov
push
mov
fwait
adc
ins
add
mov
sub
sbb
mov
jge
pop
pop
inc
push
pop
nop
mov
or
cmp
mov
or
pop
movs
mov
inc
mov
cmp
mov
es
popf
fwait
or
adc
push
adc
and
daa
mov
mov
inc
aaa
xchg
ror
pop
sti
fld
add
(bad)
fiadd
sbb
pusha
push
sbb
aaa
ret
push
call
inc
gs
xlat
mov
sbb
xchg
lods
jne
ss
pop
out
popa
mov
es
xor
rcr
adc
rcr
int3
inc
ret
dec
fisttp
scas
inc
lea
push
lea
dec
jg
cmp
xchg
add
pop
mov
das
jno
jle
and
sub
scas
and
je
outs
push
and
pop
fnstcw
inc
add
jge
pop
mov
movs
test
enter
cmp
dec
cmp
cmps
mov
inc
or
ret
cmp
jnp
cmp
mov
pop
loopne
sub
adc
(bad)
out
push
inc
pushf
mov
stc
call
xlat
nop
add
in
cmp
or
mov
sti
je
sub
loop
push
push
and
sbb
inc
push
cld
cld
cld
and
in
inc
add
xchg
add
bound
inc
pop
lds
push
add
aas
xlat
mov
(bad)
mov
test
mov
es
xchg
pop
sbb
mov
add
add
jno
jmp
or
out
pop
mov
das
das
sub
sti
push
das
dec
mov
iret
fadd
(bad)
mov
sub
mov
pushf
(bad)
sti
jmp
jle
pop
adc
aad
push
aas
mov
in
rcr
mov
pop
xor
lock
rcr
sbb
cmp
dec
or
push
push
sbb
mov
pop
cmc
es
rol
xor
or
cdq
fsub
mov
pop
outs
pop
lahf
int3
ds
call
mov
or
inc
xor
adc
rcl
mov
mov
leave
leave
push
dec
xor
or
leave
jl
mov
xchg
inc
pop
mov
and
push
rol
lds
xchg
fsubr
pushf
shl
or
adc
nop
xor
fcmovnb
xchg
pop
xor
(bad)
pop
dec
dec
dec
cmp
(bad)
xor
xor
pop
pop
mov
dec
cdq
add
or
push
push
fiadd
lods
fistp
adc
addr16
and
xchg
imul
and
push
call
add
inc
fs
dec
sahf
dec
jo
xchg
xchg
lock
fist
iret
cmp
sub
call
lods
adc
or
mov
sbb
dec
jle
xor
lds
jae
icebp
pop
dec
cmp
fs
iret
xor
fld1
andps
xchg
iret
call
cmps
mov
inc
pusha
mov
cmp
mov
or
iret
hlt
jle
es
mov
pop
daa
loopne
or
cmp
inc
nop
rcr
push
sbb
pop
out
lahf
pop
pop
jmp
xor
clc
xchg
clc
sbb
or
mov
adc
xor
and
push
ror
fisub
sub
jle
push
pusha
cmp
in
xchg
or
adc
(bad)
push
push
pop
sbb
mov
es
push
fisttp
retf
into
(bad)
mov
cmps
adc
xor
rcl
xchg
fdivr
aaa
cmp
retf
add
inc
cmp
push
sbb
add
adc
sub
xor
pop
jl
adc
mov
add
and
test
cmp
cmp
sbb
adc
jecxz
lea
enter
rcr
or
jmp
inc
in
dec
loopne
push
sub
jb
cmc
sub
js
loopne
mov
cmp
cmp
in
std
adc
mov
test
outs
inc
movs
cmp
cmp
push
out
jno
inc
inc
dec
std
outs
rcl
adc
cli
xor
push
idiv
mov
inc
sbb
jae
mov
pop
xor
ss
adc
inc
scas
out
in
lds
xlat
and
mov
pop
gs
adc
adc
bound
and
cmp
or
ret
ins
sbb
add
cmp
pop
and
call
cli
or
or
xchg
mov
jne
mov
je
push
es
or
mov
not
cmps
push
pop
adc
cs
xor
call
pop
outs
or
pop
fiadd
cmp
jne
push
push
pusha
rcl
mov
xchg
clc
xor
mov
inc
cmps
mov
inc
dec
add
jmp
ins
jmp
call
inc
loope
inc
fucomi
jne
mov
mov
or
mov
push
clc
ins
xchg
ds
sub
das
movs
or
imul
aas
das
aaa
sub
int
push
mov
mov
aaa
or
adc
xchg
pop
mov
leave
(bad)
mov
push
sbb
lock
or
sbb
lahf
cmps
adc
jmp
(bad)
add
or
test
lods
ror
pop
loope
xchg
xor
mov
(bad)
into
dec
call
in
fadd
pop
jae
sub
stc
out
dec
ins
sub
inc
pop
cmps
mov
xor
pop
popf
loopne
xor
adc
icebp
or
or
movs
repz
jmp
mov
cmp
ret
push
mov
aas
into
and
test
inc
add
jp
xor
iret
xor
retf
test
and
or
cmp
cmp
setg
fistp
add
inc
add
mov
add
cmp
call
sbb
inc
inc
adc
xchg
cmps
imul
movs
ja
shr
jbe
pop
push
(bad)
(bad)
(bad)
sub
cmp
adc
add
xor
dec
and
(bad)
jns
aam
adc
or
push
add
test
es
xor
sub
inc
lock
ret
cmp
push
xchg
pop
movs
add
mov
and
repz
cs
(bad)
fld
and
cmp
sub
mov
mov
jne
jmp
sbb
xor
outs
mov
or
sub
push
into
push
and
mov
adc
xchg
rcl
sub
push
and
pop
(bad)
push
dec
sub
aaa
aaa
out
push
dec
cmp
call
ja
jnp
pop
mov
in
loop
je
cld
push
or
cmp
sub
mov
push
ins
push
mov
or
es
or
xor
lock
sub
pop
add
jmp
sbb
shl
pop
lock
hlt
push
shl
dec
es
shr
jae
pop
ins
(bad)
sub
pop
mov
cmp
adc
adc
pop
adc
imul
lods
test
jo
xchg
mov
cmp
ret
call
fisubr
pop
rcl
dec
mov
ret
pop
hlt
je
retf
sbb
inc
sar
fdivr
adc
imul
ret
sbb
adc
data16
cmp
(bad)
xchg
(bad)
cli
dec
jne
sub
pop
or
and
xlat
sub
sbb
xchg
mov
lahf
mov
lods
loopne
add
push
ds
xor
(bad)
test
or
pop
push
loope
gs
data16
dec
xor
or
outs
or
add
lock
mov
into
dec
lods
dec
mov
inc
push
imul
rcl
add
mov
jbe
xlat
imul
cmc
or
mov
jmp
sbb
mov
sbb
xchg
in
push
imul
add
or
out
xchg
sbb
loop
or
add
sbb
and
ins
or
add
adc
adc
xor
inc
or
ret
and
adc
dec
pop
xchg
aam
xchg
cdq
mov
ret
adc
mov
cdq
mov
or
movs
inc
aad
ss
shr
mov
mov
adc
sub
inc
and
je
or
dec
cmp
sbb
cmp
neg
mov
dec
mov
mov
and
cmp
shl
add
hlt
jbe
cmps
push
mov
into
adc
sub
mov
xor
adc
xlat
push
aas
movs
loop
popf
jge
bound
adc
push
fcom
inc
cli
jbe
and
add
inc
loopne
inc
rcl
daa
pop
mov
enter
adc
aam
les
loopne
sar
inc
pusha
xor
je
imul
push
cld
add
dec
shl
sub
(bad)
in
push
enter
cmp
adc
pusha
add
and
jl
dec
std
or
leave
push
pop
or
xchg
rcr
ja
les
or
pop
cmp
dec
outs
add
mov
dec
dec
xor
ret
imul
ret
sbb
push
cmc
and
pop
dec
mov
push
add
aam
dec
mov
cmc
push
dec
pop
jne
pop
jmp
fwait
(bad)
movs
fidiv
movs
ficomp
xchg
(bad)
push
dec
adc
lahf
and
cmp
xchg
push
sub
addr16
mov
hlt
les
test
xor
mov
or
add
mov
jnp
lods
jo
nop
pop
mov
push
inc
adc
add
ins
jnp
mov
popa
and
pop
and
mov
not
mov
call
cmp
sub
sub
(bad)
mov
mov
(bad)
hlt
je
mov
xchg
stc
mov
rcl
loope
cmp
pop
add
pop
pop
enter
sub
adc
xchg
push
or
fldcw
mov
mov
mov
pop
call
cs
mov
push
and
or
cmp
mov
mov
leave
inc
sbb
sbb
inc
push
xchg
enter
adc
mov
ret
mov
jmp
pusha
not
xor
or
xchg
aas
rcr
sub
mov
sahf
xchg
add
daa
pop
outs
sub
jle
add
adc
dec
shl
adc
adc
add
jecxz
movs
add
sar
test
(bad)
sbb
xchg
rcl
outs
xchg
adc
dec
push
dec
push
int3
push
add
cmc
adc
sbb
loopne
push
or
mov
add
jp
fsub
in
push
pushw
stc
das
sbb
aam
jmp
xchg
push
icebp
cs
dec
push
jb
pop
cmps
lods
add
test
and
adc
into
movs
call
or
sub
sbb
mov
mov
inc
jo
repnz
add
xchg
adc
jl
inc
and
adc
jo
rol
(bad)
popa
movs
push
cwde
inc
adc
mov
jp
push
push
fs
sbb
sbb
jne
push
cmp
pusha
dec
add
mov
lahf
inc
dec
push
xor
jmp
addr16
mov
cmp
inc
pop
je
mov
(bad)
das
js
data16
xor
push
les
nop
jmp
retf
pop
dec
mov
add
clc
adc
push
fcom
je
adc
xchg
and
hlt
add
jno
nop
shl
cmp
mov
arpl
add
les
inc
pop
add
xor
dec
push
enter
mov
les
cmp
sub
add
test
mov
mov
sahf
or
inc
xlat
cmp
rcr
mov
or
gs
mov
test
add
or
jmp
aaa
outs
push
ret
cld
ucomiss
js
imul
pop
and
mov
adc
jne
test
lock
mov
arpl
retf
fisub
das
jo
cwde
sbb
je
push
jne
loopne
pop
inc
add
sbb
dec
lfs
loope
and
sub
and
test
addr16
or
and
inc
or
sbb
add
push
jns
mov
push
das
adc
add
or
test
or
in
aaa
dec
pusha
adc
xchg
ror
gs
mov
adc
bound
lods
inc
cbw
outs
pop
adc
mov
cmp
push
xchg
xor
mov
xor
dec
fisub
call
and
xlat
sub
jmp
cmp
jno
pop
adc
push
push
xchg
test
cdq
ror
cdq
inc
jle
push
jg
adc
ins
push
add
sbb
add
push
clc
int3
hlt
mov
std
lahf
test
pop
dec
test
jbe
test
outs
bound
sahf
(bad)
sbb
adc
sbb
inc
ss
cmps
cmp
sub
cmp
ds
daa
fwait
adc
dec
sar
push
imul
lea
sbb
bound
into
sti
pop
jb
js
add
xchg
in
stos
out
add
ins
mov
add
dec
icebp
ds
daa
add
xor
shl
or
pop
and
shr
xchg
into
lods
sbb
jns
ins
jno
imul
sbb
push
and
pop
popf
inc
test
sub
or
das
imul
jb
pop
jg
test
xchg
movs
mov
pop
jnp
loopne
ret
or
sar
or
add
sbb
cmp
or
and
xchg
add
and
inc
pop
add
enter
xor
mov
popa
inc
mov
pop
add
loop
adc
mov
add
test
xchg
fild
jbe
int
dec
dec
clc
clc
add
mov
xchg
popf
inc
xor
cwde
retf
js
lsl
fmul
loopne
fidiv
arpl
ficomp
and
push
pusha
lock
icebp
jne
mov
adc
or
mov
in
cmp
aad
mov
xor
mov
sub
fisttp
clc
inc
mov
push
push
outs
push
jg
mov
mov
and
(bad)
shr
loope
mov
or
sbb
mov
sti
dec
pop
es
inc
mov
sub
or
push
in
shl
arpl
and
lock
dec
(bad)
int
pop
add
fnstcw
push
cmp
add
aas
aaa
adc
ins
rcr
fs
lahf
add
add
aaa
lods
cmps
jae
or
fcmovnu
shl
push
push
add
sti
ja
push
cmp
xor
xchg
jmp
data16
add
xstore-rng
cmps
sub
addr16
adc
mov
jno
stc
popa
and
mov
fucomp
sub
jmp
arpl
sub
add
out
or
mov
pop
imul
and
jmp
or
test
jb
sar
push
jnp
inc
sub
outs
mov
(bad)
jbe
ins
je
jae
xor
les
cwde
or
adc
jmp
jmp
or
or
push
and
ret
mov
push
and
adc
out
mov
sbb
enter
je
mov
inc
inc
xchg
dec
adc
int
aad
je
push
push
add
sbb
mov
push
inc
inc
push
dec
xchg
inc
or
xchg
pop
push
push
xchg
std
adc
fldenv
jl
adc
and
xor
rcl
cmp
inc
xor
adc
sub
sub
xchg
push
pop
icebp
or
push
sbb
loope
mov
fmul
sbb
add
adc
mov
sti
es
cmp
mov
push
lahf
movs
or
sbb
push
push
imul
xor
loopne
lds
imul
xchg
aam
xchg
sbb
sbb
cmp
lods
and
xchg
push
add
mov
adc
mov
test
cmps
lea
sbb
xchg
mul
inc
sub
je
sbb
jne
sub
movs
mov
lods
ins
cmp
adc
push
cmp
or
push
push
call
cmp
mov
fucom
push
daa
mov
pop
sbb
test
fild
ss
push
jno
jge
inc
mov
shl
loope
xor
in
add
adc
xor
push
push
icebp
cmp
in
jne
pop
add
dec
daa
mov
test
popf
xchg
fsubr
sub
jne
daa
ins
pusha
sbb
popa
or
add
imul
add
out
inc
pop
sbb
(bad)
dec
and
iret
adc
je
mov
aad
ins
pop
cwde
mov
sbb
push
loope
xchg
jns
je
push
mov
jne
daa
mov
or
add
jmp
xchg
fdivr
cmp
mov
in
sbb
mov
aas
sbb
xor
fnsave
test
rcr
dec
dec
pop
outs
adc
pop
outs
je
sub
je
mov
mov
sbb
cli
rol
movs
add
push
mov
movs
xchg
push
mov
sub
or
test
mov
sahf
je
test
inc
nop
ja
cmp
xchg
push
mov
and
dec
stos
cmp
ins
xchg
and
fist
cmp
jne
cmp
cmps
(bad)
(bad)
or
dec
xchg
push
rcl
pop
mov
cs
icebp
xor
adc
lods
inc
mov
mov
lds
clc
shr
rol
pop
cmp
mov
add
cmp
xor
sub
add
(bad)
and
add
push
jecxz
pop
hlt
dec
xchg
and
inc
mov
jmp
call
xchg
call
ins
fdivr
arpl
jns
loope
cmps
or
push
fwait
aad
jg
stos
les
retf
cld
shl
aad
mov
sar
sar
and
sar
outs
xor
mov
jns
adc
or
int3
pop
adc
add
icebp
loopne
pop
add
or
jno
xor
jo
and
int
lods
xchg
pushf
mov
lock
in
test
or
jge
and
mov
xchg
inc
jns
pop
or
popa
xor
mov
and
ins
push
and
cmps
jne
shl
in
sbb
test
push
ret
stc
jnp
mov
dec
mov
xchg
xchg
movs
enter
shl
jo
xlat
(bad)
add
test
pop
es
mov
cs
mov
push
mov
cmp
fwait
inc
out
mov
(bad)
into
clc
gs
test
ret
add
repnz
hlt
xor
in
mov
adc
enter
add
cmp
xor
and
fmul
inc
xor
sbb
or
dec
test
add
cmp
add
imul
mov
mov
mov
push
inc
dec
pop
mov
pop
cmp
les
outs
xor
rcr
jg
dec
push
jns
scas
inc
shl
cwde
xchg
mov
xor
mov
push
xor
outs
sub
fmul
jmp
sbb
and
fimul
shl
mov
mov
enter
xchg
adc
xchg
xchg
lods
mov
jmp
out
stos
into
adc
or
adc
and
lock
xor
sub
test
sub
dec
loop
jle
push
ss
daa
inc
out
in
int3
xchg
lods
dec
cwde
test
and
ja
mov
into
xor
int3
xchg
adc
call
add
cmp
cmp
inc
jo
sub
xor
call
cmp
je
or
sub
push
push
cmp
jne
jnp
xor
ss
dec
push
inc
dec
add
push
or
xlat
out
scas
cmps
and
xchg
dec
cvtpi2ps
jns
loopne
loope
ret
adc
add
mov
ins
rcl
aam
dec
sub
nop
sahf
xlat
hlt
or
ins
sub
mov
cmp
add
out
sbb
aaa
add
call
popa
mov
or
test
cmp
add
lsl
xchg
inc
jae
adc
ins
repz
mov
add
mov
rcl
xlat
xor
imul
popf
jb
test
add
lock
jle
mov
xchg
sbb
inc
push
mov
iret
outs
inc
jle
lea
fs
add
dec
dec
sub
cdq
clc
push
sbb
(bad)
mov
in
rol
pop
xchg
call
cmp
xchg
inc
push
push
mov
out
data16
xor
and
cmp
dec
push
stos
mov
push
(bad)
and
sbb
xlat
(bad)
ja
mov
push
inc
ins
inc
jb
or
push
imul
jle
and
and
test
scas
(bad)
cmps
jo
jg
lods
pop
jmp
inc
mov
daa
cmc
cmc
push
xchg
sbb
sbb
and
je
ja
dec
inc
and
movs
inc
rol
mov
sbb
outs
lods
fstp
mov
mov
mov
cwde
push
shl
dec
rol
inc
data16
push
pop
inc
dec
mov
sbb
jmp
rcl
or
or
aad
jnp
cmp
popa
fild
mov
jg
or
pop
pusha
jne
xchg
push
xlat
dec
lods
test
add
lock
imul
repnz
mov
not
fild
test
mov
call
inc
aaa
into
mov
pop
daa
add
imul
mov
mov
jg
ds
dec
jmp
inc
lock
test
dec
mov
xchg
mov
and
cmp
push
jmp
rcr
lock
mov
pop
(bad)
das
loopne
and
stos
mov
(bad)
sub
sub
mov
inc
cmps
xlat
mov
ins
sbb
leave
rol
daa
inc
push
mov
mov
repz
mov
mov
sbb
push
popf
fdivr
xor
das
data16
lock
and
in
ins
cs
jmp
sahf
sbb
out
bound
sbb
ds
jge
sbb
inc
fld
clc
push
cwde
into
xor
add
arpl
sbb
pop
retf
fmul
pop
jne
cmp
inc
ins
call
rol
loopne
mov
adc
pop
sar
clc
cs
add
dec
fisttp
xlat
shl
sbb
fdivr
adc
xchg
int3
add
dec
adc
jbe
mov
inc
xlat
inc
jns
and
cdq
idiv
sub
or
push
call
lock
xor
jae
dec
mov
pop
or
ins
sar
mov
adc
loope
(bad)
call
sbb
cmp
jne
dec
push
push
and
loope
outs
clc
test
cmp
jmp
mov
mov
add
cmps
sbb
test
sub
inc
popa
lods
inc
mov
or
xor
jae
pop
clc
sar
in
mov
mov
cs
movs
add
xchg
xchg
inc
popf
inc
pushf
cdq
inc
stos
jle
je
and
xchg
mov
mov
mov
in
test
mov
pop
mov
add
inc
mov
push
mov
into
daa
sti
out
push
scas
mov
test
gs
add
into
add
jg
sub
adc
inc
pusha
jne
lea
or
popf
lods
aas
call
lea
pop
mov
adc
mov
jne
pop
fiadd
sub
jle
in
or
and
xlat
add
daa
jne
call
das
cs
sub
sbb
xchg
leave
sar
scas
xchg
jg
xor
in
pop
and
push
sahf
adc
ror
das
lods
mov
repnz
lea
fmul
xchg
jo
xor
and
ds
sub
ins
shl
mov
push
aam
push
mov
add
lea
data16
cmp
and
adc
sbb
jecxz
mov
xor
xchg
xor
sub
loop
jecxz
mov
dec
pop
mov
stos
pop
dec
sbb
lods
pusha
cmps
adc
sar
mov
repz
add
mov
sub
fsub
scas
xchg
cs
inc
test
pop
sbb
jmp
adc
adc
pushf
pop
or
xor
push
add
scas
mov
cmp
mov
adc
push
nop
popa
dec
shr
mov
jmp
(bad)
xchg
repnz
push
nop
pusha
push
sub
les
cld
mov
inc
sbb
add
mov
mov
sbb
inc
inc
mov
fldenv
pushf
scas
movs
rol
sbb
xlat
fiadd
int
gs
pop
jmp
add
pop
xchg
adc
sti
sbb
push
pop
addr16
xchg
fst
ins
xchg
push
fbstp
push
dec
sar
dec
cld
outs
inc
cmp
je
popa
(bad)
fiadd
inc
inc
jecxz
imul
adc
(bad)
sbb
or
dec
sbb
mov
popa
dec
outs
push
inc
es
out
in
out
add
(bad)
shr
xor
int3
enter
inc
push
xor
loopne
sub
inc
and
xchg
mov
(bad)
popf
push
jns
adc
push
mov
jmp
jne
test
add
inc
ret
fadd
cmp
dec
test
mov
mov
lock
dec
adc
cmp
push
xchg
js
ret
sub
adc
mov
or
shr
or
aaa
push
dec
add
xor
loop
inc
mov
lahf
jl
pop
sub
xchg
clc
push
data16
jae
pop
inc
and
push
ja
dec
fdiv
fs
add
bound
aaa
jl
mov
mov
fild
add
mov
jle
and
inc
push
jno
fld
mov
push
movs
pop
xor
cmp
fistp
fisttp
scas
push
aam
loop
loopne
cwde
scas
inc
ins
(bad)
mov
je
xchg
mov
mov
mov
out
jmp
sbb
add
getsec
pop
xor
mov
and
dec
dec
jmp
adc
pop
add
jmp
sbb
cmp
ds
adc
mov
cmp
data16
data16
sbb
mov
(bad)
pop
pop
xor
dec
mov
repnz
ss
out
inc
push
das
xchg
mov
sbb
movs
adc
push
stos
sbb
(bad)
in
push
dec
and
test
xchg
jo
or
sub
push
enter
arpl
(bad)
mov
mov
mov
cmp
js
sbb
inc
or
jae
or
mov
inc
push
int
cmp
jecxz
in
cmps
cmp
cdq
cmp
rcpps
dec
mov
xchg
xchg
cmps
scas
loope
add
mov
adc
jge
sub
imul
push
push
(bad)
sbb
pop
das
je
call
jge
pop
gs
dec
add
cmc
pop
mov
mov
rol
scas
xor
inc
xor
adc
sub
xor
sti
mov
push
xor
push
imul
jmp
rcl
mov
aad
cmp
dec
imul
mov
sub
dec
mov
pop
xor
das
movs
les
rcr
retf
fwait
test
add
push
adc
inc
pop
mov
stos
adc
nop
jne
and
shl
ret
jns
xchg
test
cmp
sbb
push
push
js
and
imul
mov
mov
adc
fimul
test
stos
cmp
sub
sahf
test
adc
test
hlt
mov
xchg
lea
ss
add
sbb
sbb
cmp
hlt
xchg
arpl
cmp
push
push
xchg
pop
hlt
mov
test
and
push
or
cmp
aam
sbb
sar
and
cdq
ins
pop
and
movs
scas
adc
push
mov
mov
std
mul
test
stos
js
push
jb
lahf
mov
jae
js
cmp
cmp
pop
push
pusha
je
out
sbb
jg
dec
cs
mov
mov
aas
jmp
jo
sbb
or
icebp
inc
(bad)
retf
pusha
sbb
fwait
(bad)
aad
sub
cmp
stos
pushf
fidivr
adc
add
push
mov
pop
jb
loopne
dec
dec
movs
adc
xor
add
popa
or
sbb
pop
inc
cmps
push
jmp
mov
aaa
sub
push
jge
or
call
xor
mov
and
adc
fsub
push
mov
dec
in
mov
push
jo
(bad)
inc
pop
loop
push
adc
arpl
ins
cs
rcr
add
cmp
pop
inc
push
inc
shl
or
add
stc
mov
cs
xchg
jmp
mov
or
and
fcomp
push
ret
pop
cmp
sub
popf
dec
adc
in
jne
push
push
in
pusha
sub
hlt
cmp
jge
lods
push
push
and
aad
inc
repz
stos
ja
nop
fwait
(bad)
mov
lock
loopne
popa
lahf
adc
loopne
inc
or
adc
lds
lods
or
mov
cli
or
xor
fstp
xchg
xchg
retf
call
pop
xor
arpl
adc
mov
out
or
scas
push
cmp
inc
jl
es
fs
xchg
push
xchg
push
or
mov
mov
mov
sub
or
mov
int3
adc
mov
pusha
repnz
mov
mov
dec
xchg
mov
or
mov
inc
cmc
push
inc
inc
ret
jbe
dec
test
arpl
adc
dec
pop
nop
jno
inc
xor
and
xchg
clc
or
loope
je
xor
and
jo
add
push
and
outs
or
inc
xor
cmp
stc
sub
mov
out
mov
or
push
mov
(bad)
jl
pop
sub
sbb
sar
or
je
mov
and
sub
call
pop
add
enter
pop
add
or
push
adc
leave
cmp
aad
cwde
test
ja
sub
or
pop
jg
ins
retf
pushf
ret
es
jbe
popa
dec
add
in
lods
popf
pop
dec
add
add
mov
ins
or
jno
rcr
(bad)
pop
and
jl
pop
pop
pushf
sbb
cmp
es
add
inc
dec
imul
push
push
(bad)
out
dec
or
adc
sbb
cwde
mov
outs
jmp
adc
adc
add
sub
adc
cmp
sahf
(bad)
cmp
hlt
push
jl
sub
dec
clc
mov
add
dec
and
ja
inc
push
enter
xchg
add
sbb
mov
adc
setg
xor
scas
fldcw
aas
aas
cmp
xor
inc
add
imul
mov
xchg
ror
daa
pop
addr16
add
and
mov
mov
pop
mov
xchg
xchg
pop
inc
ins
add
popa
jns
push
lahf
jge
lock
adc
adc
and
jno
in
cmp
cmp
inc
xchg
xchg
rol
xor
ss
call
dec
call
outs
out
push
sub
int3
xchg
sbb
daa
cwde
pop
mov
rol
(bad)
mul
sub
inc
mov
adc
lea
pop
or
jl
lock
and
and
arpl
and
ins
or
push
inc
scas
push
(bad)
(bad)
fmul
call
adc
es
fbld
inc
ret
cmp
dec
outs
imul
inc
in
push
outs
mov
lods
inc
push
icebp
in
mov
sub
inc
hlt
imul
call
ds
xor
das
test
dec
pop
iret
push
fstp
bound
pop
out
mov
adc
aam
adc
sub
push
and
test
mov
mov
dec
jne
(bad)
pop
enter
jne
dec
cmp
or
ja
out
or
xchg
pop
scas
imul
ins
inc
xor
inc
mov
add
add
retf
jl
lock
inc
repz
push
lods
out
xor
cmc
test
and
cmp
or
dec
jmp
jbe
xlat
or
xchg
lock
sbb
dec
loopne
clc
cmp
jne
ror
and
adc
xor
je
aaa
sar
icebp
mov
sub
mov
and
mov
jno
inc
mov
dec
aam
fs
cmc
cld
inc
in
push
sub
mov
test
dec
cld
push
mov
ins
ins
js
dec
test
out
xlat
mov
daa
add
ins
push
test
rol
xchg
neg
or
and
cmp
(bad)
adc
rol
or
dec
pop
push
je
lods
inc
ins
imul
add
pop
mov
add
jl
and
mov
inc
inc
mov
add
retw
pop
mov
mov
jne
outs
out
fisubr
cmp
inc
sahf
imul
mov
bound
or
or
popa
jb
add
sub
jle
adc
test
arpl
adc
push
lock
inc
fadd
(bad)
bound
ins
sub
push
xchg
jl
inc
add
scas
adc
popa
push
lock
data16
pop
inc
idiv
pop
out
movups
push
or
dec
sbb
mov
int
dec
add
fdivr
out
nop
ins
xlat
sbb
js
arpl
or
sar
loop
xchg
icebp
jo
leave
ins
test
push
xchg
inc
int3
dec
mov
add
jecxz
jmp
in
mov
(bad)
mov
cmp
xchg
push
mov
(bad)
adc
and
adc
adc
aaa
sbb
or
dec
lea
xchg
cmp
dec
aaa
lds
in
in
pushf
(bad)
or
xchg
dec
fimul
mov
cmp
fadd
pop
rol
iret
inc
sbb
inc
mov
rol
ds
lods
lahf
test
push
inc
rcr
(bad)
or
ds
jnp
jl
mov
inc
shl
or
rcl
jnp
nop
inc
fcom
add
jno
cmp
pmullw
cdq
neg
in
sub
xchg
mov
and
iret
xor
inc
fstp
dec
loopne
pusha
xlat
mov
inc
out
fild
push
ins
fisttp
mov
cmc
inc
daa
test
xor
iret
pop
call
sar
dec
mov
(bad)
stc
jb
repz
test
mov
cmp
xor
lea
ds
sbb
nop
mov
mov
inc
lods
push
xchg
inc
fild
inc
push
(bad)
retf
pop
cmp
rol
add
sar
jns
dec
cmp
add
add
push
fist
inc
xchg
test
inc
or
(bad)
sbb
inc
xchg
icebp
dec
add
cmp
cli
stc
mov
add
adc
ins
loopne
movs
xchg
add
add
push
movs
call
and
fst
push
les
cmps
adc
xchg
cmp
pop
hlt
or
inc
xlat
cmp
stc
mov
data16
and
xrelease
fdiv
or
dec
adc
popa
inc
addr16
inc
sub
pop
hlt
adc
push
jo
sub
cmc
shld
sub
mov
mov
repz
cmp
test
xor
aaa
dec
enter
cmp
popa
fs
retf
(bad)
mov
xor
or
and
(bad)
mov
adc
lea
sbb
mov
rcr
popf
mov
je
scas
dec
bound
enter
test
push
in
pop
pusha
shr
cwde
cwde
fmul
cwde
das
push
add
and
inc
adc
jne
rcl
fwait
scas
stos
lea
je
outs
sbb
add
inc
push
dec
push
cmovs
imul
xchg
outs
or
pop
add
jnp
pop
pop
es
mov
pop
sub
jl
or
scas
fild
add
xor
add
fst
add
pop
adc
shl
pusha
out
rol
outs
push
inc
adc
adc
(bad)
pusha
xor
outs
mov
pop
pop
and
imul
or
stos
stos
cwde
mov
dec
dec
pop
or
mov
jo
add
add
addr16
push
add
inc
push
add
lods
adc
pop
push
mov
add
pop
xor
fbstp
into
mov
add
rcl
test
xchg
or
loope
cli
dec
cmp
push
mov
xchg
les
fcomp
or
add
or
nop
les
neg
add
mov
popa
push
pop
dec
inc
mov
or
pop
loope
mov
jmp
ss
shl
or
xchg
sbb
(bad)
outs
imul
jae
add
lds
jns
and
rep
popa
fstp
fisub
inc
outs
mov
jnp
adc
sub
sbb
int
fwait
nop
out
nop
jl
push
push
add
in
lds
pop
and
aad
mov
scas
push
sbb
push
test
or
sbb
and
daa
pop
push
fst
or
test
pusha
mov
and
popa
jmp
push
and
and
sbb
mov
in
pop
adc
call
pop
sbb
or
push
imul
and
mov
pop
or
push
in
inc
or
and
adc
in
adc
in
int
add
mov
dec
xchg
push
add
imul
enter
cld
xchg
pop
loope
inc
push
cmc
test
mov
test
test
mov
mov
(bad)
clc
and
or
rcl
lahf
loopne
inc
dec
cmovle
movaps
xchg
or
xor
js
add
or
lods
lea
or
inc
test
loope
retf
and
inc
std
xchg
push
push
or
and
add
add
mov
dec
xchg
jo
mov
jns
test
rol
sbb
add
push
in
push
fs
xchg
(bad)
pop
push
repnz
sbb
cmp
dec
xchg
mov
fmul
and
mov
mov
sub
(bad)
dec
ds
or
test
je
push
shr
fcmovnb
rcr
mov
jge
hlt
mov
xchg
test
or
xor
jmp
mov
cli
push
sbb
adc
rcr
sub
push
push
cmps
xchg
es
dec
add
add
jb
or
sub
movs
cmp
out
add
cmp
inc
inc
aas
sbb
ins
inc
dec
pusha
sub
pop
sub
adc
push
jns
sti
and
inc
mov
cmp
xor
inc
outs
stos
add
and
push
cmp
mov
test
and
cmps
adc
pop
xchg
and
adc
int3
inc
mov
pop
addr16
aaa
or
aaa
push
test
cvtps2pd
cmp
xchg
rol
bswap
fs
addr16
adc
sbb
(bad)
leave
enter
dec
movs
push
inc
cs
popa
dec
dec
xchg
daa
pop
int
hlt
or
pop
pop
mov
test
and
out
shr
xchg
je
das
inc
jmp
popa
xchg
dec
or
xor
test
jmp
test
mov
push
cmps
pop
mov
dec
add
xchg
(bad)
or
(bad)
fwait
mov
shl
push
add
and
(bad)
icebp
mov
mov
mov
inc
je
or
xchg
dec
mov
and
rcr
or
dec
pusha
es
inc
call
cmps
popa
jecxz
push
fistp
icebp
mov
push
inc
push
sbb
xor
mov
cmp
je
mov
add
or
cmp
jg
cmps
loop
add
hlt
lea
inc
cmp
out
(bad)
mov
ins
clc
into
cmp
add
adc
add
jmp
jnp
cli
(bad)
cmp
jle
arpl
fisubr
sub
jle
cs
and
popf
sub
fimul
ja
jo
imul
jmp
dec
addr16
popf
push
xor
pop
xchg
scas
fistp
jbe
aaa
in
xlat
adc
rcr
in
out
pop
push
ds
bextr
ffreep
adc
inc
mov
aaa
xchg
adc
xchg
lods
sbb
and
xchg
mov
je
add
enter
add
fcmovnb
xchg
xchg
sahf
vpmacsswd
mov
dec
aad
imul
enter
nop
pop
mov
sub
inc
cs
pop
scas
in
mov
cmp
leave
add
push
sbb
xor
add
cs
sbb
cmp
and
int3
rcr
sbb
scas
ss
mov
aas
cmp
fistp
or
push
addr16
sub
sub
push
lea
pusha
iret
inc
sub
sub
ds
xor
les
mov
test
les
(bad)
push
mov
lock
xchg
add
shl
inc
and
loope
and
or
int
loop
and
in
sub
movs
mov
cli
cmp
sti
mov
cmp
push
dec
mov
cmp
cmp
add
mov
sbb
pop
mov
or
jp
imul
int
adc
idiv
inc
and
add
(bad)
pop
fwait
dec
cmp
add
aas
je
nop
je
add
mov
loopne
bound
add
(bad)
out
loopne
aaa
xor
fmul
or
pop
add
sub
sbb
out
fcmovne
add
push
jmp
and
pop
ret
xchg
mov
imul
mov
jle
(bad)
adc
rcr
xchg
jge
adc
ret
inc
jae
daa
movs
sub
in
mov
xchg
mov
xchg
sub
mov
rol
clc
popa
xor
pop
(bad)
jecxz
adc
push
fmul
dec
inc
xor
imul
rol
data16
shr
inc
mov
and
fs
push
xchg
pop
adc
and
xor
add
inc
pusha
dec
das
push
jo
pop
clc
fs
clc
(bad)
movs
push
jb
add
sbb
retf
aas
jno
lock
jle
ss
inc
les
adc
mov
in
in
das
or
add
outs
jmp
inc
fdivr
ja
js
cmp
mov
or
icebp
or
je
loopne
push
shr
dec
imul
jmp
cmp
pop
cmp
adc
rcl
into
pop
xlat
inc
stos
push
imul
xor
or
and
inc
shl
and
dec
push
xor
adc
sub
outs
sti
cmp
or
fistp
mov
cmp
push
or
push
in
sbb
adc
and
xor
inc
call
cvtps2pi
dec
dec
inc
xor
pop
ret
mov
xchg
pop
jo
adc
push
inc
sbb
adc
cmp
push
sbb
hlt
adc
lock
add
jmp
add
pop
xor
outs
out
ins
loop
inc
hlt
dec
pop
ins
mov
mov
(bad)
push
mov
ror
sbb
js
(bad)
test
add
jmp
mov
or
mov
gs
cwde
ins
outs
test
scas
xchg
jecxz
push
push
adc
fs
ficomp
pop
jnp
retf
mov
inc
in
out
icebp
ds
adc
lock
(bad)
neg
popa
xchg
ins
out
pop
and
adc
cs
call
add
clc
or
push
push
fdivr
add
xor
push
inc
push
sub
shl
outs
push
mov
inc
gs
pop
loope
add
shl
pop
in
into
mov
inc
(bad)
pop
mov
inc
imul
clc
mov
rol
xor
cmp
mov
clc
dec
mov
mov
mov
(bad)
push
in
mov
or
mov
push
or
repz
xor
cmp
push
leave
xor
jg
sub
or
gs
push
or
add
in
xchg
jecxz
add
push
push
ret
add
in
add
gs
mov
or
popa
in
add
leave
add
dec
(bad)
test
data16
adc
call
mov
(bad)
div
jecxz
or
jmp
shr
push
and
mov
jle
add
test
je
push
adc
aaa
add
jne
vmread
frstor
nop
sbb
sub
sbb
jne
outs
mov
rol
sub
in
sub
loopne
fdiv
push
push
sbb
ror
mov
sar
or
jnp
jmp
aad
push
stos
or
fisttp
cmp
imul
jne
(bad)
ja
mov
or
add
inc
lea
inc
push
xor
push
cwde
or
js
hlt
push
call
mov
test
lock
inc
imul
ret
cwde
out
loope
xor
or
sbb
inc
fild
or
ret
(bad)
daa
wrmsr
rcl
ja
lock
hlt
and
lock
push
adc
mov
mov
es
add
(bad)
dec
fsub
jl
xchg
in
cmp
xor
fbstp
imul
mov
fcomp
sub
shl
scas
and
push
push
sbb
or
lods
imul
or
push
inc
div
adc
outs
movs
inc
jle
cmp
inc
iret
dec
cmp
iret
es
rol
adc
mov
pop
idiv
inc
rol
dec
pop
das
loopne
mov
sbb
adc
mov
enter
xchg
sbb
das
std
push
out
push
push
xchg
jne
inc
clc
cld
call
mov
inc
shl
rol
fwait
inc
movs
cdq
pop
inc
xor
fistp
adc
and
mov
mov
aas
les
push
sbb
add
lock
push
in
ds
test
dec
ud2
ret
mov
xor
xchg
outs
sub
addr16
mov
and
add
sub
pop
dec
mov
jnp
shl
clc
sub
xor
jae
dec
push
push
shl
cld
jno
mov
push
int3
sahf
popa
(bad)
in
mov
jmp
or
mov
add
jecxz
add
inc
cmp
jnp
imul
jmp
and
nop
dec
adc
push
ins
clc
push
inc
lock
inc
cwde
pop
add
leave
inc
popa
imul
jl
mov
pop
push
push
inc
adc
idiv
imul
es
mov
inc
mov
repz
dec
jge
adc
pop
les
ret
fld
mov
cdq
nop
fwait
(bad)
rol
popf
mov
pop
pop
push
or
push
dec
or
sub
popa
xchg
retf
and
push
add
inc
push
sub
pop
sbb
sub
rol
pop
movs
add
xor
and
xchg
stos
test
xlat
and
lea
rol
mov
hlt
(bad)
cmc
sub
cmps
dec
cmp
adc
das
sbb
mov
sbb
push
jnp
pop
iret
hlt
bound
mov
iret
hlt
add
ins
hlt
pop
into
hlt
sub
inc
add
js
and
lock
lea
pop
jns
test
shl
les
cmp
leave
lock
ror
cld
pop
mov
push
sbb
fild
push
cmp
clc
popa
mov
add
shl
fdiv
enter
lea
clc
cs
mov
stos
push
adc
add
ja
outs
mov
fcom
aaa
fistp
dec
push
cs
sub
jmp
push
sbb
mov
repnz
add
jne
pop
mov
loope
ja
sbb
jb
jne
loopne
sbb
pushf
(bad)
call
inc
lock
pusha
fcom
es
sub
call
ins
fst
or
xchg
bound
je
fisttp
push
sbb
sbb
push
xor
cmp
add
into
cmp
xchg
pushf
or
and
and
mov
adc
test
in
rol
in
ret
bound
push
push
repnz
xchg
sbb
inc
test
enter
data16
shr
or
call
les
and
adc
adc
or
push
(bad)
mov
in
ror
in
lods
jmp
cmp
inc
daa
call
jno
aam
mov
push
sbb
lods
or
lock
mov
xchg
lods
clc
sub
clc
sub
adc
inc
movs
pop
dec
lock
adc
call
inc
and
cmp
movs
clc
mov
and
add
add
sbb
pop
test
lock
call
test
pop
fsubr
mov
pop
sbb
sbb
sbb
adc
pop
push
(bad)
mov
loopne
ins
ret
fwait
(bad)
cmp
add
repnz
loopne
sbb
pusha
shl
popf
or
push
pop
cmp
loopne
out
cmp
add
adc
add
xchg
rcr
or
mov
adc
mov
adc
add
sbb
fdiv
and
fwait
mov
inc
fimul
pop
add
add
enter
xchg
je
mov
xchg
rol
(bad)
loopne
leave
movs
pop
adc
call
aaa
aas
mov
push
dec
xchg
and
pop
fmul
pop
fwait
xchg
div
les
mov
xchg
pop
pusha
(bad)
enter
stc
pop
jmp
fist
ror
pop
retf
test
sub
add
add
mov
pop
push
adc
or
push
mov
push
test
fs
jp
repz
push
inc
or
inc
cmp
test
not
loope
lods
mov
test
icebp
nop
sbb
xor
(bad)
dec
dec
in
and
inc
or
pop
ins
outs
icebp
xchg
jl
add
repnz
mov
mov
sbb
fistp
scas
dec
push
mov
hlt
les
mov
imul
mov
push
add
cld
(bad)
cmp
pop
xchg
(bad)
xchg
add
inc
call
inc
adc
inc
push
(bad)
retf
imul
add
add
ret
xchg
jmp
dec
ja
dec
push
dec
es
bndldx
fcomp
adc
retf
div
sbb
int
ds
pop
es
and
mov
mov
add
(bad)
retf
jb
lock
add
lods
add
pop
fadd
cmps
xor
int
mov
xor
loopne
pop
scas
or
cmp
loopne
fild
and
and
push
js
adc
add
xchg
enter
dec
mov
retf
inc
loopne
sbb
inc
add
mov
xor
jnp
xchg
ret
or
stos
add
inc
xchg
shl
inc
cmp
dec
ffree
jnp
lahf
fdivr
xor
lea
inc
ret
dec
test
jns
loope
cmp
std
sub
add
fist
xchg
jb
pop
jp
arpl
rcl
ins
sub
js
adc
pop
(bad)
xor
cmp
mov
sub
and
sbb
and
mov
pop
gs
jno
fs
ds
out
cmps
cmp
push
sbb
test
jne
rcl
pushf
pop
push
test
mov
inc
loopne
add
data16
out
aas
je
(bad)
adc
iret
rol
push
pusha
ds
sbb
inc
xor
mov
mov
push
ja
inc
ret
xor
fs
xor
sbb
test
mov
mov
outs
fidivr
ds
inc
push
inc
inc
loopne
or
outs
vucomiss
rcl
xchg
dec
xor
fld
int3
rcl
jg
stos
adc
cld
ret
pushf
dec
jnp
and
xchg
in
mov
out
mov
adc
(bad)
daa
inc
fisttp
xor
jmp
retf
pop
clc
inc
add
je
rol
sbb
xor
enter
inc
retf
fs
imul
mov
ins
xchg
fcmovu
mov
xchg
daa
dec
add
jae
sbb
ss
test
in
fadd
pop
dec
push
push
aam
mov
cs
or
outs
pop
imul
aas
jbe
and
sbb
aas
or
inc
jmp
pop
fcomp
or
mov
or
push
outs
test
or
iret
test
in
sub
jnp
push
mov
data16
pusha
pop
cmp
pop
inc
cdq
sub
jecxz
movs
popf
push
jae
out
jmp
out
cmp
ins
loope
jp
inc
daa
test
daa
or
mov
push
xor
je
cmp
inc
ret
sub
add
out
or
add
xor
adc
je
pop
(bad)
pop
fist
retf
bound
aad
(bad)
das
and
add
pop
mov
adc
add
retf
ins
rcl
addr16
jmp
mov
repnz
(bad)
in
dec
arpl
les
push
sbb
lea
mov
sbb
lock
inc
xchg
cmc
sub
ja
fadd
mov
push
adc
push
ins
cmp
rcl
rol
sbb
add
add
scas
dec
mov
aam
dec
jno
inc
dec
es
data16
jecxz
and
mov
(bad)
mov
mov
xchg
sar
push
adc
jne
or
movs
sbb
push
push
inc
loope
push
dec
xchg
sar
and
add
xor
mov
push
or
imul
xchg
adc
push
pop
push
lods
lods
out
scas
add
clc
out
sbb
add
lock
ret
iret
int
mov
cmp
enter
and
or
cmp
(bad)
lods
xchg
popf
cmp
mov
mov
ss
mov
xlat
std
push
push
add
inc
retf
push
cmp
jmp
adc
test
popa
or
bound
jne
scas
(bad)
or
sbb
in
mov
pop
mov
cld
adc
push
fs
fmul
ret
pushf
daa
lock
and
cmp
push
movs
sub
ja
mov
push
adc
pop
mov
retf
add
jl
fldenv
ja
movs
aas
ins
jge
dec
xor
inc
inc
xchg
jne
fstp
lods
mov
jle
push
push
data16
dec
jo
test
movs
jmp
jl
pop
mov
adc
fdiv
cmps
pop
dec
adc
lea
test
xor
dec
inc
fst
shl
jb
mov
in
cmp
and
dec
cs
sub
xor
inc
and
adc
push
xor
lahf
push
(bad)
dec
mov
adc
aam
mov
int3
push
mov
mov
mov
add
movs
inc
addr16
and
adc
mov
fdivr
fdivr
pop
in
pop
jmp
push
cmp
pop
(bad)
in
enter
jl
inc
pop
int3
icebp
icebp
pop
inc
jg
add
js
add
push
push
in
cmps
sbb
sbb
cmp
daa
cmc
ss
add
inc
mov
jae
and
mov
sahf
add
pop
xchg
jne
dec
push
pop
test
mov
dec
pop
js
push
cdq
push
push
push
xchg
pop
xor
imul
dec
add
rcr
mov
cmp
mov
xlat
pop
and
sbb
daa
cmps
ins
push
jle
and
push
push
sbb
and
add
scas
add
or
std
inc
dec
jne
mov
mov
xchg
loope
add
dec
nop
mov
inc
mov
sti
push
es
in
inc
push
lock
(bad)
add
sbb
and
fs
push
mov
adc
dec
inc
add
adc
pop
pushf
sar
mov
ds
sar
repnz
xor
cs
pushf
imul
and
mov
add
int3
dec
add
adc
sub
inc
in
dec
push
les
fstp
sbb
js
icebp
sbb
or
outs
mov
sub
call
in
or
(bad)
push
inc
adc
scas
bound
bound
fs
loopne
cs
push
jbe
fadd
enter
ss
fcmovnu
mov
and
and
jle
add
(bad)
fadd
add
pop
xchg
sbb
mov
jbe
ret
(bad)
xlat
cmp
sub
aam
dec
push
pop
aaa
mov
cwde
loopne
fs
fdiv
mov
sbb
aam
je
push
sbb
in
loopne
repz
xor
push
out
mov
or
fisub
cmps
enter
mov
movs
cmp
jl
inc
cmp
jmp
test
lds
push
leave
test
mov
pop
icebp
push
rol
out
cwde
cmp
clc
jae
inc
jmp
mov
ret
dec
neg
ror
mov
pusha
add
fisttp
(bad)
xor
pop
in
xchg
jmp
push
adc
and
fwait
enter
mov
jnp
sub
fld
loope
dec
test
cmps
loope
sub
add
(bad)
dec
std
jle
in
adc
pop
sub
sub
add
fsub
adc
sbb
dec
das
sub
mov
loopne
pop
iret
add
(bad)
push
data16
sbb
add
ret
pusha
sbb
add
sti
arpl
push
mov
sub
add
sub
in
or
push
mov
mov
add
es
and
outs
je
not
push
mov
cmp
ret
mov
bnd
mov
add
sahf
adc
xchg
mov
add
into
mov
cmps
mov
cmp
pop
test
fdiv
or
and
xlat
clc
mov
sub
inc
and
push
push
test
sbb
dec
dec
ins
xor
pop
addr16
mov
jl
inc
test
fwait
sub
cmp
int3
inc
mov
push
lahf
rol
jmp
add
cmp
mov
pop
inc
sbb
sti
sbb
jge
ret
and
test
mov
sbb
sub
xor
fsub
add
jl
jle
aaa
dec
(bad)
in
and
add
jne
mov
pop
mul
mov
jo
mov
jnp
adc
arpl
cmp
ret
cmp
div
pop
push
cmp
or
adc
pop
xacquire
ror
mov
add
cmp
icebp
pop
jo
inc
mov
or
iret
lds
ror
fdivr
inc
popa
add
add
inc
xor
das
pop
mov
mov
mov
mov
inc
xor
imul
jns
add
inc
stc
and
or
daa
pop
mov
dec
jl
cmc
push
push
mov
mov
xchg
sbb
adc
push
lahf
or
or
dec
xor
and
aaa
push
ret
add
stc
xor
fcom
sub
xchg
push
je
leave
hlt
xchg
mov
daa
add
or
mov
push
fiadd
or
div
push
pop
mov
xor
iret
xor
xlat
jp
sbb
(bad)
cmp
cli
and
add
mov
retf
add
xor
sub
addr16
jo
gs
or
call
out
or
(bad)
add
call
imul
das
call
js
int3
and
addr16
mov
mov
add
stc
inc
imul
push
cli
leave
xchg
nop
ret
call
addr16
xor
inc
cli
cmps
es
adc
stos
dec
sbb
dec
jo
or
sbb
jl
in
cmp
aad
in
and
and
inc
xchg
ret
neg
cmp
sbb
sbb
push
push
xor
ret
(bad)
and
test
mov
and
xor
jle
hlt
fs
inc
mov
or
(bad)
adc
enter
mov
stc
xor
add
out
mov
add
inc
fwait
xchg
jbe
arpl
inc
outs
loope
adc
fsub
sub
fcom
in
mov
add
lods
add
add
ja
add
sbb
xor
into
rol
pop
cdq
inc
sub
mov
int3
cmp
jp
sbb
adc
das
pop
add
dec
ror
fcomp
pop
push
cdq
call
add
test
test
push
add
pop
xor
pop
pop
pop
mov
ds
cli
xchg
sar
push
jg
(bad)
inc
sub
push
and
inc
or
add
add
(bad)
push
inc
sbb
je
push
imul
mov
xor
jo
rcr
fs
fimul
cld
pop
push
dec
push
pop
mov
mov
jno
inc
shr
sbb
aaa
mov
nop
push
lea
or
xchg
ror
lds
add
pop
push
sub
cmc
inc
mov
fimul
xor
push
(bad)
lock
xor
push
sub
cmps
call
pop
sbb
mov
lods
pop
aam
loop
cmp
and
cmp
je
xor
push
inc
call
push
ret
ret
mov
cmps
test
repz
aaa
push
ffreep
shl
rcr
js
test
jne
sti
xor
jmp
mov
sub
add
add
sti
(bad)
adc
xchg
push
lahf
mov
test
and
push
add
and
cmp
pop
imul
jb
pop
out
add
mov
or
mov
add
sbb
ret
inc
retf
xor
fs
cmp
xor
cmp
inc
cmp
dec
pop
neg
xchg
jl
je
jmpw
dec
push
sar
or
xchg
add
jbe
inc
lahf
dec
mov
rcr
pop
jecxz
push
cmp
mov
push
adc
mov
adc
dec
int3
push
xchg
push
push
and
popa
and
jno
pop
not
pop
lds
mov
mov
jno
inc
or
dec
test
clc
jecxz
jae
add
mov
shr
sub
inc
jmp
lea
mov
std
mov
test
adc
add
push
shl
xchg
loopne
xchg
mov
mov
mov
add
cmp
or
adc
add
ja
push
pop
nop
iret
dec
inc
enter
dec
inc
dec
mov
fcomp
fnstcw
mov
push
nop
mov
mov
mov
(bad)
out
jo
loopne
xor
pop
dec
arpl
sbb
sbb
inc
cmp
mov
xchg
or
outs
push
jmp
xor
enter
adc
xor
push
or
test
dec
lods
rol
or
repnz
sub
xchg
push
or
(bad)
jmp
jns
test
push
cwde
inc
push
dec
cmp
xchg
aam
mov
dec
xor
jmp
mov
push
add
xchg
jno
hlt
hlt
pop
pop
adc
loopne
xchg
les
inc
inc
cmp
add
pusha
inc
add
imul
(bad)
aam
and
jb
lock
jo
mov
fimul
add
ja
or
aas
or
xor
push
fs
dec
mov
into
inc
mov
movs
sar
lods
jmp
xor
sbb
out
fidivr
cmps
int3
lods
adc
pop
adc
add
fisttp
ja
cmc
adc
call
pushf
jns
dec
add
add
mov
jno
ss
mov
jmp
das
test
inc
and
lock
lods
or
imul
sbb
xchg
in
out
or
push
mov
aaa
in
add
and
(bad)
push
test
aaa
mov
sbb
cmps
mov
call
leave
push
clc
rcl
mov
pushf
lods
addr16
xor
push
pop
adc
inc
mov
mov
add
test
dec
or
cmp
jge
adc
into
push
sub
adc
xchg
aad
xor
xor
mov
test
and
and
xor
add
or
sbb
jp
mov
push
test
jb
sub
das
push
sbb
jno
fisttp
inc
mov
cmp
cmp
xor
xor
xor
ret
aas
cmp
pop
lock
inc
pop
je
pop
xor
xor
cmp
xor
xor
push
or
cmp
add
js
(bad)
in
add
adc
inc
cmp
or
test
jo
push
jl
shl
lods
mov
fwait
popf
fcmovb
(bad)
and
sbb
jg
adc
cmp
jne
xor
es
mov
rol
mov
aaa
push
pop
xchg
or
fcomp
adc
add
nop
dec
adc
rcr
jmp
cmp
or
cmp
or
add
daa
sub
or
sub
fwait
sub
dec
mov
ins
fbstp
pop
add
outs
adc
loope
jl
(bad)
xor
loop
into
mov
xor
jp
fs
imul
test
pop
loop
imul
mov
jne
ret
xchg
adc
push
add
inc
rcl
or
push
push
add
cmp
popa
clc
cmp
add
xlat
mov
cmp
or
arpl
loopne
jecxz
pop
sar
xchg
xor
jbe
adc
sub
fwait
cli
mov
add
mov
jbe
push
adc
lods
mov
mov
xchg
cld
inc
xor
movs
inc
es
or
dec
jge
dec
dec
inc
pop
jp
inc
out
xor
mov
add
mov
(bad)
sbb
pop
test
sbb
xchg
pop
mov
test
rol
ret
cmps
loope
mov
dec
sbb
enter
xor
or
and
stc
mov
sbb
mov
cmp
pop
mov
in
scas
mov
fmul
shl
movs
int
mov
scas
mov
pop
dec
mov
mov
mov
loopne
iret
adc
and
je
xchg
popa
lods
in
sti
call
mov
inc
dec
and
cmps
sbb
add
push
in
add
or
sub
fmul
or
inc
in
mov
daa
cmp
mov
mov
je
jne
jb
imul
dec
rcr
or
mov
jne
mov
jne
push
push
add
mov
test
popf
sub
(bad)
xor
and
(bad)
dec
ror
or
iret
add
popf
gs
push
push
or
mov
mov
push
mov
sbb
out
cmc
mov
xor
outs
aam
mov
mov
cmp
aad
aam
adc
cmp
inc
popa
add
or
mov
popa
or
pop
idiv
inc
pop
and
jb
add
ja
or
outs
push
mov
lods
push
cmp
xchg
aaa
push
and
mov
inc
test
std
jmp
jge
push
push
les
push
stc
stc
stc
xchg
jns
cmp
ror
(bad)
imul
push
push
push
pop
or
add
ret
dec
push
(bad)
iret
add
rcr
rcr
xchg
std
ss
pop
std
or
outs
inc
xor
(bad)
push
sahf
inc
xor
jp
adc
sbb
fst
push
pop
adc
jg
mov
sub
fsubr
or
inc
adc
dec
push
in
pop
imul
jo
add
jo
fldcw
jle
mov
stos
lds
rol
cmp
mov
movs
adc
jecxz
sub
sbb
inc
ret
loopne
ret
fs
call
lods
ins
or
nop
add
push
push
idiv
add
or
and
shr
add
sbb
fimul
nop
push
mov
push
sbb
ds
and
push
je
add
fadd
pop
sub
xor
push
mov
mov
lds
loope
push
push
dec
add
add
dec
(bad)
mov
repz
jno
mov
and
or
push
cmp
jne
icebp
and
repz
sbb
lock
mov
sbb
add
jne
add
or
sti
mov
bound
push
sbb
xor
test
push
lds
xchg
loopne
sbb
cmp
shr
adc
fcomp
xor
jmp
jl
inc
adc
push
jo
inc
js
ret
mov
xchg
pop
inc
jmp
sbb
in
push
aad
clc
jge
push
dec
lock
mov
mov
push
and
push
push
int3
fcomip
out
repz
fild
push
fsubr
fmul
cmps
test
inc
fsub
sahf
repnz
pop
cs
outs
fdivr
neg
push
lahf
push
push
dec
ror
repz
out
push
inc
push
push
add
inc
mov
dec
cmp
cmp
ret
adc
mov
sub
push
pop
outs
mov
xor
mov
bound
sahf
daa
push
push
movs
mov
ret
xor
pushf
add
jb
xor
inc
fsubr
(bad)
xor
cmovl
pop
fsubr
jne
ret
and
add
shr
(bad)
fs
push
outs
sub
repz
pusha
sub
add
sbb
popa
ins
sbb
int
or
push
sub
mov
cmp
mov
xor
jae
nop
pop
popa
mov
and
dec
add
loopne
dec
xor
and
stc
mov
push
pop
push
push
test
inc
repz
cmps
adc
inc
enter
dec
jmp
sti
push
cmp
pop
and
adc
add
inc
inc
lods
inc
fdivr
mov
inc
mov
in
inc
nop
es
push
push
push
sub
pop
push
cmps
cmp
adc
hlt
outs
cmp
push
shl
jo
repnz
and
ds
xchg
adc
or
sub
leave
xchg
inc
xor
adc
repnz
and
and
inc
adc
and
call
xor
enter
and
fdivr
inc
out
sub
pop
push
or
and
loopne
push
inc
(bad)
sbb
jnp
jecxz
fsubr
pop
sub
rol
xchg
inc
and
popa
and
adc
pop
dec
add
pop
stos
adc
into
add
pop
outs
add
sbb
inc
cs
not
nop
mov
sub
xor
mov
inc
mov
es
mov
pop
dec
(bad)
test
dec
mov
pusha
dec
xchg
pop
dec
or
bound
push
add
(bad)
sahf
out
out
je
pop
push
shl
push
add
pop
push
and
adc
xor
movs
out
adc
shl
adc
sub
movs
push
adc
sbb
dec
arpl
jbe
ins
bound
inc
or
mov
dec
add
or
fdivr
or
or
sbb
popf
adc
or
cmp
or
ins
sub
out
std
xchg
push
or
fcom
dec
shl
movaps
in
push
imul
ret
or
daa
sub
inc
loopne
or
sub
mov
cli
or
add
sub
popa
imul
cwde
pop
or
test
pop
je
or
pop
stos
mov
mov
add
sbb
xor
adc
daa
dec
sbb
pop
lods
bound
add
out
lds
cmp
pop
je
aaa
dec
jae
fs
adc
dec
(bad)
cmps
imul
pop
xor
in
retf
and
or
xchg
add
gs
sub
inc
or
adc
inc
leave
stc
pushf
pop
ror
outs
lahf
xchg
dec
es
add
and
sub
or
dec
and
and
sub
sbb
or
push
pop
retf
dec
sub
jo
pop
out
add
pusha
pop
inc
not
out
wrmsr
sbb
mov
retf
imul
sbb
xlat
fbstp
add
add
ss
iret
mov
mov
sub
xchg
or
push
nop
jnp
(bad)
add
ret
sub
push
pop
mov
or
xchg
outs
sbb
fild
xchg
lock
movs
pop
adc
test
les
and
(bad)
sti
jns
fcmove
into
and
or
loope
cmp
mov
pop
or
mov
mov
lods
or
fiadd
and
iret
jno
push
inc
push
iret
push
xor
adc
cmps
dec
out
sub
xor
jmp
add
sub
pop
int
add
add
jge
shl
dec
cmp
in
daa
add
leave
mov
xchg
add
lods
out
adc
push
xchg
mov
or
pusha
fisttp
ins
jne
dec
lods
scas
inc
imul
test
sbb
add
das
repnz
fsubr
mov
les
mov
or
adc
ret
(bad)
lea
pop
retf
adc
xchg
dec
add
xchg
pop
push
or
add
pop
pop
pop
out
and
es
inc
pop
test
iret
inc
fimul
sbb
(bad)
adc
sbb
lods
push
jno
sub
or
add
stos
sbb
loope
lods
add
in
push
cmove
push
push
push
jo
or
(bad)
mov
jmp
out
and
dec
jo
mov
xor
push
aam
pop
ins
jmp
mov
cmp
aas
adc
nop
sbb
cmps
mov
inc
popa
ss
jl
sti
add
dec
or
push
xor
add
lods
jae
jl
loopne
data16
je
inc
jne
pushw
movs
enter
sub
jle
sahf
add
scas
(bad)
inc
add
add
add
inc
add
add
pop
adc
or
dec
pop
pop
xor
mov
mov
mov
mov
mov
mov
pop
inc
jmp
mov
mov
jnp
out
(bad)
out
push
sar
(bad)
jmp
jmp
jmp
jmp
and
loop
outs
xchg
hlt
jmp
jmp
ret
(bad)
fdivr
(bad)
(bad)
fcos
pop
sar
(bad)
fdivr
xlat
call
call
call
call
call
fcmovne
or
push
push
(bad)
ja
jo
dec
jg
dec
inc
fild
push
fadd
add
push
out
in
repz
lods
xchg
mov
or
push
dec
iret
sar
in
mov
sub
xchg
jge
cmps
fld
and
mov
test
sub
shl
jl
fwait
int
push
mov
push
ins
cmp
fldcw
jp
js
sbb
adc
imul
pop
push
and
push
popf
js
push
loopne
jnp
clc
dec
jnp
fcomi
(bad)
cbw
xchg
fsub
sahf
les
imul
fs
pusha
shr
call
or
jo
imul
cmp
xchg
fadd
in
je
pop
xor
push
pop
sbb
fwait
les
pop
dec
push
js
or
sub
mov
dec
mov
repnz
mov
sub
add
add
push
sub
in
add
add
repnz
inc
adc
add
jns
add
inc
loopne
xlat
in
xchg
adc
inc
or
add
das
fisubr
mov
shr
rol
jns
outs
dec
jg
nop
pop
dec
lods
inc
push
or
aam
hlt
push
mov
mov
xchg
dec
pop
xchg
in
enter
dec
mov
lds
rol
mov
adc
ja
je
pop
mov
dec
fisub
push
inc
outs
arpl
(bad)
int
jns
sbb
stos
pusha
mov
ins
repz
ins
lods
push
je
sbb
pop
dec
pop
iret
xor
enter
xor
repnz
xchg
dec
rcl
dec
pusha
xchg
pop
mov
cmps
dec
jns
ret
push
pop
sub
jl
push
mov
mov
rcl
inc
mov
push
push
xchg
jmp
pop
test
add
add
add
fs
add
repnz
adc
sbb
add
add
mov
push
loopne
scas
add
mov
mov
or
xor
adc
pop
or
mov
xchg
and
and
or
(bad)
push
add
push
mov
xor
cmp
pop
pusha
sbb
retf
(bad)
inc
inc
inc
inc
inc
inc
sub
dec
leave
ret
cmps
std
sub
aad
sbb
mov
cmp
push
mov
adc
mov
repz
out
pushf
mov
stc
cmp
sub
mov
fstp
mov
dec
lds
push
pusha
out
repz
(bad)
xor
fdivr
sub
jbe
cmp
sti
push
and
push
sbb
call
(bad)
mov
repz
push
cmps
push
lahf
out
sahf
je
test
sahf
ja
push
rcl
mov
pop
mov
push
and
nop
cs
sahf
div
test
rcr
iret
xchg
or
push
mov
or
lods
out
popf
in
(bad)
cmp
ret
data16
push
je
sub
fldcw
push
loopne
fcom
add
fs
mov
je
push
movs
push
adc
jge
iret
xor
mov
loope
(bad)
mov
imul
mov
ror
dec
mov
dec
jo
ss
data16
push
add
push
mov
fidivr
or
mov
push
inc
pop
and
sbb
outs
mov
mov
cmp
data16
add
inc
push
or
and
mov
cwde
lock
icebp
lock
add
add
pop
mov
push
or
aaa
jo
sub
push
mov
daa
xchg
(bad)
cmp
int
les
fidivr
sbb
cmp
adc
popf
in
fwait
or
pop
clc
in
test
pushf
push
mov
sbb
or
adc
pop
xor
jl
hlt
jmp
xchg
inc
xchg
and
lock
leave
ins
cmp
mov
or
mov
ja
fild
pop
pop
mov
ins
mov
jmp
jmp
sbb
or
sub
enter
and
es
les
add
enter
call
cmps
repnz
cld
ins
jne
sahf
out
sahf
test
jo
sar
test
mov
mov
lods
pop
mov
push
push
pushf
push
cmp
stc
stc
dec
mov
out
push
sar
nop
add
js
fwait
int
mov
or
mov
rcr
add
xchg
adc
xor
and
scas
push
aad
and
lods
or
test
mov
or
or
inc
or
dec
push
dec
test
call
fsub
and
ins
or
sub
sbb
sti
mov
inc
mov
pushf
and
aas
push
push
mov
xor
pop
push
sub
or
outs
sub
add
mov
add
mov
pop
sbb
sbb
fiadd
dec
jne
xor
cld
jecxz
or
sub
cmp
adc
pop
in
xchg
sbb
cmp
dec
divps
push
or
loope
sub
addr16
daa
inc
popa
ins
ins
adc
pop
repnz
lods
dec
sbb
dec
inc
gs
ins
sub
and
xchg
mov
daa
adc
cwde
sbb
xchg
inc
push
inc
pop
outs
pop
das
daa
push
jo
daa
or
mov
ins
popa
clts
or
xchg
dec
outs
lock
push
dec
mov
daa
push
mov
cmps
mov
scas
mov
sbb
adc
loopne
cmp
mov
dec
pop
or
push
imul
sub
xor
adc
and
andps
or
adc
push
cmps
push
rcr
or
adc
pop
xchg
xchg
mov
sahf
cmp
sbb
sbb
sbb
adc
adc
xor
fisubr
les
call
mov
jnp
stos
bound
mov
imul
call
out
ds
mov
ret
js
dec
loopne
or
mov
push
sub
daa
test
and
dec
inc
mov
adc
scas
sub
inc
test
outs
sub
push
or
adc
fistp
repz
mov
push
hlt
unpcklps
mov
shr
push
jp
lock
cmc
mov
or
add
shufps
popf
cli
xchg
je
mov
inc
dec
aaa
pop
jg
add
xchg
jl
inc
sbb
sub
sub
hlt
popa
xor
(bad)
adc
bound
jne
outs
xchg
rcl
sbb
jmp
jge
ins
or
aad
es
es
jno
or
in
add
or
std
cwde
daa
pop
push
xor
pop
adc
inc
(bad)
test
or
xor
shl
adc
sbb
xor
rcr
and
and
jg
xor
sub
sub
scas
push
push
jb
leave
push
push
pop
sub
inc
adc
add
adc
fcomp
push
repz
into
gs
adc
jp
je
sub
dec
fild
(bad)
xor
push
pusha
mov
cld
ja
xor
cmp
add
fs
sbb
call
bound
push
mov
inc
enter
push
inc
in
adc
mov
fiadd
loopne
sub
(bad)
mov
pop
movs
adc
je
jmp
cmp
retf
xchg
mov
sub
fwait
fwait
sar
dec
aaa
popa
mov
push
mov
push
ss
or
push
inc
jecxz
addr16
sub
adc
inc
or
push
iret
scas
adc
xor
pop
fadd
cmps
and
cmp
pop
xor
retf
or
mov
and
inc
dec
mov
jecxz
inc
(bad)
rol
inc
aas
push
mov
mov
gs
mov
xor
xor
(bad)
inc
add
dec
inc
mov
xchg
jne
push
push
jp
adc
mov
sub
cmp
sub
out
sbb
fcom
js
xor
aas
push
xchg
gs
dec
les
popa
jae
add
fisub
test
ret
pop
mov
mov
xor
aaa
inc
out
lods
mov
inc
and
fwait
jp
or
push
mov
inc
sar
push
pop
push
ins
ins
sahf
mov
lea
jecxz
pop
push
stos
ins
imul
and
imul
addr16
in
dec
or
or
pop
loope
mov
add
adc
mov
cdq
outs
repnz
pop
(bad)
fsub
jl
dec
jle
pop
movs
sti
or
retf
push
ins
loopne
push
sbb
xchg
dec
or
adc
cmp
pushf
cdq
add
sar
mov
mov
neg
xchg
inc
inc
icebp
cmp
sub
test
cmp
fld
daa
aad
xor
xor
out
ret
dec
or
je
lock
cmp
das
inc
test
mov
pop
adc
les
or
dec
sbb
cld
push
es
sar
jb
jne
mov
jbe
mov
sbb
enter
hlt
lods
dec
add
les
pusha
mov
xchg
not
add
call
add
clc
inc
push
popa
mov
mov
push
in
sti
ficom
sub
jge
retf
ins
or
sbb
inc
sub
fdivr
cmp
and
lock
jnp
xor
jmp
push
arpl
ror
sub
test
inc
mov
dec
inc
push
cmp
inc
cdq
jmp
push
dec
sti
or
dec
dec
dec
ins
or
sbb
sub
fs
adc
dec
movs
loop
sub
les
and
daa
in
add
pop
add
je
and
inc
cmp
arpl
ret
jmp
movs
adc
xchg
xchg
aad
icebp
popa
or
fcmovb
or
jg
pushf
jecxz
fdivr
(bad)
fdivr
cwde
cs
loope
cmp
pusha
test
dec
cmps
repnz
test
mov
mov
inc
jp
ja
or
xor
mov
outs
xchg
mov
mov
push
clc
ror
or
xchg
push
call
pop
push
pop
jno
or
dec
nop
pop
adc
nop
mov
xor
sbb
inc
inc
jo
dec
fadd
call
dec
lods
jmp
fprem
push
aam
mov
ret
and
(bad)
pop
sbb
or
dec
inc
loope
jecxz
sbb
and
mov
dec
push
imul
pop
ret
xchg
cmp
mov
std
push
inc
jne
and
mov
cmp
rol
rcr
sub
dec
jecxz
pusha
sbb
popa
or
mov
cmp
cmp
fisttp
fld
push
push
ret
fcomip
rol
push
push
and
mov
inc
cmp
sahf
hlt
adc
inc
and
and
lock
push
xor
out
dec
pop
rcl
or
invd
mov
movs
sahf
jge
pop
and
movs
test
nop
les
sub
jmp
push
inc
jmp
jne
add
mov
sub
lods
or
push
mov
push
pop
fidivr
lea
jmp
fisttp
push
xchg
push
xor
mov
shl
mov
inc
jo
jl
hlt
std
xchg
js
push
cmp
pop
enter
int
adc
in
push
cmp
cmp
sub
inc
mov
pushw
out
js
or
xchg
movs
jl
std
das
dec
aas
add
repz
jno
or
mov
sub
pop
fld
cmp
push
sub
daa
into
push
ins
mov
mov
xor
mov
popa
push
inc
sub
test
sbb
retf
in
inc
or
outs
and
mov
(bad)
mov
lods
add
jmp
xchg
add
jg
cmp
add
cmp
je
out
mov
ds
out
cmp
movaps
adc
into
(bad)
aam
or
rol
dec
sub
dec
or
mov
sbb
push
adc
or
jmp
mov
mov
cmovae
or
cs
push
jbe
pop
add
push
and
mov
fcom
cmp
or
mov
mov
mov
test
inc
jmp
leave
and
push
or
ficomp
pop
loopne
xor
call
pop
repz
(bad)
aam
add
adc
cmp
shl
jmp
xchg
mov
imul
adc
sub
dec
adc
mov
jmp
push
mov
enter
sbb
dec
imul
and
dec
sbb
icebp
push
pop
retf
std
xor
sub
or
mov
xchg
aad
adc
inc
pop
loop
fdivr
das
mov
test
xchg
jae
jo
xor
cmp
(bad)
scas
int
dec
pop
mov
sbb
clc
mov
mov
adc
cmp
rcl
mov
js
test
xchg
and
and
inc
xchg
fimul
fld
fcomp
and
stc
fstp
fwait
jmp
inc
and
out
test
sub
jle
data16
mul
and
sub
imul
push
add
ins
pop
sub
ins
sbb
add
pop
ror
inc
jp
outs
popf
(bad)
popa
jnp
pop
sub
mov
push
adc
pop
lds
xor
call
mov
xchg
loopne
mov
adc
loopne
scas
and
push
aad
lock
sbb
mov
mov
mov
mov
shl
inc
dec
jns
mov
and
and
sbb
add
xchg
xchg
fbld
lea
aaa
mov
jo
inc
push
inc
pop
sbb
adc
mov
add
mov
sub
pushf
push
sub
inc
clc
inc
dec
jmp
and
dec
mov
lea
push
call
(bad)
pop
push
dec
sub
add
ret
ficomp
dec
add
pop
jno
dec
and
or
mov
and
sub
add
pop
add
xchg
jmp
adc
int3
iret
sub
mov
jne
aaa
and
cmp
add
lods
mov
jecxz
aas
sub
adc
in
add
xor
mov
das
sub
and
jg
jp
inc
or
jb
add
sbb
cmps
jmp
cwde
pop
cmp
daa
in
cmps
das
mov
adc
pop
adc
adc
push
and
mov
mov
jo
and
push
loopne
cmc
sub
enter
rcl
sub
test
sub
jb
dec
add
adc
clc
adc
inc
push
pop
je
push
popa
jp
add
dec
test
jge
mov
jnp
arpl
xlat
mov
push
dec
aaa
rcl
sbb
addr16
inc
adc
push
cmp
das
push
add
cmp
cmp
push
clc
cmp
or
jmp
mov
add
cmp
xchg
dec
xor
mov
add
jne
mov
sub
retf
call
cmp
iret
cs
push
adc
adc
adc
sub
add
inc
mov
or
and
mov
cli
push
sub
and
js
stos
jae
mov
mov
pop
mov
repnz
and
daa
loope
jns
fist
add
je
cmp
ret
jecxz
fwait
rcl
repz
ror
and
mov
xor
add
jae
or
lea
imul
jmp
(bad)
xchg
retf
lahf
loopne
mov
xor
(bad)
push
pop
mov
mov
xor
lods
rol
inc
jae
add
add
sbb
sub
pop
push
adc
cmp
inc
push
jmp
inc
xor
push
or
test
test
mov
mov
add
inc
xchg
or
xchg
out
in
inc
lock
jnp
sbb
and
inc
jmp
dec
adc
dec
inc
add
and
cmp
adc
xchg
lock
dec
ja
or
pop
rcl
loop
hlt
dec
cmp
pop
jmp
aaa
adc
fsubr
push
test
mov
(bad)
pop
cmp
adc
outs
mov
sub
pop
sbb
in
jl
mov
inc
dec
lods
jmp
in
test
fld
or
jge
pop
lock
and
or
jl
(bad)
dec
xor
add
add
or
pusha
add
aas
shr
and
xchg
mov
mov
dec
cmp
ds
push
jns
push
xchg
aam
lods
inc
jecxz
or
(bad)
push
and
js
scas
xor
pop
shl
cmp
dec
xlat
daa
popa
and
push
adc
or
or
or
pop
retf
out
cmc
add
adc
mov
out
div
fild
jmp
cmp
je
mov
test
jbe
push
adc
xchg
out
imul
push
or
mov
xchg
adc
pop
je
dec
sar
mov
pop
cmp
cmp
imul
push
nop
add
cmps
pop
enter
movups
dec
inc
cmp
dec
in
mov
dec
adc
xor
push
mov
shl
jbe
adc
add
and
pop
scas
xlat
push
jl
cmp
loope
inc
and
sbb
movs
dec
inc
pop
fnstcw
in
mov
popf
mov
dec
repz
xor
clc
mov
add
ss
mov
dec
in
or
xchg
pop
sub
sub
adc
lds
pop
rol
sbb
pop
jmp
add
sub
cmp
cwde
mov
call
or
pop
cmp
inc
push
push
cmp
outs
pop
dec
dec
and
push
and
bts
ret
scas
adc
test
shl
ret
inc
movntps
add
or
out
pop
push
shl
and
and
pop
pop
or
xor
mov
sbb
xchg
inc
das
push
js
add
scas
cmp
push
or
cmps
cmp
xor
mov
dec
test
xor
or
(bad)
retf
idiv
clc
add
cmp
adc
push
push
and
mov
add
in
jb
sbb
popa
mov
push
add
je
pop
xor
sbb
mov
icebp
mov
es
and
pusha
inc
retf
jle
push
pop
add
jp
jmp
cmp
mov
adc
lods
add
mov
mov
arpl
mov
imul
cmp
or
cmp
movs
push
mov
pushf
div
rol
mov
fld
adc
je
push
fs
cmp
test
lea
ret
setno
adc
push
leave
or
cmp
or
push
outs
push
inc
jbe
enter
push
fidiv
dec
inc
add
inc
dec
xor
cmp
cmp
das
cli
in
sub
xor
or
push
sbb
movs
lds
aaa
push
or
or
lds
fwait
iret
ins
push
add
and
cmp
je
push
mov
push
xchg
pop
mov
push
not
push
fiadd
arpl
bnd
or
lods
cs
rcr
xor
mov
dec
add
pop
pop
push
and
xor
cli
ds
fdiv
mov
push
xor
xor
adc
fs
or
xchg
je
cli
dec
loopne
add
dec
dec
push
or
aaa
xlat
sub
push
arpl
lods
sahf
ret
std
push
pop
xchg
cmp
ret
sbb
mov
add
and
seto
pop
and
mov
call
loopne
in
in
sub
xchg
loop
mov
and
fcom
mov
inc
xchg
lock
dec
nop
sbb
cld
in
xor
fbstp
neg
xor
pop
(bad)
pop
dec
and
push
je
cwde
or
dec
jle
test
std
sub
arpl
adc
cmp
jne
jmp
sub
je
cmps
jge
inc
je
sub
scas
inc
dec
push
push
dec
add
or
jle
dec
pop
cs
(bad)
or
test
fdivr
dec
enter
dec
and
inc
jbe
xchg
hlt
ret
inc
ret
sbb
and
push
or
dec
clc
cmp
push
fs
enter
js
inc
inc
mov
mov
movs
xchg
mov
lahf
retf
inc
add
movs
and
jmp
and
mov
xchg
dec
pop
(bad)
or
jle
cmp
out
nop
test
cmp
ret
cmp
sete
push
cmps
ins
arpl
or
scas
mov
dec
popf
mov
or
jmp
adc
adc
lds
cmp
xchg
or
dec
mov
mov
outs
fs
sub
scas
out
imul
rcr
and
(bad)
xchg
jg
enter
and
ins
pop
lahf
and
inc
pop
pop
mov
dec
and
push
sbb
inc
dec
das
jo
sub
pop
dec
xor
das
xor
rol
loopne
mov
rol
jbe
cld
inc
inc
retf
inc
dec
cmp
push
adc
daa
push
xchg
mov
pop
ins
dec
add
push
inc
and
dec
or
sbb
popf
cmp
pop
ja
pop
je
adc
cmp
and
test
daa
lea
mov
mov
rcl
cmp
sub
aaa
jns
dec
inc
imul
cmc
aam
loope
inc
fnstsw
cmp
cli
clc
dec
and
hlt
mov
sti
lds
jecxz
je
out
mov
cmp
hlt
sbb
pusha
push
dec
push
outs
repz
(bad)
mov
imul
or
fmul
adc
mov
mul
inc
add
add
pop
xchg
sbb
adc
pop
fbld
sub
mov
or
outs
dec
add
add
fidivr
adc
mov
inc
sub
push
repnz
sub
adc
fwait
or
xor
pop
mov
lahf
cmp
xchg
lea
inc
ror
pusha
push
jmp
test
icebp
add
mov
aam
pop
mov
push
or
adc
add
xchg
nop
daa
pusha
jb
push
dec
imul
inc
ret
mov
pop
pop
movs
mov
fiadd
push
or
add
adc
andps
mov
or
push
add
stos
shr
mov
add
mov
sub
inc
dec
enter
inc
sub
push
test
sub
jne
pop
xchg
test
out
movs
rol
push
lods
(bad)
mov
inc
mov
mov
ret
and
dec
ins
and
retf
dec
popa
mul
bswap
mov
add
fld
add
shr
mov
add
cs
fild
push
mov
adc
push
ss
adc
outs
inc
add
xor
fld
jmp
sbb
sar
nop
scas
test
push
out
mov
add
jp
push
mov
dec
or
test
adc
ins
add
in
jl
nop
add
pop
ret
call
sahf
or
iret
adc
mov
adc
push
test
(bad)
nop
es
push
and
add
sub
je
cmp
(bad)
fnstcw
pop
push
add
fcom
outs
or
sub
adc
mov
dec
xchg
push
neg
sbb
(bad)
inc
leave
push
jns
pop
push
inc
jae
push
adc
sbb
mov
xor
cmp
ret
lahf
ins
lods
push
outs
pop
mov
test
add
loop
je
xor
or
add
xor
and
lods
test
ffree
or
out
adc
test
fmul
mov
push
xor
lds
push
adc
sbb
inc
lea
push
inc
inc
scas
cmp
clc
es
aas
cmp
aaa
sub
(bad)
mov
inc
js
invd
xchg
inc
sti
aam
sub
int
add
add
out
retf
clc
cmp
je
jl
mov
or
(bad)
or
pop
cmps
enter
pop
cs
push
and
fwait
xor
or
pop
push
add
mov
add
add
or
jbe
add
xchg
es
inc
add
dec
idiv
cmp
jo
add
popf
adc
jle
arpl
rcr
es
(bad)
fdiv
mov
and
dec
stos
leave
shr
sub
(bad)
mov
or
adc
movs
mov
enter
jo
outs
pop
je
in
fist
pusha
add
inc
mov
add
push
or
mov
clc
push
bound
or
sub
xor
jnp
add
push
or
ds
cli
xor
aas
and
cmps
cmps
movs
adc
inc
inc
inc
neg
sbb
jns
adc
scas
sub
psubw
and
push
jo
pop
xchg
xchg
out
push
jo
or
push
dec
pop
pop
or
dec
sub
stc
pop
inc
data16
data16
movups
lahf
mov
push
jbe
cmp
mov
sar
bound
add
xor
jp
jp
jle
add
xor
cli
xchg
mov
add
or
pop
cmp
outs
xor
mov
add
add
rol
or
jge
fistp
lock
je
loop
mov
xchg
dec
push
je
adc
and
fwait
mov
mov
outs
mov
xor
aam
jle
gs
dec
dec
and
or
mov
pusha
sahf
outs
add
dec
sub
imul
mov
push
push
push
rol
jle
dec
imul
xlat
jnp
and
test
cmp
(bad)
fmul
adc
popa
add
pop
and
bound
dec
xor
std
icebp
push
add
mov
dec
jmp
inc
nop
lods
(bad)
(bad)
sub
je
adc
pusha
mov
inc
lds
or
or
sub
or
push
jo
or
arpl
ds
mov
pop
dec
dec
inc
mov
mov
pop
and
push
das
bound
(bad)
or
js
mov
leave
sub
mov
dec
je
jno
ret
inc
mov
add
ins
mov
and
fsub
mov
sub
out
arpl
mov
jne
movs
or
outs
arpl
aas
adc
fs
mov
inc
adc
add
push
jno
ss
ss
sbb
loopne
xchg
mov
sbb
or
fld
test
arpl
daa
sbb
fwait
cmp
jmp
sub
iret
push
mov
leave
pop
das
add
test
pop
mov
and
call
movs
aas
adc
or
arpl
and
and
enter
ds
loopne
or
push
mov
jge
mov
push
js
xchg
adc
add
adc
dec
arpl
cmp
rcl
push
xor
or
mov
and
add
test
or
fadd
mov
inc
nop
add
adc
ja
add
sub
push
or
mov
lea
sbb
or
sbb
fst
or
push
adc
imul
jns
jmp
movs
std
sub
add
nop
cs
mov
xchg
add
fsubr
imul
cmps
fidiv
bound
mov
push
add
jne
mov
pop
jbe
adc
sub
adc
add
dec
and
inc
or
push
retf
loope
mov
or
lock
pop
enter
inc
fst
push
aas
mov
push
fucomp
or
or
mov
add
mov
dec
sub
es
sub
push
adc
pop
outs
add
dec
inc
mov
cwde
jl
mov
push
push
push
ins
push
mov
adc
inc
mov
sbb
add
mov
pop
or
mov
add
cdq
add
pop
es
(bad)
into
and
(bad)
nop
std
sbb
jp
cli
xor
push
nop
dec
cmps
adc
mov
push
cli
jne
add
scas
jle
pushf
shl
cmp
cmp
push
test
mov
mov
setns
adc
loopne
mov
lahf
shl
sub
mov
or
xchg
add
dec
test
add
es
jp
inc
adc
ins
(bad)
push
loopne
push
or
inc
daa
jge
add
ins
add
pop
jl
xchg
dec
and
xor
or
xchg
int
scas
pop
call
pop
add
adc
pop
jmp
sbb
aam
mov
push
movs
xor
addr16
mov
push
dec
call
push
scas
js
mov
(bad)
sub
cmp
push
mov
add
es
inc
sahf
(bad)
cmp
dec
popa
push
sub
out
aam
div
add
mov
xor
inc
cmp
inc
or
ret
shl
leave
nop
outs
mov
(bad)
call
add
add
dec
bound
mov
dec
clc
or
jne
aaa
or
and
jo
js
push
je
mov
or
and
out
or
add
les
add
cmp
mov
fimul
fmul
int3
(bad)
sti
and
mov
or
mov
pop
ficomp
mov
pop
fmul
mov
xor
retf
cdq
push
fwait
adc
das
int3
ins
mov
add
fimul
test
es
cmp
out
cwde
push
test
xor
jp
add
or
addr16
popa
loopne
dec
fimul
call
fcom
sbb
hlt
call
fistp
inc
rcr
ins
and
ret
(bad)
adc
xor
push
pop
std
clc
nop
xchg
int3
shr
mov
inc
outs
fadd
scas
push
push
jmp
mov
mov
mov
pushf
ins
jno
adc
adc
mov
fwait
hlt
jo
xchg
psrld
jle
or
fild
je
stc
dec
push
nop
push
sbb
syscall
cmp
or
dec
shl
push
adc
stos
pop
dec
pop
pop
adc
js
jne
sbb
mov
pop
shl
js
push
(bad)
ret
in
mov
(bad)
in
icebp
into
jle
mov
add
sti
inc
jl
pop
xchg
loopne
mov
cmc
pop
in
cs
mov
push
or
pop
cmp
xor
pop
mov
adc
sbb
or
test
mov
push
int3
and
mov
nop
push
cmps
adc
fisub
inc
sbb
stos
adc
and
sub
add
addr16
cmps
iret
adc
push
push
xor
add
rcr
push
pop
movs
inc
or
inc
xor
es
fwait
mov
out
xchg
xchg
(bad)
jae
ror
mov
gs
push
pop
xlat
cdq
xchg
ins
(bad)
xor
fdivr
test
add
cmp
or
cdq
and
cmc
call
mov
mov
js
pop
adc
pop
int
add
xor
movs
test
adc
or
push
jb
sub
add
sbb
shl
ins
into
sar
iret
ja
daa
adc
cs
cmp
stc
out
sub
sub
or
popa
jb
or
mov
sbb
pop
adc
dec
sbb
(bad)
call
cdq
push
popa
or
push
push
or
or
sbb
mov
add
mov
or
pop
jmp
sub
dec
jl
ror
add
push
or
adc
and
sub
cmps
mov
jb
or
hlt
pusha
mov
jne
dec
or
jecxz
adc
sub
ins
sahf
rol
mov
push
test
jge
xchg
push
or
inc
jmp
dec
xchg
xchg
je
jmp
or
push
ror
xchg
inc
sub
dec
ret
pop
pop
xchg
xchg
add
pop
ja
lahf
add
loope
retf
adc
out
imul
sbb
je
popa
(bad)
loop
ins
test
rol
call
adc
or
ja
mov
adc
aas
or
out
lock
inc
jae
inc
nop
mov
sar
in
adc
xor
add
or
imul
sub
cmp
add
pop
jmp
ret
ss
dec
(bad)
mov
inc
stos
dec
pop
repnz
sub
fild
jmp
or
push
(bad)
jmp
loopne
(bad)
xchg
fs
adc
cmp
jne
mov
pop
or
popf
int
sub
(bad)
mov
mul
adc
lods
push
movs
cmps
and
jmp
pop
mov
xor
iret
loopne
in
(bad)
rcr
push
inc
repnz
test
add
jmp
fcmovbe
push
dec
or
xchg
add
fisub
push
sbb
or
inc
xchg
mov
cmp
sbb
sbb
xchg
and
fist
xor
lods
mov
push
sbb
add
adc
mov
xor
pop
test
nop
ja
lods
sub
sbb
cmp
cmp
test
imul
push
lahf
push
and
je
dec
ror
sub
dec
shl
jp
jae
push
cmps
dec
or
movs
arpl
jge
adc
adc
add
leave
ret
popf
cmp
ins
ins
jl
fisubr
add
sub
popa
test
xor
push
add
adc
sbb
mov
jge
rcl
push
xchg
call
inc
add
sti
test
or
dec
jecxz
js
mov
adc
mov
js
aam
sbb
adc
nop
rol
mov
ret
aad
dec
pusha
loopne
movsx
or
fdiv
adc
xor
mov
or
add
adc
cmp
ds
dec
add
mov
pushf
inc
retf
jne
imul
push
enter
sbb
cmp
dec
jmp
movs
fwait
addr16
cmp
inc
push
add
aam
add
or
gs
sub
dec
inc
fild
cmp
xchg
lock
lods
outs
dec
xchg
lea
cs
and
sbb
ja
add
adc
ret
pop
inc
sub
cmp
repnz
loope
imul
jno
add
leave
in
dec
scas
inc
push
lahf
add
dec
lahf
outs
sub
xchg
and
fiadd
enter
mov
pop
movs
arpl
pop
cmp
sub
bound
ror
daa
pop
ror
ret
pop
aam
push
shl
das
lods
ins
push
dec
or
mov
loop
loopne
cmps
mov
and
xlat
movs
enter
dec
call
pop
dec
xor
jne
inc
mov
sbb
adc
aam
mov
aam
xchg
in
nop
push
jmp
mov
adc
stos
jmp
sub
xor
jns
add
outs
xchg
aas
add
mov
out
mov
sub
xchg
fimul
pusha
and
mov
pop
sbb
ins
push
pop
or
add
iret
push
imul
fcom
mov
pop
push
pop
push
xchg
xor
mov
outs
jb
test
mov
mov
scas
push
lock
dec
jge
out
pop
xchg
push
adc
adc
test
push
adc
or
retf
or
dec
mov
icebp
xchg
je
mov
(bad)
push
or
int3
inc
sbb
xor
adc
aam
push
rol
push
shl
jne
add
or
fs
popa
popf
cmp
add
add
lods
push
fwait
push
jnp
or
jl
inc
add
dec
lods
mov
or
adc
or
retf
sbb
test
dec
or
sub
or
xchg
movntps
fst
adc
loop
mov
push
aad
retf
test
lds
add
sbb
imul
fwait
jg
xor
mov
dec
and
xor
push
repnz
out
pop
and
int3
mov
ins
sbb
sub
push
cmps
pop
push
sbb
inc
pop
dec
daa
and
(bad)
ins
ret
xchg
sbb
int3
push
das
adc
cmc
sub
dec
das
lahf
push
cmc
test
xor
inc
sub
cmp
rcl
dec
dec
daa
or
adc
mov
movq
mov
mov
fldln2
inc
dec
sub
pop
cwde
and
aaa
in
mov
dec
pop
mov
sbb
add
aam
lock
mov
aaa
cmps
pushf
cmp
cmps
je
xor
dec
add
dec
mov
sub
xor
push
kmovw
mov
hlt
or
dec
dec
push
mov
jecxz
mov
or
call
loopne
add
and
xlat
add
call
adc
clc
adc
or
loopne
je
push
xor
mov
sub
or
xchg
scas
add
push
rcr
push
jp
adc
pop
mov
aad
imul
adc
dec
mov
push
out
inc
and
jns
pusha
pusha
lods
add
or
cmp
lea
and
daa
sub
lea
inc
mov
jns
xchg
pop
or
and
and
aaa
or
enter
lds
push
xchg
cmp
not
add
pop
and
fisubr
adc
jb
pop
xor
lea
das
jnp
and
ret
lods
rcl
inc
mov
enter
shl
int3
dec
or
pusha
or
loope
adc
popa
je
les
cmp
or
add
adc
repnz
and
push
xchg
pop
push
dec
dec
mov
and
cwde
xchg
add
fld
fcomp
call
adc
inc
and
dec
test
mov
xlat
enter
enter
frstor
ret
or
mov
test
mov
les
mov
jmp
aaa
or
jmp
jmp
cmp
push
add
gs
test
inc
jle
fisttp
int3
cmp
add
or
hlt
sub
sub
outs
sahf
ja
adc
sbb
sbb
and
test
lock
and
out
aas
inc
aas
movs
dec
or
or
je
out
ins
mov
add
jmp
bnd
in
aam
int3
test
inc
ds
cmp
lds
rol
xchg
push
sub
repz
jno
frstor
call
push
dec
push
push
dec
pop
push
mov
dec
xor
mov
add
mov
mov
pop
pop
dec
imul
cmp
fist
hlt
pop
mov
out
aam
es
inc
jl
or
or
push
xchg
hlt
aad
adc
in
rol
ror
add
pushf
jmp
imul
pop
or
(bad)
pop
sub
popf
sbb
ret
ret
or
loope
mov
cs
leave
sub
jl
jne
xor
(bad)
or
popa
or
add
out
pushf
mov
rcr
mov
imul
pop
imul
lock
mov
xor
add
sub
adc
loop
mov
add
adc
mov
sbb
or
push
test
fst
sub
push
xchg
dec
sbb
inc
push
das
ja
push
mov
xchg
sbb
test
dec
xor
outs
xchg
mov
sti
cdq
mov
sub
(bad)
cmp
and
or
adc
(bad)
aad
mov
lods
add
pop
cmp
int
cmp
mov
cmps
fld
sub
and
arpl
retf
retw
lea
stc
(bad)
dec
push
adc
push
aam
pop
test
mov
lods
in
mov
adc
loopne
xor
lea
inc
test
pushf
into
fdiv
fisttp
dec
xchg
push
cmp
outs
xor
xor
sub
dec
sbb
aam
pop
gs
mov
jne
shl
xchg
mov
lods
les
push
sbb
scas
test
dec
cmc
cwde
xchg
xchg
inc
adc
test
retf
rcr
mov
ds
mov
mov
cmps
xor
xchg
add
into
or
(bad)
pop
jge
enter
fidiv
outs
sbb
xor
sbb
enter
mov
xchg
pop
int
jne
scas
jns
inc
or
(bad)
into
push
shr
push
jl
lahf
pushf
sub
xchg
cmp
rcl
add
outs
nop
xor
cmp
push
mov
cmp
ja
jmp
push
or
push
idiv
xor
daa
inc
repnz
or
sahf
shr
dec
mov
adc
dec
cld
and
pop
enter
hlt
xor
rcl
adc
and
inc
es
lea
mov
sub
icebp
push
retf
or
mov
out
dec
sub
adc
xor
lock
in
dec
inc
mov
sbb
fld
sbb
arpl
fxch
in
cmp
out
xor
adc
or
mov
pop
or
adc
xor
sub
xchg
nop
sub
sub
sti
mov
sahf
jmp
aaa
hlt
jmp
xor
loope
sbb
mov
sub
mov
sbb
fs
or
xchg
mov
bound
lock
mov
mov
and
inc
inc
jp
adc
or
loope
fstp
pusha
push
jne
aaa
xor
mov
jbe
rol
std
add
jl
add
pop
rol
jb
sub
xor
push
add
cmp
or
pop
add
ret
xchg
vcvtusi2sd
loopne
js
lock
scas
repz
mov
fwait
push
adc
popa
cmp
daa
popa
jns
in
mov
iret
pop
inc
ja
or
xor
adc
push
sbb
xchg
mov
sub
cmps
ins
xchg
lea
and
jp
rcr
push
mov
setno
fwait
pop
push
push
xchg
ror
cmp
pop
sti
inc
xchg
repz
das
inc
push
bnd
sti
cmp
jbe
stos
push
sub
xor
xor
inc
push
daa
ins
fmul
adc
in
inc
mov
pop
imul
add
pop
push
dec
dec
sub
or
push
stc
mov
lock
js
sbb
popf
mov
push
(bad)
out
sbb
sub
pop
loop
pop
cmp
jne
sbb
test
lea
ret
xlat
and
adc
adc
add
xlat
mov
jns
mov
or
adc
or
dec
or
xchg
mov
dec
xchg
je
hlt
sub
(bad)
cmp
push
sbb
dec
pop
les
not
cmp
(bad)
cld
fwait
imul
sbb
pop
dec
leave
inc
push
hlt
pusha
in
cmps
add
or
movs
into
jg
ror
sar
leave
inc
jo
add
push
pop
movs
push
stos
xor
sub
fsubr
sbb
js
loope
mov
pusha
ret
idiv
push
popa
(bad)
xlat
xor
inc
pop
test
invd
and
out
(bad)
pop
in
pop
retf
test
pop
cmps
fst
add
sbb
jl
sub
cmp
push
add
mov
ret
sar
mov
pop
inc
lahf
dec
or
das
or
xor
and
mov
mul
and
dec
lahf
mov
js
ja
imul
aas
and
adc
das
jbe
cs
xchg
shr
pusha
bsf
xor
sbb
jb
jnp
lahf
jge
cdq
cwde
push
mov
in
or
neg
pusha
push
out
lods
call
push
(bad)
pusha
add
std
mov
adc
hlt
jb
and
call
hlt
icebp
mov
inc
and
inc
mov
es
push
sub
pop
push
test
sub
inc
add
shl
dec
sub
mov
and
mov
sbb
xor
sub
mov
pop
cmps
sub
pop
mov
add
sbb
out
dec
or
cs
and
retf
add
and
fnstsw
adc
mov
xor
mov
and
sub
mov
xchg
mov
adc
mov
push
push
mov
adc
sbb
xor
jg
fucomi
mov
inc
and
dec
inc
fcmovb
std
adc
xor
ins
into
jg
sbb
mov
add
pusha
sbb
jne
push
push
xchg
icebp
cdq
dec
movs
or
inc
or
and
dec
and
call
imul
inc
dec
xor
xchg
add
or
and
bound
fwait
xchg
jne
test
inc
pusha
pop
jecxz
mov
or
(bad)
aad
in
hlt
mov
stos
pop
sar
sub
sbb
inc
xchg
pop
cmp
jne
inc
adc
xor
pop
mov
or
and
add
ss
sbb
iret
cmp
mov
aas
(bad)
rcl
pushf
jmp
(bad)
clc
repz
fild
adc
dec
pop
ror
mov
(bad)
xchg
sbb
jge
ja
and
add
stos
fld
pop
loope
pushf
pop
cmp
jle
and
fcomp
hlt
xchg
aas
and
or
lock
pushf
ret
mov
fild
mov
xor
call
xor
inc
add
dec
sub
adc
push
faddp
and
movzx
and
scas
xchg
and
jb
xor
adc
(bad)
in
ss
ins
inc
adc
pop
add
sub
mov
add
push
and
sub
shr
sbb
popa
repnz
jno
cmps
(bad)
sbb
and
(bad)
adc
lea
sub
(bad)
sub
movs
(bad)
xor
or
jmp
push
sbb
in
adc
(bad)
rcr
dec
cmp
or
and
inc
adc
pop
js
or
mov
test
and
or
dec
frstor
xchg
sub
(bad)
or
cmovo
ss
sub
pop
dec
mov
add
dec
dec
push
jb
add
xchg
mov
loopne
mov
adc
test
das
dec
inc
pop
sub
jmp
aad
mov
mov
jnp
inc
je
retf
and
and
dec
or
inc
mov
and
add
in
or
aaa
aad
ror
test
xchg
nop
shl
mov
adc
mov
add
jo
je
and
cdq
fistp
inc
push
mov
(bad)
aas
push
xchg
fimul
push
ja
push
(bad)
xchg
test
jns
add
out
adc
sub
mov
shl
iret
mov
fsubr
sub
add
test
push
jmp
icebp
imul
pusha
rol
stos
pop
dec
push
inc
dec
add
sbb
mov
add
inc
jmp
cs
sar
test
inc
fwait
cmp
or
cmp
repz
adc
leave
pusha
dec
jnp
adc
push
cli
or
dec
push
or
rol
shr
or
arpl
sub
jnp
and
aam
ins
mov
sub
out
sub
mov
mov
and
data16
adc
mov
fist
xor
fiadd
pop
and
lea
out
adc
inc
popa
mov
popf
inc
mov
jno
dec
lods
cmp
jg
scas
(bad)
stos
sub
mov
popa
jne
enter
or
lea
or
and
imul
add
je
mov
test
bnd
clc
test
pop
mov
das
pop
pop
mov
pop
mov
adc
jge
mov
fs
dec
pop
imul
add
push
lock
xor
fwait
jge
xlat
imul
pushf
ror
pop
mov
add
sub
jmp
rcl
nop
inc
jmp
stos
std
lock
or
test
jmp
(bad)
in
inc
pop
repnz
mov
popa
jecxz
fimul
ins
sbb
fdivr
cmps
jecxz
mov
add
aaa
xchg
out
adc
arpl
sub
or
xchg
adc
mov
sbb
xchg
jne
and
mov
arpl
arpl
inc
lahf
lods
and
mov
cmp
fdivr
outs
je
(bad)
out
loope
gs
dec
sbb
loope
mov
sti
fs
cmp
enter
sbb
sbb
push
xor
inc
inc
arpl
mov
inc
xchg
cmp
adc
adc
xchg
push
dec
inc
je
inc
jmp
jo
xor
lds
sbb
add
stc
mov
(bad)
je
jo
cmp
loope
retf
retf
ss
mov
and
pusha
add
sbb
sbb
add
ja
xor
ins
cdq
aaa
ins
adc
enter
or
or
test
lahf
add
(bad)
(bad)
retf
data16
and
sbb
xchg
je
aad
arpl
adc
mov
push
adc
and
jmp
and
fsubr
push
lods
xor
push
or
(bad)
daa
add
push
pop
mov
arpl
and
nop
mov
das
imul
cld
aaa
sub
rcl
push
in
or
add
sub
stos
(bad)
(bad)
das
mov
dec
clc
mov
sub
test
mov
inc
mov
aad
push
jo
add
push
xlat
hlt
sub
dec
and
mov
inc
push
call
add
inc
push
loop
lahf
repz
test
hlt
adc
mov
adc
dec
adc
xor
dec
adc
das
mov
test
test
push
cmp
cmp
test
mov
inc
mov
dec
add
mov
popa
and
test
loop
sub
inc
daa
ins
cwde
pop
pop
fs
scas
sub
clc
add
xchg
xchg
cmp
mul
xor
mov
loope
test
adc
adc
(bad)
push
inc
es
out
inc
xor
loope
les
xor
repz
aam
inc
adc
fs
push
inc
or
cs
shl
adc
ret
pop
loopne
daa
push
cmp
mov
call
pop
push
pop
sbb
or
movd
xchg
sbb
scas
aad
or
mov
pop
add
adc
cmp
shr
add
hlt
xor
sbb
pop
jb
add
or
vpavgb
movs
cli
pushf
ja
(bad)
adc
xchg
daa
fist
mov
je
jo
jae
fadd
mov
push
imul
dec
sbb
cmp
sbb
test
es
add
and
mov
mov
cmp
(bad)
jnp
and
les
push
sub
clc
xchg
mov
xchg
lock
add
loope
cs
add
std
inc
add
xor
mov
dec
es
sub
test
adc
dec
jo
fwait
mov
leave
xor
sub
cmp
adc
jnp
sbb
cmp
mov
pop
or
jno
clc
popf
mov
add
jmp
mov
repnz
sbb
ss
and
push
sbb
push
xchg
add
mov
pop
mov
mov
add
pushf
mov
xchg
(bad)
mov
imul
sbb
rcl
iret
xor
jne
inc
movs
xchg
push
dec
pop
inc
data16
add
pop
mov
push
inc
xchg
cwde
cmp
ins
xor
clc
or
and
out
sbb
or
inc
xor
outs
adc
ret
fs
dec
add
imul
scas
adc
test
pop
sbb
and
rcr
adc
cbw
mov
mov
and
out
adc
push
add
push
int
and
imul
cmps
and
pop
jle
cmp
ss
imul
adc
adc
sahf
fs
lock
inc
or
pop
inc
adc
inc
xchg
dec
imul
or
cmc
add
pop
sbb
cmp
out
out
inc
pushf
mov
mov
xchg
call
and
adc
pusha
dec
mov
jne
out
cld
sub
loope
xlat
sub
mov
sub
verr
sub
cmps
sbb
stos
inc
dec
jg
imul
pushf
cmp
in
and
stos
clc
cmp
out
mov
push
add
xchg
movs
pop
stos
jno
dec
cmps
mov
or
jnp
xchg
adc
enter
call
push
ret
rcr
or
inc
out
bound
xchg
inc
lahf
retf
in
dec
sar
xchg
sbb
rol
jmp
lods
add
mov
push
sbb
clc
fprem
clc
or
es
loope
jp
jne
bound
rcl
mov
push
neg
mov
and
in
test
and
push
std
das
stc
xchg
cld
mov
into
mov
sbb
xchg
cmp
mov
pop
or
xor
add
xor
lock
dec
(bad)
pusha
push
sub
xchg
test
xchg
sub
xor
test
pop
sub
mov
jno
inc
xchg
mov
lods
ja
cmp
ffree
mov
push
loop
neg
push
sbb
inc
xchg
push
inc
inc
dec
dec
dec
movs
vmovss
dec
ds
out
fidivr
fld
rol
pusha
xchg
fdivr
pop
lods
jns
adc
jp
mov
sub
test
(bad)
pop
arpl
fstp
loope
cld
sbb
inc
jmp
cmp
(bad)
inc
in
cmps
test
pop
xlat
movs
mov
pop
in
mov
cmps
aas
mov
inc
xchg
cli
xchg
rcr
xchg
stos
add
aas
and
push
jne
mov
in
and
movs
xor
push
or
aas
adc
sbb
inc
nop
inc
sahf
cmps
jbe
jg
mov
jmp
add
or
xchg
and
adc
xor
movs
shr
out
push
call
ss
cmp
jne
scas
inc
stos
fiadd
lds
nop
inc
movs
ffree
lods
sub
xchg
dec
cmp
sub
je
jmp
or
dec
mov
fs
pusha
lods
pusha
test
push
imul
dec
pop
nop
adc
adc
mov
jmp
(bad)
push
stos
sbb
pop
loope
ins
ins
jp
push
cmp
leave
sbb
shl
inc
and
lahf
mov
xchg
dec
loopne
add
cmps
shl
adc
push
adc
inc
pop
push
or
or
ret
or
ret
adc
push
push
or
aaa
push
dec
add
pop
mov
cmp
fidiv
sahf
cmp
or
(bad)
xor
ficom
jno
add
mov
retf
or
dec
hlt
jb
mov
and
dec
xchg
stos
imul
js
sub
lock
add
pop
movsx
lds
sub
sbb
jle
add
call
cmps
sub
test
ins
pop
inc
aaa
clc
or
arpl
and
test
scas
daa
scas
js
daa
scas
fild
stc
(bad)
xor
add
xchg
and
pop
adc
and
cld
ret
cdq
sub
push
adc
cld
mov
cmp
xchg
(bad)
mov
sar
movs
jmp
xor
test
call
ret
mov
push
push
mov
add
jno
xchg
jb
mov
jo
bound
xlat
shl
or
push
jle
xor
inc
ins
and
or
dec
and
add
stc
cmps
pop
les
xor
inc
rol
and
faddp
sbb
xchg
retf
push
retf
sub
dec
mov
mov
mov
mov
out
inc
jbe
sub
aas
rcr
mov
out
xchg
mov
das
stc
es
mov
inc
sub
lods
rcl
dec
jmp
int
ret
das
or
cwde
imul
and
and
enter
sar
loopne
xor
push
ficom
scas
dec
inc
minps
xor
add
push
push
pop
add
and
js
and
push
xchg
add
mov
(bad)
icebp
addr16
xchg
push
lods
and
add
arpl
push
in
jns
js
iret
aam
push
stos
test
jmp
(bad)
ins
mov
or
dec
(bad)
data16
mov
jl
xor
fld
aam
daa
cmp
add
and
mov
push
fs
add
ds
sbb
jbe
add
adc
jl
xor
fld
lahf
in
je
mov
mov
sbb
xor
adc
push
test
inc
xor
dec
push
add
fisttp
mov
nop
test
(bad)
leave
sbb
repnz
sbb
ret
push
dec
imul
loopne
sbb
cmp
sbb
or
pop
dec
gs
or
sub
dec
les
cmp
and
sub
sbb
lods
mov
pop
push
pop
mov
or
mov
push
adc
pop
das
imul
pop
or
test
in
adc
shr
pop
cmc
push
test
ror
sub
sar
push
mov
daa
sbb
xchg
jne
and
push
cdq
(bad)
mov
push
lea
inc
push
ja
sub
imul
dec
push
and
inc
sub
pop
ficom
push
xor
enter
xor
cmps
adc
stc
xor
push
fdivr
dec
test
mov
cmc
add
fstp
cmc
push
mov
adc
mov
cmp
scas
or
inc
rol
inc
or
ins
jns
scas
sbb
mov
mov
fisub
push
and
adc
les
cmc
(bad)
(bad)
iret
push
enter
iret
jmp
mov
mov
mov
fbld
adc
loop
and
aam
out
sub
cmp
shl
aam
mov
adc
add
clc
push
sub
cs
mov
and
je
push
pop
jo
push
je
rcr
and
cld
dec
cld
pop
test
div
ja
add
aas
mov
jl
sti
(bad)
and
retf
sbb
xchg
push
outs
(bad)
js
and
sub
xor
imul
add
xor
(bad)
loopne
pusha
and
adc
pop
mov
lock
or
or
add
cmp
jmp
sub
mov
or
or
sbb
popa
int3
pop
cmp
push
pop
es
pop
mov
fidiv
mov
addr16
jle
in
push
movs
adc
sbb
cmp
mov
lds
push
or
xor
sub
sbb
and
jo
inc
popf
js
pop
shr
int
inc
push
neg
pop
adc
cli
add
ret
(bad)
fdivr
push
call
sar
outs
data16
test
outs
aam
movs
adc
sub
std
push
xor
mov
pop
push
das
es
mov
adc
in
loope
cdq
lds
dec
jae
ret
and
jmp
dec
cmp
mov
jb
xchg
ret
movs
and
mov
je
jge
pop
jge
dec
pop
test
and
int3
jg
lds
and
mov
fist
lock
xor
ret
pop
jb
and
lock
mov
push
loopne
push
mov
xor
scas
inc
mov
pop
push
into
xor
pushf
sub
add
push
add
movs
bound
jne
xor
or
adc
dec
sar
xchg
jae
pusha
sub
js
rcr
cdq
(bad)
fmul
rol
push
gs
dec
fld
mov
loopne
push
cmp
outs
mul
add
ins
(bad)
xchg
int3
mov
nop
jle
xchg
loop
pop
je
dec
mov
adc
cmp
push
jb
or
test
inc
or
or
inc
dec
inc
fiadd
xor
pop
jg
ret
aaa
movaps
xchg
ja
ins
add
or
adc
cmp
adc
xor
pop
ins
or
sub
(bad)
push
(bad)
adc
int3
stos
jne
lods
test
ror
push
push
pusha
xchg
pusha
fwait
clc
adc
mov
jmp
jge
inc
retf
aam
jecxz
sbb
imul
rcl
or
adc
pop
shl
inc
ret
neg
jl
mov
jl
dec
sbb
push
add
push
sbb
sbb
sbb
and
push
lock
mov
mov
cmp
lods
mov
adc
xor
jmp
add
jg
je
clc
sub
rep
pop
loopne
adc
pop
jmp
add
jb
push
xor
dec
rcl
jmp
mov
fmul
out
dec
add
lock
inc
push
mov
add
xor
in
cmp
adc
jbe
gs
pop
cmp
fisub
push
pop
or
pop
(bad)
push
sub
adc
jmp
add
ds
add
adc
cmps
movs
cmp
add
push
ret
sub
inc
pop
add
pop
mov
xor
jne
and
dec
adc
fdivr
cmc
and
and
addr16
xchg
and
lahf
jns
out
sub
xchg
or
pop
and
or
xor
aam
adc
int3
add
rol
sub
or
xchg
cli
adc
adc
add
les
xchg
adc
rol
inc
or
push
cdq
outs
clc
lds
adc
adc
test
in
push
jecxz
aad
mov
fbld
mov
xor
out
cmp
je
ins
add
arpl
inc
adc
push
push
mov
pop
xor
push
cmp
cmps
test
xchg
ja
mov
pusha
hlt
out
add
mov
pusha
or
or
add
mov
xchg
or
and
jnp
push
xor
mov
or
sub
xchg
xlat
push
and
sbb
mul
sub
call
ret
dec
jmp
pusha
(bad)
out
add
imul
and
xchg
int
and
sub
add
mov
nop
cwde
cmp
cmp
(bad)
inc
sar
push
loopne
hlt
mov
sub
daa
add
jo
dec
ret
xchg
sbb
jns
cwde
add
scas
xchg
pop
push
fwait
and
test
(bad)
(bad)
shl
daa
mov
test
rol
jmp
sub
and
add
ror
pop
fisub
test
lds
sub
mov
div
mov
xchg
xchg
popf
adc
ret
pushf
add
adc
or
ins
fidiv
push
ret
mov
ret
fistp
sahf
sbb
idiv
imul
das
lods
and
loope
push
pusha
dec
arpl
(bad)
jg
rol
push
pop
psrlw
imul
jo
rcr
scas
pop
int3
pop
cmp
or
mov
push
adc
xlat
fld
mov
add
push
sbb
sbb
sar
out
aaa
pop
or
mov
or
cmp
inc
cmp
fist
cmp
push
dec
inc
cli
mov
sbb
fisttp
cs
test
pop
out
add
daa
inc
sar
push
mov
cmpxchg
pop
adc
dec
sbb
pop
ror
and
mov
dec
ror
push
and
mov
fdiv
nop
mov
dec
clc
mov
and
pop
xchg
push
fs
cdq
adc
or
add
retf
sub
sub
cdq
and
or
jle
adc
mov
or
jmp
inc
lahf
dec
ficom
add
sub
jge
call
add
data16
cmp
aas
or
xor
add
and
add
mov
pop
xor
add
mov
ds
inc
shufpd
mov
add
xchg
or
or
or
fs
inc
loopne
mov
arpl
lahf
xor
ror
sar
sbb
int3
inc
mov
xlat
loope
retf
add
rcl
mov
dec
fldcw
xchg
cmps
das
mov
pop
pop
sub
inc
test
ret
xchg
inc
xor
adc
mov
push
mov
call
adc
je
push
aam
ret
push
xor
enter
push
test
push
xor
nop
cmp
sub
adc
imul
xor
xor
jno
sbb
jle
adc
push
sbb
push
daa
cmp
add
mov
das
loope
and
mov
je
add
xchg
mov
in
outs
mov
adc
push
and
dec
push
lock
mov
call
sbb
lock
pop
lds
sub
adc
cmp
or
lock
prefetcht0
pusha
dec
fmul
push
cwde
xor
fiadd
sbb
or
jg
lea
add
call
(bad)
dec
mov
loope
or
pop
mov
and
jns
in
hlt
lea
cld
jbe
sbb
aam
imul
lods
sbb
xchg
inc
sub
loope
sbb
dec
xor
test
xchg
pop
mov
pop
out
shr
mov
loope
adc
or
sub
outs
jl
sbb
ret
and
lahf
add
push
loopne
pop
jmp
psrld
adc
movs
imul
pop
enter
sbb
or
push
gs
or
ret
add
pop
mov
pop
mov
popa
(bad)
lods
pop
inc
mov
scas
call
mov
test
mov
call
inc
add
leave
inc
sub
dec
cli
xchg
scas
sub
sub
xchg
in
or
ds
sar
mov
sub
push
clc
clc
push
call
or
call
sbb
es
ror
push
sub
enter
sub
les
cmp
add
pop
in
dec
push
pop
les
add
pop
jmp
mov
das
gs
inc
fs
ds
add
mov
cmc
mov
mov
mov
pop
push
or
xchg
mov
cmp
sbb
jbe
jno
inc
pushf
or
cmp
imul
add
cs
mov
jbe
or
clc
or
shl
add
jb
mov
mov
retf
mov
cs
mov
dec
push
imul
add
push
sub
mov
loopne
add
pop
jmp
inc
in
push
mov
sbb
outs
jno
adc
or
loopne
adc
outs
das
cs
mul
push
mov
adc
add
int
jmp
cmp
shl
sbb
add
dec
sub
mov
ins
(bad)
mov
and
sub
mov
or
xlat
jecxz
mov
pop
mov
and
cmps
clc
cdq
out
into
adc
repnz
push
inc
(bad)
mov
xchg
sbb
imul
add
sbb
cmp
and
mov
call
sbb
movs
imul
clc
sbb
mov
aam
les
inc
xchg
fsub
sbb
xchg
push
lidtd
test
push
rol
add
mov
fdivr
add
pop
ins
les
jo
das
mov
jno
invd
jle
push
pop
cmp
mov
add
add
(bad)
mov
test
mov
mov
sub
xchg
jge
dec
inc
(bad)
sub
or
mov
jp
add
sbb
mov
or
adc
push
out
sbb
not
jns
mov
nop
loop
jns
sbb
inc
mov
sbb
mov
push
cmps
add
loopne
add
sub
lods
inc
shl
sub
fmul
pop
ja
xor
call
sub
inc
sub
sub
jmp
mov
shr
mov
push
lock
jne
mov
ins
aaa
pop
test
je
loopne
lock
ds
add
inc
dec
or
mov
enter
cmps
add
bound
xchg
jno
clc
inc
call
in
movs
push
imul
cmps
hlt
push
test
adc
outs
test
adc
nop
cmp
cmp
push
imul
mov
shl
add
movs
jns
or
mov
js
cmp
je
add
adc
xor
mov
or
lods
xor
push
cmps
dec
dec
repnz
les
jne
ins
xrelease
or
mov
xchg
shl
mov
ja
imul
rcl
fdiv
xchg
hlt
adc
aam
or
mov
cmp
dec
dec
cmps
cmps
(bad)
pop
inc
jge
mov
mov
ins
cmp
in
lock
xchg
test
(bad)
and
stc
int
or
add
mov
dec
sti
je
imul
pop
aam
(bad)
xor
add
das
call
fidiv
daa
lods
adc
add
movs
push
test
adc
das
dec
push
xchg
into
jbe
adc
sahf
xchg
(bad)
and
in
xchg
cdq
mul
add
call
inc
xchg
clc
and
sub
mov
ret
mov
xor
and
push
es
mov
cmps
mov
jb
out
aam
adc
pusha
and
pop
push
xchg
(bad)
mov
mov
imul
push
(bad)
stos
adc
inc
cmp
ret
pop
adc
add
pop
sbb
js
popf
and
sub
aaa
fistp
aas
shr
or
add
adc
repnz
test
cmp
inc
inc
inc
call
xchg
inc
test
ret
imul
adc
ret
lea
push
add
cmps
add
pop
and
push
lock
cmp
sbb
shl
sbb
sbb
nop
jg
loopne
fistp
xchg
dec
add
add
les
mov
push
cmp
inc
popa
jmp
mov
xchg
iret
hlt
cmp
add
dec
mov
pop
mov
outs
ror
push
xor
add
outs
les
nop
or
test
popa
lods
add
inc
add
stc
shr
dec
nop
retf
sbb
call
sub
add
in
jns
bound
jecxz
mov
popf
add
sbb
hlt
add
das
push
sbb
jg
xchg
mov
adc
repnz
or
stos
sbb
jno
push
rcr
jne
jl
lods
outs
inc
add
sbb
pop
cmp
xor
push
jns
push
adc
pop
sub
add
and
adc
push
sbb
jl
or
add
into
rcr
ja
iret
jg
or
repnz
adc
dec
inc
(bad)
ins
dec
(bad)
arpl
loopne
sahf
push
xor
push
lock
cmp
adc
adc
pop
and
enter
xchg
pop
jno
add
pop
dec
repnz
hlt
cmp
retf
mov
cmp
add
add
inc
ds
gs
pusha
pusha
adc
scas
add
add
sub
add
adc
adc
or
jle
movs
mov
call
jae
call
or
push
xor
sbb
pop
shrd
push
mov
sbb
dec
imul
test
pop
fs
loope
adc
cmp
or
cld
stc
fs
fcom
ins
push
test
jno
and
mov
addr16
jg
add
enter
sbb
sbb
inc
or
sbb
or
jns
movs
push
(bad)
jle
mov
mov
and
mov
mov
xor
call
sahf
sub
add
pop
push
shl
mov
and
sbb
push
mov
cmp
daa
sub
dec
jno
jp
or
push
jae
(bad)
sbb
add
repnz
or
adc
aam
pop
xchg
add
(bad)
in
add
sub
pop
dec
mov
sub
push
add
add
pop
lahf
jmp
cmp
add
inc
add
es
ja
ret
or
add
adc
cmps
xor
movs
and
call
std
scas
call
test
call
sbb
ins
xor
cmps
push
in
lods
xchg
push
jg
sub
inc
jmp
sub
lods
and
mov
ror
sub
jmp
jle
mov
movsx
mov
cmc
add
add
push
sbb
xchg
adc
test
add
jmpw
std
out
mov
popf
adc
inc
pop
inc
js
jmp
cs
je
push
scas
rcr
cmp
inc
push
dec
enter
mov
mov
add
je
or
ffree
ret
scas
popa
iret
push
dec
xchg
(bad)
cmp
jb
loopne
adc
push
js
ret
ficomp
(bad)
ficom
or
pop
fist
gs
or
mov
ret
hlt
ret
mov
ja
je
push
jle
mov
mov
je
dec
retf
retf
test
add
cmp
xor
dec
aaa
out
and
dec
and
(bad)
popa
push
adc
pop
loop
cmps
pop
and
ja
fstp
or
push
xchg
pop
sub
(bad)
aam
dec
push
or
pop
push
test
or
mov
pop
mov
inc
mov
mul
popa
and
mov
ret
jg
mov
pop
jb
jmp
sub
mov
pop
bound
aad
mov
int
add
(bad)
(bad)
push
sbb
das
cmp
loop
dec
or
cmp
(bad)
fcom
dec
pusha
mov
cdq
add
mov
dec
mov
add
mov
lods
or
loop
inc
mov
test
popf
sahf
fldenv
outs
cmp
push
cwde
push
inc
clc
sbb
inc
fs
adc
jb
xchg
out
loope
sbb
pop
and
inc
sar
and
and
loopne
out
sub
adc
imul
inc
adc
cmps
repnz
mov
jmp
mov
push
push
ret
loopne
xchg
daa
inc
in
jbe
(bad)
xchg
push
dec
test
mov
or
dec
adc
sub
outs
aas
fs
ret
push
add
mov
push
inc
and
pusha
les
in
cs
mov
push
ins
push
mov
jmp
iret
xchg
cmp
test
mov
or
or
jl
ds
clc
stos
add
loope
adc
push
sbb
pop
sbb
retf
popf
(bad)
pop
push
add
add
mov
mov
mov
sbb
inc
clc
inc
add
inc
nop
neg
pop
aas
inc
outs
push
inc
add
or
inc
cmp
ja
por
dec
test
cli
and
lods
loopne
add
jl
stos
or
jo
and
add
jmp
dec
leave
sub
add
lock
ror
pop
and
push
pop
ror
and
(bad)
mov
(bad)
ja
pop
xor
jmp
add
inc
cmp
add
ja
fadd
adc
jo
mov
mov
cmps
aaa
pop
outs
cmps
loopne
mov
movs
outs
sbb
cmp
or
ins
daa
or
xchg
aam
inc
leave
das
pop
inc
inc
push
pop
(bad)
call
mov
sbb
out
mov
mov
adc
mov
call
fwait
jle
inc
cdq
sbb
hlt
out
mov
push
les
fisttp
inc
inc
cmp
and
mov
(bad)
addr16
ins
push
pop
jmp
sbb
cmp
mov
call
cs
cli
rol
retf
push
test
dec
shl
sbb
cwde
adc
popa
scas
sub
test
rcr
cmp
dec
dec
sbb
ins
dec
add
fs
pop
dec
nop
pushf
loop
call
rcr
sbb
fucomip
cmc
cmp
enter
jnp
shr
add
pop
test
jne
push
repz
retf
sahf
sub
and
in
in
icebp
call
jl
retf
push
jns
je
clc
loope
adc
mov
rol
imul
dec
sbb
les
sub
ins
add
cmps
mov
inc
xchg
push
scas
add
in
add
pop
pop
mov
shl
and
push
cwde
and
and
mov
jne
pop
hlt
sub
jno
sub
push
xor
jne
imul
loopne
pop
arpl
ret
jbe
dec
and
adc
mov
add
jle
in
aas
push
mov
or
dec
add
int3
push
hlt
mov
rcr
pop
sbb
pusha
dec
dec
leave
sbb
pusha
add
lahf
inc
fild
sbb
sti
add
jo
adc
dec
adc
sbb
pop
sbb
and
dec
or
adc
fs
xor
ret
retf
inc
imul
repnz
les
fldl2e
pop
or
pop
or
aaa
out
add
test
xchg
pop
or
dec
add
aas
adc
adc
xchg
mov
dec
daa
pop
cmp
mov
and
mov
arpl
xor
add
cmp
sbb
repz
and
add
les
xor
fcmovb
xchg
xchg
fstp
inc
xor
cli
pop
jo
adc
sti
inc
or
add
inc
push
push
push
mov
dec
ins
pusha
jg
add
leave
adc
add
sar
inc
(bad)
cmp
jmp
rcr
cmp
push
adc
pop
test
cmps
gs
aaa
or
test
mov
cmp
sub
or
xchg
clc
fs
fld
inc
add
clc
cmps
rcr
push
or
inc
fsub
cdq
push
call
aam
bound
hlt
pop
mov
inc
iret
sub
lods
neg
adc
xor
fst
stos
daa
icebp
and
shl
push
inc
ja
daa
lods
ins
mov
cmp
mov
inc
scas
push
xchg
sub
xchg
hlt
xor
out
repnz
out
shl
(bad)
jecxz
lock
or
clc
cmc
mov
in
retf
es
test
inc
jecxz
popa
inc
jmp
adc
jge
sbb
dec
push
pop
ror
je
test
mov
mov
inc
add
push
fs
shr
mov
jg
push
inc
test
rcl
push
ret
and
cmp
retf
xor
js
push
movs
or
jo
ret
fs
test
pop
scas
push
test
xchg
mov
and
std
mov
sub
dec
ja
das
jne
cmp
push
jo
inc
sub
test
sub
xor
mov
dec
mov
aam
pop
loop
sub
and
cmps
push
xchg
sbb
add
inc
jnp
push
into
push
dec
test
pop
or
stos
or
add
sbb
xor
sub
xchg
xor
fdivr
out
test
sbb
not
in
fsubr
cmp
jno
aas
into
mov
fmul
inc
adc
(bad)
push
push
scas
jmp
or
inc
dec
and
push
xor
loopne
in
and
mov
or
pop
rol
gs
int
jmp
push
sub
push
icebp
jmp
test
outs
sbb
add
pusha
or
popa
inc
dec
inc
aam
mov
and
cld
adc
data16
stc
ja
xor
or
loop
or
cmps
std
add
call
sbb
adc
cli
loopne
outs
mov
or
pop
adc
push
mov
adc
inc
test
xor
sbb
pop
mov
mov
bound
pop
test
nop
daa
(bad)
xor
out
or
or
and
push
int
sub
pop
cmp
cmps
jo
mov
shl
sbb
or
sbb
pop
sbb
and
sbb
loopne
adc
mov
dec
enter
adc
popw
test
and
sub
xor
inc
or
mov
or
fcom
repnz
add
add
sbb
xchg
xchg
mov
or
xchg
mov
mov
cmp
jns
out
xchg
test
rcl
aam
sbb
jbe
(bad)
clc
sbb
sbb
adc
ficom
sbb
mov
mov
pop
add
aaa
mov
mov
sub
aas
adc
pop
xchg
add
adc
and
jns
jg
ror
cmp
jp
jg
pop
(bad)
pop
pop
push
jg
cmp
inc
or
inc
add
fadd
sti
jmp
cmc
mov
jne
mov
pop
or
cdq
nop
mov
lahf
cld
pop
dec
jl
shr
adc
addr16
mov
call
push
cmp
dec
xchg
mov
jbe
(bad)
jle
xor
jne
pop
pop
inc
int
leave
fnstcw
add
or
xor
mov
sub
mov
sub
fstp
pop
test
lock
sbb
xor
add
xlat
inc
nop
rcr
dec
push
pushf
movs
pop
pop
or
and
sub
mov
xchg
xchg
push
or
imul
add
pusha
punpcklwd
push
jle
ds
and
inc
loopne
mov
mov
inc
pop
jg
iret
dec
bound
add
rcl
xor
pop
scas
imul
add
ror
jge
xchg
xchg
mov
imul
xor
sbb
mov
dec
hlt
pop
add
xlat
js
sbb
lock
test
jb
cmp
lock
pop
inc
jne
sub
or
dec
test
test
xchg
mov
cmp
lea
xchg
inc
ss
nop
jae
push
and
ins
add
imul
xchg
lea
imul
fild
outs
test
lea
or
ss
mov
cdq
out
pop
or
inc
sub
or
and
push
xor
ret
adc
pop
int
sbb
add
neg
xor
pop
sub
xor
xor
movs
jb
dec
clc
movs
into
mov
cmp
(bad)
addr16
push
mov
fisub
mov
mov
add
iret
add
sub
adc
std
fcmovnb
ins
jmp
cld
pop
xlat
je
xchg
lods
ins
pushf
or
aaa
xchg
mov
and
and
pop
dec
xlat
in
mul
push
in
dec
or
adc
jbe
sub
and
add
pop
cmp
pop
dec
pop
cmp
lock
inc
mov
inc
jo
xchg
pop
sbb
fstp
ja
add
inc
add
xor
ins
inc
or
rol
nop
in
or
jmp
mov
cmp
call
and
mov
push
add
pop
cmp
cdq
and
jb
mov
mov
and
xor
ja
xchg
and
inc
jecxz
xchg
stos
or
mov
jne
les
lea
push
ret
das
jo
add
dec
ins
popa
jmp
or
mov
inc
adc
data16
ins
das
adc
xor
pop
fcmovbe
cwde
ret
and
add
shr
push
imul
xor
ret
push
inc
call
lds
or
mov
push
xchg
mov
jnp
data16
ss
shl
xchg
ins
adc
les
push
inc
pusha
jb
jno
sbb
mov
add
sbb
pop
pop
cmp
dec
dec
push
lods
and
bound
ret
movs
sbb
or
bound
mul
dec
dec
sbb
push
push
or
test
ret
or
and
cmps
dec
add
or
sbb
jnp
cld
mov
mov
call
aaa
adc
add
clc
sar
jns
adc
or
pop
or
xor
fcmovnb
retf
or
jge
mov
pop
add
inc
xor
rcr
add
imul
xchg
movs
sub
shl
or
fisttp
jo
popf
push
pop
push
outs
sbb
or
sbb
push
or
adc
mov
movs
xlat
test
adc
or
int3
fiadd
jge
push
and
xchg
aaa
push
add
sub
fldl2t
dec
mov
pop
scas
test
movs
inc
in
imul
cli
adc
xchg
dec
aaa
(bad)
loop
push
dec
lock
sbb
inc
xor
pop
sbb
sub
mov
aas
xchg
loope
pusha
sub
ins
add
into
dec
sbb
or
sbb
sbb
fldcw
push
sub
js
cmp
adc
jb
add
sar
das
inc
push
xor
retf
adc
dec
pusha
out
div
pop
push
dec
repnz
(bad)
xor
test
fisttp
enter
lea
pop
cs
std
xor
ficom
or
push
out
into
push
into
jecxz
imul
nop
or
int3
sbb
xchg
fwait
jmp
pop
sub
or
mov
sbb
sub
inc
ja
or
mov
inc
push
das
pop
daa
ins
test
je
adc
in
lock
add
jo
loop
adc
adc
sub
add
adc
aam
mov
das
adc
pop
adc
shl
adc
ja
push
add
lock
sbb
push
adc
retf
sbb
and
or
mov
jl
sbb
jns
cmp
xor
xlat
push
imul
cmps
or
mov
sub
jmp
(bad)
xor
push
inc
iret
push
fld
data16
add
inc
dec
ficomp
push
fild
dec
inc
adc
xchg
sub
sbb
aaa
add
lods
sbb
out
mov
cli
stos
adc
(bad)
loopne
sub
inc
mov
adc
mov
mov
mov
cdq
push
and
es
push
cld
mov
lock
adc
mov
push
popa
push
pop
inc
sub
add
or
mov
mov
dec
outs
pop
in
in
stc
adc
xchg
push
sbb
sub
lock
or
mov
adc
xor
pop
sbb
xchg
mov
jmp
jne
sbb
adc
pusha
add
push
pusha
add
dec
pop
psubusb
jmp
lahf
push
pushf
cvtps2pi
push
rol
mov
in
and
je
and
scas
adc
mov
inc
sub
adc
sbb
lea
lods
in
add
in
sbb
dec
movs
addr16
jne
adc
push
mov
retf
xor
dec
jae
cmp
jne
pop
ret
pusha
cs
xor
(bad)
test
and
adc
add
add
(bad)
push
je
fistp
retf
mov
call
xchg
popa
xchg
and
add
adc
pop
mov
out
cdq
inc
xchg
adc
daa
push
pop
call
sbb
xchg
mov
lock
add
mov
add
(bad)
xchg
inc
sub
adc
cmp
(bad)
aad
sub
(bad)
or
jp
cmp
movs
add
push
push
mov
daa
push
arpl
and
and
pop
push
out
loopne
daa
adc
adc
dec
cmp
push
dec
jne
mov
shl
js
jno
fs
push
rcl
inc
inc
or
dec
fisttp
or
movs
sub
jns
inc
cld
(bad)
and
add
add
gs
addr16
adc
repz
fld
fsubr
test
adc
mov
test
ins
xchg
jae
mov
retf
inc
enter
mov
(bad)
dec
arpl
pop
inc
test
push
test
pop
popa
mov
adc
inc
jae
sbb
cmp
mov
or
call
movs
cs
gs
ins
leave
xlat
mov
or
cmps
cmps
push
outs
and
clc
or
or
cmp
add
rcr
xor
cs
or
in
clc
push
std
mov
xchg
adc
mov
pusha
pop
nop
fadd
xchg
ins
adc
in
push
push
jge
imul
xor
lock
ss
ss
es
add
lahf
and
jbe
dec
xor
or
add
and
dec
mov
xchg
(bad)
sbb
cli
push
(bad)
push
push
jno
and
adc
push
sub
and
cmp
loop
xor
daa
aad
and
jo
aas
test
mov
inc
fcomp
das
pop
shr
sbb
sub
jmp
and
xor
add
pop
ds
or
adc
jno
(bad)
sub
cmp
cmp
pop
movs
and
add
cdq
jle
xor
pop
jmp
retf
push
aaa
adc
mov
shr
push
or
das
test
push
push
shr
sub
jp
xor
cld
inc
jmp
stos
push
pusha
inc
aaa
mov
scas
iret
xchg
push
or
add
scas
loopne
lock
push
test
inc
or
xchg
mov
pop
mov
nop
or
add
or
fist
or
ins
pop
mov
mov
or
dec
push
pop
mov
sub
dec
enter
cmp
xor
add
mov
mov
jg
push
inc
inc
iret
push
push
sub
sbb
rcl
call
mov
je
lods
sub
pop
inc
cld
js
mov
xor
in
sub
test
adc
test
movs
or
cmp
aaa
ficomp
inc
inc
dec
in
or
adc
jae
and
sbb
pop
aas
xor
loope
cmps
retf
sbb
sbb
mov
cmps
or
push
push
jae
pop
push
test
or
imul
inc
mov
pop
imul
stos
rol
pop
inc
dec
mov
add
inc
outs
push
icebp
popf
hlt
xchg
sbb
ins
bound
adc
sbb
call
int3
mov
sub
js
movs
adc
hlt
inc
pop
adc
or
or
xchg
adc
jecxz
xchg
loope
mov
push
adc
dec
jb
mov
dec
pop
movs
sub
repnz
add
push
push
ins
pop
add
ss
or
dec
or
cmp
push
xchg
and
sbb
test
jb
push
lahf
and
call
test
mov
pop
jecxz
ret
(bad)
inc
add
dec
fmul
shl
sub
sbb
mov
imul
add
mov
mov
adc
inc
cmp
jmp
das
and
mov
sub
movs
mov
sti
test
cmp
mov
neg
adc
cmc
jnp
sbb
xchg
add
movs
fcmove
pop
sub
sar
loopne
mov
sub
or
inc
repnz
out
bnd
inc
dec
or
rol
xchg
mov
rcl
inc
js
lea
mov
loopne
mul
js
cmc
or
shl
dec
sbb
adc
in
adc
cmp
add
push
xchg
rcl
or
sub
mov
mov
or
inc
or
or
inc
or
inc
xchg
pop
pusha
mov
add
mov
std
push
push
icebp
ror
or
mov
pop
push
cmp
sbb
jg
inc
mov
sub
inc
adc
sar
ins
push
cmovno
jge
repnz
and
inc
sbb
mov
(bad)
push
or
and
aam
adc
mov
mov
or
pop
xchg
dec
or
and
push
popa
in
mov
and
cmp
sbb
or
fwait
sub
xchg
jno
and
xchg
add
adc
scas
add
call
jb
cmp
mov
fdivr
cmp
sbb
fs
add
push
in
dec
cmp
lods
neg
cwde
test
add
retf
pop
sub
test
mov
and
inc
sub
inc
lods
dec
(bad)
in
sub
dec
fcom
lods
pop
dec
lock
or
push
mov
pop
cmp
inc
sub
pusha
dec
fs
adc
push
pop
pop
call
and
das
aas
push
add
dec
push
mov
add
ins
enter
jno
push
retf
dec
enter
pop
xor
gs
dec
daa
mov
and
inc
xchg
imul
and
dec
dec
or
mov
das
inc
in
inc
pop
ins
lea
fneni(8087
ins
xchg
dec
jae
pop
imul
jno
jecxz
xchg
jo
cmc
sbb
push
mov
jns
jo
addr16
mov
mov
ins
add
jne
sbb
stos
push
int
push
lods
adc
add
je
jae
mov
ds
mov
or
push
shr
ret
mov
mul
mov
jmp
push
adc
xor
add
xor
hlt
mov
jecxz
ret
shl
mov
inc
pop
das
or
loopne
inc
and
xchg
push
popa
and
pop
cmp
sbb
cld
sub
fmul
sar
push
inc
(bad)
std
and
neg
add
dec
fld
or
hlt
mov
or
pop
jecxz
or
mov
or
and
and
sbb
std
cld
ja
leave
mov
(bad)
push
add
(bad)
adc
js
repnz
shl
popa
leave
pop
mov
mov
in
mov
xchg
xor
and
dec
add
jmp
cmp
sub
call
fist
jbe
cdq
dec
inc
and
pop
jle
mov
add
jo
imul
pop
fidivr
xor
ins
aaa
and
mov
scas
dec
bound
dec
aas
push
sub
push
test
dec
mov
cmp
or
packssdw
dec
xchg
push
mov
mov
mov
adc
data16
aaa
std
push
xor
gs
push
pop
cs
pop
mov
sbb
mov
mov
sbb
sub
jmp
addr16
sub
out
and
add
mov
cmps
iret
mov
push
in
lock
ret
push
jmp
call
add
jge
pusha
push
retf
mov
jecxz
nop
mov
lea
(bad)
xchg
sbb
add
sbb
lods
pushf
nop
dec
push
cdq
test
dec
inc
mov
or
out
in
mov
adc
or
or
movs
sbb
es
jnp
lods
pop
daa
and
mov
mov
mov
jg
and
out
or
or
popa
jb
ins
outs
lods
pop
enter
pop
rcl
and
push
mov
ins
add
push
and
push
inc
dec
shl
adc
push
add
cmp
call
sub
jb
sub
je
(bad)
and
paddsb
add
(bad)
cwde
imul
icebp
fist
adc
jno
pop
and
inc
sub
pop
mov
scas
add
jo
adc
lods
fadd
xchg
add
mov
and
in
movs
jb
dec
or
lock
sub
adc
dec
cmp
dec
or
jo
adc
pop
ror
dec
mov
and
enter
or
cmp
adc
push
push
movs
add
and
pop
pop
add
test
loopne
xor
sbb
imul
jns
cmp
add
outs
jle
push
into
adc
dec
mov
sbb
lahf
xlat
(bad)
mov
or
push
rol
rcr
push
fimul
outs
div
(bad)
repnz
xchg
dec
pop
xchg
cmp
imul
push
or
test
sbb
sub
dec
fcomi
push
pop
and
xchg
push
clc
pusha
adc
push
addr16
retf
push
nop
push
jo
cmp
push
dec
daa
movs
mov
pop
sbb
inc
adc
push
xor
out
push
add
ins
(bad)
jae
ins
out
adc
xor
pop
mov
daa
jle
push
jne
xchg
xor
iret
xor
xchg
daa
test
(bad)
inc
mov
dec
adc
or
fcmovbe
sub
cld
and
ficomp
sbb
sbb
push
cmp
push
fist
fcmovb
sbb
in
mov
dec
loopne
cmp
rcl
setne
aaa
sub
pop
movs
add
popa
sbb
add
and
popa
daa
jl
outs
adc
cmp
jae
adc
inc
outs
mov
jo
add
cmp
jle
hlt
adc
and
loop
push
lahf
add
or
inc
mov
test
in
xor
add
dec
pop
push
call
xor
cmp
or
push
lahf
sub
call
sbb
adc
js
aas
cld
ss
sbb
je
lea
fisub
jecxz
pop
inc
xlat
sub
out
retf
ds
mov
and
inc
add
pop
or
retf
enter
fisttp
fdivr
in
push
jmp
mov
add
pop
(bad)
in
repz
int3
shl
mov
jne
jns
add
jne
iret
ror
mov
or
outs
rol
dec
pop
mov
das
std
xchg
or
lods
loopne
xor
loopne
pop
xor
jmp
test
sahf
or
adc
test
adc
dec
mov
add
push
or
dec
xacquire
lods
loopne
sbb
and
add
idiv
pop
jg
dec
add
addr16
mov
test
test
add
rol
add
add
stos
mov
push
pushf
loopne
push
and
pshufw
xor
push
sbb
cmp
mov
add
dec
loope
sbb
xor
add
mov
adc
mul
leave
and
mov
icebp
shl
aas
push
rcl
mov
jle
rcr
xor
or
sbb
scas
and
fisttp
test
inc
ret
test
push
jo
adc
xchg
and
cmp
dec
out
add
mov
add
inc
popa
inc
jmp
cmp
fisttp
rcl
and
mov
in
xor
rol
sub
enter
sbb
imul
jecxz
or
lock
out
shl
mov
cld
pop
call
leave
loop
jae
xchg
sub
rcr
cmps
mov
mov
mov
inc
add
inc
cmp
jne
nop
sbb
and
sub
xchg
add
or
clc
pop
shl
sbb
lds
jb
hlt
sub
xchg
nop
rcl
ret
pop
call
xchg
dec
add
inc
jbe
pop
stos
arpl
cmp
xor
sbb
pop
sbb
inc
cld
outs
push
xchg
lahf
add
adc
adc
imul
add
ret
dec
mov
sbb
xchg
or
adc
lea
pop
test
sbb
inc
push
xchg
leave
add
lea
adc
cmp
shr
push
mov
push
add
and
or
cmp
mov
data16
or
or
or
xchg
sbb
add
ss
push
mov
jg
inc
jmp
push
xor
mov
sbb
sub
sbb
popa
sbb
call
push
inc
out
mov
xor
push
and
add
sub
xor
and
jmp
or
adc
add
ja
push
sbb
mov
add
jmp
inc
pshufw
and
fist
je
gs
push
jne
mov
lock
inc
cld
push
jae
aam
fdiv
jo
xor
scas
sub
stc
push
push
push
xor
jmp
or
or
adc
push
cld
push
push
leave
sub
out
imul
sbb
sbb
or
bound
xlat
mov
mov
xor
add
cs
sub
push
push
lea
jno
cmp
cmp
adc
xor
jns
leave
lods
call
mov
cmps
inc
mov
mov
pop
fisttp
push
fild
inc
cld
dec
mov
sbb
xor
add
cmp
xchg
popf
mov
dec
jg
ins
mov
mov
push
shl
mov
adc
jbe
imul
mov
in
scas
and
enter
mov
push
test
je
jnp
mov
mov
ret
loope
ja
mov
dec
mov
xor
and
ins
jne
mov
bnd
dec
xor
adc
adc
cmp
sub
jo
daa
nop
dec
mov
add
cmp
dec
ins
sbb
sbb
cmp
das
dec
push
adc
popa
sbb
mov
(bad)
inc
sbb
pop
mov
xchg
mov
push
stc
movs
dec
pop
div
and
mov
inc
scas
xchg
loopne
add
mov
pop
daa
repnz
add
dec
xor
sbb
adc
imul
dec
movs
push
fisttp
ja
sub
shl
inc
enter
retf
test
fwait
pop
inc
mov
xlat
mov
retf
adc
add
xchg
xchg
(bad)
sub
call
std
add
or
or
jmp
popa
fldcw
dec
ins
jne
push
jnp
dec
mov
mov
inc
jmp
inc
imul
out
jle
call
or
jl
stc
sbb
push
or
adc
and
mov
xlat
xchg
xchg
xor
adc
pop
add
je
imul
aas
or
cmp
or
ins
sbb
inc
push
dec
sbb
add
xchg
adc
mov
sbb
call
add
inc
add
push
shr
adc
sbb
xchg
ja
ret
push
std
std
xlat
add
or
mov
add
lock
dec
out
jno
jge
cmp
or
(bad)
pop
inc
aam
push
jno
(bad)
pop
aas
push
pusha
mov
xlat
xchg
push
ja
in
iret
adc
or
dec
xor
mov
xchg
mov
mov
mov
clc
add
add
xchg
ins
push
test
xchg
outs
(bad)
icebp
and
add
inc
pushf
daa
mov
jp
sahf
inc
cld
adc
mov
mov
mov
pop
aaa
sbb
das
aas
inc
mov
les
daa
jmp
cmp
jmp
fldcw
inc
in
js
jg
inc
adc
mov
and
cmp
jne
test
stc
or
and
dec
daa
and
cmp
add
shl
retf
leave
inc
sub
fld
lock
ss
lock
fstp
mov
out
imul
add
int3
add
push
sar
or
mov
mov
mov
cmp
pop
(bad)
pop
in
mov
movs
imul
mov
clc
dec
loope
xor
or
adc
xor
mov
cs
jb
add
add
add
sbb
shl
add
add
mov
adc
inc
shl
sbb
add
mov
and
add
mov
fs
and
sbb
push
adc
add
pop
test
mov
jmp
mov
xor
pop
inc
xchg
movs
sub
mov
adc
pop
inc
dec
mov
jo
cs
and
add
inc
not
adc
and
fs
or
loope
mov
fadd
mov
add
inc
lods
cmp
pop
fbstp
adc
or
add
xchg
out
dec
and
dec
sbb
xor
jbe
es
add
xor
jl
cmp
add
or
test
jl
test
lea
fstcw
fwait
data16
dec
cld
loop
mov
cld
fistp
data16
test
ss
sbb
rcr
and
mov
neg
mov
dec
push
or
sub
sub
out
shr
mov
adc
adc
addr16
(bad)
pop
push
cmp
dec
adc
aaa
sbb
xor
xor
sub
sbb
sar
(bad)
(bad)
fist
xor
xor
sub
sbb
jne
cmp
jb
mov
mov
xor
div
xchg
add
jbe
add
retf
sub
mov
js
ins
jg
shr
rcr
ror
fisttp
mov
add
shl
(bad)
push
outs
fistp
mov
imul
mul
cli
sub
es
(bad)
fisttp
shl
cwde
push
cmp
push
mov
rol
(bad)
ja
mov
mov
mov
and
inc
jl
xor
out
add
ret
or
movs
push
loopne
jmp
mov
das
sub
pop
cmp
cmp
repz
xchg
xor
mov
mov
ja
shr
ret
push
dec
push
push
or
dec
add
out
ficom
lock
cli
or
mul
loope
stos
(bad)
xor
jo
out
or
xchg
fcmovb
adc
mov
push
adc
fs
add
mov
cmp
pop
nop
arpl
and
test
sub
inc
dec
pop
ficomp
(bad)
retf
shl
and
or
ins
jmp
cwde
mov
fild
add
fidiv
mov
movs
mov
cdq
loopne
(bad)
mov
push
sub
and
repz
jge
loop
push
adc
or
out
repz
or
or
add
fs
add
cld
sub
(bad)
scas
dec
ins
mov
or
cld
pop
push
inc
dec
or
xor
push
add
adc
add
aad
lea
mov
mov
in
test
fiadd
or
adc
test
dec
inc
add
push
add
cmp
xchg
cmps
push
add
sbb
add
lods
loop
add
retf
dec
jmp
xchg
cmc
add
ret
push
push
ret
pop
or
add
ins
les
add
retf
stos
push
jge
jo
mov
fwait
mov
push
push
stc
lock
push
or
pop
mov
or
adc
fdivr
shl
xchg
xchg
psrld
jo
pop
loopne
pop
mov
ds
jne
mov
xchg
add
js
jo
ins
call
imul
arpl
add
push
out
jns
add
add
sbb
push
call
pusha
xchg
mov
pusha
fnsave
sbb
fdiv
ja
push
or
rol
xchg
or
iret
ret
cmp
popa
scas
or
scas
or
mov
mov
or
push
clc
cs
push
call
aam
(bad)
sub
inc
add
(bad)
fisttp
inc
mov
sbb
ss
sub
cmps
inc
pusha
inc
mov
mov
mov
and
inc
add
jl
(bad)
out
sbb
push
inc
loope
lock
xchg
test
dec
loope
(bad)
fs
les
fcomp
sbb
ror
(bad)
loope
cmp
add
cmc
shl
sbb
pop
mov
xor
sub
and
xchg
pushf
add
pop
daa
pop
cld
pop
jg
int3
push
movs
jmp
dec
sub
je
sub
or
clc
inc
mov
and
adc
sub
or
jbe
cmps
sub
ror
ja
rcr
iret
push
mov
jbe
ins
adc
xchg
out
add
sbb
enter
(bad)
cmp
add
rol
push
cmps
push
mov
dec
leave
mov
push
xor
addr16
in
neg
fwait
xor
daa
mov
ror
(bad)
aaa
jmp
adc
fucompp
fnstsw
test
jp
mov
(bad)
sti
sub
aas
(bad)
jns
pop
bound
cmp
outs
adc
enter
jae
arpl
add
push
gs
push
pop
mov
xchg
adc
test
push
(bad)
fsubr
gs
adc
dec
add
and
rcl
in
enter
enter
dec
aas
iret
sub
out
jne
dec
adc
sub
pinsrw
dec
inc
jmp
mov
sbb
in
and
aad
or
in
inc
mov
test
fmulp
sub
sbb
adc
movs
lea
cwde
xor
out
mov
push
dec
imul
movlhps
(bad)
adc
add
inc
call
(bad)
addps
int3
aaa
shl
call
ins
clc
and
std
jbe
or
fwait
and
ret
push
sub
data16
and
cs
xor
retf
jmp
aad
pop
sar
pop
adc
xor
fld
and
inc
cmp
fmul
loope
fs
adc
mov
adc
lock
adc
xor
or
mov
xchg
sbb
xchg
xchg
lea
imul
or
js
gs
inc
jle
sbb
inc
lds
adc
in
push
iret
adc
mov
in
or
cmp
jbe
xlat
pop
sub
add
repz
mov
ror
inc
push
mov
or
push
sbb
pop
dec
and
(bad)
ficom
mov
inc
iret
push
sub
dec
call
inc
add
movs
and
aas
icebp
xor
fmul
ffreep
jne
xchg
adc
mov
das
pop
outs
mov
retf
shr
retf
sbb
ret
js
jg
adc
and
jnp
jmp
cmp
into
push
adc
mov
call
sbb
shr
pusha
cmps
push
fwait
adc
and
repz
cli
sub
add
es
push
push
push
inc
push
scas
xchg
pop
push
scas
and
push
std
sub
sub
xchg
add
pop
dec
aas
pop
in
jne
fld
add
cmp
sub
and
push
cmp
pushf
dec
in
or
daa
loopne
and
movs
lock
pop
movs
adc
inc
dec
push
loopne
and
icebp
sbb
dec
retf
fcomp
(bad)
ror
pop
pop
(bad)
in
dec
push
clc
or
jl
sbb
inc
or
sbb
cs
pop
in
loopne
aas
scas
scas
nop
add
(bad)
and
adc
inc
adc
out
or
or
mov
and
sbb
lea
cmp
push
mov
pop
push
cdq
add
sub
add
fs
call
sbb
dec
clc
xchg
fidivr
ins
mov
dec
mov
and
mov
inc
inc
inc
xor
push
mov
ret
push
leave
push
shl
and
xor
enter
push
xchg
push
xchg
aaa
and
outs
ror
sbb
int3
xchg
je
push
push
es
ret
cmps
mov
mov
add
ret
add
(bad)
cmp
das
xchg
push
mov
(bad)
sbb
sub
pop
movs
sbb
loope
ss
fld
pusha
cs
inc
in
mov
movs
or
inc
lock
lea
and
jmp
push
repz
scas
mov
inc
jmp
ja
jmp
add
call
dec
sahf
ds
out
dec
jmp
cmps
in
push
sub
loopne
add
jmp
xor
mov
or
push
sar
ret
and
mov
outs
and
jp
je
(bad)
jmp
leave
jle
jmp
or
imul
inc
les
jg
mov
jmp
add
mov
push
inc
pop
cld
pop
movzx
cmp
mov
or
dec
inc
cmp
dec
fadd
cmp
loop
pop
dec
cmp
or
not
add
dec
std
and
test
cmp
mov
test
clc
push
mov
leave
pop
cmps
add
mov
or
or
push
jnp
sub
push
push
add
and
sub
adc
shl
or
jne
sbb
push
jne
ds
inc
mov
cmps
jmp
and
jne
or
inc
jnp
das
push
jns
sub
cmp
loopne
xor
jb
(bad)
jmp
pop
movs
mov
pop
jne
test
sub
pop
jne
cmp
dec
in
test
cmp
hlt
and
cmp
je
cmp
or
and
and
push
movs
push
jmp
(bad)
ins
inc
add
inc
call
add
lahf
adc
jp
movs
add
jae
push
jg
xor
pop
or
(bad)
jmp
scas
lods
push
cdq
lds
push
pop
pop
inc
xchg
(bad)
repnz
and
sbb
mov
cmp
xchg
test
cwde
or
xchg
in
mov
dec
adc
mov
mov
adc
add
dec
push
ss
xor
dec
or
inc
dec
mov
xor
cld
inc
js
adc
mov
dec
add
or
jo
xchg
sub
in
push
ja
sbb
dec
je
pop
sub
aaa
lea
je
push
es
add
and
adc
xor
adc
sbb
mov
ret
out
(bad)
push
add
mov
xchg
xchg
adc
add
add
inc
loopne
sbb
popa
dec
mov
dec
xor
and
out
or
xchg
cmp
ret
fsub
lods
jne
mov
or
cwde
or
rcr
inc
xchg
outs
add
mov
push
out
aad
sub
xor
push
fdivr
and
or
mov
push
or
ja
mov
jnp
test
(bad)
jp
pop
add
and
mov
cmp
push
sbb
icebp
dec
call
dec
pop
sbb
add
sub
ret
jge
add
push
add
out
test
jle
movsx
sar
loope
mov
adc
dec
add
inc
sbb
mov
mov
or
pop
cmp
inc
add
push
mov
push
cmp
pop
stos
scas
daa
fld
and
or
jmp
or
and
add
adc
lds
push
sar
es
add
jecxz
pop
inc
pop
mov
fld
(bad)
dec
sbb
mov
ror
enter
pop
ret
jmp
out
add
push
or
out
cmp
cdq
(bad)
and
push
test
push
push
jp
and
icebp
push
push
es
sbb
mov
(bad)
xchg
mov
jb
cmp
int3
(bad)
ja
xchg
test
cmc
mov
or
or
pop
pop
inc
call
retf
xor
out
jle
jmp
sub
outs
enter
sbb
and
aam
sahf
adc
sbb
(bad)
(bad)
aaa
pop
xchg
cmp
push
jae
and
mov
add
enter
scas
jmp
shr
add
ins
mov
ret
adc
pop
add
and
sub
shr
inc
and
or
shl
adc
jnp
imul
dec
add
(bad)
popf
cmps
imul
call
pop
add
add
mov
or
or
sbb
clc
and
jp
ss
rol
in
cmps
cmp
add
mov
sub
(bad)
jle
std
mov
and
jecxz
inc
mov
inc
cmp
sbb
mov
into
add
xor
sbb
pop
and
clc
jnp
xchg
xchg
mov
test
xor
mov
inc
cwde
fst
and
lods
sbb
fcomp
push
mov
lods
rcl
and
xor
dec
pop
sub
loope
jne
cs
pop
das
pop
sub
jecxz
push
scas
hlt
movs
out
sub
cwde
sbb
cmc
or
pop
pop
(bad)
loopne
in
fst
sub
mov
pop
ss
push
stos
out
xlat
mov
mov
jg
push
adc
sbb
sbb
int
jecxz
(bad)
aas
call
inc
fwait
mov
cmp
adc
sbb
adc
fs
mov
aad
mov
add
cmps
dec
imul
add
cmp
jmp
shl
loopne
into
xchg
xchg
or
je
adc
jl
ret
and
push
lea
pop
jmp
or
push
add
lea
sbb
inc
movs
mov
adc
sti
out
mov
in
sub
int
push
std
movs
popa
dec
xlat
add
scas
xchg
mov
scas
cwde
scas
repnz
bound
es
(bad)
dec
sub
out
retf
cmps
xor
and
movs
and
mov
inc
mov
int
adc
add
dec
xor
icebp
iret
retf
lods
xor
and
push
mov
retf
mov
jmp
test
cmp
jl
rcr
jl
xor
pop
jno
gs
xor
ins
push
inc
(bad)
std
jae
pushf
jge
mov
mov
mov
mov
add
jecxz
sti
jmp
jle
in
sub
sti
cmp
sbb
inc
daa
add
add
arpl
pop
mov
pop
dec
push
inc
add
mov
mov
jmp
lds
cmc
sbb
in
lods
mov
es
rcl
rcr
push
ins
dec
daa
push
jge
inc
push
rcl
ins
pop
mov
jle
movs
lods
(bad)
stos
jg
rol
repz
and
and
xchg
leave
sub
xchg
and
into
push
rol
test
jne
jg
add
mov
mov
push
pushf
inc
jo
hlt
and
jp
dec
test
js
cmp
ins
xor
enter
mov
dec
loope
inc
and
addr16
not
and
cld
lods
and
xchg
adc
popf
int
ins
sub
das
jmp
mov
je
mov
fnstcw
inc
sub
mov
push
mov
xor
adc
pop
mov
(bad)
(bad)
(bad)
loop
jge
pop
(bad)
mov
sbb
mov
adc
loop
das
jl
(bad)
and
mov
dec
pop
out
ins
adc
jnp
inc
push
rcl
popa
loopne
dec
mov
xor
add
lock
cdq
shl
push
dec
jne
pop
mov
mov
add
sbb
mov
or
jne
test
xchg
push
xchg
push
pop
xchg
push
pop
sbb
dec
push
or
pop
sbb
mov
jns
or
mov
lahf
mov
add
cmp
cmp
xor
test
ret
je
sbb
inc
mov
mov
int3
je
or
or
pop
into
mov
push
mov
cmp
inc
adc
out
or
ret
fdivr
mov
sar
push
fld
add
jmp
or
or
xor
or
cmp
fadd
add
push
pop
pop
xchg
inc
and
adc
add
out
pop
jmp
xor
add
ret
js
and
xchg
test
dec
mov
pop
pop
dec
bound
(bad)
sub
mov
xor
add
xlat
imul
test
jne
pop
ror
out
fisub
jmp
ret
adc
push
jo
shl
out
cld
and
cli
rcr
test
cmp
jmp
add
dec
push
xchg
sbb
loopne
inc
lock
add
test
jne
cmp
sub
inc
sub
test
cli
jmp
mov
enter
movs
sub
jmp
inc
jg
cmp
aad
xchg
mov
push
sbb
dec
and
pop
cdq
fwait
cmp
and
lock
(bad)
mov
mov
dec
or
cmp
pop
test
add
inc
add
fwait
cmps
pop
push
repz
jecxz
rol
cmp
mov
pop
dec
sub
movs
or
clc
test
mov
neg
bound
push
cmp
jns
cmp
cmp
add
and
push
xor
mov
cmps
sub
cld
add
mov
add
sub
dec
cmp
cmps
test
adc
add
pop
or
xor
fld
add
inc
and
mov
mov
jge
mov
or
mov
mov
adc
or
adc
add
jp
les
ss
fimul
mov
or
or
mov
jecxz
pop
popa
movs
add
push
push
add
(bad)
lock
adc
push
push
sub
push
shl
pushf
pusha
out
ret
add
(bad)
clc
add
xor
and
pop
mov
sub
pop
dec
dec
lock
adc
inc
sahf
dec
or
mov
and
mov
adc
sub
pop
push
add
adc
adc
sub
push
dec
or
and
mov
sbb
stc
push
adc
hlt
or
movs
jne
sahf
push
rcr
xor
in
adc
clc
xor
or
cmp
and
and
je
adc
mov
adc
enter
add
mov
pop
fcom
ds
or
cmps
loopne
xor
xor
or
pop
ret
push
add
sub
sbb
ins
dec
dec
shl
ret
mov
daa
push
jl
aad
push
xchg
pop
inc
or
es
push
jne
std
add
out
imul
or
cwde
dec
pushf
mov
jge
popa
or
fs
pop
bound
inc
(bad)
outs
es
cmp
(bad)
xor
or
test
fcmovb
(bad)
cmp
jl
daa
nop
adc
adc
aaa
mov
mov
dec
js
(bad)
push
xchg
mov
shl
inc
xor
hlt
repz
or
call
pop
je
add
push
mov
(bad)
out
dec
jne
push
push
sbb
or
xchg
push
stos
or
sbb
mov
jmp
or
sbb
call
cmp
push
adc
pop
ja
xor
sub
cmps
and
push
cli
fs
call
inc
sub
jl
lods
pop
add
fsubr
mov
je
inc
adc
or
inc
or
inc
dec
cwde
inc
sti
not
push
sbb
push
xor
jno
sub
jb
or
out
sub
lods
ins
lds
jg
ja
dec
dec
pop
cmp
mov
mov
cmp
xchg
cmp
mov
or
jno
sbb
mov
pusha
sbb
dec
dec
or
mov
xor
sub
push
pop
add
mov
fwait
ds
jo
aad
sbb
cmp
adc
int
cmp
pop
xor
les
mov
inc
sbb
jns
push
les
cld
jae
mov
loopne
push
cli
push
and
in
sub
push
mov
or
outs
les
je
add
jmp
inc
rol
sahf
adc
sub
pop
add
neg
pop
test
inc
stos
fcmovnb
xchg
ss
outs
pop
cmp
loope
dec
je
shr
mov
dec
popf
xlat
push
or
mov
inc
add
sbb
ror
push
or
imul
mov
push
or
sar
and
mov
les
inc
inc
lock
adc
xor
add
(bad)
push
cld
and
push
pop
fst
ret
mov
call
hlt
cmp
cmova
push
mov
jl
fcomp
mov
inc
adc
shl
cmp
(bad)
sub
wbinvd
sbb
cmp
jl
push
xchg
mov
pop
adc
sbb
pop
xchg
scas
jbe
or
nop
adc
cmp
xor
xor
packsswb
jecxz
fbstp
je
push
mov
or
pop
fist
and
sub
xor
inc
lock
in
cli
jge
and
add
stos
mov
xor
push
push
inc
scas
or
inc
cwde
xchg
inc
cmp
mov
dec
pop
mov
scas
pop
ja
das
cmps
mov
adc
dec
pop
xor
cmp
rcl
jne
pop
adc
nop
xor
push
mov
imul
mov
jl
pusha
std
inc
sub
xchg
mov
movs
ror
add
out
outs
adc
clc
or
jbe
ins
int3
or
dec
push
pop
daa
mov
cmp
dec
or
pop
adc
adc
dec
push
mul
inc
aam
loopne
lahf
mov
or
add
mov
fistp
test
test
shr
clc
xchg
push
mov
sbb
sub
mov
mov
xor
cmp
psubsb
arpl
pusha
push
adc
or
push
pop
rcr
das
push
adc
cmps
cmp
sub
sbb
ror
sbb
jnp
pushf
cmps
or
xchg
or
fist
or
fmul
add
dec
mov
clc
sbb
or
dec
and
push
jo
pop
cmp
mov
mov
push
mov
aaa
enter
or
adc
and
inc
and
outs
xchg
pop
xor
sbb
loope
test
mov
cmps
test
adc
jb
pop
or
sbb
clc
mov
or
lods
mov
sub
inc
sub
adc
into
push
imul
inc
sub
mov
dec
ja
sub
push
pop
and
icebp
fs
nop
rcr
nop
int3
(bad)
xlat
adc
lahf
pop
retf
cmp
cmp
scas
ret
test
adc
jnp
jno
cmp
xor
stos
cmp
mov
fs
inc
pop
lods
and
xchg
lock
es
(bad)
fs
inc
add
icebp
imul
mov
push
aad
jb
add
shl
mov
setne
es
pushf
cmp
cld
and
push
dec
jo
pop
test
xor
and
js
add
cmp
xchg
mov
and
dec
test
or
or
jno
and
or
xchg
pop
stos
shl
jl
call
push
sbb
mov
dec
pushf
cmp
lock
jne
pop
mov
dec
push
jo
stc
or
out
leave
ror
mov
loop
repnz
repnz
dec
or
push
fst
and
sub
fwait
mov
jne
(bad)
mov
test
lock
add
pop
pop
jne
lea
inc
push
pop
cmp
cmp
rcl
lea
sub
jb
push
addr16
js
fsubr
sar
and
cli
pop
xor
dec
adc
xor
hlt
mov
loop
shl
fcomp
inc
dec
cmp
jge
adc
mov
(bad)
or
rol
pop
jo
adc
mov
inc
mov
cmp
xor
add
or
inc
jle
pop
lock
xchg
push
mov
fld
cmp
add
jmp
out
xor
push
cli
pusha
mov
jge
xlat
cmp
lods
(bad)
sbb
in
sub
pop
or
push
push
cld
(bad)
adc
and
and
and
in
lds
mov
jo
add
push
add
add
ret
test
sub
push
in
stos
lods
gs
and
and
pop
lock
jo
xchg
out
pusha
or
nop
sbb
xchg
adc
dec
push
push
int3
and
xor
dec
sahf
xchg
xchg
and
cmps
jp
xor
and
xchg
mov
adc
adc
cli
jp
or
lods
sbb
pop
add
ins
call
push
fisub
fisubr
cmp
cmp
sbb
jmp
push
xor
clc
add
jle
xchg
hlt
adc
dec
dec
loope
or
shr
enter
jecxz
jmp
loopne
or
sub
rcr
add
jne
cmp
fcomp
loop
aad
sbb
fs
jmp
jp
xor
lea
and
mov
mov
dec
adc
sub
jl
mov
jnp
and
jg
lea
xor
dec
adc
mov
sbb
add
je
sbb
icebp
adc
or
hlt
xchg
push
test
xor
push
jp
ret
mov
push
push
jl
ret
adc
aas
fucomi
pop
mov
pop
dec
outs
add
sbb
inc
inc
ins
in
pop
or
and
xor
push
push
push
psubsb
sbb
pop
adc
call
fwait
push
add
imul
push
or
or
cld
daa
(bad)
adc
inc
add
movsx
stc
sbb
add
sub
scas
(bad)
fwait
dec
pushf
push
xchg
jmp
mov
pop
adc
dec
and
movs
pop
cwde
and
adc
push
outs
imul
dec
and
pop
adc
dec
pop
rcr
sbb
adc
loop
add
mov
into
shl
aaa
dec
pop
jo
pop
push
push
adc
mov
mov
dec
cs
jg
add
and
cmps
nop
adc
cli
repnz
inc
mov
mov
in
iret
pop
sar
adc
call
and
pushf
push
xchg
xchg
aad
stos
push
adc
loop
push
aam
test
pop
repnz
repnz
mov
movs
pop
fisub
jno
cmp
lahf
loope
and
bound
push
or
pop
call
or
(bad)
inc
jl
mov
inc
cmp
fimul
test
rol
mov
xchg
dec
out
adc
(bad)
xchg
cli
add
out
add
fs
jge
mov
mov
ja
fld
adc
push
add
cld
cs
cmp
jo
or
or
sti
push
jo
and
call
sti
ss
jge
push
push
jmp
mov
adc
ror
shl
loope
cmp
jne
fistp
sub
mov
inc
clc
ret
in
xor
push
mov
ret
scas
repz
les
add
cmps
aam
outs
hlt
and
movs
inc
mov
(bad)
push
fs
jbe
xor
add
aas
mov
dec
add
or
mov
cs
mov
into
test
sbb
or
jbe
test
or
cdq
or
sbb
adc
rol
ss
pmaddwd
fidiv
(bad)
ret
inc
sub
push
and
int
outs
fs
mov
push
in
xchg
pop
sub
mov
or
gs
(bad)
cvtpi2ps
xchg
movs
push
push
mov
sbb
pop
in
xchg
dec
mov
mov
test
mov
inc
or
dec
mov
cs
mov
sbb
sbb
pushf
mov
xchg
je
pop
nop
rcr
sti
pop
jg
dec
push
adc
or
and
cmps
cmc
test
dec
xor
mov
movs
sbb
sbb
fdivr
or
push
pushf
push
in
aam
out
mov
nop
cmps
ret
sahf
ins
test
fmul
fmul
mov
mov
or
mov
mov
or
cdq
(bad)
test
mov
test
sahf
xchg
and
in
loop
aam
push
(bad)
adc
je
dec
mov
outs
mov
nop
fld
test
pop
in
inc
add
xor
dec
aaa
les
and
iret
jle
cmps
inc
pop
push
std
mov
sti
call
cmp
lock
or
or
sub
cmc
sar
push
pusha
dec
cmp
push
push
or
mov
imul
sub
jbe
add
pop
mov
mov
pop
cmp
push
rol
lea
rcl
inc
movs
jmp
push
std
rol
adc
sbb
sub
pusha
pop
dec
test
movs
shl
test
jne
push
sub
div
jle
mov
call
dec
xchg
cmps
add
outs
inc
jg
push
icebp
mov
cmp
jae
adc
into
mov
push
push
add
mov
sbb
aaa
xchg
adc
mov
sub
sbb
jl
test
xchg
fisubr
rcl
enter
sbb
jg
mov
rol
test
in
push
addr16
mov
or
clc
aaa
pop
cli
in
rol
arpl
mov
out
sub
outs
fwait
add
jo
je
gs
das
bound
lods
inc
loopne
sahf
mov
pop
xor
gs
mov
cmp
jne
push
lods
imul
gs
popa
and
xor
aaa
and
and
add
jnp
(bad)
(bad)
push
add
fs
cli
mov
sbb
icebp
fisub
mov
add
and
in
jmp
push
push
test
pop
(bad)
lock
sbb
add
inc
and
cmp
sub
mov
loopne
add
push
pusha
jmp
lods
mov
cmp
inc
xor
sub
adc
sub
test
pop
add
nop
sbb
adc
bound
add
mov
jg
gs
inc
adc
jo
mov
out
test
(bad)
cli
mov
add
mov
inc
or
je
sbb
sub
push
sbb
ins
sub
push
push
cld
inc
cmp
rol
inc
cld
sbb
int
or
int
mov
adc
cmp
adc
cmps
pop
pop
sbb
xchg
sub
add
out
sub
sub
cmps
mov
add
push
xor
fldcw
fld
or
cs
pop
and
pop
push
loop
add
or
jmp
in
in
mov
sub
ret
cs
gs
inc
add
or
push
fidivr
dec
popa
(bad)
ja
fnstcw
lea
cmp
and
or
add
add
push
sbb
inc
fdivr
lea
pop
push
pop
mov
adc
cld
stos
sub
mov
dec
loopne
and
mov
(bad)
sbb
mov
or
add
push
add
sbb
xor
clc
clc
push
sbb
shl
mov
or
jbe
xor
fnstsw
leave
add
xchg
add
xor
leave
js
aaa
push
mov
inc
xchg
add
dec
mov
ins
pop
add
imul
inc
push
sar
adc
mov
adc
or
loop
lea
out
sbb
push
mov
retf
ret
inc
sub
outs
sahf
jecxz
sub
mov
add
pop
push
jo
mov
dec
xchg
xlat
iret
mov
mov
dec
add
(bad)
push
mov
or
loopne
push
push
or
push
mov
mov
pop
jo
xor
inc
stos
mov
or
aam
shl
into
(bad)
(bad)
push
sbb
sbb
adc
(bad)
xchg
or
xor
data16
lock
das
(bad)
jns
(bad)
adc
sub
or
inc
rol
lea
pop
hlt
jmp
enter
stos
xchg
sub
mov
inc
jne
cmp
jne
inc
loope
sbb
jge
into
psadbw
in
cwde
aas
lea
push
mov
dec
xchg
dec
jne
dec
sbb
pop
je
mov
inc
nop
test
pop
pop
adc
xor
mov
or
inc
xchg
pop
and
cmps
sahf
rcr
dec
sbb
repnz
jo
lock
mov
push
outs
test
aad
add
cmp
fidiv
push
dec
dec
in
dec
add
inc
jl
fistp
cmp
jge
mov
aam
jge
jle
adc
xor
jmp
xor
xor
cmp
into
rcr
(bad)
loopne
push
stos
aad
fsub
lock
mov
ins
adc
(bad)
cs
pop
dec
add
rcl
push
stc
jo
pushf
shr
mov
(bad)
cmp
add
sub
call
fstp
fild
adc
push
add
add
xchg
rol
mov
mov
adc
into
mov
ins
add
sbb
pop
push
out
dec
xlat
sbb
adc
test
outs
sub
jl
ret
pop
cmps
push
push
push
sub
or
or
inc
xlat
fist
int
leave
or
out
(bad)
dec
mov
cmp
push
add
dec
push
jl
test
jge
push
and
jge
inc
push
add
fdiv
sbb
mov
push
aas
fiadd
lds
jmp
int3
movzx
test
jnp
cmp
jl
lea
sub
fmul
ror
and
xor
cmp
lods
movs
mov
loopne
lea
fcomp
push
cmp
cmp
sub
or
ins
sbb
mov
adc
push
gs
pop
mov
mov
repnz
fidivr
test
push
sbb
call
pop
or
xor
dec
lds
retf
sbb
jmp
mov
cmp
iret
push
lahf
xor
add
hlt
push
sbb
add
sbb
pop
stc
mov
xor
dec
in
xor
nop
adc
xor
sbb
jne
dec
cli
ret
pop
mov
cmps
add
clc
test
and
shrd
push
das
imul
push
jp
popa
mov
push
push
inc
push
pushf
push
aaa
push
mov
xor
mov
xchg
xchg
cmp
inc
mov
push
or
mov
push
imul
jmp
in
lock
mov
and
outs
ror
and
or
push
fcomp
mov
dec
fistp
dec
fiadd
pushf
scas
cmp
call
push
pop
mov
push
or
pusha
add
cdq
call
addr16
mov
imul
or
dec
test
test
and
ins
pop
xchg
or
test
cmp
mov
sub
icebp
mov
push
lock
mov
push
sub
push
push
or
jmp
inc
push
mov
xlat
idiv
scas
adc
push
sub
push
in
aaa
in
add
sub
pop
and
ja
cmp
or
push
ja
in
test
cs
cmp
pushf
push
pop
sbb
je
adc
push
push
mov
push
or
mov
ja
push
xchg
ror
pop
xlat
push
sub
fs
xchg
push
or
add
repnz
sbb
xor
cmp
cmp
xchg
fldcw
cwde
sbb
or
xchg
cmps
(bad)
adc
cld
mov
or
adc
and
setg
mov
cld
enter
or
mov
mov
add
push
leave
jb
scas
es
mov
jecxz
jns
ds
or
std
add
inc
inc
rol
sbb
ret
std
add
xor
xor
inc
and
push
pop
cmp
lods
(bad)
adc
add
xchg
je
sbb
xchg
mov
add
mov
int3
pop
ss
adc
xor
movs
loop
(bad)
cmp
cmp
or
ja
mov
pop
mov
push
push
sar
sub
sub
pop
dec
mov
add
adc
adc
inc
xchg
sub
test
push
sar
dec
dec
call
scas
fld
xor
adc
cli
mov
dec
push
sbb
add
add
add
push
mov
adc
iret
ds
lds
add
dec
and
pop
dec
mov
mov
adc
fs
jo
sbb
retf
sbb
and
adc
jns
xor
cmp
test
cmc
xor
adc
into
test
stos
ja
pop
push
mov
ror
add
call
xchg
xor
jns
or
sub
push
mov
adc
push
mov
mov
mov
mov
loopne
arpl
rol
xchg
outs
daa
outs
in
test
hlt
(bad)
push
and
xchg
mov
push
push
fild
sbb
or
cbw
cmp
or
mov
jecxz
cmp
push
stos
call
cdq
adc
jno
and
mov
dec
les
inc
fdiv
mov
adc
loopne
fimul
lock
add
mov
jbe
outs
push
adc
sbb
dec
xlat
pop
add
push
add
scas
adc
in
or
push
cmp
adc
aam
jp
aaa
mov
mov
adc
jle
mov
add
jno
mov
and
add
icebp
inc
mov
int3
test
push
ss
dec
push
pop
fidivr
enter
lahf
loopne
pop
mov
int3
sbb
je
sahf
and
and
(bad)
ss
lods
ss
mov
dec
clc
mov
add
dec
cmp
cmp
push
pop
mov
push
xor
add
aam
mov
pop
outs
int3
cmp
push
enter
aam
add
addr16
push
aad
cmp
push
pop
pop
in
ins
(bad)
stc
das
outs
call
lods
adc
add
sbb
inc
imul
enter
movs
rcl
add
scas
lods
aaa
or
pop
push
aas
sub
sbb
aam
sbb
push
push
xchg
or
xor
int3
aaa
imul
and
xchg
adc
jo
aaa
add
or
adc
push
out
xor
pop
inc
lods
aam
mov
jne
dec
ins
cmp
sbb
push
xchg
lea
mov
rcr
shr
cwde
mov
jecxz
loopne
or
xor
fcom
fcomp
add
sti
push
push
sbb
int3
test
sub
cmp
ss
std
jmp
and
inc
mov
out
add
sbb
dec
adc
mov
add
fidiv
aam
in
call
aam
(bad)
push
lea
add
sbb
pop
hlt
loop
lock
and
and
dec
xor
mov
test
add
xor
or
imul
adc
sub
hlt
pop
xchg
mov
or
mov
clc
add
mov
in
int3
(bad)
cmp
push
lods
sbb
inc
add
add
mov
mov
adc
push
and
jecxz
mov
jae
mov
or
pop
push
push
cs
sbb
nop
rcr
push
mov
sbb
add
fimul
mov
std
popf
(bad)
std
jns
ret
and
and
or
lock
mov
or
lea
bound
xor
mov
xchg
add
push
int3
adc
cmps
loope
cmp
repnz
and
adc
dec
push
push
xor
fdiv
push
scas
push
and
fsub
enter
sub
daa
(bad)
retf
adc
push
clc
jp
jbe
and
mov
inc
push
shr
sti
mov
adc
je
inc
sub
call
inc
jnp
cmps
push
pop
sub
and
adc
mov
in
cmp
movs
mov
and
or
jnp
ret
add
pop
jp
pop
push
lods
sub
push
and
adc
mov
ret
and
or
push
je
jmp
mov
adc
cld
daa
pop
hlt
les
outs
mov
and
loopne
cs
and
test
cdq
mov
dec
jg
dec
fcom
sar
xor
retf
rol
add
push
jg
and
lock
aas
cdq
push
outs
and
mov
out
cmp
dec
test
test
movs
loope
xchg
push
inc
cmp
pop
add
push
enter
imul
or
cmp
jne
and
movs
and
cmp
add
pop
or
call
pop
aaa
in
push
or
loop
call
cmp
jg
mov
cmp
into
arpl
dec
(bad)
add
push
mov
je
pop
pop
mov
rcl
stc
retf
fisub
ds
orps
and
jne
inc
mov
cmp
dec
jo
pop
outs
xchg
dec
or
adc
push
vmovlpd
mov
mov
jge
add
mov
add
mov
bound
add
cmp
xchg
hlt
(bad)
jge
sub
sar
inc
mov
mov
lahf
and
or
pop
clc
mov
bound
dec
mov
(bad)
xor
jo
push
mov
add
or
cld
add
add
sub
pop
lea
clc
cwde
xchg
call
dec
cwde
push
or
pop
lods
cmps
mov
je
aas
push
push
cdq
adc
popf
in
mov
mov
or
movs
jmp
adc
cmp
sbb
aas
je
sahf
pop
mov
inc
jbe
mov
(bad)
daa
push
sub
int3
mov
into
mov
sbb
dec
mov
cmps
fld
add
ins
xchg
dec
and
push
dec
movups
mov
sub
mov
or
inc
in
inc
xor
add
pop
fiadd
push
sbb
movs
stc
jmp
mov
clc
sbb
sbb
leave
js
dec
ret
and
int
inc
sub
sub
hlt
push
sbb
mov
sub
and
add
clc
mov
add
jmp
jle
or
sbb
mov
inc
mov
outs
add
(bad)
sub
add
xor
dec
popf
add
mov
adc
pop
mov
cmps
pop
pop
hlt
loope
push
jmp
sub
call
push
scas
cmp
test
je
(bad)
repz
or
push
ret
into
leave
push
sbb
xchg
ret
mov
int
ret
js
add
xchg
jne
lds
hlt
push
pushf
push
(bad)
cmp
mov
add
ins
push
mov
div
push
enter
adc
mov
inc
mov
sub
out
(bad)
jae
mov
xchg
xchg
jno
adc
xchg
(bad)
mov
stc
jb
mov
or
inc
sbb
xchg
xchg
ror
sahf
stc
inc
or
lock
shl
pop
call
xlat
push
iret
out
retf
and
call
mov
dec
mov
add
les
mov
sub
(bad)
out
js
xchg
xchg
aad
push
mov
mov
loop
or
ja
les
ja
push
sbb
adc
add
and
xor
jo
or
cmc
enter
add
out
(bad)
loop
or
push
pusha
add
adc
xchg
sbb
js
jmp
and
or
(bad)
mov
ins
cmp
push
add
inc
add
cmp
jle
sub
add
inc
in
shl
shr
js
ret
cwde
ins
cmp
xchg
lea
mov
push
pop
sbb
or
lea
add
sar
fsubr
fimul
xchg
adc
pop
pop
sbb
fdivp
fnsave
inc
inc
clc
rol
and
add
out
sbb
sub
test
and
mov
clc
add
into
cmp
jl
rol
mov
xchg
gs
xor
and
movs
repnz
mov
xor
xchg
retf
push
in
xchg
push
fs
mov
push
or
or
in
stc
push
inc
into
push
push
enter
shl
enter
pop
push
mov
fwait
je
(bad)
je
sar
mov
not
mov
inc
dec
sbb
add
iret
outs
add
clc
call
jmp
pusha
jmp
add
or
or
push
or
sub
data16
lahf
mov
cmp
jl
and
lock
mov
les
repnz
or
cld
cmp
jns
add
push
or
inc
aam
aam
jge
ins
inc
out
fldcw
mov
xchg
or
dec
jp
or
sbb
scas
and
hlt
mov
sti
jge
cwde
or
push
push
mov
pop
inc
mov
aam
fisub
retf
or
outs
push
add
push
xchg
aas
sub
out
adc
sti
add
ins
ins
mov
test
imul
push
lods
xor
xchg
pop
or
dec
and
mov
dec
movs
pop
jo
(bad)
mov
cs
mov
or
add
aam
add
sub
xor
in
int
add
add
jnp
pop
sbb
sbb
add
cmp
inc
cmp
adc
jle
mov
mov
ds
test
(bad)
sar
mov
mov
dec
pop
data16
shl
xrelease
push
outs
mov
pop
mov
sub
ror
xor
je
mov
sub
or
ret
call
mov
pop
xchg
push
mov
pop
adc
into
xchg
loopne
ins
cmp
lock
lods
xchg
sbb
push
aas
add
rcl
cmp
or
loopne
mov
inc
sub
push
xor
jle
mov
sbb
sbb
out
add
data16
test
inc
dec
jle
lock
xchg
ja
sbb
mov
sbb
xor
pop
xchg
jle
cmps
sub
xor
dec
adc
push
dec
scas
dec
jecxz
cmp
sub
or
push
add
mov
mov
and
mov
mov
mov
inc
sti
mov
sbb
mov
ja
cmps
imul
mov
mov
mov
xchg
mov
jmp
jp
adc
inc
shr
and
push
and
bound
daa
popa
out
iret
cmps
xor
or
not
(bad)
xchg
mov
iret
or
push
rcl
sbb
and
daa
push
mov
pop
push
mov
sub
or
push
mov
sar
jnp
mov
rcr
cs
and
xor
call
ins
cmp
(bad)
(bad)
cmps
dec
inc
push
jb
pushf
mov
loope
xor
pop
and
xor
push
add
int3
mov
mov
mov
jl
cwde
xchg
icebp
add
adc
jle
and
sub
fmul
std
mov
mov
shr
mov
popf
sub
jecxz
dec
mov
ret
iret
or
mov
stos
mov
outs
cmp
inc
mov
nop
inc
cmp
inc
int
adc
push
mov
ret
or
add
shl
scas
nop
jmp
hlt
push
ret
adc
xor
add
pop
and
sub
xor
fmul
ja
retf
adc
push
std
arpl
call
movs
mov
dec
mov
push
or
adc
xchg
xor
test
mov
loop
call
mov
xor
cmp
ja
ins
test
jl
in
lds
mov
push
pushf
add
(bad)
add
fwait
ss
es
sub
mov
fist
mov
jmp
loope
cli
dec
lea
mov
bound
sub
add
sub
inc
jbe
mov
rcl
sbb
mov
pop
and
arpl
enter
adc
dec
dec
mov
repz
addr16
movs
ss
pop
cmp
push
mov
xor
(bad)
iret
pop
add
icebp
and
(bad)
call
fimul
jmp
mov
test
test
je
inc
mov
mov
loope
jmp
and
nop
ret
ret
pop
in
sbb
cmp
mov
push
stos
in
(bad)
loop
loope
fsubr
xor
add
mov
arpl
jne
ja
cs
pop
gs
adc
mov
mov
or
aaa
stos
lds
jno
jb
pushf
mov
mov
push
adc
push
or
xchg
or
mov
sub
cli
dec
sbb
sbb
xchg
dec
xchg
mov
mov
push
mov
fmul
jge
adc
sub
jp
sub
fisub
jnp
xor
xor
mov
repz
xchg
cli
in
enter
xor
cmp
push
(bad)
test
cmp
movs
call
push
xchg
and
lock
sbb
add
out
test
mov
retf
jle
sar
add
inc
sbb
jo
hlt
or
jno
ret
xchg
jmp
or
clc
mov
or
add
adc
mov
sbb
or
sub
cmp
inc
cld
push
sbb
push
sbb
sbb
sbb
sub
popa
cli
iret
pop
ficomp
sub
adc
rcr
or
lods
ja
out
mov
push
cmp
push
push
dec
test
cmps
test
and
inc
mov
pop
or
pusha
jl
pusha
pushf
xchg
ret
jnp
(bad)
sub
pop
aam
sbb
jmp
fild
or
add
daa
daa
sub
sbb
cmp
or
dec
fisub
adc
in
sub
sub
mov
sbb
aaa
or
pop
mov
call
xor
mov
mov
fild
adc
fst
and
push
add
fisttp
pop
or
cmp
jmp
sub
xchg
(bad)
jp
sub
jge
ja
and
or
fisubr
mov
push
pop
add
ins
js
jmp
xchg
out
sahf
dec
call
sbb
aas
sbb
add
add
adc
femms
or
leave
bound
add
movs
cwde
pop
aas
scas
add
push
call
popa
push
call
cmps
jge
mov
lahf
ds
repz
mov
cdq
test
push
jns
es
adc
jle
ins
cmp
cmp
icebp
(bad)
pop
pop
push
inc
inc
outs
add
mov
and
call
fisubr
pop
push
add
mov
ret
pop
jb
shr
imul
pop
adc
pop
or
jb
pop
pop
ror
cmps
sub
jg
sub
pop
add
pop
mov
push
aaa
and
xchg
add
or
loopne
je
jno
add
inc
fstp
icebp
dec
fstp
fdivr
mov
es
cmp
movs
shl
add
ds
movs
ror
daa
cmp
les
mov
push
cmp
push
test
pop
push
xchg
mov
je
xchg
push
mov
jl
mov
jb
push
pop
add
push
pop
pusha
fmulp
icebp
and
ret
push
adc
enter
js
into
jp
cmp
bound
ja
push
rol
fsub
sub
inc
add
and
es
les
push
or
mov
sbb
add
xor
inc
inc
sbb
dec
bound
lea
sub
xor
inc
jne
imul
fistp
cmp
sub
jne
add
sbb
cmp
inc
or
mov
adc
xchg
pop
jle
pop
xchg
inc
fcom
ins
icebp
sbb
push
test
adc
xchg
xor
and
or
rol
xor
lahf
push
adc
pusha
test
jecxz
jo
mov
inc
stos
pop
gs
or
inc
inc
outs
add
push
ins
or
push
pusha
mov
mov
adc
or
pop
cmp
xchg
or
adc
dec
call
dec
or
stos
(bad)
jg
xor
xor
inc
fs
push
adc
cmp
test
mov
add
mov
sub
cmc
xchg
repnz
mov
or
mov
test
and
jle
imul
adc
sti
xchg
jmp
je
adc
mov
mov
cmp
ins
add
add
arpl
cmps
lea
vsqrtsd
push
jmp
rol
push
add
xor
or
loopne
jp
pop
inc
mov
xor
mov
or
add
popf
mov
jl
call
adc
cwde
fwait
jp
dec
sbb
lods
in
(bad)
mov
mov
dec
add
jo
or
fwait
cmp
xor
add
mov
and
xchg
or
cmp
or
ds
dec
xchg
or
and
push
icebp
mov
inc
mov
push
sbb
ins
ins
test
lahf
mov
in
jle
push
and
inc
jno
mov
mov
stos
mov
retf
rol
ss
sahf
nop
out
mov
sbb
sbb
mov
xchg
xchg
sub
mov
mov
test
xchg
sub
cmp
test
in
mov
mov
aaa
mov
jo
sti
jle
icebp
cmp
dec
push
pushf
aad
inc
push
adc
push
add
or
xchg
cmp
or
popf
or
mov
inc
dec
push
mov
xchg
pop
fdiv
les
jne
inc
mov
cmp
add
shl
add
push
mov
js
dec
dec
cmps
mov
or
lock
fistp
movzx
cmp
jne
dec
test
or
and
cmp
aad
add
pop
rcl
fcmovnu
leave
mov
nop
sub
inc
dec
jo
cmpxchg
mov
mov
dec
jecxz
cmps
aaa
test
add
xchg
xchg
clc
inc
ja
test
or
mov
pop
pop
sbb
adc
shl
push
add
push
lea
add
add
jnp
aas
xor
mov
cmp
repz
nop
cwde
add
iret
ret
(bad)
pop
cli
jns
xchg
rcl
leave
js
sbb
pop
mov
mov
jp
ret
add
jge
add
lock
push
xchg
clc
dec
and
std
and
iret
adc
dec
sbb
xchg
jge
call
cmc
sub
jo
ins
mov
movzx
dec
dec
xchg
add
pusha
jg
movsx
xlat
vgetexpss
stc
xchg
les
jo
sbb
dec
inc
xor
sub
stc
jmp
push
data16
xor
fsubr
push
cmp
jae
sbb
adc
loopne
je
mov
cdq
cmp
aad
ror
icebp
ss
lods
and
sti
push
nop
xchg
cmp
inc
loopne
(bad)
cmc
daa
shl
dec
xor
addr16
cmp
test
dec
imul
mov
dec
repz
pop
mov
inc
outs
stos
sar
scas
xor
cwde
cmp
jl
adc
mov
je
or
data16
test
add
popa
es
push
popf
dec
sub
lock
rol
pop
ds
adc
jecxz
add
mov
ds
inc
std
fcom
add
xor
fadd
xor
jp
sbb
fisubr
call
les
scas
sub
mov
dec
cmp
push
arpl
mov
test
pop
repnz
fisub
adc
push
enter
aaa
ja
(bad)
retf
leave
nop
test
jge
dec
fld1
maskmovq
imul
aaa
push
push
lahf
out
ficomp
js
cmps
ror
sahf
mov
push
jmp
jns
out
and
inc
push
pusha
fild
ins
mov
js
mov
push
xchg
mov
cmp
jle
iret
in
and
mov
das
cmp
inc
push
pop
mov
je
out
jns
cmps
push
mov
icebp
std
imul
adc
jbe
ja
int
mov
stc
push
mov
dec
jnp
iret
repz
imul
mov
xor
fwait
cmp
mov
addr16
jae
dec
pop
sahf
cmps
stos
fucomip
aaa
xor
out
xchg
push
or
jl
mul
push
mov
cmp
shl
ds
push
pop
out
sahf
out
out
pushw
jge
xchg
lods
enter
stc
dec
cli
es
mov
dec
repz
mov
xor
mov
push
pushf
mov
repz
out
mov
mov
push
jo
mov
call
cmp
mov
loope
leave
aas
ret
ret
jnp
or
ja
movs
push
mov
ds
das
iret
movhps
rol
cmps
stc
ficom
jecxz
cmc
push
or
and
xchg
jl
cmp
mov
les
ins
push
jbe
adc
pop
mov
(bad)
xor
adc
pop
mov
hlt
sbb
jp
mov
dec
mov
pop
xchg
dec
imul
pop
xor
and
cmps
sub
hlt
(bad)
test
dec
in
dec
and
mov
push
add
sub
jo
cwde
sbb
sub
arpl
xchg
xchg
repnz
movs
and
jp
cmp
daa
mov
pop
sub
xor
in
mov
out
sbb
lea
movs
cwde
add
mov
gs
mov
add
xor
fucomi
mov
mov
retf
aam
add
adc
scas
hlt
sub
dec
mov
jmp
mov
arpl
ja
adc
hlt
add
fst
jbe
inc
xchg
pop
loope
sbb
add
push
call
push
adc
mov
push
aam
lods
or
xchg
dec
aas
jb
push
mov
xchg
mov
pop
pusha
mov
sbb
pop
(bad)
sbb
pushf
mov
add
bound
adc
or
mov
(bad)
xchg
fild
hlt
add
inc
lock
mov
jae
jmp
jae
enter
or
shl
dec
les
(bad)
int3
hlt
or
in
(bad)
pop
ret
dec
leave
cmp
loopne
loop
xchg
jno
sub
add
nop
fistp
or
or
xchg
cmps
push
cmp
dec
cmp
inc
clc
dec
xor
es
ret
adc
test
dec
repz
in
lods
in
pop
mov
xor
pusha
xor
movs
or
inc
or
dec
add
je
mov
mov
pop
into
hlt
fld
jb
stos
or
pushf
sbb
je
mov
or
stos
adc
sub
xchg
scas
xchg
les
aam
or
loopne
pop
data16
pop
shl
gs
inc
pop
scas
sub
cmp
pop
sub
xor
idiv
pushf
sub
cwde
mov
hlt
dec
leave
sbb
js
loopne
xor
mov
or
fist
dec
hlt
das
push
push
in
ins
xor
inc
xor
and
push
cwde
movs
mov
outs
xor
mov
aam
push
imul
or
ret
add
dec
sub
xor
mov
jmp
or
xchg
cvtdq2ps
loopne
mov
xchg
adc
lods
fs
sub
xchg
fimul
lea
ret
js
inc
inc
adc
(bad)
mov
lds
mov
es
mul
jbe
(bad)
les
xor
inc
inc
mov
add
hlt
xor
ror
call
xchg
mov
or
les
pop
dec
jne
test
stos
(bad)
push
push
inc
push
outs
bnd
in
outs
mul
ror
adc
call
dec
jae
adc
adc
push
jge
pop
pusha
and
dec
adc
les
add
push
adc
inc
cmp
stos
sbb
lods
adc
push
cdq
adc
fadd
shl
fwait
add
loope
add
out
cmp
cmp
push
add
pop
mov
icebp
in
dec
sti
inc
adc
sub
xchg
push
pusha
and
or
movs
pop
dec
cmps
jmp
clc
jno
sbb
jbe
add
jb
mov
xchg
push
retf
pop
pusha
loope
lods
ins
dec
lock
mov
mov
mov
dec
or
xor
stos
add
(bad)
dec
adc
xor
in
scas
add
mov
push
sbb
test
push
cmp
leave
pop
ja
add
shl
push
mov
ret
lea
dec
scas
stc
in
cmp
dec
mov
sub
rcr
dec
jp
push
inc
shl
int
cmp
inc
inc
cmp
jp
push
or
aam
push
ret
sub
xor
xchg
mov
jo
scas
sbb
bound
fadd
lods
or
fs
fmul
jge
pop
popf
xchg
test
inc
adc
xor
aaa
das
mov
scas
imul
add
and
in
push
sbb
and
stos
pop
sbb
and
or
addr16
sbb
and
in
inc
(bad)
les
and
add
sub
xchg
sub
sub
adc
and
out
pusha
(bad)
jge
aam
push
push
imul
and
jne
push
sbb
adc
sbb
inc
dec
enter
lds
inc
inc
outs
fld
fdivr
xchg
push
sbb
loopne
xor
jle
shr
out
pop
add
cmp
rcl
add
push
jp
stos
loope
mov
in
sub
out
or
cmps
push
jge
dec
add
popa
movs
add
mov
inc
sub
aaa
pop
pop
add
adc
aaa
xchg
xchg
push
lock
sbb
jne
lea
imul
push
mov
xor
add
mov
xor
cld
cld
ret
nop
mov
adc
mov
inc
or
cmps
std
loopne
cmp
dec
add
cmc
in
adc
xor
inc
xor
fmul
or
add
and
xchg
sub
fmul
xchg
or
loope
xchg
xor
ss
push
das
bound
outs
mov
sbb
mov
in
pop
je
nop
dec
or
hlt
popf
fild
xchg
call
out
mov
retf
cmp
lds
add
mov
dec
cmp
mov
dec
add
and
aam
cmp
adc
mov
xchg
aam
cmp
push
or
imul
shr
aaa
dec
pop
addr16
add
repnz
lds
sub
shl
loopne
or
inc
and
jae
es
and
cli
sti
or
add
add
or
adc
push
cmp
aam
mov
aad
or
mov
das
aaa
in
inc
push
inc
push
dec
test
(bad)
sbb
leave
or
and
pop
in
push
pushf
mov
jmp
xor
and
inc
sar
adc
cmp
push
sbb
rol
cmp
adc
aam
xchg
jge
mov
or
(bad)
in
push
push
in
push
and
dec
in
arpl
adc
push
jns
sbb
mov
jns
jne
bound
xchg
in
test
add
and
les
ficom
xchg
pop
xchg
mov
or
int3
xor
sbb
dec
and
sbb
adc
or
adc
xor
or
xchg
mov
sti
add
inc
xchg
clc
ret
lds
into
inc
dec
rol
inc
dec
stc
add
jecxz
imul
pushf
outs
(bad)
jecxz
lods
push
xor
or
in
fist
(bad)
jmp
pop
add
in
and
push
add
movs
jnp
out
jmp
adc
inc
loope
fbstp
arpl
sub
sbb
fxch
les
lock
in
adc
js
or
movzx
inc
retf
mov
sub
mov
neg
mov
ror
mov
hlt
bnd
sub
add
xor
aad
add
or
sub
sbb
test
adc
or
ror
mov
int
mov
or
or
xchg
out
jl
dec
add
dec
dec
sub
cdq
push
mov
dec
data16
mov
push
pop
xor
push
mov
mov
pop
cmp
or
outs
retf
pop
adc
lock
inc
push
push
test
jnp
cmp
rcl
sub
mov
mov
clc
(bad)
add
ds
mov
and
xor
mov
mov
fdivr
jle
adc
dec
je
sbb
xor
and
aas
scas
cmp
or
xlat
inc
mov
sbb
pusha
adc
xor
ins
(bad)
pop
push
inc
mov
push
add
call
in
iret
ror
and
lods
sub
mov
push
push
js
call
inc
inc
(bad)
lock
push
sub
cmp
jl
push
mov
iret
mov
xchg
and
stos
and
gs
les
cmp
test
sbb
inc
add
movs
les
mov
add
jecxz
xor
or
mov
inc
mov
dec
push
push
mov
inc
lahf
fdiv
cmc
lods
jp
pop
sar
js
cmp
test
ret
mov
sar
and
dec
and
ja
loop
push
cmp
sbb
ret
mov
mov
mov
and
ins
mov
jb
call
add
push
sub
add
push
pop
scas
in
cmps
cdq
dec
push
inc
xor
nop
movs
jno
inc
cmp
lods
ret
fsubr
out
jle
add
push
push
push
cmp
fidiv
push
xor
ret
jp
jbe
jp
jmp
loopne
cli
sbb
mov
xchg
pop
pop
(bad)
xchg
and
adc
push
popf
mov
in
or
mov
and
cmp
push
mov
add
int3
mov
mov
mov
(bad)
mov
sbb
add
sub
pop
sbb
jo
push
aas
adc
push
xchg
sbb
xor
inc
sub
js
push
repnz
mov
(bad)
cld
inc
jns
jno
mov
inc
fcomp
cmp
sti
cmp
jg
mov
jne
shl
sar
ds
add
push
clc
or
call
push
dec
sbb
xor
jl
data16
dec
fdivr
(bad)
jg
jbe
add
mov
add
test
ret
dec
adc
mov
ja
dec
dec
mov
and
jecxz
xchg
ret
outs
or
test
push
in
xchg
dec
sar
xor
scas
int3
inc
push
into
shl
in
rcr
push
sbb
es
into
sbb
pop
dec
pop
pushf
imul
adc
or
std
sub
or
mov
fidiv
ins
jo
pop
jnp
mov
push
shr
pop
jl
rcr
mov
pop
pop
call
stos
ret
jns
mov
push
cmps
push
jp
mov
or
adc
ror
push
scas
push
pop
dec
push
jecxz
push
and
pop
dec
jmp
retf
js
inc
push
push
and
movs
lods
and
or
in
inc
cs
sbb
add
or
jo
hlt
int
jno
jo
jmp
pop
adc
jmp
xchg
xor
loopne
inc
pop
add
ret
and
popa
push
adc
(bad)
xor
or
dec
pop
hlt
xchg
cmc
aam
add
jle
push
cwde
xchg
adc
mov
mov
inc
dec
push
add
xchg
cmp
jmp
xor
push
inc
push
lahf
or
das
imul
mov
or
aad
fsub
ret
movsx
cmp
call
cs
push
mov
mov
push
pop
in
sar
lods
imul
dec
add
retf
pop
enter
mov
and
add
das
aad
dec
push
xor
push
inc
jns
push
add
add
dec
and
sub
and
push
cmp
mov
pop
mov
pop
ss
sbb
pop
add
pop
sbb
jns
stc
mov
push
mov
lods
rol
or
or
ret
dec
mov
and
sub
jo
call
push
loope
jno
sbb
and
push
dec
add
mov
sub
mov
or
ss
push
leave
adc
mov
cmp
ins
imul
pushf
add
nop
pop
add
xor
or
xchg
push
jb
xlat
inc
push
xlat
inc
aam
sbb
mov
lods
call
xchg
xor
dec
lods
das
shr
add
pop
add
ret
jecxz
inc
sbb
mov
lea
pop
fild
or
daa
gs
or
movs
dec
outs
loop
js
int3
xor
sub
test
inc
inc
or
sbb
(bad)
add
shr
push
pop
push
lock
cmp
mov
add
mov
pop
lock
inc
or
inc
movs
push
test
mov
add
in
cmp
push
mov
sub
and
pop
addr16
mov
or
pusha
js
jg
jmp
pop
xor
je
dec
push
aas
adc
clc
test
mov
push
push
pop
jmp
and
mov
inc
inc
(bad)
jns
(bad)
push
and
mov
add
sbb
popf
adc
lock
les
leavew
cmc
adc
addr16
aaa
and
nop
scas
and
test
xchg
jbe
mov
pop
retf
dec
mov
lahf
sbb
add
cld
and
mov
int
movs
adc
sbb
int3
fbstp
lock
clc
bound
add
test
lds
scas
out
adc
lea
and
sbb
out
xchg
or
in
mov
cwde
out
and
xor
ror
cmc
sbb
loopne
stos
or
pushf
xchg
and
test
movs
or
fwait
shr
pop
add
dec
std
nop
ret
sub
xor
mov
or
shl
cmps
xor
(bad)
sbb
mov
mov
add
jg
mov
mov
dec
jge
test
jl
jmp
shl
or
or
jo
sbb
push
repnz
cmps
outs
into
cmp
test
sub
loope
jae
aam
add
jg
lds
lea
sti
dec
cs
ja
or
shr
dec
push
add
icebp
jmp
push
das
sbb
push
add
mov
adc
or
ret
sbb
aam
arpl
gs
ror
add
js
mov
push
jmp
inc
shl
inc
inc
push
lea
sbb
or
push
adc
outs
in
mov
push
jo
call
jbe
ins
sbb
sbb
popa
push
imul
or
sub
pop
pop
jle
shl
xor
sub
daa
(bad)
mov
xor
dec
pop
mov
cmp
add
jle
pop
fwait
sub
xor
add
sub
xor
jmp
test
pop
cmp
xor
xchg
or
js
cld
and
push
cs
mov
loope
pusha
xor
mov
iret
mov
sbb
ss
and
or
call
rcl
dec
ss
xor
xor
(bad)
mov
loopne
pop
int3
inc
sti
xor
gs
mov
shl
lods
mov
pop
dec
dec
inc
mov
ja
sbb
jo
out
or
add
dec
hlt
mov
sbb
dec
inc
push
mov
mov
push
dec
xchg
adc
lock
sbb
lods
dec
mov
call
add
xchg
jne
add
shl
dec
pop
sbb
push
sar
leave
sbb
adc
push
lds
mov
fcmovnu
jno
jo
loopne
inc
sbb
mov
sbb
pop
je
outs
rol
mov
adc
push
push
add
sbb
sbb
test
(bad)
add
test
and
scas
add
mov
push
jae
ret
lea
dec
fbstp
adc
jmp
cs
(bad)
dec
sub
lods
pop
push
mov
hlt
add
cmp
cld
cld
call
cmps
xor
sar
jne
push
ins
nop
mov
add
sahf
ret
outs
cld
jmp
pop
push
xchg
popa
push
ja
push
push
imul
sub
mov
push
cmp
mov
(bad)
fild
jo
rcr
add
xor
mov
loope
adc
in
jl
dec
nop
(bad)
out
sti
and
mov
pusha
cmps
(bad)
and
je
push
jmp
xlat
mov
adc
ret
mov
ja
lock
cmp
inc
stos
call
mov
fidivr
pop
add
dec
(bad)
and
and
scas
aas
jns
and
push
inc
adc
push
mov
cmc
xor
pop
or
cmps
add
movs
sbb
jmp
jmp
pop
jg
mov
sub
pushf
sub
aas
(bad)
mov
mov
sbb
ins
lods
jmp
inc
adc
pop
jnp
retf
dec
cmp
xchg
movs
mov
mov
push
adc
or
mov
fwait
inc
ret
push
add
cmp
icebp
xchg
fcom
add
cmp
and
in
pop
xor
push
jo
pop
jne
inc
cmc
and
in
add
test
(bad)
cmp
clc
lahf
scas
adc
mov
push
push
cli
pusha
mov
nop
fcom
sahf
stos
out
shr
and
inc
mov
mov
stc
mov
add
xchg
and
leave
and
fcom
(bad)
cmp
jno
jp
or
rol
nop
aas
je
cmps
loopne
and
mov
pop
adc
and
push
and
cdq
ss
or
hlt
not
rcl
jns
and
icebp
js
adc
xchg
xor
imul
pusha
mov
mov
mov
mov
dec
sbb
(bad)
adc
in
xchg
jbe
ret
inc
inc
adc
sub
fsubr
dec
stos
add
aad
pop
test
rcr
stos
nop
jp
jmp
push
bound
jmp
sub
fmul
ins
dec
movs
sbb
imul
mov
and
in
mov
test
into
and
inc
add
mov
add
(bad)
xor
es
or
ret
test
fsubr
xor
fneni(8087
inc
stos
inc
add
or
mov
call
das
sbb
mov
rcl
or
aas
dec
inc
inc
mov
dec
fst
add
(bad)
add
inc
pop
rcr
loopne
cmps
or
and
idiv
or
xchg
rcr
xor
in
or
mov
xchg
daa
fadd
cmp
xor
jae
in
sub
adc
xchg
dec
adc
jne
icebp
std
pusha
pusha
inc
sbb
iret
push
aaa
adc
js
test
pop
jge
jno
mov
mov
test
pop
pop
out
popf
ret
adc
or
sbb
jne
add
(bad)
lahf
adc
test
push
inc
call
mov
retf
mov
inc
call
sar
mov
sbb
add
fs
or
mov
cmp
daa
fimul
call
and
aad
push
iret
fdiv
lods
dec
enter
ret
imul
test
int
mov
or
jmp
shl
ss
adc
sub
inc
(bad)
(bad)
aas
lods
xchg
es
pusha
or
or
push
mov
inc
push
inc
adc
or
enter
adc
addr16
addr16
push
jb
test
je
test
and
scas
(bad)
int
cmps
jne
jbe
dec
sbb
cmp
fist
cmp
and
adc
in
mov
xchg
push
push
adc
or
jl
mov
ins
add
mov
cld
outs
dec
or
(bad)
leave
push
(bad)
movs
dec
xor
dec
add
sar
push
and
retf
rol
aad
dec
cmp
cdq
into
je
shl
cmp
adc
push
or
adc
mov
mov
pop
test
pop
add
jecxz
inc
repnz
inc
seto
xor
xchg
xchg
adc
mov
inc
push
jmp
or
test
test
in
push
sub
sub
scas
ror
popa
cmp
enter
or
fld
dec
adc
leave
pushf
sbb
or
pop
daa
or
hlt
cmp
cmp
mov
lock
sbb
aad
js
adc
test
loopne
in
mov
in
(bad)
fld
sub
add
xor
fwait
loopne
or
mov
sbb
mov
xchg
pop
jmp
mov
or
cmp
inc
sub
test
sar
mov
call
lea
push
lock
adc
pusha
jne
mov
nop
cmp
jbe
iret
les
jle
addr16
enter
inc
jmp
fisttp
push
inc
jns
aam
adc
add
xor
(bad)
sbb
add
jecxz
scas
xchg
nop
mov
cmp
push
sub
and
add
adc
xor
das
push
sar
rcr
lahf
outs
cld
jmp
adc
push
in
push
cmc
mov
rol
imul
movs
xlat
xor
cmp
dec
jg
fdivr
lea
or
aas
mov
jl
mov
sbb
push
sub
pop
jmp
test
sub
add
jns
push
fadd
mov
mul
push
out
push
and
stos
inc
loopne
inc
cmps
je
push
mov
jp
fcom
and
dec
movs
lahf
mov
push
push
jl
and
inc
mov
cmp
aam
push
adc
clc
ret
push
das
add
lods
or
adc
jle
xor
add
add
lock
mov
push
or
push
adc
mov
or
mov
mov
push
bound
lock
jg
adc
(bad)
jmp
inc
loopne
sbb
push
sahf
les
or
in
inc
mov
je
pop
test
clc
mov
or
cdq
leave
add
es
(bad)
jl
xchg
jne
rol
cmps
xchg
dec
mov
fdivr
jmp
mov
add
xor
jmp
xlat
adc
xchg
lock
push
add
and
out
fidivr
jno
mov
pusha
push
mov
inc
es
imul
gs
retf
mov
adc
dec
mov
inc
cmp
sar
sahf
pushf
add
jmp
inc
lods
hlt
push
test
sub
std
or
inc
cwde
das
jne
inc
retf
sbb
cmp
sbb
fwait
mov
fsub
push
call
loopne
je
pop
ret
sar
ss
dec
cmp
sub
mov
sbb
in
dec
push
out
jmp
and
test
jbe
and
and
aad
sbb
mov
dec
fbstp
xchg
dec
aad
mov
(bad)
xchg
fdivr
or
inc
or
ja
adc
mov
or
xor
nop
inc
push
mov
adc
pop
push
repz
je
cmp
cli
and
adc
in
lea
adc
sub
mov
daa
jmp
dec
adc
dec
aad
sub
aad
aad
div
or
add
inc
shr
adc
sbb
sbb
mov
sti
es
xchg
adc
fld
imul
inc
jbe
out
sbb
leave
dec
mov
and
arpl
les
add
mov
push
cwde
push
pop
pusha
sbb
(bad)
jbe
sbb
loop
mov
add
jmp
jo
pop
jmp
and
mov
sbb
mov
cmp
sbb
mov
and
lods
mov
ss
fiadd
inc
mov
cmp
dec
adc
dec
mov
inc
mov
pop
inc
ds
lds
pop
ins
out
sub
push
shl
jecxz
or
jns
lods
icebp
mov
cmp
dec
dec
sub
(bad)
xor
and
and
or
sar
xchg
clc
ret
(bad)
add
xchg
mov
lds
(bad)
push
and
jne
or
add
pop
(bad)
xchg
jo
jo
push
test
sub
dec
test
sub
popa
pop
add
ret
add
scas
pop
add
repnz
mov
retf
sub
lds
fnsave
push
scas
mov
retf
cmp
mov
dec
xchg
cdq
movs
imul
sbb
gs
ja
and
sbb
pop
scas
push
pop
xor
push
cs
push
call
xor
jmp
ret
jmp
pushf
lea
popf
test
ds
das
int3
push
push
sub
inc
(bad)
pop
call
push
test
add
or
mov
rdpmc
cmp
rol
push
shr
pop
sub
cmp
pop
sar
add
jae
retf
js
xchg
aam
push
(bad)
aam
pop
sbb
out
cmp
or
loope
inc
push
jle
push
jns
mov
xchg
dec
inc
ds
mov
push
retf
and
(bad)
inc
ret
lock
outs
adc
add
pusha
pop
or
add
xor
mov
je
cmp
push
add
and
push
push
or
add
jo
mov
mov
jle
ret
and
fucompp
fidivr
mov
outs
movzx
enter
mov
xchg
jmp
rcr
sub
or
xchg
jne
popa
clc
xchg
bound
data16
je
in
and
jmp
or
ins
test
ror
ret
mov
add
push
or
mov
and
lea
mov
push
xchg
push
rcl
push
or
lock
fwait
das
cmp
xor
or
in
lds
inc
stos
ins
clc
pop
pop
rol
fdiv
jne
push
jg
and
iret
test
inc
adc
xor
sub
pop
popa
dec
dec
jae
inc
adc
or
test
mov
inc
shl
and
or
lods
ds
cs
in
xchg
movs
aas
cmp
sahf
add
mov
popf
push
add
cmp
loop
jmp
addr16
jmp
jbe
fsubr
sbb
pop
enter
neg
and
add
inc
sti
xor
jmp
fdivr
pop
mov
pop
push
inc
jmp
push
mov
adc
fdiv
lea
ds
cmp
fsub
shl
fsub
xchg
(bad)
sub
or
adc
cmp
retf
pop
leave
mov
cmps
jecxz
sub
push
push
loope
(bad)
sbb
or
int3
dec
mov
inc
pop
int
adc
inc
les
test
jp
add
add
sub
sbb
das
frstor
daa
sub
les
add
jmp
or
dec
cs
add
sbb
xor
inc
cs
sub
push
add
or
(bad)
ror
cdq
push
jmp
js
xor
(bad)
ficomp
sbb
or
stc
into
loop
loope
mov
and
jne
add
inc
add
xchg
pusha
add
rcl
jno
sub
add
js
adc
mov
repnz
add
sbb
mov
imul
sub
inc
cmps
push
push
xchg
fisttp
fmul
mov
dec
sub
sub
xor
ret
jle
cmp
inc
bound
rcr
cwde
ds
mov
mov
mov
add
cmp
jl
cmp
bound
sub
mov
mov
add
mov
add
dec
adc
xchg
jl
rcl
aam
cli
xchg
xchg
or
add
in
cmps
xor
mov
push
jns
xchg
or
mov
jns
jp
loop
mov
cld
lock
(bad)
fsubrp
inc
ror
add
add
call
lods
adc
and
sbb
jb
push
sbb
sahf
test
dec
iret
add
add
push
or
adc
push
add
sahf
daa
add
push
xchg
mov
fld
pop
pop
inc
ret
or
cmp
sub
sahf
jno
inc
jg
(bad)
cmps
and
push
adc
pop
jo
clc
mov
add
add
int
and
cmp
or
imul
outs
adc
adc
pop
retf
cmp
aaa
popa
in
adc
inc
or
out
aaa
adc
dec
add
clc
fldenv
lahf
push
mov
sbb
jb
mov
push
out
pop
sbb
push
(bad)
xlat
fcmovnb
or
add
push
jbe
js
push
rcl
adc
lods
cld
cld
mov
pop
pop
mov
faddp
push
push
or
inc
sbb
mov
push
dec
inc
data16
sub
mov
dec
bound
in
push
mov
pop
dec
pop
ror
sar
or
rol
inc
sbb
xchg
adc
inc
add
mov
outs
nop
ror
adc
aad
xor
fadd
adc
sbb
aaa
mov
test
lods
shl
or
sub
or
push
pop
sbb
inc
sbb
pusha
loopne
lds
add
mov
mov
mov
jg
xchg
lods
pop
or
cdq
push
and
mov
ret
push
cmp
and
icebp
sub
in
add
dec
jne
or
dec
dec
push
addr16
rcr
add
adc
or
mov
xor
les
mov
mov
push
mov
sbb
test
or
sbb
sbb
jp
and
(bad)
push
sub
mov
cmp
dec
xchg
xor
sbb
sahf
xor
(bad)
dec
test
mov
pop
xchg
mov
dec
and
add
or
aad
pop
nop
jge
inc
xchg
sub
sahf
jno
rcr
shl
sahf
fst
mov
mov
gs
call
push
and
push
dec
inc
stos
jle
mov
not
lods
inc
retf
aaa
into
ins
mov
push
fsub
sub
imul
aaa
xchg
mov
add
leave
sbb
pop
inc
push
mov
cld
mov
call
add
and
jne
shr
jbe
xchg
fbld
mov
shl
pusha
or
ficomp
loope
in
dec
adc
cs
sbb
icebp
inc
movs
or
push
pop
test
aas
sub
lock
jg
jnp
es
arpl
jns
pop
and
jecxz
js
add
call
adc
add
cli
xor
adc
push
xchg
cs
mov
adc
clc
jne
mov
jle
in
add
popa
cmp
hlt
stos
sbb
inc
dec
ret
jns
jbe
push
push
ins
add
mov
test
je
xchg
scas
dec
xchg
in
push
int
add
test
test
mov
push
mov
jne
or
pop
or
add
cmps
test
out
or
xor
neg
in
(bad)
(bad)
cmp
bound
arpl
sbb
cmps
adc
das
mov
sbb
mov
or
cdq
dec
sbb
cmp
adc
adc
fist
push
or
pop
add
xchg
push
inc
mov
sti
push
(bad)
inc
mov
xchg
inc
push
push
call
(bad)
and
repz
scas
mov
(bad)
jns
es
scas
jns
or
push
mov
or
inc
test
add
adc
fdivr
sbb
mov
cs
scas
jne
push
in
mov
and
sub
mov
mov
je
pop
mov
fistp
pop
in
ins
xor
xchg
out
xchg
das
and
outs
sub
or
push
movs
adc
lock
cld
clc
out
mov
jl
mov
pop
sbb
nop
add
push
sub
xor
jns
mov
movs
mov
jecxz
jne
arpl
call
in
in
mov
ret
or
push
clc
leave
mov
aaa
push
sub
fdiv
pop
inc
xor
xor
sbb
sbb
cmp
cmp
shl
dec
dec
adc
and
dec
stos
pop
hlt
sbb
push
xchg
(bad)
test
push
xchg
ds
adc
adc
movs
pop
movs
fisubr
loope
stos
dec
sbb
(bad)
and
and
or
xchg
mov
mov
ss
and
pop
add
xchg
xor
shl
cmp
push
icebp
push
loope
cmps
add
mov
call
jae
and
adc
sbb
fadd
jmp
mov
adc
test
mov
mov
xor
ss
mov
popa
push
jne
or
and
mov
push
rcr
cmovo
add
push
add
mov
ret
mov
xor
fist
add
push
out
push
add
xchg
xor
add
mov
or
rcl
sti
inc
jl
or
dec
lock
jmp
call
xor
pushf
add
add
pop
shl
sbb
out
shl
mov
fist
inc
xchg
cdq
mov
inc
mov
and
ret
outs
nop
add
sub
lock
cmp
popa
pop
or
jmp
or
sbb
fadd
add
sub
dec
xor
sbb
inc
mov
scas
cmp
jle
sbb
out
adc
je
test
xchg
or
sbb
sbb
push
ret
or
inc
pop
jg
ret
shl
ret
xor
outs
lock
pop
or
pop
jo
sti
out
adc
hlt
dec
push
call
ret
out
add
push
shr
clc
or
dec
add
les
dec
cmc
dec
aad
stos
adc
ja
add
ja
add
xchg
xchg
imul
loop
pusha
sub
xor
out
rol
sub
lods
xchg
loopne
popa
je
mov
iret
adc
mov
push
bound
in
mov
mov
xor
stos
rcl
test
sbb
sbb
xchg
pop
cmp
data16
test
pop
mov
xchg
pop
dec
and
inc
or
add
sbb
xchg
or
dec
enter
adc
(bad)
push
jno
addr16
mov
in
pop
xchg
add
push
mov
jge
fadd
fstp
jl
pusha
cmps
pcmpeqb
sbb
push
or
push
or
push
and
iret
ret
lds
adc
push
loop
mov
fsubr
jo
sub
imul
shl
push
stos
gs
pushf
mov
xchg
ins
(bad)
inc
fdivr
mov
dec
add
cdq
imul
sbb
and
or
rol
adc
test
fcomp
or
push
cmp
add
xor
mov
mov
adc
sub
aad
jl
sub
adc
pop
add
imul
and
test
int
xchg
rcr
inc
mov
test
mov
ja
cli
add
pop
fadd
gs
or
adc
lahf
hlt
sbb
cmps
pop
pop
adc
fdivr
lods
mov
cmp
repnz
mov
push
sbb
jge
pusha
inc
aam
imul
shr
xor
shl
ins
icebp
pop
mov
test
xor
or
call
adc
xchg
(bad)
dec
jbe
clc
or
addr16
cmps
repnz
lods
aaa
imul
jbe
cwde
pop
sub
fidiv
shl
bound
(bad)
dec
lahf
push
push
(bad)
rcr
loop
or
sub
cmp
into
cmp
enter
lock
mov
push
(bad)
mov
sbb
js
and
and
ja
cmp
xor
cmp
pop
sbb
or
in
movs
cld
and
xchg
lock
dec
aaa
jns
dec
jle
call
sbb
pop
movs
sub
mov
cs
add
inc
or
pop
aam
jge
sbb
loope
idiv
daa
add
ficomp
dec
inc
arpl
inc
mov
add
inc
js
cmp
imul
push
mov
sar
dec
cmp
repnz
push
xor
jno
movups
shl
call
popa
idiv
pusha
push
pop
loopne
pop
dec
and
add
dec
les
daa
xor
mov
mov
(bad)
outs
mov
test
mov
xor
sbb
mov
rol
or
and
gs
test
retf
enter
mov
xor
adc
fcomp
lock
add
pop
test
and
(bad)
sbb
push
ret
clc
jb
mov
cmp
and
aam
mov
xchg
add
lods
sar
xchg
addr16
in
push
cmp
xchg
push
or
sbb
int3
sbb
(bad)
test
push
add
(bad)
dec
cmp
xor
aam
mov
inc
xchg
cwde
jns
sti
lea
push
popa
cmc
mov
mov
es
(bad)
jmp
push
cmp
adc
mov
jns
inc
xchg
icebp
pop
sub
(bad)
std
xchg
ja
imul
inc
pop
push
std
mov
push
add
daa
jg
mov
mov
dec
fs
jno
push
sti
inc
and
ds
ffreep
sbb
push
ror
retf
mov
push
not
adc
(bad)
std
cmp
loopne
jmp
shl
pop
test
mov
stc
mov
or
mov
push
test
cs
adc
stc
pop
idiv
or
not
int3
sbb
add
jns
ret
sbb
dec
push
mov
push
and
(bad)
jmp
push
add
frstor
adc
in
xchg
imul
ss
shr
pop
or
por
sbb
pop
xchg
or
mov
jmp
push
mov
rol
or
cmps
pop
sbb
jge
int
adc
mov
les
sti
or
adc
cmp
and
int
je
mov
pop
pop
dec
jl
push
je
or
dec
sub
mov
sbb
push
fidiv
js
fimul
sbb
mov
fimul
sbb
ja
arpl
je
xchg
add
and
test
or
or
add
mov
jmp
xor
xchg
cmps
xchg
ret
loope
hlt
and
cmp
jns
dec
cmp
pushf
pop
add
or
(bad)
fwait
in
in
adc
out
pusha
or
daa
cli
cmp
adc
xor
std
add
cvtps2pi
outs
or
xor
outs
das
cmp
stos
jne
inc
xchg
mov
lahf
ja
dec
sub
aam
xor
xchg
ds
pop
xchg
shr
arpl
fwait
mov
ret
jge
mov
dec
stos
mov
mov
loope
ror
mov
std
fdivr
push
jns
sub
fs
in
and
sub
push
ret
add
inc
dec
sbb
jb
cli
xchg
add
push
lods
loopne
xchg
stos
mov
inc
sub
xor
fcom
idiv
or
jo
stos
adc
inc
xor
jbe
ficom
test
xchg
lds
call
inc
nop
xor
int3
xchg
add
push
(bad)
sub
or
call
pop
loope
or
leave
div
inc
sbb
pop
add
into
ss
xor
js
and
xchg
add
les
daa
mov
js
add
pop
cmp
daa
adc
and
xchg
call
in
adc
popa
and
xchg
pushf
sbb
scas
adc
xor
pop
jno
inc
xchg
es
les
sub
ret
ins
data16
adc
je
add
push
mov
pushf
js
shr
push
and
jmp
xchg
pop
mov
lea
hlt
rcr
xor
(bad)
ja
ja
adc
sbb
xor
movs
or
sar
test
je
sbb
push
push
inc
or
ja
ret
adc
or
imul
sbb
test
(bad)
fisttp
push
ret
push
xchg
adc
mov
adc
(bad)
and
sub
inc
xor
nop
lock
inc
shl
adc
lea
dec
out
push
or
or
(bad)
idiv
xor
and
cmp
mov
or
ret
pusha
pop
adc
push
push
pop
pushf
mov
xlat
mov
mov
mov
cmps
or
cmp
js
add
or
aaa
mov
mov
(bad)
adc
loop
push
ins
adc
mov
cmp
dec
pop
dec
mov
test
das
push
dec
dec
inc
loopne
int3
aam
repnz
and
adc
sbb
arpl
test
out
or
popf
cmp
push
test
loop
in
or
pop
adc
xor
dec
pop
loop
xlat
sub
mov
cmp
push
out
pop
lea
mov
mov
push
mov
ret
fldcw
and
xchg
add
add
jnp
mov
xchg
sahf
(bad)
ror
xchg
sbb
mov
movs
mov
pop
arpl
outs
add
js
sub
push
in
push
push
jb
add
and
inc
dec
xchg
adc
push
mov
in
bnd
aaa
imul
and
dec
inc
and
jne
daa
add
js
in
pop
mov
adc
and
es
xchg
and
ins
and
loopne
adc
jl
pop
xor
cmp
cld
ror
add
movs
fst
add
loopne
cmps
add
ret
jmp
pop
jbe
and
mov
ret
stos
xchg
mov
sbb
push
mov
cmp
inc
cld
nop
mov
xchg
push
and
icebp
jmp
sub
push
push
jns
cmp
ret
(bad)
jl
inc
sbb
sahf
outs
mov
push
sbb
pop
push
and
adc
gs
or
rcl
rol
repnz
xor
mov
movs
push
mov
xor
mov
xchg
pop
jmp
cmp
sub
push
push
xor
ret
cmp
and
int3
in
push
sub
sub
movs
push
xlat
out
or
inc
lock
xchg
inc
movs
je
mov
sbb
call
hlt
pushf
data16
jo
push
loopne
fdivr
and
and
cdq
test
fld
out
loopne
data16
mov
(bad)
nop
jmp
mov
and
cmp
(bad)
cmc
ins
mov
pop
jne
xchg
push
add
ds
pusha
(bad)
mov
jo
repnz
mov
sub
inc
mov
lods
add
inc
arpl
push
rcl
jmp
push
xchg
aas
cmp
pop
xor
cmp
sbb
aam
test
sbb
push
out
sbb
pop
daa
or
mov
aam
mov
push
jne
(bad)
(bad)
jp
into
push
inc
mov
xchg
or
or
xor
pcmpeqw
push
jno
aad
cmp
cmp
jge
xor
jne
cmp
rol
inc
dec
mov
xchg
mov
loopne
dec
out
(bad)
xchg
es
or
cmp
jne
jb
push
loopne
push
cmp
leave
js
xor
push
push
and
xor
add
ss
adc
push
mov
mov
sbb
sbb
xor
fcom
xrstor
fadd
adc
mov
sbb
adc
daa
push
enter
pop
mov
or
js
int3
jp
outs
imul
clc
dec
rol
sub
sub
in
bound
dec
push
shr
pop
xchg
ins
add
push
(bad)
mov
adc
lea
jl
sti
(bad)
push
leave
inc
cmps
xor
mov
jl
inc
cdq
add
adc
loop
adc
cdq
mov
xchg
cmp
xchg
gs
fwait
(bad)
outs
pusha
sbb
mov
jg
(bad)
adc
adc
jl
and
icebp
or
pusha
xchg
sti
fld
inc
es
scas
(bad)
sub
fbld
mov
ins
loope
ja
addr16
pop
inc
ror
ja
out
shr
repnz
cs
add
mov
mov
pushf
adc
test
dec
data16
push
pop
nop
push
test
js
adc
push
sbb
jecxz
mov
push
inc
mov
sbb
or
jl
cmp
xor
sbb
sbb
push
mov
pop
inc
test
mov
(bad)
adc
jg
dec
sub
pop
(bad)
fiadd
(bad)
jge
mov
outs
sbb
xor
xchg
adc
(bad)
ins
mov
dec
dec
push
xor
inc
or
retf
adc
push
ret
dec
xor
hlt
push
adc
cmp
pop
adc
lock
iret
rol
xchg
dec
cld
mov
mov
cs
mov
popf
fisttp
dec
dec
dec
dec
or
adc
dec
sbb
pop
mov
or
pushf
adc
call
inc
test
mov
call
sbb
sub
mov
or
inc
clc
add
adc
dec
sti
icebp
mov
call
and
dec
adc
test
ror
dec
sub
jno
mov
mov
mov
nop
or
and
mov
mov
por
or
(bad)
pop
ret
std
sbb
add
cmc
sub
enter
mov
or
add
adc
inc
or
cdq
add
loope
call
inc
mov
or
inc
push
dec
call
ins
aaa
or
jns
int
lods
gs
stc
mov
sbb
inc
mov
pusha
psrld
sbb
loopne
xchg
daa
fld
pop
sbb
dec
or
xchg
or
and
inc
addr16
ja
in
jl
jp
mov
(bad)
cmp
push
std
sbb
sbb
push
hlt
sub
into
or
or
cmp
rol
or
lock
jns
and
push
sub
dec
cmp
ja
cmps
adc
rol
rol
lea
add
sbb
mov
sbb
and
mov
std
sub
je
test
cli
xor
cmp
jnp
push
fdivr
mov
jmp
sub
mov
pop
sbb
dec
out
shl
idiv
jbe
add
dec
ret
xchg
push
adc
mov
es
sub
adc
adc
mov
adc
imul
outs
pop
mov
enter
data16
adc
rcr
and
imul
add
mov
lock
and
xor
js
mov
stc
int
push
mov
pop
xchg
loopne
push
lock
sub
pop
xor
in
mov
and
ds
cmp
mov
sub
mov
lea
cmp
rol
sbb
pop
retw
inc
aaa
jg
jno
mov
nop
pop
add
sbb
inc
push
loope
or
nop
mov
sub
add
fdiv
add
and
xchg
fisttp
jno
je
push
sbb
test
loop
sbb
ret
jle
in
loopne
mov
dec
je
sub
aas
jle
push
pop
pop
and
ja
adc
ficom
xlat
jg
fisttp
into
mov
inc
aaa
mov
cmp
mov
mov
sti
fdiv
inc
and
inc
jmp
jne
jae
push
dec
sbb
cmp
push
add
addr16
add
ret
jnp
xchg
outs
jne
cmp
scas
dec
jl
outs
in
ss
push
sbb
inc
fld
mov
xor
popa
jge
addr16
inc
cmp
dec
push
push
jne
dec
in
repnz
cmp
add
fwait
call
adc
(bad)
mov
push
pop
aam
fisttp
das
mov
test
mov
sub
pop
cwde
rol
dec
dec
fs
dec
xor
rcl
jo
cmp
xor
dec
jbe
xor
out
cmps
mov
sub
and
jecxz
jbe
push
sar
mov
mov
and
call
adc
push
mov
std
fist
mov
dec
adc
cmps
push
jge
icebp
cmp
pop
pushw
fsub
mov
jns
cmp
pop
or
push
neg
dec
je
ins
inc
sbb
xchg
dec
sbb
dec
jne
adc
test
cmp
xchg
jmp
push
mov
add
ds
or
xchg
sar
mov
add
out
call
mov
jmp
ret
adc
mov
lea
sub
and
jecxz
hlt
mov
add
clc
cmps
ror
test
xchg
push
or
dec
jp
mov
lea
mov
pop
sar
es
mov
ins
rcl
jno
lea
clc
outs
push
fcom
pop
mov
ss
fcomp
addr16
inc
xchg
fisub
pushw
pop
add
mov
pop
sub
lods
jl
or
xor
daa
std
and
mov
jb
test
sub
scas
sub
inc
ins
sub
jns
dec
es
enter
pop
inc
adc
inc
jp
sbb
cmp
test
aas
sub
and
xchg
jbe
sub
mov
(bad)
ins
inc
sbb
or
(bad)
jne
jg
mov
clc
inc
and
jns
ja
test
mov
adc
jmp
inc
sbb
adc
es
mov
outs
(bad)
iret
sbb
enter
mov
leave
mov
(bad)
sbb
push
test
and
imul
mov
sub
push
or
in
xor
ror
xor
or
int3
loop
cmp
(bad)
js
xchg
or
pop
fdiv
and
xor
fisub
and
push
das
fwait
js
xchg
add
mov
or
iret
stos
pusha
push
adc
rol
xchg
(bad)
pop
add
and
sbb
pusha
cmp
mov
pop
cmp
into
sub
add
mov
loop
mov
dec
pop
dec
test
xchg
sbb
mov
sbb
add
fmul
mov
and
cmp
xchg
pop
inc
movs
cdq
xchg
push
popa
push
mov
xchg
add
pop
div
test
rcr
push
xchg
inc
cdq
or
add
aas
mov
lock
sbb
(bad)
pop
ins
in
jno
push
shl
call
fwait
adc
add
add
das
or
aaa
popa
adc
sbb
cmps
push
and
and
div
jne
out
or
add
in
jae
jmp
pop
push
adc
lea
or
inc
add
mov
jge
mov
(bad)
in
push
pop
push
add
repnz
jmp
add
or
outs
push
push
lods
or
scas
mov
jnp
clc
cwde
dec
rcr
imul
shl
or
pop
push
cmps
add
push
sub
dec
xor
aam
jo
dec
push
cmp
jle
mov
(bad)
test
(bad)
mov
movs
cwde
fstp
cs
cli
cmp
sub
mov
ins
loopne
sbb
xor
jp
push
retf
test
and
push
add
mov
jecxz
lock
loope
outs
adc
xchg
mov
add
dec
aaa
mov
rcr
or
add
fcom
mov
dec
pop
and
push
push
dec
adc
add
pop
test
dec
and
cmps
shl
or
dec
sub
jbe
cmp
adc
sti
out
pop
in
fist
adc
xor
(bad)
call
push
cmp
sub
pop
jns
sub
inc
inc
mov
cmp
or
fisub
(bad)
mov
stos
ss
sti
adc
push
adc
and
and
jns
xchg
xchg
xor
(bad)
cmp
loop
jge
(bad)
jne
imul
out
test
test
sub
call
xchg
sub
stc
jbe
jo
cmps
mov
mov
jmp
fnclex
into
jbe
adc
retf
cmp
mov
(bad)
daa
add
aaa
dec
or
adc
iret
loop
fs
sbb
push
push
sti
fsubr
mov
push
dec
pop
out
shl
js
cwde
loopne
loopne
je
and
jb
cmovo
pop
pushf
ss
adc
xlat
(bad)
and
or
jae
mov
and
and
jne
out
outs
or
sub
add
sub
test
xadd
cmp
(bad)
or
mov
or
sbb
inc
rol
not
js
mov
adc
mov
mov
sbb
fmul
int
dec
add
mov
sub
push
jle
(bad)
xor
xor
test
jns
shr
rol
push
frstor
loop
dec
cmp
add
jmp
pop
in
shr
add
jle
je
pop
pop
aas
movs
jbe
or
inc
push
or
wrmsr
sbb
push
sub
mov
add
int
sahf
repnz
test
pop
mov
sbb
mov
sar
push
add
xchg
dec
mov
inc
adc
inc
and
push
sub
scas
inc
mov
jns
jnp
sbb
dec
sub
sbb
push
sbb
add
shr
adc
je
inc
pop
aaa
and
data16
adc
nop
dec
and
enter
xor
in
iret
je
mov
dec
cmp
and
push
xor
popf
mov
pop
add
xchg
add
pop
push
inc
cmp
(bad)
ja
pop
pop
mov
mov
imul
je
daa
or
inc
add
nop
jl
pusha
jne
stos
xchg
push
test
rol
dec
or
mov
enter
and
enter
inc
adc
idiv
ins
inc
js
or
sbb
ja
add
out
fsin
cmps
dec
mov
shl
jecxz
xchg
push
mov
or
adc
or
jge
push
xor
sbb
cmp
push
jmp
sub
loop
fwait
pop
imul
dec
mov
pop
adc
mov
scas
stos
sbb
sbb
outs
(bad)
pop
sub
or
jle
scas
dec
mov
add
push
sub
pop
push
fisubr
addr16
fcomp
aaa
retf
ja
and
dec
xor
add
pop
add
or
in
mov
movs
fsub
and
in
adc
dec
jl
add
movs
jno
pusha
and
data16
test
push
sub
push
rol
or
mov
cmps
dec
push
pop
cmps
lock
inc
adc
push
xchg
xchg
jg
mov
add
push
call
pop
pop
add
push
ror
cmp
lds
mov
(bad)
bound
mov
inc
int3
add
inc
xor
jne
xchg
cmp
mov
xor
cmp
leave
mov
mov
wbinvd
push
in
fwait
sub
mov
and
dec
sbb
push
mov
cmp
jmp
mov
dec
ret
rol
add
std
lock
jne
push
sbb
pop
and
arpl
and
das
inc
cld
or
add
cmp
je
push
sbb
dec
sbb
add
cmp
(bad)
lock
xor
sar
jl
xor
iret
or
push
xchg
mov
sbb
shl
cli
mov
call
mov
mov
aad
paddusb
mov
or
or
add
test
jns
pop
push
add
out
pop
mov
mov
outs
xor
and
jbe
fadd
and
ins
jmp
and
in
fidivr
imul
mov
push
jle
push
fbld
mov
and
mul
mov
outs
outs
ret
adc
pusha
sub
test
or
hlt
sub
pop
jg
fisub
and
push
movs
or
mov
or
and
xchg
cld
in
pop
jmp
(bad)
dec
or
inc
xchg
xor
jno
fisub
call
hlt
dec
inc
push
jl
loope
dec
mov
pushf
dec
mov
test
xlat
and
mov
mov
pusha
xchg
push
loopne
daa
ins
xor
sbb
push
stc
jno
adc
in
push
in
adc
in
(bad)
or
rcl
popa
or
dec
es
jae
jne
adc
add
fistp
fist
test
scas
xchg
shl
test
or
add
add
(bad)
sbb
ins
sbb
scas
or
fist
xor
adc
pop
inc
int3
or
jle
nop
stos
sub
push
inc
cmps
jo
es
outs
add
xor
push
loopne
loopne
nop
shr
cmp
or
pop
ss
adc
in
in
cwde
shld
add
mov
inc
push
add
je
mov
jp
in
(bad)
xor
push
movs
and
cmp
mov
sbb
push
add
add
mov
and
je
test
cmp
test
and
rcl
scas
iret
(bad)
sbb
mov
pop
inc
fdiv
cmp
mov
sbb
xlat
into
dec
pusha
inc
in
imul
out
or
or
dec
jo
shl
in
mov
arpl
add
add
ret
sbb
mov
xchg
inc
retf
or
push
out
jns
fs
test
xor
dec
or
rcl
push
sub
test
in
pusha
into
scas
inc
shr
hlt
or
and
call
pop
jp
jbe
and
stc
mov
dec
cld
inc
xchg
enter
jne
outs
push
mov
fild
pop
and
(bad)
loopne
pop
int3
hlt
inc
and
jo
hlt
pop
cmp
lea
fs
dec
or
mov
(bad)
lahf
mov
mov
ja
sbb
and
into
push
mov
mov
xchg
cmovge
adc
fnsave
mov
mov
dec
sub
dec
test
mov
push
push
into
add
adc
adc
cmps
push
jb
je
push
jle
or
adc
pop
retf
ins
lock
ret
mov
loopne
loopne
push
inc
jmp
sbb
shl
and
dec
xchg
inc
inc
sbb
push
dec
and
shl
imul
push
or
leave
mov
dec
(bad)
or
ret
nop
mov
dec
push
xor
lock
or
inc
and
push
adc
shl
ins
stos
or
jmp
in
push
inc
shl
or
out
pop
out
push
ins
add
rcl
daa
adc
dec
jae
mov
or
jg
adc
sbb
popa
jl
or
mov
mov
rol
(bad)
xor
jmp
aam
push
or
or
push
(bad)
push
outs
arpl
jl
add
out
test
add
sbb
mov
jle
cmp
mov
pop
push
imul
je
push
daa
sub
data16
or
hlt
pusha
and
data16
push
cmp
cdq
ret
div
and
add
mov
sbb
mov
adc
dec
adc
outs
xchg
test
fwait
sbb
sbb
loope
pop
jmp
and
sbb
jmp
pop
int3
mov
dec
sub
and
push
sbb
fsub
mov
cs
push
fld
inc
xor
inc
push
push
and
jp
cld
adc
sbb
jle
sar
inc
sbb
jo
repnz
in
jge
jno
adc
pop
pop
and
or
into
les
sbb
and
popf
add
push
add
mov
mov
add
imul
sbb
adc
inc
pushf
lds
inc
cmp
jo
jbe
aaa
inc
fcom
test
pop
sbb
and
push
cdq
(bad)
adc
xchg
jecxz
mov
outs
inc
iret
xor
sbb
(bad)
in
mov
or
jge
adc
test
movs
dec
idiv
sub
lock
jl
jo
js
mov
or
jb
jmp
shl
cmp
xchg
mov
and
adc
adc
into
loopne
nop
jns
xor
fs
out
pop
xchg
adc
mov
out
sub
pop
mov
add
inc
stos
loope
les
les
lock
fadd
data16
(bad)
and
jbe
dec
les
mov
mov
push
jp
pushf
jne
push
pop
stos
adc
adc
pop
inc
xchg
fwait
es
push
jno
hlt
nop
push
scas
mov
or
lods
ud2
addr16
inc
gs
add
adc
sub
or
inc
fwait
icebp
add
(bad)
cmp
xchg
cmp
xchg
adc
xlat
mov
pushf
ja
xor
and
pop
mov
xchg
in
push
add
push
out
pop
jmp
xor
xchg
xchg
sahf
call
cmp
jg
pop
aad
lods
jp
xor
or
movs
mov
dec
cmp
es
ret
fisttp
je
pop
jmp
inc
ins
out
add
retf
jl
pop
iret
repz
or
push
scas
mov
nop
data16
xchg
mov
lock
or
jnp
xchg
adc
je
cmp
cmp
outs
movs
idiv
sub
adc
stc
ror
mov
dec
xor
scas
mov
(bad)
call
dec
pop
mov
inc
mov
dec
(bad)
daa
push
jge
add
rol
in
push
sti
add
mov
dec
xchg
mov
and
int3
cli
add
lods
add
mov
(bad)
rol
push
inc
lods
cmp
cmp
sar
and
loope
test
push
sbb
sub
push
dec
sar
inc
pop
and
xchg
repz
cmps
or
lock
or
jle
sub
xchg
pop
push
dec
add
adc
sbb
xchg
pusha
push
jns
mov
mov
loop
inc
jmp
std
xchg
stos
xor
iret
fisttp
mov
ficom
mov
dec
add
inc
inc
push
stc
mov
bound
mov
(bad)
xchg
sub
mov
push
inc
mov
push
sub
ret
dec
pop
dec
iret
ror
cmp
mov
int3
xchg
push
mov
mov
pop
add
xchg
jmp
pop
enter
pop
cwde
loop
jno
ror
pop
mov
mov
pop
mov
mov
jge
adc
in
mov
mov
xchg
sbb
and
(bad)
inc
mov
xchg
or
loopne
push
js
mov
xor
imul
cmp
dec
add
pop
cmps
sub
adc
(bad)
and
icebp
push
and
sbb
xchg
mov
ffree
sub
and
push
mov
mov
add
xlat
aas
add
lahf
cmp
pop
sub
ins
xchg
mov
cmp
add
pop
mov
jge
xor
jle
cmp
fmul
cmp
push
icebp
push
sub
jne
jne
addr16
enter
cmp
aam
shr
rol
mov
pop
mov
mov
cs
sub
cmps
call
inc
push
pop
xchg
mov
jo
lods
pop
sbb
ja
add
add
js
fldcw
sub
cmp
fsubp
nop
js
xlat
xchg
fwait
loopne
jae
inc
add
jbe
js
inc
mov
dec
cmc
push
jne
adc
mov
outs
adc
inc
mov
pop
or
inc
jl
scas
movs
xchg
dec
xchg
out
xchg
outs
sub
pusha
cmc
adc
ja
imul
ins
ds
add
pop
sbb
sbb
imul
xor
adc
or
dec
xor
push
mov
daa
push
je
push
or
js
mov
dec
je
mov
dec
cs
adc
je
jp
dec
je
jno
imul
outs
sbb
iret
cmps
movs
dec
and
lea
clc
ja
xchg
mov
cs
push
mov
retf
call
lods
inc
aas
imul
inc
adc
fistp
fstp
inc
push
pop
push
jecxz
inc
inc
loope
push
inc
jle
push
retf
xchg
mul
aam
jae
xchg
push
bound
sar
jae
and
nop
lock
cld
mov
push
xor
xor
imul
jl
add
mov
fdivr
sub
cld
or
dec
dec
pop
or
dec
leave
push
je
pop
pusha
cmp
mov
clc
sbb
xchg
xor
or
fisttp
test
lods
sub
jo
jnp
mov
dec
mov
mov
ja
sbb
movs
or
xchg
rol
inc
add
or
xchg
jo
push
mov
pop
jbe
jle
popa
sub
mov
cdq
lods
iret
(bad)
dec
pop
clc
add
push
cwde
inc
bound
(bad)
dec
cmp
lock
sub
push
jnp
cvtps2pd
adc
cmp
adc
enter
mov
ret
mov
in
test
dec
inc
add
jmp
cdq
push
ds
or
and
add
adc
jb
jno
dec
je
sbb
std
and
nop
add
ins
jl
cdq
and
sub
mov
dec
outs
nop
xchg
fdiv
dec
js
mov
sub
in
jae
data16
and
loopne
js
imul
mov
adc
or
(bad)
sub
sbb
add
xchg
inc
adc
test
push
mov
das
ja
inc
or
and
add
adc
and
inc
jb
xchg
and
movs
or
adc
(bad)
or
loopne
pop
in
call
add
sub
sub
push
sbb
cld
or
js
movs
dec
inc
cld
into
pusha
cmp
outs
call
rol
cmp
rcl
inc
jne
popa
js
sbb
and
xor
or
jmp
mov
not
and
or
repz
pop
mov
or
ja
mov
mov
jmp
inc
add
cli
add
lahf
or
cmps
mov
pop
lea
in
outs
inc
ja
dec
dec
movs
cwde
and
les
hlt
inc
mov
inc
ja
mov
or
push
add
enter
or
fwait
xor
inc
or
es
mov
xor
fs
xlat
ins
adc
sub
add
sub
mov
xlat
in
fcomi
outs
xor
cmp
in
into
loope
mov
sub
xor
fisubr
inc
and
stc
into
jg
mov
ret
adc
and
sbb
(bad)
dec
cmp
sbb
cmp
ja
adc
add
and
sbb
daa
gs
repnz
je
mov
jmp
(bad)
and
out
dec
pop
cmp
pop
test
adc
adc
jbe
icebp
add
cmps
jns
push
adc
xor
mov
movs
push
add
fsubr
mov
shl
sub
xchg
or
push
mov
(bad)
movs
mov
stos
or
sbb
test
and
add
push
or
and
adc
inc
push
fstp
add
pop
jp
call
mov
inc
dec
jg
iret
arpl
je
addr16
int3
retf
ret
xchg
adc
aaa
lock
sub
or
push
mov
or
cmp
sub
ss
or
push
add
popa
sub
sub
sbb
lahf
movs
inc
cmp
xlat
arpl
mov
aas
fadd
xor
sub
es
jne
adc
pop
ins
sbb
dec
and
dec
cpuid
push
mov
jge
add
les
mov
adc
pop
(bad)
and
mov
cmp
xchg
lea
pop
add
add
adc
add
cwde
imul
movs
std
add
adc
arpl
popaw
call
gs
or
inc
mov
dec
into
cmp
sub
inc
dec
xor
mov
pop
ss
add
std
ins
mov
lahf
sbb
clc
pop
xchg
add
xor
mov
les
inc
call
jl
je
mov
std
mov
cmp
mov
(bad)
inc
adc
neg
je
xor
xor
sbb
es
mov
adc
mov
in
loopne
adc
sbb
add
cmp
daa
cli
fisub
int3
xor
sub
(bad)
push
cld
std
cmc
ret
frstor
sub
jmp
and
ds
jl
sbb
cmp
stos
mov
mov
ret
dec
jle
retf
cdq
enter
xor
jo
ss
xchg
adc
cmc
mov
mov
xchg
adc
outs
lea
cmp
push
mov
ret
stc
add
stos
ds
lods
loopne
js
mov
adc
mov
inc
enter
push
push
or
pop
lds
(bad)
call
push
or
inc
fs
sub
in
shr
mov
sbb
push
enterw
pop
test
jle
mov
pop
xchg
inc
retf
cmp
mov
add
ja
adc
inc
pop
mov
fld
pop
aam
ja
dec
add
and
and
das
je
je
jne
(bad)
dec
sbb
jmp
sar
jecxz
add
(bad)
pop
add
xlat
cmp
(bad)
fisubr
fwait
rcr
pop
rcl
(bad)
cmp
mov
add
dec
jne
movsx
lock
je
push
and
cwd
cmp
stos
add
sub
and
mov
scas
cmp
(bad)
adc
fiadd
mov
mov
add
and
retf
jb
in
out
adc
mov
or
add
xor
xlat
push
dec
xchg
sub
push
xchg
xchg
imul
jl
xor
mov
cli
rol
mov
xchg
or
es
dec
cli
or
and
add
sbb
adc
mov
jmp
push
rol
adc
xlat
xlat
xor
push
xchg
push
sbb
xchg
(bad)
mov
push
xchg
xchg
std
int
push
and
add
mov
dec
push
sbb
je
sub
xor
cmps
push
sub
pop
lea
retf
add
mov
loopne
cdq
bound
stos
pop
imul
enter
mov
retf
sar
pop
cmp
mov
lods
or
jbe
add
outs
mov
and
push
mov
or
pop
cmp
es
lods
lods
push
add
adc
or
out
and
pop
xor
sbb
(bad)
pop
rol
and
mov
retf
rcl
loope
xor
inc
cmp
pop
in
jo
nop
or
out
call
popa
aad
jb
xchg
jne
es
gs
or
add
jl
xchg
cld
jp
add
xchg
stos
xchg
lea
mov
in
into
push
cmps
(bad)
fstp
push
lods
mov
ret
push
retf
adc
dec
pop
lea
add
imul
icebp
dec
jbe
xchg
cmp
add
push
sahf
or
xor
in
inc
pop
or
inc
test
lea
add
xlat
jo
and
inc
or
adc
ror
or
inc
loopne
mov
sbb
cmps
mov
fisubr
enter
and
sub
adc
ret
mov
idiv
into
jle
push
jns
loopne
addr16
les
or
cld
mov
or
adc
out
ss
push
mov
push
inc
or
mov
test
iret
mov
jno
adc
shl
test
nop
sar
fmul
inc
inc
inc
or
aad
adc
ins
dec
inc
add
inc
and
jmp
mov
jmp
cmps
mov
and
das
jne
adc
and
(bad)
push
mov
xor
sub
xor
dec
or
cmp
or
or
imul
dec
sub
sbb
pop
add
xchg
xchg
sub
pop
mov
mov
push
test
je
jmp
inc
inc
inc
cmp
hlt
push
push
sbb
loope
mov
and
adc
cs
(bad)
sbb
mov
sbb
cmp
inc
pop
mul
cs
es
dec
es
mov
hlt
xor
xchg
cmps
cmp
push
outs
adc
cmp
sbb
push
fisubr
or
dec
pop
hlt
pusha
jnp
jne
sbb
push
push
out
adc
and
add
jne
cmp
inc
cmp
pop
jp
imul
jp
mov
xchg
jbe
dec
fcmove
fadd
and
retf
jl
jmp
outs
repz
or
or
jl
in
mov
ror
mov
mov
dec
leave
call
mov
xor
paddusb
inc
daa
inc
dec
mov
cdq
cli
sub
add
and
jl
push
jmp
outs
mov
test
mov
ja
add
test
add
ss
inc
xchg
rol
jne
mov
fist
or
add
(bad)
int
fst
call
nop
test
xor
mov
xchg
push
jne
js
mov
pop
add
inc
rcl
movs
rcr
sub
and
or
xchg
fsub
cmp
mov
mov
and
xchg
sub
es
cld
sub
lds
je
sbb
xchg
pusha
inc
pusha
sar
jle
or
push
jnp
pop
push
outs
adc
popa
mov
or
cmc
push
or
js
jmp
sbb
add
arpl
cdq
sar
pusha
push
dec
dec
and
push
jle
mov
mov
cs
add
add
xchg
xchg
dec
inc
dec
or
xchg
lock
movs
push
lock
adc
push
(bad)
leave
ror
lock
mov
or
jne
pop
movs
cli
cmp
adc
push
or
fmul
mov
or
test
add
sbb
mov
std
iret
mov
lods
stos
sbb
je
int3
push
rcl
adc
bound
add
push
mov
outs
movs
inc
rcr
or
je
ja
sbb
dec
hlt
xor
inc
(bad)
mov
mov
xchg
dec
dec
sub
and
fwait
int3
inc
xchg
xor
cmp
push
imul
ret
ss
add
cmp
xchg
movs
pop
or
mov
fdivr
pop
sub
sub
je
outs
adc
nop
sub
dec
fidivr
aam
ds
je
rol
adc
inc
mov
inc
dec
std
and
pop
inc
mov
inc
fs
es
mov
enter
pop
sub
stos
mov
add
xor
sbb
xchg
mov
xlat
xchg
or
cmp
push
aad
xor
in
inc
pop
pop
pop
shl
mov
cmc
(bad)
and
sub
xchg
dec
push
inc
adc
mov
mov
pop
shl
or
not
test
sbb
push
sti
adc
(bad)
lds
xchg
or
push
and
loopne
or
icebp
sti
pop
jl
sbb
pop
ins
or
inc
or
mov
test
jle
xchg
cmps
sub
fsubr
mov
aad
pop
mov
push
fstp
ffree
push
ret
call
js
dec
scas
lock
ret
gs
cmps
hlt
xor
xchg
adc
jle
adc
nop
adc
pushf
loope
cmp
ds
dec
add
cmp
adc
mov
mov
cmc
daa
fld
(bad)
inc
movs
inc
pop
jbe
(bad)
mov
cdq
lea
pop
sub
xchg
aam
push
xchg
xchg
xchg
adc
cmp
xor
daa
pop
push
and
mov
add
push
ds
fist
adc
or
or
mov
retf
mov
xchg
add
push
add
or
pop
push
out
xor
pop
gs
push
dec
adc
cmp
les
and
rol
dec
xchg
or
dec
xchg
arpl
pop
call
adc
mov
inc
sbb
or
mov
ret
dec
loope
(bad)
mov
xor
push
dec
mov
mov
inc
sub
add
ss
pop
xchg
fmul
repz
push
test
ret
pusha
je
jb
jg
ret
fwait
leave
xchg
inc
pop
add
inc
shr
jo
push
sub
pop
inc
mov
xchg
xchg
pop
data16
in
push
adc
(bad)
stos
or
call
stos
sbb
jle
add
ror
add
jnp
push
dec
adc
or
push
call
data16
cmps
fsubr
xor
dec
rol
lea
test
clc
push
push
dec
add
out
ret
push
movs
lock
leave
pop
out
pusha
pop
cdq
xor
inc
sub
inc
movs
pop
pop
dec
aad
adc
aaa
sbb
fisub
adc
pop
test
test
xor
rol
mov
dec
jp
cld
mov
loop
dec
pop
into
mov
sbb
mov
gs
add
cmp
and
sub
pop
inc
cmps
push
fimul
loop
xor
fs
or
and
jbe
fsub
xor
jp
jecxz
fld
pop
mov
in
push
ret
mov
push
dec
adc
adc
das
xchg
mov
and
jne
adc
leave
or
adc
or
icebp
imul
mov
sbb
mov
fld
mov
test
sbb
and
inc
mov
cli
hlt
push
dec
gs
and
cdq
inc
test
or
or
dec
push
inc
inc
or
dec
mov
add
xor
sbb
movs
daa
mov
cmp
mov
or
jecxz
sbb
sbb
adc
pop
pop
add
enter
lds
in
div
adc
and
push
dec
mov
pop
daa
sbb
sub
jo
(bad)
fistp
lds
jmp
add
xlat
rcl
lds
pop
jl
cmp
push
xchg
test
sahf
ret
push
ret
inc
or
xchg
add
in
pop
and
fucomip
or
mov
mov
stos
(bad)
(bad)
xchg
scas
aas
add
js
call
mov
push
mov
sbb
xlat
adc
xchg
xor
inc
adc
push
jl
xchg
xchg
jge
sbb
mov
sysret
fwait
jb
movs
fdivr
cmp
or
inc
dec
adc
sbb
pop
test
push
jnp
cmc
push
jbe
dec
jb
mov
shr
xor
adc
xchg
push
cld
retf
mov
push
repnz
fwait
cli
(bad)
fidiv
or
cmp
(bad)
fcmovnu
jp
rol
bound
inc
loopne
dec
retf
sub
inc
inc
or
popf
or
rol
lock
sbb
popa
in
imul
dec
sub
mov
add
dec
cmps
add
dec
and
movs
or
fwait
enter
daa
lods
dec
movs
dec
or
inc
jg
imul
mov
sbb
ret
mov
mov
sbb
lock
aas
sbb
mov
sbb
mov
mov
sbb
push
xor
mov
sbb
add
add
and
dec
push
xor
mov
add
dec
and
dec
rcr
add
ja
std
adc
cli
add
add
pop
hlt
inc
adc
push
mov
mov
cmc
xchg
inc
mov
jb
sub
pop
mov
and
std
mov
mov
mov
mov
aad
adc
rol
push
push
cmp
dec
inc
or
js
out
mov
sub
push
in
xchg
jmp
mov
xchg
and
cmp
arpl
test
sbb
pop
mov
xchg
add
adc
dec
enter
aad
es
add
rol
xor
xor
lods
movs
xchg
jae
jl
add
bound
xchg
pop
pop
fimul
adc
arpl
inc
aad
iret
mov
cmps
enter
(bad)
shl
sub
imul
ds
xor
lea
and
in
mov
jbe
sbb
jmp
mov
jp
mov
ret
pusha
or
xor
add
pop
and
imul
and
(bad)
pusha
dec
je
jbe
push
dec
ss
inc
jo
inc
or
xor
jae
daa
cmps
mov
imul
lds
add
sub
mov
mov
adc
lods
and
dec
sub
cs
fldenv
nop
fwait
jnp
arpl
mov
daa
jnp
or
div
inc
push
push
int3
inc
xchg
ret
cmp
jl
cmp
lock
dec
shl
inc
ret
xchg
in
jbe
dec
lea
push
push
mov
pop
xor
pusha
push
pop
scas
sar
xor
rcl
xchg
(bad)
gs
or
push
sub
popf
push
test
jo
pop
sbb
push
jnp
push
push
sub
push
mov
mov
std
sub
xchg
xor
(bad)
hlt
and
inc
enter
loopne
hlt
jbe
out
add
cmp
mov
sub
ret
lahf
fmul
jb
sbb
sbb
loopne
into
or
push
mov
arpl
cmp
xor
or
jg
icebp
mov
lock
lods
jbe
xor
adc
dec
mov
jmp
or
sti
pop
arpl
or
xlat
cld
xchg
ins
and
mov
and
adc
mov
and
adc
add
xor
sar
jmp
lea
out
dec
xor
xchg
pop
mov
mov
in
xchg
adc
or
iret
js
and
jne
and
inc
add
ds
pop
sub
cld
in
mov
mov
cmps
call
aaa
xor
adc
(bad)
adc
push
push
mov
pop
out
mov
mov
push
push
inc
push
shl
nop
ins
or
dec
xchg
add
xor
sbb
call
pop
xor
adc
add
ds
ror
out
and
pop
(bad)
aam
cmp
(bad)
cwde
xchg
sbb
rol
push
cmp
dec
idiv
push
rcr
cmp
jge
lea
mov
fs
push
or
shl
inc
inc
push
jl
pop
pop
cmp
xor
cmp
or
cs
add
mov
and
sub
pop
int3
mov
inc
and
adc
aas
pusha
aam
jmp
and
fidiv
inc
xchg
mov
nop
adc
ficom
or
jg
push
adc
add
mov
jl
pop
jae
cli
pusha
stos
mov
add
sub
push
and
add
xchg
not
lock
mov
and
xchg
inc
cdq
jp
push
mov
mov
xchg
mov
xor
mov
es
push
ret
lahf
pop
or
pop
loopne
mov
xchg
cmp
add
add
int3
add
jae
ret
mov
pop
jp
je
dec
mov
dec
xchg
(bad)
cmps
xchg
xchg
jbe
inc
mov
mov
loope
mov
sar
call
(bad)
(bad)
xor
hlt
loope
xor
dec
add
push
xor
pop
jle
call
retf
jne
out
mov
cmp
pop
adc
mov
mov
add
jo
pusha
test
ror
lods
dec
test
or
mov
and
test
imul
jo
inc
rol
pop
sahf
add
inc
mov
pop
mov
pop
inc
leave
cld
add
std
and
sbb
fld
lahf
pop
mov
or
dec
mov
or
sbb
add
inc
out
jl
aas
push
pop
adc
cmp
aas
mov
aaa
jmp
add
jmp
xor
inc
cwde
ror
imul
mov
xchg
outs
and
cmp
test
or
xchg
mov
push
xor
mov
push
dec
pusha
iret
mov
mov
enter
movs
adc
pusha
out
push
push
inc
shl
in
les
mov
pop
sub
mov
(bad)
or
iret
add
dec
adc
adc
xchg
pop
loopne
lea
mov
dec
xchg
iret
hlt
retf
add
pop
sbb
pop
call
dec
mov
push
dec
sbb
adc
cmps
cmp
call
jo
or
lea
ror
sbb
sbb
mov
movs
pop
xchg
jmp
cmps
pop
movs
mov
dec
dec
adc
adc
cdq
pop
pop
inc
(bad)
mov
mov
test
inc
push
add
ins
das
push
movs
dec
call
sub
repz
cmp
xor
imul
xchg
mov
mov
icebp
pop
adc
pop
shr
leave
sbb
outs
ror
nop
dec
loope
sbb
xor
xchg
pop
ins
adc
(bad)
sub
push
pop
push
mov
mov
mov
clc
jb
dec
je
into
jb
or
shr
jb
xor
jb
adc
cmp
and
xor
cmp
pop
adc
inc
ret
lahf
inc
or
jo
call
add
or
and
fld
push
or
push
fs
pusha
mov
mov
scas
sbb
mov
or
sti
jne
fnsave
dec
pop
imul
cmp
pop
jmp
out
cmp
mov
loopne
inc
jge
adc
xchg
cmp
hlt
fcom
lods
push
popa
xchg
jmp
add
mov
sbb
inc
shl
sub
sub
movs
lea
mov
arpl
pop
adc
rol
pop
or
dec
add
idiv
(bad)
cmp
xchg
dec
adc
jae
movs
pusha
pop
dec
inc
rcl
or
inc
dec
test
test
je
sub
mov
push
inc
mov
mov
adc
inc
and
or
and
jns
fdivr
(bad)
xor
ins
or
dec
sbb
and
ss
dec
mov
push
mov
jbe
dec
sub
ds
sub
mov
inc
inc
lods
pop
mov
out
jnp
dec
xlat
mov
or
das
dec
je
mov
or
out
sub
sub
mov
add
call
and
add
push
daa
add
(bad)
jmp
sub
xchg
push
push
aaa
adc
add
int
mov
xlat
inc
sbb
jmp
pop
aaa
test
add
retf
arpl
dec
shl
imul
stc
paddusb
jne
outs
push
(bad)
adc
int3
or
popa
loope
mov
adc
push
inc
xlat
cmp
out
je
mov
aam
push
mov
adc
mov
daa
loopne
adc
das
mov
or
jmp
add
add
pop
jge
add
(bad)
rcr
rcr
bound
push
pop
pop
dec
pop
imul
frstor
inc
xchg
movs
jg
and
stc
mov
shl
mov
lea
arpl
push
jle
mov
fsubr
loope
jmp
js
mov
and
jnp
icebp
ins
pop
add
xchg
inc
or
(bad)
xor
xchg
adc
lock
icebp
dec
push
hlt
add
mov
retf
or
or
jno
push
sub
icebp
adc
inc
push
das
cmc
sbb
mov
mov
mov
adc
clc
sub
mov
and
jle
inc
add
jl
push
popa
lock
jne
push
push
pop
aas
lods
xlat
pop
faddp
or
add
mov
push
aaa
add
pop
mov
arpl
mov
xlat
or
mov
mov
test
push
add
test
inc
or
sti
mov
mov
xlat
sbb
add
add
jno
xchg
xchg
inc
movs
lea
movs
scas
or
cmc
dec
pop
lds
xchg
mov
mov
iret
push
hlt
dec
mov
sbb
(bad)
mov
fld
adc
loopne
add
jp
frstor
inc
or
push
inc
je
sbb
push
sti
in
(bad)
movs
sti
lds
push
push
xchg
(bad)
mov
sbb
rcr
pop
xor
cdq
rcl
icebp
lahf
icebp
rol
inc
cmp
je
dec
sbb
add
dec
pop
cmps
enter
arpl
mov
test
pop
es
inc
mov
jno
sub
call
ret
cmp
mov
dec
gs
or
mov
pop
mov
stc
adc
sar
lods
sbb
cmp
lea
adc
hlt
add
or
hlt
fcomp
cld
lock
fldcw
and
data16
xor
loopne
sub
loopne
neg
pop
sbb
or
add
inc
mov
add
retf
jns
push
pop
push
loopne
das
or
adc
hlt
dec
inc
cmp
imul
hlt
outs
rcl
rcl
in
xor
pusha
jo
cld
adc
call
dec
pop
loope
loopne
in
adc
mov
add
dec
add
retf
ins
adc
pop
fdivr
fbld
sub
jge
cmp
gs
inc
mov
jmp
test
sub
push
mov
push
mov
cmp
loopne
cwde
ret
ss
jno
mov
sbb
push
inc
(bad)
xchg
add
popa
out
jl
cld
loope
retf
push
loopne
add
mov
ds
and
jo
aaa
xor
(bad)
stc
movs
inc
sbb
popf
xor
shl
aas
dec
adc
dec
sub
xchg
cmps
push
jle
pop
cmp
repnz
or
mov
inc
cmps
mov
mov
adc
mov
or
and
inc
xor
fcom
or
mov
sbb
lahf
loop
inc
ins
(bad)
push
leave
inc
mov
test
or
or
pop
pop
xor
push
scas
arpl
scas
popa
jmp
sub
inc
push
mov
jae
dec
add
test
push
jo
pop
fnstcw
or
push
or
xchg
or
or
les
js
xchg
call
cmps
outs
mov
dec
test
or
les
shr
(bad)
dec
jmp
gs
mov
or
inc
call
(bad)
cmc
push
pop
rcl
aas
pop
and
test
add
or
inc
or
cli
dec
add
sub
mov
inc
daa
pop
out
push
sbb
dec
and
cmp
jno
or
out
dec
adc
fisub
call
ror
lods
fcom
inc
call
inc
pop
jo
clc
retf
lea
inc
cmp
jg
cmps
or
xlat
(bad)
add
jmp
push
imul
aas
jl
pop
cmp
push
add
sub
cmp
adc
cmp
dec
fs
dec
jbe
(bad)
or
sti
inc
mov
mov
pop
sbb
mov
inc
(bad)
lock
add
or
xor
lea
jmp
mov
lods
sbb
call
mov
jmp
shl
adc
repz
imul
mov
dec
mov
mov
pop
or
inc
push
sbb
and
jg
or
push
jp
or
mov
sub
push
or
and
popa
lods
adc
push
jne
dec
push
inc
in
jl
test
sub
in
adc
hlt
pop
imul
dec
and
and
add
xor
add
(bad)
mov
movs
inc
mov
out
shr
fisub
xor
popa
dec
fisub
jl
cld
jae
add
inc
mov
push
mov
popa
rcl
jne
cld
in
jb
ja
sbb
add
adc
mov
mov
lods
das
cmp
pushf
sub
inc
ds
jecxz
imul
pop
(bad)
sbb
mov
ret
fsubr
cld
adc
add
adc
int3
mov
rcl
inc
sbb
inc
sbb
xchg
inc
pop
inc
mov
ror
push
test
mov
pusha
mov
mov
xchg
xor
adc
xchg
jecxz
loop
or
sub
push
je
xchg
sub
repnz
fiadd
sar
retf
jae
ins
jo
aaa
jmp
push
mov
sub
inc
mov
inc
aam
cmp
or
sub
push
or
aam
and
xchg
ret
mov
dec
rol
and
jmp
mov
or
push
scas
pop
xchg
lock
std
jmp
sub
push
das
lock
or
shl
or
mov
jbe
jp
outs
aam
adc
ret
retf
test
inc
or
nop
dec
push
adc
(bad)
fisub
adc
or
scas
in
rol
(bad)
adc
cmps
add
ins
lahf
lock
lea
cmp
pop
inc
cmp
outs
jnp
push
sub
std
pop
xor
sbb
popa
xor
lea
hlt
add
xchg
add
pop
arpl
push
or
rol
stc
or
es
outs
adc
cmp
mov
sbb
dec
je
or
push
push
les
jecxz
je
ret
(bad)
sub
dec
add
imul
(bad)
push
(bad)
cmp
jne
data16
push
xchg
les
(bad)
push
ss
stos
dec
adc
push
xor
dec
mov
loop
mov
sar
pop
sbb
cli
push
jl
add
xor
add
mov
adc
ins
jmp
push
xchg
dec
sub
cmp
aas
or
test
cmp
inc
call
jmp
mov
ret
lods
out
fiadd
das
int
js
fld
fdivr
push
stos
and
clc
das
lods
enter
xor
neg
pop
sbb
sbb
pop
inc
call
cmp
inc
cmp
cli
std
ds
xchg
dec
sbb
popf
and
cmp
xchg
paddsb
lock
sub
imul
xor
push
fs
mov
push
and
sbb
and
(bad)
adc
and
add
test
adc
mov
add
int
jmp
test
or
xchg
fild
mov
adc
mov
and
push
in
pop
cmp
pop
push
push
sbb
ss
cmp
add
xor
or
adc
add
ffreep
inc
fwait
pop
add
sub
xchg
aam
jp
sbb
add
test
push
xchg
test
fiadd
mov
cmp
lods
adc
xor
mov
pop
dec
call
inc
sar
mov
add
adc
sbb
mov
(bad)
gs
cmc
inc
test
scas
mov
rcl
js
and
adc
cmp
xchg
or
add
mov
mov
sbb
push
sbb
(bad)
push
xor
mov
retf
pop
call
loopne
xor
ret
or
or
jge
retf
xchg
pop
jb
jmp
call
and
inc
adc
push
adc
inc
popa
and
fimul
test
and
adc
add
into
test
rcr
lods
test
add
mov
in
rol
adc
adc
inc
cmp
out
adc
cmp
out
sub
add
(bad)
lock
or
push
rcl
clc
fcom
mov
sub
rol
dec
adc
aad
fisub
sub
jp
mov
or
push
ds
xchg
push
(bad)
popa
pop
repnz
push
(bad)
hlt
sbb
xlat
out
cmp
add
cmp
pop
push
add
lods
dec
cmps
cdq
iret
pusha
cmps
div
stos
cmp
leave
sub
pop
pushf
and
mov
or
add
adc
push
inc
and
xor
dec
aaa
mov
mov
dec
clc
and
add
push
or
ror
add
dec
push
retf
sub
imul
dec
and
cmp
xor
push
mov
rcpps
push
or
movs
sahf
add
add
mov
pop
jl
fs
adc
loopne
mov
cmp
xor
adc
jecxz
cwde
push
mul
imul
jmp
xchg
dec
jmp
xor
pushf
add
push
inc
mov
xor
pop
ins
adc
into
push
rol
les
mov
call
add
aad
or
test
or
jl
ret
je
push
pop
mov
or
in
sbb
mov
pop
iret
push
mov
add
push
cli
adc
pop
stc
xor
or
and
sbb
add
test
xor
mov
shl
int3
mov
ret
xor
adc
dec
xchg
cmp
adc
popf
mov
or
and
sbb
add
and
dec
dec
stos
xchg
add
loopne
or
sbb
jae
in
add
outs
jo
icebp
sbb
adc
mov
test
cmp
pushf
dec
dec
loop
xor
nop
sbb
movs
adc
lock
pop
sub
(bad)
lock
jg
inc
adc
mov
inc
cmp
xchg
shl
mov
ret
(bad)
dec
fst
aad
(bad)
and
pop
push
push
sub
sub
xor
or
mov
mov
or
lods
xor
mov
and
cmc
and
or
pusha
push
je
inc
std
add
or
inc
js
cmp
sub
push
adc
push
xchg
mov
shr
sbb
loopne
mov
xchg
jo
inc
cmp
sub
cdq
mov
sub
loop
invd
mov
pop
lock
add
add
jns
adc
inc
imul
ins
or
pop
inc
mov
ds
retf
dec
xor
aas
sbb
add
push
and
mov
mov
ret
xor
out
and
push
out
dec
adc
cwde
push
add
rcr
test
clc
and
xchg
bound
push
mov
(bad)
ja
and
or
cdq
pop
jb
push
xor
cmp
je
lods
dec
icebp
rol
test
mov
and
mov
add
inc
sar
jbe
rcr
jg
inc
fwait
pop
push
fdiv
adc
or
(bad)
cmps
cmp
push
push
adc
xor
push
or
add
inc
call
dec
ret
or
(bad)
adc
and
cli
or
dec
loopne
jge
mov
push
dec
pop
jle
cmp
mov
sbb
rcl
loope
or
movs
or
frstor
jmp
aam
mov
sbb
gs
add
int3
add
out
or
mov
pop
dec
add
ret
pop
mov
mov
sub
cli
stos
jo
dec
rcl
lock
or
jo
and
movs
rol
lock
jmp
ds
ret
rcl
xor
mov
cs
call
dec
pop
(bad)
or
out
shr
add
mov
into
or
pop
adc
nop
call
pop
or
clc
pop
shl
mov
mov
or
jl
in
xor
push
xchg
outs
clc
pop
clc
sbb
dec
or
mov
or
sub
xchg
or
xor
cmp
mov
sub
add
cld
lds
test
adc
(bad)
not
add
pop
push
or
add
repz
sub
cli
add
jl
add
cmp
and
add
loope
int3
adc
adc
out
or
adc
mov
test
lods
dec
cmps
loopne
dec
add
gs
loope
inc
mov
mul
xchg
mov
dec
enter
add
jo
cmp
cmc
mov
push
adc
add
cmp
inc
adc
inc
adc
jns
add
mov
sub
xor
xor
add
or
cmps
and
imul
(bad)
or
dec
adc
sbb
xor
jnp
ja
cld
mov
push
xchg
(bad)
pop
inc
clc
cmp
jmp
jmp
dec
sbb
mov
jb
jl
bound
scas
dec
dec
movs
xlat
cmp
in
and
hlt
xor
into
mov
cs
hlt
call
and
ficomp
jno
adc
movs
scas
jge
or
aad
fst
mov
xor
pop
cmp
in
dec
(bad)
fist
enter
or
mov
push
mov
and
or
and
xor
push
pop
and
sbb
jo
dec
push
mov
ins
xor
or
shl
fidiv
cdq
mov
int3
xchg
mov
call
mul
push
sbb
push
mov
cmp
iret
bound
add
clc
push
in
or
or
jg
pop
adc
das
ins
pusha
dec
in
dec
sub
xchg
(bad)
jmp
push
and
mov
sub
mov
add
push
ret
fsub
push
dec
sbb
cdq
in
dec
das
sub
cmp
inc
push
pop
mov
dec
pop
ins
inc
mov
mov
clc
pop
mov
mov
adc
(bad)
jle
add
dec
js
cmps
add
mov
mov
pop
sbb
jb
pop
in
test
jmp
inc
jb
iret
push
sbb
add
jo
or
lea
bound
or
dec
cmp
imul
mov
call
dec
inc
cmp
pop
and
(bad)
adc
jl
or
adc
in
add
jne
jmp
retf
or
pop
fdivr
push
test
fld
movs
jp
push
test
int
ret
retf
sbb
fmul
xchg
dec
and
adc
mov
ss
(bad)
imul
loop
push
sub
add
ss
mov
dec
movs
cmps
inc
mov
bound
rol
jle
std
les
cmp
rcr
add
movs
sub
ss
aam
aaa
and
add
(bad)
fadd
ins
jmp
jbe
or
xchg
sbb
fdivr
and
lock
mov
push
add
shl
shl
call
mov
nop
sahf
and
sub
shr
push
push
loope
inc
(bad)
ss
adc
and
xor
and
(bad)
data16
mov
sbb
int3
and
and
(bad)
mov
sub
es
and
je
push
pop
xchg
test
aam
dec
xor
in
ins
jg
arpl
inc
and
cs
sbb
mov
shr
adc
sbb
dec
pop
push
out
jno
fwait
rol
ficomp
int3
push
ss
inc
stos
sub
je
rcr
aad
mov
jne
add
pop
inc
bound
mov
pushf
push
js
xlat
lock
xlat
mov
xor
idiv
inc
jge
js
mov
cmps
and
sbb
mov
sbb
lock
adc
push
je
cmps
mov
jl
dec
cld
dec
cld
xchg
je
pop
ds
fcom
fwait
dec
pop
or
mov
cwde
mov
push
mov
mov
add
daa
pop
mov
cld
out
in
dec
lock
fsubr
fcmovb
inc
dec
jo
aas
call
push
push
sar
test
mov
mov
push
sub
mov
dec
or
add
jl
ret
xchg
xor
dec
adc
mov
outs
in
mov
mov
cmp
stos
ror
imul
loope
repz
loopne
sbb
pusha
xor
pop
add
pop
and
movs
aam
mov
imul
(bad)
push
push
inc
lock
sbb
sbb
xor
mov
mov
add
mov
adc
xchg
jl
push
or
ds
xor
or
imul
inc
cmp
loop
or
sti
fnstcw
inc
shr
and
ja
pop
and
sub
xor
sbb
push
adc
retf
and
call
sbb
cwde
int3
xor
and
cmp
std
add
push
push
add
adc
adc
mov
movs
sbb
mov
cmps
or
mov
add
dec
outs
mov
daa
dec
test
mov
jmp
and
sti
mov
sub
mov
jp
mov
jne
jmp
sub
xchg
push
dec
jnp
or
mov
push
mov
sub
add
and
nop
sbb
jge
pop
cwde
add
fsub
push
adc
inc
stos
je
cs
test
mov
das
cs
push
mov
adc
sti
outs
and
add
inc
adc
inc
or
jns
pusha
mov
mov
test
sub
ret
cmp
cld
cmp
inc
mov
out
inc
jge
jge
(bad)
nop
fisttp
and
test
push
(bad)
mov
inc
inc
call
sbb
cdq
call
xchg
adc
pop
push
ss
push
push
pand
xchg
sub
and
sub
xlat
in
xor
inc
pop
mov
cmp
(bad)
xchg
ds
pop
pop
hlt
fisubr
push
dec
inc
push
mov
retf
imul
aam
jbe
and
pop
mov
iret
cmp
jb
retf
cmp
jp
(bad)
sub
fcom
in
push
idiv
jg
jo
popf
ins
cmp
lods
fimul
or
aas
push
inc
fdivr
aaa
adc
xlat
cmp
adc
pop
popf
loopne
les
cmp
adc
sub
das
push
enter
bound
pop
sbb
and
(bad)
mov
xchg
sbb
test
imul
mov
jecxz
sbb
inc
jns
enter
jns
mov
pop
and
inc
rcr
jp
add
call
ins
mov
dec
ss
or
pop
stc
or
jle
das
add
fdiv
sub
ret
adc
adc
ret
jno
add
dec
ds
arpl
pop
jb
lea
push
cmp
push
ss
nop
inc
dec
push
xchg
xchg
ror
adc
jae
mov
push
movs
add
fstp
nop
mov
js
fs
mov
fmul
dec
cmp
xchg
xchg
push
add
rol
mov
cs
jecxz
add
add
sub
je
dec
cdq
sbb
test
pop
rcl
push
dec
pop
cwde
cmp
pop
fcomp
adc
cmps
or
sub
sar
add
sbb
adc
push
(bad)
adc
out
jmp
add
pop
and
mov
jne
sub
ret
(bad)
popa
bnd
jbe
xor
(bad)
rol
xchg
cmc
cs
daa
or
push
add
xchg
test
aas
jle
and
cvtpi2ps
push
xchg
mov
cwde
push
cli
and
and
add
and
es
mov
aas
cld
ds
push
jmp
jmp
xor
jmp
dec
jg
mov
fmul
add
mov
lds
adc
mov
ja
adc
push
mov
cmps
arpl
push
ret
or
inc
movs
icebp
or
cmps
mul
or
fmul
jmp
add
retf
movs
std
jno
rep
fmul
inc
xchg
inc
leave
fstp
adc
aaa
mov
xor
cmp
or
or
mov
jg
and
sbb
dec
add
fadd
hlt
cmp
xor
or
leave
adc
hlt
add
or
ret
cmp
jp
rcr
cmp
inc
xchg
icebp
adc
adc
adc
sbb
sub
inc
add
out
dec
in
out
and
add
sbb
retf
jmp
sbb
sbb
ds
add
sbb
xchg
dec
js
adc
sbb
aam
and
scas
mov
xchg
cs
push
xor
les
push
and
not
mov
cmp
sub
les
loope
add
into
(bad)
push
ins
sub
imul
push
daa
ins
push
dec
sub
mul
jbe
dec
rcr
xlat
lds
lods
or
push
sub
shl
icebp
pop
mov
sub
out
fdivr
adc
add
fst
cmp
xchg
in
shl
dec
sub
and
shl
ret
push
push
jmp
dec
add
and
cmps
fmulp
mov
(bad)
sbb
aaa
sub
outs
mov
xor
imul
fcom
jne
lahf
xchg
popa
dec
or
or
adc
sub
popf
sub
clc
or
mov
inc
out
lods
scas
mov
push
jnp
or
mov
cmp
loopne
pop
push
adc
push
adc
dec
push
imul
int3
or
mov
add
cmp
adc
dec
adc
adc
jg
jns
sti
cmps
rol
inc
push
jg
jno
push
loop
iret
dec
push
push
fisubr
sub
inc
jp
adc
and
rcl
mov
call
adc
sub
enter
rcl
push
inc
sar
retf
inc
imul
inc
jmp
jg
jne
(bad)
div
push
shl
jl
adc
push
jl
gs
mov
js
lea
fstp
sbb
mov
pop
pop
mov
and
jae
bound
aam
and
pop
shl
mov
call
and
mov
jecxz
cmc
jno
in
push
pop
push
mov
sub
inc
or
xchg
adc
rol
jne
nop
je
and
push
aad
sub
retf
mov
jo
daa
push
nop
add
xchg
mov
iret
add
mov
cmps
and
push
pop
or
jo
dec
outs
aaa
mov
sbb
jl
ins
cmp
je
jb
test
shr
imul
and
jg
out
dec
js
cmp
je
ret
cld
test
jge
hlt
jg
or
adc
inc
push
call
cld
and
shl
sbb
pop
push
sti
adc
sub
inc
jl
rcr
and
shl
add
add
pop
aam
in
sbb
jecxz
test
adc
arpl
jne
mov
and
sub
push
mov
into
add
loope
clc
ror
pop
aas
shl
pop
mov
(bad)
jo
sub
loop
or
loope
sub
jp
jle
xor
lea
jmp
ror
push
mov
add
inc
retf
mov
retf
test
test
es
or
(bad)
sbb
cmps
xor
fidiv
and
lea
jge
jo
mov
push
jne
push
mov
or
xchg
add
adc
adc
sbb
hlt
mov
pop
popf
adc
push
sub
xor
add
push
test
(bad)
retf
call
das
rcr
inc
rcl
dec
mov
gs
xchg
inc
and
call
(bad)
pop
pop
jle
and
inc
pop
shl
enter
(bad)
(bad)
push
push
sub
push
push
inc
ror
xor
int
sar
or
inc
and
js
int3
out
adc
fs
inc
test
and
push
pop
pop
dec
mov
sbb
shl
dec
add
ror
dec
rcr
rol
push
cmp
sbb
dec
pop
xor
xchg
aaa
push
sbb
and
push
xchg
fcomp
scas
xchg
jno
add
add
add
call
dec
lea
out
adc
xchg
jno
outs
mov
jmp
mov
cmp
inc
and
inc
inc
js
call
je
and
pop
retf
sbb
rol
(bad)
call
fmul
push
lock
fnstcw
adc
xor
(bad)
add
sti
mov
or
div
cmp
sub
jle
sbb
adc
fsub
popa
ret
mov
in
jecxz
cmc
and
adc
and
pop
cmc
in
jmp
imul
(bad)
lock
adc
shl
and
xchg
loopne
std
sar
jle
dec
pop
xchg
pushf
iret
out
popa
rol
jmp
jl
(bad)
ss
popa
loope
inc
inc
pop
lock
jo
std
and
xchg
call
mov
pop
sub
(bad)
mov
arpl
cwde
popa
leave
lock
popa
test
push
cld
(bad)
adc
cmp
inc
dec
cmps
sbb
and
mov
xor
xchg
jno
xchg
cmp
pop
cmp
imul
popf
dec
mov
pop
cmps
retf
je
sbb
jl
inc
popf
cmp
jl
fimul
and
adc
xor
seto
push
es
stos
aas
jge
(bad)
or
adc
fs
mov
dec
push
push
sbb
push
adc
jl
call
sbb
test
push
out
cs
dec
pop
inc
or
ja
jl
cmp
xlat
sub
add
in
imul
and
jns
push
xor
clc
mov
pop
add
rol
add
scas
fs
jnp
add
dec
adc
pop
mov
inc
retf
sbb
inc
push
outs
sbb
enter
fs
dec
or
pop
add
push
(bad)
je
sbb
outs
pop
nop
dec
adc
test
push
(bad)
sbb
xchg
mov
jne
sub
add
sbb
or
cmp
cwde
ds
add
add
in
retf
adc
pop
xchg
(bad)
xchg
push
daa
push
clc
les
enter
sub
add
jmp
or
add
add
push
mov
(bad)
dec
sub
add
ins
mov
xor
and
jae
mov
xchg
jne
mov
fidivr
adc
cwde
dec
or
mov
das
push
add
or
xchg
xchg
clc
hlt
mov
push
xor
add
cmp
outs
or
sbb
(bad)
pop
daa
dec
xchg
mov
sbb
or
jmp
add
or
lahf
sbb
or
push
sub
mov
add
sub
movs
js
jecxz
or
mov
sub
inc
add
nop
push
push
sbb
ds
enter
or
add
adc
add
adc
dec
shr
cmp
or
out
sub
pop
and
dec
and
mov
movs
(bad)
call
les
sub
call
xor
and
daa
jmp
retf
adc
mov
mov
movs
push
mov
pop
xor
mov
sbb
add
aad
cmc
jmp
pop
test
jnp
pushw
adc
and
add
xchg
mov
ret
(bad)
(bad)
dec
mov
adc
ret
adc
in
push
mov
xor
lods
and
xchg
shr
inc
add
out
adc
int3
xchg
outs
add
adc
call
inc
outs
xor
clc
fild
dec
add
pop
dec
pushf
push
or
data16
data16
add
adc
or
loope
loopne
js
jno
ficom
or
sub
cmp
adc
sub
mov
add
or
pop
mov
in
push
sqrtps
scas
imul
jl
and
push
stos
adc
(bad)
jnp
inc
sbb
push
ret
fadd
xchg
lds
and
inc
sub
lahf
xchg
ins
push
xor
inc
sub
lock
pop
les
xor
rol
fst
mov
cmp
fs
lods
inc
jmp
sub
add
push
hlt
sub
adc
adc
das
cmovle
ret
or
push
mov
popf
test
sbb
ror
dec
sub
leave
add
cmp
xchg
xor
sti
sbb
or
cmp
push
movs
pop
lahf
(bad)
xor
ret
jl
push
sub
jg
and
pop
or
test
sub
cmp
xor
or
mov
fisub
and
out
dec
push
lods
test
add
mov
dec
pop
inc
cs
je
add
sub
icebp
popa
push
inc
lods
push
inc
inc
push
sub
sbb
mov
mov
dec
sbb
sbb
pop
mov
pop
dec
add
and
mov
push
add
mov
inc
add
push
sub
cmp
mov
inc
dec
mov
sbb
in
sbb
dec
bound
cmps
push
xlat
pop
mov
js
stos
mov
and
loope
ret
and
add
push
loop
bound
call
or
mov
mov
mov
div
adc
jl
hlt
inc
inc
daa
pop
pop
ret
loopne
pop
xchg
push
data16
dec
push
scas
mov
push
inc
jmp
push
pop
fimul
mov
xor
and
and
or
cwde
push
mov
mov
push
add
adc
(bad)
mov
mov
test
aad
rep
or
lea
xchg
push
add
push
adc
daa
dec
aad
out
push
xchg
ret
adc
int3
(bad)
test
and
xor
pop
sbb
mov
jbe
xchg
es
jb
nop
jmp
lea
bound
or
cmp
mov
jecxz
xchg
add
in
inc
pop
std
hlt
and
pop
mov
rcr
add
mov
mov
or
or
rol
xor
pop
sar
jmp
(bad)
std
push
call
inc
cmp
mov
sbb
sub
jbe
popf
mov
(bad)
out
inc
xor
js
dec
mov
jno
xor
dec
sbb
popf
dec
xchg
mov
cmp
or
or
aaa
mov
or
inc
or
xlat
bnd
or
pop
in
pop
pop
outs
ret
push
jge
mov
das
stc
jl
lds
lods
cmp
inc
call
adc
jg
loop
mov
sub
mov
sbb
and
add
mov
push
sar
add
add
or
adc
ss
popf
dec
jmp
ret
enter
mov
je
pop
test
hlt
pusha
xor
push
call
inc
(bad)
or
(bad)
call
or
sub
jae
push
jmp
adc
mov
inc
add
push
pop
add
lods
inc
or
jmp
lea
sub
mov
jecxz
les
test
and
mov
ret
push
data16
cmps
push
fcom
mov
cmc
xor
xchg
movs
mov
mov
or
test
xchg
adc
mov
sub
inc
or
rol
mov
adc
test
mov
pushf
push
mov
mov
test
test
mov
loopne
jae
hlt
jne
inc
test
pop
or
mov
push
ss
jne
sbb
add
push
lods
push
mov
mov
ret
popa
arpl
(bad)
mov
int3
pop
shl
loop
fmul
lock
pop
inc
add
stos
fs
adc
rol
hlt
lods
aas
bound
out
add
popa
xchg
sbb
sbb
xor
inc
mov
aam
mov
add
or
les
jno
hlt
push
dec
aam
inc
ror
push
adc
mov
test
or
jl
in
jp
push
push
fxch
pop
pop
cld
pusha
add
push
push
fwait
mov
or
mov
test
int3
or
mov
into
adc
into
cmp
rol
mov
(bad)
movs
push
xchg
lods
xchg
push
add
adc
pop
sub
and
xor
lods
sbb
push
cmp
jl
test
clc
adc
dec
ret
push
in
pop
add
movs
or
das
add
push
mov
imul
jmp
xor
inc
and
mov
test
mov
cmc
aam
add
fsubr
cmp
(bad)
rcl
add
mov
pop
cdq
ret
ds
nop
mov
lock
xor
int3
repnz
mov
mov
imul
test
scas
xor
sbb
test
je
cmp
add
jbe
mov
xor
push
push
sahf
add
lock
push
sbb
or
mov
xor
or
adc
mov
or
mov
add
sub
inc
lahf
jnp
pushf
dec
hlt
jns
jl
test
sub
mov
adc
out
push
scas
add
in
cmps
pop
add
movs
mov
jle
mov
inc
adc
add
jne
pop
jne
dec
dec
mov
inc
sbb
cmp
lods
out
mov
call
scas
and
inc
test
xchg
rcl
cmp
rcl
pop
cmp
add
add
pop
push
xor
jge
push
adc
mov
xor
push
xchg
scas
shl
dec
jl
sub
nop
or
push
icebp
popf
mov
push
movs
bnd
pop
mov
xor
loop
in
push
or
repz
loope
mov
adc
cmp
push
cli
jle
dec
push
cmp
or
mov
(bad)
ins
stc
sub
test
mov
cmp
rol
xor
adc
outs
pop
jno
adc
shl
mov
popa
sbb
les
xchg
and
shl
adc
data16
push
lea
in
aam
or
add
cmp
pushf
inc
or
rcl
and
lock
mov
sbb
mov
call
mov
fst
sbb
add
repz
xchg
and
ins
inc
xor
in
adc
xchg
cmc
pop
(bad)
jmp
dec
lods
rcr
and
loope
add
sbb
dec
and
test
mov
add
aas
ins
(bad)
dec
ret
jle
jle
(bad)
dec
or
out
fldcw
sbb
mov
xchg
jp
add
adc
adc
mov
nop
adc
data16
mov
push
sub
ds
adc
(bad)
mov
and
push
ret
mov
mov
jbe
mov
cmp
add
adc
rol
movs
cmp
mov
ret
movs
add
dec
push
dec
(bad)
inc
call
dec
pop
pusha
xchg
adc
mov
(bad)
das
loop
mov
fdiv
push
push
je
into
xor
and
dec
cmp
test
mov
push
or
pop
movs
adc
sbb
pop
push
lock
jbe
adc
out
clc
or
inc
jb
pop
mov
pop
call
fwait
and
punpcklbw
xor
inc
repz
iret
xchg
mov
push
ret
repnz
pop
or
add
push
add
popf
nop
pop
add
ret
dec
or
daa
dec
test
sub
test
xor
loop
sub
cmp
(bad)
ror
jl
cld
xor
pop
adc
jg
inc
ins
stos
sub
inc
ins
dec
stc
mov
(bad)
jl
or
lock
or
rol
and
stos
xchg
je
fs
int
jge
adc
jle
mov
cmp
fld
jecxz
sti
push
mov
adc
push
fst
mov
popf
add
jno
retf
or
mov
pop
pop
or
pushf
mov
stc
push
adc
mov
cmp
(bad)
ja
sbb
add
pop
sbb
adc
sub
pop
pop
mov
lods
push
(bad)
adc
add
jns
pusha
ins
test
and
es
mov
jne
or
jge
inc
jl
ins
cmp
rcl
scas
(bad)
leave
jmp
xchg
hlt
push
pop
jb
mov
sub
inc
xchg
ret
call
test
inc
pop
sub
rcr
push
push
cwde
pusha
adc
ror
aas
call
mov
xor
xor
call
(bad)
shl
pop
dec
or
and
xor
leave
loopne
sbb
add
mov
push
aad
jo
xor
mov
bound
mov
push
rol
mov
push
mov
movs
cmps
ss
ja
add
xchg
inc
inc
jl
mov
add
add
pop
adc
mov
daa
cs
inc
mov
icebp
add
and
icebp
xchg
shl
je
lock
icebp
je
in
dec
rcr
daa
add
xor
div
sub
fcmovnb
test
dec
and
dec
out
or
in
cld
inc
or
shl
test
or
ror
out
xchg
aas
ret
fwait
cmp
sub
add
cli
or
push
fist
inc
mov
mov
add
es
js
pop
adc
xchg
xchg
jo
dec
shr
jge
dec
nop
fild
mov
mov
sub
fsub
gs
sbb
adc
pop
lods
sar
sub
es
jnp
(bad)
sub
xor
push
add
and
pop
call
lea
fdiv
pcmpeqw
loopne
push
add
leave
aam
loopne
retf
and
lods
aam
sub
push
ja
adc
add
mov
aaa
(bad)
mov
jae
ficom
sub
mov
mov
push
jns
frstor
nop
fadd
xlat
sbb
mov
inc
and
pop
mov
cmc
sbb
lahf
daa
retf
jecxz
adc
pop
mov
jne
mov
xchg
mov
sbb
mov
loop
(bad)
mov
push
or
bound
inc
outs
push
and
inc
push
push
lds
mov
addr16
or
test
imul
jmp
add
pop
js
ret
popa
pushf
inc
dec
jl
xchg
mov
mov
movs
dec
mov
cmp
or
ins
xor
call
outs
in
lods
xor
push
mov
lea
rcr
pop
popa
sub
mov
xor
push
pop
xchg
dec
adc
inc
fst
pop
mov
popa
cs
lock
pop
or
push
int3
jge
fsubr
dec
leave
and
xchg
push
and
push
pextrw
or
xchg
jnp
int3
adc
pop
call
xor
push
mov
or
jmp
test
fimul
scas
dec
movs
not
rcr
popf
imul
jb
pusha
lea
sub
jecxz
add
pop
fistp
adc
lods
push
retf
cmp
add
mov
pop
or
or
jl
xchg
scas
dec
mov
js
or
lock
push
push
and
and
fdivr
xor
or
cld
aaa
or
pusha
rcr
inc
pushf
add
rol
cmp
cwde
add
sbb
and
mov
movs
cmp
int3
sub
xchg
retf
aam
ror
in
mov
push
dec
stos
push
pop
rol
add
cmp
fmulp
jge
pop
sbb
int3
inc
out
data16
sub
push
cmp
or
mov
enter
adc
mov
mov
or
jne
push
imul
jae
and
pop
cmps
xchg
adc
add
push
fdivr
sub
retf
stc
jbe
pop
or
push
xchg
add
int
int3
inc
test
push
and
mov
pushf
dec
inc
lods
clc
sbb
push
add
lock
je
mov
and
test
and
ins
mov
lods
mov
sbb
inc
cmp
scas
out
dec
and
and
test
clc
xchg
or
stos
sbb
or
nop
es
jo
dec
fdiv
in
jno
out
add
cmp
pop
or
outs
inc
xchg
add
add
push
and
in
fisubr
scas
cs
arpl
loopne
xchg
jg
inc
push
sbb
cwde
or
and
xor
lods
push
shr
enter
les
push
adc
pop
jne
push
rol
inc
jge
cdq
xor
add
rcr
cmp
pop
pop
ins
cwde
enter
shrd
not
add
jmp
outs
pop
das
jmp
or
pop
xchg
mov
dec
xchg
sbb
or
jbe
inc
cwde
call
mov
icebp
push
dec
inc
and
jo
rol
or
scas
push
mov
sbb
mov
lods
or
in
imul
ja
dec
mov
or
add
fsub
aad
fadd
mov
dec
(bad)
mov
pop
fwait
jmp
ins
dec
outs
mov
(bad)
pop
jge
pop
rcl
xchg
clc
jne
(bad)
loope
or
fnstsw
jnp
push
jae
fidiv
dec
dec
call
xor
jl
xchg
into
cmp
push
dec
call
mov
mov
xchg
push
lahf
loopne
sbb
or
stos
mov
or
inc
loop
cmp
mov
imul
dec
fimul
fistp
add
or
gs
pop
cmp
inc
in
mov
mov
leave
jnp
dec
pop
adc
aam
pop
and
push
pop
dec
lea
jp
ret
mov
sub
push
outs
call
imul
mov
push
fstp
add
xor
and
in
jle
sub
inc
pop
imul
dec
sti
push
lods
mov
or
add
jg
jbe
dec
shl
push
les
loopne
ret
or
push
enter
nop
jmp
mov
loopne
cmc
and
es
sub
sbb
pop
adc
dec
sbb
push
or
jmp
out
sub
sub
and
(bad)
lock
jae
leave
lea
mov
ds
sbb
or
in
jb
xor
loop
add
es
push
and
in
push
inc
bound
and
mov
in
and
test
js
js
xchg
(bad)
fsubp
cmp
add
cmp
mov
aas
mov
and
xchg
in
scas
idiv
ins
xchg
dec
or
adc
arpl
sar
push
jnp
xchg
xlat
rcr
into
inc
add
jl
jge
ins
sbb
cmp
jle
sub
mov
push
outs
and
ins
cs
test
mov
inc
jne
add
dec
pop
sbb
jmp
mov
push
jne
cmp
sbb
sub
adc
jl
xchg
ret
inc
jno
push
and
mov
nop
cmps
cmc
hlt
loope
mov
sub
sub
add
and
mov
ret
adc
test
arpl
push
test
lods
push
add
sbb
icebp
sub
add
jb
mov
xor
rcl
shl
scas
rol
out
inc
cmp
stos
mov
xor
or
cmp
cmps
lock
ret
aaa
fstp
in
cli
dec
loop
adc
add
add
cmp
sbb
xor
push
add
test
test
jecxz
cmps
push
pop
xor
fadd
fnstsw
ret
and
loop
push
or
pop
je
cmps
jns
es
mov
dec
push
nop
clc
and
dec
rsm
fs
jbe
dec
(bad)
enter
adc
add
jne
sub
or
pop
cmps
scas
call
add
enter
pop
jne
es
frstor
addr16
jl
inc
sbb
test
jmp
push
pop
sbb
ret
fnsave
rcl
dec
jmp
push
pop
retf
arpl
popa
fild
jl
mov
ds
mov
or
add
add
jne
ficomp
ja
mov
push
dec
mov
adc
add
push
in
mov
out
int
ret
dec
xchg
das
push
call
idiv
sub
jne
adc
add
in
fist
adc
mov
jmp
(bad)
ret
js
add
pop
adc
sub
sub
clc
ret
fisub
and
sub
pop
aam
dec
test
not
sub
scas
clc
add
cdq
sbb
enter
fwait
add
xchg
add
dec
mov
and
test
add
or
test
xchg
push
mov
jbe
shl
jge
mov
and
add
rcl
dec
sbb
and
cmp
jle
mov
dec
push
adc
mov
std
and
dec
popf
or
or
adc
dec
dec
add
sbb
adc
cmp
inc
loop
inc
mov
pop
pop
movs
sbb
adc
xlat
mov
pop
jmp
pop
sbb
inc
adc
pop
inc
xchg
clc
lock
mov
lock
sub
push
sar
adc
mov
add
fsub
xchg
sbb
push
and
dec
sbb
jle
ss
push
lods
adc
mov
or
(bad)
lds
and
or
sub
icebp
inc
or
add
mov
cld
xchg
aam
hlt
mov
push
stc
xor
add
and
outs
mov
inc
jl
movsx
adc
je
int
add
(bad)
fld
and
and
inc
loopne
cmps
add
test
cli
mov
sub
lock
and
add
dec
or
shl
add
sub
pop
or
scas
shr
vmovsd
sub
icebp
or
xchg
push
mov
and
loop
inc
xchg
inc
mov
dec
add
loope
dec
push
add
push
cmp
sub
jbe
dec
xchg
sbb
pushf
movs
xchg
push
inc
or
mov
fsubr
add
or
mov
mov
aad
loop
push
mov
xor
adc
bound
cmp
pop
inc
push
cmp
xor
hlt
shl
jmp
jmp
cmp
ins
mov
mov
ror
fsubr
fnstsw
or
adc
cs
adc
sub
mov
test
pop
das
vmaxsd
and
dec
daa
mov
push
adc
mov
stos
aaa
out
test
mov
(bad)
xchg
arpl
leave
js
or
or
or
mov
dec
fdivr
adc
adc
sbb
neg
push
ror
(bad)
cmp
mov
movs
push
aas
aas
xchg
sub
wbinvd
sub
out
jae
test
pop
mov
idiv
outs
or
or
jb
xlat
cli
jle
sbb
jl
cmp
mov
jns
jge
jl
shl
add
cmp
jmp
jge
mov
movsx
push
or
dec
and
fcomp
dec
pop
sbb
nop
mov
and
lods
rcl
inc
lock
add
jo
cmp
loopne
lods
data16
aad
mov
jmp
shl
pop
cmc
js
ror
mov
inc
dec
dec
(bad)
xor
scas
ins
shr
adc
and
sub
push
dec
loope
stos
call
pop
xor
retf
movs
lds
cwde
mov
rol
push
mov
mov
mov
xchg
inc
sbb
fsub
pop
adc
push
mov
aad
mov
cmp
push
push
pusha
data16
xchg
aad
aaa
nop
inc
jne
repnz
xor
popa
or
sbb
xor
loope
pop
mov
mov
fldenv
test
je
xchg
cmps
cmc
push
add
mov
mov
sahf
data16
sbb
repz
cmp
and
sbb
daa
outs
ret
mov
inc
dec
pop
sar
and
adc
or
add
cs
pop
sbb
jne
mov
movs
test
cmp
not
inc
rol
jmp
adc
call
and
mov
scas
movs
mov
dec
xor
pop
lock
add
or
mov
xchg
ret
ret
es
and
data16
clc
mov
pop
mov
mov
add
in
jmp
push
jne
mov
xor
ins
adc
arpl
and
popa
div
pop
mov
movs
dec
push
movntps
(bad)
mov
cmp
or
inc
dec
pusha
and
jle
lock
enter
sar
xor
(bad)
mov
push
test
enter
jae
adc
inc
add
push
test
jns
in
mov
ss
movs
add
nop
add
(bad)
or
pop
ret
je
push
fsubr
daa
dec
sub
rcr
ds
(bad)
cmp
and
push
inc
mov
shl
je
adc
add
pop
(bad)
xor
mov
xchg
pop
call
iret
sub
cmps
je
cdq
(bad)
sti
pop
lds
add
inc
xchg
cmp
inc
add
v4fnmaddss
call
adc
sbb
cmp
jl
adc
xchg
add
push
sub
pop
call
jbe
jne
push
and
push
sbb
or
imul
shr
mov
adc
aaa
mov
or
pop
cld
or
and
mov
jo
mov
shr
and
sbb
into
adc
ins
test
push
push
adc
inc
sub
addr16
(bad)
adc
and
mov
das
(bad)
jge
lods
xor
push
hlt
jle
adc
add
or
dec
sbb
dec
test
jp
push
xor
jbe
dec
add
fsub
xor
jle
lock
adc
cmp
movs
or
sbb
adc
fcmovb
(bad)
call
or
and
mov
cmps
in
dec
mov
inc
sub
and
inc
sbb
and
and
mov
push
xchg
and
add
push
dec
stos
and
mov
daa
cmp
je
outs
imul
imul
js
inc
mov
and
jecxz
inc
adc
sub
cmc
sbb
push
sub
(bad)
mov
aas
call
xor
inc
cmp
jl
test
daa
cmp
mov
and
sbb
out
xchg
lock
mov
mov
or
ror
and
mov
data16
push
pop
xor
js
mov
and
mov
push
clc
test
add
add
stos
data16
(bad)
jecxz
mov
and
iret
cmp
mov
xor
jo
sbb
push
or
sbb
lock
aaa
inc
lds
sub
sub
xchg
mov
sbb
xor
fcom
cli
add
mov
test
(bad)
jmp
popa
cs
retf
clc
push
out
(bad)
adc
dec
lea
or
nop
dec
dec
loop
sbb
add
adc
dec
push
div
push
out
push
xor
sub
adc
push
jmp
lar
pusha
mov
imul
inc
inc
or
xchg
cmp
dec
and
jne
sub
enter
test
pop
bound
push
or
sub
int
xor
jae
sbb
pop
adc
inc
pop
mov
cmp
aam
cld
jecxz
mov
sbb
add
push
(bad)
pop
add
jmp
popa
test
jecxz
lds
mov
pop
sbb
pop
cmp
add
pop
xchg
xchg
dec
or
ins
inc
lahf
jo
pop
pusha
sub
or
jge
bound
pop
mov
icebp
inc
test
and
shr
adc
xor
push
mov
popf
nop
and
jne
add
xor
ss
inc
enter
push
or
dec
or
mov
adc
imul
pop
jne
or
outs
add
fiadd
ins
rcr
dec
add
adc
adc
xchg
fcmovbe
or
fadd
cmp
add
and
push
add
(bad)
pop
mov
add
je
inc
xor
inc
add
adc
jo
nop
push
imul
fwait
dec
or
rcr
adc
pop
mov
gs
mov
jmp
pop
stc
imul
fwait
icebp
push
call
cmp
xchg
pop
es
popa
int3
pusha
mov
loopne
xor
test
add
lahf
dec
ja
adc
stc
push
ss
push
mov
jmp
cli
adc
hlt
push
stc
jnp
add
or
sti
cmc
out
adc
adc
jg
je
sub
inc
or
in
xchg
cmp
je
sbb
sbb
div
pop
mov
arpl
dec
sbb
dec
fcmovne
sub
cdq
lods
sub
shl
dec
imul
add
(bad)
mov
pusha
add
sub
pop
fwait
sbb
pop
into
rcl
xlat
adc
ins
adc
adc
or
jp
pop
sbb
push
xchg
and
mov
repnz
popa
push
adc
dec
push
inc
mov
into
dec
add
dec
add
xchg
cs
(bad)
stos
ret
iret
daa
sbb
or
and
dec
call
sti
or
lods
mov
loop
int3
push
mov
xchg
sbb
add
addr16
pop
lods
int3
inc
(bad)
add
inc
adc
in
lock
sbb
lea
xchg
add
pop
sbb
test
xor
sbb
sbb
add
addr16
addr16
add
arpl
loopne
icebp
psrlq
mov
into
and
pop
or
mov
add
add
xor
fmul
mov
or
mov
cmp
mov
adc
dec
(bad)
xor
inc
sub
push
xor
clc
(bad)
adc
inc
pusha
cmp
hlt
push
push
and
mov
popa
dec
dec
sub
movzx
add
scas
jns
jg
leave
rcr
cmp
or
xor
inc
mov
sub
dec
or
es
mov
or
ja
ja
or
scas
movs
mov
test
xchg
push
pop
pop
and
(bad)
mov
scas
or
imul
jne
sbb
out
pop
sbb
iret
jo
fld
push
sub
mov
adc
sub
mov
imul
movs
ret
sub
adc
shl
dec
adc
xlat
pusha
test
mov
ja
mov
pop
adc
push
push
inc
hlt
call
pusha
test
sub
push
lds
inc
dec
imul
nop
jo
xchg
inc
repz
rcr
mov
shl
outs
adc
cld
(bad)
mov
hlt
mov
mov
test
mov
fldcw
add
jne
push
test
ja
mov
imul
push
fs
sbb
mov
xchg
cwde
es
movs
push
loopne
push
adc
dec
lods
lea
lock
add
js
adc
push
in
ds
adc
rcr
pop
add
add
add
jp
or
sub
mov
pop
(bad)
inc
mov
adc
or
inc
sbb
jecxz
sbb
and
stos
sub
lods
fcomp
xchg
mov
repz
add
jmp
adc
retf
test
sub
aaa
xchg
cmp
mov
mov
push
mov
push
add
retf
xchg
or
bndldx
les
fld
shr
test
jno
loope
cmc
nop
retf
in
dec
xchg
inc
enter
xchg
inc
mov
or
mov
sbb
jns
mov
(bad)
jge
dec
jo
fs
aam
in
or
in
pop
lock
mov
cmp
test
dec
jo
lods
jecxz
adc
add
jecxz
jmp
mov
stos
frstor
ss
xor
les
aas
jmp
add
push
test
imul
push
dec
lods
push
mov
mov
mov
imul
pushf
and
and
and
imul
push
mov
pusha
test
dec
dec
xlat
pusha
sbb
(bad)
cli
lea
hlt
sbb
out
hlt
fs
movs
xchg
xor
sub
push
jmp
sub
or
test
or
jnp
push
pop
sbb
pushf
jle
aam
out
arpl
dec
mov
in
add
gs
inc
and
cmp
test
xlat
inc
sahf
sub
push
push
hlt
sub
xor
fimul
add
fcomp
dec
ret
mov
es
int
add
mov
xor
cmp
mov
ds
mov
pop
xor
jns
and
loopne
aaa
add
or
add
xchg
mov
add
mov
frstor
outs
push
mov
loopne
in
ret
iret
push
or
shl
das
add
jge
add
clc
fwait
inc
sub
aam
loop
add
or
xchg
mov
add
or
and
test
neg
jle
mov
imul
movs
hlt
or
cwde
jne
ss
add
dec
or
and
push
sub
jbe
or
xlat
test
mov
add
popa
dec
or
jo
and
push
xor
movs
aad
inc
mov
jp
retf
fucomip
cmp
aam
jge
push
inc
retf
xor
jle
cwde
mov
mov
cli
xor
lea
enter
xor
sbb
add
or
retf
ror
xchg
xor
inc
and
jmp
push
add
movs
jmp
out
or
lds
cmp
jle
outs
or
in
or
push
and
test
mov
xlat
add
sub
(bad)
mov
jmp
adc
call
aaa
fistp
(bad)
out
dec
ret
mov
icebp
fstp
cmp
xchg
mov
sub
retf
shl
inc
pusha
mov
loopne
into
mov
mov
ror
sub
push
adc
adc
cmp
(bad)
das
xor
test
mov
mov
(bad)
push
dec
inc
inc
inc
fadd
fs
loopne
mov
xlat
mov
ss
cmp
add
xchg
mov
sar
pop
xchg
pusha
je
shl
push
test
lea
adc
or
push
inc
or
jl
mov
frstor
add
inc
mov
scas
adc
stc
pushf
dec
jmp
inc
add
movs
(bad)
rcr
mov
shl
ret
hlt
inc
mov
pop
add
jno
jno
mov
inc
jl
test
inc
or
pop
inc
sbb
mov
pop
retf
and
test
inc
icebp
sub
cmp
lock
pop
pusha
sbb
push
or
push
push
nop
and
and
ret
add
push
ret
mov
or
test
mov
add
push
xchg
(bad)
and
repnz
or
xor
rcl
iret
pop
adc
xchg
xchg
ret
(bad)
(bad)
hlt
mov
shl
cwde
xchg
cmc
and
shl
mov
xchg
xor
jmp
psubb
repnz
adc
pop
mov
adc
adc
add
add
push
ins
or
ret
or
or
pusha
(bad)
adc
add
push
in
jnp
data16
dec
out
cmps
jmp
cmp
fst
ds
xchg
sahf
idiv
inc
movs
call
mov
mov
enter
jmp
pop
xchg
and
add
sub
sbb
push
push
les
les
add
lods
jmp
sub
rcr
pop
dec
je
push
mov
in
push
mov
sbb
outs
pop
je
mul
adc
mov
inc
mov
fisttp
icebp
add
outs
lods
fdivr
add
lock
(bad)
test
mov
(bad)
push
or
sub
icebp
adc
shl
in
arpl
sub
sbb
xor
cmp
repnz
sbb
shl
dec
cmp
dec
mov
dec
jg
add
in
les
push
push
or
sub
sub
int
fsub
or
adc
and
dec
stos
adc
ins
inc
pusha
mov
imul
dec
cmp
and
ins
push
dec
sbb
push
rol
push
push
add
lods
adc
inc
daa
rol
ja
cmp
sub
jmp
js
mov
aas
adc
int3
inc
(bad)
mov
dec
stc
repz
add
leave
daa
or
test
test
cmp
sub
xchg
aas
fwait
rol
adc
jnp
push
cmps
mov
cmp
nop
lock
xor
add
and
mov
(bad)
leave
outs
cld
sub
cmp
and
addr16
dec
mov
ds
sub
or
mov
test
inc
pop
inc
int
push
sbb
jb
nop
xchg
in
in
ret
lock
adc
inc
add
push
push
(bad)
es
movs
jmp
(bad)
bnd
xchg
mov
cmp
inc
inc
inc
sub
mov
fnstenv
push
jae
push
or
add
dec
inc
packssdw
adc
add
mov
mov
sbb
icebp
add
sub
popa
aad
adc
cmp
mov
arpl
cmp
xchg
xchg
ret
mov
test
sbb
pushf
pop
test
add
adc
adc
or
pop
cmp
jbe
xchg
hlt
and
mov
adc
sub
cmp
cmp
mov
stc
cwde
add
sbb
sbb
cli
fadd
push
pop
lock
xor
in
push
pop
out
or
sahf
iret
out
adc
push
xor
jne
cmp
fisttp
bound
xor
xchg
xchg
loopne
std
jmp
push
into
loope
adc
dec
cli
inc
xor
xchg
movs
jmp
jge
aas
add
movs
pop
mov
je
ret
add
dec
push
or
sub
mov
scas
inc
dec
shl
ficomp
or
movs
mov
sub
out
xchg
add
push
jae
dec
cld
sub
inc
rcl
xor
hlt
nop
(bad)
nop
inc
add
sub
and
test
xchg
adc
xor
sbb
retf
hlt
dec
cwde
aaa
jmp
std
mov
push
adc
ja
leave
dec
sub
mov
repnz
movs
outs
push
loopne
stos
ins
fidiv
test
dec
push
pop
or
or
aaa
ret
hlt
pop
jl
xor
add
add
dec
or
add
lds
mov
data16
js
clc
in
push
in
and
ficomp
mov
xor
push
lods
push
adc
mov
lods
adc
mov
dec
xor
inc
or
xor
dec
adc
popf
adc
and
lock
(bad)
inc
imul
xchg
ret
mov
pop
sar
mov
ret
js
stos
movs
mov
(bad)
or
dec
rcr
ret
adc
adc
pop
cdq
in
(bad)
dec
fwait
add
mov
adc
push
pop
bound
shl
push
sbb
push
icebp
xlat
or
js
lea
push
push
adc
adc
cmc
jo
arpl
mov
xor
inc
(bad)
xor
jg
dec
lea
pop
imul
bsf
stos
sbb
inc
add
dec
sub
sbb
or
push
neg
dec
pusha
mov
xchg
mov
jns
push
push
mov
and
push
aad
movs
mov
adc
ins
dec
cmp
mul
add
cdq
xchg
ret
(bad)
je
shr
mov
jmp
ret
(bad)
pop
fldcw
cmp
aas
or
test
fidivr
inc
add
iret
dec
add
push
movs
add
sub
inc
es
mov
ret
scas
jl
xchg
cmp
pop
adc
dec
sbb
sbb
inc
jbe
jge
test
leave
cmp
sbb
cwde
mov
or
push
xor
inc
mov
repnz
das
outs
sbb
clc
int3
push
je
rcr
nop
pop
jbe
push
mov
push
cs
push
lea
mov
ss
rol
bound
inc
add
or
or
and
or
add
xor
fistp
sub
je
or
pop
adc
clc
dec
icebp
or
xor
cmp
add
test
mov
jg
loopne
dec
mov
(bad)
adc
sbb
mov
sub
inc
and
pop
or
mov
lods
mov
test
bound
pop
mov
jmp
sub
add
xor
pop
enter
push
cmp
lods
adc
xor
lea
mov
jns
in
xor
neg
or
rcr
aam
lock
stos
pop
dec
inc
ins
push
jns
jge
cmp
outs
dec
push
lock
add
add
add
shr
shl
es
mov
arpl
cli
fisub
push
xchg
cmc
hlt
adc
jl
cdq
test
push
push
adc
jb
mov
je
cmp
icebp
hlt
xor
mov
dec
fcom
xchg
xchg
add
jge
inc
sub
push
sub
xchg
imul
test
jmp
push
inc
adc
add
ins
test
or
mov
adc
enter
movs
or
and
ja
sbb
popf
pusha
push
jmp
or
call
mov
aaa
inc
dec
call
pusha
add
inc
pop
clc
dec
jg
push
shl
adc
cmp
mov
add
nop
dec
(bad)
jmp
cmps
cmp
movs
pop
(bad)
cmc
movs
xor
jb
add
pusha
adc
adc
add
shr
xchg
mov
das
push
cmp
lahf
scas
push
or
cmp
ja
dec
(bad)
sub
popa
inc
rcl
cli
lock
js
sar
test
cmp
test
imul
mov
out
lahf
push
cmp
mov
push
dec
mov
loope
sbb
test
xlat
mov
sub
or
(bad)
sbb
mov
sbb
not
cmc
rol
xchg
sbb
and
add
lock
pusha
mov
retf
(bad)
adc
jmp
hlt
mov
aam
mov
pushf
push
fisttp
aas
mov
push
jg
(bad)
repnz
rcl
xchg
add
adc
mov
aaa
repz
cmps
jecxz
pusha
dec
loop
std
in
test
jmp
pop
les
shl
dec
bound
popa
cmps
hlt
(bad)
pop
in
and
movs
sbb
xor
je
mov
xchg
sbb
pop
sbb
(bad)
mov
fidivr
shl
imul
sbb
in
mov
sbb
rol
arpl
jae
push
scas
fwait
mov
mov
je
or
sti
jg
dec
repnz
jae
(bad)
imul
loopne
mov
(bad)
lock
popf
in
fisubr
push
jb
sbb
in
sub
shl
sti
push
pop
ret
movs
cmp
(bad)
es
mov
adc
add
cwde
adc
push
dec
lahf
out
pop
xchg
adc
in
and
fisub
push
bound
(bad)
(bad)
or
(bad)
push
lods
cmp
adc
jo
fwait
jns
aaa
mov
ins
test
push
clc
cmp
je
repz
jne
and
xor
leave
das
in
inc
and
fst
add
push
jbe
lods
inc
mov
inc
pop
xchg
mov
dec
xchg
nop
data16
iret
xor
imul
sub
mov
movs
and
push
add
dec
and
je
mov
sti
mov
or
or
or
jmp
inc
das
xchg
ret
out
add
into
cmc
es
mov
inc
dec
pop
xchg
push
xor
add
sbb
div
jbe
sub
ret
retf
sub
sbb
or
(bad)
push
leave
adc
not
repz
or
popa
mov
cmp
je
push
mov
nop
inc
push
dec
(bad)
push
popa
idiv
adc
cmp
clc
push
in
and
sar
outs
popa
int
pop
int3
mov
and
inc
lock
pop
or
in
jne
out
lods
adc
adc
(bad)
mov
jne
inc
add
mov
dec
and
fldenv
adc
cli
movs
and
push
jns
adc
es
jp
cmp
rol
pop
cmps
cmp
add
ror
add
or
scas
fdiv
dec
call
sbb
je
(bad)
adc
out
rcr
cmps
icebp
xchg
ror
daa
test
mov
out
add
xor
jb
mov
and
(bad)
jbe
push
leave
and
xor
mov
push
arpl
popa
lea
movs
or
rcl
or
scas
mov
mov
cmps
lock
dec
repz
sbb
cmps
push
or
mov
repnz
and
cmp
mov
mov
clc
pop
and
test
sbb
pop
dec
or
mov
loopne
jle
jl
or
mov
adc
add
inc
addr16
xor
xlat
or
or
ins
or
and
adc
push
push
cmp
dec
div
jno
test
adc
repz
and
add
jmp
cmp
cmp
sbb
ldmxcsr
jl
cmp
jmp
inc
add
jl
aam
add
jge
adc
call
or
mov
mov
mov
jmp
mov
sbb
pop
repz
xor
shl
jne
imul
shr
into
mov
add
lds
pop
push
push
imul
dec
jg
outs
sbb
xor
inc
call
xchg
icebp
or
loopne
add
inc
out
dec
mov
fsubr
cmp
jns
add
retf
fld
add
cld
lods
add
in
inc
add
in
sbb
dec
mov
and
mov
sbb
inc
adc
jmp
cmps
lds
push
leave
sub
dec
and
adc
test
cli
jle
hlt
xchg
sub
rep
add
jl
inc
inc
dec
adc
jbe
out
mov
or
inc
sub
es
les
cmp
mov
or
push
pop
bound
sbb
loopne
jae
jne
jo
add
pop
cmp
test
shl
push
inc
sub
cli
enter
test
push
inc
je
out
and
shl
cmp
jle
mov
cmp
cmp
test
xchg
out
(bad)
xchg
xchg
scas
mov
rcr
dec
push
call
mov
bound
add
rcl
dec
stos
popa
pop
sbb
add
cmp
out
or
ret
scas
in
loopne
cmp
mov
jb
(bad)
out
push
cli
cmp
je
push
add
ror
cdq
movs
adc
mov
jmp
test
and
adc
xchg
setns
cmps
test
mov
adc
jno
mov
or
rol
mov
dec
shr
adc
xor
sti
sbb
or
add
ss
test
adc
sub
pop
in
sbb
inc
addr16
add
jecxz
add
xchg
les
das
xchg
mov
sub
shl
jbe
inc
pop
and
pop
in
inc
add
jno
clc
and
sbb
clc
and
clc
mov
and
pop
inc
lds
aas
shl
fisttp
fcom
push
sbb
les
pop
push
jle
call
div
adc
or
fdiv
adc
adc
out
lock
adc
fist
inc
xor
je
test
cmp
pop
addr16
mov
xor
lds
in
frstor
rol
(bad)
pusha
mov
enter
imul
mov
mov
shl
jmp
(bad)
sub
int3
loop
nop
or
jo
sub
out
adc
imul
cmc
test
and
push
and
jno
test
jl
xchg
sub
mov
mov
mov
fisttp
push
cmp
clc
ret
add
mov
nop
test
pop
xchg
popf
pop
outs
or
mov
test
jne
inc
ins
and
int3
jo
retf
xor
shr
and
mov
ret
push
pop
jbe
add
cdq
xchg
add
sub
(bad)
push
and
rcl
je
rcr
cwde
and
mov
ins
repz
ins
add
adc
inc
push
fdiv
fadd
aam
and
movs
mov
rcr
and
cwde
dec
add
call
adc
push
pop
or
dec
pop
rcl
inc
and
call
fs
das
int3
out
xor
mov
add
je
in
mov
xor
int3
je
xchg
imul
sub
pop
push
int3
inc
xchg
ficomp
jl
pop
add
push
mov
movs
or
jmp
addr16
movs
lock
sti
pop
pusha
push
sub
add
pop
dec
and
pusha
test
mov
je
(bad)
or
sti
(bad)
xor
mov
inc
cmp
daa
push
and
or
sbb
iret
ret
mov
cmp
add
outs
mov
jge
dec
aas
scas
xacquire
xchg
addr16
xor
ror
pushf
cmp
jmp
test
sti
imul
hlt
test
adc
push
aaa
cs
je
rcr
adc
fdivr
inc
mov
xor
mov
sub
sti
inc
inc
or
sub
mov
or
pop
mov
xchg
jg
add
movs
jnp
sub
adc
xor
cmps
jno
hlt
mov
dec
sub
retf
cld
lods
adc
or
or
or
lds
xor
adc
jns
push
dec
loopne
sar
loope
dec
scas
je
ss
ret
add
push
push
dec
sub
xor
push
sbb
scas
or
xchg
icebp
bound
jmp
or
pusha
jae
rol
or
xchg
mov
add
xor
pop
imul
mov
add
sub
les
xchg
lock
outs
in
dec
inc
test
fsubr
sbb
xor
xlat
xor
sbb
sahf
or
je
dec
fist
add
int3
(bad)
ret
cli
adc
inc
mov
jg
loopne
sar
jne
jbe
push
or
test
pushf
rcr
in
data16
dec
cmp
inc
add
sub
movs
xor
pop
or
pop
xor
xor
and
leave
test
add
dec
rcl
mov
stos
nop
in
add
sub
or
fcomp
sbb
or
aam
lods
add
out
adc
lea
inc
ret
mov
push
lock
mov
sbb
mov
mov
sti
call
xchg
mov
adc
add
mov
dec
mov
push
push
push
xor
jg
push
aaa
sbb
pop
adc
and
mov
mov
ror
aas
push
add
and
leave
and
jne
adc
xchg
out
inc
xchg
cld
rcr
mov
icebp
addr16
push
or
inc
fcom
ds
mov
and
in
and
popa
adc
sub
add
xor
pop
push
fwait
sbb
imul
sbb
push
push
push
or
add
addr16
(bad)
sti
push
dec
xor
test
lods
or
inc
es
mov
dec
call
sbb
mov
call
add
dec
push
imul
in
idiv
inc
daa
mov
les
fidiv
jbe
mov
enter
dec
mov
stos
cmps
xor
aaa
push
cmc
clc
or
bound
test
cs
sub
dec
pop
push
shl
cmp
add
out
fisttp
adc
movs
stc
xchg
xlat
jne
movs
add
stos
ins
fadd
add
sbb
push
je
mov
mov
inc
mov
popa
sbb
jae
inc
or
xor
xlat
push
add
scas
xor
push
popa
sub
jo
jge
fwait
adc
inc
out
lods
cmps
adc
or
mov
add
add
add
adc
push
pusha
jle
push
push
and
inc
or
and
shr
cmp
lea
or
pop
inc
les
push
inc
sub
rcl
pop
js
jmp
(bad)
jns
or
pop
or
sub
popa
or
ins
inc
and
pusha
xchg
xor
mov
jle
jmp
cmp
fmul
push
fs
and
jg
pushf
push
ror
jmp
clc
pop
inc
xchg
jne
sbb
inc
sub
mov
add
cmps
aad
arpl
cmp
sub
(bad)
fadd
xchg
add
xor
add
stos
arpl
xchg
data16
mov
dec
imul
or
mov
ins
cmp
mov
or
lahf
inc
retf
out
addr16
scas
popa
or
mov
mov
sub
fld
test
sbb
push
mov
ja
pop
sbb
rcr
call
pop
rcr
pop
or
dec
clc
or
hlt
push
data16
push
bound
(bad)
bound
dec
sub
stos
or
dec
sub
add
hlt
pop
sub
cmp
jge
pop
push
jl
sub
add
mov
fimul
dec
push
cmc
lods
xchg
ret
scas
lea
loopne
enter
in
xor
dec
in
pop
out
push
jp
push
hlt
mov
xor
cld
cmp
pop
xchg
in
fcomp
fld
adc
xlat
int3
mov
push
out
in
and
sub
jge
std
ins
pop
hlt
arpl
aam
or
or
fdivrp
xor
js
or
adc
mov
push
add
adc
scas
das
rcl
xchg
imul
(bad)
lods
jne
push
pusha
jmp
adc
retf
inc
outs
push
fwait
push
push
hlt
push
lods
das
pop
xor
adc
cmp
or
(bad)
or
adc
(bad)
jg
or
arpl
or
add
push
inc
rcl
mov
dec
ins
scas
daa
je
dec
pop
or
adc
cmps
push
test
js
mov
xchg
jp
ret
stos
add
lods
pop
mov
and
add
mov
dec
mov
pop
sbb
rol
add
add
cs
rcr
fcmovnu
push
dec
sub
sbb
dec
and
adc
rcr
push
mov
arpl
std
(bad)
into
sub
(bad)
popf
sbb
xor
das
neg
inc
cmp
test
push
lock
pop
jp
or
sahf
fcomi
mov
loope
inc
outs
leave
sub
push
jo
xor
and
mov
mov
sub
call
push
fldcw
(bad)
mov
add
pop
outs
inc
cdq
ds
pushf
push
cmp
adc
(bad)
push
inc
cmp
jl
jl
mov
shl
add
fldcw
and
xchg
rcr
sbb
jb
adc
or
xor
nop
mov
leave
sub
or
aam
add
and
dec
cmp
enter
mov
push
cdq
push
mov
add
dec
sbb
sahf
ret
sti
imul
in
xchg
jmp
jmp
test
inc
xchg
push
movs
imul
rol
mov
jbe
(bad)
sbb
pop
fs
add
push
dec
pop
add
cmp
fsub
out
mov
clc
mov
loopne
imul
mov
xchg
inc
dec
ret
mov
les
jecxz
int
xchg
or
cmc
js
neg
cmps
mov
adc
add
dec
jo
lods
and
sbb
or
jle
pop
inc
fstp
add
mov
adc
fsub
fild
dec
push
inc
iret
inc
pop
fmul
jecxz
adc
or
or
push
pop
or
mov
inc
add
xor
and
imul
mov
dec
(bad)
adc
enter
in
add
jmp
push
jge
xchg
add
sub
js
bound
js
push
mov
jne
mov
pusha
and
sbb
mov
xor
cdq
cmc
outs
in
or
mov
je
push
pop
push
or
pop
test
mov
dec
sub
aaa
push
pop
cmp
(bad)
xor
sbb
adc
sub
mov
outs
mov
xor
pop
adc
ins
adc
or
ss
repz
mov
and
push
nop
add
pop
in
add
dec
dec
sub
and
pop
loope
inc
sub
imul
pop
mov
and
dec
(bad)
mov
add
pop
js
adc
jp
and
sbb
inc
sub
out
lods
ins
aam
sbb
or
sbb
lahf
inc
mov
and
xchg
mov
jmp
xchg
test
aaa
mov
inc
loope
(bad)
sub
clc
scas
or
cld
js
mov
aam
and
or
pop
int
or
iret
mov
inc
pop
lods
or
dec
push
dec
jne
pop
aaa
adc
js
cmp
pop
sub
inc
aas
in
sbb
sub
push
xor
inc
clc
cmp
ja
sbb
or
out
pop
inc
cmp
push
lock
sub
aas
cld
sub
outs
rol
enter
xchg
ja
mov
gs
fistp
sbb
cmp
movs
adc
clc
xchg
js
mov
inc
push
pop
push
in
jg
loopne
ds
lea
daa
add
xor
(bad)
and
mov
mov
lock
sar
in
or
xor
fidivr
(bad)
shr
fld
inc
or
inc
pop
add
(bad)
mov
adc
adc
cmp
stos
push
cmp
jne
jbe
adc
pop
dec
jne
ja
push
rol
cmp
mov
enter
call
jb
into
pusha
lock
add
imul
xor
lods
inc
push
lods
test
or
fild
imul
mov
js
mov
ror
in
or
and
icebp
enter
adc
adc
xor
xchg
ja
cmp
scas
push
test
outs
sbb
clc
loopne
jb
dec
add
dec
ins
and
dec
push
pop
cmp
add
in
js
test
cmps
push
dec
pop
mov
clc
je
mov
pop
addr16
loop
jl
lods
repz
out
add
retf
add
(bad)
in
mov
adc
repnz
sub
pop
mov
push
pop
add
add
jl
and
sbb
mov
cmp
cmps
push
clc
pop
jmp
dec
dec
add
xchg
adc
(bad)
(bad)
xor
in
(bad)
sbb
or
push
push
push
jmp
retf
adc
retf
fadd
and
adc
xchg
add
mov
clc
inc
dec
ja
inc
in
and
je
xchg
loopne
daa
cmp
mov
and
mov
cmp
cwde
aam
push
shr
repnz
add
jb
mov
add
inc
fcomp
aas
push
mov
xor
lods
enter
(bad)
leave
cmp
out
mov
sbb
movs
inc
or
or
in
popa
push
ret
cmp
push
in
sbb
dec
or
sbb
ds
jp
xlat
clc
sbb
jge
and
js
pop
add
push
sbb
xchg
push
mov
outs
jb
add
pop
xor
sub
pop
inc
call
scas
div
mov
add
ins
or
jg
rol
imul
scas
(bad)
and
adc
test
imul
jecxz
xor
movs
fcmovu
add
out
clc
and
and
aaa
in
loope
pop
cli
mov
add
cmp
or
cmp
xchg
add
xchg
ret
rcl
sub
add
mov
lea
mov
inc
fsub
cmp
sahf
ret
ja
jmp
jno
cmp
cmp
enter
and
xor
dec
or
rol
mov
loope
sub
pop
call
inc
cmp
test
add
push
add
fild
sbb
cmp
pop
sbb
(bad)
sbb
js
mov
rol
push
stos
add
inc
loopne
adc
test
call
add
outs
jmp
test
cmp
mov
and
pop
add
push
add
ret
pushf
pop
sub
add
test
mov
ss
es
cwde
add
popa
cld
loope
mov
and
push
les
push
daa
sbb
lea
sbb
add
std
dec
aaa
rol
mov
mov
add
lock
sbb
pusha
mov
je
mov
fcom
mov
inc
cli
mov
leave
add
dec
(bad)
sub
cmp
cmp
pusha
or
sar
dec
cwde
cli
or
inc
mov
mov
mov
mov
mov
add
push
sub
out
push
lds
add
add
add
sub
sub
adc
into
int
fdiv
xchg
inc
push
cmp
lods
mov
lods
pop
popf
pop
popf
adc
js
adc
push
popa
sbb
sti
adc
inc
cmp
or
or
mov
stos
aas
add
push
cmp
loop
inc
dec
pop
(bad)
ror
inc
add
jl
adc
adc
movs
iret
xor
cmp
xor
cmp
sbb
int3
mov
movs
dec
shr
mov
lock
inc
mov
adc
or
sub
cld
cmp
jg
enter
add
call
xor
xor
clc
ins
xor
or
jmp
clc
cmp
and
mov
rol
in
iret
hlt
push
mov
jmp
cmp
cwde
adc
and
bnd
mov
icebp
or
mov
add
(bad)
push
push
pop
pop
imul
add
add
sub
(bad)
add
and
adc
imul
cmp
dec
inc
cmp
int3
mov
adc
adc
out
call
cdq
xchg
add
cmp
shl
cmp
sub
xor
ins
pop
jge
mov
mov
ror
mov
popf
call
sbb
xchg
fidivr
(bad)
pop
sub
aaa
mov
add
adc
mov
push
mov
or
mov
mov
push
or
inc
pusha
sub
push
lock
or
int3
rcl
adc
add
inc
mov
mov
movhps
mov
lods
pop
rcr
arpl
add
add
inc
ret
cmp
test
enter
js
inc
shl
jl
xchg
sub
aas
clc
push
sub
inc
mov
sub
sub
(bad)
sub
shl
jmp
push
sbb
add
adc
add
cmp
add
out
mov
cmp
adc
push
xchg
sub
xor
lds
mov
cmp
jne
mov
cmp
mov
inc
cmp
add
clc
cmp
lea
push
loopne
add
mov
mov
or
fmul
fimul
xor
dec
je
pusha
push
or
mov
sar
loope
xchg
test
dec
mov
inc
fadd
dec
xor
ret
mov
add
add
push
sbb
test
cmp
sbb
jmp
jmp
add
mov
cmp
mov
ja
pop
ret
mov
mov
call
call
add
out
xchg
add
sub
test
pop
and
push
(bad)
push
sahf
mov
mov
sbb
enter
dec
into
push
adc
dec
add
dec
dec
add
js
inc
mov
add
mov
gs
add
mov
sub
pop
pop
adc
pop
in
xchg
leave
sahf
out
fwait
sub
daa
lods
add
cmp
mov
popa
mov
push
ror
ins
fidiv
stos
pop
or
push
inc
inc
leave
add
add
add
mov
lock
repz
cmps
add
cmp
pop
lods
inc
add
rol
stos
pop
jmp
outs
rcr
nop
out
fmulp
mov
nop
scas
sub
pop
mov
jo
sbb
xor
rcl
add
not
dec
mov
sbb
or
xchg
mov
fnstsw
jl
cmp
jge
cmp
(bad)
movs
ret
push
sub
jmp
cmp
sar
adc
or
push
bnd
push
jmp
sbb
arpl
or
inc
xchg
dec
xchg
jl
loop
icebp
cmc
pop
add
xor
ret
pop
test
adc
cmc
ror
sbb
enter
jecxz
inc
or
pusha
aaa
mov
add
pusha
mov
stos
mov
cmp
mov
jle
mov
add
pop
test
rcr
setl
loopne
or
or
hlt
cmp
xor
mov
and
sbb
xchg
jae
js
mov
mov
sbb
rcr
int3
adc
xchg
jne
or
sbb
xchg
cli
adc
mov
and
adc
dec
(bad)
adc
push
fs
mov
add
out
mov
sub
pushf
dec
cmp
sbb
adc
dec
jge
dec
sbb
fwait
adc
push
and
cmp
repz
pop
and
je
pop
and
sub
(bad)
mov
out
dec
mov
lods
js
je
mov
out
aam
sub
lahf
sbb
fs
pop
xor
pop
mov
add
push
icebp
sbb
push
test
jle
rcl
sub
test
sti
(bad)
add
mov
xlat
mov
xor
fist
movs
ret
pop
pusha
imul
push
out
add
jno
test
or
les
retf
adc
test
jle
retf
cwde
mov
sbb
push
sbb
mov
adc
mov
add
pop
sbb
push
out
inc
ss
mov
(bad)
dec
loope
js
sub
mov
mov
jae
hlt
das
fisubr
test
hlt
push
add
aas
adc
mov
sub
mov
adc
pop
jo
hlt
ins
std
jae
ds
mov
dec
shr
shl
popa
aaa
or
adc
iret
dec
cdq
mov
push
cwde
inc
adc
jp
and
pop
cmp
mov
and
or
and
or
mov
test
jecxz
pop
add
nop
or
jne
xor
cli
es
mov
mov
cmp
dec
xor
cli
sbb
mov
jle
and
jmp
mov
fsub
jae
add
jg
rol
add
fwait
pop
mov
adc
popf
xchg
xchg
ss
pop
aaa
aam
cmp
mov
xchg
adc
cmp
(bad)
(bad)
dec
inc
or
xchg
xchg
lock
sahf
pop
xchg
xlat
and
movs
ret
outs
outs
add
lds
cwde
sub
nop
and
ret
sar
lock
lea
pop
scas
shl
push
inc
data16
push
push
xchg
xchg
pop
cmp
clc
(bad)
mov
dec
test
add
and
dec
ret
and
xor
dec
shl
xchg
push
pop
pop
or
push
rcr
xor
and
push
push
or
jae
mov
cli
das
outs
jl
push
mov
adc
es
mov
push
into
xchg
add
sub
mov
inc
cwde
sub
test
push
mov
add
adc
rol
aas
inc
cmp
push
xchg
or
shl
out
jmp
or
dec
adc
bound
or
xchg
pop
jno
adc
pop
xchg
ret
push
cmp
or
dec
inc
mov
sbb
push
mov
cmp
pop
fmul
clc
lea
sbb
sub
lods
mov
and
mov
ret
add
xor
sbb
cwde
(bad)
pop
sub
sub
sub
pop
sar
aas
or
mov
mov
cmp
retf
and
dec
aad
pop
add
push
mov
dec
jle
ins
dec
outs
fstp
mov
dec
cld
xor
mov
adc
adc
or
jmp
mov
cmp
pop
or
jb
mov
test
push
xor
test
jl
add
icebp
jmp
inc
aad
jmp
and
adc
pop
cmp
inc
mov
mov
lock
sahf
loopne
jae
pusha
and
mov
sub
cmp
pop
mov
sub
ficomp
cmp
add
and
mov
shr
push
dec
inc
rol
fwait
dec
cmp
jg
cmc
add
jg
push
push
mov
inc
ficom
lods
inc
dec
retf
outs
int
mov
sar
mov
(bad)
adc
shr
jmp
loopne
jbe
and
or
call
push
es
sti
add
movs
test
push
and
adc
or
add
shr
fisttp
jle
pop
dec
adc
add
adc
mov
push
mov
mov
push
push
pop
fbstp
shl
dec
mov
push
inc
pop
add
add
xchg
mov
loop
add
add
or
ret
or
sbb
or
or
xor
mov
push
and
add
mov
outs
and
sub
and
cmp
xchg
jne
loopne
mov
xor
mov
in
cs
out
push
movs
cmp
xchg
stos
mov
and
aas
push
ins
std
add
lahf
jno
and
sbb
in
or
and
pop
(bad)
inc
add
xor
add
sbb
sbb
retf
movs
iret
jne
pop
sub
test
xchg
fadd
add
fldcw
xor
sar
adc
mov
sub
aad
jmp
(bad)
cmp
je
retf
push
add
icebp
inc
movs
push
fld
sbb
inc
dec
mov
adc
retf
mov
sub
cli
pop
int3
add
sti
push
test
jb
sbb
adc
test
sub
aas
test
test
jae
je
add
inc
inc
xchg
movs
aaa
mov
sub
dec
xor
adc
cmp
push
adc
cld
cli
scas
dec
dec
add
mov
ficomp
add
(bad)
sub
jo
fcmovne
push
test
adc
inc
adc
loope
dec
leave
or
dec
and
mov
inc
or
bound
ret
sbb
jg
pop
and
jnp
mov
je
test
push
jl
fld
retf
inc
dec
pop
xor
sub
sbb
mov
add
test
pop
mov
outs
fisttp
test
in
jne
jbe
jno
mov
or
(bad)
cmp
out
dec
adc
mov
xchg
shl
xchg
or
or
jns
lods
mov
sub
(bad)
popa
xor
or
inc
sbb
sti
push
fs
or
ds
js
into
iret
data16
mov
or
sub
repnz
sbb
bound
sbb
pop
into
mov
out
inc
dec
ret
adc
out
and
add
dec
push
or
jnp
lea
add
mov
adc
xchg
lea
push
scas
or
pop
add
or
pusha
push
call
jg
lahf
jo
or
mov
sbb
pop
sbb
sbb
loopne
shl
and
inc
and
sbb
sbb
pop
push
mov
hlt
mov
imul
sub
adc
adc
es
sub
push
sub
mov
or
mov
mov
loop
jmp
cli
jle
or
add
imul
dec
xchg
cvtpi2ps
push
cmc
inc
add
sub
daa
jne
or
lea
in
or
jbe
push
es
and
les
je
sub
ret
mov
fbstp
je
add
xchg
or
inc
cmps
mov
mov
mov
data16
push
mov
sti
lock
pop
or
cwde
jp
fmul
cmc
mov
(bad)
cmps
scas
push
pop
aas
pop
mov
gs
add
dec
or
iret
and
or
inc
sbb
pop
mov
iret
sbb
dec
das
mov
sbb
sub
or
je
div
cmp
jle
cmp
cwde
loope
xor
and
pop
add
clc
cmp
xor
lock
popa
xor
mov
test
add
xor
ja
dec
aas
mov
ds
add
and
cmc
dec
and
retf
cvtpi2ps
xchg
sub
inc
jb
cmp
and
jae
sub
fiadd
inc
lock
ret
ins
(bad)
add
cmp
sub
cmps
rcl
rol
xor
adc
pop
add
(bad)
sub
adc
ds
inc
test
pop
xchg
ret
jle
adc
jmp
add
jo
loopne
push
clc
mov
inc
cmp
cld
or
in
nop
push
sbb
mov
movs
or
jb
push
ss
mov
(bad)
cmp
add
fsub
xor
int
adc
push
or
and
cmp
add
int3
mov
dec
or
cmp
jb
sub
lds
add
xchg
dec
mov
mov
mov
loopne
adc
addr16
or
cdq
rcl
nop
inc
stos
popf
fdivr
fcom
in
sub
into
sahf
adc
loope
bound
mov
mov
outs
and
and
(bad)
sub
aam
ror
shl
neg
aam
iret
fcmovb
cmp
jmp
loope
jle
call
xor
adc
mov
add
sbb
push
sub
mov
mov
cli
test
jmp
loope
and
imul
loopne
mov
test
iret
mov
xchg
add
xchg
push
es
stos
cmp
cmp
xlat
mov
aas
aad
cmp
and
sbb
punpcklwd
and
lock
mov
pop
pop
add
mov
add
in
scas
call
jns
mov
sbb
add
mov
cmp
pushaw
pop
ror
mov
cli
add
les
test
sti
push
jae
or
mov
add
xchg
cmc
dec
jl
push
cmp
cmp
jb
xchg
xchg
test
adc
in
add
sahf
dec
or
add
int3
inc
enter
mov
or
cmp
xor
mov
xor
cdq
push
or
add
jle
or
outs
pop
or
ret
lods
(bad)
jmp
div
adc
xchg
jo
xor
retf
scas
or
(bad)
xchg
ror
call
add
jo
sub
push
adc
fisub
pusha
or
pop
retf
data16
mov
jne
push
dec
add
sbb
in
gs
sahf
and
jno
push
scas
mov
jmp
mov
jle
push
nop
imul
xchg
pop
xchg
pop
popa
(bad)
push
in
stc
dec
pusha
cmp
leave
rcr
mov
out
or
push
je
push
sar
jmp
enter
cmp
jp
std
jnp
mov
icebp
dec
fcomp
xchg
int
mov
jle
sub
xor
xchg
dec
sub
sbb
retf
sub
lahf
mov
or
or
mov
out
lahf
dec
jp
dec
add
and
push
inc
test
sbb
inc
xchg
pop
dec
pop
sbb
lahf
pop
aam
aam
or
inc
pop
mov
push
mov
cmp
push
sub
adc
mov
in
(bad)
outs
int
xor
pop
inc
and
nop
jo
pop
imul
ficom
push
push
fisttp
stos
fld
movs
rcr
add
arpl
or
dec
pop
xchg
push
lock
inc
pusha
sub
imul
and
sub
call
pop
pop
loop
push
inc
inc
in
mov
add
call
sbb
or
push
add
stc
loop
dec
stc
scas
push
outs
fiadd
add
loopne
or
cmp
fwait
mov
add
mov
pop
mov
lea
sub
push
clc
and
test
mov
push
cmp
add
push
cmp
(bad)
iret
xchg
or
int3
mov
add
inc
ror
in
sub
xor
dec
sub
jl
jl
int3
jl
(bad)
xor
fs
push
xchg
lock
pop
test
shl
add
push
movs
lods
push
or
adc
jmp
shl
sbb
xchg
sub
lea
jno
xor
adc
mov
add
mov
mov
getsec
fdiv
shl
out
ficom
xlat
movs
dec
fcom
ret
cmp
pop
out
push
data16
push
das
nop
jmp
rol
test
pop
mov
ret
rcl
cmp
jle
push
icebp
ins
loop
xchg
in
rol
loopne
jbe
or
mov
add
rol
out
inc
inc
add
cmp
add
push
sbb
jnp
push
loopne
dec
add
or
and
pop
pop
mov
jmp
cmp
cs
stos
jnp
fs
push
movs
dec
xchg
pop
cs
and
xor
arpl
lds
sub
xchg
jae
cmp
cli
je
or
mov
pop
xchg
xor
cdq
or
cmp
or
inc
pop
pop
adc
add
ins
outs
outs
push
push
mov
aas
jbe
mov
dec
mov
inc
inc
push
mov
or
out
dec
dec
add
add
pop
arpl
fnstcw
es
jmp
and
test
sbb
aaa
cmp
cwde
add
out
dec
adc
and
mov
inc
adc
outs
lds
and
imul
xchg
cmp
adc
sub
xchg
inc
add
repz
cwde
je
fsub
test
imul
push
leave
xor
xor
jge
and
xor
sbb
jbe
call
pusha
push
inc
aas
jle
std
js
push
adc
shl
dec
dec
mov
ins
jl
xor
ret
loope
(bad)
jmp
data16
cmp
dec
push
xor
mov
ror
and
das
dec
jmp
dec
pusha
mov
js
xchg
enter
movs
lods
daa
sub
adc
xchg
push
mov
hlt
add
jne
hlt
mov
and
jb
sub
jno
mov
shl
and
mov
add
test
xchg
xor
ror
inc
outs
ja
xor
jmp
add
and
(bad)
out
jbe
mov
sub
retf
ror
mov
mov
add
pop
gs
inc
and
jne
cmp
add
sbb
sbb
inc
add
or
and
mov
bound
lds
out
scas
nop
popa
das
pushf
add
jae
mov
add
call
xchg
push
adc
jnp
and
push
fsubr
(bad)
and
sub
pusha
daa
cdq
jae
mov
add
cmps
add
jbe
test
jmp
inc
ds
jmp
jl
sub
or
sub
pop
adc
cmp
xchg
aam
push
cli
lock
xlat
xchg
xchg
push
cld
in
adc
xchg
je
sbb
pop
or
rol
push
jecxz
xchg
xor
mov
xchg
inc
mov
imul
fmul
fdiv
rol
aad
call
lods
pop
pop
push
cmps
mov
jmp
xchg
ret
loope
add
ja
cmp
inc
adc
hlt
or
aaa
inc
call
(bad)
repnz
push
mov
stos
enter
inc
sub
add
outs
mov
inc
retf
sbb
add
jmp
pop
pop
es
stos
das
cmp
ss
ror
and
add
inc
aas
imul
in
jo
call
xlat
pop
or
push
pop
add
mov
or
mov
mov
pop
pop
push
pop
call
fisub
(bad)
shl
and
adc
adc
jmp
sar
(bad)
fs
test
test
and
adc
jb
push
mov
pop
add
pop
fwait
sar
jnp
and
or
cmp
outs
sbb
mov
idiv
dec
jnp
or
inc
add
cmp
or
or
fcmovnu
scas
add
inc
movs
das
enter
movs
call
jae
cmc
mov
gs
ds
jbe
inc
pop
dec
push
pusha
add
mov
fwait
not
jle
mov
push
mov
add
mov
mov
lock
or
jne
in
fdiv
inc
add
inc
or
push
pusha
jne
sbb
sbb
mov
lods
or
ret
rcr
fisubr
dec
jmp
jo
or
dec
jbe
std
or
scas
xor
jno
xlat
ds
out
mov
cs
push
test
test
xchg
push
add
inc
mov
and
sar
movzx
rcl
add
sbb
cmp
pop
inc
adc
inc
push
into
adc
push
push
sub
ins
and
mov
rcr
aaa
add
in
lods
or
loope
pop
sti
movs
jge
add
xrelease
fdiv
push
and
or
sbb
cmp
fidivr
add
adc
out
shr
adc
or
mov
nop
gs
cmp
fcomp
test
mov
adc
ss
lds
jo
or
data16
ret
mov
data16
xchg
and
pop
out
inc
shl
add
mov
lods
scas
fmul
push
pop
mov
das
dec
fcmove
ja
mov
jnp
xlat
jo
sbb
sbb
fiadd
rcl
outs
xor
jge
push
or
cwde
adc
leave
int3
xor
push
movs
push
xchg
xlat
mov
sbb
jge
and
jg
jg
jne
and
retf
mov
or
loopne
inc
push
jge
add
mov
rol
or
jmp
ror
dec
pop
mov
sub
mov
rcr
add
lock
sysret
mov
out
(bad)
push
in
clc
lods
das
ins
xor
jns
inc
fdecstp
sub
inc
loopne
js
sub
xchg
jle
and
sti
jge
outs
ss
and
adc
jo
sbb
outs
push
loopne
pop
xlat
cmp
sub
jo
mov
sub
sub
mov
es
lock
call
and
xor
sbb
mov
and
enter
test
jle
add
add
stos
nop
outs
enter
div
adc
or
push
mov
inc
xor
shl
or
add
cmp
xor
xor
sub
aad
movs
cmc
xor
(bad)
adc
lods
add
aas
xchg
push
inc
mov
das
hlt
(bad)
cmp
jbe
and
mov
js
neg
dec
fnsave
clc
or
add
push
adc
mov
add
in
mov
and
mov
mov
adc
adc
xor
xor
cmp
sar
push
adc
into
or
lea
cmp
hlt
(bad)
pop
outs
inc
and
and
cld
inc
je
sub
mov
and
cld
add
xchg
push
push
pop
add
aaa
or
lds
sub
or
cwde
add
imul
add
(bad)
pop
and
ins
or
mov
xchg
les
mov
repnz
dec
cmp
rol
test
adc
(bad)
sbb
mov
stc
xor
call
hlt
jb
jg
add
jne
push
dec
mov
inc
pop
sbb
add
pop
xchg
push
add
add
add
nop
sub
adc
cmp
and
or
push
sbb
test
cmp
jb
sbb
test
jle
xchg
xchg
adc
sub
adc
add
sub
push
mov
(bad)
sbb
mov
mov
jp
push
daa
jo
data16
jmp
jb
data16
push
in
jae
mov
inc
mov
jns
xor
push
clc
inc
in
xchg
add
add
popa
or
mov
add
sub
int3
push
push
ret
pop
inc
adc
js
movs
je
fwait
add
loope
fsqrt
fwait
dec
loop
inc
sub
movs
push
ins
inc
imul
sub
sub
cs
pop
loop
cmp
inc
and
ret
sahf
mov
ret
inc
dec
push
(bad)
out
xor
add
xchg
jecxz
loope
inc
cmp
pop
cmp
xor
lahf
xchg
inc
mov
pop
sbb
mov
popa
test
sbb
mov
mov
loop
sbb
rcl
into
xor
or
fidivr
and
movs
sub
mov
push
jo
or
dec
adc
and
les
sub
(bad)
push
(bad)
xor
mov
dec
jecxz
push
sub
adc
pop
movs
int3
push
sar
add
shl
jmp
adc
shr
fs
mov
push
jmp
inc
inc
retf
aam
mov
add
sub
ret
jo
jbe
push
dec
cli
adc
rol
adc
and
add
in
lea
dec
sbb
sub
adc
cmps
add
cmp
sub
or
pavgb
lock
xor
mov
sbb
inc
mov
push
gs
push
shl
dec
and
inc
dec
cmp
retf
lods
stos
ss
test
lahf
inc
cmp
ret
push
inc
mov
add
adc
ins
clc
cmp
adc
and
mov
enter
mov
loop
mov
jb
add
push
scas
mov
adc
mov
les
nop
je
inc
jne
cmp
cs
cmp
jp
push
push
xchg
cmp
jle
mov
nop
add
mov
lock
xor
lea
pop
ficom
std
call
xor
xlat
add
in
sbb
jo
jbe
mov
loopne
lods
cmp
xchg
push
enter
push
fldcw
cmp
xchg
mov
push
sar
push
ss
sub
js
and
mov
lods
enter
and
aam
iret
je
outs
gs
jp
mov
add
movs
aaa
xchg
ins
inc
and
sbb
test
lock
lea
mov
movs
out
test
test
mov
bound
jl
jae
div
loopne
imul
push
mov
data16
rcl
pop
xchg
fiadd
mov
mov
mov
loopne
cmps
mov
mov
xchg
mov
cmp
dec
dec
xchg
cmps
mov
xchg
add
sub
jo
repnz
or
push
mov
les
movs
enter
add
and
in
or
fbstp
xlat
popa
mov
je
(bad)
out
ret
jl
dec
inc
ins
jecxz
xor
fst
inc
pop
cmp
inc
inc
xchg
and
ins
mov
dec
or
test
(bad)
out
ja
jle
mov
je
push
mov
fimul
inc
mov
add
loop
xchg
pop
movs
and
cli
inc
cmp
popf
sub
add
stos
jmp
and
into
dec
sub
int3
movs
icebp
bswap
(bad)
dec
ja
sub
sbb
inc
pushf
and
retf
inc
popa
addr16
xor
dec
ret
push
div
fadd
sar
cli
add
and
cmp
cmp
sub
fiadd
popa
xchg
jns
in
out
add
or
int3
ret
jge
adc
push
xor
or
mov
pop
jno
mov
(bad)
int3
xlat
add
pop
or
cmp
sbb
rcr
or
jle
movs
fadd
movs
inc
add
cdq
ret
adc
cmp
(bad)
(bad)
jp
mov
lea
add
sub
movs
mov
adc
test
sti
cs
mov
ror
dec
inc
xor
xchg
add
jge
cmps
push
std
fadd
adc
ret
ins
pushf
sti
imul
push
(bad)
mov
movs
and
add
add
enter
data16
pop
inc
push
stos
xchg
je
nop
mov
dec
dec
xor
push
sub
push
lahf
rcr
sub
inc
xor
mov
lea
mov
test
xchg
jbe
test
mov
in
or
std
scas
adc
enter
aam
inc
inc
mov
cmp
jle
sub
loopne
add
mov
cld
dec
loopne
cmp
sub
cmp
ss
ja
and
clc
sbb
retf
imul
adc
cmp
adc
push
sub
jge
dec
into
jns
fld
dec
cmp
ret
popa
push
inc
sbb
jmp
mov
test
and
cwde
push
jp
sbb
cmps
inc
gs
dec
adc
mov
ror
push
jmp
mov
push
arpl
inc
sub
retf
sbb
pop
test
inc
iret
xor
jl
jmp
xchg
pop
lea
dec
mov
outs
rcl
popf
push
xor
adc
sub
out
push
dec
aaa
sub
inc
out
out
mov
cmp
sub
xlat
inc
test
fmul
loopne
dec
add
push
sub
lods
sub
cli
dec
cmp
ror
mov
hlt
pop
mov
in
cmps
add
mov
add
jge
dec
les
pop
addr16
int3
adc
add
xchg
mov
sbb
sbb
push
inc
nop
jno
jb
xchg
sbb
cmps
adc
or
push
jge
cmp
mov
shl
mov
xchg
sub
div
test
jmp
sub
cmp
out
in
sahf
clc
mov
lea
neg
push
mov
and
push
stos
int
or
sub
test
or
jg
mov
inc
mov
mov
add
(bad)
push
push
sub
jge
push
add
mov
clc
sub
push
call
or
call
loopne
jns
ret
dec
lds
push
cwde
pop
mov
xor
das
xor
ja
cmp
test
add
jnp
(bad)
retf
in
push
mov
push
outs
cmp
mov
loopne
jo
xor
xor
ins
inc
inc
mov
aad
jge
xchg
dec
adc
push
sub
xor
push
jecxz
cmc
dec
ror
add
pop
(bad)
aaa
sub
(bad)
push
mov
push
std
popf
and
in
clc
or
mov
cmp
xor
and
or
int
cli
sub
neg
add
test
arpl
stc
and
into
imul
dec
bound
ins
movs
jne
and
das
push
movs
popf
sbb
shl
inc
sbb
cs
add
inc
xor
or
xor
push
inc
dec
sbb
mov
dec
push
fiadd
pop
cmp
ins
xchg
mov
xchg
or
mov
call
add
xchg
adc
mov
xchg
in
nop
ja
add
int3
popa
adc
fcomp
pop
in
fwait
cmp
loopne
sbb
dec
xchg
imul
out
jae
xor
jge
xchg
loope
pusha
movs
sbb
lea
jns
or
test
pop
add
add
dec
push
add
dec
push
leave
pop
adc
and
dec
push
sub
inc
into
xlat
cmp
xchg
loop
or
push
inc
rcr
or
jmp
mov
push
dec
add
call
xchg
add
div
push
dec
mov
stos
fdiv
mov
shl
inc
xchg
pop
fs
inc
or
cmp
sub
mov
cmp
pop
dec
add
bound
xchg
or
imul
xchg
stos
jle
jmp
pop
stos
clc
mov
aam
xor
or
cwde
js
mov
scas
inc
add
dec
jne
xchg
inc
sub
js
lods
nop
lds
xor
jo
or
sbb
dec
mov
sub
add
(bad)
es
push
out
test
pop
push
imul
push
fmul
enter
rdpmc
pop
mov
push
push
test
lock
sbb
or
adc
cmp
ins
test
lods
sbb
(bad)
out
enter
or
test
imul
mov
dec
retf
sar
outs
inc
xchg
ret
aam
or
(bad)
dec
cmp
cmp
add
inc
cwde
or
inc
dec
pusha
sub
dec
mov
inc
retf
adc
frstor
adc
loop
xchg
inc
mov
inc
ret
mov
inc
push
pop
rol
ds
jo
push
xchg
and
sbb
cli
jo
nop
icebp
dec
jle
push
ins
gs
mov
push
and
or
mov
movs
mov
jg
jmp
pop
jmp
adc
lea
jae
push
retf
not
push
jp
or
js
iret
fwait
xchg
and
(bad)
sbb
out
mov
pushf
in
arpl
dec
push
jae
and
sub
dec
sti
icebp
ins
cmp
adc
add
push
push
push
mov
jnp
mov
xchg
push
push
mov
push
or
sub
loopne
jno
jae
loopne
loop
add
xlat
repz
rol
pop
mov
js
inc
push
sub
(bad)
jae
push
lds
mov
mov
sub
mov
or
dec
ss
lock
repz
mov
sub
(bad)
mov
jbe
dec
dec
mov
push
out
mov
shl
xor
push
cmp
mov
push
das
in
shl
push
hlt
xor
inc
gs
cld
push
adc
sub
xlat
fld
xor
aaa
imul
popa
movs
push
adc
retf
xor
xchg
push
jmp
cmp
cmp
outs
xor
movs
jge
jmp
mov
xchg
sub
les
popf
inc
jl
ja
or
mov
lock
push
rol
mov
dec
jmp
arpl
xor
(bad)
loope
popa
jns
jmp
mov
pop
rol
icebp
mov
xor
ins
xor
push
or
es
imul
dec
arpl
push
push
repnz
mov
mov
les
and
fs
inc
sbb
inc
or
jmp
push
mov
ror
push
pop
push
arpl
scas
lock
lock
jb
cmp
sahf
out
mov
outs
mov
mov
lods
cli
movs
fild
jmp
test
mov
cmp
clc
sbb
lahf
pop
fisttp
stos
xchg
jmp
xchg
fist
or
pop
pop
push
sbb
call
gs
mov
fcom
retf
sub
gs
cmc
xor
div
inc
retf
add
pop
std
cmp
and
sbb
mov
adc
jecxz
xor
ja
push
loope
icebp
movs
loopne
add
clc
inc
or
and
ror
pop
or
pop
pop
xor
or
sbb
push
les
popf
cmp
sti
add
fsub
mov
inc
pusha
jae
cmc
jmp
pop
pop
(bad)
int
fcmovbe
ja
mov
inc
dec
popf
pop
aaa
dec
mov
push
or
dec
and
fcmovbe
mov
push
cmp
xor
inc
mov
push
sbb
xor
adc
ret
(bad)
lahf
mov
adc
and
jo
out
pusha
cmp
xchg
xor
sub
mov
cmp
lods
pop
cmp
les
jg
adc
inc
arpl
and
adc
mov
jecxz
xlat
adc
popf
adc
sub
cmp
lea
inc
stc
add
inc
add
cmp
mov
and
xchg
pop
ja
dec
xor
and
movs
sbb
inc
pop
fisubr
sub
pop
fidivr
ds
inc
int3
cmp
jmp
cmp
iret
cmp
je
sub
inc
sbb
mov
jmp
inc
sbb
cdq
push
mov
(bad)
xchg
push
jecxz
mov
xchg
and
dec
mov
nop
pop
adc
jno
add
mov
sbb
leave
adc
arpl
dec
xor
mov
call
fcom
test
mov
or
jns
xor
jnp
fwait
xor
test
xchg
imul
fistp
pop
in
xchg
out
sbb
pop
call
cdq
aaa
in
rol
mov
pop
es
hlt
imul
add
jp
nop
mov
sub
push
mov
enter
lods
push
mov
xorps
push
imul
test
adc
dec
pop
and
inc
sub
push
nop
es
out
dec
(bad)
push
lea
or
and
call
jno
aad
sub
jecxz
sbb
ret
arpl
mov
push
stos
adc
test
adc
or
push
push
push
movs
nop
add
pop
cmp
inc
cmp
pop
aas
inc
mov
out
mov
add
push
jno
mov
or
add
imul
xor
in
imul
fdivrp
shl
je
add
adc
inc
mov
fs
sub
je
add
add
push
ffreep
inc
enter
shr
stos
dec
dec
ret
push
push
loopne
adc
test
stos
mov
or
data16
dec
bound
xchg
cmp
inc
sbb
je
pop
mov
enter
adc
or
jp
mov
data16
retf
dec
push
push
ret
mov
(bad)
pop
cwde
hlt
neg
pop
pop
xor
adc
mov
or
out
scas
ins
pusha
or
dec
or
and
inc
sar
pop
nop
arpl
xlat
clc
pop
pop
shl
pop
cmp
fst
pusha
test
ja
inc
mov
add
mov
ret
sub
cdq
pop
lea
xor
(bad)
sbb
push
nop
idiv
popa
pushf
ret
push
dec
push
nop
xor
ret
add
sub
imul
test
add
sub
lock
sbb
into
pop
pop
push
adc
mov
imul
adc
fadd
adc
mov
mov
jmp
adc
cmp
add
sub
dec
imul
pop
push
push
sub
in
sub
add
inc
pusha
in
jge
aad
jmp
xchg
push
int
data16
push
push
xchg
add
xchg
icebp
nop
pop
push
pop
adc
in
push
mov
mov
ds
rcr
fdiv
js
pop
xor
mov
add
int
pop
push
sbb
mov
fs
jp
sub
nop
pushf
cmp
imul
or
xor
repz
cmp
xchg
mov
cmp
test
(bad)
in
arpl
cld
xor
arpl
pop
and
jne
or
sbb
cli
xor
xor
std
rol
fcmove
js
cmp
inc
shl
sub
sub
push
cmp
push
adc
es
(bad)
jmp
xchg
rol
es
dec
fs
rol
aad
popa
push
adc
cmp
outs
or
fwait
ret
jb
(bad)
das
xor
sub
ror
sub
ss
loope
dec
adc
js
dec
ffreep
movs
adc
and
and
cmps
sbb
imul
repnz
scas
fcmovnbe
add
out
xor
sbb
adc
pop
xor
(bad)
xchg
dec
push
mov
sub
mov
pop
test
and
dec
stos
pop
inc
dec
(bad)
and
xor
fstp
shr
lahf
pop
mov
cli
xchg
sbb
sbb
pop
cmp
dec
inc
dec
dec
mov
adc
sub
mov
add
dec
(bad)
cli
sub
clc
out
adc
mov
call
add
inc
jnp
fild
adc
push
mov
popf
mov
mov
add
sbb
push
jb
dec
mov
dec
cmp
stos
inc
jp
lahf
rcr
mov
jmp
cdq
cld
test
adc
add
xchg
mov
push
inc
and
pop
push
mov
mov
and
sub
sbb
je
jp
add
cld
retf
sahf
and
popa
fadd
sbb
adc
dec
xor
jo
mov
shl
pop
test
sbb
lds
mov
inc
sub
lock
out
cld
pop
add
test
dec
lea
fisttp
nop
and
pop
lahf
adc
fisttp
or
push
fcomp
fs
xchg
push
dec
lahf
ds
and
xchg
and
and
push
sti
pop
pop
ret
lahf
xor
and
xchg
xchg
rol
inc
pop
inc
sbb
ret
jle
pop
jle
mov
rol
fisub
shr
shl
xchg
inc
mov
mov
sbb
sar
mov
and
or
xor
ret
pop
add
pop
jb
add
les
adc
ret
fild
data16
mov
jne
xchg
jl
es
(bad)
xchg
adc
push
mov
push
pusha
inc
out
not
pop
jmp
jle
mov
jmp
mov
sbb
mov
add
cmp
push
add
and
pop
sbb
pop
add
jb
imul
sub
movs
push
(bad)
gs
jae
popa
sbb
mov
or
test
sub
inc
push
aaa
clc
adc
cmc
mov
popa
sbb
pop
sbb
imul
xchg
push
jo
and
ret
adc
push
push
iret
out
les
push
sbb
push
fstp
or
lahf
sub
call
jmp
pop
push
xchg
mov
mov
aas
and
add
xchg
jns
and
gs
daa
sbb
pop
ja
mov
pop
inc
xlat
ror
push
mov
test
xor
mov
push
add
adc
sub
iret
dec
and
pop
push
add
push
call
ret
inc
sbb
test
cmp
sbb
and
mov
inc
sbb
xchg
fld
jmp
and
jmp
or
pop
lahf
mov
aaa
test
and
ds
jnp
mov
cli
test
lock
in
adc
xchg
and
xchg
adc
ja
lea
xor
(bad)
sbb
fadd
mov
cwde
mov
cmp
data16
mov
rcr
lods
push
bnd
fst
add
into
test
sub
shl
cwde
dec
out
icebp
mov
pop
cmp
push
and
es
dec
mov
arpl
and
sub
xchg
dec
inc
arpl
div
add
cmp
xor
adc
push
(bad)
jbe
inc
push
cmp
pop
nop
je
dec
cmp
jbe
ror
pop
movs
loopne
inc
sub
push
add
cmp
or
sar
mov
inc
xor
jmp
xor
ja
xchg
hlt
sub
test
add
and
push
arpl
inc
loop
adc
pusha
sbb
or
pop
fbstp
dec
adc
repz
or
into
jo
mov
mov
inc
test
inc
out
loopne
bound
sub
mov
cmp
xchg
mov
mov
or
call
cmp
fadd
or
or
mov
mov
add
xor
sub
xchg
aam
fcom
jmp
inc
xchg
in
adc
mov
ins
rcl
ret
dec
pop
icebp
test
and
rcl
push
imul
gs
and
ins
std
leave
jo
add
adc
push
xchg
and
inc
loopne
sbb
or
mov
push
fcomp
retf
pop
mov
jg
bound
or
lock
push
sbb
add
add
inc
aaa
jl
xor
dec
or
add
(bad)
sub
into
cmps
mov
hlt
mov
gs
retf
push
pop
jecxz
test
pusha
mov
mov
cmp
jl
(bad)
out
adc
sbb
mul
push
jmp
push
daa
pop
and
inc
and
mov
neg
adc
enter
mov
fs
scas
add
outs
adc
mov
or
and
inc
ror
fadd
xchg
inc
jp
mov
cli
and
test
push
dec
loope
ret
xor
adc
arpl
(bad)
std
pusha
rcl
fiadd
cmp
ja
sar
or
add
jbe
mov
inc
inc
pop
pop
clc
dec
cmp
jb
add
stc
das
sbb
retf
mov
jmp
and
(bad)
test
cmp
cs
rcr
and
sbb
mov
xchg
cmp
adc
add
sbb
inc
dec
cdq
ss
movs
lods
jbe
add
or
mov
push
aaa
and
dec
movs
mov
dec
es
dec
(bad)
push
push
jge
push
fwait
movs
mov
xor
mov
push
data16
jmp
lea
sbb
mov
retf
cmp
fcom
rcl
mov
ret
cmp
push
sbb
mov
sbb
jb
outs
out
and
adc
jge
ins
inc
add
fidivr
dec
cwde
cmc
movsx
add
ret
mov
pushf
mov
and
clc
and
or
sbb
sbb
es
call
and
xchg
or
cmp
adc
mov
in
inc
sbb
shl
jle
push
sbb
or
add
pop
or
xor
pop
test
mov
xchg
push
sbb
xchg
or
test
xchg
or
mov
xchg
inc
inc
jo
jmp
ins
push
(bad)
fwait
cmp
push
mov
xchg
push
or
add
mov
leave
add
es
loope
iret
repz
mov
pop
shl
add
xchg
mov
cmp
or
pushf
jne
push
icebp
xchg
sub
fs
cvtdq2ps
cvtps2pi
mov
pop
adc
test
push
and
dec
inc
imul
repnz
pop
sbb
inc
loop
cwde
int
add
pop
sbb
jb
mov
mov
or
sbb
nop
adc
mov
rcr
push
scas
xchg
add
mov
mov
cwde
add
lahf
hlt
pusha
and
jae
hlt
push
ret
sbb
in
mov
shl
test
add
test
xor
sbb
jb
(bad)
mov
sbb
jge
sbb
js
sub
test
pop
icebp
add
adc
xor
test
jmp
mov
mov
push
movs
je
addr16
add
add
fiadd
fbld
aaa
or
dec
inc
xchg
jo
repnz
ins
mov
loopne
add
fiadd
shr
xor
jmp
out
pop
(bad)
test
sbb
(bad)
lock
jmp
cmp
div
test
scas
xchg
pop
mov
pusha
jmp
sbb
rcr
(bad)
pop
inc
or
scas
popf
ret
sbb
jno
mov
cmp
pop
sbb
ror
(bad)
movs
dec
mov
ret
(bad)
in
retf
sbb
cmc
cmc
add
retf
inc
mov
mov
jno
sub
retf
sbb
cmc
push
ins
pop
inc
jno
loope
fs
xor
mov
sbb
lahf
inc
cs
std
jbe
and
add
inc
jmp
inc
xor
inc
sbb
and
(bad)
xchg
rcl
ins
push
sbb
(bad)
add
fist
out
lea
dec
je
lods
cmp
lds
dec
or
mov
mov
xor
push
(bad)
jnp
jl
mov
call
jge
jno
jmp
loop
xor
ficom
add
cmp
ja
add
rol
dec
push
or
test
imul
mov
ins
dec
jmp
pop
push
mov
mov
sub
push
sub
and
(bad)
cmps
pop
loopne
nop
push
adc
lods
je
retf
xchg
dec
dec
cmp
cmp
xchg
ja
inc
lahf
(bad)
outs
push
cmp
sti
push
sbb
adc
ror
loopne
and
jmp
add
dec
test
pop
bound
sbb
das
mov
inc
and
sbb
push
dec
fst
dec
mov
iret
dec
xor
int
dec
cmps
add
arpl
movs
popa
in
sub
cmps
push
sub
stos
ret
adc
out
imul
or
add
nop
dec
dec
xchg
(bad)
push
or
mov
retf
and
mov
cmp
xor
adc
fst
mov
test
mov
mov
adc
adc
dec
push
or
dec
jmp
das
pop
push
push
add
out
and
(bad)
sub
lods
mov
and
add
sbb
dec
cmp
mov
stos
inc
mov
inc
xor
dec
xor
xchg
mov
push
shr
mov
je
fadd
movs
jae
and
pop
push
enter
xor
imul
fcomp
xchg
loopne
jg
dec
and
or
out
xchg
mov
mov
int3
and
pop
dec
or
data16
xchg
jecxz
outs
add
imul
jmp
ret
outs
pop
fldenv
jmp
push
test
mov
in
sub
js
leave
add
adc
push
mul
repz
stos
adc
cs
iret
in
push
cmp
xchg
out
clc
cmps
imul
jno
call
mov
sahf
and
xor
or
cmp
push
lods
mul
int3
add
ret
add
lods
popa
jge
ja
xor
push
cmps
mov
mov
hlt
imul
mov
adc
jbe
dec
or
ds
aaa
enter
fbstp
sbb
rcl
inc
adc
jmp
xchg
mov
inc
xchg
mov
jb
push
lock
mov
bound
or
lods
rcl
pop
pusha
mov
mov
cs
inc
adc
or
adc
xor
cmp
daa
sub
add
add
clc
add
std
pop
mov
add
sub
iret
add
movs
pop
dec
push
in
or
sbb
and
loopne
sub
scas
fld
shl
adc
and
pop
div
inc
add
shl
pop
js
stos
and
es
fwait
jmp
or
jno
pop
nop
fiadd
and
jmp
out
outs
xor
dec
inc
xor
push
imul
mov
sub
cmps
call
push
adc
mov
add
xchg
sahf
gs
jl
mov
push
dec
sub
add
out
fisttp
pop
add
fadd
shr
pop
add
cli
push
adc
inc
sbb
out
bound
or
inc
push
cs
push
mov
daa
and
call
ficom
sbb
in
xchg
jle
dec
clc
pop
shl
pop
sub
stc
adc
fs
out
jne
push
ins
inc
stos
fs
dec
mov
fistp
std
fist
ss
or
call
int
(bad)
cmp
loop
jns
push
ror
jmp
inc
pusha
test
add
sbb
mov
inc
sbb
inc
adc
popa
addr16
shl
rcl
dec
arpl
dec
cmp
and
mov
xor
add
jl
jp
sub
int3
push
dec
js
pop
fdivr
bound
test
pop
cmp
out
sbb
or
sbb
xor
inc
or
sbb
test
jae
cmp
inc
int
mov
loope
ins
lods
sub
les
mov
cmp
arpl
cmp
mov
cdq
cmps
mov
xchg
test
clc
cmp
push
adc
mov
xchg
mov
mov
cmps
xor
pusha
adc
push
or
mov
movs
leave
ret
(bad)
adc
dec
xor
dec
sbb
pop
(bad)
and
fst
cmp
xchg
fnstcw
(bad)
mov
sbb
rol
xchg
cmp
inc
test
xor
jne
xchg
adc
ja
mov
int3
sahf
jnp
add
mov
and
cwde
bound
pop
xor
push
pushf
fdiv
daa
xor
and
movs
in
xchg
fwait
add
mov
inc
popa
adc
push
and
mov
inc
ret
mov
mov
add
nop
adc
arpl
mov
bound
sbb
pop
je
or
je
or
mov
ror
mov
je
cmp
xchg
xchg
clc
jae
adc
jne
test
add
add
inc
cli
mov
ds
xchg
sbb
(bad)
(bad)
push
jle
or
in
sub
test
xchg
xchg
aas
test
jae
push
mul
fiadd
js
(bad)
adc
fmul
jmp
adc
(bad)
in
fsqrt
push
aas
or
lea
dec
or
add
pushaw
jle
sbb
add
jmp
mov
cbw
gs
(bad)
xchg
aam
pop
jmp
push
jns
jae
jae
jne
pushf
lea
sub
or
pop
xor
dec
xchg
dec
sbb
pop
cmp
adc
and
or
or
jl
popf
xchg
frstor
(bad)
mov
pop
fs
mov
jo
inc
dec
cmps
dec
mov
mov
call
push
mov
lods
pop
xchg
int3
pop
sub
add
mov
test
lock
mov
pop
mov
sub
cmps
adc
pop
fidivr
or
mov
ja
jmp
nop
push
mov
pop
fstp
ins
dec
xor
jge
test
adc
and
cli
lock
pusha
jmp
add
xor
popf
loope
push
in
mov
clc
sub
js
aaa
add
stos
jns
push
mov
and
aaa
not
fstp
and
xchg
sub
out
inc
mov
inc
mov
sub
std
mov
(bad)
jl
cmp
pop
jnp
sbb
add
pop
sub
mov
mov
add
jmp
lea
push
xchg
inc
dec
add
sbb
inc
xor
or
dec
fcom
sbb
lahf
rcl
imul
mov
aam
shl
sub
or
test
fild
leave
js
xchg
adc
aaa
add
dec
jl
jge
or
ins
push
sub
adc
and
sub
add
lods
je
inc
add
scas
push
mov
sub
sbb
push
rcr
je
dec
add
or
or
push
sar
cli
enter
fimul
inc
test
jle
and
imul
push
test
xor
movs
or
(bad)
test
test
cmc
xor
pusha
test
push
sub
xchg
xor
and
repz
daa
pop
lea
pop
adc
xor
aam
dec
pop
nop
cdq
fsubp
add
shl
sbb
add
test
test
or
push
xor
stos
fistp
cmp
and
lahf
mov
call
jmp
mov
dec
retf
pop
setl
lock
lahf
outs
push
in
jmp
dec
repz
xor
(bad)
sbb
adc
pushf
jnp
out
inc
ret
adc
or
or
jbe
xor
movs
repnz
jg
xlat
or
lods
inc
or
jmp
jne
leave
daa
test
sbb
mov
adc
test
adc
shr
mov
xchg
pop
sbb
jb
and
push
mov
call
and
sbb
pop
jmp
popa
xchg
hlt
push
xor
out
or
ja
test
jbe
adc
push
sahf
(bad)
retf
sbb
sub
idiv
stos
or
fild
data16
push
xchg
iret
sub
pop
pop
dec
sub
retf
ds
and
fcmovu
data16
pop
cwde
lods
mov
mov
jmp
xlat
in
sbb
sbb
je
inc
sbb
dec
sbb
add
and
(bad)
adc
jno
lock
jmp
ror
ja
dec
add
push
add
mov
mov
shl
push
cwde
cmc
das
push
out
mov
cdq
ret
cmp
in
sub
ret
inc
dec
shr
mov
les
dec
inc
add
test
adc
in
dec
add
rcr
lods
mov
push
adc
pop
sbb
rcr
add
add
or
test
out
add
and
push
call
pop
out
or
je
mov
jno
and
cmps
sub
dec
sbb
out
adc
mov
(bad)
jns
add
mov
out
pop
dec
cli
push
stc
(bad)
xchg
fs
iret
adc
xchg
sbb
adc
in
adc
mov
sub
scas
inc
adc
or
test
and
add
ds
or
ret
(bad)
or
or
add
fimul
sbb
cdq
or
and
movups
leave
mov
aaa
std
sub
loopne
push
sbb
add
rcr
rcl
and
add
xchg
cmp
add
pop
or
cmp
mov
jg
cmp
add
jmp
add
pop
sub
imul
ret
pop
adc
mov
push
add
call
out
jo
add
movlps
es
gs
mov
in
add
dec
and
push
mov
or
cmp
pusha
or
adc
adc
pop
push
sbb
sub
les
mov
shl
push
pop
jae
movs
fs
push
sahf
and
jge
imul
call
add
fcmovb
popf
nop
mov
sar
leave
movs
adc
fnstcw
or
clc
jle
inc
adc
repnz
mov
sub
movs
add
jmp
or
jecxz
adc
jle
ret
mov
aas
mov
adc
ds
dec
call
outs
jmp
xchg
push
pop
shl
add
shl
adc
dec
or
pop
mov
clc
push
js
mov
push
jp
add
or
mov
test
sub
ins
sbb
loopne
aad
push
sar
jbe
cdq
mov
rol
jbe
jbe
and
lds
push
mov
pop
or
xchg
jne
sar
mov
jb
neg
push
pop
push
xchg
sbb
add
out
mov
dec
or
and
inc
xor
push
mov
js
inc
inc
add
sub
and
or
adc
jl
inc
jb
jo
inc
jecxz
inc
or
adc
add
test
mov
shl
inc
dec
lahf
mov
mov
or
push
aam
add
sbb
(bad)
xor
lods
fwait
gs
jge
add
jmp
test
imul
add
or
ret
daa
mov
mov
cwde
push
call
cmp
jle
mov
movs
mov
jp
sbb
mov
pop
adc
dec
push
rcl
adc
dec
pop
leave
sub
dec
or
js
ss
lock
retf
sub
cmp
hlt
xchg
mov
or
dec
adc
dec
dec
mov
in
xor
outs
or
dec
or
aaa
and
mov
xchg
cwde
aas
test
push
addr16
and
jbe
add
and
adc
cmc
(bad)
mov
imul
or
int3
and
cmp
shl
xchg
and
pushf
rcr
test
outs
dec
popa
add
int3
push
add
movs
cmp
pop
adc
jb
out
jbe
sbb
(bad)
cmc
sub
das
lods
or
mov
out
jo
push
fcom
sub
ret
jmp
mov
fild
popa
pushf
push
popf
(bad)
jo
lea
sub
(bad)
shl
cmp
sbb
ret
lock
nop
sub
cmp
pop
mov
xor
inc
push
gs
jne
cmps
aam
and
movs
sbb
inc
mov
ret
adc
out
pop
add
add
add
push
mov
adc
mov
xlat
xchg
jo
sub
out
js
xchg
xor
jne
call
sbb
and
sbb
(bad)
sbb
pop
xor
add
fdivr
xchg
sub
mov
mov
aaa
repz
sub
fidiv
push
inc
loop
or
mov
aas
mov
or
pop
test
fwait
test
sub
pop
add
or
add
jns
les
mov
jmp
test
jne
mov
into
dec
push
lea
rcr
daa
or
push
ss
mov
adc
or
dec
ret
mov
xchg
inc
or
daa
or
imul
push
adc
enter
adc
push
icebp
mov
cmps
pop
inc
jle
call
bound
mov
arpl
sbb
(bad)
aaa
pop
add
outs
jnp
mov
or
jp
inc
movs
or
or
addr16
cmp
or
ret
push
ds
xchg
and
sub
push
jbe
test
rol
cmps
ss
dec
add
or
xor
push
mov
cs
into
and
nop
lock
and
pop
and
aam
scas
aas
cmc
xor
(bad)
shr
fdiv
mov
xchg
xchg
and
mov
or
dec
jl
dec
fmul
sbb
dec
push
fmul
sub
adc
sbb
or
mov
and
sub
xchg
pushf
sub
push
xor
or
add
push
retf
test
push
add
out
jb
sti
lea
mov
dec
add
push
ss
int
inc
lods
add
(bad)
mov
sub
fcmovnu
dec
mov
inc
push
out
jmp
ins
ss
or
out
mov
enter
movs
call
pop
cmps
cwde
imul
cmp
out
xor
int
scas
inc
mov
daa
mov
mov
loopne
ror
adc
lahf
cmp
enter
mov
retf
cmp
xchg
int3
ds
jmp
mov
shl
aam
aad
call
fnstcw
ficom
mov
fiadd
int
iret
mov
(bad)
mov
or
pushf
icebp
fist
scas
mov
dec
jmp
mov
movs
sbb
pushf
mov
push
mov
dec
rep
fld
loopne
sbb
fnstcw
gs
xchg
loop
loop
jl
push
nop
jecxz
bnd
pop
test
(bad)
pop
in
in
repnz
out
mov
and
cmovo
jbe
bound
shl
mov
sbb
lds
adc
aam
popa
sub
xor
adc
in
ins
lods
inc
ins
pop
movs
lock
push
inc
push
cdq
push
aaa
lock
aad
mov
adc
cmps
fsub
xchg
xchg
cmp
dec
and
dec
or
inc
push
pop
mov
retf
pop
frstor
test
push
imul
cmp
adc
in
clc
fadd
add
arpl
lods
push
sbb
ficomp
ror
sub
cs
sub
sub
push
shr
pushf
cdq
cmp
hlt
sbb
jo
dec
pusha
ins
inc
pop
lds
push
push
inc
mov
clc
cmp
push
mov
(bad)
jne
lahf
push
push
add
sbb
rcr
ror
push
sub
ds
jne
add
mov
cmps
pop
mov
popa
adc
add
inc
push
adc
push
mov
lods
sbb
loopne
mov
and
mov
or
pop
or
sbb
add
ins
in
stos
jmp
xchg
sbb
jge
fisubr
fsubr
or
mov
adc
cmp
inc
mov
(bad)
sub
inc
push
iret
pop
popf
arpl
xor
ror
add
mov
clc
movs
nop
xchg
push
inc
inc
out
(bad)
std
dec
dec
dec
sbb
xchg
jl
add
mov
(bad)
mov
push
lock
bound
push
jg
dec
add
pop
inc
push
pushf
popa
adc
xchg
cmp
out
jecxz
and
ja
or
fwait
mov
mov
es
ins
adc
fcom
add
jecxz
add
jecxz
jmp
and
mov
mov
mov
clc
or
das
lods
or
adc
push
jmp
icebp
out
push
adc
dec
cmps
out
mov
(bad)
lods
pop
jmp
inc
sbb
xchg
and
push
inc
idiv
push
cmp
mov
jmp
retf
or
mov
lahf
aad
fnstenv
add
cmp
(bad)
xchg
mov
ins
addr16
sbb
mov
dec
xor
push
ror
add
xor
sbb
jae
mov
push
adc
inc
test
xor
jl
outs
ret
adc
sub
and
into
jmp
push
popa
jl
push
adc
cwde
outs
push
inc
xchg
pop
mov
sub
fadd
and
or
mov
or
outs
in
dec
sub
or
test
and
retf
sbb
pusha
adc
inc
mov
xchg
hlt
add
pop
mov
ficomp
add
cmp
pusha
sbb
fmulp
sar
push
pop
jb
hlt
sbb
pop
jne
push
fidivr
sbb
inc
jbe
jp
xchg
add
cdq
inc
into
dec
and
adc
pop
sub
fidiv
sbb
lahf
fsub
add
dec
add
xor
shl
xor
cmp
ja
out
les
jns
sbb
ret
popf
aad
stc
mov
inc
add
sbb
ins
pop
mov
aaa
xchg
push
xor
call
sbb
inc
add
and
jmp
dec
stos
pop
js
sub
pop
pop
or
xchg
push
pop
or
cmps
dec
push
mov
jno
aam
movzx
imul
pop
and
add
and
inc
cmps
add
fst
movs
sbb
pop
adc
jl
ret
push
push
adc
(bad)
fisttp
pop
add
push
retf
inc
ret
push
inc
pop
push
sbb
pop
or
sar
dec
ret
sar
cs
xchg
pop
push
js
add
lea
pop
popf
pop
and
test
and
xlat
enter
sbb
adc
sbb
into
pusha
test
(bad)
mov
or
bound
sbb
jmp
cmps
loop
pop
out
pop
sbb
and
int3
dec
popf
fdivr
stos
test
fist
adc
adc
sbb
add
(bad)
fbld
cwde
fstp
jno
jo
mov
push
sbb
sub
jmp
(bad)
idiv
jo
mov
nop
sbb
fld
clc
push
add
pushf
push
jl
or
xor
mov
and
test
rcl
pop
cmp
loopne
ror
je
push
je
xor
jae
pop
xor
dec
or
pusha
cwde
cli
ss
cmp
mov
cli
mov
push
sbb
mov
call
pushf
jbe
adc
test
xchg
inc
and
mov
std
xor
enter
add
and
add
iret
out
pop
movs
inc
dec
sbb
ror
cs
push
outs
fsubr
aas
add
cmp
fild
push
(bad)
into
xor
inc
pusha
push
mov
fucomi
adc
nop
push
sub
cmp
jl
add
cli
xchg
out
cld
adc
retf
add
fsubr
push
adc
pop
xchg
mov
push
clc
imul
shl
test
jl
loope
add
ret
mov
popf
push
fiadd
push
cld
cwde
mov
inc
dec
retf
sub
ror
jns
xor
pop
cmp
or
mov
and
xchg
rcl
test
or
and
movs
push
or
shl
in
cmp
daa
inc
icebp
mov
loop
cmps
jmp
push
and
mov
adc
loopne
out
sbb
(bad)
idiv
adc
ret
push
mov
sbb
in
and
push
inc
dec
xchg
mov
mov
xor
movs
or
mov
loop
ss
test
add
mov
pop
and
xchg
ret
mov
push
cmps
and
and
or
in
mov
mov
or
dec
cmp
scas
sub
mov
ss
jbe
dec
lahf
xchg
inc
pop
adc
inc
xchg
fwait
inc
jb
sbb
ss
mov
inc
sbb
pop
and
test
inc
or
fwait
jmp
stc
jp
push
jne
enter
(bad)
enter
sub
cs
sahf
and
and
pop
mov
jnp
enter
fwait
or
sar
or
and
push
inc
xlat
push
bound
popa
call
push
adc
push
or
adc
push
out
aam
jne
repnz
sbb
inc
movsx
repz
adc
sbb
push
mov
push
xchg
or
fcom
adc
stos
inc
movs
outs
inc
push
(bad)
or
and
mov
push
adc
dec
clc
outs
add
out
push
mov
jg
inc
add
test
or
mov
int
adc
or
shl
inc
and
fs
adc
sub
and
adc
jae
enter
pop
add
jno
dec
jnp
jp
cld
loope
je
sbb
inc
dec
push
fbld
mov
pushf
and
inc
sbb
jo
sbb
loop
xchg
bound
and
pop
and
das
push
sbb
and
ret
ja
iret
sti
xchg
or
popa
push
push
xchg
mov
adc
pmuludq
jmp
and
inc
pushf
or
and
jns
and
std
and
push
sbb
ret
push
imul
movs
lds
push
add
xchg
(bad)
lock
cmp
push
lahf
cld
adc
ins
sub
out
push
inc
jae
retf
sbb
push
retf
sub
xor
sbb
sub
add
cmc
sub
dec
mov
push
(bad)
daa
cmp
mov
inc
push
movs
or
or
pop
bound
jmp
daa
sbb
(bad)
fcomp
loopne
push
mov
and
cdq
mov
sbb
dec
loopne
(bad)
pop
add
pop
add
loopne
mov
ret
arpl
js
xor
mov
jmp
ins
add
dec
das
push
jl
pop
inc
lods
popa
jge
xchg
jne
add
and
stos
dec
shl
or
push
dec
sbb
or
ds
dec
xchg
push
inc
xor
retf
int
mov
push
daa
push
std
dec
bound
jne
pop
and
dec
mov
and
push
mov
lahf
sbb
dec
adc
and
sub
loopne
push
add
cmp
adc
addr16
add
mov
pop
pop
add
sub
mov
push
test
adc
mov
sub
mov
jb
pop
js
cdq
xchg
enter
or
lods
rcr
or
or
mov
or
(bad)
cmp
bound
xchg
int
push
jg
test
hlt
cmp
jne
ins
data16
aas
jb
fadd
inc
not
mov
movs
and
fcom
push
test
in
push
add
lods
stos
adc
inc
and
mov
mov
ja
push
pop
stc
dec
test
or
addr16
mov
mov
jo
add
cdq
aam
sub
xor
xor
dec
icebp
push
test
stos
lahf
sti
std
push
cmp
jne
xchg
push
push
aaa
sub
push
jbe
pop
pop
sub
outs
js
jmp
repnz
push
inc
xchg
xor
mov
dec
lea
push
hlt
gs
loopne
add
das
and
cmp
dec
mov
xchg
dec
aad
and
sysenter
mov
xlat
enter
sti
xor
add
add
fild
push
data16
push
push
cmp
inc
xor
test
xchg
jae
jne
mov
aam
push
out
pusha
add
inc
fs
(bad)
mov
cdq
xor
inc
pop
js
lods
adc
int3
mov
mov
pop
data16
pop
jne
test
inc
and
jl
cs
ins
ins
adc
mov
dec
jns
aaa
add
sbb
(bad)
fistp
inc
pop
xor
xor
mov
add
mov
lahf
pop
push
sub
pusha
jmp
ret
mov
int
pop
xor
cmp
jae
pop
dec
in
add
add
rcl
shr
icebp
ins
jne
mov
aad
mov
sbb
fldenv
or
sbb
cmp
or
rcr
jne
test
mov
(bad)
js
adc
push
sahf
stos
push
push
xchg
push
jge
xchg
xchg
ror
js
cdq
or
fs
dec
jmp
or
dec
mul
lods
pushf
adc
rcl
test
out
dec
pop
lods
lds
cmp
sub
js
inc
js
sbb
push
enter
push
jmp
mov
rcl
jb
add
and
sti
mov
add
adc
test
jns
mov
add
mov
push
inc
in
fild
jmp
in
xchg
mov
cmps
js
mov
mov
mov
or
push
jp
rol
scas
sti
pop
jo
push
sar
sub
cmp
xchg
out
jle
ja
sbb
mov
fs
rol
sbb
mov
ss
pusha
aad
shl
xor
inc
dec
add
or
fucomi
imul
jmp
mov
pop
or
scas
imul
xchg
inc
adc
jmp
mov
mov
imul
add
adc
adc
push
lea
and
out
rol
or
jbe
jb
push
mov
sub
or
fwait
cmp
lods
dec
lahf
in
mov
inc
xlat
fcomp
cmp
fdiv
pop
lock
jne
stc
push
adc
xor
mov
add
or
inc
psubusb
xor
fdivr
popa
sbb
out
push
jbe
ficomp
dec
jl
ins
clc
sbb
pushf
ja
pop
and
mov
adc
loopne
or
jmp
arpl
inc
(bad)
xor
or
(bad)
jp
xor
or
mov
arpl
cs
in
call
fs
or
jl
lock
add
fmul
jecxz
adc
mov
jl
shr
stos
mov
sub
and
add
cmp
(bad)
cmp
add
aad
cmp
outs
dec
pushf
or
bndstx
call
add
adc
jnp
dec
stos
dec
push
dec
sub
mov
lods
scas
adc
xchg
add
mov
lahf
mov
jo
push
cmp
jbe
cdq
mov
jae
xor
jle
jmp
mov
or
push
push
cdq
sub
sbb
add
pop
pop
push
ins
ins
push
cli
mov
pop
xchg
inc
pop
adc
push
cmp
shl
and
pusha
mov
mov
adc
sbb
push
mov
add
sub
ss
aaa
dec
retf
loopne
cmp
or
adc
lock
lock
xchg
mov
call
lea
js
xchg
cmps
fadd
clc
and
repnz
fnstsw
cmp
mov
repnz
push
push
lahf
push
xchg
mov
cmp
test
rcl
fldenv
add
shl
or
adc
inc
imul
pop
add
dec
push
loope
and
(bad)
mov
jle
push
lahf
cdq
push
lea
push
test
xor
add
out
push
pop
jae
push
inc
mov
add
or
or
mov
adc
sub
in
es
test
ret
fnsave
lea
pop
and
cmp
(bad)
test
jp
mov
loope
aaa
inc
cmc
xor
lahf
jne
ds
nop
inc
xchg
and
(bad)
cmp
enter
mov
fst
jl
push
mov
cmp
movs
lods
inc
or
fmul
dec
xor
sub
adc
retf
jp
xor
mov
dec
shl
rcr
jmp
adc
push
fadd
push
sbb
popf
stos
jo
movs
movlps
mov
add
mov
daa
inc
add
rcl
cmps
mov
or
pusha
popa
jne
js
adc
cmp
add
or
(bad)
mov
je
popf
mov
dec
cmp
xor
adc
and
adc
pusha
sbb
and
ins
inc
ds
cdq
js
adc
push
inc
inc
add
push
inc
dec
dec
and
scas
inc
xchg
xor
sar
cmp
jmp
cdq
inc
add
jnp
fidiv
and
adc
rcl
push
cs
push
loope
inc
cmps
or
ds
rcl
sahf
test
cmps
jns
push
vsubpd
dec
add
push
adc
test
xchg
loop
push
xchg
repz
iret
sub
imul
mov
mov
mov
jl
add
sar
pop
jne
mov
shl
mov
adc
fisub
(bad)
jmp
daa
mov
loope
fnstsw
mov
nop
shl
adc
mov
hlt
add
pop
cmp
leave
sub
or
neg
and
ds
or
sbb
sbb
cmp
xchg
jne
pop
push
pusha
inc
add
jmp
mov
pop
sar
or
mov
mov
add
mov
inc
xor
fiadd
mov
hlt
push
mov
bound
inc
imul
sbb
or
adc
sbb
loopne
imul
or
mov
add
aad
inc
loope
add
sbb
(bad)
sbb
jo
ret
mov
imul
adc
pop
or
lea
inc
bound
loop
fwait
push
adc
jo
add
jle
xchg
pop
clc
es
repnz
call
add
dec
dec
or
data16
rol
int3
or
pop
xor
rol
and
mov
cdq
loopne
lahf
mov
dec
in
add
push
xchg
xchg
stos
jle
pop
imul
popf
sbb
mov
xchg
test
movs
xchg
push
add
xor
inc
pop
push
loopne
add
push
sbb
popf
popa
and
les
pcmpeqd
lods
xor
das
sbb
mov
aad
into
pop
inc
adc
xchg
jp
ret
je
mov
and
and
xor
add
sub
adc
aas
pop
dec
sar
sbb
push
or
dec
cmc
push
push
cld
adc
xor
je
jne
inc
cmp
enter
mov
lds
mov
lods
inc
or
ficom
pop
add
hlt
adc
mov
add
adc
add
adc
or
or
fcomp
ins
pop
pop
loop
jno
(bad)
sar
ds
fs
xor
lea
mov
in
mov
sar
cmp
jae
sbb
inc
or
ds
cmps
pop
lea
std
emms
push
cdq
add
mov
pop
enter
cli
jne
fcomp
cmp
ja
aam
dec
mov
je
jmp
cmc
pop
loope
pop
repnz
rcl
pop
pusha
lock
sbb
cdq
das
lock
jne
ins
(bad)
gs
add
aam
bound
mov
ds
xor
xchg
sbb
std
xor
mov
pop
nop
push
mov
xor
outs
xor
rol
ret
push
push
cmc
sub
nop
mov
xchg
inc
mov
xchg
mov
dec
sbb
and
add
sub
push
or
push
add
add
sbb
xchg
sti
das
jp
push
inc
lahf
loop
inc
add
jmp
nop
pop
das
(bad)
add
cmp
leave
add
fs
rol
or
inc
xchg
xlat
sbb
add
cmp
(bad)
add
push
jecxz
sub
jo
or
inc
mov
cmp
inc
jo
mov
push
arpl
and
nop
inc
xor
daa
retf
cli
cli
or
cwde
and
inc
or
cmps
sub
and
ja
inc
nop
cmps
pop
pop
jb
fcom
inc
push
and
sysenter
ffreep
stos
aad
push
fnsave
jb
inc
daa
and
and
xor
push
fs
test
mov
aam
sub
pop
or
jnp
cdq
aas
cmp
xchg
adc
cmp
cmp
fsubr
hlt
scas
mov
in
cmp
and
add
fcomp
xor
sbb
bound
cmc
test
xchg
call
and
add
and
shr
push
gs
or
stc
out
fnstcw
sub
mov
xchg
mov
fstp
popf
pusha
test
xchg
pop
adc
sbb
jle
pop
mov
pop
aas
add
add
dec
cmp
and
repnz
movs
ficomp
je
inc
cmp
xor
cs
add
mov
jg
sbb
test
pop
leave
jne
mov
xchg
xchg
xchg
sub
ret
sar
inc
push
sub
imul
aas
and
xor
in
add
lods
lea
fisttp
test
loope
push
repz
adc
sbb
jns
adc
in
jae
inc
adc
jmp
ret
rol
mov
sahf
jbe
data16
or
xchg
gs
jl
jo
jo
and
push
lock
or
add
push
rol
cwde
loop
cmp
fsub
and
cmp
loope
jne
inc
jo
xor
stc
cmps
push
sbb
dec
xchg
inc
jg
jbe
xchg
add
sbb
mov
mov
inc
mov
mov
add
dec
pushf
inc
or
cmp
adc
and
(bad)
mov
push
xchg
pop
call
jo
fild
mov
ret
push
std
lds
jo
in
fsub
push
out
enter
push
mov
inc
dec
dec
add
adc
add
or
jmp
dec
and
inc
or
or
leave
add
sahf
pop
bound
fld
mov
push
mov
fidivr
push
pusha
pusha
sbb
push
mov
adc
or
stos
bound
push
(bad)
push
sub
nop
xor
cmp
sbb
dec
sahf
push
test
popa
inc
sbb
push
lods
adc
inc
push
mov
sub
dec
push
xchg
inc
sar
push
addr16
cmc
adc
or
(bad)
push
lods
xlat
mov
jmp
push
pop
sub
dec
les
shr
sbb
data16
cmp
jb
mov
sbb
push
push
cmp
ins
dec
add
adc
(bad)
sub
mov
icebp
mov
inc
dec
push
(bad)
mov
out
sub
inc
inc
arpl
pop
cmps
js
cmp
jne
xchg
aad
sub
jo
shl
lea
inc
push
aad
push
and
pop
fld
sub
and
je
dec
mov
rol
ins
inc
popa
add
(bad)
dec
inc
mov
sub
push
xor
dec
sbb
sbb
push
and
pop
movs
mov
test
arpl
popa
test
sub
loopne
(bad)
popa
cmp
add
aam
add
stc
pop
inc
jle
push
push
jbe
add
add
adc
dec
push
fadd
(bad)
jg
outs
sbb
es
cwde
add
inc
ins
mov
pop
aam
xchg
xor
jmp
mov
add
inc
test
sbb
push
mov
mov
or
push
div
add
mov
jmp
jge
xchg
mov
jp
push
mov
and
push
sar
ins
fs
and
mov
test
sub
adc
push
cmps
or
jge
push
pop
lea
data16
pop
pop
lods
mov
pop
lock
loope
shr
mov
fs
es
sbb
push
dec
ror
sbb
repz
mov
shl
jl
mov
test
xchg
mov
icebp
pop
jmp
dec
cdq
and
mov
fiadd
inc
sub
stos
mov
test
ficomp
aam
dec
adc
cmp
inc
pop
hlt
jge
sbb
lahf
pop
dec
aas
mov
jns
add
mov
add
stos
mov
pop
dec
add
dec
inc
ret
cmps
loop
or
xchg
xchg
and
dec
add
js
mov
ret
pusha
lea
push
push
stos
sbb
push
rcr
ins
enter
jp
pop
pop
adc
mov
ss
or
add
jo
lock
ror
fdivr
loopne
mov
fs
sbb
jnp
test
add
mov
xor
cmc
push
mov
pop
(bad)
cmp
and
adc
mov
push
pop
cmp
adc
add
imul
xchg
ficom
rcl
ror
pop
cs
add
or
add
sahf
loopne
sti
cmp
push
mov
out
push
dec
shr
mov
push
movs
sar
call
and
push
jl
shl
mov
out
or
push
and
sbb
repz
in
add
xor
mov
outs
enter
mov
(bad)
lds
jns
les
xchg
mov
popf
push
push
imul
(bad)
xlat
pop
stos
xor
sbb
jo
xchg
call
and
cwde
fwait
push
push
mov
add
(bad)
mov
pop
ins
pop
push
xchg
ret
ins
hlt
sbb
pop
add
lea
ret
add
cmp
aaa
rcl
sbb
mov
mov
jle
stos
xor
add
clc
setae
aas
fadd
dec
pop
daa
or
das
rcl
xchg
int3
push
push
xor
pop
lahf
cmp
cwde
(bad)
dec
dec
cmp
je
call
mov
xchg
and
pop
pop
push
add
mov
xchg
call
mov
movs
inc
sete
xchg
xchg
xchg
ss
adc
inc
jmp
jge
mov
pushf
shl
mov
push
xor
inc
fnstcw
xor
mov
inc
xchg
jle
or
pusha
nop
push
cmovg
daa
lods
loop
aad
out
inc
inc
push
fstp
(bad)
ror
lea
mov
pavgb
xchg
mov
movs
jl
push
xchg
fld
sbb
push
jmp
pop
jmp
and
leave
or
mov
mov
cmp
add
jo
cmp
jl
push
cmps
ja
das
cmp
mov
jmp
and
dec
or
shl
sbb
cli
adc
jnp
imul
adc
and
ror
xchg
out
xor
retf
sbb
xchg
adc
mov
sbb
cmp
in
jno
pop
rcr
mov
and
sbb
push
out
movs
and
popf
jno
pop
inc
add
cmp
jnp
mov
dec
sbb
sahf
and
retf
push
dec
outs
test
xchg
mov
stos
inc
cmp
adc
loopne
pop
jp
ror
daa
retf
adc
pusha
data16
pop
jo
and
cmc
pusha
icebp
arpl
sub
(bad)
or
pop
adc
jl
push
push
ja
push
jo
cs
add
adc
push
dec
daa
push
pop
out
mov
sbb
inc
mov
scas
push
mov
cmc
push
out
sub
sbb
or
mov
pop
inc
ss
sbb
sbb
test
or
int3
mov
push
loop
sub
sbb
push
jmp
out
dec
or
rcl
mov
movs
(bad)
rol
mov
lahf
inc
sub
(bad)
and
sub
add
cld
out
mov
out
sar
push
sub
test
(bad)
fyl2xp1
add
inc
pusha
add
fadd
lds
pusha
xlat
lea
adc
sbb
push
mov
pop
test
jns
inc
test
xor
push
fld
push
loope
es
std
or
movs
je
cdq
stos
cdq
push
(bad)
lock
fadd
add
and
sub
and
sbb
jno
mov
inc
retf
push
dec
ins
int
retf
retf
mov
add
add
out
into
nop
xor
jecxz
xchg
add
inc
imul
xchg
jmp
fild
mov
mov
loopne
pop
and
push
xor
push
lock
jp
cli
outs
or
jmp
mov
xor
out
mov
add
(bad)
sbb
cmp
daa
pop
mov
jge
ins
cmp
or
call
pusha
lods
fild
test
push
push
xchg
dec
mov
cmp
or
jmp
daa
xchg
mov
fisub
pop
test
pop
in
int
xor
cmp
or
cmp
out
push
add
dec
jl
imul
inc
clc
pop
jl
je
sub
push
loopne
cmc
xchg
sub
mov
ins
nop
sbb
je
outs
adc
cmp
or
and
and
jle
xchg
cmp
inc
push
pusha
and
mov
and
xor
mov
lods
fbstp
adc
or
nop
adc
mov
jo
dec
aaa
push
add
mov
push
or
inc
or
leave
xchg
sbb
adc
popa
or
das
ja
add
repz
retf
fdivr
push
add
in
mov
(bad)
call
add
jmp
sbb
stos
lea
adc
xchg
sbb
xchg
nop
inc
xlat
js
ror
bound
add
loop
pop
or
and
or
inc
sbb
mov
jecxz
mov
(bad)
stos
inc
and
repnz
pop
pop
xor
pop
xchg
and
xchg
inc
xchg
pop
lock
sbb
push
mov
stos
mov
mov
fwait
loopne
xchg
push
sub
sub
lock
pop
inc
fldenv
xor
pop
stos
rcl
test
sahf
ins
and
or
inc
sbb
jo
popf
xchg
mov
xor
adc
jmp
xor
inc
xchg
retf
pop
sbb
enter
gs
pop
fbld
addr16
cmp
nop
mov
inc
dec
dec
pop
mov
in
dec
cs
pop
jmp
sub
and
cmp
rol
pop
push
gs
test
clc
pop
and
mov
mov
lds
push
jb
pop
pop
ins
jne
fiadd
and
push
or
adc
cld
rcr
test
and
pop
nop
fisttp
dec
cmp
in
or
mov
movs
pop
test
call
inc
jae
dec
or
or
jns
mov
adc
arpl
pop
shr
add
push
int
jmp
pop
cmp
call
ret
pop
pop
pop
sbb
dec
sub
and
inc
dec
ds
sbb
sbb
mov
sub
lds
mov
lds
lods
rcr
or
and
cmc
sbb
xor
pushf
cmp
lock
icebp
cmp
jmp
out
js
inc
je
aaa
(bad)
mov
mov
mov
(bad)
adc
inc
sbb
jl
jns
xor
push
mov
mov
jmp
adc
outs
or
add
lock
pop
popa
xor
pop
ins
and
sahf
call
jmp
pop
pop
clc
or
fs
ss
movs
sti
cmp
push
and
sbb
mov
xor
and
shl
loopne
cmp
daa
pop
out
and
into
inc
xchg
pushf
imul
xchg
jl
jnp
add
dec
gs
rol
pop
repnz
xchg
test
loop
adc
shl
push
dec
cld
and
mov
inc
ins
add
push
xchg
inc
stos
adc
push
pop
dec
int3
mov
rcr
push
ret
pop
pop
mov
xchg
ret
shl
dec
and
push
sbb
lods
adc
test
cdq
adc
or
xor
push
ja
xchg
dec
inc
mov
sub
jecxz
shl
fld
ja
sub
loop
cmp
sub
pop
pop
jl
or
dec
cmp
rol
xor
mov
push
xor
nop
hlt
sub
inc
dec
mov
sbb
sub
add
pusha
lea
mov
jne
cmps
enter
inc
adc
xchg
test
fsqrt
add
sbb
int3
add
mov
add
or
dec
pusha
and
test
mov
stos
pusha
movs
push
push
mov
nop
jp
jo
outs
xchg
jb
inc
in
adc
les
xor
jo
ffreep
mov
jl
or
ins
ds
dec
mov
hlt
call
adc
xchg
(bad)
pop
dec
les
out
push
fadd
rol
inc
inc
push
pop
pop
nop
loopne
retf
daa
push
mov
dec
cmp
in
cmp
jnp
or
push
out
rcl
jne
loopne
daa
outs
sbb
or
stc
add
xor
test
test
outs
dec
jae
stc
loop
mov
imul
dec
and
fld
sbb
ds
sub
cmp
mov
dec
add
mov
pop
imul
push
dec
pop
hlt
stos
cwde
mov
jnp
sub
sbb
adc
(bad)
add
pop
add
cdq
adc
mov
or
inc
sub
adc
or
cmp
or
or
cmps
xchg
mov
shl
and
dec
pop
sahf
std
dec
pushf
mov
test
mov
mov
and
lock
ds
dec
mov
enter
enter
adc
ins
inc
mov
leave
(bad)
or
push
ret
push
jae
mov
fisubr
stc
jae
pusha
xlat
adc
xor
out
dec
mov
adc
add
jmp
cs
add
sub
lds
pop
das
add
xor
push
js
add
fiadd
cmp
adc
push
sub
jmp
mov
jb
inc
in
add
or
pop
dec
inc
test
ficomp
push
xor
mov
jae
dec
xor
enter
push
pop
xlat
add
lock
sbb
cmps
ins
inc
push
mov
push
sbb
or
adc
add
adc
mov
xchg
pop
add
jmp
dec
xchg
fcmovbe
ins
dec
xor
imul
icebp
cmp
adc
sbb
ds
xor
or
push
(bad)
mov
je
jecxz
and
sar
sbb
pop
lea
shl
add
inc
out
push
rcr
ret
ficom
mov
fdiv
inc
fld
and
or
dec
jnp
es
or
add
mov
shr
mov
ins
(bad)
repz
add
dec
xchg
pop
jle
push
mov
jo
or
add
je
pusha
(bad)
cmp
or
call
sbb
pop
push
xchg
jo
adc
sbb
dec
fimul
(bad)
sbb
adc
adc
or
mov
loopne
adc
mov
sub
pop
leave
adc
or
adc
push
(bad)
sub
add
lea
add
xchg
push
mov
or
add
test
movs
int
js
jp
movs
xor
jl
retf
rcr
jmp
outs
push
xor
add
push
jp
ret
cs
and
ins
sub
push
adc
loop
pusha
popf
jne
fnstsw
add
les
push
pop
push
pop
mov
ss
push
nop
jno
sbb
xchg
xor
xor
in
cmp
or
push
and
mov
ror
ss
dec
or
rcl
pop
or
imul
or
retf
adc
ret
or
ret
movs
out
xlat
fxsave
movs
xchg
je
sbb
es
pushf
cmp
add
or
sahf
cwde
dec
lds
push
lea
add
inc
sub
retf
mov
and
jecxz
ds
or
aam
lock
add
fimul
sub
and
jbe
push
add
sub
inc
cmp
pop
je
in
xchg
data16
inc
add
xor
dec
jb
push
jbe
or
aas
or
shl
(bad)
shl
or
ins
neg
pop
lea
pop
or
dec
cmovae
jbe
dec
cmp
aad
call
test
mov
mov
mov
jmp
push
in
or
cwde
rol
dec
push
push
mov
add
scas
into
xor
cwde
fdivr
cmp
push
cmc
push
mov
cmp
in
daa
sbb
mov
daa
adc
xchg
pop
mov
je
jne
stos
(bad)
out
jnp
sbb
or
(bad)
mov
pop
adc
in
in
xor
movs
push
xor
push
add
xchg
mov
lock
xor
ret
or
push
add
cmp
js
jp
sub
mov
xor
xchg
movs
ror
(bad)
sbb
cld
or
mov
xor
xor
int3
pushf
xor
add
jo
jp
jns
sub
add
lea
sbb
call
jmp
adc
sub
add
call
mov
lods
add
and
mov
sbb
lock
mov
add
sub
push
les
sub
or
and
xor
into
add
push
mov
aas
dec
mov
inc
scas
push
sub
mov
xchg
nop
xchg
adc
aam
inc
imul
fcom
adc
dec
mul
fs
dec
sub
(bad)
aas
or
in
bndldx
jl
push
lea
daa
and
test
sbb
in
inc
sbb
jge
and
fs
pop
adc
cwde
cld
xor
ror
or
inc
lahf
mov
xchg
inc
cmps
out
popa
ins
push
stos
add
push
lods
popf
(bad)
and
xchg
pop
dec
lock
sbb
add
nop
push
aam
mov
sbb
adc
pop
mov
push
xchg
adc
push
cmps
(bad)
mul
mov
hlt
dec
push
jae
push
xor
jno
sbb
in
inc
cmp
jg
rol
daa
mov
mov
mov
pop
mov
push
push
shl
fidivr
aas
sub
in
pushf
or
imul
and
inc
js
jle
or
and
popf
ds
iret
push
ins
push
dec
xchg
jno
gs
push
test
or
xchg
push
mov
add
push
jb
or
mov
adc
adc
in
push
mov
loop
dec
ins
jne
jg
mov
sub
add
sar
rcl
cmps
sbb
imul
push
dec
or
inc
sbb
mov
or
or
mov
gs
imul
cmps
cmp
cmp
push
mov
push
add
or
call
(bad)
les
xchg
cmp
or
lods
mov
push
fcomp
ret
inc
and
dec
xchg
or
mov
mov
fwait
aaa
dec
add
sub
cld
xor
add
dec
inc
fst
adc
add
fnstenv
loopne
lea
push
adc
and
mov
test
aaa
fcomi
jb
fisub
pop
cmps
xor
cmp
push
pop
add
sub
pop
and
adc
sti
xor
sbb
loopne
ss
into
loop
or
ficom
add
cwde
mov
nop
lods
ret
push
mov
dec
mov
cmp
inc
mov
or
inc
outs
fld
cmp
cdq
xor
loop
out
and
mov
pop
das
xchg
aad
rcr
add
and
push
or
mov
outs
enter
stos
add
(bad)
adc
out
xor
mov
add
pusha
mov
out
xor
inc
aad
and
adc
xor
and
mov
pop
call
cmp
shr
ror
and
sbb
sbb
je
or
adc
push
sbb
xor
xor
adc
stos
neg
sbb
outs
rcl
xor
dec
add
sbb
scas
sub
(bad)
retf
xchg
je
cmp
scas
sbb
sbb
sub
xor
adc
push
inc
dec
pusha
or
cmps
fidivr
test
stc
dec
sbb
push
inc
bound
inc
call
inc
jmp
inc
das
lock
mov
out
or
je
push
fld
aaa
leave
jmp
sub
hlt
ret
loope
push
ret
sub
adc
xchg
add
mov
inc
rcl
sbb
(bad)
xchg
add
pop
test
add
or
push
(bad)
cmp
xchg
mov
sbb
jl
call
ss
ret
xchg
mov
sub
leave
rol
ss
jbe
push
and
sbb
scas
inc
(bad)
and
in
in
cmp
xlat
or
call
adc
sub
test
inc
cmc
push
add
xchg
rol
pop
mov
inc
adc
inc
add
or
test
push
imul
pop
int3
sbb
stc
inc
cmp
lock
add
push
mov
jle
dec
cmp
fisub
(bad)
fisttp
test
push
jl
arpl
mov
mov
cmp
pop
popa
and
sub
lods
fwait
sub
adc
fsubr
xchg
iret
inc
sbb
fwait
jge
retf
push
and
jno
add
shl
(bad)
fsub
inc
sar
sub
cmp
call
clc
cs
and
inc
xchg
cmp
xlat
jmp
test
es
sbb
and
pop
jb
lods
in
popf
jne
jmp
ret
aas
adc
int3
call
(bad)
adc
fadd
les
sbb
idiv
in
std
arpl
add
add
rcr
xor
or
push
or
rcl
mov
rol
ins
mov
xor
xor
nop
and
fimul
jbe
push
femms
or
xchg
retf
cmp
adc
iret
sbb
mov
and
cmp
sbb
xchg
mov
xchg
add
rcr
adc
sbb
or
in
outs
test
ret
xchg
mov
sub
pop
adc
rcr
sbb
inc
push
inc
adc
mov
or
jo
add
adc
xchg
and
lea
and
sbb
mov
cmp
pop
ret
ret
les
test
test
dec
test
mov
add
add
or
xchg
inc
jge
xchg
loopne
lock
popa
mov
cmc
out
mov
inc
adc
mov
and
(bad)
(bad)
adc
mov
and
and
enter
out
mov
pop
and
mov
mov
mov
or
cmps
push
jge
data16
aam
add
test
rcl
ds
clc
add
or
and
fs
outs
adc
aaa
sub
dec
jno
dec
add
inc
and
xchg
or
lea
sbb
sbb
inc
popf
call
rol
jl
or
and
and
dec
mov
dec
jge
adc
jg
xor
cdq
idiv
mov
lea
mov
cmp
loopne
out
imul
dec
(bad)
dec
jb
in
push
xchg
xor
mov
shl
fs
cwde
add
inc
movs
stc
fdivp
xchg
mov
xor
scas
enter
xchg
inc
sub
mov
mov
call
adc
mov
sub
or
fdivr
inc
xor
cmp
xchg
or
add
sbb
sub
pop
jns
cmc
ret
sub
adc
cwde
(bad)
or
jmp
sbb
push
xor
jle
pop
(bad)
ja
push
cmp
cmp
push
mov
mov
add
inc
pop
shl
(bad)
repnz
pop
dec
sub
mov
add
inc
popf
addr16
retf
repz
and
mov
add
jb
push
sbb
dec
add
sub
lea
xchg
fidivr
sub
sbb
push
fs
jge
push
mov
xor
and
add
je
jmp
je
aam
xor
fs
inc
add
sbb
enter
xchg
inc
cmps
ror
idiv
dec
adc
je
adc
rol
sub
and
jne
xlat
inc
adc
jnp
mov
sub
sbb
dec
scas
adc
cmps
xor
add
or
mov
outs
(bad)
adc
mov
and
adc
jecxz
pop
pushf
add
and
test
mov
jae
ja
push
pop
ins
push
(bad)
clc
xor
pop
mov
test
pop
sub
pop
inc
dec
mov
jb
fidiv
sub
pusha
adc
js
jg
xor
dec
jo
stos
adc
lock
adc
sub
cwde
mov
adc
pusha
jl
xchg
nop
fdivr
mov
rcl
mov
mov
pop
add
add
mov
imul
inc
fldenv
adc
fisubr
fmul
pop
cmp
mov
aas
sti
lods
push
mov
dec
push
jmp
cmp
scas
ss
inc
in
cmps
movs
stc
test
or
retf
dec
sbb
call
add
sti
xchg
fs
ins
fmul
arpl
sbb
stc
or
add
cmp
jno
inc
daa
fs
adc
dec
xor
retf
jmp
or
and
and
pusha
jge
(bad)
and
mov
xchg
pop
or
dec
jnp
sbb
inc
or
mov
dec
dec
mov
xor
test
inc
inc
stc
push
ins
xchg
and
and
imul
outs
lods
and
rcl
sub
sub
jo
inc
test
mov
sbb
inc
add
xor
jbe
stos
inc
test
mov
or
xor
(bad)
fcmovu
clc
sbb
lock
and
dec
es
fild
(bad)
hlt
pop
sar
push
repnz
sub
test
push
je
rol
(bad)
lds
sbb
inc
jl
ror
adc
inc
icebp
outs
mul
jmp
pop
mov
pusha
xor
push
test
aaa
aam
pop
xchg
or
test
sbb
push
push
adc
add
xchg
lods
and
ds
push
push
pusha
sub
loope
and
or
sub
lods
mov
popa
xor
or
shr
imul
cmc
cmps
pop
ins
and
or
cmp
imul
jo
ds
dec
or
xchg
mov
add
ret
arpl
js
je
fisttp
fwait
jl
fcmovbe
lea
push
push
das
aaa
add
xor
hlt
push
xor
dec
dec
call
adc
mov
xchg
sbb
clc
sbb
mov
in
jmp
or
dec
pop
pop
stc
and
mov
jle
lock
bound
out
xchg
or
stos
movs
jb
inc
inc
mov
rol
jmp
add
adc
aam
call
loop
ror
jle
lock
push
(bad)
xchg
pop
add
add
jl
hlt
cmp
clc
mov
inc
jmp
les
cmp
rol
mov
or
push
pinsrw
lds
cmp
sahf
lock
cmp
pop
jns
push
or
add
mov
std
adc
or
push
call
or
in
mov
ficom
xchg
pusha
or
inc
xor
in
sub
call
aas
fsub
es
nop
ja
xor
mov
push
fs
call
movs
pop
sub
mov
pop
jno
and
cmp
push
or
push
dec
jg
pop
js
cmps
ja
pop
mov
jecxz
stc
add
inc
call
add
mov
icebp
xchg
and
dec
xor
sub
(bad)
cdq
add
inc
add
inc
inc
mov
jl
xchg
mov
retf
or
adc
loopne
(bad)
retf
sbb
jns
cld
pop
or
mov
xor
gs
fsub
pop
xlat
mov
ins
cmp
push
dec
sbb
mov
inc
xor
repz
or
sbb
cmp
mov
fldcw
dec
push
shl
and
cmp
mov
jne
sbb
xor
fcom
inc
scas
pop
div
rcr
sahf
scas
idiv
into
es
jnp
add
mov
pop
gs
or
adc
adc
pop
xor
pop
stos
or
xchg
push
pop
jno
test
stos
jnp
pusha
or
dec
and
xchg
or
or
sti
fiadd
aaa
imul
cmp
or
and
mov
add
movd
jne
sbb
mov
push
or
mov
mov
outs
imul
dec
push
inc
mov
push
push
(bad)
or
pushf
adc
push
lods
inc
es
jmp
add
push
adc
push
sahf
add
jmp
mov
jl
dec
adc
add
(bad)
xchg
xor
push
push
repnz
retf
je
or
push
xchg
mov
push
pop
or
or
ucomiss
mov
mov
sbb
or
nop
in
or
and
inc
loope
adc
mov
cs
mov
mov
and
pop
imul
stos
pop
mov
shl
pop
adc
push
sub
adc
dec
or
push
out
xchg
lods
jo
push
adc
lods
mov
sbb
test
sub
cmps
sub
sbb
jmp
or
sbb
retf
xor
sbb
jp
ror
xor
push
mov
xor
jo
pop
push
add
jp
loopne
dec
rol
xchg
jle
call
and
ret
ret
and
shl
mov
adc
push
sub
add
js
push
pop
add
mov
sbb
push
sub
add
sub
push
les
mov
and
fcom
lods
rol
out
and
movs
push
sbb
into
xchg
push
mov
xchg
test
shl
(bad)
int
cld
or
pop
or
mov
aam
add
mov
add
xor
inc
clc
iret
std
fwait
ret
add
or
add
and
mov
lods
psubusw
jne
or
jp
push
xor
data16
scas
xor
rcr
and
call
mov
dec
sbb
ret
add
shr
je
fild
aad
push
dec
sahf
cmp
(bad)
adc
xchg
dec
call
int
pop
sahf
or
dec
adc
pop
sar
fmul
add
jl
mov
mov
daa
neg
lock
add
or
das
sbb
mov
inc
aaa
sub
add
adc
movs
pmaddwd
xchg
adc
adc
test
inc
and
cwde
push
mov
std
xchg
sbb
loopne
dec
fwait
loopne
add
sub
not
xlat
lods
jae
lock
ret
jbe
pop
add
test
dec
jae
test
mov
neg
and
push
test
xlat
or
(bad)
test
addr16
sub
test
push
ja
fsub
mov
jl
outs
inc
cmp
adc
fimul
adc
push
sbb
or
sti
and
push
cwde
cmp
or
test
sub
popf
jns
fisttp
pop
(bad)
mov
les
mov
mov
adc
ja
ja
mov
or
imul
ret
pusha
sbb
nop
and
and
cmp
mov
call
mov
lahf
loopne
cmp
adc
and
mov
lds
js
pop
in
jo
add
xchg
pop
sahf
sbb
lods
mov
and
aaa
mov
dec
mov
inc
test
jp
inc
shl
or
enter
push
rol
and
and
inc
aad
test
test
jmp
loope
ds
sbb
pop
leave
fwait
sbb
and
or
cmc
adc
mov
loopne
jg
inc
pop
fwait
jmp
idiv
jno
scas
xor
cmp
cmp
test
imul
sbb
xchg
mov
inc
pop
xchg
sbb
cmp
ss
cwde
mov
cmp
in
ins
imul
or
sbb
xchg
loope
adc
repnz
inc
sti
jle
je
inc
and
stos
aam
es
repz
movs
xchg
mov
add
or
xchg
xchg
mov
pop
call
mov
mov
sub
or
cmps
mov
call
pop
ja
and
shl
dec
fmul
add
mov
outs
xor
mov
ret
push
or
add
movs
or
pop
rcl
inc
aam
jge
mov
and
or
or
pop
jbe
xlat
lods
ror
dec
(bad)
in
out
sbb
popa
mov
or
dec
push
jmp
push
sub
sbb
shl
test
or
fisttp
push
inc
xchg
pusha
inc
xchg
mov
(bad)
push
push
cmp
xchg
sub
(bad)
es
ret
gs
push
bound
sub
pop
push
arpl
cmp
add
adc
mov
and
pushf
and
inc
push
xchg
push
and
adc
jns
cmp
cmp
sbb
add
mov
inc
adc
cmp
jne
cmp
jne
test
sub
sbb
jne
pop
mov
sub
add
push
aam
add
xchg
rcl
push
adc
or
in
lds
clc
cmc
ret
out
pusha
outs
add
push
jmp
jmp
imul
xor
xor
cld
pop
int
dec
out
or
or
jne
imul
mov
jb
cmp
adc
jns
and
xchg
ja
push
mov
fadd
imul
ja
push
sub
or
dec
shl
sbb
pop
mov
jno
or
inc
loope
push
sbb
jmp
xor
imul
mov
and
addr16
clc
sahf
push
ja
push
inc
sbb
sbb
pop
jmp
or
test
cmp
xor
xchg
mov
fdiv
fdivr
loop
mov
je
adc
mov
sbb
outs
sbb
test
pop
pusha
mov
mov
dec
mov
sbb
push
adc
hlt
add
or
out
inc
add
mov
fldenv
adc
in
and
ret
sbb
inc
pusha
sub
arpl
(bad)
mov
mov
push
das
fs
cmp
enter
xor
(bad)
jmp
cmp
adc
add
xor
jle
mov
sub
test
add
das
or
popa
sbb
dec
dec
or
sbb
lock
or
sbb
xor
inc
data16
inc
mov
mov
inc
(bad)
sub
ins
jb
dec
inc
add
loop
or
sbb
nop
add
mov
sbb
aam
add
adc
int3
nop
adc
push
sahf
cmp
and
or
push
(bad)
or
test
ficomp
int
in
inc
mov
mov
lods
jno
aam
inc
pop
add
mov
repnz
push
int
push
sub
inc
push
rol
lock
cmp
inc
imul
add
ror
in
pop
imul
stos
add
or
pcmpgtd
dec
add
loope
ret
fisttp
daa
push
xor
push
cmp
and
rol
adc
hlt
sub
mov
pop
cmp
dec
or
jno
push
pusha
ret
pop
or
sub
shr
jno
sbb
shl
leave
push
xor
jo
cmp
std
pop
mov
std
dec
cmps
mov
neg
push
mov
mov
pop
sub
push
dec
jge
ret
pop
add
add
ret
fnstsw
mov
rol
cmp
mov
retf
in
rol
leavew
mov
js
push
add
mov
xchg
scas
mov
and
je
aaa
dec
iret
inc
repnz
adc
adc
rcr
mov
fist
jae
xor
aad
mov
enter
or
mov
adc
gs
sbb
pop
jmp
sahf
or
sub
cmp
loop
and
dec
inc
cmp
rdpmc
fist
and
(bad)
scas
inc
mov
push
iret
mov
or
and
mov
enter
nop
add
dec
adc
imul
rcl
dec
ja
jbe
add
cmp
add
nop
mov
pop
or
hlt
mov
aam
or
dec
adc
fld
rol
mov
pop
out
mov
push
or
pop
loopne
pusha
mov
xchg
sub
jo
xchg
cmp
pop
daa
call
push
and
adc
and
and
push
ds
inc
add
or
or
or
add
inc
js
and
and
lahf
mov
js
fiadd
mov
adc
mov
add
inc
sbb
dec
test
push
or
or
add
fcom
add
in
or
test
inc
adc
adc
push
js
add
cwde
sbb
out
push
mov
sub
xchg
pop
ror
cmp
mov
xor
and
addr16
int
dec
scas
push
cmps
xor
add
add
inc
pusha
push
scas
add
mov
imul
pop
(bad)
pop
mov
xor
sbb
sbb
add
rol
ror
fst
scas
push
push
pop
test
leave
or
cmp
imul
jl
xchg
pop
mov
mov
mov
retf
cmp
imul
jae
add
mov
add
mov
mov
loop
test
inc
or
add
jbe
shl
dec
aam
(bad)
cld
jl
mov
push
push
je
dec
jne
jae
cdq
jne
hlt
pop
or
les
mov
neg
jmp
pop
pop
adc
call
mov
in
mov
mov
mov
imul
sub
mov
les
and
jae
mov
stos
int3
push
adc
psubsb
xlat
ret
outs
out
add
nop
retf
iret
xor
mov
movs
dec
and
pop
and
ins
jle
sbb
ds
push
adc
mov
inc
mov
in
jmp
or
aaa
adc
xchg
movs
(bad)
es
push
test
lods
pop
and
xchg
test
mov
and
push
xor
cmc
mov
add
or
mov
xor
add
fwait
(bad)
out
add
jmp
call
cmp
mov
dec
cmp
inc
add
ud1
cmps
or
push
dec
rol
lahf
mov
inc
sub
(bad)
mov
xchg
sbb
lock
icebp
stos
cmc
inc
xor
loopne
test
aas
push
mov
pop
xor
(bad)
dec
adc
or
xchg
movs
ret
inc
add
and
cmp
je
xchg
ret
or
mov
cwde
or
push
mov
jg
add
adc
adc
test
jmp
aam
jmp
fbld
push
ret
idiv
adc
jo
test
pop
jne
dec
push
ss
mov
or
ss
adc
jp
jmp
adc
or
ret
dec
xor
cdq
xchg
xor
rcr
mov
sub
cmp
add
or
test
loopne
inc
adc
sub
fsub
xchg
xor
aam
push
ror
cmp
and
daa
dec
add
pop
jmp
repnz
jp
cmp
push
loopne
call
ret
ffreep
cmp
push
xchg
and
imul
pop
rcr
add
lds
cmp
push
iret
ss
mov
add
fild
add
test
lods
sbb
ins
xchg
xchg
clc
cmps
and
push
movs
stos
adc
xor
stos
add
inc
sub
(bad)
adc
cmp
int3
jne
js
and
or
pop
dec
mov
adc
ret
(bad)
adc
adc
add
out
or
jp
pop
push
fadd
rcr
xchg
add
cmps
mov
clc
or
mov
fadd
les
lahf
fdiv
imul
cmps
mov
call
xor
dec
fcomp
push
int3
inc
(bad)
imul
or
addr16
mov
leave
adc
test
adc
push
jbe
or
outs
dec
add
lods
and
inc
mov
out
add
push
dec
sub
(bad)
shl
lea
cmp
inc
enter
mov
cmp
mov
sbb
push
cmp
dec
mov
dec
add
test
jo
xor
push
in
jne
mov
cmp
xchg
lock
adc
and
mov
add
std
pop
adc
or
sbb
dec
push
les
push
pop
mov
add
xor
push
xchg
inc
sub
jp
out
clc
fdivr
inc
fstp
mov
push
(bad)
loopne
rol
or
add
dec
xor
in
push
and
xor
int
jnp
add
or
or
or
data16
arpl
lea
movs
adc
add
sbb
jp
adc
add
dec
iret
out
sbb
nop
test
aam
adc
into
cs
add
popa
ins
arpl
cli
or
adc
in
push
add
add
icebp
imul
sti
or
push
hlt
dec
cmc
add
mov
xchg
out
xor
ds
mov
or
int3
add
lods
mov
icebp
pop
lods
movs
add
adc
xchg
imul
mov
or
xchg
dec
cmp
and
or
test
push
(bad)
jmp
ds
(bad)
and
ins
jo
sbb
test
sti
or
add
imul
xor
add
xor
push
sub
and
mov
mov
jmp
jnp
shl
mov
test
inc
push
pop
cli
adc
adc
test
mov
aaa
push
rcl
cs
and
in
mov
add
or
mov
mov
cmp
push
or
add
pop
in
dec
addr16
pushf
loop
scas
mov
and
jns
inc
pop
mov
push
cld
neg
test
adc
adc
aaa
cdq
sbb
and
fmul
xor
inc
push
adc
(bad)
popa
jae
and
shl
outs
jne
mov
ror
jno
mov
daa
lods
and
loop
(bad)
fcomp
pop
rol
jne
mov
fmul
adc
fnstsw
mov
imul
sbb
sbb
inc
mov
add
sbb
inc
and
pop
xchg
push
inc
js
imul
adc
sbb
mov
jo
mov
mov
push
and
sbb
fdivr
cmovns
pop
sub
in
push
aam
push
into
inc
adc
and
xor
or
scas
or
push
movs
(bad)
mov
mov
jo
mov
push
lods
sbb
push
call
and
cwde
das
ins
sti
jo
push
or
add
jle
and
adc
inc
not
add
xor
retf
sbb
mov
icebp
inc
adc
rcl
loopne
shl
xchg
movs
icebp
ss
dec
js
rol
test
dec
mov
sub
adc
dec
ror
clc
loope
sbb
fldenv
xchg
and
outs
aas
cmp
sar
adc
movs
cmp
ja
test
mov
add
(bad)
jmp
sbb
dec
sbb
or
cmovne
popa
or
mov
cli
test
jmp
jmp
jmp
lea
inc
mov
pop
mov
aad
inc
enter
rcr
xor
and
mov
xor
retf
sbb
popa
adc
xchg
cmp
sbb
icebp
and
dec
repnz
xchg
mov
retf
(bad)
in
pop
inc
cmp
inc
mov
cmp
in
add
(bad)
aad
inc
sub
mov
or
iret
enter
mov
add
mov
mov
or
xlat
rcr
pop
sub
add
and
(bad)
cmps
push
pop
sub
mov
mov
leave
dec
sahf
outs
push
inc
push
jle
cmp
shr
loope
push
sbb
inc
clc
sbb
xor
scas
pop
fld
and
add
cmp
push
hlt
inc
sbb
mov
dec
pop
inc
ins
add
dec
dec
or
sbb
mov
es
pop
loope
arpl
(bad)
lods
xor
sti
sub
pop
shl
test
push
jbe
sbb
loop
dec
cmps
xor
sbb
xchg
rol
pop
dec
xchg
mov
inc
mov
mov
cdq
xchg
push
push
pop
clc
dec
mov
ja
jecxz
ror
push
test
inc
movs
add
stos
neg
mov
inc
daa
or
push
dec
cmp
add
sub
bound
imul
mov
inc
data16
ja
add
push
or
or
xor
pandn
xor
add
add
(bad)
xchg
xor
push
fimul
nop
adc
div
adc
xor
xchg
neg
dec
or
not
cmp
sub
cmp
pop
cli
call
inc
inc
neg
mov
ror
enter
inc
sub
(bad)
pop
mov
mov
arpl
jl
jl
sti
cmp
xor
js
inc
inc
leave
add
ret
mov
je
cmp
jp
push
xlat
repnz
or
nop
pop
push
push
xchg
cmp
or
ins
data16
add
pop
pop
rol
or
iret
or
cmp
lock
xor
shr
sub
jo
fidivr
pop
mov
mov
shr
dec
jns
fiadd
adc
inc
shl
inc
stos
and
lea
push
ins
jp
mov
and
push
nop
fld
adc
and
adc
outs
adc
jl
inc
or
ins
test
dec
adc
and
mov
inc
bound
xchg
and
hlt
ret
popf
xlat
sbb
ds
lea
xchg
xchg
stos
inc
sub
push
pop
dec
mov
add
call
push
test
adc
aam
add
sub
shr
pop
loope
shl
add
mov
mov
or
xor
adc
jbe
add
push
or
push
(bad)
sub
and
add
gs
xchg
les
cmp
sbb
xor
xor
mov
or
adc
fs
add
pop
cmp
push
jp
xlat
jo
loop
mov
lock
xlat
test
fld
loope
fdiv
mov
out
cmp
sti
test
push
cmp
adc
pop
sub
enter
outs
pop
sbb
jnp
xor
or
sub
mov
push
inc
jne
sbb
or
daa
sbb
adc
es
add
shl
pusha
adc
and
mov
or
scas
inc
add
jg
retf
movs
sbb
adc
scas
lock
mov
les
xchg
inc
iret
dec
mov
aam
movhps
mov
pop
dec
lock
add
pop
clc
sub
aam
xchg
and
add
int
ja
mov
daa
cmp
nop
hlt
mov
movzx
add
mov
movs
lods
popa
shl
push
aas
jmp
add
xlat
gs
dec
inc
inc
push
dec
pusha
test
xlat
mov
loopne
add
xor
loop
dec
and
movs
daa
js
ss
add
pop
pusha
dec
loop
inc
pushf
jge
call
inc
sub
cmp
push
add
test
xchg
mov
call
es
pop
(bad)
inc
jnp
and
fisttp
(bad)
mov
loopne
test
mov
cmp
lea
jge
adc
push
cmp
push
or
dec
cld
jle
sub
xchg
dec
xchg
dec
in
or
shl
push
xchg
mov
mov
dec
xchg
add
dec
sbb
adc
push
dec
mov
xor
and
jl
cmp
jg
mov
push
sbb
push
sub
pop
jle
movs
xor
clc
push
and
std
mov
pop
sub
sbb
inc
inc
xor
xchg
push
sbb
sar
xor
push
push
push
or
aaa
dec
pop
xchg
cwde
hlt
inc
sbb
loopne
or
adc
adc
push
jb
outs
jmp
jp
mov
add
out
or
lods
inc
dec
inc
cmp
pop
sub
adc
sbb
cmovne
lock
dec
pop
(bad)
mov
mov
or
and
push
mov
mov
aam
outs
sar
xchg
jno
aad
test
aas
retf
add
fwait
or
adc
mov
add
mov
and
les
mov
add
and
mov
pop
dec
push
stc
cmp
mov
dec
inc
xchg
mov
in
add
ret
xchg
gs
dec
sbb
or
add
jge
adc
or
test
add
inc
daa
push
cmps
inc
dec
xchg
jb
sub
lods
cwde
pop
cmp
adc
icebp
dec
pop
jo
out
add
stc
push
or
jne
call
cmp
into
jae
pop
jecxz
inc
mov
xlat
add
dec
or
out
xchg
mov
jl
pop
mov
sbb
pop
cmps
pop
ret
sub
inc
xchg
in
test
sbb
xchg
sbb
adc
dec
xchg
add
or
mov
aas
sbb
add
fimul
cmp
add
mov
jmp
jle
pop
xchg
jb
cdq
jle
push
and
cmps
mov
or
inc
jl
push
icebp
dec
add
and
sub
or
rol
aas
sbb
push
hlt
sub
push
addr16
scas
int3
or
test
jmp
mov
xchg
push
and
jmp
dec
rol
movs
stos
(bad)
fdivr
pop
jbe
imul
in
mov
mov
es
xor
jbe
add
stc
adc
or
add
lods
and
push
push
xor
sbb
and
mov
add
cld
or
shr
adc
(bad)
ins
movs
pop
rol
addr16
adc
adc
or
add
std
jne
sub
or
jmp
inc
adc
popa
add
xchg
daa
sub
std
add
pop
(bad)
or
or
(bad)
adc
push
ret
or
mov
or
popa
pop
xor
dec
and
or
mov
xor
push
or
popf
retf
(bad)
cmp
inc
xchg
or
mov
cli
sub
dec
jmp
inc
mov
mov
jbe
pop
and
sahf
add
fwait
add
adc
add
(bad)
icebp
popa
adc
or
sbb
add
cmp
leave
add
inc
loope
retf
dec
fcom
add
shl
nop
dec
mov
mov
add
add
or
cmp
sub
imul
lds
inc
or
or
pop
leave
and
xchg
inc
fs
push
or
adc
and
repz
xchg
mov
adc
add
mov
sub
aam
sbb
imul
mov
rcr
movs
cmps
inc
push
cmp
or
xchg
ss
popf
jbe
cld
or
or
shl
push
or
mov
adc
cmp
add
jmp
inc
imul
xchg
push
bound
jecxz
dec
adc
lds
pop
push
inc
jmp
outs
repnz
ds
fld
icebp
es
cmp
add
fstp
cmc
int3
out
je
rcr
dec
push
stos
pop
or
adc
xchg
mov
sbb
adc
hlt
adc
push
dec
adc
pop
sbb
xchg
xchg
push
fcom
adc
add
or
mov
int3
shl
ins
xor
adc
enter
mov
mov
dec
sbb
adc
rcl
or
rcl
mov
inc
add
xor
and
mov
sbb
mov
jnp
mov
mov
inc
sub
ja
pusha
sbb
push
arpl
test
arpl
stc
inc
sbb
add
pop
adc
push
add
add
gs
mov
imul
sti
call
shl
or
inc
adc
adc
or
adc
or
pop
adc
or
aam
pop
or
mov
adc
sti
ret
in
and
push
fcmove
inc
sub
dec
adc
pushf
push
sub
sar
sbb
loopne
fs
xor
ret
jns
push
add
adc
jmp
enter
or
add
jp
push
imul
xor
mov
fisttp
cmp
push
mov
inc
mov
fs
outs
or
and
cmc
pop
sbb
dec
pop
jmp
mov
pop
dec
dec
arpl
hlt
xor
jmp
fwait
lods
inc
dec
add
popa
fcomp
call
jl
or
mov
push
mov
push
mov
cmp
imul
in
and
leave
aas
inc
icebp
pop
inc
mov
aas
icebp
dec
je
mov
mov
lahf
fcom
data16
ror
or
(bad)
push
ret
jle
(bad)
mov
pop
les
inc
arpl
sbb
and
xchg
js
jb
mov
clc
stc
pop
mov
dec
cmp
and
fadd
mov
xchg
std
xor
bound
arpl
je
ret
add
jmp
add
pop
xor
and
inc
xor
xor
mov
jo
mov
mov
ror
sar
xor
outs
or
mov
fsubr
adc
mov
mov
fcmovu
xchg
or
xchg
pop
jmp
mov
mov
fst
jae
pop
cs
cmps
fsubr
xor
mov
cmp
jb
or
jae
dec
jmp
fsubr
js
cmp
mov
push
adc
outs
cmp
cmc
inc
inc
popa
add
clc
pop
jmp
or
add
inc
sbb
push
add
dec
jmp
sbb
fidiv
idiv
cmp
pop
dec
sbb
mov
pop
in
push
or
inc
adc
inc
inc
test
pop
adc
(bad)
mov
adc
cmp
dec
xor
ror
push
int3
scas
ret
pop
push
xchg
adc
ret
pop
test
ja
ja
add
jb
iret
xchg
jns
mov
loopne
addr16
mov
sbb
cmp
mov
dec
inc
pop
and
mov
cwde
jmp
mov
retf
pop
test
sub
mov
dec
movs
push
adc
shr
inc
xchg
inc
add
iret
push
sub
mov
mov
lds
ja
dec
(bad)
movs
ds
pusha
adc
es
inc
sbb
pop
sbb
mov
or
je
and
cmps
push
adc
and
adc
adc
and
sbb
daa
or
je
dec
and
pop
adc
push
mov
sub
sbb
or
cmp
adc
push
and
sub
popw
add
cmp
test
push
bound
push
test
fimul
mov
xchg
adc
cmp
ja
push
mov
push
mov
xchg
cli
add
ror
jo
ficomp
and
mov
inc
jecxz
sbb
mov
sti
cmp
cld
pushf
pop
sbb
or
out
scas
push
adc
(bad)
lahf
mov
stos
push
xchg
or
push
pop
cmp
(bad)
mov
or
cmp
mov
mov
push
es
leave
jae
retf
cmp
lods
data16
or
mov
inc
call
add
dec
es
mov
popf
dec
adc
ins
movs
push
inc
xchg
dec
mov
sub
mov
mov
push
or
ret
mov
push
adc
idiv
cmp
adc
cmc
lea
dec
fimul
bswap
lods
xchg
scas
push
xor
popa
cmc
fisub
mov
add
xchg
sub
sbb
pop
push
jne
push
lahf
popa
push
and
leave
adc
(bad)
aaa
lock
adc
ds
dec
inc
and
lds
add
popf
aam
fwait
add
sbb
rol
jne
mov
or
imul
mov
pop
push
sbb
sub
dec
and
imul
adc
daa
mov
pop
pop
sbb
mov
jb
das
fsubr
pop
ror
pop
les
push
inc
jbe
sbb
dec
adc
adc
adc
or
cmp
jp
lds
test
je
mov
sub
or
mov
addr16
pop
cmp
inc
not
inc
mov
mov
sbb
inc
push
sub
jle
or
mov
dec
or
push
sbb
cmp
lock
mov
or
mov
add
sbb
or
sbb
movs
adc
rcl
pop
pusha
call
mov
jb
mov
mov
jmp
mov
mov
inc
adc
lock
inc
push
push
(bad)
imul
mov
xor
jbe
mov
cld
int
dec
(bad)
cdq
scas
lods
ja
sub
repnz
sbb
pop
add
sar
mov
cmp
and
push
mov
xchg
sbb
cmp
movs
into
shl
(bad)
icebp
xor
xor
adc
fadd
mov
sub
lahf
push
add
ins
or
sub
adc
dec
inc
pop
jnp
hlt
pop
adc
fisttp
movs
xchg
inc
mov
pop
xchg
dec
pop
dec
in
or
sbb
mov
mov
sub
sbb
xor
push
sub
lahf
cmp
xor
dec
pop
mov
(bad)
dec
mov
mov
jo
add
jb
cmp
xchg
ja
and
pop
dec
jp
and
and
or
ret
xor
inc
mov
inc
jmp
cmp
ds
push
cmp
lea
aaa
mov
adc
cmp
push
inc
stc
xor
cmc
xchg
push
(bad)
mov
cmp
cmc
cmp
xchg
loop
jbe
cmc
mov
sbb
and
movs
pop
mov
jg
mov
shl
js
jbe
fadd
je
imul
sahf
in
mov
or
jl
and
movs
test
sub
sub
mov
or
shrd
hlt
lods
pop
inc
pop
mov
or
outs
xor
mov
add
in
sbb
sbb
push
jge
dec
out
lods
add
adc
fimul
dec
(bad)
test
sub
and
add
cmp
out
xlat
jne
push
xlat
shr
xchg
mov
fwait
in
push
jecxz
add
out
sbb
push
das
in
cmp
int
add
ins
fild
not
and
mov
jo
adc
mov
push
test
push
scas
inc
imul
pop
mov
add
inc
adc
es
dec
pop
adc
push
sbb
xor
xchg
pop
js
and
adc
cmovb
dec
mov
add
lock
sbb
mov
test
add
adc
add
xchg
(bad)
sbb
sar
inc
test
pop
xchg
add
ret
fisubr
icebp
push
add
dec
inc
pusha
or
xor
cli
les
not
or
retf
dec
xor
test
aaa
sar
mov
shr
pop
jno
dec
adc
xor
jne
jl
add
ror
cmp
jbe
ins
push
adc
cs
sar
addr16
mov
pop
cmp
call
cmp
pop
jns
stos
sbb
iret
jmp
syscall
push
outs
sysenter
shr
push
clc
shr
ds
jno
iret
sbb
arpl
add
or
inc
inc
dec
add
leave
retf
ds
test
mov
aad
je
jo
cdq
inc
sar
dec
xlat
movlps
(bad)
and
cmp
jmp
pop
js
mov
add
into
pop
or
dec
test
mov
pop
ss
xlat
sahf
xor
xor
dec
mov
xor
xchg
add
adc
add
sbb
retf
pop
in
cmp
cli
(bad)
clc
adc
es
shl
adc
mov
cli
loopne
mov
div
mov
pusha
xor
cmp
adc
ins
inc
pop
test
mov
into
adc
xchg
mov
or
sahf
fwait
cmp
mov
jae
sub
jp
xor
std
push
jp
int3
jmp
dec
mov
sbb
dec
ins
iret
inc
pusha
repz
or
sbb
lods
sub
fs
ins
push
pop
push
adc
or
test
or
paddd
jb
xchg
shl
sti
mov
and
adc
inc
enter
sbb
push
xchg
xchg
pushw
or
xor
nop
dec
adc
add
pop
outs
shl
xor
sti
ret
inc
inc
cli
sub
inc
xchg
xchg
gs
push
cli
xor
loop
add
jnp
rcr
cdq
rcr
clc
dec
pop
xor
sbb
xchg
xchg
mov
adc
mov
push
(bad)
leave
add
or
sbb
inc
cmp
or
pop
add
mov
xchg
cmp
sbb
push
pop
inc
or
rcl
add
add
cdq
pop
or
adc
addr16
in
sti
ins
and
add
je
or
dec
loop
pop
jmp
sub
xor
or
cmp
cmp
mov
inc
inc
inc
jmp
lock
sbb
sbb
jecxz
add
dec
mov
int3
inc
inc
shl
adc
mov
mov
or
cmp
je
mov
push
lods
cld
add
sti
nop
sbb
sub
std
jg
jecxz
or
fstp
mov
aaa
add
push
cmp
je
ja
ror
jb
xchg
loopne
add
mov
mov
gs
push
sub
xchg
out
mov
ret
xor
or
dec
ret
ja
mov
jno
xchg
inc
loopne
sub
loopne
es
fmul
mov
jp
adc
mov
lea
dec
mov
int
sub
push
cli
mov
mov
retf
rol
lods
inc
pop
ret
or
adc
inc
retf
fadd
std
adc
fmul
add
jae
ins
cmp
and
ins
adc
dec
push
push
or
xchg
mov
push
sub
popf
mov
push
dec
xor
xor
xor
and
and
adc
fidiv
sub
add
mov
add
xchg
icebp
pusha
cmps
in
fisubr
cmp
jl
jmp
pop
lock
rol
dec
add
out
or
loopne
loopne
es
xor
cmps
dec
sub
sbb
lods
xor
test
and
retf
push
add
test
jne
inc
out
leave
push
mov
cmps
jb
loopne
sub
daa
sbb
or
stos
mov
ror
mov
das
mov
inc
adc
gs
adc
in
sub
mov
sbb
push
jge
adc
ror
scas
pusha
jmp
hlt
sahf
in
maskmovq
test
and
ins
in
adc
sbb
push
jns
and
mov
add
push
push
fstp
fwait
add
out
ror
mov
rcl
pusha
push
push
cwde
jge
push
call
sub
sub
or
xor
fld
adc
push
mov
push
sbb
xor
nop
cmp
sbb
scas
mov
lods
xor
cmc
cmps
pop
sbb
push
push
jge
jmp
adc
mov
pushf
fld
fmulp
mov
pop
and
fwait
dec
mov
mov
aad
and
out
sar
ins
mov
sub
cld
jbe
dec
aam
push
mov
sub
out
xor
add
adc
jl
ret
push
outs
test
sbb
sbb
test
or
inc
inc
call
xor
add
add
ror
js
nop
inc
sub
imul
mov
dec
xor
nop
sbb
jnp
xchg
nop
jge
adc
mov
test
push
mov
gs
adc
jle
push
nop
add
imul
out
mov
and
inc
sbb
(bad)
cmp
int3
loope
je
xor
jg
inc
aaa
test
push
aam
test
ficomp
fs
(bad)
ins
ds
sbb
fild
fcmovnbe
inc
inc
ltr
test
stc
adc
sbb
cmp
ret
enter
push
pusha
fsub
ret
add
imul
imul
or
jmp
xchg
mov
or
out
sbb
add
xchg
add
mov
dec
std
add
fimul
loope
and
pop
in
sub
pop
pop
pop
lods
add
rcl
fiadd
xor
sub
loopne
pop
retf
inc
inc
and
call
push
or
cmp
clc
dec
add
or
sbb
xor
push
mov
mov
test
sub
ret
js
xor
sub
popa
jl
jmp
inc
pop
rol
(bad)
sbb
xchg
imul
sub
scas
test
jb
rcl
ss
adc
add
add
sub
xor
push
fcom
js
mov
xor
lods
pop
adc
push
bound
fsubr
pop
ret
je
dec
cwde
enter
jmp
das
and
push
pop
jle
and
mov
leave
add
scas
hlt
dec
sub
or
add
push
push
ret
cmp
or
inc
jmp
sbb
add
add
mov
fsub
stc
jmp
movs
lods
add
cmps
push
inc
inc
cmp
ds
pop
jle
sub
rcl
test
icebp
push
mov
test
call
sub
or
sub
xor
push
add
sub
lock
in
adc
(bad)
xor
adc
nop
bound
test
(bad)
xchg
retf
and
das
dec
mov
daa
push
ror
cmp
sub
nop
xor
or
fsubr
and
or
mov
dec
pop
pop
inc
add
ror
fsubrp
div
dec
pop
push
cld
dec
cld
popa
inc
adc
add
sbb
pop
or
rol
jecxz
arpl
dec
mov
int3
lea
xchg
xor
jo
je
mov
add
inc
push
test
ret
fsubr
mov
int3
cmp
jmp
mov
add
or
(bad)
push
outs
or
rol
lods
or
mov
xor
ret
and
fist
retf
dec
mov
dec
dec
mov
pop
mov
retf
lea
cmps
and
rcr
pop
movs
gs
push
add
push
xor
push
mov
dec
sbb
add
enter
adc
shr
rol
adc
pusha
pusha
movs
xor
rcr
or
test
loopne
mov
add
in
sbb
adc
xor
inc
and
push
fisttp
cmp
lock
cmp
and
xor
lock
add
xor
loopne
test
jp
js
outs
xchg
cld
adc
cdq
or
inc
jmp
mov
adc
xchg
imul
push
mov
mov
jmp
imul
lds
das
test
lahf
aam
aad
into
mov
mov
xchg
and
nop
aam
xchg
sub
test
(bad)
and
jl
fisttp
inc
leave
stos
jmp
add
add
xchg
sbb
int3
sub
or
je
and
jmp
adc
push
invd
add
jbe
jbe
loopne
cli
push
(bad)
lea
bound
or
and
ret
aas
aad
xor
aad
adc
dec
xor
rcl
int3
clc
fdivr
out
jle
ds
dec
rcl
push
inc
add
and
sbb
xchg
test
mov
ret
add
rcl
sti
inc
xchg
add
cmc
sub
pusha
inc
mov
add
sub
dec
dec
push
inc
add
add
fisub
jg
inc
adc
cmp
cmp
popa
adc
aam
fimul
pop
es
ror
pusha
rol
into
inc
clc
jl
add
xchg
sbb
movs
sub
jbe
in
and
adc
mov
cld
cmc
or
adc
add
push
inc
loopne
jbe
pop
xor
bound
xor
mov
inc
cmp
adc
or
mov
mov
adc
mov
xchg
xor
sub
jb
add
mov
jge
cdq
fsubr
jmp
and
xchg
add
rcl
xchg
rol
jnp
inc
loop
test
dec
test
inc
sub
mov
sub
lods
in
fcom
lahf
(bad)
adc
movs
sbb
cmp
inc
mov
pop
push
inc
dec
fsub
sbb
adc
and
or
shl
fwait
loopne
xchg
aaa
dec
xor
gs
aam
jmp
mov
xor
lea
cmps
fwait
adc
sub
test
pop
out
aam
and
mov
sub
and
fs
into
scas
es
or
das
mov
sti
cmps
repz
cmp
jg
adc
jle
inc
jle
and
and
and
ret
jnp
movs
pop
retf
xor
push
lea
imul
aad
mov
aas
jg
mov
in
shl
mov
add
aas
pop
cmp
dec
jnp
jmp
test
shr
fsubrp
add
inc
mov
sub
das
imul
(bad)
push
ja
mov
pop
and
imul
(bad)
mul
or
pop
shl
loop
ret
jg
inc
pop
mov
imul
sbb
(bad)
sbb
add
scas
or
add
mov
add
inc
sub
sbb
sbb
imul
adc
and
sti
or
fld
mov
fs
mov
aas
test
add
sub
push
mov
ror
add
cld
cmp
and
xor
add
cmp
add
test
jo
or
ins
std
icebp
dec
mov
cmp
pop
mov
arpl
pop
jo
inc
sub
add
mov
and
jne
rcr
or
jg
xchg
icebp
fidiv
and
mov
dec
add
dec
and
popa
imul
data16
and
pop
cld
pop
inc
clc
push
sbb
mov
scas
add
add
and
adc
and
add
mov
ins
mov
pop
or
(bad)
test
rcpps
push
jns
test
cs
ret
jg
push
ret
movzx
arpl
add
imul
inc
xor
cmp
dec
inc
fs
mov
mov
dec
and
add
or
lock
jae
inc
xor
(bad)
inc
pop
mov
lahf
or
daa
popa
xchg
inc
cmp
test
add
int3
mov
add
push
sub
(bad)
addr16
test
imul
rol
pop
test
repnz
or
fcmovb
movs
push
push
ds
dec
xchg
jmp
retf
push
out
xor
push
sbb
mov
add
ins
add
cmp
daa
mov
fild
dec
inc
mov
and
js
push
add
add
cmps
cmp
mov
xchg
and
das
add
mov
scas
dec
pop
es
js
pop
and
in
popf
loop
pop
pop
test
xchg
adc
mov
xor
push
sbb
inc
push
pop
mov
mov
cmps
push
mul
daa
xchg
in
hlt
pop
xor
jne
and
xchg
daa
add
push
inc
adc
mov
clc
sbb
cdq
dec
call
sbb
hlt
cmp
add
jbe
push
(bad)
cmp
inc
inc
cs
arpl
mov
jmp
pop
(bad)
jmp
or
mov
xor
xor
xchg
and
jmp
add
nop
sbb
adc
pop
mov
int3
sti
js
xchg
dec
mov
les
add
mov
jmp
(bad)
fcom
cmps
hlt
jle
mov
das
jmp
into
and
jecxz
call
pusha
sbb
push
dec
call
add
push
mov
pushf
push
fucomip
and
mov
lock
inc
or
cmp
retf
mov
sub
clc
inc
jp
xor
sbb
enter
and
bound
add
xchg
test
cmps
mov
shl
jecxz
mov
jmp
push
fwait
inc
push
or
test
xor
cld
push
iret
or
enter
ss
cwde
inc
out
adc
mov
push
add
jmp
movs
sbb
xchg
mov
aaa
aas
stc
cmp
pop
in
inc
cmp
sti
int3
ror
or
dec
fst
adc
mov
call
sub
(bad)
jmp
mov
xor
adc
dec
test
push
pushf
movs
mov
nop
or
jns
inc
or
movs
add
rcr
xor
mov
or
jmp
jg
or
fld
bound
and
inc
mov
inc
jl
sbb
frstor
mov
xor
and
sti
add
jo
add
mov
jmp
lds
push
xor
sub
xchg
ss
push
xchg
retf
mul
mov
(bad)
mov
(bad)
dec
mov
sti
push
push
enter
or
(bad)
push
push
sbb
sub
xlat
imul
clc
fmul
int
mov
mov
add
sub
add
xchg
xchg
pusha
adc
push
jno
(bad)
jmp
fsubr
jnp
pop
clc
ins
or
jmp
push
(bad)
mul
arpl
cmps
cs
test
(bad)
or
or
add
fwait
and
dec
repnz
call
add
add
jg
mov
sbb
retf
(bad)
xchg
ret
xor
mov
or
out
and
add
jp
sub
dec
hlt
dec
sbb
repz
lea
add
adc
mov
adc
and
xor
xor
or
repnz
cmp
pusha
jne
aas
xor
add
and
and
sub
mov
xor
or
cmp
or
sbb
or
test
jmp
iret
mov
fld
mov
sub
xchg
push
inc
pop
mov
inc
aas
xchg
push
mov
mov
add
nop
or
es
pusha
dec
dec
xrstor
js
int
or
inc
xor
pop
and
pop
and
jno
add
les
pop
aaa
cmp
adc
test
jl
or
mov
dec
jmp
test
sbb
xor
pusha
loopne
jnp
xor
call
sub
mov
or
mov
inc
cs
sar
push
rcr
inc
jmp
push
xchg
pusha
cmp
xor
mov
in
repnz
mov
sbb
aad
dec
jmp
(bad)
push
add
push
pop
jne
jp
push
add
push
sbb
adc
push
not
movs
inc
sub
fld
push
cmp
mov
sbb
jo
push
aas
pop
daa
dec
out
xchg
(bad)
retf
(bad)
add
pop
xchg
pop
data16
push
dec
sub
cmp
add
adc
add
push
(bad)
fcomp
mov
jns
push
faddp
jmp
loopne
sub
xor
loopne
pop
push
fistp
psraw
jle
and
xchg
xchg
push
rol
push
jg
or
xchg
lds
and
into
mov
fs
ror
into
push
push
loopne
loopne
mov
add
pushf
sub
push
dec
or
pushf
lds
push
xor
mov
inc
clc
push
out
add
adc
push
dec
pushaw
dec
cld
pop
clc
jmp
mov
clc
movs
pop
xor
mov
sub
mov
test
add
xchg
push
xor
sbb
sbb
test
add
sbb
mov
and
sbb
xor
sub
inc
mul
push
push
xchg
in
sbb
dec
aas
lods
and
jecxz
pop
or
add
test
aad
mov
push
or
imul
je
lea
out
es
inc
or
popa
(bad)
adc
mov
loop
or
sub
pop
add
out
xchg
and
fs
outs
adc
add
imul
xchg
push
add
call
push
cmp
push
adc
aas
das
xchg
loopne
lahf
mov
cmp
adc
push
dec
push
adc
ror
test
sub
xchg
js
mov
hlt
adc
push
jmp
or
xchg
leave
mov
fs
push
cmp
xchg
push
jle
pop
jae
adc
and
jbe
add
add
adc
adc
inc
xor
cld
outs
pop
add
aam
jmp
sbb
add
push
or
mov
push
jmp
ror
inc
icebp
push
push
fucomi
and
or
adc
mov
dec
nop
(bad)
clc
push
push
mov
xchg
loope
inc
sahf
out
mov
mov
pop
mov
cmp
jo
je
push
push
in
cwde
popa
sbb
jp
inc
ficom
adc
fadd
jmp
xor
push
mov
inc
push
ficomp
or
pop
or
add
push
icebp
adc
and
mov
es
pop
push
or
sahf
call
adc
fdiv
add
cmps
movs
jae
or
mov
cmp
js
xchg
mov
lods
push
adc
ror
add
or
adc
cmp
aas
xlat
mov
or
fcomp
or
add
adc
jmp
mov
xor
push
or
or
lea
add
retf
adc
ret
push
pop
inc
push
sbb
ret
imul
mov
or
xchg
adc
push
popf
les
sub
sti
daa
mov
call
fdiv
add
fistp
aas
push
xor
add
dec
mov
inc
mov
push
(bad)
lods
xchg
adc
aas
aas
adc
and
or
inc
or
test
pop
(bad)
in
or
mov
xchg
js
sbb
jmp
nop
add
jg
and
pop
sahf
pop
out
aas
lds
push
inc
test
pop
or
cmc
cmp
dec
jb
and
jne
daa
ret
pop
scas
mov
mov
cmp
pop
or
and
inc
cwde
add
imul
outs
loope
call
add
jmp
movs
ds
adc
idiv
add
dec
xchg
imul
mov
push
push
icebp
ret
mov
and
addr16
leave
jno
or
mov
into
xor
inc
rcl
pop
push
pop
and
pop
rol
adc
push
jle
xchg
mov
outs
loopne
je
cld
aad
movs
shl
ja
xor
dec
loopne
fcom
js
xchg
scas
mov
jne
sub
mov
xlat
pop
pop
pop
addr16
adc
out
add
xchg
xor
xchg
fbstp
jl
imul
dec
sbb
adc
mov
sub
jae
ins
fmul
out
or
int3
mov
and
dec
je
adc
mov
inc
test
xor
inc
mov
jns
adc
inc
add
pop
add
add
adc
mov
add
dec
adc
cli
xor
sub
pop
lea
cmp
sbb
push
jne
call
mov
imul
mov
fstp
popa
push
cdq
push
js
shl
or
sub
and
push
dec
adc
(bad)
mov
cmp
pop
xchg
das
add
jns
jbe
push
mov
jge
lds
mov
dec
sbb
das
mov
inc
push
iret
repnz
ret
mov
ret
add
rcl
scas
movs
sub
cmc
or
movs
jo
and
out
lods
fsub
in
(bad)
xlat
mov
inc
inc
cmp
cmp
in
push
add
mov
call
sbb
adc
dec
nop
jno
mov
add
cmp
jne
push
xchg
mov
aas
(bad)
fisttp
data16
add
retf
es
(bad)
sbb
xchg
mov
int
and
inc
pop
mov
push
ror
mov
(bad)
fnstenv
dec
hlt
mov
pop
int3
or
mov
adc
les
or
lock
xchg
out
xchg
movs
dec
cld
or
mov
cmp
sub
jne
ss
mov
ins
and
loop
clc
add
movsx
pop
(bad)
stos
lock
pop
add
aam
shr
sub
(bad)
xchg
adc
out
sub
or
fldl2e
jp
ficomp
lock
jbe
pop
nop
lea
adc
xlat
mov
fdivr
mov
inc
dec
push
and
test
sub
mov
adc
jne
adc
pop
mov
cs
hlt
jmp
jmp
pop
mov
dec
sub
cmp
add
mov
push
push
sbb
aam
sub
or
pop
sub
push
adc
hlt
repz
call
dec
ret
push
shl
mov
bound
adc
ja
xor
sbb
data16
loopne
push
cmp
outs
or
adc
ins
arpl
dec
pop
add
dec
jl
fidiv
loope
nop
out
je
mov
pop
adc
pusha
ret
lock
sbb
frstor
fmul
sar
out
ret
fistp
rcr
je
shl
sbb
ins
imul
sbb
inc
(bad)
movs
daa
cmps
mov
add
fisubr
xchg
sti
mov
push
sub
dec
adc
sbb
add
fcomp
pop
and
add
jno
adc
rcr
cmp
jnp
dec
pop
test
lods
add
ret
sub
jbe
xor
cmps
push
je
jno
add
out
cli
outs
sbb
(bad)
or
test
(bad)
or
add
dec
adc
imul
lods
mov
add
test
imul
or
sub
xor
add
or
out
mov
mov
shl
(bad)
gs
add
movs
mov
fld
cmp
sbb
out
mov
add
lea
xchg
ror
popa
stc
mov
push
test
daa
out
fcomip
int3
push
cmp
cdq
sub
sbb
in
mov
or
push
sub
cmp
sahf
nop
mov
ret
leave
xchg
or
or
into
inc
pop
and
push
cmps
icebp
outs
cmp
sbb
(bad)
loope
movs
sub
add
mov
ret
outs
sub
or
add
in
int
xor
inc
sub
adc
mov
(bad)
inc
out
jno
push
sub
jbe
rcl
mov
aas
movs
mov
(bad)
adc
push
repnz
sub
aaa
or
mov
xchg
icebp
stc
jae
sbb
pop
or
sub
jg
pushf
pop
pop
jno
inc
jae
mov
jb
imul
push
and
jno
xchg
je
jmp
jmp
adc
mov
repnz
push
adc
sub
add
shr
push
sub
push
dec
add
xlat
add
xchg
test
sbb
lds
adc
loope
pop
js
ins
cli
pop
es
add
pop
shl
pop
shl
sub
pop
pusha
movs
imul
smsw
in
inc
mov
and
push
pop
and
mov
fidivr
push
in
stc
push
cmp
je
or
mov
stc
jg
aad
test
ss
inc
pusha
test
adc
and
adc
mov
lea
dec
sbb
std
dec
out
jecxz
mov
loope
repz
jmp
pop
inc
enter
xchg
sub
es
loope
ficom
fild
cli
push
popa
push
push
daa
mov
in
jl
add
rol
xchg
aam
or
or
or
jmp
adc
dec
ins
adc
xor
push
push
ret
mov
loope
sbb
shl
sub
ins
mov
adc
push
jnp
sub
sub
(bad)
sub
cmp
dec
lea
outs
adc
pusha
or
jbe
daa
fadd
xchg
xchg
das
inc
jmp
adc
and
sub
mov
out
jae
adc
and
add
js
mov
jae
lea
std
mov
(bad)
fild
test
shl
cmp
cmp
inc
push
pop
inc
es
inc
inc
dec
sub
sbb
dec
ss
out
inc
and
cmp
push
fisttp
push
fmul
mov
inc
sub
call
push
repnz
mov
pop
out
inc
stos
lahf
inc
call
mov
jo
or
push
inc
popa
mov
outs
or
cwde
jne
add
or
push
inc
sbb
push
xor
pop
cmc
daa
lds
adc
dec
mov
or
sahf
xchg
not
add
inc
pop
sbb
and
push
icebp
sub
sbb
sbb
popf
aas
add
fs
ror
xchg
(bad)
xchg
icebp
daa
in
mov
ud2
add
fsubr
sti
sbb
jno
adc
ret
aaa
jl
jg
pusha
adc
pop
addr16
in
sbb
add
add
xchg
test
mov
pop
test
add
aaa
movs
mov
cmps
movs
mov
cmps
sub
sbb
int
push
or
adc
push
pop
mov
push
js
fcom
and
pop
xchg
fs
dec
sahf
addr16
in
inc
stos
rcl
push
sub
or
add
stos
xor
add
mov
jmp
ret
iret
add
push
ds
dec
cld
fisttp
fdiv
(bad)
mov
cwde
inc
pop
bound
ins
lods
pop
add
cdq
add
adc
jecxz
pop
pop
popa
inc
stos
repz
push
inc
lods
pop
mov
adc
daa
mov
arpl
xor
loope
inc
mov
mov
test
add
add
fldenv
inc
test
repnz
fcom
or
pop
fucom
mov
mov
test
pop
in
cmp
sbb
xchg
jnp
add
push
sub
movs
das
add
and
es
push
sub
and
pop
inc
cdq
ins
lods
adc
pop
and
jae
cdq
dec
add
or
inc
sbb
jne
stos
dec
sub
ins
adc
mov
dec
cwde
or
add
jne
scas
pop
or
pop
mov
xchg
cs
mov
(bad)
loopne
xchg
retf
sar
repnz
popf
sub
dec
adc
and
xchg
pop
repnz
test
inc
sub
ror
mov
enter
add
add
arpl
outs
mov
call
daa
adc
cli
cmp
je
mov
mov
into
(bad)
jb
dec
das
pop
fild
test
rcr
inc
scas
adc
add
pop
mov
bound
push
add
add
ret
inc
dec
sub
rcr
mov
push
mul
mov
inc
add
icebp
dec
dec
pop
cmp
jne
pop
pop
ror
and
loope
mov
pop
pop
adc
inc
int3
pop
or
dec
stos
sti
into
(bad)
xchg
jno
int3
inc
add
add
mov
mov
jecxz
cli
jae
inc
or
dec
iret
inc
dec
xor
jne
ror
push
jp
and
clc
jbe
sub
xor
out
xchg
dec
sub
xor
xchg
stos
fcom
xchg
or
pop
sbb
cmp
xor
lods
inc
pop
dec
jns
xchg
hlt
mov
dec
enter
add
xor
cdq
mov
mov
shr
adc
dec
push
jbe
and
ss
xchg
pushf
adc
or
outs
sub
jne
adc
inc
or
dec
in
inc
rcr
out
push
mov
and
nop
or
loop
add
or
jb
dec
test
xchg
xchg
sub
jne
sub
jnp
pop
or
xchg
xchg
xchg
jnp
cbw
push
enter
inc
jmp
mov
add
add
jno
mov
adc
loopne
call
mov
cli
sbb
pusha
push
push
in
les
push
inc
jmp
push
popf
jne
add
clts
ins
xchg
test
push
sub
xlat
inc
gs
add
sub
sbb
and
scas
ins
fsub
pop
inc
dec
sub
jmp
das
sbb
xchg
and
pop
inc
test
shr
push
and
mov
fsubr
jns
dec
add
aam
or
sub
test
out
push
sub
inc
les
out
and
and
scas
adc
jo
int3
mov
dec
cmp
mov
jecxz
or
push
xlat
(bad)
in
dec
sub
fsubr
sub
cmp
inc
fimul
push
inc
daa
push
arpl
inc
dec
push
push
and
ins
js
imul
mov
xor
fadd
sbb
repnz
xlat
aas
jbe
adc
leave
in
push
popf
mov
mov
cmp
cmps
rcl
loop
dec
or
cld
mov
fst
add
jle
iret
mov
push
dec
add
daa
ss
enter
pop
xor
loope
or
shl
fsubr
sub
test
sbb
fmul
dec
rcl
rcl
and
clc
cmps
add
ins
in
in
mov
loopne
sbb
(bad)
dec
push
icebp
ja
xchg
and
ins
imul
mov
fidiv
cmc
pop
jnp
js
sbb
or
das
add
or
imul
mov
daa
or
sbb
add
dec
popa
jmp
fs
fnstcw
jmp
push
xchg
(bad)
iret
je
jne
bound
into
inc
sbb
xchg
retf
push
sub
mov
mov
pop
mov
sub
fdivr
fcomp
mov
lea
or
mov
je
mov
or
rol
add
stos
shl
or
mov
mov
dec
sbb
or
dec
dec
pusha
dec
fldenv
mov
lea
mov
adc
mov
data16
ficomp
cmp
jns
lods
cs
call
mov
push
add
push
push
sbb
inc
pop
cmp
sub
stos
adc
add
test
inc
retf
adc
inc
mov
adc
dec
xchg
push
dec
out
out
add
mov
add
test
inc
fdiv
mov
iret
call
or
add
push
call
imul
sti
dec
sti
mov
test
jmp
aam
call
push
pusha
test
dec
or
lea
sub
add
popa
add
or
clc
add
sbb
mov
add
push
xchg
dec
fs
fild
sbb
nop
add
leave
adc
jo
call
fdiv
std
or
inc
imul
xor
add
push
dec
xor
jmp
mov
enter
(bad)
add
lds
push
cmp
daa
add
jge
jnp
cmp
sub
and
push
jmp
cmps
test
inc
inc
mov
jo
stos
add
dec
cmp
mov
cli
xchg
jnp
push
adc
mov
in
push
bound
xor
push
add
dec
repnz
test
js
das
nop
ror
cmp
or
mov
ins
sbb
jge
ret
sar
pushf
aaa
shr
sysenter
ficomp
or
mov
scas
daa
sub
ins
fisubr
push
je
or
push
cmp
add
mov
mov
mov
outs
add
sub
ins
cmp
push
jo
inc
pop
adc
rcr
movs
test
jg
xchg
mov
jmp
dec
fld
out
xchg
mov
inc
adc
add
fsubrp
jb
or
mov
enter
fild
push
inc
scas
call
ret
popf
les
adc
sub
push
sbb
cmp
xor
stos
pusha
add
add
loop
call
je
je
outs
add
sbb
inc
setns
daa
in
repnz
adc
and
fwait
xor
or
dec
inc
cmp
mov
adc
dec
mov
sbb
in
in
out
call
loopne
cli
adc
mov
pop
loopne
cmp
push
xchg
dec
or
push
jge
cmps
popa
mov
repz
sub
xor
jmp
or
imul
dec
fwait
cmps
jmp
jmp
jne
inc
mov
sti
sub
stos
and
je
inc
or
xor
ja
aas
jge
popf
neg
push
stos
xchg
cli
sub
movs
movzx
inc
mov
adc
add
cmp
or
add
movs
jne
lahf
mov
mov
neg
mov
mov
mov
xchg
mov
xchg
in
iret
call
ins
jne
push
sahf
div
aaa
sbb
call
xchg
call
jmp
ds
inc
sub
cdq
xor
push
push
sbb
and
scas
fs
or
fstp
shl
pop
sbb
int3
pop
(bad)
stos
add
and
adc
call
je
and
pop
jl
test
rol
out
stc
adc
xchg
ins
ret
lahf
mov
(bad)
popf
fdivr
out
fwait
sahf
mul
mov
pop
sbb
test
sbb
add
inc
(bad)
mov
retf
inc
adc
sub
jmp
xor
adc
xlat
mov
(bad)
push
xor
and
and
test
jno
mov
jb
cmp
adc
push
and
sub
(bad)
(bad)
mov
leave
push
test
mov
jmp
retf
push
fmul
test
xchg
imul
xchg
push
cs
pop
push
in
push
push
jno
xor
sub
ficom
push
ss
push
or
movs
loopne
jmp
sub
inc
aam
xor
daa
popa
shr
cdq
scas
lods
xchg
and
xchg
inc
cwde
cmp
or
leave
mov
push
inc
and
(bad)
cmc
mov
inc
inc
bound
cmp
adc
xchg
mov
inc
push
aas
cmps
fcom
jle
jmp
lea
and
xor
add
add
inc
add
or
movs
adc
les
dec
enter
push
jp
fdivr
adc
adc
mov
(bad)
out
dec
jnp
outs
mov
das
aaa
inc
sbb
cmp
gs
sub
xchg
sti
cmc
mov
fimul
mov
and
sub
inc
hlt
mov
sar
add
ret
test
pop
repnz
dec
sub
lahf
mov
xchg
pop
jl
add
or
jnp
ja
push
test
enter
(bad)
bound
pop
cmps
mov
dec
shr
add
repnz
and
out
sbb
in
sub
sub
push
xchg
add
push
pop
sub
xchg
mov
inc
inc
xchg
push
imul
out
mov
inc
adc
jge
fld
fstp
neg
or
lds
xchg
js
mov
jmp
push
mov
enter
test
loopne
retf
hlt
dec
sbb
adc
iret
push
add
add
aam
sbb
mov
mov
jp
fistp
and
dec
fld
mov
pop
mov
sub
push
mov
fld
aam
shl
add
xor
adc
aad
cmps
dec
ins
mov
test
cmp
fld
mov
fsub
mov
jne
cmp
loopne
shr
inc
and
add
test
push
fmul
xor
jmp
lock
pop
lock
ja
and
sar
sti
imul
rcl
jmp
sbb
jmp
lds
dec
jnp
stos
pop
jg
pop
jnp
mov
or
jl
in
ds
sbb
add
jge
or
inc
cmc
xchg
adc
or
inc
inc
jle
lock
cmp
stos
and
sub
mov
in
stc
xchg
jecxz
adc
lods
jp
add
xor
fsub
add
sti
jmp
lods
sbb
mov
imul
mov
(bad)
add
pop
inc
int3
mov
xlat
stos
(bad)
aaa
jle
sub
sbb
mov
push
aas
bound
add
dec
outs
mov
loope
push
in
add
push
scas
arpl
pop
dec
push
call
es
add
sbb
and
sub
ror
push
clc
sub
jmp
addr16
mov
sbb
(bad)
sub
mov
das
inc
sub
dec
and
xchg
dec
jns
inc
popf
add
lods
scas
cmp
cmps
dec
clc
into
adc
jp
xor
movs
add
mov
cmp
push
or
push
push
push
sbb
nop
or
(bad)
or
cmp
sub
mov
adc
or
add
iret
and
fiadd
sti
sar
or
movs
push
call
sub
pop
test
or
lods
pop
push
dec
jmp
adc
test
mov
adc
shr
test
dec
cmc
aas
test
shr
sbb
fistp
adc
dec
sub
jmp
inc
pop
mov
xor
test
ss
in
nop
adc
sbb
mov
inc
adc
jns
(bad)
and
rol
call
cld
mov
mov
adc
popf
push
test
pusha
fxch
(bad)
cmps
mov
inc
in
and
gs
int3
cdq
scas
movs
push
jns
xchg
rcpps
sbb
shl
push
xchg
adc
retf
rcl
push
sar
mov
out
pop
push
out
push
jmp
mov
jbe
mov
jae
mov
out
leave
adc
or
test
fwait
dec
loopne
sbb
or
jae
imul
sahf
dec
mov
mov
rol
cmp
test
cli
and
xor
push
rol
movs
add
(bad)
sub
ins
mov
cmp
xor
cli
retf
mov
pop
or
adc
mov
adc
pop
pop
jl
lea
sbb
or
push
mov
push
cmp
clc
shl
and
add
inc
mov
sbb
shl
ror
jno
dec
sbb
sar
ret
dec
imul
cmp
adc
push
std
out
in
jnp
dec
jns
jo
mov
popa
mov
test
pop
adc
icebp
pusha
loop
(bad)
inc
les
push
sbb
push
(bad)
loopne
mov
stc
mov
or
(bad)
mov
jmp
or
(bad)
ret
ret
pop
mov
push
aam
mov
jle
cs
jle
enter
xchg
push
jno
push
test
add
and
add
ror
adc
call
(bad)
call
dec
xchg
dec
inc
cs
out
inc
xor
dec
call
popa
test
ja
stos
sti
fimul
scas
mov
int3
add
push
push
scas
movs
mov
fcom
out
add
push
hlt
and
movs
gs
inc
push
lock
push
movs
imul
call
lds
rcr
add
sub
dec
js
lods
adc
xchg
or
jg
rcr
imul
mov
jp
cdq
xlat
xor
out
push
cdq
add
adc
xchg
test
add
or
adc
mov
inc
test
mov
cmp
sbb
jnp
cmp
jo
adc
dec
je
in
add
cmp
pop
dec
inc
or
jmp
movs
mov
hlt
lock
or
popa
adc
adc
sbb
xor
mov
pop
push
imul
adc
mov
je
mov
push
push
or
(bad)
or
inc
sbb
int
push
rol
ret
fimul
(bad)
dec
loope
mov
je
mov
mov
mov
stc
pop
rcr
add
push
xchg
(bad)
ror
aam
mov
mov
sahf
pop
js
mov
add
pop
mov
add
jns
xchg
fwait
ds
movs
push
sti
int3
mov
sub
dec
or
jb
and
dec
retf
ins
add
sbb
(bad)
inc
mov
dec
hlt
aam
add
test
cmp
bound
xor
sub
test
sub
jmp
push
xchg
cmp
mov
inc
add
mov
test
mov
dec
out
xchg
les
dec
mov
jo
sar
pushf
mov
mov
jg
add
lahf
(bad)
daa
(bad)
in
mov
hlt
adc
out
fiadd
and
mov
call
out
jmp
cld
sub
stos
jp
je
sub
inc
ret
add
jmp
data16
or
mov
nop
cmp
add
iret
cmp
nop
test
popf
push
mov
ret
test
inc
ja
out
sub
mov
mov
pop
adc
add
jmp
xor
cmps
and
cmp
cwde
and
push
or
ins
retf
dec
pop
sbb
lock
mov
or
lahf
push
mov
or
aam
call
xchg
movs
arpl
fwait
test
gs
pop
adc
pop
rcl
mov
jle
popf
loopne
arpl
out
or
sbb
push
mov
xlat
dec
mov
test
xor
and
pop
pop
adc
jge
jae
ret
sahf
push
cmps
loopne
xor
lds
jns
sub
mov
inc
arpl
movs
std
mov
dec
pop
adc
jl
and
inc
jns
inc
mov
push
mov
sbb
sbb
dec
inc
ret
sub
mov
dec
(bad)
fsubrp
mov
push
mov
cmp
fcom
cs
mov
fwait
sub
cld
pop
dec
jnp
repz
jl
sub
in
and
fnstsw
imul
jno
or
enter
push
mov
aas
retf
jo
rcr
dec
ret
jmp
inc
cmp
mov
push
imul
sbb
xor
fwait
or
push
push
push
popf
sub
xchg
fsubr
fisttp
or
push
xlat
fsubr
cmp
and
leave
neg
pop
dec
jmp
call
sub
xchg
add
mov
dec
loopne
mov
and
cmps
lods
mov
call
jmp
test
nop
inc
sub
ret
cmp
cmp
adc
jg
mov
movs
repz
ja
and
mov
or
xlat
add
cmps
jb
add
mov
dec
or
rol
sbb
repz
or
mov
jl
dec
(bad)
xor
(bad)
idiv
and
mov
shl
push
pop
xchg
(bad)
fadd
xchg
mov
sbb
cmp
aam
lea
icebp
nop
sbb
pop
pop
fistp
dec
and
mov
or
and
fdiv
cmp
dec
ficomp
or
add
xchg
jg
loopne
jo
sub
pop
cmp
cmps
cmp
push
cmp
sti
jbe
jge
mov
add
jo
adc
sub
push
dec
jecxz
mov
pop
xchg
inc
or
sub
outs
neg
and
cmp
pop
push
popa
xlat
dec
mov
and
mov
or
mov
or
xchg
mov
xor
inc
push
add
adc
icebp
inc
sbb
cmp
out
les
inc
(bad)
int
(bad)
data16
adc
mov
fdiv
movs
xchg
inc
cmp
xchg
fwait
adc
xchg
icebp
dec
sub
repz
jl
retf
xor
movs
imul
dec
mov
and
sub
lds
or
ret
movs
outs
pop
les
imul
leave
std
aad
enter
mov
sbb
nop
test
mov
pop
retf
push
cli
mov
in
push
lods
cmp
pop
xor
adc
push
or
inc
dec
leave
test
adc
nop
adc
add
mov
pop
xchg
mov
test
or
test
mov
xor
push
push
and
jb
jo
xchg
jae
hlt
inc
sub
xchg
mov
and
arpl
fistp
aaa
icebp
cs
sbb
mov
pop
or
out
cwde
dec
adc
mov
cmps
repnz
pop
jecxz
nop
aaa
pop
push
inc
and
outs
in
or
inc
nop
xchg
mov
lds
clc
inc
inc
pop
dec
xchg
add
std
inc
ja
test
icebp
retf
data16
mov
add
(bad)
cmp
imul
mov
in
sbb
je
addr16
add
(bad)
call
add
mov
add
pop
fwait
les
adc
cmps
sar
and
data16
or
mov
or
imul
mov
les
daa
sbb
xor
sbb
or
addr16
mov
sbb
xor
adc
ret
popf
pop
or
bound
xlat
cli
dec
pop
jo
fwait
xlat
cmp
inc
imul
or
into
pushf
mov
or
pop
in
add
lock
jge
and
das
cld
adc
mov
int3
mov
and
(bad)
neg
mov
das
push
mov
outs
xor
and
dec
(bad)
push
sbb
loope
int
sub
repnz
or
enter
pop
dec
xor
xchg
pop
pop
repnz
mov
ins
sbb
fld
mov
sbb
ins
out
xor
or
or
in
add
add
cmp
jmp
lds
add
sub
cmp
aam
lods
or
cli
sbb
xchg
xchg
ss
mov
sub
ret
mov
in
push
ds
sar
in
test
rcr
xchg
inc
jae
jp
movs
push
popa
pop
adc
xor
jbe
jbe
mov
xchg
or
jo
mov
aas
mov
sbb
in
ret
push
mov
inc
sbb
jae
mov
leave
mov
into
ss
or
jmp
scas
mov
jnp
and
adc
and
test
sub
sbb
retf
fmul
mov
rcl
fdivrp
sbb
(bad)
push
daa
ret
pop
adc
push
and
fcom
and
mov
mov
push
pusha
push
add
push
shr
popa
cmps
sub
das
mov
inc
cmps
jbe
ja
cwde
xchg
mov
and
mov
push
mov
icebp
jl
scas
dec
ins
pop
mov
push
imul
adc
(bad)
adc
cmc
ret
call
ja
add
dec
(bad)
cmp
and
(bad)
or
inc
test
or
sub
frstor
and
cdq
in
cs
pop
adc
push
cmp
cmp
and
(bad)
push
push
adc
mov
movs
pusha
(bad)
push
loopne
cmp
shl
xor
test
outs
sbb
cmp
inc
inc
or
xor
and
push
aaa
stos
pop
or
mov
pop
addr16
mov
sbb
clc
neg
and
xchg
lods
cmps
(bad)
xor
xor
pop
xor
pshufw
jmp
mov
in
enter
inc
push
mov
dec
inc
or
sub
sbb
mov
mov
mov
mov
mov
mov
pusha
adc
pop
retf
popa
test
mov
pop
dec
jns
js
pop
and
jo
popa
int
fs
push
fild
pop
inc
pop
xchg
retf
lods
movs
or
push
lea
call
push
rcl
inc
ret
mov
pusha
test
sub
movs
inc
imul
addr16
in
or
jge
jo
pushf
push
xchg
inc
xor
add
push
push
inc
or
push
mov
inc
jp
icebp
xchg
push
loopne
or
test
push
dec
and
push
or
push
jne
mov
or
sub
inc
cmps
jno
cmps
lods
retf
(bad)
mov
mul
mov
or
push
pop
pushf
push
sbb
xchg
adc
sbb
sbb
(bad)
mov
rcr
cli
and
add
push
pop
mov
mov
imul
dec
out
jmp
cmp
loop
enter
cmp
dec
xor
sbb
cmp
iret
test
jne
fs
ss
or
push
ret
mov
jb
mov
mov
stc
xchg
adc
retf
adc
fst
outs
dec
adc
sti
dec
jl
dec
dec
lea
sub
jge
int
pop
or
rcl
aas
dec
jl
ror
jnp
mov
jno
cli
sti
lldt
sub
adc
add
add
mov
mov
mov
push
mov
jnp
push
adc
adc
mov
mov
es
xchg
jb
jns
shl
add
mov
push
pop
add
popf
or
or
dec
les
jmp
and
ja
and
and
je
in
pop
pop
and
sub
stos
or
(bad)
int3
sbb
inc
enter
pop
retf
clc
gs
inc
mov
inc
aaa
cdq
ins
mov
push
leave
add
add
stos
xor
ins
in
dec
pop
pop
xlat
xor
mov
xor
fisttp
push
mov
and
call
jno
dec
mov
or
dec
push
mov
imul
sbb
clc
and
and
push
imul
jne
mov
or
fimul
add
jns
mov
xor
or
adc
push
dec
js
loopne
xor
push
mov
fs
jbe
fsub
sub
xlat
adc
sub
cmp
jns
nop
sbb
or
ja
mov
or
lods
cmp
gs
add
and
or
sub
aaa
pop
or
push
fmul
or
inc
fnstenv
jge
add
jge
lea
add
xchg
fld
mov
inc
ret
dec
clc
mov
and
ret
shl
add
sub
inc
push
cmp
test
add
xchg
or
jle
dec
clc
sub
cmp
sub
loop
sbb
mov
pop
into
jo
mov
stos
dec
bound
add
in
pop
adc
xor
or
call
xchg
leave
cld
das
jne
pop
nop
adc
or
femms
mov
leave
push
jl
es
cs
adc
lahf
and
push
push
sub
push
mov
push
xor
outs
iret
xor
dec
call
in
dec
xor
adc
fcom
inc
rcl
(bad)
xchg
mov
nop
push
and
dec
mov
popf
out
outs
mov
imul
aad
sub
add
icebp
push
stos
jb
call
push
dec
mov
and
inc
aam
add
sbb
jg
sub
loope
push
inc
movs
jge
fs
jecxz
push
mov
enter
inc
pushf
inc
dec
out
and
adc
imul
hlt
loopne
adc
fadd
dec
outs
fisub
nop
fadd
mov
or
mul
std
call
pop
cdq
inc
pop
movs
mov
jno
retf
icebp
std
mov
js
add
dec
cli
fcom
clc
push
out
js
add
jp
or
data16
jne
mov
rol
dec
or
push
call
(bad)
add
fadd
ror
clc
add
fst
sbb
loopne
push
dec
adc
fsub
and
ins
inc
add
adc
in
shr
fcmovnb
mov
inc
mov
pop
shl
fsubrp
cs
add
int3
ror
adc
xlat
add
sub
sti
or
jg
jmp
dec
retf
push
push
rsm
das
sbb
add
add
xchg
daa
jo
pop
dec
dec
push
jns
jo
or
das
or
sub
dec
push
(bad)
pop
sub
movs
cmp
fs
lods
inc
add
ja
das
xor
in
sbb
jle
sub
fidiv
mov
int
push
sub
arpl
pop
lea
pop
repz
or
adc
push
inc
xor
test
in
and
pop
xor
xor
imul
jne
shl
mov
push
jg
aam
jl
seta
retf
or
sbb
mov
mov
mov
push
fisttp
and
push
push
cli
jle
in
(bad)
inc
loopne
sti
in
addr16
and
adc
shl
add
jg
cmp
add
cmp
add
add
push
dec
xchg
bound
or
scas
cmps
loope
or
mov
adc
inc
mov
leave
adc
call
xchg
cwde
in
add
movsx
clc
xchg
fimul
xchg
adc
retf
lea
mov
dec
inc
mov
loopne
(bad)
not
push
cs
add
adc
sahf
push
or
je
fst
push
push
add
rol
sahf
pop
and
push
inc
or
les
dec
sbb
jge
mov
ret
cmp
push
add
mov
mov
rcr
and
nop
add
popa
jne
cmp
push
cmp
rcl
xor
mov
popa
cmp
pop
add
adc
cwde
sar
and
and
xor
sbb
push
add
inc
(bad)
and
fidivr
ins
or
data16
mov
dec
add
xor
sbb
retf
add
xor
inc
std
sub
inc
enter
aad
mov
movhps
push
add
ja
mov
cmc
sbb
dec
mov
or
stos
xchg
outs
adc
shl
mov
adc
or
mov
or
jle
popa
mov
xor
fst
inc
cmp
daa
adc
dec
cmp
inc
push
cld
inc
sbb
bound
adc
add
dec
adc
rcl
sub
inc
call
or
bound
retf
call
lock
dec
pop
xchg
push
ror
pop
dec
inc
inc
push
inc
dec
lds
dec
fnstcw
or
push
adc
fist
data16
and
or
inc
imul
data16
cld
icebp
mov
push
ret
movs
xchg
cmp
dec
add
push
jg
xor
mov
pop
lea
movs
into
cdq
sub
in
jae
push
std
pop
pop
or
aaa
pop
cmps
outs
sbb
sub
add
mov
xchg
sahf
pop
or
cdq
sbb
cmp
retf
inc
xor
jmp
inc
sbb
jno
mov
adc
mov
jl
or
in
sub
arpl
mov
mov
cmc
data16
or
mov
mov
in
jns
jbe
mov
xor
out
sti
popf
aam
shl
(bad)
rcr
ss
adc
push
sub
outs
jae
clc
cmp
adc
inc
adc
sbb
adc
ret
retf
add
pop
inc
jbe
add
jmp
sbb
jp
ss
mov
add
test
fbld
adc
in
add
cmp
inc
jmp
pop
mov
xor
sbb
stos
(bad)
popa
jo
adc
push
jp
xor
or
pop
mov
or
cmp
adc
dec
outs
or
fild
ins
iret
push
push
or
mov
pop
out
sbb
shr
push
cmp
in
xchg
adc
push
and
jns
xor
cmp
mov
adc
imul
or
jp
mov
push
add
or
add
scas
cmp
pop
(bad)
mov
test
inc
sub
or
adc
mov
push
inc
test
loop
and
fild
call
mov
jo
ret
cmps
adc
bound
int3
cwde
std
out
push
repnz
mov
lea
push
add
sub
push
mov
add
sub
shl
pop
lods
or
mov
js
add
mov
(bad)
ss
inc
inc
in
jbe
outs
sub
jb
xchg
inc
xor
dec
ret
sub
push
mov
mov
aam
dec
inc
test
pop
cwde
pop
add
push
(bad)
push
je
cmp
jno
inc
xchg
cmovnp
fnstsw
and
ins
and
add
add
mov
cmc
fdivp
and
aaa
or
or
sbb
bound
imul
dec
inc
and
out
sbb
data16
and
bound
push
push
repnz
sbb
outs
adc
add
sar
ins
pop
adc
fistp
shl
or
rcl
je
jmp
mov
mov
xor
test
cmp
stos
aam
pop
icebp
lock
pusha
dec
sbb
push
push
add
adc
out
pop
adc
int3
loopne
push
sbb
ror
stos
mov
adc
or
push
pop
stos
push
push
add
lods
xor
rcr
add
xor
pushf
add
push
enter
pusha
jo
push
push
inc
xchg
sti
movs
aaa
jne
shr
das
popa
mov
or
in
inc
es
popa
fs
shl
aas
push
xchg
popa
cmp
inc
adc
arpl
xor
lods
test
add
pop
ins
lock
out
sub
jne
sub
add
adc
adc
dec
js
dec
jp
mov
js
jae
jae
call
cmp
pop
cmp
retf
add
rol
mov
mov
xchg
sbb
sbb
(bad)
fadd
ja
jmp
add
or
xor
or
adc
cmp
and
(bad)
push
pusha
add
push
pop
inc
and
cdq
(bad)
call
test
jns
add
fdivr
add
add
pop
pusha
shl
cmp
je
sbb
stos
cmc
mov
std
inc
or
les
pushf
repz
xchg
or
in
and
pop
jmp
sbb
cmp
shl
retf
xor
xchg
sbb
out
adc
sti
mov
mov
sub
adc
shl
loop
popf
aad
test
and
sub
inc
add
mov
and
(bad)
mov
xchg
addps
jge
xchg
mov
(bad)
stos
imul
hlt
sbb
sbb
rcl
adc
loop
adc
and
push
xchg
add
hlt
add
pusha
(bad)
je
jns
dec
mov
test
or
or
or
sub
mov
cld
adc
add
loopne
aad
xchg
jl
je
dec
pop
xchg
dec
sub
add
mov
xchg
mov
test
out
xchg
sbb
cmp
add
jb
(bad)
mov
mov
pop
cmps
cli
(bad)
jmp
jne
push
cmp
les
add
and
add
(bad)
push
cmp
outs
retf
push
rcl
fs
rol
adc
adc
out
jmp
pop
dec
sub
sbb
retf
add
(bad)
pop
loope
(bad)
pusha
jns
sub
dec
fdiv
repnz
adc
in
add
(bad)
jmp
mov
jnp
push
push
push
(bad)
loope
xor
push
mov
pop
loope
mov
jne
pop
mov
jb
sbb
repnz
in
or
and
shl
push
enter
jmp
pop
and
fdivr
ss
sbb
scas
dec
dec
inc
push
push
sbb
inc
or
shl
add
add
into
clc
inc
nop
adc
sub
fnsave
out
dec
nop
adc
cs
call
sub
dec
sbb
test
inc
add
inc
add
xchg
inc
push
inc
xor
movs
jo
add
movs
mov
scas
loope
mov
xchg
je
jp
dec
or
dec
mov
and
aas
and
push
adc
and
cdq
in
add
fcom
rcl
enter
adc
sbb
loop
mov
or
push
or
xchg
cmp
adc
xchg
sbb
add
dec
or
add
inc
xchg
mov
mov
inc
push
add
sub
inc
add
dec
pop
idiv
in
mov
lods
add
js
mov
mov
mov
scas
rol
das
call
mov
xchg
jb
mov
lds
jno
xor
inc
shl
add
dec
cmc
jmp
les
neg
and
and
add
lea
clc
or
retf
jne
mov
and
adc
add
add
sub
outs
push
add
popf
sbb
dec
sar
dec
pop
mov
ret
inc
dec
js
xor
in
shl
cld
shl
fmul
fsub
sahf
xor
mov
(bad)
pop
xor
sub
or
fcomp
inc
stos
retf
test
mov
mov
push
add
int
xchg
test
cmp
idiv
adc
and
pop
fistp
xchg
dec
add
cdq
xor
xor
or
data16
add
adc
sbb
mov
lea
sbb
xor
adc
hlt
jg
shl
mov
(bad)
or
add
pop
es
xor
mov
xor
and
imul
imul
cmps
imul
sub
or
or
dec
stos
es
paddb
sbb
and
pusha
add
ja
jb
jb
ja
clc
jne
(bad)
in
iret
lock
push
sbb
call
and
mov
fistp
lods
lods
js
cmp
mov
loope
aad
xchg
mov
mov
add
push
xor
jmp
imul
push
cmps
imul
imul
cmps
imul
mov
cmps
sub
push
push
xor
cmovs
xchg
mov
mov
adc
and
xchg
and
push
adc
aaa
push
popa
xchg
or
xor
dec
push
push
inc
inc
clc
push
out
retf
outs
je
jge
jl
sbb
das
add
lahf
imul
push
xchg
mov
dec
cmp
xchg
xchg
mov
sub
xor
fs
dec
cs
dec
add
imul
ins
inc
push
push
push
pusha
dec
push
sbb
cwde
mov
xor
sbb
jp
inc
repz
clc
adc
(bad)
jle
mov
loop
mov
xor
mov
mov
mov
dec
inc
aaa
dec
test
dec
add
dec
pusha
inc
inc
push
add
cmps
inc
add
add
add
add
push
imul
imul
imul
cmps
imul
cmps
imul
imul
mov
dec
(bad)
syscall
loop
mov
adc
cdq
xchg
mov
push
sub
xor
adc
mov
push
push
push
mov
(bad)
fild
mov
lock
mov
mov
clc
mov
leave
mov
and
ds
jmp
hlt
push
or
sbb
mov
(bad)
mov
aaa
clc
push
lock
push
dec
(bad)
int
fmul
xlat
lock
jno
xor
hlt
(bad)
lds
pop
lock
test
arpl
ret
adc
call
loop
fdiv
jp
fadd
into
mov
sbb
add
push
sar
lods
and
or
xor
in
out
dec
xchg
inc
loop
hlt
sar
nop
mov
mov
xlat
mov
mov
xor
mov
mov
xor
mov
and
add
imul
add
add
jae
add
add
xor
cmps
rol
sub
movs
test
pop
call
or
xchg
cmps
rcr
or
or
movs
test
or
dec
jae
sub
or
cmps
rcr
or
or
xchg
or
mov
xchg
(bad)
(bad)
xchg
inc
mov
hlt
(bad)
call
sub
fwait
nop
psrlq
push
xchg
adc
xchg
jae
xchg
xchg
adc
and
and
punpckldq
mov
push
sbb
sar
imul
xchg
dec
dec
and
ins
adc
nop
inc
xlat
dec
inc
jmp
ror
add
mov
or
jo
xchg
mov
out
cmp
es
and
fisubr
mov
dec
add
dec
cmp
adc
pop
cwde
add
sbb
mov
push
or
imul
call
call
or
or
cmps
imul
cmps
imul
imul
add
lock
push
adc
jno
call
mov
xor
repz
es
inc
mov
repnz
dec
dec
mov
cmc
or
jne
inc
mov
hlt
or
lahf
rcl
jne
adc
enter
mov
mov
(bad)
lds
mov
inc
mov
scas
add
or
dec
sub
ret
jnp
mov
cmp
adc
imul
mov
fst
or
lea
mov
or
jmp
aas
rcr
aas
hlt
sar
pop
jg
push
jnp
and
pcmpeqb
push
xchg
popa
adc
fldcw
push
div
leave
mov
out
add
jg
mov
xor
push
push
add
jae
dec
push
dec
mov
push
dec
mov
or
into
xchg
cs
add
fs
xlat
mov
imul
lods
and
imul
cmps
imul
imul
cmps
imul
cmps
imul
imul
punpcklbw
push
test
push
add
push
popa
jge
jle
jl
add
or
ret
sbb
lds
inc
jl
fwait
test
mov
xchg
add
sub
or
out
add
mov
les
and
lds
int
push
rcl
sub
in
std
push
push
or
pushw
outs
sbb
adc
fst
add
movs
jnp
sub
xor
mov
inc
pop
push
mov
cmp
inc
pop
dec
pop
add
or
enter
or
enter
or
femms
mov
inc
or
fmul
mov
pop
or
test
xchg
xchg
int
sahf
std
add
and
ret
outs
in
dec
add
shr
push
(bad)
sbb
cmc
in
cmp
ret
sahf
xor
xchg
imul
sub
daa
je
or
pop
scas
fcomp
mov
fcomp
or
dec
in
dec
sub
or
cmp
(bad)
call
test
out
add
cmps
nop
xchg
movs
mov
xchg
test
cmp
jmp
and
xor
mov
adc
cs
jo
mov
test
cmp
shl
xlat
es
loopne
xor
arpl
bound
sub
mov
cmp
xchg
(bad)
hlt
sub
and
jmp
dec
mov
pusha
lahf
adc
dec
leave
add
mov
fisub
add
adc
xor
rcr
mov
jb
jno
(bad)
test
cmp
aam
xor
out
movs
cmp
call
and
jmp
or
xor
(bad)
add
xchg
arpl
pop
pop
add
add
and
xor
fsubp
inc
cwde
and
sbb
loopne
xchg
mov
test
rcl
cdq
xchg
stos
or
call
add
and
push
loopne
jecxz
pop
xlat
mov
lahf
xchg
xchg
add
xor
jb
pusha
fs
inc
sub
ins
jo
add
pop
je
lds
push
jl
adc
jmp
dec
mov
cmc
popa
into
xchg
or
sti
cmps
mov
je
and
mov
nop
sbb
mov
dec
pop
mov
sbb
pushf
jne
das
adc
add
dec
xchg
dec
daa
mov
dec
daa
es
dec
mov
lods
adc
movs
das
sub
or
bound
or
lods
aas
shl
add
or
xchg
out
inc
add
adc
sbb
xchg
retf
add
add
add
sub
push
pop
or
push
mov
adc
repnz
xor
push
or
adc
movs
or
jmp
shl
inc
xchg
aaa
inc
mov
or
fist
(bad)
(bad)
mov
inc
lds
pop
iret
cmp
dec
cs
prefetchwt1
push
inc
test
sar
sbb
add
out
ud0
xor
scas
lahf
lds
sub
mov
lea
ret
xor
dec
push
jecxz
adc
push
xor
cmp
call
sub
jb
xchg
or
test
lahf
add
push
movs
or
lea
ret
test
(bad)
out
xchg
push
outs
push
fcom
add
mov
lea
add
stos
xchg
pop
pop
or
nop
or
push
sub
scas
dec
push
or
push
or
or
cmp
or
cwde
call
imul
repz
arpl
movs
cmp
cmp
call
add
or
rcr
fstp
mov
movs
(bad)
enter
out
pushf
cmp
lods
loope
je
inc
jne
fdiv
mov
push
add
nop
or
xchg
cmp
xchg
sbb
dec
sub
xor
or
rol
sub
xchg
repz
scas
add
or
aam
xchg
add
inc
and
lods
fsub
adc
add
inc
and
and
lock
jb
hlt
clc
sub
sub
mov
push
mov
leave
lds
xchg
mov
sub
or
or
xor
or
fmul
cmp
and
js
push
inc
inc
or
(bad)
xchg
cmp
inc
mov
or
mov
mov
sub
std
inc
mov
pop
pop
into
addr16
xor
icebp
inc
jns
jp
dec
or
sahf
cmps
xor
or
or
setne
jns
or
repz
adc
adc
adc
pop
push
dec
gs
dec
adc
pop
repnz
sbb
sbb
sbb
push
shl
sbb
clc
dec
sbb
pop
push
imul
fs
mov
pushf
mov
mov
clc
repnz
xor
mov
(bad)
xlat
add
xor
add
inc
sbb
adc
or
fst
sub
sub
push
sub
fist
mov
xchg
fistp
push
cwde
adc
or
adc
adc
or
sbb
or
push
mov
cmp
xchg
dec
lock
ret
inc
inc
add
leave
and
xchg
or
push
pop
mov
pop
or
leave
and
and
je
add
js
or
sahf
xor
inc
iret
cmp
rcr
aad
mov
sub
fistp
mov
sbb
out
cwde
adc
repz
enter
movs
or
and
mov
mov
mov
mov
(bad)
enter
test
rcl
xor
adc
fcomp
enter
sbb
xor
test
call
push
in
pop
dec
sbb
pop
nop
(bad)
out
jmp
jo
add
out
add
shl
idiv
lods
imul
cmp
mov
mov
cmp
pop
push
pop
cmp
iret
dec
sti
sahf
js
dec
jno
dec
in
or
or
nop
dec
sahf
xchg
call
and
or
in
adc
test
and
fwait
ins
inc
sbb
out
add
mov
sbb
push
jo
mov
adc
adc
xor
or
mov
rcl
push
adc
adc
gs
mov
xchg
loopne
pop
loope
xchg
push
inc
mov
xchg
cmp
sbb
sbb
push
mov
sbb
scas
mov
sbb
sbb
adc
dec
mov
xchg
fcomp
in
addr16
push
sbb
push
sbb
xchg
sbb
xchg
ss
retf
sar
mov
or
xchg
nop
mov
and
push
inc
push
and
or
xchg
xchg
out
mov
mov
mov
inc
test
cdq
mov
xor
(bad)
popf
add
movs
or
push
and
stos
mov
inc
pop
popf
stos
pop
mov
push
add
int3
or
fwait
(bad)
sub
xor
inc
test
sub
adc
or
lahf
gs
dec
aam
push
mov
or
or
mov
inc
pop
stos
cmp
mov
test
inc
mov
ins
xchg
pop
mov
add
lods
cmc
fist
loope
sub
arpl
jne
mov
xchg
xchg
mov
cdq
cs
in
sub
in
dec
and
mov
nop
rcl
xchg
cmp
inc
or
imul
sbb
xor
dec
xlat
test
imul
shr
mov
or
bound
pop
test
je
and
dec
pop
test
and
push
mov
adc
gs
jle
out
inc
out
sbb
leave
leave
div
and
push
(bad)
and
cmp
xor
mov
mov
and
xor
or
pusha
lea
dec
dec
fisub
fs
dec
dec
inc
and
add
adc
(bad)
daa
das
add
fwait
sbb
inc
mov
push
xchg
inc
push
sbb
pop
add
fs
cmp
or
cmp
sbb
and
sbb
sub
nop
mov
inc
push
sbb
cmp
sbb
pop
outs
inc
dec
mov
and
jmp
xchg
fwait
and
lea
add
mov
add
adc
push
mov
and
cmp
and
sub
sub
repnz
dec
out
xchg
or
fiadd
dec
inc
outs
inc
fstp
xchg
jb
popa
inc
add
add
add
inc
add
and
inc
inc
add
push
add
sbb
mov
sar
(bad)
push
push
pusha
ret
adc
ret
mov
mov
sub
popa
xor
sbb
push
je
gs
enter
arpl
jmp
push
sbb
mov
retf
mov
test
cmp
ja
push
xchg
call
dec
push
cmp
cmp
in
dec
inc
mov
sbb
pop
add
adc
cmp
add
cmp
in
add
and
dec
js
or
(bad)
aam
shr
pop
daa
xor
and
mov
jbe
inc
push
push
push
sbb
out
in
in
and
daa
push
push
add
jnp
sub
pop
add
mov
jbe
test
ret
movs
enter
inc
add
sub
or
or
dec
loopne
sbb
adc
sub
sbb
or
push
push
sub
and
cmp
daa
imul
mov
pop
push
ins
icebp
add
add
xchg
xchg
dec
outs
rcr
pop
fisttp
sbb
mov
ins
or
add
sub
data16
add
mov
or
aas
sbb
xchg
mov
cmps
clts
dec
or
loopne
add
outs
or
sub
sub
xlat
pop
sbb
adc
pop
pop
pop
and
jae
add
out
and
xor
jns
rcr
mov
add
repz
je
sub
ins
fadd
test
cmp
rcl
repnz
dec
sbb
push
imul
movs
sbb
(bad)
nop
sub
push
xor
or
push
add
push
sub
pop
add
out
ficom
test
enter
sub
dec
cmp
sub
add
aam
cmps
mov
dec
ja
int
fst
pshufw
push
and
shl
in
dec
repz
clc
and
pushf
xchg
imul
mov
inc
ss
lahf
pop
xor
mov
jbe
adc
or
push
sub
mov
out
xchg
test
add
mov
xchg
nop
mov
inc
xchg
sub
popf
dec
in
mov
xchg
cmp
inc
add
mov
and
mov
or
mov
ss
call
xchg
or
movs
in
pop
add
bnd
js
inc
pop
inc
inc
or
retf
pop
or
cmovle
ins
or
add
ds
call
sbb
add
mov
and
push
nop
push
jnp
mov
xor
out
daa
jbe
add
push
(bad)
repz
and
adc
or
icebp
movs
nop
dec
dec
cmp
scas
jb
cmp
jae
jne
jo
dec
jbe
bound
or
xor
lea
test
push
jl
lea
or
xchg
out
mov
jle
adc
push
jbe
xor
ficom
dec
in
add
xchg
je
cmp
fs
or
adc
les
inc
scas
test
adc
fld
dec
jnp
push
or
shl
dec
inc
retf
sbb
sbb
lock
jle
sbb
cmps
and
xor
or
sbb
dec
xchg
add
in
or
mov
mov
xor
mov
dec
ins
aam
add
je
jmp
add
mov
dec
jge
xchg
add
or
mov
add
mov
xchg
enter
or
add
mov
sbb
(bad)
jnp
pop
les
jae
dec
sbb
or
pop
je
rol
js
sbb
cmp
ror
xor
in
push
ins
jle
dec
sbb
in
and
adc
sub
fst
ficomp
test
ffree
inc
mov
push
ret
adc
and
dec
inc
dec
shr
lods
daa
push
fs
cmp
mov
sub
inc
fmul
xchg
push
and
scas
push
add
test
cmp
dec
push
mov
xor
loope
inc
xchg
pop
pop
sub
xchg
les
test
popa
sbb
pop
inc
out
retf
xor
xor
pop
in
inc
or
push
fbld
xor
or
int
or
ja
daa
pop
pop
nop
nop
inc
push
jg
sbb
xchg
dec
retf
push
movs
aaa
xchg
mov
xchg
fwait
comiss
cmp
aad
xchg
inc
nop
xor
xor
loope
jmp
or
(bad)
jg
call
jle
es
jnp
pop
cmps
mov
mov
pop
or
ret
leave
aaa
mov
loop
ins
mov
xchg
test
mov
lahf
push
jne
push
in
and
push
adc
rdtscp
xor
ja
jl
push
mov
inc
pop
or
inc
lea
outs
xor
and
inc
dec
jo
enter
aaa
jo
shl
retf
fidiv
call
in
imul
sbb
js
pop
dec
call
sub
adc
add
mov
xchg
mov
adc
ja
or
bnd
dec
sbb
add
movs
mov
adc
pop
mov
adc
test
dec
jg
mov
pop
inc
jne
mov
inc
outs
and
in
or
dec
sbb
fs
loop
aas
mov
add
and
in
test
jmp
dec
and
xchg
cmp
inc
(bad)
push
shr
in
and
or
out
pop
stc
ror
push
xor
jle
inc
lahf
add
mov
pop
mov
in
dec
push
lods
mov
and
fsubr
pop
dec
xchg
add
add
mov
in
sbb
sbb
or
in
imul
iret
int3
das
test
add
and
inc
popf
dec
cmp
adc
xchg
or
movs
push
or
xchg
adc
or
popf
lods
je
dec
add
add
or
shl
and
dec
sub
(bad)
sbb
and
pop
sar
push
jmp
in
lahf
mov
jl
pop
inc
lea
inc
push
cli
test
sbb
or
ins
jbe
pop
push
ret
adc
xchg
fimul
enter
inc
inc
push
push
inc
inc
dec
dec
and
push
inc
push
inc
pop
inc
dec
push
push
dec
push
(bad)
cmp
xchg
cmp
cmp
imul
cdq
daa
mov
sbb
xor
push
inc
adc
popa
pop
push
sub
sbb
pop
scas
sub
push
xchg
pusha
movs
push
aaa
iret
aad
mov
arpl
int3
push
and
sar
jle
punpckhbw
and
mov
dec
iret
sahf
cmc
cmp
sub
sub
call
ins
mov
adc
popf
xor
sub
pop
lods
sbb
inc
cmp
pop
add
mov
cmp
inc
jmp
mov
jb
xchg
test
pop
iret
add
fsubr
mov
ror
sbb
inc
or
pop
test
pop
jns
mov
and
test
repnz
cmp
dec
punpckhwd
pop
int3
cwde
gs
mov
retf
in
mov
rol
inc
pushf
add
(bad)
sub
dec
sub
aas
lea
pop
and
mov
and
sbb
lods
adc
lods
and
and
out
push
push
mov
mov
enter
mov
bound
inc
call
and
int3
cli
and
adc
push
and
adc
imul
and
shl
sub
pop
cmp
adc
jb
dec
inc
fistp
in
in
lea
mov
pop
mov
xor
inc
lea
idiv
ds
dec
hlt
neg
inc
and
jne
fisub
leave
dec
dec
mov
mov
mov
aaa
in
fcom
mov
add
and
shl
cmp
dec
(bad)
ror
adc
ror
int3
iret
mov
cwde
mov
adc
mov
dec
mov
or
mov
sub
pop
xchg
and
aas
mov
mov
or
and
mov
test
sahf
jnp
mov
cld
push
(bad)
or
lods
test
dec
push
fcomp
sub
in
fs
dec
in
dec
adc
mov
aas
inc
loopne
dec
mov
adc
(bad)
out
enter
mov
dec
(bad)
or
push
or
add
(bad)
into
je
mov
movs
inc
dec
(bad)
sbb
add
push
cmp
add
push
inc
mov
aam
sbb
ins
jmp
std
inc
addr16
push
dec
in
call
jmp
pop
add
popf
jbe
in
lock
jo
out
mov
repz
dec
imul
hlt
push
stos
iret
inc
hlt
mov
sub
cmps
inc
cmp
int3
push
push
cmps
push
lods
test
push
xlat
and
jg
pop
inc
pop
xchg
dec
inc
test
rcl
adc
adc
mov
push
cmc
cmp
inc
sbb
les
les
ins
aaa
dec
movs
popf
push
aad
shl
leave
rol
add
fs
gs
dec
mov
mov
test
aas
mov
adc
mov
addr16
and
mov
clc
push
and
jb
movs
mov
xchg
cmps
mov
ror
and
xor
cmp
inc
sub
movs
mov
pushf
mov
inc
inc
cwde
cwde
popa
enter
jb
les
add
in
sub
sub
mov
nop
pop
push
es
pop
or
test
mov
cmp
xchg
pop
or
mov
loopne
xchg
test
pusha
push
or
in
retf
fs
cs
je
cli
jns
in
sub
pop
add
retf
cmp
and
gs
mov
ret
retf
sbb
sbb
and
or
mov
push
mov
shr
ss
shr
xchg
aam
fcomp
jb
call
ffree
xor
sbb
add
jno
jns
xor
xchg
lods
push
and
add
inc
cli
dec
xchg
in
cli
inc
cli
inc
cli
cmp
loopne
je
dec
push
addr16
xchg
inc
xor
cmp
xor
loopne
and
xor
cmp
mov
daa
jns
push
sub
sub
and
cli
push
in
and
cdq
xor
out
mov
xchg
xor
push
mov
fimul
clc
test
cmps
or
inc
dec
call
aas
and
dec
movs
jge
in
lock
fnstenv
outs
enter
dec
dec
inc
inc
iret
add
dec
movs
lea
call
adc
xchg
push
push
adc
push
adc
mov
mov
icebp
aaa
shl
adc
or
test
push
add
or
xchg
in
cld
stc
push
push
stos
add
mov
jmp
out
cmp
mov
sbb
adc
std
push
add
pop
sahf
hlt
stc
in
sbb
lock
xchg
push
push
push
lahf
lock
hlt
repz
adc
clc
stc
adc
mul
adc
in
outs
stc
add
inc
daa
in
stc
call
enter
dec
sbb
xchg
push
inc
push
in
push
loopne
inc
mov
cmp
ins
sbb
or
(bad)
xchg
dec
push
sbb
push
fsub
in
or
inc
mov
movs
xor
rcl
and
aam
mov
and
xchg
enter
dec
xchg
in
enter
dec
push
xor
nop
cli
dec
cli
sub
adc
xor
jb
stc
stc
stc
pop
xchg
inc
sub
cdq
movs
sbb
pop
stc
stc
ins
enter
stc
loop
pop
or
test
aas
lods
inc
mov
and
push
pop
pushf
sub
mov
sbb
movs
rcl
pop
cwde
movs
stc
cmps
fsub
dec
inc
add
push
pop
nop
mov
retf
mov
xor
test
popa
test
aad
cmp
leave
mov
and
fld
outs
js
arpl
in
dec
gs
jo
and
retf
leave
clc
ins
push
retf
push
gs
retf
pusha
pop
dec
push
mov
pop
sub
add
push
and
xor
add
adc
movs
push
push
inc
mov
imul
in
dec
ins
cmp
cmp
pop
xor
xor
retf
test
xor
fs
outs
xor
push
push
pop
es
leave
and
ret
add
rol
leave
test
dec
movs
loopne
mov
and
jmp
fucomip
lea
scas
lock
xchg
sbb
dec
adc
adc
popa
sbb
inc
and
adc
jmp
sub
sbb
push
or
jno
and
jb
or
mov
cs
sbb
sbb
clc
jb
clc
or
and
add
jge
cmp
dec
movs
mov
jae
ja
nop
pop
repnz
clc
hlt
clc
imul
clc
dec
in
fwait
adc
push
pop
xor
in
clc
lock
and
lock
nop
add
xchg
movs
ins
and
fdiv
rcr
xchg
iret
fdivr
aam
sbb
and
movs
jbe
fdivr
jmp
push
mov
xor
push
cmp
mov
clc
xchg
fs
out
ja
popf
dec
xchg
outs
enter
mov
mov
or
mov
sbb
shl
cld
mov
mov
fs
retf
lods
mov
mov
jb
mov
dec
jns
push
push
xlat
and
lods
dec
xor
jae
mov
mov
jns
sub
add
mov
retf
int3
rol
call
stc
call
sub
stos
pop
xchg
(bad)
rcl
pop
aas
inc
or
dec
stos
sbb
sbb
dec
es
xor
nop
mov
mov
or
cld
sti
adc
nop
comiss
or
adc
cli
sub
and
push
add
inc
cs
cmp
inc
(bad)
add
dec
pop
scas
adc
sbb
xchg
dec
jp
inc
sbb
push
lds
sbb
cmp
or
loopne
movs
jns
call
dec
jnp
sbb
dec
sbb
(bad)
lods
std
pusha
lods
mov
jl
push
imul
push
enter
push
enter
out
add
pop
inc
sbb
push
fisub
inc
jl
jle
neg
in
pop
push
push
cmp
into
test
or
mov
rol
les
dec
in
mov
xor
xchg
mov
mov
mov
in
test
test
xchg
or
pop
jb
lods
lods
jecxz
pop
sub
in
imul
mov
push
lahf
push
ret
and
and
or
je
jnp
sbb
daa
lea
lods
adc
pop
ficom
xchg
mov
xchg
movs
sbb
sub
movs
mov
jl
xchg
and
test
leave
test
dec
and
test
or
jl
jl
nop
jo
or
add
adc
pop
pop
xor
xchg
add
lahf
adc
xor
je
cmp
shl
xchg
dec
jae
sbb
test
push
(bad)
and
dec
mov
pop
mov
xchg
in
es
inc
mov
cdq
in
inc
dec
dec
in
dec
xchg
xchg
add
cmp
sub
jb
movs
mov
xor
jb
xchg
jl
cmp
and
xor
mov
and
push
cmp
in
es
in
dec
mov
adc
retf
and
add
(bad)
fs
or
add
add
scas
adc
ds
sbb
cld
vmwrite
sub
cld
clc
cld
hlt
add
fld
lock
push
cmp
hlt
cld
call
xchg
dec
call
mov
sbb
cld
push
and
stc
test
loopne
loopne
add
cld
popa
rcl
or
xchg
xlat
fadd
repnz
xchg
cld
fdivr
fdivr
ror
xchg
je
xchg
rcl
dec
push
cmp
in
es
in
dec
xchg
rol
retf
and
add
fs
mov
cs
add
or
pop
movs
xchg
test
sub
cmp
call
mov
mov
sub
xor
mov
cwde
fwait
cdq
in
adc
pop
pushf
pushf
xchg
dec
mov
mov
cld
cdq
mov
test
test
cdq
in
xchg
js
cmp
je
es
jo
fs
retf
test
pop
xchg
push
push
push
push
fs
ins
ins
pop
mov
pop
pop
clc
pop
mov
mov
mov
adc
xchg
out
and
mov
enter
movs
and
dec
jb
movs
jb
movs
cmp
inc
add
cld
mov
jo
mov
nop
out
nop
pop
xor
xor
cmp
iret
and
popa
fisubr
sub
in
sub
es
sub
in
pop
inc
mov
dec
sbb
dec
ds
and
xchg
mov
out
retf
push
pusha
stos
adc
and
push
mov
jb
add
add
xchg
pop
or
fistp
xor
cmps
clc
sti
pop
xchg
xchg
cmp
clc
sti
inc
inc
or
jns
imul
push
(bad)
(bad)
push
cdq
bound
in
inc
es
and
xor
xor
jo
dec
mov
inc
dec
push
xor
and
push
and
and
ins
dec
mov
xchg
test
leave
test
cmps
sub
inc
lods
push
inc
popa
mov
mov
cmps
pusha
xchg
enter
es
fs
aam
fsub
dec
xor
inc
in
popa
lock
xchg
jo
xchg
clc
add
xchg
imul
fs
sbb
es
xchg
and
sub
leave
mov
cmp
cmp
leave
and
dec
inc
dec
dec
and
dec
xor
pop
dec
cmps
pop
enter
jo
das
popa
xchg
je
mov
imul
imul
mov
and
mov
lods
xor
popa
sub
xchg
cmp
push
or
std
pop
add
or
xor
mov
dec
das
xlat
push
(bad)
pop
mov
adc
push
inc
push
es
imul
in
and
adc
hlt
lock
loopne
lock
xchg
or
loopne
xchg
xchg
retf
aam
aam
test
aam
sub
int3
cld
leave
test
enter
movs
xor
rcl
outs
and
les
push
inc
sbb
test
sub
addr16
add
test
retf
cld
xchg
add
mov
add
in
jb
div
push
adc
repnz
retf
(bad)
les
sub
xor
outs
pop
push
push
movs
xor
mov
mov
add
mov
add
jl
sub
retf
lock
push
lock
cld
mov
or
pop
std
sub
aas
mov
sbb
or
mov
fcmovb
xchg
pop
inc
cs
sti
pop
adc
xchg
test
ja
dec
push
ins
sbb
lahf
jno
mov
mov
add
int3
pop
sub
ret
call
retf
ins
push
pop
dec
cmp
shr
es
call
mov
mov
nop
add
cmc
fimul
inc
fdivr
xchg
sahf
sub
mov
dec
aam
mov
fcomp
and
int
xor
mov
and
daa
sbb
mov
dec
push
sbb
(bad)
enter
cmp
or
jg
pop
jmp
iret
xor
sar
dec
movs
mov
mov
ss
cmps
test
int
mov
dec
lods
mov
jae
mov
loopne
cld
test
xchg
or
movs
movs
pushf
mov
xor
cdq
not
cwde
xchg
adc
xchg
fstp
nop
nop
mov
add
mov
jl
int
test
movs
pop
and
jl
mov
xchg
add
and
sti
sbb
in
in
and
dec
mov
shr
fmulp
cs
xlat
adc
es
pusha
clc
adc
pop
ret
pop
pop
cs
push
pop
push
rcr
jo
adc
enter
hlt
pop
push
test
je
aam
shl
pop
es
push
adc
fs
pusha
dec
dec
mov
inc
xchg
add
movs
stos
cmp
ret
xchg
ss
xor
fs
retf
and
cmp
cs
push
cs
sub
fdiv
nop
dec
xor
loopne
mov
test
fcomp
xchg
sub
imul
xor
push
pusha
xchg
fs
sub
je
add
test
push
jbe
push
mov
dec
dec
mov
in
mov
mov
fdiv
fcomp
add
ror
in
leave
adc
mov
xor
pop
add
adc
or
mov
adc
xchg
mov
lea
xchg
hlt
mov
int
pop
jno
sub
imul
clc
mov
dec
mov
push
mov
retf
aas
mov
cmps
(bad)
mov
add
test
shl
aaa
xchg
rcl
or
repnz
jne
jp
sub
inc
add
pop
and
jno
fdiv
pop
in
mov
(bad)
pushf
(bad)
imul
(bad)
push
inc
xchg
mov
jae
xchg
pop
sbb
and
adc
jle
or
or
sub
sub
in
sbb
xchg
out
sar
add
arpl
rcr
lods
pop
and
adc
mov
retf
icebp
mov
mov
or
inc
mov
jb
ins
ins
and
or
cs
fs
repz
cmps
loopne
xchg
adc
jecxz
test
sub
jecxz
imul
dec
or
inc
sbb
fnstsw
in
ins
iret
xchg
js
jl
enter
and
xchg
inc
dec
sub
add
ja
adc
mov
adc
cmp
mov
pusha
dec
fwait
ror
sub
sub
dec
inc
addr16
pop
ret
add
lea
hlt
jge
fild
rol
sbb
dec
lea
sbb
mov
les
dec
push
dec
add
rol
cmc
jp
mov
cmp
mov
(bad)
sbb
mov
inc
test
mov
out
cmp
push
jnp
shl
ffree
mov
scas
test
repnz
test
push
dec
add
or
push
fmul
or
mul
cmp
jns
lock
enter
pop
call
lods
add
dec
cmp
test
cmps
adc
mov
repnz
movs
jb
inc
add
repnz
jnp
je
jle
adc
xchg
inc
call
xchg
jl
(bad)
gs
retf
pop
int
xchg
pop
xor
pusha
pusha
aam
push
and
dec
sub
push
pop
push
mov
dec
iret
inc
es
retf
and
idiv
fs
rol
fs
dec
dec
aaa
cmp
cs
push
sar
lods
fs
nop
inc
mov
inc
rol
cmp
push
fdiv
xor
pop
mov
mul
repnz
and
movs
xor
pop
fdivr
nop
in
xchg
repnz
rcr
repnz
pop
retf
and
cmp
call
adc
push
imul
aad
test
mov
pop
loopne
or
out
inc
jns
mov
nop
jp
dec
rol
adc
cmp
push
pop
push
loopne
repnz
es
(bad)
or
fs
inc
or
or
add
in
adc
sbb
movs
in
cmp
xchg
mov
stc
add
push
and
jle
call
add
imul
jo
mov
xlat
test
js
test
mov
out
fucom
add
jne
adc
or
repz
mov
outs
jns
add
push
sbb
xchg
loop
fld
adc
loopne
mov
sbb
enter
adc
pop
sub
movs
iret
ins
cmp
adc
inc
cmp
sub
in
or
call
bnd
xchg
mov
js
jle
push
inc
push
dec
loopne
clc
sbb
loope
pop
add
xchg
ror
test
adc
and
loope
inc
sub
(bad)
fsubr
jne
pop
cli
icebp
icebp
mov
aad
push
repnz
outs
(bad)
repnz
xor
inc
test
xchg
fs
dec
sub
mov
pusha
out
cmp
inc
imul
cdq
inc
dec
sub
xor
push
push
pop
pop
dec
xor
and
fs
inc
ins
jo
outs
mov
adc
xchg
lahf
add
push
jns
ins
jno
stos
dec
add
jmp
cmp
or
push
cli
lea
pop
fdivr
mov
mov
xor
mov
lock
mov
icebp
pop
jmp
inc
sub
and
or
or
stos
adc
mov
or
in
mov
mov
clc
movs
shl
sub
adc
cmp
xchg
lahf
add
and
mov
clc
add
add
add
xchg
ror
aas
cdq
fs
in
scas
push
inc
push
div
pop
lahf
sub
adc
js
mov
jne
adc
clc
jmp
sbb
sub
xchg
pop
out
push
call
retf
sbb
shr
lods
hlt
div
mov
push
dec
out
or
je
mov
add
mov
inc
and
sub
not
in
imul
mov
cmp
fmul
dec
mov
mov
es
loopne
xor
fcomp
fcomp
pusha
add
(bad)
jns
or
call
in
push
cmp
lock
xor
xchg
cwde
jg
push
scas
mov
inc
add
movs
sar
les
lds
add
adc
sub
jge
arpl
mov
je
loop
mov
int
jecxz
in
imul
adc
cmps
or
push
clc
outs
sbb
dec
xor
cld
mov
dec
and
adc
pop
(bad)
clc
cld
adc
mov
sti
mov
add
hlt
lock
sbb
inc
lock
push
xor
xor
add
cmp
or
xchg
pop
jmp
xor
push
add
shl
lahf
loopne
hlt
nop
ja
imul
pop
push
and
cmc
add
in
sub
pop
out
(bad)
add
nop
or
pop
cmps
mov
pop
(bad)
mov
and
add
les
xchg
inc
adc
mov
inc
shl
(bad)
lock
movs
push
and
hlt
ss
or
cwde
mov
in
cmp
test
in
pop
hlt
jno
adc
jmp
jno
retf
sub
aaa
add
adc
xchg
loope
es
ret
in
lock
fisubr
xchg
and
add
lods
jb
sub
lock
test
loopne
xor
gs
(bad)
add
push
or
dec
xchg
enter
sbb
adc
jno
pop
or
pop
cmp
inc
or
pop
dec
cmp
xchg
cmp
mov
stos
pop
or
adc
out
inc
jle
(bad)
loop
call
shl
ror
retf
adc
dec
pop
xor
xor
(bad)
cmps
adc
addr16
(bad)
pop
xor
cmp
das
add
xor
lldt
data16
sub
into
jae
pop
sar
dec
cs
add
add
popa
push
xchg
pop
xor
cmp
clc
(bad)
nop
iret
rcl
call
cmp
xor
xchg
xchg
(bad)
dec
or
rol
dec
or
mov
nop
test
xchg
mov
jnp
mov
scas
movs
jmp
aam
daa
sbb
in
aam
je
das
mov
mov
fidiv
mov
sbb
or
jno
cmp
add
and
loop
jbe
and
js
lods
jmp
nop
ja
mov
cmp
xor
jb
mov
mov
push
bound
retf
dec
push
sub
xchg
dec
xor
test
or
cdq
or
aaa
(bad)
cmp
sub
lods
mov
mov
sub
mov
inc
mov
in
cld
les
enter
push
cmp
pusha
rol
xchg
mov
fadd
fsubr
nop
retf
loopne
xchg
sbb
dec
in
push
in
fs
js
mov
xchg
mov
iret
inc
add
enter
in
loopne
clc
or
test
adc
adc
sub
nop
retf
sbb
and
and
sub
lods
sbb
cmp
xor
xchg
inc
sub
in
retf
pusha
inc
cmp
dec
push
test
fcom
sub
push
and
pop
dec
pop
ins
push
cmp
push
ds
mov
sub
mov
js
sbb
push
mov
retf
inc
mov
nop
out
nop
rcl
cmp
cmp
mov
pop
xchg
mov
sbb
mov
mov
cmp
fwait
sub
enter
xchg
inc
int3
test
xchg
arpl
nop
lods
aam
sbb
retf
or
sub
inc
in
mov
test
lods
xchg
push
movs
pop
sbb
pusha
mov
inc
sub
in
or
retf
popf
call
cmp
inc
clc
fs
xchg
test
aad
shl
inc
add
or
or
loope
fidivr
sbb
jb
or
gs
out
shl
and
(bad)
int3
mov
shr
sbb
inc
cs
shr
xor
ins
xor
stc
sbb
pop
hlt
push
retf
enter
inc
cld
cmp
and
add
or
or
adc
test
jmp
sbb
and
xchg
xchg
retf
ret
and
mov
test
sub
xor
xor
cmp
enter
push
xchg
xchg
inc
dec
dec
inc
dec
mov
push
daa
push
in
jb
sbb
pop
dec
in
add
add
xchg
retf
out
fldcw
pop
inc
cs
js
xor
mov
retf
enter
mov
xchg
xchg
jno
fs
mov
mov
jb
cmp
retf
enter
push
shl
xchg
xchg
or
sar
add
out
mov
(bad)
aam
enter
sbb
cs
in
scas
fwait
sbb
inc
xchg
in
loopne
call
jne
ins
repz
out
lods
arpl
adc
mov
xor
dec
adc
mov
sti
cmps
aas
(bad)
shl
sub
movs
mov
aad
sub
mov
pushf
add
or
scas
add
into
ins
imul
lods
jge
jae
pop
(bad)
(bad)
jmp
inc
push
pop
pop
jae
je
arpl
push
jl
sbb
aas
or
aam
fbld
daa
or
int
(bad)
or
(bad)
data16
sbb
or
scas
push
jne
pop
push
jb
daa
push
jns
imul
pop
arpl
cmp
dec
outs
(bad)
mov
fs
gs
ret
mov
add
call
mov
xor
fmul
jno
rcr
repz
adc
rcl
call
fs
push
and
add
or
loopne
cmp
inc
leave
ins
shr
arpl
es
xor
pop
dec
popa
xchg
fs
pop
sbb
jo
jnp
imul
imul
xor
mov
pop
xchg
or
das
or
and
pop
ja
push
ja
dec
sahf
div
ja
js
add
pop
dec
xchg
das
or
xor
imul
adc
push
and
test
aaa
or
add
arpl
and
(bad)
aaa
lahf
xor
popa
push
jb
xor
imul
sub
aas
test
stc
push
dec
push
jbe
das
dec
mov
xor
sbb
fdiv
lods
pop
xchg
pop
aas
adc
ins
sub
push
mov
sub
stc
ins
loop
sub
out
jae
(bad)
cmp
adc
sbb
inc
push
arpl
xor
and
sbb
push
mov
test
je
(bad)
stos
idiv
sbb
pop
dec
aas
stos
push
push
dec
push
inc
or
push
fisttp
add
inc
or
dec
dec
and
sti
push
imul
imul
fistp
iret
outs
outs
jo
add
dec
inc
dec
ins
inc
outs
pushw
or
aaa
push
xchg
lods
jmp
nop
add
in
push
mov
sub
adc
push
and
pop
xchg
xchg
mov
fs
fiadd
and
fdiv
push
aas
and
lahf
sbb
les
inc
jae
je
mov
(bad)
cmp
cdq
adc
and
arpl
push
inc
dec
inc
rol
push
and
stos
or
(bad)
fs
mov
rol
(bad)
or
sub
sub
xchg
pusha
xor
call
push
jbe
mov
das
lock
xor
inc
inc
imul
ror
xlat
and
imul
xchg
stos
and
aaa
icebp
inc
maskmovq
imul
dec
inc
push
movs
push
imul
aas
sar
and
adc
push
cmc
ja
pop
push
lds
jae
inc
push
pop
push
ret
add
ins
cmp
ret
aaa
mov
mov
pop
fcmovnb
shl
inc
and
cmp
stc
mov
mov
das
xor
psrld
cmp
jb
das
adc
adc
fs
aaa
pop
outs
adc
xchg
add
ja
data16
or
pop
mov
fsub
mov
fist
or
mov
js
push
inc
scas
ja
in
test
ja
jle
add
or
and
out
mov
adc
adc
or
or
sbb
push
icebp
xchg
loopne
mov
out
fiadd
rcl
add
mov
ret
ja
pop
(bad)
out
sahf
fs
inc
dec
sbb
(bad)
sahf
dec
jae
mov
sbb
push
jno
mov
outs
stc
ins
or
add
in
lahf
jo
in
add
jo
je
in
push
jo
mov
js
inc
sbb
inc
mov
adc
sbb
and
ret
cs
or
or
and
or
jbe
adc
fdiv
adc
xchg
test
mov
test
or
inc
movs
imul
push
dec
sar
ins
push
outs
mov
mov
push
iret
add
adc
ins
or
push
pop
fcomp
bswap
jae
out
add
push
jb
and
shl
jb
adc
inc
dec
dec
outs
and
lods
push
sub
lds
nop
ins
mov
sub
pusha
add
or
push
inc
cdq
stos
repnz
dec
push
add
push
in
mov
loope
das
test
ins
mov
lea
or
cdq
ror
fnsave
call
pop
or
dec
loopne
rol
call
popa
xor
jnp
imul
scas
jbe
and
add
or
sbb
add
mov
invd
or
fcom
jns
cdq
pop
or
and
shl
or
in
or
mov
loopne
cmps
jo
je
inc
push
dec
or
add
cmp
repnz
pop
mov
inc
mov
cdq
shr
sbb
dec
adc
movs
dec
push
sbb
push
sub
lds
dec
inc
ret
push
or
int3
sahf
and
dec
inc
cmp
je
ret
cs
xchg
inc
imul
pop
repnz
inc
adc
inc
inc
movs
js
lods
movs
out
pop
daa
jb
adc
fadd
dec
not
in
and
int3
call
int3
sbb
or
jbe
xchg
jmp
movs
mov
cmps
pop
or
aam
nop
setp
fdivr
mov
mov
adc
nop
dec
sar
cmps
mov
xor
dec
or
dec
ror
repz
inc
push
out
mov
ds
xchg
lock
push
sbb
popa
push
and
out
iret
adc
push
lods
pop
dec
xor
xchg
stos
cmps
inc
aad
mov
mov
cld
adc
adc
dec
pop
scas
add
fcom
or
call
movs
or
xor
adc
adc
out
add
pushf
sbb
clc
xor
adc
cmps
lock
jg
test
loopne
mov
fidiv
inc
jno
or
mov
adc
lahf
call
jo
cs
xchg
push
jnp
imul
lock
ss
push
fs
add
dec
ret
or
cmp
or
adc
push
pop
jl
and
bnd
adc
add
aad
or
adc
push
lds
xor
test
scas
sub
loope
into
test
lods
xor
pop
sbb
jg
xor
or
sbb
movs
jns
sub
scas
push
iret
rcr
or
(bad)
fsubr
aaa
add
jg
rol
pusha
mov
fs
dec
jl
dec
jb
dec
mov
les
jns
xchg
enter
and
sbb
ss
(bad)
test
cmps
cmp
adc
test
inc
cs
cmps
lock
cwde
pushf
sbb
cs
inc
repz
add
lods
sbb
cmp
or
mov
xlat
jo
stos
mov
nop
mov
pop
xlat
fcomp
cmp
nop
mov
iret
inc
lods
cdq
or
xchg
inc
lods
push
mov
adc
jp
nop
test
xchg
mov
pop
lods
lods
dec
sbb
mov
pop
daa
adc
daa
ficom
xlat
sbb
es
inc
fadd
fisub
sar
mov
dec
adc
ds
outs
loopne
in
popa
jb
adc
inc
ror
leave
scas
shl
xchg
fild
fwait
push
gs
ror
mov
xor
fsub
push
lea
inc
sub
or
pusha
popf
fsub
clc
ret
cwde
add
mov
into
movs
mov
add
imul
sahf
hlt
xor
out
iret
outs
fld
ins
push
pusha
ins
inc
push
mov
das
inc
sbb
mov
jns
mov
(bad)
pop
test
fadd
in
xchg
push
out
or
xchg
mov
xor
or
push
pop
cmp
(bad)
and
mov
(bad)
cmp
add
adc
pop
mov
add
dec
add
add
and
sbb
push
add
add
pusha
pop
ret
jle
mov
jmp
add
push
or
xchg
lock
test
pop
aam
mov
fsub
sbb
aas
or
jne
add
add
(bad)
outs
add
push
sbb
jns
or
fcmovnu
pop
ins
mov
pop
(bad)
mov
ins
adc
ret
mov
push
pop
aam
sbb
adc
cmp
sub
cwde
fstp
push
mov
inc
daa
mov
nop
mov
lds
and
aad
mov
dec
rcr
jg
inc
push
ret
or
mov
xchg
and
test
cmp
fist
ror
ins
mov
mov
add
pop
hlt
inc
or
or
nop
xchg
adc
shr
mov
dec
idiv
dec
add
xlat
call
sub
test
adc
adc
call
sbb
outs
inc
sbb
shr
(bad)
shl
mov
or
fstp
mov
fist
aad
hlt
and
int
adc
sub
retf
sub
adc
or
sub
js
jle
jo
jle
loope
sub
arpl
mov
or
int
adc
xchg
push
inc
dec
sahf
mov
sbb
addr16
cmps
das
in
mov
mov
xchg
ret
adc
or
or
xor
sti
cmps
inc
adc
adc
sbb
mov
pusha
sbb
pop
sbb
bound
jg
xchg
and
sbb
cmps
pop
shl
add
js
inc
jb
add
jl
jns
sub
sbb
dec
sub
push
xor
xchg
fisub
ret
sbb
mov
or
jl
call
adc
movs
add
sbb
xchg
push
mov
sbb
add
dec
test
pop
sbb
mov
je
add
mov
push
add
add
loop
mov
adc
and
sub
push
aas
cmp
adc
dec
daa
pop
sbb
jb
adc
pusha
dec
les
or
lea
test
sub
in
js
cmp
ret
cld
xchg
stos
xchg
call
retf
ret
mov
fst
test
xor
add
adc
mov
daa
fdiv
inc
cmp
or
xchg
add
imul
rol
ds
retf
jnp
aaa
mov
call
cwde
xchg
jnp
adc
and
pop
cmp
jl
add
or
mov
mov
sub
in
push
xchg
adc
(bad)
jbe
xor
sub
or
cwde
dec
rcr
jnp
int
cmp
movs
nop
daa
add
stos
daa
fwait
add
add
and
mov
lock
sti
cmp
jg
push
es
and
push
aaa
cld
pusha
das
pop
enter
inc
fs
or
gs
fwait
lock
in
xchg
adc
add
pmulhuw
stos
xor
sbb
daa
js
mov
pop
dec
ja
inc
or
aaa
ins
mov
or
cmp
dec
imul
(bad)
dec
push
xor
or
jle
ret
push
jle
data16
je
xor
popf
(bad)
aas
dec
pop
xchg
rcl
push
inc
jl
pop
sar
(bad)
mov
jns
movs
test
jne
aad
cmp
imul
out
addr16
adc
pop
fs
fdivr
dec
cwde
movs
in
std
sar
jg
mov
mov
mov
push
inc
jno
add
sub
je
test
popa
out
inc
and
pusha
push
or
cdq
mov
add
xchg
iret
movs
or
jb
and
adc
pop
fdiv
ins
adc
jae
and
inc
or
fwait
add
pop
cmp
rol
aam
xor
xchg
add
push
pop
jns
dec
push
imul
dec
repnz
jb
adc
mov
ficomp
sbb
add
pop
fcomp
pop
adc
je
push
add
sbb
mov
sar
xor
mov
sbb
mov
xor
sbb
lods
test
mov
xchg
call
shl
pop
mov
sub
push
jl
push
add
mov
ret
adc
imul
pop
adc
clc
push
mov
jo
xchg
rol
test
pop
fwait
push
dec
sbb
push
aad
inc
test
fimul
inc
lds
(bad)
rcr
fincstp
add
test
sub
jb
push
cmp
mov
aas
sub
(bad)
shr
cmp
sbb
(bad)
sahf
(bad)
mov
dec
addr16
cmp
fadd
and
ror
inc
xchg
daa
inc
es
ror
clc
adc
test
push
push
inc
jge
xor
movs
push
mov
stos
(bad)
pmulhuw
mov
jmp
and
mov
add
inc
gs
and
adc
repnz
fmul
inc
fmul
mov
pop
xor
mov
pop
ror
in
ds
or
or
stc
lods
sub
sbb
arpl
or
outs
fadd
nop
leave
out
inc
ja
adc
push
pusha
repz
jp
pop
jb
aam
shl
in
add
mov
bsf
scas
mov
xlat
xor
or
in
mov
adc
sub
sbb
in
push
mov
iret
mov
adc
ret
shr
add
sub
in
lds
loope
(bad)
inc
into
mov
and
mov
sub
in
ss
dec
pusha
or
(bad)
repz
dec
sahf
or
or
std
dec
sbb
and
pop
inc
das
jge
add
repz
lock
je
(bad)
mov
adc
or
jbe
add
add
mov
fcomi
push
mov
mov
mov
in
enter
mov
stos
push
adc
pop
push
sub
outs
sub
rcl
rcr
xchg
mov
cmc
sub
mov
lahf
inc
ficom
hlt
retf
and
or
sub
cmp
jl
mov
inc
ds
adc
mov
inc
sahf
in
hlt
cmp
push
nop
pop
lahf
test
cwde
adc
adc
jmp
push
leave
xchg
fild
or
xor
xor
idiv
pop
mov
mov
and
xlat
pop
or
jnp
lods
dec
mov
sbb
xor
mov
xchg
in
xchg
inc
sub
mov
xlat
or
adc
mov
shl
or
mov
dec
call
and
dec
cmp
inc
inc
dec
cmp
xor
sub
cmp
dec
dec
inc
sbb
mov
dec
aaa
pop
ret
dec
dec
push
or
lahf
add
sbb
or
dec
lods
sub
pusha
add
mov
xchg
or
push
push
(bad)
das
dec
cmps
fs
xchg
inc
pop
movs
idiv
cmp
(bad)
in
pop
push
clc
scas
(bad)
(bad)
push
aam
push
call
mov
pop
je
and
repz
scas
pslld
aam
cmp
inc
dec
out
push
and
xor
add
sbb
mov
loopne
push
bound
cmp
ins
and
jbe
xlat
cmp
rcl
mov
mov
pushf
fcomp
pop
test
jmp
sbb
fs
pop
sbb
daa
(bad)
cmp
nop
pop
sti
dec
mov
mov
inc
jle
pop
and
jb
add
add
or
inc
mov
sbb
pop
js
das
add
aaa
inc
add
nop
mov
jbe
add
stos
and
cmp
inc
hlt
in
das
data16
loopne
dec
sub
mov
out
add
add
(bad)
xor
aad
add
dec
and
push
add
push
mov
fadd
ja
cmp
sub
pop
xchg
push
mov
in
cmp
repz
ret
push
sti
or
and
add
xchg
mov
jns
jo
inc
inc
retf
xchg
stc
mov
js
add
pop
outs
mov
mov
push
mov
enter
inc
cld
retf
mov
push
fst
sub
sbb
jp
lea
add
xor
sbb
and
mov
ins
mov
sub
jl
call
je
xchg
xor
xor
in
jns
neg
nop
movs
loopne
adc
loopne
ss
popf
das
or
add
ins
jmp
inc
dec
call
retf
pop
scas
mov
or
setae
test
cmp
enter
lock
gs
push
mov
xor
cmps
mov
ret
inc
leave
push
adc
shl
sar
int
add
pop
repnz
sbb
or
ror
cmp
sbb
lahf
pop
push
lds
inc
icebp
mov
jmp
add
in
push
xor
xchg
cmp
add
out
inc
int
ins
add
pop
cmp
add
push
(bad)
jns
sbb
mov
pop
sub
dec
sbb
ins
add
lods
sub
push
xchg
xlat
sbb
push
lock
out
les
pop
test
mov
shr
or
sub
add
dec
xchg
dec
dec
xchg
les
imul
in
add
(bad)
nop
mov
or
inc
pop
add
sti
push
cmp
loopne
dec
mov
(bad)
fidiv
xlat
pop
test
out
cmp
arpl
push
mov
jo
mov
and
fsubr
jb
(bad)
ins
rol
inc
jae
dec
add
push
sti
xor
hlt
or
(bad)
or
or
mov
mov
scas
xor
test
xchg
and
and
sbb
and
test
jp
inc
sub
add
add
and
or
inc
cs
sbb
das
das
ja
cs
cmp
jb
sbb
xchg
addr16
jmp
inc
outs
jo
addr16
and
xor
sub
js
or
test
(bad)
std
pop
and
ja
sub
fs
sub
je
ret
sub
push
imul
mov
and
cmps
add
cs
jmp
cmps
push
xor
lea
ror
les
or
dec
jmp
dec
les
fs
inc
or
shl
test
pop
add
mov
cmp
lods
test
push
inc
js
xchg
or
dec
mov
pop
lods
sbb
das
dec
hlt
add
pusha
add
mov
inc
mov
sub
inc
mov
ror
aaa
jbe
movs
aam
ds
rcl
adc
ror
movs
sbb
aam
ret
jg
idiv
enter
sub
in
ffree
sub
(bad)
pop
sbb
mov
cmp
fwait
rol
sar
or
dec
jle
inc
aam
outs
enter
add
pop
mov
or
add
or
(bad)
or
lds
jle
cmp
clc
(bad)
es
dec
fs
dec
jne
(bad)
mov
add
xor
dec
push
aaa
retf
sbb
pop
nop
push
push
mov
mov
fimul
push
dec
push
fsub
add
pop
inc
arpl
jp
inc
mov
xor
inc
cmp
sub
xchg
or
add
daa
lds
and
add
mov
stos
cmc
mov
(bad)
(bad)
push
adc
lods
and
or
ret
ss
cs
add
jge
and
add
push
aad
jmp
adc
ret
pop
jae
push
pop
and
imul
and
sar
mov
cmp
inc
les
xor
sbb
xor
mov
in
rol
fsub
int
mov
mov
adc
adc
add
pop
fsubr
aam
dec
and
cmp
mov
jne
add
loopne
cwde
dec
ret
fs
jmp
sub
lock
in
in
dec
push
push
add
fdiv
sbb
sbb
push
mov
dec
and
fdivr
lods
or
adc
xor
aam
lock
call
or
rcr
lock
dec
cmps
pop
movs
cmp
int3
push
int3
push
mov
add
mov
pop
fucomip
fild
rol
dec
imul
stos
enter
ins
push
push
inc
rcr
and
adc
lods
pop
xlat
ss
inc
rol
les
into
mov
popa
cmp
mov
add
jp
lea
dec
shl
lods
repz
adc
lods
pop
nop
sbb
ror
shr
test
add
cdq
movs
rcl
mov
cdq
in
movs
pushf
loope
rcl
imul
cwde
enter
xchg
aas
lock
call
icebp
pop
dec
push
imul
push
popa
xor
cdq
push
and
push
popa
mov
mov
inc
and
mov
loopne
aad
or
fld
test
(bad)
and
lds
cli
sub
cwde
jo
push
or
xchg
rcr
lea
retf
mov
pop
mov
clc
sbb
gs
dec
mov
and
and
xor
xchg
js
cmp
jp
lods
movs
ss
sbb
dec
pop
loopne
les
add
jge
test
xchg
push
lock
popa
dec
xchg
sub
cwde
adc
dec
data16
lock
inc
fdiv
inc
mov
rcr
dec
adc
push
pop
nop
xchg
fmul
pop
dec
mov
and
mov
and
add
xchg
sub
pop
(bad)
rcl
cmp
xor
inc
call
inc
cmps
sbb
imul
pushf
mov
mov
frstor
mov
cdq
fs
add
les
rcr
mov
sbb
add
stos
retf
fcom
xchg
inc
ret
ret
add
jnp
xchg
xchg
cmp
in
or
and
dec
in
xchg
inc
shl
js
or
sbb
outs
leave
icebp
add
in
in
call
xor
or
and
add
mov
or
mov
mov
or
cs
sbb
test
inc
lock
pop
mov
inc
in
mov
ret
les
je
and
fisubr
rcr
push
fldenv
jg
arpl
jmp
sbb
inc
xlat
lahf
adc
xchg
add
sar
adc
loop
adc
ja
test
inc
mov
add
adc
push
pop
pushf
mov
ds
jge
push
ret
or
es
cwde
xchg
(bad)
add
test
clc
xor
nop
loop
ja
mov
inc
pop
call
(bad)
mov
bswap
bound
mov
jecxz
and
adc
push
daa
push
clc
icebp
(bad)
fdivr
add
loopne
bound
icebp
ins
pop
clc
pop
mov
sbb
int3
or
sub
pop
push
leave
int
lods
inc
(bad)
sar
adc
inc
ins
fcom
out
ficomp
aam
or
jecxz
fwait
in
push
dec
mov
mov
or
loope
pop
push
mov
int3
clc
mov
adc
cmps
cwde
les
jle
call
push
jge
in
test
gs
iret
xchg
mov
pushf
mov
xor
imul
xchg
push
pop
out
or
mov
pop
mov
jnp
cmc
xchg
or
push
xchg
movs
push
jbe
add
lods
push
mov
mov
jge
sar
sbb
lock
ror
jno
xor
mov
or
arpl
shr
aaa
ret
sbb
enter
add
andnps
lods
fs
mov
xchg
adc
jo
cmp
or
or
ja
jb
imul
xor
cwde
xor
ret
push
pop
cs
jecxz
das
repnz
jecxz
shl
sbb
int
push
call
pop
add
and
jle
ja
add
in
and
xchg
out
(bad)
loopne
xor
push
retf
dec
dec
dec
rol
call
(bad)
pop
sbb
add
and
aam
ss
and
pusha
test
stos
add
xchg
mov
add
and
enter
int3
or
adc
jecxz
les
dec
sbb
inc
inc
adc
dec
or
out
hlt
sub
les
pop
test
push
fidivr
mov
push
mov
mov
cmp
inc
push
inc
fwait
push
mov
sbb
sub
sub
arpl
out
push
bound
add
aad
fcom
mov
mov
clc
nop
xchg
xchg
fisttp
cmp
and
or
mov
push
add
xor
test
dec
and
dec
adc
rcr
loopne
loope
add
push
xor
add
xor
lahf
cmp
popa
imul
mov
add
dec
outs
iret
jae
bndstx
dec
pop
push
leave
leave
leave
repz
mov
leave
leave
leave
pusha
fs
leave
jo
js
add
rol
fadd
add
and
xor
movs
add
and
sbb
in
(bad)
xlat
daa
lock
cld
mov
popa
dec
cmps
inc
and
xchg
add
dec
in
mov
dec
(bad)
cld
sub
fldcw
and
lock
add
or
fsincos
jo
push
cdq
in
loopne
mov
cdq
fs
fcomp
aam
lods
cdq
xchg
inc
es
rcl
int3
mov
cmps
in
enter
das
stc
fs
scas
les
mov
dec
add
mov
mov
nop
inc
cmps
imul
mov
mov
les
xchg
mov
and
scas
xchg
retf
jno
add
adc
mov
fadd
cmp
sub
cmp
outs
(bad)
movs
dec
adc
loop
pop
jmp
aam
mov
sub
dec
cmp
mov
push
pusha
add
pusha
stos
dec
test
daa
imul
leave
adc
pop
mov
xchg
test
xlat
cwde
in
dec
nop
mov
xchg
(bad)
sub
jne
dec
sbb
test
push
dec
ds
xchg
jmp
cmp
dec
jge
add
pop
cmp
mov
ins
sbb
push
and
xor
sub
mov
dec
pushf
fwait
cmp
leave
iret
mov
test
xchg
pop
shr
adc
jns
imul
or
ret
sahf
data16
dec
stos
mov
or
bswap
enter
je
jo
push
fs
lods
jo
push
inc
push
fs
ins
push
xchg
push
jb
fs
scas
cdq
xchg
add
xchg
xchg
add
movs
dec
push
mov
push
xchg
push
inc
push
push
push
mov
ins
inc
in
lea
movs
xchg
test
loope
or
stos
xchg
stos
and
pop
mov
xor
ds
mov
call
enter
iret
xor
test
and
aad
and
mov
lock
xchg
loope
inc
xor
es
movs
mov
xchg
lea
xchg
test
mov
aad
out
loope
pop
sbb
and
outs
es
add
mov
xchg
dec
push
adc
pushf
push
repnz
adc
test
pop
cmp
and
ret
push
sbb
rol
ret
fbld
sbb
xchg
xor
sub
xchg
dec
mov
cmp
and
cmp
dec
cmps
in
loop
mov
loop
mov
mov
adc
rcr
push
xchg
ror
dec
pop
daa
or
xchg
sbb
adc
jecxz
or
int
(bad)
ror
mov
xchg
jmp
out
adc
mov
add
lock
mov
inc
in
mov
test
add
and
xor
loope
mov
test
iret
mov
push
call
push
or
fs
or
pop
jae
sbb
mov
jb
mov
nop
out
push
mov
push
dec
ror
leave
or
xchg
or
inc
inc
inc
push
jns
inc
inc
cmp
cmp
push
xor
out
adc
or
in
add
nop
out
pop
pop
adc
xor
fdiv
scas
hlt
xchg
cmp
inc
xchg
lock
and
add
adc
xchg
scas
adc
add
xor
xchg
(bad)
clc
clc
and
xor
hlt
fist
es
lock
retf
ret
jmp
int3
arpl
ficom
pushf
or
ss
aad
xor
das
or
inc
stos
add
stos
hlt
adc
xchg
cli
clc
jle
xor
adc
pop
cld
pop
cmp
call
daa
xchg
call
mov
adc
add
sar
add
cmc
ret
sub
xchg
xchg
lahf
sbb
ret
in
or
fs
int3
inc
mov
cmp
data16
or
test
jbe
add
dec
cmp
in
sub
iret
xor
cmp
mov
sahf
xor
xor
iret
(bad)
sar
jns
out
add
mov
mov
sub
inc
call
add
sub
adc
imul
aas
mov
cmp
cld
movs
mov
inc
sub
rcl
sub
or
sub
mov
sub
pushf
pop
shl
inc
test
dec
out
xor
mov
jae
dec
add
inc
loop
fcom
mov
add
jmp
push
push
inc
fimul
or
xchg
sub
jo
and
pop
(bad)
in
push
dec
inc
mov
xlat
push
repnz
xchg
mov
and
test
in
mov
out
popf
call
hlt
sbb
call
movs
sub
cmp
cmp
cmp
sub
cmp
cmp
sbb
inc
cmp
adc
aad
dec
sbb
xlat
aas
jmp
inc
mov
dec
inc
mov
push
out
cmp
pusha
mov
in
test
xor
dec
adc
xchg
cmp
push
dec
in
paddsb
lock
sbb
dec
hlt
hlt
hlt
sub
mov
cmp
in
xor
dec
jmp
mov
pop
in
test
movs
in
xlat
xor
push
ja
mov
push
inc
daa
in
movs
sub
and
adc
push
jae
pushf
xor
pop
sbb
and
dec
adc
adc
sub
jno
or
sub
inc
outs
leave
ror
mov
xor
and
imul
lea
iret
push
mov
add
push
or
in
push
sub
or
push
pop
or
sub
inc
call
or
pop
call
leave
in
adc
or
push
pop
sar
mov
push
idiv
test
push
shl
pop
adc
dec
stc
or
add
pushf
adc
(bad)
or
cdq
movups
lods
push
or
cmp
add
call
cmp
call
inc
cwde
pushf
in
dec
mov
and
mov
xchg
adc
fist
(bad)
int
imul
loop
adc
push
sbb
in
enter
dec
fnstsw
(bad)
rcr
aam
clc
data16
jns
scas
sar
imul
hlt
(bad)
or
scas
push
jl
push
mov
xchg
pop
mov
hlt
lods
retf
mov
iret
mov
xchg
xchg
test
lods
lods
enter
mov
mov
xor
and
ins
mov
mov
sub
and
pushf
movs
(bad)
and
das
push
or
clc
pop
push
push
inc
fdiv
xchg
rol
jecxz
(bad)
loopne
jmp
fistp
mov
movs
sbb
movs
mov
in
add
pop
mov
out
cld
dec
sbb
punpcklbw
xchg
cmp
xor
cli
dec
and
mov
xor
bound
sub
sbb
push
mov
dec
adc
jmp
nop
mov
pop
mov
inc
cmp
cmp
call
xlat
pop
inc
and
rcr
mov
es
inc
inc
inc
add
movs
test
jl
scas
(bad)
pusha
sbb
xor
sbb
push
pop
and
adc
sub
inc
add
adc
jne
mov
xor
add
pop
fs
retf
sbb
mov
and
sbb
gs
rol
push
dec
leave
and
add
dec
add
in
push
push
push
pop
sbb
rcl
sub
and
sub
mov
push
pop
enter
sub
dec
mov
popf
sub
xchg
xor
or
les
scas
fs
sub
bound
push
call
fidiv
int3
xor
pop
xor
mov
add
push
xchg
das
inc
push
rol
rol
dec
in
xchg
das
mov
inc
es
test
nop
das
addr16
dec
rol
dec
daa
add
mov
or
jg
or
mov
push
cld
mov
xchg
sbb
(bad)
xchg
dec
jge
cli
jmp
jno
mov
loope
ins
sbb
pop
in
movs
xor
xchg
imul
sahf
pushf
fmul
push
mov
pop
fdivr
or
ins
das
mov
sti
cmp
cmps
and
movs
call
inc
push
adc
fnsave
imul
xor
lahf
or
adc
not
jmp
ins
push
sub
test
enter
enter
dec
mov
adc
and
dec
xchg
neg
test
push
ins
jne
xchg
mov
gs
xor
push
sbb
lock
ret
inc
fidiv
xchg
inc
mov
shr
pop
aad
in
dec
xchg
adc
into
push
dec
mov
scas
mov
sub
pop
mov
cwde
lods
test
retf
or
mov
(bad)
adc
call
aad
ss
clc
dec
mov
xchg
push
push
pusha
sbb
push
xor
int3
mov
int3
test
test
dec
loop
(bad)
add
jne
sbb
mov
dec
add
and
mov
xlat
mov
and
xchg
mov
sbb
xchg
lods
leave
mov
pop
or
pop
je
push
ds
or
enter
add
adc
dec
sti
shl
jb
cld
and
or
push
pop
dec
or
wrmsr
test
sbb
sbb
mov
(bad)
pop
cmp
add
jecxz
hlt
push
push
sbb
or
shl
dec
add
dec
inc
dec
jno
add
data16
ret
push
mov
cmp
dec
jae
ror
fsub
leave
cmp
fcom
leave
sbb
dec
push
and
sysenter
wbinvd
in
inc
push
cmp
mov
or
inc
or
stc
fcmovnbe
or
daa
push
ins
imul
push
mov
leave
cmp
rol
sub
dec
sub
pusha
daa
adc
dec
das
mov
clc
mov
clc
xor
lods
adc
lock
mov
daa
in
iret
add
xor
xchg
(bad)
aam
out
mov
and
or
jne
dec
pop
push
lods
mov
(bad)
mov
mov
push
fidiv
xchg
push
mov
and
mov
or
xor
into
mov
mov
mov
daa
jg
mov
addr16
mov
xchg
adc
and
xchg
mov
sub
sub
add
les
hlt
jnp
mov
inc
lods
fcom
and
xor
int3
hlt
add
into
add
cmp
mov
cmp
inc
outs
add
arpl
pop
(bad)
cwde
pushf
imul
(bad)
int
mov
xor
fnstcw
nop
sbb
and
jbe
popf
ins
inc
int3
jmp
inc
mov
sub
enter
and
xor
(bad)
mov
ret
pop
pop
and
adc
ins
aam
rep
test
and
adc
test
fdiv
xor
je
and
xor
jo
push
scas
mov
out
movs
sbb
lock
and
add
xchg
pop
fstp
pusha
adc
inc
or
loop
ss
inc
push
fidiv
popa
js
hlt
test
lods
or
pop
and
fbld
adc
mov
xchg
or
dec
mov
cmp
outs
push
pop
fist
stos
and
or
js
push
mov
jbe
dec
or
nop
cmc
pop
pop
cmp
(bad)
gs
dec
cmp
dec
sar
pop
pop
arpl
nop
dec
cs
pop
add
push
pop
fdiv
xor
je
add
aaa
lea
loopne
dec
xchg
push
retf
xchg
dec
adc
xchg
div
sub
shl
addr16
xchg
in
adc
into
jp
mov
enter
xor
and
inc
bound
xor
sub
movs
xor
pop
xlat
pusha
add
jo
dec
es
mov
push
or
add
xor
xchg
outs
mov
rcl
(bad)
(bad)
xor
sub
pushf
pop
loope
cmp
jae
hlt
push
pop
or
inc
pop
ret
cmp
inc
arpl
lods
nop
inc
imul
dec
xor
dec
clc
mov
xchg
es
pop
push
add
push
sub
imul
or
and
xchg
stc
int3
jmp
fwait
pop
mov
clc
sbb
enter
mov
xchg
xchg
test
adc
(bad)
sbb
and
add
mov
mov
(bad)
in
cs
rcl
xor
dec
dec
popf
nop
xchg
movs
inc
ret
sbb
or
test
sbb
inc
mov
sub
pop
in
mov
arpl
jge
push
cwde
out
(bad)
mov
addr16
cmp
mul
pop
adc
pop
inc
pop
leave
ins
jo
cmp
sbb
and
pushf
mov
aaa
push
daa
sub
call
and
repnz
int
mov
int3
push
cmp
push
push
inc
add
push
loopne
scas
cmc
cmp
sub
pop
or
adc
xor
outs
pop
cmp
dec
fidivr
into
xor
jnp
lods
cli
aaa
pop
aaa
imul
mov
xor
add
ret
jmp
cwde
mov
push
jno
xchg
arpl
xchg
or
loop
mov
push
mov
pusha
loope
push
cmp
push
pop
pop
pop
sub
mov
mov
test
xchg
fisubr
enter
add
das
inc
or
and
dec
sub
jo
xor
xchg
fisttp
sbb
mov
jecxz
(bad)
dec
and
mov
lock
sub
cs
movs
shr
das
pop
and
pop
push
stos
arpl
and
adc
out
int3
xchg
pop
adc
pop
sbb
leave
pop
jnp
adc
jo
and
rcr
add
sbb
inc
mov
nop
mov
es
push
(bad)
mov
or
dec
not
push
mov
shl
xor
scas
fsub
xchg
out
inc
xor
test
ficomp
enter
jmp
pop
sub
cmps
and
sub
sbb
sbb
and
mov
adc
nop
dec
into
call
inc
pop
dec
sub
and
push
sub
or
gs
cs
or
add
out
xor
or
add
cmp
imul
ss
dec
ins
cmp
xchg
pop
push
dec
fst
push
sub
push
cli
adc
movs
or
adc
jb
ret
cmp
call
in
loopne
scas
add
ins
dec
imul
adc
push
or
icebp
ins
jo
mov
mov
repnz
out
(bad)
ror
aam
fcom
in
jl
fcom
(bad)
dec
dec
rcr
pop
xor
mov
outs
pop
test
sahf
add
gs
push
dec
(bad)
(bad)
sar
(bad)
enter
es
adc
js
mov
push
nop
dec
add
dec
aad
push
(bad)
push
ins
(bad)
mov
sub
test
movs
retf
and
movs
test
fs
lods
lods
pushf
pushf
cmp
xchg
pop
mov
jmp
je
imul
prefetch
retf
js
push
call
xchg
jbe
mov
jnp
xor
outs
inc
mov
stc
add
movs
jns
je
pop
inc
leave
and
pop
inc
nop
xchg
js
xchg
das
mov
xor
ror
inc
xchg
xchg
add
je
jno
and
sbb
push
xchg
or
push
adc
sub
adc
add
dec
pop
mov
jne
and
jle
sub
adc
sub
fbld
dec
in
es
inc
dec
or
mov
add
xchg
or
movs
xor
pop
pusha
fs
mov
cmp
adc
dec
adc
dec
mov
pop
mov
mov
sub
fisubr
es
jbe
enter
enter
aam
fcom
lock
mov
mov
sbb
adc
sbb
jmp
or
nop
add
inc
jmp
xchg
outs
ins
fisub
and
je
jl
rcr
xor
nop
pop
sub
in
test
mov
and
aam
mov
ret
push
jae
fadd
lock
sbb
(bad)
fdivr
add
test
xchg
pop
(bad)
daa
xor
pop
cmc
sbb
inc
add
jo
les
sbb
clc
inc
and
dec
icebp
das
xor
add
and
push
add
mov
sbb
jmp
sub
mov
jno
add
push
gs
lods
pop
pop
repnz
dec
and
ins
call
and
sub
call
movs
lock
icebp
sbb
and
cmp
add
add
push
mov
fcmovnb
and
cli
dec
dec
add
outs
sbb
xchg
xor
jns
in
in
(bad)
lock
and
test
pop
shl
push
cmp
sub
add
jg
add
sub
add
adc
test
push
add
add
cmp
sbb
aad
mov
and
pop
xor
stos
outs
shr
cdq
xor
pop
lea
popa
outs
mul
test
fnsave
push
adc
bound
mov
or
adc
sbb
dec
xchg
or
clc
xor
jns
xor
sbb
test
je
pushf
out
mov
sub
cwde
ds
lock
sbb
inc
cs
add
adc
dec
popa
and
dec
loopne
outs
jae
or
mov
pop
in
cmp
mov
add
loope
ret
mov
and
fs
ror
bound
cmps
dec
test
int3
les
pop
sbb
add
mov
sbb
in
push
jo
mov
dec
or
or
lods
aam
adc
jge
bound
lock
call
(bad)
in
in
pop
fs
add
out
pop
jo
xor
movs
jns
mov
inc
xchg
xchg
add
and
pop
mov
sar
in
hlt
ins
push
mov
add
into
add
enter
xor
jmp
and
push
sub
in
add
rcr
ficom
imul
hlt
hlt
lock
shl
jns
int3
scas
add
call
xchg
mov
inc
push
pop
adc
fcom
mov
addr16
pop
sub
mov
stos
and
test
push
repnz
cmps
or
or
mov
jno
lahf
xor
add
mov
(bad)
call
add
pusha
ja
cmovnp
sbb
xchg
cmc
jae
mov
imul
sbb
and
in
fisttp
cli
adc
inc
loope
inc
aad
or
repnz
mov
xor
push
pop
rcl
call
inc
dec
call
inc
dec
call
cmp
je
dec
push
rcr
add
mov
mov
or
and
pop
sub
or
xor
pushf
xor
ror
stc
imul
jl
mov
inc
arpl
das
rcl
push
sbb
mov
inc
ss
arpl
xchg
test
shl
fdiv
xchg
xor
and
jp
xchg
inc
in
inc
neg
pushf
lock
sbb
sar
popf
loopne
jmp
dec
cmp
push
pop
popf
and
loopne
loop
in
in
dec
(bad)
dec
imul
push
jns
mov
inc
mov
leave
test
lock
pop
adc
pop
xchg
jo
repz
jg
mov
dec
add
push
sbb
pop
(bad)
dec
mov
and
in
push
and
fsub
daa
int
fcomp
fadd
cmp
sub
fsub
popa
nop
rol
mov
and
xor
cmps
cmp
inc
xor
aam
cmp
and
bound
test
mov
inc
mov
push
push
sbb
cld
in
cmp
in
xchg
xor
push
inc
fdiv
jmp
adc
pop
add
fdiv
daa
int
and
aam
fadd
test
popa
sbb
imul
jo
inc
sbb
pop
lods
and
sub
push
and
push
pop
add
jmp
cmp
das
mov
mov
nop
dec
mov
inc
xor
fsub
cwde
pushf
add
inc
test
loopne
aas
inc
fdivr
and
dec
and
xor
(bad)
cmc
xchg
div
add
pushf
nop
clc
adc
xor
inc
fcmovnb
dec
pop
pop
or
xor
jle
pop
out
mov
loope
dec
and
and
add
dec
jne
xchg
cs
cmp
rcr
outs
dec
nop
into
div
add
mov
test
cs
stos
jge
mov
call
mov
imul
mov
(bad)
movs
les
add
or
lods
mov
mov
add
adc
adc
cmps
sbb
sbb
mov
xor
xchg
jge
adc
jp
hlt
jb
inc
(bad)
pop
xchg
int
xor
add
and
es
stc
xchg
mov
ret
mov
dec
loop
pop
mov
call
lods
jge
xchg
jne
cmp
adc
pop
enter
add
or
xchg
push
pop
mov
pop
dec
pop
aaa
test
sbb
xchg
xchg
aam
push
jge
mov
adc
push
movs
mov
stos
xor
stos
mov
je
adc
je
outs
jb
das
push
cmp
and
sbb
adc
inc
and
or
rol
adc
adc
(bad)
mov
ret
sub
adc
push
push
icebp
test
call
push
and
inc
cld
or
js
and
push
popa
inc
jo
push
enter
sub
nop
jae
cwde
and
add
push
mov
out
adc
addr16
add
mov
dec
or
xchg
and
shl
or
inc
nop
dec
mov
lods
and
and
loopne
push
outs
lock
aaa
ret
inc
mov
pop
jle
rcr
inc
das
mov
pop
pop
fimul
in
dec
mov
mov
das
inc
es
pop
imul
sub
sbb
mov
je
jge
pop
fs
es
inc
adc
addr16
jbe
adc
fld
xor
jecxz
les
or
or
out
clc
push
push
ds
xlat
jmp
movs
outs
test
mov
and
fdiv
add
call
movs
frstor
pushf
add
mov
pop
ds
jb
mov
rcl
jmp
inc
shl
and
mov
push
and
popa
nop
test
ds
dec
mov
push
sub
push
sub
sbb
ds
ins
scas
dec
ror
push
sub
ins
das
add
xor
daa
add
add
(bad)
cmc
jmp
xchg
add
int3
mov
sbb
add
(bad)
test
push
push
push
mov
test
ficomp
test
jno
call
call
in
add
pop
xchg
in
icebp
mov
adc
fist
push
aad
xor
mov
(bad)
cmp
pop
add
jge
xor
or
cli
inc
sbb
mov
ss
daa
cmps
cmp
pop
sbb
ret
cmp
sbb
aaa
pop
push
xor
addr16
ror
jl
dec
ins
push
xchg
and
and
pop
push
inc
jae
mov
gs
ret
rol
ret
adc
push
cmp
mov
ja
mov
pop
xor
in
enter
nop
and
push
les
retf
and
jbe
xchg
xchg
pop
ja
mov
xchg
xchg
push
leave
pop
in
cmp
mov
int3
hlt
int3
jbe
push
pop
mov
es
adc
add
mov
and
imul
ins
cmp
inc
push
aaa
daa
rcr
mov
in
int
test
push
or
mov
dec
adc
sbb
mov
(bad)
sub
les
dec
dec
mov
dec
pop
inc
xor
ret
mov
and
jle
in
in
sbb
int
mov
cmp
mov
add
int3
push
ins
inc
dec
push
sbb
mov
push
adc
ins
or
cmovl
sar
xor
sub
pop
(bad)
mov
dec
js
add
in
add
in
add
call
or
cdq
jmp
sub
or
jmp
push
imul
xor
cmp
out
sub
jmp
mov
ret
sti
and
mov
sbb
adc
ret
lahf
push
and
add
jne
loopne
cmp
jge
adc
outs
jle
and
cmp
mov
push
ss
adc
and
inc
mov
jmp
jnp
leave
in
fnsave
inc
cdq
or
and
cmp
nop
add
sub
ds
cmp
mov
fmul
fdiv
fisttp
mov
add
xor
xor
call
sub
adc
inc
or
or
jl
inc
lods
and
mov
(bad)
push
sub
adc
mov
retf
push
dec
jmp
inc
add
xchg
mov
xor
or
pusha
cli
mov
pop
cmp
pusha
fs
retf
in
push
adc
in
iret
jecxz
mov
retf
scas
sar
mov
push
cmp
rcl
popf
ins
cmp
jo
ins
lea
fcom
sub
mov
gs
fs
rol
or
daa
(bad)
lock
push
xor
adc
sbb
data16
add
(bad)
ins
aam
sbb
pop
or
add
nop
popa
inc
shl
(bad)
in
inc
fdiv
aam
mov
mov
cmp
xchg
mov
mov
sbb
inc
add
clc
cmp
sub
mov
sub
pop
int3
sbb
loopne
ret
xchg
mov
inc
mov
movs
xchg
dec
push
pop
hlt
xchg
add
fild
pop
xor
ss
in
mov
dec
ret
lea
shr
cmp
or
adc
sub
inc
add
leave
leave
lds
pop
clc
or
aas
push
adc
xlat
fld
int
jne
mov
dec
ja
or
in
dec
adc
mov
and
sbb
ret
xor
(bad)
loopne
xor
arpl
and
or
sub
ins
mov
test
test
cld
cld
push
fild
xlat
add
sub
fcomp
test
lods
and
cmp
adc
push
enter
cmps
and
jae
data16
nop
cwde
adc
jb
dec
imul
pop
or
and
pop
dec
or
and
inc
or
push
add
mov
loopne
rol
test
into
dec
push
ins
push
add
jmp
adc
push
push
push
mov
popa
xchg
in
cmp
(bad)
adc
mov
rcl
sub
jnp
lea
mov
mov
jne
out
push
and
test
inc
aas
and
add
repnz
fisubr
sbb
or
or
xchg
(bad)
lock
jmp
add
mov
sbb
cld
lea
scas
xchg
push
pop
push
mov
dec
mov
or
lock
pop
cmp
push
fst
popf
inc
imul
adc
sub
cld
push
(bad)
inc
or
enter
cmp
sbb
test
(bad)
adc
sub
test
mov
rol
inc
sbb
sbb
xchg
dec
stos
and
or
xor
fs
pop
pop
(bad)
xor
jmp
pop
push
arpl
and
mov
push
jbe
aaa
retf
add
and
ss
and
(bad)
jle
jo
dec
xor
fldl2t
daa
sub
push
mov
inc
arpl
or
nop
dec
gs
pop
fld
push
mov
xchg
in
sbb
sbb
inc
mov
inc
add
nop
pop
hlt
xchg
dec
dec
movs
lea
or
adc
add
js
or
ror
xor
je
push
and
and
inc
and
dec
mov
add
lds
mov
popa
pop
jbe
mov
nop
mov
push
push
dec
mov
cmp
aaa
fidiv
lods
inc
xor
sub
sbb
test
je
dec
add
dec
mov
ins
retf
aaa
lods
add
or
and
sub
add
hlt
xchg
xchg
dec
push
iret
inc
push
pop
add
fldenv
hlt
sti
jp
adc
popa
push
jge
dec
shl
mov
dec
sub
jl
inc
rcl
mov
mov
out
inc
xchg
mov
inc
adc
pop
adc
xchg
push
push
in
mov
or
inc
mov
pop
or
aaa
cli
sub
mov
adc
aaa
aam
dec
jae
mov
or
fsub
mov
aam
lods
mov
retf
test
push
dec
mov
scas
pusha
mov
repz
nop
pop
dec
adc
and
push
mov
push
add
jle
adc
push
cs
enter
xor
ss
push
inc
sti
sub
push
test
dec
inc
aas
(bad)
fbld
dec
ja
dec
jg
aas
aas
fmul
add
push
pop
or
or
or
lock
adc
adc
sbb
fidiv
test
ins
push
push
jge
sahf
out
xchg
stos
ret
repz
repz
push
push
xor
cmp
jp
test
(bad)
in
sahf
out
ds
sbb
dec
pusha
jns
out
ja
movs
mov
out
add
sub
push
gs
or
jmp
andnps
ds
add
xor
and
enter
add
or
or
or
add
or
enter
adc
add
adc
inc
es
adc
add
sbb
cdq
inc
sbb
not
jmp
daa
xchg
inc
sbb
bound
inc
sbb
cmp
sbb
and
add
nop
inc
and
sbb
in
add
(bad)
in
mov
cli
add
stos
fsub
cmc
add
enter
aas
or
(bad)
jmp
mov
jp
imul
push
imul
sub
jne
rcr
fdivr
adc
xlat
(bad)
jmp
aaa
xor
or
xor
adc
mov
bound
sub
sbb
inc
ret
and
arpl
mov
(bad)
or
add
jns
and
and
pop
ja
cmp
or
js
mov
imul
add
and
(bad)
fbld
add
sub
dec
jo
sub
add
dec
test
ja
pop
rol
xchg
add
rsm
sub
or
inc
pop
xchg
lods
dec
inc
push
outs
stos
outs
xchg
add
aaa
mov
mov
movs
mov
push
in
cmp
sub
repnz
int3
and
mov
mov
xor
xchg
add
sbb
imul
xchg
add
push
and
fcmovne
and
push
lahf
div
push
sub
add
rcr
push
dec
pusha
ins
dec
cmc
shr
(bad)
mov
and
fwait
sbb
rcr
movs
not
push
mov
push
and
cmp
es
adc
fimul
pop
dec
xchg
mov
mov
repz
dec
push
out
inc
movs
dec
dec
pop
mov
addr16
out
jl
sbb
adc
adc
cmp
out
pop
cmp
mov
inc
pop
or
ins
add
add
ins
jae
dec
hlt
mov
nop
sub
sub
dec
mov
ror
add
add
inc
mov
push
dec
adc
pop
in
inc
or
ffree
dec
add
or
stos
push
add
add
sub
xor
ja
sar
add
ret
and
or
and
dec
push
inc
push
enter
addr16
add
add
push
enter
sahf
dec
cmp
push
pop
dec
jns
jo
dec
sub
pop
ret
dec
or
mov
and
xchg
(bad)
mov
ret
inc
inc
lock
adc
pop
xchg
pop
pop
popf
pop
outs
and
jns
and
mov
imul
xor
ror
dec
popa
ds
mov
int
xor
mov
cld
push
xor
outs
fcmovb
add
movq
and
sbb
aas
ss
loopne
int
cmp
adc
sbb
ret
into
femms
(bad)
pusha
xchg
add
jae
ror
dec
cmp
jb
pushf
pop
test
cmp
test
xor
inc
add
xor
jmp
xchg
iret
xor
scas
fsub
movs
nop
or
clc
cmp
xor
outs
sbb
movs
sub
jae
repz
dec
pop
test
scas
mov
jl
sub
iret
mov
sub
adc
or
(bad)
retf
pop
and
rcr
or
add
enter
dec
cmp
repnz
dec
add
sbb
adc
inc
sub
enter
and
stos
inc
mov
xor
mov
sub
dec
xlat
adc
retf
clc
imul
fcmovb
push
or
push
cmp
add
jge
rsqrtps
adc
mov
aaa
fiadd
clc
mov
into
add
inc
mov
clc
les
mov
mov
out
jne
or
(bad)
sbb
in
imul
imul
xor
loopne
inc
dec
mov
mov
hlt
popa
xchg
push
xor
xor
dec
push
scas
cmps
and
sub
test
add
ret
xlat
lods
xchg
jae
inc
mov
sbb
aaa
pop
pop
adc
or
ficom
jno
inc
repnz
add
popf
pop
cmp
push
imul
jne
sbb
add
ret
mov
inc
mov
push
mov
ins
data16
adc
mov
pushf
or
bound
mov
outs
push
jne
cmp
ret
xchg
or
jmp
adc
mov
in
mov
and
mov
lods
popa
or
and
push
pop
push
repz
xchg
shr
ret
push
cs
rcr
les
scas
push
or
cli
push
adc
cmp
loope
pop
fcmovb
loop
or
jg
add
add
ret
or
(bad)
sbb
lock
mov
jl
inc
call
xor
aas
jno
call
mov
inc
dec
jne
int
fwait
adc
jmp
adc
add
loop
aad
cmp
push
add
loopne
cwde
in
fst
fwait
sbb
loopne
pop
mov
sub
jno
into
adc
idiv
(bad)
or
jl
and
xchg
add
enter
dec
mov
mov
pop
push
push
xchg
jl
ror
mov
sbb
pop
fmul
add
jo
stc
inc
loope
mov
in
xchg
add
xchg
sbb
jbe
lods
cmps
cmp
lods
lods
fistp
test
xchg
jl
retf
fidivr
add
hlt
dec
mov
test
mov
mov
sbb
or
rcl
add
rcl
push
inc
and
mov
js
pop
aaa
mov
inc
or
rcl
test
xchg
out
push
leave
mov
in
pop
ret
fld
and
adc
nop
dec
and
sub
aaa
inc
or
imul
cmp
inc
dec
lea
fcomp
mov
push
ss
and
jmp
add
popf
or
xor
jmp
mov
push
fldenv
and
jle
mov
xor
or
(bad)
and
and
and
jb
in
sub
cmp
cmp
arpl
inc
and
retf
test
xchg
or
mov
add
adc
sahf
imul
jns
jp
dec
clc
ss
add
cmp
push
rol
push
adc
and
cmp
dec
mov
es
imul
inc
sub
test
jmp
pop
enter
jl
and
and
sub
movs
push
aaa
(bad)
sub
movs
iret
push
mov
sbb
sub
adc
mov
rcl
add
fwait
pop
jb
fimul
pop
mov
jbe
int3
mov
adc
mov
(bad)
call
cld
adc
fld
sub
loopne
dec
loope
mov
adc
ret
ficomp
xchg
aaa
and
mov
jg
(bad)
mov
xchg
les
xor
sbb
fld
adc
leave
jcxz
dec
sahf
ins
cld
sbb
std
add
enter
pop
mul
mov
cdq
(bad)
cmp
sub
repz
out
(bad)
xor
call
adc
sbb
xchg
adc
add
scas
ffree
sub
sbb
adc
add
std
(bad)
leave
out
test
mov
cmp
outs
dec
adc
inc
pop
test
pusha
mov
je
adc
aas
popa
xchg
inc
bound
push
mov
mov
xchg
fadd
push
les
daa
arpl
sub
rol
rcl
lods
push
cs
xchg
and
lods
mov
xchg
in
aam
pop
cs
or
enter
sar
cmp
pop
enter
sub
je
cmc
add
xor
test
(bad)
push
mov
sahf
push
or
and
jne
pop
enter
rcl
scas
es
ret
jmp
sbb
sub
or
jle
test
jb
xor
adc
jp
fnstcw
test
leave
or
mov
or
or
cld
or
adc
call
xchg
adc
int3
int3
rcl
je
add
and
dec
rcr
and
mov
mov
rcr
mov
add
in
mov
add
leave
iret
or
mov
add
mov
dec
jae
test
(bad)
cwde
cmp
leave
inc
and
cmc
daa
and
mov
ins
dec
sar
test
and
sbb
push
sub
sbb
jne
push
arpl
xchg
pushf
sbb
add
add
push
fs
nop
mov
pop
jne
pop
nop
mov
jb
pusha
inc
xor
dec
sub
jne
mov
push
dec
sub
sbb
dec
dec
push
dec
retf
test
inc
inc
xchg
outs
fs
inc
inc
cmp
inc
gs
movs
xor
xor
sub
xor
sub
adc
adc
and
xchg
dec
sub
cs
retf
sbb
and
dec
gs
sbb
mov
adc
pop
es
or
sub
xchg
or
xor
and
add
cld
dec
repz
cld
(bad)
clc
(bad)
xor
add
clc
(bad)
hlt
push
push
jns
xchg
(bad)
ror
push
pop
lock
lock
xchg
xor
jne
inc
es
(bad)
loopne
adc
dec
fdiv
fsub
fcomp
push
fdiv
and
aam
and
dec
sub
int3
enter
int3
(bad)
les
fs
retf
ror
jo
mov
inc
es
lods
dec
cs
push
lods
mov
or
inc
enter
aaa
movs
mov
push
mov
jb
cwde
pushf
pushf
nop
xchg
pop
es
and
jb
mov
cmp
lds
jne
sbb
xor
push
cmp
inc
cs
jo
ins
or
ins
push
push
push
leave
gs
fs
push
sub
movs
xor
xchg
push
inc
push
cmp
or
inc
xor
gs
inc
dec
dec
jb
movs
xor
cmp
pop
enter
cmp
inc
es
dec
add
xor
fs
retf
test
sub
in
dec
and
and
nop
or
dec
push
sbb
inc
sbb
push
adc
or
and
or
adc
gs
retf
add
jb
pop
xor
add
sbb
sub
jne
xchg
hlt
std
xchg
adc
inc
add
cmp
or
in
enter
in
loopne
loopne
loopne
inc
fcom
jne
jb
nop
aam
fcomp
xchg
ror
mov
sub
dec
rcr
jne
push
add
adc
adc
and
xchg
dec
mov
xchg
retf
mov
mov
dec
gs
lods
test
xchg
retf
test
push
gs
cmps
movs
pushf
pushf
movs
xor
leave
mov
dec
jb
xchg
cwde
cwde
test
nop
mov
push
sbb
mov
dec
mov
mov
nop
dec
cs
js
jl
xchg
or
sub
and
ins
or
cdq
xchg
dec
ins
fs
xchg
fs
gs
or
test
pop
pop
pop
and
push
push
push
arpl
and
push
(bad)
es
inc
sbb
enter
jo
je
pop
dec
add
pop
jb
or
popa
jge
or
scas
or
in
es
cs
cs
movs
mov
cs
rcl
inc
cs
in
clc
or
and
or
adc
nop
or
mov
pop
push
js
nop
or
xor
int3
lods
or
xor
push
call
pop
aas
adc
and
mov
nop
or
repnz
sbb
sbb
sbb
add
nop
aam
lock
add
or
inc
and
scas
cmps
adc
add
dec
push
add
fld
jle
xchg
lahf
inc
neg
add
cmps
jge
fld
fcom
push
cs
or
add
mov
add
lods
add
sar
add
push
xchg
es
sub
add
arpl
xor
add
loopne
sbb
xor
fucomp
mov
and
nop
mov
cmp
das
inc
dec
cmp
cmp
cmp
inc
ret
add
jmp
add
jbe
adc
pop
in
add
push
cmp
fld
and
pop
adc
lods
sub
or
sub
lods
dec
rcr
or
mov
ficomp
or
push
xor
lods
cs
add
add
aaa
out
je
xor
push
sub
xchg
sub
xor
or
sbb
xchg
dec
dec
pop
fbld
pop
shl
nop
and
push
adc
test
nop
xchg
sub
aas
ds
daa
mov
fsubrp
rol
pop
push
aaa
push
(bad)
xor
in
jp
or
les
add
mov
sbb
xor
and
sub
add
call
lods
rol
sar
xchg
xor
add
test
call
aad
rol
test
pop
add
push
popa
nop
fsubr
inc
enter
adc
loopne
adc
mov
dec
shl
cli
pop
ins
in
push
mov
add
mov
mov
adc
hlt
dec
lds
jo
int3
(bad)
dec
mov
rcl
sbb
add
ss
add
lds
dec
rcl
and
retf
pop
enter
addr16
pop
leave
(bad)
popa
and
add
mov
dec
add
sub
das
jns
lods
mov
add
dec
fmul
xor
fmul
ins
es
or
clc
dec
shl
das
clc
xor
push
daa
jmp
mov
add
or
in
in
sub
add
retf
push
adc
mov
or
rcr
adc
fwait
(bad)
retf
push
dec
cld
xor
mov
fsubr
enter
mov
inc
imul
inc
dec
fimul
adc
dec
jne
cmp
jo
sub
pop
daa
sbb
add
loope
rol
popf
je
mov
or
add
aam
xchg
pop
push
js
fbld
icebp
enter
inc
int
push
adc
fadd
lea
lods
cmp
inc
xor
mov
xor
repz
ins
xor
inc
add
adc
sar
add
adc
jge
inc
push
xor
or
cld
mov
pop
add
cmp
add
sub
mov
jne
adc
xchg
(bad)
mov
mov
je
jb
mov
bound
je
and
aaa
xchg
lahf
xchg
cld
or
mov
loopne
ror
sbb
xor
popa
mov
mov
dec
cmp
shl
in
fsub
add
mov
hlt
mov
and
aaa
jmp
mov
adc
(bad)
xchg
inc
push
outs
fld
jle
jns
mov
adc
xor
dec
rcl
push
fs
push
ins
out
mov
add
mov
ret
call
(bad)
inc
inc
daa
gs
aad
and
retf
dec
sbb
push
es
cmp
stos
cmp
ret
pop
or
push
jmp
mov
jbe
aas
pop
jo
sti
add
mov
lds
dec
mov
adc
sub
jp
stc
xchg
sbb
daa
clc
sub
push
adc
mov
lods
mov
in
mov
outs
rcr
add
(bad)
leave
xchg
rol
and
dec
adc
or
dec
adc
pop
push
mov
or
into
add
or
add
and
bnd
aaa
(bad)
call
xchg
inc
xchg
add
pusha
pusha
or
push
adc
add
lds
add
retf
dec
dec
xchg
test
jb
xchg
(bad)
call
add
sub
enter
xchg
psrlq
xor
inc
adc
in
scas
stos
sbb
sub
int
adc
mov
nop
or
adc
leave
int3
adc
or
pusha
inc
popa
test
mov
sub
sbb
aad
xchg
inc
sbb
push
clc
clc
out
and
sbb
xchg
push
(bad)
(bad)
adc
in
cld
dec
das
test
dec
sub
push
cdq
jbe
inc
imul
es
adc
popf
sbb
(bad)
mov
mov
sbb
push
xchg
test
mov
cmp
adc
dec
jle
pusha
test
jo
popa
ins
sub
shl
add
pop
pop
adc
fiadd
cmp
or
pop
pop
xchg
iret
es
in
enter
mov
add
and
call
jae
add
sub
int
push
or
cmp
fs
dec
and
stos
in
(bad)
mov
shl
rcl
and
add
push
add
mov
pop
mov
xchg
ret
ss
ror
or
sbb
push
cmp
fsubr
test
test
scas
pusha
pop
jg
and
or
add
push
xchg
addr16
sbb
and
and
push
dec
push
dec
jmp
add
lods
xchg
pushf
fs
icebp
pushf
add
loopne
inc
fist
rol
mov
mov
movs
and
aam
push
pop
inc
jl
add
mov
stos
icebp
and
mov
in
rcl
stos
cmps
xor
pusha
idiv
pop
test
add
inc
xchg
dec
mov
mov
ins
jo
push
inc
es
or
sbb
pop
es
pusha
pusha
cs
push
inc
push
or
nop
dec
pop
and
push
test
movs
and
nop
pop
sbb
out
sbb
dec
inc
inc
movs
mov
cmp
xchg
pop
cmp
movlps
fdivr
mov
and
xor
adc
inc
xchg
test
xchg
imul
or
xchg
and
lods
sbb
cs
in
sbb
bound
xchg
ins
and
(bad)
aad
in
inc
cmp
sub
sub
xor
aaa
in
lock
les
adc
pusha
mov
adc
and
ins
lods
hlt
std
pop
pop
mov
add
es
std
add
pusha
push
or
add
in
retf
add
jg
std
ins
inc
dec
enter
std
fadd
fcomp
adc
int
std
push
call
inc
fcom
push
jae
mov
data16
pushf
mov
add
enter
sar
cmp
add
cdq
inc
clc
sbb
xchg
retf
test
test
adc
leave
lods
lods
jmp
xchg
das
dec
rol
pop
mov
pop
cs
cwde
cwde
cmps
pushf
pusha
adc
and
nop
jg
pop
pop
ret
xchg
xchg
test
mov
std
sbb
pop
popa
hlt
fnstsw
xchg
retf
je
je
inc
xor
js
ins
jg
ret
dec
cmp
add
les
xor
in
fs
pop
ins
jo
xchg
pop
pop
(bad)
push
sub
jns
push
ffreep
mov
push
sbb
sbb
push
dec
jg
test
sbb
lods
cmp
lea
jb
in
cmp
inc
in
dec
cs
inc
dec
xchg
dec
dec
lock
xor
and
lds
xchg
dec
jb
sub
xor
or
and
repnz
adc
repnz
adc
sbb
and
or
in
leave
and
sub
and
ja
mov
lods
in
popf
adc
add
add
pop
dec
xor
and
dec
sti
and
xchg
mov
inc
push
(bad)
clc
cld
clc
cld
cld
cld
and
dec
push
cld
cld
add
sub
enter
add
pusha
nop
enter
nop
pop
out
lea
into
add
int3
xor
or
mov
rcl
aam
fsubr
sub
lods
in
xchg
inc
cld
rdtsc
xchg
add
enter
add
jnp
sub
xor
popf
pop
dec
sub
es
(bad)
enter
es
out
movs
sar
stc
mov
mov
lods
mov
leave
and
mov
mov
or
cdq
in
mov
xor
neg
pushf
outs
mov
sub
gs
retf
xchg
cwde
rol
cs
mov
enter
lods
jl
popa
jne
jno
test
mov
mov
push
enter
js
mov
jo
pusha
ins
and
mov
and
cs
rcr
pop
jb
nop
retf
pop
pusha
pusha
fs
cs
dec
fs
xchg
ins
imul
adc
mov
push
push
or
(bad)
jge
add
cmp
fsubr
sub
push
xor
in
cs
cmp
mov
inc
inc
retf
and
dec
and
xor
gs
and
sub
jb
movs
xor
sbb
ss
dec
sbb
jg
inc
data16
jbe
add
or
add
jb
and
or
adc
cdq
in
adc
rcl
mov
sti
fnstcw
sti
sub
hlt
sti
sbb
in
and
mov
out
rcr
fsub
daa
in
sbb
sti
in
fstp
adc
inc
mov
adc
mov
mov
aam
leave
gs
xor
fcomp
and
jge
rcr
pop
fild
xchg
out
xor
in
mov
movs
mov
dec
enter
cmp
int3
int3
push
xor
rcr
shl
adc
scas
and
fs
xor
add
mov
retf
(bad)
mov
sbb
jg
pop
xor
lods
cwde
cwde
xchg
pop
enter
pushf
mov
mov
fmul
xor
lods
lods
cmp
and
das
dec
push
fs
dec
mov
xchg
mov
jecxz
test
inc
sbb
xchg
dec
adc
adc
mov
ds
lds
inc
adc
test
sbb
mov
push
lods
jl
idiv
test
mov
pop
test
lea
xchg
dec
ret
imul
xor
je
dec
clc
lods
scas
pop
inc
add
ret
mov
in
adc
cmps
pop
mov
(bad)
pop
xchg
mov
xchg
retf
and
fs
fs
push
inc
cs
push
test
rol
fldenv
fmul
cmp
push
sbb
mov
dec
es
cdq
pop
or
add
rol
sbb
pop
sti
sti
sub
call
cdq
xor
loopne
nop
dec
or
cmps
pop
xchg
fst
fdiv
mov
imul
and
dec
mov
dec
xor
int3
push
aam
and
dec
fcomp
loopne
fadd
clc
jo
dec
es
add
add
push
add
dec
xchg
or
sar
jb
and
and
adc
xor
inc
test
mov
pop
pop
mov
pop
enter
je
or
mov
nop
mov
cs
dec
pushf
mov
ror
lods
mov
dec
xor
bound
(bad)
xlat
enter
inc
cmps
mov
fisub
imul
sub
or
inc
dec
mov
movs
mov
imul
push
adc
sbb
and
pop
out
mov
pop
xor
cmp
leave
test
push
xor
test
pusha
dec
jb
pop
push
pop
xchg
js
and
jb
test
ss
cwde
pushf
sub
dec
test
mov
or
mov
nop
or
int3
imul
jb
xchg
aam
in
mov
lock
mov
(bad)
imul
jns
or
or
adc
mov
cdq
sbb
cmps
dec
jb
xor
mov
cs
inc
dec
mov
push
push
add
dec
mov
sub
mov
sub
and
cdq
jl
inc
adc
fadd
test
adc
jno
movs
dec
jb
shr
mov
shr
test
dec
mov
shr
mov
out
dec
or
retf
jmp
mov
pop
push
or
imul
sub
mov
mov
fwait
push
add
in
repz
pop
pop
cmps
mov
and
inc
imul
jmp
loope
inc
lea
lea
scas
sbb
shl
stos
pusha
pushf
mov
fild
imul
call
mov
mov
in
sub
enter
mov
lods
bound
or
and
inc
sub
cmp
sub
xor
xchg
xor
xor
push
or
pop
outs
(bad)
fwait
push
jo
dec
mov
pop
cmps
mov
pop
dec
in
xchg
add
or
int3
test
add
lods
jns
jne
cmps
fidiv
dec
or
mov
inc
rol
dec
repz
mov
leave
leave
mov
jmp
in
mov
adc
or
in
mov
dec
rol
test
rcr
stc
add
arpl
pusha
mov
dec
or
sbb
jo
in
mov
xchg
dec
ins
repz
imul
ins
push
retf
call
and
dec
(bad)
in
xchg
call
sti
(bad)
push
jecxz
push
rcl
sahf
and
xchg
cmps
(bad)
push
or
or
loope
in
add
dec
call
rol
jae
clc
cmp
retf
out
inc
push
leave
and
gs
push
sbb
or
jecxz
out
add
push
(bad)
sbb
add
dec
es
adc
pop
unpcklps
dec
and
or
pop
outs
les
pop
sahf
stos
bound
push
and
pop
cdq
sbb
mov
and
adc
xchg
pop
adc
xchg
retf
repnz
dec
push
mov
and
adc
add
or
(bad)
cdq
inc
and
in
jns
lock
lock
in
(bad)
hlt
and
pushf
in
(bad)
in
dec
in
sbb
fdiv
and
fcom
or
bound
into
push
aam
inc
xchg
mov
stc
push
and
test
push
or
mov
push
neg
movs
push
nop
daa
pop
mov
retf
inc
mov
cdq
fs
div
movs
adc
test
mov
pop
leave
clc
add
sbb
and
inc
cwde
stos
xor
call
and
push
clc
es
inc
dec
xor
nop
(bad)
in
xor
in
mov
mov
cmpxchg
pop
mov
enter
dec
pop
adc
sub
fs
xchg
mov
mov
(bad)
mov
sbb
loop
pusha
mov
out
xchg
push
cld
pop
adc
xchg
push
push
gs
inc
dec
adc
add
daa
pop
clc
sub
inc
cmp
shl
cli
sub
clc
push
mov
(bad)
loopne
fcom
mov
rcr
jb
and
pop
dec
mov
dec
push
sar
push
mov
adc
inc
inc
std
xchg
and
cdq
inc
fwait
add
adc
and
add
inc
add
in
add
lock
xchg
or
and
sub
inc
(bad)
dec
loope
xor
or
pop
ins
nop
pop
and
cld
loope
sbb
mov
sub
add
adc
stos
xor
mov
sbb
sub
xchg
dec
push
sbb
and
in
leave
xchg
add
cwde
add
xchg
pushf
enter
ds
xor
nop
adc
outs
call
mov
jge
dec
jb
jae
dec
jmp
dec
mov
inc
aad
sub
dec
xchg
xor
les
add
sub
movs
in
xor
ror
ins
inc
lds
add
cld
std
adc
xchg
and
in
sbb
leave
and
call
nop
out
std
cs
in
adc
sbb
jo
jno
mov
test
add
not
jmp
stc
jno
shr
in
add
cmp
mov
(bad)
xchg
dec
mov
inc
test
jbe
and
add
test
jnp
push
dec
sub
or
leave
and
xchg
sar
inc
lahf
adc
mov
rcr
mov
adc
repz
retf
in
adc
fsubr
xor
mov
pop
rol
stos
mov
enter
mov
into
lea
aam
test
sbb
clc
push
xchg
sub
cmps
sub
loopne
fwait
ror
jmp
adc
sub
mov
inc
or
sub
xchg
(bad)
push
test
cs
pop
fiadd
xor
cs
addr16
cdq
mov
movs
test
cs
int3
nop
sub
in
push
or
call
adc
inc
xor
add
call
push
add
rcl
pop
ins
jl
mov
mov
or
and
pop
push
pushf
and
adc
retf
or
test
or
aad
movs
loopne
bound
cmps
pop
in
add
loop
add
xor
cld
mov
xchg
cmp
mov
daa
das
sub
add
pop
in
add
mov
ins
xchg
shr
jns
xchg
add
push
dec
call
in
and
xchg
add
mov
push
daa
xchg
mov
mov
test
je
dec
enter
and
push
or
pop
iret
int
and
mov
and
sub
xlat
fdiv
xchg
repz
ja
pushf
sub
xlat
fdiv
mov
sub
fs
mov
mov
sub
jae
fbld
bound
popa
adc
clc
out
inc
push
mov
pop
in
inc
cmp
outs
in
ret
nop
push
pop
call
fsub
xor
and
dec
xchg
jbe
or
addr16
jne
stc
jns
call
iret
add
push
add
clc
jno
rol
pop
cmp
and
and
stc
outs
sub
adc
nop
inc
jno
mov
ror
dec
rcl
push
jl
test
sbb
pop
cmp
inc
cmp
xchg
sub
fcom
jmp
adc
inc
push
bound
and
aaa
pop
xchg
add
mov
mov
pop
nop
jno
add
pop
mov
add
add
jnp
xor
or
scas
int
cmp
pop
mov
and
test
mov
int3
ror
jne
in
lods
or
lea
movs
shr
retf
sbb
jno
xor
js
sbb
jge
ja
or
clc
adc
push
loope
xchg
dec
or
cmc
add
lahf
lea
fisttp
(bad)
pop
(bad)
xchg
add
xor
add
ins
jge
not
sbb
jne
or
mov
sub
out
movs
ror
mov
addr16
push
and
outs
imul
xor
dec
xor
call
popa
outs
test
add
hlt
push
or
and
daa
mov
leave
and
aad
sbb
in
add
mov
mov
and
mov
mov
cs
les
bound
pop
mov
test
lock
scas
add
in
cvttps2pi
jb
and
mov
jecxz
xlat
push
adc
div
fldcw
dec
cwde
shl
iret
xor
add
xor
adc
xchg
push
or
and
push
(bad)
dec
sahf
inc
jae
mov
push
fcomp
adc
mov
out
pop
push
push
dec
mov
jmp
sub
js
push
imul
push
shl
and
add
dec
pop
add
xchg
enter
call
dec
mov
dec
mov
add
or
ret
pushf
xor
mov
test
cmp
mov
mov
mov
sub
mov
and
jmp
mov
xchg
cwde
popa
or
leave
and
xor
or
and
xchg
xchg
xchg
mov
sbb
mov
dec
xor
fiadd
ret
push
mov
sbb
inc
or
mov
in
sbb
fisttp
mov
retf
fbld
jo
es
cmp
add
jp
cli
or
cmp
pop
jo
in
ret
and
jmp
rcl
cmp
xor
jl
cmc
test
ds
retf
push
adc
adc
mov
jle
jae
mov
and
or
push
sbb
enter
add
adc
lods
fsub
mov
pop
or
scas
or
mov
mov
push
inc
retf
push
adc
leave
gs
adc
inc
cs
inc
xor
movs
jb
xchg
xor
push
mov
sub
sub
add
xchg
inc
adc
nop
cmps
or
pushf
push
cmp
jge
add
clc
push
mov
push
cmp
pop
dec
ds
rol
sbb
xor
or
or
fadd
xchg
adc
sub
xchg
sbb
sbb
inc
xchg
dec
or
nop
retf
xor
clc
cld
retf
test
adc
add
scas
adc
xchg
add
pop
sbb
repnz
(bad)
sbb
lock
in
inc
pop
dec
sbb
loopne
pop
jl
and
loopne
adc
call
test
(bad)
out
sbb
sbb
shl
gs
and
aam
xchg
dec
cs
fmul
and
sbb
cmp
pusha
jmp
sub
pop
sahf
dec
movs
add
cs
rol
jo
ror
dec
and
pop
xor
fiadd
cmp
add
enter
and
test
sub
mov
jb
cwde
daa
cwde
pop
mov
add
xor
fcomp
pop
ror
push
xchg
pop
mul
xchg
dec
jmp
loopne
fsub
mov
sub
push
loopne
mov
pop
in
mov
mov
fisubr
add
push
sub
in
ret
jmp
rcl
cmove
ret
push
jno
jo
xchg
dec
mov
fisub
pusha
cs
leave
fs
pop
ins
ins
pop
sub
pop
push
pop
xor
push
push
pop
movs
xor
pop
dec
das
mov
mov
xchg
dec
mov
inc
and
jne
leave
sub
xor
call
xor
dec
xor
xor
loope
je
xor
mov
fwait
or
jno
cmp
cmc
cmp
pushf
adc
add
sub
ds
mov
fstp
jne
sbb
lea
dec
mov
xchg
aam
sbb
int
adc
enter
mov
push
leave
mov
int
add
dec
mov
sub
dec
test
xchg
aam
and
xor
dec
hlt
sub
aaa
add
or
fs
sub
shl
pop
movs
repnz
cld
std
add
nop
push
xchg
add
das
pop
jecxz
dec
push
lds
dec
retf
pushw
jae
xchg
or
std
pop
mov
xchg
mov
dec
fadd
fadd
lods
mov
xor
fadd
and
push
das
(bad)
xchg
loopne
aaa
sbb
add
leave
sub
shl
leave
das
pop
dec
in
sbb
aam
and
test
enter
cs
pop
int3
int3
shr
or
in
push
mov
inc
js
push
and
mov
rol
pop
or
xchg
outs
adc
fadd
call
pop
pop
mov
add
fwait
sbb
add
imul
push
imul
or
add
mov
test
xlat
mov
push
inc
es
sub
movs
inc
icebp
sub
lds
bound
dec
and
push
or
xor
mov
sbb
es
in
lock
pop
ins
or
shl
jae
or
dec
enter
dec
adc
inc
pop
inc
(bad)
dec
sbb
jmp
push
stos
es
leave
mov
call
add
imul
cwde
mov
enter
cs
into
ror
test
jg
in
bound
ret
in
stos
cld
mov
adc
xor
or
aas
dec
inc
adc
test
aas
dec
push
jbe
pop
enter
jo
mov
inc
cmp
mov
nop
cwde
mov
ret
addr16
sub
xor
xor
out
inc
mov
sbb
iret
cmps
test
adc
add
add
push
popa
xor
sbb
jmp
push
mov
(bad)
dec
rol
mov
fcmove
cmps
mov
push
and
dec
mov
out
and
leave
mov
cmp
addr16
cmp
jle
fidivr
rcl
jo
dec
cmp
or
mov
add
add
xor
jnp
or
and
sub
(bad)
and
push
sbb
addr16
cmp
lods
xor
mov
push
mov
push
cwde
or
add
push
inc
xor
out
dec
push
pop
ret
rcl
xor
loope
enter
pop
in
add
sub
jmp
imul
add
xchg
add
outs
sar
add
push
jns
idiv
push
jno
jns
sub
icebp
movs
mov
shl
jne
loopne
in
cmp
mov
dec
aam
mov
nop
ror
mov
dec
mov
jmp
xor
push
cdq
in
mov
xchg
sbb
inc
cmps
jge
push
xor
cmp
xor
nop
mov
xchg
sub
mov
xchg
arpl
mov
dec
call
jmp
das
in
addr16
jae
nop
in
jns
repz
lods
retf
add
test
cmp
sbb
cs
sub
arpl
repnz
mov
das
dec
repnz
mov
repnz
nop
inc
ds
mov
mov
enter
mov
mov
nop
add
mov
xchg
push
add
cs
inc
pusha
pop
out
outs
and
or
mov
dec
mov
xchg
mov
and
pop
or
sbb
mov
jl
icebp
xchg
arpl
cs
cmp
cli
mov
jl
out
cmp
(bad)
mov
add
fxch
add
inc
dec
mov
xchg
icebp
jne
imul
mov
push
and
xor
mov
add
sbb
or
bound
inc
mov
mov
es
shl
add
rcl
pop
push
or
sub
imul
jno
popa
xchg
jo
(bad)
pop
jne
jnp
dec
xor
iret
lahf
and
loope
enter
mov
ins
rol
inc
call
mov
mov
xchg
jp
jne
mov
add
inc
mov
pminub
sbb
imul
(bad)
push
dec
jns
or
test
cmp
and
mov
or
pop
mov
retf
test
xchg
add
sbb
ret
xchg
add
outs
test
inc
xchg
data16
mov
dec
cwde
pop
cwde
push
icebp
mov
test
lock
mov
fistp
(bad)
rcl
pop
xor
jno
sub
dec
push
les
icebp
adc
movs
mov
shl
pop
dec
les
sub
inc
and
jae
dec
sbb
xchg
movs
adc
inc
add
mov
fst
xchg
or
in
xchg
stos
ror
dec
sub
outs
cmp
xlat
sub
sbb
(bad)
loope
or
adc
ja
push
and
std
and
add
sbb
pop
sub
adc
xchg
pop
push
adc
sbb
fs
sbb
or
and
inc
cld
(bad)
sub
rol
add
test
or
pop
es
lock
lock
or
hlt
clc
add
pop
sbb
push
pop
(bad)
call
imul
imul
mov
xlat
adc
push
addr16
enter
jmp
jmp
sub
mov
push
movs
jns
adc
sub
ja
push
jmp
xor
or
mov
repnz
sub
mov
sub
adc
or
rol
mov
test
call
out
or
fnsave
mov
ss
(bad)
dec
inc
dec
jne
(bad)
xor
fwait
js
jge
dec
das
enter
mov
int3
fidivr
inc
or
pop
test
xchg
out
shl
fwait
add
ins
mov
(bad)
mov
jmp
fcom
dec
adc
cmp
cmp
xchg
add
mov
jg
cwde
cmp
sbb
hlt
sbb
mov
xchg
stc
mov
fadd
mov
adc
rol
inc
cli
xor
inc
pusha
jnp
mov
add
xor
cmc
pop
fiadd
add
in
jns
mov
call
in
dec
add
cli
clc
mov
jb
es
outs
int
adc
or
xor
loopne
pop
out
jl
sub
outs
mov
jge
aaa
fwait
int
jl
std
fs
inc
lods
inc
add
iret
aas
(bad)
cmp
xchg
push
inc
add
inc
add
xor
out
adc
xor
adc
cld
jnp
sti
and
inc
int3
push
hlt
les
push
push
jns
div
mov
imul
sahf
cmps
stc
cmp
lods
fwait
jl
inc
xor
out
cmp
add
call
in
mov
cmps
adc
rep
fwait
out
ret
and
out
loopne
iret
jge
fnstcw
rcl
push
and
data16
sahf
cmps
push
hlt
pop
sub
add
dec
shl
out
jl
cld
pop
inc
push
lods
xor
imul
or
mov
cmp
repz
cwde
mov
int
cmp
mov
nop
xchg
dec
jl
dec
repz
call
shl
mov
mov
cmp
repz
ret
ds
sahf
ret
pushf
les
mov
xor
add
rol
sti
xor
out
(bad)
test
addr16
cld
add
jl
dec
fldcw
call
rcl
push
pop
out
cmp
cmps
and
xor
fsubr
aaa
push
hlt
call
dec
es
push
in
mov
out
jl
dec
ins
push
bound
or
push
adc
sbb
imul
xchg
mov
cld
call
int3
xchg
xchg
push
cld
call
sahf
or
cmps
lods
add
(bad)
movs
mov
enter
frndint
div
sub
add
inc
add
int
add
add
clc
in
sar
xor
cld
or
mov
mov
jns
push
nop
lock
mov
sbb
and
push
rcr
add
mov
inc
add
mov
mov
idiv
push
xor
mov
jns
mov
mov
cmp
cmps
jl
mov
jns
out
mov
call
cmps
mov
faddp
(bad)
push
add
lods
data16
fdivp
pop
and
hlt
mov
in
mov
mov
push
fmul
es
test
int
repz
mov
push
push
mov
ins
(bad)
and
add
and
xor
jl
dec
jo
dec
add
sub
int3
sub
cmp
repz
mov
pushf
sbb
div
mov
push
cmp
or
jns
out
je
lods
jl
ds
lahf
mov
sar
mov
ds
repz
sahf
push
movs
cmp
je
lods
nop
cmp
lahf
out
pusha
in
je
inc
popf
data16
and
hlt
push
test
js
or
jle
mov
and
add
loopne
push
or
and
mov
pop
(bad)
out
dec
inc
adc
dec
call
out
pusha
mov
pusha
inc
or
xor
mov
push
data16
jbe
pop
add
and
sub
icebp
(bad)
dec
test
retf
int3
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
inc
pop
push
and
pop
icebp
mov
outs
mov
imul
leave
and
ds
push
(bad)
mov
nop
js
adc
ss
adc
push
adc
add
add
inc
cmpxchg
mov
shl
mov
and
xchg
es
xor
out
cmp
or
loop
scas
add
out
sub
jg
or
sbb
cmp
repz
xor
inc
dec
repz
repz
pop
pusha
push
iret
js
mov
repz
mov
ror
cmp
repz
loopne
lock
cmp
clc
jg
add
sbb
cmp
add
add
dec
and
cmp
mov
xchg
mov
adc
sbb
je
and
xchg
xchg
daa
and
nop
xchg
inc
enter
mov
sbb
jb
pop
mov
adc
mov
sub
rcr
and
pop
or
dec
shr
ja
cld
icebp
cld
push
push
adc
adc
adc
(bad)
dec
or
cmp
push
test
ins
adc
mov
aam
clc
or
sbb
cmp
jbe
out
push
call
adc
in
inc
mov
push
loopne
push
push
inc
xor
or
ret
jmp
push
retf
daa
dec
and
xchg
xor
ss
and
sbb
push
xor
dec
fwait
add
ins
outs
jne
and
ins
jns
mov
mov
add
or
or
pop
ja
fild
xchg
or
push
fadd
pop
jbe
clc
mov
pusha
push
cs
out
jl
add
and
add
out
push
add
jnp
xchg
adc
call
sbb
cmps
xor
imul
push
jle
sbb
mov
es
jb
arpl
xchg
cmps
movs
add
jnp
add
gs
imul
ror
mov
xchg
dec
div
push
mov
dec
jle
and
ins
mov
add
repz
pop
or
or
repz
or
cmp
repz
sbb
and
iret
repz
xor
inc
push
arpl
repz
cmp
mov
jb
sub
pop
jb
pop
add
add
lahf
or
cmp
inc
out
or
mov
inc
popa
and
add
out
sahf
add
or
sbb
sahf
out
and
inc
pusha
(bad)
mov
xchg
daa
daa
mov
pop
pop
or
or
daa
daa
daa
or
add
jne
dec
adc
lahf
sbb
cmp
or
mov
lea
and
and
fld
inc
in
mov
ins
fisubr
xchg
push
xchg
das
inc
lea
(bad)
inc
aaa
icebp
call
adc
or
or
or
ds
pop
nop
jp
or
push
add
fisubr
adc
daa
clc
daa
adc
inc
out
pop
mov
xchg
xchg
xchg
xchg
push
add
repnz
add
enter
pop
sbb
bound
fdivr
mov
(bad)
jae
outs
div
mov
add
outs
jb
adc
sbb
and
and
dec
lds
sub
push
lods
adc
arpl
rcr
retf
js
imul
cmps
add
push
pop
aas
sahf
out
iret
jg
inc
(bad)
(bad)
push
out
(bad)
(bad)
(bad)
push
sbb
retf
test
clc
mov
sti
rol
das
hlt
dec
pushf
push
sbb
(bad)
add
sgdtd
push
push
pusha
out
sahf
out
mov
jns
aam
cld
adc
repz
pop
ins
jl
repz
repz
movs
mov
call
sub
out
sahf
cmp
pop
fs
jns
out
cwde
test
(bad)
aam
ja
out
hlt
jle
lahf
push
xor
out
push
pusha
jo
nop
out
sahf
out
mov
lahf
jns
out
mov
ins
out
sahf
out
xchg
movs
mov
dec
repz
shl
hlt
or
repz
dec
pop
ins
jl
cmp
repz
imul
mov
jns
xor
fs
fstp
mov
xor
out
call
cmp
repz
dec
pop
ins
jl
movs
ds
repz
int3
loopne
add
and
inc
push
out
sahf
out
jo
cwde
lods
int
jns
mov
movs
sbb
repz
cmp
repz
repz
movs
mov
iret
shl
hlt
or
jmp
ror
pop
and
mov
js
jns
out
pushf
test
enter
int
lock
dec
iret
repz
pusha
je
movs
mov
sahf
out
cmp
hlt
or
and
out
cmp
fs
out
sahf
out
mov
sahf
out
adc
push
cmp
push
out
pushf
test
fmul
repz
in
add
sub
pop
cmp
repz
test
repz
hlt
or
out
sahf
out
dec
pusha
js
fucom
jns
lods
rcl
add
out
sahf
out
xor
ins
js
out
sahf
mov
cmp
sar
adc
cmp
repz
repz
out
ds
fdiv
add
adc
out
sahf
cmp
ins
adc
fdiv
add
and
cmp
repz
nop
iret
repz
lods
mov
repz
mov
dec
push
iret
xchg
mov
fdiv
or
sbb
cmp
push
jl
movs
mov
out
in
pop
or
push
cmp
jns
out
fs
mov
out
aam
add
sbb
repz
cmp
mov
mov
sahf
cmps
stc
adc
cmp
out
sahf
out
mov
sahf
loopne
or
push
sub
out
sahf
out
push
repz
int3
call
dec
cmp
repz
jl
mov
jns
iret
repz
sbb
out
sahf
out
mov
lahf
lock
sahf
push
sub
jns
out
sbb
sahf
fsubr
cld
pop
pop
pop
push
sub
repz
push
push
iret
repz
cmp
repz
add
push
and
push
fs
repz
movs
mov
pop
cmp
cmp
pop
pop
pusha
push
sub
repz
repz
pop
jo
movs
out
cmp
rcl
clc
add
sahf
out
sahf
and
fs
jge
out
lods
shl
or
sahf
out
ficom
xor
pop
ins
mov
out
mov
repz
repz
cmp
fs
repz
js
pushf
lods
(bad)
fcomp
add
sbb
inc
jns
out
pop
push
jl
out
loopne
or
and
repz
xor
push
iret
repz
(bad)
fdiv
or
sahf
out
sbb
dec
pop
je
jns
out
pushf
mov
call
cld
or
and
push
push
test
cmp
repz
push
xor
repz
js
pushf
mov
mov
hlt
push
cmp
repz
ins
test
repz
fdiv
or
out
sahf
out
inc
dec
push
sahf
nop
pushf
mov
fsubr
cmp
sar
and
inc
push
repz
repz
js
cwde
test
repz
mov
ins
sahf
out
sahf
sbb
dec
pop
je
jns
out
xchg
mov
xor
out
clc
or
sbb
repz
cmp
fs
lods
ds
repz
shl
hlt
or
repz
pushw
sub
pusha
jo
iret
repz
xchg
test
int3
jns
iret
repz
or
and
out
sahf
out
pop
jo
xchg
(bad)
out
sahf
movs
mov
mov
jo
sub
push
fs
repz
pushf
mov
cmps
stc
cmp
shr
cld
or
sbb
out
sahf
xor
pop
push
out
movs
mov
loopne
sahf
out
test
cmp
pop
jns
out
je
xchg
lods
(bad)
sar
fsubr
clc
adc
iret
repz
xor
push
repz
test
(bad)
fdivr
loopne
call
push
sub
jns
out
inc
pop
push
sahf
test
cmp
out
call
xor
cmp
repz
push
pop
jo
iret
repz
nop
movs
mov
shl
sahf
cmps
stc
cmp
add
adc
jns
out
inc
push
push
sahf
out
movs
mov
xor
lock
sub
push
cmp
repz
js
mov
repz
aam
clc
ja
js
iret
repz
pop
ins
repz
repz
test
enter
iret
loopne
add
adc
sahf
out
sahf
inc
pop
jo
mov
jns
call
repz
repz
pusha
js
mov
mov
fdiv
add
pop
repz
repz
sub
push
push
iret
nop
movs
mov
out
adc
inc
push
jns
out
fs
xchg
movs
sar
mov
adc
repz
sub
push
push
repz
mov
sahf
cmps
stc
adc
xor
ins
out
sahf
out
xchg
movs
rcr
sahf
ja
lock
mov
out
sahf
out
test
jbe
fsubr
nop
mov
sahf
out
push
mov
out
loopne
or
iret
sub
push
fs
cmp
repz
test
shr
jns
cmps
stc
add
adc
cmp
out
sahf
out
adc
sahf
(bad)
fsubr
clc
or
cmp
cmp
ins
cmp
iret
repz
test
lock
out
sahf
cmps
inc
pop
js
mov
repz
int3
loopne
sbb
repz
nop
lods
int3
call
or
sar
lods
shr
adc
iret
dec
ins
adc
hlt
adc
sub
jns
out
ins
adc
shl
clc
or
cmps
push
inc
jns
out
push
push
xor
out
in
add
sbb
iret
repz
cmp
js
test
iret
repz
fdiv
or
jns
adc
iret
sar
(bad)
rcr
call
hlt
add
jns
out
cmp
push
pusha
test
jns
ins
js
nop
add
push
test
(bad)
add
sahf
out
aam
in
clc
add
iret
repz
adc
xor
dec
cmp
repz
fs
mov
out
xchg
(bad)
rcl
inc
lods
push
pop
mov
dec
push
and
outs
jae
push
inc
cmp
mov
sbb
pop
ja
cmps
push
pop
adc
push
sbb
mov
aas
add
add
push
add
dec
(bad)
rol
push
fnsave
lahf
aas
adc
pop
dec
sbb
mov
jmp
inc
call
fsub
cmps
retf
js
cld
shr
sti
push
mov
or
iret
repz
or
add
iret
repz
movups
and
repz
adc
cmp
push
or
fnstcw
and
sbb
jns
out
push
adc
or
sahf
push
cld
sbb
repz
inc
adc
repz
repz
add
iret
repz
push
mov
sar
out
sbb
or
push
adc
sbb
xor
dec
push
add
repz
or
iret
repz
add
pop
add
out
sahf
out
cmp
jns
push
mov
out
mov
int3
mov
out
cld
mov
and
sub
inc
ficomp
into
repz
call
ficom
add
or
jg
cmp
jnp
bound
or
or
push
bt
or
pop
mov
in
add
xchg
mov
out
out
or
jbe
(bad)
mov
sar
xchg
pop
pushfw
push
movs
lods
out
test
xlat
test
push
sub
out
sahf
cmp
push
out
xchg
test
pop
mov
repz
fsub
in
hlt
mov
cwde
xor
cld
add
aam
adc
bound
and
xor
imul
jbe
jmp
push
out
(bad)
sar
xchg
das
sti
bswap
in
in
xchg
or
leave
leave
leave
add
adc
ror
leave
adc
xor
in
jbe
femms
or
in
in
adc
pop
add
adc
adc
movhps
loope
push
cmp
inc
push
pop
dec
repz
repz
fs
ins
mov
mov
test
mov
cmp
adc
mov
fadd
add
cmp
xor
fs
repz
nop
movs
mov
repz
(bad)
shr
clc
add
adc
xor
pop
jo
inc
clc
jns
in
dec
lahf
xor
push
add
jecxz
pop
imul
stos
and
and
add
ficomp
fwait
pop
pop
add
test
mov
sti
cld
std
(bad)
(bad)
jns
out
add
add
xchg
add
or
or
mov
add
add
adc
jnp
loope
adc
push
push
sbb
xor
and
add
cmp
inc
pusha
or
and
and
dec
outs
inc
add
imul
xor
jne
add
add
idiv
or
nop
pop
mov
iret
repz
push
std
aam
in
iret
repz
hlt
stc
or
jns
out
sbb
xor
inc
out
sahf
out
pop
hlt
ins
repz
out
sahf
jl
nop
icebp
movs
lock
out
mov
sar
in
lock
add
jmp
pushf
cmp
adc
sub
xchg
mov
and
sar
adc
add
shr
jno
repnz
int3
push
pop
mov
jle
or
or
mov
scas
out
outs
push
pop
ins
cld
adc
loopne
clc
cld
bswap
mov
aas
pop
add
push
pusha
push
(bad)
sub
pop
sbb
inc
mov
sbb
fiadd
or
push
outs
xor
jmp
pop
je
mov
mov
add
enter
addr16
and
and
out
inc
hlt
pop
dec
add
mov
xlat
add
add
and
dec
into
xlat
sub
xchg
inc
inc
pop
or
sbb
sahf
xchg
nop
dec
push
rol
les
leave
and
add
es
add
cs
ss
lock
jnp
inc
inc
mov
xchg
sub
repnz
add
jns
dec
iret
add
pop
sbb
inc
add
and
loopne
add
cmp
aad
fs
pop
xor
faddp
es
(bad)
loop
inc
loopne
and
repnz
sub
and
add
pop
fwait
inc
pop
mov
cmp
pop
jb
pop
push
push
and
xlat
add
xchg
dec
add
or
inc
inc
xchg
or
xchg
je
cwde
leave
dec
scas
loopne
add
push
xor
add
inc
ja
cdq
in
xor
or
pop
rol
inc
lock
and
fs
mov
mov
dec
cwde
ds
mov
inc
rcr
int
pop
pushf
out
inc
fs
inc
dec
das
jle
pop
int
add
nop
or
and
in
pop
mov
sahf
bound
aaa
and
in
add
sub
adc
mov
dec
dec
dec
inc
lods
inc
dec
dec
inc
and
push
jle
jno
in
or
add
inc
inc
push
inc
adc
jne
je
bound
popa
and
sub
mov
les
loope
and
out
inc
cmp
gs
add
mov
jg
xor
add
dec
dec
push
mov
loopne
mov
push
inc
dec
add
addr16
sbb
ret
mov
lahf
outs
or
push
popa
inc
mov
and
test
or
adc
mov
and
add
push
pusha
adc
add
ds
arpl
mov
imul
icebp
shl
popa
mov
push
ss
or
jno
pop
rcr
jl
push
mov
daa
mov
movs
add
add
jne
adc
shl
int3
pusha
or
ja
cmp
popa
add
je
pop
sbb
or
test
jp
outs
lods
pusha
pusha
mul
cmps
clc
dec
mov
repz
mov
js
xor
xor
lods
dec
inc
je
add
sub
or
inc
fcom
and
stc
sbb
ins
je
pop
and
push
cwde
scas
shr
and
daa
jecxz
loop
sahf
aas
or
dec
add
data16
sub
sub
retf
pop
movs
sub
mov
fwait
inc
push
fcomp
mov
sbb
or
das
add
xor
sbb
add
popa
xchg
mov
shl
mov
ds
or
pop
mov
cmp
popa
adc
rol
inc
cdq
das
and
push
pusha
ret
pop
sbb
inc
xor
inc
inc
lock
sub
sub
inc
push
dec
dec
and
and
shl
js
push
inc
push
and
and
test
push
sub
sar
jge
rcl
add
(bad)
in
pop
xor
jmp
cmp
outs
inc
ss
and
sbb
sbb
push
(bad)
mov
add
je
jo
lods
scas
xor
sbb
add
shl
out
xchg
push
or
lods
sti
cs
xchg
test
jge
ret
les
sub
fisub
pop
cmp
add
or
outs
je
mov
jbe
dec
xchg
sub
inc
mov
ins
js
add
sub
outs
pop
push
int3
add
pop
sub
and
xor
mov
pop
ss
icebp
sub
inc
popa
rcl
je
xchg
loop
sub
push
mov
adc
mov
repnz
dec
push
inc
into
inc
mov
xchg
or
xor
repnz
add
into
cld
push
add
dec
push
dec
bound
cmp
or
test
cmp
or
inc
sbb
push
mov
stos
cmp
xchg
cmp
jecxz
lahf
sbb
cmp
in
fcomp
sub
push
dec
inc
scas
mov
aad
movs
inc
and
sti
pop
and
icebp
and
adc
aad
addr16
daa
pop
sbb
inc
ror
sbb
adc
cmp
push
fs
pop
pop
popf
ret
jns
js
(bad)
xor
add
retf
add
mov
add
or
gs
mov
mov
daa
popa
adc
(bad)
cmp
and
xor
cmp
sbb
pop
add
add
shl
adc
test
sti
mov
or
loopne
mov
mov
sbb
popf
xchg
mov
arpl
inc
push
pop
cmps
fdivp
add
and
sbb
push
loopne
dec
dec
arpl
cmp
call
mov
fidiv
jp
repnz
push
push
inc
scas
not
fadd
pop
dec
adc
jnp
adc
mov
add
aam
sub
add
push
pusha
push
lock
sbb
mov
jae
adc
sar
push
push
dec
dec
xchg
add
xor
arpl
mov
jno
and
jbe
lds
and
sbb
dec
dec
scas
pop
inc
xchg
bound
pop
imul
add
adc
inc
push
jmp
mov
inc
or
xor
in
sub
pushf
push
or
dec
scas
sbb
lock
loopne
cmp
push
inc
or
pop
in
jecxz
inc
lock
pushf
test
mov
mov
inc
or
pop
jbe
sbb
mov
push
inc
push
test
dec
push
xchg
add
inc
sub
inc
inc
sbb
ins
cmp
ss
push
inc
lods
dec
push
sub
dec
push
out
cwde
cdq
mov
and
int3
mov
cwde
pop
adc
ret
add
call
xchg
dec
loopne
sbb
fiadd
push
in
inc
scas
jp
loop
cmp
push
push
dec
adc
dec
ret
imul
push
rol
mov
mov
rcr
xchg
out
dec
add
cld
sbb
sti
push
int3
mov
sbb
mov
inc
push
xchg
test
nop
pop
dec
push
push
rcl
push
ret
aad
shl
js
lods
push
push
adc
inc
fdiv
mov
ficom
dec
jecxz
inc
xor
xor
jb
cmp
fs
cli
ss
xor
je
and
inc
sub
sbb
(bad)
or
and
sbb
add
sti
jg
xchg
inc
add
add
cmp
sub
xor
sbb
clc
mov
push
cmp
and
adc
in
sar
push
mov
sbb
adc
sub
dec
rol
sub
add
lea
adc
sub
add
add
push
add
add
push
add
or
add
outs
test
ss
push
or
push
add
fdivr
div
cmp
xor
or
or
add
int
jecxz
mov
add
or
cmp
or
lock
inc
adc
xchg
es
xor
cmp
cmp
inc
add
dec
add
add
(bad)
outs
(bad)
stc
arpl
imul
add
test
ror
add
mov
or
mov
mov
mov
jl
add
add
mov
inc
dec
jbe
in
add
add
add
(bad)
(bad)
push
or
sbb
and
daa
add
add
add
add
add
add
add
inc
add
(bad)
(bad)
dec
dec
add
pop
add
add
ins
add
arpl
or
xor
or
push
mov
adc
imul
cmp
inc
add
mov
(bad)
(bad)
(bad)
call
dec
dec
adc
xchg
inc
jnp
sub
adc
js
cs
push
cmp
dec
fs
(bad)
outs
jg
and
data16
dec
jb
ja
pop
jl
ins
dec
jp
bound
addr16
jne
and
data16
shr
outs
fadd
adc
push
push
mov
shl
sbb
movs
sub
push
add
add
add
mov
jo
es
mov
add
add
push
fstp
add
jmp
int
(bad)
into
add
sub
sub
xchg
jle
das
adc
add
jbe
xor
push
lds
les
sbb
mov
jg
jg
push
cld
addr16
add
rol
and
mov
cmps
add
int3
add
push
xchg
add
add
add
sub
fimul
add
sbb
sbb
rol
xor
push
pop
add
add
add
stos
dec
add
add
iret
add
cmps
or
or
add
retf
ss
das
mov
push
dec
adc
add
add
add
add
add
mov
mov
mov
or
push
inc
pop
sbb
pop
mov
dec
cmp
push
jbe
or
retf
mov
add
outs
xor
push
add
jne
dec
lock
add
(bad)
out
xchg
add
jmp
pop
or
add
add
mov
add
pop
mov
mov
add
mov
add
pop
add
mov
mov
ret
call
add
add
add
in
xchg
cmps
sub
add
xor
mov
mov
jns
add
add
pop
xor
push
sub
(bad)
pop
outs
fwait
jbe
add
xchg
jg
add
sbb
ror
scas
sbb
xchg
add
cdq
add
ss
jbe
mov
add
xor
jle
cli
data16
xor
cwde
sbb
jg
faddp
adc
add
aas
push
out
ds
call
aaa
push
or
jle
cli
retf
fistp
je
aas
xchg
cmp
add
inc
add
add
push
sbb
add
xchg
in
pusha
pusha
jg
aas
stos
test
lea
fnsave
out
or
mov
ficom
sbb
add
aas
mov
jno
jnp
adc
(bad)
pusha
xor
push
mov
retf
inc
stc
add
add
add
or
out
inc
jg
(bad)
inc
add
test
enter
test
fld
adc
sbb
cmp
and
pop
sbb
pop
and
push
mov
cmps
movq
repnz
gs
mov
add
add
or
fcomp
cs
add
pop
(bad)
aaa
shr
adc
xchg
test
pmaxsw
jns
dec
add
ds
dec
push
dec
add
mov
dec
aas
inc
ss
jl
cmp
mov
push
push
add
adc
pop
repz
pop
jp
cmps
ja
push
ror
push
dec
js
mov
arpl
int3
add
loope
add
add
add
(bad)
jbe
out
push
pop
clc
fisubr
add
add
test
mov
add
add
add
add
repnz
std
out
jmp
jmp
sti
add
and
movs
aas
fmul
call
fist
lea
in
push
pop
mov
iret
aaa
ss
les
popa
inc
push
mov
popf
add
inc
fild
ss
(bad)
idiv
retf
add
adc
pop
cmps
mov
add
add
mov
out
adc
mov
xchg
mov
push
mov
or
or
add
add
dec
add
jb
mov
clc
xchg
jle
add
pop
jg
test
add
ret
cmps
add
mov
(bad)
(bad)
mov
out
mov
repnz
push
icebp
add
or
out
add
add
mov
jmp
fiadd
loope
imul
fs
scas
add
jnp
inc
and
cmp
dec
inc
sub
neg
ds
cs
push
ss
mov
inc
retf
out
jne
outs
push
(bad)
adc
push
sub
mov
xor
(bad)
jmp
std
ds
add
repz
das
push
xor
cvtpi2ps
js
push
inc
add
(bad)
push
psraw
fdivrp
neg
mov
outs
jnp
cmp
(bad)
xchg
mov
xchg
pop
loop
out
mov
cmp
inc
inc
ds
into
je
add
or
or
pushf
add
add
sub
xchg
sub
out
adc
or
scas
pop
add
cmc
sbb
repnz
dec
or
jbe
mov
push
add
push
or
or
pop
enter
or
clc
stos
mov
push
add
add
ret
add
push
inc
add
cdq
add
data16
test
scas
pushf
repnz
fisub
jb
add
jb
mov
push
icebp
jmp
cmp
add
pop
sub
cld
jmp
pop
add
add
dec
adc
mov
dec
mov
mov
das
add
(bad)
in
xchg
push
rol
imul
add
mov
add
pop
stc
repz
adc
rol
add
dec
add
or
scas
call
add
add
dec
add
inc
(bad)
mov
inc
add
push
add
repnz
cld
add
sub
jb
scas
add
out
icebp
add
sub
call
pop
add
dec
add
add
add
sbb
pop
dec
sub
push
fstp
movs
xchg
cwde
repz
mov
push
ret
(bad)
in
add
cmps
push
or
call
jmp
inc
daa
and
pop
or
jmp
sahf
mov
push
add
add
xchg
(bad)
mov
push
add
add
data16
dec
call
add
outs
push
dec
in
fbld
jmp
add
dec
add
(bad)
fbld
sub
mov
sbb
add
add
add
mov
cmps
into
add
mov
fild
adc
adc
add
add
retf
add
add
sahf
clc
clc
(bad)
jg
pop
add
inc
add
add
add
add
add
js
bound
popf
push
push
sbb
mov
and
pop
int
or
sub
sub
fld
jle
or
jb
(bad)
jp
mov
dec
push
mov
add
add
add
add
sbb
(bad)
inc
int3
add
add
add
mov
add
fild
add
add
add
add
add
mov
cmps
(bad)
jg
nop
add
add
inc
add
add
repnz
add
jae
aas
push
fild
add
add
mov
mov
add
bound
add
cmps
xor
call
(bad)
mov
cld
add
ret
add
jmp
imul
std
add
add
add
add
xchg
add
add
rcl
add
jge
push
add
icebp
idiv
add
mov
mov
lods
add
stos
push
fistp
add
add
cmp
add
add
(bad)
(bad)
push
add
add
push
sbb
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
mov
add
add
add
dec
pop
push
sub
or
and
pushf
jl
add
loop
sar
add
add
add
add
add
rol
iret
push
gs
stc
add
mov
add
sub
add
(bad)
jg
and
mov
add
add
add
xchg
add
ret
add
add
add
test
mov
sub
call
add
neg
add
add
rcr
in
ins
(bad)
mov
add
add
xor
and
(bad)
mov
mov
fld
rol
rol
rol
pop
hlt
pxor
add
inc
pop
ret
add
jno
fidivr
mov
es
jbe
and
xchg
not
adc
jg
add
add
sahf
push
xchg
sti
cmps
cmps
jmp
rcr
into
fs
add
cmps
in
dec
or
jg
out
push
ins
dec
or
add
add
jnp
ja
or
ss
add
loop
shr
cmp
pop
push
je
lea
add
add
js
mov
push
cmp
daa
mov
xchg
push
in
test
dec
mov
cmps
mov
mov
movs
add
adc
sbb
xchg
or
inc
std
jp
movs
stos
mov
out
out
add
in
rol
add
fwait
add
rcr
add
pop
add
pop
loopne
cld
add
jbe
pop
xchg
clc
add
fimul
add
pop
mov
add
dec
scas
push
add
stos
add
xlat
dec
mov
and
and
lock
mov
add
and
add
jecxz
loopne
fild
cmp
add
add
add
add
add
add
add
or
sbb
inc
jbe
add
add
add
mov
add
add
add
add
out
mov
call
adc
jle
mov
add
dec
cld
add
push
jp
js
ja
outs
add
test
xchg
xchg
test
add
or
sbb
scas
(bad)
call
add
add
add
add
add
add
(bad)
(bad)
cli
test
cmps
add
add
mov
(bad)
sub
sbb
loop
add
shl
or
push
and
daa
scas
ror
push
sbb
sbb
sbb
inc
sti
sar
add
add
mov
pop
lea
mov
scas
or
xchg
add
out
xchg
fst
xchg
add
add
jg
call
add
pushf
add
repz
fwait
push
movs
add
add
push
cmps
add
int
add
add
add
pop
movs
out
or
scas
out
mov
cmp
dec
stos
stos
mov
add
lods
scas
add
add
mov
iret
fist
add
mov
mov
sahf
lods
add
mov
pop
lock
dec
ror
add
add
lods
inc
int
xchg
ret
add
add
retw
add
loope
xchg
fwait
int3
add
pop
fwait
add
mov
add
add
add
add
into
add
add
add
add
add
add
mov
enter
scas
or
sbb
add
aad
repz
add
(bad)
add
add
add
add
add
add
stos
or
lods
add
out
cmp
mov
aas
fdivrp
into
mov
fild
fisttp
add
xor
add
add
les
inc
fld
aam
aam
or
sbb
xor
mov
push
jbe
in
pop
outs
push
pop
loop
add
add
jecxz
mov
or
pop
mov
call
add
push
jmp
gs
not
push
mov
pop
xchg
(bad)
push
in
adc
pop
add
fistp
lea
popa
inc
mov
mov
xor
mov
popa
add
add
test
xchg
bound
mov
ins
ss
xchg
adc
je
sub
xor
fld
mov
test
xchg
gs
loopne
adc
arpl
imul
ins
cmp
adc
jecxz
gs
mov
mov
enter
add
jbe
out
pop
fadd
sbb
fcmovnu
ficom
jb
adc
jbe
or
cmps
and
sahf
add
adc
or
iret
pop
cmp
rol
ficomp
adc
adc
jecxz
inc
js
mov
test
cmp
mov
xor
(bad)
aas
adc
loopne
adc
loop
outs
adc
mov
stos
lods
adc
xchg
sub
adc
ror
mov
fwait
jg
aam
jecxz
(bad)
(bad)
xchg
push
pop
stos
xchg
xchg
adc
adc
js
push
mov
add
add
mov
lahf
icebp
inc
cmp
rcl
adc
aam
popa
xchg
inc
aas
retf
int3
in
into
outs
out
pop
and
movs
cmps
cwde
adc
mov
mov
cmps
nop
xchg
xor
sbb
aam
mov
loope
fs
sub
fbld
inc
jae
xchg
mov
xor
adc
enter
xchg
jns
out
idiv
rcl
jle
ja
cwde
mov
outs
mov
data16
adc
fdivr
xchg
xchg
popa
call
les
call
retf
pop
cld
adc
ds
sti
xchg
mov
retf
or
movs
mov
jo
mov
imul
jns
fidivr
adc
ja
retf
cmp
xchg
dec
pusha
dec
xchg
add
adc
sti
push
fld
adc
adc
mov
add
pusha
mov
mov
fsubr
mov
add
or
sub
les
xchg
push
sbb
imul
cmp
xchg
shl
mov
pop
(bad)
sar
(bad)
fcompp
(bad)
or
mov
dec
or
jbe
fwait
jbe
add
iret
imul
js
fwait
push
push
add
(bad)
out
aaa
jns
lods
imul
lods
scas
mov
mov
pop
lods
call
fild
setnp
call
xlat
mov
movs
scas
mov
rol
(bad)
(bad)
jmp
scas
xchg
scas
jecxz
les
into
mov
cmp
cmp
sbb
or
or
inc
in
and
push
inc
imul
xor
enter
sbb
ds
cmp
fldcw
mov
into
ret
lods
cmp
jne
(bad)
lock
mov
sbb
pusha
jns
leave
aaa
adc
push
dec
add
push
add
out
pop
add
imul
mov
mov
mov
push
add
and
jae
out
in
pop
jns
sahf
mov
push
cmps
adc
dec
inc
mov
sbb
sub
add
inc
pop
adc
pop
jmp
pop
pop
add
jb
sbb
push
sbb
push
sbb
out
in
mov
push
mov
ins
mov
vpcmov
sub
jns
dec
sar
jne
add
hlt
xchg
push
add
or
jl
ss
add
push
outs
aad
push
cmp
repz
in
mov
fsub
push
pop
pop
mov
sub
mov
pop
je
add
inc
jmp
rcr
jo
push
jae
gs
fdivr
mov
mov
lods
dec
sbb
pop
mul
mov
push
or
pushf
adc
push
jmp
shl
add
pop
das
test
ret
xchg
pop
aas
pop
outs
loope
cmp
push
pop
sbb
jo
or
adc
out
adc
jle
mov
stc
and
mov
pop
addps
mov
add
jne
ins
cwde
pusha
and
mov
lods
sub
mov
rcr
mov
out
add
outs
pop
or
or
sub
sbb
dec
cmp
adc
imul
xor
ds
jo
rol
xor
ja
sbb
cmp
pop
or
shl
fs
(bad)
loopne
js
push
dec
or
xchg
cmp
sub
adc
push
arpl
pop
cmp
iret
xchg
loope
je
fs
and
sahf
push
xchg
xchg
adc
fwait
icebp
mov
push
jmp
pop
call
add
mov
xor
or
mov
jl
inc
pop
jecxz
sub
movs
push
and
sbb
sbb
mov
(bad)
nop
ficomp
jbe
lods
sub
cdq
les
loopne
jbe
inc
lea
mov
or
les
add
ret
push
adc
add
inc
sub
out
sbb
sub
pop
push
push
pop
push
or
xor
hlt
jo
and
test
mov
or
stos
inc
pop
add
imul
push
rcr
sti
(bad)
push
add
push
pop
or
adc
add
or
pop
mov
pop
jg
or
xor
test
add
mov
dec
sub
stos
popf
outs
inc
pushf
jecxz
in
into
clc
xchg
pop
mov
popf
scas
into
mov
add
push
mov
dec
sbb
fdiv
mov
adc
(bad)
loop
ja
xor
mov
sar
inc
int
loope
or
neg
pusha
popa
mov
pop
sbb
xchg
mov
inc
cmp
adc
scas
mov
lahf
aas
imul
inc
lods
ret
inc
outs
or
and
and
call
in
jle
ss
daa
jno
add
mov
push
lods
cmp
and
imul
dec
shr
mov
inc
xor
jmp
mov
cmp
bound
mov
add
adc
mov
cwde
iret
jnp
rol
aas
push
aad
hlt
pop
sahf
out
call
jns
out
(bad)
mov
cmp
out
sbb
inc
push
iret
repz
jge
mov
repz
jg
std
add
add
xor
or
and
in
ror
arpl
int
cmp
adc
out
aaa
not
jne
pop
dec
das
dec
ret
stos
lock
push
push
add
adc
test
cs
xor
jg
xor
xor
sub
xor
xor
cmp
cmp
fcmovne
adc
cmp
xor
cmp
xor
xor
xor
push
cmp
data16
xor
push
pushf
xor
popa
xor
add
inc
push
mov
ret
mov
sbb
fwait
xor
aam
dec
ret
jno
xchg
or
or
adc
fistp
outs
adc
fdiv
imul
test
lods
sbb
mov
(bad)
push
sahf
outs
dec
adc
mov
sbb
jge
bound
rcl
jecxz
adc
lods
xor
daa
sub
and
or
mov
movs
xor
sub
dec
scas
xchg
or
dec
dec
mov
das
inc
cmp
stos
ins
or
cdq
test
fsub
gs
imul
ins
jno
aaa
dec
and
sbb
or
jo
add
arpl
enter
popa
push
or
add
pop
xlat
push
xor
sti
fwait
out
push
inc
sbb
add
or
jae
loop
inc
push
jge
jmp
jl
les
and
mov
repz
or
add
pop
add
test
js
imul
push
lds
aaa
loopne
fs
imul
iret
dec
gs
lea
jecxz
push
call
and
xchg
lods
jae
js
push
lods
pop
xchg
das
sbb
adc
sub
ins
imul
test
inc
ins
jge
sub
movs
fadd
sbb
les
daa
mov
jo
xor
addr16
loop
push
push
push
sbb
add
or
add
arpl
and
rol
pop
adc
in
ds
push
les
adc
je
push
push
movs
add
pop
sbb
pop
enter
push
mov
aad
inc
cmp
sub
pop
push
(bad)
mov
pop
add
cmp
sub
mov
dec
add
lds
sbb
mov
and
sbb
and
movs
scas
(bad)
call
mov
add
add
ds
fisttp
cmp
cmp
aam
xor
adc
push
or
fidiv
fisub
sbb
push
(bad)
cmps
jo
mov
rcr
test
loopne
jb
pop
scas
ins
adc
push
movzx
aas
jnp
cmp
lahf
add
call
(bad)
(bad)
jmp
mov
and
sub
ins
fwait
jmp
sub
js
popf
adc
pushf
jbe
mov
adc
ret
(bad)
mov
cld
loopne
dec
push
inc
push
repz
sub
movs
push
shl
in
mov
inc
and
imul
cmp
cmp
imul
adc
call
mov
push
fdivr
jo
adc
outs
dec
push
add
mov
adc
sub
jmp
jp
addr16
and
cmp
call
push
popa
icebp
add
add
adc
or
das
mov
mov
and
sub
xor
outs
xchg
or
aaa
pop
add
sbb
push
aas
xor
aas
and
cmps
outs
fistp
pop
push
dec
push
dec
inc
pop
add
mov
jo
jo
stos
sbb
inc
neg
xor
imul
adc
cmp
imul
xor
fsubr
fiadd
sbb
mov
mov
aam
in
jo
sahf
jne
add
or
or
xchg
and
iret
sbb
cmps
xor
xor
popa
or
or
push
leave
cmp
add
xor
(bad)
call
lea
mov
lods
retf
add
sbb
dec
and
mov
adc
sbb
clc
mov
mov
gs
stos
xchg
mov
and
add
movs
dec
or
push
ins
sbb
ror
sbb
mov
add
ret
pop
mov
test
int
sbb
add
pop
hlt
xor
inc
inc
push
mov
jl
pusha
mov
test
nop
out
call
push
inc
popf
mov
inc
imul
adc
jecxz
push
dec
inc
repnz
xor
pusha
inc
or
pop
nop
dec
jecxz
add
in
aam
push
pop
sti
cmp
nop
and
mov
pop
in
fcom
cmp
popf
add
or
addr16
mov
add
add
out
pop
push
jecxz
out
leave
push
and
mov
push
or
pop
xor
adc
or
add
cwde
push
add
pop
sbb
cmps
sub
call
dec
inc
xchg
sbb
imul
push
pop
(bad)
cli
inc
ss
add
pop
rol
sub
ficom
imul
sbb
icebp
ins
cmp
cwde
sub
sbb
outs
sbb
mov
fsub
mov
adc
add
inc
xchg
jns
das
cmp
aam
jae
fbstp
inc
je
leave
int
imul
lea
jno
(bad)
jmp
fisub
cmp
sar
xor
aad
stc
and
sbb
sbb
push
out
jne
or
fadd
imul
out
fild
sub
fiadd
push
fisttp
mov
ss
xlat
jbe
push
lock
sub
mov
loopne
dec
push
push
fdiv
or
cmps
imul
add
add
xchg
add
into
sbb
push
sahf
es
(bad)
or
and
(bad)
(bad)
cmp
xor
xor
xor
xor
cmp
cmp
and
fcomi
xchg
ret
add
mov
loopne
pop
(bad)
adc
sub
cmp
add
and
xor
xchg
xchg
dec
push
or
and
pop
dec
and
jno
cs
pushf
and
inc
add
sub
add
xor
cmps
rcl
ror
fnsave
lea
lea
add
add
mov
sbb
arpl
pop
imul
jb
shl
cmp
jns
adc
pop
ret
or
test
xor
sub
jnp
mov
xor
xor
cld
push
cwde
mov
jne
or
bound
retf
push
or
push
pop
inc
lods
adc
fimul
mov
pop
sub
ficomp
add
mov
mov
bsr
xchg
add
addr16
add
xor
rcr
push
or
arpl
int3
outs
lock
cmp
or
adc
adc
pop
inc
std
call
add
push
add
jmp
imul
jo
sub
add
ins
cdq
adc
shl
dec
adc
jmp
jb
add
stos
call
scas
pop
fstp
retf
dec
sbb
and
or
sub
sub
mov
hlt
or
xchg
add
jnp
stos
prefetchwt1
pop
es
sub
sub
sub
clc
cmps
loope
cs
repz
cmp
ds
inc
(bad)
pop
sbb
lahf
pusha
aas
outs
shl
jnp
jge
mul
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
popf
sahf
lahf
mov
cld
(bad)
(bad)
(bad)
jg
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
dec
retf
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
(bad)
dec
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pop
pop
mov
xlat
and
sbb
dec
add
xchg
retf
enter
sub
int
sub
and
sbb
push
jb
xor
dec
add
add
dec
popa
xor
stos
xor
aas
add
jbe
out
adc
or
aam
xchg
in
add
test
mov
xor
or
push
fcom
inc
adc
mov
add
inc
add
mov
or
iret
jo
jns
jo
repz
cli
rcr
mov
arpl
mov
les
jnp
sub
(bad)
dec
mov
(bad)
out
add
dec
ins
pop
out
xchg
aam
inc
pop
sbb
and
cmp
pop
cs
fdivr
push
cld
fidiv
jo
pop
gs
cmp
out
js
adc
push
inc
xchg
mov
popf
pop
mov
retf
dec
fmulp
pushf
fist
lods
jmp
pop
add
push
cmp
iret
enter
sbb
xor
jae
pushf
push
cmp
inc
pushf
cmp
iret
js
test
leave
jae
cmps
ins
mov
jns
mov
cs
push
cmp
iret
leave
mov
in
imul
out
or
sub
cmp
pushf
cmp
inc
ins
dec
cmp
iret
leave
je
jl
test
jae
pushf
jo
jns
imul
out
popf
mov
push
aam
dec
fidiv
int3
cs
loopne
in
stc
push
or
clc
and
cmp
dec
push
fs
sbb
repnz
mov
push
xchg
mov
pushf
push
sub
inc
mov
je
jle
pop
mov
mov
leave
and
and
sub
cld
(bad)
push
add
arpl
jb
or
fwait
iret
jl
add
fs
dec
push
nop
(bad)
int3
enter
ss
push
retf
int
(bad)
cmp
iret
push
adc
test
xlat
es
adc
push
pushf
or
dec
add
loope
sbb
sahf
iret
rcr
fs
(bad)
cmp
sub
add
fidivr
adc
push
out
ds
call
aam
in
popa
scas
or
adc
mov
sub
inc
jb
inc
jo
cmp
add
xchg
aad
inc
dec
cwde
push
adc
retf
jo
mov
inc
push
test
imul
dec
popa
push
or
lods
sbb
and
ins
dec
mov
sbb
pop
xchg
mov
push
mov
mov
lods
test
sti
std
sub
push
sub
jae
dec
push
inc
add
jo
sbb
fs
mov
jbe
add
jo
shl
push
loope
push
or
cmp
mov
fcom
aaa
push
or
push
sbb
pop
or
pop
mov
sbb
mov
or
nop
sbb
push
cmp
das
push
mov
ret
inc
sbb
arpl
sbb
or
or
inc
sbb
sbb
xchg
loop
scas
adc
adc
sub
nop
jbe
gs
jmp
add
ins
jb
popa
sbb
mov
imul
add
mov
dec
xor
inc
pusha
cs
popa
test
pop
xchg
outs
add
push
(bad)
sti
add
out
push
xchg
and
jne
mov
cmp
ret
ins
push
adc
jo
adc
outs
ins
or
pusha
and
add
adc
rol
je
sbb
sub
pop
movs
adc
xor
add
sbb
lea
daa
push
push
loop
adc
inc
add
jne
pop
fld
push
dec
inc
ret
push
push
sub
int3
jo
xor
inc
add
mov
and
loopne
adc
xor
push
adc
xlat
dec
call
cmp
lea
sub
jmp
cmc
pop
sbb
mov
ins
js
lods
sub
out
jmp
loop
ja
arpl
shr
and
fcomp
pop
or
dec
xor
or
(bad)
push
push
mov
adc
jo
mov
adc
test
(bad)
(bad)
xor
xor
mov
xor
sub
push
push
jne
cmp
fsub
jle
xor
gs
sbb
xor
add
xor
dec
push
movs
add
inc
jno
das
xor
cmp
jo
test
inc
xchg
jo
dec
adc
scas
mov
and
and
xor
dec
xor
sub
cmp
scas
add
dec
shl
or
and
fisttp
(bad)
arpl
clc
jl
test
ja
cdq
imul
(bad)
(bad)
jnp
(bad)
push
repnz
fisubr
mov
vandpd
xor
into
addr16
(bad)
(bad)
jmp
out
(bad)
sbb
stos
stos
out
jbe
call
sbb
(bad)
inc
jge
xchg
cli
cli
adc
mov
leave
sti
lock
lods
in
mov
aam
pop
mov
(bad)
std
inc
scas
scas
jmp
movs
mul
ins
xchg
fwait
rol
jne
mov
loope
(bad)
(bad)
(bad)
(bad)
std
sbb
xchg
xchg
scas
dec
es
ss
jle
aas
inc
cmc
div
add
xor
pop
push
movs
(bad)
(bad)
(bad)
jmp
xor
icebp
icebp
or
jno
xchg
stos
fcomp
jae
xor
push
sub
add
xchg
(bad)
(bad)
(bad)
(bad)
inc
push
inc
and
gs
ret
ret
pop
xor
sbb
aaa
xchg
xchg
mov
das
call
and
(bad)
(bad)
(bad)
call
sbb
loop
int
jmp
dec
daa
daa
imul
jne
adc
or
sbb
inc
je
sbb
cs
sbb
mov
pop
out
pop
mov
push
(bad)
mov
dec
mov
(bad)
popa
jge
mov
push
sub
jnp
lock
(bad)
fucom
jecxz
pop
das
das
jno
test
mov
pop
add
push
pusha
jecxz
cld
pop
jns
mov
mov
ret
clc
(bad)
call
aam
push
(bad)
retf
retf
inc
addr16
cmp
dec
dec
(bad)
(bad)
dec
movs
dec
aam
pop
pop
call
mov
out
out
sub
stos
in
sti
add
xchg
lds
xor
push
adc
mov
inc
iret
jmp
(bad)
(bad)
call
and
lahf
lahf
mov
mov
mov
(bad)
inc
(bad)
(bad)
xchg
lods
and
cmp
cmc
cmc
add
mov
mov
dec
inc
clc
jmp
and
arpl
adc
xor
and
(bad)
(bad)
(bad)
std
repz
mov
int
dec
sbb
adc
adc
xor
mov
xchg
xchg
mov
mov
cs
pop
cmp
cmps
cmps
repnz
jle
cmp
inc
enter
mov
jmp
cli
xor
sbb
out
xchg
shl
sbb
dec
shl
and
(bad)
(bad)
(bad)
jmp
sub
jle
nop
nop
stos
or
inc
retf
out
sub
mov
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
jns
pop
pop
loop
or
sbb
fneni(8087
loopne
xor
push
je
cmp
or
push
xchg
dec
dec
pop
cmc
(bad)
(bad)
fisttp
push
or
and
mov
ret
mov
lods
out
les
lock
jmp
cmp
xchg
movs
shl
in
bnd
mov
out
mov
enter
pop
xor
aaa
aaa
pop
fisubr
mov
mov
dec
dec
rcl
jmp
dec
test
mov
push
push
cli
repz
hlt
pop
iret
jmp
das
jp
hlt
jp
cmp
scas
jmp
outs
mov
mov
(bad)
(bad)
dec
and
jb
sbb
and
cmps
cmps
icebp
jae
mov
xchg
mov
retf
call
fnstsw
(bad)
(bad)
call
pop
pop
and
mov
call
xchg
mov
nop
jl
ds
jno
mov
int3
data16
nop
dec
dec
fadd
(bad)
(bad)
mov
test
push
push
adc
popa
popa
mov
scas
push
push
stc
imul
xchg
cmp
mov
jmp
clc
adc
dec
(bad)
cwde
cwde
mov
adc
imul
call
cmps
sub
push
push
and
jmp
jmp
xchg
into
dec
stos
push
push
ins
sub
(bad)
(bad)
(bad)
(bad)
(bad)
jp
mov
or
or
fcmovbe
out
xor
push
mov
sub
sub
adc
mov
test
push
cld
ins
mov
push
repz
xlat
cmp
or
mov
test
jge
(bad)
out
repz
repz
popf
inc
xchg
jmp
or
addr16
cmp
repz
mov
cmp
repz
push
iret
repz
inc
add
hlt
xor
iret
repz
xchg
jae
aas
repz
repz
gs
sub
repz
mov
fwait
cmp
repz
es
repz
repz
mov
sti
test
iret
repz
jnp
jno
repz
repz
push
repz
pop
enter
fnstcw
repz
(bad)
call
repz
push
(bad)
cmp
xlat
push
xchg
iret
adc
cmp
repz
lock
mov
repz
mov
mov
jne
iret
repz
xor
push
ins
repz
repz
adc
das
loope
repz
mov
cmp
cmp
lods
out
xchg
repz
repz
iret
repz
jle
or
sar
repz
jns
sbb
repz
push
fcmovne
repz
or
outs
out
cmp
repz
test
aaa
mov
cmp
repz
mov
iret
repz
fs
mov
pop
cmp
repz
scas
mov
sbb
cmp
repz
outs
jb
iret
repz
icebp
(bad)
push
and
iret
repz
fstp
xchg
nop
inc
les
iret
add
stc
cmp
repz
xchg
pop
daa
mov
cmp
mov
mov
jo
cmps
mov
xchg
cmp
repz
dec
(bad)
js
repz
repz
clc
adc
iret
repz
xor
mov
iret
repz
retf
cld
(bad)
cmp
cmp
repz
repnz
repz
imul
add
iret
repz
(bad)
xlat
stos
jbe
cmp
repz
jge
iret
repz
pop
inc
lock
aam
cmp
repz
pushf
movs
jb
repz
repz
xchg
es
repz
aas
test
iret
repz
jno
xor
add
and
sbb
repz
xchg
add
cmp
repz
jmp
mov
repz
repz
repz
outs
pop
mov
iret
repz
sub
das
test
cmp
repz
rol
in
and
repz
cld
mov
push
mov
cmp
pop
iret
repz
repz
stos
sti
inc
iret
repz
dec
xor
iret
repz
push
cmp
test
cmp
repz
mov
repz
popf
cmp
mov
repz
adc
repz
cmp
repz
adc
pop
iret
repz
xchg
inc
pop
les
cmp
fs
sbb
cmp
repz
or
iret
sub
cmp
repz
ficomp
fcomi
cmp
repz
cmp
dec
iret
repz
push
and
ret
cmp
repz
xchg
xchg
in
repz
repz
aaa
ins
(bad)
iret
repz
aad
test
iret
repz
gs
or
cmp
repz
iret
repz
cmps
mov
call
repz
dec
mov
iret
repz
mov
dec
iret
repz
add
push
popa
xor
cmp
xchg
sbb
repz
cwde
adc
repz
(bad)
cmp
repz
into
push
sub
repz
repz
repz
out
push
iret
repz
mov
mov
repz
repnz
repz
imul
add
iret
repz
(bad)
xlat
stos
jbe
cmp
repz
jge
iret
repz
pop
inc
lock
aam
cmp
repz
pushf
movs
jb
repz
repz
xchg
es
repz
aas
test
iret
repz
jno
xor
add
and
sbb
repz
xchg
add
cmp
repz
jmp
mov
repz
repz
repz
outs
pop
mov
iret
repz
sub
das
test
cmp
repz
rol
in
and
repz
cld
mov
push
mov
cmp
pop
iret
repz
repz
stos
sti
inc
iret
repz
dec
xor
iret
repz
push
cmp
test
cmp
repz
mov
repz
popf
cmp
mov
repz
adc
repz
cmp
repz
adc
pop
iret
repz
xchg
inc
pop
les
cmp
fs
sbb
cmp
repz
or
iret
sub
cmp
repz
ficomp
fcomi
cmp
repz
cmp
dec
iret
repz
push
and
ret
cmp
repz
xchg
xchg
in
repz
repz
aaa
ins
(bad)
iret
repz
aad
test
iret
repz
gs
or
cmp
repz
iret
repz
cmps
mov
call
repz
dec
mov
iret
repz
mov
dec
iret
repz
add
push
popa
xor
cmp
xchg
sbb
repz
cwde
adc
repz
(bad)
cmp
repz
into
push
sub
repz
repz
repz
out
push
iret
repz
mov
mov
lock
push
ja
iret
repz
repnz
add
repz
sub
xlat
stos
repz
repz
or
iret
repz
cli
pop
inc
lock
aam
iret
repz
scas
pushf
movs
add
push
js
outs
mov
popa
loope
es
xchg
dec
shl
xor
xor
shl
push
and
adc
imul
xchg
test
daa
xor
shl
jne
sub
dec
rcr
sbb
mov
push
cmp
mov
jecxz
xor
xor
test
lahf
iret
repz
push
and
mov
push
iret
repz
mov
cmp
repz
iret
shr
stos
iret
repz
sti
inc
dec
xor
cmp
add
cmp
cmp
repz
test
mov
iret
(bad)
xchg
popf
cmp
mov
mov
and
push
cmp
repz
or
iret
repz
in
pop
xchg
inc
pop
les
repz
jle
fs
repz
repz
or
and
nop
mov
iret
repz
mov
cmp
repz
loopne
cmp
repz
or
and
ret
repz
lods
bound
repz
out
aaa
iret
repz
ins
(bad)
aad
test
cmp
hlt
jmp
scas
or
cmp
cs
mov
call
fnsave
mov
mov
repz
dec
add
push
popa
cmp
repz
push
mov
iret
repz
iret
repz
adc
mov
push
xchg
into
push
repz
repz
mov
iret
or
inc
cmp
repz
sub
imul
dec
push
jle
gs
sbb
movs
ret
cmp
pop
xchg
(bad)
(bad)
(bad)
(bad)
cmp
inc
icebp
lods
cli
pop
stos
dec
jecxz
xchg
and
cli
push
lods
jbe
test
dec
and
dec
in
cld
lds
retf
xlat
es
mov
dec
and
jmp
(bad)
(bad)
(bad)
inc
das
jne
or
imul
mov
pop
out
xchg
pushf
xchg
mov
push
pop
(bad)
(bad)
(bad)
call
mov
and
dec
loopne
sub
ret
hlt
mov
cdq
pop
imul
jno
(bad)
(bad)
(bad)
(bad)
mov
mov
data16
cmp
sbb
adc
jg
(bad)
(bad)
(bad)
push
imul
stc
or
xchg
jo
push
sbb
clc
mov
(bad)
(bad)
jmp
dec
add
jecxz
(bad)
push
push
stos
sub
mov
add
aaa
or
xor
xchg
and
push
in
push
sbb
sub
pop
repnz
imul
jmp
hlt
int
add
bound
les
push
popf
mov
mov
xor
mov
in
cmp
out
stos
pop
jno
push
mov
and
stc
xchg
fld
cmp
dec
out
inc
xchg
push
lea
add
aam
pusha
push
adc
(bad)
(bad)
(bad)
jmp
mov
inc
int3
fstp
call
mov
jns
out
(bad)
cmp
jmp
mov
in
(bad)
(bad)
(bad)
dec
adc
ins
pop
jb
std
push
(bad)
sti
jne
aad
ss
fldenv
cmps
(bad)
(bad)
(bad)
jmp
fwait
pop
push
shl
cmp
addr16
push
out
mov
xchg
rcr
fwait
xchg
sahf
add
dec
popa
fsub
clc
(bad)
(bad)
jmp
sbb
sbb
loop
mov
in
and
inc
adc
pop
sbb
(bad)
jmp
rcr
lods
sub
push
test
test
(bad)
dec
fnstsw
test
cmc
mov
pop
sti
(bad)
(bad)
mov
jbe
and
fdiv
in
arpl
xor
retf
test
(bad)
(bad)
call
adc
adc
test
jge
mov
xor
(bad)
sub
dec
fdiv
push
or
shl
sub
mov
cli
inc
jmp
mov
mov
(bad)
call
push
jge
fsub
xor
(bad)
fnstcw
rol
mov
mov
cmps
cmc
or
(bad)
(bad)
jmp
fidiv
mov
in
js
or
push
jle
(bad)
test
(bad)
(bad)
(bad)
(bad)
call
add
cmc
lahf
pop
cmp
aad
test
enter
adc
jge
(bad)
(bad)
jmp
fstp
mov
or
sbb
in
call
out
outs
gs
jmp
(bad)
(bad)
(bad)
(bad)
jle
mov
call
(bad)
ss
jmp
(bad)
xor
pop
fs
xor
movs
xchg
xor
aaa
cld
or
(bad)
(bad)
jmp
xor
cwde
dec
inc
in
(bad)
jg
push
push
pop
xchg
imul
jbe
(bad)
lea
mov
(bad)
(bad)
dec
stos
dec
push
in
add
sahf
shl
sbb
sub
mov
popf
pop
jmp
(bad)
call
xchg
or
mov
sbb
push
jmp
(bad)
inc
adc
mov
(bad)
jp
clc
adc
jmp
cmp
into
test
leave
xor
jp
mov
pushf
rcr
pop
push
bnd
(bad)
(bad)
(bad)
aas
sbb
jns
(bad)
aaa
mov
pop
std
stos
pop
fistp
fild
mov
(bad)
(bad)
cmp
sub
mov
ret
jb
loop
or
cmp
mov
or
add
or
dec
(bad)
(bad)
mov
pushf
fs
rcl
xor
sar
out
mov
retf
icebp
jns
out
stos
xchg
push
not
and
sahf
out
sahf
dec
addr16
loope
adc
out
mov
out
sahf
out
sub
out
sahf
push
imul
pop
jns
out
data16
and
sahf
out
loopne
sbb
sahf
out
sahf
pop
sbb
sahf
out
push
sub
add
movs
repnz
pop
sahf
out
sahf
sub
jns
out
pop
mov
sahf
out
cmp
jns
stc
cmp
jns
out
outs
jmp
int3
out
sahf
out
mov
out
sahf
inc
jmp
jns
out
lods
dec
sti
push
push
out
sahf
out
fs
cmp
psrld
out
imul
jns
out
or
jns
test
lahf
mov
lds
fsubr
jns
out
retf
and
clc
adc
repz
out
in
shr
out
sahf
out
les
fsubr
sahf
out
sahf
mov
jns
out
movs
in
fwait
out
sahf
out
ret
cmc
sahf
out
sahf
mov
cmps
jns
out
outs
jnp
hlt
add
jns
out
gs
out
out
sahf
fxch
aam
scas
xor
out
xor
aaa
cmps
mov
jns
out
dec
test
sahf
lea
(bad)
sbb
out
mov
out
sahf
out
pop
push
xor
sahf
out
sahf
mov
mov
xor
in
cmp
aas
jns
jns
out
jmp
sahf
cmp
jns
out
mov
ficomp
popa
jo
inc
sahf
out
sahf
cmps
movs
pop
imul
out
pop
add
ins
jbe
jns
out
xlat
retf
inc
mov
pop
sbb
shl
sahf
out
xchg
stc
pop
pushf
jp
jns
out
and
enter
sahf
mov
jno
lods
jns
out
lods
cmp
xor
jns
out
ja
mov
sahf
push
add
out
(bad)
stos
sub
jnp
jns
out
xchg
jns
sbb
repnz
mov
(bad)
(bad)
push
push
loope
jns
out
in
out
lahf
adc
push
add
sahf
out
aam
sti
jmp
out
inc
mov
sahf
out
sahf
or
push
add
jns
jb
cmp
out
sahf
out
fldenv
jns
addr16
xchg
lds
jns
out
dec
sbb
sahf
out
or
out
sahf
sbb
frstor
cmc
jns
out
cmp
(bad)
cld
out
sahf
out
fadd
jns
and
xor
out
push
jecxz
mov
out
mov
sub
sahf
out
sahf
dec
shl
sahf
out
mov
jns
out
adc
jns
adc
sahf
out
arpl
jns
out
outs
out
call
fwait
or
jns
out
xchg
mov
out
sahf
out
cwde
ficom
sahf
out
sahf
(bad)
mov
add
mov
out
pop
push
jmp
inc
sbb
out
sahf
popa
or
cmp
leave
jns
out
in
fbstp
out
sahf
out
int
outs
fistp
les
ret
and
dec
xchg
add
out
test
jns
hlt
inc
pop
daa
stos
popf
jns
out
cli
jecxz
jbe
out
sahf
out
in
xor
sahf
mov
jmp
jns
ror
sahf
out
mov
out
sahf
ret
mov
out
and
fistp
push
out
sahf
out
imul
dec
inc
fidivr
dec
jns
out
pop
push
jmp
(bad)
sahf
out
sub
jns
iret
jns
imul
jns
cmps
cs
jns
out
and
sahf
out
sahf
and
ds
les
out
push
push
cwde
mov
out
call
out
sahf
jl
test
sub
sahf
out
adc
test
sub
sahf
out
sahf
or
fwait
rcr
sahf
out
ja
xchg
mov
out
or
jns
icebp
jne
jg
jb
sahf
out
data16
inc
and
out
sahf
out
xor
(bad)
sahf
out
sahf
dec
mov
jns
out
xchg
mov
xchg
out
sahf
out
cld
lock
sahf
out
sahf
dec
cmp
aam
jp
sahf
out
mov
cmp
out
sahf
out
(bad)
fdivr
ret
sahf
out
sahf
pop
rcl
and
out
pushf
cmp
pop
call
(bad)
mov
sahf
out
lahf
mov
aas
jns
out
movs
mov
jns
out
add
int
sahf
out
sahf
dec
out
stos
xchg
shr
sahf
out
sub
pop
mov
or
adc
sahf
out
sahf
xlat
mov
jns
out
sbb
shl
adc
jns
out
idiv
cmp
sahf
scas
push
jns
out
cmp
test
mov
jns
out
retf
xor
test
push
aad
call
mov
inc
mov
cmps
imul
call
imul
imul
imul
cmps
imul
dec
or
mov
call
imul
imul
imul
cmps
imul
call
imul
out
ficomp
imul
imul
or
mov
dec
shl
pop
add
sub
sub
imul
imul
push
jle
imul
cmps
imul
imul
cmps
imul
and
lods
xor
loop
aaa
push
call
imul
imul
imul
cmps
imul
cmps
imul
imul
cmps
imul
cmps
imul
imul
imul
test
cmps
imul
movs
imul
call
mov
push
movs
imul
cmps
imul
cmps
imul
imul
inc
call
mov
outs
loopne
cmp
ds
inc
js
into
mov
jo
push
push
mov
test
inc
or
scas
jo
push
ret
and
xchg
sbb
outs
loopne
into
ficom
push
ret
ss
xor
popa
and
push
ret
(bad)
pop
test
popa
and
ret
or
jbe
mov
push
(bad)
sahf
push
popa
and
es
dec
cmp
and
cmps
xor
ret
pop
and
or
popa
jle
test
push
xchg
xchg
dec
cli
ss
or
mov
pop
popa
sub
or
out
scas
lods
test
or
popa
and
scas
push
ret
outs
sahf
mov
push
dec
sub
and
not
ret
or
mov
sahf
(bad)
popa
and
inc
js
sub
lock
and
ret
jg
mov
ds
sub
mov
inc
sbb
push
jle
mov
xchg
ds
fsubp
and
test
daa
div
mov
sub
or
popa
out
push
ficom
ret
(bad)
sub
movs
jo
pop
out
or
loope
push
xchg
ret
xchg
cmps
jbe
mov
dec
loope
lods
outs
push
jle
dec
cmp
push
push
mov
outs
ds
sub
or
fidivr
adc
and
push
cmp
das
loope
jbe
adc
ret
push
or
xchg
lock
test
loope
xchg
push
xchg
ret
(bad)
jbe
test
inc
loope
cmp
push
push
ret
or
scas
xchg
jo
push
out
inc
(bad)
loope
mov
cmp
inc
scas
inc
jo
xchg
ret
sub
or
popa
outs
pop
adc
push
push
cs
mov
or
and
push
js
inc
out
mov
adc
ds
loope
mov
dec
cmp
(bad)
pop
cmps
xor
mov
mov
cmp
inc
es
mov
pop
ret
data16
test
addr16
inc
mov
sahf
ret
push
mov
scas
fimul
inc
loope
push
push
mov
dec
pop
test
movs
jo
mov
inc
loope
mov
pop
cmp
push
xchg
lock
sub
test
das
jle
mov
xchg
ret
cs
test
dec
popa
sahf
jbe
push
into
ret
data16
inc
scas
imul
push
inc
add
sahf
out
sahf
or
sbb
sahf
out
xor
dec
inc
out
sahf
out
jg
imul
xchg
mov
out
sub
jns
out
iret
rcr
jnp
out
sahf
jo
push
pop
inc
jns
out
dec
and
xor
out
add
adc
sahf
out
sahf
rcr
out
icebp
jns
out
cli
xchg
cwde
test
mov
sahf
out
sahf
std
loopne
fcmovbe
int3
jns
out
(bad)
scas
movs
mov
out
mov
sahf
dec
push
pop
push
jl
sahf
out
ja
adc
sahf
out
cmp
lea
fwait
nop
mov
out
mov
out
sahf
out
repnz
in
sahf
out
sahf
sub
adc
pop
jns
out
or
outs
jae
out
sahf
out
inc
pop
push
neg
loope
fcmovnbe
int
sahf
out
(bad)
scas
movs
mov
out
mov
jns
dec
push
pop
imul
sahf
out
jbe
adc
add
jns
out
cmp
jns
xchg
jns
out
mov
out
sahf
out
repz
in
sahf
out
sahf
aaa
sub
adc
push
jns
out
or
out
sahf
out
inc
pop
push
add
pop
sbb
cmp
out
xor
dec
inc
out
sahf
out
jle
push
sahf
mov
mov
out
sub
push
out
sahf
out
into
rcr
jp
out
sahf
jno
addr16
pop
inc
jns
out
dec
and
xor
out
sahf
out
add
out
sahf
rcr
out
lock
out
sti
xchg
cdq
test
mov
sahf
out
sahf
or
cs
out
and
jb
out
sahf
out
push
inc
dec
rcr
retf
jmp
jns
mov
jns
out
adc
lods
pop
jns
rcr
leave
(bad)
out
sahf
out
jmp
sahf
data16
pop
push
inc
jns
out
dec
add
sbb
jns
out
cmp
jns
pusha
ja
pop
push
inc
jns
out
dec
add
jns
out
cmp
es
mov
stos
mov
sahf
aad
iret
ret
sahf
out
in
sti
not
sahf
out
sahf
fcmovne
shl
clc
jns
out
cmc
mov
jns
out
xchg
jns
or
xor
sub
out
and
out
sahf
out
push
inc
dec
ficomp
ror
jecxz
jns
out
stc
mov
test
out
sahf
out
mov
sahf
pop
adc
sahf
out
sub
js
out
sahf
out
pop
dec
inc
popa
sahf
out
sahf
ins
jnp
push
pop
dec
jns
out
inc
or
push
out
sahf
out
xor
sub
mov
lahf
jns
out
xchg
(bad)
ret
into
out
sahf
out
loopne
cli
mov
out
sahf
mov
cdq
jns
out
xchg
(bad)
(bad)
jns
out
out
cld
addr16
out
sahf
push
jo
pop
dec
jns
out
inc
lar
out
and
sahf
out
sahf
add
sbb
xor
jns
imul
push
pop
dec
inc
fcomp
(bad)
retf
call
out
push
sahf
out
lea
jns
or
sbb
jns
dec
inc
pop
push
out
sahf
out
gs
nop
sahf
out
sahf
cdq
or
out
scas
fcom
retf
jns
out
cmc
out
out
sahf
out
sahf
xor
and
push
or
add
jp
push
push
pop
inc
dec
stos
sahf
out
sahf
mov
popf
jns
out
xchg
jecxz
icebp
clc
out
sahf
out
into
aad
jbe
out
sahf
jg
ins
push
pop
inc
jns
out
dec
ds
sub
out
sahf
out
adc
add
sahf
out
sahf
out
hlt
std
ret
jns
out
fldcw
jns
out
sbb
sahf
inc
pop
push
imul
jb
or
push
out
sahf
out
sub
cmp
sahf
out
sahf
aam
(bad)
stc
lock
sahf
out
loop
pushf
xchg
mov
mov
jns
in
test
out
shl
sahf
out
mov
jns
jne
addr16
push
dec
jns
out
inc
xor
es
out
sahf
out
sbb
or
sahf
out
sahf
faddp
int3
repz
loope
sahf
out
call
out
sahf
out
mov
mov
sahf
dec
push
pop
arpl
jns
out
js
push
sbb
out
and
xor
xchg
mov
sahf
out
movs
rcr
ror
jns
out
jmp
in
or
sbb
cs
cmp
sahf
out
xor
out
sahf
out
outs
je
mov
test
mov
sahf
out
sahf
jmp
jns
out
(bad)
(bad)
xor
and
adc
out
push
jns
imul
sahf
out
push
dec
inc
cmp
add
mov
cwde
movs
mov
mov
xor
out
aam
sub
inc
push
sbb
cmps
inc
cmps
adc
add
mov
adc
ds
push
mov
mov
xor
push
pop
rcl
lahf
shr
jo
pop
xor
jecxz
jg
sti
retf
xor
sbb
dec
jg
add
in
mov
je
or
pusha
pop
push
out
neg
push
push
lods
ss
jo
sub
clc
wbinvd
sar
xor
jae
mov
test
or
inc
sub
cmp
mov
sti
ds
cs
jl
or
jnp
mov
sbb
mov
jle
cdq
ds
pop
repz
in
push
mov
ror
mov
push
push
js
pop
out
xor
enter
test
mov
neg
jnp
lods
(bad)
cwde
pop
xchg
xchg
xchg
or
mov
jp
ja
hlt
out
ss
pxor
shl
ss
add
ficom
data16
loopne
mov
test
xor
adc
xor
pusha
adc
add
push
mov
loopne
or
pop
dec
ss
push
dec
sub
or
or
fidivr
or
int3
push
cmp
not
or
dec
test
call
shr
inc
(bad)
fsub
nop
cs
into
rol
movs
ficom
loop
es
inc
cs
or
adc
mov
mov
mov
cs
aam
js
jae
loop
xchg
out
pop
sbb
xchg
sar
push
pop
cs
rcl
movs
mov
mov
inc
add
push
jl
rol
cmps
cmp
pop
push
in
mov
mov
push
pop
ss
fsub
loop
cmps
jge
fcom
mov
jnp
dec
or
les
pushf
scas
clc
dec
jnp
bswap
mov
pop
sahf
lock
mov
div
ss
out
sub
loop
les
push
lock
sub
push
clc
out
mov
push
call
cs
out
fidivr
jns
test
add
push
pusha
icebp
push
xor
mov
cs
mov
(bad)
enter
inc
pop
push
push
out
int3
cmps
sbb
fs
iret
call
aas
cmps
or
lods
sar
push
xchg
push
pusha
fs
push
mov
loopne
cmp
data16
pop
lock
add
pushw
jge
cmp
cmps
out
rcl
(bad)
jnp
out
mov
jo
sbb
inc
popf
fimul
out
scas
fadd
jnp
pop
out
push
nop
dec
les
in
cs
push
sub
ret
mov
inc
push
int3
icebp
sahf
test
push
cmp
push
adc
jo
cmps
pusha
push
fsubr
and
mov
dec
inc
push
xchg
push
clc
(bad)
fcomp
int
push
push
loopne
movs
or
iret
ret
jnp
fisub
xchg
ins
add
mov
push
pop
dec
cwde
xchg
ja
enter
jnp
in
neg
es
in
int3
jmp
aaa
cs
jnp
add
pop
pop
pop
pop
inc
mov
and
(bad)
fidiv
and
test
fiadd
pop
cs
scas
push
fidivr
inc
add
data16
sbb
data16
loopne
pop
push
pop
push
sub
fimul
jnp
(bad)
scas
and
js
jmp
mov
fdivr
repz
xchg
xor
cmp
fcomp
cwde
push
pusha
stos
fmul
call
aam
fmul
lock
les
dec
xchg
mov
ds
push
inc
(bad)
push
scas
and
fisub
fimul
outs
ss
xchg
jnp
data16
loopne
into
push
out
imul
sub
je
out
add
sub
adc
cmp
out
dec
sub
push
lods
out
fidivr
loopne
rol
ds
ds
cbw
mov
push
scas
adc
adc
mov
jbe
sar
mov
mov
rol
aad
(bad)
push
and
push
adc
repz
mov
push
mov
js
jns
outs
enter
cs
push
push
fsubp
repz
es
(bad)
(bad)
in
jbe
out
(bad)
lock
ss
jbe
adc
lock
out
jns
mov
xchg
pop
sbb
jmp
dec
aaa
outs
shl
cmp
sub
xor
test
push
inc
pop
inc
iret
shl
inc
pop
push
pop
pop
cmps
out
push
shld
xchg
adc
jle
sub
fidivr
add
fisubr
mov
pop
loope
mov
outs
mov
cmp
int3
in
jl
cs
pop
pop
cmp
inc
pop
outs
call
xchg
add
mov
nop
push
add
pusha
mov
invd
pusha
push
add
adc
pop
mov
mov
adc
nop
inc
add
add
add
pop
add
mov
fld
cmp
add
pop
inc
out
popf
mov
inc
and
dec
pop
push
and
(bad)
idiv
dec
aaa
push
pop
dec
add
inc
fcmovnu
jae
add
adc
dec
xchg
mov
loop
push
inc
mov
mov
or
dec
xor
or
inc
push
out
shr
mov
push
cs
and
inc
push
cs
out
mov
or
inc
sbb
inc
or
out
cmp
add
add
sub
dec
pop
jg
sub
add
xor
mov
inc
add
retf
xchg
cmps
inc
add
rol
call
add
or
add
xchg
or
xchg
push
inc
cld
jg
repz
(bad)
clc
aas
push
pop
jmp
shr
sub
(bad)
cld
add
pop
or
push
aas
or
in
and
jg
add
xchg
cmp
pop
add
mov
into
push
or
push
mov
add
add
add
int
push
(bad)
psubb
addr16
ins
inc
out
push
out
ficomp
ds
out
(bad)
cmp
add
push
sbb
loopne
lock
sbb
pop
in
popf
dec
mov
(bad)
aas
pop
cs
pop
add
mov
xchg
neg
lock
xor
pop
std
sahf
push
ss
cmp
add
push
push
ins
jl
pushw
mov
jl
jbe
jg
sbb
in
clc
inc
add
jo
iret
inc
inc
jle
rol
inc
lock
push
sahf
(bad)
push
or
push
add
lea
es
jecxz
sahf
out
add
nop
xlat
movs
or
into
push
add
add
sahf
or
mov
daa
add
add
mov
das
aas
dec
pop
push
mov
outs
daa
add
pop
fwait
int
mov
loopne
rcr
mov
and
dec
add
push
xlat
mov
ins
inc
pop
outs
clc
pop
adc
sbb
add
arpl
add
xlat
pop
sbb
outs
ss
test
inc
nop
ds
jg
les
fs
pop
or
in
les
test
cmp
in
out
mov
add
sbb
add
scas
jbe
cld
pop
cmp
fadd
push
inc
mov
aaa
pop
push
addr16
lock
inc
sbb
inc
cs
f2xm1
mov
std
or
jle
or
into
data16
push
sub
inc
add
inc
add
inc
shl
xor
sbb
push
xchg
mov
sbb
sbb
aad
(bad)
jbe
lock
js
cmp
push
sbb
ins
fwait
int
push
sbb
or
test
cmp
add
cmp
and
add
and
adc
mov
add
rol
into
inc
(bad)
and
add
push
jns
jnp
xor
add
mov
sub
adc
mov
jle
daa
sbb
cmp
(bad)
xor
daa
and
cs
xor
and
jae
pop
or
push
adc
cmp
clc
int
jae
dec
push
dec
push
mov
in
out
dec
push
push
daa
cmp
ss
outs
daa
xchg
push
(bad)
sbb
dec
daa
dec
add
daa
mov
(bad)
out
mov
push
daa
clc
push
(bad)
cmc
mov
ja
mov
or
lahf
cmp
in
adc
in
inc
sahf
cmp
cmp
mov
xor
and
daa
inc
push
jns
fiadd
daa
dec
sub
repz
jbe
in
xor
mov
dec
mov
jns
clc
xor
jbe
and
ja
cmp
es
and
mov
and
and
cmp
jnp
jbe
jmp
pop
push
sbb
(bad)
cmp
push
mov
out
and
push
retf
loope
pop
(bad)
push
and
xor
xchg
or
lds
xor
inc
push
clc
repz
push
addr16
fdivr
inc
test
add
test
inc
inc
or
push
or
dec
jmp
mov
xor
inc
aad
outs
lahf
xchg
or
pop
daa
mov
mov
in
jae
and
push
inc
dec
nop
mov
(bad)
(bad)
(bad)
clc
add
daa
fistp
mov
daa
or
arpl
dec
pushf
es
test
mov
fild
lock
xor
inc
arpl
daa
ds
nop
inc
shl
xor
arpl
lea
daa
dec
dec
jae
lahf
cmp
inc
mov
pop
dec
or
fs
dec
imul
fwait
daa
push
in
outs
mov
push
aas
daa
in
push
pop
jbe
retf
jmp
cmp
es
daa
dec
add
jmp
addr16
xor
in
repz
mov
push
sub
jecxz
test
adc
sbb
push
xor
in
inc
xchg
sbb
or
stos
movs
out
sub
inc
out
fdivp
or
daa
xor
pop
in
mov
arpl
das
es
ss
mov
daa
push
inc
sub
pop
cmp
push
push
xor
ror
repz
sub
je
add
outs
data16
inc
push
jb
cdq
mov
je
push
inc
mov
ffreep
outs
je
stos
inc
aas
call
inc
fadd
stos
sub
push
ret
cmp
fmul
push
shl
movs
pop
xor
dec
dec
push
jns
xchg
daa
mov
xchg
stos
xor
ja
test
inc
jmp
js
xchg
jmp
jne
adc
cmps
fsubr
or
sbb
push
cmp
sbb
cmp
(bad)
xchg
sbb
and
inc
daa
adc
cmp
sbb
jmp
mov
mov
and
clc
or
sbb
pop
jbe
mov
fcom
daa
dec
xor
dec
xor
dec
daa
dec
daa
addr16
dec
daa
clc
dec
or
xor
cmp
cmp
adc
nop
inc
jno
ror
ret
sbb
(bad)
mov
mov
xor
cdq
cmp
push
mov
mov
loope
imul
daa
repz
aaa
cmp
xchg
or
(bad)
xor
out
cmp
push
sahf
and
add
adc
push
arpl
push
daa
pusha
repz
sbb
and
push
nop
stos
mov
mov
mov
inc
sub
mov
loop
inc
jae
lahf
es
inc
stos
xchg
mov
jmp
inc
lds
stos
push
cmp
cmp
fstp
repz
ret
and
mov
aaa
jl
push
data16
outs
daa
and
sub
pushf
add
cwde
stos
sub
mov
aaa
fs
pushf
fnstsw
ins
mov
or
icebp
jp
push
imul
sbb
in
test
fnsave
push
and
out
jmp
xchg
add
popa
lock
xchg
stos
push
into
xchg
and
push
push
or
nop
cmp
pop
mov
inc
mov
sub
popf
cmc
jp
xor
cld
push
lock
add
xchg
retf
sub
mov
lock
sub
cs
xchg
sub
fwait
(bad)
xor
or
fild
dec
in
pushf
retf
mov
pop
push
cmp
dec
add
sub
out
das
fwait
les
and
mov
jae
sub
repz
adc
add
ins
inc
ins
pop
add
adc
push
add
(bad)
jnp
xor
add
push
push
and
(bad)
adc
adc
cmovge
sbb
outs
jp
lods
fnsave
mov
cs
or
xchg
push
js
dec
imul
aas
push
out
jge
and
outs
sbb
xchg
mov
sbb
out
loopne
push
stos
inc
sbb
push
push
pop
or
xchg
clc
mov
sahf
adc
push
es
push
mov
ss
ins
push
or
rcl
push
push
ss
imul
ficom
pop
retf
jae
scas
arpl
gs
jo
es
xor
fiadd
stos
sbb
jge
mov
daa
adc
je
jne
sti
push
out
stos
jo
mov
popa
mov
cs
adc
sub
iret
in
loopne
push
ss
add
popa
mov
cmps
ss
jb
idiv
sub
mov
mov
aaa
out
imul
mul
push
jecxz
out
pop
mov
out
orps
or
or
jnp
xor
lods
clc
push
push
jbe
inc
xor
aaa
jnp
lock
mov
scas
adc
sbb
fist
imul
or
out
sub
je
pop
adc
bound
ror
ins
pop
or
shl
mov
jg
pop
mov
popa
outs
ins
fiadd
sub
adc
dec
mov
fadd
push
(bad)
mov
xor
aas
popa
out
aas
rol
shr
inc
fild
(bad)
popa
mov
cs
sbb
xor
add
out
jne
fisub
add
inc
push
ret
push
pop
lahf
outs
and
add
add
out
mov
iret
ins
(bad)
adc
cmp
mov
xlat
jae
add
inc
add
add
sub
lds
mov
imul
gs
lahf
push
rcr
inc
cmp
push
imul
ins
outs
push
add
jmp
xchg
jmp
push
mov
bound
sbb
add
dec
mov
jbe
das
push
xor
loope
imul
cmp
push
push
inc
jne
fwait
and
sub
sti
cmp
js
ret
outs
out
div
fucomi
je
cmp
daa
and
popa
jae
adc
rcr
dec
ins
inc
scas
lahf
jbe
lahf
xchg
mov
lock
out
ss
mov
test
dec
inc
xor
(bad)
(bad)
xor
push
data16
sbb
fsub
push
mov
clc
and
push
jnp
das
cli
inc
pop
mov
push
aas
cmp
inc
or
push
adc
mov
fbld
push
or
sub
jno
sbb
ja
jae
aaa
and
je
inc
xchg
ds
ja
add
call
add
jmp
outs
cmp
dec
dec
dec
xor
ss
push
inc
jnp
push
mov
arpl
inc
fnstcw
mov
push
push
adc
jns
mov
add
in
mov
xchg
jle
push
adc
xchg
or
ja
dec
xlat
xlat
loope
retf
add
or
mov
fistp
(bad)
fs
pop
call
jmp
mov
call
mov
mov
outs
xor
rol
bound
cmps
push
es
add
add
mov
cmp
fwait
xor
call
sbb
cs
loopne
jns
es
outs
mov
js
retf
or
or
sub
mov
push
adc
fwait
gs
in
call
sbb
pop
jmp
cs
pop
iret
ins
push
arpl
jnp
cmp
(bad)
jnp
mov
fidiv
jmp
dec
daa
cli
rcr
jo
rol
jp
ret
mov
pop
mov
stos
mov
arpl
aas
pusha
out
cmps
adc
xlat
push
loopne
sbb
jmp
addr16
fbld
xor
rcr
ins
pop
xor
xor
sub
mov
lods
pusha
xlat
aaa
mov
jb
je
data16
pop
sbb
out
adc
sub
adc
outs
mov
pop
rol
jo
ret
add
(bad)
(bad)
xchg
call
and
jae
outs
arpl
sbb
out
jbe
and
mov
out
pop
ja
xor
mov
daa
adc
pop
sahf
and
sahf
push
cmp
adc
dec
sub
inc
and
sub
imul
aas
popa
les
repz
sub
ja
cmps
ja
or
pop
mov
mov
xor
or
or
push
pop
mov
inc
sbb
mov
sub
push
push
push
out
jmp
jmp
fwait
jbe
imul
mov
sub
jecxz
push
in
pop
ins
xchg
jae
mov
mov
jecxz
inc
mov
ins
rol
jmp
cmp
xor
jo
sub
mov
in
xor
daa
dec
out
and
ins
retf
shl
pop
test
inc
loop
and
cwde
push
cmp
add
in
ret
mov
arpl
inc
or
pop
push
mov
cs
sbb
xlat
ret
cs
loop
jp
xchg
pop
xlat
xchg
pop
inc
jnp
(bad)
sti
mov
ficom
test
sbb
sub
and
jecxz
pop
sub
sbb
fsubr
sbb
loop
fidivr
xchg
or
aaa
mov
arpl
fsubr
pop
inc
(bad)
test
mov
mov
call
and
inc
push
push
ds
loopne
cmp
movs
pop
push
icebp
xlat
push
vmovdqu64
cmps
adc
call
repnz
jae
adc
mov
sbb
rcl
rcl
ret
pop
mov
push
pop
and
pop
mov
sar
neg
popa
mov
pop
add
pop
js
mov
jg
iret
ins
cmp
fwait
push
bound
jbe
jnp
test
dec
inc
push
outs
fwait
lea
jg
aad
dec
sti
outs
punpckldq
stos
aaa
inc
jle
add
or
push
adc
fcmovb
inc
xor
or
push
push
push
push
push
dec
mov
ja
and
push
dec
jae
mov
(bad)
(bad)
movs
aaa
jp
inc
pop
ss
add
and
sub
sub
in
fsub
sahf
(bad)
test
clc
les
imul
and
jmp
je
jg
ds
pop
add
imul
imul
mov
dec
jmp
jo
jo
push
or
xchg
cli
xor
mov
push
jg
ret
push
cmp
outs
sti
sub
(bad)
adc
mov
clc
push
mov
add
push
inc
in
mov
push
inc
cmp
add
js
add
mov
in
pop
pop
addr16
jnp
push
sub
and
jmp
adc
daa
outs
adc
sti
imul
scas
add
push
push
dec
sbb
add
or
push
lea
pop
das
jbe
stos
rcr
mov
test
sub
ins
jae
lock
cmp
adc
nop
pop
psubusb
lods
ror
adc
rol
mov
dec
or
dec
sti
mov
inc
adc
add
or
lahf
lahf
cmp
aaa
scas
inc
push
rcr
lea
mov
push
inc
mul
sti
xchg
push
push
imul
test
or
adc
xchg
repnz
lock
loope
jne
arpl
xchg
xchg
rcl
das
mov
pop
xor
sbb
push
dec
xchg
and
dec
adc
xor
icebp
mov
mov
xchg
push
pop
push
pusha
push
mov
jg
adc
sub
xchg
cmp
pop
or
sub
push
ss
add
dec
add
sahf
push
inc
or
add
push
(bad)
fld
sbb
jl
jns
push
adc
cmps
sbb
cmp
cmps
add
jb
fist
outs
xchg
call
(bad)
sbb
das
xor
jo
movs
adc
xchg
add
and
and
push
lahf
mov
xchg
jno
push
cmp
arpl
loope
lock
out
cmp
dec
mov
lds
cdq
mov
jb
fimul
sub
sbb
popa
and
pop
pop
out
dec
pop
adc
out
(bad)
push
xchg
fimul
mov
popa
or
imul
aaa
(bad)
mov
fwait
mov
fmul
jae
rol
mov
stos
adc
mov
mov
add
(bad)
pop
dec
stos
rcl
pop
push
sub
adc
and
retf
push
test
or
(bad)
sahf
inc
pop
arpl
(bad)
test
imul
call
lea
mov
cwde
or
popa
push
jns
jmp
sub
ins
dec
(bad)
test
dec
outs
ja
push
xor
mov
mul
or
stos
shl
jb
and
cmp
addr16
inc
sti
arpl
jns
pop
lea
lods
sbb
sub
jg
pop
or
push
sqrtps
xchg
(bad)
movs
(bad)
pop
xor
push
ss
pop
daa
ror
or
icebp
ss
push
inc
or
or
dec
ret
add
popa
addr16
rcr
arpl
sub
push
aaa
test
(bad)
scas
dec
aad
pop
fwait
jb
sub
add
push
idiv
shl
xchg
pop
ins
push
add
and
inc
call
adc
push
adc
cmps
adc
sbb
xlat
es
fist
push
leave
push
iret
adc
mov
mov
(bad)
iret
inc
push
adc
or
mov
sbb
rcr
mov
sti
ret
inc
lds
and
loop
test
sbb
mov
xchg
adc
pop
jo
rol
je
add
test
test
test
out
pusha
rcl
setae
add
sbb
daa
gs
imul
jg
xchg
push
shr
lahf
stos
stos
dec
push
sub
sbb
pop
mov
mov
fbstp
sbb
arpl
fs
jo
pusha
push
mov
push
pop
(bad)
xlat
arpl
or
and
and
mov
pminsw
lods
shl
pop
scas
dec
or
mov
sbb
imul
loopne
out
jnp
ss
cmps
inc
arpl
popf
mov
(bad)
push
inc
and
dec
test
fmul
dec
adc
loopne
into
imul
jo
sbb
push
ja
imul
push
sbb
xor
mov
(bad)
push
scas
mov
outs
sbb
adc
(bad)
cvtps2pi
mov
inc
inc
imul
enter
xlat
dec
cmp
and
mov
xchg
aas
mov
jmp
adc
ret
pusha
aaa
(bad)
pusha
xor
rcl
jno
add
les
mov
mov
dec
sbb
mov
test
addr16
sbb
or
je
xor
or
mov
lods
mov
push
dec
add
lods
je
push
sbb
push
movs
push
adc
add
addr16
inc
aaa
push
ja
jae
mov
inc
sub
mov
sub
psrad
mov
fbstp
xchg
xor
mov
cmp
mov
es
pop
mov
aad
(bad)
mov
xchg
loopne
dec
ins
(bad)
push
mov
jnp
jp
jl
dec
arpl
dec
push
jae
pusha
aaa
rol
add
cs
adc
inc
sub
push
inc
or
cmps
inc
(bad)
push
jmp
or
jae
ret
mov
jo
mov
inc
add
adc
xor
lods
scas
int
cmp
adc
xlat
movups
das
cwde
arpl
imul
bound
cmp
mov
xchg
sub
pop
add
in
push
ins
push
dec
test
fist
pop
aad
pop
das
sbb
aaa
imul
mov
jecxz
(bad)
add
mov
sub
sub
stos
pop
lds
dec
es
adc
scas
mov
pop
xlat
push
mov
pop
dec
cdq
sub
imul
push
jno
pop
scas
aam
pop
aaa
mov
adc
and
mov
mov
sbb
(bad)
sbb
popa
pop
cwde
inc
mov
dec
jae
fwait
adc
retf
daa
cmp
lods
or
scas
adc
lea
(bad)
fist
ja
aaa
inc
stos
inc
push
pop
sub
inc
xor
gs
adc
jle
and
cmps
sub
pop
shr
repnz
bound
shl
jecxz
pop
dec
fnstsw
(bad)
iret
imul
out
aam
add
mov
push
sub
xor
js
pop
pop
addr16
and
sbb
inc
ins
inc
adc
pop
mov
sub
push
xor
outs
adc
xchg
int3
inc
dec
sbb
adc
jne
adc
xor
inc
inc
test
jecxz
inc
and
in
jmp
and
xchg
shr
add
jecxz
ficomp
push
gs
adc
cmp
add
xlat
pop
mov
mov
sar
sbb
pop
mov
pop
or
mov
mov
jp
ret
aas
nop
push
ins
iret
inc
and
sbb
sbb
add
and
xorps
dec
mov
add
add
pop
pop
adc
cs
jne
out
cs
packsswb
loop
add
mov
jo
ret
sub
scas
add
mov
clc
sub
or
je
mov
pop
outs
pop
add
js
inc
sbb
or
or
mov
and
xor
icebp
movs
ret
pop
ins
mov
daa
and
lods
popf
add
pop
daa
push
xor
pop
pop
in
es
aad
arpl
inc
cmovs
pop
shr
push
mov
dec
xchg
push
jmp
shl
call
xlat
pop
and
aas
or
adc
dec
je
mov
mov
pop
scas
mov
daa
sahf
pop
ins
adc
xor
pop
mov
pop
dec
mov
cmp
mov
inc
sub
call
mov
add
sub
aam
leave
adc
scas
inc
push
imul
mov
pop
shl
push
mov
ret
cmp
mov
test
pop
sub
sbb
jecxz
or
icebp
add
mov
les
mov
push
add
add
or
inc
fsubr
sbb
repz
mov
sbb
mov
test
sub
or
xor
push
data16
je
cmps
or
or
cmp
cmps
scas
test
aas
test
aam
adc
or
dec
add
mov
stos
sub
leave
push
jnp
xor
icebp
lods
shl
imul
inc
arpl
sub
shl
jg
dec
mov
inc
sbb
arpl
pop
push
pop
dec
xchg
or
or
arpl
sbb
cmp
test
adc
test
scas
adc
push
mov
imul
sub
test
ins
push
mov
or
dec
div
test
and
pop
bound
and
jae
mov
cli
cs
push
push
pop
adc
dec
xor
jno
stos
or
fwait
mov
arpl
and
fist
xchg
add
out
mov
test
fld
sbb
mov
sub
pop
mov
cmp
test
sub
pop
mov
jg
jbe
inc
cmp
ficom
(bad)
mov
ds
sub
push
mov
stos
ror
dec
push
lods
shr
add
adc
adc
les
xor
das
pop
push
jge
push
pop
adc
mov
les
sti
scas
or
call
outs
xchg
ret
leave
(bad)
jb
arpl
adc
ret
repz
(bad)
mov
arpl
xchg
idiv
aas
aad
es
aaa
mov
pop
fwait
cmp
push
xchg
int3
call
scas
sbb
arpl
in
and
fist
ins
jns
mov
mov
sbb
inc
dec
push
inc
push
mov
outs
xor
(bad)
aaa
dec
(bad)
dec
adc
mov
dec
adc
add
mov
push
pusha
push
or
iret
in
sbb
push
mov
jb
dec
mov
push
mov
xor
adc
sub
push
mov
push
gs
jbe
dec
ficom
aas
scas
ret
inc
or
fld
adc
pop
ins
adc
push
les
jne
push
pop
push
call
and
adc
shl
addr16
or
pusha
adc
ss
popf
adc
call
pop
adc
fild
push
dec
adc
mov
adc
ins
push
call
adc
rcl
add
sbb
sahf
mov
and
mov
and
les
int
imul
add
push
inc
xchg
sbb
adc
mov
ins
xor
retf
xchg
shl
pusha
fldcw
arpl
and
jnp
pop
mov
pusha
or
xor
or
jnp
xor
bound
dec
jecxz
push
mov
mov
adc
lea
and
push
jno
dec
lds
xchg
inc
sbb
mov
(bad)
clc
mul
ss
fwait
inc
mov
push
lea
(bad)
xlat
add
cmps
hlt
and
nop
lea
outs
rcl
jnp
(bad)
mov
cmp
sub
adc
jp
ret
mov
and
das
movs
mov
lods
mov
sbb
adc
pop
or
or
ins
xchg
mov
mov
xchg
xchg
shr
iret
fisub
adc
pop
dec
and
push
adc
mov
xchg
and
or
stos
fist
jl
push
ret
and
dec
pop
es
jne
lods
lods
popf
mov
in
inc
xchg
imul
xor
adc
psrld
shr
pop
push
je
push
inc
xchg
into
popa
(bad)
ins
sbb
add
mov
lods
mov
sub
ja
lock
mov
pop
stos
cmp
sahf
or
mov
lea
xor
add
cmp
loopne
dec
inc
inc
out
outs
leave
lods
dec
or
and
es
push
push
mov
icebp
repz
sub
jo
add
cs
adc
rol
push
ss
les
mov
jae
(bad)
in
sahf
aaa
scas
adc
cmp
sub
pop
xchg
leave
out
outs
sahf
out
test
daa
adc
mov
push
(bad)
adc
pop
adc
std
jmp
xor
fs
cmps
aam
scas
rep
pop
dec
jns
and
jbe
sub
outs
adc
xchg
shl
sub
mov
out
xchg
aaa
ja
jl
xor
inc
ins
and
push
mov
lea
mov
jge
mov
ins
or
icebp
cmp
and
mov
adc
ret
out
xchg
add
adc
js
add
xchg
push
in
and
loop
xchg
lds
mov
jae
jo
nop
or
adc
or
push
jbe
mov
mov
hlt
pop
and
push
dec
jae
dec
push
mov
adc
push
jne
push
and
std
dec
fimul
xor
or
inc
outs
arpl
cmp
aad
xchg
push
mov
dec
inc
xor
dec
fsubr
lahf
adc
pop
inc
push
inc
hlt
dec
add
adc
cmps
jbe
add
or
add
dec
scas
in
add
or
dec
scas
push
pop
add
adc
and
adc
daa
scas
add
pusha
dec
xlat
xchg
mov
and
leave
mov
sbb
hlt
cmp
sub
xchg
fldenv
(bad)
clc
jge
add
jns
add
les
add
add
add
jecxz
and
add
jmp
outs
ins
pop
jecxz
xchg
mov
mov
sbb
push
out
outs
rcr
js
or
push
push
and
cmps
push
and
add
mov
pop
fsubp
pop
sub
adc
push
and
sar
imul
xchg
cmp
push
mov
inc
push
xchg
sbb
(bad)
mov
push
sahf
adc
nop
xor
and
add
daa
outs
jne
(bad)
jmp
xor
imul
sbb
and
mov
popa
adc
fmul
sub
dec
sub
sbb
xor
sbb
mov
mov
rcl
xor
mov
inc
jae
mov
mov
sbb
sub
int
cmp
sub
cmp
mov
and
and
or
fcmovb
sbb
pop
xchg
popa
mov
mov
das
mov
add
leave
ins
add
sbb
and
mov
mov
sbb
or
inc
test
push
mov
pop
sub
and
daa
xchg
or
pop
jmp
push
sbb
ret
mov
push
pop
inc
add
sub
mov
shl
pop
cmp
adc
inc
sbb
and
mov
inc
jnp
add
mov
adc
pop
push
cmp
push
sti
inc
add
in
push
push
scas
xrelease
xor
xchg
test
enter
mov
push
inc
movs
cdq
mov
sub
inc
pop
pop
inc
jns
into
les
pop
mov
inc
cmps
mov
dec
push
jbe
inc
inc
sbb
es
sbb
add
or
adc
add
mov
and
inc
jl
add
into
sub
cmp
retf
fld
mov
xlat
push
pop
sbb
inc
mov
imul
(bad)
sbb
enter
fldenv
cmc
xchg
pop
les
dec
ror
adc
adc
push
(bad)
and
xlat
(bad)
out
pop
add
test
mov
mov
lods
aaa
mov
gs
adc
mov
addr16
lods
push
sbb
mov
add
xchg
adc
add
xor
leave
retf
cmps
outs
repz
add
push
sbb
ins
sbb
sbb
cmp
sub
or
lea
adc
ja
mov
pop
rol
mov
mov
mov
add
dec
jle
xor
in
fisub
mov
sbb
xchg
sbb
mov
push
sbb
pusha
sub
call
xchg
daa
aas
das
ja
ins
pop
add
ins
push
(bad)
stc
pop
and
bound
dec
pop
movs
enter
push
and
adc
repz
bound
outs
xor
jo
mov
jo
imul
cmp
xor
je
daa
add
dec
in
mov
or
cmp
test
jne
push
adc
jle
pusha
adc
rol
pushf
jecxz
es
in
push
sub
mov
fisub
sbb
shl
jnp
aaa
pushf
test
cmp
inc
and
dec
fs
jl
inc
ins
outs
push
dec
jb
dec
loopne
dec
js
cli
cwde
xor
lock
and
push
jae
jge
(bad)
jmp
mov
xor
mov
adc
les
push
outs
fcmovu
test
fdivr
fadd
pop
or
hlt
je
sbb
ins
scas
inc
inc
or
sbb
jo
xor
retf
jnp
cmp
mov
sub
jo
ss
jb
imul
(bad)
cwde
and
fldenv
outs
push
mov
ss
sbb
jecxz
mov
add
xor
inc
cmp
jmp
inc
bound
les
ins
cwde
inc
dec
adc
and
push
and
xor
jo
cmps
enter
inc
ret
mov
xor
mov
leave
inc
outs
pop
sbb
xor
sbb
add
mov
sub
stc
jg
mov
mov
fidiv
mov
iret
pop
arpl
arpl
push
test
mov
dec
dec
sub
shl
adc
or
cmp
mov
imul
movs
ss
fwait
or
daa
or
cmp
push
or
cmp
sbb
adc
inc
dec
mov
(bad)
sub
leave
push
adc
jo
mov
add
xchg
(bad)
addr16
mov
sbb
mov
sub
out
xchg
mov
push
inc
shl
or
cmps
mov
lea
inc
sar
dec
mov
and
adc
and
or
movs
out
push
and
inc
xlat
enter
test
dec
xor
das
arpl
and
les
push
dec
and
push
adc
cmp
and
add
inc
cmp
jb
cdq
jo
jo
fst
xchg
cmc
and
sbb
pop
dec
xor
adc
imul
lea
imul
ins
sub
mov
and
inc
inc
test
inc
jle
add
inc
add
or
dec
outs
sbb
sti
mov
movs
sti
pop
lods
pop
nop
xor
js
in
mov
add
daa
mov
and
arpl
mov
ins
imul
add
xchg
ins
scas
and
dec
jo
mov
mov
xor
adc
and
jp
idiv
pop
loopne
xchg
jmp
arpl
adc
lods
and
and
leave
pop
inc
xchg
test
mov
push
aaa
mov
fcom
or
ins
dec
nop
sub
div
dec
push
or
cmps
rcl
frstor
in
sub
push
inc
mov
fs
int
ror
sbb
jg
je
jne
xchg
fistp
gs
jae
dec
pop
inc
(bad)
mov
outs
(bad)
jae
push
nop
sub
ffreep
sub
dec
(bad)
xlat
imul
enter
mov
sbb
test
inc
fldcw
ficom
pop
sbb
sbb
ret
dec
imul
nop
sub
adc
add
arpl
adc
out
cdq
call
loope
arpl
or
xchg
and
add
mov
enter
jne
xchg
push
pop
pusha
inc
sub
sbb
jmp
test
inc
xor
mov
fld
shl
retf
sbb
dec
pop
push
and
pop
pusha
mov
sbb
sti
and
sbb
inc
leave
push
dec
enter
inc
cmp
or
adc
stos
das
stos
fimul
imul
sbb
aad
ins
bound
inc
sbb
mov
aaa
xchg
rol
icebp
push
lds
jmp
mov
pusha
popa
and
cmp
pop
xchg
jmp
cmova
sub
jb
leave
aaa
xchg
push
stc
mov
adc
hlt
xor
inc
xor
inc
popf
xchg
cmp
adc
mov
je
add
ins
adc
push
xchg
popa
pusha
(bad)
cmp
sub
or
loope
xor
in
loopne
sbb
mov
inc
mov
inc
or
adc
push
jge
pop
ins
sbb
sbb
xchg
les
cdq
js
retf
pop
cmp
ins
fbld
and
popa
pop
das
and
inc
push
pop
pop
jmp
test
push
test
out
or
outs
push
aaa
dec
adc
pop
pop
jle
mov
xchg
pop
loopne
inc
inc
fs
mov
movs
inc
je
and
inc
repz
pop
bound
xchg
sub
sbb
pop
cmps
inc
scas
and
jno
mov
lods
hlt
je
movs
jne
mov
inc
xchg
push
std
pop
in
inc
add
dec
add
add
pop
inc
sub
pop
add
push
inc
outs
add
into
add
cld
dec
(bad)
movups
imul
movs
pop
imul
jns
sbb
inc
fwait
call
sbb
outs
into
outs
pusha
jp
inc
ds
adc
dec
fdiv
add
xor
xor
out
xlat
add
pop
mov
and
inc
inc
push
inc
adc
neg
pop
fimul
test
dec
inc
in
rol
sbb
dec
mov
ror
shr
sub
test
dec
sub
cmps
inc
je
mov
sti
pusha
adc
push
bnd
jo
inc
push
outs
xchg
shl
xchg
or
cmp
dec
push
mov
jnp
daa
(bad)
adc
shl
jo
xchg
and
out
das
sub
sub
add
add
add
inc
xchg
dec
pushf
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
jo
push
add
dec
