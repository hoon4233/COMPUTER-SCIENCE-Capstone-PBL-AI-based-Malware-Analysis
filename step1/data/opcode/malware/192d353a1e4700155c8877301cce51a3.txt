mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
(bad)
jmp
add
jb
gs
push
jns
je
ins
add
xor
add
inc
outs
jae
inc
fnsave
jb
inc
xor
add
add
jg
jmp
or
outs
jb
dec
outs
je
sub
jg
test
ins
(bad)
ins
ss
stos
jl
cmp
mov
gs
add
(bad)
out
cmp
das
add
jns
mov
das
push
int3
fs
call
sub
data16
xchg
jb
pop
cld
out
inc
push
fs
jle
xor
pop
sbb
adc
div
xor
add
fbstp
sbb
push
push
inc
add
pop
pop
sar
popa
je
jbe
dec
jae
je
or
push
out
xor
ss
and
cld
sti
mov
push
fs
mov
inc
outs
jne
mov
and
pop
out
ins
jo
aas
aam
or
addr16
jne
jb
arpl
jmp
add
aas
call
jb
fdivr
es
push
xchg
mov
sbb
xor
inc
push
adc
das
push
imul
movs
dec
sub
or
push
add
movs
mov
pop
pop
dec
outs
fcomp
pop
ffree
outs
or
mov
jl
or
or
or
mov
or
daa
xchg
les
or
push
mov
js
push
imul
call
(bad)
adc
push
inc
ins
popa
jae
pusha
sbb
mov
push
inc
push
push
dec
push
lds
adc
push
add
adc
cmp
or
int3
xor
repnz
inc
sub
xor
xor
cdq
cdq
std
pop
add
sbb
push
or
pop
cld
pop
sub
outs
jo
inc
jno
imul
jns
sti
outs
lock
dec
gs
pop
add
sbb
jo
mov
or
fsubr
addr16
gs
jb
or
cli
cmp
adc
push
xchg
jb
popa
sti
jge
in
arpl
adc
adc
add
push
andps
dec
push
add
sbb
adc
add
popa
ror
(bad)
in
xor
push
push
push
popa
sub
aam
or
pushf
mov
and
adc
sbb
or
inc
and
add
je
and
jl
xchg
outs
aaa
les
pop
sub
dec
in
jne
mov
inc
adc
imul
mov
loopne
pop
push
dec
cld
hlt
or
add
in
fs
jmp
adc
std
pusha
pcmpgtb
inc
add
out
push
lods
push
dec
pusha
inc
pusha
fs
out
pop
sbb
mov
add
push
outs
mov
inc
adc
pop
inc
punpckhdq
leave
enter
(bad)
add
sub
leave
leave
leave
push
xchg
into
or
mov
mov
daa
mov
mov
test
mov
stc
mov
daa
sbb
dec
add
mov
idiv
jp
sub
clc
dec
sbb
(bad)
cmp
aas
pop
inc
psubq
mov
add
mov
mov
dec
push
dec
inc
add
inc
dec
bound
arpl
mov
jg
cmps
adc
add
pusha
jmp
lahf
test
ins
data16
and
dec
add
inc
je
rcl
inc
or
imul
movs
or
inc
in
(bad)
or
or
out
ret
das
add
inc
ror
xchg
mul
jne
sbb
stc
std
stos
or
in
inc
in
mov
xor
pop
inc
push
dec
popa
ins
mov
and
addr16
sahf
mov
dec
jae
into
lea
dec
jno
loopne
mov
push
popa
push
je
pusha
mov
das
jno
pusha
mov
or
fisub
add
push
loopne
xor
mov
and
jp
adc
push
cmp
pusha
push
push
xchg
or
outs
ins
jae
push
pop
pop
add
push
inc
add
outs
cwde
loopne
pop
popa
and
ins
inc
fs
adc
sub
in
in
sbb
ins
je
arpl
out
inc
cld
je
aas
mov
jo
add
mov
popa
add
push
adc
pusha
data16
inc
inc
jnp
sub
inc
outs
ins
jns
push
nop
cmp
sub
in
mov
jb
popa
add
in
push
pusha
cvttps2pi
add
adc
cmc
add
or
xchg
add
lods
popf
jecxz
pop
cmp
mov
add
or
ins
xchg
add
imul
jp
adc
xor
mov
or
push
shl
cs
arpl
xor
adc
icebp
jo
pop
bound
sbb
adc
add
xchg
dec
lock
mov
jo
jnp
or
and
push
add
and
fbstp
popa
gs
pusha
inc
js
jo
imul
jbe
adc
or
(bad)
push
cmp
or
bound
test
pop
pusha
mov
data16
rol
les
arpl
out
xor
adc
gs
cmp
adc
in
mov
jo
je
push
cmp
popa
addr16
aas
(bad)
lods
adc
ins
scas
outs
or
mov
jge
add
pop
fdivp
or
ja
ret
add
sub
mov
out
daa
xchg
pop
rep
or
mov
dec
popw
and
mov
jmp
dec
or
fst
mov
pop
ror
ins
fmul
shl
rcr
in
popf
ins
jne
push
add
imul
or
rcr
add
add
int
add
add
(bad)
inc
jmp
adc
push
pop
jnp
das
push
cmp
repz
inc
push
sub
push
push
push
push
jno
xchg
popf
lods
pop
daa
call
mov
les
jbe
xchg
mov
test
sub
pushf
popf
or
push
dec
ins
sbb
dec
dec
pop
dec
mov
mov
adc
shl
cmps
cmp
aad
adc
or
test
push
mov
rol
lds
jns
inc
sub
ins
mov
and
fistp
sbb
call
xchg
mov
xor
fwait
cmp
pop
das
bound
lds
push
movs
jg
iret
loopne
out
push
add
push
inc
jne
outs
ins
inc
je
test
into
bound
mov
std
outs
sbb
adc
push
scas
lea
shr
test
ror
push
and
gs
jns
das
lock
popa
cmp
outs
xor
push
call
inc
cmp
jmp
and
daa
or
movq
adc
push
inc
jp
outs
mov
rol
bnd
aad
push
adc
outs
jbe
adc
push
jbe
bound
jle
sub
push
out
dec
jmp
or
hlt
xor
push
imul
push
add
xchg
and
inc
ins
in
fistp
add
ja
dec
enter
add
cmps
or
mov
and
push
and
push
cmp
push
imul
adc
or
test
pop
and
loopne
loopne
leave
add
jae
or
sahf
sub
mov
ins
arpl
bound
push
push
jmp
pop
ja
imul
popf
mov
jb
pop
push
xor
xchg
cmp
pop
and
xchg
push
sahf
mov
sbb
or
sbb
and
pop
mov
push
stos
stos
pop
rcr
or
arpl
xchg
xor
lods
dec
sub
fisttp
pop
pop
or
leave
xchg
pop
stc
mov
pop
push
ds
movs
jge
and
pop
fld
or
and
pushf
add
(bad)
sub
and
adc
mov
neg
add
dec
push
push
inc
pop
xor
and
mov
xchg
gs
mov
outs
fcom
lods
in
sub
inc
nop
mov
inc
jns
and
xchg
mul
and
ins
pop
sub
or
adc
xchg
icebp
push
and
jmp
inc
and
(bad)
gs
inc
outs
or
mov
xchg
int3
and
sub
cdq
push
jae
iret
push
mov
fsub
outs
and
cs
test
loope
pop
cmp
mov
out
cld
adc
pop
in
cmp
imul
adc
push
test
out
les
adc
popa
pop
sti
jge
pushf
fidivr
or
adc
add
call
(bad)
push
(bad)
fnsave
xchg
xor
xor
pop
fdivr
pop
xchg
pop
es
dec
imul
jo
aam
jmp
jge
mov
pop
es
and
inc
in
mov
mov
dec
or
das
pop
cmps
popf
jle
or
sub
popa
cwde
imul
imul
popf
and
sub
push
or
(bad)
sbb
or
cmove
pop
cmp
aaa
in
pop
lock
sbb
fild
nop
inc
jle
dec
aaa
and
push
mov
lds
fldcw
aaa
dec
add
push
mov
and
arpl
sbb
mov
xor
mov
cdq
fdiv
mov
mov
adc
in
pop
adc
rol
and
ret
popa
in
ret
mov
mov
jb
adc
pop
add
in
cmc
std
inc
ror
add
ret
nop
xchg
add
mov
mov
push
sbb
cmp
mov
cmp
movs
fnstcw
and
push
push
fsub
in
in
ror
enter
in
sar
mov
test
in
in
mov
in
xchg
nop
mov
test
in
js
jo
in
in
push
in
in
push
push
dec
in
in
dec
inc
inc
cmp
in
in
add
sub
jb
hlt
lock
xor
leave
leave
in
sub
sub
outs
daa
mov
in
loopne
fcomp
sbb
pop
sar
punpckhbw
pusha
or
(bad)
stos
pop
pop
pop
xchg
ret
pop
(bad)
sub
mov
in
sbb
div
jg
nop
nop
push
add
mov
inc
(bad)
jmp
sbb
test
je
movzx
mov
inc
inc
pop
ret
pop
into
in
mul
(bad)
adc
or
mov
add
push
inc
popa
mov
ins
shl
shl
inc
hlt
out
arpl
jb
push
fs
idiv
imul
xor
sub
push
sub
mov
mov
push
imul
add
mov
fdivrp
call
popa
imul
stos
and
arpl
cmp
adc
push
pusha
pop
xor
das
or
inc
and
arpl
mov
or
pop
pusha
iret
jp
popaw
dec
leave
mov
call
bound
test
retf
jnp
and
mov
pusha
sub
pop
cwde
popa
inc
in
push
int
ret
int
or
mov
(bad)
mov
in
mov
mov
mov
dec
add
inc
or
and
mov
or
or
adc
or
adc
sahf
fld
cmp
inc
adc
adc
cmps
jge
mov
adc
sbb
sub
push
cmps
mov
cs
jp
add
sub
aas
lods
cdq
(bad)
push
add
inc
sub
jp
dec
imul
dec
xor
jbe
test
push
lahf
push
add
push
mov
pop
cmp
inc
arpl
add
fs
inc
inc
imul
jmp
retf
jns
fistp
ins
fcmovnu
fbstp
push
cmp
add
js
and
xchg
inc
data16
xor
test
cmc
mov
add
nop
call
cmp
mov
call
add
sub
retf
add
mov
mov
(bad)
pushf
rol
and
pop
mov
and
je
mov
jmp
adc
(bad)
inc
sbb
and
add
xchg
mov
cmp
xor
mov
add
pop
test
(bad)
sbb
iret
in
ret
cmp
ins
jle
icebp
call
inc
cld
add
or
adc
dec
add
sbb
push
add
cmp
dec
pop
mov
lock
and
sub
fmul
xor
mov
inc
pop
mov
cld
push
js
add
je
dec
adc
push
test
test
call
pop
push
jbe
pop
mov
lods
mov
loop
mov
out
mov
push
rol
and
mov
sub
mov
mov
rol
xor
int
shl
cmp
cmp
xor
frstor
out
sbb
clc
stos
sbb
add
in
sbb
or
push
xor
loope
add
push
push
push
mov
adc
cmp
and
ins
fwait
pushf
push
clc
inc
pop
sub
mov
outs
or
sub
pop
pop
mov
pop
cld
test
sbb
ins
mov
sbb
add
ret
pop
cld
(bad)
fucom
pop
pop
pop
faddp
add
mov
sub
jae
(bad)
sti
in
mov
mov
mov
push
and
or
test
jne
in
je
and
adc
add
jmp
aas
or
cmp
in
push
push
lea
daa
mov
bound
pop
push
jne
push
push
mov
(bad)
push
cmp
jbe
sub
add
jmp
test
jne
lods
(bad)
fiadd
and
fisubr
loopne
(bad)
sub
dec
(bad)
loopne
das
mov
mov
mov
sub
pusha
add
pushf
fdivrp
inc
das
cmp
inc
mov
data16
sar
(bad)
jbe
shr
out
mov
xor
and
add
call
push
fimul
aas
cmp
jne
and
imul
adc
shl
aad
push
cmp
loop
fidivr
ret
jae
fdiv
arpl
mov
or
xchg
sub
mov
jo
es
mov
or
call
fisttp
ins
push
std
sub
add
jbe
ret
push
je
add
jle
mov
xchg
neg
imul
fcom
jmp
repz
xor
(bad)
out
push
ja
jmp
dec
(bad)
and
ins
out
(bad)
mov
cmp
add
cmp
data16
int3
test
aaa
cld
push
jl
jl
lea
push
mov
jl
ins
xchg
inc
adc
fidivr
fisub
(bad)
add
xor
dec
(bad)
je
(bad)
sub
call
sbb
mov
add
sar
adc
jbe
mov
sbb
dec
adc
dec
aas
dec
clc
pop
or
or
mov
lahf
lds
sbb
ret
je
pause
or
cmps
rol
fisubr
inc
and
xchg
fwait
sub
xchg
movsx
cld
fld
sub
mov
cmp
int
mov
lea
lea
or
push
pop
push
add
cmp
sbb
mov
test
btr
inc
psubusw
pusha
or
add
mov
dec
jnp
sub
lea
(bad)
pusha
xchg
and
jmp
and
iret
jb
mov
lea
xlat
enter
iret
sub
sub
cmp
and
or
inc
push
mov
enter
(bad)
fbld
add
and
lea
dec
cld
xor
das
mov
mov
mov
inc
and
rcl
call
pop
push
adc
imul
iret
mov
addr16
out
or
mov
pop
pop
mov
fidiv
mov
jle
lea
mov
cmp
jne
lea
or
fsub
or
pop
je
mov
jg
loope
rol
or
jmp
nop
nop
cmp
sub
(bad)
xor
mov
enter
sti
mov
shl
push
xor
sbb
sub
cmp
push
clc
adc
jmp
mov
inc
push
pop
or
adc
loopne
add
cmp
(bad)
xchg
inc
inc
inc
adc
push
sub
pop
xor
sbb
setno
(bad)
imul
lock
mov
fisttp
dec
popa
scas
inc
jns
or
rep
stos
pusha
test
rol
test
add
(bad)
fisttp
push
jmp
clc
ror
pop
data16
or
xchg
push
mov
jge
cdq
push
push
mov
aad
ret
or
mov
sub
aaa
cwde
dec
push
sub
and
push
cld
dec
shl
iret
dec
es
push
scas
jmp
js
icebp
loopne
out
push
push
mov
nop
nop
mov
and
push
push
adc
add
lock
pop
pop
fmul
scas
test
or
daa
js
xor
test
jne
cmp
hlt
je
lea
and
mov
sbb
ss
mov
pop
ret
pop
and
lock
cmp
sbb
aaa
jmp
pop
dec
clc
sub
sub
sahf
into
xor
sub
ret
aad
push
lahf
test
mov
cmp
sbb
add
jo
lods
mov
add
(bad)
mov
loopne
mov
xchg
mov
or
rol
in
or
in
fld
cmp
jb
sbb
or
retf
jb
jns
jb
inc
add
mov
ret
jg
aas
shr
or
lea
push
mov
loop
xlat
mov
sub
adc
and
add
hlt
outs
outs
fneni(8087
xor
clc
iret
mov
jl
push
sbb
add
ret
xchg
fild
div
loop
retf
mov
add
stos
add
cmp
xor
setae
cmp
jb
lods
les
mov
loopne
push
int3
push
mov
push
jmp
xor
xlat
xor
cmp
push
jbe
fcomp
push
or
mov
cld
or
mov
push
mov
int
dec
mov
jne
or
adc
pop
pop
pop
cmc
(bad)
clc
mov
rol
xlat
sub
mov
jno
clc
add
cmp
and
lea
mov
lds
cld
adc
xchg
out
mov
test
ret
or
xchg
loopne
cmp
cmp
dec
or
inc
(bad)
iret
pop
mov
adc
es
rcl
or
mov
push
sar
mov
ja
cmp
push
dec
(bad)
pop
mov
call
jmp
rol
sbb
fiadd
mov
push
ret
and
push
add
push
ins
fsub
cmp
lea
jl
inc
aaa
xor
lds
add
and
fisttp
xchg
sbb
ret
pop
(bad)
(bad)
dec
iret
push
gs
pusha
fcom
loop
shl
xchg
ret
es
sar
and
sbb
push
lea
jecxz
(bad)
mov
leave
lea
or
jae
neg
fldz
cli
adc
(bad)
fst
add
js
or
rcr
mov
pop
das
loopne
add
adc
add
mov
mov
sbb
cmp
add
rcl
sbb
mov
cmp
jb
dec
mov
pushf
scas
mov
rcl
sbb
mov
jmp
push
mov
sub
jle
std
outs
call
cmp
jne
mov
pop
adc
sbb
jmp
sbb
neg
mov
add
retf
fistp
dec
mov
mov
mov
test
test
push
sbb
ret
xor
div
mov
ret
add
push
cmp
lods
jmp
clc
inc
mov
add
mov
adc
test
jne
mov
rol
mov
pop
push
xchg
ins
jg
imul
shl
test
iret
retf
mov
repnz
rcr
sar
adc
sub
cmps
mov
outs
pop
push
rcr
xor
push
mov
ins
adc
out
jbe
jg
lock
pusha
mov
push
in
cmp
ja
mov
out
jg
jmp
pop
xor
leave
mov
push
adc
ret
xchg
add
push
adc
neg
add
adc
test
je
adc
into
mov
mov
pop
mov
pop
pop
inc
or
pusha
fsub
out
sub
cli
and
call
lods
jge
push
push
cmp
test
inc
xchg
es
and
mov
push
cmp
daa
test
daa
dec
cmps
sti
out
fadd
inc
adc
lea
mov
and
mov
cmp
inc
ret
sbb
pushf
in
sbb
mov
sbb
vandnps
mov
pop
mov
sub
mov
stos
scas
jecxz
adc
jne
cli
or
rcr
mov
je
add
cmps
jno
xor
pxor
movs
sub
aas
inc
sbb
dec
movs
js
mov
jns
je
add
jb
xor
add
ss
mov
mov
push
rol
or
fwait
mov
jl
sub
es
pop
mov
cmp
jne
add
data16
mov
or
and
or
ret
test
frstor
xchg
fdivr
add
pop
outs
adc
call
loopne
push
xlat
cmc
jmp
(bad)
dec
inc
(bad)
test
fild
sbb
pop
neg
jne
and
movs
push
inc
or
cmp
je
aaa
sub
sbb
clc
test
cmp
add
add
jle
sti
inc
jge
hlt
adc
jne
mov
inc
add
jge
ret
add
mov
adc
jecxz
dec
shr
or
test
ins
mov
mov
jae
dec
aas
ror
adc
add
mov
test
adc
cmp
stos
imul
and
add
mov
and
adc
fdiv
cmp
sbb
adc
mov
mov
call
and
call
bnd
and
cdq
fild
xchg
das
sti
pop
ret
add
mov
je
or
pop
or
add
xchg
jle
movq
popa
sub
(bad)
inc
fiadd
in
cmp
fmul
xchg
test
push
(bad)
jbe
mov
test
out
lds
data16
mul
lea
adc
mov
inc
and
pop
inc
add
loop
loop
push
dec
mov
mov
(bad)
mov
xor
pop
add
xor
add
loope
test
cld
je
xchg
sub
cmps
push
shr
pop
jmp
mov
cs
loop
mov
inc
repnz
(bad)
mov
mov
cmp
push
sub
jecxz
dec
mov
jg
mov
jb
sbb
jmp
inc
and
enter
es
in
push
neg
xchg
mov
ds
dec
jl
cmp
mov
sbb
adc
pop
mov
std
and
mov
daa
fiadd
inc
aaa
ds
adc
xor
cld
dec
out
in
loope
mul
push
mov
mov
(bad)
retf
or
jl
fmul
xchg
cmp
xchg
adc
add
jne
mov
fiadd
call
push
not
add
add
inc
rol
test
push
mov
sbb
in
adc
push
(bad)
(bad)
retf
cld
sub
or
cld
out
out
add
je
dec
je
jmp
in
mov
jmp
mov
mov
inc
je
mov
mov
enter
push
xchg
dec
sub
adc
mov
sbb
clc
adc
push
cmp
xchg
jge
xor
test
jne
sbb
cmp
sub
(bad)
shr
xchg
ja
pop
sbb
or
cmp
out
adc
cmp
mov
dec
(bad)
ja
pop
jb
inc
xor
mov
cmps
dec
inc
push
es
xlat
add
jmp
aaa
add
(bad)
inc
push
div
mov
adc
mov
sub
push
ror
mov
sbb
les
idiv
std
adc
xchg
cli
in
fcomip
cmp
out
add
cmp
jbe
mov
push
ins
adc
cmc
call
aaa
jne
mov
jl
cmp
pushf
mov
add
jle
nop
sub
mov
or
sub
mov
stc
cs
sar
add
add
in
or
call
jbe
imul
js
scas
mov
shl
mov
shl
add
mov
call
xor
loope
lea
add
popf
and
jae
mov
pushf
sbb
in
inc
pop
sub
imul
mov
jb
push
data16
jmp
shl
pop
xor
mov
mov
sar
mov
ret
out
lods
adc
inc
dec
pop
adc
stos
mov
push
push
push
mov
hlt
out
sub
mov
xchg
push
mov
cmp
cld
std
cmp
jne
mov
mov
mov
adc
or
mov
imul
dec
jne
mov
mov
cmp
rol
dec
fcom
mov
inc
inc
nop
add
(bad)
jle
idiv
repz
mov
mov
pop
cmp
int3
je
mov
adc
mov
sbb
mov
das
call
dec
je
lahf
mov
sbb
sbb
push
xor
call
fiadd
ret
mov
push
aaa
call
jno
adc
pop
lods
xor
pop
adc
addr16
mov
repz
nop
lahf
fs
jne
clc
mov
lahf
lahf
mov
test
je
test
je
push
mov
inc
push
mov
adc
add
adc
imul
test
arpl
sbb
pushf
out
movs
mov
fisttp
je
sbb
mov
inc
or
aas
add
cld
pusha
lods
push
and
or
mov
js
add
cmp
(bad)
rcl
ret
mov
add
push
and
jae
xchg
jns
mov
jge
test
jne
mov
dec
cwde
outs
cwde
mov
sbb
movzx
add
js
hlt
(bad)
aaa
nop
daa
into
ins
xlat
push
(bad)
push
mov
push
add
or
add
outs
movs
add
out
add
pop
pop
pop
jne
loop
sub
sub
int
push
cwde
in
and
nop
push
add
rcl
je
cmp
ja
push
int3
sar
jmp
and
mov
jo
push
sub
or
dec
push
adc
nop
sbb
add
fcmovbe
and
mov
xchg
dec
push
dec
push
sbb
sahf
out
and
xor
mov
pop
push
mov
dec
or
adc
fld
fcom
or
jl
pushf
sbb
fistp
cmp
jle
or
shr
retf
adc
jbe
adc
cmp
add
and
sub
pop
inc
cmc
pop
jae
sbb
mov
ds
jecxz
inc
mov
add
mov
(bad)
and
pushf
pop
xlat
and
add
cmp
cmp
ret
cmc
fwait
imul
fild
fistp
jnp
(bad)
add
push
out
push
and
cmp
jne
or
or
ins
adc
fmul
jmp
and
mov
and
inc
imul
ss
cmp
pop
mov
fcomp
mov
cli
js
bound
jnp
pop
fild
jmp
sub
pop
es
test
adc
jbe
fadd
jmp
out
cmp
pop
xchg
js
pusha
push
mov
scas
jno
mov
mov
xor
std
mov
push
mov
pop
mov
fwait
or
ret
pop
cmp
add
mov
pop
pop
pop
pop
adc
jo
or
(bad)
dec
ret
mov
dec
mov
add
add
lock
test
push
inc
jo
jg
mov
dec
loopne
imul
push
std
cli
ror
test
clc
dec
adc
dec
jmp
ret
mov
or
sub
or
fisttp
sbb
jmp
mov
imul
mul
or
fistp
sub
fnclex
fldcw
mov
and
cmp
pop
push
cmps
add
popa
push
sahf
push
stmxcsr
pop
pop
fld
fldz
mov
(bad)
outs
in
add
fnstcw
fwait
or
or
fldcw
es
or
std
rcr
fild
jmp
(bad)
lock
faddp
fscale
fstp
pop
ret
retf
aas
in
cs
fwait
and
and
and
pop
pop
mov
hlt
mov
rcr
pop
cmp
pop
jae
push
cld
mov
push
pop
xor
mov
fimul
das
out
outs
jg
jb
cmp
jb
or
data16
mov
(bad)
add
jnp
ss
sbb
outs
sbb
jnp
add
or
test
outs
add
inc
sbb
movs
sub
sbb
push
jl
pop
cwde
fs
mov
xchg
adc
mov
das
mov
or
repz
fmul
or
adc
jg
or
int3
sbb
clc
push
add
add
out
add
hlt
fmul
jae
mov
ficomp
enter
push
and
pop
bound
or
cmps
mov
ja
push
icebp
call
sbb
inc
(bad)
es
and
sti
(bad)
js
cmp
rcl
dec
aaa
mov
pop
cmps
adc
jle
setg
dec
je
or
mov
(bad)
and
mov
cmp
in
sbb
dec
out
and
inc
mov
pop
xchg
sub
mov
fdivp
dec
jg
jne
repnz
mov
je
inc
or
popa
icebp
dec
pusha
in
cmp
loopne
cwde
mov
mov
mov
mov
jmp
push
adc
pop
xchg
jae
clc
add
sub
adc
lock
movs
imul
cld
mov
add
fsub
add
sub
aaa
clc
push
jo
test
sahf
dec
loope
mov
cmp
(bad)
(bad)
in
ja
mov
ret
cld
push
xchg
daa
sbb
mov
mov
out
mov
mov
mov
sbb
je
and
add
ret
les
je
or
jbe
lahf
jge
inc
cmp
inc
inc
xor
outs
cmp
jne
xchg
loopne
push
push
(bad)
sub
in
or
adc
jmp
popa
push
leave
mov
xchg
add
retf
ds
fcomi
neg
xor
add
adc
clc
cld
fs
(bad)
pop
mov
mov
shl
push
add
movzx
add
push
sub
jno
pop
test
jle
ins
sub
inc
jae
mov
mov
and
fwait
mov
pusha
lea
dec
cwde
inc
jae
retf
aam
jge
icebp
mov
(bad)
jmp
stc
pause
or
fild
adc
jo
mov
dec
(bad)
aam
fadd
sar
and
(bad)
sar
fucomi
mov
cmp
cmp
mov
push
popa
dec
dec
push
sbb
inc
aam
and
(bad)
loope
pop
inc
mov
add
sar
ret
push
outs
adc
imul
mov
or
shl
(bad)
jmp
inc
test
cmp
xchg
xchg
or
rcl
mov
mov
and
jne
je
jnp
sbb
arpl
and
push
clc
adc
pop
ret
iret
mov
inc
test
mov
pop
loopne
and
les
xor
ds
add
mov
cmps
es
cmps
ja
and
add
or
pop
cdq
ins
in
not
(bad)
fucomp
adc
fmul
add
add
xchg
mov
jl
nop
adc
mov
mov
push
add
pusha
(bad)
jmp
fld
fst
fst
mov
and
mov
adc
shl
fisubr
fwait
sahf
ror
sub
dec
loop
inc
lea
cmp
repz
cs
sbb
sbb
push
adc
cmp
repz
push
or
adc
dec
mov
ret
(bad)
mov
cmps
cmp
jge
dec
mov
mov
scas
les
mov
mov
xor
mov
push
add
jmp
mov
ja
loopne
cmp
jae
adc
jl
and
dec
sbb
dec
mov
dec
mov
lea
xchg
xchg
adc
xor
mov
rcr
or
sbb
inc
push
sub
xor
push
test
add
xor
dec
adc
xchg
add
imul
push
cmc
pop
jmp
mov
and
ret
mov
(bad)
push
sbb
mov
sub
shl
mov
push
fisttp
jle
add
cmp
je
mov
sti
sub
je
lahf
lahf
lahf
jb
je
js
outs
pop
je
xor
mov
cs
push
data16
dec
lods
xor
sub
ja
cmp
ja
fisttp
and
fsub
pop
and
jmp
iret
(bad)
(bad)
jmp
neg
jle
js
pop
sub
jmp
inc
dec
jmp
mov
xor
addr16
sahf
popa
jb
mov
mov
jbe
adc
add
or
mov
xor
add
mov
pop
loope
push
or
add
sbb
push
rcr
aas
ret
sete
pop
into
repz
adc
imul
aas
test
js
movq
out
cli
add
adc
js
push
or
push
xchg
jmp
std
or
retf
add
rcl
mov
rep
call
std
add
pop
jmp
xchg
adc
(bad)
xor
push
nop
fist
or
stc
mov
inc
push
fiadd
pop
pop
mov
mov
inc
adc
cmps
iret
cmp
scas
jo
mov
(bad)
xchg
cmp
push
cmp
xor
cmps
inc
mov
inc
mov
sbb
mov
jg
xor
fwait
mov
xchg
and
mov
enter
(bad)
and
or
rcl
push
mov
cmps
inc
mov
mov
in
ficomp
ret
add
cld
imul
inc
sbb
add
pusha
nop
dec
push
xlat
dec
pop
jecxz
pop
dec
mov
pop
cmp
mov
das
outs
test
cmps
pusha
push
movzx
adc
iret
pop
sub
pushf
inc
ja
mov
add
test
mov
add
test
cmps
jbe
je
arpl
add
sub
jae
inc
nop
inc
sub
fdivr
add
sub
jae
and
adc
adc
add
mov
pushf
adc
pop
jle
test
sub
mov
mov
inc
cmp
mov
enter
pop
push
dec
lock
sbb
loopne
clc
div
pop
cmp
xor
sti
and
or
or
jns
mov
jp
sbb
jmp
or
cld
shr
jb
push
cld
inc
xor
pop
pop
mov
pop
clc
pop
scas
pusha
inc
das
js
and
mov
clc
cmp
lahf
cmps
pop
clc
mov
push
xor
pop
mov
pop
shr
ins
lahf
pop
iret
mov
mov
(bad)
icebp
mov
xchg
dec
mov
jge
add
sub
pop
outs
inc
mov
push
xlat
inc
inc
mov
ja
pop
nop
mov
mov
jmp
cmp
fs
enter
sbb
fadd
inc
cld
mov
pop
sbb
mov
sbb
cmps
lahf
std
cmps
pop
inc
pop
jo
mov
std
cmps
scas
(bad)
daa
or
mov
(bad)
fcom
or
inc
sub
inc
(bad)
xor
mov
mov
jl
sub
inc
mov
jmp
rcl
shl
fnstenv
or
pop
in
or
jecxz
adc
std
(bad)
jg
shl
fidiv
lea
cmp
ja
dec
mov
and
shl
shr
sbb
test
rcl
in
push
test
sub
jne
and
mov
jmp
stos
dec
mov
je
daa
(bad)
pop
add
ror
xlat
and
outs
or
ret
sahf
shl
dec
fsubr
aas
shl
mov
mov
cmp
repz
sbb
int3
(bad)
pop
mov
sub
sub
leave
jne
push
jg
retf
fiadd
scas
icebp
sub
and
icebp
sbb
push
push
xor
jg
mov
jl
je
call
clc
mov
lea
mov
and
lea
fld
sub
fmulp
inc
je
sub
je
loope
mov
das
out
fadd
popa
inc
and
mov
jmp
neg
xchg
jge
mov
dec
gs
sub
sbb
push
jg
jmp
fstp
fld
adc
out
sbb
addr16
(bad)
jg
push
pushf
pop
mov
xor
out
into
popf
adc
enter
pop
sub
xor
mov
je
or
adc
add
sahf
scas
dec
jo
test
jg
loop
cmp
mov
mov
jecxz
cmp
and
xlat
sbb
cmp
enter
cmps
inc
test
pop
outs
jp
sbb
in
mov
inc
adc
push
mov
add
pop
inc
ss
rcl
ins
pop
icebp
ret
adc
mov
mov
mov
(bad)
dec
lods
or
mov
aaa
mov
dec
or
int3
outs
test
out
fidiv
sub
pushf
push
movups
fs
mov
jae
popf
cs
push
inc
xor
hlt
out
add
pop
mov
mov
call
or
jp
stos
mov
loop
fidivr
dec
add
stos
pop
and
mov
ror
add
push
mov
(bad)
(bad)
sub
je
pop
mov
xchg
jae
ds
sti
sbb
push
mov
mov
push
sbb
cmp
sar
test
lods
(bad)
mov
mov
mov
loop
call
mov
adc
mov
push
ss
cmp
lods
jae
paddd
movsx
and
and
loope
inc
xchg
ret
add
mov
daa
les
pop
push
ret
mov
out
stos
(bad)
pop
clc
or
mov
mov
mov
dec
pop
xchg
xor
fistp
cmp
add
sub
mov
push
add
sub
je
sbb
dec
jo
out
jmp
test
loop
sar
pop
jne
or
adc
push
push
pop
adc
shr
mov
outs
mov
inc
lods
lock
ins
shl
cmp
jne
jb
cmp
sub
dec
rcl
push
or
jb
push
or
inc
daa
bound
push
call
add
xchg
push
fild
inc
retf
add
add
enter
pop
aad
or
(bad)
jae
jmp
ret
aas
push
mov
mov
cdq
mov
loope
scas
jl
jl
push
xor
iret
or
sbb
cmp
les
scas
dec
je
pop
loopne
pop
pop
ja
sar
inc
jne
xor
mov
cmps
adc
mov
mov
and
(bad)
mov
jne
jp
aaa
pushf
mul
xchg
or
mov
pop
imul
(bad)
dec
cmp
push
loope
push
push
(bad)
dec
(bad)
xchg
or
stos
jecxz
in
push
add
xchg
jg
lock
adc
movzx
push
add
xor
scas
cmp
push
add
stos
fbld
xor
pop
ret
pop
add
sub
inc
inc
cld
adc
fadd
fcom
les
dec
mov
sbb
add
out
push
cmp
mov
mov
push
daa
ret
lock
scas
and
ja
mov
xlat
inc
dec
jbe
pop
pop
pop
(bad)
fwait
push
sbb
dec
or
cmp
jae
push
push
rol
add
adc
stos
hlt
pop
cmp
addr16
push
pop
sar
push
sub
push
repnz
hlt
(bad)
jmp
lock
inc
movs
lea
inc
rcl
jbe
push
cmp
aaa
adc
fucomi
jo
call
leave
xor
mov
loope
jo
xor
outs
cmp
int3
ds
call
xor
es
and
add
dec
jne
sbb
jmp
pop
jmp
sbb
jmp
push
lea
inc
nop
add
(bad)
mov
mov
mov
test
jne
xor
psubusw
sar
push
adc
pop
mov
sbb
fbstp
aam
adc
pop
and
xor
ds
(bad)
fcmovnu
add
xchg
adc
mov
cli
cmp
je
or
(bad)
repz
fst
xor
ds
adc
clc
test
pop
add
push
js
nop
out
loopne
js
push
xchg
mov
lahf
adc
je
pop
jmp
rol
pop
xor
call
out
pop
test
iret
push
pop
add
pop
imul
outs
mov
or
hlt
xor
lea
mov
mov
mov
mov
push
in
xor
push
push
or
cmps
mov
inc
in
lahf
pop
sub
or
add
popa
mov
aaa
ficom
adc
push
clc
aaa
push
fiadd
inc
mov
rcl
daa
arpl
xchg
and
ja
mov
fwait
ds
or
inc
inc
cmp
neg
push
jg
rcr
dec
sub
ja
or
out
xor
push
les
jg
cmp
ins
add
sbb
std
fist
or
sar
cmp
jne
fild
sub
lea
mov
outs
enter
ret
sub
jbe
add
les
add
or
pop
and
aad
xchg
inc
push
cld
loop
call
retf
mov
fmul
fcomp
je
les
pop
cli
sbb
das
fdiv
enter
jle
pause
dec
push
jg
dec
call
add
sar
push
rcl
or
sar
add
push
enter
ds
fdiv
jnp
in
or
das
ss
(bad)
neg
pop
nop
arpl
xor
fild
adc
adc
lock
jne
nop
pop
ins
bound
das
xchg
mov
ins
clc
sbb
fcomi
retf
lock
pushf
loop
sbb
test
mov
aaa
in
test
inc
cli
mov
imul
arpl
jb
or
or
jb
outs
or
rcl
cmp
ins
add
mov
push
inc
mov
call
pop
pop
or
in
test
sbb
push
add
adc
sbb
lahf
xor
or
sbb
shl
ss
out
mov
jne
or
or
inc
mov
or
out
fiadd
and
push
add
pushf
shr
and
xor
inc
int
int3
push
push
pop
pop
pop
jno
push
push
inc
stc
mov
int3
rcl
xor
and
inc
adc
mov
fdivr
add
or
xor
push
adc
pushf
push
mov
jbe
inc
mov
or
lds
cld
adc
mov
aad
add
hlt
inc
lock
(bad)
mov
pushf
mov
sbb
adc
bound
(bad)
outs
test
test
jle
mov
outs
adc
mov
push
and
mov
or
adc
push
cmp
cmp
sub
push
mov
push
sbb
inc
neg
fisttp
add
push
dec
mov
xchg
xlat
clc
push
ret
add
mov
outs
jb
push
lea
xchg
lea
dec
push
test
pusha
scas
pop
push
sub
ret
mov
cmp
push
push
xchg
mov
add
pop
(bad)
shl
lds
jmp
push
fdiv
ret
clc
je
fdivr
mov
sub
or
fucom
inc
add
mov
add
inc
cmp
lock
cdq
cmovge
xor
movzx
les
lock
dec
add
jle
jne
sti
sar
rcl
dec
mov
test
test
je
leave
(bad)
ss
les
pop
or
fisttp
xchg
loop
pop
or
dec
ja
adc
ja
or
leave
popa
sbb
xchg
jmp
fimul
mov
test
call
sub
push
cmc
cmp
or
pop
gs
add
jmp
mov
cmps
adc
inc
jl
ret
inc
or
add
ret
ret
add
lock
stc
push
cmp
(bad)
aam
cld
(bad)
jecxz
jmp
nop
mov
addr16
sub
adc
in
pushf
or
aam
ret
iret
pop
or
and
fdiv
cmp
cmp
adc
push
nop
aad
lock
cmp
daa
mov
popa
pop
adc
pop
shr
imul
pop
je
pop
push
movs
push
mov
add
xchg
sub
cmc
imul
(bad)
pop
add
xchg
push
call
es
je
fiadd
jmp
cmp
jne
jbe
test
and
or
ins
dec
cld
cmp
jne
ret
cmc
out
nop
sbb
shl
jmp
or
push
inc
cdq
push
enter
push
inc
ror
(bad)
mov
add
in
and
add
pusha
sbb
and
add
or
fidiv
xchg
ret
call
pop
lods
or
popa
push
(bad)
push
sbb
aaa
popa
and
xchg
les
mov
xchg
mov
int3
outs
xchg
aad
push
fimul
arpl
pop
loopne
ds
jno
mov
xor
in
pop
in
or
dec
inc
mov
cmp
adc
mov
xchg
mov
inc
(bad)
push
or
pop
loope
fsub
add
sbb
sbb
cli
in
push
call
lock
pushf
inc
adc
push
ins
mov
loopne
scas
cmp
push
push
pop
and
pop
push
push
adc
pop
xchg
and
leave
je
inc
or
test
cmp
je
or
jne
movsx
inc
inc
int3
pushf
mov
rol
xchg
inc
pop
fs
jecxz
nop
fldcw
je
pop
mov
push
aas
loop
or
loop
cld
cmp
(bad)
jecxz
or
je
fdivrp
mov
add
xchg
adc
jge
cs
je
call
adc
adc
inc
rcr
push
xchg
out
push
and
dec
add
into
cli
out
push
je
dec
cli
xor
sub
test
nop
and
stos
xor
sbb
dec
or
xor
sbb
jne
push
cs
push
jns
dec
or
add
sbb
fiadd
call
sub
push
push
sbb
or
inc
push
rcr
mov
pop
add
inc
add
push
sub
test
ret
add
pusha
inc
pop
mov
(bad)
mov
cmovno
xor
in
loope
inc
adc
pop
test
adc
retf
xchg
sbb
or
sub
add
lds
mov
repnz
call
push
int3
cmp
test
add
dec
mov
cmp
jne
inc
inc
xor
je
mov
(bad)
fistp
push
add
dec
jne
faddp
pop
cmp
or
adc
inc
jmp
or
daa
mov
inc
push
in
adc
adc
jno
adc
lods
inc
or
inc
mov
nop
outs
pop
adc
icebp
push
sub
js
out
cmp
arpl
jecxz
push
je
mov
jo
pushf
and
dec
or
xor
mov
jo
add
imul
aad
mov
fsub
jmp
dec
pop
cmp
pop
in
push
dec
test
imul
push
out
cmp
mov
stos
add
lds
retf
je
cdq
adc
inc
mov
das
je
jg
adc
or
fnstcw
out
and
jmp
cli
imul
jg
lock
inc
jnp
mov
call
mov
stos
inc
sub
xor
mov
push
or
pop
lea
pop
jmp
xchg
clc
mov
adc
push
push
push
adc
loopne
jne
sub
pop
inc
push
call
jo
jo
add
or
jg
int3
outs
add
xor
pusha
cmps
test
test
and
nop
mov
cs
and
mov
push
and
mov
or
pusha
add
pop
or
inc
or
xchg
mov
adc
sbb
add
push
lods
hlt
ret
xor
sbb
test
aas
scas
xor
stos
ret
loope
call
cmp
adc
je
cmp
push
sub
fbld
xchg
jmp
add
call
fst
std
je
jmp
cmp
sub
adc
call
jge
jmp
sub
cmp
mov
jmp
mov
jmp
mov
jmp
sbb
iret
jmp
push
sbb
into
or
fsubr
push
mov
jmp
mov
sub
dec
mov
test
sub
or
nop
mov
ds
mov
add
mov
jno
xlat
mov
cmp
mov
push
ins
inc
sbb
mov
shl
bound
pop
jno
push
inc
call
sbb
outs
or
nop
daa
mov
ret
mov
and
or
pop
sbb
int3
inc
lock
sbb
adc
retf
sbb
inc
mov
add
xor
cs
imul
out
or
cmp
cmp
jne
sbb
pmaxsw
and
sbb
jle
add
mov
push
iret
aaa
je
add
pop
mov
inc
ins
pop
inc
(bad)
xor
pop
jmp
adc
aam
mov
jmp
mov
shr
add
and
rcl
cmp
jle
jl
fadd
xlat
dec
mov
mov
jg
xlat
sbb
mov
test
mov
lock
(bad)
mov
loopne
adc
cmp
mov
inc
pop
arpl
fs
enter
cmp
test
xor
mov
and
jae
jne
inc
enter
cmps
mov
popf
xchg
(bad)
xor
loopne
hlt
in
xor
push
sub
sbb
add
inc
(bad)
pop
push
dec
cld
pop
dec
je
add
out
fisub
int3
leave
lock
gs
jmp
or
out
bound
cli
dec
jne
pop
pop
mov
or
sahf
mov
lds
stos
mov
pop
(bad)
pop
and
cmp
mov
jg
pop
mov
clc
and
(bad)
dec
mov
add
cmp
in
ficom
out
pop
sbb
ror
pop
loopne
cmc
sbb
pop
fiadd
mov
mov
jge
mov
ja
add
mov
mov
cmp
add
rol
nop
push
dec
pop
dec
loope
adc
inc
jbe
mov
cmp
mov
les
pop
or
and
in
pop
clc
mov
add
in
inc
dec
in
aad
pop
ret
retf
jne
jp
and
mov
fwait
lar
addr16
popa
imul
ds
enter
sbb
aaa
jmp
test
mov
dec
inc
lods
adc
cmp
mov
jnp
pop
call
add
jne
xor
jne
cmp
lock
mov
icebp
adc
or
and
mov
push
outs
xor
adc
test
inc
(bad)
mov
mov
cmp
or
push
jl
cmp
mov
add
push
and
js
sbb
je
inc
mov
jne
mov
mov
(bad)
loopne
mov
push
sar
lock
imul
pop
mov
lahf
inc
addr16
push
inc
add
adc
(bad)
and
pop
cmps
(bad)
aad
sub
add
jp
adc
movs
shl
adc
rcr
sub
(bad)
fldenv
push
xor
push
je
mov
push
ror
cli
ja
pushf
sbb
test
pop
call
xor
xor
add
scas
adc
iret
push
mov
jmp
jge
les
or
dec
pusha
push
rcl
or
inc
jmp
mov
inc
jmp
adc
dec
cmp
(bad)
or
mov
addr16
dec
mov
ja
cmp
or
int
mov
push
add
jo
mov
jo
jmp
pop
mov
clc
ja
cld
data16
sub
shl
inc
mul
adc
jge
push
hlt
cdq
dec
aam
sar
ja
xor
scas
mul
(bad)
push
push
cmp
xchg
pop
fstp
mov
or
cmps
cs
stos
(bad)
(bad)
xchg
mov
jg
ret
inc
out
retf
mov
pop
cwde
pop
rcr
sbb
dec
clc
dec
jl
lock
adc
hlt
out
inc
add
mov
push
sub
mov
(bad)
mov
cmp
mov
cmp
or
push
dec
ret
cli
fsubrp
loopne
mov
inc
call
xchg
daa
push
clc
inc
jle
mov
inc
push
pop
ja
cmp
mov
jmp
ror
sub
xlat
cmp
dec
ret
ret
cli
sbb
xor
cmp
sub
loope
fidiv
in
loope
dec
cmps
mov
fs
pusha
dec
popf
xchg
lea
jnp
ins
fsubr
adc
call
pushf
mov
mov
fmul
add
stos
aaa
adc
sbb
mov
das
push
cmp
or
mov
or
and
lock
push
cmp
outs
lods
movzx
mov
rcl
rcl
cld
ins
and
data16
std
rcl
jg
dec
jmp
lea
cmp
push
jo
loop
ins
test
out
ins
dec
cld
mov
xor
addr16
lea
sbb
aas
adc
lea
sbb
js
jne
dec
cld
popa
pop
call
jge
inc
pop
ret
loopne
mov
mov
cmp
mov
test
inc
pusha
mov
adc
or
aas
aam
adc
push
push
ins
jmp
fadd
xor
jecxz
scas
stc
adc
push
aam
add
or
xor
(bad)
push
cmp
xor
jle
dec
gs
data16
dec
pop
inc
add
mov
cli
sbb
pop
scas
dec
clc
icebp
rcl
inc
mov
add
jmp
mov
pop
push
dec
cld
lods
pop
pop
jmp
adc
jmp
fstp
mov
(bad)
jle
cmp
je
call
stos
test
push
jp
out
cwde
mov
push
movd
inc
sub
pop
mov
pop
mov
dec
or
inc
into
enter
adc
imul
sbb
jmp
inc
cmp
jne
mov
stos
mov
ret
daa
or
cmp
sub
cmp
push
mov
mov
add
int3
ins
sbb
inc
ret
or
mov
cmp
mov
cmc
pop
cmps
outs
adc
adc
fisttp
adc
pop
ror
or
ja
add
push
mov
mov
fnstenv
dec
ds
out
pop
add
aaa
(bad)
(bad)
add
loop
push
outs
(bad)
fild
loop
je
mov
cmp
jne
push
adc
dec
sti
cmp
jne
adc
add
jne
add
jmp
pop
cmp
int3
sti
mov
jne
shr
shr
sbb
mov
push
mov
shr
or
loopne
addr16
add
and
ins
rol
pop
and
cmps
xor
out
pop
int
dec
mov
loopne
xor
call
xchg
inc
push
movzx
inc
xchg
arpl
pop
cmc
mov
retf
jbe
cmps
mov
inc
inc
sbb
xor
xchg
inc
(bad)
cmp
jl
icebp
or
je
xchg
sbb
ret
inc
inc
test
ss
(bad)
jl
cmp
jg
add
mov
inc
rep
jmp
pop
jmp
and
lods
adc
mov
call
int3
mov
xor
mov
test
push
in
rol
je
dec
je
or
lods
or
pop
inc
add
mov
cmp
sub
and
pusha
(bad)
out
sahf
fist
or
push
push
outs
or
in
add
jnp
jle
movs
mov
inc
mov
pop
push
push
push
shl
scas
push
lock
push
pop
pop
pop
cmp
test
aad
sbb
mov
mov
inc
(bad)
bound
inc
in
mov
cmp
ss
sub
xor
jne
dec
cld
call
push
lea
lea
neg
mov
push
gs
pop
mov
cmp
je
bound
push
or
sti
push
cld
ret
cmp
dec
dec
ins
fwait
pop
cmp
pop
add
aaa
add
rcl
imul
hlt
ret
mov
jg
test
ret
add
mov
push
jmp
dec
cmp
jge
rcl
sbb
(bad)
repz
cmp
and
mov
xor
or
neg
push
cmps
xchg
cmp
pusha
mov
into
shl
inc
dec
inc
add
push
push
mov
int
call
xlat
cmp
adc
out
dec
or
movs
push
not
xor
rol
push
(bad)
mov
add
mov
inc
test
inc
jmp
jge
mov
test
icebp
movs
jne
loope
icebp
add
and
and
shr
push
rol
(bad)
(bad)
inc
mov
rep
out
adc
dec
pushf
nop
and
jg
in
add
sbb
adc
push
sub
jp
hlt
pop
dec
inc
jle
push
mov
jle
pop
push
outs
cmps
mov
clc
pop
jmp
push
sti
rcl
adc
pusha
pusha
and
out
rol
push
inc
xor
xor
mov
pop
add
pop
mov
fs
jmp
push
adc
adc
jb
dec
or
push
sub
cld
leave
and
xor
ss
scas
pop
add
inc
and
sbb
or
pop
das
or
pop
add
scas
and
leave
je
hlt
sar
jmp
dec
lods
call
add
mov
xchg
fistp
inc
adc
and
cmps
mov
lds
xor
xchg
idiv
or
outs
mov
repz
mov
(bad)
sub
sub
ret
ins
aad
loope
outs
push
in
jmp
(bad)
jge
les
call
push
lds
pop
sub
pop
push
jo
popa
xlat
sar
dec
inc
pusha
pop
out
clc
sub
fbstp
(bad)
xor
pop
mov
pop
lock
pop
inc
inc
mov
lock
dec
jne
(bad)
push
out
mov
stos
cmc
push
dec
in
shr
cld
test
add
lock
add
pushf
ret
cs
fisttp
loopne
xchg
xchg
cmp
mov
jbe
push
ror
xchg
lds
out
pop
cmp
push
iret
lock
imul
sbb
das
dec
imul
mov
mov
das
scas
xor
sbb
mov
jne
inc
add
prefetcht2
adc
(bad)
out
out
xor
mov
test
or
pop
dec
and
adc
or
sldt
or
inc
leave
lock
add
jg
add
sar
aaa
add
jo
inc
push
jo
push
shl
enter
div
xor
push
sbb
adc
call
aas
push
pop
je
sbb
mov
push
cld
add
in
fiadd
fsubr
cmp
je
gs
outs
xor
sahf
fucomi
adc
out
popf
mov
cdq
jno
scas
pop
cmps
outs
stos
pop
lea
lds
adc
or
out
or
pop
dec
jns
xlat
ror
or
jl
stos
test
ins
outs
daa
push
dec
mov
jmp
mov
fsub
lods
or
lock
inc
cli
add
dec
iret
in
push
retf
or
mov
push
xor
dec
cmp
enter
sbb
push
adc
cmp
into
mov
mov
dec
jmp
xor
jnp
add
inc
or
dec
in
fwait
loopne
ret
ja
iret
jl
add
cld
aad
mov
dec
test
hlt
(bad)
test
dec
pushf
sbb
repnz
mov
addr16
add
dec
adc
add
add
mov
imul
xchg
jmp
popa
nop
add
sub
and
leave
loop
dec
popf
push
mov
cmp
jne
rol
xchg
mov
sahf
(bad)
cmp
out
adc
out
pop
cwde
(bad)
and
jecxz
ret
dec
stc
mov
mov
or
loopne
into
ss
jl
pop
cs
cmps
sub
mov
shr
in
test
fdivr
lea
xor
adc
sbb
add
iret
in
xor
mov
cmps
shl
mov
adc
cdq
cmp
in
mov
paddd
sar
pop
dec
cmp
mov
cmp
or
push
sbb
xor
jae
add
mov
jne
or
ss
jle
inc
xor
cmp
sub
idiv
sub
stos
data16
adc
mov
sub
adc
in
or
xlat
and
adc
aam
out
sar
push
push
push
inc
dec
js
mov
inc
(bad)
add
jle
jo
mov
inc
shl
cmps
pop
dec
rol
jmp
pop
jmp
pop
mov
sub
outs
pop
add
adc
(bad)
mov
sbb
xchg
data16
(bad)
add
pop
mov
iret
adc
bound
or
or
xchg
shr
mov
call
or
dec
or
shr
lahf
cs
pop
or
ret
push
(bad)
xor
push
sub
mov
or
pop
clc
add
mov
inc
sub
or
push
(bad)
pop
cmp
add
mov
pusha
adc
movs
clc
push
dec
loope
jbe
cmp
jne
in
pop
jle
je
aas
(bad)
mov
or
jo
adc
add
out
jge
sub
call
or
push
add
ins
sub
adc
aam
in
mov
(bad)
cld
nop
mov
aas
push
bound
mov
sbb
ret
daa
sbb
sub
(bad)
retf
push
inc
hlt
mov
retf
loopne
xor
push
jecxz
popa
or
hlt
push
cmps
push
in
mov
pop
mov
mov
mov
sbb
in
add
adc
mov
loopne
mov
push
scas
cli
add
adc
sbb
popa
add
movs
fmul
stos
addr16
movs
dec
jg
dec
shr
add
pop
jmp
add
cmp
sar
je
cmp
je
adc
ret
(bad)
cmp
je
cmp
je
cmp
mov
mov
sahf
xchg
xor
mov
inc
adc
hlt
fwait
dec
inc
or
and
jmp
push
mov
inc
jo
(bad)
or
and
adc
into
out
in
pop
cmp
pop
jmp
cmp
mov
sub
ja
add
pop
adc
nop
scas
add
sbb
push
cmp
ja
call
push
lock
cmp
add
add
out
inc
jb
js
jns
pop
jecxz
push
fimul
call
aas
xchg
add
rcr
jg
push
and
retf
and
nop
imul
sahf
std
(bad)
pop
movs
ja
test
outs
es
mov
sub
pop
repnz
nop
sar
lock
jo
jmp
test
add
addr16
and
mov
adc
mov
xlat
sub
ret
jnp
add
add
(bad)
(bad)
inc
mov
rcr
retf
repz
inc
mov
mov
add
cmp
outs
cmp
xchg
adc
push
xchg
enter
sbb
mov
jne
or
sbb
push
xor
sbb
ror
push
outs
pop
mov
cmp
dec
clc
inc
test
ds
add
sar
add
add
cdq
inc
add
loope
add
or
sbb
push
inc
or
bound
or
push
movs
inc
xor
cmps
adc
xchg
adc
cmp
pop
pop
sub
in
adc
jae
mov
daa
sub
jge
pushf
ins
lea
or
in
mov
push
pop
dec
fmul
inc
sbb
jnp
add
jmp
aas
add
inc
push
imul
test
and
pusha
ss
ds
in
mov
jne
or
add
pop
(bad)
shl
sbb
jg
ins
and
mov
and
movs
dec
pop
ins
jl
xchg
inc
stos
mov
sub
push
and
nop
out
and
jne
sub
rcr
jmp
dec
push
sub
icebp
cmp
dec
outs
test
das
mov
or
push
xchg
in
pop
cmp
pop
add
inc
call
stc
xor
jnp
(bad)
adc
add
cmp
add
in
sub
fsub
iret
mov
mov
and
in
(bad)
ret
add
out
push
aas
bound
adc
or
or
cmp
push
xchg
daa
jne
or
sub
add
mov
stos
adc
mov
xchg
xchg
push
xchg
mov
inc
retf
mov
push
into
adc
test
mov
push
lock
and
sar
mov
mov
pop
pop
or
cwde
adc
in
outs
pop
dec
nop
adc
sar
mov
lock
sub
sbb
sar
(bad)
xor
xor
sub
sbb
jne
mov
or
cmp
retf
outs
adc
or
aad
shr
rcr
ror
fisttp
mov
loopne
fcomp
rcl
and
push
mov
imul
in
mov
cli
sub
sbb
cwde
ret
mov
cwde
xchg
loope
fwait
inc
test
and
sub
dec
enter
leave
mov
je
mov
mov
xor
dec
loopne
rcl
add
sub
(bad)
rcl
cmp
jb
hlt
cmp
jb
sub
sbb
inc
loop
data16
icebp
jp
mov
repz
icebp
in
mov
pop
pop
push
jns
neg
neg
jg
rol
ficomp
add
jns
neg
neg
sbb
int
add
mov
iret
repz
in
je
(bad)
not
ja
(bad)
in
pop
mov
adc
(bad)
out
mov
jp
pop
add
cmps
mov
inc
adc
cmp
je
(bad)
outs
in
jnp
push
popw
add
pop
sbb
push
mov
aaa
and
add
add
sbb
enter
sbb
sbb
loop
call
cli
pop
sete
test
push
jne
inc
pop
xor
aas
cmp
setg
mov
inc
and
adc
push
or
mov
and
push
mov
and
inc
dec
or
fimul
shl
jb
adc
push
jb
jg
jge
out
jmp
inc
stc
sub
jmp
getsec
jmp
fadd
xor
jne
or
rcr
sbb
mov
inc
and
iret
sub
jbe
jmp
jg
mov
cdq
xchg
cdq
ds
shld
aam
adc
(bad)
adc
or
xor
jp
lock
icebp
les
or
ficom
pop
loopne
pop
cmp
addr16
sbb
pop
add
out
add
sub
jg
stos
adc
ret
cs
add
rol
fld
je
pop
jmp
add
setb
jmp
setl
cmp
or
cld
shl
das
data16
pop
jmp
push
adc
mov
pop
mov
push
ror
jg
rcl
loopne
mov
aad
mov
jle
test
jg
adc
inc
cmp
mov
nop
add
scas
add
and
dec
sbb
xchg
enter
(bad)
fadd
mul
push
add
lods
add
jg
aaa
jl
neg
imul
inc
in
in
idiv
cmp
fisttp
and
in
int
lea
jmp
push
mov
loopne
std
loopne
jge
jge
push
rcr
in
aam
xlat
pusha
scas
add
mov
sub
adc
test
lea
cmp
or
in
ins
aad
push
inc
in
xchg
jge
mov
mov
push
sub
mov
or
out
repz
int
into
stos
add
and
ret
add
pop
sub
(bad)
imul
cmp
xlat
sub
test
test
loop
ret
mov
sbb
mov
mov
dec
mov
adc
inc
mov
mov
retf
mov
out
push
or
sub
dec
nop
push
add
call
outs
icebp
fsub
pop
add
push
leave
mov
mov
pop
(bad)
mov
mov
out
iret
pop
or
pop
mov
mov
lds
and
call
es
(bad)
cli
adc
xchg
jle
sub
cmp
jle
fisubr
pop
mov
imul
dec
adc
clc
inc
(bad)
pop
push
xchg
loope
popa
cmp
hlt
xchg
mov
push
pop
jo
in
adc
xor
hlt
add
mov
pop
mov
xchg
(bad)
popa
adc
xchg
cwde
cld
cmp
mov
cmp
and
dec
sbb
xchg
adc
xor
das
test
add
xor
add
dec
jne
dec
sbb
adc
mov
cld
adc
inc
pop
sub
dec
and
imul
rol
adc
dec
jl
fmul
inc
push
mov
stos
pop
pop
jbe
add
dec
inc
clc
or
jge
jmp
jb
pop
js
out
mov
cmps
add
push
lods
shl
mul
jg
loope
rcr
lds
retf
jle
pop
or
dec
rsm
dec
add
cmp
adc
cli
xor
inc
leave
into
sar
aam
adc
cmp
je
jmp
and
push
in
mov
out
retf
sub
cld
(bad)
(bad)
mov
jg
mov
add
call
test
fcmovnbe
rol
cmp
push
pusha
mov
and
jmp
inc
dec
scas
sbb
add
rol
(bad)
jne
xchg
mov
push
push
mov
push
fdiv
outs
sbb
mov
shr
ror
jl
inc
sub
push
ds
std
dec
bound
mov
shr
sub
sbb
inc
sbb
push
xchg
xor
dec
cmp
movs
xchg
(bad)
hlt
jnp
fidivr
shr
push
jge
loop
(bad)
mov
adc
push
mov
retf
add
add
ror
cmp
sbb
cmp
or
mov
or
push
aam
jmp
jmp
jo
ret
add
sub
ss
mov
gs
inc
push
pop
je
popa
outs
ins
pop
outs
bound
std
mov
mov
sub
push
outs
cmp
sub
sub
push
ins
or
in
out
jge
dec
sub
outs
push
push
xchg
sbb
fistp
mov
inc
inc
les
dec
inc
push
jno
arpl
sbb
jo
sub
outs
pop
jb
add
popa
sub
popa
sub
aaa
jae
lods
cmp
outs
outs
pop
outs
jae
pop
add
das
pop
fs
inc
xor
inc
sub
sub
push
aaa
aaa
aaa
nop
sbb
mov
jg
adc
sbb
ins
sub
jb
jnp
cmp
dec
inc
jae
cmps
neg
jl
jl
push
inc
dec
jae
push
test
or
xchg
bound
ror
inc
inc
pop
push
inc
jae
aaa
xchg
popa
aaa
div
push
inc
mov
in
bound
inc
dec
ss
movs
cmp
aaa
outs
outs
cmps
mov
push
dec
dec
inc
das
pop
push
adc
sbb
mov
lea
clc
push
setae
add
or
inc
fild
mov
push
pusha
xor
ss
into
sub
push
les
ss
push
adc
jne
push
add
push
ja
nop
ss
sub
adc
xlat
(bad)
repnz
push
call
sub
cld
cmp
out
add
sub
sub
jmp
test
and
jne
xor
dec
mov
ret
mov
leave
push
movs
pop
pusha
jge
push
push
popf
sub
mov
add
inc
adc
jmp
fs
dec
jne
bound
inc
nop
mov
jmp
jmp
stos
pop
mov
jne
add
mov
jo
dec
sbb
fstp
dec
dec
mov
xchg
call
stos
cmp
xor
lea
inc
xchg
cmps
xor
lock
es
jecxz
push
add
mov
mov
xchg
(bad)
movs
cwde
lea
fimul
cld
sar
loope
cmp
fld
adc
ja
mov
movs
cmc
cmp
cmp
fild
pop
clc
shr
ret
pop
shr
xor
push
jae
sti
dec
jmp
sbb
in
push
inc
mov
ret
sub
loope
outs
fst
jae
cmp
inc
dec
push
cmp
(bad)
outs
nop
push
mov
fisub
mov
pop
ficom
jge
push
fldenv
movs
(bad)
pop
and
lea
push
mov
push
xchg
or
inc
pushf
movs
(bad)
pushf
fadd
outs
shr
sub
mov
add
lds
pop
call
movs
mov
sub
or
inc
mov
stos
push
sbb
jne
sbb
push
jg
test
adc
cmps
aad
pop
dec
ins
push
jns
cmp
adc
sbb
int3
xor
cmp
sub
mov
lea
mov
je
loopne
sbb
mov
cdq
es
cs
popf
mov
mov
and
dec
bound
rol
jmp
dec
jge
mov
pushaw
in
dec
in
mov
out
imul
leave
adc
and
adc
jecxz
add
mov
ss
add
and
xor
loope
xchg
out
mov
add
shl
mov
and
push
lods
int
shr
hlt
push
or
inc
and
or
xor
sbb
adc
mov
mov
inc
inc
dec
repnz
dec
sbb
push
mov
sbb
dec
imul
xchg
inc
jmp
adc
and
cmps
jmp
ins
xor
mov
adc
push
das
mov
cmp
test
jecxz
movs
sub
rol
inc
or
jmp
iret
xchg
cli
or
cmp
xor
push
(bad)
lds
ret
jl
mov
sti
pop
rcr
push
in
leave
inc
push
or
das
xchg
push
sbb
test
dec
mov
cmc
loopne
inc
cdq
pop
inc
cmp
cmp
movs
pop
jg
js
pop
ins
cmp
sbb
(bad)
xchg
jl
cs
pop
fucomi
lock
inc
add
adc
push
mov
jmp
mov
sub
sar
jns
adc
sub
jbe
jae
in
cmp
sar
xchg
sub
sar
pop
rol
add
inc
cmp
mov
xor
push
add
ret
add
push
imul
sub
in
mov
sub
std
stc
mov
push
add
jg
mov
ja
xor
and
ret
dec
push
push
imul
(bad)
sbb
inc
rol
cmp
test
add
push
scas
push
outs
addr16
popa
je
fld
add
rcl
and
jne
ins
jne
retf
adc
out
popa
jmp
mov
sbb
inc
cmp
or
daa
bound
xchg
retf
lea
call
mov
pop
in
add
dec
call
xchg
je
cmp
lods
jg
or
push
ss
ja
cmp
pop
pop
ret
ret
pusha
xor
sar
shl
popa
and
add
pusha
cwde
xor
shl
mov
ja
add
mov
push
ins
movs
and
inc
or
or
fwait
mov
pop
push
jns
and
push
les
and
data16
jecxz
shl
imul
jge
arpl
fs
outs
cs
add
jg
mov
ins
jae
add
add
inc
add
aam
jnp
imul
jb
or
in
ds
outs
add
imul
imul
push
rol
add
cmp
jae
or
dec
sub
cdq
xchg
sbb
ret
cdq
add
cmp
lds
popf
or
sti
je
mov
test
cmp
inc
mov
aas
js
sub
xlat
stos
das
test
iret
sahf
and
(bad)
jnp
stos
and
pop
or
popf
hlt
setne
test
je
pop
leave
adc
jne
js
adc
arpl
pushf
call
(bad)
pop
mov
stc
(bad)
scas
sbb
(bad)
or
(bad)
xchg
or
push
xor
inc
or
push
push
js
aad
pop
(bad)
sub
call
sub
(bad)
add
movs
adc
lods
mov
(bad)
cmc
popf
or
mov
leave
xchg
push
mov
ret
jmp
mov
in
push
sbb
ror
sbb
push
aad
adc
call
in
pop
mov
sbb
mov
jo
xchg
dec
add
imul
xor
pop
in
dec
add
and
mov
xchg
scas
inc
xor
in
pop
xor
ror
(bad)
push
add
mov
xchg
jb
xor
fdivr
jo
mov
inc
and
jmp
jne
test
mov
mov
pushf
mov
pushf
shr
dec
and
mov
jne
in
push
xchg
pop
mov
into
aaa
in
mov
jne
popa
call
into
sahf
or
inc
xor
cmps
sub
dec
jnp
movs
sub
call
jmp
stos
mov
call
leave
inc
sbb
frstpm(287
repnz
scas
ror
in
or
scas
mov
lahf
push
addr16
aaa
(bad)
repz
dec
hlt
inc
pop
push
fs
ret
loopne
ret
addr16
std
lods
outs
mov
mov
pop
je
addr16
mov
adc
cmp
mov
sbb
or
pop
dec
jge
dec
ror
inc
xchg
inc
ffreep
mov
lock
xor
pop
jne
push
mov
dec
push
add
jecxz
dec
fstp
pop
jg
aad
adc
jmp
(bad)
mov
mov
pop
mov
mov
add
outs
jmp
dec
ror
cmps
adc
movs
fsub
movs
dec
jmp
mov
add
jno
shl
rol
jne
mov
mov
mov
cdq
dec
(bad)
dec
(bad)
sbb
clc
jmp
mov
mov
lock
dec
loopne
sbb
add
jbe
mov
pop
add
push
inc
xor
mov
sbb
(bad)
mov
mov
clc
add
cmp
push
push
mov
jp
pop
add
sbb
addr16
clc
fcomp
ret
sbb
add
into
ret
inc
dec
jmp
push
js
add
inc
add
xor
iret
cmps
pop
adc
mov
mov
mov
dec
sahf
dec
in
add
pop
cmps
mov
fld
les
js
inc
fild
or
cwde
jb
or
adc
inc
sbb
mov
pop
cmp
jmp
sbb
push
loopne
add
and
cmp
mov
rcl
into
arpl
lods
mov
repnz
into
lods
mov
shr
xor
(bad)
pop
push
pop
pop
add
adc
and
ja
pop
(bad)
jmp
xchg
cmps
es
jle
jg
pop
test
adc
mov
push
loop
cmp
fild
mov
(bad)
sub
sbb
sub
ret
jnp
ds
dec
dec
dec
cld
xchg
imul
push
push
jbe
inc
push
clc
and
jae
ss
cmp
jb
or
push
cmp
or
inc
(bad)
out
push
dec
test
sbb
push
and
clc
out
fdiv
adc
fbstp
dec
push
xor
or
pop
and
sbb
cmp
sub
sbb
push
scas
add
adc
dec
mov
pop
test
jo
dec
pop
pushf
cmp
ss
outs
add
jb
scas
pop
adc
das
jl
movs
add
adc
loopne
jns
or
loopne
jl
pop
outs
int3
lods
mov
add
inc
pusha
test
jno
pop
pcmpgtd
mov
push
scas
enter
or
and
inc
mov
mov
aaa
daa
pop
ret
or
jmp
jge
fst
out
pushf
std
or
test
jb
enter
stc
je
lea
or
push
out
nop
xor
out
jmp
nop
nop
nop
push
xchg
mov
setb
dec
js
mov
and
xchg
and
sub
adc
sub
imul
inc
mov
das
shl
add
dec
add
mov
push
(bad)
and
sbb
aaa
and
cmps
mov
add
and
dec
or
or
test
add
cmp
arpl
inc
mov
jo
add
mov
test
xchg
add
mov
pop
ret
sub
or
add
add
sbb
das
pop
or
adc
sbb
add
mov
dec
sti
push
add
aas
sbb
pop
xchg
(bad)
fcom
loope
stos
jo
add
ja
adc
sti
mov
and
or
(bad)
adc
mov
or
and
mov
or
dec
add
dec
dec
sbb
mov
inc
or
inc
or
add
jns
add
mov
add
mov
into
mov
xchg
fcomp
or
jbe
jnp
mov
mov
push
fcom
mov
sub
ret
stos
pop
lock
dec
jmp
xchg
retf
iret
(bad)
cld
sub
jb
clc
hlt
lock
sub
mov
call
mov
inc
sti
dec
in
push
adc
addr16
and
das
ss
dec
push
arpl
dec
mov
mov
push
out
rcr
or
mov
jle
stos
xor
mov
and
cwde
es
jns
push
in
ins
js
cmp
mov
mov
pusha
js
ret
ror
pop
mov
push
arpl
stos
adc
inc
sub
dec
or
dec
lea
mov
mov
xchg
lock
test
or
lea
ficom
pusha
dec
ja
test
dec
inc
and
push
pop
rcl
in
mov
pop
sbb
adc
mov
shl
and
fmul
pop
fidivr
adc
loopne
sbb
mov
sub
enter
ds
sahf
enter
icebp
push
rcl
add
mov
sar
rcr
fnstenv
movs
inc
push
gs
xor
or
push
add
mov
ins
rcr
inc
scas
and
aam
sub
push
add
sbb
rol
clc
std
cmp
out
add
test
outs
and
pop
aas
mov
cs
pop
inc
pop
add
clc
sbb
or
mov
jo
retf
test
das
and
dec
mov
adc
sbb
je
add
xchg
fisttp
dec
push
add
mov
or
xchg
mov
adc
pop
add
adc
push
sub
in
in
or
push
fstp
pusha
add
(bad)
fst
jns
clc
mov
sti
push
inc
xor
push
outs
adc
and
in
nop
fcmovb
lock
test
xlat
lods
add
adc
or
fisubr
jge
test
add
pop
shl
cmp
sbb
mov
das
lock
ret
cmp
sub
jne
fs
xor
ret
cmp
movs
pusha
add
cmp
cmp
ins
jne
sbb
push
int
popf
mov
std
add
and
lods
std
in
or
std
jg
shl
and
inc
cmp
sbb
jg
dec
loope
add
sbb
outs
xchg
mov
inc
jo
push
cmc
push
jo
mov
sbb
sub
adc
sub
jecxz
(bad)
push
mov
push
push
add
mov
add
add
ss
retf
(bad)
mov
mov
cmp
mov
imul
or
cmp
dec
sbb
inc
xchg
mov
ret
push
in
loopne
pop
xchg
mul
outs
in
sbb
push
jae
mov
retf
mov
push
sti
dec
stos
and
mov
mov
sub
and
or
jno
shl
add
add
pop
add
jge
lods
dec
nop
loopne
or
mov
push
push
pop
lock
cmc
xchg
mov
push
cmp
jne
sbb
push
or
jne
or
push
bound
push
cwde
push
ret
mov
xor
sbb
or
cmp
push
push
xchg
or
sub
push
and
ja
add
rol
xor
jnp
cld
xchg
push
sub
mov
inc
cs
sub
dec
sub
xlat
jmp
sbb
inc
inc
dec
je
mov
cmp
stos
and
movzx
add
pop
aaa
sub
push
jmp
push
inc
popa
sbb
pop
jg
fisubr
add
mov
add
mov
test
icebp
mov
das
xchg
add
mov
inc
stos
add
retf
cmp
clc
or
or
inc
push
mov
xor
xchg
dec
les
add
inc
mov
mov
fmul
or
cmp
imul
xchg
add
je
inc
cmp
xchg
pop
add
adc
xchg
and
push
cmp
adc
inc
mov
add
sub
popa
rcpps
push
scas
pop
mov
arpl
add
and
cmp
arpl
imul
inc
add
xor
dec
jae
out
pop
or
adc
cwde
mov
add
ret
enter
mov
add
and
repnz
add
add
in
ret
and
dec
push
adc
aad
stos
and
ret
in
ret
aad
push
or
gs
ret
movs
mov
lds
vxorpd
aad
push
mov
mov
(bad)
(bad)
push
push
and
daa
test
add
push
cmp
call
inc
ds
int
and
inc
sub
popf
fadd
and
adc
xchg
gs
les
and
popa
jg
in
movs
mov
into
mov
cmc
add
popa
push
cs
dec
sub
ror
fadd
loope
js
dec
or
arpl
retf
push
es
push
icebp
add
pop
or
jbe
(bad)
sub
inc
fldenv
xchg
push
lea
mov
pop
xchg
fadd
inc
cmp
sub
jle
loopne
test
fmul
es
je
gs
jo
ret
add
mov
fbld
cmp
jae
aam
lods
dec
fadd
or
add
jno
into
or
inc
outs
je
or
loope
nop
shr
ins
fucomp
in
jne
aam
adc
xchg
in
add
jo
outs
daa
fwait
or
push
adc
cdq
sbb
(bad)
fld
xchg
jecxz
and
push
stc
add
add
fldln2
in
bound
dec
adc
add
sbb
lock
lock
dec
inc
js
fadd
add
add
mov
push
lds
inc
aas
add
mov
pop
mov
add
js
cmps
or
mov
add
pop
test
dec
add
js
rol
lds
or
cmc
mov
cmps
in
and
add
push
gs
jnp
push
in
popa
dec
jne
pusha
sub
xchg
pop
xor
cmp
sbb
jmp
test
push
and
cmc
pop
inc
or
arpl
inc
cmp
into
jae
sbb
jo
je
inc
mov
aas
push
inc
jae
jae
test
dec
pop
add
mov
dec
mov
push
xor
adc
push
(bad)
adc
add
or
xchg
dec
mov
adc
sar
gs
add
jno
mov
and
dec
adc
add
adc
dec
push
push
adc
cmps
loopne
push
inc
sbb
adc
js
mov
xor
push
sub
jo
and
sti
push
imul
push
(bad)
push
fsub
arpl
cmps
or
inc
add
aaa
(bad)
pop
js
add
add
add
outs
or
add
xor
inc
hlt
or
ins
popa
jne
add
jmp
push
add
ret
adc
ficomp
pop
mov
adc
cdq
jmp
cmp
fidivr
cmp
mov
test
push
pop
addr16
pusha
sub
xchg
lock
movs
add
hlt
idiv
sub
jb
je
dec
je
push
and
sub
or
ins
je
push
xchg
adc
jmp
popf
add
sbb
sub
inc
and
rol
jmp
add
xor
pop
scas
hlt
mov
aaa
cmps
inc
push
pop
jmp
mov
cmp
or
cmp
push
and
pop
aaa
mov
ror
bound
push
inc
mov
add
dec
push
inc
or
fisttp
pop
or
(bad)
fisttp
pop
mov
add
sar
pop
aad
sbb
jnp
mov
jnp
jo
stos
inc
add
test
fimul
call
fsub
ins
imul
pop
sub
inc
xlat
fisub
push
push
int
dec
add
or
scas
adc
inc
cmp
and
push
add
add
loopne
push
jl
ja
push
sti
mov
(bad)
clc
shr
or
cmp
pop
mov
cmp
jl
cmp
jge
retf
jl
pop
push
pop
xor
jb
rcl
shl
inc
jl
repnz
mov
add
ins
popa
out
retf
mov
rcr
push
adc
or
dec
fs
mov
and
adc
inc
cmp
mov
mov
xchg
inc
data16
and
je
jle
jl
mul
add
sub
rol
add
push
cwde
push
adc
add
call
xor
mov
loop
and
dec
arpl
icebp
lods
jp
fistp
bound
dec
sbb
retf
outs
mov
sbb
imul
xor
fwait
push
dec
gs
jo
or
mov
add
test
mov
add
lods
mov
out
ss
mov
je
lock
leave
(bad)
aaa
hlt
xor
ja
fwait
sbb
jno
adc
fs
jmp
clc
push
mov
fisttp
or
js
outs
inc
popa
jae
fnstenv
out
test
push
retf
add
inc
push
dec
add
test
js
add
outs
outs
cmps
shr
shl
aas
xor
mov
in
arpl
mov
pushf
fmul
or
sbb
outs
aad
mov
adc
imul
or
daa
xchg
push
scas
daa
in
out
les
dec
or
jno
outs
xor
jle
jb
lss
adc
loopne
ror
outs
inc
outs
je
push
fs
imul
xchg
jb
xor
pop
dec
jmp
mov
xor
pop
icebp
cmp
nop
xor
data16
ins
fs
push
mov
or
je
arpl
adc
gs
xor
imul
je
cmp
ja
jge
scas
sbb
(bad)
jmp
mov
add
out
or
mov
out
adc
or
xchg
das
jl
xor
push
nop
sub
xchg
(bad)
dec
sar
sbb
or
jae
pop
mov
dec
ins
arpl
fs
xor
or
sar
or
lahf
dec
outs
jne
(bad)
scas
rcl
lahf
or
aaa
imul
or
or
xchg
fs
or
(bad)
in
das
jp
or
fcmovnbe
loopne
or
int3
ret
dec
adc
adc
xchg
fs
or
and
mov
sbb
out
popa
loop
(bad)
pop
aam
push
aam
outs
aad
dec
add
(bad)
push
js
mov
mov
jne
adc
sbb
ds
or
inc
pop
or
or
mov
inc
sub
sahf
arpl
es
movs
mov
fsubr
in
xor
xor
pop
xchg
sub
dec
jp
and
call
jbe
(bad)
aad
cld
mov
jne
jbe
sub
push
imul
jnp
or
aaa
ins
ja
pop
dec
fdiv
sbb
jnp
push
sub
cmp
or
push
daa
pop
pop
daa
fidivr
cwde
mov
das
aam
ret
push
addr16
push
arpl
ins
ins
inc
jnp
jb
pop
and
xor
jae
push
stc
sub
adc
outs
es
popa
addr16
cmp
adc
adc
cmc
pop
pop
adc
cmps
imul
lock
or
jl
int
jecxz
inc
aas
pop
(bad)
mov
add
mov
mov
lods
je
push
ins
jl
add
outs
jb
mov
ds
jo
sar
sar
xor
mov
fild
push
dec
dec
dec
inc
clc
xor
push
push
pop
dec
inc
push
inc
inc
pop
dec
dec
push
inc
or
iret
add
sbb
les
or
or
iretw
push
add
daa
adc
inc
dec
or
jbe
add
fs
mov
add
ins
xor
out
xor
push
or
dec
push
push
pop
inc
in
push
pop
rcr
cmps
mov
add
cmp
add
jmp
data16
mov
(bad)
dec
inc
jb
mov
rol
push
gs
fsubr
cwde
aas
sbb
jne
mov
adc
inc
push
out
cld
or
inc
adc
inc
inc
pop
inc
inc
inc
push
inc
and
jecxz
das
pop
add
push
add
push
inc
pop
xor
jno
lds
inc
enter
sbb
push
jne
rcl
ror
xor
or
and
xor
jo
jae
aaa
(bad)
add
adc
push
dec
ins
inc
jp
outs
cmp
xor
xor
inc
push
jo
jb
sbb
sbb
adc
adc
mov
xor
mov
shl
xchg
mov
add
es
(bad)
jne
hlt
les
or
or
fsub
cmp
xor
push
add
nop
(bad)
push
fld
dec
push
dec
inc
pusha
mov
das
add
dec
xor
lock
test
pop
dec
inc
inc
mov
dec
xor
inc
hlt
dec
inc
push
das
mov
imul
outs
push
push
push
dec
xchg
int3
das
add
inc
sub
(bad)
xor
push
out
repnz
enterw
das
adc
movs
sbb
call
sub
shl
add
push
shr
inc
aaa
add
xchg
(bad)
push
cmps
retf
das
je
jmp
dec
sub
jo
jo
sub
imul
jae
xor
or
adc
push
or
adc
pop
inc
or
les
or
mov
push
jecxz
dec
ret
push
ret
adc
mov
imul
pop
adc
enter
bound
mov
mov
or
lock
inc
dec
out
dec
sub
or
cmc
mov
(bad)
xor
xor
and
jmp
jle
pop
inc
dec
stos
adc
stos
xor
or
rol
dec
jo
mov
rol
dec
push
gs
sub
inc
enter
nop
les
mov
or
loopne
int3
fidiv
mov
dec
ins
clc
pop
lock
ja
fdivr
push
pop
sbb
pop
pop
jbe
mov
or
sub
mov
imul
xor
sahf
popa
jb
xlat
or
xchg
inc
das
fwait
ss
ja
jg
das
(bad)
pop
das
fwait
jbe
ror
inc
(bad)
cwde
das
fldenv
push
vpmacssdqh
add
fstp
xor
popa
pop
lods
pop
retf
inc
xchg
inc
push
push
cmp
or
adc
pop
mov
dec
sbb
aad
je
sub
mov
adc
imul
pop
inc
arpl
push
nop
jbe
aaa
adc
in
or
ja
std
outs
xlat
cmp
xor
xchg
xor
neg
call
inc
inc
add
push
cwde
loopne
stos
sub
arpl
fild
xor
push
arpl
mov
outs
jb
aas
sub
cwde
add
sbb
shl
ins
mov
pop
and
ins
and
inc
sbb
les
clc
jbe
int3
jg
push
ins
cli
daa
call
lahf
xor
cmp
xchg
sub
mov
pop
or
push
mov
inc
inc
int
mov
adc
jno
jb
bound
and
add
and
xor
out
pusha
test
es
gs
or
sbb
mov
out
dec
(bad)
adc
in
mov
xor
hlt
inc
push
sub
or
inc
movs
rcr
fistp
imul
sub
fsub
je
popa
ret
mov
add
or
sbb
add
popa
add
or
cvttps2pi
lods
mov
mov
xchg
xor
dec
pop
and
xor
push
jae
sbb
sub
outs
jb
popa
and
jo
test
mov
push
inc
inc
dec
inc
cli
xor
sbb
ficom
pop
loope
in
adc
enter
xor
mov
push
in
fidiv
in
loope
pop
dec
adc
push
dec
sbb
push
pop
pusha
xor
(bad)
invd
rcr
add
cmps
add
sbb
push
pop
ins
adc
outs
sbb
std
push
test
dec
push
jmp
and
outs
clc
lods
fadd
repz
jl
jg
adc
call
and
outs
fs
mov
xor
stos
or
pushf
or
adc
es
fistp
pusha
js
or
push
mov
shl
outs
arpl
jge
dec
outs
lods
or
dec
outs
ret
mov
arpl
loopne
push
or
xor
ja
imul
push
(bad)
push
outs
inc
outs
js
jmp
jo
cs
data16
pop
push
pop
sbb
loopne
add
mov
out
inc
pop
or
scas
mov
inc
push
push
push
push
in
call
inc
dec
inc
jno
ja
inc
inc
je
sbb
out
ja
popa
test
pop
adc
outs
arpl
pop
jo
inc
inc
inc
div
xor
xor
inc
inc
xor
xor
inc
inc
inc
inc
xor
xor
cmp
mov
xor
and
push
and
mov
aas
adc
adc
cmp
cmp
add
mov
cld
xor
xor
mov
(bad)
jb
jb
(bad)
aam
jb
jb
int3
enter
jb
sar
mov
test
jb
jb
mov
jb
jb
mov
jb
jl
je
daa
daa
daa
jo
push
ja
or
xor
xor
adc
ins
add
cmp
in
loopne
push
inc
and
or
sbb
dec
loope
adc
adc
nop
push
sbb
js
xor
dec
mov
xlat
sbb
sbb
daa
mov
andps
dec
cmp
mov
jbe
nop
outs
das
lods
lods
iret
inc
jg
pushf
pop
in
cmp
cmp
pushf
pushf
pushf
pushf
sub
and
pushf
pushf
pushf
pushf
sbb
adc
pushf
pushf
pushf
pushf
or
add
xchg
xchg
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xchg
xor
jo
dec
js
cs
in
cmp
pcmpgtb
in
in
pop
push
push
in
in
dec
dec
inc
inc
in
in
cmp
xor
in
in
sub
and
in
in
sbb
adc
in
in
or
add
jb
pop
lock
das
out
pmuludq
jb
jb
in
call
jb
(bad)
aam
jb
jb
int3
enter
jb
jb
mov
jb
lods
test
mov
pushf
cwde
xchg
nop
jbe
and
scas
mov
mov
in
in
test
in
je
ins
push
fs
pop
pop
in
in
push
push
dec
dec
in
in
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
adc
test
add
aas
add
ret
xor
punpckhbw
fucomi
bound
aas
fmul
aam
mov
enter
cmp
sar
mov
test
cmp
cmp
mov
xchg
mov
cs
in
bound
js
jb
xlat
je
(bad)
push
fs
pop
pop
daa
daa
daa
daa
push
push
dec
dec
daa
daa
daa
daa
inc
inc
cmp
daa
daa
daa
daa
xor
sub
daa
daa
daa
daa
and
sbb
daa
daa
daa
daa
adc
or
jmp
adc
add
paddb
das
pmuludq
in
in
in
call
in
in
aam
int3
in
in
enter
in
in
mov
in
in
movs
mov
in
xchg
nop
mov
in
in
test
call
loop
nop
xchg
fucomi
out
je
jo
ins
push
fs
pop
pop
xchg
or
cmp
xchg
xchg
xchg
xchg
inc
dec
inc
cmp
xchg
xchg
xchg
cmp
sub
xchg
xchg
xchg
sub
sbb
xchg
xchg
xchg
sbb
or
xchg
xchg
xchg
or
cld
sub
jb
jb
sub
sub
cmp
pavgb
cmp
cmp
fcom
ror
cmp
cmp
enter
mov
fisub
test
shrd
shld
cwde
xchg
nop
xchg
xchg
xchg
xchg
mov
xchg
xchg
jl
je
xchg
xchg
xchg
xchg
ins
push
xchg
xchg
pop
pop
push
push
cs
xchg
xchg
dec
dec
inc
inc
dec
dec
dec
dec
cmp
xor
pop
dec
dec
dec
sub
and
and
sbb
xor
xchg
fnstsw
rol
das
call
(bad)
jg
adc
push
mov
xchg
mov
jnp
cmp
repz
adc
sbb
and
xchg
and
cmp
pop
ret
sub
mov
call
jno
in
add
push
in
ret
mov
cmp
mov
push
and
sbb
std
push
in
lock
fbstp
add
pop
inc
push
sbb
arpl
inc
pop
or
dec
cmp
xchg
(bad)
scas
mov
aad
mov
outs
add
addr16
shl
and
push
mov
add
mov
out
inc
outs
add
jae
pop
pop
inc
pop
in
jnp
push
cs
push
dec
das
inc
aas
jle
mov
dec
add
push
push
add
dec
push
push
add
(bad)
rol
push
push
or
pop
push
in
mov
dec
add
push
push
ds
shl
in
sub
mov
mov
push
in
pushf
cwde
cwde
add
pop
mov
jo
pop
aad
sbb
add
cmps
dec
add
fldenv
mov
push
ins
neg
mov
xor
jl
mov
das
loope
cmp
ret
test
test
jo
or
mul
lock
psllw
pushf
pushf
pushf
pushf
repz
cmc
neg
stc
cli
pushf
pushf
pushf
pushf
sti
cld
std
(bad)
pushf
pushf
pushf
pushf
jmp
loope
pushf
pushf
pushf
pushf
jecxz
in
pushf
pushf
pushf
pushf
out
jmp
pushf
jmp
in
out
pushf
pushf
pushf
pushf
out
rcl
rcr
aad
pushf
pushf
pushf
pushf
xlat
fcomp
ficomp
fstp
pushf
pushf
pushf
pushf
ffreep
rol
pushf
pushf
pushf
ret
(bad)
(bad)
pushf
pushf
pushf
(bad)
enter
pushf
pushf
pushf
retf
int3
int
pushf
pushf
pushf
pushf
iret
mov
mov
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
cmps
test
stos
pushf
pushf
pushf
pushf
stos
lods
lods
scas
pushf
pushf
pushf
pushf
scas
nop
xchg
xchg
pushf
pushf
pushf
pushf
xchg
xchg
xchg
xchg
pushf
pushf
pushf
pushf
xchg
cwde
cdq
call
popf
sahf
pushf
pushf
pushf
pushf
lahf
add
add
xchg
pushf
pushf
mov
pushf
(bad)
jo
jb
pushf
pushf
pushf
jae
jne
pushf
pushf
pushf
pushf
ja
jns
pushf
pushf
pushf
pushf
jnp
jge
pushf
pushf
pushf
pushf
jg
popa
bound
gs
pushf
pushf
pushf
addr16
pushf
pushf
imul
pushf
pushf
pushf
outs
push
push
push
pushf
pushf
pushf
pushf
push
push
push
push
pushf
pushf
pushf
pushf
push
pop
pop
pop
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pushf
pushf
pushf
pushf
pop
inc
inc
inc
pushf
pushf
pushf
pushf
inc
inc
inc
inc
pushf
pushf
pushf
pushf
inc
dec
dec
dec
pushf
pushf
pushf
pushf
dec
dec
dec
dec
pushf
pushf
pushf
pushf
dec
xor
xor
xor
pushf
aaa
cmp
cmp
cmp
pushf
aas
and
and
and
sti
jge
dec
adc
add
pop
jb
sub
jne
sub
xchg
repz
aaa
add
add
sahf
rol
jmp
dec
cmp
pop
lods
add
ret
mov
pop
rcr
les
inc
add
ss
fcomp
loope
test
scas
inc
sbb
shl
arpl
xchg
out
sub
ret
cmps
jmp
out
mov
imul
and
jmp
pop
push
or
or
enter
add
ins
je
cmp
cmp
cs
inc
shl
rcl
push
push
mov
add
mov
std
cmp
fild
test
mov
pushf
mov
add
and
add
test
adc
loope
xor
mov
clc
mov
aam
inc
mov
xchg
je
inc
jl
cmp
bnd
inc
out
jns
popa
sub
in
mul
add
mov
cmp
out
loopne
pushf
imul
fisttp
xor
imul
pop
mov
add
sub
pop
cmp
pop
jne
rcl
loop
add
add
bound
mov
inc
and
int3
int3
xchg
rcr
pusha
add
arpl
add
mov
call
ja
push
pop
jb
push
fild
pop
jne
pusha
fcomp
xor
inc
fisttp
rol
or
sub
sbb
and
data16
xor
fdivr
push
shr
cmp
sar
or
mov
cld
mov
inc
cld
sahf
jns
cmc
and
xor
adc
lea
and
jmp
cs
dec
sahf
ss
pop
add
retf
dec
fistp
sub
add
add
add
xor
and
add
add
(bad)
add
add
add
fwait
(bad)
mov
jo
add
add
rol
loopne
inc
ror
and
xor
inc
add
outs
cli
std
add
jo
sbb
add
rol
loopne
lock
sub
add
pop
rcl
add
and
xor
push
push
add
add
mov
add
mov
rol
outs
mov
add
or
(bad)
mov
and
add
add
add
add
add
add
add
add
or
in
not
loopne
lock
add
fmul
xor
aas
push
add
inc
sub
add
pusha
add
bound
ret
add
rol
mov
add
in
inc
loopne
inc
lock
push
pop
push
or
aad
add
mov
adc
adc
and
mov
sbb
push
add
push
push
mov
adc
mov
push
mov
daa
or
out
cmp
dec
push
push
adc
rol
neg
lock
mov
mov
ss
add
pusha
adc
sub
inc
data16
xor
xor
add
mov
add
outs
std
jno
cmp
add
add
or
sub
push
xor
inc
add
loopne
add
pop
bound
jae
outs
adc
lock
das
add
arpl
sbb
loopne
or
jmp
xchg
dec
retf
push
sti
ins
jnp
push
mov
rol
push
fld
loope
push
fsubrp
inc
push
push
push
pusha
push
pop
jo
lahf
jmp
mov
pop
loopne
jle
fiadd
lock
mov
xor
inc
push
pop
pusha
pop
or
shl
add
pop
mov
fbld
ror
add
dec
or
or
or
or
aaa
sbb
ja
push
or
jo
or
mov
or
or
(bad)
ret
mov
jle
ror
loopne
jnp
or
or
or
or
fdivr
or
pusha
or
jo
xor
idiv
mov
or
pop
jnp
ins
mov
ror
adc
lock
add
adc
xlat
inc
mov
ret
add
push
xor
inc
arpl
or
mov
nop
push
mov
aaa
mov
ror
push
or
or
or
daa
adc
sub
stc
or
add
sub
pusha
or
jge
jo
in
add
push
out
sahf
or
add
fld
pop
ror
or
fwait
cmps
or
loope
dec
or
or
or
inc
or
or
clc
inc
popa
in
mov
adc
or
or
mov
cmc
jecxz
jae
or
es
loopne
shr
dec
pop
add
or
or
pop
jbe
mov
mov
add
or
not
out
inc
or
pusha
or
nop
or
mov
ror
dec
push
and
xor
hlt
(bad)
(bad)
inc
push
push
push
pusha
push
jo
or
nop
push
mov
push
ror
loopne
lock
cld
(bad)
loope
dec
push
lar
wrmsr
cmovo
sbb
push
punpcklbw
jo
or
add
dec
mov
sub
push
push
retf
xchg
push
lock
ret
fdiv
hlt
pop
adc
sbb
ja
pusha
mov
sub
and
xor
inc
push
pusha
adc
adc
mov
das
mov
rcl
je
mov
add
into
ds
loopne
lock
add
push
adc
dec
or
push
and
outs
aas
jno
add
neg
into
mov
inc
aaa
push
adc
xor
add
pop
nop
adc
add
(bad)
mov
sbb
adc
add
adc
jge
add
loopne
lock
adc
adc
adc
dec
inc
adc
push
adc
or
int3
test
push
or
add
test
pusha
out
jo
or
aaa
adc
or
cmp
inc
pop
movs
sbb
jo
pop
nop
jp
adc
movhlps
cs
lahf
js
dec
lock
adc
add
jl
cmp
adc
jne
std
popf
daa
adc
push
or
adc
fdivr
pop
sub
es
ror
cli
(bad)
jg
(bad)
loopne
lock
adc
adc
adc
adc
adc
adc
adc
iret
(bad)
pusha
adc
add
das
add
fucomip
sbb
mov
xchg
dec
mov
dec
mov
add
lock
mov
mov
scas
in
retf
push
or
jg
(bad)
inc
adc
adc
adc
push
xor
or
mov
pop
cmp
(bad)
fbld
mov
xor
adc
mov
adc
mov
ds
push
adc
in
ss
adc
mov
scas
jnp
xchg
das
add
lock
jmp
adc
inc
push
lock
mov
scas
sub
ja
add
test
lock
jmp
jnp
sbb
add
retf
dec
or
add
adc
aaa
add
fwait
ror
push
iret
mov
lock
pop
and
(bad)
jp
adc
pop
es
xor
dec
cmp
push
pusha
aas
sbb
fild
pop
or
fimul
fadd
push
inc
and
sub
mov
pop
adc
add
inc
hlt
pop
or
iret
in
add
pshufw
sti
loopne
js
fnstsw
nop
pop
mov
rcl
xchg
cmp
scas
pop
xor
dec
cli
lock
test
adc
iret
dec
or
inc
sbb
and
xor
jo
(bad)
div
nop
sbb
push
call
or
rcr
sbb
sbb
sbb
jnp
mov
sbb
sbb
sbb
pop
adc
cld
ss
sar
sbb
sbb
add
lock
or
pop
adc
pusha
sbb
or
sbb
sbb
mov
rcr
dec
and
jmp
icebp
adc
mov
aas
add
loopne
in
imul
out
loopne
add
xor
das
add
lds
add
sbb
mov
adc
or
mov
or
push
adc
std
(bad)
adc
sbb
sbb
sbb
add
(bad)
jle
or
(bad)
pcmpgtd
adc
adc
mov
ss
ja
adc
add
or
popf
dec
or
sbb
jne
sub
adc
or
add
jnp
or
fwait
mov
aaa
pop
or
add
inc
cmp
pop
add
pop
in
shl
out
mov
push
add
push
ficom
ja
dec
or
add
xor
or
fld
add
add
xlat
and
aaa
sbb
or
add
enter
add
or
cld
push
pop
adc
fld
fimul
or
adc
mov
fld
add
adc
or
dec
imul
dec
and
jg
pusha
sbb
add
pop
add
push
mov
jne
or
mov
push
shl
jg
cld
add
sbb
add
or
or
add
add
imul
jno
sbb
ficomp
aas
sbb
add
sbb
daa
adc
mov
or
test
mov
jne
jbe
lds
add
mov
pop
movs
popa
pop
ret
popf
lods
ins
jns
adc
push
pop
(bad)
clc
nop
dec
or
or
lock
lidtd
pop
sar
ins
sbb
gs
pusha
sbb
icebp
loopne
mov
push
cmps
pop
or
or
sbb
pop
jg
adc
add
pop
add
mov
bound
ror
sbb
or
fistp
fsub
add
aas
popf
or
or
or
or
(bad)
sti
cmp
xor
pop
pusha
cmp
xchg
xchg
pop
adc
lds
punpckhwd
add
pop
lahf
aas
lahf
or
das
add
dec
sbb
lahf
adc
and
mov
dec
leave
add
adc
imul
adc
pop
inc
arpl
add
ss
pop
jne
or
test
or
and
xchg
jge
mov
jge
fmul
add
or
mov
rcl
inc
pop
sbb
xchg
aas
add
pop
fadd
add
mov
xlat
mov
fisttp
in
in
ins
ins
pop
pop
invlpg
add
adc
dec
adc
or
mov
or
mov
stc
or
das
mov
fld
pop
sbb
pop
fiadd
sbb
lahf
pop
or
ret
or
pop
pop
jg
adc
add
pop
pop
sbb
pusha
inc
push
jne
or
fisttp
pop
push
adc
inc
or
aas
adc
push
pop
out
xor
pop
das
add
jle
arpl
sgdtd
add
sbb
lahf
adc
add
sbb
mov
lahf
add
add
pusha
and
or
adc
adc
jno
cwde
jbe
sub
inc
(bad)
xor
ret
pop
dec
sbb
or
or
mov
push
add
or
pop
rcr
js
mov
and
(bad)
sbb
inc
xchg
fsub
sub
cmp
or
add
mov
pop
and
cmp
in
dec
aaa
(bad)
(bad)
jno
adc
pop
mov
test
sti
add
fwait
lock
jg
cmp
push
adc
loopne
mov
or
add
mov
inc
fld
aaa
lods
pop
pop
das
dec
adc
and
fild
mov
xor
add
add
add
adc
cmp
add
add
aas
or
sub
push
dec
lea
imul
idiv
add
push
cdq
test
add
adc
push
xchg
jnp
adc
adc
cmp
clc
in
sub
dec
cmp
adc
or
push
adc
sbb
ret
hlt
div
adc
clts
cmps
sbb
outs
push
sub
mov
in
pop
call
or
or
mov
mov
hlt
lock
add
jmp
and
add
mov
sbb
and
push
add
jbe
dec
cmp
pop
pop
stos
sub
popa
mov
sbb
add
mov
sbb
sub
imul
xchg
sbb
inc
pusha
imul
jecxz
and
jmp
pop
(bad)
btc
outs
and
pop
pop
or
push
add
push
or
mov
cmp
mov
fbld
imul
mov
sbb
fisub
and
pop
mov
arpl
mov
jno
pop
pop
and
in
adc
daa
sbb
xchg
add
lahf
sbb
push
pop
and
xor
adc
inc
popa
adc
adc
push
pop
and
(bad)
fld
add
xchg
xchg
jmp
add
jmp
pop
adc
and
sbb
out
aad
mov
call
sub
pop
mov
icebp
or
sbb
mov
loope
and
adc
rol
mov
dec
pop
fiadd
xchg
push
xchg
push
xor
mov
int
inc
test
add
and
and
les
ret
adc
pop
fild
or
pop
mov
inc
movs
pusha
mov
repz
ds
or
adc
cmp
retf
cdq
popf
adc
jno
aas
adc
inc
test
inc
fmul
iret
mov
adc
push
aas
xor
dec
sub
mov
pop
ins
cmc
ucomiss
es
fistp
or
shl
and
fwait
add
add
rol
and
movs
(bad)
add
jmp
pop
je
mov
push
adc
mov
ror
aas
fwait
je
lock
(bad)
sbb
xchg
adc
add
add
add
pop
mov
bound
pop
push
push
push
pop
sub
xchg
loope
sbb
cli
xchg
imul
test
adc
je
mov
int3
clc
shl
mov
ror
push
aaa
push
mov
loope
fld
push
push
mov
xor
xor
mov
pop
adc
sbb
push
aas
adc
cs
div
add
sub
pop
pop
jmp
mov
(bad)
unpckhps
sub
popa
rcr
or
xor
add
jnp
add
popf
inc
sbb
adc
adc
imul
std
add
loopne
add
addr16
push
and
add
ins
ins
add
jle
mov
or
add
add
inc
and
mov
jmp
cmp
jb
sbb
cmp
in
sbb
nop
inc
add
mov
ss
sti
add
sub
sbb
sar
add
add
sbb
sbb
xchg
or
sub
ret
jb
mov
aas
add
add
mov
jle
add
jge
xchg
adc
push
and
mov
jge
or
(bad)
or
and
adc
adc
test
ror
push
inc
sub
sbb
push
add
add
or
dec
lods
js
lahf
mov
scas
and
sub
sub
shr
push
push
dec
test
stos
stos
and
or
add
add
add
or
add
and
or
xor
fisub
add
in
push
pop
pusha
mov
pop
push
aaa
sub
sbb
xor
in
fiadd
mov
sar
add
adc
adc
sub
cmps
xor
add
loope
lods
fsub
dec
repnz
sub
xor
sub
inc
inc
pop
inc
pusha
jo
es
xor
dec
add
or
mov
push
rcl
ins
(bad)
jp
loopne
pop
lock
test
add
cmp
mov
ja
adc
add
mov
xchg
add
nop
adc
dec
das
rol
ficom
ins
shr
add
add
int
lock
add
add
mov
cdq
(bad)
aas
cmp
add
jle
add
add
bound
mov
shl
inc
mov
lock
pusha
cmp
adc
dec
dec
dec
adc
sbb
inc
adc
pusha
inc
mov
(bad)
jg
das
ins
pusha
cmp
jbe
pop
hlt
pop
ret
outs
ror
ja
leave
enter
adc
xor
ret
fldln2
and
cmovo
add
adc
pop
das
call
lock
outs
popa
jp
ss
mov
pop
clc
setae
or
adc
mov
and
add
ss
sbb
xor
in
in
ds
dec
dec
mov
in
adc
push
lahf
add
ret
lahf
xor
mov
sbb
rdpmc
aas
add
sub
(bad)
aas
fist
ins
les
(bad)
aas
call
adc
call
cdq
sbb
ret
sar
lods
(bad)
out
(bad)
aas
lds
aas
call
imul
push
aad
pop
push
dec
fbstp
das
leave
psubusw
xor
jecxz
(bad)
jmp
jmp
and
lds
mov
stos
jmp
pmulhuw
aas
inc
shl
cwde
outs
movaps
push
jg
add
mov
or
add
clc
pop
outs
ins
sub
push
jmp
rsm
leave
leave
leave
sub
xor
adc
and
aas
xor
sub
push
aam
jb
add
mov
sbb
stos
pavgb
add
je
inc
or
inc
pop
paddusw
mov
mov
cmp
cmp
cmp
cmp
(bad)
mov
cmovo
sldt
in
and
das
inc
mov
fild
inc
inc
cmovne
inc
inc
inc
pushf
pushf
pushf
pushf
inc
inc
dec
dec
adc
hlt
aam
mov
iret
outs
loop
adc
dec
push
(bad)
fild
imul
inc
fcomp
jns
rol
into
outs
aas
mov
and
pshufw
jo
addr16
mov
pop
mov
ror
ror
dec
fstp
jecxz
popf
mov
cs
pop
pop
icebp
aas
repz
or
cmp
cmc
lahf
jmp
xchg
or
xlat
ss
add
jg
or
adc
sbb
outs
ret
out
xor
pop
add
lahf
inc
or
inc
xor
(bad)
dec
invlpg
jno
pop
inc
punpckldq
popa
aas
scas
loopne
fld
lea
pop
push
jb
mov
mov
inc
mov
pop
mov
push
adc
push
fbld
mov
sub
pop
pop
test
inc
and
pop
test
adc
fild
inc
or
aas
mov
test
jg
stos
sbb
add
adc
scas
adc
(bad)
xor
ror
jg
inc
pop
aam
outs
add
sub
push
pop
(bad)
aas
fistp
inc
sub
lahf
mov
jg
rcl
movq
mov
test
add
aas
movaps
adc
aas
mov
add
rcr
pop
mov
pop
iret
movaps
call
add
xor
xchg
sbb
inc
(bad)
sub
cmp
xchg
aam
test
adc
sbb
and
pop
add
jl
xor
int
or
mov
push
adc
adc
shl
cli
dec
mov
mov
rcr
pop
clc
(bad)
jge
mov
inc
test
or
popf
push
push
pop
push
jae
shl
push
movzx
(bad)
push
and
or
sbb
into
add
xchg
add
add
es
ficom
ret
test
and
aam
adc
jb
dec
dec
jmp
mov
lock
xchg
cmp
rol
or
dec
xor
daa
jno
push
cmp
xor
gs
imul
shl
push
push
and
ss
or
mov
outs
ja
sbb
mov
dec
jo
pop
ins
inc
pusha
stos
popa
dec
or
mov
or
test
adc
push
imul
jb
ins
gs
shl
jb
inc
unpcklps
adc
movs
push
push
ja
inc
add
(bad)
mov
add
mov
popa
jl
add
js
adc
bnd
popa
push
sbb
add
(bad)
data16
add
pop
pusha
fcom
xchg
es
or
cmp
sub
push
jne
sub
push
xor
adc
push
mov
ins
jo
neg
outs
adc
dec
outs
add
push
push
ss
cwde
push
mov
or
add
out
ret
pop
es
mov
add
std
push
inc
shr
inc
stos
mov
and
gs
add
push
rcr
into
cmp
and
jl
ds
pop
push
sbb
mov
arpl
addr16
mov
outs
and
mov
mov
ja
push
lock
jo
loopne
data16
inc
push
pop
mov
das
jno
push
sub
dec
push
iret
enter
jb
aam
cmp
push
daa
xor
inc
sub
shr
(bad)
and
push
jl
pushf
mov
add
mov
lds
les
mov
cld
fnsave
xchg
iret
enter
cmps
lock
xor
dec
sahf
in
cmp
das
mov
in
mov
in
mov
cmp
fcom
mov
fdiv
pop
aam
lods
addr16
fstp
rcr
int3
(bad)
stos
pop
enter
enter
pushf
test
call
enter
xchg
inc
nop
test
jle
adc
test
add
add
xchg
inc
xchg
mov
or
lock
(bad)
pop
add
in
es
arpl
jo
inc
xor
in
push
xlat
lahf
add
dec
test
or
and
sbb
adc
cmp
jns
mov
in
add
(bad)
or
ins
jne
gs
jo
sbb
or
or
and
repz
fmul
jo
fwait
mov
sub
ds
adc
push
rcr
jnp
inc
lock
inc
cmp
ds
adc
mov
add
pushf
push
dec
sbb
(bad)
or
push
or
arpl
jl
or
cmp
arpl
inc
rcr
and
inc
add
inc
sbb
sbb
dec
add
inc
mov
cmp
in
push
into
push
jmp
dec
sbb
ficom
in
xor
mov
(bad)
cmp
inc
add
add
or
frstor
adc
add
sar
dec
sar
push
std
leave
leave
sar
call
xchg
data16
test
adc
es
push
js
loopne
add
xchg
dec
xor
xchg
or
and
dec
mov
dec
fwait
add
add
ds
sub
cmp
inc
fcom
adc
adc
addr16
or
fild
mov
add
pushf
add
nop
jno
push
cwde
jl
add
adc
out
shl
push
mov
adc
inc
mov
sbb
or
push
fwait
mov
add
mov
popf
inc
push
sub
(bad)
jge
inc
gs
lea
scas
and
lea
cs
inc
clc
xchg
mov
push
jb
repz
push
cmps
xlat
pop
aaa
jmp
daa
or
jae
adc
cwde
lahf
add
add
inc
lds
jg
add
add
repz
or
es
cmp
(bad)
or
mov
ja
and
jg
push
add
or
inc
jne
push
or
inc
push
add
mov
inc
popf
push
sbb
mov
(bad)
inc
add
xor
dec
xlat
jns
pusha
inc
fadd
movs
xchg
loopne
das
test
inc
adc
and
inc
or
add
xor
inc
cmps
mov
popf
xchg
ret
jno
inc
sbb
sub
xor
add
jno
xor
or
push
cmc
jg
inc
lea
inc
arpl
imul
cmp
mov
jl
repz
pushf
mov
fwait
sbb
dec
inc
sahf
pushf
int3
and
lock
jo
jp
dec
or
repz
fld
or
adc
inc
push
sub
inc
popf
sub
pop
or
jo
jae
add
jns
mov
ins
je
cwde
loope
sub
pop
push
mov
jo
cmp
jno
push
in
stos
cmps
dec
inc
inc
outs
and
or
push
ins
add
jge
in
nop
(bad)
or
adc
inc
inc
inc
not
nop
push
sbb
and
cdq
retf
mov
(bad)
cmp
or
sub
add
repz
lods
fsub
mov
inc
pop
mov
sbb
pop
int3
add
dec
or
or
mov
out
adc
mov
stos
pop
xor
pop
dec
mul
or
pop
xor
push
popa
imul
sub
pop
(bad)
fisub
add
(bad)
outs
ja
add
adc
dec
push
pop
sub
cdq
mov
push
bound
jmp
inc
cs
add
out
(bad)
and
add
inc
dec
in
add
fwait
pop
and
push
in
call
and
stos
add
jbe
mov
push
or
loopne
jecxz
mov
lea
loopne
fisttp
dec
lea
add
lahf
xlat
das
and
js
sahf
scas
test
inc
mov
aaa
inc
mov
adc
jb
jne
shr
push
xlat
pop
xor
test
mov
xor
nop
lahf
outs
rcr
push
mov
mov
sahf
push
pop
sbb
sbb
adc
loopne
and
inc
loopne
rol
cld
sahf
xchg
pop
mov
pop
inc
nop
dec
aad
adc
nop
stos
je
into
cmp
cdq
pusha
fst
pop
xor
lock
add
ja
pop
cmps
sub
mov
mov
push
inc
sbb
xchg
push
cmp
fs
pop
lods
or
pop
cmp
das
sub
and
mov
loop
sbb
sub
test
out
jns
inc
pop
ror
mov
push
add
aam
pushf
mov
(bad)
rsm
push
or
lds
jno
in
dec
add
pushf
fld
mov
inc
lock
popa
xor
mov
fist
scas
mov
and
pop
sbb
je
outs
adc
aas
sar
push
cmp
inc
push
and
xchg
mov
inc
xchg
dec
and
add
ins
sti
push
ins
or
xor
cld
mov
sbb
popa
jo
add
xor
sub
adc
movs
scas
push
ror
movs
push
dec
enter
sbb
and
iret
and
push
xor
ja
mov
ja
or
push
mov
push
mov
das
out
dec
sub
add
loopne
fmul
or
adc
add
stc
or
or
and
fld
outs
out
push
mov
stos
das
mov
xchg
adc
daa
and
adc
pop
mov
dec
jnp
sub
cmps
addr16
loopne
dec
cmps
(bad)
jo
push
mov
push
and
cmps
fild
xlat
adc
mov
pop
xor
in
adc
sbb
or
or
outs
cwde
dec
dec
jmp
add
mov
mov
movs
inc
les
xchg
mov
mov
test
outs
mov
lods
mov
and
fsubr
ror
pop
push
cvtps2pd
xchg
stos
loopne
ror
ss
in
pop
and
mov
push
hlt
dec
adc
js
or
das
add
add
jo
pop
and
rcr
ins
and
pop
movs
rsm
stos
aaa
pushf
test
add
dec
push
inc
scas
jge
popf
mov
frstor
adc
dec
fs
dec
push
mov
mov
stos
in
push
outs
and
sub
pusha
pop
mov
sbb
das
cli
sub
dec
sbb
fsubr
mov
pushf
sub
lods
dec
mov
test
cpuid
dec
lods
or
pop
sbb
xchg
lods
xchg
add
lods
inc
adc
jbe
pop
pop
inc
cmovbe
push
push
and
aas
(bad)
cwde
sub
pop
and
inc
data16
dec
add
push
and
push
out
lods
xchg
inc
add
je
adc
xchg
test
iret
pop
sub
clc
mov
neg
push
int
mov
setle
fcom
xlat
mov
cmp
scas
in
scas
inc
daa
pop
scas
scas
scas
dec
mov
sub
les
and
and
in
or
outs
xor
xlat
in
das
repnz
inc
sub
xor
sar
scas
mov
xchg
mov
mov
pushf
cmpxchg
mov
mov
shl
pusha
stos
loopne
outs
pop
inc
cmovp
inc
sub
xor
bound
outs
push
or
or
hlt
das
cli
mov
add
pop
or
push
shl
cmp
mov
or
pusha
cmp
xor
nop
pop
adc
call
adc
and
or
sub
cmp
gs
pop
jo
sub
das
cli
add
inc
bound
adc
popa
arpl
pop
sub
in
pop
fidiv
pop
movs
rsm
add
add
pop
test
pop
ficomp
test
push
push
jno
add
xchg
clc
mov
or
push
sub
pop
pushf
sub
(bad)
sbb
mov
in
adc
pop
adc
push
inc
lods
push
pop
scas
jbe
repnz
arpl
pop
xor
push
or
push
inc
jo
pop
enter
in
dec
inc
sbb
and
jo
inc
pusha
mov
sbb
movd
push
add
cdq
pusha
(bad)
pusha
add
or
fdiv
xor
dec
pop
and
sub
pop
jno
sbb
adc
pop
inc
sbb
xchg
test
dec
in
or
enter
cmovne
pop
sub
in
test
and
fnsave
adc
clts
cmp
push
adc
adc
push
inc
push
sbb
add
or
pop
cmp
xor
adc
ins
add
mov
cs
sub
jb
sbb
mov
xor
push
andnps
add
jl
or
movs
pop
jb
jb
adc
adc
sbb
faddp
jae
sbb
lods
push
pop
neg
fsub
inc
and
add
mov
sub
xchg
and
cmp
xor
inc
and
push
pop
mov
js
mov
jbe
in
clc
or
mov
xor
mov
and
or
add
ss
fcom
int
dec
fwait
dec
movs
sbb
sbb
or
mov
xchg
push
add
pop
imul
and
popf
jns
pop
sbb
cdq
das
xor
adc
jae
imul
div
aad
sub
int3
rcr
ja
addr16
icebp
or
out
mov
dec
mov
sbb
mov
mov
arpl
data16
inc
mov
inc
dec
in
pusha
aaa
inc
sub
fld
test
cmc
add
cmp
adc
xchg
pop
(bad)
les
add
ss
fisttp
sub
enter
push
pop
aaa
mov
pop
test
push
xchg
mov
femms
dec
jo
xor
or
push
mov
(bad)
sbb
push
loopne
sbb
dec
and
sbb
adc
test
movs
jnp
(bad)
call
mul
add
add
fld
or
dec
push
xor
gs
or
mov
lahf
mov
fdivr
mul
shr
clc
push
dec
add
pusha
(bad)
or
das
xor
and
shr
les
setge
dec
dec
adc
(bad)
jb
mov
inc
aam
popa
xor
pop
clc
daa
sbb
jo
outs
repz
add
hlt
add
pop
and
mov
mul
mov
je
imul
test
imul
or
mov
cmp
int3
add
jmp
xadd
dec
pop
add
aam
sbb
pop
aam
jns
xlat
pop
xor
les
push
inc
adc
adc
pushf
out
sub
out
loopne
aaa
push
cs
nop
xchg
call
popf
mov
outs
clc
ret
rcl
retf
das
push
xor
push
cmp
loopne
shl
add
xor
outs
nop
je
push
test
or
push
mov
outs
popa
sub
xor
scas
cs
pusha
jnp
inc
movs
jns
ins
gs
(bad)
pop
inc
adc
sub
jae
outs
mov
ins
jae
and
jnp
fdivr
pop
jb
inc
sub
push
adc
imul
push
dec
pop
add
sub
ret
ret
jge
dec
outs
cpuid
int3
cmps
push
xor
and
repz
fs
outs
xor
dec
(bad)
or
adc
bound
dec
sub
push
fs
int3
sbb
mov
mov
dec
js
mov
adc
jae
push
test
mov
inc
and
in
xor
test
pop
pop
mov
cmp
push
imul
lea
ret
xchg
ds
mov
xchg
add
xchg
and
or
jmp
add
aam
xchg
aaa
leave
faddp
and
sub
(bad)
fbstp
icebp
dec
leave
(bad)
es
das
test
add
push
jo
pop
inc
jbe
mov
dec
push
push
mov
das
add
sbb
or
push
adc
or
add
xchg
and
(bad)
scas
inc
es
fsub
push
clc
xor
jns
outs
cmovb
cmps
dec
sahf
out
mov
daa
daa
and
(bad)
nop
lahf
scas
daa
daa
daa
daa
mov
xchg
xchg
daa
add
adc
(bad)
out
popf
cs
pop
seto
add
ror
mov
mov
xchg
(bad)
es
mov
push
jne
outs
bound
inc
add
pop
repnz
leave
push
add
pop
jge
xor
mov
add
xchg
add
cmps
jae
in
ret
(bad)
xchg
aaa
sub
fstp
dec
jae
in
sub
popa
gs
adc
cs
ins
dec
inc
jmp
aaa
repnz
and
aam
inc
add
out
test
std
and
xor
pop
adc
pushf
outs
and
pop
add
xor
pop
(bad)
ins
test
add
or
dec
aad
xlat
xor
and
mov
mov
mov
adc
sbb
xor
sbb
and
jb
enter
push
call
shr
mov
data16
gs
or
xchg
shl
cmp
ja
xor
clc
xor
inc
stos
pop
test
jmp
sub
icebp
sub
or
ror
push
pop
add
stos
push
mov
cs
sbb
loopne
shl
mov
jnp
pusha
(bad)
rcl
mov
mov
adc
xor
lea
inc
arpl
push
in
js
lods
xchg
ins
inc
xchg
add
or
adc
or
push
rcl
add
(bad)
int3
stc
add
push
mov
fild
sbb
ret
stos
or
jo
ds
out
pop
mov
lods
shl
dec
call
xor
js
(bad)
fnstcw
add
add
or
stos
sub
push
dec
inc
dec
inc
push
outs
push
mov
adc
dec
mov
cwde
fnstcw
inc
xor
push
cmp
add
mov
int3
cmovle
imul
sbb
movs
add
push
xchg
push
lods
es
dec
test
inc
lods
int3
push
cmp
js
imul
or
adc
shr
outs
mov
push
and
fisttp
pop
add
add
push
mov
lods
int3
leave
sub
test
int3
xor
enter
inc
aaa
pop
adc
sub
jge
leave
(bad)
(bad)
js
pop
add
mov
das
xchg
int
add
loopne
and
jnp
push
loopne
ins
and
xchg
int
inc
mov
int
into
inc
or
icebp
inc
icebp
dec
dec
mov
into
addr16
sub
and
cmps
sub
xor
dec
dec
loopne
je
mov
inc
lds
repnz
add
pop
in
outs
mov
pop
cmp
iretw
(bad)
in
jns
pushf
add
jl
push
inc
enter
inc
in
add
cmp
call
shl
xor
push
and
in
rol
jl
inc
test
pop
shr
jl
rcl
scas
dec
enter
pop
in
pop
push
ins
xchg
jge
into
(bad)
mov
pop
test
popa
(bad)
cmp
mov
test
adc
cmovb
pop
jns
addr16
or
outs
push
sub
pop
iret
jnp
out
clc
jl
push
test
mov
mov
sar
sahf
rol
and
loopne
and
or
dec
inc
push
cmp
shl
xchg
pop
clc
dec
sub
inc
xchg
aaa
mov
inc
jb
jge
rcl
dec
enter
pop
in
stos
pop
adc
(bad)
sar
and
das
push
ror
test
ror
sub
repz
push
sar
push
adc
jb
jg
hlt
inc
jno
shl
push
inc
imul
scas
stos
inc
jno
mov
dec
imul
ficom
mov
mov
xor
pop
rcr
out
mov
(bad)
pop
push
jne
pop
xor
lds
clc
lods
scas
repnz
or
ret
in
xchg
inc
sbb
fsubr
gs
aas
xchg
inc
xchg
adc
pop
add
add
pop
shl
jmp
loopne
mov
lods
or
xchg
mov
jbe
push
aas
sbb
je
clc
test
or
inc
cld
adc
mov
adc
add
push
jmp
jmp
jmp
sub
add
outs
dec
sub
add
or
mov
not
shl
or
daa
movzx
sub
add
into
and
and
pop
add
pop
jbe
call
int
sub
je
cli
pusha
jmp
mov
fiadd
push
ror
mov
pop
mov
outs
sub
ja
dec
loopne
in
mov
aaa
inc
cmp
jne
sub
add
cmp
sub
jg
mov
mov
pop
les
call
inc
push
mov
push
inc
push
adc
adc
xchg
and
je
pop
loopne
push
(bad)
mov
push
mov
inc
jmp
cmp
inc
cmc
jns
iret
sti
movzx
sbb
sbb
and
or
sub
repnz
out
xor
cmp
push
sahf
cmps
or
xchg
jp
retf
push
push
sbb
gs
or
add
ret
sub
or
jmp
xor
stos
jnp
or
sub
jae
xor
and
dec
inc
sub
mov
out
push
xor
mov
imul
or
and
cmp
mov
add
ss
rol
and
mov
adc
mov
js
push
mov
data16
and
xor
bt
inc
inc
add
imul
ins
(bad)
inc
int3
sub
(bad)
adc
and
jl
lahf
aad
or
out
sbb
lock
test
or
xor
inc
mov
outs
lahf
mov
enter
mov
xor
dec
cld
jmp
std
jg
daa
push
and
xor
sub
push
adc
and
sub
mov
pop
cs
ret
inc
push
movs
or
mov
add
xchg
cli
fild
fnstcw
cli
sbb
adc
sub
pop
pop
jmp
xor
pop
pop
neg
(bad)
movs
mov
inc
push
jne
ror
xor
clc
sub
or
ror
jg
arpl
mov
fnstenv
push
movs
and
sub
jg
sub
pop
add
pop
adc
mov
cwde
repnz
or
sub
iret
cmp
rol
aaa
sub
hlt
push
pop
adc
and
sbb
stc
pop
jg
add
loopne
and
cmp
jne
mov
and
jne
push
xor
pop
add
cmc
fidiv
push
mov
sub
sub
(bad)
fdiv
push
shl
mov
je
mov
fimul
fdiv
or
and
adc
jl
add
xor
jp
add
sti
add
jmp
sub
jne
outs
and
pop
and
push
pop
aas
mov
mov
cmp
jne
add
xor
rcr
dec
aaa
mov
call
pop
or
push
ja
fsubr
inc
fild
ins
jmp
cmps
push
enter
imul
aam
push
pop
push
mov
xlat
rol
leave
fwait
in
mov
fiadd
mov
add
adc
aam
push
add
movs
cmp
enter
pop
ins
mov
sub
sar
push
or
nop
cmp
mov
pop
sub
pop
not
lds
(bad)
adc
sbb
inc
sub
pop
xchg
(bad)
sub
sub
fs
cmp
ins
sbb
push
push
adc
push
imul
adc
sub
add
or
dec
or
mov
loopne
rcl
push
rcr
aam
mov
add
pop
sub
add
jno
dec
mov
sbb
pop
(bad)
and
push
ja
cvtdq2ps
or
leave
outs
sub
xor
pop
adc
pop
or
repz
jge
mov
mov
pop
call
pushf
push
into
pop
dec
and
xor
ja
jb
lahf
dec
add
mov
or
or
xorps
xchg
xchg
(bad)
sti
sbb
ja
jmp
or
sbb
cs
popa
mov
jo
hlt
add
stc
mov
cmp
mul
fbstp
not
in
test
movzx
dec
and
adc
ret
sub
jmp
xor
or
dec
xchg
push
push
push
push
push
pop
shr
and
dec
mov
dec
iret
add
ss
lock
jg
in
xchg
push
sbb
cli
cmp
mov
pop
mov
or
adc
in
aaa
add
pop
das
pusha
add
bound
(bad)
ffree
jp
sbb
in
cdq
in
inc
mov
sub
das
mov
cdq
dec
in
pusha
movaps
lock
dec
das
inc
dec
lahf
add
add
jle
inc
sub
push
xor
cld
cmp
jne
mov
arpl
mov
add
out
sub
sub
jne
adc
push
out
add
stos
loop
sahf
mov
movs
jg
and
(bad)
adc
mov
(bad)
sub
jne
jbe
mov
(bad)
shr
aad
push
add
mov
push
call
pusha
add
test
mov
mov
fiadd
push
sub
dec
adc
inc
(bad)
and
add
or
popa
xor
mov
and
popf
fst
push
cmp
pop
dec
mov
or
mov
mov
add
and
div
fild
pop
adc
or
add
jp
or
sub
pop
and
adc
jg
or
data16
sub
into
and
inc
sub
int
out
cmp
popf
std
adc
sbb
ret
push
aas
imul
outs
pop
mov
out
icebp
jmp
shr
(bad)
movs
xchg
fist
adc
xchg
or
sub
push
aam
mov
aas
push
push
inc
or
adc
sbb
lock
sbb
pop
pop
fist
and
ja
call
pushf
stos
mov
jne
jmp
js
jl
imul
xor
test
lods
fcmovnbe
daa
mov
jle
imul
inc
jecxz
mov
xchg
cwde
jne
std
jmp
adc
mov
ficomp
and
inc
inc
dec
jne
jmp
xchg
jnp
pop
pop
iret
or
sbb
pop
xchg
bound
clc
ror
adc
aad
call
ucomiss
loope
dec
cld
div
add
call
jg
(bad)
or
dec
in
dec
fisub
xchg
cwde
add
jmp
mov
xlat
mov
fs
push
xchg
imul
or
and
xor
popa
push
or
adc
aaa
test
xchg
add
add
sub
xchg
add
jl
jl
ret
lock
xlat
pop
ins
imul
dec
pop
inc
ror
or
outs
adc
shl
mov
mov
mov
add
cld
call
sbb
test
fimul
les
pop
cmp
out
jbe
sub
inc
sub
mov
out
and
(bad)
jmp
sar
daa
pop
scas
mov
sub
in
into
hlt
jb
repz
jg
sti
mov
inc
jp
jb
and
xchg
add
outs
jb
stc
repz
aas
mov
loopne
cmps
jb
add
(bad)
mov
(bad)
pop
xor
adc
aam
mov
or
bnd
arpl
mov
xchg
ret
add
jmp
cs
leave
iret
fbstp
movs
das
por
add
jp
repnz
adc
sbb
mov
std
lods
lods
dec
sub
sub
or
sbb
inc
mov
dec
inc
or
or
sbb
lahf
adc
xor
sub
push
jg
push
sar
mov
xor
pop
pop
dec
mov
sbb
dec
adc
or
jne
inc
xor
pushf
loopne
mov
jmp
xchg
cmp
pop
or
mov
pop
mov
loopne
lods
ror
out
push
hlt
fstp
dec
enter
and
push
aas
test
add
rol
pop
pop
cmp
cmps
and
push
in
dec
loopne
sar
mul
imul
cwde
or
xchg
int
test
or
pushf
(bad)
(bad)
mov
mov
sbb
mov
cmps
fsubr
cs
rcl
sub
es
int
sbb
call
jbe
jbe
xchg
dec
fadd
jae
mov
mov
or
xor
add
push
sbb
add
dec
jmp
inc
rcl
fiadd
je
add
fdiv
add
scas
into
xor
sti
stc
je
xchg
sub
add
clc
mov
rcl
mov
stos
dec
lods
dec
in
mov
shl
in
or
mov
cli
and
rcr
add
mov
scas
pop
les
ror
push
aas
mov
loope
lods
rol
push
pop
mov
add
(bad)
jmp
inc
xlat
sub
xor
fist
cmp
jge
aad
xchg
add
jne
sub
push
mov
sar
fnstsw
push
fwait
or
clc
jmp
dec
jne
dec
add
lea
jmp
shl
mov
sahf
pusha
ret
sub
inc
adc
jle
mov
cmp
shr
pop
pop
xor
push
jbe
loopne
sar
sti
mov
and
push
nop
aaa
adc
lea
add
jg
lds
fdiv
pop
pop
add
mov
add
in
xor
add
ja
fadd
inc
push
lock
and
fidivr
movs
les
push
outs
jge
push
mov
nop
or
and
fmul
ins
imul
sub
fistp
or
aam
mov
mov
adc
push
mov
cmc
or
push
shr
gs
aaa
push
neg
push
hlt
add
scas
or
push
xchg
pop
and
cld
fstp
das
push
mov
add
je
mov
mov
pop
fistp
cmps
xchg
and
jmp
sub
xchg
adc
sub
pop
add
push
push
jne
fidiv
add
push
mov
jae
fisttp
push
push
rcl
addr16
cmp
cmp
pop
cli
xor
in
shl
adc
jge
sub
xor
jo
push
xor
cmpxchg
xor
movzx
add
sub
dec
int3
add
stos
or
mov
add
(bad)
inc
xchg
adc
ins
lock
fnstsw
sahf
pand
jmp
jmp
xlat
pop
lock
add
push
mov
xor
and
retf
arpl
(bad)
or
outs
sub
adc
push
push
fdivr
xchg
adc
movs
sti
mov
stc
mov
(bad)
and
mov
out
(bad)
mov
mov
pusha
or
mov
add
repz
ds
in
pop
and
cli
inc
ja
sub
mov
sub
jmp
mov
mov
rol
iret
in
dec
cmp
in
xor
test
adc
push
sub
test
and
mov
mov
dec
fsubr
push
xlat
push
xchg
xchg
rcl
sbb
ja
retf
lock
push
jbe
loopne
(bad)
mov
add
scas
mov
add
pushf
xchg
loopne
inc
adc
cld
or
jge
adc
jb
add
jnp
push
and
js
scas
xchg
imul
je
test
dec
sub
test
and
cmp
push
or
and
fs
sar
pop
or
inc
push
cmp
inc
mov
xlat
cs
daa
sub
fcomp
add
add
jnp
or
xor
xchg
inc
fisttp
lea
xor
push
mov
cmp
les
or
inc
test
fdiv
push
mov
sahf
sbb
loop
cwde
cs
sbb
push
or
mov
ins
jmp
adc
add
xor
jae
push
jo
sbb
and
pop
inc
xor
add
movs
or
sub
add
lods
jo
outs
inc
mov
pop
pop
pop
les
inc
retf
push
jmp
sub
and
movs
pop
mov
mov
lea
add
sub
fwait
outs
jo
aam
mov
jne
pop
xchg
lock
or
fwait
fs
add
xchg
add
loope
cld
lahf
jne
adc
cmp
push
fisubr
daa
in
test
movs
inc
adc
fstp
clc
jmp
ret
inc
clc
pop
push
dec
mov
push
inc
sbb
in
fucomip
sbb
cmp
daa
lock
xor
inc
sbb
inc
add
ins
inc
xor
cmp
or
adc
(bad)
aad
int3
inc
pop
and
cmp
sar
or
or
xchg
mov
and
sub
lods
fild
push
dec
mov
pop
ja
(bad)
pop
pop
jg
mov
pop
in
and
pusha
sbb
repz
cld
mov
je
leave
cld
imul
movs
xor
jmp
adc
pop
pop
mov
inc
mov
mov
je
jae
ret
pop
fwait
stos
(bad)
cmp
ds
or
sbb
mov
adc
push
pushf
aad
cmps
imul
ss
push
and
mov
adc
add
(bad)
shl
push
jae
mov
jle
push
push
imul
pop
inc
dec
jle
cmp
je
mov
add
jge
sbb
add
jb
ud0
ja
push
inc
sar
add
mov
icebp
sbb
mov
mov
test
adc
out
mov
jg
and
pop
add
inc
add
jmp
sbb
dec
pop
mov
inc
mov
ret
mov
cmp
jge
mov
pop
pop
test
add
xchg
enter
sbb
cmc
loopne
mov
mov
pop
sbb
and
in
mov
or
movs
scas
mov
mov
imul
cmps
dec
enter
addr16
aad
cmp
out
mov
add
aaa
sar
int3
(bad)
and
aad
or
sub
adc
jae
lock
add
jbe
repz
movs
add
aaa
js
inc
add
ret
cwde
cmp
add
mov
test
dec
mov
aaa
ins
repz
add
jecxz
jg
xchg
movs
inc
aas
rcl
loop
into
mov
adc
bound
pop
dec
cmps
pop
jecxz
jmp
push
add
(bad)
jmp
add
icebp
arpl
adc
orps
cmp
sbb
inc
inc
popa
pop
fdivr
in
push
retf
push
imul
inc
pop
ins
test
mov
add
add
ss
dec
cmp
out
rol
xor
push
clc
mov
push
push
mov
(bad)
imul
xchg
push
jo
dec
hlt
inc
push
push
rol
pop
mov
mov
sbb
enter
xor
add
and
dec
adc
push
test
push
jnp
cwde
add
inc
cdq
mov
shl
out
cli
mov
or
cmc
dec
ret
push
push
mov
movs
add
add
sub
test
and
cmp
inc
pop
add
sbb
sbb
shl
adc
mov
xor
stc
or
push
pop
ja
pop
ret
inc
pop
outs
fimul
retf
xor
dec
add
cmp
inc
sub
mov
inc
mov
fstp
pusha
mov
(bad)
movs
push
add
pop
mov
jmp
add
std
fdivr
jmp
xor
(bad)
pop
cmovs
sub
add
mov
and
mov
add
outs
retf
imul
sbb
push
mov
iret
jmp
xor
dec
pop
pop
lahf
mov
and
fisttp
adc
nop
cmp
xor
inc
jb
loopne
icebp
ss
cmp
lock
pushf
mov
xchg
stos
lock
imul
dec
xchg
push
imul
(bad)
cmp
jae
movzx
jo
or
jne
mov
ret
rol
mov
jns
push
jb
lods
sar
cmp
xchg
adc
inc
cli
repnz
mov
bound
mov
call
xlat
push
mov
add
xor
or
pop
sub
neg
das
adc
das
adc
call
add
(bad)
add
in
(bad)
into
inc
cmps
jb
lock
jmp
shl
jo
lock
loope
lock
push
jo
loopne
adc
and
neg
add
in
leave
outs
ss
mov
js
mov
or
mov
adc
xor
mov
and
add
not
mov
mov
mov
and
icebp
jbe
push
lea
and
dec
adc
inc
jno
cmp
mov
jne
lea
jl
test
jmp
cmp
and
stc
sub
fidivr
add
inc
mov
and
dec
div
loopne
dec
mov
push
and
sub
mov
je
inc
dec
jne
cs
sub
fstp
xchg
inc
test
mov
cmps
ror
call
adc
or
call
pop
fs
sub
add
js
pop
push
xor
pop
sub
jp
ss
mov
clc
(bad)
mov
add
dec
mov
or
add
(bad)
(bad)
cmp
pop
les
or
sub
(bad)
adc
int3
and
lods
sub
jmp
fsubr
in
nop
popa
or
out
mov
xor
cs
ins
jns
or
or
cmp
and
pusha
test
mov
cmp
inc
xor
xor
adc
add
sub
(bad)
sub
add
(bad)
in
ror
push
adc
iret
imul
jmp
and
and
dec
inc
pop
dec
push
(bad)
cwde
test
pop
adc
mov
loopne
adc
test
dec
test
and
fwait
sar
hlt
fistp
adc
push
dec
add
jmp
pop
mov
adc
out
ret
pop
cdq
lock
cs
jmp
add
jg
sbb
jae
push
mov
movs
add
or
jle
mov
retf
mov
lea
add
imul
or
leave
and
inc
cld
mov
pusha
cmp
je
or
daa
mov
or
push
mov
hlt
lea
pop
cmp
mov
aas
hlt
inc
jl
inc
dec
lock
call
add
sbb
in
je
and
jo
cmp
in
add
xlat
mov
jl
mov
pop
(bad)
mov
hlt
xchg
pop
push
jne
pop
sbb
pushf
dec
loopne
pop
movs
push
add
xchg
hlt
push
push
jo
fisub
dec
pop
pop
sbb
pop
sbb
sbb
add
pop
outs
add
add
or
clc
add
inc
lock
shr
jmp
sbb
adc
jecxz
sti
dec
add
adc
adc
dec
inc
mov
sub
cmps
in
cmp
out
sbb
push
jl
js
je
adc
jo
ins
or
push
add
sbb
or
sub
idiv
inc
dec
mov
mov
inc
(bad)
clc
setb
pop
es
mov
pop
call
pop
iret
pop
dec
mov
pop
xor
mov
sub
push
adc
cmp
push
pop
pop
leave
je
mov
pop
lahf
mov
add
lock
mov
push
clc
movs
add
dec
clc
dec
push
add
xor
mov
cmp
lock
jb
push
ret
call
jmp
push
add
xlat
pop
loop
ret
adc
or
or
adc
push
sub
in
call
scas
loope
and
(bad)
mov
add
or
adc
jge
push
idiv
pop
adc
fs
or
pop
fadd
mov
fcomp
mov
jne
call
je
xchg
pop
sahf
and
(bad)
mov
frstor
loopne
call
or
xor
adc
call
add
movzx
lods
pop
cli
add
ss
xor
and
jmp
jle
dec
test
in
ja
jmp
mov
or
jne
cmp
je
test
dec
shl
or
push
pop
add
xchg
push
rol
popf
retf
or
daa
mov
test
shr
push
pop
fcom
test
or
pop
add
push
mov
jge
mov
mov
jmp
sbb
neg
jbe
or
inc
jmp
sbb
add
aas
xchg
add
or
ja
xor
je
jnp
sbb
dec
adc
inc
enter
cs
pop
jno
sbb
or
cmp
cld
push
cmp
or
or
imul
cld
adc
ss
mov
push
call
xchg
pop
push
or
jmp
sbb
add
dec
(bad)
jne
cmp
jl
ja
adc
mov
jae
mov
clc
xor
mov
cmp
jmp
neg
inc
jmp
xor
xor
enter
and
and
movs
fld
bound
test
mov
jg
mov
add
mov
xchg
cld
xor
or
mov
dec
add
mov
mov
add
in
jbe
das
mov
popf
and
pop
lahf
push
test
(bad)
adc
mov
cld
mov
add
or
je
cmp
mov
mov
mov
add
mov
dec
in
rcr
adc
ja
or
sbb
or
out
adc
(bad)
test
cmp
daa
adc
or
mov
test
xchg
pushf
add
ja
loopne
call
aad
je
or
inc
neg
adc
push
pmaxsw
sbb
mov
or
rol
sub
dec
or
add
jbe
pop
leave
repz
xchg
cmps
lods
inc
test
jae
dec
mov
mov
ja
not
push
je
jp
dec
jmp
ficom
and
inc
push
push
adc
and
sbb
loopne
pop
jbe
test
push
adc
xchg
icebp
cld
push
pop
mov
jo
in
jg
loopne
sbb
ja
sub
scas
mov
xchg
dec
nop
pusha
or
xchg
add
sub
push
pop
pop
popa
aas
or
add
outs
outs
movs
dec
and
push
add
sbb
movs
lahf
and
xchg
add
adc
inc
push
mov
inc
sahf
add
jle
fldcw
add
push
mov
dec
add
and
dec
xlat
push
add
jne
out
retf
inc
sbb
inc
xchg
mov
and
lods
jmp
and
or
sti
ins
xor
dec
push
lods
sbb
or
aas
xlat
add
and
jmp
sbb
jecxz
pusha
scas
shr
adc
push
pushf
or
cmp
out
pushf
mov
bound
rcl
es
in
sub
sar
pop
inc
mov
push
aam
dec
push
adc
dec
pop
test
inc
add
pop
shr
adc
lea
push
sbb
pop
inc
add
clc
pop
xchg
scas
fs
stos
fidiv
shr
cmp
or
sar
sar
push
mov
neg
jmp
or
ror
push
mov
push
ror
lods
push
sub
mov
mov
push
mov
inc
dec
or
push
inc
cli
and
dec
mov
pop
std
cmp
jne
pop
pop
iret
pop
mov
ss
xchg
rcl
adc
std
js
add
jbe
and
scas
cmp
xchg
repnz
xchg
cld
(bad)
adc
sub
out
mov
ror
test
push
cwde
jge
imul
pop
mov
bswap
sub
jb
dec
pop
cmp
jbe
mov
jnp
(bad)
sub
jae
mov
cs
adc
dec
add
mov
jne
xchg
adc
jmp
movs
jmp
jne
test
ins
je
or
or
mov
add
pop
popf
out
or
or
adc
ror
in
(bad)
mov
adc
cwde
xchg
push
rcr
adc
repz
or
inc
push
inc
push
lock
jl
or
xor
ret
dec
fdivr
pop
jo
jbe
mov
sbb
bound
add
dec
adc
cmp
jl
repnz
sbb
ins
popf
xor
dec
inc
ret
xor
neg
and
mov
inc
movs
je
sahf
and
cmc
adc
outs
shl
push
stos
sbb
addr16
jbe
push
dec
adc
jmp
fisttp
or
inc
data16
idiv
mov
push
jbe
xor
mov
mov
pop
pop
lock
fnstenv
dec
mov
jns
jo
aad
cmp
jb
mov
adc
pop
or
xor
or
lods
sti
mov
enter
div
mov
inc
mov
je
dec
jne
loop
fsubr
cmp
in
and
adc
or
jecxz
loopne
sub
cs
inc
sub
in
ret
ja
sbb
mov
cld
stos
or
mov
jmp
pushf
fwait
mov
cmp
adc
shl
je
push
push
cmp
ja
and
sub
or
cli
sahf
jmp
lods
shl
aam
pop
inc
loop
ret
pop
hlt
mov
dec
cld
(bad)
scas
in
stc
mov
add
and
and
adc
and
sub
ja
mov
and
or
sub
iret
jne
xor
or
sub
sub
or
push
sub
xor
repnz
sub
mov
movs
sub
inc
dec
or
sbb
(bad)
mov
add
jmp
inc
or
and
lock
or
movzx
add
push
push
sbb
or
mov
pop
jp
and
js
cli
aam
cmp
stos
mov
dec
je
into
jne
adc
jle
add
and
enter
imul
imul
jbe
inc
xlat
mov
and
outs
js
sti
cmp
je
sti
or
and
sub
adc
sub
or
jo
add
push
adc
jp
loop
ja
inc
adc
scas
or
and
ret
xor
mov
(bad)
(bad)
mov
popf
scas
rcr
fist
adc
add
imul
xor
and
sub
shl
or
cmp
pop
mov
jmp
inc
jmp
cmp
add
rol
sub
js
mov
jge
lods
push
or
mov
inc
iret
add
mov
lods
mov
je
addr16
pop
jmp
out
cdq
cmp
sub
push
repz
(bad)
clc
test
push
(bad)
cld
outs
dec
nop
add
in
sub
xchg
xor
pop
fdivr
outs
xchg
les
shl
push
hlt
ror
adc
aam
jg
pop
mov
aam
jb
dec
push
mov
push
xlat
pop
(bad)
pop
aam
jne
out
sbb
cmp
xor
pop
cs
retf
in
out
and
js
jo
xor
xor
adc
jmp
lds
scas
inc
inc
jmp
or
ins
cwde
jmp
push
mov
inc
cmp
jmp
je
pusha
push
scas
add
xor
mov
jno
or
loopne
pop
adc
gs
ret
sbb
jmp
or
xor
dec
mov
inc
gs
and
mov
adc
dec
mov
js
push
jp
push
or
dec
adc
ins
ror
adc
and
jge
nop
sbb
and
push
or
(bad)
repnz
jbe
mov
mov
mov
cmp
add
mov
inc
cwde
mov
lods
inc
enter
push
call
mov
mov
adc
jb
and
or
mov
push
adc
add
jno
or
add
mov
xchg
lock
(bad)
mov
cmps
imul
xor
es
xor
and
dec
test
dec
dec
mov
frndint
xchg
fld
(bad)
fcomp
fstsw
fwait
mov
test
je
fidiv
mov
pop
fbstp
lea
mov
inc
sub
mov
shr
and
js
xor
or
rol
jge
jns
mov
adc
jo
cmp
cli
mov
cmp
jae
cmp
jb
mov
js
dec
and
cmp
push
pusha
xor
jmp
mov
cmp
inc
call
push
or
add
out
or
fs
scas
fdivr
or
test
add
mov
push
sub
or
mov
or
jl
mov
retf
mov
dec
add
std
aam
inc
mov
mov
or
inc
or
mov
retf
cmovb
setnp
sbb
inc
dec
sbb
or
inc
jne
mov
and
jne
loop
pop
bound
cmp
aas
and
add
jmp
mov
or
push
mov
pop
jmp
cmp
sbb
mov
sbb
pop
sahf
sbb
out
mov
bound
and
mov
fwait
jle
fs
shr
fldz
js
mov
sbb
xor
mov
icebp
mov
xor
int3
scas
cmp
or
push
ja
js
pop
cmp
je
sub
and
push
movs
xor
aaa
mov
(bad)
push
popa
(bad)
ss
bound
pushf
rol
mov
fchs
ret
add
pop
inc
cld
fistp
jmp
fstp
and
or
add
xor
mov
jo
lods
add
push
retf
and
sub
bnd
mov
hlt
add
or
dec
or
add
jmp
inc
mov
jns
dec
stc
mov
pop
lock
push
imul
pop
cmp
dec
jb
dec
add
add
sub
loopne
fwait
push
(bad)
rcr
adc
inc
cmp
mov
sbb
jge
xchg
add
repnz
mov
mov
pop
cs
enter
add
in
daa
adc
aad
or
add
lahf
sub
push
pop
dec
and
loopne
(bad)
sub
cmp
mov
rcr
daa
test
rol
jle
sti
sbb
adc
push
sbb
sub
out
and
ja
imul
pop
loop
or
sub
jge
rcl
push
push
push
fiadd
adc
lock
sbb
ins
lock
push
inc
or
mov
fcmovnu
push
or
push
cdq
mov
xchg
pushf
mov
adc
js
xor
and
fld
inc
inc
sbb
sbb
and
jle
shl
fwait
push
mov
fstp
fwait
mov
mov
mov
cs
repnz
call
out
or
adc
pushf
int3
(bad)
pop
xor
shr
data16
leave
(bad)
jle
into
pop
sub
add
loope
adc
push
mov
aaa
sub
test
or
adc
mov
loopne
push
xchg
addr16
pop
adc
adc
and
mov
loopne
mov
fistp
sub
push
jns
xchg
or
xor
rcl
and
push
xor
mov
(bad)
mov
imul
dec
xor
push
adc
inc
push
cmp
je
xlat
shr
add
rol
or
cwde
jl
add
or
adc
or
push
jo
inc
sbb
test
dec
inc
push
dec
xchg
js
sub
ins
and
adc
cdq
dec
jne
mov
loope
add
(bad)
cli
jne
mov
mov
loopne
dec
lea
lock
pop
lock
arpl
jle
pusha
imul
stos
jmp
or
rcl
rcr
test
inc
retf
(bad)
hlt
rol
sub
or
ins
iret
fcmovne
sbb
(bad)
xor
inc
and
and
sub
mov
cmp
push
dec
clc
mov
ror
cmp
jae
ret
mov
out
ss
imul
imul
cmp
ret
(bad)
or
pop
push
sbb
xchg
pop
add
cmp
and
or
clc
push
les
lea
ror
mov
mov
and
adc
adc
call
xor
mov
icebp
add
repnz
inc
mul
pusha
jmp
cmp
pop
ss
ret
addr16
and
call
or
or
enter
loopne
mov
and
fldenv
mov
imul
hlt
imul
add
test
outs
push
add
std
add
sub
int3
sbb
test
mov
aaa
adc
hlt
fisubr
(bad)
rcr
adc
sub
(bad)
ja
sub
add
or
pop
ins
add
push
cmp
(bad)
xor
ja
adc
push
lea
add
inc
dec
jne
sub
dec
mov
aas
and
or
and
mov
add
repnz
shl
ins
popf
push
add
or
xor
fild
inc
std
std
(bad)
mov
push
and
rcl
mov
outs
jl
rcr
xchg
xchg
call
xchg
or
push
dec
jg
sub
call
jg
xchg
pop
das
pop
test
clc
pmuludq
mov
ror
add
pop
xor
push
and
dec
pop
add
stc
mov
jmp
jo
inc
and
add
stos
adc
lods
mov
inc
ffreep
and
cmp
or
pusha
(bad)
sub
mov
fcom
and
sar
repnz
mov
pop
sbb
ret
in
sar
dec
pop
sbb
lock
mov
mov
sub
fistp
(bad)
dec
cmp
jb
adc
push
mov
inc
jmp
(bad)
sbb
cld
rol
dec
inc
inc
add
ret
adc
and
mov
(bad)
pop
dec
jmp
add
add
xchg
sahf
inc
and
and
fnsave
dec
inc
push
pusha
push
push
loopne
jb
or
push
push
dec
or
sbb
ins
xor
dec
push
jmp
cmp
cs
loop
inc
nop
scas
sbb
jecxz
sub
adc
les
push
aam
movzx
mov
cli
test
jne
outs
adc
adc
mov
jle
loopne
push
imul
fwait
lods
pop
sbb
add
sub
xchg
and
sub
aaa
inc
add
sub
clc
pop
push
mov
add
jb
mov
pop
sbb
lahf
and
je
mov
add
iret
xor
add
std
push
sbb
pop
mov
and
adc
(bad)
icebp
push
jnp
dec
add
and
or
mov
das
rcl
mov
movs
sbb
lock
dec
sbb
iret
sbb
in
add
aas
adc
ja
sub
dec
mov
or
out
shl
loope
aas
inc
call
dec
aam
test
or
mov
loopne
mov
cmps
add
out
pop
sub
jne
inc
jbe
(bad)
push
or
mov
test
xor
add
(bad)
das
movs
cmp
je
mov
sub
add
outs
in
hlt
adc
scas
jcxz
sub
call
pop
lock
push
lea
or
cmps
mov
push
dec
xor
push
stc
inc
jecxz
outs
loop
jp
outs
pop
push
repnz
jge
mul
xchg
pop
jo
loop
cmp
sar
rcl
push
push
lods
add
fldcw
inc
aam
in
adc
cld
out
cld
repnz
pop
jle
pushf
dec
pop
inc
push
sub
xchg
add
jge
mov
je
imul
pop
mov
add
sbb
sbb
imul
xor
mov
pusha
je
or
dec
pusha
mov
xchg
add
mov
sbb
std
cwde
sbb
jno
cmp
push
push
add
jo
jnp
(bad)
push
shl
add
and
pop
add
inc
jbe
xchg
or
popf
loopne
pop
add
dec
adc
add
imul
dec
and
add
dec
cmp
scas
in
jne
sbb
xchg
addr16
inc
mov
xchg
add
and
sahf
ins
icebp
movs
prefetch
or
push
add
je
and
add
bound
cmp
jne
mov
hlt
into
dec
mov
pop
sbb
inc
dec
add
dec
and
push
call
add
or
fild
add
das
sbb
rcl
fmul
sub
cs
push
pop
pusha
or
jg
push
rol
xchg
(bad)
pop
pop
inc
jo
and
push
jmp
jge
xor
xor
and
punpcklbw
xlat
in
jecxz
mov
push
(bad)
and
xor
cmps
(bad)
sub
pop
fadd
inc
loope
mov
cmps
dec
ret
adc
mov
(bad)
loopne
jne
mov
ja
pop
loopne
mov
fidiv
ja
bound
cmps
jnp
mov
and
cmp
mov
pusha
or
lahf
sbb
push
or
push
jbe
cs
push
pop
add
or
or
or
ds
add
jo
push
and
mov
xor
jmp
es
cmp
mov
pop
out
jns
hlt
and
sbb
or
add
and
inc
(bad)
lods
ret
ret
xor
fisub
das
popf
dec
push
lea
je
mov
test
mov
aaa
jb
aam
and
pop
jmp
add
shr
jbe
jmp
sbb
mov
inc
cld
lods
std
enter
inc
and
cmovnp
aas
push
loope
adc
fild
icebp
dec
je
dec
xor
jo
pop
popa
inc
sti
mov
lds
sub
inc
aad
mov
pop
mov
repnz
push
and
xor
js
popa
leave
add
mov
pop
inc
fsubp
jne
xor
cs
je
cmps
ds
or
mov
mov
jle
dec
or
clc
dec
jg
into
call
mov
fisttp
add
push
jmp
or
(bad)
fcmovnu
add
sub
push
cmp
dec
mov
sub
mov
inc
mov
in
sub
adc
add
jne
bound
jl
add
jo
fisub
movs
pop
movs
lods
xor
stos
je
xor
mov
add
mov
add
sbb
fst
fmul
add
hlt
loop
clc
or
and
and
and
cdq
in
repnz
lock
adc
les
jne
xchg
add
lock
clc
loop
sub
cmp
inc
xchg
mov
adc
mov
add
add
scas
mov
inc
jns
sbb
dec
je
fst
jmp
das
xchg
xchg
mov
add
add
add
mov
pusha
adc
xor
sub
adc
pop
arpl
inc
push
xchg
add
jge
add
add
ins
hlt
add
imul
mov
mov
jecxz
adc
push
push
test
push
or
mov
das
add
aas
addr16
sub
or
icebp
jmp
mov
push
(bad)
xor
or
add
push
inc
in
add
(bad)
or
add
adc
add
sub
fadd
hlt
movs
xchg
sbb
adc
adc
sbb
clc
in
mov
cmc
and
push
pop
or
adc
cwde
dec
push
pop
sub
daa
and
add
call
sbb
inc
pop
cdq
popf
cld
sub
inc
or
les
push
push
pop
jge
shl
push
lock
add
lea
and
(bad)
stos
mov
mov
xchg
(bad)
loope
sbb
test
mov
mov
dec
mov
sub
jmp
mov
and
jp
sbb
add
jne
sbb
jecxz
test
xchg
jno
arpl
pusha
(bad)
fsub
cmps
xchg
xor
pop
mov
mov
xchg
jp
adc
and
shr
and
xor
mov
mov
xchg
mov
push
push
adc
outs
pop
cmp
and
enter
mov
in
mov
out
mov
leave
xor
dec
rol
mov
sub
jl
(bad)
sti
aad
push
and
stos
xor
div
add
mov
mov
xchg
add
pop
test
jb
int3
sbb
mov
in
mov
push
mov
xchg
xor
mov
and
and
mov
cmp
jge
(bad)
cli
rol
ins
sti
rol
push
jecxz
inc
cmp
sbb
jmp
into
gs
hlt
ja
add
add
mov
jno
mov
push
push
or
movs
aad
and
outs
jmp
cli
mov
cmp
jl
lock
outs
xchg
pusha
pop
mov
aas
push
push
popa
and
jo
gs
pop
test
lock
jle
dec
ins
pop
out
ja
or
adc
or
push
adc
enter
xor
xchg
add
test
push
or
mov
lahf
xchg
xor
sbb
in
(bad)
call
push
or
jbe
outs
xchg
xchg
jnp
mov
add
inc
add
rep
popa
popf
adc
inc
outs
push
or
mov
call
inc
mov
mov
jmp
movs
aad
sub
mov
cvtps2pd
or
add
and
jmp
ror
adc
cmp
inc
push
push
or
aas
xchg
dec
mov
cmp
jg
xchg
xchg
or
sub
add
xlat
push
sbb
shl
xchg
push
sub
and
adc
xor
or
cld
gs
inc
aam
mov
add
das
test
jge
loope
nop
xchg
xor
mov
arpl
or
add
repz
sbb
shl
mov
push
mov
addr16
int
mov
fsubr
or
and
(bad)
int3
mov
jle
push
call
sbb
sub
pushf
mov
mov
or
rcr
cmp
jnp
outs
fmul
rol
sub
cmp
in
retf
sbb
push
jecxz
mov
repnz
jb
daa
(bad)
loopne
dec
xor
inc
jmp
inc
in
jmp
add
loop
sbb
push
out
cs
push
sti
out
inc
inc
out
lock
push
movs
fist
inc
in
test
adc
jmp
push
mov
jne
jge
add
in
add
sub
test
out
add
push
jmp
clc
cmp
cmp
or
jmp
jnp
cwde
repnz
pusha
or
or
add
hlt
inc
jmp
sub
cmp
syscall
jmp
jp
popa
fidivr
jl
inc
adc
and
mov
and
mov
xchg
adc
mov
ret
ret
add
rcr
aam
lock
add
jge
lods
dec
push
or
call
repz
push
cmp
xor
add
jno
lahf
jecxz
repz
push
sbb
das
add
add
add
add
jo
xor
clc
pusha
and
dec
dec
adc
pop
jae
arpl
push
xor
and
(bad)
jmp
push
sbb
mov
jo
push
or
outs
icebp
xchg
clc
pop
stc
pop
jge
xchg
cmp
pop
test
cmps
ins
ret
jge
add
rcl
push
pop
rcr
ins
je
jnp
sti
add
pop
xor
hlt
iret
nop
xchg
imul
mov
sbb
cmp
fistp
cmp
or
aaa
or
jne
pop
push
jge
or
repnz
jp
sbb
inc
hlt
div
call
sti
xchg
sub
jp
add
add
sbb
fs
clc
xor
and
cmp
add
mov
pop
cmp
mov
xchg
lods
push
mov
or
add
sbb
setl
cmp
mov
in
enter
clc
sub
sub
and
dec
and
jb
and
adc
cmp
cmp
and
and
shr
call
mov
jp
(bad)
push
mov
pusha
lock
pop
dec
dec
mov
ja
cmp
test
ja
dec
jge
jmp
lock
or
dec
adc
mov
jle
lahf
out
ds
add
jb
fsub
sbb
in
mov
pop
test
pop
jecxz
aaa
jmp
fild
add
ss
or
mov
sub
mov
in
test
ins
and
loopne
push
sub
sub
call
cmp
jl
call
push
or
dec
fmul
and
xor
dec
adc
or
(bad)
shl
fimul
cld
out
push
fisttp
or
pop
fcomp
dec
aaa
in
and
jmp
pop
unpcklps
pop
mov
out
add
inc
iret
mov
cmps
pop
jno
inc
push
scas
(bad)
sub
dec
mov
xchg
adc
movs
add
add
dec
push
loopne
cmps
cld
lahf
mov
inc
push
jmp
ret
mov
push
cld
xchg
cs
(bad)
cwde
add
xor
push
rcl
and
pusha
dec
mov
and
add
xor
pop
xlat
inc
add
cmps
sub
pop
sar
cmovo
pop
or
and
mov
sbb
enter
pop
rcr
or
outs
sub
inc
dec
test
scas
add
ret
jle
mov
mov
pop
ins
stos
(bad)
pop
pop
loope
faddp
iret
daa
dec
jne
ret
jo
add
push
or
pusha
das
xor
adc
add
adc
(bad)
shr
add
xor
loopne
dec
sahf
mov
inc
or
add
inc
sbb
or
call
movs
cdq
pop
ds
pusha
and
mov
cmp
js
jp
sbb
in
fsub
jmp
sbb
rol
xor
add
pop
pop
xor
ret
aaa
sub
or
cmp
push
sbb
ror
fadd
inc
imul
dec
mov
xor
sub
mov
mov
imul
dec
aam
mov
xor
push
sub
sbb
mov
pop
mov
fs
rol
fst
pop
pop
aaa
les
add
sbb
jge
xchg
daa
ins
xchg
int3
aas
inc
enter
and
in
enter
call
shl
sbb
add
sbb
test
dec
mov
jp
xor
sub
int
loope
aas
sbb
mov
stos
xor
cmp
push
inc
push
mov
test
or
pop
or
add
inc
sub
and
inc
mov
shl
add
(bad)
(bad)
push
xchg
dec
cmp
das
adc
xchg
sub
cmps
daa
or
or
xlat
add
push
mov
cmp
in
pop
fsubr
stos
push
jl
sbb
in
iret
sub
(bad)
aad
in
or
jmp
lea
aaa
clc
xlat
jle
and
pop
or
pop
lods
pop
mov
push
xor
sub
push
fnstsw
sub
mov
nop
inc
sbb
sahf
push
xchg
mov
jl
test
pop
loope
add
jne
or
ret
jo
daa
lock
and
sub
ret
cmp
(bad)
and
mov
add
js
test
pmaddwd
gs
dec
lea
lahf
sub
je
push
push
lea
sbb
lock
inc
inc
(bad)
loopne
and
dec
jne
fxch
cmp
sub
inc
lea
and
pop
inc
fild
cwde
aas
imul
adc
add
outs
inc
jo
inc
dec
mov
clc
dec
test
add
lods
xor
jne
jl
jne
jo
jae
outs
sub
adc
lea
and
cs
loopne
sahf
movs
nop
lods
xchg
ss
addr16
pop
dec
imul
fisttp
(bad)
clc
dec
mov
push
or
add
pop
xlat
ins
icebp
adc
push
add
cmps
mov
popa
cmp
add
and
xor
ret
add
loopne
push
sbb
(bad)
xor
aad
push
mov
push
add
aam
push
clc
std
push
jb
mov
fisttp
repz
loope
push
and
jmp
repz
xor
inc
inc
test
(bad)
and
cmp
dec
inc
cwde
add
test
leave
jmp
pop
push
push
xor
pop
mov
gs
mov
mov
fadd
adc
push
enter
(bad)
dec
fisttp
xor
inc
call
dec
ins
or
jno
lea
inc
loop
ror
xchg
dec
jo
mov
pop
sub
push
push
pusha
add
js
mov
sbb
push
test
inc
cmp
xchg
pop
cwde
shr
dec
sbb
mov
pop
into
push
jne
enter
inc
lods
xor
dec
push
pop
(bad)
jge
xor
and
ins
mov
and
mov
pop
inc
or
adc
sbb
xor
push
pusha
mov
mov
shl
add
test
add
add
test
stos
neg
call
add
cmp
je
inc
cmp
or
inc
adc
test
pop
or
leave
adc
or
lahf
push
inc
ins
out
push
push
push
xchg
sub
cmp
inc
xor
test
xchg
ds
ja
inc
inc
inc
or
(bad)
cmp
cmp
push
in
sti
(bad)
sar
(bad)
(bad)
aad
mov
xchg
aas
ror
cld
mov
push
lock
or
lods
mov
fidivr
sbb
pop
lock
jne
push
push
in
cmps
dec
loope
push
add
pop
pop
test
movs
mov
cmps
sbb
ss
pushf
stc
jo
xchg
pop
pushf
stc
mov
les
rol
sbb
test
cmp
lods
outs
add
xlat
inc
cmp
sbb
in
outs
inc
adc
push
in
call
aaa
mov
dec
sub
test
popf
lock
mov
cs
add
add
out
movs
pop
mov
mov
popf
and
add
ret
test
inc
add
fsub
pop
mov
into
or
aaa
movs
mov
(bad)
sbb
retf
push
jb
inc
add
clc
lds
call
xchg
or
leave
jb
dec
cmp
pop
call
mov
adc
and
lods
or
pop
fiadd
push
mov
or
mov
mov
add
loope
or
push
push
jne
cwde
lea
and
lea
push
sbb
test
pop
les
lock
mov
aaa
add
loope
(bad)
and
cdq
xor
js
in
add
(bad)
fiadd
inc
pushf
ror
sbb
or
popa
cmp
mov
mov
jns
cmp
jo
loope
push
pop
or
daa
mov
push
inc
pop
dec
in
mov
bound
inc
and
js
test
gs
bound
rol
daa
push
aad
fsub
mov
sub
add
dec
xor
jle
mov
test
std
add
adc
add
dec
jecxz
adc
dec
scas
das
dec
xor
sub
inc
add
or
adc
ins
popa
inc
mov
add
sbb
movs
inc
pop
and
scas
nop
lea
outs
mov
push
sub
cmp
sar
jnp
add
and
call
imul
inc
mov
sti
pop
aaa
dec
adc
nop
sub
cmp
xor
jb
pop
test
cmp
xchg
not
lods
outs
add
dec
pop
cmps
sbb
mov
xchg
ds
movs
push
ss
inc
push
lea
lods
mov
cmp
mov
pop
mov
sub
xchg
adc
mov
test
pop
adc
mov
add
idiv
test
fstp
inc
mov
gs
push
lock
pop
inc
xchg
data16
test
pop
pushf
inc
mov
and
push
adc
adc
stos
adc
je
push
aaa
adc
rcr
push
or
test
add
cs
shl
pop
push
push
fisub
jecxz
xor
push
inc
jge
pop
or
cld
or
pop
pop
ret
iret
or
sbb
sti
cwde
addr16
js
xlat
add
inc
adc
jge
add
sbb
jg
in
in
or
jl
and
icebp
sbb
pop
pusha
jmp
shl
push
dec
add
adc
mov
pop
pop
out
sub
sar
adc
jmp
cmp
and
(bad)
inc
mov
ins
std
add
inc
ret
and
call
sub
xchg
fidiv
pop
mov
mov
push
or
mov
stos
scas
ret
ret
nop
shl
xchg
ja
(bad)
mov
mov
jno
dec
jecxz
and
hlt
cmp
mov
mov
fisubr
sbb
jge
mov
loop
in
jo
lock
or
cmc
(bad)
clc
in
jmp
into
push
loopne
nop
outs
dec
inc
or
adc
(bad)
test
cmps
xchg
popf
inc
dec
fadd
push
pop
or
imul
mov
shl
xchg
retf
leave
pop
and
push
cmp
in
stc
dec
je
jmp
xor
inc
xor
sub
and
(bad)
stc
and
add
rol
add
pop
or
or
push
loop
nop
rcl
add
fs
pop
(bad)
mov
adc
mov
ins
jl
adc
adc
repnz
xchg
or
arpl
clc
add
test
sbb
xchg
jmp
sbb
sbb
loope
sbb
test
or
inc
les
jne
mov
or
sbb
mov
xchg
in
sahf
inc
mov
mov
add
mov
adc
sub
sub
jge
fsub
xor
or
cld
push
(bad)
enter
sbb
in
shr
or
pushf
outs
ja
pop
pop
test
icebp
stos
mov
mov
push
mov
cwde
pop
pushf
mov
dec
jae
jge
movs
mov
add
ins
mov
(bad)
pop
clc
loope
int3
lea
adc
inc
add
dec
dec
push
(bad)
adc
mov
pop
xchg
mov
gs
cld
or
adc
and
adc
fcomi
add
sub
pop
jle
pop
fs
js
xchg
jb
cmp
jle
mov
push
cmp
adc
xchg
jbe
push
ins
inc
sbb
loopne
mov
scas
dec
inc
mov
dec
pop
scas
and
push
ret
lahf
add
bound
ror
out
add
pop
mov
loopne
sbb
add
or
push
add
and
mov
nop
xchg
int
sub
ins
mov
ret
sbb
scas
mov
mov
jo
out
out
stc
sub
call
dec
or
jg
imul
add
push
dec
sbb
arpl
xchg
jnp
std
hlt
sbb
mov
xor
inc
xor
pop
nop
xchg
jbe
inc
or
adc
push
lock
dec
in
ror
rol
adc
and
mov
and
das
sub
cwde
lods
add
js
sar
add
sbb
xor
xlat
jno
pop
adc
and
lods
mov
add
pop
dec
add
fild
mov
movs
mov
sub
adc
ret
in
mov
test
inc
pop
pop
push
xlat
add
jg
or
out
fbstp
(bad)
mov
cmp
adc
inc
sub
xor
fimul
out
ret
add
add
xor
(bad)
and
vprotd
out
mov
or
sbb
lea
adc
rol
add
jo
arpl
mov
ror
mov
mov
das
or
imul
sub
jo
sub
shl
mov
or
mov
push
lea
fnclex
push
sbb
call
push
mov
xor
add
adc
adc
stc
and
adc
sub
mov
mov
pop
add
xchg
pusha
adc
mov
pop
mov
jae
xchg
add
jp
inc
xchg
cmps
ffreep
sbb
mov
inc
add
and
sbb
or
and
pop
sbb
push
loopne
in
addr16
or
add
add
loopne
dec
dec
sar
mov
in
and
or
adc
cmp
(bad)
adc
sbb
and
cmp
jne
add
or
adc
mov
push
dec
ficom
adc
add
imul
sbb
cmps
or
cdq
xlat
js
adc
or
dec
test
mov
imul
or
cmp
pop
xlat
adc
js
adc
inc
inc
and
and
call
ret
call
mov
loope
pushf
out
inc
sar
push
(bad)
inc
xchg
or
add
add
cmp
or
retf
rol
and
mov
pop
dec
push
cmp
or
cdq
aad
adc
and
and
fiadd
ss
(bad)
(bad)
pop
add
cmps
xor
jnp
add
xor
(bad)
sub
out
frstor
or
sbb
and
pop
pop
add
sar
adc
test
rcl
adc
or
add
pop
adc
ret
xor
stc
adc
fiadd
xor
cmp
jl
shl
jae
xchg
adc
mov
pop
test
call
popa
push
xchg
xlat
pushf
out
ins
cmp
mov
sbb
push
and
mov
das
jecxz
cli
jnp
mov
ret
jge
dec
dec
sub
cmp
jl
and
mov
sbb
push
rcl
add
fimul
int3
sbb
xor
inc
jg
icebp
fistp
cmp
add
sti
dec
jge
mov
sub
adc
sahf
pop
mov
jmp
dec
add
mov
add
enter
out
mov
icebp
push
dec
mov
stos
push
lock
pop
jnp
sar
ret
repz
shl
adc
mov
(bad)
inc
adc
push
in
or
sbb
add
pop
jmp
rsqrtps
(bad)
push
push
ret
cdq
inc
pop
add
or
adc
add
push
inc
inc
add
das
lock
test
mov
add
xor
jge
cmp
pop
inc
ficom
push
and
and
mov
sar
add
and
push
gs
adc
imul
or
pop
sete
bound
pop
xor
dec
inc
in
test
xor
(bad)
mov
rcl
call
in
out
xchg
mov
das
push
mov
mov
push
mov
data16
mov
pop
test
int3
xor
mov
xor
rol
es
sbb
dec
push
loope
xor
add
adc
add
clc
lds
js
pop
test
nop
call
js
add
sub
fdiv
adc
inc
inc
inc
and
jb
pushf
lock
in
jns
cvttps2pi
nop
jo
mov
call
mov
sbb
sub
aaa
pop
sub
sub
inc
mov
push
sbb
clc
(bad)
sbb
retf
jne
outs
fistp
add
or
push
pop
jne
pop
test
ins
add
in
imul
cmps
fmul
add
or
add
mov
dec
jbe
mov
xchg
adc
in
xchg
push
shr
mov
cld
pop
div
ret
mov
aam
out
sub
dec
sub
mov
(bad)
scas
add
pop
xor
lea
xlat
push
adc
sbb
fistp
test
sub
xor
xchg
arpl
fild
cmp
test
mov
arpl
inc
(bad)
mov
xchg
cmps
xor
fs
push
inc
lods
cs
mov
push
xor
ins
pop
inc
inc
mov
std
icebp
lods
add
frstpm(287
mov
repnz
dec
mov
xchg
push
nop
retf
and
vmovntps
xchg
int3
lods
pop
scas
or
out
test
adc
dec
(bad)
int
inc
clc
mov
and
sbb
xor
test
mov
sub
pop
sar
inc
test
dec
lods
jnp
sbb
movs
sbb
imul
push
adc
ret
lock
or
or
loop
ret
mov
or
xchg
dec
mov
test
xchg
lock
lock
imul
cmp
sub
popf
add
pushf
sbb
fdivr
or
cmp
push
outs
and
and
mov
stos
sub
jne
add
cdq
adc
xor
test
jge
jge
arpl
jne
mov
adc
push
add
call
add
add
(bad)
or
dec
inc
loopne
int
cmp
lods
or
pop
test
mov
dec
pop
adc
push
add
xchg
ret
mul
xchg
add
push
push
push
push
aaa
mov
mov
cdq
sub
mov
jbe
mov
or
add
sub
jne
clc
and
or
and
or
jae
or
adc
fs
dec
ret
mov
ins
pop
adc
add
add
or
mov
pop
pop
inc
test
push
hlt
popa
je
inc
test
xor
or
sub
mov
cmp
es
mov
aaa
adc
lock
cmp
cmp
pushf
fs
ins
imul
adc
retf
cmp
lahf
xor
mov
cmp
hlt
push
sahf
xor
or
ficomp
jmp
inc
shl
shr
or
mov
cld
(bad)
or
xor
repnz
add
adc
push
or
shl
xor
sbb
mov
mov
into
sbb
aaa
mov
(bad)
adc
inc
jl
pop
jg
or
xor
inc
jmp
rol
sti
pop
pop
pop
ret
pop
push
fmul
bound
adc
inc
push
and
pop
pusha
(bad)
enter
fnsave
jne
mov
pop
cmps
sbb
add
js
fadd
sub
adc
ss
jmp
adc
mov
xchg
sub
push
inc
ret
sti
xor
lea
cs
dec
fwait
fs
add
jb
dec
inc
or
fisttp
or
jmp
cmp
inc
lea
push
lock
dec
cmp
adc
lock
jl
adc
in
fild
cli
cmp
jne
popf
mov
mov
sbb
xchg
cmp
xchg
adc
inc
clc
add
cmps
or
xchg
push
sar
inc
jl
cmp
lock
adc
pop
push
sbb
or
add
sahf
pusha
mov
mov
ja
aas
in
das
pusha
pop
push
dec
pop
pop
aaa
mov
(bad)
shl
es
in
add
cmps
lahf
pop
pop
push
lea
ret
hlt
mov
add
add
bound
or
mov
push
jns
mov
ss
in
and
dec
push
inc
mov
dec
fisubr
scas
mov
xor
and
xor
inc
ins
push
add
jne
fwait
pop
nop
lock
into
add
stos
ror
adc
enter
push
mov
in
push
and
mov
fsubr
cmp
hlt
ins
and
pop
ret
outs
inc
sbb
mov
je
outs
adc
je
inc
out
loope
inc
xor
push
xchg
popa
add
inc
and
dec
stos
push
ja
into
push
sub
pop
push
cmp
mov
dec
inc
or
adc
inc
mov
loop
call
inc
cmp
jne
movzx
cld
add
fbld
push
pop
sbb
and
aam
cmps
and
jg
cli
xor
and
cmps
push
les
adc
inc
and
mov
push
or
shr
mov
ins
xchg
fwait
jo
push
push
mov
aaa
add
add
in
jne
push
push
add
xor
(bad)
int
sub
iret
jp
fadd
inc
jns
fs
jbe
push
fwait
inc
mov
adc
adc
jmp
dec
inc
pop
fs
or
add
adc
add
pop
add
add
and
cli
cmp
sbb
rcl
in
xor
push
rol
add
inc
or
mov
jmp
push
inc
inc
arpl
mov
dec
sbb
es
mov
lea
loop
sub
mov
icebp
push
dec
(bad)
add
pop
adc
xor
daa
inc
sbb
in
add
push
xchg
adc
push
aaa
xlat
pop
pop
popa
or
in
scas
fsubr
sahf
bound
into
mov
cmp
test
cmp
imul
add
popf
inc
inc
and
pop
adc
or
xchg
shl
or
xor
sbb
jmp
push
or
xchg
pop
(bad)
cmp
sbb
cmp
dec
lock
ret
hlt
mov
sub
or
jge
dec
pop
add
and
sub
inc
sbb
push
inc
arpl
and
jnp
add
es
and
mov
in
sub
(bad)
arpl
hlt
jns
pop
fild
sub
loop
or
pop
or
add
ret
xor
inc
call
cmp
push
sub
fadd
adc
out
iret
pop
mov
jns
xor
push
dec
cmps
sbb
lods
fcmove
es
and
ror
push
rol
xor
xchg
add
jne
or
sbb
adc
dec
sub
aaa
loope
mov
jmp
sbb
dec
sbb
or
rol
test
ret
add
movs
ja
xlat
gs
pop
push
ja
pop
mov
gs
and
ins
or
pop
imul
push
not
mov
mov
push
fisub
inc
jecxz
ins
call
cmps
ror
pop
lds
sar
adc
enter
jbe
push
imul
ins
or
and
push
pushf
lahf
or
dec
es
test
test
or
and
mov
mov
rcr
jne
mov
fidivr
push
add
loopne
inc
jmp
arpl
data16
stos
xchg
add
ret
and
in
cmps
xor
push
or
jno
sbb
add
xor
cld
mov
mov
lods
and
mov
mov
dec
cmp
lea
nop
add
push
add
add
lea
shl
xchg
push
inc
lock
mov
mov
inc
inc
or
add
aad
aam
pop
push
rol
adc
sar
rcl
xor
ret
int
fmul
mov
test
mov
pop
imul
xor
pop
sahf
add
fimul
pusha
pop
and
and
pop
sub
fsubr
pop
out
mov
dec
data16
lock
imul
nop
or
jg
nop
loop
inc
add
add
sbb
scas
jno
aas
mov
dec
fprem
jl
inc
inc
xor
jge
sbb
je
jmp
into
(bad)
cmp
mov
scas
daa
lock
out
mov
(bad)
add
icebp
and
xchg
daa
pop
int
lock
daa
pop
scas
xor
push
and
adc
and
(bad)
jo
add
mov
add
fcom
mov
lds
aaa
push
add
js
stos
sub
fwait
lahf
fcomp
sub
fild
fs
es
rol
sbb
dec
rcr
mov
dec
out
mov
sbb
inc
(bad)
je
cmp
push
popa
test
lock
sbb
fadd
xor
xlat
retf
add
push
dec
clc
xor
mov
enter
dec
cld
gs
jo
sbb
or
mov
(bad)
jp
adc
or
pop
mov
aam
outs
mov
mov
les
mov
jnp
mov
ror
daa
xchg
enter
(bad)
(bad)
loopne
dec
or
or
xor
cmps
add
js
push
ds
leave
(bad)
adc
sbb
ret
call
movs
mov
mov
push
push
rcl
xor
stos
in
bound
pop
xor
xchg
jge
mov
fidivr
ins
shl
inc
enter
les
cmp
sub
inc
arpl
out
adc
mov
mov
jnp
in
sub
xchg
jle
push
cvtps2pd
push
dec
push
push
mov
or
jmp
pop
movs
mov
mov
inc
clc
popa
les
nop
lock
cmp
rol
xor
jo
lock
mov
(bad)
push
pop
adc
or
xor
adc
lock
and
inc
push
iret
adc
in
xor
pop
mov
push
(bad)
or
inc
mov
dec
fist
jo
call
cmps
sub
pop
push
push
cld
jnp
adc
add
nop
push
pop
and
inc
loope
add
sets
xlat
mov
inc
sbb
sbb
mov
retf
push
sub
mov
repnz
stos
dec
mov
jne
adc
adc
retf
test
imul
push
mov
pusha
(bad)
sub
and
and
pop
out
test
sbb
pop
adc
ja
or
in
mov
clc
push
mov
sub
cmp
inc
adc
test
pop
sub
inc
add
ins
push
ret
jl
dec
dec
mov
add
fdiv
dec
into
test
call
xchg
cld
sub
adc
xchg
pop
mov
rcl
xchg
js
sbb
sbb
or
pop
sub
movs
mov
inc
je
test
jmp
jge
mov
pop
repnz
jae
push
mov
mov
shl
int3
mov
hlt
loope
push
clc
dec
push
les
iret
rcr
(bad)
sub
cmp
jle
cmps
and
call
xor
add
add
test
mov
cwde
dec
adc
mov
inc
ins
popa
jo
add
pop
outs
or
or
and
sub
ss
cmp
adc
pop
rcl
pushf
test
pusha
lahf
popf
aad
mov
in
push
adc
ffree
inc
(bad)
and
fcmovne
aaa
xchg
mov
aas
fnsave
lock
jae
or
jp
mov
cmp
arpl
or
ret
jno
daa
xor
jae
jo
xor
or
add
or
pop
outs
or
or
lock
pop
add
rcr
cmps
push
mov
sub
sbb
test
inc
or
test
or
and
add
ja
loopne
xchg
or
call
dec
push
(bad)
sti
or
push
clc
bswap
jl
cmp
and
les
mov
test
push
inc
movs
or
rol
fwait
daa
add
mov
imul
pop
push
rol
push
inc
push
mov
stc
pop
mov
icebp
(bad)
jmp
mov
shr
(bad)
leave
sbb
int3
imul
loopne
ins
je
fmul
loope
lods
(bad)
cmps
cmp
data16
cmps
xor
mul
adc
and
sub
xchg
dec
pop
jno
hlt
loop
inc
test
aas
cmp
xchg
ror
enter
mov
int3
sbb
and
int3
int3
shl
in
popa
jno
rcr
outs
cld
xchg
shl
xor
add
rcl
enter
or
les
inc
cmp
pop
dec
adc
mov
xor
das
push
push
pop
sbb
mov
test
push
xor
push
xchg
mov
mov
outs
mov
push
mov
inc
(bad)
and
and
add
pushf
inc
loopne
sbb
inc
adc
rol
bnd
pusha
outs
sub
xchg
shr
dec
pop
and
sbb
xchg
pusha
dec
popa
dec
push
dec
or
in
inc
adc
jl
adc
adc
sub
xlat
add
add
or
adc
xchg
and
es
cmp
outs
xor
fsubr
adc
xor
je
or
add
cwde
add
sub
add
pusha
sbb
aam
push
xlat
jmp
xor
shl
and
fild
or
loopne
scas
push
in
inc
movs
or
pop
jecxz
jp
fld
jp
loope
mov
dec
pop
sub
xchg
add
or
adc
push
out
out
outs
cmp
inc
add
movs
outs
pop
jp
sub
out
(bad)
clc
clc
int
push
dec
mov
cdq
(bad)
out
fimul
jmp
push
mov
push
xlat
pop
jae
mov
out
or
and
add
aad
call
add
fistp
mov
(bad)
lahf
shl
std
add
leave
mov
sub
test
add
icebp
push
pusha
rol
call
xlat
or
adc
mov
and
push
lock
iret
inc
add
(bad)
frstor
pop
xor
(bad)
adc
loope
mov
test
inc
add
rol
imul
or
sbb
retf
mov
clc
movs
or
test
and
inc
add
add
outs
fld
pop
arpl
ret
in
mov
inc
dec
inc
pop
gs
and
inc
fdivr
xor
mov
jae
ret
mov
xchg
ret
sahf
push
and
xor
add
sub
mov
dec
mul
and
adc
scas
push
xor
nop
pop
ret
add
sub
sub
inc
repnz
add
adc
push
mov
jmp
xor
jo
dec
js
jecxz
adc
push
out
pop
pop
(bad)
or
ins
nop
test
jle
pusha
sbb
add
shl
or
mov
movq
dec
jne
ficomp
add
xchg
mov
jle
enter
xor
mov
inc
and
inc
sub
popa
push
sub
mov
xchg
jg
inc
repnz
call
lock
movhps
jl
in
imul
mov
push
inc
pop
push
xchg
gs
push
ins
jmp
and
jo
add
arpl
mov
jo
jno
popa
mul
mov
pop
sub
push
ins
imul
dec
test
dec
cmp
cdq
jge
out
inc
push
adc
jle
jo
in
and
in
add
loopne
sub
ins
arpl
mov
dec
data16
inc
mov
ja
push
dec
imul
int3
ins
les
shl
jmp
das
mov
mov
fwait
rol
aaa
cmps
and
mov
push
and
clc
outs
mov
jno
ds
cwde
cmp
jo
adc
xchg
and
nop
sahf
xchg
out
data16
pop
mov
jo
mov
repnz
add
pop
mov
in
jl
jo
and
jl
hlt
data16
(bad)
ins
inc
repnz
outs
pop
push
mov
xor
pop
pop
push
rcr
push
loopne
mov
push
adc
sub
aaa
and
adc
les
dec
pop
mov
test
std
gs
mov
and
or
fdiv
inc
sbb
cmp
aam
or
fcom
push
(bad)
ds
nop
mov
cmp
xchg
adc
mov
jns
pop
fmul
sbb
iret
mov
cmp
sub
pop
dec
or
sub
jne
push
mov
fbstp
inc
or
mov
or
xchg
mov
xor
iret
fwait
mov
cmp
test
inc
mov
or
aaa
enter
push
inc
push
dec
sub
gs
add
push
or
shr
add
fcmovbe
xchg
adc
and
mov
dec
out
add
jg
add
sub
int
ficom
daa
dec
imul
inc
adc
daa
pop
popa
mov
sbb
jg
cmp
push
and
mov
sub
push
daa
jg
call
jg
test
dec
loopne
inc
push
push
push
dec
dec
gs
jmp
xchg
rol
sub
outs
popa
push
mov
pop
std
adc
pusha
sbb
or
rol
mul
or
and
in
cmps
fadd
add
cdq
pop
lds
jb
dec
add
jae
jb
lock
add
push
xchg
adc
or
cmp
cmp
pop
mov
mov
jne
mul
or
add
cmp
sar
jg
fild
ror
inc
pop
sbb
xchg
test
in
int3
push
(bad)
jo
iret
pop
mov
or
xchg
pop
and
outs
outs
push
push
inc
push
push
inc
aaa
hlt
sbb
adc
dec
mov
arpl
push
dec
cmovns
fs
adc
adc
js
bound
rcl
add
retf
and
sbb
arpl
popa
in
jg
lods
sub
addr16
dec
outs
fs
dec
adc
outs
ret
inc
in
mov
mov
push
fldcw
pop
pop
enter
sub
inc
xchg
rol
jb
adc
jg
mov
adc
inc
ret
and
stos
adc
sub
je
mul
jae
sbb
into
adc
add
stos
jle
cmp
movs
addps
mov
clc
rol
add
and
fld
jmp
or
push
(bad)
loope
adc
add
push
add
push
adc
inc
mov
inc
mov
fs
mov
je
mov
sbb
or
inc
pop
inc
inc
hlt
mov
sub
cwde
pop
xchg
cs
sub
cwde
ror
icebp
(bad)
mov
movs
jne
sub
push
push
mov
loop
mov
dec
mov
add
add
sub
jns
add
sbb
xor
jp
sahf
not
xchg
movs
or
out
pushf
mov
(bad)
lock
jo
outs
sbb
add
jmp
add
pusha
or
es
add
cmpxchg
jb
lods
test
mov
pushf
cwde
xchg
mov
jb
jb
test
sahf
or
add
mov
inc
fild
aam
inc
cmps
add
jo
fst
or
mov
in
add
cmp
ret
rcr
cmc
inc
push
add
xchg
inc
mov
dec
inc
sbb
das
xor
or
out
pop
inc
dec
push
sbb
loop
mov
or
rol
pop
leave
add
push
mov
mov
cmp
cmp
push
push
mov
das
add
lock
pop
or
add
push
push
ins
jae
xlat
pop
xor
sub
test
outs
lods
mov
pushf
fld
pop
mov
mov
inc
and
inc
aam
jae
adc
lods
ja
or
mov
pushf
pushf
fsubr
scas
lock
in
and
mov
mov
add
adc
test
jmp
push
cmp
imul
sub
add
mov
adc
and
sti
push
xor
add
add
add
jne
leave
sub
adc
or
lock
mov
and
pop
add
cld
mov
loope
aam
mov
xor
cmp
mov
inc
or
add
pop
add
in
xlat
jo
es
mov
xor
enter
nop
fistp
nop
loopne
mov
adc
sub
add
push
pop
leave
xchg
mov
test
add
cmp
sbb
jae
clc
lea
dec
dec
sti
fidivr
ror
mov
stc
inc
nop
inc
imul
addr16
xlat
sbb
jmp
sbb
push
in
adc
bound
add
jb
push
add
mov
ret
addr16
and
std
into
nop
or
or
scas
cmovg
sbb
inc
rol
pop
mov
add
jb
les
add
dec
push
or
les
pusha
aaa
mov
mov
jmp
mov
xor
mov
xor
mov
rcr
sbb
sub
lahf
xor
or
or
sub
loope
add
dec
imul
rol
loopne
cwde
hlt
xchg
fdiv
jmp
aam
jb
clc
repnz
inc
mov
push
sub
mov
sti
xchg
pop
or
test
pop
pop
(bad)
call
mov
jp
mov
mov
and
mov
lods
dec
mov
dec
mov
add
clc
cmp
xchg
and
xlat
inc
pop
cmp
push
xor
inc
adc
out
xchg
pop
add
adc
aam
sbb
adc
cmp
loopne
rcl
dec
inc
in
jne
mov
ds
int3
xchg
or
mov
inc
sbb
and
mov
test
or
jb
add
or
or
xchg
dec
xor
adc
xchg
dec
xor
sbb
and
dec
xor
and
and
leave
and
and
sub
and
dec
inc
sub
xor
xor
cwde
push
xor
xor
movs
pop
cmp
mov
cmp
jl
movs
jb
inc
lock
in
pusha
(bad)
pushf
dec
shl
jns
movs
lods
dec
push
nop
mov
push
fmul
push
scas
inc
addr16
aaa
xchg
sub
pop
fisubr
call
mov
je
sbb
mov
sbb
mov
inc
js
dec
and
sbb
addr16
push
mov
cmovge
fistp
daa
cmovns
das
outs
dec
inc
outs
mov
addr16
pop
outs
jb
inc
ins
jo
xor
loopne
dec
xor
jb
push
pop
or
and
lahf
pop
pop
out
and
outs
ins
int
xor
inc
lods
pop
dec
add
(bad)
pop
outs
mov
pop
push
ds
enter
jb
adc
dec
inc
add
jo
fldenv
sbb
(bad)
or
or
in
inc
or
fs
pop
adc
(bad)
ret
or
test
test
xchg
jae
int3
push
clc
mov
pop
mov
sbb
cmp
dec
xchg
mov
push
mov
inc
jo
stos
sbb
xchg
fadd
clc
clc
push
jl
cmp
pushf
mov
xor
mov
call
xor
push
jl
mov
add
sbb
imul
push
pusha
in
hlt
jnp
xchg
sbb
les
mov
test
inc
push
das
(bad)
sub
out
inc
or
movs
rcr
adc
getsec
cdq
stc
mov
adc
push
dec
add
rol
adc
call
out
fcomp
or
repz
or
fwait
add
mov
(bad)
add
gs
add
mov
add
mov
xor
inc
pushf
in
push
push
sub
lods
ins
dec
into
movs
test
adc
or
add
xor
jbe
js
fsubr
int
cmps
inc
add
sbb
mov
iret
shr
imul
push
push
test
pop
add
outs
fs
stos
add
add
inc
cmp
ins
jns
sbb
push
jg
adc
shl
add
sbb
jle
ror
loope
and
stos
dec
ins
gs
add
pusha
enter
in
adc
push
outs
pusha
sbb
jns
xchg
or
xchg
add
inc
dec
data16
and
pop
lods
(bad)
mov
jns
jo
fdivr
ins
pusha
jne
rol
xchg
dec
nop
sbb
xchg
or
daa
xchg
push
inc
push
push
bound
pop
jle
lock
inc
sbb
cdq
or
adc
inc
mov
ja
scas
jmp
and
xor
pop
dec
push
jo
xor
stos
jp
pop
adc
fisttp
pop
mov
mov
and
sub
and
add
jle
adc
sti
inc
pop
add
aam
and
fst
or
shl
and
jbe
imul
ret
hlt
inc
or
(bad)
jmp
mov
jg
push
mov
xor
cmps
es
daa
and
cld
inc
inc
or
jmp
dec
dec
call
pop
pop
hlt
hlt
pop
iret
repz
push
jo
xor
loopne
call
add
inc
cmp
mov
cmp
cwde
popf
aaa
or
jbe
sahf
jp
adc
inc
sbb
imul
push
clc
aam
add
push
cs
add
stc
mov
out
adc
scas
adc
push
push
test
or
jne
arpl
inc
dec
dec
adc
cmc
add
mov
mov
add
jo
(bad)
and
dec
imul
outs
inc
add
jmp
add
push
js
push
add
jle
sub
lods
cmp
push
mov
or
add
xor
lahf
or
push
test
or
pop
std
(bad)
push
imul
pushf
inc
xchg
dec
xlat
nop
xor
unpckhps
adc
adc
add
pop
mov
lea
push
lahf
push
cmc
or
xchg
xchg
add
in
outs
adc
loopne
das
repnz
sar
mov
ss
(bad)
out
or
pusha
rcr
cmp
fwait
or
xor
movs
mov
add
mov
or
out
rcr
movs
jne
adc
pop
or
into
in
push
mov
rcr
sbb
adc
pusha
outs
adc
test
sbb
dec
pop
and
stos
loopne
cvtpi2ps
ins
adc
loop
inc
jb
push
shl
fild
cmp
mov
rcr
or
jno
or
popa
xchg
mov
movs
cmp
fdivr
movs
les
mov
pop
movs
rsm
ja
and
inc
sbb
jl
les
test
ja
movs
ja
cmp
pcmpgtd
inc
or
inc
in
pop
fild
cmp
adc
mov
pop
and
es
jb
pop
imul
nop
mov
cmps
jg
inc
jo
mov
das
out
popa
sub
adc
pop
in
sub
pop
xor
add
pop
add
setle
or
sub
ja
js
xchg
mov
mov
test
test
pop
pop
divps
sub
cmp
push
outs
sub
sbb
inc
jo
cmc
jl
mov
push
test
and
test
mov
out
push
xor
add
test
sub
test
pusha
xor
mov
pop
aam
fisubr
mov
adc
and
pop
mov
test
out
inc
loope
and
out
inc
stos
jge
movs
addr16
push
and
or
movs
add
or
push
imul
mov
outs
jae
in
and
inc
or
inc
xchg
sbb
mov
sti
jnp
mov
dec
ss
add
inc
add
or
xchg
cmps
mov
ins
inc
lahf
adc
add
or
ret
mov
loopne
xchg
push
add
pusha
dec
retf
pusha
or
in
stos
xchg
lock
inc
mul
mov
call
retf
mov
add
sbb
or
adc
lea
daa
call
dec
mov
jo
nop
(bad)
(bad)
in
push
(bad)
push
nop
adc
push
lods
lock
enter
mov
or
je
popa
test
jno
inc
jb
xchg
lods
sub
enter
or
pop
lods
fbstp
shl
inc
sbb
aad
scas
jg
or
and
je
sbb
mov
clc
sub
retf
pop
add
test
sti
je
dec
je
sbb
aam
push
adc
iret
int3
fs
dec
adc
pop
sub
jge
inc
jno
out
add
sbb
enter
imul
mov
pop
cmps
sbb
dec
(bad)
std
dec
hlt
aad
xchg
jl
inc
movs
lock
stos
in
sub
dec
add
repnz
mov
aam
mov
mov
pop
in
push
inc
cmps
dec
inc
xor
pop
rol
dec
rol
xor
loopne
clc
cmps
mov
cli
push
repz
int3
adc
js
xor
inc
enter
adc
inc
mov
shl
push
push
in
push
data16
or
fimul
pop
xchg
xor
ret
jo
add
pop
or
add
imul
xor
inc
fwait
sub
adc
rol
adc
mov
hlt
test
sahf
rcl
pop
push
lahf
dec
ficom
lods
nop
mov
xor
scas
retf
mov
push
mov
pop
in
popf
mov
mov
arpl
cwde
push
inc
and
push
adc
and
mov
dec
and
add
mov
fldenv
shl
dec
mov
sbb
mul
loopne
sub
xor
(bad)
sbb
gs
test
in
add
fwait
push
adc
inc
cmp
and
jo
(bad)
add
sbb
les
and
pop
outs
or
mov
adc
add
sub
sbb
xchg
mov
ins
movs
out
mov
sbb
add
cmp
das
and
cmp
sbb
adc
push
add
icebp
mov
pushf
adc
dec
pusha
ins
mov
lock
xor
jae
push
cmp
pop
add
ficomp
inc
inc
ins
jmp
sub
mov
stc
inc
dec
jmp
add
jecxz
pusha
add
mov
sub
mov
ret
pop
add
aam
add
dec
jb
and
jl
push
jnp
or
or
push
popa
mov
pop
mov
test
js
dec
int
mul
cmp
jne
inc
cmp
(bad)
shl
sbb
fisub
push
test
pop
into
push
xchg
add
or
iret
adc
or
cmp
dec
jg
pushf
ret
js
or
push
jmp
sub
in
lds
cmp
ins
shr
push
pushf
sub
iret
or
sub
jmp
xor
clc
fcom
rcl
inc
push
retf
jl
nop
adc
ret
imul
push
xchg
ffree
pop
add
inc
jmp
aam
xor
pop
jg
ret
or
test
lods
jp
or
pop
dec
enter
inc
xor
js
test
(bad)
push
out
or
stos
add
push
cli
inc
mov
add
mov
movs
dec
cld
cmp
mov
pushf
add
or
das
adc
(bad)
sub
xor
sbb
fdivr
(bad)
adc
arpl
sub
mov
clc
jge
and
cmp
jne
push
dec
jne
test
xor
jb
inc
pop
inc
push
loope
dec
add
jg
das
ins
fld
mov
outs
cmp
shl
mov
mov
sbb
mov
xchg
pop
add
mov
daa
in
mov
push
add
hlt
or
fidivr
aaa
cwde
or
(bad)
cdq
jnp
cmps
out
sub
cmp
ja
sbb
lgs
jecxz
pop
test
add
or
or
mov
inc
cmp
sub
adc
or
sbb
add
neg
adc
mov
mov
icebp
jns
shl
repz
mov
jns
cmps
out
push
xor
push
sahf
out
sahf
gs
mov
jns
sub
es
xor
icebp
mov
mov
push
add
or
movs
push
push
mov
stos
xor
and
jnp
sbb
out
adc
ror
add
mov
add
outs
in
xchg
and
adc
jne
xchg
sbb
adc
sbb
push
pop
xor
push
adc
in
lea
cmp
pop
mov
pop
mov
or
xchg
mov
jge
mov
cmp
std
mov
movs
add
pop
or
and
push
jb
jmp
cmps
add
dec
or
push
scas
jp
dec
push
sbb
(bad)
jmp
push
nop
nop
das
or
inc
add
jo
or
lahf
add
or
loopne
jecxz
fwait
clc
in
or
mov
inc
jns
mov
mov
add
xchg
adc
add
jmp
adc
fisub
mov
mov
sub
fstp
mov
inc
dec
sub
xchg
(bad)
clc
adc
jl
test
dec
call
add
or
mov
test
data16
sbb
mov
pop
cmp
imul
scas
ss
or
rol
push
push
test
and
or
inc
jg
dec
or
inc
add
loopne
sahf
sti
dec
jne
lea
or
or
inc
lock
cdq
adc
out
jnp
or
ror
sub
or
and
in
loope
sbb
test
jno
or
in
adc
in
repz
dec
ins
cmps
cld
pop
test
jo
pop
dec
pop
call
dec
mov
mov
mov
(bad)
outs
ss
call
lods
nop
loopne
sub
xchg
jmp
push
cmp
sbb
xor
js
pop
icebp
pop
popa
pop
or
test
or
call
loopne
sti
lods
imul
jae
push
push
ja
fs
ret
mov
cmp
mov
add
add
jmp
lods
jle
clc
sbb
add
push
add
mov
push
cmps
mov
cmp
imul
add
js
xor
adc
aam
inc
movs
(bad)
and
and
push
mov
scas
dec
test
mov
mov
adc
mov
movups
xchg
inc
rcr
add
or
dec
sbb
test
scas
cmp
je
(bad)
or
jmp
mov
mov
or
jo
add
stos
pop
cdq
arpl
mov
push
rol
not
jmp
add
fcmovnu
lahf
lods
aam
add
xchg
aam
dec
mov
pop
adc
dec
lds
daa
cmc
stos
sbb
dec
in
sbb
add
sar
hlt
inc
dec
pushf
mov
xchg
sbb
ins
inc
xchg
mov
push
pushf
lods
ja
sahf
out
iret
loopne
inc
stc
push
repz
fidivr
pop
pop
adc
aaa
ins
loopne
iret
dec
pop
imul
cmp
or
mov
cld
pop
mov
sub
push
fld
mov
xchg
pushf
and
fild
fsubr
nop
pusha
inc
rep
mov
mov
repnz
mov
dec
ficomp
rol
arpl
das
in
inc
push
adc
cmp
mov
add
jle
sbb
jnp
add
ins
jge
pop
push
or
not
push
jns
(bad)
jmp
and
sbb
mov
(bad)
or
lods
mov
test
int
mov
or
sub
test
jne
adc
cmps
push
xchg
pop
push
cmp
pop
loopne
outs
test
push
or
inc
mov
jae
fidiv
inc
add
arpl
adc
push
jnp
sbb
(bad)
aam
xchg
popa
add
shr
rol
push
mov
inc
add
mov
mov
ret
dec
test
ja
rcr
push
jb
or
add
sub
ret
or
arpl
inc
push
jns
(bad)
cld
and
or
pusha
sbb
(bad)
(bad)
mov
and
sti
lods
mov
mov
daa
in
sar
mov
aam
jns
shl
dec
xor
xor
adc
sub
(bad)
retf
push
add
fadd
or
and
jp
bound
fild
xor
ins
and
sbb
ret
jbe
jae
push
push
pop
xchg
mov
sub
or
std
jo
add
pop
scas
and
inc
ss
shl
adc
fist
jmp
push
push
aaa
add
loopne
mov
or
add
sbb
cmp
jne
sub
aaa
dec
mov
ds
lahf
add
aas
in
mov
mov
cmp
inc
(bad)
inc
shr
jns
out
(bad)
shl
cli
adc
loope
cmp
cs
(bad)
cli
adc
jmp
outs
push
syscall
ret
pop
test
pushf
out
ficomp
call
xchg
repnz
mov
in
shl
sar
pop
dec
lock
adc
pop
test
mov
sub
and
cdq
mov
xchg
shl
pop
out
mov
cld
fsin
pop
xchg
and
int
clc
fnsave
lock
daa
lahf
xchg
fisttp
(bad)
sbb
fs
jbe
dec
dec
stos
scas
cmps
mov
(bad)
mov
(bad)
je
mov
add
pusha
xchg
cmp
and
pushf
ss
mov
cmp
adc
jbe
ror
shl
ja
and
nop
not
mov
je
inc
adc
jmp
or
sbb
and
mov
jg
jmp
dec
sub
adc
add
push
mov
mov
pop
pop
or
sub
aas
pop
repz
aaa
dec
inc
or
rol
dec
daa
cmp
ror
jbe
or
ins
jecxz
push
sti
(bad)
std
jg
sub
xor
ret
sbb
sbb
push
inc
or
mov
add
test
push
mov
repz
call
test
add
lahf
push
pushf
push
and
push
test
mov
sbb
jmp
in
xchg
les
rol
and
and
sbb
jmp
les
adc
mov
xor
xchg
test
out
pop
pusha
or
and
outs
cmps
mov
pop
inc
jl
loopne
mov
mov
mov
mov
leave
sub
add
mov
jae
jge
jl
out
lods
mov
and
iret
inc
sub
clc
or
pop
mov
int3
les
in
pop
arpl
jb
cmp
repz
adc
mov
sub
out
xlat
outs
xor
mov
fld
or
pop
movs
cmp
ret
(bad)
push
jb
dec
int3
inc
fstp
push
js
test
push
(bad)
jo
dec
nop
mov
sbb
cwde
mov
test
jns
mov
dec
adc
xor
sbb
jmp
pop
mov
pop
(bad)
lock
add
dec
je
or
jmp
mov
cs
nop
push
mov
or
test
je
xchg
sub
int
mov
outs
and
leave
pop
(bad)
fdiv
ds
push
xlat
push
out
enter
into
repz
push
jns
mov
pop
jns
sbb
pop
call
and
out
add
shr
sub
ss
mov
fxch
(bad)
test
fild
sbb
add
adc
and
mov
jmp
arpl
jo
jmp
sub
mov
push
cmp
jae
jp
daa
jmp
ins
jmp
in
add
jo
mov
or
push
loopne
pusha
scas
jmp
xchg
pop
call
lds
jg
sar
mov
(bad)
bound
ret
add
inc
cmc
mov
push
daa
inc
cld
popa
sub
jb
cmc
push
or
add
mov
ss
outs
dec
scas
jno
xor
pop
mov
push
fsubr
pop
adc
sbb
mov
push
fadd
rol
sti
dec
jbe
and
jb
jae
adc
lods
rol
add
ret
outs
xchg
pushf
dec
adc
push
jbe
xchg
dec
and
and
enter
adc
sub
add
retf
and
add
outs
sbb
add
add
jns
out
push
inc
pop
addr16
sub
or
sub
xor
nop
add
mov
adc
rcl
mov
jnp
das
mov
outs
add
cmp
and
add
ja
and
jns
add
push
int3
ins
iret
jnp
adc
add
addr16
push
xor
repz
pop
not
test
xchg
sbb
pop
mov
or
xor
div
test
idiv
xlat
sahf
push
push
int
adc
sbb
inc
dec
stos
mov
pop
jb
imul
dec
adc
inc
fild
mov
mov
fcom
adc
push
and
mov
sbb
sub
adc
nop
cdq
lahf
sub
pop
loopne
bound
fld
cmp
xchg
pop
adc
cmp
pop
adc
adc
mov
inc
and
sub
sbb
jno
and
fsub
mov
fadd
ds
test
jecxz
shl
xor
jo
int3
inc
call
jle
sbb
nop
or
mov
retf
and
sbb
and
inc
hlt
add
mov
xor
popfw
sbb
mov
shl
daa
call
ffree
call
add
mov
popa
(bad)
(bad)
ja
loope
sub
shr
add
sub
(bad)
arpl
mov
xchg
outs
sbb
push
nop
aam
aas
ror
ds
repz
stos
shl
clc
push
ror
repz
or
fidivr
rcr
imul
repz
jnp
pop
mov
pop
and
dec
cmp
std
xor
mov
aas
and
bound
rcr
dec
nop
aam
add
add
push
and
mov
aam
mov
shl
mov
lock
mov
test
cwde
push
or
movs
ror
cmp
scas
and
cmp
and
pop
dec
rcr
inc
fistp
push
or
int3
push
cmp
inc
test
(bad)
out
or
scas
push
(bad)
xlat
or
into
repz
ins
jmp
ins
les
cdq
das
fild
inc
mov
pusha
xchg
push
inc
movsx
push
jnp
sbb
add
movzx
jmp
jecxz
pop
or
dec
dec
neg
add
push
inc
cmp
loop
jmp
xor
sbb
sar
retf
or
daa
adc
int3
dec
push
pop
add
push
or
xchg
and
packssdw
adc
adc
jl
adc
mov
ds
xchg
adc
cmp
std
sub
pusha
popf
call
inc
push
vsqrtss
ja
leave
test
(bad)
repnz
cmc
dec
vmovaps
jb
clc
sub
dec
pop
loop
mov
clc
push
or
inc
leave
mov
jl
sbb
pop
les
inc
sub
xor
fmul
pop
push
leave
outs
pop
fisttp
add
fisub
test
xor
mov
mov
xchg
add
dec
(bad)
pop
mov
xchg
out
addr16
xlat
adc
lock
xor
mov
inc
test
arpl
das
nop
mov
ins
jb
test
push
es
add
inc
and
cdq
out
ror
inc
rcr
and
out
sar
sub
test
push
pusha
repz
rep
sbb
loopne
fnstenv
push
aam
inc
fstp
mov
in
icebp
push
dec
sbb
or
push
cs
(bad)
xchg
pop
ror
inc
ins
or
(bad)
test
retf
addr16
sbb
inc
arpl
and
push
fisttp
movs
pusha
seto
fild
add
dec
popf
mov
sbb
sbb
add
add
push
add
sbb
add
out
and
and
loope
nop
sbb
lea
arpl
rcl
mov
and
dec
popf
mov
sbb
fdivr
out
ins
test
stos
push
push
pop
mov
idiv
aad
out
add
mov
sbb
test
lds
and
sub
pop
sub
push
inc
sub
mov
jbe
pop
and
jno
dec
shr
jmp
imul
ins
mov
sub
daa
test
movs
jmp
lahf
nop
cwde
mov
jmp
pop
(bad)
or
or
test
or
jne
fcomp
shl
les
test
pop
loopne
dec
jbe
inc
fadd
sbb
or
adc
lock
shl
stos
or
sub
das
adc
and
cmp
fld
fstp
fwait
jmp
add
add
rcl
leave
fld
mov
pop
(bad)
and
adc
mov
outs
xor
xor
inc
sub
and
int
inc
xchg
add
adc
inc
xchg
sbb
loopne
inc
clc
fild
add
aaa
hlt
xor
inc
(bad)
repz
mov
out
sahf
out
ds
aam
sub
cli
sahf
outs
in
jns
fstp
pop
dec
bound
out
ja
cmps
mov
xchg
xor
imul
add
pop
shl
cmp
xchg
cld
pop
fild
(bad)
leave
and
mov
and
imul
or
arpl
lods
cwde
loopne
xlat
retf
pop
inc
rcr
mov
movsx
or
inc
and
rdmsr
or
sub
push
mov
adc
psadbw
dec
mov
(bad)
or
mov
or
test
and
and
push
jecxz
pop
imul
xchg
or
loopne
jnp
out
mov
loop
or
mov
loopne
cs
rcr
pop
inc
jns
out
pop
jae
mov
rcl
add
fnstenv
lds
out
or
dec
std
inc
fsubr
movsx
mov
inc
stos
fadd
jnp
add
or
jnp
addr16
jg
adc
sub
jmp
out
jmp
shr
sub
jmp
jns
fdivr
add
pop
xor
adc
movs
pop
ror
and
push
test
and
ins
mov
(bad)
or
inc
mov
repz
adc
push
mov
iret
out
mov
out
push
sbb
xor
xchg
jmp
sar
shl
fld1
push
scas
sbb
inc
cbw
push
sbb
fist
sbb
fild
add
sbb
icebp
add
sbb
xor
in
xor
jb
xor
adc
cmp
(bad)
cli
inc
dec
in
inc
test
or
ja
pop
fldenv
inc
and
add
xchg
test
dec
mov
sbb
repnz
inc
and
arpl
ins
mov
mov
cmp
lods
inc
and
and
addr16
test
in
jg
or
xchg
pop
pop
out
mov
mov
or
jecxz
cmps
xlat
out
pop
test
loopne
cmc
push
fild
sub
sub
push
hlt
or
or
pushf
or
ret
or
pop
add
mov
add
inc
leave
clc
in
sahf
pop
(bad)
retf
mov
into
xor
out
repnz
out
(bad)
fidivr
(bad)
out
cmp
stc
pop
out
fsubrp
pop
push
push
pushw
jnp
stos
jne
sub
or
loopne
pop
inc
inc
cmpxchg
aam
les
inc
shl
ret
pop
fstp
pushf
xchg
push
fstp
sbb
int3
or
fstp
sbb
pusha
sbb
mov
xchg
bound
inc
add
adc
add
rcl
cmp
aas
shl
imul
aam
aas
mov
adc
sti
call
leave
jnp
out
hlt
add
sbb
inc
repz
outs
sub
in
pop
pop
aas
push
test
cmp
ins
test
xlat
aas
fstp
lods
add
push
and
fstp
xchg
sbb
fstp
popa
test
pop
jno
push
test
sbb
push
pushf
mov
jmp
and
aam
mov
dec
outs
lock
dec
dec
adc
loop
jno
leave
adc
xor
xor
mov
push
push
inc
daa
in
or
shl
mov
push
movs
das
pop
push
push
fmul
push
rol
cmps
nop
and
push
and
nop
sbb
sub
jmp
fistp
cld
jmp
push
dec
adc
adc
cmp
or
scas
pop
sub
dec
dec
in
dec
idiv
push
aaa
in
pop
pop
ja
xchg
push
cmp
jns
lods
enter
pop
sbb
xchg
cmp
xchg
push
inc
push
aaa
fiadd
push
fmul
iret
not
dec
fisub
fisttp
ficom
lods
xchg
cmp
or
pop
fldcw
mov
movsx
fs
jbe
shl
f2xm1
jae
or
add
movs
out
inc
add
cmp
sub
pop
xchg
dec
jnp
sub
pop
(bad)
and
pop
movs
fidivr
in
into
pop
push
out
mov
ds
leave
sbb
bound
adc
iret
repz
push
fdecstp
sbb
push
jl
xor
jnp
fisttp
inc
xchg
push
pop
push
sbb
in
aam
movsx
mov
js
or
mov
pop
dec
adc
xor
stc
daa
cmp
sbb
rcr
sbb
jmp
and
pop
or
out
mov
xor
sub
jbe
add
ret
scas
mov
push
mov
push
mov
enter
(bad)
outs
cwde
imul
ins
sbb
and
lock
aas
or
outs
xchg
sbb
or
add
push
retf
je
and
inc
xchg
dec
ror
in
cmp
xor
or
clc
rcl
mov
inc
lock
test
movs
ja
ins
js
add
mov
jns
mov
in
fistp
lea
ror
(bad)
jno
push
and
inc
lock
loopne
hlt
movs
pusha
or
in
les
sub
pop
jns
sbb
(bad)
ret
cmp
mov
xchg
ins
cmp
shl
loopne
and
jbe
loop
(bad)
stc
mov
pusha
stos
add
in
dec
sub
pop
xchg
stc
ror
pusha
dec
in
mov
mov
push
ror
add
daa
adc
retf
inc
rcl
(bad)
hlt
or
add
pop
pusha
push
cmp
cdq
xor
push
scas
loop
inc
mov
mov
push
call
mov
sahf
out
push
enter
xchg
ktestw
jns
sbb
mov
pop
cmc
mov
push
pushw
dec
cmc
pop
pop
xchg
jnp
mul
cmps
push
(bad)
out
sub
push
and
and
dec
jmp
neg
jmp
clc
js
shl
fimul
jae
pop
adc
mov
push
dec
aas
test
cmp
and
fstp
adc
imul
sbb
lds
sbb
fisttp
stos
cmp
add
push
mov
in
gs
push
add
cmps
loopne
push
and
jb
and
in
inc
mov
dec
ins
ss
jb
add
push
pushf
push
cwde
ret
sub
loopne
ds
mov
daa
xchg
gs
movzx
nop
mov
mov
dec
shl
dec
int
push
shl
imul
test
sbb
test
add
adc
dec
pusha
dec
or
das
xchg
jl
retf
or
seta
test
imul
cli
aas
inc
popf
repz
xchg
out
js
das
movs
sub
gs
pop
mov
out
clc
hlt
movs
test
test
test
cmp
lods
push
aam
div
push
push
or
jg
xchg
xor
adc
xchg
dec
test
dec
(bad)
int3
or
idiv
jl
inc
adc
jmp
test
inc
sar
add
pop
inc
xchg
je
or
lock
xchg
je
sbb
rol
dec
jo
dec
jo
adc
pusha
mov
cmp
add
sub
hlt
imul
push
mov
xor
xchg
sub
push
and
mov
ins
cmp
xchg
ins
daa
jb
push
push
loopne
or
mov
fs
pop
sbb
fs
pusha
and
mov
xor
ins
pop
dec
mov
pop
or
ficomp
dec
pop
out
jmp
mov
push
adc
inc
xor
in
jl
or
xchg
dec
push
imul
bound
jmp
mov
dec
cmp
jmp
call
nop
add
xor
push
mov
sub
daa
ins
cmp
imul
mov
xchg
mov
adc
xor
add
outs
inc
test
adc
adc
ret
cwde
bswap
jb
jns
cmc
fwait
cli
jns
lods
or
push
or
cmp
inc
or
xor
sub
sub
jmp
lock
daa
cmp
mov
cmp
in
dec
das
and
(bad)
cli
jno
push
dec
jmp
(bad)
sti
mov
bndldx
fcom
loopne
fsubr
jns
ror
xor
pushf
mov
mov
push
repz
jne
jno
jb
cmp
cmp
icebp
mov
fimul
pop
mov
(bad)
mov
mov
mov
jnp
inc
fs
iret
repz
into
push
test
pop
ds
ss
pop
js
jnp
jmp
nop
push
push
(bad)
pop
sahf
out
cs
stos
mov
cld
sbb
mov
(bad)
mov
and
adc
adc
adc
xor
test
push
pop
xchg
movs
inc
movs
lods
pop
mov
mov
add
mov
push
jno
or
pushf
push
pushf
adc
mov
ins
sbb
xchg
aas
xchg
xor
inc
xor
js
or
out
mov
mov
push
inc
cmp
test
xor
pop
and
or
movs
aaa
pop
test
div
sbb
lahf
movs
jmp
in
loop
not
in
movs
stos
cld
add
add
in
repz
shl
add
inc
or
fdivr
imul
in
cdq
cmp
pop
sar
xchg
enter
mov
icebp
fwait
lock
jb
pop
or
add
and
adc
je
je
mov
test
pop
push
dec
adc
or
adc
xchg
mov
loopne
loop
imul
dec
lds
inc
pop
mov
or
inc
mov
popf
fs
pusha
xchg
pusha
inc
xchg
pop
lea
loop
movs
jg
sub
dec
iret
leave
and
add
dec
push
imul
jmp
adc
jmp
das
ror
dec
pop
jmp
jns
dec
lea
and
jmp
cs
cmp
aaa
cmp
inc
add
xor
or
shr
imul
enter
jae
push
mov
jg
add
(bad)
mov
stos
ret
arpl
(bad)
add
lock
(bad)
repz
enter
add
loopne
repnz
test
test
inc
sbb
bswap
mov
inc
rcr
ficomp
clc
adc
loopne
xchg
add
jge
push
stos
scas
cmp
xor
adc
xchg
test
mov
cmps
jge
dec
add
push
jle
mov
cmp
out
syscall
sub
inc
push
jmp
mov
xor
pop
pop
mov
mov
push
mov
push
loope
xchg
jmp
stos
lock
outs
sub
xor
mov
mov
sub
mov
js
cmp
aam
dec
inc
add
add
adc
sub
icebp
xor
out
push
push
push
fnstsw
das
shl
scas
inc
repz
inc
test
and
fmul
push
popa
inc
mov
js
aam
test
inc
(bad)
mov
mov
(bad)
loopne
or
pusha
pop
cmps
stc
cmp
push
push
movs
aad
or
adc
or
inc
fldenv
jns
jg
mov
or
fld
in
or
add
sub
xchg
ss
lea
test
pop
popa
xchg
ja
mov
outs
repz
and
pop
sbb
adc
adc
pusha
pop
sbb
dec
xor
ja
mov
sbb
push
fadd
jb
sub
dec
repnz
inc
pop
sysret
xchg
or
jne
or
stos
mov
sti
(bad)
dec
test
inc
and
test
lds
mov
test
mov
inc
mov
(bad)
or
xchg
out
xchg
ret
xchg
and
add
fsub
fstp
pop
add
arpl
clc
or
sar
icebp
xchg
jle
je
jmp
sub
outs
je
sub
or
jmp
mov
dec
cmps
xchg
or
push
sub
adc
dec
leave
sbb
test
iret
inc
sub
push
pop
inc
bound
sbb
mov
dec
ins
adc
inc
retf
ror
pop
inc
xchg
push
mov
aas
xchg
inc
rol
rcl
lea
data16
inc
xor
or
mov
mov
dec
or
dec
pop
rol
add
mov
cmc
imul
call
xor
ret
aam
or
pop
sbb
mov
pop
(bad)
or
cli
mov
xlat
movs
enter
cs
cmp
add
mov
pop
mov
adc
adc
cmps
aas
adc
mov
inc
or
add
mov
and
add
adc
add
push
dec
bound
daa
or
sub
dec
xchg
push
add
pop
push
push
pop
xchg
je
adc
or
popf
add
cmp
add
sbb
sub
pop
movs
push
adc
in
or
aas
pop
fistp
dec
adc
mov
js
addr16
adc
xor
pop
add
loope
jl
ret
loop
sub
dec
push
or
push
inc
sti
cmps
push
sti
outs
jne
pop
pop
(bad)
retf
leave
add
or
push
dec
push
or
and
fild
adc
mov
je
jmp
mov
pop
mov
adc
bound
dec
mov
and
or
xor
popf
push
mov
(bad)
add
mov
test
lods
inc
mov
iret
or
ret
clc
outs
lods
adc
mov
stc
push
push
add
xchg
pop
je
dec
test
test
stos
ins
cld
xchg
shl
jb
sub
xor
pop
gs
mov
imul
cmp
ss
mov
test
je
xor
push
or
xchg
mov
ja
jmp
jg
and
dec
shl
jb
lidtd
rcl
cmp
xor
adc
cmc
jmp
ret
cmp
pop
in
jno
xor
mov
mov
pop
(bad)
jmp
add
add
fcmovb
adc
cmp
adc
lmsw
mov
add
lea
ror
or
adc
adc
mov
inc
mov
cmp
movs
arpl
sahf
(bad)
mov
add
loope
jbe
mov
xor
cli
sti
dec
push
xor
xchg
(bad)
cmp
or
lods
(bad)
jle
push
or
adc
xor
retf
and
push
imul
mov
fst
push
push
fild
shl
pop
je
xor
xchg
add
push
mov
rcl
inc
retf
add
popf
mov
push
fs
push
or
cli
or
add
xor
push
push
bound
jle
mov
(bad)
rol
dec
adc
add
sub
xchg
sti
add
adc
shr
jb
in
sbb
ins
out
jmp
mov
inc
sbb
or
cmp
cwde
lods
add
mov
lods
data16
(bad)
xlat
xchg
jmp
xchg
jmp
xchg
idiv
jmp
test
jne
cmp
mov
sbb
xchg
dec
sbb
inc
adc
mov
mov
pop
daa
cmp
inc
jb
int
or
adc
leave
dec
jb
mov
push
or
pop
cmp
dec
lods
and
or
das
jbe
add
jle
(bad)
fwait
pop
out
inc
add
push
daa
jbe
xchg
fcomp
mov
pop
adc
push
fild
div
fnstcw
pop
adc
xor
pop
inc
add
dec
das
push
inc
mov
aas
inc
sbb
push
ror
repz
sbb
push
and
dec
xor
mov
cmc
ss
inc
sub
push
jne
xor
data16
dec
and
cdq
adc
mov
push
add
mov
inc
mov
pop
add
jmp
pop
repz
or
mov
ins
loope
cmp
(bad)
fist
add
pop
call
mov
jne
mov
sar
mov
(bad)
adc
fld
out
xor
in
fst
jno
adc
fadd
nop
add
repnz
fdiv
gs
sbb
jge
add
aad
aad
je
pop
pusha
mov
sbb
push
(bad)
pop
inc
mov
shl
xor
(bad)
xchg
inc
popf
loopne
popf
jmp
dec
jmp
in
pop
(bad)
push
sbb
fcom
xor
mov
fcom
and
pop
mov
pop
(bad)
sub
and
adc
cmp
mov
or
int3
pop
or
je
add
sbb
push
or
out
adc
jne
icebp
aaa
xchg
mov
add
sub
mov
outs
sbb
and
je
push
add
test
and
xchg
dec
hlt
fdiv
imul
xchg
dec
imul
dec
cld
mov
mov
xor
popa
bound
(bad)
adc
mov
sbb
jle
inc
or
mov
or
xchg
rol
jno
xchg
or
shl
push
dec
add
ret
sub
loope
cmp
cmp
clc
daa
and
fwait
je
add
rol
mov
xor
inc
push
(bad)
stc
stos
push
outs
fdivr
cld
sti
in
or
(bad)
call
mov
repnz
push
lock
lea
jae
stc
sbb
mov
ss
adc
jae
imul
sub
or
adc
and
fsubr
and
adc
sub
cmp
sbb
add
pop
push
into
ret
test
add
repnz
push
shl
into
inc
jecxz
out
sbb
fsubrp
inc
cmp
pop
jbe
test
push
movlps
sub
je
jge
adc
dec
push
xchg
das
aaa
and
xchg
dec
mov
pop
hlt
mov
movs
sub
xor
jo
jmp
mov
enter
loope
push
rcl
mov
mov
add
cs
add
popa
popa
mov
js
pop
push
pop
popa
xor
add
xor
fiadd
push
dec
sub
addr16
test
inc
daa
push
addr16
adc
inc
add
xlat
(bad)
mul
bound
out
xor
add
jp
aas
jbe
neg
popa
add
fwait
push
ss
call
jo
arpl
aam
pop
inc
jecxz
xchg
inc
mov
mov
es
out
bound
sub
imul
mov
ja
ja
inc
call
loopne
aaa
and
rcl
inc
pop
push
shl
loopne
pop
add
jns
out
push
imul
inc
xor
sub
aas
add
pop
ret
add
push
xor
fnstenv
and
sbb
push
mov
shl
call
add
shl
push
push
mov
jb
sub
push
push
and
jmp
enter
dec
sub
and
push
jg
add
pop
push
and
mov
and
imul
inc
mov
cmp
or
sar
jg
push
adc
(bad)
idiv
and
int
and
dec
les
adc
fdiv
lds
je
jb
out
xor
sti
push
lds
dec
aas
inc
add
jns
sbb
rol
popa
and
xchg
sub
data16
add
inc
or
or
je
rol
adc
dec
mov
movs
add
pop
adc
add
enter
into
inc
jbe
mov
inc
je
dec
enter
es
pop
or
fmul
aam
push
lea
sbb
jge
and
mov
dec
pop
xor
mov
je
and
add
cmp
xchg
push
and
pop
xchg
shl
add
ret
push
dec
fbld
jg
adc
jnp
mov
arpl
mov
adc
add
push
leave
mov
cld
cs
popf
adc
push
jmp
xor
pop
and
cmp
jmp
pushf
pop
pop
sahf
mov
fdiv
mov
lds
pop
mov
pushf
or
mov
mov
or
adc
sub
test
or
and
sbb
pop
jge
ret
or
gs
cdq
icebp
add
mov
and
fiadd
push
mov
scas
rcl
mov
dec
loopne
nop
pop
add
enter
add
and
adc
xchg
(bad)
ret
sbb
bound
cmps
aas
mov
ins
or
xchg
add
mov
xor
out
add
add
push
cmps
push
cmps
fcom
sub
jmp
add
sbb
and
test
in
sbb
or
je
icebp
ret
jo
push
inc
or
add
pop
lea
inc
and
push
fmul
mov
nop
jg
fild
adc
rol
xor
sbb
pop
clc
xor
mov
push
sbb
inc
sbb
jno
jo
sub
adc
mov
adc
fdiv
dec
jne
lea
adc
push
sar
cmp
pop
popf
or
jo
pop
adc
lods
xor
je
push
push
cmps
add
pop
and
dec
mov
mov
fld
out
rcl
(bad)
dec
lea
mov
xchg
adc
das
mov
daa
push
push
dec
adc
mov
push
mov
enter
pop
inc
loopne
or
shl
aas
call
cmps
cmp
xor
loope
(bad)
mov
mov
ret
pop
sbb
push
pop
(bad)
jmp
adc
ret
xor
dec
fmul
loop
xchg
shl
jl
inc
clc
popa
push
adc
add
or
mov
and
push
push
call
ins
inc
mov
retf
leave
bound
pop
or
push
lea
nop
sbb
jb
loope
je
mov
mov
add
es
pop
and
mov
adc
or
jno
clc
icebp
sub
call
adc
or
mov
clc
push
sbb
sub
add
mov
fild
pop
pop
push
mov
nop
fcmovnb
inc
push
push
dec
jns
push
xchg
sbb
test
aam
lea
pop
mov
cmp
dec
call
inc
shl
loopne
mov
xor
daa
inc
out
rcl
xor
mov
lar
and
or
mov
and
test
jg
lds
or
mov
mov
call
cwde
sbb
call
sbb
sub
mov
outs
aas
scas
sbb
mov
daa
and
idiv
add
aam
jne
inc
push
lea
mov
retf
(bad)
out
aaa
sub
or
xor
stos
xchg
cdq
dec
sbb
cmp
inc
push
xor
ret
push
mov
adc
push
mov
mov
pop
aas
out
test
loope
adc
inc
xlat
retf
ret
xchg
xor
inc
aad
imul
popa
jge
mov
cmp
call
sbb
cmp
clc
add
das
test
mov
mov
cmp
jnp
jmp
mov
bound
out
push
dec
sbb
cmps
jne
mov
pop
movs
cmc
xor
mov
das
or
add
push
fild
inc
add
or
mov
test
adc
inc
sub
sar
adc
mov
retf
test
mov
mov
add
cwde
push
inc
mov
shl
sar
cmp
jne
movzx
adc
pop
or
push
xchg
inc
adc
loop
out
add
or
je
pcmpeqb
les
stos
mov
and
push
arpl
out
movs
jle
xchg
push
xchg
shr
jecxz
movs
(bad)
or
sub
sahf
fs
lods
sub
sub
sbb
les
icebp
or
repz
mov
jl
pop
jl
aam
sub
jle
fimul
lea
xchg
(bad)
nop
fmul
push
aam
push
or
push
dec
lock
mov
movs
mov
or
outs
push
idiv
and
add
lea
arpl
mov
or
pop
cmps
repnz
lss
pop
pop
sahf
ins
sbb
(bad)
push
cmps
ret
hlt
jo
in
inc
mov
inc
xor
and
push
pop
inc
shl
ds
fwait
ins
pop
add
sub
iret
sar
push
dec
add
repz
pop
imul
jg
xchg
cmp
or
gs
add
cld
imul
or
or
adc
in
or
sub
loopne
and
jbe
mov
fs
and
(bad)
sub
not
mov
and
add
(bad)
jbe
inc
mov
sub
cmp
adc
cdq
adc
mov
sbb
xor
dec
rol
mov
xchg
cmps
cmp
mov
(bad)
mov
lahf
call
lock
push
add
push
mov
dec
pop
cld
xor
mov
cmp
sar
cld
jmp
pusha
jmp
inc
mov
dec
add
push
mov
int
sbb
loopne
cmp
test
sbb
pop
pop
pop
call
outs
test
movs
cmp
mov
(bad)
adc
pop
fisttp
mov
xor
call
in
mov
xchg
sbb
push
adc
xchg
loopne
call
add
or
(bad)
pop
movs
call
adc
jo
pop
inc
cmp
adc
push
call
push
imul
pop
push
or
inc
xor
cmp
pop
add
(bad)
adc
pop
sub
inc
inc
push
cmp
jne
jne
xchg
xor
mov
loope
cmc
ret
out
js
nop
mov
xlat
pop
clc
hlt
cmp
lock
adc
dec
shr
call
pop
lock
and
(bad)
cmc
loopne
retf
enter
mov
inc
add
rcl
push
lock
je
sbb
lods
cdq
cmp
sub
pop
loop
repnz
repz
adc
and
inc
push
in
repz
outs
or
sbb
in
repnz
or
add
pop
fs
dec
push
adc
xchg
test
(bad)
sbb
sbb
enter
aas
cmp
ret
lea
jmp
sbb
pusha
scas
pop
ror
retf
push
push
jmp
push
lock
popf
or
jno
cli
loopne
gs
mov
pop
dec
xchg
add
in
jmp
mov
xor
ret
jbe
jmp
sbb
pop
bts
mov
add
push
xchg
std
sub
mov
imul
or
add
cmps
cld
xor
mov
jae
and
adc
dec
fcomp
daa
scas
mov
cmp
jmp
push
sub
test
call
sti
add
push
out
cmp
sbb
mov
call
sar
cmp
out
push
pop
jbe
push
es
pop
popa
mov
inc
push
add
lock
rol
test
xchg
arpl
lods
inc
push
push
dec
lods
fbld
int3
cmp
je
xchg
(bad)
bound
jle
push
mov
push
xchg
test
and
and
cli
or
sbb
call
push
loopne
cmp
add
call
cmovo
int3
pusha
movs
neg
leave
sub
push
or
adc
inc
(bad)
and
cwde
pusha
mov
xchg
lahf
pusha
fmul
and
add
or
fwait
push
les
lahf
pop
rol
xchg
push
mov
mov
clc
mov
adc
xor
ins
mov
sti
leave
dec
nop
loop
lods
or
in
sub
inc
push
into
enter
loop
jae
arpl
test
adc
push
xor
add
aas
push
test
jle
cmp
jg
xchg
lss
dec
inc
inc
mov
shl
sub
or
jle
loopne
or
xchg
push
mov
xchg
gs
(bad)
push
int
lea
adc
cmp
push
icebp
aas
mov
sub
push
jo
inc
mov
daa
in
fsub
pop
add
enter
outs
or
rol
in
add
cmp
push
(bad)
jmp
ins
fcom
mov
les
xchg
mov
add
fadd
push
daa
mov
xchg
xor
push
cmp
int
mov
sar
fidiv
shl
cs
je
clc
test
push
inc
mov
js
ss
leave
xchg
and
loopne
adc
cmp
push
ss
cs
and
pop
aam
jle
adc
mov
sbb
cmps
lock
jb
push
pop
aad
mov
xchg
mov
inc
ins
cli
or
mov
sub
push
js
mov
xor
xchg
push
cmp
out
in
lods
dec
data16
aam
sbb
or
mov
jno
dec
fcom
ret
mov
xor
in
inc
popa
jmp
movs
push
popf
jmp
(bad)
test
push
and
dec
lods
jne
xchg
clc
xor
sub
adc
lahf
or
pusha
and
mov
mov
(bad)
dec
mov
adc
aam
dec
sbb
dec
pop
fadd
ret
popf
and
mov
lock
retf
push
jmp
hlt
push
sbb
sbb
dec
jg
xchg
in
mov
jae
inc
xchg
lea
mov
mov
xchg
imul
gs
xor
mov
jle
or
ins
inc
cmp
pop
shl
and
(bad)
out
gs
push
sti
das
mov
adc
push
jo
hlt
sub
jns
daa
add
cmp
or
sbb
adc
inc
pushf
xchg
test
retf
fcom
push
or
sub
sti
(bad)
fldenv
cdq
test
xor
cwde
test
retf
mov
sbb
movs
in
or
fidivr
inc
leave
rcl
sbb
cmps
push
or
dec
fisttp
pop
jnp
sbb
mov
xor
lds
movs
stc
or
ret
or
pop
ins
xchg
jns
mov
xor
jns
xor
jno
push
ret
jne
in
mov
pop
mov
loop
leave
push
and
fs
cmp
and
sub
cmp
push
jnp
sub
mov
nop
aam
js
add
loopne
xchg
adc
push
xlat
cmc
out
inc
inc
cmp
dec
scas
jge
inc
adc
bound
loope
pusha
mov
adc
pop
test
xchg
push
pop
or
sbb
aam
push
mov
or
jb
sbb
lock
pop
in
ins
movs
add
or
cmp
or
(bad)
sar
mov
mov
push
lahf
add
sub
es
fcom
xchg
xor
add
mov
dec
mov
mov
call
es
cld
mov
dec
mov
cmp
in
lock
mov
lea
inc
jecxz
rol
jns
mov
inc
dec
fadd
cmp
ror
sbb
inc
sub
icebp
jmp
inc
xchg
sbb
push
(bad)
fsubr
xchg
(bad)
inc
adc
stos
cmp
int3
cmp
dec
or
sub
add
xor
int3
outs
add
outs
mov
add
adc
dec
in
mov
loopne
push
xchg
bnd
inc
and
or
inc
sbb
dec
nop
mov
cmp
dec
xchg
dec
mov
mov
adc
je
add
push
mov
dec
mov
add
adc
je
push
outs
imul
outs
mov
cwde
rcl
addr16
adc
mov
rol
cmp
pop
sbb
outs
mov
or
stc
add
mov
sub
sub
sbb
jae
push
jnp
dec
push
adc
pop
outs
or
dec
sti
add
addr16
mov
data16
pop
ss
xor
or
inc
jns
dec
dec
xchg
loope
pushf
fcmovb
imul
dec
and
xchg
jns
lea
push
or
xchg
fadd
adc
xchg
lock
jb
push
dec
push
lock
inc
das
xor
ds
push
xchg
inc
test
jns
popa
sub
mov
mov
popa
inc
mov
fcom
jbe
inc
and
popf
pop
cmp
xchg
sbb
das
inc
dec
xchg
lock
xchg
scas
push
(bad)
call
movlps
pop
push
push
jne
push
mov
bound
push
add
cmp
dec
les
ins
and
xchg
sub
cmp
cmp
pop
add
sbb
push
pop
xor
mov
les
enter
sbb
push
or
add
add
pop
add
rcl
sbb
inc
xchg
fcmovne
loope
inc
add
inc
scas
xor
sbb
loopne
inc
scas
or
dec
in
pop
inc
sbb
or
xor
test
inc
dec
sub
mov
and
inc
xor
or
xor
mov
mov
inc
out
sbb
(bad)
pop
aad
add
cs
imul
bound
loop
in
pop
fimul
fs
or
or
jecxz
out
mov
add
pop
adc
add
add
adc
jne
rol
xor
xchg
popa
jmp
and
adc
ret
or
cli
call
popa
or
popa
test
mov
sbb
ins
or
and
push
inc
and
loope
xchg
jl
mov
inc
inc
cmc
pop
adc
outs
sahf
cmp
ins
inc
lea
inc
add
xchg
rep
jae
add
popa
dec
jne
jns
sub
cmp
ffree
sbb
js
mov
outs
add
out
mov
or
ror
sub
adc
clc
retf
adc
ja
add
icebp
sbb
jbe
sahf
addr16
cli
sub
mov
jns
daa
inc
push
js
test
or
mov
test
movs
test
(bad)
(bad)
(bad)
sbb
ret
ins
pushf
inc
inc
cld
ins
pusha
inc
aam
inc
xor
loop
mov
mov
pusha
pop
and
or
in
lea
(bad)
push
ss
fidivr
aam
leave
dec
inc
jo
rol
pop
mov
push
rol
xchg
nop
(bad)
or
mov
add
jp
sub
dec
mov
imul
(bad)
outs
mov
mov
sub
adc
inc
or
test
add
add
or
sbb
cdq
clc
add
shr
xor
inc
inc
je
jle
mov
inc
loopne
jbe
mov
jne
push
adc
add
or
(bad)
or
rcr
outs
mov
iret
adc
cmp
call
jbe
rcl
cmp
and
push
adc
adc
popa
adc
adc
inc
(bad)
xor
mov
xor
sbb
cmp
or
adc
clc
and
lea
icebp
or
adc
icebp
sub
pop
js
push
cmp
lods
dec
push
test
dec
jne
inc
ins
loopne
mov
inc
(bad)
mov
fs
(bad)
xchg
cmps
xchg
xor
jmp
(bad)
jmp
inc
scas
sbb
fld
fs
sub
sbb
jo
(bad)
das
stos
mov
(bad)
or
jno
sbb
add
jp
scas
pop
sub
mov
daa
mov
lock
jbe
push
jecxz
in
leave
dec
push
in
ret
dec
repnz
jmp
fbld
dec
aaa
leave
dec
daa
inc
push
jns
cs
jp
das
pop
mov
shl
add
in
aaa
js
add
enter
jb
in
mov
cmp
and
adc
in
inc
inc
xor
inc
xor
dec
sub
cdq
mov
rol
clc
not
push
sbb
(bad)
sbb
adc
adc
adc
push
jne
mov
test
jge
inc
nop
pop
add
and
sbb
(bad)
xor
cmp
jne
mov
pop
jne
lock
popa
outs
aaa
inc
lock
outs
dec
add
fdivr
dec
sub
in
or
cmp
aaa
call
dec
in
or
outs
adc
loope
push
loopne
cld
add
push
push
or
lock
push
push
add
or
and
push
and
shl
sbb
loopne
mov
xor
push
xchg
dec
add
push
bound
mov
cmps
or
adc
jne
xchg
lods
mov
mov
and
adc
sub
pusha
nop
sbb
lea
inc
add
push
mov
xlat
imul
imul
sbb
add
jb
dec
xor
mov
inc
adc
pushf
shl
adc
mov
out
dec
cmp
add
fadd
outs
push
clc
ds
mov
fist
cmp
call
jge
es
setne
and
add
ret
jg
mov
cmp
dec
pusha
dec
inc
add
and
pop
popa
sbb
retf
push
push
movs
inc
sub
sub
es
repz
lea
dec
(bad)
mov
add
or
dec
dec
inc
jecxz
sbb
xor
js
adc
sbb
push
push
imul
out
pop
jle
push
lea
and
mov
movs
push
lea
push
retf
sub
imul
push
add
add
popa
adc
les
lahf
loope
lea
mov
int3
adc
add
mov
in
(bad)
addr16
jg
cmp
jne
mul
and
out
xchg
xor
adc
fbstp
cld
adc
jmp
mov
fs
mov
jne
add
jle
pusha
xchg
test
out
addr16
xor
pop
push
jb
call
es
push
inc
cmp
jge
push
mov
push
idiv
adc
add
xor
sbb
in
hlt
lock
icebp
or
rcl
and
push
or
cmps
push
sbb
movs
lods
clc
cmp
ret
sub
push
inc
add
or
xor
das
dec
adc
mov
or
fmul
pop
lods
sub
je
add
sar
or
mov
jbe
push
or
pop
sbb
(bad)
dec
(bad)
sub
in
push
test
dec
and
fistp
retf
je
mov
dec
mov
sbb
jle
add
dec
mov
jmp
movs
and
cmps
sbb
loop
mov
test
jo
imul
ins
sbb
adc
(bad)
lods
fadd
jmp
xlat
dec
xor
and
and
aam
fimul
pop
je
pop
xchg
or
add
imul
inc
mov
shl
mov
loope
hlt
push
xlat
cmp
stos
mov
pop
lods
out
push
dec
jle
add
fucomip
inc
rol
sbb
adc
mov
mov
bndstx
pop
test
call
add
lds
or
shl
push
adc
paddd
ja
movsx
add
ret
call
ret
push
jmp
jbe
jmp
aas
mov
cmp
je
outs
dec
add
lar
mov
jp
jnp
ja
jmp
jl
sbb
push
clc
add
mov
mov
jle
sbb
or
loopne
mov
sti
popa
xchg
mov
pop
ret
jle
rol
dec
arpl
daa
pop
mov
loopne
aaa
fs
ds
cmc
imul
out
pop
in
push
mov
cmp
jl
dec
cmp
ja
jb
xor
xor
push
add
mov
stc
repnz
mov
mov
or
push
mov
push
scas
xlat
push
int
add
sbb
sub
pop
mov
sar
sahf
aam
inc
add
lea
fnstcw
es
mov
or
mov
sbb
inc
push
movs
xor
int
and
jbe
jg
xor
xchg
popa
ins
and
dec
shl
mov
aaa
adc
jmp
mov
adc
ror
sbb
mov
mov
dec
and
clc
rol
sbb
add
cmp
stos
loopne
or
pop
mov
scas
fcmovb
clc
mov
xor
clc
aaa
mov
(bad)
(bad)
sub
mov
test
leave
and
xchg
pop
pop
pop
pop
or
arpl
jl
mov
not
cmc
test
dec
mov
dec
add
add
dec
sti
and
das
je
push
mov
fbld
pop
or
cld
cmp
loopne
and
bt
jae
sbb
sbb
or
nop
push
or
inc
mov
and
out
and
ss
in
sbb
pop
dec
dec
xlat
pusha
or
add
sub
fadd
xor
sub
pop
pop
dec
pop
mov
pop
cmc
add
inc
adc
movs
inc
push
jg
dec
clc
adc
hlt
pop
xchg
cli
cdq
ret
and
dec
clc
cmp
loop
push
movs
sbb
sti
push
dec
repz
ror
je
sbb
push
fimul
dec
xchg
xchg
lock
xor
jecxz
sbb
xchg
movs
xor
pop
adc
inc
jmp
add
pop
xchg
dec
dec
mov
jmp
cmp
dec
mov
pop
test
je
and
in
adc
mov
push
stos
ficom
mov
out
dec
sub
or
out
push
adc
enter
add
push
sub
sahf
add
adc
fst
enter
ja
sbb
cmp
jle
jle
adc
add
cmp
pop
sub
(bad)
xlat
or
js
(bad)
pop
nop
into
xchg
pop
cmp
cmp
mov
shl
adc
or
jmp
lock
inc
adc
add
aaa
xchg
ja
inc
push
fild
mov
gs
out
(bad)
mov
inc
mov
mov
test
cmp
outs
icebp
outs
(bad)
fstp
pop
test
rep
int3
pop
pop
jg
fld
out
clc
inc
jge
pop
sub
test
cld
addr16
bound
jl
sti
call
inc
pop
pop
xchg
icebp
pusha
jmp
mov
pop
adc
xlat
adc
or
(bad)
lods
aas
pop
addr16
xchg
cmp
pop
dec
call
pop
pushf
pop
test
addr16
inc
mov
mov
movs
cmp
inc
test
pusha
push
addr16
hlt
aam
sti
test
or
or
leave
je
adc
out
lock
out
and
jb
pop
ret
and
cld
adc
nop
dec
inc
dec
add
test
xchg
sbb
jmp
adc
retf
je
adc
jmp
xchg
pop
jmp
(bad)
fsubr
dec
push
or
icebp
dec
mov
ret
bound
daa
pop
imul
sub
push
push
mov
popa
rcr
(bad)
ror
add
sub
dec
call
sub
mov
pusha
and
add
push
ret
nop
cdq
inc
pop
push
push
dec
lds
jo
fisttp
test
dec
sbb
(bad)
jmp
dec
shr
mov
clc
xorps
dec
xchg
and
loopne
cmp
inc
jo
pop
aas
push
xor
dec
sbb
jb
(bad)
or
sub
and
sub
sbb
pop
cmps
test
push
add
in
(bad)
dec
add
hlt
std
xchg
pop
sbb
test
sbb
adc
test
sub
or
(bad)
pop
push
mov
add
dec
and
mov
sbb
xor
mov
mov
test
inc
clc
and
in
mov
jg
or
jge
mov
mov
fsub
dec
sahf
dec
aad
sbb
cmp
inc
ret
sbb
and
inc
jmp
ret
pop
pop
and
and
sub
shl
je
(bad)
(bad)
fistp
pop
jmp
mov
sbb
pop
scas
ret
xor
vpcmpgtb
or
push
dec
dec
(bad)
mov
dec
bound
jae
jno
sbb
push
in
add
lds
fadd
push
fs
repz
and
cmp
loope
loope
arpl
mov
cmp
fs
lock
mov
fs
cmp
addr16
jb
gs
xor
xchg
fdiv
add
inc
add
push
dec
data16
js
jae
pop
push
cmp
jnp
pop
add
mov
(bad)
idiv
jg
mov
mov
or
fsub
int
mov
and
repnz
fstp
dec
adc
inc
nop
add
lods
loopne
cmp
mov
mov
xor
or
in
loop
shl
mov
dec
lock
or
xchg
out
push
and
mov
xchg
das
add
jge
pop
xchg
data16
pop
int3
popa
pop
add
ret
das
cli
push
or
push
jno
jmp
xlat
and
je
pop
add
mov
and
stos
and
pop
or
jo
add
push
add
int3
sub
mov
mov
add
jmp
jp
jne
arpl
push
mov
nop
dec
lock
sbb
pop
add
retf
pop
movs
add
sbb
fs
jmp
mov
dec
arpl
jp
jmp
fisttp
xchg
(bad)
out
call
sbb
pop
jae
xor
enter
mov
inc
mov
pop
popf
fs
out
pop
jnp
push
fsub
fs
das
repnz
jo
xchg
or
fs
or
sbb
ds
add
out
mov
stos
sbb
xchg
add
rcl
add
loope
add
arpl
adc
test
dec
and
das
xchg
cmp
xlat
jbe
mov
xlat
inc
outs
jne
jae
mov
jae
pop
and
adc
and
dec
test
addr16
das
loope
or
in
inc
shl
(bad)
das
xlat
sbb
les
into
inc
sub
nop
pminub
pushf
add
nop
sbb
je
or
leave
pushf
aas
pop
lea
data16
push
es
pop
das
cmp
les
ret
sub
iret
fwait
xsha256
cmps
adc
les
xchg
add
lock
xor
add
or
and
test
mov
loope
in
push
imul
mov
scas
jl
add
inc
leave
adc
ja
sub
scas
xor
add
mov
repnz
daa
pop
push
push
scas
pop
add
jle
mov
add
and
scas
fmul
or
mov
cmp
add
push
pop
test
jno
push
jb
outs
fs
scas
mov
pop
adc
mov
push
xchg
add
add
ja
inc
repnz
push
or
ret
fmul
ins
or
pop
outs
mov
(bad)
adc
dec
or
dec
add
mov
add
lea
mov
daa
and
xchg
jp
movs
push
push
mov
xchg
mov
cwde
dec
xchg
push
loopne
imul
cmp
outs
and
in
and
jno
clc
dec
xchg
add
es
pop
add
inc
mov
rol
xchg
loopne
aas
call
sbb
adc
add
neg
jmp
dec
dec
fdiv
sbb
(bad)
pop
mov
xor
inc
adc
fdiv
sbb
rcr
mov
mov
mov
and
shl
leave
add
jbe
outs
pop
das
inc
ins
aas
loop
test
mov
(bad)
bound
dec
nop
or
test
sbb
xor
and
jecxz
cmc
or
(bad)
pusha
movs
sub
out
xor
pusha
js
out
pop
popa
ins
imul
jne
ja
mov
adc
outs
jmp
ins
mov
outs
and
ja
test
and
add
pop
cs
mov
push
and
dec
test
jae
dec
aad
inc
test
shl
xor
fild
sub
pop
inc
mov
aad
fs
or
cmp
jge
or
test
xor
sub
scas
stos
mov
adc
cs
and
movs
(bad)
pop
or
xor
mov
cmps
mov
adc
push
or
add
pop
aad
push
clc
xchg
dec
or
sbb
dec
and
pop
jns
xchg
and
adc
mov
push
nop
adc
add
mov
rcr
and
and
inc
pop
shr
in
or
jmp
ror
nop
sbb
pop
sub
ja
ret
imul
pop
add
and
loopne
or
icebp
repz
inc
(bad)
cld
and
cmc
push
inc
push
lods
add
jmp
mov
pop
fld
xchg
adc
or
cmp
or
adc
inc
or
dec
push
fs
or
push
or
and
adc
or
or
or
xor
pop
pusha
or
inc
movlps
sbb
cmp
xor
dec
sbb
popa
sbb
add
and
add
in
xchg
mov
in
data16
add
pop
add
sbb
ret
prefetcht0
cmp
pop
xor
add
aaa
mov
sub
sub
add
adc
xchg
push
and
push
pop
or
test
sub
or
add
jo
inc
pop
mov
loope
stos
pop
push
pop
or
ror
sbb
xor
jns
or
sar
xchg
dec
jb
cmp
inc
xor
xchg
rol
outs
ja
add
dec
jbe
push
in
je
adc
loope
xor
or
jnp
mov
fs
xchg
or
cli
sbb
outs
je
nop
xor
pop
or
dec
jne
imul
and
sbb
and
jb
call
iret
jne
cmps
add
add
jp
inc
imul
pop
inc
adc
or
fstp
(bad)
push
outs
xchg
sbb
sbb
adc
xor
add
outs
mov
sub
pop
dec
xor
push
dec
outs
ins
jns
push
pushf
xchg
fwait
nop
out
inc
adc
ror
push
mov
and
fcomi
xor
outs
je
or
(bad)
lock
jae
lock
out
jge
mov
or
in
and
ss
push
jl
jae
je
or
jb
or
mul
or
ss
push
dec
imul
std
jo
pop
jo
add
push
push
hlt
stos
pop
add
mov
call
lds
add
hlt
jae
adc
add
pop
pop
test
lahf
add
add
pop
pop
aas
mov
or
sbb
push
cwde
or
ins
cmps
nop
cmp
push
adc
scas
jnp
lea
loopne
or
outs
sub
aas
add
call
cld
ss
dec
outs
jne
jbe
jmp
push
shl
push
dec
bound
arpl
jl
inc
or
inc
and
xchg
jl
outs
mov
outs
pop
pushf
cpuid
mov
jne
shl
pop
xchg
rol
adc
ins
pop
and
ss
dec
cmp
mov
arpl
sti
adc
add
add
xchg
out
mov
mov
movs
inc
mov
add
xchg
mov
arpl
jg
lds
ror
retf
mov
inc
movd
fs
dec
rsqrtps
bsr
bound
add
mov
addr16
mov
push
in
dec
or
pop
or
pop
hlt
das
cli
dec
leave
and
or
pop
xchg
inc
pop
test
pop
and
in
dec
push
jg
cmp
jg
push
test
scas
dec
shl
arpl
xchg
jg
adc
pop
and
cmovp
jb
add
pop
xchg
inc
(bad)
pop
and
mov
jg
sahf
dec
or
pop
add
pop
in
das
repnz
nop
add
add
(bad)
sub
pop
and
or
or
pop
xchg
setp
adc
test
pop
sub
daa
pop
lds
inc
add
push
gs
adc
pop
and
pop
add
in
add
jmp
add
or
ss
dec
imul
dec
(bad)
mov
dec
lods
pop
xchg
setp
add
dec
arpl
lods
and
mov
fcmovb
mov
inc
ret
adc
out
arpl
iret
pop
sub
js
mov
test
test
add
dec
pop
cmovne
add
pushf
outs
add
iret
pop
sub
sub
test
test
dec
and
test
sub
jae
sub
xor
and
ins
and
xchg
pop
inc
movhps
jl
dec
and
push
add
jmp
enter
iret
pop
sub
sbb
movs
scas
in
xor
xchg
xchg
add
xor
inc
or
cmps
(bad)
iret
pop
sub
cmp
je
(bad)
in
or
jae
xor
sub
dec
outs
aam
mov
jo
or
jns
cli
or
adc
jmp
loopne
xchg
jns
xchg
jb
loopne
adc
and
scas
outs
adc
xlat
test
fmul
in
inc
(bad)
mov
add
std
jbe
add
sbb
jmp
ror
jne
mov
push
fdiv
or
repnz
add
push
test
test
add
es
push
clc
nop
mov
sbb
or
adc
nop
mov
or
movs
lods
leave
nop
mov
or
jno
push
sbb
test
daa
xor
push
mov
add
retf
sbb
push
inc
cmp
push
dec
mov
mov
xlat
js
or
add
fst
pusha
repnz
push
call
xor
sti
in
sub
rol
add
adc
inc
out
movs
mov
or
loopne
mov
pop
add
ror
jnp
dec
outs
jbe
jbe
mov
arpl
xchg
or
stc
mov
and
pop
addr16
sub
add
mul
jns
push
and
aas
aas
mov
pop
add
ret
mov
outs
ins
dec
cmp
xchg
mov
or
add
in
add
ficom
push
movs
cmp
mov
dec
pop
inc
icebp
fld
sbb
inc
add
adc
scas
fstp
jl
imul
hlt
addr16
dec
repnz
sbb
nop
xchg
add
out
push
rol
(bad)
xchg
push
xchg
inc
popa
push
arpl
sbb
loopne
je
ja
add
cmp
dec
mov
lahf
pop
or
mov
(bad)
adc
adc
pushf
fsub
pushf
cmpps
mov
dec
inc
push
daa
daa
daa
and
(bad)
fdiv
setge
shl
sahf
sub
ins
call
daa
ja
es
push
aad
xchg
inc
add
mov
dec
add
mov
js
add
out
ins
jo
mov
adc
sbb
addr16
inc
inc
bound
bound
mov
les
sub
mov
and
pop
add
adc
jg
cwde
xchg
push
pop
jg
dec
inc
jmp
sahf
and
jmp
fild
test
in
cmp
xor
add
pop
cwde
out
add
push
mov
xor
and
push
push
stc
dec
xchg
or
jno
xor
adc
test
mov
xchg
sub
ins
cmps
inc
es
adc
add
sub
or
sbb
loope
or
push
nop
or
or
or
adc
inc
mov
stos
fmul
cmps
loopne
sbb
add
popa
sub
xor
push
pop
inc
push
leave
or
mov
fs
gs
lock
xor
imul
xchg
jns
sbb
pop
add
data16
dec
aam
pop
aam
xchg
push
mov
add
int3
xchg
xchg
inc
push
outs
jb
(bad)
enter
add
add
fstp
je
or
imul
or
mov
loopne
pusha
and
inc
inc
sub
sbb
add
inc
cmp
inc
mov
addr16
nop
inc
mov
ror
inc
gs
clc
bound
adc
jne
mov
pop
adc
mov
ficom
adc
test
pop
in
add
xchg
or
sbb
jle
mov
push
mov
fcmovu
xchg
xchg
nop
adc
fisub
adc
test
pop
jb
or
xchg
inc
add
mov
(bad)
xchg
ja
inc
test
mov
pushf
pusha
sbb
lock
jmp
mov
mov
add
cmp
push
loope
inc
mov
dec
dec
inc
sahf
push
xchg
cmp
cmps
stos
mul
jp
inc
pop
js
inc
shl
and
daa
jge
es
ins
dec
xor
jae
inc
adc
ror
mov
jge
mov
sub
push
dec
or
or
jmp
pop
xor
and
xor
xchg
mov
xor
not
inc
icebp
arpl
lahf
pop
or
jecxz
xchg
xchg
xchg
inc
and
in
or
(bad)
xchg
xchg
sbb
ror
push
ffreep
sar
fild
mov
mov
add
dec
mov
dec
add
mov
(bad)
fist
sar
inc
js
sub
jo
mov
mov
lea
cmp
pusha
test
ret
ins
leave
es
xchg
jo
call
xchg
mov
pushf
popf
push
inc
imul
ds
push
xchg
gs
xchg
add
(bad)
cmovp
ds
dec
lods
ds
je
outs
or
xchg
stc
jmp
mov
xchg
or
push
sbb
dec
adc
mov
sbb
ror
gs
mov
jne
xchg
jbe
push
je
ss
neg
jne
adc
nop
adc
mov
cmp
pop
adc
imul
pushf
shl
and
imul
jbe
pop
test
punpckhbw
mov
in
or
loopne
scas
imul
inc
inc
cmps
outs
lock
jmp
repz
repz
imul
iret
mov
cmp
repz
ror
fst
ret
repz
push
add
jmp
or
push
push
aaa
push
adc
cmp
clc
es
cwde
cmps
mov
or
into
sbb
mov
ja
xchg
cli
push
jmp
add
daa
jmp
call
pcmpgtw
dec
dec
inc
cmp
dec
daa
pushf
pop
cmps
retf
daa
daa
lock
mov
jae
xor
enter
pushf
popf
je
push
and
sbb
jbe
les
or
or
mov
pushf
enter
popf
dec
mov
jno
pop
and
stos
xor
inc
pop
jns
inc
or
pushf
popf
movs
int3
ja
sbb
jne
arpl
fadd
cmp
fcmovnbe
ja
dec
add
lods
std
aam
sub
test
add
or
xor
pop
test
das
mov
or
jns
sub
ret
dec
dec
add
jns
inc
sbb
inc
mov
xor
outs
arpl
jge
jne
cmp
mov
leave
cld
mov
add
js
xchg
xchg
cmp
lock
mov
xchg
xchg
and
jns
mov
add
jecxz
add
test
inc
push
popf
stos
add
sahf
sti
adc
adc
cli
jo
sti
pop
arpl
push
inc
or
or
neg
mov
aas
mov
adc
add
dec
or
pop
jnp
retf
and
pop
loopne
sahf
xor
xchg
mov
popa
xor
add
js
repz
inc
lock
mov
test
sub
dec
adc
les
adc
mov
imul
imul
imul
test
sub
out
not
add
pop
enter
fdivr
adc
dec
jo
fisubr
cmp
pop
ins
mov
cwde
mov
mov
mul
sub
sahf
sub
sahf
movs
mov
ror
sub
into
push
neg
push
sub
les
push
imul
call
jae
xchg
daa
xchg
push
mov
mov
mov
test
leave
jmp
hlt
or
sub
mov
(bad)
sbb
sahf
in
packsswb
inc
inc
mov
pop
aas
inc
adc
add
pusha
mov
push
scas
jo
adc
pop
daa
movs
out
inc
leave
add
(bad)
cmp
add
adc
xor
jo
cli
mov
mov
cmp
shrd
(bad)
lahf
inc
shl
and
in
jns
push
icebp
push
addr16
(bad)
mov
cmps
or
repnz
jg
shr
loope
lock
cmovbe
outs
gs
add
div
sub
psubw
cmps
add
dec
test
in
ins
dec
int
jne
jns
add
loopne
daa
add
and
sub
sbb
inc
inc
push
or
les
sahf
shl
adc
lods
adc
test
jbe
cli
pushf
jne
movs
mov
mov
movs
inc
sub
cmp
movs
adc
or
out
cmp
push
and
cs
adc
jmp
jbe
jmp
add
(bad)
cmp
add
push
mov
or
popf
js
mov
add
inc
retf
ds
dec
je
movs
cmp
movs
sub
call
push
test
pop
rcl
sbb
inc
fsub
and
add
cmp
sbb
xchg
sbb
data16
pop
pop
mov
arpl
mov
add
sub
loope
inc
inc
mov
cdq
jmp
sub
jnp
rcr
add
(bad)
or
sbb
pushf
adc
repz
into
dec
(bad)
(bad)
sbb
or
or
sbb
ins
fbld
js
and
adc
arpl
push
sub
movs
mov
mov
and
inc
daa
pop
das
jnp
sbb
cmp
shl
pop
std
dec
mov
cmps
xchg
int3
cmps
fiadd
pop
push
test
push
sbb
cmp
mov
movs
or
dec
fld
push
push
mov
scas
jge
xchg
loop
pop
dec
test
add
ja
push
sub
push
loope
inc
packsswb
or
add
test
cmps
or
jmp
aam
sbb
mov
test
xchg
mov
adc
repz
sbb
test
mov
cs
xchg
add
movs
and
jecxz
mov
inc
iret
arpl
jle
sub
sub
and
inc
push
jo
popa
je
push
fnstsw
in
retf
popa
pop
inc
xlat
in
or
call
lods
mov
cs
mov
dec
jle
(bad)
ins
mov
pop
push
stos
paddb
stos
das
pop
jo
das
or
mov
stos
in
xchg
into
dec
lahf
push
stos
pop
mov
add
ror
std
(bad)
cld
(bad)
sti
(bad)
inc
sbb
repz
or
cmp
sbb
lods
cdq
imul
popa
pop
sbb
fld
frstor
xor
jo
add
mov
add
sub
fdivr
pop
fsub
inc
and
pop
or
sbb
inc
test
int3
adc
push
add
pop
push
(bad)
scas
cwde
icebp
add
pop
sub
mov
push
add
jo
pop
imul
nop
pusha
ret
(bad)
mov
and
enter
add
push
mov
or
cmp
popf
cmps
movs
and
aam
pop
inc
adc
ss
jo
add
icebp
add
pop
int
cmps
add
pop
stc
mov
jnp
fwait
or
xchg
push
mov
xlat
js
das
push
pushf
rcr
mov
rcr
add
lods
xlat
ror
inc
push
pop
push
clc
or
xchg
rcr
pop
fadd
mov
lods
lahf
or
test
in
outs
adc
ja
inc
xchg
icebp
add
lods
push
xchg
mov
mov
push
push
or
test
popa
inc
add
inc
dec
bound
lock
xchg
sbb
xlat
jae
ds
sbb
mov
xor
pushf
jae
push
rcl
sahf
cmps
and
adc
aad
jmp
mov
xor
dec
jnp
and
repnz
push
push
jne
and
ds
lods
sbb
fwait
std
push
lock
adc
inc
arpl
add
or
push
adc
jne
inc
mov
fsub
mov
inc
jp
add
iret
dec
dec
and
scas
mov
pop
xchg
scas
call
inc
sub
or
or
stc
retf
add
scas
add
adc
add
adc
loopne
and
cmp
mov
in
xor
inc
int
lock
lds
arpl
inc
ja
mov
add
add
add
pop
inc
mov
stc
pusha
mov
mov
test
out
xchg
fdiv
popf
ins
mov
mov
and
out
mov
add
not
rol
mov
ror
add
pcmpeqb
push
cwde
ja
jnp
ss
mov
mov
in
or
pushf
mov
js
pushf
xchg
xlat
jbe
jge
xchg
push
cld
das
xor
sahf
inc
lahf
mov
xchg
push
push
and
(bad)
push
xor
call
mov
sub
je
test
or
lea
mov
mov
push
mov
add
fcom
daa
cmp
bound
dec
loope
inc
sub
xor
sub
push
sbb
fadd
sub
sbb
inc
cmc
es
stos
push
aas
sbb
jne
cmps
inc
push
aaa
and
in
adc
mov
add
inc
dec
dec
aas
jno
ja
sub
clc
mov
push
mov
inc
test
dec
jl
pfmul
fld
(bad)
jmp
pop
pop
lgs
loope
or
push
retf
xlat
sub
sbb
mov
mov
(bad)
shufps
ds
mov
cmp
mov
xchg
push
add
pop
push
mov
sub
sbb
mov
sbb
sub
pop
push
jne
sbb
mov
mov
mov
mov
push
out
cmp
xchg
mov
lods
mov
cmp
or
and
ret
mov
add
or
push
sub
or
push
loopne
jae
mov
bound
mov
inc
dec
xlat
pusha
or
mov
or
sub
addr16
cs
sub
add
inc
jo
scas
cmps
pop
sbb
cmp
jo
add
movs
xor
sub
test
fs
adc
mov
dec
add
and
jecxz
push
aad
shl
test
pushf
dec
pushf
mov
lea
or
jb
sbb
bound
in
pop
mov
aaa
add
push
fbstp
stos
sbb
lds
and
push
aas
rcl
sub
cmp
sbb
fs
add
pop
jbe
adc
dec
xor
lea
addr16
dec
cmp
mov
and
add
imul
popa
sub
ds
inc
bound
cli
mov
inc
outs
sbb
popa
test
adc
cmp
or
stc
lahf
add
jns
or
test
mov
aas
mov
imul
pop
push
add
add
enter
ins
or
ds
adc
retf
push
lahf
call
or
adc
dec
sbb
xchg
dec
mov
jnp
dec
js
sbb
xlat
adc
xchg
adc
cmp
cmp
push
outs
ret
dec
add
ja
jno
inc
mov
pop
xor
dec
add
push
xor
fisub
push
mov
push
add
(bad)
mov
loopne
or
mov
sub
add
outs
out
outs
test
pop
or
and
push
cmc
mov
inc
imul
inc
dec
cmp
or
arpl
cmps
sub
pusha
sbb
test
mov
shl
xor
cmps
sub
push
add
sbb
int
cmp
adc
rol
mov
cmp
push
mov
add
js
stos
adc
xor
cmp
loop
xchg
xchg
and
mov
popf
pop
or
sbb
push
pusha
adc
lahf
jmp
fdiv
sub
pop
cld
das
add
inc
inc
inc
mov
lea
frndint
and
inc
inc
inc
inc
inc
jno
mov
inc
adc
and
scas
add
test
add
add
add
add
ins
xchg
sub
push
add
sub
sub
les
(bad)
sar
fild
and
and
sub
jecxz
add
adc
in
sub
push
inc
pop
and
in
popa
rcl
fidivr
or
fs
or
xor
sub
jnp
xchg
aam
sub
leave
hlt
inc
push
(bad)
idiv
and
pop
pop
inc
push
fidivr
sub
inc
pop
xor
sbb
setns
cmp
sub
fst
push
jno
mov
adc
shl
xchg
retf
jmp
adc
xor
repz
(bad)
mov
(bad)
or
imul
outs
pop
pop
iret
add
add
test
(bad)
sahf
adc
inc
pushf
xchg
(bad)
js
xor
xor
lea
mul
ja
push
adc
in
dec
mov
jmp
sub
test
xor
jnp
sbb
call
push
rol
aam
add
aas
les
test
mov
jmp
(bad)
enter
ds
cmp
mov
push
jge
les
dec
stos
mov
pop
sbb
push
push
mov
repnz
mov
cmps
add
add
push
or
(bad)
adc
mov
xchg
jbe
pop
or
xlat
test
add
cmp
adc
arpl
and
cmp
cmc
mov
loopne
push
cmp
into
std
mov
sub
xor
jnp
add
pop
cwde
cli
mov
outs
aaa
sub
mov
push
fld
lods
mov
ja
push
ret
fldcw
inc
popf
fild
jno
lods
outs
inc
mov
add
inc
paddb
in
clc
movups
mov
add
(bad)
stc
repnz
call
sbb
into
shr
sbb
and
movs
mov
jp
or
enter
call
sbb
mov
or
or
mov
mov
test
cs
pop
enter
test
push
movs
mov
movs
mov
and
(bad)
(bad)
hlt
movs
inc
cmps
sub
test
cmp
and
aam
pop
test
movs
xor
and
add
xchg
scas
cmps
or
xchg
repz
scas
cmps
sub
inc
fild
test
ins
cmps
inc
pop
rol
inc
add
dec
and
jns
jp
mov
adc
or
icebp
shl
dec
xchg
rcr
pusha
mov
sbb
fbstp
pop
loopne
ins
add
jl
es
jno
ins
cmp
mov
and
cmp
adc
push
in
xchg
jmp
xchg
push
mov
add
jmp
or
inc
das
inc
or
mov
add
sub
dec
daa
int
xchg
rcl
inc
into
pop
xor
cmp
mov
or
rol
stos
mov
jmp
lods
push
lods
push
pushf
mov
scas
retf
retf
test
cmp
inc
leave
ins
or
retf
punpcklbw
jmp
sub
and
enter
mov
arpl
leave
int
into
pop
pop
push
push
dec
cmps
push
jae
cmp
retf
into
fst
push
inc
jne
data16
inc
add
add
loop
jmp
test
imul
dec
sbb
push
add
neg
lods
pop
(bad)
sub
adc
mov
add
dec
add
jecxz
push
and
dec
push
test
mov
jl
or
inc
xor
or
add
(bad)
out
adc
pop
aaa
add
add
add
scas
mov
jmp
add
aas
xchg
sub
or
imul
mov
enter
mov
pusha
and
add
(bad)
mov
jg
and
scas
nop
cmps
(bad)
sub
push
gs
cmps
add
es
cmps
cmp
je
jp
push
shr
inc
sbb
pop
xor
movs
add
mov
mov
les
push
das
outs
mov
cmp
aas
(bad)
adc
and
or
js
das
sbb
mov
daa
mov
sub
and
pop
mov
add
xchg
lock
sbb
fidivr
or
add
rol
call
push
or
mov
add
icebp
dec
les
es
push
out
mov
adc
mov
push
dec
pusha
mov
invd
test
jne
pop
iret
ja
in
rol
(bad)
das
mov
xor
enter
fidivr
xchg
push
xor
dec
loopne
cmp
pop
dec
lock
add
shl
rcl
pop
inc
dec
mov
lea
ret
iret
mov
push
pop
jae
mov
cmp
clts
daa
enter
or
add
dec
inc
les
and
aad
ror
das
ja
add
shr
ja
shl
scas
or
ins
xchg
sbb
inc
into
push
or
inc
mov
loopne
jne
or
jmp
jl
inc
cwde
push
mov
adc
jns
mov
outs
iret
inc
adc
inc
sbb
or
ror
jae
adc
xchg
fdiv
shr
cmp
cmp
pop
or
jno
push
inc
in
adc
dec
fstp
mov
mov
push
ror
add
or
pushf
lea
cdq
add
add
add
test
lds
sub
adc
scas
pop
ins
adc
sahf
and
scas
dec
enter
push
push
fcomi
shl
adc
push
sbb
jno
xchg
ins
sar
aad
inc
xlat
mov
das
repz
adc
aaa
enter
push
mov
mov
imul
(bad)
mov
cmps
rol
popf
add
add
mov
aaa
xlat
mov
dec
cvtps2pd
daa
jbe
mov
push
retf
mov
daa
mov
mov
mov
adc
call
or
adc
test
mov
and
sti
daa
popa
or
or
inc
add
xchg
aad
add
sbb
ins
rcr
dec
aad
adc
push
test
scas
xchg
xlat
mov
or
es
sbb
rcr
in
fdiv
cmp
mov
or
sbb
dec
dec
(bad)
pop
jo
cmp
mov
adc
add
or
dec
psrld
or
add
jae
xlat
inc
mov
mov
or
rol
ds
leave
or
adc
cmp
adc
cmp
sub
jno
pop
ret
push
xchg
repnz
inc
bound
or
cmps
jecxz
and
inc
out
sahf
not
cwde
push
push
ins
das
jp
sbb
dec
add
ins
aad
cmp
dec
sbb
pop
test
frstor
push
inc
inc
jns
or
cvtpi2ps
xor
or
or
pop
cmp
and
and
push
mov
or
push
fld
clc
fisttp
mov
das
lock
and
xlat
push
and
pushf
pushf
mov
adc
add
mov
outs
and
or
add
fldcw
fimul
in
leave
leave
pop
xchg
repz
addr16
cdq
jno
add
cmps
lods
mov
imul
xor
sbb
fistp
test
rol
xlat
pop
inc
add
sbb
ins
sar
nop
pushf
pop
ins
sbb
popa
add
mov
inc
dec
pop
mov
or
push
ret
iret
leave
or
loopne
inc
adc
push
mov
mov
pop
fnstenv
xor
daa
push
lds
sbb
cdq
inc
enter
inc
mov
adc
fild
add
mov
mov
jno
pusha
cwde
add
cmps
les
sub
les
push
fmul
shl
mov
add
fcomp
into
ds
test
mov
dec
fst
and
ja
push
sub
les
inc
xchg
and
xchg
dec
(bad)
shl
dec
daa
pop
icebp
outs
add
dec
inc
ins
outs
bound
mov
pushf
jmp
mov
adc
push
mov
daa
and
push
inc
pop
xor
pop
pushf
mov
mov
fidiv
mov
jmp
retf
jb
mov
push
sbb
add
inc
mov
xor
test
fiadd
in
ficom
push
or
fcomp
jecxz
iret
mov
add
sub
ror
out
sub
sbb
mov
ins
mov
push
inc
or
sub
shr
in
or
or
inc
push
in
adc
push
in
push
sbb
and
add
and
mov
repz
fistp
push
scas
jg
repz
mov
nop
cmp
repz
push
arpl
fbld
gs
fild
outs
mov
xchg
jae
pop
dec
aad
aam
loopne
lock
hlt
in
test
inc
ds
loopne
loope
loopne
sub
add
out
and
push
cld
pusha
push
push
push
inc
mov
or
retf
into
add
inc
mov
test
sub
push
adc
loope
mov
pop
jnp
shl
mov
or
mov
jb
jecxz
std
repnz
in
jno
sti
int
wbinvd
add
popa
inc
push
repz
and
inc
inc
mov
movs
lock
jo
pusha
enter
dec
push
dec
sub
rol
dec
xchg
add
jge
xchg
cs
or
or
xchg
mov
int
jo
es
arpl
fs
popf
mov
fadd
jo
jnp
push
sub
pop
mov
lea
sub
pusha
ret
scas
cmp
out
adc
fs
adc
add
jbe
add
ficom
ja
and
sbb
int3
leave
mov
jnp
cmp
dec
lar
or
pop
push
and
jmp
add
outs
jae
add
or
jl
ins
lea
and
jne
and
movs
ror
ins
mov
adc
add
add
add
in
imul
push
mov
cli
aam
repnz
add
pop
pop
or
fmul
outs
xchg
movs
ret
add
int
push
sbb
jnp
scas
xor
jle
out
stc
pop
cmp
mov
dec
lds
add
cmp
add
pop
jae
push
add
cmp
and
std
or
enter
xchg
outs
outs
rol
or
pop
sub
mov
loopne
int3
sbb
adc
or
add
shr
aas
call
jnp
nop
mov
maxps
ror
ficom
pop
or
sbb
or
adc
and
cmp
mov
sbb
jnp
pop
push
out
in
sti
pusha
xchg
js
inc
daa
push
das
ja
sbb
sub
out
int3
pop
push
or
int
test
jo
in
nop
jbe
ins
mov
add
psubusb
jmp
jnp
xor
scas
out
or
pop
dec
mov
ret
add
dec
add
je
lea
and
fst
arpl
add
and
push
repnz
pop
inc
test
xchg
clc
dec
or
add
lds
or
adc
jno
xchg
ja
xchg
inc
adc
add
icebp
add
add
add
pop
mov
jp
add
fwait
sbb
out
fcomi
fsub
or
inc
sub
out
cli
mov
push
aam
push
jbe
mov
or
addr16
cmp
or
xor
mov
or
shl
push
inc
lods
mov
sar
gs
jb
ds
out
adc
inc
test
shr
or
lods
and
push
lds
loope
std
mov
dec
movs
mov
pop
add
inc
cmp
jb
adc
iret
enter
xchg
and
xchg
les
or
ins
jnp
lods
pushf
push
inc
push
scas
add
mov
sbb
addr16
jns
ss
jae
xchg
add
or
push
mov
clc
xor
sbb
sub
jo
fwait
mov
pop
cdq
dec
or
dec
lea
and
je
fld
sbb
sub
or
sahf
xchg
pop
nop
frstor
dec
jo
xchg
sbb
xchg
xchg
out
add
adc
xchg
sbb
and
cld
or
add
xchg
sbb
pop
and
pop
sbb
loop
in
pop
inc
(bad)
int
dec
add
scas
popf
mov
sub
push
lods
es
cs
mov
das
call
popa
aaa
mov
mov
loopne
or
mov
fdiv
aad
jo
or
and
imul
push
outs
jae
inc
pop
mov
sub
inc
aas
add
je
outs
mov
jae
retf
imul
cmp
mov
aas
jne
xor
(bad)
imul
mov
sub
jmp
in
pop
jnp
jmp
stc
lsl
inc
pop
mov
mov
cmp
or
pop
out
push
in
or
add
clc
test
cmps
push
iret
pop
ins
cmps
je
sub
add
leave
movs
ret
fsubr
dec
adc
or
adc
fwait
push
and
fsub
or
mov
not
js
adc
adc
fld
pop
leave
addr16
mov
sbb
push
mov
jne
push
lds
lahf
pop
ss
adc
push
xchg
(bad)
mov
mov
cmp
xchg
aam
scas
inc
ror
push
mov
arpl
inc
sbb
cmp
mov
jmp
stos
inc
leave
out
xchg
andps
in
push
cmp
fwait
xchg
gs
or
out
sub
cld
xor
lahf
dec
add
adc
xchg
or
test
fs
mov
add
add
push
ret
outs
pop
mov
xor
jo
mov
addr16
cdq
mov
ffreep
or
mov
adc
mov
mov
outs
mov
or
or
out
or
or
add
dec
or
cmp
push
das
out
inc
add
out
or
and
or
jle
mov
or
push
mov
push
xchg
sub
add
rcl
in
xchg
stos
test
fst
iret
push
push
or
icebp
imul
out
adc
or
mov
cmp
mov
mov
not
jo
je
mov
add
lock
xchg
jae
or
in
test
adc
icebp
dec
and
loopne
icebp
int
add
das
popa
inc
cmp
shl
lea
mov
inc
popa
pop
and
cdq
ja
cmp
mov
cmp
sbb
sbb
and
js
or
xor
mov
sub
push
mov
push
out
inc
add
add
mov
adc
xor
popa
add
mov
(bad)
push
add
add
out
lea
xor
repnz
mov
inc
or
sbb
add
push
movntq
inc
add
adc
jb
cwde
mov
imul
outs
sub
mov
inc
xor
and
add
and
ror
and
xor
das
add
cmp
sbb
pop
aam
or
sti
fidiv
push
xor
scas
test
inc
jmp
ret
pop
xchg
push
cmp
jle
call
movs
lds
test
mov
into
push
cmp
inc
pop
jmp
cmps
push
fcom
test
mov
adc
push
inc
jge
sub
dec
and
add
cmp
xor
pop
outs
and
push
out
jecxz
sar
and
outs
imul
out
sbb
jnp
adc
dec
addr16
dec
xchg
pop
into
mov
sub
ja
add
pop
adc
mov
ins
mov
outs
inc
inc
aad
ficom
inc
aad
js
dec
jo
adc
jne
(bad)
aaa
adc
mov
in
cli
jge
mov
mov
div
outs
daa
dec
mov
add
aad
add
xlat
fwait
test
add
pop
repnz
mov
cmovne
into
leave
ins
imul
stc
das
pop
jne
add
dec
jns
jb
jae
(bad)
or
cmp
cmp
dec
cmps
iret
stc
pushf
pushf
mov
cld
dec
ja
inc
sahf
pushf
pushf
(bad)
jmp
jo
mov
xchg
xchg
xchg
xchg
inc
scas
jmp
inc
or
inc
xor
daa
fwait
jo
mov
jno
(bad)
punpckldq
popa
sub
movs
jae
or
out
cmp
stos
or
arpl
xchg
fadd
xchg
add
add
aad
inc
inc
jb
jns
sbb
imul
lds
adc
jo
je
pop
enter
dec
out
sub
lock
scas
lds
or
push
adc
mov
mov
dec
sbb
aam
outs
pop
sub
pop
add
dec
jmp
pusha
xor
push
or
mov
jl
add
or
mov
inc
jne
add
sub
aad
es
les
daa
cmc
std
xor
sub
xor
cmp
add
dec
dec
sub
dec
or
ss
mov
lahf
js
cmp
push
push
sub
fnstsw
add
lea
ret
cs
mov
adc
test
mov
daa
add
adc
sbb
pop
inc
add
and
mov
mov
icebp
xchg
add
icebp
lods
ror
push
je
mov
paddb
cmps
test
call
mov
aam
cmp
stos
cli
and
mov
sub
pop
das
mov
sbb
les
inc
sbb
lea
in
test
mov
xchg
and
cmp
dec
enter
rol
(bad)
retf
push
out
jle
or
rol
ins
fs
or
les
adc
or
dec
js
adc
mov
add
add
movs
mov
mul
fbstp
and
cmp
sbb
add
(bad)
rcl
sub
outs
mov
hlt
pop
pop
cmp
add
xor
mov
cmp
push
or
pop
mul
bound
dec
cmps
cwde
mov
out
ins
mov
out
push
add
xchg
push
mov
adc
mov
add
or
sub
out
imul
sub
adc
push
pop
lea
jl
pop
and
iret
jmp
push
and
repnz
adc
xor
xor
aaa
add
or
cmp
xor
repnz
dec
cwde
xor
xor
add
sbb
out
and
sub
push
mov
mov
pop
shl
mov
pusha
xchg
sbb
int3
dec
inc
jnp
cmp
rol
mov
adc
aam
inc
cwde
jno
mov
add
push
jmp
pop
push
xor
jecxz
or
jno
jo
adc
aaa
jmp
ror
inc
pop
pop
(bad)
js
mov
cmp
fimul
adc
push
push
pop
lock
sub
add
loope
or
xchg
and
shr
ins
ins
clts
outs
add
xor
pop
mov
cmp
jne
in
movs
add
repz
dec
pop
enter
xchg
in
stos
xor
add
adc
xor
add
daa
add
dec
mov
adc
and
xchg
mov
push
test
cli
fincstp
and
mov
das
mov
pop
fldenv
loop
sub
cmps
icebp
inc
ds
jge
push
mov
or
mov
sbb
test
cmp
inc
jge
es
or
test
cwde
or
sar
adc
xor
ja
(bad)
cmp
mov
sub
(bad)
jmp
jp
loop
push
adc
dec
popa
or
adc
jmp
jnp
mov
cmp
add
minps
push
inc
inc
push
inc
mov
add
add
aad
punpckldq
loope
or
xchg
xchg
xchg
push
movs
ficomp
or
leave
leave
leave
push
mov
jmp
in
in
or
iret
jb
xor
adc
push
jle
cmp
sub
push
add
daa
out
out
xchg
adc
and
mov
test
pop
leave
or
pop
not
arpl
lock
lock
pop
neg
xor
push
and
mov
inc
xchg
bound
xor
adc
mov
add
and
xchg
mov
aaa
(bad)
push
mov
push
cmp
inc
repz
add
aaa
int3
rol
jnp
hlt
out
push
mov
shl
cmp
popa
jb
add
dec
cmp
mov
push
ja
inc
stos
adc
stc
xor
pop
xlat
or
inc
adc
mov
movs
sahf
or
add
adc
or
test
cmp
enter
sbb
sar
rol
(bad)
rol
popa
and
xchg
jae
ins
or
mov
in
stc
pop
ja
bound
adc
pop
adc
mov
je
mov
outs
lds
or
fs
les
mov
icebp
inc
or
mov
scas
cmp
test
leave
pushf
cmp
adc
inc
in
and
cs
test
in
das
sub
adc
rcl
sbb
sar
add
imul
pop
and
add
xor
push
(bad)
xor
and
mov
adc
test
add
mov
xchg
imul
push
inc
and
adc
scas
rcl
and
jae
sbb
inc
mov
rcl
jnp
adc
adc
jns
inc
and
rcl
rcl
addr16
or
mov
push
enter
data16
or
(bad)
les
and
mov
push
push
loope
cwde
or
mov
cmp
add
test
adc
and
icebp
sub
push
movs
cdq
sub
sbb
and
or
outs
les
sub
adc
retf
adc
ret
add
jecxz
adc
sbb
rol
repz
push
loopne
jo
shl
adc
pushf
push
in
cmp
popa
add
nop
(bad)
cmp
pushf
mov
sub
pop
push
fild
ficomp
push
inc
dec
imul
push
mov
push
and
dec
mov
or
add
adc
pusha
or
aaa
mov
sub
sub
lods
and
cmps
push
inc
adc
pop
(bad)
pop
jne
inc
or
shl
dec
loopne
add
mov
jp
inc
add
scas
shl
shld
jl
pop
xor
adc
retf
sbb
or
outs
(bad)
icebp
push
cdq
adc
wbinvd
adc
dec
test
jmp
adc
dec
(bad)
adc
jb
fcom
adc
add
lods
pop
add
adc
dec
push
mov
arpl
pop
jp
pop
inc
popa
and
(bad)
adc
add
push
sbb
push
mov
inc
lahf
pop
movs
add
(bad)
scas
push
sbb
inc
cmp
pop
retf
pop
dec
adc
sar
add
sbb
push
jge
(bad)
imul
fcom
cwde
test
inc
or
in
mov
jnp
test
jbe
daa
cmc
inc
ins
je
sbb
xlat
and
sub
cmp
or
js
xor
sub
push
push
inc
mov
dec
inc
stos
imul
sub
lock
jae
push
mov
and
adc
sbb
je
add
mov
jp
dec
push
rcr
push
iret
dec
stos
push
fsub
and
dec
outs
je
bound
add
sbb
popf
ret
in
inc
nop
(bad)
lods
push
sub
push
test
adc
scas
cmp
jb
jge
add
test
add
sbb
cwde
push
dec
popf
push
push
ror
add
add
add
pusha
add
int
arpl
push
imul
dec
pop
cmp
sbb
jae
sbb
mov
ins
(bad)
cmp
mov
add
in
adc
fcmovnb
add
pop
lods
lss
inc
mov
mov
or
or
nop
pop
(bad)
push
mov
add
inc
push
or
nop
out
or
punpckhwd
jns
mov
popa
push
inc
cmp
je
loopne
push
popa
call
rcr
and
ins
adc
(bad)
(bad)
dec
and
or
inc
push
jno
push
rcl
push
xor
cwde
push
test
push
mov
jge
push
sbb
cs
inc
outs
arpl
cmp
and
cli
cmps
sbb
adc
pop
add
inc
aas
ja
pusha
mov
jno
inc
and
scas
add
inc
and
(bad)
cmp
ja
sub
add
pop
in
imul
daa
les
int3
push
push
(bad)
push
(bad)
sbb
pop
mov
loope
sbb
test
add
aaa
sbb
push
cs
cmp
push
enter
or
add
xor
ret
clc
pop
jecxz
rol
jo
push
adc
push
jne
sbb
neg
gs
or
add
je
repz
mov
pop
setno
xor
jecxz
(bad)
gs
adc
loopne
and
xor
ret
or
dec
lea
sub
outs
in
and
cmp
or
das
mov
ret
adc
or
add
cmp
ins
adc
outs
out
cmp
test
cs
ret
pop
aam
data16
cs
(bad)
sbb
je
xchg
pusha
push
pushf
push
cmp
jo
cmp
sbb
leave
leave
enter
pop
sbb
addr16
jmp
mov
pmaxub
sbb
cmp
sbb
(bad)
sbb
aas
push
aad
push
jge
jb
pop
mov
mov
enter
push
push
scas
aas
sub
test
or
mov
sub
retf
push
pushf
mov
inc
outs
push
jns
outs
clc
cmp
mov
pop
push
xchg
scas
push
jno
jmp
xor
fmul
fmul
pop
mov
xor
jns
jne
adc
dec
adc
retf
ror
dec
mov
les
les
add
mov
mov
or
lahf
test
popa
(bad)
mov
or
adc
fsincos
dec
xor
(bad)
sbb
pop
xchg
push
pop
jmp
jmp
add
das
xlat
jmp
sbb
lds
inc
test
mov
jmp
imul
ja
lea
push
shl
imul
jge
push
ret
adc
mov
inc
or
inc
inc
xor
ins
cld
or
inc
add
bound
inc
adc
dec
inc
jnp
mov
push
add
rcl
pop
xor
push
mov
and
int
push
add
sub
mov
hlt
mov
add
popa
imul
dec
je
jae
aad
xor
mov
gs
or
imul
dec
cmps
call
imul
aam
pop
add
js
pop
test
xchg
pop
dec
mov
xchg
retf
xchg
xchg
aam
sbb
cmp
ret
pop
add
push
push
ret
or
xchg
sub
push
and
or
movaps
test
test
sar
inc
test
mov
mov
cmp
or
test
movs
cmp
adc
push
or
jo
or
mov
cmps
add
(bad)
cmps
int3
sub
iret
jle
aam
inc
daa
adc
das
and
or
jnp
xchg
les
cmp
and
cmps
(bad)
mov
cmp
add
iret
shl
dec
stos
add
rol
xor
rol
mov
add
mov
sub
jnp
pop
sub
pop
dec
outs
pop
lea
and
scas
push
fmul
(bad)
adc
aas
call
lock
push
add
push
cwde
inc
sbb
int3
push
jmp
xor
outs
jo
add
or
adc
or
jg
mov
jno
push
je
or
and
dec
cmp
or
sub
add
mov
push
push
pop
or
mov
mov
pop
adc
adc
xor
mov
imul
inc
cmc
adc
add
test
jle
xchg
and
sub
mov
inc
repnz
fwait
add
inc
jbe
imul
mov
mov
data16
scas
sbb
(bad)
jns
add
rol
cmp
or
daa
jecxz
add
fld
out
and
ins
xchg
cmp
or
adc
pop
aam
push
push
and
and
inc
nop
rol
inc
mov
push
sub
cmps
jecxz
lahf
push
jb
outs
mov
mov
jle
outs
fbld
loopne
call
add
inc
jecxz
xor
push
popf
fwait
jb
retf
cld
and
fmul
push
xor
stos
inc
jecxz
sbb
inc
je
bound
cmp
nop
pop
inc
pusha
cmp
and
rol
cwde
or
frstor
fsubr
and
test
wbinvd
dec
dec
(bad)
(bad)
mov
fcom
mov
ja
dec
mov
jecxz
add
sti
out
xchg
in
rcl
add
das
call
inc
test
add
pop
cmp
mov
push
adc
sub
add
es
mov
dec
inc
sub
adc
daa
mov
pop
jl
dec
fwait
add
mov
jo
sbb
ret
dec
add
push
shl
popa
add
push
add
jbe
sub
fs
nop
mov
push
jl
les
push
mov
add
das
bound
sbb
xor
bound
arpl
and
adc
lahf
test
push
rcl
imul
adc
jne
and
stos
and
xor
mov
jbe
ins
or
imul
or
add
push
inc
push
sti
or
ins
sub
xchg
into
arpl
dec
xor
pmulhw
ret
dec
sub
or
xchg
(bad)
cmps
movzx
cmps
sub
push
add
sub
sysret
xor
dec
lds
or
mov
loope
adc
sbb
sub
jo
aad
bound
sub
mov
lds
and
mov
jmp
loopne
inc
sbb
fisttp
sub
ret
inc
int3
neg
in
loop
lahf
mov
push
in
sbb
add
xchg
xor
or
and
cmp
dec
int
jb
or
sub
push
(bad)
nop
adc
ror
xor
pusha
das
dec
data16
dec
ins
mov
mov
pop
mov
xchg
rcl
jmp
inc
clc
outs
mov
call
sub
les
adc
test
sub
outs
sbb
test
out
cmp
movzx
jecxz
fsub
push
loopne
data16
pop
xor
or
lods
push
(bad)
push
ss
idiv
cs
retf
and
stos
int3
inc
int3
int3
jns
xlat
mov
add
sub
pop
push
sub
xor
popf
out
dec
in
mov
sti
cs
xor
add
clc
imul
aas
push
jmp
mov
inc
adc
xchg
rol
mov
mov
lahf
mov
cmp
mov
lock
nop
ds
lahf
sub
mov
ds
cmp
inc
sub
push
xor
int3
dec
xlat
ins
ds
into
push
pop
dec
jl
movs
mov
mov
cmp
lods
push
hlt
cmp
or
and
outs
or
add
test
inc
in
dec
loop
test
or
fadd
imul
(bad)
clc
or
add
pop
mov
or
sbb
fcomp
inc
(bad)
jo
xor
and
adc
cmp
(bad)
mov
and
adc
and
sbb
data16
and
das
test
std
ret
loopne
dec
add
call
xor
pslld
out
push
add
jmp
xor
mov
jae
lahf
mov
xor
call
mov
pmulhuw
xor
clc
inc
push
pop
ja
cld
cmovl
shl
(bad)
(bad)
add
add
mov
stc
jmp
push
push
(bad)
(bad)
sahf
not
int3
fcmove
ret
loopne
in
cmp
sti
js
push
add
or
mov
inc
pop
jl
add
call
dec
aam
aas
ss
inc
xchg
mov
xor
sbb
ds
ins
ja
repz
nop
gs
gs
sub
rol
shl
xchg
popa
test
inc
or
loopne
adc
push
cmp
loope
cs
cmp
dec
cmp
or
add
inc
fs
adc
cwde
lea
mov
xor
push
inc
push
mov
hlt
mov
mov
xor
xlat
add
scas
jo
push
ror
das
xchg
cs
or
xor
add
in
jae
sbb
mov
jecxz
add
shl
inc
pop
xor
adc
dec
arpl
push
push
test
and
loope
adc
mov
sub
test
iret
sbb
fdivr
test
xor
add
xchg
cmc
add
inc
stos
pop
cmps
es
in
jne
test
dec
pcmpeqb
jns
jg
inc
adc
add
inc
and
pop
adc
test
dec
scas
sbb
dec
ror
test
jbe
cmp
adc
xor
mov
pop
jp
les
dec
data16
add
inc
bound
pop
dec
out
dec
mov
mov
jns
leave
push
and
sub
pushf
and
gs
adc
push
inc
sbb
add
pop
adc
dec
add
mov
jmp
adc
and
sbb
mov
mov
pop
sbb
xchg
pop
dec
ins
mov
or
xchg
retf
hlt
sbb
xchg
xchg
bound
push
test
or
dec
aam
fnstsw
test
push
or
add
inc
jge
jne
popa
test
jl
inc
pushf
dec
inc
loope
mov
lea
and
rcl
push
in
mov
add
popa
stos
pushf
adc
or
lods
jae
movs
jb
pop
ret
popa
lock
or
fisub
test
pusha
or
sub
mov
fistp
xchg
es
das
jle
aad
loopne
push
dec
js
cmp
ds
push
push
lods
or
cmps
push
adc
add
repz
push
sbb
mov
daa
popf
clc
jnp
arpl
inc
pop
pop
add
jae
rcl
dec
aas
jmp
aaa
jecxz
aaa
inc
sub
xchg
sub
mov
push
inc
test
arpl
mov
jmp
outs
sub
and
cmp
sbb
sbb
add
cmp
xchg
push
adc
push
jge
inc
rcl
dec
pop
pop
lods
or
sub
ja
xchg
data16
dec
inc
push
or
xchg
adc
iret
fwait
cmp
push
dec
lods
jnp
adc
mov
add
inc
push
pop
fs
and
inc
push
push
fmul
dec
cwde
push
sar
shr
mov
sbb
mov
aas
js
or
mov
push
jno
(bad)
xchg
scas
adc
pop
ficomp
cmp
add
popf
cmp
jg
mov
cmp
pushf
jg
unpcklps
jp
add
jmp
mov
nop
adc
cmp
cmp
call
icebp
sub
dec
mov
add
cld
xor
loope
xchg
or
jb
push
xor
cmp
jbe
sub
dec
imul
adc
ja
add
push
cmp
stos
cli
inc
daa
add
sbb
ds
(bad)
mov
dec
or
jae
popa
dec
xchg
ja
fcmove
or
outs
jg
(bad)
xor
dec
cmp
inc
icebp
imul
mov
pop
je
or
pop
adc
(bad)
clc
push
fisttp
pop
pop
ja
pop
xchg
inc
dec
push
xor
xlat
xlat
pop
cmps
or
and
imul
mov
es
cmp
jne
push
bound
push
push
jmp
pop
dec
ins
pop
test
jmp
movs
push
mov
pop
scas
push
in
aaa
fadd
inc
mov
or
je
inc
or
and
(bad)
adc
jmp
sbb
xor
push
pop
pop
sub
dec
jb
repnz
ds
loop
mov
in
ds
adc
jp
fild
aas
inc
psubd
mov
inc
aam
xor
adc
xchg
pusha
xor
jns
sbb
or
loope
dec
add
imul
sbb
es
rol
add
popf
mov
lock
add
push
out
push
dec
jp
popa
inc
pop
mov
inc
xor
pop
cmp
cmp
or
mov
sub
test
stc
and
push
and
imul
ds
add
int
add
jmp
sti
or
mov
les
inc
clc
mov
ficom
adc
mov
rcr
add
push
cmp
sub
outs
push
ret
dec
jmp
cmp
in
xor
test
and
daa
inc
outs
push
push
rcr
mov
push
or
or
movs
in
mov
icebp
push
jo
mov
or
addr16
inc
or
or
out
pop
dec
fwait
jg
add
pop
div
lahf
outs
add
add
dec
mov
push
push
cmp
fwait
mov
add
stos
xchg
xor
ret
xor
push
mov
sahf
and
imul
or
popa
fs
arpl
das
sbb
xor
and
dec
mov
outs
sbb
daa
(bad)
test
outs
daa
dec
mov
popa
and
out
push
inc
outs
ins
popa
adc
mov
hlt
inc
or
ss
pop
fist
pop
out
sub
dec
inc
(bad)
sub
sub
fwait
call
mov
add
imul
into
loopne
mov
pop
inc
inc
pop
mov
cli
aad
inc
add
or
aad
cdq
gs
jl
inc
pop
or
pop
inc
xor
scas
loop
fs
ret
xchg
fldenv
cmovne
pop
mov
sti
inc
inc
popf
mov
and
test
sahf
ror
xor
popa
xchg
lods
push
xor
add
retf
jb
push
mov
and
sahf
pop
add
inc
xor
(bad)
pop
sub
push
mov
les
retf
add
mov
mov
push
xchg
dec
enter
mov
pop
jmp
mov
jnp
jge
fbld
add
add
xor
add
push
and
fwait
add
nop
js
arpl
lds
fwait
inc
sbb
mov
out
movs
add
inc
adc
inc
sub
xlat
sub
test
rcl
push
test
call
lock
add
je
cs
sbb
cmp
imul
jg
es
mov
call
test
lahf
clc
dec
inc
daa
push
test
fistp
inc
and
pop
push
cmps
cmp
push
sub
push
pop
test
shl
inc
or
xchg
adc
sub
jbe
push
or
fmul
das
inc
dec
fld
repnz
ret
cli
(bad)
dec
jns
jb
outs
movs
loop
dec
call
push
enter
je
ss
push
ror
stos
iret
dec
jae
adc
push
add
ins
jb
out
mov
mov
push
inc
push
outs
push
add
sub
jo
sti
inc
xor
add
add
imul
cmp
and
jo
test
clc
shl
push
push
hlt
dec
xchg
sbb
jmp
mov
js
call
shl
shl
or
xchg
lods
sub
jns
inc
sub
cmp
and
push
(bad)
dec
loope
push
jecxz
gs
mov
add
mov
add
mov
and
pop
jge
mov
lea
inc
xor
dec
xchg
inc
scas
cmp
xor
dec
sbb
adc
test
dec
iret
les
inc
add
xlat
das
push
dec
xchg
push
dec
imul
in
ins
pcmpeqb
xchg
dec
fs
gs
in
mov
mov
jb
ficom
mov
xchg
cmc
vmwrite
mov
clc
push
inc
push
repnz
push
inc
sbb
cmps
les
lods
cwde
or
push
sbb
push
jno
pop
lahf
push
out
add
int
enter
pop
cld
push
sar
mov
pusha
outs
jp
pop
push
imul
jne
mov
and
fdivr
jne
ja
mov
leave
dec
cmp
call
lds
cmp
push
enter
push
or
inc
enter
pop
nop
rcl
add
mov
push
iret
fisttp
jg
push
ret
bound
mov
leave
cwde
inc
push
leave
add
js
mov
dec
cdq
and
inc
xchg
xor
sbb
sbb
cmp
clc
in
push
mov
xor
repnz
or
mov
fidivr
inc
xor
and
bound
fcom
dec
jl
imul
mov
or
in
aad
ret
and
mov
inc
dec
jne
mov
pop
pop
mov
push
cmps
and
inc
push
mov
ret
add
sub
sahf
xchg
femms
sbb
cs
(bad)
xchg
xchg
aam
xchg
and
jmp
sbb
adc
mov
and
pop
mov
out
and
stc
or
xor
pop
mov
sar
xchg
mov
pop
add
jae
adc
mov
loope
ror
sub
(bad)
out
cmc
xor
in
push
and
in
test
mov
stos
adc
and
xor
add
cmp
pop
sbb
and
aas
add
sbb
and
pop
mov
inc
or
jae
inc
pop
mov
je
sbb
mov
cmp
fistp
clc
dec
into
(bad)
jmp
or
movs
(bad)
push
inc
iret
popa
xchg
movs
add
ja
sahf
dec
sub
cmp
jle
cmp
cwde
adc
(bad)
dec
movs
or
jne
cli
adc
inc
inc
in
movzx
xchg
mov
inc
mov
inc
or
repnz
mov
adc
lock
nop
sub
push
mov
inc
mov
rol
jmp
mov
sbb
rol
mov
arpl
bound
cdq
mov
xor
test
dec
push
cmc
rol
or
(bad)
sbb
loopne
popf
shr
dec
mov
ror
test
or
loope
nop
ss
adc
rol
mov
mov
jnp
imul
xlat
ret
push
fist
sbb
push
cmp
jecxz
mov
clc
clc
pop
aam
xor
shl
add
jg
cmp
jb
cmp
jb
ret
popa
das
add
pop
mov
xchg
pop
xchg
in
or
das
pop
cmp
test
cmp
fstp
xor
out
fcom
scas
or
dec
mov
and
repnz
push
or
adc
jle
scas
imul
add
adc
pop
jg
lock
scas
je
add
jo
add
test
pop
jae
in
sbb
add
lahf
adc
pop
mov
inc
fsub
or
inc
lahf
(bad)
xor
xchg
arpl
pop
push
jmp
mov
or
rol
jg
lods
inc
cld
lock
(bad)
shufps
sbb
retf
jnp
add
movs
jo
dec
ret
sbb
bound
mov
nop
and
retf
scas
in
ins
lds
add
test
and
js
test
mov
fiadd
pop
pop
aaa
xchg
(bad)
push
mov
adc
push
cmp
dec
test
xchg
and
dec
stos
aas
aaa
mov
and
cmp
mov
jne
add
hlt
dec
cwde
add
adc
hlt
lods
mov
sbb
xchg
and
adc
jmp
add
or
adc
nop
cmp
sub
iret
dec
jmp
push
mov
xlat
pop
test
movs
pop
or
inc
cmp
pop
call
sbb
push
inc
rol
cmp
pop
add
ficom
cmp
xchg
cmp
sub
inc
pop
pop
test
loope
fbstp
loopne
mov
dec
mov
hlt
mov
inc
sub
out
mov
or
cld
adc
dec
xor
inc
pushf
dec
cmp
frstor
dec
jne
push
xchg
ja
xor
rcl
cmps
dec
cmp
imul
sbb
inc
push
mov
or
and
clc
push
mov
and
int
rcl
enter
clc
das
mov
inc
xor
sub
fwait
lock
adc
test
sbb
in
push
mov
retf
aas
inc
mov
jb
push
nop
mov
movs
(bad)
adc
pop
xor
inc
add
test
push
add
lahf
pop
inc
repz
inc
push
ret
mov
cmc
hlt
adc
push
and
and
pusha
add
lahf
mov
pop
arpl
push
rol
inc
je
xchg
sub
add
cmp
es
or
cmps
aam
adc
pusha
mov
test
mov
inc
out
inc
mov
stos
rcl
mov
pop
mov
mov
enter
sub
div
cld
das
jp
clc
clc
jmp
pop
jbe
xor
and
movs
rol
adc
jns
mov
stos
inc
mov
add
jo
or
xor
xlat
loope
test
lock
lahf
mov
pusha
add
push
or
repnz
retf
xor
jge
pop
dec
add
push
scas
push
scas
out
stos
push
sbb
inc
pop
shl
clc
adc
or
les
test
add
clc
shl
mov
mov
or
jmp
icebp
dec
xchg
cmp
(bad)
je
and
jb
shld
loopne
pop
pop
das
out
xor
dec
jne
in
pop
mov
mov
leave
and
cmp
into
add
nop
shr
xor
pop
pop
inc
stos
fidiv
xor
cld
mov
inc
lods
cmp
jge
jmp
pop
inc
push
sar
mul
jecxz
icebp
pop
inc
fisttp
mov
les
jbe
lods
inc
xchg
mov
xor
and
in
jp
or
ret
push
and
pop
or
data16
cmp
cmp
pop
mov
add
or
add
sub
xchg
add
pop
out
cwde
pop
pusha
xchg
call
and
push
repz
dec
or
loope
or
dec
or
movs
bound
fsubr
pusha
pop
(bad)
mov
or
dec
nop
adc
inc
and
scas
arpl
test
fidiv
cmc
cld
cmp
fs
scas
cmp
pusha
out
mov
or
jne
sbb
or
mov
fisub
jns
popa
imul
les
cmps
xchg
sub
sub
inc
in
dec
lea
jno
jo
repz
lock
popa
xor
fbld
jge
push
inc
mov
add
inc
imul
(bad)
(bad)
sub
cmp
add
outs
pop
xchg
pop
push
call
or
test
aam
lock
popa
inc
test
popa
mov
xchg
inc
outs
dec
jne
loop
inc
pop
(bad)
test
adc
dec
mov
sub
dec
jne
sub
sti
pop
outs
cs
dec
shr
mov
mov
lods
jno
inc
test
or
push
xor
or
or
xor
and
cmp
sub
sbb
shr
jb
mov
scas
shl
and
and
adc
test
xchg
pop
ret
ja
ror
sbb
push
lods
dec
push
or
jle
shl
pop
xchg
in
dec
push
xor
xchg
test
mov
in
scas
jmp
aad
fwait
sahf
int3
mov
cwde
adc
sbb
cmp
in
fwait
jecxz
addr16
mov
dec
retf
add
fild
sbb
fdivr
mov
ror
dec
nop
out
jl
xchg
xor
das
aas
mov
pop
loope
(bad)
mov
mov
in
or
out
sub
daa
out
pop
adc
push
outs
imul
xor
pop
xor
lock
mov
arpl
cwde
loopne
or
mov
jne
aaa
(bad)
nop
arpl
addr16
xchg
fs
hlt
mov
adc
cmp
add
or
cmp
jmp
jo
push
adc
mov
daa
inc
cld
sub
mov
or
cmp
lea
pop
movs
lods
or
fistp
inc
xchg
ret
addr16
jecxz
es
inc
idiv
push
push
gs
jge
addr16
and
fs
cmp
outs
ins
jmp
idiv
add
xor
xor
mov
push
jno
call
xor
mov
inc
jo
sub
sbb
test
stc
outs
outs
or
pop
mov
xor
aas
dec
cmp
cwde
cmc
push
and
push
dec
pop
push
adc
jecxz
inc
(bad)
retf
ins
int3
gs
pop
push
push
inc
daa
hlt
sbb
inc
dec
or
js
jl
mov
mov
and
out
loop
je
push
pop
das
shr
scas
or
dec
(bad)
or
xchg
mov
push
hlt
mov
dec
hlt
push
add
add
fidiv
add
sti
adc
jl
fist
jne
cmp
rcl
jmp
jmp
push
adc
jo
gs
cmp
(bad)
inc
cs
adc
mov
jmp
dec
mov
mov
jbe
inc
clc
or
inc
inc
stc
inc
or
add
add
ror
aas
jae
or
pusha
jae
add
test
add
push
ins
pop
mov
mov
fnstsw
add
leave
lods
add
add
(bad)
iret
ror
call
imul
setg
inc
or
dec
mov
pop
sub
lahf
test
fwait
test
cmp
jge
sub
test
add
lea
or
cmp
enter
add
std
xchg
lods
repz
mov
rcl
pop
jmp
sbb
cmp
popa
inc
ja
push
clc
cmc
scas
sub
jnp
push
in
xchg
sub
xor
xchg
test
mov
mov
xchg
cmps
inc
dec
cs
mov
sbb
adc
mov
and
push
mov
mov
dec
inc
xchg
lea
ret
pop
and
add
shl
adc
jp
daa
and
cmp
jle
sub
push
add
stc
add
adc
dec
mov
int3
jmp
push
add
mov
pushf
push
int
mov
lods
dec
sar
mov
cmp
je
jo
inc
dec
or
test
sahf
mov
pop
test
pop
mov
sbb
lea
in
out
test
or
jmp
mov
or
sar
jle
retf
cmp
aam
jne
push
adc
inc
dec
push
or
cld
ret
pop
lods
(bad)
jmp
rol
aas
rcr
div
lods
sub
rcl
add
(bad)
mov
rcl
cmp
and
hlt
mov
push
sahf
push
lock
push
bound
out
mov
or
adc
(bad)
push
test
pop
shl
sar
add
push
shr
sbb
ror
sbb
sbb
mov
jne
sbb
out
lock
pusha
xor
fidiv
pop
or
inc
add
cmp
sub
inc
mov
cs
cmp
add
dec
cmp
jge
fisttp
test
(bad)
sub
inc
sbb
add
jg
mov
lea
test
outs
jo
or
lock
call
sbb
inc
into
add
hlt
mov
push
add
clc
jge
mov
push
je
(bad)
adc
outs
pop
jle
xchg
adc
ins
stos
rcl
add
lock
xor
scas
xor
sub
jg
dec
cmp
and
cmp
and
test
in
outs
aaa
add
dec
cs
mov
pop
pop
pop
sbb
mov
inc
(bad)
outs
mov
pop
idiv
cmp
xor
imul
test
cmc
or
shr
nop
add
mov
add
repnz
dec
aam
lock
or
inc
cs
in
cs
mov
jmp
imul
cwde
lea
mov
push
cdq
mov
clc
fild
cmp
cmp
jle
shr
mov
cmc
add
test
pop
hlt
psrld
mov
mov
inc
inc
push
mov
mov
jg
xchg
add
loop
cmp
adc
addr16
sar
and
and
ss
and
and
sub
add
sbb
pop
call
aaa
int
xlat
push
loope
add
add
ins
repz
js
dec
sub
cld
ins
(bad)
mov
add
and
xchg
outs
cdq
outs
inc
add
enter
inc
pop
test
nop
lea
add
imul
inc
aaa
(bad)
test
scas
test
sub
pusha
and
pop
ret
daa
adc
outs
mov
pop
lea
inc
cmp
sub
add
push
loope
jnp
ins
fucomip
test
test
sub
lock
enter
pop
sub
jle
jmp
dec
fwait
dec
mov
or
stc
or
loopne
les
fdiv
shr
push
push
jl
loope
or
dec
test
or
xor
mov
push
and
or
mov
or
lock
mov
(bad)
stc
add
clc
push
adc
jo
push
jmp
jge
sub
or
pop
cmp
pop
jo
aaa
outs
ds
repz
ja
icebp
loopne
push
jb
add
mov
mov
add
outs
push
out
or
inc
push
xor
mov
adc
mov
sub
sbb
add
lahf
sbb
inc
jne
sub
fdivr
add
repz
mov
jecxz
stos
push
or
mov
jl
iret
adc
inc
clc
rcl
test
je
add
and
lea
cmp
jle
cs
cmp
inc
clc
pop
pop
jno
add
lods
out
(bad)
popa
adc
mov
add
sbb
je
add
stos
dec
cdq
jb
rol
and
cs
out
shl
jg
mov
lea
or
sbb
test
mov
cmp
mov
mov
fs
push
xor
adc
fs
out
data16
and
add
inc
rol
xchg
or
jns
xchg
sbb
adc
pop
sti
push
out
fucompp
cld
inc
sbb
add
mov
seta
push
dec
add
mov
mov
imul
add
adc
inc
add
ins
add
cvtpi2ps
mov
rep
ss
jecxz
xchg
add
sub
xor
add
pop
int3
in
push
pop
xchg
(bad)
sub
mov
jb
jecxz
retf
out
push
call
(bad)
jmp
aas
cmp
cmps
aad
cmp
xchg
jo
mov
mov
out
inc
add
add
int3
mov
inc
ins
out
sysexit
pusha
pushf
inc
cs
pop
pop
mov
xchg
nop
dec
pop
jno
dec
sbb
test
inc
or
lock
mov
or
adc
push
ins
nop
push
out
add
(bad)
lock
jns
push
jbe
lea
cmps
jge
pop
adc
dec
jge
mov
xchg
xor
push
dec
sbb
dec
adc
mov
out
fucompp
pop
icebp
fadd
leave
mov
jp
das
imul
inc
enter
jmp
xchg
push
fistp
fild
stc
cmc
push
ja
(bad)
lea
into
add
mov
add
sbb
call
push
or
inc
jle
mov
in
pop
ja
push
cwde
rol
push
add
pop
xchg
mov
or
movs
xchg
mov
nop
xchg
add
add
in
shr
shl
ret
jecxz
js
test
lea
and
scas
pop
inc
push
mov
(bad)
xchg
js
xchg
cmp
fcomp
or
sbb
push
mov
mov
sbb
add
loope
push
cmp
and
dec
in
mov
(bad)
jns
enter
aaa
shl
and
dec
fist
aas
inc
xchg
pop
lahf
jge
inc
mov
xchg
test
into
das
imul
mov
dec
mov
icebp
jle
mov
xchg
jle
scas
sub
(bad)
data16
pop
lea
sub
ret
jp
mov
mov
mov
cwde
xcrypt-ecb
cmps
or
cmp
inc
call
pusha
orps
sbb
xchg
mov
pushf
push
and
movs
pop
(bad)
out
jmp
ja
push
cld
mov
ja
mov
sub
or
mov
gs
push
xchg
jnp
pop
add
test
sar
inc
imul
adc
sar
inc
inc
push
pusha
sub
cmp
je
in
test
xor
mov
mov
push
leave
adc
cmp
adc
xlat
mov
ror
adc
push
in
and
mov
push
push
xor
fs
xchg
or
sbb
push
add
(bad)
(bad)
loopne
leave
je
stos
adc
btr
cmp
sbb
jl
add
push
inc
adc
sbb
fidivr
mov
dec
and
mov
inc
dec
inc
and
jbe
and
clc
adc
mov
xor
cmp
xor
pop
mov
cmp
ja
add
mov
xlat
jb
mov
loop
outs
mov
rcr
push
add
ret
adc
push
inc
cmp
je
cmc
and
inc
cmp
les
inc
outs
pop
mov
in
ror
xchg
sub
push
pop
test
dec
mov
jge
div
ror
and
jmp
outs
mov
adc
push
adc
fcmovb
popf
sbb
inc
lock
mov
call
add
sbb
push
cs
pusha
add
aam
xchg
ret
add
mov
inc
test
(bad)
push
add
inc
add
push
xchg
mov
(bad)
cmps
jle
xchg
test
loopne
das
ret
mov
(bad)
or
sbb
movs
push
(bad)
pop
push
push
push
std
test
aaa
mov
gs
jle
mov
add
jne
lods
pop
int3
xchg
rol
push
add
mov
dec
add
and
dec
add
mov
add
rcl
mov
inc
sar
dec
add
push
inc
les
add
add
aas
mov
mov
adc
adc
or
or
inc
push
loop
mov
sub
sub
fstp
or
inc
sbb
je
addr16
push
pop
and
sub
inc
cs
push
adc
or
outs
jl
test
out
pop
xor
and
xchg
push
popa
add
scas
or
adc
popa
add
xor
mov
cmps
mov
sbb
jecxz
or
mov
add
iret
addr16
mov
push
adc
cmp
or
lock
aad
cs
adc
inc
adc
push
or
je
mov
out
mov
iret
pop
pop
pop
inc
loopne
xchg
adc
mov
lock
or
popa
inc
stc
popf
les
icebp
ret
repz
sub
mov
sahf
push
jae
fadd
mov
or
pop
adc
daa
std
mov
push
pop
or
mov
sbb
mov
inc
push
cmp
lods
xor
ja
or
in
add
sbb
enter
and
jnp
dec
lock
cmp
cmp
icebp
xor
xchg
cmps
xchg
cmp
sub
sub
jo
iret
mov
inc
out
ja
enter
call
or
xor
lock
push
or
or
pop
inc
push
mov
jge
push
or
pop
in
mov
mov
sub
and
lahf
sub
or
mov
rol
ds
mov
ret
and
sbb
push
mov
jb
pop
cmc
or
jecxz
sti
mov
add
and
sbb
sub
mov
inc
or
js
pop
xor
pop
mov
jecxz
ja
push
add
push
cmp
dec
sub
in
mov
sub
jmp
shl
or
mov
cmp
cmp
and
inc
les
add
inc
or
xchg
and
or
cdq
mov
dec
inc
mov
out
(bad)
and
pop
dec
adc
test
inc
add
pop
and
push
dec
bound
pop
add
cld
repnz
test
cmc
imul
add
push
sub
or
test
mov
lods
adc
add
clc
pop
jne
fiadd
mov
mov
daa
jb
xlat
mov
int3
and
cmp
sub
cmp
xchg
jo
cmp
add
je
mov
pop
dec
adc
add
mov
add
cmp
jne
sub
fld
pop
jne
dec
rcl
add
sub
mov
fwait
mov
add
scas
adc
jno
add
mov
stc
xor
fwait
push
mov
lods
push
mov
mov
scas
mov
xchg
stos
inc
cmp
sub
pop
mov
or
or
inc
ja
cmp
sub
(bad)
dec
loop
or
adc
dec
pusha
pop
pop
out
pop
sbb
add
pop
xor
jne
sbb
adc
or
inc
outs
sar
or
loopne
arpl
inc
add
add
mov
inc
shl
syscall
lahf
pop
pop
sbb
jmp
daa
push
sub
lahf
mov
mov
aam
pop
fwait
push
add
pop
or
movs
sbb
loopne
xor
pop
jb
mov
xchg
add
jg
sbb
pop
push
sbb
scas
inc
or
in
les
mov
ffree
inc
sub
(bad)
push
cmp
push
xchg
jmp
adc
inc
lods
pop
ins
int
hlt
js
lea
iret
inc
scas
sbb
add
cwde
cdq
(bad)
sbb
mov
daa
mov
inc
loopne
mov
or
stc
mov
xor
cmp
rcr
rcl
ret
jmp
hlt
jg
mov
xor
push
jp
sub
clc
repz
sub
in
clc
inc
mul
or
sbb
mov
pop
jae
lock
sahf
(bad)
(bad)
or
mov
stos
mov
inc
push
sub
ins
jne
pop
inc
dec
adc
mov
stos
adc
add
imul
arpl
dec
in
adc
adc
cld
lods
adc
mov
add
test
mov
sbb
xor
(bad)
mov
adc
sbb
jns
sub
adc
bound
xchg
ja
adc
shl
test
mov
sbb
or
adc
aas
push
jnp
add
mov
arpl
scas
dec
xchg
bound
pop
mov
aas
push
jbe
mov
stc
popa
mov
popf
inc
clc
(bad)
fs
into
adc
lods
fisttp
pop
pop
mov
pop
rcl
inc
fild
pop
sbb
cdq
clc
push
push
adc
push
xor
enter
add
out
mov
pusha
mov
call
js
inc
xor
or
adc
push
push
add
test
sbb
mov
jecxz
inc
fadd
cmp
jne
mov
int
jne
psrad
addr16
push
shl
mov
in
ins
add
aas
mov
rcl
fnstsw
into
aad
lods
fs
ror
pop
and
neg
dec
add
mov
or
and
enter
mov
dec
outs
or
dec
out
and
inc
sub
xchg
mov
popa
inc
xor
xor
or
dec
ins
push
pop
cld
sbb
cmp
sub
sbb
(bad)
cmp
xor
push
cmc
mov
dec
and
jnp
jne
and
sbb
shl
xchg
or
jg
xor
cmps
cmc
lods
les
sub
sub
adc
ret
xchg
iret
pop
pop
pushf
mov
(bad)
ja
call
test
pushf
and
adc
int3
mov
sbb
jb
adc
push
or
outs
ret
and
ret
mov
xor
pusha
into
repnz
sar
aaa
adc
sub
cmp
adc
add
fdiv
mov
jle
cmp
mov
cmp
adc
sti
mov
push
dec
mov
fmul
adc
jl
dec
add
push
enter
clc
or
imul
test
and
jmp
jmp
aaa
cdq
nop
or
scas
cmp
sub
push
(bad)
hlt
sar
add
push
jns
add
lea
test
aam
lea
jge
mov
pop
jne
mov
inc
dec
fcom
(bad)
mov
pop
scas
fsubr
push
add
movs
cmp
push
lea
jl
outs
in
xor
xor
mov
mov
hlt
(bad)
outs
mov
ret
push
inc
inc
(bad)
lea
(bad)
mov
shr
sub
fiadd
ds
cmp
das
and
inc
shl
jns
inc
das
mov
mov
push
push
shl
int
(bad)
loopne
arpl
outs
adc
mov
jne
or
add
dec
mov
add
repz
clc
cdq
and
cwde
mov
fs
ror
ins
xor
mov
adc
adc
mov
xchg
data16
xchg
mov
retf
mov
iret
sbb
les
add
ret
scas
mov
outs
add
jmp
pop
gs
mov
clc
int
aam
pop
or
mov
adc
ins
xchg
inc
adc
jns
ret
ror
fidivr
sbb
test
call
or
add
mov
dec
fmul
fadd
into
lea
adc
adc
mov
xor
add
xor
call
inc
adc
aas
inc
ror
std
into
fadd
jbe
shl
xchg
ja
sub
test
push
add
jmp
add
add
call
icebp
imul
outs
loopne
ins
test
cld
stos
add
fs
aam
add
in
ret
cmp
cmp
pop
pop
add
xor
push
add
push
sub
jae
jecxz
or
adc
hlt
idiv
imul
xor
push
clc
dec
pop
sub
jb
dec
or
push
leave
pop
test
add
aam
stos
or
adc
xchg
mov
addr16
xchg
push
pushf
pusha
cld
adc
xor
loope
imul
clc
hlt
je
mov
cmp
xor
scas
sar
or
push
(bad)
jl
loop
ins
sbb
add
and
xchg
and
add
and
inc
sub
add
addr16
mov
ret
mov
test
xor
out
in
rol
ds
inc
pushf
mov
adc
ror
add
ficom
add
call
and
mov
movs
les
repnz
cmp
seta
adc
adc
xchg
xor
fucomip
call
xor
fs
inc
pop
pop
xlat
mov
and
out
shl
and
pusha
dec
das
mov
or
daa
mov
xor
mov
daa
jmp
xor
push
pusha
fs
cdq
test
test
sub
push
and
lock
and
xchg
push
mov
sbb
je
je
xchg
ja
inc
jl
push
xor
pop
pop
dec
mov
std
or
sbb
lock
out
sti
adc
add
push
add
push
xchg
inc
adc
sbb
in
cmp
push
shl
pop
adc
or
add
add
add
pop
lahf
fwait
mov
ret
push
movs
retf
mov
mov
dec
lock
adc
retf
out
or
jb
sub
xchg
daa
xor
movnti
pop
mov
mov
add
cmp
je
or
xor
add
lea
dec
pop
data16
xor
add
mov
add
adc
(bad)
jmp
adc
dec
push
mov
jne
pop
lds
mov
mov
xchg
cwde
jp
sub
aam
(bad)
cld
inc
test
std
and
or
xchg
call
jo
dec
mov
jno
or
or
aas
push
rol
xchg
mov
test
cs
dec
sub
mov
fisttp
sbb
shl
push
ret
add
jo
mov
lods
lock
popa
and
sub
aas
add
adc
mov
mov
adc
mov
fstp
xor
daa
cld
imul
cmp
scas
pusha
adc
mov
sbb
scas
imul
mov
call
xchg
call
cmp
and
dec
loope
lods
adc
adc
scas
outs
(bad)
loopne
pop
adc
xchg
jno
rcl
pop
scas
sub
enter
mov
xor
pushf
call
sub
jmp
inc
or
cmp
mov
scas
xchg
les
jmp
repz
push
mov
and
push
or
retf
and
retf
sub
sar
(bad)
rol
test
push
lahf
pop
jns
xor
adc
add
fstp
lods
pop
mov
mov
and
sub
or
pop
bnd
cwde
mov
mov
cmps
add
jmp
mov
add
sti
jne
sbb
sbb
push
fmul
out
jge
add
fnstcw
xchg
adc
(bad)
fmul
xor
adc
or
inc
imul
push
mov
shl
es
cmp
fstp
loopne
dec
dec
(bad)
jae
(bad)
jge
bound
sub
pop
lock
lock
je
add
ret
call
xlat
jge
jmp
or
mov
mov
adc
adc
popf
jge
add
add
in
test
(bad)
in
add
loop
mov
or
mov
add
adc
imul
sahf
xchg
inc
mov
scas
sub
lea
cmps
lahf
ror
sub
cmp
jb
cmp
xor
in
xchg
adc
ss
inc
(bad)
bound
cmp
sbb
push
sbb
mov
ror
dec
xor
fidivr
scas
or
bnd
sub
and
mov
rol
mov
adc
mov
or
pusha
bound
adc
popf
aaa
(bad)
fcompp
xchg
sub
jne
xor
(bad)
or
mov
pop
mov
test
push
push
js
hlt
xchg
lahf
daa
scas
lahf
stos
add
inc
aaa
test
pop
loopne
adc
ret
pop
or
test
or
pop
add
add
pop
pop
sub
xchg
repnz
outs
xchg
sbb
sbb
adc
mov
push
mov
cmp
sbb
test
jo
scas
xchg
or
outs
or
mov
cmc
call
xor
mov
or
inc
loopne
mov
pop
aas
push
jae
push
mov
add
jb
neg
iret
add
mov
nop
and
jbe
or
jp
fist
fimul
lea
mov
sbb
or
push
daa
add
out
lods
std
lock
inc
ss
or
sbb
add
add
addr16
push
(bad)
jo
retf
fs
scas
cmp
sbb
sbb
add
bound
add
pop
lock
add
das
mov
aad
jl
sub
mov
daa
leave
jnp
outs
int
clc
int
push
js
jp
call
adc
jmp
mov
aas
or
sub
mov
or
clc
push
fadd
jmp
xchg
ror
dec
add
cmp
ins
add
xor
lods
sub
icebp
pop
ret
adc
inc
sub
inc
fsub
mov
mov
cmp
js
mov
ins
les
pop
sub
ret
popf
adc
dec
cmp
out
arpl
sbb
enter
nop
add
ret
push
mov
pop
add
lods
popa
jecxz
inc
daa
jmp
cmp
adc
dec
(bad)
and
hlt
sub
xor
das
sbb
add
xchg
pushf
les
js
cmp
bound
jmp
add
mov
js
imul
dec
add
add
cmp
mov
mov
cmps
jns
rcl
xchg
call
xor
cmp
add
sub
cmp
ja
mov
or
data16
bound
push
inc
inc
cmps
aaa
dec
pop
jg
dec
dec
call
pop
out
mov
movs
scas
sub
neg
test
lock
ins
dec
cmp
inc
dec
add
xchg
mov
adc
bound
xchg
pop
pop
sub
clc
jns
xchg
shl
nop
outs
in
movs
push
push
inc
xchg
loope
jnp
or
test
imul
mov
call
cmc
ror
dec
xor
movs
sub
cmps
jnp
leave
dec
adc
retf
pop
inc
sti
adc
shl
add
push
in
adc
sbb
psubw
push
nop
in
xlat
xor
jnp
sbb
or
call
popa
sbb
rcr
call
dec
add
mov
sar
in
adc
or
xor
pop
ins
mov
push
jg
mov
add
jmp
adc
or
pop
or
hlt
adc
xor
xor
jnp
ja
pop
jge
lea
jmp
cld
imul
ret
in
or
jmp
ret
mov
movzx
push
or
adc
bound
jb
mov
add
sub
bnd
or
xor
push
xor
imul
pop
inc
push
xor
or
and
add
dec
pop
and
mov
add
xchg
cwde
mov
xor
loopne
or
and
pop
cmp
push
punpckhdq
dec
or
shl
scas
pop
pop
mov
add
jle
fcom
ret
inc
loop
nop
repz
or
es
xor
pop
jg
call
xchg
js
push
repnz
mov
mov
dec
mov
call
sbb
test
sbb
cdq
sub
push
add
inc
rcl
push
inc
ins
test
pop
(bad)
dec
push
inc
aam
xor
ja
and
dec
(bad)
and
inc
sar
dec
mov
or
into
xchg
sahf
sub
add
mov
or
or
sbb
mov
jp
and
test
aas
outs
mov
xor
sub
sub
xor
pop
push
inc
pop
(bad)
cmp
sbb
xchg
mov
les
pop
pop
int3
test
fistp
data16
xor
pop
nop
lahf
frstor
adc
or
sahf
imul
cmp
and
xchg
movs
mov
xor
add
and
nop
adc
inc
test
mov
loop
jmp
ret
dec
add
add
pop
or
not
cmp
je
fstp
and
mov
(bad)
sub
sub
retf
adc
pop
pop
(bad)
loopne
lock
mov
sbb
in
or
lock
ins
ret
jno
pop
outs
push
push
sub
adc
add
push
and
jo
jmp
jmp
mov
adc
cmp
sub
dec
jge
add
jbe
sub
mov
push
ror
ds
popf
adc
jo
shr
rcl
cmp
mov
jo
mov
ret
add
add
loopne
cli
xchg
test
mov
lea
mov
cld
cwde
sbb
int3
(bad)
in
cwde
mov
xchg
mov
adc
or
outs
or
cmp
cmp
fwait
mov
cmp
jp
xor
movs
add
adc
push
or
out
rcl
clc
sbb
add
movs
shr
push
adc
adc
inc
mov
outs
sub
stc
movs
aaa
iret
add
dec
or
and
jle
push
sub
das
add
imul
jg
lock
add
inc
es
ins
jg
pop
pop
ins
xchg
rcr
pop
mov
and
mov
das
and
ret
inc
cli
dec
cmp
popf
test
adc
sbb
or
fcom
add
add
or
call
pusha
bound
xlat
call
inc
scas
mov
sub
cdq
jmp
or
push
call
test
loopne
jbe
scas
ret
cdq
sub
push
mov
push
mov
mov
pop
call
adc
xchg
mov
add
int
hlt
inc
add
dec
sub
pop
lahf
mov
iret
fdivr
daa
scas
lea
pop
pop
(bad)
ins
cmp
xchg
lahf
xor
aas
je
movs
rcl
lahf
ror
(bad)
add
scas
ror
add
inc
sub
jge
pop
popa
push
add
inc
add
adc
inc
nop
test
dec
cmps
fst
fdivr
adc
(bad)
out
enter
mov
and
mov
xchg
clc
inc
add
adc
add
or
or
pop
lods
push
or
adc
add
mov
adc
xchg
fsubr
nop
push
adc
loopne
call
ss
mov
call
add
add
add
and
inc
dec
and
(bad)
clc
or
adc
loopne
mov
push
dec
scas
mov
pop
(bad)
jecxz
push
mov
push
sub
lods
pop
ss
lea
cmp
push
loopne
stc
(bad)
lods
pop
(bad)
les
push
in
jnp
clc
jmp
jmp
xlat
or
popf
xchg
fld
popa
outs
mov
loopne
enter
fmul
xchg
jle
dec
adc
sbb
out
adc
push
or
push
inc
add
inc
and
adc
add
push
mov
add
(bad)
push
inc
sub
sbb
or
fwait
add
push
and
leave
jl
or
idiv
sub
cmp
sub
push
add
or
or
add
and
mov
xchg
sbb
dec
inc
adc
inc
loopne
xchg
sbb
mov
dec
mov
inc
or
and
adc
gs
adc
xchg
aad
push
or
pop
ret
das
icebp
cmps
inc
adc
mov
shl
jo
aad
or
lock
mov
adc
sub
shl
hlt
push
add
xchg
add
cmps
pop
nop
and
push
or
inc
rol
fcom
out
ins
mov
dec
or
inc
mov
adc
jg
or
sub
jno
in
test
or
xor
out
cmp
lock
jno
adc
push
add
or
ret
or
loop
loopne
adc
mov
cmp
dec
add
bndstx
test
sbb
out
aaa
jmp
test
call
cmp
les
rol
stos
lock
mov
add
and
cmp
dec
cmp
(bad)
adc
stos
sub
push
xor
aad
sub
and
mov
mov
or
jle
mov
xchg
and
inc
adc
lds
xor
jmp
lea
inc
cmp
push
or
mov
adc
push
adc
mov
loope
xchg
inc
rol
inc
loop
mov
adc
mov
add
int3
hlt
add
call
(bad)
ret
pusha
sbb
sub
sbb
popa
add
xor
scas
into
pop
movs
call
add
in
mov
jo
sbb
loope
jecxz
sbb
sbb
rol
or
push
cli
inc
mov
inc
sbb
sbb
cwde
movs
pop
aaa
movs
sbb
and
or
jnp
mov
lock
jo
adc
inc
ins
mov
mov
and
ret
loop
add
popa
dec
dec
or
jmp
sbb
rol
push
leave
adc
xcrypt-cfb
cmps
in
and
lock
pop
add
lock
mov
nop
inc
or
push
cld
outs
add
and
xor
cld
adc
sbb
push
and
push
add
loope
dec
xchg
loop
dec
loope
nop
pop
outs
sti
mov
mov
cld
push
rcl
fadd
loope
mov
cmps
inc
sub
xor
js
mov
or
mov
hlt
fisub
shr
loopne
jg
aam
scas
mov
imul
xlat
push
mov
push
fist
dec
add
ror
or
pop
and
ins
nop
or
mov
jne
push
ret
push
mov
mov
das
adc
cmp
lea
add
call
cmp
and
or
(bad)
fmul
inc
add
jb
and
adc
dec
ror
adc
adc
shl
or
mov
mov
out
mov
es
mov
ror
test
ins
bound
dec
sbb
sbb
(bad)
out
mov
add
mov
add
add
push
push
mov
xor
cwde
(bad)
adc
imul
ret
pop
push
ror
pop
adc
fst
or
jbe
pop
add
daa
movs
pop
scas
add
add
sub
mov
imul
fld
outs
mov
mov
jns
mov
jo
inc
mov
lds
je
in
sar
inc
jecxz
mov
push
pop
lods
js
nop
rcr
test
aam
aam
add
pop
imul
rcr
or
cdq
stc
test
adc
add
clc
xor
sub
xor
je
mov
push
push
lds
or
push
cmp
cmp
cmp
cmp
sub
sti
(bad)
cmps
rcl
adc
push
or
retf
inc
aam
arpl
popa
icebp
jl
lea
mov
pop
or
rol
inc
ins
mov
adc
jg
leave
add
add
ret
and
push
add
rcr
in
push
pop
ss
ins
and
sub
push
or
xchg
adc
pop
dec
sbb
rol
add
hlt
add
add
mov
xchg
inc
lock
shr
mov
cmps
lock
mov
sti
xchg
xor
adc
or
pop
jb
test
pmovmskb
cld
rcl
mov
push
or
add
adc
pop
shl
mov
push
clc
scas
inc
hlt
jne
mov
jmp
popa
push
dec
mov
add
adc
loope
cmp
add
add
call
sub
or
jle
add
sub
push
mov
cmc
or
jo
fnop
sub
xor
sbb
psubusw
movs
or
cli
ss
dec
mov
and
imul
inc
push
xor
ret
outs
jmp
push
mov
or
xchg
xor
mov
in
mov
add
cmp
popa
pop
shr
inc
and
mov
clc
xor
rol
daa
cmp
inc
push
or
pop
sub
jbe
cmp
neg
mov
cmc
xor
adc
push
dec
jecxz
cs
jb
aaa
inc
cmc
xor
das
sbb
outs
(bad)
test
jne
outs
mov
lods
mov
(bad)
out
jmp
push
imul
daa
sbb
mov
jmp
push
cmp
jl
jo
mov
(bad)
es
add
or
cld
ja
xchg
ret
and
fsubr
xor
rcr
push
movntq
out
loope
add
xor
pop
rcl
mov
mov
lock
mov
ret
or
xor
mov
lds
add
mov
shl
lock
add
mov
int
add
sub
mov
inc
adc
or
and
push
adc
push
fwait
mov
adc
push
mov
or
add
ret
mov
xchg
or
je
xchg
xchg
xchg
pop
sbb
mov
xchg
adc
adc
leave
push
jo
lods
adc
mov
out
pop
ret
mov
int3
ret
nop
jo
and
out
mov
xor
mov
and
fimul
mov
lock
push
adc
and
jg
xchg
or
inc
test
inc
(bad)
mov
test
fmul
mov
mov
or
sub
mov
xchg
add
pop
rcr
adc
push
or
out
xor
push
adc
rol
inc
adc
sub
fld
pop
adc
and
sbb
shl
arpl
xor
xchg
hlt
test
inc
idiv
cmp
je
push
dec
and
mov
or
popa
adc
push
aas
jp
(bad)
jge
in
mov
ret
lock
pop
pushf
movs
fwait
cmovb
aaa
pop
packsswb
ins
add
mov
dec
popf
hlt
add
pushf
mov
std
adc
dec
add
mov
dec
pusha
shr
dec
push
push
add
bound
mov
retf
pushf
test
push
cwde
inc
or
fdivr
inc
pusha
mov
pop
rcl
inc
push
(bad)
push
mov
or
enter
sub
adc
test
adc
mov
pop
(bad)
(bad)
push
cmp
adc
shr
sbb
aaa
jle
sbb
daa
cli
(bad)
pop
mov
adc
and
mov
fld
test
adc
and
or
or
add
xchg
add
jmp
mov
and
(bad)
sub
mov
cmp
shl
push
or
push
cmps
dec
add
dec
jno
add
jno
inc
cwde
push
call
push
dec
cld
test
push
cmp
gs
enter
push
jno
mov
add
lahf
or
add
mov
scas
ret
jge
mov
sbb
ss
jp
jge
cmp
mov
inc
jl
jge
jne
js
or
mov
pop
lods
xchg
lods
sub
rcr
arpl
leave
xor
pop
inc
push
mov
dec
das
and
adc
mov
or
ror
sti
add
les
or
adc
mov
popf
push
ds
je
(bad)
es
push
cmps
sub
pusha
or
loopne
andnps
xor
sub
outs
jmp
fisttp
pop
sbb
jne
movsx
dec
mov
mov
xor
pop
adc
mov
mov
retf
je
push
dec
jne
in
cmps
and
sub
retf
into
add
addr16
rcl
and
test
jmp
rol
(bad)
sub
sub
push
add
adc
(bad)
call
pop
push
push
mov
mov
mov
jmp
mov
test
ja
mov
sbb
fst
pop
inc
scas
fst
retf
fs
outs
data16
cmp
retf
add
rep
mov
and
xor
inc
rep
pop
or
jne
pop
das
push
add
dec
mov
popf
ret
mov
jne
addr16
and
pop
xor
xor
sub
jae
xor
mov
cmp
(bad)
nop
es
sar
mov
jne
shl
iret
or
sub
xchg
cmp
gs
pop
loop
push
in
shr
ret
jmp
dec
dec
mov
xor
mov
aas
rcr
add
jmp
lods
push
add
sub
jae
sbb
rcr
test
test
data16
mov
mov
int3
add
shl
mov
pusha
mov
mov
icebp
adc
cmp
cmp
xchg
mov
cdq
ret
pop
push
adc
mov
ret
lea
stos
fsubr
add
mov
and
jo
xor
add
xor
in
pop
cdq
xchg
fmul
rcpps
imul
shl
add
inc
mov
add
retf
sub
or
imul
xchg
pop
mov
aas
adc
(bad)
jle
push
std
iret
add
retf
add
add
into
test
fldcw
nop
inc
sbb
or
pop
push
jmp
sar
and
xor
enter
sbb
jle
pop
pop
dec
sbb
call
add
pushf
(bad)
dec
or
lock
adc
cwde
inc
clc
and
add
sbb
mov
cmp
xchg
push
xchg
addr16
or
push
add
test
fiadd
jl
int
dec
pop
rcl
into
aaa
pop
cmp
mov
stc
rol
clc
sub
jb
ret
pop
pop
inc
(bad)
jo
imul
jo
sbb
je
call
adc
or
xor
cmp
add
ror
ins
inc
mul
or
sub
add
xor
mov
and
bound
push
add
sbb
xor
sti
lock
outs
pop
pop
jmp
push
xor
adc
clc
mov
outs
hlt
fisub
pop
dec
js
ja
adc
push
push
dec
add
cmp
in
sub
sub
xchg
iret
pop
mov
clc
cmps
enter
adc
sahf
lea
repnz
fadd
pop
sub
mov
add
sbb
or
inc
inc
and
daa
in
call
call
and
inc
or
jecxz
mov
sub
ja
fadd
push
hlt
adc
add
das
sbb
sbb
inc
add
xor
push
or
loopne
push
not
cld
and
sbb
aaa
mov
test
sbb
mov
xchg
add
or
mov
push
mov
mov
hlt
inc
das
test
push
ret
sti
or
mov
mov
xor
shl
int3
sbb
clc
push
mov
popf
add
dec
hlt
out
cmp
adc
pusha
sbb
push
jo
or
mov
loop
adc
inc
movs
loop
dec
stc
sbb
fist
inc
xor
fld
lahf
mov
pop
test
sbb
mov
cmp
or
mov
mov
pop
out
pop
aad
or
out
ret
into
cmp
or
mov
jae
paddb
in
or
add
xchg
xor
push
inc
pop
test
xor
push
shl
les
adc
push
imul
mov
(bad)
ss
cmp
cld
and
pop
pop
data16
sub
sti
or
or
shl
push
stos
lea
cld
mov
cmp
popa
sub
retf
out
jb
out
cmp
add
adc
shr
sub
fild
sub
addr16
aam
or
mov
pop
or
ret
jo
pop
jno
adc
gs
and
fild
retf
push
in
test
adc
fild
push
add
dec
and
adc
fmul
xchg
cmp
adc
or
adc
ret
scas
push
and
sti
lods
aad
inc
add
adc
xchg
mov
add
pop
pavgb
fmul
repz
jo
sub
pop
push
data16
adc
sub
mov
dec
repz
add
and
push
shr
movs
ret
add
dec
xor
shr
or
ins
out
cmps
cmp
enter
das
out
out
loopne
clc
adc
and
or
xor
aad
call
sub
push
div
shr
xor
aas
or
inc
inc
mul
sub
jle
inc
dec
pop
and
rol
jg
stc
lea
xor
mov
cs
ficom
call
nop
xlat
mov
pop
mov
inc
sbb
shl
mov
xchg
add
ja
ins
inc
adc
mov
jnp
mov
mov
jne
ret
and
test
add
jnp
mov
pop
in
cs
mov
pushf
ror
dec
push
and
daa
out
adc
shl
dec
xor
dec
mov
xor
dec
inc
mov
popa
sti
mul
sbb
adc
sbb
enter
aad
mov
mov
mov
push
add
cwde
mov
mov
cli
popa
les
xlat
in
mov
sbb
pop
aas
(bad)
xor
adc
std
(bad)
mov
dec
ror
sbb
(bad)
jo
or
popa
sar
fdiv
mov
add
shl
ins
jge
cld
pusha
dec
repz
aaa
jl
(bad)
cs
movs
adc
push
test
dec
lock
xchg
scas
jg
dec
jl
scas
aas
mov
adc
pop
dec
js
and
popa
jge
mov
push
xchg
fild
pop
test
lahf
mov
inc
test
mov
mov
mov
setge
xor
pop
dec
lahf
lods
pop
xor
and
outs
mov
sbb
adc
std
and
(bad)
in
jno
jle
ins
test
and
outs
iret
add
(bad)
sahf
movd
cld
jmp
jnp
mov
jno
sbb
mov
loopne
(bad)
lods
(bad)
sti
ss
cmp
fimul
inc
repz
in
ficomp
adc
cmp
add
inc
in
cmp
(bad)
(bad)
call
nop
adc
dec
push
pop
shr
test
cmp
cmps
xor
or
or
adc
inc
sbb
push
int
fmul
cmp
pop
sbb
pop
cmps
cmps
pop
push
add
test
lock
add
add
dec
lock
add
adc
lock
imul
inc
das
pop
add
scas
push
and
inc
sub
mov
add
or
test
xlat
ret
aad
dec
out
test
pop
cwde
jmp
mov
mov
mov
push
enter
dec
mov
out
fstp
clc
xor
sbb
call
add
dec
jmp
add
xchg
jge
jmp
adc
sub
sub
inc
clc
adc
xor
cmc
pop
data16
mov
sbb
add
shl
mov
(bad)
pop
pop
fcmovu
push
and
push
push
xchg
sahf
enter
sbb
mov
cmps
je
ja
cmp
aad
add
addr16
and
mov
test
repz
push
mov
add
dec
push
dec
stos
ret
inc
in
mov
lods
retf
cmp
and
imul
xor
mov
push
pop
shr
adc
jo
add
mov
cwde
xchg
ficom
ret
lds
ret
cmp
pop
jmp
loopne
aam
cmps
add
mov
rol
mov
fcomp
push
fld
dec
cmp
shl
bound
aam
lea
rcl
das
mov
pop
sbb
sub
scas
sbb
cmp
jo
pusha
mov
xor
push
(bad)
test
push
lock
inc
push
es
sbb
and
cmp
cld
fmul
jnp
sbb
add
xchg
mov
or
push
enter
ds
mov
sbb
mov
dec
in
imul
iret
loopne
jmp
or
dec
(bad)
jge
push
push
aas
pop
inc
mov
sbb
mov
outs
popf
xor
xchg
rcr
pop
loopne
popa
sub
(bad)
lahf
shr
inc
test
test
and
jge
repnz
mov
jne
aam
sub
das
sub
push
mov
add
hlt
wrmsr
and
xchg
mov
mov
add
fdivr
shl
add
faddp
or
ror
mov
jns
mov
adc
pop
dec
push
mov
add
je
mov
sar
rol
movs
mov
dec
push
add
pop
add
push
cmp
pop
push
push
loopne
and
pop
xchg
call
hlt
mov
fnsave
mov
xor
mov
lar
xor
mov
data16
(bad)
jmp
gs
sbb
mov
push
mov
mov
jno
in
dec
nop
and
aas
cmp
scas
mov
popa
ins
sbb
int
mov
sub
shr
call
xor
adc
(bad)
and
rol
inc
xor
mov
mov
xor
xor
adc
or
xor
fnstenv
xchg
test
inc
mov
mov
push
leave
mov
xor
clc
push
shr
push
or
je
smsw
mov
fistp
dec
mov
adc
loope
xchg
ret
jne
hlt
push
sbb
xchg
shr
mov
dec
cld
jmp
in
aam
jmp
ins
daa
pop
xor
fst
jle
sbb
dec
loope
mov
lea
pop
mov
test
jmp
xlat
mov
mov
inc
xchg
mov
inc
sub
pusha
sub
push
mov
fbstp
xor
xchg
jo
or
fisubr
jmp
sbb
add
ret
call
jmp
aad
scas
sub
fadd
(bad)
inc
imul
gs
loopne
loopne
mov
je
mov
add
pop
nop/reserved
mov
jbe
das
sub
push
call
test
je
jns
ins
mov
push
pop
ret
cdq
cli
inc
mov
test
mov
or
pusha
add
das
xchg
pop
mov
out
jg
add
adc
add
add
xor
adc
mov
adc
cmp
push
adc
and
fiadd
jmp
clc
or
(bad)
clc
push
cmp
mov
pop
push
fs
adc
(bad)
nop
xchg
pushf
inc
movs
add
repnz
push
push
jne
aam
and
test
push
(bad)
outs
int
scas
dec
or
daa
push
inc
jo
sub
inc
mov
mov
add
pop
ret
pop
lods
iret
adc
dec
jmp
inc
push
dec
or
or
mov
mov
add
adc
mov
lea
mov
fnstsw
or
scas
retf
push
dec
jo
loope
shl
out
jne
shl
adc
inc
pusha
push
inc
sahf
add
jmp
cmc
(bad)
fisttp
call
in
jg
pop
or
xchg
adc
scas
push
mov
and
mov
scas
shl
aaa
lock
push
mov
shl
int
or
out
(bad)
std
fst
movs
add
mov
sub
jns
js
xor
in
jmp
scas
pop
pop
and
sub
pop
pop
call
test
mov
call
shl
loopne
icebp
push
iret
repz
push
adc
xor
(bad)
into
repz
pop
push
fnstenv
pop
outs
adc
pop
pop
ftst
dec
add
add
imul
or
mov
add
sbb
jmp
xor
sti
rcr
adc
jmp
mov
xchg
and
xchg
sub
pusha
mov
dec
sbb
or
and
jmp
add
leave
aad
or
mov
xchg
(bad)
add
hlt
mov
or
je
pop
pop
add
or
mov
out
mov
lock
xchg
clc
sub
ret
cmps
xchg
jbe
fstp
fadd
cmp
cmp
ins
movs
inc
(bad)
xlat
and
sbb
std
dec
loope
mov
jae
call
or
or
cli
pop
push
lea
fimul
xchg
inc
call
cmp
test
lods
or
test
ret
inc
xor
lock
cmps
rcl
mov
test
repnz
out
into
push
pop
outs
mov
stos
add
sub
loop
sbb
test
sti
sbb
pop
jnp
inc
sbb
inc
sbb
mov
retf
or
test
xchg
and
adc
ror
mov
cmp
test
rcr
or
aas
cmp
and
push
push
loopne
ins
mov
add
pop
pop
sub
sbb
ret
retf
and
sar
mov
in
ret
add
in
loope
jecxz
adc
fcom
inc
jno
pop
add
push
pop
imul
fild
dec
imul
dec
adc
dec
call
push
add
in
xchg
into
test
xor
mov
inc
and
pop
or
bound
movs
sub
ret
inc
mov
das
ret
xlat
pxor
rol
inc
jge
ret
das
push
icebp
(bad)
fld
(bad)
in
xchg
xor
loop
retf
in
shl
bound
push
pop
adc
das
sbb
xlat
mov
sub
aas
sbb
xor
mov
mov
inc
stos
hlt
adc
add
mov
out
dec
mov
repz
add
fld
hlt
or
jo
cmps
mov
pop
mov
jo
and
repz
dec
pop
xchg
sysenter
out
xor
dec
mov
inc
add
push
push
xchg
mov
cmp
cmc
ror
mov
gs
mov
push
in
ret
mov
das
ret
cmp
(bad)
pushf
daa
jb
push
xor
xor
les
and
inc
aas
scas
pop
test
sbb
ins
jmp
scas
ins
push
inc
mov
jmp
neg
ret
outs
and
inc
push
loope
fdivr
lea
xor
mov
shl
inc
inc
repz
inc
push
loope
jns
ret
xchg
test
nop
inc
add
pop
add
cmp
and
pushf
lea
sub
push
rol
cmp
mov
or
pop
and
sbb
mov
dec
les
mov
mov
out
inc
adc
loopne
sub
add
add
push
jne
dec
cmp
shl
lock
adc
pop
mov
add
push
push
mov
push
mov
lods
(bad)
addr16
(bad)
jg
push
xor
push
jle
push
adc
bnd
dec
ror
das
popf
loope
sub
dec
les
mov
test
out
xor
(bad)
dec
or
dec
hlt
sub
mov
xchg
sbb
sub
push
mov
jnp
out
inc
adc
cmp
push
xchg
mov
pop
(bad)
hlt
aad
rcr
arpl
repnz
jle
xchg
pop
pop
pop
aas
mov
adc
loope
pop
add
cmp
pop
test
in
xor
jecxz
push
xchg
add
adc
adc
aas
and
sbb
or
add
in
mov
movsx
push
loope
repnz
ja
sub
cmp
loope
add
and
pop
adc
repz
or
or
fwait
and
ins
movs
jecxz
repz
push
js
xor
scas
jle
mov
sbb
fsubr
in
add
or
aad
pop
jb
fst
xor
sahf
repz
aaa
add
mov
out
pop
test
pop
hlt
pop
scas
mov
leave
lock
mov
add
dec
inc
out
xor
dec
xor
or
mov
adc
mov
xor
shl
jns
hlt
stos
sar
add
mov
aam
sub
cmc
rol
pop
imul
das
in
and
popa
dec
sub
adc
fstp
and
repnz
pop
cmp
add
mov
or
das
pop
rol
adc
dec
ret
jno
cwde
or
jg
(bad)
(bad)
cwde
shr
das
pushf
mov
popa
in
ret
cmp
fsub
sti
ja
jno
add
ja
cmc
mov
mov
imul
mov
cli
inc
ror
js
leave
push
stc
jecxz
xchg
inc
mov
add
and
pop
or
jg
shl
or
sub
cmp
jge
jno
mov
pavgb
es
(bad)
mov
and
je
and
je
pop
dec
add
icebp
push
or
adc
cmp
fsubr
or
add
pop
xor
shl
or
inc
sbb
dec
hlt
cmp
mov
lock
push
stos
mov
mov
cmp
inc
or
aas
jecxz
and
cmp
dec
pushf
push
push
adc
call
mov
add
pop
jmp
pop
imul
or
jno
xor
lock
stos
adc
push
adc
idiv
inc
xor
cmp
xchg
movs
sub
jns
add
xchg
or
shl
fldcw
popa
jnp
mov
test
lea
cmp
pusha
adc
sub
test
mov
xor
fs
xor
sub
add
das
imul
dec
cwde
ins
push
test
mov
inc
inc
lods
jg
(bad)
cwde
(bad)
in
sbb
hlt
pop
pop
adc
clc
inc
add
js
in
mov
in
shl
mul
adc
sti
inc
fs
in
or
rol
clc
je
xchg
js
cmp
jne
mov
cmp
jne
mov
jno
xchg
inc
loope
sti
pop
xchg
inc
shr
mov
xor
or
add
addr16
dec
pushf
dec
sar
pop
push
loop
jae
jmp
push
loope
mov
add
mov
or
loope
mov
nop
inc
(bad)
mov
adc
mov
nop
add
adc
or
or
in
mov
dec
lds
mov
int
pop
inc
or
mov
inc
and
mov
cld
test
mov
and
shr
sbb
or
dec
in
call
prefetchwt1
add
jmp
dec
test
xor
loopne
and
jnp
add
outs
mov
pop
adc
mov
add
inc
pop
jns
sti
loopne
or
add
(bad)
ja
and
and
mov
jg
sbb
inc
cmp
cmc
outs
inc
add
cmp
adc
jg
dec
cmps
pop
bound
mov
push
add
pop
mov
xor
push
fwait
add
(bad)
movs
cmp
aad
or
ja
es
sub
frstor
jmp
mov
cmps
test
add
ror
cli
cld
xor
icebp
mov
and
and
inc
or
mov
aam
cmp
xor
je
and
and
scas
icebp
clc
push
adc
mov
jle
js
call
jle
loope
xchg
mov
add
inc
je
inc
and
or
xor
mov
sbb
pushf
pop
lods
push
mov
sar
imul
pop
call
dec
xchg
push
mov
das
fld
lods
add
add
lods
jmp
and
pushf
or
sbb
lods
sahf
mov
lahf
push
or
push
sub
mov
dec
cmp
arpl
xor
mov
mov
ret
test
mov
mov
fdiv
ret
stos
mov
fwait
mov
js
test
ins
lock
mov
sbb
sbb
adc
and
aaa
cmc
pusha
stos
dec
mov
sbb
mov
add
and
or
outs
add
xchg
rol
push
pop
push
imul
jge
mov
leave
and
dec
clc
pop
or
mov
dec
mov
ret
inc
adc
sbb
ror
popa
shl
pop
dec
js
inc
mov
je
push
cmp
pop
add
inc
add
push
mov
call
xchg
dec
dec
push
or
and
xchg
xor
add
xor
fadd
push
xor
pop
xor
fs
xor
pop
add
out
leave
clc
sbb
and
mov
or
pop
mov
test
test
push
lock
inc
and
stos
lahf
je
mov
dec
imul
and
xchg
leave
or
mov
xor
popa
js
and
sub
sete
jecxz
inc
ror
jno
add
jo
inc
lods
shl
dec
loopne
pop
jmp
test
cmp
cld
pop
push
cmp
cmp
xchg
mov
sub
pop
inc
xchg
inc
and
add
push
and
inc
xor
add
add
leave
fwait
ret
sbb
push
sbb
lods
ret
hlt
and
push
jne
or
inc
jnp
jmp
jp
xor
shl
daa
mov
icebp
pop
jp
sub
xchg
add
lock
lock
mov
mov
shr
shl
lea
sbb
bound
jge
aaa
inc
adc
add
ss
jno
call
adc
mov
ret
(bad)
loopne
mov
sub
rol
add
dec
xchg
popa
clc
push
add
sub
cli
bound
xchg
cmp
cmp
je
movs
mov
add
inc
xor
pop
mov
pop
push
stos
xor
mov
(bad)
mov
adc
xchg
inc
ror
xchg
push
or
mov
ins
or
test
lock
mov
cmp
sub
jmp
fimul
pop
adc
sbb
push
mov
adc
adc
in
or
jns
jo
sbb
push
or
mov
adc
dec
push
sub
fld1
mov
movs
adc
out
and
add
bound
cli
dec
mov
sbb
xchg
dec
add
les
xchg
popf
ins
ret
cmp
mov
add
scas
xchg
mov
sar
push
int
pop
adc
clc
sub
xor
pop
push
add
add
pop
add
pop
sahf
out
aaa
into
sub
push
cmps
mov
je
out
(bad)
rcr
call
fucomi
cmp
jmp
adc
stos
mov
dec
xor
sti
sub
cld
adc
lock
or
sub
xchg
adc
(bad)
lahf
or
dec
jge
inc
push
inc
xchg
ret
movs
lods
push
push
push
lds
add
push
dec
add
bound
hlt
mov
sbb
cmp
push
imul
xchg
lock
out
enter
add
sub
or
pop
add
adc
and
bound
jg
pop
inc
or
sub
sbb
adc
adc
add
xor
or
push
repnz
fisttp
pop
pop
fist
pop
sti
push
xor
mov
inc
loop
push
inc
pop
add
mov
fwait
dec
adc
std
aam
sub
xor
icebp
pop
or
ret
inc
retf
or
push
cld
mov
(bad)
pusha
xlat
imul
or
int3
jmp
out
push
push
scas
pop
pop
mov
pop
xchg
or
add
add
add
loop
jmp
fisttp
sti
jle
mov
sub
ret
push
xchg
add
mov
inc
adc
cmp
ficomp
cld
jns
daa
add
out
scas
adc
pusha
shr
xlat
add
call
adc
cmps
jg
add
je
cmp
lock
jns
lods
aas
jno
dec
sub
loopne
sub
or
sti
fsubr
js
mov
pushf
sub
(bad)
push
js
loop
mov
add
shr
cmovb
or
jne
inc
ror
call
add
push
cmp
call
mov
mov
xchg
stos
xchg
or
xor
cmp
(bad)
push
sbb
test
mov
std
lock
push
push
or
mov
sbb
push
adc
and
jo
aaa
add
loopne
push
mov
cmp
(bad)
shl
or
outs
xchg
ret
dec
imul
push
add
inc
enter
or
or
clc
pop
push
cs
or
jne
push
cmc
je
jo
inc
lock
inc
and
and
sar
aaa
xchg
clc
retf
stc
clc
push
bound
add
int
fmul
inc
iret
mov
ret
or
and
sbb
pusha
add
ds
mov
out
add
(bad)
das
xchg
pop
loope
fisttp
cwde
or
in
pop
dec
inc
fcom
aad
cmps
mov
jo
or
xor
mov
movs
aas
dec
out
xor
jo
push
add
pop
dec
sbb
inc
daa
into
ja
shl
fcomp
not
cmp
mov
out
jmp
stos
sbb
push
int
loopne
sbb
sbb
mov
aad
add
pusha
rcl
pop
icebp
hlt
xor
adc
inc
mov
inc
ja
sbb
add
hlt
push
icebp
scas
push
rcl
xchg
mov
sub
leave
sub
pop
lea
and
shl
mov
inc
add
pop
mov
shr
(bad)
sbb
imul
cmps
aam
(bad)
stos
div
sbb
inc
ret
dec
shl
daa
mov
xor
cmp
retf
cld
mov
sbb
jb
loop
adc
mov
mov
mov
push
push
dec
push
int
dec
add
push
or
hlt
xchg
cwde
mov
(bad)
mov
movs
ret
out
pop
mov
hlt
sbb
icebp
(bad)
adc
repz
sub
push
xor
inc
dec
push
jnp
idiv
addr16
sub
adc
int
mov
in
xor
push
shr
mov
adc
inc
std
dec
pop
int3
pusha
dec
mov
les
or
int3
xor
sbb
pop
sbb
adc
aaa
xor
push
loop
push
ins
movs
bound
out
add
and
xor
inc
ret
jg
movs
sbb
adc
add
cmp
test
push
dec
fstp
xchg
mov
and
adc
mov
cmps
xchg
add
xchg
fisub
adc
in
sub
je
cmp
loopne
jle
add
xor
sbb
sbb
adc
rol
add
pop
out
test
inc
ins
sub
adc
xor
and
pop
xor
and
jnp
les
call
jmp
retf
push
sub
push
jnp
or
jb
xor
bound
imul
xor
jp
(bad)
mov
cwde
int3
mov
fsub
add
xchg
dec
enter
test
mov
adc
adc
sbb
in
daa
lock
call
inc
or
in
mov
sub
in
push
in
aaa
rcr
pop
hlt
pop
mov
call
adc
mov
call
test
and
mov
lock
mov
scas
mov
adc
clc
shl
adc
pop
(bad)
loope
jmp
xchg
arpl
loopne
adc
ret
cmps
adc
xor
pop
push
dec
into
pop
test
icebp
ret
jmp
xchg
ficom
add
les
popf
mov
add
mov
adc
test
lods
pop
mov
fimul
js
and
push
jle
add
push
and
and
outs
hlt
or
jo
or
and
bound
adc
mov
push
pop
add
ins
cmp
in
neg
dec
jne
pop
or
or
xor
rol
add
imul
lea
add
or
sbb
popa
cmp
pop
ja
leave
inc
icebp
sub
or
stos
test
jmp
pop
sub
clc
mov
lahf
sar
ret
dec
loopne
pop
sub
jmp
mov
das
lods
(bad)
or
(bad)
mov
cdq
dec
hlt
add
mov
sub
xchg
jle
inc
add
iret
add
ror
arpl
add
adc
pop
and
xlat
inc
adc
bound
add
add
clc
xor
pop
fabs
xor
sub
(bad)
loopne
fs
pop
pop
and
mov
sbb
or
sub
lahf
push
mov
jg
pusha
inc
sub
mov
mov
mov
add
sub
jae
sbb
pop
daa
add
mov
inc
mov
shl
xor
dec
add
mov
inc
sub
mov
(bad)
adc
pop
push
mov
sbb
and
inc
mov
mov
push
or
inc
add
add
sub
add
(bad)
push
sub
in
mov
mov
or
movs
in
xchg
shr
sub
sbb
or
cmp
adc
std
retf
cmp
bound
iret
xchg
inc
je
jmp
inc
adc
popa
push
test
aam
and
fwait
add
add
jecxz
mov
inc
push
in
pop
or
or
xchg
push
and
adc
pop
pop
sbb
add
es
push
enter
sbb
or
or
mov
or
jb
or
retf
inc
sbb
adc
in
mov
shl
push
xor
movs
fld
sbb
adc
or
aas
mov
push
sbb
aas
bound
fsubr
jbe
add
gs
sbb
in
mov
loope
or
popa
add
or
loope
mov
xor
int3
jbe
aas
mov
add
dec
loope
jge
retf
add
pusha
sub
push
and
adc
or
inc
jle
or
dec
je
add
call
cs
dec
xlat
dec
(bad)
jb
push
stc
sbb
or
or
cmps
push
sar
jae
dec
movs
shr
mov
or
push
div
xchg
add
mov
int3
jg
dec
jmp
pop
add
into
clc
push
ja
and
popa
xor
or
xor
ss
add
push
inc
sub
push
inc
lock
pushw
or
xor
or
inc
es
leave
push
leave
or
push
daa
sbb
enter
xchg
adc
and
hlt
jg
dec
add
je
jmp
and
cs
ret
jmp
sbb
mov
cmp
adc
xor
and
arpl
lds
lock
or
inc
or
sub
outs
pop
dec
cmp
add
cmps
add
hlt
xchg
xor
adc
pop
loopne
nop
and
icebp
js
cdq
pop
shl
lea
sub
cmp
repz
retf
inc
mov
dec
or
lock
xchg
jmp
lahf
test
adc
mov
fmul
lds
lahf
mov
or
push
adc
sub
fcomp
inc
test
adc
sub
sar
repz
test
neg
mov
leave
add
xchg
mov
cs
push
push
in
(bad)
scas
adc
fld
std
ret
cld
add
cld
push
sbb
ret
and
lea
dec
xchg
pop
push
jbe
loopne
add
xchg
pop
xor
das
adc
popf
mov
cmp
and
into
jne
push
adc
push
ins
inc
sbb
inc
and
xlat
rcr
inc
sbb
xchg
out
ror
test
push
dec
xlat
call
ins
call
and
(bad)
retf
pop
sbb
jle
and
fimul
xchg
ins
ret
in
enter
push
loop
scas
and
mov
scas
mov
sub
jb
mov
sbb
mov
pop
cld
push
clc
add
ja
adc
adc
and
js
inc
jbe
add
mov
inc
adc
jmp
clc
inc
gs
sub
fnsave
and
inc
sti
add
sbb
cmp
mov
je
in
repnz
cs
xchg
sbb
inc
mov
(bad)
push
jmp
daa
jne
jmp
js
sbb
(bad)
or
cwde
add
in
int3
cld
fld
sbb
adc
scas
adc
or
adc
xchg
clc
and
mov
enter
sub
xchg
cmps
call
call
jnp
aaa
movs
in
mov
or
repnz
and
and
sub
test
sbb
mov
mov
add
mov
out
mov
jb
add
or
dec
add
fcmovu
add
jmp
inc
or
xchg
(bad)
fimul
jge
sub
add
dec
inc
in
or
or
imul
je
imul
aaa
ja
push
mov
pop
call
rol
add
bt
jae
xchg
mov
mov
loop
data16
or
sub
or
fmul
cs
pushf
sbb
adc
unpcklps
call
nop
loopne
mul
stos
test
or
sbb
daa
and
ret
dec
sub
push
sub
mov
sub
adc
push
add
xchg
add
aaa
push
adc
sub
jno
mov
sbb
add
jae
xchg
(bad)
dec
mov
mov
inc
adc
mov
mov
sbb
shl
and
idiv
repz
add
sub
jb
ret
enter
add
xchg
inc
fidivr
jmp
inc
add
jmp
pop
sbb
xor
or
mov
xor
clc
je
dec
pop
add
add
in
add
pop
add
pop
loope
dec
js
and
fld
adc
pop
retf
add
sbb
call
inc
or
adc
jl
cs
sub
and
jae
push
xor
and
xchg
add
add
ror
repnz
or
js
daa
and
outs
sub
add
and
add
(bad)
aad
or
clc
xchg
pop
and
mov
bound
ror
cmp
pop
sbb
dec
or
aaa
inc
mov
loop
sub
cmps
cmp
pop
hlt
movs
pop
mov
add
(bad)
or
lock
xor
or
std
push
cs
mov
cld
sbb
or
add
push
push
add
clc
cs
jne
mov
add
pop
in
ret
adc
adc
fmul
push
ret
pop
test
mov
mov
cmp
pusha
and
shl
xchg
ds
pop
or
jne
and
mov
or
mov
fild
pop
push
adc
jnp
and
test
or
adc
add
jl
add
xchg
enter
rcr
inc
enter
stos
popa
hlt
call
je
inc
test
pusha
adc
add
enter
call
or
xchg
mov
adc
in
cmp
lock
in
xor
dec
pop
sub
inc
aaa
fmul
xor
ficomp
pop
(bad)
jbe
add
jmp
dec
mov
icebp
push
movs
push
dec
and
ins
or
adc
adc
or
mov
adc
or
gs
fcmovne
fwait
push
hlt
(bad)
hlt
pop
js
or
cmp
adc
lds
repz
add
adc
mov
shl
pushf
leave
std
sub
aas
clc
add
jmp
push
mov
data16
clc
adc
mov
lods
or
jg
jle
adc
mov
imul
test
cmp
jno
adc
ficom
pop
ja
ja
dec
inc
adc
aas
jo
dec
mov
sub
inc
ret
jecxz
push
or
(bad)
rol
cmp
add
jg
in
inc
in
adc
inc
mov
pcmpeqb
jl
es
out
fs
push
jne
lea
lods
mov
jbe
adc
(bad)
shl
stos
or
sub
or
adc
cwde
xor
test
mov
cwde
test
pop
inc
cmc
test
pop
push
les
cmp
adc
(bad)
or
nop
(bad)
adc
movs
mov
loope
icebp
call
adc
cmp
mov
xlat
mov
add
ret
push
adc
fcom
pop
je
popa
sub
add
mov
jl
sub
std
sub
clc
add
sub
test
lock
jns
sbb
push
mov
mov
mov
add
and
add
jl
fcom
adc
loop
loope
lea
in
leave
mov
mov
push
sbb
mov
sti
movs
cmp
js
add
aam
lock
mov
jne
mov
outs
in
mov
or
pop
jns
imul
add
jg
or
test
xchg
jmp
push
pop
mov
ins
pop
shr
outs
xlat
popa
inc
test
ja
ret
nop
mov
stos
add
xchg
push
or
fucomi
cmp
dec
xor
jp
pop
or
adc
xor
xchg
push
sbb
test
adc
dec
sub
or
fldenv
loopne
xor
hlt
iret
shl
sub
cmp
loope
hlt
push
outs
sub
sti
jae
adc
cdq
aas
cmp
outs
inc
mov
push
mov
aas
sbb
jmp
mov
in
dec
sub
or
mov
dec
shl
and
rcr
and
adc
fmul
mov
jge
and
jne
jmp
mov
mov
sbb
or
xor
cs
inc
or
dec
add
cmps
retf
jo
adc
or
out
xor
dec
or
add
dec
mov
hlt
sub
inc
add
dec
sahf
cmp
jmp
pusha
neg
and
test
mov
je
sbb
das
ins
cmp
mov
nop
sub
pop
out
pop
cmp
jg
lahf
pop
xchg
inc
jmp
pop
lods
loope
lea
aaa
lock
das
into
in
push
xor
mov
xor
inc
xchg
add
inc
cmp
retf
(bad)
cld
cmc
or
push
mov
push
pop
(bad)
(bad)
push
xor
add
pop
pusha
movd
pop
sub
sbb
(bad)
mov
loop
retf
hlt
andps
es
xor
push
inc
cmp
adc
das
pop
jne
enter
or
cmp
mov
or
sbb
cmps
pop
and
and
test
mov
mov
hlt
jmp
sar
stos
cmp
or
add
xchg
ret
xchg
mov
pop
inc
mov
icebp
jg
mov
dec
mov
push
cs
sar
dec
mov
mov
fdiv
dec
push
ss
jmp
cmp
mov
adc
mov
push
inc
cwde
jmp
(bad)
enter
xchg
pop
xlat
pop
test
adc
lock
xor
add
mov
loope
mov
je
mov
js
mov
or
cmp
inc
and
ins
and
cwde
nop
ins
push
dec
adc
xchg
cld
gs
outs
and
jmp
fs
mov
xlat
les
xchg
test
xor
push
jne
xchg
add
add
and
test
ja
xchg
ret
xchg
cmps
dec
mov
push
mov
sbb
(bad)
popa
push
jbe
pushf
stos
(bad)
xor
stos
sbb
loopne
or
call
jmp
sbb
mov
sbb
inc
retf
cmp
inc
adc
cmp
dec
test
mov
or
inc
adc
int
aam
dec
dec
xor
or
mov
jmp
clc
cmp
and
mov
(bad)
sbb
aaa
or
inc
sub
int
xor
add
add
adc
adc
inc
mov
jo
nop
nop
xchg
in
loopne
addr16
xor
sbb
xor
push
and
add
loope
gs
imul
mov
pop
bswap
push
aas
popa
js
(bad)
in
jl
sbb
or
and
imul
loopne
pop
xlat
outs
fld
jmp
adc
pushf
push
dec
jecxz
inc
push
mov
jg
add
cmp
or
jne
push
push
lea
push
mov
add
std
repnz
mov
dec
inc
lods
ret
dec
sub
jnp
popf
dec
jno
jmp
imul
shl
outs
inc
add
ins
mov
add
mov
push
popa
mov
dec
xlat
in
ss
push
mov
cmp
imul
pop
les
and
sar
mov
(bad)
and
or
fiadd
jnp
imul
jl
push
rcl
inc
and
retf
mov
adc
(bad)
mov
call
pop
ror
imul
daa
cld
pop
mov
inc
sub
shl
jb
cmp
mov
xor
dec
loopne
cmp
jecxz
nop
sbb
add
sub
sub
lahf
rol
push
dec
jne
jge
mov
es
add
ins
xchg
sbb
mov
and
sahf
pop
mov
mov
jnp
lds
push
cld
das
dec
and
sar
stos
pop
dec
mov
sbb
push
push
push
or
adc
stc
lods
xor
or
cwde
fdivr
adc
(bad)
fisttp
push
sahf
cmp
push
or
test
inc
push
aas
or
(bad)
stos
sub
hlt
push
or
xlat
punpcklbw
(bad)
rol
inc
cmp
jo
adc
imul
mov
inc
lods
(bad)
xor
mov
fcom
push
outs
std
aad
or
sti
daa
xor
fidivr
(bad)
jl
xor
mov
inc
mov
icebp
xchg
add
add
adc
inc
call
in
mov
rol
xchg
add
xchg
loope
inc
xchg
mov
mov
jne
mov
push
add
loope
sbb
enter
scas
bound
scas
pop
adc
pop
cmp
cmp
mov
ss
jmp
push
and
pop
sti
xlat
sar
test
pop
mov
arpl
fwait
xchg
cmp
loope
xor
mov
mov
mov
pushf
mov
in
arpl
push
mov
adc
(bad)
sub
pop
jae
cmp
adc
jle
test
add
clc
or
mov
xchg
fadd
(bad)
fidivr
cmp
xor
pop
pop
mov
mov
out
adc
xor
clc
movs
adc
inc
adc
pop
adc
or
lock
inc
pop
and
xor
or
sub
sub
retf
cmp
jl
or
sub
mov
mov
sbb
jnp
push
push
into
imul
xor
inc
jl
mov
push
test
add
sub
jne
cmp
inc
and
mov
mov
lahf
cmp
test
push
push
je
and
mov
ror
in
inc
sub
dec
jg
xor
xor
add
mov
add
(bad)
sub
icebp
pop
aam
mov
inc
or
inc
lock
xor
daa
push
call
out
or
push
lahf
or
dec
jne
bound
pop
inc
pusha
shr
gs
js
add
cmp
fldln2
mov
mov
xchg
imul
pusha
mov
dec
add
std
and
sbb
fstp
inc
(bad)
dec
jne
std
push
push
adc
add
mov
ret
inc
sub
ja
sbb
pop
loope
pop
ss
and
mov
or
mov
sbb
push
adc
sub
pusha
clc
jb
pop
mov
xchg
inc
sub
les
imul
pop
pop
sahf
sub
mov
adc
test
jb
jae
and
data16
cmp
arpl
add
push
ins
les
jnp
dec
or
push
inc
pushf
inc
adc
ret
pop
test
aaa
pusha
movs
loopne
fdiv
(bad)
ins
mov
jle
inc
sub
jl
sbb
dec
inc
movs
mov
(bad)
popa
das
add
cwde
jg
out
loope
sub
sbb
sar
push
or
xchg
sbb
cli
xor
push
inc
mov
in
loopne
ror
or
xor
mov
jg
jo
cwde
xor
fwait
lea
add
add
or
jae
into
cs
fimul
mov
adc
push
xor
inc
and
fsub
dec
sbb
pop
xor
aaa
or
(bad)
adc
jle
inc
loop
dec
daa
sbb
or
push
sbb
and
cmps
adc
xchg
mov
cmp
repz
add
loop
cdq
add
outs
push
push
dec
inc
pop
and
sub
pop
or
aaa
xor
js
ins
lds
mov
mov
call
adc
je
pop
adc
sbb
call
adc
fisttp
push
icebp
retf
cmc
enter
lahf
stos
or
pop
js
scas
inc
or
xor
das
ins
xor
and
add
adc
arpl
out
push
jecxz
xchg
dec
or
push
test
sub
add
sub
add
aaa
fmul
and
cmp
stos
xor
test
pop
clc
sub
aaa
dec
clc
and
mov
adc
ret
jle
and
add
inc
cmc
push
xchg
mov
ret
and
add
sbb
test
push
sub
inc
dec
popf
xlat
div
xor
or
mov
and
ja
daa
nop
xchg
sub
(bad)
jne
adc
sbb
shl
aad
adc
push
pop
mov
adc
jnp
cmp
xor
lock
push
add
mov
inc
test
lods
xor
xor
mov
mov
cmc
fcmovnu
push
stos
adc
cmp
pop
push
dec
inc
fdiv
test
fistp
push
cld
push
push
cmps
mov
or
loopne
mov
mov
cmps
add
inc
popf
leave
mov
(bad)
je
int3
lods
push
and
add
dec
(bad)
inc
mov
loop
add
add
push
mov
xor
ret
nop
outs
sbb
pop
or
test
and
adc
daa
push
arpl
ficom
mov
clc
xchg
or
xchg
jns
jno
adc
cmps
mov
inc
test
imul
int
push
pop
lock
in
and
xor
pop
pop
movs
add
add
adc
xor
pop
cmps
mov
mov
icebp
or
call
loop
adc
inc
xor
sub
or
adc
add
sbb
stc
cmp
and
add
retf
hlt
call
pop
fs
and
add
cmp
jecxz
push
or
int3
cs
cmp
mov
fistp
xor
hlt
hlt
mov
scas
push
out
out
inc
mov
pop
pusha
push
push
fadd
in
inc
das
cwde
inc
pop
push
movd
fild
and
cmp
out
push
adc
add
lods
xchg
ds
jne
imul
inc
imul
inc
sti
rol
inc
call
jnp
je
sbb
jne
jne
inc
ror
jp
xor
sbb
es
pusha
add
daa
push
hlt
inc
and
lock
stos
cli
mov
(bad)
cmp
jne
loope
pop
jo
inc
mov
cmps
ss
adc
inc
inc
add
and
je
sub
dec
and
add
nop
scas
pop
idiv
mov
cmp
jl
lea
shr
and
rol
or
mov
inc
or
mov
mov
cmp
mov
dec
push
rol
js
fbld
pop
xor
shl
adc
pusha
adc
cmps
int3
dec
arpl
test
into
aam
outs
loopne
scas
pop
mov
inc
or
test
je
add
add
movs
das
inc
add
mov
push
(bad)
or
clc
inc
pop
push
xchg
orps
(bad)
jmp
sbb
leave
sbb
(bad)
push
cmp
aaa
pop
pop
xchg
popa
sbb
add
(bad)
sbb
js
push
dec
rcl
push
rol
sar
jecxz
test
(bad)
mov
jp
push
adc
fist
xchg
xor
xchg
jne
push
adc
adc
mov
and
and
aas
and
or
fimul
(bad)
add
push
dec
cmp
add
inc
add
loopne
cwde
rol
mov
jmp
mov
jae
cmp
xor
or
push
dec
dec
cmps
xor
push
xor
add
dec
sbb
xor
inc
cmp
pop
int3
add
jns
out
cdq
(bad)
rcr
mov
add
add
dec
inc
add
add
dec
sgdtd
scas
xor
dec
ja
lock
in
in
dec
daa
mov
mov
sub
test
inc
sbb
add
stos
cmp
pop
push
ins
and
lock
dec
movs
retf
test
test
xchg
inc
sub
add
xor
sar
dec
ret
dec
dec
push
mov
popa
cwde
pop
and
(bad)
faddp
xlat
out
push
or
mov
js
adc
and
inc
or
in
inc
sbb
popa
pop
adc
sub
sub
cli
dec
inc
sbb
inc
push
dec
add
pop
or
mov
add
imul
cmps
xchg
call
sbb
push
cmp
mov
xchg
pop
pop
outs
jmp
and
loopne
je
mov
in
ret
fild
sbb
fmul
or
add
in
dec
dec
xor
or
xor
into
and
or
jmp
cmps
dec
cmp
clc
fdivr
adc
add
push
cmp
adc
clc
outs
mul
xchg
shr
mov
mov
inc
cmp
dec
shl
fistp
lea
ror
pop
add
mov
cmp
test
lock
or
popa
sbb
mov
push
cmp
push
sbb
ret
ins
ss
rol
aas
push
add
inc
sbb
or
inc
lea
lds
add
out
adc
mov
inc
inc
mov
fadd
or
adc
push
loope
out
outs
mov
mov
mov
dec
pop
(bad)
adc
int3
adc
xor
xor
pusha
(bad)
mov
test
mov
outs
loop
je
ja
ret
out
sbb
sub
lods
sub
out
mov
cwde
das
mov
lods
pop
call
xlat
and
adc
fs
aaa
aam
scas
jp
dec
pop
mov
leave
out
inc
adc
pop
dec
sbb
shl
xchg
mov
fadd
cmp
(bad)
cmp
scas
dec
mov
sti
sbb
or
ins
inc
pusha
ins
push
aaa
mov
lock
inc
dec
mov
xor
or
dec
je
dec
pop
sub
es
jmp
es
add
sub
add
xor
out
dec
dec
sbb
xchg
cdq
push
or
inc
mov
out
xchg
sahf
xor
xchg
ret
adc
adc
add
xchg
push
mov
add
cmp
fcomp
mov
and
call
pop
xor
dec
xchg
dec
and
mov
or
enter
xlat
inc
or
in
test
and
mov
jmp
pop
jnp
js
dec
adc
lods
lods
jle
outs
adc
push
jmp
jo
adc
add
adc
iret
and
add
push
adc
test
push
ffreep
sub
pop
adc
loop
mov
jo
jns
add
add
add
js
add
ja
push
nop
imul
push
or
or
dec
add
add
adc
add
sti
inc
push
pop
aas
sbb
inc
test
fwait
dec
cmc
rcl
xchg
push
adc
lea
mov
sub
mov
cmp
retf
or
pop
fmul
lock
mov
lea
xor
mov
jbe
inc
xchg
or
mov
mov
sbb
jo
retf
enter
xchg
sub
sub
sbb
add
cmp
inc
mov
inc
inc
or
mov
xor
in
es
(bad)
lock
jle
sti
lock
arpl
and
and
pop
cmc
test
xor
adc
dec
call
cmp
push
add
test
lock
(bad)
or
jae
inc
pop
or
popf
dec
ins
stos
sub
fcom
in
loope
daa
jb
(bad)
ss
add
mov
rcr
push
inc
pop
adc
shr
ret
ins
xacquire
push
adc
adc
and
fistp
aaa
cmp
sbb
pop
dec
aaa
jo
in
call
adc
xchg
xor
pop
nop
push
and
inc
or
sbb
xor
fcmovbe
jmp
add
cwde
xor
pop
add
fadd
mov
xchg
mov
or
rol
xchg
or
mov
sbb
and
pop
inc
fbld
add
add
imul
aaa
push
or
add
add
mov
ret
ja
movs
lods
test
xor
push
inc
add
sub
fisttp
inc
loopne
mov
push
pop
adc
jl
dec
in
mov
adc
call
mov
cmc
scas
push
inc
and
and
xchg
pop
adc
rol
dec
add
xchg
xchg
cmp
ins
hlt
je
stos
sbb
popa
sub
and
xchg
mov
add
ja
jnp
dec
les
cs
call
rol
mov
scas
or
jl
push
inc
pop
mov
add
pop
inc
or
push
sbb
jmp
jne
ffree
test
add
test
popf
push
and
rcl
adc
pop
movs
inc
in
push
add
pop
(bad)
shr
imul
shl
or
sub
mov
dec
mov
or
mov
add
mov
mov
or
xchg
sub
jne
jno
mov
jnp
fcom
call
and
cs
neg
or
sub
adc
clc
mov
inc
pop
and
inc
(bad)
push
cld
aas
fsub
sbb
mov
pop
push
dec
and
les
mov
push
inc
mov
(bad)
pop
jmp
loopne
imul
add
push
int3
jp
loope
stos
jbe
out
push
dec
nop
jle
cmp
and
or
or
dec
pusha
sub
xor
iretw
jmp
shl
leave
or
stos
pop
cmp
cmp
jo
push
cwde
scas
ret
data16
xor
push
clc
pop
add
push
shr
imul
out
retf
push
push
pop
sub
cmp
leave
mov
dec
ror
ins
mov
fcomp
sbb
inc
je
fwait
enter
ror
cmp
inc
push
sbb
dec
inc
loopne
and
add
jp
clc
adc
outs
aas
jp
sub
test
add
jae
(bad)
mov
push
push
push
shr
bound
sub
mov
cs
int3
jo
std
jmp
aam
fisubr
inc
add
add
cdq
cld
xor
sub
cwde
xor
icebp
dec
add
jp
or
das
inc
(bad)
clc
dec
clc
jne
dec
sub
adc
mov
cs
sub
xor
ficomp
xor
ret
nop
inc
fisttp
daa
inc
add
and
adc
cmp
push
inc
pop
inc
cmp
mov
popa
ds
mov
mov
inc
add
adc
dec
das
mov
es
xchg
ss
fistp
mov
push
cmps
test
fwait
js
add
xor
loopne
mov
mov
pop
sbb
mov
fisttp
inc
pop
or
add
mov
div
leave
and
ss
or
jmp
(bad)
cmp
mov
add
pop
mov
fcom
pusha
xchg
mov
dec
push
or
push
adc
or
push
push
push
in
sub
scas
jmp
fs
cmp
ja
add
into
push
ret
ror
in
mov
mov
dec
jne
pop
ja
or
or
loope
mov
or
cmp
jne
inc
jmp
dec
cmp
outs
bound
xor
mov
or
cwde
add
into
inc
pop
push
dec
mov
fidivr
out
add
cmp
ret
xchg
add
les
push
jae
sub
fisubr
mov
in
inc
add
lods
mov
push
adc
dec
push
imul
xor
mov
push
add
and
mov
mov
scas
lock
les
daa
push
rcr
push
pop
cld
dec
jmp
inc
jmp
cmp
fstp
je
sub
pop
cmp
inc
cld
push
loopne
push
jns
push
fnsave
push
mov
enter
addr16
mov
mov
(bad)
push
cld
cmps
xor
fdivr
add
cld
push
ins
lock
enter
pand
sti
xor
ror
mov
dec
dec
xchg
adc
data16
xchg
dec
test
ret
(bad)
cwde
iret
imul
cwde
inc
imul
pop
fstp
pop
sub
icebp
outs
inc
ss
out
add
fadd
inc
jmp
jne
(bad)
sar
xor
sub
xchg
adc
push
dec
imul
mov
shr
pop
jecxz
or
or
xlat
aad
ret
daa
inc
adc
(bad)
mov
popa
aad
push
rcr
loop
cmpps
jge
dec
mov
mov
or
adc
push
or
ror
popa
add
movs
daa
add
xchg
test
mov
add
aad
sub
push
js
sbb
or
pop
inc
push
dec
sbb
cmps
gs
dec
or
adc
or
pop
push
ja
mov
test
jl
in
or
push
lock
xor
leave
popf
pop
cld
adc
in
mov
xchg
sub
mov
(bad)
dec
scas
and
ror
icebp
dec
jmp
std
jne
mov
iret
je
and
mov
xchg
push
mov
test
inc
push
mul
inc
shl
loope
je
sbb
and
out
inc
add
push
xor
rol
or
and
je
xlat
or
cmovo
popa
add
rcr
fs
jno
sub
lock
clc
sub
cmp
ins
les
fsub
push
sub
xor
in
in
xchg
rol
mov
aaa
imul
jne
mov
movs
les
jne
add
adc
inc
inc
jecxz
les
je
mov
les
adc
inc
jb
movs
outs
in
xlat
push
inc
bound
adc
mov
mov
push
fsub
xlat
or
xor
adc
enter
addr16
adc
sbb
add
sub
ficomp
or
add
mul
inc
call
mov
add
lods
adc
fisttp
or
shl
lods
lds
rol
adc
mov
mov
push
mov
adc
mov
xchg
lea
pop
pop
dec
ror
sti
add
es
jg
lock
sub
stc
pop
mov
mov
bound
mov
sbb
fisttp
test
add
popw
and
je
mov
rol
pop
push
cmp
add
js
dec
ror
in
cmp
dec
adc
or
adc
or
push
imul
cmp
sbb
xor
and
inc
loopne
js
xchg
jne
jb
lock
or
pop
xor
ret
lahf
popf
(bad)
cwde
rcr
(bad)
fsub
mov
sbb
dec
retf
mov
sbb
mov
(bad)
push
xchg
mov
shl
add
xchg
sub
nop
addr16
pop
test
and
sub
je
loop
adc
xor
adc
mov
or
rcl
or
inc
push
jno
mov
js
push
aad
shr
pop
mov
or
push
jne
in
call
popa
mov
call
(bad)
mov
imul
mov
push
lock
and
cdq
lock
mov
fwait
dec
or
popf
push
iret
inc
pop
ret
and
pop
imul
cs
rol
jmp
sar
imul
add
push
inc
push
fcomp
test
push
push
and
shl
lods
inc
mov
push
mov
push
adc
or
sbb
pop
pop
dec
cmp
add
call
dec
cs
or
sbb
mov
das
add
je
lea
fwait
outs
repz
call
mov
mov
adc
imul
add
popf
add
retf
jo
and
lods
cs
lock
or
jns
fsubr
(bad)
mov
imul
scas
adc
dec
xor
popa
ss
xor
and
mov
inc
mov
scas
adc
(bad)
dec
jne
inc
inc
test
test
sbb
inc
sbb
inc
pop
push
ins
add
xor
or
lds
add
addr16
lock
fidivr
inc
add
dec
ins
gs
pop
mov
push
cs
(bad)
arpl
mov
jg
inc
or
lods
nop
lods
daa
push
cmp
inc
xor
fabs
cmp
inc
pop
mov
aas
sbb
jns
add
ins
adc
retf
clc
mov
ins
inc
add
xchg
add
aaa
or
or
cld
inc
fucomi
sahf
dec
mov
loopne
leave
inc
pop
test
xchg
push
rcr
add
int3
or
add
add
gs
add
cmp
sbb
nop
add
dec
dec
pop
add
call
cmp
adc
enter
mov
pushf
push
jnp
in
das
pop
mov
lods
lods
add
jno
dec
pop
jo
dec
rol
imul
outs
xchg
adc
push
jg
mov
sub
cdq
inc
fst
sub
push
adc
dec
push
adc
inc
dec
dec
inc
inc
push
inc
push
mov
aam
lods
clc
xor
sbb
pushf
rcl
fnstenv
adc
mov
or
jne
lods
je
in
and
adc
add
mov
hlt
xchg
jg
sbb
aaa
add
sbb
jae
push
xchg
cmc
mov
sbb
movs
shl
dec
popa
jae
pop
xor
je
cs
pop
je
and
and
mov
ins
retf
mov
or
je
iret
add
pop
in
add
pusha
add
and
rcr
mov
push
dec
lock
outs
outs
popf
cld
or
outs
cmps
jbe
dec
or
data16
mov
mov
and
lods
ins
paddb
pop
or
add
adc
push
inc
ret
or
push
jmp
xor
popf
adc
mov
lds
push
jl
mov
add
pushf
das
add
jbe
dec
push
mov
cmc
or
pop
movs
ins
popa
jo
push
xchg
push
repnz
dec
mov
inc
sti
dec
add
xchg
xorps
inc
imul
mov
arpl
sar
and
test
(bad)
(bad)
nop
push
pop
pop
pop
xchg
ins
in
mov
cwde
call
and
jp
daa
push
jno
sahf
cmp
pop
retf
mov
add
(bad)
sbb
pop
scas
sar
fisttp
lahf
pop
or
and
xchg
mov
fs
and
dec
call
inc
xchg
pop
push
fisttp
mov
stos
add
dec
iret
mov
test
mov
add
pop
or
add
call
movs
leave
js
add
xlat
movs
(bad)
push
scas
xchg
aam
inc
fucomip
imul
inc
popf
pop
test
(bad)
cld
dec
add
xchg
loopne
mov
into
mov
test
adc
ret
js
pop
or
adc
(bad)
sub
cmovs
xor
cmp
mov
mov
ret
push
inc
loopne
sub
shl
outs
cmp
jl
scas
push
mov
add
call
out
(bad)
shl
add
add
add
sub
neg
(bad)
mov
or
or
dec
jmp
inc
add
cmp
sub
cld
jecxz
lea
cli
loopne
cli
je
mov
or
xor
ret
outs
cld
je
or
jne
push
in
mov
outs
add
mov
sub
sar
call
pop
xor
jne
cmp
pop
pop
xor
pop
call
push
add
dec
push
fxch
ja
or
adc
ret
mov
ror
fmul
jecxz
sbb
test
fld
(bad)
imul
ja
fwait
sahf
je
fnstenv
leave
fistp
fld1
fchs
push
fscale
push
loop
es
pop
fstp
fwait
pop
(bad)
loope
push
inc
(bad)
outs
jbe
mov
lock
cli
or
xchg
sbb
xor
data16
cmp
xor
or
mov
dec
or
cpuid
loop
ret
test
out
add
jmp
adc
sub
adc
and
inc
add
lahf
je
or
movq
nop
sbb
add
pop
mov
enter
jns
push
int3
out
add
push
or
or
add
mov
add
(bad)
imul
add
pop
test
jp
push
push
push
movs
(bad)
mov
dec
or
xlat
pop
nop
inc
rol
adc
jne
gs
add
push
gs
fs
sti
mov
add
inc
popa
jns
xchg
pusha
inc
xor
rcr
sub
jae
or
gs
adc
sahf
jae
jnp
out
out
or
push
push
aaa
or
lock
out
xchg
cmp
addr16
mov
jbe
sub
ficomp
mov
sbb
loopne
into
jae
xchg
adc
aaa
dec
push
inc
or
dec
or
dec
ins
inc
in
sbb
add
adc
cmp
push
dec
adc
loopne
dec
adc
jo
test
add
xor
dec
ins
sahf
add
xchg
rcl
mov
pop
fwait
out
aas
stc
aas
or
rcr
jmp
out
xchg
outs
jo
xchg
imul
add
add
pop
add
push
addr16
pusha
pop
cmp
addr16
addr16
packuswb
cmp
ins
fild
and
js
jne
push
stos
retf
dec
outs
imul
cmp
push
cs
ror
enter
pop
jnp
fsub
jae
fld
adc
adc
loop
inc
add
jnp
adc
or
sbb
push
mov
xchg
fadd
dec
inc
js
add
or
or
jns
jo
push
sar
xchg
lea
aas
jno
jge
mov
push
push
dec
xor
scas
inc
test
dec
outs
jle
cmp
add
and
add
mov
pop
loopne
push
test
jnp
dec
cmp
sbb
hlt
mov
inc
mov
call
movs
and
lock
fstp
fld
mov
adc
fcomp
nop
fadd
nop
aaa
jmp
sbb
cwde
movs
mov
sbb
jbe
add
or
cmp
adc
adc
cmp
movs
sbb
ins
push
push
scas
push
outs
jmp
xchg
mov
call
es
pop
pop
mov
xor
popa
test
mov
ins
or
loopne
add
(bad)
ins
je
outs
sbb
xor
ja
or
sbb
and
pusha
ins
adc
adc
or
inc
bound
push
pop
push
inc
arpl
ss
dec
dec
adc
mov
bswap
adc
sbb
dec
or
mov
jl
jo
stos
pusha
jge
pop
js
sahf
jl
call
xchg
imul
mov
aam
cmp
cmps
adc
add
or
inc
popf
add
fild
sub
xor
arpl
imul
retf
pop
pop
sub
shl
add
daa
push
cmp
jo
pop
dec
add
ins
push
add
test
mov
pop
movs
xlat
inc
test
xchg
scas
(bad)
sub
adc
dec
adc
inc
sbb
fdivr
cmp
lahf
dec
ja
outs
cld
cs
es
das
mov
nop
(bad)
mov
inc
lahf
jl
inc
es
in
aad
add
add
adc
in
xchg
adc
jmp
dec
push
dec
inc
dec
dec
pop
aas
shl
outs
les
js
jle
dec
dec
mov
loop
clc
icebp
push
inc
das
or
and
clc
jg
pop
pop
or
jl
and
dec
and
cmp
jg
add
sahf
dec
inc
outs
xchg
add
call
imul
mov
sub
sbb
and
add
inc
ins
or
push
lds
sub
and
int
inc
nop
mov
add
and
hlt
pop
xor
pop
lea
xchg
mov
pop
add
cmp
adc
push
iret
adc
fadd
in
add
dec
hlt
or
mov
push
add
and
movaps
push
enter
sub
inc
loope
cmp
rol
test
loopne
jecxz
add
add
cmp
push
gs
and
dec
cwde
sbb
popa
ins
inc
nop
or
mov
mov
mov
push
repnz
sub
sub
call
add
inc
jbe
xchg
fcom
add
fcmovb
mov
push
push
js
or
outs
clc
jg
add
mov
add
cmp
outs
dec
or
(bad)
fsubr
sbb
inc
add
out
pop
(bad)
outs
add
jl
out
add
cwde
fsub
add
les
cmp
mov
xchg
js
out
or
(bad)
out
movlps
adc
shr
mov
test
inc
mov
sbb
xchg
dec
or
mov
ins
pop
mov
inc
fcomp
imul
test
loop
jmp
shl
xchg
pop
inc
mov
push
aaa
inc
mov
dec
pop
and
xchg
cmp
int3
rol
mov
add
div
mov
aas
push
cmp
imul
inc
mov
jne
mov
or
jne
push
or
inc
xlat
(bad)
xchg
fsub
(bad)
test
rol
xchg
pop
sub
adc
rol
les
(bad)
mov
aam
loop
mov
cli
scas
aaa
(bad)
dec
lea
repnz
xchg
scas
sbb
push
sbb
loopne
mov
cmps
inc
sbb
add
xchg
out
dec
push
sbb
lock
fild
je
cmp
push
sbb
loopne
dec
mov
aam
lea
cs
push
jmp
loopne
cmp
sbb
js
xor
fist
(bad)
mov
out
div
fcomp
rcl
add
xlat
push
cmp
pop
add
sub
stos
pop
mov
sbb
add
(bad)
add
(bad)
fidiv
sub
adc
outs
xor
nop
adc
outs
push
ss
aam
in
pop
add
adc
push
push
and
mov
inc
cmp
(bad)
mov
outs
xor
push
cmp
cs
inc
xor
push
mov
add
outs
into
jne
out
jge
xor
pop
dec
cmp
gs
or
or
add
xchg
inc
jbe
std
test
mov
push
call
xchg
hlt
retf
pop
mov
ja
add
and
je
ins
mov
fstp
adc
(bad)
ror
sub
dec
mov
inc
lds
pop
jae
lock
pop
jo
xor
add
ins
sub
sub
clc
sub
sub
pushf
fucomi
push
mov
jmp
lea
ja
or
retf
lods
cmp
jbe
sub
inc
push
push
mov
mov
je
dec
je
sub
or
jmp
mov
jmp
xchg
jle
add
clc
adc
pop
aaa
movzx
mov
ja
fwait
dec
jnp
jo
sbb
add
(bad)
push
adc
pop
add
add
add
mov
not
cwde
push
adc
sub
js
das
xchg
scas
popf
shr
call
pop
test
lea
(bad)
pop
push
bound
fbstp
xchg
fisubr
jbe
(bad)
push
or
pop
mov
jl
neg
int3
adc
add
sub
es
lods
hlt
or
sub
jo
mov
sub
and
mov
push
or
xchg
push
cmp
sub
pusha
push
push
mov
adc
aaa
sar
pusha
mov
pusha
jno
add
lahf
add
pop
outs
loop
jns
mov
jg
outs
mov
and
mov
rcr
or
enter
and
test
xlat
lahf
push
or
or
pusha
lea
movs
pop
cmps
push
sub
out
js
xor
out
pause
dec
cmp
add
cmps
push
clc
sbb
imul
ins
sub
sbb
clc
adc
sbb
sub
mov
mov
stc
and
cmp
or
loopne
sbb
jmp
test
mov
and
xor
pop
push
push
dec
ja
pop
and
out
popa
ins
pop
sbb
adc
jmp
jo
pusha
inc
mov
nop
and
mov
daa
jge
arpl
mov
sbb
pop
clc
pop
inc
cli
test
sub
outs
inc
lock
into
xchg
imul
sahf
ret
jae
into
push
jp
jg
lock
dec
neg
push
lea
rcl
sbb
dec
stos
lds
mov
rol
bound
jb
sub
or
push
mov
push
jnp
add
sub
and
in
imul
mov
mov
jg
sub
rol
sbb
or
and
push
aas
stos
dec
sbb
jns
dec
or
xchg
sbb
mov
aaa
(bad)
stc
clc
pop
fstp
adc
jno
data16
lea
ins
jnp
dec
nop
mov
xchg
lock
add
or
shl
xor
adc
jne
into
push
push
and
push
sub
std
cmps
mov
mov
lock
hlt
test
mov
jmp
mov
hlt
pushf
imul
popa
daa
jle
xchg
outs
or
adc
mov
outs
mov
int
xchg
popa
and
retf
dec
jo
gs
das
pop
inc
daa
jl
push
cmp
bound
jne
imul
arpl
dec
add
scas
pop
jo
inc
pop
pop
add
add
cmp
je
test
dec
outs
or
sub
lock
je
into
sub
call
fcomp
xor
sub
push
adc
and
sub
sub
retf
test
xchg
jp
push
or
push
pop
ja
js
pop
je
fcmovnb
add
or
mov
mov
adc
rcr
or
push
je
stos
rcr
inc
cld
addr16
add
xor
bound
mov
or
push
pusha
jmp
push
dec
xchg
dec
das
rol
iret
add
add
sbb
add
cs
call
mov
ret
sbb
mov
outs
add
sub
fistp
retf
popa
pop
or
xor
movs
xchg
add
leave
mov
dec
mov
push
mov
cs
add
cmp
call
xor
test
scas
cmp
ins
add
mov
movzx
ins
rcl
mov
jbe
jae
nop
add
push
ds
jo
pop
add
mov
jbe
push
mov
push
cld
cmp
ret
mov
sub
in
xchg
mov
int3
push
mov
out
dec
stos
jb
mov
call
and
mov
mov
sbb
jns
jmp
popa
and
and
out
cmp
aam
xor
add
loop
inc
and
push
or
aaa
xor
mov
lea
(bad)
iret
rcr
paddw
(bad)
ffreep
(bad)
pandn
sbb
sbb
sbb
outs
(bad)
xor
push
push
sbb
inc
out
add
or
xor
sar
or
fcomp
in
(bad)
pusha
imul
mov
daa
inc
add
xor
sub
mov
cmp
cmp
pop
add
pop
movs
xchg
pop
outs
gs
adc
loope
ds
add
xchg
inc
enter
(bad)
jmp
xchg
pop
imul
fld
aas
and
and
cmp
dec
fld
or
inc
or
add
pop
mov
and
fcom
and
js
fadd
sbb
shr
inc
and
inc
xor
std
push
lock
shl
fild
fist
pusha
sbb
and
cmps
aaa
add
mov
maxps
(bad)
jg
ja
iret
repz
aad
ss
repnz
das
cmp
je
imul
and
cmp
sbb
inc
push
dec
push
and
(bad)
pop
popa
mov
mov
and
in
cmp
and
cld
add
sub
dec
adc
int
and
in
xchg
jnp
xchg
xchg
rol
fdiv
and
sbb
add
int
mov
je
add
pop
je
xlat
mov
ret
adc
ret
add
jg
push
mov
in
adc
fiadd
jecxz
push
push
mov
push
adc
cmp
mov
sub
daa
pop
pop
test
add
sub
pop
mov
(bad)
and
leave
and
imul
repz
adc
add
ins
imul
xchg
xchg
movs
stos
pop
or
fiadd
out
xor
sti
cmp
test
repnz
adc
jns
(bad)
call
or
xor
inc
adc
inc
aas
push
lds
ret
das
je
pop
icebp
lahf
mov
add
push
cmp
jb
mov
mov
inc
inc
repz
lea
lock
jo
pop
push
and
push
and
jnp
ins
or
pop
mov
mov
add
mov
sbb
add
add
mov
mov
and
pop
push
(bad)
nop
rcl
mov
mov
addr16
bound
fst
mov
or
movs
sub
ret
ret
sete
mov
xor
or
aaa
add
xchg
pop
aaa
add
mov
push
stos
adc
add
and
push
jg
add
inc
push
(bad)
lock
inc
pop
adc
mov
jb
dec
je
dec
jmp
shl
lods
or
aam
mov
in
aaa
add
inc
mov
xor
jecxz
mov
aam
arpl
cmps
pop
jb
pxor
movs
mov
adc
push
sbb
rcr
ja
cmp
aaa
enter
data16
jp
mov
(bad)
(bad)
shl
rcl
adc
adc
push
add
add
mov
mov
and
out
sub
push
mov
adc
ins
pop
xor
add
hlt
jne
daa
and
inc
sub
and
pusha
pushf
xor
je
jmp
mov
mov
mov
sbb
popa
sbb
adc
jnp
mov
adc
rcr
add
loopne
je
dec
std
sub
push
xor
gs
outs
inc
mov
or
pop
mov
xchg
and
ins
test
adc
sbb
in
rcl
xchg
jmp
adc
push
cs
iret
cmp
rcr
rol
repz
add
fadd
push
inc
outs
loope
je
fadd
cmps
loopne
std
test
adc
sbb
push
pop
dec
and
pop
and
xchg
add
and
arpl
mov
out
and
xchg
inc
shr
loopne
(bad)
adc
ret
or
loopne
ror
popf
sbb
sub
sbb
outs
rcr
repnz
ins
clc
leave
or
cwde
inc
in
and
sbb
sahf
test
ret
xchg
adc
lds
jno
inc
mov
or
in
and
xor
mov
rcl
add
inc
shl
pop
out
imul
sub
or
cmp
aas
jp
jmp
je
and
xor
or
mov
jmp
adc
imul
push
rcl
adc
pop
mov
test
(bad)
out
mov
lods
fiadd
jne
xor
aam
clc
mov
idiv
add
mov
rol
push
mov
xchg
add
or
mov
std
invd
add
sub
xor
loopne
out
dec
jnp
js
or
sbb
mul
(bad)
xor
cmps
imul
jne
and
inc
push
fdiv
aam
aam
xor
stos
xor
dec
xor
mov
and
rol
sbb
sti
mov
and
xor
add
xchg
cmps
imul
shl
rol
inc
fwait
pop
stos
mov
and
in
mov
mov
sub
cmp
xor
pop
movs
adc
push
clc
jmp
fs
repz
mov
iret
repz
or
add
outs
fsub
xchg
lea
repnz
or
dec
push
adc
xchg
(bad)
sbb
xchg
or
call
mov
and
cmps
add
adc
pusha
xor
(bad)
fist
or
xor
(bad)
call
jmp
add
xchg
cmps
call
out
add
ror
int3
pop
add
add
scas
int
and
add
xchg
dec
pop
xor
sub
push
in
imul
leave
jbe
mov
imul
mov
test
adc
movs
and
test
cmp
mov
(bad)
dec
push
mov
and
xchg
sar
jns
es
and
in
fwait
pop
mov
mov
mov
pop
dec
inc
in
test
test
cwde
(bad)
ja
out
inc
pop
pop
mov
mov
out
sahf
stos
lahf
xchg
mov
je
out
imul
inc
shl
sbb
pop
or
or
outs
(bad)
sbb
adc
push
pop
aaa
in
out
pop
add
add
mov
add
add
cld
xor
stos
adc
adc
shr
or
add
call
xchg
outs
add
mov
jnp
ins
or
or
xor
mov
jne
sub
xor
pop
imul
xchg
out
je
jo
or
mov
out
ins
ins
pop
adc
imul
xchg
ins
adc
or
pop
call
add
sbb
and
pusha
xor
pop
daa
pop
dec
sub
(bad)
pop
push
mov
xor
sti
push
sbb
daa
push
pop
sbb
sub
push
adc
cmp
pop
ja
xor
fistp
mov
push
adc
(bad)
pop
add
and
fdiv
mov
int
sub
dec
pop
arpl
or
mov
or
inc
js
mov
sbb
inc
add
inc
gs
jl
mov
jae
jl
add
cmp
push
js
or
mov
dec
jae
gs
adc
mov
adc
add
and
sub
stos
pop
cmp
jle
mov
scas
add
ret
push
popa
retf
and
sar
cmps
mov
test
push
inc
shr
pusha
add
adc
jbe
add
pop
fs
pop
sub
or
adc
sub
mov
adc
dec
add
push
ja
and
mov
cmp
ins
je
outs
fs
pop
fs
js
pop
inc
sti
push
cmp
inc
ins
bound
push
or
jmp
add
cmps
das
sbb
pop
test
fiadd
add
test
mov
imul
setle
cmp
sbb
test
popa
cwde
pushf
mov
add
push
mov
pop
repnz
adc
clc
movs
pop
loop
sub
sub
nop
(bad)
cwde
fcomp
stos
movups
scas
mov
or
loope
inc
add
popa
and
nop
lods
or
inc
or
es
add
lds
aas
iret
push
outs
push
outs
imul
fimul
push
mov
push
(bad)
sub
ss
test
loopne
mov
ret
jae
ins
scas
sub
(bad)
pusha
inc
repz
inc
popa
add
add
clc
lahf
and
gs
inc
and
sbb
push
mov
sbb
add
adc
sub
fwait
inc
adc
test
add
aas
add
jmp
jae
lods
add
add
das
inc
test
pop
ja
add
adc
lods
push
iret
pop
test
mov
pop
add
enter
pop
ins
or
ret
or
cmp
cmp
add
outs
mov
movs
pop
dec
inc
or
jne
pop
add
dec
or
aas
data16
add
pop
int3
mov
cmp
or
rcl
add
push
or
push
inc
add
jg
dec
cli
das
or
lea
jl
push
jp
pop
xor
jo
pop
inc
inc
lds
inc
outs
shufps
add
and
idiv
mov
inc
xchg
and
stc
sub
lock
mov
lods
dec
cli
out
cmc
dec
cdq
add
adc
nop
pop
xor
dec
fdivr
mov
or
push
ins
rol
out
mov
ret
aas
test
jge
neg
adc
neg
or
dec
dec
out
adc
xchg
call
loopne
or
cwde
popf
jo
inc
pop
and
push
add
mov
sbb
aam
lock
enter
push
mov
retf
and
add
faddp
pop
js
fstp
je
cmp
pop
and
popa
inc
cmp
dec
adc
call
and
mov
xor
xchg
or
push
clc
jecxz
push
adc
leave
cmp
aaa
and
mov
mov
sbb
sbb
int
push
dec
pop
add
dec
hlt
cmp
pop
outs
loopne
xor
ds
hlt
fwait
pop
sub
inc
lock
hlt
fcompp
xchg
or
push
xchg
mov
ret
adc
cmp
fsubr
fst
pushf
mov
repnz
je
jp
push
jno
push
xor
fwait
add
sbb
sub
adc
or
add
jecxz
add
fdiv
inc
push
push
dec
enter
jg
sub
movs
add
repz
sbb
and
ins
sub
retf
or
push
push
add
mov
add
shr
or
sub
add
or
pusha
rcr
ins
jns
add
pop
inc
fsubr
adc
cmp
pop
or
sbb
frstor
mov
inc
adc
fcom
cmp
push
(bad)
push
sub
add
or
add
push
pusha
ins
and
and
add
aam
pop
loopne
lock
popa
arpl
mov
test
add
pop
add
repnz
icebp
mov
fidiv
fs
(bad)
add
aam
sbb
push
jecxz
mov
fcom
outs
pop
ins
adc
lock
(bad)
jns
shl
mov
cdq
add
fisubr
cmp
push
sbb
sub
lea
rol
add
mov
shl
xor
(bad)
add
jmp
and
jbe
repz
int3
inc
or
inc
add
mov
pop
mov
shr
mov
cmp
mov
adc
outs
mov
pop
les
shl
mov
or
add
push
fld
mov
stos
mov
inc
add
pop
mov
iret
pop
sbb
mov
mov
dec
sti
and
mov
xor
add
jo
test
addr16
mov
mov
mov
sbb
sbb
and
rcl
pop
call
add
add
mov
aas
cmp
xor
cmp
mov
dec
xor
sub
pop
inc
adc
push
push
mov
lea
mov
jo
out
inc
cmp
dec
aas
stc
data16
mov
dec
pop
add
add
xor
add
add
adc
(bad)
sbb
add
push
das
fadd
and
mov
pop
mov
add
and
and
mov
mov
cmps
mov
fs
or
lahf
jns
sbb
add
bound
mov
add
fbstp
scas
in
mov
in
fnstcw
popf
xchg
mov
ret
inc
add
and
or
and
cmp
or
or
sbb
sub
lock
outs
mov
add
std
(bad)
lock
push
adc
not
or
add
mov
pop
fcomp
test
xchg
jo
mov
sbb
nop
cmp
sub
loopne
aam
aas
add
pop
pop
lea
add
popa
sbb
sbb
popw
lods
das
ret
xchg
stos
out
adc
mov
jo
mov
adc
add
pop
jb
pop
cmp
test
in
mov
dec
inc
in
mov
ret
inc
mov
daa
xchg
dec
loopne
ja
mov
bound
sbb
pop
or
and
dec
push
in
push
inc
add
fs
jmp
shl
adc
add
mov
mov
adc
xor
movs
ret
mov
jmp
shl
jae
ror
adc
inc
jmp
ret
jo
add
cmps
pop
retf
add
jg
jns
xchg
bts
or
rcr
sub
stos
clc
mov
mov
push
pop
add
das
cmp
shr
jae
ret
xchg
mov
rcl
xchg
dec
sub
add
sbb
rol
stos
out
jmp
jns
shr
rol
and
out
xlat
cmp
xchg
sub
xchg
adc
push
jnp
push
call
call
xor
inc
(bad)
cwde
mov
xchg
or
rol
in
inc
aas
sbb
pop
mov
pop
(bad)
sar
sbb
sbb
in
push
shr
ret
mov
xchg
aad
shl
lds
dec
or
sub
add
xlat
les
or
and
jne
das
je
in
daa
pop
ret
xlat
mov
ret
mov
cdq
adc
stos
inc
sbb
in
adc
or
and
ret
or
fcomip
rcl
sbb
and
sbb
(bad)
push
mov
xchg
push
jmp
lds
shr
les
shr
cpuid
pop
push
in
je
dec
push
test
dec
xor
inc
add
hlt
imul
pop
inc
push
add
pusha
push
loope
sub
and
test
movs
in
add
cmps
pop
or
sub
mov
in
push
aam
mov
loopne
scas
lock
retf
das
jmp
imul
sub
in
cmp
add
jge
or
lea
pop
fsubr
and
(bad)
pop
adc
cmp
xchg
(bad)
and
(bad)
and
add
(bad)
loopne
(bad)
push
sub
out
fist
add
rol
outs
enter
or
in
and
dec
ins
mov
leave
xchg
jl
les
mov
imul
xchg
sub
dec
or
jle
mov
(bad)
leave
mov
sbb
sar
mov
push
outs
cmp
cmps
pop
sbb
icebp
(bad)
call
xchg
mov
mov
retf
mov
push
and
sub
in
cmp
fisubr
mov
dec
sbb
sub
out
push
lods
call
and
sub
inc
outs
jl
sbb
test
or
adc
xor
sbb
mov
pop
outs
popa
imul
or
pop
inc
push
ja
jae
fadd
or
mov
test
and
(bad)
div
mov
xor
sub
test
pop
pop
xor
sub
inc
popa
popf
call
add
int3
xchg
or
cmp
cmp
sbb
retf
sub
into
ror
jns
jb
hlt
sbb
inc
mov
cmp
sar
cmps
push
add
push
(bad)
retf
inc
and
pop
push
(bad)
dec
cmp
and
leave
ror
pop
or
push
add
jno
mov
or
stos
or
inc
out
jecxz
test
or
or
lods
adc
sbb
inc
ins
or
sbb
scas
jae
mov
cmp
add
ss
or
jo
mov
inc
add
rol
cmp
add
add
add
or
add
pop
adc
or
test
cmps
sar
jge
test
mov
sub
out
adc
mov
or
add
push
jb
and
sbb
jae
push
jmp
ss
data16
inc
gs
inc
mov
add
and
(bad)
shl
sub
dec
xchg
dec
sti
inc
add
sbb
rcl
cdq
inc
ret
mov
and
cmp
outs
xchg
mov
out
xor
push
mov
inc
adc
add
out
fnstcw
pop
mov
push
lds
jbe
pop
push
addr16
or
sbb
cmp
or
cs
mov
pushf
ins
mov
sub
or
add
add
mov
or
push
mov
mov
ret
add
jno
mov
push
add
or
or
movs
xchg
imul
loopne
inc
cwde
or
mov
aam
es
test
out
das
and
cmp
retf
arpl
push
mov
ret
adc
out
mov
outs
rol
jns
jmp
wbinvd
aam
add
add
movs
test
dec
fsubr
rcl
dec
and
adc
pop
std
pop
adc
adc
inc
loope
add
add
arpl
xor
scas
mov
pop
shl
ja
and
or
adc
push
fdivrp
movs
mov
push
adc
lea
push
(bad)
cmp
jg
shl
push
add
daa
fcom
lea
aaa
and
dec
jnp
fisttp
movs
push
add
mov
sahf
mov
(bad)
call
adc
add
in
jo
xchg
or
mov
xlat
cwde
mov
cs
add
adc
or
das
(bad)
lea
xchg
cs
add
test
lock
sub
or
mov
cld
and
les
add
inc
mov
sbb
movs
stc
ss
pusha
xchg
aaa
or
(bad)
mov
fcom
inc
sub
sub
rcl
mov
cmp
mov
add
mov
enter
lods
mov
sbb
adc
or
sub
xchg
rcl
ins
mov
xlat
clc
push
sbb
aam
jb
or
or
and
dec
mov
cmp
and
icebp
add
push
push
test
dec
mov
(bad)
in
dec
bound
or
cmp
inc
inc
dec
clc
inc
xlat
(bad)
jle
and
inc
add
call
aaa
mov
js
mov
xor
cmp
rcl
popf
inc
hlt
jmp
add
test
xchg
mov
inc
in
and
mov
cwde
lock
cli
sbb
jo
cmp
jae
jo
sbb
add
inc
adc
ror
xor
ret
add
add
mov
es
sbb
sub
loopne
lahf
dec
xor
jmp
mov
jbe
fcomp
or
sub
out
jecxz
test
rcl
aam
mov
add
pop
or
sub
dec
(bad)
in
inc
fiadd
rol
xchg
scas
rol
cmp
mov
jne
add
ret
ja
pusha
sbb
in
mov
dec
pusha
cmp
cwde
lock
fucomp
inc
leave
cmp
adc
pushf
test
ret
sub
repnz
lods
add
add
mov
adc
js
xchg
inc
fmul
je
push
jg
adc
cmp
push
daa
loopne
pop
cmp
outs
adc
iret
adc
rol
aam
sub
mov
loopne
push
or
test
pusha
test
xor
dec
push
ret
js
pop
cli
mov
push
push
push
dec
sbb
iret
dec
push
cs
inc
std
out
sti
dec
cmps
(bad)
int3
fstp
and
sahf
js
(bad)
movs
pusha
pop
das
fist
or
mov
fadd
inc
jbe
pushf
inc
dec
xchg
jmp
add
imul
cdq
mov
jae
loope
test
and
and
inc
sub
movs
add
movs
push
pop
push
dec
(bad)
xlat
sub
jo
stos
inc
cmp
and
popf
cmp
inc
aaa
call
cmp
push
jecxz
(bad)
pop
mov
fs
inc
popa
pop
shl
(bad)
xchg
jmp
sub
dec
and
(bad)
or
push
and
inc
sbb
push
sbb
add
mov
aaa
dec
sub
sbb
jmp
sbb
les
and
xchg
idiv
fs
mov
jo
inc
cmp
sti
xor
das
inc
pop
sub
popa
sub
retf
imul
in
inc
retf
sbb
inc
add
ins
add
jae
or
cmp
es
adc
(bad)
retf
cmp
lock
mov
add
nop
pause
pop
or
cmp
out
retf
mov
mov
jo
sbb
rcl
add
or
std
or
cld
js
enter
mov
xchg
arpl
fwait
test
sub
pop
inc
cmc
inc
retf
scas
cmp
cmp
xchg
loopne
out
adc
out
rcl
xchg
or
cld
adc
loopne
inc
clc
inc
add
je
cld
repnz
popa
xchg
cmp
pop
daa
call
dec
inc
add
add
es
aas
into
adc
inc
call
xchg
fimul
dec
clc
popf
xor
sbb
fisub
sbb
call
test
push
add
popf
loope
inc
xchg
outs
or
add
je
rol
mov
adc
or
inc
jno
clc
cmp
imul
cdq
mov
mov
mov
test
test
shr
jne
jge
add
add
mov
push
xchg
pop
inc
dec
jl
push
lods
nop
dec
lds
cmp
jge
test
adc
or
or
or
test
adc
inc
sti
mov
or
inc
jle
or
and
cld
push
mov
shr
or
and
pop
loopne
in
pop
arpl
fmul
mov
jbe
dec
add
xor
inc
stc
mov
mov
mov
fs
add
das
add
inc
pop
push
daa
inc
dec
ja
push
dec
pop
cs
ss
and
dec
or
jo
add
enter
or
fcmove
jle
mov
or
pop
sub
push
fisttp
push
push
(bad)
cmp
add
push
inc
movs
cmp
clc
push
(bad)
mov
(bad)
or
mov
cmp
lahf
loop
je
xchg
add
adc
xchg
or
xor
int
test
mov
and
das
dec
dec
dec
mov
addr16
xor
inc
inc
adc
je
add
mov
adc
test
adc
pop
sub
arpl
push
and
add
xor
add
mov
jns
inc
or
xor
pushf
xchg
(bad)
call
test
sub
sbb
or
clc
mov
jmp
popa
jnp
inc
add
mov
mov
push
fadd
shr
rol
ror
push
mov
je
xchg
or
push
mov
icebp
mov
add
push
and
and
and
add
add
add
imul
push
sbb
jmp
sub
push
inc
loope
loop
inc
push
sbb
(bad)
xor
xor
xchg
retf
in
in
pushf
arpl
and
pop
cmp
and
cmp
fcom
or
pop
jmp
cmc
cmp
adc
mov
xchg
mov
sar
add
or
mov
sub
xorps
fwait
in
push
mov
mov
je
pop
and
pop
aam
jl
push
add
jl
xchg
mov
mov
mov
cmps
lock
lea
xchg
add
add
sub
loope
pop
arpl
dec
push
clc
fwait
shl
shr
sub
push
sbb
inc
adc
mov
xchg
cmp
sub
or
add
xor
cmp
mov
pop
(bad)
aad
enter
retf
sbb
dec
fisttp
push
add
sbb
inc
pop
add
push
adc
sti
pusha
adc
or
xchg
add
mov
pop
jecxz
adc
sub
and
dec
and
inc
inc
mov
not
add
xor
push
jne
das
adc
xor
inc
or
scas
loopne
in
inc
test
pop
clc
and
fdivr
mov
bound
jo
fdivr
and
or
or
aad
test
nop
cli
or
clc
inc
xor
int3
mul
add
ins
ja
push
mov
adc
jne
push
je
add
adc
push
clc
dec
(bad)
shr
popa
pop
fisttp
or
inc
inc
dec
sub
xchg
lods
enter
push
mov
sbb
inc
cwde
ret
fist
push
or
loop
cwde
inc
fld
mov
pusha
or
pop
aad
nop
das
push
sbb
nop
and
push
and
pushf
and
xor
test
add
or
xor
mov
cmp
ret
push
push
add
nop
pop
cmp
aam
iret
(bad)
lds
adc
add
test
push
jl
xlat
cwde
scas
sub
mov
fstp
rcl
icebp
scas
inc
pop
sar
adc
cdq
sub
aad
bound
clc
sbb
pop
xor
or
in
es
bound
not
mov
jne
push
call
aam
mov
pop
mov
push
in
ret
jmp
push
jmp
out
retf
dec
jg
push
js
dec
sub
inc
mov
sbb
pop
cmc
mov
ret
push
stos
pop
pop
or
ret
inc
push
(bad)
mov
cs
call
sbb
icebp
pop
xchg
mov
imul
loope
mov
inc
adc
jmp
mov
popf
or
xor
loopne
and
test
jne
xor
mov
inc
add
sbb
jnp
and
(bad)
(bad)
fisttp
jle
lock
sbb
out
sbb
inc
adc
mov
jo
cmp
xchg
adc
or
dec
adc
pop
inc
sbb
pop
jle
mov
sbb
es
or
cmp
add
aaa
hlt
test
out
stc
push
jmp
retf
or
inc
mov
jmp
arpl
out
pop
dec
sub
hlt
hlt
or
push
adc
push
jmp
popa
jge
ffree
nop
aad
ja
shl
mov
mov
xbegin
sbb
sub
mov
push
xrelease
inc
add
pand
(bad)
adc
inc
rol
sbb
(bad)
jmp
push
add
and
jg
dec
out
pushf
adc
fisttp
inc
jg
int3
(bad)
in
(bad)
pop
pop
(bad)
in
fadd
cmp
jmp
adc
mov
cwde
fdivr
mov
nop
(bad)
jecxz
in
pusha
push
jmp
leave
add
add
in
xor
mov
nop
adc
jns
add
(bad)
fstp
push
jb
je
nop
jb
into
cmp
cmp
frstor
push
lea
lods
or
pop
or
or
push
and
sub
add
shl
outs
jb
test
sahf
inc
pop
add
adc
push
sahf
fst
push
push
and
adc
jmp
adc
mov
cmps
pop
and
pop
sub
and
arpl
mov
mov
and
addr16
adc
mov
jne
dec
add
push
add
add
mov
xlat
xchg
xchg
icebp
dec
test
icebp
adc
div
loope
xor
outs
imul
cmp
adc
scas
pop
aam
ret
add
push
inc
jo
and
mov
add
jo
dec
or
retf
lock
loopne
add
fdivr
adc
xor
(bad)
jns
push
sti
das
xchg
in
cmp
jle
(bad)
mov
inc
sub
daa
loop
mov
and
shl
mov
aas
sbb
ror
fsub
sbb
add
mov
push
arpl
pop
inc
add
inc
fucomip
lsl
adc
xchg
sbb
icebp
or
adc
rol
inc
or
inc
fisttp
inc
mov
xor
push
ror
and
(bad)
xlat
cmps
retf
adc
pop
adc
xchg
adc
mov
push
or
enter
adc
push
dec
loop
icebp
test
mov
repnz
xor
sbb
cwde
(bad)
xchg
sbb
adc
sbb
mov
push
repnz
push
add
movnti
xchg
xchg
cwde
loope
adc
inc
std
in
icebp
or
mov
mov
mov
add
push
into
dec
call
inc
or
add
popw
fistp
adc
adc
repz
xchg
push
push
xor
jl
and
ret
mov
jg
push
test
daa
adc
clc
test
mov
push
stos
inc
rcr
rcl
fdivr
mov
dec
sar
movs
push
or
push
adc
sahf
cmp
cli
push
push
mov
call
or
mov
push
in
dec
add
sahf
add
add
adc
sahf
jp
mov
sub
sbb
jo
mov
ret
sub
lock
mov
icebp
jnp
frstor
sub
xchg
inc
loope
imul
mov
sub
mov
sub
mov
mov
mov
or
fisttp
fist
lock
into
fdivr
in
ins
imul
jmp
mov
in
adc
add
enter
lods
scas
xchg
fcom
movs
jg
inc
sub
setg
mov
inc
fst
hlt
inc
xchg
mov
pop
ret
dec
repnz
movs
push
inc
jb
push
and
or
sbb
mov
xor
daa
and
sbb
shr
pop
jp
sub
adc
pop
or
push
adc
pushf
neg
xor
dec
sbb
call
out
and
shl
idiv
xor
neg
cmp
in
in
push
stos
inc
inc
je
jae
cmp
adc
clc
dec
enter
mov
js
or
loopne
xor
sbb
push
pop
inc
mov
add
dec
add
adc
and
out
jo
mov
cmp
and
stc
mov
scas
push
sbb
add
repz
mov
jmp
add
sbb
jmp
xchg
maxps
pop
fisttp
ror
pop
jne
cmp
pushf
mov
pop
cmovs
jmp
mov
jmp
ret
add
ret
nop
or
or
pop
dec
push
and
out
and
dec
sti
in
das
aaa
mov
sub
test
push
sti
pop
(bad)
add
push
and
sbb
add
test
sbb
add
enter
mov
scas
xchg
clc
inc
dec
int3
xor
repnz
arpl
clc
adc
or
jbe
mov
addr16
xchg
xor
and
int3
xor
jns
sub
add
jb
sbb
dec
jecxz
mov
pop
aas
sbb
outs
pop
test
or
jno
hlt
addr16
push
bswap
js
imul
sub
xor
ror
div
rol
add
mov
and
movs
add
js
jp
jnp
or
aam
or
aas
pop
fcom
jae
mov
pusha
xor
out
pop
dec
fild
sbb
or
rcr
sbb
dec
aam
mov
aam
or
gs
sbb
es
scas
stc
add
jb
mov
add
cmp
(bad)
aam
add
maxps
ss
jno
mov
cmp
and
inc
cmp
cli
neg
das
ins
add
mov
mov
test
ja
fmul
dec
mov
inc
and
hlt
xchg
jno
xchg
add
xchg
push
les
sub
ds
jge
inc
fs
test
pusha
add
and
hlt
ins
adc
loope
cmps
pop
(bad)
daa
pusha
test
test
pop
hlt
push
div
cmps
jecxz
add
pop
push
nop
push
jb
push
add
enter
xlat
push
push
xor
inc
rol
stos
jb
mov
sbb
mov
pop
je
pop
xor
inc
and
dec
(bad)
movs
outs
jae
xor
add
add
push
loope
seta
and
xchg
clc
push
cmp
cdq
popf
adc
pop
(bad)
jne
pushf
mov
cmc
pop
or
dec
inc
sahf
pushf
fmul
and
loope
or
xchg
daa
daa
daa
lods
in
or
jnp
(bad)
and
pop
or
shld
pop
add
movs
inc
inc
push
mov
mov
add
mov
or
daa
fs
add
cmp
and
mov
mov
or
or
adc
rol
stos
repnz
in
mov
nop
lds
adc
xor
inc
pop
xchg
mov
cmp
inc
ja
ja
test
inc
xor
stos
jae
pop
and
push
sbb
je
adc
pop
fld
lea
je
xor
sub
daa
dec
pop
lea
jbe
imul
or
push
inc
imul
or
push
inc
and
jg
push
and
add
dec
or
inc
sti
dec
or
sbb
push
mov
orps
rdtsc
sti
mov
add
add
outs
jbe
inc
loopne
inc
or
popf
arpl
rol
or
aaa
mov
sub
jae
jp
mov
xchg
and
pop
aam
add
mov
xor
xor
ds
xor
pop
ss
xchg
dec
cbw
add
cmp
adc
xor
mov
push
cmp
inc
push
outs
jb
jecxz
push
pusha
inc
jge
dec
clc
or
push
mov
xchg
dec
or
daa
jns
xor
cwde
scas
and
and
mov
test
dec
or
dec
or
adc
call
xchg
aaa
mov
stos
sub
lock
xlat
sub
mov
test
push
inc
push
mov
add
push
mov
stos
outs
push
fsub
cmp
lahf
ror
jle
and
and
or
cld
out
or
mov
sub
inc
sub
sub
xchg
out
lods
(bad)
aam
or
ror
movs
xor
dec
scas
or
push
imul
push
add
mov
lahf
sbb
push
sbb
xchg
imul
cmp
adc
hlt
es
mov
in
pop
adc
xor
push
push
push
stc
(bad)
push
sbb
adc
mov
add
stc
jmp
adc
push
sbb
mov
push
ins
add
pop
les
pop
cmp
adc
inc
test
jns
adc
je
sbb
mov
sbb
scas
and
mov
sub
in
imul
xchg
xor
ja
push
inc
test
inc
ja
inc
popa
sub
ja
lds
in
ja
mov
or
in
push
jl
or
adc
adc
xchg
xchg
xchg
xchg
cs
jmp
adc
fs
push
dec
or
jb
repnz
cmp
jns
jb
out
sub
dec
or
stos
repz
sbb
rcr
pop
fcomp
cmp
packuswb
sbb
ror
cwde
es
imul
push
sbb
add
cmp
and
add
in
jmp
push
cmp
inc
add
or
int3
adc
mov
push
jmp
mov
(bad)
push
sbb
sub
push
mov
mov
daa
or
mov
not
test
ss
imul
push
inc
and
rcl
pusha
sub
and
inc
push
and
or
and
or
push
mov
shr
xchg
push
sbb
shr
cmps
add
or
cmps
cmp
pop
in
sbb
stc
dec
cmp
add
stc
cmps
mov
xchg
inc
mov
mov
rcr
xor
pop
xchg
je
and
shl
pop
add
es
mov
add
add
or
ldmxcsr
retf
add
mov
jb
cmc
sbb
add
jo
push
push
jno
js
ja
xor
inc
loop
push
int3
shr
add
add
cmp
cmps
mov
sti
fiadd
push
loopne
or
cmp
sbb
mov
(bad)
xlat
test
hlt
xor
arpl
or
cmp
sbb
sbb
in
test
sbb
or
ins
add
inc
stos
add
or
sub
pop
inc
daa
mov
xor
lock
loop
push
mov
fimul
add
fnstenv
das
dec
and
lds
daa
add
inc
(bad)
cli
inc
push
cmps
js
cli
mul
cli
pop
and
leave
test
inc
leave
mov
and
test
sbb
sbb
fistp
and
mov
xor
cmp
das
pinsrw
xchg
popf
jmp
and
xchg
daa
daa
mov
mov
xchg
xchg
xchg
mov
enter
jnp
mov
leave
leave
(bad)
std
inc
es
bswap
mov
cmp
pop
sub
test
ror
popa
inc
xor
xor
cli
call
jo
test
mov
test
movs
push
add
or
pop
leave
test
xor
xchg
cld
movs
popf
ror
or
mov
mov
movs
push
movs
adc
add
rcl
add
jp
sbb
fwait
bound
push
rol
pushf
pusha
push
mov
repnz
push
bound
push
repz
mov
dec
xchg
cmp
test
xor
and
adc
inc
movs
inc
ret
add
test
imul
imul
and
movs
test
test
sbb
add
jns
push
mov
pusha
rol
movs
add
inc
add
push
call
add
mov
mov
sub
popf
mov
test
movs
and
(bad)
rcl
outs
and
lds
push
xchg
adc
xchg
fsubr
xor
mov
or
sub
adc
stc
push
and
or
add
sbb
and
adc
dec
cmp
xor
push
mov
push
cmovne
dec
add
jns
pop
cmp
and
fldenv
neg
push
je
ja
sub
mov
daa
adc
inc
bts
and
cmps
aam
jle
out
les
pminsw
push
inc
dec
ins
(bad)
pop
push
sbb
rcl
inc
js
lods
lahf
add
test
sbb
aad
inc
or
add
sahf
or
xor
mov
dec
adc
sub
movs
mov
test
inc
or
and
push
sysret
inc
inc
je
enter
arpl
sub
mov
stos
jmp
sub
mov
leave
(bad)
rol
(bad)
add
sub
ficomp
mov
sub
push
popf
(bad)
jo
pop
js
setbe
jmp
fisttp
daa
or
or
sbb
cwde
add
jns
cmp
sub
sbb
push
push
dec
ins
cs
jns
call
hlt
and
push
call
pop
xor
pop
daa
inc
sbb
out
test
cmp
inc
mov
iret
lods
lea
and
cdq
popf
popf
mov
pop
dec
xor
data16
lahf
mov
jo
fimul
sbb
lahf
cmp
movs
push
sbb
push
and
sub
adc
sbb
xor
inc
outs
pop
add
std
inc
xor
adc
xor
adc
inc
xor
jg
pop
add
daa
xchg
cmp
cmps
pop
add
add
sar
aas
inc
add
xor
xor
push
and
pop
push
cs
push
xor
inc
(bad)
jl
cmc
push
inc
dec
and
call
dec
popa
ja
sub
mov
les
push
xor
and
(bad)
ss
test
nop
ja
mov
add
lea
aam
fsubr
adc
ret
pop
das
ins
xor
mov
clc
std
xchg
push
sub
call
xor
jl
add
int3
mov
dec
fdiv
ja
mov
xchg
xor
pop
add
mov
push
xor
stc
dec
and
xor
push
inc
dec
(bad)
fstp
add
jmp
loopne
stc
jge
fistp
gs
add
shr
paddusw
pop
nop
sub
xor
in
mov
add
add
rol
inc
hlt
in
lahf
jae
pop
ret
pop
jo
add
add
xchg
and
add
js
sar
xor
rcl
xor
in
push
and
adc
es
cmp
dec
cld
das
dec
sbb
push
add
mov
sub
ror
xchg
ret
(bad)
mov
sahf
inc
ss
(bad)
loopne
add
retf
mov
call
and
in
jo
shr
mov
jl
push
and
dec
add
call
jno
es
cmp
cdq
push
jmp
lea
or
lods
loopne
icebp
or
retf
cmp
or
mov
dec
xchg
push
dec
sbb
mov
ss
sbb
inc
ja
push
add
mov
pop
test
push
jnp
lods
sub
push
sbb
add
enter
cdq
dec
mov
movs
cmp
add
enter
mov
pop
test
inc
sub
(bad)
adc
shr
daa
or
fld
aaa
mov
daa
fisub
pop
sti
hlt
mov
lea
mov
pop
push
push
add
sub
dec
fcmovbe
(bad)
jle
data16
(bad)
jno
inc
mov
imul
adc
pop
cmp
sbb
scas
mov
cmp
test
mov
ret
and
enter
adc
popf
js
cdq
inc
loopne
xlat
add
arpl
mov
mov
adc
ret
adc
inc
dec
in
outs
shl
sbb
clc
(bad)
push
xor
(bad)
aad
hlt
pop
sub
mov
ins
dec
xor
adc
adc
push
imul
or
inc
pop
pop
push
test
bswap
ret
dec
cmp
add
and
pop
cmp
pop
push
sub
xor
cmp
sub
push
addr16
add
ds
test
sar
cmp
les
nop
xchg
adc
push
add
xlat
add
pop
mov
push
jl
stc
cmp
inc
add
(bad)
addr16
push
sub
(bad)
lds
mov
fidiv
sbb
cli
and
push
(bad)
loopne
xchg
je
pop
jmp
jne
xchg
push
mov
fcmovnbe
pop
clc
les
mov
xor
shl
clc
nop
inc
rol
rol
push
add
(bad)
xor
push
xchg
jmp
add
je
retf
cmp
cmp
and
add
pop
mov
adc
dec
cdq
add
xchg
dec
sbb
test
xchg
int3
adc
inc
or
(bad)
imul
cmps
push
stos
or
icebp
add
pop
add
push
repz
js
push
xchg
shr
or
inc
push
pop
test
mov
add
push
xor
test
adc
dec
repz
scas
push
dec
call
movs
inc
jle
add
in
aam
jne
mov
cmp
cdq
xor
mov
arpl
inc
scas
sbb
(bad)
sar
cld
cmp
aaa
lods
push
arpl
or
mov
sbb
jle
mov
adc
jne
jge
jmp
pop
jne
ss
pop
pop
fdivp
jle
xor
inc
cmp
adc
mov
add
or
cmps
loope
push
jns
or
add
icebp
add
sub
clc
add
push
in
add
cld
cmp
xor
and
add
pusha
mov
ds
add
xor
sbb
or
js
push
add
push
dec
add
mov
jno
or
xor
arpl
adc
mov
lods
mov
inc
lock
lock
in
mov
(bad)
push
inc
add
test
lock
mov
stos
cmp
clc
add
add
add
push
mov
lds
nop
sub
js
jbe
jmp
mov
inc
mov
cmp
mov
shr
jge
adc
dec
int3
xor
fstp
add
and
jo
stos
add
out
jae
add
(bad)
xor
mov
fmul
mov
xchg
mov
push
cmp
cmc
call
inc
and
idiv
inc
out
xchg
std
sbb
sbb
jl
xor
push
movs
test
add
mov
loope
bound
sub
and
dec
inc
ret
inc
pusha
aas
jnp
call
inc
into
xor
add
jne
xchg
js
out
je
add
xor
(bad)
fsub
sbb
jne
dec
jl
inc
dec
retf
add
mov
adc
xchg
inc
push
ror
mov
clc
imul
test
inc
mov
inc
sub
je
test
jnp
jg
add
loop
xor
ret
sub
ss
int3
mov
adc
retf
lahf
xor
icebp
imul
sbb
sbb
(bad)
pmulhuw
adc
pop
inc
mov
fs
cld
xor
pusha
cs
adc
xchg
push
mov
enter
out
cmp
sete
mov
daa
add
and
imul
es
fmul
rcl
add
(bad)
jmp
popa
xor
xchg
xchg
shr
loopne
loope
pusha
sub
dec
das
int3
add
pop
mov
sbb
add
dec
add
adc
sub
les
rcr
adc
cmp
and
lar
ds
inc
cmp
ins
jl
and
mov
cmps
mov
pop
inc
lahf
add
vmpsadbw
cmp
add
je
pop
fs
adc
pop
jo
mov
inc
aad
sbb
sbb
clc
mov
movs
or
mov
push
dec
out
inc
movhps
add
xor
js
cmp
fisttp
test
xor
cli
jns
shl
test
sbb
sub
sub
jbe
add
ins
xor
add
and
add
adc
inc
pusha
pushf
test
les
jp
xor
aad
push
out
pusha
ret
xchg
mov
inc
rcl
(bad)
fsubr
pop
sbb
loop
pop
fistp
or
dec
stos
adc
fdiv
mov
add
inc
rcl
ror
push
xchg
inc
outs
or
(bad)
jecxz
mov
in
imul
call
aas
retf
pop
dec
movs
cmps
stc
(bad)
das
cmp
inc
jge
mov
cld
je
mov
xchg
loope
push
in
adc
mov
leave
jl
pop
mov
adc
push
xor
lahf
lock
mov
push
movs
rcl
sbb
sub
jne
or
and
push
or
cli
stos
inc
retf
jne
mov
lea
mov
cld
ret
mov
ror
jmp
or
jae
xor
sub
push
ret
mov
and
cld
ret
fmul
adc
mov
mov
rol
cld
test
pop
push
nop
arpl
mov
loopne
cmp
xchg
and
adc
add
add
inc
inc
pop
pop
test
ror
bound
xor
leave
and
xor
add
mov
or
push
adc
add
push
mov
std
pop
inc
nop
jl
adc
inc
(bad)
adc
mov
pop
les
retf
lwpins
push
dec
mov
rol
xlat
pop
xor
daa
rcl
ret
dec
imul
arpl
or
pop
add
ret
mov
push
gs
add
or
ins
loope
shl
in
daa
inc
add
or
popa
js
cs
in
or
mov
or
mov
push
adc
adc
sub
sbb
add
or
ins
test
add
ja
add
pop
xor
adc
mov
jmp
imul
outs
or
push
pusha
outs
(bad)
mov
adc
popa
outs
sbb
test
inc
in
add
xchg
xor
cmp
jo
cmp
xlat
sub
fist
pop
inc
jl
jb
and
pop
dec
ins
xchg
mov
outs
fmul
pop
rcl
or
dec
das
add
and
ror
or
cmp
add
xlat
add
loop
add
inc
dec
add
sub
mov
sbb
add
sub
jp
push
fsub
sbb
adc
sub
dec
inc
xor
xchg
imul
lea
pop
adc
dec
dec
jecxz
ret
sbb
adc
or
jle
xor
push
in
in
mov
mov
and
in
pop
mov
test
std
daa
daa
and
dec
gs
loope
mov
dec
daa
and
maskmovq
not
sar
push
push
and
outs
shrd
and
xchg
xchg
daa
daa
rcr
push
pusha
leave
enter
iret
sbb
cs
mov
pop
rcl
push
inc
rcr
mov
es
pop
inc
sbb
and
mov
dec
call
mov
fsub
xchg
xor
mov
ror
dec
or
pusha
mov
int
bound
ins
imul
ret
dec
xor
inc
test
imul
pusha
mov
outs
icebp
sub
jb
jne
cmp
inc
jae
jnp
iret
and
ret
dec
lock
(bad)
dec
sub
pop
retf
js
inc
shl
xor
ins
arpl
pop
rcl
mov
or
dec
inc
retf
sbb
xchg
dec
or
cdq
jnp
push
xchg
sbb
dec
ror
jnp
push
pop
and
scas
inc
or
ret
clc
rol
and
mov
mov
and
add
ins
gs
pop
xchg
lock
pop
and
rcl
gs
ins
jnp
adc
add
or
xchg
test
shl
std
test
add
dec
outs
popa
fs
add
adc
adc
ins
cmp
xchg
mov
cmc
pop
dec
ins
fs
ss
les
jle
nop
fwait
or
adc
mov
inc
fs
outs
push
sub
popaw
outs
cs
test
fdiv
mov
ins
(bad)
aam
outs
ins
not
or
stos
jmp
adc
add
ins
jae
dec
fs
fstp
loope
loope
ja
int
inc
jne
data16
inc
inc
stos
fiadd
push
dec
jecxz
mov
fisttp
mov
mov
imul
push
mov
and
add
jae
in
shl
sub
ins
outs
jbe
mov
or
shl
mov
push
inc
pop
dec
jno
mov
mov
sub
rcr
pop
adc
adc
jo
inc
or
push
icebp
inc
popa
xor
arpl
add
ds
push
dec
inc
jg
jecxz
popa
ins
bound
adc
sub
or
inc
adc
mov
sub
jo
mov
rcl
jb
jno
push
mov
push
popa
jbe
mov
lock
push
outs
lea
dec
bound
jae
mov
mov
adc
adc
or
and
add
xchg
inc
movs
loopne
xor
cmps
jae
xor
add
dec
pushf
shl
xchg
inc
or
inc
ins
mov
adc
mov
rcl
fcomi
jb
xchg
cmps
lea
or
mov
sub
(bad)
(bad)
aas
mov
dec
add
mov
out
(bad)
sar
movs
(bad)
movups
addr16
imul
and
add
mov
jnp
or
movs
cdq
xor
push
mov
sbb
sbb
and
mov
rcl
inc
mov
xchg
inc
xor
push
and
sbb
stos
dec
sbb
xchg
inc
adc
movs
setns
inc
add
dec
jae
mov
mov
rcr
dec
pop
inc
bound
inc
jbe
hlt
pop
or
adc
leave
or
dec
push
retf
cld
and
scas
inc
sbb
add
add
add
scas
inc
and
clc
pop
push
sbb
pop
xchg
addr16
out
add
push
push
adc
adc
fisttp
mov
test
inc
push
(bad)
or
pop
sub
add
pop
mov
add
adc
iret
lods
lahf
push
adc
jmp
dec
adc
inc
shr
aad
outs
sbb
dec
int3
mov
xor
pusha
mov
push
mov
or
push
dec
in
ja
shr
out
inc
ror
jb
lods
xchg
shl
pusha
add
repnz
outs
push
mov
sti
inc
rcl
sar
ficom
xchg
push
addr16
mov
or
fs
pusha
cmp
inc
push
mov
xor
aas
sbb
(bad)
mov
sub
push
nop
adc
clc
mov
add
(bad)
pop
test
(bad)
dec
xor
dec
cdq
inc
pop
imul
adc
adc
inc
pusha
test
sub
mov
aad
ror
xor
test
push
setle
aam
pop
in
dec
sbb
and
sar
mov
adc
lea
enter
hlt
pop
imul
or
push
dec
or
cli
xor
and
add
sbb
push
sub
sbb
sbb
leave
arpl
pop
cwd
jno
sbb
inc
ror
test
mov
add
div
pop
nop
sbb
arpl
pop
mov
rcr
les
or
xor
sti
fnstcw
or
mov
adc
dec
dec
adc
or
or
ins
in
loope
sub
xor
add
adc
call
adc
add
lea
test
mov
imul
push
push
cmc
sahf
data16
or
sbb
pop
push
adc
sub
inc
imul
or
adc
xchg
in
ins
es
add
dec
push
or
or
add
sub
inc
mov
adc
dec
pop
or
sbb
add
dec
lods
pusha
fiadd
inc
loope
jmp
dec
test
and
(bad)
popa
jo
mov
fadd
and
and
ja
xor
add
sub
aam
add
inc
stc
iret
push
mov
mov
je
mov
cmps
popf
push
xchg
add
inc
push
push
rol
fstp
jp
add
push
push
add
dec
iret
pop
sti
xor
push
inc
add
push
push
cmp
push
pop
adc
jmp
dec
push
inc
add
fcom
cmps
push
inc
fidiv
pop
adc
push
scas
std
fdivrp
scas
dec
mov
cs
push
push
add
adc
inc
or
inc
fdivr
nop
imul
or
js
nop
xor
(bad)
mov
mov
xor
push
ja
pop
add
jl
adc
adc
outs
sub
(bad)
and
lea
inc
jecxz
sbb
xor
mov
mov
push
(bad)
xor
mov
sub
mov
sbb
cmp
sub
mov
and
test
mov
mov
and
push
sub
pop
mov
shl
repz
push
push
mov
frstor
push
push
imul
test
xchg
retf
adc
dec
addr16
mov
pop
push
daa
push
pop
fistp
outs
ss
add
je
or
cmp
outs
ins
retf
inc
add
dec
pop
push
loopne
sbb
fisttp
shl
test
out
dec
mov
push
inc
pop
cmp
sub
jl
inc
sbb
pop
int3
imul
jmp
cld
inc
sbb
mov
(bad)
pmulhuw
push
xor
jne
jae
and
pop
or
mov
mov
add
and
ret
add
nop
inc
jo
leave
bound
rcl
mov
ret
mov
sub
shl
and
arpl
jb
and
push
hlt
pop
popa
aaa
shr
push
adc
jb
xchg
xor
aaa
jmp
ins
pop
add
aam
push
(bad)
dec
xor
sub
pop
or
add
cmp
mov
add
aas
or
jo
inc
out
fisttp
or
dec
cs
inc
sub
rcr
jg
dec
outs
movs
imul
jmp
cmp
nop
add
dec
shr
mov
sub
adc
adc
ror
mov
and
add
aas
or
ins
add
out
push
inc
add
mov
test
out
mov
aas
add
mov
lods
shl
mov
ficomp
push
in
ret
jmp
inc
adc
in
sub
push
outs
add
adc
pop
fimul
add
clc
(bad)
dec
pop
jbe
gs
pop
adc
scas
xor
ss
inc
xchg
jo
ins
add
sub
push
fsub
inc
mov
scas
inc
ins
pop
jb
scas
mul
pop
add
cmps
dec
hlt
loop
std
outs
ins
add
pop
scas
ins
inc
push
mov
mov
or
inc
xor
push
push
imul
add
popa
sbb
sbb
sub
xor
(bad)
aaa
or
pop
xor
cmp
push
lock
loop
inc
mov
or
or
push
mov
dec
imul
dec
ja
add
outs
dec
mov
xorps
jo
add
and
inc
push
pop
push
mov
push
imul
cmc
xor
inc
sbb
inc
fidiv
inc
xchg
out
sub
cmp
add
ds
add
arpl
test
mov
or
or
dec
pop
rol
fs
pusha
clc
jp
gs
iret
sbb
ja
ja
or
or
jnp
inc
inc
and
aaa
(bad)
cmps
xchg
inc
pop
or
or
pop
jp
dec
outs
inc
xchg
adc
rcr
pop
xlat
cmps
add
or
rcl
jle
inc
add
aas
fisubr
daa
dec
jne
xchg
add
jb
adc
daa
or
inc
shl
dec
and
sub
out
push
arpl
add
pop
ja
adc
inc
add
scas
xor
scas
call
pop
push
aas
inc
ins
inc
adc
cmps
dec
out
and
push
mov
call
push
jno
lods
push
and
inc
jecxz
push
fnstcw
mov
ds
push
(bad)
mov
jmp
test
stos
mov
into
ds
and
push
jo
or
add
cmp
push
mov
or
pop
mov
xchg
jo
inc
sbb
test
adc
cmp
nop
ins
inc
das
enter
add
sub
pop
fwait
mov
jno
dec
inc
clc
inc
ja
pop
push
rol
and
js
inc
sub
cmps
push
ror
dec
jp
daa
add
addr16
lahf
daa
sar
shr
imul
jne
movs
scas
xor
adc
xor
clc
bndldx
outs
add
fs
inc
cmp
inc
sahf
mov
clc
ins
add
je
test
or
and
jbe
imul
inc
pop
fs
or
lahf
retf
cmps
or
dec
push
jae
gs
sar
ja
add
cmp
pusha
mov
outs
adc
retf
shl
inc
fwait
and
xor
xor
or
ins
ja
push
imul
inc
mov
jae
mov
jns
popa
add
ss
jo
add
inc
loope
inc
sbb
adc
jbe
fsub
dec
sti
outs
add
or
cs
lods
mov
push
(bad)
(bad)
or
mov
out
imul
sbb
lahf
push
outs
fwait
mov
push
or
push
jb
add
arpl
mov
test
add
add
xchg
jae
lock
add
xor
push
pop
sbb
cmps
iret
pop
addr16
push
dec
add
add
je
out
add
jae
add
gs
pop
pop
inc
and
mov
jo
imul
sbb
shr
pop
push
mul
inc
push
pop
inc
gs
scas
addr16
pop
fist
inc
add
bound
shl
jae
sub
push
add
push
push
inc
inc
add
dec
fild
mov
out
into
add
inc
pop
jmp
mov
mov
adc
add
xchg
push
sbb
daa
or
out
dec
push
fwait
push
aas
jns
sbb
push
jns
dec
pusha
push
ja
inc
mov
sahf
mov
add
popa
add
inc
mov
add
cs
mov
ds
out
add
add
dec
scas
lock
lahf
dec
sbb
mov
inc
and
mov
add
add
cmovg
add
loopne
repz
data16
add
xcrypt-cbc
cmps
ror
popa
ja
arpl
adc
(bad)
dec
dec
sbb
or
scas
inc
mov
dec
mov
pop
mov
and
jns
add
xor
or
and
inc
pop
and
fsubr
push
or
mov
adc
jo
fs
imul
push
push
mov
inc
punpcklbw
or
ins
add
or
dec
push
loopne
pop
dec
add
add
fadd
lods
sbb
idiv
gs
adc
push
ret
sbb
pop
prefetch
xor
aaa
add
pusha
adc
test
sub
outs
push
call
mov
inc
adc
xchg
scas
adc
jo
and
sti
xlat
pusha
add
addr16
or
add
pop
xchg
outs
add
fisttp
rol
dec
xchg
dec
aam
jo
jae
xor
and
pusha
push
dec
mov
and
cdq
and
push
outs
inc
and
jns
sbb
ins
cmps
lods
add
fwait
or
jle
or
scas
aas
fs
add
iret
sub
or
or
aaa
mov
add
dec
xor
add
add
pop
imul
out
pop
out
cmp
inc
or
and
popa
cmps
jo
gs
lods
jo
pop
push
add
add
add
mov
xchg
ins
add
ins
inc
ror
shl
aas
sahf
mov
ds
add
push
cmp
test
jbe
dec
shl
cli
jns
popa
add
push
or
push
jmp
jbe
push
or
or
cmp
xor
xchg
inc
push
and
(bad)
sub
adc
pop
adc
and
outs
add
ret
adc
movzx
addr16
bound
loop
or
gs
outs
add
mov
fistp
out
add
xchg
and
xchg
add
ins
add
push
xchg
ins
jmp
fisub
addr16
jle
je
push
daa
push
pop
popa
adc
pusha
adc
aas
inc
push
cmp
pop
or
(bad)
or
(bad)
and
push
in
push
aas
aas
pop
adc
push
call
pop
aam
test
test
test
xchg
ja
cmc
jge
and
loope
mov
fistp
imul
or
or
pop
or
call
mov
xor
les
cmp
fadd
jne
lods
inc
or
sbb
add
push
pop
sbb
dec
add
add
lods
std
test
and
inc
loope
mov
adc
pop
div
add
daa
test
pop
pop
ret
jo
push
(bad)
pop
(bad)
mov
repnz
push
mov
imul
push
push
pop
bound
xor
loopne
add
test
movs
pusha
and
js
or
pop
inc
jg
xchg
xchg
pop
mov
and
js
xchg
shl
sbb
xchg
je
mov
push
ror
rcl
cmp
les
cld
or
rcr
pushf
xchg
mov
int3
les
pop
pop
pop
outs
jae
add
(bad)
mov
outs
popa
nop
les
clc
sbb
sub
or
lock
push
fist
call
sub
mov
(bad)
xchg
test
dec
xor
es
xchg
xchg
xchg
xchg
sub
sub
xchg
xchg
xchg
xchg
sub
cs
xchg
xchg
xchg
xchg
adc
adc
xchg
xchg
xchg
xchg
adc
push
pop
xchg
xchg
xchg
xchg
sbb
sbb
xchg
xchg
xchg
xchg
sbb
push
pop
xchg
xchg
xchg
xchg
add
add
xchg
xchg
xchg
xchg
add
push
pop
xchg
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
or
push
bswap
leave
leave
enter
repnz
leave
leave
leave
hlt
cmc
div
leave
leave
leave
leave
clc
stc
cli
sti
leave
leave
leave
leave
cld
std
(bad)
dec
leave
leave
leave
loopne
loop
leave
leave
leave
leave
in
out
leave
leave
leave
leave
call
leave
leave
leave
in
in
out
out
leave
leave
leave
leave
rcl
rcl
leave
leave
leave
leave
aam
(bad)
xlat
leave
leave
leave
leave
fcomp
fcmovu
leave
leave
leave
leave
(bad)
(bad)
leave
leave
leave
leave
rol
ret
leave
leave
leave
leave
(bad)
(bad)
leave
leave
leave
leave
enter
cmp
mov
lock
jne
out
aam
ficomp
aas
mov
sub
popa
jo
pop
cmp
sub
mov
adc
arpl
stos
fld
cmp
push
movs
pop
or
push
adc
sub
xchg
sbb
add
fild
cmp
shl
push
add
inc
push
or
adc
inc
jl
lea
call
push
push
and
jg
sbb
inc
outs
outs
je
nop
xchg
inc
jnp
jo
fldcw
add
mov
gs
add
inc
inc
iret
or
imul
push
sub
rcl
add
call
ror
inc
movs
dec
add
push
and
bnd
jb
xor
inc
(bad)
hlt
cdq
add
inc
push
push
cmp
push
imul
add
imul
add
cs
fild
push
outs
jp
push
sahf
jae
add
sbb
mov
sbb
or
push
dec
sar
or
int
gs
jb
or
inc
add
push
inc
ins
mov
sbb
adc
jmp
out
lea
and
jb
or
fs
mov
inc
call
(bad)
cld
pop
pusha
js
ins
dec
outs
jo
je
inc
push
mov
or
adc
nop
and
sbb
jbe
adc
xor
out
in
jnp
adc
loopne
and
or
adc
push
neg
cmc
adc
shl
mov
(bad)
jo
ret
stos
mov
jb
add
sbb
es
or
bound
adc
(bad)
mov
jb
jmp
jl
pop
bound
bound
or
dec
gs
or
jp
ins
or
cmc
movs
movs
adc
in
repnz
popa
outs
outs
pop
inc
icebp
fdivr
jae
es
push
dec
cld
iret
or
add
test
(bad)
dec
aam
inc
in
(bad)
inc
push
call
add
add
or
mov
pop
jae
shl
outs
(bad)
jl
(bad)
or
mov
fs
pop
fsubr
xor
push
sbb
(bad)
mov
call
stos
jae
push
fist
mov
add
test
add
sar
popa
or
loope
xchg
sub
pop
xor
mov
or
mov
pop
mov
add
pop
add
jle
adc
or
sub
xchg
push
mov
cld
das
or
push
(bad)
and
add
xchg
and
mov
imul
(bad)
or
clc
jnp
(bad)
add
cmp
dec
push
pop
sbb
adc
mov
je
and
pop
pop
xor
cdq
ret
imul
xchg
ret
xchg
ja
inc
and
pop
push
inc
jge
and
scas
or
xchg
das
sbb
imul
ror
ds
add
out
pop
push
add
mov
lds
or
and
sar
lea
xchg
mov
in
(bad)
cmovns
in
(bad)
mov
mov
cmps
inc
rcl
sahf
xchg
add
rcr
scas
cmp
test
xchg
cmps
mov
mov
push
call
dec
nop
vmwrite
or
repz
loopne
mov
out
neg
adc
inc
cld
xor
idiv
inc
push
imul
jae
clc
mov
(bad)
push
mov
in
push
test
and
push
push
dec
loopne
add
jp
add
ret
push
push
pop
pop
daa
jno
pop
pop
pop
ins
dec
cmps
push
inc
jmp
cmp
ret
arpl
push
aas
add
pop
sbb
mov
les
cmp
stc
ins
ret
xchg
add
pop
add
hlt
inc
add
outs
daa
jbe
inc
jno
test
jnp
cwde
or
fcom
movs
inc
xlat
pop
dec
pop
add
jg
cli
push
cmp
pop
add
popa
ror
dec
add
add
imul
clc
dec
xchg
mov
push
cmp
mov
les
dec
jge
add
add
add
shr
fcom
mov
data16
fadd
das
xchg
cmps
push
or
cs
inc
cs
out
sete
inc
inc
inc
inc
push
je
mov
mov
lds
push
or
fs
nop
pop
cmp
xor
mov
movs
shl
xor
gs
mov
xchg
dec
xchg
cmps
jmp
jae
int3
xchg
out
push
and
aas
push
daa
jns
shl
in
cli
and
call
cmps
add
push
js
ror
jg
enter
xchg
pop
xchg
xchg
jg
dec
das
or
push
jl
cli
add
test
jmp
and
leave
enter
sbb
jge
add
cmp
dec
outs
add
pop
ins
cmp
dec
add
push
loope
sub
std
jge
mov
add
fild
(bad)
aas
lsl
sbb
data16
popf
jmp
or
dec
jecxz
mov
sub
fcmovnb
icebp
cmp
daa
enter
cmp
sbb
cmp
mov
(bad)
aam
jbe
cwde
xor
xchg
push
cmc
addr16
mov
push
jns
pop
inc
cwde
lds
enter
dec
nop
cmp
fidiv
idiv
les
inc
sbb
jl
nop
add
adc
inc
xor
ret
stos
into
sti
push
mov
dec
jl
add
pushf
add
add
mov
dec
cdq
inc
ins
or
mov
or
push
cs
dec
lock
stc
or
cld
jo
inc
mov
pop
cmc
jnp
xchg
pushf
add
push
test
jne
xor
data16
mov
push
data16
adc
push
xor
jle
push
fnstsw
push
inc
sahf
jbe
je
in
or
shl
or
int
push
sahf
or
ins
xor
leave
jl
or
or
xor
jnp
sbb
call
mov
cwde
jl
add
daa
dec
mov
inc
or
cmp
clc
pusha
push
outs
push
or
out
imul
frstor
inc
push
loopne
loopne
je
pop
push
inc
sti
xchg
mov
push
je
outs
ins
or
inc
pop
xor
push
xor
inc
in
ss
adc
repnz
mov
sbb
inc
ins
movs
jo
aaa
ins
sub
adc
or
add
sbb
push
popa
bound
sbb
cmc
dec
xlat
or
outs
addr16
and
push
in
std
ror
inc
cmp
test
adc
adc
sbb
gs
push
je
push
jge
push
or
dec
add
add
or
sbb
jo
or
pop
or
dec
int3
mov
imul
mov
push
mov
jge
pop
fcom
inc
aas
pop
or
imul
cmps
jo
scas
push
(bad)
fmul
je
scas
loope
stos
xchg
pushf
mov
mov
pop
push
mov
mov
or
add
icebp
inc
add
(bad)
loopne
inc
pop
(bad)
fmul
clc
ss
inc
aas
inc
push
test
xchg
loopne
sub
or
orps
inc
icebp
or
xchg
add
(bad)
cmp
sbb
and
and
fisttp
cmp
retf
lahf
prefetch
repnz
add
ltr
xchg
mov
imul
mov
rsm
push
mov
xchg
repnz
adc
add
mov
(bad)
or
mov
add
bndldx
movs
bndstx
xchg
pmullw
jg
sbb
mov
(bad)
mov
push
push
and
jno
and
loop
cld
fnstsw
and
jnp
and
mov
mov
inc
cmps
pmaxsw
cdq
mov
jno
test
push
xlat
add
cmp
shl
sbb
add
pop
int3
scas
xor
lock
adc
or
and
pop
stos
ins
adc
fadd
pop
pop
sbb
xor
push
fstp
pop
adc
xor
jmp
xor
xor
test
inc
add
or
nop
jo
push
sbb
and
add
dec
lea
mov
push
push
inc
jne
mov
nop
dec
xchg
jb
es
iret
pop
mov
gs
shl
les
add
cmc
adc
(bad)
jg
popa
aam
test
cmp
add
xor
jl
or
aas
or
rcr
jb
cmp
popa
add
aas
scas
inc
jb
ja
add
lods
mov
xchg
adc
or
icebp
sar
fwait
dec
jmp
mov
mov
inc
loope
sub
jnp
fadd
push
mov
pop
gs
add
mov
and
jb
ins
lods
push
sub
xchg
test
sbb
and
push
xor
out
mov
or
or
loopne
movs
rcl
pop
dec
pop
inc
das
cmp
adc
or
stos
sub
or
push
add
xor
pop
sub
mov
mov
cmp
imul
out
push
lock
setae
shl
adc
sbb
adc
and
and
inc
push
add
ja
xor
aaa
mov
inc
inc
and
inc
adc
scas
ins
jno
add
fwait
sbb
stos
mov
add
pop
in
or
add
mov
pusha
xchg
popf
mov
inc
pop
popf
inc
pop
pop
inc
test
gs
mov
mov
lea
and
and
mov
pop
test
xor
inc
xchg
pusha
daa
in
adc
sub
push
test
and
add
inc
test
pop
test
fst
dec
jne
and
jnp
sub
or
mov
mov
add
fwait
jmp
sbb
scas
pop
add
mov
push
enter
mov
push
push
fdiv
or
jns
sub
sub
add
dec
add
add
ins
jns
mov
repnz
pop
inc
adc
push
push
or
jnp
jg
dec
imul
xchg
add
push
mov
pop
xlat
es
pop
bound
jb
mov
ins
test
mov
push
mov
mov
imul
mov
imul
aad
pushf
ror
or
in
inc
cmp
xchg
xchg
sbb
(bad)
fadd
mov
(bad)
sbb
not
outs
jae
mov
or
fist
push
dec
xchg
mov
jne
pop
xchg
push
stos
(bad)
cld
mov
jo
sbb
test
adc
pop
inc
lods
pushf
xchg
add
ins
fild
js
push
mov
out
push
in
(bad)
jl
ins
ds
mov
sub
test
and
call
fxch
or
or
adc
jns
xor
dec
push
movs
jns
out
shr
or
mov
out
sbb
pusha
push
push
push
sub
pop
cmps
in
push
movsx
inc
fist
push
and
enter
lahf
push
mov
dec
ficomp
dec
push
inc
add
xor
inc
or
jo
add
ret
xor
xor
push
inc
movaps
imul
iret
dec
lods
lods
rcr
mov
retf
xlat
cli
adc
lods
mov
lods
sub
cmp
dec
lods
mov
push
scas
push
push
(bad)
verw
scas
mov
scas
retf
lahf
jne
dec
or
adc
mov
call
jmp
inc
mov
adc
in
repnz
add
pop
xor
pop
(bad)
cmp
jnp
sbb
mov
add
mov
ret
push
hlt
add
punpcklbw
sbb
nop
jle
mov
sti
pop
out
sub
and
mov
mov
outs
shr
stc
paddsb
and
js
sub
pop
aas
enter
push
or
inc
ja
mov
cwde
repnz
mov
and
sub
adc
clc
mov
mov
dec
inc
jp
jbe
sub
mov
push
add
sub
mov
popa
adc
aas
sub
add
cs
es
or
add
clc
mov
cmp
inc
cmp
xor
mov
mov
pop
je
inc
xchg
sub
sub
leave
or
aad
mov
push
movs
add
loopne
or
leave
test
clc
mov
movs
pop
add
cmps
dec
imul
sub
add
or
add
ins
adc
ja
xor
add
or
inc
mov
mov
stos
dec
das
pusha
and
daa
or
add
push
clc
mov
or
pop
call
add
dec
sub
jl
repnz
mov
adc
cmp
jns
mov
xor
add
mov
cmp
clc
mov
cmova
push
repnz
clc
mov
arpl
fild
prefetchnta
out
push
gs
or
(bad)
cmp
mov
push
fistp
int3
add
cmp
xor
mov
jmp
fcom
xchg
pop
pop
popa
(bad)
mov
push
or
xchg
popa
and
push
mov
sub
inc
ret
mov
push
add
pushf
sbb
gs
push
pop
popf
call
call
push
shl
adc
js
add
xor
jbe
xchg
mov
lahf
das
add
neg
xor
or
inc
arpl
dec
pop
test
add
jns
and
fs
dec
(bad)
jmp
push
add
and
jae
pusha
sub
jecxz
pop
push
push
or
mov
(bad)
int
outs
push
xchg
or
ficomp
mov
add
inc
push
imul
nop
ret
add
ss
pop
movs
jo
movs
cmp
pusha
adc
fcomp
mov
aaa
or
adc
pusha
jnp
int3
add
or
pop
sub
jg
repz
es
sbb
lock
pusha
xchg
(bad)
and
ror
lahf
inc
adc
mov
push
mov
cmp
fcomp
sub
inc
js
dec
enter
test
push
jp
sub
pop
jg
sub
clc
jle
out
es
fld
xchg
pop
test
fidivr
int
sub
sub
push
push
sbb
pushf
jle
shl
sub
sub
jecxz
scas
out
add
jo
cmp
outs
mov
outs
mov
ret
inc
sub
mov
mov
outs
jae
(bad)
out
imul
inc
push
push
dec
add
addr16
push
dec
repnz
add
add
call
cld
or
mov
psrad
cli
sbb
popa
mov
cmp
ins
std
(bad)
jl
or
es
push
or
mov
add
aas
push
ret
and
add
or
loope
arpl
xchg
jne
je
inc
imul
mov
fisttp
inc
outs
pop
cmp
mov
adc
popa
(bad)
mov
push
repz
or
fs
ins
jg
inc
into
and
add
repz
imul
ds
bound
jb
sub
mov
leave
bound
sbb
repnz
jns
xchg
outs
setle
add
fisttp
inc
xor
shl
dec
int
fs
add
add
loop
dec
dec
std
stos
lock
(bad)
mov
ret
iret
push
inc
ins
cs
adc
mov
movs
xlat
cmp
jmp
pusha
fwait
stos
mov
mov
mov
xor
or
mov
cmp
add
cmp
lds
and
xor
mov
cmp
mov
imul
jp
xchg
(bad)
mov
and
(bad)
push
sub
inc
imul
imul
(bad)
adc
fiadd
inc
test
mov
outs
sub
pop
xor
sbb
push
jne
test
jae
in
ins
mov
arpl
cwde
cld
adc
add
add
add
fsubr
call
or
clc
retf
fcomp
jns
imul
rcr
add
jmp
dec
or
mov
test
rol
pop
sahf
gs
inc
ror
sub
hlt
ss
add
jmp
inc
sbb
xchg
div
sbb
adc
xlat
clc
cwde
xor
lock
sub
push
loopne
xor
dec
xor
scas
mov
sahf
outs
shl
sar
sub
xor
sbb
mov
adc
pop
test
loopne
xchg
xchg
ret
fwait
add
std
(bad)
cld
jmp
scas
ror
sahf
test
jne
add
(bad)
sbb
loope
sbb
nop
mov
adc
and
ins
jne
sti
cmp
jns
add
inc
and
sub
rcl
inc
test
xor
jmp
call
dec
bound
aas
jge
or
push
inc
adc
mov
ret
icebp
ins
pop
call
cmc
rcr
scas
aas
leave
or
es
push
fist
add
and
pop
loope
mov
mov
mov
add
js
add
std
mov
rol
or
mov
aam
loop
stc
das
push
gs
dec
pop
shl
clc
add
es
pop
xlat
pop
outs
je
xlat
fst
mov
or
les
xchg
(bad)
lock
xor
xchg
xchg
push
jae
cmps
adc
add
cmp
in
or
xor
call
adc
pop
sbb
loopne
sbb
push
test
sbb
cmp
jecxz
mov
fiadd
sbb
gs
push
int3
outs
js
dec
lods
cmp
or
popa
imul
xor
mov
bound
popa
mov
mov
push
jl
sbb
xor
pusha
nop
lock
pusha
push
pop
je
mov
add
leave
pop
jbe
push
or
push
(bad)
ja
lods
ret
or
push
push
hlt
test
sub
xor
pusha
or
pop
jae
lods
xor
adc
jge
dec
js
xchg
add
(bad)
push
js
das
push
or
call
mov
mov
sub
shr
das
and
inc
push
inc
cmp
add
sar
or
mov
inc
inc
add
xchg
cmp
jmp
gs
jo
push
pop
stc
xor
sub
push
cmp
fadd
inc
inc
pop
jns
dec
loope
(bad)
pop
shl
xor
fsub
dec
aas
(bad)
(bad)
leave
das
jno
out
mov
push
and
cmp
jge
inc
push
xor
inc
test
push
shl
fbld
out
push
rol
inc
lahf
inc
xor
out
push
push
mov
jnp
dec
out
cmp
dec
pop
inc
enter
jbe
jle
push
cwde
add
sar
cmp
push
inc
jmp
stos
inc
outs
loop
ret
dec
pop
icebp
dec
enter
mov
(bad)
cmp
leave
add
nop
push
sub
ja
xchg
(bad)
shr
cmp
add
retf
xchg
es
retf
or
or
push
mov
sbb
nop
int3
je
ror
or
push
xor
mov
pop
ds
or
int3
mov
test
daa
push
int3
cmp
sub
imul
loope
sub
cmp
and
pop
add
mov
sub
and
adc
add
je
pop
inc
push
int3
adc
or
stos
imul
pop
scas
pop
mov
ficom
or
(bad)
mov
sub
popa
les
mov
push
adc
adc
sub
inc
out
dec
and
or
shl
mov
mov
js
pop
call
dec
dec
lock
push
mov
dec
dec
dec
int3
xchg
cmp
lea
or
and
loopne
rol
loope
mov
push
scas
into
das
mov
adc
out
test
or
mov
cwde
(bad)
rcl
jo
(bad)
pop
outs
sub
nop
fmul
dec
inc
sar
inc
sub
inc
add
gs
push
clc
adc
std
sbb
sub
dec
push
xor
ret
sub
into
icebp
or
loope
cmp
je
icebp
lock
aad
and
pop
pop
jno
int
mov
iret
jbe
cwde
sub
addr16
pop
or
add
inc
inc
test
jg
mov
cmp
fs
jo
push
push
jnp
sahf
pop
push
xor
or
cmp
sub
enter
(bad)
xor
xor
jno
outs
lods
popf
sbb
and
out
aaa
dec
jo
mov
dec
mov
dec
adc
ins
movlps
ins
fild
gs
cmps
adc
movs
push
cdq
iret
ins
js
push
aad
push
dec
inc
jne
push
mov
inc
imul
aad
adc
dec
jno
int
push
das
cmps
push
inc
mov
test
in
in
or
cs
cld
test
mov
sub
mov
mov
mov
inc
jbe
jbe
add
pushf
jns
push
sub
pop
sbb
imul
nop
jl
shl
out
repz
cwde
cmp
xchg
cld
push
or
retf
pop
lock
xlat
clc
mov
push
ins
adc
mov
mov
clc
or
inc
add
jo
out
jae
(bad)
int
xor
and
sub
add
sbb
sbb
jae
(bad)
out
sub
add
jmp
sbb
sar
std
or
rcl
sti
rcr
or
xor
push
aam
icebp
in
ss
cmpps
aad
jmp
pop
dec
xchg
inc
ret
lods
test
lods
mov
aas
popa
lfs
loop
pop
xor
add
stc
or
xor
daa
gs
(bad)
jno
add
test
adc
call
mov
mov
adc
bound
cmp
std
gs
bound
push
adc
mov
es
ds
or
in
(bad)
or
xor
js
mov
and
push
ins
jns
fstp
xor
mov
mov
pop
mov
in
jno
mov
pop
pop
fnsave
das
sub
in
(bad)
push
inc
xchg
cwde
sub
add
cmp
sbb
mov
aad
cmp
inc
dec
pop
jns
or
push
in
(bad)
aaa
push
mov
jns
push
mov
popa
ins
test
xor
push
je
bound
aaa
push
js
sbb
dec
inc
test
lods
imul
not
fdiv
adc
push
cmp
dec
jmp
push
lods
add
or
scas
pop
xchg
int3
shl
lods
daa
jbe
jl
xlat
fisttp
enter
and
enter
inc
ins
cwde
ret
test
adc
dec
dec
add
rol
add
gs
ror
dec
loopne
(bad)
rol
sbb
xor
mov
fild
fcmovbe
(bad)
jbe
or
xchg
fisubr
bound
jbe
cwde
xchg
xchg
cmp
ja
rcl
in
es
and
cwde
jge
dec
xchg
sahf
or
jns
(bad)
shl
adc
xchg
jmp
cmps
or
ja
das
push
inc
push
mov
xchg
push
sbb
push
dec
les
idiv
aaa
hlt
push
or
dec
gs
jle
mov
fadd
xchg
add
adc
cmp
xor
fnstenv
fldenv
cmc
bound
add
enter
xlat
sbb
pop
ins
inc
fldenv
js
stos
push
ficomp
mov
in
shl
das
(bad)
fcmovnb
sub
jno
pop
xor
sahf
jle
pop
pop
add
mov
add
push
sub
push
add
(bad)
movs
push
dec
sbb
loope
test
fadd
cmp
call
daa
and
add
lock
push
push
shl
jb
jne
dec
std
jl
inc
(bad)
mov
fcmovnb
jnp
xor
mov
(bad)
jmp
adc
mov
push
fmul
icebp
jbe
mov
fdiv
das
and
xchg
ffree
fisttp
and
pop
je
add
push
pushf
nop
inc
mov
adc
pop
or
mov
jae
fidiv
cmp
imul
(bad)
aas
mov
cmp
test
cmp
add
add
hlt
fldenv
fild
mov
cmp
test
cmp
fiadd
push
and
sub
xchg
cmp
mov
push
jmp
bound
stc
adc
adc
shl
andps
test
mov
(bad)
std
jns
inc
ins
jo
push
outs
addr16
dec
jo
addr16
mov
sbb
push
push
dec
push
push
adc
rol
fmul
rcr
pop
cmp
arpl
inc
loopne
jecxz
push
push
push
loope
sbb
data16
dec
push
push
dec
movaps
ins
mov
call
xchg
push
jns
mov
mov
imul
push
pusha
nop
mov
enter
xor
pop
or
push
lea
lock
sub
jo
add
cmps
or
sub
ins
sbb
ins
xchg
(bad)
mov
or
call
sti
sub
fidiv
dec
pop
shr
pop
cs
cmp
pop
mov
icebp
gs
jb
mov
pcmpgtw
push
dec
jp
xor
xor
dec
leave
pop
add
xor
pop
mov
movhps
loop
push
push
shl
nop
bndldx
jne
outs
fld
jecxz
mov
mov
or
pop
mov
and
jns
lea
jo
mov
ja
jne
jecxz
inc
add
stos
add
je
push
adc
jecxz
scas
push
icebp
sub
pop
mov
shl
push
or
scas
cmp
(bad)
rcr
loopne
fwait
call
das
pop
ror
mov
dec
mov
fldcw
out
idiv
iret
or
inc
daa
jne
mov
adc
add
rcr
movs
add
stos
cmp
add
inc
sbb
lea
inc
dec
(bad)
fld
inc
add
pop
push
loope
int
push
adc
xor
sbb
mov
add
xchg
pushf
inc
shl
mov
or
outs
inc
sar
fld
rol
or
sub
add
add
inc
ret
pop
add
in
or
loop
mov
or
mov
push
cmp
xchg
jo
fadd
add
in
es
add
push
fsub
mov
out
popa
out
aaa
push
add
pop
mov
sahf
in
inc
xchg
sub
add
aas
jbe
push
pushf
mov
push
or
inc
add
add
mov
fcmovb
lea
leave
sub
arpl
test
retf
or
add
retf
mov
push
pop
rcr
push
nop
test
retf
jge
jmp
dec
in
(bad)
rcr
shl
pop
or
pop
jmp
add
push
jno
dec
or
pop
sti
pop
adc
fist
loopne
cmp
add
rcl
and
je
or
dec
dec
xlat
js
jecxz
and
adc
sbb
xor
push
add
dec
xchg
jg
arpl
and
sub
pop
adc
add
stos
push
or
xchg
minps
adc
(bad)
pop
popf
pop
repnz
push
and
mov
dec
test
jg
(bad)
in
jmp
adc
push
fdivr
in
out
mov
in
pop
or
unpcklps
cmp
into
pop
or
mov
(bad)
inc
mov
mov
mov
xor
rol
xor
inc
dec
jne
lock
jo
dec
mov
lea
xchg
push
pop
add
pop
popa
rcl
xlat
and
jle
and
push
fnstenv
inc
cwde
jg
js
jmp
js
add
popa
add
fist
addr16
dec
dec
jg
clc
cmp
jne
cmp
jne
stos
xor
cmp
push
pusha
add
leave
loopne
sbb
and
or
ds
loope
retf
sbb
ficom
adc
mov
pop
inc
sbb
or
mov
dec
sbb
pusha
enter
and
or
inc
sar
inc
shr
sbb
and
add
in
fucomip
xchg
movs
sub
sub
mov
inc
clc
mov
in
mov
add
xor
call
push
jne
dec
dec
pop
add
test
add
in
add
jecxz
jmp
push
mov
add
cmp
jne
xchg
inc
lock
pop
pop
jmp
outs
adc
call
and
clc
inc
or
push
jp
mov
cmp
sub
pop
mov
add
add
dec
add
jae
push
rol
xor
je
or
and
push
fidivr
cwde
or
pop
ret
add
or
leave
inc
pusha
adc
adc
ss
hlt
repz
rol
sub
xchg
or
js
popf
adc
inc
jo
icebp
jmp
lea
xlat
sbb
push
mov
and
das
dec
mov
and
add
inc
sbb
aaa
push
cwde
sub
and
in
pop
sub
rcl
shl
adc
jbe
loop
popa
loopne
cmp
jge
push
xor
xchg
push
repnz
inc
in
add
or
pop
ror
xchg
ror
enter
pusha
ins
mov
(bad)
call
mov
or
pop
or
repnz
push
jle
jmp
adc
add
jg
icebp
div
push
jg
mov
mov
nop
adc
out
pop
cld
adc
pop
pop
outs
push
fild
lahf
loopne
in
mov
add
or
sbb
add
mov
xor
or
test
das
add
ins
call
push
pop
pop
inc
add
and
stos
dec
and
rol
pop
call
nop
pop
pop
(bad)
push
xor
push
and
es
pop
or
pop
mov
pop
adc
stos
std
jnp
inc
ds
add
pop
push
mov
and
push
pop
and
xchg
sub
jae
adc
ficom
push
push
push
fsubr
inc
ss
add
jl
scas
or
inc
cmps
in
push
call
dec
xor
xor
movs
rol
pop
adc
add
mov
js
aas
outs
dec
jp
cmovb
inc
mov
ds
push
xor
dec
inc
imul
or
sti
scas
push
addr16
mov
push
inc
push
test
mov
dec
inc
or
sub
out
adc
ret
daa
pop
or
mov
pop
adc
test
mov
es
xor
jle
mov
dec
sub
dec
clc
stos
dec
push
mov
ins
jmp
pop
push
in
addr16
ins
add
adc
inc
xor
push
inc
sti
mov
movs
rep
pop
lock
cmp
inc
movs
push
push
jl
lock
pop
adc
xchg
pop
movs
aas
adc
add
cmp
dec
jmp
je
add
add
add
or
mov
test
sub
mov
mov
ins
loopne
movs
fldenv
mov
test
and
orps
or
pop
or
jne
inc
fs
add
add
ins
retf
sar
inc
loop
adc
shr
inc
ret
ins
loopne
jo
mov
mov
mov
scas
inc
dec
test
mov
les
fidivr
mov
xchg
and
mov
(bad)
fidivr
and
sbb
outs
push
push
jne
inc
and
pusha
loopne
cmp
and
fistp
fdivr
jns
sti
repz
ds
adc
mov
das
fimul
push
xor
(bad)
push
test
mov
and
fist
jne
cld
mov
aaa
call
mov
inc
inc
lock
xchg
adc
cmp
inc
adc
inc
pop
popa
inc
stos
int3
jo
cli
xlat
test
pop
pop
or
push
sbb
inc
xor
and
hlt
inc
fwait
sub
and
jle
pop
sar
push
sbb
cmp
(bad)
cwde
or
add
mov
clc
or
push
psubusw
jo
push
out
mov
mov
adc
adc
xchg
nop
rol
lahf
adc
xchg
ins
sti
dec
nop
gs
test
aas
pop
push
fisub
sbb
pop
imul
stos
xchg
sbb
cwde
add
push
test
pop
movs
and
mov
inc
mov
xor
fimul
push
sbb
loopne
sub
cmp
sub
cmp
rol
scas
mov
or
add
or
dec
ins
add
and
cmp
sub
lods
mov
inc
push
mov
icebp
out
jmp
xchg
xchg
and
nop
rol
aaa
add
or
mov
and
adc
push
inc
cmc
xlat
mov
(bad)
or
shr
mov
stos
cmp
push
mov
mov
xor
cmp
jle
or
or
stos
add
or
dec
stos
nop
sub
cli
xlat
clc
test
jecxz
cdq
and
popa
sbb
add
pop
(bad)
push
push
ins
and
add
jecxz
xor
les
push
add
dec
or
shl
inc
dec
adc
nop
inc
lahf
lds
in
lds
in
ret
nop
pop
mov
adc
popa
inc
pop
push
pop
adc
adc
out
ja
sbb
or
pop
and
dec
mov
(bad)
pusha
xor
add
inc
dec
paddd
inc
mov
inc
pop
stos
inc
adc
movupd
in
or
loope
adc
add
mov
fcmovb
push
and
sbb
movs
pop
sbb
jmp
cmc
call
xor
or
fcmovu
neg
cmc
out
add
push
and
data16
cmps
ins
push
mov
or
fbstp
pop
and
sbb
inc
push
and
movs
adc
es
mov
adc
adc
and
jmp
mov
out
sar
fdiv
sahf
mov
push
test
shr
repnz
mov
pushf
and
dec
pop
cwde
shr
xchg
push
xchg
or
push
or
adc
sbb
(bad)
icebp
push
arpl
dec
cmp
jge
sbb
add
stos
ficom
dec
clc
int3
movs
add
pop
cmp
cwde
sbb
rcl
adc
add
and
sbb
loope
mov
inc
or
lea
sub
mov
mov
jo
jl
jle
mov
add
retf
dec
test
mov
sbb
push
push
mov
cwde
scas
add
and
xchg
mov
and
cwde
stos
div
mov
push
stos
movs
lock
mov
mov
mov
xor
add
loopne
dec
aam
xchg
mov
jmp
pop
fsub
xor
inc
sbb
not
and
nop
dec
push
mov
xchg
or
mov
adc
dec
adc
(bad)
test
nop
xchg
mov
movs
or
xchg
sbb
push
xor
test
jns
aam
xchg
adc
in
adc
leave
test
test
std
add
pop
inc
js
xlat
and
cmp
mov
inc
sbb
loopne
adc
in
mov
or
adc
lods
sbb
cwde
lods
sub
dec
adc
mov
cmp
inc
cmps
ja
in
pop
popa
sub
mov
out
or
in
push
scas
sbb
pop
xchg
outs
cld
jecxz
pop
js
div
push
dec
add
je
or
add
or
rcr
scas
jno
pop
jmp
jge
xor
adc
pusha
push
push
dec
xor
xor
mov
or
inc
jmp
stos
adc
push
add
mov
push
inc
add
and
dec
sub
js
addr16
leave
adc
mov
xchg
and
cmp
pop
inc
cs
inc
call
(bad)
inc
add
stos
push
pop
pop
cmp
pop
das
dec
push
leave
test
daa
add
inc
test
jmp
pushf
xchg
jmp
xchg
xchg
xchg
inc
and
sbb
arpl
pop
dec
icebp
nop
cmp
jne
adc
or
out
fisubr
push
add
test
xor
retf
xor
nop
jmp
adc
mov
pop
rcl
jo
add
ror
push
add
and
or
neg
into
and
ins
jmp
ja
or
rcr
adc
sub
pusha
mov
das
scas
arpl
call
adc
in
int3
mov
xchg
sbb
outs
arpl
(bad)
sahf
push
and
fiadd
and
or
js
jl
xchg
mov
and
repnz
mov
fsubr
(bad)
or
cs
xor
(bad)
cmps
dec
xchg
mov
push
daa
push
js
mov
ds
ret
inc
sbb
inc
test
out
mov
cmp
sbb
cmp
adc
ins
dec
imul
or
xor
lods
ins
pusha
dec
imul
pop
dec
mov
xor
pusha
or
jg
fcomp
fadd
ja
sub
sbb
sbb
ret
push
loop
xor
jle
add
clc
mov
cwde
out
pop
pop
rol
mov
call
(bad)
sbb
or
inc
xchg
mov
int3
add
rcl
inc
add
mov
adc
jo
pop
inc
add
push
hlt
(bad)
adc
mov
add
pop
add
add
push
inc
dec
lea
inc
rol
mov
sub
pop
adc
sub
add
sbb
call
add
int3
lea
push
lods
or
jae
outs
and
aas
and
xor
add
add
fsub
and
sub
adc
add
shl
pop
or
and
add
adc
mov
sbb
pop
add
loope
pop
inc
cld
xchg
dec
mov
and
cdq
jno
sbb
inc
or
add
pop
mov
cs
cmp
sub
hlt
jae
mov
ins
movs
and
ins
fdiv
in
sbb
adc
loopne
dec
dec
fdiv
xchg
fprem
xor
cs
loope
dec
lea
add
or
imul
xor
ucomiss
add
push
add
daa
mov
retf
mov
clc
imul
and
add
and
push
pop
call
push
stos
sub
loopne
test
cmp
test
cmp
inc
add
enter
push
push
ja
fidiv
add
imul
push
pop
or
loop
loopne
sub
or
lods
sbb
mov
sbb
mov
mov
mov
es
fsub
add
adc
xor
jecxz
fmul
xor
aas
push
pusha
cmp
adc
(bad)
nop
cmp
or
adc
cmp
(bad)
xchg
cmps
push
enter
xchg
imul
cli
popa
push
or
push
mov
push
add
fcomp
or
pop
or
or
shl
push
xor
and
in
in
push
push
push
or
jo
or
mov
or
(bad)
and
sub
ss
cmps
loopne
mov
jne
cmp
or
dec
jecxz
or
int
int3
inc
sub
adc
push
cdq
and
rol
xor
adc
daa
xor
add
cmp
shl
rcl
xchg
add
nop
retf
mov
adc
and
movzx
mov
sbb
adc
or
daa
popa
add
dec
push
jno
adc
out
or
mov
pusha
sbb
neg
pop
and
push
sbb
or
sub
xor
cwde
icebp
or
add
or
or
mov
(bad)
sar
fnstenv
or
add
inc
in
adc
or
sbb
xchg
pop
pusha
inc
jnp
push
nop
sub
ja
mov
fsub
adc
test
daa
sbb
pop
or
push
fnop
bound
popa
test
movs
in
das
scas
mov
mov
stos
xchg
test
fisubr
ret
emms
jg
lea
sbb
icebp
fist
xor
pushf
fstp
inc
xor
pop
inc
gs
iret
fdiv
hlt
cdq
ins
cmp
ror
pop
unpckhps
sbb
mov
or
mov
repnz
add
sbb
add
ss
retf
clc
shl
inc
imul
(bad)
adc
popa
xchg
es
(bad)
push
push
cmc
pop
and
arpl
rol
imul
dec
hlt
pop
adc
in
mov
outs
push
cld
or
cmova
ret
add
or
pop
repnz
cmp
lea
gs
add
xchg
clc
mov
or
ins
rol
inc
daa
je
sub
div
mov
inc
or
xlat
lock
mov
push
das
shl
fisubr
mov
or
xchg
dec
call
sbb
icebp
jmp
inc
or
and
cmp
and
jle
sbb
mov
dec
iret
or
rcl
aas
xchg
mov
dec
ins
push
movs
loop
iret
pop
call
aad
nop
retf
cmp
push
or
and
add
and
xor
adc
rcl
clc
dec
cmp
into
clc
stc
jg
pop
sahf
pop
and
lods
nop
adc
dec
sbb
xchg
sub
lock
loopne
clc
cmp
int
mul
push
push
or
(bad)
fldcw
add
adc
pop
pop
jmp
push
push
loop
add
pop
inc
ret
daa
(bad)
mov
adc
ret
pop
and
push
fsubr
daa
or
jb
jp
mov
cmp
cmp
inc
sbb
mov
sub
and
xor
je
movs
add
ins
mov
sahf
and
mov
push
repnz
adc
xor
push
inc
seta
cmp
bound
call
adc
shl
inc
cmp
cmp
rol
cwde
mov
mov
or
push
sbb
fadd
mov
mov
push
gs
or
gs
xor
and
jg
mov
cmp
inc
aad
sub
or
inc
lea
push
cmp
xor
daa
push
pop
scas
(bad)
mov
not
and
(bad)
hlt
cmp
je
test
shr
ins
mov
pop
xchg
pushf
(bad)
jle
in
ficom
retf
in
mov
and
hlt
push
jbe
out
add
and
push
or
and
mov
add
dec
scas
xchg
cmp
push
jnp
cmp
push
in
je
jns
add
inc
pushf
sbb
rol
dec
pop
inc
call
(bad)
mov
sbb
xchg
loopne
mov
cmp
repnz
mov
adc
pop
aas
cs
add
mul
rcl
lds
in
lods
aas
add
cs
das
sti
mov
dec
sbb
or
imul
add
pop
retf
das
inc
ret
je
mov
pop
push
pop
add
pop
push
sbb
sub
adc
jo
push
shr
cld
add
in
inc
int
lock
(bad)
inc
test
les
test
inc
ret
jp
jne
shr
add
sub
inc
pop
mov
add
gs
xor
adc
or
das
lea
add
daa
lea
aaa
adc
or
jmp
mov
inc
sub
adc
mul
cld
pop
jmp
int3
mov
iret
int3
mov
lea
dec
fxch
and
lods
call
ror
int3
push
push
loope
push
mov
jl
push
add
pop
mov
enter
fmul
fisub
fs
ins
fwait
jne
adc
imul
cmp
cld
fsubr
fild
mov
mov
cmp
call
jo
test
ror
or
mov
sahf
fs
mov
push
fidiv
push
add
mov
push
(bad)
adc
inc
fdiv
cmp
or
rcl
dec
and
pop
dec
mov
enter
mov
ret
xchg
push
dec
pop
cmp
sbb
shl
fnstenv
ret
add
mov
mov
js
pop
inc
push
fadd
push
or
and
outs
mov
xchg
or
test
ins
cmp
adc
sub
sbb
mov
push
je
aad
dec
or
mov
push
and
ss
repz
and
sub
lahf
push
daa
adc
jmp
sbb
outs
js
push
xor
mov
xchg
mov
sub
push
addr16
stos
sub
icebp
into
push
fiadd
cmps
dec
and
jbe
pop
adc
jmp
lock
jmp
(bad)
popa
imul
and
daa
sbb
btc
add
add
add
bound
loopne
add
ret
movs
(bad)
movs
repz
mov
add
sub
and
sub
and
push
je
mov
add
pop
push
lds
punpckhdq
sbb
fimul
inc
adc
ret
and
outs
inc
(bad)
mov
jnp
xchg
lea
add
dec
pop
add
fwait
out
add
or
add
xor
push
fcmovnb
inc
add
pop
aas
imul
js
xor
or
sub
dec
pop
mov
add
test
cmp
shl
loopne
pop
inc
jne
add
cmp
popa
push
adc
adc
adc
dec
pusha
jmp
pop
push
push
das
and
mov
push
ins
stos
pop
lahf
hlt
jno
inc
pop
sub
cmps
outs
cmp
js
jg
fisttp
add
push
bswap
shr
mov
dec
jns
jmp
push
xor
sti
mov
(bad)
(bad)
mov
sub
shl
mov
mov
jmp
ja
sahf
sti
ficomp
mov
push
fs
cld
push
mov
sbb
pop
mov
sbb
push
add
sub
jl
mov
mov
add
sbb
rcr
jne
ds
cli
ret
cmp
jnp
call
mov
lea
jmp
push
arpl
imul
xchg
mov
(bad)
push
addr16
data16
clc
cmp
sbb
pop
out
xor
sbb
(bad)
icebp
or
aaa
clc
retf
shl
cmp
fmul
sbb
pop
sbb
popf
add
cmp
jl
enter
cmp
mov
or
inc
add
or
or
shl
aaa
mov
inc
(bad)
adc
mov
mov
push
or
push
cmp
fcom
pop
clc
pop
mov
sbb
sahf
fnsave
aas
and
mov
fwait
inc
adc
mov
mov
jl
ret
fsubr
movups
mov
aam
jg
sub
or
or
out
xor
mov
sub
fist
dec
shl
add
test
pop
mov
push
push
jne
cmp
mov
inc
cmp
jge
inc
push
outs
push
fdiv
or
mov
rol
pop
xlat
in
mov
shr
sub
lea
in
jmp
adc
cmp
cs
in
lock
push
test
xor
add
sbb
or
aaa
jge
add
shr
ret
pop
rol
pop
add
push
sub
xlat
mov
jo
arpl
inc
jno
pop
jle
hlt
cmp
add
out
loop
cmp
sub
mov
pop
push
pop
enter
ffreep
xchg
add
and
inc
pusha
xor
ror
and
pop
cld
push
add
xor
in
mov
push
jo
add
inc
jo
cmp
and
movs
push
push
lock
xor
mov
pop
push
sub
leave
js
or
xor
pop
sub
jmp
xor
sub
push
sbb
sub
sahf
adc
ins
inc
mov
mov
adc
fsubr
sub
inc
push
or
mov
dec
mov
xor
dec
rol
test
and
or
dec
adc
lods
mov
dec
jo
or
repnz
cld
xor
icebp
xor
sub
push
je
cmp
jg
sub
test
cmp
jg
xor
dec
dec
cmp
push
cmp
jg
dec
sub
jge
and
icebp
sub
xchg
pop
popa
loop
aas
xchg
enter
add
repnz
and
and
jbe
sbb
ficom
and
sbb
adc
cmp
xchg
mov
add
pop
jle
outs
ficomp
push
stos
push
add
cmp
and
sahf
rcl
jmp
rol
sub
and
scas
mov
pusha
push
mov
aas
mov
jmp
xchg
mov
nop
xor
mov
lock
mov
adc
outs
jge
or
sub
add
dec
lods
push
rol
lods
ret
dec
(bad)
mov
in
sub
loopne
es
inc
lea
push
ins
sahf
or
add
mov
sbb
lfs
mov
mov
cmp
push
push
and
add
pusha
xor
and
jmp
and
pop
mov
cmp
cdq
je
leave
mov
inc
add
or
add
sbb
push
and
arpl
push
add
add
sub
fwait
sar
xor
les
fdivrp
pop
aam
rcr
lea
lea
xor
push
fs
xchg
dec
pop
mov
int3
stos
or
jbe
jmp
cmc
sbb
ins
mov
mov
push
mov
adc
and
pop
pop
sti
xor
jecxz
mov
dec
sar
repz
push
mov
mov
adc
pusha
cmps
popa
aas
inc
in
mov
test
jne
push
outs
sub
mov
cmp
jmp
rol
loope
cs
or
mov
loope
cli
aam
jmp
in
xlat
push
or
enter
pop
xor
rol
out
sahf
test
push
or
or
add
jo
adc
call
inc
mov
loopne
jno
push
and
push
push
aaa
pop
leave
retf
(bad)
push
jmp
adc
ret
inc
jl
js
sub
jecxz
jecxz
mov
or
jmp
mov
sub
mov
and
or
inc
(bad)
lock
dec
or
jle
lock
jmp
mov
xor
mov
mov
sbb
js
pop
(bad)
not
inc
or
inc
and
add
jmp
and
sub
lods
sbb
shl
inc
sub
adc
push
neg
mov
cmc
icebp
add
dec
enter
out
cmp
js
adc
add
add
imul
dec
adc
ins
je
pusha
add
mov
sbb
or
loopne
push
outs
mov
adc
xor
mov
xchg
add
(bad)
out
test
dec
jns
test
test
es
add
clc
pop
fld
movs
icebp
(bad)
push
mov
xor
push
xchg
rcl
xchg
out
or
jecxz
jecxz
adc
jmp
inc
inc
push
rcr
xchg
adc
(bad)
shl
mov
push
mov
lods
scas
cmp
test
add
test
inc
lods
imul
xchg
mov
mov
push
sbb
xor
inc
loopne
hlt
enter
in
and
pop
fwait
int3
pop
pop
in
add
rdpmc
shl
push
inc
inc
cmp
add
in
jecxz
retf
fst
push
ss
in
mov
cmp
mov
repnz
and
inc
add
int3
xchg
push
shl
rcr
push
add
xchg
sub
shr
imul
xchg
add
or
xor
mov
jbe
jne
(bad)
push
add
push
lods
or
xchg
add
inc
lock
push
scas
mov
mov
mov
enter
adc
adc
add
xor
fdiv
sbb
dec
mov
ret
ret
adc
ins
sub
stos
loopne
push
fcom
xor
adc
or
or
cmps
add
sub
mov
xchg
pop
test
and
xchg
out
loopne
or
xor
mov
mov
add
sbb
mov
daa
add
adc
mov
ret
das
dec
xor
pop
and
je
out
mov
add
in
push
dec
nop
dec
stos
pop
sbb
jo
les
loope
sub
or
sub
pop
movs
(bad)
fistp
add
sar
lock
jp
mov
or
cmp
inc
add
test
ret
and
add
data16
mov
fcom
ds
pop
int3
imul
sbb
mov
out
aad
sar
dec
sub
jnp
dec
dec
hlt
mov
hlt
push
dec
inc
add
nop
jne
push
das
xchg
lods
sysexit
sub
jne
and
dec
push
and
inc
or
mov
sub
sbb
mov
fsubr
inc
dec
and
and
call
popa
mov
lock
sbb
mov
fsub
and
outs
inc
add
retf
and
ds
and
add
(bad)
pusha
fs
pop
xor
and
(bad)
pop
jbe
ret
sbb
push
xchg
sbb
or
sub
add
pop
(bad)
das
out
mov
jno
(bad)
pop
scas
pop
ret
adc
pop
sub
jmp
sub
or
mov
jecxz
mov
adc
daa
mov
xchg
sbb
xor
push
inc
arpl
inc
fmul
out
enter
addr16
loopne
aad
pusha
pusha
or
inc
dec
jno
add
adc
and
add
pusha
mov
add
sbb
cmp
ret
inc
sub
cdq
or
ret
jb
pop
mov
sbb
add
pop
push
das
mov
sub
or
and
imul
outs
inc
test
push
stc
mov
push
daa
or
push
ins
cs
xchg
xchg
xchg
jle
hlt
retf
sub
pop
pop
shr
jmp
push
dec
popf
outs
xchg
fs
add
jl
dec
pop
add
pop
xchg
inc
cmp
xchg
or
add
xchg
xchg
add
daa
add
dec
or
sbb
adc
dec
pop
and
movs
adc
and
mov
add
add
add
cmp
push
call
shl
clc
mov
dec
ss
xor
lea
add
mov
data16
ds
inc
jne
test
cmp
sub
imul
dec
test
sub
add
mov
adc
pop
mov
cwde
test
and
xor
cmc
sub
xor
add
out
and
adc
push
add
mov
sub
lods
inc
clc
mov
jecxz
clc
mov
fxtract
mov
jo
mov
and
repnz
xor
xchg
pop
repnz
dec
je
call
mov
mov
inc
jge
mov
push
pop
dec
adc
and
das
lds
ins
add
xor
mov
daa
fadd
imul
outs
daa
or
sbb
sub
add
daa
add
sbb
bound
push
sbb
mov
or
pop
or
rcl
mov
lock
dec
jne
and
aas
add
adc
add
pop
xchg
sbb
test
jnp
xor
jmp
rcr
clc
sub
jecxz
retf
test
and
mov
mov
or
add
sbb
or
(bad)
loope
xor
cmp
hlt
call
push
aas
cmp
adc
and
dec
sbb
loopne
shl
xor
pushf
ret
push
sub
dec
gs
mov
xor
xor
mov
mov
enter
mov
ds
js
ss
call
mov
sub
retf
ins
loopne
push
mov
int3
out
sti
loopne
xor
xor
daa
xchg
das
add
push
adc
stos
adc
js
xor
xor
inc
mov
daa
or
in
mov
stc
add
xor
xor
popa
sets
or
push
cmc
enter
jae
cwde
xor
fmul
nop
xor
and
xor
outs
fiadd
add
lock
and
fstp
(bad)
les
mov
adc
sub
xchg
add
shl
pop
and
lea
inc
or
cmps
les
or
add
je
add
or
and
daa
sbb
je
add
ror
jp
cmp
aas
inc
or
inc
or
sbb
xor
mov
push
xor
adc
or
stos
mov
or
jmp
sbb
(bad)
sbb
and
push
clc
aaa
call
mov
mov
cwde
cmp
dec
fst
aad
test
push
mov
or
rcl
cmp
cs
icebp
pop
pop
cwde
mov
retf
inc
pop
ret
lods
or
and
sub
movs
lods
push
push
es
add
aam
nop
cmps
inc
or
call
sbb
inc
jb
mov
mov
(bad)
(bad)
jno
jns
mov
aad
mov
add
sbb
iret
(bad)
out
or
(bad)
out
jne
movs
xchg
test
inc
js
hlt
cmp
(bad)
call
sbb
or
pop
dec
inc
std
rcr
and
dec
nop
jo
movs
cld
sbb
inc
dec
in
dec
add
sbb
jle
cmp
daa
push
mov
cli
inc
jb
das
adc
sbb
sbb
int3
xchg
fisttp
xchg
sub
cvtpi2ps
(bad)
movs
scas
loopne
push
stos
mov
push
mov
neg
push
adc
sbb
sbb
sbb
sub
pop
cmp
aad
pop
inc
mov
add
hlt
dec
mov
xlat
push
xchg
xchg
dec
add
add
(bad)
xor
and
add
add
inc
mov
aas
push
or
jmp
ss
mov
or
rol
push
mov
pop
imul
or
test
xchg
dec
inc
rcl
pop
hlt
sbb
cmp
mov
imul
xchg
jnp
or
mov
lahf
sbb
pop
sbb
lahf
xor
je
aas
lock
jo
dec
clc
jnp
cmp
repz
dec
xchg
mov
xchg
xchg
rol
add
ret
dec
repz
xchg
mov
dec
or
inc
add
mov
xchg
mov
je
pusha
hlt
inc
(bad)
ret
(bad)
jno
jge
cmp
(bad)
sub
test
and
hlt
cmp
ret
hlt
jo
enter
xor
adc
sbb
fs
fld
add
xchg
or
xor
loope
mov
push
add
aaa
mov
lahf
(bad)
out
mov
lock
fimul
pop
adc
ret
jmp
xchg
push
add
sub
std
adc
and
pop
stc
adc
hlt
sbb
popa
(bad)
or
jecxz
arpl
stos
dec
push
and
repz
ins
jnp
and
cmp
je
sbb
sbb
sbb
or
sbb
call
adc
arpl
adc
inc
jmp
setne
inc
lahf
dec
push
push
aas
push
push
lock
cmp
add
ins
dec
lock
xor
pop
or
sbb
nop
das
and
lods
inc
sub
jmp
mov
cmp
pop
inc
pop
cmps
push
sbb
adc
pop
lock
inc
sub
push
and
and
pop
mov
fild
in
inc
adc
mov
shl
mov
inc
es
mov
sub
push
pop
inc
sub
inc
sub
mov
and
out
lods
(bad)
imul
mov
clc
push
push
mov
xor
push
mov
adc
xor
and
mov
nop
mov
add
cld
cli
add
jg
in
or
ret
pop
push
push
mov
stos
loopne
pop
jmp
call
lods
and
movs
test
dec
adc
int
fsubr
inc
mov
push
arpl
mov
pop
pop
inc
xor
cs
pop
daa
dec
add
loop
cmp
inc
ja
je
xor
fmul
clc
lock
test
js
cmp
mov
ret
fild
movs
popa
retf
je
(bad)
(bad)
ficomp
xor
pusha
or
dec
mov
add
cmp
dec
add
or
std
nop
aam
adc
sbb
mov
push
or
pop
retf
xor
jo
xchg
shl
sahf
ins
clc
jge
nop
jmp
push
push
sti
fsubr
push
mov
push
rcl
pusha
or
push
xchg
out
sub
cmp
mov
xchg
scas
cs
loope
adc
je
ret
pop
ret
out
sbb
jne
or
push
and
clc
je
cmp
out
or
push
mov
or
mov
push
push
or
mov
cld
shl
js
mov
xchg
retf
test
push
dec
xor
pop
or
or
xchg
pop
aaa
mov
pop
clc
xor
jmp
daa
adc
call
test
aaa
xor
pop
inc
stos
les
or
test
add
das
test
das
mov
lock
stos
bound
or
shl
add
ss
cwde
mov
cdq
xchg
and
jno
lahf
nop
push
cmc
cwde
(bad)
aas
leave
jge
push
nop
mov
sbb
dec
inc
je
and
inc
ins
jmp
mov
dec
cld
inc
add
cmp
lea
mov
add
dec
rcl
stos
xlat
ret
ret
jns
stc
add
or
xor
push
sub
sbb
sub
add
lods
es
xor
cs
and
sbb
inc
outs
shl
jo
adc
fbstp
(bad)
(bad)
(bad)
dec
test
push
lods
fimul
xor
(bad)
int
call
clc
pop
shl
cmp
retf
sub
rcl
jnp
and
lea
rcl
inc
add
push
sbb
push
(bad)
sti
(bad)
sbb
in
push
retf
movsx
push
pop
sbb
js
in
ret
cmp
pop
push
cmp
adc
pop
dec
frstor
into
ror
aam
test
ror
test
push
call
dec
repnz
pop
and
sub
test
in
paddb
add
xchg
add
adc
adc
and
popf
xor
js
mov
sti
das
adc
(bad)
les
jecxz
int3
rcl
out
add
sar
cmp
adc
(bad)
je
sbb
sbb
xor
dec
mov
sti
mov
leave
ficom
or
pop
mov
test
push
loope
mov
loop
je
xor
pop
jl
loop
or
xchg
xor
xchg
mov
cmp
jecxz
add
jl
cmp
push
sbb
lea
adc
cmp
enter
sbb
sub
and
sub
jecxz
int
sbb
adc
sbb
or
mov
pop
adc
and
enter
pop
mov
fisub
jmp
pop
ins
add
push
sub
pop
fs
ret
jno
mov
pop
in
call
in
mov
and
inc
fwait
xchg
aam
add
sbb
mov
outs
add
adc
adc
ret
mov
adc
cwde
out
or
or
push
dec
sbb
xor
inc
ja
in
push
jmp
test
sbb
je
sbb
loope
pop
ins
jle
mov
mov
xchg
xor
xchg
lock
enter
das
mov
cmp
push
mov
pop
mov
das
mov
jle
add
popa
jo
mov
or
pushf
pop
sti
mov
inc
adc
cmp
add
push
sbb
adc
add
mov
and
ror
pop
outs
pop
inc
cmps
(bad)
rol
inc
inc
popa
adc
sub
out
xor
jle
add
cmp
mov
test
shl
loope
sub
lahf
add
das
or
call
loope
sub
mov
sbb
adc
mov
mov
scas
test
popa
sbb
mov
cmp
stos
(bad)
cmp
sub
sbb
sub
test
sub
sbb
in
add
or
jb
inc
adc
rol
or
jle
jns
adc
mov
inc
mov
and
push
inc
sub
adc
pop
adc
nop
popa
sub
shl
push
repnz
loope
sbb
mov
inc
push
push
dec
jg
sub
fst
or
mov
fstp
mov
cld
push
cmp
jae
ret
lods
cmp
rcl
or
cld
push
mov
inc
cld
outs
xor
fimul
sbb
rcl
ret
push
test
(bad)
inc
jle
ins
inc
xchg
add
test
sbb
pop
lahf
dec
mov
xchg
popa
fmul
mov
rcr
lea
push
outs
adc
push
add
add
out
pop
sub
stc
aad
jmp
xchg
dec
or
fistp
push
xor
(bad)
push
add
xor
and
scas
sbb
mov
push
cmp
ds
das
call
js
jg
xchg
and
movs
dec
xchg
and
pop
or
jns
mov
push
dec
mov
jl
fs
add
sub
push
or
dec
mov
stc
adc
fisttp
or
mov
aaa
adc
loopne
and
dec
pop
sbb
adc
js
push
xlat
daa
xchg
push
or
adc
pop
add
clc
mov
mov
sub
or
add
mov
push
movs
mov
fisttp
or
inc
or
cmp
adc
ror
cmp
loop
dec
mov
dec
xchg
aas
inc
ins
aas
push
pop
mov
pushf
xor
inc
(bad)
mov
mov
xchg
stos
cmc
dec
pop
pop
nop
jo
mov
inc
add
setbe
xchg
sbb
imul
call
pop
dec
xor
add
movs
inc
ins
rol
push
pop
in
mov
add
cmp
push
enter
aad
pop
movs
ja
xchg
rol
ja
ja
dec
inc
fld
leave
jp
dec
push
push
lahf
cmp
test
inc
cmp
xchg
es
push
xchg
movs
mov
sub
pusha
sub
push
mov
neg
xor
jg
and
pop
(bad)
mov
hlt
push
cld
popf
test
arpl
jo
ins
push
sub
pop
and
iret
adc
shr
push
and
push
(bad)
xchg
jge
or
pop
pop
aam
add
cmp
xchg
ret
pop
ds
pop
mov
jg
jo
dec
push
lock
pop
imul
pop
dec
sti
cs
call
add
rcr
outs
sbb
imul
sub
enter
push
test
rol
mov
and
ss
sbb
push
dec
cmp
or
and
xchg
loope
and
cmp
add
inc
lods
mov
es
inc
lea
adc
mov
mov
or
scas
adc
dec
sbb
or
fadd
inc
addr16
sbb
add
jno
cmp
push
pop
sahf
std
cmps
icebp
pop
retf
jns
or
xchg
xchg
lock
fdivr
mov
adc
jp
in
mov
and
sbb
popf
push
pop
push
std
test
sub
fwait
out
fisub
int
mov
call
mov
xlat
neg
inc
ret
add
jne
(bad)
das
push
cli
adc
mov
add
or
loopne
dec
gs
inc
cwde
jmp
cmp
jne
add
xchg
add
jmp
retf
shr
lds
or
je
adc
cmp
lahf
or
and
push
jns
adc
add
add
popa
clc
sbb
add
nop
dec
lods
aam
mov
sbb
push
xchg
clc
sbb
push
mov
rcr
(bad)
xchg
call
mov
pop
test
ja
jmp
jae
adc
inc
or
add
jne
iret
or
push
movs
into
push
or
fld
jmp
(bad)
push
clc
pusha
inc
mov
dec
ss
add
add
pop
add
add
sub
push
cmc
ss
sahf
lea
sbb
mov
out
in
cmp
cmp
neg
adc
adc
inc
add
fisttp
lods
ss
fistp
outs
test
jecxz
or
loopne
cmp
inc
add
and
adc
sbb
pop
cs
stc
sbb
lea
cmps
hlt
cmp
sub
cmps
add
sbb
je
inc
pop
add
jne
mov
jmp
and
or
ins
out
push
push
loop
inc
cmp
mov
aam
jp
outs
cmp
jmp
and
push
push
or
sub
inc
adc
inc
sbb
hlt
rol
push
and
pop
cli
aam
fsubr
(bad)
lea
adc
push
lods
cmp
inc
cmp
mov
lock
xor
jbe
xchg
aam
js
ror
not
outs
dec
mov
mov
rcl
(bad)
add
or
(bad)
in
mov
inc
pop
pop
aas
loop
pop
repnz
fld
movs
mov
sbb
mov
sub
add
mov
xor
shl
call
dec
add
mov
or
mov
imul
ret
jmp
jmp
sbb
add
push
bound
or
das
arpl
jmp
jmp
push
je
movs
inc
and
(bad)
dec
repz
or
add
loope
lea
mov
xor
or
aaa
call
mov
loopne
dec
loopne
inc
pop
dec
loopne
test
or
test
or
call
push
inc
and
push
inc
xchg
or
adc
repz
cmp
aas
into
xor
(bad)
fmul
cmp
xlat
push
push
bound
push
(bad)
loope
test
lock
pop
and
pop
call
cmp
in
and
(bad)
push
inc
shl
mov
inc
cmp
push
push
add
mov
xchg
arpl
xor
mov
adc
adc
mov
mov
call
std
or
add
push
xchg
add
mov
out
pusha
rcl
nop
dec
ret
inc
add
add
lods
pusha
and
and
inc
cmp
mov
dec
emms
mov
cld
daa
aaa
loopne
inc
add
pop
add
inc
test
pop
mov
dec
fmulp
cmps
push
test
pop
mov
ss
inc
out
add
test
add
adc
scas
mov
cmp
push
psubsb
xor
test
sub
out
push
mov
sub
sub
or
dec
arpl
mov
test
shr
loop
inc
repz
inc
out
js
in
xor
sub
ror
xor
push
sbb
lea
aaa
mov
arpl
add
push
stc
pop
inc
clc
xchg
push
sbb
mov
aas
lea
pushf
movs
int
pop
cmp
mov
add
test
pop
js
jbe
cmp
ret
dec
fwait
test
add
les
inc
add
push
add
test
jle
inc
out
inc
adc
dec
js
xchg
movs
fsub
pop
mov
scas
push
or
adc
pop
jo
xrelease
jo
cmp
mov
loopne
and
mov
xchg
out
or
and
repnz
xchg
rcl
pop
addr16
cmp
jmp
fisubr
or
pop
(bad)
sub
xlat
pop
add
push
xor
lods
pop
fisttp
lods
and
and
or
push
or
aas
xlat
rcr
xor
dec
sbb
cmp
mov
jmp
push
push
add
pop
push
cmp
dec
jne
mov
dec
add
call
nop
je
test
xchg
jno
push
add
or
mov
lods
jmp
mov
xchg
add
mov
ins
pop
jo
dec
cmps
push
dec
push
rol
push
or
fst
cli
add
ja
inc
xor
sbb
test
fcom
sbb
test
inc
adc
dec
mov
push
jb
ret
getsec
inc
pop
sbb
and
inc
add
iret
or
stos
enter
or
out
xchg
jae
call
pop
jo
test
mov
pop
adc
test
dec
jnp
dec
movs
popa
rol
or
mov
sbb
ror
sbb
into
imul
lock
movzx
push
dec
add
or
in
scas
ror
sti
mov
xchg
imul
inc
in
kmovw
loope
add
pop
dec
cmp
das
sbb
sbb
dec
sub
mov
cmp
xor
add
sub
sar
cs
enter
push
fnstsw
lods
xor
popa
dec
push
dec
and
add
xchg
aas
popa
jns
movs
jbe
lea
or
in
mov
inc
es
or
pop
and
sub
push
retf
les
push
lock
pop
pop
dec
rcl
xor
add
mov
ins
or
aaa
test
call
inc
ret
jno
mov
push
sbb
push
loope
jmp
add
jne
loope
dec
inc
in
sbb
inc
ret
xchg
movs
add
adc
loopne
xlat
mov
ds
inc
or
pop
fwait
mov
bound
adc
adc
xchg
mov
cmp
cmps
mov
adc
add
add
shl
xchg
sbb
arpl
and
dec
push
push
dec
mov
dec
jecxz
jo
xchg
ja
add
jo
mov
lock
jmp
frstor
add
inc
adc
push
or
xor
icebp
aad
popa
lods
and
add
jne
and
int3
mov
or
add
test
test
(bad)
and
adc
push
loope
jmp
xor
arpl
aas
sbb
pop
mov
jnp
dec
sbb
cmp
mov
out
aaa
lock
(bad)
(bad)
mov
adc
mov
fild
jae
repnz
pop
sbb
les
sub
pop
fst
add
adc
inc
sub
xor
cmps
addr16
push
lahf
add
js
add
scas
test
inc
xchg
lods
pop
mov
jecxz
mov
pushf
loope
(bad)
push
mov
inc
je
lea
lea
pop
ror
dec
sbb
adc
je
dec
fnstsw
popf
push
add
add
push
jmp
or
je
dec
add
xor
cmp
jo
ins
xor
cs
and
push
test
jmp
jbe
push
cmp
sbb
add
or
popa
mov
cmp
add
xchg
push
imul
mov
je
mov
jge
jl
mov
jnp
lahf
xor
add
sub
dec
mov
loopne
mov
sub
out
add
inc
or
mov
in
jp
or
cmps
dec
jb
scas
dec
fmul
dec
xchg
pop
inc
jne
nop
jge
mov
std
lea
dec
adc
(bad)
call
pop
scas
dec
sub
add
push
jge
cmp
das
mov
and
mul
push
ds
daa
xchg
popa
cmp
data16
sub
out
xchg
mov
mov
dec
inc
cmp
ja
jg
cmp
jnp
cmp
sub
add
add
add
sub
lock
jns
(bad)
push
add
jg
mov
(bad)
xor
ret
sub
jg
in
rcr
pop
cmp
jne
js
out
inc
dec
push
cmp
jg
dec
sbb
push
inc
jmp
test
xor
imul
(bad)
mov
push
adc
cmp
data16
dec
add
jmp
ret
and
aas
xor
pop
test
(bad)
mov
call
outs
mov
outs
mov
dec
mov
jno
addr16
in
jo
adc
cmp
push
add
fld
push
mov
(bad)
dec
add
sub
or
(bad)
and
sbb
shl
fiadd
and
ja
jae
add
or
sub
lds
fist
pop
ret
enter
lock
xor
jne
outs
or
test
push
imul
or
push
popf
xchg
dec
in
das
pop
push
mov
pop
pop
mov
push
adc
dec
ins
pop
fsubr
cmp
(bad)
bound
push
in
sbb
pop
aaa
jmp
add
mov
inc
data16
inc
in
imul
cmp
add
(bad)
fisttp
mov
inc
add
add
or
ret
and
inc
mov
adc
inc
mov
mov
mov
sar
dec
or
hlt
dec
outs
inc
lock
imul
sub
adc
mov
lods
xlat
dec
mov
push
xor
aaa
xchg
jecxz
push
mov
lods
pop
fimul
jge
adc
push
sbb
(bad)
push
sbb
sahf
or
mov
mov
adc
or
mov
pop
adc
xor
xor
fdivr
outs
daa
outs
dec
inc
out
leave
adc
shr
adc
cmp
sub
jmp
mov
jo
or
adc
inc
lods
push
cdq
pusha
add
inc
xor
add
lods
test
jl
xor
(bad)
rol
stos
mov
mov
inc
retf
mov
dec
cmp
and
jecxz
mov
call
inc
and
stos
sub
ret
aam
or
pop
mov
loope
lea
pop
inc
mov
cdq
(bad)
mov
movs
ins
xlat
lea
ret
pop
or
out
xchg
inc
stos
sub
mov
sub
ja
mov
data16
lock
and
movs
div
adc
pop
dec
cmp
ins
stc
push
test
enter
add
push
mov
or
and
cmp
hlt
call
cmps
outs
xor
pop
or
mov
popa
enter
daa
dec
add
or
outs
xlat
loopne
add
movs
or
add
xchg
or
or
call
mov
inc
loopne
loopne
ror
sbb
nop
cs
jae
cmp
push
ins
fild
stos
mov
push
pushf
aam
les
ret
pop
mov
dec
or
shl
xor
ret
out
or
push
push
mov
add
call
add
loop
jbe
clc
add
and
jo
pop
enter
fisub
cld
push
popa
add
data16
and
pusha
(bad)
dec
mov
mov
mov
imul
sub
sub
jge
jno
test
fisub
add
adc
fs
push
out
push
fiadd
xchg
out
inc
in
icebp
rcr
add
push
sub
add
cwde
aam
push
inc
loope
add
ficom
mov
xchg
mov
inc
imul
and
push
mov
ins
or
mov
xor
imul
inc
ss
das
push
sub
pop
xor
push
mov
or
cmp
jbe
or
rol
dec
mov
dec
or
shl
jb
adc
inc
clc
test
ror
add
fisttp
outs
jns
in
jno
lock
test
hlt
xor
adc
sbb
pop
xor
icebp
aam
int3
jmp
add
and
mov
clc
pop
add
add
loopne
add
int3
pop
adc
pop
std
icebp
jno
mov
clc
add
or
add
ja
and
adc
add
pusha
inc
jbe
adc
into
dec
xchg
mov
or
sbb
leave
call
jns
jb
fwait
add
loopne
and
add
xlat
call
pop
nop
and
test
xor
fdivr
(bad)
add
mov
push
sbb
rol
mov
test
and
shl
loope
add
adc
lea
ror
or
xchg
les
cmp
and
sub
or
outs
inc
xor
dec
sbb
ret
mov
inc
fisttp
and
fdiv
jno
jne
sbb
loopne
rol
cmp
(bad)
mov
add
add
pushf
xchg
lock
sub
rol
shl
jmp
mov
mov
or
cmp
push
into
std
add
push
dec
pop
pop
inc
inc
call
dec
pusha
rol
or
mov
adc
les
sbb
push
push
cdq
jle
loopne
add
test
inc
pop
or
and
add
and
pop
push
xlat
ja
sub
loopne
push
and
lods
push
or
cs
or
sub
adc
js
rcr
clc
or
in
push
pop
clc
xor
ss
push
shr
mov
inc
cmp
loope
cmp
fidiv
lods
or
xchg
loop
mov
mov
into
outs
adc
adc
push
sbb
push
jno
cwde
int
rcl
inc
mov
mov
popf
retf
jmp
je
rcl
pop
nop
fdiv
leave
xchg
lea
add
fs
pop
sbb
popa
xor
jmp
inc
add
in
inc
adc
sar
push
mov
and
adc
ror
mov
lock
xchg
jmp
cmp
je
mov
movs
add
adc
add
out
mov
ja
lea
retf
push
inc
or
adc
aam
mov
ret
je
push
mov
adc
xor
cmp
push
js
or
push
(bad)
mov
mov
inc
fistp
out
mov
inc
cmp
push
lock
call
jnp
adc
inc
jo
sbb
mov
clc
sbb
mov
rol
push
xchg
xor
int3
mov
mov
or
push
out
xchg
xor
sbb
inc
dec
rol
pop
mov
inc
push
mov
arpl
mov
test
inc
sti
(bad)
pop
call
je
jmp
mov
inc
js
or
cld
imul
sbb
adc
sbb
jge
mov
gs
and
imul
movs
sbb
les
lods
and
not
push
(bad)
data16
lahf
clc
adc
push
mov
adc
xor
dec
lea
mov
ret
fcom
dec
sbb
shr
pop
ret
scas
enter
out
push
pop
gs
in
push
jns
ror
mov
dec
clc
pusha
ins
rcl
add
push
sub
jns
pop
adc
and
mov
push
xor
inc
cmp
aas
push
mov
or
mov
adc
repz
cmp
je
outs
and
mov
hlt
imul
pop
ret
scas
test
shl
(bad)
dec
mov
loope
cmp
dec
mov
push
cmp
adc
push
sub
add
sar
inc
bound
(bad)
ror
ins
jge
les
pop
imul
or
add
push
push
add
pop
or
adc
fcomp
or
call
and
add
sar
add
mov
add
call
ds
pop
aaa
adc
jecxz
inc
sub
adc
or
icebp
mov
xchg
sub
inc
jbe
xchg
push
fdiv
mov
push
sar
mov
cmp
add
xor
push
sub
sbb
aaa
nop
and
cmp
sub
(bad)
sub
adc
jbe
sub
pushf
cwde
adc
sahf
outs
add
dec
leave
adc
ret
push
dec
adc
inc
jl
out
and
sbb
out
dec
stc
loopne
daa
and
add
sbb
rol
or
jmp
cmp
dec
jbe
pop
and
jns
add
and
or
xchg
sub
test
push
jle
fnstcw
and
dec
jmp
inc
push
xor
inc
adc
je
ss
jns
sbb
(bad)
jno
mov
and
mov
cwde
and
dec
inc
sbb
rcl
add
leave
(bad)
fisubr
sbb
pusha
add
adc
jo
xor
je
xor
ror
in
sbb
mov
stos
add
lock
je
add
mov
jge
add
or
popa
mov
add
add
pop
aam
xor
push
mov
sbb
add
cmp
lea
fidivr
sbb
mov
push
sbb
add
mov
enter
sub
js
pop
rol
stos
mov
test
neg
pop
or
xchg
test
jl
arpl
jo
sbb
adc
xchg
retf
je
mov
cli
inc
(bad)
jmp
pushf
dec
jne
dec
jne
ror
out
mov
and
add
push
in
push
ss
(bad)
inc
hlt
pop
test
pop
add
adc
inc
jbe
movs
clts
dec
pop
and
lock
or
mov
addr16
aas
push
push
xchg
(bad)
or
jmp
jb
adc
cmp
push
loope
loop
inc
mov
pop
mov
fidiv
mov
adc
cmp
and
sub
outs
jne
ins
mov
mov
mov
jb
xor
daa
pminsw
add
push
push
sbb
mov
(bad)
in
adc
adc
lock
cmp
jne
jl
xchg
addr16
pop
pusha
ins
loopne
test
add
or
cmps
add
fsub
inc
xor
xor
and
and
add
jne
push
xor
or
sub
popa
push
call
cmp
retf
adc
push
rcl
rcr
jne
dec
ficom
ror
and
fiadd
vprotw
cmp
out
push
sbb
clc
jg
movs
push
jb
aam
xor
or
mov
les
cmc
inc
and
cld
fdivr
push
xchg
(bad)
jb
adc
push
and
emms
pop
lock
xchg
pop
pop
and
xor
hlt
sti
mov
jecxz
lods
sub
mov
mov
or
shl
test
lds
xchg
add
add
jmp
jb
mov
sbb
cmp
or
aad
or
cmp
sbb
mov
inc
mov
sbb
jp
cmova
sub
add
jb
push
or
test
or
sahf
hlt
pop
ret
and
cvtdq2ps
sbb
pop
xor
rcl
cmp
out
or
dec
add
mov
sub
loope
lods
jmp
push
lea
dec
add
jo
rol
inc
adc
xor
add
aas
inc
adc
das
pusha
sub
inc
cmp
fcom
div
xchg
test
sbb
or
ret
sub
ror
cmp
mov
inc
div
adc
inc
cld
xchg
adc
sub
inc
push
cwde
mov
test
aas
stos
and
mov
test
pop
sub
add
push
or
sahf
mov
cld
(bad)
stos
pop
aaa
jl
mov
inc
clc
enter
dec
movs
or
movs
cld
inc
je
imul
xor
jmp
outs
movs
loop
adc
js
xchg
dec
add
cmp
loope
pop
sub
ja
mov
clc
add
out
push
ds
aam
adc
mov
sbb
xchg
dec
or
lock
adc
push
aam
push
add
push
fmul
loop
sbb
mov
in
retf
dec
sar
inc
outs
pop
mov
mov
push
test
push
pop
xor
sub
dec
xor
xlat
push
add
cmp
jb
or
sbb
mov
ins
dec
hlt
xchg
fbld
push
fmul
out
daa
push
stos
push
test
or
(bad)
mul
mov
push
inc
repz
je
dec
jmp
rcr
(bad)
idiv
push
dec
sub
add
mov
call
sbb
popf
xchg
ret
inc
push
xor
or
mov
icebp
and
xor
sbb
mov
pop
fs
loope
sbb
dec
mov
loope
sub
enter
xor
dec
dec
cmp
mov
ins
sub
pop
les
mov
in
xlat
dec
dec
loop
jnp
fcomp
arpl
inc
std
int
xchg
jne
stos
rol
js
les
mov
stos
jg
xor
pusha
pop
loop
bound
je
and
xor
pop
ficomp
xlat
mov
(bad)
aam
cmp
dec
mov
or
cli
push
hlt
sbb
sub
in
jmp
test
in
gs
mov
cmp
aam
sbb
add
sbb
add
or
sub
inc
adc
or
sub
mov
iret
inc
inc
loop
enter
cmp
or
xor
cmc
adc
in
mov
add
or
cs
aas
fdiv
sbb
(bad)
sub
in
inc
dec
add
xor
adc
sbb
or
sub
xlat
outs
mov
and
cli
addr16
mov
or
jae
inc
lods
jge
push
mov
push
ins
les
fs
sub
mov
dec
into
dec
(bad)
sbb
sbb
mov
mul
enter
bound
and
test
sub
and
jo
xor
lea
(bad)
stos
inc
pop
ja
ret
in
and
or
mov
push
arpl
xor
sub
add
(bad)
push
add
sbb
push
jmp
(bad)
push
jae
mov
cmps
sar
xchg
mov
int
jo
aaa
xchg
xchg
rol
push
or
cmp
fiadd
fbstp
scas
inc
mov
add
or
mov
pop
sbb
stc
inc
or
xchg
bound
scas
cmc
adc
test
mov
pop
cmp
test
inc
and
inc
pop
(bad)
xchg
sub
sbb
dec
xor
adc
inc
add
pop
add
xchg
sbb
push
dec
add
lds
(bad)
sub
xchg
dec
push
and
ror
push
call
mov
inc
xor
pusha
test
push
sbb
or
and
lea
ret
in
inc
dec
sub
jno
call
xchg
lods
dec
in
xor
cmp
(bad)
dec
fdivp
test
or
mov
mov
add
pop
inc
inc
jnp
pop
adc
cmp
shl
jge
cmp
pop
and
lock
xchg
push
pop
sub
arpl
fcomp
fcomp
mov
xchg
inc
sub
arpl
or
cmp
aas
and
inc
in
jge
and
test
rcl
mov
sbb
sub
sub
out
pop
fs
scas
add
aas
es
inc
add
dec
push
jl
and
inc
imul
(bad)
jmp
jmp
sets
mov
fild
inc
aas
dec
mov
or
rcl
xor
cdq
pop
ret
sub
pop
sbb
pop
ret
push
test
inc
xor
test
aaa
retf
push
dec
das
lock
aam
xchg
clc
sub
(bad)
(bad)
mov
jnp
pop
inc
je
pop
in
mov
cmp
jmp
mov
pop
mov
xacquire
jmp
mov
xor
mov
push
add
jmp
or
pop
cmp
mov
xchg
dec
inc
mov
and
cmp
mov
adc
ja
(bad)
out
sahf
xlat
mov
push
mov
les
lahf
out
adc
jmp
add
add
or
adc
inc
call
pusha
inc
or
and
add
ret
cmp
lods
or
pop
mov
pop
push
xor
dec
mov
xchg
mov
nop
dec
xor
mov
inc
push
xchg
arpl
xor
in
mov
sbb
sub
or
xchg
hlt
mov
add
mov
lds
add
add
sub
jmp
push
loope
mov
aaa
loope
fstp
add
add
push
sbb
clc
xchg
push
jo
rcl
jl
cmps
sbb
xchg
enter
ret
int3
jecxz
rcl
or
fmul
push
inc
add
or
cld
jp
jo
ret
or
mov
dec
outs
daa
test
and
lahf
les
xchg
cmp
and
data16
sub
test
hlt
jb
cmp
xchg
xlat
and
mov
loop
pop
pop
test
movs
imul
inc
js
pop
out
mov
(bad)
xor
jo
iret
mov
mov
lock
pop
or
icebp
addr16
jbe
dec
ret
sub
push
mov
(bad)
adc
jp
in
aas
movzx
push
mov
les
test
(bad)
(bad)
push
(bad)
sbb
dec
add
add
cmp
je
add
call
jl
and
sahf
ins
pop
dec
int
in
sbb
dec
in
ret
xchg
movs
cmc
mov
cmps
dec
int3
mov
jmp
aad
dec
mov
test
push
fcom
mov
xchg
fisttp
sbb
xor
lea
jge
cmps
adc
xchg
pop
push
jb
add
jno
cmp
and
pop
fwait
rcl
push
adc
fwait
repnz
add
imul
movs
pushf
inc
sub
aaa
mov
mov
data16
sbb
push
add
and
jmp
push
arpl
das
push
repz
mov
inc
pcmpeqb
dec
bound
fiadd
rcl
jne
cmovnp
push
cmp
out
mov
inc
or
xor
or
sub
adc
push
fisub
clc
sbb
or
adc
daa
iret
ss
jp
in
inc
pop
int
sub
stos
add
aad
pop
inc
jmp
imul
or
or
shl
inc
add
xchg
sar
movs
inc
inc
xchg
inc
daa
add
int
int
push
pop
xchg
inc
iret
jmp
xchg
mov
add
mov
dec
and
leave
cmps
cmp
mov
enter
inc
fnstsw
fsub
sub
in
test
xchg
mov
xor
aaa
daa
adc
mov
add
jle
js
sub
xchg
fs
cmp
mov
and
loopne
adc
cmp
push
sub
inc
xchg
lods
xchg
pop
ins
adc
pop
cdq
sbb
xor
mov
les
xor
rcr
xchg
mov
inc
es
sbb
scas
xchg
xchg
dec
cmp
pop
pop
dec
rcl
lds
je
inc
ret
les
mov
lods
les
adc
adc
or
(bad)
les
add
mov
cmps
add
add
mov
cwde
jmp
stc
dec
sbb
hlt
xor
popa
inc
loop
movlps
or
or
add
in
jge
jge
rol
inc
stos
std
pop
mov
ror
lock
cwde
dec
test
loopne
mov
cmp
mov
pop
fcmovu
add
cdq
sbb
dec
add
inc
or
sbb
cdq
ja
lahf
aam
push
or
clc
adc
fisttp
sbb
push
in
push
xchg
lods
xchg
inc
fnclex
and
(bad)
jns
dec
or
inc
xchg
retf
cmp
test
or
adc
cmp
jne
inc
cmp
shl
dec
test
xchg
cmp
pusha
dec
or
add
inc
hlt
mov
sbb
push
inc
and
adc
call
add
and
test
imul
pop
jne
pop
ja
lock
cwde
mov
sbb
pop
ret
aaa
shl
xor
in
add
mov
push
push
push
fwait
test
add
inc
enter
(bad)
(bad)
stc
pop
ja
and
bt
jae
or
inc
mov
or
jg
clc
add
adc
call
pop
pop
je
(bad)
fmul
mov
loopne
pushf
mov
add
out
pop
cmp
cmp
add
add
and
or
xor
mov
lods
mov
add
add
out
pop
jbe
and
test
sbb
cmp
mov
add
mov
push
mov
aas
(bad)
shl
or
or
fldenv
sbb
mov
add
dec
fadd
out
div
and
and
outs
fistp
aaa
add
loopne
adc
adc
sbb
inc
add
and
or
or
clc
imul
adc
outs
imul
add
pop
add
pop
pop
pop
mov
pop
out
and
bound
or
mov
(bad)
jmp
sbb
cs
adc
cmp
inc
add
shr
(bad)
popa
and
rol
clc
xchg
popf
jns
add
add
test
add
xor
sbb
cmp
fdiv
mov
xchg
ret
xchg
xchg
push
mov
adc
dec
and
aaa
int
inc
mov
loopne
sub
jns
daa
push
es
das
(bad)
push
sbb
adc
adc
inc
call
shl
adc
add
retf
pop
xor
xchg
inc
or
loop
int
lahf
cmove
leave
leave
repz
js
stc
repnz
in
mov
jae
jb
lods
shl
push
adc
sub
rol
push
adc
dec
pop
leave
je
(bad)
cmp
enter
dec
add
jae
dec
shl
add
or
rol
imul
push
fsub
inc
scas
or
sub
pusha
sbb
enter
add
test
fsub
sub
out
inc
imul
aaa
outs
fadd
pop
inc
dec
mov
or
pushf
adc
pop
ror
or
cmp
or
push
xor
xor
sub
pusha
daa
dec
sbb
add
js
or
sbb
loop
in
inc
in
or
mov
inc
inc
test
xchg
lock
imul
les
dec
fld
or
shl
sub
add
mov
xchg
mov
inc
ss
inc
sbb
sbb
inc
mov
pop
stos
pop
daa
pop
inc
sub
adc
push
leave
mov
rol
aas
sar
or
adc
icebp
mov
or
cmp
pop
cmps
push
sbb
loopne
sbb
popf
inc
and
cmp
pop
add
mov
nop
push
inc
pop
jo
je
jne
out
mov
cmp
js
mov
dec
sub
inc
sahf
pushf
pushf
mov
pop
jo
dec
xchg
fadd
adc
adc
cmc
fs
add
movs
outs
sbb
push
mov
pop
cmp
cmps
dec
leave
mov
sbb
lods
pusha
cmps
adc
cmp
sbb
aaa
addr16
loope
inc
or
xchg
jg
inc
add
dec
jne
or
and
jno
ins
sub
and
cmp
inc
or
push
jae
push
dec
adc
cmp
push
add
inc
inc
mov
push
xchg
and
cmp
cmp
dec
adc
pusha
cmps
retf
dec
sbb
mov
or
pop
movs
push
sub
ins
xchg
xor
inc
add
pusha
daa
fld
adc
stos
add
add
cmps
xchg
imul
pop
sbb
push
shr
xor
mov
mov
and
dec
add
mov
test
fistp
test
fimul
adc
leave
dec
imul
xchg
out
fs
gs
call
dec
popf
nop
test
xchg
mov
test
push
sbb
dec
add
inc
in
gs
jae
pushf
and
in
test
and
xor
fcomp
cmps
lea
push
add
jne
push
adc
in
inc
(bad)
and
sbb
mov
and
mov
push
gs
xchg
mov
imul
shl
mov
pop
out
stos
cmp
fcmovnb
aas
cmp
sub
cs
adc
cmps
mov
mov
push
loopne
mov
mov
inc
mov
inc
mov
adc
popf
inc
xchg
mov
out
ret
or
mov
mov
sbb
add
adc
add
(bad)
and
xor
call
or
hlt
or
mov
retf
pop
jmp
fcom
stos
push
dec
push
dec
mov
enter
add
xlat
inc
ficom
or
sub
push
inc
fild
add
fidivr
ins
mov
add
jns
add
ins
lods
mov
dec
mov
push
push
inc
mov
or
dec
inc
nop
ds
aas
std
and
inc
es
cmp
inc
or
lahf
inc
pop
fistp
mov
int3
dec
push
push
pop
dec
jnp
fld
inc
inc
cmps
mov
push
lods
push
ror
or
hlt
cmp
jo
jp
inc
cmp
add
xlat
push
lods
xchg
xor
jae
pop
cmp
and
xor
ja
sub
lods
out
cmp
mov
dec
test
xchg
xchg
push
(bad)
cmp
mov
in
cld
inc
cmp
push
cmp
add
adc
pop
sbb
bound
das
push
adc
mov
rcr
mov
mov
or
or
stc
popf
sbb
das
sahf
mov
sub
outs
adc
jge
inc
out
push
pop
cmp
lea
cmps
sub
cmp
inc
loop
jmp
and
xor
ins
in
adc
in
adc
rcr
(bad)
mov
in
pop
adc
push
inc
push
mov
ret
imul
js
pop
aas
mov
cdq
dec
dec
mov
lock
adc
push
pushf
out
adc
dec
adc
inc
dec
dec
inc
pop
inc
push
push
fmul
or
jo
sti
adc
inc
jne
outs
aam
or
movs
lods
push
cmp
cli
jae
sbb
adc
push
push
ja
adc
mov
or
in
inc
cwde
sub
out
jmp
cmp
ja
cmp
scas
iret
outs
out
(bad)
mov
das
je
push
dec
test
mov
xor
arpl
cmp
gs
dec
jne
imul
xor
test
mov
mov
shr
mov
inc
add
mov
pushf
(bad)
mov
add
sar
sbb
adc
inc
push
neg
sbb
(bad)
jbe
pushf
pushf
pushf
mov
je
ins
push
fs
pop
pop
pushf
pushf
pushf
pushf
push
push
dec
dec
pushf
pushf
pushf
pushf
inc
inc
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
pushf
pushf
pushf
pushf
adc
or
sbb
jo
xor
and
call
popa
ror
mov
xor
and
push
mov
loope
movs
push
jmp
add
adc
mov
bound
daa
lods
addr16
cld
jg
lds
push
or
inc
push
inc
dec
dec
push
mov
or
mov
push
mov
xor
cli
in
call
push
outs
jo
xor
sub
rcr
std
push
pop
nop
push
stos
pop
pop
pop
aaa
pusha
call
inc
push
push
push
push
and
out
arpl
nop
das
int3
enter
int3
enter
pop
jb
(bad)
shl
sbb
mov
(bad)
out
or
les
mov
fcomp
jle
dec
fcom
je
sahf
push
cld
(bad)
mov
mov
xchg
retf
test
lods
mov
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
fcomp
loopne
xchg
xchg
xchg
xchg
call
retf
xchg
xchg
clc
cld
add
add
xchg
xchg
xchg
or
adc
xchg
xchg
xchg
sbb
and
xchg
xchg
xchg
sub
xor
xchg
xchg
xchg
cmp
inc
xchg
xchg
xchg
xchg
dec
dec
push
push
cmps
xchg
xchg
xchg
pop
pop
pusha
cmp
add
add
adc
(bad)
xor
bound
push
mov
cmps
sti
mov
pop
pop
jns
mov
add
loopne
dec
and
mov
ds
fisttp
and
fcom
cdq
push
gs
sub
mov
mov
test
fmul
xchg
xchg
mov
in
or
and
xlat
and
mov
xor
aam
mov
test
push
movs
xor
xchg
in
sbb
in
and
lock
fcomp
nop
retf
clc
sti
and
ins
add
mov
gs
add
or
xchg
add
pop
mov
adc
adc
xor
xchg
add
pop
sbb
push
push
movs
jl
test
sbb
call
sub
mov
nop
sub
dec
cmp
inc
sub
adc
inc
aam
mov
and
mov
test
push
movs
xor
rcr
nop
retf
pop
cld
pusha
cmp
jnp
mov
adc
fwait
inc
loope
retf
sub
xor
adc
sub
imul
or
push
aaa
sbb
inc
add
jae
cmp
arpl
test
dec
dec
xor
push
push
xchg
ja
or
ja
fidiv
jae
addr16
aad
xor
xchg
dec
push
or
pop
xchg
jb
sbb
dec
dec
xchg
js
push
jae
and
stos
addr16
mov
dec
out
imul
test
inc
(bad)
dec
add
xchg
mov
ficom
jae
xchg
sbb
mov
and
ja
arpl
ja
push
cld
and
aaa
push
jb
add
test
xchg
cs
or
cmp
xlat
outs
or
dec
pop
xor
jbe
adc
fsubr
icebp
jne
outs
xor
je
and
adc
fdiv
mov
pop
lods
push
add
ret
or
and
add
and
aaa
xchg
pop
push
dec
inc
mov
aaa
mov
neg
or
dec
jae
(bad)
imul
xchg
jp
popa
inc
ss
adc
jae
inc
pop
pop
pop
test
push
push
push
jnp
test
aas
and
push
xchg
add
cwde
pusha
cmp
dec
dec
pop
imul
add
lds
ss
xlat
inc
adc
add
es
loope
stos
scas
dec
mov
xor
push
mov
pop
add
ss
add
push
adc
or
ins
jae
imul
shl
lods
and
mov
mov
jnp
cmp
cmps
shl
shr
jno
test
xlat
cmc
jbe
dec
lods
lock
je
call
(bad)
or
cmp
add
retw
es
push
call
mov
mov
arpl
pop
leave
cdq
retf
cmp
add
dec
dec
dec
push
dec
push
aad
jmp
mov
js
jle
push
(bad)
in
xlat
scas
mov
in
inc
push
ss
call
cmp
add
in
(bad)
nop
inc
push
in
fcom
pop
js
aam
shl
add
ret
push
pushw
pushf
add
push
out
lahf
fdivr
mov
inc
repnz
push
aad
pop
push
adc
cwde
push
ror
out
es
rcr
add
aam
(bad)
inc
inc
xor
(bad)
pusha
ja
add
push
imul
push
sahf
outs
cmp
leave
inc
lock
inc
cmp
jle
mov
add
sar
fild
push
push
dec
adc
inc
mov
push
push
xor
add
xor
and
add
hlt
jns
call
cmp
scas
iret
fs
or
fadd
mov
lock
rcl
cmc
sbb
xor
adc
lea
dec
add
rcl
or
cmp
ret
inc
jg
push
dec
ins
adc
add
xchg
popf
sbb
pop
inc
pop
xor
lock
jo
popa
xchg
sbb
add
pop
fdiv
sub
adc
sub
aad
adc
adc
or
add
dec
ret
and
add
sbb
xor
cli
sub
dec
aad
mov
and
jo
push
aaa
nop
sbb
or
rol
cmp
dec
cmp
les
sbb
arpl
(bad)
rol
pop
pop
fcomp
and
mov
or
mov
(bad)
out
mov
inc
fidiv
ss
adc
sbb
fcmovnu
les
or
add
test
or
add
push
add
popa
jl
mov
mov
test
cmp
xor
pop
add
ret
inc
bound
and
out
lds
inc
sbb
or
inc
sub
shl
or
aas
sbb
int3
push
imul
add
mov
add
sbb
ror
mov
mov
mov
mov
aas
jno
mov
add
loopne
aam
cmps
dec
int
es
pop
inc
rol
or
jae
lods
std
add
adc
or
bound
or
(bad)
out
loop
add
in
mov
addr16
loopne
mov
push
mov
je
out
js
pusha
and
aaa
ins
fdivr
adc
aam
xor
hlt
mov
push
ficomp
dec
cmp
xchg
mov
adc
dec
adc
xor
mov
sahf
idiv
cmp
xor
sub
dec
add
inc
adc
dec
xchg
push
icebp
add
or
xchg
mov
mov
push
mov
fstp
jle
pop
mov
push
push
add
push
cmp
mov
cmp
pusha
popa
mov
movlps
stc
push
push
push
call
cwde
push
adc
je
adc
ss
loopne
mov
jbe
dec
jmp
or
ins
add
ret
or
push
fadd
movs
add
add
arpl
fldcw
imul
outs
pop
add
add
arpl
push
or
mov
inc
sub
les
cdq
jle
and
ins
mov
dec
or
jl
inc
js
je
xchg
hlt
sbb
dec
rol
jne
or
nop
mov
xor
inc
jno
and
dec
lods
jno
push
push
outs
adc
outs
push
add
xor
cmps
mov
jno
pop
aaa
fs
pop
add
or
inc
fld
ins
and
retf
or
xchg
test
pop
mov
jmp
shl
inc
aaa
movs
fwait
sbb
sti
jmp
mul
xchg
dec
cmp
sbb
add
add
aad
retf
xchg
pop
shr
out
push
pop
call
add
inc
mov
pop
push
add
push
lock
rol
int3
xchg
mov
rol
xchg
push
push
dec
stos
push
in
fdivr
adc
movs
cwde
xchg
test
js
and
pop
xchg
push
cld
pop
push
ins
push
pusha
xchg
mov
hlt
mov
push
and
in
cmps
mov
xor
inc
xchg
push
rcr
ja
fiadd
xchg
shl
add
adc
push
mov
(bad)
jo
popa
scas
test
jno
pop
test
and
cwde
add
cmp
inc
or
retf
inc
inc
pop
pcmpgtw
fcomp
int3
and
dec
arpl
or
jns
mov
dec
jnp
mov
add
pop
jge
test
inc
push
mov
add
add
mov
xchg
mov
push
dec
imul
sbb
inc
cli
mov
push
hlt
push
push
or
aad
int
int3
dec
adc
cmps
call
dec
lods
int
adc
or
(bad)
push
loopne
cwde
lock
sbb
adc
lods
ss
inc
pop
push
push
inc
(bad)
in
fild
mov
loope
loopne
add
fild
cmp
xchg
fld
test
in
sub
adc
pop
mov
dec
sti
push
jb
jg
cmp
dec
shr
shl
arpl
add
ror
sub
jb
pop
sub
or
cmps
clc
ds
jo
cwde
cmp
mov
or
js
inc
and
test
sahf
(bad)
jl
sub
and
shl
cdq
das
cmps
loopne
and
add
jl
stos
and
mov
pop
mov
pop
mov
loope
inc
cmp
enter
imul
ret
cmp
adc
ds
cwde
pop
push
int3
and
and
push
cmp
pushf
or
cmp
mov
popf
sub
mov
lock
add
lods
and
sub
pop
fidiv
add
shl
pop
sar
push
fiadd
lock
push
fiadd
jecxz
jecxz
add
add
jg
push
inc
cs
rcr
ins
cld
outs
inc
add
jmp
imul
dec
fild
push
movs
fstp
pop
xchg
inc
add
mov
cmp
inc
fadd
int
or
and
adc
xor
and
and
(bad)
in
and
pop
jl
jge
and
movs
jmp
or
or
mov
add
inc
add
jnp
push
inc
add
rcl
in
outs
dec
push
jno
push
inc
add
stos
push
dec
pop
and
lock
push
or
pop
push
stos
sbb
stos
push
add
call
push
pop
mov
inc
or
jge
pusha
loope
push
push
mov
enter
aad
inc
or
test
loop
dec
add
scas
std
ds
int
movs
sbb
mov
xchg
xchg
call
mov
sahf
fucomi
inc
lahf
mov
pop
jo
jbe
cmp
and
ss
lahf
js
inc
scas
add
push
add
or
loopne
adc
idiv
les
sbb
hlt
loop
sahf
out
or
mov
xor
out
sahf
out
xchg
test
rcr
int3
rcl
fcom
lahf
out
fsub
in
call
ficomp
add
sub
mov
and
mov
test
add
(bad)
les
adc
hlt
inc
sbb
fwait
mov
mov
shl
cmp
push
fs
mov
sub
or
pop
aaa
add
add
mov
xor
xor
adc
add
rol
nop
add
add
jnp
mov
mov
adc
or
inc
inc
adc
adc
or
lds
lea
push
addr16
in
mov
add
cmp
push
add
xchg
push
add
idiv
xor
loop
dec
cmp
je
popa
mov
in
mov
inc
inc
cmp
inc
sub
mov
fmul
aam
pusha
(bad)
adc
lea
xor
pop
sahf
mov
lods
push
sub
rcl
repnz
cld
add
rol
psadbw
add
xchg
inc
or
pop
(bad)
(bad)
and
push
inc
xor
push
mov
mov
push
in
test
mov
add
push
inc
xchg
jo
xchg
push
xchg
inc
pop
pop
rcl
adc
mov
sar
xor
movs
or
int3
dec
je
lea
sbb
pop
jae
xor
jnp
xchg
and
cmp
xor
and
sbb
push
movs
aas
add
mov
popa
cvtps2pi
or
adc
inc
(bad)
retf
xchg
cmp
sbb
je
inc
mov
movs
cmp
push
pusha
test
(bad)
add
sbb
inc
sub
mov
(bad)
dec
fisub
pop
cdq
mov
cmp
jg
lea
inc
sbb
les
cs
adc
sbb
(bad)
outs
adc
out
adc
xor
mul
mov
push
hlt
xor
mov
xlat
ins
inc
or
dec
jne
and
pop
xchg
out
cmp
sbb
adc
int
mov
mov
push
fistp
push
jmp
or
mov
fmul
mov
push
push
mov
adc
ds
dec
ja
popa
and
cmp
jne
pop
pop
adc
cmp
aaa
sub
jne
jmp
xor
mov
inc
(bad)
jo
ret
fcomp
sub
mov
push
fcomp
pusha
cmp
and
fcomp
cmps
(bad)
inc
inc
jp
add
loopne
rcr
push
inc
xor
add
mov
(bad)
dec
call
imul
call
inc
xor
sbb
mov
popa
xchg
pop
jae
rol
xchg
xor
push
push
cmp
dec
xchg
and
bndldx
in
data16
int3
xlat
adc
add
mov
adc
xor
js
cdq
xor
scas
inc
sbb
arpl
pop
push
sbb
adc
out
cmps
inc
xor
stos
mov
sbb
jp
rcr
aam
inc
or
pop
test
pusha
mov
add
scas
mov
gs
push
test
jo
xor
push
rcl
loope
outs
int3
jge
sbb
popa
pop
inc
and
out
pop
pop
pop
pop
test
lahf
xchg
pusha
and
cmp
xchg
push
add
or
mov
xor
sbb
add
out
push
xchg
and
aas
in
sbb
xchg
adc
adc
nop
(bad)
popa
call
ins
lods
push
jmp
mov
sbb
pop
adc
mov
dec
inc
mov
test
xchg
ror
stos
lds
adc
pop
add
daa
pop
or
and
call
aas
and
inc
jb
mov
sbb
mov
mov
shl
movs
adc
adc
adc
test
les
xchg
mov
pop
jno
aam
popf
xchg
(bad)
jecxz
mov
ins
adc
adc
iret
ins
push
jno
fs
push
je
and
int3
adc
jl
pop
mov
add
rol
test
rcr
(bad)
fld
sbb
pop
rcl
(bad)
push
push
shl
mov
test
dec
inc
mov
jae
add
out
sysexit
and
inc
sbb
nop
dec
jbe
sub
adc
retf
adc
adc
inc
mov
or
clc
popa
xchg
out
call
adc
inc
push
inc
test
xor
pop
dec
xlat
mov
sbb
lods
xor
dec
inc
dec
jne
mov
sub
mov
xlat
fdivr
stos
add
daa
or
pop
mov
cmp
outs
and
dec
xchg
fmul
popa
sti
cmp
shl
add
inc
scas
mov
jo
out
clc
ror
xor
pop
pusha
fild
xchg
lods
fisubr
sub
not
jnp
add
pop
leave
push
fimul
test
mov
add
out
rcl
inc
push
jnp
mov
mov
shl
push
jmp
sbb
shr
cmp
and
mov
fs
lock
inc
je
or
retf
sti
movs
add
fild
or
sub
icebp
das
(bad)
xchg
iret
cmp
add
popa
cmp
cli
add
fld
jmp
sbb
(bad)
or
lds
push
mov
mov
pusha
cmp
sub
lods
stos
rol
push
pop
mov
xor
mov
sahf
call
es
sub
inc
ret
inc
enter
xor
push
cmp
mov
lea
mov
xchg
sbb
imul
scas
cmp
mov
push
mov
xor
mov
cmp
push
mov
jns
mov
mov
sub
mov
mul
cmc
or
or
adc
je
mov
add
pop
pop
lahf
ja
dec
add
push
mov
in
adc
adc
sbb
mov
or
out
pop
pop
popa
les
popa
jno
into
add
xor
dec
sbb
mov
ins
add
movs
call
adc
data16
push
xchg
inc
push
mov
add
pop
das
add
push
cmp
add
imul
cmp
or
adc
cmc
adc
mov
push
mov
out
fcmovne
pop
or
(bad)
sbb
xor
aaa
mul
add
iret
or
or
fisttp
sub
mov
pop
mov
inc
mov
test
jns
inc
sbb
nop
push
or
and
dec
and
add
xor
xchg
sbb
enter
add
add
pop
das
sbb
mov
jmp
icebp
or
inc
fistp
or
sar
sbb
call
push
and
add
mov
popa
mov
mov
xchg
push
mov
shl
cmp
adc
lock
lock
mov
mov
adc
int3
add
push
mov
rol
int
sbb
cmp
cmp
fmul
outs
ret
push
outs
in
shr
pushf
shl
mov
movs
or
mov
ins
ins
inc
adc
outs
pop
test
adc
pop
lea
fstcw
fwait
push
or
(bad)
jge
adc
aam
fcomp
aad
ins
sbb
out
push
sbb
jae
add
lea
ja
sti
int
push
dec
adc
push
push
sub
ds
xor
xor
or
pop
dec
pop
imul
cmp
cli
aas
xor
outs
jo
jno
imul
stos
sti
pop
mov
test
adc
jp
popa
fs
or
cmp
and
push
xor
add
pop
outs
ds
mov
jmp
and
imul
add
pop
pop
jne
daa
jne
jne
sbb
cmps
or
or
adc
test
mov
sub
push
(bad)
inc
inc
lock
shr
push
out
xor
mov
pushf
xor
and
jp
jp
loopne
cmp
or
xchg
inc
cmc
pushf
fist
mov
popa
pop
je
add
into
aaa
std
xor
push
and
jno
and
les
mov
and
dec
adc
mov
push
inc
jns
gs
add
sbb
push
arpl
or
inc
(bad)
add
adc
or
xor
push
js
lods
pop
dec
imul
mov
push
movs
jo
ins
int
sub
or
adc
and
or
ret
jp
ret
mov
ss
lock
push
cld
sahf
dec
stos
push
sub
mov
push
lods
lods
inc
rol
into
mov
sub
inc
lahf
mov
sub
test
and
movhps
and
xor
aam
std
hlt
out
xor
push
add
sbb
fnstsw
btc
loopne
scas
aad
lds
ins
arpl
pop
sub
test
add
xchg
mov
push
sbb
ins
jmp
movs
xor
call
and
cmc
dec
rol
inc
lahf
xchg
sti
inc
pop
fisubr
jo
mov
push
dec
jp
cmp
sub
psubsb
jb
adc
shl
retf
xor
mov
loopne
mov
outs
nop
enter
add
fst
hlt
repz
pop
add
call
addr16
call
xchg
ret
or
sbb
outs
ja
imul
ret
mov
call
data16
or
scas
retf
cmp
or
jne
add
xor
inc
xor
push
cmps
nop
arpl
inc
loopne
aaa
xchg
into
push
jb
mov
mov
movs
add
and
(bad)
push
shr
in
mov
pop
pop
lea
adc
imul
and
mov
add
data16
in
repz
mul
scas
cdq
retf
push
in
popf
cwde
push
adc
jl
cmps
bound
pop
mov
lock
sbb
and
push
cmps
inc
push
stc
pop
push
push
data16
cmp
test
out
xchg
sbb
out
xor
adc
sbb
ret
inc
cmps
or
js
jmp
inc
fstp
sub
cwde
not
imul
pop
test
addr16
pop
inc
push
out
mov
clc
sub
adc
js
sbb
(bad)
in
enter
stc
js
mov
push
and
sbb
pushf
in
xchg
fnstsw
add
mov
jo
out
test
frstor
mov
aaa
pop
pop
inc
adc
inc
jg
add
pusha
mov
repz
pop
and
add
fbstp
inc
add
pop
in
jmp
out
inc
aas
adc
inc
imul
pop
xor
mov
jns
addr16
icebp
mov
jo
setle
inc
lods
dec
nop
cmp
xlat
pop
xor
nop
icebp
imul
add
int
add
(bad)
sbb
and
xchg
retf
pusha
or
xor
ret
ins
dec
pop
sbb
xchg
rol
cmp
mov
pop
pop
cmps
add
inc
aaa
popa
pusha
pusha
add
aam
cmps
rcr
scas
dec
sbb
clc
push
mov
or
das
aas
adc
push
or
jmp
dec
xor
and
or
add
or
inc
aad
jb
(bad)
outs
jo
(bad)
shr
ror
mov
iret
jecxz
nop
inc
test
inc
aam
loopne
adc
or
push
xlat
pop
enter
cmp
add
pop
and
inc
add
inc
sub
push
or
add
or
push
(bad)
int3
xor
ror
or
dec
and
jecxz
lea
mov
mov
jecxz
loopne
shl
or
mov
and
cmc
pop
loop
or
xlat
(bad)
rol
push
push
jecxz
mov
fisttp
jmp
xchg
xlat
mov
outs
push
es
(bad)
adc
pop
(bad)
pop
lsl
and
push
adc
push
mov
je
push
aaa
js
imul
in
xor
mov
adc
push
pop
cmp
popa
mov
das
aas
jl
out
push
das
and
fadd
jne
out
adc
jae
test
enter
mov
clc
pop
adc
loop
add
xor
or
pushf
sbb
sub
lea
iret
sbb
pusha
add
test
cmp
scas
arpl
psraw
xor
mov
mov
outs
cmp
pop
push
jae
and
xor
das
jp
cwde
or
xlat
ss
test
loope
push
pop
add
fsub
dec
inc
inc
mov
inc
scas
xchg
or
mov
test
jge
mov
nop
stos
or
rol
inc
pusha
xchg
add
sub
sbb
or
aam
add
or
mov
cmps
ret
adc
adc
mov
xor
loope
and
or
ins
or
scas
ja
(bad)
jmp
adc
or
stc
fsubr
pop
or
or
clc
fstp
fstenv
sub
inc
icebp
gs
xchg
out
dec
out
pop
push
movs
or
and
jne
and
push
jmp
push
rcl
xor
jle
add
pop
arpl
and
arpl
(bad)
and
and
xor
push
xor
jmp
add
add
cmc
call
in
jne
nop
sub
arpl
push
mov
and
lds
adc
fdivp
push
pop
into
clc
leave
jbe
cmp
xchg
dec
jne
xor
mov
push
popa
loopne
sub
adc
sti
xor
leave
inc
and
xchg
xor
push
sub
inc
add
add
sbb
or
lock
mov
test
sar
das
jne
test
jne
repz
xor
push
ins
loop
ret
les
jmp
push
inc
push
ds
repnz
adc
jmp
je
je
mov
dec
or
xchg
sub
mov
test
pop
std
(bad)
jns
add
push
jbe
add
test
loop
(bad)
sti
xchg
out
mov
and
dec
or
add
inc
mov
cmp
xor
sbb
add
adc
ror
fsubr
jmp
mov
jmp
lahf
dec
xor
add
adc
pop
bound
retf
punpckhdq
dec
or
inc
adc
retf
push
add
sbb
and
cld
jl
test
mov
cmp
push
pop
push
(bad)
jge
cmp
cli
es
in
push
enter
rcr
(bad)
fcom
dec
shl
or
jbe
mov
dec
add
sub
loopne
and
adc
pop
push
jo
xor
or
xchg
add
mov
neg
paddsw
fadd
movd
jmp
not
or
jg
or
inc
mov
mov
dec
jg
mov
jl
or
or
sbb
push
lock
adc
mov
mov
mov
inc
sub
and
and
adc
fsubr
push
push
sbb
sub
clc
mov
mov
push
enter
in
jmp
mov
pop
xor
pop
dec
movs
push
dec
push
repnz
fisubr
int
add
icebp
ss
and
outs
xor
dec
sub
loope
xor
mov
push
push
and
test
push
and
add
mov
sub
call
rol
test
add
shl
add
sbb
sub
sbb
aaa
test
cli
push
inc
(bad)
loop
mov
(bad)
call
fild
inc
addr16
icebp
jmp
adc
mov
mov
add
mov
pop
dec
aam
test
sbb
mov
ret
mov
xor
jne
popa
sub
in
popf
ret
ins
push
clc
and
shl
jg
je
dec
(bad)
sub
push
call
in
xchg
pusha
mov
dec
xor
je
or
push
pop
out
sub
pop
xor
fcomp
pop
in
or
dec
xor
cld
push
scas
mov
adc
inc
xor
out
add
addr16
inc
sub
or
lahf
pop
mov
dec
cmp
aad
mov
add
sbb
mov
mov
push
dec
neg
ror
mov
pop
xchg
movzx
xor
and
es
jne
push
aas
sub
xchg
sahf
inc
icebp
fistp
dec
add
xor
and
dec
add
and
mov
sub
enter
aad
mov
dec
movzx
scas
js
stos
addr16
mov
pop
(bad)
cmp
jbe
adc
adc
inc
and
movs
lods
mov
sbb
and
out
jg
pop
mov
inc
xor
cmps
ret
es
int
or
mov
mov
push
pop
es
mov
sar
inc
sbb
pop
mov
inc
mov
sub
nop
movs
push
push
ins
fsubr
push
jge
sbb
pop
jne
xor
sub
sbb
sti
and
pop
or
std
rcr
outs
mov
add
xor
xor
xchg
mov
dec
scas
dec
push
jbe
scas
sbb
push
fisubr
mov
push
pop
jb
xchg
mov
shl
data16
add
and
ins
xor
pop
pop
fistp
mov
adc
adc
mov
adc
xlat
mov
push
stos
xchg
jbe
jg
data16
jle
enter
mov
mov
push
inc
cmp
pop
push
adc
daa
cmp
mov
push
and
je
mov
pop
jmp
or
fimul
jb
sbb
mov
nop
(bad)
hlt
mov
inc
jl
fisttp
or
scas
mov
adc
dec
mov
shl
push
adc
nop
repnz
jl
and
mov
nop
cmp
pop
pop
lea
shr
shr
add
add
lds
adc
sar
jo
inc
push
add
dec
mov
dec
jmp
add
test
je
dec
je
jmp
push
jle
adc
add
sub
xchg
and
inc
adc
sub
adc
jle
mov
mov
sub
inc
inc
cmp
clc
inc
and
xor
pop
nop
add
cmp
xor
and
pop
pusha
mov
je
ror
outs
mov
pusha
push
shr
add
adc
(bad)
mov
je
mov
pop
out
mov
inc
add
mov
push
outs
sub
test
or
or
inc
or
sbb
sahf
pop
test
jo
adc
repnz
repnz
sub
pop
push
jbe
pop
test
inc
or
loope
adc
sbb
inc
adc
jae
sub
dec
sbb
jno
je
mov
and
pop
or
stos
sub
or
wbinvd
in
jno
fadd
add
leave
cli
out
xor
pushf
lock
cmp
ds
push
js
push
mov
jnp
stos
shl
out
sbb
adc
xchg
out
mov
push
sbb
fmul
ins
jnp
lods
into
pop
adc
pslld
and
mov
sub
add
pop
je
cmp
xor
sbb
(bad)
mov
mov
push
sub
test
add
mov
sub
inc
jne
mov
sbb
int
add
xor
sub
(bad)
mov
mov
add
cmp
sub
(bad)
cmc
pusha
(bad)
cmp
cmp
loop
fs
imul
pushf
mov
loope
es
and
call
outs
add
pop
jns
and
and
sti
dec
sbb
aad
or
xor
sti
icebp
mov
imul
mov
enter
or
adc
dec
xchg
and
dec
test
or
inc
and
hlt
shr
bound
int3
and
add
adc
faddp
lods
push
push
pop
push
cmp
les
jbe
xor
rcl
push
adc
or
hlt
or
dec
loopne
mov
sbb
cmp
adc
jne
aaa
or
hlt
jmp
ja
loopne
or
stos
scas
inc
cmp
push
fwait
xchg
movs
push
xor
div
pop
mov
mov
mov
(bad)
cmp
mov
sub
mov
cmp
push
cmp
inc
data16
shr
ret
sbb
call
arpl
cmp
mov
cmp
mov
jbe
sub
call
sbb
outs
push
pop
mov
xchg
sub
dec
mov
clc
fisubr
add
adc
inc
in
daa
push
cmp
ja
xlat
jge
sub
adc
mov
adc
dec
aad
sbb
pop
add
(bad)
dec
outs
cwde
push
mov
dec
sub
adc
xor
inc
adc
or
outs
in
hlt
push
nop
push
mov
in
fdiv
popf
sub
shl
sbb
sbb
(bad)
and
mov
loop
xchg
jb
adc
hlt
hlt
hlt
and
inc
addr16
push
sbb
pop
pop
xor
or
mov
daa
adc
in
in
mov
in
mov
iret
out
mov
call
call
in
in
in
in
and
lock
addr16
pop
or
jne
divps
add
pop
inc
dec
and
dec
or
dec
arpl
mov
mov
mov
and
nop
mov
mov
mov
fcomp
adc
jmp
adc
pop
enter
mov
xor
push
ins
mov
test
sbb
push
cmc
sbb
in
mov
das
sbb
icebp
or
lahf
xchg
push
imul
imul
adc
or
inc
lock
push
sub
or
pop
push
push
mov
xchg
or
mov
aam
shl
xchg
add
ja
in
add
bound
adc
and
add
pop
mov
jl
test
ins
or
inc
pop
pop
jmp
sbb
pop
gs
or
inc
imul
cmps
xor
dec
ret
ret
jl
dec
add
push
sbb
loop
pusha
inc
mov
and
push
ror
scas
ins
mov
push
push
sbb
mov
repz
pop
jae
into
fcom
icebp
jg
inc
cmp
adc
scas
arpl
mov
jp
adc
stos
mov
mov
daa
or
jno
leave
aad
or
add
fnstsw
sbb
jo
xor
fst
adc
cmp
stos
jno
cmp
mov
mov
sub
inc
je
dec
je
pop
je
aaa
sub
mov
je
cmp
mov
inc
and
push
pop
sub
inc
pop
sbb
inc
cmp
mov
xor
push
sbb
sbb
and
test
pusha
pop
loop
cmps
ret
outs
pop
fcomp
test
aad
push
mov
push
push
push
and
pop
cmp
out
pop
pop
inc
push
push
mov
mov
sbb
inc
cdq
add
dec
dec
inc
pop
add
sub
pusha
sbb
shl
xchg
mov
test
data16
inc
cmp
iret
sub
inc
dec
dec
sahf
retf
dec
inc
inc
inc
and
out
out
es
cs
push
or
sbb
je
xor
shr
mov
test
push
xchg
sub
outs
out
std
je
xchg
sbb
and
and
xor
add
inc
xchg
dec
inc
adc
aaa
repnz
add
sbb
sar
push
adc
je
rcr
xor
xchg
lods
dec
(bad)
adc
adc
ins
ror
xchg
add
lea
add
call
pusha
cmp
push
push
mov
push
rdtsc
mov
pop
mov
sbb
mov
cmp
push
mov
shr
xor
imul
ins
mov
fwait
add
pop
sbb
scas
mov
les
add
and
cs
dec
xor
dec
push
adc
sbb
inc
js
ins
sub
jae
rcl
dec
js
sub
ins
call
les
cs
jle
fstp
in
and
push
and
inc
jbe
sti
dec
jb
xor
jge
push
cmp
dec
ins
add
or
dec
xor
out
or
or
in
stos
or
inc
js
mov
cld
add
mov
dec
je
push
sub
jo
dec
or
sbb
cmp
shl
xor
sbb
nop
test
dec
mov
xchg
pop
js
xchg
(bad)
sbb
cmp
jne
sysexit
xchg
xchg
xchg
xchg
sub
or
xchg
or
jb
mov
push
mov
lods
pop
adc
cmp
jge
mov
out
mov
cmp
xchg
rol
loopne
or
(bad)
in
cmp
jl
mov
jle
cmp
jbe
cmp
xor
jg
mov
je
into
cmp
into
mov
and
ret
xor
add
add
inc
je
ins
and
loope
(bad)
push
or
ror
sub
jne
mov
dec
jg
dec
out
jmp
ja
xor
inc
xlat
push
xlat
dec
lods
mov
mov
jnp
dec
ficom
rol
inc
sub
inc
or
std
mov
or
sub
int3
cmp
inc
mov
dec
fadd
dec
inc
inc
and
stos
sbb
mov
imul
ret
pusha
bound
add
push
push
(bad)
out
push
clc
pop
inc
pushf
je
jb
dec
push
lods
es
mov
out
lods
mov
dec
inc
push
ins
movzx
ret
lods
or
pop
cmp
add
and
hlt
and
inc
movs
data16
cmp
jbe
dec
ret
or
sub
inc
mov
popa
imul
(bad)
sub
dec
leave
mov
inc
xchg
mov
jbe
mov
aam
sub
cli
dec
in
ins
iret
add
adc
or
add
pop
push
mov
loopne
(bad)
call
ja
adc
jmp
or
nop
sbb
mov
test
sbb
test
js
add
loop
clc
cmps
lea
pop
(bad)
xchg
cmp
ja
or
sub
push
mov
push
inc
rol
push
test
add
daa
cmp
or
xor
jnp
sub
int
push
rcr
inc
sahf
xlat
adc
scas
stos
mov
dec
ror
sbb
data16
push
sub
shl
jmp
mov
and
inc
xchg
ret
add
jb
mov
fstp
or
out
mov
adc
adc
mov
cmp
movs
loope
loope
mov
sbb
jb
leave
add
add
jecxz
imul
inc
call
sbb
add
sub
push
xor
dec
xor
inc
int
mov
shl
lock
or
mov
adc
les
fcomip
cdq
add
enter
or
mov
clc
inc
pusha
aam
add
daa
cmp
push
fcmovnbe
fs
push
inc
dec
mov
adc
div
mov
scas
jno
jmp
or
(bad)
adc
adc
and
mov
mov
cld
inc
test
cwde
xchg
cmp
scas
xor
xchg
int3
or
jmp
adc
sar
mov
int3
or
or
push
dec
cmp
movs
and
outs
sbb
mov
sub
dec
pusha
cmp
ja
and
and
inc
ins
movs
or
movs
pop
call
sub
mov
sbb
mov
mov
aas
shl
cmp
and
xchg
enter
fmul
jmp
mov
adc
adc
ins
mov
jl
inc
inc
mov
and
sbb
xchg
add
add
aad
int
dec
inc
repnz
std
add
adc
leave
or
cmp
inc
aam
(bad)
dec
push
mov
es
fs
mov
inc
out
push
inc
js
in
dec
rol
xor
aaa
add
ins
mov
jne
ins
adc
mov
inc
pop
lods
adc
mov
pusha
and
cs
or
rcr
push
cmps
imul
dec
js
dec
mov
stos
or
mov
inc
jnp
push
cmc
push
js
mov
push
inc
jns
sbb
pop
push
jge
inc
adc
inc
sub
sub
add
data16
push
dec
add
or
retf
adc
inc
ss
push
sub
push
je
jns
dec
or
aad
rol
xchg
or
push
mov
sbb
cmp
jb
add
or
jmp
out
add
mov
adc
pop
jmp
xor
mov
inc
sbb
in
cmp
jne
adc
jge
int3
mov
xor
(bad)
jne
cmp
cmp
sbb
cmp
cmp
add
mov
sbb
xchg
sub
sub
add
call
outs
out
pop
sub
sub
dec
mov
or
clc
cmp
dec
repz
sub
adc
mov
dec
or
jne
cs
outs
mov
lods
sbb
pop
cmp
pushf
rcr
add
xchg
jecxz
pi2fd
mov
pusha
push
je
jnp
mov
push
inc
mov
or
arpl
adc
inc
(bad)
jg
mov
pop
scas
pop
or
sbb
cmp
nop
dec
sbb
dec
adc
or
sbb
aam
fimul
mov
xor
pop
ds
adc
and
push
and
dec
sub
loop
sbb
addr16
cmp
cmp
pop
mov
dec
push
push
add
mov
les
mov
push
lock
jmp
mov
test
ja
cmps
mov
(bad)
cli
add
cmp
xor
jge
jecxz
and
or
add
in
sti
movd
cld
test
pop
mov
cmp
je
dec
pusha
push
mov
adc
mov
sahf
sbb
and
sbb
sub
shl
sub
add
push
cmp
jp
fist
outs
scas
sbb
mov
inc
(bad)
mov
lods
push
repz
pop
loopne
sar
test
push
xchg
mov
dec
or
push
xor
clc
or
sbb
pop
cs
loope
sbb
pop
adc
scas
adc
push
call
pusha
mov
xor
out
lods
clc
dec
aam
mov
pop
fdivr
pop
cmp
and
or
push
add
cmp
jbe
sbb
mov
and
cmp
jecxz
pop
cmp
push
cmp
sar
fadd
mov
pop
out
sti
push
fwait
retf
or
push
pop
add
sbb
rol
add
or
and
xor
and
ds
sbb
xchg
or
mov
or
pop
push
mov
hlt
jo
int
inc
sub
inc
jb
cmp
jb
adc
and
or
or
cs
xor
sub
fistp
xor
imul
mov
stos
je
cmp
add
arpl
mov
sub
mov
popa
push
xchg
pop
inc
sbb
and
inc
xor
nop
(bad)
mov
mov
clc
jne
aas
cs
xor
add
inc
outs
cs
rcr
xchg
pop
addr16
scas
xor
sbb
or
adc
pop
clc
lods
adc
jne
xor
push
or
bound
xor
mov
mov
jp
movs
jle
fcomp
or
and
shl
push
les
inc
jns
int3
imul
jmp
pop
pop
imul
ja
and
ins
mov
sub
push
stos
and
imul
jecxz
es
dec
repz
sub
sub
lock
ds
repz
jo
mov
ds
xor
call
add
arpl
jae
shl
repz
out
xor
add
add
sub
test
inc
xchg
dec
adc
mov
adc
jle
sub
mov
loop
push
push
lods
lock
jb
test
je
dec
pusha
xchg
lock
aas
loop
movs
daa
inc
sbb
add
adc
mov
push
mov
xor
and
dec
clc
add
xor
iret
sbb
xor
push
jmp
rcl
lock
faddp
loopne
add
mov
js
pop
sbb
jmp
or
(bad)
or
fcmovbe
daa
fs
shr
scas
add
and
ret
fsub
adc
fimul
jo
mov
sub
fdiv
cmp
jbe
push
inc
sbb
mov
fadd
adc
dec
daa
push
aas
inc
sbb
xor
inc
icebp
push
mov
or
or
or
frstor
or
shl
or
fist
loopne
dec
inc
and
enter
push
lds
scas
jmp
inc
sub
mov
popf
mov
cmp
bound
into
sbb
mov
cmp
add
(bad)
and
cdq
and
mov
out
push
div
inc
add
ss
cmp
cmp
cwde
mov
cmp
push
jns
sub
push
add
adc
jb
aas
adc
sbb
repz
outs
adc
push
push
pusha
add
out
and
les
std
add
ins
add
outs
ins
push
icebp
or
mov
push
sbb
mov
adc
xor
mov
aas
jmp
or
fwait
adc
adc
sub
les
in
jge
mov
or
arpl
fadd
cli
mov
aas
stc
repnz
(bad)
fisub
add
sbb
ficom
pushf
int3
add
es
xor
add
cld
push
and
gs
gs
or
ror
xor
loop
or
(bad)
in
push
fiadd
ror
aaa
xchg
mov
pop
push
or
mov
mov
stos
mov
in
rcr
push
es
sbb
or
jbe
mov
jp
dec
inc
lds
fadd
cmp
shl
and
loopne
or
cld
popa
sahf
popa
or
sbb
inc
push
sub
pop
adc
ror
push
in
or
push
add
cmp
mov
or
cmp
inc
cld
dec
shl
xor
cmp
adc
mov
ja
lds
or
inc
mov
inc
dec
inc
xor
adc
fild
sub
rol
fnstenv
jecxz
clc
or
cs
rcl
push
xchg
cmp
adc
xchg
mov
inc
push
and
add
mov
lock
shr
and
pop
or
or
jno
into
shl
add
add
fidiv
leave
dec
ret
xor
or
adc
xor
(bad)
adc
(bad)
movs
inc
adc
pop
cld
stos
sbb
xchg
push
cmp
mov
adc
mov
add
push
in
jnp
add
pop
shr
mov
(bad)
icebp
pop
sbb
add
or
pusha
cmp
(bad)
dec
add
and
shr
cs
xor
adc
cs
jmp
cmps
or
es
psubsb
adc
push
imul
jne
sub
sub
fisub
adc
sub
adc
xchg
movs
dec
sub
inc
adc
shl
sub
cmp
or
dec
add
xor
ja
mov
inc
dec
inc
test
dec
sar
adc
xchg
jbe
sbb
sub
cmp
hlt
rcr
adc
cmps
dec
cmp
sub
xchg
pop
mov
mov
inc
hlt
jns
cmp
sahf
jmp
lds
rcl
mov
push
jle
add
pop
add
add
and
sub
add
sbb
inc
ret
jnp
push
push
jbe
push
mov
je
xchg
dec
push
mov
xor
lods
or
(bad)
dec
sbb
push
xchg
aam
and
inc
fadd
mov
repnz
push
push
inc
out
out
scas
jmp
dec
inc
mov
adc
lea
mov
fild
ins
lea
cdq
dec
lea
mov
lahf
push
push
push
lea
adc
das
xchg
lods
add
aam
cmp
sbb
pop
jmp
push
scas
dec
and
adc
jp
or
test
sub
lock
xlat
ror
adc
js
rcr
or
fnstsw
cmp
dec
jmp
push
xchg
test
outs
or
jb
lods
jbe
add
xor
data16
or
pop
or
add
cmps
pop
ja
inc
cmps
or
xlat
add
enter
repnz
jne
pop
cmp
fimul
inc
outs
cmp
cwde
cmps
rol
add
xchg
and
dec
(bad)
clc
adc
ret
pop
cmp
dec
add
sub
jmp
cmps
outs
jbe
pop
and
jg
lds
xor
or
add
add
cmp
sbb
(bad)
int3
dec
shr
mov
hlt
jo
xor
mov
xor
loopne
jge
xchg
test
cmp
push
jo
sbb
mov
inc
mov
xor
lea
or
xor
push
and
test
mov
mov
and
nop
pop
sahf
ret
add
pop
mov
push
push
rol
inc
test
je
add
dec
js
dec
sbb
aad
cli
bound
adc
loopne
mov
sbb
and
hlt
xor
sbb
shl
clc
mov
dec
pop
and
fadd
add
mov
or
xchg
jo
ror
inc
xchg
dec
div
jne
movs
ss
or
and
fisttp
stos
dec
ins
aad
adc
lods
loopne
adc
lock
add
jle
inc
loopne
add
js
(bad)
fmul
mov
jl
add
mov
mov
shr
(bad)
fiadd
ror
xor
int
sbb
jnp
xlat
int3
add
rcl
cmp
inc
xlat
cmps
sub
mov
(bad)
inc
jae
xor
push
pop
das
xchg
lock
and
loope
xchg
das
dec
rol
cld
sbb
adc
and
loope
test
dec
sub
and
loopne
ror
int
data16
into
push
hlt
dec
mov
add
cmp
or
mov
dec
fld
inc
inc
and
inc
or
push
xor
dec
sbb
enter
popf
rol
push
jmp
dec
sbb
xchg
push
pushf
add
pushf
inc
xchg
pop
sbb
lds
pop
and
stos
lds
das
fs
pop
rcl
pop
lods
add
and
and
jne
push
sbb
bound
fmul
aam
mov
inc
cmp
mov
pop
fisubr
push
ror
or
jbe
inc
test
and
mov
pop
pop
xchg
push
jae
sub
mov
shl
push
rsm
mov
mov
mov
shl
ja
jg
sub
fld
inc
or
dec
hlt
fild
adc
jmp
inc
jmp
cdq
ss
icebp
loopne
sbb
mov
pop
hlt
inc
jnp
call
stos
push
fcomp
add
add
push
pop
fadd
and
xchg
addr16
lods
add
sub
dec
jmp
xor
mov
xor
dec
sub
lahf
mov
pop
movs
add
sbb
imul
adc
imul
cmp
xchg
pushf
inc
fidivr
shl
push
sbb
repz
retf
and
or
add
adc
and
repz
push
add
and
lahf
sbb
in
fstp
add
sahf
clc
mov
adc
mov
add
ret
clc
or
sbb
cmps
sahf
call
je
out
adc
imul
jecxz
pop
sub
adc
in
sub
sub
pop
lods
pop
(bad)
xlat
in
add
jle
adc
push
sbb
ret
mov
daa
dec
xchg
inc
xor
je
loopne
push
cmc
inc
call
sbb
mov
xchg
pop
mov
icebp
mov
jne
mov
sub
push
add
xor
push
sub
add
lock
sub
sub
mov
or
add
xor
aam
dec
fadd
or
js
ret
add
jmp
in
je
mov
xor
mov
addr16
(bad)
les
push
in
or
ds
add
test
and
adc
pop
daa
or
mov
das
sbb
sub
inc
popa
sbb
aaa
jbe
xor
lds
push
push
add
in
outs
or
shl
scas
add
sub
mov
rcl
cmp
sbb
push
xor
adc
gs
movs
(bad)
sub
and
sub
dec
add
pop
add
test
pop
jle
inc
mov
ror
lock
add
sub
mov
scas
xor
sub
movs
jae
push
add
jecxz
cmp
jne
inc
jmp
cmp
or
dec
xchg
inc
inc
cmp
jbe
add
retf
or
addr16
jno
dec
(bad)
imul
sar
sbb
cmp
jae
sti
and
push
cmp
pop
dec
pop
stc
test
push
cmp
arpl
mov
pop
sub
neg
add
into
or
imul
ret
jb
jl
jmp
test
sub
or
push
dec
daa
ror
cvtdq2ps
inc
add
push
add
push
imul
push
inc
mov
fiadd
cwde
mov
cmp
add
sub
fdiv
inc
sbb
mov
enter
push
out
cmp
add
sub
sbb
mov
jns
repz
stc
or
xchg
popf
enter
xor
xor
sub
dec
xor
jg
cmp
cmp
mov
fist
sbb
scas
and
ret
mov
das
add
shr
sar
cli
(bad)
rcr
add
jmp
push
dec
xor
push
sar
leave
cmp
stc
loope
adc
cmp
cmc
popa
add
inc
sbb
and
dec
adc
sbb
mov
xchg
neg
mov
pop
or
or
push
add
nop
xor
sub
psrld
rcl
out
sbb
mov
dec
inc
mov
xor
sub
xchg
sub
and
jmp
ins
les
jp
repnz
mov
in
mov
sub
sub
pop
lock
cdq
mov
jl
dec
sub
adc
sub
mov
adc
mov
cmp
cmp
stc
adc
jb
dec
rcl
push
int
int3
mov
adc
les
and
aaa
loopne
ret
sub
dec
jg
daa
je
mov
inc
aam
sub
and
sub
mov
mov
shl
mov
mov
shr
sub
sbb
loope
inc
inc
or
push
ret
mov
out
ret
adc
mov
inc
add
ret
call
pop
jbe
ror
mov
add
fsub
mov
in
add
int3
push
push
adc
ret
add
xchg
pop
push
sub
adc
add
cmp
jae
fiadd
ret
jbe
lock
mov
or
push
mov
add
pop
fmul
inc
push
mov
lods
jg
cmp
jb
jae
lods
mov
mov
dec
mov
sub
jmp
sub
jbe
inc
test
nop
scas
mov
push
dec
xchg
cmp
cmp
xor
pop
adc
ja
adc
push
mov
jnp
mov
xchg
or
or
sub
aaa
pop
dec
sbb
jno
adc
jbe
inc
cs
mov
inc
push
inc
jne
xor
test
xchg
jle
xchg
dec
sub
jmp
cmps
sub
(bad)
test
jmp
jge
sub
jmp
dec
add
stos
push
jb
enter
icebp
jmp
jmp
inc
mov
push
or
dec
jae
test
push
cmp
cmp
shl
xor
ins
xlat
mov
(bad)
out
push
fsubr
mov
push
mov
dec
or
mov
out
sbb
ret
or
sbb
fsubr
sub
scas
aas
js
jae
in
sub
add
and
lods
popa
mov
add
push
lahf
pop
fmul
jo
and
and
test
pop
xor
outs
push
adc
js
xor
add
mov
jbe
nop
sbb
aad
inc
and
sbb
idiv
inc
pop
movs
push
ja
dec
or
add
xchg
bound
mov
icebp
or
(bad)
cmp
jae
fs
pop
call
jne
mov
push
fldcw
loopne
mov
add
dec
pop
sbb
sbb
add
or
add
pop
clc
mul
shr
sbb
cmps
xor
add
dec
psubw
les
das
jb
icebp
clc
jae
push
sub
clc
ins
add
jg
cmps
add
and
loopne
mov
movs
enter
loope
or
ret
push
fild
arpl
xchg
add
or
xchg
mov
inc
fwait
inc
lock
or
loope
mov
les
fwait
test
push
jle
push
mov
xor
pop
(bad)
in
jo
cld
leave
adc
dec
test
js
cmp
jno
aad
inc
(bad)
dec
out
adc
aaa
cdq
push
int3
add
aas
mov
push
mov
ror
fneni(8087
rol
add
int3
retf
enter
cmp
dec
or
push
dec
or
inc
add
jns
xor
rcr
adc
or
jne
push
in
add
jle
adc
shl
mov
call
adc
fadd
mov
nop
xor
jb
or
adc
cmp
sbb
xchg
loopne
inc
mov
dec
(bad)
mov
mov
or
in
stos
out
sbb
and
mov
dec
push
adc
cmps
retf
inc
data16
in
call
pusha
xor
inc
(bad)
into
outs
xchg
ficomp
leave
sub
or
fcmovbe
jmp
and
or
fs
scas
jne
cld
dec
jno
add
inc
shr
test
jne
xchg
js
aad
and
add
cli
push
cld
mov
dec
loop
or
sbb
push
xlat
jecxz
js
fnstenv
mov
inc
sbb
jge
loop
pop
pop
mov
and
push
loopne
sbb
sar
cmp
inc
sbb
nop
pusha
inc
jne
jne
ins
ret
test
inc
pop
mov
mov
xor
dec
ins
call
in
xchg
mov
and
loopne
push
push
and
(bad)
repz
lock
aam
test
adc
mov
hlt
add
jmp
mov
push
push
mov
aad
pop
and
mov
into
loopne
sbb
mov
test
push
jb
ret
fs
shr
in
sbb
pop
xchg
rdtsc
fxch
dec
and
sbb
push
adc
aaa
or
out
push
out
sbb
xor
test
stos
inc
bound
ret
lea
ror
and
mov
push
mov
or
pop
out
mov
push
mov
leave
and
push
loopne
jnp
mov
xor
push
jbe
ret
mov
mov
xchg
pop
sbb
in
and
add
sbb
add
loop
lock
cmp
jl
sub
loop
push
adc
adc
cdq
lods
push
lock
test
xor
mul
adc
adc
stc
(bad)
mov
pop
cld
and
ror
and
lea
mov
je
in
nop
push
sub
dec
mov
mov
pusha
call
sar
sbb
jb
das
jne
mov
mov
ja
inc
mov
mov
gs
ja
push
mov
mov
ficom
cwde
or
mov
imul
adc
mov
jge
cmp
mov
mov
sub
icebp
test
add
inc
retf
loopne
(bad)
adc
hlt
pop
adc
sbb
push
and
xor
ins
lock
add
rol
jle
shl
jg
push
fcom
test
std
mov
test
or
mov
cwde
in
cmp
loop
in
jge
push
xchg
mov
or
sar
or
adc
mov
retf
inc
movs
pop
sub
inc
inc
jne
or
mov
mov
movs
popf
fdiv
inc
xor
pusha
jne
push
out
push
gs
mov
scas
xor
mov
xor
sbb
sub
mov
mov
cmp
inc
dec
scas
enter
(bad)
sbb
sbb
sub
push
and
mov
and
adc
add
idiv
(bad)
cs
je
sub
sub
ds
lods
sub
sub
xchg
jg
mov
xor
mov
xchg
jo
loop
or
in
dec
lea
jle
je
dec
aam
mov
cmp
mov
fisttp
xchg
adc
je
adc
jl
fdiv
test
xor
mov
cmp
dec
jle
ds
inc
pop
aam
(bad)
mov
jg
lea
loopne
sub
jg
pop
xor
icebp
add
into
jb
inc
add
dec
inc
sbb
inc
out
mov
fidivr
mov
in
or
sub
xor
sbb
inc
jne
pop
leave
pusha
pop
dec
mov
fisubr
and
cmp
push
jmp
jle
xlat
cmp
idiv
adc
stos
mov
movs
jnp
dec
and
pop
mov
xchg
mov
push
push
cs
arpl
cmp
inc
(bad)
enter
mov
or
push
push
push
in
push
loop
pop
mov
daa
cmps
icebp
xor
inc
mov
add
hlt
jl
jmp
mov
or
jp
sbb
pop
sti
jae
xchg
sub
jl
cli
test
ins
mov
push
mov
mov
fdiv
mov
daa
mov
(bad)
adc
mov
(bad)
loopne
push
add
jl
push
push
hlt
lods
mov
mov
xchg
or
es
add
outs
cmp
or
add
xchg
xor
dec
cld
push
outs
add
leave
pushf
push
sub
or
mov
ficom
stc
jecxz
pop
and
xor
or
mov
cld
cmc
dec
push
mov
mov
or
cld
adc
pop
xor
xchg
fistp
mov
push
mov
mov
cmc
inc
and
adc
cmp
inc
xor
mov
sbb
fwait
inc
xchg
xor
mov
leave
lods
out
sub
aaa
hlt
adc
xlat
aaa
pop
push
clc
bound
nop
pusha
or
inc
jno
add
leave
mov
add
pusha
pusha
or
add
scas
mov
jne
mov
push
or
adc
push
mov
cmc
cs
pop
adc
(bad)
lods
jge
mov
and
mov
inc
mov
or
jmp
idiv
push
ins
ret
add
cmp
or
loopne
or
xor
fld
stc
or
and
or
cmp
mov
les
jo
push
push
cdq
test
push
cmp
and
or
(bad)
cmp
mov
out
push
pop
pusha
xor
mov
dec
push
rcl
adc
xchg
jb
xchg
loope
cmp
mov
cmp
clc
rcl
inc
scas
push
or
ds
mov
mov
ss
jle
cmp
jne
or
lock
dec
inc
into
cmp
mov
jp
mov
push
or
pop
mov
ds
xor
aaa
jb
jl
shl
or
test
push
cmp
pop
mov
div
sti
mov
sar
pop
xor
(bad)
and
jae
mov
inc
fisubr
out
jmp
or
and
mov
mov
dec
jne
xchg
pushf
jo
sub
push
shr
test
enter
lods
call
jb
in
js
sbb
cmp
scas
and
jae
xor
jo
fadd
and
mov
push
in
not
fdiv
ret
std
gs
inc
jo
sti
push
fcmovnbe
cwde
mov
std
fcom
sub
or
jmp
mov
call
mov
cs
stos
aam
aam
shl
sub
rol
add
jb
aam
add
and
int3
xchg
ds
gs
loope
les
(bad)
int3
les
inc
cs
enter
in
enter
push
dec
ret
add
leave
ret
push
xor
push
push
(bad)
cmc
mov
push
push
clc
test
jne
mov
lods
add
enter
mov
cld
sbb
mov
stc
(bad)
jmp
inc
sub
fadd
mov
cmp
push
cmp
sti
inc
inc
push
sub
xchg
xchg
cmp
ins
mov
pop
sbb
movs
push
mov
jb
dec
shr
hlt
push
jge
lea
adc
xchg
test
test
mov
inc
clc
lock
cmp
cmp
movs
fs
inc
mov
dec
cmp
(bad)
stc
mov
clc
pop
jnp
mov
and
inc
enter
(bad)
movs
loope
(bad)
sar
xchg
sub
cmp
ror
pop
ds
jmp
jge
xchg
cli
or
inc
push
shl
dec
dec
sbb
and
adc
add
loopne
xchg
jne
cli
cld
leave
and
dec
adc
cld
lidtd
xor
out
pop
cmp
jge
sbb
retf
jge
push
test
adc
mov
sbb
jge
add
ins
xchg
sub
add
jle
xchg
or
and
cld
push
jbe
fisttp
mov
inc
inc
inc
int
pop
sbb
inc
xor
dec
mov
xor
cmp
inc
mov
add
adc
out
mov
repz
repz
add
fst
nop
push
jecxz
das
sbb
sbb
out
add
dec
jge
je
mov
xchg
xchg
add
adc
adc
pop
adc
cmp
inc
inc
mov
ja
aam
and
dec
xchg
mov
inc
inc
adc
push
mov
cwde
inc
cmp
ror
pop
sub
cmp
push
dec
(bad)
mov
ins
mov
xchg
test
mov
getsec
jne
mov
sub
mov
cwde
jl
add
xchg
jae
pop
jle
stos
ja
leave
stos
mov
sub
sbb
add
out
test
lea
sub
adc
inc
adc
lds
movs
mov
shr
dec
ret
mov
jmp
lea
aaa
cmp
shl
adc
pop
(bad)
dec
inc
or
ins
outs
jg
les
and
or
mov
aad
add
jo
push
add
cli
mov
sbb
push
inc
fcmovu
add
add
push
push
fisubr
pop
rol
js
dec
not
add
add
bound
add
pop
jl
adc
lods
inc
xchg
push
xor
or
cli
xchg
add
and
jo
int
add
push
or
jbe
adc
xchg
fs
xchg
jecxz
adc
push
fild
clc
dec
movs
xor
push
jbe
adc
inc
inc
hlt
and
inc
test
movzx
mov
mov
mov
mov
jmp
ror
stos
nop
pushf
jne
push
sar
nop
pop
xor
pusha
inc
ja
push
xor
add
and
sahf
jne
dec
cmps
mov
xor
dec
add
or
sub
mov
cmp
(bad)
ja
xor
cmp
not
cwde
mul
adc
mov
sbb
inc
shl
jne
xor
call
and
push
call
shl
hlt
mov
add
lock
lock
mov
mov
hlt
jbe
add
test
push
in
sub
adc
int3
nop
mov
ror
sub
stos
lds
mov
call
cmp
into
shr
or
leave
xchg
pop
add
xchg
add
jmp
push
push
(bad)
and
xchg
mov
out
in
es
fwait
stos
xor
inc
cmps
mov
ins
push
and
shr
mov
mov
adc
in
and
pop
adc
sub
add
(bad)
or
out
bound
dec
push
mov
mov
push
pop
or
sbb
ror
clc
add
sub
cmps
(bad)
inc
shr
cmp
jle
mov
add
adc
push
je
scas
pusha
mov
xchg
adc
cmp
imul
out
jp
push
adc
push
pushf
retf
mov
or
add
sar
int3
jo
adc
shr
xlat
clc
push
jb
les
push
ins
ds
push
dec
or
clc
stc
adc
or
sbb
clc
inc
lods
xor
dec
popf
sub
and
push
(bad)
pop
xchg
fst
imul
adc
test
outs
jnp
repnz
or
jmp
imul
test
jle
xor
inc
popf
sbb
jge
sbb
unpckhps
add
imul
loope
adc
enter
or
cmp
push
xlat
sar
sti
cmp
pop
not
pop
and
push
add
not
mov
mov
cmp
dec
jmp
sub
push
inc
mov
(bad)
dec
and
aas
adc
shr
and
sti
jecxz
push
shr
push
fdivrp
pop
sub
cmp
sub
(bad)
cmp
int
pop
out
(bad)
shl
or
call
dec
sbb
or
add
sub
push
add
inc
jo
add
dec
in
add
or
xlat
mov
cli
mov
sub
into
xchg
and
sbb
and
and
add
fs
inc
add
inc
push
or
or
or
rcr
fs
jae
test
mov
ret
shr
xchg
xor
jl
or
or
sub
push
(bad)
push
dec
inc
inc
scas
fdiv
enter
add
mov
scas
xor
or
fs
inc
or
push
aam
push
scas
aas
or
pop
xchg
push
shr
mov
loope
mov
add
dec
jle
add
or
mov
imul
add
push
nop
fdiv
scas
fdivr
call
or
std
call
add
add
stos
scas
imul
sbb
ins
add
out
orps
loopne
sbb
out
arpl
push
adc
sub
adc
or
aaa
sbb
jl
sahf
mov
jmp
sub
jecxz
push
test
add
outs
in
movs
push
mov
cmp
pop
jo
test
push
xor
push
sub
scas
les
xor
pop
adc
fcomi
(bad)
call
mov
sub
sub
xchg
cmp
les
dec
or
dec
jne
fisubr
jno
cmp
jne
adc
rcr
pop
xor
inc
and
enter
dec
les
and
call
sti
and
xchg
xor
add
scas
or
pop
loopne
and
cmp
mov
dec
add
fwait
sbb
add
xor
mov
push
mov
jg
inc
imul
pop
pop
xor
sti
add
dec
mov
add
jae
aam
mov
or
dec
jne
dec
daa
mov
mov
push
push
mov
out
sbb
add
push
(bad)
jle
add
xor
and
adc
sub
shr
lods
aam
je
xor
dec
mov
adc
pop
adc
add
(bad)
es
shr
repnz
adc
adc
mov
mov
xchg
sub
outs
pop
aam
xor
call
arpl
push
dec
and
push
(bad)
nop
nop
mov
adc
shr
and
push
adc
push
add
out
jg
test
je
xor
shr
jecxz
jne
mov
out
je
adc
aas
add
jg
pop
rcr
mov
(bad)
push
ret
add
and
es
add
dec
xor
mov
idiv
test
neg
mov
mov
mov
inc
jnp
gs
cs
lea
mov
push
shl
test
sub
and
and
mov
lea
inc
je
add
rcl
pushf
xor
sbb
fcomp
ret
jne
xor
mov
(bad)
nop
add
add
in
xchg
xor
and
add
or
je
jmp
add
dec
jmp
rol
push
add
or
loope
add
or
or
and
sub
sbb
dec
mov
and
xchg
pop
adc
cmp
or
and
fld
add
fdiv
mov
into
cld
hlt
xor
aas
in
js
mov
jae
sub
add
imul
aam
out
inc
jo
cmp
and
dec
sub
adc
outs
lahf
push
cmp
or
mov
adc
lods
sbb
push
out
fadd
and
mov
test
addr16
xchg
cmp
dec
or
pop
xchg
nop
mov
test
inc
inc
outs
pop
imul
les
fist
cwde
cmps
mov
push
rol
or
shl
push
cmps
push
xor
inc
das
aaa
and
xorps
test
popa
mov
adc
retf
pop
add
sbb
sbb
or
xor
lods
add
dec
adc
or
test
mul
sbb
ins
push
push
outs
mov
or
jp
mov
rol
add
push
dec
xchg
push
dec
dec
pop
or
and
push
cmp
inc
mov
mov
and
or
jae
inc
cld
test
or
jae
jno
add
and
cmps
leave
add
imul
or
fbld
jno
or
and
imul
and
ins
inc
add
dec
dec
pop
adc
or
and
lods
dec
push
je
lahf
loopne
add
or
(bad)
or
add
das
inc
inc
or
popa
and
jge
or
xchg
outs
add
and
xor
inc
(bad)
mov
xchg
push
mov
(bad)
pop
jns
nop
nop
pop
inc
add
add
maxps
mov
inc
add
inc
(bad)
push
inc
cwde
pop
stos
sbb
jae
xor
nop
xor
js
add
scas
inc
and
mov
inc
cmps
cs
dec
aad
ja
dec
xor
inc
nop
xchg
mov
lods
lahf
aaa
adc
sub
loope
popa
pop
ja
sub
imul
pop
pop
or
inc
lods
bound
aaa
dec
js
outs
pop
jae
sub
sub
cmps
inc
mov
adc
cmps
out
ja
xor
outs
jne
jae
gs
mov
add
push
inc
fsubr
cmps
call
add
push
call
dec
scas
imul
and
ret
mov
inc
push
aaa
jg
scas
sub
movs
sbb
jecxz
push
sahf
xchg
mov
aas
push
test
adc
nop
out
movlps
daa
adc
inc
pop
aaa
push
shl
adc
jne
bound
addr16
push
push
or
pop
jp
mov
xchg
inc
or
mov
lea
push
fisttp
xchg
ja
(bad)
pop
adc
dec
pop
arpl
cmp
test
xor
add
push
jge
jo
dec
adc
add
dec
jo
arpl
adc
inc
pop
dec
test
cmps
dec
mov
xor
adc
inc
das
adc
jg
inc
inc
and
inc
or
mov
pop
inc
xor
mov
or
sub
and
stos
cmps
sub
div
pop
call
mov
sahf
mov
outs
and
mov
shr
mov
sbb
mov
mov
or
push
dec
ret
(bad)
and
add
loop
mov
mov
fadd
sbb
dec
pop
jns
mov
sbb
push
add
(bad)
aaa
inc
fisub
lods
sbb
pop
or
sub
adc
and
rol
adc
call
rcl
jg
add
cmp
iret
push
xchg
ins
aam
add
push
out
outs
and
inc
idiv
push
and
les
ins
xlat
pop
push
jg
lds
ins
aaa
dec
xchg
and
(bad)
outs
fild
adc
mov
push
retf
add
sbb
loop
push
aas
test
imul
daa
mul
(bad)
push
mov
pop
(bad)
sub
pop
rcl
add
mul
inc
mov
(bad)
inc
push
adc
push
stos
imul
pusha
lds
out
jbe
bound
push
pop
aaa
push
lods
add
out
inc
in
(bad)
repz
xchg
bound
out
sub
push
addr16
loop
lea
inc
ds
bound
outs
dec
cmps
push
jmp
outs
pop
loope
xchg
std
pop
les
mov
jne
sbb
movs
sti
movzx
add
pushf
retf
and
or
jp
mov
movzx
add
clc
jmp
loopne
or
sub
aaa
dec
ins
mov
add
and
mov
jmp
sbb
cmp
mov
xor
inc
rcr
rcr
pop
mov
jg
add
mov
inc
aas
enter
rcr
jbe
ja
inc
enter
mov
fadd
ss
call
push
adc
(bad)
pusha
fnstsw
sahf
jne
inc
add
jbe
push
push
in
out
pop
inc
pop
mov
sbb
sub
fcmovnbe
jno
(bad)
je
faddp
sbb
stc
data16
outs
fsub
fwait
jmp
dec
fld
ins
jnp
pop
daa
addr16
outs
in
fld
fstp
ins
shr
mov
fcom
push
cmp
ret
sub
adc
pop
rcl
ret
cvtps2pi
ret
sub
out
js
adc
aam
cmovge
rol
add
outs
jne
jl
ins
cwde
xor
sti
outs
sbb
fsubrp
and
xor
test
adc
call
sahf
jae
sbb
sbb
pushf
jbe
ja
mov
loopne
or
dec
add
push
xor
push
adc
nop
and
clc
and
mov
pop
xchg
mov
add
jg
(bad)
jl
(bad)
jge
inc
and
and
mov
hlt
inc
xchg
add
push
pusha
adc
cdq
or
inc
cs
out
ss
out
mov
in
push
cs
dec
jp
push
pop
xor
retf
imul
out
cmps
gs
dec
jo
inc
cmp
ins
nop
je
xchg
clc
and
adc
fmulp
mov
mov
test
clc
movs
pop
pop
pop
ret
push
rcl
shl
and
out
aad
mov
pop
mov
jg
nop
push
add
outs
cwde
inc
cmc
mov
int3
push
and
inc
ss
shr
cmps
hlt
fld
mov
push
sbb
push
cmp
adc
mov
adc
(bad)
gs
imul
xor
jnp
arpl
cld
leave
add
rol
push
or
and
xor
push
sahf
xchg
ins
and
mov
ret
xor
jnp
not
pop
fsubrp
arpl
rcr
and
sbb
push
outs
pop
sub
cmp
cmp
test
lock
sub
add
popa
jp
or
sbb
adc
rcl
push
xchg
or
cwde
adc
pop
jnp
loop
daa
hlt
adc
pop
sbb
inc
sub
adc
and
stos
add
test
shl
push
loopne
jmp
imul
mov
adc
cwde
inc
sbb
cmc
cmp
inc
sbb
push
xlat
xchg
rol
(bad)
into
push
lea
inc
xor
add
mov
add
clc
pop
(bad)
pop
das
scas
xor
sbb
xchg
add
int
sub
sbb
xor
sbb
pop
xor
jg
(bad)
jg
and
jae
mov
ss
sub
mov
push
sub
lods
data16
xor
sub
js
adc
jb
sbb
cmp
jge
mov
rcl
add
and
xor
fbstp
daa
daa
test
push
jmp
clc
loopne
add
xor
adc
lods
xor
add
and
push
dec
cmp
push
push
cli
sbb
icebp
lea
pop
pusha
cmp
lods
dec
or
cmps
inc
add
or
sbb
daa
dec
scas
fcomp
or
outs
mov
xor
ret
push
sti
lea
dec
mov
dec
hlt
lock
adc
dec
scas
jne
jne
ins
mov
or
mov
add
add
aaa
adc
jne
lds
rol
in
cwde
pushf
mov
fcmovnbe
mov
xchg
add
or
pop
lahf
pusha
cs
inc
aam
clc
inc
int
ins
inc
ret
jo
lock
movs
mov
push
sbb
mov
shl
push
fcom
sbb
sbb
add
and
mov
or
push
or
bound
xchg
shl
shl
add
pop
pop
arpl
out
outs
repnz
hlt
dec
or
test
bound
pop
xchg
adc
inc
push
outs
add
movs
pop
loopne
dec
aas
ins
or
aaa
je
adc
jmp
xor
and
push
out
dec
lock
pusha
push
dec
ss
int3
and
adc
gs
in
adc
fbstp
test
dec
pop
addr16
adc
jbe
in
outs
or
pop
fwait
(bad)
test
popa
add
cdq
and
gs
pop
mov
addr16
inc
xchg
pop
push
sbb
iret
out
dec
ins
add
out
outs
jg
test
xchg
imul
or
popa
outs
or
mov
or
cli
push
adc
sbb
sbb
jb
popa
jo
cmp
inc
outs
sbb
mov
stos
push
dec
push
push
push
adc
ret
push
and
popa
rcr
dec
sbb
outs
push
mov
or
movs
test
jp
ins
sbb
inc
jbe
and
or
jnp
or
inc
jne
in
sbb
rcr
or
fwait
jle
addr16
sbb
inc
add
call
dec
adc
push
push
clc
jns
das
sbb
mov
loopne
xchg
sub
dec
sbb
mov
mov
push
or
outs
inc
add
cmp
or
fwait
jnp
pop
lods
cli
dec
mov
je
add
btr
push
mov
xor
fstp
mov
push
mov
les
or
and
mov
add
outs
jb
mov
sub
scas
xor
mov
jae
add
outs
jne
in
add
imul
fdiv
xchg
push
adc
cmp
or
push
add
sbb
outs
imul
push
xor
scas
xor
pop
outs
jo
or
inc
jbe
call
add
imul
mov
adc
add
xchg
dec
add
mov
push
es
xchg
das
sub
push
inc
mov
(bad)
(bad)
pop
dec
jp
inc
pusha
loop
dec
dec
pop
je
cs
inc
push
aam
push
sbb
jl
sbb
cmp
push
hlt
push
cld
add
lods
adc
jns
xor
sub
and
inc
pop
sbb
inc
add
xor
dec
icebp
adc
sub
sbb
or
pop
push
xchg
loop
adc
push
push
jb
je
scas
mov
push
leave
push
sub
push
and
mov
jo
sub
stc
and
jae
inc
adc
cs
dec
pop
das
xor
add
cs
adc
adc
imul
pop
cmp
fisubr
pinsrw
ds
jne
pop
lock
psubw
push
cli
imul
or
push
popa
out
rol
ss
aaa
test
sbb
add
xor
loopne
jmp
add
rcl
lea
add
test
xchg
(bad)
jnp
xchg
fcomp
dec
mov
inc
outs
adc
cs
sub
sbb
dec
or
adc
jecxz
test
ret
fisub
mov
lea
popa
mov
cmps
retf
outs
jb
popa
sub
xor
inc
mov
inc
cmp
pop
retf
cli
pop
push
mov
xchg
mov
loop
call
add
inc
sub
adc
sbb
inc
movs
aas
cmp
or
mov
movs
pop
push
dec
pop
xchg
pusha
outs
fidiv
call
gs
popa
and
sub
scas
jmp
add
add
(bad)
rcr
or
loope
dec
adc
pop
std
push
push
push
test
pop
aam
in
mov
fwait
push
push
sbb
das
xor
jl
xor
dec
je
setno
push
add
dec
inc
mov
ins
dec
pop
add
and
scas
inc
not
push
sahf
imul
dec
pop
out
sbb
stos
sbb
xor
cmp
mov
and
or
(bad)
or
test
xchg
rol
pop
adc
scas
lds
adc
loope
mov
hlt
inc
arpl
sub
data16
sub
pushf
aas
jno
push
enter
push
push
add
inc
aas
pop
dec
or
add
push
leave
pushf
inc
test
push
push
mov
jmp
(bad)
ror
popf
add
adc
pop
in
or
fwait
iret
daa
xchg
dec
mov
jg
sahf
enter
pop
loopne
out
popf
jg
pushf
inc
add
and
cmps
sahf
sub
cmps
adc
js
rcr
push
ret
sub
and
pusha
xchg
jecxz
popf
and
xor
dec
and
cmp
push
or
aas
jl
(bad)
jl
adc
daa
mov
sub
push
out
dec
test
test
iret
jnp
dec
call
push
pushf
cwde
add
xchg
push
movs
in
or
dec
pop
or
adc
sbb
les
xchg
mov
xchg
adc
cmps
pusha
mov
dec
outs
xchg
call
inc
jb
xchg
sbb
jnp
bound
mov
jbe
popa
je
clc
dec
adc
xlat
les
ror
sub
pop
out
cmc
test
test
adc
pop
leave
pop
mov
lea
jno
leave
sub
inc
cmp
pop
mov
mov
pop
enter
jnp
push
cmps
enter
or
xor
push
jg
loope
xor
int3
add
pushf
dec
dec
jno
cwde
add
(bad)
mov
dec
mov
adc
movs
adc
mov
inc
or
stos
lock
xor
inc
mov
cmp
add
dec
outs
ror
(bad)
xchg
adc
or
sub
pushf
xchg
daa
neg
pop
or
pop
out
frstor
in
mov
call
sahf
das
dec
pop
dec
add
cmp
loop
retf
push
dec
sbb
xchg
loopne
jae
xchg
es
xchg
add
pop
adc
mov
int
mov
adc
mov
loopne
cmps
add
or
lock
dec
sbb
(bad)
les
lsl
add
test
mov
sbb
xor
movs
inc
pop
lods
ror
ins
xchg
mov
in
adc
sbb
cmp
cmp
pop
or
jo
clc
mov
push
movs
gs
sub
xor
push
das
pop
add
add
push
(bad)
adc
xor
pop
cmp
inc
mov
pop
daa
cmovbe
xchg
jmp
dec
add
mov
mov
cmps
sub
push
outs
add
or
sbb
pop
stc
rol
mov
pop
jns
scas
movs
arpl
popa
dec
and
dec
xchg
ss
rol
bound
sub
cmp
bound
arpl
arpl
fs
iret
imul
push
fs
arpl
mov
push
adc
push
nop
test
xor
pop
push
test
aam
and
sub
jp
mov
add
(bad)
mov
mov
das
sbb
test
inc
push
(bad)
fbld
add
xor
in
rol
and
shl
mov
ja
or
add
in
or
lock
push
adc
push
adc
mov
sub
gs
add
and
popf
pop
and
inc
adc
mov
jae
adc
sbb
out
push
mov
imul
(bad)
push
push
cmp
jp
xor
xor
or
arpl
call
inc
movs
add
fdiv
mov
push
jb
mov
mov
test
enter
ja
into
loope
lahf
add
aas
out
add
xor
and
push
or
je
xchg
inc
enter
mov
pop
cdq
adc
cmp
fidiv
or
mov
test
push
das
adc
xchg
dec
sbb
dec
xor
das
sbb
jecxz
bound
adc
xor
gs
inc
ficomp
rcr
or
sbb
push
dec
outs
fldcw
aaa
jo
and
pop
sbb
fs
iret
mov
cmp
jae
pop
pushw
inc
mov
push
dec
outs
jb
in
sbb
inc
pop
sbb
or
jne
daa
dec
mov
jae
outs
mov
and
inc
xchg
loop
adc
or
repz
popa
push
and
add
xor
mov
sbb
jmp
outs
imul
out
loop
inc
ret
dec
icebp
dec
enter
test
xor
cli
dec
outs
pushf
adc
push
jne
sub
loop
test
add
fidivr
data16
add
ds
pop
or
sub
cmp
loopne
mov
stos
pop
push
mov
in
imul
(bad)
scas
pop
adc
test
add
stos
cmps
stos
dec
sub
add
sti
es
stos
das
cmp
inc
sbb
sub
xlat
xor
dec
movs
pop
dec
inc
js
inc
scas
push
jecxz
pop
aas
cmps
add
add
das
sbb
es
add
add
ret
and
inc
add
aaa
push
jmp
adc
sbb
sub
sub
adc
sbb
or
lods
dec
push
adc
push
and
jae
push
adc
stos
pop
adc
xor
or
adc
xchg
xor
sti
add
sbb
add
(bad)
in
loope
lea
inc
test
test
and
in
xchg
inc
add
add
leave
mov
arpl
adc
lock
or
stc
outs
mov
outs
lods
test
(bad)
mov
sbb
and
pop
xchg
(bad)
sbb
pop
add
push
jecxz
and
mov
or
mov
(bad)
es
das
shr
cmp
push
clc
ins
push
xchg
push
hlt
imul
mov
add
int
and
add
es
shl
adc
and
add
jl
ins
(bad)
xlat
(bad)
retf
hlt
add
or
push
dec
jae
push
sbb
leave
mov
or
sub
rol
xchg
lock
add
xchg
mov
add
aad
ins
loopne
xlat
ret
sub
mov
call
sbb
dec
push
xor
jns
mov
adc
pop
adc
and
inc
(bad)
popa
cmp
dec
lods
cmc
cmp
push
push
inc
push
inc
pop
sub
pop
add
outs
push
or
add
popa
jo
sbb
xchg
aas
mov
mov
or
inc
data16
jmp
lea
add
mov
arpl
imul
pop
or
data16
cs
retf
dec
add
push
xchg
inc
or
dec
add
or
sbb
test
shl
loope
add
add
jo
js
imul
or
push
jmp
enter
push
cmp
add
pop
clc
mov
iret
jae
dec
mov
adc
sbb
and
sub
lods
dec
fisttp
scas
mov
popa
fs
out
sbb
and
sbb
add
and
leave
add
add
retf
enter
mov
push
mov
popf
lock
or
and
or
ret
mov
adc
pop
and
sub
test
in
out
or
jo
cmp
mov
pop
inc
xchg
add
inc
call
and
dec
push
ret
test
cwde
dec
inc
push
jnp
and
inc
pushf
inc
imul
fidivr
mov
or
add
inc
push
sub
rcl
mov
enter
lds
cmp
pop
add
adc
mov
pusha
jbe
mov
push
mov
fs
mov
outs
inc
mov
sbb
je
add
jl
push
and
dec
xor
(bad)
add
int
mov
out
and
jecxz
call
jne
push
lods
sbb
and
or
and
adc
or
inc
call
ins
mov
arpl
sbb
xor
xor
jg
and
js
mov
push
xchg
jl
popa
clc
imul
loope
(bad)
ret
jne
xor
addr16
and
adc
mov
fs
jecxz
not
dec
push
loopne
mov
scas
push
jno
mov
xchg
movs
(bad)
cmp
outs
push
outs
imul
jl
mov
gs
outs
inc
fidiv
in
pop
mov
mov
adc
mov
les
pop
adc
sahf
movzx
test
xor
or
cmc
mov
add
dec
jmp
and
push
out
push
std
jns
adc
xor
sub
cmp
loopne
mov
jl
pop
push
push
les
pop
mov
mov
(bad)
mov
add
ds
retf
add
and
pop
or
lods
or
pop
call
inc
cmps
sbb
call
push
repz
xchg
out
btr
adc
xchg
xchg
xchg
xchg
test
cwde
or
not
pop
das
es
or
fld
ds
inc
or
jo
bswap
jecxz
sub
test
hlt
inc
dec
jnp
add
iret
xor
or
mov
fs
push
xchg
or
pop
add
fisubr
xlat
add
add
push
xchg
or
fnsave
dec
mov
jno
inc
add
mov
iret
fdivr
mov
xchg
out
inc
inc
sahf
test
adc
(bad)
jo
aad
push
outs
retf
cvtps2pd
unpckhps
xor
adc
pop
ror
sbb
nop
stc
sbb
mov
inc
mov
mov
sahf
push
stos
add
inc
hlt
xchg
mov
ja
add
add
test
mov
cmp
out
ret
loope
add
(bad)
fdivr
add
loopne
arpl
add
js
jge
adc
xor
add
adc
sub
mov
mov
cvtps2pd
add
add
xor
nop
mov
cwde
adc
sub
mov
and
call
push
dec
lea
adc
xchg
adc
xchg
push
ret
imul
jge
inc
fild
ss
dec
movs
jecxz
test
inc
popf
lds
fucom
push
imul
jae
add
retf
mul
push
sub
add
sbb
sub
mov
inc
inc
ja
dec
add
ins
push
loop
gs
sahf
pop
mov
cdq
in
push
pop
mov
push
jbe
inc
add
adc
adc
iret
or
jo
pop
add
dec
mul
add
add
add
add
icebp
movs
jbe
adc
add
daa
pusha
aaa
loope
iret
inc
outs
cmp
push
sbb
(bad)
or
or
cmp
aad
sbb
or
sub
push
out
add
push
sub
jae
shl
jle
cmp
jg
pop
push
sbb
mov
das
outs
sar
mov
lahf
fild
jbe
and
mov
push
add
inc
adc
cmp
sar
cmp
ret
jge
out
imul
adc
call
sub
inc
dec
and
mov
gs
add
xchg
jne
jns
adc
mov
xchg
and
or
or
lock
add
inc
add
pop
test
mul
adc
add
ret
neg
pusha
ss
or
pop
add
push
push
add
xlat
test
ret
push
inc
or
inc
jecxz
inc
xlat
xor
xchg
dec
push
(bad)
xlat
inc
adc
sub
pushf
adc
sbb
push
bound
bound
rol
int3
nop
ret
mov
lea
ds
sbb
adc
inc
cmp
xchg
add
inc
ret
test
ret
jnp
(bad)
rcl
jecxz
les
pop
leave
enter
fstp
lds
aad
mov
ret
push
mov
aad
popa
xor
fsubr
jno
jo
shl
inc
dec
adc
mov
mov
stc
xor
add
cmp
sub
ret
jae
ins
test
int
adc
cmp
lea
movs
std
add
cmp
mov
mov
jle
cmp
pop
mov
inc
xor
sub
pop
or
std
cmp
or
inc
jno
in
pop
sub
dec
pop
mov
pop
dec
or
jne
inc
xor
out
sbb
sbb
pop
mov
jne
or
hlt
outs
clc
mov
ficom
cwde
push
jo
push
lods
ror
movs
push
(bad)
mov
retf
lods
movs
iret
shr
(bad)
(bad)
jg
rol
or
or
call
and
mov
les
add
add
arpl
test
add
and
add
add
enter
and
addr16
leave
mov
and
push
or
pop
or
add
pop
xchg
std
int
dec
sbb
and
or
shl
shr
add
icebp
or
jbe
sar
jbe
xor
cwde
leave
jecxz
mov
nop
add
imul
xor
pop
adc
mov
ror
pop
xchg
push
inc
retf
push
xor
jl
inc
and
je
adc
sti
popa
je
mov
aas
pop
(bad)
cmp
loope
ficom
and
or
pop
push
pop
and
pop
loopne
xor
fild
or
das
mov
mov
retf
mov
fmul
or
or
add
ss
scas
sbb
aas
int3
adc
inc
add
sub
int3
dec
and
push
dec
nop
or
jb
sar
fild
dec
lods
mov
dec
cmp
inc
int
push
mov
test
push
dec
add
jo
jl
push
lds
pusha
sbb
call
push
xchg
mov
jnp
pop
mov
pop
(bad)
xchg
adc
jmp
or
cmp
add
inc
dec
xchg
add
cs
inc
das
sub
mov
or
sub
and
into
int
imul
dec
jo
inc
call
bound
adc
or
das
into
into
movs
cmp
std
mov
iret
dec
(bad)
stos
inc
inc
push
dec
mov
pop
inc
mov
aaa
ret
iret
add
pop
test
add
stos
sub
inc
nop
sub
and
rcr
inc
shl
adc
fwait
sub
inc
xchg
xor
gs
or
add
rol
or
jae
mov
or
jb
(bad)
ins
mov
(bad)
rcl
rcl
xor
xchg
rcr
jo
shl
bound
sbb
push
(bad)
adc
or
jno
imul
jne
(bad)
push
inc
add
xor
adc
or
sbb
jae
xlat
ret
jnp
adc
test
jno
les
push
cmp
stc
cmp
mov
call
cmps
jae
sar
iret
and
imul
push
mov
ja
mov
xchg
retf
out
sbb
cwde
mov
les
add
leave
sub
imul
and
mov
pop
xchg
adc
sbb
jg
push
inc
or
cmps
jg
push
sub
and
test
adc
pop
hlt
ror
inc
adc
std
mov
in
lea
popa
js
adc
loope
aam
adc
arpl
ins
imul
or
adc
dec
xchg
test
inc
int3
cmp
aam
mov
inc
and
inc
sub
xchg
xchg
push
push
jo
lods
and
shr
fwait
cmps
aad
leave
push
xchg
ja
add
jecxz
push
dec
inc
nop
loopne
jne
test
pop
inc
inc
(bad)
mov
aaa
push
adc
xor
adc
cmp
xchg
xchg
int
mov
or
outs
cmp
ins
xchg
outs
int3
repz
jmp
xlat
iret
ins
fild
(bad)
push
cld
add
push
inc
fild
sahf
loopne
test
add
push
nop
dec
iret
hlt
gs
push
push
dec
xchg
dec
iret
in
mov
(bad)
push
shr
xchg
dec
jbe
push
push
xchg
dec
test
dec
cmp
cmps
mov
or
push
or
addr16
mov
push
sub
clc
sub
pushw
movs
inc
push
loopne
out
mov
xchg
push
mov
jp
xor
push
jns
lea
sub
jg
in
imul
dec
dec
jmp
mov
mov
ins
das
loopne
jb
push
add
pop
push
ja
rol
or
push
sbb
dec
push
dec
add
and
outs
(bad)
les
pop
push
add
mov
push
add
inc
add
add
jecxz
dec
imul
mov
inc
jmp
fcmovnu
fidiv
je
inc
outs
outs
jmp
adc
bound
mov
daa
arpl
adc
(bad)
mov
add
inc
add
jmp
push
xchg
mov
call
xchg
lods
push
sub
mov
lock
push
jae
adc
inc
pop
push
or
add
inc
sbb
push
out
in
or
std
xor
add
inc
outs
arpl
lahf
mov
jmp
jo
jge
push
sbb
jo
mov
cld
or
xor
ds
js
movs
adc
jge
cmp
mov
adc
pop
jp
pop
imul
push
(bad)
and
sbb
lds
test
mov
retf
adc
int3
add
(bad)
mov
xchg
pop
xlat
in
ins
or
loope
push
sub
sub
xchg
fwait
jmp
sub
dec
pop
add
ins
outs
mov
add
cwde
repz
adc
jae
push
push
clc
cs
pushf
xor
inc
test
and
jne
je
jb
mov
xchg
popf
and
movs
fwait
das
repnz
lea
shl
popa
dec
push
inc
sbb
inc
inc
rol
push
push
lods
adc
mov
stos
pop
mov
test
test
les
dec
outs
xor
stos
ret
int3
shr
sbb
mov
repz
ins
popf
xor
outs
ja
out
and
jbe
jnp
push
fsub
das
cs
jmp
xchg
sub
leave
sub
pop
stos
xor
pop
call
fdiv
cmps
loopne
lock
dec
push
inc
cmp
sbb
loope
cs
into
dec
ins
add
add
pusha
inc
mov
pop
mov
pop
adc
mov
sub
or
imul
adc
sub
fsub
add
dec
outs
inc
xor
sub
pop
dec
xor
cmc
or
mov
ss
retf
inc
adc
je
dec
ss
imul
xor
push
or
adc
cs
stc
jns
popa
inc
and
inc
jbe
adc
push
inc
push
shl
js
jo
push
das
loopne
jmp
push
stc
or
mov
jns
mov
(bad)
jl
or
loopne
ret
mov
mov
sub
dec
fisub
das
mov
das
dec
jge
dec
xchg
xchg
adc
mov
xchg
and
ret
adc
adc
rcl
iret
movs
push
stos
test
push
sbb
fstp
in
movs
orps
sbb
rol
mov
mov
in
imul
loop
xor
stc
out
test
int3
dec
jb
fst
add
cmove
mov
jmp
icebp
dec
out
and
int
sub
dec
sub
pcmpeqd
ret
daa
mov
ds
inc
repz
jb
repnz
out
out
adc
fwait
mov
pop
ror
jmp
mov
add
mov
add
clc
jle
aas
xchg
jmp
mov
sub
maxps
jns
fnstsw
cld
call
in
addr16
xor
mov
mov
xchg
pop
add
add
add
xor
lock
add
add
mov
push
mov
std
(bad)
(bad)
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
fstp
cmp
(bad)
in
(bad)
in
(bad)
jmp
jmp
(bad)
dec
jmp
jmp
jmp
jmp
jmp
jmp
cmps
(bad)
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
fdivr
(bad)
(bad)
fcos
fdivr
xlat
call
call
call
call
call
call
call
dec
dec
dec
inc
sub
jmp
push
inc
and
lods
es
xor
hlt
xchg
neg
(bad)
push
and
js
cmp
ss
fcomp
cdq
pop
call
mov
push
add
pushw
sbb
xchg
sti
inc
test
popf
ss
(bad)
push
out
dec
mov
push
push
pop
push
mov
and
cs
aas
push
xor
mov
icebp
out
jnp
sub
pushf
mov
je
ds
xor
xchg
push
mov
mov
cmps
into
push
xor
ss
rol
movs
test
push
jo
fiadd
sub
or
push
push
lock
lock
addr16
(bad)
cld
push
outs
jle
scas
movs
mov
outs
xor
jge
mov
cmps
jnp
cs
mov
xchg
or
or
add
dec
inc
test
out
jbe
dec
adc
inc
cs
sbb
clc
in
cmps
movs
push
or
int
cmp
cmc
mov
push
(bad)
or
cmp
in
add
sbb
add
test
cmp
cmp
dec
rol
push
dec
imul
int3
or
mov
cmp
repnz
je
push
mov
sbb
xchg
stc
pop
mov
sbb
push
dec
jb
out
adc
xchg
loop
xor
bound
aam
lds
arpl
cmps
(bad)
in
daa
mov
int
add
inc
gs
push
jns
daa
fistp
xchg
movs
rcl
inc
retf
sub
jg
or
ins
sub
add
push
pop
fist
(bad)
or
retf
and
test
dec
bound
out
fdivr
jne
pop
rcl
xor
js
add
adc
ror
clc
in
repz
xchg
enter
xchg
loopne
inc
sbb
outs
ins
jns
add
sub
les
xor
add
jp
jp
push
dec
and
pusha
mov
nop
jns
shl
lea
or
arpl
lods
push
dec
jmp
mov
add
inc
inc
inc
xchg
ror
dec
outs
fcomp
inc
jne
imul
sub
or
loop
adc
into
fs
je
inc
sub
and
test
mov
mov
loop
xchg
adc
or
mov
leave
push
cmp
aad
arpl
xor
xor
adc
in
sub
fisub
jb
add
xor
add
pop
or
mov
rcl
in
push
add
mov
push
push
fsubr
push
adc
mov
inc
retf
add
add
jae
jo
cmp
mov
inc
rcl
pop
or
dec
dec
mov
jg
mov
and
add
call
jo
imul
popa
arpl
gs
minps
mov
add
or
xor
(bad)
or
and
test
jae
jae
mov
or
in
pushf
push
mov
retf
cmp
outs
addr16
in
lods
inc
popa
arpl
(bad)
enter
jns
inc
add
lods
jge
sbb
or
or
scas
adc
movs
jae
int3
jmp
ins
mov
inc
jne
or
rol
xchg
adc
xchg
dec
aaa
adc
pusha
push
scas
push
push
mov
mov
sub
mov
dec
iret
imul
pop
push
inc
popa
jb
jp
mov
mov
and
les
jp
inc
outs
cmp
dec
movs
aam
sub
adc
xchg
adc
dec
lock
inc
(bad)
add
push
inc
test
xchg
jp
test
sub
mov
adc
push
inc
cmps
sar
imul
add
pop
mov
adc
inc
test
pop
and
stc
add
call
sbb
or
test
push
or
inc
pop
aam
outs
pop
add
add
sti
cmps
jbe
clc
push
(bad)
add
mov
sbb
bound
add
test
rol
lods
mov
or
jp
pop
add
out
cmps
(bad)
mov
inc
inc
ins
mov
mov
jmp
dec
or
icebp
push
push
leave
ins
cmp
xor
mov
in
pop
pop
popf
call
inc
cs
mov
loope
jo
or
popf
and
push
hlt
jnp
dec
test
test
push
or
or
femms
xor
imul
sub
and
mov
or
data16
xor
pop
icebp
arpl
xor
xor
sbb
dec
je
mov
call
sbb
sbb
scas
iret
and
sbb
neg
pop
hlt
mov
or
dec
imul
pop
mov
out
sub
xchg
mov
mov
and
(bad)
cld
dec
jne
jp
add
mov
dec
add
mov
add
cmp
dec
and
mov
xor
adc
in
lds
dec
inc
and
xchg
push
jecxz
out
dec
or
sbb
inc
lock
rcl
mov
push
lahf
inc
movs
jno
add
pop
and
adc
lods
sub
push
dec
push
ja
in
jecxz
in
or
fsub
cmp
jo
dec
ret
pop
jmp
dec
adc
jnp
push
pop
or
pop
and
ja
repz
jns
adc
lahf
pop
call
mov
sar
add
dec
add
dec
add
sbb
xchg
sbb
mov
sbb
out
or
jo
mov
adc
in
pop
add
push
and
or
popf
mov
dec
add
or
inc
test
adc
xchg
adc
lods
or
arpl
add
add
inc
out
pushf
nop
aaa
(bad)
in
sub
stos
into
movs
lea
loopne
or
fisub
add
int
xchg
test
inc
pop
add
pop
xchg
(bad)
or
push
inc
out
inc
dec
mov
pusha
add
or
faddp
ja
push
xchg
push
scas
das
mov
sub
pusha
xor
push
stc
fs
test
and
cmp
add
sbb
adc
cli
push
lods
inc
daa
pop
aaa
xor
cmps
xchg
jo
fcomp
or
push
mov
push
dec
ins
gs
or
push
or
mov
sub
imul
mov
adc
gs
push
dec
jo
or
mov
inc
mov
adc
inc
ins
jo
popa
inc
(bad)
in
rol
sbb
or
xchg
loop
jp
out
int
jbe
sbb
jne
ins
sub
sbb
mov
mov
loopne
push
or
lods
add
fidiv
jg
ffreep
pop
cmp
aas
mov
ss
scas
stos
mov
ds
(bad)
xchg
pop
ret
inc
jmp
shl
sbb
movs
ja
and
pusha
add
adc
fld
xchg
int3
not
sbb
inc
add
aaa
xchg
rcl
ds
jne
or
fs
or
adc
pop
dec
pushf
or
push
popa
xor
test
xchg
adc
popa
arpl
mov
cmp
mov
pop
fisttp
mov
pop
fsub
test
dec
jmp
test
loopne
or
and
sbb
jo
hlt
imul
pop
stc
or
imul
sahf
xor
clc
dec
pop
out
nop
sbb
or
xlat
call
jns
sar
std
sbb
stos
pusha
add
dec
mov
jbe
mov
jbe
pop
iret
test
add
in
mov
lea
ffree
nop
imul
or
cmp
and
imul
outs
ss
stc
dec
mov
add
frstor
bound
adc
cmps
sub
adc
jo
daa
pop
adc
add
into
mov
adc
push
adc
outs
jo
adc
adc
imul
and
or
jl
push
jae
pusha
xchg
pop
or
add
ja
jae
test
push
movs
shl
sti
aad
pop
sub
loopne
addr16
dec
sbb
push
dec
scas
or
sbb
add
add
cmp
cld
push
aam
dec
addr16
fadd
pop
add
je
pop
adc
pop
(bad)
mov
inc
sar
fcmovne
mov
and
test
outs
push
js
dec
addr16
cmp
mov
dec
addr16
jmp
loopne
dec
mov
mov
outs
mov
jle
in
fisubr
mov
lds
ret
push
mov
inc
push
inc
retf
jae
ds
(bad)
and
call
lock
fisttp
add
daa
and
add
jp
pop
call
add
mov
test
pop
lock
mov
mov
jb
test
jmp
fadd
sub
add
mov
stos
jns
iret
adc
je
inc
ret
mov
mov
inc
js
sub
mov
push
xchg
xchg
rol
les
das
add
enter
push
or
int3
jnp
ret
and
add
sub
fisub
pop
add
(bad)
stos
test
xor
adc
jno
inc
test
fdivr
les
cmp
test
loope
mov
jmp
in
cmp
push
mov
jae
sar
in
pop
or
in
ret
cmps
or
stos
push
je
jo
icebp
fnstcw
(bad)
inc
je
xor
dec
stos
inc
ret
mov
mov
push
jae
xlat
xor
xchg
sbb
cmc
add
or
xchg
mov
cs
mov
xchg
test
add
xchg
iret
idiv
jl
es
sub
add
mov
adc
or
mov
je
adc
test
aas
cdq
scas
inc
js
mov
cmp
mov
xchg
retf
xor
push
or
mov
popf
sbb
sbb
inc
sub
mov
or
sub
mov
cmp
in
loope
add
inc
add
inc
lahf
ret
pop
dec
dec
add
or
push
push
mov
dec
outs
mov
fs
add
push
push
or
inc
out
mov
movs
dec
inc
test
movs
jo
jmp
xchg
pop
(bad)
mov
nop
mov
mov
or
pop
adc
std
cmovbe
js
or
out
pop
test
xor
mov
inc
repnz
and
pusha
or
not
dec
imul
sbb
adc
out
inc
and
outs
jmp
push
add
in
xchg
pusha
fimul
imul
stos
push
pop
jae
mov
mov
and
pop
dec
sete
das
jg
cs
ror
mov
cli
std
inc
fidivr
xor
sbb
(bad)
sbb
retf
or
call
iret
btc
(bad)
pop
or
lods
cld
sub
or
fstp
cmp
add
lea
add
(bad)
mov
xadd
sbb
add
adc
adc
inc
lds
xor
push
cld
cld
mov
test
add
add
add
imul
jp
add
xor
add
adc
in
hlt
cld
jg
pop
sub
add
add
add
add
add
mov
mov
mov
mov
mov
dec
cmp
mov
inc
mov
mov
mov
mov
mov
mov
dec
and
(bad)
dec
mov
mov
mov
mov
add
push
mov
(bad)
jg
jle
mov
mov
add
pop
mov
mov
mov
mov
lock
dec
(bad)
inc
inc
inc
inc
(bad)
mov
push
fadd
(bad)
mov
loope
loope
pushf
mov
(bad)
stc
push
sub
mov
push
test
sub
adc
cmp
mov
js
or
movs
shl
push
in
cmp
jae
push
js
mov
loope
in
push
js
out
mov
xor
mov
shl
add
mov
rep
push
dec
lahf
dec
rol
push
xor
out
jns
stos
push
aam
inc
jle
adc
jl
push
push
xor
fdiv
mov
push
inc
into
pop
push
push
lods
sbb
adc
jl
mov
stos
inc
adc
es
cmps
and
cmps
repz
repz
stc
jbe
mov
enter
push
test
pop
mov
(bad)
cs
into
enter
mov
cmp
cs
push
cmp
ins
test
or
std
into
push
xor
push
scas
or
push
rcr
or
ins
jle
out
mov
js
push
into
mov
clc
xchg
int3
icebp
out
loopne
push
loopne
nop
out
lock
push
mov
inc
and
dec
push
es
loopne
jae
push
mov
push
mov
xchg
ret
rol
in
mov
neg
hlt
outs
jo
test
icebp
cmp
mov
scas
mov
outs
repz
lock
jbe
fdivr
out
push
cwde
ror
push
test
sbb
mov
add
or
lods
sbb
jbe
pop
mov
nop
imul
fs
push
push
pop
loope
adc
mov
xchg
and
cmp
dec
push
push
xchg
add
adc
js
retf
(bad)
jno
or
add
or
add
arpl
je
retf
sub
sub
int3
outs
out
shl
ret
sub
sub
shl
mov
lds
movs
fld
jge
mov
dec
add
inc
mov
add
retf
or
mov
or
xchg
pop
out
add
sub
mov
or
nop
lahf
sbb
movs
inc
sub
adc
js
data16
inc
ins
sbb
(bad)
mov
bound
cmps
mov
mov
mov
dec
mov
xchg
or
icebp
dec
xchg
aaa
cmc
cmp
sbb
mov
leave
retf
mov
dec
ja
jae
mov
cmp
jo
xchg
sub
popa
iret
(bad)
pop
scas
push
daa
xor
xchg
gs
dec
(bad)
aad
inc
ja
xchg
fadd
sbb
push
jmp
xchg
sbb
xor
add
mov
push
dec
mov
jge
sbb
fnstsw
add
cmp
mov
je
adc
cmp
pop
push
xor
call
ror
add
repz
push
sbb
mov
or
rcr
sub
jo
mov
(bad)
add
inc
dec
mov
ret
lds
push
mov
cmps
fadd
add
mov
jmp
loopne
mov
adc
adc
loopne
push
mov
rol
mov
pushf
mov
push
pushf
je
xlat
daa
jns
mov
sub
dec
test
mov
or
cmps
xor
and
xor
and
add
inc
push
cmp
inc
xchg
test
lahf
addr16
or
nop
pushf
mov
xchg
inc
sub
xor
sub
jl
rcl
movs
es
scas
mov
jo
nop
cmp
pop
mov
aam
stos
xor
pusha
pop
call
inc
add
cmp
dec
test
jmp
(bad)
sub
loopne
inc
movlhps
lds
adc
pop
into
mov
add
or
mov
or
mov
movs
retf
mov
popa
or
or
test
xor
cmp
hlt
add
and
and
push
movs
or
inc
call
dec
xchg
xchg
or
cmp
dec
dec
add
cmp
mov
or
inc
add
aad
xlat
add
aam
in
in
pop
dec
sub
clc
xor
shl
(bad)
cmc
sub
jo
or
dec
inc
pop
loopne
ins
adc
adc
ret
xor
int
lds
add
adc
ror
pop
jb
or
jl
push
push
or
lds
or
push
dec
in
pop
cmc
mov
mov
lds
lods
inc
pop
div
adc
adc
jg
loopne
cmp
popf
mov
enter
mov
sqrtps
pop
es
inc
fsubr
jl
dec
js
clc
loop
inc
(bad)
jp
jmp
in
jge
jecxz
inc
sub
orps
push
or
cdq
push
xchg
inc
repnz
es
or
daa
dec
or
ins
adc
adc
out
add
pusha
mov
jnp
push
cld
mov
adc
adc
mov
cmp
scas
(bad)
cli
repnz
outs
lock
test
xchg
xor
jecxz
repnz
xor
xor
inc
push
leave
js
fcom
adc
or
dec
stc
stos
add
pop
xchg
xor
add
mov
cmp
jnp
nop
adc
pop
out
mov
cmp
fcomp
aad
jecxz
enter
sbb
adc
dec
push
(bad)
push
push
in
je
je
dec
pop
mov
push
dec
sahf
test
sub
cmc
xor
das
push
sub
aam
enter
cmps
inc
cmp
push
cs
iret
add
or
arpl
xchg
add
clc
sub
push
jecxz
add
jbe
sub
mov
test
cmovno
sub
inc
add
add
pop
inc
add
bndstx
or
sub
mov
pop
out
loopne
add
js
inc
xor
or
ss
rol
xor
retf
push
jecxz
call
xor
mov
mov
popa
popa
add
adc
mov
or
and
nop
inc
stos
dec
sbb
mov
or
lods
les
shl
inc
mov
push
clc
jae
and
adc
arpl
sbb
ret
add
mov
mov
lahf
or
pop
or
ins
arpl
add
outs
js
cli
dec
sbb
add
sbb
(bad)
iret
ins
adc
int
cmp
fmul
jne
pusha
lahf
sbb
ret
add
and
add
add
cwde
push
inc
adc
(bad)
fs
rol
mov
inc
inc
fs
into
and
inc
mov
dec
dec
lods
and
lock
push
cmp
jno
and
inc
xchg
or
popf
or
mov
sbb
fsubrp
jg
das
int
xchg
loopne
dec
mov
adc
mov
xchg
push
pop
call
dec
ja
(bad)
sti
out
int3
mov
ds
xchg
push
or
neg
lahf
push
and
cwde
xor
pusha
js
mov
fwait
jp
lods
addr16
add
out
add
out
cdq
cdq
sub
outs
imul
pop
fimul
dec
sti
jmp
mov
dec
ins
fisttp
lods
sbb
daa
mov
cdq
sub
movq
daa
push
sbb
adc
sbb
imul
iret
adc
and
test
iret
push
pop
sbb
cld
sbb
jp
push
mov
adc
jno
pop
add
push
outs
bound
mov
mov
adc
js
pop
cmps
dec
outs
jbe
jno
adc
mov
retf
and
add
inc
inc
dec
jg
add
dec
sbb
daa
jge
mov
dec
xor
cmp
call
ret
fadd
inc
sub
mov
xchg
test
ret
ficom
je
xchg
ret
push
inc
movs
add
xchg
dec
push
mov
xor
xor
and
pop
ret
sub
adc
(bad)
pop
addr16
imul
mov
add
sbb
outs
imul
je
loope
(bad)
les
and
dec
imul
std
push
sbb
fsubr
xlat
push
fistp
pusha
pcmpgtd
shl
xchg
inc
sbb
cs
stos
xor
push
rcr
sub
xor
inc
dec
or
ret
push
addr16
push
or
pop
add
fs
sbb
add
add
adc
push
loope
dec
dec
jo
loopne
add
add
jns
xor
cmp
ja
cmc
cmp
inc
push
sub
xchg
std
push
or
in
sub
xchg
jns
gs
cwde
lea
xor
xor
stos
push
sbb
add
(bad)
imul
inc
dec
adc
and
jecxz
cwde
dec
sbb
mov
gs
pusha
pop
or
jnp
pusha
pop
fadd
movs
loope
adc
shl
mov
xor
add
mov
repz
add
and
pop
sub
and
and
mov
and
and
and
aaa
sti
cmp
sahf
and
in
sub
inc
add
and
or
(bad)
push
rol
std
ja
xor
outs
gs
or
adc
or
bound
bound
clc
jl
dec
mov
mov
sbb
pop
adc
scas
add
fwait
sbb
push
sahf
(bad)
outs
jbe
nop
sub
out
add
dec
sub
iret
and
fwait
pushf
adc
dec
mov
mov
jge
adc
ins
adc
pop
out
and
in
adc
and
int
sete
leave
mov
out
pushf
test
xor
xor
leave
test
add
pusha
push
outs
xor
loop
outs
fs
sub
or
test
or
push
lods
aaa
add
dec
push
les
movs
xchg
xor
add
add
les
pop
pop
adc
fist
mov
jae
cmp
mov
jb
mov
sbb
pop
out
pop
push
adc
es
dec
inc
mov
sbb
jo
xor
jns
jl
ins
in
out
fs
or
mov
pop
mov
mov
ins
xor
or
mov
pop
cwde
push
movs
leave
(bad)
xchg
jecxz
nop
fs
cmp
mov
and
fcom
test
bswap
pop
sbb
add
aas
iret
test
enter
dec
movs
int
push
sbb
jnp
add
rol
adc
adc
jmp
mov
cmp
cmps
or
adc
sub
shld
pop
or
or
sbb
dec
enter
and
cmp
icebp
fwait
or
les
or
in
aam
add
out
faddp
int3
call
ins
jne
out
sahf
jge
xchg
lahf
lods
mov
(bad)
shl
xlat
or
inc
popa
test
js
or
mov
sub
cmp
daa
inc
add
test
inc
out
sub
test
push
xlat
rcr
pop
cmp
mov
addr16
call
inc
push
push
lahf
dec
rcl
push
lock
mov
push
pusha
outs
dec
cs
div
fs
es
push
dec
inc
shl
push
mov
adc
or
popf
(bad)
fild
pop
daa
icebp
jp
add
or
rcr
mov
gs
add
sti
shr
push
das
jae
outs
rol
stos
in
jmp
in
lods
sub
cmp
scas
xor
es
test
xchg
inc
out
xor
and
fiadd
sar
mov
inc
pop
xor
mov
mov
popa
mov
push
daa
ins
ffree
xchg
hlt
pop
int
or
hlt
add
pop
or
inc
std
sub
pusha
fwait
es
ins
sub
fs
fucomip
mov
loop
sti
push
push
push
scas
or
ins
jge
out
or
ins
jne
jo
push
aam
ret
pop
xchg
movs
je
push
stos
pusha
enter
imul
push
cmps
add
sub
test
push
retf
adc
sbb
jo
mov
sub
lds
cmp
or
cwde
mov
test
mov
and
ret
lahf
scas
dec
sbb
fisubr
add
inc
add
pop
adc
push
jo
inc
in
sbb
sbb
outs
push
sub
pop
sub
loopne
popf
pop
inc
sub
xchg
test
adc
jno
add
out
pop
lock
jae
movs
mov
or
and
and
or
ins
cmp
jmp
(bad)
inc
inc
cwde
or
push
inc
add
lods
mov
rcl
push
sub
dec
add
ins
pop
mov
dec
sbb
lods
sub
arpl
outs
cmp
test
sub
ret
or
or
sbb
fmul
aas
sub
(bad)
cmp
dec
daa
dec
cs
jb
xor
jo
outs
addr16
out
cmc
movs
gs
or
add
push
arpl
daa
add
xor
dec
test
adc
cmc
popa
test
gs
push
pop
clc
or
dec
xor
sbb
test
mov
imul
xor
das
je
cwde
mov
adc
imul
sub
fcomp
clc
rcl
imul
mov
cs
mov
loope
pop
jl
or
lahf
cs
mov
or
sar
add
dec
(bad)
ficom
call
lds
aad
xchg
rcr
xor
je
fist
xor
cmp
inc
icebp
or
jbe
pop
jge
mov
adc
scas
pusha
daa
push
mov
sbb
(bad)
aad
inc
xchg
add
xchg
or
mov
pop
fstp
mov
and
sbb
sbb
out
sbb
lods
and
data16
(bad)
jns
dec
inc
lea
adc
mov
mov
xsha1
cmps
or
rcr
and
arpl
jbe
loopne
add
int
mov
or
push
push
lds
push
(bad)
mov
sub
adc
mov
xor
je
add
or
gs
adc
(bad)
ret
xlat
les
stos
xchg
ds
enter
fcomp
mov
ins
add
ds
ret
bound
jae
pop
push
sbb
mov
mov
xor
stos
and
out
icebp
or
neg
push
jb
movs
outs
sub
mov
jo
les
jo
into
data16
lock
xlat
add
and
popa
jb
cmp
sbb
fimul
in
lahf
neg
jbe
bound
add
je
gs
shl
pusha
out
cmp
or
cmp
nop
add
psubb
loopne
xor
push
xor
or
daa
mov
(bad)
in
inc
jl
loope
inc
js
dec
push
pushf
outs
or
add
in
dec
sub
outs
inc
stos
add
and
or
push
or
outs
pusha
fcomp
and
cmp
ret
shl
adc
add
aas
adc
or
shl
add
cmp
mov
adc
aam
imul
mov
fs
or
mov
or
add
mov
push
adc
jns
mov
arpl
cmp
sbb
pop
ins
dec
cmp
cmovbe
jl
in
xor
dec
push
pop
pusha
pop
les
add
test
inc
add
mov
sub
and
push
sub
aas
or
inc
xchg
adc
push
jne
jne
ret
add
pusha
or
sbb
or
sub
sub
inc
mov
pushf
jmp
inc
mov
pop
inc
dec
inc
push
sahf
retf
popa
imul
mov
aaa
mov
fwait
jmp
push
dec
call
mov
inc
lahf
lock
cmps
js
dec
imul
push
push
cmp
pusha
(bad)
sbb
add
or
sbb
or
or
sbb
push
pop
leave
pop
jns
add
std
sub
jg
js
adc
sbb
cmp
loopne
mov
out
add
call
in
dec
adc
sbb
inc
inc
jp
(bad)
enter
lahf
pop
test
cmp
cmovbe
push
dec
push
dec
cmp
test
dec
ret
push
mov
je
fisub
sbb
mov
jae
push
pop
and
or
cmp
cmp
xor
cmp
je
dec
add
and
or
or
dec
cmps
add
cdq
push
mov
mov
pop
imul
inc
popf
adc
push
jns
push
stos
sub
(bad)
int
pop
dec
inc
inc
mov
cwde
(bad)
in
pop
adc
cmps
inc
mov
push
outs
test
lods
mov
or
gs
rol
out
mov
or
cmp
pshufw
pop
cmp
push
movs
xchg
mov
movups
into
push
pop
pop
(bad)
or
adc
xchg
cmp
inc
pop
cwde
jns
cmp
mov
cwde
js
and
dec
add
adc
sub
jbe
pop
nop
sub
dec
call
fwait
aas
inc
add
jmp
outs
addr16
aas
aaa
inc
mov
add
or
push
ror
push
mov
dec
inc
pop
test
lock
sar
aas
aas
or
lea
sar
sbb
fild
fld1
(bad)
mov
sub
xchg
push
ffree
sbb
jno
push
jae
add
shr
dec
push
inc
bound
adc
jnp
xchg
mov
popa
or
aam
cmp
push
add
std
mov
bound
ds
pop
mov
jnp
cmp
pop
mov
xchg
and
bound
test
cmp
inc
sub
mov
jecxz
dec
pusha
mov
frstor
and
push
mov
push
push
add
push
add
sbb
fdivr
jmp
adc
das
outs
sbb
movs
lahf
out
movzx
sub
push
inc
(bad)
cli
or
add
mov
jg
adc
mov
retf
and
add
lods
loop
loopne
shl
inc
mov
push
mov
loop
aaa
lock
je
add
mov
retf
inc
pop
ins
and
mov
je
mov
add
xchg
(bad)
pop
jo
or
adc
add
into
std
push
inc
push
sahf
inc
mov
and
add
pop
fild
inc
push
cmp
fst
mov
or
inc
sahf
pop
cmp
or
mov
pushf
mov
fbstp
fiadd
jo
mov
dec
mov
test
cmc
dec
jne
(bad)
jge
ds
cwde
ins
adc
loopne
pop
or
ret
adc
imul
xor
clc
nop
add
pop
pop
pop
mov
ss
out
inc
bound
xor
test
cmp
cmp
sar
out
adc
call
jo
addr16
loopne
mov
rcr
push
addr16
sbb
je
inc
ja
sets
sbb
sbb
(bad)
mov
out
add
mov
xchg
mov
cdq
fucomi
adc
dec
popa
ins
loop
aaa
(bad)
and
imul
jl
(bad)
and
movs
nop
xchg
add
ror
cmp
enter
fstp
xchg
sub
add
push
cmovs
ss
retf
mov
dec
jl
imul
inc
pop
pop
outs
push
add
push
call
fcomp
or
ins
pop
sti
sbb
leave
push
enter
out
imul
cld
inc
fcmovnb
(bad)
nop
ins
repnz
push
dec
popa
ret
push
adc
cdq
push
addr16
add
call
cs
jae
xor
movs
inc
stos
dec
loopne
call
dec
mov
inc
inc
test
cmp
call
cmp
mov
push
out
jnp
add
push
sub
js
cmp
jne
retf
push
(bad)
test
mov
cmps
cmc
shr
nop
adc
inc
daa
inc
mov
jo
xchg
inc
f2xm1
sub
adc
outs
xchg
or
cmps
cmps
inc
dec
dec
mov
add
inc
mov
arpl
inc
movs
inc
or
and
mov
dec
ror
pop
pop
test
add
ins
inc
dec
addr16
add
ins
inc
inc
(bad)
ds
add
in
lea
mov
gs
or
xchg
aam
sub
ds
xor
add
movs
in
outs
jo
ins
add
sbb
bound
gs
popf
dec
cmps
(bad)
cmp
xchg
inc
add
loopne
push
dec
jb
sar
mov
mov
les
or
cmp
inc
icebp
jg
xchg
jne
inc
mov
cmp
jl
movs
inc
inc
mov
jl
sbb
cld
retf
test
sub
add
jmp
mov
mov
dec
mov
(bad)
jo
stos
test
mov
adc
nop
add
(bad)
fst
xor
pop
mov
mov
lea
mov
mov
or
inc
pop
jle
mov
mov
adc
lahf
mov
cmp
test
scas
fimul
push
mov
cld
retf
push
mov
lea
pop
add
mov
or
dec
or
in
stc
scas
mov
jle
cmps
jmp
add
cmp
cmp
dec
jne
daa
pusha
or
cmp
cmp
nop
jo
add
lods
es
sub
sub
dec
jae
sbb
add
push
or
push
dec
xor
jo
sbb
mov
pusha
fdiv
shr
sbb
mov
sbb
dec
mov
dec
adc
add
sbb
sbb
or
dec
sub
sub
dec
mov
int
jo
or
cli
dec
or
clc
add
add
add
fcmovnu
cmps
ret
pop
out
dec
add
pop
push
add
(bad)
xchg
leave
add
fiadd
mov
call
std
xor
cmp
(bad)
push
jg
je
sub
fnsave
outs
pop
or
je
xchg
or
xchg
sub
dec
or
push
inc
or
or
mov
or
adc
in
pop
and
hlt
mov
add
rcr
mov
pushf
fstp
das
mov
jmp
xor
adc
jmp
mov
adc
jmp
and
cmp
xor
dec
inc
xchg
jne
scas
sub
cmp
or
add
adc
or
sbb
xchg
mov
push
and
sub
ror
jp
call
aas
outs
xor
fbstp
push
mov
add
repz
jl
dec
xor
lahf
mov
inc
and
or
xchg
mov
dec
cmp
or
ins
in
(bad)
sbb
sbb
add
adc
add
pop
inc
add
sub
or
ret
add
outs
add
sub
fwait
cs
mov
test
push
inc
add
push
add
jle
test
stos
mov
or
or
pop
mov
adc
sub
mov
loope
or
add
sub
add
js
pop
mov
mov
mov
imul
inc
ret
jo
xor
nop
mov
sub
xlat
xor
sbb
out
ret
and
inc
xor
lahf
bound
sbb
add
rol
inc
cmp
fcmovb
outs
out
push
xor
lock
mov
out
in
lahf
dec
add
mov
add
mov
movs
ins
sub
test
xor
mov
retf
cs
sbb
and
mov
sar
sbb
fs
inc
js
(bad)
out
ret
inc
sbb
add
stos
pop
out
or
pop
out
push
js
ret
enter
fnstcw
cmp
jge
es
ret
ja
repnz
xchg
mov
rcr
in
and
dec
ss
es
jle
sub
js
ds
push
sub
pop
aam
inc
div
leave
in
sbb
dec
or
adc
jmp
sub
xor
jae
neg
push
cmp
jp
lea
cmp
cmp
add
add
inc
push
(bad)
lahf
daa
fcomp
or
dec
sub
or
push
jb
xchg
sub
pop
ret
push
dec
mov
cmp
xchg
push
mulps
shr
lock
clc
inc
push
mov
or
mov
mov
push
or
and
add
adc
xor
fs
mov
test
mov
mov
clc
and
add
or
pushf
fmul
mov
cdq
fstp
or
in
sub
inc
movs
hlt
inc
into
push
lock
in
adc
mov
sti
sub
leave
in
or
cmp
fiadd
imul
inc
inc
add
dec
lods
pop
jo
inc
cmp
mov
lahf
pop
and
sub
je
das
inc
sbb
sub
lock
hlt
or
mov
test
xor
aam
mov
ins
jmp
sbb
xor
xor
lea
xchg
and
sar
jo
inc
adc
in
sub
jb
prefetch
mov
mov
retf
aas
cmp
je
mov
add
je
adc
inc
loopne
es
or
aad
and
jmp
jl
int3
sbb
inc
jl
mov
shl
rcl
pop
sar
clc
push
lock
push
cmp
ja
in
push
or
cmp
push
xor
or
sbb
std
or
sbb
mov
loope
adc
sub
push
jnp
(bad)
in
cmp
test
add
jns
push
push
lea
mov
fdivr
pop
ss
push
jmp
into
mov
adc
xor
cs
fadd
stos
or
rcl
fadd
xchg
cmp
ins
hlt
cld
addr16
cmps
movs
inc
push
push
and
cmp
xchg
lods
dec
jle
cmp
jb
adc
inc
test
(bad)
dec
(bad)
popa
add
movs
div
jne
ret
xchg
sbb
mul
sbb
mov
and
mov
(bad)
jl
and
mov
push
sub
sbb
pop
xchg
fcomp
add
rcl
pop
hlt
dec
lock
je
xchg
mov
adc
push
xchg
shl
inc
adc
pop
pop
and
push
test
push
jmp
push
push
aas
inc
movs
push
and
sub
adc
sbb
inc
idiv
movs
jp
and
push
inc
scas
pop
dec
ret
adc
mov
jmp
not
dec
sub
rcl
push
mov
mov
add
out
cli
cmp
lods
or
push
fbld
adc
loopne
adc
and
fs
dec
repz
mov
daa
pop
mov
jo
jg
mov
fcmovnb
pop
fistp
fnsave
bound
dec
jne
test
stc
cmp
xor
push
dec
mov
arpl
je
rol
lea
fisttp
or
or
les
repz
nop
loop
cld
rcr
addr16
adc
mov
sub
mov
add
mov
sub
sub
mov
mov
adc
push
std
loope
ret
loope
in
mov
scas
daa
mov
mov
xchg
jmp
rol
sbb
xor
or
ror
and
add
fdiv
mov
adc
out
mov
je
and
cmp
xchg
or
or
sbb
adc
sbb
adc
fwait
pushf
cwde
add
rol
inc
xor
pop
shl
mov
jbe
adc
arpl
in
push
sbb
sbb
push
fiadd
mov
or
loope
sbb
add
clc
or
push
aas
add
test
jne
or
xor
mov
adc
sub
push
xlat
and
or
jmp
movs
adc
and
jmp
pop
and
mov
aad
pushf
mov
sub
push
test
leave
sbb
add
mov
jmp
push
inc
xchg
bnd
add
clc
mov
clc
push
nop
and
lea
adc
fiadd
rcl
inc
push
mov
sub
test
(bad)
pop
cmp
mov
dec
inc
cld
ficom
movs
push
fs
mov
enter
add
adc
mov
push
mov
xor
and
sub
js
sbb
test
cmps
sahf
sti
cmp
mov
rol
adc
mov
fdivr
outs
seta
pop
add
jo
(bad)
lea
mov
popa
adc
and
xor
(bad)
lea
cli
mov
sub
mov
and
cmp
(bad)
add
bound
sbb
pop
sub
jmp
sub
mov
popf
xchg
fiadd
push
add
retf
mov
jns
sub
imul
sub
pop
xor
inc
test
xor
push
adc
xor
jg
mov
jmp
pop
js
mul
jmp
sub
or
or
or
inc
dec
inc
mov
repnz
pop
or
fcomp
cli
mov
and
mov
(bad)
push
dec
jmp
add
add
adc
xchg
push
and
inc
adc
mov
ret
adc
popf
imul
popf
add
xchg
das
mov
sbb
clc
mov
and
jo
mov
and
sbb
xor
mov
ror
mov
mov
jle
inc
mov
sub
(bad)
sbb
pusha
or
ficom
outs
mov
cmps
dec
add
or
add
fcomp
dec
push
sub
jle
mov
push
adc
mov
adc
push
mov
dec
cli
sub
clc
cwde
inc
or
and
xchg
mov
daa
icebp
ja
lock
jmp
ja
scas
inc
jmp
jae
loope
js
stos
push
sbb
jne
(bad)
enter
sub
or
cwde
sbb
adc
xor
mov
ret
mul
mov
add
and
mov
add
outs
repnz
pop
cmp
ret
pop
mov
adc
dec
mov
dec
pusha
(bad)
(bad)
and
cmp
jo
inc
mov
or
adc
dec
(bad)
ror
sub
adc
das
inc
sbb
lock
and
cs
inc
test
sub
ins
jle
ins
popa
cwde
or
(bad)
adc
mov
popa
or
mul
cmc
adc
pop
push
add
nop
mov
adc
fdivr
jne
xchg
cmp
das
xor
or
push
pop
mov
mov
inc
mov
and
or
js
movs
or
mov
aas
or
cmp
sbb
cmp
cs
and
mov
and
nop
rcr
fimul
into
cmp
lock
ds
pop
sub
ret
cmp
xor
or
adc
in
pop
dec
and
jbe
sti
inc
add
xor
inc
or
daa
int3
xchg
je
mov
inc
pop
jbe
sub
sbb
push
jecxz
in
adc
sbb
adc
mov
cmp
iret
xchg
inc
mov
popf
push
ret
out
daa
fcomp
adc
mov
mov
cmp
push
adc
inc
fcom
stc
scas
xor
rcr
pop
inc
sbb
lahf
cmp
mov
inc
xchg
test
div
loope
or
mov
repnz
xlat
mov
add
mov
adc
outs
pop
aas
push
bound
or
cmp
pop
add
in
mov
(bad)
les
or
adc
mov
jo
jle
out
dec
mov
mov
fistp
jne
sbb
jmp
inc
fs
adc
mov
or
cmp
mov
popa
(bad)
stc
sti
mov
(bad)
push
or
bound
aaa
mov
(bad)
loopne
dec
sub
ror
push
inc
sbb
push
ins
inc
mov
mov
mov
loope
ins
repnz
and
mov
xchg
inc
add
add
cmp
inc
push
jne
mov
push
or
cmp
(bad)
ss
jne
dec
ds
lds
pop
cmp
pusha
call
xchg
mov
add
add
jno
sbb
mov
hlt
xadd
adc
sbb
pop
jne
dec
in
pop
(bad)
and
xor
scas
mov
mov
pop
outs
arpl
call
add
jmp
outs
out
pop
nop
sbb
or
ret
scas
push
lods
push
push
add
int
inc
add
inc
mov
inc
add
adc
adc
xor
pop
add
xchg
mov
inc
mov
cmp
pop
iret
jg
sbb
mov
pop
and
or
pop
push
ret
lahf
push
dec
ror
sub
ds
mov
xor
cmp
shl
add
cmp
aad
idiv
jae
je
jge
mov
or
adc
lock
push
xchg
jo
dec
or
daa
pop
and
mov
pop
pop
test
adc
fbstp
mov
les
or
add
inc
push
or
loopne
shr
popf
xlat
outs
sbb
inc
add
or
(bad)
fwait
jmp
add
jmp
cmp
je
mov
test
jbe
(bad)
mov
fcom
adc
adc
ret
and
mov
or
push
or
adc
dec
or
adc
xor
shr
jmp
sbb
or
add
mov
das
xor
pop
imul
xor
or
dec
shl
in
leave
hlt
outs
sbb
retf
jecxz
popa
or
add
pop
outs
push
cmp
push
inc
dec
jns
or
outs
es
add
test
aam
pop
push
aas
cmp
dec
mov
mov
out
movs
in
add
inc
adc
adc
pushf
mov
aam
loopne
hlt
push
or
cli
add
sub
aam
outs
mov
jg
loop
add
pop
push
std
call
xlat
xlat
scas
or
sub
and
mov
or
test
lock
dec
pop
xchg
sbb
jns
shr
mov
and
add
or
bound
loopne
xor
ret
nop
add
bswap
add
daa
ror
mov
inc
sbb
mov
push
push
jmp
ja
sub
pop
fisub
mov
or
mov
adc
cmp
pop
push
pop
mov
ins
push
sahf
popa
cmp
dec
jl
adc
add
sbb
xchg
sub
pop
cmp
sete
sar
and
mov
sub
or
cli
add
(bad)
(bad)
inc
sbb
sbb
add
out
or
out
dec
cmp
xchg
add
jle
pop
out
inc
fild
test
xchg
fisub
mov
push
jae
adc
jne
jnp
or
sub
sbb
sbb
cmps
pop
push
push
cmp
inc
in
nop
jo
jne
and
into
xor
jne
sub
add
xchg
mov
rcr
mov
mov
or
add
sbb
push
ret
pop
pop
inc
and
cmp
jmp
mov
xor
nop
adc
ffree
jl
mov
pop
shl
and
mov
pop
pop
mov
push
fiadd
imul
sar
add
js
jle
test
dec
sbb
dec
add
mov
or
mov
inc
sub
mov
mov
inc
popa
add
bound
out
lea
xor
data16
push
push
fmul
jmp
mov
sbb
adc
std
ret
adc
call
xchg
dec
fmul
adc
ss
push
adc
adc
inc
hlt
sub
lock
loope
mov
xchg
pop
test
int
or
scas
psubb
inc
sub
xchg
(bad)
pusha
add
and
daa
or
push
dec
cmp
add
sbb
jl
outs
aad
aaa
inc
inc
imul
int3
adc
int3
pop
not
fs
jno
or
lea
loopne
test
inc
js
sbb
cs
repz
fild
xchg
xor
add
lea
push
aad
mov
cmp
dec
ret
bound
pop
pop
xchg
adc
mov
cmp
and
sahf
rcl
dec
inc
or
xor
ins
call
outs
sub
pop
mov
add
mov
lock
sub
dec
jmp
lds
loopne
xor
push
push
add
adc
add
rol
lds
pushf
mov
push
or
mov
add
pop
xor
or
and
test
dec
(bad)
push
movnti
inc
imul
xor
adc
and
inc
jo
imul
outs
popa
outs
cmp
jne
mov
pushf
mov
inc
dec
fiadd
jl
dec
fiadd
xchg
out
jne
test
je
sub
adc
outs
xlat
or
pop
mov
mov
pop
das
add
pusha
pop
lods
cmp
inc
test
scas
inc
jo
mov
arpl
dec
jmp
or
nop
cmp
adc
xchg
mov
add
pushf
inc
add
(bad)
cmps
lods
mov
and
cwde
sahf
fdivrp
dec
ja
pusha
test
ror
loopne
sti
fcomp
push
push
add
gs
and
cmp
setne
jmp
mov
shl
pop
(bad)
pop
push
shr
retf
push
cmp
inc
jmp
imul
gs
sub
loopne
inc
pop
sbb
sbb
mov
dec
sub
pop
or
cmp
daa
push
xchg
repnz
and
jb
add
pop
push
cs
or
mov
pop
pop
shl
xor
inc
cmp
pop
ret
stos
and
scas
addr16
mov
xchg
fcom
jne
hlt
mov
shr
ror
mov
xlat
inc
add
dec
lahf
adc
add
push
test
or
jl
pop
or
test
xor
pop
push
pop
pop
shr
jne
popa
cmp
cmps
xor
test
pop
sti
pop
cmp
sub
jmp
push
cwde
or
mul
or
and
inc
shr
adc
adc
mov
or
sbb
std
push
or
or
mov
mov
xor
or
js
pop
fs
lock
clc
add
imul
(bad)
fld
out
inc
adc
test
rcl
mov
ja
mov
dec
sub
setb
test
out
push
add
rcl
cmp
jne
xor
iret
jmp
cmc
sub
sbb
inc
push
push
push
xchg
dec
dec
mov
mov
fwait
and
cmp
movs
mov
dec
cli
xchg
dec
pop
pop
or
adc
add
ret
push
inc
push
jbe
xchg
aad
jg
xchg
pop
cli
adc
lods
call
lods
push
cmp
pop
fs
push
popa
out
sub
cmp
dec
mov
mov
add
inc
aad
push
mov
inc
cwde
bound
je
sahf
test
adc
adc
sub
dec
outs
push
lahf
test
add
ret
mov
jne
mov
pop
ret
aas
into
or
jecxz
cmp
dec
sub
adc
in
inc
jl
test
and
cmps
pop
aam
add
sbb
pop
mov
mov
or
mov
mov
sub
xchg
xchg
xchg
popa
daa
add
nop
and
pop
xchg
push
cmp
test
push
loopne
in
ret
add
inc
test
cmp
shl
sub
imul
mov
das
or
mov
sub
mov
retf
jge
daa
fdivr
sahf
pop
push
sbb
xchg
data16
pop
lea
(bad)
mov
test
and
sub
dec
out
adc
cmp
add
loope
(bad)
enter
enter
addr16
dec
imul
mov
addr16
leave
pop
xor
shl
push
movs
iret
xor
add
push
or
and
dec
test
xchg
cmp
cmp
test
imul
and
add
cmps
test
adc
and
push
mov
fs
push
in
push
mov
gs
mov
xchg
lock
pop
add
mov
or
jo
adc
mov
(bad)
or
mov
mov
fdiv
faddp
cwde
call
aam
sub
sbb
les
scas
adc
fdiv
inc
ret
nop
or
pusha
push
lods
inc
mov
sar
jmp
pop
lods
adc
xor
jns
xlat
ror
or
and
sbb
jmp
mov
popa
or
add
mov
popa
xor
sbb
inc
mov
add
bound
sbb
pop
fisubr
iret
jno
ins
add
dec
or
push
add
jge
aam
push
ret
(bad)
cwde
sbb
bound
fcomi
mov
dec
jbe
or
and
mov
and
pop
and
sub
(bad)
push
in
jp
sub
push
popf
pop
jo
jmp
or
dec
sti
fidiv
leave
cmp
inc
lock
or
mov
add
xchg
jmp
dec
or
aaa
aam
callw
movq
add
or
push
cwde
pop
in
push
je
jg
adc
mov
sbb
pop
les
inc
mov
(bad)
adc
inc
clc
movs
mov
outs
out
sbb
popf
hlt
push
xchg
and
add
rcl
leave
push
retf
cmp
push
in
add
mov
adc
push
or
dec
cmps
nop
stos
mov
add
inc
mov
add
inc
add
outs
cwde
add
js
imul
jmp
sbb
mov
popa
xlat
dec
call
nop
or
adc
or
xor
and
adc
add
mov
pop
or
add
inc
lock
cmp
cmp
add
sub
hlt
test
adc
push
push
or
iret
add
adc
scas
jne
pop
push
cmps
add
lock
add
lods
push
dec
or
je
inc
cmps
push
test
fdivr
inc
push
mov
mov
rcr
(bad)
adc
pop
sub
out
inc
mov
push
mov
sub
or
add
sbb
pusha
lock
cmp
mov
jno
loopne
add
mov
and
rol
jmp
ins
int
call
cmps
enter
xor
ss
ret
dec
adc
cmp
jmp
sbb
inc
push
pop
sub
pop
sbb
push
xchg
stos
sbb
push
adc
cmp
add
fstp
xchg
mov
test
or
stc
or
(bad)
ror
ret
bound
mov
cmp
aad
sub
xchg
jne
lock
movs
adc
add
jns
jmp
or
pop
mov
mov
pop
push
sub
popa
push
fsubr
stos
and
inc
sbb
push
inc
pop
ins
out
jmp
sbb
add
adc
jno
inc
retf
pop
add
inc
popa
and
cmp
je
mov
sub
adc
retf
pop
mov
aas
fiadd
sbb
xor
jbe
addr16
loope
test
je
jle
xor
pop
dec
push
adc
cmp
or
xchg
xlat
mov
mov
and
add
fisubr
and
jbe
mov
mov
pop
pushf
add
ror
or
add
xor
mov
adc
add
pop
lods
adc
ret
stc
pusha
ret
(bad)
nop
es
mov
hlt
js
xor
enter
inc
inc
pusha
add
retf
cmp
mov
mov
adc
or
test
imul
mov
push
arpl
movs
(bad)
or
jl
xchg
inc
jae
and
nop
fbstp
jne
or
nop
pop
push
add
mov
clc
push
mov
mov
cmp
das
(bad)
nop
mov
cmp
xchg
or
outs
nop
dec
and
mov
daa
cld
mov
mov
adc
adc
add
push
cli
loope
dec
inc
rol
xchg
retf
or
(bad)
fnstcw
shr
xor
pop
clc
push
lea
inc
fsubr
or
sbb
cmc
mov
pop
jecxz
sub
add
dec
mov
sub
pushf
pop
pop
cmps
push
daa
xor
push
fist
ror
iret
inc
inc
mov
adc
sbb
and
scas
(bad)
imul
mov
fbld
dec
adc
push
inc
pusha
stos
adc
inc
ret
cmp
jmp
mov
or
add
gs
icebp
ficom
sbb
js
push
or
test
adc
(bad)
cmp
imul
adc
nop
les
pop
arpl
jle
adc
dec
and
push
arpl
das
or
cmp
punpckhwd
mov
dec
inc
xchg
jae
add
and
fwait
mov
arpl
push
pop
nop
neg
mov
ud0
push
je
inc
mov
pop
inc
adc
and
sub
jno
js
cmp
sbb
or
sbb
fs
jmp
push
push
push
sbb
cmp
mov
inc
xor
ja
xor
add
sub
lods
ss
pop
jbe
mov
adc
add
jg
and
jns
and
fwait
inc
loopne
rcl
or
js
push
cmp
mov
mov
jno
mov
mov
xchg
pop
cld
push
(bad)
stc
push
dec
adc
pop
xor
or
add
ret
popa
push
rcl
sub
je
cmp
mov
test
jmp
push
mov
sub
test
push
scas
or
push
cmp
sub
mov
and
daa
add
popf
xchg
mov
das
inc
sub
mov
je
aas
add
fsubr
movs
mov
pop
icebp
inc
inc
add
add
jp
loop
scas
leave
jl
mov
arpl
enter
add
push
inc
xchg
push
sub
loope
pusha
mov
ret
adc
dec
fisttp
add
mov
jl
clc
inc
pop
inc
je
jbe
adc
dec
repnz
push
adc
fcom
add
sub
mov
and
jns
push
sub
jge
dec
jmp
jle
xchg
jg
or
jb
pop
or
pop
push
cmp
rol
lock
lock
es
or
add
push
cmp
fdivr
or
pusha
inc
cld
push
(bad)
ins
shr
inc
cmp
test
mov
adc
ins
pop
popa
add
stos
adc
mov
call
cmps
inc
jmp
dec
daa
movzx
jp
push
mov
mov
mov
out
out
in
xor
xor
add
or
cmps
cmps
xchg
les
push
adc
or
and
ret
jne
sbb
adc
pop
sub
js
cmp
je
popa
leave
stos
pop
scas
inc
push
adc
dec
add
inc
dec
lock
addr16
addr16
rcl
sub
int
cmp
enter
rcr
push
mov
jl
sbb
ret
div
inc
movs
into
adc
or
arpl
addr16
sbb
pop
xchg
adc
nop
push
in
xchg
test
adc
out
jg
setge
dec
ret
add
push
and
adc
ror
push
dec
cmp
inc
mov
adc
mov
push
jmp
jo
push
and
mov
push
jl
add
pushf
and
adc
or
js
adc
or
adc
inc
add
add
add
jb
mov
test
dec
or
inc
pop
pusha
add
mov
jge
xchg
lock
and
cmp
jnp
push
xor
call
and
nop
dec
fdivr
sbb
test
mov
inc
jecxz
add
push
inc
mov
test
xor
aaa
js
aam
pop
add
movnti
mov
dec
cmp
push
mov
ret
add
and
sub
stos
or
xor
mov
jle
cli
into
or
add
inc
lock
(bad)
or
ret
cmp
xchg
shl
mov
jmp
sbb
icebp
movzx
push
jbe
adc
retf
add
sahf
jmp
or
fst
xchg
pop
inc
push
in
das
and
push
or
xor
adc
loopne
sub
out
cwde
fisttp
cld
and
push
repnz
and
xchg
neg
xlat
xlat
in
ror
adc
icebp
fwait
and
cmp
adc
fist
jns
clc
adc
dec
and
ins
adc
dec
sub
inc
or
loope
fadd
dec
sahf
mov
shr
and
dec
fnstsw
cmp
push
mov
adc
cld
push
aam
outs
add
outs
or
push
dec
cmps
sub
or
sbb
repnz
popa
clc
adc
mov
or
std
ss
pop
push
outs
push
mov
test
adc
jecxz
adc
enter
movaps
add
add
jb
add
sbb
cli
add
mov
int3
jle
push
leave
jmp
sub
or
push
mov
test
adc
mov
push
mov
or
rcl
mov
or
jb
mov
add
(bad)
cmps
(bad)
sbb
(bad)
faddp
inc
repz
pop
call
push
(bad)
repz
push
in
xchg
dec
addr16
jge
jge
jne
add
bndldx
xchg
pop
and
jnp
sub
mov
inc
cs
mov
push
inc
neg
xor
mov
enter
cmps
jecxz
jmp
sub
ins
mov
js
mov
mov
mov
pushw
or
or
push
fwait
pop
inc
stos
js
(bad)
push
or
test
and
sub
std
push
push
inc
or
xchg
cs
enter
pop
out
inc
(bad)
inc
xchg
lock
dec
push
and
xchg
sbb
nop
mov
push
add
mov
or
dec
stos
add
jg
push
inc
push
stos
fmul
stos
push
xchg
add
lock
and
lods
xchg
addr16
stos
adc
in
pop
adc
sub
sub
sub
cmp
fadd
ss
out
fadd
ret
dec
mov
sub
mov
push
(bad)
aaa
call
inc
ja
scas
xor
in
or
inc
in
cmp
inc
pop
push
xor
sbb
pop
fs
inc
dec
cmps
vphaddubw
lahf
div
mov
addr16
mov
pop
das
je
or
outs
or
jae
sub
add
test
sub
sbb
aaa
sbb
and
pushf
pop
pop
aad
pop
call
add
add
rol
mov
push
ja
dec
add
jb
shl
push
cmp
adc
shr
(bad)
adc
or
fwait
or
inc
xor
loopne
mov
jmp
movs
sbb
cmp
pusha
xor
call
or
(bad)
aam
or
cmc
or
jne
xor
xlat
cmp
call
aas
and
push
push
ror
(bad)
bound
pop
inc
and
sahf
and
loopne
jae
sbb
fstp
mov
enter
shl
les
xchg
in
cmps
and
inc
or
call
jne
jle
adc
stos
fisubr
sar
mov
je
mov
cwde
add
or
add
push
add
jl
pop
sbb
push
wbinvd
xor
and
sbb
xor
xchg
js
or
hlt
jbe
mov
or
mov
hlt
push
lea
jne
pop
stos
into
clc
aam
inc
loopne
push
pop
sub
jbe
(bad)
jne
add
xchg
hlt
cwde
fidiv
or
mov
lock
lea
(bad)
adc
loop
inc
jge
ja
adc
sti
dec
add
hlt
xchg
rcl
pop
mov
and
xor
test
or
inc
inc
xor
popa
mov
sbb
dec
xchg
jnp
inc
mov
and
dec
sbb
add
and
mov
inc
and
push
fild
btr
nop
int
jg
mov
mov
call
add
jp
cmp
gs
(bad)
sti
push
dec
imul
lock
clc
push
sar
cmps
test
je
add
sub
jae
pushf
test
mov
into
lock
mov
mov
in
mov
rcr
add
xchg
in
dec
push
dec
clc
push
aaa
jnp
mov
aaa
or
and
adc
lahf
or
sub
test
fld
arpl
push
inc
add
pop
dec
je
push
or
xor
push
fimul
repnz
add
or
popa
mov
pop
and
fwait
cwde
(bad)
mov
in
shl
ins
jmp
adc
mov
adc
out
push
sub
in
jae
sub
or
shr
jo
fst
dec
cmp
fist
add
mov
sub
push
cmp
sub
or
fsub
push
jmp
cld
sub
jle
sub
push
inc
inc
ins
and
aaa
dec
jecxz
pushf
fidivr
or
mov
out
push
add
inc
inc
push
add
popf
jmp
dec
mov
xor
adc
mov
xor
jne
push
ja
dec
rcl
iret
add
fld
adc
and
or
dec
cmovne
pop
sub
bound
jge
fidiv
imul
je
ins
stc
fimul
std
inc
or
inc
rol
inc
dec
xlat
inc
(bad)
sub
push
push
or
and
xchg
add
or
push
sub
sbb
sbb
xor
pop
push
mov
xchg
push
jg
adc
mov
add
push
add
stos
mov
jne
jg
dec
jmp
cmp
mov
(bad)
and
inc
push
jne
popf
xchg
popa
xor
dec
jns
popa
shr
adc
add
cmp
pop
mov
xor
sub
pusha
test
add
or
add
pop
push
ds
cmp
cdq
(bad)
xlat
data16
inc
(bad)
movsx
xchg
(bad)
cs
jo
or
add
adc
or
ss
nop
inc
and
mov
fsubr
test
in
add
ja
dec
mov
mov
call
jge
sbb
inc
cs
ins
sbb
push
push
mov
stos
pop
out
lea
je
or
pop
pop
jg
push
cmp
shl
inc
sub
add
sbb
rcl
jl
or
call
rcl
mov
aas
cmp
shl
out
out
std
out
mov
pop
add
jmp
cmp
add
and
add
cmp
jne
lea
add
ret
loopne
dec
and
mov
sbb
test
dec
push
imul
xor
mov
pop
inc
loopne
mov
or
push
add
nop
pop
bound
ret
outs
in
inc
lahf
rcl
adc
ret
lea
call
or
dec
add
jmp
mov
or
push
fisub
mul
jno
movs
call
fimul
test
jmp
push
pop
(bad)
sahf
and
sub
dec
and
add
pop
mov
dec
xor
sub
sbb
add
out
mov
(bad)
mov
loopne
pop
jl
cmp
loopne
repnz
xchg
cs
pop
dec
jbe
mov
push
clc
cmp
push
jge
outs
pop
ret
cmp
mov
push
dec
sbb
dec
push
sti
dec
test
xor
std
sub
mov
push
inc
or
ds
sbb
imul
addr16
xor
lds
xchg
jne
xor
out
inc
dec
jae
lods
xor
loop
push
pop
ret
in
in
in
mov
xchg
or
xchg
movs
movs
dec
xchg
pop
enter
movs
push
xchg
add
adc
jnp
test
in
in
inc
inc
sub
push
pop
test
or
xor
or
add
cmp
pop
cld
sbb
push
push
mov
push
clc
push
add
pop
jmp
ins
ja
cmp
dec
adc
adc
add
xchg
or
pop
cmp
fcomp
ror
jmp
mov
mov
test
cmp
xchg
or
xchg
and
test
enter
inc
inc
push
leave
add
xchg
fisub
dec
pop
test
add
dec
add
or
push
cmc
or
jo
push
inc
lea
mov
mov
mov
push
ret
or
shl
xor
rcr
dec
(bad)
dec
dec
add
fbstp
lock
pop
call
stos
pop
or
xor
mov
(bad)
cmp
ins
js
or
jb
jb
and
xor
jmp
mov
sbb
sbb
push
arpl
stc
cmps
call
mov
ja
retf
cmp
int3
xor
sub
aam
xchg
jne
in
test
sbb
cmp
xchg
shr
adc
jle
pop
fcom
xor
mov
rcr
shl
or
mov
stc
add
mov
xor
push
or
arpl
adc
pop
pop
out
int3
fs
mov
dec
arpl
add
dec
inc
pop
add
xchg
sub
add
inc
mov
fsubr
ds
xor
cmp
not
idiv
cmp
ror
mov
jmp
fidivr
dec
gs
xchg
xlat
fsub
add
mov
jbe
cs
lock
mov
add
retf
cmps
hlt
icebp
adc
aam
sbb
ins
cmp
or
js
fmul
adc
xor
mov
rcl
mov
dec
call
int3
or
ins
(bad)
xor
js
pusha
mov
fistp
inc
jle
mov
add
push
dec
in
cmp
je
pusha
push
in
add
dec
in
(bad)
push
rcr
scas
push
ror
sbb
rol
xchg
xlat
dec
push
sbb
inc
lds
adc
ret
pop
pop
data16
and
aam
daa
stos
add
cs
or
pop
and
aad
aas
fcmovu
rol
push
sbb
stos
jmp
and
sub
dec
xchg
add
jno
pop
pop
xchg
lds
xor
pop
sbb
in
pop
or
mov
in
dec
adc
push
push
mov
dec
addr16
and
lahf
sahf
test
jbe
jb
adc
mov
sub
pop
inc
jb
push
inc
out
add
lea
lock
jne
adc
push
inc
out
fadd
cwde
loopne
mov
pop
or
lock
adc
pop
iret
xchg
add
mov
inc
and
ja
push
push
mov
mov
addr16
popa
and
fwait
push
fcomp
xchg
js
aad
fbld
or
or
sub
or
pop
cdq
sub
push
mov
push
inc
cmp
push
imul
pop
or
sbb
add
sbb
add
push
arpl
pop
sbb
or
or
test
rol
pop
je
ret
sbb
add
mov
and
shr
ja
push
(bad)
je
adc
mov
sub
jo
xchg
pop
lods
test
lock
sub
sub
jmp
mov
or
inc
or
and
jmp
push
rcr
and
scas
test
inc
rol
mov
into
clc
adc
push
adc
hlt
adc
xchg
lea
mov
add
sub
push
in
or
push
or
xor
adc
(bad)
push
lea
sar
(bad)
xor
or
lock
aas
or
loope
lahf
scas
enter
pusha
inc
push
mov
mov
xor
xor
push
add
inc
call
sbb
sbb
js
outs
mov
icebp
inc
cmp
xchg
xchg
jns
jg
sbb
xor
js
cvtps2pi
push
cmp
inc
adc
sbb
loop
nop
xchg
punpckhwd
cmp
ja
arpl
or
int3
test
mov
adc
push
sub
pop
pusha
(bad)
std
cwde
pop
rcl
nop
test
dec
pusha
cmps
mov
push
mov
stos
adc
push
rol
jne
jbe
push
ds
in
imul
mov
inc
mov
push
pop
mov
sti
adc
rol
data16
inc
xor
cmp
shl
nop
cmp
mov
fadd
loope
adc
ja
loope
mov
mov
pusha
push
inc
fnstenv
inc
cmp
pop
or
in
cmc
add
jo
push
adc
shl
sbb
lock
clc
call
out
and
pop
gs
and
adc
push
lods
xor
mov
sub
mov
ret
shr
outs
or
outs
lods
mov
sub
mov
repnz
cmps
add
dec
bswap
add
jmp
or
inc
adc
xor
clc
movs
(bad)
outs
inc
adc
push
push
sub
push
lea
push
ins
mov
retf
aas
fs
xor
sub
mov
ret
add
dec
add
push
and
xchg
les
(bad)
sub
cmp
loopne
or
mov
inc
fist
test
adc
cli
mov
(bad)
hlt
mov
lock
pop
ret
lea
push
iret
push
or
add
sbb
fs
rcl
retf
or
fadd
jns
std
mov
or
cli
repnz
or
test
daa
lea
inc
stc
mov
out
pop
and
mov
pop
fst
mov
ins
sub
push
inc
push
mov
(bad)
lock
and
adc
xchg
lea
mov
fild
cmp
cmp
xchg
mov
and
xor
sbb
push
not
sbb
xchg
js
adc
stc
inc
jl
setle
xor
test
or
daa
ja
cmp
jne
je
and
xchg
pop
mov
test
movs
mov
xchg
(bad)
mov
dec
fwait
cmp
aas
pop
leave
inc
jb
cmp
jb
pop
and
or
xor
sub
cmp
shl
push
adc
(bad)
icebp
dec
bound
shl
cmp
mov
push
ins
(bad)
rol
sbb
push
cld
addr16
sub
push
adc
mov
or
jl
mov
pusha
mov
pushf
sub
dec
and
fcmovbe
fld
fcomp
mov
(bad)
ins
push
fiadd
dec
jne
mov
ja
(bad)
aad
or
xor
push
mov
pop
mov
ficom
cld
jg
mov
jmp
xor
ins
cmp
push
adc
add
jmp
imul
lock
fs
mov
ficom
pop
sbb
iret
int
add
sbb
and
xor
lea
ds
mov
jg
add
ss
int3
dec
je
rcr
outs
add
jmp
bnd
in
aam
int3
test
(bad)
adc
icebp
jo
shl
and
xor
adc
inc
push
push
push
inc
loope
push
push
nop
daa
scas
inc
(bad)
outs
sbb
and
clc
add
push
pop
lock
mov
or
hlt
ins
or
xchg
push
or
or
pop
pop
inc
cli
mov
xor
mov
rcl
cmps
outs
pop
call
fiadd
or
jmp
loopne
(bad)
push
cmp
xor
pop
test
inc
retf
(bad)
inc
jb
(bad)
call
and
pop
push
mov
xchg
(bad)
mov
rcl
loop
push
fisub
sbb
sbb
outs
movs
sti
sbb
sbb
adc
xchg
jle
or
mov
and
inc
por
or
stos
inc
imul
rcl
fwait
sbb
jmp
adc
adc
jbe
movs
push
xor
push
stos
sti
outs
(bad)
or
jl
jne
xor
fbstp
scas
rcr
jnp
inc
mov
loope
adc
mov
cmp
sub
ss
mov
test
cmp
ss
sbb
push
pop
cmp
shl
add
daa
lds
pop
sub
sub
push
shl
sub
or
mov
add
vmread
adc
adc
fisub
sub
cmp
or
xor
mov
adc
push
stos
xor
or
jns
sbb
xor
in
shl
ror
adc
adc
mov
mov
dec
add
cmp
adc
fstp
add
push
mov
rcr
jae
xchg
in
shl
in
pop
call
rol
jno
aaa
test
call
imul
jle
inc
pop
push
sbb
out
xor
jl
jmp
(bad)
neg
ret
push
test
(bad)
xor
stos
sbb
or
je
pop
(bad)
js
xor
(bad)
xchg
xchg
pop
inc
jne
or
rol
adc
mov
xor
adc
shl
push
test
cmps
enter
(bad)
repnz
cmp
test
add
test
(bad)
jl
iret
inc
mov
adc
dec
mov
das
test
sub
into
mov
push
mov
sbb
test
push
clc
daa
clc
inc
test
rep
cmc
mov
add
push
sbb
jno
js
or
aad
cmp
in
add
mov
sbb
push
or
imul
cmc
mov
aam
add
push
and
jne
lea
cld
or
dec
jmp
inc
pop
xor
clc
cmp
outs
sub
imul
xor
or
iret
and
aaa
mov
push
push
sbb
les
jle
mov
dec
test
ss
cli
stos
sub
add
imul
mov
loop
outs
sbb
pusha
push
pop
adc
adc
leave
cmp
loopne
and
hlt
int
lahf
push
out
mov
xchg
push
dec
add
jbe
rcl
rcr
push
xor
pop
dec
in
and
add
cmp
outs
or
rcl
mov
sub
mov
fmul
jp
push
push
lock
cld
push
jne
or
fs
mov
xchg
add
fsub
loopne
adc
idiv
mov
add
pop
and
and
dec
mov
cmp
jbe
loop
push
lock
pop
and
xor
hlt
mov
mov
pop
cs
fadd
xchg
lods
xor
nop
xor
or
stc
clc
lock
lock
shl
pop
call
sbb
(bad)
xchg
lea
nop
lahf
test
jl
cmp
push
pop
adc
mov
shr
ficom
bound
or
cmp
aad
and
add
sar
push
adc
imul
mov
fcomp
jo
shr
pop
int3
lahf
mov
pop
rol
ins
fcomp
adc
jl
pop
daa
or
mov
das
(bad)
popa
pop
test
or
pop
adc
inc
jecxz
adc
adc
inc
or
pop
stc
ror
add
and
add
cmc
aam
scas
xchg
out
cmps
pop
dec
cmp
cwde
imul
inc
xor
dec
pop
pop
hlt
mov
in
mov
add
or
add
mov
movs
sub
dec
iret
sub
test
clc
jmp
imul
or
iret
adc
movs
push
add
push
loop
cli
mov
rcr
or
add
push
cwde
out
or
leave
mov
jmp
xor
jmp
outs
jns
es
jne
or
dec
fmul
in
hlt
in
pop
sub
loopne
jnp
add
les
xchg
mov
mov
pop
or
add
add
add
movs
in
push
shl
pusha
dec
fnsetpm(287
stos
pop
or
cmp
xlat
sbb
shl
or
lock
adc
jb
sub
imul
or
sub
sub
xlat
popf
inc
jl
pop
dec
push
add
mov
mov
pop
dec
dec
ja
jb
mov
pop
jmp
call
mov
mov
push
es
in
ins
push
(bad)
in
inc
sbb
in
jle
add
jmp
or
or
add
hlt
das
mov
cmp
js
imul
ss
adc
xadd
test
cmp
push
(bad)
lock
push
call
jg
add
sahf
ja
mov
sti
push
jbe
movs
add
jae
inc
sub
outs
sub
add
jmp
mov
loopne
pusha
mov
sub
jmp
sub
add
adc
xor
adc
adc
cmp
jge
sbb
cmp
add
mov
push
imul
(bad)
das
dec
inc
lea
cmp
xor
cmps
lds
xlat
je
fs
cmc
jmp
clc
xor
mov
sti
push
or
(bad)
push
sbb
test
cmp
and
sbb
push
mov
enter
rdmsr
push
cmp
out
or
daa
mov
pusha
xchg
(bad)
sbb
call
fs
test
mov
out
int
lock
lahf
fmul
pushf
mov
add
in
mov
lock
mov
outs
xchg
add
add
cmp
setge
mov
sti
shr
xor
fnsave
rcl
jmp
aas
cdq
fsubr
retf
xor
lds
add
and
dec
sbb
and
cwde
pop
xor
bound
xlat
mov
mov
push
and
mov
(bad)
fnstcw
and
mov
or
dec
call
mov
outs
sub
(bad)
fadd
mov
add
je
mov
and
imul
sbb
sub
cld
lods
or
enter
pop
gs
cmp
cmps
xor
push
imul
aam
mov
push
add
das
push
inc
(bad)
dec
stos
adc
test
and
jmp
xchg
fimul
shl
pop
mov
lods
gs
pop
imul
cmp
or
xchg
imul
add
or
add
cmp
jge
xlat
xchg
ror
fstp
sar
iret
pop
inc
inc
das
add
and
inc
add
add
lar
inc
mov
movs
mov
add
pop
inc
lock
or
mov
call
jne
fcom
xchg
add
add
aaa
jge
(bad)
cld
mov
cmc
fld
or
lock
pop
xor
jl
mov
inc
pop
cmp
(bad)
fistp
data16
pop
jbe
jne
push
push
xor
pop
lods
or
mov
rol
cmp
sti
mov
inc
cld
mov
dec
das
pop
push
dec
mov
dec
mov
imul
mov
dec
div
retf
fdivr
sbb
in
push
xchg
adc
faddp
mov
sub
or
xchg
popa
push
aas
xor
xor
fs
(bad)
fistp
dec
add
xor
cmp
or
lea
fwait
mov
add
xchg
imul
mov
stos
loopne
sub
sbb
xor
push
add
push
mov
loope
xlat
or
add
adc
aas
lock
or
ret
inc
xchg
pusha
sub
push
dec
pushf
dec
mov
and
cmp
cmp
cmc
in
lods
adc
mov
jnp
in
ror
clc
test
daa
leave
ins
or
(bad)
clc
cmps
lods
(bad)
(bad)
popf
loopne
test
add
ror
or
das
aad
lock
pop
sbb
pop
or
test
aam
push
mov
aad
jo
(bad)
cmp
pop
mov
xor
pusha
inc
jmp
add
push
jg
push
push
add
je
mov
test
mov
xor
jl
push
call
adc
xchg
sub
ret
and
dec
hlt
xchg
adc
and
fidivr
outs
cli
and
sbb
sti
pop
push
imul
jne
loopne
xor
inc
sbb
aaa
test
xchg
and
mov
sub
repz
xchg
popf
adc
div
pop
(bad)
sub
sub
cmc
mov
repnz
mov
jbe
add
ds
ret
adc
and
je
push
jnp
jmp
dec
xchg
push
mov
cmp
xchg
lods
adc
push
push
push
mov
shl
fs
add
dec
xor
lahf
(bad)
xor
les
cwde
mov
popa
pop
addr16
cmp
adc
test
pop
jmp
cmp
push
mov
pop
mov
(bad)
mov
inc
add
jae
mov
adc
or
ffree
mov
ror
pushw
out
mov
movs
and
test
je
xchg
sar
pop
hlt
sub
jg
or
jmp
ret
scas
mov
cmp
test
mov
xchg
dec
adc
pop
xchg
mov
je
push
addr16
lea
out
repz
inc
push
dec
jo
sti
jne
and
je
aad
add
(bad)
rcl
inc
shl
add
aad
rol
adc
idiv
inc
and
mov
pop
mov
and
sar
mov
mov
push
dec
ins
pop
xor
adc
fisub
pop
adc
dec
cli
cwde
push
xchg
js
push
ret
pop
and
mov
aas
(bad)
push
jmp
mov
cmps
shl
js
push
scas
xor
lea
and
(bad)
xchg
in
hlt
loopne
cdq
iret
enter
or
sti
push
das
inc
xor
ret
gs
add
call
cmc
inc
dec
jne
fnstcw
iret
mov
in
or
add
mov
add
pop
cmp
mov
pop
push
or
mov
inc
jg
sbb
je
mov
inc
ins
pop
xchg
xor
sbb
imul
push
sbb
js
shr
sbb
and
add
cmc
test
retf
enter
dec
xchg
daa
add
scas
movs
inc
or
(bad)
imul
in
pop
fcom
lods
cmp
and
cdq
movs
call
sbb
add
and
jmp
sbb
mov
neg
jmp
(bad)
jne
add
sbb
cmc
sub
ja
adc
add
push
pushf
scas
adc
test
add
mov
shr
cmp
jne
mov
mov
push
adc
adc
or
rol
adc
dec
add
xlat
add
or
mov
inc
and
ret
aad
xchg
adc
pop
push
cwde
xchg
ss
mov
and
fs
cmp
lea
mov
cwde
sbb
inc
add
scas
xor
mov
retf
dec
ja
scas
pushf
mov
pop
sbb
sar
or
add
pop
pop
push
lea
mov
push
add
das
sbb
idiv
and
add
jge
jmp
adc
nop
(bad)
jnp
jns
and
mov
je
add
inc
adc
imul
mov
cmps
int
shl
daa
jo
fsub
call
adc
inc
loop
xlat
adc
out
ja
fnstenv
(bad)
mov
pop
cmp
cwde
jne
mov
adc
lods
add
jp
nop
add
mov
add
push
out
or
add
xchg
sub
sahf
pop
mov
lea
push
push
jne
add
sbb
mov
jo
push
and
ins
inc
bound
inc
mov
and
add
inc
pop
pop
dec
sbb
popa
outs
push
sub
pop
jo
and
jbe
and
sub
(bad)
adc
inc
adc
sub
in
or
add
xchg
or
push
ja
cli
dec
jecxz
cmp
mov
mov
les
pop
lods
imul
lods
pop
mov
cs
jne
jbe
xor
lds
mov
mov
nop
ret
jb
add
inc
adc
push
adc
xchg
dec
add
pop
inc
jl
mov
fwait
add
or
jmp
call
inc
or
or
xor
sahf
outs
pop
mov
xor
inc
jmp
sub
and
loope
pop
jnp
xor
or
in
sub
adc
jle
imul
add
iret
setbe
inc
add
fsub
ret
arpl
adc
xor
push
ficomp
jne
test
or
es
je
push
xchg
pusha
dec
or
test
fcom
sub
mov
dec
lea
push
sti
or
add
ror
cmp
pop
jbe
pop
pop
add
pop
iret
push
ds
iret
or
clc
push
jmp
xchg
adc
cmp
das
dec
fild
loopne
in
or
mov
cs
test
clc
mov
or
add
cmp
xchg
pusha
pop
mov
jo
inc
mov
ret
xor
adc
das
cmp
cmp
rcr
aad
jl
popa
stc
nop
sbb
or
inc
scas
push
in
ror
push
xchg
xor
xchg
cmp
je
add
jnp
rol
inc
pop
and
sbb
rol
(bad)
and
mov
cmp
in
out
pushf
push
adc
enter
les
adc
test
sbb
movs
sbb
and
push
or
mov
loopne
mov
shr
fstp
mov
jo
fdivr
push
and
rcl
or
sbb
jne
neg
(bad)
xchg
ja
jno
xchg
mov
jle
pop
sbb
xchg
test
xor
cmps
xchg
pushf
sub
push
push
shrd
mov
add
popa
scas
mov
jmp
push
imul
dec
pusha
cs
xor
jns
inc
push
or
js
ss
push
(bad)
or
imul
aad
dec
mov
push
call
xchg
jb
repz
shl
sbb
loope
xor
push
cld
mov
sbb
xor
clc
lods
(bad)
jno
sub
add
ss
sub
or
hlt
and
add
push
adc
push
jnp
add
adc
pop
call
jmp
lea
pop
adc
mov
mov
jle
fimul
fmul
dec
inc
mov
push
inc
dec
test
(bad)
xchg
mov
mov
pop
xor
xchg
enter
xchg
xchg
and
imul
enter
add
std
sbb
pop
pop
dec
call
loopne
(bad)
jge
pop
push
lock
mov
das
(bad)
xchg
inc
in
ror
jo
sbb
in
push
pop
cdq
rol
adc
push
test
arpl
fcom
pop
or
mov
std
lahf
and
inc
push
jmp
mov
loopne
mov
add
leave
mov
adc
movs
mov
xchg
das
jp
add
inc
test
add
or
inc
cmp
pop
icebp
add
daa
out
push
inc
mov
inc
adc
adc
mov
mov
xchg
xchg
test
rcl
call
add
adc
or
cmp
je
iret
jmp
sub
ret
mov
jne
xchg
pop
and
adc
inc
wbinvd
lahf
adc
jnp
in
xor
(bad)
je
xchg
cmp
and
dec
inc
or
xrelease
add
pop
cli
mov
adc
cwde
aam
push
cld
leave
dec
test
in
adc
cmps
push
pop
scas
jmp
cmc
sbb
pop
mov
call
push
clc
or
fnstcw
ja
sbb
xor
shr
push
or
(bad)
sbb
dec
pusha
add
mov
pop
pop
jp
adc
clc
(bad)
popa
popf
fwait
fwait
je
add
enter
sbb
jne
push
fwait
mov
and
retf
je
lock
xchg
mov
jne
inc
in
or
test
fimul
fdivr
test
and
add
test
nop
repnz
xchg
int3
out
push
js
xchg
and
das
and
lds
xor
lea
or
test
or
nop
shl
inc
mul
mov
nop
dec
or
push
inc
jmp
mov
cmp
adc
rcr
test
(bad)
outs
jae
pop
add
jge
sbb
add
push
mov
cmps
adc
outs
sub
repnz
iret
(bad)
out
cmp
add
adc
pop
push
push
stc
adc
mov
mov
mov
sbb
icebp
dec
retf
cmp
gs
push
ins
std
sbb
popa
ror
add
jb
or
adc
mov
add
(bad)
hlt
call
mov
jns
gs
mov
inc
add
mov
in
lods
sbb
(bad)
movs
ror
pop
cld
pop
mov
adc
ss
cmp
adc
vmovntps
or
sub
cmp
or
jl
mov
loopne
es
inc
mov
ret
push
mov
add
cli
cmps
adc
leave
dec
push
pop
adc
mov
es
adc
push
(bad)
or
and
hlt
icebp
push
(bad)
lock
sbb
dec
repnz
ret
push
daa
loopne
rcl
loope
xor
in
cld
or
addr16
mov
or
mov
mov
push
mov
pusha
cmp
and
sub
loopne
push
jb
rcl
mov
adc
fcomp
pusha
dec
and
inc
aaa
or
push
mov
jne
mov
aaa
sub
ins
in
push
dec
sub
in
or
and
pop
in
mov
jo
pop
pop
call
add
jno
or
adc
or
cmp
or
inc
mov
shr
and
push
and
addr16
adc
mov
inc
inc
or
add
add
sti
rcr
mov
jno
or
mov
sub
fsubr
adc
dec
push
mov
inc
or
add
scas
sbb
or
add
or
push
sub
mov
pop
cld
pop
add
arpl
or
add
or
cmp
inc
add
popa
test
or
add
add
pop
xchg
sub
jae
mov
xor
(bad)
je
ror
cmp
push
sbb
sbb
es
mov
xor
jmp
add
and
and
sbb
stc
data16
jmp
mov
sbb
or
lea
fcom
stc
or
pop
fnstsw
mov
mov
inc
ins
cmp
outs
js
sub
(bad)
jg
or
dec
cmp
cmp
or
icebp
sub
cmp
adc
jne
jecxz
add
sub
mov
test
sub
sub
stc
jge
adc
clc
and
adc
sub
add
dec
dec
mov
add
pop
adc
test
bsf
popa
sub
or
mov
sub
cmp
not
push
inc
(bad)
(bad)
mov
jo
arpl
push
push
fist
ins
add
add
inc
popa
adc
lahf
jo
add
pop
test
adc
cmp
add
push
fnsave
rol
mov
shr
movs
pop
mov
push
dec
add
cmp
xchg
jo
repz
ins
ret
dec
add
call
popf
sub
das
inc
test
add
inc
rcr
bound
or
ds
in
jne
adc
icebp
pop
or
mov
cmp
js
call
sub
inc
or
push
lock
in
out
xchg
adc
daa
inc
xchg
mov
sbb
xor
sbb
mov
mov
clc
mov
adc
push
add
mov
add
adc
adc
loopne
push
test
cs
add
mov
and
add
rcr
or
mov
jne
cmp
clc
cmp
cmp
js
mov
add
add
xor
fmul
bound
xor
popf
retf
mov
xchg
rol
movs
add
and
push
shr
pop
sbb
(bad)
aam
sbb
sar
adc
jbe
pusha
adc
cmp
sub
or
nop
xchg
push
add
xchg
and
dec
in
mov
mov
fadd
push
or
sbb
sub
loop
inc
pop
jecxz
cmp
jne
imul
xchg
inc
aam
dec
jb
in
push
inc
pop
mov
adc
pop
icebp
fucomi
mov
in
(bad)
lds
inc
jno
test
test
sub
and
addr16
shl
movs
aad
add
push
pop
out
jo
jecxz
inc
jge
clc
vsubpd
pop
xor
pop
mov
add
adc
mov
jno
idiv
add
in
fdivr
pop
cmp
nop
mov
xor
cmp
jbe
xor
xchg
xchg
js
adc
fsubr
xchg
push
mov
adc
or
mov
sti
or
mov
adc
add
inc
cmp
xchg
add
out
popa
loop
xor
cmp
jne
cmps
push
pop
add
sub
xlat
in
add
inc
cmps
es
cmp
ret
mov
loopne
pop
inc
adc
pop
movs
mov
mov
mov
xor
ins
adc
movs
cmc
clc
inc
xchg
(bad)
push
test
mov
inc
adc
or
jno
cmp
lea
sbb
cmp
xor
pop
adc
mov
sbb
or
sbb
push
push
and
ror
mov
fld
xchg
sbb
rol
push
jecxz
or
mov
mov
push
daa
sbb
shr
or
and
xchg
fisub
(bad)
leave
sbb
imul
pop
ret
daa
loopne
retf
mov
xchg
add
lock
xor
out
fidiv
(bad)
in
xchg
push
movs
sbb
and
pop
or
sbb
hlt
xor
out
xor
xchg
aam
sub
and
sub
retf
rcl
push
push
push
add
cld
and
add
mov
je
push
xchg
cmc
fiadd
add
xor
arpl
sbb
cmp
ja
fcomi
mov
ret
dec
mov
clc
jns
add
pushf
push
mov
stos
dec
add
pusha
dec
pusha
push
movs
push
inc
dec
lods
push
or
add
dec
lods
jmp
or
mov
and
or
jge
sub
xor
sbb
inc
sbb
and
outs
sbb
mov
cmp
rol
xchg
adc
cs
sbb
mov
jno
or
loope
in
fld
fimul
bound
and
inc
adc
inc
repz
mov
sbb
(bad)
test
rol
inc
push
sbb
push
add
sahf
retf
push
movs
add
jge
adc
mov
in
jnp
mov
or
and
(bad)
and
fld
mov
dec
dec
or
mov
std
ror
push
or
sar
lock
clc
mov
faddp
sbb
pop
mov
pusha
pop
jg
inc
inc
lods
icebp
xchg
jnp
ret
dec
js
xor
xlat
mov
cmp
inc
inc
(bad)
push
add
lds
add
test
mov
daa
push
gs
mov
mov
adc
add
and
mov
aam
daa
sub
and
or
dec
dec
xor
dec
mov
dec
iret
fdiv
push
addr16
mov
fiadd
push
dec
xchg
or
inc
push
dec
and
(bad)
(bad)
(bad)
jmp
call
pop
push
jl
adc
mov
or
add
rcr
xchg
lea
adc
ret
mov
inc
jl
inc
fadd
or
sub
push
sbb
xor
fdivrp
mov
xchg
clc
mov
loopne
lock
sbb
xchg
inc
inc
(bad)
sub
repz
loope
sbb
mov
in
cld
add
and
div
fistp
call
mov
les
je
mov
pusha
ins
adc
jmp
dec
sub
adc
add
fs
lods
test
std
sbb
xchg
adc
mov
icebp
mov
sbb
pop
dec
add
and
loopne
and
push
ret
fwait
stos
into
push
jmp
pop
dec
sbb
sbb
add
inc
mov
adc
sbb
arpl
mov
and
sub
lock
mov
mov
xchg
frstor
push
push
adc
pop
fisttp
mov
jmp
bound
or
inc
sbb
clc
sub
data16
pop
loope
fdiv
imul
sbb
add
push
push
xchg
cmp
push
add
inc
stos
push
xor
jne
jno
jb
aas
jne
mov
imul
rcr
jne
enter
xchg
push
je
ror
adc
mov
add
fcmovbe
mov
icebp
and
movs
jnp
movs
aad
outs
push
jl
lock
popf
xchg
ds
ret
outs
add
sbb
xchg
jo
mov
cmp
(bad)
cmp
push
and
or
dec
jno
add
movs
push
shr
sub
sub
xlat
jecxz
mov
add
sub
bound
inc
clc
stc
sahf
dec
add
jne
jns
mov
fisubr
pop
xor
sub
daa
xchg
add
sti
push
cmc
sub
bound
or
mov
pusha
retf
rol
or
sub
test
movs
jecxz
or
push
and
inc
pop
adc
xchg
push
ret
cmps
xor
inc
jno
pop
sbb
rol
xchg
jnp
retf
pop
in
lock
pop
aas
pop
sbb
inc
outs
jl
xchg
dec
inc
xlat
and
add
loopne
add
mov
push
fisttp
das
add
and
daa
mul
mov
adc
inc
scas
xchg
or
or
adc
sbb
pop
jp
loope
addr16
sub
cmp
adc
shl
adc
sub
es
mov
or
inc
pop
add
adc
sbb
xchg
cli
test
xchg
jmp
test
cmps
mov
pusha
adc
cmp
hlt
inc
push
jne
mov
hlt
ins
daa
stos
add
inc
nop
nop
push
mov
dec
xor
inc
jmp
cmp
jbe
pop
adc
loopne
add
push
(bad)
sbb
and
fadd
mov
adc
pop
mov
xchg
pusha
test
jbe
and
outs
add
push
je
push
lods
jns
hlt
rcl
sbb
nop
push
cmp
push
pop
jne
loopne
mov
inc
dec
jge
xchg
add
(bad)
or
lock
clc
lea
lea
xor
loopne
push
or
add
popf
test
or
add
inc
cmp
dec
stc
nop
out
ret
cmp
int3
inc
mov
(bad)
sbb
ret
enter
bound
movs
addr16
mov
inc
and
(bad)
pop
and
stos
and
mov
ret
jg
pop
jno
sub
mov
inc
pusha
pop
popa
shr
xchg
loopne
in
call
imul
cs
xchg
test
daa
cmp
dec
data16
mov
mul
jnp
idiv
or
jo
pop
adc
and
fwait
mov
mov
daa
add
mov
test
je
add
mov
or
cmovnp
jle
add
dec
aaa
xor
push
sbb
call
std
test
clc
je
movs
jo
(bad)
and
mov
sbb
adc
or
pop
test
fild
add
mov
ret
nop
daa
add
movs
or
aam
cwde
push
push
mov
add
pop
add
adc
add
push
mov
mov
mov
aaa
rcr
push
xlat
or
(bad)
aaa
(bad)
test
je
mov
jnp
mul
pop
dec
cmp
pop
call
sbb
sub
pop
psraw
ja
sbb
push
jno
mov
xchg
xor
ja
imul
ret
in
mov
add
enter
mov
add
and
sub
cld
mov
retf
mov
je
cmp
or
je
inc
add
cdq
jo
push
aam
xor
aad
sbb
push
jl
in
fwait
shl
push
or
or
nop
and
xor
and
aam
or
push
les
(bad)
jmp
fist
shl
xor
adc
rol
movs
inc
inc
push
sub
jne
cmp
dec
add
xor
in
mov
ror
out
mov
add
adc
add
or
or
cmps
aas
adc
xor
pop
repnz
sub
inc
xor
mov
pop
jl
lods
jnp
lahf
lahf
dec
inc
jo
je
mov
add
test
mov
jl
and
xchg
adc
push
dec
push
rol
dec
or
imul
or
rol
mov
imul
cmp
test
xlat
push
mov
sti
pop
inc
pop
mov
push
pop
pop
(bad)
mov
jecxz
add
or
pop
push
adc
je
popa
aam
mov
addr16
dec
or
(bad)
in
xor
mov
pop
arpl
adc
or
adc
jbe
lods
xor
idiv
adc
loope
sbb
add
mov
aad
icebp
addr16
and
add
add
inc
inc
or
aaa
inc
or
or
in
sbb
mov
adc
or
fnsave
mov
ja
jle
mov
dec
and
sbb
fld
shrd
dec
xor
jne
rol
es
fisttp
cmps
cmps
outs
mov
addr16
adc
push
std
aas
sub
push
push
aam
push
inc
mov
push
sbb
mov
pop
dec
pop
cwde
xchg
fcomp
or
ds
adc
push
call
jmp
mov
xchg
push
cmp
dec
pop
out
pop
cmp
push
je
mov
mov
xchg
idiv
sub
and
add
jge
pop
aas
int3
ror
cmp
movs
inc
dec
mul
dec
push
cld
jno
arpl
xchg
cmp
push
mov
pop
sub
sub
xor
adc
ret
ror
call
xchg
push
or
xchg
inc
idiv
movs
add
pop
fmul
adc
scas
xchg
dec
lock
aad
cmp
leave
je
adc
loope
nop
push
push
pusha
push
ss
mov
inc
add
mov
push
push
sbb
lock
and
cwde
cmp
data16
les
or
push
iret
add
xor
or
push
xor
adc
ret
inc
sbb
icebp
rcl
xor
lea
adc
dec
sub
sbb
push
xchg
inc
js
icebp
nop
cwde
(bad)
push
push
stos
xor
adc
add
xor
sbb
jno
add
or
adc
jg
mov
add
gs
push
cmp
je
cmp
ret
loope
(bad)
je
jge
xor
dec
add
and
sbb
es
stos
and
pushf
ret
push
xor
jne
pop
add
dec
sub
add
add
loopne
xlat
stos
int
mov
arpl
mov
and
fisttp
pushf
adc
xchg
pop
jo
inc
jmp
xchg
or
test
outs
xor
and
test
add
add
test
loop
pop
aas
or
add
enter
daa
sub
sub
sbb
push
and
xchg
push
jecxz
shr
shl
xchg
mov
pusha
add
and
test
mov
and
dec
(bad)
aam
adc
pop
adc
retf
je
fadd
pop
xlat
frstor
pop
(bad)
(bad)
sbb
add
or
cld
mov
add
sbb
push
jno
in
mov
aas
in
add
or
fsubr
add
(bad)
hlt
sbb
push
cld
loopne
cmp
lock
add
mov
or
pop
dec
js
and
sub
je
arpl
sub
cmp
aam
push
not
xor
cmp
je
push
inc
mov
lods
rol
adc
pop
js
aaa
cs
pusha
sub
or
sub
or
push
mov
iret
loope
ret
jbe
outs
dec
or
popa
stos
test
shl
xchg
gs
stc
add
imul
mov
jb
mov
sub
inc
mov
pop
xor
(bad)
jge
movs
pop
cmps
cmp
mov
add
cmp
and
ret
jl
push
(bad)
jecxz
test
push
hlt
ds
neg
xor
std
fisub
test
jne
xor
outs
dec
mov
pop
or
loop
fsubr
fst
rsm
add
sbb
mov
push
les
les
or
sti
sar
mov
(bad)
adc
pop
pop
imul
jecxz
mov
ja
or
das
mov
leave
mov
jg
sub
lahf
push
ror
jg
jp
inc
lahf
sbb
test
jne
xchg
mov
mov
mov
inc
das
lods
pop
xchg
fisttp
mov
add
loope
mov
sub
imul
cmps
mov
imul
call
mov
test
or
mov
(bad)
ror
jmp
add
rcr
movs
xlat
rol
daa
sbb
adc
rcpps
adc
fwait
xor
inc
shr
mov
or
inc
xor
push
jo
push
cmps
cmp
lods
rcl
sar
lds
push
pushf
add
jns
fucomi
(bad)
jbe
inc
or
je
mov
or
imul
mov
adc
pop
test
xor
clc
mov
jmp
aas
or
fiadd
pop
xor
sti
mov
mov
ror
pop
aas
mov
not
and
lock
xor
popa
ss
mov
jge
pop
rol
xor
jge
adc
test
adc
shl
and
jle
cwde
cmc
pop
add
cmp
or
cmps
xchg
jo
mov
imul
adc
mov
neg
and
movs
aaa
aad
xchg
inc
(bad)
inc
push
jmp
inc
mov
bound
xlat
add
inc
and
sar
add
push
dec
add
je
cmp
and
pop
rcl
inc
push
jbe
jmp
daa
xor
push
fcmovnb
call
sbb
jne
sub
(bad)
in
shl
or
jp
xor
add
fdiv
cmps
mov
in
and
mov
mov
pop
add
or
pop
adc
push
mul
inc
icebp
jnp
and
shl
test
fsub
add
ss
mov
inc
cmp
and
rcr
xor
mov
movs
adc
jnp
or
adc
mov
sbb
dec
dec
dec
add
cs
push
pusha
daa
and
fadd
adc
mov
jle
sub
push
je
dec
mov
jmp
add
adc
sbb
fcomip
add
adc
pop
fmul
or
dec
push
mov
xor
xchg
daa
ret
sbb
or
jns
add
mov
mov
and
inc
dec
leave
xchg
dec
gs
sbb
jmp
xor
iret
adc
mov
xchg
adc
or
inc
addr16
idiv
add
jo
jle
jg
je
mov
ins
inc
das
outs
dec
add
add
jl
sbb
jnp
repnz
cmp
js
push
push
loop
adc
xchg
mov
js
cmp
adc
or
adc
push
test
mov
in
jmp
mov
and
xchg
cmp
push
or
jae
cmp
jns
mov
shl
pop
inc
loopne
jle
jo
sbb
je
aad
xor
pop
movs
test
add
cmp
cmps
push
movs
sub
pop
mov
mov
jecxz
pop
scas
add
mov
inc
out
mov
mov
movs
or
add
into
push
sub
fidivr
cwde
mov
jmp
mov
outs
ins
lea
mov
sbb
xor
dec
push
xor
es
mov
mov
mov
push
hlt
xor
add
push
jae
add
sbb
cmp
sbb
add
shl
pusha
mov
push
ins
mov
(bad)
loopne
xor
xchg
mov
and
je
fwait
je
lahf
fcom
add
lock
sbb
dec
jmp
retf
jne
fs
add
push
add
popa
dec
add
dec
setg
jle
sbb
xlat
jle
jbe
stos
add
mov
or
int3
adc
test
push
mov
jp
popf
nop
in
add
or
hlt
jb
mov
loopne
cmp
sub
cmp
loope
jp
mov
shr
ret
xchg
add
pop
pop
cmp
(bad)
dec
test
sbb
lock
mov
push
add
ret
in
movs
jmp
sub
mov
mov
daa
push
movs
inc
or
out
adc
addr16
shr
adc
push
cmp
es
mov
idiv
jl
adc
add
mov
sahf
repnz
mov
dec
adc
jmp
mov
in
je
jnp
push
jp
out
adc
ret
adc
and
jmp
sbb
sub
test
daa
push
dec
popa
xor
add
ja
out
add
cmp
and
outs
fisttp
add
or
mov
dec
or
(bad)
adc
inc
xor
dec
and
dec
sub
adc
and
adc
push
rol
pop
inc
or
arpl
js
add
fwait
add
idiv
in
add
adc
gs
dec
jne
push
icebp
and
(bad)
pop
or
nop
or
xchg
sbb
mov
out
(bad)
or
mov
add
std
add
dec
inc
cmp
loope
ret
mov
cmp
and
rcl
sbb
xchg
push
push
fwait
pop
fwait
push
pusha
or
jg
das
dec
dec
aam
jae
inc
adc
jno
hlt
push
sub
ret
stc
syscall
fcomip
inc
dec
loope
jmp
cmps
ja
test
ret
pop
or
bound
dec
xchg
fisttp
mov
leave
push
retf
addr16
retf
pop
adc
aaa
ss
or
repz
jl
mov
or
sub
pop
adc
cmp
enter
sbb
cmp
jge
frndint
shr
cmp
jge
ins
cmp
add
pop
sub
pop
jae
(bad)
cmp
jle
aas
outs
mov
aaa
test
push
inc
cli
pop
or
and
xchg
jmp
nop
sbb
mov
and
test
mov
adc
(bad)
fild
test
test
fsub
pop
or
div
sbb
out
lahf
xchg
add
and
pop
sar
rol
sub
repz
icebp
aas
ins
sub
mov
mov
mov
ret
ret
mov
push
xor
test
cmc
inc
and
adc
stc
xchg
cmp
pop
clc
mov
imul
or
ins
ds
push
sub
stos
arpl
pop
sbb
rdmsr
fwait
add
js
(bad)
and
xchg
sbb
or
retf
sbb
add
and
je
pop
cmp
loopne
push
ja
cmp
dec
ret
fist
xor
push
stc
and
add
or
xor
jmp
lea
mov
adc
cmp
jbe
das
mov
loope
sahf
xor
mov
je
mov
aas
cmp
pop
or
iret
loope
fisub
sti
mov
mov
sub
sahf
mov
or
(bad)
or
mov
std
test
enter
or
test
and
das
or
clc
sub
inc
mov
and
add
les
xchg
inc
add
mov
inc
test
adc
dec
cld
dec
mov
adc
inc
dec
js
xlat
mov
and
sub
xor
ss
jg
inc
mov
xchg
mov
dec
dec
and
xchg
sbb
popa
add
cmp
sub
out
mov
mov
jg
jge
cmp
or
jb
sub
rcr
push
lds
shr
mov
imul
jnp
rol
xor
sti
mov
popf
mov
adc
cmp
pop
popa
(bad)
push
mov
push
(bad)
mov
test
push
jg
loope
pop
push
xchg
xor
add
pop
add
imul
push
or
cmp
jmp
push
stos
fucomi
or
test
sbb
push
ds
xchg
or
xchg
push
jnp
fdiv
mov
mov
xor
cmp
call
movs
inc
mov
and
ret
stos
or
dec
add
adc
xchg
outs
sub
add
and
test
inc
jb
in
sti
pop
mov
loopne
sbb
call
mov
call
adc
dec
jne
test
cmc
inc
or
out
loop
push
ret
xchg
mov
mov
ret
ffreep
aad
mov
push
jp
dec
cmp
clc
mov
js
jbe
les
mov
sbb
out
ins
imul
loope
adc
jbe
daa
inc
adc
or
jp
cmp
inc
mov
mov
cmps
xor
test
enter
cmp
lock
inc
or
div
clc
lods
inc
cmp
pop
jl
sub
loopne
(bad)
cmp
jle
stc
mov
jg
or
add
jl
cmp
test
cmp
sbb
in
mov
loopne
dec
cmps
sbb
adc
add
or
or
dec
sbb
mov
lods
pusha
adc
jl
mov
and
and
add
test
pop
scas
dec
dec
xor
movs
pop
xor
add
in
loopne
pusha
adc
jle
(bad)
jbe
sbb
xchg
pop
dec
daa
fisttp
push
pop
or
jp
xor
pop
or
cmp
pop
adc
loopne
movs
push
jmp
fcom
mov
xchg
enter
(bad)
sbb
push
pusha
xchg
in
push
in
lock
mov
pop
das
add
in
dec
mov
mov
adc
lahf
std
enter
dec
add
jo
and
push
xor
add
sub
jo
or
jmp
cmp
adc
add
cmps
xchg
call
outs
shl
pop
add
and
pop
in
jle
inc
add
adc
mov
or
push
rol
add
cs
or
jae
je
mov
test
mov
or
pusha
mov
or
mov
adc
pop
jmp
int
cmp
cli
rol
lods
loopne
sar
scas
adc
loopne
addr16
pusha
xor
jo
inc
shr
stc
mov
cmp
mov
jle
adc
jmp
sbb
pop
jb
int3
add
mov
ret
mov
mov
and
sbb
ror
mov
int
pop
push
iret
dec
cs
int3
mov
adc
pusha
fdivr
aam
adc
ret
in
pop
les
stos
std
push
sbb
scas
jle
loopne
push
mov
scas
xchg
add
sbb
inc
dec
aam
rcr
mov
xor
fild
xchg
add
push
clc
cmp
pop
mov
cmp
xchg
aam
les
dec
sbb
bound
fs
repz
in
add
add
out
test
sldt
adc
xor
popa
iret
repz
(bad)
call
push
push
lea
nop
clc
sbb
pop
scas
mov
jo
or
push
js
mov
mov
(bad)
and
xchg
jo
rcr
xchg
aaa
pop
xlat
int3
xchg
test
je
hlt
das
test
je
push
add
xchg
fwait
fs
shl
mov
stc
add
and
ja
jecxz
jno
add
int3
pop
test
cs
sub
pop
push
adc
cmps
push
mov
inc
ss
movs
add
in
in
sub
mov
xchg
inc
imul
adc
xchg
push
mov
jge
or
retf
sbb
loopne
push
inc
test
xor
adc
sub
sbb
fwait
or
call
dec
jne
push
sub
jns
adc
and
push
loop
mov
add
pop
push
mov
or
or
dec
cld
inc
add
add
aam
daa
inc
pop
sub
mov
popa
push
dec
adc
je
jo
jge
adc
sbb
pop
data16
dec
movs
push
mov
jle
hlt
add
gs
cdq
hlt
fwait
add
add
aas
or
cmp
mov
sar
push
je
mov
test
fsubr
push
cmp
inc
pusha
cmp
mov
add
nop
or
cmp
push
ins
mov
addr16
ror
inc
imul
enter
cmp
mov
mov
data16
adc
sahf
nop
mov
std
xchg
stos
add
and
mov
arpl
adc
add
pop
add
push
cdq
pop
sub
pop
or
(bad)
shl
outs
jae
and
pusha
mov
cmp
pop
and
add
frstor
sub
(bad)
imul
adc
mov
imul
push
aam
clc
add
neg
lods
sar
adc
jne
sar
sbb
pop
lea
lea
push
push
xadd
cmp
dec
shr
sbb
aam
rcl
call
and
add
or
push
or
aam
pushf
mov
retf
jo
xor
and
add
dec
popa
or
xchg
cvtps2pi
test
or
sbb
fmul
mov
loopne
xor
scas
test
std
push
(bad)
xchg
pop
or
icebp
outs
add
sbb
arpl
mov
push
ja
add
js
xlat
mov
aad
push
or
xor
nop
sbb
mov
inc
jmp
in
fld1
and
push
push
adc
cs
inc
fadd
fsub
or
xor
push
pop
movs
xchg
clc
add
arpl
jmp
test
mov
or
pop
retf
lea
push
clc
dec
sar
les
fst
jge
cmp
dec
or
or
sub
out
inc
shl
out
push
sbb
push
loopne
enter
adc
and
xchg
pop
push
sbb
ja
call
push
jnp
or
rol
sti
push
jae
add
je
cwde
aam
ret
mov
inc
aam
sub
push
or
test
push
fcmovnu
sub
jmp
fs
sub
and
inc
or
lds
pusha
sub
(bad)
std
(bad)
sub
cmp
jmp
je
or
ret
in
ins
test
jae
mov
add
add
mov
test
jno
(bad)
add
dec
scas
clc
mov
mov
fwait
sahf
ins
adc
add
dec
shr
dec
outs
jns
das
xchg
jg
enter
pop
or
jae
in
push
scas
jmp
sbb
bound
icebp
push
xor
call
movs
dec
add
lds
icebp
sub
inc
in
add
inc
aaa
dec
or
and
mov
xor
sahf
mov
stc
inc
cmp
sbb
sub
fwait
js
push
xlat
shr
add
cmp
std
addr16
cmp
jl
in
ins
mov
add
sbb
push
sbb
or
test
add
add
cwde
pop
add
pop
xchg
rol
or
and
mov
xor
fiadd
cli
pop
ja
mov
dec
sub
jae
les
dec
call
add
sub
adc
jo
inc
imul
fcomip
retf
fs
jo
add
mov
mov
or
scas
add
or
mov
sub
and
out
cmp
and
std
push
sbb
das
(bad)
cmp
push
sbb
push
pop
push
daa
inc
test
test
lods
mov
inc
push
adc
sbb
jae
push
out
cmp
jnp
push
jne
adc
scas
sbb
lods
inc
loopne
test
or
rol
adc
fcomp
inc
add
or
add
pop
mov
in
div
jmp
and
xor
and
mov
push
aam
int3
int3
movq
jmp
movzx
fisttp
fdiv
imul
leave
push
inc
xor
inc
sub
add
lock
mov
inc
les
lods
add
pop
jmp
adc
sbb
je
(bad)
mov
leave
pop
ror
imul
sub
and
dec
inc
push
mov
cmp
add
pop
add
(bad)
stc
add
inc
sar
jg
dec
inc
test
leave
pusha
loopne
fsub
add
sub
or
add
nop
adc
xchg
and
dec
jg
and
mov
cmp
std
aam
inc
or
call
(bad)
jmp
push
arpl
push
or
iret
arpl
jne
mov
jne
push
cmp
push
pop
dec
push
je
sbb
adc
add
jp
clc
(bad)
cld
cmp
add
push
loop
data16
xor
int3
jo
inc
(bad)
mov
lea
test
mov
pusha
in
add
ror
push
jmp
dec
xor
xor
inc
and
pop
jle
clc
test
jmp
jne
shl
adc
inc
in
mov
or
mov
jp
dec
repz
out
out
lahf
or
xlat
xchg
adc
test
mov
pusha
inc
adc
cmp
jne
ror
fmul
imul
imul
out
or
cmp
and
loopne
inc
push
cdq
and
call
xchg
lock
cmp
mov
mov
add
mov
fcmovu
daa
retf
daa
rol
clc
loope
add
mov
inc
adc
jae
sbb
add
inc
sbb
ffreep
fisubr
jae
push
div
in
nop
or
inc
sub
mov
cs
xor
adc
je
mov
inc
xor
xor
xor
adc
cwde
dec
xchg
jmp
mov
xchg
shl
(bad)
pop
and
adc
pop
imul
or
aam
sbb
dec
add
jns
jmp
cmp
arpl
sub
cmps
mov
pushf
loopne
jmp
sahf
add
sbb
aaa
and
jmp
(bad)
jg
ja
and
bt
jae
mov
not
and
daa
xor
arpl
or
stos
mov
push
inc
pop
or
pop
add
test
add
push
or
dec
test
sbb
les
and
sub
xor
inc
dec
cmp
add
sbb
cmp
mov
cdq
xchg
jl
cld
dec
push
cs
mov
pop
pop
and
and
push
dec
dec
push
mov
aas
cmp
add
push
idiv
sahf
cwde
mov
jmp
dec
jg
ret
push
pop
popa
and
or
pop
call
test
or
or
(bad)
fbld
bound
jae
popa
and
sbb
test
jo
mov
pop
and
and
js
xchg
xchg
sub
pop
push
jo
cmp
mov
mov
daa
xchg
repnz
adc
nop
push
jmp
add
jecxz
inc
inc
or
xor
ins
sbb
ins
sub
pop
and
es
mov
or
push
jbe
imul
aas
fadd
and
mov
aam
push
push
repz
inc
xor
mov
nop
(bad)
nop
(bad)
cmp
jg
popa
add
jae
dec
ret
or
mov
(bad)
pop
push
xor
loopne
mov
aam
pop
jne
(bad)
push
mov
repnz
mov
and
cmp
fs
push
test
dec
movs
mov
imul
push
dec
and
retf
jmp
lea
sbb
add
mov
and
mov
movd
inc
jnp
js
push
add
adc
sbb
push
icebp
cwde
pop
jmp
pop
and
mov
or
adc
and
or
ret
popf
mov
pop
ret
shl
xchg
push
jnp
jno
cmp
inc
inc
rcr
ja
adc
lods
cwde
or
adc
mov
iret
dec
xor
mov
mov
add
add
popf
aad
movs
es
loopne
add
mov
sti
xor
push
mov
sub
adc
(bad)
pop
lock
sbb
inc
sbb
movs
in
inc
lea
sub
call
jne
lea
mov
xor
mov
mov
jl
mov
or
push
pop
int3
ins
cmp
fiadd
shr
jle
dec
mov
add
loopne
jno
cmps
or
dec
cmp
outs
xchg
test
jbe
xchg
ficomp
dec
and
push
add
nop
push
in
or
jo
cld
jle
push
fs
pop
adc
data16
adc
cmp
and
enter
mov
adc
(bad)
or
pusha
xor
adc
imul
adc
fadd
or
xchg
xor
mov
enter
adc
cwde
sub
or
adc
adc
fst
push
(bad)
sbb
(bad)
jnp
sub
mov
movs
dec
cdq
inc
sbb
repnz
ins
inc
repz
and
jb
pop
jbe
sar
(bad)
repnz
add
jmp
add
adc
pop
sub
adc
or
mov
mov
or
push
or
fstp
inc
ins
inc
out
mov
ret
iret
sub
jp
push
sub
adc
push
or
push
enter
bound
cwde
cwde
xchg
retf
inc
clc
inc
add
ds
or
(bad)
sub
add
pusha
(bad)
pop
pop
lahf
pop
mov
iret
repnz
icebp
jecxz
and
fmul
movs
push
lods
outs
in
add
xor
rcl
lock
adc
adc
adc
sar
and
or
int3
and
mov
xor
pop
dec
ret
inc
push
and
jge
mov
aas
pusha
cmp
jge
and
loopne
push
loopne
outs
pusha
imul
push
loopne
mov
or
mov
enter
mov
int
cli
add
nop
imul
jmp
and
aad
mov
mov
aad
and
and
rcl
js
jbe
pop
inc
std
adc
pushf
sar
jo
adc
aad
mov
ss
adc
inc
call
sbb
push
sub
sbb
adc
hlt
sbb
jle
add
and
fidivr
dec
mov
fs
call
mov
add
dec
and
jno
aaa
fisttp
dec
add
mov
pushf
adc
not
inc
cmp
sti
push
sbb
mov
out
test
dec
js
mov
dec
shr
dec
aas
cdq
adc
xchg
mov
and
pop
pop
addr16
clc
cld
and
xor
loopne
scas
outs
in
or
lock
push
jle
adc
add
mov
or
sbb
popf
or
or
daa
jno
push
add
inc
mov
push
sbb
pusha
inc
cmp
jne
push
lods
add
mov
xor
xchg
and
std
mov
push
or
push
inc
mov
(bad)
adc
aam
or
jge
push
stos
jno
pushf
push
add
iret
arpl
sub
or
sub
popf
fcomip
clc
lods
push
jb
or
cld
pop
call
(bad)
pusha
mov
sbb
nop
out
xchg
inc
add
sbb
les
or
or
jo
idiv
jle
call
shr
mov
fnstenv
sbb
test
adc
push
push
dec
jge
mov
daa
mov
sbb
cmp
ror
and
shr
adc
or
sub
js
jnp
or
mov
lock
movs
mov
pop
cmp
xchg
pop
push
xchg
sub
(bad)
mov
mov
and
and
popa
movs
das
inc
dec
inc
xchg
push
js
pusha
and
pushf
jecxz
hlt
nop
add
mov
ja
je
pop
mov
pop
jl
sbb
dec
or
(bad)
loopne
inc
jl
xor
inc
mov
sbb
cmc
cwde
sbb
jnp
test
popa
cmp
and
cwde
cmp
(bad)
in
and
sub
push
mov
push
cmp
fnstcw
jae
or
cmp
out
daa
shr
dec
dec
das
xor
or
ror
mov
cmp
je
cdq
movs
inc
sub
rol
cdq
mov
jmp
xchg
(bad)
fwait
xchg
cmps
mov
add
mov
xlat
dec
pop
fdivr
cdq
shr
xlat
lea
lea
mov
add
add
rol
or
je
test
shl
mov
mov
xor
push
sbb
aaa
mov
pop
mov
or
ret
loopne
fmul
dec
jnp
dec
ss
aaa
add
xchg
(bad)
push
or
and
das
sbb
outs
mov
adc
add
arpl
scas
into
sbb
inc
fs
adc
pop
test
push
mov
lock
clc
push
ret
test
shr
and
clc
push
pop
gs
dec
push
add
and
aaa
xor
mov
popa
jmp
mov
popa
dec
push
mov
adc
or
xor
pop
inc
mov
dec
adc
add
adc
and
lods
push
add
mov
xor
imul
mov
imul
mov
ret
(bad)
and
add
ins
das
ret
sbb
cmp
fisubr
and
inc
sbb
movs
cmps
std
stos
xchg
add
jmp
mov
mov
pop
fldenv
enter
stos
dec
and
or
inc
dec
ins
popf
rol
test
enter
jp
scas
ss
add
sbb
sub
das
cli
outs
fld
inc
call
outs
jmp
jne
stc
inc
cmps
jl
jne
mov
mov
sbb
mov
inc
mov
or
or
push
add
push
xor
fistp
or
sub
dec
mov
jmp
mov
adc
fwait
stos
mov
lods
fsubr
call
ins
jbe
sti
jmp
cmp
cmp
pop
push
popa
movs
push
mov
lds
push
push
sub
jbe
sbb
adc
mov
pusha
pusha
mov
or
neg
push
push
adc
and
shr
call
add
jmp
cld
pop
mov
cdq
idiv
sbb
inc
inc
ins
aaa
jns
add
jne
pop
adc
mov
push
inc
add
daa
or
mov
pop
mov
sahf
ins
sub
jg
mov
inc
pop
aam
push
aad
push
mov
jp
pop
dec
xor
or
adc
mov
nop
adc
loop
xor
push
cs
mov
clc
push
rcl
fsub
adc
loopne
popa
mov
jbe
xor
shl
je
push
out
mov
push
cmp
inc
es
mov
mov
mov
sub
push
retf
scas
sub
pop
inc
aas
sub
ret
pop
xlat
and
sub
dec
pop
add
add
cmps
mov
loope
jp
pop
ds
pushf
xchg
add
push
adc
ret
sbb
add
mov
and
adc
inc
adc
sbb
sub
jmp
adc
jne
push
imul
retf
push
cmc
mov
(bad)
test
pop
bound
sub
dec
adc
inc
push
jbe
rcl
xor
cmp
scas
gs
in
fs
and
add
adc
dec
sub
mov
push
lock
(bad)
out
push
push
cmp
hlt
nop
mov
loopne
sub
mov
dec
in
add
test
or
mov
or
ins
jle
and
and
add
inc
and
push
ret
idiv
pop
lock
mul
popa
mov
jmp
fiadd
addr16
hlt
cmp
fdiv
ss
ins
dec
push
movs
ins
enter
adc
adc
call
and
jle
adc
sbb
push
push
les
or
ret
add
xchg
xor
pop
push
pop
sbb
fwait
pop
adc
pop
dec
rol
add
xchg
pop
or
jmp
jo
fild
je
or
hlt
push
shl
cmp
icebp
enter
and
pop
sub
ins
xchg
sbb
and
or
mov
pop
adc
adc
mov
popa
fnstsw
dec
daa
or
cmp
add
adc
jle
(bad)
sbb
in
dec
add
movs
adc
test
aad
mov
popa
dec
cmps
add
sar
dec
pop
xor
adc
mov
(bad)
push
aaa
mov
mov
and
pop
xor
stc
xchg
out
and
adc
adc
mov
add
add
add
cmps
inc
ret
dec
or
js
jg
arpl
adc
shl
pop
or
cmp
(bad)
fdivrp
adc
clc
add
or
es
in
push
cdq
sub
pop
aaa
or
push
sub
and
leave
retf
push
add
adc
push
fisttp
clc
(bad)
popa
call
jo
inc
add
push
aam
and
popf
inc
jbe
dec
fs
dec
and
and
pop
movs
fs
mov
xor
add
lahf
pusha
and
hlt
mov
call
cli
adc
inc
cmps
inc
pop
sti
dec
(bad)
cmp
add
cmp
push
sub
jne
push
or
(bad)
(bad)
push
dec
or
pop
xchg
(bad)
mov
sbb
mov
hlt
jb
sbb
repz
mov
adc
fs
mov
or
jp
jg
sub
popa
adc
jno
loopne
jge
arpl
outs
test
push
jb
test
jne
popa
pop
mov
out
in
loope
js
xor
jecxz
aaa
jno
ins
rcr
adc
loopne
sbb
xor
sbb
add
add
push
into
aas
push
cmp
lods
add
int3
push
inc
fidivr
sub
scas
call
adc
iret
loop
and
ins
shr
or
jae
mov
ror
and
call
loopne
dec
jne
or
cdq
xor
push
inc
mov
push
sub
sub
and
(bad)
and
dec
and
and
pusha
leave
mov
add
mov
or
adc
and
adc
add
idiv
sahf
test
add
xor
enter
add
push
add
lock
jmp
push
push
cmp
jb
add
sbb
mov
stc
scas
inc
(bad)
clc
test
add
mov
aad
or
fsub
add
xor
out
push
fucomp
daa
adc
xchg
inc
jp
sbb
loopne
leave
xor
mov
or
or
adc
mov
xchg
inc
push
int3
jge
add
push
and
push
mov
or
fisttp
in
add
adc
add
inc
or
jge
dec
clc
mov
push
sbb
push
xor
icebp
ja
pop
clc
and
or
pop
clc
pop
and
inc
ret
call
in
cmp
mov
sub
sbb
stos
pop
mov
pop
adc
push
mov
or
loopne
inc
retf
inc
jno
sbb
pop
mov
stos
popa
ja
sbb
shl
and
xor
add
movs
push
or
fld
xor
jae
mov
loopne
test
or
and
sbb
push
or
pop
ss
lods
stos
pusha
add
jle
mov
sub
dec
mov
sbb
push
sbb
loopne
push
xchg
and
inc
adc
sub
dec
adc
adc
jg
mov
push
aad
push
add
push
sbb
cli
sbb
and
aaa
or
jnp
jg
mov
jp
cmp
and
scas
in
mov
add
add
sub
dec
push
cmp
or
movs
(bad)
clc
pop
repnz
push
sub
cmp
jge
or
mov
jmp
adc
dec
clc
outs
ja
mov
or
add
ret
idiv
cdq
out
jnp
push
add
and
sub
data16
scas
popa
or
nop
ret
sbb
mov
add
jl
adc
xor
(bad)
test
call
and
lock
hlt
push
jmp
push
test
adc
stos
cmp
or
and
xchg
js
(bad)
inc
aaa
lods
and
and
psubb
inc
or
jg
imul
adc
pop
lock
xchg
pop
in
or
jne
add
add
sub
and
push
and
mov
icebp
add
call
fnstenv
pop
into
add
jmp
jb
sbb
xor
pop
dec
rcl
or
pop
iret
lock
sub
repz
push
or
sti
or
pop
dec
xor
xor
adc
add
add
jne
out
cmp
lock
sbb
mov
and
fsub
or
push
daa
loopne
add
lock
push
adc
sbb
fild
clc
retf
mov
fld
je
and
add
lea
sub
cld
cmps
popa
loopne
mov
test
add
(bad)
test
js
call
mov
inc
sbb
fwait
mov
cmps
ret
push
rcr
dec
arpl
xchg
bound
arpl
test
pop
cmp
sbb
cmp
or
mov
pop
cmp
ss
fisubr
xchg
add
call
push
je
rcr
inc
(bad)
data16
pop
mov
ds
cld
jl
push
test
sar
pop
sbb
mov
push
shl
mov
rcr
arpl
mov
imul
pushf
pop
fsubr
jg
pop
aaa
cmp
or
lea
popf
fs
dec
push
icebp
xor
dec
cmp
hlt
scas
dec
mov
addr16
lock
mov
dec
aam
mov
push
jmp
sti
add
push
dec
fisubr
mov
xor
popf
loope
xchg
push
test
push
jnp
cmp
jge
cmp
push
mov
test
add
push
adc
push
and
adc
sub
push
and
adc
and
or
mov
das
dec
aas
xchg
daa
nop
add
loopne
loope
dec
in
pop
retf
adc
adc
cmp
push
mov
sbb
cmp
test
push
mov
jbe
arpl
fisubr
push
mov
inc
mov
int
out
jmp
pop
jge
and
sbb
jle
jno
add
pop
loopne
push
mov
rol
dec
and
je
cli
pop
ret
xchg
movs
out
jbe
or
ins
mov
cmp
je
dec
(bad)
repz
inc
jecxz
mov
push
fisttp
sbb
jne
popa
sar
ss
test
push
inc
push
ror
xor
pop
xor
inc
js
mov
mov
bswap
add
add
sub
cmp
popf
sub
or
mov
xor
clc
jge
jecxz
fiadd
add
sbb
ret
inc
add
cwde
daa
sub
xlat
jnp
dec
pusha
dec
adc
inc
mov
aaa
in
inc
and
imul
dec
or
mov
repnz
test
dec
or
inc
retf
dec
and
shl
inc
sbb
jne
sub
or
xchg
cmp
loopne
xchg
add
adc
cmp
or
or
jae
sbb
add
cmp
sub
xor
or
xor
push
add
mov
pop
dec
sbb
inc
mov
cmp
mov
ss
inc
jle
je
cmp
sbb
ror
mov
xor
inc
or
xchg
inc
push
pusha
lock
mov
inc
sbb
sub
xchg
or
sbb
enter
mov
or
mov
add
loopne
jo
and
mov
xor
(bad)
ror
pop
pop
(bad)
js
mov
adc
cmp
push
iret
mov
add
dec
and
push
dec
dec
and
das
call
xchg
add
and
gs
inc
add
push
clc
test
jle
cmp
jne
dec
push
push
popf
ret
in
adc
push
add
(bad)
in
push
and
stos
repnz
mov
loopne
cmp
out
cmp
mov
cmp
sub
xor
shl
mov
mov
and
mov
and
sbb
sbb
retf
xchg
dec
nop
sbb
xor
xchg
jle
pop
add
arpl
or
cmp
imul
push
push
or
cmps
ds
xor
movs
or
clc
sub
and
push
out
pop
mov
xor
and
or
inc
dec
pop
adc
jle
cld
adc
or
or
hlt
and
mov
lock
retf
scas
clc
sar
jns
adc
or
xchg
dec
in
or
(bad)
push
jecxz
hlt
sub
or
inc
or
test
ficom
fisub
add
(bad)
test
and
sbb
jp
pop
push
imul
sbb
push
mov
dec
enter
lock
push
test
push
pop
push
outs
icebp
nop
add
ja
ror
aaa
call
mov
pop
xor
fistp
fldenv
pop
pop
iret
nop
mov
jmp
jl
test
xor
dec
cld
jmp
adc
out
mov
leave
push
add
je
sub
push
push
ja
add
add
push
fldcw
jl
and
lods
fs
sbb
jns
and
dec
pop
ins
jp
movs
pop
inc
xor
sbb
shr
in
lock
and
ret
icebp
push
es
or
inc
adc
inc
fadd
lea
adc
pop
add
jp
inc
inc
pop
js
ror
mov
js
sbb
stos
aam
mov
and
out
movs
sbb
inc
sahf
mov
adc
shl
xor
out
arpl
daa
push
mov
sub
add
mov
mov
enter
or
fs
test
das
cmps
movs
mov
or
iret
into
cmp
dec
jb
and
or
cmp
inc
or
test
and
(bad)
div
sbb
in
push
add
adc
mov
lods
add
jmp
or
add
mov
je
inc
sbb
jmp
int
sub
movs
adc
rol
cld
andps
jecxz
push
jnp
aam
and
add
adc
jmp
in
xchg
adc
(bad)
jl
adc
enter
rcr
test
add
adc
sbb
ror
mov
lea
add
je
mov
add
push
imul
adc
(bad)
jmp
popa
push
icebp
daa
inc
es
push
ins
ss
inc
add
sbb
pushf
sub
jno
cld
dec
push
inc
rol
add
xor
push
fbld
jno
arpl
inc
scas
das
inc
jg
sub
add
cmp
int
sahf
sbb
mov
fmul
dec
loopne
sub
inc
and
xchg
sbb
push
pop
cmp
or
icebp
fisub
push
mov
in
adc
mov
sub
inc
(bad)
mov
push
loope
ret
aad
fadd
or
icebp
test
sahf
or
nop
mov
xchg
pop
xchg
in
xchg
adc
shl
dec
add
mov
mov
pop
daa
lock
inc
push
jnp
dec
mov
(bad)
and
add
or
add
inc
adc
or
leave
hlt
xor
dec
dec
adc
ss
push
repnz
push
mov
inc
and
dec
add
push
xchg
push
xlat
or
dec
arpl
fadd
or
stc
push
aas
inc
loopne
lods
cs
pop
or
test
or
or
dec
push
lock
popa
mov
in
xor
mov
push
push
ss
in
push
leave
pop
adc
(bad)
punpcklbw
inc
je
movs
ins
sti
mov
stos
sub
push
call
push
(bad)
add
lea
sbb
add
push
mov
(bad)
xor
xchg
lods
or
jge
popa
xchg
(bad)
xor
ds
sbb
shr
adc
not
call
imul
and
sbb
inc
push
in
mov
fstp
scas
es
not
gs
ret
sub
stc
adc
(bad)
lock
loop
test
and
xchg
xor
stc
daa
jecxz
idiv
sti
mov
clc
sbb
push
jmp
dec
inc
mov
(bad)
(bad)
lock
daa
movs
sub
adc
rcr
in
cmp
cmp
push
add
sub
xchg
mov
sbb
into
mov
jo
jne
and
ret
inc
pop
sub
and
pop
je
dec
jp
daa
add
and
inc
pop
(bad)
ror
sub
xchg
sti
add
bswap
mov
or
sar
inc
inc
out
add
add
pop
add
push
je
(bad)
shld
mov
pop
xor
inc
or
fist
aaa
sbb
mov
pop
push
sbb
js
pop
mov
inc
pop
add
dec
ret
ret
or
imul
adc
mov
xor
xchg
mov
gs
sub
mov
jecxz
inc
out
adc
add
and
pop
cli
push
or
add
sbb
push
cdq
adc
push
retf
ret
neg
inc
or
pushf
sub
xchg
push
loopne
loopne
mov
movups
fmul
pop
xor
push
out
daa
add
cmp
jne
shr
inc
lahf
add
loope
loope
add
add
sar
pusha
add
inc
sbb
test
adc
and
adc
out
pusha
sub
movs
add
or
inc
addr16
dec
shl
and
sub
jnp
inc
lea
fistp
shl
mov
stos
xchg
psubsb
cli
loope
test
sbb
ins
add
dec
mov
cmp
fcmovnbe
inc
test
inc
in
cld
je
jg
mov
sub
or
dec
(bad)
sub
adc
jae
pop
add
inc
jo
outs
sbb
outs
popa
cmp
jle
les
jne
dec
add
add
and
mov
sbb
call
pop
cmp
test
mov
clc
adc
adc
out
call
clc
mov
pusha
mov
jl
mov
mov
rol
in
adc
ja
mov
je
mov
loopne
jbe
lock
cmp
jg
daa
jge
inc
ss
sub
fsub
add
scas
bound
and
test
adc
das
and
push
and
push
mov
inc
call
mov
div
movs
test
retf
xor
sub
push
cmp
test
xlat
(bad)
scas
or
xchg
cwde
les
iret
jo
mov
jno
inc
outs
dec
sub
or
mov
adc
mov
ret
jo
add
mov
inc
sbb
inc
or
ror
ins
inc
lock
cmp
test
stc
inc
push
lea
test
fwait
out
push
and
mov
mov
pop
pop
inc
sub
daa
aaa
sub
mov
dec
enter
cwde
addr16
sbb
xor
xchg
div
fadd
xchg
adc
int3
or
add
scas
push
pop
xor
jp
mov
xlat
(bad)
sahf
loope
rcl
jmp
push
inc
and
add
cmp
sahf
(bad)
jle
lock
aas
es
xor
imul
sbb
mov
dec
xor
ja
push
or
call
jae
mov
cmp
xor
cmp
hlt
sbb
mov
repnz
and
ins
mov
je
and
popa
sub
(bad)
and
lahf
cmps
pusha
add
scas
and
add
xchg
cmp
mov
in
dec
mov
rol
mov
mov
mov
inc
mov
shr
dec
mov
jecxz
or
adc
imul
enter
test
pop
adc
and
inc
mov
xor
shr
add
mov
pop
xor
sbb
rcr
(bad)
call
scas
mov
jo
loop
dec
scas
je
pop
movs
rcl
lock
gs
add
inc
inc
aaa
push
addr16
mov
daa
mov
xor
ret
fldcw
inc
add
mov
add
sub
push
pusha
dec
push
jne
into
jg
(bad)
cli
xchg
shl
sbb
push
mov
add
jmp
xor
dec
pusha
pop
int
leave
imul
jns
sbb
pop
cwde
js
mov
fwait
sub
mov
fmul
xchg
icebp
addr16
cmp
(bad)
adc
push
lods
pop
pushf
inc
(bad)
pop
sbb
loopne
and
add
sub
inc
add
dec
push
adc
sub
fisub
sub
and
or
sub
rcr
ins
adc
mov
push
mov
retf
pop
sar
mov
inc
cld
add
inc
inc
aad
fcomp
adc
or
ret
jbe
ret
lock
fdivrp
jle
push
mov
add
mov
push
add
and
pop
inc
jb
jle
js
push
jne
call
in
(bad)
push
daa
into
ret
in
or
jbe
shl
outs
leave
jne
mov
mov
xchg
ja
ror
jno
js
sbb
pop
xlat
inc
add
movs
mov
add
mov
(bad)
sub
or
pop
retf
sbb
mov
ds
or
or
mov
outs
lahf
and
sbb
jo
dec
or
mov
popa
add
mov
mov
add
pop
cmp
sub
nop
mov
xor
xor
(bad)
mov
cwde
shr
xchg
push
jg
pop
test
cmps
out
test
or
or
adc
dec
mov
jnp
outs
push
mov
push
ins
push
add
out
dec
scas
mov
mov
ins
shl
cmp
dec
imul
inc
push
hlt
or
push
fcom
jae
mov
mov
cmps
adc
jno
inc
lds
rol
xchg
outs
fadd
push
adc
lods
fs
popa
adc
shr
cmp
jl
inc
push
pop
mov
or
jno
pushf
push
xchg
adc
inc
push
bound
jne
stos
adc
icebp
pusha
in
aad
into
xchg
and
aas
mov
in
inc
dec
adc
jae
pop
pop
and
fld
push
push
and
xchg
jo
or
fdiv
outs
sub
jne
or
fdiv
and
or
add
pop
push
dec
jmp
xchg
les
test
jge
daa
pop
jbe
xchg
lods
daa
jg
adc
fwait
movs
(bad)
outs
adc
jge
inc
or
rcl
imul
pusha
cmp
call
jnp
push
arpl
or
inc
sub
cmp
lods
push
fbstp
sub
inc
xchg
and
lahf
sub
ficomp
dec
add
adc
xor
pop
dec
or
dec
sbb
shl
ins
ins
je
jmp
xchg
xchg
push
test
movs
jg
xor
inc
push
jg
lock
xor
inc
mov
or
add
and
cmps
push
outs
pop
out
mov
lea
lea
lea
adc
loope
data16
adc
shl
aas
cmp
cs
inc
adc
shr
inc
push
seto
ins
nop
nop
(bad)
loopne
add
xor
data16
ret
ret
sbb
inc
mov
mov
(bad)
fadd
or
and
push
bswap
sahf
mov
add
sbb
cmp
and
add
test
cmp
push
add
lea
jmp
gs
inc
adc
pshufw
push
dec
sbb
loopne
psrlq
cmp
mov
dec
inc
jo
and
push
js
aad
sub
pop
(bad)
pop
and
add
out
or
ficom
test
or
sbb
fcom
inc
(bad)
ins
mov
movs
int3
into
push
push
idiv
and
cmp
mov
and
and
aam
out
push
mov
dec
aam
xor
test
inc
sbb
dec
cmp
add
cmp
add
mov
xchg
jle
jl
mov
mov
pop
std
or
inc
stos
push
fcomp
mov
sbb
je
shr
test
pop
or
mov
xchg
or
lods
std
sub
daa
fs
add
sub
outs
loopne
xlat
or
dec
test
cmp
repz
data16
push
xchg
nop
cwde
push
push
pop
aam
push
cmp
nop
mov
popa
loope
lock
pop
cs
js
push
ja
movs
enter
jb
mov
pop
mov
in
push
or
mov
dec
or
sub
xchg
inc
or
push
imul
test
out
in
imul
aam
and
test
nop
shr
(bad)
dec
mov
push
fwait
push
cld
mov
add
dec
adc
pop
shl
loopne
in
aam
(bad)
call
shl
fnstcw
cwde
cwde
lock
xlat
sub
sbb
je
push
xchg
adc
enter
mov
call
dec
pop
push
mov
aas
popa
pushf
sub
mov
lock
xchg
pop
mov
cmp
js
loopne
add
inc
add
clc
add
mov
pop
mov
dec
hlt
aad
jecxz
mov
mov
dec
cmp
xor
jp
stos
push
fsub
gs
mov
push
daa
popf
mov
mov
mov
jo
push
push
sub
pop
shl
and
adc
push
mov
fcomp
push
addr16
dec
jo
ja
inc
add
add
fbld
test
and
push
bound
add
jmp
xlat
call
sub
xchg
nop
das
push
and
and
mov
pusha
sub
and
jmp
or
or
pop
push
inc
adc
push
sub
sbb
daa
add
jmp
mov
dec
sub
mov
outs
jecxz
sbb
adc
adc
test
aaa
dec
add
dec
or
add
call
push
mov
dec
and
out
loopne
inc
sbb
outs
and
xchg
xchg
lods
je
popf
inc
into
pop
mov
ror
dec
adc
or
and
or
lods
inc
or
dec
fmul
xlat
mov
dec
jmp
add
(bad)
icebp
in
ins
dec
aas
adc
loop
call
adc
inc
cmps
fiadd
or
push
cli
dec
fbstp
jge
cli
pop
packssdw
push
outs
xchg
ss
out
cmp
pop
xchg
inc
jo
das
pop
(bad)
inc
adc
or
or
add
jg
cmovg
sbb
cmp
sahf
fadd
imul
push
push
dec
js
fdiv
outs
dec
adc
push
mov
push
sbb
jl
ror
dec
mov
adc
loopne
arpl
push
jmp
and
popf
sbb
sub
push
sub
test
dec
loopne
cmp
ret
pop
jp
pop
adc
inc
mov
inc
popf
mov
jl
les
jbe
jns
adc
mov
mov
push
in
ror
fdivr
or
mov
mov
cmp
or
das
dec
imul
mov
loopne
aam
or
aaa
sbb
mov
add
jae
jns
sbb
movs
mov
mov
ins
inc
pop
mov
pop
outs
inc
(bad)
lock
mov
call
mov
add
aas
test
pusha
inc
push
in
ror
sar
and
dec
adc
xor
rcl
and
inc
dec
lea
test
bound
ins
xchg
les
push
push
frstor
cmp
(bad)
jno
jno
popf
push
sub
aaa
xor
cdq
add
add
(bad)
pop
cmps
movs
add
aam
movs
push
mov
and
in
call
and
cmp
shl
(bad)
inc
mov
jne
dec
cmp
push
push
pop
fdiv
in
or
push
sub
pop
inc
pop
mov
jb
mov
sbb
add
data16
add
mov
inc
fnstcw
cmp
int
clc
jge
lds
or
out
add
fisub
adc
jns
and
jb
das
or
push
inc
test
mov
inc
daa
test
rcr
sub
sti
push
sbb
fdivr
mov
dec
push
push
fild
push
add
pop
adc
push
xchg
or
stos
shr
pusha
push
dec
or
mov
pushf
push
mov
sbb
lds
lds
dec
inc
out
pop
jne
(bad)
push
inc
push
add
jmp
cmp
jne
pop
arpl
cdq
cmp
ja
lahf
or
push
movs
mov
fisttp
push
mov
loop
mov
inc
xor
and
ror
inc
adc
dec
and
ret
mov
aas
adc
clc
push
repz
test
daa
sub
(bad)
or
mov
push
mov
xchg
mov
xchg
add
mov
das
adc
call
rcr
aam
mov
ds
or
movs
push
mov
add
and
cmp
mov
ins
data16
or
add
pop
xchg
sbb
call
mov
mov
cdq
in
les
shl
dec
aas
mov
push
test
cmp
pop
pop
ins
ins
pop
xlat
mov
ss
add
push
cmp
add
in
loop
ss
adc
and
imul
mov
lea
add
pop
mov
sub
mov
pop
shl
les
push
and
and
jl
arpl
loopne
mov
dec
mov
stos
movs
in
movs
cmp
or
ret
pop
(bad)
pop
pusha
popf
push
in
push
mov
jp
outs
jmp
inc
jb
sub
inc
jl
xor
aaa
adc
dec
adc
inc
sti
lea
js
mov
jmp
and
inc
dec
out
push
cmp
jne
jnp
or
and
adc
mov
mov
push
push
and
or
mov
fdiv
xchg
mov
mov
inc
mov
cmc
adc
sbb
(bad)
(bad)
jmp
pusha
sar
add
xor
jne
push
add
fisttp
push
sub
lods
push
int3
dec
pop
(bad)
dec
xchg
or
mov
sub
das
or
push
and
add
into
sbb
sub
dec
or
(bad)
sbb
mov
sbb
test
ret
out
and
inc
add
js
push
pop
xchg
test
or
and
(bad)
aam
and
inc
mov
push
dec
add
jno
sub
mov
inc
and
add
push
sbb
mov
es
push
das
inc
sub
adc
mov
ja
ins
mov
mov
aaa
adc
lahf
or
cwde
inc
ins
pop
in
dec
mov
popa
test
jmp
mov
adc
and
adc
xor
or
jnp
test
xchg
jg
loopne
fistp
retf
jp
or
and
fadd
adc
xor
fwait
mov
enter
lea
mov
jp
add
(bad)
ret
enter
popa
sti
adc
ins
loopne
mov
test
pop
jnp
add
test
pop
lock
(bad)
movs
loopne
jmp
out
add
push
pop
xchg
cmp
lock
or
aas
jg
add
jno
lock
dec
les
int
lock
and
dec
mov
and
adc
cmp
and
or
cld
fdivr
loope
out
add
clc
add
cmp
cdq
ret
push
ret
ret
pop
stos
int3
out
xchg
ret
push
jp
outs
add
cs
sub
xor
(bad)
fmul
push
pop
add
mov
fnstsw
xor
or
xor
jcxz
or
mov
add
cbw
jmp
mov
pop
or
xor
jne
add
mov
adc
add
push
nop
add
dec
pop
lds
and
or
imul
mov
or
inc
jge
mov
jge
xchg
xchg
es
xchg
push
sub
xchg
xor
inc
pop
jbe
dec
loopne
popa
mov
std
test
pop
sub
stc
push
je
or
add
inc
cmp
push
add
loope
inc
jle
in
and
mov
std
xchg
je
popa
sbb
mov
pusha
inc
add
adc
or
xchg
sub
jg
lock
das
icebp
lea
push
loopne
push
xchg
popa
mov
xor
shl
sahf
dec
cmp
mov
sbb
add
(bad)
xor
push
test
pop
mov
pop
bound
mov
push
and
int
je
aaa
arpl
in
or
inc
push
mov
inc
sbb
add
and
or
adc
inc
adc
jbe
(bad)
xchg
nop
mov
shl
scas
aad
les
sar
ins
and
xor
add
cmps
je
push
inc
clc
inc
inc
pop
rol
xchg
clc
inc
or
cmp
cli
mov
adc
cmp
xchg
push
mov
(bad)
add
fadd
xchg
sbb
sub
in
data16
push
sbb
adc
sub
mov
sub
inc
mov
nop
push
xor
int3
inc
sbb
(bad)
scas
push
inc
sub
cmp
adc
fdivp
pop
and
lock
push
push
xchg
add
xlat
sub
mov
lahf
xor
daa
mov
out
movs
xor
add
mov
inc
mov
and
rcl
dec
and
or
push
mov
or
sub
popa
in
fld
inc
or
je
pop
pop
pop
and
adc
lock
fimul
push
push
stos
lock
int3
pop
add
add
aaa
push
and
mov
(bad)
sbb
push
rcl
cmp
adc
add
add
test
ror
mov
or
xlat
lea
mov
mov
push
je
or
sbb
add
lea
sbb
test
ss
add
call
xchg
jge
mov
sbb
inc
call
sbb
ss
pop
xchg
das
dec
cmp
push
cmp
mov
sub
enter
rcr
inc
mov
mov
(bad)
jmp
fild
jnp
sub
add
push
dec
add
ja
jns
and
rcl
xor
xchg
or
call
adc
xor
je
je
fadd
fst
mov
inc
outs
xchg
lods
ja
jo
imul
sbb
push
gs
xchg
push
popa
je
push
or
or
inc
or
out
sbb
sub
mov
pop
inc
dec
stos
es
outs
imul
add
add
push
jae
or
push
xchg
and
xchg
add
dec
pusha
and
or
dec
mov
and
(bad)
push
adc
adc
dec
add
fmul
inc
or
outs
pop
mov
pop
mov
add
jnp
add
not
test
add
xchg
jns
add
test
mov
mov
clc
dec
ret
adc
jnp
outs
aas
hlt
pop
dec
push
or
add
dec
sbb
or
push
inc
add
data16
dec
add
or
loopne
jmp
pop
out
add
das
adc
mov
cmp
add
fdivr
xor
sti
dec
add
inc
and
pop
sub
sub
inc
mov
mov
dec
leave
push
jb
jo
into
xor
dec
jmp
jnp
mov
push
outs
fsubr
jb
iret
and
push
push
outs
jae
rcl
enter
xchg
lahf
shl
inc
in
mov
inc
outs
xor
outs
bound
mov
mov
mov
adc
ins
ds
mov
push
lods
adc
pop
add
xor
jmp
cld
ss
adc
sar
xchg
adc
inc
cwde
inc
imul
fld
pop
or
jge
out
nop
add
inc
(bad)
inc
sbb
scas
sbb
jmp
shl
ror
outs
lss
test
(bad)
dec
push
gs
mov
sbb
add
cmc
xchg
push
mov
mov
dec
lods
jmp
adc
or
cmp
adc
or
es
mov
mov
xchg
push
enter
add
shl
xchg
dec
pop
jo
mov
add
add
arpl
repz
add
shl
add
call
ins
xor
lds
and
js
mov
sbb
movs
(bad)
(bad)
cmp
or
shl
daa
iret
sbb
push
jl
addr16
call
or
pop
xchg
push
mov
sbb
add
push
add
xor
inc
dec
pop
pop
add
addr16
xor
xchg
call
and
or
(bad)
add
(bad)
mov
or
push
xchg
and
push
movs
xor
inc
stc
add
cmp
xor
js
and
or
push
loop
dec
adc
lock
pop
test
xor
fxam
or
xchg
pop
add
int3
aam
iret
fstp
daa
add
rol
sbb
or
add
jmp
mov
add
sub
xor
add
inc
jo
push
dec
scas
test
pop
int3
sub
mov
dec
add
aad
sub
pop
mov
add
sub
bound
or
adc
idiv
loopne
dec
xor
dec
or
call
add
fsub
inc
xor
vpaddusw
test
push
call
add
enter
xchg
sbb
adc
xor
das
jbe
adc
add
xor
bswap
xor
dec
jne
dec
cmps
or
mov
cs
adc
ror
pusha
ins
add
mov
(bad)
fmul
add
or
cmp
aaa
xor
icebp
(bad)
cmp
add
(bad)
mov
add
dec
and
fdivr
stos
dec
cdq
cmp
sub
jno
ds
mov
add
mov
and
xchg
xchg
xchg
scas
iret
cmc
sbb
cmp
retf
xchg
xchg
aam
push
mov
xchg
xchg
xchg
xchg
mov
xchg
jmp
mov
xchg
xchg
xchg
xchg
mov
xchg
retf
sbb
xchg
xchg
xchg
lods
shl
push
mov
push
mov
outs
les
mov
inc
add
push
loopne
xchg
xchg
xchg
xchg
call
les
add
pop
loop
(bad)
xchg
loopne
push
xor
fst
sbb
loopne
push
xlat
push
add
inc
cwde
adc
add
cmp
pop
in
mov
inc
or
jno
sbb
sbb
rol
call
push
jne
ror
ss
mov
adc
clc
sahf
not
or
shl
push
add
sub
movs
jmp
adc
inc
and
mov
inc
ror
or
dec
push
pusha
xor
cmp
stos
sar
or
jno
or
or
inc
push
jbe
adc
fldcw
xchg
jno
rcr
sub
and
adc
fiadd
mov
mov
inc
mov
inc
or
jbe
cmps
mov
mov
mov
mov
dec
push
pop
pop
outs
sub
enter
add
push
dec
sbb
sbb
add
add
pushf
dec
add
ins
cwde
add
add
add
arpl
nop
cmp
adc
add
(bad)
mov
(bad)
or
(bad)
cmp
add
add
inc
sub
shr
add
or
inc
xchg
xor
dec
cld
(bad)
fwait
es
push
in
fimul
dec
outs
mov
fmul
xchg
das
inc
pcmpgtb
(bad)
out
add
cmp
dec
pusha
inc
clc
rcl
push
pushf
adc
fwait
or
add
xor
jmp
push
pusha
push
mov
mov
push
inc
pop
and
push
push
mov
pop
mov
adc
xor
enter
or
add
inc
loop
ss
inc
test
test
dec
inc
add
pop
imul
cmovns
lea
das
rol
scas
(bad)
sbb
jo
outs
popa
jb
mov
jne
pop
aas
push
rol
pop
pop
dec
push
pusha
test
xchg
or
xor
shl
mov
in
rcr
push
lahf
outs
push
scas
inc
fs
mov
aaa
push
dec
and
add
ret
push
sub
mov
push
cmp
movs
mov
and
fcmovbe
push
sbb
test
adc
or
test
fsubr
dec
test
int3
and
cmps
pop
stos
cdq
add
cmps
pusha
cmp
cmp
add
and
ret
jle
scas
xchg
push
xor
rol
mov
add
add
clc
push
sub
sub
or
add
mov
xor
in
or
cmp
xor
out
cdq
sub
push
clc
add
sub
mov
push
sub
sbb
int3
push
dec
cmp
add
push
sti
outs
retf
add
fs
inc
cmovnp
ins
addr16
sahf
outs
inc
pop
in
add
and
add
push
mov
dec
leave
movs
or
rcr
jno
sub
jp
or
sbb
pop
nop
fcomp
and
mov
fwait
movs
fiadd
mov
ds
push
jno
mov
rcr
test
nop
dec
cmp
mov
add
jge
pop
xor
enter
push
xchg
dec
xchg
xor
push
add
sbb
adc
mov
or
adc
or
je
and
adc
(bad)
xor
push
or
mov
inc
lahf
dec
stc
push
adc
xor
push
dec
sbb
adc
out
fs
inc
and
add
or
xchg
dec
add
xchg
pop
lods
inc
pusha
sbb
xchg
jg
sahf
dec
add
inc
adc
dec
pop
or
and
jp
and
push
or
inc
dec
movs
adc
inc
pop
mov
or
lods
or
mov
shl
dec
fwait
push
dec
xchg
lea
mov
and
cmp
and
mov
jb
pop
and
int3
sbb
(bad)
jb
lods
adc
inc
nop
pop
add
imul
call
inc
loope
shl
nop
push
add
aaa
xor
mov
fmul
add
pop
(bad)
xchg
sub
or
push
pushf
sbb
add
fnstcw
or
lods
push
jecxz
dec
sub
or
sub
mov
cmc
mov
pop
jmp
cmp
es
dec
add
pop
scas
das
add
mov
jo
sub
(bad)
(bad)
sbb
lds
add
or
mov
sub
stos
das
xor
jno
add
repnz
add
test
sub
jb
cmp
mov
cmp
jo
add
nop
add
aam
pop
cmp
fcomp
mov
or
xchg
aas
inc
xchg
dec
and
pushf
pop
add
dec
dec
outs
test
jo
add
cmp
xor
shl
or
sub
add
lds
jmp
mov
aam
nop
pop
mov
jmp
inc
inc
add
popf
pop
add
jecxz
push
push
add
in
add
add
or
add
mov
add
jmp
add
add
dec
dec
push
in
lea
add
add
call
repnz
jb
xor
ret
call
xor
xor
lahf
ret
cmp
loop
popf
sub
xor
xor
mov
xor
and
enter
lea
in
lahf
daa
dec
jl
enter
retf
mov
cmp
mov
mov
enter
inc
imul
xchg
imul
stc
sbb
fs
mov
ins
lods
in
fild
cmps
add
pop
data16
dec
out
or
sbb
rcl
dec
cwde
dec
or
movs
retf
sbb
push
fnstcw
cmp
push
popf
mov
push
mov
or
add
jle
push
addr16
push
cmp
push
or
add
and
adc
and
and
or
push
arpl
(bad)
daa
xlat
add
mov
aam
enter
mov
or
lahf
inc
or
and
adc
sub
pusha
add
adc
enter
scas
cmp
pop
scas
add
mov
add
push
add
inc
add
push
xlat
cmp
sub
cmp
js
pop
cmp
sub
dec
lods
mov
adc
push
fild
test
xor
std
cmp
out
pop
(bad)
inc
mov
and
pop
adc
xchg
cs
mov
call
adc
sub
hlt
(bad)
clc
daa
jno
adc
sub
into
test
fdiv
pop
js
jo
or
adc
jne
cmc
out
pop
adc
mov
inc
jg
pop
push
dec
out
adc
pop
adc
pop
push
imul
add
sbb
and
leave
push
sbb
or
sbb
push
pop
or
inc
leave
and
and
add
and
and
push
and
push
es
mov
cdq
sub
add
sub
sub
add
sub
stos
in
sub
test
das
dec
not
xor
xchg
inc
test
xor
or
add
xchg
push
adc
jo
adc
add
scas
lods
ss
pop
dec
and
and
mov
or
lahf
sub
pop
cwde
cwde
dec
cmp
jmp
sbb
cmp
stos
in
cmp
scas
aas
inc
cs
mov
sub
xchg
push
inc
xchg
inc
push
inc
push
dec
dec
add
dec
add
sbb
mov
fimul
xor
xchg
mov
loopne
lods
fs
je
fs
sti
and
mov
(bad)
mov
mov
cmp
mov
xor
mov
outs
cmp
xor
xchg
mov
xor
jb
dec
imul
shl
sbb
and
inc
sbb
sbb
neg
mov
fs
or
jb
fs
out
adc
fs
xchg
fs
push
mov
add
xor
mov
adc
das
sbb
xor
hlt
inc
leave
pop
xor
pushf
sub
add
adc
sub
sub
add
push
fs
retf
push
imul
pop
das
ins
int3
cmc
cmp
sbb
loope
scas
mov
mov
fiadd
add
sbb
dec
and
inc
sbb
push
sub
mov
cmp
test
inc
sub
push
or
sub
jecxz
add
inc
adc
xchg
test
jae
inc
lods
or
sub
mov
cs
push
pop
adc
cmps
adc
movs
ds
adc
push
push
aad
sbb
pcmpgtb
fcmovnu
pop
cdq
movs
dec
arpl
xor
jl
imul
add
add
popa
xchg
or
jmp
add
nop
lea
repz
adc
out
dec
mov
pop
adc
xchg
mov
or
add
inc
or
mov
dec
cmps
ds
sub
es
clc
push
push
inc
push
inc
mov
jecxz
and
cmps
and
jmp
or
adc
ja
xlat
pop
nop
loope
add
or
xor
adc
mov
and
je
push
mov
and
fdiv
dec
add
pop
xchg
add
inc
out
push
add
add
rcl
cmp
aam
mov
fcomp
adc
ins
sub
jecxz
cmp
inc
jo
add
call
sub
aas
add
fsub
push
push
ins
add
pop
inc
inc
or
cdq
add
or
call
repz
or
fld
push
mov
das
mov
and
cmp
sub
dec
sub
add
adc
add
(bad)
out
pop
xor
mov
push
jbe
sbb
jnp
jmp
(bad)
cmps
std
mov
bound
or
loopne
sbb
sbb
fcom
mov
daa
xchg
push
sbb
sbb
ret
xor
add
popf
aam
fs
jno
push
sbb
in
sbb
outs
cmp
push
test
ss
add
enter
ss
mov
test
adc
pop
movs
add
mov
clc
arpl
push
jno
ins
add
inc
mov
clc
cmps
nop
das
mov
or
sub
xchg
mov
add
inc
jnp
dec
call
add
outs
in
or
xchg
push
adc
xchg
and
shl
push
gs
jne
sub
ror
mov
test
fbld
jne
mov
cmp
and
mov
mov
aaa
mov
test
jae
push
shl
lods
add
jo
(bad)
or
arpl
rcr
push
add
cmp
inc
mov
ror
(bad)
xor
or
or
lds
xchg
cmp
mov
jnp
cmp
loope
add
shl
adc
adc
push
jecxz
in
push
test
cmp
sar
xchg
or
push
sub
sub
or
or
dec
xor
adc
cmp
jnp
jle
sar
or
mov
stc
push
hlt
cmp
hlt
scas
(bad)
shl
adc
shl
xchg
ror
ret
push
pop
leave
sub
ins
jo
scas
jl
mov
dec
aaa
inc
dec
xor
and
lds
pop
xchg
and
std
and
inc
adc
xchg
pop
xor
xchg
xchg
retf
xchg
aad
les
dec
xchg
xchg
xchg
xchg
jae
mov
retf
adc
ds
mov
stos
xchg
scas
add
jne
and
add
mov
pop
xor
mov
mov
fwait
inc
pushf
cmc
pop
fbstp
inc
inc
adc
xor
inc
xor
or
sti
scas
shr
adc
call
xor
daa
xchg
call
xor
xchg
mov
inc
fst
xlat
rcr
mov
ret
add
mov
xlat
push
sub
dec
jecxz
frstor
inc
push
mov
or
mov
pusha
xor
adc
xchg
call
scas
aam
scas
inc
xor
ja
push
inc
(bad)
shr
fisub
ss
adc
add
inc
add
jno
mov
xor
lahf
pop
into
ins
not
pop
cmp
inc
inc
jo
or
mov
add
movs
test
loopne
push
popa
sbb
inc
cmp
ret
cmp
pop
xchg
adc
or
add
add
add
in
add
(bad)
adc
add
rcl
or
pop
or
inc
sub
and
add
nop
or
sbb
dec
scas
xchg
sbb
sbb
or
or
sbb
add
add
push
jb
arpl
and
repnz
and
add
add
add
push
jb
add
or
add
add
push
jb
and
jmp
nop
stos
sub
cmp
sub
and
fist
and
add
add
mov
add
xor
xor
sub
pop
push
sub
push
add
add
cmp
sbb
enter
cmps
xchg
test
xor
push
and
aas
add
xchg
pop
inc
inc
add
add
inc
inc
add
jb
inc
add
push
xor
mov
or
dec
and
jb
cmp
enter
or
enter
enter
imul
enter
leave
add
and
mov
dec
outs
xchg
shl
and
jecxz
retf
and
and
js
shl
sahf
and
arpl
mov
or
mov
popf
push
mov
xor
xor
cdq
jb
xor
ret
out
into
sub
dec
jb
mov
jecxz
iret
xor
xor
xor
(bad)
enter
mov
sub
mov
aaa
fdiv
mov
or
push
outs
arpl
adc
or
push
jno
sub
jns
push
add
fdivr
rol
dec
aam
sahf
push
sub
enter
jmp
dec
pop
les
dec
add
aas
scas
pop
aad
inc
jo
pop
push
inc
enter
mov
clc
pushf
cs
inc
mov
in
in
inc
add
fnsave
and
mov
and
push
fcom
cdq
push
and
push
aam
test
push
not
adc
mov
inc
lahf
std
call
dec
sub
pusha
inc
cmp
adc
inc
es
sub
js
prefetch
cmp
jo
fistp
aam
movs
aaa
nop
xor
addr16
and
jmp
fs
shr
jb
das
fild
cld
aam
(bad)
pop
sub
rcr
inc
aam
loope
(bad)
popa
mov
sbb
push
mov
jb
or
adc
add
inc
add
movs
add
dec
pusha
rcr
push
imul
adc
cmc
or
fstp
clc
rol
cmp
adc
dec
sbb
add
jno
popa
movs
adc
sbb
enter
sbb
sbb
sbb
and
or
and
and
add
add
and
leave
inc
adc
and
and
ret
sbb
sub
sub
xor
sbb
call
inc
lods
add
ret
retf
sub
inc
dec
jae
xchg
or
pop
sub
cs
xor
xchg
test
xor
sbb
xor
xchg
test
sbb
sbb
cmp
add
add
cmp
add
add
ds
(bad)
sbb
and
cmp
addr16
or
jns
ret
in
int3
push
je
xlat
iret
or
mov
enter
and
enter
xchg
inc
loop
(bad)
or
and
shl
fimul
inc
push
mov
and
xor
xor
popa
or
cmp
xor
cmc
pop
fmul
enter
or
xchg
mov
fisttp
leave
loopne
inc
cmp
add
loopne
fbstp
mov
push
sub
inc
test
or
push
pop
pop
push
mov
jo
(bad)
pop
add
xchg
inc
mov
sub
rol
dec
pop
sub
push
or
and
push
loopne
call
and
push
ins
inc
fadd
and
retf
push
je
cmp
inc
inc
jo
in
mov
and
inc
mov
and
pop
std
mov
mov
or
mov
stos
adc
pop
mov
sbb
add
scas
add
add
pop
and
nop
mov
add
or
add
add
adc
and
leave
sbb
add
adc
add
push
and
sbb
and
xor
mov
add
sub
sub
pop
add
leave
add
xchg
pop
and
xor
leave
push
xor
inc
and
cmp
and
and
cmp
and
and
out
aad
pop
or
dec
outs
xchg
mov
cmp
xor
cmc
sbb
enter
retf
or
in
enter
jecxz
enter
pop
test
add
mov
dec
ins
and
and
mov
xchg
and
in
push
and
int3
push
mov
dec
mov
xchg
xchg
fnstenv
cdq
or
test
mov
sbb
cld
add
sbb
jle
inc
pop
sub
leave
dec
inc
or
pop
pop
outs
test
and
adc
ins
or
or
or
xor
push
xchg
add
into
push
cld
jp
call
mov
ret
inc
lods
xor
retf
js
arpl
push
mov
add
cmp
xchg
jmp
xlat
in
adc
add
push
xor
push
push
cmp
daa
inc
dec
sbb
xor
addr16
push
loopne
mov
ds
adc
ret
add
test
cdq
or
push
adc
pushf
inc
dec
imul
test
mov
inc
add
(bad)
dec
pushf
shl
iret
add
push
dec
inc
popa
js
clc
pop
shr
loopne
dec
push
ins
popa
ins
ins
(bad)
rol
dec
popa
jb
gs
add
cwde
mov
call
mov
mov
push
in
jl
adc
aaa
xchg
pop
ins
fsubr
pop
(bad)
shr
int3
push
sbb
push
or
or
xchg
lods
in
pop
push
sub
adc
dec
sbb
inc
clc
or
test
ss
or
bound
or
cmp
or
scas
add
imul
xchg
fld
mov
push
xor
adc
push
inc
cs
mov
adc
adc
push
pop
hlt
dec
inc
mov
push
(bad)
mov
movs
xchg
jge
xchg
enter
dec
sbb
fidiv
lods
lahf
outs
(bad)
jl
mov
sub
retf
jmp
imul
(bad)
dec
dec
test
bound
xchg
or
mov
or
push
sbb
mov
in
(bad)
or
and
xchg
add
inc
jo
fild
and
inc
and
mov
fcos
nop
sub
scas
or
(bad)
es
jmp
and
add
sub
inc
and
xorps
add
xor
and
leave
push
das
xor
xchg
pop
xor
pop
xor
enter
test
inc
xor
loope
inc
cs
mov
adc
jno
inc
push
cmp
add
in
jl
into
mov
fs
sub
icebp
adc
ss
fs
mov
xor
push
jns
out
dec
sub
cmp
xor
movs
enter
xor
xor
push
js
jb
xor
(bad)
jmp
xor
xor
cdq
mov
loop
repnz
enter
loope
mov
xchg
dec
hlt
ja
test
mov
mov
test
dec
pop
mov
loopne
jno
int3
push
iret
push
xor
adc
arpl
mov
jne
outs
pop
cld
clc
dec
pop
int3
add
rep
cli
mov
outs
imul
or
xor
mov
ds
test
xor
cmps
sbb
mov
and
and
cdq
cs
dec
mov
dec
pop
pop
adc
cmps
add
aas
xor
hlt
gs
xchg
add
ins
ins
dec
or
sub
(bad)
js
pop
rcl
mov
inc
(bad)
jl
or
mov
pop
and
or
or
push
ss
stc
fisub
cld
push
xchg
loope
adc
xchg
cmp
call
sub
push
jge
push
hlt
movs
call
mov
dec
cmps
mov
les
sub
fs
add
sub
dec
test
or
(bad)
push
ins
imul
push
jo
sub
dec
mov
dec
pop
add
call
push
add
push
loop
inc
loope
or
pop
lods
test
test
add
add
std
cmp
add
setge
aam
in
cld
add
popa
repz
sbb
arpl
push
sub
neg
jne
imul
loopne
clc
push
mov
xor
push
nop
rcr
je
push
(bad)
repz
stc
cmp
inc
inc
push
inc
popf
cld
clc
ret
adc
cmp
rol
jno
ss
add
cmc
add
hlt
push
cdq
lods
fwait
dec
add
mov
stc
xlat
sbb
pop
mov
ret
mov
and
(bad)
pop
xchg
jbe
call
xchg
cmp
mov
xlat
cmp
push
in
pop
fyl2xp1
outs
or
adc
push
repnz
pop
sub
push
adc
lahf
pop
les
rcr
imul
cmp
cs
cli
push
push
les
pusha
daa
sbb
cwde
push
ins
mov
sbb
test
int
sti
es
ds
mov
scas
mov
push
pop
or
adc
movs
rcr
jle
ret
aad
popa
sti
pop
fsub
in
sti
popf
pop
mov
push
jo
push
xor
sti
loopne
js
out
mov
xor
push
lahf
xchg
inc
inc
push
pop
aam
in
aam
add
pop
pusha
ja
js
inc
or
ss
or
popa
add
xor
xchg
sub
mov
adc
xchg
add
add
add
or
jne
jbe
push
lock
loopne
mul
pusha
es
pushf
dec
sub
adc
xor
ins
cmp
pop
fbld
sti
mov
adc
aaa
inc
(bad)
out
mov
push
into
hlt
aaa
cmp
jo
jns
jnp
add
out
dec
adc
mov
movs
push
rol
mov
add
(bad)
jmp
sahf
pop
in
popa
loopne
out
jl
push
ins
aaa
icebp
fidivr
xchg
or
cmp
adc
pop
leave
arpl
clc
ja
(bad)
push
jmp
dec
aaa
pop
mov
xchg
retf
sar
daa
iret
jae
dec
call
or
push
xor
and
movs
std
ffreep
sub
mov
or
sub
adc
test
push
dec
imul
adc
sub
clc
dec
sbb
es
mov
push
mov
jge
mov
pop
mov
mov
push
ror
dec
add
push
push
(bad)
pop
adc
cwde
inc
mov
push
fidivr
mov
pop
mov
or
lahf
cmp
mov
outs
pushf
xchg
mov
xchg
push
cld
pushf
jle
xchg
stc
xor
xlat
push
pusha
push
mov
xchg
sbb
xchg
mov
scas
aam
xor
xchg
rcr
inc
mov
pushf
push
ror
(bad)
adc
(bad)
ds
movlps
and
and
inc
or
xchg
jae
das
push
pop
and
push
test
xor
add
xchg
mov
rcl
cmp
push
sbb
mov
sar
imul
push
inc
mov
add
outs
pop
pop
mov
mov
adc
xlat
push
or
push
push
mov
sbb
add
pop
or
cmp
int3
mov
add
hlt
push
pop
clc
mov
cmp
dec
and
mov
popf
cmp
test
adc
adc
adc
push
int3
push
or
mov
in
or
mov
push
inc
or
adc
and
in
rcl
cwde
xor
rol
loopne
aas
or
xchg
pop
ficomp
out
mov
xchg
mov
adc
movs
lea
pop
mov
es
add
adc
mov
aam
gs
add
pop
adc
dec
cmp
or
add
cmps
push
scas
fld
outs
jo
push
sti
push
or
mov
rol
mov
mov
test
and
sbb
jbe
jmp
js
xchg
sub
xchg
or
pop
(bad)
aam
push
cmp
fld
in
stos
push
es
bound
add
jne
loop
int3
add
lods
dec
jle
ins
or
add
jne
inc
sbb
and
sbb
jmp
into
out
xor
add
add
xchg
out
push
mov
retf
out
inc
mov
or
fist
imul
xor
stos
jae
mov
mov
loopne
sub
ins
cmp
out
pusha
loope
or
add
or
or
push
pop
and
add
movs
rol
icebp
sub
xchg
popa
jge
sub
cmp
mov
xor
cmp
cmp
setg
push
mov
pop
nop
add
or
jne
arpl
test
inc
cmp
add
mov
popa
popa
aam
sbb
sbb
mov
pop
adc
sar
add
or
push
lds
mov
es
test
cld
sahf
cmc
sti
or
es
mul
shr
in
mov
nop
stos
std
push
push
adc
xchg
and
mov
or
dec
ss
cmp
and
imul
add
(bad)
cmps
add
inc
mov
imul
retf
fsubr
cmc
call
pop
lods
and
or
add
push
dec
push
aaa
sbb
dec
mov
sub
movs
mov
mov
push
push
stc
loop
out
dec
clc
inc
and
add
out
loopne
pop
or
popa
adc
retf
rol
stc
adc
outs
add
ret
cwde
cld
aad
outs
jne
lea
mov
cmp
neg
dec
or
stos
shl
movzx
inc
and
and
fnstsw
je
push
inc
sbb
xor
adc
mov
pop
iret
mov
js
push
xchg
pop
add
shl
ins
sub
daa
in
sbb
shl
push
cmp
cli
fcmove
xchg
add
daa
push
not
aas
(bad)
sbb
movs
mov
push
movs
xchg
stos
addr16
hlt
cmp
jp
(bad)
inc
and
and
imul
pop
adc
jns
aas
or
jle
leave
inc
add
leave
fwait
add
jne
xchg
sbb
lds
out
iret
and
loop
out
mov
xlat
cmp
sbb
in
adc
loopne
enter
inc
xor
pop
pop
or
add
lahf
add
dec
dec
popf
mov
sbb
mov
idiv
aas
push
mov
movs
lea
lea
mov
sub
cmp
shufps
inc
(bad)
jmp
xlat
xchg
mov
and
sbb
aas
enter
enter
inc
into
das
into
das
shr
aas
movs
loope
adc
mov
xchg
mov
fist
sbb
adc
ds
push
dec
dec
fimul
mov
mov
fdivr
xchg
(bad)
push
sqrtps
(bad)
lea
pop
test
inc
or
aaa
jbe
cmp
and
adc
mov
adc
inc
cmp
mov
dec
mov
adc
loop
sub
push
cmp
mov
push
sbb
or
cmp
pop
movs
push
add
add
inc
mov
add
adc
ins
inc
leave
adc
scas
mov
movs
or
pop
icebp
adc
repz
mov
in
(bad)
mov
sbb
xchg
mov
sub
mov
je
in
or
scas
sbb
mov
lods
mov
loope
loop
nop
(bad)
push
sar
fwait
mov
hlt
or
sbb
sti
popf
push
or
pop
mov
pushf
adc
loope
movs
fisub
mov
mov
fistp
adc
add
mov
mov
movs
xlat
dec
imul
adc
dec
xchg
pop
pop
mov
shl
pop
hlt
imul
adc
mov
leave
push
popa
jbe
std
fimul
mov
dec
mov
in
test
sub
cmps
cmp
in
inc
popf
jnp
mov
(bad)
mov
xchg
outs
add
and
psubusb
popf
test
and
adc
cmp
and
not
hlt
jbe
sbb
mov
bswap
in
arpl
test
pop
inc
jo
sbb
xchg
mov
sbb
push
sbb
lods
inc
loopne
cmps
xor
inc
xchg
jo
push
and
cmps
imul
std
xor
sub
enter
adc
add
fwait
test
inc
mov
(bad)
push
test
loopne
add
push
xor
aam
sub
lea
ins
or
imul
js
pop
mov
xchg
enter
mov
test
and
jb
mov
retf
lock
mov
and
pop
jmp
arpl
stc
stos
and
sub
iret
cmp
mov
cmp
pop
jmp
js
xor
iret
dec
xlat
adc
xchg
mov
mov
in
dec
adc
clc
xor
(bad)
xor
(bad)
push
xchg
iret
inc
mov
outs
icebp
and
iret
jmp
cmp
sahf
sub
push
mov
(bad)
pusha
and
icebp
sub
add
jno
mov
in
inc
ret
push
or
mov
lods
movs
retf
xchg
lahf
xchg
mov
les
fsubr
adc
(bad)
inc
sbb
pop
das
rol
xor
dec
pop
mov
pop
sti
lea
push
scas
sahf
rcr
push
adc
in
lea
cmc
xor
loopne
ja
adc
es
jmp
jmp
or
dec
add
xchg
adc
push
call
pop
add
mov
cld
add
pop
adc
cmp
lock
les
mov
and
pop
clc
jl
dec
adc
sbb
cmp
add
mov
dec
mov
test
ins
pusha
stos
inc
push
clc
sub
sub
inc
mov
rol
or
movs
sbb
pop
cld
adc
pop
cld
push
lea
fistp
retf
add
mov
xchg
cmp
adc
scas
cmp
xor
add
adc
(bad)
add
xor
dec
adc
ds
or
es
je
mov
push
loopne
call
hlt
hlt
daa
sub
inc
shl
sub
cdq
outs
sbb
and
jo
or
adc
jge
js
or
mov
sbb
jb
daa
rcl
pusha
clc
fiadd
data16
mov
data16
sbb
fwait
xchg
ret
aaa
jbe
cmp
jg
in
add
(bad)
or
push
dec
inc
or
sbb
push
sar
loopne
dec
or
xor
sub
lahf
retf
and
lock
aaa
lock
in
jmp
test
in
sbb
dec
sti
and
pop
scas
sub
add
leave
add
pop
(bad)
adc
in
aam
mov
dec
jne
and
mov
(bad)
inc
push
lods
add
dec
bound
jbe
aaa
icebp
mov
and
xor
cmp
and
mov
bound
mov
add
xchg
dec
lock
jl
ret
add
or
lock
xor
push
push
adc
adc
push
add
adc
mov
(bad)
std
push
sub
dec
aas
lock
daa
rol
sub
push
sbb
xlat
adc
mov
sbb
in
test
pop
add
inc
ins
rol
add
mov
xor
add
pop
push
es
pop
inc
inc
inc
dec
aaa
clc
xchg
mov
pop
cmp
xor
add
fimul
jne
daa
add
gs
mov
aam
ins
jecxz
pop
dec
add
add
cmp
sbb
stos
inc
test
sub
or
jmp
xor
push
ret
mov
sar
(bad)
call
inc
inc
or
call
imul
jg
dec
daa
mov
pop
jl
dec
fwait
add
data16
pop
jle
add
xchg
or
xlat
inc
mov
mov
push
sbb
sbb
or
(bad)
lea
add
test
js
clc
pusha
mov
mov
idiv
ficom
or
sub
add
pop
int
xor
pushf
outs
mov
inc
enter
mov
mov
mov
inc
popf
sbb
xor
gs
or
add
outs
jg
or
ret
ret
push
movs
in
push
xor
or
fcom
sar
dec
inc
pop
je
pop
or
cmp
aaa
outs
cld
mov
or
movs
neg
das
mov
clc
mov
lea
push
ins
fwait
adc
ror
xchg
mov
stc
test
adc
fnsave
loope
xchg
or
or
lahf
adc
inc
cld
inc
adc
and
mov
(bad)
cld
sub
mov
or
xor
ja
sbb
es
sbb
fistp
in
shr
in
sbb
push
mov
dec
inc
(bad)
dec
or
sbb
(bad)
jno
ss
aas
pop
pop
daa
and
or
sbb
add
fadd
xor
retf
in
rol
mov
pop
add
lea
mov
push
daa
adc
mov
add
adc
inc
sbb
sbb
(bad)
push
sar
mov
mov
xor
sub
ss
daa
out
add
shr
lea
jae
cmp
pop
mov
mov
loopne
pop
fisttp
mov
dec
cmp
into
fsubr
add
fild
mov
add
sti
add
cli
ret
add
mov
add
jae
lods
sbb
push
inc
add
scas
adc
shl
xchg
ins
xchg
nop
or
push
push
je
sub
shl
out
lods
mov
jae
imul
in
adc
sahf
in
push
fimul
sahf
ins
dec
imul
and
into
call
mov
add
dec
je
pop
and
inc
mov
in
fimul
fs
enter
test
mov
mov
or
hlt
add
inc
push
mov
cmp
cmp
push
push
arpl
test
pop
add
pusha
jo
pop
mov
xchg
sbb
(bad)
fidivr
test
sbb
jne
shr
ror
jne
out
dec
jecxz
add
or
inc
outs
jmp
popa
retf
sbb
js
mov
jp
add
lods
scas
push
push
mov
and
scas
xchg
mov
xchg
shl
daa
test
adc
mov
jg
repnz
pop
dec
sbb
push
test
add
and
mov
nop
in
xchg
and
jae
jne
push
sbb
cld
sub
(bad)
sub
adc
movs
add
xchg
pop
inc
nop
xchg
(bad)
inc
mov
add
bound
je
sbb
sahf
ror
or
cwde
test
mov
sub
push
dec
adc
sbb
and
sub
mov
sub
(bad)
mov
mov
or
pop
mov
cmp
inc
cmp
imul
or
push
mov
adc
cs
xchg
add
mov
xor
pop
or
cmp
js
add
sub
js
add
jl
dec
xchg
mov
retf
inc
sub
lock
sbb
pop
push
dec
push
push
sbb
add
xchg
rcl
add
test
push
dec
jne
test
add
add
mov
(bad)
aam
mov
push
push
push
ja
push
inc
cmp
les
and
xor
mov
and
inc
aaa
rol
push
mov
or
pop
sub
mov
je
daa
scas
pusha
add
test
dec
pusha
test
dec
cmp
inc
push
jl
pop
or
or
jns
cmp
(bad)
pop
pop
dec
pop
ins
xchg
push
push
jno
cmp
xor
retf
inc
push
int3
stc
and
mov
arpl
bswap
inc
int
rol
rcr
mov
pop
fsubr
fwait
sub
pop
out
or
fsub
or
inc
cmp
mov
push
dec
sub
add
mov
adc
iret
add
cmp
out
and
push
sub
push
fs
xor
sbb
sti
lea
xlat
cmp
outs
add
das
jo
xchg
push
imul
mov
dec
cld
movs
add
outs
test
test
addr16
or
add
out
sbb
and
add
dec
pop
lods
dec
test
or
sub
mov
js
and
fild
sub
xor
rol
dec
push
and
xor
sbb
lods
aas
loop
or
loopne
mov
adc
pop
pop
int3
in
add
js
sub
and
or
rcr
js
bound
clc
jne
test
mov
and
xor
shl
or
dec
adc
or
leave
mov
popf
push
add
add
test
or
test
lods
jb
sbb
xor
push
sbb
mov
rol
mov
mov
adc
add
inc
mov
pop
add
add
mov
cmp
ja
or
lods
xchg
rol
pop
cld
xor
sbb
cmp
xor
test
and
es
rol
sub
add
clc
pushf
sbb
test
inc
loop
jnp
je
shl
push
cmp
mov
push
or
je
rcl
xor
lods
repnz
add
js
or
mul
jecxz
sub
ret
add
mov
push
push
mov
push
retf
push
addr16
xor
push
in
sbb
sub
sbb
pushf
daa
dec
mov
scas
sub
movs
scas
jg
add
fist
rcr
add
mov
addr16
cld
sub
push
and
(bad)
dec
pop
lods
lods
(bad)
mov
loopne
lods
daa
lods
das
pop
loop
mov
cmp
xchg
mov
fadd
repz
ss
xchg
push
sti
mov
sub
(bad)
cmp
sbb
jne
pop
add
cmp
cdq
mov
cld
push
icebp
jno
es
sub
test
jge
cmp
ja
push
add
xor
in
mov
in
(bad)
mov
and
dec
and
call
aaa
sub
arpl
adc
adc
sar
cmps
adc
adc
cld
adc
pop
mov
add
fisttp
add
pop
xor
push
mov
sti
popf
or
rol
mov
push
jno
(bad)
lahf
mov
jg
test
sub
or
dec
or
(bad)
push
cmps
cmp
pop
sub
dec
std
call
je
jmp
jg
xor
ror
jmp
leave
aam
mov
add
lahf
mov
xor
mov
pslld
mov
popa
inc
mov
xor
mov
xor
sbb
push
xchg
xchg
mov
pop
das
xor
out
adc
pop
aad
inc
fidivr
sub
mov
jbe
add
and
jle
jns
cmp
mov
and
shl
inc
push
imul
or
es
dec
cmc
push
inc
jge
aas
or
or
add
dec
sbb
lahf
test
push
dec
je
add
fld
cmp
je
ins
jg
or
jbe
sbb
mov
sbb
push
adc
rcr
add
je
inc
add
fstp
xchg
jl
hlt
and
jg
cmp
or
mov
inc
cmp
stos
stos
push
cld
or
movs
fisub
lahf
inc
jb
clc
or
dec
mov
lods
and
dec
scas
sbb
cmp
sub
jl
xchg
test
cmp
adc
dec
mov
sbb
cmp
and
test
adc
aad
or
add
sbb
(bad)
pop
cmp
pop
pop
lods
les
mov
add
lahf
(bad)
mov
sbb
jg
jne
leave
loopne
dec
addr16
sahf
jne
pop
or
xor
shl
mov
and
rol
adc
aam
adc
jp
jne
out
ret
adc
enter
ja
loopne
push
and
mov
xchg
fdiv
dec
dec
ss
mov
lea
enter
or
mov
push
add
je
cmp
ret
and
mov
sbb
mov
dec
xchg
and
sub
jge
xor
xor
jmp
cmp
movs
ins
xor
inc
cmp
push
imul
in
xchg
jo
and
std
mov
inc
mov
(bad)
cmp
(bad)
xchg
or
mov
nop
push
cmc
(bad)
xor
push
or
fs
jo
xchg
pop
push
test
shl
xchg
sbb
xchg
or
add
inc
sub
add
xchg
enter
nop
sbb
pop
ins
mov
nop
mov
nop
aaa
lods
pop
clc
and
sbb
sti
js
push
(bad)
push
xchg
push
jl
mov
mov
xor
cdq
ins
mov
clc
push
dec
popf
movs
xor
or
mov
adc
jmp
mov
jmp
pop
das
(bad)
mov
mov
sub
or
cmp
jnp
xchg
cmps
mov
dec
xchg
and
adc
(bad)
das
inc
lahf
push
clc
pop
lds
or
inc
jg
mov
cmp
mov
mov
nop
nop
pop
adc
pxor
mov
sub
jo
adc
imul
sbb
mov
push
xor
mov
adc
dec
ret
jae
rcl
or
push
or
xchg
xchg
add
jbe
push
pushf
popa
sub
push
mov
ret
jne
add
(bad)
push
pop
outs
scas
nop
add
jecxz
inc
mov
ret
xchg
sub
ret
push
inc
inc
je
in
inc
ins
push
mov
stos
jmp
ret
fcom
xor
iret
mov
fadd
jg
adc
(bad)
or
mov
lea
push
push
jmp
cmp
test
cmp
add
pop
out
mov
les
call
add
dec
mov
or
dec
adc
pop
loopne
aam
push
cmp
mov
inc
pop
int
cmp
jbe
cmp
jecxz
mov
xor
shr
sub
cmps
adc
mov
pop
mov
lods
inc
lods
sbb
xchg
cmp
pop
and
inc
cs
sbb
and
cwde
xor
es
dec
dec
inc
xchg
dec
popa
loop
(bad)
sub
dec
add
or
dec
test
cld
rol
push
xchg
movs
std
add
fwait
cmps
mov
xchg
stos
cmps
mov
popf
jne
mov
or
mov
mov
nop
call
mov
int
dec
in
inc
dec
mov
push
jle
cmp
adc
push
push
xor
test
lods
pop
cwde
outs
or
aas
jg
hlt
add
sysexit
adc
das
mov
repz
mov
cdq
mov
repz
add
pop
les
inc
jne
pop
mov
sbb
fdiv
dec
shl
sbb
jmp
adc
shl
dec
xor
call
mov
sbb
daa
sbb
add
and
add
add
inc
inc
inc
pop
mov
shr
pop
and
or
cwde
xlat
lea
jmp
inc
jnp
pop
adc
xchg
cmps
and
mov
test
aaa
and
sub
push
sbb
outs
jo
stos
push
adc
ror
push
or
pusha
and
cmp
(bad)
les
xchg
int
or
cmp
fwait
mov
aaa
sbb
add
and
add
or
add
sbb
xchg
sub
mov
nop
add
cs
sub
add
add
cld
cmp
in
mov
mov
imul
test
ins
rol
sbb
sub
inc
movs
jp
push
in
nop
js
dec
and
adc
(bad)
scas
lahf
or
mov
jmp
shr
in
pop
pop
popa
xor
pop
lahf
les
inc
scas
xor
push
call
daa
popa
int
add
pop
cmp
mov
int3
inc
call
lock
cmp
inc
call
jns
ds
or
adc
cmp
hlt
rcl
(bad)
gs
add
test
adc
call
add
or
(bad)
daa
scas
pop
cdq
stos
xor
idiv
or
xor
xlat
fcmovu
xchg
mov
dec
or
push
add
pop
push
push
sub
jbe
int3
enter
add
mov
int3
or
loope
or
adc
adc
mov
test
push
int3
pop
add
push
add
adc
cs
nop
rcr
mov
leave
pop
xchg
(bad)
fbld
mov
xor
jae
lds
mov
sbb
jne
add
xchg
out
(bad)
aaa
mov
xchg
pushf
inc
pop
std
push
cmp
loope
sub
(bad)
jne
push
push
push
push
or
jne
gs
adc
hlt
daa
je
sbb
mov
aas
lock
jmp
and
push
fs
outs
nop
add
leave
jo
xor
adc
cmps
cmp
pop
ror
pop
xchg
add
les
jns
cmp
cmp
dec
and
test
das
or
sub
cmp
(bad)
rol
ffree
xchg
dec
fbld
scas
call
ds
mov
push
ss
daa
mov
in
push
les
and
xor
dec
pop
pop
pop
je
push
push
les
and
xchg
sbb
cmp
aas
sub
je
dec
or
sbb
test
ret
pop
movs
and
adc
jno
adc
mov
inc
mov
push
or
push
and
or
and
les
mov
mov
daa
jl
in
or
or
add
neg
xor
and
ror
add
in
jo
jge
test
xor
fwait
jmp
push
jo
xchg
call
pushf
mov
mov
pop
or
push
sgdtd
sbb
loopne
and
or
mov
arpl
adc
sbb
(bad)
fld
sbb
sub
xchg
dec
sbb
std
jnp
pusha
pop
and
les
xlat
xor
xchg
test
adc
sub
add
mov
addr16
mov
cmp
adc
xor
mov
out
dec
or
inc
push
cmp
mov
pop
xor
xor
inc
daa
sub
test
movs
inc
gs
jns
inc
inc
push
inc
pop
inc
add
jl
adc
ds
aaa
ror
icebp
sbb
push
add
mov
mov
xor
add
push
adc
daa
add
and
xor
retf
fucomip
sti
inc
dec
or
jl
cdq
shl
xchg
hlt
adc
ficomp
dec
mov
mov
add
or
adc
mov
stos
jbe
lods
je
pop
and
or
rcl
xchg
adc
daa
into
dec
cmp
outs
pop
adc
cmp
punpckhwd
aad
fwait
loopne
or
jae
push
repnz
dec
xor
push
sbb
test
fild
icebp
test
pop
pop
fisttp
xchg
lods
out
inc
inc
nop
stos
stos
gs
or
inc
stos
mov
imul
fs
mov
mov
xchg
(bad)
adc
push
jb
add
cmps
adc
xchg
ret
mov
sbb
loope
leave
pop
ret
xchg
les
add
(bad)
push
mov
pop
push
dec
mov
mov
jl
jo
mov
xlat
ins
add
xchg
push
push
gs
push
adc
add
iret
retf
loop
dec
out
pop
prefetcht1
pop
fisub
daa
stos
stos
and
pop
push
or
jmp
or
jg
cwde
push
pop
mov
ja
stc
push
sbb
out
cmp
inc
dec
add
push
es
aam
push
aad
sbb
jbe
jg
and
ins
add
push
mov
push
push
xchg
mov
cmp
js
cs
imul
call
fisub
cmp
push
push
in
movs
push
xor
fs
mov
movs
add
add
push
cmp
adc
popf
sbb
sbb
adc
sub
adc
js
shl
imul
test
sub
cmp
jl
mov
scas
and
repz
clc
mov
bswap
clc
cmp
jge
mov
cmp
jge
out
and
inc
(bad)
fwait
ins
cmp
test
mov
ret
or
ins
jns
adc
mov
inc
hlt
mov
mov
lods
mov
sbb
push
test
or
test
inc
jb
push
stos
mov
inc
leave
mov
fistp
dec
scas
pop
xchg
cmp
inc
lods
dec
dec
pop
xor
mov
cmp
gs
push
js
cmove
ins
jnp
mov
add
xor
xchg
mov
xchg
mov
or
jg
mov
and
and
sub
or
(bad)
retf
mov
add
sub
cs
dec
arpl
movs
aaa
pushf
xor
retf
adc
push
div
stc
aas
mov
dec
sub
ret
dec
mov
out
lea
or
cmp
jns
sahf
pop
imul
scas
sub
sub
cmp
and
fisubr
xchg
dec
jmp
sbb
fisub
inc
dec
out
inc
push
ret
stc
push
or
pop
fnsave
mov
mov
add
mov
sti
push
mov
jnp
sub
push
jle
retf
adc
push
cmp
cmc
cmp
adc
cmps
cmp
mov
cmp
ins
ror
or
add
fimul
pop
jo
mov
add
pcmpgtd
mov
push
int
dec
shl
and
mov
dec
test
mov
add
or
aas
jo
add
jno
adc
xor
mov
les
sbb
fisub
xor
jl
jbe
xlat
push
push
jg
dec
push
cmp
and
test
or
jmp
and
(bad)
mov
push
dec
ret
and
je
ds
add
add
sti
cdq
pop
push
inc
sub
inc
leave
mov
cmp
ror
adc
add
mov
push
hlt
out
dec
mov
add
push
dec
sbb
fsub
sub
push
movs
jbe
pusha
cs
push
xchg
in
pushf
mov
xor
pop
lea
add
add
jp
pop
loope
mov
addr16
ins
jmp
(bad)
fldcw
jge
mov
push
sub
push
push
dec
push
push
scas
or
mov
call
sub
push
add
test
cmps
xor
pop
inc
pop
or
add
or
xor
(bad)
pusha
aam
push
lahf
mov
push
push
pop
push
push
retf
xchg
loopne
dec
sub
iret
ss
push
add
mov
push
xor
jmp
push
and
aaa
mov
daa
xchg
int3
jle
jnp
xchg
dec
dec
push
test
outs
xchg
les
pop
addr16
inc
or
ret
daa
xor
pop
bnd
out
nop
mov
inc
nop
das
mov
adc
out
sar
ror
ds
fwait
sub
sub
mov
add
xchg
or
push
ret
outs
or
push
repz
dec
and
(bad)
xor
adc
adc
pop
cmp
fst
fs
sti
aas
cmp
cmp
inc
imul
cmp
je
jb
fisubr
ds
xchg
rcpps
cmp
inc
or
or
inc
inc
push
(bad)
(bad)
sti
inc
xor
fild
jno
fisttp
shl
and
add
lods
or
inc
inc
(bad)
sbb
bound
dec
pusha
clc
pop
rcl
loop
push
out
push
aas
or
out
push
or
mov
in
fs
mov
cwde
pop
mov
(bad)
xor
test
xor
sub
into
jo
outs
sbb
jnp
or
or
cmp
mov
pop
test
jl
pushf
and
push
mov
mov
cli
fisttp
jmp
stc
mov
inc
add
add
inc
or
pushf
in
gs
test
inc
in
dec
xor
(bad)
rcl
mov
cs
out
lds
popa
fiadd
ret
mov
ret
sbb
int
(bad)
and
dec
sub
jo
pusha
mov
daa
dec
out
jge
bound
and
mov
and
sub
pop
lods
inc
push
test
mov
rcl
js
(bad)
lock
inc
lods
add
leave
cmps
cld
mov
xchg
inc
dec
sub
jmp
or
and
and
sbb
dec
add
or
aam
les
ret
jle
mov
cmp
jno
jns
inc
lea
mov
or
pop
sub
xchg
sub
push
cmp
jle
das
dec
rcl
adc
in
repnz
das
out
xchg
sbb
xchg
mov
ror
add
in
movs
ss
xor
out
mov
nop
sbb
xchg
out
jmp
fist
sub
and
movs
out
out
jne
and
ins
test
rol
out
add
sub
or
sbb
push
hlt
adc
aam
sub
leave
aam
sub
cs
cmp
add
cmp
ins
add
or
jg
add
xchg
dec
dec
dec
mov
and
xlat
mov
std
dec
adc
cmp
jge
daa
add
fisub
jmp
sahf
dec
nop
add
ror
sub
dec
cld
adc
add
adc
mov
pusha
inc
jecxz
hlt
aaa
xor
add
aam
(bad)
out
mov
push
xor
xchg
inc
xor
mov
mov
xchg
fcom
push
adc
xor
scas
sub
dec
xor
loopne
enter
add
xor
inc
mov
adc
sbb
or
add
pop
(bad)
push
ret
adc
mov
sti
and
sub
mov
mov
je
inc
cmp
inc
lods
sbb
push
bound
hlt
add
push
aas
pop
sbb
rol
into
movs
(bad)
cmp
dec
xor
pusha
daa
(bad)
mov
adc
in
push
xchg
pushf
mov
clc
pop
inc
xchg
cs
ins
aaa
push
xchg
outs
cmp
repz
push
push
inc
dec
pop
inc
cmp
pop
push
lea
mov
push
xor
addr16
push
loopne
mov
mov
cmp
and
xchg
lods
sub
das
jle
pop
loopne
add
fdiv
pusha
cmp
inc
dec
pusha
(bad)
push
inc
inc
fild
movs
idiv
lock
fnstenv
jp
inc
xor
sub
push
dec
jae
and
push
mov
sub
jmp
inc
add
mov
daa
mov
int3
mov
or
pop
mov
inc
add
inc
sub
lahf
push
arpl
add
lods
cmc
rcl
add
pusha
dec
sub
je
jmp
inc
mov
xlat
out
mov
sbb
push
stos
mov
mov
inc
out
xor
add
test
dec
inc
(bad)
aad
test
push
out
ss
retf
mov
mov
cmp
out
add
sbb
pusha
ins
xchg
fisttp
test
lods
hlt
loope
sbb
popa
xor
in
mov
xchg
xchg
js
dec
dec
mov
iret
sub
out
mov
mov
mov
sub
adc
xchg
rol
(bad)
imul
(bad)
loope
pop
shr
jnp
retf
stos
and
pmulhuw
xor
(bad)
xor
push
xor
ss
data16
xor
mov
add
test
and
loope
push
mov
loopne
aam
test
test
movsx
mov
jg
ret
in
stos
jmp
adc
push
pop
pop
sbb
or
loope
int3
lods
jge
pop
xor
leave
mov
push
and
sub
cmp
or
add
sbb
jbe
pop
dec
dec
retf
or
dec
push
in
jmp
pop
dec
adc
adc
xchg
or
push
pop
fwait
or
or
sbb
ret
mov
les
add
je
out
sbb
or
sti
push
ret
js
mov
aaa
xor
add
and
inc
jecxz
fnstcw
cs
sub
or
jne
dec
fdiv
in
sahf
push
pop
jns
push
mov
jb
xchg
push
sub
ja
or
ret
xor
cmp
xor
push
(bad)
xor
aas
inc
mov
out
ins
push
sub
adc
inc
push
inc
xor
cvttps2pi
pop
adc
adc
push
cmp
sub
or
clc
jns
cmp
pop
jne
sbb
mov
pop
mov
xchg
out
inc
dec
dec
dec
and
out
in
xor
out
and
out
out
xor
sbb
cdq
and
dec
cmp
push
out
sub
ds
push
out
out
sub
nop
inc
inc
pusha
repnz
inc
pusha
ret
addr16
inc
push
out
out
sbb
dec
xor
dec
adc
add
jo
test
shl
cmp
leave
dec
adc
push
enter
dec
ror
out
out
and
dec
push
out
cdq
pop
dec
sbb
pop
dec
push
loopne
xor
les
xchg
inc
cmps
outs
enter
jo
nop
fcom
mov
jo
pop
test
adc
sbb
add
and
pop
or
xchg
ret
adc
cmp
adc
adc
mov
and
dec
add
or
or
adc
sbb
adc
mov
cmp
je
shl
clc
sbb
das
push
jno
daa
lock
pop
addr16
mov
sbb
push
push
add
cmp
xchg
mov
nop
mov
pop
cmp
xor
lahf
in
add
push
add
pop
push
inc
mov
int3
mov
jle
ret
jl
inc
push
int3
ror
pop
mov
ins
add
jnp
inc
aad
add
mov
rol
or
fwait
pop
push
jo
ror
dec
sti
iret
push
pop
pop
cmp
and
nop
cmp
pop
loope
or
or
nop
mov
rcr
int3
inc
add
inc
push
jbe
inc
pop
in
inc
adc
or
ins
ins
add
je
add
dec
mov
(bad)
rcr
cs
ret
push
pop
xor
sbb
js
scas
xchg
out
ret
imul
dec
jecxz
jns
mov
dec
ficom
out
pop
push
dec
dec
or
inc
sbb
mov
mov
aam
and
lahf
gs
push
push
scas
pop
xchg
sbb
pop
mov
inc
sub
ins
add
pop
and
leave
fmulp
stos
and
jb
add
aad
mov
or
adc
enter
fistp
xor
inc
push
in
dec
push
push
das
sub
cmp
xor
mov
js
sub
and
mov
enter
nop
and
mov
xchg
inc
sub
sub
cmp
ret
xchg
ja
add
sbb
sub
push
nop
bound
femms
cmp
mov
mov
cli
add
jmp
xchg
int3
sub
sar
ins
sub
outs
call
jnp
aad
sub
cmp
arpl
or
sub
(bad)
call
push
and
jnp
fild
mov
push
ins
scas
and
inc
inc
shl
and
push
out
jg
shl
xchg
adc
pop
call
nop
test
xchg
add
add
mov
ret
clc
adc
in
fidivr
sbb
push
cmp
cwde
pusha
aad
mov
popa
nop
sbb
or
lea
push
adc
inc
imul
ret
int3
add
xor
mov
and
cs
push
inc
icebp
dec
push
cmps
push
sub
mov
inc
je
mov
or
pop
shl
std
or
add
lock
aaa
test
(bad)
adc
xchg
mov
sub
xor
mov
pop
scas
inc
add
adc
mov
aam
rcl
fwait
xor
mov
sub
loopne
pushf
pop
cmp
imul
mov
xchg
fwait
and
sub
xor
(bad)
aad
jb
sbb
mov
int
imul
dec
pop
sbb
push
sub
push
movs
popa
sub
dec
push
arpl
xor
push
lock
(bad)
or
fisub
sar
pop
in
mov
inc
jg
pop
cdq
retf
mov
cmc
ss
sub
add
inc
jno
cmp
mov
adc
adc
push
sbb
xchg
dec
and
push
push
add
dec
out
xchg
mov
mov
add
push
sub
fidivr
xchg
jb
mov
add
add
pusha
inc
fsubr
push
add
mov
xor
sub
push
out
sbb
push
adc
les
sbb
add
cmp
int
stos
ret
shr
jecxz
rcr
cmps
daa
push
add
mov
jno
mov
inc
test
fldcw
inc
cmp
cwde
aam
xchg
imul
dec
fadd
sub
push
imul
mov
push
xchg
push
mov
rol
adc
enter
pushf
inc
and
pop
mov
sub
jl
jne
inc
and
or
push
mov
xor
shld
pop
adc
mov
add
jne
mov
and
mov
aaa
clc
aas
movs
cmp
les
mov
mov
test
sub
cmpps
inc
ret
nop
pop
push
pusha
les
ja
add
pop
jo
add
add
mov
lods
or
mov
sbb
aaa
push
xchg
or
jb
gs
rcr
iret
and
xor
jbe
ret
add
movs
dec
push
mov
sub
ret
loope
ret
pop
lods
mov
pusha
add
dec
mov
sbb
js
ins
nop
fiadd
push
adc
push
rol
popa
je
push
sub
push
shr
je
jo
mov
das
sub
(bad)
test
or
adc
mov
pop
push
pop
inc
sub
push
cmp
inc
and
push
push
outs
das
add
cwde
test
icebp
pop
add
mov
or
shl
sub
jns
cwde
add
add
ffreep
inc
fwait
pop
dec
push
push
dec
and
loopne
push
int3
cmp
add
mov
and
enter
dec
jo
add
ja
add
(bad)
rol
mov
jmp
mov
jmp
mov
jmp
cmp
push
push
jmp
mov
jg
(bad)
push
jmp
mov
jmp
inc
es
jmp
mov
jmp
mov
jmp
outs
sbb
bound
or
push
pop
fidiv
lds
lahf
movs
sbb
ss
fstp
jnp
iret
hlt
cmp
add
fbstp
and
nop
push
sahf
int
inc
pop
sub
mov
xor
inc
in
xchg
enter
and
push
mov
(bad)
mov
imul
push
sub
xor
scas
push
gs
movs
arpl
scas
and
push
or
jmp
mov
jmp
mov
sub
dec
pop
aas
movs
dec
and
adc
aam
inc
lock
ins
aaa
add
or
sub
jmp
sbb
mov
pop
fisubr
and
out
mov
mov
pop
out
xchg
cmp
loope
cmp
cmp
sbb
jge
or
add
imul
ins
mov
cmp
pusha
ins
sbb
xor
in
les
es
add
xor
hlt
int3
fld
jbe
inc
add
loope
mov
dec
ror
xchg
or
scas
enter
dec
xor
xor
inc
sar
mov
imul
or
dec
add
fistp
and
mov
inc
mov
adc
sbb
inc
pop
iret
(bad)
ins
wbinvd
js
repz
test
xor
adc
push
mov
pop
jg
or
adc
or
aaa
dec
add
imul
jmp
mov
jmp
mov
xor
mov
jmp
daa
sbb
aas
dec
or
xor
sbb
or
rcl
push
mov
test
add
cwde
int3
imul
jb
dec
adc
pusha
bound
pop
adc
mov
mov
sbb
xor
or
jno
call
in
mov
sbb
or
inc
dec
fiadd
ror
and
add
xor
hlt
add
daa
lock
daa
daa
(bad)
sbb
inc
add
into
iret
mov
ss
pushf
or
mov
cdq
cmp
stos
sbb
test
mov
inc
inc
dec
out
add
fadd
movs
movs
jne
pop
inc
or
ins
gs
jb
outs
jb
pop
sbb
std
inc
popf
inc
dec
adc
jo
cs
pusha
ins
push
dec
sub
dec
mov
inc
add
das
adc
and
inc
into
ror
inc
sub
or
ror
cmp
mov
or
clc
push
push
jne
inc
pop
rol
test
outs
push
loopne
dec
add
add
das
aad
mov
lds
or
or
jo
jo
pop
jg
iretw
pop
loope
ret
sbb
dec
pop
movs
cmps
lock
or
sbb
repz
lock
add
sbb
out
das
cld
push
sub
adc
add
nop
and
add
pop
inc
loope
push
xor
inc
or
nop
push
fsub
or
test
mov
mov
mov
cmp
adc
sub
pop
push
or
rol
sub
mov
pop
and
jl
rol
mov
mov
add
call
add
sub
sbb
sti
add
xchg
loopne
jp
test
xchg
push
mov
mov
add
aam
inc
or
fdiv
dec
jne
je
push
adc
daa
in
retf
or
mov
div
(bad)
aaa
adc
add
cmp
push
sbb
sub
hlt
or
push
pop
pop
push
push
adc
jp
dec
pusha
inc
jmp
test
cmp
(bad)
ja
push
or
and
sbb
mov
sbb
sub
scas
stc
adc
in
pop
in
test
adc
je
jne
movs
repz
add
jbe
inc
(bad)
mov
and
js
mov
xchg
mov
inc
mov
adc
aam
jbe
(bad)
pop
into
call
push
or
xor
enter
sbb
aaa
cld
fdiv
or
inc
imul
sub
fdiv
jb
adc
fnsave
gs
mov
mov
ss
add
mov
xchg
outs
mov
fiadd
push
dec
push
jne
stos
pusha
cwde
inc
pusha
ins
add
mov
fiadd
add
loope
mov
and
mov
and
js
inc
inc
outs
inc
pushf
cmp
enter
mov
dec
ret
mov
and
push
movs
adc
aas
fdivp
loop
movs
mov
add
sti
cld
or
test
mov
xchg
lods
and
xor
jp
inc
repz
dec
pop
xor
sub
gs
and
arpl
and
data16
(bad)
push
stc
jmp
sbb
jae
or
add
aaa
test
mov
sbb
add
sbb
xchg
and
cdq
js
cmp
cmc
sub
adc
in
jmp
push
lea
pop
in
inc
inc
and
adc
pushf
call
sub
mov
sbb
stos
adc
and
inc
jle
xchg
adc
inc
out
or
mov
movs
iret
int
push
jmp
cmp
jns
jne
cmp
es
popf
mov
rcl
jbe
aam
test
sbb
mov
add
out
jns
cmp
jmp
in
jmp
loop
adc
lea
pop
mov
mov
cmp
popa
call
dec
test
fdivr
adc
ret
xchg
aas
imul
push
call
idiv
push
mov
xor
and
call
and
stos
add
push
jnp
out
jnp
sbb
inc
add
push
and
and
push
mov
push
push
mov
pusha
pusha
push
dec
fisttp
push
es
cld
jo
mov
retf
pop
js
inc
mov
cmc
cmc
bound
cmp
cmp
arpl
inc
je
pop
inc
ret
arpl
add
pop
dec
mov
aaa
imul
(bad)
inc
stos
add
jmp
or
or
loope
setnp
jae
dec
ins
xchg
ss
gs
pop
sbb
inc
inc
add
dec
pop
mov
gs
je
push
dec
sbb
mov
jo
fs
dec
clc
adc
jg
dec
jne
push
sahf
mov
mov
inc
in
test
jns
test
nop
test
mov
adc
xor
jns
add
arpl
mov
adc
ds
push
sub
push
imul
adc
adc
adc
pop
loopne
addr16
(bad)
push
lock
fsub
lock
ja
and
(bad)
jl
add
sbb
std
dec
pop
push
and
jg
jl
jnp
mov
adc
jmp
es
(bad)
cld
(bad)
dec
push
push
xor
test
and
cmp
sbb
aad
and
xor
cmp
dec
(bad)
xchg
mov
or
sbb
and
pop
and
or
add
ror
shl
mov
or
mov
adc
xor
enter
lock
pop
xor
shl
xor
pop
push
mov
mov
pusha
and
or
or
cdq
clc
or
pop
std
in
jg
add
jmp
push
jne
cmp
test
xchg
jne
sub
xchg
push
xor
in
pop
push
shl
fdiv
das
add
fwait
push
sub
dec
mov
or
sub
mov
xchg
retf
mov
cmp
jo
or
adc
jb
jmp
jnp
mov
inc
jns
or
add
dec
jne
shl
loop
cmp
mov
(bad)
cmc
add
or
sbb
mov
(bad)
iret
add
cmp
ss
cwde
adc
sbb
jo
daa
sub
add
adc
idiv
ret
mov
mov
mov
pop
mov
inc
xchg
movs
mov
outs
or
pop
in
jge
es
cmps
sub
push
sub
sub
adc
dec
xor
or
std
or
add
sub
pusha
or
stos
xchg
mov
scas
push
pop
loopne
pusha
stc
or
inc
add
cli
sub
sub
ins
push
aad
shrd
mov
jo
push
mov
push
aam
jne
jns
add
or
and
or
movs
inc
xor
push
movs
add
sub
jno
and
sub
push
add
icebp
hlt
in
and
or
push
outs
retf
inc
sbb
outs
jge
xchg
add
jne
dec
inc
jbe
add
push
fwait
sar
xor
sbb
xchg
xor
xor
scas
lock
ja
dec
add
lea
pop
jle
icebp
or
aam
not
push
jge
retf
push
aad
jl
pop
xlat
cmp
xchg
ret
xchg
xchg
cmp
add
push
add
fdivr
or
clc
sub
or
shr
adc
and
popf
pop
jmp
stos
(bad)
out
fild
xchg
dec
dec
inc
pop
push
sbb
inc
xor
and
cli
push
movs
push
cld
pop
pop
xchg
or
shl
lock
(bad)
add
pusha
xchg
jo
sbb
dec
adc
add
loope
inc
popa
add
adc
cld
cmp
xchg
and
or
and
pop
bound
outs
push
js
ja
iret
repz
mov
out
jne
pop
mov
cmp
mov
add
repz
jmp
clc
mov
jmp
ror
mov
mov
sbb
pop
lahf
movzx
mov
jecxz
(bad)
aam
sbb
call
dec
mov
add
in
or
dec
icebp
loope
out
sar
ret
in
or
shr
imul
out
pop
ret
push
rol
fneni(8087
in
jbe
iret
jmp
pop
jns
jnp
pop
cli
es
and
xor
mov
lods
fild
jg
jmp
fnstenv
fbstp
adc
jmp
movsx
dec
movzx
mov
xchg
or
push
add
cwde
jmp
adc
nop
jmp
adc
cmp
fdiv
div
add
cmp
call
xor
je
adc
xchg
fsubr
int3
push
and
adc
lock
xchg
sbb
push
mul
mov
or
add
ja
inc
mov
jmp
sub
fdivr
add
xchg
lock
sbb
dec
inc
or
jmp
inc
pop
outs
inc
fimul
lea
ja
adc
aad
mov
gs
sbb
sub
xchg
dec
clc
(bad)
out
cmp
dec
pop
dec
dec
inc
dec
dec
dec
ins
jo
gs
sar
push
lock
call
fiadd
(bad)
mov
rcl
mov
add
dec
cwde
ds
add
pop
test
popa
jo
cs
jae
ins
ins
pushf
cmp
cmps
fbstp
fs
jae
and
and
nop
add
jg
push
add
xchg
adc
fs
lahf
jne
dec
push
xchg
xor
sbb
mov
add
or
mov
jg
dec
mov
xchg
push
clc
push
inc
ins
gs
xchg
xor
jbe
fst
xchg
bound
stc
dec
mov
jg
mov
adc
jb
dec
mov
xchg
mov
ja
jo
add
xor
inc
add
xchg
sar
push
sbb
jne
or
cmp
jns
mov
mov
add
add
cmp
push
sti
scas
or
imul
jecxz
nop
mov
inc
or
inc
dec
dec
push
inc
push
push
push
inc
inc
or
out
xlat
call
jae
popa
add
xor
arpl
or
push
daa
inc
push
or
push
cmps
mov
push
ins
add
out
inc
mov
ret
jnp
or
ror
dec
ja
aas
mov
xchg
inc
jb
sub
ds
pop
outs
inc
mov
cli
test
fisttp
(bad)
(bad)
out
pop
aad
push
push
(bad)
outs
retf
pop
pop
sbb
pusha
aaa
xor
add
ja
dec
inc
adc
or
push
test
jae
fist
xor
inc
mov
pop
sub
push
sti
jecxz
ret
call
jp
ins
mov
sub
xchg
sahf
mov
bound
jle
ud2
push
(bad)
jg
test
add
push
clc
inc
jle
pushf
inc
test
in
pop
adc
jae
push
jmp
pop
repz
push
push
mov
or
movs
aam
nop
(bad)
adc
or
jns
lock
ret
es
shr
xchg
rol
(bad)
fadd
into
jae
pop
mov
xchg
lods
push
inc
and
into
mov
fisubr
add
inc
fcom
push
cmp
inc
ss
dec
mov
inc
push
fmul
aad
and
inc
and
call
jnp
xor
outs
add
aam
data16
js
pop
or
push
pushf
loopne
in
pop
mov
xor
mov
push
push
mov
sbb
pusha
xor
pop
inc
aaa
jmp
fwait
dec
add
and
test
cmp
loopne
ror
cs
enter
add
add
sbb
pushf
and
popa
pop
mov
cld
pop
retf
call
cmc
jmp
mov
sahf
add
push
push
xor
icebp
cli
addr16
pusha
adc
dec
jb
adc
fisttp
jo
cmps
(bad)
or
xchg
sbb
xor
call
and
int3
cmps
adc
or
ds
push
ins
or
dec
dec
jno
gs
stos
imul
adc
or
bound
popa
jne
gs
loopne
das
mov
add
cmp
scas
push
push
mov
sbb
push
das
in
stos
pop
leave
pop
dec
cmp
lods
out
lods
dec
inc
aad
push
test
into
add
add
or
xor
xor
mov
adc
in
ins
aas
add
add
cmps
push
test
inc
or
and
mov
add
mov
imul
sbb
jbe
ins
outs
outs
je
and
hlt
or
jae
xchg
push
adc
cmp
pop
or
jbe
rol
pop
push
cwde
add
jo
sbb
xor
mov
mov
test
arpl
outs
jne
fs
or
xor
inc
movs
add
ss
lods
sahf
sbb
icebp
je
and
ds
adc
mov
push
mov
xchg
jmp
push
stc
mov
push
es
push
push
nop
inc
and
lods
mov
dec
inc
jns
adc
mov
xchg
cmp
(bad)
cmp
inc
pusha
cli
sub
mov
cmp
in
aad
loop
add
test
add
movs
adc
sar
in
mov
mov
push
pusha
dec
pop
in
sbb
xor
add
add
cmp
xor
mov
inc
sbb
mov
movs
or
aam
pop
fwait
mov
mov
mov
sub
cmps
or
or
pop
add
inc
push
add
jmp
push
fild
jle
and
lock
dec
pop
pop
push
jp
and
push
dec
pop
sti
call
mov
(bad)
fadd
shl
and
js
pop
add
ss
push
pop
stos
aad
cmp
movs
xor
es
repz
and
sub
lods
sub
pop
or
imul
mov
and
rcl
xor
aad
jmp
xchg
xor
inc
ss
dec
mov
inc
sub
add
cmp
or
add
xor
and
mov
in
ss
pop
or
fs
in
fs
adc
cmp
fs
retf
hlt
fs
sbb
fs
leave
repz
or
retf
xchg
xchg
ret
movs
sub
push
ja
mov
loope
cmps
es
xchg
xchg
xchg
xchg
jbe
(bad)
jmp
xor
cld
test
mov
xor
test
and
adc
aaa
add
push
jo
test
scas
jnp
fld
pop
add
dec
adc
fisttp
lar
or
mov
scas
add
outs
sub
add
mov
pop
inc
dec
or
push
push
je
imul
sti
bound
fist
das
push
jb
xchg
mov
pusha
pop
scas
pop
aad
pusha
sbb
arpl
pop
xor
pop
adc
inc
ins
push
enter
adc
or
adc
inc
pop
je
add
xchg
mov
fadd
setne
dec
add
push
mov
xlat
adc
addr16
stos
daa
adc
mov
shr
push
(bad)
fwait
clc
mov
adc
xor
lods
mov
scas
mov
sbb
popf
in
xor
loop
outs
or
je
mov
mov
bound
shl
and
or
or
pop
bound
nop
dec
mov
adc
data16
and
ret
inc
mov
pop
pop
dec
sar
pop
lahf
xchg
pop
mov
pop
aad
add
adc
movs
xor
aas
xor
(bad)
jmp
push
lock
(bad)
les
mov
or
retf
std
shr
cld
xchg
mov
mov
and
cmp
bound
mov
mov
add
jo
cwde
ror
adc
sbb
mov
sbb
mov
fbld
mov
adc
or
and
cmp
(bad)
xchg
mov
inc
jae
dec
pop
test
mov
enter
nop
int
dec
add
sbb
add
cwde
xor
xor
sbb
adc
jo
xchg
or
or
mov
adc
xchg
mov
leave
push
movs
shr
cmp
ss
ret
scas
ins
push
pop
add
jb
movs
lods
pushf
xchg
inc
add
adc
loopne
pop
fnstcw
mov
adc
dec
push
push
add
das
sub
mov
jo
movs
or
push
jno
inc
push
or
mov
inc
cmp
ffreep
or
sbb
pop
lahf
sbb
mov
sbb
jno
cwde
cmp
sub
sbb
test
sete
and
loopne
or
push
inc
call
add
les
inc
lods
not
mov
loop
xor
add
inc
or
push
das
add
sbb
pxor
mov
push
add
or
mov
jp
push
push
idiv
adc
jp
loopne
ret
loopne
inc
cld
adc
cs
in
je
cwde
push
xor
pop
pusha
popa
sbb
sbb
out
inc
cmps
jmp
xor
cmp
fcomp
je
cdq
inc
nop
sub
pop
jmp
or
push
mov
adc
fild
jge
fiadd
cmp
mov
or
jmp
pop
je
js
mov
pop
ret
jno
mov
mov
push
and
retf
jne
inc
cmp
pop
add
ret
xor
mov
adc
test
and
cmp
mov
mov
jns
inc
loop
aad
imul
nop
dec
nop
cmp
es
xchg
xchg
daa
or
xchg
inc
jnp
or
cwde
add
dec
push
aad
push
leave
clc
add
and
inc
repnz
sbb
adc
and
mov
and
fistp
fadd
aaa
cmp
or
jmp
fsubr
dec
enter
push
ret
sbb
adc
push
and
(bad)
mov
and
sub
sbb
or
loop
sbb
pushf
and
push
or
xchg
lds
iret
les
fs
inc
ficomp
or
mov
mov
test
mov
add
mov
sahf
bound
fcomp
cli
mov
inc
or
sub
rol
push
dec
mov
cmp
sub
mov
mov
and
mov
mov
push
test
pop
sbb
hlt
dec
or
and
fnstsw
mov
test
pop
and
sub
pop
fisttp
xchg
pop
ret
sub
push
xor
fnstenv
mov
adc
clc
fdivr
sub
fdivr
cmp
jg
mov
pop
loop
sub
inc
shr
sti
cld
scas
add
js
adc
fdivrp
fstp
fwait
xor
sbb
stos
popf
nop
sbb
push
mov
adc
(bad)
shl
test
sbb
mov
xchg
rcl
xchg
cmp
jnp
call
xor
adc
dec
or
jmp
sub
push
ror
dec
fistp
and
aaa
jp
es
ret
js
cmc
mov
fadd
sub
xchg
or
or
or
push
adc
add
movs
cld
push
sub
add
mov
push
pushf
push
xchg
mov
add
xchg
sbb
xchg
add
push
and
add
sbb
or
sar
or
enter
mov
ret
cs
adc
mov
inc
jae
mov
psrlw
movs
mov
fmul
xchg
push
and
cdq
or
mov
in
mov
add
out
add
(bad)
pop
lahf
lods
rol
lahf
pop
fsubr
pop
lahf
fnstenv
jg
mov
sub
jge
jb
or
ins
xor
movs
es
jnp
mov
lods
push
jg
mov
lock
mov
add
add
add
mov
mov
rol
leave
xchg
jmp
adc
mov
xchg
test
adc
dec
ins
push
pop
test
fisttp
adc
into
mov
adc
jmp
fmul
in
data16
neg
ret
sar
jg
jno
clc
jmp
mov
pop
inc
mov
movzx
pusha
je
mov
jmp
(bad)
stos
inc
out
add
shl
sub
ins
leave
mov
in
sbb
mov
jne
in
sbb
fucomip
stc
ficom
(bad)
or
mov
test
mov
mov
inc
in
ss
sbb
mov
rcl
adc
push
adc
lods
pop
lock
add
push
push
popa
fadd
xor
push
sbb
call
dec
mov
add
pusha
ins
adc
stos
scas
cmp
(bad)
fstp
scas
rcl
push
add
jbe
mov
mov
call
xor
and
cld
adc
wbinvd
(bad)
sub
lods
das
adc
pop
enter
pop
cmp
add
jne
clc
xchg
test
mov
cdq
sub
movs
mov
push
mov
cdq
cmc
mov
sbb
xchg
ror
add
add
imul
lds
jmp
adc
jne
adc
test
add
inc
mov
mov
dec
jne
adc
pusha
das
call
or
test
xchg
inc
test
mov
rol
test
std
add
dec
or
not
imul
or
or
mov
mov
or
cmp
add
nop
popa
cwde
aad
add
popa
mov
mov
rcl
int
sbb
add
bt
rcl
mov
push
test
mov
(bad)
pop
xchg
cld
mov
pop
rcl
mov
mov
jns
cmp
and
add
jae
leave
mul
(bad)
inc
jnp
mov
lods
jg
(bad)
(bad)
fisttp
push
lds
jno
inc
mov
movs
leave
aam
fcmove
rol
test
call
out
gs
call
xlat
popf
rol
jg
pop
js
add
jl
and
cmp
gs
pop
fs
inc
add
mov
jg
popa
outs
popa
addr16
fisttp
or
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
sbb
popf
fucomi
pusha
out
pop
or
adc
push
aad
iret
adc
dec
mov
les
xlat
pop
xor
add
std
jno
mov
imul
adc
jecxz
(bad)
jmp
dec
and
pop
and
dec
test
inc
(bad)
js
inc
or
mov
movaps
or
fdivr
(bad)
enter
dec
fadd
mov
(bad)
in
sbb
jb
leave
dec
retf
inc
lds
lea
jnp
aam
rcl
enter
mov
bswap
rcr
sti
fcomp
popf
sbb
aam
mov
movs
test
in
adc
iret
xor
mov
jns
fwait
clc
inc
mov
out
sahf
out
daa
das
aaa
aas
sub
neg
push
idiv
pop
(bad)
jns
mul
ins
push
ja
gs
shl
(bad)
loope
mov
pop
add
movs
sub
aaa
xchg
aaa
push
add
aaa
mov
cmps
xchg
sub
es
push
mov
sar
add
(bad)
push
xchg
jbe
push
fwait
add
ret
or
out
sub
dec
inc
cli
cmps
inc
(bad)
add
loopne
mov
shl
cdq
sub
xor
inc
jmp
pop
sub
lock
fsub
pushf
adc
gs
mov
cmp
mov
jmp
mov
ds
lea
push
inc
jb
repnz
xlat
cvtpi2ps
xor
les
or
mov
or
inc
dec
dec
dec
dec
jns
fcom
clc
push
jge
push
ja
add
leave
cmp
enter
(bad)
daa
sti
cs
dec
dec
pusha
xchg
call
sbb
add
int3
sbb
sbb
sub
pop
outs
inc
dec
push
push
or
ror
int3
dec
sub
jb
pop
addr16
es
fsub
(bad)
or
push
sbb
jmp
pop
jge
outs
stos
adc
sub
movs
daa
mov
inc
add
push
dec
add
xor
sub
data16
xor
imul
sar
outs
jo
arpl
jbe
or
add
aam
movs
and
sub
movs
xchg
inc
and
jae
test
or
add
mov
add
xchg
cwde
std
xchg
adc
movs
je
loop
shl
int3
in
aam
imul
out
and
add
add
test
aad
push
pop
jae
jbe
pop
icebp
inc
jae
sti
add
sub
(bad)
pusha
sub
lea
dec
mov
push
jnp
xchg
call
popf
sub
xor
fldl2t
adc
or
mov
ret
xor
pop
fcmovu
test
xchg
pop
adc
add
push
test
sar
je
xlat
pop
or
ret
and
mov
dec
gs
gs
fldcw
add
fnstenv
rol
mov
das
lock
add
pop
push
ds
jae
in
sub
or
dec
dec
fiadd
iret
les
or
in
shl
pop
sub
push
bound
add
sub
add
lds
push
sbb
add
jbe
(bad)
hlt
(bad)
fist
nop
enter
out
cmp
add
nop
shl
and
fidiv
add
add
or
jo
inc
lods
pop
or
dec
jnp
enter
loopne
mov
icebp
xor
bound
hlt
mov
sbb
ret
es
cdq
hlt
mov
add
enter
cmc
push
mov
or
mov
cmc
add
dec
ret
sbb
xchg
cmp
fiadd
test
(bad)
loopne
jb
xlat
fdivr
dec
mov
pop
mov
add
out
mov
xor
push
mov
push
xchg
rcr
push
js
push
and
lea
mov
xlat
add
(bad)
jno
jno
rcl
inc
adc
mov
(bad)
lock
fild
test
ja
xor
test
or
cld
dec
push
dec
ficom
inc
mov
or
or
add
add
fs
clc
and
add
dec
jne
sub
push
aas
stos
or
inc
adc
loopne
pop
ror
pop
or
jmp
sub
movs
outs
movups
retf
cmp
iret
sub
inc
leave
shl
jmp
adc
loope
and
sbb
dec
outs
push
jl
lock
outs
or
inc
push
lock
pusha
retf
sub
inc
dec
jno
sbb
add
push
xchg
or
adc
mov
sahf
sbb
cmp
jmp
dec
stos
sbb
in
das
or
aaa
gs
shl
sbb
lock
ja
push
nop
bound
xor
mov
mov
dec
sub
scas
lock
lahf
mov
xor
xchg
loope
add
xchg
cmp
or
and
jbe
fwait
(bad)
dec
add
mov
mov
and
mov
hlt
ror
add
(bad)
jo
pop
inc
mov
jmp
sub
nop
xchg
int3
scas
(bad)
jmp
sbb
jnp
scas
push
adc
(bad)
cmp
clc
div
or
(bad)
ror
inc
js
ss
cmp
iret
xor
mov
add
and
inc
sbb
add
adc
ins
jmp
shl
adc
inc
push
jmp
ins
dec
iret
sub
outs
fsub
pop
add
and
xlat
add
xchg
mov
or
dec
or
shr
xchg
dec
loopne
push
adc
sub
jne
xor
or
aas
fsub
add
ja
cmp
fmul
pop
dec
outs
adc
mov
test
dec
or
test
xor
fisubr
and
sub
pusha
lock
ss
push
jg
lock
or
in
in
mov
xchg
in
pusha
repnz
sbb
xor
dec
stos
and
bound
inc
mov
add
sbb
xchg
jp
xchg
push
adc
dec
pusha
xchg
xor
sub
or
pop
sub
xchg
mov
add
mov
or
sar
sbb
js
push
cld
das
jmp
xor
dec
xor
loopne
push
sub
iret
dec
or
or
sbb
cmp
add
lea
mov
push
sbb
xchg
add
cmp
mov
outs
push
movs
mov
or
xor
mov
push
push
sbb
cmp
or
test
or
add
(bad)
sub
loopne
push
jg
push
sbb
cld
test
push
inc
popf
test
jmp
push
call
mov
mov
sbb
add
pop
jmp
add
clc
dec
xchg
inc
adc
(bad)
(bad)
push
add
lods
ror
add
nop
in
and
mov
jge
or
mov
inc
jne
dec
ror
mov
mov
or
add
pop
cmp
aam
dec
repz
and
or
repz
mov
add
or
mov
inc
rol
pop
mov
lods
leave
inc
cmp
cwde
add
xor
sub
in
push
fsub
inc
cs
int3
ins
xchg
es
inc
pop
inc
add
mov
adc
sbb
xchg
lods
or
cmp
mov
jp
pop
sub
mov
cmp
std
mov
mov
(bad)
in
jg
or
mov
add
adc
jno
fst
call
daa
int3
inc
je
mov
hlt
dec
mov
aad
push
push
(bad)
push
push
sub
stos
sar
ret
sbb
dec
add
in
test
retf
pusha
dec
ja
push
hlt
cmp
xchg
inc
popa
or
or
mov
sbb
lock
mov
imul
js
sar
popa
arpl
or
push
pop
xor
pushf
arpl
dec
xchg
push
lods
dec
or
mov
jo
leave
cmp
lock
aam
inc
cmp
lea
inc
adc
jne
call
mov
dec
add
xchg
adc
adc
stc
mov
call
xor
(bad)
mov
lahf
aam
adc
inc
test
inc
or
mov
mov
jmp
ins
aam
inc
and
loopne
jmp
sub
popa
mov
add
sbb
push
push
sar
fadd
mov
dec
or
sbb
jmp
add
add
jg
push
jmp
push
adc
fldcw
(bad)
stc
test
xor
add
hlt
or
pop
cs
mov
test
sub
dec
lds
dec
pop
sbb
mov
test
inc
inc
sbb
fst
cmps
mov
inc
xor
cwde
and
or
or
push
push
dec
xor
mov
out
or
and
pusha
pusha
pop
aad
(bad)
adc
test
jo
xchg
or
cdq
popa
xchg
cmp
sahf
adc
data16
xchg
push
call
inc
adc
push
push
stos
and
pop
pop
mov
xor
je
jb
rol
movs
cmp
push
ficomp
xlat
sbb
xchg
pop
loopne
std
and
int
in
inc
std
mov
or
rcl
mov
das
(bad)
loopne
push
mov
stos
inc
mov
mov
dec
push
test
push
and
fdiv
fld
in
in
cmp
lock
sahf
push
in
dec
lock
xor
lds
add
inc
icebp
inc
(bad)
mov
adc
ins
dec
fistp
shl
push
add
mov
rol
adc
cli
lock
jle
outs
mov
sbb
inc
dec
jne
adc
ficom
sub
cmp
mov
pop
loope
loopne
test
mov
sbb
scas
cmc
dec
imul
fisttp
or
pop
adc
sub
mov
cdq
pusha
add
(bad)
aas
cs
dec
xchg
test
xchg
xchg
add
inc
rol
(bad)
inc
enter
shl
rcr
mov
jmp
inc
dec
ror
sbb
inc
adc
add
pop
or
pop
sbb
mov
and
rol
or
sbb
je
ficom
adc
cmp
pop
cmp
pop
adc
mov
adc
push
mov
mov
pop
mov
mov
movs
cmp
and
adc
call
inc
fld
xor
jg
fistp
es
cs
push
dec
(bad)
dec
push
sub
lahf
adc
xchg
movs
fucomi
xchg
aas
fadd
xor
inc
jns
push
test
jl
inc
cmp
dec
mov
sahf
or
adc
sbb
shr
loopne
push
lea
cdq
pop
adc
inc
inc
adc
sub
xor
daa
sub
inc
mov
adc
add
ins
movs
sbb
mov
imul
inc
dec
sub
add
push
data16
add
xlat
or
mov
mov
retf
jae
pop
test
add
test
lock
sub
cmp
pop
add
fcmovb
sub
fs
cmp
cmc
mov
add
pop
lock
push
jmp
fstp
xor
fild
fiadd
retf
cmp
dec
scas
popa
push
jne
add
pop
cld
call
push
pop
inc
push
test
sbb
cmp
loopne
clc
rcr
in
add
jo
xchg
ins
sbb
mov
lds
push
mov
fsubr
adc
dec
mov
ror
js
jne
adc
xchg
or
fadd
inc
inc
outs
pop
jns
cmp
sub
(bad)
ror
test
inc
iret
inc
pop
and
mov
jae
jo
jp
ret
(bad)
cmp
aaa
ja
ss
dec
(bad)
or
add
and
mov
push
cmp
les
enter
call
scas
push
scas
xor
add
add
or
xor
add
arpl
or
lods
dec
push
adc
mov
loope
outs
pop
cmp
inc
pop
or
cli
test
inc
push
xchg
cbw
test
test
push
jne
ret
pop
fild
cmp
iret
jno
xchg
cmp
push
xchg
jo
adc
aaa
hlt
test
outs
mov
xchg
add
and
(bad)
arpl
jae
pop
jnp
hlt
and
outs
pop
xchg
jb
push
pop
loope
dec
jb
outs
ins
mov
or
pop
xor
and
inc
fstp
dec
push
xor
imul
lea
imul
inc
dec
cmp
and
jo
adc
mov
out
jne
data16
mov
push
popf
arpl
mov
gs
inc
xchg
or
popa
jb
ret
sub
gs
iret
daa
push
gs
ja
lods
cmp
push
push
mov
mov
pop
sub
data16
jle
pushw
add
shufps
jbe
and
push
shr
outs
je
fdiv
dec
sbb
mov
dec
mov
imul
cmp
push
pushf
jbe
or
adc
(bad)
dec
jnp
sub
mov
adc
sub
popa
js
add
ja
push
aam
aad
push
or
add
add
aaa
xor
fidiv
pop
data16
std
aam
test
popa
dec
and
pop
sub
imul
jae
nop
inc
es
aad
mov
mov
(bad)
mov
repnz
dec
add
lock
pop
adc
pop
inc
outs
lods
imul
dec
xchg
add
dec
aad
add
add
adc
out
ja
xchg
(bad)
movs
imul
and
jbe
sti
add
jne
iret
mov
pop
or
sbb
add
xlat
mov
retf
lea
aas
popf
and
lds
(bad)
xchg
jmp
cmp
sub
mul
mov
les
aam
push
fimul
dec
adc
mov
and
aam
adc
sbb
inc
test
in
add
sbb
fwait
mov
pop
add
adc
xor
mov
and
or
dec
test
das
push
jp
pop
loopne
add
jae
popa
sbb
or
lock
out
or
or
sub
sbb
adc
shl
inc
mov
xchg
or
jle
add
(bad)
lods
sbb
jne
out
ins
xchg
pop
pop
in
sub
loope
mov
or
sbb
adc
call
ins
add
fnstsw
call
add
out
retf
pop
and
test
mov
loope
out
pop
smsw
out
push
cmp
push
add
fldcw
inc
test
cmp
cmp
outs
(bad)
sbb
and
cmp
inc
adc
mov
push
idiv
stos
ins
jmp
sub
fstp
push
push
add
or
push
adc
test
sbb
test
pop
mov
cmp
(bad)
loop
push
fadd
data16
cs
out
pop
dec
test
or
shl
or
mov
cmp
ss
mov
imul
add
inc
test
loope
fst
cs
imul
(bad)
rcr
and
push
jmp
push
pop
scas
cmp
adc
add
pop
repnz
mov
dec
aam
sahf
test
push
ficom
add
outs
arpl
cmp
mov
jbe
mov
push
pop
pop
das
lods
not
pop
inc
add
ss
popa
f2xm1
ja
test
add
dec
daa
add
ret
das
dec
in
pop
sub
rol
dec
sub
cdq
aam
in
out
imul
lods
or
out
hlt
pop
mov
in
icebp
rol
pop
or
jae
outs
pop
daa
inc
or
mov
loop
pop
nop
push
add
cld
in
jmp
sbb
push
inc
add
mov
aaa
movs
or
inc
jne
or
jl
jmp
jge
cmc
dec
sub
push
or
bound
es
dec
gs
dec
js
jo
xchg
arpl
in
fild
stc
add
inc
in
add
and
adc
sub
sbb
in
jg
mov
pop
call
push
push
out
pop
lds
out
dec
fnclex
loope
inc
psrlw
verw
sbb
or
addr16
out
xchg
xor
push
in
sub
jae
xor
pop
cld
in
dec
jl
nop
fsubr
cmps
add
push
or
add
out
lds
add
dec
mov
aad
mov
fdiv
or
out
test
repnz
or
mov
add
aam
and
fisttp
sbb
ins
pushf
fmul
scas
or
(bad)
inc
in
jnp
lock
jbe
in
xchg
inc
add
pusha
xchg
push
pcmpgtb
fld
inc
push
jo
je
sbb
or
jne
fs
push
or
adc
jae
push
cmp
add
push
mov
gs
pusha
(bad)
les
or
mov
(bad)
mov
xchg
xor
int3
push
add
jo
mov
sbb
pop
push
arpl
jne
loope
lock
jne
jae
push
(bad)
sub
pusha
add
xchg
cli
test
stos
fst
or
dec
int
inc
icebp
add
add
add
sub
aad
aam
adc
push
call
std
jb
dec
outs
xchg
sub
dec
aad
adc
sbb
outs
pop
adc
jmp
inc
pop
mov
psubusb
ror
aas
xor
mov
adc
pushf
shl
(bad)
jp
lahf
mov
fidiv
push
movs
pushf
jno
fsub
xor
sar
cmps
jge
xlat
pop
and
repz
push
repz
out
rcl
push
ret
adc
lods
push
loop
aad
(bad)
in
idiv
(bad)
mov
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
and
and
push
jo
mov
repz
lock
sub
cmp
js
mov
retf
push
cs
fs
add
xor
mov
adc
shl
mov
aad
shr
push
outs
in
push
pop
ins
dec
sbb
jns
in
lods
dec
cmp
ins
add
loopne
inc
jns
dec
add
jge
inc
add
sbb
mov
in
(bad)
or
sub
dec
jbe
shl
loope
mul
not
cwde
mov
retf
add
and
xchg
xchg
mov
jl
lods
rol
push
enter
add
es
adc
pcmpgtw
mov
push
pusha
sub
and
rcr
dec
sub
mov
pusha
mov
inc
arpl
push
das
xchg
neg
pusha
adc
dec
add
ja
add
sbb
add
dec
sub
sub
add
add
or
or
or
push
sbb
clts
test
fwait
xlat
cmp
inc
jmp
fs
imul
jmp
pop
stos
gs
push
gs
aad
add
or
jnp
sbb
push
pop
or
(bad)
je
add
pushf
mov
js
add
iret
inc
pop
icebp
jmp
xor
jo
mov
or
pop
call
add
push
or
movs
add
jmp
mov
popa
pop
inc
add
jge
ror
ja
mov
or
mov
stos
cdq
and
cmp
mov
sub
ds
popf
icebp
test
inc
cli
jle
clc
cmp
je
std
dec
outs
jb
fisttp
jne
push
and
jae
jb
dec
popa
and
push
inc
pop
adc
and
mov
add
retf
jmp
push
jge
shl
jae
and
dec
sub
mov
jo
movs
inc
pushf
adc
mov
ret
and
rcl
inc
add
sub
add
loopne
jnp
aam
popa
cmp
imul
and
add
adc
rcr
sbb
sub
add
gs
push
outs
cmp
sub
ret
or
cli
add
add
aaa
popf
nop
jbe
dec
adc
outs
inc
gs
ins
add
or
stc
jb
xor
out
add
add
push
mov
push
jne
jge
mov
lock
dec
add
push
or
sbb
int
add
or
pusha
add
adc
pop
in
loopne
adc
push
sbb
jae
in
loopne
fdivr
pop
jo
add
inc
or
push
jg
pushf
rol
(bad)
cld
push
pop
fistp
sti
es
cmp
inc
aaa
push
jge
mov
(bad)
dec
sar
ror
shl
push
or
push
mov
pop
cmp
adc
ret
add
mov
sbb
aad
test
cwde
sti
jae
sti
add
jle
imul
aaa
add
push
sbb
push
or
and
inc
and
xor
or
xchg
push
jp
cld
sti
dec
pop
call
loopne
mov
rol
lods
xor
imul
xchg
xor
dec
sbb
adc
mov
(bad)
(bad)
or
add
mov
jl
add
xchg
jb
test
mov
mov
mov
cmps
jecxz
out
push
add
push
call
data16
xor
and
cmc
and
pop
shl
addr16
xor
fidivr
cmp
jo
add
and
inc
rol
dec
syscall
and
dec
xor
test
add
jnp
add
add
dec
stc
inc
(bad)
aam
add
test
adc
add
or
xor
dec
inc
aam
hlt
stos
dec
push
in
mov
retf
mov
mov
arpl
jno
xor
pop
das
or
mov
fwait
nop
into
hlt
ror
push
pop
push
je
mov
and
in
and
aam
cwde
or
dec
add
push
add
and
cmp
sub
popa
dec
ret
dec
out
xchg
fbld
push
in
or
mov
pop
jnp
add
pop
lds
or
sbb
daa
mov
test
cmp
add
dec
neg
stos
xor
fsubrp
push
in
das
add
sub
std
dec
pop
cmps
popf
in
fs
push
dec
dec
dec
pop
xlat
push
xor
cmp
add
mov
push
cs
push
add
inc
and
xor
test
dec
das
jg
pusha
sub
je
pop
mov
mov
push
call
jmp
jge
add
jo
loopne
and
mov
push
adc
and
add
shl
add
fld
or
add
fucomi
rol
add
fsubr
out
and
rol
mov
pusha
aaa
push
jl
lods
or
push
xchg
mov
mov
ret
shl
cmp
mov
mov
loope
push
pop
dec
add
sub
or
inc
add
cmc
cwde
scas
inc
(bad)
clc
mov
adc
xlat
pop
lock
jnp
add
arpl
daa
dec
and
dec
or
iret
cmp
fdiv
adc
es
jns
sbb
daa
pushf
aaa
std
adc
jmp
jae
dec
enter
(bad)
jge
cld
add
es
aaa
or
sub
xchg
arpl
add
lock
add
add
cmps
loop
pop
daa
aam
jg
cmp
jnp
push
push
int3
push
push
push
popa
cmps
scas
add
ds
shr
cmp
jo
or
jl
sbb
add
adc
and
daa
scas
test
lock
inc
cmc
push
sub
clc
jns
dec
mov
shl
mov
xor
ret
fnstcw
jle
jmp
rdpmc
add
lahf
xchg
jae
push
add
dec
ins
sbb
push
and
sub
adc
sbb
adc
ss
(bad)
dec
or
mov
and
(bad)
dec
inc
cmp
scas
add
dec
cli
int3
add
dec
or
or
mov
ror
jo
inc
test
stos
sbb
cmp
pop
push
or
or
lock
dec
jg
dec
aaa
pop
adc
inc
arpl
xchg
add
pop
test
sbb
int
inc
and
les
out
addr16
pop
adc
push
pop
xchg
xchg
and
(bad)
sbb
ss
jge
or
push
popa
pop
pop
test
scas
jae
and
or
and
das
xor
cmp
ror
or
cmp
adc
sbb
add
test
ret
loope
xor
cmc
add
or
nop
cmps
jge
js
and
dec
pop
adc
lahf
stos
in
add
xchg
cmp
outs
pushf
rcl
xchg
xchg
xchg
xchg
pop
push
adc
sbb
retf
pop
inc
aaa
xlat
push
iret
and
mov
(bad)
inc
cli
mov
push
inc
movs
xor
sbb
aaa
adc
in
mov
outs
outs
cmp
aam
(bad)
mov
or
or
iret
adc
sbb
fwait
sbb
add
aas
gs
fdiv
or
aas
std
add
fadd
xchg
movs
mov
or
push
popf
sub
jg
ins
add
arpl
add
push
jo
lea
shl
repz
movs
ja
jl
(bad)
add
mov
mov
das
arpl
push
mov
arpl
(bad)
or
punpckhwd
xchg
and
push
dec
add
data16
outs
stos
aad
rcl
scas
or
cdq
pop
xchg
bound
fs
xor
outs
sub
test
ret
popa
aas
int3
adc
jbe
ja
lahf
aaa
or
sbb
mov
jae
aas
sbb
inc
push
cmp
sahf
outs
adc
popa
and
add
enter
in
pop
cmp
popa
jbe
xlat
shr
adc
pop
jno
pop
fdiv
outs
pop
clc
(bad)
dec
outs
punpckhwd
es
dec
movs
add
scas
lock
scas
mov
xchg
sbb
push
loop
inc
psraw
sbb
fcom
push
mov
addr16
stos
xor
hlt
push
nop
mov
xor
inc
sub
test
mov
sbb
push
inc
cmp
pop
inc
or
inc
mov
ss
lsl
rol
add
pusha
mov
test
popa
ins
push
add
jb
pop
ins
dec
cmp
cwde
add
mov
dec
add
xor
in
stos
push
inc
and
lahf
adc
xor
pop
ror
xor
xor
test
xor
xor
and
inc
xor
xor
mov
sub
sbb
popa
or
enter
jmp
aas
ins
xchg
ret
enter
call
aam
ror
add
cmp
push
add
push
add
sub
retf
inc
or
in
rcl
and
push
add
fcom
pusha
jo
push
and
push
int
ror
call
and
push
pop
pop
push
inc
mov
retf
push
sbb
out
push
inc
or
xor
cmp
dec
or
add
inc
mov
push
and
rcr
(bad)
jmp
push
pop
jmp
and
(bad)
push
pop
xlat
pop
mov
dec
test
jl
or
aaa
(bad)
js
test
pop
push
(bad)
jl
push
test
dec
jne
push
sub
mov
or
fnstenv
adc
fld
popa
mov
ret
cmp
test
pop
add
inc
xor
sti
call
sbb
inc
out
cmp
or
cdq
nop
call
add
add
adc
lea
cdq
xchg
mov
mov
popa
mov
lds
dec
cmc
dec
dec
adc
fld
dec
adc
nop
or
idiv
fmul
mov
adc
loopne
sbb
inc
test
adc
fistp
not
jo
fist
dec
jns
jne
arpl
add
adc
add
rol
in
inc
je
pop
cmp
or
fst
nop
jl
sub
out
or
inc
xchg
mov
jo
test
dec
push
xor
cmps
test
pop
push
(bad)
outs
mov
push
inc
(bad)
js
inc
and
adc
test
movs
aam
mov
test
pusha
jl
add
lods
or
shl
into
ror
inc
mov
cmp
lahf
movs
sbb
cmp
or
jg
cmp
xchg
cmp
rcl
test
imul
add
pushf
pusha
cli
jbe
retf
sbb
call
push
fstp
pop
dec
pop
arpl
sub
cli
mov
add
pusha
ins
add
pop
mov
sbb
inc
aas
xchg
push
dec
xchg
pop
aaa
adc
cli
mov
lock
pop
mov
test
push
out
call
ins
or
call
ja
push
jg
xchg
inc
inc
pop
test
clc
outs
dec
sbb
xor
pop
adc
fs
test
xor
ficomp
test
fs
jge
cli
adc
xor
sbb
xor
add
adc
ins
(bad)
jle
mov
aaa
repz
lds
add
clc
push
mov
jns
cdq
fimul
mov
int3
mov
iret
pushw
ins
adc
pop
push
repnz
ret
fwait
dec
sbb
daa
pop
pop
dec
pop
ret
test
or
outs
dec
inc
mov
sbb
pop
push
or
xor
shl
fsub
and
into
xor
js
sub
and
sbb
mov
jo
or
push
inc
xor
sbb
mul
sbb
xor
sbb
push
add
mov
mov
dec
add
add
sbb
add
mov
xor
jae
(bad)
lods
xchg
adc
cmc
dec
pop
shr
jmp
and
sbb
adc
sbb
ficom
xor
test
xchg
xor
xchg
push
out
pop
aas
xor
fisttp
or
pop
cmp
add
daa
or
fiadd
dec
inc
test
jne
addr16
cli
test
add
jl
and
adc
cmps
mov
loope
or
cwde
inc
or
or
add
sbb
xor
idiv
mov
ret
pusha
das
sbb
sub
ret
nop
outs
mov
rol
in
jmp
mov
adc
and
clc
mov
nop
inc
mov
enter
cdq
sbb
shr
in
jns
inc
pop
add
or
push
jmp
jns
out
fwait
movs
scas
mov
ret
int
xchg
cli
loop
clc
sbb
test
pushf
sbb
sbb
daa
ffreep
lahf
pop
pop
dec
daa
(bad)
sbb
add
pop
add
cld
fdiv
sub
inc
enter
xchg
and
mov
adc
inc
and
and
imul
sub
addr16
std
add
adc
mov
nop
pop
loope
shl
pop
pop
pop
sbb
loop
add
push
loop
or
add
test
ror
jns
sub
(bad)
aam
jo
inc
mov
inc
cld
push
add
and
jns
jno
sub
jns
adc
add
int3
ret
jle
inc
inc
pop
cld
pusha
sbb
add
jnp
mov
push
pop
xchg
xchg
mov
inc
cmp
xchg
add
and
add
stos
adc
out
adc
sub
(bad)
add
dec
add
mov
or
sub
and
xor
(bad)
and
dec
or
pop
add
test
inc
add
aas
aad
or
add
ret
imul
add
bound
mov
jg
jmp
mov
fisubr
jg
mov
stos
test
sub
and
pop
in
mov
call
cmp
adc
and
sbb
cmp
xlat
jle
pop
mov
jae
mov
or
push
mov
enter
loopne
xchg
push
mov
out
add
push
inc
push
pushf
ja
dec
aaa
ror
call
test
push
pop
retf
shl
das
sbb
or
in
mov
lea
cmp
sbb
fstp
add
cs
push
mov
mov
data16
cmovs
adc
jl
push
js
xchg
pushf
cmps
add
hlt
adc
or
call
mov
mov
dec
mov
outs
xchg
xchg
seta
xchg
dec
nop
xchg
call
pushf
cwde
fwait
idiv
mov
xlat
ds
nop
imul
test
mov
and
sbb
dec
fcomp
dec
xchg
jmp
cmp
pop
cs
sbb
cmp
adc
push
inc
dec
call
dec
(bad)
fld
add
ss
add
pop
daa
adc
(bad)
fsub
popf
mov
sbb
sbb
inc
mov
loope
scas
inc
sbb
pop
pop
xchg
aad
je
jge
inc
imul
mov
je
ds
adc
hlt
push
sub
js
xlat
popa
loop
jne
aaa
xchg
arpl
ror
movs
push
pop
dec
test
dec
cs
retf
cmp
mov
mov
add
dec
aas
or
mov
lods
pushf
pop
cs
dec
je
je
push
add
test
loope
sbb
repnz
sar
movs
jbe
jb
mov
or
cwde
dec
imul
jge
pop
neg
jle
scas
ds
jo
mov
push
mov
and
push
pop
jne
push
xor
pop
into
(bad)
dec
cmp
enter
ja
and
bt
jae
or
mov
add
push
arpl
cmp
rol
inc
xchg
neg
mov
fdivr
pop
outs
xor
add
push
or
es
mov
pushf
fdivp
(bad)
retf
ret
and
add
mov
shr
aaa
or
cli
cmp
adc
call
cld
or
push
xor
ret
in
dec
jle
mov
popa
loopne
pop
rcr
or
mov
adc
not
sub
fmul
and
sbb
es
lock
or
mov
dec
sub
adc
inc
loop
dec
lods
xor
add
jnp
mov
push
dec
ret
dec
sbb
pop
fisttp
pop
push
mov
aas
in
shl
data16
nop
or
mov
cmp
mov
mov
rol
pop
(bad)
add
or
dec
add
outs
xlat
mov
in
call
pop
xchg
ror
xor
sub
adc
cs
daa
inc
push
xor
add
inc
dec
pop
xor
xor
inc
outs
add
js
jge
mov
or
inc
(bad)
lea
(bad)
(bad)
(bad)
mov
test
push
dec
push
pop
pop
or
push
jl
adc
mov
and
ins
xor
test
ins
(bad)
xor
xor
or
out
js
or
mov
cmps
push
xchg
sub
jle
mov
out
mov
aam
fwait
sub
fwait
es
push
fs
inc
shl
sub
xor
ds
pop
addr16
sub
add
cmp
sub
mov
je
adc
cmp
es
xor
dec
xor
sti
mov
int3
adc
ss
ins
or
daa
add
add
dec
arpl
or
std
ins
pop
aam
rcl
mov
inc
clc
ja
fdiv
push
dec
or
shr
dec
dec
xchg
sub
sub
push
movs
pop
jo
jge
call
or
mov
xor
mov
mov
adc
xor
mov
sbb
add
pop
add
clc
and
cmps
daa
loopne
dec
hlt
inc
inc
icebp
call
ret
jno
cwde
inc
cmp
inc
clc
ins
and
les
ret
sbb
pop
scas
add
push
cmps
mov
lock
dec
jmp
sub
das
pop
mov
push
jnp
push
pop
scas
inc
mov
cmp
mov
sbb
push
test
add
das
dec
push
dec
das
in
dec
add
loopne
jne
jns
sbb
les
fcomp
(bad)
out
outs
inc
mov
add
enter
inc
jo
in
sub
ret
hlt
ins
mov
shl
js
and
sti
inc
push
pop
xor
push
or
add
cld
scas
or
ret
and
sub
mov
test
je
xor
adc
or
and
sub
mov
sub
ins
sbb
adc
pop
xchg
std
mov
inc
dec
addr16
inc
hlt
inc
pop
or
test
das
dec
into
push
ins
mov
jmp
dec
sbb
dec
adc
or
or
sbb
xchg
shr
sbb
test
mov
jmp
xchg
imul
ror
call
or
add
stos
or
sbb
lea
mov
(bad)
sbb
ret
mov
and
rcl
adc
pop
leave
jmp
and
rol
xor
ficom
dec
add
dec
cmp
xchg
jb
(bad)
mov
das
pusha
or
jne
add
mov
xor
dec
xchg
push
jne
or
leave
sub
jo
scas
daa
dec
push
repnz
add
push
jb
stc
das
inc
dec
mov
pop
inc
shl
data16
adc
fadd
shr
out
mov
(bad)
daa
inc
mov
push
mov
mov
ret
ror
jne
hlt
cmp
popa
cmp
push
cmp
je
or
jge
pop
shr
imul
loopne
ins
dec
and
mov
adc
inc
popa
add
sbb
adc
cs
push
mov
inc
or
lea
inc
ins
add
iret
xchg
dec
xor
or
mov
adc
add
and
mov
ret
adc
test
rcl
add
push
es
cmp
test
stos
adc
sub
push
add
daa
mov
mov
popa
push
adc
nop
jne
sbb
or
ins
add
push
push
cmp
xchg
fsub
dec
jbe
or
sub
adc
xchg
imul
inc
adc
test
jbe
neg
into
push
xor
inc
ins
push
inc
cmp
arpl
adc
jmp
cwde
fwait
ins
call
aas
shl
or
sbb
std
sub
lock
or
fmul
ins
mov
or
add
add
test
ss
push
aam
cmps
and
cmp
sbb
ret
imul
dec
sbb
data16
adc
dec
repnz
mov
adc
cmp
inc
and
outs
mov
inc
and
mov
aas
dec
mov
clc
cmp
jne
das
test
pop
add
xlat
xor
and
sbb
add
push
ret
jns
test
pushf
rcl
adc
xor
push
ret
adc
(bad)
or
mov
movs
sub
sub
adc
and
lods
mov
inc
inc
bndldx
sar
and
cmp
or
cmp
mov
and
imul
xor
and
cmp
add
sbb
jns
mov
xor
cmps
or
ins
mov
out
imul
push
or
push
stos
imul
(bad)
adc
xor
and
shr
xor
outs
or
inc
out
out
jae
ss
sbb
outs
jb
sahf
mov
jne
adc
je
ss
(bad)
sbb
jae
push
mov
icebp
sbb
dec
cmp
pop
lahf
jl
xchg
or
jle
and
es
(bad)
mov
push
cmp
je
sbb
adc
and
shl
repnz
inc
aaa
cwde
dec
xchg
mov
jo
add
pusha
iret
xchg
push
and
sub
outs
dec
sbb
jecxz
jb
aaa
jbe
mov
xlat
sbb
or
rep
mov
adc
(bad)
leave
jl
sub
lock
cs
xor
sti
(bad)
sbb
add
fcom
mov
adc
(bad)
and
and
repnz
jmp
inc
and
loope
pop
mov
aad
adc
call
cmp
add
sbb
(bad)
dec
xor
(bad)
in
mov
xor
call
mov
lahf
or
sub
cld
pop
sub
rcr
pusha
stos
inc
push
push
or
mov
mov
xchg
ret
mov
add
adc
push
sub
cmps
sub
xor
nop
xchg
pop
arpl
xor
cld
adc
pop
icebp
mov
mov
push
cmp
leave
jl
imul
cs
mov
add
add
xor
fst
jo
or
jae
sbb
add
outs
mov
je
inc
adc
test
ins
mov
mov
cli
jnp
cmp
js
outs
cs
push
add
xchg
mov
or
and
cmp
ins
adc
inc
mov
and
adc
inc
dec
cmp
(bad)
(bad)
xchg
and
cmp
ja
iret
or
retf
pushw
daa
out
idiv
add
icebp
push
jb
xor
mov
dec
not
inc
lods
daa
xchg
mov
into
jne
jp
mov
hlt
sub
mov
gs
pop
jb
pop
in
mov
xor
inc
cmp
cli
xchg
xchg
cwde
inc
call
mov
imul
add
rol
(bad)
inc
jnp
(bad)
imul
outs
aam
daa
xor
cld
mov
pop
mov
push
sbb
inc
test
pop
shr
add
sub
pusha
or
je
stos
jmp
stc
sete
mov
cmp
jo
aaa
popa
push
cmp
xchg
jno
test
add
adc
dec
push
ret
sbb
add
push
adc
add
mov
or
pop
cs
fs
jle
jb
stos
lea
inc
and
dec
jae
xchg
cmp
push
fld
gs
inc
or
mov
pusha
mov
ret
cmp
push
adc
xchg
(bad)
(bad)
push
jg
(bad)
rol
loop
bt
jae
mov
push
or
dec
sub
loop
mov
or
pop
rcl
pop
std
retf
adc
jne
cmp
inc
jbe
ret
mov
adc
dec
adc
dec
mov
or
cmp
lahf
in
ror
push
inc
inc
ins
adc
inc
pusha
ror
or
jb
inc
mov
sbb
adc
jae
add
push
jecxz
shr
pop
retf
enter
(bad)
sub
sub
push
cmp
add
pop
xchg
and
and
adc
xchg
pop
cs
fisub
repnz
pusha
pop
jb
es
pop
or
dec
mov
add
jnp
and
or
and
shl
cmp
mov
inc
es
lods
xor
mov
mov
xor
inc
fsub
les
sbb
cmp
sti
mov
movhps
pop
or
test
mov
add
or
adc
lock
xchg
test
mov
mov
and
xchg
inc
sti
mov
js
and
sub
outs
out
stc
pushf
mov
aad
in
and
dec
add
mov
pop
add
push
push
arpl
imul
ja
aam
sti
jle
xor
add
dec
pop
test
pop
sbb
add
adc
dec
adc
mov
lock
cmp
lahf
pop
pop
test
push
or
arpl
addr16
push
sbb
jb
std
mov
push
pop
inc
mov
xchg
aas
dec
jo
repnz
inc
shr
mov
and
jg
pop
aaa
ret
es
fistp
mov
and
xchg
inc
sbb
std
add
xlat
mov
adc
xor
ins
add
rol
outs
retf
aaa
adc
lahf
test
or
dec
hlt
sub
(bad)
icebp
ins
and
xlat
mov
pop
push
test
lods
fadd
cld
jge
fsubr
and
cs
in
loopne
cmp
dec
pop
neg
ins
jb
shl
inc
jmp
ins
or
xor
ror
push
mov
scas
test
fwait
daa
xchg
lock
xchg
cmp
xlat
je
mov
call
jo
cmp
je
mov
jecxz
push
daa
pop
inc
adc
js
xchg
inc
imul
inc
dec
jmp
sub
daa
repnz
pusha
movs
outs
sub
daa
aas
test
loope
mov
add
jne
cmp
cmp
sub
jmp
mov
cmp
je
push
jno
and
ins
mov
push
xchg
mov
push
sub
fs
test
sub
pusha
push
aaa
test
je
sbb
push
movs
add
je
jecxz
inc
xchg
mov
bound
shr
xchg
adc
cmp
add
pusha
mov
pop
jp
add
(bad)
dec
inc
and
ja
mov
add
push
inc
mov
push
ins
and
fcom
xchg
je
or
add
leave
fs
fwait
pop
mov
adc
xchg
lods
push
mov
and
ficomp
jmp
jmp
mul
push
cs
addr16
aaa
push
cmc
lds
jbe
mov
xor
push
hlt
loope
cmps
jno
test
or
addr16
repz
clc
sbb
mov
in
adc
push
pop
pop
inc
aam
mov
cs
sbb
mov
aam
dec
inc
je
inc
xor
clc
sbb
and
xor
fs
movs
sub
push
lock
fnstcw
mov
call
add
pop
stos
push
inc
jg
dec
scas
cmp
xchg
add
rcl
push
xor
push
pop
pop
jecxz
sbb
push
in
push
xchg
out
and
in
ds
mov
xchg
aam
push
pop
call
pop
test
pusha
repz
(bad)
outs
push
loopne
mov
push
mov
test
cs
ficom
repnz
test
push
mov
nop
sub
pusha
icebp
push
and
inc
adc
mov
popa
fisttp
cs
and
mov
push
sbb
xchg
pop
das
loopne
jne
sbb
push
dec
sbb
pop
cmp
js
and
cmp
dec
cmp
faddp
fld
fadd
sub
push
cli
data16
in
sbb
sub
and
in
mov
aas
push
mov
sub
mov
push
push
lock
cld
cwde
pop
mov
push
dec
or
xor
icebp
xchg
or
dec
gs
inc
call
cld
inc
out
pop
jg
or
ins
jns
push
sti
add
add
mov
lock
mov
mov
in
push
std
ret
sbb
stos
jo
repz
push
imul
test
lea
cmc
mov
pop
daa
icebp
sub
dec
mov
xchg
inc
rol
cmp
jne
fcmovnbe
pop
mov
(bad)
mov
cmp
adc
imul
push
inc
push
add
sbb
adc
and
pop
pop
dec
icebp
retf
enter
xchg
loope
sub
dec
(bad)
mov
xor
pop
imul
add
popa
pop
fnstsw
aaa
clc
push
xor
mov
pop
dec
dec
shl
xlat
mov
lock
add
xchg
lea
xor
push
cs
push
push
std
mov
jbe
lods
inc
in
xchg
adc
sbb
lock
mov
dec
sbb
lea
sub
or
sbb
dec
sub
jmp
mov
nop
add
fild
sbb
lds
popf
hlt
mov
pop
dec
icebp
ss
clc
sbb
sub
lds
mov
jmp
lods
sub
cmp
and
xor
imul
mov
xor
mov
xor
sub
lods
shl
rcl
inc
aas
clc
dec
scas
push
popf
sbb
lods
bound
push
rcr
rcl
push
push
mov
dec
and
add
inc
jae
jo
add
xchg
mov
(bad)
nop
fstp
pusha
es
pushf
mov
cmc
imul
push
movs
test
push
lods
adc
popa
ins
ret
data16
inc
mov
mov
mov
push
rcr
enter
jnp
popa
dec
int3
sar
add
loope
mov
call
mov
clc
inc
add
call
and
add
xor
call
jecxz
and
call
std
mov
das
pop
es
in
add
aas
adc
bound
imul
pop
add
xor
add
dec
add
jecxz
enter
add
push
inc
shl
sub
sub
shrd
add
out
jl
neg
cs
dec
add
les
mov
fld
adc
outs
add
and
cmp
inc
inc
dec
aaa
addr16
sub
xchg
mov
stos
imul
pop
add
mov
xor
mov
add
into
pop
adc
or
stos
or
sub
push
jnp
imul
fucomp
mov
aaa
mov
cmp
icebp
mov
cmc
lods
ins
sbb
inc
xchg
and
jbe
sti
add
adc
out
and
(bad)
jle
mov
or
mov
dec
pop
in
push
push
xchg
sbb
js
mov
(bad)
pop
in
cmp
sbb
cmp
cmp
sbb
aam
dec
jp
mov
into
cmc
cmp
loopne
cmc
jae
mov
hlt
add
push
clc
xor
fst
pop
xchg
jnp
push
aaa
sahf
push
and
mov
jbe
xchg
and
fstp
fcom
pop
shr
movs
mov
ret
adc
sbb
adc
lods
add
add
sti
enter
mov
popa
aam
daa
in
fiadd
add
adc
inc
call
sbb
loopne
sub
and
mov
xor
xchg
cmps
push
xor
pop
idiv
mov
pushf
test
les
test
test
add
adc
or
rol
inc
push
(bad)
enter
adc
or
lods
or
and
jge
and
mov
adc
add
pop
jmp
push
mov
jne
mov
int3
or
imul
dec
outs
push
add
es
enter
add
push
jmp
mov
call
retf
loope
sbb
add
add
xchg
and
in
shr
sbb
push
or
adc
in
and
push
and
stos
add
cmp
outs
add
push
test
add
cld
cmp
test
mov
mov
mov
hlt
jno
xchg
test
test
cld
mov
mulps
xchg
xchg
mov
cmp
push
imul
or
pop
or
mov
je
and
mov
ret
adc
push
mov
jle
loope
icebp
clc
xchg
lahf
or
cmp
push
xor
cli
cmp
xchg
test
pop
gs
lahf
loop
xchg
add
rcl
mov
dec
cmp
sub
es
ret
dec
inc
cwde
push
aas
mov
cdq
cmp
jmp
push
add
mov
or
xchg
mov
or
ja
mov
test
lock
or
cmp
inc
mov
inc
mov
rcl
out
inc
movs
sbb
mov
xor
mov
adc
mov
cmp
mov
or
mov
cmp
and
popa
jmp
or
pop
inc
adc
add
add
and
mov
push
shl
fcomp
inc
dec
or
mov
mov
sbb
sub
loopne
sbb
retf
pop
sbb
add
mov
inc
mov
adc
dec
xchg
sbb
add
dec
mov
aaa
xor
and
add
jg
out
mov
or
add
push
movzx
inc
ret
jbe
mov
mov
movs
inc
cli
shl
push
or
cmc
ds
ret
xor
push
xor
or
into
test
sbb
call
fidivr
jge
mov
scas
cli
mov
xchg
inc
clc
or
xchg
nop
jmp
out
lods
xor
pop
lahf
push
and
adc
test
ret
push
cld
sahf
loope
inc
inc
bound
and
int3
and
or
pop
mov
out
adc
inc
jno
retf
mov
add
dec
push
jmp
sub
pop
or
mov
bound
ss
cdq
ret
jle
inc
sub
(bad)
mov
nop
push
icebp
sbb
mov
jo
xlat
or
xor
fadd
jo
sbb
push
jo
(bad)
lock
add
xchg
xchg
pushf
inc
mov
xchg
push
dec
rol
push
imul
mov
jle
repz
dec
push
xchg
push
movs
mov
dec
add
(bad)
test
inc
sub
cmp
adc
mov
inc
in
pusha
add
xchg
add
xchg
cwde
add
rcl
test
pop
mov
out
lods
jmp
cwde
repnz
push
push
pop
dec
pop
inc
dec
movs
pop
sbb
inc
mov
push
sub
(bad)
mov
cmp
aad
out
or
sub
lock
push
dec
xor
sti
push
jnp
stos
scas
loope
lock
push
add
inc
ss
nop
xor
rol
rcr
xor
ja
xchg
and
not
(bad)
mov
in
test
test
adc
sub
aaa
mov
and
push
sbb
push
mov
fnstsw
(bad)
sub
push
dec
push
loopne
mov
sub
sar
push
dec
dec
jge
lods
test
push
sub
mov
pusha
add
push
xchg
adc
sbb
mov
push
test
(bad)
cmp
dec
ins
movs
jmp
mov
pop
mov
enter
test
inc
mov
popf
dec
fimul
cld
xor
adc
outs
jo
pop
pop
pusha
add
inc
(bad)
fsubr
pop
lods
pop
mov
xor
sti
jo
mov
dec
xchg
cmp
mov
and
sbb
pop
dec
lds
mov
sbb
fmul
and
pop
xor
pop
mov
xchg
test
push
mov
(bad)
push
add
xchg
mov
cmp
mov
inc
mov
inc
xor
inc
lock
fwait
mov
mov
popf
daa
push
or
adc
mov
inc
dec
xabort
les
pusha
jne
sub
xchg
lea
test
pop
mov
jmp
ins
(bad)
mov
and
outs
or
shl
cmps
push
pop
mov
or
cmp
adc
icebp
(bad)
or
xchg
mov
adc
mov
cmc
adc
mov
push
or
inc
and
imul
in
loopne
lock
mov
clc
push
xor
inc
and
push
adc
or
ret
loopne
faddp
mov
mov
mov
pop
movs
and
test
in
mov
movs
jo
push
add
inc
and
or
or
aaa
fiadd
(bad)
mov
retf
push
adc
mov
jmp
adc
mov
add
ror
call
push
(bad)
fs
or
sbb
dec
and
outs
cld
pop
push
cmp
lock
and
ss
add
mov
push
add
sbb
fcomp
dec
add
jo
inc
push
jne
adc
cmovbe
adc
adc
add
push
ss
adc
dec
aas
ret
dec
sti
sbb
sub
or
inc
add
or
rcr
pop
cmp
push
gs
sub
jbe
jb
xchg
test
out
pop
sbb
mov
inc
push
clc
add
mov
cmp
mov
inc
mov
or
add
dec
aaa
dec
pop
xor
push
adc
out
bound
push
mov
fs
and
ret
pop
ins
ins
pop
je
jle
cmp
xor
adc
jnp
pop
not
adc
(bad)
and
xor
and
aas
dec
les
movs
rcr
out
add
call
and
call
jmp
loope
xchg
mov
lds
xchg
pop
pop
dec
pop
adc
cmps
push
inc
sub
mov
daa
cmc
push
and
out
int3
shr
sbb
mov
cmp
cmp
in
adc
ins
add
arpl
add
aad
mov
sub
cmps
fadd
pop
aaa
or
outs
add
mov
or
cmp
setb
push
jb
and
and
pop
fcom
(bad)
push
cwde
jno
add
mov
jp
inc
popa
or
xor
aas
sbb
sub
jo
out
and
sbb
lock
retf
or
inc
sbb
xor
inc
pop
pusha
jnp
inc
lock
scas
fadd
popa
mov
dec
test
dec
and
lock
adc
push
jge
cmp
xor
dec
sbb
lock
inc
jo
or
repz
cmp
add
and
mov
inc
jo
inc
mov
arpl
aas
hlt
cmp
lods
movs
lock
add
inc
std
imul
and
jmp
sbb
jnp
mov
add
and
or
mov
es
fadd
inc
adc
leave
push
add
dec
bound
xchg
les
xor
lds
dec
or
aaa
sar
pop
clc
lahf
das
ret
aaa
test
lock
dec
pop
cmp
cld
popa
int
push
(bad)
sbb
imul
or
inc
push
les
dec
adc
test
sub
cmp
push
loopne
repnz
test
mov
push
adc
pop
add
mov
or
mov
dec
inc
lea
xor
mov
js
stos
dec
cmp
push
push
(bad)
add
xor
or
cmp
mov
mov
daa
mov
daa
loope
add
sbb
mov
inc
mov
ss
cmp
xchg
test
add
add
lock
push
loopne
hlt
mov
mov
mov
imul
push
sub
or
dec
push
jmp
sub
pop
int
mov
inc
imul
sub
mov
jns
mov
dec
call
aas
cli
xor
dec
cdq
sti
loopne
fdiv
fist
push
sbb
add
push
loopne
outs
or
jmp
or
add
push
push
pop
es
mov
jp
and
push
push
sub
pop
sub
loopne
xor
inc
dec
push
add
jbe
xchg
pop
dec
cwde
mov
ss
std
cmp
adc
cld
cwde
ficomp
or
mov
fld
inc
push
cmp
inc
dec
add
dec
jne
add
setno
xor
dec
cwde
xor
sub
push
push
inc
sub
pop
sbb
ret
cmp
push
enter
outs
jge
xor
aad
push
in
leave
adc
add
ror
punpcklbw
add
inc
mov
add
lock
in
adc
xchg
add
fidiv
mov
std
pushf
ror
xor
mov
sbb
imul
movs
or
fdivr
mov
add
add
lea
loopne
lds
adc
bound
and
sbb
sti
adc
push
addr16
add
inc
sub
cmp
aas
mov
mov
ror
(bad)
fild
xchg
or
push
mov
jmp
mul
aaa
in
pop
adc
js
das
push
push
sub
shl
inc
aad
mov
paddb
jne
(bad)
pop
add
sub
jae
add
xor
ret
adc
rol
add
enter
sbb
adc
loop
adc
inc
and
dec
push
jae
push
ja
outs
or
xor
mov
sbb
pop
and
cs
sub
bound
outs
and
xor
and
aaa
inc
and
das
or
pop
and
push
mov
xchg
and
mov
fistp
sub
mov
pushf
popf
xchg
push
pop
push
push
and
into
push
adc
add
add
and
xor
sbb
or
jge
sbb
pop
push
pop
imul
push
mov
dec
imul
out
dec
add
push
or
xor
inc
adc
push
and
movs
jecxz
inc
push
and
or
cld
(bad)
sub
icebp
aam
ins
sbb
imul
repz
rcl
dec
in
les
or
add
inc
inc
jg
add
fcmovnbe
int
jle
jmp
push
push
mov
and
pop
popa
cmp
mov
loopne
(bad)
ret
dec
ins
and
scas
aam
cli
lock
fcomp
add
in
push
push
or
(bad)
sub
es
or
ins
mov
add
adc
or
aad
popa
adc
das
imul
push
nop
rdpmc
ja
je
mov
xor
addr16
popf
out
push
mov
xor
dec
push
aam
dec
push
pusha
ins
rcr
imul
ins
daa
mov
or
test
sub
pop
pop
pop
jno
cmps
xor
jns
xor
add
mov
pop
fistp
cdq
adc
outs
or
or
shl
jne
dec
scas
push
jbe
mov
nop
pop
in
dec
lock
mov
push
pop
jo
cmp
dec
xor
dec
or
sbb
ret
xchg
(bad)
out
push
add
add
or
sahf
daa
repnz
dec
push
or
loopne
sbb
sbb
add
xor
sti
jle
stc
adc
add
push
push
ret
(bad)
arpl
je
dec
ins
add
retf
or
sbb
std
shl
inc
add
outs
arpl
cmp
fs
dec
arpl
mov
(bad)
pop
mov
add
jmp
das
rcl
lahf
push
cld
arpl
lods
ins
inc
je
inc
push
jl
addr16
jo
fadd
push
nop
imul
stc
mov
outs
xor
imul
inc
sub
mov
and
jb
or
add
in
cmp
cmp
fcom
mov
mov
aas
add
xchg
jno
inc
or
test
push
push
iret
fld
sub
aam
(bad)
push
xor
and
cmp
test
cmp
jns
daa
loope
mov
mov
dec
aam
and
mov
xor
mov
inc
test
push
cli
jb
ja
push
push
cs
pop
pop
daa
cmps
aas
jb
dec
pop
cmps
push
lock
es
pusha
or
ror
pop
movs
dec
cmps
test
add
push
add
sahf
cmps
test
dec
pop
(bad)
and
movs
dec
cmps
adc
dec
jmp
inc
and
cmps
mov
pop
inc
sbb
inc
rol
push
out
test
push
jb
cmp
pushf
shl
push
add
outs
inc
dec
sbb
daa
leave
(bad)
or
pop
inc
in
fs
push
sahf
retf
arpl
sub
inc
js
cmp
or
mov
int3
mov
jo
int
or
bound
mul
add
gs
ja
add
jae
sbb
mov
jl
fcos
(bad)
dec
loopne
and
lds
cmp
and
xor
pop
movs
ins
lock
cmp
jg
aad
and
and
movs
stos
mov
and
ror
cmp
data16
adc
mov
pop
in
push
adc
xchg
stos
dec
leave
adc
push
xor
mov
sbb
xor
aas
adc
xchg
stos
push
adc
dec
pop
or
sti
mov
sbb
mov
loope
or
ss
pop
imul
mov
and
push
adc
(bad)
fbld
adc
and
(bad)
in
scas
(bad)
mov
hlt
push
add
ror
bound
call
adc
or
and
inc
mov
cmps
add
or
xchg
pop
and
in
mov
jmp
jne
cwde
sub
sub
or
sub
sbb
cs
xchg
or
das
or
inc
or
adc
cmp
ins
add
add
xor
outs
daa
or
add
or
mov
xchg
retf
adc
retf
xchg
xchg
xchg
mov
xchg
xchg
xchg
xchg
ds
retf
ja
xchg
xchg
xchg
xchg
pop
and
lock
cmp
xchg
xchg
xchg
mov
xchg
retf
and
imul
xchg
test
test
cmp
jnp
cmp
es
shl
push
enter
rol
mov
fldenv
push
jl
pop
add
mov
adc
inc
mov
hlt
cmp
or
mov
or
mov
pop
dec
add
cmp
jnp
or
ret
lock
loop
sbb
ret
jl
sub
iret
sub
pop
rol
pop
push
add
scas
jnp
add
jmp
inc
inc
sbb
pop
call
and
retf
add
lds
adc
pop
xchg
xchg
(bad)
sahf
xchg
movs
in
les
sbb
jle
jno
push
scas
jg
jbe
adc
mov
out
sub
repnz
scas
dec
mov
pushf
mov
out
or
pop
or
and
add
inc
xor
mov
out
dec
cmovb
xchg
loop
sbb
fcmovb
xor
ss
or
sub
or
cmp
test
cmp
dec
fistp
pop
mov
test
xchg
das
inc
clc
imul
sbb
inc
jne
xchg
push
jo
loope
mov
pop
mov
adc
(bad)
or
and
mov
ins
push
gs
xchg
sbb
add
pop
xor
adc
fiadd
inc
and
scas
jg
in
sahf
inc
loopne
call
cmp
mov
mov
iret
mov
and
in
jl
cmp
pusha
jb
mov
jle
or
jecxz
ins
ss
cmp
mov
xor
push
xchg
xchg
pop
pop
std
xchg
add
mov
push
test
xchg
xor
xchg
jmp
push
cmp
mov
fadd
inc
call
sub
fiadd
xchg
pop
push
aas
adc
test
mov
sbb
mov
das
push
pusha
dec
sbb
(bad)
adc
pop
adc
test
out
in
sub
sbb
add
sub
and
adc
add
cli
and
mov
and
js
xchg
mov
pop
add
adc
sbb
pop
xor
push
mov
mov
xchg
dec
dec
sbb
or
call
push
adc
mov
or
push
repz
or
lock
or
push
jae
and
add
xchg
adc
cmps
hlt
mov
rol
hlt
je
pop
and
int3
fwait
and
mov
and
mov
or
(bad)
dec
jmp
lock
mov
test
hlt
lea
pop
les
pop
push
mov
mov
or
dec
(bad)
lods
in
aas
sub
cwde
add
mov
sub
add
adc
sub
pusha
cs
aam
scas
xchg
das
xor
popa
and
add
inc
mov
push
loopne
inc
call
cdq
xor
push
sub
xor
push
inc
leave
xor
add
jae
sub
aaa
add
por
add
inc
call
adc
sti
xlat
scas
sub
fisub
gs
pop
dec
push
rcr
cmp
lar
push
mov
cmp
mov
mov
ins
imul
pusha
ror
mov
shl
pop
push
or
lahf
inc
or
jb
cmps
mov
lock
push
clc
movs
dec
add
mov
or
dec
mov
xlat
inc
xchg
stos
in
inc
inc
or
xor
test
aam
dec
pop
mov
inc
sbb
ror
rol
cli
shl
dec
push
inc
push
inc
dec
dec
push
inc
push
inc
dec
dec
sbb
xor
pop
push
inc
and
pushf
dec
xchg
add
ror
add
push
fst
in
dec
push
loopne
stc
lea
fs
outs
xchg
mov
in
fadd
and
ins
xchg
mov
fs
and
lea
in
and
fs
sbb
or
sbb
call
sbb
sbb
js
mov
sbb
mov
pusha
xchg
sbb
test
jmp
sbb
sbb
sbb
mov
inc
sbb
sbb
addr16
mov
sbb
mov
sbb
call
dec
pop
loopne
push
and
imul
inc
mov
outs
sub
mov
push
bound
push
jge
or
in
jo
test
pop
adc
push
call
enter
scas
push
jmp
push
push
xchg
das
cmp
mov
sar
jl
cld
ror
shl
test
cmp
mov
lods
push
xor
pop
les
icebp
add
ja
pop
adc
adc
dec
inc
or
pop
popa
sub
cmp
je
add
inc
jnp
mov
mov
or
mov
lahf
inc
xor
jb
and
adc
sub
inc
dec
jae
jb
mov
add
int3
adc
add
push
cdq
add
inc
imul
push
test
xor
and
inc
pop
leave
and
xlat
movs
xchg
out
pop
sub
inc
add
neg
les
mov
push
outs
and
and
ret
ret
jo
adc
inc
and
lds
mov
dec
daa
and
or
xor
call
mov
add
outs
or
pop
cwde
aas
std
mov
sub
adc
xchg
add
add
pop
adc
iret
paddw
or
adc
adc
xchg
sbb
cmp
add
out
mov
ret
dec
mov
or
loopne
dec
push
les
cli
add
mov
out
dec
arpl
pop
das
int
inc
inc
movs
inc
pop
push
add
jmp
lds
pop
and
adc
pusha
jo
xchg
sbb
sbb
or
and
in
or
mov
je
int3
mov
popa
xchg
inc
xor
add
dec
mov
jl
rcl
cmp
inc
pop
xor
pop
sub
xor
push
push
jmp
sar
lds
sub
in
push
ror
(bad)
loopne
xlat
mov
nop
in
adc
sub
dec
retf
or
sub
jae
inc
aad
mov
inc
add
idiv
cld
mov
movs
push
push
jae
inc
sub
push
fmul
and
and
sub
test
inc
add
jae
or
imul
das
jne
dec
adc
xor
sub
mov
dec
sbb
add
sbb
adc
push
inc
test
mov
push
jns
mov
fdiv
lods
xor
jae
sub
or
inc
adc
pop
dec
out
in
inc
or
cmps
std
add
mov
fild
add
add
retf
in
xor
xchg
jg
adc
cmps
mov
xchg
call
lahf
add
aaa
popa
jl
add
xchg
xor
mov
push
adc
fisttp
clc
add
mov
call
push
push
jbe
or
dec
pop
inc
cwde
ror
jns
cmp
dec
rol
add
add
lds
sbb
xchg
(bad)
retf
add
or
inc
js
add
adc
pop
sub
cmovbe
pop
aaa
add
jne
ins
std
call
js
add
dec
shr
jle
cmp
push
faddp
aaa
add
dec
mov
mov
shl
pop
jl
ret
ss
leave
lds
adc
rcl
mov
pop
popf
add
add
cmp
inc
or
add
sbb
clc
call
cmps
inc
adc
bound
or
test
and
mov
lea
cdq
test
pop
add
mov
or
cwde
daa
cmp
pop
and
sub
inc
pusha
cmps
daa
mov
add
daa
mov
(bad)
shl
push
ins
scas
pop
and
out
call
xchg
sub
les
outs
sbb
or
adc
adc
push
scas
mov
cs
mov
sbb
sbb
or
push
mov
sub
jmp
mov
sbb
daa
outs
push
mov
stc
pop
sbb
mov
lods
sub
dec
mov
and
nop
sub
lea
mov
cmps
sbb
sub
add
sub
or
sysexit
pusha
stos
mov
or
in
add
add
or
in
xor
mov
lahf
add
sbb
mov
cmp
xor
xor
jmp
fwait
in
test
cmp
out
adc
popa
or
pop
jg
(bad)
in
jmp
enter
mov
in
sahf
sub
jno
enter
mov
enter
dec
jno
mov
enter
add
and
and
(bad)
jmp
jnp
cmovb
mov
loopne
movhps
push
push
sbb
push
retf
and
dec
cmps
sub
sbb
mov
aam
sar
retf
mov
push
add
movs
and
or
jnp
xor
sub
xchg
(bad)
cmp
pop
cld
mov
sub
montmul
cmps
add
and
xor
sub
or
gs
or
push
loopne
xchg
in
loopne
xchg
cmp
fsub
sti
and
sbb
or
add
imul
ins
stc
mov
in
call
or
shl
xlat
pop
hlt
push
retf
jg
xchg
fadd
push
in
ds
js
cwde
mov
dec
or
inc
sbb
add
mov
or
cwde
mov
ret
ror
xchg
xor
inc
add
mov
or
dec
mov
inc
js
sbb
mov
mov
or
mov
add
inc
adc
inc
pop
jl
ja
dec
mov
push
rol
imul
std
pop
cwde
pop
add
cs
or
mov
es
mov
pop
mov
outs
bound
push
jno
ins
(bad)
mov
add
js
or
pop
in
jmp
cmps
sub
mov
sbb
outs
retf
bound
mov
push
cmp
in
sbb
cdq
loopne
mov
or
xor
jg
cmp
mov
je
(bad)
es
mov
(bad)
jle
rcl
fist
mov
cwde
mov
inc
lods
std
call
stc
fstp
fwait
cmp
jge
mov
fdivr
mov
clc
lea
mov
cmp
fmul
jmp
push
dec
jno
sub
(bad)
xchg
pop
enter
and
mov
mov
jb
call
and
lahf
or
rol
pop
sub
loop
sub
mov
lds
sbb
dec
and
cmc
inc
idiv
mov
mov
std
jl
xchg
and
add
sub
inc
pop
xchg
sbb
or
dec
and
adc
dec
shl
das
call
mov
adc
shr
push
jbe
cwde
mov
inc
inc
mov
mov
push
pusha
test
icebp
add
jb
jp
enter
pop
daa
add
aas
jl
add
ins
and
add
fcmovu
or
iret
inc
pop
pop
mov
add
(bad)
rcr
mov
mov
dec
adc
popa
add
mov
pop
jmp
xor
xchg
mov
pop
aaa
sub
out
cld
cmp
mov
push
sti
mov
in
iret
mov
pop
icebp
adc
jo
jge
test
jnp
inc
test
mov
test
jle
push
imul
xchg
and
pop
mov
add
cmc
mov
xor
loopne
add
inc
add
inc
in
loopne
add
(bad)
add
arpl
and
fimul
mov
mov
pop
push
(bad)
mov
(bad)
rol
add
test
addr16
pop
xchg
cwde
mov
div
and
mov
pop
mov
push
ret
(bad)
xchg
push
rcl
icebp
push
add
shl
mov
or
adc
test
mov
mov
jne
js
test
push
push
dec
mov
push
cmp
inc
sub
sub
mov
daa
stos
out
push
pop
mov
pop
mov
out
(bad)
push
add
enter
or
jmp
mov
popf
popa
push
xor
(bad)
cmc
test
nop
or
outs
aad
or
rcr
xchg
add
imul
cs
retf
int
xchg
xor
mov
and
add
xor
sar
pusha
jmp
mov
and
enter
cmp
outs
push
outs
add
sub
jnp
scas
stos
and
add
dec
add
push
xor
mov
mov
mov
out
and
inc
adc
jne
and
fstp
or
xor
sar
cmp
or
mov
sub
sub
sub
sar
jg
push
add
cld
cmp
jl
push
push
push
jl
mov
loopne
popa
mov
adc
and
cli
add
sbb
mov
pop
inc
jne
in
xchg
in
add
inc
cmp
out
lods
mov
cmp
adc
inc
loopne
push
push
push
pop
cmp
or
pop
push
jmp
loop
mov
push
mov
das
add
push
xor
ja
std
add
sub
jae
push
mov
xor
arpl
inc
lods
xchg
arpl
pop
dec
add
inc
cmp
push
mov
ret
dec
mov
mov
jle
das
lods
and
cmp
push
sahf
sub
add
add
push
add
pop
lea
xor
aas
shr
lods
sub
xor
cmps
xor
cdq
sbb
pop
jmp
mov
push
push
pop
cmp
sub
test
bound
scas
cmps
add
mov
inc
rcl
push
fisub
jae
inc
dec
xor
pop
mov
inc
or
aam
(bad)
cwde
add
loopne
xor
mov
out
stc
cld
in
or
loope
ret
dec
push
dec
or
loope
mov
data16
pop
push
mov
lock
xor
sub
aaa
outs
inc
adc
inc
add
sbb
push
or
nop
mov
adc
cmp
mov
cmp
or
mov
pop
mov
pop
out
pop
mov
add
int3
pop
add
push
add
movs
je
add
nop
ret
push
adc
or
and
inc
pop
add
test
cmp
fld
mov
in
ss
add
jmp
mov
sub
ins
movzx
add
jnp
clc
cmp
add
and
retf
xor
dec
jl
add
and
das
pushf
jmp
push
mov
sub
sub
adc
jne
adc
or
rcl
fwait
lods
out
in
aas
sbb
and
test
and
sbb
mov
imul
cmp
test
pusha
mov
add
mov
adc
xchg
je
add
lock
mov
mov
xchg
push
leave
jbe
ins
aas
sahf
adc
sbb
and
call
add
cmp
or
or
push
and
or
cmp
dec
imul
aas
scas
sbb
jmp
push
clc
cmp
or
mov
pop
lock
test
jl
std
adc
ffreep
ins
inc
jmp
(bad)
mov
cmp
or
xor
shl
ins
loop
or
inc
jle
mov
sub
in
je
cli
mov
mov
mov
cmps
push
ret
sbb
(bad)
sub
aaa
retf
and
jmp
je
mov
push
xchg
or
inc
add
hlt
mov
xor
add
out
cmp
loopne
outs
scas
clc
pop
or
and
inc
or
add
adc
data16
cmp
pop
mov
jmp
xor
lock
mov
leave
rcr
mov
push
xchg
dec
mov
sub
adc
xchg
sbb
pusha
cdq
lods
dec
bnd
xor
test
adc
add
add
ret
sbb
cmp
fwait
jae
test
leave
shr
xchg
xlat
or
mov
enter
mov
mov
xchg
or
mov
jo
sub
push
xchg
test
(bad)
dec
adc
call
and
xor
mov
imul
mov
fdiv
mov
sub
test
jmp
je
push
sti
sub
or
in
or
shl
(bad)
gs
bound
or
and
adc
inc
xchg
and
sub
loopne
inc
ds
pop
or
mov
xchg
hlt
div
add
nop
sub
inc
add
ret
pop
add
adc
and
xchg
xchg
rcl
and
js
push
jg
mov
mov
gs
pop
add
call
pop
aas
mov
or
daa
gs
(bad)
in
xor
fmul
or
inc
and
or
sbb
and
cmps
xchg
mov
jne
sub
test
jmp
cmp
neg
bnd
sub
add
push
or
dec
dec
sbb
ror
jnp
dec
arpl
sub
es
pop
aam
xor
idiv
push
inc
hlt
sub
jns
push
mov
shr
inc
dec
ret
pop
push
clc
jns
mov
jecxz
lock
sbb
adc
popa
or
nop
xchg
jg
jg
daa
xchg
push
jne
mov
inc
inc
pop
add
add
and
jo
adc
rol
mov
sbb
or
push
lods
xor
pop
xchg
aaa
nop
imul
xchg
retf
mov
shr
shl
sub
and
xchg
test
test
cmp
push
inc
add
mov
dec
in
shl
inc
push
sbb
add
mov
adc
inc
xchg
fbstp
jecxz
jbe
shl
lahf
or
add
dec
push
and
icebp
mov
sbb
lods
pop
mov
loop
inc
mov
pop
in
mov
jge
push
call
mov
inc
dec
clc
stos
jg
or
clc
lea
mov
add
add
add
and
mov
mov
nop
or
sar
add
movs
aad
mov
ret
fild
jle
cmps
or
das
scas
je
movs
push
mov
and
mul
test
out
mov
sub
mov
popf
sbb
mov
loopne
icebp
cwde
fst
popa
mov
pop
ss
jecxz
add
lock
or
pop
push
adc
and
and
rol
add
inc
pop
cmp
add
js
xor
inc
jmp
leave
pushf
sbb
inc
xor
mov
das
test
dec
sbb
lahf
or
idiv
ftst
cmp
push
repnz
frstor
dec
push
call
or
dec
add
shl
scas
cmp
mov
inc
lea
xchg
sbb
ins
mov
pop
daa
add
pusha
jmp
jmp
sbb
xor
pusha
or
mov
pop
je
dec
and
setno
lods
xor
dec
adc
cmp
mov
fcomp
js
add
stos
adc
add
jne
out
and
push
test
fiadd
jecxz
test
sbb
test
adc
shl
add
or
push
pop
inc
test
adc
dec
arpl
inc
jg
inc
call
add
js
pushf
sbb
scas
dec
or
pop
popa
cmp
adc
mov
stos
add
xor
cmp
inc
add
(bad)
and
xchg
sbb
push
sbb
stos
dec
inc
cmp
jp
mov
or
loop
dec
sbb
fs
fiadd
add
add
fild
jl
jb
adc
pusha
sub
and
xor
stos
add
fnstsw
push
bound
lods
or
rol
pop
sbb
imul
cmps
es
ja
sbb
add
mov
mov
xor
inc
xchg
dec
jo
jp
inc
fadd
outs
add
mov
push
mov
lea
pop
add
aaa
add
shl
fisub
dec
enter
rol
xchg
sbb
mov
pop
in
or
jae
shl
mov
pop
mov
add
jo
mov
mov
push
add
arpl
pop
rol
add
fld
lahf
add
jmp
add
fs
add
addr16
jmp
dec
les
dec
jbe
dec
je
por
or
cmp
adc
or
retf
ins
xlat
dec
popf
lods
push
and
fsub
pop
test
and
data16
or
add
pop
cli
sbb
out
inc
add
and
sub
inc
movups
sub
xchg
movs
mov
fmul
(bad)
(bad)
sbb
jne
xchg
dec
adc
mov
jg
pop
inc
div
loopne
xor
adc
inc
jmp
or
mov
pop
scas
scas
adc
jo
outs
sar
lea
add
cmp
or
inc
mov
adc
inc
push
xchg
sub
iret
and
loopne
adc
xchg
cwde
std
pop
inc
sub
mov
fs
mov
syscall
xor
ja
jne
test
dec
fisubr
inc
pop
sbb
push
(bad)
(bad)
mov
scas
mov
dec
or
or
add
xchg
movs
pusha
jo
lods
inc
popf
pop
scas
loopne
inc
addr16
fild
cs
dec
and
aas
inc
inc
int3
push
mov
dec
test
push
int
retf
adc
or
sbb
mov
mov
call
(bad)
jne
inc
sub
xor
adc
retf
out
inc
sub
fld
or
shr
not
sub
xchg
add
add
(bad)
hlt
jo
cmp
mov
lods
fidivr
out
jne
mov
xchg
popf
mov
pusha
push
inc
daa
add
je
jge
movs
mov
inc
fcom
push
mov
inc
ret
add
xchg
lock
scas
add
push
jbe
xlat
sbb
dec
or
xchg
shr
xchg
push
jge
pop
dec
(bad)
in
add
add
adc
xor
sbb
xchg
(bad)
dec
jge
pop
adc
adc
jo
adc
shl
push
xor
shl
jmp
jo
rcr
lds
add
call
xchg
hlt
and
adc
cmp
and
jb
and
imul
mov
mov
jl
cmp
xor
stos
nop
sbb
or
xchg
cmp
push
pushf
and
sbb
jecxz
cmp
stos
cmp
jmp
mov
mov
adc
pop
pop
(bad)
aaa
add
aam
jns
js
(bad)
mov
pop
push
add
dec
add
add
add
dec
lahf
or
inc
iret
daa
adc
or
pop
addr16
add
sbb
or
push
js
adc
cmp
jge
repz
ja
(bad)
arpl
or
fsubr
cld
out
xor
jne
sar
out
pop
mov
lea
and
cmps
sbb
cmp
cmp
or
stos
mov
jnp
mov
mov
nop
mov
add
cmp
and
or
add
call
ror
sbb
inc
sub
movs
rol
leave
xor
imul
cmp
pop
fiadd
loope
aaa
jnp
mov
ror
enter
xchg
rol
cmps
in
mov
(bad)
dec
jne
les
(bad)
cmp
clc
jg
mov
dec
call
fild
fiadd
jne
jne
call
(bad)
dec
mov
loopne
inc
add
mov
dec
mov
cmp
or
cld
jbe
pop
mov
fwait
jns
js
out
hlt
add
loopne
out
dec
leave
add
in
push
adc
cs
ror
mov
fild
adc
mov
int
loope
and
test
pusha
aaa
add
in
enter
inc
repz
inc
call
lea
mov
adc
add
clc
cmp
loopne
inc
push
pop
inc
sub
dec
sub
call
add
dec
call
add
sbb
out
loope
pop
add
fwait
scas
pop
add
lods
nop
jl
jl
inc
push
xor
xor
xor
and
jne
movs
sub
add
add
xor
add
xlat
inc
adc
xlat
or
(bad)
(bad)
test
sbb
je
jg
push
fdivr
mov
aad
add
pusha
(bad)
push
ins
mov
dec
imul
imul
dec
cwde
cmp
fdivr
cwde
ds
andnps
rcr
sub
jmp
ins
shr
add
loope
and
mov
aam
dec
xor
jns
js
cmp
push
and
jg
jp
mov
inc
pusha
jl
push
pop
pop
bound
loop
push
mov
add
addr16
add
add
inc
dec
stos
sub
dec
or
sbb
jmp
sub
push
add
and
lods
sbb
les
and
(bad)
inc
xchg
nop
loopne
ds
push
out
outs
add
jl
sub
cmp
je
adc
repnz
push
pusha
add
outs
ins
bound
or
pop
or
sbb
in
gs
add
mov
jecxz
dec
and
out
xchg
jp
ins
jns
adc
pop
les
adc
dec
push
mov
ins
fld
or
sub
adc
adc
cmp
cmp
push
(bad)
and
adc
je
in
adc
sub
(bad)
into
or
mov
push
jo
jb
xchg
xor
mov
or
ret
sti
je
jae
adc
fldenv
add
xlat
or
mov
fmul
nop
js
lods
inc
outs
outs
mov
shl
push
imul
adc
jo
dec
call
jns
gs
out
sbb
pop
sbb
bound
sbb
es
adc
mov
inc
xor
sub
fstp
mov
jecxz
adc
popa
mov
push
fist
enter
or
and
mov
or
and
je
xor
and
rol
or
imul
mul
sbb
shl
fsubr
aaa
inc
neg
and
outs
rcl
push
xchg
ss
cmps
push
(bad)
dec
inc
test
pop
movs
inc
add
stos
xor
adc
inc
fisubr
push
jge
popa
push
rol
or
or
dec
mov
adc
xor
in
add
or
cmp
or
das
xor
xlat
test
pop
gs
mov
push
xor
sbb
in
sbb
lea
mov
sub
jbe
ret
sbb
mov
xor
js
adc
push
mov
and
(bad)
or
scas
adc
fdiv
imul
sub
sbb
(bad)
in
mov
gs
(bad)
sub
xor
int3
ret
push
out
xor
ret
cmp
es
dec
adc
addr16
cmp
ins
adc
adc
and
ins
mov
or
and
pop
sub
call
aas
inc
ins
jns
push
xchg
xor
sub
sub
xchg
xor
sbb
sahf
pop
in
rcl
ret
test
outs
dec
xchg
mov
arpl
mov
aam
ror
mov
adc
adc
add
ret
fdiv
xor
pop
adc
pop
fcomp
adc
pop
repz
push
leave
dec
jo
outs
sub
frstor
test
outs
pop
and
sub
sub
loope
sbb
push
sbb
(bad)
fdivrp
xor
push
adc
sbb
fdiv
movs
arpl
cmp
jl
aaa
imul
mov
inc
jo
sbb
fcomp
mov
jl
daa
or
jbe
lea
push
je
ins
inc
adc
dec
fdiv
fimul
mov
adc
pusha
push
inc
mov
cmp
ror
or
sbb
test
icebp
inc
cmp
inc
nop
(bad)
aad
adc
xor
push
sbb
das
mov
cs
(bad)
ins
sbb
cld
sub
fnstenv
sbb
daa
or
pop
(bad)
xor
dec
adc
add
out
out
pop
in
mov
push
call
sub
and
jecxz
jb
test
add
cmp
xchg
dec
fisttp
aad
outs
je
add
push
xor
sub
arpl
in
or
mov
fld
or
dec
pop
adc
enter
mov
in
push
les
adc
mov
popa
das
jmp
and
cmp
xchg
or
das
adc
mov
sub
jmp
mov
or
mov
pusha
cmp
pop
xor
or
lods
rol
cmp
jnp
mov
mov
sbb
mov
pop
add
and
popa
pop
dec
pop
sbb
adc
push
cmp
in
scas
pop
push
imul
outs
add
mov
xor
sbb
arpl
cmp
ins
adc
push
test
stos
aaa
push
add
gs
outs
lods
mov
and
pop
mov
add
stos
outs
jns
sub
mov
outs
fs
mov
imul
mov
ins
adc
rol
daa
mul
bound
daa
fcomp
(bad)
adc
ss
and
popf
fcom
mov
sbb
popa
jb
sbb
movs
shl
cmp
and
or
scas
hlt
sub
imul
push
nop
jne
xchg
adc
movs
or
arpl
cwde
(bad)
mov
or
pop
rol
or
or
iret
lea
cmps
scas
pop
and
scas
gs
push
sti
in
dec
fldenv
jmp
pusha
pop
mov
cmp
push
push
sbb
and
xor
add
cmp
dec
sbb
shl
mov
jbe
das
popf
sbb
pusha
xlat
(bad)
mov
push
pop
ins
push
xor
sub
rcr
xor
sbb
push
push
and
adc
cmp
push
ja
push
imul
iret
mov
jo
adc
sahf
inc
icebp
(bad)
ins
inc
sbb
aaa
in
adc
std
pusha
(bad)
cmc
ret
push
sar
push
xor
mov
sub
fwait
pop
and
lea
sub
and
adc
dec
sbb
or
(bad)
sub
pop
cdq
daa
ins
adc
pop
inc
adc
adc
or
jne
dec
inc
xor
(bad)
fadd
js
and
pop
cmps
js
mov
xor
inc
lods
popa
jo
dec
mov
xor
push
xor
out
sub
out
add
das
out
shl
xor
add
imul
cmp
pop
add
ja
adc
cmp
int3
adc
mov
or
or
aaa
cmp
aaa
mov
pop
inc
ins
lea
mov
mov
add
and
push
fcomp
sbb
scas
test
jns
and
popa
add
jnp
es
pop
(bad)
push
sub
cmps
or
adc
scas
dec
add
or
pusha
jbe
push
xadd
mov
mov
shl
or
jbe
int3
sbb
aam
sub
xor
scas
add
mov
ret
and
sbb
pop
addr16
das
sbb
mov
cmps
push
sbb
xchg
sbb
push
inc
sti
nop
pop
sub
sbb
push
das
lea
addr16
popa
ins
mov
ror
and
add
xchg
fdiv
leave
mov
sub
ins
adc
push
aas
pop
add
vmwrite
cmp
add
xor
arpl
adc
adc
shl
dec
mov
cmp
mov
pusha
popf
adc
pop
int
aas
addr16
leave
add
add
and
mov
imul
bound
daa
mov
cs
xchg
ret
mov
pop
push
jb
ja
and
adc
pop
adc
mov
inc
(bad)
mov
test
xchg
cmc
cwde
out
push
lods
add
mov
jnp
xchg
adc
mov
inc
pusha
dec
and
push
dec
(bad)
punpckhbw
imul
daa
not
fidiv
adc
add
mov
das
jo
mov
cmovbe
mov
push
jl
push
or
adc
push
jo
xor
add
shl
je
sub
and
and
sub
inc
sbb
popf
sbb
jnp
ins
xchg
lods
data16
xor
test
pop
test
add
call
out
mov
cwde
xor
jl
outs
hlt
push
lock
daa
sbb
jp
pop
sbb
into
call
fidiv
adc
(bad)
xor
clc
cmp
ins
das
addr16
jmp
and
push
dec
or
aam
push
jmp
jle
dec
outs
adc
(bad)
or
or
xor
inc
gs
xchg
jns
xor
sbb
aas
mov
lock
ins
adc
cmp
add
sbb
adc
xor
lods
pop
or
xchg
adc
inc
arpl
xor
int
test
jmp
aas
pop
arpl
adc
and
ss
add
dec
adc
das
cwde
and
and
or
push
xor
jmp
mov
add
lea
cmp
and
jl
inc
arpl
fwait
cmp
mov
adc
xlat
stos
inc
out
lea
sbb
shl
ss
dec
and
sub
shr
push
arpl
adc
daa
dec
mov
inc
cmp
(bad)
pusha
sub
sub
push
sahf
lock
sar
mov
jg
sub
sbb
sub
bound
cmp
mov
sub
fild
push
ret
out
ins
(bad)
aaa
pop
loopne
fistp
dec
outs
sbb
pop
mul
sbb
mov
mov
int
add
mov
mov
out
add
adc
sub
and
and
mov
outs
and
mov
cmp
fst
sbb
loopne
or
or
jmp
in
adc
cmp
dec
push
lods
xor
adc
sbb
add
in
sti
dec
outs
popa
aaa
adc
xor
add
pop
daa
std
and
push
fwait
and
adc
mov
sub
xchg
ret
adc
imul
and
sbb
test
sbb
ss
and
ins
ins
mov
inc
pusha
and
sti
mov
pusha
ins
jge
sbb
mov
sar
adc
xchg
jb
ss
and
sbb
mov
stc
daa
popa
adc
dec
push
adc
xchg
push
sub
pop
inc
xor
push
fwait
bound
daa
sti
inc
xor
sub
mov
inc
jns
xor
cmps
imul
fsubr
ins
mov
sub
adc
repnz
and
push
cmps
aaa
nop
cmp
stos
mov
shl
inc
(bad)
xchg
cmp
mov
add
adc
jo
cmp
jns
xor
test
pop
das
inc
fwait
pop
sbb
fnsave
ret
in
stc
sub
pop
mov
mov
cmp
lds
test
in
inc
pusha
cmp
stos
fdiv
cmps
jo
sbb
repz
sti
cmps
arpl
cmps
daa
sub
push
or
ins
or
sbb
adc
add
cmp
fadd
inc
rcpps
sbb
dec
ret
pusha
pop
mov
sbb
jns
rcr
ins
div
sbb
imul
sbb
xor
and
push
jmp
push
daa
addr16
xchg
ja
push
out
jbe
lods
sbb
sbb
inc
xor
add
test
aaa
sbb
imul
or
test
ja
fisttp
and
dec
ins
or
dec
inc
sbb
xor
push
or
pop
sbb
xor
and
rol
mov
shl
mov
ja
arpl
in
ds
outs
mov
mov
lock
movs
shr
outs
test
mov
push
imul
daa
test
lods
xor
add
fs
add
xchg
inc
and
ss
rol
inc
and
inc
pop
inc
daa
comiss
nop
outs
cmp
xchg
adc
aaa
(bad)
aaa
int3
inc
inc
cmp
je
outs
bound
movs
dec
sub
add
pop
mov
imul
or
lea
das
add
pop
xor
and
outs
cmp
jb
pop
jg
and
jg
jg
and
or
mov
xor
inc
adc
ja
popa
jae
popa
and
pop
das
add
and
mov
adc
(bad)
push
and
xchg
sub
retf
and
in
and
nop
xchg
sbb
inc
fs
push
outs
push
outs
sub
outs
push
outs
(bad)
mov
add
sbb
sbb
rcl
and
pop
and
call
and
dec
adc
jns
adc
mov
sub
repz
out
jecxz
push
or
ja
sbb
adc
fmul
int
popa
sub
xor
xchg
add
clc
adc
loope
adc
int3
xor
jo
ror
(bad)
(bad)
sbb
fadd
adc
psubq
xor
mov
or
inc
adc
xchg
mov
push
sbb
jb
(bad)
div
pop
push
mov
arpl
pop
push
lds
sti
dec
sbb
add
push
and
dec
adc
cld
aas
aaa
mov
or
hlt
xor
sub
(bad)
mov
mov
sub
jmp
dec
shl
sbb
das
push
adc
test
adc
je
ins
cmp
push
sub
popf
cwde
test
(bad)
std
pop
fadd
dec
and
pop
add
push
aaa
in
push
and
and
push
into
shl
xor
push
daa
push
push
fdivr
or
sub
adc
sub
mov
adc
test
push
jmp
adc
push
mov
or
stos
jb
sub
loopne
xor
jbe
sbb
scas
sbb
ins
(bad)
jmp
arpl
aas
gs
je
mov
adc
ds
aas
and
sbb
pop
dec
inc
jb
int
test
or
test
rol
mov
mov
pop
pop
sbb
or
add
mov
daa
mov
jecxz
imul
cmps
push
daa
test
adc
push
ins
jne
mov
mov
daa
out
and
sbb
sbb
ss
adc
xchg
aam
xor
lea
daa
aad
loopne
shl
je
dec
(bad)
or
fmul
and
or
lea
adc
sub
sbb
fwait
and
cmps
pop
(bad)
(bad)
or
sub
addr16
sub
mov
les
xchg
adc
and
adc
adc
into
add
rcl
daa
jns
inc
repz
das
imul
bound
scas
mov
je
adc
sub
sub
cmc
and
or
pusha
sub
jmp
push
and
lds
dec
je
jb
push
int3
or
daa
pop
sub
pop
lds
push
inc
push
mov
jecxz
bound
gs
jecxz
inc
push
ficomp
mov
mov
imul
or
das
mov
mov
push
nop
fsub
sub
mov
das
(bad)
nop
add
ss
test
movs
adc
xor
pusha
mov
pop
bound
inc
ja
add
daa
or
xchg
adc
test
ret
pop
pusha
repnz
out
(bad)
xchg
or
dec
and
push
(bad)
mov
sbb
fs
ins
addr16
in
fsubr
jne
cmp
les
pop
sbb
bound
test
dec
mov
outs
neg
enter
jae
enter
jae
pop
jb
add
jae
dec
enter
leave
sbb
jae
jge
or
je
dec
pop
jge
xor
pop
es
shr
out
push
jo
ret
jns
sbb
sbb
ja
jo
add
sub
cwde
push
sti
imul
jae
pop
stos
ins
test
pop
int
aad
mov
jge
into
aad
rcl
jb
add
or
cmp
sub
push
in
data16
pushw
lea
xchg
(bad)
adc
and
daa
(bad)
push
adc
mov
sbb
push
popa
bound
mov
cmp
or
mov
xor
push
push
pop
add
repnz
inc
ja
lods
inc
sub
adc
pop
inc
add
dec
ins
aaa
fwait
popa
test
xor
xor
movs
mov
and
pop
sbb
mov
mov
mov
cmp
ja
pop
or
popa
mov
push
inc
loope
mov
repnz
adc
dec
sub
mov
gs
lock
call
popf
xchg
add
fdiv
sub
jne
(bad)
sub
mov
test
repnz
push
inc
test
mov
fbld
shr
inc
xor
cmc
xchg
or
repz
or
(bad)
or
(bad)
or
ret
and
pop
and
(bad)
ret
adc
sub
fidivr
xor
inc
ficom
repz
push
xor
sub
xor
pop
xor
push
mov
icebp
das
dec
add
icebp
xor
sub
icebp
xor
sub
push
xor
(bad)
xor
and
inc
movs
xchg
sub
add
fild
mov
mov
popa
xor
add
mov
cmp
aaa
retf
sbb
add
cmps
xor
xor
rol
lds
or
or
sub
jmp
test
or
push
sub
js
je
or
or
stos
and
cmp
test
lods
cmp
jmp
daa
test
imul
add
jo
mov
fldenv
dec
ins
inc
clc
push
je
push
xlat
fdiv
or
test
popa
pop
out
add
fsub
xchg
movs
lea
daa
sti
jmp
and
cmp
cmp
shl
dec
stos
add
dec
sub
push
(bad)
fidiv
(bad)
adc
jb
sbb
lods
xor
sub
daa
pop
cmp
cmp
xor
sahf
out
sub
das
mov
mov
and
adc
pop
pusha
pop
mov
xchg
dec
lahf
and
lds
push
inc
or
lahf
sub
xchg
aam
and
aaa
xchg
push
addr16
test
cmp
or
rol
adc
call
xchg
in
neg
sub
jp
out
push
xchg
daa
jo
dec
or
add
dec
or
push
jb
test
and
shr
push
sbb
pop
sub
sbb
sub
shl
das
xchg
jge
mov
and
push
mov
lds
mov
std
inc
adc
pop
cmc
or
outs
inc
pop
and
ficom
jecxz
mov
adc
push
loopne
je
shr
loopne
ret
adc
push
mov
cmp
fnstsw
adc
adc
sub
sbb
ins
xor
adc
jnp
inc
imul
jno
sub
adc
(bad)
fdiv
sbb
sbb
jae
mov
sub
jae
jo
cmp
or
or
or
fnsave
and
xchg
xor
and
xchg
arpl
test
jns
daa
loope
cs
das
push
xchg
dec
pop
getsec
or
cmp
mov
xlat
cmp
loopne
pusha
adc
add
cmp
adc
stc
outs
outs
ins
and
xchg
dec
je
sbb
xchg
mov
ins
push
ins
inc
push
sbb
or
and
xchg
mov
dec
jb
(bad)
or
cli
fs
bound
add
je
mov
sbb
add
xor
add
and
mov
xor
addr16
sub
sbb
adc
lea
test
sub
fadd
sub
ins
sbb
xchg
mov
inc
addr16
rcr
nop
pusha
add
cmp
xor
sbb
push
retf
cmp
test
or
pop
mov
cmp
adc
add
lds
and
leave
xchg
dec
enter
sub
daa
cmps
add
or
daa
inc
xor
or
sub
xchg
add
das
in
add
jg
inc
sbb
mov
jg
das
les
inc
mov
adc
pop
sbb
push
dec
or
mov
xchg
pusha
cmp
arpl
jne
mov
rol
sbb
push
imul
push
pusha
cmp
je
push
and
aaa
add
fs
and
and
ret
mov
push
ja
inc
and
cmp
jne
adc
(bad)
adc
mov
adc
xor
jg
daa
inc
sub
or
or
fild
mov
sbb
int3
add
jg
xor
sbb
xchg
xchg
arpl
sbb
sbb
push
xor
or
test
or
int
lods
inc
daa
cmp
clc
dec
push
shr
or
xor
sbb
or
adc
or
adc
nop
lea
xor
retf
mov
add
sbb
mov
test
xchg
add
shl
push
or
dec
sub
push
mov
in
sub
and
jmp
add
sbb
(bad)
outs
mov
cmp
ins
daa
arpl
and
or
jno
mov
sbb
daa
unpckhps
and
push
or
inc
push
aas
imul
movs
or
sub
add
and
arpl
sbb
shl
pop
pop
ret
lea
pop
int
int3
push
movs
mov
ds
outs
xor
(bad)
sub
outs
aas
dec
mov
sbb
pop
jmp
sub
ja
gs
fmul
mov
push
das
dec
and
ins
call
cmovl
push
je
push
je
add
push
pop
dec
rcl
je
mov
inc
sbb
jmp
ins
pusha
pop
(bad)
dec
outs
dec
push
and
movs
push
add
inc
and
or
push
and
push
cmp
cwde
ja
mov
jbe
test
pop
imul
ss
jno
sub
sub
outs
or
in
pusha
adc
sub
or
cmp
add
popa
js
js
and
xchg
popa
js
js
test
inc
xor
pop
retw
mov
and
push
test
daa
cmp
ins
int3
inc
pop
and
test
mov
sbb
pop
pop
xor
mov
pop
inc
push
sbb
jmp
loopne
dec
push
and
sbb
inc
imul
dec
inc
dec
xchg
cmp
mov
sub
mov
jbe
fld
dec
xor
outs
xor
in
sbb
sbb
dec
in
bound
xchg
adc
dec
in
bound
xor
inc
and
lods
xor
fsub
jns
popa
js
js
ins
pusha
pop
xchg
es
pusha
inc
sbb
xor
mov
jne
lahf
push
sbb
scas
add
call
int
or
stc
pop
ror
mov
daa
test
pop
mov
xchg
fstp
ja
sub
les
sub
and
scas
pop
sub
and
adc
xchg
sub
sub
xchg
lea
ss
mov
and
ins
pop
mov
outs
or
sub
push
retf
mov
and
fsubr
inc
pusha
push
dec
lea
cmc
(bad)
movs
pusha
ins
inc
inc
pop
inc
bound
sub
push
and
sbb
cmc
and
rcl
xor
add
or
pop
and
and
and
and
and
test
pop
sar
or
je
bound
mov
xor
adc
sbb
mov
or
retf
aaa
and
push
mov
xchg
and
test
callw
mov
test
add
adc
add
out
(bad)
out
dec
inc
push
popa
pusha
and
or
gs
popa
pop
push
jne
or
cmp
sub
pop
adc
or
add
push
ficomp
dec
sub
enter
mov
in
inc
imul
iret
adc
mov
fnsave
mov
inc
dec
pop
xor
xor
and
xor
or
pop
ins
pop
inc
adc
mov
(bad)
loopne
jb
shl
popa
and
test
sbb
and
(bad)
mov
unpckhps
aad
adc
mov
pop
das
daa
xor
lods
add
pop
pop
and
lds
or
xor
ret
pop
hlt
xor
leave
push
and
mov
retf
mov
push
push
push
pop
push
mov
sbb
push
adc
jl
aaa
sbb
lods
xchg
inc
sub
or
ret
or
int3
fadd
or
add
inc
adc
fwait
inc
or
lods
push
out
aam
jne
pop
add
mov
mov
push
or
sbb
inc
or
das
or
adc
call
test
or
div
cdq
adc
sbb
pop
sub
sbb
and
data16
not
dec
mov
fs
jae
bound
loopne
or
lock
cld
sub
add
fisub
cs
aas
je
mov
movs
cmp
add
cmp
push
loopne
mov
sbb
jnp
and
xchg
lock
sbb
cmps
(bad)
pop
mov
jne
ins
and
or
mov
or
mov
test
or
data16
ja
pop
push
sbb
or
xor
cmp
retf
sbb
xlat
dec
or
jge
or
das
jbe
pop
fisubr
push
ss
adc
sub
popf
adc
xor
add
sub
test
(bad)
retf
or
add
sub
or
add
add
lods
pusha
cdq
movs
xchg
pop
adc
sub
les
add
adc
sbb
or
push
add
mov
push
push
or
mov
jae
xor
cmp
push
adc
or
or
add
iret
pop
dec
icebp
rol
sub
repnz
leave
dec
or
push
rcr
add
lea
je
and
and
xor
adc
xor
jae
sub
mov
or
pop
mov
arpl
inc
repz
push
mov
xor
sbb
rcl
ret
inc
xchg
arpl
movs
or
adc
jne
and
push
jae
imul
add
movs
test
imul
sub
fsub
fsub
add
dec
ins
adc
test
das
cmp
adc
mov
inc
or
adc
xor
xor
call
push
mov
mov
cli
ret
mov
xor
pop
inc
outs
test
fwait
xchg
lea
xor
cmps
pop
or
mov
sub
(bad)
dec
mov
out
sub
xlat
es
leave
and
inc
sub
popa
fwait
jae
in
fmul
lods
xor
shl
fwait
jge
inc
addr16
les
aas
adc
sub
daa
xor
xchg
sub
das
loopne
or
push
jae
ins
pusha
pop
sub
movs
les
stos
adc
mov
dec
in
call
hlt
or
or
or
pop
mov
adc
ins
imul
and
sub
cmp
pusha
sub
cmps
mov
sbb
adc
push
sub
pusha
sub
cdq
pop
sbb
jmp
rol
or
fwait
loope
and
xchg
xor
shr
jb
and
jae
sub
addr16
cmps
dec
mov
inc
push
aaa
add
push
mov
push
mov
sub
retf
gs
xchg
sub
and
mov
pop
inc
std
push
xchg
pop
mov
add
push
pop
and
add
sub
bound
mov
ret
call
aaa
lds
mov
sub
and
je
int
xor
xor
mov
les
fldcw
add
push
push
mov
stos
fst
lock
fnsave
xor
mov
jmp
push
inc
loope
jae
add
shl
outs
and
sbb
xor
mov
add
inc
add
or
jns
fiadd
imul
and
call
mov
push
sub
inc
sbb
jnp
je
mov
and
sub
lods
ins
aad
aad
rcr
push
adc
and
ror
sbb
bound
dec
push
loope
jmp
add
mov
in
inc
mov
add
mov
add
sbb
xor
or
pop
inc
int3
and
ins
add
cwde
retf
mov
pop
int
or
inc
pop
mov
add
je
dec
add
mov
test
cli
sbb
dec
pop
loopne
add
add
test
lock
ds
retf
movntps
test
add
sbb
mov
sbb
fstp
and
mov
add
and
push
xchg
pop
mov
and
in
and
cmp
out
(bad)
retf
add
xchg
inc
(bad)
add
retf
sub
mov
add
inc
sub
dec
push
jle
repnz
cdq
sub
in
add
inc
xor
sub
leave
xor
cmps
adc
xor
popa
xor
lods
xor
stc
retf
xchg
sub
xor
fisttp
shl
movsx
cmp
sar
or
cmp
movs
jae
cs
cmp
dec
(bad)
add
retf
mov
dec
adc
add
pop
xchg
js
icebp
push
push
inc
bound
jmp
xor
aad
pop
adc
pop
push
sbb
mov
adc
mov
or
pusha
adc
mov
bound
add
dec
and
xchg
rcl
push
sbb
or
and
xchg
dec
add
pushf
fld
add
fisub
cmps
add
mov
add
adc
out
mov
xchg
and
out
das
clc
xor
mov
add
in
mov
xor
aam
push
sbb
or
adc
popa
or
femms
push
or
call
rcl
jb
pop
fmul
cmp
ins
movntps
and
xchg
add
add
adc
adc
cmps
cwde
adc
adc
sbb
or
or
and
cmp
ds
test
push
dec
outs
popa
fs
xchg
adc
pop
add
fld
inc
into
mov
dec
jnp
push
es
add
mov
pop
push
and
inc
inc
add
pop
inc
add
adc
add
inc
jb
xor
jbe
dec
push
cs
cmp
outs
adc
movs
or
push
outs
sbb
cmps
add
sub
pop
pusha
jmp
ja
inc
jae
add
xor
push
inc
fild
and
dec
pop
sbb
mov
jae
ins
adc
add
inc
fnstenv
xlat
add
pop
dec
test
(bad)
jae
add
inc
inc
adc
mov
lahf
inc
jge
pop
jae
xchg
add
das
push
fs
mov
push
ret
dec
dec
add
sbb
lock
add
xor
shr
clc
jns
inc
push
fs
test
pop
retf
pop
mov
loop
setno
clc
cwde
(bad)
add
add
add
in
inc
(bad)
push
jle
bswap
repnz
in
push
jl
adc
imul
fs
enter
imul
xor
pop
push
fst
jg
pop
lock
push
mov
pop
aas
(bad)
sbb
in
imul
cmp
pop
pushf
sub
push
jo
add
fld
add
rcr
leave
repz
call
mov
stos
push
dec
push
std
xchg
or
aad
pop
(bad)
adc
dec
adc
adc
xchg
lock
jo
or
pop
sbb
dec
dec
ins
retw
add
gs
add
sbb
scas
sub
cmp
fist
xor
push
or
xchg
test
nop
xchg
in
popf
pop
in
retf
enter
inc
(bad)
adc
cmp
(bad)
gs
inc
fiadd
popf
add
dec
(bad)
in
or
fld
fwait
in
shl
or
pop
pop
retf
loopne
adc
add
fld
neg
(bad)
lds
shl
stos
jns
nop
daa
add
sub
or
leave
add
lock
popa
or
fld
push
movs
jne
mov
xor
add
xor
or
in
dec
outs
add
adc
xor
ret
daa
test
adc
push
jno
inc
dec
imul
les
jno
fstp
bound
arpl
and
inc
adc
push
push
mov
sub
shr
dec
ror
push
mov
jae
sub
adc
shl
mov
imul
push
mov
stos
jne
in
mov
push
ss
aad
outs
add
push
sbb
and
jbe
dec
repz
stc
cld
fwait
inc
addr16
fild
mov
jnp
and
icebp
fwait
add
jl
push
das
dec
jns
(bad)
push
je
jge
hlt
adc
add
sbb
clc
mov
or
cmp
aad
stos
inc
sub
or
push
mov
jbe
mov
or
dec
jae
sbb
mov
mov
jmp
add
sbb
sub
fild
pop
pop
inc
or
retf
sbb
and
mov
in
add
pop
ficomp
mov
je
imul
imul
add
push
imul
ret
fs
lea
pop
adc
push
jns
jl
push
test
add
xadd
cmp
loopne
mov
popa
nop
dec
jl
add
aam
dec
inc
inc
mov
out
pop
sub
xor
sub
jae
jge
add
in
cmp
push
add
xchg
add
and
xor
inc
sub
fnstsw
jo
push
lea
inc
js
xchg
add
xor
xor
shl
adc
enter
scas
add
and
and
adc
xor
and
or
push
lea
pop
sbb
jl
iret
adc
lahf
retf
add
add
retf
add
sub
pusha
pop
dec
jo
setbe
iret
sbb
retf
pop
sbb
das
movs
vmwrite
movs
rcl
(bad)
popa
bound
stc
es
sub
gs
pop
pop
in
add
dec
jae
inc
cmps
(bad)
jo
retf
sbb
dec
ja
adc
lods
adc
cmp
xor
xchg
jae
aam
adc
jne
mov
inc
loop
inc
add
push
dec
add
pop
push
jbe
and
mov
data16
or
xchg
pop
xor
jnp
imul
and
add
sub
sbb
or
xor
(bad)
pop
and
inc
in
pop
cmps
add
shr
dec
add
sbb
jmp
popa
sar
shr
adc
imul
add
test
and
xchg
inc
lods
out
mov
pop
pop
(bad)
mov
shr
pusha
push
lds
inc
bound
in
lock
inc
dec
pop
int3
xor
int
into
cld
push
xor
aam
xor
not
cmp
push
and
mov
cmps
fnstcw
mov
cmp
inc
clc
mov
inc
dec
inc
push
add
ins
pop
jns
mov
data16
sub
cmp
dec
mov
push
js
ficomp
push
push
push
mov
push
mov
inc
dec
push
ds
sti
fidiv
scas
push
push
aam
xchg
push
and
jnp
sbb
and
scas
push
scas
and
mov
push
call
fs
loopne
(bad)
clc
ds
push
xchg
jge
lods
push
mov
push
mov
ss
xor
ss
das
push
out
jle
push
pop
in
mov
pop
loopne
inc
push
lock
ror
add
sbb
mov
fild
sub
or
push
gs
clc
jnp
or
jae
sbb
jg
xor
sub
adc
ficom
push
ins
sahf
push
dec
scas
cld
jmp
mov
arpl
add
sbb
into
sbb
bndstx
data16
je
sbb
mov
push
push
push
gs
pop
mov
xchg
and
loop
add
and
in
add
add
and
adc
repnz
sub
add
add
xlat
cs
scas
sub
mov
add
sub
xorps
jb
add
add
retf
xchg
mov
xor
mov
xchg
mov
rdpmc
add
xchg
mov
(bad)
add
add
cld
add
loopne
paddusw
(bad)
add
mov
outs
(bad)
daa
ret
in
add
add
aas
xchg
cwde
mov
sub
pop
add
inc
lods
inc
aad
nop
jb
mov
pop
pop
sbb
inc
add
bound
sub
loopne
dec
inc
rcl
les
sbb
xchg
add
cmp
and
inc
adc
dec
sbb
test
bound
inc
xor
jnp
dec
xchg
les
and
cld
pop
in
inc
jb
in
push
cmp
and
fld
push
add
and
mov
cmp
mov
cmp
sub
sub
mov
dec
add
mov
je
sbb
inc
xchg
add
prefetcht1
xchg
push
shl
je
xchg
nop
and
nop
add
adc
aam
sbb
adc
and
pop
sbb
mov
sbb
sbb
xchg
les
mov
xchg
in
inc
add
sbb
pop
xchg
enter
dec
push
cld
pop
enter
jo
mov
enter
fmul
nop
bound
or
pop
add
push
fisub
and
cmp
adc
push
adc
das
or
cmp
sbb
inc
sbb
and
mov
jbe
adc
and
push
mov
add
pop
add
or
inc
add
cmovl
sbb
push
sbb
or
mov
and
jae
push
dec
pop
fnsave
xchg
sbb
or
pop
sti
add
sbb
pop
dec
add
pop
adc
xor
dec
outs
cld
mov
mov
jnp
cdq
or
mov
mov
gs
sbb
aam
dec
or
jae
mov
sub
pop
mov
and
push
outs
jb
mov
fdiv
push
mul
add
and
push
jno
or
test
jo
(bad)
mov
jbe
add
xchg
retf
adc
ret
xor
sbb
ret
inc
adc
push
loop
cwde
arpl
push
pop
or
das
push
pusha
adc
adc
push
cmp
add
rol
push
lock
add
mov
stos
ret
inc
retf
sub
outs
xchg
xor
sbb
adc
adc
ds
push
loope
mov
in
or
cmp
add
push
ds
mov
popa
fwait
adc
mov
mov
and
adc
movs
in
shr
pop
mov
cmp
or
and
mov
adc
adc
or
add
mov
xor
add
or
sbb
pusha
push
mov
push
pop
inc
dec
xchg
sbb
dec
mov
xor
mov
or
add
and
out
(bad)
add
push
sbb
add
aad
cmp
jae
pop
jno
or
rcr
nop
jnp
das
add
fcomp
mov
pop
cmp
fwait
pextrw
dec
dec
inc
sahf
add
xchg
jmp
movs
loope
leave
enter
jmp
fs
mov
jp
lea
out
loopne
aad
mov
dec
xor
mov
adc
dec
xchg
adc
xchg
fwait
mov
add
add
sbb
add
adc
or
in
add
adc
cmp
loopne
retf
ret
ret
jg
scas
outs
adc
and
add
ficom
add
inc
mov
dec
or
cmps
cmp
cwde
or
pop
mov
loopne
add
push
add
pop
or
jbe
mov
iret
add
rcr
nop
or
add
cmp
pop
mov
push
add
ss
push
gs
repz
(bad)
add
aaa
add
add
jmp
xor
sub
push
jb
dec
daa
mov
add
jno
cdq
movs
add
lds
adc
push
mov
xchg
in
sbb
add
out
sub
les
pop
adc
dec
loop
or
mov
or
aam
test
sub
out
inc
in
or
call
or
gs
sub
test
sbb
inc
shl
loopne
inc
push
inc
lds
mov
popf
fisttp
out
in
push
ins
push
lock
ds
pop
int
je
loope
inc
in
adc
ins
dec
call
pop
stc
push
pop
dec
pop
push
ja
mov
pop
fs
ret
sahf
xlat
lock
cmp
inc
push
jns
out
xor
ds
pushf
out
mov
fdiv
into
dec
adc
(bad)
test
ds
not
lods
loopne
mov
clts
sub
push
loopne
and
rsqrtps
paddusb
push
stc
or
xchg
or
push
push
rol
ror
push
dec
aam
and
or
sub
loope
mov
retf
sbb
fwait
iret
jmp
cmp
dec
inc
lock
pop
inc
adc
call
nop
cld
mov
inc
jle
add
stc
inc
inc
push
sbb
add
imul
dec
xchg
add
inc
push
ja
and
cs
popf
ja
inc
inc
mov
and
push
pusha
lods
add
add
and
je
out
add
aad
rcl
cmp
test
idiv
and
or
shr
adc
push
add
cmp
sub
adc
add
movs
xchg
test
stos
cs
lods
cwde
push
adc
cdq
fld
dec
inc
sub
add
and
push
lea
adc
pop
cmp
inc
adc
inc
push
pop
ins
cmp
movs
jl
mov
push
lock
mov
retf
ret
call
(bad)
cmp
test
lahf
sbb
sbb
or
aas
pop
or
push
adc
or
jo
inc
sbb
inc
mov
ja
pop
push
fsub
dec
mov
fnsetpm(287
test
mov
sbb
inc
(bad)
(bad)
mov
enter
mov
sub
std
test
jge
jg
xchg
xchg
pcmpeqb
and
cmp
imul
xchg
aad
add
sti
xor
bound
cwde
sub
adc
jmp
ins
es
inc
xor
clc
das
or
daa
or
xchg
xchg
mov
fadd
shr
xor
xchg
or
sub
pop
inc
loope
ret
or
jecxz
mov
sbb
mov
cmp
xchg
mov
les
push
sbb
mov
adc
pop
inc
pop
jb
call
mov
pop
fsubr
test
enter
cmp
and
call
push
movs
imul
add
add
shl
push
push
hlt
jg
lods
mov
int
inc
pop
xor
invd
(bad)
pop
pusha
in
push
mov
adc
or
jp
adc
pop
or
push
xchg
(bad)
fst
(bad)
mov
aam
and
pop
in
add
jo
(bad)
mov
cdq
ficom
pop
and
fwait
xchg
fwait
xchg
pushf
or
or
adc
gs
adc
sub
jmp
outs
xchg
xchg
das
into
xchg
mov
mov
push
hlt
sub
add
mov
ret
mov
add
aaa
pop
cmp
js
lahf
cld
xchg
iret
enter
or
cmovle
xchg
call
mov
iret
dec
pop
sub
add
fdivrp
nop
adc
sbb
(bad)
sbb
and
cwde
test
jo
adc
mov
popa
inc
int3
mov
cmps
cmp
pop
pop
cmc
cld
xchg
fwait
cmps
push
dec
mov
push
dec
mov
in
aam
push
xchg
push
out
xchg
push
and
cmp
add
inc
ror
out
mov
mov
dec
out
mov
sbb
les
pop
iret
push
inc
inc
jb
inc
pop
jge
fs
xchg
push
ja
lods
or
inc
xor
pop
cli
mov
or
inc
add
ins
jo
xor
mov
sbb
(bad)
or
xchg
movs
sub
and
or
inc
repz
adc
call
adc
and
sbb
sub
test
jbe
mov
shl
outs
jns
cmc
cmp
jno
(bad)
xor
idiv
inc
aaa
sbb
daa
dec
outs
cmps
popa
cmps
xor
dec
sar
dec
js
movs
dec
push
mov
push
(bad)
push
and
hlt
sbb
aad
fdivr
into
movs
clts
xchg
movs
push
fmul
push
or
xor
jbe
add
sub
inc
push
pop
mov
pushf
loopne
mov
push
sbb
push
jo
push
cmp
pop
add
push
neg
inc
jnp
fwait
add
es
adc
add
xchg
mov
or
dec
aam
push
mov
mov
add
xchg
xchg
inc
lea
dec
ret
sbb
aad
inc
into
jo
mov
xchg
xor
in
push
push
aas
sbb
push
jmp
mov
not
push
lock
or
lods
jg
out
pop
xchg
mov
push
add
push
rcr
and
sbb
pop
adc
mov
or
and
cli
jns
das
sub
add
ror
add
loopne
fcmove
jnp
xlat
lahf
dec
sub
fadd
fadd
jg
retf
xor
add
jo
sbb
imul
repz
dec
outs
popa
or
xor
sub
fwait
add
mov
add
imul
mov
sbb
movs
lds
dec
pop
or
lods
fwait
loope
add
push
lahf
jno
ins
adc
mov
rcr
xchg
lock
and
jmp
mov
(bad)
rol
ds
je
dec
push
cmps
les
mov
pop
xchg
cpuid
addr16
push
sub
add
sub
dec
sbb
and
hlt
pushf
(bad)
cmp
mov
pop
lods
mov
sbb
and
or
sbb
sbb
dec
sbb
xchg
push
rcr
lock
push
inc
das
out
popf
xchg
lock
movs
das
push
sahf
xchg
movs
shl
dec
inc
xchg
sbb
lock
mov
inc
inc
hlt
scas
mov
out
inc
xor
pop
push
outs
pop
in
call
dec
icebp
dec
inc
in
fwait
rol
sbb
rcr
pop
rcr
mov
inc
cmp
jge
add
in
add
(bad)
(bad)
mov
inc
lahf
adc
and
adc
xchg
or
inc
add
sbb
pop
lods
pop
addr16
movs
mov
or
push
jne
adc
xchg
xchg
sbb
mov
push
lods
pop
lds
out
fistp
or
movs
sbb
jmp
aas
aaa
sub
fld
add
adc
outs
jnp
scas
pop
push
xlat
enter
mov
hlt
xchg
or
ja
push
adc
ds
test
das
push
push
adc
pop
mov
test
clc
jbe
shl
or
add
pop
and
sbb
adc
mov
mov
add
xor
test
dec
shl
adc
or
mov
cmp
fist
rol
pop
add
and
enter
fsubr
daa
loope
lock
loop
mov
cmps
jmp
mov
pop
js
outs
inc
jne
adc
cmps
fsub
jle
pusha
cmps
dec
pop
aam
or
inc
lahf
dec
lahf
daa
or
fistp
xor
or
sbb
jb
sub
iret
and
fwait
mov
(bad)
adc
mov
movs
xor
jns
repnz
mov
xor
jb
xchg
jecxz
cmps
dec
add
cmp
dec
outs
sbb
jae
and
test
daa
daa
daa
mov
mov
les
or
push
pop
shr
xor
push
stos
sub
dec
mov
sub
fs
add
push
add
push
test
jmp
dec
inc
and
inc
sbb
sbb
xor
mov
ds
loopne
popf
jge
je
bound
dec
cmp
xchg
bound
stos
cmp
mov
fs
inc
ror
adc
dec
and
inc
xor
jns
loopne
mov
(bad)
sti
cmps
xchg
adc
nop
or
inc
mov
jno
pop
fwait
adc
add
push
adc
push
inc
ins
pop
pop
js
jno
push
and
or
sub
or
push
inc
lea
dec
pop
aam
or
and
mov
inc
cmp
sub
das
in
pop
stc
xor
pop
xor
add
outs
jbe
or
xchg
dec
gs
pop
cdq
dec
dec
gs
mov
(bad)
dec
pusha
lds
and
popa
jb
aaa
sti
inc
or
imul
mov
cmp
imul
push
ret
or
and
xchg
loop
mov
or
imul
push
outs
jb
jecxz
arpl
push
cmp
dec
jbe
shr
mov
adc
adc
bound
dec
jns
and
loope
xchg
rsqrtps
or
push
jo
sub
in
dec
or
jae
pop
repnz
sub
push
add
int3
test
ja
cmp
ds
movs
dec
or
shr
adc
cmps
rcl
add
rol
inc
pop
les
call
xor
lods
addr16
xchg
pop
cmp
and
das
rcr
push
stos
int3
movs
dec
popf
inc
mov
and
arpl
add
add
mov
adc
jge
test
push
push
push
or
add
cmp
push
movs
push
ret
adc
pop
or
in
pop
and
add
cwde
nop
xchg
fucomip
xchg
cs
jae
outs
add
addr16
mov
inc
popa
cmp
(bad)
gs
inc
nop
sbb
or
sub
add
adc
mov
aaa
pop
and
mov
cdq
scas
add
inc
pop
mov
imul
sub
mov
shl
push
jmp
test
scas
and
imul
dec
scas
xchg
shl
pop
in
das
add
aam
push
daa
ins
mov
mov
add
or
inc
fwait
or
sub
repnz
stos
psadbw
dec
inc
cmp
inc
sub
popf
in
sub
add
(bad)
pop
push
inc
imul
bound
or
pushf
adc
or
je
add
add
or
lock
sbb
mov
inc
mov
loope
mov
aas
and
femms
ds
inc
jno
push
and
xor
mov
cwde
cmc
lock
dec
add
push
and
and
cwde
cmc
push
push
mov
mov
mov
or
mov
push
push
sub
dec
and
or
adc
cmp
adc
or
lock
mov
dec
adc
mul
pop
cmp
pusha
inc
xchg
hlt
mov
movs
pop
mov
cvtps2pd
mov
jne
sbb
dec
push
adc
adc
add
mov
mov
inc
inc
pop
xchg
inc
dec
push
inc
test
and
pop
pop
jo
lock
push
or
pop
js
mov
push
ins
mov
test
into
push
(bad)
mov
sbb
push
movs
mov
jb
pop
push
mov
mov
pop
pop
pop
mov
dec
inc
mov
aam
ret
jecxz
or
iret
std
test
push
loopne
mov
mov
ins
loopne
inc
xchg
mov
lods
inc
cmp
inc
mov
in
mov
sbb
add
mov
mov
add
int3
cdq
or
or
add
add
addr16
addr16
mov
push
ins
add
shl
int3
mov
push
add
pop
dec
pop
int3
sub
mov
mov
rcl
shl
add
icebp
pushf
mov
movs
push
dec
dec
out
test
xor
jbe
jle
mov
pop
outs
adc
outs
xor
test
and
fadd
sar
stos
mov
cmp
gs
cmp
mov
dec
je
int3
inc
pop
enter
mov
test
mov
mov
gs
in
sbb
sar
repz
das
sub
daa
adc
push
adc
xlat
test
aas
mov
leave
stos
dec
cmp
mov
out
mov
mov
mov
push
adc
cmp
mov
jbe
mov
mov
pusha
jo
jg
int
and
nop
mov
push
mov
movs
xchg
fsubp
pop
and
into
in
adc
sub
aad
mov
fs
or
mov
cmp
mov
mov
les
push
cmc
shl
inc
hlt
mov
add
mov
pop
inc
test
inc
rcr
lds
fstp
mov
mov
test
add
mov
inc
rol
rol
xchg
dec
push
jo
shr
rol
scas
stos
mov
loopne
sar
pop
mov
lds
sbb
pop
es
inc
enter
test
out
das
or
jl
mov
ja
adc
add
test
ja
push
mov
test
inc
jne
ret
push
(bad)
stos
inc
ret
pushf
mov
adc
jp
test
ret
fdiv
jb
rcl
mov
mov
inc
fisubr
adc
mov
jno
inc
pop
mov
sahf
sar
push
(bad)
imul
cmp
inc
shr
mov
sbb
lds
retf
or
add
sbb
dec
lds
fadd
cmp
mov
add
or
mov
add
shl
jl
sub
mov
sti
push
fidiv
push
mov
(bad)
das
shl
aaa
test
call
scas
sub
mov
push
aam
mov
mov
sbb
inc
sub
push
inc
add
jns
mov
sub
xor
cmps
test
cmps
loopne
sbb
cmps
xchg
mov
daa
test
mov
arpl
jmp
mov
cmp
lea
pusha
push
jge
adc
test
aam
enter
ret
outs
loope
mov
push
test
sar
retf
mov
rol
loope
pushf
mov
les
scas
push
push
and
push
mov
aad
cmp
in
scas
iret
pushf
int3
jmp
pusha
sub
(bad)
dec
and
jno
push
sub
aad
mov
xchg
sahf
scas
jecxz
das
aam
sbb
xchg
or
pusha
add
or
add
or
sahf
push
or
fsubr
pop
fwait
xor
cld
sub
mov
inc
add
jo
ret
mov
dec
gs
fld
add
stos
add
or
pop
add
rcl
movs
repz
sub
movs
mov
xchg
push
or
pop
pop
dec
push
inc
popa
inc
loope
test
mov
shl
inc
xor
sub
fimul
pop
test
or
xchg
inc
xor
inc
test
sub
ret
dec
gs
add
pop
outs
xchg
or
shr
mov
mov
pushf
int3
push
mov
loope
ret
repnz
(bad)
add
lods
or
mov
dec
push
and
sti
xchg
inc
sbb
add
pop
push
xor
int3
mov
lods
adc
sbb
push
pop
int
js
mov
enter
fisub
add
add
aas
js
stos
mov
mov
jl
pusha
pop
mov
cmp
fadd
mov
dec
test
lods
cmps
jmp
inc
pop
dec
push
(bad)
and
pop
into
cmp
add
mov
add
pushf
ds
and
pusha
in
add
sbb
int3
jae
xor
mov
jae
cmp
and
mov
adc
and
out
jae
xchg
cmp
stos
xor
or
js
lods
mov
les
rcr
sub
iret
jo
push
push
cmps
loopne
sbb
mov
(bad)
cld
sub
inc
mov
test
pop
std
sbb
pop
xchg
rol
mov
into
pop
adc
out
dec
pop
pop
pop
sbb
cs
jmp
adc
adc
aaa
jmp
inc
push
push
bound
mov
add
or
loopne
loopne
movs
rcr
sbb
into
adc
mov
add
loop
fwait
in
scas
ins
inc
int3
jp
adc
addr16
loopne
ins
sar
mov
xlat
or
push
repnz
cs
jae
xor
sub
jae
jo
cmp
fwait
push
or
adc
adc
adc
rol
lahf
push
or
fs
mov
dec
sub
pop
aam
out
add
mov
adc
or
adc
fwait
or
inc
push
add
stos
jae
mov
sbb
aad
push
add
or
(bad)
mov
mov
(bad)
pop
les
rcl
loop
push
aad
in
aad
rol
fdivr
cmp
(bad)
out
sbb
add
ficom
xchg
mov
cmp
ins
(bad)
mov
mov
adc
push
test
mov
lock
xlat
push
pushf
loope
pushf
hlt
mov
dec
xlat
mov
shr
retf
mov
adc
add
hlt
mov
sub
inc
sub
cs
inc
test
out
cmp
call
neg
inc
ins
aas
fstp
xor
popa
das
adc
fs
pop
or
shr
jmp
test
and
fmul
add
test
adc
jecxz
jmp
shr
jp
cmp
sti
in
mov
fadd
daa
sub
inc
adc
pop
jae
push
imul
mov
(bad)
pop
ror
fimul
fild
cmp
fist
jne
imul
inc
lgdtd
ret
(bad)
(bad)
jmp
rcl
xchg
jne
add
leave
stos
sti
pusha
fstp
cmp
inc
enter
shl
add
out
add
pop
movs
fbstp
mov
popa
in
xor
lock
sub
pusha
shl
inc
xor
call
fadd
push
test
mov
sub
push
cld
fsub
add
jnp
cmp
jmp
jo
(bad)
pusha
outs
pop
mov
add
(bad)
fisttp
sbb
fisubr
rcr
cvtpi2ps
mov
inc
pop
fisubr
mov
imul
adc
mov
xchg
push
and
mov
mul
or
add
or
mov
fdiv
mov
fidiv
sahf
sbb
(bad)
test
dec
push
es
clc
or
retf
fbld
inc
loopne
add
fadd
jle
or
push
loopne
stos
imul
inc
xchg
lods
sbb
scas
cwde
pop
xor
pusha
ret
mov
xchg
pop
add
xor
fnstsw
xor
cmc
in
les
sbb
mov
pop
dec
js
in
mov
scas
das
int
mov
fnstsw
cmp
adc
loop
adc
(bad)
cmp
push
mov
ret
stos
es
ret
enter
loopne
loop
ret
sbb
mov
add
or
loopne
mov
jecxz
dec
and
jecxz
outs
dec
and
das
or
call
rcr
xchg
jp
in
pop
in
mov
in
dec
fwait
shl
in
jge
sbb
cmp
in
les
sbb
jns
xchg
pop
jae
fsub
adc
or
or
dec
in
cwde
ret
js
jno
jge
in
aam
call
imul
push
mov
das
dec
out
fs
and
ror
mov
push
test
shr
es
mov
test
scas
add
pushf
cwde
test
test
scas
add
sbb
jns
test
loopne
repnz
mov
pusha
fcmovnbe
and
out
jb
repnz
dec
xchg
jp
jae
adc
call
pop
adc
xchg
xchg
aad
inc
jmp
add
shl
popa
ror
aas
push
mov
mov
lock
jge
jns
or
or
pop
push
jecxz
shl
jge
push
xor
inc
pop
jge
and
or
loope
jge
bound
or
cs
add
aas
adc
jae
shl
cmp
ins
jns
into
outs
push
or
add
jns
jge
mov
pop
jge
adc
es
xor
jae
add
add
xor
jecxz
jge
dec
inc
mov
mov
and
stos
in
test
shl
test
(bad)
or
int
push
icebp
cwde
jge
jae
int3
jae
shl
add
mov
test
push
and
rcl
or
pusha
pop
xchg
daa
cmps
or
(bad)
out
in
pop
adc
inc
push
fdivr
pop
pop
clc
mov
pop
loopne
mov
jp
pop
and
adc
popf
adc
push
mov
shl
ds
jb
push
jo
aam
jb
adc
shr
scas
out
pop
hlt
cmp
push
outs
das
add
outs
ds
adc
jmp
add
push
or
inc
dec
push
add
fwait
lea
push
fsubrp
daa
lock
cwde
sub
sbb
xor
inc
das
jbe
xlat
xor
sub
xchg
mov
or
shr
push
cmp
add
adc
inc
jmp
mov
xor
in
dec
push
add
inc
cmp
push
push
mov
pop
out
ret
xchg
(bad)
aaa
adc
pop
mov
push
test
or
cmp
inc
clc
push
test
jl
or
inc
xor
or
jmp
add
or
nop
xchg
jb
lock
icebp
sbb
ins
(bad)
dec
lahf
jo
ror
and
sahf
sbb
mov
hlt
mov
push
adc
xchg
fisubr
imul
xor
jge
retf
dec
ss
(bad)
sbb
shr
add
repz
push
je
int
sub
adc
cmps
cmc
call
dec
or
retf
call
xchg
inc
add
or
jmp
loopne
hlt
dec
cmp
icebp
push
ficom
mov
es
cmps
cmc
test
das
xchg
div
out
inc
push
enter
mov
movs
mov
retf
(bad)
outs
test
leave
movs
adc
test
(bad)
sub
outs
add
js
ins
mov
pushf
ja
not
psubusb
addr16
mul
mov
inc
sahf
fsub
cmp
dec
test
daa
daa
and
call
mov
lds
mov
dec
sbb
cmp
daa
daa
in
cld
das
(bad)
(bad)
xchg
xchg
scas
or
(bad)
daa
mov
addr16
xchg
std
jne
inc
inc
fcmovnbe
cmovo
cli
add
mov
dec
xor
test
add
and
lods
icebp
lahf
jno
shl
test
ror
enter
sub
lahf
inc
sub
add
lahf
cmp
repnz
ror
sub
lahf
jae
lods
add
jne
push
sub
push
xchg
push
sub
or
pop
push
mov
lahf
sti
or
leave
jae
fs
lahf
inc
pop
add
imul
and
lock
mov
xor
mov
sub
xchg
add
nop
pop
es
xchg
mov
imul
retf
pop
sbb
test
mov
and
push
dec
mov
cmps
loope
push
rol
loopne
loope
push
and
imul
or
imul
adc
dec
mov
pop
add
retf
(bad)
fsubr
sub
int
dec
mov
push
cld
(bad)
mov
sub
lods
inc
push
idiv
bound
or
add
pop
pop
bound
sbb
push
and
push
fs
retf
pop
sub
jl
pop
sub
sbb
lds
push
movs
mov
adc
push
sub
stos
rcl
pusha
and
xchg
int3
mov
das
sub
test
mov
into
call
(bad)
dec
das
shl
nop
int3
or
cmp
add
movs
push
lds
outs
pop
mov
and
dec
or
addr16
dec
cmps
shl
cvtpi2ps
fmul
addr16
xchg
dec
test
dec
stos
push
add
in
xchg
add
sti
add
pop
shl
push
xor
mov
cmp
adc
dec
rol
and
adc
sub
jns
and
inc
xchg
stos
xchg
loopne
aaa
xor
pop
mov
cmps
(bad)
xor
xor
pusha
add
out
sub
sub
movs
cs
cmp
jmp
popa
pop
popa
or
cmp
add
add
adc
out
or
ins
comiss
cwde
dec
xor
out
iret
and
das
leave
punpckldq
adc
(bad)
mov
add
mov
mov
leave
cmovle
fmul
push
adc
dec
cmc
xor
mov
mov
add
sub
add
shr
or
ds
inc
pop
das
xor
pop
jae
aam
push
int3
add
ficom
push
(bad)
push
push
xor
test
das
fiadd
dec
(bad)
mov
dec
push
pop
iret
dec
mov
dec
sar
(bad)
and
fsub
push
cdq
xchg
add
xor
imul
add
or
outs
jae
sub
arpl
mov
or
syscall
or
leave
leave
leave
inc
jge
shl
in
in
or
fnstenv
xor
and
pop
mov
jns
or
pop
(bad)
mov
cmp
jmp
or
pushf
or
fisttp
scas
push
and
sub
icebp
repnz
dec
into
ja
cmovle
es
les
or
mov
test
ja
and
pop
iret
xor
mov
ja
and
test
ja
adc
rol
dec
ja
xchg
cmps
inc
movs
ja
iret
dec
cs
add
sub
ja
inc
or
ficom
adc
shl
dec
add
sbb
shl
add
jb
inc
mov
imul
push
sti
popa
inc
sub
pusha
xor
or
sub
push
mov
les
sub
imul
mov
jae
pop
xor
xor
xchg
xor
push
cmp
add
push
jns
add
xchg
adc
dec
xor
pop
mov
xchg
or
scas
sub
sub
add
add
pop
ds
xor
adc
or
add
or
je
pop
lods
push
mov
add
push
stos
ret
add
or
inc
pop
xchg
pop
mov
xor
mov
sbb
test
sub
daa
pop
cmp
push
pop
add
(bad)
sub
sub
loopne
sub
jmp
into
adc
xor
push
mov
or
push
sbb
xor
dec
sar
sbb
sbb
add
adc
sbb
arpl
pusha
pop
bound
sbb
adc
mov
lahf
xor
cwde
shl
push
adc
test
imul
scas
movs
push
stc
mov
das
scas
and
adc
xor
add
sub
js
icebp
mov
test
add
adc
adc
ins
loope
adc
out
mov
pusha
jge
adc
pop
inc
mov
cvtpi2ps
mov
jmp
aaa
xlat
pop
add
push
loope
or
retf
inc
enter
pop
test
inc
jge
enter
push
push
test
cwde
push
pusha
adc
jmp
test
xor
dec
das
scas
aam
jb
aad
pop
xlat
mov
jmp
adc
push
or
xchg
rol
cmp
mov
add
mov
add
sub
push
stos
or
add
and
and
mov
push
scas
cmp
xlat
mov
js
xchg
push
or
sub
aam
sbb
scas
cdq
ret
(bad)
aam
hlt
je
push
cmps
js
mov
adc
leave
mov
out
sbb
sbb
jne
data16
jbe
popf
sbb
xchg
fistp
iret
pmaxub
sbb
leave
leave
leave
push
call
dec
sbb
(bad)
std
dec
dec
inc
sahf
xor
ret
call
or
xor
test
daa
daa
fdivr
and
js
jb
addr16
sub
cmp
pop
pop
pop
mov
cmps
mov
(bad)
es
in
test
mov
and
dec
dec
or
mov
sub
adc
aad
adc
loop
mov
cmp
sub
pusha
pop
mov
cmp
mov
movs
adc
sub
pop
rcl
jmp
test
adc
fwait
lds
inc
dec
adc
inc
imul
add
or
mov
imul
and
push
xchg
sub
inc
add
add
add
test
mov
test
push
mov
mov
sub
push
jae
xchg
cmp
pop
add
add
adc
pusha
cmp
jns
pop
sub
xchg
dec
sub
and
push
add
in
mov
xlat
(bad)
push
or
loopne
mov
test
aad
mov
inc
or
ror
pop
movs
les
test
(bad)
mov
test
div
test
push
repnz
shr
nop
shr
adc
fild
and
dec
mov
and
stc
dec
aaa
xor
pusha
inc
ds
jg
mov
adc
movs
or
xor
inc
inc
popf
inc
add
inc
xor
hlt
addr16
pop
dec
add
(bad)
das
add
addr16
test
jg
xlat
pop
xor
hlt
addr16
pop
jo
dec
aam
mov
mov
pushf
and
jmp
and
inc
inc
jne
and
bound
out
aaa
fild
or
bound
jne
xor
push
push
shr
add
push
and
push
pop
fld
outs
sti
jne
fwait
shl
test
xor
sub
ja
es
sub
adc
add
in
std
mov
outs
add
ss
fiadd
mov
imul
(bad)
bound
outs
pop
ins
add
js
ficomp
xlat
mov
repz
and
std
jge
push
jo
jb
bound
popa
dec
es
pusha
sti
jns
outs
add
xchg
popa
add
fwait
test
or
jae
nop
rol
jbe
gs
or
add
mov
or
mov
sub
sbb
ins
daa
aas
xchg
imul
jo
inc
js
mov
pop
jae
or
pop
outs
arpl
ficomp
daa
jo
imul
outs
jmp
xchg
test
sbb
add
add
and
daa
jb
xchg
imul
popa
xchg
addr16
lock
jns
gs
outs
add
or
fbstp
sub
push
mov
popa
add
daa
sub
dec
and
adc
add
fsub
outs
pop
arpl
mov
ja
addr16
jns
jae
cwde
xchg
aas
sub
jne
or
sbb
iret
arpl
jb
jmp
outs
push
ret
imul
xor
add
inc
orps
cmp
cmps
ins
das
inc
lds
loopne
xor
inc
add
cmp
shl
push
fstp
and
add
or
jl
cmp
mov
sub
xor
push
mov
inc
retf
and
or
imul
jbe
ror
js
or
mov
add
sub
fwait
add
push
inc
add
and
jbe
adc
xchg
jl
inc
mov
adc
xor
addr16
nop
adc
dec
add
repnz
cmp
xor
or
sahf
inc
sub
imul
(bad)
test
ss
lods
add
adc
push
sbb
fidiv
inc
add
pop
xor
push
xor
inc
pop
out
fxch
imul
mov
add
lock
test
lock
sub
and
sub
cmp
clc
adc
mov
add
mov
dec
clc
sub
push
dec
in
enter
stc
jmp
sub
adc
dec
test
je
mov
fmul
loopne
test
push
(bad)
or
(bad)
xor
imul
add
jb
aad
inc
add
adc
dec
inc
jo
test
xor
sub
and
mov
sub
mov
or
sub
pushf
inc
lahf
dec
push
jns
cdq
aaa
add
movs
clc
clc
jb
nop
pop
cld
or
xor
in
in
aas
cmp
aam
sbb
sub
int
lea
or
data16
adc
mov
fld
xor
sub
add
out
inc
adc
jge
movs
add
and
cmps
add
add
adc
push
inc
mov
mov
inc
or
or
inc
mov
fmul
or
inc
and
or
inc
sahf
add
inc
push
adc
sbb
mov
mov
push
in
jb
inc
pop
and
shl
push
add
sub
in
pop
inc
loopne
movs
cmps
cld
add
arpl
mov
mov
mov
ret
sub
push
jo
cdq
fdivr
push
fcom
scas
jne
adc
inc
push
jle
or
or
push
pop
ds
mov
or
or
inc
jns
dec
in
add
add
or
inc
add
aam
push
mov
mov
loopne
inc
and
(bad)
add
fmul
stc
and
sub
and
or
dec
adc
xchg
add
xchg
(bad)
adc
mov
cli
push
enter
rcr
int3
add
adc
sub
aam
add
test
loope
inc
push
or
into
mov
xchg
das
push
xor
rol
inc
or
mov
daa
mov
(bad)
add
adc
add
push
nop
adc
sbb
or
push
mov
cmps
hlt
fcmovb
add
and
mov
lea
jge
cmps
hlt
mov
sub
push
or
mov
push
mov
pop
jo
ss
pop
pop
adc
pop
or
sbb
push
adc
nop
aaa
mov
add
rcr
adc
sbb
sti
cmp
inc
nop
mov
dec
add
inc
inc
ja
lahf
or
xchg
jbe
stos
je
cs
and
cmp
mov
out
add
lea
add
shl
xlat
mov
sub
add
shl
add
push
jne
adc
push
mov
add
movs
pop
mov
inc
pop
sbb
xor
push
or
push
push
sbb
mov
ror
mov
add
pop
lds
sbb
and
outs
sbb
hlt
int3
add
push
xor
ins
lods
sub
pop
xor
jb
addr16
jo
jb
sub
call
cmp
aaa
nop
(bad)
sub
outs
add
xor
fisubr
mov
mov
push
shr
sbb
(bad)
jns
cmp
fs
xor
jl
cmp
ja
or
pop
aam
pop
pop
clc
outs
or
das
arpl
mov
loopne
nop
xor
add
push
jae
xor
mov
or
call
mov
xchg
xor
mov
rol
mov
(bad)
out
sar
inc
iret
cmc
sar
ins
loop
ret
add
nop
test
je
inc
add
sub
adc
(bad)
mov
or
neg
xor
mov
jo
dec
leave
mov
xor
add
mov
jne
mov
lods
mov
xchg
or
test
imul
add
push
push
gs
push
adc
mov
and
mov
or
jo
test
lock
add
rcl
xor
dec
mov
cmp
mov
lock
loope
push
lods
(bad)
lock
push
jmp
add
mov
in
nop
add
js
or
fadd
pop
add
int3
jne
mov
mov
add
mov
adc
(bad)
pop
add
cmp
xor
pop
shl
jg
pop
test
add
mov
add
add
inc
adc
or
and
dec
xchg
xor
rcl
pop
pop
aaa
inc
add
mov
push
sbb
mov
cmps
adc
adc
je
xchg
push
pop
jns
mov
push
mov
fmul
in
cmp
sub
xor
pop
lea
movs
xor
js
push
pop
rcr
mov
je
inc
clc
aas
loope
add
mov
mov
mov
xchg
adc
(bad)
stos
(bad)
xor
popa
add
pop
push
arpl
xor
add
add
jg
add
xchg
add
push
mov
mov
aas
jne
loop
add
add
mov
pop
test
jne
push
lock
jmp
and
adc
pop
cdq
push
push
sub
loopne
sbb
call
pop
dec
adc
ret
js
xor
add
sub
jae
add
adc
(bad)
adc
or
add
sub
(bad)
call
add
shr
dec
add
hlt
adc
(bad)
test
or
or
sbb
push
fcom
push
mov
inc
inc
in
and
push
cmp
rcl
mov
sub
xchg
or
add
dec
cmps
fimul
out
and
pop
push
or
xor
adc
or
dec
leave
lock
shl
or
mov
movs
retf
add
sub
or
xchg
(bad)
fisttp
(bad)
push
pusha
pop
mov
adc
mov
fbld
add
lods
inc
lock
nop
rol
mov
dec
adc
lock
adc
pop
test
adc
enter
add
adc
sub
add
mov
xchg
or
mov
mov
into
je
jo
or
pop
inc
mov
into
mov
mov
lock
cmp
mov
pop
enter
or
dec
mov
mov
call
fisttp
rcl
xchg
mov
inc
sub
call
and
adc
pushf
cmp
rol
inc
adc
sbb
call
adc
adc
xor
mov
inc
push
dec
mov
pop
test
daa
in
rcr
and
js
icebp
scas
enter
inc
test
or
mov
adc
aaa
test
int
vmovmskps
push
bound
push
fidiv
inc
mov
pop
pusha
aaa
and
nop
dec
sub
cmp
nop
cmp
xchg
adc
repnz
fsubr
es
push
push
popf
xor
jmp
push
adc
sub
add
mov
cmc
in
test
sbb
scas
or
es
movzx
and
adc
sbb
cmp
lock
or
cmp
add
or
mov
mov
mov
clc
imul
pop
and
xchg
or
call
add
pop
jle
hlt
mov
sbb
and
(bad)
sahf
cmps
ins
push
in
cmp
inc
dec
push
jns
out
push
pop
arpl
out
sahf
out
jnp
xchg
xchg
cdq
movs
lahf
stos
mov
sahf
out
mov
ret
leave
iret
out
sahf
out
fndisi(8087
out
aad
or
xor
ret
mov
ins
jbe
add
mov
and
das
or
and
sbb
loopne
mov
ja
cmp
ret
xchg
rol
das
mov
movs
and
pop
push
mov
test
add
cmp
add
xchg
ins
pop
sub
adc
push
cmp
lahf
cmps
cmp
out
ds
cmp
repz
outs
xchg
pushf
cmps
iret
repz
mov
(bad)
into
fdivr
sahf
out
sbb
cmp
es
jns
loopne
inc
daa
and
cmp
repz
sub
inc
dec
push
out
cmp
jne
mov
out
sahf
es
outs
xchg
mov
cmp
repz
and
push
stc
cmp
repz
(bad)
jmp
das
push
jno
mov
dec
jl
xlat
sti
add
dec
add
push
pop
jnp
test
cdq
mov
into
ror
inc
push
js
mov
fnclex
push
inc
mov
sub
pop
add
mov
add
clc
pop
mov
sbb
add
add
add
push
lods
pop
loope
cld
xchg
inc
adc
test
and
inc
or
mov
rcl
pop
inc
mov
pusha
or
xchg
or
adc
jl
push
inc
or
mov
xor
nop
mov
add
inc
or
ret
adc
cmc
add
mov
pushf
pop
mov
inc
add
mov
cwde
mov
jb
cwde
inc
pop
adc
push
sbb
inc
(bad)
or
mov
adc
push
push
push
jbe
scas
or
call
add
pusha
stos
(bad)
or
mov
rol
jae
push
xor
(bad)
rol
add
and
add
outs
sub
int3
adc
mov
sbb
mov
call
mov
add
or
jmp
popa
stos
or
pop
inc
(bad)
or
xor
adc
iret
mov
jmp
jmp
mov
ret
or
inc
lock
outs
push
nop
clc
test
add
test
xchg
and
sub
rcr
inc
xchg
loope
xchg
or
push
mov
jo
push
push
jno
cmp
pop
sbb
fnsave
sbb
jmp
mov
or
jecxz
sbb
mov
ja
jo
aam
jg
mov
dec
sub
mov
mov
lea
shl
test
and
faddp
pop
fist
push
ja
push
mov
pushf
out
mov
cmp
ja
ror
jne
inc
test
or
iret
or
push
shl
or
arpl
jns
push
es
in
repz
vmwrite
sub
inc
push
inc
psraw
mov
sbb
jns
movs
mov
jmp
sbb
sub
add
pop
xchg
cmps
push
jns
or
or
push
jns
aas
pop
sbb
push
jns
xchg
or
or
and
xchg
cmps
adc
pop
and
ret
dec
sub
inc
mov
ret
ss
ret
add
push
push
xor
fisubr
pop
(bad)
adc
ror
mov
add
pop
sti
loope
mov
dec
xor
cmp
jns
test
cmp
xchg
pusha
in
xor
mov
push
aas
xor
test
xor
ds
adc
xor
js
into
mov
sub
push
cmp
in
ins
jle
arpl
sub
jns
dec
cmp
mov
nop
mov
out
aam
repz
iret
test
nop
es
daa
daa
cmp
xlat
push
mov
and
and
add
adc
and
pop
or
pop
sbb
mov
pop
and
adc
loope
stc
and
adc
mov
xchg
or
inc
mov
mov
inc
xlat
sbb
mov
outs
cmp
sbb
jo
add
daa
sbb
idiv
pop
shr
push
jb
push
adc
sbb
adc
sbb
or
and
into
aam
daa
ror
dec
(bad)
rep
add
dec
movs
iret
or
dec
rol
xor
iret
repz
pusha
outs
jl
mov
cmp
cwde
cmps
mov
push
scas
or
add
add
sbb
xor
bound
ret
push
mov
ret
lock
bsr
scas
jmp
js
xchg
sbb
xchg
popa
inc
mov
xchg
add
or
adc
jmp
or
xchg
(bad)
and
sbb
add
pop
ret
or
ret
pandn
into
shl
fsubrp
jmp
pop
jp
mov
pushf
iret
repz
lods
mov
xchg
in
cmp
sbb
das
ds
xor
imul
pop
xchg
xor
dec
mov
ror
fisttp
xor
mov
das
or
adc
out
xchg
push
iret
push
push
sbb
pop
jb
cld
sub
cmp
xor
inc
inc
jo
adc
push
jl
add
add
cli
call
and
adc
sar
call
fidiv
inc
or
or
xor
fadd
mov
je
dec
aaa
dec
leave
add
mov
bound
or
xor
add
and
sub
xchg
add
add
add
cmps
rol
js
dec
aas
lods
cmc
aad
push
scas
add
xchg
cdq
dec
push
out
cmp
out
hlt
add
adc
push
push
xor
sub
stos
imul
xchg
mov
retf
aas
stos
xadd
popa
or
push
scas
and
pop
(bad)
or
(bad)
and
ror
push
push
mov
add
enter
add
unpcklps
xchg
push
cli
push
add
add
aaa
lea
sbb
(bad)
fist
cs
aas
out
sahf
out
popa
outs
jge
popf
out
sahf
cdq
cmps
mov
ror
js
addr16
loop
inc
loop
push
and
sbb
enter
adc
sbb
or
data16
mov
das
das
or
add
inc
sbb
or
fcom
out
ficomp
push
push
pushf
out
scas
mov
ret
push
jmp
or
adc
adc
or
xor
ret
pop
or
sub
pop
pop
adc
push
loopne
(bad)
mov
push
inc
dec
sahf
fwait
jbe
inc
push
pop
jns
out
ins
jp
xchg
movs
pop
xor
xor
add
add
add
add
inc
push
or
pop
dec
or
dec
scas
adc
adc
pop
and
xchg
out
xor
dec
pop
sub
in
push
add
mov
and
or
or
adc
nop
retf
mov
push
in
and
push
and
push
out
or
push
out
nop
push
and
ds
out
sahf
out
push
or
lds
jecxz
push
or
jns
in
push
push
add
adc
add
add
dec
sahf
in
sbb
add
xchg
mov
pop
int3
cmp
adc
push
pop
pop
xchg
ins
and
and
sahf
ja
push
(bad)
push
push
push
pop
sub
cmp
gs
adc
ins
add
pop
rol
add
es
ins
push
push
or
add
and
ret
sbb
sbb
push
mov
jmp
es
cmp
and
sub
add
nop
or
sbb
in
push
and
xor
pop
push
imul
xchg
add
rcl
adc
movs
pop
xor
test
adc
sahf
out
sahf
adc
adc
push
pop
jns
out
sbb
sbb
sbb
and
call
and
and
ficomp
pop
iret
repz
and
xchg
mov
repz
out
or
jns
out
sub
dec
pop
outs
out
sahf
out
nop
mov
jns
aam
test
sbb
sub
fs
push
cmp
repz
xchg
mov
iret
mov
mov
popf
cwde
or
or
aas
and
fmul
or
and
arpl
mov
adc
fwait
adc
stos
popa
and
sbb
cwde
movs
and
sbb
mov
or
mov
push
aas
and
dec
sub
xchg
retf
adc
adc
jb
in
cmp
test
inc
push
inc
sub
sbb
xchg
dec
sbb
jb
in
push
sbb
pop
push
mov
push
mov
xchg
pop
sbb
jne
mov
outs
mov
fs
push
fst
and
gs
and
test
or
aas
mov
sbb
aas
sbb
adc
mov
es
and
cs
sub
and
in
and
outs
and
in
push
(bad)
ret
mov
nop
pop
leave
mov
mov
or
sub
dec
and
add
or
add
or
xchg
sbb
xor
mov
sub
pop
fisttp
dec
clc
or
add
push
pop
out
sahf
fwait
push
pop
jp
xchg
movs
or
jns
mov
into
fsub
xchg
mov
pop
inc
sbb
xor
or
adc
es
add
pop
cs
jae
jnp
pop
pop
scas
push
mov
iret
jnp
repnz
adc
and
iret
inc
pop
data16
cmp
jb
nop
sahf
lods
xor
cmp
mov
pop
cmp
addr16
fld
pop
dec
fnstcw
and
in
(bad)
dec
fldcw
or
or
and
cmps
and
xor
ja
sbb
or
jmp
sbb
jmp
or
xor
xor
cmp
aaa
add
lds
xlat
adc
icebp
(bad)
sub
pusha
adc
pop
ficom
jb
sub
arpl
push
inc
mov
dec
int
sbb
or
clc
(bad)
fsub
jb
jnp
into
sbb
loop
or
add
adc
dec
jns
fs
push
push
sbb
xor
inc
and
nop
add
mov
xor
xchg
sbb
cmp
test
iret
scas
push
mov
adc
fisttp
add
add
dec
gs
sbb
pop
ret
cmp
add
pop
xor
sahf
out
sahf
push
gs
cwde
test
mov
out
out
add
sbb
sub
or
jns
inc
push
pusha
outs
in
test
push
jg
sub
loopne
jg
and
mov
xchg
lea
sbb
ret
and
ins
add
and
and
mov
and
or
aad
arpl
arpl
xor
sbb
arpl
addr16
movs
inc
mov
add
jno
push
inc
adc
adc
push
addr16
mov
out
bound
add
add
out
sub
sbb
push
sbb
repz
sub
dec
push
fs
into
repz
mov
push
lods
pop
and
lahf
add
adc
iret
cmps
pusha
add
jb
push
iret
in
push
and
and
add
dec
sahf
sub
add
add
sub
jge
bound
int3
push
pushf
sub
push
repnz
repz
cmp
push
jo
repnz
push
stc
add
add
add
test
daa
push
sub
and
add
or
mov
inc
sbb
sub
adc
inc
clc
dec
jae
cmp
je
(bad)
inc
xchg
and
mov
sbb
test
or
test
cmp
push
and
(bad)
and
or
inc
pusha
cmp
inc
in
icebp
dec
push
les
rcr
and
dec
loopne
push
mov
dec
jge
xchg
and
add
scas
dec
dec
test
lods
push
or
cmp
and
sbb
fcomi
int3
and
push
mov
clc
fild
sub
pop
das
xchg
xor
cmp
pop
iret
lock
test
adc
inc
cmp
push
cmp
jae
adc
fist
xor
mov
or
arpl
in
push
push
push
aad
aaa
aaa
pusha
pop
mov
dec
xchg
es
cmp
sbb
jns
xchg
lea
and
into
mov
daa
add
or
rcl
push
sete
cmp
add
fmul
inc
out
es
mov
addr16
ins
and
inc
pop
sub
fld
xor
nop
add
dec
pop
popf
xor
cmp
mov
sub
sti
in
les
xchg
push
cmp
(bad)
xchg
push
fsub
or
add
push
mov
inc
mov
sub
repnz
imul
fcomp
add
inc
cwde
cmps
or
loopne
inc
pusha
out
or
rol
pusha
cmps
adc
add
or
add
fist
movs
mov
(bad)
(bad)
nop
inc
adc
pop
sbb
dec
xor
js
sub
leave
pop
test
add
push
add
add
ror
push
test
jl
add
adc
les
cld
cs
shr
dec
xchg
jne
pop
pop
ins
imul
inc
out
je
lahf
das
add
adc
push
sbb
data16
lods
fiadd
fiadd
nop
rol
pop
sbb
sbb
imul
mov
enter
pop
push
ins
jg
jbe
in
add
or
or
das
pop
pop
add
push
or
sbb
out
ins
arpl
out
ins
push
outs
out
loopne
and
sbb
ds
xchg
das
stos
outs
adc
jg
fist
push
loopne
fisttp
cmp
cmps
js
add
pop
imul
add
pop
imul
imul
loop
outs
jmp
pop
int
add
out
outs
sbb
shufps
add
pushf
xchg
loop
jno
and
dec
call
daa
daa
mov
adc
xchg
cmp
loope
leave
leave
enter
arpl
jne
push
fs
push
xor
ficom
sbb
add
dec
ins
inc
dec
sbb
dec
add
shr
retf
add
xchg
iret
pusha
fild
xor
iret
jo
rcl
jmp
stc
mov
dec
add
int3
push
add
cmc
add
iret
sbb
add
iret
mov
enter
dec
mov
add
or
add
inc
push
iret
pop
mov
sti
add
rcr
push
inc
or
or
aas
lea
or
cs
dec
stc
add
add
adc
mov
adc
xchg
fadd
or
stc
sub
pop
and
inc
xor
mov
pop
adc
push
imul
or
add
add
adc
xor
or
shr
adc
adc
rol
and
xchg
add
and
rcl
and
das
nop
push
aaa
mov
fsubr
adc
sbb
pushf
fst
or
sub
or
push
inc
adc
jo
sub
call
rol
and
or
enter
mov
add
pop
or
lock
push
pop
sbb
dec
fldl2t
inc
leave
add
push
rol
repnz
and
retf
xchg
sbb
cs
sub
mov
out
outs
int3
pop
cmp
in
mov
gs
jl
mov
jo
fld
xchg
gs
out
aaa
or
sub
shl
lds
push
xchg
neg
test
inc
and
cli
or
ss
jne
add
mov
pop
ss
xchg
in
mov
jp
cmp
sub
mov
push
and
pushf
(bad)
or
ret
xchg
or
call
jle
ins
in
stos
mov
adc
mov
mov
mov
jns
int3
push
dec
les
add
mov
sub
js
mov
or
(bad)
push
rcl
hlt
(bad)
push
cwde
add
mov
mov
(bad)
sub
jne
sbb
aad
push
sahf
jbe
dec
add
mov
inc
cld
adc
xchg
dec
cmp
(bad)
cmc
or
repz
and
push
sub
sbb
(bad)
cwde
lea
ss
push
in
movs
loopne
inc
push
hlt
xor
sbb
add
push
mov
add
daa
sbb
push
xor
jns
dec
and
in
xor
(bad)
(bad)
push
sar
retf
xor
mov
xchg
cmps
mov
add
pushf
or
push
nop
and
cmp
cmp
mov
fwait
dec
mov
cld
cmp
outs
push
in
int
pop
movs
xor
or
adc
or
lock
out
add
mov
add
shr
push
pop
(bad)
retf
loop
sub
mov
je
mov
or
xor
mov
addr16
mov
mov
shr
mov
lahf
xor
addr16
aas
push
jo
fcomp
(bad)
scas
int3
cmp
adc
sbb
or
sbb
out
pushf
outs
sbb
rcl
fldenv
add
fwait
loop
push
mov
mov
cmp
arpl
rol
push
imul
pop
mov
add
aam
bound
jmp
inc
fbstp
dec
jne
jo
add
shl
je
mov
and
clc
mov
jae
and
ins
ret
lea
sub
pop
xchg
shr
mov
or
pop
cmp
cld
or
jge
mov
jnp
test
mov
imul
jl
sbb
inc
lock
sbb
sbb
mov
arpl
sbb
inc
das
push
sbb
mov
rcl
mov
xor
jae
in
adc
loopne
mov
dec
and
and
in
jb
jecxz
in
in
mov
loope
and
xor
xor
jmp
xor
cmp
popf
cwde
gs
jno
jo
add
jl
push
lea
rcl
ss
(bad)
clc
cmp
jne
and
cmp
xlat
fld
sbb
jno
jmp
stos
mov
rcr
push
movs
call
in
jb
lods
in
retf
loopne
in
sub
or
aam
test
rdpmc
rcr
or
loopne
push
fs
ds
mov
cmp
das
cmp
add
aam
adc
je
std
mov
in
mov
std
sub
jb
or
jb
shr
and
inc
add
add
cwde
jle
call
mov
jmp
jmp
sbb
aaa
push
jmp
out
mov
test
movs
add
push
or
or
movs
dec
or
or
call
jmp
sbb
sbb
jno
mov
ins
mov
pusha
push
push
sbb
push
popa
in
pop
adc
sbb
push
pop
push
and
xchg
out
xor
loopne
add
jmp
and
and
mov
add
add
and
push
jo
pmullw
loopne
sub
sbb
push
sub
or
ins
jmp
add
jnp
es
or
vorps
push
je
mov
jmp
pop
jmp
fwait
rol
rcr
daa
je
cmp
xor
mov
scas
pop
aam
cmp
icebp
adc
stos
ins
loopne
inc
jb
stos
add
mov
jae
jg
shl
loopne
xor
mov
jecxz
and
xchg
cld
sub
adc
or
xchg
mov
adc
add
addr16
cwde
pop
cmp
sub
xlat
mov
dec
enter
or
or
add
sub
shl
sub
adc
xor
add
mov
sbb
jmp
adc
hlt
iret
out
push
hlt
mov
jnp
imul
sbb
cmp
mov
jne
xor
inc
mov
jmp
and
mov
pop
bswap
(bad)
mov
pop
mov
test
inc
adc
mov
inc
push
dec
sbb
add
mov
movd
inc
dec
lods
pop
cmp
push
push
or
outs
add
mov
pusha
rcl
dec
cmps
dec
fcomi
jmp
aas
inc
adc
mov
adc
xchg
xchg
add
pop
or
mov
pop
(bad)
(bad)
sub
sbb
add
and
das
adc
pusha
je
pop
push
fsub
lds
shl
(bad)
js
icebp
push
lock
not
jle
das
and
or
add
or
adc
push
mov
mov
test
or
inc
adc
lock
pusha
or
jne
add
(bad)
jns
xchg
scas
sub
adc
cmp
mov
aas
jnp
mov
sub
test
arpl
std
xchg
mov
retf
adc
add
add
pop
or
jl
push
inc
lock
pop
xchg
and
arpl
dec
add
pop
and
mov
inc
cmc
ret
ja
jmp
(bad)
mov
retf
shr
jo
clc
jg
or
mov
jmp
mov
push
or
adc
or
sbb
add
or
dec
lock
cs
mov
lahf
mov
or
sbb
pop
add
mov
sbb
cmp
mov
pop
or
call
inc
mov
sub
pop
cmps
push
sti
clc
mov
mov
xor
in
add
call
ss
sub
or
or
adc
and
fwait
outs
bound
add
pop
mov
loop
mov
push
and
ret
pop
pop
xor
mov
mov
cmp
icebp
out
add
repnz
add
data16
push
sti
ret
sbb
jb
add
inc
jmp
fs
mov
arpl
jp
ins
sbb
add
cmp
loopne
add
test
push
inc
cmp
js
nop
(bad)
cmp
das
add
dec
aad
or
cmp
clc
popf
hlt
or
lock
dec
or
fimul
push
stos
cld
or
xchg
mov
cmp
push
jle
ret
or
xor
fidiv
cmc
jae
or
jnp
jmp
mov
fadd
daa
adc
pop
mov
sbb
add
push
sbb
test
jle
jne
mov
adc
adc
xor
xor
sub
arpl
or
pop
cmp
sub
adc
mov
mov
and
or
mov
shr
pop
and
adc
iret
repz
mov
mov
cmp
push
sbb
sti
mov
adc
pop
and
adc
ror
jno
adc
dec
push
js
or
daa
pop
add
xor
adc
out
enter
dec
mov
or
loopne
adc
cli
add
sub
push
inc
jmp
sar
xchg
pop
rol
mov
xor
sbb
cmp
sub
loopne
pushf
add
pop
push
add
not
js
dec
nop
jmp
mov
xchg
dec
ins
(bad)
fwait
in
and
xor
dec
push
cmp
adc
es
xor
or
push
and
jp
pop
push
iret
or
cmp
adc
aaa
mov
jnp
sub
shl
retf
scas
in
push
sub
mov
jno
rol
sar
cdq
add
mov
sahf
out
ds
dec
push
push
and
dec
ret
les
adc
mov
add
mov
bound
cmp
inc
sbb
mov
jg
mov
pop
adc
jmp
or
jmp
or
adc
jmp
add
jle
jmp
pop
neg
push
add
push
sti
out
rol
in
in
pop
pushf
sub
pusha
pop
js
push
ins
iret
dec
iret
add
pop
ret
cmp
ja
jl
cwde
mov
jno
fucomip
xchg
shr
fiadd
adc
jno
jb
mov
(bad)
adc
inc
bound
push
test
push
jae
or
add
mov
sbb
and
jmp
test
cmps
adc
cmp
ja
push
jmp
sahf
cmps
retf
push
mov
sub
aaa
xor
jns
jge
adc
dec
sbb
fidiv
shl
push
cmp
xor
pop
push
repz
cmp
jnp
outs
jp
das
push
push
mov
rcl
fbstp
push
mov
push
push
cmps
mov
je
sub
fdivr
add
sub
div
repz
push
add
cmp
and
or
adc
push
sti
or
sbb
add
in
or
xchg
dec
add
and
retf
in
fisttp
add
or
add
add
add
in
or
or
pushf
jl
stc
add
or
aad
dec
mov
and
push
add
ds
adc
loopne
or
aad
or
imul
clc
sbb
add
push
pop
sub
push
mov
inc
stc
or
xchg
iret
adc
cmps
sub
jmp
hlt
mov
push
iret
add
outs
add
sbb
retf
add
add
in
mov
adc
or
pop
jg
inc
mov
or
retf
in
adc
adc
adc
xor
push
add
dec
xchg
dec
xor
adc
add
sbb
int
dec
xchg
mov
and
cmp
or
iret
xchg
xchg
retf
and
add
test
and
inc
and
pop
jecxz
cmp
call
imul
add
mov
dec
mov
sub
inc
jmp
in
inc
dec
iret
leave
repz
sub
adc
mov
fcom
mov
in
imul
lds
cmp
cmp
jmp
out
sbb
xor
outs
sbb
(bad)
or
fmul
and
repz
dec
mov
loope
jns
add
mov
xchg
xchg
or
dec
add
xchg
loopne
add
(bad)
pop
xchg
ror
push
and
inc
outs
push
pop
push
cmp
repz
or
loopne
lock
mov
popa
mov
push
shl
cmps
add
adc
or
push
sub
sub
adc
mov
jge
push
or
xchg
mov
push
cmp
adc
push
mov
aam
cmps
adc
or
cmp
loopne
adc
pop
or
dec
mov
push
inc
push
inc
sbb
dec
imul
mov
push
ret
or
nop
shl
sub
xor
pop
imul
jae
daa
sub
adc
mov
js
pop
adc
sbb
addr16
cwde
xchg
inc
loop
loopne
push
jl
test
xor
ins
or
or
imul
xor
xlat
(bad)
sti
sub
xor
push
jne
mov
cmp
je
sub
add
aas
fidiv
add
into
lock
js
push
inc
jae
inc
sbb
mov
ret
push
hlt
add
jae
ss
push
popf
mov
push
xor
out
adc
jecxz
dec
cmp
iret
lock
xor
jp
and
mov
test
ins
jbe
mov
mov
sub
sbb
add
ficomp
cmp
mov
xlat
xlat
add
inc
cmp
mov
call
ror
test
aad
ss
fild
jo
xor
fs
lock
repnz
push
mov
xor
pop
loopne
push
das
add
pop
push
or
fwait
imul
mov
into
mov
ror
pop
add
es
or
push
mov
cmp
or
movs
sub
push
and
(bad)
cmp
push
push
mov
(bad)
in
retf
jo
mov
or
or
push
mov
adc
and
xor
fld
lods
and
into
add
mov
pop
ret
inc
in
add
das
fcmove
add
xchg
rcr
nop
dec
inc
dec
add
mov
lahf
pop
pop
dec
and
sbb
scas
pop
or
pop
fiadd
addr16
js
xchg
fadd
push
sbb
xchg
or
inc
mov
adc
mov
int
push
adc
inc
mov
loopne
add
test
mov
inc
rol
and
push
xchg
mov
xor
or
add
imul
mov
or
jl
lahf
fisub
or
adc
test
pushf
xor
and
inc
test
call
xor
sar
mov
and
aam
fild
addr16
jmp
add
cmp
outs
sub
jl
mov
xor
stos
or
mov
adc
(bad)
or
xchg
clc
mov
push
das
push
or
dec
popf
cmc
into
ds
ins
icebp
fld
or
or
sbb
daa
rol
test
loope
xchg
sub
lock
iret
dec
pop
pop
inc
hlt
push
jo
inc
test
push
dec
lea
arpl
mov
pop
add
xchg
retf
hlt
jmp
js
push
xor
inc
outs
daa
fidiv
cmp
dec
repnz
(bad)
imul
push
add
(bad)
jb
inc
mov
rcl
and
add
rol
sbb
adc
mov
push
sbb
inc
das
lock
sbb
out
cmp
std
sub
or
pop
inc
adc
jo
or
pop
and
push
add
mov
push
push
adc
and
push
inc
adc
pop
adc
inc
sbb
outs
push
cwde
or
js
(bad)
adc
add
aas
in
pop
fdiv
nop
mov
push
and
push
and
sbb
add
nop
add
adc
pop
stc
or
scas
iret
adc
rcl
fdivr
push
pop
add
inc
shl
lock
pop
(bad)
fimul
pop
cmp
les
test
mov
mov
mov
or
fstp
adc
inc
sub
and
add
or
pop
mov
aam
test
inc
or
add
adc
aas
je
pusha
mov
add
loope
jg
ins
sti
and
cmp
sbb
and
cmp
add
(bad)
mov
fsubr
into
icebp
pop
ret
xor
je
jno
test
xor
adc
cmps
jle
push
pop
inc
nop
push
fdivp
mov
mov
sub
cmps
pushf
ffreep
ins
xchg
add
ja
int
sbb
outs
loope
xlat
hlt
rcl
fild
movs
inc
pop
loopne
cmp
dec
stc
push
ficom
in
out
lds
(bad)
cmp
lock
xchg
je
cmps
std
add
mov
push
mov
in
mov
jbe
aam
cdq
inc
inc
jne
gs
adc
in
mov
xlat
js
dec
xor
fadd
pop
or
inc
in
mov
mov
sub
mov
adc
mov
pop
call
mov
je
add
std
mov
or
je
xor
dec
lea
cmps
pop
imul
dec
sub
movs
inc
nop
cmp
cld
loopne
in
mov
mov
fwait
adc
es
lods
rcr
loopne
shr
fadd
push
stc
push
mov
data16
inc
pop
and
stos
or
inc
sbb
rol
inc
dec
ret
clc
(bad)
push
xlat
dec
or
(bad)
inc
mov
push
sbb
push
imul
mov
mov
mov
nop
mov
mov
icebp
cmp
dec
rol
ror
inc
cmp
dec
or
fcom
addr16
dec
dec
clc
inc
sbb
sar
push
adc
dec
cld
cmp
add
mov
fld
and
xchg
clc
test
mov
fsub
daa
mov
xchg
mov
dec
and
mov
cmp
mov
mov
shl
int3
add
aas
fdivr
ret
mov
jae
jge
sub
adc
(bad)
xchg
clc
push
xchg
add
dec
fiadd
mov
fcmovnb
mov
add
pop
je
out
push
jge
fimul
jo
dec
pop
mov
out
xchg
sub
mov
call
push
jge
mov
sub
daa
cwde
or
in
and
mov
test
jl
cmp
jl
push
pop
pop
sub
and
mov
scas
movs
in
fwait
mov
fucomip
lsl
adc
pop
jl
and
ds
jg
mov
push
fidiv
inc
push
adc
or
ins
fisttp
add
jne
or
adc
push
loope
mov
nop
or
or
dec
lock
je
sub
ret
add
popa
imul
lea
outs
or
xchg
jge
pop
shl
xchg
push
add
push
or
ror
or
and
push
cmp
adc
cmp
inc
test
popa
hlt
out
jmp
int3
cmps
fwait
sub
popa
mov
sub
or
call
jmp
cmps
aad
shr
push
push
or
xlat
push
or
call
cmps
cmc
aam
ret
pop
mov
retf
and
nop
test
sbb
repnz
pop
sbb
cmp
xchg
push
dec
daa
adc
rol
lods
adc
push
std
test
sbb
popa
add
test
leave
and
push
fsubrp
and
popa
cmp
retf
test
sbb
popa
aam
(bad)
cmp
xchg
mov
jl
or
ds
jg
push
test
and
jmp
dec
add
fadd
cwde
jle
mov
aad
js
daa
(bad)
mov
pop
add
cmp
in
adc
push
push
mov
xchg
sub
add
mov
mov
mov
and
sbb
sub
shl
js
push
popa
push
push
sbb
idiv
inc
ret
mov
or
inc
or
jmp
cmp
icebp
mov
pop
pop
or
popf
jbe
xlat
push
mov
into
or
lock
or
and
and
adc
mov
inc
shr
call
out
add
pop
mov
jecxz
enter
sbb
out
jne
imul
neg
and
adc
mov
mov
pop
aas
xor
aad
mov
mov
push
stos
pop
out
or
inc
or
ret
mov
add
sub
(bad)
push
cs
adc
ret
mov
(bad)
lea
loop
cmps
inc
and
lahf
shl
ja
js
(bad)
mov
mov
xchg
shl
movs
call
xor
es
str
mov
inc
rol
rcl
in
pusha
mov
or
pop
(bad)
out
in
and
mov
pop
ret
push
ror
xor
inc
xlat
jle
or
or
jmp
cmc
inc
sbb
(bad)
lock
ror
xor
push
xor
test
inc
rep
stos
shl
cs
out
pop
lods
icebp
adc
jne
call
std
add
sar
outs
or
or
add
sub
call
or
sbb
rol
sub
push
cmp
pop
shl
mov
mov
clc
mov
xor
cmp
mov
add
xchg
fs
xchg
loope
jp
lea
ret
les
jmp
jge
inc
cld
xchg
cmp
mov
push
or
cmove
iret
fsub
and
pop
lods
sbb
iret
cmp
and
rcl
xor
cmp
push
(bad)
push
rol
shl
pop
add
and
jl
sub
pop
mov
fsubr
push
and
xor
push
push
push
std
cs
shr
xor
jl
jne
aas
push
mov
xchg
adc
adc
add
popa
cmp
mov
pop
add
fist
sbb
(bad)
or
and
bound
mov
xor
push
leave
popf
mov
enter
dec
mov
aas
inc
inc
mov
sbb
inc
xchg
xchg
mov
push
loope
in
adc
clc
(bad)
not
lea
add
jne
mov
adc
xchg
mov
dec
dec
nop
or
inc
inc
push
icebp
sbb
retf
outs
adc
mov
and
push
imul
jnp
adc
test
or
iret
leave
pop
mov
jno
sbb
dec
ret
daa
and
and
sbb
xchg
lods
mov
dec
push
imul
movs
pop
add
movs
pushf
movs
lahf
mov
push
push
aam
xchg
arpl
es
cmps
fwait
xor
loop
mov
xchg
daa
pop
rol
dec
js
sub
inc
sub
adc
test
cmps
clc
aas
loope
cmp
jl
icebp
adc
icebp
adc
js
mov
stos
les
push
mov
push
enter
inc
out
not
jmp
dec
or
xlat
shr
cmp
mov
les
dec
js
out
or
mov
retf
(bad)
mov
loopne
scas
or
ds
push
loope
imul
fsubrp
(bad)
or
cmp
pop
cmp
adc
push
and
nop
sbb
popf
shr
es
xchg
js
pop
xchg
ds
test
cmp
mov
adc
mov
cld
sub
retf
inc
fidivr
sub
shl
xor
push
neg
ret
sub
cmps
loopne
div
mov
sub
ret
adc
movs
and
pusha
add
mov
mov
pop
or
clc
add
loope
iret
test
(bad)
mov
and
in
mov
jns
test
fsub
enter
mov
call
nop
aad
jg
adc
push
jno
dec
jecxz
lds
loop
mov
mov
mov
mov
adc
ficom
repz
adc
movs
add
inc
mov
push
adc
hlt
lock
(bad)
mov
adc
add
inc
pop
fcomp
movs
add
dec
cmp
(bad)
inc
jb
jecxz
(bad)
hlt
mov
mov
int
mov
movs
and
leave
add
mov
and
pop
stc
js
(bad)
movs
xchg
push
sbb
push
jecxz
(bad)
movs
cmp
mov
movs
aam
xor
add
and
(bad)
enter
movs
cmp
movs
cld
(bad)
mov
in
fs
pop
add
dec
mov
pop
add
mov
or
rol
inc
add
ret
mul
jo
gs
or
out
mov
addr16
xchg
cmps
push
lock
dec
sahf
inc
hlt
aaa
mov
into
fadd
and
inc
or
sbb
jmp
dec
or
mov
adc
sub
rol
shr
arpl
add
sub
inc
or
ds
push
imul
(bad)
fmul
xor
xor
fild
adc
ror
cs
call
push
std
call
stos
call
call
cmc
outs
stos
xor
cli
mov
xchg
ud1
add
out
pop
add
cmp
add
mov
pop
nop
rol
rcl
lea
shl
out
mov
ss
arpl
mov
push
ret
mov
and
add
cmp
sub
(bad)
lock
movs
mov
or
push
in
das
and
loopne
and
in
sbb
inc
mov
sar
and
or
test
cs
or
mov
inc
clc
xchg
adc
das
jl
jle
or
or
pop
inc
pop
pusha
add
adc
mov
mov
mov
push
rol
call
pop
cmps
sub
inc
jb
hlt
xchg
inc
test
jp
mov
jmp
das
nop
pop
add
add
cwde
xchg
and
test
(bad)
and
sub
push
ret
outs
cmp
dec
in
mov
mov
enter
cmps
arpl
mov
imul
outs
cld
dec
jo
xor
aas
mov
lahf
sbb
jle
fs
mov
ja
ret
add
sub
add
mov
mov
jno
ins
scas
call
lea
loope
sbb
hlt
push
loop
loopne
push
lea
xchg
or
aas
loop
jecxz
fsub
fstp
mov
dec
out
mov
test
dec
lock
inc
rol
into
mov
cmp
imul
mov
cmp
loopne
lods
dec
in
inc
scas
fmul
nop
mov
ret
cmp
mov
les
add
sub
dec
cld
jno
xlat
xor
add
or
or
or
mov
dec
fcmovbe
mov
mov
inc
lds
shl
and
xchg
mov
icebp
mov
mov
fadd
mov
setns
push
enter
mov
mov
dec
call
xor
inc
daa
mov
add
mov
js
std
mov
mov
push
cmp
xchg
cmp
or
ret
scas
sub
mov
add
and
dec
sbb
mov
cmp
or
push
inc
jg
pop
enter
or
pop
add
mov
imul
dec
ja
jg
inc
xchg
push
mov
mov
or
xor
lahf
mov
adc
inc
xor
jae
in
mov
mov
add
popf
sbb
lds
popf
cdq
out
push
lds
sbb
mov
jmp
mov
mov
ins
mov
lds
push
mov
inc
aaa
push
xor
xchg
cmp
adc
mov
test
leave
add
js
mov
and
test
jl
cmp
(bad)
lods
xor
call
inc
inc
loope
or
add
and
xchg
and
and
mov
ffreep
add
mov
outs
(bad)
(bad)
fsub
ja
test
mov
push
ret
add
jmp
outs
test
or
or
xchg
lock
hlt
enter
sbb
rol
inc
push
ret
mov
mov
push
ins
sbb
jecxz
and
(bad)
or
imul
mov
not
adc
push
adc
push
xor
xchg
enter
rcl
dec
in
mov
mov
xchg
enter
mov
push
xchg
adc
mov
mov
mov
inc
popa
mov
imul
leave
stos
sbb
outs
mov
and
nop
mov
and
and
push
dec
pop
lea
cmp
mov
and
mov
(bad)
ret
shl
adc
xor
add
xchg
shl
retf
push
ror
or
ja
xchg
pop
retf
ret
add
jo
xchg
inc
sub
fwait
add
lea
retf
xor
stos
sub
adc
in
aaa
push
retf
in
adc
ret
mov
repnz
xlat
mov
fild
mov
dec
inc
add
out
adc
pop
es
dec
or
mov
pushf
rcr
movsx
mov
push
adc
inc
xchg
cmps
xor
test
mov
adc
mov
nop
mov
daa
mov
or
inc
inc
mov
lock
cld
mov
das
lock
imul
js
aas
cmps
into
pop
push
adc
cmp
iret
daa
mov
cmp
scas
mov
mov
and
sbb
stos
mov
sub
adc
xchg
add
or
and
pop
and
loope
addr16
inc
sbb
shl
and
xlat
push
inc
pop
jno
pop
addr16
cmp
add
pop
les
cmp
sub
ret
test
and
jg
ins
or
add
aad
in
pushf
jg
rol
mov
rol
in
adc
(bad)
rol
rcr
cmp
ret
mov
ret
push
test
xchg
ret
pop
vdivps
push
out
les
add
sub
mov
js
xchg
cmp
aam
pop
push
int3
shl
aas
out
add
and
cmp
aad
pusha
sbb
leave
sub
cmp
sbb
in
pop
xlat
add
loopne
test
xlat
(bad)
inc
push
loopne
outs
adc
dec
shl
adc
fmul
adc
sub
loopne
pop
std
test
cwde
imul
nop
test
aas
movs
ret
cdq
cli
fadd
add
inc
aas
(bad)
retf
and
leave
add
adc
xchg
fdivr
mov
fnstenv
xchg
xchg
pushf
leave
dec
pop
imul
or
sbb
int3
jmp
fnstcw
ror
mov
dec
add
xchg
mov
leave
int3
add
das
test
adc
adc
pop
addr16
pop
loope
fimul
cmp
in
adc
add
test
(bad)
adc
inc
pop
retf
push
mov
mov
lea
jb
add
jl
ror
sub
and
push
or
fs
or
fdivr
xor
pop
pop
push
loopne
cli
das
pushf
jne
inc
add
icebp
sbb
dec
ror
jns
fdiv
int3
push
lea
jp
dec
cdq
adc
rcr
cmc
or
sub
add
loopne
fsubr
dec
cli
dec
and
inc
mov
fnsave
int
ins
sbb
jbe
cmp
adc
js
jl
add
add
dec
hlt
jne
loopne
inc
inc
test
xor
xor
and
ret
push
in
mov
and
push
inc
sbb
pushf
mov
es
aam
clc
jb
adc
addr16
jb
stos
shr
ret
adc
and
mov
inc
mov
(bad)
pusha
ret
push
loopne
push
ror
adc
sub
jecxz
outs
xchg
pop
inc
repnz
data16
pop
push
popa
je
rcr
test
or
je
jne
pop
xor
adc
push
into
les
mov
test
iret
or
push
adc
add
xor
aad
dec
xor
add
cld
cli
and
pop
test
iret
test
dec
push
leave
dec
iret
push
rol
cmp
(bad)
ja
or
mov
push
dec
xchg
out
or
push
loope
ja
shr
loopne
jmp
jmp
popa
push
jb
loope
inc
and
or
mov
test
fs
jno
enter
fs
adc
adc
cmp
or
shl
mov
mov
inc
add
rcl
mov
aam
aas
pop
or
add
aam
call
and
push
test
xlat
adc
dec
pop
xor
out
aad
rol
cmc
fcom
xor
imul
jmp
and
in
nop
add
daa
mov
cmp
xchg
out
shl
in
push
shr
aaa
call
jl
adc
call
inc
test
mov
dec
std
jno
cmp
hlt
fcom
outs
fdivr
pop
test
mov
xor
inc
adc
outs
push
nop
mov
push
fldenv
inc
dec
leave
dec
fldcw
enter
mov
outs
(bad)
daa
dec
push
and
dec
mov
add
cmp
lods
push
call
in
adc
jmp
add
dec
jmp
xor
in
fimul
in
or
add
imul
test
mov
fldcw
cld
outs
fnsave
test
bound
fstp
out
leave
mov
adc
cmp
jns
sub
fcomp
lds
xchg
in
mov
add
call
mov
rol
pop
pop
cmps
nop
inc
add
test
mov
aas
test
rcr
in
imul
int3
aam
cmps
fbld
or
movs
pusha
daa
cmps
push
lock
mov
fucom
out
push
retf
sbb
rol
in
dec
push
imul
icebp
iret
cmps
adc
inc
int
ins
pop
rol
push
nop
cmp
rol
add
or
and
outs
loope
mov
imul
shl
imul
fcomp
sbb
bound
xor
inc
mov
jbe
or
(bad)
fstp
pop
cld
icebp
adc
pushf
or
ins
nop
out
and
repnz
push
mov
xor
rcr
fs
call
jmp
cmps
sar
xchg
repnz
adc
dec
into
inc
cli
push
addr16
out
jmp
test
mov
and
mov
pushf
movaps
jb
add
pusha
jecxz
test
and
push
loop
push
ins
adc
sbb
pop
call
lods
pusha
sar
mov
in
out
mov
add
aas
or
rol
or
call
shr
test
sahf
cmc
mov
xchg
dec
out
(bad)
ror
add
loop
dec
div
fdiv
imul
jo
(bad)
jb
aaa
addr16
arpl
inc
push
imul
mov
clc
mov
in
dec
adc
loop
push
mov
ror
clc
call
inc
dec
xchg
sbb
add
clc
(bad)
call
xchg
rcl
mov
push
pop
dec
dec
jb
enter
mov
(bad)
in
call
mov
xor
inc
mov
in
scas
add
inc
add
dec
xor
jmp
cli
inc
add
cli
daa
sub
xor
push
xor
xor
out
jmp
test
cmp
jae
add
jle
push
int3
jae
and
xchg
push
or
jmp
adc
mov
dec
add
in
test
and
in
and
jb
mov
xchg
xchg
in
fiadd
sub
mov
aas
mov
sbb
adc
or
mov
daa
aas
int3
jae
aam
clc
dec
or
imul
add
mov
imul
add
add
xchg
mov
adc
mov
ds
test
inc
push
dec
pushf
(bad)
jns
push
xor
inc
sar
fwait
jge
sti
cmp
dec
clc
add
lock
fistp
push
je
pop
test
adc
push
and
mov
pusha
mov
rcr
and
out
mov
(bad)
retf
sub
or
and
push
jle
add
stos
das
push
addr16
sbb
inc
lahf
(bad)
push
clc
test
or
jmp
daa
fs
add
sar
mov
jnp
add
cld
mov
fild
dec
movs
std
or
hlt
add
ins
pusha
pop
add
and
mov
loope
ss
add
add
and
adc
lock
cmp
push
popf
add
xor
test
xlat
test
jb
lods
pop
sub
push
punpckhbw
xchg
xchg
or
call
or
adc
mov
add
jae
adc
or
or
mov
xor
fild
repnz
push
cmps
test
xchg
xchg
add
mul
add
push
inc
outs
add
add
popf
ret
loopne
lahf
les
dec
enter
fcom
(bad)
loopne
xchg
sub
push
push
cmc
lahf
jo
dec
and
pushf
xor
jecxz
sbb
push
push
lea
fwait
cmp
xor
add
add
bound
pop
sbb
inc
mov
mov
cmc
jnp
shl
pop
jg
push
int3
xor
(bad)
das
push
or
sbb
or
(bad)
cmp
inc
dec
inc
clc
js
(bad)
dec
adc
icebp
mov
dec
(bad)
cmp
or
test
inc
push
or
dec
jae
adc
psrld
daa
mov
jle
xor
inc
pcmpeqb
in
xor
inc
leave
enter
ficom
or
fs
leave
xchg
aam
or
in
ret
call
jb
push
(bad)
mov
cmp
sbb
cvtps2pd
loop
int3
adc
pop
aas
shl
mov
pop
and
nop
loopne
stos
push
enter
dec
add
loope
and
mov
or
imul
je
sub
sub
pop
xor
push
movs
pop
loope
enter
inc
cmp
pop
inc
push
cmp
dec
pop
and
xchg
or
sub
inc
das
sub
mov
pop
fwait
int3
mov
and
les
adc
or
sar
pop
or
inc
add
add
pop
sub
inc
shr
les
add
inc
or
adc
adc
xchg
adc
pop
popf
lahf
and
jno
jg
inc
inc
test
pop
push
add
call
mov
push
jae
and
xchg
pop
add
mov
pop
bound
add
push
and
add
mov
mov
lds
pop
xchg
les
push
push
dec
pop
jmp
adc
aad
aaa
dec
or
les
ins
mov
(bad)
mov
push
fcomp
pop
push
pop
xor
push
mov
lods
push
jo
or
es
cmc
inc
add
jmp
adc
or
(bad)
fild
enter
mov
inc
or
and
les
clc
adc
mov
in
add
or
sub
imul
prefetcht0
add
mov
sbb
add
dec
clc
neg
les
adc
cmp
addr16
jge
dec
les
lea
mov
stos
inc
cmps
movs
sbb
pop
mov
out
and
daa
push
adc
dec
shr
mov
adc
movs
sbb
dec
add
cld
adc
adc
pop
add
jo
rol
adc
xor
add
scas
aam
aas
cmp
push
fsubp
push
test
cli
push
push
adc
or
imul
xchg
shl
mov
test
loop
call
in
call
popf
dec
inc
adc
dec
push
inc
adc
mov
cmp
push
shl
jb
jecxz
scas
cmp
add
jl
jns
jb
hlt
cmp
dec
mov
cmp
inc
sahf
pushf
pushf
fwait
rcr
sbb
dec
dec
dec
xchg
daa
daa
and
popf
rcr
daa
daa
clc
inc
sbb
vmptrst
mov
pop
and
push
adc
mov
in
pop
dec
daa
in
sbb
test
pop
or
in
add
pushf
sbb
mov
xor
or
add
hlt
les
adc
xor
dec
add
cwde
prefetcht1
mov
shl
inc
add
sub
setnp
shl
sbb
mov
out
sbb
ss
xchg
adc
imul
sbb
movs
sbb
and
inc
sar
inc
and
or
sbb
imul
imul
push
mov
jns
mov
and
push
or
add
int
push
mov
xchg
dec
push
and
dec
add
dec
call
or
push
add
call
lods
inc
cmp
ds
in
push
dec
sbb
cmp
adc
inc
rol
adc
and
pop
test
add
inc
mov
pop
mov
xor
and
ins
sar
cmp
pop
test
sbb
cmc
adc
and
loope
push
ja
sbb
and
inc
clc
es
hlt
test
pop
add
fcmovb
xchg
push
int3
sar
push
pop
adc
xlat
push
add
pushf
and
or
push
sub
adc
shl
daa
push
or
in
mov
call
adc
fisub
xlat
aas
mov
adc
push
pusha
sti
and
xor
(bad)
shr
sub
ss
ins
add
inc
test
pop
inc
or
and
push
ficom
pop
in
add
cld
and
retf
pop
popf
jge
js
das
mov
dec
sub
inc
fild
repnz
jmp
adc
lock
dec
je
and
sub
push
mov
ret
call
mov
and
mov
xor
in
ret
(bad)
cmp
jb
fild
cmp
xchg
loop
daa
pusha
sahf
pushf
pushf
pushf
test
icebp
push
sub
dec
inc
dec
cmp
or
scas
js
in
sub
sub
inc
sub
pop
(bad)
push
adc
add
dec
test
lea
mov
arpl
cmp
push
lock
(bad)
hlt
cwde
mov
les
lea
jne
add
loopne
je
lea
sub
or
fs
lods
pusha
rcl
pop
(bad)
shl
lea
test
jae
cmp
add
mov
add
pop
lea
test
les
adc
or
lea
(bad)
jmp
fiadd
adc
lea
lock
imul
pop
lea
mov
add
or
or
jmp
sbb
imul
lea
push
or
(bad)
call
and
inc
dec
inc
or
or
lea
mov
mov
sbb
mov
lea
pop
add
push
jne
pop
dec
push
(bad)
hlt
mov
dec
in
mov
shr
dec
mov
mov
dec
mov
mov
out
(bad)
and
popw
mov
clc
and
les
cmps
aad
enter
mov
inc
cmp
and
xor
call
inc
frstor
in
lds
fdivr
adc
dec
add
or
pusha
push
test
or
jo
sbb
or
adc
daa
cld
mov
mov
push
or
mov
xor
leave
jb
dec
bound
into
dec
jmp
xchg
mov
cs
push
imul
cmp
in
call
add
es
das
das
sub
add
dec
(bad)
rcr
scas
xchg
push
movs
xacquire
cmp
inc
sbb
arpl
inc
or
loopne
and
mov
das
mov
in
mov
adc
in
pop
ja
sub
mov
xor
add
pop
adc
repnz
xor
out
mov
outs
cld
push
and
push
xor
ins
add
sar
rol
adc
adc
sub
xlat
lock
sbb
out
sub
dec
dec
inc
cmp
fsubr
add
xchg
cmp
sub
sub
sbb
jecxz
xor
outs
jae
shl
fld
bswap
daa
daa
and
xor
mov
jmp
xor
xchg
mov
fs
leave
mov
repnz
in
mov
adc
jp
jb
xor
mov
cmp
ins
pop
call
fisttp
ins
dec
xor
jle
add
out
pop
and
mov
dec
add
es
pop
and
sbb
cmp
stc
pop
test
enter
ins
xor
inc
jne
mov
dec
pop
mov
adc
pop
mov
pop
and
shl
pop
movs
add
mov
pop
fwait
loopne
and
pop
adc
or
pop
sti
push
pop
and
cmp
dec
add
movs
mov
pusha
aaa
lods
stc
imul
push
std
push
aaa
jo
sub
adc
jns
cmp
popf
lahf
push
or
push
dec
xor
mov
sbb
movs
pop
and
sub
xor
pop
xor
xchg
adc
pop
jae
mov
cmp
inc
add
and
jge
and
xchg
pop
jns
add
sub
ret
(bad)
mov
ret
(bad)
pusha
stos
outs
dec
repnz
repnz
in
dec
pop
mov
mov
mov
sub
sub
dec
pop
or
sub
adc
imul
aad
sahf
shl
xor
ins
add
or
inc
add
in
sbb
clc
sub
adc
adc
add
jg
nop
pop
add
xchg
mov
sub
dec
sbb
mov
inc
add
inc
jg
or
fdivr
inc
add
inc
jg
push
adc
fld
or
inc
cmp
das
add
dec
xchg
push
test
(bad)
adc
mov
pop
jle
stos
in
inc
fidivr
pusha
and
jecxz
sbb
mov
clc
jp
mov
adc
ss
or
jo
add
ret
rol
add
pop
add
mov
test
xchg
cmp
jnp
clc
imul
adc
jnp
outs
sub
and
adc
cmp
nop
das
sub
aas
inc
pop
dec
pop
inc
(bad)
mov
adc
inc
lahf
es
cwde
hlt
inc
sub
dec
sub
xor
test
inc
sub
add
push
repnz
loopne
dec
mov
aas
shl
bndldx
mov
jnp
add
cmp
clc
xor
js
dec
inc
sahf
pushf
fsub
inc
pop
nop
adc
dec
fistp
pop
sbb
or
mov
popf
xlat
pushf
mov
(bad)
and
mov
(bad)
sub
pop
inc
pop
sbb
aaa
enter
call
add
or
adc
cmc
add
dec
or
pusha
jno
pusha
and
cmc
mov
hlt
mov
xor
in
cmc
fld
push
inc
mov
fldenv
push
sub
mov
das
adc
mov
mov
and
sbb
add
xlat
(bad)
sub
fst
inc
jns
cmp
sub
adc
adc
add
add
push
add
inc
fst
mov
adc
sub
fstp
add
mov
adc
fld
mov
jae
and
inc
adc
sbb
add
push
mov
movs
and
fstp
dec
add
add
popf
not
lea
add
imul
cmp
dec
mov
mov
mov
pop
push
add
push
push
fnstcw
adc
test
dec
xlat
(bad)
jmp
sahf
sub
jo
mov
stos
inc
xchg
mov
sbb
shl
jno
rep
test
js
rcl
in
adc
add
mov
push
add
sub
add
pop
dec
test
dec
push
or
add
add
xlat
xor
fistp
push
outs
dec
shl
adc
dec
dec
dec
mov
adc
mov
std
push
push
cmc
dec
adc
call
push
jae
shl
pop
aad
dec
cmc
push
push
mov
std
std
sbb
ss
add
aaa
adc
mov
dec
pop
loop
xor
clc
cld
pop
inc
dec
mov
lock
xchg
dec
push
push
mov
ror
sbb
dec
inc
outs
loopne
mov
xor
repnz
daa
shl
mov
xchg
inc
leave
loopne
push
dec
mov
out
cmp
sub
je
xchg
push
mov
xchg
fcomi
ud0
dec
setno
daa
mov
mov
xchg
xchg
xchg
imul
cmps
out
pop
push
in
in
dec
jae
loopne
sub
cmps
pcmpgtw
ins
fmul
pushf
in
push
packssdw
fild
push
inc
or
jno
push
sub
es
daa
in
mov
dec
cli
rol
pop
dec
pop
dec
or
add
fs
xchg
xor
es
add
add
fld
mov
rol
test
xor
int3
jae
(bad)
rol
mov
test
hlt
mov
test
test
and
push
push
dec
sti
add
adc
pop
inc
ja
or
add
jnp
leave
mov
push
push
push
inc
add
add
nop
pop
or
test
adc
add
test
mov
imul
test
push
push
xor
pusha
jge
push
add
pop
sub
xchg
dec
sub
push
mov
leave
and
ror
pop
push
test
adc
dec
dec
mov
sub
push
test
adc
les
sub
push
in
or
inc
rol
add
or
push
rcl
jle
clc
icebp
add
aam
int3
clc
mov
add
push
and
sub
lds
pusha
aam
mul
jns
adc
mov
scas
push
add
fcom
and
mov
push
sub
push
fist
rcr
mov
cmp
mov
(bad)
push
idiv
push
jno
add
sub
push
loopne
pop
add
xchg
mov
add
(bad)
xchg
inc
repnz
add
test
add
pop
cmps
lock
add
add
iret
sub
nop
and
mov
movs
gs
cwde
or
and
push
dec
xlat
shr
pop
add
(bad)
hlt
outs
inc
xor
jns
shr
repz
std
fst
xchg
in
or
cmps
jmp
sbb
test
pop
cwde
ror
pop
push
in
inc
jo
xor
push
pop
divps
push
adc
xchg
ret
aas
xchg
add
push
jo
dec
lahf
mov
add
adc
ret
dec
push
add
scas
pop
push
xor
daa
or
and
pushf
pop
(bad)
and
sbb
or
(bad)
jl
cvttps2pi
jmp
sub
out
sbb
test
pop
nop
xchg
in
or
int
jmp
sbb
pop
pop
pop
pushf
mov
mov
test
pop
maxps
sub
and
xchg
cmp
cmps
add
test
test
pop
and
test
pop
lods
xor
pop
add
movs
imul
fstp
imul
icebp
xlat
sub
jge
je
mov
mov
add
into
repz
(bad)
jecxz
in
int
and
mov
clc
pop
inc
xor
daa
data16
pop
aaa
push
hlt
ss
pusha
pop
mov
cmps
pop
xlat
mov
pop
(bad)
test
sub
sbb
in
adc
lock
add
shr
shr
shr
imul
pusha
add
cmp
gs
add
push
shl
inc
mov
cmps
and
pop
cmps
fsub
push
xor
out
xor
popa
into
jg
xchg
add
and
imul
imul
shl
xchg
push
sbb
in
dec
xor
bound
pop
arpl
mov
sqrtps
cdq
pop
push
add
sar
fist
mov
enter
addr16
and
cmp
je
mov
arpl
loop
test
jne
shl
bound
pop
pop
xchg
add
mov
add
bound
sbb
gs
outs
test
adc
inc
aas
popf
out
or
push
aas
test
fldcw
pushw
mov
pop
add
fnstcw
orpd
outs
test
das
mov
adc
(bad)
sbb
cmp
int3
pop
lahf
inc
adc
jb
cmp
adc
cmps
in
gs
adc
addr16
push
sub
or
test
mov
xor
jmp
mov
push
test
mov
cmp
mov
add
add
test
push
mov
lahf
and
leave
add
scas
fst
fild
push
mov
push
add
(bad)
lahf
pop
mov
ins
mov
fcomp
aaa
push
popa
xor
jb
jns
(bad)
push
lock
leave
add
inc
lock
fsub
pushf
dec
dec
lock
sbb
icebp
rol
stos
jge
inc
inc
xchg
jno
(bad)
pusha
adc
inc
leave
add
add
dec
stos
dec
or
(bad)
mov
jg
cmp
loopne
outs
mov
dec
jb
jg
imul
shl
aam
ins
push
enter
ins
pop
dec
ins
push
ror
ins
jg
fisub
mov
outs
call
bound
adc
add
and
ins
sub
sub
cmp
imul
je
jmp
shr
xchg
sub
adc
sbb
ins
je
(bad)
pusha
(bad)
ins
aaa
mov
inc
xor
mov
or
outs
outs
outs
adc
add
outs
imul
sbb
outs
lahf
call
outs
outs
lahf
xor
ror
jo
dec
mov
ror
and
test
sbb
test
test
xor
outs
sar
xor
dec
nop
jo
add
dec
mov
jo
sbb
cmp
adc
xor
jno
adc
push
mov
das
mov
mov
push
lds
mov
mov
(bad)
jo
pop
pusha
jb
push
rcr
jb
mov
es
movaps
das
dec
inc
add
jge
pop
xchg
adc
push
and
push
dec
push
dec
sbb
jno
push
dec
and
cmps
ins
jae
call
int3
jae
pop
adc
in
jb
cdq
or
shl
xor
cwde
je
jl
xlat
fld
daa
enter
adc
adc
cli
xchg
js
stos
cmp
adc
jnp
gs
mov
dec
push
inc
scas
add
pop
pop
mov
push
push
push
cs
or
clc
outs
imul
inc
adc
mov
fcomp
jno
inc
in
shr
dec
fild
mov
stc
inc
or
ret
sbb
jecxz
and
pop
popa
jge
or
add
dec
shl
std
inc
pop
sbb
mov
push
out
bound
lea
add
fs
or
arpl
outs
adc
or
outs
jb
popa
ins
or
fs
xchg
or
jbe
or
mov
test
imul
js
imul
into
pusha
es
push
push
retf
jg
les
inc
push
mov
jb
jb
or
xchg
pop
add
xchg
jo
loopne
mov
adc
xchg
dec
lahf
mov
mov
inc
or
or
cmps
jb
pop
or
sbb
lock
adc
scas
loope
or
inc
dec
jae
sbb
sahf
mov
adc
cmp
cmp
ja
push
push
icebp
and
aaa
xor
add
outs
pop
cmp
dec
add
(bad)
jg
je
add
add
mov
je
imul
ja
out
jmp
adc
lds
push
and
fwait
out
outs
or
pop
xor
rdmsr
xor
xor
and
xor
arpl
es
jns
dec
jnp
(bad)
imul
in
xchg
jl
mov
nop
ds
sbb
(bad)
adc
fadd
repz
dec
push
rcr
jl
scas
jge
mov
cmp
lods
push
int3
mov
ds
sub
mov
push
test
or
sbb
(bad)
cmp
dec
gs
mov
push
inc
push
imul
int
inc
inc
mov
mov
nop
jge
inc
jno
or
add
or
fidiv
jle
push
jg
sub
aaa
rcl
(bad)
jae
fisttp
or
pop
fldcw
or
je
dec
add
ror
fld
daa
push
mul
enter
cwde
add
push
(bad)
and
loopne
sub
in
(bad)
inc
dec
call
and
pop
jnp
sub
jle
jnp
fs
fs
ret
cmp
test
or
mov
movs
push
cmc
mov
scas
out
scas
sub
bound
xlat
and
cld
xchg
add
jecxz
test
jl
adc
mov
mov
cld
xor
dec
outs
test
iret
ficom
push
dec
add
sbb
mov
cmp
mov
movsx
cmp
sbb
fwait
(bad)
push
or
cmp
sbb
jp
test
xor
shld
jmp
leave
leave
leave
enter
lods
cmc
adc
lock
mov
mov
cmp
ss
jno
xor
cmp
pop
xchg
pop
jle
aas
repnz
ja
lods
dec
imul
or
xor
jae
push
adc
sub
mov
jae
sbb
loope
mov
xchg
nop
jae
jo
dec
pop
aam
jecxz
mov
sbb
(bad)
dec
rol
mov
inc
or
pusha
pop
sbb
cmp
and
adc
jle
jb
mov
jae
int
add
sub
or
(bad)
sbb
add
div
mov
lea
push
or
outs
jae
pop
or
repz
add
jo
adc
xchg
out
xchg
push
jo
sbb
aas
ffree
add
xchg
dec
mov
icebp
pop
or
add
mov
mov
add
retf
or
adc
xchg
(bad)
nop
sbb
add
adc
or
push
jb
add
rcl
adc
mov
mov
adc
add
or
test
test
xchg
loopne
inc
ja
aaa
and
adc
sbb
adc
inc
test
in
pusha
jnp
pop
mov
or
loop
es
mov
add
adc
sub
mov
or
fs
les
mov
pusha
sbb
imul
retf
xchg
cmp
add
addr16
ds
aas
add
popa
ins
jg
in
test
movs
add
(bad)
popa
aas
in
dec
xlat
add
lahf
xor
pop
or
pusha
jmp
mov
ret
dec
inc
not
pop
sbb
arpl
mov
fidiv
dec
mov
and
mov
mov
add
add
popa
loop
jo
push
fild
cmp
or
mov
(bad)
mov
sbb
push
add
or
push
cmp
cmp
data16
mov
jae
sti
mov
lods
daa
inc
dec
add
dec
fadd
adc
add
mov
add
dec
inc
and
adc
das
ds
xor
add
mov
movs
stos
push
inc
gs
ret
push
loope
sbb
jecxz
cmps
sub
addr16
pusha
adc
add
aas
dec
adc
outs
shr
ror
adc
xchg
das
adc
push
sbb
fwait
sar
scas
popa
dec
sahf
sub
adc
pop
pop
inc
push
and
fcmove
sub
outs
jmp
cmp
out
or
push
sub
rol
sub
adc
mov
xor
inc
rol
xor
loope
inc
and
outs
test
dec
and
jo
inc
inc
fmul
cmp
sahf
adc
mov
pop
xlat
fisubr
(bad)
adc
js
and
and
mov
in
stos
ror
sub
dec
je
mov
fiadd
mov
dec
xor
pop
inc
imul
cwde
add
clc
nop
dec
add
add
mov
add
push
push
dec
punpckhwd
inc
retf
xchg
mov
pop
cmp
push
inc
xchg
dec
cmp
xor
sbb
dec
or
xchg
imul
ror
fist
cwde
popa
adc
mov
test
fnstenv
dec
jnp
mov
sub
dec
add
push
sub
jp
or
jmp
pop
dec
xor
add
jmp
outs
dec
mov
jmp
dec
scas
or
imul
lea
xor
ins
std
in
adc
jne
xchg
adc
int
pop
push
jg
sub
sbb
inc
aas
or
test
mov
jmp
mov
xor
aaa
std
sub
js
cmp
out
fcmove
rol
inc
pop
fwait
das
jle
sbb
xor
adc
pop
mov
or
push
add
repz
add
and
mov
js
adc
dec
push
jle
xor
xchg
mov
push
add
cmp
ja
or
push
cmp
jge
adc
sbb
sbb
aaa
cli
nop
sete
inc
inc
mov
xor
in
sbb
inc
jae
cs
jne
push
and
shl
add
pop
push
sbb
or
int
cmp
add
pcmpeqw
sbb
(bad)
or
ret
lgs
xor
cmp
and
cmc
mov
pop
hlt
std
xor
dec
cmp
cmp
or
fwait
rcl
fcomi
pop
fs
or
xor
add
call
inc
(bad)
cmp
fstp
push
or
dec
sub
int3
and
loopne
lock
pushf
xlat
in
icebp
inc
or
sub
mov
push
add
(bad)
fucomp
add
aas
div
inc
imul
rcr
mov
dec
cmp
ja
mov
rcl
mov
ins
add
adc
push
cmp
inc
retf
push
inc
inc
ror
mov
mov
push
push
xchg
jno
xchg
mov
call
dec
in
(bad)
mov
mov
cmp
ja
inc
or
and
and
pop
mov
sbb
push
call
adc
inc
fwait
lea
mov
inc
inc
movd
shr
sar
adc
cli
movzx
mov
sar
or
jo
dec
sub
sahf
inc
adc
dec
pop
inc
scas
ins
dec
or
jo
nop
pop
loope
rcl
test
push
adc
imul
adc
add
pop
pop
or
ja
inc
cmps
je
cmp
or
cmp
lahf
or
adc
dec
mov
cld
mov
jae
push
push
mov
bound
dec
or
pop
div
cmps
add
add
adc
cmps
call
mov
dec
cmp
(bad)
ins
dec
push
or
dec
fst
add
mov
jo
inc
cld
push
movhps
sti
movs
mov
(bad)
test
ret
gs
lock
sbb
mov
mov
sbb
add
call
(bad)
es
mov
cmp
xor
inc
cs
nop
rol
or
mov
nop
dec
sbb
outs
pop
dec
or
fiadd
or
in
xor
add
pop
jg
fisttp
push
or
and
and
push
std
psllw
pop
movs
fdiv
outs
or
fldcw
xchg
das
push
adc
mov
push
push
(bad)
mov
or
dec
pop
movs
mov
stos
or
inc
inc
fidiv
dec
jmp
jp
cmps
sbb
imul
add
dec
mov
cmp
mov
je
jg
cmp
je
jae
xor
and
add
adc
mov
(bad)
(bad)
jmp
jo
push
jno
sub
retf
jg
jne
add
test
mov
pop
pop
adc
push
test
dec
inc
dec
ret
or
fdiv
popa
je
jp
jge
inc
mov
xchg
pop
dec
nop
jecxz
adc
or
stos
pop
jo
pop
or
pop
jmp
sub
add
mov
(bad)
fmulp
loope
ins
fst
adc
pop
jne
mov
jnp
fsubr
ror
fcom
pop
add
inc
imul
ret
add
cmp
add
stos
popf
sub
outs
mov
sbb
lock
dec
push
cmp
push
or
pop
loop
pop
or
stc
push
inc
rol
sub
xlat
test
adc
cdq
mov
pop
add
push
mov
movzx
movs
or
sub
or
jle
nop
rcr
loop
dec
aad
int
sub
fcom
call
nop
scas
jecxz
inc
rcl
hlt
loop
cmp
inc
inc
adc
or
xor
inc
xor
ins
cmp
cmp
std
nop
sbb
clc
scas
cmp
test
jb
ret
sbb
out
je
mov
push
xchg
push
xchg
sbb
cmp
mov
hlt
jne
stc
push
clc
test
add
leave
pop
div
icebp
sub
push
test
add
add
mov
mov
repnz
(bad)
jmp
pop
push
push
xchg
add
xchg
adc
push
test
adc
sbb
(bad)
shr
loopne
iret
jmp
sub
mov
daa
les
das
jmp
and
loopne
es
xor
mov
add
sbb
movs
push
jl
(bad)
fst
jno
mov
jl
add
in
push
dec
sub
and
fcom
add
push
inc
nop
add
add
jb
xor
push
packsswb
and
and
cmp
or
aad
mov
push
cmp
mov
xor
xchg
imul
push
dec
je
mov
sbb
inc
mov
mov
push
mov
loopne
dec
lea
add
inc
xor
inc
sbb
push
mov
cmp
sbb
ret
and
sbb
sbb
in
mov
es
xchg
sar
inc
jne
pop
rcl
dec
lods
shl
push
mov
(bad)
cs
(bad)
cmp
jne
push
inc
add
imul
jle
mov
add
cmps
fisttp
jl
scas
adc
push
sar
xchg
push
push
jns
fmul
jne
cmp
mov
dec
pop
jne
xor
pop
adc
movs
enter
xchg
repnz
popa
add
adc
or
int
sub
je
mov
ds
cmp
pop
adc
adc
add
(bad)
cdq
mov
push
test
inc
call
sub
sub
int3
mov
fstp
cdq
dec
sbb
jno
inc
neg
inc
jmp
add
scas
push
jmp
hlt
test
cmp
pop
add
mov
mov
cmp
mov
pop
rcr
push
xor
xor
pop
and
std
and
adc
or
and
lock
xchg
cs
add
psubq
inc
dec
push
adc
mov
add
mov
add
xchg
mov
pop
inc
inc
add
or
sti
and
ja
mov
sar
in
sbb
pop
fnstenv
mov
cdq
sbb
aad
inc
popf
(bad)
icebp
and
(bad)
pop
ss
outs
pop
jbe
ss
imul
cdq
push
push
xor
adc
lods
jle
jb
push
hlt
(bad)
hlt
sbb
sbb
neg
jno
sbb
inc
cmp
ror
mov
inc
clc
fwait
add
cdq
idiv
dec
xor
xchg
inc
mov
sub
mov
add
dec
test
mov
cmp
dec
cmp
movs
jp
leave
add
scas
xlat
mov
pusha
push
xchg
adc
aaa
push
aam
movs
push
xchg
inc
ins
and
rcr
clc
cmp
adc
xor
lock
or
(bad)
dec
hlt
dec
inc
dec
jne
loopne
leave
imul
adc
ss
fneni(8087
pop
jmp
dec
dec
popf
adc
dec
test
inc
pop
xlat
scas
pop
mov
adc
mov
mov
push
add
pop
loope
call
shr
jge
fist
or
arpl
fdivr
test
fild
cmp
jle
repnz
clc
clc
scas
add
and
adc
push
inc
xor
sub
out
jecxz
sbb
mov
cmp
jne
jmp
es
cmp
daa
sbb
std
xchg
out
or
xchg
dec
shr
ret
aam
or
push
shl
sub
and
sub
sahf
out
out
sahf
cmp
or
hlt
and
mov
outs
in
jg
pop
inc
test
fisttp
mov
rcr
lock
mov
outs
ret
aas
cmp
aam
jae
inc
sbb
dec
xchg
add
mov
and
call
pop
cmps
pusha
mov
jge
jg
call
cmp
jne
cmp
ja
xchg
aas
(bad)
lea
or
aam
call
(bad)
xchg
xor
imul
push
cmp
out
pop
cmp
mov
mov
out
and
and
push
jg
add
fmul
mov
jo
xchg
push
and
mov
adc
mov
cmp
ret
ror
cmp
dec
add
outs
shl
call
pop
and
inc
imul
or
jmp
outs
stos
pop
mov
pop
pusha
js
imul
mov
pop
push
add
sbb
dec
mov
push
add
add
inc
pop
add
jb
es
outs
mov
or
inc
ret
push
xchg
push
test
js
push
mov
and
(bad)
cmp
(bad)
mov
(bad)
jge
inc
inc
and
les
scas
fcom
inc
rcr
jbe
adc
and
dec
add
in
or
push
(bad)
aas
stos
pop
or
outs
jne
jb
outs
jb
pop
push
adc
and
sub
not
mov
push
daa
inc
push
ins
adc
add
dec
push
ins
bound
outs
movs
mov
aaa
or
popa
jb
xchg
lock
push
or
xchg
xor
mov
sbb
or
or
dec
jne
ins
fs
inc
outs
outs
ins
scas
loopne
add
add
inc
sub
mov
outs
or
pop
ja
pusha
test
leave
cdq
rcr
data16
ret
inc
sbb
jbe
push
cs
or
or
clc
jge
in
inc
jmp
int3
mov
mov
mov
je
stos
test
mov
fcomp
sbb
fs
(bad)
test
push
je
js
pop
jb
pop
xor
ins
push
dec
movs
xor
add
and
ins
add
inc
push
ror
add
mov
pop
add
add
pop
fstp
arpl
mov
mov
adc
push
clc
adc
inc
jne
outs
push
std
int
sti
sbb
popa
das
or
or
xchg
ss
lods
rcl
push
mov
add
shl
pop
xchg
add
mov
daa
enter
stos
das
pusha
xor
fidiv
inc
test
outs
lods
push
sar
mov
xor
push
sbb
mov
sbb
push
push
mov
in
pop
fcmovnb
mov
call
push
mov
cmp
cmovbe
aam
jl
neg
fadd
sub
dec
push
ins
mov
adc
adc
sbb
pop
add
aaa
loopne
sbb
popf
faddp
sbb
das
cmp
and
push
cmps
rep
fisttp
jg
popf
push
adc
lods
iret
add
cdq
test
add
jno
sbb
or
dec
aam
fwait
mov
xchg
adc
pavgw
retf
scas
xchg
adc
mov
nop
ss
loopne
sbb
jo
cmp
push
fcom
(bad)
mov
data16
sub
and
pop
les
add
dec
jecxz
inc
xchg
inc
push
cmps
add
ret
popw
div
test
cmc
fcom
cwde
shr
pop
hlt
test
test
into
data16
lods
fisubr
dec
cmp
fild
mov
push
add
fcmovnu
jge
pop
(bad)
in
push
xchg
add
sbb
shr
fisttp
mov
push
rcr
jle
outs
ror
jo
js
add
mov
dec
rol
lods
xor
xor
fwait
out
inc
push
adc
daa
fbld
ds
xlat
pushf
mov
aas
fild
js
jns
das
mov
retf
jae
adc
gs
xchg
and
or
inc
push
popa
fs
jns
std
jnp
inc
mov
call
scas
gs
fdiv
xchg
add
xor
push
ja
sub
push
les
cmps
pop
cwde
add
mov
add
inc
jecxz
test
ins
and
pop
ins
sub
jnp
pop
mov
and
lods
pop
push
fwait
add
pusha
jmp
lods
fdiv
cmc
ins
cld
fst
outs
into
je
push
in
cmc
and
mov
mov
jo
pop
and
mov
mov
js
les
fadd
scas
ins
push
jae
loope
shl
jne
adc
or
pop
cmp
imul
outs
jne
jns
adc
mov
jns
jnp
adc
nop
xor
test
daa
movs
test
sbb
cwde
iret
pop
add
sub
mov
adc
cmp
or
in
jno
xchg
mov
pop
cwde
(bad)
int
or
add
add
inc
lods
gs
dec
jecxz
lea
push
dec
data16
ror
ins
adc
fucomi
jbe
adc
psubd
push
shl
scas
pop
std
jmp
mov
xadd
repnz
pop
pop
mov
outs
and
jb
lahf
loope
daa
and
mov
pop
xchg
jno
daa
daa
mov
sub
xor
ins
data16
(bad)
stc
call
jmp
fst
inc
in
pop
push
hlt
or
mov
xlat
push
ins
push
div
das
sub
mov
xchg
mov
daa
adc
mov
push
sbb
dec
push
fs
lods
add
sbb
push
loop
push
dec
stos
fs
mov
aas
nop
push
add
mov
or
add
xor
add
cmp
cmp
dec
mov
mov
sbb
cmp
sub
adc
imul
inc
pop
sbb
shl
xchg
jae
pop
pop
ror
js
test
push
mov
adc
xor
inc
scas
mov
and
pushf
arpl
fcom
outs
je
pusha
xor
xchg
add
in
rcr
dec
out
ret
sub
fcmovbe
adc
push
and
sub
push
movs
push
push
clc
or
add
arpl
or
add
mov
or
push
add
xchg
ss
test
outs
jo
pushf
push
xor
ss
pop
inc
adc
fs
inc
outs
jb
retf
cmp
adc
xchg
inc
data16
xor
rcl
mov
loopne
ja
jecxz
xor
cwde
or
xor
inc
jnp
sbb
push
inc
data16
pop
mov
in
sub
xor
or
pop
mov
inc
add
push
imul
add
mov
ret
aas
mov
rcl
shr
mov
aaa
mov
add
and
fmul
adc
mov
popa
inc
push
nop
push
or
xor
add
or
cmp
pop
sbb
test
add
popa
add
cmp
dec
push
inc
dec
sbb
jecxz
arpl
ja
pop
ds
(bad)
adc
push
add
and
out
(bad)
cmp
or
or
test
adc
adc
and
or
fwait
ret
cmp
push
or
and
call
mov
popa
push
ror
inc
enter
call
dec
inc
test
adc
outs
bound
dec
test
hlt
xchg
or
addr16
lock
ror
and
jmp
nop
pop
mov
adc
or
call
(bad)
cmp
sub
and
fxch
inc
mov
xor
dec
mov
icebp
out
jmp
xchg
adc
or
jmp
push
bound
jmp
jo
fiadd
and
mov
xchg
or
das
and
add
xchg
and
hlt
and
and
and
and
mov
pop
jnp
and
and
and
xchg
mov
push
jge
adc
sbb
aam
xlat
and
stc
xor
jle
enter
pop
in
test
inc
pop
enter
aas
pop
or
or
js
pop
mov
or
push
inc
sbb
jmp
dec
push
in
sbb
mov
or
or
push
loope
or
and
xor
cli
pop
adc
and
cmc
push
arpl
scas
push
add
js
xchg
jle
cmp
inc
pop
adc
lahf
clc
daa
push
xchg
sub
retf
loopne
int3
mov
sub
mov
add
ja
pop
inc
mov
dec
lds
or
add
cmp
push
(bad)
or
ja
pop
dec
(bad)
ja
cmp
inc
movs
sar
or
daa
push
movs
xchg
scas
mov
jne
sbb
inc
or
add
sbb
or
add
or
jmp
aad
jge
out
xchg
fld
popf
push
mov
rol
popf
ror
fisubr
xchg
xor
xchg
cs
call
pop
push
mov
pop
movlps
(bad)
mov
push
int3
clc
shl
daa
and
je
adc
mov
cs
push
imul
jnp
pop
sbb
lock
fisttp
mov
push
lar
adc
pop
je
arpl
inc
pop
jecxz
mov
lea
jns
shr
popa
push
pop
or
outs
jo
jo
or
pop
loopne
adc
inc
inc
mov
popa
push
test
fwait
add
or
das
jo
fld
add
je
or
inc
mov
arpl
or
call
mov
inc
(bad)
inc
jns
dec
data16
xor
mov
pop
aam
sbb
mov
fisttp
xchg
or
xchg
test
adc
xchg
dec
mov
adc
jb
out
xchg
mov
test
and
sti
jg
or
scas
sbb
or
push
jl
and
or
adc
(bad)
add
pop
das
les
cdq
lea
loope
sbb
adc
pop
(bad)
jae
or
or
pop
mov
icebp
sbb
shl
mov
setge
test
(bad)
sub
daa
rcl
mov
inc
lock
sti
popf
add
push
mov
push
in
cmps
push
pop
or
popa
inc
dec
or
sub
ret
call
daa
fisttp
and
xor
fbstp
add
std
add
push
(bad)
jmp
adc
lods
mov
pushf
mov
mov
sbb
sub
lahf
(bad)
ins
mov
scas
jo
jbe
in
push
and
jmp
dec
mov
ds
js
xchg
add
imul
dec
loop
mov
jne
jb
lock
dec
shr
or
lahf
xor
sub
div
jns
stos
in
in
fdivr
imul
imul
add
(bad)
ins
push
popf
push
stos
fimul
and
adc
aas
imul
xchg
ret
pop
(bad)
out
adc
add
inc
push
push
sub
mov
xor
add
add
and
inc
icebp
les
push
add
and
mov
cmps
leave
and
add
or
cli
mov
bound
call
cmp
and
or
in
pushf
pop
shl
add
stos
iret
gs
fs
aaa
pusha
or
sbb
andps
mov
ins
jp
add
add
push
jo
fiadd
or
jo
pop
sti
or
inc
inc
xchg
jmp
ret
push
add
inc
and
imul
outs
cmc
into
out
aaa
or
or
or
movs
push
xchg
mov
(bad)
pop
ret
sbb
cmps
pop
outs
imul
repnz
daa
xchg
ins
movs
or
pop
push
outs
mov
out
push
out
sbb
cmp
push
sbb
(bad)
mov
or
int
ret
aaa
fwait
jge
loopne
(bad)
cmp
das
pop
push
and
and
test
push
xor
ror
sahf
inc
xor
inc
pop
add
sbb
out
inc
or
or
inc
arpl
add
and
ja
jne
arpl
sets
xchg
test
add
mov
inc
sar
push
ret
push
inc
xchg
add
test
test
test
mov
rcl
xor
and
dec
leave
(bad)
dec
sub
fdiv
sub
bound
outs
sbb
sub
ror
ins
outs
jae
lahf
push
push
jecxz
add
xchg
pop
or
dec
add
popf
add
ja
xchg
or
or
test
dec
jmp
pop
xor
adc
cmp
or
sahf
test
imul
cmp
sub
xchg
cwde
loop
xor
add
push
mov
bound
in
xchg
push
add
(bad)
pusha
mov
push
jb
aad
or
bound
pop
scas
push
and
adc
push
or
and
das
mul
inc
verw
(bad)
movs
mov
jb
add
jbe
enter
xor
shufps
jle
retf
icebp
dec
(bad)
ret
add
xor
jno
imul
mov
push
push
je
daa
or
call
es
xchg
push
sbb
adc
outs
cld
not
push
mov
enter
fbstp
push
hlt
push
inc
cmps
leave
add
mov
sub
inc
and
syscall
gs
xor
repz
jo
add
pop
jno
dec
ror
loope
add
pop
out
adc
add
mov
jge
leave
and
jne
mov
js
(bad)
mov
inc
push
or
test
cdq
test
add
enter
leave
inc
add
push
fs
rcr
shl
and
dec
inc
pop
add
or
mov
shl
cmp
add
and
xor
pop
pop
or
xor
xor
ss
sbb
in
jbe
stos
inc
push
or
mov
test
ror
dec
dec
inc
mov
and
fisttp
lods
push
and
push
into
pop
add
pop
fcomp
adc
pop
sahf
fidivr
or
ins
hlt
es
je
test
sbb
call
loop
mov
mov
xlat
add
aas
test
dec
(bad)
xlat
sar
sub
push
data16
(bad)
mov
movzx
shr
test
jne
mov
test
je
or
add
add
pusha
ret
aas
dec
jge
or
aas
adc
nop
shl
inc
sub
sbb
mov
test
aam
movs
test
js
jmp
jge
es
pop
or
rcr
mov
dec
and
sub
jae
nop
cmp
push
pop
fs
jbe
call
out
jb
ficom
jge
sub
mov
pop
rcl
mov
or
cmp
fwait
jns
mov
pop
cli
sbb
rcr
xchg
mov
jo
call
fs
call
pusha
and
fbld
jmp
sub
std
fldenv
sub
add
and
sub
inc
arpl
pusha
dec
arpl
xor
call
push
(bad)
test
inc
mov
ja
ds
jmp
xchg
cld
mov
mov
ss
cmc
fs
clc
test
movs
sti
pusha
pop
add
inc
inc
inc
push
and
push
out
xchg
sub
aaa
push
add
imul
or
add
sbb
jp
or
and
aas
call
sar
in
lock
jmp
adc
retf
dec
mov
sub
sahf
add
push
(bad)
xlat
jge
enter
push
jnp
jp
push
rcl
dec
imul
into
xor
xor
(bad)
ins
add
bsr
pop
dec
into
xlat
xchg
sbb
stc
add
das
inc
cs
popa
and
mov
clc
inc
inc
dec
scas
popf
pop
sub
mov
mov
pusha
and
in
jg
test
sti
or
jmp
inc
(bad)
sti
das
nop
inc
icebp
push
add
pop
out
into
mov
jne
fadd
pop
pop
cmps
adc
outs
push
jnp
mov
test
arpl
nop
js
shl
ret
push
(bad)
cmp
loopne
es
test
cmp
adc
inc
sbb
inc
ror
fwait
sbb
inc
cld
jg
and
xor
push
pop
mov
jbe
inc
cmp
or
in
jg
div
cmp
jg
(bad)
imul
jp
jp
daa
outs
push
push
test
in
mov
sub
xchg
jb
fcomp
sbb
xchg
popa
test
lock
shl
dec
call
jmp
cmp
jle
inc
jmp
clc
add
jle
sub
imul
ss
or
cmp
sub
idiv
retf
mov
jmp
cmp
in
mov
in
push
hlt
aaa
add
pop
rcr
dec
xlat
jge
xchg
jle
cmp
fist
and
je
inc
adc
mov
inc
pushf
test
dec
jmp
inc
sbb
mov
add
sub
push
int
inc
mov
ret
inc
add
cmp
imul
mov
pop
retf
inc
adc
sub
pop
pop
or
dec
out
inc
jecxz
sub
push
cmp
add
bts
xor
cmp
je
pop
imul
jb
fbstp
add
cmp
inc
push
and
mov
mov
sub
cmp
arpl
mov
pop
mov
pop
in
mov
mov
dec
or
out
nop
dec
adc
mov
fs
cmp
sbb
movs
repz
inc
test
aas
or
adc
fmul
push
jne
pop
ret
mov
sbb
adc
outs
outs
jecxz
cwde
fmul
inc
aas
test
push
ja
sbb
in
and
ror
adc
xor
pop
pop
ja
mov
ds
mov
cmp
call
add
pop
fs
addr16
cmp
dec
adc
in
push
aas
mov
cmp
clc
sub
mov
jg
test
or
jle
push
or
xchg
jg
ds
xor
inc
or
ret
add
adc
jnp
xchg
xlat
cmp
inc
inc
add
cmp
fwait
add
mov
test
jle
inc
inc
inc
lea
mov
test
sub
jl
pop
or
inc
or
or
xchg
sbb
inc
sbb
sub
adc
jbe
mov
push
xchg
sbb
dec
mov
xor
movs
mov
pop
inc
inc
pop
dec
jg
sub
or
mov
leave
cld
xchg
and
(bad)
inc
pusha
imul
jl
pop
jnp
mov
push
data16
movups
sub
enter
inc
push
outs
(bad)
and
push
push
je
sub
cmps
(bad)
mov
fmul
fwait
mov
jne
fcom
jg
or
jl
xchg
add
mov
jmp
xchg
rcr
jmp
cmp
jbe
and
xor
stos
(bad)
push
inc
pop
xchg
adc
and
jne
push
jle
lea
outs
inc
fs
jmp
out
add
or
lock
add
push
(bad)
loopne
retf
div
in
push
mov
adc
add
xchg
std
mov
pop
xchg
out
or
enter
add
inc
push
sbb
push
cmp
or
mov
inc
lock
inc
push
inc
inc
add
push
mov
loopne
inc
inc
shl
lods
or
inc
iret
lock
adc
ins
xchg
shl
or
std
fisubr
movs
(bad)
das
or
rol
scas
adc
cmp
jo
cmps
push
cli
cld
dec
dec
or
div
das
rcl
mov
mov
bnd
cmp
pusha
test
aam
and
fsub
bound
imul
add
jo
test
lock
loope
mov
fild
sbb
inc
out
dec
adc
std
cmp
rcl
sub
mov
or
dec
fdiv
add
imul
push
in
jmp
inc
pusha
or
aaa
dec
push
iret
popa
xor
fdivr
cmp
mov
aas
or
sub
mov
jb
pop
cld
test
(bad)
sub
pop
js
clc
xchg
and
rol
fsub
pop
adc
pop
mov
and
mov
fadd
ins
mov
xchg
outs
add
pop
pop
xchg
movs
xor
sti
hlt
push
jg
das
jbe
xor
inc
cmp
and
adc
inc
mov
dec
sub
test
jne
jl
cmc
in
xchg
xor
and
cmc
push
sbb
mov
rol
mov
nop
std
ds
test
mov
fcomp
sub
push
adc
je
popa
cmp
jp
cs
cmps
movs
call
test
mov
add
js
out
jle
retf
jo
pop
and
popf
hlt
mov
and
(bad)
int
fmul
jle
push
inc
jle
out
pop
fst
test
jne
xor
dec
ficom
int3
and
hlt
cmp
je
push
fwait
sub
iret
(bad)
popf
mov
mov
jmp
dec
enter
and
pop
mov
pop
cmps
push
(bad)
sub
clc
mov
out
inc
pop
inc
inc
xor
cmp
jge
aad
add
cmp
pop
inc
jae
mov
mov
fadd
mov
jne
pop
mov
and
cmp
outs
xor
jae
inc
sub
(bad)
or
and
pop
ins
or
jp
movs
rol
lahf
dec
pop
(bad)
or
(bad)
cld
ror
pusha
hlt
mov
jo
lahf
cmp
test
mov
or
jo
test
and
cdq
pop
clc
add
mov
test
pushf
inc
outs
mov
xchg
or
mov
sub
mov
and
or
jmp
push
shl
std
add
sub
add
jmp
add
inc
cmp
jne
xchg
jle
sti
adc
jne
jl
frstor
mov
out
ins
sub
enter
xor
push
push
js
add
adc
ror
(bad)
inc
add
push
push
push
hlt
call
pushf
adc
in
test
inc
pusha
inc
jmp
cwde
cmp
and
aaa
cmp
adc
loope
fucom
mov
int3
enter
stos
push
call
jae
je
or
push
stos
inc
dec
popa
outs
movs
(bad)
in
icebp
sub
dec
xor
mov
xchg
lods
sub
adc
shl
sbb
mov
ins
or
pop
or
idiv
lock
repz
and
pop
in
inc
xchg
push
or
scas
cmp
add
mov
lfs
ins
jns
add
add
add
dec
test
push
ret
imul
ds
inc
inc
je
sbb
lea
ret
jg
sub
mov
repnz
cmp
pop
js
inc
fbstp
leave
adc
test
call
shl
or
xchg
lods
sbb
adc
mov
sub
shl
add
dec
mov
enter
hlt
ret
add
jmp
ins
fbstp
icebp
rol
cmp
mov
add
xchg
iret
repz
repz
inc
aam
mov
pop
ins
cdq
mov
jp
cmp
or
or
cli
outs
(bad)
popf
or
cmc
sub
or
cwde
arpl
aad
adc
add
addr16
add
and
or
outs
pusha
jmp
pop
or
add
xchg
fmul
fisubr
sub
sub
inc
cmp
mov
lahf
xchg
pushf
inc
push
xor
inc
push
imul
enter
test
or
mov
fwait
and
imul
ret
push
lea
les
les
cmp
scas
inc
xor
(bad)
rcr
in
shl
add
pop
jp
shr
ror
push
dec
or
push
lock
adc
mov
mov
movs
xchg
jno
in
jno
repnz
leave
add
push
add
or
mov
ins
cmp
xor
in
call
cmp
fbstp
add
pushf
test
or
add
add
add
mov
(bad)
out
pop
mov
dec
clc
push
pop
and
jge
sub
sub
cmp
ins
sub
js
lea
cli
jbe
in
stos
js
je
pop
aam
jle
test
sub
in
add
mov
sbb
(bad)
add
inc
call
loopne
ret
(bad)
in
sub
sar
jns
adc
add
sub
sar
push
rcl
xor
out
add
or
pop
js
pop
mov
(bad)
clc
shl
js
xor
and
sbb
push
imul
enter
push
or
mov
sub
dec
outs
add
outs
jne
arpl
jle
fsubr
fwait
std
push
out
xchg
dec
rcl
inc
iret
add
and
mov
adc
std
(bad)
loope
push
jmp
pop
retf
into
add
adc
xchg
inc
fwait
inc
cmps
pop
mov
mov
pop
pop
mov
push
add
add
dec
inc
js
sahf
jle
push
pop
pop
xor
ja
rol
sbb
pop
xor
outs
push
sbb
push
imul
int
int
mov
mov
movs
popa
xor
sbb
add
pop
not
pop
jle
pop
jge
je
daa
cmp
adc
test
xor
inc
imul
retf
jg
sub
stos
sub
retf
add
push
mov
adc
enter
cmp
sbb
loopne
loopne
and
cmc
test
sbb
add
add
add
test
ins
inc
xor
ds
push
inc
or
xchg
xchg
icebp
add
and
pop
sub
daa
std
inc
cmc
pop
cmc
rol
ror
cmp
xor
mov
xor
int3
outs
push
aad
mov
add
aas
cmp
popf
xor
shr
and
push
pushf
aas
mov
daa
dec
push
(bad)
int
in
add
das
dec
aaa
lds
pop
push
mov
sbb
call
mov
jae
adc
adc
push
clc
mov
pop
push
shufps
xor
scas
pop
ins
out
or
cs
or
or
imul
stos
xor
test
pop
jl
sub
(bad)
inc
call
mov
jo
daa
sub
push
push
push
fsubr
dec
or
jnp
inc
lock
iret
into
mov
push
loop
mov
(bad)
iret
or
push
cmp
ja
(bad)
jle
mov
lea
add
rol
leave
add
bts
add
mov
div
int3
mov
mov
in
mov
add
jl
or
pop
out
popa
mov
lock
popa
shr
add
or
jne
fcmovu
iret
popa
call
xchg
sbb
sbb
add
inc
test
mov
mov
rcl
hlt
test
xor
div
push
out
shr
add
loopne
push
add
add
loop
test
adc
sub
(bad)
clc
pop
sub
add
xor
jmp
call
mov
sbb
push
mov
div
jp
repnz
add
lds
adc
add
cmp
jo
outs
out
push
inc
jmp
mov
mov
mov
sbb
xor
jmp
pop
in
cld
mov
lahf
xor
cmp
je
ret
addr16
stos
add
add
mov
repz
bound
ret
adc
inc
outs
cmp
in
cmp
enter
sbb
push
jbe
dec
aas
adc
rcr
push
lds
dec
ins
mov
das
sub
jbe
popa
push
adc
adc
sub
fnstenv
lock
cmps
push
mov
dec
sbb
fwait
loopne
add
dec
gs
(bad)
mov
jne
inc
ds
mov
(bad)
push
data16
stc
inc
cdq
adc
inc
cmp
fdivr
loope
mov
push
fmul
mov
jo
add
pop
js
jo
scas
je
add
add
mov
je
fs
xor
popa
(bad)
jo
out
cmp
mov
sub
fst
push
adc
movs
pusha
pop
sbb
add
test
pop
imul
sbb
in
mov
xor
ret
icebp
jnp
cmps
inc
cmp
pfnacc
push
out
arpl
out
mov
push
push
dec
(bad)
and
comiss
add
call
dec
inc
in
push
push
leave
adc
arpl
cmp
mov
inc
inc
jnp
pop
mov
aam
sbb
sbb
loopne
fist
add
mov
out
xor
shr
mov
arpl
jg
xchg
mov
or
add
sbb
jae
pop
mov
push
(bad)
in
pop
cs
adc
arpl
(bad)
inc
push
stc
dec
mov
xor
rcr
data16
rol
pop
ret
and
sbb
ret
or
inc
fcomip
dec
add
rcl
mov
push
and
push
loopne
add
idiv
ret
cmp
inc
add
fimul
push
loopne
add
or
pop
or
pusha
mov
cmp
aam
sbb
in
shl
daa
mov
neg
mov
mov
dec
out
dec
or
or
ins
xor
aad
sbb
lahf
add
add
xor
loopne
push
xor
or
in
add
outs
shr
jne
cmc
adc
pop
mov
inc
mov
xchg
mov
push
adc
jl
and
lea
inc
pop
adc
rol
cmp
shr
or
dec
test
in
test
ins
sub
ja
gs
push
mov
pop
bound
mov
adc
cs
stos
sbb
add
add
inc
ret
ret
inc
ret
scas
popa
and
lock
dec
scas
std
loope
repz
inc
mov
or
push
(bad)
dec
mov
retf
movs
imul
pop
aad
es
and
inc
push
in
pop
retf
or
add
push
mov
add
add
jno
adc
retf
jo
inc
ror
mov
mov
and
jge
adc
push
xor
xor
and
loope
adc
adc
dec
xor
out
adc
(bad)
fmul
or
adc
sbb
ja
repz
adc
das
mov
inc
std
adc
pop
sbb
ror
dec
xor
shl
mov
pushf
add
or
call
loope
std
mov
lods
call
jno
cmp
loope
add
shr
dec
loope
fimul
push
inc
jb
dec
call
cmp
jb
add
test
mov
dec
xchg
sbb
shr
sub
inc
xchg
arpl
xchg
sub
sub
add
dec
inc
adc
adc
or
or
mov
and
adc
dec
dec
add
adc
test
and
or
sbb
in
les
add
jo
xor
xchg
sub
lock
scas
jno
ret
std
sub
mov
inc
mov
mov
inc
adc
mov
or
jmp
into
lds
stos
addr16
adc
les
adc
aaa
scas
cmp
fld
je
push
adc
sbb
fnstcw
cmp
and
sbb
push
pusha
dec
fstp
push
pop
mov
push
rol
movs
ins
mov
adc
push
sbb
pop
popf
add
mov
adc
rcr
xlat
inc
jl
xor
bound
push
cmp
fmul
loop
pop
or
(bad)
add
mov
mov
and
jmp
jns
lods
add
jo
push
or
or
push
xor
shl
xchg
jl
xchg
iret
jo
jmp
aas
adc
test
sbb
in
fild
adc
mov
in
jmp
js
icebp
add
cmp
pop
ret
sbb
jmp
popa
ds
icebp
xchg
js
pop
dec
aaa
add
inc
add
jecxz
mov
sbb
push
pop
sbb
in
mov
pop
inc
movs
stc
sbb
in
adc
popa
lods
push
push
add
mov
adc
ret
sub
in
adc
mov
add
les
mov
fadd
adc
jo
add
ret
push
or
mov
movs
pop
dec
or
popf
add
cmp
sbb
fdivr
sbb
jmp
cmp
cmp
inc
inc
retf
ds
jecxz
push
xor
rol
add
xor
push
test
adc
jbe
adc
popa
push
cld
fadd
ss
xacquire
hlt
add
lahf
add
push
loopne
jge
or
call
or
or
dec
cmp
pop
sbb
or
cmp
add
sbb
enter
fldcw
add
add
stc
inc
xchg
ss
add
mov
dec
and
arpl
dec
cld
mov
add
outs
add
les
ret
or
js
xchg
sub
fsubr
xchg
(bad)
fld
sub
pop
js
jno
or
mov
dec
adc
mov
hlt
aam
adc
pop
xchg
add
push
mov
data16
jge
sub
(bad)
enter
pushf
or
push
xor
inc
pushf
mov
sbb
ret
push
int
sar
mov
ret
and
(bad)
and
add
test
fild
inc
js
imul
int3
mov
adc
(bad)
mov
dec
xchg
and
cdq
mov
mov
mov
pop
or
inc
out
inc
pop
add
cmp
add
call
and
and
sbb
aas
or
push
pop
pop
cmc
inc
call
ret
inc
push
push
sub
mov
sbb
(bad)
lods
fs
inc
pop
jmp
das
das
movs
out
jne
addr16
cmp
jl
mov
mov
outs
add
jmp
mov
fdiv
jne
lods
mov
gs
sbb
pusha
or
stc
in
push
inc
push
sub
popa
xor
add
pop
or
push
or
adc
pop
sub
pop
mov
mov
movs
cmp
mov
fucomi
jecxz
xchg
adc
(bad)
push
or
lock
push
adc
call
cwde
jle
mov
mov
xor
inc
push
and
push
add
shl
dec
les
dec
pushw
xor
or
lock
imul
sbb
sbb
stos
or
ins
sbb
or
shr
ins
sub
or
adc
xor
test
rol
call
je
mov
pop
dec
sbb
pop
out
mov
pop
outs
sub
dec
add
push
in
das
xor
sub
call
inc
rol
or
test
push
ret
mov
inc
scas
ss
clc
cmp
jne
fdiv
cmps
xor
add
(bad)
cmp
je
mov
mov
sbb
and
icebp
push
add
add
int3
sbb
xchg
push
hlt
xchg
lock
adc
cmp
mov
mov
cmps
cmp
test
fidivr
(bad)
or
rcl
cmp
mov
jb
pushf
ret
add
retf
add
mov
inc
je
(bad)
adc
(bad)
sbb
(bad)
popa
sti
pusha
cwde
retf
ja
and
mov
add
adc
mov
mov
ins
inc
adc
mov
jbe
mov
test
jne
daa
inc
or
sbb
cmp
mov
sbb
cmp
punpcklwd
jle
cmp
mov
movs
ret
outs
out
inc
and
xor
inc
sbb
pop
or
adc
add
fisub
jne
ret
mov
mov
xor
das
rcr
idiv
idiv
(bad)
jg
ret
cmp
inc
pop
sbb
mov
mov
in
xchg
mov
add
rcl
sub
xor
out
cli
sub
jb
or
dec
inc
dec
jne
inc
enter
mov
mov
scas
dec
mov
jo
ds
ds
cmp
je
xor
and
push
or
and
test
int3
imul
adc
xor
(bad)
inc
push
inc
sbb
mov
xor
arpl
dec
ss
jb
pextrw
outs
sbb
jle
dec
test
jl
xor
sub
cmp
jge
mov
inc
jmp
inc
jbe
and
jecxz
imul
into
mov
lea
mov
push
xchg
fsub
add
push
daa
pop
jne
test
sub
xchg
ret
inc
or
add
test
mov
pop
je
push
cmp
(bad)
mov
mov
push
mov
or
in
or
repz
or
sub
lahf
ins
jnp
mov
mov
mov
sbb
sbb
xor
or
add
mov
sub
mov
adc
push
out
add
in
pop
jmp
dec
jne
jmp
(bad)
test
add
fnsave
sbb
sbb
and
movs
push
cmp
jo
adc
(bad)
adc
push
pop
ret
ficomp
test
mov
adc
mov
ja
lock
xor
mov
fbstp
push
add
sbb
pop
ins
rcl
cmp
push
(bad)
xchg
mov
xor
shr
loope
fsub
push
stos
sub
sbb
lea
or
push
(bad)
add
(bad)
ins
push
adc
add
add
xor
test
xchg
sbb
je
mov
sbb
push
mov
mov
push
ror
lds
adc
dec
mov
adc
xchg
add
retf
mov
jmp
or
mov
mov
inc
sbb
xor
aaa
jp
mov
(bad)
mov
ret
cmp
cs
outs
clc
mov
push
push
adc
cmp
or
ss
adc
(bad)
shl
push
int3
out
iret
lock
xor
cmp
add
ret
inc
cwde
daa
xchg
pop
mov
sub
mov
ins
or
mov
jmp
jmp
std
cmp
xchg
dec
inc
or
ss
mov
mov
push
mov
cmp
je
mov
inc
xor
adc
xchg
and
sub
mov
cdq
pop
adc
pushf
sti
push
pop
xchg
xor
jle
jo
jo
pop
mov
in
daa
int3
mov
mov
enter
mov
jnp
xor
inc
jl
pop
pop
pop
test
dec
mov
mov
pusha
imul
popf
add
retf
or
sahf
nop
pop
dec
sub
cs
repnz
test
xchg
mov
and
inc
add
mov
mov
jmp
mov
mov
inc
xchg
adc
add
mov
push
push
push
setb
fcom
jmp
pop
test
clc
mov
cmc
adc
idiv
and
pop
leave
inc
sub
inc
jb
pop
xor
and
leave
inc
inc
or
pop
inc
mov
cmp
cmp
mov
iret
popa
movs
std
ficomp
pop
daa
rcr
(bad)
(bad)
fisub
mov
inc
adc
ds
add
mov
(bad)
xor
or
and
pusha
mov
xor
sti
sbb
movs
or
cld
test
and
mov
std
pop
adc
xor
push
cmp
jne
jmp
pop
iret
adc
add
cmp
mov
add
mov
mov
add
and
in
push
add
push
adc
sbb
sbb
lods
(bad)
test
jbe
test
pusha
mov
jb
nop
enter
add
movs
nop
xchg
or
inc
push
inc
icebp
ret
xor
cmp
mov
jae
add
lock
imul
mov
ins
pusha
mov
push
(bad)
sbb
test
sahf
add
mov
mov
imul
add
jno
movs
jl
pop
xchg
or
es
mov
ror
mov
adc
cdq
pop
or
push
add
jge
sti
in
and
push
sbb
push
sbb
jp
xchg
sub
rcr
call
cmp
data16
or
rol
pop
retf
dec
not
loope
cmps
add
adc
and
and
sar
jo
mov
cmc
(bad)
mov
je
cmp
jne
pop
mov
test
jg
and
ins
mov
add
xor
hlt
cmp
mov
call
call
retf
sub
cmp
out
mov
push
clc
push
and
inc
mov
add
push
cld
rcl
adc
inc
push
lds
(bad)
cmp
dec
leave
add
sar
mov
jnp
jmp
mov
add
jbe
ja
pop
es
test
loopne
outs
(bad)
add
scas
push
dec
jne
(bad)
mov
jmp
stos
sbb
inc
(bad)
dec
push
jne
fist
and
adc
push
inc
aam
iret
rcr
je
pop
add
push
aad
mov
push
inc
dec
jae
push
mov
sbb
ret
add
fs
sbb
in
aam
retf
stos
outs
fiadd
add
xor
ja
movs
ret
xor
cmp
mov
enter
aaa
and
cmp
mov
push
sub
mov
enter
jne
(bad)
test
jne
dec
push
pop
jo
or
dec
cmp
aam
fs
mov
xor
lods
sbb
test
pop
push
repz
cmp
les
sub
push
pop
push
adc
hlt
enter
int3
and
ds
fmul
push
outs
and
into
sbb
gs
pop
(bad)
int3
adc
or
lock
mov
cmp
mov
sub
call
or
mov
pop
jbe
add
pop
dec
fdiv
pop
(bad)
fbstp
inc
or
jmp
cmp
cmp
in
clc
add
jnp
je
mov
inc
xor
fidivr
adc
adc
jo
sbb
mov
push
pop
jnp
bswap
dec
arpl
inc
loopne
cmp
or
jmp
inc
fld
ror
mov
sub
add
ror
repz
cld
in
pop
fldenv
pop
push
hlt
dec
icebp
ret
sub
mov
rol
pop
clc
cmps
xor
xchg
push
dec
mov
sti
js
rcl
adc
pop
add
sahf
xchg
clc
setg
rcl
popa
sbb
stos
add
imul
retf
pop
adc
lods
fist
inc
loopne
shl
outs
mov
fadd
xchg
retf
popa
pop
sbb
(bad)
sbb
and
sbb
(bad)
out
xlat
or
sar
sbb
sbb
add
jno
rol
out
inc
dec
fsubr
xor
or
adc
dec
sbb
(bad)
cmp
mov
and
xchg
seta
push
aas
ds
daa
cmc
inc
jne
and
rcr
(bad)
xor
push
add
mov
or
fimul
xchg
inc
add
cwde
xchg
lock
lock
cli
pop
and
adc
sbb
jl
inc
push
push
(bad)
mov
jle
call
mov
shl
mov
je
mov
out
pop
pop
test
je
cmp
lock
call
dec
fcomp
pop
jne
outs
fldenv
movs
aad
mov
push
aaa
dec
jnp
sti
adc
jg
inc
jne
in
test
inc
aam
sub
adc
cmp
jne
pop
call
cwde
push
pop
cmp
addr16
adc
pop
mov
mov
pop
inc
cwde
sbb
add
mov
stc
aad
hlt
xchg
mov
ret
mov
jbe
in
mov
dec
mov
mov
add
in
ror
mov
mov
mov
gs
mov
lock
and
jmp
add
or
mov
add
xor
inc
aaa
cmp
inc
dec
cmp
push
out
ret
or
push
test
inc
nop
cdq
sub
and
inc
stc
call
cmp
dec
ins
adc
dec
pop
adc
jo
test
test
call
inc
movzx
cmp
je
sub
mov
cmp
sbb
and
mov
cmp
jmp
mov
sub
inc
xor
(bad)
push
add
add
fadd
pop
add
test
cmp
cld
xchg
test
inc
pop
hlt
mov
pop
jp
xchg
pop
xchg
dec
mov
push
add
mov
fwait
push
inc
adc
mov
mov
cmp
cmp
dec
cmp
test
inc
loopne
mov
pop
push
xchg
push
clc
or
cmp
lahf
adc
pop
pop
push
pushf
jmp
rcl
sbb
inc
cmp
pop
aaa
and
mov
pop
jae
add
pusha
sub
(bad)
mov
out
mov
cdq
aam
xor
jb
or
mov
pop
(bad)
ins
push
jmp
sub
or
fsub
jp
mov
mov
inc
dec
into
cmp
mov
cmp
lock
icebp
xor
push
(bad)
dec
add
cmp
call
rcl
ror
icebp
sbb
xchg
shl
xchg
inc
add
dec
xchg
clc
add
out
cld
dec
ret
push
or
xchg
out
aad
daa
or
sbb
ret
xchg
adc
dec
lods
mov
adc
add
push
push
arpl
and
sbb
ret
pop
inc
adc
jae
xchg
and
das
adc
mov
add
icebp
pop
shl
add
mov
into
loopne
fcom
ds
or
in
jno
or
fldenv
mov
and
xor
and
dec
inc
cs
fcomp
adc
(bad)
mov
and
jns
xor
fs
in
jle
add
cld
mov
xchg
and
push
fdivr
pop
sub
add
pop
out
lock
popa
clc
push
mov
fdivr
shl
pop
outs
popf
lock
sub
sbb
inc
pusha
mov
sub
add
sete
in
xor
mov
ret
and
cdq
and
cmp
and
or
or
push
cwde
cwde
xor
popa
mov
inc
mov
dec
pop
jne
add
pop
xor
dec
sbb
inc
adc
add
fisub
dec
add
sub
dec
sub
popa
cmps
dec
ret
ss
jnp
lock
cmp
pop
dec
add
cmp
mov
imul
dec
xchg
and
(bad)
nop
mov
pop
div
xchg
repz
add
push
and
pop
pusha
mov
enter
ins
nop
sbb
xlat
mov
cmp
mov
add
push
and
outs
pusha
add
imul
push
popf
sbb
dec
adc
inc
test
je
sbb
out
push
mov
js
test
jle
adc
add
sub
sbb
xchg
add
push
pop
das
loope
push
in
adc
pop
cmp
loopne
mov
push
add
fidiv
jle
jmp
pop
cld
dec
push
or
inc
cli
pop
imul
cli
cmps
mov
ret
pop
imul
rcl
mov
shl
fwait
(bad)
in
mov
cmp
pushf
mov
push
pop
pop
or
es
call
and
pop
js
test
add
fst
sbb
dec
sbb
in
sub
mov
cmc
call
sbb
call
add
mov
mov
bound
push
add
pop
aad
mov
xlat
jl
mov
mov
int3
(bad)
ror
data16
enter
adc
pop
or
in
ins
cmc
dec
xchg
and
pop
popf
aam
xchg
and
mov
cwde
push
cli
mov
mov
scas
ret
push
rcr
lock
clc
je
mov
shl
fistp
inc
addr16
xor
pop
add
repz
call
popa
add
mov
rcl
push
aam
cs
inc
xor
test
aaa
or
scas
daa
sub
fiadd
icebp
in
loop
inc
lods
mov
cmc
jle
sub
iret
ror
push
or
mov
fcomip
push
cmp
(bad)
push
mov
pusha
adc
loop
jecxz
and
cmp
sbb
inc
cmp
push
ins
push
push
bound
pop
shl
add
push
call
sbb
add
scas
(bad)
or
adc
push
imul
push
xchg
add
outs
hlt
jno
cmp
adc
add
cld
add
xchg
movs
push
call
clc
xchg
mov
ret
sar
je
ficomp
fist
loopne
cld
sti
push
into
mov
mov
xchg
addr16
adc
lea
jle
inc
push
mov
adc
xor
mov
ret
add
add
imul
(bad)
pop
xchg
xchg
add
or
sbb
fdiv
scas
cmp
jge
cmp
sub
mov
scas
pop
push
mov
or
pop
test
adc
cmps
aam
push
sbb
pop
pop
mov
cmp
call
int3
jecxz
inc
inc
ja
lea
cmp
out
mov
loope
shl
add
stc
ret
pop
add
or
lock
dec
(bad)
je
ja
mov
push
adc
mov
jmp
cmp
nop
or
add
xor
or
push
test
mov
mov
mov
inc
adc
jg
sbb
xchg
push
nop
or
sbb
push
cmp
clc
mov
pop
adc
cmps
call
shl
(bad)
push
stos
push
adc
mov
dec
pop
pop
(bad)
xlat
aaa
nop
fwait
xchg
pop
adc
push
arpl
inc
sbb
adc
ins
inc
dec
or
add
or
push
dec
jne
popa
adc
xor
es
dec
and
mov
add
and
or
mov
pop
and
mov
cmp
push
mov
cmp
push
loopne
lock
lahf
adc
or
gs
out
call
test
je
push
ins
sub
adc
retf
lock
xor
clc
push
daa
jo
xor
cmp
daa
sub
and
gs
(bad)
pop
mov
mov
in
or
seto
and
inc
(bad)
out
push
fsubr
mov
cmp
mov
jge
mov
dec
pusha
inc
inc
add
adc
add
ss
mov
mov
cmp
and
pop
inc
pop
fwait
add
imul
dec
mov
xchg
adc
mov
push
push
mov
inc
ret
pusha
add
outs
pop
dec
in
test
xor
(bad)
ror
mov
add
sub
or
clc
ss
jns
dec
add
xor
bound
add
add
pop
pop
stos
js
mov
test
sbb
pop
aaa
(bad)
(bad)
stos
mov
pop
fucomip
cs
add
mov
das
adc
pop
or
add
jl
loop
mov
adc
sbb
jne
dec
inc
loopne
lock
call
jle
mov
jb
xchg
retf
xor
or
and
mov
mov
or
sbb
pusha
sbb
adc
jge
pushf
out
daa
add
loop
sub
push
jecxz
lahf
ret
cmove
adc
not
inc
jp
sub
mov
scas
lock
xchg
enter
add
add
and
adc
inc
and
add
jle
test
jmp
jp
mov
nop
movs
or
add
mov
mov
adc
aaa
inc
or
inc
and
inc
push
or
fist
call
imul
imul
add
push
mov
aam
dec
inc
push
cdq
inc
jge
test
test
add
push
pop
mov
movs
(bad)
fld
lods
xor
ret
push
xchg
inc
test
mov
add
mov
lea
mov
rol
jg
sub
and
pop
push
add
adc
mov
arpl
inc
pop
push
add
(bad)
or
movs
rcr
(bad)
mov
ret
xor
mov
nop
ss
div
dec
ins
cmp
jne
xor
lock
ja
adc
movs
adc
sub
into
mov
ret
lahf
(bad)
push
cs
or
xor
por
pop
out
push
inc
and
cld
adc
enter
repnz
xchg
push
cmp
ss
ficom
pushf
and
aam
xor
push
daa
adc
cmp
fld
mul
push
sub
(bad)
je
call
jno
das
sub
pop
les
cmps
es
sub
test
mov
mov
loope
gs
jo
imul
loop
test
sbb
fsubr
repz
mov
add
inc
ficom
out
mov
mov
jmp
adc
adc
(bad)
push
jo
add
inc
mov
repz
hlt
cmps
and
and
sbb
enter
jnp
push
sub
shr
(bad)
cld
pop
mov
add
fdivr
inc
or
adc
clc
hlt
jmp
and
push
or
add
add
inc
es
inc
or
mov
jge
int3
add
push
dec
jecxz
push
ins
add
mov
sub
jnp
lock
mov
or
inc
adc
or
clc
test
xor
jg
add
movs
test
and
add
or
leave
fwait
mov
int3
or
mov
inc
pop
cmp
mov
or
xchg
f2xm1
aaa
fist
push
ins
jg
push
sbb
inc
push
rol
and
nop
pop
mov
add
push
adc
adc
lea
leave
adc
xor
xchg
loope
xchg
movs
out
out
push
or
xor
xchg
sbb
xchg
sub
xchg
add
sbb
add
cwde
add
test
xor
xor
rol
xchg
mov
xor
add
sbb
mov
adc
and
in
out
outs
bound
xor
or
fadd
ret
add
sbb
jle
(bad)
fbstp
push
add
dec
ret
sbb
in
pop
mov
call
stos
jbe
jmp
in
cmps
push
rcl
or
adc
mov
or
int3
jmp
mov
sbb
jmp
jbe
xchg
push
fild
inc
or
inc
add
jmp
lods
sub
imul
jmp
and
push
push
push
dec
mov
inc
adc
js
mov
(bad)
in
ja
fld
sbb
mov
fs
ret
clc
pop
mov
adc
enter
lds
fs
cmp
test
cmp
sub
inc
mov
loopne
imul
and
add
push
xchg
xlat
arpl
adc
mul
ins
adc
inc
jp
add
je
pop
jl
js
hlt
sbb
fsub
inc
pop
(bad)
push
push
push
mov
cmp
xor
xchg
(bad)
cwde
add
cmp
jmp
jg
cmp
repz
or
stc
fnstenv
movs
cwde
sub
(bad)
imul
lock
imul
pop
aaa
fs
push
icebp
add
lea
retf
mov
pop
mov
push
stc
sti
in
add
cmp
mov
jecxz
call
cld
and
mov
jmp
inc
cmp
pop
pop
and
inc
cmp
cmp
cdq
inc
and
fs
add
jbe
lods
dec
add
sub
(bad)
outs
test
fisub
mov
sbb
shl
or
push
xchg
and
leave
retf
retf
push
mov
movs
mov
push
push
push
jge
push
es
xchg
fcom
push
cmp
gs
sub
arpl
ret
push
ss
and
pop
cwde
cmp
movaps
pop
pop
sub
sbb
add
or
loopne
xchg
test
adc
daa
xor
movlps
pop
(bad)
(bad)
repnz
lods
neg
mov
add
sti
mov
or
push
sbb
scas
movs
mov
mov
std
and
jmp
and
je
mov
sbb
and
pop
xor
in
jmp
dec
dec
pop
sub
pop
and
xor
hlt
xchg
push
or
out
sub
(bad)
jl
(bad)
cmp
les
fbstp
push
inc
mov
fimul
call
pushf
iret
cmps
jnp
std
add
mov
nop
cmp
dec
push
and
sbb
aaa
pop
inc
add
lds
setge
jle
mov
je
mov
sub
or
push
or
sub
or
loopne
scas
or
loopne
int3
push
or
dec
ret
add
jmp
sbb
mov
inc
mov
vpmacssdd
(bad)
aad
in
pop
iret
add
add
or
ja
cmp
jl
push
pop
dec
push
inc
pop
or
and
sbb
dec
jl
inc
pop
imul
cli
add
pusha
push
adc
inc
jle
rol
jge
pop
fbld
in
add
sbb
push
loope
add
xchg
daa
sub
sbb
popa
jns
sub
pop
cmp
adc
outs
dec
pop
adc
dec
jl
out
push
ret
not
sub
inc
and
jo
adc
test
or
ins
and
add
jno
mul
inc
add
pop
cld
cmp
addr16
clc
iret
leave
mov
push
adc
nop
in
fstp
ja
push
lods
ja
jnp
fsubp
push
in
enter
cmp
push
fadd
cmp
and
rcl
fmul
fwait
int3
xlat
mov
mov
ins
add
jp
add
cmp
js
mov
push
setne
je
es
push
popa
test
call
adc
ins
adc
add
inc
sub
xor
mov
jmp
mov
movs
repnz
in
lock
sub
inc
push
call
and
push
jmp
xchg
in
dec
lock
and
push
test
and
pushf
clc
pusha
add
inc
add
in
cld
sbb
inc
adc
les
push
popa
and
or
cmp
int
es
add
inc
dec
jl
mov
pop
pop
add
gs
arpl
dec
or
ins
shl
sub
adc
int3
sbb
bound
arpl
popa
jae
push
fadd
jb
push
and
addr16
cmp
loope
stos
jbe
add
xchg
data16
sbb
jae
pusha
mov
xchg
add
mov
sub
in
ret
nop
push
adc
xchg
ds
ret
fimul
push
push
arpl
mov
dec
adc
fnstsw
or
bound
cmp
imul
lods
or
pusha
movs
imul
or
pop
pop
push
add
aas
dec
outs
arpl
add
jg
js
inc
dec
and
sar
cmp
jae
or
push
dec
lods
jb
adc
test
push
je
jae
pusha
pushf
cwde
adc
dec
and
inc
fisub
js
fwait
cdq
loopne
or
dec
into
mov
xchg
and
inc
outs
fcom
sbb
mov
sub
imul
cdq
inc
jmp
(bad)
push
sub
inc
int3
jb
loope
dec
or
inc
push
xchg
xchg
dec
xchg
xor
push
outs
jae
jo
and
shl
push
outs
xor
lods
inc
mov
test
or
sub
sbb
add
mov
mov
sbb
lea
sbb
jmp
push
ja
arpl
cmp
adc
pop
and
pusha
mov
inc
gs
jge
or
mov
mov
push
popa
sub
outs
adc
push
mov
loope
xlat
bound
call
in
jne
arpl
das
fadd
cld
push
push
push
or
fstp
ret
push
daa
inc
jecxz
or
or
cmp
mov
mov
and
test
rdmsr
adc
mov
std
shl
and
adc
or
int
and
sub
adc
shl
lea
and
adc
mov
jae
jne
pop
ins
sbb
arpl
pop
fcmovb
sub
add
push
mov
or
push
jno
int3
int
test
in
sub
sub
dec
imul
mov
sar
mov
in
or
or
sbb
cmp
or
inc
leave
cmp
fmul
lock
or
rol
pop
aam
lock
popa
mov
mov
nop
xchg
aad
inc
push
add
mov
pop
add
add
inc
push
pop
add
and
inc
sbb
add
stos
lds
call
or
jmp
sbb
add
pop
adc
mov
das
cld
pop
fsubr
adc
das
or
xchg
dec
mov
or
xchg
xchg
outs
xchg
mov
xchg
stc
sbb
pop
xchg
scas
xchg
jg
add
ret
xchg
inc
sub
dec
in
shr
add
pop
add
pop
shr
push
inc
cmp
cmp
pushf
inc
cli
dec
add
fmul
stos
int
daa
push
data16
adc
(bad)
es
pop
and
inc
rol
lods
and
mov
dec
jge
jnp
in
xlat
and
js
fcomp
dec
test
scas
push
mov
imul
push
push
add
pushw
mov
ins
pop
pause
jmp
push
mov
mov
jp
and
push
rol
hlt
push
jo
out
ret
in
mov
push
pushf
push
mov
scas
sub
mov
lods
dec
jbe
push
fdiv
lds
in
lock
inc
retf
(bad)
imul
jnp
pushf
and
call
adc
int
ins
fistp
cld
add
cs
mov
fadd
push
fistp
shl
push
out
js
bndldx
adc
out
scas
(bad)
outs
pop
test
test
test
loope
push
mov
and
test
mov
jne
fisttp
fadd
jae
nop
push
cmp
push
ret
inc
push
ds
leave
dec
(bad)
inc
add
sysret
(bad)
call
add
(bad)
mov
mov
sar
push
or
xchg
ins
(bad)
call
or
push
push
je
mov
scas
xchg
sbb
ds
fcomp
add
ins
pop
loopne
inc
gs
adc
sti
jb
ret
das
cmovne
pusha
shl
int3
xchg
push
popf
stos
dec
outs
loop
ja
clc
in
lahf
push
xor
mov
add
mov
rol
clc
xchg
xchg
mov
aam
add
adc
aaa
fimul
sahf
dec
shr
dec
add
pop
adc
cmovle
fbstp
fistp
adc
or
push
jae
pushf
dec
adc
push
add
inc
das
sbb
inc
lock
iret
push
add
push
fidiv
mov
push
fs
sub
cmp
bound
or
lds
loope
adc
xor
cmps
popa
ins
outs
addr16
push
outs
jmp
inc
and
(bad)
loopne
sub
fimul
xlat
add
lock
ss
pop
push
psubd
or
and
and
call
inc
push
jmp
inc
std
das
mov
imul
rcl
mov
loopne
das
inc
push
add
loope
int
push
rcl
sahf
cmps
add
scas
cmp
sub
jmp
les
or
outs
or
fild
mov
push
fnstenv
fmul
dec
pop
fwait
or
dec
inc
mov
xchg
push
cmp
repz
and
pop
sbb
add
sbb
loope
fsub
mov
xor
mov
dec
inc
dec
lods
jnp
sub
or
push
push
jmp
je
mov
nop
idiv
push
lods
movs
pop
push
mov
xor
lahf
xchg
adc
fwait
adc
data16
ins
jns
and
xor
scas
gs
mov
loope
lea
repnz
sbb
sbb
pop
xchg
and
fwait
or
dec
std
mov
add
xor
xor
or
pop
movs
mov
adc
ret
pop
out
adc
or
es
or
nop
xor
data16
and
daa
mov
push
xor
mov
inc
inc
or
inc
sbb
je
mov
lahf
xchg
shr
arpl
xor
cmps
dec
pushf
ror
adc
xor
jp
js
pusha
retf
popa
js
xor
inc
push
cmp
rcl
or
cs
cmp
xor
push
test
or
fwait
loopne
push
pop
or
loop
adc
mov
push
mov
push
ja
inc
inc
ins
add
aas
(bad)
dec
xchg
sub
inc
or
jns
inc
dec
loop
xor
aas
lea
test
and
sbb
jae
inc
push
pop
add
cmp
mov
and
dec
and
xchg
adc
adc
jo
push
sub
pop
sub
cmp
dec
gs
dec
jp
test
push
daa
mov
lods
push
jle
jl
idiv
dec
dec
ror
push
push
inc
adc
dec
jae
push
ror
call
dec
gs
pop
xchg
shl
js
sbb
jo
or
adc
ins
retf
or
pop
test
dec
or
iret
inc
rcl
mov
add
addr16
cmp
loopne
xchg
mov
loopne
dec
outs
mov
movzx
in
ror
test
cmp
adc
mov
add
pop
sbb
cmp
add
icebp
lods
mov
ret
enter
xchg
cmps
jnp
sub
push
les
ins
ins
cmp
or
js
mov
push
call
dec
cmp
push
scas
adc
inc
xchg
mov
inc
(bad)
mov
fstp
movs
push
add
mov
mov
enter
fild
inc
test
push
add
jl
add
jmp
push
sbb
cmp
js
jae
sbb
test
xor
js
adc
inc
gs
inc
mov
outs
mov
imul
inc
fcom
aas
jmp
pop
mov
icebp
stos
shl
popa
fimul
pop
push
pop
inc
jb
push
and
lock
push
test
or
add
fstp
mov
xlat
movs
push
mov
cmp
push
out
inc
js
outs
fs
add
xchg
sar
jae
test
mov
and
pop
leave
and
hlt
dec
sysret
xlat
bound
push
and
xchg
xor
push
ret
pop
mov
cmps
fs
fsub
pop
int3
mov
lahf
cmp
inc
in
into
or
cmp
xchg
arpl
jb
in
add
mov
inc
inc
push
add
or
in
adc
pop
mov
push
xlat
inc
push
or
mov
(bad)
jecxz
add
dec
shl
rcl
push
push
xor
bndldx
push
push
sti
pop
loope
xor
sbb
push
inc
push
pop
mov
jecxz
in
jg
and
test
push
(bad)
in
and
pop
add
out
call
jns
inc
daa
pusha
repz
loopne
xchg
pop
jo
pushf
loope
xchg
out
push
jnp
scas
cmp
lock
xchg
inc
push
movs
repnz
mov
xchg
jnp
icebp
push
daa
mov
enter
sub
push
sbb
xchg
pop
add
push
dec
sbb
daa
jbe
xchg
cld
and
ds
int3
sub
bswap
(bad)
rcl
out
(bad)
aam
ins
out
jge
push
or
and
push
mov
inc
scas
lods
adc
mov
xor
jns
ins
push
aam
push
pop
push
aaa
out
jo
add
and
mov
popa
out
shr
mov
or
enter
fcom
mov
fimul
push
imul
rcr
fidivr
mov
retf
les
ret
jge
adc
sub
imul
sub
add
or
mov
cmps
push
or
fst
mov
clc
sub
loop
push
popf
lods
xor
dec
test
push
stos
adc
or
mov
je
dec
mov
sub
push
movs
cmps
lods
aaa
or
mov
add
test
push
loopne
ror
mov
adc
inc
dec
aaa
dec
in
mov
and
add
je
ins
shl
mov
les
pop
sub
call
inc
jge
addr16
add
lahf
int3
cmc
push
imul
mov
outs
arpl
rcl
adc
js
xchg
xchg
sbb
or
xchg
fcomp
sub
mov
push
or
std
pusha
loopne
push
gs
in
sbb
and
mov
call
adc
dec
ins
sar
push
push
jmp
cmp
xor
icebp
imul
dec
outs
mov
mov
clc
sbb
and
mov
fnstsw
imul
or
push
mov
xor
xor
adc
and
dec
push
sbb
imul
mov
out
int3
mov
add
add
push
loope
pushf
mov
jnp
and
pop
stos
jb
icebp
sub
and
out
xor
mov
addr16
and
jbe
sub
test
fmul
sub
mov
ins
loope
add
xor
xor
lds
loopne
mov
pop
mov
icebp
sub
or
jne
ret
(bad)
pop
cs
scas
mov
mov
dec
xchg
jmp
xchg
cli
jae
pusha
sub
add
ret
jae
movs
sbb
xchg
call
and
outs
xchg
push
das
std
push
dec
pop
ins
sub
and
data16
jo
adc
mov
push
push
jecxz
test
js
aad
and
test
cmp
jno
xor
sbb
jnp
sub
sub
push
push
ret
jmp
mov
test
jne
xlat
imul
rol
mov
mov
add
xor
sbb
jl
mov
xchg
pop
push
leave
cmovne
imul
iret
pop
push
dec
rcr
aaa
mov
(bad)
das
pop
pop
das
mov
adc
push
call
pop
pushf
std
(bad)
mov
maxps
xor
mov
cmp
push
pop
pusha
iret
ud0
in
ret
add
cmova
sub
stos
fsubrp
data16
push
push
push
dec
add
repnz
out
fisubr
add
stc
push
cli
jmp
cs
sbb
ja
add
adc
sub
icebp
pop
bound
add
add
add
add
in
add
sbb
mov
push
add
adc
push
dec
sbb
(bad)
(bad)
(bad)
fisttp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
cmp
mov
mov
mov
mov
mov
jmp
jmp
test
pop
lock
jmp
es
into
call
pop
pusha
xor
or
pushf
es
idiv
or
cmp
loopne
es
out
mov
push
cmp
pop
sub
fadd
fnstsw
iret
or
mov
das
pushw
pop
and
sub
xor
sub
push
fdiv
test
scas
adc
ss
sub
add
xlat
in
push
jl
cld
or
adc
mov
sbb
push
jmp
ss
xchg
push
fbstp
call
inc
push
mov
inc
sbb
ins
pusha
and
in
scas
adc
sbb
push
push
je
mov
movs
add
div
inc
clc
and
add
and
push
and
push
inc
mov
add
fnsave
mov
sbb
imul
add
shl
add
pavgb
jns
(bad)
in
and
or
adc
outs
jae
dec
sub
cmp
push
sub
sbb
aas
mov
call
mov
cwde
movs
jb
out
mov
adc
call
rcl
push
leave
jge
je
push
cwde
pop
les
loope
and
imul
inc
add
outs
arpl
or
dec
mov
loope
push
imul
xor
push
shl
inc
sub
pop
sub
mov
push
aam
ja
mov
xchg
inc
pushf
cmp
mov
mov
push
stos
(bad)
sbb
out
cmp
mov
mov
sub
lds
push
cmp
adc
imul
shl
popa
ins
jns
and
dec
jg
or
call
and
push
lock
inc
test
push
adc
and
mov
pop
push
(bad)
cmp
or
push
js
packsswb
sbb
shl
shl
inc
loope
cwde
xchg
xor
dec
lea
scas
cmps
and
lea
jle
inc
pusha
ins
dec
outs
fs
xor
sub
fucom
add
arpl
ret
cmp
mov
inc
pop
adc
mov
pop
pop
les
cmp
retf
into
jo
je
jecxz
inc
std
cs
adc
mov
sub
dec
add
add
xor
movs
add
sub
jmp
xor
scas
retf
xor
xor
push
adc
popa
dec
pop
adc
mov
sbb
cmp
push
sti
dec
inc
gs
cmp
mov
addr16
stos
add
imul
dec
rcl
add
ror
adc
cs
addr16
lock
sbb
add
pushf
(bad)
push
adc
cmp
dec
add
sbb
mov
arpl
cmp
push
mov
cmp
sbb
sbb
jmp
or
push
js
sbb
sbb
xchg
outs
inc
out
bound
inc
loop
sbb
stos
add
bound
hlt
mov
or
push
inc
or
adc
sbb
(bad)
push
not
test
idiv
int3
sbb
shld
out
leave
dec
test
js
daa
test
jecxz
mov
mov
cwde
test
sar
mov
inc
adc
retf
ds
mov
inc
lahf
xchg
pop
pop
lea
in
mov
push
lds
das
rol
cmps
mov
or
dec
les
inc
test
pusha
sub
xchg
jns
add
in
mov
or
xor
ins
dec
jge
jo
lea
sbb
mov
in
rcl
or
push
ja
outs
inc
sub
mov
inc
lea
push
and
test
mov
imul
int
add
adc
lea
or
jbe
and
call
(bad)
jge
xchg
mov
inc
push
xchg
je
ds
xchg
push
or
ins
add
shr
push
xchg
retf
push
or
sti
cmp
shr
in
cmp
or
push
pop
or
shl
hlt
imul
mov
pminsw
or
lock
sbb
cmovae
sar
cmp
cmp
or
sbb
add
sbb
cmp
add
ins
lock
fs
xchg
xchg
or
add
and
cmp
pop
outs
jne
xchg
push
imul
cmp
adc
add
add
mov
add
add
xchg
dec
fidivr
xchg
sub
jnp
dec
adc
rcr
xor
popf
mov
arpl
mov
in
dec
test
pop
test
inc
xor
pop
add
jae
dec
fstp
out
push
loope
imul
sbb
not
fiadd
sar
sbb
or
jnp
popa
push
mov
mov
sbb
or
xor
mov
sbb
or
daa
sbb
dec
add
pop
dec
sbb
mov
dec
push
dec
cmps
(bad)
in
adc
pop
add
jmp
jno
mov
and
pop
pushf
dec
dec
mov
fadd
retf
and
pop
pop
adc
mov
add
mov
push
sbb
adc
jp
inc
shl
and
inc
add
(bad)
pusha
and
loope
mov
icebp
push
aam
dec
dec
mov
inc
je
xor
mov
or
gs
inc
dec
and
pop
cmp
test
scas
jmp
add
pop
mov
stc
mov
dec
sub
clc
mov
out
sbb
ds
pop
dec
inc
sub
push
jne
or
cli
adc
fs
xchg
mov
jae
xchg
push
loope
sub
test
mov
sub
sbb
cs
jg
dec
pop
pop
pop
add
sub
mov
add
add
fst
das
add
test
sar
in
add
lock
or
rol
add
shr
fdiv
push
mov
adc
and
mov
adc
fst
add
xchg
mov
add
cmp
mov
jbe
or
inc
ins
xor
xor
out
add
shl
loop
xor
or
jmp
adc
(bad)
cmp
push
or
xchg
retf
jb
adc
sub
cmp
adc
(bad)
or
and
dec
jecxz
add
push
and
xchg
adc
scas
cmp
cmp
dec
daa
sub
add
mov
mov
add
dec
or
or
sub
lods
loop
leave
jmp
or
(bad)
or
or
push
add
jp
popa
out
dec
repnz
rcr
loopne
test
fidiv
scas
out
inc
lods
ja
ficomp
or
inc
add
adc
jmp
in
dec
mov
jl
popa
xor
push
jmp
mov
pop
sub
lods
mov
xor
sbb
fdivr
sbb
mov
or
add
aaa
and
xor
inc
adc
fwait
inc
push
rcl
add
stc
jmp
popa
outs
pop
dec
es
addr16
add
push
adc
mov
jo
clc
mov
les
inc
add
pop
aaa
lock
add
pusha
rol
sbb
dec
daa
cmp
sub
xor
aad
mov
sub
pop
dec
add
and
sar
sti
dec
add
and
lods
jecxz
mov
leave
sbb
xor
push
sub
(bad)
out
push
iret
daa
inc
or
and
push
dec
loope
popf
inc
xchg
dec
inc
push
add
adc
iret
jbe
(bad)
clc
dec
and
pop
adc
out
inc
movs
dec
add
or
dec
mov
int
loopne
jecxz
jo
mov
pop
fcmove
popf
addr16
jl
and
enter
dec
push
and
jmp
dec
into
fadd
add
and
cmp
sub
jnp
shl
pop
inc
cmp
push
add
pushf
mov
sbb
sti
and
add
inc
cmp
xchg
call
or
jne
push
pop
mov
test
call
mov
mov
outs
pop
inc
push
pushf
retf
shl
retf
pusha
jo
icebp
pop
sbb
fadd
pop
pop
bound
sbb
sub
mov
add
or
xchg
xor
xchg
das
test
pop
add
push
jo
retf
adc
cmp
pop
stos
inc
cmp
pop
sbb
push
enter
jo
xlat
pusha
add
push
sub
xchg
add
fdiv
ins
dec
loop
jne
(bad)
and
cmp
dec
cmps
bound
mov
shl
out
mov
in
or
imul
inc
fmul
add
cs
push
into
dec
aam
add
gs
cmp
inc
pop
sub
push
sub
dec
pushaw
dec
pop
in
jne
rcl
dec
pop
push
add
cmp
push
jo
jmp
dec
and
add
lods
jne
cwde
push
pop
add
gs
sub
jmp
(bad)
and
add
pavgw
adc
push
shr
sbb
inc
test
enter
jo
adc
shr
mov
dec
cmp
rol
sbb
jl
jmp
sti
jp
and
or
mov
push
pop
mov
jmp
mov
imul
jl
mov
ins
mov
mov
mov
dec
mov
fmul
outs
inc
data16
test
mov
jo
mov
pop
mov
mov
int
or
or
pop
mov
xor
pop
jae
je
xor
xor
xor
xor
push
jp
jb
xor
(bad)
call
xor
xor
call
or
pop
xor
xor
jg
leave
lock
sbb
or
enter
cmc
push
dec
add
add
pop
or
cdq
push
nop
push
or
xchg
pop
jecxz
or
xchg
or
add
sub
pop
fcmovbe
push
rol
xchg
mov
fadd
xor
or
push
(bad)
repz
add
or
and
bswap
jge
cmp
dec
inc
add
sete
repnz
dec
push
in
push
iret
ret
xor
push
push
mov
mov
mov
mov
(bad)
mov
or
and
in
jnp
mov
enter
dec
dec
push
je
loopne
xchg
sbb
ud1
xor
std
in
cdq
enter
test
test
xchg
inc
repnz
sub
add
not
cmps
pushaw
inc
add
jle
adc
xchg
fldenv
mov
repz
dec
dec
xor
mov
stos
pop
retf
add
pop
pop
mov
dec
mov
add
fisttp
stos
add
lods
ss
cmp
push
adc
jl
inc
daa
jp
test
inc
xchg
push
xchg
int
jne
add
shl
cmc
pop
pop
and
inc
jno
mov
jg
add
not
and
and
call
inc
sbb
push
xor
add
popf
and
or
or
mov
pusha
(bad)
lods
add
dec
int3
inc
add
xor
cmp
call
aas
adc
loopne
or
fs
pop
dec
idiv
or
mov
pusha
popa
inc
add
(bad)
pop
dec
pop
stc
movs
hlt
sub
js
or
faddp
sti
xlat
data16
cdq
add
or
add
in
test
push
add
enter
xor
loope
push
inc
cmp
adc
(bad)
nop
pop
inc
and
stos
push
neg
push
or
cmps
jle
push
pop
jo
loope
push
and
rol
fbstp
call
mov
inc
push
adc
sbb
inc
or
test
push
sub
add
mov
mov
inc
inc
inc
sbb
dec
sbb
inc
xor
add
add
int3
and
ins
gs
adc
or
cs
pop
sar
retf
adc
dec
bound
outs
jne
dec
add
pop
pop
pop
inc
ins
sbb
aas
or
push
push
fisub
sub
push
mov
mov
mov
or
js
loopne
sbb
fbstp
ret
mov
sub
add
repnz
dec
sbb
cmp
ins
ja
pop
hlt
or
fwait
jo
push
fcom
aam
inc
bound
repnz
and
das
dec
fstp
sbb
jl
push
popa
jbe
aaa
pop
pop
inc
outs
inc
mov
pop
ror
sub
sub
cmp
sub
sub
mov
xchg
icebp
push
add
push
movs
ficomp
mov
mov
rcl
pop
dec
dec
in
xor
add
ret
xor
or
adc
cmp
aad
sbb
in
jge
loope
popa
jmp
adc
test
jl
sbb
test
cmp
push
xchg
jmp
mov
jb
bnd
fisttp
sbb
jne
(bad)
adc
loope
add
fisttp
push
mov
lods
mov
jns
dec
inc
jl
and
pop
sub
ins
call
mov
(bad)
sub
xor
inc
outs
push
push
xchg
movs
dec
lods
cli
addr16
adc
ret
mov
movs
push
sbb
lods
pop
sbb
sub
in
xor
jae
push
sub
lods
out
adc
ins
clc
jge
pop
in
arpl
add
inc
jecxz
jo
cmpxchg
test
add
pop
pop
(bad)
popa
push
and
mov
bound
gs
push
or
stos
sub
pop
sbb
(bad)
stc
cmp
in
pop
lock
mov
push
outs
jno
fiadd
pop
pop
jo
aas
add
mov
pop
mov
out
cmp
rol
or
ins
mov
inc
jnp
bound
adc
iret
cmp
push
test
jp
jo
rol
and
in
imul
in
sub
and
xor
imul
sti
inc
data16
cmp
xchg
cs
inc
inc
mov
inc
inc
inc
inc
pop
and
inc
push
inc
inc
inc
xchg
mov
sti
inc
inc
cs
and
inc
inc
inc
stos
iret
stc
sbb
inc
imul
pop
add
jb
mov
or
cwde
loopne
mov
or
jne
or
sbb
add
or
sbb
jge
and
mov
dec
adc
sub
inc
std
jo
fcmovbe
mov
setae
xchg
cdq
push
popf
or
daa
inc
mov
pop
push
jne
or
dec
sub
and
xchg
pop
or
pop
loopne
sub
mov
push
bswap
repz
push
sbb
aad
sub
push
sbb
das
addr16
or
addr16
movs
lods
adc
or
fwait
add
dec
adc
(bad)
leave
or
arpl
scas
fs
mov
gs
test
pop
int3
cmc
dec
push
adc
sbb
lahf
test
ins
dec
xchg
dec
or
mov
test
lea
and
cmp
and
bound
and
inc
jns
movs
adc
inc
or
(bad)
call
mov
inc
scas
xchg
retf
jecxz
pop
xor
out
shr
pop
or
xchg
xor
out
pusha
mov
or
add
and
adc
push
lds
adc
sub
or
jl
fwait
mov
xchg
inc
test
jne
mov
adc
(bad)
push
jmp
fimul
adc
xor
or
add
mov
adc
push
call
xor
je
js
xchg
push
inc
sbb
and
inc
sbb
sbb
fiadd
add
rol
or
stos
add
jge
or
jae
test
adc
mov
inc
and
ds
jmp
and
or
shl
je
push
inc
lds
mov
in
pop
adc
lds
mov
test
pushf
lahf
loopne
mov
ins
or
inc
or
arpl
jno
pop
sti
cmp
retf
lods
cmp
cs
push
sbb
add
add
jae
(bad)
sar
add
push
dec
inc
scas
cmps
lahf
cmp
aaa
mov
mov
push
ds
xchg
push
inc
push
sbb
adc
sti
inc
sbb
xchg
mov
xchg
lahf
movs
xor
sbb
cmp
into
push
push
cmp
in
push
pop
push
inc
popa
test
adc
mov
push
fmul
push
adc
mov
xchg
test
dec
(bad)
xor
sbb
mov
or
jb
shl
adc
loopne
lds
out
adc
loop
and
test
cmps
adc
xor
test
test
push
in
push
add
cmp
xor
adc
adc
cmovge
xor
adc
je
repz
imul
popa
sub
movzx
inc
(bad)
xchg
add
push
adc
inc
jo
ins
cmc
push
push
sub
jbe
dec
jns
outs
inc
xchg
lahf
into
mov
mov
fwait
das
pop
popf
inc
pushf
sub
add
sub
mov
lock
out
cmp
inc
push
jmp
pop
nop
js
loopne
jmp
shr
and
mov
cmp
sar
xchg
cmp
dec
es
add
adc
jb
add
outs
or
popa
jb
in
push
add
mov
rol
adc
and
hlt
ds
dec
ret
add
out
fimul
dec
ret
inc
xor
imul
dec
(bad)
add
sub
mov
xchg
sahf
xor
outs
je
dec
add
jne
pop
or
test
or
jae
pop
loopne
xchg
xor
cmp
xchg
add
call
hlt
ret
and
imul
jbe
and
comiss
or
pop
js
dec
push
xor
jae
ins
in
fnstsw
fwait
test
pop
push
pop
sbb
jnp
mov
pop
test
xor
sbb
fcomp
ret
add
popa
mov
scas
xor
jge
add
(bad)
in
inc
jmp
mov
push
idiv
push
cs
pop
fcmovnu
xor
jo
jae
or
or
pop
mov
add
xchg
push
sbb
pop
or
dec
jmp
popa
sub
xchg
ins
imul
push
mov
mov
inc
xchg
inc
ja
jae
jo
test
cmp
jo
pop
bound
iret
xlat
imul
xchg
cwde
and
mov
push
jne
outs
add
inc
xchg
dec
(bad)
add
pop
or
cmc
das
test
lock
lahf
push
rep
inc
pop
push
push
inc
scas
les
adc
and
enter
rcr
pop
in
hlt
popa
cmp
xchg
mov
jae
and
bound
retf
sub
xchg
lods
adc
cmp
add
cmp
or
bound
inc
ins
xor
jae
pop
popa
pop
push
pop
xlat
(bad)
jnp
cmp
popa
inc
add
movs
fadd
scas
inc
or
je
inc
imul
mov
loopne
push
and
aaa
cmp
test
inc
inc
add
stos
sbb
arpl
jne
lock
outs
call
dec
cmp
jae
and
jne
cmp
or
add
adc
je
xchg
cmps
sbb
xchg
inc
or
jo
add
aas
mov
adc
bound
xor
bswap
push
sub
sti
fwait
and
cdq
movs
pop
jns
or
fs
dec
push
leave
sub
xor
loope
add
and
lea
push
xor
test
pop
adc
retf
fs
mov
leave
outs
imul
(bad)
test
sbb
push
ret
fild
jo
xor
in
sbb
or
dec
or
jmp
add
pop
adc
mov
lock
sbb
test
adc
mov
jo
add
imul
mov
popf
iret
rol
fwait
popf
ret
add
aas
(bad)
scas
jb
repnz
sub
pop
mov
sbb
mov
cmp
mov
add
sbb
jg
js
int
xchg
daa
daa
stc
mov
xchg
mov
leave
leave
leave
push
jbe
xlat
xchg
pop
sub
adc
icebp
enter
hlt
sub
sbb
sub
ss
mov
push
cdq
test
push
pop
ins
je
fwait
pusha
or
lock
mov
fcomp
push
in
jge
and
fst
arpl
test
inc
(bad)
push
xchg
or
ins
(bad)
dec
push
outs
je
inc
pusha
inc
push
mov
add
mov
fs
inc
or
sbb
test
mov
dec
dec
imul
mov
pmulhw
pop
sub
movs
push
or
inc
pop
pop
or
dec
push
push
ss
aad
xor
retf
ins
cmps
ins
cld
add
mov
fidiv
dec
popa
cmp
pusha
add
push
adc
mov
pop
add
mov
imul
frstor
sub
inc
add
nop
jge
push
dec
or
add
add
sbb
aas
mov
mov
add
xor
(bad)
xchg
or
add
arpl
jo
mov
adc
ja
xor
jne
jo
add
in
out
push
inc
dec
inc
out
mov
imul
ja
jb
jne
dec
imul
ja
pop
push
in
sub
xchg
lahf
dec
xchg
es
pop
sub
out
shl
std
lds
add
xchg
push
mov
or
inc
push
add
call
or
mov
fsubr
test
sbb
shl
adc
add
ds
pop
adc
jle
xor
jns
sub
cmp
jne
je
sbb
test
dec
jmp
inc
and
push
int
or
pushf
inc
inc
adc
or
(bad)
fsubr
ss
add
push
or
pop
add
mov
add
out
sbb
push
test
loop
mov
adc
das
jle
push
inc
movs
dec
adc
jae
inc
iret
sbb
pop
inc
mov
arpl
ja
lock
and
daa
add
jle
xor
add
dec
(bad)
and
mov
jne
inc
or
je
jp
mov
mov
sub
lea
inc
inc
jecxz
mov
clc
mov
enter
outs
push
not
inc
test
mov
jnp
fadd
test
adc
and
pusha
je
adc
inc
imul
mov
push
xor
je
jnp
push
and
cli
imul
imul
ret
mov
inc
outs
js
sbb
adc
push
push
sbb
adc
jecxz
adc
pop
inc
mov
xchg
inc
mov
add
(bad)
cmovbe
push
jns
out
adc
xor
xor
enter
ja
dec
jno
enter
mov
enter
push
jge
enter
retf
out
adc
enter
scas
into
enter
std
sub
push
jg
enter
retf
icebp
and
dec
jo
mov
loope
enter
scas
sub
or
hlt
sub
test
mov
dec
inc
sub
outs
(bad)
rol
bound
or
adc
jo
stos
ret
or
push
lods
fwait
cmp
add
bt
or
test
lock
lahf
aad
push
sub
sub
inc
push
adc
gs
sahf
or
sbb
adc
sbb
(bad)
fstp
scas
in
sub
nop
push
pop
(bad)
push
daa
xchg
dec
adc
fmul
jno
cmp
xor
inc
add
icebp
ret
cmp
or
cmps
and
mov
gs
leave
ret
(bad)
jl
push
pop
inc
or
fild
adc
sti
inc
sbb
lea
mov
imul
movs
iret
imul
sub
inc
mov
or
push
aam
push
mov
aaa
call
mov
daa
add
mov
mov
dec
add
add
xlat
(bad)
cmp
mov
mov
cmp
inc
in
sub
add
pushw
jmp
push
cmp
pop
out
add
adc
mov
sub
xor
inc
add
loopne
loope
adc
stc
call
adc
xor
stos
sbb
or
aaa
xor
xor
sub
sub
dec
or
xchg
inc
imul
lea
jmp
push
mov
jmp
or
mov
scas
aad
fisubr
adc
sbb
(bad)
cmp
ror
(bad)
jmp
inc
jbe
sbb
sbb
cmp
call
inc
push
pop
inc
or
jo
push
lods
lea
or
(bad)
or
add
ret
pop
or
or
pushf
sub
pop
sub
ror
pop
jmp
or
test
jmp
mov
jmp
icebp
jge
jo
mov
lahf
cdq
in
inc
sar
fsub
pop
lea
jg
mov
data16
or
inc
push
mov
mov
jl
cmps
push
scas
mov
in
test
je
dec
in
add
or
adc
scas
rol
fadd
test
fucomip
cs
(bad)
add
mov
push
lock
scas
add
in
ret
dec
add
(bad)
add
(bad)
mov
xchg
or
add
pop
adc
push
mov
imul
aam
mov
sbb
enter
and
dec
pop
cdq
cs
ret
das
xor
mov
xchg
push
fild
mov
adc
cmp
inc
jle
or
inc
out
(bad)
js
imul
jl
fwait
mov
ret
sub
lods
in
out
imul
push
retf
aas
push
inc
sub
mov
test
inc
pop
call
add
ds
pushf
lods
push
enter
sub
jo
cs
les
sub
mov
mov
shl
cwde
xor
mov
fadd
sub
sti
popa
and
pusha
push
sbb
icebp
sub
das
enter
and
add
imul
mov
push
jo
sub
or
inc
cmp
fild
inc
jnp
rol
int
outs
cmp
loope
stc
mov
retf
xchg
or
xchg
or
in
inc
pop
push
push
add
add
lea
retf
push
lock
push
and
adc
jno
push
add
mov
mov
add
add
mov
adc
add
push
adc
out
pop
push
clc
mov
inc
pushf
pop
push
jo
test
mov
adc
xor
push
dec
adc
mov
push
add
call
mov
xor
cmp
outs
movs
push
adc
inc
mov
mov
mov
test
ins
push
fbstp
mov
pusha
repz
pusha
jo
pop
lock
or
xor
inc
pop
add
lea
sub
push
adc
and
sbb
add
in
mov
out
dec
das
js
movs
adc
inc
loopne
or
in
pusha
ins
add
es
fsub
add
add
xchg
sub
sub
xor
xor
inc
sbb
mov
in
pop
pushf
mov
mov
hlt
adc
retf
sbb
bound
(bad)
sbb
arpl
xchg
add
in
pop
lea
fidiv
mov
cmps
in
sub
lock
in
add
leave
or
cmp
add
add
hlt
fst
and
sub
mov
xchg
xor
inc
mov
sbb
rcl
or
movs
je
xor
pop
ins
xor
je
add
arpl
test
inc
test
mov
cmp
test
push
adc
add
jnp
fld
dec
adc
popa
mov
push
jne
rol
jae
lea
data16
(bad)
dec
outs
mov
mov
test
popa
je
arpl
(bad)
or
dec
or
inc
nop
or
inc
sbb
and
fisubr
cmp
dec
fadd
inc
popa
aam
xchg
in
loop
sbb
adc
jae
gs
aas
test
not
pop
movs
add
pusha
test
mov
mov
sbb
cld
dec
inc
test
fild
loope
fist
mov
xchg
xchg
xchg
xchg
sar
mov
jnp
in
xor
pop
in
aam
inc
add
mov
mov
cwde
mov
dec
ds
ror
add
add
pop
pop
into
push
inc
dec
in
fsubr
xchg
inc
iret
adc
dec
adc
sub
cs
arpl
inc
arpl
mov
sbb
rcr
push
arpl
mov
mov
xor
(bad)
push
int3
mov
and
outs
je
jb
mov
(bad)
fsubr
xchg
aas
add
jns
or
add
sub
push
jl
repnz
mov
pop
jge
cwde
lock
jns
or
xor
popa
adc
adc
std
adc
mov
addps
lock
into
ret
inc
sbb
hlt
xchg
es
data16
push
adc
aaa
ret
les
xor
lea
outs
pop
adc
or
jmp
mov
lahf
or
inc
inc
inc
out
sbb
ins
cmp
sbb
dec
add
pop
mov
in
mov
and
or
(bad)
sbb
or
in
xchg
and
mov
jbe
movs
sub
add
jno
sbb
(bad)
cmp
pop
icebp
jmp
ror
and
out
cmp
aam
fidivr
movs
pop
movs
inc
ror
push
mov
hlt
push
in
mov
div
and
sbb
dec
les
push
push
push
xor
push
repnz
div
and
ss
xlat
add
and
pop
and
loopne
ror
and
sub
push
mov
out
add
or
sbb
jle
fs
fist
adc
and
adc
inc
js
inc
loope
js
(bad)
xor
ror
movs
test
dec
in
xchg
outs
je
or
pop
add
mov
xchg
or
repnz
jo
pop
push
inc
xor
adc
sub
ret
inc
sahf
mov
popa
adc
add
inc
jo
inc
mov
jp
jo
arpl
loope
or
daa
xchg
sbb
nop
test
in
outs
js
pop
inc
ja
cwde
cdq
cmp
or
jmp
or
push
std
dec
adc
mov
sbb
xchg
fstp
xchg
rol
adc
dec
cmp
test
push
mov
and
arpl
or
jno
(bad)
test
pop
mov
pop
fisubr
add
mov
or
cmp
movhps
loope
pop
add
punpckhdq
loopne
pop
lahf
sub
mov
ins
jne
mov
test
jnp
or
mov
ins
push
xor
cs
push
add
and
xchg
test
mov
push
mov
inc
and
sub
test
imul
les
sub
push
cld
push
mov
aad
movs
push
enter
in
cmps
mov
push
es
(bad)
push
and
sub
imul
call
inc
es
daa
xor
neg
int3
or
push
push
sub
cmp
int3
les
fdiv
adc
jno
int3
clc
add
pop
sub
ss
cmp
pop
clc
mov
lds
shl
add
jns
fwait
sub
cmp
mov
mov
rcl
dec
cmc
in
sub
lock
push
mov
jg
iret
and
cmp
(bad)
mov
nop
(bad)
sbb
les
jne
or
mov
and
je
and
jmp
mov
push
cwde
push
push
add
mov
adc
mov
push
scas
(bad)
mov
test
dec
je
hlt
test
jae
sbb
and
sub
mov
push
jecxz
idiv
add
mov
or
cwde
push
loopne
div
add
sbb
mov
push
jmp
cwde
jmp
das
add
jmp
das
add
and
xchg
push
sbb
imul
mov
ret
movntps
cmps
stos
cmp
add
rcr
out
jl
ins
(bad)
fcom
add
nop
rcl
push
nop
mov
mov
js
push
out
adc
cmp
cmp
and
sbb
mov
ds
mov
lods
fucomp
pop
add
adc
dec
fucomi
rcl
xchg
inc
pop
(bad)
fsubr
inc
popa
lahf
cmp
xchg
and
shr
jg
jge
(bad)
(bad)
push
push
push
push
and
cmp
xor
sub
or
inc
cld
sub
lds
shr
push
mov
dec
popa
pop
(bad)
enter
lods
int
mov
les
xchg
enter
les
mov
ja
mov
xchg
fiadd
(bad)
and
jo
div
push
sbb
fwait
inc
xchg
clc
popa
push
pop
xchg
push
int
cwde
cmp
sbb
cmp
jl
cld
pop
and
test
jne
cmp
mov
jae
mov
and
push
adc
or
xor
inc
xchg
clc
or
cmp
pop
mov
fadd
mov
or
neg
xchg
mov
add
mov
icebp
enter
push
or
or
mov
cmp
add
or
ret
jne
dec
mov
loop
ins
sbb
jb
(bad)
cmp
jne
add
jbe
clc
cld
push
pop
jg
push
fidiv
or
je
sbb
push
mov
push
stos
jo
mov
or
add
pop
les
and
repz
cmp
retf
fadd
inc
sbb
getsec
sbb
cmp
in
mov
inc
fiadd
loopne
and
jae
pop
dec
int3
mov
addr16
loopne
ins
stos
ficom
(bad)
xchg
xchg
pop
mov
or
mov
aaa
mov
mov
fs
mov
xor
add
add
sub
pop
fcmove
add
or
or
outs
dec
mov
adc
mov
adc
add
ds
push
cmps
sbb
retf
add
fstp
test
add
out
daa
adc
inc
adc
data16
cdq
adc
add
sbb
call
dec
or
and
add
and
popa
enter
rol
scas
and
clc
nop
adc
mov
mov
nop
inc
and
in
push
in
or
inc
mov
pop
xor
lahf
and
and
cli
je
adc
sbb
call
int3
push
(bad)
ss
cmps
dec
les
push
mov
mov
mov
and
or
test
outs
leave
hlt
add
or
jle
lea
or
(bad)
shl
outs
adc
and
mov
mov
pusha
mov
test
pop
inc
ja
mov
div
push
inc
or
mov
inc
and
or
add
or
fld
mov
sbb
sub
push
inc
add
mov
xor
(bad)
nop
icebp
pop
and
pop
xor
ret
nop
sbb
sub
sar
sub
push
mov
pop
lds
adc
pushf
or
pop
arpl
or
mov
mov
dec
out
lods
ins
cmp
jnp
sbb
mov
fcmovnbe
and
or
shr
ins
jg
push
adc
stos
sub
push
(bad)
je
pop
rol
mov
sub
adc
outs
jg
dec
je
jmp
cs
fsubr
and
stos
loopne
cmp
mov
shr
mov
push
lock
or
push
dec
add
cmp
jl
xor
test
add
pop
push
add
mov
push
add
rol
in
add
enter
into
dec
add
imul
rcl
dec
add
push
icebp
and
dec
xor
call
xchg
pop
xchg
sbb
push
outs
xchg
jbe
sbb
adc
jno
loopne
popf
pop
xor
cmp
into
lods
test
push
push
cmp
test
mov
add
loopne
fsubr
add
xor
add
adc
test
mov
stc
pop
inc
mov
push
mov
add
(bad)
pusha
sub
adc
sar
(bad)
pop
test
setne
sti
mov
test
xchg
loop
bound
sub
imul
in
mov
ss
push
xor
div
mov
push
sbb
(bad)
lock
hlt
neg
jmp
pop
xor
je
or
outs
add
dec
cli
mov
retf
dec
scas
or
dec
test
sysret
mov
sub
push
mov
aaa
inc
sbb
int3
push
xchg
jmp
icebp
popa
mov
in
jmp
adc
sub
mov
inc
dec
iret
adc
cmp
lock
hlt
or
lock
mov
setl
test
lods
cwde
inc
mov
in
cld
dec
or
and
mov
sbb
dec
push
mul
lea
lea
(bad)
xchg
outs
xor
inc
sub
sub
enter
and
xchg
and
hlt
xor
and
add
xor
cmp
ret
punpcklbw
outs
and
stc
jmp
inc
inc
or
movs
popf
sub
pop
cmp
adc
sbb
cs
jmp
xor
div
fwait
mov
mov
aaa
aad
xor
jne
cmp
add
and
popf
and
(bad)
cmps
movs
shl
add
push
xor
pop
xlat
ja
push
je
jmp
cmp
dec
xor
fiadd
mov
mov
and
sub
adc
inc
les
(bad)
pop
dec
or
stos
aas
(bad)
jb
or
jl
push
ss
ret
fcmovnb
lock
sub
push
and
add
rcr
leave
jmp
jmp
iret
sub
(bad)
sbb
cmp
sahf
out
(bad)
cmp
lods
sub
rcl
aaa
add
jae
fsubr
or
inc
add
mov
or
cmp
jmp
mov
std
ins
hlt
mov
sub
int
sub
xor
nop
sbb
rcl
gs
adc
call
push
and
xor
aam
lea
loopne
push
mov
mov
mov
sub
retf
and
call
mov
adc
add
dec
shl
xchg
inc
jg
adc
mov
fimul
loop
mov
(bad)
sahf
icebp
rcr
ss
scas
mov
jle
shr
push
test
jge
mov
add
imul
mov
push
lods
pop
or
fbstp
adc
ret
leave
fsincos
ds
lods
icebp
sbb
enter
xor
pop
mov
adc
repz
in
adc
mov
pop
loop
adc
adc
mov
fadd
ins
scas
inc
mov
into
je
sbb
push
xor
pop
call
and
jb
adc
push
es
sysenter
xor
mov
mov
sti
push
mov
test
jge
call
and
xor
sub
push
add
cmp
and
ja
loope
les
popa
jg
mov
sti
sbb
push
xor
add
std
push
push
jl
sbb
lea
and
add
inc
jne
push
(bad)
fnsave
and
sub
xor
sbb
push
sbb
cmp
nop
and
and
xor
inc
push
and
sub
or
mov
out
rol
lea
push
ret
add
push
fwait
mov
jo
loopne
push
cmp
movzx
test
mov
dec
and
adc
icebp
adc
aaa
loopne
push
push
dec
or
in
adc
or
shr
add
leave
sub
aam
mov
jge
test
push
dec
mov
mov
push
and
push
sub
or
adc
xchg
inc
inc
sub
in
cwde
loope
cli
mov
in
rcl
push
loope
fadd
mov
mov
jo
xor
pop
pop
sahf
loopne
hlt
push
push
or
rol
mov
sub
adc
popa
sbb
fs
sti
and
test
push
sub
mov
arpl
push
adc
xchg
xchg
sbb
adc
or
ja
xchg
push
adc
add
lods
out
stos
or
std
test
psubsb
js
mov
xchg
jne
ret
mov
or
repnz
ror
pop
add
xchg
mov
stc
fistp
sub
or
or
jbe
cmp
repz
mov
movs
jne
stc
xchg
mov
pop
pop
aam
je
push
jmp
test
xchg
fs
ret
sti
es
daa
movs
imul
ins
aaa
(bad)
(bad)
jmp
and
aas
aaa
xchg
shl
movs
mov
sbb
mov
pop
shl
ficomp
add
jecxz
test
les
mov
bound
pop
pop
sub
rcr
pop
sub
ds
or
push
cmp
cmp
ficom
adc
popa
pop
clc
push
jge
iret
cmp
popa
mov
test
ss
adc
fcom
xchg
or
inc
or
sub
and
sub
shr
fld
adc
(bad)
fld
iret
jno
jne
or
add
js
loop
mov
jge
pop
or
add
and
and
xchg
mov
mov
push
adc
out
out
pop
cmp
je
popa
push
fcomp
outs
lds
push
sbb
out
mov
in
pop
ret
pop
nop
mov
dec
mov
inc
test
sbb
adc
stc
test
sub
inc
xchg
mov
cs
es
scas
mov
lock
jg
aam
xlat
pop
or
and
pop
movs
outs
nop
lods
sbb
xchg
sbb
mov
(bad)
pusha
(bad)
das
inc
and
push
call
add
test
in
push
test
fst
les
frstor
pop
mov
test
mov
or
or
int
ret
jl
(bad)
mov
jmp
push
sbb
sub
add
(bad)
push
jb
test
mov
adc
inc
inc
push
loop
shr
xor
cld
mov
or
push
pusha
ret
std
push
cld
xchg
sub
add
(bad)
sbb
add
sbb
sti
pop
or
bound
push
sbb
aaa
mov
arpl
or
push
push
lea
push
mov
or
aaa
daa
push
push
add
cmp
(bad)
pop
mov
pop
mov
jge
sbb
out
or
in
or
pop
mov
fisubr
mov
and
pop
mov
jnp
sbb
nop
retf
mov
aaa
mov
mov
push
ret
mov
pop
or
je
test
mov
out
std
adc
les
rcl
stos
inc
sbb
arpl
or
push
fs
jne
pop
push
(bad)
cwde
into
lds
mov
aas
in
add
movs
rol
xchg
cmp
or
adc
test
lock
stos
or
pusha
js
ret
and
es
inc
rcr
xlat
xor
cld
sub
rcl
scas
pop
dec
dec
je
dec
shr
mov
rcr
(bad)
test
add
cmps
xchg
add
xchg
out
cmps
adc
mov
xor
imul
rcl
in
mov
adc
retf
arpl
push
xchg
push
loopne
push
dec
sti
dec
mov
(bad)
adc
xchg
push
or
test
cmp
xchg
fwait
out
test
popa
jns
or
jbe
jmp
je
inc
nop
leave
loope
cs
xchg
mov
inc
sbb
test
hlt
rcl
add
loope
push
xchg
xchg
nop
xor
lahf
data16
cli
push
aas
pusha
aaa
cmp
and
fild
push
and
adc
and
cdq
popf
call
or
(bad)
sbb
jecxz
mov
je
es
adc
cmp
push
(bad)
loope
dec
sbb
mov
mov
mov
je
xchg
push
lods
push
add
or
shl
pop
shr
mov
les
pop
call
jne
aad
jecxz
sub
pop
or
loop
mov
in
jno
icebp
stc
loop
aas
clc
mov
push
aad
cld
mov
div
das
daa
mov
and
mov
cmp
and
cmp
call
or
test
xchg
push
adc
clc
adc
inc
test
mov
push
ins
push
jmp
in
jmp
add
jo
xor
out
enter
mov
test
sub
push
cmps
push
jbe
imul
mov
(bad)
inc
out
fadd
push
out
pop
ds
inc
pop
gs
push
rcr
rcl
jno
adc
sti
mov
xchg
xchg
add
pop
add
sub
mov
sbb
inc
daa
test
mov
inc
lea
in
or
fld
popf
adc
in
adc
sub
pop
xchg
pop
cwde
mov
(bad)
clc
fnstcw
jo
mov
xlat
pusha
xor
inc
mov
jo
push
pop
xor
pusha
rcr
mov
ins
push
(bad)
imul
lods
pop
inc
and
jge
and
ds
jae
icebp
mov
or
push
pop
repz
sub
jle
xor
les
aas
mov
xchg
loopne
jl
mov
xor
idiv
mov
add
stos
pop
adc
outs
mov
dec
cs
je
xchg
daa
or
adc
cmp
js
mov
cld
mov
sub
lods
ins
mov
loopne
mov
add
add
je
sahf
sub
pop
inc
adc
mov
pop
pop
add
cmps
mov
adc
frstor
outs
clc
ins
and
sub
movs
mov
push
daa
daa
aam
adc
and
mov
add
sar
xchg
add
test
xchg
stos
adc
sbb
cdq
(bad)
or
adc
clc
adc
dec
cmp
cld
pop
xlat
push
mov
or
sub
dec
inc
xchg
push
push
fsub
xor
and
iret
movs
pop
or
adc
push
arpl
xor
sub
xor
add
push
nop
pop
jl
cmp
ds
and
xlat
enter
stos
add
jecxz
lds
xor
or
arpl
push
xor
dec
cmp
dec
xchg
sbb
cmp
pop
xchg
inc
cmp
pushf
scas
jnp
xchg
cmp
lahf
jmp
xchg
mov
movs
das
sbb
fisubr
jnp
je
dec
mov
fldcw
pusha
pop
push
call
mul
add
inc
inc
pop
adc
jecxz
loope
dec
adc
cmc
nop
icebp
mov
cmp
sub
shl
shl
mov
cmp
(bad)
and
xchg
dec
xor
daa
aad
inc
add
pop
xor
call
add
mov
inc
inc
mov
dec
or
jb
ds
imul
cmp
out
out
cmp
adc
mov
jae
fdiv
xchg
adc
and
or
jno
sub
enter
mov
push
add
pop
mov
inc
test
add
push
jbe
or
push
mov
sub
push
gs
es
push
pop
int3
pusha
out
sub
rcl
add
enter
in
add
cmp
(bad)
xchg
or
rcl
or
call
stos
mov
mov
in
jnp
xor
push
nop
fsubr
fsub
push
js
pop
mov
ror
adc
adc
lods
xchg
xor
in
add
xchg
fisttp
or
int3
dec
outs
sbb
pop
movs
push
loopne
pop
mul
pop
and
push
push
sub
call
daa
push
loope
and
in
fs
adc
dec
or
rol
push
out
inc
fiadd
xchg
cmp
xchg
icebp
cmp
or
pop
ror
and
sbb
cmp
jne
and
mov
and
je
mov
push
push
adc
enter
pop
or
inc
repnz
inc
ins
sbb
xor
ins
inc
jo
and
test
clc
adc
or
pop
jecxz
and
sub
cld
xor
sbb
mov
fs
push
mov
pop
sub
sub
cmp
sbb
add
stos
rol
push
or
or
push
or
in
daa
movs
pop
xor
dec
push
outs
mov
add
sub
enter
inc
cmp
rcl
xor
fwait
imul
sbb
sbb
mov
loop
add
fisub
mov
mov
dec
push
bound
je
add
xor
scas
dec
cs
xlat
xor
es
rcr
cs
mov
jns
push
mov
mov
mov
es
sub
(bad)
adc
sub
xchg
inc
in
cmp
or
cli
push
add
add
jae
inc
push
shr
jbe
dec
and
or
call
les
nop
aas
adc
or
(bad)
cmp
das
add
fsub
xchg
inc
pop
mov
xor
mov
sub
mov
faddp
test
mov
ja
sbb
jmp
imul
xor
push
call
cmp
jg
jo
cs
mov
inc
cmp
add
adc
sub
cmp
ins
add
aad
ret
sbb
iret
(bad)
cmp
or
sub
add
cmp
(bad)
hlt
cmp
or
lea
mov
mov
push
cmc
mov
add
sub
jno
xchg
adc
mov
dec
data16
jg
mov
mov
xor
sbb
xchg
clc
or
sbb
sub
add
cmp
sbb
pop
push
in
pop
xor
push
sbb
ret
and
push
pop
loopne
ret
and
push
push
mov
loopne
lock
cmp
sbb
xchg
mov
inc
or
inc
inc
mov
or
push
push
mov
adc
and
or
cmp
lahf
gs
sub
aas
cld
xchg
cmp
adc
test
add
fistp
ss
sub
inc
add
xor
inc
je
xor
icebp
dec
jl
jmp
or
aam
nop
pusha
jecxz
es
add
fstp
ja
cwde
jg
add
lods
jne
repz
mov
cmp
or
xchg
ret
das
call
mov
retf
js
add
adc
inc
push
jmp
sbb
mov
adc
(bad)
js
ret
pop
lds
mov
or
mov
sbb
mov
cmp
scas
mov
jge
add
dec
cwde
or
sub
add
push
movs
mov
sub
adc
jne
adc
and
inc
pop
or
xchg
add
pop
mov
ja
add
or
inc
add
pop
addr16
cs
xchg
fsubr
mov
add
push
mov
or
leave
sbb
mov
and
push
adc
ror
popa
fwait
std
mov
dec
mov
out
test
popa
arpl
and
fiadd
fsub
sub
push
call
xor
cld
xchg
mov
pop
inc
push
push
xchg
mov
xor
ret
nop
lahf
mov
clc
mov
fmul
test
xchg
sbb
daa
loop
inc
sti
jl
xor
push
fisttp
adc
mov
jge
(bad)
sbb
and
jne
jae
mov
xchg
sbb
pop
cld
and
aaa
push
mov
jno
add
mov
shr
pop
mov
pop
js
sti
data16
mov
inc
sahf
or
das
out
popf
cmp
shr
pop
add
lds
push
dec
jge
cmp
jg
cli
inc
inc
add
div
push
or
int
mov
and
mov
loopne
mov
sbb
sub
clc
ins
aas
fiadd
fild
ret
pop
xor
add
cmp
mov
daa
push
loope
xchg
inc
mov
xchg
mov
in
dec
adc
mov
(bad)
fisubr
lock
and
xor
dec
add
cmp
mov
xor
(bad)
aas
mov
xchg
or
add
mov
or
add
xchg
mov
and
cmp
cmp
int3
ret
test
clc
mov
xor
add
popa
hlt
loop
pop
shr
mov
sbb
and
xlat
add
imul
pop
jmp
push
xor
mov
cmp
jmp
sbb
rcr
push
jecxz
cld
fidivr
mov
popf
jbe
daa
cmp
inc
adc
mov
xor
push
pop
pop
adc
clc
ss
jno
loopne
mov
pop
xchg
sbb
inc
imul
cwde
mov
rcl
lods
mov
and
nop
cdq
scas
hlt
add
dec
cld
sbb
and
adc
add
in
test
inc
sbb
xchg
xchg
mov
jae
fwait
inc
cmp
push
cmp
aas
pop
sub
inc
inc
add
rol
jae
das
mov
or
lea
xchg
ss
(bad)
and
xor
cmp
sbb
or
mov
leave
iret
retf
shl
fcom
xchg
div
cmp
outs
sub
clc
cmp
sbb
hlt
xor
add
arpl
enter
hlt
call
cmc
call
in
cmp
repz
or
repz
add
adc
loopne
movs
or
out
add
je
push
out
rol
add
mov
or
push
mov
daa
js
jo
xor
lock
outs
sbb
(bad)
pusha
inc
lods
mov
clc
adc
sub
lock
xchg
sbb
lea
pop
cmp
inc
mov
or
icebp
push
loopne
cld
and
mov
add
fistp
imul
lea
outs
push
push
jmp
cmp
jns
fs
mov
xchg
or
cmp
push
cmc
mov
dec
adc
inc
mov
push
adc
or
adc
add
dec
movs
imul
mov
adc
inc
inc
dec
jl
add
mov
popa
add
hlt
mov
jl
jne
push
push
jmp
addr16
jg
mov
je
add
mov
add
scas
cmps
sub
mov
cli
std
sahf
jmp
js
(bad)
call
inc
or
xchg
in
sub
out
push
sub
loope
inc
lea
xlat
jo
inc
xchg
inc
add
and
or
push
dec
ins
icebp
mov
dec
movs
push
mov
push
pusha
mov
inc
movs
lea
rol
push
or
push
ss
push
out
loope
bound
push
clc
inc
jmp
ds
mov
fisttp
or
loope
mov
mov
sub
sub
and
pop
inc
adc
mov
mov
inc
hlt
inc
sbb
or
(bad)
cwde
push
xor
push
inc
leave
enter
clc
out
das
retf
sbb
clc
xchg
sti
(bad)
xchg
test
and
icebp
and
sub
test
cli
ret
push
inc
push
mov
jle
sub
push
inc
xor
sub
mov
sub
push
push
push
push
pop
sub
mov
mov
inc
mov
out
daa
ficom
xor
aad
adc
mov
dec
in
push
jge
fmul
dec
cld
std
pop
xor
mov
mov
mov
adc
and
adc
mov
out
adc
adc
ror
test
inc
jae
(bad)
out
pop
sub
push
or
mov
aaa
call
xor
push
push
push
and
shl
fild
add
sbb
sub
cmp
cmp
test
das
(bad)
push
ret
xor
je
xor
sub
or
cmp
pop
mov
xchg
and
int
pushf
mov
sub
popf
imul
and
popa
in
ror
pop
(bad)
push
add
adc
loopne
adc
lahf
movs
lea
jl
add
jns
xchg
xchg
scas
or
je
icebp
loopne
movs
pop
lds
pop
lea
lea
addr16
ret
cmp
les
cld
mov
adc
adc
mov
mov
xchg
add
sbb
arpl
sar
stc
(bad)
ins
je
aas
push
aaa
mov
fisttp
pop
pop
dec
add
add
inc
pusha
loopne
daa
push
hlt
inc
push
or
xchg
mov
jne
test
ins
sub
shl
test
mov
test
or
adc
sub
sbb
and
pop
xor
mov
jmp
neg
add
add
sub
and
or
inc
add
add
ret
inc
dec
dec
mov
lea
shl
addr16
dec
nop
(bad)
xchg
mov
adc
mov
loopne
cmp
cmp
rcr
adc
je
and
in
or
cmp
cs
or
mov
add
xchg
sub
lea
cmp
or
xor
or
or
bound
ret
scas
mov
jmp
sbb
mov
pop
mov
mov
cmp
jle
inc
xor
and
or
and
mov
aas
clc
das
mov
cmp
ja
(bad)
repnz
jns
push
or
push
and
loope
push
push
mov
ja
jne
or
shl
or
ins
pinsrw
scas
ins
cmps
mov
or
into
or
jg
or
mov
mov
or
sbb
arpl
fisttp
dec
inc
add
les
mov
jo
cli
adc
cmp
js
and
dec
adc
loopne
paddq
pop
pop
cmps
or
pop
add
fcomp
xchg
mul
sbb
add
pop
cmp
push
fs
and
jno
sbb
dec
mov
push
bound
xchg
pop
inc
and
inc
push
cmp
push
dec
adc
daa
popa
add
add
mov
and
jecxz
out
push
sub
dec
jae
pop
(bad)
cmps
and
je
fcom
mov
fs
or
mov
pop
repnz
sbb
push
mov
(bad)
in
add
and
push
push
das
push
sbb
fld
push
pop
mov
inc
imul
(bad)
(bad)
imul
mov
jmp
mov
sar
xor
mov
adc
cmp
ss
and
sbb
adc
sub
or
jmp
js
mov
popa
add
pusha
xor
shl
mov
mov
push
lods
mov
xor
(bad)
call
aad
mov
test
sbb
cmp
inc
xchg
js
out
js
mov
aaa
mov
jae
inc
xor
xor
call
pop
popa
or
or
or
js
push
or
les
out
mov
ret
mov
in
push
add
and
and
add
(bad)
xchg
sub
adc
js
jne
and
inc
fist
push
test
lds
daa
loope
xchg
xor
xor
adc
pop
push
push
cmc
shl
js
adc
mov
aam
jb
into
push
neg
dec
adc
and
pop
push
mov
jno
ret
xchg
sbb
(bad)
shl
push
lahf
nop
xchg
xor
pop
push
inc
sub
push
adc
ja
mov
pop
cmps
fst
fsub
cli
call
mov
mov
stos
(bad)
push
or
(bad)
xchg
mov
adc
or
cmps
push
fcomip
shr
int
pop
adc
cld
sub
push
xchg
and
inc
dec
push
mov
(bad)
inc
push
dec
hlt
test
cmp
test
test
or
aam
enter
mov
imul
mov
and
ret
push
push
push
cmp
push
pop
popa
and
(bad)
pushf
test
shl
rcl
fist
loopne
mov
jmp
mov
movs
enter
mov
mov
cmp
mov
and
or
sbb
push
dec
push
adc
mov
ret
cmp
call
add
pop
clc
sbb
lock
or
xor
jne
in
dec
test
cmp
inc
(bad)
or
movs
out
push
test
mov
pusha
xor
mov
jns
mov
push
nop
and
mov
inc
cs
stos
mov
mov
push
jno
jp
js
mov
dec
clc
je
jbe
sbb
push
add
dec
push
dec
shl
mov
jb
adc
in
jmp
fbstp
sub
imul
and
cmp
data16
mov
aas
or
(bad)
repz
sbb
push
nop
mov
jge
dec
repnz
jnp
jmp
mov
sub
inc
adc
inc
push
mov
js
adc
pop
dec
pop
adc
xor
pop
sub
dec
jmp
data16
inc
call
in
push
add
dec
add
mov
push
jo
add
xchg
dec
xchg
push
mov
cli
(bad)
stos
push
not
mov
jl
pushf
inc
pop
push
cld
sub
fs
or
inc
push
mov
pop
out
add
dec
pushf
shr
cmc
dec
xor
cmp
arpl
mov
add
stos
sbb
lods
push
ins
xchg
sar
call
jle
cmp
push
push
mov
pusha
fsubr
pop
jmp
in
xchg
sbb
je
pop
cmp
xor
cmp
pop
sub
inc
(bad)
xor
adc
mov
call
adc
je
inc
sbb
movs
cmp
jne
mov
lods
xor
cmp
cmp
mov
xor
aad
int3
ins
ret
addr16
icebp
shl
clc
and
lea
mov
hlt
psrlq
cmp
rcr
or
loopne
adc
xor
cmp
les
fnstcw
inc
jno
cmp
test
fdivr
dec
jge
cmc
or
jns
add
adc
imul
jo
adc
jmp
adc
hlt
sbb
sbb
inc
js
mov
inc
inc
sbb
int3
cmps
outs
ror
inc
adc
adc
jne
loopne
lds
test
loope
add
in
sub
js
inc
(bad)
inc
mov
mov
pop
repz
add
pop
sar
adc
inc
sub
push
dec
and
mov
pop
sub
and
retf
in
and
mov
xchg
sbb
shr
push
push
jecxz
lods
pop
and
xchg
movs
mov
fcom
jp
adc
push
mov
enter
sub
jnp
ins
inc
popa
pop
xchg
push
cmp
mov
loopne
mov
add
aad
ins
xor
(bad)
sti
or
adc
js
call
sbb
sub
adc
in
cmp
jge
inc
lock
adc
push
cmc
sets
cs
jo
adc
shr
push
and
jnp
and
adc
push
mov
adc
dec
dec
lds
pmullw
inc
ret
pop
jmp
rol
daa
nop
push
inc
push
jnp
push
sub
mov
xlat
inc
call
call
into
sbb
push
jne
and
push
xchg
jmp
push
adc
xor
and
test
cmp
inc
inc
jno
rcl
sbb
sub
or
outs
loopne
out
movs
xor
and
inc
enter
cmp
jnp
and
dec
enter
sar
pop
jmp
or
jmp
add
mov
call
int3
add
icebp
ss
cs
mov
and
add
pushf
add
push
adc
mov
push
dec
adc
or
adc
pusha
xchg
stos
leave
js
cli
xchg
cli
pop
xchg
cmps
xor
sbb
mov
cmp
or
mov
mov
sbb
cmp
rcl
ins
(bad)
sub
aas
adc
fiadd
sbb
dec
int3
dec
pushf
push
xor
repz
inc
rcr
stos
inc
sbb
jnp
mov
test
js
xor
sbb
je
cmps
jmp
jae
pusha
sub
rol
(bad)
mov
jne
push
push
jnp
jnp
fmul
jg
xor
cmp
xchg
jne
sub
jmp
data16
sub
ins
rcl
add
cmp
test
jo
jo
push
push
repnz
mov
inc
cmp
push
mov
mov
pop
adc
push
push
hlt
inc
pop
cwde
jae
push
shl
and
cmp
and
or
sbb
jmp
push
mov
les
dec
sbb
ror
add
add
push
push
sbb
retf
pop
lds
(bad)
push
or
dec
sahf
(bad)
adc
fwait
and
imul
sbb
sbb
mov
jp
inc
push
or
adc
mov
add
add
in
push
and
adc
lods
ss
cmp
fnsave
and
cld
cld
mov
mov
mov
or
dec
retf
pop
test
push
inc
inc
sub
push
pop
movs
jns
push
ins
or
or
lea
xchg
or
movs
xchg
sbb
sar
sbb
mov
push
add
int3
add
or
fisubr
(bad)
pop
push
enter
jne
adc
or
or
mov
or
cs
lods
fadd
push
std
push
lods
sbb
sub
sub
ret
add
jl
and
pop
and
jmp
add
cmp
inc
in
sub
sub
das
jmp
scas
sar
not
and
mov
es
sbb
xor
inc
jno
push
in
dec
(bad)
or
adc
sub
inc
or
sbb
mov
icebp
sub
mov
push
test
sub
mov
pop
adc
sub
sbb
ror
pop
sub
jp
sti
(bad)
add
nop
xchg
mov
adc
das
xor
add
call
mov
mov
add
iret
hlt
pop
or
adc
(bad)
in
or
enter
dec
jae
leave
retf
loope
inc
add
push
addr16
aam
popa
dec
pop
mov
adc
imul
push
mov
and
xor
mov
push
inc
hlt
(bad)
lock
mov
pusha
sub
mov
fisubr
mov
and
das
and
mov
mov
adc
add
xchg
add
sbb
xchg
xor
movs
xchg
xor
or
inc
scas
stos
jge
fist
and
mov
add
push
push
sbb
inc
(bad)
shr
add
shr
xchg
pop
adc
adc
pop
aad
clc
adc
inc
dec
or
dec
popf
or
or
jnp
pop
dec
leave
mov
jle
les
jne
stos
xor
ins
mov
push
sbb
daa
lea
jne
inc
jo
mov
sub
mov
mov
(bad)
shr
inc
or
inc
adc
movs
adc
inc
sbb
and
inc
and
ds
shl
test
add
adc
repnz
call
movs
and
dec
mov
fwait
or
ret
movs
pop
push
aaa
pusha
test
xchg
or
std
in
pop
pop
add
push
adc
adc
je
cdq
data16
push
add
cwde
cmp
push
test
movs
sub
fcom
xor
pusha
js
push
call
add
add
pop
dec
add
(bad)
cli
mov
popf
inc
or
add
inc
ret
jo
inc
add
clc
call
push
push
clc
and
nop
pop
(bad)
sbb
sbb
hlt
ins
add
add
(bad)
call
and
sub
dec
call
mov
adc
cli
pop
movs
lock
sbb
std
add
loopne
dec
(bad)
mov
lds
push
mov
mov
mul
dec
mov
and
sub
adc
pop
cmps
fild
add
add
sbb
add
rol
pop
arpl
daa
inc
cmp
jne
leave
and
or
sbb
jmp
cmp
outs
pushf
add
aas
add
mov
adc
and
popa
je
mov
mov
push
jno
cmp
je
xchg
cmp
jne
add
push
in
jne
xchg
dec
and
adc
lods
jo
aas
pop
lods
out
mov
sbb
or
or
add
lods
cmps
xor
cmp
pop
bnd
xchg
mov
or
push
xlat
repnz
sbb
lods
xor
mov
and
xchg
xchg
cwde
xor
add
mov
ret
ds
adc
call
mov
mov
xchg
daa
mov
jo
(bad)
xor
je
je
add
mov
(bad)
hlt
push
jp
jmp
ins
cmp
out
xor
add
mov
adc
cld
(bad)
jmp
inc
jne
mov
mov
adc
pop
mov
dec
(bad)
push
inc
add
iret
sbb
rol
push
adc
(bad)
(bad)
or
jne
push
push
test
nop
mov
and
inc
ins
addr16
test
pop
sbb
or
pop
add
divps
and
shr
out
fwait
fs
pop
(bad)
js
mov
lods
ret
cmp
int3
xor
adc
aad
or
dec
add
xchg
push
mov
mov
imul
jl
clc
test
xor
pop
jmp
mov
movs
sbb
add
mov
xor
jae
mov
push
mov
push
rol
jne
adc
mov
cmp
mov
ror
pop
hlt
or
sub
imul
sub
and
arpl
test
js
fist
or
lock
(bad)
fiadd
mov
js
push
daa
test
adc
xor
mov
dec
sub
popf
push
das
movs
out
pop
(bad)
adc
push
pop
fwait
or
in
je
daa
mov
mov
cmps
jg
mov
shr
ret
or
cmp
jmp
push
aam
jne
and
pop
sbb
inc
pop
jecxz
lock
sub
jge
pop
popa
(bad)
and
add
cmp
mov
ss
pop
sub
mov
dec
push
mov
stos
adc
cmps
retf
mov
push
shl
cmp
or
add
mov
fsubrp
mov
adc
push
or
jbe
sar
adc
add
cwde
add
mov
sbb
not
rcr
pop
iret
shl
push
mov
xchg
jne
mov
add
dec
cmp
loope
and
inc
dec
je
(bad)
je
dec
adc
(bad)
cmp
dec
xor
pop
and
sub
xor
test
mov
mov
xchg
or
xor
sahf
sbb
cwde
sete
and
push
mov
ss
fimul
inc
xor
ret
add
out
cmp
sub
or
cmp
push
fisttp
fwait
sub
push
sbb
add
adc
adc
repnz
jp
mov
lock
pop
add
add
add
add
and
mov
cmp
shl
out
xchg
mov
pop
outs
shr
ffreep
fbld
inc
sbb
and
jge
adc
test
or
hlt
xor
and
pusha
jno
jl
push
fst
sbb
jne
add
fisub
adc
dec
jnp
xchg
lea
or
sub
pop
add
in
rcl
sub
in
or
loopne
lods
cli
inc
adc
or
cmc
fmul
and
(bad)
jp
ret
jne
push
or
add
xor
test
xchg
xchg
push
or
fcomp
jmp
mov
int3
add
mov
and
je
enter
xchg
fimul
jge
pop
push
inc
adc
jg
mov
adc
jmp
pop
out
adc
je
ja
sub
test
mov
fcomp
int3
xchg
leave
cld
sbb
frstor
loope
dec
out
sub
inc
popf
fucomip
mov
xchg
add
pushf
(bad)
mov
jg
adc
adc
xchg
pop
push
mov
test
dec
cmp
pop
mov
inc
and
push
mov
add
adc
cmp
sti
mov
adc
pop
idiv
add
(bad)
or
mov
shl
mov
(bad)
nop
call
pop
dec
adc
mov
or
inc
pop
mov
shl
cmc
out
out
jmp
push
sbb
mov
lock
daa
mov
inc
(bad)
rol
loope
add
add
scas
or
sub
pop
loopne
jns
xchg
or
(bad)
sbb
xchg
repnz
push
or
adc
adc
mov
outs
add
xor
daa
sub
sbb
jmp
xor
push
push
jnp
inc
stc
or
aad
inc
mov
xchg
sub
add
xor
leave
nop
dec
dec
mov
out
not
fst
fisttp
test
sub
and
push
dec
add
fwait
aas
push
pop
ds
mov
dec
or
pop
dec
mov
pop
sbb
dec
lock
add
sbb
xor
ss
pop
add
push
outs
fdiv
add
mov
lahf
push
imul
mov
sbb
and
and
or
sub
pop
loopne
ja
test
sub
wbinvd
ja
add
adc
out
pop
xchg
adc
add
je
xchg
add
mov
push
push
pop
mov
push
movs
push
fsubrp
out
jmp
add
add
aas
das
jo
jae
fcom
adc
sbb
sub
jg
add
xor
xchg
xor
add
lods
add
pop
push
xor
mov
fwait
cmp
inc
adc
xlat
jno
mov
jl
lea
movups
fmul
jmp
adc
jne
dec
cmps
xlat
jl
add
mov
test
mov
fild
dec
pushf
sbb
or
rcl
imul
add
push
push
(bad)
in
or
and
test
dec
sub
mov
xor
test
dec
jge
adc
cmp
lock
adc
aas
inc
sbb
outs
dec
out
je
ins
mov
dec
push
test
shl
cmps
jno
dec
push
pop
or
cs
shl
xchg
sbb
sbb
mov
mov
stc
pop
inc
add
xchg
scas
mov
pop
add
fs
push
mul
jp
(bad)
(bad)
cli
cmp
popa
test
add
inc
push
push
ror
cmp
or
icebp
inc
push
or
inc
adc
and
pop
dec
add
jge
inc
movs
inc
add
jle
jne
bound
pusha
iret
aad
jbe
mov
je
ret
vpackssdw
pcmpgtd
ficomp
jl
ret
lahf
sub
add
push
mov
pusha
mov
je
fadd
fld
push
sub
add
pop
xchg
and
(bad)
pop
sbb
pop
mov
push
or
push
pop
adc
jmp
mov
push
cmp
outs
imul
pushf
push
call
lea
and
inc
mov
ja
add
mov
xchg
jl
sbb
mov
xchg
cmp
sbb
data16
sub
sgdtd
test
mov
idiv
push
cmp
mov
les
adc
jb
invd
dec
sub
inc
push
push
xor
mov
add
or
jnp
inc
and
pop
xor
jmp
adc
inc
xor
adc
outs
adc
movzx
cwde
or
ret
call
or
cmc
mov
mov
sbb
push
dec
shr
or
add
pop
shl
cmp
add
cmp
sbb
xchg
push
adc
sbb
inc
das
mov
or
add
mov
ret
data16
add
dec
add
stc
add
leave
xchg
inc
stos
dec
mov
daa
or
adc
into
inc
sub
push
or
sbb
aaa
movs
outs
dec
push
fs
dec
mov
xor
leave
pop
pop
push
mov
lods
push
add
cmp
inc
scas
adc
xor
call
add
(bad)
mov
sbb
outs
adc
xchg
mov
mov
sub
ror
loope
or
into
push
push
xor
aam
push
icebp
adc
sub
add
adc
nop/reserved
add
or
cmp
inc
add
adc
push
dec
lods
jno
mov
pop
cmp
cmp
and
add
inc
imul
bound
inc
in
cmp
adc
mov
push
pop
aas
adc
test
fild
add
test
hlt
dec
ror
mov
test
xchg
dec
inc
sar
jmp
mov
push
aam
loop
or
mov
or
push
adc
mov
(bad)
into
xchg
mov
loopne
adc
push
clc
sub
arpl
aas
pop
(bad)
loopne
add
jae
movs
xor
aam
sub
mov
js
push
add
mov
leave
jbe
adc
jbe
mov
sub
sbb
jnp
cmp
or
push
jne
ins
jmp
dec
lock
test
xchg
add
mov
add
sub
cdq
xor
xchg
cli
pop
(bad)
fidivr
xor
add
icebp
mov
or
or
inc
mov
pop
mov
leave
xor
or
pop
cmp
push
cwde
inc
mov
dec
call
ret
sub
push
and
xchg
stos
jne
adc
fucomip
sub
cmc
inc
int3
cmp
xchg
div
push
dec
in
sbb
int3
pop
sbb
shl
dec
push
inc
push
inc
mov
push
dec
mov
and
jecxz
fdiv
mov
mov
jle
push
dec
or
ins
in
addr16
or
lahf
test
sub
mov
mov
addr16
rcr
sub
push
adc
push
outs
fimul
or
setbe
test
sub
adc
sub
movs
neg
jmp
adc
ins
jle
in
or
sub
js
push
xchg
dec
mov
inc
and
cmp
add
inc
cmp
inc
push
call
in
sbb
imul
cli
(bad)
ficom
addr16
imul
fsub
in
add
xchg
or
add
and
dec
clc
or
add
ret
xchg
xor
sub
pushf
cmp
pop
pop
inc
cmp
or
add
pop
es
(bad)
aas
mov
fisttp
xchg
je
lahf
mov
ss
das
cli
pop
add
and
jecxz
mov
jmp
ret
retf
dec
add
hlt
fistp
xor
jl
mov
mov
add
push
clc
jno
clc
jb
jmp
pop
jl
push
push
cmc
jno
inc
setge
push
test
aas
mov
lods
test
push
movs
sbb
push
leave
jmp
clc
or
xchg
imul
adc
call
fucomip
aad
cmp
repz
lods
push
add
call
mov
outs
add
jne
js
add
xchg
xor
and
mov
mov
pop
add
loopne
add
or
cmp
xor
push
dec
and
push
int3
hlt
add
cmp
fmul
icebp
lods
mov
das
sub
sar
sub
ins
add
mov
cmps
movs
call
(bad)
jns
adc
jmp
rcr
cmps
cmps
sbb
pop
pop
inc
pop
in
jnp
cmps
xor
jne
add
call
sbb
fcom
inc
xor
aam
popa
ficom
mov
and
and
les
loop
jecxz
or
jb
das
or
(bad)
or
mov
sbb
add
add
je
ret
dec
inc
jae
loope
cs
push
cli
sub
call
mov
inc
(bad)
(bad)
xchg
dec
xor
fcmovnb
shl
sbb
mov
xor
mov
add
retf
cmp
inc
adc
stos
and
xchg
rol
or
add
inc
fsub
mov
inc
add
repz
xor
sub
cmp
cmp
mov
ss
push
sbb
sbb
(bad)
jmp
test
xor
xor
push
arpl
dec
sbb
imul
out
jno
imul
test
mov
inc
in
add
jmp
mov
adc
or
pop
mov
ins
jno
movs
ficomp
adc
and
sbb
add
push
aaa
adc
add
push
test
jo
cmp
adc
and
mov
and
mov
jp
and
pushf
add
and
loopne
sbb
rol
les
cmp
nop
mov
aaa
sti
mov
jle
cmp
imul
jno
xor
xor
fsubrp
push
and
pop
and
or
sbb
jno
xlat
cmp
mov
sbb
and
mov
sub
out
add
sub
sbb
pop
pop
jmp
imul
add
sbb
iret
mov
or
test
add
ret
jmp
(bad)
add
xor
popf
aas
sub
fst
in
sbb
test
pop
add
add
or
jmp
and
push
bound
adc
popf
jmp
or
jns
jmp
ss
mov
std
jcxz
outs
sbb
jne
imul
enter
inc
and
xor
pop
fist
add
cmp
push
pop
inc
(bad)
sbb
ins
loopne
and
and
pusha
shl
out
jbe
add
jp
lods
or
pop
aas
add
jo
aad
adc
mov
fisubr
add
sbb
adc
lea
cmp
fld
sub
test
jmp
and
test
mov
add
inc
stos
loope
aaa
aas
add
pop
shl
(bad)
in
les
and
add
jne
mov
push
mov
sbb
popf
cmp
sbb
add
push
mov
ss
or
aaa
push
adc
lahf
aaa
and
xchg
out
loopne
cli
loopne
pop
adc
inc
mov
push
sub
fwait
and
mov
inc
sub
and
mov
loopne
lock
mov
mov
or
cmp
pusha
and
inc
push
xor
sbb
or
mov
lea
add
pop
pop
loopne
push
mov
lods
nop
rcl
or
xor
aas
loope
mov
mov
ja
inc
inc
popa
xlat
mov
sbb
pop
je
adc
enter
adc
push
sbb
sahf
adc
pop
sub
inc
das
es
jno
cld
inc
inc
and
shl
add
sbb
shr
mov
sbb
shl
mov
ins
fld
je
test
jge
sub
inc
inc
push
jl
movs
sahf
adc
sbb
inc
push
add
xchg
int3
adc
cmp
shl
jmp
dec
dec
ret
lock
pop
mov
lds
sahf
jle
rol
test
adc
bound
fnstsw
pop
or
ror
mov
fisttp
add
inc
inc
idiv
xor
arpl
or
pusha
in
push
aad
sub
loopne
or
test
clc
inc
cmps
clc
cmp
mov
cmp
jp
sbb
inc
rcl
hlt
xor
imul
dec
in
cli
test
retf
rol
pop
nop
jns
neg
outs
inc
xor
mov
add
or
add
xlat
push
mov
dec
test
pop
mov
out
and
es
add
mov
mov
push
loope
xchg
jmp
mov
fnstcw
mov
les
loopne
shr
pusha
sub
jmp
pop
jmp
adc
outs
rol
xchg
scas
mov
add
test
ret
push
push
(bad)
mov
nop
add
scas
or
inc
adc
jne
push
test
push
into
inc
aaa
(bad)
and
cmp
jo
add
das
les
pop
leave
push
add
iret
xor
push
cld
fwait
adc
xor
pop
lods
sub
aam
dec
xchg
adc
xor
dec
retf
jae
mov
xor
xlat
ret
movs
push
xor
popf
ror
sbb
or
in
or
imul
shl
cli
mov
jb
sbb
inc
push
in
pusha
jb
in
adc
xor
or
and
jns
xor
xor
xor
or
mov
cmp
movs
pop
mov
push
test
mov
lock
add
dec
cmps
loopne
adc
sbb
cmp
mov
rcl
mul
inc
xor
adc
mov
sub
neg
mov
mov
mov
sbb
inc
inc
push
out
jmp
sbb
adc
imul
nop
lock
nop
pop
jge
retf
mov
push
push
cdq
ror
lds
call
jmp
or
test
sbb
test
mov
(bad)
iret
(bad)
out
(bad)
les
dec
(bad)
shl
(bad)
push
mov
test
push
mov
pop
leave
cmp
test
add
adc
adc
lock
dec
movs
test
xchg
add
popa
arpl
sbb
pop
add
sbb
or
add
imul
dec
jae
pop
call
loopne
loopne
sahf
push
mov
lahf
pop
call
dec
push
adc
ins
xor
xchg
mov
xchg
nop
out
popa
mov
addr16
es
dec
cmp
sbb
dec
inc
dec
das
dec
(bad)
adc
xchg
jno
pop
mov
ds
or
inc
je
cmp
inc
cmps
test
scas
mov
add
lahf
or
dec
or
cld
push
sbb
movs
sub
sbb
jmp
mov
ins
push
add
and
add
xor
jnp
pusha
pusha
and
or
add
adc
ja
mov
int
add
scas
sbb
adc
or
sbb
push
mov
dec
loopne
or
xchg
add
pop
out
outs
rol
cs
fimul
sub
outs
push
jo
pop
mov
sbb
push
inc
cld
int3
bound
aad
mov
cmp
adc
test
add
sub
push
pop
pop
aam
add
and
jg
lock
test
out
dec
loopne
xor
(bad)
inc
lea
outs
xor
clc
in
fs
push
jmp
rol
xchg
inc
or
std
fisttp
daa
bound
xchg
jge
sbb
lock
or
rcr
lea
rcr
xchg
cmp
and
cmp
or
mov
hlt
jl
pop
push
cs
mov
mov
and
ss
and
mov
je
dec
adc
push
push
loop
sbb
add
test
adc
cwde
push
aas
jl
pop
pop
inc
aam
sub
push
ds
add
jns
adc
test
hlt
mov
adc
mov
fidiv
loopne
daa
call
or
ret
jne
jp
mov
dec
stos
sbb
xor
mov
jae
cli
addr16
mov
inc
mov
imul
jbe
sub
cmps
arpl
or
ja
retf
pop
adc
ins
imul
sbb
and
xor
cmps
mov
pop
inc
cmp
xchg
push
and
bt
setb
dec
aaa
jno
cmc
js
mov
sti
and
lahf
lods
push
sbb
dec
call
pop
jle
mov
icebp
push
lds
ror
inc
and
test
test
fs
xchg
mov
xchg
mov
sahf
add
sahf
xor
aaa
in
mov
or
mov
push
aad
movs
movs
pop
lds
rol
int3
(bad)
push
and
lock
ror
sub
or
jge
movs
movs
stos
jmp
dec
xchg
add
jl
pop
daa
scas
adc
adc
inc
shr
retf
dec
in
and
add
ja
jae
ins
neg
xor
(bad)
xlat
jle
or
sbb
dec
push
mov
pop
mov
pop
pushf
or
enter
sub
ss
cmp
lea
cmp
lahf
push
sub
fimul
aam
jo
test
pusha
in
ss
dec
mov
les
mov
or
(bad)
mov
add
adc
rcr
int3
add
lock
add
or
lods
or
sub
xchg
jle
fwait
shl
ret
push
popa
icebp
and
sar
neg
popf
push
adc
cmps
push
jmp
push
and
in
add
into
adc
xchg
sub
add
pop
push
adc
and
(bad)
loopne
(bad)
sub
adc
mov
daa
adc
adc
test
lock
popa
mov
push
adc
add
ret
and
and
adc
popa
mov
mov
add
das
or
dec
push
fidivr
movs
rol
inc
clc
pop
scas
and
mov
and
cmps
push
mov
enter
dec
push
shl
and
push
push
(bad)
(bad)
mov
popf
pop
adc
sub
pop
or
mov
and
sub
dec
inc
adc
and
imul
mov
push
or
mov
or
jp
popa
dec
cmp
scas
and
mov
adc
mov
push
push
cmps
pusha
add
mov
adc
(bad)
sahf
dec
or
jle
mov
sbb
mov
inc
adc
xor
sbb
and
icebp
popf
pop
sbb
jp
pop
lock
jmp
jl
ss
mov
mov
mov
adc
lea
jp
xchg
stc
loop
and
sbb
mov
and
or
adc
test
lock
test
pop
jb
nop
test
or
cmp
xor
lea
push
xor
fs
cmps
test
in
pop
pop
push
loopne
cs
cmp
adc
in
(bad)
(bad)
les
das
push
pop
out
daa
shl
push
in
ds
in
lea
imul
mov
mov
ret
pop
or
sub
loopne
movs
fmul
mov
add
dec
dec
xor
jb
dec
dec
setno
lods
dec
pop
xor
xchg
(bad)
fldcw
dec
mov
aaa
nop
push
or
push
jmp
das
pop
xchg
imul
adc
jp
imul
xor
push
mov
inc
fs
nop
in
jo
or
iret
add
adc
cmp
xchg
adc
or
and
add
cmp
jbe
sub
str
xor
xor
pusha
sub
movups
xchg
push
add
sbb
sbb
push
pop
xor
inc
pop
adc
neg
sbb
add
push
shr
mov
xchg
mov
out
jl
or
jg
movs
aaa
push
loop
in
adc
mov
push
push
pop
mov
mov
add
xchg
iret
loop
sbb
scas
fcomp
add
cmp
add
jae
jle
jmp
not
stos
(bad)
aam
rcr
push
mov
mov
and
call
ret
add
mov
loopne
push
pop
out
inc
arpl
out
clc
mov
arpl
inc
cmp
jne
scas
inc
test
mov
pusha
in
fmul
push
fistp
addr16
daa
lods
loope
ss
jge
mov
xor
clc
jne
das
clc
jo
mov
(bad)
lahf
ret
and
push
inc
ins
pop
outs
dec
sub
hlt
and
add
pusha
mov
add
jo
mov
xchg
push
and
add
pusha
not
addr16
pop
dec
sub
test
add
adc
sbb
cmp
rol
rcl
mov
sbb
mov
push
jbe
pop
add
xor
cwde
add
pop
add
jmp
adc
test
push
push
xor
inc
(bad)
cmp
fs
test
ss
push
lea
mov
mul
adc
loopne
outs
jmp
or
pop
sbb
cmp
aas
imul
dec
sbb
add
push
sti
rcl
loopne
in
es
cmp
xchg
inc
xchg
cmc
jo
jnp
adc
add
pop
xor
js
cmp
pusha
inc
jne
adc
rcl
out
jno
test
mov
mov
dec
pop
idiv
(bad)
push
ret
inc
cmp
pop
movs
in
xor
into
jecxz
or
ret
add
and
jae
xchg
xchg
mov
inc
or
add
ins
outs
je
lea
dec
fistp
bound
push
jmp
shl
outs
out
data16
xchg
push
pop
fild
xor
popf
in
das
cmp
and
fild
pop
jo
adc
sbb
gs
pop
into
cmp
cdq
mov
cmps
mov
add
(bad)
push
mov
adc
mov
add
ds
sub
cmp
icebp
mov
enterw
js
and
pop
add
js
loop
push
push
fstp
fs
mov
dec
add
mov
pop
pop
mov
rcr
push
sbb
pop
sub
fbstp
or
sbb
lock
and
adc
mov
ror
fldenv
adc
lahf
sub
pop
add
or
and
mov
ret
imul
or
pop
in
inc
mov
add
mov
xchg
adc
js
nop
and
jns
(bad)
sub
inc
sbb
test
lds
pop
sbb
stos
sub
ins
mov
xlat
inc
add
clc
mov
sub
shr
pop
out
jmp
push
mov
sub
jecxz
add
pop
add
mov
inc
mov
dec
enter
es
mov
xor
mov
dec
std
nop
cmp
adc
add
daa
mov
outs
arpl
fwait
xchg
pop
dec
sti
test
pop
mov
or
mov
pop
ins
mov
mov
xor
jmp
xor
add
mov
push
mov
into
or
or
out
test
ins
dec
dec
ret
out
push
iret
mov
rol
dec
mov
and
inc
cld
cmp
dec
jmp
and
cmp
sbb
push
cwde
pushf
shr
sbb
pop
push
inc
add
sti
mov
mov
ins
fnsave
sbb
addr16
inc
push
cmp
xor
lahf
sub
retf
cmp
adc
aas
jo
mov
mov
cmc
sbb
pushf
add
dec
js
sub
or
add
shr
lock
fisub
push
dec
pop
aam
cmp
pop
add
sub
lods
pop
(bad)
pop
jns
dec
in
(bad)
and
push
push
sub
stos
or
pop
scas
add
pop
inc
cmps
cld
cmp
mov
enter
cs
inc
add
xor
add
cmp
sub
cmp
call
adc
jo
fiadd
or
jmp
dec
push
scas
mov
rol
or
jne
hlt
sub
adc
push
add
(bad)
(bad)
jnp
xchg
(bad)
je
jae
jmp
jns
inc
pop
cmp
push
jne
push
dec
loopne
fsub
jmp
and
inc
or
xor
lock
inc
daa
pop
add
mov
mov
pop
jno
pop
mov
clc
dec
sbb
inc
js
sbb
aad
inc
(bad)
cmp
add
pop
mov
mov
dec
cmp
cmp
add
jno
or
cmp
push
(bad)
ins
pop
xchg
or
mov
jns
inc
pop
xor
arpl
mov
aam
outs
pop
dec
pop
je
cmp
cmp
pop
hlt
je
push
inc
jno
mov
push
mov
nop
lods
push
dec
fldcw
or
(bad)
cmp
aas
movs
mov
cmp
fist
push
xor
in
sub
mov
xchg
fcomp
fiadd
mov
(bad)
loopne
lea
jl
mov
pusha
clc
lock
mov
mov
xchg
or
or
dec
pop
push
int3
cwde
xor
lock
cmp
push
test
and
ror
ins
mov
inc
push
imul
and
nop
add
pop
adc
push
jmp
pop
sbb
push
or
or
jmp
adc
and
aas
arpl
jg
lock
inc
inc
add
mov
out
sbb
inc
pop
xchg
mov
dec
loopne
cmc
sbb
call
sub
or
es
sub
adc
std
add
mov
pop
add
adc
jb
sub
inc
jle
add
push
push
add
cmp
add
push
sbb
cmc
cmp
icebp
sub
es
push
scas
data16
sub
add
or
or
dec
sub
pop
jne
ret
jo
dec
mov
jns
mov
inc
cmp
push
add
xchg
adc
or
ss
and
fs
popa
idiv
mov
mov
adc
mov
imul
(bad)
(bad)
mov
pop
mov
adc
sub
adc
add
mov
add
js
adc
sbb
and
mov
mov
fimul
mov
add
ins
mov
jge
push
adc
push
push
mov
mov
test
adc
ds
xchg
popa
in
lock
pop
jge
sbb
(bad)
arpl
jne
leave
xor
adc
sahf
in
push
add
call
cmp
das
(bad)
fcomp
xor
outs
out
jbe
mov
add
dec
mov
adc
arpl
sar
xor
mov
push
ror
adc
add
cmp
cwde
inc
or
or
sbb
je
jmp
and
push
fcom
rcl
fidiv
or
pop
add
xchg
xchg
mov
push
pop
or
or
mov
jae
test
rcr
adc
cmp
push
and
jne
pop
mov
js
sbb
jo
jnp
mov
sbb
es
(bad)
data16
popa
aam
push
adc
pop
lock
jbe
lock
js
push
pop
xchg
(bad)
cmp
push
pusha
scas
adc
addr16
push
mov
mov
pusha
mov
inc
add
dec
mov
add
jg
call
jl
jbe
push
fcomp
adc
pop
pop
xchg
cmps
mov
mov
sub
push
pop
inc
pusha
mov
rol
sbb
(bad)
cmp
scas
outs
jmp
sub
mov
jg
lea
movs
xchg
add
aad
or
add
gs
mov
push
test
jo
(bad)
arpl
sbb
add
mov
ins
and
shl
nop
and
adc
mov
sbb
imul
dec
add
sbb
call
xor
outs
outs
mov
pop
lock
dec
shr
push
inc
cld
nop
push
add
pop
in
sub
add
push
aas
add
and
adc
inc
pusha
sbb
adc
hlt
and
jg
push
imul
or
inc
jb
sti
or
add
or
dec
shl
lock
mov
dec
push
or
js
clc
push
sbb
pop
sar
mov
(bad)
push
inc
mov
jnp
aam
data16
das
sti
and
lea
sub
in
or
mov
inc
mov
fs
and
inc
mov
lea
xchg
(bad)
std
aaa
clc
ret
jb
push
push
adc
les
loope
popa
adc
inc
pop
aam
push
sahf
mov
pop
add
pop
pop
or
sbb
into
jo
aad
loopne
mov
fcomp
push
lods
outs
xchg
bound
(bad)
dec
mov
dec
add
dec
push
ror
sbb
push
lds
xchg
jbe
mov
xchg
cmp
add
shl
cmp
pop
pop
and
ins
sbb
pop
aaa
inc
out
jbe
jb
cwde
or
mov
mov
sub
shl
retf
mov
sbb
xchg
lods
cmp
or
js
push
add
imul
jl
sub
test
adc
mov
das
pusha
std
jecxz
ins
and
imul
cmp
or
inc
loopne
push
pusha
ficom
push
push
data16
cmps
jge
pop
mov
bound
jmp
shl
or
xchg
dec
sti
or
movs
add
mov
test
test
add
dec
mov
jae
or
ja
aam
aam
xor
and
outs
sub
test
add
mov
add
adc
dec
push
sbb
inc
cmp
rol
aas
repnz
loop
pop
nop
jne
sbb
hlt
ror
data16
test
hlt
aam
mov
add
cmc
or
mov
retf
push
ror
pop
push
sbb
int
push
icebp
push
mov
popa
inc
enter
pop
add
mov
loop
sub
mov
pusha
lods
mov
adc
adc
or
enter
test
or
add
aas
mov
mov
sbb
sbb
adc
outs
add
pop
loop
push
cmc
mov
mov
sbb
or
xor
and
inc
sbb
dec
adc
mov
pop
xlat
push
adc
fs
sbb
sbb
push
sti
mov
ss
inc
js
push
fs
sbb
cli
pop
xchg
inc
je
pop
push
and
adc
(bad)
ss
cs
sbb
push
add
daa
sbb
mov
push
je
loop
add
jne
mov
lds
pop
nop
shl
xor
imul
lock
fdiv
xchg
aam
mov
mul
add
test
cmps
nop
sbb
mov
xor
and
loopne
or
shl
test
jl
(bad)
and
loop
push
dec
outs
add
fcomp
sbb
adc
adc
or
push
xchg
xor
sub
mov
jns
loopne
mov
pop
(bad)
adc
imul
mov
ror
cmps
pusha
mov
push
not
call
inc
out
stos
inc
inc
add
dec
cdq
in
cld
add
add
in
ins
and
dec
mov
push
and
xchg
pusha
mov
push
test
add
xor
add
fst
test
jl
inc
sar
xor
mov
fld
jo
fs
pop
pusha
dec
mov
pop
jl
pop
add
inc
dec
jne
clc
pop
mov
(bad)
mov
or
push
sub
in
inc
or
bound
push
inc
or
inc
fsubr
sbb
xchg
cmps
pop
inc
aam
push
je
push
cmp
jno
(bad)
or
and
xor
push
nop
cmp
sub
sahf
and
cmps
js
scas
pop
inc
mov
shl
jne
je
mov
jl
jmp
add
test
or
popa
cdq
mov
pop
mov
or
xchg
and
add
and
xor
add
fist
gs
jl
mov
mov
xchg
inc
cwde
add
push
out
sahf
pop
mov
inc
cmp
pop
push
daa
mov
xchg
add
sbb
popa
jne
mov
and
sub
mov
push
cmp
inc
mov
jle
movs
loopne
mov
add
mov
xchg
mov
adc
xlat
add
or
(bad)
arpl
xchg
adc
das
add
pop
dec
rcl
inc
cmp
mov
clc
sbb
adc
inc
ins
sbb
jo
push
dec
sbb
pop
add
in
mov
sbb
xor
push
sbb
mov
sbb
xchg
call
sbb
mov
scas
clc
or
jne
mov
jb
xor
mov
sar
imul
jmp
adc
ja
scas
push
(bad)
mov
bound
pop
sbb
sbb
xchg
and
popa
inc
inc
mov
inc
inc
js
push
das
push
test
mov
and
mov
ins
and
mov
aaa
and
jge
inc
cmp
clc
aam
mulps
lods
xchg
std
stos
sbb
adc
nop
add
xchg
loopne
pop
push
inc
add
test
mov
cmps
in
mov
into
je
pop
adc
jmp
stos
(bad)
stos
rcl
lock
clc
adc
adc
mov
and
adc
xchg
push
iret
stos
data16
jbe
and
and
pop
sbb
fwait
jnp
fisttp
dec
jns
dec
xor
(bad)
mov
neg
push
scas
sbb
fldcw
adc
add
add
pop
mov
add
inc
adc
xchg
mov
cmp
adc
inc
sbb
cmp
add
sbb
loope
call
stos
sub
push
mov
sub
add
call
xor
cld
xor
sbb
add
mov
xor
dec
fld
lahf
add
add
pop
lods
mov
jmp
jb
shl
int3
dec
sti
dec
retf
pop
mov
outs
shr
gs
xor
aam
or
adc
add
scas
jns
scas
fmul
shl
jae
das
or
sub
push
sbb
pushf
mov
and
add
mov
stc
or
xor
pusha
and
push
fsub
sub
fld
mov
and
pop
daa
test
dec
mov
or
push
sbb
and
fdivr
popa
js
fnstsw
popa
sbb
jns
fimul
enter
mov
jno
cmp
mov
rcl
div
mov
inc
mov
aaa
add
xor
mov
sti
inc
add
add
jecxz
and
jne
or
push
mov
mov
cmp
push
xchg
or
les
js
jecxz
test
push
adc
push
iret
xor
or
jnp
rol
sub
shl
fwait
and
retf
jnp
jge
loopne
mov
sub
sbb
rdpmc
jae
test
adc
in
mov
jno
(bad)
cmp
sbb
inc
sub
push
fwait
mov
enter
or
repz
adc
arpl
call
add
xchg
mov
push
pop
adc
shl
sub
pop
jb
sbb
ins
ss
mov
aaa
sub
fmul
(bad)
push
push
pusha
mov
das
nop
test
test
pop
xor
xchg
stos
add
jbe
cmp
punpcklbw
or
rol
lods
(bad)
push
and
sub
xlat
sub
sub
push
mov
jg
xor
push
push
inc
pop
adc
shl
add
(bad)
std
inc
push
femms
jne
aas
mov
cmovle
aad
psubb
mov
push
fadd
hlt
mov
mov
(bad)
arpl
loope
outs
adc
adc
or
in
test
dec
hlt
pop
push
loopne
jo
lea
jb
das
cmps
mov
call
mov
or
loope
sbb
add
xor
jmp
adc
adc
cmp
and
and
push
or
cmp
push
ja
in
adc
(bad)
cmp
or
mov
inc
cmp
add
sub
or
xor
xor
inc
outs
mov
add
addr16
add
jmp
jnp
test
pop
inc
out
or
dec
movs
je
push
mov
dec
iret
cmp
ret
dec
sub
pop
adc
sbb
adc
push
inc
jmp
mov
loope
jl
inc
jp
mov
push
add
push
lods
push
ins
test
adc
push
or
rol
icebp
loopne
inc
push
pop
rol
add
cmp
sbb
and
pop
popa
or
push
mov
sbb
push
pusha
push
adc
cwde
movs
or
pusha
lds
js
add
sti
fs
or
mov
pop
pop
mov
add
stc
xchg
push
ror
push
sbb
in
jp
cs
(bad)
and
push
test
test
and
pusha
sbb
push
arpl
aas
inc
xchg
add
dec
adc
lea
push
push
or
inc
xchg
mov
add
push
and
xchg
or
pop
jne
faddp
fcom
jmp
pop
pop
out
aaa
add
add
je
mov
lods
sub
push
push
test
daa
add
lods
inc
add
mov
mov
sbb
stc
cmp
push
or
(bad)
call
(bad)
test
jge
xor
push
push
inc
lea
and
pop
xor
adc
xor
je
in
push
arpl
imul
add
mov
test
sub
push
inc
in
mov
inc
lea
adc
mov
add
sub
add
inc
inc
push
cli
xchg
clc
mov
rcl
jno
jne
cmp
xor
fwait
and
neg
adc
addr16
jo
(bad)
push
xor
cmp
fwait
jb
adc
jbe
clc
scas
pusha
call
mov
mov
sbb
test
jne
cmp
sbb
call
jnp
pushf
pushf
pusha
jmp
push
add
fld
push
je
cwde
add
mov
mov
dec
fsub
pop
cmp
js
ds
retf
rol
xchg
arpl
sbb
fdiv
icebp
ror
call
pop
jl
push
pop
cmc
add
imul
add
ret
cdq
adc
aaa
mov
inc
aam
adc
jmp
int3
nop
and
mov
jne
(bad)
cwde
or
cmp
mov
xlat
adc
dec
lds
add
add
and
cdq
xlat
xchg
std
dec
mov
sub
loop
jno
fisubr
lea
jle
popa
xchg
test
push
add
add
mov
xchg
lods
lods
or
mov
jl
(bad)
pop
data16
imul
sbb
xor
adc
(bad)
(bad)
sub
sbb
mov
fwait
es
add
push
xchg
inc
or
pop
xor
aas
push
push
sahf
mov
jecxz
xchg
add
xor
adc
fisub
add
ins
and
mov
sub
mov
fdiv
in
movs
mov
and
adc
adc
xchg
adc
mov
dec
push
pop
sbb
adc
icebp
push
or
fdivr
xor
jle
dec
cmp
js
(bad)
jmp
or
and
mov
or
mov
out
adc
jne
xor
sbb
ret
das
inc
add
fisttp
sbb
add
and
sbb
add
loope
or
gs
ds
sbb
sub
and
rol
jb
inc
(bad)
arpl
push
rol
xor
xchg
xchg
out
pop
and
jg
sbb
data16
cmp
movs
out
iret
add
cmp
fdivr
adc
xchg
jne
mov
adc
sub
cmp
pop
outs
sbb
sbb
rcl
aaa
dec
clc
cmp
nop
js
jne
inc
ret
mov
and
outs
mov
push
popa
fdivr
or
hlt
jnp
mov
pop
push
adc
xchg
fadd
retf
jo
push
test
ja
xchg
jecxz
adc
push
dec
sbb
pop
add
jp
pop
inc
lods
scas
pop
dec
test
push
stos
je
or
mov
and
jns
pushf
rol
lods
xchg
mov
rcl
sbb
and
rcl
fsubr
add
ror
test
or
lds
fiadd
mov
jno
out
xchg
mov
(bad)
pusha
(bad)
sar
call
sbb
mov
and
iret
push
sbb
mov
adc
shl
jmp
pop
mov
cmp
sbb
outs
jne
ret
mov
mov
gs
adc
inc
outs
call
cdq
push
inc
adc
push
mov
adc
jo
mov
(bad)
loope
cmc
test
mov
adc
sub
jns
add
jbe
sbb
sub
outs
(bad)
dec
inc
(bad)
push
imul
add
xor
mov
popf
fcmovu
mov
push
ins
mov
xor
jne
inc
xor
pop
js
jl
mov
shl
dec
test
aaa
sbb
ret
adc
(bad)
mov
jmp
jne
push
cli
and
and
xchg
xchg
clc
lods
mov
sbb
mov
lahf
xor
push
(bad)
dec
loopne
xor
(bad)
test
mov
test
nop
xor
dec
dec
repz
das
and
and
sbb
add
test
jge
outs
push
fisub
inc
push
add
dec
fsubr
cmp
je
mov
add
dec
rcl
add
pop
dec
xchg
mov
mov
jl
shr
sub
mov
jmp
dec
jmp
cmps
cmps
sahf
mov
or
mov
ror
push
push
cs
mov
popa
inc
sub
or
cmp
mov
lods
sub
push
and
xchg
test
popf
aam
mov
adc
retf
pushf
mov
popa
add
xchg
test
xor
or
add
mov
xor
lods
cmp
mov
fiadd
jmp
inc
cmp
sahf
and
fstp
lods
dec
jb
inc
(bad)
cs
xor
push
jns
or
sbb
xor
out
(bad)
shr
(bad)
pop
(bad)
xor
stos
mov
out
add
hlt
mov
pop
add
xor
jmp
call
pop
jle
cmp
cmp
add
pop
js
or
add
movhps
cmp
or
adc
push
sbb
retf
jg
and
mov
adc
jb
add
xor
out
dec
mov
ins
pop
loop
xchg
in
lock
push
xchg
ret
inc
or
jp
(bad)
push
push
pusha
add
inc
sbb
fsubr
(bad)
push
shr
mov
mov
xchg
jne
jnp
movs
out
xchg
push
lea
xchg
and
add
mov
lds
pop
adc
imul
or
jo
sahf
adc
(bad)
xchg
mul
dec
mov
dec
sub
add
inc
fisttp
je
mov
sub
xor
loope
lds
jg
sub
push
sub
push
inc
dec
jl
sub
sbb
mov
ds
pop
sub
add
jo
and
cmp
or
ja
shl
or
push
and
jecxz
scas
add
sub
adc
inc
sbb
or
adc
dec
push
ret
out
add
or
mov
neg
gs
push
pop
nop
iret
or
loope
sub
bound
lods
sub
cmp
push
fbld
mov
dec
mov
mov
lahf
out
cmp
rep
pop
dec
cmp
call
mov
push
jmp
addr16
add
outs
imul
mov
pusha
xor
push
nop
das
sub
rcl
push
repz
xor
and
ins
mov
jo
(bad)
inc
and
sub
adc
mov
arpl
daa
mov
movs
mov
jg
mov
xchg
inc
dec
mov
mov
arpl
inc
dec
je
mov
pop
pop
push
rcr
sbb
push
pop
fst
cmove
imul
adc
fwait
and
inc
stc
or
aaa
inc
inc
xor
inc
mov
gs
daa
sub
adc
dec
inc
mov
into
inc
cmps
adc
lea
aam
jae
daa
hlt
icebp
test
adc
jmp
mov
scas
adc
dec
xlat
add
mov
je
inc
icebp
jg
rol
add
cmp
test
imul
add
jnp
mov
xchg
(bad)
les
fdiv
inc
add
or
inc
mov
add
jg
xor
add
xor
(bad)
cmp
xor
movups
mov
loop
cli
or
pop
sub
inc
rcl
(bad)
xlat
(bad)
in
add
or
or
pop
inc
or
icebp
mov
sub
sar
jmp
push
call
xchg
addr16
sbb
push
imul
mov
shl
outs
sub
outs
shl
xor
push
xchg
int3
call
jo
loopne
test
cmp
sti
daa
and
add
test
test
dec
clc
adc
rcpps
fdivr
and
mov
mov
add
jbe
and
jl
jle
add
cmp
pop
bound
sbb
retf
adc
push
cs
sub
pop
push
aas
push
clc
cmp
pop
loopne
mov
pop
pop
push
dec
or
bswap
mov
ins
daa
push
adc
and
aaa
test
fmul
je
and
popa
aaa
retf
sar
sbb
fiadd
test
add
pop
loopne
jmp
adc
cmps
movs
or
sub
push
ret
mov
sbb
mov
aas
cmps
push
scas
mov
lea
sub
push
clc
mov
pop
cmp
xor
xor
xchg
gs
retf
ja
xchg
sub
sbb
(bad)
sti
popa
jmp
neg
addr16
movsx
adc
push
sub
xchg
jmp
sbb
xor
ficomp
push
and
or
and
repz
imul
mov
iret
aaa
mov
sbb
shl
in
and
push
loopne
xchg
fwait
imul
es
rcr
aaa
xchg
test
pop
inc
jl
xchg
jne
loope
push
push
inc
push
fimul
xchg
jne
mov
sbb
adc
test
sbb
xor
inc
call
leave
ret
in
and
cmp
cmp
test
inc
sbb
inc
dec
jne
daa
xchg
jmp
es
xchg
retf
stos
pop
pop
iret
and
mov
pusha
add
ret
push
jg
add
or
xor
(bad)
adc
jl
cmps
or
pushf
mov
xor
cld
stos
loopne
fmul
jmp
aam
test
pop
sub
xchg
pop
movs
aaa
adc
cmp
push
mov
jp
call
(bad)
pop
repz
mov
mov
aas
fmul
pop
jp
mov
fsubr
(bad)
xchg
mov
sbb
pop
and
(bad)
aad
aaa
jp
clc
test
or
push
out
ss
(bad)
push
push
push
add
lds
int3
sub
into
xor
arpl
push
nop
rcl
loope
and
jne
hlt
ror
push
imul
add
and
test
add
xor
push
lock
sar
jl
push
fild
mov
sub
mov
push
sbb
mov
call
jl
sub
mul
ret
push
xchg
or
outs
cld
in
adc
sub
mov
dec
(bad)
aaa
(bad)
out
rcl
out
ja
sub
jno
inc
and
adc
int
sbb
ret
push
or
add
sbb
sub
sub
mov
fiadd
adc
jne
add
adc
fsub
mov
rcr
outs
retf
cli
call
call
neg
repz
mov
and
mov
cmp
cli
adc
into
in
rcr
sbb
xchg
add
popa
sbb
mov
cmp
jge
in
push
cwde
adc
pop
cmp
adc
add
push
add
pop
xor
add
dec
adc
xlat
test
pop
je
adc
pop
cmp
sub
call
mov
popa
inc
cld
enter
pop
mov
adc
inc
pop
mov
add
fs
xchg
mov
add
pop
cli
ror
pop
lods
adc
add
dec
pop
mov
adc
inc
cli
test
push
mov
sbb
xor
dec
shl
outs
add
add
out
xchg
lods
push
pusha
int3
xor
push
outs
push
xor
ret
mov
lea
int
adc
and
mov
test
jo
pop
and
sub
(bad)
aas
jmp
sbb
push
repz
popf
sbb
cdq
inc
lahf
je
mov
xchg
jecxz
test
xor
ror
lods
pop
push
sar
js
push
mov
push
inc
or
lock
test
lea
sti
inc
in
test
sub
mov
push
dec
clc
pop
adc
cmp
push
js
add
adc
fldcw
sbb
int3
xor
add
cmp
jb
push
mov
outs
pop
add
mov
sub
lods
adc
push
or
jl
add
mov
daa
push
pop
pushf
xchg
call
push
add
dec
repnz
pop
repz
test
pop
mov
jmp
xor
ret
dec
les
out
imul
aas
mov
add
sub
cwde
cmps
in
xchg
aam
pop
adc
jl
and
cs
dec
fdiv
pusha
add
je
pop
nop
xor
xchg
mov
pop
jle
pop
or
add
xchg
mov
shl
pop
ins
fmul
dec
push
lock
inc
push
xchg
mov
sti
rol
push
add
loopne
jmp
adc
and
sub
sub
mov
cmp
jne
sti
cwde
ret
add
dec
(bad)
xchg
and
add
cmp
inc
xchg
and
les
mov
les
int3
mov
pop
test
add
lock
(bad)
dec
push
js
lea
addr16
mov
adc
ins
add
ret
mov
or
ror
mov
js
lea
or
punpckhdq
test
pop
or
push
pop
mov
(bad)
or
(bad)
pop
inc
int
mov
add
cmp
mov
xchg
int3
xchg
sbb
pop
or
push
xchg
dec
sbb
cmp
mov
mov
add
push
add
fidiv
xchg
fsubr
ret
dec
jb
adc
xchg
or
adc
mov
in
add
pop
or
and
jecxz
push
sahf
push
sub
inc
mov
test
cmp
je
test
aaa
lds
inc
push
xor
ss
and
shl
or
popa
jnp
add
js
in
ror
add
push
sub
or
call
xor
ret
dec
repnz
lock
test
push
adc
xor
push
adc
rcl
js
sub
fistp
inc
ret
ja
and
mov
add
cmp
stos
lods
out
and
and
(bad)
adc
pop
xchg
xor
les
mov
and
test
cmps
je
aas
in
mov
mov
or
cmp
loope
cmp
fcmovb
es
cmp
add
xlat
test
dec
call
inc
ret
pushf
inc
cmp
jo
fild
(bad)
pushf
dec
call
je
rcr
add
adc
aam
push
mov
lea
push
clc
pop
pop
cld
mov
mov
adc
int
dec
cmps
pusha
adc
mov
fcom
repz
or
push
add
call
popf
ins
ins
xchg
inc
pop
push
xchg
loop
out
popa
mov
sub
dec
das
clc
or
adc
xor
lds
pop
inc
lods
jge
mov
mov
dec
loop
stc
mov
hlt
sub
cmp
xchg
stc
mov
rcl
stc
push
sbb
fmul
sahf
pop
sub
scas
xor
mov
push
popf
add
sub
movs
unpcklps
retf
adc
cmp
or
test
jl
adc
mov
aad
fsub
aam
adc
inc
xor
cmps
xor
stos
add
lods
push
mov
aas
fild
sub
sub
adc
ins
(bad)
fst
mov
add
das
jl
and
shl
and
loope
loopne
ja
std
add
inc
sbb
jae
js
and
adc
dec
enter
and
sbb
xchg
adc
xchg
cmc
adc
add
sub
(bad)
je
add
push
cmp
mov
push
xchg
mov
or
ins
mov
mov
cld
ins
cmp
add
jl
add
es
lahf
push
add
or
sub
arpl
or
cmp
out
sar
stos
adc
test
or
cmp
mov
inc
jne
mov
jmp
and
sbb
adc
jae
and
sbb
nop/reserved
add
mov
popa
mov
adc
adc
imul
mov
fld
shl
(bad)
test
sbb
push
lock
or
inc
ss
inc
add
adc
outs
pushf
inc
jb
sbb
inc
or
sbb
inc
call
sub
fcmovnb
fcmovne
xchg
add
and
mov
mov
stos
cmp
cmp
inc
sbb
arpl
add
adc
inc
ins
sbb
mov
xchg
mov
test
mov
stos
test
mov
scas
mov
push
frstor
xlat
mov
add
lea
mov
mov
dec
lods
je
mov
test
dec
push
aas
sbb
sub
stos
jp
xor
out
dec
aas
imul
dec
and
adc
sub
add
add
clc
dec
add
mov
mov
aam
adc
inc
mov
sbb
mov
xchg
stos
inc
inc
or
dec
add
aaa
add
push
add
dec
aam
lahf
ins
adc
mov
sbb
sahf
xchg
sbb
les
adc
mov
mov
mov
dec
adc
add
inc
dec
bound
adc
dec
sbb
xchg
xchg
mov
test
mov
pushf
int3
into
push
push
xor
cdq
shr
or
pop
xchg
jnp
xchg
add
adc
ins
mov
add
mov
test
push
mov
rcl
bound
movs
adc
add
push
jecxz
push
inc
jmp
mov
sbb
add
push
jbe
aaa
dec
inc
or
inc
xchg
inc
adc
sub
jbe
sbb
movs
fimul
inc
dec
add
aaa
or
dec
inc
pop
nop
test
add
or
pop
in
add
adc
jmp
xor
nop
fsubr
and
ins
nop
daa
add
test
aaa
repz
xor
out
mov
fs
sub
sbb
jb
sub
inc
pusha
and
mov
add
nop
push
mov
mov
dec
sbb
dec
sbb
xor
xor
pop
fldcw
inc
pop
inc
push
in
cmp
or
movlps
push
and
and
xlat
pop
loopne
in
cmp
sub
push
out
add
add
clc
std
and
call
jge
ret
mov
mov
mov
data16
mov
stos
jg
push
gs
fnsave
js
jmp
adc
inc
jmp
es
xchg
and
mov
je
push
mov
popa
je
mov
rcr
cmps
inc
aad
push
push
mov
bound
sahf
into
addr16
and
aam
jnp
and
jno
xchg
lsl
adc
dec
push
hlt
xchg
enter
dec
sbb
adc
dec
lahf
pop
lahf
sbb
or
or
(bad)
out
push
add
scas
iret
mov
cmp
popa
cld
rcr
add
push
push
lea
mov
or
inc
shr
inc
mov
adc
xchg
adc
cmps
dec
mov
test
sbb
push
shr
retf
aaa
test
sahf
push
mov
cmp
or
push
push
test
lahf
test
pop
pop
push
outs
mov
sbb
popa
or
(bad)
cmps
mov
cwde
jne
inc
and
sub
retf
das
mov
or
fadd
shr
call
pop
(bad)
div
or
cmps
and
mov
sahf
rcl
dec
xchg
sbb
not
call
sbb
xchg
ficom
mov
fbstp
add
adc
jne
pusha
xchg
and
inc
sbb
push
mov
int
mov
je
dec
jl
addr16
push
sub
test
adc
push
mov
adc
stos
cmps
xchg
test
pusha
mov
test
test
inc
jb
jns
push
test
imul
pop
jnp
push
mov
mov
loopne
sbb
pop
pop
adc
(bad)
jle
or
pusha
xchg
test
xor
and
dec
repnz
push
enter
or
and
xchg
or
mov
dec
sbb
pushf
add
or
ret
inc
cmp
lahf
leave
jle
push
sbb
es
mov
adc
adc
movs
xchg
mov
jl
cmp
pop
sti
sub
mul
sub
xor
xor
mov
mov
mov
aam
ins
fild
add
sbb
xor
xor
push
mov
or
sbb
push
or
mov
ret
addr16
push
mov
mov
inc
js
mov
repz
adc
inc
cmps
enter
sahf
test
jne
test
mov
mov
and
popa
inc
mov
and
dec
sub
adc
cmp
icebp
sub
add
mov
adc
xchg
jle
push
test
pusha
adc
test
cmp
jecxz
out
test
inc
cli
adc
lock
add
sti
je
jae
loop
mov
add
ins
daa
mov
out
(bad)
test
add
in
or
ja
and
add
mov
loope
xlat
add
je
xchg
adc
scas
mov
mov
push
cmp
mov
inc
sahf
repnz
mov
sub
add
aaa
lea
push
xchg
add
add
adc
sub
dec
adc
jne
xchg
cmp
and
xor
or
adc
mov
rcl
adc
mov
add
les
mov
sbb
or
xor
ret
pop
sbb
sbb
push
repnz
mov
or
xchg
call
dec
or
mov
inc
adc
adc
fidivr
inc
xor
jmp
push
adc
jg
lods
sbb
(bad)
fstp
(bad)
and
mov
(bad)
fwait
mov
pusha
and
test
inc
cmp
dec
sbb
push
nop
push
shl
ror
lods
fistp
test
inc
jo
inc
ds
xor
xchg
and
movs
cwde
sbb
sub
jo
and
xchg
cmp
aam
cmps
fdivr
inc
pop
xor
add
adc
shl
dec
pop
dec
out
jns
or
adc
push
shl
inc
and
mov
mov
cmp
add
inc
(bad)
push
ret
adc
ret
movs
push
pop
test
sahf
xor
hlt
popf
cli
mov
jno
scas
mov
leave
popa
cmp
push
(bad)
shr
xor
cmps
lods
jno
cs
call
std
push
fiadd
jmp
inc
sub
aaa
cmps
lods
xchg
inc
repnz
fmul
shl
test
inc
xor
rol
mov
adc
setb
movs
xchg
inc
inc
ja
push
xchg
pushf
stos
push
xor
xor
jnp
in
(bad)
std
pop
push
mov
sbb
or
test
xchg
mov
mov
cmp
mov
in
push
nop
mov
inc
loop
jo
rcl
(bad)
inc
repnz
(bad)
dec
in
add
jl
in
cmp
inc
ins
xchg
sar
dec
xchg
es
jne
mov
push
sbb
imul
and
fs
movs
retf
xor
test
and
pop
pop
retf
xor
sub
xor
jae
(bad)
fmul
lock
movs
jl
cmp
cwde
inc
pop
pop
retf
inc
and
and
push
dec
in
sub
inc
retf
cmps
fdivr
cdq
repnz
dec
add
push
mov
and
je
retf
test
push
dec
in
or
retf
test
repnz
repnz
sub
pop
retf
pusha
(bad)
in
dec
pusha
stos
push
jns
xchg
adc
retf
in
retf
stos
push
adc
retf
or
inc
or
pop
jg
add
adc
rol
repz
jo
sub
inc
and
das
add
push
or
aad
mov
mov
inc
mov
lea
or
das
sbb
xor
xor
sbb
mov
and
cmp
or
or
js
cmp
mov
inc
add
pop
cli
push
push
cld
sub
push
je
sbb
ja
dec
cdq
dec
add
stos
mov
je
je
inc
jg
sub
and
fstp
dec
sub
mov
xlat
inc
fcomi
push
inc
and
xchg
out
or
pop
pop
das
pusha
imul
inc
fdivp
xchg
or
pusha
call
jg
fmulp
fdivr
mov
fnstsw
sahf
jbe
xchg
out
jbe
and
or
or
shl
loopne
call
jmp
dec
adc
fisttp
jge
iret
adc
inc
or
push
popa
outs
das
fucomip
sbb
mov
mov
and
lds
or
loope
add
add
pop
leave
adc
pop
sub
cmps
add
dec
add
test
pop
push
or
adc
pop
sar
cmp
je
cmp
jne
icebp
sub
cmp
icebp
cmp
retf
sbb
cmp
or
sub
punpckhdq
shl
dec
cmp
add
xor
add
or
test
sbb
or
xor
je
jl
jmp
dec
loope
pop
pop
dec
ins
(bad)
sbb
xor
inc
das
test
je
sub
loopne
mov
adc
add
dec
ret
jmp
adc
sub
pop
xor
pop
sbb
inc
das
adc
test
cs
mov
(bad)
je
add
sti
or
je
sub
pop
(bad)
sbb
or
fstp
jecxz
inc
fadd
inc
outs
pusha
int
dec
popa
adc
dec
add
dec
pop
inc
pop
outs
or
xor
inc
pop
iret
shl
fcomip
dec
dec
add
adc
fimul
int3
xor
fadd
xor
cdq
ret
pop
inc
inc
aaa
xchg
ret
popa
sbb
mov
mov
ins
lock
and
mov
pop
call
imul
or
mov
pop
add
or
loope
loop
hlt
jl
das
or
ja
rcr
adc
adc
sub
js
inc
(bad)
retf
ret
jnp
push
clc
mov
mov
adc
mov
fwait
mov
scas
xor
and
mov
nop
dec
(bad)
or
adc
inc
sub
xor
or
aam
dec
jl
out
mov
dec
(bad)
pop
mov
jne
js
adc
jmp
les
add
retf
mov
adc
adc
dec
pop
mov
clc
or
adc
push
fist
cmp
lea
aas
nop
add
pop
add
stos
xchg
or
adc
pop
ficom
jmp
cmp
inc
cmps
ins
lock
mov
push
sbb
jne
mov
cmp
test
inc
inc
imul
inc
fisttp
(bad)
jne
push
sbb
(bad)
(bad)
xchg
les
sub
sbb
pusha
adc
lock
mov
pushf
mov
pop
and
add
lahf
inc
lock
xor
add
daa
mov
push
xor
and
and
in
ins
dec
int3
mov
cmp
dec
js
xor
dec
iret
cmp
lfs
mov
nop
pop
and
push
jo
inc
cmp
jl
cmp
nop
pop
or
or
dec
test
jl
inc
test
fimul
or
pop
push
test
ror
and
adc
add
cmp
push
dec
jo
jg
loopne
add
xchg
pushf
pusha
adc
dec
mov
xor
or
hlt
sbb
not
test
loopne
cli
inc
add
ret
mov
push
iret
sub
jno
adc
xor
dec
pop
data16
stos
inc
sbb
push
outs
jmp
fadd
stos
movs
mov
inc
test
mov
sar
push
rol
rol
adc
add
in
sbb
mov
or
pop
ret
and
cs
add
sbb
jmp
mov
adc
ja
jne
mov
push
lods
mov
rol
dec
aaa
rol
adc
test
jl
mov
sub
pop
inc
test
dec
mov
xchg
shr
push
stos
jmp
mov
or
inc
sbb
in
outs
or
mov
sbb
or
fcomp
pop
movs
imul
dec
mov
xchg
jmp
jo
js
ret
jge
cmp
add
ret
or
xor
sub
push
adc
xchg
pop
xlat
or
rol
call
pop
in
in
neg
pop
push
dec
adc
cmp
cmps
add
sub
mov
jge
xchg
mov
mov
pop
add
mov
dec
adc
(bad)
adc
sub
mov
adc
stc
add
cmp
mov
sub
adc
es
lock
popa
dec
hlt
cwde
inc
(bad)
mov
sub
(bad)
popf
jae
sbb
pushf
je
jle
sub
mov
xchg
cmovbe
or
movs
add
adc
and
(bad)
aas
pop
dec
clc
and
jg
je
fmul
xor
jbe
push
add
pop
dec
je
gs
nop
xchg
lock
inc
dec
mov
push
lahf
les
sbb
xor
xor
sbb
je
mov
ins
jecxz
aaa
fbstp
pop
ret
dec
adc
jg
push
addr16
push
ja
push
mov
pop
je
push
call
sbb
adc
hlt
dec
rcr
jo
or
and
jne
(bad)
push
ficomp
dec
cmps
fsub
mov
lahf
bound
adc
test
mul
jno
pop
rol
sub
ins
add
xchg
pop
jg
inc
mov
ror
add
clc
xor
clc
popf
push
pop
gs
pop
adc
int
lds
rcr
scas
mov
dec
cmp
jl
ss
leave
push
imul
mov
imul
ret
sub
push
sub
mov
add
outs
sub
or
inc
dec
xor
push
aaa
int
dec
jl
push
sub
daa
push
pop
js
inc
fs
mov
sbb
push
movs
push
pop
or
adc
jnp
jne
add
in
xor
fmul
mov
inc
fsubr
(bad)
sub
sub
or
(bad)
jnp
mov
(bad)
mov
inc
jp
sbb
daa
outs
(bad)
lock
inc
jae
mov
inc
aas
lock
dec
jne
in
sbb
test
loop
adc
(bad)
out
clc
scas
les
test
pop
rcr
jne
mov
add
jne
mov
cmps
loopne
loopne
sbb
btr
(bad)
mov
sub
sub
retf
and
rol
xor
pop
js
add
pop
popf
push
xor
add
arpl
loopne
sar
hlt
or
pusha
ja
fcomp
mov
mov
pop
pop
clc
mov
inc
add
pop
push
dec
mov
cmp
xor
call
adc
jl
push
std
jmp
push
adc
mov
adc
in
xor
ret
(bad)
sub
jnp
xchg
jl
jne
imul
adc
and
sub
mov
ds
popa
fs
pop
adc
arpl
push
jb
pop
jl
jae
cmps
and
dec
inc
jmp
jge
or
adc
dec
fcomp
mov
cmp
mov
jge
(bad)
data16
bound
adc
mov
or
out
sbb
loop
bound
push
mov
pop
mov
cli
and
and
mov
jmp
sti
mov
xor
add
fadd
int3
sub
cmp
rol
push
adc
lea
pop
imul
sti
shl
leave
ret
add
mov
movs
cmp
pop
dec
in
push
loopne
xchg
je
cmp
sti
mov
adc
cwde
xor
jmp
mov
cmp
jle
sbb
clc
dec
mov
arpl
cmp
add
iret
mov
mov
ficom
jmp
shr
jno
cmp
gs
nop
pop
cwde
mov
inc
aam
inc
sti
xchg
ror
pop
jbe
mov
mov
nop
xchg
cmp
je
(bad)
and
rcr
fmul
cli
retf
fsub
mov
pop
pop
das
rol
push
xchg
mov
push
aaa
mov
(bad)
ja
mov
add
and
add
shl
iret
xlat
sti
popa
ins
mov
or
or
pop
arpl
inc
sar
sub
sub
inc
adc
sbb
push
sbb
out
sbb
jle
test
cld
mov
push
inc
scas
jmp
push
sub
adc
or
das
out
jecxz
inc
(bad)
in
xchg
or
add
lea
xor
mov
inc
test
adc
rcr
inc
fiadd
gs
sub
daa
cmps
inc
mov
dec
add
icebp
cmp
jne
sbb
fstp
in
inc
ja
sub
push
lea
push
call
dec
mov
add
jne
fdiv
scas
dec
jbe
cld
xor
je
in
pop
pop
inc
or
scas
cwde
mov
dec
inc
jne
scas
xor
adc
jg
bound
dec
xor
push
jne
push
inc
pusha
pop
pop
retf
inc
cmp
mov
add
jne
xor
test
pop
lods
or
fs
dec
int3
je
jp
inc
int
inc
out
fcom
inc
sahf
sbb
shl
xor
push
inc
jne
push
sbb
cmp
sub
rol
jmp
jbe
test
xor
add
bound
cmps
loope
fsubr
jl
inc
jae
retf
lock
ja
add
hlt
push
in
data16
pop
pop
sbb
xchg
xlat
ror
loopne
inc
ja
mov
dec
hlt
lds
pop
jnp
push
sbb
in
enter
xor
pop
ins
loopne
add
sub
push
inc
push
das
and
push
dec
pop
(bad)
rcl
or
push
add
dec
mov
scas
loope
add
lods
xchg
dec
mov
inc
xchg
hlt
jmp
mov
push
cs
and
inc
icebp
gs
or
(bad)
daa
pop
jns
sub
fisttp
aaa
cmp
loop
cmp
add
mov
inc
cmp
or
pop
mov
jmp
sub
or
fisubr
loop
or
pop
push
mov
add
inc
sbb
aad
adc
or
mov
lock
ret
xchg
inc
fisttp
lea
pop
dec
mov
push
pop
(bad)
ins
or
into
sbb
add
xor
mov
adc
jmp
xchg
les
shl
ficom
push
inc
mov
and
and
xchg
mov
add
cmp
outs
inc
sub
lock
or
jecxz
or
ror
inc
cmps
adc
adc
dec
loope
add
cmps
(bad)
sbb
clc
mov
fbstp
add
pop
adc
out
mov
mov
mov
je
test
mov
add
pop
adc
inc
mov
retf
icebp
jle
mov
gs
ins
push
loop
lock
daa
mov
pop
cmp
mov
or
mov
out
pop
das
sbb
cli
fcmovb
loopne
jne
rcl
movs
sbb
mov
mov
cmp
add
mov
or
adc
or
add
(bad)
push
add
mov
xchg
mov
or
or
jns
xor
enter
fild
sub
push
push
mov
pop
add
ret
daa
fst
pop
out
pop
cld
mov
pushf
mov
add
add
mov
sub
push
adc
and
je
xor
icebp
nop
popa
pop
lods
mov
xor
loop
adc
xor
mov
(bad)
fistp
adc
sub
pop
inc
and
mov
sub
outs
aas
inc
cmp
popf
dec
pusha
add
pop
inc
std
xor
mov
jmp
rol
mov
fist
xor
cld
adc
push
cld
dec
push
push
inc
push
sbb
push
mov
fdiv
push
adc
mov
pusha
and
and
pop
mov
inc
test
ror
ror
les
(bad)
pusha
push
sti
lock
pop
cmp
and
sub
or
pop
in
in
mov
jmp
mov
push
adc
adc
stos
or
sub
dec
mov
mov
push
pop
mov
ret
loopne
cmps
std
test
add
and
add
out
xchg
add
fcmovbe
leave
dec
push
jmp
and
es
sub
test
pusha
adc
jp
push
dec
inc
or
sbb
jmp
das
nop
sub
lahf
hlt
in
jmp
push
sbb
mov
lock
push
stc
fadd
xchg
repnz
dec
les
sbb
push
hlt
xlat
cwde
shl
cs
dec
enter
mov
sub
les
arpl
out
push
push
sbb
or
inc
mov
sbb
dec
mov
push
aaa
cdq
rol
call
sub
rol
push
or
fld
or
sbb
(bad)
fstp
cs
ins
sbb
jmp
jno
adc
pop
cmp
add
loopne
sub
rcr
push
fxch
inc
sub
or
shl
(bad)
adc
add
add
sti
cmp
test
mov
enter
pop
adc
and
jne
or
mov
loope
or
push
enter
mov
or
xor
shl
and
or
xchg
mov
loope
(bad)
mov
cmp
test
inc
add
xchg
loopne
add
mov
mov
pminub
mov
adc
adc
fcom
mov
js
sbb
nop
test
add
clc
popa
or
inc
xor
pop
outs
push
sbb
mov
adc
sub
fwait
jmp
cmp
xlat
sub
mul
adc
ror
add
cmps
add
add
lds
and
dec
scas
clc
sub
shl
cld
std
(bad)
(bad)
(bad)
adc
lock
sub
push
fwait
or
inc
dec
jmp
scas
inc
test
push
out
ret
xchg
mov
inc
mov
pop
sbb
fld
loope
call
ret
dec
dec
pop
push
idiv
ret
daa
cmp
aas
ins
xchg
arpl
jmp
cmp
push
inc
jmp
sbb
jg
jnp
mov
jmp
sbb
lea
xor
or
push
(bad)
call
add
ret
push
fldenv
inc
or
xchg
add
fnstenv
addr16
push
stos
sub
mov
dec
mul
or
inc
pop
mov
hlt
jmp
cmovb
cmp
sub
adc
sbb
mov
cmp
push
push
add
cmc
xor
xchg
fbld
test
mov
ret
lea
es
add
cmp
inc
add
sub
adc
add
cmp
lock
push
inc
add
je
mov
loopne
push
pusha
mov
sbb
push
cld
fisubr
push
mov
(bad)
jne
add
test
ror
fdivr
shl
pusha
xchg
add
pop
test
imul
mov
js
and
and
push
or
dec
lods
cdq
or
inc
push
or
pop
pop
mul
out
adc
and
mov
or
add
sbb
inc
or
inc
add
adc
pop
add
or
push
mov
jecxz
pop
add
push
clc
repnz
push
pop
adc
add
adc
and
loopne
jno
add
add
xchg
or
inc
or
sbb
movs
test
add
popa
inc
addr16
mov
pusha
inc
std
enter
in
fsubr
push
and
popa
and
or
fist
pusha
cmc
sbb
jne
(bad)
push
jnp
pop
dec
or
push
jne
sbb
movs
jo
fnsave
test
or
pop
jmp
ja
cmp
cld
and
fild
rol
pop
icebp
inc
sbb
jge
scas
popa
jnp
xor
add
push
mov
mov
lods
push
adc
mov
retf
sbb
loope
add
ret
ret
rcr
leave
adc
mov
adc
or
push
xor
sbb
and
in
push
pushf
out
leave
(bad)
cs
mov
add
fnsave
sub
les
loopne
loop
adc
shl
sbb
jne
adc
fimul
or
dec
repz
fimul
retf
adc
js
adc
rol
pop
add
dec
ret
int
or
adc
inc
je
test
adc
std
mov
push
daa
xor
cwde
lea
pushf
jle
adc
and
dec
push
cmp
mov
enter
xor
xor
dec
cmp
cmovb
icebp
xor
clc
call
pop
xchg
addr16
(bad)
je
dec
je
jmp
or
jmp
push
ins
sub
sub
sbb
inc
pusha
add
or
dec
add
ss
push
dec
add
or
inc
cmp
cmp
dec
popa
inc
adc
add
push
movs
sbb
icebp
fistp
add
ret
xor
movs
lahf
and
fild
(bad)
mov
push
pusha
push
or
inc
sbb
adc
inc
iret
sbb
out
adc
aaa
and
imul
push
xchg
add
mov
dec
test
push
jae
sbb
fs
jb
adc
scas
mov
or
je
jae
inc
bound
jmp
pop
mov
dec
je
jne
sub
sub
mov
das
in
(bad)
pop
mov
mov
cmp
je
or
sub
and
add
ja
retf
fsub
bound
mov
test
(bad)
ror
call
outs
cmc
jle
mov
in
cmp
pop
in
pop
mov
dec
test
imul
add
inc
or
or
int3
and
push
sbb
or
inc
pushf
pop
mov
(bad)
jae
or
add
xchg
sub
mov
sub
stos
or
outs
push
aas
sbb
mov
adc
add
fldenv
add
and
pop
jne
mov
add
popf
daa
jecxz
add
mov
mov
xor
sub
or
iret
push
cmp
in
jo
push
icebp
mov
add
or
adc
loopne
ret
je
and
(bad)
pushf
or
or
in
fldenv
xor
pop
cmps
mov
in
adc
dec
mov
not
mov
jns
xor
sbb
fadd
and
push
sub
jg
out
adc
push
xlat
push
xchg
or
inc
or
or
mov
rol
out
ins
test
mov
cld
add
mov
add
dec
push
cmp
adc
add
ja
daa
jmp
repz
lds
adc
adc
jns
xor
leave
nop
pop
lods
in
adc
push
push
add
lods
lods
cmp
je
push
jb
jb
setl
aas
inc
cmp
xchg
add
mov
ins
push
sub
add
push
push
xchg
popf
imul
push
mov
fdiv
push
jmp
mov
test
pop
push
push
xchg
ror
add
inc
imul
pusha
xor
xchg
ins
ins
sub
sub
pop
dec
sti
je
sbb
mov
mov
add
call
icebp
(bad)
add
pop
sub
pop
ss
dec
push
cdq
xchg
pushf
xchg
xchg
sub
dec
push
(bad)
fistp
mov
xchg
or
adc
sub
rcl
xlat
cmp
lds
mov
loope
lock
in
dec
(bad)
sub
adc
inc
add
mov
lock
push
add
and
aaa
jmp
addr16
sbb
pushf
inc
add
in
pop
cli
jg
rcr
cmp
cmp
and
sbb
jne
mov
and
cmp
rcl
call
add
inc
mov
outs
sbb
and
jl
mov
jne
adc
mov
and
lods
jl
rcl
mov
mov
and
(bad)
add
cmp
push
add
xor
push
or
repnz
(bad)
push
cmp
mov
add
jbe
jp
add
clc
ror
sub
add
loope
inc
das
hlt
mov
mov
bound
or
or
dec
cmp
cmp
int
inc
add
cmp
stc
test
cmp
aaa
mov
inc
ret
mov
iret
cmp
adc
clc
fwait
pop
inc
cmp
sbb
enter
adc
fs
push
add
and
arpl
or
adc
lea
dec
ret
mov
or
xchg
push
push
inc
cmp
mov
pushf
cmp
nop
sbb
cmp
or
adc
jnp
pusha
jne
inc
idiv
fdivr
and
dec
loop
xor
push
push
sub
les
stos
jl
in
xor
pusha
mov
aas
sbb
push
hlt
or
and
fwait
push
add
inc
push
mov
push
or
inc
push
ret
pusha
push
pop
fs
push
push
push
mov
pop
(bad)
cmp
(bad)
rol
mov
push
cdq
adc
add
dec
gs
sub
and
inc
adc
add
adc
push
loopne
xor
inc
or
and
mov
outs
push
push
pop
xor
push
ja
mov
daa
adc
sub
push
mov
jg
(bad)
shl
mov
loope
arpl
jno
repnz
inc
push
sbb
and
les
mul
inc
jle
sbb
(bad)
cmp
sbb
fnsave
and
push
push
ror
enter
aad
daa
in
adc
loopne
add
leave
xor
hlt
mov
mov
fadd
adc
mov
jl
or
xchg
pop
or
or
inc
pop
jle
jecxz
adc
mov
cdq
pop
(bad)
adc
adc
push
push
lds
pop
mov
cwde
pusha
or
sbb
jb
xchg
pop
pusha
xchg
jno
test
sub
addr16
push
xor
inc
adc
add
jge
xchg
and
scas
ss
es
push
ret
mov
ins
cld
jo
repz
xchg
pop
fadd
inc
out
add
mov
dec
aaa
jl
add
sahf
mov
js
push
xor
jo
aaa
fsubr
push
jg
(bad)
mov
push
or
test
mov
add
jl
add
and
add
movs
cs
jb
jmp
xchg
arpl
repz
push
rcl
rol
loope
mov
dec
leave
(bad)
xchg
or
jg
lock
dec
test
dec
jecxz
or
icebp
inc
cmp
je
pop
add
inc
pop
enter
inc
lds
xchg
cmp
(bad)
push
mov
mov
jmp
lea
or
or
adc
add
cmp
ins
push
push
push
lods
shl
pop
jo
push
cmp
(bad)
push
sub
jg
popf
xchg
or
test
outs
mov
adc
cmp
sbb
adc
aaa
xchg
inc
shl
js
push
pop
adc
and
and
xchg
not
popa
adc
les
and
mov
iret
shl
cld
(bad)
adc
sar
cwde
add
mul
in
pop
inc
sub
push
sub
je
or
icebp
push
(bad)
je
add
mov
or
push
daa
add
jne
inc
or
xor
xchg
(bad)
fcmovnb
jmp
xor
push
scas
clc
bound
pop
ret
push
cmp
inc
adc
or
test
sbb
xchg
call
add
push
sbb
movs
(bad)
sub
dec
or
and
aas
adc
xchg
xchg
push
cmps
dec
in
dec
lahf
in
add
xor
push
mov
add
pop
dec
push
rcr
jmp
jo
jmp
aaa
mov
inc
jo
mov
pop
and
loopne
add
add
test
dec
dec
add
adc
or
push
add
call
or
rcl
push
sbb
mov
fdivrp
ror
ins
xlat
inc
add
adc
mov
jns
xchg
or
pop
pop
test
test
inc
or
inc
push
or
add
pop
call
dec
fisubr
jb
or
dec
adc
dec
sbb
mov
fcomp
and
pop
push
cmp
mov
mov
pop
jmp
xor
or
xchg
in
inc
jp
movs
(bad)
movs
xchg
mov
dec
pop
xchg
cmc
fild
daa
push
xlat
dec
mov
jnp
cmp
enter
cmp
xor
sbb
and
mov
mov
sar
dec
(bad)
push
or
xor
push
add
js
ds
aam
add
or
xchg
fsubr
or
xor
mov
aam
add
lods
sub
cld
and
mov
lock
push
lea
lea
xor
mov
retf
mov
or
fsub
aaa
and
pop
jb
inc
inc
das
adc
xchg
dec
xor
and
or
das
adc
fs
add
sub
ret
scas
add
pop
push
clc
out
sub
mov
dec
pop
push
mov
xchg
fucomi
cmp
je
add
rol
adc
adc
int3
lods
rcl
ror
sbb
jmp
inc
test
adc
int3
ror
push
mov
push
mov
jl
outs
add
sub
mov
adc
out
retf
xor
xchg
add
and
cmovp
push
push
sbb
xor
pop
ins
enter
jg
sub
push
pop
out
push
push
cmp
fadd
cld
xor
mov
cdq
div
push
repz
mov
inc
jge
mov
cmp
jnp
sahf
aam
adc
mov
mov
dec
cmp
pop
lds
ret
or
push
cmp
test
mov
sub
movs
xor
movs
pop
push
xor
js
sub
rcl
xor
unpcklps
sub
fwait
or
add
mov
addr16
pop
(bad)
mov
cmp
and
add
mov
inc
sub
push
dec
stc
outs
mov
or
push
ins
iret
mov
enter
mov
pop
dec
lods
add
mov
xchg
inc
inc
push
daa
js
(bad)
dec
or
inc
cmp
mov
mov
inc
(bad)
popa
ins
movs
test
cmp
or
adc
sbb
xlat
inc
add
les
pop
push
sbb
xor
pop
or
or
jne
sbb
jns
mov
sbb
or
fidiv
rcl
mov
pop
mov
jbe
aas
push
push
inc
repnz
jne
pop
sub
stos
call
adc
sub
sahf
cmp
out
or
pusha
inc
mov
sbb
xchg
pop
ret
in
sub
add
sbb
das
pusha
mov
mov
movs
jnp
test
aam
popa
ja
ins
push
inc
sub
jecxz
add
mov
sbb
pusha
push
push
dec
bound
or
push
(bad)
int3
(bad)
sbb
pop
or
sbb
inc
cmps
adc
inc
push
or
xor
retf
jbe
mov
push
adc
js
or
mov
call
mov
sbb
lea
fdivr
xchg
je
out
test
imul
dec
sub
mov
test
popf
add
add
ins
sbb
pop
loopne
mov
aad
xchg
jp
jg
int3
push
mov
mov
xchg
aam
pop
jb
ret
pusha
lds
add
loopne
sub
sub
add
add
(bad)
popa
sub
in
test
(bad)
pop
pop
jb
add
hlt
rol
add
outs
stos
xchg
sub
jge
pop
push
pop
mov
cdq
add
mov
je
je
ins
sub
mul
push
and
jo
push
ss
cmps
pop
mov
adc
in
sbb
rcr
sbb
mov
adc
shr
cwde
dec
ins
aas
ror
das
jnp
push
inc
mov
leave
inc
js
mov
fisttp
pop
and
add
jno
lods
jecxz
mov
inc
xchg
dec
and
(bad)
clc
adc
adc
add
push
mov
add
adc
add
adc
popa
inc
inc
dec
(bad)
and
ins
mov
inc
popa
cld
or
cdq
inc
cmp
mov
addr16
mov
out
call
out
hlt
mov
repnz
push
sub
cmc
add
push
adc
mov
adc
xor
add
shl
add
inc
or
test
in
mov
shl
mov
mov
fstp
mov
das
ins
fs
xor
mov
mov
jmp
add
or
mov
stos
inc
cmp
cmp
aas
or
cwde
ret
pop
mov
js
or
add
ss
sub
outs
test
sub
(bad)
pop
add
clc
sub
or
xor
cli
and
(bad)
ss
pop
sti
jge
ds
xor
aaa
or
jmp
cmps
jecxz
push
cmp
sbb
cmp
cmp
xor
idiv
stc
div
in
retf
call
call
fcom
hlt
add
mov
imul
sti
push
push
xor
cmp
daa
outs
popa
cmp
mov
outs
jo
and
test
sbb
aas
clc
adc
stc
inc
jmp
pop
inc
ja
or
inc
inc
xor
fsubr
sbb
xor
xor
and
js
das
pusha
inc
scas
(bad)
mov
movhps
or
sub
sbb
dec
xlat
jo
pop
sub
xor
add
(bad)
hlt
or
mov
sbb
adc
ret
adc
aad
sub
pop
test
xor
sbb
jmp
dec
dec
dec
jl
mov
cld
sbb
add
dec
pusha
jo
push
or
js
cld
cld
pop
add
ins
out
adc
cs
rcr
fcomp
or
pop
dec
ss
and
mov
ror
jb
or
push
cdq
movs
adc
or
push
jne
sub
xor
nop
and
push
les
lods
sub
pusha
cmp
push
pop
sbb
mov
push
pop
add
sbb
fbld
(bad)
mov
sbb
add
pop
cs
pop
inc
xor
xlat
sub
(bad)
mov
aam
sub
call
push
das
ins
jl
(bad)
leave
inc
add
jmp
xchg
add
xchg
ror
or
fiadd
jo
or
out
frstor
adc
xchg
dec
inc
xchg
push
jl
xchg
mov
addr16
dec
cmp
mov
sub
(bad)
ins
jecxz
dec
pop
push
or
pop
adc
adc
add
push
push
jo
xor
and
or
cdq
and
sub
add
inc
jo
jmp
cmps
aam
fistp
or
inc
sub
inc
pop
mov
adc
and
rol
(bad)
sub
pop
xor
sbb
cmp
ret
mov
jo
sub
lea
pop
push
xchg
adc
push
hlt
inc
pusha
movs
arpl
pop
fbstp
adc
ret
icebp
mov
push
push
popa
adc
fnstsw
sbb
mov
xor
(bad)
xchg
and
cmovnp
or
adc
jmp
mov
pop
inc
(bad)
daa
in
mov
sub
fbstp
aas
mov
sub
jne
cmp
bound
cmp
cmp
pop
mov
xor
mov
sbb
push
pop
pop
test
jne
add
sbb
retf
and
rcr
sbb
cmp
fwait
mov
sbb
dec
mov
dec
adc
pop
add
xchg
pop
add
das
pop
pop
pop
mov
sbb
jbe
sbb
cmp
mov
test
push
push
adc
push
xor
imul
sbb
mov
je
jmp
adc
jecxz
out
adc
(bad)
push
adc
push
pop
je
aaa
sbb
(bad)
mov
jns
and
into
call
jo
add
jnp
fadd
push
push
dec
push
xchg
data16
cwde
popa
push
inc
mov
add
stos
pop
push
inc
adc
push
sub
mov
bound
nop
jp
or
pop
mov
mov
pop
enter
popa
mov
inc
add
sub
or
leave
call
(bad)
xor
int
in
adc
invd
or
je
adc
push
je
push
push
cdq
out
fisttp
add
xor
pop
inc
pop
sbb
inc
inc
loopne
stos
jle
add
pop
sub
das
dec
mov
cmp
xchg
mov
je
sbb
xor
adc
push
push
nop
sub
leave
nop
in
and
adc
pop
push
cmp
xchg
mov
inc
cmp
adc
loope
loope
mov
sbb
or
pop
mov
push
xchg
out
(bad)
movs
mov
push
in
mov
in
pushf
sub
or
sbb
adc
rcl
clc
xchg
push
scas
jno
retf
clc
mov
les
mov
jle
jnp
loope
push
pavgb
mov
clc
vmwrite
adc
or
adc
in
iret
mov
or
ror
rcl
adc
movs
mov
add
(bad)
adc
cdq
and
xor
dec
jb
add
sahf
add
sbb
inc
dec
xchg
shl
or
jmp
adc
push
enter
add
add
jecxz
cmp
and
imul
inc
or
fnstenv
repz
xor
add
rcr
or
iret
dec
je
inc
je
rol
clc
cmp
cmps
sub
lock
pop
and
je
adc
add
sti
or
xchg
or
jle
aam
shl
mov
je
imul
test
pop
and
or
pop
dec
(bad)
add
imul
or
ja
mov
and
add
adc
test
mov
xchg
pop
and
lock
mov
or
fld
rcr
pop
and
inc
or
push
mov
jp
pop
sbb
out
and
sbb
mov
repnz
(bad)
aad
sti
pop
repz
hlt
push
mov
xor
bound
push
dec
jmp
push
pop
sub
xor
and
sub
add
loope
push
and
shl
aam
and
les
cmps
je
(bad)
add
imul
lods
jmp
xor
adc
pusha
adc
inc
add
ret
in
mov
mov
ins
arpl
push
movs
fist
dec
leave
loope
adc
xor
sub
cmp
fsubr
add
adc
cmp
push
retf
inc
mov
push
dec
test
mov
outs
outs
dec
pop
jo
jo
xor
jae
mov
push
ret
push
sub
add
(bad)
add
push
js
push
scas
add
push
inc
add
adc
dec
out
stos
push
shl
push
add
ss
add
and
and
dec
lahf
data16
sub
je
repnz
mov
retf
nop
stc
cld
add
shl
lods
xchg
add
jp
push
push
push
cld
inc
mov
ss
int3
push
pop
mov
mov
push
sar
mov
ins
mov
dec
push
mov
push
push
push
pop
push
in
es
mov
inc
push
lods
push
test
push
cmp
dec
mov
inc
adc
cmp
inc
mov
inc
data16
push
dec
push
pushf
ds
repz
push
test
and
ds
dec
cmp
es
ds
outs
mov
push
mov
shr
in
xchg
test
out
push
test
push
cwde
xor
add
mov
scas
adc
pushf
or
xchg
jae
pusha
adc
sbb
mov
std
cmps
inc
rcl
addr16
and
jge
push
mov
dec
mov
mov
sub
add
add
sbb
jmp
sub
in
repnz
into
sbb
add
add
mov
xchg
mov
add
and
das
mov
xchg
pop
stc
daa
mov
add
xor
cmps
mov
add
xor
add
das
pop
mov
add
sub
inc
xor
repnz
add
xor
das
add
loopne
sub
mov
mov
into
rdpmc
add
xor
out
xor
add
add
ss
add
add
dec
add
jbe
repnz
add
add
shr
jo
cmp
dec
outs
call
jbe
clc
cmovb
or
push
mov
lods
leave
and
sti
add
jo
rcl
xor
dec
add
cs
lahf
mov
lahf
adc
gs
dec
pop
adc
gs
je
imul
mov
shl
bound
push
dec
sar
and
inc
into
call
test
pop
call
dec
push
adc
lods
or
nop
cmp
aad
push
or
nop
sbb
(bad)
sar
mov
and
les
in
xchg
and
dec
pop
inc
enter
fst
and
adc
push
adc
add
xchg
out
(bad)
adc
(bad)
(bad)
cwde
call
xchg
in
bound
sub
jecxz
inc
pop
sbb
push
js
pop
add
xor
jg
rcr
inc
jo
mov
repz
repnz
imul
loop
adc
sti
xchg
push
mov
cpuid
sbb
adc
mov
adc
cmp
inc
cmp
inc
adc
nop
sbb
dec
push
jl
rcr
les
jo
xchg
sbb
cmp
push
dec
xor
pushf
xor
push
les
in
sbb
test
inc
repnz
adc
pusha
and
leave
sbb
pop
sbb
xchg
push
fiadd
xchg
je
fadd
or
out
cmp
or
jo
or
in
inc
int3
pop
xchg
nop
popa
mov
and
mov
cmp
xchg
ds
loopne
mov
fs
retf
or
popa
ins
nop
pusha
pop
push
fsub
scas
or
into
jge
jnp
add
push
push
xor
outs
add
cmp
sbb
push
rol
inc
clc
or
jb
call
jb
cmp
xor
push
outs
pusha
and
sub
push
mov
ins
sbb
add
push
mov
mov
mov
js
pop
mov
pusha
aam
or
cs
test
push
jbe
dec
jle
neg
ja
push
test
add
push
in
ret
cmps
dec
adc
(bad)
clc
inc
and
dec
jg
sub
bound
ds
or
mov
test
imul
sahf
dec
pusha
and
lahf
add
or
outs
je
push
pop
shr
ins
add
xchg
fadd
and
and
dec
push
dec
jo
push
add
mov
inc
lock
test
xchg
jb
cld
cmp
cdq
popf
or
cmp
mov
xchg
cmp
ret
loopne
out
mov
sahf
out
push
enter
fs
out
cmc
inc
nop
fiadd
call
inc
sbb
inc
jnp
or
pop
ds
xadd
paddusb
divps
syscall
add
mov
xchg
aas
sysret
add
inc
add
push
pop
mov
or
inc
(bad)
lods
push
push
add
in
cwde
push
sbb
or
or
movs
ja
fs
and
dec
push
add
loope
inc
xor
add
inc
js
cs
sbb
xor
popa
jb
add
mov
jne
adc
push
addr16
adc
retf
or
push
sbb
dec
mov
rcl
inc
(bad)
push
ds
add
adc
add
sbb
pop
adc
xor
pop
adc
bound
cwde
add
add
enter
and
mov
fistp
or
sbb
adc
adc
in
sbb
or
arpl
and
lock
dec
adc
dec
push
pop
and
pop
clc
sub
push
das
add
dec
(bad)
sbb
test
adc
jmp
dec
das
or
loope
add
xor
or
sub
das
sub
push
ins
outs
jb
rol
sbb
in
pushf
cdq
or
sub
lods
add
mov
(bad)
pop
sbb
and
dec
sbb
jae
push
adc
test
adc
lock
and
xor
ror
loopne
add
stc
adc
add
das
dec
adc
and
inc
shl
dec
inc
push
sbb
add
push
imul
mov
adc
daa
sub
lods
and
das
inc
add
cmps
les
mov
int
shl
adc
shl
rol
inc
js
pop
jae
dec
popa
jo
add
mov
add
or
shl
dec
sysret
ins
or
xor
mov
dec
inc
lahf
mov
inc
enter
inc
lahf
xor
sub
outs
imul
push
push
xor
sar
push
cwde
push
movs
mov
adc
test
xor
or
and
and
bound
rcl
adc
(bad)
movs
adc
pop
bound
iret
in
test
pop
xor
sbb
add
sub
inc
xchg
push
and
test
popa
dec
sahf
in
shl
in
test
push
pop
jno
dec
push
int
cmovge
jecxz
inc
in
js
push
arpl
cs
add
mov
push
enter
jo
cld
loope
mov
hlt
jo
jo
cmp
pop
push
push
arpl
adc
imul
fucomi
test
int3
das
sahf
or
rcr
inc
xchg
in
cmp
sub
add
cmps
dec
jno
jo
ss
inc
xchg
push
mov
fs
loope
jbe
dec
sbb
pop
xchg
adc
out
int
enter
cwde
dec
pop
inc
ret
mov
mov
mov
into
je
dec
dec
add
jl
xchg
movs
inc
lock
(bad)
and
test
xchg
mov
sbb
push
cwde
stos
aas
sbb
add
adc
dec
(bad)
fucomi
les
cmp
pop
das
jp
das
dec
popf
or
push
mov
inc
inc
dec
jne
pop
das
cld
sbb
pop
(bad)
pop
ficom
mov
aas
add
dec
aas
sbb
inc
push
xchg
jbe
imul
mov
inc
mov
outs
xchg
mov
mov
lea
xchg
arpl
dec
das
mov
int
hlt
das
add
fmul
dec
aam
dec
(bad)
xor
and
iret
push
pop
mov
cmp
sbb
mov
mov
xchg
add
iret
xor
outs
mov
adc
pusha
das
outs
dec
iret
enter
movs
cmp
adc
xchg
xlat
mov
inc
and
in
cdq
xchg
pushf
xchg
push
imul
add
inc
in
ret
sbb
out
push
fcmovnu
dec
and
xchg
mov
shr
add
pop
cmp
(bad)
out
jg
ins
adc
push
mov
ins
pop
repnz
xlat
fimul
ficom
jmp
sbb
mov
pop
enter
cmp
jg
mov
add
mov
pusha
adc
shr
push
jno
pop
or
aad
push
daa
stos
cmps
sbb
push
push
ret
popw
movs
das
mov
cmps
cmp
and
(bad)
(bad)
fsub
or
int3
push
sbb
push
imul
sbb
ret
or
shl
push
iret
jo
mov
mov
sbb
push
pop
clc
iret
xchg
das
add
and
mov
xor
lock
bound
jae
test
adc
push
in
mov
inc
lahf
push
ret
and
(bad)
pop
pop
jl
cwde
or
xchg
push
aas
xchg
fild
outs
inc
mov
jo
fisttp
pop
sub
and
inc
pop
out
sbb
or
dec
mov
xchg
stos
jecxz
rol
and
and
jne
sbb
and
les
les
mov
ret
push
mov
jl
push
push
jae
(bad)
xchg
add
push
mov
js
loope
dec
jmp
cmp
emms
pop
pop
das
hlt
pop
je
mov
or
pop
imul
inc
jo
and
jmp
mov
cmp
dec
ja
sar
push
sub
inc
add
test
adc
pop
sahf
add
call
cli
mov
pop
pusha
pop
push
add
xchg
pop
add
adc
mov
or
pop
mov
gs
rol
shl
add
out
jle
ror
push
ss
sahf
jb
int
push
ds
test
jo
data16
jo
outs
xchg
sbb
clc
popf
cs
xor
aad
xchg
loopne
push
add
pop
add
nop
add
adc
nop
lods
dec
add
and
add
mov
jae
outs
add
or
inc
ss
arpl
pop
adc
sub
ja
pop
push
ficom
and
inc
shr
adc
or
adc
inc
clc
fsubr
sub
or
inc
imul
inc
aaa
loopne
pop
cmps
fild
inc
fimul
or
add
mov
or
mov
hlt
mov
pop
adc
aam
add
jmp
mov
in
mov
add
add
enter
inc
pop
mov
ins
sbb
ins
or
imul
push
sar
xor
out
pop
pop
add
pop
bound
mov
mov
ficom
adc
and
dec
push
dec
and
inc
aaa
bound
shr
push
sub
inc
mov
push
mov
inc
xor
bound
das
pop
push
outs
out
movs
mov
pop
pop
add
add
push
pushf
xchg
fwait
test
add
daa
and
lahf
fidivr
arpl
xor
in
fld
outs
push
dec
je
aaa
pop
or
or
xlat
xlat
push
(bad)
or
das
add
push
arpl
sub
push
or
xchg
or
cvttps2pi
jno
loop
fnstcw
loope
adc
mov
in
push
mov
adc
movs
loopne
aad
into
or
push
add
inc
sbb
mov
rol
pop
add
sub
ror
fisttp
inc
bound
mov
mov
mov
inc
cmp
add
gs
sub
or
sub
mov
push
arpl
or
ja
or
inc
sbb
and
pop
rol
lods
or
outs
and
mov
and
cmp
pop
jg
inc
push
xlat
sub
scas
clc
pop
xchg
cpuid
leave
mov
jo
leave
push
add
shl
arpl
nop
add
pop
mov
add
pop
pop
lods
mov
in
sbb
push
addr16
sub
in
aaa
shl
fwait
dec
sbb
push
addr16
add
aaa
adc
xchg
aaa
es
inc
mov
das
(bad)
mov
push
inc
mov
loopne
dec
inc
lock
push
call
push
inc
xchg
sub
sub
mov
es
das
ja
push
inc
(bad)
iret
adc
pop
test
mov
ins
jl
inc
adc
gs
and
mov
inc
adc
imul
add
mov
sar
sub
push
add
pop
or
inc
pop
jns
hlt
mov
push
or
pop
imul
adc
mov
lds
or
inc
jno
mov
imul
ins
icebp
or
es
das
ins
push
and
addr16
dec
inc
inc
pop
inc
adc
xor
mov
je
hlt
imul
std
jg
and
stos
push
leave
add
dec
mov
sub
ins
inc
enter
mov
cmp
out
xlat
pavgb
and
ins
hlt
adc
or
cld
jne
aam
xchg
push
sbb
inc
adc
mov
gs
mov
ins
xlat
ret
es
pop
pushf
rsm
xor
das
push
int
and
pop
pushf
lds
ins
pop
or
movs
xchg
ins
push
popa
cmp
mov
mov
xor
adc
jmp
lock
ja
mov
arpl
add
shl
sub
test
clc
ins
jo
movs
mov
cld
ins
dec
inc
cld
ins
adc
sar
je
out
or
shr
and
and
bound
(bad)
lock
pop
das
outs
jo
cmp
adc
inc
out
call
ror
cmp
jo
clc
jo
adc
or
shr
repz
mov
jo
jno
cmp
push
loopne
rol
add
sub
ins
cmp
cmp
movs
aam
adc
push
inc
repz
neg
adc
adc
es
das
mov
es
imul
cmp
adc
div
cmps
jecxz
jb
jae
pop
adc
rol
in
jae
mov
push
and
jae
adc
jns
mov
mov
jo
or
js
jae
pusha
mov
push
je
jne
mul
lea
(bad)
mov
addr16
call
mov
addr16
xchg
sbb
sub
dec
xchg
add
push
mov
add
loope
or
add
and
pop
imul
add
mov
std
(bad)
adc
inc
je
gs
jbe
pop
outs
cmp
push
push
inc
ja
mov
fwait
das
jecxz
xor
popa
pop
mov
inc
jnp
mov
es
mov
js
fimul
xchg
arpl
adc
xor
or
or
or
sbb
lds
ins
xchg
imul
sub
mov
fs
jb
jnp
mov
xor
xor
xor
xchg
mov
mov
arpl
shl
arpl
jmp
adc
mov
mov
test
pop
and
outs
setb
sbb
dec
hlt
ret
mov
retf
pushf
mov
paddd
xchg
dec
inc
sahf
pushf
xlat
and
xchg
out
push
jo
(bad)
pop
repz
add
jl
cmp
xchg
jp
jge
add
or
add
inc
cmp
je
jo
mov
add
or
(bad)
loop
popf
jno
test
test
fsub
loop
jecxz
jo
fist
cmp
pusha
cmp
adc
push
loop
or
inc
or
shl
and
push
push
sahf
int3
dec
add
xor
inc
fs
pop
dec
mov
add
loope
add
add
add
mov
jo
jecxz
push
add
add
test
and
or
push
and
out
ins
repz
or
js
fbld
gs
jb
xor
cld
mov
iret
or
cmp
jae
inc
test
jns
push
or
loopne
iret
and
das
inc
sbb
pop
dec
mov
xchg
dec
jb
xchg
test
cmp
adc
jae
pop
mov
pop
or
mov
add
loopne
xor
ins
mov
sub
das
xchg
push
cmps
push
jne
xor
sbb
rcr
mov
pop
cmps
push
shl
push
pop
push
sub
call
inc
dec
js
and
fimul
cvttps2pi
push
xchg
xchg
jmp
call
sbb
bound
cmp
mov
jl
pusha
pop
inc
jl
push
or
leave
inc
and
or
inc
mov
or
adc
push
mov
push
ror
fiadd
fidiv
call
push
loopne
push
mov
push
out
das
jl
mov
shr
sub
xlat
push
and
enter
pop
dec
and
jo
ins
fild
push
rcl
pop
ins
pop
inc
lahf
es
test
jp
in
sub
call
dec
imul
mov
pushf
jns
push
sub
cwde
mov
jnp
fimul
push
mov
push
mov
push
xchg
jge
xchg
cld
push
or
mov
xor
add
and
pop
or
cmp
or
jo
popa
inc
ss
lds
adc
dec
clc
sahf
add
dec
jbe
jg
push
or
pop
add
sahf
pushf
int3
fisubr
adc
or
inc
pop
retf
repz
arpl
je
ud0
je
popa
jo
jns
fadd
inc
ss
nop
pusha
push
mov
dec
add
mov
sbb
fld
sub
lock
and
cmp
jno
adc
pop
gs
inc
cmp
inc
push
push
aam
push
sbb
adc
add
push
loope
cmp
pop
add
retf
shl
mov
hlt
pop
push
ret
pop
cwde
pop
dec
dec
add
xchg
mov
retf
pop
push
mov
push
adc
leave
inc
add
mov
inc
cmp
xchg
inc
inc
inc
jae
mov
call
xor
stos
xor
loope
call
or
cs
pop
inc
mov
xor
es
(bad)
xlat
sub
jo
inc
mov
loop
mov
and
push
outs
cs
icebp
add
xor
(bad)
sbb
in
xchg
shl
je
mov
mov
pop
cmp
mov
(bad)
imul
sbb
xchg
jnp
add
jne
jo
mov
add
pop
adc
inc
mov
inc
add
test
xor
cmp
add
sbb
jne
or
out
inc
dec
add
xor
cmp
(bad)
int
ror
push
test
xchg
push
and
mov
sbb
and
inc
pop
sub
pop
jle
int3
mov
or
fadd
jo
mov
inc
pop
inc
jecxz
inc
jge
retf
loopne
sbb
mov
add
in
jb
inc
xor
gs
fisubr
push
or
xor
mov
aad
jns
mov
jb
mov
inc
push
mov
leave
add
mov
ds
add
ins
or
or
mov
and
fadd
adc
mov
inc
lods
jnp
push
bound
dec
mov
mov
adc
(bad)
xchg
xchg
cmps
inc
sub
(bad)
pop
cmp
inc
add
out
add
mov
stos
je
jb
test
les
imul
test
jl
mov
add
xlat
js
nop
mov
mov
cmp
fiadd
aas
add
test
cmp
les
scas
sbb
sbb
in
adc
add
mov
neg
aad
mov
push
cmps
push
pop
sub
jmp
arpl
aad
cmc
inc
add
rcr
or
push
push
xor
cmp
push
mov
call
push
mov
adc
sbb
mov
jnp
add
mov
test
add
push
adc
mov
enter
mov
outs
adc
push
hlt
addr16
nop
imul
scas
aas
cmc
loope
dec
inc
and
mov
mov
pop
xlat
leave
repz
inc
daa
fidiv
jmp
mov
daa
jns
rol
dec
and
loop
dec
dec
lahf
bound
push
add
and
nop
icebp
and
shl
and
lds
and
neg
xchg
aaa
add
or
add
lea
fld
pusha
xchg
lods
imul
int3
cmp
mov
push
mov
lods
sub
ss
mov
push
jo
pop
push
fcomp
and
pop
sbb
repz
dec
or
xor
push
add
xor
or
sub
cmps
and
mov
adc
outs
jo
dec
loopne
icebp
test
jbe
sub
iret
into
and
adc
movzx
cmp
add
setb
and
or
and
(bad)
and
inc
fiadd
pop
jmp
div
push
inc
pop
add
call
out
mov
xor
imul
push
mov
sbb
push
call
hlt
sahf
adc
popa
jg
and
push
rol
sub
add
or
xchg
add
enter
add
and
adc
adc
push
jp
pop
cdq
cwde
mov
adc
daa
fadd
jg
call
or
and
sbb
sub
loopne
add
add
adc
sub
call
mov
rcr
adc
imul
test
leave
mov
cs
rol
or
xchg
or
sbb
cmp
xchg
inc
add
xchg
je
inc
add
xchg
rol
add
pusha
adc
pusha
call
int3
out
sahf
aad
push
xor
ins
(bad)
adc
jae
sbb
jno
and
dec
add
movs
rcr
inc
pop
sub
sub
sahf
test
mov
dec
sub
jne
adc
test
xor
or
stos
or
lock
iret
inc
and
or
cmp
inc
clc
cmp
in
in
data16
xor
dec
ror
pop
in
pop
bound
dec
and
or
aaa
and
pusha
and
add
fisttp
add
inc
sti
fistp
add
dec
sub
add
adc
mov
add
in
in
and
or
inc
add
inc
and
out
test
pushf
cmp
inc
rcr
adc
adc
push
sub
shl
shl
pop
adc
cmp
mov
pop
mov
lock
add
ret
jle
fdiv
fcmovne
mov
lahf
sub
call
(bad)
imul
popa
xor
sub
aas
cmp
call
and
sbb
div
sub
cmp
cmp
test
jne
push
loopne
adc
push
mov
sub
or
addr16
outs
adc
jnp
mov
pop
ins
bound
xor
rcl
add
or
or
fcmovb
xchg
mov
pop
mov
mov
rcr
jmp
mov
adc
scas
rol
sub
lock
std
xlat
adc
xor
xlat
add
inc
adc
pusha
mov
mov
inc
jg
sbb
pop
push
leave
ja
rcr
mov
or
fisub
mov
xchg
push
push
cdq
inc
pusha
fs
xchg
sahf
fbstp
xor
rcl
mov
inc
outs
clc
jne
loope
pop
(bad)
pop
popa
mov
imul
nop
fdiv
fsubr
cwde
dec
jmp
frstor
or
or
adc
dec
pusha
xor
mov
xor
in
fsubr
sub
xor
ficom
out
push
push
fnstcw
loopne
jne
inc
mov
shl
add
xor
ins
nop
aaa
mov
mov
push
pop
test
add
dec
or
or
add
call
das
adc
sbb
test
or
sbb
adc
sbb
cmp
fild
cmp
adc
dec
loopne
or
and
mov
in
push
push
push
or
jp
in
ins
pop
mov
jmp
pusha
mov
jg
inc
lahf
mov
test
push
in
mov
shl
ret
in
fdivr
mov
ret
push
ja
inc
add
add
xchg
push
imul
and
jno
in
jle
adc
mov
adc
imul
popa
add
add
in
or
pop
push
xchg
rcl
es
sub
pop
push
pop
sbb
or
inc
push
lea
or
xor
mov
or
add
inc
sbb
clc
jge
imul
xor
into
inc
stos
dec
xchg
mov
aam
add
or
sub
adc
stos
clc
mov
push
lea
lea
add
repz
hlt
push
femms
add
das
shl
adc
shl
mov
xchg
xor
addr16
pusha
and
cwde
jo
out
mov
adc
adc
(bad)
loope
push
and
adc
and
push
and
inc
icebp
sbb
fiadd
xchg
clc
jmp
and
adc
rol
jb
retf
inc
dec
sbb
and
push
pop
fcom
rcl
cmp
xchg
dec
push
mov
mov
ror
mov
mov
add
out
push
cmp
gs
xor
pop
test
pop
add
adc
nop
push
cwde
push
outs
mov
jnp
ss
lds
and
addr16
bound
mov
(bad)
(bad)
cmovs
push
xchg
out
xor
enter
ins
mov
and
or
dec
push
fistp
js
leave
ror
push
sar
mov
pop
cmp
jmp
ds
push
xor
mov
xor
loope
test
dec
das
ss
adc
mov
xchg
add
test
inc
dec
jne
aas
sub
clc
clc
push
and
mov
fild
inc
mov
sbb
mul
and
js
adc
push
xlat
push
pop
fistp
out
sub
inc
or
add
out
inc
add
and
fnsave
or
adc
push
and
mov
mov
dec
retf
push
outs
dec
test
rcr
sbb
push
mov
dec
adc
mov
inc
outs
or
and
popa
or
adc
jne
and
or
(bad)
or
and
xor
sub
push
stc
cli
dec
pop
push
mov
mov
inc
or
push
jecxz
mov
inc
fcmovnu
sahf
and
inc
add
adc
push
mov
js
add
mov
mov
iret
ficom
push
dec
mov
lea
fiadd
fs
push
jo
pusha
adc
outs
jg
xor
jno
in
pusha
hlt
mov
daa
mov
pop
loopne
nop
sti
loopne
aas
xchg
loopne
and
xor
pop
mov
test
add
inc
hlt
cmps
cdq
idiv
dec
popa
in
mov
cwde
add
fisub
sbb
ds
sbb
mov
mov
push
pop
jne
imul
nop
sbb
lea
(bad)
sbb
in
imul
pop
or
jecxz
(bad)
loopne
adc
and
clc
es
(bad)
jo
fmul
or
pop
sahf
mov
add
mov
pop
mov
and
(bad)
int3
add
or
adc
sub
add
push
push
dec
scas
push
aas
adc
mov
sub
pop
movs
jb
(bad)
and
or
or
xor
push
xor
mov
rcr
or
sub
add
and
mov
mov
mov
sbb
enter
xchg
ret
mov
push
sbb
pop
dec
mov
jo
or
sar
les
pop
aam
sub
test
inc
jp
imul
ins
mov
test
sbb
push
cmp
inc
cmc
clc
(bad)
fcom
fld
dec
adc
pop
hlt
and
jmp
lahf
icebp
push
arpl
sbb
hlt
inc
jle
dec
adc
sbb
(bad)
fcomp
jmp
fiadd
push
sbb
inc
mov
adc
xor
sbb
sbb
dec
out
cmp
adc
lahf
push
lea
inc
mov
lahf
fwait
jo
sub
add
cmps
add
push
inc
lods
jo
aam
add
sub
add
call
pop
xchg
add
scas
pop
hlt
(bad)
repz
cwde
or
pop
enter
inc
cmp
mov
fild
aad
ret
mov
mov
sub
lahf
adc
add
mov
ret
data16
add
sub
and
add
rol
or
retf
cmp
add
or
cwde
mov
xchg
mov
inc
pusha
dec
std
repz
sbb
movs
inc
inc
popa
dec
je
add
dec
shl
jl
adc
ret
lock
jecxz
int
sbb
inc
leave
cmp
mov
cmp
mov
jae
adc
sbb
xchg
adc
test
sbb
adc
test
daa
lods
and
mov
es
lea
cdq
jle
jg
loop
push
sbb
pop
movzx
mov
or
mov
sbb
or
ja
lods
jne
sahf
(bad)
pop
add
sbb
add
aas
mov
(bad)
and
in
fmul
into
(bad)
std
iret
ds
call
pop
sub
jl
inc
add
push
das
js
xchg
(bad)
(bad)
jle
mov
jnp
daa
mov
lods
mov
push
stos
xor
push
jl
mov
push
add
push
mov
sbb
jge
add
cmp
add
fiadd
add
jae
inc
cmp
xchg
jl
add
dec
add
sub
movs
add
ds
push
sbb
scas
sbb
add
push
xchg
adc
adc
push
movs
jle
jge
lods
jge
add
scas
inc
dec
iret
je
or
sub
mov
or
mov
push
in
mov
xchg
push
push
fmul
or
sub
(bad)
jne
push
pop
scas
cs
test
popa
sti
mov
add
or
loop
push
or
xchg
and
movntps
in
mov
pop
lea
or
dec
or
or
add
inc
and
jne
ficom
rcl
sbb
jecxz
xchg
(bad)
xor
aas
dec
add
shl
xor
test
cmp
pop
sub
aaa
push
ds
(bad)
call
adc
or
ja
test
sub
or
adc
dec
or
test
jg
adc
rcr
ret
lahf
pop
movups
inc
push
or
xchg
je
out
push
adc
adc
popf
xor
aas
push
xor
and
clc
lods
mov
push
add
sbb
push
adc
push
push
aas
pop
lea
xchg
mov
aaa
cwde
and
push
jo
rcr
shl
jl
cmp
jge
cmp
sbb
outs
clc
pop
clc
xchg
and
xor
pushf
adc
movs
popf
inc
and
sub
push
adc
movs
xchg
movs
into
mov
outs
into
arpl
xchg
lods
imul
mov
xlat
sub
dec
cmps
(bad)
andnps
push
inc
cli
jo
popa
imul
ss
dec
arpl
gs
push
xor
or
dec
(bad)
ins
pusha
add
xor
or
push
dec
out
push
ds
ret
fild
or
jnp
push
pusha
xor
loopne
or
or
fisubr
sub
out
loop
push
adc
add
popa
jbe
pop
pop
adc
pop
das
or
ret
add
imul
push
fld
sbb
aas
push
push
inc
dec
ss
mov
aaa
pop
aaa
rcl
xlat
push
or
(bad)
popa
add
or
(bad)
xor
inc
add
inc
adc
dec
dec
fisttp
adc
add
aas
inc
dec
ins
add
and
mov
jmp
stos
push
add
or
out
jne
cmp
das
sbb
imul
fmul
adc
pop
mov
adc
lock
or
outs
ins
bound
adc
inc
imul
xor
or
or
xchg
and
sahf
dec
inc
outs
arpl
xchg
inc
pusha
fstp
imul
dec
pop
push
(bad)
lods
ins
xor
popa
xchg
adc
dec
mov
add
push
or
xchg
jbe
adc
jl
adc
sbb
and
add
push
loope
add
sub
div
ins
and
mov
sbb
push
inc
outs
mov
inc
pop
fcom
xor
addr16
sub
icebp
xchg
inc
loope
dec
stos
push
fadd
xchg
lods
pop
mov
push
es
push
scas
push
push
dec
cmp
(bad)
div
mov
cmp
sbb
movs
cwde
cmp
mov
or
jge
or
mov
int3
jl
push
inc
mov
adc
push
mov
add
dec
jbe
vmread
sub
out
push
inc
ins
sti
aas
inc
punpckldq
jmp
or
lea
and
xor
sbb
vmovhlps
mov
sbb
and
aad
mov
dec
ja
mov
fdivr
jbe
push
mov
outs
repz
pop
add
jo
ss
add
sbb
fnstcw
outs
pop
in
inc
sub
mov
das
xchg
add
push
push
mov
out
inc
nop/reserved
sahf
pop
faddp
adc
push
push
hlt
and
adc
aas
punpcklbw
sbb
mov
out
sbb
pop
mov
ins
mov
xchg
mov
int
bound
adc
adc
push
ds
mov
in
repnz
adc
hlt
ds
pop
leave
sub
fdivr
shl
inc
mov
pusha
add
adc
xchg
adc
ins
adc
dec
or
add
sbb
xchg
or
cmp
or
push
push
pop
xor
dec
xchg
(bad)
adc
ret
dec
sub
rcl
sahf
pop
push
sub
popa
inc
cmp
into
xchg
sub
sub
pop
adc
inc
imul
adc
mov
cdq
xor
jo
inc
adc
imul
add
push
daa
jns
ins
rcr
sbb
ret
test
sub
aam
mov
rcl
sub
fld
pop
sub
push
leave
push
repnz
mov
in
xchg
ficomp
xor
adc
ins
mov
cmc
sbb
inc
loopne
inc
fldcw
test
mov
pop
sub
ret
idiv
adc
and
and
adc
and
sub
ret
and
sub
das
test
test
pop
pusha
sub
das
fcom
and
add
sub
das
mov
mov
adc
stos
push
adc
shl
in
xor
in
push
aaa
mov
mov
ss
mov
cmp
lock
cmp
adc
fld
push
outs
push
jae
sub
xchg
mov
sbb
addr16
adc
or
xor
xchg
fcmovb
cmp
sub
das
mov
mov
inc
(bad)
adc
inc
push
lds
mov
adc
xchg
bound
fsub
add
aad
out
ss
jo
pop
sbb
cmpxchg
int
cmp
je
shl
imul
ins
ss
aad
ins
pop
sub
aad
jbe
mov
std
and
int
and
and
mov
mov
je
pop
mov
inc
imul
sub
bound
sub
adc
ins
and
or
popa
adc
shl
or
test
and
add
shl
scas
rcl
or
fwait
mov
mov
and
lods
sub
sub
sub
xor
cmps
mov
mov
pop
ja
xchg
push
jo
cmps
repz
push
lock
add
inc
inc
loop
pop
arpl
das
cmp
sbb
add
out
inc
add
or
or
xchg
(bad)
cmp
fisttp
push
add
cmp
arpl
mov
loopne
loop
add
pusha
and
adc
jl
daa
or
xchg
push
repnz
lock
jl
dec
dec
and
inc
inc
jl
pop
sub
ja
loope
rcr
cmp
test
shl
fcomp
pop
lahf
xchg
add
cmp
(bad)
popf
ror
addr16
inc
sbb
std
dec
inc
dec
popf
mov
movs
arpl
add
inc
mov
pop
sbb
imul
mov
mov
cwde
jno
push
mov
lods
cs
add
ds
inc
ins
je
push
cmps
imul
pushf
push
in
add
add
or
outs
or
repz
and
pop
and
aas
and
and
or
or
or
enter
leave
or
fbstp
sbb
inc
imul
cmp
cmp
int
dec
mov
out
cmp
push
cwde
sub
dec
mov
cwde
sbb
enter
xchg
imul
imul
fdivr
dec
jb
dec
and
jae
jns
imul
imul
pop
xor
outs
mov
imul
xor
xchg
adc
xlat
jl
(bad)
xchg
pop
movhps
adc
xor
pop
sub
pusha
ds
das
mov
or
ins
jns
and
sar
and
and
pop
or
popf
jp
pop
popf
add
mov
push
aas
mov
cmp
pop
xchg
not
pop
xchg
mov
and
imul
fs
add
inc
call
push
fs
sub
shl
jae
adc
inc
xor
inc
fs
pop
pop
push
xor
je
or
popa
mov
push
push
je
or
cmp
pop
je
or
out
push
sbb
call
or
dec
cld
shl
data16
clc
add
push
pusha
push
les
lahf
cmp
lahf
jae
or
and
das
jge
add
out
mov
xor
jae
lods
jae
dec
shr
je
push
adc
sbb
adc
fimul
into
outs
dec
out
dec
push
add
int3
rcr
or
push
sub
sbb
enter
mov
or
and
outs
add
push
mov
sub
or
push
ins
fadd
adc
adc
rcr
push
pushf
and
cmp
or
je
sub
je
dec
push
movs
sbb
fnstsw
inc
cmp
mov
mov
loop
(bad)
adc
xchg
cs
inc
ror
dec
std
cli
xor
mov
add
or
jb
jb
mov
cmp
in
sub
das
retf
std
aaa
inc
mov
push
push
js
push
add
loope
aas
dec
mov
dec
fidivr
or
push
jecxz
cmp
push
js
retf
mov
jmp
fsin
bound
das
or
pop
pop
pop
push
dec
sbb
pshufw
lock
sti
inc
cmp
dec
push
mov
jae
inc
xor
inc
clc
inc
jge
mov
cmp
or
icebp
pusha
stos
outs
cmp
ret
adc
lsl
or
je
jae
and
dec
pop
cmc
pusha
ret
inc
fiadd
cwde
mov
pop
clc
les
movs
fbstp
jecxz
sbb
imul
neg
je
mov
push
jmp
push
imul
fs
ins
aaa
sub
and
repnz
dec
inc
nop
ds
(bad)
push
cmp
ss
push
and
push
fadd
repz
dec
push
rcr
jl
scas
jge
mov
cmp
lods
push
js
pop
movs
lds
xchg
out
or
leave
leave
leave
lods
cmp
cmp
inc
sub
or
push
aad
inc
jmp
sub
pop
dec
jnp
push
dec
add
ins
fisubr
add
or
push
out
popa
loope
dec
add
inc
leave
mov
inc
push
jo
popa
jns
dec
mov
push
scas
or
enter
add
mov
mov
pop
xlat
cmp
ret
mov
add
push
sub
xchg
add
mov
jge
push
and
inc
dec
dec
push
and
sub
dec
outs
neg
pop
js
(bad)
xor
push
add
jmp
ja
out
jmp
jmp
pop
jecxz
inc
adc
pop
jo
sahf
pushf
fmul
test
and
pop
ret
dec
test
pop
mov
fst
retf
cmps
rcr
test
push
mov
cdq
dec
pushf
in
jnp
cmp
ss
fchs
retf
inc
pusha
adc
push
inc
dec
ja
xor
stos
fldcw
rol
sti
inc
jb
sbb
retf
or
lock
pop
fisttp
inc
imul
or
loope
dec
aad
push
or
imul
adc
jl
(bad)
ins
addr16
outs
fs
dec
xchg
pop
sbb
retf
(bad)
and
add
pop
or
mov
(bad)
scas
adc
push
sbb
adc
dec
add
cmp
add
push
ret
call
push
xchg
cmp
inc
in
add
cdq
jns
sbb
bound
xchg
and
mov
dec
inc
push
loopne
test
xor
pop
adc
pop
add
sbb
(bad)
pop
pop
pop
dec
mov
sbb
pop
and
sub
inc
aam
pop
and
into
add
adc
pusha
mov
cmp
push
aaa
push
dec
dec
add
in
adc
(bad)
cmp
inc
or
xor
or
and
and
scas
into
lods
movs
and
in
adc
and
inc
inc
inc
mov
ins
xchg
mov
push
dec
and
adc
inc
lods
inc
ficom
add
xor
cmp
pop
or
push
and
add
cmp
loopne
dec
adc
mov
call
xlat
jmp
into
cmp
jecxz
lahf
and
add
ret
mov
xchg
imul
mov
ja
dec
or
push
jecxz
jno
add
push
add
or
or
mov
sub
push
cvtps2pi
movq
loope
and
in
add
cwde
stos
sbb
scas
and
addr16
add
dec
(bad)
jnp
inc
imul
call
pop
ds
mov
js
inc
or
loop
paddusb
(bad)
push
iret
pushf
jge
inc
inc
mov
jl
das
push
adc
ret
(bad)
test
inc
mov
push
jmp
repnz
out
clc
push
push
add
data16
sahf
pop
repnz
pop
repz
sub
xor
out
cmp
dec
xor
pop
lea
rcl
ins
mov
test
and
sbb
movs
xchg
push
push
inc
pop
out
lahf
push
pusha
mov
sub
in
xchg
fadd
jp
mov
and
push
outs
jo
inc
xchg
fs
(bad)
out
and
pop
inc
mov
xor
push
ficom
les
fist
loop
pop
dec
push
mov
add
js
aaa
push
mov
and
push
inc
push
outs
push
and
aaa
repz
(bad)
adc
or
ins
fs
xor
sub
pushf
out
pop
sbb
and
mov
xchg
retf
jo
cmp
jae
jge
dec
pop
sti
dec
cmp
js
mov
imul
jl
xor
out
clc
fisttp
inc
sbb
xchg
aas
or
fldenv
ret
fimul
inc
mov
jmp
push
gs
mov
aam
mov
inc
lock
dec
cdq
xor
adc
shr
xor
push
pop
fdivr
add
add
popf
add
mov
scas
push
cld
mov
mov
or
(bad)
loop
jb
stc
inc
mov
pop
xchg
and
push
push
sahf
mov
pusha
dec
jmp
lods
movs
jge
add
test
push
js
scas
icebp
sbb
scas
rcl
push
dec
mov
xor
inc
xor
sti
xchg
outs
seta
in
xchg
sbb
aad
aad
fwait
mov
push
cs
push
(bad)
adc
and
pop
movhps
sbb
scas
xchg
les
pop
sbb
std
sbb
dec
xlat
push
adc
cmp
fmul
dec
subpd
loopne
ins
aas
setg
fcmovu
daa
mov
mov
sbb
ret
int
ficomp
mov
test
ins
mov
rol
add
pop
or
and
popa
ins
pop
push
sbb
loopne
xor
push
mov
sub
push
and
jo
sbb
jecxz
inc
xor
jg
or
jb
jnp
das
(bad)
add
adc
hlt
fmul
dec
sbb
pop
adc
push
push
pop
jae
mov
les
or
push
fs
push
inc
and
retf
add
adc
or
bound
cmps
dec
clc
cmc
inc
pop
aam
mov
inc
loop
fs
ret
cmp
ds
pop
xchg
pop
mov
jmp
jge
lahf
jl
xor
popa
fiadd
add
pop
stc
mov
les
mov
add
sub
test
or
adc
in
mov
pop
lea
mov
mov
or
(bad)
jmp
or
pop
mov
push
sbb
shr
mov
(bad)
dec
add
scas
pop
call
jnp
add
bound
push
jo
ret
xor
inc
in
pop
shl
ins
mov
icebp
adc
mov
or
ss
jns
or
les
sbb
push
cwde
add
and
sbb
mov
ja
fiadd
push
jmp
je
xchg
pop
xchg
jnp
fidivr
mov
jge
cld
jl
in
test
outs
imul
in
sbb
inc
imul
fwait
test
cli
sub
push
pop
push
adc
cmp
shl
dec
push
cmp
into
movs
gs
(bad)
adc
or
pop
xchg
jl
mov
into
addr16
adc
(bad)
addr16
ja
adc
sar
movs
and
fldcw
pop
ror
dec
pop
repnz
push
cs
pop
scas
jne
cmp
mov
cmp
pop
add
loopne
je
sub
scas
xor
lods
cmp
int3
aad
add
nop
sbb
mov
mov
pop
int3
inc
inc
or
sahf
or
add
xchg
sbb
push
in
push
pop
or
ret
jbe
mov
mov
mov
mov
int3
pop
daa
aad
push
xor
mov
add
std
cwde
icebp
vandnps
add
or
bound
dec
adc
push
in
pushf
sbb
sub
loop
pop
adc
mov
jmp
dec
les
jge
les
pop
in
jmp
pop
cmp
push
xor
jl
push
mov
loopne
add
fiadd
sbb
or
cs
inc
fild
fild
dec
pop
inc
inc
inc
push
fiadd
inc
cs
jg
les
inc
inc
jecxz
(bad)
inc
inc
inc
inc
inc
bound
inc
inc
icebp
sbb
cmp
inc
inc
inc
inc
mov
inc
xchg
sbb
pop
push
out
(bad)
js
(bad)
push
fimul
mov
gs
and
or
pop
jmp
call
sbb
shl
sbb
sbb
and
inc
or
jmp
mov
push
jmp
adc
dec
sub
cmps
inc
push
cdq
adc
je
leave
sbb
in
pop
jbe
sar
pop
jmp
sbb
xor
inc
push
cdq
call
je
test
add
mov
lock
xchg
dec
loop
std
in
or
loope
add
repnz
add
add
rol
dec
add
xchg
pop
add
sbb
call
dec
mov
fidivr
gs
or
mov
sub
jp
stc
sbb
loope
loope
loope
aam
pop
ffreep
unpcklps
dec
ret
test
(bad)
in
add
test
push
or
sub
ins
je
and
add
dec
loop
push
push
sub
inc
xchg
mov
les
cmp
add
cmp
xlat
dec
loop
xchg
push
mov
sbb
fcomp
imul
(bad)
jmp
mov
stos
scas
test
and
(bad)
outs
and
or
out
je
or
in
add
daa
cmps
adc
out
aam
ror
loopne
in
push
mov
adc
xchg
adc
add
pop
mov
data16
xchg
push
in
or
loopne
mov
add
add
xor
mov
inc
lock
outs
cmp
xchg
or
jae
mov
sub
mov
lahf
aaa
loope
add
xor
and
xor
pop
add
(bad)
in
enter
daa
in
pop
in
unpckhps
shl
pop
and
xchg
int3
add
out
mov
repnz
ins
pop
lea
lock
dec
push
push
push
pop
pop
mov
sbb
in
mov
out
jmp
iret
rol
push
sub
sub
cmps
inc
nop
mov
aad
loop
pop
pop
jecxz
sbb
cmp
xor
call
arpl
addr16
mov
pushf
movntq
out
pop
loope
mov
sbb
in
or
inc
mov
inc
mov
add
mov
sbb
or
jl
enter
dec
out
imul
mov
and
fiadd
push
call
stos
test
out
push
ror
push
add
mov
test
pop
push
shr
pop
pop
push
sbb
cmp
and
sbb
arpl
mov
mov
enter
mov
fucomi
add
sbb
jb
jmp
test
jne
ss
jns
jne
mov
add
mov
fldenv
mov
das
adc
test
xchg
dec
outs
mov
outs
and
mov
push
sbb
xchg
out
add
pushf
(bad)
jmp
lods
mov
movs
inc
xchg
push
aas
(bad)
hlt
push
or
mov
sahf
bound
fcos
or
dec
imul
dec
sbb
ins
mov
jmp
jmp
mov
push
jnp
test
shl
out
js
pushf
in
enter
sbb
sbb
fistp
push
mov
les
das
outs
push
ds
add
mov
fs
stos
dec
push
(bad)
push
lods
pushf
jo
and
xor
mov
xor
add
enter
pushf
jmp
test
jmp
in
dec
xchg
and
in
jne
jne
fst
lds
cmps
jne
das
xor
sub
sbb
das
es
cmp
cwde
call
cmps
cmps
adc
sbb
fwait
shl
and
mov
mov
out
adc
(bad)
call
push
pop
in
adc
push
sbb
sbb
in
call
add
out
ins
add
jne
in
or
or
sub
enter
cs
dec
dec
adc
scas
lock
out
mov
push
fld
or
mov
cmps
push
jo
hlt
pop
scas
call
test
inc
jo
xor
aaa
add
or
cmp
mov
mov
lea
cmp
aad
ret
sbb
push
out
and
sbb
out
mov
cmp
pop
ret
and
xchg
push
and
hlt
pop
add
inc
push
and
inc
and
je
mov
ss
ret
push
leave
mov
and
ins
and
lock
pop
xor
in
(bad)
and
push
pop
push
mov
jmp
nop
cwde
test
pushf
inc
test
paddusw
mov
inc
mov
cs
aad
nop
adc
bound
push
sbb
add
jo
cwde
daa
cmps
setbe
xlat
fs
xlat
cwde
repz
jecxz
imul
es
repnz
pop
outs
repnz
sub
paddsb
xor
mov
sub
mov
fsubr
inc
sub
daa
loope
or
lahf
mov
or
sti
imul
retf
or
or
mov
loop
cdq
mov
repnz
repz
repz
ins
xor
add
xchg
inc
repnz
and
xchg
repz
in
and
push
mov
es
repz
push
mov
xchg
repz
mov
sub
ret
pop
pop
push
adc
or
call
sub
pop
mov
mov
and
sub
(bad)
enter
(bad)
jno
or
cwde
dec
or
sub
ds
mov
push
hlt
sub
rcr
mov
shl
xlat
dec
cmc
in
imul
test
push
jp
das
add
jge
nop
cmc
cmp
and
sub
jmp
jo
pusha
adc
stos
xlat
out
adc
lods
mov
and
pushf
imul
push
fprem1
adc
loop
or
in
dec
mov
and
add
mov
mov
add
or
inc
das
pop
sub
imul
adc
mov
dec
neg
adc
push
pushf
fdiv
out
movs
clc
into
or
je
neg
imul
mov
test
mov
mov
les
sub
sub
push
cwde
and
add
sub
mov
pop
push
(bad)
mul
js
add
inc
pop
clc
sbb
shl
adc
inc
xchg
push
add
sub
xchg
mov
daa
mov
mov
clc
adc
dec
pop
inc
sub
cmp
sbb
sbb
and
sub
pop
ficomp
imul
inc
aam
stc
push
loopne
push
cli
push
mov
add
cli
iret
push
inc
enter
sub
or
and
cs
or
outs
je
or
sub
push
pop
jo
cmp
xlat
pop
in
arpl
jne
sahf
push
mov
mov
and
add
pushf
cmps
in
dec
xchg
(bad)
jne
sti
nop
and
aaa
sti
pop
sti
xchg
sti
jmp
retf
and
pop
leave
stos
jne
sti
dec
sub
fdivr
pushf
sub
fdivr
ins
cs
adc
push
fdivr
jns
sti
data16
ins
ja
mov
ja
cs
inc
or
das
popf
push
push
cmp
or
jno
das
fbstp
aas
dec
xor
popa
clc
bound
sbb
or
sbb
fcomp
sbb
or
out
or
sub
inc
jmp
sbb
or
inc
dec
xor
pushf
rol
sti
dec
dec
push
test
sub
push
mov
in
mov
std
pop
aam
xchg
fwait
gs
sbb
cmp
(bad)
push
mov
dec
inc
push
inc
pop
xor
push
adc
out
add
and
sub
sub
or
aad
sub
outs
jbe
push
mov
repnz
jno
jge
inc
mov
aaa
hlt
mov
sahf
xor
scas
cmps
mov
sbb
scas
and
and
push
cmp
cmp
jo
aad
pop
pop
in
std
jmp
loopne
push
mov
xchg
jb
pushf
adc
out
pop
inc
shl
dec
add
or
mov
push
cwde
movs
into
inc
repz
push
outs
movs
ss
js
sar
dec
imul
mov
imul
mov
inc
dec
push
pop
pop
minps
shr
pop
pop
add
shl
push
es
pop
xor
jae
dec
xchg
or
mov
sbb
call
cld
in
cwde
push
imul
mov
inc
inc
imul
or
and
jae
add
push
es
xor
jae
and
cmp
and
jae
lock
push
or
loopne
add
retf
or
pop
adc
ror
add
test
xchg
stos
add
ficom
outs
or
outs
cmp
stc
outs
pusha
psadbw
imul
dec
sbb
or
xlat
dec
aaa
dec
outs
sbb
rol
add
mov
add
push
adc
ret
and
adc
test
arpl
xchg
cdq
hlt
xchg
shl
iret
pop
inc
ins
jns
push
ja
push
lock
addr16
loope
ins
pop
mov
sub
pop
add
dec
imul
out
adc
jmp
or
jmp
pop
add
fist
inc
fisttp
mov
jp
add
push
jne
arpl
leave
mov
ds
jae
nop
mov
xlat
rol
jp
sbb
outs
addr16
mov
adc
stc
pop
jmp
loope
gs
sbb
dec
cdq
push
fnstenv
add
add
les
mov
inc
call
jb
leavew
adc
daa
add
dec
pop
ss
xchg
in
call
(bad)
sar
fsubr
adc
dec
imul
mov
out
add
pushf
add
xchg
pop
outs
adc
or
mov
sbb
enter
jg
je
(bad)
fmul
pop
jmp
imul
adc
jb
pop
and
sub
sbb
lods
cmp
retf
sbb
or
outs
dec
outs
outs
iret
mov
(bad)
jo
pusha
xchg
add
ds
lea
sub
or
push
mov
push
(bad)
out
or
adc
pop
loop
inc
cwde
stos
and
das
test
outs
pop
cdq
add
sub
pop
dec
inc
inc
ror
push
inc
shl
mov
lea
xchg
mov
push
sub
mov
inc
add
arpl
jbe
inc
pop
push
out
cs
xchg
or
sub
jmp
xor
add
inc
or
add
sahf
add
mov
push
add
push
jae
cmp
test
pusha
pop
add
ja
ins
call
mov
jmp
lods
call
cmp
aam
mov
enter
sbb
mov
add
out
jno
sahf
cs
aad
xor
cmp
out
inc
pop
pop
adc
sbb
push
xor
pop
and
rol
xchg
add
rcl
add
pop
gs
mov
sbb
or
bound
aas
seto
ret
jb
fwait
pop
adc
mov
or
popa
aaa
cld
ret
push
jo
push
jo
adc
dec
sbb
inc
sbb
push
ins
jne
xor
mov
out
or
xchg
stos
or
js
ror
xor
jns
bound
imul
pushf
movs
fsubr
xor
ret
push
stc
push
pop
xor
icebp
jle
in
lods
or
pop
adc
loope
push
push
lahf
push
imul
or
add
or
add
pop
pushf
cmp
arpl
jno
push
add
nop
out
or
in
ja
and
in
adc
ret
repz
imul
clc
mov
jno
fist
fmul
dec
push
outs
arpl
adc
test
or
adc
add
stos
mov
dec
fnstcw
or
cmp
lea
sbb
and
dec
mov
(bad)
mov
add
or
out
sbb
js
or
jae
cmp
loope
fdiv
ins
sbb
sbb
sbb
sbb
adc
and
popa
imul
sbb
add
xor
daa
or
das
popf
jge
jne
push
mov
arpl
push
cmp
or
sbb
ror
sbb
rol
scas
or
repz
mov
inc
pushf
bound
jnp
xchg
sbb
push
or
push
adc
adc
xor
and
jge
jnp
enter
mov
ret
sbb
dec
and
fs
xor
mov
test
ret
jnp
or
enter
or
rol
cmp
mov
ja
ret
dec
pop
leave
add
test
adc
xor
lock
or
push
call
or
outs
call
ds
jnp
jecxz
and
inc
popa
xchg
add
movs
adc
lods
aaa
xor
inc
ret
or
mov
mov
adc
repz
aas
jmp
ins
cdq
aad
pop
sbb
mov
gs
xor
retf
push
(bad)
sbb
pop
jo
jae
js
push
inc
sub
cmp
(bad)
scas
icebp
jno
mov
imul
imul
jle
inc
or
dec
outs
dec
cmp
mov
das
loopne
dec
iret
lods
cli
outs
loopne
inc
sbb
stos
popa
arpl
xchg
fadd
push
sbb
nop
mov
test
adc
push
imul
popa
(bad)
les
add
and
pop
es
adc
and
adc
es
lods
push
popa
and
xor
rcpps
cmps
push
pop
xor
inc
inc
pop
jecxz
push
fmul
add
sub
(bad)
cdq
bound
mov
sbb
in
inc
packssdw
aas
test
imul
mov
outs
sub
adc
adc
mul
call
mov
adc
inc
push
fsubr
das
sbb
push
or
out
test
mul
or
push
cwde
mov
add
add
mov
push
(bad)
mov
(bad)
adc
inc
icebp
add
adc
adc
shl
inc
mov
push
fimul
or
cmp
loopne
add
pop
adc
push
dec
fild
jne
push
adc
jmp
adc
fcom
pop
sbb
cli
add
cmp
movs
push
mov
aam
pop
dec
daa
push
test
rcl
jo
jo
add
sbb
cmp
ror
mov
iret
sub
call
aaa
jge
mov
inc
rcl
cmp
jmp
pop
int3
cmp
jae
stos
test
hlt
cmp
gs
popf
call
lock
xchg
bound
call
push
mov
adc
lahf
jb
loopne
push
jbe
sbb
mov
add
push
and
mov
mov
ins
xor
and
retf
sbb
sbb
push
sbb
sbb
stos
call
pop
mov
xlat
cmp
and
int
je
je
loopne
loop
je
je
xor
js
pop
mov
out
out
xchg
in
pop
test
sbb
push
pushf
mov
pop
enter
pop
mov
aaa
add
mov
(bad)
pop
sbb
xchg
pushf
inc
or
push
sbb
fadd
pop
idiv
add
sbb
leave
pop
cmp
call
or
sbb
and
adc
call
out
fwait
mov
icebp
pusha
mov
or
jbe
addr16
jo
add
xchg
xchg
mov
xor
cdq
and
in
pop
repz
gs
dec
cmp
test
call
sbb
sbb
cmp
ins
pop
cmp
dec
sbb
lds
inc
cmp
ins
jge
and
das
ins
ins
jmp
imul
mov
xor
sbb
out
mul
or
push
inc
sbb
sbb
mov
in
call
cmp
mov
pop
sbb
jo
sbb
inc
mov
cmp
or
pop
push
push
(bad)
xchg
xchg
cmp
test
imul
mov
rcr
cmp
mov
adc
cmps
inc
mov
sub
sbb
sbb
cmp
and
or
inc
imul
push
mov
pusha
repnz
rcl
test
dec
or
push
mov
add
push
push
pop
sub
mov
adc
ficom
mov
push
pop
in
cmp
dec
popa
jae
iret
hlt
sbb
mov
popf
sbb
imul
mov
mov
lods
pop
push
adc
jne
sbb
push
inc
mov
or
fisttp
adc
adc
adc
inc
aas
je
rcr
xlat
adc
and
sbb
bound
je
popa
jb
call
sbb
mov
add
sub
adc
bound
je
sbb
loopne
adc
lds
sbb
push
sbb
loope
sbb
push
xchg
jne
rol
data16
or
dec
jl
iret
or
pusha
ja
call
cmp
jb
movs
xchg
inc
outs
mov
scas
int3
adc
fild
mov
ror
push
lods
push
pop
push
and
mov
pop
sbb
mov
adc
dec
das
cmp
pop
pop
jg
pavgb
adc
add
out
mov
cwde
stos
pop
push
or
enter
pop
jmp
pop
xor
ins
aam
pop
(bad)
aas
sub
popa
cmp
and
jg
xchg
push
xor
mov
arpl
adc
sbb
cwde
or
and
and
iret
dec
jb
add
mov
popa
cmp
sbb
test
jmp
aaa
sbb
outs
arpl
adc
mov
rol
inc
dec
loopne
push
popf
pop
and
or
jb
adc
test
sbb
ins
outs
outs
xchg
mov
fsub
mov
or
cmp
and
popa
jo
sbb
push
dec
sbb
or
arpl
bound
arpl
sbb
arpl
das
mov
arpl
pusha
and
popa
jb
pop
pop
daa
loope
pop
les
push
adc
jmp
ror
(bad)
xlat
xchg
add
xchg
jmp
xchg
cmps
push
cmp
xor
add
nop
dec
bound
les
or
jb
pop
or
inc
cmp
push
xor
imul
adc
inc
push
and
sbb
imul
mov
push
and
std
sub
adc
scas
rcl
and
pop
adc
(bad)
call
adc
ins
and
outs
pop
adc
adc
mov
jp
and
int3
and
sbb
ret
lea
push
and
aaa
(bad)
mov
and
or
add
add
pop
sub
adc
mov
mov
jo
and
loope
sbb
push
adc
in
ret
adc
jo
or
mov
push
xchg
sbb
jo
pop
ins
retf
dec
bound
adc
add
sub
pop
pop
dec
imul
cmp
and
jne
and
sub
cmp
stc
xchg
ins
sub
ficomp
imul
fsub
mov
add
mov
xor
addr16
xor
out
pusha
ins
jno
jno
adc
add
jo
xchg
push
adc
cld
ss
test
js
add
popf
push
inc
icebp
or
unpcklps
sbb
xchg
pop
daa
aaa
jmp
jne
nop
daa
push
push
sbb
fisttp
jo
sbb
in
daa
dec
popa
or
(bad)
cmp
mov
mov
adc
sbb
cmps
sub
push
cmp
or
dec
fdiv
sub
rcl
fadd
xlat
cmp
loopne
imul
aad
adc
push
pop
pop
(bad)
arpl
in
push
sbb
div
bound
shr
add
xchg
fucomp
dec
dec
push
out
fs
cdq
sub
sub
jge
or
in
imul
push
imul
inc
daa
xchg
or
je
je
dec
mov
imul
outs
add
out
jge
adc
jg
dec
inc
or
push
cdq
push
fldcw
ins
je
pop
pop
push
dec
ins
rep
je
mov
test
nop
add
sub
pop
xchg
pusha
xor
fild
dec
in
adc
inc
fild
xor
sbb
cmc
(bad)
loope
jecxz
int
xor
test
sub
xlat
xchg
sbb
mov
lahf
xlat
mov
sub
or
dec
pop
ins
add
pop
stc
je
sub
out
(bad)
sub
and
sub
sub
cmps
pop
(bad)
lods
jp
mov
mov
add
inc
mov
jno
clc
icebp
pop
fsubr
inc
adc
inc
aad
fdivr
cdq
and
ins
ins
or
lock
cmp
dec
and
out
jmp
push
xchg
loope
xor
jbe
test
mov
cmps
addr16
cmp
or
jbe
or
and
sub
cs
jne
outs
jae
xchg
outs
pop
and
pusha
mov
cmp
cdq
sbb
(bad)
(bad)
in
lock
sbb
jns
sbb
dec
sbb
shl
shl
cmc
gs
jo
dec
loopne
das
aas
gs
and
jb
enter
jb
jb
fild
out
xchg
cmp
mov
xchg
gs
add
add
popa
add
cld
das
pop
jmp
cmp
lds
pop
jo
jae
xor
imul
cmp
and
adc
lahf
jmp
out
out
jb
mov
addr16
test
enter
add
out
dec
test
and
dec
and
xor
xor
sbb
sbb
inc
call
xchg
(bad)
je
addr16
pop
sar
push
dec
add
ficom
add
and
outs
push
push
jb
mov
pop
add
inc
ror
js
jbe
sub
adc
out
popa
and
add
add
aas
dec
inc
push
neg
(bad)
pop
ins
dec
or
push
clc
dec
add
aas
xchg
and
mov
xchg
(bad)
jmp
add
mov
mov
loopne
and
inc
imul
push
das
jg
imul
adc
cmp
loopne
push
jnp
pop
adc
xchg
xor
jae
cmps
bound
and
bound
shl
ret
sbb
ss
out
dec
add
cmp
lahf
je
push
add
repz
xor
aaa
sub
push
jecxz
iret
inc
xchg
mov
jle
mov
das
mov
shr
(bad)
cmps
sub
mov
je
sbb
ss
xor
xchg
push
lds
(bad)
pop
outs
add
mov
adc
jae
imul
dec
outs
fcom
cmps
inc
push
adc
mov
mov
nop
mov
xor
adc
push
bound
add
adc
ins
xlat
adc
inc
or
xchg
arpl
lahf
push
add
pop
(bad)
and
sub
adc
add
pop
setnp
dec
mov
adc
sub
mov
adc
add
rcl
pusha
or
pop
pop
cmp
daa
mov
cs
adc
mov
adc
out
adc
test
fcom
call
push
jne
push
jmp
jmp
sbb
and
adc
ja
adc
cwde
inc
leave
mov
pop
pop
fmul
(bad)
lds
loopne
adc
adc
mov
addr16
adc
adc
mov
and
pusha
add
xor
push
scas
inc
xor
adc
lock
addr16
ret
gs
sub
(bad)
xchg
pop
adc
iret
dec
jg
adc
inc
(bad)
rcl
bound
or
pusha
pop
inc
aaa
lahf
inc
add
pop
and
outs
lahf
push
mov
adc
lahf
inc
dec
test
push
push
pop
rol
push
call
ja
add
inc
pop
rcr
cmp
addr16
add
sbb
pop
sub
outs
dec
dec
test
and
sub
outs
aas
add
aad
add
pop
adc
les
mov
out
push
loop
push
xor
and
push
add
outs
add
pop
addr16
push
rol
ja
inc
ss
aas
adc
xor
xchg
addr16
sub
mov
push
(bad)
lds
mov
adc
jmp
add
mov
push
pop
pusha
sbb
inc
outs
ja
and
movs
daa
adc
add
jo
inc
push
ja
cwde
push
xchg
or
lahf
ja
push
mov
bound
addr16
sbb
push
sub
inc
mov
pop
(bad)
daa
xor
pop
fcom
rcr
lahf
xchg
sbb
(bad)
adc
(bad)
inc
adc
dec
or
addr16
bound
push
mov
outs
push
jmp
push
pop
push
add
pusha
mov
xor
push
jnp
or
js
sub
mov
mov
pop
add
adc
mov
jg
xor
push
addr16
adc
cmp
addr16
ficomp
fcom
add
jo
push
imul
push
mov
add
add
push
or
sub
jg
add
shrd
jmp
pop
cmp
sbb
adc
sbb
pop
jno
add
cmp
imul
cmp
(bad)
std
add
inc
cwde
and
add
adc
xor
add
test
(bad)
enter
adc
jecxz
pusha
inc
sbb
cmp
inc
clc
and
pop
(bad)
test
push
xor
xor
imul
adc
cmp
mov
lea
and
mov
shl
sub
jo
outs
inc
dec
push
sbb
es
mov
lods
xor
mul
cdq
in
and
or
mov
and
jg
dec
loop
loopne
push
ss
(bad)
xchg
dec
jo
ss
jno
adc
push
gs
and
or
inc
dec
pop
and
sbb
inc
pop
add
jp
add
out
jo
xlat
test
lods
xchg
mov
ins
outs
sub
xor
sbb
sub
cmc
jmp
and
sbb
sbb
push
nop
cs
imul
inc
jnp
test
dec
ss
sub
adc
xor
pop
mov
push
lods
fs
dec
adc
and
or
sub
fild
call
jg
not
lahf
cmp
xchg
inc
rol
lahf
loop
sub
or
or
adc
mov
and
or
inc
aas
inc
add
or
push
add
popf
sub
dec
push
pop
dec
fisttp
push
dec
push
dec
pop
jmp
shl
jecxz
add
ins
jae
add
pop
jmp
and
xor
ss
test
dec
and
(bad)
call
jnp
dec
adc
xchg
mov
pop
and
add
xchg
aaa
scas
pusha
jecxz
xchg
in
lods
jae
add
sar
dec
sar
in
jno
loop
jno
aas
cmp
les
dec
push
and
pop
add
xor
xor
or
mov
mov
mov
out
add
sbb
inc
lahf
inc
jne
sub
push
inc
jne
popa
outs
nop
outs
jb
lods
lds
cmp
pop
js
or
dec
cmp
cmc
fadd
mov
js
dec
xchg
jo
pop
aam
into
jae
pop
mov
mov
les
inc
ds
aam
add
mov
adc
dec
or
ins
pop
push
push
stos
pop
jo
imul
lahf
add
pushf
(bad)
pop
or
push
sar
push
add
push
test
ins
add
adc
xor
clc
les
adc
jle
dec
push
das
mov
add
xchg
cmp
mov
inc
push
cld
push
jo
push
clc
mov
xchg
push
push
inc
int3
lods
push
pop
div
cmp
cs
push
fs
mov
push
or
push
sbb
push
dec
inc
mov
push
lods
out
add
call
or
push
sub
jns
out
js
in
lock
repz
hlt
sbb
cmp
repz
repz
hlt
jo
scas
push
mov
sti
cmp
int3
call
push
pop
iret
repz
push
cmp
je
mov
cwde
shr
into
repz
popa
push
in
jo
(bad)
out
sahf
aaa
dec
push
or
inc
sar
lahf
cld
add
push
xor
test
out
out
fcomp
push
cmp
lock
fs
dec
push
ins
xchg
mov
iret
repz
mov
pop
movs
popf
or
pusha
mov
data16
mov
addr16
push
add
out
jns
imul
xor
xor
fmul
ins
push
xchg
push
pusha
gs
gs
sahf
out
sahf
mov
mov
push
lahf
imul
fs
cmp
inc
enter
je
cmp
cmp
enter
ffreep
sub
add
clc
outs
cmps
push
loopne
push
cmp
out
sbb
cmp
push
in
cmp
jnp
call
jl
test
or
pop
into
in
push
inc
or
sub
fmul
and
mov
sbb
inc
aad
mov
pop
or
jnp
add
cdq
sbb
in
inc
or
xor
push
xchg
test
xchg
jnp
jo
xor
mov
mov
test
lock
jno
inc
jnp
pop
cdq
add
push
add
push
jmp
fstp
push
fimul
xchg
mov
push
xchg
or
ret
js
push
mov
jb
popa
stc
or
(bad)
verw
pop
stc
addr16
and
pop
mov
shrd
unpckhps
movhps
xor
mov
or
inc
popa
nop
mov
add
(bad)
retf
in
add
dec
sbb
loopne
in
add
lock
minps
jecxz
add
and
stos
and
shl
shl
and
addr16
mov
add
add
mov
sub
push
pop
mov
cmps
sub
imul
xor
sub
aas
push
mov
wrmsr
bound
xor
clc
inc
lahf
aam
xor
rdpmc
xchg
das
ja
call
in
ja
and
ins
getsec
add
cmp
aas
shl
retf
cmp
(bad)
cmp
(bad)
add
outs
cmp
(bad)
ds
fs
mov
push
(bad)
add
xchg
pop
out
cmp
cmovno
mov
and
add
div
pop
scas
cld
jb
add
inc
add
dec
add
dec
jmp
int
jb
lar
jl
outs
mov
mov
cmovg
loop
sar
lea
sahf
test
mov
call
sahf
in
push
dec
jno
sub
jp
push
add
mov
jnp
pop
add
pop
loop
emms
sbb
subps
jge
pop
add
sbb
retf
pop
add
pusha
mov
jmp
into
jg
(bad)
jno
arpl
stos
fs
add
data16
add
push
pop
out
or
or
add
adc
ins
dec
(bad)
mov
loope
je
fiadd
pop
shl
scas
repnz
jno
lds
xchg
jae
mov
je
xchg
jne
mov
jbe
lods
ja
mov
js
xchg
aas
push
xlat
je
inc
mov
jp
(bad)
add
ja
xchg
cmc
jl
mov
jge
mov
xchg
aas
jmp
mov
jo
cs
jle
jb
(bad)
rcl
out
je
mov
xchg
in
jb
xchg
into
mov
(bad)
jns
add
jle
inc
push
lock
xor
mov
hlt
or
jg
dec
cmc
pop
xlat
cmc
setno
setae
ds
xlat
repnz
sete
setne
mov
mov
sets
(bad)
fsubr
setp
repz
push
and
setl
sbb
or
std
movs
sbb
push
ins
and
inc
dec
push
or
(bad)
loope
and
pusha
add
adc
lds
bound
jo
push
push
push
sub
pop
or
rcr
in
outs
pop
adc
pop
add
inc
adc
inc
pushf
or
retf
xchg
ja
add
and
les
mov
ja
push
or
add
repz
inc
or
shr
out
mov
adc
shr
ins
add
aas
xor
xchg
in
je
cmovns
or
jae
cmp
fs
bound
repz
mov
stc
add
xor
bound
popa
xor
iret
std
add
inc
shl
out
add
ret
rcr
jnp
adc
dec
add
xchg
xor
adc
dec
inc
jbe
movs
imul
adc
cmc
rcr
jno
adc
jne
jmp
mov
ror
add
and
lea
adc
push
nop
mov
ret
(bad)
add
mov
test
lds
add
and
and
or
inc
in
pop
outs
(bad)
or
pop
inc
ins
or
leave
cmc
inc
and
sti
push
call
pop
mov
push
or
xchg
rcr
and
push
retf
adc
mov
(bad)
adc
add
xchg
xlat
adc
add
dec
or
adc
jne
call
movs
ins
or
(bad)
jmp
sub
pusha
fcmovne
sub
or
in
or
jg
dec
jae
dec
xor
adc
fs
add
ret
pushf
call
pushf
lds
cdq
cmps
mov
imul
or
mov
fwait
jae
rol
nop
nop
or
push
jl
xor
fisttp
je
or
fcom
dec
pop
inc
jns
mov
xchg
stos
sbb
mov
push
sbb
das
add
sbb
inc
lahf
cmps
dec
sbb
add
dec
in
push
dec
mov
pushf
or
lock
xor
stos
mov
hlt
aam
inc
clc
sbb
lock
adc
cmp
push
ins
das
or
sub
adc
jmp
rcr
je
psubusw
in
jne
inc
add
or
repz
push
sbb
push
push
push
fcomp
cmovns
push
sbb
pop
dec
push
aad
(bad)
pop
ja
movs
test
outs
sbb
or
xor
loope
pop
dec
push
or
and
push
fst
in
push
rcl
out
and
sbb
pusha
add
retf
xor
jnp
xchg
pop
adc
pushf
or
mov
add
mov
inc
shr
(bad)
xor
pushf
or
jp
push
xor
sub
mov
inc
xchg
or
adc
movs
dec
rcl
je
push
scas
inc
gs
les
sbb
push
fadd
ror
cmp
fist
adc
dec
cmp
pop
rcl
cmp
pop
add
mov
mov
or
test
mov
push
test
lock
out
or
pop
addr16
or
sbb
cmp
nop
sub
cmp
cmp
outs
adc
or
ins
push
and
mov
nop
dec
jo
pop
pop
fucom
stos
or
adc
test
(bad)
int
jmp
hlt
mov
cmc
mov
adc
loope
cmps
and
add
stos
push
shl
adc
xchg
pop
mov
or
add
add
cwde
lods
icebp
aam
push
arpl
inc
cwde
sub
adc
sbb
inc
adc
icebp
daa
mov
adc
(bad)
sti
or
xchg
xchg
pop
test
sub
pop
adc
sbb
push
push
lods
popa
iret
jo
dec
push
and
xor
lock
adc
push
dec
xor
xchg
sub
rcl
mov
add
inc
popa
xor
inc
or
jb
push
mov
mov
cmp
or
jp
inc
or
adc
ret
(bad)
repnz
sbb
jmp
mov
pop
push
sbb
jge
pop
pop
je
cmp
pop
stos
mov
bound
pusha
lods
outs
mov
or
(bad)
push
inc
push
jbe
inc
push
pop
sub
mov
push
mov
push
mov
mov
sub
inc
xchg
in
add
lods
sub
add
inc
loope
xor
or
aad
addr16
fisubr
cld
adc
pop
mov
sub
pop
in
pop
add
push
inc
out
inc
movs
das
lods
mov
add
cmp
lods
adc
sbb
or
pop
xor
adc
mov
push
and
dec
repnz
jae
fmul
pop
scas
push
cmp
push
test
add
jecxz
cmp
mov
or
or
stos
add
js
data16
shl
js
push
push
(bad)
pop
mov
std
retf
push
test
add
movs
adc
sti
add
xor
cmps
cwde
inc
sbb
inc
inc
or
sub
or
fisttp
xacquire
push
aaa
fnstsw
push
loope
push
aaa
dec
js
inc
push
sbb
add
pop
sub
loopne
adc
and
stos
jecxz
or
jno
ins
cmps
add
stos
adc
or
or
mov
or
or
adc
pop
sbb
repnz
lods
out
inc
mov
or
pop
loope
add
pop
pop
les
adc
add
dec
mov
loopne
pop
jo
adc
mov
scas
test
retf
movs
adc
pop
scas
inc
or
cmps
or
cmps
mov
and
push
xchg
jecxz
push
and
add
push
mov
or
stos
loope
lds
sbb
mov
lahf
sbb
jge
pusha
mov
sbb
mov
or
ja
inc
movs
mov
imul
sub
or
pop
push
cmp
int3
data16
jne
and
mov
add
stc
add
add
aad
outs
dec
fnstcw
rol
dec
ins
test
daa
pop
dec
xor
outs
jne
and
and
jo
adc
jmp
sub
sbb
mov
mov
nop
leave
rcr
stos
adc
pop
and
mov
in
adc
loopne
xchg
add
adc
push
adc
cmps
ds
push
inc
outs
dec
xchg
sub
sub
inc
push
mov
adc
push
inc
mov
aas
inc
outs
arpl
popf
cli
pushf
call
push
jne
test
pop
inc
outs
xor
cmp
in
xchg
je
pop
push
add
add
xchg
stos
rol
sub
jae
imul
shl
sub
sbb
push
scas
pop
mov
xchg
push
sbb
add
xchg
add
es
xchg
xchg
push
popf
mov
xor
cmc
repnz
jb
inc
scas
stos
fwait
adc
inc
adc
xchg
adc
sti
sbb
jmp
adc
arpl
lea
test
mov
outs
push
and
mov
(bad)
and
jecxz
gs
add
inc
xchg
jg
sub
add
mov
xor
movs
ins
pop
and
sub
sbb
imul
bound
push
jnp
pop
rcl
pop
push
ror
popf
(bad)
adc
push
adc
and
add
jg
pop
jo
push
or
or
add
pop
pop
push
or
scas
fimul
rcl
pop
imul
add
pop
popa
fild
push
fldenv
add
ror
sub
cmps
in
adc
(bad)
add
pop
xchg
aam
cmps
adc
jo
xor
bound
(bad)
xchg
shr
out
iret
or
mov
dec
pop
sub
jb
or
aad
(bad)
imul
enter
add
scas
mov
mov
sti
mov
and
bound
es
and
or
jb
js
mov
sub
shl
inc
add
test
mov
fisttp
int3
lods
pusha
and
mov
popf
mov
dec
(bad)
enter
test
(bad)
xchg
mov
xchg
mov
test
sub
cs
(bad)
pushf
mov
add
test
mov
xor
or
mov
mov
test
outs
xor
add
sub
cs
outs
add
stos
leave
mov
sbb
movs
mov
test
movq
fmul
and
mov
sub
js
(bad)
jmp
add
aam
fst
lods
fldcw
adc
fs
(bad)
mov
or
fscale
shr
ins
fld
pop
ror
fdiv
add
clc
das
in
mov
fldcw
add
or
in
xor
xchg
loope
aad
pusha
or
fprem
das
pop
jmp
push
xchg
nop
or
xor
or
add
(bad)
add
sub
xor
jl
mov
add
pop
dec
inc
fst
sti
dec
lds
inc
fscale
retf
sub
inc
or
(bad)
jge
xchg
inc
push
daa
xlat
xchg
dec
mov
add
and
mov
popa
pop
lds
dec
jge
inc
pop
push
hlt
dec
xor
in
push
out
mov
loope
ins
add
xchg
es
push
xchg
lods
retf
add
out
adc
inc
enter
(bad)
rcl
es
(bad)
aas
pop
adc
movs
int
pop
bound
mov
rol
sub
jecxz
mov
or
int
into
sub
call
jno
sbb
dec
jge
cmc
adc
stc
cmp
ret
adc
stos
int
call
scas
pop
sbb
mov
aad
dec
pushf
sub
pop
xor
pushf
das
call
dec
sub
push
mul
and
add
add
ds
ds
xor
les
enter
mov
ss
adc
dec
push
nop
iret
push
push
out
cld
pop
test
cmc
or
mov
test
dec
mov
sahf
xchg
push
jmp
je
(bad)
push
adc
jns
sbb
and
cmp
push
call
pushf
push
mov
cmc
fld
add
push
push
cmp
idiv
test
jl
test
idiv
sti
out
cmps
cs
push
test
es
mov
aam
mov
mov
mov
mov
cli
cs
test
not
mov
mov
or
dec
mov
mov
test
mov
sub
cs
cld
push
cwde
sub
cli
out
in
not
mov
aam
cmp
stos
mov
mov
mov
test
(bad)
(bad)
jo
cmp
leave
retf
mov
jmp
retf
div
clc
out
cmp
fiadd
adc
inc
aam
adc
inc
shr
sub
ss
xchg
neg
xchg
loop
mov
int3
fsub
fild
loope
jnp
mov
(bad)
sahf
jecxz
ret
retf
inc
imul
jecxz
in
call
neg
mov
push
jns
jmp
mov
jle
jmp
jns
and
adc
cwde
push
aad
aas
add
or
das
sub
inc
adc
outs
out
or
scas
les
and
mov
mov
fucom
leave
mov
mov
pop
push
pop
andnps
std
adc
add
pop
or
out
repnz
jo
scas
mov
test
les
sbb
das
jg
movs
mov
push
add
pop
add
aam
mov
add
retf
inc
aam
dec
add
retf
retf
retf
in
cmps
ds
test
test
jp
and
and
stos
ss
aas
out
stos
(bad)
add
cmp
stos
mov
ret
stos
inc
lods
mov
xchg
lods
in
lods
pop
lods
(bad)
mov
lods
or
pop
pop
pop
shr
or
jl
shl
pop
dec
inc
mov
mov
cld
pop
pop
and
in
shl
sub
outs
retf
cmovns
retf
retf
pop
push
mov
xchg
mov
mov
aad
retf
jae
hlt
(bad)
jb
pop
repnz
hlt
mov
dec
mov
add
out
xchg
cs
mov
out
cmp
mov
repnz
popa
mov
mov
outs
mov
in
adc
jb
psrlq
das
das
das
pop
(bad)
rol
and
je
icebp
ret
das
das
pop
ret
fadd
dec
les
sahf
movq
lds
jns
pop
je
loop
push
(bad)
ror
retf
pop
push
rol
(bad)
mov
jp
enter
pop
cmp
jmp
cld
jge
fbld
xchg
add
cwde
repz
vpaddsb
setae
fs
cli
popa
int
das
into
sbb
xor
es
mov
rcr
in
addr16
xor
sbb
shr
cmp
test
mov
or
sub
pop
aas
sbb
lods
in
sbb
aad
jbe
in
mov
stos
cmps
sbb
jns
fdiv
and
test
and
sub
and
bnd
cmp
and
ja
jne
mov
adc
das
pop
or
add
cmp
mov
in
inc
lea
js
xor
ja
sub
adc
jb
or
sub
or
lds
test
xchg
adc
add
adc
mov
iret
xchg
mov
(bad)
adc
push
add
sub
aaa
sbb
sahf
add
inc
or
jne
adc
push
add
mov
rol
rol
jge
cmp
and
xor
inc
and
add
push
mov
lea
xchg
adc
jge
cdq
adc
jge
add
inc
sbb
jge
call
and
and
xchg
mov
dec
cmp
stos
nop
pop
adc
mov
iret
and
push
pop
mov
fmul
and
add
stos
outs
arpl
fwait
sub
js
in
test
add
push
sub
add
sub
stos
aad
sbb
ins
ins
xor
cdq
xor
pop
aaa
xor
jns
and
xor
add
adc
and
inc
cld
cmps
jmp
add
sub
loopne
or
sbb
push
xor
add
cmp
cmps
cmp
jne
mov
ss
dec
fsubr
sub
sub
mov
ja
and
in
xchg
push
xchg
mov
xchg
push
bound
jmp
add
mov
push
mov
scas
ins
xchg
movs
adc
stos
xchg
cdq
xchg
pop
or
inc
dec
mov
push
push
dec
mov
sub
inc
xchg
xchg
ds
inc
sub
add
add
mov
cmp
push
or
mov
nop
jmp
add
or
push
push
xchg
fmul
cmp
xchg
sub
inc
and
mov
mov
nop
pop
push
dec
sub
xchg
xor
lods
out
push
mov
or
in
imul
and
mov
jns
mov
jb
mov
dec
jns
mov
jmp
adc
and
sub
imul
adc
jns
inc
jb
cld
mov
push
ins
xlat
inc
or
dec
cwde
mov
or
xchg
sti
xchg
pop
xor
push
or
in
call
and
xchg
pop
or
in
pop
and
add
jmp
pop
or
mov
ja
enter
inc
mov
add
in
fdiv
mov
fnsave
pop
and
in
in
pop
jno
loope
mov
mov
jmp
dec
ins
push
ins
nop
pushf
mov
test
ja
leave
mov
ja
inc
enter
fild
imul
mov
inc
or
shr
push
inc
fnstsw
inc
aad
mov
mov
lea
(bad)
call
mov
cmp
shl
dec
adc
add
adc
add
lea
mov
mov
cmps
xchg
pop
adc
(bad)
mov
lea
xlat
(bad)
daa
and
lea
sbb
add
xor
lea
les
xchg
nop
aad
leave
or
mov
sub
add
and
fcmovb
jb
dec
sub
mov
fldcw
stos
sub
sub
push
enter
cdq
mov
add
inc
enter
inc
sub
pop
lods
out
sbb
test
retf
test
repnz
inc
mov
fs
or
lahf
cmp
add
daa
mov
pusha
adc
(bad)
stc
or
push
imul
adc
test
or
mov
inc
mov
in
(bad)
pop
add
sub
and
sbb
xchg
xchg
mov
ffree
push
add
aas
sbb
dec
movs
adc
stos
nop
daa
adc
sub
sub
xchg
sbb
aas
add
cmp
js
jl
popa
or
push
mov
jo
jg
sub
int
add
test
dec
push
or
int
stos
push
or
add
jmp
adc
ss
test
mov
int
and
aad
jecxz
pusha
test
dec
xor
stos
adc
add
inc
add
adc
add
inc
push
arpl
add
push
movs
mov
movs
add
int
adc
sub
or
xor
int
daa
add
push
int
add
push
int
jo
cmp
or
pop
mov
pop
rcr
or
mov
das
push
pop
pop
sub
dec
sbb
rcr
push
jmp
push
cld
mov
jg
cli
adc
je
jne
push
(bad)
dec
add
dec
mov
and
push
mov
mov
jb
popf
mov
lods
fisttp
inc
hlt
shr
inc
pop
adc
xchg
jmp
fsub
test
sti
or
pop
imul
add
or
iret
add
cmp
dec
xlat
push
mov
mov
jle
fwait
inc
dec
(bad)
jne
gs
(bad)
(bad)
gs
xor
inc
push
sbb
mov
test
leave
and
in
lods
adc
sbb
and
scas
cs
pop
pushf
mov
xor
pusha
sbb
shl
adc
cs
repz
inc
add
mov
inc
call
div
sub
xor
push
fadd
clc
nop
pusha
movs
add
pop
or
pop
outs
mov
fadd
andps
nop
das
xor
add
(bad)
xchg
mov
xlat
jb
mov
pop
(bad)
test
mov
mov
push
inc
xor
push
push
daa
inc
retf
mov
in
inc
push
ret
sbb
inc
(bad)
xchg
addr16
jnp
push
mov
(bad)
addr16
loope
sbb
jmp
ret
popf
pusha
push
test
or
adc
and
dec
icebp
(bad)
loope
je
and
mov
mov
rol
rol
pop
adc
add
cmp
dec
cmp
outs
add
push
dec
lds
mov
cmp
or
pop
lods
sbb
dec
test
jl
inc
mov
mov
rol
xlat
sbb
mov
pusha
shl
(bad)
clc
mov
aad
rol
and
push
xor
jne
jae
repnz
push
push
cmp
jp
test
pushf
adc
add
daa
mov
xchg
add
or
or
adc
loopne
add
shr
dec
lods
(bad)
sti
pusha
dec
pusha
adc
push
cld
inc
pop
adc
adc
lods
inc
dec
imul
fisubr
adc
cdq
sub
or
inc
imul
das
fisubr
int3
push
fwait
sar
inc
cld
adc
cmp
cld
jne
cmc
jmp
sbb
enter
push
ja
ins
test
mov
pop
(bad)
leave
and
xchg
aad
popa
mov
in
add
xor
mov
(bad)
mov
mov
fld
cmps
std
push
test
cmp
shr
add
sub
cmp
call
aas
inc
loop
mov
lea
das
or
add
retf
or
and
add
mov
lods
jmp
inc
imul
or
push
adc
push
hlt
iret
sbb
and
dec
in
fcomi
jne
xor
scas
stc
mov
push
jge
pop
out
cmp
mov
mov
or
aaa
test
pop
xchg
mov
add
push
or
fmul
add
fsubr
sub
pop
outs
sar
icebp
mov
out
pop
add
pop
pop
lahf
fidiv
fiadd
mov
pop
cmp
sbb
push
inc
dec
jne
scas
pop
les
lds
lock
cmp
and
lods
in
jne
or
and
fcomp
cs
jo
xchg
jle
jo
lock
mov
cmps
fistp
mov
fdiv
inc
push
lock
mov
cmp
outs
rcr
dec
test
jl
inc
xor
adc
mov
jge
mov
fsubr
cmp
sub
push
cld
adc
and
scas
jmp
xor
jne
mov
jae
jb
mov
dec
stc
push
ret
push
push
pop
(bad)
hlt
mov
fmul
stos
int3
enter
es
push
sbb
add
inc
pop
add
cmps
jne
mov
jge
cmp
mov
and
jge
push
movs
nop
push
jo
call
pop
pop
ret
add
dec
sahf
jae
mov
mov
sbb
test
pop
ret
das
hlt
inc
and
mov
out
or
loope
mov
jo
or
inc
jge
in
inc
pushf
(bad)
push
mov
sti
(bad)
cld
mov
lock
cmc
or
add
repz
movs
jno
push
fisub
jns
sahf
mov
mov
fcom
in
push
xchg
adc
je
dec
mov
mov
ins
call
aam
fmul
xchg
je
loope
push
pop
push
rol
add
neg
cs
pop
loopne
push
fcomp
retf
rcl
ficomp
pop
push
fdiv
fsub
xor
leave
inc
aam
inc
jb
cdq
in
ror
add
test
pop
loopne
push
fdiv
add
mov
ss
call
dec
dec
ins
aad
inc
in
jne
add
ret
xabort
inc
in
popf
cmp
dec
or
xor
jo
pop
in
sbb
dec
jo
loopne
push
xor
mov
fwait
pop
test
inc
push
xchg
test
clc
dec
push
inc
mov
pop
lods
adc
cmp
pop
sub
(bad)
mov
scas
(bad)
jnp
and
dec
jne
sti
push
xor
inc
fwait
adc
xchg
mov
je
dec
cdq
sbb
jns
or
push
(bad)
adc
jae
pop
push
mov
in
pusha
popa
in
scas
aad
push
je
mov
and
aaa
in
and
add
mov
add
cmp
jo
nop
add
nop
inc
inc
dec
aaa
jno
cmp
lock
js
or
cmp
es
add
loop
lock
adc
pop
aaa
leave
and
push
in
mov
dec
popf
rcl
jne
adc
loope
mov
loop
adc
jo
nop
and
lock
inc
cmp
dec
jl
add
ror
pop
ins
xchg
cmp
(bad)
mov
sbb
add
scas
call
lock
lods
sbb
in
rol
icebp
ficomp
push
or
jl
pop
pusha
xchg
add
adc
mov
into
cmp
dec
pushf
add
mov
adc
ror
adc
mov
mov
lock
push
inc
push
aaa
imul
adc
pop
or
xchg
add
or
mov
jne
aas
cmps
or
cdq
(bad)
in
sub
js
pushf
test
pop
mov
shl
out
xchg
lods
adc
clc
hlt
(bad)
lock
sub
jle
sbb
adc
xor
pusha
mov
cli
add
lea
jb
mov
add
dec
push
in
ja
or
push
push
hlt
push
pop
dec
fsubr
pusha
adc
test
mov
sahf
pop
fcom
movs
movs
arpl
les
add
dec
adc
and
cld
out
add
sbb
jl
adc
in
sahf
sahf
int3
jne
shl
xor
je
jmp
arpl
sbb
ror
out
cmp
and
push
pop
(bad)
adc
call
mov
and
rcr
cmp
adc
daa
mov
push
add
sub
ret
idiv
dec
clc
shr
fmul
ins
dec
cld
sbb
push
cwde
push
pop
xchg
jecxz
pop
outs
hlt
cmp
out
fld
jns
cld
cmc
cld
nop
and
addr16
push
in
ss
ja
(bad)
(bad)
dec
je
addr16
dec
jle
xchg
push
div
popfw
sbb
cmp
pop
lock
sbb
jnp
(bad)
push
xor
dec
add
mov
mov
mov
adc
jno
hlt
out
jl
push
sqrtps
mov
test
loopne
mov
push
adc
xlat
sub
push
and
wrmsr
and
lds
mov
mov
fisub
out
mov
gs
shl
nop
popf
lods
cmp
mov
in
inc
bound
dec
push
mov
adc
lea
mov
dec
mov
jl
out
mov
cli
push
dec
sub
inc
and
dec
cmc
clc
mov
pop
mov
cmp
adc
inc
retf
ins
leave
mov
inc
cmp
cmp
sbb
mov
dec
xchg
push
mov
mov
fwait
jo
jo
or
js
sbb
js
je
or
jns
jl
cmp
mov
mov
mov
jb
cwde
cwde
xchg
xchg
cli
and
sbb
(bad)
sbb
push
stc
ret
inc
(bad)
xchg
push
in
sbb
cmp
push
cmp
or
add
or
test
push
mov
dec
sub
rcl
push
sbb
add
das
pop
or
push
mov
or
mul
(bad)
jmp
int3
lock
movs
fld
mov
mov
fild
jecxz
jmp
mov
add
inc
add
or
fmul
ss
and
mov
inc
into
aaa
add
add
movs
jae
jp
lods
dec
inc
fmul
mov
add
inc
mov
adc
push
cmp
cmp
mov
rol
or
pop
mov
std
mov
fcom
cmp
pusha
jne
and
stos
bound
adc
xchg
xor
rcr
lods
mov
daa
aam
jl
lock
add
mov
cs
add
cmp
dec
lods
xor
pop
dec
add
pop
lods
xor
mov
les
mov
xchg
and
and
test
enter
add
mov
jge
push
shr
push
dec
(bad)
cmp
mov
mov
add
in
adc
inc
add
aas
(bad)
or
inc
les
retf
jne
ss
inc
pop
lds
push
int3
push
ja
imul
lds
add
mov
int3
imul
lds
in
in
xor
pop
mov
inc
loopne
push
pusha
mov
test
add
and
mov
fadd
fdiv
adc
mov
mov
test
(bad)
mov
test
cmp
inc
xchg
push
mov
jle
pcmpeqw
aam
or
add
sbb
fadd
xor
nop
inc
and
nop
push
ins
imul
adc
adc
push
pop
mov
js
aam
inc
inc
sbb
inc
inc
js
xor
lahf
fnstsw
loop
sub
dec
das
mov
ds
xchg
push
scas
push
dec
push
mov
dec
mov
sbb
aas
rol
sbb
sti
xchg
dec
inc
sar
xor
fisub
rcr
add
push
inc
(bad)
jo
imul
cwde
mov
jp
pop
ret
add
jl
mov
and
movs
mov
fisttp
jns
pop
push
rcl
loopne
das
and
out
sbb
cwde
sbb
mov
jne
pop
mov
inc
push
mov
test
call
in
(bad)
fdivr
jne
cmp
jle
push
sub
jno
inc
adc
add
adc
cmp
dec
fs
dec
cmp
inc
imul
jnp
pop
cmp
repz
sbb
js
add
test
push
and
dec
xor
mov
push
and
adc
add
pop
adc
aaa
add
sub
sar
mov
and
mov
dec
or
daa
push
shr
add
popa
sbb
jb
(bad)
retf
push
mov
adc
call
fcomp
pushf
add
or
pop
adc
inc
leave
out
ror
sbb
out
(bad)
add
test
icebp
dec
fdiv
retf
inc
cmp
test
loop
jns
fstp
adc
enter
fnsave
push
lea
popf
add
jb
mov
in
mov
cmp
push
xchg
cmp
push
mov
cmp
cmp
push
cmp
and
push
sahf
xor
inc
stos
ror
fs
push
mov
arpl
sub
(bad)
mov
pop
inc
jmp
dec
adc
add
inc
jle
xor
(bad)
out
adc
mov
ret
pop
add
dec
stc
rcr
add
icebp
and
cmp
jge
jne
aam
dec
lea
cs
imul
add
or
data16
xor
test
in
ret
movs
pushf
push
and
fbld
lock
imul
pop
ret
mov
in
add
rol
lods
fst
movs
or
rol
rdpmc
loopne
pop
jmp
in
xchg
sub
xchg
mov
cwde
ret
mov
in
inc
jge
imul
sub
imul
dec
cmp
ds
clc
pusha
dec
add
das
xchg
add
scas
into
mov
int3
sub
test
jle
int3
add
jp
mov
dec
aas
jnp
pop
jae
push
imul
add
aaa
pop
dec
mov
lahf
cmc
jmp
inc
or
push
add
mov
sub
dec
sub
jo
inc
not
ret
repnz
add
push
test
dec
add
fimul
push
push
add
add
adc
std
add
sti
or
mov
dec
dec
sbb
lock
adc
add
jo
in
das
mov
ja
jmp
push
aam
jns
out
loop
lock
pop
ss
inc
jmp
mov
jb
retf
das
mov
and
pop
sbb
or
sub
inc
xchg
les
mov
je
adc
push
in
push
mov
popa
mov
mov
cwde
shr
sub
mov
cmp
jne
lahf
mov
movs
dec
inc
sub
js
and
add
ins
into
test
rcr
add
ds
(bad)
int3
or
cmp
jmp
je
jmp
jnp
daa
loopne
lea
inc
jg
jmp
aam
and
test
add
faddp
pop
pop
push
clc
dec
sbb
inc
dec
cmp
ss
dec
cmp
repz
pop
pop
ins
push
xchg
repz
mov
in
inc
es
push
das
inc
push
sub
(bad)
ja
pop
cli
or
mov
pop
add
push
fst
fnsave
adc
push
mov
cmps
push
je
cmp
cwde
add
adc
jne
movs
mov
stc
hlt
and
int3
jmp
add
sbb
pop
shl
adc
add
pop
pop
jmp
dec
test
add
sbb
and
dec
scas
or
lahf
call
add
push
add
inc
js
or
outs
and
xlat
mov
stos
dec
mov
fisttp
add
sub
jne
mov
mov
fld
pop
dec
inc
adc
outs
sar
push
push
xchg
and
cmp
fisubr
aaa
xor
test
mov
or
test
add
jb
retf
inc
push
jmp
add
(bad)
pusha
lods
mov
mov
jge
add
add
xor
out
pop
lock
sahf
dec
jmp
jp
mov
mov
test
jmp
fild
sub
fild
clc
xchg
test
jmp
add
dec
jne
mov
ja
clc
xor
es
dec
adc
push
fs
(bad)
jmp
or
(bad)
hlt
mov
inc
or
dec
jle
push
int
or
pop
lock
test
jmp
push
xchg
(bad)
adc
xchg
push
dec
inc
inc
mov
popa
push
mov
xchg
cs
lock
sub
es
mov
push
(bad)
push
xchg
(bad)
fst
adc
or
call
sbb
sub
mov
and
pop
sub
sbb
inc
jne
outs
mov
jne
jns
add
(bad)
lgs
jmp
imul
push
add
clc
adc
mov
pop
and
jmp
push
sbb
lock
xor
push
push
aas
dec
lock
mov
mov
add
call
es
cmps
dec
cmps
jae
pusha
inc
dec
call
sbb
rcl
ja
add
add
and
sub
and
and
sbb
add
fs
jbe
jmp
sub
xor
iret
clc
(bad)
push
add
mov
mov
push
adc
adc
and
xchg
sbb
jp
add
adc
xor
pop
scas
cli
mov
enter
mov
and
inc
jne
push
cli
add
cmp
mov
dec
mov
sbb
mov
cmps
es
inc
or
or
cmps
sbb
mov
mov
and
or
sbb
shr
or
and
jge
sbb
int3
adc
fucomp
ins
mov
lock
add
cmp
inc
imul
je
mov
add
or
js
add
aas
lock
add
les
push
fst
pusha
add
pop
retf
adc
jne
jae
push
adc
bnd
push
(bad)
imul
fmulp
outs
mov
cmp
outs
pop
lock
or
nop
arpl
and
adc
jne
or
add
xlat
push
mov
dec
inc
test
mov
ror
and
(bad)
in
mov
cmps
add
aas
call
xor
sbb
pop
mov
stos
cmp
mov
or
mov
popa
xchg
and
push
imul
jge
sub
fld
push
mov
fistp
fld
pusha
add
push
lods
iret
or
fwait
leave
cmps
sahf
adc
add
repz
or
hlt
lock
inc
imul
std
mov
or
push
mov
rol
pop
xchg
pop
mov
mov
ficom
dec
xchg
addr16
dec
add
mov
or
pmulhuw
mov
rol
push
sub
aam
and
sbb
adc
clc
xchg
ja
mov
sbb
jmp
jg
and
and
mov
cmp
mov
in
push
add
sub
jae
or
push
xor
push
inc
jge
or
cmp
sar
dec
sbb
adc
mov
test
fild
inc
push
add
sub
jg
jo
and
jo
sub
not
movs
pop
push
add
push
ins
adc
fnsave
mov
and
mov
test
pop
add
xchg
jns
add
dec
pusha
add
xchg
inc
pop
dec
add
cdq
loopne
push
or
int
shl
fist
(bad)
cmps
and
mov
mov
js
lahf
xchg
push
pop
cmps
and
add
or
cmps
push
push
xor
xor
mov
mov
fadd
xchg
cmp
mov
cli
pop
mov
adc
jl
sbb
sar
mov
dec
mov
mov
xchg
nop
das
mov
mov
and
imul
jecxz
dec
push
enter
xchg
shr
xchg
mov
add
mov
adc
mov
mov
pop
xor
or
mov
adc
movs
outs
pop
nop
or
cmps
sbb
inc
add
faddp
cmp
(bad)
jp
stc
inc
or
inc
sti
push
rcr
push
cli
sub
std
dec
pop
or
clc
push
ja
push
dec
xrelease
cmps
push
cs
jge
jg
mov
jle
inc
lea
add
popa
or
js
dec
mov
or
mov
add
and
inc
es
mov
sub
neg
dec
or
pop
ins
outs
mov
inc
jb
inc
push
lock
scas
mov
sar
and
rol
add
push
push
xor
enter
(bad)
iret
cmp
push
jbe
jo
sti
sub
xor
sar
and
int3
cmp
scas
rcr
shl
jg
or
mov
js
(bad)
adc
(bad)
jge
out
fistp
rcr
loopne
cmp
add
in
inc
icebp
xor
test
mov
pop
enter
mov
daa
inc
test
mov
xchg
inc
push
push
repnz
sub
add
stos
mov
jmp
out
imul
mov
add
inc
or
das
push
mov
clc
pop
js
ror
sbb
aam
dec
and
lods
rol
mov
movs
pop
cmp
xchg
sbb
sbb
adc
jns
pop
jae
sbb
cmp
sub
jo
(bad)
repnz
xor
adc
push
push
cdq
ret
movs
xor
jae
cs
in
ss
add
movs
adc
nop
add
je
adc
add
test
or
mov
push
or
and
aad
jae
pushf
mov
inc
or
sub
add
mov
call
push
daa
push
push
xor
stos
push
pushf
xor
idiv
mov
das
and
push
cmc
ror
test
adc
out
icebp
push
mov
pop
cmp
jl
out
push
and
pusha
dec
pusha
imul
enter
or
xor
add
adc
adc
jns
pop
or
int
jecxz
and
test
lock
icebp
push
js
and
cmps
ja
(bad)
loopne
push
cmc
cli
add
adc
out
mov
pushf
into
mov
xchg
out
cwde
sbb
inc
popf
or
clc
or
add
sbb
jo
dec
imul
movzx
in
add
rol
pop
adc
daa
std
dec
dec
mov
dec
lahf
add
push
test
std
fwait
and
push
or
cmp
addr16
mov
push
punpckhbw
in
jmp
jg
and
add
into
push
sub
js
inc
lods
xor
sub
mov
outs
push
ror
pop
add
xor
lods
imul
pop
push
outs
clc
(bad)
push
inc
add
sbb
push
push
hlt
js
in
push
imul
sbb
adc
or
mov
push
push
jbe
and
mov
and
inc
sbb
repz
mov
fcom
push
out
ss
xlat
dec
sti
sti
loop
lds
adc
add
mov
add
iret
push
mov
or
adc
int3
add
shl
inc
and
dec
and
sbb
push
sub
pop
sbb
lahf
aaa
mov
loopne
sbb
add
outs
push
mov
dec
inc
or
mov
loopne
and
mov
mov
mov
lds
sub
jmp
jecxz
fild
sbb
push
repnz
sub
pop
mov
repz
inc
fimul
jmp
or
mov
push
and
popf
and
mov
ret
ret
imul
loopne
sbb
aam
mov
mov
cmps
dec
leave
jne
add
(bad)
ror
cmp
out
sub
scas
in
repnz
mov
push
outs
cmp
enter
mov
loopne
push
push
pop
fdivr
jmp
in
out
aam
ror
inc
adc
ret
dec
(bad)
cmp
sub
and
xor
shld
dec
or
add
ins
stos
and
add
ret
sbb
or
inc
cmp
stc
aam
xchg
rcl
or
pop
sbb
and
test
(bad)
xor
xchg
test
hlt
sub
sbb
aas
in
fdivr
dec
cli
or
add
jmp
mov
or
popa
add
hlt
adc
(bad)
mov
mov
cmc
and
xor
and
cmc
pop
mov
xchg
pop
leave
mov
xor
add
xlat
cmc
aam
or
gs
fsubr
push
mov
or
and
mov
je
or
cmp
inc
mov
mov
push
sar
dec
or
pop
pop
sbb
in
leave
loope
jae
(bad)
and
cmp
std
inc
fist
push
ror
xchg
lods
in
pop
push
ins
fwait
mov
xchg
push
mov
pusha
mov
lahf
les
inc
ret
dec
cmp
movs
add
les
sbb
(bad)
out
cmp
je
icebp
addr16
out
les
mov
enter
lea
pop
jmp
add
adc
and
mov
inc
ret
int
mov
sub
loop
xor
xchg
les
test
mov
push
dec
nop
pop
pop
xchg
and
adc
nop
inc
push
in
shl
not
dec
je
push
dec
jg
or
push
cmp
(bad)
pop
jne
mov
xor
xor
add
push
jae
nop
arpl
add
and
fdivr
add
outs
mov
gs
push
cmp
fild
mov
cmp
repz
pop
jle
sahf
scas
pop
and
ins
scas
test
mov
mov
pop
add
or
nop
or
and
movntps
jo
bound
sbb
mov
pop
or
(bad)
cmp
mov
repnz
add
cmp
nop
and
cli
pop
ss
push
test
sbb
test
add
inc
rol
inc
(bad)
into
and
arpl
jb
push
jb
adc
shl
jmp
mov
ret
mov
sub
or
push
adc
inc
call
js
into
add
pop
mov
jne
push
sbb
adc
push
jnp
and
pop
adc
push
sub
js
mov
daa
arpl
sbb
mov
test
or
jge
fild
or
pop
pop
pop
add
repnz
loope
push
sbb
mov
sbb
push
jecxz
pop
push
xor
inc
push
sbb
fucomip
iret
sub
xchg
sahf
pcmpeqb
xchg
(bad)
sbb
(bad)
repz
sbb
push
les
cmp
adc
adc
mov
inc
div
out
mov
je
add
or
add
pop
popf
add
loopne
fstp
add
rol
and
loop
icebp
and
push
jmp
add
xchg
adc
arpl
cwde
test
and
ret
jge
pop
inc
stc
inc
jle
nop
loope
add
leave
mov
gs
dec
xlat
and
daa
adc
call
xor
fcomip
mov
and
push
shr
inc
pop
fiadd
test
es
pop
mov
cmp
mov
add
dec
mov
int3
cmp
mov
push
cmp
data16
mov
data16
fcomip
clc
in
dec
jmp
mov
and
and
out
fs
push
xchg
mov
in
or
sbb
out
push
xchg
xchg
push
mov
fs
push
(bad)
addr16
in
imul
mov
jmp
fsub
sub
sub
iret
add
mov
lods
add
jmp
adc
shl
icebp
dec
(bad)
or
mov
sbb
sbb
sbb
sub
xchg
mov
xchg
dec
retf
lea
sbb
sub
sar
in
mov
movs
pop
js
add
jmp
xor
pop
stos
inc
daa
fwait
push
je
pop
jns
sub
adc
test
cdq
mov
add
fs
sub
adc
aaa
push
xchg
aas
push
dec
je
push
push
bound
sbb
ret
dec
adc
xor
test
mov
pop
mov
lods
add
pop
dec
xchg
ja
test
inc
inc
jns
shr
pushf
les
mov
lds
nop
js
lds
cmp
sub
mov
or
push
and
loopne
je
add
test
imul
jnp
jne
add
sub
loop
lahf
sbb
add
sub
ret
xlat
mov
sbb
inc
pop
in
and
test
add
rcl
js
xor
hlt
or
inc
repz
adc
or
adc
test
loop
sub
push
iret
inc
test
jo
sub
push
push
test
adc
sub
add
dec
adc
or
and
pop
adc
shr
add
inc
cmp
enter
adc
inc
mov
imul
sbb
enter
js
std
inc
iret
mov
dec
or
jno
in
push
mov
mov
test
mov
es
shl
enter
add
mov
add
(bad)
ja
(bad)
cmp
push
pop
hlt
xchg
sbb
pop
sbb
xor
and
and
enter
rol
sbb
jecxz
mov
lods
sbb
hlt
mov
push
mov
xchg
add
rcl
inc
icebp
mov
dec
sub
test
sahf
gs
sbb
test
cmps
add
outs
arpl
xchg
xchg
jmp
push
enter
and
push
shl
inc
mov
mov
repnz
pop
mov
sbb
jns
xchg
dec
mov
pop
mov
cwde
xlat
push
(bad)
outs
cs
xor
enter
or
mov
ror
mov
outs
loopne
push
popa
xor
ins
pop
sbb
inc
mov
xlat
(bad)
dec
push
cmp
mov
add
aaa
cmc
and
mov
and
das
jmp
mov
in
fs
xchg
nop
test
js
rcr
(bad)
movs
and
psadbw
and
add
cmp
push
pusha
sbb
xor
mov
pop
aas
add
lock
repnz
jp
cmp
icebp
add
cmp
in
xchg
sbb
cmove
lock
cmps
jae
arpl
lea
xor
bound
aad
mov
shl
mov
inc
fisttp
dec
neg
jns
dec
in
add
in
scas
hlt
lock
lods
sbb
pusha
in
add
push
and
pop
or
out
popf
and
mov
jo
cmp
xor
aam
adc
call
push
addr16
repz
jp
mov
fisttp
inc
pop
stos
call
inc
in
sub
dec
and
push
pop
repz
xor
mov
xor
cmp
inc
lock
add
mov
xor
adc
js
xor
add
xor
push
lea
inc
sbb
and
enter
ret
and
loope
push
cmp
jno
adc
or
mov
mov
lods
ins
sbb
mov
imul
and
add
jecxz
(bad)
clc
js
push
mov
jge
test
push
fldenv
jmp
push
ror
or
sub
bound
rcl
jo
push
mov
xor
stc
test
add
add
call
test
in
std
cmc
xchg
jg
in
inc
mov
imul
jg
in
pop
or
adc
mov
push
(bad)
push
mov
pop
fst
clc
inc
mov
push
cld
push
call
out
add
jnp
jp
jmp
push
pop
and
add
adc
sub
cli
hlt
sbb
cmp
mov
add
push
call
rcl
shl
mov
or
fbld
push
pusha
add
sbb
shr
cmp
fild
cmp
adc
pop
xchg
mov
jnp
jo
lds
dec
push
fldenv
(bad)
inc
cmp
repz
movzx
mov
inc
cmp
jne
xor
stc
in
pop
pop
imul
sbb
(bad)
jb
inc
mov
inc
fcomp
xchg
lea
inc
cmp
popf
fdivr
jne
pop
pop
add
xchg
jo
cmp
sub
jnp
mov
out
push
cs
add
add
(bad)
(bad)
push
(bad)
add
ds
pop
add
sbb
js
es
sbb
push
in
sub
cmp
cwde
dec
cld
cdq
dec
xchg
rcl
fldcw
sbb
test
loopne
push
xchg
sub
push
hlt
jb
sbb
sbb
lock
pushf
jl
shr
xor
in
adc
enter
popa
mov
cmp
test
je
popa
pop
add
sub
bound
and
add
xchg
les
inc
and
adc
out
dec
xor
jne
add
sub
cmps
push
push
sbb
cmp
mov
data16
sub
(bad)
stos
adc
cmp
sub
sub
mov
outs
or
jae
pop
adc
xor
ret
call
loopne
aam
inc
sar
into
ss
xor
jge
mov
sub
push
mov
sub
or
ins
call
cmp
dec
clc
rol
sub
adc
add
or
retf
scas
leave
pop
adc
ror
enter
ja
pop
xchg
cmp
gs
inc
mov
dec
pop
cdq
adc
lock
in
push
in
sub
sub
ins
push
popa
add
mov
sub
rcr
jbe
into
or
shl
or
mov
loopne
or
leave
xchg
inc
and
aad
cmp
mov
dec
pop
xlat
push
push
nop
lar
out
mov
cmp
or
xor
rcr
pop
mov
sub
test
add
and
or
mov
inc
adc
xor
dec
sbb
add
mov
and
or
push
gs
xchg
mov
xchg
push
jns
in
inc
lods
push
and
pop
or
xchg
mov
nop
aas
jo
inc
mov
push
jne
nop
pop
cmp
xlat
push
rcr
mov
sub
add
mov
ret
xchg
or
stc
xchg
fadd
pop
stc
(bad)
cmp
bound
sbb
push
pop
clc
aad
ficomp
cmp
adc
add
push
cwde
pop
test
sti
jbe
dec
push
stc
test
sub
test
push
call
(bad)
in
loopne
ficom
xchg
xchg
inc
inc
xchg
cmp
add
lock
mov
in
add
sbb
(bad)
and
add
mov
or
pop
ss
add
add
repnz
cld
cmp
mov
inc
cs
sub
mov
pop
sub
adc
in
popf
cmp
(bad)
mov
cmp
jae
push
mov
xchg
and
fs
add
push
cmp
jne
pusha
shr
or
(bad)
stos
mov
xor
and
jmp
cmp
in
or
ins
dec
das
vmread
or
stc
push
cmps
fcmovb
retf
push
jmp
or
and
adc
pop
jge
mov
or
hlt
xor
fdiv
jne
and
xchg
call
ret
inc
cwde
add
ss
rcr
cmp
std
pop
or
dec
sub
jl
inc
lea
jne
adc
xchg
inc
shl
push
fcom
dec
sbb
cmps
mov
inc
mov
sub
leave
jecxz
icebp
idiv
add
jb
out
jg
xchg
push
cmp
add
(bad)
pop
cmp
add
outs
inc
jg
xor
pop
add
push
ret
sub
push
mov
push
add
lods
in
and
cmp
or
or
mov
sbb
cld
ror
rol
xlat
fldenv
loop
or
mov
in
jns
leave
xchg
(bad)
or
xchg
(bad)
xchg
inc
ret
test
jne
mov
add
mov
mov
adc
jmp
loope
out
mov
and
daa
cli
add
loop
(bad)
add
dec
dec
sbb
fwait
xchg
pushf
mov
sub
sbb
dec
xor
mov
or
adc
aad
cmp
jmp
inc
xchg
jb
sub
idiv
push
idiv
mov
div
not
shr
shl
push
or
add
lea
adc
lea
(bad)
jle
sub
mov
and
(bad)
add
in
ja
aaa
sub
in
pushf
enter
mov
mov
nop
cmc
jne
and
dec
cmp
jbe
stos
or
add
neg
lods
or
mov
dec
fld
pop
outs
icebp
test
adc
shl
mov
sub
cdq
push
pop
push
js
cmp
cmp
inc
adc
or
or
leave
pop
xor
adc
jg
inc
or
or
push
sub
or
mov
sub
stc
inc
ds
into
adc
into
pop
call
push
and
sbb
je
dec
push
pop
inc
lods
inc
int3
and
ret
cmp
push
adc
dec
outs
xor
stos
out
rol
pop
xlat
and
inc
bound
test
in
cs
or
loopne
cs
add
add
lds
cli
mov
add
cmp
or
prefetcht2
in
lds
pop
mov
add
push
mov
cmp
adc
test
add
imul
mov
adc
or
inc
sub
nop
pop
push
mov
lods
mov
mov
addr16
mov
in
push
jb
test
add
adc
mov
sbb
inc
sub
or
bound
add
mov
adc
sbb
sbb
sbb
ins
bound
sbb
add
adc
xchg
(bad)
mov
xor
rol
inc
push
add
out
clc
add
enter
dec
xor
movs
mov
dec
inc
test
dec
adc
dec
adc
add
xchg
mov
cmps
fadd
dec
xor
mov
inc
push
xor
xchg
leave
or
xchg
push
xor
cmps
cmovne
dec
and
adc
push
xor
and
lds
sbb
nop
test
xor
cmps
xchg
sbb
inc
add
push
pop
push
xor
stos
push
ret
pop
xor
add
and
loopne
in
sub
push
ins
stos
shr
pop
lea
mov
add
(bad)
and
pop
inc
or
lea
(bad)
iret
(bad)
ret
mov
add
movs
mov
mov
or
cmc
clc
push
loopne
inc
div
inc
std
add
into
out
cmp
outs
xor
inc
cld
push
adc
cmp
or
je
outs
mov
aaa
pushw
or
adc
adc
in
sub
and
add
sub
mov
inc
(bad)
cmp
ret
cmp
mov
jns
mov
clc
or
cmp
pusha
addr16
push
inc
push
cdq
(bad)
iret
repz
dec
cmp
or
clc
push
push
inc
call
push
lea
or
sbb
ins
aad
ss
fdivr
sbb
or
aam
add
pop
stos
mov
rol
sbb
aam
mov
pop
fcomp
jge
xor
clc
das
sub
sar
es
push
inc
jmp
push
aaa
pusha
aam
loopne
scas
jne
add
sbb
loopne
in
sub
sbb
jl
ret
jp
sahf
push
mov
js
iret
into
inc
push
mov
inc
js
xchg
sbb
imul
xor
mov
rol
test
mov
faddp
mov
stos
push
arpl
pop
imul
in
dec
xor
fild
jns
jmp
sbb
pop
add
push
push
add
jg
or
aad
shl
inc
or
aas
iret
rol
sub
rol
or
std
iret
loop
movs
mov
mov
loopne
add
test
pop
or
lock
rol
call
or
sub
jb
push
lods
add
les
push
fisubr
pop
lods
ja
xor
push
cmp
rol
aam
out
sub
mov
nop
fcomp
sub
sbb
pop
push
add
mov
cmp
and
sub
mov
add
fiadd
cwde
fiadd
sbb
push
cmp
add
lods
pop
popa
xor
or
or
inc
(bad)
sub
xor
imul
ss
ins
out
punpcklwd
gs
mov
jge
add
sti
or
dec
mov
movs
push
pop
pop
push
shr
(bad)
fs
aam
sub
mov
xchg
(bad)
pushf
push
call
and
rcl
or
sar
or
pop
pop
add
shl
push
and
xor
xchg
faddp
push
push
mov
fstp
movs
cs
adc
push
add
or
or
repz
jmp
test
and
fbld
nop
adc
shl
jge
pushf
cs
rcl
shr
pop
jge
dec
push
daa
mov
mov
dec
sub
or
push
dec
sbb
push
add
and
jb
leave
or
pop
inc
adc
sbb
out
cmp
and
lahf
xchg
xchg
xchg
pop
push
xchg
test
sbb
in
je
movs
jns
push
dec
pop
cs
imul
in
std
push
inc
push
and
or
or
and
test
arpl
daa
sti
sbb
xor
mov
cmp
pop
or
sbb
cmp
mov
arpl
xor
add
cmp
add
jmp
ss
sbb
je
popf
sub
aaa
sbb
and
push
push
rol
cmp
pop
jmp
pop
adc
push
je
shl
out
push
icebp
pop
jecxz
or
enter
pop
xor
xchg
xchg
cmp
and
push
sub
jl
enter
imul
icebp
mov
sbb
pop
xor
dec
pusha
pushf
push
mov
das
jmp
mov
sub
sub
dec
movups
and
adc
sbb
jae
sar
loope
fistp
add
mov
cmp
inc
sbb
jge
push
or
stc
fistp
pop
mov
(bad)
in
movs
mov
aaa
shl
test
adc
iret
popa
shl
fisubr
icebp
push
push
jne
or
pop
or
pop
sbb
iret
lahf
mov
cmps
call
push
sub
cmps
cmp
fwait
dec
call
and
pop
mov
aaa
icebp
shl
add
xchg
inc
pop
aaa
fsubr
add
setb
add
mov
or
and
pop
xor
aam
push
and
rcl
inc
pop
pop
push
push
inc
leave
pop
nop
xchg
add
shl
in
inc
xchg
mov
dec
or
xchg
push
movs
nop
mov
mov
(bad)
(bad)
dec
add
or
dec
repnz
add
pop
pop
cmp
mov
and
or
cmc
fcomp
mov
pop
dec
push
fcom
push
es
pop
les
daa
or
pop
lahf
and
and
daa
lds
nop
mov
test
in
iret
pop
adc
push
mov
cdq
push
add
inc
sub
pop
jg
mov
mov
push
add
sub
push
push
sub
add
movs
sbb
pop
shl
stos
cmp
shl
pop
and
rol
adc
xchg
in
adc
loopne
jb
scas
bound
xor
(bad)
inc
and
cmps
mov
paddd
or
inc
adc
dec
cmp
adc
(bad)
or
adc
sbb
push
jno
outs
xchg
adc
(bad)
push
sub
mov
pop
add
push
add
dec
inc
and
aaa
fadd
out
scas
push
loope
mov
cvtpi2ps
adc
data16
add
or
push
add
push
lahf
push
ror
sahf
scas
pop
je
loop
das
xor
rcr
inc
fild
pop
dec
arpl
jns
xchg
sub
pop
sub
sbb
add
sub
and
repnz
daa
sub
aas
add
rol
sbb
test
arpl
dec
or
test
scas
loopne
movs
dec
in
lock
aad
dec
test
inc
inc
imul
(bad)
imul
adc
jmp
or
lea
jo
add
push
add
dec
sub
rol
add
jae
and
push
(bad)
in
lods
mov
rol
lea
push
adc
pop
dec
hlt
add
mov
dec
shl
jmp
sbb
xor
xchg
xchg
mov
cmp
iret
jmp
mov
xor
mov
push
fadd
fnstcw
lds
push
daa
retf
push
add
and
sub
daa
inc
sbb
mov
add
dec
adc
push
lods
inc
inc
stos
popa
aam
mov
pop
mov
sub
mov
xor
cmp
push
adc
pop
jmp
push
shl
or
dec
add
add
xchg
push
add
pop
lahf
aas
pop
cmovo
enter
sbb
pop
fisubr
push
test
adc
scas
push
push
pop
pop
sti
push
mov
push
and
stos
push
xor
pop
jbe
add
in
pushf
pushf
dec
xor
xor
bound
mov
mov
jae
sbb
stos
ja
and
or
jno
ror
cs
push
cs
mov
inc
pop
cld
clc
adc
add
adc
push
dec
push
mov
jecxz
pop
sub
inc
add
stos
add
and
adc
add
add
lods
jmp
out
scas
fsub
je
or
clc
inc
mov
sar
push
inc
fdivr
add
rol
enter
or
not
(bad)
rol
(bad)
ins
or
and
bound
xchg
(bad)
lahf
xchg
adc
pushf
pop
fsubr
out
and
dec
pmaxsw
adc
adc
sbb
sbb
leave
outs
outs
aaa
pushf
pop
inc
xchg
out
mov
(bad)
arpl
sub
sbb
loopne
jmp
or
mov
sbb
in
push
jns
or
into
icebp
or
sub
adc
adc
push
(bad)
shl
es
or
cld
cdq
jo
jno
lea
inc
mov
loop
add
adc
add
mov
jmp
fnstsw
hlt
pop
pop
jmp
bound
sti
or
jmp
sub
sbb
fsubr
add
add
sub
add
and
test
inc
ds
adc
jmp
or
stos
mov
je
mov
and
add
sub
lahf
xor
pushf
not
or
or
jl
lods
imul
cmps
or
test
push
or
inc
inc
pop
adc
mov
add
fldenv
add
adc
push
loope
mov
add
add
(bad)
pop
adc
sbb
adc
(bad)
jmp
ins
loopne
inc
adc
adc
and
outs
add
cmp
sub
out
sbb
adc
xchg
mov
xchg
popa
and
adc
or
ins
and
daa
popa
pop
mov
jmp
rcl
mov
dec
adc
dec
push
or
inc
out
dec
jns
bound
mov
xor
jmp
int3
and
sub
adc
inc
mov
lods
cwde
stos
or
cmc
ret
add
xchg
stos
jg
outs
sub
fld
push
adc
rol
daa
dec
sbb
or
adc
and
iret
out
lods
dec
test
pop
jg
ja
and
add
mul
es
or
repz
push
adc
adc
pop
mov
ret
mov
add
push
sub
adc
nop
mov
push
add
xor
mov
ficomp
jo
xchg
lea
inc
popf
adc
sbb
les
shl
and
xor
ss
in
cwde
scas
xchg
push
adc
jno
and
pusha
xor
add
adc
and
dec
mov
jmp
xor
inc
test
add
mov
les
fwait
outs
sub
add
dec
or
or
push
pop
je
lods
push
mov
or
xchg
repz
clc
or
inc
sub
sar
gs
add
sahf
test
out
xor
sbb
adc
inc
push
add
add
push
(bad)
xor
or
mov
or
add
mov
pop
inc
lahf
ret
out
pop
cdq
test
ret
mov
js
mov
call
pop
mov
adc
sahf
out
mov
mov
jmp
jg
adc
ja
sub
and
pop
(bad)
in
adc
aas
push
push
add
and
test
clc
shl
shl
test
fadd
xchg
xchg
or
mov
push
cmp
cmp
fwait
xchg
hlt
mov
dec
pusha
mov
xchg
sub
dec
jo
rol
jg
or
and
mov
cwde
push
test
je
dec
inc
mov
pop
push
jl
push
cmp
bound
push
call
add
jbe
mov
push
mov
or
sti
iret
mov
ja
xlat
ds
test
fld
outs
push
les
(bad)
xchg
test
mov
mov
and
mov
and
or
mov
je
push
mov
xor
enter
add
test
inc
add
inc
enter
pop
or
test
and
js
inc
xor
jne
mov
jl
mov
sub
in
out
add
cmp
js
inc
js
sub
push
inc
inc
js
inc
js
mov
inc
inc
js
mov
adc
inc
js
inc
js
add
jno
js
in
and
in
lea
adc
or
sbb
cmp
mov
and
push
or
push
and
sbb
and
das
push
xor
and
dec
push
cmp
inc
inc
mov
in
mov
dec
mov
dec
push
mov
and
enter
adc
repnz
cmp
mov
push
test
pop
repnz
and
push
add
adc
lea
cmp
mov
xchg
push
sub
push
add
aaa
mov
add
(bad)
retf
cmp
pop
or
mov
pop
jo
xchg
pop
aam
add
mov
(bad)
push
mov
sar
pop
inc
pusha
sub
dec
imul
test
fisubr
stos
aaa
lods
rol
fnsave
add
scas
and
out
add
out
loope
(bad)
pop
jae
inc
mov
push
out
add
sub
lahf
(bad)
lods
inc
pusha
sub
pop
or
jecxz
sub
loop
or
jb
outs
add
(bad)
push
push
mov
(bad)
iret
add
or
jo
ret
fisub
aam
pop
pop
add
xchg
xor
out
jl
inc
clc
inc
sub
js
dec
adc
adc
mov
leave
and
or
fidivr
jae
adc
add
inc
cmp
cdq
add
test
mov
xor
inc
sub
sub
test
or
sub
sbb
adc
imul
push
dec
sar
les
mov
push
inc
jmp
stc
ret
(bad)
out
mov
jp
je
mov
sbb
nop
lock
setne
push
or
mov
and
push
sub
je
jmp
mov
jb
add
push
adc
xchg
mov
mov
pop
pop
pop
pop
ret
cmps
clc
dec
jmp
in
cmps
add
add
popf
or
or
push
mov
ret
push
ja
iret
repz
sub
les
push
out
add
xor
cmc
paddb
mov
jmp
or
sbb
or
test
test
clc
imul
xor
xrelease
sbb
push
popa
pop
jl
push
fist
sub
jge
push
or
adc
in
or
lock
pop
jl
ja
xor
dec
mov
dec
fmul
jle
clc
cmp
jmp
nop
or
push
add
fidiv
shl
es
pop
ror
mov
iret
inc
sahf
imul
daa
movzx
dec
lea
push
xchg
fwait
loop
pop
jmp
push
push
fsub
sahf
out
ds
cmps
shl
inc
jns
ins
mov
sbb
dec
retf
push
sbb
add
push
add
xor
dec
push
movs
imul
xor
sbb
and
add
sub
add
imul
bound
scas
push
(bad)
dec
push
movs
push
pushf
mov
je
mov
push
jbe
jecxz
push
fs
aas
push
cld
sub
inc
cmp
jne
mov
jmp
mov
popa
push
jae
movs
add
adc
ss
loop
push
test
test
and
bound
lea
pop
rol
int3
mov
inc
push
pusha
dec
or
mov
push
sub
push
push
movs
ins
xchg
arpl
je
push
cmp
push
popa
div
sahf
ins
or
nop
add
cwde
push
sbb
sbb
shufps
test
out
add
pusha
aam
mov
repnz
das
gs
shr
add
adc
xchg
lea
(bad)
stos
sub
dec
shr
ret
xchg
mov
add
in
mov
jns
daa
les
test
imul
jns
or
inc
push
push
adc
and
cmp
fdivr
jl
xor
cwde
inc
mov
inc
lods
xor
ja
pop
mov
jne
inc
cmp
repnz
(bad)
(bad)
sub
jae
mov
adc
cvttps2pi
dec
add
test
pop
add
or
or
loopne
and
sbb
adc
sub
inc
ret
pusha
data16
test
or
or
inc
int
sub
mov
mov
movups
jns
out
sbb
es
fbstp
or
sub
adc
movs
(bad)
and
add
sbb
push
in
pop
sar
pop
xor
lds
inc
test
and
cmp
loope
outs
aas
inc
push
cs
push
iret
repz
push
xor
cmp
fdiv
jmp
cmp
dec
xchg
inc
push
inc
sbb
cmp
cmp
inc
in
adc
jmp
cmps
jmp
xor
xor
bound
push
aaa
add
add
push
dec
or
and
dec
push
xchg
pop
xchg
sub
sti
cmp
std
sar
lea
ins
xor
mov
jne
push
dec
cmp
pop
clc
fnstenv
jp
xchg
ret
stos
push
lahf
je
outs
loopne
cld
(bad)
jmp
and
lea
imul
xor
(bad)
in
out
aam
mov
jle
or
int3
push
xchg
mov
cwde
sub
rol
or
adc
in
or
push
imul
mov
pop
shr
jnp
ja
out
push
idiv
adc
adc
or
sbb
xchg
and
mov
and
and
adc
add
imul
cld
test
or
mov
nop
daa
cmp
popa
push
adc
pop
pop
sub
sahf
xor
dec
(bad)
rol
adc
push
cld
xchg
or
ret
push
sub
imul
or
and
inc
adc
(bad)
lahf
jnp
arpl
cmp
jne
mov
cwde
add
ins
mov
test
push
loopne
mov
sub
popa
ss
cmp
jno
cmp
or
icebp
loopne
jne
xchg
push
ds
loope
(bad)
inc
xchg
dec
test
movhps
mov
addr16
add
lock
mov
in
add
nop
mov
out
push
loopne
pop
xchg
xchg
push
dec
xchg
sbb
sbb
xchg
cmp
push
sub
cmp
enter
sete
xor
enter
les
or
sbb
loop
add
cmp
sbb
jmp
test
add
outs
in
shl
or
inc
shl
xor
add
and
add
inc
add
dec
push
ror
fist
inc
repnz
mov
fiadd
add
or
jb
jmp
pusha
out
xchg
and
adc
punpcklwd
cmp
dec
in
xchg
xor
test
mov
call
adc
pop
mov
push
mov
movs
fisttp
xchg
test
ret
dec
cmp
test
lods
lock
and
iret
jo
jo
dec
and
and
add
repz
cdq
fs
pop
cmp
and
pop
push
bound
jg
emms
xchg
xchg
jmp
rol
pop
push
lods
shr
pop
sbb
and
loopne
mov
pusha
jg
dec
add
das
jae
call
pop
and
or
push
popa
test
push
adc
mov
pop
push
js
je
push
nop
lods
inc
adc
loope
loope
dec
bsf
inc
cmp
movs
mov
inc
ret
sub
inc
retf
adc
not
mov
cwde
cs
cwde
movs
mov
fcmovnb
stos
sbb
inc
cmp
or
outs
xchg
mov
js
outs
sub
or
pusha
pusha
and
sbb
movs
mov
stos
or
pop
add
int3
leave
push
inc
xor
rol
dec
dec
xchg
xor
mov
adc
and
push
dec
lahf
xor
adc
arpl
loopne
inc
xor
ds
cld
(bad)
fs
sbb
mov
dec
pusha
imul
clc
xor
fnstsw
pop
jno
mov
xlat
jmp
mov
add
sub
enter
add
stos
sub
popf
or
pop
inc
psubw
test
js
adc
jmp
fs
xor
jae
jp
push
pusha
adc
sub
sbb
(bad)
xlat
and
mov
or
xchg
jge
and
add
push
pushf
add
xlat
and
and
dec
push
lahf
adc
sub
pop
xchg
retf
and
test
arpl
push
cdq
mov
xchg
lods
pushf
loopne
pop
and
jb
sub
je
pop
jle
popa
pop
sbb
and
adc
je
and
pop
pop
jno
arpl
inc
mov
pop
lea
push
popf
mov
call
pop
clc
add
or
or
push
dec
je
sbb
repnz
jmp
subps
or
in
pop
je
mov
jl
mov
std
xor
inc
add
sahf
cmps
test
xor
add
and
dec
or
adc
push
add
pop
add
movs
lds
push
pop
push
push
mov
js
div
loope
xchg
rol
jne
push
or
xor
enter
and
push
xor
add
shl
packuswb
popf
add
or
ss
ret
(bad)
leave
push
pop
mov
inc
sub
daa
or
add
cli
mov
in
pusha
mov
sub
ror
movs
jl
mov
jmp
sbb
push
jmp
in
aaa
adc
or
add
test
pop
sbb
gs
add
out
push
pop
jo
and
or
push
jp
mov
inc
and
mov
add
jne
xchg
and
(bad)
or
gs
(bad)
rol
adc
sub
sbb
call
(bad)
loopne
sbb
mov
sub
and
test
push
xchg
dec
xchg
outs
mov
dec
ud2
push
pop
xor
push
adc
jmp
or
sbb
mov
mov
sbb
xor
movs
jge
xor
push
test
repnz
clc
ret
adc
mov
cmp
popa
ss
mov
mov
xchg
xchg
fwait
popa
add
int3
add
fiadd
stos
push
mov
lods
pop
add
repz
push
jbe
and
jb
imul
push
or
jmp
mov
and
add
jp
lods
lahf
sbb
jmp
ret
or
jp
mov
(bad)
or
loopne
repnz
int
add
adc
cmps
push
cdq
and
add
or
sbb
xchg
inc
sub
stc
icebp
fcomp
ja
iret
jmp
mov
adc
pop
sbb
lock
adc
or
pop
sbb
push
nop
imul
sub
scas
(bad)
out
xchg
pusha
fcom
mov
cmovs
adc
mov
sbb
push
add
or
jno
mov
xchg
xchg
adc
sti
add
jb
je
jns
xchg
jmp
inc
cmps
adc
mov
jl
push
hlt
into
or
jns
mov
push
cmc
or
out
test
movs
ss
push
push
push
jg
xchg
push
lods
push
(bad)
fcmovnb
and
dec
and
sbb
or
add
es
or
pushf
pushf
and
pop
sbb
int3
add
mov
push
gs
jns
out
out
mov
js
ret
fucomip
jbe
test
(bad)
jmp
int
xchg
jmp
(bad)
jmp
shr
mov
dec
cmp
pushf
or
xchg
xchg
test
lods
arpl
mov
add
int
(bad)
rcl
or
addr16
or
push
lock
out
dec
in
xor
add
les
xor
(bad)
adc
inc
movs
or
out
or
sbb
shl
das
inc
jo
loope
dec
pop
push
or
mov
mov
adc
rcr
pop
sub
mov
push
add
das
push
leave
shr
aaa
movntq
jecxz
mov
imul
test
mov
and
jge
push
jo
faddp
adc
jmp
inc
pop
daa
pop
sbb
cmc
cmp
js
not
adc
push
cmp
adc
ror
sti
add
sbb
dec
les
and
jp
inc
or
xor
int
mov
hlt
stos
dec
out
mov
sub
push
out
(bad)
jns
out
add
sub
(bad)
jns
out
dec
push
push
test
fadd
inc
stos
mov
pop
xor
jmp
jmp
mov
pop
das
inc
jo
jge
fistp
ss
xor
cs
les
out
sbb
inc
or
push
adc
jnp
inc
xor
mov
xchg
dec
inc
icebp
push
push
jmp
jecxz
dec
test
add
mov
outs
xor
sub
call
fs
pop
inc
inc
push
add
ins
add
mov
cmp
(bad)
push
fcmovnu
pop
mov
push
cwde
inc
mov
pop
pop
add
mov
das
pop
sub
movs
scas
(bad)
aas
movs
xchg
dec
aad
clc
add
iret
repz
out
push
ins
xchg
mov
cmp
scas
int
jnp
or
sbb
loopne
sbb
push
pop
push
sahf
cld
clc
push
out
add
scas
(bad)
xor
and
xchg
scas
dec
popf
mov
jne
mov
mov
jmp
mov
push
mov
push
mov
or
or
cmp
dec
ret
inc
push
jecxz
cmp
add
sbb
adc
push
daa
outs
xor
sub
scas
inc
push
enter
mov
cmps
pop
scas
cmps
push
sbb
pop
sub
mov
mov
xor
xchg
loop
setl
imul
mov
mov
ins
and
and
inc
cld
jg
in
fidiv
cmp
jne
mov
cmp
inc
or
movs
ja
or
pop
push
adc
iret
lahf
enter
and
add
repz
icebp
cmp
mov
push
bound
enter
mov
lods
lock
in
adc
cdq
cmp
je
mov
fs
push
mov
and
or
inc
or
mov
add
shl
push
pop
inc
cmp
sahf
ja
mov
ja
xor
xor
push
xor
sbb
jns
push
pop
jmp
mov
xor
enter
mov
adc
cmovs
or
fmul
lar
popa
dec
enter
inc
jno
arpl
and
jecxz
fmul
add
add
xor
aas
add
sbb
or
jmp
inc
adc
dec
mov
test
pop
bound
dec
push
cmc
adc
and
mov
push
imul
pop
pop
daa
stc
and
mov
xchg
ror
es
jg
inc
bound
lock
adc
add
xor
loopne
adc
clc
jb
cmp
or
lock
imul
shl
add
or
mov
fs
add
push
jmp
shl
and
inc
fld
or
test
jmp
add
shr
loopne
outs
inc
push
jb
jae
rol
out
dec
dec
add
jae
mov
shl
inc
bound
push
(bad)
and
nop
test
cs
sbb
mov
cmps
lock
or
push
imul
xor
lock
stos
jmp
xchg
and
adc
and
push
(bad)
nop
push
add
xchg
adc
adc
rcl
jg
repnz
jne
mov
dec
pop
test
or
adc
mov
mov
mov
and
xchg
push
js
xchg
mov
sub
jnp
sbb
push
mov
mov
or
push
movs
inc
or
dec
add
mov
rcr
push
ret
or
dec
sbb
lock
outs
push
pause
rcr
add
loop
or
mov
jno
test
add
cmc
xchg
or
aas
(bad)
cmp
push
jmp
aad
iret
dec
adc
mov
mov
cli
in
sbb
push
cld
push
add
unpcklps
cmp
or
or
add
movs
push
addr16
icebp
into
repz
push
sub
pop
sub
in
xor
inc
lock
mov
daa
leave
aad
mov
jmp
daa
bound
pop
dec
cmp
mov
inc
and
add
or
and
mov
and
jecxz
arpl
les
or
(bad)
shl
lock
clc
enter
(bad)
call
push
cmp
hlt
sbb
inc
in
push
mov
arpl
jmp
pop
mov
fiadd
and
add
adc
sahf
adc
stos
mov
adc
ret
mov
push
fsubr
sbb
xchg
sbb
(bad)
mov
in
xchg
cdq
adc
push
mov
clc
fist
mov
aas
inc
mov
mov
call
add
sub
mov
sub
adc
pusha
pop
xchg
pop
mov
push
pop
clc
add
jg
and
shl
or
cmp
out
ret
gs
adc
movs
mov
addr16
pop
sbb
jmp
(bad)
mov
jl
cmp
cmp
bound
in
rcr
pop
rcr
aas
push
clc
sbb
je
idiv
jmp
js
mov
sahf
xor
gs
cmp
rcl
ins
push
mov
fcomp
ins
cvtpi2ps
jmp
std
jl
rol
ret
sub
rcl
(bad)
mov
sub
cmp
sbb
jg
xchg
dec
int
add
dec
pop
and
inc
leave
add
out
icebp
xor
sub
in
aas
adc
add
mov
xlat
sbb
jb
mov
out
mov
cmp
cmp
pop
sbb
in
pop
dec
inc
push
push
jbe
lods
inc
mov
adc
in
sub
daa
push
mov
cmp
bound
xchg
jae
adc
(bad)
lss
xchg
xchg
xor
and
imul
repz
and
mov
sbb
push
push
inc
mov
rcr
sbb
inc
jbe
sbb
push
in
pusha
sbb
out
fisttp
dec
xor
cwde
sbb
add
shl
mov
add
push
test
xor
jp
test
scas
xchg
or
sub
add
cmc
sbb
or
movs
sub
adc
shr
and
(bad)
cli
or
(bad)
lea
loope
jno
mov
pop
imul
int3
adc
rol
or
test
or
mov
rol
enter
or
jmp
mov
and
inc
xor
push
rcl
xchg
(bad)
daa
repz
je
xor
cmp
jns
mov
dec
mov
stos
or
mov
dec
jno
or
push
daa
and
xor
add
push
push
jmp
xor
adc
pop
and
pop
pop
das
imul
loop
(bad)
(bad)
retf
outs
lock
cmp
mov
jb
scas
adc
popa
inc
jb
push
movs
push
ret
pop
int3
mov
pop
pop
popa
and
gs
mov
jae
add
dec
inc
xchg
inc
sub
push
push
push
loopne
into
test
fmul
add
pop
in
movs
test
add
add
adc
dec
add
shl
inc
or
sbb
jo
xlat
jp
jmp
mov
add
js
mov
rol
inc
mov
mov
xchg
xchg
fst
je
sub
push
dec
fdivr
push
dec
jmp
push
and
pop
sub
ins
mov
or
inc
aas
inc
inc
xor
(bad)
and
or
jle
sbb
push
inc
jmp
pop
and
sub
and
nop
push
xchg
and
inc
add
mov
jmp
or
enter
push
jmp
inc
mov
jno
inc
add
mov
push
popa
mov
or
push
jmp
jl
inc
outs
fnstsw
mov
push
daa
cmp
sbb
shl
fisttp
push
leave
xor
pop
xchg
sbb
mov
push
(bad)
mov
sub
mov
xlat
add
test
xchg
sbb
mov
retf
test
pop
push
pusha
retf
jl
xor
enter
add
test
cld
adc
add
push
pop
rcl
ret
mov
push
inc
mov
or
xchg
ja
mov
sub
inc
gs
lods
sbb
adc
aad
fdivr
sub
and
outs
daa
adc
sbb
push
or
iret
cmp
cmp
jmp
xor
ins
int3
retf
sbb
fnstsw
(bad)
neg
sub
or
loopne
push
push
aam
clc
ret
dec
push
lock
ja
inc
push
and
mov
in
lods
sbb
iret
pop
stos
into
bswap
iret
pop
mov
jnp
xlat
pop
cmp
dec
aam
jl
fs
adc
iret
adc
arpl
inc
jo
inc
(bad)
out
ins
das
cld
mov
pop
fs
sub
sbb
(bad)
mov
jmp
add
cmc
and
xchg
push
sub
sub
add
sbb
mov
adc
mov
movs
outs
cmps
and
ss
mov
adc
and
in
and
cmp
mov
push
adc
inc
mov
xor
and
jb
icebp
loopne
push
rol
xor
shr
add
mov
ret
mov
mov
cmp
xchg
sahf
inc
pusha
pop
(bad)
mov
xchg
je
cs
mov
push
push
sbb
add
adc
inc
es
imul
call
lods
sub
loopne
adc
or
ja
add
adc
fbstp
pop
les
bound
rcr
mov
cmp
fimul
xchg
inc
dec
mov
pop
jp
add
rcl
add
lds
neg
mov
adc
add
push
je
dec
jne
mov
xor
(bad)
in
loope
shl
add
fnstenv
sti
aad
outs
outs
dec
fst
mov
ret
or
pop
add
push
retf
stos
ins
inc
in
je
movs
mov
push
push
sub
retf
dec
pop
dec
inc
and
out
add
test
and
lds
aam
lahf
jae
jle
mov
je
cmp
push
add
mov
aam
fwait
imul
sub
or
lods
xor
je
push
aaa
xchg
inc
pusha
dec
js
inc
add
xor
dec
test
mov
lock
ror
je
cmp
and
sbb
daa
cdq
push
test
xor
or
je
push
int
jno
in
dec
mov
inc
sub
xor
retf
outs
pop
aaa
add
loopne
daa
dec
add
or
xor
sub
outs
jg
adc
ins
dec
cmps
js
or
addr16
scas
loope
jb
jp
sub
clc
or
jnp
add
aaa
je
sub
mov
outs
ins
aaa
jp
xlat
jmp
outs
add
ret
push
(bad)
or
jnp
je
jnp
leave
inc
and
sbb
pop
ins
xlat
jnp
xlat
pop
push
adc
add
aaa
pop
shl
popa
jne
dec
loop
push
jns
fdiv
pusha
adc
fcomp
pop
mov
inc
movs
xor
repnz
imul
xor
add
xor
ret
and
sub
neg
mov
in
ret
add
jo
fabs
mov
or
and
cmp
adc
xor
or
fnstcw
pop
daa
pop
and
mov
add
add
mov
xchg
xchg
push
mov
dec
pop
pop
or
adc
lds
xchg
sbb
outs
push
dec
xor
loopne
daa
add
push
xchg
mov
(bad)
add
inc
enter
pop
(bad)
call
push
je
push
sub
push
mov
mov
hlt
add
pop
jg
sbb
mov
leave
ins
test
nop
fcom
mov
xchg
sub
sub
daa
add
ror
or
cld
ret
push
cmp
test
push
loope
xchg
loope
or
or
daa
aam
add
aaa
push
(bad)
xlat
out
cmp
ja
fnstsw
push
add
push
ja
popf
repz
rep
mov
jge
iret
std
or
call
push
mov
into
daa
and
sub
pop
outs
jb
pop
repnz
mov
jbe
pop
cs
push
pop
push
std
pop
push
inc
xlat
in
add
bound
push
xchg
cmp
dec
pop
and
add
ficomp
in
pushf
and
add
jo
mov
jmp
xor
sbb
add
fsub
fs
dec
or
xor
test
xchg
dec
mov
rcl
jg
mov
jb
push
and
pop
addr16
popa
aaa
test
push
pop
fcomp
shl
daa
jmp
sub
sub
push
fs
sbb
clc
movs
popa
ins
gs
(bad)
jg
mov
dec
jge
leave
inc
xchg
int
and
inc
mov
add
sbb
push
mov
loopne
adc
or
sub
rcl
or
cmps
mov
loopne
add
sub
call
xchg
adc
xor
out
cmp
test
sbb
nop
or
in
pop
repz
in
sub
test
test
xchg
inc
xchg
ret
mov
xor
jmp
shl
(bad)
loopne
cmp
sbb
aas
loope
out
inc
xor
sub
idiv
(bad)
add
pop
aaa
arpl
push
loopne
add
pop
or
inc
add
mov
add
add
mov
sbb
mov
stc
adc
test
neg
std
add
push
add
ror
test
and
add
mov
popf
push
pop
adc
sbb
and
iret
test
iret
shl
mov
iret
push
ret
in
(bad)
test
iret
js
in
test
jecxz
jnp
fs
ja
ret
push
add
cmp
xor
out
fidiv
add
mov
push
adc
cmp
sti
pop
sti
or
jmp
push
mov
shr
inc
xor
push
or
xchg
cmps
xchg
mov
clc
test
movs
mov
mov
jg
sbb
je
sbb
hlt
xor
(bad)
(bad)
scas
or
test
xor
dec
call
inc
sbb
mov
dec
xchg
inc
shl
sub
cmp
fisub
popa
inc
mov
and
loopne
adc
les
dec
push
or
cmps
loopne
add
ret
pop
fbstp
mov
mov
call
or
push
out
mov
xor
add
rol
mov
push
call
jns
cmp
and
stc
push
adc
jmp
or
inc
ins
mov
or
rcl
mov
mov
push
inc
xchg
jns
push
and
es
sub
cmp
jb
out
xor
ret
adc
mov
xchg
movs
sub
mov
xchg
sbb
pop
mov
sub
sub
add
adc
aam
popa
mov
mov
sub
jmp
inc
loope
push
cld
int
sub
sub
or
pop
shl
xchg
les
adc
movs
jmp
sbb
or
adc
add
dec
inc
add
jae
add
pop
sbb
cld
mov
push
sar
mov
sub
adc
mov
or
ret
jmp
and
sub
pusha
add
aam
inc
or
pusha
or
stos
inc
jne
ins
test
push
xlat
ins
retf
jae
rcl
mov
cmp
daa
mov
int3
hlt
rcr
icebp
jbe
sub
(bad)
adc
out
xor
sbb
push
xchg
mul
push
pop
dec
mov
mov
cli
enter
xchg
pop
and
fiadd
dec
jle
out
rcl
iret
ja
adc
pop
dec
pusha
sti
mov
daa
lahf
sub
sbb
ja
dec
xchg
fsub
inc
push
jb
jecxz
out
jmp
or
js
call
stc
adc
dec
pop
sbb
cmp
inc
(bad)
call
pop
cmp
mov
mov
dec
and
sub
(bad)
and
add
adc
inc
xor
mov
and
jl
pushf
mov
jle
clc
mov
and
lods
mov
jge
cli
inc
push
push
push
adc
lock
xor
shl
call
addr16
xor
add
jmp
ror
pop
leave
sub
clc
shl
rcl
mov
hlt
out
js
je
dec
adc
ficomp
mov
aas
lock
adc
clc
lea
add
mov
(bad)
pmullw
add
jge
ret
add
fiadd
and
pop
scas
fwait
sbb
and
out
cdq
mov
and
mov
or
addr16
pop
pop
cmp
out
adc
adc
test
test
(bad)
inc
pusha
sbb
adc
and
icebp
das
sbb
fmul
mov
mov
mov
or
push
pop
push
xchg
outs
hlt
inc
adc
dec
inc
push
dec
push
sub
mov
dec
sub
jo
dec
test
push
lods
sbb
sub
push
mov
dec
inc
sub
neg
dec
or
cmps
adc
inc
dec
xchg
adc
pop
mov
push
push
push
sbb
ss
inc
add
mov
xor
fisttp
push
ror
psubsb
sub
or
adc
shl
cld
jmp
push
mov
xor
pop
jg
dec
add
aam
aam
fdivr
xchg
push
cmps
je
es
aaa
repnz
jmp
loope
mov
jmp
xchg
xchg
call
xchg
imul
mov
adc
xor
sbb
loope
sub
lea
sub
inc
cwde
in
fadd
push
fsubr
fdivr
sti
sub
bound
aad
or
sbb
jae
je
aad
shl
movs
scas
mov
xchg
popa
and
pop
daa
add
jmp
fiadd
adc
shl
mov
adc
pushf
mov
inc
adc
sub
jg
sub
push
push
or
push
aaa
mov
pusha
and
adc
fimul
cmp
rcl
xor
imul
jmp
das
dec
test
cmp
cmp
jl
or
adc
fs
mov
ins
imul
push
cmp
(bad)
pop
push
jg
sbb
sub
je
or
sbb
mov
add
adc
and
push
xor
sti
ss
add
xchg
or
push
mov
into
mov
pop
inc
lods
dec
adc
or
into
push
in
mov
idiv
js
pop
jecxz
or
sub
loopne
adc
enter
sub
pop
push
or
and
rcr
aaa
adc
ins
mov
add
adc
push
jno
iret
jmp
mov
mov
leave
jmp
ret
jmp
mov
mov
in
mov
or
enter
jb
jb
push
push
mov
push
int3
add
rcl
rcl
add
fdivr
add
test
(bad)
lock
mov
inc
push
pop
pushf
(bad)
js
test
mov
or
xor
lock
pop
int3
xor
push
inc
bound
(bad)
dec
not
xor
xlat
loopne
add
in
arpl
mov
fwait
pusha
add
aam
inc
in
or
xchg
pop
mov
imul
and
mov
push
gs
push
rcr
sub
sub
sbb
lods
pusha
pop
pop
mov
add
push
and
das
or
dec
xchg
push
xor
add
scas
outs
mov
xchg
outs
cmp
ja
mov
push
pushf
lods
mov
cmp
icebp
add
adc
and
iret
repz
inc
push
push
repz
ds
fcomip
add
in
and
cmp
repz
push
addr16
cmp
(bad)
test
not
inc
ret
and
nop
or
add
nop
add
leave
nop
or
sbb
add
nop
or
or
nop
or
nop
or
leave
nop
or
push
or
or
adc
nop
or
nop
adc
leave
nop
or
adc
sbb
nop
or
adc
mov
and
and
call
push
cli
out
(bad)
in
push
cmp
out
sahf
arpl
mov
out
loope
or
repz
xor
je
repz
mov
repz
ds
std
sbb
xor
repz
inc
pop
jo
call
fldz
add
iret
repz
jp
sub
cmp
repz
stos
rcl
iret
and
repz
test
cmp
repz
push
cmp
repz
out
sahf
test
jns
out
sahf
mov
cmp
sar
and
dec
pusha
repz
repz
lahf
mov
clc
js
into
fisub
or
sub
add
inc
push
or
mov
add
shl
add
dec
sub
xor
and
enter
enter
adc
or
adc
add
add
adc
or
dec
and
enter
add
or
or
add
sbb
xor
and
dec
dec
add
add
sbb
xor
or
sub
add
add
cmp
cmp
or
add
cmp
and
and
or
and
add
add
or
xor
and
enter
add
or
or
add
adc
xor
and
cmp
add
add
ss
and
pop
and
enter
add
or
or
add
sub
daa
enter
push
push
or
push
push
add
add
push
sbb
and
test
sub
inc
mov
loopne
leave
adc
pop
sub
pop
cld
ret
pop
xchg
lahf
hlt
push
adc
add
and
dec
mov
adc
test
clc
sub
scas
test
push
adc
iret
mov
sbb
mov
scas
fdivr
adc
jne
(bad)
cmp
dec
je
repz
add
mov
daa
xchg
test
inc
or
mov
and
or
inc
add
fist
into
dec
xchg
mov
add
mov
fisub
je
adc
sub
push
shl
mov
add
and
je
mov
pop
xor
dec
hlt
inc
clc
push
adc
adc
adc
mov
into
xchg
xchg
call
mov
jmp
pop
add
lock
lea
movnti
mul
jne
xchg
push
pop
inc
jmp
and
and
adc
pop
sub
sbb
jno
xor
mov
push
in
add
je
xchg
mov
repz
or
into
loopne
sbb
add
sar
sub
jge
lds
and
les
mov
mov
push
mov
sbb
or
push
dec
in
or
cmps
test
or
scas
jnp
std
fild
push
or
or
or
cmps
add
add
cmp
stc
xor
and
and
sti
mov
adc
adc
shl
sub
ror
push
sbb
inc
sub
push
push
and
mov
add
and
add
pop
leave
mov
add
cmp
add
dec
push
mov
int3
jb
dec
das
(bad)
jns
imul
cmp
push
or
add
cmp
out
movs
fiadd
dec
or
dec
ror
aad
and
add
inc
ret
dec
out
fld
add
rcr
add
cmps
test
pop
cmp
fmul
rcr
add
popa
push
popf
mov
or
icebp
fcmovbe
dec
or
dec
add
dec
jne
out
push
or
cmp
mov
push
mov
jmp
inc
xor
push
adc
sbb
adc
mov
out
(bad)
pop
sbb
rol
xchg
sbb
or
sub
mul
jno
enter
test
lds
jbe
mov
sub
jnp
rcr
adc
and
fmul
pop
pop
and
inc
push
ins
cmp
addr16
movs
fcmovb
push
bswap
add
inc
js
jnp
(bad)
add
scas
pop
add
cs
outs
or
mov
jnp
repz
adc
push
popf
loope
aas
push
sti
in
mov
test
and
or
add
pop
add
cwde
stos
add
or
pusha
pop
add
cmp
xor
xor
fwait
mov
push
xor
or
pop
pop
xor
inc
add
or
arpl
out
lea
cmp
jne
sbb
sbb
inc
and
dec
cmp
cmp
aam
(bad)
jne
mov
cmp
and
add
push
pop
addr16
inc
or
aam
cmp
sub
je
mov
adc
cdq
xor
mov
inc
cmp
jnp
xor
sbb
xor
add
adc
or
inc
pop
clc
mov
sub
pop
push
jne
and
xlat
sub
enter
pop
mov
sbb
add
xchg
adc
test
or
xor
aaa
jp
ja
or
jl
out
mov
or
repz
shl
out
sahf
out
adc
xchg
ror
pop
adc
cmp
add
mov
pop
add
sbb
add
add
lock
addr16
addr16
repnz
or
or
sbb
sbb
add
mul
sbb
add
jnp
xor
push
push
add
add
push
pusha
sbb
push
lods
push
test
mov
mov
or
dec
or
dec
push
nop
retf
loopne
nop
stos
nop
and
xor
pop
test
and
push
shl
mov
add
push
xor
cmp
sbb
add
mov
and
popa
add
sbb
sbb
or
shl
test
mov
adc
aam
or
arpl
enter
push
imul
xchg
loopne
mov
jno
adc
in
or
add
jno
movs
or
mov
in
cmp
push
rcr
xchg
ret
push
pop
fs
mov
jne
mov
(bad)
pop
stos
or
(bad)
pop
jne
inc
pop
sub
fistp
and
jmp
xor
int
movs
jo
or
adc
pusha
or
fisttp
add
movzx
cmps
and
and
(bad)
loope
pop
jno
sub
leave
shl
jo
push
lea
sbb
lock
bound
sbb
mov
sub
jge
and
mov
or
jb
pop
pushf
jb
add
add
sbb
add
push
add
pop
mov
add
push
mov
cmp
imul
arpl
movs
adc
mov
add
jg
add
add
and
shl
daa
xor
push
mov
enter
and
jp
push
mov
mov
sub
sub
push
sub
lods
es
push
and
or
dec
jns
jne
int3
fimul
jge
push
inc
movs
xor
enter
xchg
sbb
pop
pop
push
push
int
les
mov
jl
dec
pop
pushf
or
test
pop
jne
add
sbb
cmp
cwde
add
std
fld
(bad)
pushf
adc
or
mov
shl
int
dec
push
inc
call
push
mov
pop
js
cwde
add
add
jnp
cwde
neg
and
push
or
sbb
jnp
xor
push
pop
repz
mov
popa
das
lds
pop
fadd
pop
or
sub
dec
push
push
jne
push
dec
add
push
pushf
pop
pop
add
pop
adc
adc
test
jae
aad
ret
push
test
push
sbb
adc
xor
push
cmp
ds
push
shr
mov
lea
nop
retf
test
rcl
xor
cmps
mov
or
add
ja
xor
add
and
add
add
daa
add
inc
arpl
mov
push
jne
pop
test
in
fstp
adc
inc
add
js
loopne
mov
xchg
ds
adc
pop
test
ss
cmp
and
and
daa
(bad)
fadd
mov
shl
ss
push
mov
test
sbb
inc
xchg
push
sbb
cmp
and
push
loope
fiadd
sbb
xor
add
and
stos
jne
je
or
inc
in
call
cmp
clc
in
hlt
adc
adc
add
popa
daa
adc
int
cmp
lahf
out
sti
data16
push
in
adc
inc
mov
retf
not
fdivr
lock
fcomp
sbb
test
inc
ficomp
clc
jbe
add
outs
push
adc
das
out
xchg
or
and
ret
push
mov
lock
mov
sbb
mov
inc
js
icebp
mul
pusha
nop
add
pop
and
mov
and
xor
and
inc
adc
arpl
mov
lea
or
and
mov
clc
push
xchg
inc
jecxz
mov
ror
adc
mov
inc
ret
add
push
fs
fiadd
mov
ss
dec
in
add
push
dec
adc
or
inc
add
xchg
push
loope
sub
das
loope
jp
or
sbb
sbb
bound
push
sub
mov
enter
jo
or
rcr
pop
movs
adc
or
and
adc
xor
fst
jb
or
(bad)
cmps
ins
pop
mov
sbb
adc
add
inc
dec
rcl
les
mov
or
cwde
xchg
add
push
xor
out
add
sub
push
cld
sahf
mov
xor
jae
add
or
mov
test
cmp
nop
dec
cs
sbb
mov
jo
mov
inc
sub
les
ficomp
out
or
scas
jno
push
xor
cmps
iret
sbb
or
or
or
cld
inc
in
mov
add
mov
add
in
jo
add
xor
stc
fcomp
and
pop
ja
jae
push
clc
sahf
fwait
test
fild
pop
sub
mov
xchg
push
sub
push
push
sbb
adc
ss
add
dec
push
add
pushf
nop
dec
xchg
test
inc
push
test
das
inc
push
nop
ins
ins
xor
add
enter
daa
add
ficom
add
nop
cmp
and
and
xchg
add
or
addr16
adc
jne
push
ret
dec
cwde
imul
hlt
std
mov
add
cmp
das
push
retf
lods
dec
repnz
cmp
les
jne
jl
test
nop
push
cs
push
xchg
outs
retf
inc
fst
jmp
dec
push
pop
cmp
rol
(bad)
dec
cmp
mov
sub
mov
test
in
adc
gs
fst
adc
test
xlat
lea
mov
dec
cmp
mov
sub
dec
jmp
jp
xor
retf
clc
nop
mov
daa
xchg
sub
dec
mov
adc
jmp
jo
add
xchg
push
xor
mov
add
(bad)
fistp
adc
jmp
hlt
fst
or
sbb
and
jmp
cmp
pop
pop
fnstcw
(bad)
add
sub
sub
add
add
add
clc
fiadd
mov
dec
push
sub
adc
push
inc
test
movs
scas
adc
jle
mov
out
mov
int3
les
dec
outs
pushw
jge
iret
repz
stos
ret
dec
movs
leave
clc
mov
shl
test
inc
mov
inc
enter
and
dec
leave
inc
and
fstp
jo
loope
js
xchg
jns
and
test
cs
push
pop
jl
sahf
out
xchg
shr
mov
dec
mov
sub
or
push
adc
mov
dec
cs
pop
pop
push
inc
mov
sub
jg
add
add
inc
cs
sub
push
movs
sar
mov
inc
pop
xchg
pop
leave
adc
and
push
out
and
fisub
mov
mov
mov
sub
xchg
sub
data16
add
mov
sbb
add
outs
shl
adc
add
add
push
or
jbe
leave
add
mov
fisttp
je
sub
je
(bad)
adc
int
idiv
std
dec
clc
cs
int3
icebp
jle
mov
out
dec
scas
jbe
mov
ss
jmp
push
(bad)
gs
mov
inc
jmp
inc
inc
dec
add
pop
push
push
add
push
inc
mov
ins
push
cs
mov
cmp
push
xor
outs
outs
or
cs
je
sub
je
pop
clc
xchg
ss
xchg
push
sbb
cld
ss
xor
je
jmp
xor
lahf
jmp
sbb
adc
setg
cmp
nop
iret
sbb
adc
cwde
cmp
xor
enter
pop
call
rcr
cmp
adc
adc
push
sbb
add
enter
out
fstp
je
inc
or
push
or
jmp
shl
or
add
xor
xor
sub
ds
xor
xor
pmaxsw
scas
lods
push
pushf
pusha
adc
mov
lock
add
xor
lods
ret
cwde
mov
movs
dec
add
inc
mov
push
push
test
clc
daa
mov
xor
or
pop
and
sub
and
add
and
jmp
cdq
cmp
mov
sbb
push
inc
push
nop
sbb
icebp
mov
mov
push
inc
loop
xor
imul
mov
mov
add
xchg
adc
iret
or
sub
dec
cli
sub
bound
sub
mov
cwde
mov
mov
(bad)
loopne
add
dec
jb
or
ins
rol
inc
ror
xchg
(bad)
bound
ror
sbb
mov
fiadd
adc
pop
pop
add
adc
repnz
push
add
retf
mov
fucomip
jno
jmp
popa
jmp
pop
nop
or
xor
jp
adc
je
push
or
push
add
inc
sbb
mov
jp
cmp
seta
and
jmp
in
pop
lock
xor
sbb
ss
push
xor
popa
lods
sbb
mov
enter
push
xor
xchg
jmp
or
xor
shr
and
sub
dec
sub
stc
lock
cwde
test
xchg
arpl
fcomp
sar
je
pop
pop
push
daa
jnp
mov
adc
add
ret
xchg
pop
sub
call
adc
ret
ss
mov
iret
cmp
jecxz
in
push
stc
add
dec
adc
add
mov
neg
add
clc
jns
mov
movs
push
push
bound
jns
out
xchg
push
add
pop
mov
inc
inc
push
inc
sub
add
adc
ret
fwait
inc
retf
in
sbb
jns
out
inc
dec
push
pop
data16
sahf
out
js
mov
pushf
(bad)
loopne
das
js
jnp
jmp
sub
mov
or
dec
mov
push
jns
inc
or
pop
lds
cmc
add
and
push
jle
movs
pop
add
add
mov
sbb
jae
js
outs
sbb
pop
add
das
sbb
mov
sub
and
mov
repz
cmp
push
cmp
cmc
jns
or
addr16
pop
or
out
ja
fidiv
in
jnp
mov
ret
add
mov
xchg
push
sahf
retf
adc
pop
push
ret
or
add
pop
add
jbe
cwde
jo
jnp
mul
sub
int3
fld
push
add
cmp
repz
and
retf
xor
inc
or
in
inc
mov
xor
and
or
mov
fwait
jge
addr16
enter
mov
fwait
push
test
dec
cs
jecxz
adc
adc
adc
or
sbb
push
dec
dec
pusha
sbb
adc
inc
iret
adc
sub
pop
sbb
sbb
and
pop
jg
loop
ins
cmp
lea
ins
push
sub
push
pop
mov
or
pop
ds
mov
push
mov
or
fdivr
cmp
repz
or
cmc
xor
fdiv
sbb
mov
js
xchg
shl
iret
jmp
add
mov
sbb
dec
cs
out
outs
in
daa
movs
cmp
inc
push
or
pop
imul
cs
call
mov
(bad)
ror
cmp
outs
in
in
xor
movs
or
adc
pop
sub
int
pop
push
cmp
call
repz
movs
jo
jp
xchg
sahf
int
pusha
nop
cmp
mov
mov
jecxz
push
push
jnp
(bad)
mov
mov
xor
push
sub
ds
clc
xor
mov
imul
pop
das
push
ds
add
neg
or
or
or
sahf
out
adc
adc
adc
jns
out
push
pop
sbb
std
(bad)
jns
sbb
sbb
push
pop
and
and
and
es
inc
lahf
out
mov
push
aas
xor
scas
fild
inc
cmp
repz
inc
pop
mov
stc
add
push
pushf
jecxz
cmp
cmc
sub
push
mov
loope
les
rol
repz
test
jmp
(bad)
adc
push
sub
loope
iret
cmp
cwde
dec
dec
ins
pop
jae
or
adc
jne
out
jmp
mov
call
into
cmp
push
mov
push
mov
dec
and
dec
dec
jb
inc
push
adc
in
stc
xor
adc
dec
add
push
push
retf
push
jb
push
sbb
pop
cmps
xchg
sbb
xchg
test
pop
and
mov
push
and
pop
xlat
pop
in
xchg
adc
lea
retf
push
leave
sub
and
pop
pop
xchg
xor
cmp
mov
xor
popa
inc
(bad)
leave
gs
inc
arpl
xchg
retf
push
fs
fs
push
test
sbb
fs
push
push
fs
imul
fs
outs
outs
push
fs
push
jo
jb
enter
and
or
sub
and
xor
jnp
and
jbe
jge
and
int
adc
or
adc
test
test
leave
mov
inc
mov
pop
inc
and
lea
sbb
mov
push
popa
daa
pop
icebp
retf
and
adc
jne
sti
jne
lea
pop
cmp
test
add
das
sub
mov
mov
popa
adc
std
and
jo
fnstcw
aas
lods
jae
movs
and
ret
xlat
ds
test
xor
push
fsubr
idiv
stos
ror
loope
lock
repz
dec
dec
mov
sbb
jae
movs
pop
and
inc
xor
pop
inc
dec
iret
repz
dec
pop
fs
mov
repz
mov
cmp
repz
call
loop
leave
adc
repnz
mov
int
mov
rcl
in
dec
cs
aam
dec
cs
pop
mov
out
add
xchg
sbb
jno
dec
cmp
cmp
pop
loope
xchg
or
lea
mov
lea
and
pop
sbb
and
mov
sub
and
sbb
and
jmp
dec
outs
and
jne
xchg
or
cmp
or
in
mov
sub
movs
push
mov
pop
cmp
ja
dec
pop
lds
dec
push
cwde
cli
test
out
dec
fadd
xor
sbb
push
repnz
daa
test
pusha
inc
int
out
int
fistp
dec
pop
sti
push
add
imul
aas
push
in
vaddsubps
push
std
aas
push
sub
sbb
out
xchg
sbb
ror
movs
bound
ins
or
sahf
out
test
cs
mov
leave
push
inc
in
jns
rcr
jmp
int
in
enter
sbb
repz
int3
xor
cmp
pop
das
sbb
sub
sahf
add
imul
and
enter
int
in
js
in
jmp
push
jb
cmp
and
or
rol
push
movs
gs
outs
add
xchg
int
fidivr
aam
fucomi
ins
les
repz
iret
fsub
jmp
push
jnp
xlat
cmp
xor
xor
inc
adc
les
loopne
or
jmp
pop
push
sub
mov
rcl
sbb
jmp
xchg
test
mov
cli
push
push
mov
fs
daa
jmp
add
scas
fbld
or
or
or
stos
fcom
test
xchg
add
pop
iret
cmps
push
arpl
test
cwde
or
mov
hlt
cmc
add
(bad)
pop
popf
inc
or
push
add
js
jae
test
jo
arpl
mov
xor
sub
and
jmp
sbb
sub
add
out
add
or
aaa
test
cmc
sar
retf
jb
loop
mov
sub
lock
jne
mov
or
rol
sbb
nop
sbb
adc
push
mov
and
cmp
pusha
mov
push
inc
mov
xchg
leave
mov
lock
push
and
ins
lea
mov
in
adc
out
dec
sub
and
push
cmps
mov
sbb
pushf
add
lea
jmp
outs
jecxz
mov
push
xchg
inc
add
call
bound
add
into
push
(bad)
dec
add
sar
jne
sub
jge
mov
(bad)
mov
dec
sbb
xor
push
push
jbe
mov
sbb
push
pop
in
jns
sbb
popa
dec
outs
or
add
ror
mov
xor
or
shl
hlt
add
jo
sub
mov
jo
int3
add
add
jbe
push
mov
inc
daa
pushf
nop
inc
add
and
mov
ror
jne
push
add
dec
and
rol
cmp
pop
mov
int3
arpl
cmp
sub
fcomp
sbb
push
hlt
vmovaps
cli
call
add
shr
jne
mov
fdiv
mov
push
inc
ror
push
mov
cmp
fucom
jecxz
push
push
test
(bad)
ins
jg
jg
rol
and
int
cli
dec
sbb
or
pushf
cmps
cmp
xchg
jmp
and
mov
inc
ja
add
cmc
cwde
mov
cwde
push
in
mov
add
jo
pop
mov
out
sub
lea
inc
imul
inc
shl
shr
push
push
pop
jmp
jne
add
popf
lahf
mov
push
or
cld
cdq
call
loopne
xor
push
adc
push
push
in
xor
in
(bad)
jo
sub
andnps
dec
popa
add
push
cmps
jmp
mov
sahf
shl
stos
out
adc
jle
lock
add
test
dec
mov
mov
ds
push
mov
jbe
shr
xor
or
dec
(bad)
dec
(bad)
int
fisubr
cmp
sbb
jle
sub
data16
add
cmp
inc
call
push
popa
add
sbb
and
loopne
test
clc
popf
push
cmp
test
fild
mov
mov
js
popa
outs
adc
fucomip
shr
xor
pop
cwde
jmp
xchg
mov
ins
xor
jno
mov
sub
lock
mov
dec
xchg
mov
add
popa
xchg
or
in
leave
lds
daa
adc
in
ins
lea
pusha
inc
mov
and
adc
test
je
mov
cmp
fnstsw
mov
cmp
mov
or
dec
cmp
sub
ror
add
push
or
mov
shr
outs
cmp
dec
leave
je
push
je
mov
retf
sbb
and
xchg
dec
or
test
test
dec
mov
xchg
pushf
les
add
pop
outs
push
add
and
rcr
jmp
mov
adc
mov
push
xor
adc
sbb
sub
ss
xor
jno
js
and
push
cmps
dec
jp
push
push
mov
mov
sbb
xor
js
punpcklwd
jmp
pop
mov
inc
fs
inc
inc
mov
fabs
adc
add
or
and
xchg
mov
or
inc
call
add
add
cmc
add
or
(bad)
inc
imul
jmp
fidiv
cmps
mov
jg
(bad)
jg
and
add
cmp
cwde
(bad)
popf
xchg
pop
cmp
xor
inc
push
rcr
stos
mov
clc
or
fimul
adc
fucomip
push
mov
xor
cmp
add
mov
jnp
or
mov
les
or
jge
out
inc
add
inc
out
std
push
or
arpl
jne
inc
push
jb
mov
sub
movs
ror
int
dec
push
jae
bound
loopne
aas
dec
lahf
dec
mov
adc
pop
jno
sub
and
stc
sbb
pop
lods
sub
repnz
repz
in
fwait
pop
xchg
push
or
shl
mov
lock
inc
pop
nop
dec
xrelease
ins
pop
out
pusha
shl
mov
jo
jg
dec
or
cmp
push
xlat
call
sbb
inc
fisub
xor
adc
jno
mov
or
add
jne
and
inc
xor
or
push
fistp
lds
pop
cdq
in
pop
je
clc
sub
imul
add
(bad)
lock
sub
cmp
mov
sti
nop
data16
sub
mov
mov
dec
js
pop
sar
jmp
or
pop
js
inc
mov
inc
stos
loopne
sbb
push
fild
and
mov
jmp
pop
repz
or
lods
adc
add
mov
inc
push
mov
mov
dec
jmp
lods
jmp
cmps
push
sbb
loop
jmp
sub
xchg
fcmovbe
push
jmp
mov
(bad)
or
dec
dec
sti
sahf
add
stc
or
popf
cmp
or
das
mov
pop
sbb
mov
je
xchg
lods
jnp
cmp
enter
cmp
mov
dec
ss
sub
aaa
push
nop
ret
fimul
add
jmp
xor
mov
mov
jmp
xor
mov
push
repnz
jnp
test
movs
xor
(bad)
and
inc
mov
(bad)
sub
add
dec
push
inc
ins
loope
or
cdq
les
outs
adc
sbb
arpl
inc
int3
adc
sbb
cdq
add
and
pop
inc
outs
inc
xchg
test
sub
dec
xor
inc
loope
xchg
sar
mov
mov
push
mov
hlt
xor
jl
or
mov
dec
mov
push
xchg
adc
or
fidiv
imul
jo
jp
dec
xor
jmp
dec
sbb
xor
sbb
int
ret
or
mov
cli
out
mov
inc
(bad)
push
push
jecxz
inc
test
or
jnp
popw
cmp
jo
jmp
or
add
jp
cmc
push
cwde
idiv
cmp
sub
push
cwde
adc
jno
xor
repz
jne
and
shr
and
inc
dec
enter
pop
jle
jle
adc
or
jo
adc
jo
sbb
jae
inc
in
je
data16
clc
bound
out
add
mov
pop
sub
test
push
rol
mov
cmp
pop
mov
dec
or
cmp
adc
pop
pushf
and
pop
mov
or
lea
or
sbb
mov
test
mov
adc
inc
jmp
test
mov
icebp
pop
loop
outs
push
std
test
mul
xchg
fiadd
and
sbb
push
icebp
inc
cmps
and
mov
push
stos
jmp
push
rol
fwait
jmp
xchg
jmp
adc
mov
daa
pop
shl
lock
out
add
add
in
push
cmp
data16
pushf
outs
or
in
pusha
ja
xor
jb
push
inc
lock
mov
xor
imul
lock
jns
(bad)
fild
pop
and
jae
add
sub
ja
shl
les
aaa
jnp
xchg
sti
lea
stc
outs
pop
lea
iret
sub
mov
sub
cmp
jo
mov
aas
xchg
push
lds
add
fs
sar
sub
idiv
xlat
rcl
cmps
pop
jmp
aaa
sysret
jno
pop
add
stos
(bad)
sbb
xor
call
push
dec
cmp
and
cmps
mov
cmp
jle
push
adc
rcl
pop
pop
loope
sti
ins
lea
test
pop
mov
mov
add
cmp
out
cmp
and
sub
and
mov
and
jb
adc
jp
shl
adc
xor
cmps
test
adc
sbb
jmp
dec
mov
push
push
adc
sbb
xor
pop
dec
jae
fs
test
or
push
stos
push
cld
or
add
imul
in
lds
jg
in
aad
adc
aaa
jo
push
dec
sub
push
adc
arpl
mov
loope
pushf
ins
fnsave
pusha
test
adc
jnp
call
pop
cdq
or
fst
fcmovnbe
and
push
push
ror
xchg
daa
push
jne
sbb
adc
xlat
or
xor
inc
cmp
add
mov
shr
mov
push
mov
pop
or
ds
fwait
cmp
xor
into
adc
mov
sbb
pop
pop
push
jne
sub
or
adc
pop
test
test
ds
add
jle
mul
rcl
add
sbb
adc
mov
mov
pop
aaa
fmul
addr16
push
sti
sbb
xor
mov
(bad)
xor
pop
outs
sub
and
jmp
and
inc
jbe
cmp
es
jmp
daa
jmp
or
pusha
add
push
adc
fwait
or
fbstp
push
sub
jae
add
add
and
dec
add
mov
add
dec
das
push
call
adc
pop
pop
fwait
test
imul
lea
imul
ret
pop
adc
fisub
ja
int
or
ret
mov
cmp
repz
repz
add
repz
sub
adc
and
inc
push
repz
push
jae
adc
mov
ret
push
rol
jecxz
dec
sti
sahf
repz
adc
and
shl
push
cld
mov
add
adc
and
jb
pop
xor
add
adc
pop
add
fnstcw
cs
add
inc
mov
inc
add
add
in
add
inc
cs
add
adc
inc
cs
push
adc
adc
inc
fs
fisttp
dec
adc
dec
imul
imul
inc
mov
ds
pop
push
test
mov
nop
mov
imul
nop
or
sub
in
daa
jnp
inc
jo
jmp
add
push
ja
mov
inc
sub
dec
adc
push
add
movs
pop
adc
das
js
mov
pop
outs
add
push
add
mov
scas
xor
push
dec
adc
jno
nop
xchg
pushf
xchg
fdiv
(bad)
lods
(bad)
cdq
js
clc
mov
add
sbb
aas
mov
fadd
inc
fadd
je
push
arpl
inc
lods
push
cdq
leave
rcl
mov
(bad)
enter
rol
cmp
jl
mov
sbb
cmp
dec
fnstsw
jno
daa
sbb
pop
adc
fimul
scas
sbb
hlt
mov
xchg
punpckhbw
sbb
cs
jns
sub
push
mov
mov
dec
fimul
jmp
mov
daa
ds
bound
sub
lahf
adc
add
pop
pop
mov
data16
pop
dec
or
stc
xchg
in
mov
addr16
jg
(bad)
push
mov
mov
jno
ja
or
clc
nop
popa
inc
js
pusha
push
adc
sub
add
push
cmp
push
push
mov
(bad)
mov
ret
cmc
sub
push
in
push
jo
stc
clc
xor
or
add
mov
jo
nop
bound
mov
(bad)
or
dec
sbb
rcr
mov
sub
lds
or
jmp
push
and
push
add
aad
scas
dec
mov
xor
retf
or
jbe
mov
or
xchg
mov
test
push
stc
clc
dec
jmp
xor
pop
xchg
mov
shl
iret
adc
jl
pop
repnz
popa
jae
xchg
test
leave
xlat
out
pop
test
iret
jae
in
pop
sub
dec
cmp
repz
ins
jns
xchg
repz
repz
lock
jbe
push
mov
loope
xchg
mov
push
out
imul
and
jecxz
xchg
ins
mov
iret
sbb
push
pop
mov
dec
enter
add
mov
mov
mov
and
popf
fmul
and
mov
inc
mov
xchg
jmp
rcr
ins
je
shr
sbb
mov
(bad)
pop
xor
xor
je
shr
sbb
(bad)
mov
(bad)
or
adc
xor
sbb
add
iret
xor
cli
or
sbb
int3
push
xor
popa
bound
inc
(bad)
fisttp
push
jg
aaa
cmp
sbb
je
in
cmps
je
scas
adc
pop
clc
fst
push
in
inc
sub
mov
pop
add
cli
fstp
cmp
fadd
pop
add
adc
popa
sbb
or
jne
sub
pushf
aaa
dec
sbb
pop
(bad)
int3
movs
adc
cmp
xchg
xchg
push
or
hlt
stos
or
or
jg
or
nop
and
inc
add
bnd
jnp
pop
cmp
shl
loop
icebp
add
clts
(bad)
imul
outs
or
movs
test
sbb
rcl
sbb
out
mov
jmp
in
jno
or
stos
rcr
not
pop
call
sar
xchg
sub
push
sub
pop
add
neg
push
xor
cmp
push
and
sub
ins
xchg
cmc
adc
icebp
ret
ds
push
and
lock
mov
xor
jge
(bad)
ror
add
xchg
add
imul
cmp
dec
mov
es
loop
stc
dec
mov
daa
xor
sbb
jmp
unpcklps
xchg
mov
jb
and
lea
scas
cli
push
clc
rol
dec
loopne
lock
xchg
mov
sub
push
add
shl
jne
arpl
push
fucomip
dec
push
or
adc
sub
xor
test
cmp
das
test
and
loopne
cld
sub
adc
out
in
inc
mov
and
lahf
jl
popa
mov
pop
add
inc
cmp
imul
leave
fdivp
or
add
sub
lock
cmp
jbe
xchg
movs
scas
xchg
dec
add
jb
pop
mov
xchg
add
add
pop
add
add
inc
jno
imul
jne
jno
push
shl
sub
cmps
xchg
bound
aas
xor
cmp
ret
pop
push
xchg
cmp
aaa
xor
mov
loop
jg
sti
cmp
adc
push
push
sbb
pop
test
push
scas
adc
add
sar
push
outs
xor
sbb
shl
sub
in
xchg
xchg
shl
xor
add
les
out
or
loope
ins
add
push
ds
jae
or
and
(bad)
loopne
mov
mov
shl
xor
adc
and
inc
or
push
inc
pop
jns
mov
jge
(bad)
adc
lods
pop
je
inc
leave
push
fwait
outs
sbb
shl
inc
mov
movs
inc
stos
push
push
clc
xor
shr
adc
jae
push
or
xchg
push
push
inc
cmp
add
in
pop
push
inc
scas
and
add
inc
aaa
mov
movs
popa
add
or
adc
movs
adc
mov
js
add
ret
por
push
leave
jmp
les
lds
sbb
movs
movs
or
mov
mov
push
or
dec
add
adc
xor
add
test
ret
(bad)
jmp
rol
mov
xchg
cmc
mov
sub
pushf
mov
add
repz
or
mov
jb
push
scas
repz
clc
cmp
add
repz
sub
lods
pop
adc
sbb
mov
jge
and
call
sti
mov
push
leave
push
jb
mov
inc
leave
push
hlt
adc
dec
inc
push
adc
push
xor
in
cmp
push
push
popf
xchg
xchg
mov
in
dec
cmps
dec
mov
dec
xchg
sub
cdq
mov
and
fsubr
imul
dec
jle
arpl
lea
dec
pop
sub
add
pusha
test
outs
pusha
fbstp
add
je
in
call
aaa
imul
add
sub
add
mov
ins
adc
pop
aaa
pop
mov
arpl
add
cld
mov
mov
add
jbe
out
inc
inc
test
add
xchg
push
push
fs
jae
adc
popf
bound
mov
or
sbb
lock
add
adc
add
outs
and
aam
jg
into
inc
pop
xchg
sbb
xchg
mov
lea
add
push
cmps
sub
jg
bound
push
xchg
imul
test
pop
dec
xor
cdq
or
xor
sbb
and
mov
lea
repnz
js
mov
inc
fs
das
jl
sub
xor
adc
gs
movzx
jbe
jmp
xor
or
inc
inc
jb
cmp
pushf
pop
ins
fisubr
xchg
fadd
or
(bad)
push
mov
ins
sub
jmp
jecxz
add
xchg
shl
daa
ins
lds
ret
pop
or
jno
(bad)
leave
mov
and
adc
adc
scas
dec
je
sub
imul
je
or
les
and
(bad)
vunpckhps
dec
push
stos
adc
nop
and
ficom
push
ret
nop
(bad)
mov
dec
mov
push
pop
aam
add
add
dec
xchg
sbb
adc
ins
dec
rcr
mov
or
inc
inc
pop
or
repnz
test
cmp
movs
xor
fadd
push
pop
add
lock
out
and
push
push
push
popa
imul
fs
cs
inc
loope
nop
sub
inc
outs
mov
sahf
and
ror
adc
inc
add
xor
cmp
or
push
push
shl
dec
outs
outs
imul
or
adc
fdivr
mov
add
jns
mov
rcl
xor
jbe
out
add
inc
or
inc
out
mov
and
inc
jb
pop
and
jb
jns
imul
ret
inc
xchg
xchg
add
inc
pop
push
lahf
adc
add
add
cwde
and
out
push
sbb
loopne
in
ins
or
pop
cmps
scas
fisubr
add
inc
outs
jne
out
mov
push
cmps
jmp
sar
int3
je
outs
jbe
dec
gs
lock
imul
and
xchg
sub
xor
sub
aaa
xchg
adc
inc
test
add
add
inc
inc
fsub
jne
xor
test
icebp
cmp
xchg
xchg
pop
mov
(bad)
xchg
pop
loopne
push
xchg
aam
xchg
xor
xchg
pop
push
dec
inc
cmps
(bad)
clc
mov
sub
sbb
or
pusha
push
inc
mov
cmp
add
cmp
pop
push
outs
(bad)
dec
cld
xchg
nop
loopne
movs
add
add
jecxz
imul
paddw
pop
add
add
(bad)
pop
push
inc
imul
and
sub
(bad)
pushf
adc
or
push
pop
add
add
enter
loopne
adc
test
and
shl
cwde
push
xchg
aas
ds
jbe
(bad)
cdq
adc
dec
outs
or
inc
jbe
outs
je
push
xor
in
push
imul
push
push
push
push
ror
sbb
inc
or
and
jae
aam
push
cmc
pop
clc
jo
mov
xor
ret
mov
das
call
push
ins
jmp
out
add
mov
scas
pop
mov
sub
icebp
das
pop
push
push
mov
(bad)
cmc
in
mov
pop
jo
cld
icebp
or
retf
shl
and
test
jp
cmp
inc
dec
pop
js
pop
outs
call
cld
sub
jmp
cmp
lds
ins
push
xlat
mov
aam
pop
or
loopne
adc
lds
aam
mov
mov
ins
xor
pushf
sbb
xchg
sti
fimul
cmp
push
clc
es
popf
das
inc
sbb
aaa
xor
outs
test
loop
(bad)
hlt
outs
add
icebp
imul
popf
dec
fcomp
mov
fnsave
gs
clc
les
sahf
(bad)
and
add
cmp
das
cmp
pop
add
mov
rol
dec
imul
push
sbb
mov
ficomp
repz
mov
inc
add
lahf
push
nop
mov
ds
aas
(bad)
stos
dec
pusha
jae
iret
and
hlt
lods
lahf
ja
fisub
sub
lahf
lahf
xor
push
cld
lahf
jne
sbb
loopne
sub
inc
(bad)
and
cmp
jg
int
lahf
adc
mov
loope
aad
adc
iret
ret
mov
sbb
xor
ret
lahf
cmp
xlat
ins
mov
cmp
fs
popa
adc
mov
mov
mov
pop
pop
push
dec
jne
dec
inc
add
(bad)
cld
sahf
jne
pop
cmp
adc
adc
add
adc
int
jecxz
mov
lahf
push
or
sub
(bad)
jmp
dec
mov
adc
xchg
dec
add
in
mov
mov
mov
sbb
jns
(bad)
gs
add
stos
retf
push
movs
cmp
loope
(bad)
mov
jo
ja
cmps
sahf
es
test
mov
sub
out
test
mov
jg
push
mov
sub
sbb
mov
ret
xchg
push
xlat
stos
cwde
(bad)
fwait
mov
sbb
pop
enter
(bad)
sbb
lds
mov
int3
mov
add
cmps
retf
dec
cmp
cmp
pushf
pop
test
es
xchg
inc
test
push
pop
pushf
enter
xchg
sar
sub
mov
add
pop
movs
enter
inc
mov
xor
call
jo
mov
mov
mov
add
div
cmps
jecxz
je
ja
push
test
sahf
push
loopne
mov
dec
xor
xchg
ja
jae
cmps
push
ret
(bad)
push
cmp
stos
mov
push
cmp
push
xchg
fcomp
mov
or
inc
and
mov
jae
iret
mov
fidiv
or
mov
mov
sbb
movs
push
ficom
xor
dec
outs
fidivr
cs
xor
(bad)
fcom
sub
jp
mov
sub
shl
test
test
stos
fist
or
cmp
push
popf
sub
jb
cmp
les
jns
jns
jb
enter
mov
int3
mov
jbe
sub
or
inc
inc
dec
cmp
lods
jmp
movs
scas
push
scas
or
mov
mov
fcom
imul
push
cmp
rol
dec
jno
aaa
push
sbb
jecxz
or
pop
adc
push
sub
mov
add
dec
or
inc
sub
shl
pop
pop
inc
shl
inc
bound
add
add
add
fs
add
(bad)
rcr
add
add
jle
jecxz
add
push
xor
gs
outs
jbe
add
gs
inc
js
mov
adc
push
mov
and
pop
jle
add
push
jb
sub
or
ror
dec
inc
dec
jo
push
inc
and
aam
jo
and
pusha
and
pop
xchg
xchg
dec
jb
xchg
test
cmp
ret
push
add
xor
bound
loopne
pop
mov
xor
ret
outs
xchg
or
or
add
nop
inc
adc
stos
(bad)
sub
push
test
adc
(bad)
lock
cmp
(bad)
push
pop
push
addr16
bound
test
adc
nop
xchg
test
push
pusha
mov
xor
jmp
or
frstor
and
add
or
add
dec
jnp
pop
push
and
cmps
cwde
les
lock
adc
jae
mov
cmp
sub
(bad)
fdivr
pop
inc
or
cmps
jmp
dec
or
leave
out
lock
push
add
push
mov
enter
pop
pop
xchg
push
adc
rol
mov
adc
xor
sbb
mov
mov
mov
push
fadd
lahf
adc
mov
mov
add
lock
jo
or
adc
cmp
mov
pushf
pop
pop
mov
jl
xchg
pusha
inc
(bad)
xor
jmp
(bad)
clc
mov
adc
dec
mov
add
fbstp
nop
xchg
retf
in
in
cmp
sub
pop
popa
sub
shl
fist
push
cmp
jge
mov
loope
in
lahf
inc
inc
test
jne
xchg
pop
loopne
or
ret
(bad)
cmp
jle
add
mov
leave
or
mov
sub
or
mov
add
inc
inc
add
mov
mov
test
jge
(bad)
xor
dec
cmp
mov
xchg
arpl
or
xchg
arpl
mov
adc
pop
pop
fsubr
lea
xchg
add
in
add
retf
(bad)
out
(bad)
loopne
cmc
push
mov
fwait
shr
hlt
shr
add
mov
push
fcom
cmp
cmp
jge
or
adc
addr16
sbb
mov
mov
pop
adc
sar
int3
(bad)
iret
cmc
mov
push
dec
mov
add
dec
add
push
adc
jl
mov
nop
add
adc
js
inc
test
mov
popa
cmp
jmp
and
dec
and
mov
sub
add
shr
xor
jl
jne
mov
pop
into
xor
mov
adc
cmp
jl
add
cld
pusha
loopne
push
xchg
fadd
in
cwde
pop
pusha
loopne
loope
and
pop
pop
mov
add
enter
and
imul
lods
or
xor
or
mov
dec
cld
lods
inc
sbb
mov
ror
mov
cmps
test
je
add
or
adc
mov
or
sbb
mov
imul
xchg
pusha
dec
or
dec
arpl
and
push
mov
arpl
push
cld
and
mov
mov
jecxz
cmps
push
shl
iret
mov
inc
icebp
or
lock
cwde
cdq
sbb
(bad)
xchg
in
push
aas
outs
add
add
lea
lock
xchg
pop
sti
mov
loop
pusha
jg
or
jnp
out
mov
int3
add
mov
mov
pop
fidiv
inc
stc
jmp
sbb
adc
leave
mov
adc
dec
or
mov
mov
test
cmovne
(bad)
cmp
push
or
jns
imul
sbb
sbb
clc
push
and
sar
shr
push
cmp
sbb
pop
aam
add
and
add
popa
sbb
loopne
popf
test
das
push
mov
fadd
adc
jnp
fst
pop
or
xchg
add
mov
sub
lds
mov
sbb
popa
jmp
mov
inc
pop
arpl
iret
mov
aaa
xchg
rol
push
icebp
adc
cmp
jl
cmps
mov
iret
stos
push
cmp
fs
out
adc
enter
stos
push
push
mov
xchg
dec
pop
add
(bad)
jbe
add
pop
cmp
mov
mov
hlt
sub
or
mov
push
pusha
inc
add
iret
push
xchg
out
dec
lahf
dec
ins
add
push
mov
mov
add
in
addr16
or
ins
jns
mov
sbb
pusha
pop
mov
daa
ins
or
setge
outs
loopne
or
or
cmp
sub
push
dec
cmp
inc
xor
xchg
aas
sub
pusha
addr16
xchg
jno
ins
sub
add
fdiv
jae
scas
mov
mov
sub
cmp
push
stos
xor
sub
xor
icebp
or
jmp
cld
pop
in
xor
inc
jmp
loope
loop
xor
adc
xor
loop
pop
hlt
or
add
call
add
inc
sub
and
adc
sub
das
or
movs
adc
bound
les
jns
sbb
mov
pop
lea
push
lahf
sbb
xchg
sbb
adc
(bad)
push
nop
ret
daa
mov
loopne
fdivr
sub
lea
repz
sbb
out
nop
add
arpl
add
(bad)
inc
or
sub
push
sbb
jmp
cwde
add
hlt
add
xchg
or
out
add
add
lea
add
cmp
(bad)
and
cmp
rol
ins
push
sbb
int
mov
cmp
push
xchg
mov
(bad)
fisttp
les
dec
mov
enter
mov
push
enter
mov
push
and
cmc
enter
(bad)
lods
or
repnz
or
or
sub
pop
or
mov
mov
dec
mov
or
xor
inc
pop
mov
pop
ret
test
jo
pop
jg
inc
nop
cmp
push
lock
push
adc
dec
push
enter
mov
leave
dec
pop
enter
and
inc
push
enter
mov
pop
shl
and
test
mov
nop
adc
add
lods
in
fcomp
mov
inc
fwait
cmp
and
inc
mov
shl
mov
inc
mov
xlat
in
sub
mov
rol
fild
xor
mov
sbb
nop
mov
jecxz
enter
int3
or
cmp
sbb
in
nop
push
(bad)
lds
lahf
in
xor
ja
xor
fcom
scas
cwde
pushf
lods
mov
ja
sbb
mov
ja
push
loope
loopne
sub
lgs
push
clc
sbb
mov
(bad)
mov
dec
push
mov
in
xchg
(bad)
(bad)
mov
clc
push
sbb
add
(bad)
(bad)
xlat
mov
and
push
ja
adc
ins
int
stc
cmp
ja
and
sub
adc
iret
and
jb
pop
mov
pop
(bad)
jo
add
(bad)
mov
(bad)
xchg
cwde
call
loopne
jae
inc
pop
mov
mov
(bad)
mov
and
mov
lock
nop
rol
inc
cmp
jge
hlt
push
cld
add
lea
or
pushf
pop
add
imul
lock
mov
or
jge
jle
into
daa
mov
lahf
shl
fld
jl
cmps
loope
and
sar
add
mov
fucomip
test
and
lsl
adc
cmp
jg
les
jo
push
(bad)
idiv
sbb
jo
popf
inc
or
(bad)
sti
push
fadd
div
mov
jo
les
jle
sbb
(bad)
nop
sub
pop
inc
adc
inc
lods
outs
enter
mov
mov
mov
mov
fs
sub
dec
fmul
jp
retf
jns
lods
pop
pop
pop
pop
dec
retf
push
jmp
and
(bad)
iret
sbb
fldenv
retf
(bad)
push
add
or
ret
pop
and
sbb
and
or
lock
push
or
mov
bound
rcl
ret
into
dec
ret
cmp
cmc
adc
add
sbb
add
icebp
adc
or
jne
enter
mov
cmp
xor
fild
shl
sbb
or
push
sbb
dec
xchg
int
push
and
mov
out
jle
mov
add
add
push
sbb
add
add
cmp
adc
push
push
mov
in
hlt
adc
int3
pop
ret
sub
std
in
cs
add
add
leave
xor
jmp
push
mov
mov
sub
sbb
and
lock
push
lds
sbb
push
int
mov
and
jae
jno
adc
inc
sbb
ins
add
add
sbb
test
sub
and
mov
loopne
ret
add
nop
in
call
fcmovne
add
adc
mov
inc
add
loopne
push
int
mov
or
jne
xor
das
xor
in
arpl
movs
jg
inc
and
xchg
lahf
aas
mov
loopne
jmp
aas
adc
test
dec
movs
adc
aas
add
cmp
enter
mov
in
jle
cmp
nop
ret
nop
daa
inc
add
out
cwde
sbb
fs
mov
adc
push
adc
cmp
sub
test
xor
nop
add
or
pop
shl
daa
shl
cmp
in
nop
push
xor
mov
cwde
push
mov
sbb
or
or
retf
test
scas
ins
cs
adc
mov
xchg
jb
jbe
or
mov
pop
inc
pop
and
adc
adc
ins
cs
push
pop
and
lock
xor
pop
and
data16
inc
sti
mov
push
repnz
(bad)
jmp
push
add
fiadd
add
scas
and
cmp
ret
xor
push
repnz
pop
ret
add
add
nop
pushf
out
xchg
add
mov
mov
aam
das
inc
inc
inc
push
and
cmp
aam
pop
aad
sub
and
push
leave
stos
outs
push
aad
xchg
sbb
add
loopne
and
ret
(bad)
inc
xor
dec
pop
inc
retf
xor
pop
xchg
inc
cld
ins
ret
and
push
sub
(bad)
dec
pop
add
ins
test
sub
mov
or
shr
or
xchg
sbb
(bad)
lods
(bad)
mov
retf
inc
jb
add
adc
int3
add
dec
fld
test
pop
les
leave
sub
add
add
fcmovnu
push
add
daa
xchg
add
xchg
ftst
xchg
cmp
enter
sbb
in
fucomi
xor
pop
loopne
sahf
(bad)
dec
inc
pop
out
enter
enter
cli
jecxz
push
mov
dec
pop
mov
adc
inc
add
dec
add
jb
sbb
int3
push
xchg
js
iret
push
outs
and
int
js
and
cmp
cmp
mov
push
out
pop
push
inc
fsubp
sbb
leave
stos
add
daa
out
fsubp
inc
enter
cwde
or
loopne
cmps
and
cmp
inc
and
cmp
and
add
ret
pop
test
in
shl
mov
nop
fidivr
push
outs
xor
sbb
lea
aas
rcr
add
in
mov
(bad)
or
imul
test
sbb
inc
mov
pop
test
dec
sub
in
cmp
and
sbb
pop
dec
ret
add
push
mov
ror
jmp
aas
adc
in
sbb
fild
popa
jne
(bad)
ja
ins
je
add
inc
and
push
pop
sub
push
dec
sub
push
dec
and
mov
xchg
ss
dec
cmp
mov
jp
add
mov
push
push
mov
dec
add
or
inc
xor
bound
add
push
aas
out
xor
jmp
push
adc
pop
push
(bad)
shr
pusha
and
sbb
adc
add
xor
sbb
vfixupimmpd
adc
cmp
call
add
fs
fwait
arpl
or
inc
inc
pop
dec
add
call
in
pop
call
pop
mov
push
push
dec
mov
out
dec
jnp
out
int
pop
outs
cmp
out
adc
cmp
mov
jnp
test
call
outs
pusha
jno
jo
cwde
mov
sbb
dec
retf
loop
imul
pop
add
or
dec
pop
imul
dec
cmp
mov
add
call
pop
movs
jae
inc
jl
mov
sbb
aad
in
jmp
mov
jmp
in
fs
cmp
xor
add
cmp
cmp
xor
lds
out
dec
xor
push
repnz
pop
scas
push
add
xchg
xor
jp
call
test
sbb
add
dec
add
push
test
push
xor
aas
fdiv
and
inc
xor
jmp
xor
mov
mov
mov
xchg
adc
and
or
popa
outs
addr16
mov
xor
xor
inc
inc
or
rcl
loopne
mov
div
dec
push
shl
add
scas
xchg
mov
adc
pop
fwait
mov
xor
inc
pop
imul
and
add
js
nop
jge
or
push
inc
sar
rol
inc
inc
inc
mov
inc
cdq
add
lea
movs
mov
push
and
clc
mov
inc
push
adc
xor
pop
mov
sti
pop
xor
xchg
xchg
push
push
popf
or
ja
inc
shl
cmp
pop
cmp
sbb
push
add
dec
popa
pop
and
push
jae
aaa
and
xchg
daa
pop
pop
ss
add
cmp
xchg
dec
xor
cwde
add
fild
or
push
pusha
in
cmp
ds
adc
push
outs
jb
jecxz
add
lock
nop
add
or
dec
xchg
sbb
and
add
jae
sub
and
and
sub
dec
adc
mov
or
inc
jmp
int
xchg
jl
mov
pop
pop
sub
add
pop
cld
in
mov
push
lods
leave
pop
push
or
or
inc
pop
and
sub
out
and
inc
stos
mov
bound
clc
(bad)
jo
addr16
add
or
lsl
and
and
push
sub
push
rol
push
xchg
or
mov
repnz
pop
leave
push
(bad)
call
adc
stos
es
jae
clc
adc
lods
xchg
inc
or
push
call
dec
cli
or
test
(bad)
pop
inc
xchg
push
ins
fwait
(bad)
bound
mov
scas
sub
or
test
(bad)
fild
cmc
repnz
mov
push
test
adc
rcl
std
mov
repz
push
repz
push
pop
push
sub
pop
mov
push
xchg
shl
xor
inc
mov
pop
fcom
je
enter
aaa
pop
mov
mov
push
shl
push
jno
inc
mov
hlt
outs
jo
fstp
js
inc
test
push
loopne
div
test
sub
js
outs
test
ja
sbb
outs
clc
pusha
iret
mov
or
lds
jns
icebp
mov
icebp
repnz
cmp
movs
icebp
jl
push
jb
jecxz
pop
test
pcmpeqd
clc
mov
div
or
dec
dec
dec
data16
daa
and
out
clc
xor
aaa
stc
ins
leave
enter
std
and
inc
in
leave
leave
imul
in
cmp
fnstsw
in
inc
addr16
packsswb
ds
bndldx
or
es
ins
inc
dec
inc
std
lock
add
sbb
test
movs
icebp
add
cli
pusha
jno
je
addr16
inc
mov
shl
xor
adc
bound
addr16
and
pusha
add
addr16
addr16
std
call
dec
jp
push
xor
mov
repnz
mov
or
fwait
je
mov
pop
nop
pushf
pusha
push
addr16
std
adc
add
rol
or
xor
aas
imul
push
movs
push
inc
std
fs
push
inc
std
and
xchg
or
add
add
imul
mov
adc
jae
pop
or
and
and
add
and
add
or
inc
xchg
movs
pop
sbb
call
lock
inc
lock
push
mov
int3
into
and
adc
xor
shr
inc
pop
popf
add
jge
mov
push
bound
stc
inc
fxsave
mov
mov
jb
mov
add
pop
mov
sub
and
lea
jo
sbb
xor
iret
xchg
rcr
mov
mov
mov
cmps
cmps
cmp
shl
mov
in
mov
cmp
dec
or
push
cli
xor
repnz
inc
lds
sub
cmp
loop
lahf
dec
xlat
imul
inc
aaa
or
nop
xlat
ins
add
pop
pop
stos
enter
clc
ins
xchg
mov
push
dec
adc
(bad)
jno
xlat
xchg
xor
push
mov
cmp
or
push
push
lods
and
mov
xchg
outs
pop
mov
aad
jo
shr
shl
sbb
xchg
sbb
xchg
adc
xchg
sbb
add
and
gs
int3
mov
icebp
add
mov
push
call
ror
loopne
xchg
xchg
daa
sbb
pop
pushf
leave
enter
cld
dec
add
leave
mov
xor
in
(bad)
pop
xor
jb
push
ficom
(bad)
pop
movs
fild
sub
repnz
adc
es
(bad)
dec
ins
inc
or
push
add
hlt
test
cmp
add
pusha
jno
jo
(bad)
cmp
inc
mov
aad
xor
ins
aad
and
(bad)
sub
mov
add
movs
adc
add
(bad)
jae
cmp
pop
sub
adc
inc
dec
fwait
jo
pop
and
unpcklps
sti
mov
and
xor
(bad)
aas
imul
and
add
push
pop
xchg
pop
add
dec
xor
or
dec
(bad)
imul
(bad)
jae
popa
inc
mov
and
jecxz
add
and
inc
mov
or
xchg
or
sbb
jo
inc
pop
aam
hlt
aam
loopne
ins
push
adc
ins
and
or
mov
mov
ds
pop
add
adc
or
add
(bad)
ds
xchg
bound
add
jo
xchg
inc
data16
add
push
add
xchg
cmp
test
aaa
in
adc
or
out
cld
and
or
xor
and
push
punpckhbw
inc
adc
and
xor
js
pop
and
inc
nop
popa
pusha
test
xor
test
sub
ss
or
bound
clc
push
jl
punpckhdq
jns
scas
cmp
push
cmp
es
inc
adc
push
push
cmps
dec
inc
cmp
fcomp
(bad)
lock
sbb
sysenter
sub
fnstsw
cwde
push
fdiv
jl
inc
xchg
pop
xor
lock
ret
inc
push
and
pop
mov
ror
cwde
or
adc
(bad)
sbb
out
js
jno
adc
push
hlt
xor
push
or
in
and
das
ss
push
add
(bad)
mov
xor
test
shl
jmp
push
bound
pusha
out
out
cwde
adc
imul
adc
ror
es
dec
dec
xor
out
adc
xchg
sahf
pushf
fmul
pushf
fcom
mul
leave
leave
sub
adc
cmp
cld
jb
xor
inc
push
mov
adc
inc
jge
pushf
mov
fiadd
sbb
xor
sahf
pushf
fimul
sbb
cmp
pop
mov
in
push
mov
mov
aam
stos
dec
enter
sbb
xchg
sub
mov
or
ja
sbb
jno
sbb
sub
jno
mov
xor
test
inc
cmp
pop
inc
and
push
jp
or
add
movs
ja
sbb
sbb
ja
add
mov
sub
adc
mov
sub
das
nop
pop
leave
lock
sbb
and
and
sub
add
push
and
sbb
sbb
sbb
inc
inc
xchg
popf
movs
mov
mov
mov
dec
outs
pop
add
sbb
mov
imul
mov
cmp
lock
push
imul
pop
sub
dec
sbb
nop
cmp
cmp
ja
sub
fdivr
jl
mov
push
movs
fdivr
dec
outs
push
mov
or
iret
sub
pop
add
pop
jge
loopne
add
daa
jbe
aad
pop
stos
sbb
aad
enter
in
pop
mov
pushf
mov
push
enter
or
jno
adc
push
xor
ss
adc
stos
push
cli
out
outs
nop
test
call
push
ret
popf
inc
clc
cmp
jb
out
dec
mov
jne
add
sbb
test
push
les
mul
out
das
add
xchg
cld
loopne
test
call
sbb
add
cmp
loope
movs
sbb
aad
daa
dec
dec
loope
sbb
and
inc
or
push
push
in
mov
push
fs
cmp
jno
push
mov
push
mov
mov
in
adc
das
sub
out
movs
sub
(bad)
hlt
mov
push
adc
mov
fucom
in
mov
inc
sahf
xchg
test
dec
outs
jae
pop
and
bsr
fistp
je
push
and
bswap
xchg
xchg
xchg
pop
fwait
xlat
sbb
leave
leave
leave
leave
sub
in
in
and
cld
jb
xor
inc
and
lea
jmp
mov
cmp
movs
(bad)
aas
psrlw
inc
out
out
pop
or
jne
fimul
aas
add
add
jp
test
daa
pusha
fidivr
or
(bad)
mov
test
dec
adc
popa
and
test
pusha
push
test
xor
add
stos
std
adc
add
mov
hlt
test
xor
xor
mov
sbb
mov
adc
fwait
int3
mov
test
pushf
mov
adc
add
fild
movs
mov
sub
jns
jb
daa
test
cmps
add
sbb
and
pop
inc
test
test
or
dec
mov
imul
rcl
inc
xchg
cmp
pop
test
test
push
push
or
pop
sub
xchg
dec
sub
mov
and
dec
adc
and
stos
cmp
cmp
pop
mov
je
sub
adc
shr
es
popw
mov
clc
arpl
adc
mov
or
sbb
fs
(bad)
nop
mov
cdq
cld
push
xor
cli
cmovle
or
mov
cmp
std
sub
mov
adc
add
xchg
ret
add
push
pop
fdivp
and
ins
adc
int3
or
push
mov
iret
sbb
add
add
sub
sti
test
mov
mov
aas
xchg
outs
xchg
push
mov
mov
push
aas
data16
js
mov
mov
xor
sub
mov
mul
sub
inc
ins
(bad)
out
retf
push
adc
push
rcl
mov
dec
rcl
test
(bad)
dec
cwde
loop
ss
sbb
jne
jl
and
add
je
or
es
adc
mov
pop
xchg
repz
test
cli
and
push
imul
test
call
call
pop
inc
lds
jle
add
push
mov
xchg
(bad)
mov
mov
scas
popa
cwde
into
repz
push
scas
lods
mov
icebp
sub
mov
scas
sbb
pop
adc
ucomiss
mov
lahf
test
int
and
imul
xchg
add
add
and
movs
icebp
hlt
sub
push
jb
icebp
adc
inc
lea
aad
je
dec
or
cmps
pop
adc
or
pop
sbb
clc
xchg
and
stos
mov
add
cmp
into
repz
push
xor
mov
call
mov
sub
daa
or
mov
dec
je
sub
cmps
pop
shld
and
mov
scas
cmp
and
add
in
aam
cmp
stos
and
xor
scas
add
(bad)
(bad)
scas
mov
pop
int
das
cmps
call
clc
xchg
punpckhdq
and
pop
xor
push
dec
and
push
cmp
sub
pop
push
imul
je
mov
mov
mov
xor
test
das
push
xor
add
push
mov
mov
mov
or
fisttp
syscall
xor
push
jno
or
movs
sub
je
mov
cwde
mov
movs
in
xor
mov
daa
nop
adc
mov
xchg
cmp
xor
xor
mov
and
fild
jge
inc
push
mov
scas
or
push
sub
push
pop
jb
jg
ss
rcr
push
jge
inc
ss
aaa
pop
les
cmps
cmp
loop
jg
aaa
outs
dec
or
jmp
or
call
sbb
sbb
xor
dec
fdiv
aad
or
cmp
push
shl
mov
cmp
xor
jmp
lods
imul
inc
add
mov
mov
loopne
mov
ss
add
inc
arpl
ja
push
or
add
clc
fnsave
push
test
jo
popa
ins
push
push
push
mov
cmp
jb
jecxz
add
sbb
mov
outs
jo
dec
int3
ins
in
imul
mov
rcr
dec
dec
and
call
fsub
dec
inc
test
inc
js
iret
add
add
inc
arpl
inc
fcom
add
inc
test
add
inc
add
lock
adc
movs
rcpps
je
add
pop
pop
dec
jg
sub
pop
imul
imul
adc
sbb
push
lock
gs
pop
add
pop
bound
push
jno
xchg
je
adc
cmp
push
std
jle
dec
mov
cmc
sub
push
jb
popa
outs
pop
or
add
push
pop
mov
aam
pop
dec
jb
ins
adc
or
add
iret
in
jbe
aaa
js
pusha
pcmpgtd
xchg
aas
test
inc
das
xor
into
imul
jg
inc
fadd
movs
cs
jne
inc
jmp
pop
mov
inc
sub
pop
jl
or
cs
ins
je
jg
adc
or
adc
dec
add
lock
bound
outs
ja
add
inc
cmp
pop
xor
add
sbb
and
inc
das
push
add
or
add
jg
mov
(bad)
mov
push
push
push
mov
or
pop
cwde
xchg
call
test
mov
shr
dec
test
jl
inc
lea
cmp
inc
and
test
hlt
xor
test
add
adc
rol
jmp
mov
pop
arpl
xchg
fsub
or
adc
or
and
or
mov
or
mov
inc
push
fdivr
loope
sub
mov
or
shr
cmp
inc
(bad)
call
dec
add
or
add
jne
inc
stos
std
adc
or
jae
add
test
fiadd
cdq
mov
jle
mov
test
push
les
bound
inc
add
and
sti
inc
push
sbb
jne
dec
inc
xchg
push
inc
popa
inc
into
dec
and
scas
and
int3
add
sub
rol
clc
mov
adc
ss
xchg
dec
fcom
shl
pushf
shr
pusha
js
scas
push
push
add
add
ja
adc
pcmpeqw
inc
cmp
cmp
fild
or
dec
cmp
jge
mov
imul
ins
fidivr
add
push
add
or
retf
mov
fiadd
mov
jp
and
inc
sar
xor
inc
mov
dec
add
adc
mov
add
or
push
mov
enter
addr16
add
or
push
shl
cld
inc
add
imul
jne
push
mov
mov
push
inc
cmp
loope
adc
pop
lea
push
add
cmp
or
pop
sbb
add
sub
add
sti
dec
std
push
hlt
cmp
xor
xor
mov
js
pop
xlat
jle
mov
and
(bad)
mov
out
jg
jge
cmp
jge
test
dec
(bad)
mov
mov
rcr
cmp
das
push
add
dec
cli
call
add
xor
mov
xor
not
and
dec
push
jp
shr
or
sub
loope
ret
push
sbb
add
iret
in
ds
dec
js
mov
cmp
xor
xor
call
mov
jle
sub
dec
mul
push
adc
dec
inc
add
jp
jmp
cmp
xor
lea
int3
adc
add
dec
mov
or
sub
fs
pop
add
adc
push
fadd
loop
sbb
ja
nop
add
clc
or
push
xor
add
jl
sbb
push
and
mov
push
push
sub
mov
ret
ss
add
and
adc
in
jge
mov
inc
inc
push
add
add
ins
cmp
(bad)
out
(bad)
(bad)
fld
js
ja
adc
mov
mov
addr16
call
inc
jne
div
aas
jbe
cmp
xor
sbb
sbb
sbb
jno
dec
fisttp
or
mov
or
push
add
mov
push
inc
pop
cmc
mov
mov
add
inc
sub
mov
push
stos
inc
push
in
ret
push
push
and
dec
jnp
add
mov
stos
sar
mov
ret
adc
lea
cdq
sub
mov
jne
and
je
gs
retf
adc
nop
sub
mov
push
mov
cdq
(bad)
cmp
pop
in
pop
ret
js
mov
inc
pop
and
xchg
and
rol
cmp
xchg
dec
cld
repnz
shl
add
test
adc
mov
dec
or
xor
dec
push
xor
data16
mov
mov
mov
push
lea
pushf
jne
pusha
ror
add
dec
or
rcr
enter
add
stos
shl
push
and
jmp
and
xor
adc
retf
lea
sub
adc
and
adc
or
rol
cld
add
add
xchg
xor
aam
mov
test
jo
rol
inc
mov
sub
rol
(bad)
cmp
(bad)
adc
and
cmp
pop
mov
or
out
inc
test
aad
test
push
mov
xlat
std
(bad)
sbb
pop
jnp
call
pop
clc
(bad)
sub
push
mov
clc
inc
xor
cmp
jae
mov
inc
pop
xchg
aad
push
sbb
and
sbb
ss
cmp
js
inc
mov
(bad)
lods
lods
add
cmp
jg
jmp
pop
add
jmp
and
(bad)
push
mov
aad
cwde
or
mov
fimul
in
or
ja
inc
add
or
add
jle
xor
sbb
out
mov
inc
adc
push
cmp
mov
push
in
test
sub
jp
in
mov
dec
add
shr
sub
jge
fcomp
test
sub
mov
neg
add
enter
pop
or
lea
inc
pop
cmps
lods
or
pop
lahf
js
cmp
mov
mov
fadd
rcr
stos
in
loope
or
mov
mov
cmp
jl
pop
enter
repz
sub
dec
scas
lea
retf
sbb
fadd
adc
and
hlt
pop
popa
and
cmpxchg
lea
mov
mov
cmovs
scas
out
mov
jge
scas
stc
es
pcmpeqd
fstp
lea
mov
adc
push
test
push
js
cmp
push
shl
mov
jmp
push
dec
stos
add
and
pop
and
inc
cmp
jle
(bad)
cli
nop
je
and
xchg
mov
sub
cmp
jae
and
add
pop
jmp
cmp
mov
xchg
jbe
dec
add
pop
mov
push
ds
inc
lds
sbb
dec
mov
cmp
daa
aaa
add
ret
rol
(bad)
inc
jle
push
push
push
call
aaa
loope
loopne
adc
jne
pop
shr
or
mov
or
inc
or
loopne
add
sub
int3
jne
inc
addr16
loopne
jge
por
and
jmp
(bad)
cmps
aaa
idiv
in
jne
movs
mov
xchg
mov
pusha
xchg
int
push
adc
cmp
dec
mov
ret
mov
cmp
ss
outs
popf
call
jmp
out
dec
shl
sub
add
and
mov
pop
das
ss
xor
dec
cmp
jp
in
add
lds
dec
sar
push
ja
loop
shl
and
loop
xchg
ret
push
push
pop
adc
mov
jno
mov
mov
std
adc
sbb
and
addr16
lahf
mov
adc
adc
arpl
adc
mov
xchg
or
std
cli
jmp
div
je
mul
jnp
cld
repnz
jge
cs
xor
hlt
scas
rcl
inc
add
shl
shr
push
add
mov
sub
ret
add
push
push
ins
imul
popa
test
int3
dec
ins
ret
xor
sbb
neg
push
loopne
xor
jmp
enter
adc
fmul
add
mov
mov
add
aas
outs
add
icebp
add
adc
mov
xor
retf
xchg
mov
lea
pop
mov
adc
jb
mov
imul
push
mov
sub
lea
mov
cmp
ja
mov
ds
lea
xlat
sub
pop
cmp
scas
adc
test
stos
adc
outs
sbb
mov
cdq
sar
xchg
and
cmp
cmps
jge
outs
mov
fstp
push
cli
sbb
mov
mov
(bad)
shl
nop
xor
jmp
std
(bad)
dec
cmovns
jne
fs
and
and
and
pop
nop
std
add
cmp
je
pop
and
xchg
out
sbb
jne
xor
inc
jge
imul
jmp
and
lar
mov
push
fwait
pop
(bad)
in
mov
mov
sub
cmp
pop
pusha
mov
mov
push
add
add
aaa
jns
cmp
popa
inc
fimul
xor
les
add
xor
inc
(bad)
arpl
out
jmp
mov
js
pop
xor
call
cld
push
aad
cmp
ins
les
popf
nop
inc
or
js
mov
scas
lods
mov
(bad)
stos
add
adc
add
push
loopne
shr
mov
fcmovb
add
add
jle
rol
test
sar
sete
add
cs
sub
or
or
out
gs
jle
sub
test
inc
mov
aas
(bad)
pop
mov
cmp
jnp
mov
jae
lods
pop
mov
inc
mov
mov
mov
sahf
inc
sub
jle
cmp
push
adc
mov
mov
mov
or
xchg
out
outs
pop
pop
xor
jmp
ror
fimul
pop
add
xchg
cmp
cmp
in
je
mov
gs
jae
in
fistp
push
sbb
loope
push
sub
shl
mov
sub
mov
and
sbb
sub
push
xchg
add
or
jmp
(bad)
shr
mov
mov
inc
jno
adc
aam
aam
mov
shr
lods
loopne
add
pop
popf
cmp
xchg
mov
xchg
sub
add
lock
loopne
test
push
jge
jge
rol
mov
mov
(bad)
out
mov
neg
cmp
jle
call
dec
jg
jg
mov
mov
sub
and
imul
fisttp
mov
sub
sub
mov
(bad)
sbb
or
push
popf
pop
lea
iret
imul
popf
aaa
jmp
cdq
add
out
add
call
add
es
icebp
mov
mov
adc
sbb
pop
push
je
mov
popa
sbb
adc
adc
neg
pop
sub
push
and
inc
jbe
lods
fcom
dec
(bad)
cdq
(bad)
pop
push
ss
cdq
mov
and
add
ds
or
mov
sbb
push
mov
add
xchg
pop
add
ror
jmp
fld
fstp
fwait
xor
pop
mov
push
cli
hlt
add
xchg
xchg
movs
mov
and
out
mov
cmp
mov
lods
retf
inc
cld
inc
loop
pop
ja
mul
pop
add
and
scas
sub
out
or
xor
mov
adc
int
push
add
inc
dec
xlat
mov
lea
dec
lock
in
add
in
fld
fstp
ret
xor
push
jb
cmp
xchg
dec
mov
sbb
xchg
mov
arpl
push
push
mov
imul
xor
aam
and
neg
jmp
and
fidiv
int
add
int3
fisubr
push
cmc
adc
aaa
push
xor
sbb
or
or
ret
nop
hlt
inc
loop
cmps
fist
sub
or
cmps
or
loope
dec
mov
cdq
push
or
and
lds
sbb
push
or
ffree
jecxz
cmp
add
ret
sbb
inc
add
add
imul
push
cmc
fld
push
xlat
fcom
or
jns
shr
push
sbb
ds
aaa
and
cmps
call
xor
aaa
push
jl
mov
test
js
lods
sbb
push
aam
adc
xor
out
sbb
mov
ss
adc
lahf
div
in
cmp
clc
inc
dec
xchg
jge
mov
push
add
push
jbe
add
cld
imul
or
add
stos
or
femms
add
dec
mov
push
(bad)
popa
outs
je
jns
gs
inc
clc
shr
or
push
add
test
dec
add
rcr
jl
push
dec
add
outs
jo
push
pop
add
jae
pop
enter
xchg
icebp
popf
cld
push
outs
jne
arpl
adc
sub
mov
inc
adc
or
sbb
xchg
push
adc
ret
popa
fs
inc
ss
stos
push
mov
lea
sbb
scas
inc
xchg
pop
pop
inc
scas
push
pushf
lods
jp
ret
shrd
iret
(bad)
pop
ins
stos
adc
hlt
xchg
mov
or
push
or
stos
push
pop
int
sbb
inc
rcr
lds
pop
neg
je
mov
loop
das
mov
imul
in
dec
and
inc
add
jle
sub
inc
mov
adc
mov
inc
mov
mov
pushf
mov
mov
push
ins
push
mov
lea
xor
push
adc
loopne
add
pop
xchg
cmps
mov
mov
push
add
or
(bad)
xor
add
add
mov
pop
xchg
jno
fadd
and
push
sar
add
scas
or
or
adc
jae
pop
cmp
adc
inc
push
pop
repz
push
jo
sbb
mov
sbb
sbb
mov
out
pop
push
(bad)
push
add
add
dec
pop
pop
mov
push
sbb
add
(bad)
or
inc
mov
mov
mov
fidiv
push
xchg
jle
add
clc
outs
or
outs
loopne
fsubr
sbb
mov
add
push
inc
or
inc
adc
add
test
inc
rcl
adc
mov
fadd
aam
fnstenv
dec
add
sbb
fdiv
retf
xor
jle
daa
jo
sub
push
inc
or
shr
jl
add
scas
add
jmp
popa
enter
mov
or
dec
call
add
test
imul
xchg
dec
sub
mov
imul
imul
inc
add
and
pop
arpl
mov
dec
add
ret
not
rcl
fmul
fadd
sbb
jmp
add
shl
jne
push
sub
and
push
out
and
cmp
jmp
data16
sub
lea
push
add
jo
das
mov
add
dec
xor
loop
(bad)
js
jle
xor
dec
xlat
cdq
and
dec
inc
or
in
dec
fcom
jg
inc
(bad)
loopne
add
loopne
mov
jb
sbb
dec
fdivr
and
sub
or
imul
inc
adc
aam
inc
xor
pop
hlt
inc
fsubr
clc
dec
in
jnp
xchg
xchg
lahf
in
ret
ds
mov
pop
and
pop
sub
fadd
test
(bad)
(bad)
rep
cmps
icebp
jbe
nop
(bad)
rcr
mov
push
or
fidivr
je
dec
je
add
jmp
mov
lea
dec
pop
pusha
pop
ins
rol
mov
in
jg
in
in
push
xor
ins
lock
push
jmp
mov
or
outs
inc
fmul
push
or
cli
add
mov
mov
pop
lea
mov
add
pop
imul
mov
inc
add
faddp
jbe
das
sar
or
mov
fs
mov
out
scas
mov
adc
inc
dec
mov
loopne
in
pop
mov
adc
pusha
cwde
pop
cwde
add
sbb
fwait
inc
(bad)
dec
sub
dec
daa
inc
sbb
sbb
add
jmp
fidiv
pushf
pushf
or
mov
and
inc
out
add
movs
or
scas
xchg
xor
and
add
out
jle
je
pushf
(bad)
add
ins
loopne
sbb
sahf
ret
xor
xor
inc
ret
loope
dec
outs
sbb
sbb
dec
shr
mov
pusha
cmp
dec
or
inc
push
lock
and
xchg
lock
cmp
inc
daa
clc
ret
inc
clc
jo
adc
cmp
adc
clc
push
or
pop
loop
dec
push
imul
jo
sysret
add
or
pop
dec
add
out
dec
scas
int3
mov
add
sbb
(bad)
pop
dec
outs
jne
pop
push
dec
imul
pop
in
retf
or
arpl
mov
cmp
sub
jae
ds
ds
aas
nop
adc
data16
je
dec
or
aad
ins
xor
add
adc
push
mov
mov
(bad)
out
fs
pop
adc
out
fist
jge
test
push
aam
fcomip
or
mov
les
clc
jge
in
add
jge
bound
arpl
in
in
arpl
arpl
fs
add
cmp
push
leave
nop
jp
fs
jge
mov
test
gs
inc
cmps
popf
adc
test
jmp
push
and
or
les
fs
cmovp
jge
mov
pop
aad
jecxz
cmp
adc
ins
dec
dec
mul
xchg
fisub
loopne
pop
mov
ficomp
jb
mov
and
push
push
xchg
and
xchg
jne
cmp
jb
enter
sub
addr16
push
add
push
jns
sub
xchg
cmp
jne
addr16
dec
push
leave
dec
jne
addr16
xchg
and
test
sbb
sbb
fsub
sbb
mov
pop
in
mov
sub
fist
jmp
daa
movs
imul
cmc
das
inc
jne
ror
daa
pop
pop
jg
adc
mov
or
adc
clc
mov
add
or
or
xchg
dec
cs
push
add
mov
pop
imul
xor
cmp
test
int3
packsswb
add
ret
fwait
ss
cmp
test
adc
imul
push
in
(bad)
ror
xor
sar
in
push
imul
mov
inc
jmp
pop
push
outs
addr16
inc
add
rol
adc
sub
je
mov
jae
in
pop
xor
jp
or
or
cmp
inc
push
js
scas
push
test
add
fs
rol
cmp
and
pop
or
fld
xlat
ret
sub
jns
shr
adc
pop
mov
jne
stos
sub
pop
mov
push
lds
imul
push
inc
out
jae
pop
mov
inc
int3
dec
add
jae
fbstp
call
mov
ins
adc
sbb
add
cmp
inc
jmp
or
lds
shl
jo
add
adc
xchg
(bad)
js
mov
inc
mov
dec
jecxz
mov
mov
pusha
lods
xor
xchg
and
cmp
or
and
and
pop
jp
mov
fadd
add
sbb
fiadd
xchg
jo
push
rol
mov
das
inc
outs
xchg
cmp
or
sub
xchg
xor
pop
leave
ins
add
dec
pop
outs
fwait
(bad)
pextrw
in
sti
xor
mov
std
xor
jmp
pop
adc
jne
imul
and
dec
ins
jo
mov
inc
repnz
ins
jo
mov
mov
ins
jo
sub
fisttp
jbe
or
inc
inc
lea
fdivr
adc
or
inc
inc
clc
test
inc
jge
test
ins
jo
dec
push
or
lea
pop
nop
test
inc
sbb
les
push
sub
retf
test
inc
(bad)
dec
pop
jl
add
(bad)
mov
pop
(bad)
push
inc
xor
lock
pusha
xchg
push
pop
sub
dec
in
inc
lock
push
dec
jns
or
push
mul
push
inc
popf
xor
fcomp
aad
add
movsx
push
shl
loope
enter
mov
jmp
aaa
cmp
bound
add
test
icebp
push
out
and
mov
mov
and
add
cmps
jne
jecxz
dec
repz
sbb
adc
sar
push
mov
pop
outs
aaa
inc
inc
inc
inc
xor
and
mov
push
inc
adc
push
sbb
or
pop
add
add
mov
adc
mov
add
add
aaa
ins
ins
inc
cmps
add
popa
mov
or
dec
jae
test
push
rcl
and
jle
fwait
jae
add
push
and
fiadd
rol
xor
outs
scas
jg
xchg
push
push
and
fptan
mov
pop
adc
push
add
out
je
imul
cmp
int
pop
jne
sbb
inc
dec
push
dec
inc
daa
or
adc
xchg
dec
inc
or
mov
mov
fidivr
dec
push
xchg
and
aaa
add
inc
inc
add
pop
push
out
adc
xchg
stc
add
or
ret
ja
pop
aas
push
bound
addr16
ins
add
inc
push
sti
ins
in
dec
ret
ja
jmp
add
mov
push
gs
popa
js
ins
sbb
or
lds
lock
mov
inc
ret
scas
popf
cmp
and
add
mov
xor
pop
pop
or
pushf
fwait
push
jle
mov
pop
ja
adc
pop
sub
in
mov
jns
jmp
or
data16
cmp
push
push
(bad)
popa
ucomiss
addr16
inc
xor
mov
or
pop
cmp
add
jbe
mov
mov
clc
push
ins
jae
push
ds
fwait
rol
daa
push
lds
sub
jns
mov
or
or
or
pop
jo
or
test
adc
push
cmp
inc
(bad)
push
sbb
mov
mov
popa
call
cmp
xor
enter
push
push
or
repz
repz
or
push
inc
jmp
and
pop
ret
adc
push
enter
sub
test
jne
cmp
sahf
arpl
or
or
cmp
mov
and
in
push
mov
sub
adc
cmp
xor
ret
push
jle
rcl
das
loopne
in
or
pop
adc
call
mov
(bad)
pop
pop
scas
lock
push
addr16
jae
mov
lea
movs
add
adc
movs
adc
cpuid
fadd
pop
fdiv
push
inc
jne
push
pusha
movs
and
xor
(bad)
test
jl
mov
xor
sbb
popa
push
push
test
and
dec
shr
ret
mov
dec
dec
aam
adc
xchg
xchg
dec
sbb
js
imul
and
(bad)
push
or
or
ret
in
jns
push
or
and
push
add
inc
push
jo
addr16
nop
pushf
stos
jnp
push
mov
je
jle
daa
cs
test
test
xchg
push
and
xchg
adc
push
enter
std
push
inc
ins
std
push
jns
jl
mov
push
ret
jge
jge
or
adc
out
dec
push
imul
sbb
xchg
in
sub
jne
or
je
mov
scas
iret
xchg
lods
push
clc
push
dec
xchg
ja
push
jmp
mov
ret
cmp
jmp
sbb
push
mov
push
sub
ror
sub
rol
add
aas
adc
push
add
jne
adc
lea
xor
sub
jmp
test
cs
mov
(bad)
push
add
adc
aam
mov
fs
pop
pop
mov
sbb
pop
mov
or
and
outs
sbb
cmps
jb
sub
pop
ja
or
cmp
xchg
test
jbe
sub
loopne
jg
xor
dec
cmp
retf
dec
xor
dec
icebp
pop
add
lock
hlt
fs
scas
nop
push
cmp
mov
imul
ins
out
pop
jo
jge
aaa
push
outs
push
ds
fwait
rcl
sbb
ret
pusha
push
mov
mov
push
jns
sti
daa
adc
ret
leave
mov
test
or
cmp
pushf
xchg
xlat
xchg
or
cmovs
inc
fsub
and
mov
call
scas
sub
je
inc
mov
ins
pop
sbb
cmp
mov
jle
adc
jp
js
ror
and
pushf
rcr
push
add
mov
jge
jbe
lods
cld
test
mov
mov
stc
mov
xchg
sbb
lea
cmc
mov
add
nop
out
lods
pop
dec
sbb
add
sbb
fsub
jae
test
push
retf
movs
call
dec
cdq
jo
loopne
mov
mov
mov
xchg
add
or
add
mov
cmps
mov
(bad)
shl
(bad)
jge
cwde
jns
ins
inc
mov
jg
mov
fisttp
adc
sub
jns
data16
cwde
sub
mul
mov
rol
fwait
add
mov
mov
or
xor
addr16
scas
dec
sbb
dec
pop
xchg
mov
xor
mov
inc
add
jne
cmps
(bad)
popa
mov
cmp
stos
jo
inc
jno
pop
cmp
dec
bound
dec
fs
cmp
jb
push
and
jle
adc
xchg
sbb
push
outs
ret
ret
or
outs
test
loop
fs
enter
add
dec
and
jecxz
cmp
or
dec
popf
xor
xchg
pop
in
push
scas
inc
movs
and
addr16
inc
mov
outs
fimul
add
add
push
paddd
or
inc
push
aaa
sbb
mov
pminsw
sbb
nop
push
in
jmp
sbb
inc
cmp
add
mov
test
and
cmps
or
xor
test
(bad)
jns
lock
jb
je
push
dec
or
movzx
mov
fmul
jmp
cmp
arpl
ret
iret
mov
test
cld
lock
sub
loopne
xor
mov
out
clc
xchg
cmp
mov
fild
sbb
leave
add
add
lods
fcomp
cld
inc
inc
adc
sar
adc
enter
or
push
dec
add
mov
or
sar
adc
adc
mov
jmp
into
movs
jne
and
inc
or
bound
outs
push
sub
cmp
xor
dec
add
inc
out
push
add
push
enter
out
push
or
or
mov
jae
push
jnp
pop
retf
lahf
inc
push
sbb
fild
clc
hlt
mov
mov
das
adc
inc
xchg
sbb
fdivr
loope
adc
xchg
fdiv
pop
sahf
push
add
dec
ret
out
add
and
sub
cmp
xchg
into
and
in
ss
imul
jbe
in
add
pop
jnp
in
dec
xchg
loopne
add
push
push
cmp
xor
or
inc
xchg
xchg
mov
xchg
dec
call
stc
jmp
dec
mov
add
add
pop
add
punpckhbw
add
inc
sub
sub
dec
xchg
retf
gs
cmp
sub
iret
xchg
mov
jg
hlt
jl
adc
jg
sub
sbb
jle
cmp
into
les
push
int3
add
out
fimul
sub
arpl
call
pop
cmp
inc
xlat
(bad)
call
push
dec
test
jl
dec
xchg
sbb
mov
jmp
popa
pusha
mov
ins
scas
aas
adc
mov
add
jb
clc
nop
(bad)
hlt
(bad)
outs
jo
jns
bound
rcr
sub
sub
shr
ror
lods
stc
adc
icebp
adc
cwde
sub
lea
jp
mov
ficomp
mov
test
neg
loop
adc
or
adc
fcom
addr16
mov
outs
ret
jle
rcr
or
inc
add
faddp
daa
in
and
add
mov
xlat
lock
addr16
or
out
pop
or
dec
push
add
or
or
push
add
xchg
movs
in
dec
test
data16
or
adc
mov
ins
adc
adc
js
(bad)
sbb
aam
les
enter
test
clc
push
dec
xor
or
mov
dec
sbb
dec
jmp
cli
nop
pop
inc
pop
dec
mov
sub
aad
or
retf
int3
in
cmp
jae
(bad)
or
or
push
adc
mov
cmp
mov
or
or
add
cmp
push
scas
inc
jae
clc
inc
sbb
push
add
xor
or
sub
scas
dec
mov
jne
ss
inc
push
test
repnz
fstp
xor
(bad)
pop
or
leave
jae
adc
push
jecxz
xchg
aas
jmp
or
fucomp
movs
enter
fucomip
aas
retf
jae
push
jns
push
fild
movs
loope
inc
add
in
mov
jp
adc
and
rol
pop
fadd
adc
bound
jmp
jmp
leave
push
das
or
test
cmp
or
or
(bad)
clc
add
bound
jne
sub
idiv
push
div
push
icebp
in
out
ret
imul
test
clc
or
data16
popa
fcomip
clc
adc
sub
ret
xchg
push
fsubr
push
pop
dec
test
jge
mov
push
cld
lea
leave
(bad)
sti
push
add
rol
cdq
loop
clc
inc
scas
add
fwait
push
adc
adc
ror
lods
add
aas
fsubr
push
cmp
sbb
jae
retf
sbb
movs
jb
xchg
retf
and
xchg
(bad)
aad
and
xor
lock
popa
test
mov
stc
popa
sbb
add
push
push
cmp
xchg
cmp
xchg
add
mov
adc
fcom
xchg
pop
mov
lea
inc
add
push
iret
jbe
pop
mov
lahf
inc
mov
push
xor
mov
es
cmp
push
lods
sub
loope
in
ret
sbb
cwde
sbb
push
adc
retf
mov
jl
out
mov
mov
xchg
inc
xchg
test
aaa
sbb
int3
pop
movs
cmp
xor
dec
adc
mov
enter
cs
jne
movs
pop
dec
push
cdq
movs
adc
push
dec
or
(bad)
movs
xor
sbb
or
push
sbb
shl
push
mov
mov
rcl
ds
jg
add
dec
dec
and
dec
mov
add
push
(bad)
mov
leave
leave
ins
cs
mov
mov
leave
leave
leave
leave
mov
leave
leave
leave
mov
leave
leave
leave
mov
leave
leave
leave
movs
cmps
cmps
test
leave
leave
leave
test
leave
leave
leave
lods
scas
scas
nop
leave
leave
leave
leave
xchg
xchg
xchg
xchg
leave
leave
leave
leave
xchg
xchg
xchg
cwde
leave
leave
leave
leave
cdq
call
popf
sahf
lahf
or
leave
leave
add
xchg
mov
sub
push
daa
bound
cmp
or
or
sub
cmps
add
cmp
in
add
addr16
or
push
ret
dec
cmp
andps
dec
outs
je
xor
xor
rol
adc
add
xor
xlat
add
fwait
imul
and
fisubr
pop
dec
daa
pop
xor
adc
xor
addr16
cmp
add
data16
data16
pop
cmp
ins
iret
movs
xchg
pop
push
mov
imul
push
jecxz
cmp
iret
mov
fwait
push
btr
push
iret
push
ja
adc
aas
in
fadd
add
add
pop
inc
inc
jne
push
inc
or
jecxz
lds
or
add
or
inc
adc
(bad)
std
xchg
(bad)
dec
add
jmp
xchg
pop
push
aas
adc
cmc
add
sub
rol
in
shr
xor
push
push
imul
movs
fwait
push
jne
(bad)
cmp
leave
sbb
push
outs
fs
adc
push
and
pop
imul
jno
push
les
jo
jne
loope
rol
jl
and
ins
int
outs
ins
outs
or
or
pushf
jb
arpl
add
jecxz
jecxz
push
outs
cmp
cmps
jne
or
adc
and
cmc
or
xchg
add
pop
add
mov
mov
out
les
inc
push
dec
adc
or
jecxz
jg
iret
movs
xchg
adc
add
adc
mov
and
cmc
add
aam
in
loope
inc
dec
or
dec
gs
movs
mov
addr16
fs
xor
daa
jge
retf
cwde
loope
push
lds
sbb
mov
aas
adc
cwde
cli
add
sbb
cwde
xor
fsub
dec
movq
sahf
and
xor
and
scas
fs
sbb
pushf
mov
jo
inc
jae
or
adc
cli
mov
add
es
ins
inc
inc
ins
mov
add
and
je
mov
(bad)
push
adc
imul
iret
inc
mov
lods
ds
fadd
inc
fld
fld
mov
mov
fs
add
push
add
cli
and
add
ins
pusha
push
adc
or
xchg
outs
sbb
cmps
and
loop
xchg
push
call
movs
or
sbb
mov
shl
push
mov
lock
mov
adc
or
setl
dec
mov
js
(bad)
out
mov
ds
or
mov
push
imul
jmp
add
sar
dec
aas
cmp
inc
or
mov
jecxz
or
jecxz
fld
dec
(bad)
cmp
jge
add
jmp
lea
sbb
xchg
in
mov
jle
rcr
and
(bad)
pop
xor
(bad)
mov
inc
dec
jne
popa
outs
mov
xchg
inc
movs
popa
je
add
ret
arpl
add
add
adc
in
into
xchg
mov
adc
dec
inc
lahf
lea
sbb
ror
div
bnd
pop
or
xchg
nop
jp
adc
mov
cmp
inc
mov
mov
pop
xchg
add
mov
cmp
je
push
bound
xchg
(bad)
(bad)
out
mov
mov
cmp
sub
xor
(bad)
das
mov
adc
clc
push
cmp
pop
fcom
mov
xchg
inc
test
jle
clc
mov
pop
push
out
in
retf
imul
mov
movs
and
loopne
xchg
mov
pop
add
shufps
in
loopne
fist
jle
mov
add
out
inc
sbb
mov
loop
je
fcomp
add
xor
je
aas
lods
stos
dec
imul
inc
add
int3
dec
or
out
push
test
cmp
adc
push
shl
or
jmp
lahf
add
jge
or
loope
in
lahf
add
cmc
dec
pop
fstp
aam
push
pop
(bad)
lock
pop
daa
push
(bad)
(bad)
jne
std
jmp
lahf
pusha
pusha
add
inc
inc
push
call
cs
sub
arpl
push
push
mov
(bad)
sti
inc
inc
inc
inc
or
inc
dec
dec
push
dec
dec
push
inc
or
inc
inc
dec
pop
sub
div
test
push
push
push
push
push
pop
inc
push
add
or
idiv
mov
inc
dec
inc
dec
inc
push
push
dec
push
push
pop
and
push
jne
inc
push
sbb
lock
push
pop
adc
or
push
jo
repnz
je
mov
mov
pop
inc
rsqrtps
scas
bound
add
push
cmps
addr16
dec
adc
out
aaa
push
loopne
gs
jb
jnp
push
pop
ret
sbb
mov
das
pop
test
sbb
in
adc
add
push
jg
add
cmp
ja
and
shufps
adc
fbld
in
or
inc
mov
imul
jae
fs
jo
clc
(bad)
jg
mov
retf
data16
dec
mov
mov
ficom
add
xor
inc
pop
add
mov
addr16
mov
daa
lds
(bad)
mov
aaa
movs
xor
add
adc
cwde
scas
js
adc
aas
mov
sbb
leave
lods
(bad)
xor
pop
rcl
outs
stc
pop
js
mov
xchg
jnp
(bad)
aad
or
or
in
adc
xchg
dec
test
jg
pop
push
add
cmp
jl
pop
popa
fsub
inc
pop
jge
mov
mov
mov
lds
mov
jmp
loopne
dec
sub
(bad)
(bad)
inc
push
mov
(bad)
movs
das
dec
cmps
push
mov
cmps
and
mov
xchg
xor
shl
iret
sahf
cmp
dec
mov
sar
loop
test
push
les
(bad)
(bad)
mov
push
jbe
push
cwde
fs
div
mov
push
jl
push
mov
outs
test
mov
push
jbe
rcl
mov
hlt
mov
ret
test
push
les
push
mov
mov
(bad)
das
and
xchg
push
aaa
push
movs
gs
dec
int3
dec
jmp
imul
sti
js
sub
sub
sub
inc
not
outs
push
jbe
stc
adc
mov
adc
jo
and
and
cdq
adc
push
int
pusha
xchg
dec
or
push
jo
popa
je
daa
ret
test
addr16
jnp
aam
call
out
dec
or
ins
cmps
adc
cmps
pop
mov
stc
imul
movups
xchg
jbe
cmps
aas
clc
push
mov
jp
retf
test
adc
mov
in
lss
and
pop
daa
test
lods
dec
movhps
pop
add
inc
test
stos
pop
sbb
mov
pop
out
(bad)
sbb
int3
sbb
stos
nop
pop
push
add
pop
add
lock
mov
lahf
loop
in
and
mov
lods
js
cmp
and
cmp
push
sub
jnp
mov
add
das
ds
jae
into
sbb
push
add
and
mov
cwde
scas
push
push
or
cs
mov
inc
std
push
or
xor
sbb
addr16
into
lea
popf
pop
inc
popa
mov
adc
or
sar
xchg
or
mov
sub
inc
mov
jb
cwde
pop
mov
cmp
jne
jne
sub
call
ja
mov
ins
cmp
or
sub
xor
or
movs
adc
outs
(bad)
push
pop
ins
inc
mov
xor
fadd
(bad)
sub
or
add
aaa
sub
push
inc
stos
and
push
cmp
push
dec
xchg
inc
and
sti
sub
sti
sub
rol
push
js
xor
daa
jns
pop
push
loopne
retf
push
repz
dec
xor
mov
ins
sub
sbb
arpl
dec
xor
mov
mov
cmp
cmps
push
or
jo
mov
xor
push
mov
or
stc
add
mov
or
pop
or
outs
popa
fs
outs
mov
inc
imul
xor
clc
push
jb
or
inc
dec
nop
mov
outs
jle
sbb
push
lahf
push
gs
ins
sbb
mov
dec
sbb
adc
add
adc
das
add
mov
or
push
adc
cmp
les
popa
mov
dec
mov
ja
sbb
or
mov
dec
sub
les
mov
mov
inc
test
rcl
sbb
rcl
xor
es
cwde
adc
cwde
push
loopne
inc
cwde
daa
cmp
or
and
shr
repz
repz
sbb
xchg
and
jbe
cwde
mov
aam
inc
leave
jne
test
inc
cwde
inc
dec
jo
xor
mov
inc
pop
sub
xchg
push
push
mov
add
xor
cmp
je
lds
add
mov
pop
cmps
add
add
cwde
mov
ins
add
push
mov
mov
mov
neg
mov
xchg
xchg
xchg
inc
xchg
mov
fcom
add
add
sub
jle
lock
cs
and
pop
ja
and
and
xor
mov
sbb
enter
adc
push
loope
add
jne
add
test
(bad)
sub
mov
add
push
jecxz
jmp
popa
cmc
dec
pop
xchg
push
mov
add
or
mov
iret
mov
sbb
inc
or
mov
mov
(bad)
fisttp
inc
xchg
adc
xor
inc
adc
and
mov
inc
and
shl
mov
sub
sbb
adc
dec
(bad)
jmp
les
test
imul
jo
or
mov
sbb
add
mov
add
push
(bad)
fmul
push
gs
sbb
fs
pop
mov
stc
mov
out
cmp
jns
rcr
xor
ret
inc
jg
test
adc
add
in
mov
adc
out
dec
sub
stc
jnp
je
ins
cmp
xchg
mov
inc
add
cmps
fiadd
(bad)
hlt
push
xor
sbb
xor
jmp
in
inc
push
cmp
cmp
add
popa
push
push
nop
mov
inc
pusha
mov
in
and
xchg
xchg
or
sub
xchg
jnp
unpcklps
push
adc
add
lock
rcr
enter
push
pop
imul
ins
pushf
mov
push
xor
xchg
sbb
xchg
dec
mov
leave
xchg
inc
adc
add
movs
mov
jmp
or
adc
push
push
outs
pushf
pop
xor
in
adc
mov
test
xchg
nop
mov
mov
test
mov
mov
das
sbb
or
nop
xor
mov
xor
and
outs
add
mov
push
test
aaa
xchg
pop
inc
shl
mov
dec
dec
lods
sbb
jp
mov
leave
push
add
nop
or
mov
add
inc
xor
sbb
outs
jmp
jmp
aaa
loop
jbe
lods
jne
jns
cwde
popf
out
sbb
(bad)
cmp
movs
xor
outs
xchg
inc
sbb
dec
sbb
inc
js
mov
mov
adc
mov
cmp
aaa
fs
gs
cmp
inc
cmp
or
imul
retf
cmp
mov
data16
in
mov
ins
clc
mov
add
pop
test
push
add
sbb
ins
and
mov
inc
add
nop
idiv
xchg
es
cmp
jne
or
or
movs
add
icebp
sub
jo
and
xchg
mov
rcr
mov
adc
add
mov
ins
sub
add
out
outs
mov
rcl
je
push
add
aaa
in
test
add
dec
jmp
ja
cmc
push
add
add
or
jmp
dec
push
jle
movs
or
shl
jnp
mov
push
in
and
adc
xchg
mov
push
fld
loopne
cmp
add
xor
fild
cs
lock
loope
shl
in
pop
adc
mov
add
pop
fmul
cmc
into
add
mov
retf
test
cmp
lock
push
imul
jae
pop
push
xor
sub
cld
pop
imul
jae
push
arpl
pop
and
rol
sub
mov
xor
ret
sbb
and
and
or
out
xchg
mov
and
sub
loope
pop
mov
lsl
or
inc
js
inc
ffree
pop
imul
and
pop
pop
out
mov
mov
xchg
aas
shr
sar
and
dec
mov
or
adc
inc
cwde
(bad)
push
sti
mov
cmove
or
add
lea
(bad)
(bad)
mov
outs
and
sub
cmp
je
pop
mov
clc
pop
cmp
scas
jne
mov
aaa
(bad)
ds
dec
div
clc
jno
pop
mov
rcl
sbb
inc
jmp
xor
and
jo
sbb
jns
mov
jp
and
cmp
out
pop
and
clc
cmp
sub
(bad)
dec
push
or
push
add
sbb
ja
or
or
(bad)
push
sbb
cmp
jmp
and
dec
loopne
or
or
mov
xchg
push
mov
cdq
mov
push
ins
mov
push
aam
fdivr
rol
imul
pop
adc
inc
(bad)
push
std
shl
sbb
test
ror
in
or
jno
inc
mov
and
nop
repz
loopne
mov
in
sub
mov
out
loopne
cmp
add
xchg
mov
inc
xor
pop
bound
test
mov
push
dec
add
adc
add
pop
das
cmp
aam
xor
cdq
mov
repz
cmp
add
inc
pusha
mov
pop
add
cwde
ret
aas
inc
inc
jb
fsub
hlt
mov
add
fsub
push
(bad)
push
or
rol
inc
(bad)
jl
push
sub
(bad)
call
aad
add
add
pusha
pop
xor
jo
cld
mov
aas
fiadd
push
mov
pop
inc
xchg
push
loopne
sbb
nop
sub
icebp
add
add
push
clc
push
or
sbb
xchg
jne
xor
shl
xchg
test
arpl
(bad)
pop
pushf
dec
and
test
jo
mov
pop
mov
cld
xor
xlat
adc
pop
or
inc
daa
push
shl
outs
mov
xchg
sub
pop
cmp
(bad)
call
pop
pop
enter
mov
test
mov
or
inc
add
mov
cmp
pop
push
test
add
push
fst
push
shr
clc
test
jnp
inc
lods
xor
out
or
jno
push
jecxz
push
into
inc
cwde
ja
clc
scas
add
jl
inc
xor
clc
add
adc
cmp
xor
ret
inc
dec
jne
or
pop
or
add
sbb
ins
dec
(bad)
and
sub
mov
ror
and
mov
into
add
rcr
and
(bad)
xlat
(bad)
js
mov
rol
push
mov
pop
push
mov
sbb
dec
add
rcl
cmps
sub
inc
rcr
rol
push
js
aam
sbb
addr16
ret
test
je
aaa
popa
leave
stos
push
loopne
mov
or
mov
sbb
leave
xor
dec
xlat
push
jmp
adc
add
iret
add
ja
mov
jmp
mov
xchg
sub
iret
ror
rcl
add
add
ins
icebp
sahf
adc
rol
push
out
sub
jbe
aad
sar
add
clc
and
xchg
rol
dec
adc
dec
out
pop
sbb
cmps
sar
dec
xchg
test
inc
dec
adc
iret
push
clc
mov
adc
stc
movs
xchg
ret
fcom
dec
jbe
jp
cmc
int
lock
in
mov
sub
mov
add
pop
dec
pop
sub
sbb
mov
inc
jmp
pop
pushf
add
sbb
(bad)
out
add
popa
and
(bad)
dec
dec
lea
push
sbb
movs
enter
rol
inc
jecxz
(bad)
in
cld
leave
ret
push
add
imul
add
aad
int3
mov
jg
mov
add
mov
mov
pop
and
loop
(bad)
(bad)
ins
hlt
add
out
jnp
test
sbb
lea
adc
inc
das
or
inc
mov
or
add
rcl
cmc
adc
sub
adc
push
xor
(bad)
stos
popa
xor
fbstp
add
fimul
inc
add
push
mov
stos
ret
mov
test
sub
xor
shr
retf
inc
mov
(bad)
fidiv
cmp
mov
mov
mov
lods
adc
push
push
jp
mov
sub
and
add
xchg
ins
add
(bad)
sar
push
in
cmp
pslld
or
jne
movs
mov
inc
imul
inc
call
lock
ins
add
dec
in
add
call
jmp
lock
add
sti
jne
pop
inc
pop
js
add
dec
or
adc
inc
inc
push
(bad)
not
sbb
or
or
pop
add
and
add
add
jae
pop
sbb
repz
xchg
sub
daa
push
pop
cld
lahf
push
mov
adc
fnstenv
rol
mov
mov
mov
bts
loop
pop
fxch
enter
and
ja
add
inc
sub
imul
fucom
lea
add
ss
out
mov
lds
push
mov
jbe
push
jne
sbb
add
or
mov
add
inc
and
and
outs
push
add
adc
je
mov
mov
shr
mov
pop
lods
mov
mov
push
push
pop
or
rcr
push
adc
leave
sbb
mov
mov
push
ror
push
pop
and
fwait
(bad)
(bad)
pop
sub
jb
add
add
arpl
loopne
jne
mov
xor
mov
cmp
jne
mov
inc
leave
push
aas
pushf
scas
push
gs
mov
pop
pop
pop
ret
add
lahf
add
movs
pop
and
mov
mov
adc
ret
mov
dec
adc
out
xchg
std
loopne
jl
push
jne
sbb
or
outs
inc
aad
push
pop
or
adc
mov
or
imul
push
xchg
or
add
jnp
aas
mov
inc
nop
nop
mov
push
pop
or
sbb
jle
aam
ret
int3
dec
push
and
cmp
dec
ret
push
das
(bad)
push
add
jecxz
pop
ds
pop
xchg
(bad)
rol
retf
ret
push
jmp
xor
xor
add
out
retf
mov
retf
lock
adc
add
add
les
fcom
shl
(bad)
dec
pop
retf
cli
outs
or
pop
cmp
or
cmp
imul
sub
and
dec
dec
add
xchg
sub
jp
fdiv
ret
retf
or
cmp
cld
inc
out
add
add
inc
push
imul
nop
add
jnp
mov
add
or
and
sahf
ins
add
outs
cdq
dec
push
mov
scas
sub
addr16
pop
push
call
inc
push
add
inc
out
add
adc
mov
and
ss
adc
and
pop
sbb
push
data16
in
aas
shl
arpl
jns
add
add
xchg
adc
das
push
(bad)
rol
repnz
add
aas
mov
(bad)
jns
add
jo
sub
jb
fisttp
add
cmp
pop
rol
fild
inc
cli
ins
add
and
mov
xchg
mov
mov
pop
imul
inc
or
push
lahf
sbb
jle
add
dec
add
inc
add
(bad)
sahf
gs
or
icebp
mov
mov
dec
pop
mov
jns
dec
jae
test
lahf
or
inc
dec
jmp
mov
add
adc
add
in
push
mov
dec
outs
(bad)
add
inc
add
jle
rcr
push
mov
adc
push
ret
jno
gs
pop
mov
pusha
push
push
pop
add
add
jg
mov
pop
sub
cli
imul
in
mov
add
or
ret
arpl
push
pop
inc
add
and
aad
xchg
push
add
mov
mov
ins
add
dec
dec
dec
inc
add
cld
loop
fs
or
inc
xchg
imul
stos
cmps
or
lahf
outs
iret
push
push
icebp
int
jmp
je
fild
aad
daa
outs
inc
add
outs
jo
adc
scas
or
test
imul
inc
push
ins
add
xor
add
pop
push
or
adc
dec
sahf
or
std
add
add
bound
push
xchg
push
push
pop
daa
fcom
inc
or
jle
arpl
outs
leave
adc
sbb
outs
jb
sub
xlat
add
cmp
xor
or
sbb
sti
dec
add
xchg
das
cmp
popa
imul
dec
je
fcomp
sbb
shl
or
sbb
popa
scas
retf
or
mov
inc
mov
mov
push
mov
pop
xchg
pop
cmps
lea
je
push
loop
(bad)
jmp
add
jbe
mov
dec
xchg
push
sub
or
add
in
(bad)
leave
ins
xor
lds
loop
push
in
aaa
in
add
retf
mov
jle
or
jl
ss
pop
call
out
fiadd
ds
sahf
out
sahf
test
xlat
clc
push
pusha
jo
ins
add
push
add
push
sbb
pop
sbb
fistp
cmp
sub
enter
mov
in
xchg
push
pop
push
aad
fimul
pop
aam
xor
push
and
push
push
xchg
mov
push
imul
ins
xchg
loope
sub
push
mov
or
lds
push
inc
push
shr
mov
jp
mov
xor
pushf
out
aad
sbb
mov
fisub
or
es
dec
aad
movs
fwait
test
test
push
mov
std
xchg
add
scas
inc
sbb
inc
test
push
test
test
les
(bad)
jb
movs
ret
(bad)
out
les
popa
addr16
into
jo
xor
call
push
aaa
and
popa
loope
fist
rcl
loopne
stos
(bad)
aaa
mov
mov
push
pop
arpl
lea
mov
aaa
dec
add
mov
(bad)
push
inc
add
sub
add
pop
rol
or
sar
adc
(bad)
push
jmp
movs
pop
scas
pop
adc
das
in
mov
inc
xchg
and
mov
or
or
mov
cmp
xor
outs
jae
popa
xor
add
adc
add
retf
jae
popa
add
loope
and
test
mov
das
iret
or
test
dec
pushf
js
mov
add
or
jmp
mov
pop
push
dec
cmp
dec
imul
pop
add
out
and
daa
sbb
mov
push
test
ins
add
dec
(bad)
repnz
jne
dec
xor
popa
fmul
jno
or
pop
div
jg
fdivr
jmp
mov
or
pop
inc
fcom
mov
imul
lds
je
push
add
ja
and
imul
add
jg
leave
test
pop
or
ss
pop
enter
and
or
out
shr
add
pop
jbe
inc
jns
add
push
mov
adc
or
sti
cs
push
dec
push
or
add
test
fisubr
pop
les
retf
stos
inc
(bad)
adc
mov
jb
jb
or
jb
jb
pop
sub
mov
nop
jg
add
int
cmp
fist
lock
inc
test
xchg
mov
nop
fwait
add
add
add
loopne
mov
cmps
(bad)
in
popa
xor
jb
inc
mov
dec
popa
mov
fstp
rcl
test
sbb
dec
clc
in
data16
or
or
test
test
cmps
add
pop
sbb
inc
(bad)
ins
fld
push
push
imul
cmp
aas
or
mov
mov
pop
stos
add
fcomp
adc
xchg
xchg
int3
ret
call
int3
add
ret
dec
pop
or
cmp
movs
inc
js
sbb
leave
lds
pop
leave
dec
lods
in
mov
and
sbb
mov
or
ror
fstp
mov
rol
or
mov
ror
xchg
retf
cmc
and
dec
inc
dec
jne
jnp
pop
pop
das
(bad)
mov
and
xchg
loopne
adc
mov
add
cmp
in
sub
inc
loope
add
in
adc
or
vmovhps
sub
xchg
enter
add
scas
adc
and
or
jbe
pop
fstp
cmp
cmp
push
les
loopne
mov
fild
inc
jge
adc
call
adc
or
jo
inc
rol
or
adc
push
rcl
loope
add
adc
adc
add
sbb
mov
sub
pop
inc
adc
(bad)
int3
cmp
jle
pop
int3
dec
cmp
jl
mov
add
xor
add
jle
pushf
adc
or
cmp
ror
std
dec
lock
cwde
call
push
adc
into
mov
add
and
in
add
gs
call
mov
lods
fsubr
add
test
das
imul
and
dec
add
dec
hlt
or
jo
add
sbb
add
add
mov
jmp
dec
and
ss
or
sbb
out
ret
add
mov
dec
test
fs
test
je
xor
or
xchg
push
push
lods
int3
pushf
sar
pop
inc
pop
or
sar
push
cld
or
add
xchg
loope
iret
cmp
fild
outs
adc
sbb
jno
mov
add
fld
sub
sub
push
lock
add
out
mov
mov
jg
add
add
jmp
jmp
lea
rcl
int3
mov
inc
retf
call
jle
rcl
jb
add
xchg
jmp
mov
add
daa
call
sbb
adc
mov
push
or
push
adc
int3
mov
sbb
xor
xor
xor
cmp
in
add
hlt
adc
jp
add
mov
lea
add
shr
add
ret
sbb
or
push
cwde
xor
fdivr
lea
adc
sbb
mov
rcl
mov
dec
aam
dec
xchg
jne
or
jle
mov
mov
or
add
mov
push
(bad)
mov
and
push
xor
xor
and
call
jl
sahf
adc
or
loopne
(bad)
xchg
in
or
inc
add
sub
inc
imul
mov
rcr
call
cmp
or
adc
icebp
rol
retf
or
pop
jp
imul
sbb
lds
or
ret
rol
push
es
adc
inc
or
pop
push
ss
frstor
add
add
clc
or
and
test
rol
sub
aam
dec
mov
mov
inc
lock
inc
loopne
loopne
scas
lock
mov
ins
sub
aad
inc
mov
adc
in
in
pop
cmp
(bad)
jle
inc
or
jl
call
rcl
mov
adc
push
pusha
or
inc
repnz
popf
inc
call
xchg
in
lock
push
ret
fisttp
les
rcl
icebp
shl
es
mov
sar
loopne
pushf
xor
mov
pusha
push
push
push
dec
add
outs
out
(bad)
add
add
mov
sar
push
mov
jnp
or
loop
jmp
jns
sbb
push
pop
int3
pop
imul
xor
hlt
lods
loopne
add
pop
push
dec
in
(bad)
and
lock
call
dec
add
pusha
aaa
add
mov
adc
push
test
enter
mov
and
add
add
jne
std
push
mov
jmp
cmp
mov
fs
cmp
rol
ins
in
fsub
mov
pusha
add
adc
sahf
dec
pop
js
xor
push
push
jp
push
lods
sbb
inc
cdq
mov
and
ret
mov
sbb
inc
lock
add
call
add
or
cs
cld
or
call
lock
mov
jmp
inc
or
mov
jae
pushf
cmps
push
(bad)
mov
jo
sub
je
mov
ins
cmps
sub
or
or
jbe
call
mov
and
and
jle
cmp
or
sbb
xor
xchg
adc
add
outs
loopne
add
ret
aam
sbb
ror
inc
addps
xlat
fadd
mov
fsubp
pop
pop
adc
das
add
add
inc
call
mov
cmp
sbb
and
jle
jg
mov
mov
inc
ret
or
cmove
or
xor
dec
cmp
sbb
mov
sub
jmp
imul
loopne
bound
jns
add
cmp
inc
jecxz
inc
sqrtps
jecxz
push
fs
je
fwait
stos
call
cmp
iret
or
jge
add
sub
adc
xor
pop
rcl
mov
pop
adc
pop
dec
add
pop
jb
je
inc
inc
push
fincstp
imul
dec
inc
outs
stos
scas
lock
gs
jne
push
add
and
sbb
cmps
sahf
js
aaa
adc
je
mov
adc
pop
jmp
mov
dec
femms
add
dec
test
add
or
in
ja
scas
or
lods
mov
rol
sub
aas
in
into
test
and
test
das
mov
clc
in
push
test
mov
das
repz
and
fadd
movs
xchg
pop
or
imul
push
test
cmp
retf
(bad)
xchg
std
in
dec
in
btr
pop
fst
sub
or
push
dec
pop
lock
dec
mov
cdq
jbe
add
in
sbb
out
daa
test
add
or
add
pusha
push
mov
addr16
sbb
es
inc
retf
les
push
outs
outs
gs
jl
test
imul
adc
mov
mov
add
sbb
inc
sbb
or
fwait
jne
in
pop
icebp
xor
fst
jnp
out
push
or
mov
adc
lods
dec
xor
rcl
out
jl
or
pop
or
adc
jg
and
push
jg
out
imul
mov
cmp
sub
jmp
lods
inc
dec
frstor
outs
adc
adc
maskmovq
neg
(bad)
or
sub
jnp
xor
or
xor
cmp
mov
add
sub
ins
xchg
shl
(bad)
and
mov
outs
jb
add
out
(bad)
pusha
(bad)
outs
mov
adc
pop
(bad)
inc
add
cmps
mov
and
jne
rcr
jg
mov
imul
loope
out
push
pushf
fcomi
inc
add
push
das
mov
rol
or
pusha
sub
std
or
jae
xchg
lock
jne
jmp
push
sahf
loopne
sub
(bad)
sbb
inc
fisttp
push
adc
pop
(bad)
scas
jecxz
mov
pop
push
inc
mov
and
lds
sub
add
lea
xchg
or
xor
inc
jbe
jecxz
add
fadd
(bad)
leave
cmovno
jecxz
inc
mov
mov
dec
inc
sub
rcl
mov
outs
pop
push
cmp
icebp
ja
popa
loope
mov
cmc
icebp
adc
push
dec
push
inc
test
pop
add
dec
push
je
ja
pushf
and
clc
push
es
repz
jno
cmp
mov
pop
mov
std
mov
lods
dec
push
sbb
pop
retf
push
mov
out
mov
imul
or
nop
and
loopne
or
inc
dec
ja
cs
mov
inc
jno
add
or
pushf
daa
jne
fiadd
sub
mov
xchg
add
mov
sbb
sub
xchg
dec
outs
setl
(bad)
or
fstp
jae
pop
xor
jb
cs
movups
push
mov
mov
xchg
xor
stos
xor
mov
cmp
sub
xchg
sbb
and
sbb
dec
or
add
dec
mov
ins
jae
add
push
dec
hlt
shr
outs
add
test
clc
popf
sub
mov
push
outs
adc
or
test
pop
push
dec
adc
sub
sub
fs
ror
pop
xor
mov
jae
sbb
cmp
and
jo
lds
(bad)
bound
xchg
add
jne
outs
test
adc
adc
ret
leave
dec
adc
add
retf
mov
sub
inc
inc
mov
lahf
adc
imul
adc
push
sbb
jne
and
jo
adc
imul
add
or
out
scas
icebp
xor
push
add
cmc
ins
mov
or
sbb
lahf
and
pop
mov
pop
push
or
mov
push
das
scas
pop
lahf
je
jecxz
imul
add
bound
and
iret
sbb
sbb
or
cmps
push
movs
shl
enter
fbstp
add
add
rcl
xchg
or
adc
cwde
stc
hlt
inc
adc
cmp
out
test
jbe
inc
gs
(bad)
aaa
mov
or
add
adc
xlat
sbb
or
lds
dec
div
inc
jbe
in
push
jmp
(bad)
fdivr
iret
or
fsubrp
cmp
jb
sbb
add
sub
adc
adc
loopne
mov
mov
dec
je
pop
in
jnp
ret
pop
mov
ds
dec
das
fiadd
and
xor
inc
fld
out
sub
push
mov
rcl
int3
hlt
push
cmp
inc
xchg
xchg
xchg
inc
test
mov
ret
popa
loope
fs
outs
jge
mov
bts
sbb
es
mov
imul
popa
cmp
shl
push
lahf
add
push
and
cmc
cld
out
add
push
cmp
and
frstor
add
mov
dec
sbb
jg
jae
push
dec
shr
scas
push
lock
pop
cld
retf
ds
retf
mov
or
lahf
push
inc
aaa
mov
sub
mov
add
test
jg
pop
dec
ins
add
add
inc
cmp
lahf
jns
(bad)
loop
shl
in
jbe
icebp
jbe
adc
daa
ret
pop
and
sub
test
and
cmp
jl
or
cmp
mov
les
stc
cdq
add
ins
xchg
into
mov
adc
pop
aad
inc
xor
add
or
or
dec
cmp
jmp
rcl
inc
lahf
sub
movs
push
ror
cmps
rol
(bad)
push
pop
add
sub
mov
ror
xor
jno
dec
aad
addr16
pop
enter
idiv
call
es
mov
push
mov
mov
mov
pushf
push
mov
fadd
ins
push
mov
adc
sahf
jnp
inc
push
push
test
push
les
ins
pop
push
inc
jo
pop
adc
push
mov
cld
mov
out
mov
jno
or
xor
push
push
loope
pop
adc
jae
das
pop
mov
cmp
or
mov
sbb
adc
cmp
in
(bad)
sub
xor
jne
in
push
or
push
sbb
pop
imul
xor
pop
xchg
push
gs
add
push
or
pop
test
jae
xchg
shl
xchg
xchg
pop
xlat
sub
(bad)
adc
mov
jmp
jo
mov
add
sbb
cmovle
nop
repz
add
add
cmp
and
jb
shl
rcl
test
and
and
movs
and
push
aad
pop
add
mov
jae
dec
lock
jecxz
adc
rol
add
arpl
test
add
or
or
sahf
inc
rcl
pop
dec
imul
or
ins
aam
lea
push
lea
in
rcl
push
inc
sbb
cmp
jo
fsub
xor
pop
clc
xor
sub
sbb
movlps
pusha
jnp
mov
gs
mov
or
loope
and
jne
imul
dec
ror
push
add
(bad)
std
fwait
jo
and
fwait
dec
mov
jns
inc
outs
rol
xor
xor
adc
das
fwait
fwait
js
jge
push
pop
adc
inc
inc
mov
fbstp
jb
add
inc
bound
scas
iret
neg
add
prefetchwt1
or
pop
(bad)
dec
xor
xchg
inc
adc
add
push
pop
or
pop
out
(bad)
(bad)
xchg
mov
mov
mov
dec
shl
push
js
pop
cmp
mov
out
lds
pusha
push
mov
or
inc
xlat
add
dec
xchg
cmp
push
retf
clc
add
stc
jb
inc
xor
jo
loop
fiadd
add
push
inc
push
pop
pop
rol
xor
or
and
loope
mov
daa
jmp
stc
push
adc
lods
adc
nop
js
add
add
adc
add
xor
or
or
xor
ret
icebp
call
daa
fisttp
xor
lock
or
or
ror
ror
adc
sbb
jmp
push
push
xchg
pop
sbb
push
pop
push
mov
or
add
push
scas
sub
xor
inc
add
adc
sbb
in
or
mov
sub
jge
push
mov
xor
xchg
sbb
gs
sub
jo
jp
(bad)
fsubrp
sbb
inc
or
add
mov
cld
gs
push
or
dec
popa
js
pop
cli
fdiv
dec
adc
outs
ja
jo
lahf
push
popa
test
dec
addr16
cmp
js
and
das
jbe
das
popf
sub
popf
dec
push
fcmovu
mov
jmp
dec
gs
and
sbb
push
jo
and
xor
push
push
ds
outs
adc
adc
dec
cmp
retf
sub
(bad)
add
fdivr
cmp
mov
outs
sub
dec
inc
xor
addr16
jne
cmp
add
mov
pop
add
jbe
mov
in
push
fld
add
outs
fcomp
or
enter
nop
mov
loopne
or
or
push
sbb
add
push
in
inc
or
dec
add
adc
test
scas
mov
inc
jne
pop
sbb
push
movs
mov
pop
ror
lods
cmps
ins
xor
adc
or
push
lods
jmp
sti
cmps
inc
rcl
dec
sbb
pop
or
add
cmps
stos
sub
xor
test
imul
rcl
lea
sub
adc
nop
or
add
push
mov
push
das
imul
push
jnp
or
ins
pop
outs
shr
daa
push
push
clc
pop
jo
fdivr
lods
call
or
clc
adc
jnp
es
cmp
mov
out
pop
cmp
jb
and
xor
ins
push
xchg
fnsave
pop
push
sbb
call
mov
xor
mov
mov
push
add
ins
daa
adc
leave
aam
mov
shr
xchg
mov
or
fs
popa
ins
or
retf
push
pop
dec
scas
ret
fistp
lea
adc
add
cld
xor
jno
dec
sub
mov
repz
jae
pop
clc
test
adc
jae
sbb
push
fimul
pop
and
and
xadd
or
in
jg
lods
nop
or
test
fild
push
in
(bad)
outs
or
loopne
js
jne
pop
or
pusha
leave
push
xchg
mov
loop
(bad)
and
pop
dec
jbe
(bad)
and
or
push
sar
loop
jns
aad
sub
adc
push
pop
pop
cld
adc
push
sbb
xchg
jp
les
mov
pop
cmovs
pop
pop
ins
xchg
(bad)
adc
inc
mov
add
and
mov
mov
fisub
and
push
jne
rcl
xchg
adc
test
push
adc
jl
sub
xchg
xor
(bad)
adc
or
popa
and
inc
xor
jl
call
sti
(bad)
ss
(bad)
rcl
xor
or
add
sbb
add
cmc
dec
jae
aad
and
mov
sub
outs
adc
adc
adc
shl
push
into
add
push
dec
cmp
mov
jae
js
mov
inc
jne
lods
push
adc
call
add
pop
iret
lock
jo
fmul
mov
sahf
out
je
mov
sbb
mov
enter
mov
pop
pop
aad
cs
add
push
add
pop
jne
packuswb
std
es
cmp
mov
sub
inc
xchg
and
pop
and
adc
adc
pusha
loopne
ror
movs
movups
mov
push
and
adc
adc
push
dec
nop
jo
imul
dec
lock
scas
add
xlat
adc
sbb
popf
push
push
aad
add
adc
jae
inc
pop
enter
sbb
nop
pushf
adc
cs
or
mov
add
or
mov
shr
pop
xor
pop
lahf
pop
icebp
out
mov
push
jl
je
dec
adc
aaa
cmp
int3
push
lahf
rcr
xchg
push
mov
sbb
shl
or
mov
add
add
sahf
scas
push
mov
mov
mov
pop
adc
call
xor
sti
data16
push
or
mov
push
or
push
or
jno
stos
jo
pop
pop
inc
xchg
daa
ficom
xor
repnz
jnp
and
fimul
xchg
movs
or
icebp
add
or
imul
movs
push
jo
xchg
mov
es
cmp
shl
fadd
test
clc
xor
cmp
mov
adc
jb
push
push
cs
aad
add
das
test
lods
adc
popf
and
imul
push
mov
imul
add
add
outs
push
inc
cmp
push
cmp
pop
enter
(bad)
cmp
adc
dec
pop
pop
sar
sbb
sub
push
jb
clc
adc
mov
call
sahf
addr16
fwait
push
cld
mov
es
push
loopne
cmc
push
dec
sub
sbb
push
or
and
sbb
je
or
lock
push
jg
repz
mov
bound
call
mov
mov
pop
sbb
add
maskmovq
cld
xor
add
int3
push
test
daa
cwde
or
sbb
jmp
ror
cmovo
mov
and
add
sbb
lods
xchg
adc
clc
jae
dec
dec
push
mov
pop
pop
push
xchg
sub
or
rcl
sub
imul
shl
xchg
sbb
adc
mov
add
sub
add
push
pop
inc
out
fiadd
jnp
outs
mov
loop
inc
(bad)
push
jmp
add
adc
sbb
in
lods
and
lock
or
daa
in
or
add
pushf
xor
or
sbb
ins
xor
int
jge
test
pop
loopne
fdivr
cli
pop
push
jno
push
daa
sbb
cmps
inc
sub
add
pop
sbb
fcomp
pop
mov
push
pusha
push
mov
fidivr
cmp
sbb
mov
push
push
je
ins
push
cmp
cmc
mov
mov
pusha
mov
push
inc
rcr
fadd
inc
push
fmul
fs
mov
dec
loope
push
xor
sbb
push
mov
enter
push
es
pushf
xchg
add
ret
pop
fisttp
mov
sub
rcl
ret
retf
clc
je
and
inc
jns
sbb
inc
jg
add
dec
adc
ins
fs
outs
push
test
mov
sti
jge
jp
and
mov
or
cmp
cmp
cmp
mov
lods
dec
inc
imul
dec
xchg
push
add
in
lods
psrlq
xor
pop
push
cmovl
push
sar
movs
or
and
es
inc
test
pop
fcomp
add
test
or
sub
pop
jae
xor
mov
and
mov
or
fcmovne
dec
ror
add
ret
call
cmp
test
sbb
cmp
push
sbb
push
dec
add
adc
jbe
jmp
mov
sub
sbb
add
sbb
(bad)
jecxz
mov
push
ret
loope
push
pop
xor
push
pusha
sbb
pop
adc
pop
arpl
or
mov
retf
mov
jmp
mov
shr
sub
lahf
push
sub
mov
or
jae
push
push
xor
pop
push
test
add
sar
adc
add
cmp
inc
mov
jg
jmp
and
and
add
leave
cmp
aas
pusha
das
or
(bad)
ins
lock
pop
mov
push
not
lock
lods
mov
add
scas
push
cld
and
add
ins
jns
enter
movs
or
(bad)
js
push
xchg
lock
or
jo
test
cmps
ins
or
pop
push
dec
or
add
jg
leave
push
or
dec
jmp
push
cmp
vshufps
dec
cmp
dec
sbb
ds
es
paddb
pop
aam
and
add
push
pop
and
pop
cmp
es
xchg
js
pop
repnz
out
push
clc
push
pusha
fwait
sbb
inc
inc
(bad)
push
fbld
adc
call
adc
lock
or
scas
jb
or
add
stos
lahf
and
mov
ja
or
add
cmp
enter
mov
jmp
sbb
add
mov
jae
or
jb
or
adc
push
and
fbld
pop
or
mov
inc
push
adc
sbb
sub
or
adc
add
mov
mov
mov
sbb
inc
fild
bound
fcomp
aad
imul
jbe
or
arpl
pop
jl
sbb
clc
sbb
call
test
jno
mov
mov
inc
adc
or
pop
add
dec
dec
jle
es
and
test
das
or
cmps
or
nop
mov
fidivr
cmp
push
or
cmp
fcmovne
jnp
push
mov
lock
aaa
or
sbb
or
add
out
xchg
cld
dec
sbb
add
daa
mov
imul
(bad)
cvtps2pi
(bad)
sub
add
cld
xor
add
add
sub
js
jl
or
pop
or
mov
add
sub
jl
mov
dec
adc
dec
mov
sub
pop
push
sbb
xchg
pextrw
cmps
icebp
lock
repz
jne
add
test
lods
mov
pop
or
pop
or
cmps
add
pop
das
jne
jno
popa
in
or
sbb
shr
or
jge
repz
mov
add
loope
test
nop
add
mov
push
lea
sub
jnp
movs
inc
or
xchg
mov
rol
das
stc
setge
lds
pop
in
shl
dec
adc
pop
sbb
cmps
ins
dec
sub
stos
sub
pop
inc
addr16
scas
ja
jns
repz
data16
adc
add
pop
pop
jg
adc
xor
jo
or
fld
or
pushf
adc
loopne
push
rcr
xor
cwde
fcomp
push
ja
lds
das
ins
jle
(bad)
addr16
push
mov
ins
pop
fiadd
xchg
out
pop
push
push
cmp
mov
dec
or
js
add
push
fsub
mov
std
lods
out
push
push
push
sub
out
mov
neg
push
rol
add
neg
jnp
out
push
sub
dec
push
fs
out
mov
pop
pop
lods
xchg
fadd
lock
iret
jbe
int3
push
mov
nop
push
push
and
jns
out
pop
js
cmp
and
jl
jae
mov
mov
jo
fiadd
mov
xor
jb
push
or
jmp
sbb
pop
pushf
pop
mov
mov
adc
rcl
clc
sub
push
cs
loopne
jge
jo
mov
pop
ret
ret
pshuflw
pop
pop
mov
jnp
mov
nop
ficomp
ja
test
xor
and
xchg
add
and
(bad)
and
(bad)
and
daa
xor
cmp
add
add
or
xor
sub
dec
ror
sub
adc
punpckhdq
nop
rdtsc
dec
xor
mov
adc
xor
jo
in
in
ins
(bad)
add
aaa
ret
aas
and
ins
(bad)
das
ja
xchg
out
jb
(bad)
add
add
rcl
jmp
daa
add
xchg
imul
in
adc
dec
or
xlat
add
push
inc
test
push
or
hlt
push
jnp
and
popa
dec
rol
dec
loope
inc
aas
inc
popa
sar
sub
mov
xor
mov
sub
mov
sub
xchg
cmps
mov
jmp
sub
mov
fadd
loopne
push
leave
push
cmp
jno
hlt
arpl
outs
jae
jne
mov
pop
inc
lods
inc
cs
fadd
mov
push
mov
int
dec
push
daa
inc
(bad)
push
fldenv
jnp
nop
mov
arpl
xchg
icebp
shl
xor
xor
push
mov
xchg
outs
addr16
pop
or
push
cmp
add
les
xor
xor
test
in
add
int3
push
sub
and
or
sbb
fs
mov
and
xor
sub
in
add
inc
push
inc
ror
add
inc
outs
jne
mov
push
cwde
inc
(bad)
repz
jae
inc
or
adc
(bad)
pusha
push
cvtps2pd
nop
dec
push
mov
cmp
mov
ins
mov
popa
or
mul
call
pushf
cmp
xor
add
cmp
mov
mov
lds
ins
xchg
ins
push
inc
push
inc
add
mov
inc
stos
sub
int3
xchg
sbb
push
push
sub
add
pop
ret
sbb
fwait
xchg
pusha
add
adc
imul
cmp
add
stos
(bad)
and
mov
dec
dec
cmp
and
pop
push
inc
add
jo
inc
xor
das
fidivr
lea
pop
add
out
xchg
add
adc
pop
inc
add
dec
add
add
xchg
or
and
xor
add
or
or
inc
add
cmp
and
sub
movs
pop
mov
add
inc
outs
jns
dec
and
aas
add
fwait
jge
jae
lods
add
mov
jnp
dec
xchg
mov
add
pusha
mov
add
adc
mov
and
adc
and
mov
sub
sub
outs
jg
cmp
mov
imul
lea
outs
pop
xchg
xchg
adc
aaa
and
mov
xchg
nop
mov
and
cmp
and
and
and
and
cmp
dec
jae
and
and
popa
test
xor
test
mov
sbb
mov
sub
xchg
inc
gs
pop
or
loope
sub
xor
xchg
inc
inc
sbb
mov
ficom
pop
xchg
cmc
adc
and
add
mov
fisubr
pop
popa
les
or
pop
adc
call
jo
fs
cmp
adc
pop
pushf
idiv
mov
inc
leave
sbb
and
add
pop
add
lds
xor
sbb
ds
test
push
or
cmp
push
and
data16
cmp
cmp
mov
pop
or
cld
cmp
sbb
or
inc
push
add
adc
daa
clc
dec
nop
push
cmp
iret
mov
mov
cmp
out
push
nop
loopne
pop
mov
jnp
repz
push
in
push
clc
and
es
push
iret
mov
int3
push
inc
push
sbb
pop
pop
pop
fsub
jae
into
cwde
inc
push
add
dec
fidivr
repz
in
add
mov
mov
int3
fdivp
fdivp
push
in
push
xchg
push
xchg
int3
push
jl
repz
not
mov
sbb
push
fs
mov
cmp
cld
(bad)
or
outs
sub
ror
or
test
lds
jne
xchg
clts
ror
push
ds
das
ja
pop
add
add
pop
dec
pop
add
pop
cli
aas
divps
iret
icebp
or
pop
pushf
punpcklbw
ror
sbb
punpckldq
inc
arpl
add
add
inc
retf
xchg
aas
inc
adc
push
and
packssdw
and
in
call
outs
or
movq
dec
rcl
push
add
aaa
daa
rol
push
mov
jo
jae
lds
fstp
daa
rol
and
xor
fdivr
pop
or
ins
push
add
mov
sub
jecxz
inc
jne
push
jne
(bad)
cwde
nop
adc
xor
adc
jge
fdivr
push
xchg
ds
inc
jle
ja
lods
adc
pop
ins
popf
clc
ror
and
call
and
adc
jmp
inc
or
in
imul
repz
or
ja
inc
in
scas
cmp
push
gs
pop
mov
aad
retf
or
ins
fist
(bad)
imul
add
mov
jle
aaa
std
or
ins
nop
xchg
sbb
or
xor
ss
fsubr
ins
xlat
ins
push
sbb
mov
jb
cs
iret
add
mov
sub
sbb
outs
adc
add
jecxz
arpl
cmps
fidiv
cdq
jns
sub
or
push
jno
cwde
fmul
add
or
nop
mov
sbb
xchg
adc
js
arpl
mov
adc
pusha
mov
adc
dec
jnp
adc
imul
pop
add
add
push
and
jle
push
mov
movs
lea
add
leave
dec
inc
int
xchg
es
dec
sbb
daa
or
shl
add
sbb
xchg
adc
mov
push
outs
sub
adc
inc
inc
repz
xchg
xchg
pop
fs
xchg
retf
xchg
out
adc
push
xchg
xchg
xchg
xchg
ja
mov
xchg
cld
and
ins
inc
push
xchg
xchg
nop
mov
mov
and
add
or
mov
inc
cmps
or
add
inc
cmps
add
cmps
adc
ror
retf
cmps
mov
ss
cmps
and
adc
inc
cmps
sub
cmps
sub
ror
add
ret
inc
mov
pusha
push
mov
sbb
or
inc
mov
adc
in
sahf
dec
dec
inc
sbb
call
icebp
dec
nop
add
dec
adc
das
or
mov
xor
call
jo
pop
clc
dec
femms
dec
enter
mul
cmp
cmp
aam
pop
mov
cs
mov
and
inc
jno
xor
xchg
cmp
add
xor
adc
es
in
mov
inc
dec
inc
lds
xor
inc
test
mov
dec
xchg
je
test
das
sbb
cmp
pop
(bad)
loope
add
pop
mov
mov
push
pushf
scas
out
sbb
ins
push
loopne
pushw
or
push
outs
jo
xor
add
and
xchg
adc
inc
stc
and
icebp
or
inc
out
jnp
pop
test
push
add
and
push
pop
es
stos
xchg
adc
movs
jg
test
inc
lar
push
inc
sub
retf
movs
adc
add
scas
test
push
test
mov
div
dec
and
sub
mov
jb
out
or
sub
dec
jp
jns
jns
mov
dec
and
stc
bnd
ud2
add
add
clc
push
mov
dec
verr
push
sti
in
repnz
call
mov
pop
push
cmove
inc
inc
sub
inc
add
inc
add
dec
add
push
shl
iret
bound
dec
add
jl
mov
push
push
cmovle
dec
add
call
xchg
ficom
lods
and
sub
and
cmp
ins
je
dec
cmp
ins
inc
and
pop
movs
pop
jmp
ss
sbb
neg
jecxz
xlat
and
or
mov
adc
test
scas
sub
std
mov
or
mov
lods
inc
sbb
or
mov
popa
leave
mov
inc
mov
mov
push
adc
lahf
xchg
in
push
or
push
push
xor
or
adc
sti
mov
ret
dec
sbb
adc
test
xor
lds
push
cmp
push
add
xchg
adc
xchg
cmp
loopne
mov
push
jecxz
arpl
pop
enter
or
cmp
xor
push
mov
or
push
dec
mov
std
push
or
outs
fs
rol
pop
push
mov
and
xor
xor
mov
test
in
push
cmp
or
aaa
sub
mov
mov
scas
cmp
mov
out
aaa
adc
stc
mov
ins
push
or
aaa
mov
sbb
je
outs
pop
stos
cmp
scas
nop
pop
lock
cmp
mov
push
cmp
add
add
add
push
rol
lahf
mov
adc
test
push
adc
mov
pop
pop
scas
cmp
popa
add
push
and
nop
mov
pop
xchg
nop
inc
or
js
adc
mov
push
dec
mov
jns
mov
cld
mov
lahf
mov
cmp
les
adc
sar
(bad)
or
pop
int3
mov
xchg
movs
xlat
movs
scas
or
icebp
sbb
retf
xchg
mov
(bad)
add
add
repnz
add
add
push
out
repnz
or
pop
sbb
fwait
pslld
ror
pop
imul
ins
es
stos
cmps
sub
sub
dec
pop
test
sbb
xchg
sub
(bad)
or
add
dec
pop
mov
adc
adc
dec
xlat
loop
bound
mov
ss
and
or
add
add
mov
pop
aad
cmps
or
mov
sahf
sub
retf
add
and
adc
scas
nop
pop
sbb
sbb
mov
cmp
sub
sbb
enter
sbb
and
pop
pushf
mov
xchg
imul
or
dec
(bad)
cdq
popf
dec
pop
pop
rcr
fiadd
and
push
cmp
pop
scas
add
xchg
shr
lahf
jecxz
add
icebp
mov
pop
dec
adc
push
add
xlat
sbb
aam
xlat
jne
pop
aas
movs
pop
imul
push
ret
das
cmp
movs
mov
push
mov
popf
out
sahf
lock
adc
and
and
sar
das
fdivr
les
iret
cmp
movs
push
mov
das
xor
in
mov
(bad)
adc
or
ja
vmovdqa
dec
pop
bndldx
fwait
pop
cmps
aas
movs
push
ds
mov
ss
xchg
xchg
xchg
pusha
pusha
pusha
mov
pusha
fidiv
jl
xchg
pusha
or
cmovns
stc
inc
add
adc
mov
push
bound
mov
jo
arpl
push
xor
loope
arpl
xor
cmps
add
movs
cs
movs
arpl
loop
or
sbb
rol
inc
das
movs
arpl
pop
pop
js
adc
test
push
pop
xchg
mov
push
retf
push
jmp
mov
pop
sti
test
jb
inc
retf
push
xchg
and
movs
retf
push
movs
je
push
sub
push
cmp
or
xlat
mov
repnz
arpl
mov
and
les
cmp
in
repnz
adc
xchg
mov
mov
arpl
enter
xor
ret
add
inc
pop
mov
arpl
ss
dec
imul
nop
mov
frstor
and
cmp
mov
daa
imul
data16
jg
jne
adc
aam
dec
jnp
adc
shl
fadd
mov
adc
mov
dec
xchg
mov
mov
mov
or
loopne
cmp
pop
mov
out
push
es
push
adc
add
mov
mov
nop
pop
scas
mov
sbb
pop
lea
mov
or
jg
sbb
ficomp
sbb
out
inc
(bad)
verw
test
adc
mov
push
adc
dec
cmovle
pop
(bad)
adc
or
jo
neg
adc
xor
xchg
xor
xchg
mov
outs
dec
ss
(bad)
iret
xor
loope
mov
adc
sar
(bad)
and
sbb
adc
sub
mov
xchg
mov
cmp
jmp
imul
mov
push
jp
pusha
mov
setb
mov
je
imul
stos
adc
imul
call
or
push
mov
into
mov
das
loope
xchg
or
(bad)
pop
je
xchg
aad
rcl
push
leave
es
push
enter
idiv
retf
push
cmp
les
dec
retf
das
inc
(bad)
stos
rol
pop
je
(bad)
add
(bad)
test
pusha
rol
lock
push
lods
sar
push
push
push
es
jmp
push
je
add
pop
sub
jmp
inc
and
inc
xchg
xor
(bad)
neg
in
ins
sbb
add
outs
loopne
mov
jbe
pcmpeqd
das
outs
cs
das
das
pop
outs
test
outs
fmul
push
inc
sti
ud2
jb
jg
outs
mov
adc
mov
(bad)
mov
psubd
retf
dec
add
jo
popa
jo
retf
retf
retf
call
jno
scas
mov
lar
cmovnp
sub
add
cmpps
lahf
mov
dec
bnd
inc
invd
push
ret
xor
push
or
(bad)
loope
mov
sbb
dec
cmp
pop
sbb
inc
aas
mov
add
das
shr
test
test
and
jne
add
outs
mov
push
sub
dec
sti
in
call
push
xor
and
push
dec
push
test
push
xor
inc
pop
push
or
push
push
enter
xchg
loopne
xor
pushf
test
ror
(bad)
mov
pop
cs
(bad)
retf
cmp
add
sbb
cmp
jmp
pusha
sar
inc
mov
inc
jb
mov
pop
leave
add
push
and
mov
jns
pushf
mov
in
jb
jae
ret
push
enter
test
pop
jae
pop
push
or
repnz
adc
aam
sub
add
sbb
cmps
mov
(bad)
(bad)
test
adc
je
push
and
cmp
jns
pushf
inc
mov
mov
and
dec
pop
and
mov
add
pop
mov
imul
imul
push
sub
neg
pop
shl
pop
repz
das
fstp
and
das
pushf
push
in
pop
cmp
cmp
aaa
push
xor
(bad)
mov
loopne
xor
jmp
pop
das
psrad
mov
pop
ins
mulps
sub
sub
inc
add
iret
repz
cwde
mov
adc
mov
pop
pop
dec
add
scas
fs
adc
test
ja
sub
push
add
in
cs
loopne
add
jl
sar
sysret
adc
xor
add
jo
adc
or
xchg
cwde
setg
in
add
jbe
jns
mov
xchg
mov
jge
add
adc
cmova
stos
cmovs
in
add
jnp
jg
aas
imul
pshufw
cmp
cs
mov
js
push
push
jge
lock
xor
pop
xor
ror
mov
pop
mov
lock
sub
xchg
js
sbb
sub
pop
push
sub
add
fiadd
sub
adc
push
sub
ror
pop
stos
sbb
xor
rcl
addr16
mov
pop
sub
movs
or
sub
mov
imul
xor
pop
fist
mov
dec
xor
fist
xchg
mov
test
jo
ins
jmp
cmp
bound
test
ins
jnp
dec
jo
pop
sub
pop
ins
jnp
sub
push
cmp
sbb
and
inc
push
pop
jecxz
pushf
les
test
in
push
pop
jns
mov
pop
jnp
cmp
cwde
push
pop
lea
aas
pop
test
pop
mov
mov
mov
adc
push
jnp
push
inc
cmp
aaa
out
std
push
mov
ss
mov
jnp
or
jg
or
mov
jl
fild
sbb
push
inc
jle
pop
pop
jg
cmp
or
cmovs
iret
jnp
mov
push
or
push
mov
cmp
pop
sub
pop
add
dec
push
pop
adc
pop
inc
and
(bad)
mov
pop
jo
addr16
retf
inc
fcom
mov
mov
push
push
jo
push
ror
in
mov
adc
adc
ret
fist
pop
jmp
loope
mov
inc
push
popa
aaa
jg
retf
fisttp
pop
movhps
test
pop
call
push
mov
repnz
mov
xacquire
inc
cmp
mov
jmp
inc
mov
pop
sbb
mov
cmp
sub
cwde
pop
inc
cwde
xchg
push
cmps
es
sub
leave
mov
gs
adc
dec
pop
pop
aaa
adc
cmp
inc
sub
bound
pop
sbb
movs
addr16
sub
or
addr16
lods
or
cmp
mov
mov
sub
(bad)
push
ss
jns
cmp
addr16
int3
adc
pop
adc
pop
ins
shl
das
and
aam
addr16
setb
enter
test
cmp
pop
and
cmp
repnz
and
in
and
fcom
and
xchg
inc
and
jo
cmp
adc
test
adc
enter
test
adc
and
xchg
test
cmp
adc
xchg
push
repnz
or
sub
add
fadd
outs
aam
push
js
inc
pop
into
mov
xchg
jo
outs
push
or
inc
aad
(bad)
repz
out
push
push
sbb
mov
mov
cld
fcomp
sbb
dec
mov
cmp
(bad)
outs
dec
rcr
jmp
sar
data16
push
test
mov
dec
push
clc
push
and
(bad)
dec
mov
shr
xor
test
inc
inc
daa
jne
add
vpxor
add
arpl
das
jg
sub
push
add
or
add
shld
inc
and
sub
pop
pop
pop
pop
bound
jmp
mov
sbb
xchg
xchg
xchg
xchg
mov
mov
mov
jl
xchg
xchg
xchg
mov
mov
adc
rol
cmp
icebp
dec
sahf
mov
(bad)
pop
mov
sbb
pop
ror
js
dec
rcr
mov
or
pop
sub
jecxz
nop
pop
repnz
mov
clc
mov
jecxz
enter
mov
jecxz
mov
jecxz
mov
cmp
adc
aad
imul
ins
inc
or
push
xor
aam
add
sub
ror
loop
push
ror
aam
ror
rcr
mov
leave
add
adc
ror
rcr
mov
nop
pop
ror
dec
and
mov
rcr
nop
pushf
inc
ror
cmp
pop
leave
pop
leave
sub
mov
dec
pop
ror
inc
jb
mov
pop
push
and
leave
mov
push
push
es
call
inc
in
dec
stos
pop
aas
add
stc
mov
push
pop
pop
pop
jns
repz
push
and
push
cmp
stos
jnp
sbb
lock
jo
pop
(bad)
pavgb
push
and
(bad)
mov
lock
and
and
push
in
push
mov
test
mov
sbb
add
and
pop
sub
xchg
and
lock
cmp
inc
push
std
adc
or
nop
mov
cld
movhps
jl
pushf
(bad)
add
add
push
pop
xor
retf
retf
xchg
adc
cmp
xchg
aam
retf
retf
retf
retf
or
inc
xchg
jg
mov
retf
repz
sub
xchg
mov
retf
ficom
add
aaa
lods
out
sub
lahf
adc
xchg
and
dec
cmp
stos
retf
mov
test
loop
sub
add
sub
mov
push
sub
aad
push
test
sub
push
and
pop
push
movs
bound
inc
inc
pop
push
dec
adc
jmp
aaa
pop
stos
adc
pop
add
add
and
pop
adc
adc
cmc
push
inc
jno
mov
test
and
and
adc
add
enter
adc
xchg
pop
adc
and
adc
dec
pop
adc
jns
xchg
pop
and
adc
inc
jb
adc
in
adc
and
adc
loop
adc
push
mov
sbb
xlat
iret
adc
popa
adc
pop
jo
push
aam
push
out
stc
mov
xlat
cwde
pop
je
pop
push
add
jl
jle
inc
push
mov
mov
push
shr
push
add
aam
out
push
nop
push
pusha
fnstenv
mov
pop
ficomp
cmp
xor
mov
sbb
in
fcomp
push
jns
and
or
sbb
cli
sahf
out
jo
inc
js
mov
jp
sub
fdiv
jo
jae
add
cwde
dec
or
mov
xor
or
sahf
dec
rol
syscall
add
adc
call
stc
repnz
(bad)
or
icebp
or
fwait
dec
jo
jnp
dec
cmovns
mov
bswap
xchg
in
add
inc
add
les
cmovs
sbb
pop
pop
pop
mov
cmp
mov
push
add
jne
stos
clc
fdiv
sahf
add
push
push
dec
sub
pop
pop
dec
pop
mov
aaa
and
jno
sahf
push
loope
mov
arpl
mov
sahf
sub
popf
nop
adc
sahf
push
(bad)
bound
dec
mov
pop
ins
xor
sub
inc
push
ins
inc
test
fnstenv
add
mov
aam
sbb
aad
add
fldl2e
push
nop
mov
test
pop
xor
push
nop
fld
pop
ins
rol
xor
ins
sahf
jns
test
sahf
push
loope
or
in
dec
cmp
hlt
xlat
mov
push
push
xlat
pop
jl
sbb
ins
sahf
call
cmp
pop
repnz
repnz
xlat
pop
cmc
mov
sbb
mov
ins
sahf
fist
das
sbb
jo
(bad)
ins
sahf
jb
stc
mov
ins
sahf
xchg
push
repnz
js
pop
ins
sahf
test
ins
sahf
and
mov
sti
imul
mov
or
fld
add
cmp
xchg
and
mov
xlat
push
cmps
push
shl
das
les
push
jg
and
sahf
or
scas
fmulp
push
test
out
fmul
push
out
and
xlat
cmc
sub
jmp
icebp
add
aaa
int3
(bad)
pop
out
or
nop
fisttp
fld
cs
sahf
idiv
cwde
push
mov
push
loopne
mov
push
movs
fcmovu
and
and
mov
xlat
jo
pop
dec
xchg
in
adc
xor
not
xlat
in
mov
adc
adc
add
add
pop
ds
mov
sub
push
mov
and
xchg
punpcklwd
xor
xchg
xchg
movs
loope
sbb
xchg
xchg
xchg
movs
lds
jb
mov
loopne
(bad)
xchg
pushf
adc
inc
add
in
cmps
clc
fisubr
dec
aaa
or
retf
sbb
pop
ss
mov
jne
xor
inc
(bad)
mov
xchg
and
push
(bad)
push
sub
fcomp
(bad)
sbb
add
dec
test
push
pop
jb
adc
les
add
(bad)
push
and
bound
and
sbb
cmp
sbb
or
sbb
jo
sbb
nop
fistp
cmps
pop
fdivr
mov
fnsetpm(287
inc
jb
sbb
leave
or
cmps
mov
inc
push
and
sbb
nop
mov
add
inc
repnz
pop
leave
sbb
or
mov
push
les
das
sbb
inc
pushf
add
push
leave
cld
sahf
push
and
enter
int3
scas
mov
imul
pop
push
push
push
cmp
xor
idiv
cmps
inc
call
add
repz
xchg
call
jmp
and
out
mov
call
bnd
in
out
out
cs
ins
push
jo
push
test
jns
loopne
cmp
jecxz
push
and
inc
movs
in
xor
mov
inc
jne
out
repnz
stos
fwait
(bad)
xchg
inc
cld
adc
xchg
(bad)
add
stos
pop
imul
mov
jmp
lods
packuswb
or
test
pmulhw
repnz
sbb
in
in
xchg
lods
leave
lods
add
in
jne
scas
scas
call
dec
loopne
pop
scas
nop
scas
(bad)
adc
pop
int3
out
loope
ret
test
pop
pop
ins
shl
cmp
add
adc
cmps
xor
or
scas
xor
and
dec
pop
adc
out
mov
sub
loop
push
test
ins
out
inc
dec
adc
xor
and
xchg
sub
add
mov
out
push
rol
push
xlat
xor
test
stos
pop
enter
cmp
in
repnz
enter
adc
mov
enter
cmp
push
and
scas
ins
in
and
enter
enter
enter
and
xchg
adc
scas
mov
cmp
in
repnz
scas
cmp
add
and
scas
cld
jecxz
push
and
xchg
scas
nop
out
scas
in
cmp
call
popf
rol
mov
iret
test
popa
pop
mov
xchg
push
test
mov
or
dec
aaa
add
and
mov
push
loop
mov
int3
loopne
hlt
push
or
pop
push
mov
jns
inc
les
and
inc
cmp
hlt
loop
in
cmp
push
fistp
loope
neg
cmp
nop
push
xor
push
pop
icebp
jns
out
jo
lods
and
fistp
cmc
add
pop
and
nop
sub
add
jecxz
mov
pop
and
pop
and
pop
dec
and
je
movs
(bad)
add
psrlw
imul
cmp
popa
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
nop
mov
cmps
in
jecxz
mov
jo
cdq
push
lds
cs
sbb
inc
add
mov
cmp
les
mov
movs
loope
sub
adc
pop
fst
and
inc
xor
test
lds
add
loop
xchg
and
aam
loope
push
sub
hlt
pop
and
icebp
push
push
test
push
inc
loop
pop
adc
rcl
loope
push
adc
stos
pop
add
mov
and
mov
and
xchg
mov
jns
cmp
nop
loopne
mov
xor
js
xchg
adc
cmp
mov
pop
loopne
mov
jo
js
and
repnz
loopne
mov
and
js
loopne
cmp
push
and
shl
and
cmp
fbld
setb
mov
dec
add
pop
mov
push
pmulhuw
mov
clc
out
mov
push
in
ret
add
push
(bad)
add
repz
push
xchg
cmc
jns
jl
jle
je
hlt
(bad)
push
fcom
push
xor
jo
repz
add
add
cwde
repz
test
cmc
pop
shl
adc
vmwrite
icebp
out
out
mov
inc
push
lock
sbb
cmp
sub
clc
sub
xor
push
nop
icebp
pop
push
adc
pop
xrelease
dec
and
pop
les
add
mov
pop
cmc
movaps
es
cmp
jle
xchg
mov
out
push
mov
retf
cmp
mov
retf
in
movsx
jl
retf
retf
retf
retf
mov
lock
retf
retf
retf
retf
fwait
mov
inc
rol
retf
retf
add
or
test
or
arpl
repz
div
xchg
test
test
rcl
ja
shl
daa
sub
mov
icebp
pop
pop
sub
inc
adc
hlt
repz
push
and
aad
dec
pop
push
push
and
push
test
lds
add
dec
adc
sar
pushf
hlt
pop
push
adc
pop
and
jb
push
fcomp
icebp
sub
xor
pop
and
mov
pop
les
cs
xor
pop
sub
sub
nop
pop
leave
or
rcr
shr
jns
pushf
sub
fs
inc
repnz
inc
icebp
daa
nop
pop
leave
sub
lock
sub
pushf
inc
push
and
repnz
jb
jns
cmp
sub
leave
or
inc
clc
lock
and
nop
pop
(bad)
icebp
sub
nop
sbb
push
nop
icebp
sub
inc
jb
jns
repz
sbb
in
repnz
loop
sbb
aad
mov
pop
mov
push
js
aaa
jmp
mov
pinsrw
push
add
inc
mov
jmp
dec
pusha
in
jbe
or
adc
jmp
dec
cld
in
imul
pop
pop
add
ins
test
sub
adc
adc
imul
mov
add
mov
add
pop
xchg
jp
xchg
or
xchg
add
xchg
mov
jmp
dec
and
retf
push
xor
push
movs
add
les
mov
adc
es
pop
add
push
or
punpckhwd
adc
cmp
adc
fstp
add
sbb
pop
(bad)
imul
dec
or
adc
iret
ret
push
cmp
sub
cmc
or
pop
dec
jne
xor
sub
pushf
or
call
aam
pop
lods
(bad)
mov
aaa
(bad)
pop
mov
pop
lds
mov
mov
repz
retf
inc
ret
scas
jecxz
sahf
and
push
inc
push
add
add
dec
adc
xor
popf
sbb
jo
(bad)
fs
inc
outs
jae
ins
(bad)
dec
or
shl
scas
inc
bound
xchg
xchg
(bad)
pusha
lds
retf
pusha
pop
sbb
inc
mov
sub
test
or
push
loopne
sub
das
(bad)
push
adc
add
push
mov
mov
ss
jg
add
into
inc
loope
push
mov
inc
in
outs
ins
fdiv
cmp
sbb
fisttp
or
inc
dec
popa
xor
inc
push
call
dec
mov
dec
and
sti
or
shl
xlat
pop
enter
neg
pop
push
dec
xor
mov
unpcklps
push
stos
(bad)
iret
dec
push
sbb
xor
and
je
cmc
add
cmp
pop
test
rol
push
gs
cmp
or
xchg
cmp
std
and
cs
leave
inc
and
cmp
dec
xor
loope
adc
dec
add
dec
cli
mov
add
jns
imul
pop
test
mov
in
jp
leave
adc
dec
sbb
add
leave
or
outs
mov
mov
int
out
push
push
retf
push
sbb
neg
mov
push
outs
jno
inc
or
add
orps
and
add
and
or
mov
add
bound
adc
or
push
add
and
and
je
retf
retf
and
ss
retf
add
adc
repz
pop
or
daa
xor
retf
popa
mov
icebp
loope
mov
sbb
pop
and
bound
and
cdq
icebp
dec
xchg
icebp
and
pushf
nop
pop
pusha
mov
aaa
fstp
push
into
das
popf
push
loopne
sbb
pop
pop
rcr
stc
and
outs
sti
dec
pop
pop
test
cli
cld
outs
xor
aam
cli
dec
xor
cld
push
add
push
pop
cld
dec
mov
jns
enter
clc
cli
sbb
and
cld
xor
lock
movs
daa
addr16
adc
or
daa
lds
inc
pop
(bad)
ficom
cmc
inc
js
outs
stos
test
test
mov
mov
xchg
or
push
inc
inc
sbb
js
push
xor
aas
or
lods
into
jmp
aad
test
mov
orps
aaa
lahf
loope
jmp
pop
pop
sub
mov
pop
pop
daa
mov
ror
imul
retf
add
pextrw
data16
stc
sbb
inc
cmps
xchg
sar
pop
and
sbb
or
stos
das
mov
jns
or
inc
push
les
cmp
inc
lahf
add
adc
add
jae
cli
mov
and
mov
mov
mov
push
pop
push
dec
pop
pop
add
push
xchg
mov
bound
lods
inc
test
sbb
icebp
and
ins
fild
push
call
and
rcr
fist
fiadd
sahf
test
push
cwde
push
rcl
sbb
fsubr
adc
lock
pop
push
mov
dec
out
fbstp
loopne
push
lock
mov
movs
push
and
push
dec
add
pop
out
iret
add
xchg
pusha
movs
pop
add
aaa
or
test
ret
mov
and
das
aam
in
pop
inc
gs
add
iret
lock
movups
sbb
add
push
pavgb
lock
ror
(bad)
mov
add
or
sbb
dec
popf
gs
xchg
mov
(bad)
fsubr
adc
(bad)
(bad)
dec
mov
add
and
push
outs
(bad)
jmp
rcl
mov
mov
push
sbb
jae
add
or
sbb
pop
add
add
push
pop
push
cmp
les
test
mov
sub
ror
pop
and
mov
mov
cmp
add
or
sub
jns
jmp
rcl
cmp
xor
push
loopne
loop
aaa
mov
cmp
push
daa
xchg
push
mov
mov
push
jmp
das
push
xor
inc
xlat
aaa
fidivr
push
push
push
fldenv
fldcw
bound
xor
add
aas
clc
or
sbb
jo
pop
dec
js
sub
clc
or
add
outs
or
inc
jno
and
pop
aas
setl
dec
or
sub
aas
cwde
or
adc
fisttp
cld
push
add
dec
mov
retf
fisttp
ins
xchg
fimul
cmovns
pop
sub
mov
pop
aam
pop
imul
add
dec
enter
sub
or
inc
ja
ror
adc
imul
fistp
ffree
or
jecxz
outs
push
xor
aaa
sbb
mov
xchg
pop
cmp
cmc
mov
inc
xlat
cmp
cmps
jge
push
pop
fist
fld
movs
ret
jbe
jmp
aaa
cmp
imul
aaa
mov
pop
push
pop
enter
cli
sbb
pop
pop
aaa
add
push
les
pop
add
add
adc
pop
aaa
lods
repz
fiadd
les
xchg
fadd
pop
mov
xor
or
mov
sbb
adc
fsubr
and
leave
or
sbb
mov
ins
cld
movs
lahf
ins
(bad)
sti
fisttp
outs
add
dec
subps
imul
aam
punpckhdq
fisttp
iret
sub
xor
dec
pop
nop
add
push
push
stos
dec
dec
or
cmp
pop
xchg
pushf
sub
dec
mov
jnp
mov
xor
nop
xchg
adc
test
xor
lds
push
arpl
xor
ins
xchg
xchg
sub
je
fdiv
icebp
mov
xor
add
dec
daa
dec
sub
jmp
cmp
pop
pop
pusha
fild
or
fbld
sbb
les
enter
xchg
jmp
adc
xlat
ins
jecxz
adc
jle
push
xor
loop
cmp
retf
push
pop
test
das
nop
push
jg
add
adc
dec
mov
add
cwde
push
xlat
mov
mov
loope
xchg
xchg
mov
and
rcl
loop
inc
cld
jmp
clts
icebp
(bad)
add
jecxz
leave
ja
not
push
jge
push
inc
pop
push
gs
bound
lea
sub
cdq
pop
aas
in
and
xchg
xchg
aaa
dec
mov
mov
push
add
sbb
fist
aad
cld
jecxz
or
push
daa
int3
adc
mov
in
push
add
call
popf
mov
cmps
fsub
out
jmp
or
xor
or
push
xchg
sbb
and
inc
and
jae
adc
push
pop
stc
verw
das
or
pop
cmps
push
xor
in
adc
pop
dec
hlt
adc
or
cs
push
in
jnp
cmp
jge
inc
mov
inc
sahf
pushf
mov
mov
ins
(bad)
pusha
and
push
lahf
inc
aad
cmp
mov
fisttp
sbb
mov
mov
add
pop
pusha
test
test
adc
push
mov
mov
xor
inc
or
xchg
ins
adc
mov
pop
jne
and
dec
enter
out
scas
add
pop
out
out
ins
lods
test
lahf
xchg
ss
and
or
add
add
std
(bad)
cli
sbb
lods
sbb
push
and
push
inc
ins
push
inc
int
cmp
or
sub
mov
outs
test
int
sub
fwait
add
jo
stos
imul
adc
daa
test
pop
push
aad
jecxz
xchg
popa
and
push
cmp
sub
in
nop
add
sahf
add
movs
(bad)
cmc
repz
lods
add
mov
xchg
ja
inc
fcos
mov
dec
fidiv
mov
inc
fsubr
add
jmp
dec
bound
cs
lahf
sub
push
adc
push
mov
fwait
pushf
rcl
fstp
aas
and
in
push
out
push
mov
push
mov
jo
jmp
(bad)
sbb
inc
adc
test
(bad)
out
repnz
jmp
add
std
add
sbb
stos
pop
dec
pop
add
enter
add
pop
mov
or
push
or
mov
xchg
push
add
dec
clc
adc
inc
in
cdq
adc
push
sub
mov
adc
or
ins
call
fs
es
jne
push
loopne
pop
sub
adc
rol
jg
sbb
xor
ss
js
movs
cmp
push
sbb
aaa
test
and
push
ret
inc
add
mov
pop
lds
or
in
push
and
add
sub
pop
pop
nop
or
mov
ret
pusha
loope
aaa
add
pop
das
mov
pop
pushf
jmp
arpl
outs
adc
lock
and
pop
inc
push
mov
mov
out
push
fsubr
push
or
mov
into
inc
add
push
daa
add
push
lods
mov
scas
hlt
mov
pop
in
push
or
data16
add
cmovbe
sbb
jmp
pop
test
xchg
popa
push
ins
in
push
push
push
mov
adc
daa
add
xor
in
in
les
sub
adc
push
retf
dec
xchg
add
push
push
pop
sti
lock
ins
mov
pop
imul
in
fwait
mov
je
pop
jl
or
push
mov
add
jnp
lods
das
mov
push
or
sbb
lods
mov
mov
shl
inc
add
and
cmps
mov
jne
imul
or
pop
add
movhlps
fiadd
add
push
mov
aas
retf
xchg
out
das
retf
js
ds
icebp
push
daa
clc
das
es
inc
jno
jl
out
or
and
test
femms
inc
xor
cdq
sbb
inc
ins
and
sub
imul
xchg
mov
xchg
pop
dec
fiadd
cmp
push
pop
lock
push
inc
xor
repnz
aam
psllw
add
cmp
lods
frstor
mov
mov
push
icebp
dec
bound
mov
dec
and
mov
jb
sbb
inc
rol
es
pop
xor
and
fstp
lahf
add
inc
sbb
cmc
push
nop
push
add
xor
push
lds
daa
les
icebp
inc
gs
sbb
sub
cmp
cmp
repnz
inc
movs
repz
dec
repz
sub
push
out
idiv
shl
jns
xchg
jl
imul
push
cmp
jns
je
push
pop
push
push
repz
add
ds
push
dec
out
fidiv
push
sbb
xchg
mov
ror
das
clc
pop
xor
fiadd
cmp
sbb
cmp
jns
adc
ins
push
je
idiv
repz
xor
clc
add
jnp
mov
sbb
push
jo
xor
push
mov
mov
repz
mov
int3
push
fadd
xor
iret
lods
cwde
nop
loopne
fdiv
push
(bad)
cmp
test
test
aas
das
jecxz
mov
shl
(bad)
aas
hlt
adc
inc
add
lds
mov
outs
ja
add
test
test
repz
test
jbe
ret
jle
pop
pop
pop
pop
fld1
and
mov
hlt
inc
fs
fld
pop
cmp
dec
mov
pop
push
pop
sbb
hlt
sub
cmp
add
adc
mov
ins
jnp
add
mov
loope
xlat
sbb
das
loop
push
inc
inc
(bad)
clc
add
ss
adc
icebp
shl
out
dec
xor
hlt
out
pusha
cmc
dec
dec
pushf
sbb
stc
pop
das
or
cmc
xor
push
mov
jbe
cmc
xchg
cmp
jnp
test
cmovo
bswap
xlat
push
sbb
or
retf
in
test
and
xchg
test
int
xchg
xchg
jo
dec
sub
inc
icebp
mov
stc
sbb
icebp
or
sub
sub
cdq
lea
cdq
jae
or
sub
add
or
add
push
adc
or
and
push
xor
lods
mov
daa
jae
push
adc
mov
mov
adc
sbb
lods
push
mov
add
push
adc
add
sbb
fiadd
arpl
pop
xor
pusha
xchg
inc
add
mov
mov
xchg
or
je
or
xchg
out
add
dec
imul
push
fadd
mov
mov
outs
add
push
or
push
jmp
xchg
mov
ror
scas
add
or
punpckhbw
(bad)
cmp
jmp
sub
les
mov
mov
push
enter
mov
mov
(bad)
xor
(bad)
rol
addr16
ss
sbb
and
jl
repnz
dec
prefetchnta
sbb
adc
mov
adc
add
(bad)
sub
adc
fs
mov
pushf
sub
clc
mov
and
icebp
jno
add
mov
popf
dec
ins
test
adc
popf
and
adc
std
cmp
mov
fs
nop
add
std
shl
std
les
mov
icebp
and
je
addr16
jne
scas
call
inc
into
aaa
or
aad
int
test
jp
or
js
test
loop
or
add
pop
cld
stos
and
int3
repnz
pop
das
add
jl
mov
lea
leave
or
inc
out
pop
push
cmp
pop
add
mov
into
mov
adc
jo
pop
xchg
into
dec
int3
push
cs
and
pop
xor
mov
push
inc
leave
nop
inc
xlat
(bad)
leave
mov
test
jmp
mov
es
adc
aaa
or
pop
ins
pop
jecxz
shr
pop
std
hlt
std
pop
xlat
mov
add
enter
mov
scas
add
add
mov
jecxz
sbb
adc
inc
inc
or
or
pop
mov
mov
ins
adc
or
xchg
js
xlat
scas
mov
pusha
adc
and
push
out
or
int3
push
iret
cmp
and
xchg
push
aam
xor
mov
and
xchg
in
aas
lods
xchg
call
xchg
aad
scas
cld
push
pop
aas
add
add
punpckhdq
jmp
pmaxsw
add
into
wrmsr
add
push
xor
xlat
xlat
xchg
aas
rdpmc
add
cli
push
and
movd
or
mov
or
dec
cmp
pop
mov
les
rol
mov
push
xor
dec
jae
push
sbb
dec
stc
xchg
mov
ins
push
xor
adc
imul
inc
(bad)
loop
cmp
enter
pop
push
outs
(bad)
aaa
pavgb
or
xchg
mov
sub
cdq
xchg
sub
mov
add
lea
bound
lea
mov
jecxz
add
out
sub
les
jge
pop
sbb
outs
sbb
dec
mov
fdiv
pushf
mov
add
pushf
cmp
aaa
dec
pop
les
pop
icebp
jne
daa
lea
mov
inc
pop
push
pop
sub
pop
sbb
shr
add
pusha
clc
outs
or
or
jo
cs
or
cwde
pop
xchg
icebp
mov
lahf
adc
je
and
inc
sbb
inc
les
jo
inc
and
push
out
push
rcl
dec
push
pop
push
movs
aas
mov
enter
addr16
or
push
aas
stc
add
adc
test
outs
loope
dec
mov
das
cs
mov
xor
popf
jno
paddb
inc
shl
or
jl
jae
ret
mov
xor
aam
add
pop
leave
mov
pop
jae
loopne
push
mov
sbb
push
aas
inc
and
movs
mov
lds
xor
fstp
cmp
push
and
push
or
inc
jge
or
and
adc
add
mov
push
enter
inc
ret
imul
add
fsub
sub
mov
aad
aam
mov
or
cwde
add
out
aad
test
jo
or
inc
push
ds
or
add
add
loope
add
inc
(bad)
rol
daa
push
or
xchg
bnd
mov
cmps
cmp
fild
outs
iret
jmp
mov
movs
push
ds
jle
sub
movs
pop
das
xchg
lock
nop
or
cmps
dec
add
push
inc
pop
add
dec
pop
mov
(bad)
xchg
ja
inc
dec
inc
add
rcr
sbb
inc
shl
ja
dec
(bad)
and
mov
inc
pandn
push
dec
push
xchg
xchg
push
push
pusha
pop
push
nop
pop
inc
add
jecxz
in
das
aaa
inc
scas
push
inc
sbb
das
retf
pusha
pop
bndstx
ins
popa
jo
dec
loope
inc
bound
dec
add
inc
popa
imul
mov
pushf
and
push
push
pop
fs
movs
add
or
pop
pop
out
pop
sbb
nop
push
pop
enter
pop
dec
or
nop
adc
adc
cmp
adc
adc
xchg
(bad)
and
popf
ds
pop
adc
or
inc
pop
fld
mov
std
adc
arpl
push
xor
push
adc
ret
ja
xchg
ud0
push
xchg
add
jl
adc
xor
pop
add
loopne
sbb
dec
push
mov
xchg
and
das
sub
adc
dec
addr16
int3
or
jecxz
js
ins
rcl
add
jnp
mov
scas
shr
xchg
or
and
aam
and
imul
xor
mov
xor
or
sbb
xchg
adc
test
jle
dec
gs
push
inc
sub
mov
aam
aaa
jae
push
out
fstp
inc
add
adc
hlt
dec
push
inc
adc
pop
leave
cmp
imul
cmp
ins
fs
add
push
add
iret
gs
(bad)
enter
test
adc
shr
ficom
pop
iret
and
push
and
or
call
sub
fsub
inc
call
sbb
xor
mov
mov
xor
add
sbb
jg
cmp
pop
adc
pusha
das
inc
dec
push
icebp
jbe
pop
in
pop
imul
aaa
vunpckhps
icebp
push
cli
loope
or
cmp
pop
and
adc
xor
lea
add
outs
bound
sub
and
sub
lahf
lods
add
addps
sbb
imul
add
adc
xlat
mov
dec
push
lahf
add
push
sub
leave
mov
ja
pop
int
mov
jle
inc
or
add
pop
nop
in
cmps
jae
idiv
inc
sti
sahf
or
lds
dec
or
dec
add
mov
add
mov
neg
(bad)
pop
mov
inc
add
pop
or
sub
xor
pop
dec
inc
enter
(bad)
aam
fsubr
in
push
jmp
or
das
pop
push
cmp
aad
out
sub
pop
dec
movs
loop
aas
or
sbb
jno
mov
mov
cmc
sbb
je
cmp
test
jnp
sbb
stos
pop
push
mov
add
les
ret
rol
jmp
add
aas
es
sbb
(bad)
dec
loope
sbb
or
or
enter
pop
loop
dec
mov
out
das
or
rol
sub
fsubr
mov
into
sub
out
enter
call
sbb
sbb
or
lock
push
sub
int3
sbb
sbb
sub
sbb
hlt
sbb
xchg
adc
adc
movs
pop
jo
jno
pop
ror
add
push
loop
cwde
pop
adc
xor
xchg
xchg
dec
pusha
mov
pop
add
xor
xlat
mov
les
sbb
push
sub
add
pop
sub
pushf
sbb
push
ror
push
pusha
adc
sub
repnz
sub
fisub
test
call
pushf
sub
push
push
sbb
pop
jno
sub
icebp
cmps
shr
sub
mov
(bad)
pop
imul
inc
xchg
sbb
push
pop
and
pop
jns
jl
mov
adc
fcomp
mov
lahf
jo
es
pop
fcomp
mov
lock
pop
inc
aas
loopne
je
dec
scas
and
mov
shl
add
aas
xor
sbb
jne
or
sbb
xchg
arpl
cmp
push
xor
sub
sbb
jnp
loopne
test
adc
dec
js
and
and
test
lock
push
cmps
cwde
adc
and
into
and
jg
xor
sub
mov
fsub
add
in
repnz
mov
push
(bad)
and
dec
add
movs
iret
fwait
and
dec
sub
xor
pusha
sub
cld
and
and
push
xor
add
aas
jo
inc
inc
je
dec
rcl
mov
into
and
inc
mov
cmp
fdivr
and
xchg
add
pop
arpl
adc
jmp
push
jno
jmp
cs
sahf
jge
mov
(bad)
out
push
loope
das
jg
pop
sub
mov
out
add
ret
mov
pop
cs
cmp
sub
cmp
pushf
jbe
out
test
dec
add
or
push
inc
sub
and
xchg
sbb
imul
xchg
rol
add
push
inc
inc
jb
ja
jae
and
sbb
add
dec
mov
dec
dec
lods
xchg
div
pop
repz
cs
xor
ja
adc
sub
adc
fild
aaa
adc
mov
push
lock
leave
leave
enter
scas
cld
outs
adc
mov
xchg
and
dec
fdivr
daa
sub
daa
daa
daa
mov
sub
mov
sub
mov
ss
sub
cpuid
aaa
add
or
call
add
test
push
sbb
shl
rol
jno
or
jno
inc
dec
mov
adc
push
xchg
or
lods
(bad)
pop
adc
push
push
adc
cmp
or
daa
sbb
or
fwait
call
fwait
adc
(bad)
cmp
dec
push
jo
inc
xor
push
lds
xor
pop
push
xlat
add
repz
loope
cmp
scas
and
jmp
pop
mov
sub
push
(bad)
(bad)
dec
jmp
push
sbb
jns
int
je
lock
and
inc
add
pop
dec
xor
xor
test
test
dec
push
dec
add
xchg
outs
jae
gs
xchg
or
push
push
adc
rol
cmp
imul
sub
add
sub
shl
pop
das
inc
push
or
or
inc
xor
rol
push
test
mov
inc
mov
push
pop
ins
sub
add
or
out
sub
cwde
fild
sub
jnp
or
jmp
add
(bad)
add
(bad)
in
mov
dec
fstp
sub
aam
mov
cmp
ss
or
popa
or
adc
and
xor
movs
cmp
or
adc
pop
adc
push
and
pop
movs
adc
mov
cmp
dec
sub
adc
adc
mov
outs
xchg
aad
inc
test
or
icebp
stc
cs
js
std
mov
les
das
xlat
xor
pop
jl
xchg
inc
ret
xchg
das
xlat
pusha
das
out
ror
xlat
cli
das
jmp
loop
adc
xchg
push
mov
pop
das
test
sub
sbb
jo
push
pusha
das
popf
pop
sub
dec
inc
pop
sub
lds
xor
clc
push
(bad)
aam
das
xor
stos
cs
mov
xchg
or
xchg
loopne
jae
test
cmp
daa
bound
retf
mov
aad
xor
mov
mov
adc
add
push
sbb
xchg
mov
inc
push
add
add
dec
ror
sbb
cmp
mov
add
(bad)
xor
sahf
xchg
cmp
sbb
(bad)
arpl
jns
addr16
cmps
push
add
add
or
inc
add
test
cmps
pop
je
inc
mov
mov
xor
xor
pop
add
mov
adc
sub
xor
sub
xor
inc
sbb
dec
pop
or
mov
in
outs
out
loopne
lds
xor
shl
push
mov
adc
mov
rol
push
xor
addr16
jle
mov
cmp
sbb
pop
das
add
ret
dec
das
imul
xor
adc
rcr
shl
(bad)
or
xlat
ss
std
(bad)
aaa
out
movs
xor
xchg
aaa
or
psubusb
push
xchg
and
dec
cmps
hlt
inc
cmp
daa
daa
daa
lods
imul
xchg
jne
loop
cmp
cmp
cwde
rcr
cmp
popf
not
sahf
pushf
stc
and
sub
je
cmp
adc
dec
jmp
xor
ds
add
mov
ins
xor
ins
adc
add
ins
add
dec
dec
xchg
and
mov
push
pop
xor
sub
popf
bt
dec
in
dec
adc
sbb
cmp
inc
add
push
or
shl
or
xchg
add
mov
syscall
dec
and
je
pop
fwait
sbb
mov
and
xor
mov
push
adc
fimul
outs
or
inc
or
push
pop
ss
add
out
sub
xor
add
sbb
sti
sub
pop
and
xchg
add
xor
loopne
push
add
xchg
or
push
dec
imul
jno
imul
daa
imul
and
mov
add
daa
movs
and
xor
pop
add
enter
inc
cmp
add
cmp
pop
jae
inc
xor
and
mov
pop
xchg
push
xchg
mov
pop
sub
xchg
movs
mov
pop
mov
enter
add
sub
add
xor
sbb
push
push
xor
xor
sbb
pop
inc
sub
movs
dec
fst
add
pop
lds
xor
or
xchg
mov
and
and
mov
aas
or
adc
xor
cmps
ret
cmp
jl
xor
jmp
push
pop
lods
adc
mov
cmp
dec
aas
outs
je
push
(bad)
(bad)
in
push
nop
add
and
retf
add
and
add
push
lods
push
mov
ficom
mov
jnp
push
xor
add
and
fadd
scas
fld
mov
push
and
add
inc
add
mov
mov
pusha
inc
inc
cdq
sub
mov
mov
pop
fnstsw
mov
mov
fist
push
test
bsr
inc
inc
inc
adc
scas
in
add
inc
clts
xchg
retf
xchg
jg
syscall
bound
push
add
pop
add
adc
wbinvd
add
mov
scas
icebp
shl
fs
pop
push
jl
mov
mov
sub
imul
sahf
sti
push
push
dec
in
adc
or
retf
or
data16
cmp
cdq
(bad)
pop
mov
add
in
xchg
pmullw
inc
rsm
pusha
cmp
int3
aam
retf
inc
mov
cmps
sqrtps
cwde
test
xor
gs
inc
xor
call
sub
xor
pop
test
dec
jns
call
ja
(bad)
add
xor
shl
mov
mov
pop
stc
in
clc
inc
xor
in
mov
xchg
or
daa
aam
sub
mov
sbb
dec
pop
in
call
add
mov
dec
jo
mov
lods
push
mov
push
mov
repnz
mov
adc
clc
or
inc
and
imul
add
inc
jae
push
nop
cs
jmp
pop
ins
xor
sub
sbb
test
loopne
loopne
and
xchg
movs
pop
jmp
sub
aam
or
and
mov
dec
inc
pop
pop
shr
adc
mov
dec
pop
ins
dec
cmps
ficomp
add
xchg
push
and
mov
dec
jg
ror
add
pop
movs
rcl
ret
add
shl
(bad)
inc
ror
adc
adc
push
mov
xcrypt-cbc
cmps
adc
into
dec
hlt
nop
dec
rcl
push
pop
(bad)
loopne
lock
vmread
or
pop
gs
cmp
rcl
rcr
pop
test
mov
xchg
and
aad
dec
xadd
pop
push
in
(bad)
mov
mov
add
rol
movs
clc
mov
or
add
mov
js
mov
mov
mov
mov
sub
stos
out
push
dec
sbb
and
and
push
push
bound
(bad)
rol
dec
rcl
inc
jo
or
xchg
inc
and
mov
shr
fisttp
adc
lds
mov
data16
(bad)
adc
popa
add
jmp
adc
add
in
lea
or
inc
push
lea
pop
cmps
add
xor
mov
movs
add
xchg
mov
sbb
push
ret
or
addr16
ror
inc
push
and
sbb
adc
add
or
dec
adc
cmp
sbb
inc
push
inc
xor
rol
adc
or
pushf
test
add
xchg
popa
adc
ror
(bad)
and
fnstenv
dec
inc
nop
dec
add
jmp
add
jge
xor
pop
or
or
clc
mov
in
cwde
daa
adc
(bad)
push
xor
(bad)
stos
inc
or
imul
jne
imul
mov
jl
arpl
jns
pop
add
lock
add
push
rol
fmul
pop
xchg
add
shl
sub
dec
pop
inc
add
sbb
mov
cld
int
jge
add
mov
sbb
adc
jge
sbb
inc
ret
cmps
or
loope
inc
and
xchg
shr
js
push
aam
jl
outs
fist
ins
cmp
or
push
mov
mov
xchg
mov
dec
pop
cmp
and
sub
push
(bad)
dec
add
cs
and
cdq
or
inc
adc
and
dec
aam
or
inc
and
xor
or
jle
pop
push
in
bound
pop
inc
mov
mov
mov
adc
inc
dec
or
outs
mov
mov
add
mov
repnz
loopne
push
and
pop
jb
and
mov
xchg
(bad)
and
inc
pusha
sub
or
add
adc
imul
inc
dec
cwde
and
add
push
dec
rcr
add
or
dec
inc
sbb
xchg
xchg
daa
jb
loopne
xchg
push
dec
add
ins
loopne
sbb
add
and
dec
bound
ins
inc
pop
or
push
or
js
ds
imul
push
(bad)
fisttp
or
dec
shl
inc
add
pop
sub
pmaxub
xchg
or
ret
push
test
add
cmp
adc
das
les
dec
mov
push
fwait
mov
dec
sar
add
xor
dec
add
popa
jns
call
ret
cmps
(bad)
or
nop
add
sub
push
lock
add
or
xchg
loope
(bad)
in
imul
inc
push
adc
adc
inc
dec
inc
add
push
jg
inc
ins
push
in
pusha
add
lock
dec
adc
cld
mov
dec
call
xor
adc
rol
add
loop
cld
jge
adc
sbb
jmp
adc
sbb
shl
pop
in
mov
scas
dec
loopne
inc
mov
push
shl
data16
fld
dec
int
ret
pop
enter
scas
(bad)
adc
sbb
pop
push
mov
ja
or
out
add
or
add
or
or
sbb
adc
adc
adc
push
pop
sbb
sbb
sbb
push
test
and
clc
mov
add
pop
and
adc
fidiv
sti
or
cmp
repz
cs
push
popa
repz
repz
xchg
movs
mov
repz
(bad)
fsubr
cli
or
cmp
jae
push
sub
repz
jno
xchg
movs
mov
cmp
repz
fucomip
sti
or
push
cld
sbb
into
lock
fcomp
inc
pop
repnz
mov
dec
fs
inc
mov
in
test
dec
and
or
and
inc
adc
push
jns
ins
jo
outs
mov
and
inc
pop
enter
imul
pushf
xchg
cmp
pushf
push
cmovae
or
sbb
mov
jmp
inc
enter
jmp
sbb
inc
pusha
xor
leave
rol
mov
pop
jmp
sbb
add
lahf
xor
outs
es
mov
cmp
and
add
xor
adc
aas
lds
add
sbb
jg
sbb
loope
ret
test
sbb
inc
adc
pop
or
shl
out
pop
add
pop
ret
push
or
push
sbb
push
popa
mov
jg
sahf
adc
pop
rol
pop
sbb
shr
ret
jne
and
xchg
xchg
mov
iret
push
inc
ret
addr16
pop
lock
push
push
add
sub
scas
pop
pop
lds
mov
cmp
imul
test
xor
leave
pop
cmovge
mov
push
cmp
xchg
adc
mov
cwde
in
lods
pop
jg
sub
and
jnp
adc
xor
push
setnp
jmp
setne
neg
sbb
daa
push
sbb
add
aas
mov
sbb
pop
ret
rol
push
and
cmp
add
mov
sbb
sub
sbb
sub
add
adc
aaa
or
xchg
das
leave
xchg
pop
in
test
daa
add
xor
xchg
or
pop
sub
iret
dec
dec
sub
jae
je
mov
inc
inc
add
ret
aaa
adc
sub
push
cmp
mov
dec
xor
or
je
popa
push
xor
sbb
int
das
loope
add
nop
pop
and
push
cmp
cmp
jne
cmp
je
mov
adc
or
pop
in
shr
and
mov
mov
sbb
cld
and
mov
xchg
sbb
pop
sbb
aaa
mov
mov
daa
sar
adc
add
add
dec
xor
add
(bad)
push
pusha
call
adc
cmp
pop
sub
add
mul
cs
leave
mov
ja
sahf
push
fld
mov
imul
mov
iret
repz
adc
fidiv
cmps
push
fwait
lods
out
jns
out
into
fucomip
or
xchg
jl
jnp
loopne
lods
push
pushf
inc
pop
add
cmp
pop
and
sbb
or
inc
dec
pusha
xor
repnz
inc
or
xchg
and
xchg
cmp
sbb
mov
int3
in
adc
xchg
cld
sbb
push
and
nop
or
je
nop
or
nop
test
in
or
fdivr
adc
out
imul
ja
sub
nop
out
out
ins
dec
mov
jae
loopne
adc
xor
or
jge
push
or
add
push
cwde
jo
xlat
jno
or
bound
imul
adc
das
dec
add
inc
add
push
dec
add
dec
add
or
push
push
mov
call
bound
inc
add
das
inc
add
fdivr
add
jmp
xchg
cmp
seto
pop
das
xor
xor
pop
pop
rcl
adc
push
aaa
inc
mov
inc
sti
and
inc
aaa
add
rol
pop
out
push
or
(bad)
dec
xchg
inc
pusha
add
test
and
pop
pushf
push
xor
push
in
or
add
add
dec
or
push
xor
or
push
add
push
pop
jbe
or
xchg
inc
add
mov
add
(bad)
(bad)
in
or
adc
pop
adc
sub
mov
out
jmp
mov
push
inc
neg
dec
mov
call
sub
add
sub
push
scas
sub
not
scas
jae
xor
jo
adc
adc
push
or
or
inc
fmul
cmp
sbb
js
pop
in
mov
in
(bad)
daa
scas
dec
dec
lods
in
es
xchg
in
push
loopne
add
jo
test
mov
add
inc
fcomp
out
lea
sbb
or
loopne
neg
jmp
inc
or
xchg
bound
bound
add
(bad)
in
push
pusha
nop
mov
push
mov
std
and
jo
mov
lock
xor
push
test
loopne
mov
xchg
stos
adc
sub
cmp
adc
popa
test
or
ins
add
cld
cmp
lods
and
pop
dec
inc
std
push
or
add
push
dec
jne
test
rcr
push
pop
and
jmp
or
adc
ret
cmc
sbb
sahf
mov
sbb
or
add
sub
and
sub
dec
xlat
add
clc
and
cmp
jle
mov
mov
lods
in
mov
and
jl
add
fadd
inc
dec
dec
and
inc
clts
add
sub
imul
pop
or
dec
cmp
iret
int
imul
out
cmp
ficom
xor
mov
cmp
call
or
push
pop
or
add
and
(bad)
and
xor
repnz
mov
pop
inc
sbb
in
imul
add
cmp
cmps
or
xor
xor
push
sti
xchg
or
xor
pop
or
ror
popf
loop
add
addr16
fadd
add
(bad)
fstp
aaa
js
push
cmp
add
mov
scas
xor
xlat
push
aas
push
push
mov
xchg
mov
nop
test
bound
cmp
sbb
pop
sub
jecxz
add
sub
or
adc
and
add
jl
nop
push
push
adc
add
xchg
mov
pop
loopne
cmp
push
mov
push
sbb
inc
mov
adc
pop
push
adc
adc
hlt
test
cwde
shr
ror
cmp
lods
mov
mov
push
sti
jmp
ficom
inc
sbb
sub
mov
pop
pop
loopne
mov
aas
into
push
adc
inc
jmp
mov
mov
leave
aaa
mov
popa
or
pop
xor
mov
pop
in
repz
mov
inc
jae
lock
jp
add
fsubr
push
xchg
test
loopne
into
jl
sub
xchg
cli
add
jmp
imul
shl
push
mov
or
or
test
and
push
sbb
xchg
push
mov
add
push
dec
sub
test
add
test
call
dec
push
sbb
test
loopne
mov
xchg
lods
add
fsubrp
push
push
xor
inc
push
mov
inc
inc
cmps
add
nop
dec
or
mov
jno
push
sbb
jae
jg
inc
movs
sbb
imul
push
pop
ja
fcom
or
fisub
adc
rol
jle
adc
xor
xchg
add
push
popa
inc
cmp
iret
or
aaa
mov
and
mov
bound
retf
(bad)
adc
cbw
push
and
adc
and
sbb
inc
fidiv
shl
add
sbb
xchg
shr
push
push
or
add
sub
movs
lock
dec
xchg
adc
and
cmp
test
out
or
rcl
adc
xchg
and
push
int
add
cmp
stos
stos
fidiv
inc
mov
call
sbb
or
bound
sub
sbb
xlat
or
and
dec
sub
sbb
sbb
sub
imul
add
fs
and
arpl
sub
ror
pop
cmp
mov
lock
xchg
mov
push
outs
in
inc
inc
sub
push
inc
sub
mov
add
mov
out
mov
pop
dec
ret
jg
add
sar
or
adc
cmps
cdq
fild
mov
push
mov
dec
adc
and
nop
xor
mov
cmps
das
xor
mov
sbb
sub
shl
xchg
ja
cmp
imul
pop
pop
ret
pop
add
mov
ja
nop
test
bound
add
push
sar
bound
mov
int3
or
add
push
pop
pop
sbb
test
pop
sbb
aam
fnsave
jmp
push
mov
cdq
jp
je
push
sub
mov
pop
clc
or
dec
imul
mov
add
push
ja
(bad)
ja
inc
add
and
pop
arpl
cwde
cmp
lock
dec
push
sub
shr
idiv
xor
jl
lods
outs
jo
shl
loope
add
cmp
pop
add
js
cmps
shl
add
sahf
xor
and
and
push
pop
and
cld
xor
and
ret
js
pop
cmps
inc
test
xor
mov
push
sbb
addr16
fimul
cmp
mov
pusha
or
inc
or
sub
inc
cmp
mov
ins
pop
push
ja
lds
pop
jle
ret
jne
gs
add
dec
fdiv
add
sbb
pusha
ror
adc
cmp
cmp
adc
enter
push
and
mov
lds
mov
mov
int
inc
cmp
je
enter
cmp
imul
sbb
sbb
dec
ins
inc
and
rcr
jp
aas
or
mov
popa
add
push
inc
aas
movs
jno
and
jae
dec
sub
imul
sub
ficom
test
sbb
pop
js
popa
out
push
mov
xor
adc
inc
test
adc
mov
nop
or
fs
mov
pusha
js
enter
mov
out
adc
or
pop
out
(bad)
sbb
and
scas
and
jg
mov
mov
ret
jne
jae
xor
scas
add
mov
ret
and
mov
arpl
xor
or
sub
test
mov
sbb
cdq
into
cmp
(bad)
push
adc
dec
pop
loopne
or
add
or
mov
add
sub
jne
push
xchg
nop
mov
sub
cmps
push
push
xor
js
(bad)
pop
cmps
lea
or
adc
add
sbb
fs
in
outs
clc
daa
push
xor
clc
xchg
(bad)
sbb
pusha
pop
sub
(bad)
jo
js
mov
sub
jo
pop
add
aaa
push
sbb
out
pusha
(bad)
getsec
call
test
jae
shufps
push
cmp
test
lods
ja
push
sbb
sub
push
xor
sbb
cmps
add
pop
pop
icebp
das
ja
add
dec
out
jp
mov
test
call
retf
adc
pop
ja
push
jb
push
cmp
popa
loopne
lea
sahf
jne
add
add
or
or
out
int
lea
jno
int3
and
icebp
mov
movs
jne
cld
jo
push
cmps
gs
aam
je
shl
sub
push
dec
and
sbb
test
fcomp
mov
adc
push
mov
cmp
aad
mov
adc
add
jbe
jbe
pop
xchg
fisttp
sub
jne
mov
push
test
add
pop
inc
rcl
add
sbb
push
out
push
mov
adc
out
dec
(bad)
std
addr16
push
or
xchg
xchg
test
xchg
and
test
adc
repnz
mov
nop
adc
jne
xchg
pop
jl
and
sbb
ja
adc
out
inc
inc
jno
ins
add
pop
nop
neg
icebp
and
sbb
ret
popa
sbb
push
loope
mov
mov
or
or
ret
pop
pop
fild
xchg
adc
push
push
daa
push
push
mov
into
mov
xchg
nop
and
in
push
or
jmp
and
xchg
outs
cmp
loop
addr16
outs
leave
dec
pop
repnz
push
xor
inc
js
or
sbb
mov
sbb
inc
jne
arpl
pop
movs
jmp
pop
ret
cmc
and
outs
or
or
add
or
mov
ret
jg
sub
popf
or
dec
or
lods
ss
and
js
jmp
and
adc
cvttps2pi
push
add
js
mov
ins
push
xor
sub
iret
or
dec
push
loop
inc
inc
mov
inc
adc
(bad)
test
fsub
outs
pop
icebp
mov
gs
je
mov
jne
pushf
add
sbb
ds
add
mov
push
xchg
inc
dec
xchg
sbb
push
add
and
sub
sbb
xchg
or
sbb
push
sub
add
pop
xor
or
pop
pop
lock
jnp
sub
loopne
adc
add
hlt
and
cld
push
in
dec
mov
adc
add
loop
ret
jns
sbb
add
dec
sbb
xor
jnp
push
or
xor
push
inc
adc
div
push
adc
rcr
pop
add
dec
test
dec
ror
push
mov
out
xchg
add
aas
js
shl
cmc
add
(bad)
cdq
cmp
ins
fild
loope
xchg
popf
jle
push
jle
das
jl
call
pop
push
ret
aaa
sti
sahf
in
push
push
inc
jge
outs
push
test
in
xor
sti
push
jle
push
jge
rol
jge
mov
xor
das
or
xchg
outs
sub
cwde
lods
xchg
mov
cs
push
sub
mov
ds
mov
pop
test
xchg
add
shr
and
inc
mov
shl
xchg
mov
sub
push
outs
cld
xchg
mov
fsub
sbb
cmps
shl
dec
pop
ins
jl
pop
test
lea
xchg
movs
sahf
jns
scas
in
cmps
add
dec
or
call
in
sbb
sub
stc
movs
sub
pushf
std
in
cmp
mov
inc
mov
pop
and
js
int3
shl
sbb
and
push
popa
(bad)
ins
mov
inc
add
and
jg
dec
repnz
(bad)
push
clc
pop
inc
pop
cmp
dec
adc
or
(bad)
sbb
pushf
loope
mov
add
rol
sbb
adc
jle
pop
mov
sbb
lods
push
jmp
jle
rol
adc
inc
sub
stos
icebp
test
outs
push
mov
and
adc
xor
popa
dec
cmps
aas
push
icebp
xchg
or
add
jbe
nop
outs
add
add
pop
mov
in
es
pop
leave
and
or
in
or
inc
push
xchg
adc
jge
in
faddp
inc
xchg
mov
mov
rcr
ror
inc
sub
push
adc
or
adc
dec
mov
sbb
push
shr
les
ret
jmp
addr16
test
cmp
ret
sub
mov
or
sub
jae
enter
push
push
ins
(bad)
loopne
sub
mov
cmp
ds
push
dec
js
daa
fcom
cmps
test
mov
js
fisub
xchg
pop
jo
sbb
sbb
mov
or
bswap
mov
sub
mov
fldenv
(bad)
in
pop
push
pop
dec
pop
nop
lods
pop
leave
shr
dec
or
repnz
cwde
mov
pop
inc
aaa
sbb
and
mov
lahf
pop
js
mov
xor
jbe
xor
out
pop
sbb
inc
cs
or
fdiv
mov
push
xchg
loop
sbb
xchg
push
push
pusha
sbb
ror
xor
fsub
rep
movs
and
adc
sub
mov
add
push
push
ret
rcl
retf
inc
add
lods
or
adc
daa
daa
mov
cld
add
xor
push
add
push
cmps
daa
test
aad
pop
ret
xchg
(bad)
fist
push
sbb
fucomi
mov
and
(bad)
lods
fsubr
or
jno
dec
inc
pop
add
xor
mov
movs
inc
mov
aaa
aas
out
aam
add
sub
aad
or
inc
mov
sub
add
pop
jae
cmps
mov
std
cs
mov
mov
ins
inc
nop
cmc
not
push
mov
pop
mov
push
cmps
xlat
out
jl
xor
adc
xchg
arpl
push
or
mov
xor
or
mov
lock
(bad)
xchg
adc
inc
jbe
fidivr
push
sbb
sar
inc
ss
imul
xchg
push
mov
lock
pop
rcr
inc
mov
push
add
pop
daa
pushf
jne
or
add
sub
shl
repnz
or
push
cmp
leave
inc
scas
xchg
mov
and
jb
shl
mov
push
rcl
mov
rcr
cli
mov
jle
sub
mov
push
imul
cmp
pop
movs
cwde
test
out
mov
adc
scas
push
(bad)
xor
fistp
dec
dec
js
or
xor
aam
mov
jmp
ret
daa
sbb
push
loop
push
xchg
fstp
inc
inc
inc
sub
inc
ror
jb
mov
inc
sub
add
lea
inc
cmp
pop
movs
mov
fbstp
jo
push
inc
imul
(bad)
xchg
test
add
inc
call
addr16
inc
mov
add
cmp
jb
cmp
add
mov
hlt
int
inc
(bad)
add
jmp
sbb
lahf
pop
pop
leave
js
test
cmp
and
cmp
xchg
test
sub
cs
cmp
cwde
inc
mov
dec
add
rol
mov
mov
xlat
and
or
cmp
aam
mov
mov
cli
and
test
xor
lods
jge
dec
sub
jl
inc
jo
pop
and
push
inc
cmps
push
xchg
cwde
pop
add
cs
mov
pop
mov
push
js
jmp
inc
dec
jne
hlt
fild
mov
mov
in
xchg
adc
or
repz
xor
sbb
sub
dec
dec
mov
outs
jo
or
pop
jne
mov
enter
sbb
ret
and
iret
cmp
cmp
fadd
mov
lahf
pusha
inc
add
inc
pop
in
push
add
pop
sbb
cmp
pop
add
mov
xlat
xchg
add
inc
add
jl
adc
mov
lds
add
iret
aaa
imul
mov
in
or
out
push
rcl
xchg
jle
js
add
aad
adc
pop
and
pop
add
fild
iret
dec
stc
mov
sbb
jge
push
push
sahf
fs
les
hlt
fiadd
xor
mov
sbb
lds
jb
or
or
mov
dec
test
dec
and
or
xchg
sbb
(bad)
jno
ja
shl
outs
jecxz
cld
sub
or
inc
mov
push
sbb
add
sub
jg
lea
inc
xor
jmp
adc
push
add
call
inc
inc
and
dec
push
lea
pop
pop
and
add
inc
sbb
outs
mov
cmp
jo
stos
aas
dec
inc
std
imul
inc
xor
pop
repz
xchg
pop
pop
sbb
fild
getsec
(bad)
pop
sbb
cwde
or
push
aaa
inc
mov
dec
(bad)
loope
push
or
call
jbe
jmp
pop
jns
jno
mov
push
cld
popa
or
inc
adc
push
jl
jg
cmp
sbb
add
js
(bad)
jmp
inc
xchg
add
and
fsub
cmps
dec
adc
hlt
push
push
dec
loopne
mov
ret
mov
loopne
mov
or
fist
inc
cs
not
add
lods
sbb
inc
inc
pusha
dec
cmp
push
mov
aas
cld
adc
sbb
bound
push
dec
push
test
sub
lea
in
inc
or
cmps
mov
daa
test
dec
das
push
push
sub
std
pop
dec
leave
mov
cmp
jl
ret
mov
push
and
fs
or
sbb
xor
mov
xchg
dec
call
in
in
jge
mov
in
adc
mov
fcom
mov
xchg
inc
and
adc
fisub
pop
cs
jns
mov
xchg
popa
ret
or
(bad)
fadd
and
mov
imul
jno
push
and
pop
mov
std
jge
mov
iret
pop
(bad)
jmp
add
pop
sub
out
bound
dec
sbb
outs
add
add
adc
js
inc
data16
add
out
inc
push
mov
ror
outs
add
adc
(bad)
lods
pop
retf
sar
sbb
mov
push
jae
popa
and
pop
fwait
jae
sbb
add
inc
dec
iret
je
xchg
mul
loope
(bad)
div
xor
xor
xor
xor
sbb
sbb
inc
sbb
dec
faddp
adc
addr16
push
jnp
mov
jae
(bad)
dec
(bad)
fiadd
sbb
xchg
push
mov
pop
hlt
add
fs
sbb
add
fistp
xor
xlat
arpl
fist
ins
and
sub
pop
scas
inc
add
inc
shr
cmp
lahf
(bad)
push
rcr
xlat
sbb
loope
jecxz
mov
pop
pusha
push
in
adc
out
lock
add
cmp
bound
push
pusha
adc
pop
sub
mov
(bad)
aas
outs
pusha
add
add
aas
clc
aas
xor
push
aas
lods
sahf
or
jb
fadd
adc
not
xlat
mov
sar
add
xor
sti
xchg
movs
add
aaa
adc
xchg
xor
xor
sbb
mov
ss
add
inc
clc
dec
ret
jmp
pop
add
push
fwait
test
mov
sar
mov
(bad)
or
retf
or
jp
and
ret
add
clc
push
xchg
call
data16
ja
das
pop
cdq
push
loope
and
les
sbb
mov
outs
xor
xchg
addr16
xchg
dec
push
sbb
fs
xor
or
fs
adc
je
iret
bound
or
cmp
jl
and
cmp
(bad)
sbb
aaa
mov
mov
nop
in
push
jge
fcom
mov
arpl
inc
cwde
xchg
xchg
imul
xor
daa
sbb
fs
jmp
sbb
xor
adc
sbb
pop
jmp
push
fwait
push
in
xchg
sbb
jmp
mov
xlat
xchg
fsubr
mov
xchg
dec
mov
pop
daa
xchg
pop
stos
sbb
test
mov
push
dec
ins
pop
fwait
and
loopne
scas
rcl
adc
ins
jle
xor
push
inc
fmul
jmp
idiv
shr
(bad)
add
xchg
jns
or
inc
mov
icebp
jns
inc
xor
mov
adc
sbb
inc
sbb
inc
and
test
jecxz
and
or
cmps
sub
and
xor
push
jmp
sbb
sbb
mov
sub
stos
mov
fs
dec
dec
pop
and
dec
or
ja
push
xor
xor
add
inc
lds
add
pop
or
enter
and
lahf
sub
pop
popf
jo
sti
cmp
or
push
scas
push
into
out
push
sahf
das
(bad)
mov
push
mov
das
or
call
sbb
jns
test
sahf
xchg
inc
mov
outs
pop
fdivr
sub
enter
pop
and
add
popa
fcomp
call
pop
cli
(bad)
push
mov
adc
in
cmp
dec
pop
fsub
nop
dec
cmp
mov
lds
jae
jl
pop
test
daa
in
or
or
movs
sahf
push
cmps
add
mov
or
or
dec
jne
nop
stc
push
int
in
fiadd
add
jae
mov
xchg
pushf
nop
pop
int3
ror
(bad)
lds
hlt
fcomip
inc
pop
inc
dec
dec
jb
(bad)
xor
loopne
movs
dec
inc
(bad)
push
test
jne
pop
adc
dec
out
sub
lods
mov
xor
mov
stos
lock
xchg
dec
jle
test
xchg
cmp
shl
jmp
(bad)
sbb
xor
dec
xchg
inc
and
adc
mov
call
adc
sbb
inc
adc
shr
lea
mov
addr16
test
inc
push
cmp
inc
adc
or
iret
push
dec
mov
scas
add
cmp
or
inc
sub
mov
push
cld
mov
mov
shr
mov
mov
dec
pop
jecxz
xchg
pop
fcomi
outs
or
xor
aas
nop
shl
adc
or
or
std
test
or
ins
push
mov
or
iret
or
sub
or
aam
push
xor
clc
mov
mov
lock
mov
inc
mov
ja
mov
and
xchg
pop
xchg
push
adc
ror
ret
out
adc
dec
rcr
cmc
scas
test
jo
popa
push
pushf
int
clc
call
adc
or
adc
add
jo
xchg
pusha
mov
cmc
or
icebp
lahf
push
or
jge
mov
jmp
daa
sub
ret
into
loopne
adc
xlat
xchg
xchg
sub
or
and
add
sbb
push
jnp
xor
push
sbb
mov
push
pop
adc
xor
iret
and
int3
nop
rcl
pushf
test
inc
mov
pop
loopne
test
dec
sbb
addr16
arpl
inc
(bad)
outs
adc
int3
fwait
daa
add
add
repnz
(bad)
movs
dec
push
pop
and
sbb
fst
in
inc
pop
pushf
pop
add
inc
xchg
or
push
cmp
and
ds
dec
dec
and
mov
shr
add
mov
sar
jmp
fsub
ds
xchg
jnp
inc
(bad)
mov
push
jo
pop
or
aam
adc
cli
(bad)
adc
adc
sbb
add
dec
shr
push
test
sbb
mov
pop
xchg
xor
pop
call
jno
arpl
mov
icebp
jo
push
dec
cld
push
ins
adc
jno
ja
adc
jmp
mov
out
mov
ds
sub
or
fsubrp
shl
cld
push
and
gs
das
jae
stos
and
or
sub
rcr
xor
ins
or
cmps
cmp
or
add
cmp
clc
dec
idiv
rcl
pop
add
call
inc
pop
and
sub
jo
and
and
out
das
push
in
push
jns
loopne
and
inc
fld
fstp
fwait
or
mov
clc
push
push
add
or
mov
jno
pop
and
mov
in
outs
add
shl
sub
das
(bad)
dec
mov
sub
lods
mov
in
push
lds
mov
fild
mov
push
and
and
clc
test
test
xchg
imul
mov
pushf
mov
jo
lahf
jo
fwait
cmp
loopne
in
clc
test
lea
out
stos
inc
mov
or
sbb
mov
stos
ret
cmp
add
stos
fsub
sub
xchg
je
or
add
cmp
add
aas
mov
leave
xchg
pop
adc
add
stos
out
cwde
sbb
mov
sub
aad
add
jmp
push
ins
fisttp
mov
sub
mov
add
mov
sbb
cmps
retf
adc
retf
fs
lods
ins
pop
jo
in
jo
add
xchg
stos
mov
addr16
cmp
pop
mov
xor
cmps
push
cmp
icebp
ins
pop
fcomip
lods
iret
js
push
inc
adc
pusha
jno
lock
mov
jle
adc
inc
sbb
call
sar
es
jmp
add
cmps
ror
sub
adc
jb
pushf
out
xchg
add
xchg
ins
and
add
pop
movs
ror
jb
ror
sub
fcomip
mov
or
fs
add
mov
add
scas
xor
sbb
mov
pop
int3
cmps
loope
sub
sbb
inc
nop
loopne
pop
int3
loope
loopne
test
or
fisub
call
dec
mov
add
add
imul
cld
inc
add
rcr
pop
lock
and
xor
scas
loopne
push
daa
push
repz
rol
inc
clc
stc
mov
mov
sets
push
pop
mov
and
xor
xor
lock
pop
adc
dec
dec
addr16
jle
xchg
lods
in
add
cmp
lea
lock
inc
rcl
sub
add
adc
in
xchg
mov
pop
clc
add
enter
fst
xor
mov
(bad)
dec
and
sub
ins
push
test
sub
jg
or
cdq
or
mov
add
inc
push
lahf
xor
adc
pushf
pop
mov
xor
arpl
mov
ret
and
nop
push
mov
iret
sub
mov
(bad)
jl
jo
into
hlt
(bad)
jne
jg
and
hlt
test
je
sub
mov
inc
sbb
add
ret
sbb
mov
or
lahf
in
mov
mov
test
sbb
and
and
repz
hlt
fimul
in
add
sub
js
ror
cmp
jle
jo
or
jnp
adc
aaa
adc
push
pop
push
add
cmps
sbb
fcom
pop
ret
push
sbb
push
sbb
cmp
cmp
inc
cmp
sbb
aad
loop
inc
loop
fisttp
addr16
mov
aaa
xchg
dec
sbb
fcom
scas
adc
xchg
push
sbb
fist
test
push
pop
and
jb
retf
xor
inc
retf
jmp
out
inc
and
push
push
shl
xchg
xchg
fisubr
mov
and
jbe
idiv
adc
and
call
push
sub
cmp
cmp
sub
imul
sbb
aas
fild
loopne
inc
push
mov
inc
sub
les
xchg
jmp
(bad)
imul
xor
clc
sbb
sbb
shl
push
clc
enter
mov
cli
mov
xor
adc
adc
sub
arpl
ror
mov
sub
pop
or
lock
sbb
sbb
add
add
and
sbb
lods
f2xm1
add
add
lock
or
ins
mov
iret
add
cmp
and
dec
mov
adc
iret
and
clc
mov
add
mov
and
les
pop
pop
and
and
push
mov
push
add
xchg
dec
outs
pop
add
cmp
les
pop
pop
retf
call
mov
cwde
or
pop
(bad)
mov
jg
mov
test
setne
ret
add
test
mov
clc
loopne
ss
cmp
cmp
fld
jp
pop
mov
cld
pop
ret
mov
pop
ret
fistp
pop
(bad)
cmovbe
in
mov
(bad)
movzx
iret
mov
(bad)
mov
cmp
cmc
dec
rcl
cmovle
or
cmp
je
pop
add
xor
test
cmp
cmp
add
dec
add
shr
push
shl
jl
cmp
mov
ds
inc
pop
jl
ret
aas
adc
enter
push
adc
adc
push
push
daa
adc
cld
push
inc
test
rcl
fsub
adc
or
push
xchg
xor
inc
aaa
adc
out
pop
dec
xlat
sub
sbb
cmp
push
in
sbb
xor
xchg
cmp
ins
and
enter
jmp
fadd
cdq
ins
je
ja
js
add
ins
add
pop
add
xor
xchg
or
jnp
sar
add
cmp
mov
jb
mov
xchg
jg
inc
or
xlat
adc
pop
cli
mov
or
pop
pop
pop
pop
add
push
and
cmp
and
xor
daa
lock
shr
repz
sub
rcr
loope
dec
mov
test
daa
pusha
add
jle
stos
(bad)
fmul
js
or
sbb
scas
ror
jno
wrmsr
ror
mov
rcl
int3
dec
test
add
rcr
dec
(bad)
jmp
rcl
jecxz
jmp
inc
or
test
cli
addr16
mov
dec
ret
adc
mov
cld
test
mov
and
jo
arpl
mov
div
ret
or
sub
add
add
pop
adc
mov
icebp
ret
adc
clc
adc
mov
cmp
adc
mov
test
push
mov
pop
movs
or
(bad)
test
inc
push
mov
fcmovb
mov
outs
daa
lds
mov
lds
movs
fisttp
and
push
jmp
scas
lds
cmp
xor
lds
or
add
mov
pop
fadd
sbb
scas
mov
mov
and
or
push
xor
mov
clc
add
pusha
rol
inc
(bad)
in
fadd
pop
add
mov
dec
add
jo
ret
jb
mov
xor
popa
or
rcr
icebp
cmp
or
push
sub
ins
pop
rcl
aam
repz
inc
and
test
add
xor
leave
fbstp
sub
xor
jbe
sbb
xor
add
int3
stos
shr
hlt
cmp
or
and
enter
retf
inc
ror
xchg
mov
and
ins
cmps
repz
push
sub
dec
adc
sub
adc
push
mov
sbb
movs
or
or
in
retf
retf
mov
push
int3
fistp
jbe
data16
ins
icebp
xor
sub
dec
pop
ret
lock
int3
pop
push
sbb
ja
push
mov
pop
retf
mov
cmp
xchg
int
call
popf
js
or
cmovb
cld
add
push
or
xchg
test
fbstp
ja
mov
pop
push
cmp
lods
or
dec
add
mov
in
or
mov
int
add
add
daa
dec
fs
or
mov
lock
mov
mov
mov
faddp
test
rcr
out
xor
mov
xor
test
inc
aaa
out
and
push
aaa
in
fiadd
fild
mov
push
cmp
or
pop
add
push
or
ror
in
xchg
add
scas
sbb
adc
imul
lea
xchg
in
and
out
pop
jmp
mov
mov
push
xor
mov
ins
mov
or
and
add
add
dec
inc
rcr
cld
jmp
ss
(bad)
or
addr16
pop
mov
push
sbb
scas
push
xor
dec
add
fs
jne
shl
inc
xchg
inc
sub
cdq
pop
fistp
dec
mov
or
jmp
pusha
hlt
sbb
add
les
lock
pop
mov
out
mov
and
addr16
pop
sub
pop
fbld
loope
cmp
imul
addr16
imul
and
sub
inc
adc
sbb
or
daa
arpl
or
jns
dec
or
(bad)
inc
cwde
cmp
push
adc
cmp
push
jl
dec
and
loop
xor
jmp
sbb
sbb
inc
jo
fnstsw
sahf
ja
sbb
cmp
jmp
lods
outs
xchg
jb
add
rol
(bad)
(bad)
fadd
mov
outs
cmp
or
jle
rcr
jl
nop
test
bnd
push
ja
mov
and
ins
jb
rcr
adc
jl
add
mov
add
or
or
dec
scas
jl
fsub
fst
dec
pusha
add
cwde
scas
(bad)
fsubr
(bad)
jge
xor
scas
fucomip
mov
jb
out
lock
or
jae
movzx
cmps
sbb
mov
push
(bad)
and
mov
add
stc
adc
daa
pop
cld
(bad)
push
inc
in
ret
xlat
cmp
rol
push
mul
inc
cmps
fild
lea
mov
popa
iret
pop
push
or
test
mov
sbb
jl
jmp
add
push
pop
pop
pop
ret
add
and
add
add
iret
test
push
sbb
fimul
lds
push
ret
scas
pop
nop
push
fld
aaa
fcomp
cmp
cld
(bad)
sbb
pop
sbb
iret
les
iret
nop
pop
dec
or
jns
add
es
and
mov
scas
jb
out
mov
mov
nop
movsx
xchg
or
daa
lods
mov
test
lods
enter
sbb
xchg
push
mov
movzx
and
xlat
and
and
inc
or
and
xchg
or
adc
mov
inc
nop
out
adc
jg
add
aaa
popa
and
call
fiadd
addr16
jne
mov
jmp
jecxz
fld
xor
shl
push
rol
push
xlat
sub
add
pop
in
pop
push
mov
lahf
pop
adc
and
xlat
lahf
sbb
xchg
outs
xchg
aaa
call
loopne
mov
daa
cmp
ja
cdq
gs
adc
je
push
push
mov
lahf
or
fst
enter
push
push
push
ror
push
mov
(bad)
jl
lods
sbb
(bad)
jmp
dec
xor
cmp
or
pop
sub
mov
aas
cmp
cdq
(bad)
mov
inc
jb
fistp
fdiv
adc
fbstp
adc
jne
hlt
jns
sub
sub
das
sbb
sbb
mov
adc
adc
add
pop
adc
dec
xlat
push
ret
pop
and
dec
xor
add
rol
mov
jbe
dec
shl
push
add
or
ret
loopne
int
mov
dec
das
xchg
xchg
fild
fcomp
pop
ret
push
add
sub
adc
and
or
push
jg
push
cs
add
rdtsc
adc
ins
or
cmp
lock
add
sub
dec
or
repnz
ins
daa
ins
mov
xchg
adc
add
ja
mov
add
or
ins
and
or
xstore-rng
cmps
sbb
lds
xchg
lods
mov
ss
or
lea
push
or
inc
dec
sub
cmps
sub
adc
test
adc
inc
and
jecxz
dec
(bad)
jbe
pop
push
cmovs
jg
test
(bad)
xor
ret
pop
cmps
and
inc
jl
jmp
jbe
add
inc
cmp
push
sbb
fbld
fmul
mov
scas
fild
shl
out
hlt
push
add
mov
sub
and
jmp
out
mov
ins
sbb
and
sub
jo
lods
dec
lahf
test
mov
test
bound
xchg
(bad)
popa
inc
rol
inc
fcomp
stos
or
adc
loopne
jg
add
ins
add
mov
xor
pop
ret
test
sub
ja
rol
aad
das
mov
add
addr16
and
and
enter
push
push
repz
and
(bad)
adc
inc
test
jecxz
add
inc
mov
push
add
jmp
clc
fld
aaa
inc
inc
xchg
add
pop
mov
arpl
and
clc
fnstsw
psubusw
sbb
add
adc
subps
add
jne
pop
adc
pop
clc
pop
clc
mov
ins
loopne
push
shr
cmp
jns
xchg
add
test
inc
cmp
inc
dec
adc
xlat
outs
sub
aaa
add
(bad)
stc
aaa
add
les
push
push
pusha
les
dec
xchg
enter
pop
xchg
push
out
xor
dec
aaa
outs
add
push
aas
xchg
pusha
stos
in
pop
xchg
ja
adc
and
in
push
push
pop
dec
call
sub
mov
xor
pusha
cmp
inc
sbb
movs
bound
cmp
xchg
push
sub
sbb
xor
or
pop
sub
mov
push
pop
inc
loope
xchg
pand
shl
jne
sbb
or
jbe
dec
stos
call
sbb
sbb
iret
call
pop
cmp
fsub
xchg
add
xchg
jae
or
mov
cmp
mov
call
in
cmp
out
not
jne
(bad)
and
fcmovu
and
je
aas
inc
and
pop
pop
cmp
test
pop
jp
xchg
aas
fadd
mov
add
mov
lea
mov
sbb
jo
sbb
pop
ret
or
(bad)
push
int3
dec
dec
leave
rol
pop
inc
xchg
dec
hlt
xor
add
mov
push
stc
loope
nop
stos
dec
jmp
test
xchg
xor
push
stos
pusha
and
and
nop
stc
ret
pop
mov
xor
dec
iret
daa
stos
push
push
sub
sbb
inc
adc
or
stos
test
inc
cmp
mov
pop
ret
jge
ins
aad
adc
nop
shl
lock
dec
cdq
push
xor
push
aas
adc
push
ficomp
enter
in
in
mov
imul
xchg
lods
sub
(bad)
dec
jle
cmp
les
or
dec
scas
sbb
cmp
or
lock
cmc
mov
bnd
ins
pusha
xchg
add
or
jl
mov
jge
sbb
add
(bad)
mov
pop
push
xchg
xchg
mov
mov
jnp
cmps
pop
test
pop
sbb
push
xchg
fidivr
iret
push
add
lods
int
dec
xor
and
dec
sbb
pop
or
cmps
add
jo
jp
mov
inc
sti
inc
and
and
inc
push
inc
test
daa
cmp
sub
nop/reserved
mov
loopne
sbb
inc
xchg
stos
jo
push
inc
(bad)
cmp
(bad)
add
and
jo
stos
sbb
add
outs
shl
das
lea
sub
repnz
pusha
sbb
popa
and
add
or
aam
pop
add
xchg
adc
pop
pop
sub
add
ins
push
(bad)
and
imul
outs
pop
ret
test
imul
jg
sub
ins
je
lahf
xor
lea
pusha
xor
nop
adc
dec
jae
fist
adc
mov
dec
cmp
push
das
cmp
lahf
mov
inc
adc
add
sbb
iret
cli
mov
or
jae
out
loope
inc
pop
add
pop
inc
fmul
scas
inc
xchg
fadd
fs
add
mov
fsub
aam
fwait
gs
inc
cmps
mov
jge
loope
pusha
cmp
sbb
repnz
mov
mov
and
addr16
adc
mov
add
fstp
jge
mov
rol
inc
cmp
shl
and
jo
enter
inc
nop
or
jg
push
jle
push
movs
sub
int3
sub
and
(bad)
cmp
dec
aaa
push
enter
cmp
movs
imul
sbb
and
mov
fdivr
inc
xor
jg
mov
or
test
aas
outs
fdiv
les
fcomp
pop
fcom
cmp
mov
hlt
movs
or
sar
cmp
ret
mov
(bad)
push
daa
pusha
sbb
add
jo
std
adc
mov
mov
push
push
add
aas
mov
sbb
xchg
or
nop
cmps
fadd
rol
sub
inc
cmp
mov
pop
inc
mov
inc
dec
scas
pusha
pop
xor
or
aaa
and
nop
nop
bound
and
js
stos
dec
ret
xchg
add
mov
mov
out
outs
daa
mov
add
scas
fsub
or
push
pusha
mov
or
call
and
mov
jmp
clc
ja
and
or
add
and
popa
mov
push
xor
je
pop
pushf
je
nop
mov
das
js
ins
mov
seta
rcr
or
(bad)
fimul
adc
ret
pop
outs
mov
(bad)
inc
pusha
loopne
scas
jmp
pop
call
bound
push
mov
mov
je
inc
in
(bad)
mov
dec
add
dec
push
jne
jb
sub
aaa
fadd
push
xchg
push
mov
pop
les
ins
mov
jl
inc
sti
and
cmp
jne
and
add
dec
or
or
mov
repz
mov
dec
and
call
cmc
shr
and
sbb
or
shl
rol
les
fs
adc
ret
inc
push
push
lods
add
mov
mov
pop
mov
add
adc
jmp
xchg
frstor
jns
xor
(bad)
repnz
or
and
or
je
inc
mov
jo
inc
aaa
inc
movs
push
and
sbb
test
adc
fsubr
inc
(bad)
push
pop
sub
nop
push
adc
adc
push
sbb
inc
jmp
popa
in
inc
xchg
push
xor
dec
jle
add
dec
mov
sbb
pop
aas
out
push
inc
dec
hlt
or
mov
shl
add
xor
cld
pop
test
cmp
aaa
mov
stos
ins
inc
out
jmp
inc
inc
aas
cmp
xor
adc
fs
jmp
sbb
inc
(bad)
aaa
or
pop
ret
or
sbb
lock
mov
cmp
adc
pop
out
inc
add
adc
cmp
inc
pcmpgtd
or
loop
(bad)
(bad)
xor
adc
icebp
gs
shl
outs
mov
les
push
and
dec
add
icebp
xor
push
out
out
push
push
mov
jno
jae
dec
add
rcr
out
lock
out
push
dec
mov
int
clc
dec
inc
dec
fild
test
mov
clc
mov
rcr
or
pop
push
cwde
or
push
or
(bad)
adc
jge
add
mov
add
adc
pop
or
fmul
into
test
in
bound
test
add
dec
inc
hlt
pop
daa
sbb
shr
xor
jae
loop
mov
pop
pop
jo
js
dec
mov
inc
sbb
maskmovq
test
sub
pushf
adc
rcl
jne
pop
pop
jl
jne
and
jmp
or
bound
addr16
js
loope
gs
sbb
(bad)
imul
adc
pop
jg
dec
or
lea
mov
cmps
(bad)
or
lock
neg
jmp
das
adc
mov
sub
lock
lock
pop
dec
cmp
or
inc
mov
out
pop
ins
pusha
xor
int3
mov
test
add
adc
mov
outs
mov
or
mov
push
add
iret
outs
add
stos
and
xchg
ss
inc
add
rol
push
cmp
imul
add
bound
sub
cmp
jge
enter
add
mov
ds
mov
adc
iret
mov
mov
test
aam
pop
aad
(bad)
sbb
adc
or
jno
scas
sub
mov
add
and
jns
push
cld
sub
ror
rcl
outs
mov
and
and
xor
sub
or
lea
or
rcl
sub
shr
add
xchg
aad
adc
aaa
sbb
add
sti
mov
cmp
add
or
inc
mov
or
add
dec
ror
xchg
repz
xchg
cs
xchg
and
(bad)
pop
xchg
pop
push
xchg
sub
mov
add
shl
aaa
fadd
and
push
test
mov
xchg
lods
pop
adc
push
es
pop
add
add
inc
cmp
sbb
add
outs
push
outs
add
add
jae
or
or
fiadd
iret
and
xor
inc
hlt
xor
mov
sbb
sbb
imul
dec
and
jo
xor
adc
mov
stos
xor
jne
call
mul
call
sbb
dec
daa
loopne
and
and
je
shl
xor
into
inc
or
dec
sbb
or
gs
add
pop
xchg
es
xor
mov
push
push
loope
ds
frstor
icebp
aam
daa
mov
adc
and
adc
lea
add
pop
mov
mov
push
movs
in
add
rol
add
lahf
adc
jns
out
add
mov
xchg
enter
call
sbb
mov
jmp
sar
adc
aam
dec
add
test
or
add
jns
pop
and
mov
dec
add
lock
loopne
fcomp
push
in
xor
pop
call
inc
sbb
call
push
int
mov
pop
sub
mov
ds
je
jbe
cmp
lds
aam
fld
jo
and
fld
stc
sbb
xchg
mov
inc
mov
add
enter
sti
and
push
arpl
mov
adc
mov
jbe
fld
ja
aam
jmp
ins
cdq
pop
pop
aas
push
adc
xor
pop
xlat
xor
and
xchg
mov
test
push
daa
loopne
aaa
jle
adc
div
jb
jmp
pop
and
and
inc
loopne
push
mov
addr16
sub
jae
je
and
pop
ds
push
bound
or
add
push
sub
fbld
pop
mov
xor
mov
retf
push
jp
dec
daa
and
add
das
and
stos
popf
pop
xchg
xor
inc
test
xor
mov
mov
sbb
jmp
rcr
mov
ja
sbb
lea
loope
jo
cld
clc
push
lea
cmp
retf
mov
dec
test
jl
inc
xchg
mov
mov
mov
mov
cli
xchg
jne
pop
mov
or
loope
je
add
es
xchg
stc
cmp
push
pop
fs
jo
out
mov
mov
adc
pop
rol
cmp
add
inc
inc
sub
add
fiadd
sbb
addr16
pop
push
add
out
lods
dec
xor
(bad)
in
lds
adc
mov
adc
add
jge
lea
lahf
pop
in
test
mov
sbb
xor
pop
inc
ins
push
(bad)
pop
inc
aas
pop
or
and
dec
aaa
pop
adc
aas
push
mov
add
imul
mov
jg
sbb
mov
mov
adc
adc
ins
adc
das
sub
daa
or
pop
cwde
mov
push
pop
daa
cld
push
inc
es
inc
add
sti
adc
jl
xlat
dec
ins
ret
nop
xor
push
xor
lea
mov
ja
or
bound
cmp
repnz
sbb
test
push
in
rcr
or
dec
and
and
test
inc
xor
aas
jecxz
mov
cli
jg
out
loopne
push
jae
js
outs
push
jmp
test
xor
inc
xlat
adc
adc
jae
and
jno
js
es
dec
js
retf
sub
outs
push
popa
pop
mul
dec
(bad)
sub
mov
popa
mov
jb
xlat
adc
adc
pop
popa
and
cmp
nop
mov
(bad)
xor
pop
add
cmps
jg
sbb
mov
inc
data16
lods
sub
xlat
movs
sar
xor
aaa
mov
adc
xlat
sbb
hlt
ss
data16
add
jg
scas
js
dec
in
test
jl
movs
ret
nop
outs
sbb
add
jl
xlat
sbb
xlat
nop
pusha
xchg
mov
xlat
outs
add
rol
cmp
cmps
pop
sub
lds
and
mov
xchg
and
cmp
sub
daa
mov
imul
sbb
sbb
mov
or
jge
xor
in
sahf
jo
or
or
mov
aad
sub
dec
dec
inc
adc
cmp
adc
shl
pop
es
(bad)
mov
or
je
rcl
movs
mov
inc
add
or
mov
xchg
xor
fistp
inc
pop
push
test
push
ret
or
push
cmp
sub
cld
and
aam
xchg
in
inc
xchg
loope
or
dec
test
xchg
push
fst
pop
sbb
push
pop
inc
inc
sub
sbb
ja
mov
sub
sbb
lock
je
xchg
xchg
adc
xchg
cmp
add
stos
and
enter
mov
sbb
push
(bad)
arpl
into
mov
mov
inc
sub
or
lahf
out
add
adc
or
gs
xlat
mov
jnp
or
jp
pusha
adc
or
mov
dec
sti
push
in
adc
xchg
mov
scas
adc
adc
mov
mov
sahf
xchg
dec
mov
mov
xor
inc
or
push
add
sar
push
cmp
mov
cmps
fild
fs
sbb
rol
or
and
add
sub
mov
les
sub
idiv
xchg
pop
imul
sub
pop
add
sbb
or
leave
push
fs
fadd
les
pop
adc
nop
and
data16
or
mov
jbe
xchg
imul
and
das
aas
pop
jg
loope
adc
sbb
xor
jmp
cmp
and
push
adc
or
adc
out
cwde
jle
add
(bad)
cmp
and
add
add
ror
jg
lock
dec
xor
cmp
dec
add
js
loop
test
(bad)
adc
rol
mov
test
or
mov
mov
mov
mov
sub
inc
inc
add
or
cmps
lock
sbb
arpl
mov
and
movs
mov
jb
jo
sub
test
loop
adc
(bad)
lods
fnstcw
test
pop
adc
add
mov
jecxz
pop
lock
(bad)
ret
fld
test
les
push
repnz
call
jecxz
sbb
xor
add
and
nop
arpl
ffreep
pop
pop
jecxz
inc
push
push
arpl
pandn
shr
lds
stos
push
adc
int3
or
push
frstor
adc
pop
mov
in
jo
xor
call
ror
mov
and
sub
div
add
mov
cmp
xchg
mov
mov
out
or
or
rol
outs
jne
xor
dec
sbb
push
fisttp
shr
jbe
cmp
ins
dec
mov
sub
xchg
mov
sbb
inc
fld
push
or
sbb
sbb
mov
pop
xchg
mov
or
push
cmp
mov
dec
jg
js
add
test
jne
or
push
dec
mov
lock
mov
jge
inc
sub
loopne
in
cld
xchg
jo
retf
call
data16
ja
stc
or
fdiv
add
sbb
pop
call
jo
bound
movs
pop
jo
pop
pop
out
and
sub
icebp
test
add
(bad)
pusha
movs
xor
scas
test
lock
push
inc
push
pop
ins
jmp
inc
loope
push
push
jb
out
add
mov
xlat
(bad)
in
add
sub
mov
jl
es
mov
or
cmps
push
popa
loope
add
push
push
push
xchg
arpl
call
mov
or
inc
inc
sub
(bad)
leave
sbb
fistp
mov
push
(bad)
arpl
fdiv
add
js
push
cmp
test
das
add
pop
fcom
movs
sub
ror
movzx
sub
mov
xor
sub
daa
mov
js
sar
aas
outs
or
and
mov
and
dec
push
mov
adc
pushf
push
out
mov
nop
add
ins
and
inc
cs
jg
or
nop
dec
dec
sbb
mov
jge
pop
push
pop
dec
jp
jae
jge
cwde
mov
or
sbb
xchg
pop
lds
addr16
and
adc
or
addr16
addr16
sbb
xor
mov
dec
cmp
adc
rcr
dec
mov
mov
pop
movs
sub
xchg
pushf
and
(bad)
sbb
add
or
xor
fidivr
adc
and
and
and
cmp
inc
pop
mov
fimul
jb
sub
sub
add
je
mov
shl
cmp
cmp
and
dec
or
ds
in
cmp
or
jecxz
fist
adc
mov
and
and
sub
rcr
out
push
ficom
lea
sub
inc
call
push
jne
out
(bad)
adc
xchg
mov
test
cld
rcl
inc
pusha
loope
arpl
test
in
xchg
push
mov
pushf
or
add
leave
int
addr16
and
es
add
mov
shl
push
cmp
and
das
jmp
shl
jl
and
and
adc
sbb
(bad)
push
sbb
xlat
shl
sar
xor
add
aam
call
lock
mov
or
jmp
les
lahf
popa
ret
dec
jnp
ss
icebp
sbb
ret
enter
and
adc
sar
add
or
mov
sub
jo
push
hlt
sti
cmp
jg
bound
stos
mov
inc
hlt
mov
test
and
push
add
mov
pop
pop
(bad)
push
adc
fistp
mov
adc
or
lock
test
inc
xor
dec
inc
mov
outs
es
sbb
fs
out
mov
jg
fcom
popf
shl
jmp
pop
repnz
cmp
in
ss
adc
ret
cld
pop
add
inc
push
aas
mov
mov
pop
sbb
xchg
and
(bad)
ror
retf
adc
adc
aas
daa
sub
adc
outs
or
mov
fbld
and
pop
mov
(bad)
jmp
and
fdiv
inc
fsubr
push
adc
xor
xor
jb
sbb
push
inc
and
movs
clc
mov
das
ret
inc
test
fdivr
ins
push
retf
push
pop
pop
dec
add
add
sbb
push
scas
dec
dec
imul
and
ja
lock
mov
add
pop
jae
clc
pop
inc
adc
adc
sub
xchg
jp
scas
clc
cmp
out
or
fisttp
sbb
mov
mov
retf
inc
push
fild
mov
in
inc
test
fmul
vmread
jg
add
sbb
cwde
das
test
test
js
mov
lds
sbb
ret
jg
mov
push
jecxz
push
ss
lods
xchg
js
int3
imul
add
inc
or
pop
daa
popa
loope
movs
pop
sbb
call
dec
inc
out
shl
jecxz
add
sub
mov
push
popf
or
shl
popa
mov
(bad)
lahf
mov
imul
cmps
xor
adc
shl
loope
mov
or
jcxz
mov
mov
or
dec
jne
std
sub
add
push
das
push
adc
sbb
out
cwde
jno
cmp
mov
sbb
clc
dec
push
xor
add
sbb
sbb
arpl
xor
ds
sbb
loop
cmc
out
ret
enter
push
fadd
nop
inc
stos
iret
push
pop
push
sbb
sbb
rol
mov
test
ret
sbb
lea
scas
and
pop
shr
cmp
arpl
pop
dec
mov
outs
mov
adc
aas
jp
sub
mov
sbb
pop
pushf
retf
xchg
mov
cmps
add
inc
adc
mov
pop
inc
add
or
(bad)
cmp
xlat
out
(bad)
cmp
movs
jo
rcl
mov
ret
popa
inc
xchg
sbb
arpl
push
loop
nop
pop
in
push
cmc
sbb
pop
push
(bad)
cld
add
cmp
sti
push
fadd
xor
je
or
cmp
inc
add
out
adc
cld
jae
sub
push
aaa
sub
ret
dec
cmp
inc
test
test
popf
movs
sub
push
or
and
inc
std
sub
or
cmp
cwde
xor
add
test
sbb
hlt
test
(bad)
pop
cmp
xchg
cmps
lods
es
leave
std
std
pushf
and
sbb
or
pop
add
pop
cmp
sbb
and
add
mov
dec
or
or
pushf
and
lahf
push
test
pop
shl
shr
and
xchg
add
or
pop
push
push
rcl
inc
loopne
xchg
dec
(bad)
dec
(bad)
jl
mul
lock
sbb
adc
ja
inc
jl
sbb
and
adc
adc
call
fisttp
inc
inc
jl
jge
fldenv
push
push
addr16
adc
popa
lahf
and
add
adc
je
mov
and
adc
in
fld
into
daa
and
in
inc
mov
sub
mov
and
mov
mov
call
jecxz
fbstp
jne
fucomip
lsl
test
sub
movs
inc
jg
and
and
cmp
push
xchg
jle
popf
fidivr
test
jne
and
mov
or
nop
or
out
jo
in
nop
dec
in
shl
ret
fst
ds
xor
or
sub
outs
xchg
mov
xor
dec
jae
cmp
retf
add
je
xchg
clc
push
shl
adc
(bad)
or
pop
add
ret
lock
mov
pop
test
out
and
das
xor
les
nop
mov
mov
sub
(bad)
daa
sbb
cwde
and
adc
je
pop
xchg
pusha
mov
in
(bad)
mov
rcl
or
add
nop
mov
mov
cmp
test
aaa
mov
push
popa
add
popa
xor
xchg
adc
outs
xor
pop
adc
xadd
xor
jg
push
test
aaa
adc
inc
daa
inc
scas
sahf
push
ja
call
jle
mov
or
(bad)
into
xchg
pop
jle
xchg
loopne
push
pusha
pop
(bad)
in
cmp
lea
push
push
mov
cmp
sub
mov
fadd
xor
loop
ins
jg
jmp
mov
sub
jp
retf
sbb
jmp
iret
pop
inc
sub
dec
cmp
jmp
jbe
sub
bound
add
push
push
and
inc
sbb
inc
and
cmp
and
dec
lds
push
jg
sbb
fstp
mov
ds
inc
dec
lock
daa
fdiv
or
xor
and
ret
nop
cmp
iret
push
clc
add
loopne
and
pop
push
dec
inc
(bad)
sbb
push
or
jg
loopne
ja
(bad)
inc
and
lahf
shl
push
xor
inc
pop
dec
dec
repnz
outs
and
sub
das
loopne
ins
es
scas
(bad)
xchg
jmp
add
and
push
(bad)
imul
jle
sub
or
pop
ror
(bad)
out
push
adc
jne
push
or
test
lahf
clc
loopne
popf
add
daa
sub
adc
add
inc
adc
lahf
aaa
pop
add
cmps
aaa
add
(bad)
xrelease
adc
es
and
mov
sub
out
push
xor
add
fist
mov
test
cmp
shl
test
add
in
xlat
cmp
add
dec
inc
and
add
mov
add
push
mov
das
test
xchg
xor
loopne
ret
cmp
bound
jbe
sbb
or
add
mov
sub
push
movs
push
neg
sub
lea
xlat
in
push
push
push
mov
mov
jns
pop
add
dec
jne
aaa
adc
add
pop
std
rol
mov
fadd
sub
push
jecxz
sub
add
stos
xchg
sub
jg
cmp
add
dec
xchg
xchg
sbb
sub
sub
push
xor
fst
add
dec
mov
mov
mov
jns
add
(bad)
lahf
sub
das
xor
cmp
test
ins
pop
ja
and
dec
pop
push
sbb
sbb
push
mov
push
in
xor
outs
cmp
sti
cmp
dec
inc
add
mov
mov
add
pop
pop
push
push
mov
and
push
dec
adc
sbb
ins
or
or
dec
ret
call
mov
lds
sbb
add
scas
ret
ds
inc
and
mov
pushf
(bad)
clc
xchg
sub
push
es
rol
daa
scas
dec
xchg
ret
les
sub
cmps
and
je
cmp
mov
and
push
ins
sub
push
pop
hlt
inc
add
fwait
xchg
sbb
sub
loop
cmp
sub
fimul
inc
push
nop
fmul
xchg
dec
jne
add
mov
nop
push
xchg
jne
ror
sbb
mov
mov
clc
push
dec
lock
add
cmp
sub
mov
jle
adc
bound
push
aas
inc
pop
mov
retf
push
and
mov
scas
push
arpl
or
adc
gs
inc
xchg
movs
push
lea
pop
inc
int3
pop
sub
movs
mov
mov
xchg
add
leave
pop
mov
adc
inc
pop
adc
iret
and
out
ins
cmovge
lods
sbb
add
aas
xor
outs
scas
inc
mov
jge
pop
sbb
inc
xchg
outs
inc
jbe
cmp
cs
pop
fs
pop
rol
push
or
jmp
cmp
pusha
cmp
call
punpcklwd
jns
sub
or
add
xchg
inc
pop
xchg
ror
mov
js
icebp
mov
inc
pop
inc
push
push
repnz
push
mov
retf
adc
mov
ret
scas
rol
inc
cwde
ss
push
mov
pop
xchg
dec
cmp
adc
inc
ret
movs
pop
dec
xor
push
pop
xchg
dec
imul
pop
inc
pop
daa
mov
push
adc
cmp
jno
cmp
inc
cmp
rol
xchg
xchg
xchg
fld
movlps
leave
enter
loope
dec
jge
in
leave
mov
xor
jb
repnz
add
bound
jb
xchg
cmp
sbb
mov
aas
in
loop
or
(bad)
mov
sub
add
dec
fs
mov
add
sub
adc
aaa
int
loopne
fs
mov
and
pop
daa
icebp
pop
push
or
xor
aaa
sbb
jne
sub
dec
push
push
jne
rcl
sar
nop
xor
ins
add
adc
xchg
inc
sbb
gs
adc
xchg
movs
pop
sub
pop
mov
mov
sti
mov
adc
cmp
mov
jne
xchg
nop
sub
jne
or
adc
imul
mov
mov
add
add
mov
add
sbb
popf
lahf
jg
mov
pop
cmp
mov
dec
mov
retf
shl
inc
inc
pop
mov
dec
mov
imul
sub
fwait
adc
sub
jecxz
jno
sbb
jge
mov
and
jns
add
mov
dec
mov
push
xchg
pop
cmp
dec
push
sub
daa
sbb
mov
aad
dec
dec
mov
test
gs
dec
sub
push
mov
or
int
add
cmp
mov
push
add
add
and
scas
cs
xchg
inc
in
mov
jo
in
sub
inc
jmp
add
inc
pushf
movs
push
xor
pop
les
adc
fsub
es
(bad)
bts
sub
mov
or
dec
das
imul
and
loope
jecxz
inc
rol
jbe
sbb
mov
push
pop
pop
cmp
les
lods
pop
mov
push
lods
xchg
push
test
push
pop
addr16
dec
pop
loop
mov
js
push
rcl
call
pop
mov
add
push
aas
pop
xor
push
add
call
das
and
sub
in
mov
aas
xlat
movs
push
into
mov
mov
retf
push
das
ss
adc
adc
xor
call
and
xlat
push
adc
fmul
push
sub
dec
mov
pop
leave
ins
mov
pop
push
or
or
(bad)
sbb
dec
vmwrite
jb
xchg
rcl
push
cmp
cmp
sub
cli
sahf
pushf
mov
push
jp
add
dec
dec
inc
dec
jnp
iret
daa
daa
and
pop
cmp
popf
mov
daa
daa
sar
pop
aas
mov
(bad)
(bad)
stc
pop
mov
addr16
loope
dec
dec
stos
push
cmp
es
(bad)
lods
pop
mov
inc
dec
enter
dec
(bad)
sub
or
xchg
push
or
inc
xor
add
(bad)
adc
jg
add
sbb
pusha
add
aam
inc
(bad)
adc
mov
inc
xchg
rol
xor
(bad)
mov
xor
and
rcr
inc
test
in
jb
pop
xchg
cmp
lods
pop
mov
add
imul
inc
or
test
mov
or
inc
xor
test
pop
push
repnz
pop
stos
inc
test
sbb
push
stos
jae
lods
pop
shr
xchg
lods
pop
test
push
or
add
scas
sbb
mov
xchg
movs
pop
aam
sub
sub
popf
xor
push
add
aas
(bad)
scas
pop
ins
jns
push
mov
call
pop
push
mov
mov
(bad)
aad
inc
sahf
pop
cmc
pop
adc
xor
or
dec
or
sub
jmp
inc
add
cmp
mov
xor
and
icebp
(bad)
add
inc
fisttp
dec
jecxz
lock
shl
call
add
push
hlt
(bad)
mov
pushf
mov
int3
retf
mov
add
cmp
sbb
mul
pop
das
cmc
jns
(bad)
pop
pop
mov
je
xor
xor
int3
sub
mov
pusha
mov
push
sub
inc
mov
lea
push
pop
adc
cmp
bound
xchg
fdivr
aas
push
add
ds
add
cld
mov
pop
adc
sbb
or
jmp
or
test
mov
jo
leave
sub
arpl
test
dec
aam
popf
inc
push
add
je
or
aas
push
imul
call
test
inc
jne
jle
adc
add
add
inc
inc
inc
xor
cmovge
dec
add
and
cmps
repz
pop
ds
je
les
popa
cmps
test
xor
add
push
aam
data16
outs
popa
cmp
mov
push
cmps
adc
cdq
mov
mov
mov
rol
adc
mov
sbb
mov
mov
pop
daa
call
xchg
sub
popa
dec
stos
(bad)
mov
pop
or
popa
aad
inc
cmps
lock
(bad)
xlat
xor
arpl
test
ja
push
lods
push
mov
shl
int3
arpl
dec
fild
pop
fs
fsub
fs
mov
fs
scas
xor
lahf
aam
sbb
scas
rol
add
daa
push
cmp
and
fs
fmul
dec
cmp
cmp
or
leave
sub
dec
sbb
gs
adc
xor
pusha
cmp
pop
aad
fs
add
add
lock
xor
push
ror
movups
mov
stos
add
mov
pop
in
or
pop
ds
cmp
repz
push
push
pop
add
cld
jge
add
adc
inc
inc
push
inc
mov
and
sar
subps
push
jno
dec
fs
lsl
sub
add
xor
sbb
je
or
mov
adc
inc
jb
mov
add
addr16
movs
push
(bad)
gs
add
fs
inc
jmp
and
jae
dec
fild
shl
inc
sub
retf
or
(bad)
sbb
sub
add
shl
fs
jle
add
lds
xor
push
adc
adc
inc
jae
jb
inc
pop
and
push
int3
add
stos
test
cmp
loope
outs
mov
imul
push
push
mov
das
jmp
js
imul
into
jnp
mov
mov
sahf
cmps
and
push
sbb
push
les
daa
add
mov
fild
or
cmps
or
add
retf
adc
add
jnp
dec
mov
xor
jmp
or
jnp
adc
push
dec
and
or
sbb
or
adc
add
daa
mov
push
push
xor
repnz
jb
mov
pop
push
movs
nop
push
push
push
pop
mov
add
cmp
pop
inc
das
retf
jmp
and
lods
jmp
jno
xchg
or
pop
jo
pop
outs
dec
mul
inc
das
jl
out
adc
add
mov
scas
jmp
or
nop
mov
add
jbe
fisub
popf
loop
loopne
mov
mov
jae
imul
ins
cmovbe
jle
jnp
dec
jl
or
arpl
sar
xor
push
mov
dec
daa
mov
fcmovb
or
sub
xor
add
jno
pusha
mov
ror
mov
or
mov
fs
xchg
add
and
lock
sub
dec
pop
jmp
or
pop
or
out
push
xchg
pop
or
add
push
aam
xlat
adc
add
call
fstp
loope
mov
sbb
vpcmpgtd
push
push
outs
das
cmp
and
std
fdiv
push
nop
xchg
pop
sbb
jo
pushw
test
arpl
adc
unpcklps
add
xor
xchg
inc
mov
dec
mov
add
fld
or
dec
dec
jae
jb
icebp
push
push
inc
cmp
mov
push
je
cmp
cdq
push
sub
or
sub
xchg
pop
jle
outs
pop
bndldx
jae
(bad)
xchg
push
mov
orps
bswap
add
(bad)
sub
das
or
and
inc
loopne
pop
loop
and
arpl
js
es
adc
cdq
xor
xchg
retf
imul
inc
ins
jo
jns
dec
adc
pop
pop
mov
test
jo
outs
jb
dec
adc
iret
dec
in
add
call
das
pop
mov
inc
ins
push
jl
outs
push
xchg
bound
dec
add
lds
cmps
enter
jo
and
outs
vpcmov
pop
xor
mov
scas
cmp
push
movs
in
in
outs
adc
mov
sbb
sar
enter
add
sub
sbb
push
pop
movs
loope
add
lahf
test
pushf
push
mov
fucomip
stos
add
adc
fsub
or
jg
pop
jno
mov
outs
adc
cmp
add
or
aam
lods
call
or
clc
js
or
push
push
push
psllw
xor
mov
or
gs
mov
int
shr
pushf
xchg
jb
inc
js
sub
test
(bad)
jmp
push
cld
and
push
ror
jae
inc
jae
rcr
rol
mov
dec
or
or
mov
and
and
mov
and
sbb
mov
and
xor
mov
ret
push
cli
jno
cs
xor
and
adc
ds
adc
lds
retf
aas
pop
jae
and
dec
jge
ins
imul
dec
push
or
add
or
mov
clc
(bad)
movs
cdq
pop
or
sbb
adc
or
push
lock
sub
je
pop
adc
push
jg
push
push
adc
mov
or
or
int
pop
and
adc
stos
out
je
cwde
jne
int3
cmp
or
bnd
jae
fwait
pop
cmc
cmp
fadd
cmp
push
jge
push
out
call
and
enter
jne
jne
hlt
mov
xor
cmp
cmp
cmp
loopne
bound
retf
pop
pop
push
or
movs
dec
popf
and
fld
jnp
adc
sbb
fbld
es
das
and
xchg
push
adc
aam
mov
pushf
pop
sahf
mov
lods
mov
fistp
inc
pushf
lahf
add
arpl
add
add
sbb
add
cli
shl
jbe
loopne
jle
or
aas
nop
data16
pop
jnp
push
dec
je
setb
pcmpeqd
psraw
js
cmp
rol
xor
js
dec
mov
push
add
cld
movs
fisttp
add
je
mov
std
pusha
js
add
xor
add
adc
fist
pushf
sub
pop
mov
push
pop
call
inc
push
lar
std
add
pushf
cmp
cmp
pop
push
dec
cmp
lahf
lds
repnz
xor
cmps
fsub
(bad)
mov
and
sub
mov
jbe
mov
cmp
or
clc
jp
or
cvtps2pd
dec
and
xchg
ins
mov
out
inc
add
or
xchg
bnd
fwait
push
xadd
xchg
and
jp
jp
pop
jp
jp
daa
in
popf
jp
jp
jne
(bad)
in
hlt
adc
sbb
push
inc
sub
or
mov
mov
jg
mov
je
adc
adc
hlt
jo
xor
cmp
jp
mov
cmp
hlt
jp
mov
pop
and
sub
sub
pop
cmp
pop
fwait
test
inc
cmp
mov
jl
sete
sbb
fwait
add
mov
xor
movs
xchg
or
jno
jnp
lock
and
daa
sub
jl
adc
call
bound
jg
mov
or
push
lahf
inc
sbb
iret
fwait
jmp
push
inc
les
add
retf
les
or
test
fisttp
movs
nop
fmul
mov
sbb
mov
adc
and
and
mov
dec
ja
dec
lds
or
jge
sub
das
pop
cmp
test
pop
add
push
enter
inc
adc
pop
call
push
jg
cmps
fistp
test
and
aaa
mov
and
imul
pop
or
mov
mov
jne
add
jle
in
adc
jg
out
in
dec
jns
stos
adc
dec
sahf
inc
rol
pushf
fmul
push
test
stos
loopne
adc
in
cmp
fcom
lahf
inc
cmp
test
scas
seto
idiv
or
sti
sub
pop
xor
ins
xchg
or
add
add
add
inc
inc
xor
xchg
mov
pop
sub
cs
mov
xor
sub
xchg
pop
js
sbb
jnp
loopne
add
ja
or
adc
ins
add
movs
mov
add
stos
nop
(bad)
mov
xor
cmps
or
push
clc
cmp
xchg
or
jl
sub
push
sbb
cdq
stos
pop
shl
mov
inc
gs
inc
sub
dec
push
add
mov
and
xor
add
neg
test
sub
push
or
sbb
xchg
inc
xchg
add
jb
bound
mov
dec
imul
add
cmps
pop
mov
cld
ffreep
mov
sub
mov
and
mov
shl
in
add
cmp
gs
sbb
pop
mov
add
(bad)
adc
mov
pop
push
jae
imul
ret
sub
and
inc
xor
pop
xchg
test
aas
ss
loopne
cmp
cmp
into
xor
sbb
cwde
mov
jge
sub
dec
retf
(bad)
or
mov
add
mov
xor
xor
add
jo
sub
cmp
stc
cwde
mov
retf
jmp
pop
dec
mov
mov
test
in
xchg
(bad)
fucomip
ret
inc
lods
dec
mov
adc
mov
dec
test
push
nop
and
test
jl
inc
jl
xor
lods
enter
loope
test
loopne
jmp
in
mov
dec
clc
test
mov
xchg
xchg
xchg
push
add
xchg
and
inc
and
pop
ds
int
mov
daa
xchg
adc
mov
ss
push
xchg
push
test
add
or
jo
lds
cmp
inc
mov
xchg
and
bound
pop
inc
es
cmp
push
mov
popf
call
mov
test
and
sub
dec
das
test
push
add
lock
push
adc
cmp
(bad)
or
ins
gs
ins
inc
sub
xor
outs
push
imul
mov
and
xchg
ins
inc
vmread
in
mov
mov
in
and
loopne
mov
pusha
int3
inc
test
xchg
mov
aas
jno
inc
cmps
inc
cld
add
lods
and
dec
ror
test
and
sbb
push
add
sbb
nop
or
or
cdq
daa
jmp
sbb
and
mov
pop
sub
cmp
or
loop
ret
mov
lea
ins
ss
adc
imul
cmp
adc
fs
adc
fcomp
dec
dec
sub
mov
inc
add
jnp
mov
push
add
push
icebp
and
shl
cmp
lahf
sub
or
fisub
lea
and
push
sub
mov
push
gs
dec
test
icebp
and
nop
(bad)
and
mov
dec
push
adc
xor
scas
jmp
mov
pop
or
test
inc
mov
mov
add
dec
sbb
sub
add
jno
iret
or
and
loopne
sub
mov
fdivr
ret
pushf
mov
mov
call
rcl
adc
xor
adc
addr16
push
mov
dec
or
adc
enter
adc
movs
or
rsm
and
mov
xor
add
mov
punpcklbw
add
mov
add
push
mov
stc
mov
pusha
xor
sub
fmul
test
mul
jo
jge
jg
out
pop
adc
(bad)
ja
xchg
loope
sahf
dec
ss
cmp
out
mov
pop
and
cmp
out
jne
push
sub
std
jl
add
mov
adc
sbb
sbb
jge
ror
rcl
push
or
jo
nop
pop
call
inc
mov
dec
test
std
fidivr
dec
jne
ja
mov
mov
mov
inc
jbe
mov
ficom
jmp
inc
aas
fwait
mov
add
adc
dec
jmp
(bad)
adc
je
adc
and
cmp
ss
push
jl
inc
xchg
push
xchg
outs
jl
jl
enter
(bad)
in
(bad)
xchg
pop
push
mov
push
xchg
out
adc
rcl
(bad)
call
and
pushf
popa
pop
dec
xchg
add
icebp
ret
in
add
xchg
cdq
stc
inc
push
cmp
fdivr
sar
data16
dec
adc
mov
inc
sub
xor
mov
imul
dec
scas
dec
in
push
bound
push
push
xchg
lahf
out
out
cmps
(bad)
cmp
sub
mov
or
mov
inc
add
sbb
push
adc
inc
add
sbb
sar
gs
add
add
and
add
push
sbb
xor
ficom
sbb
shr
or
pop
add
loope
xor
jmp
add
xor
loopne
das
sub
fcmovb
add
xor
pop
leave
int3
enter
or
adc
loope
shr
and
rol
test
add
mov
icebp
add
nop
and
mov
popa
jne
gs
push
jb
jl
xor
adc
int
or
add
clc
lock
pushf
push
ss
add
mov
mov
push
mov
mov
call
in
adc
add
mov
xor
adc
inc
enter
mov
and
pushf
mov
rol
test
sub
sbb
in
sub
aas
sub
(bad)
jmp
ret
loopne
or
or
(bad)
dec
iret
or
hlt
sub
sub
pop
sbb
daa
mov
imul
mov
and
add
xor
rcr
mov
leave
pop
xor
leave
or
add
and
mov
mov
lock
add
int3
mov
test
enter
or
repnz
add
and
jmp
xchg
xor
(bad)
seto
jecxz
sbb
xchg
adc
imul
add
test
add
in
or
mov
(bad)
mov
xchg
or
xor
push
jle
scas
add
inc
or
or
add
outs
gs
pop
dec
lods
retf
or
and
inc
add
rol
movs
adc
dec
mov
and
inc
adc
sbb
in
add
sbb
ja
inc
or
or
ja
jne
and
lar
mov
xor
cmp
lea
cmp
cmp
sub
ja
sbb
xor
test
inc
or
add
and
(bad)
push
or
inc
scas
cmp
cmp
push
push
ret
sub
cwde
fst
or
inc
cmp
int
call
lock
sbb
iret
push
push
pusha
sub
adc
out
xor
mov
lock
mov
jno
add
push
jnp
inc
or
push
shl
lea
pop
jnp
xor
test
(bad)
mov
dec
push
inc
fcomp
lods
inc
or
sub
xor
jmp
push
cli
mov
pop
xor
aaa
adc
pop
fadd
sbb
pop
scas
push
pusha
jo
jo
jecxz
pop
lahf
mov
js
mov
mov
cmp
stos
and
rol
fwait
mov
(bad)
pop
std
pop
scas
adc
push
je
add
loopne
inc
mov
imul
xor
push
and
xchg
xor
bnd
jmp
(bad)
mov
mov
add
mov
retf
and
adc
dec
xchg
iret
mov
push
das
and
cmp
sar
pop
mov
lds
mov
dec
and
adc
pop
iret
xor
lds
jno
adc
mov
cld
or
ror
xor
sub
sub
int
outs
adc
cmp
les
or
mov
cmp
jge
add
sbb
aas
aad
adc
mov
lock
neg
inc
je
adc
mov
or
add
fucomi
add
mov
fmul
or
js
sub
aaa
xor
adc
push
and
cmp
imul
sbb
and
int
sub
sub
mov
das
push
sub
xor
push
xor
xor
and
push
push
mov
mov
sub
cmp
mov
mov
push
inc
sub
inc
cmps
int
cmp
dec
push
dec
std
(bad)
test
cmp
jb
or
xchg
stc
pushf
push
jno
lock
dec
push
and
jno
mov
push
jbe
inc
or
add
adc
push
cmp
or
and
fsubr
sbb
pusha
fs
ja
fiadd
cmp
push
pop
(bad)
sub
pop
mov
jmp
pop
es
push
add
add
push
and
ds
mov
fisttp
add
add
mov
repnz
lea
rol
(bad)
and
arpl
ret
loope
cmp
or
mov
xchg
xor
dec
adc
add
lea
jmp
loope
push
adc
hlt
push
and
dec
pop
pop
sbb
xchg
cmp
rcl
or
mov
ror
xor
(bad)
loopne
cmp
dec
cld
(bad)
mov
and
inc
mov
and
mov
pop
or
ja
dec
push
mov
fld
dec
mov
pop
sbb
push
jge
add
sub
je
push
(bad)
out
xchg
and
mov
sbb
ins
loop
cmp
aam
adc
add
int3
add
pop
and
add
dec
jne
fild
shl
jecxz
push
(bad)
fmul
fsubr
or
pushf
mov
mov
(bad)
adc
gs
lds
xor
adc
mov
fs
sub
std
les
xchg
lahf
clc
call
out
mov
movs
outs
or
mov
addr16
jg
cmp
gs
nop
js
dec
inc
and
and
mov
fnsave
cmp
fnstsw
je
cli
in
pop
adc
sbb
add
sub
or
cmp
or
or
movs
mov
dec
sbb
in
movs
inc
nop
daa
bound
mov
pop
shr
shr
push
cld
cmp
or
or
sub
add
out
ror
adc
xor
nop
dec
xchg
fist
or
jo
ins
jge
xchg
in
push
push
sahf
dec
jge
xchg
clc
inc
xchg
add
fld
push
pushf
in
sbb
cwde
mov
mov
movs
jnp
push
and
lock
mov
lock
ret
and
or
test
pop
clc
fild
xor
lock
pop
add
call
jno
dec
jecxz
clc
xchg
and
bound
lea
and
mov
jnp
les
or
jmp
sub
add
adc
enter
cmp
pushf
fist
pushf
stos
inc
aaa
lea
pop
inc
or
dec
into
add
sbb
xchg
xchg
js
sub
lea
mov
pusha
hlt
ret
mov
dec
sub
xchg
sub
xor
jmp
xlat
xchg
loope
test
mov
ror
jmp
push
or
cs
cmp
push
shl
fistp
xor
sbb
(bad)
or
or
inc
sti
dec
jmp
mov
test
(bad)
pmullw
lock
mov
icebp
pop
inc
sar
xor
lods
push
and
ret
outs
or
mov
loopne
in
pop
xchg
aas
dec
mov
ret
add
push
(bad)
or
sub
push
mov
cmp
pop
dec
dec
xchg
sbb
pop
jno
dec
rcr
clc
adc
pop
stc
add
movs
(bad)
loope
fcomi
aas
ins
movs
xor
inc
mov
cmp
jne
mov
mov
ret
mov
out
fsubr
xchg
dec
inc
lahf
push
adc
mov
push
sbb
and
popf
xor
add
add
mov
fldenv
jne
xor
sub
cmp
fmul
push
cmp
push
and
aad
jge
pop
(bad)
ret
pop
push
xlat
arpl
xor
sub
call
push
jmp
fst
sbb
jbe
and
and
pop
or
repnz
test
cmp
in
fisubr
xor
outs
or
clc
jnp
ja
dec
mov
(bad)
dec
je
adc
push
je
loope
clc
int3
jg
out
lock
cs
jns
jmp
xor
pusha
psadbw
sub
sub
mov
cmp
jge
jnp
jmp
jp
test
(bad)
or
inc
lock
jl
and
sbb
and
mov
adc
sub
fistp
ret
xchg
es
jmp
cdq
push
out
fimul
test
and
loopne
clc
clc
sbb
or
neg
jmp
mov
and
pushf
mov
push
cmp
ss
pushf
or
inc
test
cdq
add
adc
fsub
and
and
or
or
or
test
mov
clc
sbb
add
(bad)
jb
test
mov
cmp
or
fisttp
movs
scas
lods
data16
je
das
(bad)
dec
mov
add
push
jb
or
je
retf
inc
popa
xchg
adc
aas
add
je
or
fldcw
fidiv
aad
sbb
and
test
mov
ret
adc
fcom
fs
jb
push
sbb
lods
pusha
inc
gs
fwait
pop
xchg
mov
jmp
in
and
sbb
adc
jae
test
ror
jno
push
ins
jmp
or
fild
mov
and
dec
fldcw
inc
push
arpl
jmp
imul
sub
sub
int
jnp
or
frstor
jne
xor
adc
sbb
push
add
add
sub
jae
lods
cs
sbb
cmp
icebp
sar
xlat
call
xor
fs
mov
xor
push
mov
and
jg
je
js
loopne
pop
inc
jne
and
inc
add
popf
sub
sub
ret
push
xchg
cmp
jg
jecxz
pop
add
inc
out
add
loopne
rol
cld
cmp
mov
ja
xor
jae
jmp
xchg
and
push
adc
dec
mov
sub
or
add
sub
ins
xchg
test
and
ret
pop
mov
test
out
xor
mov
push
and
push
and
fmul
repz
add
scas
sbb
pop
cmp
and
dec
shr
add
sub
cmp
jb
push
jnp
je
aaa
add
or
inc
nop
je
dec
shl
je
sub
xchg
pop
enter
das
or
or
or
or
adc
and
cmp
ret
push
inc
cli
cwde
shl
push
and
adc
nop
or
and
mov
mov
and
pop
scas
jmp
pop
xor
adc
sub
ss
mov
(bad)
xchg
(bad)
jmp
test
arpl
cmps
cmp
mov
mov
mov
mov
or
dec
push
in
lock
fadd
call
call
xlat
clc
inc
dec
inc
xor
bound
mov
xor
pop
lock
mov
sub
pop
into
mov
xchg
jne
lea
lock
xchg
sbb
add
add
pop
jge
or
daa
jo
adc
shl
adc
mov
call
xor
idiv
inc
test
fdivr
add
jb
popa
ins
jae
nop
fld
or
test
add
and
jo
addr16
daa
ret
push
push
push
push
loope
test
adc
aaa
push
fcom
pop
jl
pop
aam
add
adc
shl
lock
mov
push
or
mov
mov
sub
je
mov
fild
xlat
rol
rcr
inc
mov
jmp
scas
inc
pop
xchg
xchg
outs
test
and
xchg
pop
test
popf
xchg
xor
fs
pop
pop
mov
add
sub
iret
sar
scas
mov
dec
and
inc
or
mov
pop
cmp
sqrtps
adc
pop
aaa
jns
inc
xlat
pop
cmps
or
or
inc
popa
mov
nop
xor
add
ffreep
xor
ret
rcr
xchg
fsubr
cmp
mov
sbb
(bad)
mov
dec
ss
inc
mov
fs
adc
xor
inc
mov
mov
mov
fstp
push
outs
xor
jbe
fsub
xchg
arpl
push
(bad)
mov
jle
sbb
push
retf
pusha
int
addr16
daa
adc
sbb
lock
and
mov
add
adc
imul
je
fild
xor
das
jnp
adc
clc
pop
aam
fisubr
pop
and
imul
sbb
(bad)
data16
out
or
inc
cmp
mov
es
setp
adc
mov
sbb
gs
lock
fild
xor
cmp
repz
mov
cmp
xor
push
out
popa
sar
dec
outs
inc
imul
fsub
mov
outs
clc
xchg
inc
ror
mov
add
or
push
sub
cdq
adc
jne
push
dec
call
fild
add
imul
mov
pop
mov
or
outs
adc
xor
outs
fild
xor
mov
pushf
and
outs
pop
js
jle
pop
mov
sbb
cmp
add
lock
pop
cmp
ins
and
sub
jg
pop
cmp
rol
ds
inc
dec
jo
and
ins
imul
add
pop
xor
(bad)
and
and
lock
mul
and
outs
and
add
push
push
dec
test
inc
movups
mov
or
inc
push
in
inc
adc
jnp
jg
test
cmps
push
lods
imul
les
mov
daa
daa
daa
(bad)
jo
jb
daa
daa
daa
jae
jne
daa
daa
daa
daa
ja
jns
daa
daa
daa
daa
jnp
jge
daa
daa
daa
daa
jg
popa
bound
daa
daa
daa
arpl
daa
daa
daa
daa
addr16
daa
daa
imul
daa
daa
daa
outs
push
push
push
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
push
pop
pop
pop
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
pop
inc
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
dec
dec
dec
ds
daa
daa
dec
dec
dec
adc
aaa
ins
fwait
cwde
pop
mov
pop
inc
add
aas
leave
in
daa
jbe
inc
lds
punpcklwd
add
and
dec
push
jo
or
dec
or
adc
lock
push
iret
jae
add
or
push
jb
sbb
enter
dec
fdiv
imul
sbb
and
add
mov
or
movs
repz
sbb
adc
add
add
add
xlat
cmp
(bad)
test
sub
shl
add
cmp
pop
xor
rcl
add
adc
adc
pop
or
adc
aad
call
mov
mov
cmp
fisttp
jge
lea
push
mov
xchg
mov
mov
mov
ror
(bad)
shl
loope
dec
or
std
xchg
lods
xor
mov
pop
push
add
jmp
xlat
mov
or
mov
xchg
mov
dec
inc
sbb
mov
jmp
and
popa
sbb
mov
dec
(bad)
ja
pop
(bad)
bsf
je
call
adc
js
mov
mov
jbe
add
cmp
dec
push
push
nop
aas
out
mov
out
add
mov
adc
or
inc
add
push
jl
arpl
arpl
js
add
addr16
xor
enter
and
jl
jnp
and
pop
xor
mov
fild
ins
sub
and
inc
add
test
jg
sbb
push
add
sbb
pop
lods
and
jle
mov
xor
outs
bound
pop
push
popf
sub
enter
mov
inc
shr
adc
inc
dec
stos
push
sbb
xor
xor
loopne
lods
lock
mov
scas
xor
push
sbb
mov
shl
inc
ret
ins
jne
imul
push
aam
je
loopne
outs
jmp
sub
xchg
lods
out
rol
(bad)
lock
retf
retf
sahf
fisttp
sbb
xlat
push
shl
pop
inc
mov
push
xor
mov
pop
inc
fsubr
arpl
push
gs
push
sub
or
and
mov
in
enter
xchg
jmp
fs
xchg
or
pop
sub
and
xchg
pop
add
into
in
je
jp
dec
cli
jno
adc
ss
xor
jae
pop
xor
push
test
int3
out
sub
xor
add
xor
and
fs
cmp
pop
push
xchg
es
jmp
outs
test
cld
sbb
or
in
lock
mov
add
dec
add
dec
idiv
sub
dec
imul
or
and
push
push
jo
or
int
and
xlat
mov
add
xor
pop
xor
xor
ss
add
in
dec
mov
loopne
mov
or
jbe
push
inc
cli
inc
outs
je
sbb
pop
or
inc
shl
jg
dec
repnz
retf
inc
or
iret
mov
inc
dec
cs
dec
stos
push
pop
loopne
sar
adc
pop
iret
movs
inc
add
pop
pop
mov
cmp
dec
push
jnp
add
mov
or
inc
inc
fadd
lock
add
cdq
mov
iret
icebp
pop
add
(bad)
inc
inc
sbb
add
movs
inc
or
loopne
cdq
push
movs
popa
mov
pusha
mov
pop
mov
add
push
add
add
cmp
lock
push
jmp
adc
adc
sbb
sub
add
es
fsubrp
pop
je
adc
adc
nop
sub
push
adc
mov
mov
mov
or
cmp
fimul
dec
or
loop
aam
push
pop
dec
jg
add
add
add
inc
dec
outs
cmp
fnstenv
cmp
jg
les
ret
adc
loop
(bad)
out
adc
fisttp
add
push
clc
mov
add
add
mov
mov
inc
(bad)
mov
cmps
jne
add
cmp
dec
and
xchg
arpl
loopne
call
xchg
sub
sub
cmp
sub
xor
mov
inc
xchg
iret
add
adc
std
mov
or
(bad)
addr16
rcr
inc
das
rcl
nop
mov
push
mov
ss
fild
rcl
pushf
rcr
shl
ror
repnz
cli
mov
rol
ror
rcl
ror
sbb
test
rcl
movs
adc
(bad)
dec
mov
sbb
cmp
add
or
jg
out
mov
or
mov
inc
repz
ror
pusha
jg
inc
jb
call
inc
jg
inc
xor
xor
loope
mov
mov
into
arpl
mov
pushf
xlat
mov
bound
ins
add
and
mov
cmp
xchg
dec
xchg
mov
add
sub
pop
jle
js
iret
enter
std
scas
add
sbb
jne
pop
pop
addr16
inc
scas
push
add
add
push
outs
jmp
icebp
mov
inc
sbb
push
sbb
pop
jecxz
adc
sbb
sbb
add
dec
loop
inc
xchg
arpl
icebp
sub
fwait
xor
push
pop
movs
fild
js
pop
jo
mov
and
lods
loop
das
pop
movzx
aaa
and
mov
and
xor
das
push
add
inc
adc
dec
mov
push
dec
clc
add
mov
test
add
into
sti
sub
fld
jmp
out
movs
jg
jl
add
jns
lods
xor
not
pop
fadd
pop
ror
ins
inc
hlt
pop
mulps
pop
mov
and
(bad)
push
xchg
mov
iret
shl
cs
sbb
adc
call
test
jo
adc
ja
jmp
cs
cdq
jae
movs
lahf
mov
add
adc
inc
aad
mov
or
adc
(bad)
dec
pop
xchg
call
mov
retf
add
fs
daa
(bad)
out
loopne
pop
adc
ror
ret
jns
sub
mov
clc
test
or
je
mov
cmp
sub
adc
loopne
jmp
sbb
adc
nop
add
sbb
push
aam
jg
sub
mov
iret
dec
mov
adc
jnp
inc
sub
(bad)
mov
push
idiv
jp
add
addr16
cmp
(bad)
and
add
lahf
add
adc
jns
jecxz
and
rol
mov
lock
lock
mov
(bad)
test
jbe
push
hlt
pop
mov
loop
cmp
sahf
cmps
and
mov
push
add
imul
test
stc
xlat
inc
ret
loop
add
sub
(bad)
outs
ret
sub
or
sub
jle
sbb
pop
ds
mov
pop
out
test
gs
aaa
int
ret
dec
push
push
or
ret
push
jne
mov
xchg
(bad)
into
xor
jmp
sub
nop
dec
aam
add
enter
add
xchg
das
and
sub
mov
aas
aam
jp
cmp
xchg
xchg
cs
nop
mov
cs
jmp
lock
pop
or
adc
xlat
xchg
retf
sub
and
sbb
mov
sub
inc
inc
sbb
cmp
(bad)
add
mov
dec
fisttp
nop
sub
or
jbe
mov
and
pop
add
(bad)
mov
loopne
push
les
ret
rcr
inc
fcom
daa
in
fidiv
mov
pop
xchg
addr16
mov
test
sbb
pop
hlt
pop
inc
add
inc
jns
xchg
mov
retf
pop
into
icebp
sahf
xor
sbb
dec
xchg
sbb
scas
pop
jmp
jge
inc
add
xor
sti
ins
test
push
lock
and
test
pushw
xchg
mov
cmps
sbb
fadd
out
adc
add
cli
add
(bad)
adc
gs
or
cmps
shl
mov
adc
cmp
xlat
fucomip
push
retf
mov
inc
cld
aad
jo
loop
popa
scas
mov
mov
add
pop
dec
inc
mov
rol
inc
in
bound
mov
fisub
sub
sbb
inc
inc
adc
jecxz
or
data16
add
add
push
into
xchg
dec
dec
rcl
push
push
pop
loope
sub
push
les
test
test
dec
jb
jge
mov
loopne
jmp
and
bound
or
adc
cld
int3
cmp
enter
or
ins
mov
call
xor
aad
inc
into
clc
aas
js
shr
sub
jl
inc
sub
sbb
pusha
push
(bad)
(bad)
jmp
inc
(bad)
push
or
ja
inc
dec
jne
mov
ins
je
ss
mov
call
mov
fs
mov
imul
sbb
xchg
and
push
cmp
jbe
adc
mov
lds
inc
jge
sbb
into
sbb
pop
pop
lea
sbb
fmul
xchg
cpuid
shr
add
sub
pushf
add
push
fisttp
das
mov
xchg
pop
cld
push
push
(bad)
add
shl
xchg
lds
fadd
fmul
dec
jne
rol
popf
cmp
and
dec
or
imul
mov
and
fndisi(8087
shr
stc
inc
ds
test
push
out
adc
pop
sub
sti
dec
or
jns
inc
mov
inc
or
inc
mov
xor
gs
jmp
mov
into
cmp
je
sub
je
add
jmp
pop
cmps
rol
sbb
out
mov
call
add
(bad)
int
sti
pop
cmp
mov
jmp
sub
jle
lods
ret
repnz
mov
enter
cmp
mov
and
dec
in
jne
sar
adc
jne
out
mov
mov
in
call
jnp
imul
cmp
je
push
jmp
inc
add
xor
pop
and
mov
ror
mov
fmul
mov
or
retf
fld
mov
jb
xchg
and
mov
add
mov
add
mov
dec
jge
repz
rol
push
mov
mov
push
pop
out
add
mov
cmp
jne
mov
inc
je
xchg
xor
fild
pop
lock
dec
repz
retf
(bad)
mov
icebp
jmp
and
inc
lods
xor
cmps
pusha
xlat
inc
mov
push
enter
cmp
push
xchg
test
test
or
jmp
mov
loopne
push
add
cmp
je
shl
or
or
inc
push
movs
pushf
mov
movs
fs
sbb
repz
cwde
stc
pop
fadd
sub
or
and
mov
fild
js
lds
jnp
cmp
call
test
mov
scas
mov
mov
les
outs
test
push
sbb
pop
and
pop
bound
add
mov
push
mov
fiadd
or
dec
(bad)
inc
sub
fbstp
test
jg
add
add
jg
pusha
pusha
test
pop
fwait
xor
mov
rcl
dec
push
sub
outs
mov
inc
and
jecxz
mov
dec
push
loope
pop
mov
or
js
and
retf
sub
rol
sti
cmps
inc
lock
jmp
add
shl
xchg
out
loop
push
(bad)
cmp
icebp
sbb
dec
pop
popf
(bad)
cmp
xchg
add
mov
mov
ins
push
in
sbb
add
xchg
mov
jo
movs
sbb
push
sub
imul
inc
popa
into
or
add
inc
sub
and
pop
or
sub
and
ret
push
call
mov
or
mov
add
dec
out
sbb
aas
push
sub
adc
pop
hlt
mov
mov
outs
sbb
(bad)
scas
in
add
sar
(bad)
adc
jge
xchg
adc
ret
adc
pop
add
add
or
pusha
sub
mov
(bad)
jmp
sub
jb
inc
xchg
cmp
je
inc
dec
mov
cmc
pop
ret
test
aaa
aam
dec
cld
lea
sub
jb
inc
xchg
in
mov
fbld
mov
push
dec
or
ja
jo
add
out
push
xchg
in
aas
(bad)
jmp
add
movs
imul
(bad)
push
call
test
je
jb
pop
or
call
in
out
xchg
and
mov
xor
or
rol
jmp
sub
scas
jno
sahf
pause
mov
dec
adc
push
or
aam
jae
mov
jg
jmp
inc
jmp
es
jmp
pop
jmp
in
push
xor
sbb
dec
out
shr
test
add
sub
es
loope
jae
mov
cmp
mov
cmps
mov
cwde
mov
mov
call
imul
dec
inc
sbb
inc
in
mov
sub
loope
daa
scas
out
test
fwait
ds
scas
mov
cmp
jbe
cdq
lock
add
mov
fiadd
shr
cld
jbe
lea
jnp
mov
mov
dec
call
and
mov
xchg
pop
and
sbb
and
mov
cmp
jl
and
movs
cs
mov
add
out
fst
push
fdiv
loope
mov
fidiv
movs
sub
inc
push
add
inc
mov
push
cmps
push
imul
xchg
adc
test
cmp
dec
fadd
push
inc
shl
mov
sti
pop
push
stos
mov
neg
cmps
mov
cmp
in
shr
mov
mov
mov
sbb
(bad)
out
mov
push
cmp
div
outs
push
pop
push
dec
pop
cmp
sub
mov
hlt
iret
pop
movs
push
cmp
mov
imul
lahf
mov
add
daa
dec
add
jecxz
(bad)
push
add
gs
jo
xchg
dec
push
jge
push
adc
je
pop
in
mov
dec
add
inc
add
bound
add
inc
pop
aad
dec
add
add
jne
cmp
jns
jne
ins
sti
sub
lahf
es
cmova
pop
dec
add
dec
jle
dec
out
bound
inc
jbe
inc
add
cmp
adc
jg
lea
mov
loopne
ins
and
mov
nop
push
fmulp
in
mov
push
es
arpl
jge
in
pop
rol
data16
sub
adc
cs
movs
repnz
jle
das
bound
xchg
mov
push
and
push
mov
add
nop
pop
push
cdq
movs
xor
fcomp
dec
pushf
cdq
adc
mov
jb
sbb
leave
in
adc
xchg
mov
mov
pushf
pop
and
and
loopne
jb
sub
sub
dec
ror
ins
mov
inc
push
cmps
cmp
out
xchg
retf
fsub
cmp
call
cdq
in
test
movs
sub
clc
loopne
test
push
add
xchg
pop
es
and
dec
cs
sbb
gs
retf
adc
and
(bad)
xor
les
lock
xor
and
and
test
je
inc
sub
je
pop
inc
sub
into
sub
imul
test
stos
xlat
mov
hlt
jmp
in
pop
add
add
loop
pop
pop
int3
or
or
das
inc
jns
aas
fild
add
dec
add
mov
and
imul
add
push
daa
or
stc
call
and
dec
or
add
add
xchg
jne
dec
add
outs
mov
mov
cmp
das
mov
das
packsswb
push
cdq
test
add
add
das
ins
out
das
adc
je
inc
or
js
je
sub
mov
push
push
or
jae
xchg
add
mov
jle
push
(bad)
sahf
mov
push
add
lahf
loope
ret
pop
scas
jae
fs
ret
test
aas
cmp
add
or
ret
or
and
test
jnp
mov
or
fild
dec
test
mov
repnz
or
push
push
int3
lods
mov
stos
icebp
xor
push
cmps
or
cmps
xchg
cmp
mov
ja
lock
adc
test
add
mov
mov
jae
adc
add
cmp
enter
imul
aam
inc
fcomp
adc
jbe
push
mov
push
ret
jnp
and
mov
jne
sbb
(bad)
retf
dec
add
outs
data16
outs
adc
loopne
and
data16
push
push
and
add
add
sbb
in
jae
xor
out
push
push
(bad)
test
inc
repz
fstp
add
push
mov
jmp
or
add
pusha
repz
jbe
ret
add
mov
mov
mov
das
or
and
xor
or
dec
mov
test
pop
pushf
repz
jno
xchg
inc
ret
add
daa
sbb
mov
int
pop
das
arpl
in
fcomp
cmp
ror
fisttp
sub
push
jle
loop
aas
out
scas
inc
addr16
jmp
test
or
mov
ss
dec
test
outs
pusha
test
mov
aaa
ins
pop
jl
xor
xor
push
lea
mov
sbb
lea
adc
enter
jmp
popf
push
imul
shld
ret
int3
add
jmp
and
frstor
mov
inc
(bad)
push
add
add
cld
pop
fimul
cdq
idiv
push
adc
(bad)
sub
add
xor
outs
adc
add
or
mov
pop
mov
sar
clc
cdq
add
add
and
push
fild
inc
cld
pop
pop
inc
mov
movzx
dec
dec
call
sbb
push
loopne
pop
shl
lahf
shl
cmc
mov
mov
aam
jbe
mul
fmul
pop
das
stos
adc
test
jmp
hlt
add
push
arpl
(bad)
mov
stc
ret
(bad)
jb
sub
hlt
fistp
and
jmp
pop
stc
sub
(bad)
(bad)
ret
sti
or
rcl
(bad)
sbb
iret
push
neg
inc
mov
add
push
std
xor
sub
inc
test
mov
add
jl
cmp
add
lods
aad
xchg
push
mov
es
mov
mov
rol
or
add
push
sbb
dec
jne
jo
sbb
jnp
test
dec
sbb
movs
clc
sub
clc
sub
movs
push
cmp
cmp
mov
and
(bad)
stos
mov
mov
test
pop
adc
lahf
cmps
fcomp
xchg
or
add
dec
mov
add
dec
xor
add
aas
push
pop
test
or
cmp
xor
sbb
adc
sbb
or
sbb
xlat
mov
xor
ja
xor
lods
jge
popa
inc
icebp
push
test
movs
sub
loopne
xchg
mov
jl
retf
hlt
push
mov
lea
xchg
mov
dec
sub
add
daa
or
pop
fcmovbe
adc
add
(bad)
dec
mov
jp
ret
retf
mov
fild
daa
adc
sbb
jne
jno
push
sub
movzx
daa
pop
add
arpl
sti
xchg
mov
xor
in
inc
mov
push
xor
xor
sub
hlt
add
lea
es
lock
loopne
fcmovbe
pop
add
or
or
inc
xchg
add
mov
pop
shr
enter
sbb
sbb
and
pop
pop
ret
(bad)
in
adc
xchg
sbb
clc
adc
jne
jae
cmp
loop
pop
data16
aam
scas
xchg
lea
cld
mov
das
scas
outs
sbb
inc
unpckhps
adc
jg
or
sbb
jns
xchg
and
add
shl
mov
mov
sbb
xchg
repnz
pop
push
cmc
ret
mov
mov
clc
shr
push
xchg
retf
cli
add
or
adc
xchg
test
or
fimul
add
pop
push
scas
xor
or
xchg
loopne
mov
cmps
ret
and
inc
jno
add
push
add
add
dec
and
adc
mov
jbe
adc
movs
into
call
add
mov
push
and
xor
pop
and
jo
and
mov
sub
sbb
sti
stos
imul
inc
or
inc
sbb
add
sbb
or
adc
mov
inc
ins
jmp
add
xchg
or
or
cmp
idiv
lock
xor
add
(bad)
fwait
sbb
pop
pop
push
mov
nop
out
add
inc
ror
jecxz
xlat
xchg
add
push
hlt
adc
jge
pop
test
mov
adc
mov
int
cmp
retf
lock
add
stos
lds
pop
lds
pop
or
add
inc
or
push
pop
mov
fistp
mov
add
add
and
std
sbb
add
ret
inc
add
inc
ret
fcom
add
les
scas
sbb
nop
iret
add
add
js
sub
lods
mov
jle
in
push
and
push
push
cli
jg
pop
sub
jl
inc
lea
mov
out
xchg
mov
fsubr
xchg
(bad)
push
and
adc
fist
mov
addr16
out
add
mov
xor
imul
shr
mov
scas
setge
loopne
mov
push
adc
push
push
jbe
push
test
clc
add
dec
lds
and
call
(bad)
dec
pop
add
push
into
retf
cmps
and
add
rcl
inc
mov
js
loope
and
cwde
xor
(bad)
jl
rcl
in
push
jo
mov
pop
call
add
cmp
clc
sub
inc
dec
jne
or
pop
pop
pop
iret
or
mov
add
loopne
inc
cmp
pop
imul
cmps
cmp
adc
cmp
and
push
ret
inc
aas
push
mov
cs
ret
cdq
add
push
jmp
sub
push
test
jmp
push
mov
xor
out
cmps
sub
cmp
inc
pop
fcom
add
loop
ss
adc
sub
mov
hlt
inc
fwait
sbb
test
jmp
xor
mov
jg
sbb
or
pop
and
cmp
js
loopne
adc
adc
loopne
xor
dec
add
mov
pop
jg
movs
test
add
adc
mov
pusha
adc
int3
fsubr
or
lea
sahf
and
adc
ss
lods
mov
movs
or
loopne
adc
movs
adc
add
or
outs
inc
add
jmp
xor
sbb
je
sub
sbb
(bad)
push
data16
inc
ret
mov
(bad)
lea
push
pop
push
add
jb
out
es
mov
push
iret
sbb
or
or
xor
xchg
mov
or
dec
loopne
push
or
(bad)
data16
cmps
or
push
test
fs
test
add
mov
xchg
sub
push
or
dec
pop
(bad)
fsub
jbe
imul
lock
and
mov
mov
mov
bound
fdivr
adc
dec
or
fwait
ror
sbb
push
or
ins
xor
arpl
pop
jb
sub
call
or
cmps
dec
idiv
sbb
adc
push
add
sbb
pop
lock
sbb
jbe
push
push
ror
add
and
mov
mov
dec
dec
(bad)
and
or
mov
fsub
in
adc
mov
retf
in
adc
push
mov
adc
shr
jle
int3
add
add
and
cdq
jae
sub
call
scas
in
add
adc
dec
or
inc
sti
xchg
pop
imul
and
fisttp
setae
add
or
sub
mov
(bad)
push
jne
add
pop
mov
popa
test
ins
js
mov
sub
outs
sub
div
push
nop
mov
add
sbb
mov
xor
jo
stc
dec
and
add
cmp
jb
clc
adc
cmp
mov
mov
and
add
sbb
fs
inc
add
mov
cmp
sub
jge
xchg
movs
and
clc
or
popf
call
adc
cmps
inc
or
add
outs
mov
sbb
pop
mov
sahf
push
xor
pop
ss
or
dec
inc
pop
nop
ds
mov
fucomip
ja
and
cmp
push
push
jge
pop
shl
inc
fadd
push
int3
dec
push
addr16
dec
mov
inc
cmps
mov
mov
mov
lods
push
in
or
movs
sub
jae
add
sub
call
xchg
dec
cmp
ror
mov
js
jo
or
jl
je
jle
pop
jg
fadd
rcl
in
or
or
ficom
sub
bound
test
das
pop
cmc
mov
push
popa
xor
xor
mov
or
dec
or
and
lock
dec
iret
in
or
ret
cmps
push
repnz
iret
adc
adc
mov
xchg
push
or
pop
popf
add
pop
inc
mov
xchg
jns
cmp
in
add
add
sub
pop
sub
push
add
sbb
jns
es
push
adc
cld
call
scas
pop
xchg
or
xchg
test
test
jbe
xor
add
push
fstp
push
test
es
adc
out
sub
addr16
jno
and
add
(bad)
retf
cli
loope
push
imul
xchg
sub
or
push
sahf
ins
pop
xchg
daa
xchg
fist
sar
push
ins
jae
push
je
bound
xor
cmp
dec
sub
mov
xchg
xchg
cmp
pop
dec
xlat
fisubr
xor
invd
or
repnz
rcl
(bad)
sub
mul
pop
mov
push
add
mov
push
inc
inc
jp
sbb
or
adc
or
pop
arpl
cmps
mov
je
inc
or
lods
pop
in
xchg
stos
and
add
hlt
inc
scas
xchg
pushf
push
je
pop
ret
jge
xor
add
and
add
nop
mov
mov
test
sbb
cwde
inc
ins
(bad)
out
mov
clc
mov
test
fld
mov
hlt
cmp
pop
sub
outs
inc
je
lea
add
sbb
in
mov
jmp
shl
cmp
mov
popa
pusha
xlat
movs
lods
inc
xchg
loope
and
inc
sbb
adc
or
or
lea
cld
jmp
test
sbb
dec
icebp
fiadd
(bad)
loop
lea
ret
in
mov
xor
rcr
adc
xor
dec
out
xchg
enter
mov
enter
pushf
sbb
call
add
(bad)
mov
hlt
jne
add
inc
test
js
mov
dec
push
call
stc
mov
mov
lea
xor
hlt
xlat
push
jecxz
adc
mov
cmp
push
mov
and
or
dec
iret
fild
es
sub
push
jmp
push
ins
or
(bad)
dec
hlt
jne
sbb
or
push
mov
jmp
push
mov
mov
cmp
add
mov
(bad)
and
in
lods
enter
mov
adc
push
and
data16
push
push
jmp
push
add
ins
outs
jge
rol
sub
pop
cli
push
push
shl
jmp
rcl
aaa
jbe
or
sti
ficom
pop
jl
pop
or
xchg
sub
adc
add
sbb
sub
daa
add
sbb
inc
push
push
and
in
test
xchg
in
in
rcl
add
mov
loopne
outs
or
jo
in
fucom
adc
xor
mov
popa
and
sahf
stos
jo
push
or
ja
cmc
adc
push
add
adc
test
add
push
ret
daa
inc
add
pop
popa
rol
daa
adc
cmps
in
push
xor
cmp
jno
adc
loopne
and
ins
add
and
adc
sbb
inc
dec
leave
stos
aaa
xor
push
pop
inc
mov
and
lock
adc
bound
fs
or
pusha
sbb
shl
hlt
pop
hlt
dec
sbb
or
add
fstp
cmp
gs
xchg
push
ret
add
sbb
clc
addr16
stos
cmp
inc
ins
sbb
sbb
xchg
inc
into
sub
shl
arpl
sbb
mov
dec
enter
inc
(bad)
aas
jp
imul
enter
sbb
sbb
jb
push
add
inc
lods
fadd
daa
jo
dec
es
ret
dec
leave
mov
inc
leave
sbb
sbb
in
inc
add
arpl
inc
rcr
push
xor
pop
add
push
or
daa
fs
clc
pop
adc
push
or
sbb
adc
lock
outs
iret
adc
push
add
aam
xor
or
test
or
pop
(bad)
movs
push
adc
loope
adc
ins
pop
and
loope
inc
dec
inc
and
pushf
sbb
(bad)
or
sbb
sbb
popf
mov
pop
jo
pop
add
adc
mov
les
push
ret
or
mov
pop
dec
or
jb
dec
and
add
and
shl
adc
sbb
sub
or
nop
adc
daa
cmps
xchg
adc
popa
daa
popa
and
and
fadd
sbb
mov
and
xchg
mov
loopne
fild
jne
pop
add
das
xchg
and
loopne
jo
xchg
daa
jl
cmp
xor
dec
push
mov
and
and
sbb
and
xor
jae
mov
aas
mov
and
push
sub
test
adc
pop
cwde
cmp
jb
jbe
lds
and
or
push
loop
sub
push
lahf
sub
add
xor
daa
sbb
xchg
add
sub
inc
sbb
and
xor
sub
add
and
ins
or
inc
dec
leave
or
loope
jmp
retf
popa
inc
rcl
xlat
aas
push
and
sub
sub
xlat
cwde
es
sbb
jmp
xlat
sub
xchg
sub
dec
push
sub
sub
xor
add
cmp
inc
pop
sub
adc
jne
test
push
inc
xor
(bad)
loopne
inc
jmp
daa
sbb
add
loopne
es
test
xchg
cs
dec
sbb
inc
xchg
add
aas
pushf
cs
dec
sar
adc
mov
shr
nop
and
or
dec
pop
test
int
sbb
push
bound
jns
xor
xor
xor
lea
adc
fdiv
mov
push
and
pop
add
aas
aam
mov
dec
dec
inc
and
sbb
adc
aam
xor
push
nop
adc
push
sbb
xor
nop
stos
or
shr
and
xor
xor
nop
add
pop
arpl
or
in
lock
xor
pop
subps
cmp
aas
pusha
xor
rcl
and
inc
jne
in
push
add
cmp
sbb
jb
push
pusha
mov
movs
adc
or
cmps
inc
mov
or
aaa
inc
fs
(bad)
loopne
adc
aaa
mov
xor
fadd
ja
dec
dec
add
inc
add
cmps
sub
out
cmp
icebp
and
fdivr
push
add
cdq
xchg
aaa
inc
in
sbb
fnstsw
clc
cmp
cmp
and
in
or
jle
inc
add
mov
or
cmp
pusha
cwde
sub
cmp
popa
and
in
jo
cmp
mov
adc
push
imul
das
push
add
call
inc
shl
dec
je
adc
xor
push
sub
sbb
xlat
push
adc
push
sbb
movs
push
dec
cmp
pop
cmp
or
cmps
js
push
cmp
and
arpl
je
rol
aaa
ins
enter
fisttp
and
pop
daa
xchg
ds
rcl
nop
xchg
pop
loopne
jb
mov
xchg
inc
ja
push
repnz
in
cmp
add
aas
push
push
add
and
pop
add
inc
xchg
test
ret
push
add
inc
outs
push
jg
and
adc
or
push
jo
cmp
nop
inc
mov
daa
in
pop
inc
sbb
inc
and
add
test
mov
sbb
mov
inc
adc
movs
addr16
loope
inc
sbb
ror
and
nop
xor
jb
(bad)
add
jg
cmps
and
adc
inc
(bad)
xor
mov
adc
inc
xor
or
add
push
push
jno
enter
xchg
pop
ins
inc
shl
add
jg
loope
xor
test
push
adc
jne
call
inc
shl
pop
pushf
bound
ja
dec
and
xchg
mov
push
inc
add
adc
movs
dec
out
jo
xor
mov
pop
mov
pusha
dec
pop
or
sub
xor
mov
xchg
rol
mov
adc
les
push
sbb
add
aas
xor
cmc
dec
xlat
dec
aas
xchg
mov
or
mov
pop
adc
sub
dec
addr16
and
mov
lods
xchg
dec
inc
xchg
daa
or
je
aaa
add
push
xor
adc
pop
mov
loope
dec
cmp
pop
jo
mov
push
inc
ja
mov
arpl
pushf
sbb
dec
dec
push
add
mov
adc
jo
jb
dec
leave
push
popf
push
mov
add
les
xchg
adc
push
mov
ret
enter
push
xor
adc
ret
fadd
inc
xlat
dec
inc
ja
pop
add
imul
add
push
fist
xchg
add
enter
adc
test
pop
arpl
adc
sbb
lahf
cmp
popa
stos
not
dec
cmp
mov
xchg
shl
loopne
push
call
or
inc
aam
push
sbb
push
pop
cdq
push
and
call
in
in
push
pusha
leave
push
or
push
cmp
movs
adc
int
add
push
rcl
push
call
dec
push
call
es
or
dec
cmps
or
movs
aas
popaw
stos
inc
add
jg
rol
xchg
pop
dec
xchg
fistp
add
fistp
push
icebp
mov
(bad)
xor
stos
call
inc
lea
or
inc
call
push
or
sbb
or
aas
push
pop
add
aam
cvtdq2ps
cmp
mov
or
adc
or
aas
and
lea
add
lods
pop
adc
xchg
push
das
adc
adc
daa
xchg
pop
and
xchg
adc
outs
add
and
pop
xchg
xchg
and
and
add
enter
sbb
xor
or
jnp
outs
add
dec
in
add
xchg
inc
inc
cmp
pop
dec
jns
movs
adc
aas
push
pusha
sbb
enter
inc
pushf
sbb
or
add
jae
inc
cmp
shl
xor
dec
out
and
inc
dec
jmp
popa
sub
jg
pop
push
xor
and
push
jb
bound
ret
mov
dec
das
dec
cwde
mov
cmp
adc
and
push
inc
daa
or
xchg
arpl
ret
xor
push
pushf
sbb
pushf
arpl
or
inc
stos
vmresume
xchg
pop
fs
gs
pop
out
mov
mov
cmp
push
cmp
gs
or
add
les
outs
lock
pop
push
ret
push
add
and
addr16
inc
add
push
adc
addr16
add
addr16
push
push
push
and
ret
push
add
push
push
push
ret
inc
push
add
popa
imul
imul
pop
push
sbb
xor
add
aaa
mov
js
or
sub
js
nop
mov
jo
sub
addr16
push
jb
push
sbb
or
jl
cwde
sub
imul
nop
and
ins
inc
shl
(bad)
ins
pop
cmp
pop
leave
add
or
xchg
add
loop
adc
push
and
adc
push
or
add
mov
pop
or
imul
call
repnz
outs
(bad)
movs
inc
or
(bad)
xchg
sbb
adc
jb
inc
inc
dec
jecxz
xor
sub
xlat
nop
add
jns
(bad)
jo
jns
scas
push
fnsave
test
enter
adc
add
inc
in
add
sub
sbb
jae
sbb
push
test
inc
add
mov
push
xchg
sbb
xchg
sbb
push
je
je
in
cmp
mov
pop
je
xchg
pop
jne
cmp
add
push
or
pop
in
xchg
and
push
push
add
int3
jbe
mov
sbb
out
loope
pop
data16
addr16
push
mov
js
js
sbb
or
sub
(bad)
js
xchg
sbb
mov
jns
push
add
pop
jns
add
daa
in
inc
jns
and
jp
pop
(bad)
jb
fist
test
inc
(bad)
aad
adc
mov
jnp
in
inc
dec
fdivr
test
sar
and
push
add
cmp
or
inc
cmp
jl
sub
adc
inc
add
xor
or
sub
xchg
scas
sbb
xor
jg
mov
test
daa
xchg
ror
push
push
dec
push
pop
mov
aas
retf
pusha
cwde
xchg
mov
add
adc
adc
or
pushf
nop
add
xchg
push
mov
je
sub
pop
retf
into
or
mov
push
add
sbb
les
push
icebp
or
xchg
cwde
sub
stos
ror
addr16
and
push
xchg
loopne
inc
out
inc
mov
add
arpl
xchg
sbb
out
test
dec
pop
add
daa
cwde
sub
outs
loop
pop
xlat
pop
add
imul
add
or
add
xchg
pop
add
xchg
ret
inc
add
inc
adc
sbb
pop
repnz
clc
clc
inc
call
xchg
mov
sbb
jg
adc
inc
sub
outs
and
test
sbb
in
retf
sbb
(bad)
jo
xlat
mov
popa
jnp
xchg
dec
movs
test
test
mov
inc
push
add
xchg
pop
repnz
mov
cdq
mov
jb
xor
loopne
cmp
pop
loopne
mov
adc
mov
mov
and
cld
cmps
imul
xchg
dec
and
mov
ret
fidiv
jmp
lar
aam
dec
mov
inc
leave
add
and
inc
xor
loopne
jb
push
jge
or
cmps
push
pop
(bad)
lahf
or
push
cwde
(bad)
lahf
int
add
push
and
nop
lahf
dec
enter
ins
aam
sbb
jmp
inc
mov
stc
xchg
push
and
add
xchg
jo
nop
adc
add
push
and
and
je
dec
inc
cmp
push
nop
inc
repnz
xchg
pop
jo
nop
and
or
pop
xchg
pop
std
mov
dec
enter
addr16
mov
push
xchg
push
outs
mov
(bad)
mov
not
icebp
add
xor
xor
inc
pop
iret
sbb
ja
sbb
mov
aam
adc
add
mov
je
mov
lods
and
or
inc
sub
and
pop
xor
inc
add
xor
sub
inc
loop
in
add
mov
sbb
out
add
xor
lahf
cmp
sbb
leave
push
xlat
and
inc
call
je
push
xchg
jp
stos
xchg
inc
mov
jnp
sbb
adc
xchg
call
arpl
(bad)
xchg
adc
movs
sbb
push
mov
push
es
or
push
sbb
dec
push
dec
sub
and
(bad)
jo
pop
inc
pop
mov
dec
mov
xchg
test
test
dec
mov
mov
mov
je
cwde
lods
dec
and
sub
stos
ror
retf
ffreep
and
js
or
mov
sbb
pop
aas
dec
ficomp
fsub
movs
fdiv
(bad)
mov
icebp
push
xor
add
scas
or
aam
cdq
dec
cmps
nop
dec
mov
icebp
or
mov
fwait
mov
mov
jns
lds
call
out
neg
aas
mov
push
in
stc
push
hlt
pop
pop
clc
js
sub
sbb
inc
mov
test
add
retf
adc
adc
and
cmps
repnz
js
test
nop
and
and
lahf
retf
mov
sub
es
daa
repnz
sub
cmp
sub
sub
sub
cmps
repnz
les
dec
or
das
push
or
push
addr16
push
stc
je
pop
push
xor
loope
xchg
dec
pusha
pushf
xor
cmp
dec
idiv
ins
xchg
lods
ror
cmps
repnz
nop
cwde
shl
and
inc
adc
in
mov
push
stc
push
mov
inc
cmp
cmps
adc
(bad)
cmp
movs
jl
ffreep
jo
pop
adc
gs
test
inc
adc
mov
fmul
cmps
dec
adc
sub
dec
dec
rcr
les
adc
xor
fsubr
mov
loopne
mov
enter
or
inc
push
adc
push
pop
xlat
mov
push
adc
lahf
push
adc
push
sbb
mov
aaa
aas
sub
out
test
adc
ja
daa
mov
lock
adc
loope
mov
into
inc
lea
out
call
daa
adc
daa
adc
mov
movs
jg
adc
xor
mov
adc
pop
mov
cld
cmp
rcr
cmp
arpl
adc
cmp
je
jo
cmp
jge
out
call
jns
adc
jp
inc
cmp
jl
pop
jle
div
sbb
dec
adc
pop
not
jge
ffreep
pusha
cdq
dec
adc
adc
pusha
popa
jo
sbb
sub
pop
xor
call
bound
push
xlat
push
pop
sbb
mov
fs
(bad)
lods
sub
not
cld
arpl
addr16
cmp
es
cmp
shl
loopne
call
adc
xchg
arpl
shl
sar
xchg
xlat
adc
shl
test
arpl
imul
call
adc
es
(bad)
cli
fdivp
aam
jae
adc
and
ins
cld
add
int
push
push
sub
add
call
out
inc
mov
dec
add
not
mov
add
test
dec
adc
add
jle
or
add
aas
loopne
jmp
je
mov
jmp
mov
mov
add
cmp
fisttp
jnp
or
pop
pop
cmp
jmp
fistp
add
push
mov
cmp
ja
sbb
and
out
sahf
xor
push
sahf
out
sahf
pop
and
xor
aas
jns
out
inc
dec
push
pop
bound
adc
lock
mov
or
jmp
mov
aas
ja
dec
lods
cs
cld
sub
mov
ja
sbb
cmp
or
aam
pop
dec
loop
aaa
mov
add
add
or
adc
imul
ret
ret
fadd
imul
mov
je
int3
fidiv
xor
repnz
aam
lock
xor
hlt
clc
cld
ret
jg
cmp
or
add
adc
fcomp
retf
sbb
lock
mov
adc
or
mov
mov
push
cmp
adc
or
jne
cwde
cld
mov
sar
mov
inc
int
ja
test
jmp
in
rcl
sbb
sbb
sbb
jmp
dec
mov
fsub
push
fdiv
pop
push
mov
call
out
mov
add
or
je
push
es
aaa
push
ins
mov
mov
push
shl
aaa
(bad)
(bad)
ret
mov
pusha
adc
jae
cli
imul
retf
add
add
jo
out
jg
sti
inc
dec
ins
jg
add
scas
add
add
xchg
add
mov
cmp
mov
(bad)
push
aas
pop
scas
lods
sbb
(bad)
push
ja
jne
add
iret
add
or
push
mov
call
outs
pushf
push
outs
push
fcmovnu
mov
mov
nop
or
jo
push
popa
mov
div
and
cmp
push
jne
je
jnp
fiadd
jns
scas
jbe
je
inc
data16
imul
add
mul
add
mov
push
pop
(bad)
dec
jae
dec
movs
clts
cmps
or
repnz
sbb
fldenv
mov
dec
mov
das
mov
cmp
sbb
xlat
cs
push
add
xchg
dec
test
mov
sub
iret
lock
dec
mov
mov
test
les
adc
pop
pop
inc
inc
inc
push
aaa
mov
es
movzx
pop
add
ss
cs
mov
retf
push
dec
add
add
sbb
sahf
sbb
mov
inc
sub
push
sub
sbb
fnstsw
das
add
dec
xor
pop
xor
rdmsr
sahf
test
jb
mov
sysenter
add
scas
mov
push
sahf
jbe
aaa
add
(bad)
loop
in
add
jmp
les
inc
pop
inc
push
push
inc
add
es
pop
adc
mov
xchg
dec
mov
jne
jo
jb
mov
int
lds
repz
mov
push
mov
jns
xor
mov
rcr
mov
ins
or
outs
test
or
add
lfs
pop
add
stc
dec
iret
pop
adc
lds
in
push
cmc
jo
inc
xchg
aam
int
sub
inc
sbb
fisubr
ins
pop
adc
outs
addr16
aad
outs
adc
neg
inc
or
ins
xchg
sbb
retf
jb
outs
jae
pop
arpl
pop
inc
add
push
outs
add
jb
sbb
nop
pop
xor
test
push
adc
add
les
mov
mov
fistp
fild
mov
inc
lods
push
xor
jmp
cmp
inc
stos
push
push
inc
scas
inc
ror
pop
pop
inc
jns
sbb
int3
mov
ror
imul
arpl
jg
sbb
inc
mov
adc
inc
inc
popa
jmp
xchg
and
mov
push
and
in
cmp
add
jo
mov
(bad)
movs
test
add
fwait
mov
(bad)
jbe
and
rcr
push
sbb
mov
and
sbb
dec
lds
clc
inc
inc
dec
lds
add
push
adc
add
xor
fwait
call
and
fs
xor
push
je
xor
or
add
inc
add
jb
cmc
add
inc
ror
adc
adc
mov
ins
jns
nop
mov
mov
stos
mov
mov
xchg
outs
ins
rcr
ror
or
xchg
lods
outs
xchg
ds
gs
(bad)
fwait
call
mov
add
add
in
push
dec
dec
add
sbb
stos
add
mov
add
sub
aam
test
xor
das
pop
test
pop
xchg
jne
fst
jl
xor
push
lods
ret
nop
lock
sbb
jg
sbb
gs
sbb
in
into
or
push
sub
test
js
out
and
sub
jae
push
dec
std
sbb
jle
sbb
sbb
xor
shl
ror
fisttp
jo
popa
arpl
ret
adc
adc
or
jo
int
sahf
leave
pop
push
add
mov
(bad)
cmp
dec
push
and
xchg
dec
push
jg
sbb
mov
mov
xchg
cmps
pop
in
xchg
fdivr
lock
add
push
xor
mov
scas
aaa
mov
nop
(bad)
inc
out
aaa
pusha
pop
cmp
scas
fild
xor
test
fild
jnp
scas
ja
pop
and
rsqrtps
in
pop
pop
les
nop
add
jnp
sbb
inc
adc
push
mov
pop
adc
xchg
sar
nop
pop
push
sub
inc
loop
or
ins
mov
xchg
inc
gs
cmp
xor
add
xchg
pushf
adc
or
(bad)
bound
add
inc
jmp
loopne
mov
out
xchg
(bad)
xchg
lea
sar
add
add
add
int
mov
add
aas
test
push
movzx
test
inc
inc
push
lock
clc
pop
ss
adc
push
ds
fld
dec
jne
xor
loopne
add
loope
push
xor
stc
sbb
xchg
inc
fisttp
and
ds
add
adc
loop
ins
lods
test
add
call
inc
in
test
(bad)
sub
or
test
jbe
mov
cld
mov
call
mov
push
fiadd
(bad)
ins
dec
dec
test
add
jmp
loopne
jl
and
add
sub
dec
add
scas
loope
sbb
sbb
sub
dec
push
cmp
movs
add
push
push
or
jmp
fdivr
mov
jecxz
xchg
push
aaa
outs
push
pop
mov
sub
mov
sar
or
test
pusha
adc
int3
inc
rcl
xchg
test
cmp
pop
push
cld
pop
push
adc
add
or
cmc
cld
mov
adc
call
add
dec
adc
out
sbb
jmp
les
xor
es
jne
je
repz
dec
(bad)
adc
jnp
mov
pop
call
xchg
inc
inc
dec
push
mov
push
pusha
ret
inc
popa
enter
xchg
or
jo
add
lds
xchg
add
(bad)
mov
adc
or
movs
inc
sbb
pop
jl
out
enter
ret
pop
mov
adc
push
add
pusha
lock
pop
or
pop
pop
or
sub
loopne
out
push
push
mov
scas
movs
enter
push
cmp
or
inc
rol
inc
shl
mov
aad
je
jmp
xchg
mov
or
adc
jp
test
aaa
mov
mov
aad
mov
ret
sub
or
push
jecxz
in
rol
push
mov
cmps
jp
sbb
ror
popa
fdiv
push
punpcklwd
popf
aam
enter
cmp
mov
and
mov
icebp
jmp
mov
xor
cmp
cmps
retf
add
enter
adc
mov
lea
pop
and
scas
adc
call
call
shl
xchg
mov
sbb
add
inc
ins
out
sti
adc
sub
cwde
lock
jmp
push
mov
dec
out
cmp
punpckldq
add
fs
push
popa
jbe
popa
inc
mov
pop
xor
mov
outs
ja
shr
out
mov
or
das
mov
adc
jmp
mov
fld
add
pushf
add
cmp
pop
fiadd
pop
fild
mov
nop
fiadd
in
push
xor
in
jmp
fdivr
add
pusha
cvtps2pd
xchg
dec
imul
inc
add
dec
pop
stc
xchg
push
loopne
fidiv
mov
or
push
add
lahf
sysret
mov
mov
add
sbb
out
cmp
cmp
xchg
jge
or
ror
dec
pop
call
inc
aaa
sub
mov
test
aam
ins
cwde
or
and
in
adc
add
in
fadd
test
push
dec
pop
in
push
cmps
xchg
ficomp
repnz
dec
adc
lsl
icebp
push
in
shl
sub
push
or
pop
cmps
(bad)
push
int
sub
inc
imul
test
aas
es
je
push
cmp
popa
(bad)
(bad)
pop
inc
adc
add
fdiv
adc
push
outs
inc
outs
out
outs
inc
dec
mov
shr
inc
addr16
inc
(bad)
inc
cli
or
inc
mov
out
cmp
xchg
cmp
pusha
cdq
xor
xor
imul
push
(bad)
push
ja
cmp
inc
movq
xor
sbb
cmc
pop
push
test
push
(bad)
push
mov
scas
loopne
pop
les
std
add
adc
mov
push
and
pop
into
push
fcom
in
sahf
loopne
fisub
add
push
pushf
loop
jecxz
mov
mov
int3
into
aam
or
push
not
int3
out
ror
shl
imul
test
loopne
add
clc
xchg
call
fild
xchg
ss
sub
pop
aaa
js
cwde
imul
jnp
fnstcw
push
cld
(bad)
clc
call
sahf
aaa
clc
lods
xchg
pop
rcr
ds
xor
mov
shr
push
jne
mov
jecxz
cmovle
cvtps2pd
prefetch
(bad)
psubq
mov
unpckhps
movhps
movhps
xlat
cmc
mov
repnz
(bad)
pmulhw
(bad)
das
add
add
xor
inc
ret
rdpmc
add
imul
mov
add
movups
and
xor
sti
add
jb
addr16
push
add
add
add
data16
jo
add
sbb
enter
sti
or
leave
(bad)
sbb
inc
daa
ror
sub
pop
adc
xchg
xchg
sbb
pop
aad
and
jecxz
fmul
stos
add
add
fld
cmp
pop
outs
dec
mov
add
cmps
fist
or
lea
fiadd
dec
jns
clc
in
loopne
cmps
fs
jns
jb
or
dec
push
imul
outs
out
dec
jne
fmul
out
ss
inc
call
sbb
adc
shr
mov
dec
pop
adc
adc
icebp
fmul
inc
add
popa
icebp
sbb
and
fmul
pop
aas
add
add
inc
jns
sbb
shl
leave
sub
stos
adc
in
and
imul
loopne
push
leave
fmul
pop
dec
add
fmul
push
and
std
popa
fsubr
inc
scas
xchg
leave
push
xchg
sbb
adc
or
push
sub
test
adc
push
add
rcr
dec
adc
fmul
push
jnp
inc
or
cmc
mov
ss
jae
inc
test
mov
leave
add
das
push
arpl
xor
add
and
lea
cmp
sub
mov
sub
mov
inc
loopne
and
(bad)
adc
xor
sti
gs
add
add
or
xchg
or
add
shl
push
das
pop
stos
iret
mov
test
mov
jae
xlat
xchg
mov
or
pop
add
outs
sub
cwde
call
imul
and
mov
cmp
outs
mov
ret
sub
cmova
fbld
inc
cmp
and
add
leave
adc
in
or
stc
push
pop
adc
outs
mov
dec
jg
dec
dec
fadd
ins
add
sti
rcr
push
add
out
add
or
xchg
add
aaa
jle
sub
or
xor
cmp
xor
xor
mov
lds
popf
imul
push
mov
or
sti
fwait
inc
dec
rol
(bad)
xchg
push
adc
or
lds
push
dec
dec
retf
je
imul
test
les
lea
inc
and
ins
gs
sub
push
xor
scas
je
xor
push
jg
fst
jmp
lods
or
addr16
inc
cmp
dec
jle
sahf
pop
retf
pop
iret
push
sbb
adc
sub
add
outs
push
mov
hlt
mov
test
mov
pop
add
pop
mov
add
mov
pop
inc
sbb
add
pop
inc
xchg
test
daa
add
in
or
add
retf
arpl
add
push
cld
and
ja
fadd
call
nop
inc
mov
test
sbb
mov
adc
lea
add
outs
pushf
bound
xor
cmc
mov
dec
inc
std
into
sub
add
clc
add
fcmovnb
push
inc
or
inc
stos
add
dec
shl
mov
add
and
ins
aam
ficom
js
lock
adc
pop
jno
or
inc
inc
iret
mov
fxch
aam
inc
or
dec
sbb
loopne
xchg
loopne
fdiv
adc
mov
add
je
jmp
lea
adc
push
inc
aam
jo
sbb
pusha
add
ss
inc
cmp
add
add
call
popa
sub
fadd
loop
in
test
cwde
add
push
dec
and
or
lock
dec
ja
stc
ret
nop
or
add
mov
aaa
xor
into
mov
mov
in
mov
aam
xchg
loop
jmp
test
fdivr
clc
mov
or
jb
(bad)
pushf
mov
add
ficom
jecxz
pop
outs
sbb
wbinvd
cmp
add
(bad)
xor
cwde
mov
rcl
test
mov
or
sar
mov
pop
ret
sub
jb
xchg
in
ins
and
rcr
and
movs
clc
fisttp
add
cli
add
mov
add
(bad)
fmul
xor
or
push
outs
clc
imul
je
lea
xchg
stos
dec
aas
ins
cmps
push
and
sar
fadd
leave
add
test
mov
push
xchg
mov
adc
fs
or
imul
(bad)
adc
dec
mov
nop
jne
add
inc
in
shr
call
pop
or
add
mov
iret
pop
mov
push
cdq
push
ret
or
imul
ins
pusha
sti
push
push
push
jns
iret
cld
jmp
daa
cmps
mov
imul
push
push
sub
test
xor
mov
push
dec
mov
dec
xchg
cmp
test
sbb
pushf
jo
jecxz
and
cmp
mov
nop
mov
adc
push
shl
sbb
mov
repnz
lods
adc
dec
or
push
pop
ja
imul
or
add
fmul
xor
pop
lea
mov
dec
adc
sbb
inc
add
int3
add
xchg
xor
adc
adc
push
rol
xor
jl
scas
inc
cmp
lea
push
inc
fs
sbb
mov
enter
pop
jmp
cmp
je
pop
aam
mov
push
add
sub
mov
sti
rcl
mov
mov
punpckhdq
pushf
movs
dec
pop
movs
fadd
enter
cs
dec
pop
xchg
jge
inc
arpl
xor
js
jb
je
aas
leave
push
ss
or
inc
shl
xor
sub
fcom
sub
inc
or
fsubr
imul
shl
pop
test
jmp
dec
sar
adc
loopne
inc
add
push
adc
sbb
int
sub
pusha
loopne
inc
mov
push
and
sbb
dec
shl
fsub
sbb
and
test
es
jo
jecxz
xor
cmps
xchg
mov
stos
push
rcl
shl
cwde
ja
add
cmp
lds
aas
stos
inc
adc
sub
add
push
cli
and
hlt
inc
mov
fst
xor
jl
mov
xchg
cmp
add
sub
addr16
push
in
or
into
push
mov
adc
push
cwde
hlt
outs
mov
or
(bad)
imul
push
pop
xor
sbb
cmp
lock
mov
mov
lahf
or
aam
or
les
ins
movs
xchg
ret
out
(bad)
out
add
ret
lahf
inc
xlat
test
jns
sub
ja
test
pop
ins
jo
inc
fs
and
cmp
push
cmp
lods
xor
mov
unpcklps
push
sbb
inc
xor
xor
adc
mov
nop
jb
pop
mov
aam
jecxz
xor
retf
lods
inc
int3
push
out
xor
lds
rol
cmp
pop
mov
scas
or
push
sbb
js
or
pop
sbb
fstp
inc
mov
mov
fwait
loop
cmc
inc
loopne
ret
sar
cmp
dec
fild
xchg
arpl
aas
out
les
sub
fsubr
repnz
imul
cmc
pop
loopne
sub
cmps
or
push
or
loopne
push
add
dec
push
fild
push
mov
push
call
or
cmp
inc
loop
ror
xchg
adc
xor
inc
and
cmp
jo
sub
inc
ds
fstp
and
jmp
sub
call
inc
jb
clc
xchg
sub
pusha
int
jno
add
rol
pop
or
shl
mov
inc
mov
dec
in
call
jo
push
popa
sbb
leave
ins
xor
xor
sar
add
cdq
jl
sbb
mov
mov
mov
xchg
jb
add
bound
adc
mov
(bad)
mov
dec
aas
out
ret
push
sbb
xor
sbb
adc
xor
sbb
jbe
mov
pop
jmp
hlt
or
and
xor
js
icebp
push
inc
xchg
popa
cwde
jo
cmp
outs
push
inc
pop
mov
fstp
xchg
clc
add
xor
xor
mov
cmp
dec
cld
cmp
jne
push
or
fwait
ror
fld
push
call
mov
fs
arpl
mov
add
mov
jg
add
in
call
push
mov
gs
lock
push
into
scas
xchg
push
jnp
test
add
push
mov
cmps
in
cmp
cmp
aam
clc
add
adc
mov
add
into
bound
cmp
fiadd
add
int
inc
test
mov
bnd
mov
movs
clc
arpl
add
jo
psubb
(bad)
inc
push
(bad)
pop
or
xor
cmp
mov
fsubr
adc
(bad)
fnstenv
test
stos
retf
aam
fadd
fs
ror
xchg
mov
mov
rol
push
mov
cli
sbb
or
mov
shr
mov
push
inc
jno
and
icebp
sub
test
push
mov
cwde
pop
pop
(bad)
iret
pop
loopne
(bad)
fisub
mov
call
jge
xchg
xchg
xchg
inc
fnsave
lock
inc
push
outs
addr16
(bad)
pop
and
add
mov
test
rcr
or
mov
test
je
xchg
and
or
cwde
xchg
and
add
lahf
xor
cmc
repz
mov
jecxz
movs
cmp
fnsave
pop
pop
cwde
and
cmps
pop
fiadd
add
cmp
shl
aaa
xor
jle
cmp
mov
jle
add
push
mov
shl
pop
mov
xor
xchg
cwde
test
or
inc
mov
mov
mov
and
(bad)
std
rcl
mov
cld
sub
and
aam
cmp
mov
sub
pop
pop
sbb
rcl
fsub
fbld
pop
test
mov
jecxz
test
jl
add
enter
add
pop
rcr
mov
mov
push
daa
pop
pop
(bad)
sar
cmps
stc
ror
xor
push
pop
pop
stc
(bad)
aam
popa
rcl
fdiv
dec
mov
lods
hlt
sub
add
lds
test
(bad)
mov
push
shl
test
sbb
cld
inc
lea
push
das
or
mov
(bad)
mov
shr
mov
jecxz
and
rcpps
cmp
sbb
mov
xor
or
adc
lock
push
cld
add
mov
xchg
loop
sub
and
les
push
and
xlat
(bad)
fdivr
call
test
mov
inc
add
jno
pop
lock
mov
sub
dec
add
cs
aam
inc
and
ret
ins
das
sbb
dec
mov
mov
clc
dec
nop
sahf
push
cmp
jmp
std
mov
mov
sub
sbb
push
jecxz
push
and
hlt
push
imul
shl
push
inc
cmp
jne
push
outs
mov
add
adc
dec
daa
pop
mov
xchg
jmp
mov
sub
adc
xchg
push
scas
add
cmp
or
inc
out
data16
and
das
nop
mov
inc
push
push
or
pop
mov
ret
pop
sar
test
lea
xor
es
mov
shl
inc
mov
and
hlt
push
imul
pop
popa
jo
aad
push
cmp
mov
sbb
pop
aad
lahf
(bad)
dec
adc
pop
jmp
jns
out
add
jno
(bad)
cmp
pop
adc
(bad)
retf
jmp
(bad)
sub
pop
aam
arpl
out
xor
sbb
shr
xchg
dec
test
add
push
lds
or
mov
mov
add
adc
cwde
das
add
xchg
das
js
(bad)
push
mov
jl
add
fs
adc
xchg
jbe
ret
xor
test
fstp
add
add
cmp
dec
mov
push
or
push
mov
stos
push
mov
maxps
fs
pop
adc
and
jno
xor
pop
das
daa
pop
inc
xchg
and
cwde
xchg
mov
mov
pop
ror
adc
in
pop
push
pop
jne
sar
in
fldenv
lock
sbb
jl
rol
ja
int3
or
cmp
inc
outs
aam
ins
or
loope
add
in
test
xchg
sbb
sub
(bad)
pop
jmp
jge
stc
mov
sub
dec
dec
add
mov
hlt
sub
jl
inc
and
inc
or
mov
fcom
lahf
cmp
imul
cmp
sbb
lea
mov
inc
add
mov
sub
loopne
inc
cli
cmps
int
add
xchg
imul
movs
mov
add
(bad)
mov
mov
test
xor
call
adc
ja
fstp
jmp
jmp
mov
add
lea
call
out
and
cmp
or
pop
cwde
pop
mov
pop
adc
mov
add
inc
and
test
adc
push
push
jmp
fcom
dec
and
retf
popa
sbb
adc
in
retf
jmp
mov
test
shl
in
lea
mov
in
inc
xor
push
outs
mov
icebp
movs
ret
push
enter
mov
pop
aam
clc
dec
xchg
adc
rol
ja
je
dec
call
mov
lock
test
push
(bad)
sti
push
or
test
adc
scas
or
pop
mov
adc
and
pop
sub
mov
cmp
movs
sbb
cmp
call
cmc
mov
test
xor
xor
pop
jne
aam
xchg
cmp
sub
movs
xchg
cmp
fdiv
neg
jmp
out
or
test
dec
div
jp
movs
or
push
xchg
cmp
retf
adc
inc
neg
sbb
push
pop
fs
test
outs
or
nop
push
add
test
dec
push
push
inc
aam
push
mov
pop
loopne
(bad)
push
dec
imul
sbb
xor
dec
das
pop
sub
lahf
mov
add
sbb
inc
icebp
mov
xor
dec
test
push
dec
cs
or
sub
imul
js
mov
inc
cs
pop
inc
xor
mov
mov
test
and
ret
jmp
inc
xor
popf
fld
(bad)
mov
je
jp
pop
rol
or
jns
iret
pop
and
shl
adc
dec
inc
pop
sbb
and
add
jmp
mov
push
outs
jae
gs
cmp
out
cmp
push
mov
jnp
ja
loopne
fsubr
fmul
loop
enter
xchg
mov
loope
and
pop
hlt
in
inc
lock
mov
and
test
out
push
ins
adc
in
sub
cmp
pop
inc
jmp
fisub
inc
jmp
inc
add
push
out
retf
sbb
dec
add
lea
outs
push
adc
ja
retf
out
punpckhdq
push
ja
dec
push
add
add
pushf
inc
aam
push
add
xor
leave
icebp
cmc
in
mov
or
mov
or
repnz
lea
test
loop
test
es
lods
ret
xchg
stc
add
out
and
push
fldcw
or
push
inc
xlat
fild
or
and
inc
push
mov
lock
adc
mov
sub
add
inc
pusha
dec
pop
aas
add
add
or
fiadd
outs
arpl
je
repnz
inc
repnz
or
repnz
add
jno
adc
jg
inc
add
jl
or
mov
inc
and
pshufw
ret
xor
outs
pop
cwde
repnz
dec
arpl
push
out
add
push
add
inc
pusha
nop
stc
call
cwde
pop
mov
or
repz
movs
and
jno
pop
test
jp
daa
add
pop
rcl
inc
(bad)
daa
dec
in
add
xchg
pop
mov
add
adc
dec
sub
adc
sbb
add
cmp
and
xor
xor
cdq
test
cmp
test
test
mov
xlat
idiv
adc
(bad)
clc
lahf
jg
ds
jmp
cdq
add
inc
stc
sub
adc
psubw
mov
prefetch
enter
jmp
scas
adc
outs
inc
push
cs
mov
mov
mov
push
jb
jge
pop
inc
cld
dec
mov
movs
mov
adc
push
std
pop
adc
xchg
unpckhps
fstp
xchg
dec
pop
add
sbb
ja
or
dec
sbb
jnp
in
retf
fistp
pop
sbb
loop
sbb
in
sbb
jg
xor
push
add
nop
sub
add
(bad)
popf
push
aas
sahf
(bad)
fisub
jmp
add
and
add
fcmovbe
in
fisub
dec
mov
outs
xlat
test
push
push
daa
add
sub
sub
or
push
add
push
pop
out
jecxz
cmp
jo
push
in
sbb
add
adc
xchg
mov
mov
gs
and
mov
pop
inc
sbb
inc
sbb
xor
add
js
pop
stos
outs
int
inc
push
cmps
push
pop
push
outs
dec
xchg
movs
scas
sbb
mov
add
leave
xchg
jecxz
mov
xor
test
cmp
outs
arpl
popa
scas
jne
mov
fimul
mov
sub
popf
pop
arpl
push
ins
test
add
outs
mov
or
(bad)
pop
(bad)
sbb
inc
sub
cmp
sub
and
nop
add
mov
jns
push
sbb
pusha
(bad)
adc
int3
ins
jns
loopne
out
adc
repz
xchg
int3
mov
retf
ret
pusha
dec
cli
and
mul
or
inc
mov
and
in
loop
push
lahf
sar
bound
sub
lahf
pop
inc
dec
push
push
lahf
push
arpl
lea
add
or
test
inc
xchg
aad
icebp
add
add
xchg
pop
xor
push
popa
(bad)
xlat
mov
adc
and
pop
cmps
jp
jo
inc
add
xchg
ror
sbb
push
imul
pop
loopne
adc
pop
cwde
jb
xchg
or
or
rcl
cmp
add
sbb
and
(bad)
leave
lods
or
add
push
sub
fs
mov
push
add
add
popf
cmp
clc
and
add
add
fistp
jnp
sbb
and
adc
test
or
xor
adc
sbb
push
xchg
pop
and
or
mov
and
scas
mov
push
add
or
pop
push
and
add
cmp
pusha
add
pop
jmp
sub
add
push
add
shl
xchg
mov
mov
pop
push
loopne
call
sbb
push
std
adc
pusha
xchg
adc
or
inc
arpl
add
xchg
or
test
mov
dec
push
call
repnz
retf
fnstcw
dec
pop
hlt
or
js
add
add
add
jge
inc
add
sub
pop
pop
add
inc
jo
sbb
sub
push
lds
add
or
out
push
adc
retf
inc
sbb
adc
in
add
pop
push
mov
or
cmp
clc
pop
ret
mov
mov
add
test
mov
loope
fadd
inc
sub
loopne
cmp
mov
ins
and
add
enter
inc
fst
dec
pop
inc
sub
sbb
sub
sbb
clc
ins
ja
loop
and
idiv
sbb
mov
dec
add
and
push
adc
dec
ss
mov
inc
mov
outs
mov
pop
pop
add
sub
add
hlt
pop
sub
dec
or
mov
jno
ror
mov
inc
mov
push
addr16
test
loopne
rol
jmp
pop
sbb
xchg
or
jnp
and
push
mov
pop
add
pop
pop
add
mov
push
xchg
and
dec
out
sbb
mov
sub
shrd
push
sbb
cmp
adc
jmp
push
inc
ret
push
and
in
shl
aaa
fld
add
sbb
sbb
repz
mov
jno
movs
add
dec
aam
out
jmp
pop
out
add
add
xchg
fiadd
add
jbe
or
sub
dec
or
add
and
add
in
pop
idiv
sub
push
cmp
jle
or
test
div
jne
and
test
adc
in
loopne
in
and
(bad)
push
sbb
je
lods
push
add
fadd
add
aad
pop
jmp
out
adc
mov
iret
mov
or
mov
jecxz
cmp
retf
jbe
inc
or
imul
fsub
in
inc
mov
pop
add
jg
div
inc
add
pop
arpl
retf
std
and
call
leave
ret
adc
xor
jl
popa
stc
ins
cmp
dec
inc
or
mov
popa
sbb
add
push
dec
adc
dec
pusha
mov
call
xchg
mov
aaa
xchg
mov
sbb
xor
shl
fdiv
fisttp
jle
cmp
fild
dec
adc
push
pop
adc
ins
mov
or
out
movs
inc
popa
push
ret
dec
out
out
inc
adc
scas
mov
push
addr16
in
or
adc
push
sub
inc
ins
push
clc
repnz
cmp
inc
xor
inc
hlt
mov
xchg
sbb
mov
call
cmps
fcmovnb
pop
ja
add
or
xor
add
mov
jne
mov
clc
adc
js
push
and
clc
jae
inc
adc
sbb
inc
ret
or
in
mov
and
add
cmp
push
cmp
mov
ins
jmp
call
cs
jp
loop
call
add
pop
mov
adc
dec
sar
xchg
xchg
popa
js
inc
dec
int
or
push
or
outs
lea
jo
push
jmp
div
mov
dec
lock
adc
jmp
dec
add
int3
jae
fadd
mov
jg
pop
in
inc
mov
pop
out
clc
push
push
outs
cdq
clc
add
ds
xchg
fdivr
and
pop
rcr
jmp
ins
ins
daa
jle
nop
dec
pop
ins
shr
mov
stc
cmp
or
jmp
cmps
and
inc
push
push
jp
sahf
mov
aam
mov
or
out
sahf
inc
push
fs
xchg
jns
out
mov
ret
outs
mov
mov
xchg
add
and
addr16
cmp
and
fs
and
sbb
pop
ins
push
movs
outs
mov
imul
fadd
in
(bad)
movs
imul
inc
xor
enter
test
inc
sbb
adc
mov
or
in
sbb
outs
or
mov
cmp
jmp
sbb
(bad)
and
lods
ins
pop
dec
mov
jmp
fild
jmp
sbb
add
sbb
shl
aaa
mov
lock
psubw
in
push
std
adc
sbb
or
push
in
das
mov
dec
fcom
dec
add
int
js
xchg
add
xlat
push
mov
mov
nop
mov
mov
hlt
dec
and
pop
xor
ja
jne
idiv
add
leave
push
call
add
outs
outs
adc
ret
retf
jp
dec
pop
lods
mov
outs
les
adc
pop
dec
add
std
push
cmp
pmuludq
out
jle
sub
mov
cmc
call
sahf
lock
jno
or
pop
jmp
or
push
sbb
dec
fs
add
sub
adc
div
adc
or
xor
dec
test
add
or
aas
xchg
dec
add
bound
xchg
sbb
xchg
add
addr16
mov
adc
jg
xchg
mov
or
lock
inc
add
adc
in
mov
or
daa
cmp
lea
not
and
mov
pop
imul
imul
sbb
jo
call
jmp
jae
adc
fisubr
or
add
or
push
sbb
push
jge
or
or
xchg
movs
ss
add
gs
mov
retf
or
xor
data16
scas
neg
dec
pusha
or
inc
jns
adc
dec
les
das
or
je
pop
ret
test
push
xor
adc
mov
push
pop
inc
mov
add
inc
inc
lea
or
test
adc
gs
lods
vcvtdq2ps
add
out
or
cmps
xchg
cmp
lahf
outs
and
rcl
outs
ins
pop
sbb
xor
push
ja
mov
or
sub
dec
or
fiadd
emms
inc
gs
mov
mov
pop
mov
out
add
add
outs
add
into
xor
mov
in
movs
dec
lods
push
out
pusha
xchg
pop
movs
ja
inc
or
pop
cmp
adc
add
xor
add
inc
and
stos
and
int
sbb
mov
pop
pop
add
push
inc
sbb
cmp
das
popa
push
xchg
push
jl
xor
sbb
fisttp
xchg
hlt
sbb
push
mov
ja
xor
inc
push
push
cmp
add
add
pushf
mov
or
sub
and
adc
cmp
cmp
cs
push
or
out
lock
sub
push
mov
fs
mov
cs
sub
push
(bad)
or
lock
add
outs
sub
or
ja
mov
pop
or
adc
sub
adc
or
xor
dec
xchg
or
xchg
add
sbb
push
mov
arpl
addr16
mov
rol
push
scas
dec
daa
mov
sbb
sbb
fld
cmp
pop
dec
dec
add
push
xchg
push
ret
sbb
xchg
pop
jno
dec
ret
inc
push
pop
popa
jo
(bad)
cmp
add
pop
lds
add
sbb
aas
sbb
fs
mov
test
add
add
cli
je
daa
outs
or
shr
stos
add
and
adc
jg
cld
ret
psrlw
cmp
ins
push
or
je
jp
mov
xor
arpl
jno
(bad)
test
test
leave
mov
adc
and
mov
es
push
imul
xchg
lock
adc
call
fbstp
xor
push
sub
jmp
fmul
lea
inc
rcr
push
add
push
mov
jmp
lahf
xchg
push
fs
xor
add
shl
retf
dec
(bad)
xchg
inc
inc
dec
loop
(bad)
xlat
xor
mov
jge
xchg
xchg
jecxz
ror
mov
jle
cmp
pop
adc
mov
add
je
push
pop
inc
call
mov
cwde
inc
inc
ret
pop
das
sar
outs
daa
cmp
jmp
mov
cs
sahf
cmp
mov
sbb
xor
push
dec
into
dec
or
and
pop
fld
loop
mov
inc
sbb
add
je
adc
add
inc
sbb
call
mov
imul
pop
pop
pop
push
inc
and
jo
dec
sbb
mov
inc
hlt
imul
cmp
jl
adc
addr16
or
(bad)
push
clc
ret
rol
clc
inc
ins
jb
sbb
xchg
fild
xor
push
jae
and
popa
mov
ja
jo
pop
clc
pop
fmul
loop
pusha
or
cmp
or
leave
cdq
xlat
cmps
or
test
and
add
mov
in
xchg
sar
inc
xlat
pop
sub
test
add
pop
sar
pop
inc
cmovp
pop
dec
add
cmp
and
mov
pop
mov
test
lock
cmps
or
inc
jo
mov
pop
sbb
push
cmps
dec
jl
adc
pop
push
popa
imul
je
and
stos
adc
pop
dec
or
stos
ss
or
cmps
or
pop
in
das
sbb
icebp
mov
xchg
add
gs
imul
test
push
xchg
and
pop
mov
adc
addr16
sub
adc
mov
and
je
aam
into
in
push
cvtps2pd
push
inc
push
and
fild
xor
dec
cmc
push
fsubr
inc
and
pop
adc
sbb
repz
and
jno
rcr
and
pop
push
mov
lahf
sub
out
cmp
(bad)
mov
add
sbb
inc
and
inc
dec
sbb
mov
sbb
out
cmp
adc
and
inc
inc
jo
xchg
adc
sbb
loopne
fwait
std
add
sub
and
and
mov
pop
addr16
imul
mov
lods
sbb
dec
and
addr16
and
pop
adc
popf
fisttp
femms
iret
or
adc
iret
cmp
cmp
cld
and
in
adc
pop
mov
add
add
mov
push
jo
jns
(bad)
fnsave
fwait
out
cmp
push
adc
pushf
pop
add
jbe
jbe
xor
sbb
mov
pop
sub
rol
outs
xor
in
ss
pop
cmp
ds
add
add
lods
dec
add
sub
inc
mov
jae
mov
sbb
addr16
ja
adc
add
or
mov
or
xor
repz
sti
inc
js
inc
sbb
out
test
inc
call
lds
shufps
jmp
stos
mov
iret
pop
and
cmp
sub
iret
in
ss
pop
jo
jbe
pop
sub
push
add
adc
and
jl
pop
ja
fild
xor
ror
out
add
mov
ss
pusha
adc
mov
(bad)
cmp
cmp
inc
and
fwait
lock
mul
xchg
and
pop
cld
das
add
or
sbb
outs
jmp
pop
inc
lock
add
pop
(bad)
ja
push
enter
adc
mov
push
outs
imul
add
in
scas
fisubr
add
xor
and
mov
mov
mov
outs
sub
add
sub
(bad)
stos
loop
inc
js
cmove
into
in
xchg
test
pop
push
orps
pop
push
inc
jne
pop
xor
push
xchg
out
cmp
inc
mov
das
xchg
mov
adc
sbb
adc
xor
sub
push
aaa
shr
arpl
mov
psrld
dec
add
and
stos
add
mov
xchg
rol
setle
sbb
imul
popa
out
pop
inc
mov
shl
xchg
and
outs
pop
push
xchg
or
and
inc
jo
add
je
or
mov
pop
dec
pop
scas
in
jbe
pop
xor
pop
jo
inc
punpcklbw
or
inc
scas
and
push
mov
arpl
stos
(bad)
pop
push
xor
mov
adc
mov
pop
sbb
rol
and
mov
loopne
jle
jae
mov
pop
push
sbb
js
adc
mov
and
das
(bad)
mov
bound
add
or
xor
jo
jb
and
jo
aam
inc
in
cdq
frstor
sub
xor
lock
enter
mov
jo
add
or
lock
inc
mov
add
inc
jo
mov
xchg
setp
fist
mov
xchg
frstor
in
push
sbb
and
(bad)
mov
inc
add
mov
icebp
xor
xor
inc
pop
adc
pop
icebp
jns
mov
and
es
xor
pop
push
dec
add
push
arpl
test
fcomp
ss
ss
inc
jp
cmps
sbb
push
add
add
aaa
daa
adc
adc
sub
or
rcl
add
dec
out
mov
pop
cmp
sbb
sti
push
and
es
add
popa
lods
add
push
out
pop
hlt
xor
add
sub
fnstsw
add
push
xchg
or
ficomp
jb
ss
sbb
pop
in
cmp
fucomip
cs
xchg
dec
add
cmps
jbe
(bad)
fiadd
cmp
xor
add
or
fs
(bad)
mov
pop
jno
sub
es
xchg
push
addr16
dec
inc
push
and
arpl
jo
enter
dec
jae
pmaxub
pusha
xlat
xor
push
add
shl
xchg
sbb
pop
pop
stos
popa
and
push
out
inc
outs
mov
imul
sub
ja
xor
push
inc
pop
fdiv
xchg
(bad)
pop
mov
inc
and
sub
in
or
adc
outs
mov
xchg
lea
dec
shl
mov
push
bound
or
lock
mov
xlat
xchg
inc
pop
mov
add
add
sysenter
add
fcomip
pop
repnz
inc
add
add
add
cmp
push
pop
imul
ja
inc
or
xchg
push
inc
mov
mov
push
xchg
or
fs
test
push
lahf
push
push
xor
or
popa
fcmovnb
icebp
cmp
sub
or
pop
pop
test
inc
fbstp
mov
fist
mov
lahf
dec
xlat
and
jo
mov
add
mov
push
xor
fwait
xchg
js
push
aaa
or
out
ss
inc
xor
fidiv
push
xor
inc
mov
xor
mov
xor
inc
xor
mov
aas
enter
adc
dec
add
xor
and
add
dec
xor
dec
imul
daa
push
jb
pop
push
push
xor
(bad)
sub
fisubr
dec
cmovae
xor
jmp
add
ins
add
add
lahf
push
adc
fwait
dec
or
addr16
pop
pop
imul
add
push
adc
jnp
xor
xor
push
xchg
mov
add
xchg
sbb
push
add
dec
sub
mov
les
push
dec
add
cmp
mov
or
xchg
adc
adc
dec
jp
cmps
adc
lds
and
mov
ret
ss
xor
push
mov
mov
outs
xor
data16
popa
movsx
js
pop
aaa
add
rol
inc
nop
and
iret
add
ja
pop
pop
adc
ret
inc
loop
adc
pop
mov
inc
xor
or
push
cmps
xor
push
dec
fistp
jmp
imul
and
push
add
ret
outs
add
lock
mov
cmovne
push
aaa
popa
pop
xor
push
pop
aaa
test
outs
inc
not
adc
sub
xchg
outs
push
fs
cmp
add
lahf
fbstp
inc
mov
dec
lahf
(bad)
ins
inc
pop
jnp
xlat
outs
add
adc
dec
mov
rcr
jge
sub
add
fbstp
add
mov
add
inc
outs
adc
jg
inc
lahf
push
add
inc
out
ins
daa
pop
add
inc
xor
rol
pop
cmp
jno
sbb
mov
sub
mov
ret
add
add
aas
xor
sub
inc
aaa
test
dec
dec
pop
add
mov
fbstp
adc
add
(bad)
pop
or
add
add
rdpmc
inc
pop
mov
pop
and
sbb
loopne
aaa
push
adc
fidiv
aaa
add
div
add
aaa
add
mov
ss
aaa
add
fadd
push
push
ja
fs
add
xchg
sub
pop
mov
aaa
mov
dec
or
sub
add
xor
cmp
xchg
rcr
cmp
mov
sub
push
cmps
or
xor
cmp
ins
inc
mov
xor
adc
inc
aaa
stos
pop
frstor
xor
inc
enter
cmps
idiv
jo
inc
jb
xor
or
mov
in
dec
mov
add
fcmovu
aaa
add
arpl
outs
addr16
jo
sbb
out
inc
aaa
add
inc
jo
pop
aas
inc
lock
or
jmp
sbb
dec
dec
aaa
pop
jbe
cmp
xlat
out
shl
mov
xor
add
daa
loopne
or
outs
add
add
out
inc
lea
pop
ja
xor
mov
pop
adc
sub
mov
ret
pop
jg
add
mov
shl
xor
mov
add
mov
inc
cmp
inc
add
and
pop
xchg
dec
cmp
(bad)
fild
inc
mov
ficomp
inc
cli
ins
pop
aaa
outs
xor
(bad)
out
aaa
push
in
mov
mov
scas
xor
loop
xor
xor
cmp
xor
inc
fsub
aad
mov
pop
test
mov
xchg
mov
fs
loope
jg
loop
fcom
dec
arpl
add
out
pop
sbb
je
cmp
add
mov
add
fisubr
rcl
adc
addr16
stos
shr
mov
rol
pop
inc
inc
or
(bad)
aad
jae
scas
push
test
and
cmp
jne
mov
aaa
inc
dec
dec
xor
xor
fwait
nop
sub
xchg
pop
push
and
daa
pop
push
inc
sub
repz
bound
aaa
inc
pop
xor
inc
cmp
scas
inc
and
stos
adc
inc
lock
xchg
cmp
xor
aad
mov
xchg
aaa
adc
in
adc
lds
aas
retf
push
pop
or
xor
test
test
adc
(bad)
dec
les
popa
add
dec
bound
xlat
pop
jb
lock
or
push
add
xchg
sbb
inc
xor
push
mov
jg
xor
movs
cmps
cmp
push
fsubr
sbb
(bad)
push
adc
dec
adc
ja
ja
shr
(bad)
pusha
xor
xor
xlat
outs
and
push
addr16
retf
jae
rcl
mov
push
or
lahf
adc
ja
sbb
xor
stos
mul
and
add
aaa
daa
xchg
fimul
add
dec
xor
xor
or
add
das
xor
ds
gs
sbb
push
sbb
sub
loope
outs
xor
rol
lahf
out
push
cmps
call
xor
push
inc
outs
dec
add
bound
cmp
sbb
test
dec
mov
inc
cmp
aaa
adc
sub
xor
or
ss
aaa
add
jg
push
idiv
add
test
xchg
add
clts
cmp
mov
xor
in
mov
mov
sub
aaa
bound
inc
xlat
dec
movs
add
mov
push
ja
mov
push
mov
(bad)
fistp
aas
add
pop
and
add
sbb
pushf
cmp
xor
cmp
stos
loop
aas
cmp
xor
mov
sub
sub
xor
xor
jmp
mov
xor
rol
xor
add
add
cli
jmp
aaa
jne
or
mov
lea
inc
call
int
retf
ja
sti
rcl
pop
dec
ror
xor
xor
dec
lds
inc
xor
fbld
pop
inc
(bad)
push
popa
add
add
scas
arpl
popa
inc
push
mov
inc
add
test
sbb
leave
xor
jg
sbb
or
push
scas
xor
pusha
daa
adc
add
add
rcl
xor
retf
xor
sub
mov
outs
adc
fild
rcr
or
xor
aaa
out
rcl
jb
or
xor
push
(bad)
test
add
jae
imul
mov
add
inc
pop
stos
add
pop
mov
scas
dec
pusha
cmovnp
add
inc
cs
push
dec
dec
dec
mov
push
dec
pop
aaa
sub
or
dec
inc
push
and
cmp
inc
mov
add
xor
shl
xlat
add
inc
mov
or
jecxz
add
inc
inc
bound
shr
outs
push
leave
inc
xor
cmp
push
or
xor
cmp
xor
(bad)
inc
ja
dec
pop
sub
or
out
mov
add
add
cmp
or
mov
cmp
adc
pop
push
into
cmp
push
and
mov
push
stos
mov
dec
neg
fist
js
outs
add
add
ja
test
push
xor
pop
and
xchg
cmps
push
mov
jns
jne
iret
sub
adc
aas
cmp
lods
dec
pop
popa
into
inc
daa
adc
and
imul
mov
jecxz
or
outs
out
push
add
jecxz
outs
ror
mov
xchg
mov
test
mov
sub
cld
xor
xor
add
out
add
push
popf
and
add
adc
out
push
lds
das
outs
push
inc
and
push
shl
mov
ss
iret
mov
add
adc
mov
sub
and
xchg
enter
outs
add
add
adc
aaa
stos
int
or
aas
dec
scas
pop
and
cmp
inc
add
push
sub
inc
mov
pop
daa
bound
adc
pop
xor
ret
add
(bad)
xor
pop
adc
jecxz
sbb
pop
inc
and
adc
cmp
jecxz
sbb
xchg
test
mov
jne
bound
popa
aas
add
aaa
push
add
sbb
(bad)
mov
shr
or
(bad)
daa
xchg
fwait
inc
or
inc
add
jnp
jb
jg
ss
test
jne
aaa
out
shl
into
push
pop
xor
dec
or
sub
inc
jo
pop
xor
add
sbb
push
pop
push
pop
(bad)
xor
das
ja
fild
(bad)
mov
bound
js
pop
fwait
push
push
or
push
sub
inc
test
adc
xor
mov
add
iret
push
add
fisttp
aaa
and
test
mov
or
iret
push
add
aas
dec
add
inc
or
scas
pop
adc
imul
not
adc
xor
sub
adc
inc
add
sti
sbb
and
fsub
and
cmp
shl
pop
push
dec
adc
jno
out
xchg
into
push
cmp
jmp
mov
sub
pop
sub
mov
sub
push
lds
sub
(bad)
xor
das
mov
sbb
(bad)
adc
inc
loope
lea
xor
adc
mov
test
dec
(bad)
jg
push
shl
add
push
mov
adc
clts
es
xchg
addr16
push
daa
xchg
xchg
and
xchg
test
popa
les
outs
or
imul
add
dec
outs
cli
sub
xor
adc
xor
dec
and
push
test
mov
sub
add
cmpxchg
add
test
enter
sub
inc
sub
cwde
inc
iret
dec
push
dec
add
push
das
cmp
cmp
add
cmp
xor
div
cmps
and
rcr
inc
out
enter
xor
ins
xor
jae
and
out
aaa
xor
ins
je
out
sub
pop
dec
sub
out
aaa
shl
mov
cmp
inc
hlt
push
data16
dec
add
cmp
jl
cmp
xor
or
add
fisub
mov
push
or
dec
jo
shl
inc
jo
dec
ins
out
xor
push
jb
out
inc
cmps
mov
div
xor
in
mov
adc
div
outs
adc
pop
xchg
xchg
aas
push
pminub
adc
dec
mov
xor
xor
push
enter
aaa
popa
or
sub
popa
bound
test
xor
sub
inc
shr
test
push
push
adc
test
and
js
jecxz
(bad)
cmp
adc
clc
mov
add
xor
xor
add
cmps
xor
push
xor
push
adc
xor
adc
inc
aaa
add
add
sbb
test
je
push
or
or
jecxz
cmp
pop
or
daa
adc
dec
inc
fs
aaa
or
not
xchg
jne
popa
add
adc
dec
mov
cmps
test
xchg
iret
xor
push
jb
xor
jo
iret
xor
xor
push
in
xor
pop
leave
xchg
aaa
aaa
xchg
sbb
sbb
aaa
and
sub
add
push
jb
pop
xor
xor
ret
mov
push
enter
mov
test
rol
aaa
daa
leave
adc
mov
xor
mov
xor
sbb
and
xor
cmps
xor
adc
xor
push
mov
ss
in
ss
inc
fadd
or
scas
xlat
and
cmps
leave
add
and
and
cmp
out
sbb
(bad)
or
add
xadd
and
pop
ret
mul
dec
mov
xor
xor
jl
imul
jae
cmp
rcl
(bad)
cmp
loop
push
push
inc
xchg
(bad)
cmp
sbb
adc
add
dec
pop
cmp
xlat
add
fistp
add
mov
adc
outs
cmps
xor
push
loopne
mov
daa
rol
sbb
iret
fwait
iret
or
xor
pop
xor
int
jmp
aam
div
add
outs
or
imul
xor
mov
arpl
inc
xor
lahf
push
test
dec
ja
fsub
add
inc
lahf
(bad)
arpl
mov
cmps
mov
add
push
add
inc
dec
pushaw
and
dec
xor
add
lea
dec
xchg
pop
sub
mov
dec
add
lahf
out
dec
adc
cmps
out
sbb
inc
inc
push
dec
add
inc
push
inc
mov
push
das
or
add
or
rol
xchg
rol
xor
push
sub
mov
add
pop
stos
in
push
push
cmps
loope
in
push
add
add
mov
push
jmp
retf
push
mov
inc
jg
add
out
push
rcl
or
out
ja
outs
push
imul
sahf
dec
add
or
iret
daa
cmp
pop
cwde
mov
outs
daa
mov
xor
aaa
push
shl
xchg
or
ja
add
push
inc
mov
(bad)
mov
add
aas
push
outs
cs
adc
push
dec
xchg
or
add
neg
xor
dec
inc
inc
ret
add
add
test
sbb
push
sub
push
xchg
push
sub
add
outs
inc
repnz
add
cmp
xor
xor
and
push
test
inc
pop
adc
adc
sub
and
xor
or
adc
dec
dec
cmp
adc
jo
or
push
sub
sbb
pop
xor
add
adc
jb
iret
sbb
cmps
sub
sysret
leave
add
daa
xor
sbb
cmps
addr16
xor
shl
or
pop
daa
cmp
jae
gs
xor
and
xchg
shl
or
daa
xor
xor
stc
add
ss
and
ss
pusha
or
daa
xor
aaa
aaa
push
mov
sub
cmp
push
or
stos
cmp
ret
sbb
or
fwait
sahf
or
pop
add
add
aaa
cmp
ret
inc
jb
cmp
clc
rol
imul
or
mov
cmps
push
mov
push
add
inc
aas
pop
enter
push
aaa
cs
inc
cmp
test
inc
test
fmul
add
daa
aaa
pop
rol
adc
jle
inc
add
xor
outs
outs
add
jno
andnps
mov
pop
(bad)
and
stos
pop
dec
(bad)
iret
xor
pop
inc
aam
mov
mov
in
out
xor
mov
rol
movs
stos
xor
mov
jecxz
lods
adc
das
je
mov
adc
add
sub
xor
retf
add
(bad)
adc
xor
cmps
xor
xor
adc
xchg
jb
xor
add
xor
xchg
ja
cs
pusha
lahf
ins
daa
mov
scas
test
shl
xor
xlat
push
das
das
ja
mov
jae
sub
mov
iret
xor
adc
outs
sbb
add
jnp
test
push
add
scas
lods
iret
ds
fs
dec
dec
add
or
dec
fwait
push
imul
iret
xchg
ja
loopne
in
add
push
sub
or
mov
add
pop
adc
or
ins
jnp
data16
bound
outs
add
fs
jo
jle
ins
add
aaa
and
js
inc
xchg
movs
and
das
pop
addr16
dec
push
xor
pusha
add
mov
add
xchg
mov
mov
pop
inc
add
imul
mov
bound
push
js
add
movs
mov
fsub
inc
sub
xchg
adc
mov
daa
pop
mov
dec
rol
popa
add
lds
test
ud2
dec
sub
xchg
or
aad
pop
out
les
ins
add
mov
pushf
dec
xchg
and
rol
pop
imul
lds
or
loope
sbb
mov
mov
xchg
imul
xor
add
jg
lods
rcl
inc
xchg
push
add
mov
js
sbb
dec
cmp
loopne
pop
jb
push
pop
xchg
xor
xor
push
rol
mov
fldcw
jp
xor
sub
xchg
dec
mov
ret
ja
ret
stos
stos
addr16
add
aaa
aas
cmp
imul
dec
lds
add
les
xor
xlat
aas
or
(bad)
xor
aaa
lea
mov
inc
add
dec
scas
jo
popa
xlat
or
add
mov
out
mov
shr
imul
add
inc
bound
pop
and
in
not
jae
outs
add
stos
and
sbb
inc
test
and
xor
push
lods
jne
or
sbb
and
add
and
inc
push
enter
repz
push
test
dec
pop
inc
(bad)
arpl
jbe
call
test
xchg
ja
rcl
idiv
imul
sub
rcl
inc
scas
(bad)
and
push
cmps
test
push
adc
push
test
ins
push
sub
or
(bad)
jnp
push
fadd
scas
adc
mov
adc
pop
pop
dec
fwait
jb
add
xlat
push
sbb
push
test
inc
lds
ins
and
call
ja
adc
jg
xor
addr16
popa
add
aam
(bad)
fist
enter
sbb
iret
dec
ins
add
jg
xor
or
sbb
addr16
add
xor
sbb
xchg
and
popa
or
daa
add
arpl
mov
dec
dec
shl
loope
jecxz
mov
mov
lahf
pop
add
pop
ret
or
push
mov
pop
shr
inc
(bad)
pop
mov
adc
sbb
mov
xor
mov
cmova
mov
dec
cmova
inc
repnz
pop
sti
(bad)
js
pop
push
inc
scas
pop
add
add
inc
xor
push
dec
or
push
add
iret
aaa
je
test
in
cmp
pop
adc
xchg
push
push
add
ins
(bad)
test
mov
fild
mov
daa
pop
ja
or
xor
pop
pop
push
dec
pop
sti
push
add
sub
add
cmps
inc
pop
cmp
push
das
pop
aas
ror
pusha
inc
and
add
push
xchg
push
retf
mov
aaa
aas
popa
rol
punpcklwd
mov
lock
es
mov
add
xchg
out
or
sub
aaa
movq
inc
sbb
nop
or
scas
xor
mov
adc
mov
test
or
pop
xor
dec
dec
cmp
bound
or
iret
and
cmp
test
or
aaa
add
pop
pop
and
lahf
xor
sub
cs
push
dec
fbstp
jo
add
push
iret
(bad)
mov
push
add
push
and
ds
sbb
xor
xchg
adc
add
and
nop
or
xor
sbb
dec
push
xor
xor
sub
or
cmp
mov
add
inc
dec
(bad)
out
jle
cmp
jnp
jb
add
add
sbb
sahf
mov
push
lahf
rol
pop
xor
sub
or
addr16
or
mov
push
add
xchg
ror
sub
sbb
push
adc
add
xor
jbe
fist
popf
sbb
xlat
sbb
mov
add
das
and
dec
dec
mov
pop
xor
out
xor
sbb
jg
xor
dec
cmps
lahf
repz
add
aaa
pusha
jg
inc
mov
jg
push
data16
push
neg
xchg
dec
inc
jle
add
jmp
add
inc
or
xchg
mov
pop
xor
aaa
push
mov
test
dec
push
imul
and
jo
push
dec
xchg
sbb
fisttp
xor
push
xchg
or
pusha
dec
sti
xchg
adc
test
xchg
ins
cmp
or
(bad)
jmp
test
adc
pop
pop
dec
pop
and
dec
loope
add
jmp
(bad)
aaa
add
mov
sub
sbb
xor
sub
xor
pop
and
aas
push
ins
push
sbb
xor
sub
ja
pop
adc
add
add
add
jg
les
and
xor
adc
cmp
jg
adc
fcom
pop
ror
aaa
aas
xchg
push
lods
xor
or
or
push
add
fisttp
aaa
adc
pop
xor
push
ins
and
and
and
xor
and
and
xor
and
and
ss
loop
and
daa
push
nop
test
cmp
push
mov
mov
inc
cli
push
cmps
mov
xor
xor
mov
xchg
jb
mov
aas
add
test
mov
out
jmp
inc
jo
cmp
lods
and
lds
add
sbb
mov
or
and
xor
mov
sbb
xchg
mov
push
mov
dec
fdivr
neg
mov
das
and
pop
adc
add
or
mov
fwait
inc
daa
and
sub
int3
addr16
xchg
into
xor
stos
aaa
mov
sbb
inc
add
add
mov
sub
push
inc
ds
in
in
movntq
mov
popa
or
mov
loop
jno
mov
test
imul
pusha
push
or
push
or
sbb
bound
sbb
(bad)
and
sub
inc
sbb
push
inc
or
aam
jb
jmp
jnp
mov
xor
cmp
xor
add
or
mov
aad
mov
shl
arpl
add
jecxz
enter
xchg
pop
mov
adc
mov
test
jnp
cmp
and
and
fs
ss
dec
fld
jge
cmp
push
push
or
or
(bad)
inc
rcr
inc
mov
or
add
inc
inc
add
daa
xchg
sbb
mov
jle
mov
sub
push
add
rol
stos
mov
inc
push
jle
cmp
xor
xor
add
or
pop
es
add
stos
pop
add
cmp
jne
xchg
inc
push
cmp
mov
and
jnp
sbb
pop
xchg
movs
scas
add
mov
push
push
push
inc
mov
lods
jne
call
or
je
mov
lods
jle
cmp
(bad)
mov
(bad)
push
sbb
stc
dec
adc
adc
jbe
mov
jb
leave
ins
pop
or
hlt
sti
jbe
inc
push
dec
lock
lock
out
xor
or
ja
fisttp
add
rcr
push
and
mov
mov
cwde
adc
adc
or
push
xchg
jg
add
mov
pop
or
ja
sub
mov
add
ror
mov
adc
inc
pop
cmp
xlat
pushf
test
bound
test
pop
mov
dec
in
or
dec
cmp
cmp
fidiv
es
pop
mov
add
xchg
or
push
sti
daa
mov
sti
cli
pusha
mov
or
push
je
mov
pop
ss
inc
leave
sub
test
dec
add
and
inc
xchg
jg
pop
int
or
pop
dec
pop
dec
cmp
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
cmp
cmp
and
and
cmp
cmp
and
es
cmp
cmp
sub
sub
cmp
cmp
sub
cs
cmp
cmp
adc
adc
cmp
cmp
adc
push
pop
cmp
cmp
sbb
sbb
cmp
cmp
sbb
push
pop
cmp
cmp
add
add
cmp
cmp
add
push
pop
cmp
cmp
or
or
cmp
cmp
or
push
setl
repnz
pushf
pushf
pushf
hlt
cmc
div
pushf
pushf
pushf
pushf
clc
stc
cli
sti
pushf
pushf
pushf
pushf
cld
std
(bad)
call
loop
pushf
pushf
pushf
pushf
in
out
pushf
pushf
pushf
pushf
call
pushf
pushf
pushf
in
in
out
out
pushf
pushf
pushf
pushf
rcl
rcl
pushf
pushf
pushf
pushf
aam
(bad)
xlat
pushf
pushf
pushf
pushf
fcomp
fcmovu
pushf
pushf
pushf
pushf
(bad)
(bad)
pushf
pushf
pushf
pushf
rol
ret
pushf
pushf
pushf
pushf
(bad)
(bad)
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
int3
int
iret
pushf
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
movs
movs
cmps
cmps
pushf
pushf
pushf
pushf
test
stos
stos
pushf
pushf
pushf
pushf
lods
lods
scas
scas
pushf
pushf
pushf
pushf
nop
xchg
xchg
xchg
pushf
pushf
pushf
pushf
xchg
xchg
xchg
xchg
pushf
pushf
pushf
pushf
cwde
cdq
call
popf
sahf
lahf
pushf
pushf
pushf
pushf
add
pushf
test
pushf
pushf
mov
pushf
pushf
mov
pushf
pushf
jo
jb
pushf
pushf
pushf
pushf
je
jbe
pushf
pushf
pushf
pushf
js
jp
pushf
pushf
pushf
pushf
jl
jle
pushf
pushf
pushf
pushf
pusha
popa
bound
pushf
pushf
pushf
fs
mov
mov
leave
(bad)
pushf
cmp
pop
bound
into
das
adc
rol
adc
out
cmp
push
and
add
and
cs
mov
adc
lea
mov
movs
adc
xchg
mov
or
xor
inc
sub
sbb
pop
xor
mov
inc
dec
dec
dec
inc
add
jl
js
or
inc
shl
push
imul
mov
cmp
inc
retf
lahf
push
sbb
pushf
cmc
dec
lock
xchg
push
ss
dec
cmp
add
ficom
test
nop
inc
movs
adc
out
int3
jno
pop
adc
inc
fs
jo
shr
mov
mov
arpl
mov
ror
pop
cmps
or
sbb
xor
add
fs
ss
sub
popa
mov
ins
inc
pop
leave
or
call
inc
fs
(bad)
cwde
dec
mov
inc
popa
jne
je
popf
mov
fwait
pop
test
nop
test
xor
fwait
daa
jae
fdivr
jmp
or
or
cmp
or
je
pop
lea
in
rcl
jbe
push
outs
and
xchg
retf
lahf
cmp
les
jne
xor
mov
pop
sbb
out
pop
int3
out
shl
enter
leave
daa
adc
mov
adc
mov
xor
fs
sbb
xchg
mov
shl
imul
mov
js
cs
and
jne
out
xor
outs
lahf
in
inc
or
(bad)
mul
ins
popa
cmp
adc
xor
or
dec
dec
push
push
push
fwait
push
push
stos
mov
cmp
int
aam
push
dec
dec
cvtdq2ps
mov
push
rcl
add
inc
dec
bound
and
inc
push
shl
(bad)
push
sbb
fbstp
cmp
pop
push
rcr
xchg
loop
and
cmp
add
cmp
xlat
sbb
fmul
add
pop
inc
clc
mov
xor
dec
cmp
jne
and
outs
dec
inc
nop
jne
and
xor
inc
push
fsubr
add
cmp
xchg
std
pop
rol
jmp
lea
and
fistp
imul
mov
scas
(bad)
mov
bound
dec
jo
sar
push
jne
imul
or
mov
jmp
mov
push
ins
rcr
loop
rcr
js
mov
ss
mov
fild
cmp
jle
in
adc
test
int3
mov
in
inc
jo
sbb
ror
or
into
inc
jns
push
outs
ds
ror
dec
jmp
inc
mov
test
push
inc
cmp
or
adc
(bad)
fstp
iret
das
adc
push
adc
inc
inc
movs
xlat
inc
mov
xchg
or
mov
das
mov
and
xchg
cmp
mov
or
cs
pop
or
and
icebp
dec
scas
jmp
sub
jb
inc
xchg
test
and
dec
inc
clc
pop
xchg
sar
inc
dec
jne
push
test
es
xchg
add
imul
push
loope
aad
inc
push
clc
or
inc
sub
xchg
jge
pop
(bad)
sbb
test
test
mov
and
test
ds
in
add
push
iret
(bad)
sub
xor
ror
leave
add
test
push
mov
retf
outs
call
(bad)
aaa
movs
adc
out
xor
ret
ss
in
in
sti
neg
inc
out
rcl
fcomp
or
inc
xchg
pop
inc
es
pop
mov
pop
and
lods
inc
or
inc
xchg
outs
add
ror
jp
ins
aas
push
inc
mov
mov
xchg
test
pop
sub
imul
sbb
add
pop
xchg
loopne
aam
push
retf
and
push
and
adc
jne
jecxz
rcr
adc
(bad)
pop
call
dec
jle
sub
mov
(bad)
sti
lods
inc
xchg
jo
or
movs
je
int3
xchg
push
cmp
int3
mov
jle
fcom
push
adc
inc
pop
or
push
adc
lock
mov
mov
cmp
xor
pop
mov
adc
push
add
inc
inc
xor
adc
enter
enter
loopne
ror
test
xor
jne
sti
test
xor
repnz
rol
jmp
sbb
jb
or
xor
ins
adc
sub
movzx
test
cdq
sbb
fadd
or
mov
xchg
lock
pusha
arpl
in
add
imul
jmp
jnp
xchg
pushf
jl
and
jnp
test
pop
popa
adc
mov
fwait
nop
mov
(bad)
adc
jle
cdq
push
add
jbe
mov
idiv
dec
mov
cmp
cmps
inc
sub
jno
or
lods
stos
push
rol
mov
jge
je
mul
adc
imul
adc
in
add
mov
or
dec
out
sub
xchg
icebp
adc
add
lea
mov
sbb
jo
out
cmp
(bad)
pop
push
mov
jo
xor
or
jecxz
in
loope
xchg
je
dec
into
pop
les
addr16
test
fisubr
adc
test
adc
jg
xlat
and
in
add
xor
sbb
sbb
aad
jmp
xchg
pop
cmp
jp
rol
adc
nop
(bad)
and
add
pop
fs
inc
dec
cmps
sbb
push
dec
and
test
or
mov
add
retf
inc
sbb
cmp
test
sub
inc
dec
mov
jmp
das
cs
(bad)
add
pop
gs
pop
data16
stc
(bad)
cld
add
add
popa
jmp
lods
push
psubusb
call
iret
lock
or
add
mov
dec
daa
into
test
or
or
dec
hlt
fwait
mov
cmp
pop
xor
mov
mov
dec
(bad)
push
(bad)
test
das
mov
fld
push
push
jnp
out
jg
push
es
adc
jne
mov
imul
shr
sbb
add
push
loope
adc
add
ss
pop
pop
fs
jmp
jo
cmp
and
or
cmps
cmp
inc
or
iret
cwde
rol
in
mov
loopne
fst
fsubr
adc
push
loope
inc
xor
fdivr
scas
or
or
repnz
adc
adc
sbb
dec
sbb
movs
mov
add
les
lods
sbb
inc
add
add
cmp
sub
lds
push
add
inc
dec
dec
or
jge
(bad)
not
dec
out
inc
add
add
pop
dec
mov
(bad)
in
jge
add
inc
add
dec
mov
dec
pop
(bad)
push
daa
dec
ds
push
inc
add
mov
(bad)
xchg
shl
add
push
daa
adc
loop
xlat
pop
jns
loopne
xlat
das
dec
add
and
push
add
iret
push
jo
adc
pop
test
dec
das
ja
shl
inc
sbb
pop
dec
neg
ret
push
lock
inc
ja
call
dec
cmps
scas
pop
cs
or
dec
das
dec
inc
mov
push
daa
mov
mov
out
push
jg
push
mov
push
push
call
jg
push
push
inc
add
push
xchg
dec
add
aad
fadd
add
dec
xchg
xor
mov
xor
mov
scas
test
outs
inc
add
sbb
mov
pop
jp
jmp
mov
sub
fld
adc
push
cmp
add
and
(bad)
push
mov
mov
jne
inc
add
cmp
jne
xor
jne
ror
jb
pop
pop
push
stos
test
mov
pusha
add
ret
and
fiadd
dec
movs
popa
in
into
test
fld
sub
daa
das
aaa
push
add
adc
(bad)
sub
xor
sub
mov
sbb
sub
xor
js
or
ins
pop
sti
push
push
sub
test
pop
add
adc
pop
rcr
fmul
pop
cmp
enter
cmp
add
and
adc
push
add
push
mov
in
mov
addr16
and
inc
xor
inc
jno
mov
jg
ret
push
lds
das
push
punpcklbw
lods
pop
das
push
daa
mov
ss
pop
push
stos
pop
or
inc
dec
mov
mov
test
das
add
jmp
mov
mov
push
inc
daa
ss
sub
xor
pop
ja
fisubr
push
dec
push
inc
add
cmp
inc
add
scas
(bad)
lods
das
inc
daa
push
mov
(bad)
push
aaa
mov
push
xlat
dec
pop
or
push
loopne
xchg
xor
xor
xchg
(bad)
jbe
daa
dec
add
sub
or
mov
push
ja
or
mov
cmp
in
pop
dec
dec
inc
jmp
pop
sub
dec
add
pop
push
mov
int3
das
sub
dec
scas
not
push
add
pop
or
ja
int
jb
ja
daa
inc
stos
sbb
xor
and
dec
mov
sub
cmp
push
pop
nop
mov
push
mov
push
lods
stos
mov
push
dec
fadd
cs
daa
inc
outs
push
pop
push
sbb
pop
leave
add
ret
push
jne
pop
pop
xlat
xor
lods
in
push
pop
dec
xor
add
js
daa
clc
mov
mov
inc
xchg
movs
push
lods
xchg
lds
adc
sub
adc
loope
mov
sbb
ja
or
fucomip
jmp
cmps
pop
mov
(bad)
inc
pop
dec
in
addr16
adc
cmp
mov
in
ret
outs
jo
lahf
mov
or
fiadd
out
or
clc
sub
pusha
dec
clc
je
lea
imul
ja
dec
dec
push
dec
mov
xor
sub
and
xor
push
sbb
add
arpl
movs
and
xchg
nop
cdq
cmp
mov
pop
outs
sar
cmp
jne
(bad)
fchs
and
push
xchg
rol
sub
pushf
or
outs
aaa
xchg
adc
dec
jg
sub
xor
xor
les
aas
ins
fsubr
xor
fwait
cmps
add
std
imul
fcomp
loopne
jae
sbb
loope
into
imul
or
fsub
pop
lea
clc
daa
inc
lock
push
add
lods
add
mov
fucomi
adc
pop
add
jge
mov
sub
les
sti
jg
mov
daa
cmp
jl
sti
jno
mov
push
mov
jg
lea
and
mov
xchg
pop
pop
les
or
in
mov
lea
cld
mov
ret
dec
(bad)
movs
sbb
inc
into
je
fisub
cmp
(bad)
or
dec
stos
or
std
pop
ror
aam
ss
pusha
add
nop
xor
jmp
or
and
clc
aad
xor
mov
mov
loope
mov
imul
mov
shr
cwde
jns
sub
mov
ins
and
cmp
jle
jb
ins
sub
cmp
imul
adc
rol
shl
adc
(bad)
(bad)
push
add
sbb
jb
sbb
and
adc
sub
ret
mov
pop
sub
adc
jle
add
sbb
pop
mov
scas
mov
jns
mov
push
and
inc
sbb
inc
out
push
xor
movs
out
add
scas
loopne
push
in
ret
shr
pop
(bad)
out
mov
mov
call
in
das
fdivr
and
mov
stc
in
dec
call
je
mov
das
hlt
mov
add
or
jnp
ret
or
inc
call
mov
ret
inc
stos
out
xor
push
add
adc
and
push
xor
push
xor
push
xor
and
and
mov
add
ja
mov
test
adc
mov
xchg
lahf
pop
pop
in
inc
jl
adc
mov
rcr
ins
and
sbb
add
into
in
fnstcw
inc
jg
cmp
adc
fwait
mov
movs
lock
or
pop
add
pop
and
mov
push
ins
and
hlt
cmp
sti
sbb
sbb
mov
mov
mov
pop
pop
ret
inc
dec
adc
out
cmp
xchg
fst
in
adc
add
dec
in
mov
jmp
leave
jp
daa
jne
test
sbb
mov
out
cmp
xor
inc
lock
sub
xor
mov
push
xor
xchg
push
fs
sub
adc
out
aam
loopne
pop
jmp
or
pop
js
ror
inc
adc
mov
inc
outs
out
rol
or
sub
stos
mov
rep
aam
je
lock
adc
inc
test
in
adc
pop
enter
out
and
sub
cld
imul
(bad)
ret
leave
fld
faddp
dec
fsub
and
fadd
addr16
or
mov
xlat
loopne
nop
mov
fsub
push
sub
and
adc
mov
pop
dec
or
push
sub
stos
adc
mov
push
push
add
aas
aam
jmp
add
pop
pop
and
xor
jnp
xchg
add
inc
sub
adc
xchg
and
or
mov
push
div
mov
pop
adc
adc
dec
push
jecxz
mov
rol
push
cmp
mov
pushf
ror
dec
cld
sub
pop
jb
and
in
dec
pop
sbb
dec
jl
dec
cs
and
cmp
cmp
or
mov
cld
xor
fs
leave
mov
xchg
sub
pop
pop
mov
(bad)
pop
jb
sub
pop
pop
nop
pop
jb
and
mov
pop
js
xor
dec
cs
sbb
pusha
in
xchg
pop
test
or
xchg
dec
cs
push
nop
fsub
adc
pop
jb
(bad)
hlt
xor
daa
das
mov
int3
add
in
imul
je
leave
and
mov
and
movs
shr
js
cld
xor
addr16
xor
fcom
aas
pop
jb
mov
js
in
mov
xchg
or
fist
pusha
in
dec
mov
sbb
pop
dec
js
dec
cs
pop
mov
xchg
pop
sbb
pop
dec
pop
jb
(bad)
cld
cmp
mov
loopne
sbb
inc
je
lods
loop
xchg
fcom
push
inc
not
call
das
mov
and
and
clc
cmp
jns
mov
aas
pop
fcomp
and
xchg
dec
es
lods
lock
mov
mov
lods
xchg
pop
pop
jnp
and
pop
cwde
fsubr
and
cmp
dec
add
pop
push
xchg
(bad)
lock
dec
in
daa
push
jl
and
cmp
pop
jb
and
in
mov
sub
inc
mov
mov
lock
sub
dec
cs
enter
mov
or
jb
cwde
fmul
lods
loopne
cs
pop
mov
or
pop
dec
test
cld
inc
xor
js
mov
rol
mov
pop
call
mov
pop
pop
aam
xor
xchg
imul
pop
int3
sbb
and
test
leave
and
pop
push
jb
and
pop
pop
mov
in
aaa
daa
sbb
enter
xchg
pop
jb
pop
cwde
fcomp
xchg
pop
jb
cmp
lock
lods
loope
sub
daa
pop
aam
pop
ret
dec
cmp
push
pop
sbb
in
mov
ins
in
mov
push
pop
sbb
ja
xchg
dec
es
aas
jo
inc
mov
das
pop
xor
pop
push
mov
adc
imul
pop
mov
in
imul
aam
inc
jb
mov
out
pop
mov
pop
xor
pop
shl
inc
mov
cwde
ins
adc
inc
(bad)
pop
xlat
(bad)
pop
jb
adc
pop
mov
lods
jecxz
or
jg
shr
in
or
dec
mov
xchg
dec
int3
sub
ins
in
and
dec
(bad)
pop
leave
and
les
dec
pop
xchg
leave
and
int3
or
pop
pop
mov
and
dec
cs
xchg
pop
pop
(bad)
xor
pop
movs
in
xchg
sbb
and
hlt
scas
lods
loope
pop
push
iret
pop
or
pop
jb
inc
lahf
pop
mov
jb
and
mov
push
daa
pop
in
jb
add
pop
loopne
fimul
pop
sbb
jg
xchg
in
das
mov
xor
mov
pop
fimul
pop
xchg
or
loopne
pop
xchg
pop
jb
pop
enter
das
mov
shl
pop
not
mov
cs
dec
cs
and
pop
movs
dec
push
stc
xchg
in
pusha
pop
js
push
stc
xchg
mov
adc
fsub
bound
pop
mov
in
xchg
arpl
loopne
mov
sbb
mov
(bad)
dec
cs
push
gs
call
in
xchg
dec
scas
lods
xchg
je
xchg
inc
mov
pop
cmp
mov
xchg
pop
pop
rol
pop
pop
nop
pop
jb
and
pop
jne
leave
and
or
das
les
mov
je
dec
inc
(bad)
retf
inc
push
dec
in
test
pop
mov
xchg
cmp
jge
mov
dec
int3
mov
inc
fwait
lea
je
xchg
push
xchg
jo
sbb
cmp
lock
test
jl
xchg
and
call
pop
scas
inc
cmp
push
or
push
popf
adc
cdq
stc
cdq
pop
out
mov
dec
les
test
fist
sub
dec
or
pusha
push
test
lods
mov
and
clc
sbb
adc
pop
sahf
mov
sub
or
pop
add
test
nop
push
loopne
xor
ds
setns
js
inc
lahf
mov
mov
inc
fcomp
mov
xor
add
mov
jb
aam
lock
popf
aam
push
pop
inc
clc
adc
test
cmp
sbb
mov
adc
mov
popa
movs
lea
loope
mov
rol
inc
add
or
add
leave
xor
sbb
adc
fisttp
cs
xor
pop
xlat
ja
lock
mov
add
push
ins
jbe
add
daa
das
das
jb
jb
fcom
jbe
cs
fisttp
add
in
pop
es
adc
push
jb
mov
sub
pop
adc
fsub
lds
inc
pcmpeqw
shl
loopne
add
retf
push
jnp
ins
mov
prefetchw
xchg
imul
pusha
xor
add
cmp
cld
add
jne
jb
outs
adc
xor
popa
pop
outs
push
nop
lods
and
pop
adc
adc
pop
jg
or
movs
push
pop
nop
mov
mov
xor
inc
rcl
lds
add
maskmovq
mul
fidiv
je
mov
sahf
(bad)
(bad)
fidiv
addr16
adc
and
add
adc
adc
lahf
and
(bad)
push
(bad)
ins
das
outs
sbb
add
sub
mov
sbb
nop
or
xlat
das
adc
aam
jae
cmc
add
jnp
jae
(bad)
outs
add
ins
inc
fwait
pop
ja
jbe
and
(bad)
and
aas
jae
js
dec
mov
popa
ins
add
adc
mov
add
mov
aas
inc
das
inc
jo
pop
dec
sub
jae
dec
js
rol
dec
or
xor
pop
popa
xor
push
jae
fstp
jmp
xlat
push
pop
pusha
xor
fbld
sbb
mov
push
daa
push
push
push
pop
in
add
jb
arpl
mov
aas
popa
inc
mov
aas
push
ja
inc
loopne
or
ss
js
popa
inc
sbb
add
in
ds
sbb
push
jbe
pop
popa
mov
(bad)
das
ret
push
iret
addr16
imul
enter
xchg
push
daa
cmp
sbb
sub
pop
das
outs
aas
push
push
arpl
dec
aaa
mov
mov
retf
push
retf
sub
das
pop
xchg
or
adc
jo
pop
popa
jg
es
push
daa
mov
push
jnp
jo
js
daa
dec
in
imul
jo
cli
adc
bound
pusha
dec
dec
outs
mov
addr16
addr16
mov
sub
je
xor
add
fbstp
adc
add
push
add
mov
inc
cmc
outs
das
pop
jo
sbb
out
js
mov
inc
mov
adc
jae
inc
mov
scas
inc
je
arpl
sar
data16
imul
gs
fcmovu
add
aas
ins
jbe
aas
mov
lahf
ja
add
pop
adc
add
or
(bad)
(bad)
dec
mov
nop
popa
add
aam
mov
das
jnp
sbb
div
sub
sbb
sub
pop
cmp
addr16
dec
sbb
mov
push
movs
test
or
xchg
or
test
jae
sbb
and
mov
mov
mov
adc
sub
lea
les
lods
inc
rol
arpl
and
icebp
fwait
mov
adc
add
movs
ins
test
fisttp
jbe
push
scas
cmps
jne
sahf
xchg
sbb
dec
imul
adc
push
inc
push
push
outs
rcl
cvtdq2ps
(bad)
push
xor
shr
das
ja
out
repz
outs
call
or
or
adc
inc
pop
mov
les
test
jg
outs
daa
sub
imul
add
dec
dec
cmp
pop
jbe
arpl
jo
outs
sub
sbb
xor
das
pop
pop
xor
ret
daa
cmp
add
js
imul
daa
ins
dec
or
jg
outs
ins
imul
pusha
pop
add
mov
lods
mov
push
xchg
dec
mov
daa
push
imul
jmp
addr16
xor
aaa
ins
fild
sbb
iret
fild
and
inc
push
jg
pop
bound
xor
pop
ins
add
push
xor
push
jb
adc
inc
lock
inc
imul
add
sbb
popa
pop
gs
(bad)
in
mov
mov
pop
dec
rol
adc
imul
xchg
dec
sub
jne
mov
adc
cmps
and
and
adc
pop
adc
das
add
pop
adc
mov
out
cwde
push
inc
(bad)
push
add
mov
add
ret
adc
ins
emms
pop
ins
mov
adc
addr16
sbb
js
pop
leave
inc
js
mov
and
cmp
push
adc
jmp
stos
js
add
gs
push
mov
dec
call
add
jg
jle
mov
(bad)
imul
mov
rcl
jg
aaa
add
loopne
fld
(bad)
popa
pop
cmp
mov
into
mov
rol
fwait
lahf
adc
ins
rcr
xchg
dec
dec
shl
dec
pop
and
bound
movs
xchg
inc
jb
add
sbb
outs
lahf
ins
imul
jae
scas
pusha
aam
mov
bound
ja
test
xlat
mov
lahf
arpl
xchg
xchg
ss
daa
imul
mov
xchg
lahf
outs
add
and
xchg
imul
and
inc
sub
mov
add
ja
adc
inc
dec
pop
add
bound
xor
fld
sub
ins
(bad)
bound
cmps
dec
mov
bound
outs
or
mov
add
shl
ja
bnd
xor
jg
outs
xchg
and
jno
and
repz
arpl
ins
push
push
mov
imul
movs
xchg
outs
push
shl
outs
fild
push
jae
mov
inc
pop
mov
pop
lods
popa
mul
jg
xchg
outs
adc
pop
pop
ja
add
iret
xchg
sub
jl
je
push
scas
ror
xchg
xchg
push
pop
lahf
jb
dec
cmp
addr16
jge
mov
je
imul
loopne
mov
or
arpl
cmp
adc
cmps
push
or
add
imul
daa
outs
xor
push
test
outs
sbb
mov
lahf
arpl
jo
add
jmp
or
or
dec
mov
xchg
xchg
test
jno
imul
popa
adc
mov
xor
fs
ffreep
xchg
data16
sbb
or
push
cmp
sahf
and
inc
add
jmp
inc
push
push
dec
pop
mov
bound
inc
mov
shl
pop
mov
sbb
imul
or
outs
out
and
inc
popf
mov
lods
cmp
sbb
das
imul
imul
scas
jmp
pusha
scas
mov
(bad)
xor
sub
fadd
xchg
(bad)
jp
add
minps
add
inc
(bad)
clc
jbe
lahf
ins
add
add
xchg
imul
and
jecxz
mov
jb
xor
inc
xchg
test
pop
inc
xchg
shl
js
scas
sub
cmp
sub
or
xor
adc
pop
or
pop
add
jae
push
in
pusha
bound
gs
jns
lods
mov
add
jbe
outs
add
sbb
outs
sbb
iret
int3
js
add
data16
sub
add
sbb
jge
leave
imul
ficomp
push
pop
(bad)
out
ret
push
dec
imul
sub
xchg
ins
pop
adc
add
mov
adc
push
fwait
call
jg
pop
mul
sub
push
addr16
pop
add
je
aaa
mov
test
addr16
add
inc
(bad)
push
xor
dec
pop
add
mov
dec
push
push
outs
aam
daa
jno
sub
mov
addr16
jo
xor
iret
xor
jbe
pop
adc
je
adc
scas
les
and
outs
imul
and
pop
daa
dec
or
sub
(bad)
loopne
jmp
add
sub
push
aaa
imul
sbb
sbb
pop
test
inc
cmp
cmps
dec
adc
inc
dec
push
push
mov
mov
imul
dec
sbb
cmc
add
outs
mov
lea
outs
fwait
clc
push
ss
mov
loopne
ja
cmp
inc
jae
add
jb
imul
test
add
(bad)
add
mov
fisub
cmps
push
ja
stos
pop
adc
imul
js
and
lahf
dec
inc
mov
out
cmp
sbb
push
cmp
inc
rcr
push
add
je
sbb
dec
inc
movs
jb
pop
in
add
add
test
ins
jae
sbb
prefetcht1
int3
inc
inc
jo
mov
jp
js
ins
add
add
xor
xor
ins
and
mov
or
xchg
jecxz
mov
add
aas
xor
mov
das
jbe
stos
and
pop
das
sbb
aas
sbb
popa
xlat
je
data16
lock
add
daa
xchg
pop
push
sbb
(bad)
push
fild
mov
ins
rol
inc
push
and
loopne
sub
outs
xor
imul
xchg
inc
xchg
pop
(bad)
outs
add
ret
jns
vmwrite
pusha
jne
into
(bad)
push
sbb
inc
ins
add
popa
cmp
test
xchg
outs
push
rol
add
adc
fs
push
mov
add
or
and
outs
rsm
pop
jo
js
adc
mov
inc
pop
add
sbb
sub
and
adc
sub
mov
iret
cmps
add
xlat
fst
inc
sbb
(bad)
jae
pusha
pop
or
imul
xor
xor
fsubr
add
adc
add
xor
xchg
das
adc
push
mov
xlat
push
sar
repz
stos
dec
mov
add
mov
addr16
sub
push
lods
sub
jmp
ror
rcl
cmp
gs
adc
cmps
scas
je
push
mov
fistp
fcomip
adc
movhps
dec
jecxz
sub
xor
daa
add
dec
push
test
mov
and
cmp
ins
push
and
pop
xor
and
popa
mov
lock
mov
push
and
sub
inc
push
int
cmp
or
sti
jno
adc
pop
scas
jae
or
push
mov
or
movs
cmp
sbb
mov
mov
jmp
cmp
pop
sbb
mov
jae
cs
adc
jo
retf
test
inc
xchg
adc
imul
jo
gs
sbb
sbb
jno
loopne
inc
xchg
push
pshufw
ja
popa
add
adc
cmps
(bad)
adc
je
mov
and
jp
mov
cwde
sbb
imul
mov
ret
into
dec
out
stos
loop
shl
add
or
jo
inc
loop
sbb
dec
outs
pop
xchg
jo
iret
and
cmp
jecxz
sub
fistp
lahf
loope
add
jb
jb
mov
(bad)
or
es
sbb
ror
bound
ins
add
mov
pop
movs
inc
ins
mov
add
cmps
sbb
mov
dec
jg
pop
or
mov
sub
cmp
es
outs
adc
mov
sub
pop
xchg
xchg
add
lods
aam
adc
push
rol
sbb
add
or
aad
imul
dec
test
jae
or
add
dec
inc
mov
loopne
out
add
mov
inc
(bad)
adc
inc
inc
dec
xchg
and
mov
test
gs
push
imul
popa
add
sbb
jne
dec
push
inc
ins
adc
pop
pop
inc
jb
jbe
sub
iret
stos
inc
movs
lods
mov
call
jae
stos
or
(bad)
mov
and
fdiv
loop
iret
jae
fs
adc
inc
ss
aaa
sub
lods
cwde
cmc
je
outs
rol
jbe
fwait
dec
sub
jmp
ja
fs
in
(bad)
jb
add
adc
and
jb
fistp
mov
dec
sub
mov
jae
push
or
pop
rdpmc
ja
cmp
adc
imul
je
jne
imul
pop
xchg
push
or
mov
fisttp
sbb
ja
rol
das
ja
add
test
ja
adc
xchg
push
push
ins
add
push
xlat
adc
outs
rol
aas
ins
mov
je
shl
add
adc
rol
jne
push
popa
add
push
fistp
(bad)
jae
inc
pop
push
sbb
push
imul
xchg
pop
add
ja
add
gs
bound
or
jne
or
push
lahf
jae
add
(bad)
xchg
sbb
repz
push
test
in
mov
add
add
fadd
inc
outs
je
sub
pop
mov
ja
dec
xor
add
aaa
sbb
mov
mov
inc
mov
and
xor
stos
add
add
push
(bad)
push
popa
dec
mov
push
add
outs
lahf
das
(bad)
adc
fiadd
mov
cmps
cmp
fistp
call
sub
pop
lahf
xlat
add
mov
scas
jnp
mov
mov
cwde
js
les
aaa
shl
es
loope
mov
ja
inc
pop
xor
adc
push
xor
add
inc
ja
xor
push
(bad)
adc
imul
jae
sbb
pop
dec
add
test
cs
je
ins
movs
and
fild
and
mov
fiadd
push
sub
jg
sub
adc
or
dec
adc
dec
jecxz
adc
retf
aas
je
jb
and
mov
add
add
xchg
fiadd
mov
callw
jo
sbb
jb
sub
xchg
arpl
adc
adc
add
(bad)
call
push
push
xlat
dec
jne
push
stos
dec
sti
fbstp
inc
aad
add
jg
shr
pop
xor
fisttp
shl
add
imul
xchg
push
sbb
inc
jno
in
inc
ins
fild
sub
sub
and
inc
sbb
aaa
jno
add
add
arpl
xchg
pop
ja
dec
or
arpl
dec
mov
bound
adc
xlat
ins
push
xor
mov
or
aas
imul
push
pop
or
add
dec
or
sub
jg
sbb
xor
inc
ja
xor
inc
jae
add
sbb
add
sub
mov
ja
pop
dec
inc
inc
aaa
jo
jo
fild
mov
or
aam
rdpmc
das
add
inc
push
sbb
popa
add
ins
xor
xchg
sbb
mov
add
mov
dec
scas
xchg
jo
adc
scas
(bad)
sbb
push
pop
mov
mov
push
adc
add
fbstp
rcl
js
jne
outs
add
mov
shl
mov
pop
jecxz
or
xor
or
inc
lahf
sbb
mov
ja
test
addr16
push
mov
mov
mov
jmp
arpl
ret
mov
jae
shl
out
and
sub
scas
arpl
push
sub
pop
and
shl
arpl
retf
adc
fist
pop
popa
add
adc
pop
jo
arpl
jo
add
imul
mov
sub
sub
push
int3
lods
sub
add
add
push
js
js
dec
add
jbe
arpl
push
pop
push
pop
push
out
addr16
sub
push
in
fs
adc
push
das
mov
pop
das
pop
or
jno
arpl
scas
sbb
dec
ins
dec
lahf
xor
je
shl
imul
xor
pop
(bad)
and
dec
mov
(bad)
outs
sti
jae
adc
cmp
jbe
push
jb
ret
ins
sub
pop
push
jg
movhps
push
and
xor
push
add
pop
ss
mov
cs
and
ret
je
clc
mov
sbb
dec
sbb
xor
loop
push
sbb
or
mov
add
add
sar
push
add
sbb
shl
cmp
out
ins
out
jo
pop
(bad)
cmp
dec
jne
test
xchg
test
cld
sub
clc
(bad)
(bad)
mov
mov
jmp
jge
push
rcl
shl
add
out
jns
or
jnp
or
cmp
jmp
jg
add
add
lods
ins
adc
jl
cmps
inc
adc
cs
(bad)
sbb
cmp
mov
or
pop
shr
dec
nop
in
das
mov
adc
loope
movs
or
sbb
jmp
sbb
add
lock
rol
mov
cs
ret
push
adc
add
and
pop
adc
lock
out
jle
add
mov
add
hlt
(bad)
adc
jecxz
mov
add
add
sbb
dec
pop
lods
pop
add
adc
and
or
mov
adc
(bad)
cwde
dec
fld
add
js
adc
fld
xor
cmp
enter
sub
addr16
hlt
ucomiss
adc
or
mov
fadd
pop
cmps
push
add
add
or
test
pop
(bad)
(bad)
ins
arpl
or
hlt
pop
jecxz
inc
loopne
les
icebp
mov
in
add
sbb
adc
xor
cmp
cmp
jo
add
jmp
push
icebp
lahf
in
sbb
add
or
add
les
pop
pop
(bad)
pop
mov
pop
and
inc
arpl
je
add
aaa
push
pop
add
call
adc
push
and
and
push
pop
adc
inc
outs
jl
sub
fld
mov
jl
sbb
lock
mov
das
call
adc
test
aas
sub
mov
hlt
test
xchg
mov
cmps
retf
dec
rcl
or
pusha
sub
mov
or
jmp
pop
cmc
dec
fmul
sahf
inc
push
push
ret
jne
jae
outs
fadd
dec
fwait
mov
imul
sbb
mov
clc
push
rcr
mov
sbb
mov
jne
popa
daa
adc
clc
push
leave
leave
sub
loopne
sbb
hlt
and
dec
dec
or
xchg
dec
push
add
(bad)
add
add
rcl
outs
mov
ret
int3
and
and
xchg
adc
bound
loopne
inc
mov
inc
mov
pop
push
xor
lahf
add
mov
push
jmp
or
cmp
shl
inc
and
je
mov
xor
les
sbb
or
das
adc
sub
jns
ret
jns
jo
pop
pop
pop
gs
mov
pusha
add
sbb
xor
cmp
inc
cmp
jne
cmps
and
mov
fisttp
test
rcr
inc
xchg
rol
push
fadd
pop
pop
repz
(bad)
cs
ret
test
sub
addr16
jmp
sub
invd
jae
add
or
jg
or
ss
in
mov
gs
in
jae
jmp
xchg
mov
loope
sbb
xchg
data16
in
(bad)
bound
push
pop
in
daa
add
inc
or
rcr
je
inc
jmp
pop
cmps
loope
adc
aam
sbb
rol
push
adc
add
add
rol
ret
and
jne
sub
push
adc
call
sar
xchg
cmp
sub
adc
test
cmp
loope
xchg
lahf
dec
push
dec
xchg
test
das
xchg
in
xchg
rol
pop
adc
add
not
push
repnz
add
lock
loope
push
es
add
push
inc
pop
jmp
and
or
push
add
push
(bad)
push
xchg
sbb
jne
and
and
jbe
xor
popf
add
mov
add
call
pop
sub
ficom
imul
bound
mov
es
push
inc
inc
cmp
jl
pusha
add
cmp
mov
and
data16
push
xor
aas
jne
xor
inc
sar
je
shr
and
mov
ds
sbb
rcl
pop
adc
mov
mul
pop
add
fs
icebp
sub
or
in
dec
xchg
pusha
loope
adc
dec
jne
inc
push
sbb
sbb
ds
(bad)
xor
daa
jns
cs
neg
jo
push
adc
in
pop
hlt
dec
repnz
lea
dec
mov
push
fadd
mov
jb
in
push
jmp
mov
call
rcr
sbb
ds
je
sub
mov
or
enter
push
and
movs
call
xchg
xor
dec
pop
add
fisubr
jmp
mov
push
movs
cld
or
je
jae
pop
cs
add
je
inc
or
sbb
outs
fimul
inc
or
or
mov
call
(bad)
jo
in
loopne
in
loopne
(bad)
loopne
inc
mov
pop
dec
add
and
add
push
rol
pop
dec
ret
lea
inc
or
(bad)
pop
push
xor
xchg
add
sbb
int3
cmp
add
fsubr
fnstcw
test
call
cmp
add
stos
jbe
sbb
outs
test
ss
inc
and
mov
jg
lea
xchg
or
add
dec
jle
xchg
push
jmp
add
rol
rcr
loopne
inc
jge
mov
sbb
shl
sub
aam
xchg
or
sbb
int
sar
shl
mov
(bad)
mov
das
jne
sbb
sub
mov
xchg
and
sbb
sbb
mov
jl
fs
inc
fisubr
and
lods
stos
js
test
pop
lods
add
add
aaa
pop
js
mov
fs
adc
adc
inc
enter
movs
movs
fstp
xchg
adc
test
jne
push
dec
mov
cdq
adc
mov
add
push
pop
shl
cmp
mov
cmp
adc
mov
and
cmp
inc
cmp
adc
lock
fwait
stos
pop
int3
jecxz
or
jecxz
test
sbb
repz
int
or
cmp
test
scas
test
or
add
loop
xor
std
push
int
ret
cld
sbb
push
jno
jmp
dec
push
jmp
daa
adc
cmp
or
adc
retf
ins
int
test
xchg
imul
(bad)
adc
xchg
in
je
xchg
sbb
push
fbstp
js
call
sub
jecxz
push
dec
pop
mov
or
add
test
idiv
jge
adc
ins
(bad)
jl
and
pop
jo
scas
clc
ja
adc
sbb
test
fsub
add
push
mov
add
add
dec
jne
cli
test
jo
pushf
pushf
in
adc
out
xor
or
mov
test
dec
mov
adc
les
das
cmp
ins
push
mov
pop
pushf
or
adc
mov
clc
clc
push
repnz
jb
push
sbb
push
out
pop
and
(bad)
call
shl
inc
sbb
loop
mov
sbb
push
aas
add
ins
or
sub
or
sbb
nop
mov
sub
lock
push
push
inc
loope
or
kmovw
mov
and
cmp
lock
cs
and
mov
cmp
cmp
and
sub
mov
in
in
cmp
mov
mov
ds
hlt
(bad)
call
leave
or
repz
push
das
stos
sub
ret
popf
repz
cmp
add
pop
dec
add
cmc
mov
pop
and
fsubr
or
or
scas
aas
xchg
or
addr16
and
cli
inc
cmp
repz
sub
stos
js
sub
mov
test
mov
dec
inc
jp
dec
or
add
or
mov
je
loop
xchg
push
mov
inc
xchg
and
xor
mov
movs
mov
hlt
xor
sub
pusha
aaa
dec
fdiv
lahf
daa
add
daa
inc
mov
mov
pop
jbe
inc
add
test
xchg
add
xor
jg
push
and
xor
add
inc
cmp
and
cmp
movs
and
dec
cmp
sub
jg
mov
mov
sbb
xchg
fadd
push
mov
cwde
js
test
lea
push
daa
mov
pushf
push
ds
pop
mov
lahf
das
cmp
and
xor
sub
add
sub
mov
add
rol
sub
iret
dec
dec
pop
loop
out
mov
aas
add
pop
push
jnp
jge
or
mov
aaa
hlt
and
push
sub
add
arpl
jbe
popa
test
jne
clc
pop
mov
dec
jmp
adc
out
inc
(bad)
pop
jne
and
pop
and
clc
ins
(bad)
out
and
add
cmp
jle
mov
ja
out
dec
ret
xor
sbb
arpl
dec
outs
mul
popa
in
push
pop
inc
push
imul
cmp
jmp
inc
sar
pop
jge
sub
push
dec
ret
mov
dec
loopne
sbb
adc
cmp
adc
push
addr16
rcr
mov
add
push
and
cmps
sbb
lahf
dec
xchg
cwde
popa
mov
je
mov
sbb
aam
jne
(bad)
xor
nop
jl
pop
dec
push
mov
out
jns
test
pop
int
aad
mov
fsub
and
mov
inc
loopne
cwde
aaa
imul
ss
repnz
jg
rcl
fcomp
aam
jo
fstp
push
mov
dec
mov
jl
mov
lahf
jmp
pop
pop
mov
shr
push
push
dec
push
jae
cmp
xor
xchg
or
sbb
dec
loopne
mov
mov
jne
call
dec
test
loope
adc
dec
mov
adc
je
push
shl
mov
imul
cmp
xor
cmp
inc
adc
test
(bad)
xchg
cmp
pop
or
fild
adc
pop
jg
sbb
cmp
adc
add
or
pop
lea
cmp
adc
sbb
test
xchg
cmp
xor
aaa
fidiv
and
and
test
and
imul
cs
adc
test
adc
sbb
cmps
in
push
loope
mov
adc
inc
mov
mov
pop
movs
xchg
sbb
sbb
jae
xor
fild
pop
sbb
mov
imul
add
mov
cmp
add
inc
add
adc
ja
inc
adc
daa
dec
jne
test
sbb
mov
inc
out
lea
(bad)
push
xchg
test
mov
(bad)
ja
mov
and
pop
pop
inc
ret
or
cld
pop
pop
prefetchwt1
popa
pusha
mov
lds
pop
(bad)
mov
push
add
fcomp
jg
push
in
sbb
xor
rcl
mov
dec
add
cs
adc
jl
ins
add
push
call
pop
repz
sbb
pop
mov
or
jb
inc
lock
div
jae
xchg
jge
xor
mov
jecxz
push
shl
data16
fidivr
pop
add
pop
adc
daa
clc
ins
dec
mov
arpl
cmp
pop
movs
icebp
aas
int3
das
clc
dec
test
jl
inc
xor
sbb
ins
test
fsubr
xor
(bad)
fmul
sub
xchg
neg
xchg
jbe
pop
inc
dec
arpl
push
pop
(bad)
std
sbb
or
outs
dec
jne
add
pop
inc
xlat
popf
test
stos
mov
jae
add
add
and
lds
sbb
fld
sar
daa
rcl
lahf
shl
add
jmp
mov
in
das
jns
pop
jmp
mov
mov
outs
adc
mov
das
psllw
lahf
ror
sti
inc
enter
jo
dec
mov
mov
adc
xchg
(bad)
mov
mov
xor
lea
cmc
push
loope
dec
jl
inc
cmp
iret
inc
mov
outs
mov
add
push
add
dec
jne
out
dec
mov
cmp
pop
mov
pcmpeqd
jg
cmp
mov
and
cld
dec
push
add
(bad)
fmul
arpl
sub
rcl
mov
jo
ds
rol
jg
sub
clc
mov
mov
inc
(bad)
pusha
add
out
cld
mov
fldcw
pusha
cmp
fild
jge
aam
xor
pop
adc
arpl
(bad)
sub
pop
pop
ret
mov
inc
add
clc
adc
je
ins
je
or
and
ss
je
or
jmp
dec
fstp
or
add
mov
jmp
or
out
pop
jns
ret
or
add
jo
test
push
add
mov
or
push
add
fnstenv
leave
pop
or
mov
popa
xchg
mov
ret
clc
push
dec
mov
fcmovnu
add
(bad)
xlat
xchg
and
mov
inc
xor
mov
add
arpl
ret
or
out
fcomp
push
inc
mov
lea
push
shl
nop
cs
pop
jp
shl
aas
push
jmp
int
adc
ror
dec
cmps
and
jmp
jne
and
repnz
cmp
pop
jmp
call
adc
adc
es
cwde
sar
(bad)
(bad)
sub
je
or
scas
je
jmp
jle
shr
stos
imul
pop
dec
pop
adc
or
rol
mov
dec
sbb
mov
or
std
ror
imul
shl
mov
sbb
lock
mov
mov
jmp
(bad)
(bad)
pop
adc
adc
sbb
pop
xchg
nop
pop
test
mov
mov
add
add
or
jg
out
jl
push
push
int
add
sbb
inc
mov
jnp
cmp
xchg
pop
sub
dec
loopne
mov
push
pop
lods
daa
mov
add
mov
inc
or
sub
ret
sub
shr
dec
adc
pop
inc
dec
data16
je
add
outs
inc
pusha
add
add
add
push
sbb
bound
add
imul
popa
dec
add
pop
add
cld
push
fcom
(bad)
xchg
push
xchg
add
xchg
push
ins
adc
ins
rol
outs
int
inc
mov
mov
test
inc
enter
lock
rol
int3
xchg
outs
repz
ss
pop
sti
push
dec
stos
push
xor
inc
push
pop
jle
movs
push
hlt
imul
cmps
push
sub
pop
push
ins
push
pusha
xchg
mov
xchg
mov
and
xor
xchg
push
pop
out
mov
cmps
add
add
loope
jnp
adc
push
retf
add
sar
in
arpl
add
inc
or
cmp
or
or
push
inc
ins
fs
(bad)
add
das
pop
or
cmp
mov
sub
push
xchg
add
inc
jecxz
loopne
arpl
mov
xor
clc
sar
push
inc
cmp
sbb
push
xchg
iret
lods
cmp
push
bswap
and
inc
adc
daa
and
xchg
mov
add
xor
cmp
add
or
rol
sub
cmp
push
imul
pop
rcl
or
fs
adc
add
push
jb
jae
sahf
cwde
push
ror
outs
cmp
inc
fs
sar
pop
xor
out
mov
and
jbe
je
rcl
jbe
je
outs
xor
gs
sbb
jno
call
add
inc
jno
clc
ins
add
shl
nop
push
arpl
adc
or
js
xchg
inc
in
add
or
inc
fwait
mul
mov
adc
lods
sahf
cld
imul
jae
adc
(bad)
les
aas
xchg
loop
cmp
test
add
add
push
xor
gs
or
pop
adc
rcl
ins
xor
lea
add
push
shl
mov
add
and
mov
sti
loopne
push
inc
ins
ins
dec
jae
fmul
push
mov
or
mov
dec
shl
jae
loopne
and
pop
fwait
aam
mov
sub
enter
outs
mov
xor
add
inc
mov
cdq
sbb
pop
and
push
pop
sbb
sbb
jge
stos
call
and
ror
and
popf
add
sar
dec
cmp
ret
mov
jmp
lea
or
inc
pop
add
mov
retf
mov
jecxz
clc
mov
jle
(bad)
cmp
add
and
(bad)
adc
nop
(bad)
dec
aam
add
pop
adc
clc
(bad)
lea
(bad)
rol
aas
(bad)
mov
and
stos
cwde
xchg
push
or
mov
(bad)
cdq
mov
test
push
xor
sbb
mov
and
dec
mov
cli
push
push
push
mov
imul
(bad)
mov
aaa
adc
push
push
hlt
xchg
push
xor
cmp
and
cdq
sbb
inc
or
clc
adc
cld
outs
dec
sbb
call
sti
popa
push
push
sbb
hlt
pop
pop
pop
fimul
ss
pop
sbb
mov
xor
xor
mov
cli
fmul
in
in
mov
pusha
in
bound
dec
jmp
pop
cld
adc
push
sbb
xor
pop
outs
push
adc
and
xchg
push
cmp
jg
cmp
pop
sbb
mov
xchg
call
shl
xchg
push
add
adc
test
fwait
cmc
mov
push
pop
add
inc
pusha
dec
push
adc
(bad)
add
sbb
jae
repz
sbb
lock
jmp
daa
push
dec
sub
jo
and
test
pop
mov
cmp
dec
adc
or
sbb
hlt
mov
mov
gs
or
lods
push
fs
std
jne
and
ja
popa
sbb
mov
sub
popa
loope
jmp
sub
mov
jecxz
jg
mov
and
sbb
mov
neg
push
mov
push
mov
lock
inc
jo
dec
out
popf
mov
add
cmp
popf
jge
lea
popa
dec
dec
inc
mov
pop
sbb
add
sbb
dec
push
cmps
add
cmps
jle
idiv
in
cmp
loopne
pop
aam
cmp
cmp
test
jg
inc
ins
mov
push
scas
and
outs
sub
inc
pusha
xor
add
nop
sahf
fistp
mov
shl
stos
add
xchg
test
rol
ins
and
adc
sahf
movs
push
pusha
adc
imul
movs
pop
add
sub
daa
or
out
(bad)
enter
mov
js
rol
arpl
xchg
lods
and
sub
and
imul
dec
loopne
scas
inc
clc
int
jmp
(bad)
test
ror
js
clc
or
push
js
xor
adc
or
adc
push
dec
xchg
ja
push
inc
lods
pop
nop
fist
je
adc
cmps
inc
inc
aam
pop
pop
push
or
add
dec
hlt
repz
dec
xchg
push
push
mov
(bad)
cdq
add
jmp
sbb
sbb
or
icebp
xor
cwde
mov
inc
(bad)
jmp
mov
add
int
push
fidiv
jp
add
or
hlt
je
jmp
sar
mov
xor
fwait
or
xchg
push
push
jno
daa
and
pusha
dec
popa
dec
xchg
jecxz
jae
leave
jns
sbb
clc
add
push
push
ret
in
mov
test
pusha
daa
das
ficom
or
fst
or
ror
dec
jle
data16
adc
and
jo
pusha
and
je
mov
(bad)
jnp
mov
mov
mov
(bad)
stos
retf
sub
in
sbb
nop
adc
push
inc
hlt
ror
jmp
fcomp
test
and
mov
inc
or
inc
sub
mov
xor
mov
mov
jo
xor
pop
aas
and
push
cld
jle
sub
jbe
push
retf
aas
xor
adc
xor
shl
and
sbb
inc
mov
or
or
inc
jae
into
mov
sti
(bad)
mov
and
and
mov
fbstp
ret
dec
je
push
sub
dec
ds
punpcklbw
pusha
call
or
adc
in
push
in
dec
add
mov
jmp
dec
jne
sahf
push
lock
in
(bad)
shr
jp
xor
dec
or
jbe
clc
adc
lock
add
add
mov
sub
rcl
adc
add
and
dec
add
pop
add
dec
jnp
(bad)
retf
movs
push
cmp
add
cmovo
inc
and
xchg
or
jmp
cmp
and
mov
add
mov
push
inc
push
mov
enter
cdq
stos
mov
hlt
leave
jle
add
test
outs
arpl
cdq
push
out
jl
add
scas
inc
sbb
dec
(bad)
cmp
test
inc
xchg
outs
retf
inc
lock
or
jbe
add
stos
inc
test
bound
add
jge
add
mov
into
pop
mov
test
mov
xor
sub
in
and
and
sub
and
cmp
dec
sub
pop
or
mov
mov
or
imul
inc
xor
cmp
mov
inc
sbb
jae
rol
adc
rcl
xchg
push
and
lock
mov
cwde
mov
gs
ins
mov
xor
arpl
gs
ins
jmp
movs
push
pop
retf
and
xchg
pop
mov
add
movhlps
cli
add
fmul
jns
stos
rcr
pop
jnp
lods
push
mov
stos
push
inc
clc
pusha
sub
in
push
lock
pop
cmp
sbb
pop
cmp
jl
clc
adc
inc
add
add
jbe
arpl
cs
(bad)
test
and
lods
push
cmp
outs
adc
add
dec
inc
jecxz
sbb
adc
and
adc
sub
sbb
in
or
outs
fs
xchg
add
outs
add
add
and
inc
gs
lea
es
imul
rol
sbb
inc
jo
push
xchg
inc
gs
out
lods
mov
and
inc
inc
and
loope
inc
inc
pop
sub
push
xor
addr16
adc
mov
mov
ror
cmc
inc
add
xchg
aad
sub
popa
lods
xchg
or
inc
fwait
mov
sbb
mov
xchg
ss
and
adc
inc
ret
mov
outs
cmc
out
adc
push
sbb
jl
or
add
push
rol
retf
in
and
mov
lods
popa
xor
or
sub
and
(bad)
aad
int
nop
sub
jb
jnp
or
push
add
ret
push
inc
xor
dec
fs
movs
scas
cdq
pop
mov
push
jg
inc
fidiv
cmp
stc
scas
xchg
or
inc
in
popf
retf
inc
call
inc
mov
jecxz
dec
push
stos
loop
dec
add
mov
xor
test
test
pop
clc
mov
or
inc
loope
push
jmp
sub
inc
test
push
mov
out
adc
loopne
mov
mov
retf
mov
sub
clc
pop
loopne
pop
push
(bad)
mov
sub
mov
sub
mov
pusha
js
nop
dec
inc
cmps
xchg
nop
jo
adc
adc
je
mov
jne
mov
add
or
ins
cmp
loopne
mov
or
cmp
mov
mov
sub
cmp
add
push
repnz
mov
cmc
mov
out
nop
mov
dec
lds
repz
out
inc
dec
mov
(bad)
adc
mov
jmp
rcr
iret
and
mov
jno
xor
and
sub
xor
dec
mov
clc
mov
dec
push
mov
pusha
xor
push
in
inc
sub
adc
rol
addr16
imul
out
mov
in
push
ds
cmp
imul
push
inc
adc
lods
mov
push
dec
lods
adc
cmp
cmp
and
or
inc
add
xor
dec
or
xchg
test
ins
inc
push
mov
adc
push
mov
xor
pop
ror
lods
jmp
pop
and
out
add
es
add
or
add
pop
mov
or
(bad)
sahf
add
add
jno
jge
mov
cmp
(bad)
mov
fistp
cs
jnp
das
test
push
(bad)
fild
(bad)
lock
cmp
inc
fadd
add
add
out
pop
arpl
mov
ins
and
mov
rol
pop
pop
adc
sub
xor
xor
test
adc
dec
inc
test
jae
lods
shl
jno
jb
or
cmp
adc
mov
inc
jb
popa
jns
push
enter
mov
dec
mov
mov
lds
pop
jg
pusha
and
sub
(bad)
cwde
mov
(bad)
mov
or
clc
js
ins
call
inc
out
jno
fld
add
inc
dec
jne
and
hlt
stc
mov
ins
fwait
sub
test
jle
mov
dec
dec
inc
dec
rcr
pop
inc
dec
jne
pop
out
adc
outs
jae
(bad)
gs
pop
mov
cdq
jbe
mov
push
push
test
in
popa
push
lock
test
mov
mov
inc
dec
out
cmps
lods
and
lea
clc
sub
mov
push
adc
xor
add
mov
and
sbb
or
loopne
sbb
in
add
add
or
mov
jmp
mov
lea
adc
add
test
cmc
xor
in
mov
and
repnz
or
inc
cld
adc
add
das
push
jns
add
sar
add
sbb
jmp
or
cmps
cmp
xor
cmp
jge
clc
and
add
inc
aaa
add
mov
sub
add
add
sti
dec
movzx
aas
and
add
mov
pusha
push
adc
shr
sbb
jo
ret
test
xor
in
inc
add
shl
pop
add
sbb
or
popa
add
xor
and
push
jnp
or
setne
push
adc
add
push
out
mov
cld
jle
inc
sub
inc
int
lock
movs
mov
add
pop
sub
sbb
gs
mov
hlt
and
je
jg
stos
call
jae
add
cmp
repz
fmul
dec
sbb
pop
dec
xchg
dec
pusha
mov
mov
lea
(bad)
xor
cmp
mov
fild
xchg
(bad)
mov
mov
pop
(bad)
xor
sub
mov
fisttp
inc
call
mov
adc
mov
or
push
add
push
or
das
push
or
jle
cdq
inc
mov
sub
sti
cmps
jmp
inc
sub
add
xor
add
xor
jmp
outs
cmp
stos
aas
jle
cmp
mov
xor
loope
sbb
or
enter
int
add
dec
push
or
push
push
call
aas
mov
mov
mov
add
dec
cmp
dec
or
push
push
je
or
call
retf
into
mov
adc
adc
xlat
js
outs
mov
push
pop
fcomp
ror
and
mov
mov
clc
mov
pop
in
or
dec
dec
inc
dec
pop
sub
xchg
call
adc
fs
inc
shl
(bad)
les
mov
das
add
sar
jmp
cmp
lods
jmp
in
add
dec
loope
push
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
push
push
push
dec
pop
pop
pop
popa
bound
(bad)
jmp
addr16
imul
jo
jb
je
jbe
js
jp
xor
xor
sti
aaa
cmp
sub
lahf
ja
sbb
and
mov
pop
xor
ret
rep
movs
movs
lea
adc
arpl
ret
pop
cmp
dec
push
bound
xchg
xlat
fnstcw
lock
ins
or
(bad)
adc
loopne
xchg
lock
call
xchg
and
scas
fs
push
(bad)
(bad)
lahf
popa
aaa
sti
add
emms
outs
inc
jae
push
push
xchg
addr16
fadd
push
mov
inc
outs
fild
push
add
mov
(bad)
adc
and
ins
repnz
lahf
add
push
enter
mov
push
push
dec
mov
xchg
addr16
repnz
fisub
loopne
out
jns
xor
ds
push
nop
xor
add
add
jne
jb
lock
mov
push
je
jo
xchg
mov
cmp
sbb
mov
and
push
push
mov
scas
push
dec
jl
wbinvd
add
add
push
push
push
or
jg
shl
adc
adc
sbb
rol
or
les
dec
gs
dec
adc
std
xor
push
inc
sub
shl
ins
add
add
fnsave
xchg
cmp
mov
and
add
inc
icebp
sub
or
ret
fnstenv
mov
push
and
mov
add
add
inc
(bad)
aam
arpl
inc
arpl
mov
dec
adc
ret
fs
jns
or
ja
fs
pop
inc
lds
inc
inc
leave
cmp
xchg
fistp
je
inc
pop
int3
mov
cmp
inc
or
jb
push
repnz
stc
xchg
inc
adc
outs
sbb
xchg
jo
and
cmp
lea
or
or
jnp
cmp
out
adc
outs
inc
ins
into
aaa
push
pop
xchg
add
ret
jg
push
jle
neg
sbb
push
call
inc
mov
stos
jg
enter
jg
xor
adc
js
pop
pop
loopne
(bad)
pusha
adc
add
add
push
inc
lock
mov
ins
xchg
fldenv
dec
add
inc
hlt
add
mov
or
ja
les
inc
push
or
pop
pop
lods
pop
aas
loope
scas
mov
add
mov
ins
call
or
push
(bad)
(bad)
pop
xchg
add
xchg
ja
test
daa
mov
mov
adc
sar
iret
and
nop
ja
add
jmp
push
shl
pusha
mov
sbb
shl
or
lods
sbb
dec
idiv
sbb
popf
add
sbb
movs
pop
and
lock
sar
imul
sbb
test
inc
or
inc
mov
cdq
nop
or
adc
add
and
rol
daa
inc
or
or
out
rcr
mov
stos
int
imul
ret
ja
and
cmp
das
rol
sbb
or
xchg
das
add
and
cmp
inc
or
retf
xchg
mov
(bad)
pop
add
adc
pop
out
sbb
fisubr
add
ret
sub
nop
fcomp
or
and
imul
outs
lock
ret
or
(bad)
aad
mov
out
mov
test
icebp
or
clc
iret
pop
inc
or
bound
dec
xor
daa
enter
mov
or
cmp
pop
add
dec
jmp
push
call
add
or
push
hlt
adc
push
inc
xchg
dec
(bad)
push
enter
test
or
movs
fnsave
mov
add
cs
sub
aad
iret
loopne
lods
dec
arpl
or
mov
mov
jnp
mov
lods
test
and
fnstcw
pop
or
adc
cmove
enter
pop
mov
loope
in
mov
xchg
pop
xchg
or
mov
in
iret
inc
sub
pop
ror
aad
pop
inc
inc
cmps
int3
mov
or
sbb
mov
pop
jae
lock
and
cmp
adc
sbb
xor
sub
push
inc
jmp
sbb
add
(bad)
fnop
fsub
shl
mov
xchg
jmp
ret
out
push
aam
sbb
add
sub
dec
or
push
add
xor
out
jmp
adc
sbb
nop
je
aaa
nop
push
inc
js
div
dec
int
outs
jbe
pusha
ret
mov
in
aaa
jbe
lock
cs
pop
aaa
call
daa
les
out
nop
push
jl
(bad)
pop
call
adc
daa
daa
daa
sbb
dec
daa
daa
daa
daa
dec
push
push
daa
sub
imul
test
dec
ja
gs
add
cmc
or
and
ss
cwde
xchg
and
popa
ja
sbb
add
pop
inc
imul
adc
adc
or
out
adc
mov
rcl
sbb
xchg
adc
cmp
mov
shl
dec
popa
cs
addr16
fadd
mov
jne
mov
fiadd
sub
out
(bad)
jp
aaa
jae
imul
inc
dec
add
enter
push
arpl
push
xchg
push
outs
lods
inc
sbb
xor
lds
sub
cmp
inc
or
cmps
popa
fwait
loopne
xchg
jne
outs
ins
iret
mov
loope
pop
inc
sub
and
push
inc
loopne
sub
push
dec
inc
push
popa
addr16
outs
jg
mov
dec
pushf
imul
mov
push
ins
popa
or
push
xchg
jae
or
push
cmp
aas
jge
test
dec
add
mov
mov
test
push
into
push
dec
fadd
mov
mov
inc
mov
xor
je
mov
shl
adc
test
clc
inc
data16
jb
jp
or
cwde
adc
lds
cmp
stos
pop
or
sub
xchg
call
pop
leave
or
clc
in
sub
jmp
daa
pop
popf
sub
mov
jns
adc
xchg
inc
xor
mov
hlt
or
push
mov
retf
call
or
out
sbb
adc
stos
mov
pop
add
sbb
mov
push
sub
add
inc
cmp
mov
rcl
sbb
imul
pop
xor
test
or
aad
jnp
(bad)
inc
or
sbb
stos
dec
or
adc
adc
(bad)
jmp
mov
or
or
jecxz
push
stos
(bad)
cmc
lds
dec
scas
das
idiv
test
or
and
sbb
inc
out
out
repnz
clts
mov
pop
xor
cmp
pop
xchg
outs
push
push
loopne
pop
adc
mov
xlat
pop
jnp
js
adc
push
lods
pop
mov
add
(bad)
lods
xor
sbb
or
xchg
shl
jbe
in
enter
in
iret
enter
cmp
mov
enter
sbb
inc
push
enter
mov
enter
inc
arpl
imul
pop
inc
mov
add
mov
push
outs
adc
push
inc
imul
andnps
push
jb
je
clc
pop
test
aad
inc
mov
or
js
scas
jge
push
aad
sahf
push
sub
das
pop
push
and
nop
adc
bound
xlat
add
push
dec
add
jo
sti
jmp
inc
adc
ss
or
ret
jb
adc
add
sub
aaa
add
xchg
rcl
sar
inc
jns
inc
mov
add
ret
mov
push
clc
(bad)
aam
jmp
add
aad
add
inc
sub
dec
pop
or
leave
mov
push
aad
push
mov
push
es
cmc
jnp
or
lds
loopne
pop
sbb
dec
daa
add
bound
jecxz
xchg
lock
xchg
xor
cwde
imul
or
adc
stos
and
ja
clc
xchg
jl
jo
and
adc
daa
push
inc
dec
push
ins
rol
push
xlat
movs
idiv
sbb
xchg
add
dec
outs
jb
or
es
enter
cmp
mov
jecxz
lock
inc
mov
jmp
fild
aaa
sub
jnp
pushf
call
pusha
add
xlat
xlat
enter
lahf
ja
push
ins
das
jnp
sub
mov
xlat
mov
push
lahf
jbe
add
push
adc
ror
(bad)
or
xor
mov
mov
call
data16
in
sbb
xlat
mov
add
push
imul
cmp
push
(bad)
xlat
or
lods
push
mov
ins
mov
sbb
shl
ror
push
fsub
clc
add
adc
scas
loop
adc
adc
sbb
adc
test
adc
sti
xor
jmp
stos
clc
mov
mov
push
into
push
add
xlat
mov
fmul
add
aas
fnstenv
fidivr
push
push
fldcw
jbe
in
adc
and
lods
out
movs
cmp
popf
adc
test
push
fcomip
ins
mov
pop
jo
pop
add
inc
add
xchg
cmp
sbb
push
jbe
js
les
fimul
or
mulps
(bad)
mov
mul
dec
pushf
test
pop
dec
or
add
fst
aam
popa
out
mov
dec
mov
or
xchg
mov
stc
push
ins
and
ins
mov
adc
push
pop
frstor
int3
lods
fwait
cmp
imul
or
arpl
dec
in
aad
aas
sar
cs
pop
xor
add
mov
icebp
and
or
sbb
push
imul
dec
(bad)
push
fimul
dec
(bad)
ins
adc
retf
sbb
(bad)
add
fcomp
repz
int3
add
scas
or
xchg
dec
dec
dec
dec
cwde
pushf
mov
dec
test
mov
or
or
mov
loope
adc
xor
push
push
cmc
test
(bad)
pusha
sbb
xor
xor
xor
sbb
push
js
arpl
mov
inc
dec
and
dec
test
and
xchg
or
inc
shr
inc
mov
and
test
add
mov
inc
push
ja
or
inc
mov
inc
add
mov
js
les
add
jb
les
jno
into
sbb
hlt
xchg
jle
(bad)
sbb
add
and
sub
add
inc
fsubr
les
inc
js
xor
jmp
add
dec
inc
cmp
dec
dec
add
and
adc
and
or
jmp
add
mov
inc
adc
sbb
nop
dec
push
add
bound
dec
inc
or
call
pop
and
fdivr
mov
cmp
pop
jnp
mov
sbb
xchg
mov
pushf
cmp
jnp
scas
jmp
jnp
or
mov
pop
in
out
test
dec
mov
or
mov
push
add
cld
push
pop
dec
pop
arpl
mov
jp
rol
lea
add
ins
pop
cmp
vpmaxub
and
cmps
and
sub
stc
push
imul
pop
test
(bad)
add
and
sbb
sbb
xchg
into
clc
sbb
cmp
dec
cmp
popf
lods
ror
loopne
add
js
sbb
pop
push
jecxz
push
mov
push
lods
add
adc
pop
xchg
or
dec
jmp
push
test
xchg
jae
pop
or
add
jo
cwde
lea
pop
(bad)
or
dec
ret
adc
call
cmp
add
and
fnstenv
xchg
cmp
add
popa
mov
inc
sbb
pushf
add
sbb
sub
jmp
loopne
loop
adc
pusha
xor
push
add
push
cmp
cmps
and
and
adc
daa
loop
sbb
cmp
inc
aas
pop
loope
enter
sbb
xor
pop
add
and
or
sub
or
sti
mov
push
(bad)
outs
push
or
add
adc
add
xchg
iret
scas
enter
add
inc
int
add
ss
cdq
sbb
out
inc
data16
fadd
dec
jecxz
jae
xchg
rol
in
shl
fld
pop
fsubr
jmp
(bad)
xlat
pop
je
xchg
inc
sti
cmpps
pop
loopne
push
dec
sbb
push
pop
jno
push
adc
ss
xor
push
in
or
inc
add
shr
dec
adc
dec
shl
or
or
shr
fdiv
mov
mov
and
cwde
imul
loop
aad
push
push
retf
(bad)
mov
xchg
xchg
push
pop
push
fbld
push
pop
xor
(bad)
and
adc
cmp
aam
sub
pushf
in
add
push
(bad)
retf
inc
popa
push
mov
retf
call
adc
imul
call
mov
call
sub
xor
xor
call
cmp
cmps
and
inc
je
dec
pop
and
pop
(bad)
dec
call
and
call
jo
je
pop
mov
pop
inc
cmp
adc
in
in
push
sbb
shl
and
fs
sub
cmp
fs
inc
sbb
sub
dec
fisttp
daa
or
dec
cs
mov
mov
inc
out
mov
cmp
mov
cwde
jmp
push
mov
push
inc
or
sbb
loopne
mov
and
cmp
add
in
mov
fdivr
fcom
xchg
add
fdivr
aam
mov
aam
sar
inc
rcr
mov
pop
int3
and
mov
cmp
aaa
sbb
fadd
cmp
mov
popa
mov
push
out
jbe
stos
inc
mov
xchg
js
add
sub
xchg
shr
setge
adc
mov
jl
mov
jl
xor
inc
adc
or
xor
popa
movs
cmp
sub
pop
adc
lahf
cmp
push
sar
sub
mov
outs
leave
(bad)
pop
push
(bad)
mov
cmps
shl
cmp
ror
inc
clc
sub
xor
or
dec
inc
inc
jne
inc
(bad)
je
rcr
lods
dec
fstp
fwait
jmp
fdiv
cmp
fs
push
xchg
sub
xor
mov
cmp
pop
movs
mov
loopne
popa
cmps
ror
scas
sub
call
add
fild
fdiv
jge
faddp
mov
and
add
jmp
mov
pop
pusha
imul
pop
push
(bad)
iret
push
shl
mov
jmp
dec
mov
fcom
and
ja
mov
lock
jle
mov
rol
loope
call
ins
cmps
cmp
test
push
xchg
push
iret
mov
push
nop
out
js
and
mov
pop
xchg
xlat
movs
cmps
lock
inc
aaa
outs
add
mov
add
xor
shr
imul
inc
pop
adc
fcomp
stos
add
or
sbb
addr16
sbb
stos
inc
dec
scas
gs
xor
sbb
add
push
adc
fbld
lahf
add
lock
jae
dec
xor
add
sar
pcmpgtw
aaa
(bad)
fist
das
and
test
mov
mov
inc
cs
ret
xor
add
jle
push
push
push
add
ins
add
cmp
andps
inc
and
lahf
arpl
cmp
cdq
xor
mov
cld
add
xor
dec
adc
pushf
push
jno
mov
cmp
push
mov
sbb
mov
repnz
and
and
and
repnz
out
add
mov
test
sub
aam
jle
or
sub
and
dec
mov
sbb
sub
add
inc
test
or
or
jmp
pusha
cmp
sbb
adc
or
push
sub
nop
imul
sbb
xchg
push
scas
dec
enter
jbe
lea
sar
xchg
js
sub
mov
inc
popa
pusha
mov
and
push
mov
(bad)
xor
ret
sbb
xchg
out
sbb
loop
dec
popa
inc
and
das
mov
iret
jmp
and
adc
jg
dec
or
pop
push
adc
mov
mov
rcl
pop
or
and
mov
add
and
iret
add
add
adc
ins
inc
sub
or
cmp
icebp
add
pop
mov
push
daa
adc
out
repz
cmp
adc
je
adc
es
or
sbb
(bad)
xchg
ss
sub
cmc
(bad)
in
sub
inc
sbb
jne
push
inc
outs
mov
xchg
out
dec
sbb
clc
adc
std
dec
ficomp
cmp
push
(bad)
dec
mov
rol
jge
mov
xor
or
lea
hlt
pop
sbb
mov
mov
or
cmps
add
pop
add
jmp
add
and
mov
push
ja
fistp
mov
daa
sub
xor
mov
mov
mov
inc
shl
jp
add
aas
mov
adc
mov
jns
jle
xor
daa
mov
daa
inc
inc
inc
add
adc
jmp
xor
dec
in
ret
es
xchg
mov
ret
daa
cmp
jmp
sub
fcmovu
movs
mov
imul
test
and
xor
or
sbb
push
jp
(bad)
out
inc
and
lock
je
das
ins
mov
movzx
mov
pop
xchg
add
or
xchg
or
jg
aam
cmp
repz
push
jae
xlat
push
pop
or
mov
mov
sub
ja
add
test
idiv
jmp
sub
sar
out
add
fwait
pusha
inc
lods
mov
and
es
adc
jo
pop
add
push
or
pop
lds
jno
adc
cdq
xor
dec
std
lahf
push
mov
adc
outs
bound
mov
dec
sahf
mov
sub
mov
sbb
pop
inc
scas
cmp
je
punpckhwd
dec
dec
pop
addr16
adc
jns
pop
ret
lea
mov
and
daa
mov
jo
(bad)
push
enter
fwait
push
or
ror
and
stos
or
mov
push
add
stc
add
das
fdivr
jnp
fcom
add
adc
xlat
sbb
fs
cmp
int
add
in
pop
sar
push
sbb
lods
je
xor
mov
imul
mov
ins
pop
cmps
stc
jbe
jb
and
and
cmp
mov
push
movs
jae
pop
inc
pop
imul
inc
daa
lods
xchg
pop
adc
pop
mov
sbb
dec
mov
test
mov
add
fwait
push
sub
adc
xchg
add
mov
xor
int
mov
dec
sbb
inc
jnp
enter
jmp
adc
inc
inc
cdq
xchg
popa
retf
inc
movs
lock
mov
sub
and
cli
push
out
inc
ffree
test
push
sub
ja
ja
mov
lea
dec
aas
add
popa
cld
bound
jns
scas
invd
add
cmps
add
je
pop
mov
dec
retf
fdivr
stos
push
shl
mov
push
or
inc
les
jl
mov
jmp
push
call
or
sbb
xor
pop
sub
mov
fisttp
sub
cmp
or
add
jo
or
jecxz
or
cmps
pop
sub
loopne
adc
mov
pop
cmps
call
movs
sub
ret
std
push
clc
int
and
or
or
rcl
rol
lods
std
pop
iret
movs
mov
lods
in
cmp
sub
aas
out
in
mov
ud1
mov
ret
dec
in
push
push
loopne
dec
or
inc
xor
(bad)
and
mov
sub
or
in
pusha
xor
jmp
dec
pop
jmp
push
inc
pop
sbb
call
add
jne
or
dec
or
(bad)
sar
mov
and
mov
or
inc
test
xor
xchg
mov
xchg
(bad)
lahf
or
loopne
or
jo
sub
sbb
add
in
push
or
push
daa
dec
xchg
mov
js
into
mov
loope
jl
mov
xchg
inc
lods
fild
cmp
jnp
mov
or
hlt
ja
and
enter
aas
jp
sbb
jae
mov
rcr
(bad)
push
dec
lea
cmp
xchg
xor
clc
mov
mov
or
nop
mov
pusha
cmp
xchg
in
mov
add
mov
mov
rcr
in
sub
cmp
xor
movs
loopne
dec
add
and
loopne
fdivr
lock
cmp
cmp
les
and
lea
or
das
sbb
or
inc
add
pop
adc
sbb
shl
(bad)
push
test
push
sub
mov
add
add
pop
mov
mov
shl
mov
scas
jp
lahf
dec
and
les
and
pop
outs
test
aad
(bad)
push
push
pop
add
dec
dec
pop
push
add
jbe
xor
aas
(bad)
xchg
imul
ficom
sbb
into
xchg
es
dec
xchg
dec
cs
xchg
xchg
pushf
pushf
gs
retf
and
lods
mov
mov
cwde
or
push
mov
scas
fiadd
add
jp
inc
xchg
sub
inc
pop
(bad)
cmp
test
dec
dec
mov
xor
cli
sbb
jmp
xor
sar
mov
or
inc
pop
mov
or
mov
adc
push
es
dec
and
ins
imul
pop
sub
mov
and
out
mov
aaa
mov
sub
test
popa
jmp
mov
mov
xor
ret
mov
nop
seto
ja
fisubr
mov
iret
mov
shr
mov
push
xor
xchg
mov
mov
fmul
clc
nop
nop
xor
xchg
xchg
gs
push
movs
push
pushf
pushf
mov
movs
and
add
test
push
pushf
nop
movs
mov
aas
imul
aam
mov
add
fld
fcomp
jae
add
retf
add
lock
mov
loop
je
cmp
jp
mov
jmp
dec
cli
call
je
inc
clc
mov
lahf
or
xchg
mov
jle
sub
mov
xchg
into
leave
and
lock
mov
imul
mov
mov
pop
mov
je
pop
(bad)
push
add
pop
adc
loopne
xlat
dec
add
adc
mov
jge
cmps
or
sbb
mov
push
mov
push
out
sub
neg
inc
xor
imul
and
xor
pop
mov
mov
add
mov
sbb
or
cwde
xor
mov
imul
lods
push
aas
cmp
xor
or
xor
nop
add
add
ret
jnp
outs
loopne
jge
adc
ror
mov
cmp
lahf
xchg
into
in
mov
adc
jae
or
sub
adc
dec
add
arpl
popa
fild
loop
ret
push
add
add
add
pop
scas
push
add
aam
fsubr
arpl
adc
addr16
daa
cmp
pop
dec
xchg
or
xrelease
push
or
adc
adc
jb
cmp
not
setne
mov
enter
lods
cmp
add
sbb
loopne
mov
dec
mov
in
push
loopne
or
pusha
out
into
inc
(bad)
shr
pop
xchg
sahf
(bad)
ins
popf
fmul
aam
fcom
xchg
xchg
imul
sti
(bad)
cmp
sbb
daa
mov
add
pmuludq
add
jnp
in
adc
lea
not
sub
or
out
int3
in
shl
xor
retf
push
dec
shl
aaa
fsub
(bad)
push
xchg
icebp
sbb
neg
fsub
xlat
das
and
xor
jmp
sub
add
add
inc
sub
jmp
pop
mov
add
pop
or
sbb
push
and
stos
mov
into
mov
sbb
add
aaa
sbb
push
mov
cmc
mov
rcl
mov
dec
inc
inc
popa
arpl
pushf
and
or
inc
les
pop
add
fwait
jge
cmp
adc
adc
push
and
jle
das
aam
scas
and
rol
ins
ins
data16
pop
out
call
or
pop
sbb
dec
push
neg
xchg
jne
in
cld
push
push
pop
and
push
push
xor
pop
xlat
shl
add
and
out
nop
adc
popa
lahf
and
push
out
mov
jp
test
sti
and
adc
in
jo
arpl
test
ja
mov
(bad)
fucomp
dec
mov
adc
icebp
mov
push
out
loopne
sbb
dec
cs
push
retf
push
cli
sub
pop
out
push
cmovge
adc
loop
rol
adc
or
and
sbb
or
dec
sbb
sbb
push
out
or
sti
jo
icebp
pop
lea
mov
test
xchg
sbb
or
push
lods
in
adc
sbb
(bad)
or
in
mov
test
dec
into
imul
loope
pop
add
add
or
das
retf
(bad)
add
pop
int
cmp
das
shr
push
or
or
jae
jae
push
into
or
mov
sub
mov
inc
lahf
sti
dec
jbe
sub
aaa
mov
sbb
nop
mov
or
fs
loopne
dec
sub
xchg
pop
sub
xchg
scas
sub
inc
aaa
rol
mov
int3
sbb
(bad)
mov
aam
or
mov
adc
sub
push
lds
mov
jl
sbb
mov
ins
add
arpl
mov
in
adc
jg
or
add
add
push
pop
inc
or
mov
into
adc
ffreep
add
lods
push
sub
push
lods
jo
and
adc
cld
(bad)
adc
jle
push
leave
push
jnp
scas
(bad)
or
and
jge
pop
dec
pop
jl
add
shr
and
pop
sbb
cmp
ffreep
push
inc
mov
inc
inc
add
inc
rol
loopne
mov
mul
xchg
loopne
pop
mov
adc
sbb
cli
inc
inc
sti
mov
outs
jb
cmp
xor
and
jne
add
add
mov
sub
add
ret
ror
push
imul
inc
adc
ror
outs
pop
outs
enter
scas
mov
add
add
scas
rol
(bad)
js
popa
or
jbe
pcmpgtd
add
aas
ret
iret
add
dec
lods
pop
and
sahf
cmps
gs
or
and
ins
minps
lock
test
popa
or
inc
mov
sbb
(bad)
jmp
inc
add
and
mov
adc
lea
jbe
inc
pop
daa
out
add
adc
or
adc
sbb
mov
pop
pushf
mov
lea
repnz
out
mov
out
adc
xchg
les
call
mov
inc
push
push
push
arpl
push
xor
push
loop
or
jmp
mov
pop
xchg
push
sub
adc
clc
mov
pop
pop
ret
daa
js
xor
mov
fdiv
sbb
add
mov
ret
nop
fsub
int
in
xchg
add
dec
shr
sbb
sub
ret
inc
or
sub
outs
xor
and
retf
or
pushf
icebp
popf
pop
jp
je
push
mov
mov
(bad)
into
adc
sub
hlt
mov
ins
xchg
lahf
xchg
xchg
pusha
pop
ret
add
pop
pop
clc
mov
cmp
push
sbb
pop
sub
push
mov
xor
pop
adc
or
xor
mov
xchg
lock
or
sbb
fmul
sub
mov
scas
es
daa
out
or
mov
scas
push
pop
ret
fild
imul
nop
addr16
push
inc
ins
jmp
in
inc
add
in
je
gs
cmp
in
xchg
dec
stc
sbb
aad
jne
sub
arpl
add
je
sbb
fs
jne
mov
pop
rcl
mov
mov
cmps
into
std
js
pop
aas
imul
clts
ins
jmp
mov
mov
and
fisttp
int3
test
call
je
aam
icebp
jle
add
fs
dec
fimul
sbb
xor
jne
add
jg
(bad)
cwde
loope
jmp
rcr
and
adc
mov
pop
dec
pop
sar
shr
or
cdq
mov
pusha
push
push
daa
lock
mov
push
pop
push
jbe
test
daa
cld
push
pop
dec
out
jae
out
imul
pushf
mov
add
xor
inc
sbb
lock
dec
push
test
add
pop
ss
push
inc
popa
ins
dec
popa
push
mov
inc
dec
dec
inc
or
xchg
xchg
mov
add
pop
pop
mov
je
lods
(bad)
jbe
popa
add
pop
das
ins
jmp
push
cmp
mov
dec
pop
sbb
mov
(bad)
gs
xor
rcr
js
cmp
push
sbb
daa
imul
pop
inc
lock
cmp
push
fs
cmp
clc
and
adc
cmps
add
push
hlt
pop
test
lods
nop
pop
aaa
sub
dec
arpl
and
xor
jae
and
es
jge
jle
adc
and
(bad)
xor
mov
jo
xor
sub
in
xor
int3
pusha
sub
sahf
(bad)
xor
mov
mov
fnstenv
arpl
sbb
or
sbb
inc
dec
jne
jmp
or
adc
mov
push
arpl
jo
or
xor
sub
inc
in
inc
cmp
or
add
pusha
imul
bound
inc
or
jp
and
xchg
rol
add
inc
cld
mov
sbb
sbb
or
inc
pop
ret
out
xor
mov
jl
enter
jge
mov
and
or
mov
clc
cmp
hlt
adc
jg
pop
call
mov
test
std
fsub
xor
pusha
xor
test
inc
sbb
cmps
xor
xor
les
retf
dec
out
lock
dec
or
in
lock
pop
cmp
and
add
mov
in
(bad)
ins
sub
mov
les
outs
xchg
lods
ds
jne
cmc
push
popa
push
jno
outs
or
fld
dec
sbb
mov
movs
jmp
sbb
lea
or
outs
mov
jg
int
idiv
shl
aas
and
ins
push
dec
add
jo
pop
and
pop
inc
fsub
pop
jb
inc
sbb
iret
aad
(bad)
adc
inc
int3
jbe
fwait
ja
mov
and
jo
ins
int
pop
mov
dec
push
jb
add
and
mov
ins
aas
pop
clc
dec
fs
or
jne
pop
sar
das
retf
mov
and
and
pop
push
cmps
push
fmul
push
xchg
pop
daa
or
cmovno
in
mov
adc
outs
jmp
inc
cmp
jne
repnz
stc
(bad)
js
rol
push
xor
push
push
dec
dec
adc
cwde
or
test
outs
push
inc
inc
adc
xchg
or
push
pop
rol
outs
jne
fs
jae
ss
adc
xor
jo
dec
dec
cmp
or
ins
outs
pop
pop
pop
inc
lock
mov
sub
jl
xor
jmp
(bad)
push
pop
mov
sbb
sbb
shr
inc
adc
pmuludq
push
ins
loopne
add
lods
stos
mov
int
(bad)
and
lea
lock
inc
(bad)
cmp
in
(bad)
jne
call
sbb
cs
push
mov
out
or
mov
pop
pusha
test
addr16
dec
add
inc
xor
or
jne
cmp
xor
pop
pop
pop
sub
push
or
push
daa
mov
int3
or
xor
sub
push
gs
xor
xchg
cld
mov
mov
push
cmp
dec
dec
lock
adc
mov
or
sbb
mov
or
add
adc
and
es
data16
scas
daa
mov
sub
lock
mul
inc
pop
add
mov
addr16
pop
popa
dec
push
pushw
mov
dec
adc
pop
cmp
jge
dec
or
arpl
(bad)
sub
pop
mov
xor
add
mov
push
inc
lock
xchg
xor
dec
jne
jnp
mov
cmp
ins
mov
or
pusha
adc
outs
ins
stos
push
gs
outs
test
fmul
(bad)
fs
push
mov
or
adc
adc
or
imul
push
sub
add
sub
shr
sbb
inc
pushf
jbe
mov
push
out
je
das
jp
push
sub
add
xor
xchg
mov
cs
or
ret
xchg
call
push
add
ja
push
adc
inc
test
into
add
push
sub
jno
outs
jg
push
sbb
es
shl
jp
sbb
mov
femms
sub
jbe
fs
pop
dec
xchg
sub
leave
leave
in
in
mov
and
in
in
cs
pushf
fnstenv
xor
sbb
pop
cmps
lock
jns
(bad)
pusha
xor
cmp
xor
mov
sahf
pushf
rcr
xor
dec
dec
dec
neg
push
sub
dec
call
xor
push
aas
xor
pop
lods
fdiv
add
test
inc
add
stos
pop
jecxz
or
inc
push
add
mov
cmp
xor
scas
adc
push
popf
sbb
add
popa
outs
push
push
in
add
mov
sub
inc
and
popa
test
or
ret
(bad)
jne
je
jo
mov
mov
mov
adc
adc
mov
ret
or
or
xchg
adc
pop
pop
jmp
mov
mov
mov
retf
add
fcomp
retf
dec
retf
jl
cmp
pop
push
retf
mov
(bad)
mov
adc
pop
retf
or
pop
inc
push
xchg
js
xchg
rol
dec
outs
test
inc
cmp
and
ss
push
rol
adc
dec
ja
rcl
out
add
pop
ins
jns
cdq
or
push
jne
inc
ins
add
push
sbb
and
mov
xchg
mov
retf
adc
js
ins
or
pop
in
fdiv
cmp
bound
pop
dec
inc
popa
shl
mov
add
inc
mov
xchg
push
gs
add
add
jle
aaa
adc
mov
add
imul
inc
add
shl
imul
je
aad
pop
xor
cmps
add
inc
pusha
xor
rcl
mov
enter
icebp
mov
or
add
xor
push
adc
mov
inc
sbb
xchg
push
dec
fmul
clc
outs
xchg
add
and
add
stos
or
mov
or
addr16
and
mov
lds
(bad)
xchg
xchg
fnstenv
xor
or
jmp
mov
sbb
jl
inc
popa
mov
pop
adc
leave
inc
pop
loopne
add
cmc
out
stos
xor
add
adc
cmp
add
or
inc
sub
pop
mov
jg
inc
and
dec
and
fnstcw
imul
call
xor
xor
hlt
cwde
dec
aas
xor
jne
add
call
push
nop
push
adc
sar
mov
sub
mov
pop
add
inc
jecxz
xchg
push
pop
test
test
and
lock
bswap
xor
xor
inc
addr16
add
jno
sub
iret
sbb
jmp
cmp
loopne
mov
inc
add
and
push
and
sahf
xor
pop
add
mov
or
cdq
loop
xchg
or
ja
jl
mov
movs
repnz
or
cli
je
(bad)
adc
mov
xor
cli
out
dec
add
dec
mov
inc
or
mov
lock
mov
ror
stc
es
adc
xor
sbb
fs
and
and
out
or
adc
jne
adc
les
mov
aam
ficom
rcl
int
inc
(bad)
jmp
and
cmp
sub
xor
push
and
add
rol
cmp
sti
and
mov
idiv
push
cmp
push
icebp
adc
sbb
inc
jmp
sub
in
xchg
jmp
cmp
xor
cmp
out
popf
leave
test
inc
xchg
xor
jge
aad
or
mov
div
mov
iret
aam
iret
fild
(bad)
sar
mov
add
adc
stos
and
jbe
adc
dec
pop
and
cmp
or
or
popa
xchg
inc
je
test
out
jl
add
jmp
add
sub
xchg
cmp
jle
cmps
rol
cmps
sbb
and
cmp
push
sbb
cmp
lahf
inc
adc
dec
adc
and
dec
rcl
mov
fwait
(bad)
fiadd
call
sub
inc
and
add
add
cmps
inc
das
dec
or
dec
int
mov
inc
pop
enter
cmp
inc
xchg
mov
es
mov
(bad)
ja
ins
inc
inc
add
jg
jbe
js
cmp
mov
mov
int3
xchg
mov
pop
and
nop
aas
ret
xlat
mov
ins
cmp
dec
fsub
xchg
in
xchg
lods
cmp
out
adc
xor
push
mov
or
add
sub
sub
sar
adc
in
inc
jmp
in
dec
test
jl
inc
test
cmc
pop
push
lea
cmp
jge
pop
jb
pop
bound
cmp
je
ja
jmp
add
dec
jne
outs
adc
shr
push
lea
mov
or
push
inc
dec
jne
xor
or
and
sar
fsubr
inc
sub
idiv
mov
mov
out
gs
push
adc
pop
iret
and
cmp
jae
leave
clc
inc
xlat
and
cmovs
sub
add
or
dec
(bad)
push
nop
pop
and
dec
adc
jp
add
(bad)
pop
add
pusha
add
push
and
inc
and
push
leave
cmp
shr
dec
into
xlat
mov
test
or
sub
add
adc
pop
dec
loope
sub
je
and
add
sub
popa
mov
adc
(bad)
push
dec
xor
pop
das
ret
inc
loop
or
jle
fimul
xor
and
mov
ss
sub
sbb
add
test
inc
or
stos
(bad)
jbe
push
ret
sbb
cmp
jae
add
pop
or
or
add
xchg
push
(bad)
aam
sub
add
in
xchg
pop
pop
divps
pop
and
inc
jb
jno
and
imul
imul
cmp
fiadd
sub
or
push
xor
add
dec
loopne
inc
jbe
add
nop
ror
ins
xchg
cmp
into
bound
push
sbb
mov
jecxz
add
pop
sbb
jae
push
add
push
jns
loop
dec
scas
dec
test
ds
fwait
sub
mov
fild
push
mov
scas
add
push
les
in
inc
pop
lahf
adc
iret
mov
add
pop
mov
sub
test
psrad
add
mov
or
rcr
add
sub
ins
imul
inc
inc
add
ffreep
xchg
popa
and
mov
dec
outs
test
ret
mov
add
xor
ja
mov
pop
pop
push
and
shr
mov
dec
pusha
pop
inc
cs
sbb
sbb
inc
and
mov
adc
imul
add
xor
pushf
inc
sub
and
adc
jmp
test
jge
mov
pop
mov
sar
mov
clc
and
pop
aaa
pop
shl
loopne
push
pop
inc
add
add
push
test
sbb
test
xor
inc
mov
or
mov
pop
lods
or
sub
or
xor
gs
lds
ror
jge
icebp
push
add
dec
cmps
ret
(bad)
rcr
or
rol
hlt
shl
and
inc
aas
arpl
add
(bad)
sbb
add
push
ror
stos
iret
push
push
pop
inc
push
adc
popw
shr
out
pop
aaa
ret
xchg
adc
and
inc
adc
mov
add
adc
add
add
dec
jecxz
inc
xor
mov
dec
and
aaa
pop
and
push
stos
in
xchg
mov
addr16
mov
mov
push
add
push
clc
xor
mov
push
fisttp
dec
and
jp
pop
out
loopne
push
pop
aaa
xor
ins
pop
imul
ja
bound
push
(bad)
pusha
jno
scas
dec
dec
cmp
jno
dec
pmaxub
jg
arpl
inc
cmp
jne
add
aam
dec
fdivrp
add
clc
adc
inc
xor
dec
loop
loope
shl
cmp
push
adc
jl
pop
repnz
mov
mov
add
cmp
aam
and
add
xlat
in
pop
test
or
ja
xor
ret
repnz
fs
call
cmp
jne
dec
inc
adc
mov
cmp
mov
fild
and
jo
fsubr
mov
mov
inc
add
dec
dec
popa
es
gs
sar
inc
das
inc
cmc
mov
aas
ins
jo
mov
xor
ss
and
sbb
mov
pop
lock
or
push
adc
pop
dec
popa
jb
cmps
aaa
or
popa
pushf
inc
pop
das
adc
popf
add
lahf
sub
add
mov
lahf
nop
and
dec
push
push
aaa
jbe
adc
xchg
adc
hlt
popf
add
imul
aaa
jnp
popa
out
adc
adc
dec
xchg
add
fincstp
xor
push
fimul
adc
push
fcom
and
mov
pop
mov
mov
xchg
xchg
cmps
ins
lea
sbb
push
sbb
mov
addr16
test
lock
mov
into
push
cmp
push
xchg
pop
in
sbb
pop
pop
xor
pop
js
sbb
or
push
mov
or
dec
test
sub
(bad)
movs
push
clc
fidivr
mov
dec
fdivr
enter
aaa
js
pop
movs
jbe
outs
cs
pop
icebp
mov
push
mov
push
test
add
mov
fwait
add
adc
or
loop
adc
add
inc
mov
jae
fs
bound
jne
ins
add
ret
dec
mov
add
push
(bad)
jae
xlat
inc
rcl
dec
sub
ins
push
in
dec
outs
jo
lods
pop
cld
mov
test
dec
popa
js
and
in
je
dec
repnz
lods
cmp
in
test
popf
sub
ins
mov
adc
or
push
cmp
mov
jo
and
add
adc
and
dec
outs
push
pop
das
mov
mov
sti
fs
jne
shr
inc
mov
das
les
and
(bad)
xor
enter
push
shr
int3
fwait
sub
add
shr
adc
fwait
push
clc
push
aam
adc
or
inc
shl
push
add
push
(bad)
jp
inc
push
xchg
stc
mov
retf
loop
das
and
push
mov
ja
and
jl
add
jge
xchg
xchg
dec
imul
int3
ficomp
add
pop
push
mov
daa
add
fstp
xchg
scas
sub
clc
aas
xor
sub
jle
sub
ins
test
int
add
push
aas
push
in
sti
inc
push
mov
pop
and
not
push
jg
push
pop
das
ja
xchg
out
mov
add
test
pop
push
and
fild
enter
mov
cdq
mov
aad
sbb
xor
mov
pop
pop
psrad
xor
(bad)
push
pop
pop
loope
and
repnz
movs
loop
pop
pop
test
sahf
xor
aas
pop
je
outs
cmp
in
pop
aas
xor
repz
sysexit
add
add
adc
aaa
add
pusha
jg
in
data16
retf
mov
leave
jmp
popa
cmp
or
inc
or
jo
test
arpl
popf
fmul
adc
popa
mov
add
sub
or
ss
dec
ins
push
daa
sbb
dec
test
adc
jo
adc
call
xchg
add
pusha
inc
and
lahf
jno
js
data16
xor
scas
icebp
aad
and
fadd
test
add
inc
fdiv
std
push
dec
sub
add
mov
pop
mov
and
shr
and
or
dec
popa
cmp
fistp
jp
into
push
jo
adc
jo
mov
sbb
test
jo
mov
xchg
add
add
adc
mov
add
sbb
out
adc
fimul
enter
jb
mov
dec
ins
cmps
out
push
lods
adc
jecxz
loop
jo
pop
fwait
aaa
push
loope
ret
je
in
sbb
pop
and
xor
pushf
mov
or
adc
jmp
arpl
or
imul
jb
scas
imul
jge
adc
icebp
cs
xchg
or
into
jb
add
add
mov
aaa
icebp
or
inc
bound
xchg
mov
add
pop
movs
push
inc
outs
and
and
inc
dec
jne
and
cs
or
pop
xchg
dec
(bad)
sbb
ror
jae
add
or
inc
dec
out
xchg
les
out
popf
data16
push
jo
jnp
and
enter
sar
lods
pop
adc
aad
cmp
or
test
dec
ret
jno
pop
push
inc
or
imul
inc
imul
inc
jnp
and
bound
sub
mov
lea
push
pushf
lea
nop
or
int3
lea
or
adc
sti
ins
mov
pusha
lea
lea
sbb
scas
add
sbb
jb
inc
out
push
icebp
xor
adc
or
adc
addr16
clc
mov
outs
jb
fisttp
adc
mov
dec
or
(bad)
cwde
adc
iret
test
dec
xor
jmp
push
pop
cmp
inc
add
inc
sub
xchg
add
pusha
outs
xor
xchg
int
cmp
or
popa
jae
aaa
add
fstp
adc
fdivr
push
imul
and
and
and
or
pop
cmp
sub
inc
xchg
std
pop
add
pop
jnp
push
add
lock
ficomp
imul
push
inc
outs
je
adc
or
xchg
into
jns
shr
push
(bad)
cmc
adc
cmc
in
mov
and
push
imul
xchg
sbb
arpl
mov
dec
pop
nop
sbb
mov
rol
call
aad
adc
fs
outs
das
pusha
mov
bound
adc
sub
mov
repz
cmps
mov
sbb
adc
rcr
sysret
(bad)
ja
jmp
add
push
dec
jae
adc
xor
lds
xor
mov
rol
jae
sbb
xchg
mov
call
add
or
outs
das
dec
push
and
nop
push
add
inc
sbb
aas
add
dec
and
add
dec
adc
mov
es
sub
nop
ins
jge
xchg
sbb
cwde
mov
pusha
enter
ret
js
popa
add
or
stos
dec
mov
scas
adc
pop
aas
pop
or
cdq
push
rcl
cmp
or
jne
mov
jne
sbb
sbb
popa
ins
ins
cmp
test
add
and
cs
popf
retf
adc
popf
adc
push
ins
or
add
mov
and
xchg
lods
add
js
jmp
mov
data16
popa
jb
mov
adc
sbb
sub
adc
sub
xor
sub
popa
xor
adc
test
rol
pop
mov
inc
dec
pop
add
je
push
or
add
pop
add
mov
pop
or
das
add
jae
push
stos
xchg
inc
call
or
lods
movs
test
xor
loop
test
lods
arpl
movs
xchg
add
adc
xor
je
arpl
mov
aas
xchg
adc
add
rol
jle
scas
inc
jae
mov
or
and
add
adc
sbb
or
or
(bad)
pop
movs
adc
add
or
jo
mov
popf
adc
xchg
(bad)
adc
test
adc
push
dec
loop
test
ret
das
inc
rol
dec
pop
add
imul
add
sub
rol
push
out
push
pop
mov
dec
jo
out
push
or
(bad)
push
fdiv
scas
test
scas
or
fcos
and
fs
shr
gs
sbb
bound
ret
in
in
pop
bound
push
mov
fs
ret
movs
sub
stos
out
fld
daa
push
or
jmp
sub
add
xor
out
call
push
add
loopne
pop
adc
dec
pushf
adc
sub
loopne
inc
adc
test
in
push
push
ins
inc
xchg
jbe
dec
loopne
(bad)
sar
add
adc
push
retf
or
push
adc
dec
pusha
jne
pop
call
pop
push
cmp
jo
pop
or
xchg
outs
shr
adc
fldenv
xchg
inc
addr16
mov
cld
adc
xchg
cmp
in
fsub
push
pop
mov
dec
ins
sbb
and
sub
pop
pop
nop
ror
and
movs
xor
or
repz
pop
ret
loopne
or
cmp
or
sbb
jge
or
add
test
add
xchg
std
ret
sti
mov
les
inc
add
or
(bad)
out
adc
mov
add
xchg
pop
pop
or
test
cmp
je
xlat
rcr
dec
add
(bad)
mov
adc
fldcw
fsub
lods
bound
push
add
push
outs
adc
je
xchg
sbb
adc
ja
and
sub
arpl
add
jno
cmp
push
test
cmp
xchg
test
sbb
loopne
pop
pop
xchg
cwde
add
xchg
add
popa
das
(bad)
les
and
das
pop
sar
dec
mov
int3
mov
in
adc
sub
sub
mov
mov
and
addr16
sub
inc
sbb
sbb
in
imul
(bad)
test
push
add
aam
imul
xchg
pop
and
jle
pop
sbb
ins
dec
cld
xchg
imul
(bad)
loop
fild
mov
push
cs
ret
(bad)
mov
pop
mov
fadd
mov
(bad)
loope
lahf
pop
imul
push
add
mov
push
mov
ffree
mov
pusha
push
adc
imul
mov
lea
inc
in
push
dec
call
xchg
add
addr16
jecxz
sbb
sbb
imul
jmp
sbb
add
adc
loope
push
mov
push
xchg
jmp
in
adc
or
inc
cdq
pop
xor
mov
mov
mov
pop
mov
ret
pop
xchg
xchg
out
jge
rcl
jne
xor
fimul
jbe
retf
xchg
stc
jge
push
inc
stos
sbb
shl
popa
loopne
movs
cmp
fwait
add
daa
push
sbb
jp
sbb
sbb
jne
fmulp
or
fcomp
sar
jmp
jge
enter
shl
(bad)
and
xor
sbb
inc
cwde
(bad)
shl
pop
push
push
xchg
(bad)
leave
pop
xor
push
dec
lea
pop
inc
imul
hlt
lock
dec
adc
push
lea
mov
ret
pop
fisttp
ss
pushf
xor
mov
cmovbe
inc
sbb
inc
retf
gs
retf
xchg
cli
cmp
cld
in
fs
(bad)
scas
add
adc
xor
mov
cmps
xor
jo
mov
stc
test
fsubr
jo
mov
fiadd
movzx
fistp
mov
xchg
outs
inc
jbe
sub
rcr
out
xor
xchg
mov
shr
jmp
test
aad
mov
jmp
call
nop
pop
sub
ror
push
inc
pusha
add
dec
inc
call
ds
dec
add
jo
fiadd
adc
or
inc
mov
call
dec
pop
fcos
adc
add
xor
das
(bad)
repz
aaa
(bad)
fdivr
push
sbb
in
jecxz
mov
xor
push
sub
jo
inc
or
adc
das
adc
add
mov
sbb
mov
out
(bad)
push
push
shr
daa
jae
out
adc
push
ja
bound
and
mov
cmp
jge
xor
add
adc
add
adc
adc
ret
jo
mov
je
adc
dec
cmp
pop
enter
inc
cmp
jl
jecxz
push
outs
sbb
push
pop
xlat
into
(bad)
push
adc
or
push
adc
pusha
add
mov
jne
lods
lds
dec
js
add
pop
inc
and
fwait
call
inc
cli
loopne
sbb
sbb
ror
add
or
jle
xchg
and
pop
fimul
mov
adc
adc
or
add
stos
mov
lock
adc
xor
inc
pop
or
jne
dec
mov
into
loope
and
clc
push
jmp
shl
sub
lea
inc
hlt
adc
aad
xor
inc
repz
mov
xor
add
lea
jno
dec
call
clc
add
je
adc
hlt
cmp
jge
fsub
mov
lea
scas
dec
out
xlat
mov
sub
lock
int
push
adc
cmp
push
add
scas
push
leave
jmp
fcomp
xchg
jl
sbb
push
in
add
enter
add
pop
(bad)
jno
add
lea
adc
adc
and
sub
pop
mov
xchg
sar
jae
jb
push
adc
fiadd
ror
jmp
jecxz
shl
(bad)
(bad)
pop
outs
test
push
test
or
sub
(bad)
shl
sbb
neg
xor
pushf
inc
xor
mov
call
pop
add
and
jge
rcr
fs
lea
xchg
mov
jo
jecxz
mov
adc
sub
enter
stos
dec
sbb
xchg
inc
xor
push
sub
ret
int3
jp
sbb
and
in
cmp
push
inc
dec
sub
cmc
push
mov
mov
dec
call
xor
test
pop
js
jmp
push
xchg
push
dec
push
or
or
or
mov
push
or
push
loopne
push
icebp
push
adc
retf
int3
aas
xchg
cmp
test
rol
mov
(bad)
jmp
xchg
cwde
fcom
dec
fdiv
inc
push
mov
fisttp
and
xor
fisttp
xor
je
sub
int
add
and
les
sbb
pop
push
adc
imul
dec
pop
cld
stos
icebp
push
pusha
dec
popa
xchg
jbe
iret
add
fdiv
jae
push
cs
or
xchg
(bad)
int
adc
push
sbb
sahf
lock
loope
mov
out
test
jmp
jnp
jne
pop
ret
xor
sub
jmp
adc
stc
jge
(bad)
popa
mov
movs
pop
or
cmp
or
jbe
push
or
sbb
fsub
int3
inc
pop
(bad)
xchg
lahf
mov
fwait
inc
xor
and
scas
enter
jg
loopne
cwde
adc
test
in
fcom
inc
pop
loopne
sar
popf
mov
and
inc
adc
add
out
retf
in
sub
mov
cdq
sub
movs
adc
sub
ja
enter
loopne
pop
sub
dec
jo
sbb
pop
add
jbe
out
push
pop
or
xlat
jl
nop
mov
jmp
stc
pop
popa
(bad)
pushf
jns
jle
mov
jo
ins
xor
and
test
mov
hlt
push
adc
out
jmp
jmp
enter
pusha
retf
xor
sar
ins
bound
mov
xor
jne
rol
inc
(bad)
js
mov
pop
test
xchg
sbb
arpl
lock
les
call
pop
(bad)
sbb
add
fistp
in
adc
adc
loop
mov
mov
jb
js
cdq
jmp
stos
add
or
and
sbb
pop
je
pop
adc
ja
test
das
push
(bad)
sub
mov
nop
scas
jmp
xor
inc
js
dec
mov
dec
test
je
test
cmp
xor
(bad)
(bad)
adc
ins
mov
add
dec
xor
mov
cmp
jne
(bad)
shr
inc
clc
sub
call
adc
in
lock
cdq
xor
pop
mov
cmp
jge
jne
outs
rol
or
pop
mov
jne
pushf
jl
pop
and
and
pop
push
push
xchg
pop
ror
lock
movs
ror
loopne
cmps
pop
mov
js
das
(bad)
fcom
mov
mov
(bad)
jl
cs
jne
loopne
(bad)
jge
mov
ins
inc
sbb
add
push
push
push
aaa
push
rcl
push
mov
jge
dec
pusha
mov
repz
je
aas
rcr
add
pop
or
nop
neg
and
pop
ja
sbb
xchg
xchg
jmp
inc
dec
sbb
enter
mov
push
jae
pop
fsub
aaa
daa
mov
clc
mov
rcl
popa
xor
rol
jl
pop
shl
sbb
jp
imul
add
aaa
sub
loopne
push
pop
adc
sub
push
add
mov
imul
icebp
jo
in
fnstcw
iret
add
add
(bad)
movs
or
mov
or
stos
je
test
retf
leave
(bad)
mov
push
cmp
and
mov
and
dec
popa
es
mov
xor
ja
stos
cwde
(bad)
scas
dec
sbb
icebp
inc
ret
dec
retf
adc
retf
pop
sbb
fld
pop
pop
jae
jmp
or
add
dec
jo
dec
out
add
ss
adc
mov
sub
or
xchg
fild
jle
adc
ror
fldl2t
(bad)
push
jae
setb
das
sub
int3
xchg
inc
lods
mov
pop
inc
loope
sub
add
mov
sub
jnp
add
push
jmp
jae
jmp
jl
repz
popa
pop
dec
jge
cld
jle
sub
cmp
add
mov
add
outs
popa
cli
add
cld
int
lds
add
cmp
adc
ja
sub
xor
daa
mov
ror
pop
jb
lahf
inc
sar
pop
push
pusha
ja
test
jns
cmp
imul
aaa
jle
sub
adc
push
and
repz
icebp
or
ins
inc
cld
mov
mov
dec
xchg
jle
and
mov
lock
pusha
cs
push
arpl
push
cli
mov
pop
addr16
mov
repz
daa
mov
les
je
ja
rcl
mov
data16
dec
dec
jne
aam
call
inc
push
mov
lods
mov
test
cmp
mov
shl
or
add
js
push
pushf
test
jns
rol
inc
out
jo
cli
fisttp
fucomip
xor
dec
jbe
mov
hlt
jmp
lock
mov
imul
and
jbe
sbb
dec
sub
or
lock
sbb
inc
or
add
mov
jge
inc
jle
cmp
jge
fisub
imul
aaa
lods
xchg
mov
add
and
imul
int
or
push
push
nop
mov
add
movs
dec
add
jb
mov
vmovaps
mov
in
mov
add
xor
into
mov
cmp
xor
pusha
das
cmps
xor
mov
push
ins
sbb
or
cld
mov
pop
(bad)
sub
add
(bad)
ret
shr
gs
lds
pop
cwde
data16
scas
jo
repnz
jns
aaa
sub
test
jg
addr16
mov
inc
add
cmp
ja
add
outs
adc
add
add
shr
scas
add
xchg
pop
inc
and
push
sbb
mov
loope
or
hlt
inc
lahf
call
out
jae
js
add
aaa
pop
sub
not
ss
ret
fwait
ror
pop
mov
jge
out
sahf
sub
push
adc
hlt
xchg
inc
xchg
xchg
icebp
cdq
jmp
dec
ja
cmp
call
test
je
pusha
cmp
and
push
mov
in
jmp
add
mov
loopne
test
or
test
xchg
div
sbb
cmp
call
(bad)
fwait
rcl
je
jge
or
or
jae
cmp
icebp
(bad)
or
add
add
call
movs
sbb
sqrtps
lea
push
dec
movs
push
sbb
jp
xchg
shl
shr
stos
sub
mov
xchg
push
pop
sub
jmp
push
push
push
and
jecxz
and
add
cmp
jl
test
sub
mov
(bad)
cmp
xchg
fdiv
dec
inc
and
jge
imul
xor
outs
inc
add
test
add
or
and
push
add
outs
popa
rol
retf
fld
sbb
mov
hlt
shr
imul
pop
mov
enter
and
stos
pusha
test
or
ret
mov
add
jg
inc
pop
(bad)
mov
add
mov
inc
lock
test
add
sbb
mov
mov
fild
sbb
lock
pop
inc
loope
add
adc
push
or
xchg
mov
test
mov
push
push
inc
dec
cli
mov
lods
mov
mov
shr
adc
fwait
ret
pop
mov
cmps
xchg
loopne
shr
xchg
and
sub
adc
ret
std
mov
or
sbb
mov
movs
add
xchg
mov
jmp
mov
sbb
popa
jnp
dec
hlt
inc
sar
sbb
fprem1
hlt
inc
push
ins
rol
das
cs
dec
ret
pop
into
dec
xchg
iret
sub
movs
xor
and
mov
ficomp
leave
xchg
retf
xor
xchg
lock
test
jg
mov
xchg
inc
dec
xchg
add
repnz
mov
mov
and
shl
cwde
adc
mov
(bad)
mov
cmp
add
sub
sub
hlt
adc
inc
sub
and
add
jnp
std
pop
or
jo
adc
iret
and
and
outs
arpl
je
dec
push
adc
mov
mov
les
mov
lahf
cmp
je
outs
add
add
ins
add
jne
imul
inc
inc
jns
pop
add
adc
dec
or
xchg
lahf
push
sbb
outs
push
imul
push
or
mov
pop
push
push
mov
push
xor
mov
pop
aaa
mov
jecxz
push
(bad)
push
ja
adc
(bad)
ror
fwait
mov
lea
mov
push
addr16
inc
sub
push
pop
mov
jne
sub
mov
(bad)
jecxz
cdq
pop
iret
add
pop
cmp
cwde
pushf
outs
cwde
pop
js
dec
out
shl
add
call
movs
cmp
into
and
push
popa
js
dec
xor
movs
mov
add
xchg
jo
(bad)
(bad)
mov
fcomi
add
movs
dec
(bad)
dec
push
ror
in
cmp
gs
push
aad
add
jge
dec
xchg
and
or
push
sub
and
sbb
add
xor
or
sub
add
sub
ret
jo
or
add
add
sub
adc
mov
outs
clc
mov
(bad)
enter
cmp
lea
popa
addr16
push
or
lea
movlps
adc
dec
mov
ins
(bad)
mov
aas
or
adc
xchg
sar
xor
fwait
inc
add
(bad)
dec
(bad)
prefetchwt1
pop
cvtpi2ps
pop
rcl
cmovg
movs
daa
daa
cmps
add
outs
btr
xchg
push
movs
daa
daa
daa
popf
out
xchg
dec
dec
outs
sub
enter
push
cmp
stos
sysret
aaa
push
movs
jno
pop
cmp
mov
xchg
jno
xchg
test
push
add
xchg
mov
rcl
jge
and
cmp
inc
xor
shr
pop
xchg
shl
inc
cmps
sbb
addr16
push
popa
lea
daa
mov
xchg
sub
mov
or
push
imul
gs
ror
mov
int3
rcr
push
mov
mov
pop
xchg
cmp
aad
cdq
clc
xor
jge
add
addr16
inc
fs
cmp
adc
lock
dec
rol
test
push
std
ret
adc
repz
fwait
mov
adc
sbb
mov
and
mov
cwde
movs
aam
xchg
popa
mov
into
xchg
cdq
adc
imul
mov
mov
arpl
loop
xchg
loopne
pusha
cwde
mov
mov
adc
push
mov
push
je
cdq
pop
xchg
jl
inc
mov
outs
add
inc
or
push
inc
(bad)
adc
push
add
cmp
or
mov
mov
mov
push
pop
jl
add
push
movs
and
shr
or
cmp
mov
icebp
mov
lahf
or
repz
sub
inc
not
outs
dec
gs
pop
sar
or
fisubr
mov
push
and
mov
cdq
ins
mov
add
es
push
hlt
xchg
ins
arpl
mov
adc
adc
push
and
popf
push
inc
fiadd
adc
add
adc
push
dec
lds
jno
adc
aas
mov
ins
(bad)
jmp
push
inc
rol
and
aam
lods
cmp
xchg
push
xchg
adc
and
scas
mov
push
pop
xchg
pop
dec
jecxz
or
sbb
ins
popa
or
mov
inc
popa
call
dec
inc
aas
mov
xor
ds
push
dec
jge
add
imul
mov
add
mov
inc
test
sbb
xchg
pop
xchg
icebp
sub
loopne
pop
js
mov
jnp
mov
les
or
loopne
popf
int3
xchg
inc
nop
mov
dec
add
js
add
js
cmp
jmp
das
mov
jecxz
add
or
adc
(bad)
mov
popf
idiv
lods
test
push
add
sbb
jmp
in
or
cmc
or
xor
pop
jg
ins
xchg
cmp
xor
mov
inc
ss
inc
cdq
mov
clc
push
inc
add
addr16
and
sbb
shr
ss
cmc
add
clc
push
mov
pop
cmps
test
mov
jge
add
xor
pop
adc
shl
or
mov
pop
paddusb
add
mov
xchg
retf
and
inc
ret
pop
and
and
jnp
je
inc
mov
cli
sub
jl
sub
call
ret
(bad)
xor
push
push
mov
inc
(bad)
push
add
mov
push
xchg
lock
xor
push
arpl
xor
dec
mov
and
fild
mov
mov
cwde
pop
add
add
in
push
lahf
movs
xchg
outs
ror
mov
and
adc
popa
dec
sbb
inc
dec
je
push
test
xchg
adc
(bad)
push
cwde
sub
push
movups
inc
lock
cdq
or
dec
jno
lea
add
and
add
xor
adc
inc
call
iret
inc
jo
mov
dec
push
or
push
iret
in
je
sbb
clc
inc
add
in
or
dec
fwait
test
jae
adc
and
test
mov
sahf
adc
movs
xchg
data16
or
cmp
jbe
adc
rcr
repnz
push
jmp
retf
or
fs
sbb
ins
aam
add
sub
inc
jl
push
cs
xchg
call
cwde
fadd
pop
adc
cs
or
lods
movs
push
and
push
pop
mov
and
dec
add
movs
outs
push
or
lods
mov
(bad)
push
push
and
or
push
mov
mov
es
xor
les
dec
sbb
test
je
mov
popa
add
pusha
push
ret
fild
rcl
adc
cmp
push
addr16
addr16
mov
mov
mov
mov
cs
(bad)
adc
pop
inc
cli
xor
and
outs
out
sbb
hlt
jb
cs
nop
fs
mov
dec
loope
hlt
dec
xchg
pop
push
mov
mov
inc
and
mov
dec
mov
inc
xor
add
mov
add
xor
mov
jmp
in
sbb
(bad)
call
inc
mov
inc
push
push
push
stos
dec
inc
sbb
push
mov
mov
cmps
sbb
pop
jns
jmp
ret
jne
int
cld
cmps
and
or
mov
adc
adc
adc
ret
cmp
and
cmp
clc
pop
inc
cs
jne
push
mov
cmp
lea
in
mov
add
mov
and
dec
or
pop
imul
jo
popa
js
cmp
jg
push
mov
dec
pop
and
pop
jg
rcl
dec
cmp
ins
xor
push
xor
call
and
sbb
and
inc
(bad)
hlt
test
xor
ins
sbb
jl
dec
xchg
add
sbb
and
cdq
sub
pop
or
pop
cmp
imul
ja
test
cwde
sbb
test
enter
mov
(bad)
xor
outs
xor
jo
lahf
aas
inc
(bad)
push
pop
pop
pop
push
add
or
pusha
test
mov
push
push
dec
pop
add
test
or
jnp
into
fistp
cli
mov
out
ja
dec
fisttp
jnp
inc
jne
sbb
fs
inc
and
or
mov
(bad)
push
dec
jecxz
or
mov
mov
hlt
stos
dec
mov
lock
adc
inc
push
jl
add
cmp
data16
mov
fadd
adc
mov
jnp
add
mov
sar
push
add
mov
xor
shl
cwde
cld
retf
add
je
call
shl
push
fisttp
adc
xor
jecxz
loopne
adc
sub
xor
and
cmp
sar
xor
shl
inc
xor
xor
test
stos
mov
push
dec
jnp
xor
mov
(bad)
dec
dec
xor
add
xor
mov
outs
rcr
setp
add
aam
js
je
or
cmp
mov
mov
sbb
jg
add
or
cmp
in
xchg
or
pop
jo
jbe
pusha
add
mov
imul
inc
push
mov
jo
cs
fisubr
inc
push
mov
adc
dec
mov
cmps
outs
neg
movs
das
scas
push
lods
jl
xor
pop
inc
enter
test
dec
stos
iret
add
repnz
sbb
dec
cmp
sbb
stos
es
fsub
mov
xor
lock
(bad)
les
xchg
add
test
sbb
sub
pop
xchg
add
lods
adc
add
add
xor
jo
or
cmps
mov
push
fdivr
xchg
adc
dec
add
movs
dec
aad
add
pop
test
stc
repnz
add
add
int3
pop
xlat
adc
pop
sbb
cmps
pop
jecxz
mov
mov
sbb
mov
xor
pop
inc
outs
push
arpl
jge
pop
ss
push
dec
ins
inc
and
retf
push
(bad)
lods
sub
mov
fwait
add
js
rcl
cmp
int3
add
add
add
icebp
or
jbe
sti
(bad)
(bad)
adc
add
dec
add
cwde
popa
or
sub
ja
stos
or
(bad)
mov
and
cmps
add
lock
add
dec
pop
pop
rcr
(bad)
adc
xlat
mov
ror
jns
xchg
push
mov
pop
or
dec
add
and
or
mov
jne
mov
or
rcl
xchg
push
inc
pop
imul
mov
xchg
inc
stos
pop
inc
stos
aam
xchg
push
cmc
add
cwde
and
call
push
push
push
inc
or
pop
mov
xchg
push
jmp
mov
jns
inc
sbb
sbb
lock
aas
add
sbb
popa
mov
and
mov
xchg
mov
ins
cmp
lea
jbe
imul
adc
test
mov
mov
jecxz
sub
int3
nop
pop
les
mov
sub
xor
mov
or
xor
or
rcr
and
jecxz
mov
test
push
ja
or
or
sbb
test
nop
sub
or
scas
cmp
inc
stos
pop
xchg
jbe
and
stc
movs
add
mov
fisttp
xchg
stos
fcomp
push
in
inc
outs
pop
stos
dec
xor
xchg
mov
jle
(bad)
arpl
dec
sub
jnp
sbb
stos
enter
xlat
jbe
jne
arpl
push
and
or
pop
jge
repz
retf
test
rcr
scas
and
enter
lods
jg
and
inc
adc
mov
mov
xchg
icebp
outs
and
lods
(bad)
jmp
popf
cmp
lods
paddd
adc
aaa
dec
or
xchg
js
and
lock
mov
repnz
adc
pop
add
push
cmp
pop
adc
add
pop
lock
mov
sub
xor
push
retf
ret
(bad)
cs
cmp
pop
call
mov
mov
fmul
pop
ja
pop
inc
mov
jl
cmp
in
adc
ds
mov
or
add
daa
in
test
xchg
add
add
loopne
sub
sbb
addr16
add
dec
movs
int3
mov
scas
movs
sbb
xchg
int
fimul
cmp
add
xor
inc
dec
inc
adc
cmp
int3
adc
aaa
mov
sub
push
jo
mov
out
add
push
push
pusha
pop
inc
iret
aaa
shl
add
inc
ins
push
les
aaa
push
cwde
mov
sbb
fild
es
xchg
push
inc
jb
pop
dec
aas
sbb
add
jno
or
xchg
add
push
inc
gs
lds
push
dec
les
mov
js
addr16
dec
or
mov
mov
mov
push
pop
lahf
jae
push
jno
enter
add
mov
or
pop
jg
jne
cmp
ret
or
sbb
out
shr
or
jns
add
lock
popf
mov
adc
loopne
dec
inc
xchg
sbb
in
inc
aaa
mov
jecxz
sti
lock
mov
dec
jmp
and
aad
out
and
std
mov
loop
xor
jo
imul
or
jbe
or
adc
push
add
mov
push
pop
inc
mov
dec
push
ret
push
and
jmp
js
cmp
aam
cmp
ficomp
add
das
inc
sar
sub
mov
ins
jecxz
rol
mov
jae
arpl
xchg
lods
xor
cmps
shl
test
aas
fsub
cld
lea
mov
cli
dec
sub
push
je
mov
mov
sub
pop
mov
les
jle
movzx
jne
nop
inc
dec
xchg
pushf
inc
test
pop
neg
cwde
push
jp
and
pop
or
push
pop
lock
sbb
hlt
jle
xchg
cdq
push
ret
pop
data16
cmp
lock
ret
ins
mov
cmps
ds
pop
je
or
jle
dec
imul
stc
mov
popa
or
jmp
lea
mov
pop
rep
or
shl
popa
fcom
pusha
stos
and
adc
fiadd
mov
sub
div
fisttp
push
mov
push
arpl
sbb
push
mov
mov
push
das
pop
xchg
pop
sub
cmps
not
je
adc
pushf
retf
nop
(bad)
loope
pop
mov
pop
jg
inc
xchg
xchg
xchg
mov
pop
loopne
enter
out
(bad)
cmp
push
daa
mov
leave
pop
nop
ret
scas
add
nop
push
cmp
or
adc
leave
jp
jge
add
or
out
popf
sbb
popf
inc
xor
inc
pop
sbb
cmp
test
nop
icebp
add
stos
fidivr
ret
pusha
mov
mov
and
sub
repnz
and
mov
jno
test
sbb
and
in
push
mov
cmp
push
ss
(bad)
bound
mov
cmp
sbb
mov
gs
test
nop
adc
add
les
aaa
push
(bad)
or
sbb
cmps
inc
mov
inc
js
(bad)
fdivr
outs
mov
and
mov
pushf
or
(bad)
dec
ret
and
pusha
(bad)
mov
lock
add
sub
cmp
fidiv
push
les
push
sub
jns
mov
adc
and
push
lock
mov
and
out
pop
push
rol
test
pop
and
or
gs
inc
mov
or
push
cwde
dec
outs
test
sub
cmp
push
popf
inc
ins
cmp
pop
loope
add
cdq
dec
or
fs
and
dec
cmp
add
test
pop
inc
cmps
add
enter
les
cmp
das
jg
cmc
push
mov
add
loop
clc
sbb
dec
mov
fnsave
cs
add
and
sub
aas
cmp
shrd
or
and
ss
cmp
and
setae
jecxz
cmp
push
push
inc
push
ins
sbb
pop
cmp
push
push
adc
pusha
popf
call
pop
test
sbb
sbb
ins
inc
sbb
mov
sub
sub
scas
cdq
or
rcr
mov
daa
std
mov
xlat
push
pop
rcl
inc
fidiv
fs
push
add
cmps
sub
push
xor
(bad)
jmp
sub
mov
dec
sub
(bad)
ffreep
cmps
mov
xchg
dec
cmp
inc
mov
hlt
sbb
fst
dec
in
cmp
inc
call
xchg
add
sub
icebp
mov
or
(bad)
mov
xchg
jnp
cdq
mov
add
dec
dec
lods
mov
adc
imul
scas
arpl
dec
call
add
mov
aas
les
mov
add
dec
scas
cwde
mov
int3
aad
mov
loope
inc
xor
add
mov
pop
pusha
bound
push
or
cmp
adc
cmp
add
not
push
mov
dec
jge
dec
ror
jae
rcl
inc
ins
jg
inc
daa
lods
jmp
pop
sbb
adc
repnz
mov
xor
outs
add
lods
pop
xchg
test
std
sub
push
stos
add
add
mov
mov
push
pop
adc
add
mov
mov
add
and
add
mov
in
enter
push
mov
enter
mov
and
or
test
or
lldt
ins
inc
add
stos
mov
dec
rol
imul
jno
mov
cmps
and
addr16
mov
push
inc
xor
sbb
or
mov
arpl
enter
or
int
pop
pusha
lea
inc
shl
nop
and
jo
ret
cmp
loope
test
mov
daa
(bad)
mov
xor
jno
adc
je
or
adc
fcom
xchg
std
push
cmps
xor
sub
xlat
ss
daa
mov
je
mov
and
sti
(bad)
sbb
jge
sbb
in
mov
inc
outs
mov
lock
pop
mul
mov
xchg
mov
mov
push
dec
mov
xchg
dec
push
or
ins
sub
movs
or
adc
or
into
test
adc
ror
inc
or
and
pusha
add
rol
or
movs
cmps
cmp
push
out
inc
ins
movs
aaa
ret
scas
sbb
sbb
xor
clc
shl
mov
aam
add
or
test
add
ds
xor
fbld
jg
or
xchg
add
sub
adc
jbe
xlat
ja
out
adc
ret
test
mov
je
cmp
adc
inc
cs
mov
mov
shl
sbb
push
(bad)
loop
(bad)
or
inc
adc
ins
xchg
out
jno
shl
sub
mov
addr16
les
dec
jnp
test
mov
sbb
loopne
mov
imul
dec
or
repz
test
icebp
adc
or
retf
sbb
cmp
movs
nop
mov
jecxz
cmp
push
jl
out
mov
ret
add
jne
pop
fld
mov
xchg
popf
and
pop
or
push
les
or
add
stos
ret
icebp
aas
sub
je
xor
mov
int
and
or
test
xchg
xor
mov
cmp
jle
xchg
xor
add
push
adc
(bad)
cmp
cmp
dec
add
add
dec
jne
je
push
push
in
xlat
popa
(bad)
xchg
pop
call
leave
(bad)
inc
dec
arpl
stos
jne
mov
test
ret
lds
sbb
adc
enter
xor
adc
rcr
inc
cmp
retf
clc
inc
add
add
lea
inc
out
hlt
sub
add
and
mov
push
add
fwait
enter
jo
rol
pop
mov
ror
mov
mov
or
or
push
cdq
sbb
add
sub
add
out
jge
mov
sub
ret
dec
retf
jle
sbb
sbb
mov
or
mov
push
cld
mov
push
add
xor
lock
lods
movs
ds
pop
jo
dec
and
push
rcl
mov
push
push
push
sti
leave
lahf
test
and
retf
jo
pop
setb
push
dec
int3
shl
fiadd
and
aam
out
xlat
mov
aad
push
mov
shr
icebp
cs
add
enter
dec
int3
loopne
outs
nop
adc
sti
adc
add
test
fs
add
daa
xlat
mov
xchg
or
and
test
shl
add
and
or
mov
push
js
mov
jge
add
movs
test
add
inc
xchg
push
in
das
call
xchg
xor
in
add
cmp
lock
jne
movs
push
inc
aaa
cmps
icebp
add
das
clc
adc
je
xchg
nop
nop
loopne
imul
movs
lock
xor
or
inc
mov
xchg
pop
retf
outs
pop
mov
xchg
sbb
adc
and
call
jo
and
hlt
adc
repz
pusha
out
add
add
pop
aam
in
outs
adc
sbb
push
inc
repz
fwait
stos
loopne
and
xlat
pop
out
pop
sti
inc
pop
daa
clc
or
or
jo
xchg
push
pop
(bad)
fadd
jnp
scas
arpl
jg
mov
or
or
xor
cmp
xor
cmps
int
pop
int
push
div
add
dec
aam
cmps
mov
pop
jmp
mov
adc
cld
inc
outs
or
add
sbb
inc
or
mov
push
imul
and
movs
push
mov
adc
adc
dec
movs
dec
cwde
or
outs
imul
inc
retf
add
test
clc
(bad)
mov
push
hlt
dec
or
mov
sbb
fild
(bad)
int
data16
nop
into
pop
js
jle
dec
jle
cmps
sbb
pop
add
fld
sub
pop
test
arpl
leave
and
or
adc
inc
or
inc
jne
sub
or
ins
jmp
cmc
or
push
mov
test
push
mul
bound
add
push
psubusw
add
or
add
add
sbb
adc
adc
push
cmp
add
dec
jo
into
add
xor
fmul
and
and
shr
and
neg
cmp
out
add
mov
lahf
lahf
add
sar
or
add
out
pop
pop
shl
test
jno
sbb
inc
addr16
test
jne
in
cs
cmp
das
(bad)
in
inc
pusha
(bad)
xor
imul
stos
xor
add
cmp
dec
cmp
cmp
in
mov
jne
mov
cdq
xor
dec
cmp
lea
add
adc
and
jge
sti
test
dec
nop
in
aad
int3
sub
jbe
xchg
les
xchg
call
sbb
push
(bad)
sbb
mov
xor
push
hlt
xchg
mov
jne
data16
dec
xor
and
add
inc
push
mov
test
nop
push
add
lock
icebp
aad
add
rol
clc
mov
mov
cld
in
xor
pop
sbb
xor
out
sti
xchg
or
cld
cmp
pop
cwde
and
add
push
and
inc
outs
int3
in
mov
(bad)
(bad)
and
in
hlt
call
cmp
push
mov
pop
or
dec
pusha
or
in
inc
inc
and
jg
addr16
mov
sbb
or
xlat
retf
sub
cmp
loopne
inc
aam
mov
pop
pop
or
add
inc
ds
pop
(bad)
fadd
fadd
xchg
push
cld
push
nop
(bad)
call
nop
cs
rcl
mov
sub
xor
mov
pop
ss
enter
addr16
mov
in
ret
add
lahf
fwait
pop
lea
add
sbb
add
movs
sub
push
pop
xchg
or
and
repnz
cwde
or
pop
int3
shl
adc
cwde
into
(bad)
mov
mov
fdivrp
cmp
fstp
ret
dec
pop
enter
pop
fmul
rol
inc
cmp
mov
sub
mov
push
or
cld
nop
mov
rcr
cmp
ss
sbb
xchg
fild
add
lock
and
dec
xor
xchg
clc
cld
hlt
inc
rol
mov
mov
mov
into
xchg
in
xchg
mov
xchg
adc
mov
sahf
fnstenv
xchg
rol
pop
xlat
movs
(bad)
sbb
sbb
je
mov
(bad)
movs
scas
sbb
adc
imul
nop
ins
xchg
add
hlt
or
in
clc
or
cmp
jmp
mov
hlt
ret
ret
stos
pushf
test
rol
or
or
and
in
imul
shl
cmp
sub
aaa
icebp
xor
fild
jbe
jo
inc
cmovbe
jmp
inc
stc
icebp
dec
adc
jae
inc
jns
dec
inc
dec
push
cdq
xor
inc
push
xor
test
pop
pop
shl
jle
dec
xchg
mov
sub
loopne
(bad)
ss
aas
sti
in
or
mov
or
sysenter
or
int
fdiv
xchg
loopne
adc
sahf
adc
(bad)
imul
fisubr
jae
lods
aas
in
shr
pop
and
and
xor
lods
push
fcos
mov
jns
imul
add
push
mov
and
je
pop
push
rol
sbb
jmp
dec
xchg
push
lahf
push
dec
xchg
mov
int3
std
pop
test
add
rol
push
cmp
pop
out
xchg
or
(bad)
rcl
adc
mov
add
xor
xor
inc
xchg
xchg
jl
faddp
cwde
inc
xor
and
push
cmp
(bad)
sub
dec
jae
push
mov
fistp
push
shl
pop
pop
fcomp
(bad)
xchg
mov
jb
add
add
shl
sbb
xchg
adc
cmp
iret
outs
push
leave
add
cmp
lods
fsub
out
inc
test
adc
ins
push
retf
jecxz
nop
inc
lods
fcom
jns
and
jae
pop
inc
add
cmp
nop
cmps
inc
xor
xlat
ret
pop
hlt
mov
or
inc
nop
hlt
mov
add
add
pop
or
add
cmp
cmp
or
pop
cmps
and
lods
xor
or
pop
mov
or
jl
lods
inc
xchg
test
sbb
enter
cmp
bound
retf
lds
mov
cmp
fstp
fisub
movzx
jb
pop
(bad)
test
pop
and
and
push
sbb
das
adc
and
push
mov
mov
xlat
lock
jmp
loop
faddp
or
cmc
push
adc
inc
into
cmp
arpl
add
mov
popa
call
lahf
jmp
mov
movs
add
jl
loope
mov
jo
adc
xchg
cmp
push
sub
les
and
add
pop
pop
jno
mov
add
mov
fadd
enter
(bad)
shl
xor
dec
leave
add
enter
xor
int3
mov
les
call
out
in
test
shl
jg
xchg
inc
adc
add
xchg
mov
pop
mov
je
mov
mov
pusha
xor
prefetchw
sahf
rol
enter
sbb
aam
and
pop
fcomp
loopne
or
jbe
mov
rol
wrmsr
add
pop
xor
add
mov
cmp
add
mov
or
jmp
into
push
test
lea
sub
je
repnz
or
sub
xchg
dec
jmp
aam
and
clc
mov
push
fsub
add
ss
inc
inc
mov
mov
adc
sub
push
pusha
idiv
fs
aam
sbb
loop
das
or
outs
cmc
jg
push
fincstp
stos
je
jg
in
test
add
sub
sbb
and
fidiv
add
push
adc
and
or
jne
sbb
add
add
addr16
daa
test
(bad)
pop
and
pusha
aaa
push
pop
mov
inc
and
into
sub
cld
and
push
push
lea
mov
test
mov
(bad)
out
mov
or
arpl
inc
push
or
inc
sbb
add
ds
shl
xchg
or
or
xchg
sub
mov
fsubr
add
adc
adc
inc
add
sbb
add
or
retf
pop
bound
cmc
or
jge
and
sbb
push
push
cmp
inc
cmp
inc
add
pop
xor
cmp
add
dec
or
loopne
hlt
call
and
fst
lahf
test
mov
(bad)
aam
xchg
mov
sti
or
das
push
inc
add
in
or
add
ja
dec
jecxz
adc
fsubr
xor
aad
xchg
jae
outs
push
dec
dec
inc
add
and
or
test
pop
ret
or
push
retf
sub
adc
aaa
cmp
pop
push
adc
mov
int
cld
fidivr
test
sbb
fldpi
(bad)
jns
(bad)
xlat
leave
add
push
push
push
mov
xor
inc
dec
std
in
pushf
test
dec
nop
out
pop
loopne
xor
fadd
mov
pop
fsub
inc
jle
xor
mov
or
push
rcl
push
addr16
aam
xor
mov
or
shl
xchg
mov
pop
in
xor
test
int3
dec
or
std
add
push
sbb
pop
cwde
retf
aam
jmp
cmp
pop
sar
mov
pop
adc
inc
push
jmp
pusha
loopne
js
clc
dec
inc
add
mov
jae
enter
nop
enter
fdiv
mov
lea
shr
(bad)
jmp
ins
int
add
push
and
iret
jmp
lods
mov
adc
mov
inc
mov
nop
in
sub
mov
clc
xor
in
or
movs
adc
sbb
jmp
pop
or
dec
adc
ror
add
repz
inc
hlt
hlt
leave
add
lock
add
add
call
test
mov
jno
push
xchg
nop
jo
pusha
jl
push
dec
add
jns
jno
das
clc
dec
or
add
mov
repz
xchg
or
(bad)
jmp
and
push
call
jmp
mov
push
xor
inc
add
dec
sub
mov
add
cmps
pop
or
je
out
pop
jb
mov
(bad)
aad
pop
xor
add
inc
jecxz
sub
sbb
and
inc
mov
(bad)
pop
imul
add
call
pop
mov
or
arpl
pushf
and
out
or
mov
mov
inc
cmp
jbe
pop
adc
lock
sti
and
add
cmps
cmp
add
or
or
add
adc
nop
lea
push
inc
push
mov
xor
adc
and
fimul
or
in
imul
sub
shl
pushf
cli
and
mov
adc
test
mov
add
pop
push
loop
xchg
add
push
cli
fdivr
retf
cmp
jbe
push
jg
cmp
enter
in
cmp
js
push
inc
add
jnp
mov
test
inc
jb
and
call
daa
jae
fbld
add
in
icebp
and
in
in
in
adc
in
js
mov
shl
nop
mov
dec
data16
ret
push
out
pop
add
inc
xchg
lahf
sbb
push
mov
add
and
inc
push
loopne
adc
sti
mov
mov
or
lock
call
scas
lock
ret
mov
loop
add
mov
pop
and
fadd
loopne
push
pushf
out
push
sub
mov
xchg
sbb
aad
add
dec
icebp
(bad)
lock
sub
repz
(bad)
and
dec
cli
xchg
push
add
loope
and
enter
push
jnp
inc
add
dec
les
fisttp
add
dec
rcl
dec
scas
add
dec
mov
add
inc
mov
sub
sbb
scas
add
out
and
repnz
inc
adc
hlt
hlt
xor
inc
js
repnz
das
cld
(bad)
das
mov
outs
adc
nop
add
xor
jmp
sbb
pop
test
mov
xor
add
ja
push
bound
jmp
movs
mov
(bad)
mov
mov
jmp
jbe
xor
xchg
pop
add
mov
jle
sub
pop
fwait
adc
cmp
nop
mov
cmp
xchg
adc
repnz
jne
xor
xor
setge
cmp
popa
add
sbb
mov
pop
inc
pop
or
ficomp
bound
sbb
xor
jae
out
imul
out
enter
aas
pop
or
sar
mov
or
cwde
dec
imul
ins
add
inc
cmp
sub
mov
add
hlt
jmp
out
sub
jmp
out
hlt
push
jmp
cs
push
add
sbb
xchg
push
xchg
dec
fcom
fmul
xchg
loopne
add
fmul
xchg
jo
add
rcl
ror
xchg
push
in
sbb
enter
cmp
les
fs
push
rol
mov
stos
div
test
or
sbb
pop
sub
out
jmp
xor
test
outs
rcr
loop
loope
cli
pop
mov
push
inc
xchg
ins
mov
out
mov
adc
and
hlt
adc
lea
mov
push
movs
push
add
xor
cmp
push
fs
inc
xor
xor
add
xor
xor
jmp
add
jno
dec
out
and
dec
repnz
arpl
push
or
xlat
xor
add
and
and
ret
mov
jae
lods
add
jmp
popf
inc
clc
push
das
inc
inc
outs
ds
mov
xchg
call
call
mov
jnp
lods
movs
pop
jno
test
add
push
mov
rcr
jmp
cmp
cmc
lock
daa
int
test
nop
adc
retf
cmp
cli
adc
inc
jb
push
test
dec
pop
in
jmp
out
mov
mov
repz
push
pop
sbb
cld
xchg
push
push
dec
in
in
pop
mov
loopne
pop
mov
fcomp
xchg
dec
fcom
pop
pop
mov
aam
pop
xor
pop
xor
int3
enter
inc
imul
aaa
xor
inc
adc
push
push
adc
jecxz
jmp
adc
ret
sbb
rcl
mov
jbe
sub
jg
dec
dec
in
or
das
push
add
(bad)
std
loope
inc
aam
ins
icebp
pop
xchg
sbb
push
cmc
shl
xor
add
sbb
loopne
mov
adc
daa
lock
test
sbb
xor
inc
sar
pusha
(bad)
cmp
cmp
ja
xchg
cmp
std
das
mov
hlt
or
stc
lock
sub
jmp
xchg
jb
mov
pop
pop
cmp
mov
imul
movs
ins
nop
movs
fmul
push
xor
movs
ss
xor
xchg
loop
mov
push
jle
dec
cld
jge
call
jbe
mov
mov
stos
daa
lock
jmp
mov
lods
xchg
test
cli
adc
(bad)
iret
in
outs
mov
out
aaa
outs
jle
mov
es
inc
sar
add
add
mov
mov
push
mov
in
and
test
push
sbb
addr16
neg
pop
adc
jnp
sbb
dec
jp
add
dec
clc
jne
pusha
push
mov
inc
inc
adc
sub
sub
aad
add
shl
push
ds
jmp
and
add
inc
loopne
add
(bad)
mov
pop
inc
dec
or
inc
or
iret
push
xchg
add
loope
dec
sbb
mov
faddp
add
outs
mov
push
and
add
add
adc
mov
(bad)
mov
add
inc
add
add
xor
out
add
pop
add
add
sub
jmp
lods
add
ret
(bad)
jmp
outs
loopne
enter
dec
or
jno
fnsave
jge
or
icebp
ret
push
sbb
add
xchg
mov
scas
or
clc
loopne
loopne
add
ret
pop
and
(bad)
jmp
sub
xor
test
cmp
cmp
jmp
in
cwde
inc
hlt
out
mov
mov
imul
(bad)
ret
push
fsubr
mov
hlt
push
aas
hlt
adc
mov
push
dec
stc
clc
sub
es
add
fdivr
or
ja
push
mov
mov
add
add
add
hlt
push
sbb
inc
jns
cld
bound
add
xchg
xchg
imul
inc
jp
xor
fst
data16
mov
sub
jo
dec
iret
lea
adc
cdq
pop
pop
add
cmp
stos
jno
in
stc
dec
push
mov
test
sar
jp
cmps
cmp
aam
ret
test
sbb
bound
cmp
xor
ret
add
mov
push
push
adc
or
mov
or
jmp
add
jno
pop
pop
ja
loop
or
lods
add
fcomp
cmc
nop
add
pop
add
push
push
mov
or
adc
push
pop
das
xchg
or
mov
inc
xor
lahf
and
pop
aas
jl
add
daa
aas
sbb
pop
or
fs
jl
enter
js
or
add
and
mov
adc
nop
add
cmp
cmp
add
out
movs
les
adc
movs
add
lock
nop
inc
push
clc
add
xchg
mov
push
add
mov
push
and
shl
sub
in
add
adc
xchg
inc
loopne
cli
call
ror
icebp
retf
frstor
jmp
cmps
push
or
and
aas
or
cld
in
add
add
add
inc
add
daa
aaa
and
push
pop
adc
inc
ror
pop
and
mov
shr
daa
cmp
sbb
and
xlat
mov
pop
mov
push
mov
push
shr
adc
or
aad
inc
sub
sbb
mov
(bad)
(bad)
fcomp
outs
les
cwde
jmp
fdecstp
push
push
jmp
ds
adc
sub
sahf
and
inc
add
sub
ret
sub
mov
dec
cwde
(bad)
clc
ja
add
or
adc
push
mov
adc
mov
mov
adc
push
or
xor
jnp
mov
pushf
ret
mov
adc
add
or
or
sbb
mov
mov
bound
iret
outs
outs
scas
inc
push
xor
dec
aaa
shr
add
jmp
inc
add
pop
sbb
in
in
inc
test
(bad)
call
adc
push
and
push
cdq
nop
clc
dec
sbb
sbb
add
ret
and
push
test
mov
jne
mov
or
adc
jbe
sbb
fild
dec
fwait
cmp
fisttp
sbb
mov
cmp
out
mov
adc
or
push
cmp
add
add
jmp
mov
and
sbb
pop
loope
jno
or
or
pop
pushf
add
mov
jbe
cli
jge
or
mov
mov
inc
add
js
or
lea
push
push
cwde
cmp
fsubr
pop
adc
sbb
psubw
mov
add
in
add
add
add
inc
aas
repnz
lock
push
fs
cli
cld
clc
mov
xor
outs
les
pop
mov
out
stos
sbb
nop
(bad)
cmp
mov
clc
cmp
je
je
push
(bad)
ins
call
dec
fbld
or
push
add
pushf
test
lds
inc
inc
loop
pop
leave
sbb
jmp
or
into
dec
inc
(bad)
xchg
mov
xchg
push
push
movs
adc
in
inc
pushf
std
adc
mov
sub
push
dec
sbb
mov
pop
cmp
rcr
loope
sbb
mov
add
xchg
or
inc
pop
rol
jbe
add
sar
dec
add
inc
lock
inc
nop
cmp
add
movs
je
mov
sbb
leave
push
cmp
leave
mov
sbb
add
ret
mov
pusha
adc
add
fld
xchg
adc
je
mov
sub
cmp
add
lods
mov
sar
xor
fadd
outs
mov
rol
jmp
pop
jne
xor
das
pop
mov
movs
dec
or
mov
popa
adc
dec
sub
push
sub
jae
sub
sub
mov
je
cli
mov
push
mov
xor
adc
adc
sbb
push
clc
push
add
xor
sub
(bad)
retf
pop
sbb
in
cdq
adc
xchg
jmp
cmp
jmp
jns
(bad)
xor
test
adc
pop
fstp
dec
or
not
pop
and
icebp
sbb
sar
inc
add
pop
clc
xchg
xor
ret
outs
repnz
inc
add
adc
inc
or
out
adc
add
or
push
sbb
adc
test
add
pusha
dec
daa
pushf
xchg
jge
ins
push
or
inc
lea
mov
sti
add
iret
retf
ret
xchg
push
rcr
mov
in
adc
add
pop
das
(bad)
push
adc
div
pop
inc
fwait
pop
xor
jb
scas
pop
push
or
sbb
sbb
pusha
adc
neg
mov
adc
je
mov
repz
pop
cld
xchg
ja
mov
iret
add
and
dec
push
jne
sbb
dec
or
cmp
je
and
int
es
outs
xchg
lahf
icebp
sub
fst
jl
cmps
sbb
dec
dec
int3
add
add
xor
sbb
pop
or
cld
xor
adc
sub
fiadd
xor
cwde
out
jbe
jne
push
sub
cmp
aas
pop
mov
sti
push
and
outs
xor
addr16
adc
sbb
mov
inc
adc
inc
add
out
inc
pusha
adc
out
mov
and
inc
inc
push
outs
or
inc
pop
and
or
ins
or
outs
leave
mov
ficom
or
adc
adc
or
inc
add
mov
or
inc
inc
add
jb
mov
movs
je
inc
jnp
adc
ja
or
lods
adc
xor
das
cli
adc
mov
sbb
add
ja
enter
mov
fidivr
ret
add
or
dec
fisttp
adc
push
aaa
push
push
pop
jns
adc
xchg
add
dec
inc
out
pop
add
gs
sbb
xchg
adc
add
push
(bad)
mov
add
outs
arpl
ds
lahf
mov
push
push
outs
ins
dec
ja
fcom
popf
or
adc
inc
or
xchg
addr16
mov
sbb
es
das
jo
adc
inc
and
xor
xchg
lea
int
jmp
adc
xchg
shl
adc
adc
fstp
or
jnp
xor
inc
add
sbb
sbb
aam
and
sub
cld
dec
outs
mov
outs
mov
ror
pop
inc
or
sbb
ror
cmc
push
push
pop
sti
add
mov
or
and
xor
scas
mov
in
add
inc
sbb
ds
jg
outs
outs
ins
adc
mov
outs
addr16
pushf
mov
mov
sbb
mov
ins
add
ret
neg
leave
dec
and
pushf
and
in
sbb
scas
sub
dec
das
or
dec
xchg
xlat
dec
ret
test
pop
data16
aas
ror
jb
or
call
sub
rcr
data16
sbb
mov
pop
jb
sbb
sbb
lods
psrlw
sbb
clc
sbb
ficom
pop
sub
and
daa
ins
sbb
mov
leave
inc
jbe
sbb
jecxz
outs
jne
jbe
jecxz
xchg
dec
imul
sti
das
ins
sbb
lds
int3
pop
dec
aas
add
mov
dec
(bad)
or
loopne
popa
lahf
mov
mov
out
mov
add
mov
push
xor
movs
cmp
add
inc
adc
or
add
ins
ins
inc
or
sbb
sub
lock
xor
push
icebp
push
movs
add
or
ror
enter
mov
adc
inc
pop
or
add
fild
sbb
inc
push
call
xor
push
add
adc
or
and
or
dec
mov
inc
arpl
adc
inc
out
sbb
fwait
xchg
inc
push
xchg
xchg
sbb
aas
inc
inc
push
mov
mov
pop
xchg
xchg
inc
sbb
loopne
pop
jg
rcl
xchg
ret
cmp
cld
cmp
sbb
movs
sbb
ja
pop
sar
xor
pop
mov
fcomp
call
push
mov
xchg
dec
inc
sbb
or
sub
mov
mov
push
test
add
bound
sub
sub
(bad)
pop
popa
add
inc
mov
pop
mov
out
adc
sub
pop
xlat
mov
out
std
or
sub
push
or
ror
outs
cmp
sbb
push
adc
sbb
arpl
lahf
jp
sub
cmp
js
ins
adc
inc
and
adc
lahf
mov
add
stos
cmc
add
inc
adc
push
push
xor
xor
retf
cmp
fsub
jbe
loope
cmp
das
push
in
dec
cmovle
inc
and
add
inc
or
test
mov
nop
pop
aaa
int
add
mov
addr16
pop
cld
inc
leave
adc
and
sbb
rcr
retf
imul
or
push
and
push
loopne
add
xor
out
xchg
enter
in
aaa
mov
jae
scas
mov
loopne
or
push
jne
pushf
fs
pusha
inc
call
daa
add
(bad)
jnp
daa
mov
pop
or
or
or
jmp
cmp
xor
pusha
push
test
mov
sub
(bad)
jbe
dec
push
neg
stc
add
(bad)
std
pop
enter
add
add
xor
inc
dec
jno
and
mov
jo
mov
add
outs
jne
or
sbb
push
push
adc
aas
int3
ror
jge
push
adc
dec
outs
jae
js
pop
outs
cmp
inc
and
test
dec
sbb
push
cdq
and
add
das
push
inc
aas
clc
cs
inc
out
ins
add
int3
sub
rol
les
ja
mov
push
add
clc
xor
data16
das
push
jo
jl
dec
sub
ss
cmp
andps
cmps
mov
pop
inc
add
push
jp
cld
inc
and
add
cmps
jae
and
repz
inc
pop
(bad)
aad
and
inc
or
enter
cmovo
inc
gs
inc
mov
adc
dec
(bad)
sub
add
inc
pop
sbb
add
test
pusha
sbb
add
jne
popf
sub
push
sbb
mov
inc
or
add
es
or
xor
mov
mov
(bad)
scas
es
jmp
push
mov
adc
dec
dec
pmulhw
add
int3
add
sbb
mov
jnp
dec
add
mov
cdq
sub
mov
pop
(bad)
push
(bad)
pusha
mov
jns
push
add
lock
sub
inc
and
dec
or
jns
arpl
js
jp
movs
xor
enter
and
lock
xor
adc
add
pop
jmp
pop
fwait
push
sbb
sub
(bad)
dec
enter
pusha
in
add
and
enter
mov
in
sub
add
lds
adc
sub
inc
cdq
cmp
sub
dec
cmp
movs
lods
adc
test
xchg
div
outs
lds
sbb
int
xor
or
or
push
pop
in
push
add
call
push
dec
adc
pop
sbb
ins
pop
sbb
movs
add
scas
xor
setno
pusha
mov
xchg
lods
jmp
xor
push
sub
cmp
iret
shr
push
push
cmp
aas
scas
cmp
dec
push
jl
and
sbb
xor
xchg
enter
shr
mov
pop
clc
xor
(bad)
jmp
push
push
movs
or
fisub
aam
mov
imul
add
int3
sub
jmp
xor
mov
add
stos
retf
xchg
xor
add
add
in
push
and
dec
daa
inc
mov
sub
jmp
xor
add
sub
or
add
pop
mov
mov
inc
cmp
pusha
bound
dec
and
pop
and
cwde
and
push
and
cmp
cmp
xor
popa
jl
xor
mov
pop
adc
lock
add
nop
ret
pop
ret
aaa
xlat
cmp
adc
add
add
pop
aaa
xor
inc
js
lods
fmul
cmp
jno
and
xlat
iret
fadd
and
loopne
test
push
sbb
lods
and
cmp
jg
jo
daa
pop
dec
test
inc
sbb
jl
stos
mov
mov
dec
push
add
ror
mov
sbb
ror
into
sub
cmp
aaa
jmp
add
push
mov
popa
inc
jmp
or
gs
add
mov
das
sub
inc
sub
fild
jmp
pop
cmps
push
xor
jecxz
and
sub
mov
arpl
mov
in
stos
arpl
push
adc
inc
adc
cmp
add
inc
adc
mov
pop
pop
push
or
test
fbstp
push
add
adc
xchg
fist
push
dec
add
pusha
or
sbb
dec
xchg
add
or
xchg
mov
hlt
sbb
jge
call
inc
mov
cmp
or
cld
adc
aas
retf
xchg
ror
push
or
pop
(bad)
dec
and
orps
movs
dec
int
cld
sti
gs
jno
mov
das
pop
push
inc
(bad)
adc
test
xchg
xor
jmp
dec
ja
push
enter
sub
iret
das
hlt
and
xor
add
rcl
repnz
shr
or
pop
dec
mov
sub
and
popa
loopne
jmp
add
sub
iret
xor
je
jb
sbb
arpl
and
push
sti
xor
jnp
push
ffree
or
repnz
push
(bad)
xor
fnstcw
xor
adc
pop
jp
inc
into
jne
pop
mov
lock
sub
jae
cmp
aad
fmul
xor
add
push
push
jmp
xor
xchg
xchg
mov
add
push
add
mov
test
inc
xor
(bad)
cld
push
push
stos
inc
add
js
not
push
es
rol
push
mov
or
bound
es
pop
jo
adc
xor
inc
cmp
cdq
sub
pop
xor
add
mov
add
arpl
lea
test
rol
popa
jp
sub
loope
adc
inc
jo
retf
jno
fstp
mov
(bad)
lods
push
mov
mov
sti
push
and
(bad)
xor
push
or
jbe
mov
sub
ja
push
arpl
fs
aas
or
add
inc
jo
nop
add
pop
sbb
mov
xchg
cmp
lock
jae
or
xchg
adc
sub
mov
pop
inc
push
aaa
xor
xchg
xor
cmps
es
push
xor
add
cli
and
lock
adc
push
nop
dec
in
mov
pop
pop
push
ss
cmp
arpl
jno
gs
ins
fwait
sub
xchg
rcl
push
cs
mov
mov
das
adc
and
add
add
mov
bound
mov
push
mov
xor
stos
inc
or
push
xchg
or
popf
sahf
push
and
rol
movs
pop
inc
cmp
fistp
in
rcl
jae
push
sub
add
leave
add
sbb
xchg
jmp
outs
add
adc
or
inc
jp
adc
clc
xor
(bad)
pop
in
test
nop
shr
arpl
arpl
mov
arpl
sbb
lahf
cmp
xor
and
inc
xchg
sbb
mov
movs
cmp
add
jo
nop
pop
mov
add
xor
or
fsub
or
lahf
mov
add
push
mov
adc
add
or
loopne
or
(bad)
jne
and
in
repz
cmp
adc
mov
jmp
or
xor
iret
popa
pushf
test
sub
ss
pop
clc
outs
das
in
pushf
add
cmps
jno
inc
lahf
je
pop
inc
ins
popa
adc
cmp
repz
push
pusha
fsub
inc
nop
cmp
cmp
jp
fsubr
dec
jl
cmp
push
cmp
lahf
jge
mov
sbb
sbb
lods
add
and
ret
jmp
jo
fisub
pop
add
mov
loope
or
jmp
adc
gs
rol
inc
lahf
adc
xchg
rcl
dec
pop
xlat
sub
and
xor
gs
cmp
mov
or
jne
outs
ja
dec
inc
mov
mov
lods
pushf
or
or
lods
xchg
pop
add
mov
sub
aaa
xchg
add
fdivr
test
jo
fstp
nop
add
nop
add
nop
add
push
and
pushf
in
dec
cmp
cmp
std
(bad)
int
pop
push
movs
cmp
mov
out
add
add
inc
(bad)
inc
add
add
adc
dec
cs
inc
pop
ret
xchg
outs
add
mov
or
xchg
dec
(bad)
outs
jmp
add
stos
arpl
cs
dec
jae
ja
add
gs
ja
inc
push
(bad)
repnz
lock
dec
push
outs
add
mov
push
retf
psubusb
sbb
sbb
push
dec
arpl
mov
(bad)
jp
(bad)
pop
mov
lahf
mov
inc
(bad)
and
mul
jns
movs
add
cmp
dec
jns
cmp
in
sbb
int
ficom
push
or
add
cmc
push
jo
jl
or
cmp
sbb
add
mov
or
xor
inc
push
xchg
lea
jae
cmp
inc
ds
movs
das
retf
mov
add
mov
push
add
sub
(bad)
sbb
pop
bndldx
sbb
sbb
sbb
dec
add
mov
sbb
dec
gs
out
call
sbb
add
lea
clc
out
leave
push
xchg
push
push
push
jbe
sbb
out
rcl
js
pop
lahf
pop
in
je
mov
adc
sub
outs
lods
dec
pusha
add
mov
addr16
iret
(bad)
aas
aas
popf
xchg
ret
mov
aas
mov
sti
xchg
lods
push
cwde
inc
push
fimul
jg
adc
add
test
setl
inc
(bad)
add
add
add
sub
or
add
or
push
add
fs
jmp
sub
ja
jp
lods
jo
jb
sbb
adc
arpl
jo
loope
mov
dec
push
hlt
inc
push
or
dec
and
sbb
ret
int3
sbb
and
test
mov
push
add
or
(bad)
popa
pop
dec
jb
lahf
pop
daa
sub
add
pop
sbb
push
cs
mov
and
jne
sbb
xor
dec
jns
push
rol
sbb
ror
sub
add
loope
cmp
jmp
outs
pop
inc
push
sar
push
fld
lock
mov
ins
inc
pop
ins
das
xchg
push
sbb
push
ret
cmps
out
or
mov
add
mov
pop
xchg
inc
(bad)
sbb
ret
add
jecxz
and
push
and
jle
jae
inc
pop
inc
xor
dec
or
mov
add
inc
or
repz
jl
add
inc
xlat
pop
and
bound
mov
add
cmps
pop
cwde
rcl
stos
add
scas
test
fwait
inc
add
jp
cli
xor
mov
test
xlat
adc
inc
bound
adc
sbb
popa
inc
inc
ret
pop
pop
leave
js
inc
and
retf
mov
inc
add
movs
in
cmp
add
xchg
scas
cmps
aas
jns
fcmovnu
or
aam
or
sbb
shr
out
dec
imul
cmp
push
mov
call
xor
mov
jb
aaa
inc
fs
add
sbb
mov
mov
inc
rol
add
cmp
jl
xor
retf
or
push
sbb
retf
push
inc
inc
dec
pop
sub
push
inc
pop
xchg
frstor
inc
push
pusha
faddp
imul
dec
push
scas
fnstenv
imul
hlt
movs
push
loopne
and
outs
cmps
aas
and
xlat
cli
push
cs
add
loopne
sub
dec
das
jle
call
inc
dec
outs
sbb
add
out
dec
and
(bad)
mov
je
or
xor
sub
dec
cmp
mov
mov
lds
xor
fs
lods
(bad)
fild
add
outs
cmp
cmp
add
cdq
test
pop
jno
cld
xor
inc
push
imul
ja
imul
pusha
push
dec
cs
mov
adc
xchg
add
adc
mov
and
std
js
pop
mov
shl
jae
mov
mov
call
adc
mov
add
dec
dec
inc
push
cs
sbb
icebp
mov
inc
inc
inc
sbb
or
dec
dec
and
sbb
repnz
jo
adc
xor
push
jae
sbb
lds
dec
push
ja
test
mov
rcl
sub
and
jmp
das
add
inc
pop
or
sbb
adc
inc
movs
sub
dec
icebp
inc
add
adc
push
adc
jns
add
inc
clc
pop
or
push
xchg
mov
mov
imul
add
push
mov
mov
push
add
loope
push
fst
pop
or
dec
push
xor
and
cmp
jne
in
clc
enter
aaa
jmp
sbb
jnp
cmp
jne
fnstsw
jnp
cmp
jne
lock
fisttp
cmp
add
jne
inc
add
jbe
add
pop
jnp
xor
dec
pop
das
mov
adc
mov
xlat
clc
dec
clc
xchg
out
inc
dec
push
inc
xchg
adc
push
and
jb
add
ret
xor
add
inc
add
leave
ret
loop
ret
ret
adc
mov
inc
test
into
mov
dec
dec
pop
sti
pop
ret
add
xchg
pop
aaa
push
ins
pop
sti
or
iret
mov
popf
(bad)
cmps
ds
push
mov
mov
ror
outs
or
bound
adc
lods
loopne
sub
or
jle
mov
call
mov
jmp
inc
dec
jne
mov
pop
pop
dec
sub
inc
sbb
adc
adc
or
call
pop
loop
adc
lahf
test
div
popa
ins
inc
imul
inc
or
shr
mov
ins
jge
pop
cmps
dec
add
push
pop
cwde
jmp
or
aaa
xor
popf
loopne
in
and
push
push
inc
push
cmp
xor
and
imul
inc
das
pusha
push
mov
fmulp
or
arpl
aaa
add
lahf
mov
add
paddsb
dec
and
xchg
add
mov
sbb
aas
or
outs
arpl
jne
pushf
xor
or
iret
adc
loope
and
cmp
and
rol
popa
je
add
xchg
fldcw
imul
test
add
push
dec
mov
mov
js
push
xchg
movs
push
leave
sar
push
inc
imul
sbb
or
push
and
cmp
into
bound
inc
push
sub
jno
xor
outs
ins
pusha
ror
mov
mov
popf
cmp
lock
les
add
sbb
addr16
cmp
push
pop
aaa
cmp
mov
inc
mov
js
dec
adc
add
xor
and
add
cdq
fdiv
dec
loopne
and
mov
popa
add
in
add
in
mov
cmp
add
pop
push
or
loope
pop
mov
sbb
and
add
pop
fucomip
dec
pop
or
add
fs
sub
mov
fs
or
push
fs
nop
cmp
test
xor
lods
jo
idiv
add
push
inc
add
add
push
pusha
iret
sub
pop
scas
jb
loope
sub
jge
ss
rol
push
add
mov
test
inc
fs
pop
push
xchg
mov
clc
mov
inc
cdq
add
mov
add
sub
and
or
ja
pop
sbb
add
mov
add
js
inc
imul
push
xchg
adc
inc
cmp
(bad)
sbb
add
sbb
inc
add
and
push
fwait
lock
aaa
push
mov
lock
inc
mov
mov
push
and
retf
(bad)
xor
push
inc
mov
add
mov
das
mov
ins
jmp
movzx
(bad)
aas
or
or
je
pop
jne
div
rcr
or
inc
cmp
add
pop
lock
pop
pop
pop
(bad)
fild
sbb
nop
outs
pop
add
mov
jl
xor
pop
jge
icebp
mov
hlt
inc
mov
add
fs
mov
call
add
and
sub
jo
mov
pop
aad
adc
in
add
sbb
or
sahf
mov
push
mov
pushf
fisttp
mov
mov
inc
inc
js
scas
sub
push
fwait
add
fcmovu
ja
clc
lahf
sar
pop
pop
(bad)
ins
test
leave
mov
cld
test
out
in
and
rcl
xor
xor
adc
lods
or
ds
add
shr
adc
push
xlat
cmps
fidiv
push
out
push
push
nop
(bad)
lock
popa
adc
sbb
inc
inc
and
sub
stos
in
add
add
lahf
mov
or
rcr
pop
mov
push
aaa
ins
add
ret
jecxz
push
dec
loopne
int
or
add
mov
xchg
cmp
inc
adc
aaa
or
sbb
add
adc
cmp
mov
sbb
and
fdiv
sbb
push
xor
and
push
or
and
mov
inc
jmp
inc
cs
pop
cmp
lock
cs
and
call
mov
inc
loop
mov
call
inc
mov
into
xor
add
pop
pop
in
inc
and
mov
push
loope
mov
or
jecxz
aad
sbb
ret
inc
hlt
pop
loope
or
add
clc
and
mov
loop
push
dec
cmp
and
enter
aam
loope
and
mov
mov
inc
add
mov
inc
fiadd
ins
mov
fs
int3
arpl
stc
das
lea
test
inc
iret
pop
jns
mov
adc
xchg
inc
fdivr
and
mov
int
xor
cmp
sbb
mov
push
daa
add
leave
adc
test
add
push
inc
int
popa
lock
enter
fiadd
and
push
fwait
clc
mov
add
lahf
mov
add
sub
jb
ror
lea
(bad)
push
lock
mov
ds
pop
add
icebp
aas
add
sub
jno
and
adc
add
push
add
addr16
sbb
ds
sub
push
enter
inc
push
mov
jb
retf
add
add
mov
add
icebp
adc
ret
and
movs
dec
inc
out
and
std
pusha
mov
push
push
jb
movs
mov
xor
pop
sbb
leave
jp
add
dec
jbe
pop
push
aam
lock
xlat
mov
cld
sub
nop
push
sahf
and
lock
shl
jbe
inc
inc
cmp
ror
adc
sub
add
ja
add
popa
jo
pop
add
jne
bound
adc
or
pop
mov
jle
pop
sti
hlt
push
cld
dec
mov
sbb
fadd
xor
pop
sbb
jmp
jne
mov
popa
mov
mov
call
ss
lock
mov
(bad)
cmp
sbb
pop
bound
and
pop
inc
popa
cld
repnz
push
add
push
lds
jg
inc
cmps
or
mov
add
adc
popa
cmp
adc
pop
ja
add
xor
or
daa
inc
icebp
xchg
test
bound
lock
shl
inc
pop
add
es
pop
cmp
les
outs
or
dec
sar
xchg
add
inc
hlt
inc
add
leave
gs
hlt
add
or
cmp
sub
stc
lahf
(bad)
and
dec
jl
(bad)
push
dec
outs
pop
bound
pop
(bad)
bound
xlat
loopne
mov
movs
pop
std
add
sar
icebp
cmp
fs
adc
mov
hlt
call
sub
adc
mov
test
adc
inc
push
sub
mov
add
jns
sub
je
imul
hlt
and
(bad)
and
add
mov
pop
test
ror
repnz
rcl
imul
lods
lock
xchg
int
mov
out
ds
mov
mov
push
mul
or
and
pop
je
dec
je
jmp
dec
jmp
sub
scas
and
hlt
jb
repz
jnp
push
dec
je
push
adc
in
pop
xor
xor
push
push
(bad)
pop
xlat
outs
xchg
jo
dec
jo
cmp
call
add
bound
call
push
adc
adc
movs
and
jg
add
mov
add
(bad)
sub
bound
xor
xor
xor
push
dec
clc
xor
xor
cmps
pop
jg
add
push
sub
fwait
(bad)
xchg
mov
sub
pop
pop
ret
and
and
jmp
dec
mov
dec
adc
jl
(bad)
pop
pop
in
shl
addr16
pop
clc
mov
push
adc
mov
cmp
unpcklps
imul
fsubr
push
hlt
push
or
push
(bad)
push
mov
mov
cmp
and
fild
das
not
imul
dec
addr16
push
mov
dec
add
mov
or
mov
cmps
jae
pop
sbb
inc
jae
add
lea
outs
loopne
rcr
cdq
add
call
xchg
ficom
cmp
sub
out
xchg
add
daa
or
addr16
fsubrp
push
daa
adc
les
push
and
das
inc
pop
les
pop
push
push
add
call
js
in
(bad)
aaa
je
pushf
mov
add
js
push
sbb
ror
pop
test
out
push
pop
rcl
popf
mov
sbb
mov
js
add
inc
and
js
adc
inc
pop
and
mov
ins
and
retf
mov
jne
inc
sub
or
jmp
jae
mov
je
cmp
xchg
jbe
shr
add
je
jg
or
gs
pushf
cmc
or
aam
je
cmp
add
fs
js
rcr
(bad)
push
dec
xlat
mov
(bad)
add
adc
adc
xchg
shl
in
ror
adc
jp
ja
ja
sub
les
sub
test
dec
jmp
dec
jae
push
or
jnp
jno
lock
nop
bound
push
or
hlt
cmp
adc
aaa
rol
mov
or
(bad)
mov
add
test
push
std
mov
push
jb
mov
pop
jp
sbb
jno
pop
aaa
dec
loopne
xchg
or
scas
push
adc
jb
fs
lahf
movs
or
fs
push
je
jb
fs
pusha
fs
push
adc
sub
or
or
mov
or
and
or
sti
dec
shr
add
sub
push
and
inc
and
mov
xor
add
xchg
mov
mov
sub
sbb
sub
fild
ins
mov
cmps
mov
add
jo
mov
cmp
jo
add
in
mov
mov
and
mov
call
and
xchg
nop
lea
in
push
clc
cmp
arpl
or
repz
push
cvtpi2ps
(bad)
cmp
add
cmps
das
adc
inc
inc
enter
mov
inc
pop
pop
xlat
cmp
push
test
test
push
or
mov
or
xchg
inc
inc
xchg
stos
push
push
mov
or
dec
outs
jae
outs
enter
add
jo
leave
leave
leave
ins
lods
out
cmp
fs
enter
in
leave
in
and
pcmpeqw
sbb
dec
sahf
addr16
and
and
or
add
adc
inc
pusha
add
ins
push
retf
ins
pop
ins
jns
enter
push
sbb
add
inc
or
mov
les
xor
fld
adc
lds
mov
dec
mov
mov
mov
inc
xlat
cmp
push
lods
adc
nop
mov
jg
dec
push
mov
stos
or
les
xor
or
adc
mov
push
pop
push
mov
popa
mov
movs
adc
jno
lahf
push
cmp
jnp
js
xor
jge
jmp
xor
ins
and
mov
jno
test
push
adc
mov
mov
mov
sub
imul
in
test
pusha
mov
push
fld
iret
or
xchg
inc
int3
gs
ret
stos
push
and
vmread
xchg
lock
inc
rol
or
sbb
lea
or
jge
sysenter
and
loopne
lea
je
lea
pop
or
in
add
mov
mov
mov
lods
fld
push
and
sub
clc
cmc
add
std
movs
pop
mov
pop
add
scas
ret
xor
and
dec
loopne
jge
cld
jne
cmp
and
nop
sbb
stc
push
adc
hlt
je
cmp
mov
xor
inc
arpl
rol
push
inc
cmp
inc
inc
jge
imul
xchg
adc
fs
pop
add
ins
(bad)
adc
sub
xchg
add
push
add
repnz
xorps
and
and
or
pop
rol
into
sub
mov
aam
cld
jnp
loopne
and
xor
dec
outs
fdiv
and
sub
sbb
sub
loopne
add
movs
jo
lahf
mov
test
das
mov
popa
adc
rcr
sbb
lods
add
dec
das
add
shr
push
pop
adc
and
rcl
pushf
lods
iret
jle
fdivr
push
and
add
daa
xor
movs
pop
push
pop
pop
ret
pop
fisttp
jo
pusha
fsub
das
jae
inc
sbb
lahf
push
push
xchg
sbb
add
cs
sub
mov
(bad)
and
push
push
push
push
and
jp
pop
and
test
add
outs
mov
and
ins
adc
mov
sti
mov
mov
adc
mov
add
pop
add
add
inc
or
mov
xor
inc
jmp
fild
push
nop
in
js
dec
mov
jo
inc
mov
xor
aaa
push
pop
lock
out
ins
dec
jmp
arpl
nop
mov
inc
mov
rol
sub
mov
mov
jmp
jne
loope
inc
dec
lock
jge
and
adc
adc
inc
sbb
loope
push
sbb
and
dec
sti
cmp
shl
ins
dec
jp
sub
inc
xor
xor
dec
imul
cmp
sbb
or
xor
inc
and
dec
adc
mov
setne
add
pop
or
adc
or
xor
adc
retf
cmps
lods
sbb
and
or
mov
(bad)
in
pop
aad
popf
lahf
push
or
or
sub
aaa
jnp
loop
mov
js
adc
pop
cmp
dec
(bad)
jmp
fwait
xchg
adc
lock
pop
cld
mov
add
mov
pop
sbb
adc
(bad)
ja
add
pusha
pop
pop
pusha
mov
sbb
or
repz
test
nop
adc
xor
icebp
cmp
ins
call
hlt
adc
pop
add
pop
daa
jge
sub
push
lea
hlt
call
test
inc
scas
je
xchg
imul
add
es
rcr
cwde
inc
or
fucomip
fistp
xchg
push
mov
pop
dec
mov
xor
nop
inc
pushf
jae
inc
xor
add
in
sub
push
jo
shl
add
loopne
push
inc
jmp
xchg
xchg
int
push
sbb
or
push
outs
(bad)
das
les
sar
mov
sub
cmp
push
pop
and
push
inc
(bad)
pop
hlt
(bad)
lods
and
cmp
movs
inc
sbb
hlt
or
dec
dec
inc
cmp
mov
int
adc
pop
test
stos
shl
or
fs
pop
sub
test
jl
(bad)
pop
test
ror
test
and
inc
xchg
pusha
fistp
mov
pop
cli
fadd
jl
cmp
imul
(bad)
push
retf
clc
loop
lea
popf
add
ins
lock
or
or
add
add
aad
jmp
call
xchg
test
test
lock
jge
mov
fild
or
cld
ja
sub
rcr
fcomp
push
aas
cmp
push
mov
inc
or
mov
jge
fwait
xchg
and
push
add
icebp
fisttp
inc
add
adc
fcomp
adc
mov
loopne
std
lea
loope
cmps
fcomp
adc
push
stos
adc
int
arpl
test
in
nop
retf
xor
pop
in
xchg
inc
ret
add
add
shl
mov
mov
mov
dec
repnz
xor
push
xor
push
adc
xor
xchg
lods
in
test
xchg
test
push
add
in
mov
xchg
dec
loope
pop
inc
xchg
pop
lea
cmps
loopne
and
mov
outs
jo
jmp
and
nop
sbb
and
jne
dec
imul
adc
mov
fsub
fld
xchg
and
and
xchg
cmp
lock
xchg
and
and
mov
inc
inc
stos
or
and
ret
add
scas
adc
(bad)
popa
add
and
test
cmp
imul
adc
or
pusha
aaa
arpl
jne
jb
cmps
inc
or
dec
addr16
xor
sahf
ins
out
or
xor
inc
inc
mov
add
or
cmp
clc
pop
pop
pop
pop
addr16
add
cmp
push
add
pop
push
or
xchg
dec
ja
add
pop
xor
push
dec
push
add
in
jg
xchg
inc
add
push
add
or
add
mov
dec
pop
inc
mov
add
mov
leave
jp
mov
mov
jmp
pop
sub
and
xchg
adc
jmp
pop
ss
ret
xchg
mov
sbb
add
mov
add
push
ja
sar
push
add
add
inc
cmovnp
mov
test
dec
call
ss
test
inc
fild
and
add
pop
push
pop
adc
pop
pop
test
movups
lock
jne
or
cwde
imul
mov
xchg
outs
sub
dec
add
xor
push
repz
push
xchg
xor
pop
adc
sub
inc
dec
ret
loopne
imul
add
int3
rcr
adc
push
bnd
loopne
cmp
push
add
pop
or
cwde
or
daa
mov
push
out
xor
cmp
add
xor
inc
mov
inc
dec
dec
ds
cmp
or
xchg
sbb
pop
test
inc
add
add
in
and
dec
cmp
jmp
cmp
fs
sbb
add
mov
aad
mov
fcomp
push
cmp
jo
push
bound
pop
dec
je
test
mov
push
mov
mov
add
repz
popa
test
stos
mov
jp
popa
or
mov
push
sub
xor
loopne
pop
and
pop
pop
mov
(bad)
pop
aaa
or
mov
add
adc
add
sub
mov
fld
fcomp
pop
std
lahf
je
mov
pop
adc
ja
test
xchg
mov
aas
fcmovne
and
imul
test
xor
jo
sub
jbe
pusha
push
leave
fcmovb
jmp
(bad)
adc
xchg
inc
js
pusha
dec
cs
lods
xchg
aam
jmp
std
in
popa
loope
push
js
xchg
jae
push
test
xchg
and
lds
stc
rcr
add
cmp
data16
jge
and
pop
and
mov
mov
mov
jbe
jmp
mov
mov
imul
push
push
jo
sub
mov
mov
clc
sbb
xor
adc
mov
pop
dec
ins
sub
jmp
lock
and
push
jae
lock
jp
sub
adc
loope
or
es
sub
test
sub
add
mov
mov
mov
jnp
dec
or
es
movs
adc
(bad)
fnstsw
lar
cmp
dec
dec
sbb
jge
clc
jne
daa
into
movs
adc
push
cld
and
or
cmp
xchg
ret
cs
xor
lock
add
ins
btc
popa
push
popf
call
or
pop
outs
jo
imul
pop
outs
sub
cmp
jne
shl
icebp
stos
sub
push
mov
pop
mov
jmp
cmp
mov
mov
and
repnz
rcr
push
movs
push
adc
fcomp
mov
mov
(bad)
push
dec
add
mov
or
adc
cmp
push
daa
push
sbb
pop
pop
push
stos
push
sbb
in
sub
cmps
aad
mov
idiv
and
popf
add
in
lea
sbb
mov
adc
lods
in
(bad)
jns
mov
or
mov
cmp
daa
mov
daa
mov
adc
rol
dec
and
add
sub
and
lods
sub
rcl
lahf
adc
sbb
seto
xchg
dec
or
adc
mov
adc
mov
aam
scas
sub
push
mov
test
jnp
inc
inc
add
mov
cdq
add
lock
das
xlat
rol
fcomp
test
push
push
inc
sbb
imul
sbb
or
pop
and
in
push
mov
sbb
cmp
dec
or
or
jo
mov
mov
push
adc
inc
(bad)
cmp
in
les
pop
bound
mov
addr16
pop
sbb
push
mov
sub
add
adc
mov
mov
inc
adc
add
adc
hlt
ins
ins
dec
sti
ss
sub
adc
or
in
fisub
fist
jae
inc
and
sbb
pop
rcl
lahf
hlt
xor
sub
cmp
sar
jnp
jno
ja
jae
adc
test
pop
scas
or
dec
dec
fisttp
ja
adc
clc
xor
cdq
outs
fadd
repnz
mov
cmp
or
loope
mov
or
test
test
pop
jo
rcl
stc
mov
jno
jnp
add
jno
in
stc
dec
dec
popf
push
xor
outs
push
(bad)
sbb
and
xor
cwde
pop
jo
sbb
aam
pop
imul
xor
adc
push
in
jae
jge
pop
shr
in
(bad)
pop
add
pop
jno
or
fisttp
je
ret
inc
pusha
sub
xor
pop
add
hlt
test
adc
mov
nop
pop
sbb
xor
inc
pop
(bad)
sti
mov
js
inc
cmp
jmp
lods
arpl
sub
cs
nop
mov
add
jae
das
add
inc
scas
clc
sub
push
sbb
rcl
inc
or
lock
and
and
das
adc
stos
add
cmp
inc
mov
dec
rcl
sub
clc
or
mov
jp
or
lock
inc
das
cmp
aad
mov
lock
inc
sub
pop
pop
or
pop
scas
test
jb
in
ret
test
sti
push
xor
sbb
out
sub
int3
or
adc
add
or
sub
adc
xor
inc
or
std
mov
inc
rol
add
adc
test
push
dec
outs
dec
gs
nop
add
sbb
add
sbb
cld
add
xor
pop
js
or
cmps
in
pusha
xchg
pop
xchg
ins
xchg
dec
add
fs
les
or
imul
cdq
addr16
adc
inc
cmp
add
aaa
adc
xchg
fcom
push
dec
sub
push
add
or
sub
arpl
push
xor
das
jbe
jo
out
pop
outs
sbb
xchg
adc
sahf
push
push
push
and
loop
shr
cmp
push
movs
xchg
add
dec
das
or
sub
add
inc
loop
add
push
jmp
mov
dec
or
cs
sbb
adc
push
add
and
scas
push
pushf
mov
xchg
mov
add
and
js
add
push
ss
adc
cdq
pop
loope
inc
stos
jge
sub
repnz
dec
ins
call
xchg
dec
mov
jge
loope
push
xchg
sbb
xor
adc
mov
lock
jno
div
inc
push
mov
xor
test
iret
cmps
sub
mov
inc
or
shl
xchg
cmp
jbe
bound
or
add
xor
stc
adc
and
rcr
(bad)
les
or
sbb
xor
add
or
xor
in
inc
js
xchg
xchg
pop
pop
or
and
xor
add
cmp
popa
add
inc
clc
xchg
movs
mov
cmp
fdivr
retf
sub
pop
inc
mov
mov
sub
xor
mov
sbb
inc
xor
loopne
jae
push
push
fistp
or
or
iret
and
jo
cdq
imul
and
scas
bound
call
mov
cmps
fimul
(bad)
and
test
mov
xor
or
fdiv
fmul
mov
or
inc
js
cmp
sub
out
call
das
adc
imul
mov
hlt
cdq
cmp
lock
dec
(bad)
sbb
inc
push
push
fmul
or
fmul
inc
pushf
out
shl
cmc
fcomp
int
jae
xor
pop
nop
daa
xchg
lods
jbe
adc
rol
pop
or
dec
and
pop
inc
sbb
mov
push
and
jmp
js
mov
jge
cdq
pop
shr
aad
lods
mov
ins
dec
add
imul
push
or
movs
sbb
test
inc
push
std
or
push
jne
pop
call
adc
sub
sbb
mov
push
jb
push
jl
and
sbb
sti
sub
mov
mov
mov
loopne
test
stc
nop
push
and
(bad)
sub
movs
fcomp
and
xchg
pop
arpl
mov
xor
push
cdq
fistp
outs
xchg
pop
push
mov
adc
ins
add
pop
or
sub
bound
pop
dec
cwde
out
jnp
and
cmp
ror
inc
or
add
inc
pop
xlat
push
clc
adc
sub
mov
fwait
rol
or
aaa
dec
movs
rol
mov
outs
or
jle
sub
add
cmp
jne
push
mov
adc
xor
pop
add
stos
sub
movs
xor
inc
sbb
xchg
rcr
and
add
push
not
ret
push
cmovb
popf
jecxz
fist
es
das
mov
sbb
xor
div
call
iret
fsub
adc
fst
test
mov
shr
sti
test
popf
mov
push
test
test
dec
jl
add
inc
push
cmp
int
shr
popf
lds
mov
addr16
js
rcl
ss
pusha
popf
lds
clc
mov
xchg
or
sub
mov
or
pop
cmps
cs
dec
nop
or
sbb
adc
xchg
leave
push
sahf
pop
cwde
sub
outs
mov
pop
je
call
cs
js
fmul
(bad)
stos
setg
test
dec
(bad)
add
ret
push
mov
outs
and
in
inc
mov
lahf
mov
mov
mov
add
adc
(bad)
xor
in
shl
jne
cmps
je
arpl
xor
pop
or
loop
pusha
popf
mov
pop
or
dec
sahf
fprem
add
add
loop
add
mov
mov
lods
das
ret
shl
ja
in
mov
add
mov
sbb
mov
push
(bad)
adc
push
pop
daa
cmp
loopne
push
mov
mov
mov
jle
adc
mov
and
push
adc
sbb
aaa
sbb
shl
mov
inc
mov
out
pop
aam
push
xchg
lahf
(bad)
clts
add
push
lea
iret
pusha
xchg
hlt
and
sbb
aaa
fldenv
mov
xor
mov
or
sub
xor
test
pop
and
and
jno
call
das
fbld
sub
popf
xchg
loopne
bound
mov
hlt
div
rol
adc
inc
or
or
cmps
scas
pop
mov
popa
int
mov
dec
adc
mov
inc
or
adc
or
add
test
cmp
mov
pushf
adc
adc
dec
movs
fstp
ins
in
(bad)
repz
xor
dec
movs
sub
aas
add
lea
popaw
fsub
aaa
rcr
imul
xor
test
dec
aam
pop
and
jg
cs
jno
mov
sbb
push
inc
ror
xor
push
in
mov
mov
dec
dec
or
push
dec
out
dec
cs
adc
mov
scas
call
test
fidiv
push
adc
lock
dec
cmp
and
les
push
call
pop
mov
jp
add
or
cwde
pop
jle
push
pop
test
popa
push
out
fisub
mov
ja
cmps
dec
jle
dec
pop
sub
mov
mov
inc
adc
jnp
loopne
jo
push
add
pop
sub
icebp
ss
call
sbb
mov
mov
mov
lods
add
mov
or
ins
or
jne
or
or
cdq
or
outs
movs
adc
mov
cmc
bound
or
scas
pop
aad
cmps
add
mov
adc
repnz
cmp
adc
mov
add
add
xor
jg
pop
mov
into
ret
gs
adc
or
(bad)
xor
ror
outs
adc
push
test
loopne
add
jmp
loope
pop
xor
test
add
adc
or
mov
sub
mov
jns
loopne
cmps
pop
(bad)
and
fsubr
movs
sbb
scas
jo
xor
pusha
lea
(bad)
adc
enter
sbb
das
pusha
push
lahf
das
js
(bad)
inc
mov
pop
jmp
call
sbb
jmp
loopne
add
fistp
cmp
inc
or
jo
aam
inc
ret
xor
cmps
sub
dec
dec
outs
hlt
mov
jg
sbb
sbb
stos
imul
ret
sub
mov
and
sub
daa
adc
cli
(bad)
retf
sti
add
sub
xchg
mov
sbb
callw
push
add
jnp
fs
add
shl
inc
daa
lock
cmp
adc
addr16
nop
or
inc
sbb
add
and
call
mov
cmps
in
xor
add
mov
xchg
jnp
and
scas
sar
xchg
hlt
or
pop
cmps
pop
add
add
dec
in
stos
test
pop
hlt
adc
es
and
sbb
mov
fcomp
mov
test
xor
xchg
cmp
mov
(bad)
jmp
test
ror
stos
test
lods
pop
clc
das
push
lods
div
sbb
sbb
push
test
fadd
cmp
imul
lods
add
aaa
lods
inc
lods
mov
lock
cs
imul
dec
jb
lods
cmp
loopne
rcr
pop
fisttp
adc
aam
pop
adc
dec
test
mov
mov
aas
test
in
sub
adc
cwde
sub
pop
js
mov
lock
ss
jmp
push
sub
lea
lea
pop
(bad)
es
mov
add
icebp
fdivr
ins
pusha
aas
mov
sar
call
add
pop
cmp
add
mov
dec
mov
add
and
push
das
daa
or
mov
dec
addr16
jp
outs
pop
push
push
mov
fbstp
dec
sub
lock
ror
adc
sub
aaa
popa
pop
and
fisttp
or
inc
jbe
aas
cmps
xor
push
sbb
mov
pop
int
enter
scas
pop
push
scas
pop
les
mov
mov
mov
imul
sbb
adc
xor
xor
dec
push
or
pusha
mov
or
pop
ins
mov
mov
inc
sub
pusha
mov
push
or
add
rcl
adc
sti
jle
inc
dec
inc
lea
cmp
and
pop
and
and
adc
push
add
jne
or
dec
repnz
add
jle
es
mov
mov
xor
out
mov
mov
xchg
icebp
pop
aad
shr
adc
mov
pop
jae
adc
jmp
or
or
add
sbb
pusha
aaa
stc
pop
jmp
or
ss
add
add
movzx
and
shl
push
add
sbb
or
bound
inc
jmp
stos
push
push
xchg
and
fst
in
out
inc
dec
inc
aas
mov
mov
stos
xor
pop
pushf
and
mov
xor
sub
adc
imul
adc
clc
mov
cld
aas
fdiv
cmp
mov
add
sbb
sub
pop
push
inc
cdq
fs
out
inc
jnp
mov
repnz
rol
pop
arpl
pop
xlat
ins
loop
push
sub
jb
je
mov
inc
dec
mov
pop
mov
push
sbb
cmps
in
aad
add
mov
mov
mov
dec
add
stc
pop
and
ficomp
not
mul
cmp
xor
mov
push
xchg
mov
and
push
push
jno
inc
and
fucomip
fidivr
push
and
and
inc
adc
jmp
add
addr16
pusha
add
fs
rcl
cmps
(bad)
das
push
or
add
int
cmp
adc
and
and
inc
arpl
add
dec
cdq
ret
outs
inc
jle
adc
add
mov
mov
cwde
pop
or
sub
scas
(bad)
ror
aas
mov
cmp
dec
mov
add
das
push
mov
mov
ret
xor
push
inc
or
pop
and
je
mov
mov
or
add
mov
add
xchg
je
mov
fist
adc
sub
push
push
mov
mov
add
push
pop
into
push
dec
bound
mov
les
pop
popf
push
push
cmp
leave
sbb
adc
add
repz
sbb
rcl
push
not
mov
les
lods
sub
das
cmp
add
jecxz
mov
or
inc
rcl
pop
jo
ror
or
or
and
in
pop
add
test
jle
pop
add
ret
dec
fimul
xor
mov
jb
pushf
scas
adc
rol
cmp
test
cmp
js
xchg
das
icebp
dec
push
cmc
mov
addps
push
push
mov
adc
enter
mov
test
and
(bad)
mov
test
mov
mov
or
xchg
shl
fild
ret
jmp
ror
pop
test
das
pop
inc
jmp
xor
inc
xchg
dec
(bad)
sub
cwde
ins
add
clc
push
inc
or
push
xchg
jno
in
push
xor
test
dec
shr
mov
or
and
arpl
in
push
ret
imul
shr
stos
and
jo
jle
imul
imul
sub
push
stos
mov
inc
inc
pop
test
or
push
push
xchg
push
call
lock
inc
inc
dec
adc
aad
adc
inc
(bad)
xor
aaa
sub
sub
push
or
ffree
cmp
add
adc
add
xor
pushw
cmp
inc
call
cmp
jne
inc
ror
popa
std
cdq
pop
mov
mov
sbb
xchg
aad
pop
sbb
cmp
add
(bad)
mov
add
mov
pop
push
dec
mov
jle
lods
sahf
dec
xor
dec
fucomp
ds
jge
cmp
inc
mov
cmp
mov
jo
es
xchg
pop
mov
ret
sbb
xchg
sub
jp
mov
sub
dec
mov
stos
sar
adc
ret
dec
mov
and
xor
sub
xlat
cmps
leave
cmp
inc
pop
adc
and
cmovle
rol
add
xor
ret
repnz
add
das
jecxz
push
xor
or
adc
xor
push
sbb
pop
jo
mov
repnz
cld
pavgb
add
adc
movs
adc
xchg
lock
arpl
inc
scas
(bad)
lods
xchg
loop
jmp
jne
aam
and
jle
in
jmp
and
cmp
sub
cld
xchg
(bad)
in
setle
jmp
shr
push
inc
cdq
add
xchg
dec
aam
fadd
and
sbb
add
jecxz
cdq
repz
clc
and
pop
xor
sbb
shl
jle
movs
mov
jmp
scas
jns
ins
add
sti
add
imul
das
fs
fidiv
inc
mov
sub
call
push
add
add
mov
inc
jle
sbb
add
dec
sub
test
mov
fistp
jbe
add
add
dec
mov
shr
or
imul
adc
loopne
ss
add
ret
out
inc
inc
dec
sbb
push
fadd
dec
fimul
sub
push
cmp
shl
adc
or
jmp
mov
outs
adc
add
jbe
sbb
inc
dec
jecxz
and
cmp
add
sub
jmp
xchg
add
push
shl
add
shl
push
movs
sbb
lea
(bad)
jle
inc
rcl
iret
mov
pop
pop
mov
xchg
not
inc
pop
jb
inc
pop
cmp
call
add
shr
dec
hlt
loopne
rol
std
fwait
shl
xor
cmp
loope
stos
push
repnz
jge
push
inc
neg
sbb
(bad)
cdq
dec
shr
push
nop
mov
cmc
xor
xor
lods
push
jmp
push
add
xchg
sub
sub
mov
repnz
pop
inc
test
pushf
clc
and
xchg
sbb
mov
mov
push
jge
je
mov
sbb
ret
sahf
leave
sub
push
jnp
call
mov
push
push
inc
aaa
daa
leave
xor
lock
aam
inc
xor
std
aam
in
jb
out
mov
mov
mov
mov
shr
es
rcl
inc
pop
in
shr
imul
ss
or
dec
enter
jb
enter
add
shl
mov
mov
int3
addr16
mov
sub
sub
sar
ins
rol
test
and
dec
adc
add
mov
js
sub
sub
adc
jbe
aas
and
inc
lock
cmps
stos
or
lods
imul
in
add
inc
scas
mov
outs
and
push
in
push
mov
push
out
aaa
sbb
xor
add
shl
mov
pop
jp
jne
fdiv
call
out
mov
and
in
ss
dec
stc
push
or
pop
sub
and
or
jnp
stos
xchg
push
test
neg
adc
pop
ss
or
std
(bad)
mov
dec
jle
mov
jo
or
push
not
mov
aaa
movs
add
test
pop
and
ins
or
add
cld
sbb
mov
inc
int
jne
shl
sbb
sbb
lock
(bad)
xor
pusha
ftst
ret
or
gs
mov
sub
dec
je
add
add
add
mov
in
jne
or
adc
inc
jae
bound
int3
lea
aaa
and
shl
cmp
inc
sbb
xor
ret
mov
add
aam
les
jnp
les
dec
mov
cs
push
rcr
stc
pop
(bad)
push
aam
xchg
loopne
aas
mov
or
in
and
ror
and
mov
fstp
xchg
xor
push
rol
pop
lods
stc
sbb
aaa
lods
arpl
pop
ret
add
std
(bad)
call
fadd
shr
(bad)
lods
pusha
push
xor
add
imul
popa
pusha
inc
mov
mov
ja
das
adc
push
(bad)
sar
push
shr
ret
mov
adc
clc
add
push
dec
rol
(bad)
fwait
add
retf
mov
mov
pop
inc
stos
shl
aas
and
adc
add
dec
out
mov
fmul
xor
mov
inc
aaa
test
or
(bad)
pop
mov
rcl
call
inc
inc
enter
fwait
lock
fwait
inc
enter
and
and
fnstenv
adc
(bad)
(bad)
xchg
mov
inc
das
mov
xor
scas
retf
dec
popf
xor
mov
mov
pop
out
add
mov
fcom
lock
add
xor
xor
add
std
adc
mov
mov
pop
clc
adc
add
adc
mov
push
or
inc
mov
movs
icebp
int3
adc
pop
mov
mov
cmp
jge
add
jge
jecxz
mov
add
sub
jb
add
stos
fisttp
sub
je
mov
ret
and
in
sar
adc
mov
or
jne
ins
cs
je
xchg
push
pop
mov
(bad)
in
mov
mov
jg
retf
mov
mov
xchg
cdq
aam
sub
pop
je
int3
(bad)
fidivr
mov
pop
ins
lods
sbb
or
mov
lods
jne
xchg
popa
ins
(bad)
stc
je
clc
jo
leave
lods
fstp
enter
sbb
loopne
or
lea
mov
push
mov
mov
pop
data16
mov
pushf
retf
jge
daa
jo
pop
pmulhuw
repnz
cmp
adc
add
xchg
sub
cmp
int3
pop
repnz
iret
adc
or
add
sub
dec
cmp
jne
fadd
or
sbb
xor
jge
(bad)
pop
pop
jae
ret
jne
retf
test
and
adc
xchg
pusha
mov
ss
adc
rol
das
pop
std
inc
out
push
sub
push
add
mov
aam
and
retf
inc
lods
ins
in
mov
jmp
mov
and
adc
icebp
sbb
push
inc
sbb
addr16
push
dec
aas
fdivr
add
ins
sub
adc
int
mov
mov
or
add
mov
mov
sbb
das
jmp
sbb
lahf
enter
or
ins
and
out
jle
mov
(bad)
ret
xor
mov
popa
mov
and
aas
mov
fmul
pushf
inc
(bad)
fcmovne
mov
and
jbe
pop
inc
jmp
popf
add
scas
dec
mov
mov
fld
adc
cs
cs
adc
mov
dec
adc
arpl
(bad)
mov
mov
into
pop
add
and
ret
call
xor
in
fmul
rol
pop
lahf
add
push
and
sub
bound
out
pop
inc
and
and
pop
ror
mov
loop
shl
daa
pop
addr16
xchg
sbb
dec
inc
pop
add
retf
pop
xchg
xor
mov
pop
cmp
mov
xchg
mov
out
dec
adc
jge
jle
jne
pop
scas
das
cmp
add
pop
push
in
rol
xchg
fdivr
mov
jne
xor
push
xchg
out
out
add
push
pop
mov
and
push
add
adc
scas
or
or
sbb
imul
inc
pop
jae
es
js
pop
or
in
imul
xchg
out
jo
icebp
or
xor
sub
inc
dec
aaa
or
xchg
jne
sub
out
adc
mov
ins
ins
add
popa
xchg
xchg
push
je
adc
sbb
jl
ss
cmp
mov
push
pop
jle
outs
mov
or
push
xchg
icebp
adc
leave
jne
pop
mov
out
out
mov
ins
cmp
iret
add
sbb
push
xchg
je
pop
daa
jecxz
or
xchg
lods
into
repnz
cmp
xchg
xchg
cmp
call
ins
adc
add
push
or
test
cmp
cmp
sub
or
mov
mov
jmp
jne
pusha
cmc
dec
add
adc
shl
xor
inc
add
adc
test
mov
mov
sar
dec
icebp
sar
pop
jb
and
scas
inc
push
and
das
(bad)
mov
in
fdivr
or
push
outs
xchg
out
add
sbb
push
rcl
push
inc
mov
adc
jae
and
hlt
add
(bad)
test
xchg
fscale
test
cld
test
push
frstor
add
push
pop
pop
add
jo
add
test
mov
pop
retf
mov
mov
sub
add
sbb
shl
sbb
mov
ret
outs
mov
jmp
shl
aaa
adc
aam
cld
push
addr16
ss
sahf
(bad)
das
push
(bad)
inc
push
cld
adc
int
out
dec
mov
xchg
stos
inc
dec
stos
fdivrp
cld
in
out
cs
adc
sub
pop
mov
jecxz
in
jg
arpl
lods
jl
adc
or
add
outs
sbb
sub
pop
adc
aaa
pusha
dec
arpl
pop
nop
jo
rol
jns
adc
inc
or
call
add
pusha
jno
imul
push
adc
sbb
cmovbe
jae
outs
fild
or
outs
jae
outs
outs
sub
lock
jo
add
shr
loop
(bad)
test
into
arpl
fst
enter
jmp
arpl
sub
clc
leave
(bad)
or
sbb
out
push
aas
add
xchg
in
fmul
pop
sbb
mov
icebp
mov
fiadd
push
mov
or
or
add
jo
sub
or
add
or
xchg
bound
dec
test
cwde
sbb
or
and
shl
sbb
add
ror
add
mov
inc
or
jnp
add
or
and
inc
imul
bound
ss
adc
sub
shr
mov
and
adc
(bad)
sub
pop
inc
and
fadd
daa
add
pop
add
inc
fld
arpl
aad
add
cmc
or
pop
pushf
mov
mov
fist
test
sub
std
adc
adc
pop
hlt
(bad)
cli
imul
outs
jge
(bad)
stos
push
fild
popa
cmps
icebp
xor
push
cmp
test
xchg
loopne
outs
pop
fcomp
mov
mov
jg
or
jo
movs
jae
dec
inc
jb
mov
pop
cmp
test
lea
jo
pop
mov
jl
add
shr
and
or
js
fisttp
iret
aaa
add
aad
(bad)
fistp
das
and
sub
push
call
jno
ins
add
sub
cli
(bad)
jnp
add
je
ins
add
outs
or
pop
(bad)
cs
inc
or
aaa
xchg
adc
mov
(bad)
sub
mov
fs
sub
inc
sbb
push
iret
fdiv
inc
aas
ret
xor
mov
test
add
add
pop
or
aad
cmp
xchg
scas
ins
push
xchg
call
aas
push
sub
rol
shl
je
jo
add
jl
mov
xchg
push
push
call
xchg
mov
fs
or
or
mov
ja
hlt
mov
xchg
xchg
fiadd
icebp
jo
cmp
add
cmp
push
shl
inc
xor
push
cmc
mov
retf
(bad)
jmp
cmc
in
mov
dec
jnp
inc
dec
xchg
ins
sbb
jecxz
hlt
sub
inc
and
inc
sub
icebp
add
movs
js
sahf
add
push
or
adc
and
jmp
xchg
mov
push
add
pop
in
adc
pop
aaa
push
add
inc
ins
mov
push
sbb
jne
push
inc
or
imul
sub
add
sub
fs
fmul
push
jecxz
pop
lock
inc
jl
mov
inc
sbb
push
mov
and
rcr
fist
mov
pop
mov
aaa
jo
ins
xor
ins
add
inc
rcr
jge
(bad)
loopne
add
jge
ins
loopne
inc
add
shl
fprem
out
push
jo
clc
(bad)
xor
mov
push
cwde
loopne
bound
add
movq
mov
bound
push
or
jp
lds
dec
mov
int3
mov
push
ins
mov
popa
pushf
mov
add
neg
iret
movs
or
sbb
pop
push
sub
adc
call
sbb
cmp
adc
ret
inc
enter
mov
jbe
fimul
adc
and
mov
jb
add
ins
rcl
pop
pop
pop
iret
in
or
xchg
imul
jecxz
hlt
nop
xor
push
sbb
and
cmps
clc
dec
xor
sbb
add
add
add
shl
sbb
inc
fstp
jnp
jl
adc
and
call
mov
push
(bad)
dec
add
add
pop
div
lea
xor
cmp
add
adc
lods
sahf
loopne
dec
inc
mov
mov
sub
loopne
sub
test
xor
mov
push
mov
sbb
xchg
sub
pusha
jle
out
adc
fld
and
cdq
inc
test
nop
fmul
and
or
das
arpl
(bad)
cmp
lea
mov
test
rol
out
xor
push
movs
add
xor
psraw
in
sbb
lods
mov
inc
mov
xor
add
mov
sub
jo
push
shr
push
inc
sbb
dec
add
push
adc
mov
ret
cmp
lds
cmp
mov
xchg
hlt
outs
shl
js
push
or
add
mov
addr16
sub
clc
inc
and
out
mov
lds
test
push
sbb
mov
adc
push
mov
pop
fwait
scas
add
or
xor
dec
je
jmp
leave
add
adc
fwait
jmp
stos
out
and
and
rol
jno
dec
ffreep
mov
iret
mov
mov
jmp
sbb
add
adc
push
jmp
or
and
xchg
js
movs
adc
in
mov
xor
cmps
push
fimul
cmp
push
scas
arpl
in
add
mov
push
in
dec
pop
cmps
dec
in
inc
sbb
in
in
sub
enter
in
fld
je
shl
popa
pusha
push
add
push
dec
pusha
sar
mov
and
inc
sbb
ud2
jg
inc
sub
lods
enter
test
jle
popf
and
shr
sub
movs
inc
sbb
les
mov
mov
call
popf
data16
jp
push
add
jl
outs
jo
ins
jg
adc
repnz
fld
xor
fucomip
push
ins
add
or
jmp
arpl
iret
retf
call
xchg
ror
add
lahf
fdivr
xor
xchg
call
stos
dec
neg
adc
mov
add
mov
push
in
adc
push
adc
mov
cdq
or
or
sbb
dec
shr
adc
inc
popa
in
hlt
test
or
jmp
and
and
jbe
test
int3
sub
cmp
ins
daa
pop
mov
push
jbe
ins
fs
mov
pop
sub
push
mov
cmps
loop
inc
pusha
xor
rol
pop
test
fadd
jae
mov
mov
and
add
out
and
out
cmp
add
cmp
add
add
push
jg
test
loope
add
or
pop
push
fild
sbb
mov
rcl
mov
ret
aaa
jmp
jnp
add
jmp
mov
push
sbb
aaa
nop
cmp
fcomp
cmps
ret
mov
mov
adc
cmps
xlat
adc
icebp
mov
adc
or
cli
cwde
add
popa
ins
and
loopne
ins
je
xor
aam
(bad)
jg
cmp
jmp
(bad)
cmp
fmul
sbb
inc
retf
or
inc
or
push
sbb
ins
adc
or
cmps
xor
push
push
inc
adc
outs
daa
dec
mov
add
or
mov
nop
push
pop
das
jp
adc
scas
adc
ret
or
mov
mov
jle
push
or
adc
xor
jo
pop
and
adc
cmp
inc
push
cmp
shl
push
(bad)
sub
pushf
aaa
cmp
jp
cwde
pusha
sbb
and
pop
enter
enter
inc
xlat
cmp
or
sub
mov
adc
push
into
cdq
add
ficomp
cwde
and
jge
push
out
push
sub
or
adc
sub
dec
adc
inc
cmp
mov
je
fsubr
sub
hlt
and
mov
add
pop
sbb
dec
clc
movs
add
sub
in
sbb
hlt
sbb
dec
fist
shr
pop
and
add
add
lods
or
ffreep
or
xchg
cmp
push
inc
jl
add
call
cmp
stos
call
adc
pop
cmp
inc
and
repz
mov
in
or
dec
push
out
jne
js
jae
add
clc
jle
pusha
sbb
mov
pop
adc
enter
push
xor
data16
or
mov
fsubp
sub
jl
idiv
fwait
adc
add
push
and
mov
or
add
repnz
and
ins
(bad)
sub
add
push
mov
in
mov
push
add
xchg
mov
out
inc
dec
push
xor
in
cmp
xor
and
sbb
add
test
sbb
(bad)
scas
and
lea
sub
sub
cmp
or
lock
ret
test
(bad)
push
popa
add
jg
lock
ret
adc
arpl
mov
out
rcl
push
ss
mov
daa
out
adc
xor
scas
lods
icebp
in
push
inc
and
jmp
clc
sbb
pop
cmp
sbb
mov
add
push
xor
sbb
gs
inc
mov
pushf
push
and
jge
shl
xchg
ja
add
adc
and
mov
or
xor
das
inc
fisttp
hlt
jno
hlt
ja
aam
in
jmp
pop
xchg
push
ins
(bad)
sbb
(bad)
push
and
(bad)
jmp
sub
lea
lahf
dec
popa
shl
pop
sub
out
add
mov
add
movs
ret
add
cmp
inc
or
das
sar
enter
cld
mov
push
xchg
(bad)
pop
test
pop
and
repnz
xchg
test
in
ret
xor
jnp
add
mov
mov
jle
jg
cmp
mul
push
or
cmp
sbb
jbe
xor
mov
push
outs
cmp
inc
lock
mov
cmp
inc
or
pop
outs
or
sbb
pop
in
add
add
sub
outs
xchg
or
pusha
add
cld
lahf
lea
jmp
adc
sti
push
in
clc
sub
fdivr
cld
adc
or
outs
or
mov
ins
cmp
pop
xor
dec
adc
or
cs
hlt
mov
mov
pop
jmp
add
mov
xchg
and
es
jo
jecxz
iret
sbb
sbb
or
scas
mov
scas
pop
and
mov
jecxz
or
push
and
or
div
inc
push
adc
xchg
xchg
jnp
sbb
out
daa
mov
add
sbb
(bad)
cmc
adc
movs
rcl
clc
add
add
call
cmps
movs
icebp
cs
inc
pop
jecxz
jb
test
enter
dec
in
cmc
or
jmp
or
push
adc
les
repz
fst
daa
cmc
mov
(bad)
pop
pop
add
sar
xor
sbb
ins
addr16
ins
dec
outs
je
fnsave
loope
pop
inc
inc
jbe
lock
test
inc
xor
lods
lods
scas
adc
jge
xor
adc
lock
dec
add
adc
div
outs
pop
cld
dec
adc
xor
inc
xchg
test
pop
mov
push
hlt
pop
cmp
pop
lods
jmp
xor
pop
nop
imul
test
mov
pop
ret
shl
jae
ficom
ins
inc
mov
clc
lock
fisttp
add
dec
adc
mov
ret
pop
adc
add
or
adc
or
push
jae
sub
add
pop
popa
mov
mov
ins
enter
xor
mov
out
push
push
jmp
mov
add
fistp
xor
pushf
pop
or
dec
pop
push
dec
dec
dec
inc
clc
adc
cld
or
push
inc
dec
inc
dec
push
dec
popa
movhps
sbb
add
outs
jo
jp
popa
js
inc
gs
mov
add
sbb
jae
add
stc
push
clc
es
int3
pop
fnstenv
or
das
cmp
push
pop
dec
or
loopne
xor
imul
pop
gs
int3
jle
add
sbb
inc
dec
sbb
mov
push
mov
sbb
inc
lods
pop
or
icebp
(bad)
mov
xor
pop
push
inc
push
pop
push
push
dec
pop
inc
pop
pop
inc
inc
push
xchg
and
jae
push
mov
fs
ins
jns
or
je
mov
push
mov
mov
adc
and
and
or
cwde
idiv
inc
push
dec
dec
inc
dec
cli
dec
dec
or
or
and
or
push
cmp
popf
pusha
loope
out
or
add
mov
inc
add
inc
(bad)
dec
bound
je
and
cmp
cmp
rcr
jb
adc
clc
popw
sbb
arpl
mov
in
cs
sar
fidiv
and
or
fcom
pop
and
push
add
push
or
scas
inc
mov
mov
aaa
test
inc
xor
stos
loop
ins
cmp
and
icebp
add
retf
js
or
int3
adc
rcr
add
mov
in
inc
pop
push
cwde
jae
push
sbb
sub
jnp
jo
call
pop
mov
(bad)
js
pop
bound
imul
jo
jbe
mov
or
mov
ss
gs
xor
xor
add
xor
stos
cmp
cmp
std
nop
aaa
sbb
inc
push
dec
xor
inc
dec
inc
sbb
pop
sbb
adc
stos
mov
ins
outs
pop
lods
adc
add
scas
push
ins
push
or
pop
cmps
imul
popa
add
(bad)
pop
xor
pop
and
hlt
das
adc
mov
jge
cs
pop
aas
fwait
add
mov
or
dec
xchg
pusha
pop
and
(bad)
std
cmps
adc
ficomp
lock
inc
fcom
jl
outs
xor
imul
sub
xor
ror
das
and
sar
cmps
xchg
jne
sub
dec
inc
push
and
das
jnp
mov
or
inc
push
xor
hlt
aaa
pop
sbb
adc
xor
inc
inc
ror
aaa
loop
cmps
mov
or
lahf
fiadd
jo
(bad)
(bad)
aas
adc
mov
inc
inc
dec
inc
inc
add
andps
pop
cmp
xor
mov
dec
inc
xor
test
push
push
clc
dec
push
xor
dec
pushf
push
cmp
mov
fcomp
fdiv
jmp
adc
mov
imul
dec
dec
push
inc
push
inc
push
rol
into
jmp
xchg
fmul
cmp
push
dec
push
dec
and
or
mov
aaa
mov
cmp
push
inc
xor
jnp
(bad)
xchg
sub
mov
rol
pop
sub
cld
sub
sub
outs
scas
scas
les
imul
and
fsubr
dec
test
ins
call
sub
arpl
add
jnp
popa
mov
push
sub
stc
nop
mov
xor
ror
(bad)
cmp
mov
pop
bound
sub
jne
stos
es
call
xchg
loop
les
add
mov
scas
loopne
int
pop
xchg
or
jae
xor
data16
xlat
(bad)
inc
loop
pop
sub
jne
pmullw
sahf
popa
jo
pop
pmaddwd
icebp
and
cs
or
and
adc
sub
adc
gs
or
sbb
push
push
imul
add
loope
inc
cmp
dec
add
adc
leave
push
test
or
pop
stc
xchg
mov
mov
ja
or
sub
cmp
adc
sbb
pop
js
test
outs
test
bound
sbb
pusha
push
mov
and
and
add
xor
adc
add
add
jmp
sub
out
cld
mov
sti
es
data16
sub
imul
outs
test
xor
adc
push
mov
test
js
adc
cs
add
test
adc
lock
es
pop
jbe
xor
pop
mov
xchg
mov
add
fnstsw
gs
jnp
sbb
pop
test
outs
sbb
in
daa
mov
mov
and
cmp
leave
ins
xor
jo
pop
sub
loope
xchg
mov
xor
or
inc
pushf
mov
inc
sbb
ss
sbb
(bad)
or
and
xchg
inc
lds
jno
push
mov
bound
ins
adc
push
xchg
sar
mov
push
ins
je
sub
(bad)
in
pop
add
dec
lock
hlt
mov
sbb
add
je
xor
mov
mov
sbb
and
and
(bad)
add
mov
push
inc
adc
cwde
or
call
push
inc
int
add
push
pop
lods
jmp
imul
push
loope
jne
pop
arpl
aad
or
inc
add
and
jb
sbb
mul
inc
and
or
add
or
cmps
outs
add
fs
jo
mov
cmovno
push
mov
push
rol
popa
popa
adc
dec
pusha
(bad)
loope
or
or
jae
or
adc
mov
pop
and
rcl
daa
int
pop
hlt
mov
loope
imul
xor
mov
jnp
push
jmp
jmp
inc
cmps
jo
inc
iret
ror
inc
cs
lahf
mov
ins
push
(bad)
aas
xor
dec
xchg
or
push
push
pop
push
dec
inc
pop
lock
add
adc
ret
(bad)
adc
and
add
ins
leave
retf
cmps
push
sbb
jno
loopne
adc
arpl
je
pop
mov
pop
mov
add
push
inc
cmp
les
ror
out
rol
cmps
stos
adc
adc
dec
cmp
adc
jle
sbb
sbb
cwde
inc
iret
jo
popa
rcr
pop
dec
jo
test
repz
or
mov
fisub
mov
bound
add
loope
fimul
dec
inc
cmp
sti
pushf
daa
out
jnp
dec
or
mov
das
mov
js
movs
mov
or
push
mov
loopne
inc
ror
in
loope
xor
retf
jne
ins
fs
das
pop
add
arpl
adc
pop
jno
and
push
push
pop
or
push
xchg
sbb
cmp
jp
or
xor
(bad)
or
mov
test
jmp
push
jns
arpl
adc
fwait
jmp
push
cld
mov
mov
adc
lock
jne
or
add
(bad)
mov
jno
push
loop
cs
push
dec
push
dec
inc
push
fldcw
mov
lahf
test
aaa
int3
inc
xor
cwde
or
or
sub
xor
enter
sbb
outs
push
imul
push
mov
and
cmc
ror
pop
ret
loope
or
xchg
push
arpl
sub
test
adc
pop
adc
sbb
jae
adc
push
jmp
and
jne
enter
xchg
mov
dec
(bad)
pop
or
pop
movs
and
inc
aad
push
retf
pop
pop
pop
cmp
sub
add
mov
mul
in
add
inc
add
push
add
push
jg
mov
pop
inc
and
ror
pusha
and
mov
pop
jne
and
or
ins
cwde
or
add
montmul
pop
cld
test
adc
fnstcw
daa
or
inc
dec
inc
add
xor
push
sbb
in
add
jbe
push
sbb
push
jmp
cmp
mov
sysret
cwde
xlat
adc
or
(bad)
adc
in
push
xchg
mov
dec
inc
push
dec
imul
inc
and
or
or
xor
jmp
sub
inc
and
mov
sub
xchg
push
lods
mov
add
pop
xlat
add
push
jp
cmp
adc
sub
sub
xchg
adc
or
mov
push
pop
dec
xchg
(bad)
imul
add
stos
adc
or
and
inc
mov
je
outs
dec
mov
pop
sub
add
clc
adc
outs
outs
fs
psraw
pop
xor
pop
ror
stc
clc
add
outs
pop
push
mov
leave
ja
sub
std
jb
shr
sub
push
add
ret
sub
stos
sub
push
adc
sub
or
mov
sub
mov
add
mov
inc
sbb
or
popf
dec
xor
(bad)
loopne
xor
gs
cmp
inc
jae
or
sub
int3
xor
dec
popa
stos
xor
stos
sbb
or
xchg
gs
add
cld
imul
and
pop
add
gs
(bad)
sbb
push
push
sub
popf
adc
push
sub
js
ins
adc
pcmpgtd
add
and
pop
adc
cmc
or
push
dec
ds
sub
cs
iret
and
mov
jl
sar
add
mov
addr16
pop
into
adc
jp
and
add
lods
mov
fst
mov
or
gs
sbb
pop
add
adc
add
cmc
cs
adc
or
cmp
mov
xor
cwde
(bad)
cmovno
push
add
pop
pop
loope
pusha
pop
push
dec
inc
loope
ret
add
or
adc
loop
ret
test
inc
movs
out
pop
fisttp
mov
pop
loopne
jne
aaa
jne
adc
adc
jl
out
xchg
xor
sbb
es
aas
or
loope
add
or
int
in
outs
jecxz
fisttp
push
cdq
jo
fadd
xchg
mov
aas
lea
adc
cmps
adc
jns
sar
jge
xor
sub
test
in
pusha
je
sar
add
das
mov
adc
data16
iret
or
loop
mov
xchg
mov
inc
xchg
pop
lds
out
mov
and
xchg
mov
or
movs
add
mov
or
nop
in
or
out
add
ins
inc
das
and
jae
xor
jmp
jecxz
dec
pop
inc
jae
cmc
dec
pop
adc
inc
pop
push
add
hlt
stos
loop
dec
dec
aaa
mov
mov
sub
aaa
sbb
dec
lods
pop
iret
cld
pop
arpl
sti
inc
iret
inc
dec
dec
inc
adc
xor
pop
dec
sub
jo
in
push
ret
movs
jno
push
ins
aam
lahf
jmp
retf
dec
jne
(bad)
lds
jno
mov
popa
ss
fstp
mov
out
stos
dec
js
dec
or
add
fld
dec
adc
adc
test
dec
in
dec
sbb
jmp
mov
enter
xchg
ins
and
imul
fbld
and
ret
imul
add
cmp
mov
add
push
out
and
or
ret
mov
push
mov
add
dec
jl
jecxz
inc
mov
cmp
xchg
dec
adc
add
imul
adc
push
stc
or
pusha
bound
movs
das
add
pop
sbb
adc
pop
sub
cdq
pusha
mov
inc
and
jae
and
jno
mov
mov
sbb
pop
adc
retf
rol
add
js
jmp
test
jmp
pop
aaa
test
jns
add
or
imul
loop
add
js
inc
fadd
sub
pusha
push
(bad)
cmp
imul
sti
adc
sbb
sub
ds
arpl
cmps
pop
xchg
popa
inc
xor
pop
dec
test
push
add
dec
and
call
dec
dec
dec
dec
push
push
jne
xchg
pop
sbb
rcr
mov
pop
dec
add
inc
pop
cmp
push
adc
shr
inc
add
xlat
mov
or
add
pop
minps
ret
adc
aad
pop
popf
adc
and
mov
adc
or
and
mov
dec
cmps
fwait
add
push
or
arpl
fs
fnstenv
das
imul
jo
and
push
pop
retf
cmps
dec
pop
cmp
das
or
in
loopne
sbb
daa
outs
or
or
adc
inc
cmp
jnp
xchg
loope
jg
movs
and
lds
sbb
push
adc
or
or
add
pop
imul
in
adc
adc
push
js
dec
jae
jo
mov
xor
mov
jo
push
pop
lea
sbb
cmovg
push
pop
mov
scas
and
adc
and
inc
inc
sbb
test
jo
xor
ret
push
call
inc
outs
inc
gs
adc
push
xchg
jle
shl
add
aaa
inc
jb
xchg
test
xchg
das
sti
fmul
in
mov
or
cmovnp
xor
arpl
jo
add
lea
mov
mov
mov
adc
push
shl
or
outs
nop
cs
or
rol
jo
add
fist
xadd
sub
outs
fisttp
outs
jne
xor
imul
cli
sbb
lods
mov
sub
push
das
leave
inc
and
or
sub
out
rol
inc
adc
std
pop
add
dec
call
or
sub
(bad)
imul
push
adc
mov
jae
mov
xor
or
sbb
jge
add
out
pop
cwde
icebp
lds
scas
scas
call
mov
jns
xor
ret
mov
or
les
mov
sbb
sti
or
sahf
and
inc
ret
dec
cmp
stc
popa
jb
adc
push
xor
pop
push
sub
(bad)
icebp
and
adc
outs
fs
push
dec
cmp
sbb
inc
dec
mov
pushf
pop
mov
add
push
fnstsw
sub
jne
ret
add
push
xor
inc
mov
mov
ins
sub
pusha
push
xchg
xor
(bad)
push
pop
jo
pushf
sbb
or
imul
jo
imul
stos
mov
cmp
or
(bad)
sub
push
or
and
xchg
sub
jo
inc
test
loop
fisubr
ja
or
fdiv
or
data16
gs
pop
add
daa
popa
sbb
(bad)
arpl
or
or
cmp
sbb
jo
imul
cmp
mov
sub
mov
ret
test
les
mov
or
das
adc
ja
and
or
ins
sub
push
push
pop
or
push
aad
cmp
push
scas
sbb
imul
aam
gs
cmp
mov
inc
aad
inc
mov
jg
dec
xchg
ror
add
or
cmp
adc
(bad)
popa
push
sti
jo
repz
push
add
imul
add
sbb
repz
adc
add
or
inc
sub
push
dec
xor
out
sub
and
pop
int
push
dec
push
dec
popa
push
jmp
inc
xor
es
add
clc
cmp
and
inc
add
pop
loope
cs
imul
add
adc
pop
int
push
mov
or
pop
test
cmp
sbb
mov
cmp
adc
pop
and
xchg
inc
fs
add
jae
add
cmp
xchg
push
inc
sbb
xchg
mov
scas
mov
ret
in
fwait
mov
add
ret
sbb
adc
loopne
adc
pop
loopne
je
arpl
xor
xchg
adc
add
das
add
mov
jge
pop
sbb
push
icebp
xlat
mov
sub
adc
lock
xchg
je
jae
sub
add
add
in
push
pop
adc
sub
ja
sub
add
push
inc
or
or
mov
loopne
jge
sbb
adc
das
in
ins
mov
icebp
adc
outs
popa
add
jne
or
pop
nop
fcmovu
xor
sub
sbb
sbb
mov
movs
push
and
mov
aas
xchg
xchg
push
xor
lea
mov
jo
xor
arpl
sub
ror
push
pop
pop
lods
cs
xor
cwde
jbe
cmp
pop
sbb
loopne
pop
sub
dec
in
sbb
or
pop
test
ret
adc
xchg
sbb
cli
sbb
jbe
mov
and
mov
xchg
popf
cmp
xchg
sub
ins
pop
xchg
mov
adc
or
mov
pop
adc
jns
pushf
add
adc
adc
imul
cmp
out
xor
sub
mov
add
arpl
xchg
in
cmp
das
cmp
pop
sub
bound
hlt
sub
xor
cmp
xor
sbb
lds
xchg
xor
ss
inc
xlat
mov
jl
adc
jecxz
rol
aas
loopne
add
mov
mov
xor
rcl
mov
dec
lods
jbe
pop
mov
js
popa
inc
xchg
clc
loope
je
daa
pop
stos
dec
fcom
retf
nop
lods
push
push
pusha
inc
or
mov
maxps
aaa
inc
aas
cwde
pop
movs
sbb
test
xchg
rcr
pop
or
sti
mov
mov
mov
jle
mov
popa
push
jae
add
mov
das
ss
xor
pusha
mov
adc
les
jge
mov
add
inc
sub
shl
mov
hlt
sar
int
mov
mov
loopne
push
hlt
mov
pop
inc
clc
cmp
je
xor
cld
xor
add
mov
sbb
adc
dec
aad
(bad)
enter
adc
jbe
sbb
pop
adc
dec
add
icebp
rol
popa
loop
push
dec
xor
call
pop
movs
cmp
adc
es
inc
(bad)
ja
aaa
adc
(bad)
das
mov
xor
arpl
jmp
xor
jb
push
or
push
dec
push
xor
in
inc
(bad)
scas
cwde
cs
popa
pop
clc
arpl
and
add
jae
or
xor
popa
xchg
adc
mov
or
outs
inc
mov
outs
inc
add
adc
and
inc
ror
jb
in
outs
in
adc
ja
add
add
dec
or
(bad)
mov
ja
je
pop
xchg
mov
enter
xor
sub
mov
pop
outs
arpl
push
sub
test
push
jecxz
sub
pop
cwde
test
sub
gs
push
jb
int
mov
or
pop
loope
daa
lock
inc
cmp
jae
cmp
mov
pushf
std
daa
nop
sahf
add
outs
data16
push
jo
fst
or
loop
jl
sub
test
jae
and
das
jge
xor
adc
sub
pop
xor
pop
and
add
push
das
add
das
add
xchg
test
add
mov
adc
mov
push
jo
mov
jmp
mov
int
test
jge
enter
jge
imul
sub
nop
add
xchg
cwde
adc
adc
sbb
adc
adc
leave
setae
lods
and
jmp
inc
xchg
push
mov
and
mov
inc
fsubr
or
fsubr
(bad)
in
mov
loopne
cmc
jb
pop
and
mov
jb
ror
stos
iret
cmp
std
clc
mov
sti
clc
cld
xor
sub
push
and
pop
sbb
dec
and
popf
jp
or
inc
jno
or
pop
rcl
mov
(bad)
jmp
sub
outs
sbb
xor
sbb
inc
sbb
inc
or
cmp
data16
call
push
push
inc
rcl
pop
add
fmul
add
xor
pop
mov
pop
jo
lods
mov
popa
push
inc
or
jmp
daa
jmp
pushf
and
and
inc
mov
ins
ror
add
and
fwait
cs
jb
xor
pop
jecxz
mov
je
sub
js
mov
ss
pop
sbb
mov
mov
retf
es
and
outs
sub
call
outs
sahf
js
icebp
xlat
xchg
sub
ret
data16
or
gs
clc
xchg
adc
or
test
scas
mov
xor
dec
test
xor
xor
pop
icebp
xchg
xchg
or
jb
gs
add
inc
jl
jge
jb
hlt
sar
jae
les
pusha
gs
cmp
pop
ja
dec
ja
jae
dec
adc
or
push
xor
hlt
fwait
or
add
add
mov
jae
aad
pop
mov
popa
ins
stc
lods
pop
add
cmp
push
inc
mov
loop
iret
xchg
dec
mov
mov
pop
add
or
xchg
add
cmp
mov
jnp
pop
sbb
clc
arpl
test
inc
test
nop
imul
or
or
cmp
adc
fmul
push
cs
push
popf
xor
arpl
add
in
dec
rol
arpl
or
add
and
sbb
adc
(bad)
out
mov
sti
mov
daa
jb
dec
add
fcomp
xor
dec
push
inc
dec
and
jg
aam
mov
lea
add
es
dec
inc
or
icebp
mov
sub
dec
jo
je
rol
pop
addr16
gs
(bad)
les
jmp
add
adc
mov
lods
xchg
inc
inc
push
or
pop
enter
cmp
adc
dec
call
sbb
jne
inc
gs
imul
xchg
test
push
popa
xor
lds
dec
xor
adc
popa
jns
add
mov
mov
popf
add
jbe
ja
xor
arpl
fldcw
aaa
and
add
adc
daa
pop
pusha
push
sub
lea
(bad)
in
outs
ins
xor
adc
jno
xor
outs
gs
push
push
pop
or
outs
adc
mov
xor
xor
inc
loope
pop
in
mul
jmp
pop
cmp
pop
ss
aas
pop
add
int
arpl
or
mov
adc
xchg
outs
mov
or
fnstcw
jns
cmp
lock
dec
adc
mov
and
cmp
add
sti
mov
and
add
and
sub
or
ins
je
das
sub
sub
(bad)
mov
dec
cmp
sbb
or
hlt
xor
sub
sub
cmp
scas
mov
jae
lea
pop
aas
dec
inc
add
lea
daa
(bad)
or
movq
inc
pop
adc
fnstsw
inc
arpl
cmp
imul
xchg
dec
add
sbb
gs
ins
fisttp
add
ins
je
test
add
xor
mov
and
push
add
mov
cmp
add
cmp
jmp
adc
dec
(bad)
shl
mov
aaa
push
push
sbb
push
mov
push
inc
lds
mov
scas
fs
jmp
pop
jmp
gs
out
fld
sar
repz
out
mov
push
dec
or
add
ret
jge
or
sti
inc
add
mov
jns
jb
lock
add
icebp
dec
je
ror
ins
jns
xor
mov
xchg
sbb
ror
add
xor
adc
rol
xor
add
adc
ret
adc
sub
data16
and
sbb
pop
ds
movs
jnp
dec
out
mov
ss
or
mov
inc
jge
dec
pop
sub
scas
add
fsub
mov
sbb
or
loope
(bad)
cmps
or
push
add
mov
add
jmp
jecxz
pop
mov
jns
in
pop
add
hlt
inc
das
xor
pop
(bad)
cs
jbe
add
push
inc
jecxz
(bad)
movs
sub
and
xor
dec
xor
and
push
popf
jmp
jbe
lahf
add
and
push
test
dec
div
and
pop
(bad)
rol
fwait
sub
inc
es
mov
dec
inc
push
adc
adc
retf
jo
mov
xor
or
and
sub
or
inc
gs
pop
repz
sbb
mov
pop
cmp
mov
les
inc
or
aam
pop
int
scas
loopne
nop
in
push
aaa
adc
imul
mov
fs
nop
loop
rcr
adc
cs
and
(bad)
sub
mov
aas
dec
jae
push
lods
pop
ins
xor
js
mov
out
or
loope
fist
or
lods
or
xor
jne
pop
xor
inc
pop
mov
ja
cmps
add
xchg
frstor
(bad)
inc
jo
pop
or
sub
fs
push
and
arpl
stos
and
lock
mov
aad
das
sub
pop
xor
or
cli
or
inc
inc
pop
mov
push
push
xchg
and
jge
ja
inc
mov
xchg
bound
sbb
dec
or
cmp
add
adc
jo
bound
test
inc
add
jp
push
cwde
fisttp
imul
jp
inc
push
(bad)
in
rol
imul
mov
je
mov
mov
imul
cmps
push
cmp
jo
push
xchg
push
popa
xchg
sbb
je
(bad)
xchg
ror
cmp
dec
fwait
in
mov
mov
cmp
aas
fadd
(bad)
pop
test
pop
add
popa
in
ror
(bad)
das
loop
shl
das
out
jne
or
bound
nop
push
enter
add
add
out
push
je
ror
adc
xor
pop
add
test
push
cmp
dec
push
(bad)
xor
in
cmp
pop
sub
sbb
dec
ins
sbb
popf
dec
add
in
outs
inc
dec
data16
fsubr
es
das
push
pop
test
test
fld
dec
je
(bad)
loopne
inc
inc
inc
outs
fs
or
jle
adc
push
nop
in
fimul
repnz
lds
dec
shl
pop
pusha
mov
add
(bad)
mov
inc
ret
dec
daa
lods
adc
adc
retf
push
and
pop
popa
dec
jae
fs
pop
sub
mov
cld
jb
mov
inc
jb
and
pop
mov
cmp
rol
add
jp
popf
rcr
or
or
mov
adc
pop
push
jo
mov
sbb
sub
das
jo
out
jl
mov
add
add
frstor
dec
(bad)
fisttp
add
push
inc
shr
lods
sub
imul
mov
inc
add
pop
clc
adc
cmp
rcr
mov
mov
mov
pop
pop
pop
or
mov
or
cs
arpl
cmp
add
dec
pop
adc
pop
in
das
and
dec
pop
fmul
pop
(bad)
pop
push
outs
push
sti
push
pusha
shr
out
pop
inc
add
sbb
cmp
adc
dec
lahf
fcomp
mov
cmpps
pop
inc
frstor
xlat
pop
sub
adc
dec
outs
nop
pop
or
iret
in
je
jp
pop
dec
outs
dec
cmp
adc
shl
inc
xlat
pop
sub
pusha
aam
jae
dec
outs
and
mov
dec
pop
sub
xor
xor
inc
fwait
mov
pop
sub
or
nop
cmp
ficom
adc
or
push
cmp
xchg
pop
dec
test
or
add
cmp
mov
xor
jg
or
addr16
push
inc
(bad)
fistp
mov
pop
push
inc
loope
mov
or
loopne
adc
cmp
pushf
add
dec
mov
mov
enter
mov
dec
js
pop
add
add
inc
sar
or
or
add
or
(bad)
and
pop
xor
push
add
sbb
pop
cmp
push
or
xor
push
or
inc
mov
xor
cdq
or
adc
sub
and
jb
sub
sbb
push
and
mov
cmp
ret
or
call
xlat
push
push
add
lds
outs
ror
push
xor
mov
(bad)
cld
or
lock
add
push
jno
cld
shl
adc
ss
dec
add
add
xor
xlat
ins
sub
imul
mov
je
adc
retf
mov
sub
ror
xor
xor
loope
dec
add
mov
pop
push
push
(bad)
mov
fadd
test
mov
ror
add
rol
or
fnstcw
adc
push
push
push
sub
and
pop
and
xor
add
mov
sub
sub
sub
sub
cli
jb
xchg
arpl
push
fcom
in
inc
stc
pop
push
push
jae
aaa
dec
jg
or
adc
jecxz
mov
pop
push
jmp
mov
jmp
aam
sbb
repnz
sub
sub
mov
pop
pop
addr16
add
call
add
dec
shr
movs
cs
sub
add
push
cs
mov
or
les
gs
adc
cdq
pop
hlt
mov
retf
pop
pop
cdq
dec
shl
dec
xchg
inc
pop
hlt
fsubr
push
fmul
pop
sub
call
fdivr
adc
js
push
or
sub
mov
jp
fdiv
xchg
fwait
hlt
pusha
pop
and
or
mov
pop
rol
sub
jecxz
jno
cmp
xchg
fmul
jmp
test
ins
int3
push
cmp
cwde
clc
dec
sbb
pop
pop
xor
cmp
popf
xor
cmp
push
cs
inc
inc
dec
push
adc
jae
hlt
mov
aad
and
adc
xor
add
cli
dec
mov
fs
inc
mov
xor
aaa
iret
push
inc
jp
jnp
pop
(bad)
mov
jecxz
cmc
fdivr
xchg
ins
pusha
repnz
int
lea
jl
pop
jns
push
and
sub
inc
and
stc
nop
push
xchg
mov
pop
jmp
cmp
pop
pop
sbb
in
jns
add
fadd
add
and
cmp
cmp
adc
iret
mov
fwait
xchg
clc
xadd
mov
daa
jge
test
adc
push
mov
cmp
and
add
outs
inc
das
mov
ins
mov
popa
mov
mov
fild
daa
fcomp
cli
jne
test
stc
push
sti
in
jne
mov
xor
test
(bad)
mov
loop
in
adc
pop
sub
and
add
adc
mov
ins
test
pop
(bad)
or
and
jae
aam
in
add
pop
retf
ror
mov
add
cmp
shl
dec
les
sbb
mov
iret
dec
cld
mov
in
out
fs
and
mov
inc
inc
push
sbb
and
xor
enter
jno
push
and
xor
sbb
enter
jb
inc
inc
push
sbb
mov
add
and
and
enter
xchg
dec
test
mov
in
xchg
inc
pop
dec
pop
push
sbb
fs
call
fld
fs
xchg
ins
dec
jo
inc
push
sbb
je
js
jbe
in
loopne
ins
sar
fnsave
lock
xchg
inc
inc
inc
sub
mov
mov
and
push
xchg
retf
and
xchg
popa
and
and
test
lods
jne
and
arpl
mov
and
lods
cmp
or
lahf
inc
shl
test
and
and
xchg
arpl
int3
test
or
in
or
leave
enter
and
jo
sbb
in
call
sbb
in
std
and
cld
fs
jl
mov
and
(bad)
and
dec
push
outs
and
hlt
mov
(bad)
test
clc
sub
enter
push
enter
and
jge
sbb
jb
inc
or
and
and
sbb
in
dec
add
xor
sbb
push
push
test
and
xchg
push
sbb
in
jg
nop
adc
mov
stc
and
and
sbb
cmp
jo
fldenv
and
enter
enter
call
(bad)
loop
sub
xchg
inc
inc
cmp
sbb
in
add
add
xor
push
das
xlat
push
and
arpl
jo
je
inc
aaa
cwde
and
mov
and
add
cmp
sbb
and
dec
and
xor
lods
xor
enter
pushf
lock
arpl
fmul
mov
add
mov
inc
push
sbb
pushf
jo
mov
in
inc
movs
add
pop
test
sbb
fs
lods
mov
dec
and
mov
ins
sbb
add
pop
sbb
inc
shl
xor
xchg
les
push
or
sbb
int3
adc
in
xchg
arpl
aam
fadd
push
or
cmc
and
arpl
and
jl
test
mov
aad
call
int3
inc
(bad)
and
jecxz
enter
hlt
jb
mov
sbb
mov
ror
inc
and
setns
fcomp
xlat
xchg
inc
inc
or
sbb
xor
cmp
enter
inc
mov
push
aam
retf
mov
and
cwde
dec
xchg
arpl
and
ins
cmp
test
jo
inc
push
sbb
je
xor
enter
lea
sbb
mov
lods
mov
fs
int3
nop
in
movs
fs
mov
test
inc
push
sbb
pushf
jo
mov
jl
adc
fs
add
mov
and
and
(bad)
mov
in
and
xchg
arpl
pop
in
and
sbb
in
pusha
retf
nop
jae
push
loopne
or
adc
je
mov
add
and
xchg
mov
and
das
add
inc
inc
xchg
xchg
cwde
nop
jb
fsub
and
lods
gs
and
xchg
enter
and
xchg
mov
in
js
movs
xchg
arpl
push
rol
aam
xor
in
xchg
pop
fsubr
and
enter
ins
loopne
pushf
arpl
call
cmp
and
cdq
lea
movs
pushf
in
xchg
inc
test
lods
sbb
(bad)
jo
xchg
cmps
xchg
mov
and
cdq
(bad)
loope
mov
dec
xchg
arpl
push
les
and
sbb
in
nop
ror
xchg
jb
and
mov
xor
mov
and
adc
mov
inc
call
jb
mov
in
inc
daa
hlt
or
mov
cmp
shl
pop
push
cmp
adc
add
enter
sub
arpl
jno
ins
xor
xchg
xor
cmp
and
or
or
rcr
mov
je
test
enter
fadd
fnstenv
sbb
and
jne
enter
in
sub
xchg
fild
call
xchg
add
cmp
and
call
xor
cmp
sahf
stos
and
fs
push
imul
xor
and
xchg
xchg
push
xor
cmp
ret
and
add
enter
and
in
xor
lahf
push
dec
and
and
(bad)
push
sbb
adc
enter
clc
or
(bad)
dec
adc
mov
(bad)
push
loope
outs
and
mov
enter
loopne
pop
dec
pushf
cmp
mov
sbb
push
loop
shl
es
stc
push
movs
mov
cmp
mov
je
push
sbb
fs
aam
loope
mov
sbb
and
mov
ins
and
sbb
fs
cmp
enter
rol
jne
sub
and
imul
bound
and
mov
adc
stos
push
ficom
dec
jbe
pusha
fist
scas
enter
push
mov
mov
push
inc
arpl
les
pop
ja
xor
cmp
or
scas
jbe
push
dec
fs
sbb
neg
push
ret
jbe
js
push
pop
dec
push
jns
mov
and
xchg
push
or
arpl
mov
cmovnp
out
xchg
adc
inc
and
pop
sub
xchg
nop
xor
pusha
mov
jae
mov
and
(bad)
je
arpl
mov
sbb
mov
popa
add
test
arpl
test
xchg
(bad)
sbb
ja
adc
inc
or
jbe
ja
rol
jns
addr16
adc
bound
add
inc
and
xchg
mov
pop
mov
clc
daa
add
es
jb
pop
ins
and
inc
sbb
jge
or
scas
pop
add
mov
dec
mov
imul
jg
or
loopne
outs
test
popa
fisub
add
fnstsw
adc
scas
retf
arpl
je
mov
or
add
inc
ins
mov
push
push
call
ret
push
mov
inc
ja
or
(bad)
cmp
adc
outs
adc
movs
ins
mov
add
arpl
pusha
sub
imul
mov
mov
dec
popa
repz
cld
mov
ins
push
push
jae
jbe
dec
jecxz
mov
imul
jbe
ror
mov
xor
xor
or
xchg
dec
adc
pop
mov
bound
adc
dec
push
push
add
push
dec
xchg
inc
xor
dec
ror
mov
add
inc
and
movs
pusha
or
cdq
imul
mov
inc
mov
add
pop
das
adc
sub
xor
sub
pop
adc
or
aas
ret
cmp
mov
add
jmp
jmp
mov
cmps
pop
inc
jae
js
daa
jb
pop
inc
and
add
push
nop
push
test
jmp
xor
jns
popf
push
ret
das
or
test
call
dec
inc
and
xor
push
add
xor
div
jge
adc
add
inc
dec
imul
push
sti
ret
sbb
sub
scas
and
ins
add
test
push
imul
fwait
jne
outs
cmp
cdq
bound
adc
add
push
or
les
adc
inc
repnz
rol
push
(bad)
adc
lods
dec
or
pop
push
push
mov
jmp
xlat
or
iret
sbb
loop
mov
ins
adc
push
pop
lahf
sbb
iret
jg
push
xchg
sub
jmp
int3
pop
jg
xchg
add
push
xor
fistp
adc
sub
jne
mov
shl
sbb
lahf
adc
pop
or
jle
push
pop
or
ret
pop
push
fiadd
xchg
pop
adc
in
mov
or
fsubr
jg
outs
add
pusha
sbb
pop
pop
or
add
dec
stos
loope
ja
add
jae
call
pop
inc
push
push
add
push
jl
adc
sbb
shl
dec
jecxz
xor
ror
xor
dec
cmp
test
or
sbb
mov
ins
pop
jmp
adc
inc
push
dec
mov
xor
daa
(bad)
xor
inc
pop
dec
arpl
loope
mov
test
outs
jmp
mov
jns
shl
(bad)
cmova
ffreep
in
repz
jns
jo
je
jne
test
adc
push
adc
jmp
das
adc
(bad)
push
sbb
inc
add
mov
push
aaa
and
push
pop
mov
add
jmp
mov
sbb
pop
sbb
xchg
test
shl
mov
pop
jp
push
lahf
or
stos
les
pop
xchg
div
jle
ficom
test
jo
je
mov
lods
mov
pop
arpl
call
sub
out
xchg
pop
mov
mov
aas
dec
movs
fcmovu
lahf
jae
out
pop
push
aas
inc
inc
pop
pop
ds
imul
(bad)
outs
mov
jne
ins
push
ja
sub
sbb
pop
sub
lods
push
fcmovnu
sbb
or
aaa
ja
jo
or
movs
jne
dec
aam
push
test
push
lahf
pusha
pop
test
sbb
cmp
packuswb
adc
add
or
push
mov
jno
adc
mov
xlat
adc
xor
jbe
jae
lods
cli
test
jae
add
inc
stos
ja
ja
or
or
scas
push
cmp
in
pop
outs
repz
or
pop
mov
jmp
mov
pop
ins
fidiv
je
ror
mov
add
ja
jo
cmps
add
jg
aam
je
out
jo
pop
imul
mov
push
sub
or
(bad)
xchg
rol
dec
jae
adc
sub
push
add
add
inc
add
sbb
aaa
adc
loop
cmp
pop
scas
fs
mov
daa
adc
add
addr16
aaa
aaa
jp
adc
and
ret
add
adc
mov
(bad)
call
cvtps2pd
inc
imul
xor
bound
outs
aas
pop
add
add
inc
add
ret
add
push
outs
mov
push
emms
cmp
(bad)
mov
xorps
add
movs
inc
mov
mov
aad
or
imul
dec
jo
dec
test
or
jnp
jae
jg
add
aaa
test
add
xchg
add
call
lds
add
dec
adc
push
add
iret
outs
sub
push
scas
pop
inc
push
add
aas
push
aas
and
ss
cmps
add
xchg
xchg
pusha
test
pop
mov
movs
add
test
outs
push
lods
add
adc
mov
mov
adc
inc
inc
mov
jae
fwait
pusha
adc
or
add
bound
dec
dec
pop
cs
or
dec
repnz
push
push
into
xor
clc
add
pop
cs
add
sub
inc
add
pop
add
fstp
popf
outs
(bad)
push
xchg
jbe
sbb
out
push
mov
sub
dec
sub
adc
daa
and
push
jp
fbstp
add
inc
pop
adc
pop
sbb
arpl
adc
jmp
je
dec
js
or
dec
mov
mov
add
aaa
inc
add
sub
daa
mov
sahf
dec
rol
cmps
bound
gs
outs
or
shr
ret
add
push
daa
hlt
mov
inc
shr
ins
call
inc
adc
sub
je
pop
mov
and
retf
push
addr16
sub
call
shl
bound
dec
or
add
or
push
and
push
adc
add
inc
pop
push
in
pop
xchg
xor
sub
adc
sbb
inc
test
lea
xlat
add
adc
sbb
sbb
add
sub
push
inc
or
push
in
sbb
aad
sub
sbb
jbe
xchg
xor
xor
(bad)
pop
jno
aam
addr16
mov
adc
pop
and
adc
shl
sbb
pop
cmp
lods
and
das
xlat
xchg
sub
dec
xchg
inc
xchg
sbb
mov
jg
adc
bound
arpl
or
popa
add
xlat
inc
xor
xor
ss
rol
xchg
cs
xor
cmp
xor
pop
ins
scas
xor
aaa
xor
aaa
and
adc
dec
out
shl
das
xor
or
loop
(bad)
pop
mov
les
popa
mov
sbb
(bad)
dec
ins
inc
addr16
pop
add
mov
push
xor
lds
inc
inc
dec
inc
sbb
sbb
inc
lea
push
mov
jle
das
push
or
xor
inc
inc
inc
xchg
or
mov
lods
push
and
sub
jg
sub
movs
and
pop
mov
adc
sub
dec
outs
xor
mov
xchg
aaa
inc
ins
xor
adc
das
inc
jae
push
push
scas
push
test
xor
inc
mov
add
mov
pop
addr16
ja
or
push
imul
sbb
pop
not
outs
cmp
aad
or
add
sbb
outs
mov
fsubr
xchg
pop
(bad)
jg
sahf
add
arpl
or
and
xchg
pop
imul
pop
and
add
iret
inc
lock
pop
ss
pushf
les
div
adc
aam
test
cmps
mov
add
pop
iret
or
aas
and
sub
emms
stos
or
cmp
add
pop
cwde
or
push
mov
not
pop
outs
loop
sbb
xchg
jae
pop
fadd
sbb
xchg
or
add
push
jg
dec
or
ja
aaa
(bad)
or
cmp
aaa
jg
lahf
pop
inc
push
pop
stos
sbb
xchg
ficom
icebp
fisub
push
pop
cmps
cmps
fs
ins
push
(bad)
aaa
jbe
jne
xor
cmovbe
push
cwde
dec
jl
cmps
outs
lahf
pop
add
psubsb
mov
in
popa
inc
sti
cmp
pop
jmp
adc
imul
test
lock
dec
in
cmp
pop
jmp
clc
push
xchg
jbe
pop
and
mov
mov
cmp
sbb
imul
mov
sub
xor
or
or
and
pop
and
and
pop
pusha
fs
ins
jo
js
mov
and
inc
inc
inc
or
mov
xchg
cwde
pushf
mov
movs
test
mov
inc
inc
inc
mov
mov
inc
(bad)
enter
inc
inc
inc
aam
fsubr
inc
inc
or
in
lock
cs
add
hlt
sub
fs
mov
or
fs
push
fs
pop
pop
pusha
jb
ins
fs
adc
push
or
and
or
mov
sbb
jo
je
js
and
and
add
pushf
mov
and
lods
mov
mov
mov
and
and
int3
rcl
and
and
fadd
fsub
and
and
in
in
lock
and
hlt
clc
cld
add
add
add
cmp
dec
or
inc
inc
dec
push
enter
push
pop
fs
enter
jo
push
enter
mov
enter
nop
xchg
cwde
outs
inc
inc
xchg
push
inc
inc
inc
inc
jo
test
mov
inc
inc
js
jmp
inc
inc
or
mov
inc
dec
push
jge
dec
xor
xor
mov
xor
xchg
cwde
pop
addr16
lods
sub
enter
enter
enter
fcomp
loopne
ins
ror
call
int3
and
addr16
mov
mov
mov
in
lea
adc
adc
and
xchg
fst
sub
mov
bound
mov
add
adc
push
sbb
sbb
and
xor
retf
into
or
and
xor
xor
and
xor
mov
ret
or
data16
sub
xor
xchg
add
dec
test
sbb
sub
mov
or
fldcw
xor
or
and
cmp
mov
or
pop
imul
enter
xlat
outs
jg
adc
and
cmps
scas
pop
mov
xor
mov
inc
loopne
pop
adc
in
lock
add
inc
or
xchg
or
call
pop
mov
test
fcmove
iret
mov
and
or
repnz
push
in
mov
shl
add
and
dec
in
in
call
mov
imul
ins
cdq
fs
inc
sub
push
sbb
push
pop
aam
fmul
dec
sbb
int3
int3
cs
xchg
mov
rcl
dec
inc
es
les
mov
lahf
xchg
enter
cmp
add
sub
or
and
or
mov
add
enter
add
inc
inc
xchg
dec
sti
mov
rcl
mov
enter
mov
je
mov
nop
and
push
sbb
ja
jb
inc
movs
jl
je
ret
inc
adc
pop
mov
sbb
icebp
jb
movd
mov
div
add
bound
xchg
adc
push
adc
and
lods
sbb
add
push
push
cmps
mov
mov
mov
ins
xor
and
xchg
cmp
mov
push
clc
xchg
sbb
mov
add
aaa
push
adc
adc
jge
mov
sbb
xlat
xchg
pop
inc
or
outs
adc
push
mov
mov
idiv
adc
sbb
add
das
add
inc
add
cmp
push
inc
pop
and
xlat
and
ret
ret
cmovo
scas
ror
pop
das
jmp
adc
pop
and
pop
sub
js
shl
xchg
push
cs
sub
aas
aaa
mov
xchg
xor
inc
jnp
push
inc
les
fcmovnu
adc
and
ja
dec
call
add
punpckhwd
or
out
or
mov
add
or
inc
sbb
and
(bad)
pop
mov
add
add
sbb
jae
mov
and
and
jnp
pop
pusha
sbb
mov
retf
jmp
add
sub
add
mov
mov
inc
xor
xchg
ds
add
test
mov
mov
(bad)
fsub
xor
mov
outs
inc
push
loopne
fdiv
or
in
xchg
scas
mov
lods
add
inc
cmp
leave
nop
jno
ret
or
or
ror
add
xor
push
lahf
test
cmp
mov
repz
mov
das
xor
mov
in
add
test
push
push
push
push
cld
dec
sahf
add
and
push
rol
cld
mov
mov
and
xchg
stc
inc
or
inc
pusha
or
leave
jne
test
ds
lds
or
daa
dec
popf
xchg
push
xchg
push
mov
add
add
push
dec
add
dec
rcl
and
js
pusha
mov
pop
jg
cmps
call
jg
xchg
or
add
mov
or
fs
sub
push
ret
std
jbe
inc
adc
inc
sbb
lds
or
call
lods
sbb
lock
out
(bad)
cmp
adc
pop
mov
ss
xchg
xchg
imul
ds
mov
mov
cld
sub
test
inc
adc
or
nop
(bad)
rol
mov
dec
sbb
push
or
pop
test
jo
and
add
push
or
into
adc
xchg
add
jl
cmp
fisttp
adc
pusha
inc
sub
push
sub
or
js
sar
inc
pop
iret
dec
and
and
mov
and
and
pusha
or
xchg
or
inc
cmp
fsub
cmc
cmps
repnz
adc
adc
mov
and
jmp
push
mov
cmp
sbb
dec
sub
outs
das
pop
push
adc
scas
and
popf
xchg
mov
shl
pop
iret
inc
inc
icebp
add
sub
(bad)
fadd
push
outs
fadd
mov
out
repz
dec
dec
ds
or
in
test
and
or
add
cwde
sub
jg
jp
shr
imul
add
pop
adc
and
mov
sar
xor
dec
test
mov
(bad)
inc
ret
adc
mov
mov
push
mov
idiv
(bad)
rol
inc
xlat
ins
mov
rol
mov
pop
ja
cmps
clc
mov
ss
mov
add
cmp
inc
jnp
xor
push
out
inc
loope
xor
pop
daa
push
or
fs
and
fisttp
movs
adc
fwait
add
add
or
pavgb
adc
loopne
int
adc
loopne
mov
or
mov
out
ins
add
dec
rcr
push
sbb
inc
push
cmp
add
outs
or
adc
add
shl
xor
mov
pop
xchg
retf
dec
jecxz
inc
and
inc
sub
test
test
and
inc
xor
add
push
add
fidivr
or
inc
(bad)
test
xor
inc
cmps
push
add
and
out
dec
push
mov
mov
aaa
and
pop
xor
and
push
add
adc
call
pop
or
jae
and
mov
inc
mov
ret
cmp
xchg
test
dec
lods
or
pop
xchg
adc
out
or
inc
or
mov
mov
call
adc
outs
pop
jp
and
add
movs
push
push
xchg
retf
and
dec
mov
pop
sar
pop
test
imul
push
push
sbb
cmp
jmp
push
cs
pop
cmp
aam
push
cli
shl
lods
inc
test
xor
xor
popf
add
pusha
xor
jbe
(bad)
adc
pop
ret
sub
cmp
adc
or
or
es
dec
inc
sbb
sub
test
sub
pop
or
and
or
jmp
cmp
mov
pop
pop
push
jmp
ret
or
fadd
add
loopne
and
dec
lock
(bad)
adc
clc
sbb
es
out
test
outs
adc
and
push
add
add
mov
jnp
int3
das
loop
movs
and
xchg
pop
cmp
int3
cs
enter
cmp
cmp
(bad)
rcr
jl
add
adc
neg
add
out
dec
dec
adc
pop
fchs
rol
pop
cmp
pop
mov
xchg
mov
pop
mov
inc
imul
in
xchg
test
inc
dec
test
mov
retf
ror
xor
mov
sub
ins
mov
movs
mov
cmp
mov
dec
pop
out
or
adc
inc
rcl
add
clc
(bad)
jmp
push
cmp
sbb
push
mov
add
mov
test
add
adc
inc
hlt
add
lock
xchg
sbb
pop
call
repnz
and
pop
mov
in
pop
bound
ret
(bad)
push
inc
lods
mov
mov
adc
outs
sub
xchg
adc
shl
jbe
and
aaa
pop
int
in
push
push
xchg
jmp
add
inc
loope
inc
cmp
shr
add
pop
push
cld
ret
cmc
add
mov
aaa
ficom
inc
cmp
ret
icebp
and
scas
jl
xchg
xlat
add
pop
sub
pop
rcl
es
fist
movs
push
push
movlps
mov
adc
leave
add
test
lahf
sub
cmps
mov
movs
add
fidivr
cmc
pop
push
scas
or
mov
aad
dec
xchg
push
and
mov
pop
pop
inc
sub
jmp
out
jg
retf
icebp
test
stos
mov
jns
add
(bad)
adc
xor
push
out
ss
or
test
xor
adc
xor
loop
push
mov
jmp
ror
mov
adc
and
pushf
enter
fadd
xchg
into
xor
rol
(bad)
push
arpl
inc
loopne
add
test
inc
add
lock
fcomp
inc
xchg
or
push
push
cmp
inc
push
jle
or
lock
adc
int3
int
adc
mov
add
rol
inc
sbb
clc
fucom
add
test
fisttp
fnstenv
or
sbb
pop
call
add
xchg
mov
mov
sbb
pusha
xchg
xchg
xchg
sbb
or
lds
int3
or
in
ficom
mov
mov
jnp
inc
and
mov
inc
add
sub
mov
adc
(bad)
out
sub
pop
add
adc
nop
inc
sbb
sbb
adc
imul
pushf
unpcklps
add
adc
(bad)
aaa
xor
xchg
push
in
mov
das
jge
outs
push
or
add
outs
and
push
inc
add
add
imul
lea
shl
test
pop
test
push
rol
imul
sahf
or
push
and
adc
js
nop
mov
int
leave
push
jg
das
popf
push
sbb
adc
inc
mov
rol
or
(bad)
sbb
(bad)
in
dec
mov
fs
push
or
out
push
sbb
inc
push
sbb
out
mov
pusha
push
cmp
aam
test
test
repz
dec
add
push
mov
sahf
fiadd
sbb
add
xor
jmp
xor
and
sbb
mov
mov
scas
dec
inc
pusha
clc
add
dec
loop
mov
ins
jo
je
add
rol
cmps
dec
mov
pop
inc
pop
add
stc
jns
or
sahf
pop
test
push
sbb
out
in
sub
inc
jnp
pushf
test
add
retf
or
push
dec
cmp
mov
and
mov
call
and
gs
sub
jbe
movhps
mov
scas
mov
mov
add
inc
inc
cmp
loopne
stc
cmp
cdq
test
sub
fwait
iret
mov
mov
arpl
adc
(bad)
add
add
push
mov
or
mov
sti
adc
xor
sub
outs
sbb
lock
xchg
mov
sbb
or
add
or
popa
sbb
adc
aad
jne
gs
mov
add
(bad)
mov
pop
xlat
retf
mov
fxch
dec
add
pop
dec
pop
xchg
(bad)
mov
shl
(bad)
xor
sub
pop
sub
add
rcr
aaa
loopne
add
jp
dec
adc
cmp
sub
add
mov
jno
xchg
int
xor
es
xchg
cmp
add
rcl
inc
push
pusha
xchg
add
dec
push
add
push
inc
test
dec
movs
pop
or
rol
or
push
jns
sub
push
inc
xchg
and
or
dec
dec
ins
mov
mov
add
js
jmp
mov
sub
jmp
dec
or
adc
add
js
(bad)
dec
arpl
adc
xchg
jmp
inc
cmc
lds
add
add
fdivr
fadd
add
dec
loopne
pop
sbb
loopne
adc
out
push
pop
mov
das
sbb
test
pop
or
in
(bad)
mov
inc
xchg
add
call
aaa
arpl
or
(bad)
mov
add
push
adc
int
xchg
dec
jne
add
ins
test
push
pop
xor
iret
add
xor
or
int3
mov
xor
xor
xor
xor
imul
out
into
xor
xor
xor
and
add
lods
and
and
and
add
and
xchg
or
jne
xchg
adc
(bad)
push
pop
(bad)
sbb
xchg
call
out
not
dec
adc
pop
hlt
ror
cli
cmp
inc
or
adc
push
jmp
and
call
rcr
stc
add
and
imul
fmul
sti
call
test
add
inc
mov
jg
(bad)
xchg
cmp
mov
test
inc
pusha
xor
aas
sub
sub
sbb
mov
das
lods
add
mov
add
or
mov
push
mov
push
fwait
shr
sub
sub
push
dec
jno
push
or
aas
xor
add
jge
adc
repnz
mov
outs
push
aad
nop
lock
leave
dec
jb
icebp
or
adc
xchg
pop
xlat
popf
add
mov
adc
dec
xor
jle
out
pop
xor
je
mov
psubusw
and
shr
scas
movs
aam
dec
and
pop
vpcmpgtw
push
call
aaa
aam
inc
xchg
nop
fidiv
rol
gs
outs
aaa
loop
loopne
and
adc
push
mov
rol
lock
add
lods
je
pop
cmps
repnz
inc
add
nop
push
sar
xchg
movzx
dec
xor
cmp
adc
rcr
cmp
iret
mov
retf
jae
sahf
adc
inc
cmp
jecxz
adc
adc
xchg
movs
jge
cmps
push
or
jmp
cmp
cmovl
mov
mov
mov
or
sub
test
and
adc
ja
fwait
jmp
pop
lods
push
push
dec
clc
inc
es
aas
inc
add
or
out
xchg
push
mov
xor
movs
add
inc
dec
addr16
in
sar
mov
add
clc
inc
mov
and
in
adc
loopne
adc
adc
ret
dec
push
pop
inc
push
xor
inc
test
push
ins
enter
xchg
aad
or
popa
lds
jg
(bad)
push
cli
fldenv
mov
sbb
inc
jmp
adc
add
ins
lods
sbb
pop
pop
jg
cmp
sbb
mov
and
cmc
fiadd
add
push
inc
pop
fnop
(bad)
fadd
sbb
loop
jbe
xlat
arpl
jl
lods
rol
and
sbb
add
das
ret
imul
sbb
mov
adc
xor
inc
in
adc
xor
mov
gs
test
inc
hlt
imul
jp
adc
xor
in
aam
mov
pop
call
pop
leave
hlt
jbe
or
add
and
cwde
jge
fld
imul
and
or
fmul
mov
inc
mov
scas
pop
mov
sbb
rcl
cmp
pushf
adc
sbb
int
movs
sub
push
cmp
cld
push
push
or
aaa
or
adc
jp
xchg
xor
pop
inc
sar
add
in
xchg
and
add
jns
rcl
or
fimul
test
mov
sbb
arpl
movs
or
and
mov
pop
cmps
mov
and
dec
pop
and
push
pop
das
and
arpl
fdiv
lods
inc
cld
cmp
and
xor
add
cmp
inc
add
or
mov
ja
push
mov
leave
push
inc
push
lahf
xchg
nop
ret
push
push
pop
repnz
hlt
jg
fcmovb
nop/reserved
shl
add
and
imul
test
out
fsubr
pop
dec
add
mov
fldln2
jge
pusha
in
ficomp
leave
inc
xor
add
add
lods
pop
sub
add
or
ret
dec
outs
inc
adc
js
adc
and
(bad)
pusha
add
fsub
xchg
movs
inc
ror
xchg
inc
int
dec
fstp
mov
ins
lea
inc
adc
punpcklwd
inc
adc
(bad)
ret
add
mov
jne
enter
out
adc
mov
fild
out
or
pop
lock
nop
or
adc
mov
push
or
popf
xor
sti
mov
inc
fsubr
lds
sbb
xchg
and
pop
nop
jge
(bad)
dec
loopne
mov
cmp
xchg
mov
adc
out
dec
xchg
and
dec
xor
add
inc
push
dec
jo
adc
aas
es
clc
xchg
pop
(bad)
cmp
in
mov
dec
adc
add
mov
and
arpl
add
add
or
and
and
mov
xchg
(bad)
and
add
adc
ror
add
cwde
add
inc
jg
adc
xchg
mov
xbegin
jp
call
inc
dec
add
lahf
xchg
bound
cmp
fwait
xor
mov
ja
cmps
sbb
xor
xor
pop
call
mov
inc
or
icebp
adc
push
sub
and
dec
push
sbb
inc
push
cmp
cmp
pop
jmp
lahf
int3
stos
mov
push
jns
cmc
imul
(bad)
jle
mov
mov
fimul
jl
inc
test
out
add
retf
or
pop
inc
pop
sbb
call
fisub
inc
inc
pop
sub
scas
mov
xor
sub
and
imul
xor
push
xor
adc
imul
add
imul
mov
jge
add
pop
mov
into
test
add
dec
sbb
outs
or
add
repz
push
lock
and
mov
xlat
push
jne
dec
retf
sbb
bound
(bad)
fbstp
in
pop
ror
(bad)
mov
nop
rol
adc
mov
fimul
fbstp
out
or
or
stos
adc
xchg
inc
into
loopne
inc
pop
jo
mov
pop
sub
cs
ror
loope
enter
adc
rol
mov
xchg
cmp
xor
push
add
add
sar
push
cmp
inc
push
add
adc
push
sbb
xchg
push
mov
or
adc
mov
aas
sub
inc
sbb
movs
cwde
jmp
sti
xor
loop
out
sbb
inc
or
aaa
mov
jg
jbe
mov
test
or
push
adc
fdiv
sub
cwde
adc
ins
loope
xor
add
fadd
stc
scas
push
push
jae
mov
and
out
aaa
adc
cmc
jnp
loope
xor
mov
sub
pop
gs
lea
div
adc
(bad)
and
arpl
arpl
jmp
cmp
jb
xor
and
push
adc
pop
lods
dec
data16
inc
mov
retf
stos
cmp
sub
int
sbb
mov
ins
add
or
or
fild
ss
lds
in
fwait
pop
xor
xchg
inc
or
loope
dec
nop
add
div
enter
and
enter
add
add
neg
enter
add
outs
push
int3
push
jg
add
add
add
mov
inc
xor
in
adc
add
add
in
dec
xor
mov
rcr
mov
enter
inc
inc
jb
popa
jns
lea
inc
das
les
icebp
mov
(bad)
inc
sbb
inc
inc
nop
dec
jmp
and
and
in
inc
inc
adc
fldenv
in
adc
push
test
inc
cmps
mov
or
les
inc
push
inc
push
add
mov
mov
push
mov
and
mov
jbe
jbe
or
pop
mov
xchg
in
mov
add
bound
jno
sub
add
pushf
movs
add
inc
add
mov
xor
mov
aaa
ins
imul
and
jl
xor
push
push
dec
lods
jb
out
(bad)
fdiv
sub
cmp
pop
in
test
mov
mov
jne
add
iret
jb
sti
add
pop
or
sbb
and
push
aaa
dec
(bad)
cmp
add
or
jp
popa
imul
or
dec
imul
inc
cs
sbb
fwait
push
or
repz
and
out
pushf
lea
mov
shl
xor
pop
sbb
fcmovnbe
sbb
dec
movs
out
retf
inc
cwde
adc
add
mov
push
mov
(bad)
xor
out
inc
xor
adc
fsub
fs
pop
jmp
jmp
push
sub
sub
mov
mov
pusha
aaa
shl
sub
repnz
add
or
clc
jno
push
data16
fdiv
fsubr
inc
add
test
xor
lds
or
dec
gs
push
push
mov
pop
adc
push
push
adc
inc
les
iret
dec
cs
pop
dec
enter
rcl
lock
mov
xchg
movs
adc
cmp
movs
les
xchg
dec
and
push
add
clc
and
popa
sbb
mov
sub
dec
pop
shr
pop
mov
pop
pop
jne
cmps
mov
pop
jl
or
inc
sbb
push
popf
or
ret
and
mov
add
nop
add
add
inc
sbb
jmp
or
pusha
add
push
or
(bad)
call
pop
lahf
cmps
and
pop
call
rol
ret
pop
dec
test
or
or
jg
rol
and
stos
cmps
(bad)
or
jbe
xchg
xchg
lods
movs
loop
and
xor
sub
rol
in
dec
and
mov
adc
dec
enter
or
in
enter
jmp
fstp
call
(bad)
into
fwait
ins
mov
push
sub
mov
das
les
cmp
adc
cmp
push
add
mov
adc
push
add
mov
lahf
or
push
dec
push
adc
loop
adc
add
and
and
adc
sub
or
adc
dec
outs
xor
cmp
das
sub
xchg
cli
lock
inc
push
popf
dec
inc
jecxz
pushf
clc
sbb
or
cmc
add
aaa
push
sbb
clc
add
loope
shr
loope
jo
and
push
sub
out
xchg
xchg
fisttp
inc
pshufw
jae
jb
cmp
movs
xor
je
pop
or
pop
and
out
dec
fdivr
mov
xchg
(bad)
imul
push
fisubr
push
or
xchg
daa
and
dec
pop
dec
gs
xchg
sbb
lea
pop
add
pop
and
aas
jbe
adc
inc
data16
mov
or
cs
inc
neg
inc
inc
inc
xchg
int
or
out
or
pop
jmp
adc
shr
dec
jg
ret
xchg
inc
dec
mov
cmps
or
int
mov
lock
add
bound
lock
adc
adc
and
shl
(bad)
fadd
push
sub
or
imul
call
pushf
(bad)
inc
push
icebp
xchg
pop
daa
mov
fdivr
inc
pusha
fwait
add
mov
xchg
dec
mov
inc
add
rcr
cmp
movs
add
add
je
test
jecxz
pop
test
add
pop
sub
adc
iret
xchg
jae
dec
add
dec
repnz
xlat
jne
sub
jp
cmc
in
xor
popf
sldt
pop
dec
add
or
sub
add
jnp
inc
xchg
shr
stos
ins
ss
sbb
pusha
sar
jecxz
mov
cmp
scas
mov
les
sbb
or
mov
dec
pusha
aas
and
inc
mov
jle
aaa
arpl
adc
inc
movs
js
mov
sub
dec
add
pop
aas
inc
ins
inc
loopne
pop
inc
jae
and
fcomp
test
add
iret
arpl
rol
push
add
add
inc
je
cwde
adc
pop
add
push
icebp
in
add
mov
push
hlt
pop
stos
int3
sbb
movs
sbb
das
or
inc
mov
or
push
sbb
nop
hlt
jg
ins
fisttp
push
ret
imul
stc
push
pop
pushf
add
fdivr
fbstp
cmp
daa
or
cmp
lods
push
test
cmp
add
pusha
mov
xor
inc
clc
xor
js
cmp
cs
push
or
jge
cmp
dec
out
les
push
cmp
rcr
loopne
cmp
or
loopne
test
adc
sub
fdivr
data16
cs
pop
jnp
sbb
lds
aas
xchg
jno
in
or
mov
add
sub
cmovbe
xchg
hlt
xor
and
xor
mov
mov
in
adc
ss
push
xor
ins
shl
lods
sbb
dec
popa
jns
pop
rcl
adc
mov
mov
sbb
add
sti
cmp
repnz
jecxz
test
and
fidiv
add
es
or
clc
add
mov
cmp
mov
or
dec
sub
xor
ror
mov
pop
sub
or
in
push
add
out
mov
jbe
gs
and
mov
mov
sbb
outs
pop
pop
rol
sbb
cwde
js
adc
adc
or
movs
(bad)
add
mov
jmp
dec
out
dec
sbb
adc
xor
xchg
bound
call
(bad)
cmp
mov
and
inc
sbb
add
push
mov
outs
stc
in
gs
test
clc
pusha
ins
fs
add
test
call
das
sbb
push
scas
or
mov
push
mov
adc
mov
cli
push
pusha
mov
or
jbe
das
mov
int3
fdivr
push
inc
repnz
adc
mov
cs
push
rcr
xor
push
dec
inc
adc
push
sahf
mov
adc
popf
out
addr16
push
and
jo
mov
pop
rcr
cmp
add
in
and
xchg
test
jb
jns
mov
mov
adc
add
sti
pop
hlt
pop
dec
inc
cmc
ucomiss
inc
jae
cld
xchg
mov
call
bndstx
and
sbb
add
das
adc
in
xor
in
cmp
movs
xor
dec
pop
pusha
mov
dec
(bad)
adc
rol
mov
dec
test
xchg
or
fs
xor
out
or
nop
out
pop
les
cmp
out
adc
jg
or
pushf
push
jecxz
arpl
mov
sbb
addr16
inc
and
frstor
mov
test
outs
adc
test
mov
add
mov
add
ror
push
test
addr16
in
add
pop
xchg
inc
loopne
fs
(bad)
adc
ins
jg
jns
pusha
scas
adc
adc
mov
mov
pop
daa
xor
aas
call
adc
iret
xchg
mov
adc
or
pop
psubd
mov
mov
aad
add
cmp
mov
pushf
sbb
jmp
pop
add
xchg
mov
push
adc
popf
add
(bad)
jmp
call
imul
add
jae
rcr
mov
add
test
jae
mov
pop
mov
push
sti
pusha
clc
or
clc
add
dec
aam
in
movs
das
mov
pusha
out
cld
push
repnz
inc
add
add
add
out
pop
repnz
add
add
and
pop
pop
mov
ret
jns
adc
add
pushf
pop
das
add
adc
add
xchg
add
pop
adc
xchg
jae
pop
xor
jmp
mov
push
mov
or
arpl
scas
push
mov
add
pop
lods
mov
mov
mov
pushf
dec
cmp
pusha
fld
mov
cmp
xchg
push
test
das
dec
xor
xor
in
jne
in
inc
push
xchg
adc
sbb
dec
xor
ud1
inc
xchg
cmp
daa
fs
in
cmp
xchg
xor
xor
push
and
xor
sub
add
mov
and
pop
das
ss
das
sbb
imul
mov
push
fld
sbb
mov
test
(bad)
add
cwde
push
lds
push
sub
add
les
inc
in
(bad)
inc
setp
push
ret
push
pop
add
jnp
cmp
das
nop
push
pop
inc
xchg
and
push
aas
mov
add
or
add
mov
or
or
inc
push
mov
ins
sub
add
adc
push
dec
inc
mov
inc
dec
sub
cmp
inc
rcr
mov
adc
sbb
add
outs
adc
push
in
add
dec
jo
xchg
push
and
mov
scas
inc
or
and
retf
shl
ins
xchg
add
pop
add
add
ss
pop
pop
daa
or
mov
(bad)
out
mov
or
dec
jne
cld
and
add
mov
mov
jecxz
(bad)
fimul
mov
jmp
lods
add
pusha
and
ror
sbb
sar
cmp
inc
cld
push
dec
sub
or
push
in
or
stos
xor
push
sbb
gs
add
or
mov
cwde
or
(bad)
loop
fst
or
sub
iret
js
mov
lods
popa
cmps
add
mov
cmps
xor
adc
xor
jg
imul
cmp
add
jmp
adc
ror
pop
adc
sub
add
jmp
sbb
loope
xchg
outs
mov
es
dec
xor
or
inc
sbb
sub
ja
inc
cmp
pusha
cmp
adc
fsubr
inc
or
rol
leave
clc
sbb
pop
test
sbb
xor
aam
jp
test
popf
rcr
out
pop
inc
shl
(bad)
mov
or
or
mov
xchg
pusha
or
cwde
adc
push
jmp
ror
pop
sub
cmp
or
cmp
rsqrtps
rol
jne
les
pop
add
ja
out
jnp
xor
ret
add
sbb
sub
add
sbb
popf
sub
cld
xchg
les
and
sub
add
inc
inc
icebp
(bad)
clc
or
inc
push
sbb
(bad)
push
rcr
or
in
cwde
setle
inc
inc
aaa
add
push
inc
es
ror
sar
(bad)
lods
and
dec
pop
dec
xchg
and
out
cmp
frstor
in
adc
(bad)
adc
jg
inc
dec
sbb
and
adc
pusha
fucom
pop
cmp
mov
jg
pop
loopne
add
sahf
out
and
(bad)
sbb
cmovbe
mov
adc
sub
in
adc
xchg
cmova
or
call
(bad)
call
(bad)
icebp
xchg
mov
lock
dec
adc
cmp
cvtps2pd
rol
mov
sbb
fild
xor
mov
sub
add
pushf
fisttp
adc
add
ret
leave
rol
push
jno
pop
xor
mov
retf
add
sbb
push
in
mov
outs
or
inc
xchg
popf
cmp
mov
dec
imul
sub
or
mov
mov
push
cmp
loopne
shl
pop
or
sqrtps
xor
call
mov
add
imul
cli
pop
xchg
pop
jle
and
jae
stc
and
call
shr
stc
ins
or
xlat
dec
dec
inc
inc
push
or
mov
push
inc
push
dec
or
test
call
add
mov
scas
xlat
icebp
or
cmp
add
and
push
mov
movs
int3
sub
push
inc
ret
inc
jmp
shl
pop
or
mov
sbb
out
sbb
and
sub
out
sahf
fmul
mov
push
mov
rcr
pop
ret
fsubr
jbe
mov
mov
push
aam
mov
pop
inc
aam
pop
push
pop
adc
lahf
inc
add
je
adc
sub
sbb
sbb
xor
movs
sub
jmp
or
sub
(bad)
cmp
out
fcmovnb
xor
add
ret
mov
imul
inc
and
aas
sub
sub
icebp
xchg
sub
pop
mov
adc
sar
ins
and
rol
sbb
test
int3
aas
aas
mov
inc
ja
nop
arpl
jno
int3
sbb
jb
mov
xchg
arpl
outs
cs
lock
mov
imul
cmp
pop
jl
das
fst
jne
movs
add
ins
cmps
xchg
adc
push
imul
cmp
mov
jmp
dec
test
add
add
inc
cld
push
xchg
iret
and
and
ins
fnsetpm(287
stc
leave
mov
enter
aad
add
in
call
out
push
dec
(bad)
(bad)
aad
call
in
in
sbb
and
mov
add
shl
mov
pop
mov
aad
fst
mov
in
sub
dec
cmps
aad
jns
pop
sti
push
imul
push
inc
aad
call
call
cmp
bound
dec
leave
mov
mov
shl
sbb
or
xor
sbb
add
adc
xor
inc
js
or
lea
movs
(bad)
add
sbb
lahf
xchg
cmp
mov
or
add
and
fadd
je
clc
cdq
add
cmp
or
retw
or
ret
enter
push
jo
outs
call
sub
pop
add
adc
sbb
xor
xor
dec
jne
adc
mov
jae
mov
test
xor
call
sbb
xor
xchg
scas
adc
pop
xchg
sbb
cmp
inc
and
iret
shl
adc
repz
mov
sub
push
ret
xchg
push
jmp
clc
and
push
sub
data16
or
and
add
inc
sbb
cmovo
loopne
or
test
inc
add
xchg
mov
imul
mov
(bad)
(bad)
inc
das
clc
repz
inc
mov
popa
jecxz
icebp
aad
and
mov
mov
(bad)
jp
and
jmp
lods
jno
hlt
lock
pop
and
mov
nop
mov
inc
bound
sbb
outs
ror
jmp
cmp
dec
pop
adc
push
pushf
or
jns
push
pusha
mov
add
jo
pop
dec
cld
test
or
jno
or
test
(bad)
cmps
(bad)
push
sbb
add
xchg
sub
or
mov
mov
outs
int
enter
stc
mov
shl
sti
push
cmovo
or
fcomp
push
or
jne
scas
js
ret
ret
cmp
je
test
jnp
adc
ja
pop
or
cmp
and
push
(bad)
ins
jne
test
mov
pusha
rcl
and
sub
mov
lods
adc
rol
cmp
push
mov
cmp
jbe
gs
jb
add
aam
movhps
lds
ror
cmp
aam
push
sbb
push
pushf
fild
jecxz
fstp
sbb
jg
sub
test
call
je
aam
add
int
add
(bad)
mov
or
test
in
pop
lods
aas
fisub
mov
pop
loop
jnp
scas
das
sbb
sbb
sahf
sbb
jno
mov
loope
adc
imul
cmp
xor
mov
cdq
and
das
xchg
add
push
inc
xchg
push
enter
imul
push
inc
icebp
repnz
es
sub
and
and
movs
add
scas
xor
pop
cmps
retf
fcom
xor
cmp
xor
call
pop
inc
(bad)
popa
or
mov
rol
das
fmul
pop
arpl
ins
sbb
stos
adc
add
enter
add
shl
fwait
and
and
cwde
clc
adc
ret
and
hlt
mov
mov
adc
xchg
xchg
push
iret
push
pop
clc
xor
aaa
lds
rol
add
(bad)
push
mov
sbb
adc
into
retf
or
push
xchg
sub
inc
xor
lock
add
or
jg
aas
lods
xor
pop
loop
rol
inc
scas
sbb
or
pop
cld
test
ror
cld
(bad)
cmp
pop
adc
mul
mov
lahf
fs
inc
lods
mov
ins
jl
push
retf
and
jo
mov
xor
xchg
and
inc
mov
add
arpl
xchg
sbb
mov
and
test
cmps
jmp
inc
pusha
sbb
arpl
pop
jmp
and
cmps
popa
or
pop
and
push
ins
mov
daa
mov
mov
pop
or
dec
mov
pop
mov
std
mov
xor
sahf
inc
rcl
add
daa
dec
dec
outs
aaa
rcr
add
mov
cmps
dec
ins
xor
push
cwde
rcl
add
push
les
jp
aam
jmp
mov
fdiv
outs
sbb
mov
rcl
arpl
inc
jno
and
daa
std
mov
jb
inc
cmps
adc
inc
mov
pop
nop
or
sub
and
sbb
and
pop
push
dec
jne
daa
cwde
mov
xchg
mov
pop
lods
lods
xchg
test
sub
dec
push
and
js
shr
mov
pop
adc
xor
out
and
dec
add
inc
scas
(bad)
movs
aaa
mov
cmc
mov
push
stc
ja
lock
cld
xor
add
mov
pop
dec
call
(bad)
cmp
xlat
jae
jb
push
js
cmp
xor
mov
xchg
lods
mov
xor
pusha
lds
(bad)
out
pop
scas
gs
jne
rcr
arpl
cs
fsubr
js
mov
pop
cmp
jge
test
mov
inc
outs
or
pop
jmp
or
sub
add
ins
int
jmp
add
jbe
mov
jp
lock
mov
inc
cmp
xchg
add
adc
add
and
repz
dec
les
jne
jg
sub
ret
or
mov
inc
push
push
mov
das
xchg
mov
adc
push
mov
pop
sbb
pushf
or
pop
mov
mov
sahf
loopne
push
mov
enter
sysexit
cmc
sahf
in
mov
dec
sbb
ret
jge
leave
rol
xchg
mov
popf
mov
frstor
sbb
aas
add
sbb
add
push
sar
fadd
xor
jo
imul
push
das
inc
(bad)
mov
in
stos
xchg
into
fld
fist
sbb
(bad)
dec
lea
mov
dec
ror
sub
leave
push
push
cmps
pop
mov
cmp
sbb
jle
sub
movs
mov
adc
sub
enter
and
ror
xchg
sub
in
mov
sbb
push
shl
dec
js
push
push
mov
sub
and
xchg
mov
pop
pop
dec
and
push
adc
mov
je
sbb
and
sub
fdivr
adc
adc
pusha
xor
mov
movs
add
add
pop
pop
pop
inc
fcomp
mov
or
outs
fistp
adc
mov
pop
pop
jbe
pop
and
jle
jmp
and
and
add
out
mov
sbb
pusha
or
rol
ret
add
add
push
xchg
pop
aad
lock
push
gs
lea
out
fnsave
or
add
or
inc
and
outs
imul
or
cmp
adc
sbb
inc
adc
sbb
jg
pusha
loopne
sbb
int3
push
inc
js
test
xor
add
xor
xor
shr
push
fdiv
iret
in
idiv
jmp
sub
mov
lea
loopne
inc
xchg
add
inc
or
inc
dec
xchg
or
or
and
mov
pop
add
cwde
and
(bad)
inc
sbb
add
xlat
inc
shl
fsub
jecxz
ret
mov
stos
xchg
rcr
mov
test
adc
xchg
adc
pop
pop
aaa
xchg
add
add
pop
scas
sub
pop
idiv
into
add
or
pop
xlat
pop
aad
sbb
pusha
ja
cmp
add
pop
iret
push
push
adc
sbb
and
adc
jecxz
rol
verw
(bad)
fmul
test
sbb
sub
jmp
and
cmp
pop
fld
jle
inc
jnp
push
lds
xchg
mov
inc
mov
push
or
sub
xlat
adc
es
sub
mov
xchg
cs
aas
mov
aaa
mov
bnd
xlat
cmp
popa
shr
pop
or
xchg
inc
push
add
dec
mov
pop
(bad)
pop
jg
inc
sbb
ss
rol
inc
mov
je
nop
xor
pop
sbb
xchg
mov
fnstcw
mov
test
imul
(bad)
movs
add
add
lea
push
pcmpeqw
aam
ret
sub
xor
nop
mov
xor
and
add
add
loope
lahf
add
sub
xor
or
add
pushf
sub
pop
ret
scas
sar
stos
sbb
cmp
add
adc
nop
mov
cld
inc
(bad)
add
add
sti
mov
or
jo
adc
or
mov
ret
dec
sbb
xor
sub
jae
sti
or
pop
push
cld
stc
mov
sub
adc
push
pop
mov
add
pop
ret
ret
(bad)
lock
daa
pop
shl
lods
sbb
dec
xchg
sbb
xor
jne
loope
xor
sub
xor
(bad)
mov
adc
inc
mov
stos
xchg
cmc
outs
popa
sbb
jo
inc
daa
shl
jns
xchg
je
inc
out
sti
nop
(bad)
(bad)
cs
mov
cdq
xchg
xor
lods
mov
jbe
mov
leave
pop
jmp
gs
mov
cmp
jl
loopne
add
js
adc
jae
mov
cmps
sub
mov
ss
loopne
dec
push
ja
inc
arpl
fadd
push
daa
mov
pop
outs
lods
loop
jno
aaa
xor
rol
sbb
dec
sub
lock
jbe
push
cmp
(bad)
jo
cmp
add
leave
or
and
adc
jns
vmwrite
adc
adc
dec
push
enter
inc
add
in
and
sub
adc
test
sbb
adc
push
ret
jecxz
jo
mov
daa
jb
sub
and
sub
es
adc
sub
clc
dec
cmp
lahf
xor
xor
addr16
mov
cmp
cmp
inc
add
add
push
lods
or
sbb
sub
rol
rol
xchg
ja
adc
cmp
dec
ja
jg
mov
popf
aad
pop
rol
sub
xchg
cmp
mov
retf
in
xor
sub
(bad)
xlat
cmps
xor
lahf
rcl
mov
sbb
push
mov
mov
xchg
adc
popf
fdivr
rcl
and
xchg
sti
mov
push
mov
sbb
xor
cs
and
dec
or
rol
xlat
fs
or
sbb
xor
jo
add
pop
and
pop
sbb
pop
xchg
jmp
cmp
sbb
push
push
adc
or
stos
mov
dec
in
into
aaa
and
add
sbb
dec
daa
xchg
push
inc
or
pop
mov
jne
test
jns
or
lock
ficom
in
xchg
or
iret
cmp
add
inc
inc
pop
sbb
jne
arpl
mov
mov
dec
fmul
and
js
jne
cmp
add
add
or
mov
dec
add
outs
pop
xchg
xor
test
ret
and
mov
pop
(bad)
push
lods
jmp
jle
test
jb
adc
mov
cwde
push
add
add
add
das
mov
push
mov
mov
inc
rol
das
(bad)
jo
cmp
ins
or
xlat
sbb
call
inc
sbb
add
or
add
inc
jnp
push
scas
xchg
clc
jl
pusha
adc
movs
or
push
gs
and
pop
pusha
test
pop
push
and
and
int
aas
iret
hlt
mov
xor
imul
or
in
pop
xor
lock
jb
mov
push
adc
add
movs
mov
inc
sbb
xor
mov
adc
popf
imul
dec
aas
sbb
push
nop
loopne
push
ins
scas
jmp
adc
movs
ds
add
mov
leave
and
add
push
mov
or
aas
xchg
add
int3
mov
test
pop
sub
in
and
test
dec
adc
hlt
adc
xor
dec
xor
lea
xor
push
and
cmc
das
(bad)
push
cmp
dec
cmp
popa
dec
push
or
xor
inc
push
outs
xchg
inc
dec
inc
push
std
or
ror
mov
leave
je
mov
inc
mov
test
sub
adc
add
or
add
push
push
push
loop
add
cwde
jo
xchg
push
push
pop
pop
dec
fild
inc
leave
cmp
jne
pop
add
daa
in
or
mov
je
dec
paddd
mov
cmpxchg
inc
adc
sub
and
mov
(bad)
sbb
pop
fsubr
dec
in
les
call
pop
loopne
ret
fidiv
shl
push
push
xchg
imul
popf
jmp
mov
stos
mov
cs
outs
(bad)
xor
push
call
or
ret
pop
push
fcomp
xor
sub
ret
out
inc
rol
pop
cmp
cmp
jo
and
and
pop
test
add
loope
inc
add
ror
push
std
push
or
and
mov
mov
jb
shl
pop
lds
adc
test
pop
gs
mov
add
mov
and
add
int3
push
mov
test
add
add
push
push
lock
adc
out
add
add
dec
adc
dec
test
sahf
loopne
push
gs
fisttp
inc
jmp
sahf
out
sahf
jp
bound
outs
pop
push
jb
pop
fidiv
xor
push
dec
lds
jecxz
inc
lahf
xor
and
psrad
ins
mov
cli
mov
stc
sbb
jg
hlt
mov
movs
or
or
add
sub
cs
(bad)
sahf
int3
sbb
cmp
dec
sbb
pop
not
push
push
and
pop
xchg
maxps
sub
cmp
in
mov
fsubr
mov
call
daa
xchg
call
adc
adc
and
shl
mov
dec
sub
push
add
ffreep
aaa
loopne
dec
cwde
mov
leave
dec
add
in
xchg
mov
or
pop
pop
fadd
rcl
mov
shl
push
pushf
jmp
jp
xchg
cmps
inc
inc
cmps
or
mov
push
fsubr
jo
shl
mov
inc
xchg
shl
cmp
mov
mov
cmp
dec
add
stos
dec
(bad)
mov
mov
jnp
js
mov
or
add
sub
add
das
and
outs
mov
mov
lahf
adc
lea
dec
mov
sbb
lea
outs
push
nop
cmp
cmp
push
sub
jl
lea
test
mov
les
enter
push
and
mov
lea
mov
movs
adc
mov
xchg
jmp
outs
xor
cmp
je
or
je
push
loopne
cmc
das
pop
mov
pop
scas
hlt
ret
sub
push
cld
fld
nop
mov
lods
sbb
retw
jno
add
pusha
(bad)
fistp
add
sub
cmp
jl
jmp
xlat
ret
cmp
mov
jmp
dec
push
dec
imul
daa
jmp
jno
sbb
shl
rcl
inc
and
or
jne
addr16
jne
stc
adc
pop
or
outs
pushf
or
cmp
xchg
aas
add
outs
add
leave
mov
pushf
push
mov
sub
xor
fld
cmp
xor
push
lea
sbb
adc
jb
outs
out
xchg
or
adc
test
out
mov
cmp
(bad)
push
mov
mov
inc
les
leave
mov
inc
add
inc
cmp
push
push
mov
mov
dec
adc
add
push
xor
mov
(bad)
sbb
xchg
mov
push
adc
je
add
sbb
inc
mov
js
or
push
adc
ja
ror
enter
fs
adc
and
into
sbb
adc
adc
mov
int3
cmps
mov
dec
push
bound
or
arpl
(bad)
icebp
jo
jp
cmp
mov
pop
bound
dec
pop
mov
jp
and
std
mov
jb
push
movzx
inc
test
sub
sbb
test
or
add
mov
pop
inc
inc
dec
jne
jns
mov
sub
ins
push
sub
adc
and
add
pop
xor
sbb
sbb
push
outs
dec
cmp
mov
or
jns
dec
inc
cmp
xor
jb
inc
push
dec
xchg
lea
test
sub
nop
daa
rcr
inc
push
xor
xchg
adc
ret
imul
xchg
sbb
movs
enter
push
repnz
or
ret
imul
add
enter
out
mov
pushf
dec
pop
cmp
cmp
jns
dec
out
dec
loopne
nop
push
jo
jo
inc
push
ret
or
push
ja
jb
in
repnz
sbb
push
or
add
push
push
sub
in
mov
mov
push
xor
pop
repnz
xchg
jl
mov
add
push
and
or
sub
out
lock
or
add
cmps
(bad)
xor
add
cmp
inc
rcr
sbb
inc
in
in
in
cld
shl
push
adc
sub
inc
inc
popf
inc
push
add
xor
mov
cmp
add
xor
fcom
fsubr
jo
mov
shl
nop
mov
mov
inc
sbb
mov
adc
or
mov
adc
and
cmp
add
fcom
mov
gs
sbb
add
adc
adc
adc
sbb
or
shl
cmp
inc
adc
call
test
mov
outs
loopne
adc
js
retf
add
ret
je
and
je
jo
jmp
adc
and
or
mov
inc
mov
cmp
inc
(bad)
mov
cmps
mov
sub
mov
xor
sbb
xchg
push
mov
mov
adc
and
mov
mov
adc
pop
out
sub
dec
fcomp
mov
pop
int3
(bad)
sbb
inc
cmp
pop
mov
js
ret
not
das
add
cs
fild
loope
stc
push
adc
ins
push
mov
test
outs
jae
sbb
addr16
push
test
hlt
jmp
sub
aaa
or
and
inc
cld
jo
jnp
add
cmps
mov
push
sbb
rcr
fadd
mov
test
xchg
pop
pop
ja
and
leave
add
arpl
les
imul
ja
(bad)
and
push
push
adc
or
adc
imul
sbb
aaa
xor
and
cs
les
loopne
wbinvd
cli
lods
or
iret
ror
mov
test
push
or
adc
or
outs
sub
xor
and
or
lea
sbb
jl
mov
adc
mov
adc
mov
mov
test
pop
and
fwait
or
add
std
fidiv
or
cmp
sahf
retf
or
sbb
xor
cmp
sub
cmp
div
leave
push
fsubr
fwait
mov
push
push
cmp
outs
rcr
push
push
cmps
pop
dec
sub
imul
inc
test
pop
xor
or
repnz
or
jg
rcl
push
cs
sub
push
sbb
jns
aam
dec
cmps
push
or
and
mov
add
stos
xchg
push
sti
sti
and
xchg
inc
and
sub
mov
out
aas
mov
pop
out
je
mov
arpl
in
cld
fist
popf
js
inc
test
push
scas
adc
or
add
pusha
das
pop
cmp
ins
sub
xchg
js
inc
xchg
add
mov
inc
dec
jge
test
dec
fcomp
sbb
fstp
outs
ja
fld
loopne
pop
fcomp
mov
xchg
or
push
jmp
dec
pop
adc
xchg
js
cmp
mov
or
mov
add
fild
sub
sbb
iret
fdivr
je
xchg
pop
sbb
add
sbb
je
jbe
popa
bound
add
push
add
scas
stc
adc
adc
or
test
js
lock
gs
test
cmp
jle
mov
movs
or
fld
fild
loopne
sub
and
push
loopne
sub
mov
call
or
fld
inc
popa
outs
inc
call
push
mov
mov
sub
pop
inc
add
adc
inc
loope
dec
fwait
cmp
add
jl
sbb
add
push
imul
ins
add
call
lea
xor
sti
out
pop
popf
jmp
push
and
add
inc
hlt
lods
pop
pop
pop
lock
add
cmp
jo
xchg
push
pop
and
arpl
sar
xor
(bad)
ins
push
ja
fs
out
add
pop
pop
mov
add
push
sbb
adc
mov
fild
das
movs
andps
pop
push
xor
or
das
jo
je
in
lods
pop
mov
xchg
or
pop
daa
nop
adc
das
xchg
cmp
jmp
scas
pop
add
dec
sub
lock
push
inc
xor
and
pop
nop
pop
sub
fs
(bad)
data16
mov
sbb
(bad)
pusha
mov
xor
call
iret
xor
adc
or
sbb
rcr
inc
movs
xor
pusha
pusha
cmp
push
out
pusha
pusha
adc
dec
adc
data16
pop
xor
test
push
jbe
xor
add
clc
add
retf
fadd
adc
fdiv
popa
loop
xor
push
add
lock
lods
add
cmps
pop
jno
shl
imul
sbb
(bad)
cmp
mov
pop
jb
sbb
rcr
push
add
nop
ret
ret
aas
sti
mov
push
push
sbb
sbb
pop
and
add
lahf
stc
and
cli
in
cs
sub
xor
cmps
add
inc
add
test
and
or
mov
jb
mov
xchg
rol
sub
xchg
or
add
scas
or
or
leave
mov
xor
push
or
xor
shl
cwde
mov
xor
mov
ror
sbb
jo
and
(bad)
loopne
je
adc
aad
aas
hlt
mov
or
cdq
cmp
lea
arpl
push
lock
xor
rcr
or
cld
mov
mov
in
lods
jge
lds
int3
out
add
or
cs
sub
push
ret
mov
xchg
in
clc
pop
push
jl
adc
mov
mov
pusha
fcomp
inc
cmp
loope
mov
inc
adc
and
stos
and
and
(bad)
nop
adc
jne
test
sbb
mov
(bad)
push
movs
ins
add
daa
loope
movs
rcr
jae
mov
add
cmp
sbb
xchg
and
add
ret
mov
dec
hlt
inc
sub
and
pop
nop
pusha
rcl
ret
inc
xchg
adc
jnp
inc
bound
xor
push
mov
push
inc
and
lock
dec
sbb
les
call
push
cmp
cli
push
push
add
or
add
clc
sbb
pop
pusha
mov
ret
fist
push
and
mov
invlpg
jbe
rcl
inc
jns
xor
adc
sbb
xor
pushw
mov
cmp
test
dec
mov
inc
adc
mov
pop
adc
addr16
adc
or
push
sbb
test
(bad)
outs
xchg
idiv
ins
push
loopne
cs
scas
jo
add
inc
add
inc
push
je
inc
cld
mov
push
xor
add
xor
(bad)
sbb
addr16
sti
test
les
and
loope
xor
mov
adc
pop
add
push
test
repz
pop
sbb
data16
jns
fwait
xchg
push
movs
mov
outs
ret
bndldx
cmps
jo
jae
das
add
movs
push
fcom
mov
dec
cmp
mov
add
call
aam
push
sbb
dec
pop
or
inc
add
fiadd
push
sbb
fisttp
mov
jo
hlt
add
sub
push
mov
add
rcr
adc
push
mov
fidiv
and
or
dec
imul
add
das
add
xor
mov
(bad)
mov
adc
jne
(bad)
inc
push
lds
(bad)
and
xor
add
clc
add
mov
hlt
push
push
(bad)
and
cmp
lds
inc
add
pop
xor
xchg
addr16
aam
ret
and
(bad)
xor
mov
iret
outs
sub
outs
ret
add
xor
adc
add
adc
dec
div
dec
fidivr
(bad)
or
and
or
test
cdq
jns
pop
add
data16
(bad)
and
inc
lds
or
add
shl
(bad)
dec
test
xchg
(bad)
or
cmp
jns
adc
xchg
(bad)
or
ud2
es
sub
test
imul
jae
push
and
jmp
outs
cmp
adc
xor
and
add
xor
iret
loope
inc
xchg
cmp
inc
scas
ins
in
iret
sbb
nop
and
or
dec
or
inc
mov
mov
sbb
or
inc
cmp
test
xor
add
pop
xor
pop
addr16
test
lods
sub
ror
lods
mov
mov
les
adc
sti
pop
icebp
jmp
adc
aad
adc
push
push
add
pop
sbb
pop
xchg
add
sub
push
mov
ror
fild
mov
test
jno
lock
aam
inc
or
cmp
jle
lock
jg
mov
nop
out
in
neg
add
inc
jne
mov
sar
pop
sahf
sbb
scas
or
mov
cmp
xor
(bad)
adc
loopne
push
fnstcw
mov
add
daa
shrd
shr
push
rol
jl
shr
les
cmp
xlat
adc
js
inc
sub
adc
shl
cs
outs
shr
mov
test
lahf
or
add
dec
sbb
out
test
mov
sbb
jne
adc
and
daa
in
nop
adc
pushf
inc
outs
shl
pop
and
mov
mov
jbe
mov
add
sbb
add
jecxz
xor
xchg
or
in
sbb
cwde
adc
sub
imul
mov
mov
(bad)
mov
neg
mov
pop
and
mul
test
jbe
ficom
sub
push
lods
pop
mov
div
cmp
div
mov
imul
shl
cmp
neg
adc
enter
int3
jge
into
vshufps
ja
pop
movs
cmp
add
cmp
mov
or
(bad)
(bad)
sbb
cmp
out
jecxz
(bad)
neg
xchg
imul
in
mov
idiv
in
mul
xchg
(bad)
adc
cwde
cld
not
mov
test
or
inc
sti
xchg
cwde
or
not
sbb
adc
add
iret
mov
mov
or
retf
ret
(bad)
cmp
jmp
pop
movs
ins
leave
cmp
out
lds
dec
and
(bad)
mov
cmp
out
xor
pop
mov
shr
xor
mov
mov
ror
fadd
mov
inc
out
inc
out
mov
sbb
mov
not
or
xchg
cwde
sbb
cmp
xchg
fidivr
cmp
jne
pop
cmp
ja
ds
cmp
xchg
pop
pop
cmp
add
div
test
neg
jnp
mov
mul
mov
neg
mov
mov
adc
mov
sti
pop
mov
adc
add
cld
inc
das
dec
push
dec
dec
push
push
push
call
pop
nop
mov
shl
or
pop
dec
scas
mov
(bad)
jle
push
jo
popa
or
ret
sub
adc
jmp
out
add
aas
push
ror
loopne
adc
mov
add
test
pop
pop
and
adc
xor
cmp
movs
movs
fild
pop
mov
shl
and
mov
push
add
retf
or
es
loop
and
inc
add
add
ror
add
push
add
add
mov
push
add
call
or
idiv
addr16
push
jmp
jnp
int
add
push
sub
add
push
jge
jno
fst
push
rol
or
add
lahf
add
sub
pusha
dec
je
or
sti
xchg
(bad)
aam
inc
cmp
or
imul
xor
ins
push
fadd
fcomp
xor
(bad)
push
mov
pop
pop
shr
lds
push
push
cs
mov
aas
hlt
inc
ja
xor
shl
ds
lds
pop
fst
aaa
jae
test
sbb
cwde
xchg
jae
push
mov
and
jb
inc
pop
bound
lock
pusha
push
ror
push
jge
out
xchg
push
jg
pop
fnsave
rcl
pcmpeqw
ror
iret
shr
hlt
push
sbb
push
ins
or
or
out
xor
fst
cmp
(bad)
stc
test
ss
sbb
jge
mov
mov
sbb
push
cmp
rcl
inc
and
adc
add
nop
jnp
mov
dec
retf
cld
or
and
inc
pop
add
js
add
test
in
test
inc
fistp
mov
or
fiadd
(bad)
or
rep
jnp
rol
out
enter
aam
enter
ins
test
and
xor
sbb
pop
ror
ss
dec
add
icebp
int3
mov
out
int3
push
add
sbb
ret
cli
enter
(bad)
out
enter
enter
or
pop
and
mov
cmc
inc
cwde
adc
add
add
mov
fiadd
inc
std
ins
xchg
or
adc
mov
and
pop
push
mov
sbb
mov
movs
push
ret
clc
mov
sub
loopne
aas
out
inc
sbb
push
adc
and
inc
adc
or
outs
xchg
sbb
push
sbb
push
inc
idiv
cmp
ret
ins
push
fisub
hlt
sbb
xchg
sbb
mov
mov
pop
or
cmp
test
cmps
hlt
inc
sub
mov
cwde
aad
adc
inc
or
xor
inc
loopne
add
cmp
les
std
and
ja
push
cwde
pop
push
fdiv
mov
add
push
add
addr16
and
mov
mov
(bad)
mov
sar
ror
cmp
xchg
sbb
jnp
dec
xchg
test
mov
shl
rol
add
call
sub
xchg
push
mov
nop
sbb
or
and
gs
or
adc
in
pop
rcl
ror
rol
sub
int
sbb
sbb
pusha
rol
sub
test
loopne
hlt
mov
lahf
sub
and
adc
mov
mov
push
push
sub
ret
pusha
aaa
sub
pushf
mov
mov
jg
push
mov
cmp
repz
fwait
(bad)
push
sbb
lahf
sbb
sbb
xlat
sbb
cmp
repz
fcmovnu
xor
and
mov
cmp
sub
or
js
cmp
cmp
xor
push
ss
sbb
sbb
cmp
test
jmp
adc
cld
leave
sbb
dec
lock
ss
push
add
or
rcl
shr
cmps
(bad)
ins
ret
push
add
dec
add
movs
fist
inc
lock
shl
and
sbb
out
adc
out
mov
add
mov
das
fimul
and
mov
adc
lds
fild
xor
mov
cmp
rol
(bad)
push
nop
push
clc
ss
rcr
add
push
or
inc
nop
test
cmovnp
imul
and
adc
xor
popa
imul
inc
push
jae
loop
loopne
add
into
rcr
mov
cs
ud2
add
and
pop
sar
or
sbb
mov
clts
in
cmp
push
xchg
test
sub
lds
pop
sbb
adc
push
sub
or
gs
ins
imul
ret
pop
pop
inc
sub
push
or
rcl
fs
pop
mov
pmulhuw
sbb
and
mov
mov
or
jmp
loopne
pop
sub
je
dec
je
add
jmp
gs
sub
sbb
enter
push
sbb
mov
fiadd
xor
(bad)
out
and
std
pop
adc
pop
ror
sub
add
popf
add
add
jecxz
dec
sub
das
push
lods
add
xor
sbb
sbb
inc
xor
js
sub
hlt
xchg
outs
add
or
hlt
xchg
adc
cli
jne
xchg
add
and
out
add
push
out
fiadd
xchg
and
mov
hlt
mov
jecxz
ins
les
adc
shl
mov
adc
dec
stos
call
test
mov
and
sub
or
div
pop
pusha
dec
in
mov
push
cld
test
dec
or
pop
mov
mov
ins
scas
mov
popf
pop
popf
js
cmp
dec
sar
sbb
in
stos
inc
sub
inc
push
loopne
mov
push
test
xor
ffree
dec
sbb
icebp
or
lods
xor
inc
outs
inc
and
fnstenv
lea
jmp
gs
pop
mov
(bad)
mov
xor
jbe
add
das
add
jmp
xor
es
jmp
xchg
sbb
jmp
ret
adc
add
sbb
xor
jg
or
sbb
cmps
test
adc
sub
jae
add
pop
inc
aam
sbb
int3
ret
xchg
inc
xchg
push
push
dec
dec
mov
in
clc
daa
adc
inc
inc
push
xchg
in
add
push
push
push
pushf
cmp
or
movs
push
jo
test
sub
push
xor
push
push
or
imul
fs
outs
ja
jb
mov
push
jo
pusha
fs
popa
xlat
je
or
and
jo
(bad)
daa
test
mov
icebp
push
imul
movs
cmc
sbb
rol
xor
jo
daa
or
sub
push
add
inc
popa
jo
bound
imul
int3
xchg
inc
ret
or
daa
push
jg
push
push
ja
push
inc
dec
inc
adc
arpl
outs
imul
adc
test
pop
imul
pop
push
sub
gs
pop
mov
lahf
inc
sbb
xchg
xchg
ins
cmp
sub
popa
or
adc
sbb
sub
and
in
or
push
out
dec
inc
xchg
retf
ins
mov
in
(bad)
in
div
or
lock
jne
push
gs
cmp
ins
mov
into
mov
push
mov
lock
push
or
loopne
mov
add
jle
add
xchg
add
rol
or
imul
xor
push
sub
mov
cli
sbb
dec
add
adc
imul
hlt
push
cmps
push
(bad)
pop
inc
inc
push
push
dec
push
inc
pop
inc
push
inc
cmps
or
dec
fmul
dec
inc
dec
and
ins
and
push
fucomip
pushf
(bad)
movs
or
sub
jae
fldenv
or
add
or
jb
sar
inc
pop
ror
rcr
dec
mov
jo
dec
into
mov
sub
xchg
and
shr
adc
add
and
inc
and
cmp
in
adc
jne
mov
bound
ret
es
sbb
in
js
jae
js
imul
mov
ror
mov
out
add
and
inc
jb
ret
pusha
test
clc
jnp
push
xor
add
pop
dec
or
mov
jbe
jns
cmp
adc
pop
arpl
ins
add
cmps
push
sbb
stc
lahf
enter
adc
push
mov
or
inc
and
and
lahf
or
sahf
mov
not
jno
or
xor
or
sub
jmp
rcr
push
jo
sub
es
mov
adc
add
jo
pusha
xchg
xor
movs
(bad)
pop
test
xchg
mov
inc
inc
push
push
popa
adc
in
push
adc
pusha
adc
jecxz
and
lea
hlt
mov
sub
outs
dec
sahf
mov
xor
ja
int3
mov
jbe
pop
dec
mov
(bad)
and
pop
repz
popa
loop
sub
pusha
mov
mov
add
rcl
jg
sub
sbb
xchg
test
sbb
add
add
stos
js
inc
popf
ret
ret
fld
jg
inc
push
mov
push
and
or
sub
(bad)
mov
inc
add
fimul
popf
add
mov
pop
dec
mov
mov
and
mov
arpl
mov
aad
rol
aad
add
popf
and
push
nop
cmps
mov
add
push
xchg
and
loop
cmp
adc
dec
sub
fdiv
pop
mov
jne
pop
add
add
push
dec
push
mov
add
xor
dec
aaa
sbb
aaa
mov
ins
add
dec
and
shr
sar
add
adc
test
cmp
mov
push
push
inc
inc
int
xchg
mov
js
mov
mov
push
inc
nop
popf
add
iret
and
adc
or
dec
add
xchg
inc
mov
or
mov
or
out
cmps
mov
imul
test
scas
add
stc
jbe
inc
dec
mov
retf
xor
fistp
xchg
sbb
dec
pop
push
pushf
and
mov
daa
push
inc
xchg
dec
inc
add
mov
lds
and
ja
xchg
ficomp
dec
xchg
sub
popa
mov
jecxz
leave
add
call
add
pop
dec
jne
push
jne
dec
push
test
adc
push
pushf
in
or
push
inc
sbb
jno
pusha
pop
push
in
ja
xchg
pusha
call
retf
jnp
push
sbb
add
(bad)
xchg
sbb
inc
outs
pop
imul
inc
(bad)
mov
xor
mov
pop
push
and
mov
ret
sbb
scas
xor
dec
rol
inc
pushf
jle
dec
adc
mov
jecxz
arpl
push
mov
imul
(bad)
fld
adc
sub
xchg
xor
cld
imul
adc
gs
gs
sahf
std
ficom
inc
jo
das
xchg
and
mov
sbb
cmps
popa
or
xor
enter
clc
and
ins
add
or
or
(bad)
jo
popa
mov
cmp
or
add
push
gs
adc
mov
xor
jmp
jmp
pop
inc
inc
mov
loopne
jne
mov
cdq
ret
dec
xor
dec
push
and
add
adc
outs
sbb
push
inc
push
dec
ins
fmul
rol
fmul
xchg
fadd
subps
or
sbb
cmp
pushaw
cmp
aad
mov
add
jns
repnz
xor
gs
lock
pop
xchg
mov
(bad)
(bad)
pusha
punpcklbw
jbe
out
lds
mov
pop
pop
inc
test
call
inc
sbb
dec
lods
push
movs
push
ror
mov
and
in
imul
sub
test
and
outs
and
and
mov
add
lods
adc
inc
lods
push
cmp
outs
inc
inc
test
ins
or
movs
fwait
push
dec
mov
xchg
mov
jo
add
jg
test
dec
fcmovnb
lock
rcr
cmp
xchg
pusha
jno
sub
cmp
mov
leave
popaw
inc
mov
das
fild
cmp
push
ror
push
xchg
mov
push
adc
mov
sub
or
fisttp
ins
push
into
dec
jecxz
pop
jns
add
cs
and
push
inc
add
adc
inc
dec
dec
pop
jns
inc
mov
jp
inc
movs
cvtps2pi
pop
push
or
xchg
mov
push
mov
sub
test
cmp
and
xchg
lods
sub
xor
cmp
add
lock
hlt
call
xor
popa
dec
sbb
mov
dec
addr16
ret
jo
nop
pop
mov
mov
add
popa
push
mov
mov
or
or
fwait
mov
pushf
pusha
daa
fsubr
out
or
xor
xchg
out
jecxz
cs
imul
or
mov
jo
jmp
cwde
mov
jnp
pushf
pusha
lea
rol
stc
or
test
clc
push
or
outs
ja
mov
sbb
call
adc
les
jp
adc
inc
fistp
daa
inc
pop
loop
sub
pusha
fwait
adc
inc
adc
loopne
pusha
mov
adc
addr16
popf
xor
rcr
test
push
push
je
fild
daa
cmp
sub
jmp
test
xchg
popa
mov
and
add
lods
not
pop
repz
pushf
and
jno
xchg
push
sahf
cmps
cmp
popa
pop
pop
das
pop
sahf
ja
pushf
loope
adc
outs
outs
sahf
out
push
lods
or
xchg
ins
mov
sbb
cmp
add
adc
ret
cmp
push
jae
mov
inc
or
jne
into
cmps
aam
push
or
pop
pop
pusha
rcr
ret
sbb
mov
dec
adc
push
nop
imul
adc
hlt
sub
pop
mov
jg
pop
je
push
pop
pop
lods
push
or
fmul
data16
push
lock
push
jae
das
and
(bad)
data16
and
add
test
or
outs
cs
adc
push
ds
test
pushf
lods
mov
mov
in
add
mov
add
mov
daa
aaa
add
dec
ds
ins
inc
add
mov
mov
push
and
add
or
dec
adc
pusha
inc
add
sub
jge
dec
in
and
pop
sbb
mov
jl
cmp
scas
xor
inc
or
fwait
mov
dec
jae
adc
mov
xor
sbb
inc
ror
out
rol
imul
clc
add
pop
popa
mov
fisttp
cmp
dec
loope
and
push
(bad)
aaa
pop
jge
aad
inc
lea
mov
movs
mov
shr
pushf
mov
fisub
push
cmp
pusha
pop
loopne
push
add
add
push
push
scas
stos
shl
add
mul
or
sub
jmp
lahf
adc
push
popa
add
push
shl
ror
push
sar
mov
loopne
stos
xor
add
inc
xchg
mov
mov
xlat
pop
cmp
push
mov
cs
movs
or
add
int
push
les
fldcw
movs
rol
inc
or
ins
sahf
sbb
dec
cmp
cmps
outs
neg
pop
sub
cld
mov
cmps
(bad)
mov
mov
shl
stos
icebp
and
in
mov
xchg
xchg
hlt
enter
ss
das
xor
enter
les
out
mov
add
aad
les
ret
or
xchg
inc
sbb
retf
push
retf
fld
mov
rol
popa
and
jns
pop
sti
jne
xchg
js
push
mov
sub
cmps
inc
jo
push
jl
in
push
aad
jmp
pop
pusha
movs
inc
mov
fst
les
push
inc
test
mov
pop
movs
cmpxchg
stos
add
add
adc
dec
or
adc
data16
jae
inc
add
gs
xchg
ror
inc
jae
mov
push
add
or
inc
daa
test
push
dec
mov
adc
lods
xor
push
sbb
bound
inc
stos
scas
push
mov
cmp
fs
mov
mov
lahf
pop
sti
add
sub
test
outs
fild
mov
cmp
cwde
sahf
push
cmp
or
inc
ja
xchg
add
xchg
std
add
fs
jle
movs
push
and
jno
fsubr
rcl
jle
mov
push
adc
ss
or
add
mov
jmp
xor
stos
dec
cmp
es
add
and
inc
jae
add
add
jns
mov
mov
je
adc
pop
jns
inc
push
imul
xor
and
cmp
int3
leave
mov
mov
es
inc
pop
inc
pop
stos
dec
pop
je
add
pop
lea
test
dec
mov
push
(bad)
sbb
fcmovbe
lods
push
cmps
push
fisubr
lods
inc
enter
lahf
cwde
retf
and
push
pop
(bad)
push
leave
lahf
mov
push
aam
lahf
sbb
push
jno
inc
push
leave
inc
adc
add
add
outs
seta
and
(bad)
lahf
les
lods
xor
retf
addr16
and
inc
mov
mov
add
lods
dec
ins
cmp
dec
sbb
cdq
pop
enter
cdq
dec
leave
cmp
lds
ret
pop
and
loop
dec
adc
jno
adc
xor
hlt
pop
leave
mov
dec
shl
cmp
push
or
jg
ret
neg
rdmsr
(bad)
jg
cli
cmp
xchg
cli
and
cmps
cmps
scas
out
sahf
add
ret
jns
jl
in
cli
or
jns
out
inc
dec
pop
push
bnd
js
xchg
and
es
add
fnstsw
adc
pop
pop
sti
cmp
jnp
pushw
je
nop
sahf
mov
iret
repz
ss
sahf
mov
cmp
add
retf
jns
es
mov
das
fwait
retf
add
add
test
jle
pop
ja
out
test
out
les
shr
or
push
loopne
cld
mov
jns
aaa
ror
adc
es
sub
popf
out
pop
test
dec
sbb
test
or
into
repz
mov
xchg
movs
mov
fstp
into
push
fcomp
clc
push
push
adc
sti
ins
call
add
adc
xchg
xchg
div
pop
mov
les
movs
movs
push
dec
and
push
cmp
retf
sub
jb
push
mov
mov
add
popw
in
or
jo
cwde
jno
pop
cmp
hlt
outs
mov
mul
jb
jb
mov
rol
fistp
or
ins
xchg
in
inc
push
in
and
in
push
inc
ins
sbb
in
pusha
push
jo
xor
test
mov
lods
sbb
and
push
or
pop
imul
inc
mov
inc
xchg
gs
xor
xchg
ins
push
sbb
shl
inc
jo
not
and
ins
mov
and
mov
(bad)
inc
jo
sub
mov
loopne
cmp
mov
shl
ror
jbe
cmp
ret
inc
nop
mov
sbb
mov
ret
ror
inc
xor
xchg
adc
pusha
pop
dec
sti
sub
xor
cmp
and
dec
mov
sbb
mov
and
sbb
inc
jno
aam
fdivr
pop
pop
dec
push
pop
cwde
aaa
sti
xchg
mov
in
push
clc
out
mov
imul
or
adc
dec
sbb
jo
mov
jmp
in
xor
xor
mov
sbb
xor
jge
lock
mov
dec
add
and
shl
cmps
test
mov
popf
cmp
inc
nop
jo
sahf
mov
adc
mov
test
push
inc
ret
fisubr
jge
add
pop
ffree
dec
mov
dec
add
jecxz
or
out
push
and
rcr
sar
add
shr
jae
mov
push
sbb
icebp
nop
dec
sbb
ss
test
push
js
mov
mov
fisubr
pop
jle
fstp
out
cmp
xchg
mov
push
movs
sub
rcr
sbb
sbb
rol
sub
and
(bad)
mov
out
mov
scas
clc
inc
in
dec
sbb
sbb
shl
sti
or
pop
sub
or
mul
outs
xchg
push
push
jbe
inc
add
fdivr
ror
call
inc
retf
cmp
or
xor
cmp
xlat
sub
and
push
or
and
push
retf
dec
ret
pop
or
nop
shr
pop
push
or
nop
pusha
push
fs
dec
add
add
lock
add
mov
(bad)
sbb
out
push
or
sbb
or
mov
movs
lods
ja
scas
inc
lods
adc
xchg
mov
fwait
push
inc
das
fiadd
test
adc
xor
dec
ins
test
adc
push
gs
inc
outs
lds
lahf
cmp
pop
adc
in
cmps
test
mov
pop
arpl
(bad)
and
push
inc
(bad)
mov
pop
pop
mov
cmp
add
daa
ror
(bad)
loope
inc
test
inc
xor
mov
dec
jle
mov
add
xchg
mov
rol
inc
jge
mov
push
sbb
jl
sub
jo
ret
nop
pop
and
or
add
cmps
xor
cmp
push
xchg
cmp
and
movs
jno
jo
ja
xor
mov
mov
jmp
nop
mov
or
pop
add
daa
sbb
shl
sub
scas
pop
lock
nop
xor
push
repz
xchg
jne
adc
push
and
in
and
or
add
mov
ins
push
lahf
sar
inc
and
aam
test
ins
rol
jmp
mov
and
xchg
bound
mov
mov
jnp
cmp
xlat
aad
mov
cdq
adc
sub
sbb
dec
inc
jmp
mov
mov
je
push
mov
add
push
xchg
or
cli
pop
mov
ja
ins
in
sub
ret
push
or
fs
adc
add
pop
inc
push
cmp
dec
in
add
push
jl
mov
xor
lods
pop
and
push
test
dec
adc
sbb
push
cmps
mov
xchg
mov
or
movs
sub
sub
xor
add
inc
jecxz
adc
push
imul
retf
and
jae
pop
pop
loopne
inc
outs
adc
aad
cmps
push
sbb
fmul
sar
add
(bad)
jecxz
push
neg
or
test
jnp
cmp
adc
xchg
add
stos
add
call
das
pop
mov
test
adc
das
mov
adc
js
outs
xor
dec
in
loopne
mov
movzx
inc
dec
add
cmp
adc
add
lods
lahf
adc
xor
xchg
sub
jbe
and
xchg
mov
ss
or
dec
les
call
cmp
and
int3
mov
xchg
mov
mov
add
inc
and
test
push
mov
inc
in
mov
out
call
setge
xor
std
dec
les
pop
das
jp
jl
inc
repnz
cmp
mov
push
sbb
out
sbb
and
adc
and
add
push
inc
es
or
sbb
data16
jmp
jnp
inc
pop
xor
mov
inc
adc
push
imul
aad
push
push
cmps
push
pushf
fldcw
movs
outs
jne
lea
or
pusha
lods
aaa
pop
std
scas
add
ret
cwde
movs
pop
adc
(bad)
std
inc
lods
inc
push
daa
lahf
jo
sub
imul
sub
scas
cwde
push
scas
lahf
sub
stos
imul
lods
shl
cmp
rcr
pop
mov
xchg
rcl
ds
sbb
sar
push
add
rcr
test
cmp
or
add
(bad)
add
mov
adc
mov
mov
inc
add
mov
aaa
pop
int3
stos
adc
mov
rol
or
mov
aas
js
movs
mov
or
mov
inc
sti
add
mov
lds
mov
jbe
mov
adc
xchg
call
std
test
cmp
test
pop
or
(bad)
and
inc
and
xchg
push
push
cmp
mov
test
mov
ins
in
movs
enter
ret
(bad)
xor
adc
and
inc
nop
add
mov
xor
arpl
fmul
ja
aaa
or
adc
call
iret
mov
or
mov
adc
sar
pop
jo
adc
push
push
js
ja
sbb
jge
or
inc
inc
inc
test
jmp
outs
add
popf
arpl
xor
add
ja
test
daa
fcom
add
into
test
and
add
cmp
jp
cs
pop
add
fbstp
pop
pop
push
sub
pop
push
test
xor
sbb
push
cmp
inc
dec
pop
cmp
rol
outs
add
aas
shl
lea
mov
push
nop
dec
ret
loop
xor
push
retf
adc
pop
push
add
ss
xor
mov
xchg
scas
fcomp
pop
loopne
or
jmp
cmp
popf
out
stos
push
and
mov
mov
in
mov
or
mov
push
test
imul
test
add
cmps
sbb
out
and
sub
inc
or
cld
mov
jl
sbb
nop
pop
inc
or
xor
mov
sbb
(bad)
(bad)
jl
or
daa
adc
in
call
cld
xchg
mov
cmovo
adc
inc
test
dec
pop
inc
pop
dec
inc
mov
in
leave
or
ror
cmp
add
dec
add
inc
mov
scas
add
test
dec
jmp
mov
dec
adc
into
scas
push
sbb
test
shl
clc
or
add
add
movs
push
dec
dec
or
mov
dec
add
mov
js
cmp
mov
sub
hlt
daa
xchg
and
cmps
hlt
push
push
call
outs
in
sbb
out
mov
call
addr16
pusha
jge
pusha
sub
sub
ins
mov
jae
push
cmp
inc
adc
mov
shl
dec
out
outs
jo
mov
fmul
mov
pop
mov
push
sbb
mov
mov
leave
jge
mov
jmp
outs
push
adc
int3
push
data16
push
shl
dec
loopne
dec
sahf
rcr
aam
aam
inc
adc
ins
inc
test
jno
and
add
mov
loopne
in
push
xor
mov
add
pop
pop
aas
pop
inc
loope
add
popf
jecxz
ror
lods
inc
or
clc
ret
and
cmp
inc
(bad)
icebp
push
sbb
lods
mov
ds
xor
addr16
rol
cmp
retf
xchg
cmc
inc
adc
add
test
mov
pop
mov
xor
cmps
inc
dec
jnp
mov
sbb
jp
enter
daa
and
jecxz
sti
lea
cld
jo
add
jl
sbb
xor
xor
sub
add
scas
pusha
inc
rol
loope
push
lds
cs
cmp
shr
adc
loopne
mov
inc
mov
cwde
mov
mov
or
gs
(bad)
xchg
movs
sahf
inc
out
retf
fsubr
inc
nop
or
push
adc
inc
imul
add
pop
xor
xor
mov
popa
imul
mov
push
ror
push
retf
adc
in
mov
inc
out
js
daa
enter
push
fist
not
xor
mov
out
cmp
shl
fstp
add
cmp
cmp
sub
xor
sbb
push
inc
add
sub
mov
jnp
and
ins
gs
add
mov
jo
jno
and
sbb
add
mov
and
or
cmc
push
shl
or
inc
inc
jno
push
arpl
aaa
or
ret
(bad)
sub
push
icebp
fnstsw
imul
xor
inc
clc
mov
jns
dec
jns
cmp
mov
cmp
dec
movs
lock
add
(bad)
in
cld
int
into
dec
into
or
sub
or
pop
push
xor
ret
mov
into
enter
enter
mov
into
add
lock
(bad)
cld
sbb
sbb
or
add
int3
into
mov
and
and
add
ja
fstp
xor
sub
daa
stc
popa
sub
sub
iret
inc
iret
mov
sbb
add
mov
dec
int
popf
add
and
int
xor
adc
push
ror
aas
inc
add
sbb
sbb
adc
adc
movs
pop
outs
mov
gs
addr16
sbb
or
xor
and
sbb
clc
dec
mov
and
div
inc
sbb
shl
and
jg
test
xchg
shl
inc
or
and
test
loope
add
repnz
in
and
cwde
sbb
test
bound
lock
mov
idiv
mov
fdiv
and
xchg
pop
pop
out
push
jo
or
xor
lahf
add
dec
mov
jmp
sub
sbb
sub
aam
and
jne
outs
ins
mov
ja
sub
xor
mov
fadd
cmps
and
ret
arpl
jle
into
and
test
iret
sar
sbb
adc
lods
ja
xor
sub
add
inc
mov
dec
jae
iret
inc
lock
or
lea
cmp
jno
sbb
rol
cmc
adc
sbb
pusha
push
jmp
push
xchg
mov
inc
aam
clc
xor
and
(bad)
out
fld
inc
push
push
adc
pop
sub
fdivrp
mov
push
push
hlt
xchg
(bad)
mov
or
inc
mov
lock
mov
retf
and
inc
dec
cmp
(bad)
out
dec
ror
adc
fistp
cmp
popf
mov
xor
loop
xchg
retf
faddp
daa
push
daa
dec
dec
add
ins
mov
sub
imul
popa
mov
push
xchg
add
das
adc
and
fistp
data16
adc
addr16
das
adc
push
outs
das
arpl
or
add
push
jb
movs
ret
das
push
loopne
imul
div
daa
daa
add
ret
sbb
xor
xchg
jo
cmps
xchg
fcmovnb
inc
add
add
inc
mov
sub
mov
xor
mov
pop
pop
rol
std
jge
add
mov
jl
fistp
pop
(bad)
cmp
je
or
leave
(bad)
in
add
xor
push
mov
sub
cmp
jnp
call
mov
jmp
mov
and
pop
mov
pop
push
add
movs
jae
sub
and
add
adc
stc
cmp
mov
pop
inc
inc
cmp
shl
add
cmp
enter
arpl
inc
add
clc
ror
mov
call
fstp
fiadd
enter
(bad)
popf
ins
loopne
mov
loope
dec
sbb
mov
repz
or
or
or
push
ret
and
out
leave
das
xchg
adc
and
aam
and
shl
clc
fldcw
push
add
xor
pop
daa
add
adc
sbb
mov
dec
cs
loopne
repnz
enter
call
(bad)
sub
inc
in
or
and
mov
lock
sub
push
mov
ret
push
imul
outs
jmp
mov
mov
and
mov
loopne
jg
add
je
rol
inc
sbb
mov
push
test
in
mov
xor
add
mov
xor
add
cmp
loopne
cmp
sub
cmp
xchg
dec
arpl
call
mov
jle
out
mov
lods
jne
mov
ret
mov
sbb
xchg
mov
cmp
dec
sub
mov
ror
jmp
sub
xadd
and
mov
or
fsub
dec
sti
mov
or
(bad)
or
cmp
out
lds
mov
pop
cmp
jb
das
sub
mov
test
or
fs
adc
mov
xchg
add
push
ins
lahf
add
sar
add
or
mov
pop
adc
mov
call
push
inc
fdivrp
inc
fstp
or
out
pop
dec
add
push
push
push
xlat
loopne
xchg
lock
sahf
inc
or
pop
popa
fistp
adc
push
jb
js
fld
mov
xchg
lods
cmps
or
and
mov
outs
dec
outs
data16
jg
in
inc
mov
jb
addr16
jbe
sub
ins
adc
fadd
dec
mov
ins
jae
ret
inc
mov
es
fst
gs
in
fmul
push
bound
aaa
dec
sub
pop
add
jbe
sub
xchg
push
outs
loopne
in
and
shl
pusha
call
repz
jae
dec
ss
push
jne
or
xor
sar
dec
add
xor
xor
mov
mov
neg
arpl
jno
jp
or
loope
dec
nop
xchg
adc
sub
ins
jecxz
or
popa
mov
add
out
pop
push
and
push
sub
adc
call
adc
cmp
pusha
and
int
call
push
and
fcom
xchg
pop
out
jecxz
adc
mov
sbb
pop
inc
add
lds
mov
cmp
movs
(bad)
and
cwde
and
xchg
pop
adc
jge
movs
sub
addr16
xchg
mov
fimul
loop
sub
fcomi
jp
dec
add
adc
neg
xchg
push
mov
push
dec
fs
movs
sub
movs
jg
ret
mov
add
add
pop
fbstp
xor
adc
adc
or
shl
or
adc
test
loope
fild
bound
inc
mov
push
push
loopne
and
jo
push
pop
fnstsw
das
std
push
int3
dec
loope
add
mov
hlt
xor
jp
mov
out
push
or
pop
mov
mov
push
test
mov
sbb
mov
pop
push
cmp
mov
arpl
fwait
rol
or
clc
jae
lock
or
sbb
fdiv
fidiv
mov
leave
push
out
pop
ret
mov
mov
push
add
add
mov
adc
in
retf
pop
aas
inc
and
loope
ss
push
inc
loope
add
iret
xchg
xor
(bad)
ins
loope
dec
sbb
adc
ds
bound
add
pop
out
adc
ins
sbb
pop
add
and
in
sub
push
retf
loop
enter
pop
mov
loopne
push
mov
or
xor
sbb
jg
dec
jmp
add
out
and
sub
push
movs
dec
inc
sub
push
(bad)
mov
rcr
(bad)
mov
fwait
cmps
pop
or
pop
sub
sbb
lahf
ja
push
push
ret
push
in
fcmovbe
in
adc
pop
mov
cs
pop
pop
mov
push
int3
add
add
inc
push
add
out
push
cwde
pop
adc
xor
adc
push
pop
enter
ret
push
dec
pop
rol
push
add
pop
in
aam
jge
inc
call
jne
arpl
fcomp
or
xor
sbb
retf
cmp
pop
add
dec
push
jmp
lahf
(bad)
mov
add
adc
int3
add
inc
and
in
pop
xchg
mov
jbe
out
add
push
and
dec
add
mov
inc
fs
push
dec
dec
aaa
xor
call
mov
movs
test
popa
xor
movs
cmps
aaa
test
(bad)
fld
lods
mov
xchg
ss
aaa
hlt
neg
das
aam
mov
mov
popa
fwait
add
dec
nop
inc
inc
jnp
int
outs
or
xor
adc
mov
pop
out
inc
push
inc
sbb
leave
in
push
pop
setge
add
mov
cmp
call
shr
das
sub
xor
aaa
adc
push
sbb
push
add
jbe
outs
inc
add
js
xor
fcmove
movlps
add
js
cmp
push
and
pop
inc
mov
push
dec
lods
dec
mov
lods
push
bound
xchg
ficomp
outs
push
repz
and
jae
push
inc
lahf
xchg
or
xor
mov
or
test
shl
jno
or
or
stc
lahf
addr16
or
mov
clc
nop
mov
mov
call
jmp
stos
push
test
pop
dec
push
inc
popa
punpcklbw
inc
push
or
pusha
sub
cmp
in
das
push
enter
push
xchg
ret
xchg
cmps
(bad)
pop
push
es
les
shr
jae
cli
sub
lods
ss
push
adc
mov
lds
shl
mov
push
mov
dec
aam
xlat
pop
scas
aad
push
mov
add
in
shl
adc
push
das
or
rcr
mov
adc
es
mov
mov
adc
pushf
lahf
jbe
cmp
pop
add
bound
or
popa
imul
sbb
or
or
outs
jnp
mov
adc
imul
dec
add
xor
cmp
xor
mov
xchg
clc
jl
test
add
push
inc
int
dec
dec
sbb
push
xor
adc
mov
cmp
xchg
repz
fsub
fiadd
cmp
jne
inc
pop
push
rol
jmp
inc
add
cli
sahf
fimul
call
inc
popa
inc
lock
push
sbb
pop
add
inc
adc
clc
push
pop
add
mov
ins
pop
mov
pop
or
xor
imul
aaa
push
stos
mov
xchg
test
test
mov
aaa
add
add
jns
shr
mov
sub
adc
pop
bswap
leave
leave
leave
xchg
sahf
(bad)
in
fs
in
outs
mov
repnz
out
cmps
hlt
push
out
pushf
mov
leave
es
es
lahf
xor
or
push
daa
cmc
xor
ud2
add
in
xor
xor
or
in
jae
mov
mov
add
dec
add
xor
loope
xlat
add
inc
test
xchg
or
or
ror
pusha
stos
xor
pop
retf
cmps
mov
retf
xchg
or
popa
gs
pop
cmp
popa
test
or
add
inc
add
mov
cmp
or
push
ds
sub
cmp
xor
aas
scas
rol
push
outs
jae
loop
rcl
lock
or
push
and
fmul
mov
add
add
mov
mov
mov
xchg
add
sbb
sub
ret
or
leave
fwait
nop
cmovb
xor
fcomp
pop
sbb
and
and
sub
dec
push
popa
rol
or
fnstsw
push
mov
add
popa
test
loope
or
arpl
aad
inc
sbb
and
jecxz
jne
and
arpl
pop
pop
pop
or
retf
cmp
sbb
cmc
inc
daa
(bad)
bnd
or
sbb
sbb
mov
fild
hlt
xor
sbb
sbb
mov
sbb
sbb
dec
jg
sbb
add
nop
jle
cmp
mov
pop
mov
jg
fsubr
popa
add
call
(bad)
sbb
and
cmp
or
inc
mov
add
dec
aad
xchg
into
lods
push
sub
test
dec
mov
jno
adc
inc
jmp
loope
xchg
jmp
mov
xor
jmp
dec
adc
mov
adc
xchg
push
push
xchg
adc
cmp
in
cmp
dec
mov
jmp
ins
stc
(bad)
or
push
(bad)
jmp
pushf
adc
push
dec
call
jae
sbb
inc
pop
mov
xor
pop
inc
push
pop
inc
mov
sti
imul
dec
adc
je
pop
int
sbb
xor
jmp
adc
push
dec
jmp
les
adc
sbb
mov
or
push
mov
ja
dec
js
adc
mov
push
mov
call
push
not
add
xchg
repnz
into
sub
out
jbe
inc
push
xor
pop
push
sbb
push
popa
sbb
loop
adc
sbb
adc
mov
sbb
or
nop
inc
and
or
or
add
mov
push
out
out
stos
xor
out
add
add
add
inc
pop
and
and
and
inc
enter
add
leave
or
retf
sbb
xchg
xchg
jbe
sbb
xor
test
xchg
cli
and
dec
je
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
ds
int3
lods
xchg
mov
hlt
dec
movs
dec
mov
adc
scas
hlt
cli
psubd
dec
(bad)
cmps
or
jg
or
imul
outs
(bad)
sbb
cli
movs
xchg
or
adc
mov
daa
mov
jl
loopne
fstp
icebp
push
and
sbb
mov
std
jo
loop
aaa
sbb
add
jecxz
xor
add
cld
add
push
pusha
pop
mov
inc
pop
add
add
imul
add
or
cmc
les
aas
imul
and
pop
xor
popa
inc
pop
mov
pop
shr
cmp
dec
pusha
add
rcl
out
xor
cs
mov
xor
out
inc
pop
or
std
pop
jecxz
(bad)
xchg
add
adc
add
dec
and
inc
outs
push
adc
mov
mov
pmulhuw
aam
or
ins
inc
dec
xchg
pop
pop
pop
pop
dec
mov
retf
das
ins
and
ins
pop
adc
xchg
xor
push
pop
mov
bound
outs
ss
add
cld
add
dec
push
mul
push
call
adc
sub
add
psubb
ss
push
loope
inc
cmp
sbb
mov
ins
aas
clc
loopne
cmps
xor
repnz
(bad)
fld
lock
dec
pushf
dec
pop
cmc
ins
(bad)
call
(bad)
push
sar
imul
cmp
add
adc
mov
es
sub
jbe
and
xchg
rol
je
dec
adc
xor
aaa
add
cs
pop
add
sub
pop
add
pop
xchg
inc
and
or
push
xor
dec
cmp
out
mov
shl
xor
repz
inc
in
into
(bad)
dec
popf
add
and
jns
inc
adc
aam
or
mov
mov
sbb
loopne
xor
fnsave
div
cmp
sbb
jne
xchg
xor
xor
je
inc
cmp
inc
xchg
dec
sub
sbb
cmp
sub
pop
and
cld
test
cmps
or
mov
mov
mov
stos
pusha
call
mov
pop
test
fwait
jg
add
inc
push
inc
loopne
cs
cmp
and
mov
pop
or
pop
sub
push
add
outs
push
push
push
adc
pop
dec
cwde
pop
add
aad
add
iret
or
loop
jle
add
je
jne
inc
mov
orps
cmp
add
and
xor
and
add
and
lods
push
pop
and
add
(bad)
sbb
aam
fmul
mov
aas
xchg
add
mov
xchg
enter
dec
mov
jmp
mov
clc
pop
sbb
loopne
push
fwait
or
push
scas
mov
pop
cmp
dec
call
mov
daa
call
xlat
mov
nop
mov
mov
cmps
sub
fcomp
sbb
push
cmc
xchg
call
in
in
nop
loopne
jno
dec
add
sub
arpl
popa
jo
adc
sub
add
je
lock
je
mov
mov
sub
or
jge
rcl
mov
sub
movs
aas
mov
mov
cmp
dec
loopne
loop
dec
ins
jbe
jbe
mov
rol
jnp
sbb
xchg
jmp
mov
fwait
pushf
jbe
loopne
jmp
jnp
mov
mov
adc
push
aam
add
popa
popf
add
stos
dec
std
adc
inc
cmp
mov
ja
xor
mov
jbe
ret
les
sub
pop
sti
push
dec
es
add
inc
pop
pop
mov
push
jo
ja
sar
jae
dec
jle
rol
sub
popa
sbb
mov
sti
push
sub
nop
cmp
mov
daa
hlt
dec
call
hlt
mov
dec
dec
dec
jns
shl
jmp
loopne
and
xor
sub
es
outs
inc
mov
adc
mov
lds
inc
inc
xchg
das
in
and
ins
jae
test
xchg
jmp
sbb
add
and
sbb
je
popa
arpl
push
fs
and
stos
push
xchg
rcr
cmp
push
or
cmp
lods
call
inc
call
jne
adc
push
in
jo
jecxz
adc
cwde
mov
mov
inc
xchg
mov
add
inc
in
dec
pop
jnp
daa
dec
lock
jmp
mov
add
mov
pop
mov
cmp
sub
inc
dec
jne
cmp
add
mov
xlat
or
(bad)
dec
jmp
dec
mov
sub
dec
push
sbb
xchg
cmp
cmp
call
call
jl
add
(bad)
or
je
push
popa
dec
pop
loope
add
(bad)
pop
adc
js
sbb
xor
sub
push
sbb
ins
sub
mov
fdivr
test
xchg
mov
mov
mov
or
mov
jl
jecxz
movs
call
cmc
stos
inc
sbb
les
dec
cld
dec
cld
call
inc
lock
xor
popa
cmp
sbb
sbb
push
call
je
and
sub
sbb
mov
ja
adc
xor
imul
add
jns
or
outs
or
jp
arpl
out
xchg
jnp
or
sbb
test
and
mov
dec
xchg
sub
jg
std
push
or
into
mov
xor
inc
or
test
lahf
inc
pop
and
inc
mov
xchg
xchg
sbb
push
sbb
push
and
add
mov
mov
cld
mov
repz
(bad)
test
rol
ret
push
add
push
push
or
cmp
jg
xchg
and
nop
or
dec
popa
push
and
stos
pusha
xchg
and
xchg
rcr
add
daa
or
mov
sar
or
pop
jno
cdq
nop
movzx
test
xchg
fcmovu
add
imul
stos
sub
inc
mov
and
test
aas
imul
ret
inc
mov
mov
fsub
mov
or
aas
add
aad
call
xchg
pop
pop
lds
dec
call
xchg
adc
push
mov
aad
lea
add
jnp
inc
mov
mov
cs
je
into
xor
adc
loope
dec
mov
les
in
xchg
popa
jo
(bad)
cmp
je
mov
adc
inc
test
or
(bad)
imul
or
inc
ror
mov
push
push
mov
imul
push
fmul
aam
add
pusha
cs
lea
push
rol
mov
add
sahf
hlt
mov
sbb
in
inc
daa
xchg
out
inc
std
ret
dec
mov
jb
pop
add
not
sbb
push
and
inc
cmp
cmp
inc
cs
add
inc
sbb
xor
xor
mov
cmp
add
xor
cmp
popf
xor
jl
and
inc
xor
adc
xor
outs
xor
add
daa
sub
or
cmps
mov
mov
pop
movs
movs
or
or
enter
mov
popf
in
aam
cmps
rcr
pop
push
push
add
sbb
loop
mov
shr
xor
jne
jmp
retf
loope
or
lods
sbb
mov
dec
in
xchg
xchg
loop
or
xor
das
mov
(bad)
push
popa
add
lea
out
pop
push
add
and
sar
int3
cmps
(bad)
je
test
sub
lods
add
sbb
pop
outs
dec
adc
xor
adc
mov
aas
jge
out
or
mov
sbb
sub
or
ja
jmp
jg
sub
adc
mov
push
mov
mov
retf
jne
xor
cmp
das
jl
xchg
and
dec
je
and
lds
ds
and
push
mov
mov
gs
in
pop
jle
mov
jle
push
mov
sub
aam
add
fnsave
adc
pop
cwde
xchg
add
sbb
imul
xlat
mov
lahf
ret
inc
das
int3
mov
test
sar
lock
shl
nop
jle
adc
push
cli
mov
xchg
enter
loop
icebp
fst
mov
jge
cmp
adc
push
cmp
add
sbb
inc
(bad)
mov
dec
out
and
call
outs
out
in
xlat
add
mov
dec
mov
(bad)
out
adc
pop
(bad)
shl
cwde
sbb
mov
cmp
mov
mov
fdivr
cmps
loopne
pop
bound
pop
movs
adc
add
mov
in
jmp
mov
nop
push
or
push
push
xor
lods
jnp
jge
jne
mov
fsubr
shl
and
adc
add
xchg
fld
sub
ror
imul
rcr
or
iret
push
pop
mov
xor
push
push
pop
retf
test
(bad)
adc
jmp
cmp
or
dec
ins
jmp
cmp
ins
inc
popa
mov
fwait
jne
push
pop
into
mov
das
jmp
inc
or
push
xor
cmp
dec
fst
popa
push
push
jne
or
or
jle
mov
add
and
sub
sub
jnp
ficom
inc
xor
jmp
ret
std
jo
sub
pop
add
scas
sti
bound
cmp
jne
rcr
test
call
inc
or
pop
call
jo
push
add
sub
lea
sbb
xchg
push
pop
jmp
aaa
sti
push
(bad)
jo
push
pop
fs
jb
in
in
in
sbb
(bad)
in
cwde
daa
nop
cdq
clc
popf
popa
ja
div
xor
ds
popa
popf
adc
frstor
inc
shl
pop
scas
mov
adc
mov
or
and
jno
aam
xchg
adc
cmps
and
adc
push
loopne
test
add
dec
movs
add
scas
imul
mov
lock
xchg
nop
cmps
ins
ins
inc
outs
ins
adc
das
xchg
rcl
add
xor
mov
jg
pushf
stos
add
push
inc
dec
dec
dec
outs
and
(bad)
or
and
add
mov
sbb
or
pop
push
adc
out
inc
add
jg
sbb
dec
or
xor
add
xchg
xchg
or
dec
add
pop
xchg
movzx
shl
mov
xchg
sbb
sbb
shr
lea
jno
or
pop
and
sub
pushf
or
or
push
std
call
lods
and
xchg
rol
add
mov
add
xchg
(bad)
sbb
adc
test
jl
xchg
mov
xchg
add
rcl
sbb
and
push
std
lea
ds
and
je
mov
mov
add
loop
and
cmp
sahf
inc
clc
cdq
add
cs
in
or
push
dec
outs
sub
ret
adc
dec
push
imul
add
je
jg
(bad)
sub
inc
les
test
or
stc
stc
outs
data16
add
or
sbb
(bad)
adc
jae
jbe
add
add
and
mov
pop
ja
dec
sbb
lds
jmp
sbb
add
xchg
inc
add
test
loop
push
mov
daa
xchg
and
paddusb
int3
adc
inc
(bad)
sbb
mov
mov
les
jg
adc
mov
inc
dec
jne
jecxz
in
lods
add
push
push
fdiv
inc
push
in
in
cld
xor
cmp
(bad)
movs
jns
enter
adc
adc
imul
jp
movzx
movs
cmps
jno
jmp
mov
pop
sub
mov
xor
adc
push
jne
cmp
pop
sub
push
loopne
xchg
int3
jmp
adc
aas
cmp
inc
adc
jp
jge
or
jmp
cmp
jne
push
loope
(bad)
mov
fcmovb
cs
pop
and
enter
inc
jmp
sbb
inc
push
pop
retf
mov
adc
les
jle
mov
fwait
outs
jo
mov
test
shl
and
add
mov
enter
cmps
mov
xor
xchg
mov
cli
sbb
mov
dec
out
mov
mov
add
sbb
sub
adc
shr
xchg
mov
sbb
or
inc
inc
ins
sub
and
sbb
add
clc
bound
and
add
test
push
movs
or
pop
mov
dec
dec
mov
mov
sbb
in
push
adc
add
nop
ss
sbb
fs
daa
enter
call
scas
and
dec
or
mov
lock
dec
jecxz
xor
pusha
push
inc
pop
inc
and
add
and
cmps
jne
and
ins
push
cld
and
inc
dec
sub
mov
and
pop
mov
movaps
fwait
daa
add
inc
out
add
cld
nop
cmp
fadd
inc
mov
hlt
neg
adc
add
add
xor
pop
push
sub
sbb
mov
dec
and
xor
sbb
push
add
or
or
aas
aaa
arpl
fdiv
pop
add
push
adc
hlt
fadd
sahf
and
jge
outs
adc
sbb
jge
rcr
or
mov
mov
out
jl
test
popaw
jns
imul
inc
push
stc
lock
adc
sub
jecxz
or
in
mov
sbb
pop
add
loop
push
push
jo
repnz
and
mov
and
in
xchg
daa
je
pop
and
sub
adc
add
das
xchg
in
inc
ss
cmp
and
dec
loopne
fs
ud2
fsub
mov
outs
sbb
lahf
nop
les
cmp
add
cmc
adc
pop
pop
aam
add
cmc
mov
xor
mov
add
outs
cld
retf
mov
or
sbb
pop
inc
cmp
inc
xor
cmp
aaa
adc
dec
jo
ss
ins
jne
test
jns
hlt
and
out
and
jbe
ja
(bad)
hlt
push
adc
mov
add
push
and
mov
adc
and
push
pop
dec
sbb
les
and
popf
dec
add
pop
aam
sbb
inc
cdq
inc
loopne
mov
lar
jb
push
mov
sub
loopne
push
inc
sbb
daa
add
inc
pop
push
add
xchg
adc
inc
cmp
xchg
icebp
and
or
mov
sbb
inc
cmps
xor
rcr
in
fimul
push
aam
and
cli
add
je
nop
adc
add
jmp
call
pop
add
arpl
sbb
mov
movs
(bad)
pusha
out
push
in
icebp
mov
cli
mov
out
es
ret
push
xchg
add
repnz
mov
mov
xor
and
add
cmc
xor
test
add
ds
push
ss
add
pop
imul
jmp
jg
sbb
mov
inc
fmul
cmp
or
jbe
add
jmp
xchg
and
sub
xor
xchg
mov
push
dec
test
inc
push
pop
sbb
pop
mov
aas
test
nop
nop
and
xor
nop
adc
nop
dec
inc
sbb
idiv
jmp
daa
sub
fwait
push
sub
and
pushf
mov
pushf
test
loop
add
leave
hlt
push
and
ror
xchg
and
or
xor
mov
js
mov
dec
sub
mov
adc
in
sub
jbe
rcl
sub
movs
aaa
and
dec
sbb
or
sbb
lods
add
sbb
xchg
push
mov
rcl
xor
and
cmp
mov
dec
dec
cmc
neg
and
xor
js
ret
dec
pop
ins
test
sbb
sub
sti
or
and
cmp
dec
or
or
stos
add
or
rcr
fwait
cmp
jne
push
loopne
(bad)
stc
xchg
pusha
sub
adc
ja
sub
adc
pop
dec
movntps
or
jbe
jae
xor
adc
push
jp
mov
in
sbb
mov
xchg
fild
scas
xor
inc
scas
push
and
sar
ja
(bad)
fadd
movs
imul
(bad)
rol
add
out
nop
scas
add
dec
fwait
ja
sub
pop
jmp
sub
or
adc
ss
add
das
push
outs
and
add
aaa
ja
and
or
adc
rol
cli
sub
fild
popa
and
inc
inc
ret
sbb
jp
cwde
dec
pusha
and
out
xchg
cdq
xchg
cli
xor
xor
pusha
xor
ss
or
add
mov
push
dec
mov
fsub
sbb
ret
daa
push
push
pusha
jmp
or
add
jmp
sbb
pop
mov
add
or
add
mov
xlat
and
dec
and
mov
lds
cmps
mov
inc
sub
shl
xor
pop
outs
pop
daa
pop
pop
out
or
or
push
sub
aas
adc
jns
add
cmp
cmp
dec
fist
jmp
and
xor
add
sub
jo
mov
lahf
fild
ret
xor
out
push
mov
movaps
mov
mov
mov
jmp
sbb
icebp
iret
movs
stos
jo
adc
jmp
test
test
sti
mov
adc
dec
and
adc
adc
call
test
jo
dec
dec
xchg
int
mov
hlt
(bad)
push
les
mov
cmp
inc
xchg
push
push
aas
mov
loopne
xchg
pusha
sub
gs
inc
neg
sbb
ficom
call
mov
jb
add
call
jb
mov
xor
cmp
mov
jge
in
mov
leave
mov
jnp
rcr
mov
mov
mov
sub
adc
add
xchg
lock
fild
mov
sub
pop
cdq
pop
inc
js
xor
mov
push
xchg
fdiv
scas
mov
inc
je
jmp
fdiv
and
mov
je
or
dec
ficomp
mov
rcl
push
lea
(bad)
out
nop
(bad)
test
loopne
and
loopne
je
add
add
ret
adc
sub
add
sbb
imul
rcl
prefetch
add
test
or
loopne
dec
arpl
loopne
pop
call
in
aas
inc
sbb
mov
adc
inc
rcl
repz
sbb
scas
dec
inc
sbb
pop
enter
cs
cli
cmp
shl
adc
cwde
shl
ins
pop
push
enter
pop
mov
mov
jo
sar
in
add
test
cdq
mov
xchg
(bad)
repz
push
or
scas
dec
popa
sbb
aaa
stos
pushf
pop
mov
je
lahf
adc
rol
loopne
sbb
stos
jl
fadd
lea
jecxz
mov
dec
test
loope
loopne
xchg
popa
seto
lds
and
add
push
add
push
imul
mov
pushf
pop
loope
mov
mov
xchg
fst
add
inc
jbe
or
mov
add
mov
xchg
inc
sub
rol
pop
fwait
inc
push
add
shr
div
mov
daa
cmp
outs
pop
and
nop
pop
mov
pushf
xchg
sbb
mov
pop
cmp
pop
fnstcw
inc
mov
nop
adc
add
xor
(bad)
nop
xchg
add
sbb
and
ret
nop
mov
inc
dec
mov
fiadd
sub
jae
inc
call
jl
adc
mov
div
(bad)
movs
repz
mov
mov
mov
push
inc
cdq
aad
mov
dec
sub
add
sub
or
adc
or
out
xchg
push
inc
sbb
or
cmp
or
loopne
mov
cld
adc
adc
mov
pusha
sti
mov
xlat
and
sbb
inc
and
repnz
mov
inc
aam
hlt
mov
pop
and
xchg
lock
xchg
inc
sahf
test
outs
and
push
inc
push
mov
ret
iret
or
inc
xchg
push
outs
sbb
and
cmc
imul
push
push
or
and
in
mov
jne
mov
xchg
popa
jo
clc
lods
pop
mov
xor
push
sub
push
lock
add
das
add
jnp
fsubr
and
inc
loope
xor
inc
sub
adc
icebp
xchg
add
shl
cmps
adc
clc
push
sbb
test
jnp
xor
mov
sbb
push
fisttp
mov
imul
add
inc
dec
dec
(bad)
lods
clc
xor
int3
sub
cmp
xchg
add
push
lea
pop
add
add
mov
add
jge
jecxz
and
mov
and
and
and
or
adc
push
xchg
add
push
push
cmp
test
add
aaa
jg
mov
ss
mov
mov
push
fadd
stos
nop
shl
add
inc
iret
adc
sub
or
sti
out
jl
jbe
dec
or
in
sti
cmp
arpl
xor
ss
push
in
adc
jbe
cld
stos
cmc
inc
mov
or
mov
rol
sbb
push
xor
mov
aaa
js
xchg
pusha
in
pop
xor
pop
addr16
adc
xchg
(bad)
xchg
lods
add
in
jbe
or
inc
or
fcmovnb
loopne
adc
add
add
lea
add
sub
jmp
(bad)
ficom
or
fild
ror
xor
pop
loopne
cmp
pusha
xchg
push
xchg
add
inc
or
call
inc
in
xor
jo
jecxz
pop
sub
or
ss
cdq
add
inc
cmps
add
das
sub
ins
push
xchg
pop
scas
inc
sbb
ret
test
loope
and
pusha
(bad)
(bad)
test
xor
cmp
sbb
cli
(bad)
cmp
inc
add
repz
sbb
add
pop
fnstsw
xchg
icebp
movs
add
aaa
xchg
push
add
jmp
mov
loopne
clc
inc
loope
xlat
mov
pop
pop
(bad)
sahf
les
push
sbb
sbb
pop
dec
or
xchg
imul
xlat
inc
lahf
jb
mov
cmc
push
cld
mov
push
or
addr16
inc
out
call
ins
clc
(bad)
jle
mov
test
jl
inc
and
or
movsx
cmp
jne
call
jg
sub
jne
adc
push
hlt
lods
push
xchg
hlt
aas
xor
sbb
sub
in
lea
add
rol
sbb
inc
sti
jo
fcom
mov
or
cmp
(bad)
push
clc
sti
add
arpl
out
mov
mov
jnp
nop
adc
lea
pop
out
and
lock
mov
test
dec
enter
lea
pushf
inc
mov
fcomp
add
je
dec
or
xor
and
popa
and
or
call
test
js
rcr
cmp
xor
dec
push
jns
mov
test
pop
les
adc
push
and
and
sub
or
in
lds
xor
pusha
aad
jmp
add
test
sbb
cmp
mov
fld
into
mov
mov
add
and
leave
loopne
jnp
and
int
call
fwait
mov
dec
jb
cmps
add
in
add
sbb
in
aaa
pusha
mov
or
ret
mov
outs
cmp
cmp
fist
jne
and
call
adc
mov
jae
cmp
sub
imul
sub
or
call
add
or
cmp
call
and
sub
lods
adc
xor
xchg
(bad)
push
or
add
xor
mov
pop
sub
xchg
and
or
icebp
add
and
lds
adc
(bad)
test
mov
retf
sbb
icebp
fmul
aas
jmp
dec
or
test
lock
jmp
imul
xor
xor
js
mov
or
pop
pusha
mov
and
lds
test
push
mov
pop
in
add
sbb
mov
test
sub
and
ret
nop
inc
enter
sub
rcr
cmp
dec
lods
das
loopne
dec
pusha
stc
mov
pop
pop
jbe
mov
inc
(bad)
arpl
sub
cmp
dec
dec
sub
jbe
addr16
int3
sbb
retf
in
icebp
sub
jl
push
out
mov
adc
fcomp
mov
add
ds
retf
dec
into
add
in
jbe
mov
lods
add
or
push
pop
add
fnstcw
jge
pop
das
push
mov
or
int3
mov
pushf
bound
aas
mov
hlt
or
daa
test
das
les
cmp
add
aas
pop
mov
repnz
push
inc
call
movs
add
fiadd
test
sub
cmp
dec
push
mov
retf
and
inc
aad
xor
sub
inc
push
gs
sub
test
fidivr
jne
clc
loope
rcl
and
inc
add
lock
test
in
test
and
(bad)
les
std
js
adc
imul
sbb
adc
or
(bad)
dec
jmp
mov
hlt
lahf
sbb
xor
push
(bad)
jne
xchg
push
sub
(bad)
daa
imul
jae
adc
sbb
ins
push
or
pop
rcl
or
mov
xor
mov
repz
add
add
add
or
retf
push
cmp
ffreep
movs
pop
adc
xor
sub
mov
rol
call
outs
pusha
outs
cmp
sbb
lahf
sbb
(bad)
std
popf
adc
clc
fs
mov
jnp
dec
mov
sub
loopne
xor
ja
cmp
repz
repz
inc
clc
push
push
push
mov
add
rol
pop
sbb
call
in
and
lds
adc
int3
mov
in
shl
jp
add
sub
inc
shr
add
xchg
cmc
pop
cld
inc
adc
add
or
loopne
sbb
mov
push
mov
xor
js
adc
push
mov
stc
sar
mov
adc
inc
adc
inc
popa
arpl
scas
sbb
enter
add
pop
add
jns
mov
mov
ds
outs
fs
sbb
dec
inc
sbb
popa
fadd
inc
lds
add
or
or
test
and
clc
xor
xchg
add
nop
cs
or
xor
pop
sub
or
add
xchg
pusha
and
neg
and
idiv
dec
dec
xchg
mov
jmp
popa
data16
js
xor
in
dec
stos
imul
mov
je
jb
int3
dec
fiadd
push
push
mov
pop
push
movs
je
jne
test
cwde
ja
add
sub
or
xchg
ror
lds
test
inc
popa
jbe
mov
imul
outs
pop
inc
push
add
dec
cmp
dec
adc
jne
mov
push
xchg
mov
and
ret
cs
and
adc
jae
jnp
xor
les
popf
mov
cmp
sub
or
imul
shr
pop
adc
ins
and
ror
pop
pop
aas
adc
or
arpl
inc
ret
outs
je
frstor
cmps
mov
pop
pushf
mov
mov
das
xor
push
mov
push
movs
push
push
stos
pop
inc
pop
xor
adc
adc
or
add
fldl2t
mov
push
add
push
xchg
add
out
dec
imul
adc
push
dec
jmp
jo
or
cwde
(bad)
stos
add
add
(bad)
stos
sub
push
stos
push
dec
mov
xor
aad
pusha
mov
inc
or
imul
push
dec
or
test
add
aad
aad
xor
or
push
stos
add
cmp
xchg
stos
xchg
dec
sub
push
mov
ja
jmp
add
ja
call
and
mov
mov
mov
dec
jmp
loopne
adc
cmp
inc
inc
inc
inc
mov
cs
adc
pop
add
out
adc
dec
push
pop
sub
dec
pop
mov
fsubrp
cmp
das
clc
push
dec
pop
cmp
pop
mov
push
test
loop
cmps
push
push
dec
pop
(bad)
das
outs
and
cmp
inc
and
div
add
fnstenv
not
inc
repz
cmp
nop
mov
sub
fiadd
in
add
js
dec
jno
psubusw
dec
dec
add
(bad)
and
pop
imul
cwde
jb
test
mov
imul
ins
add
push
and
shl
sar
sub
jecxz
rol
cmp
adc
jns
mov
rol
adc
arpl
lods
bound
mov
mov
sahf
sahf
sub
cwde
mov
push
add
push
gs
xchg
or
cmp
sub
outs
mul
add
pop
mov
add
adc
or
mov
ret
add
lds
add
mov
pop
jnp
adc
sbb
pop
out
dec
jmp
loopne
addr16
dec
push
imul
mov
mov
adc
add
cmp
sub
inc
dec
mov
pop
push
out
into
cmp
pop
movs
outs
add
pop
hlt
add
inc
pop
sub
repz
mov
bound
lods
fistp
popf
int3
call
jp
into
fisttp
stc
mov
jnp
mov
inc
rcr
mov
push
or
popa
mov
inc
shr
js
push
ins
in
fist
rol
outs
daa
push
cmp
mov
add
and
xchg
jno
mov
dec
es
dec
mov
(bad)
out
and
call
dec
add
cwde
ja
push
inc
mov
(bad)
xor
adc
jne
inc
mov
push
adc
adc
xlat
mov
clc
cmp
inc
jne
sbb
enter
inc
jg
mov
push
jge
xor
push
lea
inc
sbb
ins
pop
pushf
adc
sar
cmp
and
push
fisubr
dec
add
mov
sahf
xor
and
idiv
test
cld
imul
sbb
and
add
in
dec
cwde
fsub
xor
mov
jle
js
and
in
data16
mov
and
push
in
or
in
pop
in
mov
pop
pop
and
dec
pop
and
mov
or
inc
je
jo
enter
outs
inc
sbb
mov
clc
pop
retf
and
sub
popa
adc
jg
lods
into
xor
cdq
cmp
mov
fs
xchg
lock
dec
add
sbb
clc
pop
cld
repnz
sub
pop
xor
push
mov
adc
inc
xchg
pop
pop
in
retf
and
pusha
cmp
jb
fs
sbb
mov
nop
ins
or
loopne
jbe
inc
cmp
sub
das
out
call
cld
jge
add
add
pop
dec
jmp
add
shl
mov
jns
ds
inc
inc
mov
push
inc
push
adc
push
mov
mov
and
sub
test
push
or
(bad)
fwait
and
fs
inc
add
nop
cmp
out
push
js
adc
pop
repz
ja
icebp
mov
jo
nop
fs
cmp
adc
and
dec
clc
sub
aaa
shl
loope
adc
cmp
jg
push
leave
and
das
clc
inc
lock
outs
ja
daa
popa
and
cmps
jne
sub
pop
mov
sbb
out
push
ret
push
pop
push
push
mov
neg
xchg
out
sbb
and
xchg
push
pop
push
sub
add
aam
xchg
dec
xchg
add
xlat
aas
jl
adc
and
pop
mov
or
sub
cmp
sbb
cmps
mov
pop
mov
mov
nop
mov
mov
ret
nop
cmp
inc
sub
push
xor
inc
clc
(bad)
inc
pop
pop
sub
fild
or
add
dec
push
add
jne
loop
mov
int3
je
loop
cmp
mov
adc
or
sar
dec
and
sub
sbb
pop
pop
sbb
(bad)
cwde
adc
mov
pop
xlat
or
mov
(bad)
cmp
mov
nop
pop
inc
and
pop
cmps
nop
and
inc
xchg
out
add
inc
xchg
and
out
push
add
pop
or
orps
and
and
push
mov
xchg
pop
add
sbb
push
mov
push
add
test
add
daa
inc
pop
rol
sub
cmp
mov
or
add
and
js
les
popf
fs
or
xchg
add
and
add
test
or
ret
test
dec
inc
jbe
jmp
push
mov
inc
push
pop
push
outs
je
inc
mov
jo
(bad)
push
lods
and
add
imul
ins
ins
dec
dec
dec
dec
outs
outs
push
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
push
pop
pop
jno
dec
dec
pop
pop
pop
cmp
inc
and
test
aam
add
mov
ss
rcl
arpl
dec
and
xor
add
(bad)
pop
xor
sbb
jae
loopne
inc
sbb
sbb
jns
xor
or
push
mov
xlat
xor
adc
add
or
ins
pop
xor
ins
shl
xor
sub
daa
inc
add
mov
xor
push
out
mov
imul
popa
(bad)
aas
mov
mov
bswap
or
ret
mov
mov
or
jns
pop
and
mov
clc
xchg
ins
popa
cld
addr16
imul
pop
mov
cmps
sub
mov
(bad)
pop
or
ins
or
gs
pop
sbb
ins
pusha
dec
adc
xor
cmp
sbb
and
shl
xor
add
sbb
pop
sub
adc
int3
adc
outs
pop
lock
aam
fisubr
test
add
inc
or
inc
iret
pop
sub
lock
cmps
sub
mov
jle
std
or
dec
dec
inc
push
iret
pop
sub
and
arpl
cmp
cmovb
loopne
cmps
pop
leave
dec
imul
push
jge
inc
ins
(bad)
gs
fild
cmp
and
sbb
fdiv
ja
cmc
aad
pop
dec
dec
inc
add
fs
add
(bad)
and
frstor
and
mov
mov
add
pop
adc
and
mov
pop
xor
test
jns
gs
pop
ins
(bad)
push
xor
ja
inc
pop
push
push
adc
xlat
pop
xor
loopne
and
jg
pop
sub
push
jo
rdmsr
jg
dec
add
dec
or
lock
jae
iret
pop
sub
pop
inc
ins
add
outs
add
inc
jo
pop
in
jmp
inc
push
rcl
jg
gs
pop
sub
cmp
nop
addr16
loopne
outs
pop
cwde
setle
sbb
cwde
sbb
adc
or
lods
aam
jge
leave
es
imul
cmp
nop
neg
pop
pop
pusha
pcmpgtd
push
push
mov
sbb
pop
push
sub
pop
and
sub
push
rol
ss
ins
add
jp
xlat
pop
xor
in
mov
imul
rcr
push
pop
iret
or
xchg
pop
sub
adc
nop
push
rcr
setle
cwde
stos
loopne
sbb
jo
add
shl
loope
loope
outs
mov
or
cmp
out
pop
adc
inc
nop
push
pop
jae
sbb
pop
punpckhdq
mov
mov
arpl
(bad)
mov
jg
pop
imul
and
sbb
jmp
inc
xor
ins
out
in
add
xor
sbb
jnp
dec
push
push
push
dec
loopne
mov
dec
or
sub
jl
mov
inc
dec
fild
or
imul
sub
bound
cld
xchg
aam
add
push
loopne
sub
arpl
or
jo
ins
lock
jo
add
or
xor
mov
inc
pop
(bad)
or
add
or
add
dec
mov
shl
push
inc
adc
out
sti
cwde
xchg
inc
sub
loope
das
or
cmp
in
aaa
xor
push
inc
dec
inc
pusha
aaa
imul
mov
clc
imul
mov
pop
outs
popa
dec
es
das
imul
aaa
mov
adc
aas
dec
sub
jl
push
leavew
dec
mov
add
jb
nop
pusha
or
pop
retw
icebp
stos
or
cmp
out
nop
cmp
test
fild
push
or
ucomiss
push
pop
daa
int
or
mov
add
out
mov
pushf
mov
movs
loopne
(bad)
fmul
dec
mov
push
inc
pop
mov
inc
sub
mov
nop
push
mov
mov
push
jb
gs
aaa
sbb
mov
test
add
and
mov
add
test
and
movs
popa
lock
mov
push
mov
in
(bad)
icebp
xor
addr16
jno
cmp
pop
test
data16
test
popa
add
adc
aad
out
cmp
dec
sbb
imul
sbb
cmp
or
cmp
add
leave
sbb
pusha
les
movs
xchg
or
mov
enter
loopne
fadd
jge
test
aas
and
cwde
js
sub
jae
loope
shl
test
or
fsubr
or
cmps
pcmpeqw
mov
inc
cmovg
bound
mov
sub
jmp
mov
jnp
xchg
pop
or
sbb
mov
imul
ins
aaa
icebp
cmp
mov
push
xor
xor
stos
add
test
push
push
sar
sub
jmp
sub
jo
int
or
div
sbb
push
jo
or
gs
pop
adc
mov
mov
or
mov
adc
pop
xor
fincstp
push
mov
fs
cmp
pop
sar
xchg
inc
mov
or
add
jle
add
(bad)
push
in
pop
jg
aam
push
clc
icebp
jmp
lock
xor
into
out
fdivr
add
or
cld
not
test
cs
jnp
push
adc
dec
push
push
push
fdivp
fsubrp
jl
push
cmps
sub
mov
shl
push
clc
idiv
inc
and
mov
mov
mov
add
mov
sbb
loop
inc
je
and
nop
sub
pop
data16
pop
add
mov
sbb
xchg
or
es
out
inc
lds
pop
out
xor
inc
clc
cmp
pop
dec
sti
icebp
add
jne
xor
out
mov
adc
ss
cmp
push
rcl
data16
add
icebp
dec
or
inc
sbb
and
pop
xor
loopne
ins
adc
pop
or
inc
jne
or
enter
fbld
fwait
std
jnp
ror
sbb
cmp
mov
mov
push
js
cmp
fisubr
in
pop
add
add
xor
jo
(bad)
mov
push
jns
mov
mov
jp
sbb
pop
mov
lock
outs
mov
push
jnp
inc
ja
retf
or
inc
mov
adc
ds
rcl
inc
add
push
push
imul
ins
pop
jl
or
test
add
adc
pop
bts
mov
xor
popa
lods
test
out
nop
jnp
add
bound
les
pop
push
xchg
lock
pop
je
and
inc
aaa
lods
mov
rcl
adc
daa
fadd
cmp
mov
dec
xchg
sbb
push
addr16
lea
jo
ret
adc
and
xlat
std
add
dec
dec
adc
dec
test
fld
add
jmp
ror
imul
pop
jp
xor
mov
add
dec
jne
adc
push
fcom
in
call
mov
add
inc
push
and
pop
mov
jo
aas
xor
sahf
add
or
js
sub
mov
pop
lea
lds
mov
mov
pop
cmp
push
shl
xor
and
xor
rol
adc
(bad)
fstp
fadd
inc
outs
inc
inc
(bad)
mov
leave
mov
div
add
es
jp
imul
add
adc
add
imul
sti
mov
inc
adc
inc
dec
cwde
fld
sub
inc
dec
mov
gs
js
ins
adc
inc
sbb
jo
xchg
add
xor
popa
jo
push
xor
add
arpl
mov
addr16
push
cmps
inc
fcom
push
inc
add
add
pusha
add
inc
cmovl
cmp
fs
imul
or
adc
ds
test
adc
sub
leave
cmp
js
test
add
or
push
or
jnp
pop
repz
cwde
xchg
ds
sbb
adc
add
arpl
mov
push
adc
rcr
or
jl
xchg
inc
push
scas
sub
arpl
mov
outs
test
imul
pop
addr16
sub
and
rcr
test
std
in
push
mov
test
add
add
xchg
or
xchg
inc
dec
or
(bad)
inc
and
adc
adc
pminub
dec
or
mov
push
pop
jge
jo
xor
or
pop
xor
lods
mov
rcl
fs
xchg
pop
add
arpl
xchg
xchg
sar
sbb
xchg
xchg
xchg
xchg
data16
xchg
stc
sbb
add
adc
repnz
adc
sbb
sub
adc
les
sub
sbb
cmp
sub
test
mov
push
shl
mov
pop
adc
stos
and
pop
sub
push
push
push
jne
(bad)
xchg
mov
lods
(bad)
fldenv
adc
jo
or
push
imul
(bad)
xlat
imul
pushf
ins
push
fimul
jmp
dec
mov
cmp
jne
call
lahf
or
movups
mov
inc
ins
jo
push
sti
jmp
arpl
sbb
arpl
adc
or
loopne
jmp
add
sbb
call
mov
outs
div
int3
es
sbb
call
stos
ss
lods
dec
lahf
out
test
push
into
dec
loopne
add
dec
add
and
or
push
push
aam
scas
or
fist
faddp
cmp
adc
neg
mov
xor
push
dec
lods
out
xor
mov
or
outs
mov
cs
mov
js
outs
rol
xor
add
or
jo
cmp
jns
sub
loopne
or
inc
shr
movs
adc
xor
sub
dec
sbb
xchg
js
adc
push
sbb
inc
add
shl
sbb
(bad)
pop
fwait
add
cmp
loope
add
or
aam
push
rcr
adc
inc
add
xchg
push
pusha
stos
ja
pop
xor
pop
pop
mov
fiadd
popa
mov
fs
add
pusha
adc
push
xor
pop
jne
push
mov
mov
cmp
cmp
or
rol
sete
dec
cmp
add
sar
repz
test
nop
setbe
stos
inc
xor
pusha
jg
xchg
out
xor
dec
inc
fbstp
mov
and
sub
fisttp
loopne
push
or
je
cmp
or
add
xlat
inc
and
(bad)
jo
or
adc
je
xchg
daa
or
or
or
shr
jmp
das
sbb
add
or
ins
fisttp
out
dec
add
push
xchg
xchg
(bad)
clc
data16
ror
add
ins
mov
idiv
cwde
push
sub
clc
mov
es
sbb
std
(bad)
sbb
add
outs
int
sub
outs
or
mov
sbb
cmp
add
icebp
sub
rcl
sub
nop
pop
jo
mov
sbb
ret
push
sti
or
mov
or
push
lds
(bad)
repnz
sub
(bad)
sbb
pop
sub
retf
rcl
es
push
retf
sbb
push
mov
pop
inc
mov
pop
popa
bound
rcr
mov
retf
xchg
pop
(bad)
cdq
xchg
fwait
xchg
das
jo
mov
add
pop
mov
aaa
clc
xchg
add
push
(bad)
mov
add
pop
leave
clc
xchg
dec
leave
daa
or
cwde
mov
xchg
xchg
xlat
lock
enter
xchg
or
enter
mov
add
lods
(bad)
and
xlat
jge
call
add
fimul
call
inc
or
jae
jmp
mov
ins
jmp
movs
add
sub
int
add
push
jmp
call
popa
es
jg
clc
je
or
pop
pop
push
adc
cwde
or
mov
mov
inc
dec
shl
mov
or
lea
mov
or
stos
mov
mov
or
mov
add
mov
imul
push
push
sbb
daa
jmp
xor
pop
add
jns
inc
dec
cmc
mov
cmc
adc
(bad)
jo
pop
jae
out
mov
popf
aad
jo
sub
pop
and
sbb
push
mov
mov
addr16
push
enter
cmc
or
xor
add
pop
pop
sbb
sbb
ror
xor
and
daa
add
adc
(bad)
mov
lods
loope
loop
jae
fmul
mov
or
pop
xchg
cmp
js
xor
sbb
xor
je
pop
and
popf
daa
dec
jb
jns
lea
ss
mov
lock
loopne
mov
push
sub
mov
inc
xchg
les
sbb
daa
(bad)
(bad)
push
sub
mov
jg
loope
and
loopne
add
mov
cmp
stos
enter
adc
shl
pop
test
dec
jp
dec
sahf
test
adc
(bad)
stc
fs
jno
sbb
les
inc
rol
(bad)
cmp
jp
mov
dec
gs
aam
out
mov
ja
(bad)
dec
cmps
cmp
inc
push
mov
nop
inc
test
xchg
popa
adc
ret
(bad)
jno
adc
(bad)
icebp
pop
aad
mov
outs
dec
or
fldcw
test
daa
call
push
jo
test
test
stos
adc
out
xchg
adc
test
jno
cmp
add
xchg
popa
cmp
js
je
dec
push
pop
fistp
push
xchg
jo
aam
xlat
sub
pushf
mov
movs
jecxz
fcom
std
clc
push
sbb
pop
inc
pop
sbb
out
punpcklbw
imul
xchg
mov
inc
mov
int
ss
daa
xchg
push
fsub
sahf
xchg
das
mov
mov
jmp
push
out
or
ret
into
jbe
iret
pop
sbb
loop
push
out
pushf
cdq
hlt
mov
xchg
push
call
nop
cmp
xchg
and
fwait
and
add
xor
cwde
cli
add
dec
rcr
test
cdq
mov
xor
jmp
sub
add
leave
dec
add
call
sar
mov
mov
pop
fnstcw
push
repnz
xchg
movs
iret
push
and
or
jp
pop
enter
fimul
jo
push
xchg
je
mov
xchg
out
push
and
mov
cmp
mov
ret
out
mov
or
push
rcl
add
outs
outs
je
and
in
cld
fstp
mov
sbb
outs
jne
ja
ins
push
movs
imul
dec
sbb
fwait
loope
xchg
cmps
cli
xchg
ss
(bad)
add
dec
dec
inc
pop
dec
mov
test
adc
lods
push
dec
mov
mov
xchg
inc
add
ins
xchg
jo
cmp
lods
add
shr
pop
fnstcw
data16
or
or
sub
cwde
mov
mov
xchg
add
or
push
icebp
mov
call
mov
ss
loopne
scas
mov
bound
std
idiv
sbb
adc
ja
call
(bad)
cmc
dec
sar
xor
clc
push
inc
cdq
push
cwde
push
aas
add
icebp
lea
push
test
lahf
lods
jmp
fidiv
add
or
sbb
movs
movs
dec
in
mov
mov
(bad)
cwde
cmp
hlt
pop
sub
hlt
repz
cmp
and
sbb
mov
cdq
rol
cdq
retf
ret
jno
aas
pop
(bad)
in
add
push
stos
push
sbb
loop
ret
in
lods
adc
pop
push
daa
pusha
or
lahf
lahf
out
dec
pop
xor
inc
and
outs
push
lods
adc
sub
mov
call
and
cmp
push
xchg
cmp
shr
call
mov
add
outs
cmp
pop
add
mov
dec
lea
movs
add
mov
call
out
adc
push
sub
in
jnp
push
push
or
clc
dec
shl
and
ret
adc
or
sub
xor
sub
nop
lahf
leave
xor
aam
jbe
popa
add
add
jne
push
ins
jmp
in
shl
pop
xor
hlt
popa
fcomp
hlt
loop
in
mov
or
call
mov
fcomp
loopne
push
fidivr
push
inc
les
pusha
lods
add
push
mov
leave
sbb
push
mov
push
dec
in
xor
lea
(bad)
test
mov
ja
aas
sbb
lahf
sbb
xchg
or
and
push
movnti
inc
or
popa
pop
sbb
push
in
and
movs
dec
and
cmp
fdiv
fdiv
xchg
push
or
and
mov
adc
mov
out
or
call
std
and
adc
out
add
rol
mov
shl
mov
xlat
in
inc
add
cmp
add
mov
movzx
xor
and
mov
or
jp
xchg
add
ret
pop
(bad)
cmp
stc
sub
inc
ins
lahf
popa
(bad)
faddp
pop
clc
movzx
ret
aas
mov
and
cmp
jl
cmp
or
jl
sub
shl
enter
add
mov
shl
data16
ja
mov
xchg
push
jmp
rol
mov
(bad)
mov
add
test
jns
or
cli
add
ins
fstp
add
mov
sar
daa
cmp
add
sbb
pop
xchg
inc
adc
cmp
dec
add
xchg
je
mov
fs
les
test
mov
shl
and
cld
into
ss
mov
xor
aam
xchg
xor
ret
xor
and
(bad)
and
cwde
test
jo
cld
lea
sbb
xor
xor
xchg
xchg
mov
xchg
cdq
aaa
lock
ret
daa
lock
(bad)
xor
and
mov
xor
add
xor
les
lea
and
aaa
adc
add
add
dec
jne
imul
push
out
or
lock
xchg
mov
and
sbb
pop
or
outs
pop
inc
add
mov
dec
inc
cmp
cmp
mov
aaa
xchg
xchg
mov
sub
pcmpgtb
pop
xor
scas
lea
pop
cmp
mov
inc
or
or
or
jmp
push
outs
xchg
addr16
sub
rcr
daa
or
ins
dec
sub
lds
mov
or
stc
dec
call
loope
add
add
sar
(bad)
sub
das
xor
mov
pop
dec
pushf
test
add
and
mov
pop
or
mov
sbb
shl
mov
adc
ficom
push
push
mov
arpl
and
dec
cmc
ss
inc
aam
add
js
xchg
jmp
arpl
xchg
mov
adc
mov
sti
jg
lods
jno
mov
jno
adc
cmc
dec
mov
mov
add
test
pop
sbb
cmp
pop
mov
adc
rol
add
mov
add
jbe
arpl
fsubr
je
xor
js
fimul
cli
or
push
push
sub
dec
int3
(bad)
ret
pop
jbe
lods
xor
pop
jmp
mov
sub
rcr
sub
hlt
xchg
xchg
and
icebp
cmc
xchg
jmp
cmp
in
xchg
popf
sub
popa
pusha
fcomp
mov
push
pop
inc
add
pushf
nop
rcl
adc
or
or
lahf
jle
mov
clc
or
pop
pop
daa
test
mov
add
in
jl
mov
das
std
mov
mov
cmp
jge
mov
lea
mov
ret
add
add
lds
xchg
cmp
sub
ret
pop
pop
xlat
xor
std
jbe
dec
xchg
dec
adc
mov
sbb
pop
pop
or
mov
push
mov
sbb
push
push
or
inc
adc
sahf
iret
lahf
add
dec
push
ror
shl
add
lds
add
mov
jnp
aaa
mov
stc
sub
add
mov
add
out
fld
pusha
add
lea
or
add
jnp
pop
clc
ss
cmp
ret
ja
enter
(bad)
pop
ror
xchg
jge
and
cmp
lock
(bad)
or
xchg
or
ror
iret
mov
xchg
aas
and
inc
and
and
and
xor
call
push
pop
xor
add
fcom
fmul
pop
push
add
xchg
add
imul
and
xor
mov
imul
jne
psubusw
dec
xor
xor
and
xor
mov
cwde
add
xor
or
inc
adc
mov
sbb
add
das
jnp
imul
shl
xchg
rcl
sbb
out
xor
and
mov
gs
and
inc
jae
call
jnp
adc
ficomp
pop
jne
xor
xor
imul
xchg
xor
cld
(bad)
shl
mov
in
adc
fstp
jmp
jnp
adc
fnstcw
aaa
sub
pop
add
jmp
adc
mov
in
and
loope
retf
fwait
xchg
scas
jbe
mov
inc
(bad)
jne
add
jmp
and
sub
inc
aad
push
daa
push
movs
pop
gs
cmp
stos
call
xchg
adc
aam
mov
jmp
dec
mov
mov
inc
xor
imul
daa
rcr
mov
dec
jne
mov
lahf
push
cdq
dec
xor
and
dec
adc
cmp
add
scas
inc
adc
xchg
fist
sub
inc
push
sbb
jnp
test
std
xor
add
retf
test
test
popa
loop
push
add
retf
jp
adc
call
sub
(bad)
and
mov
aam
mov
std
lods
push
in
push
or
and
sbb
mov
adc
inc
mov
and
mov
add
cwde
inc
or
bound
push
fldcw
mov
fdivr
add
add
mov
pop
fs
inc
jno
or
(bad)
add
adc
and
(bad)
dec
inc
out
ret
jne
js
stos
popa
ret
lea
sub
add
sub
lock
pop
adc
stos
cmps
mov
push
sbb
and
ret
and
cwde
arpl
ret
enter
or
ret
pop
enter
in
and
or
adc
xor
mov
sub
sbb
jbe
add
inc
call
pop
lea
stos
lock
daa
lods
dec
sub
push
jge
dec
mov
add
aad
or
sub
xor
push
xchg
cmc
push
cwde
push
outs
and
js
dec
(bad)
dec
and
jne
(bad)
lock
test
jo
cmp
and
mov
lods
popa
add
movs
adc
or
rcr
es
dec
sbb
ss
cmp
jne
or
or
loope
or
retfw
idiv
std
add
mov
es
push
mov
pop
add
add
add
jb
sbb
retf
pop
adc
int
mov
pop
adc
pop
push
mov
or
pop
sbb
aaa
int
sbb
sbb
mov
in
loope
mov
mov
retf
mov
sub
aam
push
add
push
fild
shr
xor
and
adc
sub
lock
iret
add
lds
(bad)
inc
loopne
ret
pop
les
add
dec
clc
xor
retf
ret
push
imul
inc
dec
pop
add
cmp
or
add
out
(bad)
neg
xor
add
mov
lea
loope
neg
sar
inc
mov
jo
mov
and
call
sub
push
(bad)
xor
jp
sub
jmp
inc
sbb
xchg
push
sti
mov
add
xor
jb
retf
add
add
shl
cmp
jle
cmp
test
imul
popa
add
sub
jecxz
test
mov
add
xor
mov
mov
xchg
int3
jmp
sbb
inc
pop
inc
dec
aaa
xchg
xchg
ror
pop
fcom
mov
xor
xchg
rep
sbb
dec
lock
add
shl
popa
inc
cmp
dec
ins
(bad)
jmp
rcl
imul
mov
adc
pop
mov
sbb
pop
popa
and
test
mov
add
mov
jp
jno
dec
push
add
xor
push
imul
pop
test
test
iret
movs
test
cmp
adc
adc
or
mov
test
lahf
mov
inc
das
push
test
sbb
add
or
jl
or
push
ror
sub
dec
stos
out
sbb
rcl
jmp
inc
mov
add
adc
les
(bad)
pop
jne
push
icebp
or
(bad)
cmp
cmc
xor
fimul
pop
data16
xlat
inc
push
shr
mov
sbb
sbb
sub
sbb
in
fcom
mov
cmp
loope
pop
and
xor
inc
bound
adc
sbb
add
jle
add
call
mov
mov
data16
add
jg
imul
push
or
(bad)
mov
push
push
cli
ds
lea
mov
inc
sbb
add
outs
movs
xor
cmp
call
cwde
sbb
fwait
jl
sub
adc
idiv
jbe
pusha
push
mov
sbb
mov
pop
dec
cmp
mov
mov
push
or
mov
inc
and
mov
dec
cmp
xchg
push
inc
dec
pop
wrmsr
mov
mov
in
rcr
fwait
xchg
ret
aas
ss
jne
inc
fmul
mov
mov
mov
outs
and
push
cmp
sbb
les
(bad)
mov
sub
adc
and
pop
in
dec
jnp
ja
push
pop
jbe
fcomip
mov
cdq
hlt
test
jae
mov
jecxz
push
in
aad
push
test
add
dec
add
dec
add
xchg
cmp
popa
add
mov
les
loope
les
mov
jmp
sub
das
sub
cmc
pop
add
pop
xchg
adc
sbb
jmp
dec
add
adc
mov
or
adc
dec
cmp
es
ds
add
sub
cdq
sbb
add
mov
mov
pop
pop
xor
jl
pop
jo
cmps
fsubr
cmp
jne
mov
and
ret
test
add
outs
(bad)
or
retf
data16
loopne
jp
mov
mov
cmp
fadd
test
es
push
push
xchg
out
(bad)
fiadd
icebp
dec
add
inc
add
mov
test
into
les
or
iret
pop
add
sub
sbb
add
add
push
push
jae
pop
shl
or
outs
sti
cs
mov
or
dec
dec
jmp
inc
idiv
dec
inc
add
loop
push
les
push
mov
icebp
xor
ret
add
cmc
das
mov
bndstx
ret
sbb
or
mov
mov
jge
sbb
div
pop
and
dec
or
push
or
pusha
mov
pop
pop
pop
mov
fsubrp
push
cmp
dec
sub
jb
adc
jl
ret
mov
or
ja
push
xchg
jnp
or
in
or
outs
popa
movs
push
add
mov
pop
sub
ja
push
pop
shl
jmp
push
adc
push
mov
or
clc
(bad)
xchg
mov
inc
xor
lds
xor
loopne
call
push
(bad)
adc
ins
cmp
je
cmp
push
ja
mov
sbb
and
dec
add
nop
xchg
pusha
jnp
outs
scas
nop
pop
(bad)
xor
(bad)
xor
cmp
push
enter
jno
jae
mov
loopne
jo
lock
shr
xchg
dec
sub
xchg
add
js
add
sar
fbstp
jne
inc
inc
not
dec
sbb
in
mov
lods
nop
pusha
(bad)
or
aam
scas
enter
dec
xor
pusha
lea
push
inc
repz
push
cmp
fld
ror
out
push
sbb
movs
fs
add
mov
xlat
call
xchg
adc
jnp
std
shl
pop
loopne
cmp
pop
pop
pop
inc
daa
dec
mov
rol
add
mov
sbb
(bad)
xor
add
sub
data16
ja
dec
push
and
scas
adc
sub
pushf
fcomp
sbb
pop
adc
pop
aas
xchg
sbb
pop
mov
push
data16
retf
shr
mov
jge
pop
rol
jb
inc
es
dec
adc
xchg
aaa
or
enter
inc
inc
push
mov
cli
loop
shl
loopne
sbb
adc
pop
push
fdiv
in
mov
fbstp
mov
(bad)
sbb
sub
shl
xor
dec
fs
pop
imul
jns
loopne
call
enter
push
xor
xor
sub
or
jg
mov
inc
xor
cmp
cld
sbb
push
ror
mov
sbb
lock
js
das
mov
(bad)
movs
push
fwait
add
dec
jne
mov
pop
pop
pop
addr16
fadd
and
scas
mov
push
sbb
clc
xchg
movs
lea
xchg
xchg
jmp
or
push
scas
(bad)
cmp
jle
mov
xor
mov
inc
xlat
sub
cmps
mov
xor
imul
dec
clc
inc
mov
movs
js
cmp
fwait
lea
shl
adc
sbb
inc
xor
inc
cmp
or
add
push
push
or
and
dec
shl
mov
dec
test
leave
or
je
inc
inc
cmp
dec
pusha
or
es
popf
stos
mov
lds
jecxz
cmp
call
inc
pop
mov
es
das
or
ret
and
xor
mov
icebp
mov
rol
xor
xor
add
call
dec
sahf
inc
inc
(bad)
or
nop
or
stc
repnz
add
add
sub
or
mov
or
mov
or
mov
fadd
jno
or
dec
clc
inc
clc
sbb
push
fdivr
mov
cmp
jp
into
mov
test
and
and
add
jmp
lock
ins
lock
mov
pop
sar
test
adc
dec
add
out
dec
adc
je
or
and
cmp
cmp
jo
fsubr
scas
mov
cmp
and
push
shl
push
xchg
clc
or
push
mov
push
push
fsub
fadd
pop
aad
popa
pop
adc
mov
add
mov
dec
add
fistp
data16
sbb
add
dec
cmc
xor
xor
jge
push
loopne
sbb
push
sub
sbb
mov
cmp
jmp
pop
mov
add
ret
push
jo
cld
adc
adc
adc
jp
call
mov
xor
cmps
add
and
jge
ret
fsub
mov
lock
aam
adc
sbb
loop
mov
xchg
push
jns
into
mov
pop
fistp
cmp
xchg
jmp
and
test
push
jne
call
loop
adc
lea
add
lea
jns
cmp
pop
push
inc
es
pop
sbb
adc
and
cmp
popf
xor
cmp
sub
add
add
cmp
jl
add
test
cld
inc
dec
sti
push
or
imul
add
or
push
leave
xchg
push
add
xchg
mov
ror
sbb
add
sub
leave
add
add
cmp
mov
imul
lock
mov
jo
xchg
inc
mov
sub
jmp
mov
imul
test
fisubr
test
push
rol
stc
ror
pop
jbe
bound
and
jmp
sbb
dec
push
jmp
mov
mov
repnz
stos
push
mov
clc
inc
sub
shl
ret
dec
dec
add
add
sub
mov
jle
bound
add
(bad)
and
vmread
in
(bad)
mov
test
push
(bad)
sar
cs
in
ror
add
cmp
hlt
and
add
inc
and
clc
dec
or
inc
cmp
push
jg
ror
js
xor
sbb
sar
push
lds
movs
in
add
fild
dec
mov
push
cmpxchg
adc
nop
mov
mov
add
in
sbb
ds
jecxz
or
xchg
mov
mov
dec
lods
ret
add
push
cs
test
mov
xchg
popf
inc
daa
jne
pop
movs
cld
pop
jne
rcl
push
xchg
or
jge
scas
push
add
lods
call
add
dec
cmp
jg
rcl
sub
leave
cmp
add
or
cmovae
xchg
pop
pop
ret
xor
mov
mov
sbb
ret
out
pop
repnz
adc
push
jl
jle
sbb
xor
cwde
jae
fisub
into
imul
jno
retf
inc
iret
mov
cmp
mov
push
aam
or
adc
fcomp
loop
nop
(bad)
cmp
sub
xchg
enter
les
adc
mov
aad
pop
scas
pop
test
ins
ret
add
je
push
adc
mov
enter
int3
(bad)
stos
add
popa
add
sub
xchg
das
nop
in
lds
xchg
mov
push
push
pop
jns
rol
fwait
dec
shl
cmp
fisubr
cld
push
fist
inc
or
push
dec
push
push
push
jmp
int3
sub
pop
lock
push
pushf
cmp
rol
or
sub
mov
imul
adc
inc
or
ret
mov
fdiv
aam
sbb
xor
sub
ins
cmps
lock
sub
add
dec
push
mov
sbb
and
dec
fs
mov
dec
xor
inc
loopne
adc
mov
(bad)
cdq
mov
cmp
test
jo
adc
dec
sbb
sub
jo
xchg
imul
in
cmp
mov
js
mov
add
jge
add
mov
xchg
xchg
pop
loopne
xchg
in
jmp
mov
inc
retf
loopne
sub
inc
cmp
lods
je
adc
fstenv
jno
mov
push
inc
lea
or
inc
or
jb
push
sub
pop
mov
push
add
and
jno
sub
push
imul
add
sub
rol
add
sbb
xchg
imul
daa
mov
fcomp
add
pop
jne
inc
or
xor
aas
lea
mov
mov
sbb
add
shl
mov
add
rcr
js
and
jb
sbb
dec
scas
(bad)
or
xchg
add
add
push
adc
daa
call
ror
stos
or
add
push
xchg
mov
dec
test
cmp
adc
lahf
scas
and
and
or
mov
inc
and
lods
loopne
jp
shl
inc
in
shl
scas
xchg
test
pop
cmp
sbb
call
shr
jecxz
or
mov
mov
pop
jbe
and
shl
loope
sbb
push
jae
sbb
mov
pop
cdq
add
lock
mov
jmp
pop
addr16
lea
inc
lds
dec
or
clc
or
mov
and
pusha
sub
stos
lods
or
and
fs
jg
adc
push
fsub
rol
xchg
ja
test
adc
and
in
out
sub
jo
jne
pop
ja
sub
and
mov
and
mov
retf
push
mov
fcom
xchg
pop
addr16
ret
lahf
fld
or
mov
xchg
mov
popa
add
or
int3
adc
ret
mov
retf
lea
retf
aad
in
cmp
xor
ds
fwait
xor
sub
xor
jge
and
int3
pop
inc
pusha
int3
push
push
data16
dec
pop
or
jmp
cmp
neg
push
cmp
fld
sub
aas
pusha
fdiv
add
sbb
sbb
xchg
ss
inc
mov
inc
clc
mov
mov
outs
fild
mov
sub
xor
loopne
sub
pop
add
push
inc
pop
dec
or
mov
dec
les
dec
sbb
push
push
mov
lea
loopne
sub
jae
dec
jnp
sub
jb
push
inc
retf
dec
add
cmp
js
adc
add
add
mov
repnz
popa
pop
fidiv
add
jmp
repnz
xchg
or
push
xchg
jnp
jns
xchg
xchg
sbb
pop
mov
call
adc
mov
add
jae
xor
jmp
sbb
jecxz
mov
mov
sar
sbb
ret
push
push
rol
sub
add
and
sbb
shr
or
jbe
(bad)
dec
cmp
sub
sub
mov
(bad)
cmp
dec
cmp
xor
push
movs
inc
mov
fmul
lods
jo
xchg
lds
adc
adc
sub
sub
test
lods
and
push
aas
nop
iret
add
punpcklbw
jg
(bad)
push
daa
inc
sahf
sub
shl
in
and
pop
cs
mov
mov
adc
adc
ret
call
ja
rcr
pusha
jb
push
inc
cmp
test
sub
add
sbb
sub
iret
lods
pop
ret
mov
mov
cmp
daa
jl
shl
inc
stos
jecxz
inc
loope
mov
or
mov
mov
shr
rcl
dec
or
rol
daa
ror
sub
pop
shl
arpl
jl
cs
and
mov
xor
jle
nop
sub
sub
je
dec
and
adc
mov
sbb
xor
xor
mov
jb
cmp
jno
loopne
xor
xchg
sub
pop
lds
mov
cdq
iret
les
or
leave
ror
bound
popa
sub
adc
test
add
leave
test
ret
cmp
adc
or
(bad)
jmp
and
ret
mov
call
mov
data16
and
mov
lods
and
pop
sbb
pop
lea
mov
lods
cmc
xchg
adc
jmp
add
or
mov
xchg
mov
shl
mov
jmp
js
lods
and
inc
adc
add
scas
mov
ja
mov
xor
stos
sub
mov
(bad)
dec
jne
xor
(bad)
mov
ret
mov
sub
fiadd
jge
das
sub
xor
adc
adc
das
sbb
add
popf
xchg
retf
push
loope
idiv
jb
ss
movs
call
aaa
sub
xor
add
xor
test
jne
mov
iret
add
push
push
add
xchg
rol
repz
cmps
bound
adc
inc
je
(bad)
mov
push
mov
add
mov
xlat
(bad)
fdiv
(bad)
cmps
adc
cmps
or
inc
daa
dec
pop
in
ins
fcomp
adc
pop
jmp
pop
pop
lahf
call
mov
adc
push
popa
je
dec
ja
out
shl
aad
pop
pop
cmp
mov
pop
cs
push
pusha
jg
dec
mov
sahf
(bad)
scas
nop
shl
and
outs
jg
mov
add
add
adc
js
imul
pop
xor
fsubr
inc
pop
pop
xchg
test
aaa
pop
dec
inc
pop
gs
gs
mov
push
fwait
sbb
aam
sbb
mov
jmp
dec
imul
ins
jae
adc
hlt
mov
xor
mov
and
sub
mov
push
and
jbe
stos
idiv
push
adc
int3
sub
pop
les
cmps
dec
and
or
ror
push
lods
(bad)
fisubr
and
sub
pushf
adc
dec
ins
movs
scas
cmps
xor
cmp
lahf
mov
or
lea
xchg
add
scas
pop
popa
fwait
adc
pop
iret
ins
aaa
add
mov
mov
lods
gs
daa
jecxz
pusha
adc
jmp
inc
and
or
or
mov
adc
adc
or
aaa
add
xor
mov
adc
xor
add
push
dec
jle
sub
jmp
jecxz
(bad)
mov
retf
clc
inc
sub
mov
add
mov
sbb
sub
movs
or
cmp
push
mov
je
cmp
je
inc
inc
je
fbld
rol
sbb
xor
xchg
mov
into
add
ror
rol
or
xchg
stos
add
or
add
push
jg
inc
clc
cmp
xchg
add
test
pop
jmp
cmps
or
adc
cmp
sahf
mov
or
cmp
add
fs
call
sbb
add
fnsave
cmp
mov
adc
fild
enter
and
mov
ret
mov
scas
xchg
into
inc
scas
pop
fdivr
sar
ret
sbb
sbb
cmp
add
repnz
push
jecxz
mov
js
pop
mov
jg
lock
sbb
popa
push
and
push
ror
sub
je
sub
pop
fadd
push
sub
je
add
cld
sbb
add
gs
pop
mov
pop
inc
cmp
nop
add
sbb
pop
sbb
adc
mov
xchg
mov
inc
inc
xor
add
nop
es
call
ins
(bad)
aas
call
add
dec
and
loop
mov
add
xchg
adc
imul
push
xor
add
and
sub
jbe
jmp
xor
pop
and
mov
or
sub
cs
and
stos
mov
push
rol
add
lock
sbb
mov
mov
mov
lods
shr
mov
pop
adc
(bad)
mov
add
and
jl
shl
pop
cmp
(bad)
adc
and
pop
add
out
mov
fwait
popa
sbb
mov
jb
and
fdiv
mov
sub
adc
cmp
rol
or
add
sbb
stos
ss
xor
push
mov
xchg
fidiv
sbb
xchg
sbb
fs
fimul
sub
or
pop
jmp
out
pop
dec
in
sub
inc
or
scas
loop
cmp
rol
push
push
adc
sub
mov
inc
ficom
mov
jns
push
add
inc
push
mov
lsl
pop
sub
push
xchg
sub
mov
push
in
(bad)
pop
jnp
push
mov
icebp
cmp
test
or
push
xchg
or
enter
sbb
jl
jbe
mov
data16
inc
out
cmp
cli
pop
ja
cmp
mov
bt
jae
not
pop
(bad)
add
nop
ror
data16
and
xchg
jmp
aad
out
add
inc
or
adc
sahf
xchg
mov
push
adc
push
cmp
je
and
xor
jne
push
cmp
jo
jnp
jbe
xchg
sbb
pop
add
call
adc
ins
push
and
cmp
add
leave
addr16
lock
cmp
sub
dec
ins
xor
inc
adc
cli
shl
nop
dec
popa
jmp
fisub
dec
test
outs
xchg
adc
push
xlat
and
clc
xor
push
test
aaa
pop
jge
push
les
mov
fnstenv
test
jne
sbb
pop
pop
stos
xchg
lods
mov
lea
mov
shl
jnp
mov
lock
jae
mov
cmp
mov
sub
dec
lea
je
ret
icebp
ja
iret
(bad)
add
pop
add
inc
sar
add
mov
push
xchg
sbb
call
call
pop
jmp
pop
sub
adc
inc
movs
pop
xchg
stos
movs
or
or
lahf
pop
xor
(bad)
lea
and
imul
inc
int3
les
dec
ins
mov
adc
add
and
add
push
lea
lea
pop
push
inc
pop
mov
cmp
add
xchg
mov
dec
or
pusha
fisttp
inc
push
dec
add
push
rcr
add
sub
jno
int3
push
out
mov
or
mov
test
sahf
loope
cld
lea
lds
xor
and
rcl
xchg
pop
in
push
out
loop
mov
shr
(bad)
pusha
addr16
aam
sti
and
pop
jo
pop
test
xor
xor
clc
xchg
and
add
stos
in
loope
jnp
inc
add
mov
xlat
fld
fdiv
mov
xchg
fstsw
sahf
jne
das
inc
mov
add
fimul
xchg
aas
jmp
inc
adc
pop
es
arpl
mov
and
mov
pop
push
call
leave
ret
mov
fwait
and
jge
fwait
sub
call
in
les
arpl
push
sbb
jnp
xchg
fadd
dec
push
inc
retf
jnp
test
mov
or
cli
fdiv
rcr
sub
ins
in
cs
sub
sbb
adc
cmp
fmul
outs
xor
ja
push
pop
pop
sub
sti
xchg
jne
retf
add
(bad)
ret
inc
int
shl
jge
mov
aas
lods
cmp
(bad)
jbe
add
and
arpl
fistp
or
sbb
test
push
inc
or
jmp
je
inc
test
je
xchg
icebp
xlat
outs
pop
and
(bad)
push
movs
sub
dec
or
je
mov
jb
shl
inc
les
mov
mov
pop
push
dec
sbb
push
inc
push
or
and
pop
daa
inc
dec
jne
xor
sub
or
sbb
lock
repz
nop
and
dec
xchg
popa
mov
(bad)
jne
lods
popa
test
dec
xor
cmc
jo
outs
ror
bound
add
mov
sbb
jle
dec
ins
mov
test
and
xchg
inc
mov
fist
rcl
dec
lock
in
fs
cmp
fadd
loope
mov
pop
shl
add
ins
pusha
outs
pop
pop
ja
in
jns
xlat
sbb
ror
xchg
adc
mov
or
push
jo
imul
add
jnp
icebp
inc
sub
push
jmp
das
sub
mov
add
sub
int
in
or
push
pop
jecxz
ret
push
xchg
je
xor
mov
adc
xor
pusha
cwde
lea
cmp
sbb
inc
daa
ja
dec
cmp
bound
rol
sub
dec
push
xchg
xor
add
pop
push
adc
sbb
mov
iret
cmp
add
mov
push
ror
or
mov
jecxz
jecxz
(bad)
arpl
adc
scas
sub
das
push
call
add
lds
loopne
jmp
jo
jno
imul
xchg
fwait
sbb
or
aaa
and
cmp
jle
mov
push
xchg
adc
sbb
or
push
add
push
(bad)
push
adc
xor
push
pop
shl
add
shl
mov
icebp
(bad)
ret
jo
nop
jne
test
sub
cmp
sbb
lods
inc
loopne
aas
xor
push
fsub
sub
nop
mov
sub
cmc
adc
sub
(bad)
sbb
jecxz
mov
jne
sbb
fwait
cli
adc
scas
cmp
mov
(bad)
mov
or
inc
push
fild
pop
sbb
cmp
cmp
fdivrp
fstp
mov
lock
mov
adc
ins
lock
fwait
mov
mov
cwde
pushf
or
jne
loop
dec
leave
mov
sub
out
mov
fsub
ss
push
mov
jl
or
add
lea
std
mov
adc
fs
push
clc
ins
xor
pusha
lahf
sub
lea
sub
rol
mov
cmp
or
inc
fisubr
dec
fdiv
enter
ja
lea
mov
in
xchg
jno
mov
push
pop
mov
mov
add
dec
das
or
test
enter
imul
jno
sbb
pop
or
adc
in
scas
or
xchg
jge
add
sti
fst
xchg
pop
dec
imul
push
add
add
jo
mov
mov
shr
push
rol
sbb
std
dec
mov
push
test
or
sbb
mov
mov
pushf
nop
xor
mov
sbb
or
jne
(bad)
jg
push
xchg
mov
cmp
imul
push
jmp
jg
add
lea
pop
les
adc
or
or
gs
mov
mov
dec
add
push
test
mov
push
div
push
ror
mov
mov
bound
jmp
xchg
and
mov
add
push
mov
add
inc
outs
test
fwait
nop
add
ins
imul
add
dec
fst
ret
push
fld
arpl
mov
mov
push
push
or
test
adc
mov
jmp
mov
(bad)
ret
push
dec
shr
mov
mov
fstp
xlat
dec
jp
enter
(bad)
inc
xchg
add
loope
mov
inc
sub
xor
repnz
mov
int3
addr16
dec
loop
cmp
jg
popa
dec
or
call
ret
inc
ret
mov
xor
add
mov
jg
mov
add
shr
and
mov
sbb
ret
jmp
xchg
add
(bad)
popa
adc
xchg
add
cmp
inc
cmp
mov
(bad)
retf
pop
push
mov
sub
sbb
mov
push
mov
test
mov
xchg
enter
mov
enter
adc
mov
jb
add
push
out
std
cld
stos
inc
popf
lods
enter
cld
sbb
into
mov
xchg
add
fld
lea
sahf
dec
dec
push
loopne
mov
add
add
hlt
jmp
or
cwde
mov
mov
add
mov
je
pop
or
outs
adc
push
add
or
jb
cmp
imul
add
(bad)
mov
arpl
popa
push
int3
add
sbb
jns
outs
cmp
add
sub
add
es
mov
sbb
adc
daa
icebp
es
pop
les
nop
sub
addr16
cmp
dec
adc
mov
sbb
add
pop
add
iret
xor
sub
lea
push
push
sbb
sbb
je
inc
ja
lea
call
mov
jmp
push
xor
ss
test
dec
(bad)
mov
cmps
das
or
dec
sub
imul
hlt
sbb
ret
push
push
push
mov
(bad)
imul
fst
pop
div
dec
aam
cmps
sub
cmps
cmp
cld
xor
jns
movs
je
inc
fisttp
loopne
hlt
cmp
or
gs
xchg
test
add
in
mov
xchg
cmp
inc
rcr
push
in
jae
inc
fdiv
sub
or
lea
call
lods
lods
mov
mov
dec
pop
dec
fsub
cmps
add
mov
mov
push
add
call
sbb
mov
dec
add
xor
inc
inc
xor
jo
aam
rcl
aad
adc
pop
ficom
sar
pop
stc
inc
int3
mov
mov
call
in
(bad)
out
arpl
movs
lea
outs
enter
add
cmp
add
push
(bad)
repnz
ror
mov
cmp
fidiv
test
sete
in
pop
mov
(bad)
jle
test
push
in
sub
mov
add
add
pop
cmc
pop
add
push
pop
dec
in
mov
mov
adc
add
or
enter
xor
mov
(bad)
jnp
adc
pop
or
mov
adc
test
cmc
pop
xlat
dec
jmp
cli
mov
bound
in
adc
in
mov
das
arpl
add
and
jmp
pop
inc
aas
pop
xor
dec
adc
xor
aaa
aaa
mov
mov
mov
cmps
add
add
sbb
aam
lock
pop
dec
xor
jo
pop
jo
push
mov
inc
clc
and
nop
push
cmp
jnp
push
adc
mov
(bad)
mov
xchg
nop
into
aaa
dec
sub
jmp
xor
or
dec
imul
sar
mov
lock
add
ja
push
jl
and
fs
aas
mov
push
sub
leave
pop
jmp
xor
and
adc
lock
xchg
mov
clc
xchg
xlat
push
mov
std
and
cmps
pop
aas
mov
mov
xchg
lock
ret
pop
or
loope
jp
out
out
jp
test
sti
inc
add
and
rcl
inc
cmc
cmp
add
adc
jb
pop
or
pusha
fisttp
test
mov
jle
into
add
pop
adc
or
fsubr
mov
sbb
jp
and
mov
sub
jge
or
fmul
call
jne
mov
mov
adc
push
ja
add
scas
(bad)
stc
or
mov
jmp
mov
push
push
push
pop
mov
jmp
mov
inc
mov
xchg
sub
or
aaa
mov
jmp
stc
cwde
inc
add
aad
cmps
sub
pop
mov
xor
push
and
scas
jnp
sbb
jmp
xchg
xlat
pop
cmc
adc
test
cmp
mov
pop
mov
scas
xchg
pop
out
idiv
pop
addr16
add
pop
movs
or
jmp
xchg
lea
cmp
push
pop
test
jmp
in
inc
add
mov
pusha
push
jge
mov
pop
cmp
mov
mov
loopne
cmp
loopne
add
add
cmps
adc
neg
test
mov
jge
push
adc
repz
js
test
cmp
fiadd
mov
js
cld
add
(bad)
push
inc
jmp
cmp
xor
(bad)
aam
add
or
mov
mov
mov
ja
add
pop
pop
sahf
xchg
push
cwde
sbb
ret
les
cmp
inc
xchg
xchg
cmp
ret
or
jle
sub
lock
jo
add
clc
and
hlt
sti
pop
pop
cdq
lahf
dec
xchg
js
or
jb
mov
daa
push
clc
hlt
test
push
aas
mov
dec
jmp
test
loope
leave
and
push
movs
mov
(bad)
es
mov
fild
fsub
mov
push
test
fisttp
dec
add
dec
call
xor
xor
cmp
and
in
jne
add
or
mov
xor
call
pop
push
test
cmp
mov
xor
xchg
nop
xor
or
sub
inc
data16
enter
inc
dec
es
into
adc
inc
add
loopne
mov
ss
retf
or
arpl
fdivr
jl
test
push
(bad)
aas
(bad)
push
sub
dec
jne
lea
outs
loop
lock
mov
test
push
xchg
ja
cld
test
add
imul
les
cwde
out
outs
pop
ret
pop
dec
addr16
mov
test
adc
mov
les
call
fisubr
repz
mov
dec
push
or
inc
xor
test
xchg
jmp
retf
adc
outs
jmp
sub
jne
shr
inc
lahf
mov
test
cwde
adc
xchg
jno
ret
mov
inc
add
mov
ds
invd
push
cld
(bad)
pop
retf
out
btr
jmp
adc
pop
or
push
pop
nop
jb
aaa
mov
add
or
fbstp
nop
cs
test
outs
dec
rol
pop
xor
shr
bound
ror
cmp
add
test
dec
sub
xchg
xlat
aam
repnz
jb
addr16
lock
cmp
jmp
sbb
cwde
add
pop
cmp
lea
xchg
das
clc
cs
ret
hlt
ret
inc
sbb
bound
adc
inc
outs
cld
or
pop
xor
(bad)
add
sbb
popf
and
mov
pop
les
dec
and
dec
pop
push
dec
outs
lahf
xor
inc
sar
push
int
das
pop
out
add
or
or
aaa
pop
push
fwait
in
sub
mov
push
leave
fst
dec
adc
adc
int
cs
out
inc
mov
or
lock
loopne
out
ins
movs
pop
cwde
mov
mov
scas
cmp
sub
add
xchg
mov
mov
cmc
inc
in
out
sbb
adc
ss
cmp
or
stos
mov
in
cs
push
adc
in
imul
cmp
jne
cmp
pop
push
stos
mov
shl
jmp
inc
push
loope
dec
out
mov
ins
out
cmp
(bad)
out
fucomip
leave
adc
jg
dec
adc
or
rol
pop
popa
pusha
out
inc
jb
scas
arpl
out
out
out
and
or
lea
inc
aaa
arpl
fadd
mul
adc
and
(bad)
loopne
hlt
(bad)
jp
or
xlat
test
popa
in
pop
xchg
dec
xchg
pushw
add
call
or
add
lock
sbb
inc
mov
or
add
shr
add
cmp
aaa
sbb
fild
lea
mov
ins
pop
or
xchg
adc
push
and
retf
sbb
lods
or
pusha
and
mov
mov
fld
arpl
mov
pop
sub
or
add
mov
pop
loopne
call
mov
lahf
inc
addr16
adc
fadd
dec
xor
(bad)
lock
cmc
mov
popf
mov
push
lods
fwait
sbb
pop
bound
or
and
ins
clc
mov
xadd
loope
pop
rcl
dec
fmul
or
pop
add
adc
fiadd
cmp
push
push
rcl
fs
sub
fmul
sbb
pop
jle
jge
mov
add
cwde
adc
jo
push
push
les
mov
inc
out
call
adc
add
aam
push
xor
dec
hlt
sbb
cmc
jo
or
sahf
retf
add
and
pop
dec
movs
mov
pusha
in
les
mov
popa
xor
aam
and
stos
rol
dec
mov
push
push
in
cmp
mov
mov
sub
mov
clc
aam
leave
pop
out
and
and
(bad)
pop
mov
dec
outs
pop
and
fs
aam
cmp
add
dec
cmp
xchg
out
xchg
inc
adc
inc
push
jl
pop
hlt
pop
fsub
loope
(bad)
pinsrw
adc
mov
mov
xchg
xchg
lock
pop
stos
mov
dec
xlat
stos
push
pop
inc
dec
xchg
inc
mov
in
jl
test
ja
jl
xchg
es
jl
dec
cmp
ja
push
rcr
sub
jne
hlt
push
push
mov
xor
add
push
test
jge
fsubr
adc
dec
daa
in
retf
nop
pop
add
test
and
nop
jo
jo
sbb
push
cmp
cmp
add
repz
and
sbb
sbb
inc
lods
or
sub
pushf
and
adc
ins
mov
pop
rcl
adc
inc
sbb
inc
sbb
and
aaa
(bad)
jo
sub
dec
clc
repz
ror
jne
sbb
jge
pop
fild
sub
ins
adc
add
mov
(bad)
dec
jecxz
loop
or
dec
jmp
mov
inc
not
mov
xchg
add
popa
pop
mov
loope
rcl
imul
hlt
mov
loopne
xor
pop
inc
arpl
stc
adc
jno
leave
sub
mov
rol
arpl
sti
xchg
mov
mov
loop
jo
pop
mov
inc
stc
in
pop
pop
cmp
sbb
inc
adc
xchg
inc
dec
arpl
jb
nop
scas
mov
in
mov
or
lods
aas
jmp
test
inc
jo
mov
imul
or
adc
es
pop
in
iret
ins
push
neg
pop
xchg
or
add
xlat
push
xor
cwde
es
das
cli
push
sbb
xor
clc
mov
loopne
ret
data16
push
or
inc
jecxz
inc
sbb
pushf
adc
popa
xchg
jecxz
inc
les
inc
arpl
inc
inc
sar
mov
pop
add
inc
leave
or
inc
inc
test
daa
jmp
push
xor
mov
movs
ins
std
js
inc
(bad)
xlat
std
sbb
jo
add
add
loop
adc
push
jne
je
push
mov
add
aaa
dec
mov
adc
push
pop
pop
out
sub
jge
fldcw
pop
test
or
add
idiv
dec
out
lahf
or
xchg
rol
call
lods
aam
or
inc
jne
ins
imul
dec
cmp
or
jb
hlt
or
mov
lods
inc
inc
movs
push
xchg
test
jo
sbb
sub
pop
push
xor
fcmovne
adc
mov
cmp
mov
cmp
or
cmp
push
or
mov
fmul
pop
adc
pop
inc
ja
push
les
mov
in
jbe
push
bound
push
xchg
cmp
test
es
inc
and
fild
and
es
push
push
shr
sbb
neg
(bad)
and
sub
push
push
sbb
jns
or
mov
add
aas
out
pop
push
pop
and
inc
jnp
repnz
ret
scas
sub
dec
test
inc
cmc
mov
les
in
and
or
lds
sub
adc
or
and
cmp
jo
popa
ins
scas
add
push
push
ins
outs
outs
je
bound
(bad)
aaa
cmp
mov
pop
inc
loope
cs
pop
jmp
add
mov
jo
mov
mov
retf
add
ins
popa
mov
inc
or
cmp
sti
inc
dec
aad
add
jae
add
dec
xor
jb
mov
adc
gs
or
out
push
push
or
mov
jne
mov
in
xchg
adc
ds
mov
sbb
sbb
adc
das
xor
push
xchg
ins
xor
ret
daa
pop
sub
jge
adc
push
clc
test
mov
adc
dec
sub
inc
dec
inc
sbb
fs
sub
mov
pop
push
ss
add
rcl
bound
ds
mov
(bad)
(bad)
jnp
push
nop
mov
pop
adc
(bad)
shr
sbb
push
xor
lea
int
scas
scas
sub
rcl
mov
push
pop
mov
pop
rcl
mov
jo
or
retf
sbb
inc
ins
xchg
pop
pusha
cmps
xchg
mov
push
jo
test
bound
es
scas
or
inc
pop
mov
xchg
push
repz
ret
adc
sub
cwde
sub
or
jno
inc
movs
stos
mov
push
mov
imul
or
cmp
call
add
pop
add
xchg
add
or
mov
mov
cmp
pop
push
and
fs
push
add
out
mov
je
jp
pop
pushf
mov
lahf
add
jns
mov
adc
or
rcr
aaa
push
and
rol
scas
push
scas
adc
loopne
fldcw
sub
or
mov
xor
push
push
pusha
cmp
ins
das
adc
(bad)
rol
icebp
mov
bound
mov
cmps
mov
pop
lahf
dec
ins
adc
js
jbe
outs
call
pop
fcmovnb
mov
pusha
jne
add
(bad)
loopne
push
xor
adc
adc
loopne
inc
inc
out
or
int
ja
mov
or
or
sti
pusha
mov
and
sbb
push
inc
int
cmp
int
test
mov
clc
retf
cmp
fld
arpl
push
add
test
cmp
adc
ja
inc
sub
mov
fcmovb
xchg
or
push
mov
jmp
mov
or
and
(bad)
push
xor
jp
popf
ins
dec
pop
sbb
pop
ins
adc
xor
mov
das
add
jno
adc
cmps
add
shl
xor
aad
nop
aad
jp
sbb
cmp
sbb
mov
popa
mov
outs
sub
sub
push
xchg
mov
and
inc
or
inc
and
sbb
je
or
push
dec
xor
mov
fild
add
fdivrp
or
rcr
in
pop
mov
push
test
js
je
mov
shl
xchg
iret
add
mov
sub
add
add
popf
shl
mov
jae
xchg
xor
mov
mov
in
enter
mov
movs
and
add
add
sbb
pop
popa
lods
push
jbe
sbb
ret
xor
and
xchg
movs
and
pop
fld
mov
mov
dec
and
add
sbb
cmp
nop
mov
add
test
ins
in
and
sti
push
xchg
outs
adc
or
lods
outs
inc
sub
xor
pop
and
clc
mov
pop
pop
dec
dec
mov
jmp
cmp
cmc
sbb
pop
or
cmp
mov
iret
loopne
test
and
jne
cmp
mov
sti
sahf
sbb
push
dec
ds
mov
leave
das
adc
mov
lods
and
in
or
dec
add
add
xor
adc
test
or
push
clc
dec
push
adc
inc
fsub
and
lar
and
and
and
add
xlat
shr
add
and
sbb
ror
mov
sbb
inc
and
mov
and
test
cmp
test
add
and
inc
inc
stc
or
test
and
pop
sbb
test
add
pop
dec
cmp
push
push
mov
jge
dec
lea
jbe
inc
cmp
or
mov
loopne
fistp
xchg
mov
arpl
in
js
pop
mov
ja
add
cmc
inc
or
mov
repz
mov
dec
or
inc
mov
daa
ja
adc
sbb
pop
sub
or
add
xchg
mov
add
push
dec
ret
dec
loopne
cmps
cmp
xor
dec
retf
and
lea
sub
inc
xor
jno
push
xchg
test
add
stos
mov
push
inc
repz
rol
inc
sub
or
(bad)
cmps
(bad)
rol
and
mov
aad
cmp
addr16
inc
pop
inc
fcmovnu
jae
(bad)
and
inc
inc
out
je
xchg
lsl
rol
push
aas
jb
mov
jbe
loope
sbb
xor
sub
dec
rol
sub
into
and
lahf
push
adc
or
pop
xor
adc
fld
test
and
push
xor
or
inc
cld
popf
stc
cmpxchg
(bad)
movs
add
jmp
jmp
push
and
inc
and
ins
imul
add
dec
lock
fs
adc
cmp
jb
cmps
loope
or
mov
fnsave
pop
mov
fs
ds
inc
aaa
sub
gs
or
jmp
call
int3
adc
dec
test
adc
das
sub
and
pop
push
inc
jp
repnz
jno
inc
imul
inc
clc
xor
pop
and
and
or
mov
push
cmp
and
ret
addr16
test
mov
fwait
mov
pop
mov
add
movzx
cmps
pushf
and
lock
push
or
fmul
lods
sub
mov
mov
pop
pop
add
sub
push
sub
inc
test
loope
dec
pop
inc
fmul
mov
inc
or
add
add
xchg
(bad)
and
pop
pop
ret
nop
aas
fsub
jmp
mov
pop
pop
pop
jnp
std
mov
mov
add
mov
mov
cmp
cmc
dec
xchg
xchg
out
icebp
cmp
push
add
sub
mov
lea
(bad)
push
adc
pop
iret
cmp
pop
adc
add
add
sbb
dec
and
div
xrelease
add
sub
add
cmovo
push
push
rol
adc
nop
sub
ja
aas
ror
sub
add
jle
adc
push
ror
test
lea
add
jno
sbb
les
xchg
jecxz
je
and
out
push
xor
and
sbb
ins
mov
fs
sub
jo
mov
pop
cmp
pop
pop
cmp
lahf
mov
push
fisttp
jo
xor
jae
fadd
cmp
or
push
ret
pop
dec
pop
dec
pop
mov
and
or
int3
inc
dec
imul
jne
mov
js
push
adc
mov
jmp
inc
les
add
lods
add
ins
xor
dec
loope
cmp
(bad)
mov
loope
fstp
inc
js
sbb
add
xor
pop
fcom
jnp
adc
adc
add
dec
nop
hlt
jmp
(bad)
or
adc
or
jge
push
ds
mov
ja
inc
and
adc
xor
mov
cmp
mov
fs
xor
movs
mov
mov
and
mov
call
pop
stos
clc
mov
lods
test
push
adc
fwait
xor
xor
adc
add
jge
mov
mov
mov
stos
dec
add
mov
or
pop
and
mov
aaa
lock
cmp
jl
inc
imul
add
pusha
xchg
test
popf
daa
xor
arpl
adc
test
test
test
icebp
inc
mov
test
add
xor
inc
xchg
or
or
js
pop
jne
rcr
inc
pop
adc
pop
sbb
add
xchg
lea
test
sbb
push
xchg
pop
mul
cmp
shl
fcmovnb
mov
push
repz
hlt
inc
push
push
xchg
outs
push
adc
or
imul
bound
jmp
mov
and
add
adc
xor
sub
mov
add
mov
jo
jecxz
(bad)
pop
fdiv
xor
add
sbb
mov
xlat
jmp
push
inc
mov
add
ins
pusha
mov
fiadd
ss
xor
cmp
loopne
sub
dec
call
scas
sbb
or
sbb
dec
fisttp
add
clc
inc
inc
push
cs
lahf
lds
xor
dec
mov
adc
jmp
jae
sub
popa
add
out
sub
xor
pop
fst
clc
xor
add
mov
stos
or
push
or
js
call
cmp
mov
ret
adc
pop
xor
xor
sbb
neg
mov
pop
inc
dec
outs
or
dec
mov
(bad)
in
sbb
adc
cmp
adc
mov
scas
rol
sbb
ja
dec
inc
lods
neg
lea
inc
pop
add
dec
test
cmps
cdq
(bad)
rol
push
dec
cmp
adc
add
jmp
or
add
xlat
dec
dec
jb
(bad)
aas
test
mov
pop
lea
fwait
sub
dec
inc
push
or
xchg
arpl
push
cmp
push
cmc
sbb
or
enter
rcr
aaa
icebp
outs
pop
out
sub
and
cmps
mov
and
imul
or
popa
sti
and
sbb
lahf
mov
mov
fdiv
(bad)
dec
add
add
ret
mov
cmp
mov
push
mov
movs
dec
ret
adc
inc
push
sub
popa
movs
push
and
pop
pop
rol
adc
mov
dec
cmp
je
mov
add
push
or
cmp
pop
xlat
adc
imul
sbb
inc
jnp
ins
and
cld
xor
mov
mov
xor
out
jae
sub
ins
out
and
push
mov
mov
(bad)
sub
xchg
popa
dec
inc
inc
mov
out
dec
dec
push
and
je
cmp
and
add
dec
sub
mov
dec
iret
xchg
cmps
dec
test
hlt
or
xchg
jo
adc
jle
lods
fsubr
push
xlat
dec
or
jmp
xchg
pop
sbb
loope
push
fwait
shl
xor
loopne
mov
call
inc
or
jg
sub
js
and
and
mov
xchg
mov
cmp
xor
jmp
adc
and
mov
pop
add
sub
(bad)
in
and
mov
mov
leave
mov
xchg
movs
mov
fsubr
xor
sub
sbb
enter
sbb
mov
mov
aas
or
adc
out
adc
out
cmp
xor
xor
nop
add
lods
mov
ret
movups
inc
movs
adc
xchg
adc
add
adc
cmps
mov
sub
rcr
sub
sub
and
sbb
popa
inc
add
repnz
add
adc
add
inc
jb
or
test
push
mov
hlt
push
jmp
xchg
add
sub
sbb
push
test
jnp
and
xor
add
push
xchg
dec
movs
or
inc
add
sub
loop
(bad)
dec
loopne
fistp
mov
mov
das
outs
add
and
(bad)
arpl
dec
xor
dec
push
xchg
xlat
mov
adc
inc
cmp
add
add
pop
jne
or
push
dec
lods
test
lods
stos
sub
xor
out
sub
mov
icebp
cmp
push
inc
lock
mov
pop
popa
inc
in
inc
inc
sbb
inc
dec
push
push
and
cmp
dec
add
mov
mov
in
dec
push
mov
cmp
(bad)
je
cmp
adc
push
adc
push
inc
pop
test
push
lods
cli
inc
xchg
xchg
add
add
rol
sub
and
mov
mov
mov
mov
outs
push
dec
add
jl
cmp
xlat
add
add
add
add
stos
sbb
push
xchg
jne
jmp
nop
mov
push
in
mov
push
or
lock
sub
sbb
cmc
sbb
jnp
sti
adc
stc
sub
test
mov
aaa
xchg
jl
cmp
nop
(bad)
mov
ret
addr16
nop
and
int
data16
scas
jno
jl
jne
xor
mov
jne
mov
ret
xor
mov
movs
adc
cmp
mov
cmp
xor
imul
jmp
sbb
in
loop
adc
push
loopne
xor
stos
ror
sbb
push
sbb
shl
lock
call
inc
pop
add
or
loope
xor
and
lea
inc
sub
pop
loopne
add
pop
jl
or
jl
pop
or
cwde
cmp
pop
jl
mov
(bad)
push
jbe
movs
stos
outs
ret
and
outs
call
shl
push
xchg
int3
js
aas
fs
adc
adc
cld
neg
push
test
add
retf
cmp
jbe
add
sahf
mov
sbb
int
loopne
jge
mov
jae
mov
add
add
xchg
add
add
add
sbb
or
rol
(bad)
jne
pop
and
dec
or
adc
push
inc
inc
and
add
add
sub
adc
mov
inc
dec
adc
mov
lock
popa
mov
add
lds
add
std
scas
dec
lds
adc
movs
lahf
dec
dec
add
lock
fsub
add
pop
adc
(bad)
cmp
pop
sbb
inc
jae
test
adc
and
shr
movs
push
sbb
nop
aam
mov
jne
sar
pop
xor
aad
pop
cmp
jge
movs
pop
and
sub
dec
xor
jge
mov
or
inc
jl
shl
sbb
dec
mov
jmp
push
or
push
int
push
inc
sub
pop
jbe
jmp
inc
push
xchg
out
in
or
je
fwait
lods
mul
and
lea
test
jbe
mov
jne
out
push
jp
hlt
dec
push
ja
xor
lahf
test
sub
or
inc
hlt
rol
mov
mov
pop
scas
and
mov
pop
mov
inc
push
shl
cdq
add
mov
mov
leave
inc
xor
or
(bad)
dec
dec
and
inc
cmp
je
mov
push
mov
mov
loopne
xlat
mov
xchg
fimul
dec
push
or
dec
cld
sbb
dec
push
(bad)
adc
mov
adc
inc
inc
cmps
in
inc
sub
dec
dec
sbb
pop
sub
jb
add
je
inc
inc
pop
or
jo
cmp
push
lds
push
dec
repnz
int
(bad)
push
inc
stos
repnz
pop
mov
mov
push
dec
sub
push
shl
out
arpl
aad
or
mov
lds
rcr
xchg
cmp
add
cmp
pop
mov
adc
inc
es
add
popa
std
pop
or
pop
test
inc
cmp
jl
inc
adc
adc
mov
sbb
sbb
mov
popf
and
dec
jo
sar
aaa
stos
fidivr
dec
fcomp
or
pop
mov
xchg
mov
jo
fs
push
mov
jmp
cmp
pop
jg
add
and
add
mov
xchg
test
cwde
cmp
adc
mov
jle
mov
inc
jbe
or
out
sub
cmp
jl
adc
sbb
add
clc
mov
inc
mov
add
xchg
jecxz
inc
or
mov
add
lea
xor
mov
maskmovq
div
or
jae
aam
and
adc
fsub
or
sbb
adc
push
jae
sar
jge
add
cmp
ja
inc
or
add
jmp
push
push
xchg
loope
in
ja
mov
clc
jbe
cmp
xchg
or
inc
dec
mov
adc
shr
and
adc
out
dec
sbb
sbb
adc
and
cld
enter
mov
or
pop
sbb
jae
xor
dec
loope
push
mov
jmp
sbb
or
adc
loopne
into
and
lock
pop
outs
fdivrp
jbe
pusha
add
xchg
and
mov
(bad)
add
ja
jmp
test
das
mov
test
jae
jmp
add
add
add
add
xchg
(bad)
xchg
xor
xchg
ja
ins
ret
pop
retf
data16
test
inc
fcom
add
adc
call
mov
mov
je
loope
sbb
push
adc
sub
out
in
push
inc
dec
dec
pop
adc
dec
and
cmp
imul
(bad)
dec
xchg
cmp
into
pop
and
add
mov
add
std
retf
(bad)
sub
push
adc
hlt
retf
mov
fist
out
ins
xchg
xor
jne
or
mov
mov
mov
fstp
sub
push
repnz
push
and
inc
outs
hlt
sub
jnp
rol
shr
cmovbe
fmul
(bad)
aad
(bad)
xor
xor
or
popf
or
mov
les
stos
sbb
inc
mov
sar
jmp
bound
sbb
xchg
xchg
shl
bound
push
mov
or
xor
jl
adc
in
xchg
das
sbb
inc
aaa
and
and
cmp
fdivr
xor
jmp
dec
or
jb
pop
mov
sar
call
push
dec
push
dec
mov
dec
mov
nop
aam
ret
pmulhuw
out
sub
or
xor
or
adc
adc
and
fdiv
pop
push
fidivr
adc
push
leave
sub
and
cmp
xchg
ins
fdivr
setnp
sbb
pop
pop
or
cmp
adc
movs
popa
mov
sbb
add
mov
mov
cmp
enter
icebp
dec
(bad)
arpl
test
mov
jle
sbb
jle
adc
mov
dec
or
adc
mov
push
stc
(bad)
lods
cmp
ss
cmp
mov
ds
mov
cwde
jae
fistp
mov
loop
pop
popa
pop
add
scas
inc
pop
sar
fcom
cdq
das
and
and
or
sub
xchg
mov
or
daa
sub
shl
and
loope
jl
pop
pop
scas
push
add
dec
xchg
inc
or
fsubr
arpl
push
push
sub
push
arpl
jmp
xchg
pop
mov
addr16
mov
and
dec
xlat
mov
and
sbb
sbb
add
xor
adc
retf
inc
cmp
clc
aad
dec
inc
inc
sbb
dec
adc
jno
out
jne
inc
inc
adc
je
in
pusha
fs
add
add
push
cmps
loop
loope
pusha
add
dec
xor
loop
and
add
push
jo
inc
pop
xlat
xor
add
xor
dec
fwait
into
out
adc
or
aaa
add
xor
mov
loopne
ins
jns
jns
jns
in
mov
xor
dec
inc
lods
cmp
cmp
sbb
lods
bound
add
ja
adc
retf
or
pusha
sbb
inc
mov
icebp
mov
add
test
jg
inc
and
cmp
dec
lahf
pop
cmps
rol
inc
mov
pop
ins
sbb
imul
jle
or
cmp
in
pop
cld
jge
cmp
int3
jmp
jmp
or
inc
test
mov
imul
dec
cwde
(bad)
cmovo
adc
cmp
mov
rcl
or
dec
sbb
lods
mov
call
add
adc
bound
add
cmp
mov
mov
outs
fdiv
ja
xor
jo
sbb
shr
retf
inc
(bad)
sbb
pop
(bad)
lea
cs
and
hlt
sub
pop
mov
jno
inc
scas
cmp
stos
pusha
sub
cmp
pop
nop
mov
pop
jge
mov
pusha
sub
or
xor
mov
push
shl
test
das
push
adc
push
inc
outs
adc
mov
iret
pop
push
mov
push
mov
inc
add
pop
and
or
or
sbb
or
mov
out
sbb
sub
add
rol
shl
push
and
(bad)
ja
fild
sbb
inc
sub
push
add
out
jge
add
mov
scas
add
(bad)
push
(bad)
adc
sbb
stos
mov
dec
es
sub
daa
test
sub
xor
jle
jmp
sub
rcr
in
iret
xor
lock
sub
add
(bad)
cli
jmp
sti
rol
xor
adc
push
ret
and
lods
sub
test
mov
and
call
stos
push
sbb
add
cmp
mov
jmp
pop
popfw
jne
rcl
retf
pop
fwait
cmc
sti
adc
jne
dec
add
or
mov
lods
sub
push
dec
loope
xchg
add
data16
aas
xor
push
push
inc
jp
or
dec
or
je
fild
fadd
sub
mov
mov
jmp
loopne
inc
jl
or
test
push
pop
je
add
popf
popa
adc
sti
mov
inc
cmp
outs
cmp
out
sbb
je
mov
sbb
outs
mov
mov
add
fiadd
xor
inc
popa
jb
inc
in
sub
dec
nop
mov
int3
outs
jo
or
pop
mov
int
adc
stc
sub
loopne
jg
stc
xchg
cmp
jl
mov
ins
jb
adc
inc
nop
mov
jnp
inc
lds
inc
outs
add
mov
mov
lea
jmp
and
pop
lahf
xchg
rol
push
imul
pop
pop
in
or
mov
imul
wrpkru
mov
leave
pop
imul
out
cmp
mov
or
sbb
xor
mov
xor
popf
adc
xchg
icebp
popf
outs
out
(bad)
cmp
jns
xor
mov
pop
cmp
enter
inc
rcr
shl
xchg
in
jg
stos
add
adc
xor
sbb
push
mov
push
out
jne
cmp
retf
js
gs
inc
mov
fld
fiadd
jne
or
aaa
into
lods
mov
sub
pop
jbe
ss
dec
cmp
mov
sbb
add
or
sahf
mov
pop
sbb
mov
jmp
inc
dec
js
pop
mov
out
push
(bad)
mov
test
fdiv
xor
loope
cmp
ja
and
sbb
inc
jo
and
loopne
daa
fnsave
loopne
inc
cs
add
add
mov
and
std
dec
ins
add
imul
add
add
call
dec
jo
and
sar
add
rcl
and
out
sar
cmp
stc
or
sar
mov
test
and
cmp
adc
jle
mov
jmp
(bad)
cld
data16
outs
and
imul
(bad)
ja
add
and
fist
mov
(bad)
lea
fsubr
jb
or
sbb
je
js
sbb
add
add
push
pop
and
les
xor
or
scas
ds
jl
ss
push
xlat
mov
sbb
push
je
pop
add
and
lock
inc
mov
adc
call
outs
into
(bad)
mov
inc
inc
cmp
stos
mov
or
(bad)
cmp
hlt
push
pop
aaa
mov
sbb
pop
add
jl
push
jmp
push
pusha
push
push
(bad)
xor
aaa
ja
cmp
les
js
sar
ret
inc
test
cmovle
add
outs
dec
sbb
push
arpl
push
xor
into
fs
jge
dec
push
je
push
fwait
movs
das
sub
xchg
lock
add
add
push
dec
ins
(bad)
jmp
cmp
push
inc
push
add
xchg
lock
sub
and
mov
int3
sar
ins
enter
les
aaa
xor
retf
shl
push
pop
(bad)
jmp
pusha
cmp
scas
fprem
or
fwait
sbb
sahf
cwde
sbb
adc
add
sbb
xchg
dec
fs
push
push
adc
stc
jne
inc
pop
mov
mov
test
mov
pop
and
add
sbb
clc
jp
pop
jg
xlat
aad
and
jo
in
push
and
xchg
add
sub
pusha
adc
sbb
inc
mov
retf
or
adc
movs
and
invd
pop
inc
movs
add
ja
pop
pop
test
mov
enter
adc
pop
cmpxchg
call
icebp
jne
pop
sbb
scas
lds
sti
shr
mov
(bad)
cmps
jns
imul
test
push
xchg
cs
sbb
push
sbb
pop
push
pop
out
pop
xlat
adc
sub
add
pop
lods
loopne
mov
popf
pop
mov
loopne
xor
xor
jge
in
xchg
ds
lock
or
push
imul
repz
xchg
add
ror
(bad)
cmp
mov
adc
pop
jne
pop
rol
mov
sbb
loopne
popa
mov
sub
or
aaa
and
or
and
shl
outs
lods
or
es
sbb
retf
cs
pop
aaa
pop
test
mov
(bad)
adc
jg
outs
cmp
push
or
sti
ror
mov
fdivr
in
lock
inc
push
nop
fst
stos
mov
mov
cmp
mov
sub
out
jbe
cmp
cli
inc
jl
pop
jmp
add
push
fild
pushf
add
or
loope
sub
das
adc
pop
push
loope
xor
mov
and
jo
pushf
and
or
push
jmp
(bad)
or
aas
sbb
cmp
retf
std
adc
or
mov
out
add
scas
in
add
xor
fdiv
or
push
jae
fmul
push
into
xchg
clc
ret
mov
lea
push
pusha
jnp
mov
inc
mov
cmp
add
push
jecxz
js
or
add
xchg
dec
push
and
cmp
mov
ja
fstp
cmp
rol
ret
leave
pop
arpl
mov
add
push
inc
jmp
adc
mov
fiadd
pop
adc
xchg
pop
pop
xor
add
ins
sbb
ret
mov
xor
adc
inc
clc
inc
cld
into
lea
imul
xor
sub
pop
outs
adc
adc
test
pop
adc
sar
push
mov
adc
push
inc
adc
xor
sbb
mov
dec
arpl
and
std
arpl
inc
sbb
add
sub
mov
inc
sbb
mov
inc
mov
arpl
adc
jno
mov
dec
dec
movs
mov
adc
xor
jns
mov
ror
xchg
add
xor
mov
add
xchg
dec
adc
xlat
in
pop
mov
inc
xor
sbb
and
cmp
inc
xchg
fild
sub
ins
jo
jns
xor
and
(bad)
(bad)
mov
shl
mov
xor
pusha
sbb
popa
mov
sub
jnp
ins
and
add
pop
daa
pop
push
push
test
ret
or
sub
jge
lock
and
rcr
sub
xor
mov
and
xor
clc
xchg
nop
push
test
xchg
xor
xchg
bound
not
fisttp
xor
fbld
inc
into
push
push
jmp
and
push
pop
fdiv
adc
cmp
jle
push
cmp
repz
jg
loopne
push
mov
or
loop
and
cmp
push
and
adc
adc
lds
hlt
shr
xor
es
test
pop
mov
div
adc
adc
jecxz
mov
sbb
pop
(bad)
sbb
mov
hlt
jg
dec
call
mov
es
js
shl
adc
cld
add
scas
lea
scas
dec
sub
les
jno
inc
mov
nop
mov
ins
daa
mov
test
mov
cmps
sbb
int3
adc
stos
inc
xor
aaa
lods
or
add
and
pushf
or
push
add
jmp
push
outs
inc
xor
mov
ins
xchg
inc
out
and
sbb
jecxz
mov
or
or
in
cmp
add
mov
loope
add
jo
pop
sbb
cs
jno
sub
mov
ins
pop
mov
test
pop
dec
xor
dec
(bad)
lds
lods
mov
fisub
jecxz
(bad)
js
mov
add
mov
ficom
outs
clc
mov
test
push
je
out
push
inc
(bad)
sti
xchg
sub
cmp
mov
xor
sar
mov
dec
lock
sbb
jg
fsub
rcr
ins
and
adc
lods
cmp
jmp
es
jmp
pop
jl
es
xor
repz
mov
adc
imul
sub
je
int3
lock
imul
xchg
fisttp
ret
push
aaa
and
int
or
mov
lock
stos
dec
inc
mov
jbe
pop
push
push
push
sub
jbe
mov
pusha
repnz
jno
ret
out
inc
xor
or
out
(bad)
(bad)
xchg
lds
cdq
or
and
inc
icebp
jmp
mov
or
mov
jle
jge
add
or
or
rol
and
(bad)
in
das
call
or
inc
(bad)
dec
cmp
ret
aas
jl
mov
into
mov
push
pop
mov
aaa
push
das
inc
rol
adc
cmp
les
scas
push
mov
add
and
lock
call
xor
mov
fimul
push
xor
mov
or
mov
ins
xor
add
cmps
pop
imul
shr
mov
add
jnp
stos
inc
cmp
and
sub
sbb
jge
int
ret
popf
sub
vmread
lea
aad
xor
dec
ins
adc
adc
mul
(bad)
sbb
mov
inc
imul
in
lahf
cmp
neg
and
mov
pop
xor
ret
call
clc
xchg
div
jb
je
dec
je
shl
jbe
retf
add
jge
mov
dec
pop
dec
add
add
or
loope
fucomip
outs
or
jmp
sbb
je
and
cmps
push
xor
push
mov
xchg
loopne
jbe
jge
cdq
cli
fsubr
push
vmovntpd
(bad)
push
js
lods
push
dec
sbb
push
add
stos
aaa
fmul
ror
add
add
push
pop
ins
cs
pop
pop
cwde
xchg
es
and
loope
lds
or
dec
mov
adc
adc
cmp
js
(bad)
sti
jmp
lock
ror
push
loopne
xor
push
add
inc
sar
scas
jmp
add
loope
imul
mov
or
cld
xchg
xchg
nop
and
mov
mov
or
nop
mov
sbb
aaa
(bad)
mov
or
aam
gs
or
jno
shr
push
js
pop
adc
sbb
call
jmp
sub
and
cmps
rol
jle
cwde
jge
mov
inc
data16
push
add
cmp
or
inc
fiadd
add
xlat
inc
fwait
icebp
pop
pop
mov
mov
dec
inc
ror
(bad)
shl
or
dec
fcomp
shl
addr16
movs
int3
xchg
pop
mov
inc
push
jmp
jl
test
mov
jl
inc
loopne
or
sub
sbb
jne
das
aas
jne
or
mov
lea
pop
mov
xor
push
lea
sbb
sub
mov
pop
adc
cmp
mov
lea
push
(bad)
jecxz
dec
lea
mov
iret
or
jecxz
pop
jl
add
das
push
cmp
jnp
aaa
xor
lea
cdq
xor
xchg
test
sar
mov
fst
pusha
js
push
adc
fisubr
outs
adc
lahf
ret
add
es
mov
mov
xchg
mov
rcl
add
movs
mov
or
cmp
xchg
or
enter
xchg
mov
adc
sbb
add
es
sbb
xor
(bad)
jo
inc
clc
cmp
ds
mov
mov
scas
inc
mov
jne
pop
pop
sbb
xor
push
mov
or
mov
push
lds
les
inc
push
mov
pcmpgtw
loopne
ror
mov
pop
jl
aas
add
add
push
call
xor
mov
cmp
mov
aas
dec
in
lea
push
and
shl
test
or
inc
sti
outs
or
adc
xor
mov
add
movsx
(bad)
jle
jnp
lea
mov
lock
lods
jns
add
cmp
je
mov
test
inc
add
ret
jg
ret
shl
sbb
fild
cmp
test
xchg
test
push
dec
lock
add
sub
cmp
fdiv
sub
stos
cli
jo
or
dec
mov
out
dec
loopne
mov
or
inc
inc
stos
mov
call
add
jmp
push
add
(bad)
ret
mov
in
bound
sbb
(bad)
pop
dec
and
pop
pusha
and
loopne
sbb
nop
rcr
adc
or
sub
add
test
ror
(bad)
in
fcmovne
push
inc
test
shl
retf
mov
pop
aam
leave
or
xor
adc
adc
sbb
arpl
push
push
jg
adc
dec
jl
fcom
cmp
mov
cmp
inc
in
jge
inc
push
loopne
jle
popa
hlt
fild
pop
adc
push
adc
pop
outs
in
mov
jb
pop
and
pusha
clc
movd
(bad)
inc
jno
outs
pop
jl
out
sbb
icebp
inc
pop
in
sbb
adc
(bad)
cmp
dec
leave
sbb
mov
jge
xor
je
push
cmp
sbb
push
dec
jns
sbb
push
inc
pop
adc
scas
cmp
mov
mov
rcl
sbb
repnz
pop
sbb
add
jle
and
dec
daa
or
and
xlat
push
call
in
mov
mov
sbb
shl
(bad)
cmp
cwde
mov
test
push
add
sbb
mov
pop
or
jo
mov
xchg
jge
sbb
push
mov
sub
push
dec
push
dec
fstp
mov
adc
xchg
jne
and
das
out
xchg
sbb
lea
cmp
lock
add
sub
add
lahf
mov
fwait
or
or
inc
rol
or
lock
lock
push
sbb
xor
lds
jb
mov
mov
pop
or
sbb
adc
fmul
add
jno
sbb
mov
add
(bad)
mov
inc
or
sbb
mov
mov
(bad)
in
adc
push
and
popa
rcr
xchg
(bad)
jle
cmc
movs
pop
nop
adc
xor
sub
pop
jmp
mov
jno
mov
push
in
and
xchg
(bad)
mov
add
mov
sub
repnz
in
push
movs
mov
(bad)
les
movs
pop
stos
or
or
cmp
rol
and
push
dec
mov
test
mov
jp
push
cmp
lahf
push
sub
adc
retf
outs
inc
and
pusha
fs
cmp
cmp
bound
dec
add
xor
xor
scas
inc
imul
adc
cmps
in
push
and
sub
rcl
into
mov
jb
sbb
jle
mov
mov
aad
js
cmp
push
enter
je
inc
mov
shl
mov
sub
popf
cli
loopne
test
xchg
rol
xchg
iret
cmp
dec
adc
pop
xor
dec
scas
dec
int
xor
pop
out
(bad)
sub
rsqrtps
sbb
xchg
push
add
ja
sbb
add
xor
inc
jmp
jle
push
clc
(bad)
sti
daa
lds
inc
cmp
in
ret
or
dec
lods
mov
push
sbb
fs
mov
sbb
and
or
sub
sbb
add
jne
fistp
movs
movs
lock
iret
sub
loop
fistp
push
mov
xor
push
cmps
(bad)
test
in
lea
cmps
rcr
loope
and
push
pop
test
xor
ja
pop
add
lods
dec
mov
int
adc
jo
(bad)
lock
or
(bad)
in
cmps
daa
push
sbb
sahf
les
ins
and
ret
lea
xor
and
mov
adc
js
loop
add
ins
ins
jg
imul
shl
jae
sar
leave
mov
jo
xchg
mov
pop
push
cs
xor
pop
out
sbb
push
or
sbb
arpl
ja
inc
xchg
and
sub
dec
sar
adc
inc
adc
shr
sub
mov
push
dec
xchg
mov
jbe
enter
nop
and
adc
shl
imul
cmp
jnp
add
repnz
jae
sub
or
je
jp
mov
inc
sub
in
inc
aaa
mov
xchg
adc
lea
retf
push
or
sbb
push
pop
fsubr
xor
jae
adc
push
push
inc
jo
mov
sbb
into
xchg
popf
loopne
repnz
dec
adc
xor
or
inc
adc
push
adc
adc
lea
jne
ror
scas
jp
arpl
and
cmps
sbb
(bad)
pop
add
call
outs
or
cmps
pop
mov
shr
dec
jo
shr
push
add
add
addr16
sub
xchg
add
int
or
in
jne
sub
mov
xchg
jmp
daa
dec
xor
xor
or
sar
pop
or
mov
mov
jg
mov
jge
or
add
or
or
xor
sbb
loop
in
loopne
add
or
jo
je
mov
add
or
xchg
mov
shr
add
xor
push
dec
dec
aas
sbb
pop
add
repz
sub
int3
mov
pushf
add
push
sbb
xor
xchg
loope
shl
inc
xchg
or
loope
cmp
inc
(bad)
and
push
adc
stos
pop
rol
push
sar
ret
jo
jmp
inc
ja
or
jmp
push
in
push
fmul
jne
mov
aaa
push
in
fdivr
xor
adc
retf
in
adc
push
in
pop
cld
loop
nop
hlt
lea
rcr
mov
adc
aas
adc
lea
jmp
push
sbb
mov
pop
es
add
mov
fstp
pop
popf
add
adc
mov
loopne
lods
sbb
imul
repz
inc
sbb
mov
mov
adc
daa
mov
adc
out
push
sbb
int3
cmp
add
inc
push
add
pop
add
pop
je
test
mov
add
nop
out
imul
lock
mov
addr16
sub
fnstsw
push
jo
scas
push
js
pop
cmp
add
sub
cmp
test
test
sbb
sub
loope
xchg
push
adc
push
lock
sub
bound
adc
push
push
shl
or
or
adc
adc
enter
or
adc
sbb
adc
sbb
sbb
mov
clc
hlt
mov
inc
cli
hlt
imul
je
stos
jo
push
xor
sahf
push
idiv
rol
adc
xor
call
ins
rol
cwde
push
add
xor
xchg
shl
add
push
in
fidiv
mov
inc
cmp
adc
mov
ret
in
dec
or
inc
push
data16
sub
sar
es
(bad)
inc
cmp
jge
adc
mov
mov
jns
rcl
jmp
dec
int3
and
stos
inc
jo
dec
mov
mov
cs
shr
cld
jge
std
add
sub
add
test
mov
mov
mov
sbb
dec
push
mov
repz
lock
jl
iret
gs
inc
repz
cmps
mov
push
loopne
push
loopne
inc
xor
lock
add
jmp
ret
inc
lds
cld
mov
repz
cmp
stos
mov
mov
out
fadd
es
xor
ror
imul
cmp
(bad)
lahf
mov
mov
pusha
pop
add
add
int
mov
inc
or
call
add
add
loopne
stc
out
inc
scas
loop
push
sbb
int3
icebp
enter
xchg
loopne
push
add
add
xchg
mov
mov
sti
fdivr
inc
test
add
mov
mov
push
or
mov
push
push
add
les
(bad)
dec
pop
in
sbb
gs
or
push
add
adc
mov
mov
push
cmp
inc
sub
or
add
jb
or
jmp
and
je
cld
dec
cmps
and
inc
sub
je
cld
sbb
sub
sub
bound
jge
sub
xchg
adc
mov
test
scas
test
add
das
jne
fmul
nop
outs
bound
loop
stos
ss
dec
mov
xor
sub
inc
ins
mov
add
ins
jl
test
(bad)
fild
das
sbb
pop
daa
or
sti
add
or
stc
pop
pop
aas
out
sbb
xor
ret
and
jne
and
je
xchg
nop
sbb
dec
in
mov
adc
mov
jns
pop
inc
xor
es
cmp
jne
mov
and
(bad)
movs
rcr
adc
sar
das
xor
jg
mov
mov
add
jl
loopne
pop
jmp
arpl
ret
mov
and
jge
imul
inc
adc
inc
jle
sbb
pop
sub
sbb
(bad)
rcl
sbb
fist
fcmovne
jle
sbb
xor
sbb
rol
icebp
clc
ss
jbe
aam
mov
jae
ret
(bad)
fwait
jo
inc
sbb
push
xchg
test
or
mov
cmp
cli
cdq
idiv
mov
mov
inc
pushf
ret
sbb
je
add
or
jmp
(bad)
jbe
mov
sub
jno
inc
xchg
mov
lds
rcl
dec
cld
or
fidiv
mov
mov
inc
add
leave
dec
add
push
dec
inc
fld
inc
mov
sar
int3
pop
jmp
bound
jecxz
sbb
add
js
and
inc
or
push
lods
dec
enter
add
adc
adc
test
cwde
xlat
(bad)
jmp
inc
sbb
dec
test
or
push
sbb
ret
and
rol
push
or
mov
shr
shr
rcr
adc
pop
pop
jmp
jp
push
sub
jnp
xchg
int
pop
retf
dec
mov
cmp
xor
dec
xchg
scas
hlt
dec
cdq
inc
pusha
sub
xchg
or
mov
das
xchg
xor
xor
test
sbb
mov
add
inc
rcr
pop
sbb
pop
add
add
mov
(bad)
inc
xchg
mov
pushf
test
sahf
aas
mov
or
cmc
hlt
dec
js
ret
push
adc
(bad)
dec
inc
jne
push
adc
mov
lds
adc
gs
sub
std
rcr
ss
inc
cmp
push
dec
adc
hlt
pop
sbb
mov
mov
call
xor
aas
xchg
xor
lea
xchg
loope
clc
lock
push
dec
xor
daa
shl
fild
add
inc
ret
imul
xlat
sbb
jl
outs
push
(bad)
arpl
add
or
ss
ret
jge
or
dec
inc
push
mov
inc
lock
jmp
mov
mov
cmps
adc
inc
cld
nop
sbb
sti
add
repz
js
add
fiadd
retf
mov
pop
mov
inc
jns
mov
adc
jmp
mov
pop
adc
xlat
fistp
ficomp
sbb
dec
cmps
call
add
shl
add
lods
inc
clc
or
mov
movs
xchg
or
lock
popf
fsub
add
(bad)
lock
mov
xchg
dec
inc
sub
shl
mov
std
or
rcl
push
mov
mov
jl
inc
fisub
movs
popa
or
mov
cmp
adc
clc
add
lds
xor
popa
jo
add
aad
xor
sbb
cmp
mov
ins
inc
lods
scas
jmp
int3
and
push
inc
mov
pushw
mov
aas
inc
imul
pop
js
push
ss
mov
cwde
adc
cwde
push
pop
sbb
clc
lea
inc
js
rcl
inc
nop
mov
mov
or
push
loopne
inc
or
fcomp
sub
push
jbe
jbe
jbe
inc
ror
xor
and
mov
dec
sbb
pop
add
inc
and
sub
les
call
ja
aaa
mov
mov
loopne
push
in
ror
adc
push
rcr
push
jo
jae
mov
jle
mov
call
ins
loope
div
cmp
dec
push
mov
pusha
lock
pop
push
daa
cs
inc
div
cmp
loopne
and
inc
(bad)
adc
inc
dec
pop
or
and
sub
add
xor
xor
js
or
sbb
es
or
stos
and
js
(bad)
into
aaa
sub
rcr
rol
nop
outs
xor
push
sbb
xor
inc
dec
xlat
push
pop
retf
adc
rcr
or
jge
pop
add
adc
ins
jg
mov
inc
stos
cwde
sub
sub
retf
push
lock
loop
test
sbb
pop
nop
or
js
call
sbb
push
(bad)
hlt
pop
mov
inc
mov
lea
psrlw
retf
shr
shr
jl
and
loope
rcl
jbe
rol
push
xor
inc
int3
inc
rol
sar
mov
dec
sahf
xor
push
ret
mov
add
loope
pushf
pop
cmp
mov
push
sub
cmp
pop
pop
lock
fsub
cmp
fist
cmp
push
xor
or
stos
push
int3
adc
xor
jns
shl
cli
cmp
adc
cmp
in
or
fcom
push
mov
push
inc
adc
lea
jbe
or
inc
xor
(bad)
adc
lds
retf
div
inc
xor
lods
xor
inc
xor
ud0
mov
adc
xchg
sub
push
pusha
js
rol
mov
sub
pop
inc
fadd
loope
cli
ret
enter
sbb
shl
shl
rcpps
ja
sbb
enter
push
mov
push
mov
shl
xor
fcomi
push
push
aam
fcom
mov
add
mov
add
jno
jns
sub
into
call
and
fadd
fadd
enter
add
inc
jecxz
data16
es
add
js
jmp
sti
fcomp
inc
outs
fdiv
or
aam
sbb
ret
nop
mov
add
adc
jl
xor
sub
fisttp
iret
add
ins
movsx
add
out
adc
inc
or
add
pop
and
ins
mov
pop
sub
add
dec
cwde
ret
fmul
mov
or
adc
lock
sbb
jne
push
clc
push
cmp
retf
ja
data16
cmp
pop
add
clc
adc
mov
or
shr
add
jmp
call
jp
pop
shr
pop
nop
lea
mov
xor
not
mov
stos
mov
xchg
jo
or
lea
pop
loopne
mov
in
xlat
or
fbstp
push
icebp
and
mov
aas
sar
dec
pop
sub
fadd
pop
clc
ins
(bad)
stc
push
mov
fimul
js
sahf
push
je
ret
aaa
cmp
mov
ret
xchg
cwde
dec
je
sbb
add
fs
sbb
mov
mov
dec
dec
aam
outs
push
push
fs
pop
(bad)
xor
dec
ins
mov
inc
add
mov
pusha
push
in
lds
cmp
ror
sbb
stos
xor
aaa
dec
imul
add
add
pop
pop
int3
fs
push
jge
jge
pop
popf
aam
xor
add
xchg
xchg
push
aaa
aaa
add
cmp
lock
std
add
inc
out
jnp
add
dec
hlt
mov
retf
arpl
hlt
dec
nop
cdq
stos
cmp
pop
cmp
jo
(bad)
into
jnp
aaa
jl
inc
shl
adc
add
sub
inc
add
adc
test
jno
inc
into
xor
mov
call
movs
push
or
pop
ret
inc
cld
dec
and
jmp
iret
xor
or
jo
cmp
jge
pop
mov
sahf
fiadd
dec
push
mov
inc
push
cmp
fist
in
mov
mov
adc
scas
mov
rol
dec
sbb
addr16
iret
dec
retf
mov
test
adc
cmp
(bad)
jnp
jns
jno
or
sub
adc
push
xor
jl
add
cmp
or
inc
pushf
xor
cld
xchg
adc
aas
jecxz
or
loopne
add
mov
add
bndldx
adc
dec
mov
dec
mov
imul
adc
inc
jge
rol
jecxz
into
sar
sbb
jne
jnp
and
sub
cs
pusha
jl
sti
sub
inc
xchg
pop
xor
sti
sbb
enter
add
adc
in
fcomp
ror
mov
out
inc
adc
sar
idiv
sbb
or
or
call
cmp
add
pop
in
mov
jl
xor
dec
cs
and
outs
fstp
jge
cmp
imul
aad
jl
cmp
inc
mov
cmp
xor
fadd
fild
retf
das
loopne
cmp
lods
mov
jno
cs
and
inc
rcr
add
loope
mov
add
(bad)
cmp
pop
or
cs
movs
fucom
out
retf
adc
or
sbb
out
mov
mov
adc
sub
bound
ret
imul
cli
fadd
loop
sub
and
inc
mov
push
shl
ret
rol
out
add
mov
ret
add
cmp
inc
push
std
inc
sti
jg
loop
mov
push
inc
sub
imul
out
out
xor
inc
stos
pop
inc
lea
sbb
dec
pop
lock
loope
les
mov
xor
mov
sbb
pop
and
jmp
pop
or
out
ror
xchg
add
jmp
dec
lds
or
push
sub
dec
adc
add
sub
loop
sti
dec
sub
shl
mov
es
ins
(bad)
push
loop
push
adc
stos
fild
or
add
hlt
cli
and
push
leave
pop
pop
je
dec
je
push
lahf
pop
xchg
xchg
add
inc
mov
add
adc
add
sub
int
or
jmp
adc
push
ror
adc
adc
movs
or
and
rcl
inc
in
mov
xchg
lock
(bad)
addr16
dec
add
test
jmp
scas
and
and
inc
jnp
xchg
pop
push
pop
pushf
pop
or
push
out
xchg
mov
or
pop
adc
(bad)
retf
lock
jb
add
das
jns
xchg
xchg
vdivpd
adc
mov
jmp
add
jae
jl
inc
sub
aaa
test
(bad)
cmp
je
add
jmp
sbb
call
add
rcr
sbb
and
test
repnz
jle
and
mov
test
xor
movs
sar
mov
add
pop
call
sbb
and
mov
enter
dec
shr
mov
in
push
adc
(bad)
mov
ror
cs
sub
fadd
popf
aad
add
(bad)
dec
pop
dec
ret
or
(bad)
push
or
dec
adc
outs
xor
clc
push
mov
adc
add
xor
cmp
jle
xchg
test
test
clc
sbb
(bad)
cs
mov
jg
mov
retf
cmp
xchg
clc
inc
shr
add
mov
cmp
addr16
je
xor
inc
out
sub
js
inc
mov
cli
inc
es
and
daa
loopne
and
and
adc
dec
xchg
sub
lea
or
jg
and
mov
xchg
dec
enter
push
xor
sbb
hlt
fcomp
cld
(bad)
dec
or
mov
xchg
pop
xchg
ret
sub
and
sbb
adc
xchg
mov
cmp
jle
cld
scas
fisttp
sbb
or
or
or
jmp
jge
sub
sub
lock
pop
stos
jno
xchg
jbe
fmul
inc
pop
dec
jae
inc
in
jle
clc
and
xchg
loopne
jno
sbb
out
or
into
mov
xchg
call
fsubr
or
xchg
fadd
outs
fdivr
outs
push
dec
pusha
scas
inc
cli
adc
dec
aam
into
or
in
mov
ror
fcomi
pop
add
add
pusha
jb
rcr
pop
aam
pop
mov
cmp
xchg
shl
push
xchg
ss
shl
add
mul
or
push
js
lea
push
mov
or
add
ret
ror
ror
out
or
rcl
and
mov
pop
(bad)
shr
sbb
xchg
xor
pop
dec
adc
push
js
je
pop
sub
jge
js
in
mov
std
add
hlt
ds
sub
lea
cmps
add
add
fisttp
out
dec
test
adc
adc
xchg
(bad)
or
enter
push
add
add
hlt
adc
add
mov
pop
add
imul
xchg
enter
cwde
call
and
fld
and
cmp
xor
mov
outs
lock
loopne
pop
add
add
or
cmp
cli
fidivr
fistp
fadd
jle
mov
or
ficomp
test
mov
clc
dec
inc
mov
aas
xchg
ss
adc
sti
inc
mov
xor
xor
adc
sahf
or
xor
in
(bad)
gs
adc
int3
sar
push
and
adc
pop
push
sar
sub
mov
add
shl
cmp
fiadd
ret
fcom
sub
and
lock
rol
pushf
nop
mov
sti
inc
(bad)
(bad)
push
cmp
gs
gs
jge
mov
inc
js
add
hlt
and
fimul
mov
or
mov
mov
cmps
inc
out
test
or
inc
or
xor
fadd
pop
in
add
or
or
dec
movupd
xchg
cmp
out
nop
in
sbb
mov
dec
hlt
mov
inc
sar
mov
shl
inc
lods
xor
test
mov
out
enter
or
clc
prefetchnta
dec
add
mov
pop
call
push
add
mov
ins
dec
sub
jg
aaa
rol
or
aaa
nop
outs
loop
mov
cmp
jne
call
sahf
sahf
sub
sub
pop
arpl
rcr
inc
jp
sbb
call
push
cmp
adc
data16
or
dec
sub
inc
inc
jl
jns
cmp
xchg
pop
mov
pop
add
test
ret
or
fdiv
xchg
xor
js
or
sub
sub
xor
data16
push
or
and
pop
outs
add
test
sbb
sbb
add
lea
aam
pushf
add
pusha
jmp
retf
sahf
mov
push
test
add
jbe
(bad)
mov
add
push
push
inc
add
repnz
pop
add
pop
or
cwde
or
sar
inc
and
and
outs
xchg
sti
add
add
xor
out
mov
inc
stc
inc
jl
sbb
ins
xor
add
imul
mov
or
xchg
cmp
lea
sbb
(bad)
push
inc
dec
(bad)
push
mov
mov
cmp
ret
test
fadd
cmp
jle
jne
sub
into
test
rol
les
push
cmc
push
mov
mov
xchg
mov
(bad)
pushf
sub
mov
cwde
aam
sti
mov
clc
mov
push
into
and
adc
dec
test
cwde
push
dec
ins
push
in
fadd
lock
(bad)
adc
push
add
lock
ret
mov
rcl
call
rcr
inc
loopne
lods
gs
rcl
fsubr
and
rcr
mov
sbb
mov
pop
ja
or
fsub
add
shr
push
out
dec
mov
adc
adc
push
mov
nop
(bad)
xchg
out
mov
(bad)
call
(bad)
mov
outs
or
rcl
add
cmc
sbb
neg
neg
neg
aad
push
push
clc
adc
adc
or
test
jge
inc
jmp
fstp
fcom
sbb
pop
adc
test
cmp
and
aaa
rcl
push
mov
xchg
pop
fadd
jle
sub
pop
add
pop
mov
call
push
jle
mov
mov
lock
sub
cmps
mov
jo
sar
pop
mov
adc
adc
mov
loop
ret
xor
inc
push
xchg
dec
test
inc
push
mov
mov
jle
add
lea
outs
adc
adc
iret
push
sub
xlat
pop
psraw
dec
shl
push
(bad)
sbb
loopne
jge
xor
xor
mov
popf
xor
add
add
push
push
pop
inc
fdivr
push
adc
ret
add
xchg
mov
retf
pop
outs
push
icebp
nop
pop
pop
mov
push
sbb
cmps
and
xchg
pop
mov
mov
scas
mov
pop
sbb
sahf
add
add
xlat
inc
sbb
ret
pop
aam
mov
push
lods
sar
mov
jnp
sub
jge
pop
inc
lods
sbb
shl
xchg
push
imul
sub
sbb
retf
mov
inc
shl
mov
and
leave
pop
inc
loopne
mov
adc
pop
add
jo
mov
sbb
inc
test
cdq
dec
sub
(bad)
or
and
xchg
push
mov
jo
add
je
or
push
mov
retf
fist
and
push
inc
or
(bad)
cmc
mov
mov
mov
enter
push
shr
mov
mov
js
mov
adc
data16
dec
loop
call
clc
dec
es
inc
xor
cmp
jl
cmp
jmp
fsubr
add
pop
cmp
mov
dec
rcl
inc
or
fs
int
add
add
js
jle
shl
inc
cmp
mov
mov
pop
pop
jb
lods
jecxz
push
std
jge
sbb
sbb
and
jle
aad
shr
aas
mov
adc
or
ret
inc
in
adc
ror
lods
push
jo
pop
fs
sbb
imul
je
add
(bad)
pop
pop
fcomp
push
pop
mov
pop
aaa
push
fidivr
jne
inc
push
rol
test
sub
repnz
clc
mov
sbb
xor
or
mov
int
in
add
push
sbb
icebp
and
aaa
call
adc
inc
mov
push
push
and
xchg
and
or
cmp
inc
pop
or
adc
mov
sbb
cli
scas
mov
test
add
(bad)
ror
mov
pop
add
add
das
add
sti
pop
outs
push
push
or
in
lods
mov
retf
mov
bswap
pop
or
pop
jno
(bad)
clc
es
or
call
rcl
adc
or
inc
inc
(bad)
psraw
loope
inc
stc
cwde
cmp
add
lea
jmp
lea
adc
(bad)
scas
out
test
mov
jno
or
inc
jle
cwde
jno
adc
mov
gs
add
loopne
mov
inc
inc
mov
sar
icebp
xchg
(bad)
ror
mov
adc
xchg
bound
push
rol
or
repz
jge
outs
sahf
out
aad
lahf
jl
sbb
pop
add
je
out
mov
or
add
pop
pop
out
ja
jle
dec
xor
mov
arpl
inc
xor
inc
jb
jmp
adc
adc
out
push
mov
test
dec
outs
scas
cmp
jno
daa
add
(bad)
mov
push
inc
les
add
dec
xchg
xchg
ror
or
dec
push
icebp
push
clc
push
adc
xchg
mov
dec
jb
sbb
shr
inc
and
push
mov
fwait
push
inc
add
xchg
test
pop
add
sub
idiv
sub
or
lods
rol
sub
test
add
icebp
xor
outs
adc
dec
mov
push
aaa
push
push
clc
jmp
ror
cwde
mov
loopne
cdq
xlat
push
mov
inc
push
cmp
mov
jecxz
pop
and
test
test
sbb
cmp
rol
lock
cmp
jge
das
loopne
xor
push
daa
mov
test
add
dec
sbb
push
or
cmp
imul
dec
rol
dec
cmp
or
dec
sbb
fisub
test
add
fwait
or
sbb
inc
and
mov
adc
and
call
mov
sub
sbb
push
push
rcl
add
or
lahf
add
and
cmp
fcom
ret
or
sub
add
dec
push
das
ds
test
lahf
in
or
sbb
or
pushf
mov
ret
xchg
mov
dec
adc
loopne
loopne
jge
pop
sbb
mov
dec
loopne
sub
test
shl
mov
xor
cld
ss
pop
ja
push
xchg
lods
sti
adc
add
pop
xchg
rcl
cmp
adc
(bad)
rcl
stos
and
test
ror
jmp
std
push
dec
and
nop
sahf
jp
fnstsw
cmp
sbb
adc
mov
xchg
sar
mov
clc
add
dec
push
or
sahf
mov
jae
cmp
or
add
push
or
nop
add
pop
dec
xchg
sub
loope
loopne
retf
jbe
jne
gs
shl
or
adc
or
fadd
loop
jge
jl
mov
cmps
sub
sub
jmp
outs
inc
mov
dec
xchg
mov
push
and
jmp
cmp
jnp
inc
dec
jl
push
fadd
jno
add
adc
and
push
cmp
mov
in
dec
add
pop
js
push
inc
(bad)
or
jbe
fdivrp
cmp
xor
aaa
sbb
adc
push
call
sbb
and
or
add
mov
jae
or
mov
jmp
loope
(bad)
fs
inc
cwde
pop
cmp
shl
dec
mov
mov
lea
movs
in
mov
inc
mov
cmp
mov
jp
push
push
sbb
popa
or
into
iret
xor
das
(bad)
jnp
mov
and
loope
mov
scas
das
mov
adc
mov
push
adc
pop
add
mov
xor
stos
sub
rol
bound
push
inc
xor
faddp
pop
ret
add
test
fdivr
mov
or
(bad)
adc
or
jmp
add
popa
lods
icebp
in
lea
or
push
add
and
dec
xor
jmp
jo
mov
int3
rcr
mov
inc
cs
daa
add
movs
and
sbb
dec
push
mov
adc
inc
shr
test
mov
out
sbb
aas
pop
inc
rcr
adc
(bad)
(bad)
or
mov
adc
and
inc
shl
imul
test
mov
cmp
nop
add
jl
mov
int
rcl
ins
mov
xchg
push
jbe
add
ror
mov
test
je
shl
bnd
jns
and
adc
shl
mov
add
jecxz
in
retf
pop
mov
jne
aaa
test
call
stos
sti
bound
or
jge
in
cli
sbb
jmp
sbb
repz
push
push
adc
and
mov
add
push
fwait
push
dec
scas
mov
sbb
dec
dec
dec
js
dec
sub
push
loope
mov
stos
push
and
icebp
and
lock
ficomp
mov
pop
into
xchg
idiv
dec
test
out
nop
or
jae
dec
adc
lahf
sub
inc
sbb
adc
mov
push
mov
lock
fwait
add
pop
call
sbb
ins
dec
sub
sbb
cmp
retf
jae
xor
push
sbb
mov
and
mov
ins
xchg
cmp
and
adc
or
hlt
sub
pop
adc
adc
outs
jmp
xchg
or
fstp
xor
push
aam
pop
mov
jbe
xor
not
out
push
and
mov
cmps
or
mov
jl
add
jle
sub
test
or
and
mov
(bad)
shl
inc
pop
out
add
add
jmp
or
sub
pop
test
or
jbe
pop
mov
mov
mov
lock
fild
push
cmp
hlt
cmp
ja
imul
lods
mov
push
fs
sbb
ja
mov
fadd
jns
stos
push
add
in
or
sbb
sub
fld
(bad)
and
test
xchg
dec
jmp
and
dec
or
repz
mov
or
inc
jae
jmp
dec
ja
pushf
js
cld
pop
jbe
dec
push
or
push
adc
push
scas
push
adc
mov
loopne
fisttp
mov
push
sub
mov
dec
add
mov
jge
sub
pop
cmp
sub
dec
jmp
mov
xchg
dec
jmp
mov
sub
fwait
inc
jno
dec
daa
add
mov
dec
mov
pop
out
int
add
push
scas
dec
adc
inc
push
fdivr
pop
nop
adc
add
pop
inc
push
pop
aaa
jmp
cmc
fs
inc
mov
inc
sbb
sahf
adc
pusha
cmp
pop
in
push
(bad)
add
mov
pop
in
cmp
gs
retf
or
dec
test
cmp
lea
add
sub
mov
xchg
or
add
es
loope
dec
(bad)
jmp
dec
dec
cld
loopne
fimul
cmp
or
loopne
inc
pushf
push
int3
push
mov
xor
xor
mov
jo
rol
test
gs
inc
call
or
test
outs
xor
pop
xor
jl
sbb
push
unpcklps
add
cli
add
jne
jl
cli
mov
pop
jae
cmps
outs
ins
cmp
nop
jecxz
push
sbb
push
pop
xchg
mov
dec
stos
mov
pop
gs
sub
mov
ja
mov
jne
mov
jle
xlat
sub
inc
or
add
scas
pop
out
mov
mov
push
rol
stos
mov
stos
xchg
adc
ds
cs
dec
loopne
arpl
add
sbb
cmp
mov
adc
jle
xchg
xchg
xchg
test
jg
sub
or
jbe
inc
xchg
pop
sbb
test
daa
xchg
inc
or
mov
es
add
shr
push
adc
rcl
push
and
(bad)
push
arpl
dec
in
mov
ret
call
mov
add
scas
push
mov
adc
push
(bad)
arpl
ror
in
xchg
pushf
xchg
or
test
mov
icebp
dec
je
loopne
push
mul
pusha
dec
or
mov
arpl
(bad)
mov
mov
push
out
lea
and
jo
rol
push
je
mov
mov
data16
mov
inc
adc
mov
mov
mov
scas
pop
daa
xor
jl
inc
and
aas
jo
mov
cmp
call
inc
adc
out
cmp
push
dec
push
sbb
and
mov
cli
das
bound
inc
push
das
test
push
outs
and
sbb
stc
and
jecxz
or
adc
mov
movs
dec
popa
cmps
mov
sub
cld
add
popa
rcl
or
hlt
jo
jo
pop
ficom
lock
adc
mov
gs
or
shl
in
jo
jmp
or
fld
push
into
ins
test
clc
dec
push
mov
call
(bad)
nop
dec
jg
cmp
jg
mov
jmp
bound
imul
dec
das
and
inc
mov
lods
pop
and
fsub
mov
jnp
ret
or
sub
mov
sahf
mov
es
pop
add
jmp
cmp
arpl
int
push
xchg
shl
dec
(bad)
adc
mov
call
dec
shl
or
pop
mov
pop
(bad)
jmp
stos
movs
adc
push
mov
fmul
adc
mov
mov
dec
or
popf
jge
cld
jns
(bad)
mov
retf
dec
dec
xchg
push
sar
imul
or
lea
(bad)
out
add
bound
movs
xchg
pop
push
or
or
sbb
xor
inc
push
dec
leave
test
test
push
hlt
add
imul
lods
push
xchg
or
sub
mov
adc
push
pop
aas
movs
xor
sahf
adc
or
and
nop
push
push
pop
sbb
lods
(bad)
hlt
jbe
jle
ret
daa
mov
mov
mov
cmp
leave
gs
jmp
jl
ja
add
lock
cmp
aaa
aas
sbb
ret
cmp
mov
jae
test
jae
jg
shr
sbb
(bad)
pop
fld
(bad)
je
mov
pop
sbb
add
or
pop
add
add
xor
mov
mov
push
mov
add
xchg
fadd
shr
shr
clc
mov
adc
cld
ret
jp
sub
dec
mov
js
xor
push
inc
je
(bad)
cmps
out
shl
jle
gs
xchg
inc
sub
cmp
and
imul
lods
ss
mov
aaa
jno
rcl
jg
inc
pop
fidivr
xchg
arpl
shl
mov
and
(bad)
pop
inc
das
xchg
icebp
pop
sub
je
jmp
sti
add
ret
bound
jg
pushf
pushf
and
mov
jbe
push
cli
(bad)
aad
mov
mov
dec
je
add
jmp
cmp
mov
mov
mov
sahf
push
xlat
mov
out
jmp
jmp
push
pop
pop
loopne
push
pop
movs
inc
dec
and
ss
sbb
dec
sbb
enter
jge
add
daa
jge
mov
mov
dec
sub
push
dec
mov
cmp
sub
jge
pop
sbb
clc
sub
clc
imul
xchg
mov
inc
test
movzx
int3
lahf
(bad)
push
xchg
mov
xchg
out
(bad)
sbb
dec
cmp
mov
movsx
inc
(bad)
and
ret
(bad)
fidivr
adc
sar
push
inc
cmp
rol
xlat
jmp
add
sbb
sub
pop
addr16
cmp
ret
ficom
shr
sub
fist
push
das
cmp
push
fmul
fstp
add
inc
cdq
mov
jo
loop
fistp
sub
adc
int
add
inc
test
pop
add
(bad)
icebp
adc
les
xchg
add
inc
pop
js
inc
pop
inc
into
mov
stos
sbb
sbb
xchg
mov
ret
rcr
add
inc
sub
mov
pop
mov
mov
pop
inc
push
and
rcr
mov
imul
loopne
je
pusha
addr16
in
(bad)
and
pop
cmp
inc
das
inc
fisttp
daa
jmp
xor
mov
add
retf
dec
hlt
jp
mov
psubsb
lock
dec
xor
or
pop
rol
jp
(bad)
push
inc
es
enter
inc
mov
sub
mov
ins
inc
dec
pusha
cmp
jae
jae
sub
mov
sub
dec
in
popa
outs
or
mov
or
aad
mov
data16
xchg
and
or
pop
push
shr
jo
add
aas
or
call
cwde
sub
cmp
cwde
cmp
pop
or
sbb
pop
sub
sar
mov
xchg
push
add
dec
ret
fadd
pushf
ret
test
xchg
cli
call
nop
clc
dec
adc
jp
repnz
jbe
mov
inc
(bad)
xlat
(bad)
adc
or
jg
ja
pop
rol
inc
dec
add
mov
js
add
inc
dec
push
adc
rol
and
fwait
and
add
xor
xlat
hlt
inc
or
mov
sar
fadd
mov
add
cli
cmp
out
out
jbe
mov
inc
add
xchg
jns
sbb
rol
xchg
xor
jg
aaa
pop
xchg
test
mov
push
xor
dec
or
or
cmp
xchg
dec
mov
outs
(bad)
lock
fimul
cmp
loop
inc
mov
inc
adc
loop
loop
or
dec
sub
push
(bad)
scas
pusha
sti
xor
jl
add
in
or
hlt
jg
sbb
lods
cmps
scas
push
or
xor
in
push
mov
mov
js
push
lock
mov
daa
and
shl
inc
xor
jne
add
out
and
jecxz
test
sub
cld
cmp
sub
push
mov
xlat
pop
aas
dec
mov
inc
clc
inc
sbb
iret
rcr
arpl
(bad)
mov
clc
jbe
xchg
fimul
nop
pop
sub
pop
and
jbe
(bad)
(bad)
fild
dec
inc
ret
and
test
inc
inc
mov
pop
cwde
or
stos
inc
dec
cld
gs
fadd
add
aas
loopne
jmp
sbb
jecxz
adc
or
or
fmul
mov
mov
lea
push
shr
test
ins
add
sub
or
xor
ins
adc
mov
sbb
inc
sub
in
sbb
stos
(bad)
idiv
jecxz
pop
test
clc
mov
adc
jp
add
fsubr
sub
test
jecxz
add
mov
cld
jecxz
test
rol
push
int
cmp
lods
inc
in
add
(bad)
xlat
mov
mov
mov
adc
test
(bad)
adc
cmp
clc
xchg
inc
inc
or
sub
push
jle
sub
add
add
adc
pop
es
cmc
pop
pop
pop
mov
das
gs
pop
mov
pop
mov
and
jmp
mov
inc
or
enter
add
push
push
test
movs
daa
sub
xchg
int
add
rcr
out
out
lods
scas
imul
pop
jne
xor
fild
xchg
cmp
mov
mov
sub
xchg
push
test
dec
mov
jbe
pop
push
push
js
mov
imul
ds
mov
jge
sub
loope
sbb
adc
mov
test
out
cmp
fdivr
dec
(bad)
add
mov
js
add
cmp
xor
lahf
mov
ret
add
nop
pop
ret
sbb
xor
xlat
push
and
adc
inc
sub
enter
ret
mov
test
imul
push
lar
test
mov
arpl
jge
mov
popf
daa
inc
daa
movs
add
mov
and
jne
jne
or
cmps
jns
xor
push
pop
int
adc
xor
push
dec
or
movs
(bad)
add
(bad)
mov
pop
mov
or
inc
stos
pop
pusha
mov
adc
shl
mov
(bad)
add
cld
fild
fmul
adc
fmul
inc
fmul
rcl
pop
das
lock
les
fdivr
fdivr
and
pop
rcl
gs
ss
fmul
pop
aam
fdiv
cld
and
aam
xor
mov
adc
and
in
xor
dec
shl
push
fsub
pop
call
call
int
gs
pop
les
gs
(bad)
cmp
les
mov
das
lods
cmp
rcr
fldcw
lods
rol
int3
xchg
add
push
xchg
cmps
mov
cmps
sbb
push
or
popf
push
in
or
pop
push
fwait
in
popa
jae
inc
or
adc
popa
inc
hlt
arpl
adc
mov
pop
sub
call
pusha
push
mov
cmp
ror
xor
movs
ss
mov
mov
mov
jne
pop
sbb
xchg
mov
sub
repz
repz
pop
sub
jl
lahf
adc
pusha
sahf
arpl
test
adc
sbb
arpl
add
adc
inc
and
and
push
retf
lock
dec
pop
in
inc
sub
adc
adc
adc
cmp
xor
cmp
cs
add
cmp
std
sub
and
inc
imul
retf
add
(bad)
push
add
aas
pop
sub
aam
mov
jne
daa
das
mov
(bad)
(bad)
push
xchg
(bad)
mov
aaa
jns
dec
push
and
sbb
movs
(bad)
in
sub
cmc
or
mov
jp
or
xor
repz
pusha
inc
jo
inc
inc
inc
add
(bad)
sub
scas
or
and
pop
retf
idiv
mov
jnp
dec
jb
mov
sub
outs
dec
lock
stos
sbb
dec
in
sbb
bnd
inc
mov
sar
mov
in
add
ds
in
call
in
sub
fsubr
push
imul
add
and
popa
sbb
lock
xchg
cmp
in
sbb
sub
mul
adc
pusha
dec
loopne
xor
add
frstor
mov
retf
and
sub
jns
xchg
mov
mov
std
xlat
ret
jge
sub
or
ror
sbb
xchg
push
add
imul
adc
stos
arpl
sti
shl
sub
or
push
inc
movs
aam
sar
adc
sub
pop
sub
xor
fiadd
fbstp
add
sub
sbb
add
mov
push
sub
add
cmp
or
mov
in
sub
cwde
shl
pusha
and
sbb
cwde
ja
xchg
mov
or
outs
push
sub
dec
rol
push
sbb
dec
pop
jp
xchg
les
push
push
add
add
pop
push
xchg
and
sub
inc
fidiv
movs
jne
or
xor
test
xor
or
add
shl
add
mov
jecxz
mov
sub
call
inc
xchg
mov
jo
xchg
fdivr
test
adc
jbe
out
xor
add
dec
sbb
pop
or
and
inc
pusha
add
adc
sbb
shl
pop
xor
sub
mov
pop
cmp
sub
mov
dec
enter
bound
jnp
sub
sti
popf
mov
or
xchg
ret
sbb
les
mov
fs
add
sub
xor
fsubp
loop
or
jmp
pop
call
xchg
les
xchg
or
movs
inc
jp
ss
out
jmp
adc
or
mov
dec
sub
and
xor
or
mov
cmp
aad
mov
adc
(bad)
cmps
add
pusha
push
scas
fidiv
(bad)
push
mov
out
push
push
jmp
dec
pusha
sub
loope
std
cdq
mov
mov
or
add
sti
mov
(bad)
neg
lea
shl
test
retf
xchg
imul
cs
out
stos
pop
add
push
mov
lock
push
in
cmp
sbb
adc
pop
hlt
xor
fwait
xor
fimul
in
stos
lock
imul
add
jns
jmp
add
(bad)
adc
outs
and
cmps
inc
cmp
fnstcw
js
hlt
neg
and
jne
ret
inc
sbb
in
dec
push
in
int
mov
call
ja
cld
add
sub
mov
or
xor
sub
repz
pusha
clc
add
add
push
mov
add
push
dec
cdq
in
outs
in
and
das
pop
(bad)
fdiv
jmp
in
aas
lock
jmp
adc
pop
(bad)
loop
fidivr
adc
mov
mov
add
add
add
jns
mov
cmc
retf
arpl
fisub
push
retf
push
push
movs
jb
sub
cmp
lea
pop
and
push
sbb
mov
or
popa
and
es
imul
and
push
and
into
hlt
iret
shl
stc
imul
pusha
or
stc
sub
adc
xor
cmp
pop
and
pop
scas
pop
dec
jno
pop
retf
pop
sti
call
or
retf
inc
rol
add
jne
aad
test
aaa
cmp
inc
push
dec
add
mov
sbb
cmp
out
dec
ins
jl
in
sub
xor
push
cs
adc
dec
sbb
fadd
mov
imul
pop
popa
inc
xchg
add
jge
loopne
jp
push
cli
push
mov
out
adc
add
scas
pop
mov
sub
cmps
jns
enter
pop
push
sub
pop
inc
neg
push
push
test
or
pushf
mov
sub
mov
cmovb
mov
int3
jge
sahf
cmps
imul
sub
xchg
and
aaa
sbb
(bad)
and
xlat
(bad)
call
push
pop
mov
sub
fcmovu
dec
xchg
add
xor
or
add
pop
and
adc
scas
cmps
adc
shr
dec
or
dec
loopne
push
add
cmp
sar
jne
add
loope
imul
add
sbb
pop
add
push
aaa
js
sbb
imul
ror
rol
push
or
pop
add
or
sbb
xchg
push
pop
mov
cli
aaa
add
inc
pusha
mov
call
aaa
loope
lock
(bad)
mov
xor
mov
and
sub
push
cmp
push
cwde
sbb
sub
mov
or
pop
add
and
sbb
test
ret
or
ror
add
scas
fwait
adc
inc
call
xor
pop
cmp
mov
jl
inc
inc
sbb
in
dec
sub
sbb
(bad)
xchg
out
sbb
rcl
and
sub
fsub
ror
inc
rcl
outs
mov
or
add
out
inc
(bad)
cmp
push
and
sbb
inc
xchg
or
and
pop
xchg
sbb
or
push
ja
dec
movzx
shl
inc
pop
pop
add
cmp
pop
inc
inc
imul
dec
pop
inc
sub
adc
popa
mov
and
or
and
rcl
aas
mov
sbb
inc
and
in
push
add
cs
je
adc
mov
add
add
das
inc
mov
inc
cmp
adc
add
add
or
jg
fsub
and
cmp
jne
or
push
jl
and
ror
rcl
mov
add
outs
loope
dec
sbb
ds
add
pop
stos
pop
mov
inc
add
mov
mov
mov
mov
loop
mov
push
sar
adc
enter
je
lods
in
lock
mov
bound
and
test
dec
add
adc
rol
fsub
xor
mov
jecxz
xchg
push
sbb
add
xor
mov
outs
mov
in
sbb
push
cmc
ins
lahf
mov
jle
dec
add
adc
stc
or
inc
pop
jl
mov
in
xchg
lock
es
push
pop
dec
mov
cmp
inc
or
in
jge
inc
add
cmp
jne
cmc
xchg
inc
add
or
adc
jmp
dec
enter
out
and
and
(bad)
in
aad
mov
adc
push
sbb
xor
push
je
inc
jbe
inc
and
loop
clc
imul
mov
imul
fdiv
sar
cmps
dec
add
push
xchg
jmp
sbb
jecxz
dec
dec
nop
push
sbb
push
test
cmp
xchg
adc
sbb
sbb
inc
lock
inc
xchg
and
mov
inc
retf
iret
jl
pop
or
add
or
pop
add
ror
imul
(bad)
adc
(bad)
cmp
mov
out
mov
mov
xchg
pushf
cs
ja
imul
sbb
mov
sbb
call
mov
test
es
js
push
loopne
div
popa
cwde
mov
push
inc
sub
fs
cmp
mov
ror
test
pop
jbe
jne
xabort
sub
js
and
add
mov
movs
int
pop
(bad)
dec
inc
sub
mov
add
xor
bound
shl
mov
cmp
mov
pop
mov
sbb
and
cmp
test
pop
pop
mov
and
div
xor
pop
mov
sub
sbb
push
add
add
daa
and
and
and
pop
rcl
sub
pop
push
jg
out
outs
jle
dec
xor
adc
or
in
lea
and
loopne
xor
jge
jno
test
pop
mov
jo
inc
push
mov
not
dec
sub
bound
je
sub
imul
add
xor
or
pop
xlat
jl
xor
iret
add
pop
sbb
test
ror
ret
sti
dec
add
adc
and
adc
loope
cld
adc
(bad)
lea
cld
pop
enter
sbb
xor
pop
dec
jmp
add
fld
inc
nop
rol
mov
cmp
pusha
js
lock
lds
and
jne
sbb
fild
xchg
and
fist
pusha
outs
outs
popa
add
add
add
nop
or
stos
sub
jecxz
repz
push
or
add
pop
(bad)
imul
(bad)
lock
jns
sti
jmp
pop
(bad)
popf
jnp
or
je
test
push
daa
sar
adc
adc
ror
cmc
pop
dec
xchg
les
shl
pop
push
and
clc
mov
fadd
sub
js
or
and
mov
add
fwait
push
fst
int3
adc
bound
jae
inc
mov
jl
inc
test
fnstcw
movzx
push
je
ins
mov
dec
add
or
adc
sbb
mul
cmp
je
add
sbb
sbb
sti
mov
jmp
cs
vpmuludq
adc
loop
jo
jl
test
push
add
inc
retf
std
mov
adc
inc
es
pusha
lods
sar
daa
clc
fmul
and
pop
mov
adc
mov
adc
pusha
mov
imul
adc
call
ins
xor
arpl
call
push
mov
lds
ror
lods
pop
adc
push
mov
mov
add
shr
clc
cld
push
jb
clc
dec
jne
mov
mov
cmp
sbb
xor
in
mov
sbb
ss
jne
ins
sub
addr16
add
(bad)
sti
fxch
jle
inc
add
push
push
mov
mov
inc
cmp
xor
loop
xchg
ja
cmp
xor
shl
mov
jge
enter
mov
inc
sub
sbb
ja
sub
jle
mov
jne
pop
push
pop
inc
loope
mov
rol
xchg
and
pop
sahf
jge
adc
ret
ret
push
xor
fwait
and
or
je
stos
ret
xchg
fwait
iret
pop
stc
pop
inc
or
shufps
or
add
out
push
and
xor
ds
test
js
pop
aas
mov
mov
push
mov
das
or
dec
adc
or
ret
retf
add
into
stos
cwde
mov
sbb
sbb
or
jmp
mov
adc
je
jmp
cmc
ins
cdq
nop
imul
push
mov
cmp
pop
pusha
js
jo
in
les
jge
sbb
sbb
fmul
cmp
rcr
mov
rol
loopne
mov
inc
not
sbb
cmps
cmp
add
sbb
inc
sti
loope
jne
std
dec
add
fiadd
xchg
and
mov
xchg
inc
clc
or
iret
adc
xor
cld
clc
repnz
sub
dec
mov
dec
out
or
sub
mov
mov
jl
xchg
dec
mov
or
sbb
pop
dec
xor
and
js
pop
pop
scas
and
xchg
(bad)
icebp
sub
dec
xor
push
add
test
push
lock
push
pop
aaa
jle
xchg
mov
push
pop
loopne
loope
push
lea
cmp
dec
adc
xor
adc
je
inc
and
cmc
cmp
rcr
sub
xchg
cmp
test
pop
je
sub
je
xor
push
lea
loopne
mov
dec
ret
push
test
aaa
jne
das
les
mov
mov
dec
icebp
ins
mov
or
mov
mov
call
je
dec
adc
(bad)
in
add
inc
cmp
push
shr
and
rcr
je
aad
fbstp
xor
les
add
in
cmc
inc
shr
xor
out
imul
rol
movs
pop
cmp
dec
pop
inc
jbe
sub
ins
add
mov
or
ror
(bad)
in
lock
pop
nop
and
xchg
jl
dec
add
outs
add
mov
ja
or
mov
loopne
xchg
jp
or
lock
adc
or
inc
xchg
xchg
invd
adc
jmp
movs
sub
(bad)
jmp
mov
popa
jo
add
and
cli
jmp
stos
mov
add
xor
je
fidivr
pop
ficomp
cmp
cmp
pop
add
jne
cmp
and
dec
inc
std
ret
fwait
add
ja
adc
xor
mov
or
jne
dec
es
addr16
mov
mov
mov
sub
clc
aaa
mov
sbb
dec
add
xchg
cmp
cmp
add
push
mov
push
iret
jmp
lea
aad
inc
or
(bad)
xor
or
lds
xchg
mov
daa
in
pop
xchg
pop
push
sbb
out
hlt
mov
stc
adc
and
sbb
mov
push
out
pop
mov
lock
sbb
in
mov
mov
aam
mov
push
lock
xchg
inc
popa
xchg
pop
adc
div
popa
xrelease
mov
adc
in
or
cmp
push
add
mov
movzx
dec
inc
cmp
inc
cmp
outs
xor
jnp
jne
mov
test
add
pop
retf
add
popf
mov
fidiv
xor
adc
sbb
push
mov
mov
add
mov
sbb
pop
mov
(bad)
mov
adc
(bad)
fwait
jb
gs
sbb
add
or
fdivr
lahf
imul
fwait
popa
jno
imul
mov
fistp
cs
aas
add
add
popa
retf
mov
test
jmp
and
ret
retf
dec
movs
jge
imul
ret
mov
jg
je
add
dec
pop
into
add
jb
pop
imul
sbb
dec
mov
push
cli
adc
inc
inc
je
pushf
fsubr
push
lock
sbb
pop
loopne
sti
sub
mov
fist
imul
shl
jbe
jmp
cmp
mov
push
ss
fcom
xor
inc
ret
adc
or
push
jge
(bad)
js
icebp
mov
bound
or
leave
and
das
xchg
xor
ins
mov
imul
xor
test
mov
cld
pop
pusha
and
iret
inc
popa
mov
push
test
cwde
mov
movaps
sbb
jecxz
jmp
popa
dec
mov
clc
jmp
add
add
test
cmp
xchg
shl
cld
imul
mov
lock
fdiv
sar
sbb
dec
retf
push
mov
dec
jnp
inc
jne
pop
inc
sub
and
xor
lods
cmp
dec
sub
cmps
add
sbb
inc
adc
dec
mov
cmp
sub
ret
mov
aas
loopne
jno
cmp
(bad)
jmp
in
add
add
xor
mov
popa
aas
ins
xor
loop
mov
sub
daa
jmp
mov
push
loopne
mov
jns
mov
sub
push
or
xlat
jle
add
xchg
mov
fidiv
fnstsw
dec
pop
add
lea
fcom
cdq
nop
out
fidiv
sub
inc
imul
aaa
mov
shr
js
mov
arpl
add
pop
adc
(bad)
ror
xor
add
jmp
mov
mov
pop
mov
add
xchg
xor
mov
ret
fwait
ins
je
dec
jecxz
inc
inc
xchg
sbb
and
adc
push
and
mov
jne
sar
shr
mov
mov
inc
and
add
enter
dec
call
cld
fldenv
loopne
mov
dec
pusha
and
adc
pop
inc
call
clc
jl
and
xchg
pop
jne
call
or
sub
cmp
jge
test
test
clc
je
mov
jne
nop
push
imul
out
es
fstp
pop
jae
mov
cld
fstp
or
push
call
or
pusha
std
add
in
inc
dec
jl
push
out
add
mov
xchg
jo
js
add
xor
mov
cwde
shl
adc
mov
xchg
or
add
cmp
adc
inc
push
xchg
push
and
sub
rcl
or
cdq
ins
add
out
push
adc
icebp
movs
jge
sub
aaa
jne
sar
in
add
push
sub
dec
inc
or
cmp
push
add
arpl
(bad)
mov
inc
xor
adc
inc
test
dec
in
and
and
jg
arpl
inc
adc
mov
repz
mov
add
push
mov
cmp
lods
jnp
in
in
dec
add
adc
xor
xchg
jecxz
test
mov
out
sbb
das
or
push
mov
(bad)
adc
pop
sbb
(bad)
cmp
sub
sti
(bad)
lahf
jmp
cmp
xor
and
ins
xor
mov
sbb
jbe
mov
into
push
mov
cmp
cmps
mov
popf
mov
and
xor
dec
ret
inc
jmp
sbb
pusha
sub
cmp
aam
adc
xchg
jo
fidiv
jg
xchg
xchg
test
imul
sbb
jne
in
jo
lea
jp
and
gs
out
push
jg
pusha
xchg
or
pop
imul
xor
(bad)
call
loopne
push
bound
adc
pushf
push
or
fld
mov
(bad)
test
ret
inc
jl
mov
loopne
and
sub
add
sub
pusha
mov
push
aam
pop
jbe
or
test
and
enter
jecxz
leave
jg
cmps
fs
mov
add
xor
fist
inc
call
ds
leave
mov
adc
pop
dec
loopne
into
or
aad
ins
xchg
mov
pop
pop
shl
pop
dec
dec
mov
fiadd
push
xor
and
jle
test
mov
mov
inc
add
add
or
or
in
test
add
inc
jle
pop
adc
add
and
int3
cwde
xchg
mov
fwait
ins
pop
xor
test
cld
cmp
inc
lock
mov
push
arpl
sub
daa
fcmove
dec
ins
daa
sub
mov
pop
xchg
dec
add
popa
mov
inc
cmp
sub
aad
or
ins
push
and
sbb
xrelease
sar
mov
xor
jle
mov
aas
and
mov
out
adc
outs
mov
adc
(bad)
fwait
add
iret
ret
(bad)
add
pmaxub
adc
rcr
mov
lahf
pop
cli
add
out
xor
jns
repz
les
push
adc
sbb
mov
cdq
(bad)
iret
ret
mov
xchg
sbb
add
lods
push
cdq
or
dec
bnd
ret
jl
shl
mov
add
ja
mov
fcmovb
neg
test
push
movs
push
fiadd
ins
jmp
pop
fist
(bad)
shr
inc
cmp
pusha
jbe
(bad)
inc
mov
or
dec
or
imul
or
add
push
ja
js
pop
dec
arpl
sub
leave
add
dec
lods
inc
push
dec
inc
mov
mov
rol
in
mov
xor
in
or
push
or
add
sbb
and
add
add
and
shl
add
rcr
push
dec
stos
jno
les
movs
leave
shl
movs
mov
jl
mov
inc
and
pop
mov
and
popa
mov
jl
fwait
or
in
mov
push
ret
or
mov
movs
adc
mov
fistp
jl
ja
or
fs
popa
sub
jbe
dec
or
loopne
xchg
mov
dec
push
outs
ja
sar
addr16
sahf
jge
xchg
cmps
imul
jg
add
in
xchg
out
sbb
add
sub
or
inc
mov
push
imul
fisttp
mov
mov
aas
or
push
mov
adc
and
iret
push
inc
mov
jle
jle
aam
in
xchg
les
scas
cmp
jne
inc
inc
mov
sub
je
and
jmp
bound
outs
xor
mov
sbb
mov
mov
mov
mov
jo
sub
xchg
je
push
jge
mov
or
mov
mov
out
add
pminub
rol
and
jge
sahf
jnp
jbe
fwait
hlt
mov
add
test
aad
ret
imul
mov
xor
fsub
add
jge
dec
dec
(bad)
sub
push
and
fwait
cmp
add
add
push
add
mov
stos
or
push
sbb
mov
fbstp
add
jmp
mov
sbb
inc
push
sub
push
dec
arpl
push
fmul
xor
adc
pop
loope
imul
jecxz
dec
dec
xor
lods
je
arpl
call
(bad)
gs
and
mov
icebp
mov
xchg
cmp
jb
mov
mov
add
shl
ins
mov
mov
cmp
mov
push
jb
cmp
add
test
rcr
iret
push
lea
cdq
dec
mov
add
pop
popa
xor
pop
data16
and
leave
mov
sbb
add
and
and
sbb
in
pop
cmp
dec
loop
out
aas
pop
add
(bad)
sbb
xlat
pop
jb
or
xchg
sbb
add
add
imul
sbb
js
sar
lea
(bad)
push
pop
pop
bound
mov
jo
jo
fsub
push
xor
ror
xchg
mov
jg
xchg
pop
dec
es
push
mov
test
xchg
test
xor
loop
xchg
dec
adc
inc
fidiv
and
retf
daa
cmp
cmp
adc
or
jns
addr16
clc
call
jmp
push
adc
movs
out
in
xchg
lock
push
jecxz
shl
leave
mov
and
inc
cmp
ins
jb
cmc
push
sahf
sub
mov
and
or
jg
inc
rcl
mov
fstp
je
or
and
fs
dec
fidivr
mov
sub
shl
inc
add
mov
pop
fabs
xor
into
movs
ror
fist
xor
pop
adc
lds
dec
dec
cdq
xchg
add
in
inc
cmp
add
idiv
pop
pop
and
mov
xchg
(bad)
in
idiv
mov
mov
add
jns
arpl
add
and
aaa
mov
add
ja
test
inc
add
fmulp
clc
mov
test
adc
mov
mov
lock
adc
ffree
(bad)
pop
out
shl
in
mov
add
mov
adc
cmp
or
aam
or
jg
add
add
xchg
test
pop
push
xchg
jg
add
cmp
js
jg
fisttp
lds
mov
cmp
lock
dec
(bad)
inc
jl
cmp
mov
fild
cwde
fadd
mov
jnp
and
in
or
loop
add
inc
sbb
add
popa
xchg
xor
ror
mov
or
arpl
or
pop
ror
xchg
sbb
in
or
inc
inc
jecxz
lods
mov
push
or
pop
or
fldln2
xchg
or
jmp
sbb
push
xor
(bad)
or
loope
jp
les
in
mov
retf
cwde
add
mov
int
rcl
adc
adc
mov
cli
adc
mov
popa
sub
add
mov
aam
add
inc
xchg
dec
or
mov
jmp
(bad)
jno
mov
cwde
and
mov
test
push
mov
xchg
rcr
cmp
push
(bad)
(bad)
push
loope
mov
not
rcl
adc
and
cmp
shl
and
fwait
enter
mov
jecxz
es
cmp
aam
dec
or
mov
fimul
sbb
push
mov
(bad)
dec
and
jle
clc
mov
aaa
inc
push
mov
test
jge
adc
clc
adc
icebp
stos
sbb
jne
mov
dec
jbe
push
mov
movs
inc
or
push
push
xor
stos
(bad)
jl
push
jbe
mov
xchg
inc
sbb
aaa
pop
test
loop
dec
pop
jg
loopne
adc
add
jnp
inc
pop
dec
mov
rcl
mov
nop
pop
sbb
shl
mov
xor
cmp
push
pop
mov
fs
outs
or
gs
xchg
lock
(bad)
repz
add
push
sbb
call
sub
pop
loope
pop
or
lea
adc
xlat
lock
mov
jg
adc
(bad)
push
mov
(bad)
call
rol
outs
call
sbb
xchg
sbb
mov
mov
movs
in
mov
cmp
stos
jmp
xor
cmp
pop
in
jmp
retf
inc
push
jnp
inc
inc
xchg
push
mov
jle
inc
dec
bound
sbb
mov
in
lds
sahf
or
mov
sbb
fsubr
xor
xchg
jbe
push
mov
ror
sbb
sub
dec
pop
push
push
push
addr16
mov
dec
test
mov
cmp
out
je
push
call
mov
adc
sti
inc
jmp
int3
jmp
aas
push
sbb
sbb
cmp
sbb
or
adc
sub
sbb
loope
jl
mov
test
(bad)
mov
fisttp
fwait
shl
jecxz
or
mov
fnsave
dec
pop
or
leave
dec
es
push
adc
retf
daa
jne
mov
pushf
push
das
and
syscall
(bad)
and
(bad)
ss
and
movups
sub
stos
ins
add
movs
sar
or
adc
inc
sbb
or
sbb
add
(bad)
in
dec
adc
add
mov
imul
les
sbb
les
jecxz
sbb
inc
adc
sbb
dec
push
push
and
and
fucomp
adc
retf
enter
adc
add
call
cmp
add
int3
call
nop
ret
and
add
dec
pop
and
add
add
jb
sbb
icebp
mov
fs
lock
push
inc
or
mov
inc
cmc
xchg
xchg
jg
mov
xlat
call
cmp
jnp
adc
scas
sbb
inc
mov
jg
js
aas
je
mov
sti
adc
cmp
les
sub
ret
sub
sub
jmp
jne
push
jno
pop
xchg
or
js
aam
adc
push
in
jbe
fwait
add
push
icebp
mov
xor
and
fldcw
jle
or
jecxz
inc
sub
jns
lahf
pop
sub
cmp
mov
mov
fld
cmp
push
mov
fnstsw
movs
push
vmwrite
sbb
pop
inc
push
sub
cld
jg
push
(bad)
push
and
sub
lods
pop
adc
xchg
test
bound
xchg
ins
shl
jle
sbb
psrad
pop
mov
mov
das
or
jl
push
in
ins
and
fmul
or
adc
sbb
adc
or
adc
test
push
xchg
in
xor
add
lock
push
lea
pushf
or
jmp
xor
pop
or
mov
and
inc
jecxz
and
dec
add
fild
sbb
cmp
jge
or
pop
lea
push
jg
push
sbb
mov
aaa
and
sub
sbb
js
sbb
mov
add
dec
mov
and
cmp
push
jge
lea
xor
adc
jne
nop
and
inc
nop
or
cdq
cmp
and
xchg
jae
adc
and
lods
clc
lahf
data16
cmp
(bad)
push
ds
test
sub
push
mov
xadd
cli
push
push
add
jne
sbb
(bad)
mov
jne
(bad)
je
imul
or
add
xor
jo
or
ins
mov
cmps
or
jns
and
inc
clc
adc
ror
adc
aam
mov
mov
mov
lea
pop
shl
add
mov
inc
and
pop
enter
jl
ror
data16
sbb
inc
add
sbb
and
sbb
mov
adc
cmp
add
jo
push
mov
mov
lea
inc
add
pop
and
dec
dec
out
cmp
fdiv
mov
loopne
push
jecxz
in
and
cmp
into
inc
cmps
add
mov
inc
dec
sbb
ss
xchg
sub
inc
or
adc
movq
add
hlt
mov
ins
and
hlt
add
push
shr
into
jbe
adc
psadbw
sbb
add
out
dec
and
sbb
mov
cmp
inc
mov
inc
push
push
xchg
rcl
addr16
or
sbb
stos
scas
cmp
out
jl
mov
add
dec
fwait
inc
adc
cmp
je
dec
or
cmc
fist
pop
in
test
inc
or
test
mov
je
adc
jmp
pop
retf
push
pop
adc
loope
loope
push
mov
ret
add
sbb
push
jns
add
fsubp
mov
or
push
mov
pop
push
sub
mov
lahf
or
popa
or
and
mov
mov
pop
test
inc
or
mov
mov
xor
test
push
add
or
inc
sbb
mov
dec
dec
sbb
jp
mov
imul
scas
push
or
cmp
xor
das
ror
loopne
lock
dec
adc
cs
adc
sbb
and
xor
inc
movs
cmp
mov
sub
adc
(bad)
mov
popf
mov
pop
scas
leave
push
add
mov
cmp
loopne
arpl
jl
or
xchg
xor
into
xchg
mov
pop
js
in
pop
out
pop
jmp
out
jbe
adc
mov
xchg
mov
mov
add
jmp
pop
add
and
push
add
or
inc
sbb
push
ret
loop
sbb
or
cmp
daa
cmp
push
mov
or
fs
dec
test
pop
jmp
arpl
or
push
dec
cdq
jmp
lock
adc
or
and
push
sbb
adc
xor
and
and
mov
outs
daa
add
and
mov
cmp
ja
inc
pop
xor
inc
jmp
daa
or
inc
add
fisttp
inc
pavgb
loop
cmp
mov
cmp
mov
js
push
inc
mov
sub
mov
rol
shl
adc
sbb
fwait
loope
les
mov
fs
jl
jo
data16
push
or
cmp
mov
ror
test
sahf
in
add
push
xor
test
xchg
in
dec
cmp
enter
movs
xchg
fisttp
inc
js
sbb
xlat
or
sti
cld
lea
push
xchg
lea
imul
push
adc
fnstenv
mov
mov
xor
add
mov
sub
xor
pop
test
xor
and
lea
adc
loop
cmp
aas
xchg
adc
hlt
add
dec
add
sub
push
aad
fild
mov
(bad)
fdivr
push
add
add
jecxz
loopne
pusha
inc
xchg
fbld
jbe
pop
mov
cmp
jb
ss
adc
ins
cmp
mov
push
add
push
icebp
sub
add
mov
js
sub
xchg
dec
push
jbe
push
inc
or
or
push
mov
inc
or
loopne
shl
inc
daa
pusha
sbb
dec
dec
sbb
jb
les
adc
push
dec
js
rcr
mov
sbb
mov
(bad)
fnstsw
inc
sbb
pop
femms
cmp
sbb
sub
bound
xchg
dec
push
lock
pop
xchg
lods
dec
lock
add
cmp
pop
pop
mov
std
les
daa
or
push
xor
inc
jmp
add
scas
inc
add
(bad)
jmp
and
cld
adc
outs
xchg
sbb
jmp
lock
inc
push
mov
push
inc
xchg
ss
mov
imul
cmp
sbb
sub
inc
dec
mov
push
mov
xor
fadd
shr
mov
test
mov
and
out
ins
or
lea
mov
cmp
xchg
test
mov
push
add
arpl
adc
mov
sahf
push
push
or
stos
mov
popa
out
cmp
call
cmp
sbb
xchg
push
int
inc
or
sub
push
pusha
cmp
add
adc
stos
or
aas
je
(bad)
retf
adc
or
xchg
lods
and
mov
jecxz
add
mov
ret
or
ret
or
lahf
ret
sbb
(bad)
cmp
and
stos
std
fs
jns
inc
and
or
inc
movs
xchg
lock
mov
push
push
fwait
sar
mov
popf
jle
lea
mov
push
dec
in
mov
add
xor
push
xchg
pop
inc
jmp
push
mov
push
(bad)
sbb
inc
sub
and
xchg
or
cmp
sbb
pop
js
loopne
es
je
fisttp
fwait
ror
jl
js
or
adc
adc
jnp
add
or
add
(bad)
and
push
pushf
inc
pop
or
add
sbb
stos
test
sub
jle
lds
xor
jae
add
jecxz
iret
cmp
daa
lock
in
push
adc
mov
dec
cmp
push
mov
invd
neg
movs
dec
sbb
inc
fs
pusha
test
fdivr
ja
ret
inc
or
dec
out
add
sub
test
je
add
jmp
pop
push
inc
pusha
xor
dec
inc
or
mov
add
sub
fcom
das
shl
outs
int3
shl
pop
inc
nop
cmp
add
fcomp
mov
push
adc
or
daa
and
sub
dec
add
pop
ror
xchg
add
mov
shl
sbb
test
sub
fstp
dec
call
pop
add
cmps
mov
jns
sub
imul
sbb
push
rol
mov
in
sub
sbb
push
inc
imul
add
jo
xor
test
dec
jge
xor
add
lods
jecxz
push
jo
sbb
inc
retf
xor
jecxz
or
dec
push
out
mov
xor
jle
cmp
sub
adc
out
repnz
inc
inc
jmp
sar
adc
sbb
data16
mov
data16
jle
out
aaa
ret
adc
sbb
imul
nop
push
sub
adc
or
mov
cli
add
sub
out
or
xchg
mov
jl
xor
out
add
pop
dec
inc
enter
lds
or
ins
inc
lea
mov
mov
call
cmp
stos
mov
(bad)
jp
xchg
repz
fwait
jle
cwde
and
scas
mov
(bad)
rol
imul
adc
add
xor
pop
and
rol
mov
inc
and
pop
dec
lahf
sbb
inc
dec
sbb
pop
add
fadd
sub
sbb
lea
xor
or
ret
les
mov
inc
or
loope
jp
sahf
pop
shl
adc
js
mov
shr
int
fdivr
outs
jae
imul
and
pop
add
xchg
mov
sub
sbb
pop
pop
adc
and
jo
xor
(bad)
call
lock
mov
mov
inc
dec
and
(bad)
cmp
mov
lea
jo
neg
mov
outs
push
mov
push
rcr
lahf
dec
mov
cmp
jae
enter
jp
push
mov
xor
lahf
js
cmp
(bad)
fisttp
pop
jle
xchg
or
(bad)
stos
sub
inc
jns
mov
mov
lods
imul
js
je
xchg
aam
rcr
in
push
test
push
mov
and
inc
pusha
push
test
rol
sbb
or
pop
inc
dec
icebp
loopne
js
jle
cmp
pop
and
in
js
es
sub
dec
sti
add
mov
lock
lds
lds
jns
add
dec
or
in
mov
add
add
pop
call
sub
sbb
push
ret
leave
push
add
sbb
test
inc
call
xor
add
pop
and
sbb
test
add
popa
(bad)
add
and
or
cmp
mov
add
dec
add
hlt
add
jo
and
addr16
or
dec
cmp
dec
push
or
or
mov
inc
cdq
and
sbb
aaa
cmp
xlat
and
add
mov
or
adc
out
mov
call
push
mov
mov
aaa
inc
add
adc
ds
adc
adc
cdq
xchg
(bad)
lock
mov
cmc
jg
jmp
mov
psrld
add
sbb
inc
jl
ds
pop
pop
jg
pop
jmp
dec
push
mov
jle
pusha
add
push
sbb
outs
sbb
sbb
imul
jge
or
inc
xchg
jo
adc
sbb
push
pop
and
int
sub
gs
or
stos
adc
movs
movmskps
jg
adc
rcl
(bad)
jmp
loopne
dec
loope
inc
lds
adc
xor
icebp
rol
mov
mov
dec
sbb
pop
retf
addr16
jmp
or
loopne
loopne
adc
add
mov
aam
inc
sar
and
daa
adc
lock
inc
aam
xchg
push
mov
or
out
add
add
mov
add
int
or
leave
xchg
xor
sub
nop
mov
mov
aaa
jb
adc
in
xchg
cmp
add
and
push
int3
sar
pop
popa
loopne
add
or
inc
cmp
push
xchg
mov
inc
sub
(bad)
ret
pusha
js
jmp
or
or
dec
ret
aam
inc
aaa
js
ins
inc
movs
pop
add
or
or
dec
sahf
ja
pop
in
retf
loop
les
or
add
dec
dec
popf
sbb
pop
call
add
jo
pop
inc
mov
pop
pop
inc
in
popa
ror
sub
or
adc
stos
test
push
cmc
loopne
adc
movzx
pop
mov
(bad)
and
jp
test
xor
xor
cwde
mov
xchg
loopne
test
fadd
add
test
jge
push
inc
test
cmps
pop
add
xor
lods
sbb
add
push
dec
cmp
inc
xchg
or
mov
ins
push
add
inc
inc
pusha
add
(bad)
(bad)
invd
dec
add
cs
pop
cmp
movs
add
cmp
hlt
jb
mov
mov
pop
push
(bad)
xlat
cs
jae
lods
inc
cmp
or
lock
retf
and
inc
pop
iret
or
cld
mov
mov
bound
dec
dec
adc
iret
sub
or
adc
sub
add
je
push
call
les
pop
push
mov
ja
bound
jo
cmp
je
daa
mov
xor
adc
pop
ins
scas
loopne
inc
out
jo
inc
dec
das
adc
xchg
add
std
es
sbb
add
add
sbb
or
test
mov
add
mov
xor
mov
hlt
mov
mov
je
aaa
mov
xchg
xchg
jne
mul
or
cmps
movs
push
or
push
adc
jle
push
clc
rol
test
or
xchg
bound
test
mov
push
adc
loope
adc
inc
pop
push
push
adc
jl
pop
pop
pop
call
dec
xchg
test
stos
test
or
cdq
mov
test
xor
push
push
xor
inc
js
adc
adc
mov
std
sbb
ror
outs
(bad)
call
add
xor
shr
ret
inc
dec
push
aas
inc
cmp
mov
push
test
sub
enter
sub
or
dec
cdq
in
push
es
test
xor
out
in
imul
and
sahf
sub
sub
push
(bad)
or
sbb
and
popa
inc
jmp
cmps
int
add
add
dec
int3
js
cmp
je
test
scas
inc
ss
push
jle
(bad)
pusha
sub
(bad)
jge
aas
add
sub
and
push
jge
xor
into
inc
inc
mov
pop
adc
inc
dec
jl
jbe
call
shr
jge
mov
add
mov
mov
les
scas
into
call
adc
jp
ret
jle
js
push
pop
cmp
jno
loope
or
mov
inc
into
jp
or
xchg
adc
rcr
shl
add
cmp
leave
inc
jmp
loopne
ror
imul
fnsave
rcl
and
imul
dec
cmp
add
test
jmp
add
xchg
shr
sbb
mov
fld
sbb
clc
jbe
add
jb
shr
xchg
add
clc
jg
jecxz
pop
or
leave
inc
shr
mov
sbb
adc
and
adc
inc
sub
push
add
add
pop
push
jle
fiadd
rcr
add
inc
jb
inc
or
and
pusha
ins
xchg
mov
jo
pop
aam
ins
icebp
pop
adc
dec
lea
push
xor
dec
mov
add
push
adc
mov
adc
rcl
adc
jp
adc
(bad)
and
ds
loop
loopne
mov
aam
push
adc
das
add
jb
ins
inc
jbe
adc
xor
add
lock
int3
icebp
xor
out
sahf
ror
pop
call
sbb
push
xlat
or
inc
pop
xchg
or
(bad)
adc
pop
push
adc
cld
sub
add
pop
in
mov
cld
jns
mov
cmps
add
lock
pop
loopne
and
jle
add
jmp
sub
jb
sub
rcl
rol
dec
adc
pop
jle
pop
push
or
dec
dec
xchg
scas
dec
js
test
call
push
adc
fidiv
ror
push
add
inc
xor
pop
dec
xor
mov
push
inc
rcr
dec
aad
push
add
mov
aam
sbb
pop
popa
push
xor
lahf
adc
inc
clc
mov
adc
xchg
mov
inc
out
mov
int3
pop
sbb
mov
or
sbb
adc
data16
and
sub
inc
int3
adc
ds
test
ins
(bad)
fcmovu
lods
int3
mov
(bad)
cld
xor
inc
add
jbe
dec
fisttp
or
sbb
sbb
jno
jl
or
mov
xor
mov
fisubr
fmul
adc
add
test
adc
pop
and
push
adc
shl
xchg
adc
hlt
in
(bad)
and
jle
dec
mov
dec
and
dec
shl
mov
sub
je
call
es
mov
adc
ret
pop
(bad)
jae
and
mov
xlat
aas
sub
(bad)
and
add
test
adc
pop
inc
stos
inc
inc
add
add
test
sbb
or
inc
sbb
mov
mov
mov
or
and
add
mov
add
ret
ss
or
pop
or
jne
je
dec
dec
fwait
push
or
jbe
and
and
push
adc
cmp
jnp
mov
push
add
and
pop
and
push
jae
stc
int3
push
push
mov
sub
fdiv
in
and
andps
retf
jmp
sbb
fwait
cmp
leave
hlt
mov
jae
or
es
shr
icebp
test
lea
add
dec
cmp
mov
jb
inc
arpl
sbb
call
lods
call
(bad)
pop
fadd
repnz
pop
push
push
clc
daa
test
pop
mov
gs
adc
xor
and
jl
dec
or
adc
cmp
cmp
lock
cdq
dec
test
je
push
in
test
add
popf
test
jle
movs
or
jne
sbb
xor
add
add
lock
aas
idiv
or
mov
sbb
mov
or
mov
inc
test
out
ins
rol
jl
ret
cmp
mov
inc
and
and
push
mov
mov
cmps
in
sti
jno
mov
dec
imul
sbb
xchg
pop
stos
cmp
and
cmp
adc
fmul
cmp
adc
xor
push
inc
cld
mov
inc
and
dec
or
rcr
push
mov
or
add
ins
popa
xor
popa
sub
dec
cmp
in
add
out
mov
xor
pop
inc
nop
(bad)
mov
and
inc
add
scas
sti
inc
call
lea
xchg
call
xchg
push
or
adc
adc
sar
loopne
inc
sbb
xchg
lea
rcl
xor
and
adc
lods
fsub
aaa
pop
jb
mov
add
or
sbb
inc
(bad)
or
or
enter
ret
addr16
sub
adc
or
and
pop
sbb
in
mov
stos
aad
or
mov
hlt
jb
or
xlat
enter
jb
sbb
inc
call
adc
mov
xchg
jge
fstp
sub
xor
and
and
loopne
fdiv
and
inc
fcomp
aam
and
aam
ror
bound
xor
int3
dec
das
sub
dec
enter
scas
or
sub
clc
nop
outs
lea
add
dec
stos
mov
mov
push
arpl
fadd
or
add
push
mov
jne
adc
ins
inc
inc
cs
xchg
popa
inc
cmps
mov
dec
mov
es
push
scas
cs
xchg
clc
push
adc
and
hlt
retf
aad
cld
xor
sub
or
cmp
xor
add
adc
dec
movs
dec
ret
add
je
dec
mov
out
fadd
sete
pushf
and
or
clc
pop
fnstenv
mov
jnp
cmp
or
xor
mov
push
and
jge
pop
xor
adc
sbb
iret
sbb
push
inc
mov
fdivrp
xor
pop
adc
lea
add
retf
add
sbb
popw
jp
push
push
or
push
enter
xor
fld
ret
sub
ds
mov
cmp
jmp
push
xor
or
or
test
add
shr
add
push
inc
xor
push
adc
adc
jg
push
mov
xor
or
loopne
ror
sub
dec
ror
ret
pop
mov
jo
push
in
jne
shl
or
lock
xchg
xchg
jo
enter
mov
and
jne
adc
adc
and
sub
dec
adc
sub
lods
xor
repnz
sub
jmp
jg
adc
out
mov
int
out
jae
add
mov
mov
sar
and
mov
mov
ins
inc
mov
ss
fisubr
not
adc
mov
cmp
cmp
shl
jge
fidiv
adc
movs
mov
test
adc
je
and
inc
or
push
mov
inc
or
sbb
sar
xchg
or
mov
inc
iret
cli
fiadd
push
sahf
sbb
adc
es
inc
loop
fld
or
fadd
jbe
push
cld
cmp
inc
sar
jne
cli
push
jle
adc
sbb
test
cmp
cmp
mov
pop
pop
mov
or
inc
shl
lock
fiadd
(bad)
sub
and
xor
(bad)
xor
pop
sti
ja
mov
sub
ret
adc
push
mov
cmp
nop
(bad)
pusha
sub
shr
ins
gs
(bad)
and
rcl
mov
adc
mov
inc
xor
add
push
scas
or
add
jns
sub
sub
das
dec
sbb
pop
dec
or
push
dec
std
push
push
dec
mov
adc
je
jl
xor
add
loopne
inc
mov
jle
movsx
sub
mov
pop
add
fdivr
enter
rcr
add
sti
or
push
add
js
hlt
push
ja
adc
and
hlt
je
fcmovne
mov
in
mov
adc
aaa
fs
addr16
adc
add
pusha
mov
inc
dec
pop
dec
dec
rol
pop
cmp
scas
mov
sbb
jge
sub
jo
mov
shr
adc
ret
loopne
mov
ret
ret
or
cmp
scas
test
and
lea
xchg
add
sbb
sbb
(bad)
in
scas
cmp
sbb
mov
push
inc
add
inc
adc
neg
mov
mov
(bad)
not
call
inc
adc
push
add
ins
int
mov
ds
or
add
sub
sub
cmps
and
add
inc
shl
inc
mov
pop
push
lock
pop
ret
add
jns
int
jo
sub
add
mov
pop
fs
add
shl
int3
add
and
push
js
push
add
xor
xor
mov
arpl
adc
dec
sbb
mov
or
cli
mov
inc
push
mov
ret
clc
fdivr
cld
pop
lock
adc
lock
dec
sar
addr16
(bad)
adc
mov
jl
ins
adc
pusha
test
sub
addr16
arpl
or
mov
jo
call
jl
mov
and
cmp
cmovg
or
inc
out
ds
add
fimul
mov
lods
and
jg
xor
movs
or
das
fimul
pop
xchg
cmp
neg
sar
loope
sar
add
mov
mov
sti
lods
jle
jae
inc
add
xor
js
ror
sbb
inc
das
xchg
xor
ins
cmp
cmp
or
shl
inc
or
xor
sub
add
adc
out
sbb
adc
xchg
add
in
(bad)
cmp
or
std
loopne
fstp
popa
jle
mov
xor
add
(bad)
jns
lahf
inc
mov
or
or
std
cmp
jge
xchg
push
mov
arpl
jmp
add
jmp
jg
cli
call
add
icebp
je
and
outs
adc
add
add
dec
ret
call
mov
or
push
inc
push
dec
ins
push
fs
adc
imul
xchg
jae
jg
and
mov
loopne
adc
adc
inc
or
dec
sbb
retf
and
les
mov
adc
ins
lods
push
pop
sbb
dec
push
lea
jmp
or
jge
dec
mov
stos
aaa
ss
pop
aaa
call
push
xor
ret
and
xlat
xchg
iret
inc
stos
add
or
nop
ins
enter
add
and
arpl
dec
(bad)
clc
mov
cli
sbb
adc
jl
scas
clc
and
pop
pop
jo
push
repz
mov
adc
in
pusha
jne
add
fisubr
xlat
push
stos
stos
and
and
push
pop
add
push
add
mov
mov
js
sub
push
mov
fdivr
mov
retf
sub
or
sub
pop
pop
mov
add
or
ins
push
cmp
cmp
int3
jns
int3
jg
mov
sub
ret
add
push
imul
loop
adc
js
inc
aad
jmp
push
xlat
lea
pop
loopne
or
fld
fstp
sti
mov
loope
lods
fs
les
xor
jl
shr
or
and
dec
and
cmp
mov
shl
dec
sub
xor
add
xor
push
push
and
add
nop
rol
push
es
mov
addr16
sbb
push
pusha
add
popa
std
mov
movs
inc
addr16
mov
push
push
ins
mov
add
dec
pusha
jae
mov
push
rol
(bad)
pop
add
mov
shl
out
fistp
jecxz
add
inc
sbb
sbb
push
bound
push
pop
fild
inc
add
sbb
add
sbb
es
or
popa
dec
in
or
adc
or
push
ror
inc
and
cs
or
sub
push
and
out
neg
cs
fs
ficomp
adc
sub
or
dec
xor
sub
push
stc
mov
pop
or
adc
ja
not
push
push
sbb
sbb
sbb
jge
fbld
or
add
icebp
inc
mov
xor
sub
and
mov
sbb
cmp
inc
fs
jae
dec
cs
adc
fs
mov
sub
ret
or
inc
pop
adc
loopne
jge
psllq
gs
add
add
sbb
movs
xor
mov
bound
mov
xor
lds
and
call
or
cmps
inc
and
xbegin
dec
into
repz
aas
adc
mov
or
or
cdq
lock
rcl
add
pop
adc
or
sbb
pop
mov
xchg
jle
xor
and
adc
call
sub
push
xor
lds
xchg
or
leave
inc
jl
ss
adc
mov
jg
inc
in
sub
mov
imul
jl
mov
or
aas
popf
cmp
jl
pop
jo
sub
sub
mov
xchg
scas
push
sbb
cwde
out
jmp
lea
add
iret
pop
sub
xchg
add
xor
adc
inc
mov
xor
std
sub
xchg
xchg
pop
inc
ja
in
std
or
xchg
dec
inc
sub
jmp
enter
or
sub
ja
or
dec
mov
jmp
sub
test
add
add
xor
add
or
pop
adc
push
cmp
sbb
push
test
sbb
push
loopne
and
or
inc
push
call
lods
pop
mov
test
jns
sub
or
fucomi
inc
lea
xchg
inc
inc
(bad)
dec
sub
sub
call
das
sti
lods
(bad)
add
(bad)
neg
cmp
mov
cli
and
cs
add
pop
mov
clc
jmp
aad
lock
fmul
add
add
repnz
jns
jge
inc
test
not
cmp
jg
add
lods
xchg
xor
je
rcl
ror
or
aam
mov
mov
dec
pop
fadd
lods
xlat
or
sbb
cmp
push
push
adc
add
test
or
mov
ret
or
cmps
ds
push
adc
add
dec
outs
mov
sbb
cmp
sbb
shl
inc
push
fld
xchg
mov
out
add
dec
movs
inc
out
inc
xor
jae
or
or
adc
add
mov
mov
add
adc
sbb
and
xor
jbe
sar
les
mov
jmp
push
sub
pusha
mov
jae
mov
repz
stos
leave
or
add
push
xor
pop
cmp
push
cmp
ja
jae
in
mov
and
dec
cli
fnsave
push
inc
dec
addr16
jle
not
cmp
add
xchg
rol
add
sub
pop
jg
sub
ror
xchg
test
test
or
xor
mov
adc
enter
call
push
xchg
sub
xchg
adc
outs
(bad)
movs
pop
adc
mov
jmp
cmp
imul
pop
or
repnz
and
jmp
aaa
or
mov
aas
mov
add
pop
adc
pop
enter
mov
mov
out
and
push
jne
mov
pusha
ins
cmps
jmp
and
fisub
inc
mov
lock
sub
adc
mov
push
and
inc
faddp
pop
cmp
dec
sub
pop
in
xchg
sub
shr
(bad)
test
adc
xor
popa
sbb
mov
dec
sub
sbb
ins
mov
lods
jae
jge
or
inc
aad
cwde
adc
shl
and
and
add
sub
imul
or
push
cs
add
mov
xor
sbb
adc
pop
add
push
sbb
inc
fs
test
pop
int
push
test
mov
xchg
add
test
sbb
pop
adc
or
inc
neg
push
lea
mov
dec
sbb
mov
cmps
sub
mov
stos
cmps
add
je
fs
push
inc
and
mov
xor
inc
aam
dec
stos
add
into
mov
cwde
push
shr
jl
loop
pop
inc
add
addr16
call
(bad)
mov
sub
and
inc
mov
clc
sub
rol
(bad)
xor
cmp
ja
mov
dec
inc
inc
ror
test
jmp
xor
mov
xchg
dec
mov
mov
lds
ins
pop
div
xor
sbb
sahf
test
jg
mov
sbb
cli
fidivr
int
and
mov
(bad)
sar
push
jno
lea
and
mov
sub
pop
mov
scas
retf
adc
xchg
or
es
ror
stc
jp
add
out
retf
xor
daa
ret
je
dec
add
loop
sar
iret
inc
jg
bound
add
mov
jo
test
ror
mov
cwde
out
mov
mov
call
scas
jle
xchg
mov
cmp
and
(bad)
push
inc
mov
pop
lock
sar
add
sub
into
rol
add
jmp
dec
add
cmp
stc
add
inc
add
dec
pop
ja
movzx
movs
fimul
jb
iret
pusha
jbe
sbb
sbb
dec
dec
cmp
sbb
xor
or
(bad)
and
xlat
jp
pop
cmp
cmp
xor
add
push
pusha
inc
sar
inc
movs
pop
add
mov
adc
cmp
cmp
inc
aas
lds
push
or
out
das
and
sahf
movs
imul
mov
jnp
out
push
sub
sub
mov
push
inc
loop
mov
mov
(bad)
mov
pusha
lods
sbb
push
cmps
ins
push
popa
jne
mov
mov
jns
inc
cmps
add
ja
mov
sub
cs
xchg
or
inc
push
scas
rcr
inc
xchg
fcom
xor
adc
xchg
cmp
std
das
xchg
inc
push
dec
inc
adc
call
call
adc
cmp
sbb
adc
test
ret
iret
or
popf
inc
inc
clc
data16
outs
mov
cmp
push
jo
or
iret
ds
xchg
adc
jp
rol
jns
pop
daa
inc
dec
arpl
sub
cmp
mov
mov
mov
cmc
add
sar
and
jmp
mov
sub
lods
ja
dec
push
push
push
pushf
push
leave
inc
add
loopne
mov
dec
cmp
push
test
inc
inc
inc
add
sbb
push
mov
or
inc
dec
sbb
sub
push
pop
or
inc
inc
js
(bad)
jmp
push
push
dec
dec
dec
adc
inc
jne
je
lds
jb
pop
xchg
sbb
fst
call
dec
aaa
inc
mov
mov
dec
push
inc
adc
pop
xlat
faddp
fidiv
push
push
adc
aam
(bad)
mov
jnp
dec
pop
inc
(bad)
push
add
lock
push
push
out
add
es
fisttp
ss
push
dec
into
add
or
or
push
shl
inc
sbb
push
mov
xor
loopne
push
inc
mov
ins
cmp
in
add
jb
mov
les
sub
scas
sbb
dec
and
push
je
mov
imul
nop
dec
cmp
or
popw
test
dec
or
adc
js
or
mov
xchg
jecxz
add
sub
inc
and
les
pop
mov
pusha
pusha
jb
pop
gs
add
or
mov
sub
out
inc
adc
jno
pusha
cmp
sub
pop
push
xchg
aam
pop
add
jbe
cdq
add
xor
sbb
movs
jae
test
mov
pop
inc
std
push
add
je
arpl
push
gs
gs
rol
and
cmp
inc
sar
adc
pop
inc
outs
outs
ins
xchg
sbb
arpl
jae
dec
rcl
add
cmp
cwde
dec
outs
pop
icebp
ror
mov
jne
test
add
pop
fnstenv
push
jnp
mov
inc
pop
sbb
jae
popa
mulps
outs
mov
or
cmps
jb
popa
ins
gs
mov
add
dec
int3
add
pop
or
or
dec
loope
rcl
add
and
xor
xor
push
add
sbb
dec
dec
adc
adc
sti
mov
mov
jo
arpl
adc
mov
adc
sub
dec
(bad)
cwde
mov
adc
(bad)
lock
push
mov
inc
inc
(bad)
push
rcr
aaa
or
mov
xchg
mov
ret
add
jae
and
xchg
loope
xor
sbb
mov
add
adc
cmc
add
push
fwait
imul
cmp
xchg
dec
inc
adc
inc
jbe
rcl
lea
aas
add
adc
dec
daa
pusha
rol
out
push
xchg
and
xor
add
add
xchg
push
push
adc
and
sbb
mov
fsub
(bad)
jnp
push
push
adc
mov
arpl
jnp
(bad)
sub
inc
popa
inc
ins
mov
jno
gs
mov
or
dec
outs
pop
dec
push
cmp
and
jbe
jbe
inc
jmp
and
sub
jo
sub
mov
jae
sub
and
leave
pop
clc
or
lds
xor
add
push
inc
push
sbb
adc
add
cmp
int
ins
xor
rol
pop
sub
loop
add
aas
push
ss
cmps
lods
(bad)
clc
push
push
dec
push
outs
aas
sbb
add
jmp
sar
int3
adc
jnp
outs
sub
outs
sar
xchg
push
arpl
add
cmp
fcomi
pop
aam
ficomp
mov
fs
ret
test
pop
cmp
xchg
pop
sbb
aad
das
push
add
leave
lods
add
mov
setp
js
jb
push
arpl
inc
mov
inc
ins
jb
jns
retf
sbb
out
pop
inc
push
inc
jo
loopne
push
arpl
cmp
punpckhdq
sbb
adc
ror
mov
out
pop
inc
pop
push
popf
mov
loopne
add
push
lahf
fs
xor
inc
jo
(bad)
and
pop
push
ret
jo
gs
ror
xor
push
pop
push
sub
or
inc
jo
mov
pop
adc
sbb
sub
adc
jle
push
ja
dec
xor
inc
(bad)
imul
js
push
ror
adc
pop
adc
push
es
das
inc
push
pop
pop
jmp
fild
add
lahf
data16
dec
adc
mov
outs
in
ins
fild
(bad)
dec
add
mov
cwde
xor
push
mov
cmp
cmp
in
mov
cmp
cld
add
add
or
cmps
adc
imul
ds
fld
inc
js
mov
cmp
int3
rol
jge
jl
outs
imul
sbb
inc
add
pop
inc
sub
xor
mov
(bad)
xadd
imul
push
popa
ja
or
or
retf
xor
pop
test
fld
inc
rcl
outs
arpl
outs
or
in
add
push
push
dec
pop
in
dec
ret
cdq
add
or
mov
daa
dec
push
or
outs
jb
clc
fisubr
adc
loope
mov
xor
pop
and
xor
pop
push
test
call
or
or
xchg
loope
int3
mov
aam
mov
sub
test
clc
js
push
loop
push
lea
ds
cwde
mov
call
bound
mov
and
dec
mov
and
sbb
or
jle
inc
lock
mov
pusha
test
xor
inc
fsub
arpl
icebp
fnsave
ins
push
inc
fild
mov
xor
pop
add
inc
and
scas
dec
push
push
adc
sub
fs
or
jb
fs
fs
dec
jne
in
fs
pop
cs
mov
fs
retf
cmps
bound
pop
pop
lds
inc
or
jo
ins
inc
ror
inc
and
and
sub
sbb
fild
std
pop
or
sub
push
popa
jmp
pop
push
inc
xor
jbe
jmp
sbb
(bad)
aam
or
test
push
mov
xor
stos
adc
shl
push
(bad)
xchg
pop
test
push
or
in
dec
dec
or
jge
rol
add
mov
cmp
pop
(bad)
hlt
push
sub
fst
and
pusha
nop
popa
das
mov
adc
push
pusha
add
(bad)
jg
jo
inc
mov
(bad)
or
pop
add
mov
ins
test
into
or
cld
cmps
(bad)
daa
mov
jo
push
test
mov
add
or
in
jle
test
popa
ins
enter
lods
pop
add
cmp
movs
jbe
je
mov
sub
mov
inc
enter
es
inc
mov
add
inc
in
pop
test
pop
loop
cs
outs
add
icebp
aaa
mov
inc
pop
jmp
inc
pop
mov
sahf
icebp
adc
sbb
dec
in
sub
jbe
inc
cmp
inc
loope
int3
cmp
inc
in
ins
pop
fimul
pop
lds
in
pop
push
std
sysexit
bound
ds
inc
ret
mov
pop
lock
int3
cmovnp
cmp
aam
rcr
add
mov
rol
push
dec
add
call
fwait
push
sbb
add
add
lods
addr16
inc
in
mov
add
(bad)
push
adc
shl
dec
add
jne
adc
ret
adc
add
or
mov
lds
push
jmp
int
les
inc
stc
push
and
inc
mov
(bad)
jmp
shl
arpl
or
mov
sbb
and
mov
cmp
pop
sbb
shr
test
hlt
push
pop
push
dec
adc
(bad)
xchg
sbb
ja
xchg
inc
xchg
scas
mov
jg
mov
push
push
ins
popa
jb
popf
stc
adc
or
add
add
xchg
jl
leave
or
sbb
shl
pop
out
mov
in
or
loopne
dec
or
mov
je
fimul
and
and
js
sar
and
xchg
and
inc
ins
inc
adc
ja
test
or
jbe
add
inc
mov
xlat
test
mov
sbb
(bad)
mov
sbb
add
or
lock
arpl
test
gs
(bad)
adc
inc
add
inc
add
adc
and
jnp
inc
das
out
les
add
add
retf
xchg
stc
loopne
xchg
inc
push
outs
data16
popa
sub
adc
mov
dec
test
ja
call
addr16
cwde
or
mov
loop
fisubr
je
data16
push
shl
or
pushf
pop
(bad)
sbb
xor
mov
jmp
or
int3
mov
xor
sub
daa
push
inc
dec
loop
sub
jo
imul
xor
pop
add
adc
ja
jle
ror
and
add
xor
inc
dec
mov
out
or
sbb
pop
lds
inc
or
pop
pop
in
cmps
jno
push
cwde
push
adc
push
es
in
sbb
push
gs
push
xor
imul
int3
jp
imul
mov
or
sub
mov
xchg
push
xchg
inc
sbb
sbb
push
push
outs
ins
dec
add
jl
cld
xchg
inc
call
and
iret
ins
xchg
fld
imul
cmp
jg
stos
sahf
lds
and
jno
inc
xor
mov
(bad)
and
push
fist
cmp
jne
push
mov
test
je
loope
fld
adc
aas
push
or
clc
repnz
inc
nop
ds
lahf
daa
out
les
and
dec
sti
fidiv
inc
push
xor
int3
dec
push
rcr
out
xor
movs
mov
push
lods
push
and
out
in
or
sub
pop
mov
xor
(bad)
imul
call
outs
arpl
jns
cmp
xor
or
(bad)
push
sbb
retf
dec
movlps
xchg
pop
scas
cld
stos
sub
unpckhps
sub
jns
retf
mov
cmp
pop
daa
mov
fs
cmps
or
lock
mov
frndint
mov
push
jne
addr16
jne
pop
mov
test
gs
and
or
(bad)
andnps
inc
xor
and
mov
mov
int
mov
xor
sub
mov
adc
add
or
popf
outs
and
mov
popf
shl
and
push
pop
leave
sbb
xor
cmps
pop
inc
or
jge
add
add
loope
mov
push
(bad)
out
dec
sbb
(bad)
inc
push
ficom
cmp
test
dec
add
ja
ins
outs
add
pop
add
ins
or
add
ins
outs
call
or
cli
das
push
outs
arpl
and
mov
adc
loope
ins
mov
sbb
mov
or
scas
and
inc
add
call
outs
add
pop
clc
mov
outs
mov
leave
enter
in
inc
jo
lock
mov
mov
ret
cmp
and
push
popa
gs
pushf
fucom
shl
and
popa
lods
xor
(bad)
outs
inc
imul
xchg
pop
or
rol
jno
aaa
inc
jne
in
add
push
popa
and
lock
jo
mov
ftst
jo
add
and
loope
sbb
or
jp
ins
jo
sbb
sub
jbe
test
popa
addr16
sub
add
or
xchg
cmp
aad
mov
pop
adc
ins
add
and
ins
fwait
pop
verr
nop
es
inc
xor
push
idiv
dec
inc
aas
or
jno
push
xchg
in
add
xor
lahf
add
stos
and
mov
arpl
and
add
es
and
test
mov
xor
mov
push
pop
(bad)
xor
pop
jno
or
test
pusha
and
mov
test
call
push
clc
jnp
les
cmp
scas
rcl
pop
fdiv
xor
test
mov
retf
jne
loope
data16
xchg
push
lods
jle
enter
push
enter
arpl
shl
rcr
pusha
and
outs
enter
fnstenv
sbb
mov
fdivr
rol
sar
or
inc
fisubr
xchg
or
xor
push
iret
nop
dec
pop
fisubr
jnp
pusha
push
cmp
call
ds
push
dec
fcmovne
xlat
mov
push
fadd
cld
sub
jl
cld
jns
inc
lea
cmp
lock
jl
and
ss
rol
push
outs
scas
sbb
cmp
jnp
sbb
adc
(bad)
clc
ror
or
ror
fiadd
push
sub
add
mov
inc
mov
inc
xchg
sahf
faddp
push
or
mov
add
add
jne
mov
or
addr16
scas
std
dec
test
dec
add
dec
xchg
xor
pop
push
test
mov
jns
dec
add
xor
xchg
out
push
lods
mov
jle
inc
adc
push
sub
or
inc
ss
mov
dec
push
push
shl
adc
das
or
push
lock
add
add
sub
and
sbb
dec
in
sbb
push
inc
push
xor
mov
xor
bound
retf
add
int3
ret
push
add
fbstp
push
cmp
shr
mov
xor
nop
mov
ins
jne
pop
push
fmul
add
cwde
out
adc
lods
sub
daa
pop
mov
inc
and
jo
mov
movs
inc
pop
xor
cwde
jne
mov
adc
jmp
jle
add
adc
imul
repz
jbe
aaa
mov
adc
test
adc
fsave
in
movs
(bad)
sub
movs
push
jae
cwde
in
movs
adc
loope
xchg
inc
lods
aas
rol
outs
jmp
mov
xchg
sbb
mov
dec
test
popf
cmp
mov
xor
movs
sub
stos
ja
inc
adc
fdivr
sbb
sbb
adc
sbb
pop
or
and
xchg
lods
(bad)
push
push
sar
mov
mov
pop
add
arpl
mov
jnp
movs
inc
add
push
out
in
pop
or
loopne
jmp
sbb
loope
call
push
daa
inc
dec
sbb
(bad)
pop
cmp
pop
fwait
inc
add
in
or
inc
mov
and
add
fmul
(bad)
js
sbb
dec
dec
out
push
push
fidiv
in
ja
inc
add
lds
movs
sbb
lds
adc
dec
push
and
imul
inc
and
mov
dec
and
pop
sbb
add
pop
cmp
add
scas
add
pop
es
cdq
and
das
idiv
cwde
pop
and
cs
jns
pusha
push
es
pop
cmp
push
std
call
daa
sbb
jp
in
and
or
enter
adc
mov
in
enter
js
enter
push
sub
mov
pop
or
mov
ja
test
cdq
cdq
lods
push
and
xchg
aaa
sbb
xchg
es
jnp
mov
jge
es
das
(bad)
push
pop
jb
inc
cld
int3
imul
mov
pop
add
mov
shl
push
push
mov
push
cs
pop
mov
scas
addr16
rcl
clc
imul
addr16
rcr
pop
jl
adc
xorps
psadbw
repnz
cli
fimul
push
or
arpl
scas
push
add
in
jge
jno
rol
lds
dec
xor
mov
sbb
inc
pushf
jge
xor
and
inc
push
dec
js
arpl
adc
mov
inc
pushf
jge
push
cmp
xchg
pop
xchg
add
jne
cmc
dec
add
mov
test
jge
retf
call
les
or
gs
add
adc
or
mov
or
rcl
add
cmp
xchg
loopne
fisubr
mov
add
cmp
mov
push
sar
ins
jo
xor
or
(bad)
sub
add
pop
xchg
stos
push
or
jp
jne
jo
jae
or
add
outs
mov
add
into
add
je
outs
add
push
add
push
add
ins
xor
push
xchg
mov
add
fdivp
push
and
call
xor
xor
lds
popf
jmp
or
add
fimul
idiv
sbb
sbb
dec
dec
popf
or
or
fisub
in
ret
jnp
add
push
jg
fistp
es
push
push
jl
call
push
pop
test
inc
sub
push
fs
ss
int3
sub
mov
lock
les
mov
push
idiv
clc
ds
cld
das
push
xchg
dec
jge
jo
jl
dec
sub
nop
adc
jmp
lea
dec
push
lea
add
ud2
add
add
dec
adc
xchg
mov
movs
cs
test
daa
xor
push
shl
pusha
popf
or
pop
cmp
jns
fiadd
add
add
cmp
pop
dec
cmp
add
pop
les
mov
xchg
pop
add
into
in
sbb
mov
add
rcr
pop
fwait
add
(bad)
sub
pop
sbb
mov
cwde
inc
loopne
pop
arpl
add
sbb
push
or
(bad)
fld
push
lods
add
lods
sbb
lods
or
loopne
mov
add
add
add
pop
mov
jg
xchg
or
and
mov
add
inc
or
add
shr
dec
dec
add
loop
add
cmp
sbb
push
in
add
and
add
ds
jo
arpl
add
mov
adc
(bad)
push
mov
mov
aas
push
push
mov
cdq
mov
mov
xchg
shl
add
xchg
sbb
mov
xchg
mov
adc
and
or
push
imul
and
stc
mov
movs
xor
sbb
mov
sbb
sbb
pusha
add
cmps
sbb
dec
ret
sbb
cdq
fs
jae
shr
retf
and
mov
rcr
xor
sar
adc
mov
imul
ins
daa
and
and
xchg
push
shr
sar
fs
and
pop
aam
rcl
ret
pop
les
test
inc
inc
or
mov
or
loope
sbb
pop
mov
inc
push
test
movs
dec
adc
popf
add
test
ret
ins
lock
pop
imul
popa
cmp
add
in
test
out
ds
add
adc
retf
test
push
jmp
mov
mov
ins
jns
jp
or
outs
sub
adc
xlat
and
or
cmp
sbb
add
push
jp
ret
ret
add
sbb
movs
retf
inc
push
(bad)
inc
sbb
push
push
jmp
lds
add
clc
ret
lock
in
clc
jns
js
mov
gs
inc
je
sbb
loopne
add
adc
push
into
nop
xchg
inc
mov
jo
add
xor
lea
fadd
mov
sbb
pop
push
sbb
and
push
nop
fst
sub
out
loopne
lods
nop
lock
pop
xchg
add
push
push
push
test
push
inc
inc
push
bound
mov
or
adc
lea
xor
loope
inc
add
xchg
mov
shl
add
aam
adc
mov
push
es
dec
jb
cmps
in
je
jp
jb
(bad)
inc
xor
push
jl
mov
ds
adc
mov
push
int3
cmp
call
mov
jo
fdiv
push
and
fsub
add
frstor
mov
sbb
ret
push
push
or
xor
mov
sub
imul
pushf
xchg
cmp
pop
pop
push
adc
ins
cmp
push
pop
jo
pop
(bad)
jns
pop
or
and
inc
aas
xor
or
jno
sahf
sbb
xchg
and
adc
in
adc
push
lods
mov
jo
lock
fild
pop
or
xor
add
pop
js
push
test
xor
mov
mov
mov
adc
xchg
jnp
cmp
add
emms
and
push
xor
xor
sub
jmp
add
std
lock
and
loop
call
mov
push
mov
pop
xor
dec
ror
sub
mov
sar
jmp
add
pop
xchg
hlt
cmp
sbb
imul
pop
and
pop
mov
and
iret
add
adc
dec
das
jmp
rol
mov
(bad)
push
in
inc
add
push
mov
jmp
mov
xor
add
push
outs
clc
cmp
push
nop
push
push
popa
mov
inc
clc
imul
arpl
mov
or
xchg
add
push
loope
add
pop
pop
push
test
popa
and
clc
ror
xchg
mov
test
mov
cmp
fwait
jle
adc
cdq
push
jmp
add
mov
add
mov
hlt
fistp
fldcw
sub
jne
xchg
mov
shr
nop
add
add
iret
fisttp
call
cwde
aad
add
leave
retf
xlat
add
xor
dec
mov
bound
sbb
jne
sbb
cmp
addr16
jle
add
add
pop
call
jl
loopne
or
loop
adc
mov
lods
push
push
inc
adc
adc
test
rol
sub
cmc
jp
push
adc
mov
movs
adc
loopne
fistp
push
pop
pop
lea
push
repz
dec
add
stc
xchg
pop
test
add
add
jp
add
push
arpl
aas
sbb
imul
and
popa
dec
mov
or
jb
sbb
vprotw
cmc
cwde
cwde
xchg
dec
jo
jo
and
xchg
outs
dec
xchg
adc
pop
in
retf
mov
not
pushf
(bad)
push
hlt
inc
and
xor
ss
(bad)
in
inc
sbb
jg
cmps
add
lods
push
mov
mov
pop
add
fisttp
adc
popf
mov
add
sub
push
addr16
lods
and
pop
jo
inc
mov
sub
into
dec
sbb
lods
jnp
lea
add
mov
add
movs
xor
adc
or
jb
add
sbb
in
and
movs
in
nop
retf
loopne
inc
stos
jae
or
rol
clc
mov
mov
lock
xor
arpl
pushf
sub
xor
add
mov
js
xchg
shl
or
xchg
call
mov
sub
std
and
lods
jmp
mov
push
daa
mov
je
pop
xchg
mov
xor
add
imul
call
loope
add
or
add
sub
pop
push
test
xchg
sbb
ret
imul
pushf
and
pop
add
pushf
jmp
inc
add
hlt
push
popf
adc
jmp
sbb
iret
add
xlat
pop
add
inc
mov
ins
inc
into
cmp
sbb
pop
idiv
and
ret
or
call
aam
jne
enter
enter
jge
add
and
or
scas
mov
or
adc
lea
push
jl
nop
ins
xchg
mov
out
rcl
mov
sbb
dec
and
mov
test
sub
xchg
or
arpl
test
in
cmp
ror
cmp
ds
cli
or
lea
mov
and
in
lock
push
sub
push
sub
rol
sub
cwde
sub
mov
jmp
add
dec
imul
dec
(bad)
fstp
or
inc
mov
add
or
xchg
adc
add
sbb
mov
lods
les
loopne
adc
mov
mov
mov
std
in
adc
mov
rol
cwde
mov
xchg
or
cmp
inc
inc
jge
rcr
jnp
adc
out
xor
inc
fdivr
ins
pop
ja
sbb
pop
loopne
push
and
add
ss
adc
ins
sbb
add
inc
call
in
dec
pusha
es
out
inc
xor
inc
not
pop
cmp
xchg
rol
sub
push
fld
js
inc
rol
enter
xchg
or
add
or
ret
dec
dec
ror
add
rcr
(bad)
fdiv
out
inc
sbb
sub
sbb
addr16
cmp
ins
or
arpl
push
(bad)
push
out
push
nop
cmp
or
stos
cwde
pop
push
jae
ror
xor
and
inc
mov
push
(bad)
dec
fidiv
dec
jl
add
nop
lods
mov
je
mov
mov
cmp
add
inc
sub
xor
add
or
mov
hlt
les
pop
(bad)
loop
add
push
dec
mov
test
add
jle
sub
sbb
sbb
mov
xor
push
sbb
add
mov
jp
out
sbb
scas
ret
nop
mov
iret
sbb
adc
mov
js
pop
lea
mov
xor
inc
xlat
mov
fsubr
retf
cld
in
adc
add
sti
xor
je
fdiv
mov
aas
loopne
fild
movs
mov
popa
xor
xor
pop
clc
aaa
xchg
mov
inc
push
pop
or
cmc
je
daa
add
dec
mov
jl
dec
sub
jae
lock
push
shr
rcr
scas
dec
cmp
shr
popf
pusha
cmp
cmp
imul
mov
loope
rol
mov
(bad)
push
pushf
sbb
add
mov
sub
enter
inc
ret
pop
sub
or
cmp
jne
or
or
push
push
sbb
adc
gs
push
or
jne
retf
xchg
xor
sbb
and
pushf
pop
fdivrp
or
loope
into
cmps
inc
add
inc
stc
mov
sbb
outs
jb
sbb
push
sbb
ss
cmp
inc
sbb
ret
inc
adc
daa
and
adc
push
out
loopne
add
xor
loop
or
js
inc
repnz
pop
mov
cmp
test
cmps
xlat
movs
mov
and
pop
ja
fs
pop
cs
dec
add
jno
push
lea
popa
inc
imul
test
addr16
pop
sub
popa
jle
jnp
add
neg
ret
bnd
ja
push
data16
fdivrp
es
ins
adc
ins
xchg
scas
dec
test
mov
pop
or
push
inc
data16
push
add
mov
jmp
xchg
adc
dec
out
or
push
dec
(bad)
or
loop
inc
pop
mov
fstp
in
jmp
jmp
cmp
mov
xor
mov
add
sub
loop
(bad)
and
or
pop
test
xchg
ss
mov
(bad)
xor
cmp
pop
xchg
loope
stos
dec
add
push
lds
fwait
push
xchg
retf
arpl
lahf
cs
fcomp
dec
add
jge
arpl
dec
push
push
sbb
add
or
jne
retf
mov
stos
mov
clc
(bad)
mov
call
in
loop
adc
or
jnp
pop
or
pop
std
xor
pop
loopne
sub
pop
sahf
nop
lea
xchg
iret
loopne
or
xor
into
mov
loop
and
cmp
push
cmps
or
dec
fdivr
lock
das
inc
dec
ja
add
xchg
add
inc
mov
pop
mov
out
jnp
add
mov
jmp
push
cmc
fiadd
bswap
sub
aas
and
adc
aad
sub
lea
mov
popf
pop
das
add
les
xor
dec
(bad)
cmovb
fwait
mov
inc
jo
add
jecxz
sub
repnz
mov
loop
adc
dec
cld
fwait
add
add
call
xor
xor
dec
add
push
out
push
mov
xor
call
lods
(bad)
cmp
mov
or
xchg
mov
add
ret
iret
xor
pusha
adc
leave
mov
add
imul
rcl
jbe
psubd
mov
xor
dec
call
mov
and
sub
lea
icebp
adc
inc
add
adc
pop
or
or
add
iret
mov
sub
add
rcr
mov
adc
mov
add
jbe
(bad)
sbb
push
or
(bad)
push
push
sub
adc
inc
dec
or
(bad)
(bad)
in
pop
pop
push
inc
call
pop
push
add
push
push
add
mov
and
(bad)
push
adc
or
js
data16
xchg
add
ror
mov
nop
das
jl
xor
sbb
cmp
adc
cmp
ins
adc
out
dec
pop
jle
pop
pop
xchg
loop
push
mov
pop
or
pop
mov
mov
mov
xchg
xchg
out
jp
aaa
xchg
fisttp
mov
add
ret
or
add
outs
inc
push
mov
inc
jl
(bad)
es
clc
pop
dec
fsubr
retf
sub
mov
sahf
aam
outs
das
aas
mov
lahf
and
inc
loope
dec
jle
lock
mov
aad
in
add
mov
in
rol
or
jmp
pop
cmp
inc
lahf
or
sbb
mov
add
cdq
add
mov
lea
shl
aam
neg
adc
mov
or
fnstcw
fisub
push
daa
and
rcr
adc
pop
(bad)
cmps
clc
loopne
mov
sub
das
mov
or
xchg
or
mov
in
fist
mov
sbb
push
ror
into
ficom
jne
test
push
pop
push
xchg
fs
rol
outs
das
aaa
xchg
cmp
lahf
mov
and
sbb
xchg
jl
xor
sbb
nop
das
add
cmp
or
xchg
inc
sub
cmp
sub
dec
std
mov
sti
mov
mov
addr16
inc
adc
mov
shr
mov
xchg
mov
clc
add
adc
pop
aam
ja
fisttp
jno
shl
jmp
adc
test
cmp
add
mov
retf
sbb
clc
xor
mov
xor
fld
fcomp
lock
xchg
je
jo
sbb
int3
jge
fsub
sub
lods
or
outs
imul
push
movs
mov
shl
dec
sbb
imul
arpl
push
and
pop
pop
pop
pop
ret
out
push
and
or
(bad)
clc
adc
dec
add
add
popa
loopne
mov
push
stos
push
data16
test
xor
popa
or
and
xor
stos
add
lock
cwde
icebp
mov
push
add
push
pop
das
mov
pop
mov
cmp
xor
mov
and
jge
add
sbb
add
add
jae
call
rcr
imul
ss
jge
bound
push
sub
ins
test
lahf
lds
sub
inc
fbstp
mov
in
lods
jge
add
mov
mov
inc
pop
cmp
jp
push
mov
or
mov
push
add
mov
adc
ds
push
push
and
xor
test
jle
sub
xor
push
outs
or
add
not
ret
data16
sub
lea
pop
ret
and
arpl
in
cwde
ins
je
sbb
inc
xor
jb
imul
ins
imul
cmp
jno
(bad)
in
ror
(bad)
test
data16
inc
out
xchg
or
les
outs
pop
int3
push
les
cmp
push
and
imul
cmp
mov
loopne
jnp
mov
inc
clc
ins
and
xchg
inc
inc
test
mov
sbb
push
jns
push
test
xchg
or
push
ins
mov
test
movs
ror
mov
pusha
mov
mov
cwde
std
add
loop
cwde
sbb
sbb
pop
mov
mov
dec
leave
jle
add
lea
add
cmp
add
loopne
inc
in
sub
and
mov
add
xor
sub
adc
aas
adc
adc
mov
xchg
enter
xchg
adc
mov
pop
cmps
lea
jne
cmp
lods
jecxz
inc
dec
add
pop
xlat
sbb
push
je
pop
je
popa
inc
ins
jae
push
push
js
add
inc
adc
add
jo
or
and
arpl
mov
mov
inc
stos
inc
sbb
(bad)
fwait
mov
stos
test
lods
cmp
cmp
jo
xchg
jle
mov
mov
loope
adc
ds
(bad)
call
repz
xor
fist
pop
ret
jmp
stos
loopne
sbb
icebp
jne
daa
cmc
add
test
jne
in
push
jae
hlt
inc
inc
clc
not
push
rol
into
(bad)
mov
push
cmc
inc
add
mov
pop
fwait
sub
xor
(bad)
xchg
push
xor
cmps
mov
mov
ds
inc
(bad)
(bad)
in
add
ds
gs
fwait
adc
dec
(bad)
das
(bad)
shr
cmps
xchg
adc
ins
scas
loopne
shl
sub
dec
scas
dec
jbe
outs
daa
jmp
push
nop
add
and
mov
or
sbb
adc
jp
mov
add
xlat
popf
jne
gs
pop
and
push
mov
inc
mov
sbb
adc
mov
push
fiadd
sbb
jg
test
sbb
cli
pop
sbb
xor
sbb
mov
and
xor
jne
sbb
retf
mov
in
cmp
dec
mov
push
outs
lods
(bad)
jp
pop
imul
push
mov
pop
cwde
fwait
rol
xchg
add
shr
imul
adc
add
jmp
mov
test
lods
inc
xchg
lock
add
pushf
fiadd
mov
scas
inc
ret
push
or
or
and
xor
sbb
push
lods
mov
add
dec
sub
(bad)
inc
jo
xchg
inc
test
(bad)
fadd
test
mov
ret
mov
cmp
out
or
pop
aaa
adc
jo
sub
adc
mov
push
mov
push
jo
ins
xchg
sub
je
jmp
js
aad
sbb
rol
mov
push
sbb
sbb
jmp
add
mov
jg
xchg
cmp
pop
cmps
or
lock
fdivr
fcomp
data16
out
addr16
aas
cmp
or
add
add
jne
sub
add
mov
rol
ret
lea
test
rcr
das
fs
jmp
setns
mov
sti
add
ins
add
pushf
push
lahf
stos
jmp
js
ret
loop
sbb
or
lods
and
(bad)
add
add
(bad)
dec
fdivr
cmp
mov
or
test
jmp
xchg
psubsw
and
(bad)
mov
mov
aas
and
adc
or
jo
push
pop
and
add
clc
xchg
pop
push
mov
dec
adc
jne
pop
inc
add
mov
push
adc
stos
and
add
inc
mov
and
int3
rcl
mov
push
inc
dec
mov
or
fcom
or
or
push
clc
sbb
arpl
adc
jmp
add
sub
cmps
jbe
pop
shl
or
mov
inc
dec
jne
or
inc
add
test
sbb
xlat
mov
rcl
mov
mov
mov
push
fild
mov
fisttp
cmp
fimul
inc
cwde
in
dec
cmp
mov
and
pop
pusha
lods
mov
and
pushf
or
cmp
xchg
or
dec
data16
inc
sar
int3
popf
fstp
mov
cmp
sbb
jg
push
xor
jle
mov
stos
mov
mov
inc
mov
ins
add
pop
xchg
(bad)
sbb
xchg
sbb
mov
pop
retf
sbb
popa
or
leave
or
push
ins
daa
jg
loopne
inc
sub
verr
dec
xor
xor
mov
ins
aaa
pop
clc
repz
push
or
(bad)
sbb
xor
push
das
mov
pop
mov
mov
add
sbb
mov
call
push
mov
jno
ror
dec
aas
mov
mov
add
or
pop
and
mov
sub
or
xchg
sub
test
push
mov
sub
adc
(bad)
(bad)
cmp
add
movs
aad
scas
mov
push
lods
mov
adc
loopne
bound
or
mov
pop
mov
mov
adc
mov
cmp
das
xchg
push
push
xchg
fbstp
mov
push
mov
jle
sub
mov
cmp
lds
or
push
rcl
dec
cmp
sub
inc
cli
shl
xor
mov
push
dec
retf
cs
pop
inc
lahf
and
adc
or
fs
mov
rol
mov
dec
sub
jne
je
popa
jb
cmp
loopne
pop
and
add
inc
ins
ficomp
dec
lock
ja
push
int3
sub
movq
push
sbb
sbb
out
cmps
add
sbb
cmp
movs
inc
inc
jae
retf
sbb
pop
lock
imul
shl
push
and
mov
add
pop
inc
inc
call
adc
or
je
inc
ja
add
jle
fld
das
fadd
push
pop
sbb
or
lock
dec
dec
push
mov
inc
or
ret
pop
lds
stos
mov
cmp
xchg
push
mov
adc
es
js
mov
mov
pop
mov
ja
movs
or
lods
and
and
jge
cmp
xor
push
xor
ins
inc
stos
jmp
jnp
mov
lds
push
loope
push
cmp
sbb
xchg
sub
rcr
(bad)
push
mov
jmp
xor
sub
sub
or
inc
(bad)
and
daa
jge
(bad)
sbb
jb
jmp
jmp
xor
xchg
pop
cmp
rcr
ret
ret
ret
shl
add
push
push
mov
jg
or
and
icebp
pop
pop
daa
daa
loope
inc
and
call
and
test
sti
jb
inc
adc
push
sub
lea
push
rol
jl
inc
add
mov
or
shl
jge
mov
xor
and
int3
sbb
inc
ins
mov
cdq
das
adc
inc
or
mov
pop
adc
push
and
and
sbb
cmp
inc
dec
push
push
gs
lods
sbb
or
adc
sbb
iret
xor
dec
add
push
loopne
mov
fcomp
mov
mov
push
push
push
add
rol
popa
arpl
or
sbb
sub
leave
or
push
ficomp
push
jp
ret
das
ror
sub
mov
add
add
sub
int
add
jnp
jae
push
and
inc
outs
lods
sbb
sbb
add
sbb
inc
ds
arpl
cmps
in
add
data16
adc
push
mov
xor
push
pusha
pop
or
and
rcl
out
or
sbb
add
jp
je
imul
xchg
sub
sbb
add
xor
(bad)
pusha
cmp
lock
adc
fiadd
test
outs
and
and
add
push
push
add
arpl
push
jns
(bad)
mov
dec
out
ror
pop
dec
test
ror
jmp
hlt
push
and
mov
mov
sti
nop
xchg
test
cmp
test
pop
cs
mov
push
in
push
cmp
daa
add
daa
push
inc
and
inc
dec
push
pop
test
mov
and
inc
cmp
fs
pushf
add
inc
or
dec
ins
jo
inc
imul
inc
sar
push
xchg
push
pushf
mov
pop
rcl
xor
enter
pop
scas
fs
lea
or
sbb
ds
push
lea
mov
enter
ror
lea
xchg
gs
shl
(bad)
popa
je
xlat
dec
ret
add
jns
dec
jns
fmul
pop
aas
mov
or
fisttp
push
fcom
outs
je
imul
je
push
(bad)
mov
pop
add
pop
in
int
xor
xor
data16
aad
push
int3
mov
loopne
xor
loop
add
add
adc
dec
inc
ins
shr
and
(bad)
aas
pop
sbb
lds
pop
test
inc
retf
or
cli
push
jo
(bad)
xlat
(bad)
call
add
ficom
std
inc
xchg
xor
jecxz
push
aas
fisttp
sbb
test
or
push
(bad)
push
dec
sti
xor
stc
inc
mov
pop
and
into
xlat
inc
popf
out
xor
fsub
idiv
imul
xchg
add
mov
(bad)
xchg
add
fwait
add
adc
pushw
repnz
dec
arpl
adc
push
mov
dec
mov
aaa
and
add
ret
aaa
repnz
(bad)
inc
data16
sti
xchg
lahf
iret
or
push
test
xor
xor
sbb
inc
js
or
sti
dec
loopne
adc
(bad)
in
xchg
sbb
sbb
les
outs
loope
mov
dec
dec
(bad)
jg
add
fst
clc
bound
data16
shr
mov
ins
or
outs
adc
cmp
je
add
fisubr
inc
mov
jnp
or
xsaves
les
jmp
jge
xchg
xor
ja
pop
inc
ror
stc
sbb
lock
scas
sbb
dec
xlat
std
inc
inc
and
add
out
sub
pushf
sbb
mov
add
jo
test
(bad)
push
and
data16
xchg
mov
iret
push
sub
data16
add
test
xor
imul
inc
dec
push
inc
inc
repnz
retf
push
and
sub
xchg
jl
pop
fistp
lahf
pushf
pop
and
mov
out
cmp
mov
sbb
sbb
sbb
xor
nop
sbb
(bad)
call
adc
mov
xor
js
outs
(bad)
cli
or
sbb
cwde
xchg
or
inc
movs
push
sbb
(bad)
call
pusha
fdiv
lds
aaa
ja
mov
fist
sahf
xchg
dec
(bad)
pop
(bad)
xor
push
sub
adc
outs
je
repz
mov
cs
dec
mov
add
pop
push
mov
loope
sub
jmp
sbb
arpl
aam
js
stos
ret
into
push
xchg
mov
movs
jnp
icebp
add
mov
in
add
xor
leave
aaa
mov
out
adc
imul
pusha
test
fisttp
js
(bad)
dec
inc
xlat
jne
fcomp
les
xchg
lea
and
iret
cmp
mov
xchg
push
(bad)
call
inc
push
cmp
pop
jmp
cmp
xchg
scas
ds
cmp
out
pusha
(bad)
ja
imul
pop
and
add
daa
pop
dec
cmps
mov
cdq
sbb
jno
mov
mov
fcomp
mov
mov
pusha
sub
(bad)
in
cmp
out
in
push
mov
pop
dec
cmp
(bad)
or
or
outs
or
xchg
inc
repz
pop
cmc
inc
mov
(bad)
mov
xchg
mov
push
imul
(bad)
aas
test
mov
fistp
mov
add
enter
ins
sbb
dec
sbb
and
add
sbb
inc
mov
call
mov
add
pop
mov
ins
jns
je
popf
scas
inc
sbb
out
push
xchg
cmps
cmp
fidiv
lods
cmp
sar
leave
(bad)
(bad)
jns
or
push
add
call
push
xchg
dec
xchg
xchg
sbb
ja
adc
(bad)
mov
pop
cmp
clc
call
add
stos
xchg
sbb
adc
push
bound
lock
leave
jg
pusha
(bad)
push
cmp
add
pop
xchg
jo
loope
inc
sahf
movs
arpl
loopne
mov
(bad)
call
xor
jnp
or
dec
xchg
or
imul
add
test
aaa
add
push
dec
das
(bad)
fnstsw
add
lods
sbb
lods
add
jg
jne
mov
ret
test
fisubr
mov
shl
push
pop
mov
les
pop
mov
ret
pop
ret
xor
jmp
es
cmp
cdq
aam
popa
push
jae
mov
mov
ror
(bad)
mov
or
add
pop
inc
mov
dec
popf
aaa
adc
retf
jg
adc
jmp
cmp
inc
mov
sar
or
shl
or
(bad)
mov
xor
cmps
movs
mov
pusha
(bad)
sub
sbb
inc
jg
movs
jg
adc
ror
clc
inc
push
aaa
pop
push
cld
call
stc
(bad)
adc
push
jmp
or
add
lea
pop
add
sar
jmp
or
mov
dec
lahf
mov
mov
inc
cmp
(bad)
stos
sub
(bad)
jg
xchg
test
ins
jle
inc
stos
inc
je
test
(bad)
fwait
or
int3
xlat
sbb
pop
loopne
xor
jp
adc
loope
es
ret
jmp
inc
mov
sbb
(bad)
out
scas
pop
ins
xchg
ins
inc
mov
adc
xor
jo
hlt
dec
fisub
lods
sub
jge
(bad)
dec
push
sub
add
xchg
xor
add
sahf
or
mov
gs
xchg
add
sub
das
push
inc
xchg
mov
test
pop
call
inc
jns
adc
sub
pop
dec
mov
and
push
jae
pop
pop
(bad)
int
outs
ss
jae
and
stc
loop
jmp
adc
jb
fadd
(bad)
pop
cld
dec
inc
and
pop
adc
enter
inc
push
adc
jno
inc
mov
mov
push
cmp
jl
or
mov
xchg
movs
or
retf
push
and
retf
xchg
loop
addr16
push
or
inc
push
(bad)
push
fcom
or
mov
sub
add
mov
adc
imul
or
pop
call
adc
xor
xor
sbb
mov
in
mov
add
popf
test
(bad)
cmp
mov
adc
or
xor
inc
cld
into
arpl
cld
lods
xor
push
fsubr
mov
cmp
dec
or
and
adc
(bad)
adc
ja
clc
and
add
add
jg
test
(bad)
and
add
push
adc
(bad)
shl
jecxz
inc
loopne
lods
pop
int
sar
sbb
inc
fsub
xlat
cs
jp
jae
xchg
std
xchg
add
push
test
dec
scas
pop
pusha
pop
or
cmp
aam
iret
xor
int
pop
rcr
movs
das
mov
adc
sbb
inc
push
adc
push
sahf
loopne
sub
sbb
mov
jle
and
jmp
pop
push
outs
cmp
dec
test
mov
dec
inc
sub
inc
cmp
and
(bad)
push
sub
mov
imul
iret
inc
imul
cmp
fimul
dec
inc
push
mov
div
mov
xor
cmp
or
gs
(bad)
gs
into
aas
xlat
test
pop
dec
inc
jno
and
in
daa
push
mov
mov
bound
add
mul
jo
add
sahf
and
jmp
outs
daa
out
and
add
mov
sbb
add
add
test
jge
xchg
or
cld
push
push
movs
mov
movs
inc
add
out
or
add
div
push
scas
add
push
scas
frstor
cmps
push
push
aad
pusha
pop
or
sub
mov
aad
add
and
rcl
push
and
xor
adc
xor
nop
inc
adc
add
and
inc
jmp
fsubr
ret
sub
dec
enter
dec
add
mov
sbb
pushf
loope
(bad)
dec
xchg
(bad)
pop
sbb
inc
mov
adc
cmp
loope
aad
(bad)
add
loopne
push
dec
dec
or
jmp
push
dec
loope
(bad)
iret
std
push
and
xor
mov
fsub
movs
das
mov
arpl
sbb
xor
mov
push
jmp
(bad)
pop
(bad)
arpl
or
ret
(bad)
stos
loopne
leave
xchg
popf
sub
pop
repnz
mov
sub
dec
ret
add
mov
cmp
dec
fcom
stos
adc
mov
add
xchg
or
mov
das
mov
inc
icebp
jns
addr16
adc
pop
inc
call
xor
fcomp
ins
sbb
xor
sbb
mov
das
mov
or
aad
xor
mov
adc
mov
dec
inc
dec
mov
fldcw
fidivr
shl
mov
call
pop
fisubr
and
fcomp
cmp
fisub
adc
ret
mov
movs
scas
push
(bad)
(bad)
pop
jo
adc
int
jno
adc
or
or
cmps
fild
cmp
int3
(bad)
push
mov
xchg
(bad)
mov
pop
in
pop
pop
mov
mov
rcr
sub
fcomp
imul
push
mov
add
movs
pop
xor
and
cmp
pop
inc
push
and
add
fsub
aad
dec
push
cmp
mov
push
fnsave
iret
inc
scas
es
das
imul
loop
mov
shr
push
mov
fisttp
ficomp
stos
rol
fcomp
push
inc
cmc
cmp
ret
adc
enter
xor
cmp
and
push
outs
push
mov
dec
rol
ret
adc
loop
inc
fimul
scas
cmp
or
or
push
ret
enter
fist
les
sbb
jb
popa
das
inc
adc
aad
fistp
sub
sbb
test
sub
fistp
sbb
sbb
inc
cmc
jmp
sbb
ss
jns
addr16
mov
shr
add
jno
loopne
pop
test
pop
(bad)
ror
(bad)
sub
in
das
mov
arpl
imul
xchg
fdiv
cmp
push
aam
cs
and
push
pop
adc
rcl
mov
movs
shr
or
pusha
push
sbb
les
dec
ret
imul
(bad)
ins
dec
test
dec
outs
xchg
jae
and
movs
ror
lahf
aam
or
xor
dec
fimul
sahf
in
std
inc
add
cs
ficom
(bad)
xor
sub
ins
add
add
jmp
mov
iret
adc
mov
in
mov
and
out
stos
clc
push
pop
in
daa
mov
addr16
setno
stc
xchg
xchg
xchg
daa
and
push
int
rcl
out
xchg
mov
adc
and
push
add
imul
or
or
popa
cli
arpl
rcl
add
add
jno
mov
or
outs
or
and
mov
call
push
add
ins
and
jle
fsubr
sbb
mov
or
sbb
sti
ins
mov
sub
pop
mov
adc
jne
lods
mov
add
cmps
push
ret
xor
and
stos
jbe
mov
add
inc
js
cmc
mov
jae
add
repz
out
dec
pusha
jnp
and
cmp
sub
mov
in
adc
push
xor
jae
push
es
inc
inc
and
nop
xor
add
mov
ret
inc
and
pop
dec
dec
sti
loope
dec
xchg
dec
jb
xchg
add
cmps
bound
ins
cmp
outs
jae
pop
jb
cwde
push
fsub
fsubr
jae
in
cwde
test
jecxz
dec
pop
enter
add
sub
or
out
rcl
(bad)
lds
les
movs
add
push
push
or
daa
pop
push
addr16
adc
pop
repz
test
(bad)
mov
mov
xor
fisttp
pop
add
mov
call
or
adc
add
mov
in
adc
add
jae
add
cmp
lds
into
leave
call
jne
jae
sbb
add
inc
mov
pop
add
neg
add
push
mov
mov
ds
sbb
add
jmp
add
std
or
adc
adc
or
and
xor
jmp
add
mov
cmp
(bad)
test
das
xchg
or
and
(bad)
cmps
lea
sbb
fyl2xp1
clc
push
loop
xchg
ficom
cmp
add
pushf
jmp
bound
adc
sub
pop
mov
mov
push
shl
out
pop
cmp
clc
sub
add
bound
jg
and
stos
loop
lock
shr
inc
(bad)
in
pop
enter
cmps
cmps
clc
add
mov
daa
dec
in
cmps
jnp
stos
adc
adc
add
jns
sbb
(bad)
jmp
loope
sbb
xchg
push
mov
inc
ds
aam
mov
fld
movs
outs
pop
pop
jo
or
or
cs
daa
sbb
lock
or
add
add
add
mov
(bad)
pusha
ror
(bad)
out
and
add
addr16
loopne
jns
push
adc
loope
leave
push
in
aas
jmp
or
inc
or
inc
xor
test
int
or
sbb
sbb
inc
adc
les
push
mov
or
and
mov
lock
xor
scas
jmp
mov
pop
lock
fs
stos
pop
adc
or
sbb
and
mov
lock
add
add
xchg
dec
sbb
and
sub
lea
pop
cmp
xor
and
jns
sub
jo
iret
pop
stos
pop
pusha
(bad)
push
aad
(bad)
dec
aam
and
test
xor
stc
fwait
mov
cmp
movs
repz
ja
jecxz
mov
nop
(bad)
xchg
xor
pushf
jl
xchg
shl
out
pop
or
push
add
arpl
repz
(bad)
pop
add
add
and
xchg
mov
sub
xchg
inc
adc
sub
mov
pushf
shl
mov
rol
jecxz
mov
or
adc
loopne
sbb
dec
hlt
xor
ja
mov
adc
jno
shr
add
mov
fsub
pushf
adc
add
sbb
pop
sbb
jbe
pop
and
xor
add
or
adc
and
fsubr
and
cmc
push
push
add
sbb
sbb
popf
adc
sub
out
mov
ret
mov
neg
cwde
jecxz
or
out
and
in
mul
sbb
xor
add
dec
lds
aam
and
cmp
xor
jge
in
push
push
inc
in
neg
sub
imul
out
pop
js
inc
push
es
das
addr16
pop
loopne
test
(bad)
hlt
fistp
ror
mov
and
xlat
clc
add
xchg
add
and
stc
sbb
and
stc
mov
pop
mov
mov
push
loope
cmc
mov
out
mov
inc
movs
push
pusha
cli
aas
sti
mov
xchg
movs
cli
pop
cmp
imul
xchg
mov
imul
xor
sbb
jo
pop
add
add
push
pop
push
mov
and
mov
cmp
add
lds
cmp
sti
pop
inc
mov
test
mul
xchg
ret
pop
cld
and
and
add
mov
cld
out
std
adc
in
jae
es
ja
shl
jmp
loopne
das
sub
std
or
std
or
fist
mov
push
and
clc
inc
push
inc
cmp
cwde
and
sbb
ss
xlat
pop
sbb
sub
mov
pushf
jmp
(bad)
mov
inc
xchg
or
xor
lock
(bad)
sub
push
cmp
or
ins
cmps
loopne
mov
jmp
js
adc
mov
pop
xchg
push
test
aaa
or
jns
or
out
test
dec
aaa
or
sbb
fsubr
imul
loopne
dec
mov
arpl
or
add
repz
leave
in
rol
push
add
vmread
out
leave
(bad)
dec
leave
lods
sar
jb
inc
mov
in
in
in
add
xor
jp
ds
jbe
lods
pop
(bad)
add
xor
cmp
pop
or
movs
jno
loope
jns
or
pop
push
xchg
movs
push
shl
stos
aam
jo
movs
jae
jmp
imul
fwait
pushf
fadd
movs
mov
inc
mov
loope
inc
or
bound
in
xchg
js
dec
push
push
repz
mov
pop
sub
and
inc
movs
and
adc
sub
movs
ret
xor
fs
adc
and
jo
movs
or
add
pop
push
std
imul
add
xchg
push
mov
xor
cmp
movs
add
arpl
je
or
xchg
test
test
adc
mov
jge
add
add
adc
sbb
jle
adc
aas
adc
adc
dec
adc
or
test
inc
or
mov
scas
lock
shr
add
pusha
add
pop
retf
or
and
shl
adc
pop
mov
sbb
rcl
push
imul
xchg
ficomp
mov
mov
sbb
frstor
sbb
jmp
adc
adc
dec
dec
ret
xchg
push
adc
mov
mov
or
dec
cmp
jp
cmp
shl
add
add
rol
cwde
inc
xor
adc
add
add
mov
pop
or
mov
dec
sar
hlt
mov
mov
dec
inc
add
add
inc
add
push
adc
xor
dec
shl
cmps
in
pop
add
fist
sbb
pop
mov
movs
jno
or
pmulhuw
sbb
outs
pop
or
sbb
test
pop
sbb
dec
loopne
add
iret
aas
push
mov
mov
jo
popa
std
fisub
pushf
(bad)
mov
mov
jecxz
dec
add
ret
adc
xlat
cmp
scas
jb
ins
pop
add
or
adc
imul
push
sub
imul
pop
mov
mov
add
push
sahf
add
inc
lock
rcl
leave
xchg
or
add
sbb
sub
add
in
sub
icebp
xor
mov
add
arpl
stc
rcr
or
in
shr
add
fsub
pop
inc
ret
das
sbb
fs
(bad)
(bad)
mov
mov
push
adc
mov
les
xor
popa
call
imul
out
or
movs
push
sub
push
fs
sub
sub
xchg
dec
cmps
sub
dec
dec
popf
or
jnp
push
add
bound
cdq
sub
push
cdq
cdq
inc
test
xor
adc
mov
mov
pop
mov
sbb
push
sti
push
add
xor
iret
lock
fild
or
test
pop
add
rcr
imul
stos
lea
push
inc
not
jne
movs
add
sar
fldcw
out
fs
aas
mov
add
cld
mov
push
jecxz
iret
rol
loopne
add
inc
sbb
sbb
or
sbb
pop
push
mov
inc
hlt
and
inc
imul
adc
add
inc
adc
sbb
xor
adc
push
inc
sbb
hlt
(bad)
push
sbb
gs
push
or
jg
add
or
lock
cmp
jge
mov
cmp
jns
ss
adc
or
adc
or
ret
push
xchg
add
or
mov
cli
mov
sub
sbb
sbb
ret
xchg
mov
fadd
jl
add
mov
fimul
rcl
add
and
mov
and
inc
dec
sbb
aam
nop
push
clc
mov
jo
jne
sar
dec
push
sbb
cmp
jmp
aad
out
xchg
je
jge
or
mov
ret
(bad)
in
adc
push
aaa
mov
mov
pop
and
loopne
sahf
sahf
(bad)
iret
mov
rcl
pusha
or
add
push
mov
in
pop
or
daa
inc
rol
add
inc
lea
lods
ss
pop
inc
cdq
imul
out
xchg
(bad)
jmp
and
or
fdiv
push
push
push
hlt
add
shr
xor
add
sbb
lea
jnp
sahf
ins
jl
(bad)
jp
inc
cmp
sar
mov
ss
jnp
lock
repnz
jno
sar
add
xlat
ror
adc
lock
not
push
mov
adc
xor
adc
lea
mov
mov
adc
adc
and
jne
fild
mov
xchg
dec
jp
ret
fnstcw
je
icebp
and
into
xor
push
in
add
mov
dec
push
or
or
sbb
add
mov
jnp
mov
sbb
or
xor
call
data16
movs
ss
adc
push
call
xchg
(bad)
repnz
mov
mov
inc
ret
fwait
add
mov
lea
je
mov
mov
mov
sub
push
sbb
dec
add
ss
jo
xchg
push
or
or
adc
mov
mov
xchg
add
sbb
stos
scas
sub
nop
daa
test
xchg
xchg
mov
add
int3
out
cmps
sub
pop
dec
ins
mov
adc
mov
out
xchg
jl
in
mov
mov
not
mov
jne
and
or
out
add
or
add
or
adc
popa
sub
xchg
inc
add
(bad)
loopne
push
std
mov
dec
sub
inc
cmps
ins
loopne
add
pop
jg
pop
or
add
or
mov
and
jne
mov
mov
adc
in
cmps
push
sub
mov
pop
pop
mov
add
ret
or
div
or
mov
mov
lods
jl
popa
daa
and
jnp
aas
adc
ret
fadd
aam
mov
and
nop
je
test
xchg
fisubr
inc
loopne
push
push
dec
cmp
sbb
hlt
aam
(bad)
adc
sub
push
call
mov
pop
ret
call
rol
into
adc
push
xor
or
mov
pop
mov
(bad)
push
bound
and
and
push
xor
fild
push
add
xchg
adc
cmps
inc
or
nop
fld1
pop
pushf
mov
mov
push
ss
xchg
add
jecxz
pop
les
adc
scas
dec
ret
aaa
ret
push
mov
push
or
cmp
adc
add
loopne
imul
cli
pop
sbb
pop
push
adc
push
inc
addr16
inc
or
dec
adc
outs
inc
add
jmp
inc
or
xchg
hlt
repnz
pop
add
mov
dec
inc
and
cmps
cmp
(bad)
mov
push
aas
dec
pop
adc
dec
pop
push
lock
pop
push
mov
inc
xor
dec
cmp
pop
clc
mov
ret
daa
pop
cmp
pop
mov
push
xchg
mov
lds
mov
adc
jo
and
inc
dec
push
mov
cmp
pop
fmul
push
add
xlat
mov
jle
jg
cmp
lods
pop
jo
add
ins
loope
cmp
jmp
(bad)
int
dec
popa
jmp
rol
rcr
push
add
outs
pop
fsub
or
out
inc
jne
and
jl
shl
add
lock
adc
pop
ror
clc
sbb
dec
in
hlt
mov
rol
inc
jo
sbb
mov
add
clc
xchg
cdq
dec
sbb
leave
inc
sbb
enter
mov
es
mov
push
mov
dec
add
add
mov
xchg
loope
fisttp
push
pop
push
xchg
mov
sbb
jo
add
aaa
or
les
and
mov
sbb
out
or
sub
test
out
lea
or
cmp
das
(bad)
daa
or
sbb
or
daa
and
jne
js
or
xor
xchg
test
and
das
or
mov
adc
adc
dec
addr16
sbb
rcl
pushf
loopne
xchg
scas
dec
cld
dec
ret
nop
(bad)
loopne
(bad)
lea
shl
mov
add
add
fwait
das
sar
add
fs
pop
imul
retf
inc
ret
jl
xor
push
fwait
ret
popa
lock
daa
or
pusha
xlat
aaa
mov
mov
sbb
jns
lea
daa
dec
push
inc
dec
sub
jecxz
push
mov
test
push
daa
push
sub
unpcklps
loopne
pop
inc
cmp
dec
nop
inc
jo
daa
or
(bad)
fstp
or
aaa
push
push
repnz
addr16
ret
sub
inc
cmp
sub
daa
xor
mov
xor
xchg
popf
ror
pop
leave
ja
and
mov
daa
mov
or
aas
adc
adc
cld
sub
enter
mov
mov
push
scas
and
call
mov
jb
popa
mov
add
and
les
adc
enter
xor
aaa
pop
lds
cmp
sub
xor
jne
inc
fist
add
mov
adc
loop
and
and
or
cmps
int3
ins
lock
fild
fmul
pop
sub
sbb
and
loopne
daa
sbb
inc
mov
mov
mov
enter
adc
test
sbb
dec
xchg
pushf
jecxz
nop
or
pusha
(bad)
adc
jl
call
push
rcr
leave
popa
fisub
retf
adc
pop
adc
jns
and
fisub
dec
pop
fs
setnp
push
test
daa
pop
in
and
add
int3
mov
push
or
or
sub
rol
push
and
and
outs
cmp
inc
loope
test
jp
pop
add
lahf
enter
movs
adc
push
mov
xchg
mov
or
jne
not
les
inc
fcomp
add
sub
xor
and
xchg
stos
xor
dec
or
sbb
sbb
mov
xchg
inc
jl
add
or
test
jle
and
ret
lahf
adc
xor
(bad)
ret
push
add
and
push
loop
ret
inc
(bad)
dec
or
jmp
scas
dec
adc
or
repz
push
or
popa
sub
adc
xchg
mov
cmp
jge
mov
hlt
mov
mov
push
test
lods
xchg
mov
mov
movs
iret
xchg
and
xchg
add
(bad)
jmp
add
test
and
push
and
sbb
repnz
or
inc
test
jne
popa
add
pop
sbb
mov
adc
pop
ja
je
or
(bad)
shr
paddb
cmp
and
leave
xlat
sub
or
addr16
adc
pop
arpl
xor
sub
sbb
das
sbb
push
cmp
push
daa
and
icebp
and
nop
out
mov
iret
mov
adc
inc
add
fmul
dec
das
push
test
pop
or
sbb
or
cmp
adc
(bad)
push
inc
mov
imul
cmp
xor
xor
mov
aam
xchg
push
test
inc
test
int
adc
push
cmps
lock
mov
movs
(bad)
js
sub
mov
sub
adc
mov
pop
lods
push
push
or
jb
aas
inc
ins
xor
dec
mov
push
push
ds
jp
jne
clc
imul
mov
sub
shl
rcr
leave
cmp
jmp
fstp
pop
xor
push
and
mov
mov
push
jmp
mov
xchg
inc
or
call
loopne
add
add
or
arpl
scas
sub
fmul
push
pop
ret
mov
sbb
mov
mov
dec
jne
je
or
push
xchg
rcr
mov
out
sbb
cmc
push
inc
add
pop
sbb
and
push
bound
mov
(bad)
call
or
fadd
(bad)
and
lahf
ror
cmp
cli
mov
cmps
das
pop
stos
add
pop
ret
xchg
xchg
cmp
xchg
lods
js
and
leave
add
jo
jl
loopne
enter
rol
pop
pop
outs
jg
rol
inc
push
jg
xor
add
sub
fcom
xor
pusha
add
add
call
xor
add
pop
mov
push
jg
xor
pop
ins
add
nop
(bad)
rol
ret
add
enter
xor
dec
aaa
loope
das
xchg
mov
jns
mov
add
push
call
jp
mov
ror
inc
xchg
test
add
push
mov
mov
das
popa
pop
add
mov
xor
test
out
xor
loopne
or
jl
in
lock
addr16
dec
push
cld
sub
popa
imul
addr16
dec
xlat
and
rol
dec
or
movs
xchg
and
jmp
inc
push
rol
inc
and
sub
leave
dec
push
and
add
jae
dec
xchg
inc
push
(bad)
repnz
pop
adc
div
push
push
repnz
sub
add
call
les
and
(bad)
lea
xor
or
and
popa
push
jb
aaa
(bad)
xor
in
and
jnp
loop
cmp
mov
or
fcmovb
add
movs
fild
rcr
pusha
aas
xor
dec
nop
in
xor
sahf
mov
rol
push
cli
xor
ins
rcr
pop
aaa
add
outs
ror
sar
adc
pop
sub
or
jmp
into
add
aaa
das
xor
xchg
ds
cmp
cmp
inc
sub
int
sub
mov
jge
hlt
mov
add
mov
retf
dec
jne
sub
mov
sbb
push
pop
(bad)
pop
das
sub
mov
xchg
pushf
and
sub
lods
xchg
add
add
inc
jb
imul
adc
sub
clc
add
add
xchg
pop
or
sub
or
hlt
mov
or
pop
add
cmp
pop
pop
cmp
cwde
aaa
in
sub
arpl
pop
nop
add
out
cmp
sbb
cmp
or
pusha
in
pop
ins
loopne
movaps
pop
mov
pop
(bad)
inc
push
mov
cmp
and
in
scas
mov
xor
or
mov
cdq
xor
xor
mov
scas
sbb
das
mov
lds
mov
cmp
pop
push
xchg
pop
sub
dec
cmp
test
call
jae
in
outs
and
mov
pop
test
ins
pop
push
call
mov
lgdtd
ins
dec
jb
cmps
aas
or
sbb
cmp
jg
aas
add
jecxz
rol
pop
adc
jnp
ret
inc
jge
push
mov
cmp
mov
push
inc
or
fisttp
test
dec
and
or
scas
ret
stos
sbb
dec
in
add
fisub
cs
inc
xchg
sub
or
cmps
and
ror
stos
aas
fs
pop
and
cld
into
inc
test
cmp
inc
shl
mov
dec
(bad)
neg
cmp
inc
push
pushf
es
das
add
clc
fld
xlat
aam
dec
call
(bad)
adc
mov
inc
mov
sbb
test
inc
fs
imul
xor
jl
inc
nop
rcr
(bad)
push
xlat
xor
or
or
ins
add
pop
push
xor
inc
pop
leave
adc
or
cmc
inc
fs
pop
cmp
cmp
mov
push
mov
xchg
push
in
das
adc
inc
loope
inc
fs
fisttp
mov
sub
jns
call
add
push
ds
xchg
jecxz
hlt
imul
dec
mov
iret
and
xor
xchg
dec
(bad)
movs
jae
movs
cmc
inc
dec
dec
adc
scas
daa
and
repnz
push
mov
aad
inc
push
leave
enter
fisub
dec
push
in
leave
leave
test
in
fs
js
shr
aas
cpuid
es
call
add
inc
mov
add
and
push
mov
sub
mov
test
cmp
lds
jns
lahf
pusha
adc
fdiv
adc
(bad)
jnp
hlt
mov
xor
add
xchg
arpl
or
std
idiv
push
popa
outs
addr16
mov
fadd
add
sbb
ja
and
xchg
or
jae
add
pop
mov
pop
repnz
add
test
push
pop
fwait
sub
xor
fstp
fmul
cmp
add
clc
sub
imul
inc
mul
and
inc
add
loope
inc
ror
mov
dec
inc
push
lods
or
xor
imul
add
outs
jbe
mov
mov
out
popf
cmp
xchg
test
fidiv
xor
mov
cs
daa
movlhps
lahf
jg
das
add
sub
popa
pop
stos
add
dec
sbb
aaa
daa
xlat
adc
ss
adc
xchg
dec
xor
or
add
adc
daa
fbld
and
adc
jae
and
push
pop
adc
push
outs
jb
jecxz
sub
push
add
mov
hlt
movntps
imul
push
mov
push
int3
mov
jg
icebp
ss
ins
call
fsubrp
xchg
dec
or
aam
push
mov
inc
add
mov
rcl
xor
test
lods
sub
sbb
sub
push
pop
pop
jne
sub
inc
add
mov
add
dec
and
add
dec
push
or
and
and
and
mov
and
fs
mov
in
sub
adc
xor
inc
lahf
adc
inc
add
pop
xchg
mov
mov
pop
into
mov
pop
dec
dec
or
xchg
stos
add
inc
or
(bad)
pop
fiadd
dec
pop
nop
dec
push
int3
je
clc
mul
imul
or
push
lea
or
push
xor
jecxz
or
pop
sub
pop
cmc
bound
pop
jecxz
sbb
adc
and
mov
mov
pop
pop
nop
add
mov
push
sub
nop
pop
pop
pop
daa
loopne
loopne
cmp
dec
add
mov
loope
lock
push
or
dec
aaa
ins
push
pop
pop
jp
pop
mov
push
(bad)
or
or
enter
and
repnz
das
fisttp
dec
inc
aam
fistp
dec
aam
add
arpl
sbb
push
push
leave
sub
gs
je
lahf
jecxz
daa
and
stc
clc
sysret
push
inc
jg
daa
daa
daa
ret
aad
push
enter
jno
(bad)
push
call
scas
mul
push
pushf
pushf
fcom
out
(bad)
mov
dec
dec
inc
sahf
and
ins
movs
je
ret
dec
in
aas
push
psllq
fimul
fisub
adc
scas
mov
fist
shl
mov
sub
hlt
rcl
dec
or
dec
ret
or
sbb
mov
add
xor
add
xor
inc
mov
retf
mov
sub
pop
inc
mov
pop
or
adc
ja
adc
je
push
push
(bad)
(bad)
inc
lds
add
mov
in
repnz
pop
pop
inc
xor
dec
adc
lds
mov
(bad)
adc
sbb
jg
or
push
and
pop
pop
pop
push
imul
xchg
mov
pop
push
pop
jge
add
shl
or
push
dec
mov
pop
jl
dec
sbb
dec
inc
cmp
loopne
mov
xchg
dec
mov
push
das
mov
and
dec
js
jle
aad
adc
into
mov
and
add
dec
rcl
popa
je
add
push
mov
add
movs
push
adc
or
xchg
out
pusha
or
clc
sbb
aaa
fcomp
ins
and
or
sub
add
adc
inc
or
inc
inc
ins
pusha
lods
das
pop
mov
movs
pop
mov
call
push
movq
xchg
dec
xor
pop
imul
and
mov
inc
pop
push
xor
(bad)
aas
call
sbb
pop
sub
sub
or
hlt
call
stos
sbb
cmp
or
mov
dec
sbb
pop
xchg
mov
sub
cmp
fidiv
ror
(bad)
sbb
pusha
scas
hlt
neg
xor
mov
sahf
pusha
push
in
adc
xor
ins
mov
push
xchg
aaa
shl
pop
in
movs
jae
fcomp
sub
dec
leave
mov
fs
mov
push
or
packuswb
push
enter
pmulhuw
fs
bound
lds
hlt
in
and
daa
and
(bad)
imul
enter
jge
jmp
dec
outs
cmps
out
aas
fist
jne
cmps
pop
je
mov
adc
adc
push
xor
dec
enter
push
pop
dec
fisttp
fcomp
add
add
inc
daa
xor
add
xor
adc
cmp
fsub
add
call
dec
add
aam
add
add
inc
movs
cmp
les
inc
mov
mov
add
mov
add
push
xchg
dec
push
std
add
pop
enter
pop
push
jg
sub
mov
dec
push
sub
shl
and
xchg
cmp
push
xor
mov
or
pop
jno
pop
push
stos
push
or
or
aas
add
movs
stos
jae
add
push
repnz
les
mov
add
jmp
fcomp
or
pop
xchg
aaa
sub
shl
hlt
and
push
leave
sub
loopne
mov
push
adc
add
pop
pop
sbb
push
pop
outs
push
add
or
pop
scas
and
cs
test
fs
adc
ds
push
mov
je
sbb
rcl
stos
inc
js
pop
adc
hlt
(bad)
adc
xor
push
cmp
inc
pusha
in
bound
mov
push
inc
jo
or
ret
loopne
retf
sbb
out
ds
push
and
pop
icebp
jmp
sub
mov
outs
das
test
jne
add
inc
adc
into
cmp
out
sbb
imul
rcl
lods
jmp
inc
mov
cmp
aaa
sub
jbe
rcl
cmp
push
ins
add
dec
ss
xor
sbb
cmps
ins
sub
jnp
inc
outs
sub
ins
iret
xor
sbb
dec
add
jp
push
mov
xor
cmp
mov
fs
cmp
lock
test
les
das
test
dec
leave
mov
arpl
outs
popa
adc
les
popf
mov
scas
outs
push
xchg
xchg
daa
mov
lock
push
lods
mov
call
(bad)
mov
jge
cmp
jp
pushf
mov
jmp
sahf
pushf
mov
jne
in
xchg
ds
pop
call
mov
or
push
test
cmp
sbb
adc
mov
dec
add
add
or
in
and
or
adc
inc
mov
int
add
popf
fadd
push
ror
int
or
add
sub
jae
or
int
inc
cvtps2pd
sub
pop
int
cmp
dec
sbb
cmp
sbb
jns
jbe
inc
rol
imul
inc
mov
or
cmp
jbe
inc
inc
push
add
lods
mov
cmp
imul
push
mov
repnz
jbe
add
inc
adc
add
xchg
adc
cmp
mov
loope
adc
mov
jnp
push
adc
add
cmp
sub
push
pop
mov
je
inc
adc
jne
push
jbe
int
or
adc
mov
and
leave
scas
or
or
push
push
adc
cmp
mov
leave
nop
jecxz
cmp
ja
push
sbb
nop
inc
lock
adc
mov
pop
test
cwde
add
xchg
ret
jbe
or
ret
lahf
hlt
hlt
lea
dec
in
repz
add
add
sbb
cmp
(bad)
arpl
mov
pop
cmp
pavgb
cmps
push
sub
in
inc
mov
ud2
mov
xor
sbb
dec
and
cmp
pop
dec
add
jno
or
mov
(bad)
jbe
arpl
(bad)
add
or
or
es
mov
sbb
cwde
mov
ret
sub
je
push
imul
jg
pop
cmc
sbb
xor
ja
test
aaa
inc
stc
cmps
jns
cmp
push
xor
xor
push
dec
sub
mov
xchg
(bad)
lahf
push
test
mov
mov
popf
ret
pop
inc
jnp
jp
cmp
dec
(bad)
jl
inc
jnp
bound
mov
jmp
hlt
movhps
rol
dec
cmp
aam
xchg
push
jb
xor
aam
sub
add
rol
cmp
mov
jnp
sub
adc
fs
mov
outs
lahf
and
(bad)
loop
or
adc
jge
sahf
out
pop
jge
pop
jle
leave
leave
leave
dec
xchg
jg
jle
popf
call
add
dec
test
xor
jmp
nop
cmps
inc
xor
stos
enter
cmp
pop
fcomp
in
jb
pop
fdivr
loop
dec
and
add
hlt
outs
aad
outs
jecxz
js
push
jge
pop
gs
loopne
mov
in
add
or
jp
xchg
cmp
sub
in
(bad)
add
mov
movs
lahf
sahf
push
inc
or
jns
and
test
ins
adc
xor
cmp
pop
adc
rdmsr
lahf
mov
or
cmp
lahf
cmp
push
nop
pop
push
xchg
cmp
add
inc
push
and
add
add
test
add
push
jmp
ret
stos
ss
cmp
cmp
(bad)
loop
sub
aaa
test
das
xchg
xor
mov
xchg
das
mov
and
je
add
add
sub
ret
and
add
lods
scas
dec
add
rcl
dec
or
movs
scas
shl
movs
adc
and
clts
and
loopne
ins
pop
pop
and
test
or
xchg
lods
jecxz
and
out
cmp
jbe
in
cmp
pop
cmp
pop
leave
leave
leave
in
in
(bad)
ins
loopne
leave
leave
leave
cwde
mov
outs
fistp
fistp
cmp
cmp
mov
dec
outs
pop
sub
cmp
punpckhbw
push
das
enter
xor
test
jmp
cmc
sahf
out
sahf
adc
and
xor
jns
out
inc
dec
push
pop
popa
out
sahf
out
jno
or
mov
jno
out
ror
f2xm1
mov
add
mov
mov
xchg
js
pop
lock
mov
hlt
test
dec
add
xchg
in
sub
pop
mov
in
fs
jg
in
sbb
repnz
pop
add
cmp
test
inc
mov
push
js
xchg
add
fmul
mov
add
dec
sub
or
sbb
shl
lahf
dec
push
push
inc
pop
push
dec
inc
push
xor
inc
inc
inc
dec
dec
inc
mov
inc
fld
mov
je
ja
jl
pusha
or
data16
in
inc
arpl
sub
inc
xor
push
mov
and
fist
push
ficomp
push
popf
stos
je
fld
imul
or
add
(bad)
and
xor
jne
ins
and
jbe
gs
(bad)
lea
pusha
add
in
inc
and
mov
push
add
xchg
xor
pusha
mov
add
mov
or
mov
xor
ins
outs
aas
lock
or
adc
fist
ret
sbb
(bad)
cmp
push
dec
sbb
aam
sti
inc
push
push
pop
ins
push
pop
arpl
jo
outs
pop
jae
in
sbb
jo
outs
ss
addr16
jb
popa
ins
ins
jl
jo
gs
push
xchg
bound
in
imul
outs
mov
jmp
imul
adc
push
mov
repnz
cmp
retfw
jl
add
add
or
(bad)
mov
sbb
mov
jo
(bad)
mov
pushf
jae
mov
cmp
rol
mov
sub
xor
sub
jb
jbe
add
inc
pop
sahf
jmp
lds
rcl
jmp
dec
add
sbb
inc
and
adc
ror
sbb
dec
sub
outs
fs
and
inc
or
jb
sti
sub
neg
push
ins
jl
pop
or
leave
inc
jbe
inc
xchg
out
loope
rep
mov
pushf
inc
jge
popa
adc
adc
in
(bad)
aas
mov
jae
push
daa
push
pop
or
les
inc
and
inc
push
sti
(bad)
jo
in
inc
outs
rcr
inc
lock
jns
jl
jb
jbe
sub
or
cs
lock
xchg
(bad)
xor
sub
add
push
adc
or
add
inc
aam
adc
push
push
outs
shl
add
sbb
add
(bad)
imul
jg
jns
add
adc
dec
dec
pusha
push
dec
inc
xor
inc
jmp
movs
mov
ins
pusha
adc
mov
mov
ror
jo
push
push
jo
add
sub
clc
jbe
inc
mov
ins
daa
das
add
mov
jmp
out
not
sbb
adc
xor
pop
test
xchg
pop
lock
inc
and
outs
or
out
iret
jnp
mov
mov
bound
aad
xor
js
mov
test
add
mov
pop
fs
fist
call
test
or
and
scas
lock
mov
xchg
bndldx
lods
lock
inc
cmps
pusha
je
or
mov
pop
xor
pop
or
pusha
sbb
ss
mov
ins
pop
jmp
push
shl
rol
push
aaa
mov
pop
gs
popa
cmp
inc
or
add
and
jge
(bad)
popa
xchg
xor
and
pushf
xchg
pop
xchg
push
scas
push
rcl
psraw
pushf
ins
int
and
dec
aaa
xchg
aas
add
in
ret
rcr
ins
cmp
add
push
enter
xchg
jl
int
xchg
fs
push
adc
pop
(bad)
shr
(bad)
mov
ss
push
adc
and
push
data16
mov
push
ror
xlat
int3
out
outs
push
aad
push
mov
dec
jg
ss
rol
adc
add
adc
pop
cmp
lahf
jge
aam
loope
xchg
xor
ret
xor
jmp
(bad)
popa
xor
pop
ja
pop
adc
das
scas
mov
cs
ja
mov
shl
movzx
retf
leave
pop
dec
shr
push
and
push
ins
push
and
xor
push
push
rol
push
adc
push
movs
sub
inc
push
sbb
mov
xchg
and
xchg
xchg
pop
push
xchg
push
adc
jp
push
lahf
das
mov
pop
dec
lds
add
sub
and
and
imul
inc
rol
(bad)
xchg
pop
add
xchg
and
test
and
xchg
pop
or
sub
add
push
jmp
add
jne
sub
jb
jno
add
mov
ds
pop
aas
mov
sub
lods
dec
inc
mov
gs
out
pusha
mov
push
int
(bad)
cmp
mov
mov
das
fcom
dec
js
xchg
push
hlt
xchg
pop
mov
xchg
pop
jo
jbe
mov
adc
shr
xchg
pop
mov
in
xor
paddusb
xor
das
in
repnz
fimul
pop
loopne
xor
in
jbe
cmp
adc
push
pop
dec
in
movzx
leave
in
xor
pop
clc
sub
cvttps2pi
add
out
and
in
jbe
pmulhuw
pop
adc
jo
and
xor
inc
push
mov
pusha
fild
in
aam
jns
leave
scas
xchg
push
push
sahf
out
sahf
ret
outs
ja
xchg
out
(bad)
xchg
lahf
cmps
push
iret
loop
out
out
jbe
push
push
push
vmwrite
pop
daa
das
aaa
fs
out
inc
dec
sub
lock
aaa
rcl
jo
adc
ss
test
and
lods
pop
in
xchg
bound
jl
cdq
sbb
out
daa
jae
sub
test
(bad)
int3
aas
gs
ret
inc
hlt
push
call
adc
lods
ror
or
sub
sub
add
xchg
outs
sbb
inc
xchg
mov
loope
sar
pxor
cdq
push
add
adc
mov
test
nop
cdq
loopne
dec
cdq
add
add
inc
retf
or
pusha
popa
test
das
int3
imul
pop
mov
xchg
add
inc
(bad)
jle
mov
(bad)
mov
dec
xor
xchg
repz
cmp
lahf
push
test
repz
aad
mov
ret
lea
pop
mov
mov
call
fadd
mov
sbb
xchg
mov
retf
aad
bound
call
pop
or
clc
sbb
inc
cs
dec
push
mov
or
fwait
cmps
pop
and
lock
cmc
mov
gs
call
in
call
jae
call
inc
outs
pop
in
dec
fs
in
jbe
sbb
dec
hlt
das
push
shl
out
sahf
ja
pop
cdq
jne
jmp
out
sahf
cmc
jmp
sahf
out
ret
retf
rcr
jecxz
cmc
add
outs
or
fs
add
sub
aaa
ds
sbb
jmp
push
pushf
jbe
outs
add
push
pop
sahf
(bad)
popf
push
and
je
and
cmp
or
mov
lahf
mov
and
mov
or
push
sub
mov
xchg
pslld
jne
pop
add
add
arpl
pop
scas
stos
ror
pop
scas
push
and
pop
push
add
scas
popa
or
cwde
popa
sbb
mov
cmp
pop
or
bound
leave
in
pushf
mov
mov
aaa
fwait
inc
ror
fcomp
add
in
aaa
mov
les
imul
and
in
xlat
mov
repz
repz
cdq
xlat
loope
sub
iret
mov
push
or
sahf
fistp
(bad)
jecxz
dec
or
fs
cmps
or
or
ds
shl
lahf
pop
movs
mov
repnz
fdiv
lahf
movsx
push
outs
adc
aas
fwait
add
ja
mov
enter
out
les
mov
mov
fmul
xor
xchg
push
popa
or
add
add
pop
pop
rcr
outs
inc
xadd
mov
int3
xadd
jmp
ror
clc
scas
cmp
cmp
loope
jmp
cmc
rcr
js
sbb
das
mov
out
fidiv
lahf
push
clts
pop
pop
daa
push
xchg
add
push
mov
inc
mov
xor
mov
jnp
(bad)
adc
fs
cmp
xchg
das
jmp
jno
dec
sbb
jno
dec
mov
into
sub
push
or
inc
inc
(bad)
jns
daa
nop
push
adc
jb
adc
shl
sub
mov
lods
popf
add
inc
adc
mov
cmp
cmp
jbe
ds
(bad)
dec
pop
mov
inc
das
in
in
jbe
xor
pop
pop
(bad)
sub
dec
outs
mov
jo
lock
clc
pop
mov
aas
jl
pop
mul
cmp
repz
jno
push
jmp
iret
repz
(bad)
jnp
mov
cmp
stos
mov
ret
loope
iret
repz
rcr
jecxz
adc
jo
movs
mov
mov
movs
mov
mov
add
mov
sahf
lock
fs
sbb
cmp
mov
jmp
xchg
push
and
sar
mov
sub
jb
cmp
in
movs
push
push
add
xor
adc
mov
or
pop
mov
adc
pop
fwait
add
or
movs
scas
jbe
mov
jl
cmp
in
sub
xor
and
jns
jge
push
pop
push
jo
out
imul
dec
mov
sbb
or
(bad)
cmps
mov
cmps
mov
jns
repnz
mov
call
cmps
or
fistp
ror
adc
or
adc
mov
test
dec
inc
or
xchg
inc
test
or
mov
or
push
adc
adc
push
pop
arpl
and
stos
scas
cmp
pinsrw
pinsrw
sahf
ja
aam
mov
push
popf
jns
sahf
out
add
jno
out
mov
cmps
or
mov
cld
test
inc
mov
leave
div
test
daa
rol
mov
cmps
dec
add
addr16
enter
out
or
enter
stos
lods
adc
fcom
pop
mov
push
leave
test
xor
stos
imul
sbb
outs
pop
pop
loopne
stos
jne
test
add
outs
addps
xor
mov
mov
ds
imul
push
in
and
sub
sahf
aaa
or
sbb
inc
stos
adc
(bad)
mov
stos
scas
push
cld
sahf
mov
lods
es
scas
clc
lods
fs
daa
lods
in
cmp
xor
jno
call
push
lods
out
mov
popf
jl
mov
xchg
sub
inc
test
lods
pop
inc
jmp
inc
mov
popa
or
or
fild
cwde
jo
lods
pop
pop
or
jbe
mov
or
in
in
movs
lods
ins
test
xlat
cmp
out
dec
sub
(bad)
cdq
sahf
out
sahf
mov
ja
sbb
jns
xchg
mov
push
push
xchg
lods
imul
adc
les
mov
push
lods
das
jne
stc
popf
scas
fs
mov
js
nop
pop
cmp
rol
fistp
not
scas
out
(bad)
scas
mul
inc
or
sahf
xchg
imul
imul
imul
mov
call
scas
add
pop
adc
or
mov
adc
or
mov
repz
push
shr
sbb
jecxz
add
push
jmp
adc
(bad)
mov
cdq
sub
adc
fsub
inc
mov
shl
fs
clc
push
mov
push
arpl
repnz
mov
mov
cmp
ins
mov
test
adc
mov
cmp
stos
int3
mov
push
les
sbb
shr
ret
and
add
fdiv
out
cmp
cmp
xor
adc
cmp
in
jbe
xor
push
mov
in
dec
(bad)
das
pop
pcmpeqb
cmp
adc
push
sbb
cdq
mov
or
jg
out
sahf
out
aaa
aas
inc
dec
popf
out
sahf
push
pop
outs
ja
mov
adc
mov
inc
ror
ret
push
imul
pop
cwde
mov
xchg
push
mov
mov
fbstp
sub
mov
pop
clc
pusha
dec
pop
cbw
popa
pop
or
mov
xor
shl
mov
sbb
inc
loope
enter
(bad)
inc
aas
lea
xor
xchg
mov
pusha
sub
test
popa
or
ret
loop
xor
(bad)
je
mov
ret
inc
jg
jno
fcom
xchg
add
inc
outs
pop
fmul
pop
les
fcmovne
in
in
cs
mov
ins
mov
das
pop
movzx
sti
fcomp
mov
into
out
jge
out
icebp
int
pop
mov
sahf
out
scas
push
outs
adc
and
jns
out
xor
inc
dec
add
neg
push
or
loopne
mov
add
and
add
inc
iret
sahf
push
sub
mov
pop
test
std
mov
enter
mov
iret
add
pop
push
mov
iret
mov
or
sbb
es
imul
rcr
mov
cwde
mov
cmp
mov
dec
pop
add
add
jb
adc
outs
movlps
mov
sub
loop
popa
or
or
mov
mov
or
or
shr
in
jp
shrd
mov
pop
mov
bsf
push
enter
loopne
mov
pop
les
cs
daa
mov
pop
mov
pop
nop
and
mov
lahf
mov
xchg
mov
push
loope
and
iret
mov
push
mov
arpl
jnp
iret
repz
mov
cmp
repz
cmp
and
jnp
repz
jmp
repz
sti
add
iret
jnp
or
adc
dec
and
xlat
iret
aam
es
loopne
dec
icebp
pushf
lods
add
aaa
pusha
les
push
add
div
pop
cmp
daa
sahf
stos
outs
iret
push
push
adc
(bad)
and
pop
cmp
and
jnp
fidiv
jl
arpl
mov
cmps
inc
add
push
cmp
clc
pop
add
ja
or
pop
outs
fmul
sub
cmp
mov
xchg
ins
push
mov
add
pop
ret
sub
cs
sahf
fist
jp
and
mov
xor
push
sbb
inc
xor
test
jbe
scas
mov
or
xchg
push
sar
ret
xor
add
popa
xor
dec
add
gs
xchg
ds
lods
in
popa
mov
arpl
shl
pop
shr
xor
mov
pusha
lahf
and
daa
daa
mov
punpcklbw
pop
mov
daa
daa
daa
mov
es
dec
(bad)
das
jns
rcl
xchg
push
mov
out
or
cmp
repz
retf
rcr
clc
cmp
repz
repz
add
pop
sub
ja
pop
push
nop
cmps
inc
mov
pop
mov
sbb
pop
xor
fs
xor
jne
scas
xchg
scas
sbb
adc
enter
mov
rcr
and
add
adc
xor
cmps
or
and
imul
and
enter
leave
inc
mov
(bad)
movs
jns
pop
xor
inc
add
add
lods
sub
sub
sti
mov
add
sbb
jae
pop
dec
sbb
pop
and
paddsb
jo
in
xchg
adc
bnd
and
pop
movs
jb
jb
push
mov
in
jbe
jb
cld
aam
xor
mov
leave
in
sub
aas
mov
and
fstp
mov
pop
pop
sub
pop
je
mov
fucomi
jbe
pop
fs
mov
xchg
xchg
mov
push
xchg
xlat
leave
out
rol
fnstsw
ds
mov
push
jmp
icebp
mov
push
idiv
inc
es
repz
daa
das
aaa
repz
repz
inc
dec
push
pop
iret
repz
outs
ja
xchg
xchg
lahf
cmps
scas
mov
cmp
repz
imul
or
jg
cld
xor
ret
test
pop
push
int3
push
daa
ret
pusha
aam
lds
or
(bad)
retf
inc
repz
jg
inc
mov
sbb
push
or
jp
xchg
add
jno
inc
clc
(bad)
push
retf
mov
ret
xchg
xchg
jne
das
ret
popf
inc
ror
add
loopne
push
mov
xor
test
inc
int3
shl
rol
xchg
sbb
cmp
push
lods
inc
add
sub
out
call
inc
gs
pusha
test
xchg
mov
mov
repz
test
add
pop
mov
(bad)
lock
adc
ror
mov
in
mov
lods
lds
repnz
pop
mov
push
sbb
aam
int
add
outs
xchg
dec
dec
arpl
into
jge
jne
lds
test
lds
pop
pop
sbb
popa
or
add
push
mov
mov
mov
push
sbb
unpcklps
dec
aam
aam
leave
in
pop
mov
pop
js
and
fsub
daa
sbb
sub
es
daa
daa
mov
pop
push
mov
outs
daa
daa
daa
mov
jnp
fmul
movaps
aas
mov
mov
(bad)
pop
pop
sub
pop
je
mov
fisttp
pop
pop
fs
mov
jb
mov
sbb
aam
aam
popf
mov
dec
sti
push
add
mov
push
jmp
push
inc
jns
out
aas
cs
push
dec
push
pop
addr16
sahf
out
ja
xchg
xchg
lahf
cmps
scas
mov
jns
out
(bad)
iret
xlat
(bad)
fidivr
out
idiv
pop
into
clts
pop
jns
out
jns
daa
pop
mov
sbb
jns
push
das
aaa
out
and
das
pop
aad
sub
ss
fs
ror
ficomp
pop
hlt
leave
je
cmps
and
daa
or
adc
aam
addr16
xor
sbb
dec
mov
mov
add
cmovbe
sub
leave
out
outs
sub
xor
and
dec
xor
lock
in
repnz
sbb
leave
lods
scas
and
mov
add
mov
sub
imul
mov
mov
inc
hlt
leave
add
shr
ret
fs
dec
xor
mov
xchg
js
mov
xchg
js
cwde
mov
daa
sbb
leave
leave
in
enter
movs
pop
push
mov
leave
leave
leave
add
mov
fcmovnbe
lahf
xor
sub
aas
mov
scas
and
pop
jnp
jbe
sub
pop
je
pop
es
pop
xchg
fucomi
jbe
jg
mov
adc
iret
repz
xchg
retf
dec
sub
sahf
cmps
and
addr16
push
push
jnp
out
sahf
neg
jg
xchg
jns
cmps
scas
mov
(bad)
iret
jns
out
xlat
(bad)
out
neg
pop
xchg
clts
pop
pop
daa
jns
out
das
aaa
aas
inc
dec
addr16
out
pop
bswap
pop
push
add
jo
outs
pop
mov
das
or
(bad)
sub
(bad)
mov
sbb
int3
daa
enter
jp
fs
adc
pop
xor
jo
adc
ins
loope
add
out
or
dec
aad
add
sbb
mov
test
cwde
xor
int
xor
or
(bad)
int
ins
push
xor
or
sbb
sbb
or
push
int3
int3
test
jbe
nop
je
mov
cmp
mov
pushf
pushf
pushf
dec
int3
xchg
punpckldq
addr16
outs
push
and
iret
repz
mov
xchg
lahf
sub
cmp
repz
inc
dec
push
pop
repz
repz
jnp
and
add
sbb
cs
cmp
mov
cwde
iret
and
xchg
cwde
shl
iret
aam
dec
push
mov
mov
inc
sub
inc
dec
mov
out
dec
hlt
out
iret
mov
rcr
shl
sbb
in
xchg
cmp
adc
stc
shl
stos
push
stc
shl
cmp
pusha
pusha
popa
or
add
mov
mov
iret
out
rcl
add
pop
shr
lock
dec
push
mov
shl
or
pusha
sub
and
xchg
jns
das
popa
fs
(bad)
test
popa
sub
(bad)
jle
push
pushf
sub
sbb
outs
jmp
add
test
add
mov
pop
ins
mov
loope
or
bound
neg
sbb
ret
sets
dec
rcr
pushf
pushf
mov
jl
and
xor
inc
dec
mov
lods
xor
inc
into
dec
ror
sbb
sbb
enter
enter
loopne
ins
jb
enter
mov
cmp
in
ins
in
sbb
sbb
aas
or
fucomi
fild
and
add
bound
or
pop
push
test
jbe
pop
jo
mov
vpmacssdd
mov
fadd
mov
push
lods
mov
xor
aam
push
mov
mov
repz
xlat
(bad)
out
out
cmp
scas
mov
mov
repz
xlat
(bad)
out
out
maskmovq
mov
push
clts
pop
sahf
out
sahf
pop
daa
das
aaa
aas
inc
jns
out
dec
push
pop
outs
out
sahf
out
jg
(bad)
xchg
inc
scas
or
sbb
or
das
dec
pushf
pop
movs
push
pop
es
aam
adc
fsubrp
imul
push
dec
(bad)
daa
jge
cmp
xchg
es
sbb
add
mov
ficom
aas
rol
retf
ret
mov
add
add
(bad)
mov
shl
mov
test
scas
and
(bad)
mov
add
loope
inc
dec
test
pop
jmp
pop
push
or
sbb
dec
xor
add
mov
add
psubd
and
xor
xlat
rcl
aad
dec
xlat
or
mov
ss
xor
in
xlat
pushf
sub
xlat
and
bound
iret
jl
mov
pop
or
pop
ret
jo
jle
cmp
and
push
cmp
dec
pop
xchg
xchg
pop
adc
adc
je
add
scas
or
cmp
sbb
das
dec
fcom
xor
jne
pusha
daa
je
pop
jne
and
mov
iret
add
xlat
mov
adc
push
fsubr
aam
or
inc
pop
jo
rol
sbb
test
rcr
cmp
lds
push
test
adc
cld
shl
and
cld
cmovs
in
dec
mov
add
clc
fstp
ja
dec
shl
aad
mov
daa
(bad)
out
or
out
out
idiv
out
cs
pop
or
pop
pop
dec
dec
fldenv
cmp
(bad)
mov
dec
mov
fiadd
test
mov
test
popf
fisub
mov
or
(bad)
dec
scas
sub
xchg
or
mov
inc
enter
lahf
sub
sbb
add
fcomp
js
ficom
push
jae
jne
and
mov
pop
xchg
(bad)
es
outs
mov
jl
iret
fiadd
cmp
test
pop
fwait
sbb
or
ret
out
repnz
dec
jo
lods
fisttp
and
push
lods
fisttp
xor
gs
daa
sbb
fsub
pop
push
(bad)
mov
popa
add
fwait
adc
sub
stos
sub
pop
jb
test
mov
push
shr
pop
repz
xor
fs
lock
jbe
pushf
rcr
das
test
cmp
or
dec
(bad)
jnp
add
pusha
enter
push
add
fnstcw
xor
lds
pop
mov
pop
mov
mov
and
xchg
mov
jnp
push
out
fmul
enter
in
fsub
mov
adc
pop
add
aam
inc
cmp
cmovo
in
push
xor
dec
cmovo
pushf
pushf
fsubr
pinsrw
cmp
dec
aaa
cmp
iret
repz
push
sub
repz
scas
imul
mov
pop
arpl
inc
lea
mov
mov
das
or
aad
bound
and
daa
mov
(bad)
fimul
fisttp
gs
cmc
sub
in
fcomp
mov
fistp
ds
sub
add
pop
push
push
add
daa
or
movs
mov
and
push
test
dec
jno
mov
(bad)
scas
pop
lods
inc
sbb
(bad)
adc
jl
jo
in
stos
rsqrtps
mov
jb
jb
push
ins
mov
iret
push
inc
pop
or
int3
outs
mov
das
xchg
pop
cwde
rcpps
pusha
mov
xor
in
setge
mov
inc
dec
push
stc
dec
add
and
jmp
loope
repz
mov
xlat
iret
repz
(bad)
out
idiv
pop
repz
jnp
clts
pop
pop
daa
das
iret
repz
aaa
aas
inc
dec
push
pop
cmp
repz
outs
ja
xchg
cmp
lahf
cmps
pop
loopne
iret
cmp
loopne
push
scas
mov
repz
repz
daa
das
aaa
aas
iret
repz
inc
dec
push
pop
outs
cmps
into
repz
jg
lea
sbb
loope
or
test
test
loope
mov
inc
ja
pop
jecxz
or
dec
ds
pop
jo
rcl
push
xchg
jecxz
jecxz
mov
ja
call
retf
pop
ret
cmp
inc
inc
or
adc
or
fprem
adc
bound
in
bound
in
or
stos
cmc
lock
mov
add
add
lock
jecxz
adc
outs
push
fsubr
add
(bad)
jg
fmul
leave
in
enter
push
jl
test
nop
pop
outs
pushf
pop
call
das
push
cmp
loopne
xchg
xchg
xchg
push
in
pusha
les
adc
and
add
or
aas
scas
out
pop
push
mov
jns
jge
test
push
fwait
cmp
repz
xchg
in
in
in
iret
repz
mov
out
iret
repz
idiv
pop
jbe
push
iret
repz
pop
pop
daa
das
aaa
aas
cmp
repz
dec
push
pop
addr16
je
rep
ja
pmulhw
xchg
sar
in
repz
repz
in
in
repz
in
in
in
cmp
repz
in
in
sub
or
(bad)
test
adc
lds
inc
clc
or
pusha
cmp
jge
or
push
out
push
test
es
dec
xchg
push
jnp
adc
sub
(bad)
or
push
inc
gs
add
fs
(bad)
push
add
add
add
mov
and
(bad)
push
jmp
mov
jno
mov
loopne
(bad)
adc
lods
fnstcw
fnstenv
loop
gs
or
fprem
fs
adc
sub
push
push
daa
aas
std
shl
jmp
sbb
inc
(bad)
cmp
jg
mov
pop
cmovl
mov
mov
dec
pop
cmovl
das
mov
inc
subps
iret
repz
push
loope
lds
repz
mov
add
push
out
cmp
ds
sti
push
(bad)
pop
jmp
pop
aaa
test
mov
mov
push
jmp
mov
push
cs
popa
jmp
xchg
aaa
je
jp
mov
cmp
mov
adc
dec
inc
(bad)
adc
mov
mov
in
mov
cmp
jb
pop
pusha
in
xchg
or
pusha
in
sbb
inc
fsub
pusha
stos
leave
popa
or
add
pop
push
push
and
loop
nop
mov
jmp
mov
jmp
psubusb
sbb
psubusb
movs
es
push
mov
sahf
popf
rcr
out
retf
and
pop
test
in
push
aam
adc
mov
mov
out
fs
(bad)
adc
dec
hlt
in
aas
nop
or
sub
sbb
out
lods
add
popf
jge
gs
adc
fucomp
mov
out
stos
inc
mov
loop
xchg
out
sub
inc
jmp
mov
mov
add
jno
in
jnp
movs
or
in
push
add
outs
inc
mov
in
enter
mov
inc
sub
push
rcl
pop
fbstp
loopne
mov
add
sahf
neg
jmp
push
imul
jns
out
aas
movhps
lock
daa
das
add
js
adc
sbb
daa
out
push
js
out
outs
inc
sub
sub
pop
mov
push
cmp
lock
mov
xchg
pop
push
jae
push
add
daa
xor
mov
lock
xor
idiv
pop
daa
hlt
je
pop
push
pop
test
idiv
add
call
pop
mov
in
and
sub
mov
push
icebp
or
btc
repnz
push
ret
out
mov
sub
fs
test
xor
push
pop
repnz
aam
and
fs
add
push
imul
add
xor
popa
aad
leave
pop
or
hlt
and
push
jne
outs
cwde
lock
loopne
repz
mov
xor
push
(bad)
push
daa
add
push
into
sbb
and
outs
in
push
lock
sbb
pop
xchg
xchg
and
repnz
sbb
pop
ins
rcr
and
lahf
pop
pushf
add
sbb
sbb
cmp
icebp
lock
adc
loope
xchg
xor
mov
jno
das
ja
cmp
pop
lahf
shl
fmul
ja
movs
das
enter
adc
fwait
popa
fmul
rcr
pusha
mov
mov
das
or
arpl
sbb
jbe
jb
loopne
outs
add
xchg
fcmovnu
leave
in
sub
fs
shl
in
add
punpckldq
add
cmp
repz
mov
push
mov
fidivr
loop
cmc
adc
push
mov
jns
out
mov
out
jns
out
jmp
sti
add
jns
out
push
adc
and
xor
and
fwait
hlt
jg
or
stos
mov
jno
js
push
ins
adc
imul
push
inc
push
cmc
mov
push
loopne
mov
daa
xchg
push
dec
mov
xor
xor
sub
retf
outs
pusha
leave
mov
ret
mov
sub
daa
push
and
inc
jmp
out
sbb
test
mov
inc
pop
add
adc
sub
gs
xchg
xchg
pop
dec
popa
lock
(bad)
mov
(bad)
xor
mov
hlt
imul
js
pop
push
and
jne
gs
daa
jg
in
int
or
adc
inc
or
jno
sbb
mov
jno
rcl
mov
sub
clc
or
push
push
lock
cmp
ja
mov
js
out
cld
clc
jns
sbb
fdivr
push
cli
push
jmp
add
mov
js
mov
push
lods
push
xchg
pop
pop
push
inc
test
call
cli
adc
add
pop
or
mov
dec
push
push
add
rol
sub
mov
pop
xchg
ret
pop
mov
inc
pop
mov
or
mov
mov
mov
mov
lods
popf
fisttp
dec
cmp
dec
cmovnp
test
dec
in
pop
mov
mov
in
in
fdivr
es
xchg
lods
inc
jl
sub
mov
dec
add
enter
pushf
pushf
in
push
jg
or
popa
mov
adc
adc
lods
lods
repz
mov
mov
into
push
retf
sahf
out
sahf
pop
pop
daa
das
aaa
aas
jns
out
inc
dec
push
pop
addr16
sahf
out
ja
xchg
xchg
lahf
cmps
scas
mov
mov
push
(bad)
iret
xlat
(bad)
loope
js
out
idiv
das
push
psubq
fsubr
push
dec
or
mov
push
or
into
cld
std
mul
out
push
inc
inc
adc
int
ss
ds
daa
fs
pop
aaa
and
xchg
adc
or
xor
pop
add
ss
push
cli
aaa
inc
jp
jo
mov
ret
sub
or
iret
cmp
dec
add
clc
int
aad
add
in
adc
add
(bad)
xchg
lahf
pandn
jmp
adc
push
adc
push
adc
inc
inc
cmp
cmp
mov
add
cmp
cmp
push
dec
ja
adc
and
mov
mov
push
lock
sar
mov
mov
pop
repnz
popf
add
test
jmp
push
xchg
and
mov
mov
mov
lock
xchg
xchg
(bad)
mov
pop
add
xor
cmp
cwde
je
cmp
ror
sar
rol
sbb
add
cmp
repz
jge
xchg
inc
repz
repz
push
pop
and
xor
cmp
xor
das
pop
and
push
add
mov
gs
inc
jno
xor
fadd
xlat
mov
loope
fild
gs
mov
mov
push
push
pop
add
fwait
(bad)
jne
jnp
in
mov
add
dec
test
dec
out
mov
pushf
mov
xor
mov
pop
and
imul
sub
cmp
add
xor
fild
xchg
hlt
xchg
xor
sub
cs
cmp
aas
sub
sbb
lods
icebp
ret
push
pop
fiadd
mov
pop
cmp
mov
or
and
sub
xchg
add
push
mov
push
inc
dec
xchg
rol
fmul
or
(bad)
add
sub
push
add
gs
pcmpgtd
mov
addr16
pop
add
dec
push
pusha
mov
sub
and
push
and
push
sub
cmps
pop
cmc
addr16
cs
xchg
popa
push
add
dec
sbb
xchg
mov
lds
pop
pop
in
adc
outs
das
cli
push
pop
pusha
jnp
outs
mov
cs
pop
jb
xchg
movs
fist
sbb
xor
ret
scas
and
inc
pop
add
dec
or
daa
ins
nop
add
jb
ror
inc
sub
test
(bad)
pop
xchg
add
fadd
(bad)
mov
or
cmp
fld
sub
pop
lds
add
aaa
cmps
jle
push
adc
xchg
add
cmp
aas
nop
xor
ss
add
add
cwde
(bad)
or
push
dec
es
shl
or
imul
xchg
out
add
xchg
sbb
fst
mov
inc
rol
adc
push
or
add
or
loopne
sub
aam
inc
mov
arpl
or
ret
push
jl
sbb
mov
dec
dec
xor
add
or
movs
das
mov
pushf
cmp
add
adc
mov
rol
enter
pop
popf
xchg
inc
push
loopne
or
pop
or
adc
xor
or
js
pop
fsubr
add
or
add
or
and
inc
adc
xchg
loope
add
nop
xchg
inc
add
or
add
lock
add
popf
iret
pop
sub
stos
or
mov
and
push
sub
lahf
icebp
mul
pop
das
jae
aad
or
or
jno
les
mov
or
xlat
js
push
push
hlt
push
add
dec
inc
ror
cvtps2pd
pop
xor
push
ss
jp
dec
sbb
pop
push
add
pop
aam
leave
and
add
cmpxchg
xchg
mov
adc
adc
inc
adc
jns
cmps
push
es
das
pop
push
or
or
loop
inc
out
out
cwde
out
adc
xor
mov
je
ficom
or
aad
mov
dec
sub
adc
xchg
push
mov
mov
test
pop
cwde
test
sbb
xchg
popa
fild
(bad)
push
sub
xchg
je
inc
cmp
add
cmp
test
adc
or
shl
adc
push
adc
mov
mov
adc
pusha
sbb
lds
fs
fcom
cdq
fmul
mov
test
mov
js
popa
cmp
mov
adc
lock
(bad)
sub
sub
les
adc
mov
ret
inc
cmp
xchg
push
inc
cmp
cmp
and
and
inc
mov
xchg
pusha
xchg
add
adc
loopne
inc
sub
imul
adc
or
mov
mov
mov
(bad)
push
adc
cmp
loopne
mov
and
iret
push
test
adc
and
add
adc
inc
push
mov
shl
adc
mov
popa
jno
adc
pop
test
cmp
cmp
xchg
or
clc
push
out
and
and
dec
jnp
pop
push
pop
add
mov
pop
adc
adc
push
adc
pop
inc
or
fnsave
adc
test
sbb
and
js
test
ret
pop
mov
nop
push
dec
adc
mov
or
and
and
push
sub
aad
iret
cdq
inc
js
(bad)
push
adc
mov
or
mov
loop
sbb
push
and
push
das
imul
and
inc
ins
cmp
cmc
mov
imul
xlat
in
sbb
inc
mov
pop
fsub
and
jo
sbb
xor
dec
sbb
xchg
adc
sub
arpl
fadd
add
outs
sub
adc
adc
out
and
xor
fwait
jge
call
das
lahf
push
xor
adc
mov
out
cwde
or
push
test
pop
mov
or
mov
or
out
xor
imul
or
cmp
push
sbb
out
dec
push
xor
xchg
(bad)
dec
xchg
ror
push
fld
cmps
repnz
or
jns
jb
inc
(bad)
(bad)
push
and
rcr
xchg
jl
test
adc
call
add
add
add
lahf
inc
pop
sbb
jno
xchg
xchg
inc
cmp
jp
neg
jecxz
add
push
lahf
xchg
add
lahf
cmp
sbb
mov
fwait
cmp
shl
add
lea
js
and
jecxz
pushf
test
lahf
and
dec
mov
lahf
rol
repz
repnz
and
or
inc
sub
dec
adc
leave
ret
or
lahf
test
cmp
or
mov
push
aad
lahf
jae
inc
or
test
scas
imul
adc
ja
and
cmp
xchg
and
sbb
xchg
or
shl
mov
pop
push
sbb
pop
and
test
movs
pop
pop
mov
push
or
out
add
and
dec
add
inc
and
xor
cdq
addr16
or
cmp
addr16
push
mov
dec
mov
adc
or
movs
outs
and
and
pop
(bad)
mov
push
das
and
sbb
mov
mov
adc
add
pop
fild
push
adc
xor
cmp
xor
iret
(bad)
aas
push
test
or
test
js
shr
test
sar
mov
dec
push
jns
mov
fwait
test
mov
mov
and
pop
or
mov
sbb
inc
adc
xchg
bound
dec
or
add
xor
ja
hlt
jge
xchg
stos
pop
adc
inc
sti
pusha
add
mov
xchg
mov
add
sbb
xor
cmp
add
and
rol
and
or
add
mov
mov
xchg
or
xor
pop
adc
mov
sar
adc
and
inc
sbb
cmp
mov
mov
push
and
and
ins
mov
jne
pop
and
clc
mov
pop
out
pop
xchg
add
and
pop
and
sbb
add
jnp
dec
mov
adc
add
je
add
mov
mov
mov
or
scas
shl
sbb
and
in
sar
in
es
test
and
sub
add
push
or
lea
add
mov
push
and
and
fcmove
mov
arpl
dec
adc
push
pusha
mov
pop
add
popa
pop
jle
xor
ret
ret
nop
daa
add
pop
out
les
repnz
test
or
add
inc
dec
add
and
pop
xchg
push
push
clc
jl
dec
test
sub
inc
fmul
add
lods
pushf
sub
sub
pop
or
adc
push
xor
adc
sbb
inc
sub
scas
cs
adc
adc
stc
dec
leave
test
sub
enter
sub
add
rcr
loope
add
loope
xchg
xchg
lock
inc
mov
add
je
loop
sub
pop
mov
add
add
or
adc
mov
clc
rcr
cmps
pusha
pushf
and
lahf
add
push
loopne
fbstp
retf
mov
call
mov
jg
adc
and
int3
ret
jmp
xchg
bound
dec
jmp
jg
cmp
pop
add
leave
rol
inc
sub
cli
fnsave
mov
sbb
sub
mov
pop
pop
lods
add
jnp
mov
in
jnp
mov
jl
repnz
aas
add
adc
mov
adc
xchg
js
inc
(bad)
and
jmp
arpl
test
xor
pop
inc
dec
cmps
loope
in
(bad)
jne
inc
cmp
and
xor
ja
inc
mov
cmp
sub
pop
cmp
cmp
mov
les
pusha
mov
pop
int3
fdiv
cmp
mov
mov
stos
js
add
pop
ss
test
cs
or
test
or
test
test
mov
enter
fist
inc
aaa
lahf
push
lea
cs
iret
xor
xchg
adc
shr
inc
leave
jg
pusha
test
dec
ds
add
push
inc
inc
aaa
ja
(bad)
mov
xlat
lods
add
sbb
or
mov
dec
dec
dec
jo
ret
rcr
xor
(bad)
cli
movs
retf
cmc
jl
inc
pop
mov
nop
mov
pop
das
(bad)
mov
push
mov
shl
mov
jmp
(bad)
sbb
pop
dec
inc
and
inc
xor
aas
test
das
gs
enter
pop
in
adc
sbb
cdq
fdiv
or
and
sbb
or
retf
retf
test
je
and
sbb
sbb
dec
xlat
lock
aam
(bad)
xchg
push
call
pop
pop
mov
repnz
mov
and
sub
pop
mov
scas
in
or
mov
xchg
aad
mov
and
fadd
jmp
add
sub
in
push
cdq
inc
sub
inc
add
lahf
inc
nop
pop
sub
add
cmp
mov
xor
and
loop
fwait
rcr
ss
dec
and
mov
aaa
in
shr
xor
adc
inc
mov
and
add
gs
in
pop
out
or
outs
add
cmp
pop
mov
ins
test
xchg
ret
nop
pop
es
pop
adc
push
pop
push
dec
add
and
fwait
sbb
test
xor
daa
pop
aas
(bad)
xor
add
je
daa
test
pop
mov
jnp
and
cld
xchg
sahf
sub
or
or
rol
adc
push
(bad)
lea
rcr
gs
and
pop
xlat
mov
shr
jp
add
test
ds
mov
mov
dec
and
mov
outs
xor
test
mov
jne
push
leave
add
iret
fnstenv
mov
test
mov
pop
or
pop
pop
int
xor
and
push
stos
out
jns
sbb
jns
and
jl
cmp
jae
sub
xchg
inc
and
retf
dec
leave
(bad)
and
adc
rcl
adc
fs
inc
es
adc
mov
ret
cmp
push
pop
sub
pusha
ret
adc
add
pop
pop
pop
les
push
push
retf
mov
jo
pop
push
push
pop
psubb
movs
movs
fcmovb
push
adc
or
sub
adc
nop
sub
and
and
test
add
or
cs
adc
inc
jb
cmp
fadd
das
js
adc
lods
aaa
push
dec
lds
adc
aaa
enter
nop
lahf
cld
and
xchg
dec
adc
cmp
pop
repnz
cmp
and
xor
pushf
and
adc
add
dec
inc
jmp
mov
xor
pop
jnp
push
xor
das
cmp
or
cmp
xor
(bad)
loopne
dec
outs
ret
fsubr
cmp
leave
add
and
and
push
xchg
xchg
retf
adc
les
call
in
xchg
jo
in
sbb
push
cmp
cmp
cmps
adc
or
(bad)
xlat
push
dec
push
or
or
mov
adc
sbb
xchg
(bad)
or
inc
or
cmp
sbb
push
push
daa
lea
mov
les
mov
mov
inc
aad
cmp
sbb
mov
pop
pop
into
push
or
icebp
(bad)
push
mov
inc
cmp
(bad)
add
push
inc
repz
xchg
adc
ret
push
mov
sub
cmp
add
lea
xor
and
jnp
loop
mov
ja
xchg
or
cmps
enter
dec
loope
push
mov
cmp
jl
or
cmp
dec
add
jle
mov
fnstsw
add
xor
add
cld
xor
xor
outs
jl
inc
xor
adc
push
scas
and
ins
test
movs
push
cmp
les
(bad)
sbb
lods
adc
stc
mov
jno
or
dec
iret
ret
jl
nop/reserved
cmc
cmp
cmp
aaa
in
and
cld
cmp
inc
into
add
jnp
push
ss
xor
pop
pop
fwait
rcr
mov
fimul
fcomp
fadd
mov
push
inc
push
push
outs
sub
push
cmp
inc
mov
xor
out
scas
cli
sbb
cdq
std
pop
ret
aaa
xchg
mov
dec
mov
add
add
sbb
xor
js
mov
divps
inc
lahf
or
add
push
mov
nop
push
push
add
adc
cmp
push
test
out
movzx
inc
or
jp
or
pop
add
xlat
cli
test
fadd
pop
dec
outs
sbb
mov
mov
aaa
mov
inc
mov
outs
pop
inc
and
daa
lods
aas
ja
pop
and
mov
addr16
push
jmp
aaa
int3
add
pop
dec
pop
dec
sbb
dec
adc
and
sbb
mov
or
jns
xor
push
test
push
jg
and
pop
sbb
mov
not
lods
inc
test
dec
and
and
add
inc
scas
lds
add
or
scas
sub
jle
das
push
inc
aaa
or
and
shl
inc
aaa
movs
jg
stos
inc
mov
mov
pop
adc
xchg
aaa
cmp
and
add
inc
sbb
push
add
or
dec
nop
cmp
xor
leave
and
cmp
and
and
retf
sub
or
inc
xlat
scas
xor
sbb
int3
std
test
add
mov
gs
jnp
add
sbb
gs
test
test
ds
cmp
aas
call
inc
add
les
sub
add
les
arpl
push
inc
cmp
loop
xchg
jg
bound
xchg
fdivr
js
movs
movs
ja
dec
hlt
addr16
push
adc
add
daa
or
mov
adc
gs
pop
bound
jnp
popf
scas
sbb
sbb
mov
rep
xlat
and
mov
jb
mov
and
xchg
outs
sbb
sti
add
nop
mov
rol
pop
aam
iret
les
inc
clc
pop
fstp
sbb
clc
dec
cmp
and
das
ror
pop
or
jmp
test
or
ins
dec
cmp
xor
inc
inc
add
dec
daa
scas
(bad)
fild
adc
inc
xchg
js
inc
sbb
or
push
inc
or
lock
sub
dec
or
test
mov
add
push
mov
in
mov
pop
cs
sbb
adc
and
push
fiadd
push
mov
mov
cmp
mov
push
or
paddw
dec
push
add
add
mov
mov
mov
xor
mov
sbb
mov
outs
pop
adc
add
out
(bad)
lds
pop
inc
sbb
mov
les
jmp
lods
inc
jl
mov
adc
inc
adc
or
fld
jno
push
aaa
add
sbb
or
pushf
imul
mov
das
in
inc
sahf
mov
jno
mov
sbb
ins
jb
pop
ret
xor
mov
fcom
ins
adc
loopne
inc
aaa
xlat
adc
enter
test
or
adc
adc
popa
add
push
out
push
fcomp
ret
test
mov
fcomp
push
fwait
call
inc
mov
aam
into
or
ret
xor
bound
sub
arpl
or
mov
call
rcl
fidivr
pop
xor
loope
cwde
xor
push
adc
sbb
lods
fstp
fwait
xor
les
(bad)
cmps
int3
push
es
mov
mov
ins
pop
aaa
adc
into
mov
aaa
test
push
dec
inc
aas
inc
fldcw
das
jg
cmp
cmp
aas
sbb
cld
sbb
mov
fwait
jbe
fs
mov
not
(bad)
sbb
test
mov
sub
adc
adc
loop
dec
sbb
push
jo
and
leave
fwait
push
mov
mov
jle
(bad)
adc
xor
cmp
mov
pop
xor
push
add
xor
daa
enter
daa
pop
push
pop
mov
pushf
cwde
mov
dec
iret
nop
xchg
dec
xchg
sbb
dec
(bad)
add
and
ss
xor
aas
pop
inc
dec
or
mov
xor
jb
je
dec
je
push
or
or
or
add
ret
mov
movs
adc
inc
pop
jle
dec
daa
out
pop
dec
add
or
shl
and
add
add
sbb
sti
add
and
push
(bad)
inc
(bad)
xchg
pop
leave
adc
pop
xor
ret
push
scas
test
popa
test
aam
je
test
daa
add
test
xchg
add
and
or
stos
jne
das
and
fild
dec
bound
adc
scas
je
sbb
mov
sub
icebp
out
cmp
adc
push
and
sub
rcl
and
xchg
dec
sti
sbb
adc
scas
scas
jg
jbe
push
sbb
pop
cmp
daa
daa
mov
cmps
add
sgdtd
add
push
adc
dec
cmp
loopne
and
add
push
mov
pop
mov
test
jmp
xchg
pop
mov
jmp
in
imul
mov
jg
je
stos
idiv
or
or
inc
cmp
cmp
inc
push
mov
sbb
out
push
ret
fadd
and
ror
pop
mov
aad
inc
sbb
mov
add
lea
out
sub
adc
adc
dec
adc
aam
jns
push
push
popf
nop
pop
adc
pop
push
add
cwde
add
xchg
sbb
(bad)
cmc
cs
mov
push
push
pusha
or
pop
retf
aas
jge
in
cmp
mov
sbb
cmps
or
mov
sahf
nop
lods
xchg
sub
cmps
leave
rcl
inc
sbb
stc
pusha
and
pop
pop
ret
mov
rol
movs
sbb
adc
imul
test
stc
in
jno
mov
inc
lock
pop
mov
(bad)
aas
dec
inc
add
adc
scas
das
add
retf
cmp
nop
xchg
push
xor
mov
xor
push
test
sbb
add
enter
jmp
mov
repnz
in
push
and
hlt
pop
mov
pop
cdq
and
pop
sbb
cmps
adc
sbb
stc
fadd
push
iret
inc
mov
inc
outs
jge
add
js
loop
bound
fdivr
sub
(bad)
std
aam
inc
and
inc
loopne
(bad)
out
push
hlt
hlt
sti
aad
ins
pusha
hlt
mov
xor
sbb
sub
push
jmp
in
inc
sbb
xchg
aaa
pop
or
mov
pusha
mov
jo
iret
push
call
adc
mov
mov
adc
out
inc
xor
pop
int3
test
push
pop
dec
sub
or
sti
pop
les
aad
rcr
pop
ins
adc
js
and
pop
pop
dec
cld
fchs
sbb
popa
jno
add
cmp
adc
and
xchg
pop
sub
pop
(bad)
adc
xor
push
out
rcr
enter
lds
adc
sbb
adc
or
sbb
jge
adc
mov
fisubr
jge
xchg
mov
mov
jg
mov
outs
mov
fs
pop
xchg
ret
pop
cmps
in
ja
(bad)
add
or
or
mov
dec
dec
push
cmps
gs
and
nop
dec
push
jo
pop
and
add
repnz
xchg
sbb
and
rol
neg
xchg
fdiv
pop
mov
dec
movs
mov
es
aas
sbb
imul
int3
ret
or
mov
ja
dec
je
or
add
or
mov
nop
retf
in
test
sub
(bad)
(bad)
or
dec
inc
inc
popa
out
xor
in
call
jo
xchg
dec
dec
fbld
cmp
or
dec
js
xchg
movs
and
pop
sbb
inc
mov
lahf
pop
js
xlat
popa
iret
sbb
pop
in
mov
or
push
dec
add
pop
push
out
call
push
cmps
pop
test
and
adc
adc
sbb
and
dec
jo
adc
daa
in
add
rcr
mov
out
or
icebp
mov
das
je
cs
dec
scas
int
imul
mov
add
cmp
add
dec
loopne
shl
fsub
cmp
adc
enter
movups
popa
sbb
sub
adc
lods
push
mov
test
push
and
test
or
pop
or
popa
push
fisttp
xchg
mov
loope
pusha
cmps
or
or
pusha
cmps
mov
sub
popa
pop
aaa
add
mov
sub
outs
in
aaa
or
or
nop
repz
pusha
mov
loope
out
repz
jmp
push
xchg
mov
add
push
pop
ret
mov
add
scas
sbb
adc
std
mov
add
popa
add
sahf
dec
loopne
push
jo
adc
in
pop
loop
push
mov
(bad)
mov
dec
mov
dec
xchg
adc
inc
cmp
sbb
(bad)
loop
adc
mov
stos
add
jmp
cmp
(bad)
xor
xchg
fstp
and
dec
pop
jmp
movs
loopne
(bad)
xor
pop
std
fs
push
and
and
ret
add
sbb
in
mov
call
sbb
ss
push
(bad)
cmp
cdq
cmps
mov
xchg
ss
xchg
inc
push
mov
or
test
sbb
fs
mov
mov
gs
push
mov
inc
push
rcl
(bad)
icebp
push
dec
mov
push
leave
add
xor
adc
sbb
call
stos
or
data16
add
xchg
jecxz
jae
mov
fs
xlat
mov
rol
nop
shl
xchg
xor
add
fcom
out
les
addr16
enter
push
stos
fprem
sub
cld
jns
push
addr16
cdq
push
pop
fwait
xchg
inc
sbb
(bad)
lock
sub
inc
add
or
test
stos
data16
or
sub
pop
mov
mov
addr16
push
repnz
sbb
mov
shl
ja
addr16
sub
sbb
fcomp
add
ret
nop
sbb
call
div
and
push
and
sub
mov
jmp
inc
popa
inc
imul
push
push
jno
mov
test
mov
add
jg
stos
loopne
movs
dec
mov
cmovs
mov
call
cmp
or
inc
lods
pop
xlat
imul
and
sbb
fisubr
and
adc
(bad)
lds
and
mov
popf
ins
jge
add
mov
jl
js
pushf
sbb
and
jo
push
sub
add
inc
jns
test
sub
nop
cmp
and
mov
and
pop
dec
inc
dec
jl
xor
shl
xchg
pushf
xchg
iret
pop
sbb
out
sub
stc
(bad)
idiv
mov
nop
push
adc
gs
dec
cmp
cmp
scas
outs
inc
dec
dec
push
iret
ins
clc
cmp
mov
pop
test
pop
mov
push
nop
outs
jmp
nop
out
push
dec
cld
mov
outs
adc
or
inc
adc
mul
std
mov
movs
in
pop
or
jb
sub
dec
mov
jne
xor
pmaddubsw
repnz
mov
loopne
add
inc
pop
jo
lea
cmp
jo
add
enter
push
push
shr
call
add
and
pop
adc
retf
ret
and
push
jno
dec
inc
or
nop
ja
fld
dec
ja
sbb
scas
ja
jmp
call
aas
aas
mov
jae
jae
dec
pop
xchg
mov
pusha
shl
and
mov
ins
ja
inc
add
gs
add
data16
(bad)
mov
sub
push
test
pop
std
inc
sub
fistp
mov
push
or
test
or
(bad)
or
or
pop
push
push
pop
sbb
add
(bad)
or
pop
int3
or
add
inc
fs
lods
sbb
add
outs
inc
jo
pop
dec
xchg
and
sbb
jo
mov
cmp
and
mov
imul
out
push
inc
ror
test
fld
jo
pop
mov
cld
dec
call
sar
pusha
mov
gs
mov
push
repnz
in
in
stos
and
pop
pop
sub
stos
ins
jge
arpl
mov
push
mov
and
add
or
gs
cmps
popf
sbb
add
push
or
push
ins
aad
sbb
lods
push
scas
outs
push
pop
sbb
mov
mov
xchg
mov
dec
or
mov
pop
xchg
mov
sbb
call
mov
xor
mov
js
xor
push
cmp
test
test
sub
out
add
daa
outs
(bad)
out
jns
loope
cmp
and
or
pop
call
jb
cld
pop
sbb
pop
xor
and
outs
in
loopne
mov
jecxz
or
xchg
add
pop
repnz
jns
and
mov
stc
mov
clc
retf
in
inc
bound
hlt
loopne
loope
cmp
inc
lock
sbb
pop
gs
fisttp
add
call
add
loope
adc
mov
(bad)
push
and
imul
push
cmps
daa
push
in
mov
out
test
ror
nop
out
or
(bad)
xor
packuswb
pop
push
aad
cmp
shl
xchg
aam
lock
inc
(bad)
push
mov
mov
adc
or
pop
hlt
dec
sub
cmp
jl
pop
add
dec
(bad)
sub
popf
pushf
call
cmp
pop
nop
mov
add
jbe
mov
lahf
jae
adc
xor
add
test
sbb
mov
cs
bound
ins
adc
loopne
aas
fldenv
clc
loop
and
dec
pop
and
enter
mov
adc
or
loop
and
dec
fdiv
(bad)
lock
mov
mov
mov
int
js
cli
mov
mov
jp
test
add
or
add
or
and
sahf
dec
add
loopne
adc
and
inc
sub
arpl
scas
adc
sub
cmp
nop
push
sub
gs
dec
movs
add
pop
scas
mov
or
sahf
xlat
jnp
cdq
mov
cmp
(bad)
push
movs
add
rol
mov
mov
addr16
jl
scas
sub
jl
push
jl
push
xchg
add
scas
stos
adc
adc
or
fsubr
lock
jge
ins
sub
lahf
mov
gs
lahf
fwait
add
add
lahf
(bad)
push
and
mov
sbb
lahf
and
inc
popa
(bad)
gs
xchg
outs
pop
mov
adc
sub
mov
push
push
xchg
or
add
add
pop
inc
inc
mov
add
mov
sub
cli
imul
or
pop
xchg
cld
aad
mov
mov
bound
cld
mov
cmp
push
(bad)
mov
cmp
add
add
add
test
test
dec
aas
cmps
and
add
pop
(bad)
or
outs
add
shl
gs
retf
sub
mov
mov
jmp
lea
pop
mov
fsubr
add
push
mov
mov
dec
jmp
or
or
xor
out
sbb
and
push
add
nop
neg
xchg
add
xchg
pop
fadd
xor
aas
and
cmps
nop
cli
pop
xchg
jbe
mov
lods
inc
iret
aas
or
mov
add
sar
ret
mul
aas
add
pop
scas
mov
add
cwde
test
lock
push
add
and
mov
push
add
enter
or
call
sub
sbb
sub
enter
adc
shr
rcl
push
add
or
sbb
out
mov
loopne
pusha
push
out
les
sub
cmp
dec
shl
test
adc
jo
xchg
pushf
add
sub
xchg
adc
(bad)
test
stos
pop
and
loop
and
(bad)
cmp
sub
das
pop
jecxz
push
xchg
and
in
adc
loope
test
das
test
add
aam
xchg
add
add
or
aam
xchg
and
rcl
adc
aad
add
or
adc
dec
push
fwait
xchg
push
mov
xchg
add
sub
ret
jmp
aam
sbb
push
or
sub
js
(bad)
mov
jmp
or
aaa
dec
test
cmp
test
pop
pop
test
xchg
mov
push
cdq
sti
mov
jmp
sbb
shl
lock
dec
xchg
jne
add
xchg
inc
hlt
test
fldenv
mov
hlt
gs
jno
shr
xlat
add
sub
adc
mov
shr
dec
jo
inc
add
or
jg
or
cld
add
add
addr16
mov
inc
add
cmp
and
adc
adc
lods
inc
addr16
stos
dec
repnz
arpl
xchg
rcl
mov
add
mov
test
(bad)
pusha
adc
not
mov
mov
add
dec
lea
mov
xchg
aas
cdq
push
push
aam
cmp
inc
pop
xchg
and
inc
cmp
cmp
cmp
xchg
pushf
sbb
daa
xchg
inc
mov
(bad)
and
cmp
loopne
xchg
and
add
xor
loope
sbb
dec
add
push
lds
add
pop
jns
jb
mov
push
(bad)
add
add
and
or
adc
not
mov
or
div
stc
cmp
pusha
neg
je
cdq
add
test
loopne
pop
test
not
push
jg
dec
inc
mov
lods
and
xor
xor
cmp
sbb
les
and
jg
adc
pop
sub
aaa
out
push
repnz
nop
add
sub
aaa
clc
nop
or
add
ins
lahf
add
xchg
je
(bad)
nop
lahf
add
push
add
xchg
in
adc
xchg
xchg
add
ret
test
add
and
cld
push
or
aaa
xchg
jg
push
enter
enter
inc
aaa
and
or
ds
outs
dec
enter
add
add
and
or
push
xor
aaa
add
pop
test
pop
fmul
mov
loopne
add
or
cmps
and
outs
test
mov
sub
in
push
pop
rcl
mov
and
xchg
push
cmp
call
pushf
and
xchg
ins
leave
xor
cwde
outs
mov
pushf
scas
retf
xchg
xchg
push
xor
jns
xchg
daa
test
pop
xchg
cmp
daa
or
aaa
test
bound
(bad)
adc
push
adc
jno
cmps
or
adc
mov
dec
pop
adc
and
addr16
mov
dec
cwde
cwde
sbb
adc
cmc
les
and
clc
mov
lods
or
pop
jge
loopne
lahf
lock
clc
sbb
(bad)
sbb
mov
pop
stos
inc
daa
sub
pop
mov
mov
add
dec
or
or
push
repnz
sub
arpl
into
pop
or
imul
leave
lds
and
or
cdq
adc
call
ja
loopne
cs
(bad)
mov
push
or
jo
sbb
inc
xor
test
lea
xor
fwait
push
add
inc
lea
inc
mov
fwait
mov
dec
dec
inc
push
and
dec
mov
push
in
stos
cwde
pushf
gs
es
mov
mov
das
loope
mul
cmp
loopne
not
cmps
sahf
les
je
jne
jne
xor
push
sbb
call
jmp
push
push
pop
iret
sub
enter
pause
popf
push
adc
pop
addr16
inc
sub
sbb
mov
std
xor
(bad)
movs
push
enter
into
mov
das
sub
add
xor
or
clc
adc
cmp
call
aam
mov
call
mov
call
aam
repnz
call
and
mov
mov
add
leave
leave
ins
popa
pshufw
mov
jb
repnz
cmp
sbb
movs
pusha
nop
mov
in
movs
push
mov
pushf
pushf
mov
or
dec
dec
mov
dec
int3
push
cmps
push
sbb
call
add
jge
add
add
jmp
pop
or
lahf
nop
test
or
cmp
mov
cmps
jl
xor
inc
xor
sbb
xor
nop
mov
inc
mov
(bad)
jmp
sub
push
rcl
mov
popa
or
scas
(bad)
call
mov
call
mov
inc
pop
call
or
jg
aam
jmp
adc
or
movs
lods
imul
adc
mov
or
adc
xor
add
popf
lahf
jg
or
rcr
sub
inc
inc
imul
mov
fiadd
lods
sub
push
rol
xchg
cmps
inc
jecxz
sub
inc
mov
inc
call
add
push
push
call
add
and
nop
push
les
ins
jns
popf
mov
test
inc
and
mov
fs
add
(bad)
cmps
add
inc
loope
push
cmp
sbb
outs
pop
test
enter
or
adc
loop
outs
jno
popa
mov
inc
jne
dec
push
sub
and
xchg
mov
daa
xchg
lods
aad
iret
inc
or
xor
mov
xor
mov
retf
adc
mov
dec
mov
add
outs
adc
bound
ror
js
or
pop
das
jne
add
je
cmpxchg
test
push
mov
test
mov
add
push
daa
daa
sbb
push
add
stos
mov
adc
lods
mov
fadd
jmp
or
add
pop
pop
sbb
sbb
sub
sbb
lds
fsubr
push
in
mov
dec
push
lods
das
aam
push
je
lods
jg
add
test
sbb
adc
nop
jg
test
adc
jg
test
cmp
or
lods
jmp
scas
jb
jecxz
jg
scas
sbb
xchg
jns
jb
inc
push
mov
cmp
inc
sahf
pushf
pushf
cmps
fsub
ins
dec
dec
dec
dec
xchg
mov
adc
inc
sub
test
fld
popf
sar
mov
xor
xchg
mov
clc
mov
es
dec
daa
in
sub
sbb
dec
or
sub
jno
dec
loop
and
and
xor
xchg
sub
sub
bound
adc
lds
mov
add
and
sub
mov
test
xchg
fwait
je
sub
pop
sub
lods
mov
xchg
inc
push
inc
pop
lods
mov
mov
imul
les
lods
mov
mov
or
push
xchg
sub
inc
jmp
xor
jns
mov
inc
pop
adc
jmp
adc
mov
add
inc
add
lods
mov
and
sub
push
jmp
sub
je
dec
jmp
les
pop
les
lea
push
icebp
or
jbe
gs
or
mov
and
push
adc
pop
lea
shr
stos
xor
mov
inc
or
sub
fidivr
seto
jge
(bad)
xchg
or
mov
adc
cmp
or
movs
push
adc
mov
pushf
mov
add
mov
jg
imul
in
mov
mov
hlt
es
mov
sbb
sub
xor
add
cwde
jg
shl
jne
mov
or
in
cwde
popa
adc
adc
cwde
sar
add
cdq
mov
inc
xchg
mov
in
mov
push
inc
sub
push
mov
mov
shl
call
pushf
call
rcl
push
push
aas
jl
push
xchg
mov
out
outs
repnz
xchg
jg
mov
xchg
pushf
or
jg
mov
enter
mov
or
leave
ins
mov
fbstp
jecxz
jle
mov
sbb
jb
mov
cmp
cmp
out
mov
cmps
out
aaa
mov
addr16
mov
dec
sub
mov
daa
in
sar
mov
mov
pop
adc
push
cmp
dec
push
jg
jb
rol
add
jg
shl
push
call
push
or
mov
jno
inc
inc
and
jg
and
jl
xor
test
xchg
xchg
jg
cdq
(bad)
mov
inc
daa
mov
jg
mov
jmp
adc
shr
dec
lods
mov
adc
call
mov
add
push
adc
pop
jb
inc
mov
ror
in
call
dec
enter
add
push
jns
xchg
adc
jge
cwde
shl
bound
nop
xor
sar
adc
aad
rcr
pop
sub
push
add
imul
repnz
rcr
adc
and
inc
sar
add
rcl
shr
jno
pop
sbb
mov
and
fmul
sub
add
xchg
mov
mov
push
add
adc
adc
sub
xlat
ror
in
mov
sbb
or
lahf
sub
jo
sub
dec
xlat
and
inc
add
xlat
pusha
xchg
cmc
sbb
je
cmovp
mov
movs
lods
push
aaa
clc
cmp
pop
add
add
adc
xor
aaa
and
sbb
push
xor
lods
outs
mov
das
fadd
pop
mov
into
ret
gs
aaa
push
movs
aaa
pop
sahf
retf
dec
es
setno
adc
dec
push
adc
jmp
(bad)
push
cdq
gs
mov
mov
xchg
cmc
sub
call
add
jo
leave
cmovp
inc
call
fadd
imul
mov
push
retf
pop
sbb
lods
ret
gs
xor
inc
push
or
pop
xor
push
mov
xor
adc
lods
outs
dec
je
xlat
add
push
popa
inc
addr16
(bad)
push
ins
jbe
mov
xchg
cld
(bad)
pop
cld
daa
xor
xchg
cmp
xchg
je
lfs
xor
rol
push
and
nop
test
in
sbb
in
sub
push
jmp
cdq
xchg
adc
popa
pop
vshufps
and
dec
enter
and
xor
lea
push
sbb
push
sub
or
cli
push
xchg
in
push
dec
leave
xchg
mov
retf
daa
out
xchg
sar
xchg
jo
push
pop
add
or
in
mov
push
and
xchg
mov
mov
enter
dec
in
mov
retf
sub
xchg
sub
arpl
or
repnz
leave
or
adc
retf
pop
mov
sahf
jae
repnz
lods
imul
std
add
inc
inc
inc
or
inc
mov
pop
dec
dec
inc
dec
dec
jg
add
gs
test
sub
mov
(bad)
call
adc
pusha
mov
adc
ins
cs
imul
outs
add
add
lods
ret
mov
pop
das
inc
int3
imul
push
add
add
xchg
mov
clc
push
mov
push
ds
clc
jb
arpl
jg
sbb
gs
popa
pusha
cwde
jo
push
cld
push
mov
gs
dec
dec
pop
aaa
sub
mov
sub
adc
(bad)
pusha
xchg
in
int3
mov
shl
xchg
dec
rol
push
rep
aas
jnp
pop
pushf
add
jmp
pop
lods
into
sti
out
sub
adc
and
dec
jo
stos
(bad)
imul
push
cmp
gs
dec
into
es
sub
and
not
sub
mov
fmul
gs
add
or
pop
ins
xchg
dec
xchg
loope
imul
dec
and
cmc
mul
add
or
gs
xor
dec
in
xor
data16
into
(bad)
pop
mov
pop
scas
mov
xor
cmps
pop
movs
jecxz
shr
or
push
or
mov
in
fucomip
pop
nop
adc
add
mov
push
cmp
mov
adc
cmp
nop
in
mov
adc
add
mov
std
jo
sbb
jbe
push
adc
dec
mov
arpl
mov
rol
adc
cmp
push
ins
idiv
ja
jmp
fdiv
push
aam
data16
adc
repz
aad
mov
iret
or
sbb
or
xchg
sbb
out
push
and
out
sahf
out
popa
imul
out
sahf
mov
jns
out
(bad)
jecxz
into
jecxz
out
(bad)
jmp
xlat
or
adc
add
push
std
loopne
sub
sub
cmp
gs
jmp
mov
jnp
fimul
or
test
call
pop
push
inc
ins
mov
pop
add
std
int3
shl
dec
xchg
nop
pop
test
mov
stos
fnstcw
pushf
cmps
mov
repz
push
loop
inc
add
sbb
push
sub
ret
mov
out
jne
fucom
loop
sbb
mov
push
ret
pop
data16
push
dec
sti
shr
call
fs
add
sub
je
bound
dec
xor
in
sub
jb
clc
inc
outs
arpl
or
retf
xor
cdq
inc
pop
pop
push
add
loopne
mov
inc
daa
add
inc
pop
enter
mov
cmp
adc
mov
out
int3
adc
es
jl
xor
rcl
push
icebp
(bad)
sti
rol
loop
in
push
jl
mov
push
cmp
iret
pop
inc
aam
add
push
(bad)
push
in
repz
mov
mov
xor
sub
cmp
adc
cmp
sub
xchg
retf
in
or
loop
push
lahf
pop
fwait
mov
push
jo
or
jp
in
or
jbe
push
ja
push
jl
in
sbb
cmp
test
pusha
lds
adc
or
call
inc
icebp
ds
push
add
or
stos
push
mov
leave
xor
iret
repz
out
jecxz
and
aad
mov
push
cmp
dec
push
(bad)
(bad)
sbb
jecxz
push
in
daa
sti
aad
sub
xchg
(bad)
mov
and
pop
out
xchg
or
dec
popa
jo
push
(bad)
jno
lds
adc
cmp
loopne
pop
dec
(bad)
gs
stos
mov
add
pop
stos
mov
push
jb
(bad)
sub
push
jnp
inc
and
xchg
adc
fadd
or
in
adc
mov
test
daa
cld
jnp
nop
outs
adc
add
sbb
clc
add
mov
std
jo
sbb
jbe
push
adc
dec
mov
arpl
add
rol
enter
out
fcomp
and
fcomp
adc
mov
scas
loop
xlat
push
test
adc
out
push
sbb
out
sahf
out
pop
arpl
sahf
out
sahf
or
mov
repz
repz
loope
loop
iret
jmp
push
in
and
lds
pop
cmps
pop
scas
adc
push
xchg
fdivr
fsub
adc
push
xor
xchg
push
adc
sbb
add
lods
dec
aam
popa
mov
push
sbb
shr
push
repnz
xchg
cwde
sbb
shrd
in
adc
(bad)
push
mov
fsub
pop
adc
cmp
ins
stos
stos
mov
mov
out
(bad)
jns
out
push
iret
hlt
fld
jecxz
jns
neg
push
adc
sahf
out
cmp
out
sahf
outs
jns
lea
mov
push
mov
je
sahf
mov
ja
lock
in
ficomp
fsubr
xor
pop
int3
psrld
xchg
mov
mov
adc
pop
and
jb
push
sbb
xor
daa
ins
add
call
adc
sbb
nop
adc
inc
pop
cmp
inc
sbb
clc
adc
sbb
ret
mov
xor
adc
inc
xor
clc
and
sbb
ja
pop
add
push
fld
fdivp
mov
push
cmc
dec
es
cmp
repz
sbb
iret
repz
dec
pop
arpl
cmp
lahf
test
repz
push
pop
imul
xchg
rep
scas
mov
cmp
ja
fst
or
cmps
ficomp
and
pop
or
push
aam
push
xor
or
lods
cmp
fistp
les
daa
pop
fcomip
xchg
cmp
fadd
cmp
lds
dec
adc
xchg
jbe
and
or
in
adc
mov
ja
daa
cmp
adc
add
daa
sub
cld
xchg
clc
add
arpl
std
jo
mov
test
arpl
daa
ja
push
and
aam
sbb
aam
ja
mov
adc
call
loopne
cmp
loop
fstp
in
out
stc
add
cmp
repz
sub
repz
push
pop
addr16
repz
jnp
(bad)
cdq
mov
cmp
mov
into
repz
mov
(bad)
rol
or
fdiv
dec
pop
add
pop
call
(bad)
cmps
add
pop
pop
aaa
push
jl
mov
xor
fdiv
in
add
mov
push
loopne
fiadd
and
add
add
dec
pop
iret
je
gs
jecxz
and
jns
xchg
lahf
test
sahf
out
rcr
in
jns
neg
push
pop
and
out
sahf
out
aas
dec
push
pop
jns
out
xor
push
inc
dec
pop
arpl
sar
xchg
mov
cmp
push
cmps
in
mov
je
jle
or
cmp
ins
or
cmp
in
and
push
stos
inc
inc
shl
rcr
rol
cmp
rcl
ror
cmp
nop
rcl
rcl
cmp
nop
inc
rcl
shl
nop
inc
push
rcl
rcl
rcl
inc
push
cmp
rcl
ror
cmp
nop
rcl
rcl
cmp
nop
inc
rcl
ror
dec
push
rcl
jmp
adc
pop
out
push
add
in
dec
shl
in
repz
xor
push
popf
cmps
mov
repz
mov
in
pop
mov
scas
or
(bad)
jmp
push
repz
pop
adc
sbb
inc
lahf
and
xor
gs
jg
data16
outs
mov
aam
out
pop
out
cmp
inc
or
jns
nop
loope
sti
push
inc
inc
push
cmp
jbe
xor
in
sub
adc
cmp
and
and
jmp
push
hlt
push
call
bswap
push
pop
push
leave
rcr
fild
in
neg
cs
sahf
out
sub
jns
out
addr16
test
cdq
mov
sar
out
test
push
je
test
pop
call
and
push
(bad)
test
repz
out
(bad)
add
cmp
gs
sbb
inc
mov
mov
(bad)
rcl
sub
aam
outs
add
inc
or
in
adc
mov
ja
add
paddd
and
push
jns
add
setp
push
shr
inc
jp
(bad)
cs
in
sub
dec
push
fld
or
cmp
lock
js
or
adc
addr16
popf
jmp
jmp
mov
mov
loope
cmc
iret
repz
dec
inc
adc
sbb
repz
inc
dec
pop
arpl
cmp
rep
ja
mov
movs
jle
jmp
sbb
test
inc
outs
mov
inc
in
xlat
les
test
scas
add
sub
pop
mov
pop
sub
test
pop
(bad)
in
cmp
or
fwait
cwde
int3
xor
jmp
lahf
push
adc
daa
sub
lock
(bad)
ins
add
out
cmps
out
push
inc
in
call
in
in
in
out
cmps
imul
sahf
out
sahf
mov
(bad)
jecxz
mov
add
mov
es
push
cmp
push
in
adc
dec
out
and
cmp
or
mov
ds
imul
or
scas
mov
pop
and
stc
or
mov
jl
xor
jno
or
mov
jae
xchg
lock
movs
lods
jp
jns
out
push
ror
fucomip
out
mov
repz
pop
dec
adc
sbb
das
cmp
push
jns
out
popa
imul
ror
mov
xor
mov
icebp
jbe
mov
mov
xchg
setp
adc
adc
fsub
(bad)
sub
xchg
icebp
fld
push
add
(bad)
mov
xchg
in
in
ret
ret
push
add
bnd
pop
repz
xor
repnz
and
repz
dec
push
pop
imul
jge
xchg
fwait
movs
cmp
repz
mov
pop
iret
repz
icebp
pusha
sti
push
add
jae
out
adc
int
jle
outs
fiadd
dec
repz
cmp
add
or
(bad)
adc
fistp
test
data16
dec
mov
sbb
xlat
pop
inc
repnz
add
add
aad
hlt
fld
mov
lock
shl
add
rol
cmp
cmc
(bad)
cmc
push
test
pushf
mov
mov
jnp
out
out
stc
add
push
pop
jns
out
and
xor
sahf
out
pop
addr16
mov
sub
pop
lods
cmc
sub
ds
loopne
not
popf
fld
not
nop
setbe
push
mov
cs
inc
jb
addr16
iret
pop
cmp
nop
test
mov
es
loopne
or
pusha
or
clc
pusha
add
and
sub
icebp
sub
out
xor
faddp
repz
cmp
push
inc
or
sets
aaa
add
rol
mov
lahf
lock
xor
imul
push
imul
gs
cmp
push
cmp
daa
inc
clc
bsf
fisubr
repz
add
call
sbb
sbb
pop
mov
pop
add
lahf
add
lods
pop
mov
aas
test
xchg
add
inc
loop
or
arpl
cs
mov
jae
outs
in
fisttp
test
adc
jns
arpl
ret
xor
call
dec
ffree
stos
or
and
pop
aas
and
inc
sbb
pushf
inc
push
clc
inc
push
jne
nop
cmp
ja
imul
and
xchg
cmp
and
cmp
cmp
sbb
pusha
adc
cmp
push
loopne
ret
adc
adc
mov
sti
xor
cmp
movs
adc
sbb
inc
adc
add
frstor
dec
xor
mov
xchg
xor
adc
fsub
sbb
sub
dec
das
jo
mov
push
jb
mov
in
cs
and
cmp
sub
sub
cmp
xor
(bad)
lock
cmp
sbb
mov
adc
xor
int3
int3
or
int3
int3
int3
int3
or
enter
int3
xor
and
and
and
int3
inc
xor
enter
imul
add
neg
std
cmps
push
adc
sahf
out
sahf
sbb
jns
out
fldenv
jne
out
sahf
out
xchg
popf
cmps
mov
xor
lahf
mov
push
jecxz
jnp
jnp
in
push
test
pop
repz
cmp
jmp
iret
repz
add
aaa
cmp
repz
dec
push
pop
imul
jge
xchg
fwait
iret
repz
movs
scas
mov
mov
(bad)
pop
push
outs
iret
repz
jns
lea
repz
mov
cmp
repz
sti
push
cmp
loope
repnz
or
icebp
and
iret
lds
xor
mov
lods
jae
inc
lock
ds
dec
sahf
nop
xor
pop
data16
mov
or
std
ja
lea
mov
pop
sbb
and
jbe
add
mov
std
jb
push
xlat
or
add
pop
and
lock
ja
outs
mov
mov
push
push
or
adc
mov
popw
push
aaa
out
add
xchg
data16
mov
add
dec
jecxz
lahf
fsubr
cmp
pop
or
lahf
fdivr
out
nop
mov
xchg
xchg
jae
jb
jo
or
imul
jmp
and
dec
in
pop
leavew
push
push
adc
mov
cld
inc
pop
add
and
push
fdivr
lock
ds
adc
sub
aam
adc
ret
stos
test
or
and
jo
popa
loopne
jmp
pop
add
add
movs
push
ja
nop
adc
das
pop
pop
ror
add
xchg
jbe
xor
adc
push
add
mov
push
or
add
aad
inc
test
ret
sub
das
push
and
or
data16
ret
inc
push
or
and
or
dec
lds
add
and
sar
adc
ins
mov
push
lahf
jne
sub
ret
outs
jo
add
fadd
and
push
mov
wbinvd
cmps
or
mov
jns
(bad)
out
aas
push
mov
ret
mov
loopne
add
push
push
push
mov
fmul
fs
dec
cmp
nop
dec
es
faddp
int
test
sub
cmp
test
add
jle
push
ret
adc
(bad)
or
pop
pop
pop
mov
iret
shl
xlat
test
test
xor
pusha
inc
sbb
(bad)
outs
imul
sbb
std
add
outs
int3
sbb
sbb
loopne
in
inc
add
sub
sbb
leave
and
sub
in
mov
cmp
imul
xor
jbe
out
outs
mov
xchg
sub
cmp
rcl
mov
jle
ds
ja
xor
mov
sbb
add
lock
xlat
xchg
add
ja
popa
add
inc
adc
inc
xor
mov
sbb
xchg
ret
icebp
adc
sbb
pop
scas
call
inc
pop
rcr
pop
rol
pusha
jl
push
add
or
or
xchg
aaa
adc
jge
cmp
jb
mov
movs
fmul
aad
js
movs
mov
lds
int
mov
out
fsubr
pop
or
das
adc
arpl
or
sbb
xor
rol
inc
div
mov
retf
outs
and
jmp
shr
jne
dec
push
xlat
fist
test
int
(bad)
sbb
inc
or
sbb
xchg
jle
mov
cld
jmp
addr16
cmps
nop
jmp
mov
call
inc
in
nop
mov
add
lods
call
mov
and
icebp
call
fdiv
or
jnp
add
push
and
add
and
push
pop
retf
and
aad
xchg
xchg
movs
sbb
mov
clc
icebp
xchg
push
fdiv
sbb
push
in
in
cmp
xchg
mov
jmp
in
push
or
jge
out
fmul
ret
inc
in
(bad)
adc
add
push
nop
add
xor
adc
and
mov
jb
cld
out
sti
or
rol
repnz
fucomp
add
repz
xor
pop
sub
repz
ins
and
push
inc
fcom
add
or
mov
test
(bad)
jae
or
call
push
inc
jno
cmp
cmp
lea
cmp
sub
test
and
sbb
in
or
add
push
pop
or
cmp
xchg
and
scas
movs
adc
nop
and
js
(bad)
adc
(bad)
cmp
fistp
xchg
adc
in
adc
mov
add
push
push
sbb
cmp
aam
ins
or
mov
sub
and
cmc
mov
and
mov
mov
mov
add
mov
je
adc
js
dec
push
inc
dec
lock
or
test
push
stc
pop
jle
sbb
int
repz
imul
adc
ror
pop
xlat
shr
movs
xor
add
sbb
sbb
pop
or
sbb
enter
and
sbb
and
pop
pop
cmp
imul
adc
xchg
nop
xor
test
lock
dec
sar
push
(bad)
mov
hlt
lock
and
jmp
mov
cmp
or
in
mov
shl
mov
mov
mov
enter
cmove
pop
cmovae
clc
inc
add
add
outs
or
adc
js
outs
push
jb
adc
jp
add
iret
xchg
and
sub
(bad)
cmp
clc
sub
push
adc
cmp
mov
push
sub
adc
xchg
movs
mov
hlt
dec
jb
add
hlt
xor
push
sub
cmp
cmp
sub
xor
sub
shl
adc
sbb
add
add
push
stc
icebp
mov
adc
iret
push
mov
push
jo
inc
es
add
inc
or
pop
repz
cmp
adc
sbb
nop
xchg
xlat
cmp
sub
mov
pop
adc
inc
daa
nop
add
add
and
mov
pop
adc
xchg
pop
fadd
mov
shl
mov
fs
ins
outs
push
adc
mov
xchg
or
loopne
adc
(bad)
mul
sbb
ror
nop
mov
pop
push
mov
sti
lock
pop
xlat
xor
pushf
in
sub
pop
fwait
push
in
push
cmp
(bad)
(bad)
mov
or
cmp
push
or
adc
inc
add
dec
shl
and
add
adc
cmps
pushf
adc
mov
lea
cmps
hlt
adc
push
dec
mov
in
pop
push
fs
cmp
add
push
sub
pop
add
pop
sub
push
sbb
test
mov
jmp
push
add
or
lahf
pop
and
sbb
sub
or
mov
xor
(bad)
imul
adc
sbb
leave
xor
inc
pop
nop
pushf
and
xor
mov
in
sbb
daa
push
xor
das
leave
or
lock
add
mov
and
les
adc
dec
push
ret
push
and
or
dec
pop
adc
jle
jns
mov
cld
aad
les
pop
add
sub
add
dec
lods
iret
iret
sbb
mov
clc
mov
loopne
(bad)
gs
or
adc
mov
jg
(bad)
ret
(bad)
fistp
stos
sub
xchg
in
dec
in
or
nop
out
pop
sbb
mov
and
enter
mov
mov
bound
jb
sbb
jmp
push
cmp
(bad)
xchg
push
rcl
test
adc
and
pop
pop
push
js
dec
arpl
or
sub
jle
std
mov
pop
jnp
push
or
lea
mov
ins
mov
fwait
pop
push
ja
jb
add
mov
sbb
dec
pop
and
push
jo
lds
push
dec
pop
add
and
mov
inc
sub
in
ja
and
adc
repz
pop
xor
std
in
sbb
psubw
add
mov
adc
ja
enter
and
ret
and
xor
popa
push
push
stos
js
and
in
(bad)
in
sub
call
mov
cmp
adc
jge
(bad)
add
movs
xor
leave
movs
outs
mov
adc
pusha
add
push
sub
xor
ret
jecxz
dec
fwait
adc
rcr
jns
pusha
mov
test
aad
bound
push
push
xor
lods
mov
jae
sahf
imul
mov
sub
scas
je
lahf
out
fsubr
hlt
and
jl
adc
shl
push
sbb
test
jmp
or
push
or
pop
ffree
adc
enter
mov
call
inc
lock
push
aam
inc
(bad)
(bad)
pop
rol
hlt
adc
test
cmc
lock
das
push
inc
(bad)
inc
dec
enter
lock
and
adc
jo
enter
push
call
jns
ret
ret
dec
add
dec
add
pop
cmp
inc
or
jge
push
mov
neg
sbb
mov
dec
adc
jmp
pop
add
pop
bound
dec
sbb
lock
jg
daa
jmp
push
adc
jb
and
cmovb
out
das
sbb
xor
inc
xlat
or
add
jns
lock
cwde
mov
in
fsubr
xchg
hlt
add
loope
in
adc
les
jne
mov
sub
inc
dec
adc
shr
add
mov
sub
sub
sub
inc
and
(bad)
movs
and
lock
mov
or
js
add
and
or
adc
push
adc
test
jg
sbb
scas
xchg
sub
sub
movs
and
test
sub
dec
adc
sub
or
lea
imul
ret
mov
(bad)
mov
sbb
add
stc
leave
mov
and
cld
shl
add
and
xchg
lock
xor
(bad)
mov
pop
sub
shl
out
push
pop
xor
shl
mov
sbb
ja
fadd
imul
ror
xlat
inc
push
enter
jno
movs
mov
fisttp
int3
neg
pop
mov
or
add
xchg
test
mov
inc
push
cld
int3
mov
add
test
jno
xor
sub
shl
sub
ins
inc
idiv
fist
cs
test
das
add
or
mov
cs
push
dec
bound
lock
mov
adc
(bad)
(bad)
mov
call
test
call
shl
cmp
and
in
dec
mov
fmul
cwde
imul
jne
sub
gs
sbb
push
adc
pop
sub
(bad)
and
leave
sub
sub
add
xchg
sub
xor
xor
or
adc
cs
xchg
arpl
fs
movs
jb
add
cwde
mov
fdiv
jae
ins
xchg
add
or
addr16
or
test
pop
xor
enter
xor
dec
xchg
aad
add
loop
dec
jb
dec
outs
sbb
lea
dec
xchg
(bad)
xor
mov
aaa
cmp
stos
xchg
or
cmp
and
ja
and
rcr
das
fdiv
dec
shl
dec
xor
inc
or
add
test
inc
ror
jge
retf
out
call
sbb
retf
push
sbb
fistp
sub
fsub
ret
cmps
lahf
add
ret
dec
movs
adc
cmp
or
or
xchg
mov
fld
dec
inc
pop
ret
and
mov
test
mov
in
aaa
mov
dec
add
pushf
mov
imul
sub
xor
push
rcl
sbb
mov
xor
jmp
jmp
sub
mov
add
add
adc
adc
add
push
(bad)
out
push
sub
add
mov
je
sahf
xchg
call
arpl
addr16
cmp
das
and
iret
daa
adc
add
mov
rcr
iret
inc
or
add
sbb
and
fldenv
repz
push
add
mov
sub
mov
loopne
jmp
sub
jle
add
daa
adc
or
ret
sbb
in
pop
adc
clc
mov
mov
aad
(bad)
sub
inc
ror
fs
cmp
mov
std
mov
nop
mov
dec
dec
ins
cmp
push
and
ficomp
ins
add
add
cmovb
mov
in
out
stos
nop
pop
test
test
and
ds
xor
fcom
cmp
pop
push
call
adc
out
xor
or
leave
dec
fs
inc
aas
adc
push
xchg
adc
cmps
in
repz
adc
dec
scas
clc
aas
xchg
pusha
add
scas
xchg
add
outs
mov
lods
stc
test
mov
xor
adc
inc
inc
or
xchg
mov
push
or
lock
jo
std
adc
ret
xchg
or
(bad)
xchg
pop
dec
enter
repz
(bad)
cmp
or
adc
jo
inc
leave
inc
mov
inc
or
sbb
add
mov
iret
pop
test
adc
push
out
adc
sub
inc
adc
pushf
or
sbb
(bad)
sub
lahf
xchg
inc
mov
clc
fldcw
rcr
ret
ins
cld
push
imul
popa
inc
push
sub
punpckhdq
inc
cmp
das
arpl
jb
lea
div
(bad)
push
or
ss
rol
push
push
jb
mov
mov
test
daa
adc
stos
movs
push
xor
dec
jge
cmp
loopne
cmp
sbb
scas
push
push
aas
mov
adc
or
aad
push
pop
mov
dec
sbb
sub
dec
xlat
dec
xchg
test
data16
add
rol
push
loop
mov
clc
(bad)
dec
dec
(bad)
mov
cmp
cmc
sbb
aaa
add
mov
and
inc
and
add
ror
inc
scas
sbb
and
and
pop
inc
test
or
dec
inc
and
and
mov
inc
cmps
xchg
pop
push
dec
adc
jns
movs
aas
test
test
arpl
daa
test
dec
pop
pop
rol
out
xlat
cmp
add
test
or
or
sbb
or
adc
or
call
in
push
sub
xchg
xor
inc
push
or
dec
or
mov
adc
inc
aam
inc
and
fimul
pop
outs
ror
call
inc
or
xchg
and
arpl
clc
jo
add
and
mov
inc
mov
jno
inc
mov
xchg
or
pop
cmp
or
dec
pop
in
push
and
inc
nop
and
sub
inc
scas
loop
scas
mov
or
add
inc
pusha
sbb
scas
adc
xlat
add
int
icebp
mov
mov
dec
mul
pusha
retf
mov
mov
xor
cs
jns
ss
fdivr
ror
into
outs
aam
add
xchg
(bad)
mov
lea
inc
xor
sub
dec
iret
push
cmp
enter
add
xchg
cmp
dec
test
push
dec
push
sbb
mov
adc
(bad)
push
nop
sbb
fild
xchg
dec
sbb
lock
or
sub
or
xor
xor
pop
sbb
sbb
test
icebp
pop
add
and
xor
sub
aam
push
mov
test
jnp
nop
dec
sub
mov
js
and
sbb
lods
add
pop
and
adc
xor
cmc
call
mov
ins
mov
dec
fild
inc
outs
sub
add
and
jne
mov
ror
mov
mov
mov
push
data16
inc
push
adc
je
in
push
sub
xor
and
xor
repz
out
fadd
movs
rcl
adc
dec
fcomp
test
ins
cmps
or
push
sti
push
push
test
add
or
push
or
pop
cld
push
data16
je
movlps
adc
add
scas
cdq
sub
cmp
inc
adc
or
pop
cmps
pop
call
jnp
lods
outs
loop
and
nop
mov
push
outs
adc
in
test
or
or
stos
cwde
bound
jns
adc
push
iret
push
enter
ins
in
add
shl
mov
in
mov
or
mov
mov
xlat
or
add
or
bound
cmp
xlat
or
push
sbb
ins
call
add
je
cmps
or
add
add
jns
sar
push
cs
in
jmp
das
popf
add
outs
jmp
jl
cmps
add
or
inc
pop
sbb
imul
pop
adc
xchg
je
adc
mov
dec
pushf
jg
or
or
mov
stos
loopne
or
dec
or
out
adc
sub
xchg
outs
jg
xchg
call
or
in
ins
cmp
adc
es
inc
nop
into
inc
jbe
push
push
dec
mov
sub
pop
add
pop
add
mov
adc
adc
push
add
mov
push
pop
push
ss
movs
push
sbb
fidiv
test
xchg
addr16
pusha
aam
sub
fs
pop
data16
mov
add
cmps
push
mov
pop
pop
loope
sbb
int3
lds
dec
or
call
push
ffreep
push
push
hlt
inc
cmps
jne
cmps
pop
dec
and
ffreep
pop
pop
and
mov
jnp
lds
xchg
pop
pop
movd
push
adc
retf
iret
mov
scas
punpcklbw
push
pop
xlat
and
push
nop
enter
data16
cmps
and
js
or
aam
push
or
pop
add
adc
push
mov
aam
pop
lods
fadd
jbe
int
jne
jne
pop
mov
in
mov
pop
sbb
push
mov
pop
repnz
pop
xor
sbb
inc
add
and
inc
push
xchg
jne
adc
jb
ror
outs
cmps
fld
mov
and
int
fs
adc
add
xchg
adc
adc
or
pop
push
gs
ds
fsub
adc
(bad)
fcmovnu
imul
imul
cmps
cmp
fisttp
mov
xchg
dec
fs
or
fwait
or
sub
mov
cmc
icebp
bound
add
sub
pop
js
loop
xor
sub
cmp
xlat
mov
outs
js
mov
mov
mov
addr16
or
mov
ins
je
xchg
(bad)
imul
mov
pop
ins
jmp
(bad)
adc
mov
mov
mov
or
adc
and
mov
cwde
add
in
(bad)
call
sbb
push
fcmovnb
pusha
add
aaa
pop
xor
push
jo
hlt
mov
loopne
xchg
mov
adc
sub
inc
xor
js
cwde
out
in
mov
cld
jne
sub
add
cmp
pop
test
hlt
fs
daa
pushf
loope
rcl
cli
pop
jno
es
push
imul
sub
xor
inc
jbe
sub
clc
sbb
dec
repz
add
sbb
ss
das
dec
icebp
enter
in
push
inc
jecxz
cmps
fstp
pushw
push
rcl
cmp
cmp
and
test
cmp
xchg
sbb
sbb
ror
push
inc
mov
mov
fiadd
inc
dec
jne
std
pop
jnp
ds
mov
push
pop
sub
pop
sub
jl
inc
sub
dec
add
rol
inc
dec
jno
call
adc
inc
xchg
and
jnp
ss
add
cmp
push
ins
mov
dec
dec
jo
test
(bad)
(bad)
and
popa
(bad)
je
jb
jne
ret
xor
xchg
(bad)
lock
je
sti
idiv
inc
add
push
ins
sub
js
jnp
add
(bad)
stos
jns
push
push
data16
push
inc
sbb
pushf
sub
jnp
in
loopne
push
add
jae
push
pop
sub
je
xsavec
adc
jle
add
inc
rcl
cmovg
push
ret
or
scas
inc
cmp
cs
into
sub
xor
sub
(bad)
sub
lock
mov
mov
and
cmp
punpckldq
neg
add
push
dec
movs
arpl
mov
push
mov
and
mov
mov
dec
dec
push
mov
push
imul
inc
lods
arpl
inc
xchg
add
or
adc
sar
inc
inc
arpl
lods
sub
std
add
jmp
pop
add
add
dec
fiadd
out
outs
jae
cmp
dec
cmp
jb
cld
repz
add
push
jae
mov
std
or
inc
outs
fs
imul
inc
mov
rol
mov
mov
call
or
wbinvd
jno
fs
add
lds
pop
movs
retf
mov
movs
cdq
arpl
jb
inc
or
ret
dec
adc
add
jb
test
and
in
pop
(bad)
cmp
out
mov
sub
(bad)
cmp
add
rcr
mov
inc
or
mov
jns
dec
inc
dec
mov
test
push
dec
movs
sub
stos
jae
cmc
push
in
fs
sub
and
inc
cmp
jge
adc
dec
out
or
inc
xchg
cmp
fbstp
or
add
xchg
pop
add
adc
or
aaa
fs
imul
outs
cmp
lock
and
call
adc
outs
or
jne
jb
popa
outs
neg
enter
out
ins
sar
pcmpeqb
outs
inc
ror
pop
scas
enter
out
fbstp
inc
add
xchg
inc
or
idiv
jns
addr16
adc
cmps
push
mov
or
push
jne
pop
sub
test
dec
inc
push
sub
dec
ret
add
or
pop
das
dec
jae
data16
je
dec
add
outs
shl
add
iret
cmp
imul
add
ins
cmp
adc
inc
jne
gs
inc
mov
icebp
pop
outs
inc
add
push
jmp
dec
ucomiss
sbb
pop
xchg
adc
jp
push
mov
aaa
push
inc
sub
lods
and
aaa
add
add
lds
popf
shr
outs
nop
push
push
iret
adc
push
push
jnp
pop
sbb
dec
arpl
and
inc
outs
xor
add
mov
ins
add
mov
inc
add
mov
push
adc
cwde
adc
bound
jns
ja
les
sbb
jne
add
xchg
imul
js
aas
or
or
inc
push
jg
add
out
lahf
sub
les
(bad)
ins
add
add
xor
aaa
add
inc
das
add
ret
adc
call
cmp
retf
sbb
arpl
gs
xlat
push
ret
lds
xchg
popa
lahf
ror
jmp
arpl
add
and
inc
dec
aaa
cmp
sbb
ins
adc
jns
pop
sbb
push
xchg
pop
sbb
in
pusha
inc
adc
jnp
mov
jmp
jne
pushf
sbb
jnp
dec
ins
push
test
jnp
arpl
nop
or
ret
mov
mov
out
and
imul
jae
add
mov
xor
inc
sub
add
add
add
pop
push
jae
add
inc
add
inc
jae
jecxz
ins
das
pop
xchg
imul
aaa
fild
(bad)
sub
ja
aaa
push
jl
jae
add
cmps
push
xchg
retf
push
hlt
inc
sub
imul
mov
ja
lods
mov
pop
arpl
and
adc
cmps
sub
add
push
es
dec
les
jge
pop
cld
movs
dec
mov
push
mov
jp
add
sub
loopne
jge
pop
sbb
add
cmc
retf
outs
aad
test
and
and
shl
xlat
push
jne
dec
out
xlat
fs
dec
cmp
xor
pop
jmp
inc
sub
fild
pop
push
aas
push
add
ss
jge
add
jnp
pop
xor
dec
xchg
inc
neg
repnz
scas
jge
xor
dec
pusha
pop
mov
sub
in
aad
mov
sub
in
sub
mov
cmp
jno
loopne
lods
mov
arpl
push
dec
ror
fwait
jge
shl
push
fs
data16
add
in
jne
ja
push
jbe
imul
push
addps
jmp
push
or
fwait
jbe
mov
sub
ins
outs
jo
push
fs
add
inc
bound
mov
fiadd
cmps
push
inc
push
jne
jne
xor
or
xor
in
jb
xor
fs
daa
dec
outs
seta
jp
jb
dec
dec
leave
or
jne
jae
sbb
sbb
arpl
add
sub
push
jno
mov
gs
sbb
cld
addr16
sar
add
pop
mov
xchg
or
cmp
data16
xchg
nop
ja
btc
adc
mov
push
sub
data16
or
(bad)
in
jns
add
or
or
scas
push
xchg
pop
sub
dec
test
sbb
cmp
test
add
add
dec
push
or
xor
sti
test
add
or
xor
lods
shl
sbb
out
xor
jno
les
pop
es
pop
mov
dec
add
inc
and
cmp
jb
mov
fist
xchg
je
push
popa
sub
fild
push
push
loope
test
ret
push
push
dec
arpl
inc
push
and
bound
jge
neg
dec
sbb
je
or
test
out
sub
push
ds
push
inc
jp
jnp
mov
pop
ss
es
pop
mov
xor
jb
outs
push
xor
ss
neg
in
mov
das
add
push
pop
inc
mov
jb
sub
push
ins
lock
xchg
inc
xor
enter
or
ja
jmp
jbe
ins
mov
arpl
div
push
push
add
adc
fld
je
in
jne
push
dec
and
xchg
or
mov
mov
cmp
inc
or
push
sbb
inc
movs
jmp
cmp
adc
adc
mov
sti
(bad)
js
adc
mov
push
push
and
cmps
or
(bad)
aam
test
xor
test
hlt
inc
dec
leave
sub
jns
jns
inc
es
sti
add
dec
add
gs
sub
hlt
in
sbb
or
pop
fistp
mov
add
xor
mov
ret
out
or
cmp
call
mov
out
ss
pop
aas
push
push
enter
ds
lods
adc
dec
or
dec
aad
nop
jle
mov
pop
adc
dec
fiadd
push
sub
lods
xor
ds
pop
fidivr
add
or
leave
jne
nop
or
nop
nop
jg
pop
ins
jge
inc
adc
add
and
add
ror
cmp
push
jl
mov
and
movzx
mov
fcomip
add
lea
retf
and
loopne
adc
sub
std
push
push
and
sub
out
mov
test
jg
loopne
loope
sbb
nop
ja
loope
clc
outs
mov
clc
xor
mov
adc
add
clc
movsx
(bad)
(bad)
out
and
xor
test
add
dec
jg
je
sub
test
nop
dec
adc
jb
dec
je
sti
outs
fild
pop
je
sbb
add
push
or
adc
push
pop
cs
in
rol
push
cmp
add
or
jne
mov
int
jp
sub
jmp
push
mov
cld
je
test
adc
xchg
je
and
dec
stc
jge
fsub
adc
inc
popa
sub
inc
jmp
mov
int
(bad)
sub
imul
cmovb
shl
mov
sti
push
pop
clc
lea
add
movs
push
pop
add
adc
pusha
and
jne
out
cmp
popa
cmps
je
inc
(bad)
into
ss
xor
cmp
inc
data16
pushf
sbb
inc
adc
(bad)
cmp
dec
(bad)
sub
mov
sbb
or
dec
mov
sub
sti
sbb
cmps
or
jg
lahf
int3
fidivr
mov
test
cmp
adc
out
ret
mov
loopne
sahf
or
not
inc
xchg
jge
dec
xor
js
jno
xor
jp
push
jle
ror
(bad)
xchg
test
push
cmp
mov
ret
xor
sub
and
mov
ret
dec
hlt
jmp
dec
add
test
and
hlt
push
popa
jl
or
cli
add
pop
(bad)
(bad)
(bad)
stc
inc
jge
mov
mov
mov
or
aam
in
adc
or
mov
lock
hlt
xchg
adc
inc
movsx
jge
and
aam
pop
cld
cmps
push
clc
jmp
cwde
and
cmps
retf
enter
ss
stc
cmps
sbb
dec
fcomi
xchg
(bad)
jmp
jmp
int3
mov
leave
sahf
mov
xchg
or
call
sbb
retf
pop
adc
cmp
dec
add
push
ins
adc
fdiv
dec
cmp
xchg
inc
xor
push
test
ins
mov
mov
jne
clc
push
xor
xchg
pop
jne
mov
(bad)
xor
push
jns
out
pop
aas
xchg
or
pop
jl
sbb
cmps
loope
(bad)
sub
inc
sbb
inc
fadd
inc
(bad)
xor
dec
inc
mov
jle
mov
add
sar
lea
fnstcw
mov
push
cwde
dec
add
cmp
cli
test
mov
in
jne
push
mov
push
in
mov
sbb
or
add
fcomp
add
cld
jne
inc
pushf
mov
push
shr
inc
lahf
call
outs
xchg
nop
outs
or
imul
or
jmp
adc
mov
push
add
inc
aas
push
push
cmp
mov
push
push
hlt
test
add
jbe
cli
sbb
mov
int3
xor
sub
add
inc
cmp
push
ins
lahf
loop
sete
ror
cld
ret
add
(bad)
push
lock
jmp
add
jmp
(bad)
push
sar
xor
xchg
jmp
clc
or
or
stos
outs
jmp
xor
ss
push
div
add
jmp
inc
sbb
test
stc
add
lea
add
add
mov
cdq
in
ss
and
stc
sbb
rcr
add
mov
xor
mov
clc
pusha
cmp
pop
lea
scas
jne
cmp
push
adc
jmp
sub
xor
mov
fwait
jle
cld
cli
aas
jne
mov
mov
mov
add
pop
and
adc
shl
sbb
fld
rcl
mov
dec
cwde
imul
fdivr
add
add
jne
nop
add
jns
shr
xor
or
mov
in
cli
sar
sub
dec
cmp
mov
mov
jo
jne
gs
fmul
in
cmp
sbb
add
je
pop
cmp
or
lods
pop
test
add
cmp
cmp
repz
or
loope
pushf
jecxz
cmp
add
sbb
mov
sub
je
adc
jb
aas
xor
push
(bad)
push
call
stos
push
xor
mov
scas
pop
loopne
clc
or
add
scas
pop
adc
sbb
cmp
xlat
mov
nop
das
pop
in
and
rol
das
inc
and
xchg
adc
inc
push
fwait
jecxz
fidiv
inc
(bad)
cs
mov
std
push
push
inc
push
push
jne
cwde
icebp
gs
jmp
test
sahf
mov
xor
sub
inc
inc
add
mov
add
or
mov
inc
jo
push
or
test
fiadd
je
jmp
inc
movs
pop
(bad)
shl
mov
sub
div
and
je
daa
or
cmc
fcom
(bad)
loopne
ja
das
mov
add
sbb
ds
mov
rol
(bad)
test
fdivr
add
dec
call
shl
jns
mov
adc
xor
jge
ror
js
mov
loopne
cmp
and
jne
pop
xchg
pop
movd
clc
sub
ins
pop
inc
inc
and
(bad)
call
fsub
sbb
or
dec
inc
loopne
ss
add
movs
dec
inc
sbb
sub
push
or
push
push
push
push
push
push
rcl
pop
inc
cld
push
dec
stos
jmp
ins
ss
pop
mov
inc
or
push
jg
je
add
cmp
adc
je
sub
(bad)
sbb
adc
jb
push
clc
dec
jmp
xchg
js
mov
and
fidivr
fbstp
sbb
aaa
push
cli
adc
jecxz
js
or
shl
fild
ret
mov
fwait
push
pop
and
lea
les
mov
bound
or
pop
xchg
call
push
(bad)
push
in
push
cli
push
jg
imul
adc
jmp
out
dec
adc
sbb
loop
dec
pop
stc
(bad)
js
add
xor
ret
add
jge
add
cs
test
int3
fnstcw
sbb
and
xor
xchg
mov
lahf
fimul
das
push
loop
pop
daa
mov
enter
cdq
xchg
dec
mov
pop
repnz
pop
sbb
fstp
retf
push
es
enter
mov
inc
add
and
icebp
(bad)
jo
add
or
ret
mov
aam
loop
mov
jne
xchg
fisubr
jne
jmp
cmp
je
js
outs
adc
leave
nop
or
adc
sbb
nop
sbb
mov
sub
mov
call
fs
jp
add
and
mov
test
push
dec
test
loope
add
enter
ss
push
fs
cmp
add
adc
ins
or
cld
call
movs
shl
pusha
push
jbe
loop
mov
inc
rcl
add
cli
push
pop
rol
inc
or
ss
adc
popa
inc
sti
jl
hlt
sub
lock
adc
cmp
out
dec
sbb
xchg
add
add
sub
dec
cmps
ret
xlat
mov
sbb
xchg
pop
mov
ins
fdiv
jns
out
push
jne
sub
push
cmp
(bad)
jmp
cs
jne
fs
loope
ret
pop
xchg
cmp
into
cmp
inc
xchg
pop
lea
jl
mov
jmp
jmp
push
mov
jb
or
sub
ss
es
xor
jae
mov
pop
daa
adc
std
mov
test
mov
push
cs
lock
or
jb
js
sbb
dec
mov
ficomp
jbe
loop
add
inc
or
mov
scas
pop
iret
sbb
dec
or
jo
push
or
lods
loop
cmp
mov
frstor
inc
fcomp
or
shr
rcr
ret
mov
cmc
inc
nop
dec
jmp
dec
rol
push
add
into
and
and
sbb
sahf
test
sub
clc
test
fmul
xchg
ret
out
repnz
test
adc
cmp
adc
cld
push
loopne
or
(bad)
je
adc
jnp
inc
clc
inc
mov
mov
jno
jne
retf
sub
pop
mov
ja
xor
jae
addr16
or
mov
jne
cmps
push
xor
fstp
add
fldenv
mov
add
clc
ror
das
les
adc
test
les
jne
mov
jne
mov
sbb
jbe
scas
xchg
or
test
mov
lods
push
sar
inc
adc
push
pop
pop
mov
iret
cmc
xor
or
test
xchg
in
adc
xor
cs
fiadd
(bad)
jge
push
ja
mov
mov
push
fdiv
or
pop
pop
pop
mov
or
pop
add
cmp
sbb
sub
add
or
rol
pop
test
pop
add
repz
test
mov
sub
sub
lahf
into
pop
mov
jne
ja
mov
(bad)
lock
or
jmp
ins
mov
add
push
retf
or
jmp
or
out
push
ror
add
aaa
daa
icebp
inc
in
add
and
jmp
das
push
sbb
add
loope
stc
mov
lds
aas
fidiv
mov
std
add
adc
mov
xlat
cmp
mov
fdivr
push
sbb
jne
and
sbb
sbb
test
out
sub
jbe
jge
pop
loope
sub
cmovo
inc
sub
cmps
test
sub
(bad)
fisubr
cmp
jne
inc
or
sbb
fimul
or
xor
pop
push
dec
stos
push
jns
jecxz
pop
jo
loope
movs
mov
mov
pop
push
push
cmp
push
shl
inc
add
inc
cmp
rol
rol
addr16
push
sub
(bad)
jmp
hlt
rol
(bad)
mov
ret
pop
add
ins
lock
mov
dec
adc
retf
jne
mov
mov
add
adc
add
loop
mov
jmp
sar
inc
and
or
add
sub
mov
mov
or
jne
add
add
mov
not
jns
fimul
clc
cmp
sbb
dec
adc
fcmovb
add
push
inc
mov
neg
sar
sbb
push
sbb
mov
popa
add
outs
(bad)
sbb
push
pop
pop
xor
sub
dec
add
loopne
inc
fistp
mov
sbb
sbb
add
add
aaa
cmp
jg
mov
enter
lock
and
clc
movs
or
xor
add
xor
pop
adc
in
vphaddbd
inc
test
rol
aas
dec
sahf
cli
mov
mov
push
inc
test
aam
shr
out
fwait
out
mov
div
imul
lock
jne
inc
xchg
dec
push
xor
cmp
ds
xabort
sbb
inc
sbb
pop
and
test
inc
fisttp
adc
(bad)
imul
imul
sbb
cli
add
push
push
jbe
aam
add
dec
push
push
rcl
jne
sbb
int3
daa
outs
dec
jle
pop
movs
jle
xor
push
fiadd
(bad)
sbb
cmp
call
int
push
cmp
je
add
mov
rol
push
cmps
mov
pop
push
fdivr
ror
das
add
jle
jl
mov
sbb
cld
xor
movs
shl
mov
daa
xor
or
shl
xor
add
je
add
pop
push
cmp
pop
cmp
and
jae
sar
test
int3
hlt
add
adc
add
jbe
ins
das
mov
shl
mov
jmp
int
push
mov
sub
enter
or
xchg
mov
cwde
loope
(bad)
mov
jmp
add
jo
fcmovne
and
loope
aaa
mov
iret
sbb
cmp
inc
push
pop
lock
shl
push
push
sbb
push
fcom
push
call
inc
inc
push
inc
ret
imul
sub
imul
jbe
hlt
repnz
rcl
adc
popa
cmp
sbb
sub
shl
jno
adc
dec
adc
paddb
xchg
scas
xchg
xchg
enter
add
pop
jg
ds
fnstenv
jnp
cmp
push
outs
xchg
clc
push
inc
out
inc
jl
ficom
jns
dec
jno
sub
or
outs
in
jg
pop
lods
dec
xchg
rcr
or
mov
mov
enter
jg
or
add
adc
jl
cmp
std
(bad)
add
cs
mov
jge
mov
call
jns
leave
jmp
(bad)
adc
jmp
rcl
xchg
ds
mov
lock
in
add
or
test
adc
retf
push
mov
js
inc
add
dec
dec
in
jg
fimul
call
dec
out
rcr
xchg
dec
inc
aaa
jle
pop
sbb
push
bound
shr
lock
add
jmp
xor
mov
mov
jp
loope
loop
add
cmp
or
mov
(bad)
jno
pusha
dec
xchg
pop
sbb
movs
cmp
pop
xchg
nop
and
mov
jno
mov
sar
leave
inc
clc
or
and
mov
or
inc
add
pop
cmp
adc
add
cmp
cld
pop
jbe
lock
adc
bnd
sbb
js
popa
inc
or
pop
and
push
xor
and
cli
push
sbb
jg
je
sub
je
or
je
sub
add
push
loopne
and
cs
push
jae
jmp
wrmsr
cmps
cmp
(bad)
stos
mov
jge
adc
adc
ret
add
adc
inc
data16
in
ja
or
jne
mov
arpl
jmp
xchg
jae
pop
sti
in
mov
add
add
add
dec
cdq
ss
jmp
adc
push
adc
xor
push
je
xchg
push
ss
dec
out
fs
xor
mov
cmp
xor
loopne
test
cmps
(bad)
out
nop
test
sub
cmp
jg
mov
(bad)
js
mov
jmp
sub
call
bswap
iret
sub
mov
and
ins
xchg
or
push
lods
adc
xchg
jl
pop
cmp
das
cwde
shl
xchg
in
xor
xchg
or
or
inc
inc
ret
das
or
mov
leave
add
adc
xchg
inc
or
mov
add
push
push
neg
cmp
loope
fiadd
inc
in
push
or
sub
lahf
lahf
fisttp
cli
je
or
je
div
je
es
or
adc
in
clc
arpl
cmc
idiv
push
mov
or
je
xchg
or
and
mov
js
jno
and
addr16
jmp
push
in
push
dec
dec
pop
ja
jae
push
cmp
scas
neg
test
sbb
add
shl
cmp
call
cli
mov
leave
jg
loopne
cmc
and
dec
and
add
and
mov
js
xor
lods
stos
xor
add
ret
lock
xor
pop
movs
and
lds
or
and
mov
ror
shl
call
mov
adc
cmp
add
fsub
inc
pop
jnp
push
(bad)
sar
dec
rcr
movs
dec
js
or
test
mov
cld
cmp
inc
inc
loopne
jbe
dec
xor
mov
mov
bound
mov
mov
push
jl
adc
dec
mov
unpcklps
xor
imul
sub
adc
aas
in
dec
pushf
cmp
jbe
mov
sub
dec
inc
rcr
jo
outs
add
(bad)
sub
sub
xor
lock
and
in
ret
jmp
adc
jae
mov
lods
push
push
pusha
xor
mov
ds
pop
pmuludq
aam
ds
cwde
les
jne
push
mov
jnp
inc
ja
push
cwde
inc
repnz
add
jmp
push
aas
xor
lock
xchg
rol
jmp
je
or
xor
sbb
pmulhuw
outs
loopne
cmp
add
and
mov
ds
test
daa
adc
sar
adc
add
jl
cwde
push
adc
adc
or
or
test
loopne
inc
(bad)
nop
mov
mov
mov
jbe
lods
mov
arpl
mov
gs
aaa
gs
xor
adc
out
imul
ss
cwde
xchg
push
fistp
loop
sbb
add
xor
inc
je
jnp
sbb
jge
push
jge
sub
pop
mov
(bad)
jg
test
push
add
cmp
dec
sub
inc
jb
or
pop
ins
add
adc
and
ror
rcr
leave
(bad)
dec
or
pop
sti
mov
adc
ret
cli
pop
jg
push
sub
jge
imul
or
xor
inc
aaa
or
mov
es
xor
mov
mov
pop
mov
and
xchg
or
pop
retf
sub
inc
add
out
(bad)
push
pop
fsub
ins
add
loopne
xchg
inc
loopne
inc
or
mov
sbb
lods
inc
sbb
push
push
pop
pop
and
sbb
aam
and
lock
add
mov
and
test
loopne
inc
xchg
test
dec
mov
inc
adc
fdiv
sbb
in
je
xor
sub
dec
push
mov
sub
je
pop
sub
or
popa
mov
add
je
fiadd
cmc
into
cmp
xor
dec
imul
jbe
push
fisubr
cmp
xchg
sub
add
or
xchg
test
lahf
fimul
jae
test
sub
ss
pushf
ret
je
dec
cld
mov
and
push
inc
push
or
or
jle
xchg
je
mov
pusha
or
and
mov
or
dec
add
nop
ret
data16
(bad)
mov
daa
fs
test
dec
bound
test
xchg
jle
add
cmp
xor
xor
or
fild
or
leave
lea
cld
and
or
push
mov
cmp
out
sub
test
out
ror
dec
sub
push
jg
mov
lods
jno
jg
btr
jge
in
or
call
sub
mov
repz
aad
pop
je
add
xchg
into
mov
add
sbb
test
mov
sub
js
push
ds
push
scas
in
cmp
or
sub
mul
jmp
adc
jl
cwde
push
add
adc
in
lds
jnp
mov
mov
ret
cmp
pop
(bad)
jae
cwde
xor
imul
in
sbb
sub
fstp
(bad)
sbb
in
stos
into
mov
lods
add
into
sbb
mov
mov
mov
ins
adc
(bad)
jne
mov
add
inc
sub
push
lea
inc
ficomp
data16
sbb
mov
and
fimul
jo
sbb
adc
inc
xor
sub
imul
cdq
inc
xor
mov
pop
or
jg
and
or
inc
call
jmp
sub
jl
jmp
xor
iret
out
xchg
xor
inc
mov
lahf
not
and
test
mov
sub
gs
idiv
and
and
loopne
push
div
sti
jg
sbb
ss
add
dec
es
xchg
sub
ror
or
cdq
not
fsubr
cmp
xor
or
jle
or
sub
mov
je
sar
imul
(bad)
in
xchg
inc
rol
inc
jo
(bad)
lea
clc
add
sbb
add
adc
lods
push
repnz
push
push
pop
push
adc
imul
and
mov
xchg
inc
or
push
in
or
lods
add
jmp
rcr
or
cmp
jge
pusha
mov
mov
int
rcl
xor
in
and
add
push
popf
adc
jns
movs
js
adc
push
cmps
mov
add
jecxz
xchg
add
add
cmps
mov
fwait
mov
mov
not
or
cmps
icebp
and
lahf
daa
mov
add
mov
xor
scas
sub
adc
cmp
retf
lea
test
ss
and
add
rcr
adc
mov
jge
je
jecxz
pop
mov
dec
push
call
add
sub
cmp
or
sub
sub
ds
xchg
add
adc
fimul
add
push
adc
add
dec
push
push
enter
or
add
adc
pop
and
sbb
add
cmp
adc
leave
add
or
dec
je
pusha
mov
jmp
add
cwde
lock
mov
adc
jmp
mov
inc
push
clc
inc
stc
mov
pop
add
or
pusha
or
jg
rol
pop
and
or
adc
or
xchg
pop
and
and
jmp
pop
push
repnz
xor
stos
fist
ss
xchg
add
or
test
and
outs
pop
adc
stos
call
xchg
sub
xchg
int
fild
add
mov
je
or
sub
cmp
adc
xor
or
nop
sub
or
pavgb
dec
push
in
cmp
xchg
add
loope
sbb
jne
shl
mov
ins
mov
push
shl
adc
cmp
cmp
ret
loopne
adc
add
jge
cmpordps
dec
lds
outs
sub
sub
xchg
pop
je
pop
sbb
jmp
dec
xchg
test
or
je
xor
or
mov
ds
inc
inc
lods
ror
add
add
sub
imul
mov
mov
jecxz
sub
cmp
cmps
ret
add
push
or
jmp
sbb
or
jne
fisttp
je
push
push
mov
mov
popf
pop
pusha
pop
cmp
add
test
lahf
or
xchg
hlt
push
mov
cmp
pop
add
pop
(bad)
in
xor
mov
jne
add
(bad)
outs
call
add
push
mov
cmp
mov
lock
das
lea
cmp
or
jno
sahf
aam
xchg
fiadd
mov
aas
shl
or
(bad)
jns
clc
out
into
inc
cmp
add
cwde
bound
or
and
bound
hlt
and
lods
jle
jo
mov
inc
mov
stc
jo
sub
jge
adc
enter
je
xchg
sub
sbb
pop
and
push
(bad)
movs
inc
loop
inc
cmp
pop
mov
inc
adc
std
and
or
push
sub
je
fdiv
(bad)
pop
inc
jg
(bad)
sub
imul
add
repz
lock
stos
inc
jbe
popa
(bad)
mov
xor
adc
loopne
xchg
daa
pop
mov
iret
dec
aad
fistp
mov
push
rcr
sbb
sub
cmp
cmp
addr16
aad
dec
sbb
daa
jne
add
or
jmp
add
mov
lea
loopne
out
ficom
(bad)
in
rcl
aad
or
push
test
jle
mov
or
sub
rol
mov
iret
mov
dec
pusha
and
pop
jno
or
je
push
(bad)
jmp
lods
clc
xlat
add
loopne
pop
sar
or
mov
mov
(bad)
mov
pop
les
ja
in
pushf
dec
jb
inc
inc
mov
(bad)
test
out
cs
xor
stos
xchg
jae
add
les
stos
and
cmp
or
test
jnp
and
sbb
loope
add
je
or
les
ror
mov
(bad)
rol
push
pop
push
jb
daa
es
push
iret
mov
xchg
ud0
sar
jb
add
xchg
cmp
adc
add
adc
or
adc
outs
sub
push
jnp
push
jge
push
call
mov
mov
mov
es
fdiv
jbe
mov
inc
mov
pushf
sub
mov
jg
and
xor
mov
sub
fs
mov
dec
(bad)
sub
aam
frstor
jns
aaa
push
mov
mov
dec
push
mov
rol
push
and
add
xchg
int3
jns
mov
mov
sti
add
and
push
sub
lea
push
push
xlat
mov
movs
sbb
lea
push
push
aad
mov
nop
and
mov
(bad)
aaa
add
xor
mov
sar
mov
sub
pop
or
adc
pushf
and
dec
add
mov
cmp
cmp
stos
push
dec
pop
or
sub
add
imul
and
adc
addr16
aas
cmp
or
cs
out
add
adc
stos
hlt
or
jo
mov
add
add
sub
movs
fimul
sub
jmp
adc
int
mov
cmp
mov
or
hlt
sub
pop
cmps
lods
mov
mov
into
fcomp
cmp
adc
mov
sbb
lods
ss
pushf
xor
shl
pushf
dec
mov
cmp
mov
jb
push
lds
jl
push
lods
jmp
aas
in
in
adc
sub
cld
test
pushf
dec
sbb
inc
add
xlat
sbb
adc
cmp
je
dec
loopne
push
lahf
int3
push
dec
mov
test
repz
(bad)
sub
(bad)
enter
push
leave
dec
add
or
mov
inc
jle
ror
(bad)
or
lods
sti
shl
adc
sti
lock
pop
push
mov
cmp
jae
pop
mov
sbb
fld
out
ret
sbb
mov
lods
mov
xor
clc
fsubr
pushf
out
js
cdq
add
cld
mov
push
movs
inc
push
ret
imul
push
fnstenv
ins
sbb
mov
mov
push
sbb
cmp
mov
jne
leave
jge
ror
shl
mov
btr
je
pushf
pop
inc
cmp
pcmpeqw
scas
add
sub
dec
push
add
rcr
sahf
mov
adc
ja
pop
push
cdq
cld
or
out
loope
je
rcl
or
jb
inc
cld
sar
cmp
mov
add
jns
fcom
cmps
(bad)
push
es
shl
push
sbb
into
pop
sbb
lods
cdq
push
fs
mov
hlt
dec
lahf
pop
and
loopne
or
imul
in
adc
clc
add
push
pushf
lock
sar
push
pop
mov
pop
dec
lock
dec
popf
es
popa
enter
loope
hlt
jle
jl
scas
pop
jno
sub
lea
ins
push
push
push
sbb
lea
loop
add
mov
pop
adc
xchg
push
mov
and
xchg
cmps
test
lea
lods
push
jmp
aad
lock
push
int
je
xchg
data16
shl
xchg
ret
or
and
aas
stc
jmp
xchg
ficom
sub
or
leave
push
and
add
mov
mov
sub
div
dec
je
stc
push
je
inc
push
neg
loope
pop
jmp
pop
cld
dec
(bad)
scas
xchg
popf
xchg
adc
or
pop
push
leave
and
scas
jecxz
mov
iret
dec
adc
addr16
xor
dec
in
sub
cmp
or
mov
pop
pop
jo
ss
pusha
jno
bnd
lds
push
xchg
loopne
in
fwait
test
jge
mov
jne
popa
adc
mov
inc
add
jne
aaa
mov
es
dec
lea
movs
mov
call
or
add
push
jne
in
cmp
cli
sbb
sub
push
mov
aad
dec
rcl
mov
cmp
jge
adc
jmp
pushf
inc
adc
or
pop
out
loop
add
adc
test
imul
mov
xchg
add
push
xlat
lock
mov
or
jo
int3
pop
adc
mov
out
jmp
mov
pop
add
mov
nop
add
(bad)
movs
jmp
push
unpcklps
mov
stos
leave
push
ror
loopne
mov
sbb
fisubr
dec
imul
sahf
test
hlt
dec
mov
add
fisttp
inc
mov
pop
xlat
data16
leave
fiadd
or
jmp
inc
je
cwde
or
fstsw
imul
xor
or
mov
mov
xchg
inc
outs
xchg
sub
mov
jp
xchg
movs
in
jle
sbb
dec
pushf
fild
cmp
xor
jnp
dec
and
xlat
mov
push
fist
push
sub
adc
mov
jmp
and
imul
les
jmp
adc
jl
popf
jle
fmul
jg
sub
pop
mov
add
add
adc
mov
lock
scas
shl
mov
mov
pop
sub
pop
callw
xchg
mov
lods
push
(bad)
pop
dec
popa
loopne
xor
add
cmp
mov
test
int
inc
cmp
inc
loope
or
adc
inc
xchg
sti
popa
test
(bad)
xor
cwde
xor
movs
jb
fs
es
and
loope
sub
ja
loope
push
inc
mov
add
sub
test
jmp
ror
std
stos
je
aad
mov
sub
inc
stos
jecxz
sar
xor
xchg
pop
mov
sbb
test
dec
push
fmul
cs
xor
dec
add
jecxz
outs
div
sbb
mov
mov
push
pusha
xchg
mov
mov
nop
popa
or
mov
adc
cmp
retf
mov
js
cmp
ins
dec
test
sub
and
outs
jnp
pusha
test
mov
dec
test
loopne
add
imul
xor
lahf
jge
add
jmp
adc
lea
xor
jmp
cmp
jl
add
or
push
je
jmp
pop
or
push
add
in
add
pop
xor
or
add
mov
daa
je
dec
mov
ins
les
jno
xor
mov
add
xor
inc
inc
inc
jne
dec
push
or
inc
shl
fbstp
mov
inc
iret
add
mov
test
fwait
and
sub
xor
mov
clc
aaa
lods
xchg
inc
shl
lea
or
ret
push
add
adc
add
cs
repz
fdivrp
pop
repnz
out
push
and
sbb
iret
jnp
adc
rol
(bad)
mov
pushf
mov
test
sub
jmp
sub
inc
cdq
fs
dec
inc
inc
inc
mov
jmp
cmp
jmp
xor
cmp
xlat
mov
mov
test
sub
and
call
adc
(bad)
fisub
pop
ins
test
test
imul
clc
inc
outs
cwde
int3
or
pop
dec
les
movs
pop
inc
test
in
pop
adc
stos
mov
and
push
xchg
xor
outs
mov
adc
push
add
arpl
dec
call
jl
or
mov
mov
ss
lock
or
(bad)
mov
mov
add
dec
inc
fidiv
sub
xchg
movs
cli
ins
xchg
push
xchg
cmp
mov
leave
es
jne
mov
je
popf
call
push
mov
shl
jne
retf
jne
mov
pop
jg
inc
add
call
mov
mov
pop
and
shr
adc
push
add
xchg
loope
or
mov
fadd
cld
xor
mov
clc
inc
inc
lea
rcr
mov
into
ins
jbe
xor
retf
pop
bound
loope
movhps
out
imul
sub
adc
push
ins
in
rcr
test
pop
push
movs
ja
ret
sbb
adc
je
aaa
mov
popa
jo
add
sub
mov
xor
loope
jb
shl
test
pop
pop
pop
adc
cmp
mov
xchg
xor
dec
and
adc
movs
mov
(bad)
cli
and
or
mov
inc
add
enter
add
push
inc
mov
mov
fist
and
inc
inc
adc
push
ror
jmp
or
imul
ds
xchg
mov
daa
xor
jne
cli
pusha
fld
lods
cmp
push
push
enter
or
jne
push
ins
sbb
data16
hlt
push
pop
and
sbb
cmp
fisttp
xchg
test
add
adc
pop
cmc
(bad)
ret
sbb
ret
push
call
movs
(bad)
inc
xchg
jnp
in
mov
aaa
jo
test
jle
dec
outs
lods
jp
push
push
cmp
and
mov
scas
push
push
dec
movs
sbb
(bad)
and
mov
adc
cmp
aas
sub
mov
adc
add
jecxz
jle
xor
cmp
ror
or
mov
add
dec
adc
push
push
inc
add
pop
sar
and
pushf
je
xor
mov
sub
adc
sub
popf
mov
test
or
push
sub
mov
inc
js
cmp
jge
mov
scas
ror
pop
in
jo
xlat
or
and
js
inc
popf
xor
cdq
mov
mov
mov
add
inc
and
ja
mov
sbb
std
xchg
js
inc
push
je
push
je
inc
daa
add
ret
movs
sub
dec
inc
nop
rcr
(bad)
mov
adc
bound
mov
mov
add
xor
mov
sbb
xor
cmp
rcr
jle
popa
jge
jl
mov
jne
(bad)
adc
pop
mov
jne
jne
push
push
ficomp
stc
mov
test
cmp
sub
sub
sub
push
jmp
or
inc
retf
add
add
lar
add
popa
or
or
push
sub
push
ins
inc
or
and
add
push
mov
mov
cmp
pop
or
clc
sub
adc
retf
sub
int
xor
mov
pop
daa
dec
and
mov
cmp
icebp
jl
out
or
fxsave
leave
imul
push
pop
(bad)
and
test
shl
daa
jmp
mov
gs
xor
cdq
pop
pushf
inc
sbb
inc
fmul
sbb
push
mov
mov
(bad)
mov
xchg
add
push
lods
jnp
mov
popa
ret
jae
jne
or
push
jl
or
in
mov
cmp
enter
sub
mov
scas
jo
adc
rcr
jmp
sub
sub
and
xchg
jnp
adc
jl
xor
ret
cmp
jle
rol
dec
sub
push
fiadd
xor
jno
jge
add
sub
call
addr16
or
sub
xchg
lea
cmp
push
or
or
or
arpl
loope
or
outs
(bad)
push
clc
adc
loop
icebp
imul
mov
add
jae
nop
cmp
lea
and
inc
sub
mov
xor
add
aam
add
push
add
mov
add
and
in
or
icebp
je
mov
inc
sub
shr
mov
loop
sbb
or
(bad)
jmp
jmp
outs
pop
xor
sar
push
sbb
cmp
mov
jmp
sub
imul
ret
add
or
jl
fistp
xchg
ins
mov
or
shr
or
daa
jmp
or
das
dec
clc
rol
and
fsub
jg
lock
or
fsub
add
(bad)
iret
mov
movs
loop
add
int3
nop
stos
fwait
push
mov
rcr
cmp
and
ss
sbb
sbb
je
jmp
xor
or
or
rcr
pop
or
mov
jmp
sub
cmps
adc
push
inc
mov
in
xor
and
sub
mov
xchg
add
ret
dec
adc
loope
fiadd
add
sbb
sbb
fcomp
js
popf
push
or
jnp
push
push
jno
mov
mov
dec
out
pop
mov
bound
mov
sbb
mov
push
and
ds
jo
pop
mov
std
sub
dec
scas
push
xchg
dec
cmp
and
add
ja
add
pop
sub
pop
inc
and
dec
dec
jl
imul
imul
rcr
arpl
sbb
sub
xchg
jno
stos
add
arpl
inc
inc
sbb
mov
js
mov
add
xchg
neg
mov
jg
or
scas
sbb
loopne
fs
mov
enter
sbb
jmp
fnstsw
mov
jmp
je
jmp
or
je
sti
fcomp
retf
mov
jmp
test
dec
lock
ins
xchg
jmp
pusha
jno
lock
lea
sbb
jmp
or
sbb
iret
dec
or
jmp
inc
or
sub
leave
jmp
inc
inc
jmp
inc
movs
or
dec
movs
lds
pop
cmp
ss
les
xchg
mov
and
pop
mov
jns
push
mov
adc
cmp
jne
or
jne
out
cmp
sbb
push
lock
loopne
into
sbb
pusha
sub
cmp
fsub
sbb
inc
and
sbb
loop
ins
test
add
mov
call
hlt
jbe
in
jno
mov
ret
js
sbb
add
adc
jmp
jmp
bound
add
fadd
sub
add
mov
pop
jl
(bad)
call
mov
outs
mov
dec
mov
xor
mov
or
push
push
and
push
ret
or
jnp
mov
(bad)
push
mov
pop
mov
pop
mov
push
nop
or
cwde
les
gs
add
cmp
xor
mov
jmp
popf
push
cwde
or
dec
adc
or
ror
out
jb
outs
cmp
sbb
jmp
inc
cmp
mov
add
ss
inc
(bad)
xor
jmp
aas
add
mov
ins
jmp
add
jmp
je
enter
aas
ins
js
lock
loope
jge
(bad)
cli
inc
pop
rol
in
iret
in
push
ror
adc
add
push
mov
inc
and
(bad)
sbb
cmp
push
inc
mov
push
pop
add
(bad)
or
in
loopne
lock
test
ins
or
add
mov
sub
pop
dec
cmp
ret
pop
or
inc
or
jne
hlt
xor
ret
push
sbb
ret
getsec
cmps
mov
inc
enter
xadd
push
les
and
or
dec
retf
xor
enter
lea
loopne
(bad)
xchg
inc
mov
(bad)
sbb
out
(bad)
stos
mov
in
jne
std
ret
adc
xor
retf
mov
ss
and
shr
sbb
shl
and
sub
xchg
or
and
jb
(bad)
call
test
xor
jno
xlat
ins
cld
shl
sub
mov
push
rcl
sbb
inc
fcom
in
pop
stos
cmp
xchg
gs
jge
jne
test
movs
popf
movs
push
mov
inc
jecxz
cmp
sub
stos
mov
dec
adc
rol
outs
test
push
cmp
sbb
cdq
jp
js
inc
cmp
jne
lea
xchg
jne
xchg
cmp
mov
jnp
inc
(bad)
test
mov
pop
sahf
arpl
daa
popf
mov
jge
push
loope
jl
ror
adc
jecxz
push
dec
sub
mov
sub
xchg
cmps
push
sbb
iret
inc
pop
and
inc
jmp
shl
pop
or
sbb
cmp
jle
dec
mov
jge
into
dec
jl
je
icebp
jne
add
lea
(bad)
hlt
xor
mov
inc
into
or
clc
leave
add
pop
cdq
leave
dec
sete
mov
add
xchg
ror
cmp
test
psllw
icebp
outs
mov
and
fmul
adc
jg
or
push
les
lea
push
push
dec
push
mov
cmp
ins
imul
mov
lahf
mov
jmp
xchg
dec
mov
mov
outs
inc
push
fcmovnu
pop
iret
rol
sbb
lea
cmp
mov
push
inc
inc
push
jl
test
add
inc
shr
mov
das
loopne
xchg
(bad)
clc
pop
call
push
dec
mov
je
sbb
popa
outs
rol
jne
jg
dec
sar
or
(bad)
jmp
jmp
adc
ja
sub
dec
sbb
push
dec
(bad)
mov
fdiv
mov
inc
sub
shr
pop
cmc
sbb
ins
fild
adc
jge
mov
mov
push
mov
dec
pop
stos
dec
add
sub
mul
xor
or
invd
push
sub
dec
mov
fisubr
mov
add
outs
scas
add
sub
add
je
xor
dec
xor
jge
aam
xor
fdivr
mov
sahf
dec
or
or
add
call
mov
xchg
adc
add
add
(bad)
out
pop
rol
push
mov
or
cmp
lock
ret
or
test
mov
mov
jmp
(bad)
(bad)
push
lea
mov
add
xchg
and
inc
inc
jae
scas
dec
cld
push
stos
sbb
jmp
shl
sbb
or
or
retf
jo
(bad)
retf
inc
xor
sahf
imul
test
hlt
xchg
rcr
in
add
xchg
sub
sbb
dec
jl
in
pop
in
xchg
and
je
adc
push
rcl
je
inc
sub
cmps
fidivr
or
sub
ror
sbb
push
or
mov
and
test
xchg
jp
dec
dec
xchg
ret
sub
dec
sbb
cmp
pmaddwd
hlt
outs
mov
mov
shl
sbb
test
inc
sbb
xor
inc
ss
sub
sub
in
popa
and
jl
test
pusha
sub
sub
adc
test
lahf
push
add
sub
sbb
mov
mov
sub
outs
jbe
sub
aas
jo
add
adc
mov
add
or
cdq
adc
mov
adc
adc
mov
cmc
adc
adc
clc
cmps
sbb
push
jb
push
push
dec
fstp
pop
sub
push
out
cmp
or
jl
adc
sbb
jo
adc
pop
movs
fadd
push
cmp
add
add
shl
inc
and
pop
jmp
inc
push
inc
add
addr16
into
(bad)
rcl
add
pop
shr
stos
mov
rol
leave
sbb
lods
adc
add
popa
sbb
std
rcl
icebp
inc
add
dec
in
scas
lods
xor
retf
neg
mov
nop
or
cmc
loope
inc
jne
xor
cs
add
add
xchg
sbb
fdiv
pusha
out
adc
jne
xchg
push
sub
nop
dec
pop
jle
sar
sbb
jne
ds
ds
cmp
inc
jne
push
fadd
jne
and
div
mov
cmp
adc
add
dec
jp
mov
push
sbb
and
jmp
sub
fisubr
mov
std
out
ror
loope
xor
lock
(bad)
add
ins
push
add
stos
or
cmps
mov
pushf
cmp
aad
inc
add
sbb
cmc
retf
shr
mov
xor
mov
add
fwait
lods
and
lahf
lahf
add
cmps
or
cmc
sub
lods
push
dec
mov
sbb
ds
add
inc
clc
dec
add
jge
inc
push
jmp
popa
inc
imul
loop
mov
test
cmovbe
jmp
psubusb
mov
repnz
add
push
lea
mov
mov
ss
sub
mov
cmp
inc
adc
push
or
jl
cli
push
mov
ficomp
je
test
pop
push
std
push
loop
dec
jmp
mov
pop
or
loopne
add
into
sub
or
push
jecxz
jmp
int
mov
xor
fbld
jo
mov
add
fcomp
add
sub
jl
sub
mov
fwait
inc
xor
movs
push
or
sbb
push
push
add
bnd
and
retf
dec
add
sub
ret
cmp
scas
push
inc
or
or
into
and
mov
add
jl
add
cld
sbb
dec
inc
add
ins
jnp
fisttp
test
fmul
dec
dec
add
adc
sub
or
pop
cmc
in
dec
pop
mov
cmp
out
call
add
loop
adc
aam
and
mov
dec
add
imul
dec
cdq
fucom
sbb
rcr
dec
add
add
add
add
or
add
dec
mov
adc
cmp
mov
fsubr
push
mov
add
sub
in
adc
pop
cmp
sub
push
retf
add
push
rol
dec
pop
add
call
push
xor
leave
xor
(bad)
mov
xor
nop
or
inc
xor
cs
out
inc
or
dec
or
dec
push
push
xor
jmp
dec
stos
cmp
mov
cli
dec
add
xchg
retf
pop
int3
mov
(bad)
dec
stc
mov
adc
js
sub
or
add
mov
sbb
push
push
mov
or
push
je
sbb
jne
push
jmp
cmp
cld
sub
mov
jl
sub
sbb
sbb
mov
fdivp
sbb
mov
enter
and
icebp
and
fist
mov
ds
and
jmp
push
je
push
xchg
cmp
jp
fistp
jmp
mov
ins
neg
sbb
or
pop
add
hlt
into
adc
jmp
mov
sub
mov
mov
jle
push
ja
add
xor
fs
pop
mov
inc
jae
inc
pop
jmp
es
push
pop
mov
add
es
mov
push
add
call
or
and
mov
mov
lea
lea
add
inc
sbb
pop
imul
sbb
dec
or
inc
push
int
cmp
add
cmp
mov
push
push
push
in
or
xor
mov
dec
lods
mov
push
dec
pop
test
pop
and
mov
sbb
sbb
jle
adc
pop
jbe
fild
sub
shr
mov
daa
push
dec
call
push
fst
jmp
add
mov
inc
lods
xlat
add
push
or
mov
mov
mov
push
data16
jnp
sub
sub
push
inc
push
adc
add
inc
sbb
push
pushf
sbb
cmp
xor
jecxz
inc
inc
lods
xor
mov
mov
add
adc
sbb
dec
sbb
lea
pop
push
rol
shl
push
xchg
fs
or
lock
pop
push
in
xchg
cmp
and
adc
jecxz
inc
js
mov
loopne
imul
imul
push
and
dec
push
adc
or
repz
inc
or
jle
test
pusha
xor
pop
loopne
xor
mov
loopne
cmp
lock
(bad)
sub
(bad)
dec
arpl
fidivr
xor
mov
imul
add
or
ds
inc
dec
or
mov
sbb
sub
rcl
or
add
adc
push
fiadd
xor
xchg
dec
cmp
mul
inc
or
sbb
or
mov
inc
xchg
cmp
jbe
test
push
je
push
fdivr
add
dec
arpl
sbb
push
xchg
add
adc
fld
dec
or
add
pop
lock
pop
inc
or
sbb
cld
mov
or
call
adc
dec
in
sub
inc
retw
inc
lock
fs
fsub
ret
clc
xor
add
inc
stc
add
push
mov
mov
fiadd
xor
mov
inc
clc
(bad)
adc
xchg
and
mov
mov
push
cmp
in
add
sbb
div
xchg
cs
mov
mov
add
and
push
pop
stos
cmc
pop
div
scas
xchg
ds
and
jmp
adc
xor
add
or
or
(bad)
mov
adc
mov
add
sub
cmp
jge
add
rcr
dec
inc
ins
(bad)
aaa
ss
test
mov
xor
repz
enter
outs
mov
cmp
ds
cmp
sbb
call
pop
add
cmp
outs
or
(bad)
xor
mov
xor
retf
push
mov
neg
add
jmp
cmp
mov
out
gs
fild
and
shl
jmp
sub
shl
pop
cmps
xor
fild
in
pop
(bad)
cmp
je
xchg
adc
jg
pop
movs
cli
aas
inc
fbld
and
add
dec
lods
mov
cmp
mov
push
mov
pop
fild
mov
mov
jecxz
jo
and
mov
adc
test
aaa
push
sub
movs
out
adc
jg
scas
jmp
mov
inc
sbb
xor
fidivr
retf
cmp
mov
mov
dec
sti
imul
sbb
out
cmp
inc
add
mov
add
push
add
or
test
xchg
sub
jmp
add
or
push
ror
sbb
lea
shl
mov
adc
pop
pop
adc
dec
add
adc
and
sbb
or
inc
dec
in
cmp
add
test
outs
in
out
call
mov
stc
xchg
iret
jae
push
stos
call
add
pop
add
add
int
out
mov
sti
call
mov
xchg
xor
sti
(bad)
pop
inc
mov
cli
push
mov
xlat
pop
cs
and
cmp
ins
sbb
sbb
jnp
fldcw
push
ds
push
neg
cmp
adc
shl
pop
cmp
repz
sub
(bad)
enter
or
mov
les
fs
repz
repnz
xchg
ins
lds
in
(bad)
icebp
mov
mov
nop
cmc
push
push
in
cli
jmp
pop
(bad)
sbb
dec
and
mov
mov
stos
push
add
icebp
dec
icebp
lods
jmp
rcr
add
fs
and
cwde
sbb
push
arpl
adc
push
and
xlat
mov
push
mov
add
mov
inc
and
rcr
push
pop
pusha
dec
in
sub
sbb
push
add
cdq
sub
adc
test
adc
push
test
mov
stos
call
enter
jecxz
pop
cmp
in
add
in
sti
fmul
dec
adc
sub
or
xor
or
dec
jl
(bad)
fstp
sub
adc
sub
dec
or
add
inc
and
xchg
repz
dec
inc
push
adc
iret
push
pusha
xor
loop
fmul
cdq
cmp
or
mov
mov
pop
xor
xchg
add
dec
add
popa
pusha
add
icebp
push
je
pop
sub
or
mov
lea
inc
or
dec
nop
add
jp
push
push
xchg
and
xchg
pop
sub
xchg
popa
jl
mov
and
inc
add
cmp
pop
fstp
and
ret
mov
mov
scas
cli
pop
pop
lds
cwde
dec
pop
inc
shl
and
pop
xchg
ds
adc
sub
fstp
dec
shl
jmp
jg
xchg
icebp
and
and
mov
push
jne
scas
add
(bad)
mov
fcmovnbe
jb
xchg
inc
test
loope
cld
lea
leave
jbe
nop
sti
mov
test
outs
retf
and
ror
int3
(bad)
cmp
test
adc
cli
push
adc
pop
mov
inc
mov
and
test
loope
sar
mov
test
(bad)
(bad)
pop
cwde
lods
inc
ins
ss
lea
pop
and
sbb
test
push
mov
jle
push
adc
cmp
pop
mov
rcr
call
outs
cmps
dec
cmp
mov
adc
test
adc
pop
add
nop
push
loope
add
xor
enter
add
jno
push
mov
clc
add
ror
jne
jmp
xor
ja
or
jg
lock
jge
mov
cmp
jb
push
pusha
push
inc
mov
bound
and
sar
clc
js
rol
call
lea
dec
push
ja
mov
cmp
jmp
sub
hlt
push
sub
out
and
push
jns
adc
out
jmp
rol
pushf
cdq
jne
arpl
lock
jl
arpl
add
inc
push
push
mov
sbb
ins
mul
pop
or
adc
push
jl
add
pusha
dec
lock
lock
movs
cmp
mov
sbb
pusha
add
and
xlat
xchg
inc
bound
or
xor
lods
popa
fmul
ret
in
or
jp
jmp
and
pop
test
pop
adc
sti
sbb
mov
pop
push
pop
push
push
adc
gs
ss
sbb
jmp
adc
pushf
push
push
je
rol
bound
and
mov
pop
push
jbe
mov
adc
pop
dec
inc
push
arpl
lock
jno
cmps
push
and
push
and
add
or
add
pop
outs
jg
or
and
cmp
jae
in
fcomp
lds
xor
shr
and
gs
sbb
jg
jecxz
cwde
sbb
dec
dec
test
es
push
test
xor
pop
pop
add
inc
add
je
xchg
dec
or
lea
push
sub
pusha
push
inc
fiadd
mov
pop
mov
add
push
push
jmp
cmp
xor
cmp
jl
aas
sub
add
sub
pop
and
sub
push
ss
cmp
mov
jge
adc
push
cmp
lea
sbb
fdivr
inc
(bad)
mov
add
xor
mov
add
add
push
mov
cmc
adc
xor
les
add
test
or
mov
add
loopne
adc
ja
jge
cld
pusha
mov
loopne
(bad)
xchg
cmp
aaa
je
push
mov
pusha
call
pop
push
dec
add
sbb
jg
(bad)
rol
mov
clc
loop
daa
xor
(bad)
mov
sbb
add
lods
nop
clc
mov
imul
sbb
add
cmp
add
or
or
pop
sub
mov
cmp
and
call
or
xchg
rcr
pop
jne
rol
mov
or
push
push
sbb
loope
sub
iret
lods
ret
push
fist
dec
mov
test
pop
mov
and
xor
ret
inc
jo
aaa
jmp
inc
add
dec
(bad)
sub
nop
mov
stc
dec
adc
cmp
add
xchg
adc
add
mov
dec
mov
(bad)
mov
loop
mov
lea
mov
push
pop
inc
stos
inc
dec
push
retf
and
shl
dec
or
jmp
(bad)
sbb
out
adc
add
mov
sbb
enter
sbb
aam
adc
loopne
jne
pusha
and
add
jns
cmps
sbb
retf
add
push
neg
xor
pop
ret
adc
div
pop
je
inc
pop
je
push
dec
test
pop
jne
jns
adc
sub
dec
and
jns
je
enter
popa
bound
test
xchg
aam
add
adc
fstp
xor
mov
push
adc
inc
test
rol
inc
sub
push
add
push
mov
loop
jbe
jbe
push
add
xchg
je
add
mov
jle
aaa
push
imul
push
pop
mov
push
add
and
or
div
outs
xor
cli
mov
pusha
sbb
mov
add
ret
sbb
pusha
pop
pop
push
icebp
push
xor
adc
jmp
push
xlat
or
push
sub
data16
(bad)
(bad)
icebp
pop
pop
xor
and
mov
dec
movs
or
cmc
dec
inc
dec
mov
sbb
inc
jmp
loope
repz
call
int
dec
mov
push
mov
add
push
cmps
jno
mov
jb
inc
jbe
hlt
test
rcl
adc
outs
test
(bad)
test
cmp
jb
or
and
sbb
(bad)
and
test
loop
je
fwait
xor
mov
dec
cmp
cmp
inc
loopne
sbb
jne
ret
das
add
cmp
cmp
adc
xor
lods
fadd
adc
dec
fld
jae
xlat
push
or
inc
hlt
retf
add
add
dec
out
push
push
push
adc
mov
pop
sub
fnstenv
push
loop
cmp
jne
add
sbb
and
ret
or
pop
addr16
push
jmp
sbb
mov
jne
in
sub
pop
inc
add
push
xchg
jbe
mov
xchg
xor
pop
xor
pushf
pusha
pop
mov
or
mov
xor
mov
inc
xchg
add
movs
loopne
pop
(bad)
xchg
inc
xor
shl
je
add
push
imul
adc
je
jne
add
xor
pop
add
fimul
ss
out
dec
xor
cmc
out
cwde
fwait
jnp
mov
movzx
mov
and
mov
sub
jbe
shl
push
(bad)
in
mov
and
test
lahf
add
out
test
popf
add
out
xchg
adc
ja
lods
sub
rcr
or
mov
pop
cmp
enter
or
add
test
cwde
loop
or
inc
les
or
sti
cmp
int3
out
mul
add
dec
xchg
inc
and
test
dec
fist
jmp
cmp
xor
jo
dec
test
inc
jnp
and
sar
mov
xor
jne
push
jo
daa
sub
xchg
xlat
mov
ret
dec
adc
js
(bad)
jmp
bound
and
inc
add
lea
cmova
lahf
cs
cmp
jmp
sub
xchg
dec
xchg
sub
xchg
mov
push
ror
sub
int
movs
in
mov
loop
adc
push
adc
or
aad
pop
xor
jno
pop
jb
mov
ds
cmps
ins
pop
pop
(bad)
cmp
gs
inc
jg
fistp
and
test
jmp
add
lods
sub
pop
and
adc
cmp
emms
je
(bad)
pop
adc
push
rol
cmp
cmp
clc
mov
or
fs
cmp
push
xor
test
xor
xor
and
clc
or
sbb
pop
mov
xor
xchg
sub
and
dec
loope
adc
mov
and
add
sub
dec
sub
xor
mov
mov
cs
and
fwait
adc
das
dec
sbb
mov
dec
adc
or
mov
adc
mov
adc
imul
adc
and
out
and
test
dec
or
pop
in
and
adc
jge
test
mov
or
or
jb
jmp
or
test
add
cmp
sbb
sbb
ret
arpl
jne
inc
dec
mov
push
add
or
ficom
cdq
or
add
or
in
or
or
add
mov
je
or
je
ins
xchg
xor
sub
loopne
mov
add
or
or
adc
cmp
xor
dec
out
dec
push
lock
mov
jmp
jmp
add
or
xchg
add
inc
or
and
add
dec
dec
sub
es
dec
gs
sbb
rol
mov
(bad)
and
jnp
stos
hlt
and
test
(bad)
stos
sub
clc
(bad)
clc
(bad)
sbb
cmp
test
ja
push
mov
std
or
lock
in
and
inc
shl
enter
lock
inc
inc
mov
pop
push
in
or
leave
enter
sub
push
mov
stc
pop
push
mov
mov
jmp
loopne
or
xor
(bad)
out
or
mov
shl
add
or
outs
add
xchg
lahf
cmps
adc
dec
and
cmps
or
push
int3
push
or
xor
fs
add
loop
inc
out
add
dec
sub
jo
sbb
test
cmc
add
add
xchg
inc
test
popa
loopne
in
arpl
clc
mov
cmp
hlt
ds
push
imul
pop
mov
arpl
cmp
test
sti
retf
dec
mov
adc
adc
in
mov
mov
out
jnp
icebp
inc
or
popf
fsub
or
enter
fcomp
mov
popf
pop
cmp
push
mov
jo
adc
mov
shl
cmc
mov
mov
or
sbb
jb
xchg
ficom
mov
enter
adc
or
aaa
mov
daa
jg
lods
enter
add
pop
inc
inc
jle
test
fidiv
or
mov
or
lock
sub
mov
test
jne
add
cmc
lock
inc
aad
pop
add
sbb
test
cmp
fwait
lea
jge
or
outs
std
cmp
je
xchg
cs
and
pop
sub
inc
shr
cmc
sub
idiv
adc
dec
sub
jb
or
scas
push
pop
or
xchg
aaa
inc
mov
outs
ss
pop
lock
cmp
mov
js
loopne
jnp
and
lods
pop
push
sbb
lock
in
sbb
xchg
sar
shl
shl
les
(bad)
mov
pop
aad
(bad)
add
fimul
cmp
loop
clc
ja
cmp
jg
mov
pop
inc
arpl
add
xchg
fcomp
test
cwde
iret
fld
add
and
mov
mov
adc
and
test
push
cmp
por
mov
xor
mov
or
sub
pop
je
test
ss
shl
jl
cmp
ds
sub
jp
ret
or
pop
add
jo
xor
ret
out
cmp
pop
dec
pop
or
lock
add
xor
test
or
dec
add
push
fst
fwait
scas
pop
pop
les
les
shl
push
sbb
test
shr
enter
les
push
cmp
sub
daa
jno
retf
and
lock
out
bnd
shr
mov
sbb
add
sbb
loopne
add
mov
dec
adc
test
add
dec
addr16
pshufw
cwde
mov
inc
and
fisubr
adc
and
cmps
jge
ror
adc
cmp
(bad)
cmp
xchg
test
adc
out
push
xor
inc
test
mov
ret
out
and
test
jb
mov
pop
push
add
or
or
inc
lds
mov
or
and
mov
ja
cmps
js
xor
mov
pop
sub
(bad)
aam
mov
cmp
and
xchg
fidivr
and
out
dec
ret
mov
lods
and
test
or
mov
scas
fsub
test
fild
mul
or
je
add
inc
jnp
mov
test
dec
rol
lds
mov
add
in
jmp
mov
xor
pusha
push
int3
sub
inc
sub
add
iret
cmp
xor
add
dec
mov
and
mov
mov
add
sub
jb
and
push
sub
mov
jb
mov
out
call
mov
xor
imul
add
cmps
clc
scas
jmp
push
mov
mov
ret
jmp
imul
or
(bad)
stos
add
test
rol
ret
pop
shr
add
or
adc
adc
test
clc
mov
movs
mov
lods
push
cmp
lahf
icebp
pop
test
push
or
push
add
mov
pop
jb
pusha
rcr
jl
cwde
imul
test
scas
cwde
xchg
mov
dec
cmps
cwde
cwde
sub
movs
xlat
mov
sub
xlat
cmp
mov
pop
jne
cmp
mov
aas
mov
test
inc
out
xchg
idiv
xor
xor
adc
nop
xor
jle
xlat
adc
test
jg
sub
sti
or
mov
lea
pusha
(bad)
ins
jle
mov
hlt
fisttp
pop
mov
jge
stc
ror
xor
rcl
add
sbb
inc
mov
gs
scas
into
add
jb
add
adc
icebp
jnp
fnstcw
test
lock
jne
test
push
test
jnp
sub
ror
push
inc
idiv
mov
xchg
punpckldq
inc
pop
ja
xor
pop
outs
adc
xor
mov
fmul
or
mov
out
and
or
bound
or
sti
int
mov
mov
inc
cmp
inc
gs
mov
(bad)
out
rcr
jo
jo
xchg
ret
popa
pusha
ja
(bad)
push
adc
call
jo
jo
out
mov
push
or
cmps
sar
jne
add
cmp
ret
mov
bound
sbb
popa
xchg
jbe
add
fcom
xor
pop
je
popa
adc
mov
cmp
js
rcl
cld
enter
xor
add
(bad)
in
cmc
mov
dec
or
jle
loope
add
push
ja
mov
pop
nop
jle
jg
shl
outs
lock
arpl
cmp
rol
sub
push
imul
or
loope
inc
and
(bad)
rol
ror
leave
push
call
fs
adc
ins
push
fs
(bad)
mov
sar
mov
in
mov
mov
scas
push
adc
movs
inc
sbb
push
sub
aam
ds
sub
js
(bad)
je
add
jg
sbb
cmp
(bad)
sahf
xchg
bound
and
icebp
je
lea
push
push
mov
sub
rcl
pop
jg
ror
dec
push
ss
icebp
jmp
sub
(bad)
push
adc
lahf
sbb
inc
loope
hlt
cmp
adc
mov
imul
aas
or
xchg
inc
movs
mov
dec
or
jbe
sub
fdiv
fldenv
stos
movs
sbb
pop
push
shl
or
or
test
sub
addr16
mov
or
dec
jmp
mov
jmp
jmp
adc
jno
clc
inc
jnp
loopne
cmps
mov
leave
fs
shl
add
int
mov
icebp
mov
inc
push
adc
bnd
push
sbb
loope
fnstcw
adc
sbb
pop
adc
adc
push
es
sub
clc
inc
test
add
(bad)
push
ins
ror
adc
(bad)
(bad)
jmp
stos
adc
dec
pop
stos
or
mov
nop
or
jg
pop
dec
push
movs
xchg
(bad)
add
pusha
inc
adc
add
jecxz
inc
inc
ret
pop
xor
mov
sbb
add
into
xor
pop
in
mov
sub
add
addr16
jo
clc
mov
enter
xchg
sub
sbb
xchg
pop
in
pop
add
pop
ins
xchg
(bad)
cmp
dec
pop
loopne
or
xchg
sub
js
jp
or
lds
sbb
inc
pop
dec
imul
push
dec
xchg
add
jb
pop
jg
cwde
adc
xor
add
shl
test
xor
cmp
test
retf
aam
xor
shl
cmp
aad
lods
out
gs
sub
or
mov
vpshlw
xor
lock
jns
xchg
push
(bad)
stos
jecxz
icebp
bound
push
xor
xor
and
dec
fs
fs
inc
push
push
xor
push
inc
push
xor
inc
or
pop
adc
jb
adc
mov
jle
or
jne
dec
cmp
add
mov
xchg
int3
lock
dec
test
pop
sub
mov
xchg
or
aad
add
push
call
inc
dec
dec
inc
es
inc
dec
inc
jb
xchg
pop
inc
dec
dec
jge
mov
adc
cmp
cmc
or
jg
pop
mov
mov
sbb
xchg
inc
sbb
retf
push
loop
push
push
scas
dec
inc
add
fnstsw
xchg
ror
add
and
pop
mov
or
or
out
jnp
xor
jmp
xor
xchg
and
xor
pop
mov
call
sti
sbb
jmp
lea
jle
mov
xchg
or
push
pop
cmp
daa
mov
xor
mov
jae
mov
test
adc
mov
adc
jg
add
xor
test
xchg
push
icebp
imul
mov
or
dec
rcr
test
ret
(bad)
in
add
fdivr
sbb
and
sub
dec
ror
and
in
pusha
cli
or
bound
xchg
sub
sub
sub
push
sub
test
sub
add
test
sbb
and
sbb
xor
xor
and
xchg
retf
sbb
sbb
cmp
sbb
xchg
xchg
or
sbb
sbb
xchg
push
xlat
and
out
sbb
add
mov
jne
xor
fld
ret
cs
xchg
xchg
adc
mov
push
xlat
lock
ins
adc
jo
clc
jo
imul
sbb
xchg
add
xchg
adc
aaa
dec
jae
lock
adc
(bad)
jg
xor
lods
add
jg
sub
or
sub
leave
rol
pushf
loope
add
jo
stos
adc
lsl
mov
enter
push
jo
sbb
out
(bad)
mov
loop
ret
dec
cmp
cmp
mov
add
daa
sbb
adc
add
cwde
adc
or
adc
mov
cmp
mov
or
(bad)
fistp
sub
cmp
add
xor
pop
mov
mov
shr
cli
data16
ss
add
fld
sub
retf
call
xor
sbb
icebp
pusha
mov
jecxz
mov
add
cmp
adc
and
std
and
lods
sbb
lock
adc
push
loopne
ins
out
jo
(bad)
ja
int3
xor
test
or
bound
dec
gs
std
std
std
and
std
add
xchg
std
std
rcr
dec
adc
pop
lods
xor
je
or
sahf
or
xor
stos
or
mov
add
or
pop
adc
add
add
lock
lock
in
and
sbb
test
stc
in
in
inc
enter
lock
or
sbb
sbb
jmp
and
jecxz
lock
sub
(bad)
call
lock
or
mov
leave
in
xchg
and
jecxz
lods
mov
and
mov
loop
jb
js
vunpcklps
loopne
loopne
fsub
xor
adc
or
sub
cs
loopne
lds
int
call
js
and
into
push
add
test
add
jno
add
out
fwait
add
fmul
fsubr
aam
inc
xchg
out
aam
inc
shl
dec
fcomp
mov
sub
cli
icebp
or
mov
and
push
add
das
mul
enter
or
imul
mov
ja
les
addr16
std
mov
int3
mov
mov
popa
adc
jmp
into
outs
xchg
(bad)
mov
repnz
dec
scas
sub
and
fild
in
inc
pop
(bad)
cmp
lea
adc
cwde
add
cs
push
sbb
push
add
test
cmp
jo
stos
test
retf
(bad)
cmp
push
int3
ss
dec
xor
cmp
call
or
jge
mov
in
stos
and
ja
inc
inc
loope
mov
and
mov
enter
mov
sub
xchg
sar
pop
push
or
in
xor
ffreep
rcr
mov
sub
pop
int
or
or
sbb
icebp
mov
iret
mov
test
icebp
mov
mov
retf
mov
popa
adc
and
mov
jmp
mov
jb
and
lods
mov
push
das
nop
sub
loope
sub
add
and
sbb
movs
and
test
dec
inc
movs
test
std
jmp
xchg
dec
or
mov
jle
or
jno
xchg
pushf
and
test
xchg
pushf
pushf
inc
arpl
xchg
mov
push
or
mov
push
cwde
imul
mov
jb
and
xchg
cwde
xor
call
sub
push
fld
jae
scas
cmp
push
or
ds
jno
adc
inc
sub
stos
enter
xchg
or
sbb
add
jge
sub
push
shl
add
sub
ins
jo
xlat
sbb
scas
xor
add
push
xor
or
pop
loop
ss
movs
pop
ds
jmp
sahf
out
popa
mov
mov
jp
dec
repz
sub
aas
dec
sti
inc
out
pop
ds
test
inc
aas
addr16
jp
add
mov
mov
out
movs
ret
mov
shl
ja
add
sbb
mov
je
dec
jl
je
jbe
sub
je
jle
jecxz
test
add
les
pop
or
je
sbb
js
xor
sbb
add
cmp
push
ret
add
cs
and
in
retf
cdq
popf
or
inc
cmps
cmps
xchg
iret
push
adc
loopne
sti
pop
cmps
inc
adc
add
pop
sbb
add
add
fiadd
repz
push
or
fs
jbe
pop
nop
mov
jmp
push
sub
xor
add
nop
scas
or
(bad)
(bad)
stos
sbb
test
daa
test
outs
(bad)
cmp
not
rol
push
push
jo
inc
mov
jl
or
lock
and
push
sub
pusha
retf
nop
sub
dec
mov
retf
into
jp
pop
or
sbb
adc
test
jno
mov
mov
jno
and
test
pop
ja
push
add
movs
aaa
repnz
dec
ret
xchg
and
and
inc
ret
test
push
jmp
add
push
xor
inc
js
js
xchg
or
in
inc
je
js
dec
push
imul
(bad)
mov
jo
jo
mov
and
test
retf
xchg
mov
ins
jo
push
inc
lods
jo
push
xor
mov
pop
popf
int
add
add
lods
add
imul
push
and
clc
or
add
mov
dec
pop
leave
sub
fistp
cdq
push
and
test
enter
dec
pop
pop
imul
addr16
sti
mov
mov
mov
mov
add
cmp
mov
ss
inc
ret
std
ds
add
add
cld
xor
or
test
stos
aaa
adc
push
mov
inc
mov
dec
lea
sbb
push
push
push
outs
mov
add
lea
jae
dec
add
icebp
jns
mov
adc
in
out
dec
ins
arpl
dec
pmaxsw
pop
mov
xchg
cmp
pop
test
pop
jbe
je
jp
mov
xor
imul
dec
mov
jo
es
cs
cmps
test
sbb
push
xchg
push
push
in
add
mov
and
xchg
xchg
out
cmp
sub
enter
jne
pop
adc
scas
neg
or
mov
jmp
mov
mov
pop
gs
sbb
push
pop
xlat
scas
push
sub
loopne
repz
xor
adc
sub
test
mov
shl
int3
xchg
sbb
xchg
sub
mov
fadd
dec
push
add
push
inc
push
ret
xor
add
jo
fcomip
mov
fsub
or
jnp
adc
add
xor
cmp
and
push
sub
jmp
and
jno
sub
add
fcom
cmps
cmp
sar
push
and
jbe
mov
dec
push
mov
dec
call
pop
cmp
mov
adc
cmp
bound
mov
add
leave
mov
cmp
add
jnp
sbb
jmp
lahf
pop
add
push
jnp
sub
dec
cmp
dec
(bad)
sbb
mov
or
mov
xchg
mov
jge
jo
mov
pop
and
adc
jb
and
arpl
sbb
out
loope
pop
jnp
push
xchg
dec
push
pusha
push
es
add
push
or
push
mov
inc
and
addr16
cmp
pop
mov
add
outs
(bad)
in
cmp
add
inc
popa
cmp
das
int3
or
cmps
mov
sub
std
sub
call
mov
nop
adc
inc
inc
mov
dec
std
and
inc
stos
pop
ja
push
push
mov
cmp
shl
sbb
loop
add
scas
xor
xor
jle
or
xor
xor
xor
xchg
push
addr16
xor
mov
jnp
sar
mov
test
inc
add
pop
stos
jno
dec
shl
pop
cmp
adc
jmp
fadd
dec
push
sahf
sub
cmp
push
xor
pop
and
xor
sbb
or
sbb
and
and
and
and
jno
(bad)
sar
mov
test
or
les
push
and
ins
pop
dec
dec
add
xor
xor
int
dec
fsub
or
inc
xchg
and
dec
sbb
push
ret
or
cmps
loope
adc
or
nop
mov
test
dec
adc
or
or
adc
iret
jle
sbb
jle
mov
test
xchg
lods
add
xchg
test
xor
push
and
cmps
sbb
clc
inc
sbb
sbb
add
add
cmp
adc
or
jb
add
add
test
add
int
add
mov
call
js
add
xor
cld
(bad)
cmp
or
mov
cld
xchg
mov
stos
inc
add
add
test
add
les
les
push
lds
dec
movs
jb
aas
cld
cld
cld
xchg
and
cld
sub
test
daa
inc
in
cmp
cwde
call
mov
call
jae
xchg
in
or
adc
inc
(bad)
xlat
adc
ja
in
addr16
mov
cmps
in
mov
sbb
int
add
xor
push
pop
lock
mov
xor
push
xchg
loopne
or
add
pop
push
(bad)
cmp
pop
xchg
fwait
xchg
fst
and
test
frstor
xchg
inc
es
fcom
ja
int3
and
fstp
mov
sar
mov
test
fld
adc
maskmovq
test
inc
push
or
fwait
add
or
add
sub
lea
add
fwait
int
pop
fwait
pusha
xchg
popa
xchg
bound
xlat
int
jl
push
push
jl
mov
addr16
push
xor
pop
sbb
jno
stos
pushf
fstp
add
call
push
lock
push
push
or
jl
mov
push
and
or
inc
cmp
pop
dec
jb
js
dec
mov
or
or
push
shl
clc
or
adc
jne
mov
cmp
xor
or
jno
repz
inc
inc
ins
cmc
or
cld
add
popa
or
enter
cmc
jnp
inc
les
or
inc
inc
int3
int3
enter
in
addr16
inc
int3
push
mov
sar
mov
pop
pop
mov
movs
inc
jne
inc
pusha
mov
jne
cmp
jne
jbe
cmp
je
jo
fstp
out
xchg
cmp
or
or
sbb
ret
stos
xchg
cmps
(bad)
xchg
out
sub
dec
ins
adc
sar
inc
loopne
adc
loope
test
cld
xchg
push
test
mov
mov
mov
or
or
mov
inc
dec
mov
mov
out
mov
int
add
add
pop
dec
inc
call
cmp
xor
sub
sbb
xlat
jle
add
test
cwde
adc
push
xor
fwait
mov
or
(bad)
lods
repnz
fwait
test
loope
(bad)
cld
pop
fadd
fwait
jnp
lock
mov
and
jb
(bad)
lock
pop
in
mov
mov
movs
mov
mov
xchg
inc
or
leave
dec
lods
lods
adc
nop
or
hlt
repnz
sub
iret
add
loope
push
nop
jg
inc
mov
or
enter
nop
mov
jle
sbb
sar
imul
mov
pop
inc
adc
repnz
pop
test
icebp
cwde
push
inc
sub
nop
call
add
push
or
jmp
or
outs
or
jl
or
push
cdq
test
mov
icebp
test
sar
mov
test
or
push
add
jmp
pop
push
cmp
add
push
lock
test
jo
jo
ins
enter
and
test
je
in
jb
jo
addr16
stc
je
sar
call
js
add
and
xchg
or
icebp
retf
loopne
push
pusha
sub
pop
nop
mov
mul
or
enter
pusha
pop
addr16
sbb
sar
cs
iret
mov
test
pop
add
add
push
jmp
int
sub
xchg
push
xor
fs
mov
push
stc
push
sub
jb
push
push
dec
fistp
rcl
sar
add
mov
mov
test
adc
sbb
pop
jmp
jmp
dec
icebp
aam
push
or
loope
sub
cdq
or
cmp
or
pushf
pop
push
inc
inc
cmp
neg
push
xor
mov
lock
jle
mov
test
sub
shl
add
(bad)
(bad)
cld
adc
cmc
sbb
mov
movs
lods
ret
mov
cmps
sbb
icebp
dec
add
int
sub
gs
addr16
and
stos
mov
sbb
ss
pop
dec
imul
outs
(bad)
addr16
lds
arpl
add
push
xor
xor
dec
mov
push
cmp
pmulhuw
sub
clc
les
mov
sbb
out
sbb
(bad)
call
cdq
inc
cmp
jbe
pop
shl
inc
jmp
and
test
add
mov
aas
repz
rol
cmp
xchg
dec
repnz
add
inc
scas
cli
xchg
mov
sbb
sahf
mov
adc
pop
add
xor
das
and
dec
es
push
or
pop
or
inc
rcl
ret
and
ja
test
test
add
dec
repnz
push
mov
add
inc
je
lea
and
xchg
loopne
pop
jb
mov
aas
sbb
test
and
cdq
aam
pop
xchg
xchg
call
and
aaa
sbb
dec
adc
test
pusha
mov
mov
repz
hlt
nop
or
mov
test
inc
lea
xchg
ret
push
push
jge
shr
inc
or
(bad)
fsub
add
cmp
adc
add
adc
adc
pop
movs
adc
jmp
popf
dec
jle
cmp
mov
nop
jp
xor
jmp
add
fs
add
(bad)
mov
popf
adc
add
es
call
ss
loopne
jb
xor
jp
rol
lahf
and
xchg
inc
sub
sub
or
xor
lea
or
outs
pop
psubd
std
aas
fs
call
adc
or
or
jne
and
jle
call
icebp
fidivr
sbb
mov
inc
add
xchg
cwde
add
inc
push
adc
or
lea
les
mov
outs
rol
retf
ins
ins
pusha
sbb
jb
add
aas
adc
xor
sbb
je
push
dec
adc
in
mov
sbb
je
pop
or
xchg
stos
and
pop
adc
dec
fist
mov
in
cld
inc
loope
sub
je
lea
xchg
gs
cld
lods
xchg
test
lods
xchg
dec
sar
jb
pusha
sbb
xchg
loopne
cmps
lods
and
outs
mov
xor
fsubr
ins
cld
test
fcomp
neg
pop
or
xor
pusha
lods
movzx
or
clc
xchg
adc
add
add
mov
pop
mov
or
jo
inc
movs
xor
loopne
add
inc
pop
movs
xchg
daa
aas
xchg
mov
and
or
test
cwde
test
jp
or
sbb
dec
cmp
outs
fdiv
xor
sbb
add
test
mov
push
inc
dec
cmp
int3
or
push
test
or
les
sub
and
fs
das
xor
xor
sbb
add
jmp
cwde
and
inc
xor
mov
rcr
mov
pop
or
jo
or
dec
cdq
ret
inc
and
out
jmp
or
and
sub
adc
sahf
std
repnz
jmp
imul
jmp
and
adc
adc
adc
js
inc
(bad)
and
sbb
cmp
xlat
sbb
test
cmp
cmp
sub
add
inc
sbb
call
xlat
cmp
mov
jmp
cmp
xchg
push
mov
dec
cmp
inc
int3
repz
jl
cmps
(bad)
xor
and
stos
mov
rol
stos
imul
and
xor
adc
js
adc
movs
movs
jg
and
and
mov
adc
mov
cmp
mov
push
adc
ret
and
leave
jle
push
cmp
adc
sub
sar
add
adc
loope
loope
or
and
pop
dec
jnp
adc
add
and
push
rcr
adc
call
add
xor
push
ins
or
je
mov
push
rcr
sbb
pushf
cwde
and
dec
and
push
fs
inc
cmp
add
mov
and
lods
or
add
sub
hlt
out
(bad)
stos
and
mov
std
mov
imul
jae
jmp
cmp
mov
lods
sub
mov
xor
jne
xchg
xor
or
push
fsubr
push
push
mov
add
mov
or
ins
sar
xor
push
lock
push
jge
pop
add
cwde
ret
stos
xchg
push
add
(bad)
into
inc
int3
mov
adc
cmp
sbb
(bad)
shl
add
add
mov
inc
in
mov
ins
mov
add
(bad)
mov
jmp
inc
cmp
jae
(bad)
pop
ror
jmp
jo
ss
dec
and
mov
mov
adc
push
push
fldcw
shl
imul
sub
sub
stc
ja
cmps
cmp
push
adc
push
mov
or
cmp
test
jnp
gs
mov
pop
aad
push
inc
fwait
add
je
mov
pop
pop
add
xor
push
gs
or
add
sub
add
mov
push
neg
push
test
cmp
hlt
jne
sbb
cmp
add
adc
push
pop
add
mov
pop
nop
ins
inc
sbb
fisttp
movnti
jo
call
mov
mov
clc
pop
cmp
jbe
hlt
sbb
and
push
or
push
push
xchg
add
retf
fld
xor
and
or
cmp
out
sti
shl
mov
ret
pop
ins
jnp
inc
inc
dec
fnsave
push
into
and
inc
je
sub
cmp
jne
xchg
xchg
add
jne
or
adc
or
xor
outs
cmp
inc
add
mov
enter
adc
call
or
jne
xor
cwde
mov
jne
cld
jl
push
inc
data16
sbb
into
mov
call
(bad)
test
test
dec
sub
or
shl
mov
dec
sub
out
out
out
fwait
sahf
jne
dec
jmp
sub
jmp
mov
ds
scas
shr
xor
xor
scas
sub
inc
push
jae
mov
or
clc
pusha
push
and
push
push
push
frstor
(bad)
cmp
daa
and
je
sub
je
pop
ja
sbb
sub
and
add
xchg
mov
cmp
sub
call
dec
loop
rcr
push
pusha
pop
jmp
or
or
sub
je
jae
jne
vrsqrtss
ret
das
cmp
bound
push
mov
dec
cwde
push
cmp
mov
or
and
adc
pop
jmp
mov
jne
adc
shr
shl
sti
(bad)
dec
push
repz
dec
cmp
adc
add
les
sub
mov
jb
push
inc
and
in
and
inc
mov
ins
add
mov
push
sbb
push
ror
xchg
popa
rcl
add
mov
or
outs
pop
cdq
movsx
loopne
xchg
cmp
push
add
add
pop
push
pusha
xchg
sub
test
test
loopne
xchg
clc
cs
(bad)
jmp
std
or
stos
mov
test
xor
jmp
lahf
and
lods
and
push
jmp
test
mov
mov
gs
xchg
adc
xchg
jg
retf
jne
xchg
push
shl
add
not
mov
sahf
js
add
cmp
loop
fsub
mov
test
mov
data16
enter
add
push
ja
fild
xchg
js
add
fsubrp
hlt
sahf
out
ds
sub
inc
dec
into
repz
cs
push
popa
push
outs
jge
mov
jg
cld
add
mov
adc
mov
adc
call
popa
sub
adc
js
and
and
adc
or
js
mov
and
aad
jmp
fwait
adc
push
test
cwde
ret
add
and
mov
outs
push
jp
push
push
rcr
mov
push
sbb
jmp
cmp
add
and
mov
or
xor
dec
mov
js
sub
sbb
add
jns
sub
pop
cmc
sbb
sbb
dec
cdq
inc
test
popf
int3
and
adc
pop
pop
js
jmp
jg
or
pop
add
and
push
pop
jp
mov
fisubr
cmp
outs
(bad)
cmp
arpl
add
rol
pushf
clc
shl
scas
repz
push
aad
fmul
add
outs
mov
les
adc
in
or
fs
xor
(bad)
lock
mov
sbb
sub
add
inc
shr
inc
and
fnstsw
les
add
pop
sahf
shl
or
lock
fmul
mov
xor
pop
hlt
push
and
adc
dec
jnp
fidivr
pop
lock
nop
xchg
imul
adc
pop
lock
repnz
pop
ja
add
jae
cs
adc
and
pop
jb
cmp
call
movs
daa
mov
ins
hlt
mov
xchg
stos
(bad)
xor
stc
mov
bnd
ret
mov
or
pop
push
cwde
shl
push
into
data16
ret
push
xchg
push
adc
cld
push
daa
adc
lock
aaa
mov
out
jbe
jmp
in
clc
ja
pusha
mov
pop
ja
std
inc
add
mov
add
cmp
jl
or
add
inc
out
loope
jbe
stos
movsx
adc
pusha
add
mov
and
in
or
pop
popa
cmps
and
pusha
dec
dec
lea
icebp
jg
enter
add
sbb
lea
sbb
pop
test
adc
jmp
push
cwde
test
(bad)
pop
inc
or
mov
mov
add
adc
imul
jl
or
add
jle
xor
mov
adc
dec
or
cmp
pop
outs
sbb
or
ret
cmp
test
movs
or
or
add
fistp
dec
(bad)
fs
inc
sub
pop
adc
arpl
jne
sbb
adc
popa
inc
repz
pop
jmp
xchg
cmp
(bad)
lea
jge
or
test
push
adc
retf
add
xchg
adc
inc
xor
and
sub
inc
cmc
ret
or
and
jl
sahf
les
das
dec
mov
mov
xor
sub
pop
dec
mov
sbb
adc
adc
xor
mov
inc
pop
mov
and
test
call
aaa
xchg
mov
inc
xchg
jbe
outs
test
push
mov
out
or
or
push
mov
or
icebp
xchg
mov
inc
pop
xchg
add
mov
add
and
icebp
inc
adc
pop
jbe
aaa
outs
mov
cmp
push
sub
addr16
xor
into
mov
aad
or
xchg
cmps
shl
push
mov
jae
push
inc
cmps
loopne
stc
inc
test
sbb
mov
rol
ss
mov
pop
shl
cmp
jne
or
push
(bad)
xchg
sbb
pop
add
pushf
imul
movs
rol
fld
loopne
add
or
and
mov
ret
adc
cvtps2pd
(bad)
lock
sub
pop
nop
sti
or
push
mov
pop
les
das
or
add
sbb
mov
jne
shl
call
cwde
das
int3
jmp
lods
pop
mov
(bad)
ins
inc
js
test
add
and
pusha
and
or
gs
jp
js
push
test
dec
sahf
adc
pop
mov
and
cs
pop
add
pop
jp
into
sbb
mov
pop
sti
mov
dec
xor
jle
jmp
call
jne
sub
je
or
je
jmp
adc
push
xchg
mov
iret
inc
outs
fild
pop
mov
jae
dec
cdq
sub
fldpi
or
sbb
int
pop
add
sbb
outs
push
mov
pusha
call
fmul
pop
jmp
int
sbb
(bad)
jmp
pop
add
cmp
movs
cmp
adc
dec
adc
mov
cmp
jne
add
inc
cld
loope
in
and
in
pop
mov
rcl
les
das
int
jb
and
pop
lea
shl
popa
sub
ds
xlat
mov
mov
jmp
jmp
jmp
dec
adc
jbe
inc
test
(bad)
mov
sahf
cmp
or
and
test
cmp
push
jmp
push
nop
mov
cmp
sbb
push
add
sbb
inc
add
or
cs
xlat
test
aas
mov
jmp
cmp
jle
inc
dec
add
outs
out
add
add
outs
stos
(bad)
dec
adc
or
mov
dec
push
push
dec
and
in
or
or
fild
adc
cmps
inc
or
jge
lock
add
shr
adc
(bad)
in
loopne
and
sti
jnp
add
retf
and
or
add
pop
sbb
or
cmp
push
cmp
pop
pop
jb
dec
dec
out
arpl
push
inc
add
mov
and
in
aas
leave
or
push
movzx
push
and
inc
or
xchg
add
and
push
stc
cs
push
adc
push
xor
xchg
add
sbb
pop
stc
push
in
sbb
push
pop
sub
sbb
je
je
test
and
adc
push
and
rcr
xor
push
xor
add
pop
inc
mov
dec
(bad)
fs
adc
je
or
jl
pop
push
mov
pop
add
fsub
dec
adc
jle
sub
sub
and
fimul
or
xor
ja
sar
ja
mov
psubusb
add
push
and
ss
in
sbb
mov
pop
fisttp
pop
push
lock
xor
popf
jge
jg
pcmpeqw
pop
(bad)
push
jle
pop
das
hlt
scas
pop
out
jmp
inc
and
xor
movs
cmp
pop
xlat
add
shl
adc
enter
(bad)
iret
daa
out
xor
cmp
sub
add
retf
jmp
ja
sar
and
or
and
inc
push
add
xchg
cli
mov
push
js
mov
push
xchg
fst
daa
add
jne
scas
ret
pop
jae
inc
inc
or
inc
div
and
pop
jbe
into
fadd
inc
jns
out
push
into
adc
adc
es
fcom
repz
std
fild
push
test
or
adc
adc
out
dec
and
jg
lds
xchg
mov
cmp
jge
dec
test
enter
adc
in
rol
cmps
lock
mov
jecxz
(bad)
pop
mov
add
addr16
dec
or
inc
ins
xor
out
inc
sbb
cli
test
cmps
and
adc
or
iret
repz
inc
xchg
xor
fld
dec
mov
adc
loope
imul
or
dec
sub
fs
xchg
sbb
or
jnp
mov
ret
cmp
pop
arpl
dec
jmp
mov
pop
jb
mov
adc
and
xchg
ds
rol
inc
outs
xor
cld
jg
or
das
inc
cmp
cmp
dec
fs
cmc
pop
xchg
add
xor
mov
jne
inc
push
and
jo
sub
sub
gs
xchg
or
dec
test
imul
sbb
xchg
mov
mov
(bad)
fs
inc
outs
jg
cmp
jb
outs
inc
or
adc
dec
outs
inc
jne
push
rol
je
xor
sbb
push
push
gs
popa
jb
ret
xchg
retf
aam
(bad)
loopne
push
scas
sbb
cmps
fst
adc
dec
inc
cmp
xor
jmp
and
or
mov
out
je
dec
dec
adc
ins
cmp
rep
out
mov
sti
call
or
push
aaa
dec
or
or
arpl
cmp
add
test
push
imul
xchg
jb
gs
ror
inc
add
jg
adc
dec
add
(bad)
gs
pop
dec
pextrw
adc
mov
addr16
add
lock
rcl
test
mov
or
ret
xchg
addr16
mov
inc
(bad)
iret
or
or
jge
push
cmp
in
add
inc
sbb
(bad)
imul
or
jne
imul
jns
daa
adc
pusha
call
dec
test
ins
and
add
or
and
sub
and
jne
cmp
xchg
jb
sbb
outs
jo
clc
jnp
add
or
in
sbb
pop
xor
ins
es
mov
out
mov
data16
mov
in
loopne
fimul
and
iret
sub
push
inc
push
in
in
or
je
xor
outs
daa
lock
dec
xchg
popf
cs
and
cli
rol
add
outs
or
clc
or
retf
mov
xor
cmp
mov
lds
jae
cmp
inc
adc
mov
jnp
cmp
sahf
bound
iret
mov
push
inc
iret
xchg
xchg
daa
daa
hlt
sbb
xchg
jne
fadd
mov
leave
leave
leave
aas
test
sub
jb
mov
sahf
outs
shrd
cmp
and
rcl
in
push
xchg
daa
dec
ins
xor
shl
inc
xchg
adc
arpl
mov
or
movs
popa
or
push
cmps
std
add
mov
add
xchg
xchg
stos
push
sbb
mov
jno
push
lods
push
iret
jns
jo
lea
adc
fistp
dec
pop
dec
les
lock
rcl
ss
rcl
jbe
add
dec
inc
or
imul
and
ins
ins
mov
or
adc
jne
gs
xor
xor
clc
js
stc
mul
cmp
cdq
and
and
mov
push
mov
fadd
xlat
fimul
or
gs
out
or
inc
pop
pop
inc
outs
inc
outs
add
imul
fsubr
sbb
xchg
pop
xor
ret
fld
push
mov
dec
adc
imul
sbb
and
mov
xchg
pop
and
xchg
push
jne
dec
xchg
addr16
jae
and
jp
xchg
and
adc
lahf
lock
sbb
pop
int
mov
aaa
inc
mov
loopne
xchg
xchg
out
pop
push
add
xchg
or
xchg
xchg
jo
shl
xchg
retf
xchg
call
xchg
inc
xchg
xchg
xchg
xchg
mov
xchg
retf
sbb
ficomp
jo
in
xchg
sbb
nop
pop
sbb
or
dec
and
or
xchg
scas
push
pushf
xchg
add
inc
movs
fs
xchg
nop
test
cmp
mov
mov
push
dec
or
cs
js
popa
bound
adc
(bad)
cld
cdq
add
inc
jnp
cmp
jecxz
adc
ret
in
pop
popf
ret
test
mov
adc
adc
iret
out
push
cmp
pop
sbb
in
xor
cmp
push
mov
mov
jne
dec
in
test
pop
fldcw
aam
adc
sub
mov
or
xor
dec
iret
(bad)
daa
inc
aaa
jmp
dec
pop
inc
cmp
adc
jmp
inc
or
push
mov
mov
jmp
les
retf
push
mov
sbb
mov
aad
rcl
inc
jnp
mov
sahf
fidivr
leave
xor
pop
or
pop
fisttp
das
dec
inc
xor
push
and
inc
xor
xchg
jle
xor
pushf
push
sbb
xor
sbb
gs
jle
push
cwde
sub
add
or
add
dec
adc
jbe
mov
jae
xchg
add
push
push
xor
cld
addr16
adc
sub
pop
inc
lock
jmp
push
or
or
adc
and
cld
sub
adc
lock
and
inc
xor
add
sub
cmp
mov
xchg
and
mov
ins
es
lods
hlt
pusha
ins
push
bswap
and
adc
push
xor
mov
aam
adc
pop
cmp
mov
outs
in
mov
pop
mov
mov
adc
sub
imul
mov
xchg
loop
es
mov
cmp
add
xchg
rcr
into
xor
dec
xchg
fadd
(bad)
push
imul
fcomp
pop
xchg
add
(bad)
mov
pop
adc
cwde
adc
test
cmp
jg
fbld
inc
aad
xor
nop
ret
mov
mov
inc
and
push
push
or
daa
pop
scas
pop
pop
xchg
mov
and
adc
loop
jo
nop
es
inc
pop
mov
push
sar
mov
daa
push
add
jmp
cmp
and
sub
adc
pushf
int3
jmp
push
mov
xchg
mov
sub
dec
or
adc
pop
pop
xlat
or
inc
mov
push
mov
in
lahf
aas
orps
lods
push
xor
jg
pop
dec
pop
inc
(bad)
and
je
add
jne
sbb
sbb
mov
sbb
mov
bound
retf
jle
add
xchg
bound
and
inc
inc
xchg
fst
scas
xchg
mov
lock
clc
mov
mov
cmp
lahf
ret
jp
(bad)
jmp
or
inc
dec
add
(bad)
inc
dec
stos
inc
xor
or
jge
outs
mov
adc
call
cmp
(bad)
push
sub
call
rol
or
xlat
data16
mov
dec
das
aas
push
mov
inc
jge
out
pop
fisub
inc
push
je
adc
data16
sbb
mov
repnz
add
or
or
or
adc
mov
out
mov
push
sbb
inc
pop
(bad)
adc
xor
or
test
je
lea
add
mov
push
(bad)
jge
mov
adc
test
xchg
es
lock
cmp
pushf
rol
adc
in
fisttp
pop
ret
or
lea
scas
pop
mov
sbb
ror
mov
cmp
jne
adc
(bad)
frstor
or
daa
imul
jb
dec
and
or
dec
outs
outs
pusha
ret
sub
or
jns
push
popa
inc
lea
fisttp
and
cwde
jne
mov
mov
test
push
sub
push
jo
sbb
jg
or
or
add
cmp
push
push
or
popa
test
add
add
pushf
aaa
aam
mov
or
add
jnp
ins
arpl
add
ss
lods
fist
sub
or
mov
jo
cmps
xchg
mov
and
or
adc
mov
mov
push
sbb
pop
and
mov
pushf
jg
outs
out
jne
xchg
xor
push
adc
inc
mov
addr16
imul
sti
test
std
test
movs
and
pushf
xchg
xor
lds
xor
mov
and
rol
inc
shl
fdiv
adc
pop
pop
jl
fwait
addr16
fcom
inc
mov
xchg
pop
outs
mov
adc
mov
jecxz
push
xor
clc
jno
cmp
adc
not
sbb
lds
mov
add
push
jbe
fadd
pop
and
arpl
enter
add
adc
jnp
mov
pop
xchg
pop
adc
add
pop
mov
mov
imul
push
adc
add
pop
xchg
mov
sub
push
stos
das
cmps
sub
leave
lahf
leave
xlat
mov
repnz
mov
or
cmp
xchg
pop
in
pop
mov
pop
or
xlat
pop
xlat
and
jo
jl
repz
xlat
pop
in
pushf
lods
scas
or
ds
or
or
pop
outs
push
jns
iret
mov
jge
inc
xlat
clc
pop
or
out
inc
jbe
sub
(bad)
fnstenv
jns
jmp
jmp
pop
clc
stos
das
mov
sahf
std
shl
and
dec
sbb
sbb
adc
sbb
or
or
fcomi
or
inc
adc
ja
cmp
shr
leave
add
inc
pop
add
call
add
cmp
enter
inc
pop
scas
cli
stos
adc
cmp
adc
sub
jo
je
test
add
imul
push
outs
stos
or
or
sbb
jl
fild
xchg
add
push
ja
add
jnp
mov
push
push
in
push
adc
sub
clc
inc
push
fs
add
mov
cmc
cmc
inc
mov
sub
icebp
popa
add
ret
pop
push
inc
shl
fild
sub
(bad)
adc
lock
retf
jae
stc
add
pop
push
lods
pop
gs
arpl
or
xchg
add
sbb
js
push
sub
or
ins
push
pop
addr16
cs
clc
adc
inc
fsubr
push
test
xor
add
ins
xor
and
mov
mov
aaa
and
outs
clc
rcr
sub
leave
inc
rol
sub
pop
add
inc
aaa
xlat
mov
out
(bad)
push
shr
clc
xor
sub
push
mov
cmp
dec
mov
adc
push
clts
arpl
dec
test
inc
xchg
add
mov
sahf
or
sti
pusha
dec
mov
adc
addr16
push
dec
cmp
stos
cmps
(bad)
test
add
xchg
(bad)
daa
test
xchg
or
adc
push
arpl
gs
fild
inc
mov
test
push
mov
push
aas
mov
and
push
jnp
add
pop
jmp
push
mov
jmp
ret
dec
push
mov
cmp
nop
adc
stos
fld
in
ret
nop
add
shr
xchg
cmp
jne
je
rcl
je
mov
inc
fdiv
movs
add
pop
fsub
jl
cdq
in
and
and
adc
cmp
add
sbb
jne
sbb
or
add
sbb
adc
push
cmp
add
out
xchg
dec
and
mov
fmul
or
sahf
inc
or
or
and
fistp
out
push
call
mov
add
dec
mov
add
popf
add
iret
cmp
push
adc
das
jmp
sbb
js
rol
dec
lods
in
add
lock
adc
jge
je
mov
or
and
sub
adc
cld
add
mov
test
test
mov
cmps
addr16
push
sbb
dec
inc
(bad)
loope
pop
in
mov
arpl
push
daa
push
sbb
xchg
adc
jl
adc
call
lock
lea
mov
test
adc
xor
jne
stc
dec
lods
xor
xor
lock
dec
or
sub
pushf
adc
xlat
mov
daa
add
fsubr
cmp
pop
fild
stos
sbb
xor
sar
add
call
sbb
add
xlat
lods
cmp
dec
call
pop
mov
adc
mov
add
mov
sub
jne
add
xchg
fs
xor
rcr
ret
outs
add
test
mov
mov
rol
mov
movs
jo
or
jl
stos
cmp
ret
add
es
rcl
jg
in
shr
mov
stc
jne
gs
add
xchg
jmp
adc
ret
and
fwait
xor
fadd
xchg
sbb
adc
sub
push
push
push
test
clc
fwait
inc
xchg
adc
nop
or
test
jo
add
jo
inc
das
push
ror
popa
jmp
or
or
pop
les
pop
fmul
daa
pop
and
scas
xchg
push
or
fsqrt
sub
adc
pop
repnz
aas
mov
lea
daa
pushf
pop
jmp
inc
sub
mov
xchg
and
das
icebp
rcl
popa
cmps
leave
sbb
scas
in
test
iret
xchg
push
mov
or
popa
push
adc
ins
sub
push
dec
into
and
push
(bad)
fldenv
fwait
cmp
ficom
xor
and
sub
outs
test
sbb
sub
push
aam
dec
mov
adc
(bad)
(bad)
movs
call
clc
stc
push
pop
cdq
push
add
rol
pop
xor
sahf
loopne
inc
pusha
add
stc
sar
mov
inc
es
pop
out
push
mov
add
dec
ret
cs
add
jmp
ror
addr16
add
ret
pop
pop
ret
add
outs
mov
shl
mov
mov
dec
xchg
ins
je
adc
add
and
adc
xchg
into
popf
mov
rcr
(bad)
sahf
mov
adc
rol
adc
pop
and
xor
or
fcom
pushf
das
test
add
sub
call
repz
addps
pop
add
add
pop
test
pop
pop
enter
and
jl
enter
sub
test
sub
mov
jge
or
mov
pop
dec
mov
or
cmp
mov
adc
outs
sub
pop
shl
je
sar
jmp
cmp
push
push
mov
shl
sbb
pop
mov
mov
fdiv
push
push
js
adc
adc
rcl
sahf
pusha
jmp
(bad)
sub
push
lahf
mov
mov
pop
push
sbb
mov
adc
xor
add
ds
bound
push
add
xor
jp
int
mov
aas
sub
sub
fld
jecxz
add
jo
das
das
jae
cld
call
jae
arpl
das
popa
jo
das
push
add
add
addr16
imul
xor
jp
and
sub
test
mul
inc
in
lea
in
aaa
xor
mov
jae
fld
gs
arpl
das
mov
outs
cmp
aam
test
idiv
jb
repz
sti
mov
jne
xor
imul
in
adc
ins
mov
push
cmp
in
xchg
mov
adc
mov
enter
add
pop
mov
aam
mov
cmp
das
(bad)
mov
xchg
add
lahf
rol
jnp
push
push
inc
pop
mul
pop
test
pop
mov
push
inc
or
push
in
call
cmp
jecxz
fs
push
push
push
sub
mov
and
pusha
mul
pusha
and
add
lea
rcl
mov
cmp
pop
push
dec
push
push
push
add
iret
cmp
dec
jns
pop
pop
mov
and
test
push
dec
outs
fs
loopne
in
in
sbb
(bad)
enter
fisttp
ins
lock
add
pop
add
jmp
adc
pop
mov
imul
dec
fs
sbb
push
xchg
shl
push
rol
pop
mov
push
out
inc
gs
je
xor
test
shl
dec
stos
and
setle
cmp
test
mov
test
es
xor
mov
scas
push
xor
dec
fs
adc
add
(bad)
repz
adc
add
sbb
rol
or
js
sbb
xchg
test
scas
adc
inc
ins
lds
dec
add
pop
aas
add
cld
stos
mov
adc
inc
inc
outs
fs
mov
inc
mov
sub
mov
add
or
dec
inc
sbb
sub
dec
sbb
aad
push
add
add
popa
rol
gs
add
ss
adc
test
or
ins
(bad)
mov
pop
pop
fsubr
add
and
add
and
pop
pop
add
xchg
imul
lods
mov
add
adc
pop
pop
inc
fucomp
pushf
or
sbb
pop
cmc
jnp
outs
mov
adc
or
add
(bad)
ins
add
rcr
adc
js
or
mov
adc
or
call
cs
sub
mov
pop
push
mov
dec
push
push
xchg
leave
imul
arpl
mov
pmaddwd
mov
popf
or
jne
or
inc
dec
add
sbb
cmp
jmp
pusha
push
mov
idiv
adc
fsubr
rol
call
sub
add
lods
xor
push
loopne
inc
aam
cdq
lods
inc
retf
lea
cli
call
sahf
cmp
sbb
sub
sub
and
ja
cmp
shr
sub
in
gs
out
dec
pusha
or
jp
repz
push
xor
inc
sbb
mov
fstp
fwait
sub
subps
add
pop
mov
push
faddp
fwait
lods
or
sub
mov
rol
enter
loopne
add
push
pop
jmp
mov
push
shl
or
push
js
push
scas
dec
push
fcmovb
int3
inc
add
dec
es
push
jo
dec
jne
popf
pop
sbb
jne
push
mov
mov
sbb
rcr
mov
ret
xchg
mov
jne
sbb
cwde
call
out
ficomp
in
and
pop
(bad)
cmp
jle
lock
adc
add
js
and
or
mov
mov
jno
das
call
push
xchg
lods
xlat
adc
pop
mov
add
rol
cmp
aad
mov
cmp
mov
mov
add
aaa
or
sti
add
push
inc
retf
jp
mov
imul
in
cmps
cmps
xor
aas
rcl
hlt
hlt
hlt
push
push
mov
mov
pop
xor
jmp
mov
adc
xor
dec
pop
add
repnz
rcr
and
les
dec
loopne
mov
xlat
hlt
push
enter
sub
dec
fcom
adc
add
pop
and
in
test
mov
inc
lock
hlt
fneni(8087
fsub
lahf
inc
sub
jno
mov
inc
add
jo
pop
xchg
xchg
inc
mov
cwde
add
or
pop
lock
add
or
sbb
ss
adc
mov
loope
jmp
loope
dec
lock
pop
mov
jl
inc
inc
test
sahf
xor
popf
sub
rol
aas
fucomi
pop
xor
jo
in
ret
adc
fcomp
mov
jnp
lea
sbb
mov
sahf
xor
adc
hlt
popa
pop
pusha
inc
aaa
cli
or
inc
rcl
pusha
mov
dec
mov
dec
inc
sub
and
sbb
sub
jecxz
push
lods
add
push
pop
cmps
add
mov
mov
test
dec
and
dec
add
cld
mov
mov
ficom
jge
shl
lock
lock
xor
ret
adc
inc
stos
mov
jecxz
and
mov
(bad)
sub
and
add
pop
xlat
push
rcl
scas
aaa
and
adc
add
mov
rol
add
mov
add
clc
pop
fmul
push
lds
repnz
push
in
jecxz
adc
(bad)
jmp
ret
mov
xchg
sbb
sti
int
inc
shr
dec
mov
adc
jecxz
call
dec
aaa
sub
shr
repz
mov
cmp
icebp
mov
test
ja
jne
mov
mov
sbb
arpl
repz
xchg
cmp
or
pop
adc
pop
push
jo
mov
fstp
mov
add
jne
adc
loope
ss
lea
aas
mov
rol
xor
fwait
rcr
out
and
sbb
adc
adc
rol
out
mov
xor
cdq
dec
sbb
jo
mov
out
jecxz
dec
ins
inc
dec
out
jp
popa
and
add
das
mov
loop
jb
add
mov
dec
out
xor
cmp
fiadd
push
sub
inc
outs
aaa
adc
add
mov
pop
aaa
ss
cs
mov
das
add
ja
xor
inc
pop
imul
add
sub
pop
push
and
xchg
cmp
fidiv
push
inc
push
add
push
push
push
add
data16
imul
inc
das
add
mov
xchg
mov
(bad)
mov
xor
jge
mov
cld
sub
mov
outs
and
sub
int3
sub
push
add
add
lods
pop
adc
adc
add
fdiv
push
and
inc
pusha
sbb
cmp
add
stc
clc
push
pop
push
sar
add
lods
xor
cmp
rol
jnp
xchg
nop
mov
mov
sub
and
sbb
test
enter
adc
dec
push
jge
xchg
sub
clc
inc
pushf
and
iretw
push
jl
cmp
pop
lods
sbb
inc
pusha
pop
xor
jo
mov
mov
mov
mov
pushf
mov
imul
(bad)
fdiv
mov
aas
lods
mov
and
push
in
mov
nop
daa
fsubr
or
lods
and
clc
cmp
cmp
inc
mov
add
pop
and
or
ja
fsub
jne
imul
mov
inc
sbb
jb
dec
or
pop
add
(bad)
sti
dec
fcom
xlat
add
push
enter
jg
pop
call
jo
and
fs
into
mov
jo
aaa
push
sub
pop
retf
popf
pop
mov
push
arpl
clc
and
outs
fisttp
sbb
pop
xor
into
jb
cmp
inc
out
xor
mov
aas
ror
out
cwde
rcr
inc
loopne
lods
and
push
rol
push
push
cmp
call
mov
sbb
xchg
mov
adc
(bad)
in
jnp
ror
leave
addr16
or
inc
jmp
sub
inc
test
dec
add
pop
sbb
or
cmp
add
add
sub
movq
retf
or
mov
cmp
mov
adc
enter
mov
or
retf
mov
ret
push
sub
test
push
cmps
mov
aam
mov
sub
cmp
in
mov
and
xchg
xchg
add
test
and
cmp
and
adc
loopne
inc
sbb
inc
aam
dec
ja
fsub
in
in
inc
sub
push
addr16
and
and
push
dec
gs
inc
add
pop
and
inc
dec
xor
hlt
adc
or
cmp
mov
shl
add
sub
push
pop
cmp
out
add
sub
xchg
adc
push
rcr
push
sub
push
sub
dec
sub
dec
je
dec
arpl
rcl
aas
dec
mul
mov
jb
aas
dec
push
pop
mov
add
and
les
fist
fs
pop
or
dec
xchg
outs
mov
aaa
fild
jmp
xchg
push
xchg
push
push
addr16
in
fs
xlat
adc
inc
or
cmps
outs
aaa
mov
dec
shr
add
loope
mov
mov
lock
inc
push
adc
xchg
xchg
aas
mov
and
aam
rol
daa
sbb
mov
int3
pop
js
xchg
or
test
or
pslld
add
fistp
aam
xlat
enter
lods
pop
add
jae
mov
aas
pop
lea
jb
shr
retf
sbb
mov
mov
rol
pop
push
and
jnp
fld
icebp
rol
push
add
push
xlat
(bad)
fmul
leave
in
or
or
adc
lahf
add
ret
aaa
add
inc
mov
loopne
add
inc
inc
sub
xchg
and
or
in
gs
pop
scas
or
push
js
lods
mov
xchg
lds
dec
or
mov
sbb
aad
ret
fs
add
ror
das
add
fdivr
dec
inc
out
add
push
cmp
push
adc
push
xchg
jb
xor
pop
out
push
sar
das
push
pop
mov
add
inc
inc
cmp
adc
(bad)
xlat
add
stos
ins
cmp
add
shl
cmp
aas
or
lea
inc
jne
and
in
ins
ins
outs
inc
adc
push
sbb
fist
rcl
push
rol
fs
daa
in
bound
shl
icebp
push
adc
mov
stc
cmp
icebp
xchg
mov
fcomp
int
lds
jmp
pushf
mov
mov
imul
daa
in
inc
jno
aad
fstp
jne
sub
mov
dec
popa
lods
ins
movs
push
inc
ins
push
jb
jo
bound
add
sbb
add
mov
add
(bad)
dec
test
jae
jg
inc
sbb
mov
xchg
daa
mov
lea
mov
stc
mov
add
pop
xor
inc
xor
shl
shl
or
loope
dec
adc
daa
imul
loope
push
fs
aam
sti
jo
fiadd
add
mov
xor
lock
add
sbb
lods
and
inc
sub
push
les
xchg
les
nop
inc
gs
add
inc
out
cmp
call
cdq
clc
mov
loop
pop
mov
jns
mov
ins
(bad)
add
cmp
add
mov
inc
lea
lock
daa
mov
xor
je
push
outs
pop
jne
fstp
or
mov
adc
hlt
bound
lods
sub
sbb
addr16
retf
and
jnp
dec
hlt
std
mov
push
js
dec
adc
enter
adc
sbb
clc
push
adc
inc
adc
iret
inc
sbb
pusha
push
inc
push
(bad)
js
clc
and
add
fdivr
mov
rol
cs
call
test
push
aam
jnp
xor
inc
pop
and
(bad)
jle
fwait
retf
push
or
and
rol
test
xor
push
adc
in
jmp
repnz
popa
jno
and
cmp
lock
ss
in
sbb
clc
rcl
(bad)
adc
cdq
or
scas
(bad)
jo
(bad)
adc
and
xchg
test
xchg
or
and
clc
mov
cmp
ds
dec
or
fsubr
cs
inc
xor
and
in
or
inc
dec
jne
dec
inc
pop
or
ror
fwait
clc
add
cmps
adc
mov
sbb
or
(bad)
mov
imul
xchg
shl
push
pop
outs
jno
inc
jno
fcmove
sub
push
cld
push
lds
js
sub
ds
cmp
dec
out
inc
adc
push
and
and
push
rcr
cwde
lds
lock
adc
add
adc
pushaw
add
mov
push
outs
mov
inc
ret
adc
jmp
push
loopne
sahf
(bad)
pop
pop
neg
or
push
ins
in
add
adc
lock
xor
(bad)
fwait
dec
mov
sbb
clc
push
(bad)
add
ja
mov
ja
out
(bad)
cmps
xor
dec
lea
sbb
out
in
push
or
pop
jae
adc
cmp
add
mov
in
jo
mov
mov
push
and
jno
mov
add
push
sbb
sahf
and
sub
icebp
inc
sbb
pop
in
das
add
jmp
push
push
inc
hlt
(bad)
dec
adc
repnz
clc
popa
add
lock
fcom
mov
mov
push
or
popf
dec
mul
add
dec
pop
and
ins
jo
add
sti
jmp
lods
rol
mov
xor
xchg
fidiv
rcr
inc
mov
push
shl
in
ins
add
or
test
xchg
sub
lds
rol
add
inc
sahf
cmp
jbe
jns
jle
popa
push
pop
int
push
es
pop
mov
push
sbb
lock
or
jl
mov
mov
cmp
jne
cmp
push
fwait
loopne
mov
rcl
push
and
pop
bound
push
add
in
sbb
add
cmp
out
add
add
out
sahf
cmps
repnz
add
mov
jo
in
inc
rcl
xor
add
adc
clc
inc
dec
adc
add
mov
ins
and
mov
mov
jb
inc
xor
pushf
push
aam
dec
push
mov
les
jge
add
jl
dec
jne
cli
dec
or
stos
ret
dec
or
push
mov
(bad)
js
and
(bad)
jmp
dec
add
sub
cdq
div
or
mov
jp
or
mov
jae
sbb
push
push
addr16
add
inc
mov
inc
mov
dec
aad
aas
(bad)
dec
pusha
fldln2
adc
je
je
or
sub
and
mov
in
sub
scas
cwde
int3
pusha
push
push
push
lea
adc
push
icebp
int
lds
sub
mov
or
jle
jge
rcl
aam
aas
jge
sti
mov
div
cmp
push
loopne
adc
aaa
inc
lock
loope
or
or
aad
cmp
loopne
neg
add
cs
push
cs
xlat
push
rol
sub
pop
outs
(bad)
and
adc
add
daa
mov
das
lods
fnstsw
sar
into
aam
imul
sbb
in
unpckhps
jae
pop
jo
nop
lock
je
ins
mov
addps
xchg
andps
inc
push
dec
jg
pop
outs
adc
add
push
push
fiadd
cmp
cmp
prefetcht2
and
mov
leave
add
push
jnp
pop
inc
popa
outs
jns
out
nop
and
and
add
add
rol
add
and
jb
outs
out
dec
add
dec
shl
data16
jo
xchg
data16
(bad)
xor
ins
jno
and
popa
jb
jae
xchg
add
dec
pop
imul
jnp
(bad)
movs
fs
je
and
sub
xor
add
mov
fdiv
xor
sub
imul
inc
jne
add
sub
jo
arpl
das
aas
mov
rcl
add
outs
(bad)
gs
fisub
cs
popa
or
push
imul
sub
pop
jbe
pop
in
jne
dec
js
add
jnp
jb
rol
mov
add
or
jecxz
sahf
or
pop
jle
cmp
fbld
arpl
add
push
cmp
jne
push
or
popa
test
inc
add
inc
cmp
xchg
pop
(bad)
xchg
bound
cmp
mov
xchg
add
jle
mov
loope
in
sti
and
cmps
fidivr
sub
jge
pop
and
add
sti
dec
adc
stc
outs
jo
shr
out
and
sti
pop
cmp
mov
push
mov
inc
hlt
lods
cmp
cdq
gs
adc
and
ja
fmul
movs
rcr
mov
stos
add
inc
or
je
add
lods
mov
xchg
fimul
or
adc
imul
pop
mov
test
inc
dec
jne
mov
or
in
std
xchg
ret
fmul
sbb
pop
fisub
mov
mov
mov
rol
inc
cwde
sub
movs
loopne
or
mov
loop
or
movs
jns
mov
call
call
mov
mov
rcl
ja
inc
fwait
int3
add
shr
in
and
inc
sbb
pop
clc
out
inc
dec
test
pop
jno
les
les
pop
xchg
nop
cmp
call
loope
xor
sub
test
add
mov
pushf
add
mov
dec
adc
mov
or
je
scas
pusha
inc
add
in
push
sub
aam
mov
loop
pop
les
add
mov
mov
jle
nop
mov
mov
and
mov
repnz
mov
nop
mov
nop
or
xor
test
or
cmps
test
iret
loope
sbb
jmp
inc
leave
or
stc
lods
jmp
nop
jmp
or
jmp
or
jmp
and
jb
jno
inc
loope
jmp
push
jmp
and
inc
xor
adc
mov
pop
xchg
add
cmp
push
jmp
jmp
inc
xor
aas
(bad)
call
mov
dec
and
nop
rep
fild
enter
push
cld
inc
sti
push
push
test
add
sub
test
in
sbb
jns
dec
jmp
mov
(bad)
mov
dec
push
push
or
addr16
test
clc
pusha
inc
das
xchg
in
daa
aaa
shr
nop
jne
cmp
loop
icebp
jmp
jle
fs
add
dec
jg
fild
fdiv
rcr
inc
and
movs
jg
pusha
jg
add
mov
jbe
je
in
push
in
add
mov
sahf
retf
les
add
mov
scas
hlt
lock
inc
scas
inc
and
scas
ficom
cmp
out
mov
mov
mov
xchg
scas
call
xor
or
adc
movs
jbe
test
add
adc
in
les
mov
add
ret
aas
fild
fucomip
and
cs
add
add
add
imul
add
dec
fisubr
das
aas
sbb
xor
add
add
pop
sbb
cmp
js
xchg
cld
mov
bound
dec
xor
mov
inc
or
(bad)
jnp
cmp
jg
mov
adc
mov
loope
inc
(bad)
cmp
pusha
lods
cdq
cmp
add
inc
popa
or
mov
call
cmp
loopne
inc
or
repz
inc
cmp
or
rol
(bad)
movs
push
or
mov
ss
loop
loopne
xor
pushf
mov
fiadd
jge
in
push
ins
cmp
add
mov
adc
out
or
mov
adc
jp
sbb
dec
xchg
xchg
mov
ds
mov
mov
clc
ud2
push
out
out
push
sbb
cmp
mov
in
out
and
adc
inc
lahf
push
pop
cld
outs
outs
out
jae
and
add
add
call
sbb
or
shr
js
push
jmp
outs
lods
pop
push
dec
xchg
pop
jo
movs
pop
aaa
and
adc
cmps
scas
pop
scas
xor
pop
jo
mov
sbb
add
push
call
popa
add
sbb
inc
add
pop
cmp
mov
daa
in
cmp
dec
pop
icebp
je
dec
dec
and
test
je
and
mov
xor
dec
jb
nop
mov
xchg
jbe
adc
mov
lods
aad
xchg
and
in
lock
and
repnz
repz
out
arpl
add
add
push
push
mov
repz
add
push
sbb
lods
inc
mov
fs
add
jge
add
cld
jb
xchg
mov
sti
jmp
mov
jecxz
test
mov
(bad)
and
or
push
dec
or
adc
sub
or
sbb
xchg
iret
or
push
es
mov
fst
mov
adc
xchg
test
scas
or
xchg
fiadd
add
push
lock
push
sbb
ja
aad
xor
mov
das
adc
sbb
mul
arpl
push
arpl
sub
lock
mov
add
inc
xor
test
xchg
pushf
push
xor
mov
mov
jle
cmp
add
jmp
out
add
push
or
push
push
cmps
cdq
in
adc
scas
fisubr
adc
cmc
outs
lds
jecxz
cld
inc
test
(bad)
mov
jmp
mov
xor
lock
lock
in
mov
sbb
pusha
movs
js
retf
push
bound
in
push
xor
or
sbb
add
sub
aas
je
dec
pop
das
inc
ins
add
add
add
das
dec
pop
je
repz
ss
lods
leave
pop
idiv
loop
je
xor
fistp
jecxz
and
and
fsubr
sub
clc
fadd
loope
loopne
movs
mul
and
inc
or
push
add
fdivr
dec
xchg
adc
adc
mov
or
fdiv
inc
jmp
shl
in
mov
loopne
push
imul
xor
or
aam
scas
xchg
dec
aas
add
nop
lea
add
jecxz
mov
xchg
fcomp
dec
fiadd
cmp
mov
ja
cs
add
xlat
jp
mov
xchg
(bad)
xor
sub
clc
xor
mov
sub
in
lea
sub
push
sbb
mov
mov
scas
jne
pop
inc
or
je
dec
clc
xchg
pushf
push
or
jle
sub
push
push
nop
lock
xor
pop
lea
add
adc
and
shl
push
and
mov
mov
xor
mov
or
xchg
xor
popa
lea
lds
push
mov
ret
dec
clc
fadd
ins
jmp
sub
sub
popa
and
loope
(bad)
mov
sbb
pop
push
dec
xor
ret
fnstenv
xlat
das
dec
mov
mov
xor
sub
pop
test
add
inc
pop
adc
imul
sub
test
pop
pop
mov
mov
cli
and
dec
clc
push
add
adc
adc
mov
sti
call
fcom
jnp
clc
outs
sub
push
(bad)
rol
jbe
out
xchg
xor
cli
lock
xchg
fdivr
fdivr
and
lock
or
xor
add
mov
cmp
(bad)
xlat
push
or
pop
add
das
fist
cmp
clc
cli
xlat
cmc
add
jp
outs
rcr
cs
and
call
jl
test
add
sbb
je
add
lock
movs
(bad)
mov
inc
pushf
add
sub
fiadd
adc
movs
dec
aas
imul
adc
xlat
imul
jg
rcr
add
out
jge
cmp
jnp
scas
int3
mov
aas
int3
push
xor
inc
in
ds
enter
sub
in
mov
or
inc
lock
mov
jns
xchg
add
in
rol
push
xchg
daa
cmp
ins
in
push
in
mov
xchg
add
cwde
mov
dec
cs
shr
inc
popf
adc
xchg
dec
mov
daa
jmp
(bad)
in
push
push
aaa
out
xor
hlt
jno
clc
jns
push
js
jb
outs
xchg
rcl
cmp
(bad)
rcl
dec
adc
push
mov
pop
push
jbe
cmp
leave
xor
ret
inc
jne
test
sar
xchg
ret
jmp
loope
enter
sti
sub
pop
jo
in
jge
cmps
inc
cmp
and
(bad)
int
cwde
jge
lahf
cwde
arpl
test
pop
mov
mov
aaa
pop
aaa
inc
pop
mov
test
xor
cdq
in
cmp
xchg
xchg
cmp
mov
nop
rcl
push
mov
sbb
and
mov
add
fnsave
push
sub
sbb
xchg
js
jo
je
nop
adc
loop
mov
push
xchg
pop
aas
test
cmc
loopne
sbb
lea
mov
js
add
dec
sbb
or
mov
or
icebp
cld
mov
jno
mov
rcr
xchg
lahf
fdiv
(bad)
stos
inc
add
add
inc
ds
push
push
dec
add
pop
in
in
push
push
push
add
push
adc
cmps
push
push
push
xchg
dec
pop
dec
in
stos
int3
lock
cmp
sub
ds
stos
mov
dec
and
movs
das
pop
jo
and
pop
ret
xchg
cli
adc
adc
rcr
and
pusha
adc
pop
jmp
add
cmp
adc
adc
ss
pop
popf
mov
hlt
dec
hlt
popf
mov
mov
push
jmp
daa
div
adc
jg
test
jmp
pop
or
sbb
pop
movs
js
and
pusha
xchg
push
test
sbb
loope
rdmsr
push
test
and
add
sub
arpl
fwait
ins
sbb
ror
leave
or
push
sbb
push
inc
leave
and
mov
mov
inc
adc
nop
push
xchg
jmp
push
sbb
pop
das
aam
push
jb
ds
sub
daa
pop
int
nop
push
mov
jnp
jecxz
jp
pop
push
or
inc
pop
paddsb
push
and
jnp
pop
pop
ret
sbb
ss
mov
(bad)
xchg
add
push
ins
add
mov
rol
sbb
aaa
loope
jmp
ret
ret
stos
mov
xor
pop
ins
(bad)
test
pop
popa
ror
inc
jo
inc
inc
mov
dec
or
rcl
or
mov
imul
(bad)
cmp
pusha
or
cmp
add
mov
fmul
xor
xor
mov
lods
sahf
push
mov
add
scas
adc
push
cdq
xchg
(bad)
and
ins
imul
or
push
or
sbb
(bad)
or
dec
enter
xor
or
jge
add
cld
es
loopne
scas
into
cmp
jo
or
inc
fsub
adc
sbb
dec
movs
mov
push
push
fs
and
scas
adc
loop
push
dec
jb
push
add
cmp
movs
call
sbb
mov
xchg
add
rcr
mov
or
pushf
cmp
and
popf
pusha
inc
rol
aam
or
mov
sbb
loopne
sbb
and
push
das
imul
ret
add
dec
add
inc
add
stos
outs
mov
scas
outs
ss
pop
ins
call
push
add
jg
and
xor
ins
jmp
and
mov
mov
mov
jg
gs
gs
add
rol
sbb
pop
inc
es
fisub
sub
inc
call
cmc
test
pop
mov
test
out
add
inc
js
int
dec
loopne
(bad)
pop
dec
gs
aaa
xor
cmp
aam
pop
and
cmp
jb
lea
sub
clc
sub
fadd
das
and
stos
ja
push
retf
inc
daa
aad
mov
fs
dec
mov
fadd
add
sub
retf
mov
push
cmps
or
lea
mov
xchg
xchg
neg
out
push
lea
push
jl
ret
jne
mov
test
test
je
scas
pop
push
test
push
ja
add
jl
test
or
mov
pop
inc
popa
lods
pop
int3
mov
(bad)
cmp
add
pop
push
mov
push
sbb
push
push
mov
mov
enter
or
adc
nop
nop
and
push
jmp
les
cmp
xchg
ret
add
or
shr
jl
clc
xchg
and
adc
jo
lock
test
fcomp
jbe
mov
dec
dec
leave
adc
pop
es
pop
fwait
add
mov
movs
sbb
rcl
movs
pop
jns
cmps
nop
pop
push
loopne
push
dec
imul
shr
imul
inc
add
jno
cmps
mov
or
nop
inc
adc
cmp
add
sub
inc
inc
push
fs
jb
sti
xor
pop
mov
mul
xchg
scas
inc
lahf
data16
dec
ror
push
jmp
inc
inc
or
das
hlt
loop
cwde
dec
out
hlt
push
fst
mov
cld
mov
sbb
fbstp
add
mov
inc
(bad)
cmp
sbb
pop
jmp
add
lea
imul
xor
imul
imul
cld
sub
mov
fmul
mov
inc
and
add
dec
pushf
sub
mov
pop
dec
xor
mov
iret
mov
xchg
sbb
test
(bad)
xor
sub
xor
test
enter
test
test
mov
pop
pop
into
mov
push
sbb
mov
stos
xchg
mov
inc
les
mov
pop
or
inc
cld
neg
inc
or
add
dec
adc
shr
dec
ins
ins
leave
mov
mov
loopne
or
push
ficom
adc
push
inc
mov
push
mov
loopne
push
jo
mov
mov
push
or
add
or
in
or
ficom
stc
daa
xchg
or
sti
cwde
mov
fidivr
inc
cld
loopne
adc
push
cdq
cmp
cmp
mov
xor
sbb
test
ins
jnp
cwde
inc
xor
pusha
mov
dec
test
mov
loope
mov
mov
movs
test
shr
mov
jo
ror
mov
dec
xor
rcl
jmp
fiadd
sub
test
mov
(bad)
mov
fst
mov
rcr
sub
xor
stc
push
sbb
xchg
xor
es
push
xchg
push
das
pop
jmp
jmp
mov
rol
inc
add
sub
or
test
sbb
nop
jbe
xor
inc
(bad)
mov
inc
hlt
dec
xlat
outs
sbb
es
in
in
in
and
or
aas
dec
sub
mov
sbb
retf
movs
fdivr
inc
loope
retf
pop
shr
js
retf
(bad)
enter
mov
push
sbb
and
sar
jge
jl
test
imul
retf
pop
leave
mov
lods
adc
sub
imul
adc
or
dec
neg
add
mov
mul
sbb
imul
mov
sub
jmp
inc
jne
fistp
iret
ds
xchg
mov
push
cmp
or
test
xchg
adc
cmp
push
sub
scas
cmp
sub
cld
sub
(bad)
sub
lea
and
jo
pop
xchg
sbb
sbb
sbb
cmp
jb
mov
or
sbb
das
enter
sub
mov
adc
(bad)
fild
pop
dec
retf
or
sub
adc
ins
mov
test
mov
mov
bound
imul
and
int
ins
bound
inc
nop
fwait
lods
lldt
sub
addr16
add
mov
jo
or
lock
ficomp
push
xchg
fisub
fld
gs
lahf
test
mov
dec
lods
mov
cs
mov
or
popa
rcl
ret
ret
sub
dec
repz
or
push
(bad)
imul
dec
or
mov
lea
aad
sub
mov
fdivr
test
sahf
mov
xchg
clc
loopne
stos
mov
inc
cs
sbb
jb
test
leave
mov
lods
stos
adc
outs
mov
xchg
sar
pop
or
and
pop
push
jbe
fsubr
push
aaa
iret
out
or
ins
pop
xor
or
jg
test
jg
dec
cmps
xlat
iret
mov
add
inc
arpl
push
and
fisttp
daa
pop
and
xchg
arpl
je
ins
add
daa
push
add
jbe
sysret
inc
pop
dec
mov
outs
jbe
pop
add
jecxz
rcl
jge
ins
push
push
add
pop
add
out
dec
or
jbe
into
je
or
xor
push
adc
outs
fbstp
add
sub
pushf
inc
push
add
test
or
sbb
shr
call
cmp
outs
ja
loopne
(bad)
arpl
jae
cmp
inc
sub
or
adc
xchg
or
add
fiadd
sbb
ins
imul
sbb
mov
inc
dec
ss
xor
in
sbb
ja
mov
adc
and
sub
mov
jle
ss
jne
mov
dec
xor
xor
addr16
(bad)
push
xor
in
mov
(bad)
mov
adc
int3
fild
mov
hlt
jle
push
jl
fdivr
add
pop
push
sbb
sub
xor
(bad)
mov
inc
pop
pop
mov
inc
mov
xchg
and
out
xchg
nop
ret
call
adc
and
fwait
push
push
movs
sub
ja
and
pop
ins
pushf
lock
ja
mov
push
sbb
inc
inc
fcomp
loopne
imul
sub
dec
mov
add
or
jp
fsincos
and
mov
or
ds
mov
fidivr
lea
cdq
add
and
call
add
loopne
xor
inc
add
xchg
dec
repz
(bad)
or
and
push
and
sub
sbb
pop
mov
lods
mov
shl
mov
add
or
ja
lock
retf
cmp
js
lock
call
aad
and
(bad)
sbb
push
xor
mov
and
push
sbb
mov
or
sbb
cwde
add
(bad)
jp
add
pop
and
jmp
add
or
sub
pop
mov
and
xchg
std
cmp
jne
push
adc
adc
adc
mov
pop
jl
(bad)
pop
and
xor
jle
dec
mov
cmp
mov
inc
jo
popa
test
rcr
js
sbb
add
mov
or
mov
out
and
or
sbb
and
repnz
sub
jns
retf
xor
cmp
sub
push
or
or
(bad)
push
das
clc
sub
mov
push
jge
add
cmp
addr16
adc
mov
aas
sbb
and
leave
adc
xlat
ins
sbb
je
or
dec
jmp
std
pop
inc
lock
pop
sub
mov
adc
clc
push
push
rol
pop
pop
fsub
push
or
push
mov
(bad)
adc
jmp
mov
adc
out
popf
imul
sub
js
cmps
mov
mov
and
sahf
loop
test
out
je
cmps
jge
and
aam
mov
ins
loopne
aad
pop
ja
dec
rcl
dec
cmp
and
xchg
xor
sub
or
ror
sbb
xchg
mov
or
mov
call
mov
fadd
mov
add
ins
sbb
mov
mov
inc
int3
pop
pop
add
bound
mov
icebp
xlat
pop
scas
stos
push
pop
sub
mov
mov
ds
aaa
ins
push
push
outs
adc
adc
outs
sub
adc
out
scas
es
cmps
ret
in
adc
sbb
adc
pop
loopne
test
or
pushf
sub
jge
cmps
pop
sbb
mov
lods
push
fcom
loope
mov
xlat
js
lock
push
jp
push
fs
mov
or
test
pop
mov
mov
sbb
inc
sbb
pop
loope
push
push
lods
jo
ins
add
push
fisub
es
mov
mov
inc
mov
leave
xor
cwde
loopne
cs
mov
aaa
int3
test
rol
inc
aam
cdq
popa
cld
mov
fdivr
sar
ins
sub
int
sub
xor
push
test
push
fild
loope
adc
je
dec
pop
shl
sub
pop
popa
push
xchg
out
jnp
cs
add
jge
les
or
dec
in
cmp
or
jb
or
mov
cli
add
push
cmp
adc
jb
or
mov
sbb
nop
retf
add
xchg
add
add
lods
enter
lods
and
pop
mov
xchg
and
jge
and
enter
or
out
(bad)
jge
mov
sub
add
mov
(bad)
in
mov
inc
loopne
pusha
mov
(bad)
or
dec
dec
sbb
push
loopne
push
jb
inc
push
or
push
fbstp
inc
and
pop
ss
dec
jg
xor
(bad)
fistp
adc
add
sbb
outs
pop
push
dec
inc
js
cmp
cs
add
aaa
add
pop
idiv
sub
and
ret
aas
sub
mov
pop
pop
or
loopne
or
add
ret
xchg
aaa
mov
pop
push
pop
loopne
mov
inc
or
mov
iret
cwde
push
push
mov
ins
or
inc
cmp
jns
add
je
or
xchg
ss
cmp
and
ins
adc
pop
dec
xchg
imul
ja
mov
add
add
dec
sub
sub
outs
or
xchg
adc
dec
dec
rol
jle
inc
(bad)
dec
push
and
bound
ins
sub
xor
sub
int3
pop
mov
and
lock
jae
push
verr
jne
push
or
out
and
into
and
sbb
lds
ror
call
rcl
mov
pop
test
pop
jbe
add
mov
mov
inc
pop
test
inc
sub
and
pop
push
add
ins
add
xor
and
mov
adc
mov
xchg
sbb
out
xchg
jns
mov
jecxz
(bad)
push
pusha
mov
add
out
xchg
push
push
xchg
add
gs
test
iret
xor
mov
push
imul
dec
sub
or
mov
das
cmp
fwait
pop
adc
retf
push
add
and
arpl
add
or
adc
xor
jns
or
arpl
sbb
call
xor
push
xchg
xor
sbb
in
push
mov
js
push
mov
repnz
cmp
xor
xor
add
sub
maskmovq
test
lahf
dec
mov
add
scas
push
cmp
and
into
xor
and
cs
cs
xor
xor
mov
inc
sub
das
and
adc
dec
aam
sahf
sub
das
aaa
push
add
sbb
ror
pop
out
xchg
ficom
mov
adc
jne
and
jae
cmp
add
outs
add
push
xor
jg
xchg
sub
and
shr
jge
jnp
add
push
stos
mov
jmp
add
xchg
ss
add
sub
xlat
inc
xchg
lods
popa
adc
and
push
fisttp
ss
pop
push
fcomp
inc
fimul
push
in
jo
cmp
pop
in
pop
mov
jne
mov
mov
pop
push
pop
pop
adc
push
push
push
jge
or
sar
sub
(bad)
mov
aaa
lahf
add
cmc
cmps
inc
leave
cmp
or
or
xor
les
dec
cli
push
jp
movs
in
add
push
push
or
lea
popf
push
mov
cmp
mov
xchg
cmp
jmp
push
retf
mov
and
aaa
lahf
je
push
int
dec
jbe
lods
xor
aas
stc
push
inc
(bad)
push
adc
or
cmp
inc
add
push
mov
sbb
or
push
xor
cmp
ror
popa
movs
cmp
mov
mul
sub
sbb
adc
ins
adc
pop
jb
enter
pop
ins
fisttp
in
cmp
add
push
cmp
cli
aas
das
push
ret
dec
inc
push
or
xor
push
lock
neg
push
in
push
out
mov
es
adc
and
ds
fnstenv
push
pop
call
xchg
scas
push
test
imul
fneni(8087
inc
xchg
jle
adc
js
fcomi
mov
fcomp
clc
push
mov
es
out
(bad)
push
clc
pushw
test
push
call
jle
rep
pop
xor
ja
repnz
icebp
push
and
(bad)
imul
(bad)
hlt
push
jo
outs
mov
fdiv
push
mov
ss
push
lock
clc
fisub
push
sbb
xchg
pop
mov
push
lods
push
sbb
ss
adc
fistp
and
adc
test
dec
add
fs
outs
cmp
dec
fld
fadd
sub
push
cli
test
jmp
aam
push
xor
xchg
and
push
mov
loope
add
nop
imul
outs
jecxz
and
gs
pop
dec
loopne
jb
and
test
imul
jne
or
je
pushf
mov
mov
or
stos
jbe
mov
je
ins
movs
and
not
adc
jne
outs
es
jle
inc
test
lods
repnz
in
ret
ins
addr16
push
jb
push
mov
adc
dec
imul
or
(bad)
add
repz
les
mov
fs
mov
add
push
xor
adc
adc
imul
dec
les
adc
imul
xor
inc
mov
jns
std
popa
ins
int3
sub
rcl
cmp
aaa
fadd
fsubr
adc
mov
cld
or
jg
dec
ins
or
mov
sub
pop
pusha
mov
cwde
ror
sub
les
sbb
pop
and
int3
add
into
push
mov
aaa
adc
push
arpl
nop
pop
cmpxchg
jmp
and
clc
sub
pop
push
mov
push
xor
add
xchg
inc
div
xor
push
mov
dec
push
add
dec
lock
pop
mov
add
mov
ds
add
cmp
stc
add
and
xor
(bad)
hlt
mov
movs
add
pop
pop
test
sub
sub
add
mov
mov
cmc
test
stos
adc
add
mov
dec
jae
add
mov
add
push
add
add
shr
fistp
adc
jb
and
push
shl
loopne
jb
aaa
inc
je
fcomp
adc
aas
cmps
mov
cmp
ins
popf
mov
mov
sar
add
jp
adc
inc
lock
sub
ficom
popa
jecxz
inc
sub
aaa
clc
add
jmp
push
add
jb
fild
std
cmp
fwait
or
pop
mov
add
lldt
push
loopne
ins
push
push
cmp
pop
dec
sbb
loope
xchg
sar
push
add
pop
add
inc
enter
jns
sub
mov
add
sub
push
movs
ins
mov
pushf
dec
mov
or
mov
hlt
mov
imul
dec
pusha
mov
lock
xchg
clc
inc
push
sbb
ss
pop
or
jne
xchg
fist
add
in
leave
enter
ret
or
in
in
dec
xchg
fsubr
jmp
je
jo
add
in
out
sub
lds
push
mov
fadd
mov
(bad)
rcr
mov
cmp
sub
push
inc
xchg
mov
xchg
jg
add
or
jg
push
sbb
inc
cmp
mov
inc
fld
dec
das
test
add
cmp
loop
inc
out
mov
sbb
ss
sbb
sbb
mov
outs
add
cs
dec
lods
xchg
dec
in
or
xor
jo
call
iret
push
pop
jmp
out
inc
mov
daa
adc
add
ins
nop
mov
add
cmps
cmp
jmp
outs
cmp
ret
or
ret
inc
loope
inc
xchg
cld
mov
dec
sbb
mov
and
cli
push
add
outs
aas
lods
les
mov
push
mov
mov
and
push
inc
pop
daa
mov
add
push
mov
and
jmp
cmp
dec
add
add
adc
mov
ds
add
add
aas
dec
add
cld
or
and
je
xchg
dec
inc
and
push
push
add
sbb
cmp
push
imul
fisub
das
rcl
sti
or
dec
ret
inc
ret
(bad)
mov
mov
mov
daa
pop
scas
sbb
add
inc
sbb
sbb
and
push
jb
in
inc
adc
xor
add
xchg
cmp
inc
out
or
mov
and
mov
inc
jbe
dec
sbb
dec
pop
xchg
add
mov
mov
sbb
cmp
push
loopne
add
pop
arpl
test
lods
mov
lea
mov
add
mov
pop
ret
push
dec
stc
test
cdq
nop
add
push
sbb
sub
pop
leave
adc
and
cwde
gs
ins
add
dec
hlt
outs
in
pop
dec
mov
mov
les
jns
in
sub
cmc
lahf
dec
rcl
fstp
mov
loopne
pop
fsub
and
in
mov
add
movs
adc
cdq
(bad)
(bad)
loopne
fsub
sbb
nop
xor
push
mov
push
nop
in
cwde
jbe
mov
xchg
test
pop
mov
cmp
or
jmp
adc
jb
pop
push
or
and
inc
inc
push
fild
cwde
mov
push
sbb
rcr
adc
push
or
aas
lahf
xor
dec
mov
add
adc
and
(bad)
js
dec
or
adc
mov
add
inc
xor
shl
or
iret
ss
inc
(bad)
sub
push
or
add
dec
(bad)
lods
movaps
push
popa
adc
dec
or
dec
push
pop
leave
gs
out
pop
add
lods
pop
rcr
movs
sbb
xor
jl
inc
adc
rcr
add
xchg
sbb
addr16
addr16
ret
mov
retf
xor
and
cwde
cmc
push
xchg
xlat
pop
push
sbb
sti
cmc
out
inc
push
adc
push
out
pop
add
push
xor
rcr
dec
aas
xor
add
out
inc
ss
inc
cmp
jnp
loop
push
ds
cmp
in
cmp
jb
mov
push
cmp
inc
pop
and
add
cs
frstor
add
test
and
mov
dec
lea
and
sbb
call
rcr
rol
mov
xor
cs
loope
aaa
add
fstp
sar
mov
cmp
and
or
scas
xor
ins
sar
aas
jae
aas
dec
mov
cs
dec
add
pop
add
xor
out
add
dec
enter
loope
ret
(bad)
pop
add
out
inc
add
or
pop
and
jnp
adc
aas
cs
xor
fidiv
mov
or
sbb
shl
mov
scas
cmps
shr
sbb
rcl
pop
or
mov
add
adc
mov
stos
cmps
mov
lock
out
adc
add
jne
push
or
inc
ret
add
lock
dec
movs
mov
mov
dec
pop
addr16
clc
mov
cmps
cmp
add
pop
fild
xor
call
add
fdivr
jmp
add
and
ret
shl
pop
and
pushf
lock
and
outs
(bad)
adc
(bad)
jle
mov
dec
xor
addr16
aas
and
adc
sub
push
out
sub
or
lock
adc
in
(bad)
jl
xchg
mov
add
aaa
lock
jge
ror
dec
add
push
cld
in
movs
out
loopne
add
cmp
ret
and
add
sub
cwde
movs
inc
pop
stos
fwait
cs
adc
sub
loopne
scas
inc
xor
pop
mul
adc
fld
sahf
imul
sub
xor
fwait
push
sub
push
rcl
rcl
fcmovnu
adc
lods
mov
sub
inc
inc
add
or
mov
inc
add
add
adc
dec
pop
add
int3
fiadd
test
sub
mov
pop
mov
aas
lea
or
aaa
cdq
sbb
add
mov
mov
jg
(bad)
push
lock
mov
loop
call
and
push
push
xchg
add
daa
dec
xor
and
fst
add
sbb
push
inc
(bad)
cmc
xor
imul
outs
fisttp
add
dec
addr16
iret
add
pop
aaa
test
mov
sub
xor
xchg
repnz
cmps
or
pop
fmul
add
(bad)
call
and
mov
mov
dec
sbb
push
jbe
adc
mov
in
imul
jne
xchg
mov
(bad)
(bad)
shr
adc
in
shr
or
xchg
(bad)
sub
push
mov
and
mov
cmp
inc
mov
push
scas
mov
mov
add
push
push
add
dec
jns
xchg
lock
pop
inc
mov
ss
xlat
call
ss
or
cmp
adc
xor
inc
dec
sbb
mov
mov
jne
push
sub
xor
push
lods
or
jb
jae
pusha
ins
cmp
test
shr
inc
adc
in
push
adc
cmp
jge
ins
jae
pop
loope
test
push
or
sbb
adc
xor
add
xlat
cmp
arpl
outs
push
rcl
jge
push
dec
pop
les
adc
push
inc
xchg
mov
ins
pusha
add
pop
sub
not
pop
xchg
pop
fist
ror
addr16
fwait
xor
std
and
shl
mov
cs
push
adc
mov
add
dec
inc
stos
gs
add
add
rol
xchg
adc
jp
push
scas
or
lods
sub
sub
jl
xchg
nop
and
mov
cli
arpl
or
aaa
mov
pop
inc
shr
shl
inc
push
outs
sbb
sbb
leave
xlat
popa
cs
shl
dec
mov
add
sub
sahf
xor
sub
fs
push
inc
adc
or
xchg
rcr
repz
xchg
or
sub
mov
and
add
sub
sub
js
adc
pop
ss
lds
sbb
ret
adc
sub
mov
add
add
or
mov
and
ss
cmp
cmp
xchg
nop
lods
jno
mov
jecxz
call
add
inc
xchg
(bad)
aaa
outs
add
popf
cdq
das
ror
jno
and
enter
lods
shr
int3
pop
add
sub
je
dec
mov
(bad)
sub
xchg
xchg
fadd
fild
in
jmp
aaa
div
inc
and
push
test
jbe
loopne
or
pop
mov
mov
inc
out
ins
clc
loope
fmul
or
popa
inc
jns
sbb
jmp
jae
inc
or
and
adc
test
adc
adc
jae
cmc
adc
mov
add
inc
cmps
xor
add
in
and
jl
sbb
jecxz
push
ja
adc
inc
or
js
loope
adc
hlt
and
adc
xor
and
dec
jnp
add
mov
add
pop
add
test
cmp
or
nop
inc
pusha
jnp
movs
fsub
pop
test
pop
push
add
adc
lock
adc
push
push
lea
js
clc
inc
aaa
shl
inc
jne
adc
es
push
and
xor
nop
mov
and
popa
cmp
loopne
mov
dec
mov
popa
inc
sahf
mov
adc
outs
in
add
mov
inc
js
add
or
je
inc
add
sbb
cmp
repz
inc
imul
pop
or
dec
fmul
ficomp
mov
aas
adc
mov
rol
pop
enter
dec
mov
push
pop
fs
leave
xchg
ror
pop
pop
xor
in
movs
repnz
jl
sbb
rol
push
shl
pushf
mov
bound
popa
in
arpl
sub
or
add
add
add
sbb
jbe
pushaw
hlt
jno
fs
data16
daa
inc
dec
fbld
mov
add
rcr
sub
ins
arpl
dec
jmp
xchg
cmp
jae
add
pusha
push
cmp
in
push
inc
cmp
xor
mul
test
and
mov
xadd
inc
inc
icebp
add
outs
push
add
push
xchg
push
xor
mov
js
repz
ja
repnz
and
movs
ins
arpl
lods
sbb
dec
jge
fmul
xchg
and
mov
adc
adc
add
sub
pop
mov
add
addr16
inc
ja
shl
jle
fimul
cmps
push
cmps
sbb
add
loopne
cmp
fcomp
or
dec
cmps
imul
mov
pop
and
nop
and
cmp
pop
and
ins
lea
pusha
push
xor
push
(bad)
xchg
xchg
or
lahf
add
add
add
dec
popa
loope
inc
inc
fs
je
adc
gs
lahf
mov
dec
push
dec
dec
mov
popa
or
inc
inc
xor
push
or
push
adc
or
add
aam
cmps
shl
lock
mov
(bad)
ficom
into
ins
push
mov
pop
in
jg
sbb
pop
jb
test
hlt
inc
pop
jb
add
adc
and
or
inc
jl
add
jle
mov
bound
xchg
inc
ins
std
pop
xor
add
add
push
cmp
and
loopne
xor
outs
xor
add
inc
jno
(bad)
lock
adc
arpl
loopne
xchg
loope
je
push
pushf
pop
mov
out
out
adc
pusha
pop
or
sbb
addr16
cs
inc
mov
cmp
enter
or
(bad)
jmp
fbld
add
movs
icebp
in
imul
imul
and
push
es
ins
fs
add
fs
jnp
push
pop
mov
mov
mov
imul
add
cmp
jae
outs
inc
add
add
mov
daa
shr
and
test
or
or
icebp
dec
mov
adc
pop
lods
mov
add
xor
fcmovnb
or
int3
xor
pop
jo
or
and
inc
xchg
sub
or
push
fdivr
aas
pop
or
push
xchg
push
or
ror
mov
daa
add
push
mov
dec
es
dec
jmp
outs
adc
xchg
sbb
dec
fst
gs
jecxz
xchg
push
jno
mov
mov
jo
pop
aad
shr
in
adc
add
dec
lea
cdq
mov
or
ja
mov
jmp
dec
cmp
jl
enter
cmp
adc
test
add
and
ds
cmps
mov
shl
jle
mov
ror
jg
hlt
test
add
fimul
pop
fimul
pusha
and
in
icebp
ja
push
in
cld
adc
sbb
fcomp
xor
adc
jbe
mov
and
pop
push
aam
sbb
lods
pop
sti
push
inc
xchg
and
xor
jg
dec
fdivr
mov
push
add
sbb
js
pushf
or
data16
sbb
inc
jae
mov
pusha
scas
push
cmp
mov
sub
lods
mov
sub
ror
ins
dec
dec
dec
push
jne
cmps
movs
push
jbe
mov
loope
sub
imul
jl
mov
mov
push
je
cmp
add
mov
xor
xor
lock
mov
sub
and
fmul
ret
test
jae
cmp
or
(bad)
jmp
adc
jno
mov
or
sub
leave
and
movs
gs
lock
gs
mov
js
mov
or
mov
add
mov
cmps
loope
add
dec
add
pushf
add
aam
aaa
outs
or
aam
sub
icebp
push
(bad)
dec
mov
and
add
push
mov
add
add
and
leave
fdivr
pusha
fs
call
adc
sbb
jmp
cmp
push
push
cmp
mov
xor
and
lock
xor
test
dec
push
test
or
in
adc
mov
jb
mov
pop
xor
cmp
fistp
cmp
mov
and
leave
xchg
adc
and
add
ds
mov
lea
add
pop
jbe
sahf
add
add
xchg
mov
or
adc
and
ins
inc
and
mov
rcl
aaa
push
je
add
and
aam
sub
mov
mov
inc
aaa
lock
ins
xor
sub
or
xchg
add
neg
adc
pop
mov
sar
sub
or
and
popa
movs
ret
pop
mov
pop
sbb
cdq
pop
fs
xor
movs
ja
mov
mov
mov
pop
mov
jns
test
test
jo
jbe
cmp
mov
pop
sbb
adc
jo
stos
add
jae
xchg
add
or
or
add
adc
cli
add
mov
enter
(bad)
popa
jo
or
sti
mov
or
xlat
sub
adc
in
ins
mov
ins
in
cmp
adc
mov
scas
mov
and
sbb
or
test
mov
lock
(bad)
adc
repz
pusha
or
ja
or
js
add
mov
mov
loope
cmp
sub
leave
pop
lahf
cld
test
cmp
mov
mov
js
inc
aam
ins
ds
mov
and
adc
adc
sub
and
call
jbe
popa
icebp
sbb
xchg
mov
and
ins
lea
nop
out
(bad)
imul
test
jmp
in
nop
cmp
mul
addr16
inc
mov
fadd
dec
aaa
test
test
(bad)
add
mov
inc
inc
retf
pop
dec
mov
ror
mov
dec
jp
out
add
or
jns
inc
mov
xchg
inc
or
outs
xor
inc
add
js
popa
in
add
pop
add
das
jne
add
cmp
daa
adc
out
inc
mov
pop
inc
mov
icebp
inc
(bad)
and
dec
push
stos
pop
dec
push
mov
sub
jns
pushf
and
xchg
pop
or
movs
add
sbb
(bad)
ins
loop
adc
ja
mov
sub
adc
jno
lds
sub
mov
cmp
add
or
xor
xor
mov
cmp
dec
add
pop
cs
ds
push
cmp
sbb
cmp
adc
aas
mov
sbb
sbb
mov
dec
add
shr
iret
xchg
loopne
scas
test
jns
arpl
jae
and
mov
pop
aaa
or
or
jno
ins
daa
xor
jo
jno
xchg
(bad)
and
cld
cwde
dec
sub
push
pop
inc
imul
push
(bad)
xor
dec
jo
xchg
push
rol
shr
(bad)
sub
mov
pop
aaa
mov
lods
das
jae
das
ins
mov
jae
xchg
add
dec
(bad)
sub
cmp
dec
aaa
jbe
cs
or
add
jns
push
movs
bswap
add
xlat
popf
out
push
das
and
retf
ins
mov
inc
sub
inc
push
ds
and
mov
icebp
and
jg
loopne
or
mul
push
inc
sub
mov
mov
scas
rcr
addr16
pop
mov
and
mov
or
push
pop
(bad)
iret
jnp
and
es
mov
pop
add
push
fsubr
add
inc
xchg
rcl
push
inc
hlt
not
sti
lea
jle
mov
xor
lock
lods
jle
outs
xor
enter
mov
ins
inc
jle
sbb
jbe
and
add
add
sbb
popf
push
dec
sbb
pop
and
loopne
cmp
int
loopne
jnp
and
cmps
or
in
(bad)
cmp
pusha
js
mov
jge
scas
jnp
aam
imul
(bad)
ins
mov
mov
pop
sbb
ja
loopne
sbb
push
test
sbb
jl
jge
test
test
ja
mov
test
or
in
adc
shl
sub
and
fdivr
les
mov
xor
push
imul
sub
xor
ret
pop
push
pusha
inc
jae
mov
push
dec
std
in
inc
fdivr
ror
imul
ret
or
cdq
or
enter
lds
je
inc
jl
adc
sbb
pop
mov
lahf
and
leave
mov
push
add
cwde
std
cwde
mov
mov
out
out
or
and
push
or
and
add
and
hlt
mov
cmp
or
rcr
cmc
jo
loopne
mov
hlt
cmps
test
push
cmp
arpl
adc
xor
ret
in
fs
repz
sub
jbe
std
mov
xor
sub
js
cmp
movs
movs
das
or
mov
cmp
add
sub
add
xchg
xchg
xchg
or
daa
sub
xchg
mov
xchg
and
cmp
leave
leave
and
cwde
cwde
sub
mov
(bad)
mov
(bad)
adc
adc
lea
mov
call
mov
cmp
fidivr
andnps
inc
and
fwait
sbb
mov
mov
jg
push
call
enter
cmp
mov
loopne
or
fs
mov
mov
mov
loope
shl
dec
call
xchg
test
adc
or
pushf
push
push
xchg
push
cmp
movs
add
and
sub
rcr
sar
jo
cmp
mov
push
cmp
mov
iret
adc
outs
push
or
mov
je
je
sbb
add
js
add
loop
sti
sbb
cmc
cwde
dec
jmp
std
and
mov
add
ret
mov
nop
sbb
xor
jae
shr
push
and
jmp
or
dec
lea
cli
sub
ror
push
add
rcl
add
popa
adc
frstor
scas
sub
cwde
mov
inc
sbb
adc
jge
add
fmul
push
(bad)
shr
(bad)
fisub
repz
test
sbb
add
loope
mov
das
in
cmp
cdq
cwde
jle
push
lock
sbb
jo
pop
scas
mov
mov
nop
and
and
mov
pop
and
sbb
daa
push
call
mov
or
add
aas
sub
cmp
out
jnp
inc
retf
pop
or
imul
out
and
mov
pop
outs
aas
xlat
and
pusha
(bad)
jb
scas
sub
lahf
mov
sbb
pop
adc
ins
arpl
jp
lock
mov
addr16
add
adc
jmp
pop
loop
or
test
jl
and
and
aaa
pop
add
jmp
inc
(bad)
out
pop
shr
inc
ss
lea
pop
push
xchg
(bad)
ror
fcmovb
inc
adc
mov
push
test
sbb
icebp
shr
pop
and
rol
inc
dec
and
aam
push
dec
add
pop
inc
gs
pop
add
iret
cmp
push
movs
(bad)
or
jae
mov
shr
xchg
inc
xchg
into
mov
pop
xor
call
mov
inc
mov
and
cmp
and
mov
mov
and
ja
mov
js
xchg
mov
mov
xchg
push
fmul
sub
sub
adc
inc
mov
inc
fdivr
adc
adc
mov
test
bound
xchg
inc
fcom
adc
fwait
(bad)
dec
pop
shl
pop
sub
inc
pop
and
ret
jle
push
adc
lock
adc
mov
inc
mov
xor
(bad)
addr16
cmp
xchg
dec
(bad)
sbb
adc
pop
sub
clc
and
jo
dec
push
xor
adc
and
mov
nop
push
movs
ret
test
xor
(bad)
and
clc
add
xlat
and
inc
dec
lods
mov
add
inc
repnz
cmp
mov
xchg
push
cdq
sbb
add
push
out
push
push
sub
scas
jo
dec
push
mov
push
and
sub
and
nop
lea
inc
daa
sub
mov
and
inc
std
mov
jo
xchg
sbb
add
push
mov
sub
pop
xchg
test
(bad)
fcomip
imul
dec
or
dec
rcr
fcom
jmp
xor
and
jns
push
test
inc
inc
inc
mov
add
call
das
or
cld
ins
loop
call
(bad)
pusha
in
sbb
xlat
sub
ror
inc
xchg
test
nop
or
mov
nop
or
mov
pushf
and
pop
dec
add
jne
xor
inc
or
or
sbb
outs
sub
add
cld
sbb
add
sti
dec
in
test
xor
xchg
retf
add
jecxz
cmp
cwde
cmp
inc
popa
push
xchg
mov
pop
int3
or
fwait
popa
and
lea
inc
retf
mov
push
push
outs
dec
movs
test
shl
scas
push
dec
push
adc
scas
xchg
retf
jle
xchg
in
out
dec
aad
setle
add
enter
(bad)
das
mov
imul
loop
mov
clc
or
mov
loope
dec
lock
cmp
das
mov
and
sub
jno
jl
test
push
xor
pop
xchg
mov
xchg
inc
mov
jno
push
sbb
push
outs
dec
ret
pop
test
test
mov
and
or
xchg
pop
jbe
inc
and
clc
cmp
cmps
add
loope
xor
dec
pop
fnstenv
lea
mov
or
aaa
jns
and
(bad)
xchg
inc
lods
(bad)
push
fadd
xor
dec
or
pop
add
mov
in
fsub
xchg
aam
sar
adc
jmp
mov
outs
xor
mov
xchg
mov
push
fcomp
and
pop
in
dec
es
aam
mov
jns
arpl
push
loope
pop
ror
add
fmul
dec
or
xchg
push
mov
pusha
cwde
sbb
pop
xor
push
jo
retf
jge
mov
pop
popa
movs
ins
pop
outs
sub
mov
ficomp
stos
fcomp
inc
sub
ins
xor
mov
jge
arpl
push
push
or
jmp
sbb
cwde
pop
pop
cmp
or
xor
mov
push
jo
push
ja
test
xor
jo
mov
call
xchg
jmp
out
cmp
inc
or
sbb
sbb
daa
xchg
push
aam
mov
adc
scas
sbb
bound
mov
and
inc
inc
push
jns
mov
dec
mov
xchg
icebp
xchg
hlt
sub
push
shl
cmp
xchg
dec
dec
cmps
test
or
dec
inc
pop
inc
mov
stos
cmp
mov
dec
(bad)
mov
jnp
dec
in
in
add
dec
jmp
pop
int3
push
add
leave
imul
stos
jo
bound
or
loopne
in
sbb
es
(bad)
pop
sub
jns
fist
push
sub
es
add
inc
add
sub
and
mov
xchg
add
push
add
xor
test
sub
pop
outs
and
jp
xchg
lock
add
dec
mov
xchg
cs
adc
mov
xor
mov
ja
js
adc
cmp
push
jmp
add
fnstenv
sub
xor
cmp
test
pavgw
and
xchg
bound
sbb
fsubr
sub
or
or
cld
xor
rcr
inc
hlt
add
pop
imul
pushf
or
and
and
cmp
xor
mov
arpl
and
mov
hlt
or
shl
dec
inc
(bad)
shr
aas
inc
lock
push
adc
xchg
xlat
xchg
jo
mov
std
in
in
push
and
stos
fimul
mov
xchg
cmp
icebp
add
inc
sub
adc
xor
jo
not
and
and
pop
in
call
mov
mov
or
mov
daa
fimul
lahf
and
adc
or
pop
mov
dec
push
jns
mov
call
jle
xor
test
jl
inc
cmp
jne
(bad)
les
add
jne
mov
retf
iret
xchg
mov
add
or
pop
mov
leave
cmp
adc
test
add
call
test
jo
sub
call
sbb
popf
mov
lahf
add
stos
cwde
push
sbb
mov
or
sbb
out
call
sub
fdiv
test
mov
mov
push
add
int3
ffreep
push
ret
or
in
push
add
sahf
inc
push
daa
movs
(bad)
dec
lods
add
xor
jne
inc
push
xlat
je
outs
movs
push
pop
xchg
into
push
add
adc
xchg
lock
add
push
loopne
aaa
sbb
aas
pushf
add
jae
or
jo
pop
ror
push
enter
and
push
fcom
jnp
out
inc
lahf
test
push
mov
gs
xor
or
mov
rcl
push
call
xchg
xchg
and
mov
mov
add
pop
mov
sub
mov
pop
daa
push
lods
pop
lods
shl
or
push
xchg
(bad)
dec
loopne
fdivr
outs
mov
stc
adc
inc
xor
(bad)
stc
xor
(bad)
and
adc
jle
add
or
mul
adc
mov
pop
and
std
pop
adc
sbb
fidiv
cmp
xor
ss
stos
imul
cmps
(bad)
inc
mov
pop
and
push
push
shr
ss
add
add
add
nop
add
sbb
push
adc
jg
sbb
in
ds
push
push
jb
nop
mov
mov
and
sbb
xchg
rol
mov
and
mov
or
test
mov
sbb
jnp
mov
call
sub
sbb
inc
cmp
sbb
xlat
and
mov
mov
jg
imul
jo
test
sbb
dec
pop
mov
scas
cmp
inc
add
mov
adc
fwait
imul
jmp
add
add
add
xor
adc
mov
out
rol
and
(bad)
arpl
lds
shr
pop
xor
dec
test
and
adc
pinsrw
bound
add
pop
pop
fnstsw
pop
or
mov
xor
push
mov
outs
sub
xlat
retf
cs
fcomp
sahf
pop
add
aas
add
xchg
and
out
xchg
inc
add
addr16
arpl
push
outs
jne
gs
fisttp
push
(bad)
xor
pcmpgtd
add
add
add
std
bound
or
in
je
cmps
add
pusha
inc
push
ror
mov
add
mov
ret
mov
in
xchg
clc
push
mov
push
ins
int3
ror
loopne
mov
or
pusha
cmp
mov
sbb
pop
rcl
(bad)
mov
(bad)
sbb
cmp
mov
cs
nop
xor
xor
or
add
add
call
adc
cmp
mov
inc
lods
fist
mov
ret
aad
and
out
add
and
mov
dec
jle
or
movs
jecxz
add
and
mov
xor
xor
fwait
mov
pop
lods
adc
es
jle
xlat
addr16
imul
xchg
mov
dec
aam
lea
or
ds
aam
pop
xor
mov
push
popa
dec
xor
int
and
(bad)
movzx
les
test
xlat
cs
les
push
add
js
dec
add
sub
in
xor
test
movs
add
inc
add
pop
in
cmp
dec
addr16
jne
rcr
fild
seto
jns
xchg
movs
or
mov
ds
mov
rcr
loope
imul
into
dec
lea
ds
shl
inc
or
loopne
push
xor
push
stc
retf
push
inc
and
add
add
add
sti
mov
adc
sbb
jle
jne
push
inc
adc
xor
mov
and
pop
and
inc
ret
ret
movs
aas
fst
fsubr
xchg
cmps
sbb
pop
sbb
push
pop
xor
inc
scas
cmp
pop
cmp
aas
arpl
adc
sbb
retf
add
jb
add
shl
push
inc
add
rcl
jge
and
shr
test
mov
push
pop
sbb
call
jl
call
xor
je
dec
jb
clc
je
mov
in
frstor
adc
dec
cmp
ja
push
push
and
inc
add
mov
jp
xor
and
xchg
push
or
inc
lahf
hlt
das
and
outs
or
jmp
out
clc
jecxz
(bad)
sbb
adc
add
sub
je
push
loope
add
jg
ror
retf
inc
add
add
dec
push
loope
xchg
add
(bad)
xor
sub
dec
push
retf
shl
push
add
dec
iret
and
mov
(bad)
test
arpl
(bad)
js
dec
loopne
xchg
mov
mov
sub
bound
pop
or
pop
hlt
cmps
cmp
jns
jo
add
mov
mov
or
test
imul
ror
mov
push
pusha
imul
jg
push
push
add
enter
adc
or
sti
sub
inc
or
nop
cmp
inc
or
jmp
arpl
add
add
add
sub
das
add
add
sbb
bound
fbld
pop
dec
icebp
or
jge
or
and
pop
das
clc
add
sbb
or
inc
lods
fcomp
cmp
mov
xor
xor
daa
adc
repnz
jmp
call
nop
outs
cli
mov
popa
push
jo
inc
jnp
xor
das
fcom
or
cmp
mov
cmp
add
adc
xchg
inc
xor
cdq
add
aaa
fisttp
std
das
adc
fs
pop
inc
mov
jne
cmc
pop
jb
push
or
or
push
clc
or
pop
(bad)
jns
pop
ret
add
xor
(bad)
test
inc
cmp
add
loop
dec
pop
pushf
ret
push
mov
dec
or
jno
pop
fnsave
jbe
add
adc
mov
pop
ja
mov
mov
cmp
sbb
xor
add
or
cmps
lds
imul
jge
xchg
adc
inc
(bad)
retf
clc
loopne
leave
cmp
pop
mov
push
leave
mov
add
sbb
pop
paddq
sbb
dec
mov
jno
scas
(bad)
pop
inc
shl
add
pusha
loop
xchg
xchg
movs
push
sbb
scas
or
inc
into
mov
push
aam
sub
jle
push
clc
(bad)
aad
dec
xchg
in
add
pop
test
mov
cld
cmp
sub
aas
jecxz
int3
scas
adc
cmp
cmp
jbe
adc
(bad)
sti
xchg
xlat
and
fstp
fucomi
(bad)
and
test
sbb
fabs
fcomp
mov
sbb
or
mov
(bad)
jno
xchg
js
fwait
dec
xchg
outs
bound
mov
dec
mov
sub
daa
dec
or
pop
push
push
cmp
adc
out
cmp
loopne
push
(bad)
mov
pop
xor
loope
aam
add
mov
xor
mov
popa
add
repnz
xchg
(bad)
mov
cmp
or
mov
pop
imul
(bad)
mov
hlt
push
inc
mov
or
out
pop
push
sbb
mov
jno
fld
inc
retf
pop
mov
sbb
inc
shl
dec
sub
mov
rol
in
mov
clc
add
addr16
dec
imul
rcr
mov
cmp
fcom
add
jb
and
cmc
add
mov
int3
cmp
(bad)
mov
xchg
cmp
in
and
hlt
sbb
xchg
mov
lods
pop
retf
mov
or
shl
lock
dec
push
fcom
ja
dec
xor
icebp
ja
daa
out
cmp
je
or
jno
loope
push
test
hlt
dec
add
cs
and
fucomp
jge
test
dec
pop
jle
mov
sbb
push
clc
mov
mov
or
imul
jo
shl
sbb
cwde
add
lods
mov
es
scas
neg
add
nop
push
nop
(bad)
cmps
ins
xchg
mov
and
ins
lock
lahf
xor
lahf
mov
js
jnp
shr
mov
pop
jb
jmp
jl
sub
or
(bad)
pop
leave
test
pop
adc
add
push
and
mov
outs
bound
push
add
xor
shl
int3
dec
mov
cmp
jmp
sub
inc
or
xchg
adc
scas
test
cli
aam
xor
xor
inc
or
gs
leave
inc
ror
mov
aam
fwait
les
dec
and
rcl
push
loop
enter
mov
imul
ret
push
loopne
loopne
loopne
add
cs
inc
sub
(bad)
inc
mov
lds
add
or
add
xchg
add
add
add
push
jmp
shl
mov
push
sbb
or
movs
fnop
xchg
iret
fs
sub
ret
add
jg
es
rcl
aaa
or
pop
imul
xchg
pop
or
xlat
sbb
add
ror
xor
dec
mov
daa
pusha
aam
dec
inc
sar
add
scas
add
cli
jbe
dec
fistp
adc
test
jl
addr16
jne
dec
aam
(bad)
xlat
xor
cmp
xor
xlat
pop
pop
in
sub
and
dec
lahf
das
lahf
adc
mov
or
pop
add
add
aas
add
dec
repz
xor
lock
sti
cdq
mov
mov
pop
xor
push
int3
(bad)
je
pop
int3
or
mov
les
popf
movs
ins
mov
ror
ror
push
adc
fld
push
xchg
movs
sbb
lahf
adc
or
call
mul
mov
pop
icebp
push
and
add
or
leave
mov
in
add
mov
adc
arpl
movs
mov
mov
adc
imul
adc
add
jecxz
mov
in
and
cmp
js
or
push
adc
ret
push
in
pop
ins
(bad)
fld
dec
test
add
mov
jge
dec
addr16
test
sbb
dec
retf
ficom
pop
sbb
add
sbb
sub
mov
imul
push
rol
mov
(bad)
dec
and
cmc
and
dec
mov
imul
out
fwait
adc
push
adc
pop
sbb
jg
pusha
xor
cmps
(bad)
push
push
das
dec
pop
outs
and
pop
inc
push
cmp
and
push
inc
rol
adc
movs
leave
rol
das
mov
outs
imul
rol
popa
sbb
push
jmp
xor
xor
dec
add
adc
inc
add
adc
dec
rol
xor
pop
jl
mov
dec
add
arpl
ss
ds
adc
pop
(bad)
fbld
mov
enter
test
xor
push
mov
add
nop
cli
lds
mov
cmps
mov
or
pop
not
cmp
sbb
jecxz
xor
fistp
mov
ror
mov
mov
jbe
adc
loopne
pop
push
fdivrp
fmul
jo
sar
pop
cmp
or
add
aad
jl
inc
rcl
or
icebp
popa
or
add
fsub
adc
ret
xchg
mov
cld
cld
test
mov
cli
push
mov
mov
jp
and
fsub
adc
or
sub
call
and
xor
div
pop
cvtps2pd
rcr
shl
ins
or
cmp
cmp
add
inc
mov
fidivr
daa
cli
fs
xchg
sub
sar
cs
test
lock
xchg
and
mov
jmp
fstp
out
push
cmp
gs
add
mov
or
fsubr
pusha
ret
add
fsub
and
inc
popa
sbb
xchg
mov
sub
js
or
pusha
jno
stos
xchg
pop
mov
add
sub
shl
dec
add
stos
or
dec
call
std
mov
push
push
fld
mov
mov
mov
cmp
or
jb
sub
mov
loopne
push
add
rol
or
xchg
mov
lea
and
call
jle
add
xchg
cmp
lea
cmp
push
stos
sbb
adc
popf
push
pop
jg
jecxz
inc
loop
push
movs
icebp
sti
inc
js
pop
sbb
int3
je
pop
pop
cld
mov
cwde
and
iret
inc
mov
sub
adc
test
push
inc
inc
mov
and
adc
jp
cmp
dec
out
lahf
adc
clc
mov
mov
(bad)
and
cmp
outs
ret
ret
mov
retf
xor
lea
in
jne
or
daa
xchg
jmp
popa
stos
ret
sahf
fs
shl
inc
push
mov
add
ja
add
inc
cmp
add
push
xor
add
aad
xor
data16
idiv
(bad)
pop
aaa
sbb
adc
add
bound
xor
pop
daa
mov
xor
aaa
imul
jmp
neg
xor
pop
xor
icebp
fisub
xor
bound
bound
sub
and
add
test
aas
inc
out
add
push
imul
add
mov
add
or
pop
adc
test
iret
jbe
je
(bad)
(bad)
pop
xor
das
mov
test
xorps
movs
enter
popa
mov
pop
inc
les
pop
sti
(bad)
cmp
mov
ins
jb
and
xor
sbb
sub
fwait
dec
les
stos
sub
pop
leave
sub
lds
add
inc
add
inc
pusha
add
rcr
inc
jecxz
leave
sbb
fs
jg
(bad)
(bad)
sub
jmp
in
mov
sar
call
add
repz
lock
jbe
inc
or
fcom
cmp
out
inc
fsubr
mov
ret
mov
inc
sar
cdq
pop
aam
sbb
stc
inc
enter
sub
pop
int3
pop
bound
loope
shr
dec
shl
add
lea
lds
inc
mov
out
mov
sub
imul
js
sbb
jb
mov
or
xor
mov
inc
sub
sar
jecxz
inc
and
sub
and
lock
shl
mov
aaa
stos
lods
es
dec
or
gs
mov
adc
pushf
shr
icebp
mov
inc
push
mov
mov
xchg
add
mov
add
jnp
or
enter
add
fsub
pusha
add
daa
xchg
call
inc
sub
(bad)
push
xchg
cmp
sbb
pop
in
mov
mov
pusha
mov
cmp
inc
mov
mov
cmp
inc
mov
daa
in
pop
inc
add
inc
sub
fild
mov
mov
dec
call
adc
adc
dec
mov
daa
mov
inc
pop
fiadd
adc
jo
dec
imul
jl
fild
sbb
jnp
and
sti
push
ins
add
mov
dec
add
fsubrp
adc
push
sbb
cmc
mov
jae
xchg
ret
sub
(bad)
jmp
sbb
push
loopne
ret
or
cmp
shr
shl
sbb
in
ins
repnz
push
loopne
sbb
inc
add
call
loop
mov
sub
(bad)
and
push
xor
mov
push
das
add
inc
es
adc
pop
cmp
ret
push
shr
and
out
add
pop
mov
imul
ja
pop
mov
or
add
xchg
adc
icebp
add
mov
lock
outs
push
(bad)
mov
or
imul
pop
add
les
xchg
sahf
push
and
and
add
add
add
sbb
inc
addr16
push
add
inc
pop
jae
dec
push
sahf
mov
add
and
mov
or
dec
sub
jnp
sar
mov
nop
mov
inc
and
or
icebp
ror
ja
or
loopne
scas
test
mov
mov
test
add
add
movs
add
sub
loopne
push
loopne
cmp
mov
inc
cs
pop
mov
je
mov
ret
call
cmp
jne
lods
pop
stos
mov
es
pop
ror
and
mov
(bad)
leave
fwait
shl
dec
lock
xor
mov
and
outs
push
cwde
sub
jae
arpl
imul
ret
push
sub
sub
inc
xchg
test
jbe
and
dec
es
adc
loope
jb
scas
sub
fistp
sub
mov
popf
cwde
loope
or
inc
and
test
pop
sub
shr
loop
test
jb
aam
loop
mov
jnp
fadd
mov
inc
bound
out
jo
mov
pop
test
dec
adc
adc
adc
add
lods
int
inc
adc
mov
in
imul
test
loope
aaa
xchg
inc
call
pop
jp
mov
sub
push
popa
cmp
shl
ror
jecxz
xchg
(bad)
sbb
mov
sbb
adc
jecxz
xor
ret
add
out
xchg
and
push
outs
xchg
dec
mov
fidiv
jbe
mov
aam
pushf
stc
lea
out
dec
dec
in
mov
jmp
test
push
pop
loop
mov
ja
es
pop
dec
aaa
sbb
lea
xchg
arpl
push
inc
add
lock
mov
ins
adc
inc
leave
daa
add
sbb
rcl
faddp
mov
and
xchg
and
fld
enter
rcl
add
lods
popa
mov
mov
popf
push
jp
xchg
sbb
je
cmp
sub
add
dec
cli
pop
js
mov
test
add
mov
inc
jnp
inc
inc
add
ss
cld
ss
sub
mov
xchg
and
aad
mov
cmp
push
je
in
test
cld
les
in
je
imul
push
adc
inc
cmp
cwde
sbb
icebp
xor
mov
cmps
stos
mov
dec
in
je
mov
test
jo
dec
push
ins
mov
push
int
mov
test
iret
mov
sbb
lods
leave
fs
mov
in
pop
and
push
leave
pop
pop
pusha
test
xor
xor
(bad)
or
lea
pop
jb
jmp
push
add
fmul
loopne
dec
and
sbb
dec
sub
js
leave
lea
mov
push
ja
imul
inc
mov
inc
inc
shl
cmp
cmp
cmp
nop
pop
and
mov
sub
xor
scas
inc
cmps
mov
jno
rcr
xor
lds
lock
sbb
sub
push
neg
mov
bound
call
adc
xchg
push
push
jge
jmp
and
retf
adc
retf
or
leave
adc
shl
sbb
test
and
push
mov
std
loop
mov
add
cmp
fbld
or
std
call
and
add
add
add
cdq
mov
invd
push
mov
fbld
in
push
mov
rol
ss
test
adc
fisttp
test
pop
hlt
or
push
clc
cld
pop
add
pop
jae
out
mov
xchg
out
jo
cmp
(bad)
cmp
dec
xchg
(bad)
fdivr
popf
sbb
shl
aam
pop
sbb
mov
sub
leave
mov
or
out
push
jmp
adc
cmp
adc
(bad)
enter
in
(bad)
int3
dec
dec
loop
pop
rol
sar
mov
or
aaa
dec
add
add
sub
cwde
out
ss
lahf
clc
lea
pusha
mov
and
call
inc
fcom
mov
test
int
(bad)
and
mov
mov
xchg
movs
or
jmp
xchg
pusha
ror
push
and
or
add
push
push
sub
jg
mov
int3
clc
cmps
nop
fwait
test
xlat
xor
jno
add
cmp
xor
pushf
xchg
divps
inc
stos
push
mov
push
xchg
adc
add
rcl
lods
into
xchg
adc
pop
cmp
repz
mov
add
lahf
test
push
(bad)
out
sbb
or
nop
shl
lds
outs
fiadd
xchg
mov
sub
dec
cs
cmp
xor
retf
in
repnz
fs
push
sbb
test
in
test
mov
add
sub
idiv
sbb
jl
sbb
jne
jl
outs
jo
inc
xor
jo
fwait
je
gs
inc
jmp
or
es
mov
js
rcl
ret
sub
aam
inc
fisttp
pop
int3
icebp
aas
mov
mov
loopne
add
add
add
adc
jo
add
pop
or
and
scas
cmp
nop
jne
adc
add
xchg
fwait
dec
mov
mov
sti
and
jb
int3
les
stos
xchg
push
(bad)
push
rcl
int3
imul
add
and
test
push
ret
retf
mov
and
jnp
fcomp
adc
inc
lahf
push
inc
ror
imul
sbb
inc
push
jg
mov
xor
shr
add
add
add
or
loope
aas
fisttp
outs
test
jno
mov
lods
adc
test
lds
add
loope
sbb
popa
xchg
rcr
push
les
sbb
mov
mov
inc
inc
add
lea
outs
fild
adc
cmp
sbb
mov
rcl
push
je
dec
dec
jno
lods
es
aaa
mov
pop
add
je
mov
pusha
imul
xchg
popa
neg
outs
xor
add
dec
mov
fild
mov
sub
xchg
ret
lods
inc
ins
movq
jbe
inc
push
sbb
push
pop
push
pop
or
and
xchg
loop
sbb
addr16
(bad)
pop
fs
pop
adc
inc
and
movs
ins
adc
fs
and
imul
jecxz
sti
cmp
and
push
inc
jae
jae
add
push
adc
inc
imul
sbb
inc
and
ja
jecxz
cmp
dec
pop
jne
arpl
sbb
iretw
jns
push
push
or
mov
xor
xor
inc
xchg
out
dec
jae
or
test
jecxz
push
adc
dec
das
push
ins
lods
mov
mov
jne
jbe
stos
fild
mov
dec
cmps
xlat
imul
xor
push
lahf
neg
mov
push
add
daa
push
sbb
rcr
lahf
mov
pop
outs
add
mov
push
adc
inc
mov
fwait
in
pusha
lds
xchg
add
and
test
mul
pop
cmp
hlt
test
in
mov
jmp
retf
push
test
das
pusha
push
clc
xchg
shl
or
sar
enter
push
mov
sar
adc
dec
in
pop
xor
outs
mov
mov
add
test
loope
arpl
push
mov
add
mov
inc
loopne
aad
stos
mov
test
and
mov
push
pop
in
ins
pop
and
je
jp
sti
xor
iret
rol
dec
cmp
sub
popa
mov
in
add
pop
outs
idiv
cld
lods
fadd
adc
adc
adc
dec
sub
dec
adc
lds
mov
mov
popf
inc
cld
lds
jl
shl
daa
movs
xchg
and
or
mov
push
aam
clc
sahf
mov
push
(bad)
(bad)
sbb
push
sbb
jns
pop
xchg
enter
xchg
cwde
repz
aam
or
adc
mov
test
add
push
xor
mov
pop
push
fmul
(bad)
cld
add
cld
add
mov
int3
sub
jne
stc
adc
shr
jmp
sbb
in
std
mov
jne
inc
movs
or
cmc
or
daa
inc
daa
pop
push
or
push
jge
mov
or
test
xchg
loop
push
mov
mov
rol
mov
adc
mov
cmps
or
jne
sbb
rcl
sub
xor
retf
fwait
push
inc
and
(bad)
loopne
loopne
push
dec
rol
push
add
aad
cmc
adc
push
cmp
sbb
outs
cmc
dec
(bad)
ffreep
fdivr
lock
hlt
je
mov
imul
mov
shl
aad
mov
popa
pusha
push
(bad)
push
bound
jo
dec
mov
sbb
and
(bad)
jbe
(bad)
icebp
jno
dec
xchg
push
or
add
push
push
ror
clc
mov
sbb
and
xor
mov
adc
inc
sbb
hlt
imul
dec
xor
sbb
or
call
and
dec
inc
inc
dec
jmp
mov
pop
dec
xchg
cmp
ret
and
cmp
jmp
ror
and
hlt
and
xchg
push
inc
xchg
ret
add
add
xor
xchg
retf
and
cmp
movs
push
icebp
add
sub
mov
and
outs
popa
jb
push
push
pop
sti
xor
jmp
mov
gs
add
sub
or
xchg
sbb
xlat
xchg
pop
ret
fadd
imul
pop
lock
adc
sbb
xchg
pop
push
and
std
iret
rol
clc
mov
sbb
(bad)
lea
jne
xchg
add
xor
in
call
xchg
and
in
call
or
cmp
fist
cld
dec
inc
jmp
dec
mov
xor
and
ins
cmp
inc
jo
mov
clc
test
mov
test
mov
imul
push
js
dec
xchg
in
(bad)
cdq
in
inc
cmp
cmp
(bad)
call
loopne
jne
lock
cdq
fs
and
loopne
sub
cwde
neg
shl
in
xchg
aam
mov
rcr
cli
sar
xchg
add
loopne
bound
cmc
(bad)
call
dec
add
or
scas
mov
xor
mov
les
je
loope
push
dec
or
movs
or
xchg
aam
loop
daa
xchg
dec
mov
push
add
xor
pusha
push
cmp
test
xchg
lahf
mov
sahf
jae
and
ret
loopne
test
and
and
add
pop
push
jo
mov
add
adc
imul
pusha
add
adc
xlat
add
and
and
mov
add
fwait
push
push
pop
je
sub
push
or
rol
sbb
add
xor
inc
jne
adc
add
sub
pusha
mov
xor
add
lahf
mov
cmp
add
lahf
and
(bad)
add
mul
clc
aam
push
jmp
cmp
out
add
add
pusha
adc
daa
and
add
mov
sbb
mov
pusha
lods
cmps
add
inc
add
and
dec
inc
loop
xchg
fidiv
shr
jmp
(bad)
sbb
inc
cmps
mov
push
sub
sub
mov
xchg
ret
dec
or
or
and
or
push
xchg
xchg
sub
cmp
ins
dec
add
aas
cmps
add
aas
push
pop
sub
push
je
sbb
mov
pusha
in
add
push
or
addr16
push
xor
or
dec
lahf
aas
loop
inc
push
mov
add
aaa
out
mov
rcl
sbb
bound
or
aaa
add
adc
push
xchg
or
dec
add
inc
outs
dec
xchg
push
std
xchg
mov
lea
dec
mov
sbb
sbb
push
push
out
xor
push
mov
push
sbb
adc
cmp
mov
outs
test
in
repz
outs
movs
repz
push
adc
inc
add
shr
ds
add
cld
dec
adc
sar
loopne
push
xlat
ins
(bad)
jbe
add
mov
push
xor
push
dec
movs
push
test
pop
clc
push
jl
push
xor
jo
mov
inc
sub
int3
add
add
sub
cmp
in
jae
repz
cmps
fdiv
jo
ror
fisub
mov
xor
test
imul
add
pop
pushf
mov
bound
push
or
push
dec
mov
stc
mov
(bad)
loope
je
xchg
(bad)
nop
push
int3
or
lods
fst
push
je
pop
(bad)
mov
push
xchg
cwde
movs
aas
outs
pop
xchg
out
mov
fsubr
ins
mov
clc
push
jl
sbb
stos
movs
test
nop
outs
add
test
inc
outs
mov
mov
movs
sub
cmps
xchg
call
outs
pop
xor
cs
dec
jg
cmps
add
pusha
push
push
mov
scas
stc
cs
xchg
push
or
outs
je
stc
cmp
pop
outs
xchg
cs
push
movs
mov
retf
stc
dec
fwait
mov
mov
mov
mov
add
add
push
ss
hlt
cmp
(bad)
int3
push
cld
in
aas
mov
mov
daa
push
lahf
outs
push
push
inc
cmp
or
add
arpl
push
cwde
xchg
push
das
fcomp
jo
push
push
scas
push
jne
push
add
jle
mov
xor
rcl
mov
xor
dec
fcomp
or
loopne
sub
xchg
fld1
cwde
and
ds
jle
and
push
or
js
sahf
ja
xchg
push
nop
pop
pop
fsubr
aas
aad
int
jmp
push
add
pop
xchg
xchg
out
push
mov
sbb
mov
bound
test
mov
add
aam
lahf
mov
pop
das
fsubr
xchg
adc
lock
xor
retf
cmps
mov
out
xchg
xchg
add
enter
imul
xchg
in
sar
xchg
sbb
test
mov
aaa
mov
mov
shr
int3
clc
test
mov
mov
es
aas
cmp
sahf
cmp
stos
out
test
xchg
push
int3
retf
jle
fbstp
inc
popa
ds
mov
(bad)
lahf
je
enter
rcr
dec
fadd
push
fmul
push
mov
clc
std
cmp
pop
adc
xor
add
je
gs
xchg
ret
scas
push
pop
push
or
lds
ins
sbb
mov
call
push
and
pop
jo
add
aaa
aam
cmp
test
lahf
out
mov
dec
push
and
sbb
pop
push
arpl
jg
push
mov
je
cld
add
or
push
inc
jnp
lea
in
shrd
outs
daa
inc
into
retf
(bad)
fldcw
xlat
pusha
fiadd
adc
inc
in
add
mov
add
in
inc
ins
dec
dec
push
scas
dec
in
data16
inc
loopne
push
inc
popf
cld
sahf
mov
jnp
jl
push
cmp
xchg
push
vpextrq
push
jl
int
mov
test
push
fcom
stos
sahf
push
pusha
stos
lahf
idiv
int
lods
lods
push
lods
sahf
scas
push
scas
scas
inc
in
mov
push
mov
mov
mov
mov
dec
add
cmp
or
mov
xchg
into
pop
sub
push
fadd
test
pushf
daa
add
es
in
adc
call
lock
cmp
(bad)
leave
dec
int3
push
mov
int
into
pop
shl
push
sahf
pushf
shl
sub
inc
mov
or
lock
cmp
jo
push
iret
repz
add
dec
sbb
push
push
jge
sbb
mul
pop
ja
out
push
jo
lahf
pushf
push
mov
outs
out
fst
ror
push
in
clc
push
adc
pop
iret
repz
push
mov
sbb
rcl
inc
pop
push
clc
daa
jns
(bad)
adc
xchg
push
clc
out
push
(bad)
inc
ret
fnsave
pusha
sbb
popf
pusha
fucomip
mov
pop
outs
je
sahf
out
fs
push
mov
add
or
das
sbb
(bad)
clc
push
es
fs
js
inc
sbb
mov
mov
es
das
and
push
and
cmps
popf
daa
int3
and
adc
inc
sahf
mov
sub
test
jge
add
pop
es
imul
mov
fistp
aaa
adc
dec
add
push
jl
add
test
fwait
dec
int
jnp
pop
mov
mov
mov
fwait
into
or
es
aas
repnz
adc
pop
sti
in
mov
rol
dec
not
dec
pop
mov
push
add
pop
add
pop
sub
test
clc
add
adc
fistp
push
add
shr
pop
mov
mov
nop
inc
pop
test
pop
movs
pop
ins
or
sbb
dec
inc
push
add
(bad)
push
inc
je
xchg
push
mov
cwde
fmul
(bad)
jmp
jae
push
sbb
push
mov
data16
fcomp
hlt
push
or
das
and
pushf
fdiv
push
inc
push
pop
fimul
fisub
(bad)
movs
fistp
pop
jo
bound
jo
das
sub
or
inc
jg
(bad)
adc
and
and
pop
aam
jo
sbb
dec
fild
pop
ins
loopne
mov
cmp
mov
rcl
inc
xor
or
xchg
push
inc
xchg
xchg
ror
push
hlt
dec
rcl
push
mov
call
xchg
fiadd
shl
sahf
sub
cwde
loopne
aam
iret
jae
inc
push
xchg
fsubr
ds
mov
test
das
mov
inc
lock
inc
cmps
sub
(bad)
in
outs
push
mov
les
push
push
in
test
(bad)
iret
pop
mov
inc
inc
sub
aam
sar
das
xlat
ins
enter
leave
pop
dec
fcmovu
aaa
in
xor
pop
loopne
nop
retf
pop
push
int3
push
xchg
mov
mov
add
dec
cmp
add
mov
(bad)
mov
jns
scas
push
or
call
out
fidiv
fdivr
int
(bad)
mov
push
mov
push
pusha
jle
jg
imul
aas
in
sbb
add
push
test
int
add
pop
xchg
inc
aaa
sti
pop
ja
nop
push
enter
pop
dec
push
xchg
icebp
ss
mov
dec
mov
fwait
dec
jmp
xchg
push
push
lock
pushf
popf
cmps
lahf
push
pop
addr16
loope
inc
jbe
and
movs
loopne
jnp
pop
and
lods
pop
add
ins
repz
inc
add
and
jl
in
or
addps
push
push
fisub
shl
aad
xlat
ins
lds
lock
fild
sbb
data16
cs
lock
in
je
aam
call
jbe
push
sub
mov
fistp
push
out
iret
sbb
aam
fs
mov
push
mov
inc
icebp
mov
mov
out
pop
push
mov
fadd
into
ins
fld
inc
outs
movs
or
ror
adc
pop
in
push
adc
push
push
pop
enter
fbstp
in
shl
push
xor
inc
(bad)
and
mov
sbb
and
pop
test
in
sub
inc
aas
fisttp
fisubr
push
shr
int3
sub
mov
out
enter
daa
dec
cmp
js
add
xor
xchg
rol
daa
div
pop
push
dec
inc
pop
or
mul
mov
mov
xchg
rcr
sbb
pop
xchg
outs
lods
push
les
inc
add
add
mov
(bad)
mov
mov
les
out
out
pushf
inc
neg
jge
push
in
add
mov
div
test
push
sar
(bad)
fld
fiadd
mov
mov
test
test
cmp
inc
mov
in
jno
xor
pop
adc
push
ror
jg
add
or
(bad)
fisub
push
dec
pop
pop
mov
out
pushf
push
rol
push
push
inc
es
inc
inc
sub
cwde
and
dec
aam
shl
or
fild
and
inc
xchg
aaa
pop
xchg
jo
lahf
es
add
xchg
add
test
sbb
mov
movs
rcl
adc
push
in
mov
arpl
adc
aaa
hlt
pushf
(bad)
js
mov
mov
push
mov
stos
push
sub
int
int3
mov
mov
push
adc
mov
mov
mov
mov
push
mov
ret
neg
out
(bad)
push
lds
pushf
int3
dec
mov
into
push
shr
push
ret
jle
push
push
mov
cmps
outs
mov
(bad)
into
xlat
push
sub
pusha
(bad)
data16
loopne
mov
jmp
out
push
lock
push
or
fdivrp
push
sub
int
fist
add
cld
add
xchg
loope
mov
push
and
mov
call
sbb
adc
adc
and
ss
out
test
pop
mov
sbb
sbb
fwait
in
ins
pushf
sbb
and
and
and
mov
ins
or
test
sub
nop
xor
xor
ds
(bad)
and
cld
into
push
lods
rol
push
shl
mov
cmp
test
fld
pop
aad
(bad)
pop
fcom
fiadd
xor
ins
out
ins
ss
adc
ds
call
test
(bad)
out
push
push
mov
icebp
mov
dec
test
movs
mov
clc
std
push
add
mov
xor
fs
pop
fldcw
rcr
pusha
push
and
(bad)
cmp
hlt
data16
imul
ins
clc
ins
jo
jmp
jae
jne
jl
and
in
mov
cs
mov
iret
cmps
push
clc
jg
add
inc
mov
div
fcomp
jg
cld
jae
pop
pop
lahf
out
and
pop
add
mov
out
ins
ss
cwde
rol
fmul
push
rcr
(bad)
push
int3
pop
pop
in
adc
mov
pop
add
ffree
in
pop
daa
lock
pop
out
push
cmp
pop
js
push
push
mov
push
add
dec
movs
sub
pusha
movhps
or
pop
adc
add
pusha
pop
mov
scas
into
mov
scas
mov
jmp
push
shl
enter
push
inc
out
push
mov
ret
pop
inc
mov
inc
dec
or
mov
sbb
iret
in
movs
rol
in
mov
fadd
pop
dec
les
test
ins
cmp
fdivr
mov
call
inc
lock
mov
dec
pop
adc
push
cmp
aad
push
sbb
or
add
jns
and
out
cmp
test
js
shl
adc
add
mov
addr16
neg
pusha
mov
push
in
(bad)
addr16
xchg
mov
fistp
pop
loope
pushf
push
push
jecxz
loopne
imul
sub
inc
or
xor
shl
retf
fnstcw
in
out
fdiv
repz
es
cli
fistp
sti
xchg
push
test
dec
add
dec
into
push
adc
imul
shl
dec
xchg
imul
mov
push
call
sbb
ins
sub
inc
aam
std
ss
cmps
inc
das
nop
test
add
push
jl
jg
loopne
pop
daa
retf
cmps
sbb
dec
jbe
push
adc
jl
fwait
shl
(bad)
(bad)
int
sub
fild
ins
fidivr
loope
jecxz
out
out
rcr
(bad)
call
jbe
xor
fld
aam
dec
out
mul
hlt
cld
imul
inc
adc
push
push
push
movs
int
jo
fmul
inc
or
push
cmp
inc
adc
sbb
mov
into
sbb
xchg
outs
and
cmp
shr
jmp
sub
inc
sub
imul
sub
push
fs
mov
imul
xor
push
adc
push
push
aam
shl
loopne
push
jo
push
test
push
ins
addr16
adc
push
movs
pop
aaa
mov
sbb
aas
jo
jb
push
gs
mov
push
jae
mov
xlat
movs
push
adc
mov
movs
xlat
movs
xlat
push
mov
lea
pop
xchg
xor
call
rcr
js
scas
and
and
shl
rcr
aas
inc
je
pop
xor
sbb
icebp
loope
adc
ret
add
mov
out
and
add
js
fidivr
push
cwde
outs
fwait
jbe
dec
fild
add
aam
sets
cmp
pop
(bad)
push
mov
mov
pop
add
mov
sbb
adc
pop
out
pop
mov
mov
add
dec
repz
add
push
sbb
pop
pushf
lahf
cmps
stc
cmp
cmp
jo
mov
(bad)
push
push
je
scas
cmp
inc
push
inc
push
dec
push
sub
out
repz
mov
mov
rol
out
out
repz
mov
dec
push
push
fdiv
dec
or
jge
jo
mov
xchg
dec
repz
xor
and
bound
lock
jg
in
push
inc
jge
out
push
push
xor
test
(bad)
aas
and
fistp
jge
xchg
push
push
mov
add
fwait
mov
mov
mov
mov
in
push
lock
loopne
mov
sub
dec
pop
push
fdiv
xchg
mov
jl
dec
push
aaa
pop
daa
movs
call
stos
dec
fnstenv
mov
fs
fpatan
push
adc
fs
fist
lods
mov
push
inc
aam
(bad)
(bad)
loopne
and
lods
in
aas
in
ins
or
ds
push
adc
mov
aas
jle
push
inc
dec
dec
fadd
in
rcr
inc
lds
mov
leave
daa
rcr
in
push
loopne
pop
test
inc
ja
mov
aam
push
inc
xchg
push
push
iret
hlt
cwde
xchg
rcr
fsub
ss
pop
pop
fld
pop
adc
xchg
and
ins
mov
ins
push
xor
pop
mov
aas
loopne
cmp
mov
jl
jle
mov
fimul
sbb
mov
imul
in
aas
or
out
ds
mov
push
inc
mov
mov
mov
fldz
cmp
adc
js
paddsw
rcr
fdivr
and
daa
mov
out
mov
push
js
pushf
retf
push
int3
fnstcw
mov
pop
int
push
ins
into
add
out
fisub
rol
mov
mov
aam
aad
call
pop
pushf
sub
int3
cmc
ja
mov
jns
ja
lods
and
xchg
nop
fdiv
clc
ds
repz
pop
xchg
sub
fimul
imul
cmp
outs
sbb
pop
sub
ins
and
and
ficom
push
sub
das
dec
push
loopne
sub
nop
xor
xor
cmp
adc
out
out
push
add
out
je
hlt
push
cmp
ficomp
cs
loopne
xchg
in
push
js
fsubr
(bad)
push
lock
clc
mov
pop
in
mov
mov
loopne
mov
lahf
add
push
lea
mov
int
clc
js
nop
dec
xchg
dec
push
mov
mov
les
addr16
ja
ror
xor
mov
mov
test
sahf
mov
cs
mov
lods
mov
into
ss
aas
js
mov
lock
fwait
iret
shr
fdiv
shr
(bad)
xchg
data16
fld
mov
jecxz
mov
or
pop
pop
push
xlat
inc
jo
mov
xor
push
aas
mov
xchg
dec
add
mov
dec
repz
ror
push
std
les
push
fs
div
mov
rol
ret
lahf
cmps
test
sub
add
pop
adc
push
xchg
pop
psubusb
sbb
and
push
adc
inc
sbb
popf
lods
mov
mov
fsubr
movs
pop
and
and
call
(bad)
fwait
add
or
adc
add
div
lds
push
mov
inc
lds
xlat
pop
js
inc
inc
(bad)
xchg
xchg
daa
mov
pop
mov
in
sub
rcl
xor
ja
pop
mov
cmps
jo
add
lock
xlat
cmp
rol
xor
adc
pop
shufps
loopne
push
mov
aaa
xchg
and
or
adc
and
sub
or
sbb
lds
inc
pop
iret
add
stos
lahf
scas
call
push
push
fdiv
jbe
jns
nop
fnstsw
fisub
fild
ins
loope
mov
adc
in
push
sub
ins
mov
sbb
push
adc
js
int3
out
into
xchg
sub
rol
or
inc
xor
mov
adc
push
movs
xchg
pop
fild
and
adc
adc
(bad)
out
push
cld
push
jo
fs
fisubr
jmp
pop
pop
fcomp
mov
jbe
stc
push
add
lods
fdiv
aam
xadd
(bad)
in
push
pop
or
push
loopne
les
das
ins
jae
in
pop
loopne
bsf
loopne
icebp
xor
push
hlt
sbb
aaa
test
(bad)
pop
inc
and
add
fbstp
and
pop
addr16
push
mov
ins
push
ins
and
push
cwde
daa
push
push
sub
sub
aam
mov
sub
cmps
(bad)
cmps
push
in
sub
das
lock
scas
add
xchg
xor
dec
xor
xor
in
mov
popa
jnp
jl
scas
aaa
push
adc
xlat
pushf
inc
ret
cmps
fnstenv
push
pop
inc
push
sub
cwde
popa
daa
faddp
ja
js
out
adc
pop
inc
inc
inc
loop
fmul
das
adc
push
mov
pop
xchg
mov
mov
int3
into
inc
in
adc
mov
pop
sahf
pop
aaa
xor
outs
jbe
cmp
pusha
aaa
xor
das
mov
ins
mov
mov
hlt
call
mov
lods
mov
loopne
dec
movs
push
cmps
jbe
mov
clc
push
data16
push
lods
pusha
iret
xchg
hlt
pop
adc
jo
adc
mul
push
mov
out
cmps
mov
shr
idiv
add
push
pop
push
mov
mov
lahf
xchg
mov
dec
fwait
mov
shrd
jl
or
dec
pushf
fsub
jge
mov
hlt
xor
ds
add
or
push
aam
xchg
xchg
dec
nop
add
xchg
scas
ror
pop
je
inc
inc
add
ss
jnp
inc
daa
aas
mov
dec
cwde
cs
inc
inc
fucomip
sbb
aas
xor
test
cmps
stos
jge
mov
rcl
cli
fild
outs
outs
and
dec
dec
push
and
addr16
jge
in
pop
cld
cs
aaa
lock
sub
pop
push
std
fcmovnb
fisub
std
xchg
pop
xchg
xchg
xchg
(bad)
movaps
xchg
xchg
xchg
xchg
mov
xchg
cld
pop
sbb
pop
inc
subps
sub
daa
jl
cs
cmp
xchg
test
sar
push
xor
push
dec
loopne
daa
int
dec
in
lock
mov
push
cwde
push
mov
inc
cmp
push
mov
out
jnp
int3
lahf
push
test
xchg
mov
addr16
test
or
fs
add
cmp
mov
(bad)
xlat
(bad)
aas
sub
ins
das
xchg
push
ror
adc
push
xor
out
cmp
shl
or
push
and
lock
shl
adc
sub
jl
pop
nop
outs
sub
push
push
sbb
xor
jo
lock
pusha
out
xchg
push
lock
add
pop
or
jbe
xor
dec
push
jo
cmps
push
loopne
mov
xor
js
nop
push
in
push
fistp
pop
daa
ins
push
lods
push
rcl
sbb
clc
adc
sbb
(bad)
into
pop
into
push
mov
in
sbb
pusha
push
test
movs
push
cld
sbb
movs
sub
ret
xchg
add
sahf
adc
cmps
fiadd
(bad)
mov
test
xor
jnp
rol
pop
fiadd
sub
loope
xor
inc
sub
push
fistp
dec
push
fs
dec
es
nop
jns
out
push
loopne
daa
xor
fdivr
sub
push
int3
sub
lock
jl
or
mov
mov
hlt
or
out
push
hlt
inc
ds
inc
push
pop
cwde
iret
sub
js
cmp
test
dec
test
jbe
dec
xchg
aam
dec
and
mov
das
out
fld
loope
push
loop
out
repz
xchg
push
int3
xor
push
jecxz
jl
add
mov
push
rol
push
inc
out
push
mov
pop
mov
int
mov
scas
clc
pop
std
fnstcw
hlt
cs
dec
add
push
dec
add
aam
mov
push
xchg
or
or
or
jge
adc
or
out
aaa
mov
(bad)
clts
inc
adc
clc
push
mov
cmp
ficom
inc
adc
mov
sbb
inc
aam
ins
sbb
and
and
pushf
pavgb
nop
xor
sahf
push
lea
jbe
push
pusha
test
and
enter
push
int3
sub
and
lahf
cmp
shl
hlt
adc
out
xor
inc
aaa
call
pop
pop
mov
(bad)
test
(bad)
push
push
nop
(bad)
pusha
js
sbb
push
rcr
mov
ret
cmp
mov
cmp
sti
pop
mov
in
mov
pop
(bad)
ror
dec
mov
pop
mov
fcmovnb
shl
rol
in
fcom
fcmovbe
dec
pop
pushf
fistp
retf
pop
js
cmp
fistp
pop
inc
cmps
cmp
popf
aaa
into
push
fsubr
xchg
mov
dec
scas
(bad)
pabsd
popf
push
lahf
cli
push
aaa
ins
push
pop
mov
aam
sti
fimul
xchg
push
movs
push
sub
pop
neg
push
in
scas
mov
push
je
lahf
cmp
push
mov
pop
sahf
addr16
adc
push
push
push
(bad)
ins
push
adc
push
sub
push
push
and
pop
(bad)
jne
pusha
xor
hlt
jp
in
jl
sbb
test
test
and
inc
ror
es
mov
lods
ja
xchg
in
stc
xor
mov
js
push
les
test
fstp
iret
lock
push
jl
aas
fldcw
pop
add
push
push
sbb
fmul
(bad)
mov
adc
push
aaa
adc
push
fcomp
push
ins
mov
ins
cld
and
dec
sub
xchg
ss
test
dec
div
fcmovnu
lock
pop
pop
push
adc
movs
arpl
(bad)
mov
and
ror
fld
cmps
scas
scas
push
js
sub
push
lds
mov
mov
push
add
dec
retf
scas
rcl
mov
fwait
in
mov
fild
push
in
add
inc
aam
(bad)
out
push
icebp
push
xlat
daa
mov
(bad)
mov
es
hlt
push
pop
stc
aaa
fs
sub
sbb
jo
pop
popw
push
cld
or
das
mov
pop
fisttp
clts
xor
sub
sub
or
mov
push
and
aas
sub
adc
fadd
popa
push
aaa
push
push
sbb
pop
adc
mov
aam
mov
rol
pusha
jg
mov
push
pop
lahf
aas
cmp
push
aam
push
cwde
scas
test
and
les
pop
iret
nop
mov
dec
pop
adc
pop
push
inc
jo
pushf
xchg
inc
mov
ds
movs
ins
arpl
enter
loop
push
mov
mov
add
lds
pop
(bad)
adc
push
add
ficomp
and
push
lahf
jo
mov
sahf
out
push
in
push
pop
cwde
int3
lahf
out
test
call
fidivr
push
push
loopne
pop
push
push
nop
out
pop
ja
int3
push
dec
pop
push
cmp
pop
mov
push
sbb
add
not
retf
gs
retf
mov
mov
push
cmp
push
dec
(bad)
sub
ins
ss
int
fistp
cld
loope
in
out
in
mov
shr
out
jbe
push
sub
push
test
mov
xor
dec
jmp
or
cwde
jbe
add
mov
jl
sub
mov
add
add
dec
add
movs
fmul
repz
cmps
inc
je
in
les
dec
pusha
movs
push
out
push
call
fcomp
(bad)
out
push
pushf
rcr
jns
jge
enter
mov
hlt
repz
jge
sub
sahf
push
mov
sti
cmp
add
cmp
pushw
mov
clc
xor
inc
push
lods
lock
out
test
(bad)
into
daa
test
test
scas
or
pushw
out
sbb
in
push
rcl
aaa
mov
imul
dec
push
loopne
dec
xchg
push
jo
mov
mov
mov
add
jnp
push
push
push
push
es
inc
push
(bad)
xchg
xchg
mov
(bad)
fist
inc
pop
dec
pop
inc
fs
push
fisubr
ds
jge
out
test
ds
mov
sub
bound
test
sub
in
or
fcomp
ds
data16
ins
push
xor
in
mov
outs
ds
fs
mov
popaw
addr16
packssdw
sub
push
loope
in
dec
cld
daa
mov
fimul
push
shl
sub
dec
jl
iret
repz
adc
jno
sahf
out
fsub
dec
mov
mov
cmp
add
movs
or
ins
pop
addr16
cwde
mov
push
pushf
lea
les
adc
xchg
xchg
jbe
scas
call
add
cmp
mov
popa
mov
push
inc
ss
lods
in
pop
dec
push
dec
xor
pushf
dec
or
mov
or
push
push
dec
push
push
mov
mov
sbb
push
test
out
test
mov
jo
rcr
(bad)
add
add
aas
mov
inc
jge
dec
jae
pop
sbb
test
out
mov
pop
inc
outs
ret
dec
scas
inc
je
out
das
inc
pusha
pushf
arpl
(bad)
fstp
jo
cs
outs
ja
push
aas
push
dec
ret
fdivp
rol
sbb
dec
ficom
cmp
jae
push
dec
nop
inc
xchg
test
push
lea
ins
jo
dec
fs
ss
fldenv
ins
outs
mov
xchg
push
inc
dec
test
into
push
test
push
jo
outs
je
pop
xor
add
mov
gs
std
dec
gs
add
dec
pop
(bad)
xchg
adc
push
sbb
push
rcl
lahf
scas
inc
popa
fstp
or
or
gs
arpl
inc
push
jne
out
xor
jecxz
arpl
ins
mov
or
and
and
jb
ins
xor
adc
arpl
and
or
outs
rol
inc
inc
pop
cmp
mov
mov
ret
xor
push
or
ins
je
arpl
pop
rol
mov
jl
pop
out
push
mov
in
std
jae
imul
push
imul
inc
inc
ret
cmovnp
inc
popa
out
sbb
ret
inc
lds
dec
lods
adc
jae
lock
imul
and
pop
jno
fidiv
jb
cdq
or
sub
idiv
adc
imul
push
or
fcomp
push
fdiv
mov
je
inc
jne
sub
cmp
popa
sub
neg
dec
push
dec
dec
inc
pop
xor
cmp
inc
jb
dec
inc
je
add
inc
mov
xor
sbb
int
push
and
bound
and
pop
adc
dec
inc
dec
pop
sub
cmps
sbb
sbb
shr
int
inc
jb
ficom
je
sbb
arpl
adc
int
pop
cmp
xor
outs
adc
(bad)
mov
shl
outs
or
mov
inc
jo
xchg
inc
nop
mov
xor
or
or
push
js
fdivr
inc
cs
jmp
jl
dec
jo
outs
jb
fist
lea
dec
or
push
pusha
mov
nop
addr16
or
mov
lods
and
sub
fs
ja
push
sub
imul
or
jns
fst
je
push
sbb
xchg
push
push
sub
xor
pop
and
pusha
repnz
or
sub
or
and
jo
xor
add
into
cmp
sbb
outs
jne
nop
xor
sbb
jae
imul
adc
push
(bad)
movs
js
ins
adc
pop
cmp
and
pop
cmp
xlat
ss
dec
jo
adc
mov
icebp
add
or
cmp
or
inc
cmp
fadd
xchg
adc
push
add
ret
push
clc
je
jb
xchg
mov
inc
outs
(bad)
aad
add
push
sub
push
push
shr
add
inc
inc
movs
ins
bound
inc
jle
inc
or
dec
xchg
fs
daa
fmul
push
xor
push
sbb
(bad)
jge
aad
and
data16
fild
jne
push
adc
xlat
add
push
fimul
pop
test
int
inc
push
or
int3
adc
in
pop
push
jns
inc
inc
pop
adc
loopne
pusha
sbb
popf
push
ret
cdq
or
fidiv
in
ficom
lock
sqrtps
jae
jmp
fcom
ja
or
mov
setle
jo
push
ins
ins
lahf
add
sub
jae
ret
xchg
sti
push
loopne
xchg
je
call
adc
mov
inc
adc
sbb
inc
rcl
loopne
addr16
mov
daa
push
dec
push
dec
dec
ss
mov
dec
dec
jo
jp
ja
or
pushf
inc
sbb
test
in
dec
add
fwait
retf
data16
lock
lock
mov
dec
outs
sub
fld
jne
push
out
cwde
gs
jno
popf
xor
in
mov
arpl
and
jg
outs
cmp
test
std
mov
push
adc
and
and
cmp
fadd
or
imul
movs
or
je
mov
sbb
(bad)
push
mov
outs
loopne
sbb
or
mov
adc
dec
fs
dec
fidivr
push
adc
pusha
inc
jle
push
inc
adc
xor
xor
dec
push
adc
push
cmp
lock
ins
call
push
int3
test
mov
nop
enter
sqrtps
imul
or
sub
cmp
pushf
(bad)
mov
or
popa
push
mov
sub
dec
push
sbb
lods
or
in
bound
adc
mov
jbe
dec
add
ins
je
arpl
addr16
jbe
div
adc
inc
imul
imul
and
jg
outs
int
sbb
ins
mov
pop
aaa
adc
xlat
mov
mov
pop
push
xchg
add
push
push
inc
or
mov
adc
cs
(bad)
fild
adc
and
jnp
push
and
stc
add
cwde
xchg
pop
lock
data16
adc
fnstenv
inc
jbe
sbb
sar
jne
es
mov
sub
or
inc
pop
dec
dec
ins
pop
mov
inc
mov
push
cmp
ins
popa
adc
or
add
shl
outs
push
fs
adc
in
and
pop
or
jo
xor
or
jb
icebp
and
fs
ret
jb
or
je
je
add
dec
loopne
pop
pop
sbb
mov
or
inc
pop
or
and
dec
sbb
mov
push
adc
dec
mov
aam
ss
jo
imul
lds
pusha
push
sbb
mov
pop
and
or
jns
aaa
sub
sbb
adc
inc
aad
inc
mov
pop
into
sub
jns
jae
retf
(bad)
aam
js
jae
push
mov
add
push
cmps
jle
sub
test
and
or
jmp
xor
nop
in
mov
mov
(bad)
pop
cmp
mov
adc
dec
test
mov
in
adc
add
push
movs
or
data16
dec
mov
adc
xchg
jg
sbb
out
mov
mov
add
mov
sbb
inc
cmp
or
pushaw
lods
push
ins
jae
sub
mov
shl
jp
jo
ja
imul
mov
gs
int
mov
in
aas
xchg
jg
lods
sets
fisttp
mov
nop
add
push
sub
cmp
mov
movs
add
out
and
das
push
pop
mov
ret
mov
mov
in
pop
jle
mov
lock
mov
inc
xor
and
mov
adc
sub
inc
les
jmp
add
cmps
mov
push
je
or
cmp
les
add
clc
jge
sub
fdivr
call
cmp
idiv
ja
sub
je
dec
jne
and
std
aas
adc
call
mov
adc
nop
mov
cmp
imul
shr
dec
mov
arpl
mov
in
pop
sbb
push
dec
je
jmp
dec
in
mov
and
dec
leave
sbb
xor
sub
cmp
jmp
mov
jno
jo
inc
xchg
add
js
pop
xchg
movs
bound
cld
js
cmp
pop
mov
adc
inc
cmp
adc
inc
fild
or
sbb
push
sub
idiv
inc
inc
int3
mov
pusha
sbb
jo
push
mov
imul
add
push
imul
les
sub
xor
js
pop
iret
dec
or
adc
inc
movs
je
fsub
xor
outs
jle
iret
fsub
mov
mov
push
adc
ins
xor
mov
mov
mov
sbb
xor
cld
sbb
sti
and
ret
(bad)
sar
(bad)
loopne
mov
sbb
cmps
dec
mov
jl
imul
dec
movs
cmp
and
dec
or
xchg
xor
lahf
adc
and
pop
dec
jo
inc
xor
ss
scas
rol
and
adc
dec
jl
pop
mov
push
add
inc
ret
add
scas
aam
lahf
jmp
in
sbb
dec
dec
inc
stos
inc
hlt
dec
sub
mov
push
movs
lds
or
cmps
sub
push
syscall
pop
test
enter
jae
or
push
rcl
add
mov
int
aam
fcom
adc
xlat
dec
fdivr
loopne
jge
popa
add
cld
pop
loopne
leave
add
add
dec
mov
mov
sbb
or
push
aaa
cmp
mov
jge
das
add
or
outs
dec
inc
mov
add
sub
dec
ins
cmovo
aas
mov
mov
ja
movs
add
test
mov
adc
push
cmp
cwde
jbe
push
leave
and
sbb
dec
leave
clc
add
cmovg
adc
push
add
add
leave
xchg
daa
or
sahf
cmp
repnz
adc
adc
push
or
xchg
daa
dec
sbb
or
repnz
mov
and
and
xchg
daa
dec
sahf
adc
adc
adc
sub
cs
xor
xor
daa
dec
sahf
cmp
sbb
sbb
sbb
shl
xchg
sbb
push
call
inc
cmp
ds
jl
mov
or
loope
rcr
sub
sbb
in
div
hlt
hlt
fs
inc
push
hlt
hlt
hlt
nop
inc
push
sbb
hlt
hlt
inc
push
sbb
hlt
push
sbb
hlt
hlt
hlt
sbb
hlt
hlt
hlt
fs
inc
push
hlt
hlt
hlt
nop
inc
push
sbb
hlt
hlt
inc
push
sbb
hlt
push
sbb
hlt
hlt
hlt
pop
gs
inc
hlt
hlt
sub
jns
in
inc
das
inc
cmp
dec
ds
aas
dec
pop
push
push
hlt
rol
lock
mov
lock
sub
push
das
adc
push
aas
sub
je
or
mov
add
xchg
dec
jecxz
bound
sbb
pop
cmp
in
pop
out
mov
and
sub
mov
adc
push
jl
jbe
or
sbb
or
jne
movlps
fst
in
jg
daa
adc
mov
adc
or
adc
mov
adc
adc
jo
pop
jl
jnp
xor
add
sub
sbb
pop
xor
xor
inc
dec
pop
jno
pusha
stc
scas
pop
sbb
cld
pop
push
jo
push
or
adc
xor
pop
dec
or
clc
fbld
mov
add
mov
pop
cmp
in
push
push
(bad)
mov
sub
sbb
and
mov
fbld
push
jo
cwde
rcl
loope
mov
xchg
in
push
pop
pushf
mov
lds
clc
clc
in
cdq
jbe
mov
je
mov
pushf
rol
dec
enter
rcl
cmp
fs
imul
pop
mul
dec
adc
mov
inc
sti
xor
pop
test
aaa
je
js
hlt
loope
ss
mov
cdq
in
sbb
sbb
cmp
sbb
sbb
pushf
dec
pop
shrd
(bad)
addr16
mov
push
add
cmp
setae
call
(bad)
rcl
dec
pop
push
inc
cmp
jne
lods
xchg
fadd
jbe
cli
in
push
jbe
dec
fsubrp
in
push
jmp
push
xchg
ins
ds
enter
cli
js
in
mov
sti
mov
hlt
mov
std
fdivr
cld
jg
or
sbb
add
inc
jo
out
enter
aas
loopne
cmp
pop
in
dec
cdq
aas
call
lds
pop
lock
lds
jns
adc
clc
jg
aam
add
aam
xor
jns
mov
test
dec
mov
adc
js
fst
xchg
mov
mov
pop
outs
mov
scas
dec
adc
fcmovnu
cmc
adc
lea
jnp
adc
mov
scas
pushf
arpl
mov
scas
pop
sbb
and
add
adc
mov
push
jo
add
imul
aas
cmp
xchg
fwait
xor
out
mov
sbb
stos
ja
icebp
aad
adc
sub
das
ss
mov
pop
mov
mov
adc
shl
push
xor
movs
add
ja
xchg
inc
jo
xor
mov
jle
jo
in
fmul
sti
mul
mov
cwde
test
dec
outs
dec
xor
jbe
dec
add
imul
mov
add
dec
mov
ins
loop
add
call
jbe
mov
ins
add
push
or
cdq
popa
test
fwait
nop
lahf
dec
mov
rol
jo
nop
cdq
mov
clc
ss
jge
jp
dec
dec
jecxz
out
sbb
icebp
push
in
push
sub
push
pop
fs
std
ja
loop
das
ror
(bad)
jnp
sub
push
in
or
adc
(bad)
mov
xor
icebp
dec
adc
sahf
push
fdiv
in
(bad)
dec
rcr
pop
popf
in
aam
loopne
icebp
cmps
imul
rcl
out
pop
not
outs
mov
push
cs
sbb
xor
sub
xrstors
mov
adc
loopne
or
xor
js
jmp
push
lock
sbb
mov
rol
ja
mov
dec
and
movs
jg
aaa
mov
je
in
shr
mov
push
dec
sbb
xchg
dec
sbb
pop
dec
test
mov
dec
push
cli
cwde
popa
sbb
mov
push
fwait
dec
adc
add
or
inc
add
out
mov
push
adc
adc
push
cmps
xchg
pop
(bad)
push
pop
or
add
adc
cmps
pushf
mov
aas
push
icebp
dec
rcl
js
pop
xor
jge
push
push
jp
mov
lea
in
and
(bad)
xor
or
adc
adc
call
js
push
pop
dec
mov
bound
out
rol
jg
pop
mov
clc
or
sbb
add
and
cmp
mov
sbb
repz
and
dec
and
dec
sahf
or
mov
xchg
mov
adc
dec
and
xor
data16
data16
mov
cmp
add
or
mov
sub
mov
or
mov
inc
mov
dec
push
outs
hlt
(bad)
push
fbld
dec
xchg
push
sub
or
inc
test
inc
sbb
pop
sbb
aaa
xor
pop
(bad)
wrmsr
push
xor
(bad)
fs
cmp
pop
les
cmp
sub
cmp
or
jne
cmp
push
xor
push
adc
daa
(bad)
mov
xor
sub
loope
add
push
jne
(bad)
xor
mov
in
jmp
pop
in
test
rol
clc
add
inc
jg
push
xchg
mov
push
test
scas
inc
neg
inc
in
lock
stos
jge
push
xchg
xor
cmp
pop
lea
cmp
pop
mov
or
jl
fild
inc
mov
sub
(bad)
fs
jl
adc
sub
and
push
adc
push
add
dec
and
or
loopne
jecxz
jmp
add
ss
les
mov
or
mov
jg
push
(bad)
mov
xor
into
ret
icebp
mov
pop
imul
and
cmp
je
or
cmps
or
rcl
cli
shl
sbb
jnp
(bad)
int3
jecxz
jne
or
jl
nop
aas
enter
int
mov
idiv
add
xor
push
inc
out
mov
cmc
stos
popa
sbb
inc
pusha
aad
inc
dec
push
(bad)
push
jg
je
dec
xor
jle
push
je
pop
fcomp
movs
pop
adc
adc
movzx
ret
sub
js
add
aaa
test
push
inc
jmp
pop
adc
fidiv
imul
push
push
les
sub
aam
fimul
push
or
mov
or
and
hlt
fbld
cmps
and
iret
in
inc
addr16
mov
mov
sub
xor
test
clc
outs
movs
daa
fsub
push
xor
xchg
stos
dec
repnz
fwait
sub
cmp
pusha
scas
cmp
xchg
dec
sahf
test
inc
xor
inc
out
paddusb
sub
pop
aad
sbb
neg
push
pushf
mov
mov
in
in
fs
pusha
ins
in
inc
push
push
push
cmp
inc
push
cmp
or
nop
cwde
adc
mov
int3
movs
sbb
cmp
shr
jb
and
and
jns
sbb
int3
rcl
adc
or
into
jae
fdivr
in
outs
mov
call
mov
dec
movs
mov
adc
jp
xchg
retf
sar
push
mov
fscale
(bad)
fcom
jb
dec
in
fs
in
jo
lock
push
sub
pusha
data16
xor
push
out
push
test
add
jge
xlat
jge
adc
add
adc
repnz
fst
dec
outs
sub
mov
lods
cwde
inc
sbb
ins
cmp
adc
adc
xor
mul
pop
adc
sahf
xchg
out
inc
and
cld
adc
mov
jo
pushf
jl
ins
in
sub
adc
push
jne
push
inc
pop
test
xor
ins
icebp
test
pop
in
(bad)
cmp
jp
lods
sbb
inc
imul
(bad)
or
cmp
and
imul
stc
or
mov
inc
add
mov
mov
das
xor
push
(bad)
fimul
dec
add
add
and
xor
hlt
mov
clc
inc
push
adc
shr
add
xchg
mov
popf
sub
arpl
cmp
cli
sbb
mov
xor
add
out
xchg
shr
addr16
loop
mov
add
mov
daa
or
mul
popa
mov
and
loopne
enter
pop
pop
add
mov
push
test
std
or
add
xchg
fidiv
add
jbe
or
out
jle
pop
ret
mov
js
or
jle
ss
sub
sub
inc
lahf
dec
lahf
loope
mov
jnp
shl
test
out
pop
je
shl
sbb
in
mov
add
xchg
stos
sbb
push
lahf
lock
dec
pop
test
out
hlt
inc
mov
xor
ins
mov
popa
out
ret
arpl
das
ds
and
pusha
pop
and
sbb
sbb
mov
aam
mov
jb
mov
sub
lahf
sub
cwde
pusha
mov
int3
mov
movs
or
inc
dec
jmp
mov
rol
test
dec
add
popa
fisttp
out
into
add
inc
test
mov
sub
adc
icebp
popf
or
les
jmp
cs
add
push
mov
push
push
mov
xchg
or
imul
fwait
(bad)
cmps
mov
xlat
pop
mov
jg
add
pusha
jo
(bad)
stos
mov
adc
inc
or
and
ds
stc
lahf
lock
repnz
mov
and
rol
cmp
add
jo
gs
dec
mov
add
addr16
retf
and
ja
rcr
mov
push
loopne
pop
dec
sub
test
test
ins
in
shl
pop
inc
cmp
adc
int3
xlat
and
ret
dec
jae
xchg
jnp
add
and
in
(bad)
jnp
div
adc
ins
add
inc
clc
clc
adc
aad
pushf
pushf
pop
hlt
hlt
and
and
daa
xchg
mov
leave
leave
in
xchg
in
in
inc
jb
jb
inc
fsubrp
call
dec
rcr
in
cmp
stc
scas
xchg
inc
loopne
je
dec
cs
mov
leave
dec
in
and
gs
xchg
(bad)
xchg
test
jb
movs
sbb
xor
mov
add
shr
sbb
add
ficom
std
inc
xchg
xor
jecxz
push
mov
dec
pop
dec
mov
jmp
mov
pop
mov
dec
mov
pusha
sub
mov
xor
js
outs
(bad)
cli
pop
mov
pop
dec
cmp
(bad)
scas
add
pop
mov
(bad)
(bad)
(bad)
jmp
je
popf
ins
sbb
dec
sbb
and
and
lods
add
(bad)
(bad)
call
xor
test
push
(bad)
push
fcom
or
mov
push
cmp
inc
mov
(bad)
(bad)
(bad)
call
mov
push
aam
stc
loop
jmp
inc
jb
fadd
(bad)
cmp
push
dec
lea
inc
data16
mov
in
fwait
jnp
jecxz
(bad)
gs
mov
arpl
test
xchg
dec
jo
push
les
jno
pusha
cmp
les
dec
push
pop
push
subps
pushf
pushf
pushf
jo
mov
adc
dec
inc
adc
inc
dec
push
xchg
je
mov
inc
fadd
stos
add
fcmovnb
ds
cld
data16
add
add
adc
stos
adc
imul
inc
cs
sbb
sbb
lods
mov
das
xor
add
call
(bad)
hlt
lds
or
mov
fcomp
or
cmp
adc
sti
jbe
adc
mov
dec
or
push
sbb
lods
add
add
imul
adc
mov
pop
js
rcl
loopne
dec
loop
jae
and
mov
fdivr
mov
out
pop
jmp
cmp
addr16
add
jg
inc
dec
dec
imul
xor
mov
mov
add
xor
or
aas
sar
and
into
movs
cmp
jne
xchg
shl
xor
cmps
push
pushf
(bad)
repz
xor
add
into
push
sbb
xor
add
adc
pop
mov
ins
and
in
test
mov
enter
inc
sub
movs
or
aas
push
add
dec
fiadd
pusha
mov
and
cs
js
mov
ffree
and
push
cs
mov
ror
lock
fiadd
add
pop
leave
inc
xor
jb
pop
pusha
sbb
mov
or
inc
dec
cs
mov
mov
and
repnz
add
pop
leave
inc
xor
sub
(bad)
aas
mov
push
adc
dec
das
fidivr
or
or
test
add
test
xor
cmp
adc
cmp
(bad)
inc
retf
int3
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
loope
fcom
add
daa
adc
jno
cmp
adc
in
inc
adc
add
pushf
or
in
dec
push
ret
mov
adc
repnz
(bad)
and
sbb
add
pop
inc
mov
mov
call
xchg
sub
mov
and
mov
mov
xor
repz
mov
xor
cs
jbe
imul
cmp
aas
(bad)
call
mov
bound
inc
xchg
mov
xlat
fadd
or
enter
js
xchg
mov
or
push
push
in
int3
into
sbb
ror
mov
(bad)
(bad)
(bad)
call
test
enter
mov
inc
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
(bad)
(bad)
(bad)
inc
mov
mov
addr16
leave
repnz
bound
and
cld
gs
(bad)
inc
mov
sub
inc
aad
iret
dec
js
inc
mov
stos
mov
cmp
inc
loopne
jmp
xchg
test
stos
pop
out
sub
imul
(bad)
div
jl
xor
(bad)
(bad)
dec
cmp
call
mov
stc
popf
sti
jmp
stos
push
inc
mov
push
sbb
sar
(bad)
(bad)
(bad)
push
sub
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
inc
(bad)
(bad)
call
repz
loope
jp
iret
inc
bound
ds
push
pushf
(bad)
xchg
push
cmps
scas
mov
pop
or
add
cmp
(bad)
(bad)
(bad)
cmp
in
cmp
sahf
xchg
pop
cmps
lock
mov
popa
mov
fsub
dec
repz
mov
sub
and
and
outs
bound
xor
dec
jnp
jb
outs
jb
push
push
leave
mov
sbb
add
and
add
jmp
xor
ss
cmp
inc
inc
inc
sbb
lea
pop
push
add
test
scas
out
(bad)
mov
push
sub
sub
sahf
out
pop
lahf
push
inc
or
sbb
sahf
out
sub
cmp
pop
inc
jns
iret
repz
(bad)
push
add
pusha
push
adc
jns
out
sbb
out
cs
scas
push
test
push
mov
or
rcr
mov
lahf
or
(bad)
push
cld
pop
jl
mov
mov
sbb
adc
jae
sbb
push
sbb
push
dec
pop
inc
neg
pop
pop
push
push
cmp
test
int3
xchg
scas
adc
pop
push
mov
push
frstor
sub
cvttps2pi
cmp
cmp
shrd
outs
sbb
jo
jbe
sbb
jg
sub
xchg
sbb
dec
fistp
je
add
das
js
jo
mov
jg
js
cmp
inc
js
in
sbb
js
js
jl
fldcw
into
unpcklps
jl
sub
add
cmp
jl
cmp
jl
dec
outs
mov
jl
jl
cmp
mov
out
add
xlat
pushf
bound
push
ins
lods
std
push
adc
or
or
repnz
mov
add
adc
add
push
sbb
sbb
pop
add
mov
add
adc
adc
(bad)
(bad)
sbb
adc
std
mov
mov
sbb
neg
adc
xchg
inc
stos
push
push
jle
rol
mov
in
push
mov
adc
mov
nop
mov
pop
dec
test
sbb
pushf
pop
or
inc
sbb
pusha
sbb
mov
or
mov
cs
sar
lods
ret
loope
inc
es
ret
loope
leave
inc
enter
or
leave
leave
leave
leave
push
movups
jge
(bad)
leave
adc
das
pop
add
sbb
in
push
adc
mov
mov
xchg
sub
push
xor
ja
aaa
cmp
cmp
jmp
xor
xor
xor
ss
dec
xchg
mov
dec
add
push
dec
fidivr
xor
fdivr
shl
xchg
dec
add
xor
cmp
cmp
sbb
cmp
sti
mov
xor
idiv
xor
dec
inc
mov
mov
dec
xor
inc
imul
ss
dec
setle
add
push
dec
ss
sti
xor
add
aaa
and
aaa
dec
add
or
cmp
cmp
cmp
xor
fdivp
loopne
and
cmp
pop
xor
mov
sti
cmp
or
(bad)
outs
fstp
dec
pop
jns
out
push
inc
inc
inc
inc
inc
iret
cmp
jle
xor
into
repz
xor
jg
repz
xor
xor
and
xor
cmp
xor
xor
xor
mov
jle
xor
jecxz
iret
xor
xor
repz
sbb
xor
xor
jecxz
iret
repz
sbb
aaa
aaa
and
into
repz
aaa
lahf
cmp
repz
cmp
cmp
sbb
cmp
jle
repz
cmp
inc
stos
inc
rol
inc
shl
loopne
imul
inc
add
out
ins
pop
inc
push
inc
inc
and
loop
inc
mov
mov
sti
push
jl
inc
jecxz
jmp
jnp
inc
shl
inc
inc
fwait
inc
sub
jecxz
xor
xor
(bad)
pop
cmp
repz
inc
js
jmp
adc
comiss
stos
inc
cmp
out
rol
jae
add
jge
hlt
push
inc
mov
xor
inc
ret
mov
aas
mov
mov
jmp
jecxz
jmp
jnp
inc
pop
fnsave
sub
jo
sbb
pop
inc
sub
pop
imul
jmp
test
add
add
adc
mov
add
aaa
push
xor
sub
adc
fdivr
retf
movs
dec
enter
sahf
inc
fwait
test
inc
nop
cmc
into
push
mov
test
mov
sahf
out
fsub
call
lahf
clc
add
mov
out
sahf
out
and
xor
sahf
out
sahf
inc
dec
push
pop
pusha
push
jo
or
cwde
mov
in
mov
outs
push
lock
push
dec
inc
cs
adc
jo
and
stc
(bad)
stc
ss
jns
stc
daa
add
nop
dec
sahf
or
add
mov
mov
or
xlat
cmps
div
cmp
add
add
and
sub
inc
fisubr
sbb
aaa
add
pop
into
loop
fsubr
adc
add
add
add
add
ret
sbb
scas
(bad)
fadd
sub
add
adc
adc
div
adc
add
add
mov
push
pop
or
add
add
dec
mov
add
add
fiadd
pop
mov
fcom
add
push
push
das
push
fistp
pop
pop
(bad)
add
cmp
add
jbe
das
or
or
or
or
sub
out
push
(bad)
xlat
(bad)
in
push
add
outs
push
inc
jns
out
pop
js
mov
sahf
push
(bad)
out
add
xchg
push
cmp
sahf
out
pop
je
test
xor
lahf
out
clc
adc
movzx
das
add
add
sbb
stos
xchg
icebp
or
ds
jl
xchg
lds
push
push
inc
xor
movs
ror
sub
or
or
inc
inc
or
mov
les
dec
(bad)
inc
imul
sub
cmp
fistp
cmp
inc
inc
jmp
fadd
or
pop
(bad)
retf
(bad)
(bad)
push
adc
push
cmp
dec
or
icebp
or
cld
mov
jmp
nop
fs
jecxz
cli
jl
(bad)
(bad)
(bad)
(bad)
aas
jno
inc
mov
pop
scas
scas
stos
movs
in
bound
dec
mov
mov
push
xor
cmp
(bad)
(bad)
(bad)
(bad)
jmp
sbb
mov
dec
jge
dec
pushf
sbb
aam
mov
push
repnz
(bad)
(bad)
jp
inc
inc
xchg
imul
lds
cmp
ret
(bad)
dec
dec
test
push
xor
(bad)
push
push
nop
add
iret
ins
les
dec
nop
jbe
pop
fwait
in
aas
pop
sbb
dec
pusha
jl
fs
cmp
movs
mov
(bad)
(bad)
push
fdiv
les
cmp
fdivr
push
add
(bad)
nop
out
in
push
xchg
push
and
nop
cmp
bound
and
dec
das
or
pop
daa
cmp
das
out
mov
nop
fsubr
push
movs
es
bound
dec
xchg
sahf
daa
mov
xchg
push
shr
hlt
es
pop
enter
push
inc
cld
das
jnp
in
pop
es
mov
sub
test
pushf
xchg
xchg
inc
pop
dec
in
lds
xchg
pop
jl
jbe
clc
mov
push
mov
in
nop
ja
es
enter
push
das
sub
sahf
out
xchg
lock
or
ror
push
and
xor
jg
cmp
cmp
jnp
mov
rcr
mov
jnp
dec
push
pop
push
loope
(bad)
iret
dec
push
not
xchg
and
mov
push
(bad)
ins
push
bound
das
add
js
bound
outs
pushf
ja
outs
sub
mov
ds
cmp
les
fsubr
add
mov
repz
out
push
sub
sbb
inc
(bad)
nop
pop
mov
popf
paddusb
daa
pop
sti
add
shld
pop
pop
(bad)
iret
jg
enter
sbb
fst
mov
jmp
in
in
inc
pop
sbb
ins
xchg
test
add
(bad)
push
out
mov
das
dec
cmovl
inc
fisubr
iret
dec
cmp
pusha
jmp
add
in
or
out
imul
inc
mov
inc
add
(bad)
pop
xor
jle
push
add
call
inc
adc
lahf
repz
fdivr
push
or
pop
in
pop
cmp
ins
movs
fsub
stos
or
je
inc
addr16
cmp
rcr
jbe
arpl
std
sbb
cmp
cmp
repz
push
stc
js
iret
repz
cwde
idiv
repz
hlt
and
repz
pop
icebp
jl
iret
repz
pushf
out
shr
cmp
clc
in
jmp
ja
out
mov
jg
jl
out
jnp
mov
adc
pop
push
iret
mov
aas
adc
add
pop
xor
popa
iret
jae
push
test
add
push
cmp
sar
fcomp
push
hlt
jmp
mov
addr16
add
push
xor
shr
rcr
mov
cmps
retf
dec
lock
das
sti
push
shl
or
or
bound
inc
lahf
jle
or
out
sahf
add
int
jns
adc
adc
fdivr
into
repz
and
sbb
jne
repz
sbb
adc
out
sahf
xor
push
sbb
jns
add
adc
loop
cli
push
push
pop
pop
sahf
out
out
add
push
push
pushf
sbb
jns
call
bswap
repz
cs
adc
iret
repz
xchg
push
mov
mov
mov
fmul
xlat
jmp
popf
outs
jg
adc
scas
jmp
push
aam
jg
inc
in
jmp
call
bound
test
mov
enter
call
jle
lahf
outs
push
loop
mov
xor
sub
fidivr
push
mov
add
dec
push
imul
jle
sahf
sbb
cmp
fsub
mul
push
fmul
mov
sti
imul
jno
test
add
push
mov
xchg
cmp
imul
pop
aaa
jp
aas
push
das
imul
dec
mov
push
stc
neg
pop
mov
jp
jmp
cmps
clc
(bad)
mov
cmp
add
imul
fs
ja
ror
mov
rol
xchg
inc
xchg
adc
cdq
inc
fidivr
add
je
add
pushf
fwait
mov
inc
and
scas
sahf
lods
lock
aam
mov
ins
out
and
inc
outs
jmp
fadd
call
adc
rcr
clc
add
and
mov
loop
movs
fcmove
push
push
jmp
das
and
shl
lods
outs
jbe
dec
push
lock
add
sub
push
mov
sahf
push
pop
pop
int
dec
lock
sahf
aas
pop
dec
hlt
imul
mov
adc
ja
out
fimul
cmc
shl
cmp
lds
out
mov
js
fsubr
test
jle
sar
inc
pop
push
rol
fisttp
xor
push
nop
out
nop
ds
in
shl
jns
mov
inc
push
stos
mov
push
push
cli
into
xchg
lahf
fwait
std
push
cdq
mov
paddsb
les
in
jp
add
js
xor
xor
ret
xchg
push
out
mov
adc
hlt
add
int
dec
jle
lahf
ror
lahf
push
rcl
into
push
(bad)
loop
clc
mov
push
jno
cmp
push
out
push
lods
mov
cli
mov
jo
loope
cli
push
test
sbb
ds
iret
cmp
retf
jge
loope
sub
mov
push
cmp
lods
fimul
repz
pop
push
out
std
inc
xor
inc
ja
std
push
and
movs
outs
cmovne
push
(bad)
jo
je
stos
call
ror
cwde
sti
cwde
pop
push
out
out
scas
out
push
xchg
jo
xor
ins
add
out
pop
push
mov
stos
clc
aas
test
push
retf
rol
clc
sub
push
frstor
loopne
add
dec
jle
adc
push
(bad)
pusha
dec
push
mov
imul
movs
push
jb
mov
std
or
hlt
outs
push
push
mov
outs
sub
push
inc
pusha
push
mov
scas
push
jmp
mov
lock
push
push
nop
xor
adc
lds
outs
push
jg
pop
push
mov
push
lahf
enter
mov
jae
pop
push
push
fdivr
add
call
loopne
push
push
lock
push
push
push
mov
add
ja
out
inc
out
nop
push
cmc
scas
mov
and
push
out
call
loopne
enter
or
test
int3
outs
or
add
add
push
pop
inc
js
popf
push
repnz
xlat
jnp
jns
or
push
cmp
pop
jns
out
push
mov
mov
inc
repz
mov
push
mov
iret
repz
inc
push
int3
(bad)
ficom
push
icebp
cmp
out
es
daa
push
arpl
lock
icebp
inc
add
push
sbb
and
mov
jnp
cmp
(bad)
jmp
stos
or
or
fimul
push
or
inc
loope
sub
pop
add
neg
(bad)
add
add
adc
sbb
add
or
or
in
adc
sbb
in
xor
pop
push
pop
sbb
and
inc
mov
inc
inc
push
pop
xor
add
retf
cs
daa
adc
xor
outs
in
icebp
push
iret
repz
cld
or
or
sub
mov
aaa
into
dec
and
icebp
inc
add
and
xor
xor
jns
cli
mov
je
cmp
xor
xor
dec
add
jl
and
rcr
ins
jns
cli
and
jb
and
jl
dec
or
imul
mov
push
sbb
pop
add
imul
cmp
pop
add
add
adc
rdmsr
xchg
add
xchg
jae
adc
xor
pusha
pop
sbb
push
push
jle
or
adc
pop
push
jo
sar
adc
cmps
or
push
pop
jne
mov
cmc
fidivr
push
push
pop
push
sbb
nop
cmps
pop
cmp
fidivr
fidivr
cmp
rol
adc
adc
push
pop
out
mov
mov
dec
push
lock
or
mov
adc
push
je
xor
enter
neg
or
push
test
pop
test
inc
xor
jnp
call
sbb
cwde
xchg
push
push
jl
cmp
fcomp
iret
jnp
push
sub
mov
dec
push
clc
jle
sahf
neg
add
push
push
adc
mov
fidivr
mov
or
bound
and
movs
push
add
loope
repz
add
jle
or
fidivr
mov
inc
push
jp
cmp
aam
adc
push
sub
mov
lahf
mov
dec
inc
hlt
fidivr
hlt
jle
push
push
push
push
xchg
out
mov
xor
jbe
ss
dec
push
idiv
fdivr
es
lods
push
fild
jnp
mov
pop
push
push
push
pushf
(bad)
arpl
jle
out
mov
fdivr
sbb
outs
push
cs
mov
fimul
push
mov
cld
call
js
mov
jno
xor
ret
imul
push
mov
out
jo
push
inc
push
loop
pop
push
sbb
scas
js
mov
push
sar
imul
sub
mov
pop
mov
dec
push
repnz
push
push
adc
sub
fwait
push
xor
push
and
push
stos
push
pop
test
inc
push
jmp
push
sbb
push
cmp
(bad)
ins
push
sub
lea
dec
push
cli
jmp
(bad)
adc
push
push
or
(bad)
mov
or
clc
jo
mov
pop
push
into
or
(bad)
jnp
push
or
jmp
jmp
rol
or
dec
push
neg
push
mov
pop
push
aaa
ja
pop
icebp
ds
jmp
daa
push
scas
push
ffreep
pop
icebp
pop
xchg
inc
push
out
call
outs
sub
mov
jg
aas
push
fdivrp
fsubrp
out
mov
mov
dec
push
(bad)
in
cs
inc
mov
loope
ror
in
mov
mov
test
or
nop
mov
inc
movs
in
inc
cs
aad
mov
int
or
xchg
or
cs
cs
mov
inc
xchg
sar
repz
or
nop
or
cs
mov
cs
out
in
cs
mov
or
nop
or
mov
or
push
push
out
add
loop
jo
adc
adc
inc
lods
loop
pusha
ficomp
push
add
mov
add
add
repz
jle
sbb
pop
je
rcl
pusha
ds
add
or
sbb
cmp
mov
sub
add
call
sbb
cvtdq2ps
jb
or
sub
arpl
outs
add
out
jg
inc
cmp
gs
outs
bound
or
imul
adc
mov
push
imul
add
jb
push
imul
lock
mov
ins
xchg
and
test
jge
mov
xor
addr16
outs
outs
js
outs
jns
and
fs
adc
nop
mov
sbb
outs
pusha
jns
bound
push
push
jno
pop
mov
(bad)
fldcw
jg
loop
xor
or
add
(bad)
push
fidiv
sub
dec
ins
adc
pusha
jl
adc
jmp
dec
sub
cmp
push
popa
popa
scas
loop
(bad)
bound
imul
dec
pop
cmps
sub
and
inc
jmp
inc
xor
xor
push
mov
ds
retf
test
add
xchg
aad
lock
mov
fmul
popa
jecxz
popf
adc
adc
cmp
cmp
adc
push
dec
add
aas
push
fs
pop
or
push
sub
mov
xchg
leave
and
push
test
push
(bad)
add
out
add
jecxz
iret
jmp
rol
push
add
sbb
clc
cmp
repz
sbb
inc
add
xchg
pop
pop
add
add
inc
pop
enter
cmp
pop
pop
or
cmp
cmp
or
or
test
cmp
mov
not
adc
or
or
or
or
adc
sbb
sahf
out
lods
ins
in
sbb
out
sahf
out
fdivr
jl
mul
cmp
jns
out
ret
(bad)
out
xchg
push
shl
dec
adc
mov
repnz
out
push
mov
sub
push
sbb
sahf
fidivr
mov
sahf
out
xchg
cmps
out
sahf
out
out
xchg
push
sahf
out
sahf
(bad)
ss
test
sahf
out
mov
cs
out
sahf
out
out
push
sahf
pop
and
mov
mul
sbb
add
and
out
sahf
xchg
push
shl
mov
cmp
mov
mov
repz
repz
repz
cdq
pop
fnstcw
mov
cmp
add
cmp
repz
iret
repz
xchg
push
aad
mov
mov
sub
(bad)
repz
repz
int
lods
ins
iret
repz
in
sbb
pop
iret
repz
jge
adc
mov
push
xchg
add
push
push
shl
jns
out
xor
mov
sahf
out
sahf
jae
repz
jns
out
mov
jns
out
sub
stos
stos
sahf
out
sahf
imul
sbb
jns
out
fwait
fwait
pop
pop
(bad)
jns
out
cmp
mov
sahf
jnp
sti
sti
pop
pop
jns
out
xchg
jns
out
daa
daa
cmps
cmps
sahf
out
sahf
addr16
pop
pop
jns
out
xchg
xchg
push
push
xlat
out
sahf
out
aaa
aaa
mov
sahf
out
sahf
ja
div
(bad)
vmwrite
dec
dec
iret
out
sahf
out
das
das
scas
scas
sahf
out
sahf
outs
outs
out
out
pop
pop
jns
out
lahf
lahf
pop
pop
(bad)
jns
out
aas
aas
mov
sahf
jg
inc
push
push
xor
cmp
repz
and
push
xor
repz
dec
sub
cmp
repz
js
add
and
mov
mov
test
repz
test
ret
and
arpl
adc
add
adc
inc
mov
or
adc
mov
cmp
sbb
push
push
jbe
cmp
push
push
inc
ja
or
add
mov
add
xchg
push
sbb
and
add
add
push
add
or
or
and
or
and
bsr
push
and
adc
outs
inc
jecxz
adc
dec
cs
sbb
mov
sbb
shl
icebp
and
or
lahf
das
daa
daa
mov
aas
adc
adc
adc
jb
daa
adc
push
and
jb
pop
sbb
push
loop
mov
add
mov
dec
or
push
mov
push
sbb
sub
xor
add
cmp
jo
lods
inc
cmp
push
shr
outs
mov
out
xlat
or
sbb
mov
jns
adc
xchg
mov
push
(bad)
pop
call
push
cvttps2pi
cld
add
jnp
(bad)
push
add
pop
daa
adc
(bad)
mov
xor
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
jmp
mov
mov
push
movs
mov
aad
mov
rcl
mov
sub
mov
nop
adc
push
jno
repz
test
ficomp
jmp
(bad)
mov
(bad)
(bad)
call
hlt
mov
imul
std
in
leave
mov
add
ins
push
arpl
(bad)
(bad)
(bad)
dec
cli
cmc
or
outs
cmp
imul
addr16
add
aam
dec
std
test
(bad)
(bad)
dec
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
(bad)
fcomp
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
(bad)
(bad)
(bad)
(bad)
mov
mov
or
or
and
or
adc
stos
sbb
popa
sar
fdiv
jno
add
aad
mov
mov
movs
in
fcomip
(bad)
mov
call
xor
jl
test
xchg
sbb
push
sub
cmp
fs
add
hlt
push
imul
(bad)
mov
test
in
xchg
push
ins
jnp
add
shl
adc
(bad)
(bad)
dec
cmc
(bad)
fnstenv
adc
mov
mov
bound
ficom
gs
std
call
(bad)
aam
pop
popa
mov
into
pop
cmp
mov
inc
movs
fisttp
xchg
fdivr
(bad)
(bad)
mov
sti
hlt
(bad)
shr
imul
mov
sar
add
in
add
stos
(bad)
push
pop
dec
or
cmp
add
daa
xchg
or
and
jmp
mov
outs
and
aam
mov
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
or
mov
in
mov
mov
add
inc
(bad)
(bad)
(bad)
call
jmp
fild
push
fdiv
or
test
fs
ds
or
or
(bad)
dec
push
in
dec
xchg
daa
scas
jl
sahf
pop
jge
xchg
(bad)
shl
add
(bad)
(bad)
(bad)
(bad)
inc
push
imul
xor
sbb
push
imul
aam
loopne
ror
int3
(bad)
(bad)
(bad)
dec
outs
fistp
mov
mov
aad
mov
call
xchg
shl
push
(bad)
(bad)
(bad)
push
fisttp
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
(bad)
(bad)
(bad)
(bad)
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
shr
ss
(bad)
(bad)
jmp
push
int3
add
mov
das
es
lds
or
sub
(bad)
(bad)
jmp
pop
cmps
call
ret
shl
sbb
ret
es
pushf
mov
scas
(bad)
call
or
addr16
jb
push
or
adc
mov
jmp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
(bad)
(bad)
(bad)
(bad)
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
cli
mov
push
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
(bad)
(bad)
jmp
loop
mov
push
add
mov
cmp
cmps
not
pusha
ror
imul
jmp
dec
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
clc
sbb
mov
retf
mov
cmps
mov
mov
add
push
xlat
int
push
ficom
fldenv
cs
mov
dec
popa
les
sbb
xchg
sub
sub
mov
or
sbb
add
sub
sbb
clc
ss
push
sub
hlt
ja
xchg
inc
dec
(bad)
(bad)
(bad)
dec
mov
enter
ror
fxtract
jecxz
dec
mov
dec
jle
mov
sub
cwde
xchg
(bad)
(bad)
call
ret
and
push
shl
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
call
sbb
(bad)
sub
test
sbb
ins
(bad)
fistp
inc
aam
push
pop
int
(bad)
(bad)
jmp
adc
mov
popa
ja
mov
out
repz
gs
(bad)
(bad)
(bad)
fld
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
icebp
push
std
call
repz
fbstp
push
jo
add
hlt
div
sub
pop
ret
xchg
sbb
xor
pop
nop
sti
mov
test
jns
test
cmp
jns
jae
(bad)
(bad)
(bad)
mov
sbb
inc
cmp
ficomp
dec
jns
inc
jle
jmp
(bad)
sbb
(bad)
(bad)
(bad)
mov
inc
mov
and
or
hlt
mov
or
xchg
(bad)
cli
sub
call
or
int3
pop
dec
xor
inc
mov
outs
retf
push
pop
mov
cmp
das
mov
lea
push
cwde
xlat
ficom
test
loope
xchg
retf
(bad)
(bad)
call
pop
xlat
bound
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
and
xlat
(bad)
cmp
inc
and
inc
out
and
cmp
dec
mov
(bad)
jg
lahf
mov
and
cmps
xor
mov
lods
out
sar
mov
adc
(bad)
dec
xchg
adc
jle
push
jns
das
mov
and
je
or
(bad)
call
add
mov
dec
push
jo
gs
out
jle
(bad)
repz
mov
xchg
rcl
cmp
dec
int3
cli
mov
js
mov
test
cwde
cmp
test
mov
mov
(bad)
(bad)
(bad)
jmp
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
jmp
(bad)
(bad)
(bad)
push
inc
xlat
ss
push
out
mov
mov
movs
test
jno
mov
ja
(bad)
dec
jecxz
jmp
dec
sub
or
sub
add
adc
(bad)
(bad)
(bad)
push
xor
mov
push
mov
push
(bad)
push
hlt
out
les
fdecstp
jmp
mov
sbb
inc
xor
push
retf
jo
scas
clc
call
outs
sbb
sub
loope
fisub
lds
push
call
dec
in
(bad)
(bad)
(bad)
push
sbb
test
mov
(bad)
lahf
fdivrp
cmp
repz
jnp
call
(bad)
(bad)
jmp
cdq
or
stos
mov
sbb
icebp
adc
sub
jae
xor
mov
inc
push
cmc
shr
add
mov
arpl
lods
(bad)
loope
int3
mov
stc
(bad)
(bad)
(bad)
cmp
dec
adc
mov
jo
popf
mov
test
and
pop
ins
cmp
(bad)
(bad)
(bad)
inc
aas
adc
sub
dec
add
sar
push
or
cmp
(bad)
(bad)
(bad)
call
xchg
adc
in
xor
cdq
bound
fcom
into
pop
dec
loope
push
jle
push
(bad)
(bad)
(bad)
call
sbb
bound
mov
xor
call
mov
pop
lods
ret
(bad)
(bad)
(bad)
jmp
dec
ins
das
mov
adc
test
push
and
sub
adc
jns
pop
cld
(bad)
jg
dec
mov
movs
daa
sub
repnz
in
and
cld
(bad)
(bad)
jmp
fnstcw
shl
es
xchg
aas
mov
adc
out
(bad)
(bad)
call
sar
mov
gs
pop
jle
aaa
or
jbe
dec
div
lahf
adc
dec
aas
mov
and
push
push
add
test
pop
mov
(bad)
(bad)
jmp
jmp
retf
push
mov
lea
push
adc
(bad)
cmp
(bad)
test
or
add
in
fs
sbb
sub
mov
inc
leave
(bad)
(bad)
(bad)
jmp
sbb
sub
das
sbb
fild
sbb
repnz
(bad)
(bad)
push
adc
dec
jae
adc
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
sub
(bad)
(bad)
dec
cmp
out
inc
aas
or
cmp
push
add
outs
jge
(bad)
(bad)
call
add
push
xor
imul
fld
adc
nop
in
and
(bad)
(bad)
inc
mov
fsub
leave
pop
sub
and
mov
and
(bad)
(bad)
call
mov
sub
fidivr
sub
ds
sbb
sub
call
jmp
lea
jno
pop
cmp
xor
jb
and
push
(bad)
(bad)
(bad)
push
icebp
pop
je
fwait
aad
js
mov
mov
jg
or
jl
je
jns
push
inc
cmc
ja
(bad)
js
mov
(bad)
jnp
cs
fdivrp
cmp
nop
icebp
jmp
es
xchg
pop
in
ja
add
push
or
(bad)
(bad)
(bad)
(bad)
fbstp
stos
sub
shr
aam
cmps
gs
fs
imul
jg
stos
dec
mov
outs
jns
dec
cld
arpl
dec
retf
or
(bad)
(bad)
call
xchg
mov
dec
movs
fstp
inc
scas
lock
inc
test
shl
inc
xor
inc
jae
(bad)
(bad)
(bad)
dec
inc
sub
dec
inc
sbb
push
xor
mov
mov
mov
clc
push
mov
(bad)
cmp
adc
push
aad
mov
pop
fist
pop
xchg
pop
mov
movs
pop
lock
(bad)
(bad)
jg
pop
add
sub
outs
pop
ins
das
lods
pop
sbb
loope
jno
loopne
iret
mov
fldenv
(bad)
(bad)
push
(bad)
out
addr16
in
dec
es
mov
out
push
sahf
mov
in
in
loopne
jmp
das
call
mov
stos
jmp
pop
imul
fcom
cld
sahf
(bad)
(bad)
(bad)
jmp
test
adc
cli
sbb
sti
inc
les
clc
dec
jmp
ret
(bad)
(bad)
(bad)
(bad)
cmp
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
pop
js
push
aaa
mov
(bad)
dec
fstp
mov
shl
cmc
fucom
dec
aaa
(bad)
or
xlat
out
test
(bad)
(bad)
(bad)
(bad)
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
rcr
and
adc
pop
lds
xchg
pushf
les
(bad)
(bad)
jmp
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
call
dec
retf
lahf
lds
push
leave
enter
leave
mov
inc
ins
xchg
(bad)
jmp
iret
sub
fcom
cs
sub
pushf
cmps
(bad)
(bad)
(bad)
call
repnz
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
outs
mov
(bad)
(bad)
call
dec
mov
repz
dec
mov
or
(bad)
in
popf
cmp
(bad)
dec
or
mov
(bad)
mov
push
pop
and
push
adc
fadd
(bad)
(bad)
inc
sbb
xchg
shl
test
into
add
stos
stc
outs
movs
stos
jl
jmp
(bad)
(bad)
jmp
adc
lods
sbb
xor
inc
aas
mov
les
clc
(bad)
(bad)
(bad)
jmp
stos
std
jl
popf
xchg
mov
mov
sbb
mov
cmps
inc
mov
int
mov
fcmovne
(bad)
(bad)
(bad)
push
bound
dec
mov
mov
pop
dec
adc
mov
mov
fdivrp
mov
(bad)
mov
ficomp
mov
jmp
mov
stos
out
scas
mov
jmp
(bad)
xor
fdivp
pop
imul
(bad)
(bad)
fild
jge
loopne
outs
add
(bad)
dec
fstp
push
xor
loopne
adc
(bad)
(bad)
(bad)
call
xor
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
(bad)
(bad)
push
lods
xchg
adc
mov
aas
sahf
rcr
xchg
call
jae
lods
and
mov
inc
jp
(bad)
(bad)
(bad)
(bad)
ds
xor
mov
cmp
rol
xchg
or
in
xchg
loop
pop
test
mov
xchg
loopne
fstp
(bad)
iret
aas
sub
xchg
in
jecxz
pop
push
or
mov
push
clc
mov
lahf
xchg
dec
sub
and
loop
outs
dec
jg
or
(bad)
jge
jmp
outs
push
aad
shl
mov
(bad)
lds
xchg
lahf
mov
inc
push
(bad)
std
mov
xchg
(bad)
hlt
adc
call
fwait
pop
aas
test
mov
sbb
(bad)
push
mov
adc
test
lods
loope
jg
test
push
shl
pop
mov
sbb
pop
mov
(bad)
(bad)
(bad)
fist
shl
cmp
das
retf
jnp
dec
ja
prefetchw
or
jae
(bad)
(bad)
jmp
mov
cmc
cwde
outs
inc
nop
call
cld
jle
data16
sbb
ficom
daa
mov
mov
(bad)
(bad)
inc
out
mov
mov
mov
cmp
shr
hlt
pop
outs
xchg
add
cmp
(bad)
(bad)
push
mov
das
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
mov
fist
dec
pop
fwait
push
add
in
mov
dec
leave
xor
(bad)
(bad)
(bad)
inc
pushf
mov
adc
push
mov
aaa
pop
in
push
loope
inc
call
cwde
call
(bad)
call
scas
push
out
aaa
push
clc
inc
add
and
push
cdq
scas
inc
mov
mov
xor
mov
in
pop
shl
push
mov
inc
aad
in
jmp
(bad)
(bad)
(bad)
(bad)
dec
inc
xchg
out
xor
or
sub
push
in
cmp
pop
cmp
outs
(bad)
jmp
outs
xor
or
xchg
movs
loope
mov
sub
dec
dec
cmc
scas
repz
(bad)
(bad)
jmp
xor
mov
xchg
and
hlt
js
scas
dec
rol
std
shl
pop
jg
sub
xchg
idiv
sub
sbb
repnz
and
sbb
pusha
jle
cmc
push
sbb
dec
mov
pop
push
mov
ret
mov
mov
push
jmp
xor
(bad)
and
push
mov
rol
outs
mov
(bad)
(bad)
jmp
call
movs
adc
(bad)
bswap
fst
xchg
test
lods
sub
sbb
(bad)
(bad)
(bad)
cmp
jbe
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
(bad)
(bad)
std
int3
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
mov
jmp
mov
lock
imul
ss
(bad)
(bad)
jmp
test
(bad)
cs
mov
call
mov
loope
into
cs
push
add
add
pop
std
pop
jmp
icebp
and
sub
inc
aam
into
mov
iret
test
jg
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
dec
mov
loope
push
adc
cmp
adc
mov
jle
cmp
pushf
(bad)
call
(bad)
in
adc
add
sbb
cmps
push
data16
jno
ds
outs
sub
mov
call
out
mov
dec
or
sbb
rol
pop
outs
sti
ret
neg
jmp
stos
(bad)
call
test
or
xchg
popa
mov
fdivrp
ja
xor
(bad)
(bad)
jmp
or
pop
ins
les
jo
hlt
(bad)
xor
push
fisttp
movs
loopne
jmp
push
xchg
rcr
mov
mov
sub
jl
out
sub
xchg
sbb
mov
repnz
dec
mov
aam
ins
fucom
jmp
aam
push
sub
push
fs
(bad)
jmp
jp
gs
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
pop
aad
inc
in
addr16
cmp
in
dec
add
inc
ror
mov
xor
mov
(bad)
(bad)
call
(bad)
lods
mov
ins
jecxz
fistp
(bad)
or
pop
fnstenv
lods
push
(bad)
(bad)
dec
mov
enter
mov
mov
mov
mov
and
mov
movs
movaps
(bad)
(bad)
inc
mov
or
or
mov
or
and
outs
jl
pop
push
sbb
cmp
(bad)
fadd
add
jno
cwde
shl
mov
jno
test
lahf
mov
das
test
aam
js
leave
les
and
or
(bad)
(bad)
(bad)
call
jg
or
sub
out
pop
add
push
hlt
sbb
popa
bound
bound
(bad)
(bad)
(bad)
dec
push
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
adc
mov
cmps
(bad)
fcomip
jl
fstp
mov
jl
sti
aam
gs
mov
test
dec
ror
push
mov
movs
(bad)
(bad)
(bad)
inc
fcom
ins
rcl
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
(bad)
(bad)
(bad)
push
add
pop
fisttp
jno
daa
add
mov
or
xchg
mov
jmp
test
popa
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
clc
(bad)
(bad)
jmp
pop
cs
xor
mov
mov
add
out
sub
inc
cmp
(bad)
adc
jecxz
or
xchg
fs
jmp
or
ds
pop
test
push
iret
or
add
(bad)
jge
sahf
mov
setae
mov
push
mul
pop
and
sbb
(bad)
(bad)
(bad)
jmp
push
out
aam
jbe
shr
loopne
fidivr
fisttp
stc
mov
out
stc
pop
mov
inc
lock
mov
(bad)
(bad)
mov
push
fadd
les
repnz
sar
or
mov
push
fisttp
ss
fmul
sbb
dec
test
clc
jmp
ret
test
fist
outs
mov
inc
imul
sbb
outs
shl
int3
or
xchg
mov
add
mov
inc
cmp
sub
add
xlat
jmp
sub
sahf
mov
mov
sbb
bnd
mov
or
(bad)
(bad)
call
ss
jb
test
add
xchg
mov
jp
jnp
sub
(bad)
call
(bad)
xchg
ror
repnz
mov
fcmovnu
and
aam
inc
push
(bad)
(bad)
clc
pop
fiadd
int
mov
ja
sbb
out
ud0
(bad)
jmp
pushw
cmp
adc
or
sahf
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
shr
dec
add
push
cmp
mov
cmps
addr16
shl
test
ja
scas
shr
(bad)
(bad)
(bad)
(bad)
call
inc
fisttp
data16
fdivr
lock
mov
iret
jg
mov
jmp
retf
(bad)
(bad)
inc
mov
xchg
xor
mov
add
push
ficom
and
addr16
(bad)
(bad)
jmp
les
mov
sub
xchg
mov
mov
mov
sub
call
sbb
inc
xor
bound
lods
lds
(bad)
(bad)
call
cmps
xchg
xchg
(bad)
enter
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
(bad)
(bad)
(bad)
call
cwde
sbb
dec
ret
push
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
(bad)
(bad)
call
mov
add
sbb
sbb
ss
call
ins
sbb
(bad)
(bad)
call
inc
aas
(bad)
pop
push
sahf
xchg
test
mov
inc
and
call
shl
(bad)
jmp
ret
fiadd
gs
scas
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
(bad)
call
or
or
sbb
ins
fild
repz
pop
pop
mov
jo
jno
imul
(bad)
(bad)
(bad)
jmp
repz
sbb
jne
pop
mov
sti
push
test
jns
mov
cmp
inc
cld
repz
push
dec
push
lds
jge
fisubr
cmp
jns
add
ret
(bad)
dec
xchg
push
sbb
xchg
adc
mov
cmp
lds
or
cmps
(bad)
adc
add
inc
xlat
xor
cli
bound
(bad)
mov
mov
lea
(bad)
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
(bad)
(bad)
(bad)
call
imul
inc
push
mov
pop
dec
test
unpckhps
sbb
jo
cmp
cs
fwait
gs
imul
and
add
lahf
loop
ret
(bad)
push
cmps
int3
and
mov
loope
mov
shr
lahf
adc
xchg
mov
leave
dec
and
(bad)
(bad)
jmp
sti
jle
sub
gs
das
aas
jns
ss
mov
or
je
adc
xor
(bad)
dec
dec
lea
pusha
jle
xor
out
(bad)
(bad)
std
ret
rcl
(bad)
(bad)
jmp
cli
call
js
cmps
cmp
sbb
or
(bad)
(bad)
(bad)
dec
mov
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
and
shr
ja
(bad)
(bad)
inc
xchg
xlat
inc
mov
mov
mov
inc
mov
push
ja
cwde
pop
ins
(bad)
mov
adc
ss
daa
mov
fnstsw
xor
mov
inc
(bad)
jmp
push
rcr
hlt
lds
(bad)
out
hlt
push
out
rcl
pop
mov
push
xor
imul
jo
lods
push
push
cld
(bad)
clc
pop
sbb
inc
sub
data16
loope
lds
mov
lods
mov
in
test
xchg
sub
in
scas
mov
(bad)
(bad)
(bad)
stc
(bad)
repz
cmp
call
imul
or
stos
test
jg
sbb
mov
pop
adc
icebp
push
sub
pop
xor
dec
jo
mov
imul
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
ja
ror
stc
add
xlat
push
scas
xchg
adc
lea
or
idiv
enter
mov
and
sbb
ins
je
aas
les
push
push
test
cwde
inc
jle
test
(bad)
(bad)
jns
ror
cmp
hlt
pop
mov
cmps
popf
stos
adc
add
cld
dec
xor
das
cli
(bad)
jmp
cdq
into
jns
fmul
dec
pop
push
cli
jle
jnp
sub
sub
(bad)
(bad)
push
mov
xchg
push
mov
repz
inc
gs
dec
xchg
outs
jne
mov
call
and
pop
test
adc
gs
jns
(bad)
mov
sbb
mov
(bad)
jg
jmp
repnz
mov
mov
out
and
loope
or
mov
aas
aas
xchg
mov
jo
and
imul
inc
cmp
ja
fsub
push
loopne
(bad)
(bad)
jle
hlt
out
push
or
test
mov
adc
xor
hlt
jg
in
ret
add
pop
lods
test
push
retf
ret
(bad)
(bad)
jmp
lea
dec
push
test
adc
psrlw
(bad)
or
push
out
loope
sbb
fs
xchg
(bad)
inc
sub
sbb
mov
inc
pop
mov
sbb
sub
das
or
stos
ffreep
sbb
cmc
adc
cwde
call
mov
cmps
adc
(bad)
(bad)
(bad)
call
adc
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
(bad)
(bad)
(bad)
(bad)
mov
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
sbb
add
push
mov
mov
shr
xor
add
and
in
mov
cmps
daa
(bad)
(bad)
dec
pop
leave
and
dec
and
cdq
and
and
adc
sub
(bad)
(bad)
(bad)
mov
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
shl
(bad)
call
div
pop
scas
jb
xor
jbe
dec
sub
jb
aad
inc
jle
fdivr
(bad)
(bad)
(bad)
dec
dec
jge
or
jl
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
fdiv
pop
jl
outs
cmp
fisub
nop
jmp
ja
sbb
push
repz
arpl
popa
sub
push
gs
(bad)
(bad)
jmp
mov
mov
dec
xlat
retf
and
mov
call
inc
or
fisub
dec
sbb
retf
dec
pop
mov
(bad)
(bad)
(bad)
dec
frstor
inc
push
lock
inc
inc
dec
test
inc
int
inc
inc
addps
dec
out
(bad)
(bad)
(bad)
inc
mov
push
xor
addr16
jne
ds
mov
or
ror
adc
(bad)
(bad)
(bad)
call
jle
pop
loop
call
pop
in
xchg
xchg
pop
sub
add
inc
pop
mov
lods
das
ins
loope
sbb
loop
iret
out
jecxz
movs
movs
cmp
pop
out
fcos
(bad)
dec
in
or
cmp
in
paddsb
hlt
popa
call
jmp
in
in
mov
jmp
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
call
test
(bad)
call
sub
fdivr
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
adc
or
(bad)
(bad)
inc
cmc
retf
sub
test
fnstcw
pusha
fdivr
mov
fstp
jecxz
fidiv
(bad)
(bad)
push
mov
(bad)
and
fdiv
dec
in
imul
test
fdiv
shl
(bad)
(bad)
jmp
shl
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
ret
(bad)
(bad)
call
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
enter
pop
cmc
(bad)
dec
adc
int3
inc
pop
je
xchg
iret
rcl
into
add
nop
ins
cld
ja
(bad)
(bad)
call
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
jo
xbegin
cld
jmp
xchg
popf
cli
jns
cwde
mov
and
add
dec
call
(bad)
dec
pop
pop
mov
mov
sbb
mov
or
(bad)
(bad)
call
push
mov
sbb
int3
push
test
arpl
aad
or
jmp
shl
stos
data16
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
(bad)
(bad)
push
sbb
movs
jne
jbe
mov
inc
mov
cmp
mov
mov
(bad)
(bad)
inc
jae
mov
sbb
mov
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
(bad)
(bad)
(bad)
call
and
adc
test
xchg
pushf
xor
loopne
mov
cwde
xor
(bad)
(bad)
jmp
gs
or
mov
mov
out
(bad)
bound
xor
pop
cli
fcomip
xlat
cmp
or
outs
mov
dec
(bad)
(bad)
(bad)
call
mov
fucom
fbstp
pop
arpl
push
push
sbb
call
adc
jno
aaa
std
(bad)
(bad)
jnp
enter
lods
jne
or
into
outs
es
lods
jg
sub
mov
(bad)
(bad)
(bad)
inc
iret
call
inc
mov
and
xor
pop
or
addr16
(bad)
(bad)
push
push
cmp
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
(bad)
(bad)
jmp
sub
jmp
jecxz
in
fmul
lock
mov
pop
and
sbb
push
sub
sahf
push
dec
jg
outs
test
or
rcr
(bad)
(bad)
push
and
lds
sub
mov
inc
and
(bad)
xchg
test
call
call
test
pop
xor
not
adc
iret
push
retf
mov
ret
pusha
test
std
(bad)
call
jo
out
pop
mov
test
fistp
ret
imul
inc
dec
imul
setl
(bad)
sub
mov
movs
dec
cwde
cmc
cld
sar
nop
out
push
jle
fidiv
sbb
mov
inc
sub
out
(bad)
sbb
mov
cmp
jg
sar
xchg
outs
pop
hlt
cmp
test
inc
nop
xchg
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
test
cmps
icebp
iret
mov
(bad)
(bad)
(bad)
inc
mov
addr16
daa
jo
jno
dec
mov
(bad)
xor
inc
out
imul
pushf
(bad)
(bad)
(bad)
call
add
shl
pop
jns
psrad
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
hlt
pop
call
aaa
out
push
add
inc
clc
inc
daa
popf
and
pop
jle
js
mov
dec
(bad)
call
scas
xor
in
pop
mov
push
in
pop
inc
pop
mov
in
sbb
bound
and
(bad)
jg
xchg
xor
out
mov
aam
push
stc
mov
(bad)
jg
mov
cmp
cmps
(bad)
xor
or
cmp
shr
ins
mov
cld
sbb
dec
sub
scas
cmc
test
and
(bad)
(bad)
(bad)
dec
sub
sbb
ror
sar
add
push
movs
not
scas
clc
dec
sub
jns
and
dec
imul
cmc
xlat
jle
out
ror
add
or
pop
inc
fnop
std
pop
lock
push
(bad)
and
stc
popa
call
jmp
add
mov
ss
dec
call
sub
mov
xchg
(bad)
loope
xchg
adc
int
lods
mov
inc
and
jne
(bad)
(bad)
jmp
add
jb
scas
dec
jae
fwait
push
movs
icebp
and
sbb
test
jbe
out
push
sar
(bad)
dec
icebp
mov
inc
lea
call
inc
xchg
push
xor
es
jmp
fdivr
(bad)
(bad)
jg
stc
(bad)
jmp
sbb
push
bound
fwait
push
mov
xchg
xchg
cdq
xor
(bad)
(bad)
call
push
mov
cld
mov
adc
push
ja
ss
adc
out
mov
(bad)
jmp
jecxz
xchg
jbe
pop
not
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
mov
stos
jle
test
iret
(bad)
jg
cmp
es
jl
mov
pop
sbb
mov
repz
in
test
movs
(bad)
(bad)
inc
stos
ja
mov
ret
add
cmp
cdq
in
(bad)
call
or
pushw
cmps
fidiv
sub
fisubr
sar
lock
out
(bad)
(bad)
(bad)
jmp
mov
push
inc
sar
dec
sti
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
into
jp
iret
sti
jmp
popa
xchg
fiadd
push
sub
aaa
cmp
cmp
repz
pop
outs
jl
and
fsub
popa
jb
fwait
sbb
push
add
jbe
imul
sbb
adc
adc
dec
arpl
or
test
popa
mov
inc
dec
popa
mov
bound
stc
mov
mov
push
lock
mov
add
cmc
out
lods
pop
and
aam
stc
data16
fadd
clc
cmc
cmc
and
jmp
add
jg
cmc
fidiv
inc
cwde
clc
(bad)
out
out
mov
lock
push
out
add
jb
loopne
inc
(bad)
scas
mov
jo
lods
add
mov
inc
hlt
push
cmp
jae
test
(bad)
jo
jmp
push
cwde
push
sub
add
movs
in
in
pop
je
fidivr
mov
sbb
addr16
pop
in
nop
maskmovq
not
mov
mov
xchg
push
jge
jbe
mov
jne
cs
xor
pop
pop
add
dec
js
(bad)
fld
push
inc
push
pushf
bsf
ror
sub
mov
outs
push
fcom
add
movs
sub
cmps
mov
cmps
clc
push
shr
xchg
push
hlt
outs
loope
out
jl
jmp
xor
mov
add
push
inc
into
push
mov
and
push
ret
iret
aas
sti
mov
test
push
sub
aas
mov
push
jmp
mov
push
out
test
dec
shr
cs
rol
or
fwait
movs
sti
faddp
push
mov
in
lods
ja
ss
jns
jg
inc
push
shl
dec
cs
pop
aam
cld
pushf
es
cs
push
fisub
adc
push
jl
sbb
push
imul
push
push
add
int
jbe
inc
mov
mov
or
ds
data16
sbb
mov
iret
jle
or
push
mov
mov
push
mov
(bad)
mov
(bad)
in
cwde
sbb
popf
jge
out
mov
jo
jg
psubd
movs
mov
scas
push
into
add
push
and
scas
sub
push
scas
out
cs
push
loopne
xchg
scas
loop
clc
push
lods
fdivr
out
in
push
lds
rcl
lock
pop
push
push
dec
push
js
dec
ror
pop
cmp
dec
mov
outs
aas
sar
inc
fisttp
mov
jle
jg
outs
push
inc
imul
cs
fmul
jbe
lahf
(bad)
push
sbb
jo
pop
into
ror
xchg
pop
jnp
push
pop
sahf
mov
mov
pop
ja
movsx
aam
adc
(bad)
and
xchg
mov
inc
push
cdq
xor
ins
push
inc
cwde
rcr
jle
push
mov
ror
adc
xchg
cmps
push
cs
push
mov
loop
movs
imul
mov
push
outs
sti
fidiv
jle
add
push
call
or
push
mov
mov
xor
sub
fidiv
push
and
es
push
mov
popf
ret
dec
imul
test
(bad)
fiadd
cmp
jnp
outs
ins
push
ja
fidiv
je
cdq
jle
(bad)
push
sar
popf
rol
push
sub
ins
inc
cmp
push
cs
jo
dec
addr16
outs
mov
push
pushf
sbb
sbb
add
xchg
mov
cmp
dec
dec
mov
push
fadd
mov
xchg
mov
dec
add
add
fild
add
push
add
daa
(bad)
mov
mov
pop
or
ja
mov
adc
add
test
add
test
jl
adc
or
and
fisttp
jbe
fsub
or
and
adc
das
sub
add
popa
gs
(bad)
mov
or
or
add
sbb
shr
add
add
adc
or
lahf
ja
pusha
rol
inc
mov
outs
mov
add
jne
mov
add
mov
add
push
sub
and
and
mov
fld
sbb
add
iret
jmp
xchg
out
xchg
pop
hlt
mov
fdecstp
jae
rcl
mov
hlt
dec
cdq
or
pop
cmc
push
lds
mov
clc
pop
loop
xor
sti
or
(bad)
cmps
pop
rcl
push
cmp
in
adc
xor
pushf
addr16
add
test
pusha
popa
or
cmp
inc
cmp
lahf
sti
inc
fisub
js
std
cld
add
fstp
stos
or
std
rol
pop
aas
jl
inc
add
mov
add
idiv
movs
push
lods
mov
sahf
out
(bad)
int3
aam
in
call
hlt
push
dec
cld
cmp
jae
push
int3
loopne
adc
dec
repz
push
mov
pop
js
lds
mov
ja
pop
loope
out
or
ret
bound
xchg
add
add
daa
dec
add
adc
add
fisttp
sbb
dec
add
js
cwde
lahf
out
sahf
mov
aam
hlt
add
jns
push
pushw
and
out
sahf
dec
pusha
ins
or
(bad)
aam
lock
repz
add
cmp
pusha
cmp
repz
mov
sti
add
push
push
cmp
mov
and
div
nop
adc
adc
adc
push
sbb
xchg
add
out
xlat
loope
mov
scas
or
aas
or
ja
out
(bad)
push
push
test
ss
sbb
add
jmp
cmp
sbb
add
(bad)
scas
cli
fcomp
in
sbb
add
add
retf
push
pushf
fild
add
add
add
or
jo
iret
adc
add
add
push
sbb
jg
cmp
add
or
shl
call
sbb
adc
and
add
lods
movs
adc
xor
or
into
bound
adc
mov
cmp
inc
or
add
add
or
scas
push
inc
adc
pop
pop
or
outs
pop
add
stos
xchg
mov
mov
iret
cli
sti
cld
std
(bad)
(bad)
jns
mov
das
aas
test
and
out
add
xchg
push
mov
push
cmp
push
add
push
icebp
mov
add
pop
xlat
ret
lods
cmps
push
aas
fmul
retf
pop
push
add
push
and
push
push
test
cld
pusha
pop
in
test
xchg
push
out
mov
push
scas
loopne
push
add
push
ficomp
in
test
nop
test
pop
retf
push
scas
call
push
mov
sub
add
dec
push
adc
mov
cwde
scas
mov
push
das
xor
add
push
pop
or
(bad)
inc
or
add
call
push
add
jns
out
push
jl
(bad)
in
repz
repz
xor
movs
cmp
mov
pushw
push
jo
out
ds
repz
in
or
ss
xchg
repz
repz
cld
sub
mov
mov
ds
mov
push
xor
adc
inc
jo
repz
out
clc
sub
pusha
xchg
out
ds
shl
cmp
bound
lahf
aam
cmp
sbb
lahf
out
call
push
lods
cmp
repz
adc
dec
sub
ds
jl
jae
shl
xor
sbb
out
ds
mov
xor
push
test
sahf
ja
in
inc
pushw
mov
lock
repz
mov
hlt
out
add
sub
mov
push
lahf
loopne
inc
out
push
mov
adc
pushw
test
and
sbb
push
cmp
aaa
clc
cmp
xor
inc
hlt
jge
xor
adc
xlat
pop
add
dec
push
ret
inc
xchg
dec
adc
add
pop
and
sti
pop
mov
lahf
add
adc
add
add
push
mov
push
retf
jp
call
cmp
mov
invd
int3
outs
push
inc
repz
repz
jl
mov
sbb
ds
call
repz
repz
dec
test
iret
shr
or
inc
into
push
jo
cmp
repz
jns
cmps
sbb
pop
js
dec
repz
mov
hlt
or
xor
mov
pop
aas
mov
lahf
out
loopne
sbb
mov
pop
je
jbe
jns
les
push
(bad)
not
aaa
cmp
mov
xlat
pop
dec
push
mov
push
mov
fcomp
sti
cmp
xchg
push
pushf
(bad)
loopne
sahf
fld
sub
out
dec
ins
mov
cmps
mov
jno
in
inc
inc
sub
daa
and
add
add
sahf
add
add
mov
xchg
add
xor
ret
sub
inc
sahf
daa
js
(bad)
mov
loopne
sahf
out
jle
jmp
inc
pop
jns
out
ins
adc
shl
clc
or
push
jmp
ds
icebp
jge
mov
retf
iret
adc
mov
and
repz
mov
jbe
mov
adc
fidivr
xchg
mov
out
rcl
hlt
jmp
lock
mov
pop
rcl
cdq
jno
(bad)
call
push
push
(bad)
sbb
fs
xchg
cs
jb
xor
enter
pop
outs
imul
push
in
jecxz
ret
and
out
movs
dec
jne
inc
test
pusha
ins
sbb
add
scas
push
addr16
scas
fs
push
mov
out
call
js
out
sahf
xchg
lods
enter
out
sahf
sbb
push
push
ja
fmul
jbe
inc
js
repz
out
aam
cld
xor
repz
push
je
shl
repz
mov
je
sar
iret
call
inc
fs
ds
repz
(bad)
in
or
ds
ds
repz
cld
sbb
iret
repz
adc
pusha
test
(bad)
loopne
inc
sub
sahf
out
js
enter
pushf
out
ficomp
loopne
inc
add
push
xor
jns
out
js
mov
lahf
clc
sbb
push
lahf
out
call
pop
out
repz
and
inc
repz
cmp
ins
mov
repz
or
out
push
mov
repz
and
pushw
js
mov
in
add
ss
dec
fs
cmp
test
out
fdivp
push
jo
int3
in
sbb
iret
repz
pop
jo
mov
fdivr
sbb
test
mov
push
iret
repz
push
adc
dec
push
inc
ins
cwde
mov
lock
jbe
dec
jl
sar
mov
dec
ss
iret
repz
inc
fs
aam
sahf
out
ds
fiadd
and
call
push
lahf
out
sahf
jo
lods
fdivr
sbb
cmp
repz
cmps
push
test
clc
sub
sub
sbb
push
pop
cwde
aam
out
fidivr
push
push
push
xchg
mov
jns
out
sbb
push
push
jo
shl
(bad)
out
add
push
push
push
jl
repz
mov
pop
(bad)
repz
repz
dec
jo
shl
jns
jecxz
pop
inc
cmp
out
lock
test
loopne
pop
mov
cmp
repz
movs
enter
sahf
mov
sbb
ds
ins
nop
mov
jns
out
in
pop
jbe
push
jo
lahf
out
test
cld
sbb
out
lahf
out
sahf
dec
jl
shl
adc
jns
ja
push
je
aam
iret
repz
push
ins
mov
clc
and
popa
push
xchg
ja
ds
mov
bound
lahf
out
sahf
js
mov
cmp
repz
push
push
pop
mov
cld
and
ins
xchg
out
lahf
out
loopne
cmps
gs
out
push
pushf
int3
hlt
sbb
push
lahf
out
sahf
dec
pusha
nop
mov
iret
repz
push
push
dec
js
enter
repz
adc
push
fs
mov
aam
imul
cli
cmp
lods
sar
and
push
lahf
out
sahf
pusha
je
mov
iret
repz
mov
mov
loopne
ins
pop
push
push
jl
jl
out
enter
mov
out
repz
ins
xchg
mov
repz
repz
push
fs
mov
iret
hlt
or
outs
push
jl
jns
iret
repz
push
dec
out
sahf
out
mov
ja
lock
push
pop
js
fidivr
out
aam
or
push
inc
jns
out
pop
jl
mov
repz
jae
push
pop
xor
iret
test
in
je
push
sahf
out
sahf
inc
pop
je
mov
cmp
lock
or
push
inc
pop
sti
cmp
repz
shr
jbe
cmp
repz
lods
enter
repz
ja
push
inc
push
and
mov
push
push
js
mov
loop
cmp
clc
sbb
push
dec
jns
out
je
mov
lock
lock
push
inc
ins
mov
clc
cmp
test
call
sahf
out
fiadd
push
sbb
add
ds
inc
pop
add
jns
pushf
mov
cld
sbb
cmp
repz
cwde
lods
jns
iret
repz
call
xor
jns
out
push
cmp
in
jg
push
cmp
repz
test
imul
mov
sbb
xor
push
test
iret
rol
add
rcr
adc
jns
out
inc
push
inc
pop
js
repz
lahf
out
fadd
and
cmp
repz
push
jl
mov
or
push
push
jo
jge
out
movs
(bad)
loopne
or
sahf
out
fmulp
push
dec
pusha
mov
jns
add
pop
push
inc
pop
sar
sar
aaa
xchg
repz
es
je
(bad)
lock
cmp
mov
xchg
mov
loopne
mov
inc
mov
jns
test
lock
pushw
pop
ds
repz
mov
jns
out
mov
lods
aaa
adc
push
sahf
out
sahf
cmp
mov
cmp
jnp
adc
movs
iret
mov
add
mov
push
js
iret
repz
enter
es
out
push
pop
nop
mov
lock
icebp
and
ds
js
mov
in
or
(bad)
push
dec
and
loopne
xchg
(bad)
push
pop
je
iret
repz
enter
pop
jl
out
push
jo
mov
or
push
dec
and
fdivr
sub
cmps
push
jo
ds
repz
mov
xchg
out
sahf
ja
jo
test
jns
ja
call
pusha
test
mov
loopne
sbb
iret
repz
scas
push
pusha
mov
out
or
call
pop
jl
mov
iret
repz
lahf
lock
push
push
je
les
adc
es
jo
mov
loopne
popf
push
push
pusha
sti
cmp
xrelease
ss
repz
enter
mov
push
test
cmp
cld
and
repz
mov
(bad)
fidiv
fs
shl
mov
mov
mov
sub
and
jbe
jl
fidivr
mov
xor
fucom
jns
and
cmp
push
repz
lahf
out
pushf
les
test
push
pop
ja
cmp
mov
hlt
sub
jns
jl
int3
lock
push
cmp
repz
mov
sti
add
outs
push
dec
fs
sahf
idiv
cmp
sbb
xchg
push
push
jns
clc
xor
repz
repz
push
push
sti
cmp
and
out
fsubp
adc
lock
out
sub
inc
push
je
call
iret
sbb
lock
repz
adc
xchg
mov
fdivr
aaa
mov
push
js
clc
cmp
pushf
(bad)
in
and
push
push
lahf
out
sahf
sub
cmp
repz
mov
mov
xchg
repz
in
mov
push
push
out
sahf
out
nop
mov
push
lahf
cld
sbb
mov
loopne
mov
bound
out
pushf
mov
mov
add
fisubr
mov
add
(bad)
in
retf
sub
xchg
out
add
add
cmovo
outs
add
pop
mov
add
(bad)
test
aaa
mov
add
mov
adc
popf
movs
add
(bad)
xchg
add
mov
cmp
outs
add
sbb
adc
add
add
arpl
dec
add
cmp
leave
leave
in
cmp
add
leave
leave
(bad)
(bad)
enter
test
add
cmp
cdq
sbb
pop
pop
xchg
add
pusha
push
fwait
pushf
pop
popa
bound
add
ret
add
push
nop
mov
add
xchg
adc
out
add
push
adc
mov
push
pop
add
nop
inc
dec
jbe
js
in
in
jp
jl
out
shl
jge
add
add
loopne
loope
out
inc
je
push
adc
std
mov
in
push
push
pusha
and
cwde
(bad)
sbb
add
push
pop
pop
add
imul
add
push
add
(bad)
call
daa
adc
adc
adc
daa
sbb
sbb
and
daa
sub
daa
(bad)
push
(bad)
jmp
and
dec
and
dec
and
and
dec
mov
adc
dec
popa
push
enter
(bad)
(bad)
call
push
dec
jno
(bad)
loopne
stos
fisubr
fisubr
fidiv
fimul
nop
ds
cs
and
sbb
mov
or
jge
dec
and
outs
adc
(bad)
sti
(bad)
repz
and
(bad)
test
fisub
push
stc
(bad)
jle
jp
je
add
std
mov
push
mov
inc
stos
mov
enter
aas
aam
loop
jecxz
in
in
out
out
call
cmp
test
rol
loope
xchg
(bad)
dec
push
mov
repz
or
ss
xor
iret
repz
pop
jo
cwde
repz
rep
rcl
cld
jns
or
push
mov
(bad)
fsubr
add
sbb
cmp
jbe
outs
outs
push
cs
das
fidivr
shl
push
call
in
jmp
cmp
push
push
ins
jnp
idiv
pushf
aas
mov
enter
idiv
hlt
push
or
pop
cmp
xor
push
dec
push
fs
jnp
and
fst
mov
pop
cmps
movs
pop
sbb
es
rol
cmp
icebp
bound
cwde
ficomp
fsubp
repz
ss
xor
out
sahf
out
jl
lods
les
jge
fdiv
or
push
push
cmp
jns
out
sbb
idiv
aam
in
cld
fcomp
movups
jge
ins
test
dec
inc
addps
ins
loope
outs
fs
dec
invd
fild
cmp
repz
aam
cld
adc
ss
and
loop
inc
cmovns
ins
dec
sete
jmp
or
push
nop
inc
loop
mov
mov
hlt
loop
or
pop
mul
cmp
push
fisttp
pop
push
sahf
neg
pushf
je
mov
mov
lods
ret
jns
outs
clc
pop
or
dec
fsubrp
in
in
and
lahf
xor
aas
dec
in
pop
push
jo
or
repz
mov
pushf
in
lods
in
add
mov
in
loopne
lock
cmp
push
or
scas
sbb
out
xor
dec
in
ins
xchg
outs
je
mov
fistp
repz
fmul
in
mov
add
sbb
sub
inc
daa
cmp
loope
push
out
fs
js
adc
lahf
cwde
out
test
or
outs
dec
mov
pavgb
pushf
lock
out
outs
adc
andps
repz
push
mov
movs
adc
jnp
inc
dec
mov
dec
repz
jle
in
adc
sub
ja
repz
test
add
cs
inc
or
lahf
pop
or
daa
add
pop
into
movs
cmpxchg
mov
add
and
mov
and
and
and
and
sub
addr16
(bad)
(bad)
fbstp
and
sub
sub
and
aaa
and
cmp
(bad)
aas
and
inc
and
dec
and
push
and
(bad)
(bad)
jmp
pop
and
popa
and
and
imul
outs
js
scas
(bad)
and
call
and
xor
ss
and
jmp
inc
and
pop
push
and
pop
and
jg
push
and
daa
sub
sub
aaa
cmp
cmp
xor
inc
inc
dec
dec
dec
dec
push
push
push
push
pop
pop
sbb
ja
js
pop
popa
arpl
ins
outs
add
push
jne
jns
jge
add
mov
cld
and
mov
cs
add
xchg
fisubr
sahf
sub
int
cmp
sub
add
dec
add
pop
dec
cmp
cmp
or
mov
stos
add
lock
(bad)
stos
mov
lahf
cmps
push
not
and
push
adc
push
sbb
jo
cmps
pop
rol
xor
dec
je
pop
sbb
add
(bad)
imul
cmp
inc
ins
repz
pop
add
pop
(bad)
ror
loopne
loop
cmp
test
cli
jp
jl
or
add
add
add
and
(bad)
inc
daa
add
add
add
add
add
sub
(bad)
(bad)
(bad)
mov
add
add
xor
add
add
add
add
add
cmp
(bad)
call
and
add
inc
add
add
inc
add
dec
(bad)
(bad)
(bad)
inc
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
pop
add
jg
inc
pop
add
pop
add
pop
mov
pusha
add
bound
arpl
add
add
(bad)
(bad)
jmp
push
add
ins
add
outs
add
jo
jno
jb
jae
je
jne
jbe
out
(bad)
push
js
jns
jp
jnp
jl
jge
jle
add
inc
ret
add
and
sub
in
xor
inc
data16
inc
inc
add
iret
cmp
scas
in
pcmpgtb
and
(bad)
(bad)
inc
mov
mov
adc
push
push
mov
call
out
into
mov
(bad)
(bad)
(bad)
jl
sub
xchg
inc
xor
fcomp
inc
mov
xlat
pop
mov
adc
(bad)
(bad)
call
std
mov
cmps
and
mov
bound
inc
rcl
es
(bad)
mov
pop
adc
(bad)
(bad)
jmp
(bad)
push
adc
add
sti
shl
out
loope
(bad)
pop
aaa
ret
xchg
pop
inc
add
jmp
test
fld
outs
mov
lea
cli
inc
popa
popf
ins
or
in
inc
jmp
test
dec
mov
mov
cli
daa
mov
aam
sbb
(bad)
(bad)
(bad)
call
fxam
cdq
(bad)
clc
jl
pop
gs
lods
les
hlt
xchg
jmp
inc
cmps
and
ret
pop
(bad)
(bad)
(bad)
call
xchg
int3
or
jge
out
call
pop
test
loopne
sub
adc
add
cmp
(bad)
call
xor
rcl
sub
mov
add
push
dec
inc
push
and
and
hlt
jo
and
les
popa
add
adc
in
enter
pop
(bad)
call
push
aas
jae
cmp
ss
ins
scas
sub
add
arpl
popf
mov
jge
mov
lea
add
xchg
inc
xchg
mov
pop
inc
mov
pop
mov
add
out
fstp
lahf
ins
js
inc
pop
xchg
cmps
outs
dec
or
fsub
add
add
in
jns
add
or
inc
in
or
and
mov
ds
sub
loop
add
test
add
call
xchg
les
adc
test
aas
test
adc
sub
pop
pusha
stos
cmps
aas
add
pop
(bad)
jns
out
pop
popa
inc
push
je
sar
add
sub
adc
cmp
sbb
imul
comiss
pop
sbb
xchg
add
das
add
daa
test
in
sldt
inc
add
mul
test
xchg
loop
jno
inc
add
mov
neg
or
pop
ja
ins
shr
enter
adc
push
mov
dec
add
xor
mov
aaa
or
inc
pop
pop
lahf
cmp
repz
loope
cmp
(bad)
cld
clc
aad
sahf
out
loopne
cmp
(bad)
(bad)
(bad)
inc
xor
or
cmp
add
xor
bswap
aas
inc
dec
mov
(bad)
(bad)
push
jg
loopne
shr
sbb
and
adc
das
out
pop
fbld
ins
pushf
pop
mov
call
pop
or
cmp
add
xor
or
cmp
pop
(bad)
aaa
test
dec
(bad)
(bad)
(bad)
(bad)
mov
ja
call
adc
sub
sbb
daa
out
xlat
test
cwde
pop
movs
fs
push
stos
imul
(bad)
call
push
add
xor
push
into
inc
shl
or
inc
mov
mov
jle
inc
(bad)
(bad)
(bad)
push
jge
loop
shr
out
push
fisub
loope
shr
bound
pop
mov
call
pop
or
cmp
push
(bad)
test
cmp
add
dec
mov
jbe
dec
(bad)
(bad)
(bad)
(bad)
mov
jne
jmp
sub
sbb
and
push
pop
cmps
xchg
push
test
std
cdq
pop
movs
gs
push
daa
inc
lds
push
inc
dec
std
neg
outs
push
dec
xor
and
jae
push
xor
data16
fwait
sbb
push
bound
mov
inc
sub
sbb
imul
and
in
jg
cdq
cdq
test
outs
push
ss
and
sbb
or
mov
push
sbb
stos
data16
mov
ss
xor
lock
out
popa
dec
mov
xor
aas
retf
xchg
scas
out
aas
stos
adc
shl
aas
aas
in
call
cmp
jmp
jnp
push
loope
pop
stos
jb
push
test
mov
sub
into
imul
adc
sbb
adc
add
add
push
and
sub
and
adc
out
ja
jg
push
adc
sahf
and
xor
cmp
mov
and
push
addr16
repz
sub
cmp
cmp
repz
cmp
daa
cs
iret
repz
aaa
ds
xchg
or
pop
sbb
mov
out
pop
push
dec
cmp
mov
cs
aaa
das
or
add
push
pop
push
pop
lock
push
push
xchg
jnp
ja
aaa
and
addr16
cmps
pop
cmc
push
push
push
jno
out
das
dec
scas
ficomp
push
js
dec
dec
pop
loopne
mov
bnd
out
mov
aaa
adc
das
daa
pop
push
push
or
xlat
out
inc
aas
mov
aaa
cmp
inc
aaa
sub
mov
pop
test
jmp
add
pop
xchg
inc
mov
cmp
add
add
jmp
test
add
push
adc
pop
and
idiv
push
xor
inc
mov
adc
xor
xor
sbb
sbb
and
sub
sub
jg
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
(bad)
(bad)
mov
push
je
jbe
js
jp
test
mov
xchg
cwde
cdq
call
movs
movs
cmps
cmps
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
or
(bad)
loope
jecxz
in
out
jmp
hlt
cmc
div
clc
stc
cli
gs
or
add
test
gs
repz
and
adc
push
pop
popa
jno
and
inc
jo
adc
push
push
lock
pop
pusha
and
loope
icebp
imul
push
xor
sub
add
imul
call
push
add
sbb
out
xor
cmp
sti
dec
add
or
sbb
push
int3
cs
es
push
xchg
push
cmp
(bad)
fld
add
mov
inc
call
imul
pusha
jl
cmp
repz
pushf
mov
cld
sbb
jns
cmps
inc
pusha
sub
ins
pop
pushw
and
cmp
repz
je
mov
dec
push
addr16
push
inc
cmp
repz
je
mov
xrelease
push
iret
repz
shl
or
push
iret
repz
cmp
mov
cmp
adc
(bad)
cmp
inc
js
(bad)
in
aaa
imul
sahf
ja
push
push
repz
lock
cmp
jl
imul
pusha
ins
fucomip
cmp
fiadd
(bad)
loopne
outs
popw
sub
bnd
add
outs
cbw
cmp
push
lods
enter
sahf
push
out
xchg
lock
push
inc
fs
out
sahf
sbb
inc
sbb
push
push
sbb
rcr
cmp
out
jg
mov
inc
std
call
jmp
(bad)
out
(bad)
clc
pop
in
push
xor
adc
call
jle
es
call
push
in
push
(bad)
out
or
in
scas
lock
fld
jmp
cmc
das
call
ret
add
ins
add
das
ins
(bad)
imul
dec
cmp
or
mov
hlt
push
add
pusha
pop
mov
push
loopne
add
rcr
and
pop
and
pop
inc
jbe
mov
ja
pop
loopne
pop
das
jmp
pop
and
(bad)
stos
ins
loopne
inc
push
xor
dec
dec
push
fdivr
or
inc
dec
mov
dec
hlt
outs
xor
inc
add
push
push
dec
inc
dec
add
jo
add
ja
inc
ins
mov
cmp
jo
and
ins
or
push
loopne
aam
bound
shr
fsubr
imul
mov
and
outs
arpl
data16
ja
jb
add
add
mov
or
add
lods
cmp
mov
fs
xchg
adc
sub
sbb
(bad)
(bad)
outs
outs
mov
adc
ins
test
mov
push
jae
clc
inc
rcr
je
idiv
fwait
or
jle
jnp
and
sub
mov
dec
dec
bound
mov
inc
push
sub
adc
popa
je
pop
retf
arpl
popa
sub
lea
and
or
cld
cmp
ror
jb
mov
xor
loope
or
je
cmc
outs
outs
or
mul
cld
(bad)
and
popf
adc
ins
sbb
stos
pop
inc
mul
mov
sbb
and
cmp
js
arpl
ja
and
aas
and
imul
sub
pop
and
in
enter
into
outs
jb
pusha
adc
xor
ja
jne
pop
xor
xchg
mov
repnz
add
outs
sub
or
mov
inc
bound
fldcw
cmps
or
dec
push
dec
dec
xchg
and
add
ret
dec
sahf
cmps
sub
mov
int3
sbb
ret
arpl
ins
stos
add
loop
or
sbb
out
rcl
sbb
mov
mov
jnp
loope
push
jae
sub
lahf
mov
add
arpl
sbb
and
xchg
dec
leave
cs
sbb
xor
stos
outs
jbe
data16
loopne
cli
xor
mov
mov
or
sahf
jb
pop
push
fmul
mov
push
rcl
fld
jae
es
mov
jb
xchg
sub
arpl
sbb
add
rcr
repnz
mov
ja
mov
loopne
nop
js
sub
popf
push
push
sti
pop
sub
pop
jns
jne
jl
fisttp
and
cmp
dec
cmc
aaa
add
ret
inc
xor
pop
and
nop
jne
jge
outs
jae
lea
pop
xchg
iret
push
inc
push
inc
jecxz
push
pop
pop
mov
xor
jnp
inc
stos
push
retf
jb
leave
mov
mov
pop
js
add
add
push
xor
shl
mov
mov
pop
test
inc
mul
mov
lock
add
dec
outs
gs
xor
shl
ins
dec
push
sbb
jne
lds
xor
aaa
adc
and
xor
outs
ret
mov
push
arpl
push
or
push
frstor
or
adc
and
or
jmp
dec
jns
push
xchg
clc
push
js
imul
(bad)
sub
or
pop
jmp
xor
mov
mov
mov
sub
jo
sbb
cmp
pop
test
fcom
mov
ins
pop
addr16
mov
bound
je
sti
adc
xchg
gs
inc
shr
sub
mov
xor
sub
shl
xor
sub
addr16
lds
outs
movs
popa
ins
icebp
or
neg
pop
xor
aaa
mov
ret
imul
pop
test
jns
popa
sub
test
test
jle
xchg
push
cmp
jl
or
add
adc
ror
push
xlat
add
dec
dec
inc
inc
mov
repnz
outs
fld
rol
ins
imul
sbb
lahf
fdiv
mov
push
dec
push
push
(bad)
pop
addr16
imul
popa
(bad)
ja
shl
and
sub
and
push
adc
retf
and
cld
push
sub
ins
jo
pop
add
in
or
add
in
inc
cmp
inc
mov
jp
outs
aad
xlat
das
nop
sub
push
inc
sub
in
push
add
mov
push
imul
push
sub
inc
rcr
push
sbb
pop
dec
xchg
jo
mov
jge
stos
dec
or
adc
jnp
cmps
dec
popa
xor
jo
nop
push
add
loope
inc
mov
dec
sub
add
or
jnp
and
or
popa
pop
push
or
inc
dec
or
jnp
sub
add
je
mov
out
push
push
dec
inc
ud2
inc
dec
pop
or
inc
imul
in
push
push
pop
sbb
dec
inc
dec
jl
out
inc
sub
aas
jnp
cs
sub
pop
and
pop
push
cld
inc
mov
jb
test
push
jl
jg
or
fdivp
push
clc
cld
pop
add
sldt
ins
adc
add
sbb
pop
pop
jb
push
in
add
add
pop
add
or
(bad)
adc
cmp
into
add
and
ss
test
adc
test
pop
or
xlat
out
rol
or
sub
pop
mov
jbe
push
jns
mov
fild
add
or
scas
lea
add
mov
jmp
test
or
xlat
retf
inc
ret
or
pop
int
add
add
adc
fist
add
push
out
xchg
jp
jle
adc
sti
pop
cmp
mov
scas
pop
mov
or
add
mov
add
add
xor
pushf
lahf
repnz
add
dec
add
sti
mov
push
and
add
and
pop
test
mov
and
imul
je
ret
xor
or
jp
add
rol
mov
xchg
mov
rcl
add
rcr
adc
cmps
cs
sti
adc
es
daa
add
or
int
push
ror
push
push
je
mov
(bad)
dec
add
ss
or
out
add
dec
loopne
add
jo
cmp
mov
or
mov
bound
or
add
adc
ss
scas
loope
or
or
and
or
scas
loope
jp
or
cs
add
or
repnz
inc
push
dec
add
xchg
jne
dec
push
push
push
or
add
ret
imul
ret
dec
add
out
jp
xor
or
add
jle
mov
mov
xor
out
xchg
stos
or
add
add
cmp
enter
dec
add
cmp
scas
loop
push
adc
fcmove
sbb
mov
or
ret
mov
rol
add
cdq
popa
add
sbb
adc
gs
push
add
add
add
dec
(bad)
hlt
ret
add
inc
outs
push
inc
or
popa
bound
or
mov
jb
out
div
push
push
outs
jo
ins
outs
outs
adc
addr16
push
fidiv
jne
inc
xchg
imul
bound
jb
cmp
ins
jmp
ins
es
inc
mov
data16
popa
ins
or
in
and
outs
add
cdq
jo
mov
add
jbe
test
out
fstp
outs
je
jb
cmp
gs
jbe
jmp
add
scas
jge
in
ss
gs
ins
xor
lods
mov
inc
push
or
fisubr
jne
in
dec
test
sub
mov
imul
dec
mov
push
mov
pop
mov
pop
ja
imul
mov
sbb
outs
out
ja
popa
push
je
imul
dec
imul
outs
jae
aam
jp
pop
outs
mov
popa
outs
push
out
mov
gs
or
ins
bound
scas
mov
pop
inc
adc
dec
les
xor
or
jns
and
dec
add
push
inc
dec
and
mov
sub
mov
xor
and
inc
mov
mov
inc
mov
xor
pop
push
and
jne
dec
push
xchg
mov
or
xlat
dec
mov
imul
je
arpl
push
inc
nop
dec
mov
or
jb
ins
push
arpl
test
nop
and
inc
cmp
outs
and
push
jno
mov
dec
push
gs
xor
ja
cwde
mov
popa
cmp
scas
cmp
push
mov
push
imul
ins
and
push
ins
add
adc
test
je
gs
jns
ss
ret
dec
les
jo
cli
in
outs
punpckldq
lds
ja
add
xor
dec
push
mov
popf
or
imul
into
push
sub
push
and
icebp
push
cmp
outs
pop
jo
dec
adc
jo
jae
or
unpckhps
push
adc
adc
in
arpl
or
das
adc
or
xor
pop
aas
mov
sidtd
ds
(bad)
jbe
test
pop
jns
add
jb
pop
aaa
into
pop
cmp
push
sbb
aam
movnti
bswap
leave
leave
leave
leave
int
retf
outs
mov
iret
iret
popa
pop
ror
shr
mov
pop
aad
(bad)
pminub
fild
lahf
cmp
rcr
das
add
or
or
bswap
jle
outs
mov
sub
jg
pop
sub
inc
mov
nop
in
cmp
iret
xor
xor
in
in
xor
fld
imul
(bad)
std
movntps
sub
out
mov
pop
mov
pop
push
cmp
or
scas
js
push
adc
adc
fild
mov
outs
fisttp
(bad)
inc
cmp
add
and
scas
dec
dec
dec
sahf
push
fneni(8087
loope
mul
push
dec
ror
pop
xchg
xchg
xchg
pop
ret
add
add
shufps
daa
daa
das
enter
mov
or
pop
mov
popa
(bad)
ins
stc
iret
(bad)
or
or
or
or
or
fstp
je
or
jmp
sbb
in
or
wbinvd
xchg
adc
or
xor
aaa
scas
add
or
sbb
jbe
jo
sbb
unpckhps
in
in
sbb
in
scas
leave
ins
or
push
mov
leave
in
xor
sysret
jg
pop
aaa
add
outs
aas
das
aas
in
in
jbe
scas
aas
(bad)
aas
scas
push
aas
push
or
outs
mov
leave
pop
or
or
dec
add
add
add
bswap
adc
mov
aas
adc
jb
add
dec
sub
jbe
jb
sub
fbstp
(bad)
dec
xor
mov
pop
mov
ss
jb
(bad)
outs
ss
in
in
in
sbb
and
sub
and
lahf
xchg
xchg
fcmovne
and
pop
das
das
vpaddsw
cmp
das
leave
in
push
jbe
aas
scas
and
mov
fcmovne
and
aas
cmp
out
cmp
test
outs
jg
pop
cmp
cmp
movlps
es
fisttp
popa
pop
jg
es
or
mov
sbb
sbb
loopne
das
pop
pop
(bad)
(bad)
sbb
cmp
sbb
not
jbe
(bad)
sub
in
push
adc
cmp
pop
fistp
pop
sbb
leave
leave
leave
push
push
xor
mov
in
leave
pop
pop
add
or
mov
pop
iret
pop
pop
prefetch
adc
pushf
pushf
sbb
fucomi
jbe
pop
and
jmp
outs
popa
mov
in
and
daa
cvtps2pi
xchg
or
mov
add
pop
add
cmp
cmp
xchg
fld
dec
(bad)
xchg
dec
inc
pop
inc
aas
inc
pop
inc
cmp
jbe
pop
dec
sysret
push
or
div
dec
or
comiss
add
(bad)
push
lds
inc
clc
rol
scas
or
jns
ja
pop
dec
push
push
fs
cmp
cmp
es
fwait
or
mov
jecxz
stos
(bad)
pushf
jns
add
das
sbb
sbb
or
or
mov
mov
ror
or
in
push
mov
out
push
jg
lock
inc
ja
outs
lahf
sbb
sub
pop
outs
adc
adc
scas
or
nop
cmp
pop
ds
psubusb
in
xor
add
push
or
mov
or
pop
adc
jbe
add
cmp
and
push
pop
outs
sbb
das
fcmovne
leave
in
sbb
jg
popa
mov
sbb
push
pop
pushf
fsubr
dec
das
dec
dec
dec
dec
or
or
or
mov
xor
das
xor
or
jbe
(bad)
dec
aas
dec
das
popa
mov
fisttp
dec
aas
fild
outs
xchg
xchg
pop
or
dec
das
dec
jb
mov
aas
inc
inc
pop
call
scas
inc
inc
and
lsl
sbb
jg
mov
add
push
in
mov
movaps
mov
in
adc
adc
pop
cmp
sub
fiadd
or
jl
or
sub
or
lea
bswap
in
jbe
lahf
inc
das
inc
pop
push
leave
in
jbe
push
pop
push
pop
push
aas
ds
jo
ds
aas
outs
or
in
adc
add
add
pcmpeqd
scas
cmp
or
add
push
and
push
dec
sbb
rol
add
add
or
rsqrtps
push
std
inc
jb
js
add
fcmovbe
mov
sbb
adc
adc
or
push
ds
xchg
dec
xchg
sti
push
pop
sub
adc
push
out
push
pop
push
lds
inc
sahf
push
pop
fcmovb
sahf
and
push
arpl
pop
jbe
bound
sbb
or
add
nop
jbe
pop
and
sti
sbb
ss
shl
fwait
sub
mov
pop
sti
push
add
pop
sub
sub
mov
cmp
add
xchg
add
mov
push
fwait
cli
add
push
xor
mov
and
pusha
pop
push
sbb
outs
xor
jnp
(bad)
or
or
inc
xchg
inc
mov
xor
or
jle
inc
shr
xchg
pop
dec
pop
repnz
pop
add
dec
adc
dec
add
sahf
mov
dec
dec
arpl
add
sbb
xchg
push
or
adc
fldenv
add
jae
adc
add
fadd
sbb
pop
push
push
jb
add
xorps
add
add
mov
pop
and
adc
iret
sub
and
push
daa
ficom
out
pop
add
add
cwde
mov
inc
adc
jmp
popf
mov
cdq
movs
dec
push
push
pop
retf
xchg
jl
jne
jne
and
ja
jb
jb
jns
movs
inc
jb
ret
adc
pop
inc
add
add
into
jg
pop
mov
cmp
or
outs
add
add
push
test
xchg
push
xchg
add
in
ja
push
mov
mov
jnp
mov
ins
mov
jg
add
cmp
add
mov
lea
cmp
or
pop
nop
test
pop
xor
setno
inc
add
ror
inc
add
xchg
aas
shl
mov
fwait
sti
pusha
adc
pop
xchg
add
lds
xchg
add
mov
jbe
sar
xchg
add
in
push
jg
fcom
scas
cdq
add
in
in
cdq
add
sub
enter
sahf
lahf
add
aas
push
add
cmp
mov
mov
sub
pusha
mov
sbb
cmp
mov
add
movs
add
rcl
add
and
pusha
pop
push
add
add
push
jbe
push
pop
push
mov
test
fild
sti
cmps
add
das
rol
sub
mov
mov
test
stos
mov
cmps
lods
add
test
add
pop
or
ss
dec
push
add
pop
bound
sbb
aad
push
xor
test
mov
rcl
fidiv
sbb
or
push
and
or
mov
outs
sar
pop
das
push
add
mov
push
add
mov
mov
sub
jge
add
mov
mov
add
pop
cmp
push
mov
push
mov
int3
adc
adc
mov
or
adc
cmps
or
mov
add
(bad)
fiadd
add
pusha
arpl
sub
daa
aam
sbb
push
mov
mov
mov
(bad)
push
sub
xchg
(bad)
xchg
retf
aad
mov
jnp
sti
rol
imul
push
ret
add
lsl
imul
sub
push
les
ret
xchg
lea
pop
pinsrw
jg
ret
push
nop
or
(bad)
cs
out
cmp
daa
enter
add
inc
mov
lsl
jbe
pop
aaa
out
push
enter
enter
ins
adc
pop
retf
jae
ss
mov
stos
push
retf
add
mov
scas
push
sub
mov
mov
int3
add
int
push
cmovnp
jmp
popf
mov
int
add
push
pop
push
das
test
and
push
and
into
push
iret
add
imul
arpl
pop
rol
or
add
shl
sub
mov
aam
rol
aam
inc
add
mov
cmp
mov
cmp
add
or
test
push
fmul
fld
fimul
inc
jo
(bad)
add
push
add
pop
ins
pusha
popa
mov
pminub
or
add
or
in
outs
mov
push
or
scas
sbb
add
dec
pop
dec
pop
add
mov
fild
loopne
mov
loop
jecxz
mov
add
pop
in
test
fist
fild
loop
fidivr
or
sbb
loopne
xor
sub
push
das
push
xchg
add
sahf
add
jmp
aas
push
jmp
sub
xchg
pop
in
stos
pop
fidiv
jmp
and
pusha
in
call
enter
mov
add
adc
add
and
dec
scas
push
out
stos
mov
add
lock
rcl
and
pop
jbe
and
sub
push
mov
test
xchg
push
pop
fbstp
add
and
sub
mov
mov
push
add
test
test
inc
cmp
stc
daa
sti
outs
pop
lds
cld
add
jg
xchg
retf
add
add
call
inc
push
and
add
push
pop
xchg
add
add
fisubr
add
jg
add
cmp
add
bound
pop
add
jg
mov
or
add
mov
in
or
add
inc
fsubrp
xor
or
and
add
mov
adc
add
adc
adc
sti
cs
or
add
add
adc
adc
rcl
add
add
add
pop
mov
push
rol
ret
adc
push
fild
ja
and
sbb
jg
add
mov
mov
sbb
mov
cmp
add
inc
sbb
sbb
sbb
lods
dec
scas
movs
add
int3
scas
sbb
pop
add
and
add
xor
and
add
ret
push
aaa
and
add
add
daa
add
adc
rol
sub
add
mov
ret
sub
sub
add
pop
push
pop
pop
aas
sub
add
sub
sub
add
add
in
in
add
das
pop
das
mov
xor
adc
nop
or
xor
xor
or
add
xchg
popa
add
xor
add
cmp
jno
cmp
add
add
push
xchg
pop
inc
cmps
adc
xchg
and
xor
(bad)
push
add
aas
ja
add
adc
push
pop
pop
enter
add
inc
aaa
mov
aaa
pop
outs
adc
jg
pop
ret
mov
mov
inc
outs
add
or
push
or
or
add
lds
aas
outs
push
push
xor
dec
push
xchg
pop
mov
(bad)
ja
add
add
dec
add
(bad)
dec
aaa
jg
jg
mov
mov
aas
add
push
sub
outs
mov
mov
push
mov
fstp
aas
xlat
sahf
cs
add
lldt
add
add
sbb
add
mov
add
adc
aas
shl
jae
push
add
add
add
xlat
scas
out
loopne
xchg
imul
push
retf
mov
add
fisttp
add
add
push
push
les
jbe
xchg
add
or
popa
fst
add
daa
scas
mov
or
add
add
dec
push
daa
ret
ins
imul
sti
data16
idiv
jg
sbb
fcomp
jbe
(bad)
aaa
push
add
fistp
cld
mov
pop
add
leave
inc
repnz
pop
add
pop
sub
popa
adc
or
sbb
aas
xlat
bound
pop
sbb
or
fiadd
push
scas
xchg
or
mov
add
inc
adc
inc
add
push
adc
mov
test
or
mov
mov
sub
(bad)
adc
fadd
sbb
cmp
add
nop
test
sub
add
inc
adc
daa
add
adc
das
add
mov
sbb
call
test
add
cmp
add
loopne
push
and
inc
in
test
add
add
push
pushf
sbb
push
inc
stos
test
add
aad
mov
add
bound
xchg
shl
or
add
push
inc
add
add
add
add
sub
push
add
rol
mov
push
add
or
xor
push
push
inc
adc
adc
add
jno
add
pop
add
or
fisttp
in
je
add
jne
and
or
fadd
aam
jle
and
add
sbb
pop
or
jo
add
cmovae
push
add
add
push
and
stos
add
dec
push
dec
shr
mov
add
or
push
dec
loopne
sti
push
inc
and
ss
jecxz
mov
or
js
add
sub
(bad)
or
cmp
arpl
cwde
stc
sbb
and
push
les
xor
add
add
add
scas
mov
add
fcmovne
push
and
daa
add
ins
test
mov
adc
add
rol
test
and
nop
mov
push
jg
add
push
aam
jg
add
pusha
mov
add
or
add
sub
xchg
cmp
or
add
and
add
ss
add
sbb
aas
or
(bad)
jns
sbb
xchg
push
ins
dec
xchg
das
inc
add
sbb
out
add
add
mov
lahf
add
sbb
sub
iret
add
xchg
inc
stos
pop
push
add
aaa
add
mov
push
ja
or
pop
mov
xor
pop
outs
push
xor
mov
dec
rol
adc
lea
mov
mov
mov
adc
adc
push
pop
add
call
or
arpl
add
jbe
add
xchg
cwde
adc
jo
nop
fwait
pushf
jnp
push
aad
popf
pop
sahf
add
ror
inc
lahf
mov
mov
lahf
mov
mov
push
das
mov
stos
pop
mov
mov
mov
pop
push
leave
inc
movs
xor
fwait
push
push
test
add
les
dec
xchg
daa
add
sahf
mov
mov
movs
mov
add
inc
push
mov
add
add
push
push
add
and
inc
icebp
add
mov
fsub
iret
mov
and
out
add
add
mov
xlat
pop
call
(bad)
or
sub
test
add
dec
jl
rol
add
movs
add
call
mov
jne
add
ret
xor
mov
pusha
inc
push
jg
loope
adc
adc
bound
(bad)
push
fisubr
and
push
adc
mov
pop
add
sub
push
cmps
add
xor
adc
add
add
push
sti
add
push
add
add
or
add
add
adc
mov
mov
jmp
xchg
and
ret
pop
test
push
mov
repz
add
mov
stos
add
push
cmp
mov
push
dec
and
add
mov
scas
add
scas
and
xor
add
pop
test
ins
add
in
mov
add
nop
mov
mov
add
mov
test
mov
add
pop
xchg
in
add
daa
add
push
or
mov
mov
mov
sub
ins
pop
out
rol
add
or
shr
xchg
fcomp
rol
add
add
fwait
xchg
pop
scas
sbb
add
sbb
add
inc
push
cmp
les
add
fisubr
add
inc
adc
mov
inc
call
sub
and
popa
imul
add
mov
and
mov
test
test
xchg
inc
sbb
aam
retf
push
enter
test
add
jecxz
xor
push
div
adc
pop
in
ins
adc
inc
nop
sbb
xchg
sbb
push
aas
dec
add
add
test
lahf
add
inc
dec
sbb
ss
iret
mov
daa
iret
add
mov
xchg
xchg
push
mov
test
and
sub
or
push
mov
mov
sbb
add
inc
adc
mov
ja
mov
pusha
add
jnp
mov
jmp
adc
add
mov
inc
mov
add
and
mov
dec
or
sbb
call
fistp
sbb
and
int
inc
fs
cs
xor
retf
call
adc
xor
aas
mov
cmp
ds
aas
inc
inc
inc
leave
sbb
test
push
dec
adc
dec
push
push
push
jecxz
ss
add
ds
fiadd
pop
pop
pusha
popa
bound
neg
xor
imul
jb
ins
ins
outs
inc
jecxz
inc
push
jae
(bad)
(bad)
pop
stc
jnp
jge
jle
add
test
test
adc
xchg
mov
cmove
mov
nop
inc
mov
lea
push
mov
aas
sub
stos
test
pop
cdq
or
or
adc
scas
add
call
or
push
mov
sub
or
bound
popf
pop
push
or
test
mov
cmc
inc
popa
in
mov
cmp
sbb
pop
pop
cmp
pop
inc
mov
bnd
repnz
sti
mov
retf
or
mov
mov
scas
scas
mov
test
mov
mov
adc
adc
retf
int3
int
iret
rcl
call
fisttp
mov
inc
inc
dec
cld
jno
mov
ret
sti
cld
std
(bad)
call
xor
push
mov
dec
dec
sub
add
cwde
add
popa
sub
jle
add
add
jle
test
adc
push
cmp
mov
jbe
aas
(bad)
inc
jg
jl
pop
mov
or
push
clc
add
dec
push
jo
jg
cmp
add
add
xchg
add
mov
xor
sbb
pusha
and
add
sub
adc
add
jns
push
les
in
iret
repz
add
adc
xor
push
ds
repz
je
xchg
cld
mov
imul
add
xor
ss
mov
rol
dec
mov
stc
xor
enter
sbb
idiv
call
pop
js
idiv
cwde
(bad)
in
or
sahf
push
pop
nop
popa
das
clc
fsub
cmp
xor
lock
js
add
ja
inc
js
fadd
pop
ss
push
ins
xchg
inc
push
pusha
imul
add
cs
pop
shr
or
es
(bad)
or
push
push
push
clc
data16
mov
pop
and
lods
pusha
sar
xchg
pop
inc
dec
ds
shr
sub
xlat
push
enter
inc
inc
movs
cmp
xor
out
ret
(bad)
inc
test
les
ret
push
je
outs
js
scas
inc
add
push
jbe
mov
es
dec
push
addr16
inc
loopne
add
ins
pop
cmp
clc
lods
gs
and
(bad)
(bad)
mov
push
mov
push
pop
mov
add
push
adc
imul
loopne
bound
sbb
pusha
movs
jle
dec
sbb
dec
add
ficomp
neg
ss
dec
and
or
mov
adc
pop
pop
mov
push
stc
rol
sbb
push
add
ins
pop
rol
jnp
dec
dec
cmp
xchg
faddp
(bad)
mov
jbe
inc
mov
mov
adc
in
cmp
addr16
call
call
or
cmps
mov
fidiv
or
cwde
cmp
push
mov
mov
dec
add
dec
shl
fild
iret
xor
cmp
inc
jmpw
call
xchg
mov
mov
pop
dec
pop
cs
sub
loop
icebp
push
or
(bad)
sahf
inc
push
xchg
cmp
loope
xor
pusha
pop
fsub
jl
add
push
sub
shl
jbe
mov
jle
out
pop
xor
push
loopne
sar
dec
out
loopne
ror
adc
sub
lock
cmp
xchg
or
pop
pop
pop
into
or
fadd
jo
(bad)
cmp
sbb
test
js
pop
lock
or
mov
mov
sahf
enter
out
dec
into
sub
sahf
in
cmp
loope
mov
cs
pop
mov
lods
in
jnp
out
dec
xchg
out
pop
sbb
push
sub
mov
sahf
nop
push
enter
pop
adc
pusha
(bad)
cmp
xor
pushf
(bad)
mov
dec
div
push
ficom
push
cmp
or
js
sbb
push
push
push
loopne
sub
rol
mov
cs
inc
test
xchg
mov
cs
clts
lock
mov
push
call
xor
mov
loopne
pop
into
in
aaa
fmul
push
in
fidivr
loopne
je
clc
into
pusha
dec
pusha
push
pop
outs
add
fidivr
inc
push
mov
(bad)
out
imul
lock
ss
cmps
dec
sahf
cmp
loopne
jo
inc
mov
jo
mov
pusha
fdivrp
sti
js
sbb
jbe
push
xor
mov
pop
and
out
lods
jae
js
push
and
dec
push
pusha
inc
push
cs
lds
jle
push
int3
xchg
addr16
inc
test
div
fimul
iret
loope
xchg
push
or
ja
loopne
neg
ret
jnp
or
and
movs
ds
outs
cmc
sbb
push
js
inc
adc
push
pop
pop
push
pop
mul
add
ret
mov
outs
inc
aas
cmps
adc
repz
pushf
(bad)
into
adc
in
test
sahf
ret
xor
cmp
push
mov
mov
push
inc
lock
push
inc
icebp
mov
fiadd
adc
jo
js
loopne
pushf
in
addr16
push
in
imul
ret
pop
add
mov
js
cs
dec
push
add
mov
and
or
sbb
mov
adc
jl
out
loope
sbb
pop
fisub
faddp
ret
jnp
pop
jbe
outs
adc
push
cld
mov
(bad)
xchg
push
mov
pop
pop
out
push
mov
mov
mov
adc
sbb
fadd
sahf
ret
mov
aaa
(bad)
cmp
lds
aaa
outs
sbb
cmps
sub
mov
mov
xor
mov
gs
lock
fidivr
inc
and
inc
push
pop
(bad)
mov
mov
xchg
mov
js
loopne
sbb
sbb
sbb
scas
mov
cmp
enter
or
loopne
not
ins
or
enter
movs
push
jo
nop
rol
pop
out
es
out
mov
in
or
inc
(bad)
cwde
dec
ret
aad
pop
dec
pop
scas
rcl
lods
jbe
push
ret
ret
rol
dec
fcomp
lock
push
shl
sub
mov
mov
int3
jbe
das
ret
sbb
jbe
or
pop
cmp
jo
dec
xchg
pop
out
mov
cmp
mov
push
xor
loopne
out
es
mov
adc
sbb
push
add
mov
cmp
test
add
adc
push
fiadd
or
push
lock
ss
jle
into
push
fidivr
push
pop
pop
sbb
ins
sahf
aam
(bad)
out
mov
cmps
xor
loopne
call
out
mov
in
pop
movs
push
adc
js
divps
mov
hlt
push
cmp
xor
loopne
shr
push
js
or
pop
inc
push
shl
push
mov
mov
mov
imul
inc
add
push
ds
pusha
jne
sub
and
cmp
jo
inc
mov
test
arpl
mov
sahf
ds
mov
idiv
xor
push
ss
inc
add
push
pop
scas
pop
mov
dec
scas
fmul
loopne
out
adc
int3
not
pop
dec
(bad)
rcl
sahf
cwde
(bad)
jo
lock
mov
push
inc
pop
jbe
mov
mov
(bad)
xchg
inc
xor
ret
push
lock
inc
adc
faddp
cmp
fisubr
ror
cmps
sbb
aam
imul
add
enter
inc
pop
bsf
push
sahf
and
sub
rol
cwde
lock
add
jge
sub
scas
sub
fs
pop
sar
call
ds
inc
out
stos
or
pop
out
sub
or
push
push
push
fistp
mov
cld
ss
sub
test
sahf
mov
push
cmp
xor
ror
(bad)
cwde
not
in
push
push
sub
aam
push
out
jns
(bad)
mov
lock
push
js
ret
jnp
(bad)
(bad)
adc
aam
and
fcomp
pusha
xor
fmulp
pop
pop
mov
inc
xchg
mov
add
dec
mov
sub
rol
xchg
jl
mov
jo
les
scas
fs
data16
mov
mov
cmp
mul
push
fidivr
clc
scas
sub
sbb
mov
lock
lock
xchg
xor
iret
loopne
dec
mul
add
enter
push
sbb
lds
pop
out
push
test
push
or
xchg
jle
cmps
cld
out
sub
mov
add
fcom
out
ret
jmp
mov
push
jbe
fadd
rol
push
and
push
sahf
rol
pop
pushf
out
and
lock
push
fidivr
es
clc
scas
fiadd
das
cmp
mov
div
test
rol
cwde
mov
shl
call
dec
and
test
call
lock
into
pusha
outs
sub
add
(bad)
neg
adc
cmp
add
sar
push
fs
out
jnp
cmp
inc
shl
xor
jbe
out
dec
sbb
loopne
pop
fdivr
inc
sbb
jo
dec
scas
mov
faddp
or
fistp
test
mov
js
cmp
mov
cmps
outs
enter
lock
dec
ds
into
nop
xchg
inc
outs
test
call
or
mov
dec
lahf
test
cs
movs
jg
fiadd
pusha
inc
outs
jl
cmp
hlt
jo
sahf
push
push
mov
xchg
mov
push
int3
ds
sub
addr16
(bad)
jbe
push
sahf
fs
sbb
pop
es
(bad)
cmp
or
mov
ja
jo
push
outs
loopne
pusha
sbb
sub
pop
xchg
dec
jle
add
jg
ins
neg
icebp
cmc
mov
ss
clc
pop
ins
jo
xor
rol
mov
pop
push
cwde
fiadd
rol
fadd
shl
add
mov
js
out
push
clc
iret
mov
rol
adc
shl
rcl
mov
xor
je
loope
icebp
fisub
js
fs
push
pop
cmp
ret
loopne
cmps
push
cwde
in
packuswb
ins
out
push
cwde
(bad)
mov
push
fimul
cmps
mov
into
adc
cmp
lock
(bad)
adc
push
inc
push
jle
daa
out
popa
test
xchg
push
sbb
clc
xor
lds
into
push
fsubr
pop
fsub
xor
xor
(bad)
mov
js
pop
cs
clc
push
call
cs
push
test
outs
enter
sbb
out
cld
xchg
out
xor
push
inc
adc
faddp
or
mov
sbb
mov
push
xor
xlat
js
pop
test
pop
not
addr16
push
out
inc
fadd
push
push
iret
call
push
push
jp
loopne
jl
xor
push
jecxz
hlt
lock
dec
(bad)
cmp
push
pusha
lods
sahf
test
ja
xchg
push
(bad)
xor
push
push
pop
mov
cs
out
cmp
ss
es
jle
jnp
cmp
hlt
push
js
inc
xchg
mov
popf
lock
out
sub
adc
push
test
add
out
mov
div
into
shl
and
test
test
cmps
cmp
lock
xchg
nop
jle
dec
mov
loop
sbb
mov
jno
add
(bad)
clc
jo
loopne
data16
xchg
shl
jge
ja
mov
pop
push
dec
push
loopne
loopne
sub
push
aam
mov
loope
clts
push
js
sub
ds
xor
sbb
push
and
hlt
cmp
outs
mov
add
pusha
into
push
(bad)
pop
mov
jle
cs
cmp
ds
pop
sub
test
mul
xlat
stos
adc
es
cmc
jo
test
add
stc
sahf
inc
sub
pop
mov
sar
(bad)
jle
jbe
push
push
lock
into
inc
jle
aas
inc
pusha
cmc
mov
inc
and
add
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
jl
inc
add
dec
fs
push
bound
arpl
in
mov
pop
sbb
mov
shr
ss
push
fs
mov
neg
imul
ss
js
xor
int3
aas
fidiv
js
mov
ds
fdivr
cmp
ss
fidivr
(bad)
aas
push
data16
ss
mov
pop
jnp
mov
out
jl
lock
sar
neg
imul
aas
xor
push
xor
push
neg
fdivr
sbb
ss
xchg
out
cld
push
in
test
add
loopne
int3
sub
lock
into
push
in
loop
fptan
inc
push
push
mov
out
inc
sbb
jbe
out
in
or
dec
push
je
jo
into
mov
push
jl
iret
repz
sub
cld
mov
pop
shr
rol
adc
mov
out
in
in
enter
call
pop
das
mov
scas
pop
fmul
lock
or
ficomp
push
push
daa
mov
out
mov
add
sbb
repz
pusha
push
je
mov
mov
push
adc
pop
add
fild
pop
add
add
jb
gs
xor
cs
(bad)
(bad)
out
fs
ins
pop
inc
gs
outs
imul
arpl
jae
jb
outs
data16
outs
mov
imul
popa
jo
pop
push
push
push
push
outs
push
mov
bound
xchg
push
pop
dec
dec
outs
push
imul
push
jae
mov
inc
je
push
jne
gs
cmp
jbe
int
daa
inc
ins
outs
inc
sub
loopne
fiadd
push
push
and
jg
outs
xchg
outs
imul
dec
push
outs
ja
xor
and
gs
or
fucomi
popa
ins
gs
dec
inc
mov
adc
fucomip
in
sbb
inc
adc
popa
jb
dec
and
lods
cmp
mov
fs
mov
outs
fs
push
dec
inc
pushf
dec
jb
inc
imul
push
outs
fs
idiv
push
fld
inc
jne
inc
gs
popa
adc
sbb
inc
ins
jo
popa
cs
mov
mov
inc
movs
outs
sub
fild
mov
sub
inc
jb
mov
push
not
inc
js
retf
clc
iret
mov
dec
push
cli
dec
jo
outs
push
je
jne
add
or
daa
mov
in
inc
test
and
je
sub
shl
mov
mov
daa
xchg
inc
fucomp
jmp
dec
dec
inc
dec
push
dec
inc
push
dec
cs
dec
dec
mov
push
or
rcl
xor
xchg
mov
jp
inc
jb
pusha
mov
add
imul
out
popa
(bad)
sbb
dec
push
ja
sbb
push
ins
xor
cwde
sub
mov
jne
cmp
outs
xor
push
mov
push
dec
test
(bad)
jge
push
jo
add
fsubr
adc
ins
sbb
push
push
adc
inc
xchg
add
add
add
jmp
inc
push
or
push
push
sbb
inc
add
dec
add
inc
out
div
std
add
lldt
push
sbb
dec
adc
push
inc
jnp
repnz
ds
add
dec
push
push
pop
out
pop
sti
fiadd
inc
xchg
jae
push
push
es
cs
jnp
inc
sbb
push
dec
or
fdivp
sti
mov
repnz
pop
push
xor
cmp
jnp
dec
xor
or
daa
dec
data16
iret
mov
inc
add
add
add
inc
push
mov
lock
jo
adc
mov
add
inc
push
data16
in
cmp
jle
rol
mov
jns
pusha
aas
pop
add
dec
in
adc
pop
pop
xor
adc
mov
sbb
push
jl
and
jg
adc
(bad)
mov
pop
aas
das
add
ret
repz
add
nop
add
add
jge
add
ins
addr16
or
push
mov
in
lar
rol
rol
mov
nop
fdiv
pop
call
out
push
ficomp
shl
jns
out
jg
add
loopne
mov
clc
add
bound
popf
inc
cld
pop
das
lock
pop
push
ret
pop
pop
xchg
addr16
in
fidivr
lock
xor
js
mov
cmp
mov
jmp
pop
inc
xor
ds
shl
loope
xor
add
push
add
mov
push
or
adc
daa
add
add
add
cmp
sti
or
adc
add
call
push
clc
nop
pop
pop
mov
call
inc
pop
imul
loopne
outs
clc
pop
fimul
mov
inc
or
dec
rcr
xlat
pop
mov
fwait
int
lods
sub
add
inc
jbe
fxch
nop
stos
aas
pop
add
mov
add
pop
cld
pop
pop
xor
ins
dec
in
les
test
cmp
iret
pop
inc
aas
nop
adc
add
pop
add
mov
pop
cld
pop
cmp
and
jle
pop
add
rol
add
sub
das
iret
fwait
int
mov
or
push
sbb
push
sub
push
mov
inc
in
inc
add
lock
popa
inc
xor
sbb
add
cmp
push
push
sbb
aaa
mov
(bad)
mov
push
mov
xor
not
clc
dec
sbb
ss
int
cmp
sbb
or
test
mov
xchg
push
shl
xchg
add
or
inc
add
and
fwait
iret
jmp
pop
mov
push
sbb
or
and
push
pop
pop
aaa
imul
inc
inc
pop
cld
push
clc
pop
daa
scas
popa
stc
aas
push
add
push
rol
xlat
lods
cmp
add
or
test
pop
(bad)
jg
add
mov
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
add
add
je
in
mov
jae
gs
push
push
fs
pop
jnp
push
jbe
and
ins
out
mov
sbb
outs
push
popa
push
imul
dec
add
add
adc
fimul
dec
ja
(bad)
fisub
push
ins
fbld
jns
cmp
std
outs
out
inc
sbb
cmp
push
adc
jo
je
or
fisubr
and
fs
mov
jg
mov
ins
add
lock
bound
jns
push
push
faddp
mov
xor
adc
dec
mov
sbb
arpl
outs
scas
scas
shl
inc
inc
jae
data16
sar
mov
dec
sar
jae
jnp
mov
add
cmps
popa
pshufw
sbb
jo
jae
jae
inc
icebp
sti
packsswb
data16
xor
or
add
ja
mov
sbb
cmp
jb
imul
or
mov
aaa
ss
mov
fiadd
arpl
arpl
mov
push
sbb
ss
subps
sub
add
iret
inc
lock
rcr
add
outs
add
inc
add
sub
pop
cmp
sub
cmp
pop
rol
pop
scas
addr16
sbb
popa
adc
lds
add
rep
fiadd
add
and
dec
stos
bound
(bad)
mov
add
and
push
out
(bad)
out
jge
jnp
es
outs
ja
imul
push
popa
shl
fild
jo
arpl
addr16
cmp
fucomp
outs
imul
add
pop
jmp
xor
add
arpl
dec
sub
and
ja
push
sbb
fwait
ret
arpl
ins
adc
push
add
xchg
add
aaa
imul
adc
add
sub
jno
dec
xchg
ret
add
bound
xchg
add
xlat
arpl
gs
or
and
or
or
pop
and
cmp
adc
retf
je
outs
inc
popa
inc
sbb
outs
(bad)
add
push
sbb
sti
outs
and
sub
adc
add
test
aaa
data16
mov
push
mov
xchg
imul
push
push
adc
dec
mov
popa
scas
xlat
popa
loop
inc
movsx
cmp
addr16
jb
push
test
(bad)
pop
push
dec
mov
sbb
shr
add
add
and
cmp
inc
fcomp
ja
xlat
mov
mov
aas
das
pop
mov
dec
add
daa
inc
mov
adc
bound
cmp
dec
mov
ficom
outs
pop
fadd
mov
imul
shl
ins
add
sbb
sbb
ins
adc
aaa
adc
imul
sub
add
xchg
jae
dec
ja
pop
push
mov
cmp
add
jo
add
pop
addr16
imul
je
jae
ret
or
out
mov
jbe
test
dec
jo
fild
ins
adc
jae
inc
add
xchg
pop
or
mov
data16
ins
(bad)
rcl
(bad)
rcr
push
add
inc
ret
dec
xchg
mov
out
add
xchg
add
inc
push
ss
add
xlat
mov
sub
dec
ja
inc
adc
inc
inc
add
mov
arpl
scas
push
or
jb
rol
jg
invd
mov
imul
adc
out
add
aas
pop
cli
lds
(bad)
arpl
outs
add
push
fsub
xchg
arpl
dec
call
jmp
jmp
stos
(bad)
rcl
lock
xchg
jae
imul
jo
push
lock
push
aas
inc
mov
adc
push
add
xchg
add
mov
test
pop
jmp
pop
adc
ja
scas
ins
add
mov
add
outs
daa
sbb
ret
mov
test
xor
xor
push
(bad)
push
iret
add
es
aad
mov
ret
lahf
inc
inc
and
retf
(bad)
ret
gs
xor
pop
shr
mov
mov
cmp
bound
jns
mov
shl
jo
push
fstp
add
push
jo
ret
shr
sar
xadd
ja
scas
adc
dec
mov
dec
push
mov
or
add
xor
pop
push
adc
inc
push
test
jmp
add
les
test
mov
add
(bad)
and
mov
cmp
arpl
mov
and
sub
arpl
mov
add
sub
jns
xchg
push
popa
add
adc
xor
popa
arpl
arpl
and
cmps
fcomip
or
inc
adc
scas
in
scas
add
addr16
dec
int3
call
jne
jo
push
sbb
pop
lock
push
add
mov
arpl
push
pop
stos
cmps
pusha
jmp
xchg
or
add
pop
or
cmc
jp
lahf
inc
jo
sbb
scas
push
push
dec
add
mov
push
outs
bound
imul
push
inc
add
xchg
and
mov
mov
xor
mov
sub
(bad)
pop
daa
push
cmp
je
adc
sub
jo
sub
add
push
gs
cli
dec
call
xlat
ins
xor
sub
mov
and
gs
inc
int
jae
fs
pop
mov
pop
sbb
call
mov
xor
js
jne
ins
sub
div
add
mov
(bad)
and
pusha
sbb
shl
data16
aas
push
add
pop
add
sub
inc
jg
add
bound
push
clc
jp
inc
popa
fist
sbb
jno
and
dec
loope
cwde
sub
(bad)
bound
adc
xchg
or
adc
inc
sbb
mov
bound
adc
stos
nop
imul
nop
jmp
loop
cmps
or
xchg
dec
cmps
aaa
push
push
iret
cmp
add
jo
mov
and
dec
mov
bound
or
jmp
sbb
inc
or
outs
mov
popa
mov
repz
or
ins
ror
aaa
xlat
dec
shr
fistp
iret
add
add
push
imul
add
repz
mov
jecxz
arpl
xor
test
pop
or
mov
popf
inc
xlat
jmp
imul
outs
pop
adc
cmps
mov
and
add
push
dec
mov
jne
add
pop
add
call
mov
loopne
push
and
inc
fwait
inc
xor
sbb
cmp
and
pusha
and
inc
es
or
call
test
add
jmp
popa
jg
add
push
iret
das
mov
dec
mov
xchg
dec
sub
imul
js
inc
xor
add
rcl
or
arpl
(bad)
add
dec
repz
je
ret
pop
ja
xlat
sub
xchg
arpl
sti
outs
and
test
stos
aaa
cmp
add
iret
jmp
inc
arpl
repz
gs
add
xor
pop
das
iret
or
test
add
je
or
or
ins
add
xor
cmp
dec
jb
ins
out
sti
inc
mov
bound
les
inc
push
lds
pop
inc
pop
addr16
outs
test
mov
mov
pop
aaa
jae
and
push
test
daa
aas
ins
jne
sub
pop
sub
adc
cwde
jae
arpl
dec
adc
popa
dec
shl
sbb
addr16
push
ins
adc
or
push
add
dec
adc
mov
push
out
or
or
adc
and
aam
cmp
inc
mov
add
add
and
add
arpl
mov
add
aam
je
push
add
cmps
jecxz
jne
stos
cmp
push
arpl
and
(bad)
(bad)
jne
outs
add
aaa
pop
push
xchg
sar
push
mov
ins
repz
in
adc
mov
cmp
push
popa
mov
ins
and
inc
add
outs
add
add
or
jbe
mov
inc
xchg
xchg
rol
arpl
add
push
or
xor
fist
bound
(bad)
outs
fistp
inc
or
cmp
imul
imul
adc
(bad)
pushf
add
or
mov
mov
(bad)
(bad)
jne
adc
(bad)
lahf
lods
ret
sti
xchg
vphaddw
and
mov
sub
and
inc
or
add
jb
sub
popa
inc
mov
or
ret
sbb
retf
jb
mov
push
lods
cmps
mov
in
or
mov
imul
jmp
add
jae
sar
cmp
or
jnp
retf
inc
add
pop
jo
movs
push
jle
imul
mov
add
retf
aas
xlat
test
mov
add
add
add
pop
push
adc
sub
or
pop
push
lock
stos
jo
push
in
push
cmps
daa
push
jecxz
pop
adc
push
pop
outs
push
outs
and
add
adc
out
ror
jno
add
xchg
adc
test
add
test
aad
sbb
test
mov
sub
and
mov
adc
retf
repz
sub
fs
les
mov
data16
mov
arpl
(bad)
ds
scas
jne
je
retf
sbb
sbb
xchg
(bad)
loop
pop
push
aaa
sbb
setle
and
or
nop
sti
pop
add
jae
faddp
push
and
add
sub
popa
and
xor
(bad)
pop
add
xchg
pop
mov
xlat
aaa
imul
sub
mov
imul
inc
mov
jae
dec
mov
pop
scas
mov
jno
aas
jne
outs
add
addr16
xchg
dec
fadd
jb
mul
adc
inc
scas
data16
add
add
gs
push
mov
jae
ret
mov
and
push
mov
lea
shr
pop
pusha
push
xlat
jmp
ins
mov
jmp
hlt
shr
outs
dec
rcl
add
inc
popf
fwait
inc
sub
xor
push
(bad)
bound
arpl
xor
mov
pop
dec
or
lahf
add
pop
mov
or
or
dec
imul
mov
fild
vmread
inc
inc
ret
daa
add
add
das
mov
ficom
imul
and
mov
outs
push
add
cmp
cli
jbe
add
jo
jo
sbb
add
lahf
pop
jbe
xor
and
pop
or
imul
out
dec
add
dec
mov
adc
adc
add
jno
cmps
fwait
and
pop
mov
add
in
push
fwait
popa
mov
adc
ret
adc
loopne
push
stos
outs
add
push
mov
test
aad
mov
popa
data16
sub
or
imul
pusha
in
adc
fs
push
mov
mov
or
and
and
inc
sbb
jg
loop
aad
aaa
popf
scas
adc
nop
mov
and
lea
imul
add
add
ins
aas
adc
test
mov
mov
pop
arpl
je
mov
add
call
or
xchg
push
pusha
(bad)
push
sbb
mov
add
lea
inc
popa
add
push
stos
pusha
adc
ja
pop
inc
inc
(bad)
sub
mov
mov
sub
jmp
iret
jmp
mov
mov
mov
sti
jg
sbb
ins
aas
sbb
dec
test
rol
das
pop
mov
popa
stos
or
mov
mov
imul
iret
mov
mov
mov
xor
push
aas
push
push
shl
popa
xlat
bound
popa
and
fucomi
adc
xchg
pop
sti
and
sub
mov
pop
adc
je
and
stos
imul
or
xor
aaa
(bad)
test
int3
out
lods
sbb
adc
andnps
or
or
and
iret
and
cmp
cmps
test
mov
mov
shl
push
mov
mov
xor
jmp
sbb
inc
aad
out
fs
daa
fwait
outs
popa
mov
inc
add
dec
pop
ret
push
(bad)
popa
add
and
mov
xor
je
je
inc
mov
pop
adc
pop
push
xchg
arpl
outs
add
(bad)
or
outs
outs
outs
and
pop
shr
orps
(bad)
mov
repz
lods
add
arpl
clts
lods
fimul
scas
aaa
dec
or
outs
scas
add
mov
add
dec
mov
and
push
mov
rcr
add
fwait
xchg
jbe
rcl
pop
adc
jp
mov
jno
xchg
addr16
test
out
rcpps
dec
lds
mov
bound
push
dec
xor
outs
and
xlat
imul
das
jo
scas
cmp
jb
(bad)
sbb
jmp
push
or
sub
cmp
pop
sub
push
loopne
daa
dec
stos
pop
test
add
aad
add
add
jmp
popa
mov
imul
sbb
add
jo
ins
xor
inc
mov
mov
jl
inc
inc
test
lods
popa
shl
iret
ja
gs
cs
adc
jae
bound
or
mov
ds
push
int3
dec
jo
xor
pop
adc
cmp
add
add
pop
sbb
imul
addr16
add
add
add
test
retf
sti
sbb
dec
in
mov
inc
inc
add
adc
or
sbb
pop
(bad)
sub
push
pop
jo
mov
inc
test
outs
fild
pop
jno
pop
jnp
sbb
and
add
dec
arpl
cmp
inc
cdq
out
inc
add
idiv
adc
icebp
inc
daa
xor
or
sub
test
ins
xchg
cmps
(bad)
or
inc
iret
ins
sub
mov
sbb
fbld
xchg
adc
sbb
jno
mov
sub
add
(bad)
xor
xor
sbb
pop
push
ins
les
sti
mov
in
loop
inc
jp
xor
shr
xor
xor
movs
fld
ja
add
pop
(bad)
jg
inc
inc
adc
pop
(bad)
arpl
push
dec
xchg
mov
ja
adc
sub
test
sub
and
push
sbb
xlat
mov
mov
rol
and
cmp
sub
push
jae
add
inc
iret
fs
mov
sub
cmp
adc
xor
outs
out
pop
test
imul
pop
xchg
or
je
gs
cmp
dec
and
imul
ret
jne
push
sbb
jmp
popa
add
test
dec
(bad)
out
daa
adc
adc
inc
mov
outs
mov
mov
lock
xchg
je
xor
and
sbb
ror
out
mov
add
imul
push
inc
loopne
inc
adc
test
stos
add
arpl
jp
mov
adc
outs
pop
sub
jae
add
shr
nop
and
inc
add
test
call
(bad)
imul
sbb
stos
loopne
ror
adc
push
mov
push
pop
mov
push
in
mov
jmp
push
ret
push
add
pop
xchg
outs
dec
mov
mov
push
or
adc
jg
add
mov
loope
xlat
neg
outs
xchg
data16
sbb
push
scas
lahf
cmp
xchg
mov
mov
mov
xor
outs
jnp
push
fadd
xor
xlat
call
adc
mov
movs
adc
dec
je
imul
pop
mov
xor
pop
cmp
fild
jae
outs
sbb
(bad)
xchg
ret
ret
jecxz
adc
imul
push
add
push
je
cmps
add
jns
xor
or
cmp
pop
pushf
or
mov
add
inc
outs
push
or
scas
(bad)
je
jmp
or
bound
sub
daa
add
inc
mov
inc
pop
inc
popa
inc
aaa
ja
iret
cli
loopne
pushf
jae
push
add
jno
and
out
pop
jno
cmp
or
or
lods
xlat
mov
lock
sub
push
add
repz
into
inc
push
add
xor
inc
adc
inc
push
push
mov
mov
mov
sbb
xor
jo
out
sub
add
into
test
jp
adc
add
ss
pusha
test
mov
sbb
jae
xor
stos
dec
shl
sbb
jl
dec
arpl
add
sbb
cmps
pop
adc
fbstp
mov
jae
outs
jmp
push
cmp
add
shr
mov
adc
inc
inc
sbb
into
inc
outs
xchg
jecxz
daa
aaa
add
addr16
imul
jns
mov
fwait
mov
mov
jecxz
push
and
cmp
xor
mov
pop
and
repz
add
scas
(bad)
or
lahf
cmp
test
jae
arpl
in
xor
aas
xor
dec
iret
push
out
dec
add
xor
jo
popa
inc
daa
rcl
aam
and
cmps
or
adc
push
retf
jg
pop
inc
mov
sbb
loopne
push
sbb
xchg
aam
xchg
into
mul
or
or
gs
mov
and
inc
or
daa
jbe
retf
addr16
or
adc
push
add
and
mov
pop
pop
inc
add
pop
adc
push
cmp
pop
mov
push
pop
sub
push
push
push
js
push
xor
ss
inc
sub
adc
ja
addr16
punpckhwd
adc
mov
sub
popa
xchg
adc
sbb
punpcklbw
sub
add
pop
inc
fwait
mov
add
xchg
mov
aaa
push
add
and
sub
pop
imul
xchg
neg
sub
push
and
test
jno
ror
rol
dec
call
pop
add
xchg
or
iret
cmp
jge
sub
adc
adc
pusha
mov
inc
push
pop
addr16
sbb
aaa
mov
inc
or
cmps
push
cmovnp
pop
xor
xor
sbb
dec
fist
adc
imul
inc
sbb
fisttp
jl
inc
test
sbb
lea
xlat
mov
out
mov
inc
or
add
add
lods
(bad)
test
jmp
and
xchg
mov
dec
sbb
adc
mov
and
inc
(bad)
inc
pushf
cmp
add
mov
mov
or
cmc
add
xchg
outs
add
mov
sub
push
ret
xor
inc
add
inc
adc
outs
call
push
push
jae
sub
inc
inc
pop
mov
xlat
mov
movs
iret
pop
add
ja
aas
fwait
and
imul
and
mov
ds
stos
gs
aam
ins
push
sar
jmp
push
mov
cmovno
cmps
je
sbb
dec
(bad)
jb
xor
lods
add
adc
aas
mov
outs
pusha
push
cmp
je
scas
or
sub
pop
push
add
pop
mov
retf
pop
jae
push
pop
mov
call
xchg
dec
aaa
inc
shl
inc
pop
xchg
xor
inc
frstor
das
or
add
mov
addr16
pop
adc
outs
and
mov
shl
ins
add
dec
sbb
add
sub
and
jae
or
cmps
jg
xor
bndldx
dec
aas
xchg
add
lea
inc
jp
push
adc
psubsw
movs
mov
aas
fs
jo
push
retf
cs
bound
mov
gs
popf
ret
jae
nop
ins
jnp
pop
and
rcr
xchg
(bad)
retf
(bad)
stos
and
or
adc
mov
adc
mov
sbb
inc
jo
shr
xor
xchg
pop
mov
adc
(bad)
or
jg
rol
push
jmp
enter
jbe
cmps
je
pop
fdivr
inc
ja
mov
jae
xor
mov
dec
fadd
xor
dec
pop
sub
sub
pop
adc
jno
mov
or
xor
scas
push
xor
jg
adc
and
rcl
inc
mov
inc
ret
mov
add
(bad)
mov
mov
xor
icebp
xchg
push
push
add
adc
mov
les
push
aas
imul
pusha
aaa
pop
add
(bad)
dec
(bad)
aas
inc
jmp
fadd
mov
jae
das
(bad)
mov
add
shl
sbb
push
xchg
out
pusha
mov
retf
mov
shl
test
(bad)
imul
dec
mov
adc
inc
lods
lds
xchg
pop
ror
cmps
out
iret
jb
and
add
adc
inc
add
test
mov
add
mov
daa
(bad)
cmp
das
sti
or
push
pop
ffree
dec
add
push
add
mov
sbb
inc
or
xchg
xchg
fist
or
arpl
mov
add
jae
mov
loopne
add
cmps
sub
xor
bound
and
and
add
sub
sbb
ss
out
jmp
and
arpl
sub
pusha
aas
dec
je
sbb
shr
inc
inc
pop
(bad)
lods
dec
pop
and
and
push
out
loope
mov
pop
jb
jecxz
pop
sub
sub
lea
sbb
cmp
cmps
stos
inc
js
dec
or
sub
fwait
and
ret
push
mov
inc
cmps
out
dec
xchg
pusha
cmps
jnp
or
adc
sub
push
sbb
xor
sbb
pop
cs
jbe
add
sbb
cs
scas
mov
cmp
xor
das
fwait
aad
cmp
add
add
add
rcl
add
aas
or
xor
add
jg
adc
pop
dec
or
call
les
inc
add
(bad)
push
bound
cmp
popa
xor
addr16
stos
scas
popa
add
add
or
dec
stos
popa
xchg
push
adc
sbb
inc
outs
add
xlat
outs
loope
sbb
aam
sbb
bound
add
mov
jo
cmps
xor
out
inc
add
sbb
ins
inc
mov
cs
(bad)
and
pop
mov
jmp
xlat
arpl
cs
test
sbb
pop
ror
or
push
arpl
shl
push
scas
and
neg
daa
and
ins
mov
jp
fild
pop
jns
popa
add
retf
arpl
mov
mov
and
aas
jecxz
xor
sub
dec
jb
je
xor
push
jae
sub
vmwrite
mov
pop
or
or
mul
fs
out
test
punpckhwd
mov
(bad)
pop
pop
pop
xor
inc
xor
rol
popa
rol
push
mov
es
xchg
xchg
dec
add
adc
sbb
add
xor
mov
mov
adc
jo
dec
inc
call
sub
bound
dec
push
mov
pop
add
sub
add
pop
push
adc
xor
xchg
push
jo
xchg
lds
adc
or
scas
(bad)
push
mov
(bad)
movs
adc
push
mov
inc
aad
pop
inc
hlt
(bad)
test
and
iret
outs
push
add
retf
push
ja
adc
add
rol
pop
inc
out
pusha
nop
(bad)
loope
mov
out
or
or
rol
pop
cmps
add
push
inc
mov
pop
push
push
arpl
push
pop
in
jae
arpl
cmp
fild
add
scas
dec
repz
or
or
push
sbb
test
mov
mov
mov
sbb
and
pop
cwde
adc
(bad)
mov
or
arpl
mov
dec
jne
xor
loopne
mov
jne
add
jae
bound
pop
(bad)
(bad)
in
push
xchg
in
mov
cmp
(bad)
push
imul
sub
outs
test
cmp
imul
xor
mov
rol
or
push
loop
dec
fistp
add
outs
xchg
pusha
xor
add
test
push
inc
xchg
cmp
push
mov
test
xor
(bad)
pop
jbe
cs
jmp
mov
push
outs
daa
xor
pop
push
add
sbb
adc
outs
inc
ror
fmul
scas
retf
dec
aaa
jnp
test
inc
mov
inc
and
push
or
or
pop
jae
int
sbb
(bad)
cmp
inc
sub
mov
retf
adc
push
adc
sbb
sbb
fwait
and
inc
popa
or
pop
pop
lock
arpl
xchg
pop
and
shr
sub
mov
or
push
and
pop
mov
movs
or
mov
xchg
out
push
xor
jae
xor
mov
xchg
inc
out
shl
jecxz
psllq
jp
ror
mov
inc
ror
rcl
inc
ret
add
adc
add
mov
ret
xor
shr
es
aad
mov
xchg
pop
xlat
popa
and
xor
pusha
push
add
ja
or
out
aaa
imul
stos
xor
and
mov
dec
pusha
mov
pop
xchg
mov
sbb
inc
add
adc
push
cmps
test
dec
fisttp
and
in
cwde
dec
push
sbb
and
bound
adc
adc
inc
stos
pop
pop
jno
pop
not
or
mov
and
and
pusha
xor
jae
(bad)
fcmovb
inc
daa
sub
jno
sbb
cvttps2pi
pop
adc
sbb
test
push
sub
iret
ret
inc
dec
imul
push
loope
(bad)
inc
xchg
imul
fisttp
ds
and
dec
test
mov
aas
xchg
mov
pop
(bad)
mov
test
sub
lahf
and
and
jg
jp
and
dec
addr16
pop
mov
xchg
mov
cmp
jmp
test
iret
pop
arpl
xlat
jnp
arpl
adc
test
rol
lods
ret
add
and
jb
(bad)
mov
jae
xor
and
repz
xor
xchg
jmp
mov
movs
or
sar
mov
or
cmps
imul
scas
cmps
nop
test
out
es
add
and
or
test
mov
and
out
jb
sub
adc
xchg
adc
jo
sub
ror
xor
ins
xchg
aaa
rdpmc
sub
xchg
imul
sar
ret
mov
stos
cli
inc
adc
push
sbb
jmp
fwait
jo
xchg
mov
jae
pop
adc
loop
add
push
(bad)
add
adc
mov
jecxz
or
adc
aaa
add
adc
jnp
and
test
and
push
adc
sbb
mov
jae
and
jnp
mov
sub
jae
sbb
dec
mov
jmp
test
imul
cmps
push
push
pusha
cmovle
jne
xor
add
stos
sbb
pop
add
dec
add
xor
mov
pop
in
pop
fwait
imul
pop
or
je
sbb
les
xchg
je
xor
adc
cli
and
inc
test
mov
and
inc
push
ret
stos
repz
inc
stos
pop
push
inc
sub
sub
mov
or
popa
cmp
sbb
rol
pop
add
and
adc
ins
loopne
push
add
dec
add
xor
inc
test
mov
xchg
or
and
push
jae
fwait
rcr
call
jg
sbb
push
cmps
push
jnp
aaa
pop
ret
or
sbb
pop
xor
cwde
add
sbb
dec
jns
daa
arpl
stos
pop
inc
stos
dec
fisttp
jo
and
push
pop
push
cmp
or
ins
and
and
pusha
ror
sbb
sub
and
pusha
add
aaa
loop
add
jmp
and
aaa
and
aad
mov
cmp
jae
push
cmps
and
inc
xor
inc
mov
add
shl
arpl
lds
mov
test
outs
(bad)
xchg
sub
xor
jae
xor
retf
inc
gs
sub
mov
adc
jmp
out
add
mov
jnp
mov
add
mov
ror
jae
sbb
shl
xchg
sbb
and
push
in
stos
test
das
push
fcmovb
push
sub
jmp
mov
aaa
test
push
jecxz
mov
arpl
add
adc
xlat
das
jb
sar
add
sub
lahf
lea
call
push
mov
push
sub
cmps
scas
xor
mov
popa
stos
pop
cs
or
fs
mov
imul
adc
repz
pop
and
(bad)
pusha
mov
test
or
call
out
enter
add
and
add
push
pop
or
xchg
xor
add
add
jne
push
dec
daa
push
inc
mov
cli
es
es
add
ins
loopne
and
inc
ja
mov
add
mov
push
add
je
(bad)
addr16
jo
inc
add
outs
add
sbb
pop
jmp
jae
add
sti
inc
add
push
add
ret
out
add
ja
scas
add
push
push
into
jb
fisttp
inc
stos
ins
push
inc
add
or
or
pop
push
pusha
outs
or
imul
jecxz
sti
jg
adc
xlat
push
push
arpl
add
xor
xor
add
push
iret
or
push
aaa
addr16
adc
daa
lods
mov
nop
dec
out
inc
or
lods
mov
sub
inc
inc
mov
add
inc
adc
lldt
pop
and
popa
jno
shl
pusha
movs
pop
in
adc
xlat
adc
(bad)
retf
ja
scas
push
inc
or
movs
bound
pop
adc
bound
and
sbb
fisttp
retf
addr16
cs
imul
add
(bad)
or
push
xchg
adc
arpl
fstp
shl
clc
pop
mov
add
and
add
std
repz
das
xlat
xor
jmp
push
cmpps
getsec
inc
lods
cmp
sbb
mov
adc
ret
(bad)
xor
push
idiv
ret
mov
aaa
imul
sub
inc
stos
rol
imul
pop
or
rcr
mov
pop
xchg
adc
popa
sti
jno
mov
dec
aaa
xor
sub
adc
cwde
pop
xlat
push
xor
add
nop
push
iret
inc
aam
mov
(bad)
dec
das
jae
je
test
add
inc
xchg
sub
sbb
adc
ja
and
sbb
stos
int
sub
pop
pop
inc
and
call
add
mov
jnp
ret
pop
out
add
rcr
sub
stos
adc
cwde
mov
mov
push
dec
outs
dec
jecxz
sahf
outs
rcl
add
mov
ins
xchg
pop
sub
mov
(bad)
nop
sub
sub
jae
add
rol
pop
cmps
jnp
and
inc
mov
inc
cmp
pop
aas
add
dec
shl
xchg
out
cmp
add
movd
mov
(bad)
jae
sbb
or
retf
push
jbe
arpl
inc
mov
movs
and
out
sbb
stos
mov
scas
push
pop
pushf
jo
mov
dec
or
(bad)
dec
out
and
imul
push
add
mov
pop
jo
(bad)
inc
add
sub
sti
fwait
xadd
mov
add
inc
add
xchg
push
add
inc
fdiv
ret
mov
inc
sbb
xor
sub
imul
lea
add
mov
xchg
add
add
mov
or
addr16
ins
gs
add
or
repz
adc
push
ret
add
sbb
dec
xchg
mov
xor
inc
fild
pop
pop
out
adc
dec
cwde
adc
dec
rcl
xlat
test
scas
pop
or
mov
scas
cmp
or
and
imul
xchg
and
adc
dec
add
inc
or
dec
and
aas
mov
cmp
sbb
inc
dec
jbe
js
mov
adc
push
jae
mov
cmp
or
test
pop
add
sub
shl
sub
sub
pop
daa
push
xor
jmp
and
fdiv
xor
cmp
shl
add
(bad)
ja
psubusb
cmp
xor
cmp
push
sub
les
sub
mov
cmp
push
add
(bad)
or
scas
adc
std
or
mov
cmp
or
aaa
add
ja
sbb
pop
aas
add
cs
push
xor
add
rcl
stos
mov
jb
dec
push
xor
mov
ja
push
push
dec
addr16
mov
sbb
das
shr
mov
arpl
rcl
scas
lahf
popa
mov
ret
imul
popa
add
(bad)
lds
cs
popa
shl
jg
popa
push
aas
sbb
add
sbb
adc
push
xchg
add
dec
es
push
push
loop
add
imul
cmps
push
and
(bad)
dec
or
and
(bad)
aaa
ror
and
sub
sti
pop
push
push
inc
test
xchg
xor
and
xor
test
test
jmp
add
pop
pop
jo
pop
stos
pop
xchg
and
jae
cmp
lea
aas
aas
adc
inc
adc
cmps
mov
pop
and
add
aam
aas
adc
add
xlat
xchg
ret
loopne
sub
retf
push
sub
aaa
fs
mov
sub
add
adc
inc
push
push
sbb
sbb
aaa
xor
xchg
(bad)
and
ins
add
mov
inc
sbb
pop
(bad)
fisubr
mov
imul
push
fisub
ja
pop
mov
sbb
sub
retf
sbb
inc
or
and
popa
inc
inc
mov
xchg
aam
jb
inc
xor
or
xor
movs
mov
sub
jnp
mov
mov
add
nop
jo
daa
jb
add
xor
fwait
xor
(bad)
pusha
push
add
and
and
pusha
aam
stos
xlat
inc
sbb
(bad)
sub
pop
add
adc
jecxz
lods
call
mov
fdivr
sbb
imul
add
and
inc
mov
pop
inc
push
dec
addr16
jbe
pop
mov
shl
inc
xchg
popa
je
and
aaa
outs
add
adc
add
adc
inc
mov
daa
jmp
and
adc
(bad)
push
add
jbe
mov
(bad)
and
xor
out
mov
add
sub
arpl
mov
jo
inc
mov
jae
dec
or
push
add
jecxz
add
and
mov
add
mov
add
out
out
or
aad
outs
pop
and
aaa
call
pop
sbb
xor
adc
xchg
xchg
stos
inc
fcomi
sbb
mov
sbb
add
mov
mov
sbb
jae
push
inc
add
inc
mov
pop
icebp
aaa
xchg
add
imul
rol
(bad)
and
shl
xor
xchg
jns
jnp
ja
addr16
mov
sub
and
scas
inc
popa
(bad)
ret
mov
inc
mov
retf
cwde
je
sbb
xchg
and
adc
cmps
arpl
cmps
aas
sbb
retf
jo
push
das
out
add
fcom
add
inc
dec
add
loopne
fmul
push
push
mov
push
aaa
or
sbb
ins
sbb
outs
stos
nop
push
mov
pop
mov
push
retf
push
mov
jecxz
mov
mov
mov
xor
xor
sbb
or
or
add
repz
fwait
xchg
or
bound
ss
inc
lods
or
ja
push
test
or
fist
and
pop
(bad)
sub
das
retf
or
push
xchg
cmp
jmp
je
mov
push
add
add
int3
ret
outs
sahf
fisub
add
jnp
add
mov
popa
jae
mov
pop
cmp
add
retf
and
jge
add
popa
je
je
outs
adc
scas
mov
ja
xor
push
sahf
sbb
jbe
dec
cmps
fwait
sbb
iret
add
or
sub
and
nop
xor
pushf
clc
push
push
(bad)
popa
jmp
pop
sbb
loopne
or
(bad)
fcom
and
imul
sbb
sbb
mov
inc
sub
xor
or
xchg
xor
inc
repz
or
daa
loope
add
pop
mov
xlat
mov
(bad)
repnz
imul
add
pusha
adc
mov
data16
sub
push
or
fwait
ret
mov
xchg
icebp
pop
add
or
sbb
jae
daa
or
iret
jae
inc
imul
data16
or
sbb
daa
mov
and
push
jo
stos
adc
mov
aaa
sbb
dec
test
test
inc
lahf
or
jnp
or
inc
fimul
or
adc
jmp
push
push
push
imul
and
es
pop
xor
xchg
add
dec
mov
add
test
sub
ds
ja
add
addr16
loop
enter
pop
pop
add
pop
push
mov
pop
cmp
or
inc
mul
add
pop
xchg
add
inc
pop
pop
imul
add
add
pushf
push
sbb
jnp
mov
push
add
mov
retf
imul
pop
mov
(bad)
mul
dec
xchg
sbb
add
ins
aas
lsl
add
or
jmp
fild
mov
xlat
jne
or
jb
add
sar
mov
pop
jecxz
mov
pop
add
cmp
and
outs
and
inc
jmp
nop
jo
(bad)
adc
adc
pop
xchg
inc
cmp
adc
xlat
call
jae
rcl
adc
mov
push
lahf
shufps
imul
shl
mov
xchg
dec
inc
pop
push
sbb
movs
xlat
mul
outs
inc
add
movs
mov
inc
ret
aas
jmp
xchg
cwde
xor
inc
or
pop
rol
retf
and
jecxz
ja
aaa
ins
inc
ret
or
call
stos
movs
dec
lods
cmp
dec
test
push
add
add
inc
sub
xchg
cmp
push
jne
(bad)
imul
jge
add
add
pop
mov
cmp
inc
push
sub
jo
push
push
arpl
push
mov
jnp
in
add
dec
and
jecxz
adc
and
sbb
inc
lock
jg
enter
xlat
pop
shr
addr16
mov
rcr
pop
dec
adc
je
sub
ja
pop
jmp
xor
add
adc
add
dec
pop
pop
retf
addr16
lahf
mov
je
scas
dec
ins
adc
cmp
mov
jmp
mov
push
(bad)
jmp
test
ja
clc
xor
sbb
ins
adc
pop
inc
pop
or
jae
mov
mov
aaa
sbb
mov
push
adc
push
dec
or
or
test
inc
data16
pop
and
add
jecxz
mov
add
stos
sbb
adc
inc
mov
daa
bound
adc
(bad)
or
and
xchg
and
outs
jo
and
out
xor
jmp
jnp
and
adc
and
je
retf
dec
or
sbb
push
sbb
lods
inc
das
es
data16
adc
xor
and
popa
and
mov
add
inc
mov
jp
add
outs
sbb
jmp
daa
daa
add
or
inc
adc
mov
daa
inc
adc
xchg
hlt
add
dec
xchg
mov
addr16
sub
test
add
mov
mov
sahf
xchg
cmp
(bad)
add
push
popa
add
add
sub
mov
dec
shl
or
(bad)
pop
repz
sbb
mov
jae
xlat
adc
xchg
fisub
and
rol
adc
imul
add
lea
shl
mov
push
and
imul
or
inc
(bad)
jmp
cmp
aaa
mov
pop
fwait
cmp
inc
(bad)
mov
inc
outs
ja
ins
outs
popa
fs
push
push
arpl
popa
jae
(bad)
(bad)
adc
inc
outs
outs
jae
lods
add
outs
imul
adc
adc
ins
imul
jb
sbb
jb
pop
adc
dec
ins
fldcw
mul
imul
fs
jnp
jo
imul
push
push
dec
mov
push
aas
inc
imul
in
mov
inc
dec
gs
jo
je
loopne
push
dec
sahf
loopne
imul
fs
inc
mov
dec
fdiv
stos
sbb
sbb
xchg
div
and
mov
test
lods
loopne
mov
sbb
inc
leave
and
je
ins
bound
add
btc
cli
inc
inc
js
xor
jb
cld
sbb
arpl
sbb
inc
push
jae
push
(bad)
adc
ins
pop
sbb
sbb
lods
sub
aaa
sub
gs
mov
mov
sbb
ins
fdiv
sbb
call
and
dec
nop
(bad)
mov
and
add
mov
pop
fsubr
gs
push
lods
and
xchg
push
inc
dec
jnp
and
push
sbb
inc
push
pop
mov
inc
ins
add
inc
mov
cmp
mov
add
ins
or
mov
arpl
int
lahf
outs
arpl
push
js
pop
fcmovnu
and
outs
outs
adc
arpl
push
adc
mov
in
push
mov
jae
ins
ins
xchg
sbb
(bad)
or
dec
jo
jo
pop
sbb
sbb
jae
arpl
and
push
outs
test
(bad)
or
xor
inc
xor
mov
ins
lods
call
loopne
bound
call
ficom
lea
gs
(bad)
mov
sub
ja
jmp
imul
ins
sbb
add
mov
outs
dec
cld
adc
popaw
dec
xor
mov
mov
int3
sub
pop
and
cwde
popf
inc
sbb
push
xor
in
imul
fs
and
emms
mov
ds
adc
sbb
stos
outs
xor
sar
scas
or
pop
iret
stos
jge
jo
cld
movs
sbb
loopne
push
imul
or
sbb
mov
mov
popf
ins
ins
lods
jnp
inc
jnp
and
mov
bound
push
xchg
xor
lahf
add
pop
jle
or
sbb
xchg
shl
jne
gs
jne
jae
sbb
cmp
inc
test
fwait
mov
or
stos
ror
lds
test
ins
movs
mov
imul
stos
shl
jmp
xchg
popf
test
outs
inc
cmp
inc
hlt
inc
push
add
xchg
bound
push
cmp
lds
fcmovbe
mov
lahf
pop
mov
adc
push
xor
sbb
pop
inc
inc
je
inc
push
cld
popf
scas
idiv
fs
push
push
push
push
mov
rcr
sbb
cmp
mov
call
bound
adc
inc
fidivr
sub
popa
ins
push
inc
dec
sbb
adc
mov
mov
xchg
jle
add
or
loopne
jo
adc
inc
add
sbb
sub
xor
and
jne
cmps
jae
jo
adc
inc
adc
ins
cwde
mov
push
movs
retf
pop
inc
push
inc
add
mov
ret
enter
mov
pop
jbe
es
inc
push
popa
inc
fwait
dec
popa
mov
cmp
dec
pushaw
shl
xor
stos
inc
jmp
dec
lock
js
add
call
push
(bad)
xchg
adc
adc
clc
stos
or
pop
outs
cdq
and
sbb
ins
jns
inc
inc
sbb
xor
shr
inc
shl
fcom
gs
jnp
mov
shr
and
add
xor
jb
jae
(bad)
lock
jl
cmp
shr
(bad)
inc
jg
sbb
inc
sbb
jne
xor
xchg
ins
imul
fs
pop
mov
rol
addr16
fs
jne
bound
adc
lea
pop
lock
jo
test
sbb
jecxz
outs
stos
mov
sub
inc
fst
test
pop
mov
xor
xor
out
xor
in
push
jne
lds
add
inc
cmp
adc
mov
shl
xchg
dec
icebp
adc
push
cld
inc
frstor
push
push
push
dec
jecxz
pusha
fwait
lods
pop
cmp
leave
dec
dec
dec
inc
sbb
xor
dec
or
jb
(bad)
dec
fs
ret
pop
fs
je
mov
sbb
mov
test
imul
rcr
fidivr
sbb
cmps
and
shl
fld
pop
movs
aam
popaw
cs
pop
fwait
push
pop
push
push
div
mov
adc
xor
outs
mov
test
push
movs
loopne
ret
mov
cmc
xchg
pop
inc
ins
je
arpl
xor
sbb
(bad)
gs
vphaddubd
ins
push
ficom
cmps
jae
xlat
add
push
xor
inc
pusha
pop
mov
repnz
pop
das
(bad)
mov
pop
jbe
mov
mov
and
add
xor
shl
test
(bad)
rcr
adc
(bad)
fsubr
add
lock
or
push
sbb
dec
mov
dec
popa
jmp
mov
push
jne
mov
ret
aad
bound
xor
mov
lahf
jo
ss
cli
inc
pop
stos
sub
push
je
push
imul
adc
inc
sbb
jno
xchg
push
gs
mov
in
pop
sub
pop
aas
fstp
inc
scas
inc
inc
mov
test
xor
xor
xor
(bad)
fs
call
mov
add
push
pop
dec
dec
push
cli
sbb
test
pop
jo
sbb
test
mov
push
push
loopne
shl
popa
or
loopne
sub
loop
out
popf
inc
outs
push
cmp
aam
retf
ins
popa
in
ror
rcr
mov
sub
popa
les
push
test
jge
sbb
push
dec
add
jmp
pop
nop
retf
mov
adc
packuswb
ins
dec
pop
and
mov
jno
mov
imul
sub
lods
add
cdq
adc
mov
je
sub
loope
aam
mov
dec
loopne
lods
pop
loopne
sbb
jae
and
(bad)
daa
stc
pop
pop
jge
js
push
push
inc
call
xor
xor
pop
sub
adc
nop
dec
adc
rcl
or
imul
cs
addr16
dec
push
sbb
sub
sub
imul
sub
mov
jo
inc
jbe
ja
mov
mov
inc
nop
jne
fs
addr16
jns
nop
jmp
addr16
ror
ins
outs
cdq
push
xchg
push
gs
add
scas
prefetcht0
push
popa
bound
xor
inc
fwait
inc
shl
ins
add
jne
arpl
cmps
jmp
jne
dec
bound
cmp
mov
fild
mov
mov
sbb
pop
popa
pusha
xor
adc
mov
loop
pop
inc
lds
js
jno
and
mov
addr16
jns
add
push
pop
ins
bound
ds
xor
push
jmp
sbb
push
ds
and
jb
bound
dec
outs
sbb
push
and
jle
jmp
add
dec
fild
loop
pop
push
clts
or
jg
outs
ja
jae
cmpxchg
imul
and
add
popa
cwde
or
test
push
or
sbb
in
add
adc
mov
ss
jbe
push
addr16
call
das
push
popa
gs
adc
movs
or
sbb
adc
dec
call
push
sbb
inc
arpl
xor
push
out
and
sub
sub
fadd
inc
fsubr
sbb
clc
push
jo
jae
xor
jp
mov
loopne
das
xor
(bad)
and
and
xor
and
push
ss
and
xor
jbe
push
bound
shl
push
dec
sar
enter
push
imul
cmp
sti
push
xchg
ins
gs
xor
xchg
xor
xor
xor
xor
jbe
ins
adc
or
and
mov
repz
les
cmp
push
aaa
push
add
clc
cli
(bad)
push
or
push
push
cmp
mov
lock
xchg
adc
push
outs
jo
or
add
adc
cmps
push
xor
pop
test
add
inc
ds
add
arpl
or
xchg
in
push
imul
or
dec
pop
dec
imul
sub
push
sub
(bad)
fnstsw
adc
add
add
add
add
add
add
jbe
inc
js
or
imul
push
jne
add
cmp
shl
inc
je
inc
popa
mov
sbb
xor
js
aam
into
push
push
(bad)
xor
pusha
sbb
xchg
js
push
loop
or
imul
push
or
pop
fstp
scas
inc
dec
mov
inc
push
push
inc
push
or
sbb
stos
jo
pop
and
xchg
add
or
dec
out
add
push
mov
inc
add
sbb
dec
push
inc
jae
pop
push
jo
push
arpl
cmps
repnz
sbb
sub
pop
mov
movs
in
push
cmp
mov
pop
sub
xor
sbb
not
or
inc
push
sbb
push
sub
bound
add
jo
daa
adc
sub
mov
push
gs
aas
mov
add
push
das
push
or
xor
ficomp
xor
push
pop
imul
jmp
(bad)
mov
dec
push
inc
inc
jns
sbb
fdivr
loopne
adc
dec
inc
add
ss
add
dec
add
fstp
add
add
or
push
(bad)
(bad)
in
inc
or
prefetchwt1
adc
femms
adc
sbb
adc
adc
unpckhps
(bad)
fistp
sbb
adc
sbb
sbb
mov
jo
inc
mov
rol
or
or
adc
adc
add
popa
adc
inc
add
or
pop
add
and
add
retf
les
add
pop
add
cmp
add
test
pop
adc
outs
movhps
add
inc
add
add
mov
(bad)
(bad)
inc
add
xor
adc
popa
xchg
adc
xor
mov
rcl
xor
xchg
or
cli
(bad)
(bad)
jmp
inc
push
bound
ret
jae
shl
sbb
inc
push
arpl
and
push
or
int
push
test
add
mov
es
cdq
lock
cmp
or
or
test
adc
and
add
push
adc
idiv
(bad)
lock
and
mov
push
shl
or
adc
pusha
mov
pop
fs
adc
push
add
popf
mov
cdq
inc
mov
pusha
addr16
xor
mov
(bad)
(bad)
dec
pushf
push
sti
in
inc
mov
push
add
add
fisttp
in
dec
mov
or
(bad)
(bad)
(bad)
call
out
dec
sbb
cmps
and
(bad)
inc
adc
fcmovnb
add
call
popf
mov
sbb
fisttp
aam
into
mov
shl
cmps
arpl
mov
clc
bound
mov
inc
data16
lds
push
add
popf
out
in
mov
loope
loope
movs
or
aad
cmp
cmp
sar
(bad)
fild
loopne
ins
or
add
arpl
cli
dec
jb
(bad)
push
push
out
push
mov
or
ja
(bad)
dec
mov
fbstp
or
(bad)
(bad)
(bad)
inc
jbe
pop
cmc
loope
xchg
mov
dec
outs
inc
add
loopne
loope
lock
inc
(bad)
adc
or
mov
mov
aam
loopne
call
outs
lock
mov
jbe
add
sbb
jnp
add
push
push
mov
mov
ds
pop
hlt
dec
in
push
dec
add
mov
xchg
cs
mov
movs
repz
mov
cmps
outs
call
cmc
(bad)
(bad)
push
mov
pop
xchg
add
sbb
sbb
add
ds
sar
call
adc
fcom
mov
retf
fsubr
inc
jg
cmp
jge
in
aaa
mov
aam
out
enter
sbb
xchg
xor
jmp
pop
popf
jne
mov
and
repnz
cmp
sbb
and
cmp
cmp
(bad)
pop
lock
dec
mov
add
sbb
mov
mov
push
inc
sbb
popf
cmp
mov
out
nop
pusha
xor
sub
mov
pop
and
mov
push
test
inc
or
(bad)
fisttp
jp
arpl
jmp
(bad)
mov
imul
inc
or
push
aaa
cmps
jl
(bad)
jg
rol
inc
fcom
out
xchg
fs
dec
lds
pop
pusha
lds
sub
mov
jecxz
inc
jle
sbb
lea
mov
jne
lock
call
pusha
arpl
imul
mov
sbb
sbb
mov
cmc
push
out
cmps
add
inc
aaa
fdiv
setne
bound
jno
hlt
mov
ja
adc
call
jmp
ret
push
loopne
fisttp
loop
inc
(bad)
outs
hlt
jno
dec
movs
xor
mov
and
cmps
add
mov
dec
movs
jp
adc
fdivp
mov
popf
(bad)
push
jb
jnp
fsub
ds
push
push
push
mov
jmp
pop
mov
in
cmps
pushf
outs
test
mov
retf
test
push
xor
xchg
cmp
xchg
fdiv
mov
mov
pop
cld
mov
mul
imul
dec
push
push
inc
(bad)
outs
cmp
popf
push
addr16
shl
add
outs
cli
call
shl
jns
mov
leave
fiadd
(bad)
jecxz
inc
cmps
sbb
cld
and
add
sub
out
loope
sbb
rcl
adc
clc
sbb
(bad)
(bad)
call
sti
test
mov
dec
add
iret
das
or
or
(bad)
mov
xor
jecxz
push
out
inc
or
not
mov
sbb
ret
mov
sub
(bad)
cmp
mov
inc
mov
shl
cld
idiv
pop
imul
cmp
push
sbb
fimul
shr
xor
cmp
dec
ins
jmp
test
sbb
adc
out
adc
gs
mov
mov
mov
push
jl
ja
xchg
ds
inc
gs
rol
call
out
mov
mov
mov
cmp
jbe
mov
adc
je
mov
shl
ja
lds
jbe
mov
retf
push
mov
sub
adc
int
loopne
loop
jle
dec
cli
pop
xor
jmp
(bad)
xchg
std
jb
cld
dec
je
push
jae
add
jne
out
ins
jg
xchg
add
rcr
mov
sub
(bad)
(bad)
(bad)
jl
or
cmp
test
sti
call
xchg
clc
cmps
xor
hlt
jg
fmul
mov
in
in
mov
push
cmc
sub
fild
stc
add
push
mov
aam
push
xchg
cs
clc
lds
jle
jmp
clc
shr
push
out
push
pop
add
sub
push
add
add
xchg
call
jmp
inc
sbb
push
inc
jbe
arpl
xchg
push
mov
cld
(bad)
mov
jns
add
push
sbb
hlt
retf
(bad)
and
fidiv
jo
xchg
in
mov
add
mov
push
rol
data16
sbb
in
(bad)
jge
push
add
iret
(bad)
mov
sbb
sub
adc
inc
cmp
jg
add
or
cmps
pusha
sbb
and
movs
ja
ret
outs
aam
push
add
push
sbb
cmp
mov
(bad)
cmp
push
movs
mov
imul
inc
(bad)
loopne
jo
movs
(bad)
repz
push
in
in
cld
push
jmp
pop
shl
sbb
(bad)
icebp
mov
scas
sbb
in
(bad)
ins
(bad)
add
call
icebp
dec
and
push
dec
sbb
mov
inc
jno
movs
(bad)
call
lea
add
sub
imul
mul
ret
(bad)
call
inc
sbb
imul
pop
or
scas
mov
cdq
ret
xchg
jno
pop
inc
aad
in
into
imul
shl
(bad)
(bad)
(bad)
push
jbe
pop
test
pop
add
in
cwde
dec
dec
cmp
jmp
xchg
mov
push
inc
fidivr
fidiv
into
shl
(bad)
xor
xor
test
and
dec
jno
or
loope
out
push
nop
test
(bad)
shl
adc
inc
adc
dec
mov
mov
minps
fsubr
js
push
(bad)
or
mov
sub
mov
push
xchg
xchg
mov
jmp
mov
xor
pop
mov
mov
call
aam
rcl
add
ret
enter
out
mov
jno
or
pop
fild
pop
mov
inc
(bad)
(bad)
(bad)
jg
mov
stc
ror
ret
adc
inc
out
cmp
movs
push
leave
cdq
xor
xor
clc
(bad)
mov
sub
cmp
fisubr
add
test
popf
sbb
adc
ja
jecxz
mov
fs
pop
add
mov
ds
(bad)
xor
pop
popa
xchg
jmp
sub
or
cmp
call
call
xchg
add
add
imul
mov
lds
cli
cmp
movs
push
jns
cmp
adc
icebp
mov
pop
mov
(bad)
sbb
and
cmp
adc
cmp
loope
mov
popf
inc
mov
jno
add
mov
test
or
add
fistp
mov
push
mov
arpl
sar
(bad)
in
call
add
mov
cmp
or
inc
pop
xchg
retf
movs
rcl
sub
test
stos
push
std
jg
add
sbb
inc
push
jmp
lea
(bad)
pop
fistp
push
fld
test
ret
fild
out
mov
fisttp
sbb
mov
(bad)
jg
call
cwde
cs
jmp
inc
adc
scas
imul
jmp
mov
daa
popa
pop
aam
dec
xor
call
bound
mov
and
(bad)
jmp
mov
jae
pop
cwde
fistp
leave
loop
jo
in
adc
mul
(bad)
dec
sub
out
sbb
stos
mov
dec
xchg
cmp
adc
call
(bad)
dec
aam
sub
or
jno
shr
outs
sti
(bad)
(bad)
dec
jmp
sub
jp
pop
imul
aaa
cmp
push
aam
dec
cmp
(bad)
push
dec
cmp
pop
jbe
jmp
je
jbe
push
mov
out
scas
push
cmp
push
cmp
(bad)
jmp
mov
ins
mov
jmp
mov
iret
in
(bad)
(bad)
inc
into
loope
cmp
(bad)
jo
or
popa
lds
jae
or
(bad)
mov
stos
mov
out
arpl
test
and
jo
pcmpeqd
(bad)
(bad)
jmp
xchg
cs
fs
shl
push
imul
inc
(bad)
or
fidivr
(bad)
(bad)
(bad)
not
ret
jno
cli
jae
xor
into
pop
aam
mov
pop
pop
sub
lods
fdivr
(bad)
(bad)
jmp
movs
mov
stos
dec
mov
dec
xchg
repnz
not
mov
xchg
adc
je
mov
xor
jmp
or
call
dec
or
icebp
(bad)
call
out
push
or
adc
retf
inc
pop
dec
mov
aaa
loop
mov
cld
(bad)
fild
mov
call
scas
pop
pop
daa
mov
mov
(bad)
inc
loop
gs
icebp
(bad)
or
lods
std
sub
dec
mov
push
(bad)
(bad)
(bad)
dec
jmp
and
test
loope
scas
push
loope
mov
movups
test
aam
add
add
outs
in
and
dec
sbb
jno
mov
int3
add
(bad)
cmp
cs
ficomp
cs
mov
std
cmps
jg
and
mov
rep
jecxz
add
add
push
stc
push
(bad)
sub
adc
jl
jge
inc
mov
mov
fbstp
pop
fld
mov
jmp
and
or
mov
addr16
(bad)
xchg
xor
fwait
out
hlt
pop
xor
and
cmp
fsub
pop
hlt
movs
bound
cmp
mov
(bad)
xadd
hlt
outs
sub
jns
cs
movs
fisttp
jmp
fild
fdiv
shl
push
jmp
stos
or
outs
sbb
cmp
test
push
add
cwde
sub
clc
adc
mov
(bad)
popf
adc
adc
ins
mov
rol
(bad)
mov
inc
or
jne
mov
dec
jle
mov
ds
retf
shl
aad
fsub
cmp
(bad)
jg
xor
mov
or
adc
(bad)
xchg
push
cmp
aaa
sbb
sbb
add
(bad)
jp
cmps
add
scas
int3
fisttp
(bad)
dec
pop
jp
hlt
mov
in
push
fsubr
dec
jp
sbb
pop
sbb
jmp
(bad)
jns
jne
jmp
test
and
arpl
(bad)
fild
movs
mov
or
(bad)
and
popa
movs
jl
xor
and
movs
mov
dec
jmp
sub
mov
lahf
stos
inc
ins
xor
dec
inc
mov
lods
in
dec
sbb
jmp
push
in
stc
mov
out
nop
jl
(bad)
(bad)
(bad)
call
icebp
xor
cs
jbe
xor
cmp
not
lahf
sub
inc
hlt
sti
(bad)
(bad)
(bad)
jmp
dec
jbe
lahf
push
imul
xchg
mov
dec
jge
nop
stos
add
cmp
std
xchg
addr16
jmp
test
jp
repz
je
pushf
push
push
loopne
pop
add
data16
mov
lods
sub
(bad)
call
lock
cmps
sbb
sbb
pop
imul
push
push
adc
cmp
or
or
stos
mov
push
sahf
into
rcl
jmp
loop
dec
aad
pop
push
adc
pop
sub
pushf
push
jnp
mov
std
inc
push
mov
cli
data16
scas
(bad)
fcmovnbe
add
cmps
retf
in
cmp
(bad)
(bad)
inc
fimul
les
pop
push
push
xchg
mov
push
fucompp
add
push
xchg
mov
push
push
into
(bad)
(bad)
(bad)
jmp
mov
or
add
sti
add
fs
movs
push
mov
inc
cmp
inc
adc
(bad)
or
xchg
shl
sub
inc
mov
outs
add
add
out
(bad)
(bad)
call
ins
mov
mov
loop
jg
data16
cli
inc
mov
enter
xchg
movs
dec
(bad)
(bad)
(bad)
call
daa
not
retf
fwait
push
retf
lds
mov
dec
arpl
pop
leave
daa
ret
jmp
stos
dec
imul
dec
enter
stos
xchg
and
jno
pusha
jl
jo
in
test
les
(bad)
cmp
sub
cmp
mov
lods
hlt
cmp
ja
cmps
push
ja
adc
push
jp
lods
mov
retf
out
lods
inc
or
out
mov
pop
sub
movs
cli
mov
xor
inc
and
xor
mov
mov
out
and
call
in
mov
mov
push
cmp
push
mov
lods
cmp
inc
mov
add
jp
pop
jns
xchg
dec
mov
dec
pop
add
ins
adc
xor
(bad)
(bad)
call
sub
cmp
cmp
dec
and
add
(bad)
icebp
cmp
cmp
test
mov
inc
pop
std
(bad)
call
and
neg
adc
xlat
fisub
(bad)
sar
push
cld
jmp
xchg
mov
out
sbb
cmps
mov
ds
mov
cmovbe
fcom
clc
(bad)
jmp
enter
mov
cwde
cs
push
leave
and
pusha
out
imul
retf
out
sub
cld
cmp
or
stos
aas
inc
pop
and
leave
lods
(bad)
mov
mov
jmp
(bad)
jg
push
ficomp
sbb
add
aam
mov
inc
mov
jp
(bad)
(bad)
call
and
es
cmps
std
adc
ins
sub
test
scas
pushf
arpl
xchg
adc
jmp
or
fs
pop
icebp
repnz
sub
jo
shr
fcomip
inc
cmp
xchg
xchg
pop
aas
sub
pop
mov
gs
aas
sar
bound
arpl
gs
xchg
rcr
push
movs
and
cmp
push
jmp
call
inc
scas
je
(bad)
je
mov
adc
hlt
loopne
mov
cmc
mov
std
mov
sahf
pop
xchg
cmc
into
adc
test
or
jle
push
cli
add
push
add
pop
add
sub
out
and
push
and
shl
add
push
pop
add
mov
pop
aam
xor
jmp
stos
inc
sbb
int
sub
retf
inc
aaa
jo
into
std
xchg
mov
aas
sar
mov
sub
add
adc
push
pusha
add
(bad)
dec
and
xchg
xor
jne
pop
es
push
add
sahf
int
jb
sub
leave
(bad)
(bad)
(bad)
dec
mov
add
mov
in
stos
mul
pusha
push
in
push
int3
xor
pop
data16
jmp
aam
mov
dec
jo
dec
ins
or
jecxz
xchg
xchg
xchg
push
sub
(bad)
(bad)
jg
jmp
mov
cmc
iret
lods
fdiv
mov
sahf
or
and
xor
cmp
(bad)
(bad)
(bad)
in
or
jmp
mov
pop
xor
add
xlat
adc
jmp
mov
cmp
jmp
sti
pop
dec
jno
nop
sub
retf
(bad)
(bad)
(bad)
(bad)
jnp
xor
int3
bound
jo
mov
pop
not
push
mov
test
and
xlat
call
aas
jne
lds
lods
call
dec
lods
jne
aad
retf
(bad)
xchg
iret
nop
dec
or
imul
lahf
test
imul
(bad)
cmp
cmp
inc
stc
aaa
mov
into
mov
cmps
xor
or
sbb
stc
ret
(bad)
(bad)
(bad)
call
mov
enter
ret
push
aas
or
(bad)
popf
or
xchg
icebp
(bad)
inc
sub
ds
aaa
jno
mov
sbb
sub
shl
fs
xchg
sbb
(bad)
mov
mov
jl
inc
cmp
or
sbb
fstp
cmps
push
inc
(bad)
(bad)
(bad)
call
fcomp
xor
jge
mov
jo
sar
pop
in
inc
or
call
(bad)
(bad)
(bad)
(bad)
fild
stc
push
dec
push
std
es
sti
cmp
repnz
pop
or
popf
xchg
pop
clc
jp
(bad)
(bad)
call
push
pop
movs
xchg
dec
iret
push
sar
inc
aas
les
dec
mov
push
(bad)
xlat
imul
(bad)
push
sbb
(bad)
pop
mov
jl
jns
stos
push
adc
outs
sbb
push
pop
mov
call
push
sbb
sbb
pusha
adc
(bad)
(bad)
jg
and
cmp
and
lods
in
mov
aad
adc
dec
jno
xor
into
adc
dec
gs
(bad)
call
fst
fucomi
xchg
ror
sub
jle
lahf
lods
jne
(bad)
repz
mov
jmp
int
lds
pop
mov
inc
ret
mov
nop
cld
enter
or
(bad)
call
lahf
mov
jbe
scas
stos
push
test
(bad)
(bad)
(bad)
(bad)
js
out
cmp
(bad)
rcr
clc
inc
fs
mov
lods
mov
sub
cmp
sbb
lahf
xchg
mov
(bad)
(bad)
push
movs
cli
sbb
adc
adc
dec
(bad)
xchg
pop
pop
mov
inc
into
nop
das
dec
mov
xchg
lahf
inc
mov
scas
fidiv
pusha
(bad)
lea
add
gs
je
jmp
(bad)
call
xor
jns
scas
inc
push
dec
repnz
fdivr
sub
push
sbb
pushf
(bad)
(bad)
pusha
scas
jmp
fwait
ds
outs
mov
xchg
cmp
push
rol
xchg
test
outs
cmp
sbb
sbb
push
mov
pop
jmp
out
jae
mov
loopne
(bad)
(bad)
(bad)
sti
mov
aam
inc
sbb
frstor
fldcw
nop
jmp
outs
lods
mov
jmp
sub
cmp
xchg
rcr
jno
sub
sbb
and
(bad)
dec
sub
iret
jae
pop
mov
arpl
sub
retf
xor
lods
inc
(bad)
(bad)
push
pop
mov
dec
out
mov
sub
cmps
adc
mov
lahf
mov
cld
int
pop
push
cmp
cmp
push
out
ins
pop
fldcw
fisttp
and
push
pop
aad
sbb
(bad)
lahf
mov
xchg
(bad)
daa
in
pop
jge
jg
(bad)
(bad)
cmp
jmp
les
jp
clc
push
push
out
push
lock
movs
inc
jg
(bad)
jmp
and
xchg
add
adc
xchg
cmp
call
dec
push
xchg
jo
push
fmul
lods
cmp
das
and
mov
retf
arpl
(bad)
(bad)
(bad)
jp
dec
mov
xor
mov
add
lds
icebp
aas
imul
(bad)
call
mov
fcmovnu
cmp
js
add
not
xor
pop
pushf
push
retf
jge
add
xchg
xor
pushf
or
mov
dec
xchg
inc
adc
fs
(bad)
(bad)
push
xchg
sub
xchg
lds
jmp
inc
pushf
cmp
div
mov
(bad)
call
aas
xor
jno
rcl
inc
bound
or
inc
mov
rcr
imul
(bad)
(bad)
cmp
(bad)
addr16
sub
jmp
pop
cwde
fs
jmp
(bad)
(bad)
call
push
adc
scas
adc
adc
cmps
sbb
mov
(bad)
(bad)
(bad)
mov
adc
mov
gs
mov
sub
or
(bad)
sub
cld
jmp
std
hlt
mov
mov
cs
cli
and
adc
jae
mov
xor
(bad)
add
stos
cdq
adc
dec
mov
pop
pop
xchg
cmp
sub
push
adc
xchg
mov
mov
sbb
and
xchg
pop
pop
movs
jbe
test
ficomp
inc
cmp
sub
imul
loop
adc
(bad)
add
(bad)
(bad)
out
into
push
sub
mov
mov
(bad)
nop
cmp
pop
sub
cmp
call
(bad)
inc
outs
mov
sbb
jle
cmp
in
jl
add
sbb
jmp
(bad)
(bad)
jg
hlt
call
test
and
popf
adc
(bad)
cmp
or
xchg
sbb
clc
cmp
and
ret
or
jge
cmp
test
ja
adc
mov
pop
xor
jmp
enter
pop
push
popa
cmps
jo
sbb
not
shl
repz
jmp
(bad)
dec
mov
jmp
sub
pop
shl
jge
aas
dec
daa
jge
movs
jo
inc
mov
test
pop
mov
push
fnstsw
push
(bad)
(bad)
(bad)
dec
and
or
jb
test
mov
retf
mov
aam
dec
(bad)
(bad)
(bad)
jmp
in
xchg
rol
out
in
fldenv
sahf
retf
fsub
or
call
std
inc
test
xchg
jle
jmp
in
fcmovu
lahf
call
call
aam
inc
cmp
push
leave
xor
xchg
ret
xor
(bad)
inc
fcmovu
mov
push
sub
pop
adc
jg
mov
mov
pop
movs
add
(bad)
call
movs
jne
mov
por
retf
cwde
mov
out
jae
(bad)
jg
test
jp
movs
mov
fs
pop
js
fs
div
(bad)
(bad)
inc
sbb
aam
cli
ins
stc
in
and
test
inc
mov
dec
es
(bad)
(bad)
fcomip
ds
or
sub
push
push
fs
inc
pop
(bad)
(bad)
jmp
int
in
pushf
in
jp
iret
sub
les
icebp
out
sbb
push
sub
cmps
iret
pop
out
test
movs
fs
cmps
push
xchg
cmp
and
(bad)
(bad)
call
call
adc
lea
rol
xchg
lea
xchg
inc
test
mov
or
push
popa
movs
cmp
inc
and
or
int
dec
loop
lods
mov
mov
(bad)
(bad)
(bad)
out
mov
push
push
lods
xlat
imul
dec
ins
dec
test
xchg
sbb
push
std
(bad)
jmp
or
int3
inc
mov
pop
movs
test
out
rcl
mov
aaa
shr
fistp
push
sti
or
repnz
or
(bad)
ror
xchg
test
(bad)
(bad)
(bad)
in
test
cmp
into
xchg
(bad)
ins
mov
daa
aad
ins
and
(bad)
jns
pop
mov
(bad)
(bad)
stc
push
scas
push
lods
retf
(bad)
xchg
jb
sbb
sub
jo
adc
(bad)
(bad)
call
fwait
shl
sub
sub
mov
(bad)
jne
test
int
(bad)
(bad)
inc
ror
out
es
(bad)
ss
pop
push
cmovnp
dec
test
mov
rol
fdivr
(bad)
inc
mov
xor
scas
adc
mov
ss
fisubr
dec
mov
arpl
mov
outs
cli
(bad)
call
inc
stos
aad
fadd
xor
les
add
jbe
or
push
cmp
call
repz
aad
in
stos
jnp
mov
jne
lock
movs
jbe
pop
lock
inc
mov
dec
test
std
or
and
xchg
loopne
jne
les
(bad)
(bad)
dec
cmp
pop
mul
or
mov
fadd
dec
ret
push
mov
scas
jne
repz
sar
inc
leave
fstp
pop
les
nop
clc
aad
cmp
or
jne
(bad)
(bad)
call
retf
ret
xchg
lahf
and
push
div
jns
imul
mov
(bad)
(bad)
(bad)
mov
icebp
or
imul
shr
hlt
clc
ja
pop
movs
pop
pop
into
inc
jbe
push
xchg
loope
push
mov
(bad)
(bad)
(bad)
jmp
(bad)
jo
test
clc
push
mov
sub
imul
pop
fs
ds
mov
(bad)
(bad)
push
std
cmps
dec
dec
jno
dec
sub
test
aas
mov
jecxz
lea
imul
popf
popa
(bad)
inc
jge
xor
cli
xchg
or
push
add
inc
xor
(bad)
(bad)
(bad)
(bad)
cmp
loop
mul
shl
mul
sub
mov
lods
ins
cli
pop
sub
mov
cwde
addr16
mov
(bad)
adc
mov
mov
push
mov
das
cmp
cli
jmp
xor
xchg
sub
push
sbb
pop
and
fdivr
shl
(bad)
call
sub
cli
gs
pushf
ins
mov
jne
mov
(bad)
(bad)
(bad)
imul
and
jae
push
or
dec
retf
je
clc
sub
das
cli
call
int3
es
popa
xchg
jmp
fidivr
test
inc
mov
inc
push
arpl
call
(bad)
(bad)
cli
icebp
xor
scas
dec
test
ins
sar
jne
add
iret
test
ins
gs
(bad)
push
adc
movs
cmp
mov
cld
push
stos
fisub
cmp
ins
jnp
das
(bad)
(bad)
mov
dec
je
push
pop
int
pop
fnstenv
mov
(bad)
(bad)
(bad)
jmp
pop
jae
pop
mov
ficomp
dec
or
mov
clc
push
jle
jmp
add
xor
inc
scas
loopne
push
push
frstor
inc
xlat
(bad)
(bad)
jmp
cmp
sub
xchg
loopne
cmp
repnz
xor
adc
and
inc
(bad)
(bad)
(bad)
call
xor
pop
sub
xchg
mov
aas
lea
mov
dec
push
(bad)
jns
mov
xchg
xor
movs
mov
lock
jno
or
(bad)
pop
push
cmc
cmp
mov
(bad)
(bad)
(bad)
(bad)
jmp
fistp
jnp
repnz
aas
push
lahf
adc
sbb
imul
ror
(bad)
(bad)
(bad)
(bad)
push
xor
pop
sub
outs
dec
ficomp
mov
dec
in
xor
or
(bad)
(bad)
(bad)
call
xchg
sahf
dec
shl
inc
pop
sahf
lods
vpunpcklqdq
push
xor
push
pushf
pop
pop
or
cdq
call
mov
inc
cwde
fbstp
sbb
push
add
(bad)
call
adc
sub
lods
lods
jmp
xchg
out
xor
inc
push
(bad)
call
adc
loope
test
dec
cmp
xor
dec
push
jb
jmp
int3
retf
in
mov
mov
mov
sub
sub
(bad)
div
(bad)
(bad)
(bad)
dec
lods
dec
out
sub
leave
jae
push
push
into
rcr
shl
lods
(bad)
cmp
pop
(bad)
(bad)
(bad)
inc
js
jo
or
dec
dec
cs
dec
popa
int
retf
xchg
aaa
imul
push
sbb
sub
sbb
mov
nop
mov
sbb
push
xor
std
(bad)
(bad)
jmp
scas
clc
or
mov
jge
(bad)
movs
daa
movs
mov
(bad)
popf
mov
(bad)
mov
aas
pop
sbb
sbb
sub
aad
aad
mov
mov
(bad)
jmp
pop
retf
shr
scas
add
mov
mov
inc
into
neg
(bad)
push
(bad)
fcmovbe
not
push
outs
(bad)
das
retf
(bad)
push
and
fiadd
pop
repnz
lahf
movs
mov
std
lods
mov
add
sbb
idiv
not
cmps
jle
je
mov
push
loopne
xchg
test
(bad)
call
jg
das
push
dec
sbb
outs
sbb
adc
add
ins
jo
(bad)
mov
push
mov
ds
mov
push
mov
sub
xchg
push
jne
mov
sti
pop
loopne
lock
ficom
mov
in
xchg
pop
movs
push
xor
jno
dec
mov
(bad)
jg
or
mov
jne
push
sub
push
aas
dec
je
mov
xor
or
sahf
lea
mov
stos
cmp
movs
inc
ret
bound
hlt
fild
jmp
add
dec
inc
stc
add
in
mov
xor
ror
outs
pop
(bad)
push
(bad)
sti
scas
or
jmp
imul
(bad)
mov
lock
push
cmp
pop
jmp
(bad)
(bad)
jmp
jnp
jmp
aas
push
pop
std
sub
lds
pop
xchg
dec
add
addr16
(bad)
(bad)
mov
cwde
test
aam
mov
outs
xor
ret
xor
aad
(bad)
(bad)
(bad)
(bad)
jmp
push
jg
ins
in
(bad)
cmp
jg
jl
push
popf
or
xor
(bad)
pop
icebp
mov
cld
ffree
pop
add
aam
(bad)
popf
xchg
push
jb
jp
shl
xchg
sbb
call
push
scas
aad
pushf
push
cmp
cli
xor
pop
pop
cmp
clc
shr
(bad)
(bad)
(bad)
jns
dec
imul
leave
dec
imul
fld
(bad)
jmp
mov
in
data16
pop
cmp
in
sbb
push
push
mov
and
and
push
inc
sbb
or
sbb
icebp
cld
jmp
dec
(bad)
(bad)
mov
jb
xchg
inc
adc
sbb
and
mov
(bad)
(bad)
(bad)
call
test
repnz
xor
cmps
mov
sub
fidivr
push
mov
push
(bad)
(bad)
(bad)
jmp
mov
mov
ins
cmc
cmp
and
jle
push
pop
cmp
xchg
js
mov
lods
(bad)
inc
lds
xchg
jae
orps
push
(bad)
jle
rcr
xchg
sahf
push
sbb
(bad)
addr16
(bad)
(bad)
jmp
ret
shl
in
push
cli
imul
inc
in
imul
sar
retf
(bad)
(bad)
(bad)
call
ins
mov
mov
add
jmp
pop
pushf
js
repnz
pop
adc
mov
imul
dec
xor
add
dec
add
xor
xchg
inc
mov
fs
(bad)
(bad)
(bad)
call
inc
fisubr
inc
xchg
mov
pop
jae
mov
shl
mov
sub
rol
ss
test
jg
(bad)
test
fidivr
scas
rcl
ret
cmp
push
xchg
lock
data16
(bad)
(bad)
call
xchg
xor
jo
ss
jmp
into
call
es
jmp
(bad)
dec
jnp
push
loope
loop
or
xor
fistp
mov
push
enter
sub
dec
(bad)
lock
(bad)
push
mov
jo
lock
aam
jne
mov
add
dec
add
iret
(bad)
(bad)
(bad)
fisttp
loopne
sub
mov
mov
xchg
fnstcw
sbb
add
(bad)
(bad)
(bad)
(bad)
cli
mov
aad
ds
add
sub
int3
pop
mov
inc
test
mov
data16
and
(bad)
(bad)
(bad)
ficom
mov
aad
mov
sub
jbe
push
int3
lea
jbe
mov
dec
dec
popa
add
(bad)
(bad)
push
test
hlt
ja
xchg
xor
pop
test
int
rcl
pop
mov
popa
xchg
loop
(bad)
(bad)
(bad)
fsub
mov
aaa
test
pop
jecxz
xor
retf
mov
jbe
out
std
mov
or
and
xchg
sti
inc
cmp
jecxz
sahf
mov
loopne
adc
(bad)
(bad)
(bad)
(bad)
mov
xchg
cmp
sub
and
test
clc
or
aas
movs
test
jb
(bad)
(bad)
(bad)
jmp
ret
inc
mov
imul
xchg
bnd
and
repnz
xor
jmp
mov
lahf
inc
jg
sbb
daa
xchg
fstp
push
(bad)
mov
pop
jmp
(bad)
sbb
push
fcomip
dec
and
dec
add
pushf
add
adc
inc
mov
(bad)
jne
test
mov
loopne
xor
pop
mov
sbb
or
les
retf
jmp
sub
jbe
add
ficomp
jb
lock
inc
stos
ud0
(bad)
out
cmp
pop
lods
repnz
xchg
pop
fsub
lahf
adc
test
mov
xor
int
adc
(bad)
(bad)
(bad)
jmp
push
test
jge
sti
jne
shl
mov
jmp
push
sub
cmp
sar
test
jp
loopne
pop
jb
into
sahf
xor
fwait
ror
dec
mov
inc
cld
cld
sub
cli
inc
xchg
ror
test
(bad)
inc
jmp
push
outs
mov
stos
jge
faddp
daa
(bad)
(bad)
(bad)
(bad)
call
fisub
jg
xor
jl
cmp
dec
int
mov
xchg
stos
mov
and
icebp
(bad)
(bad)
(bad)
cld
imul
and
dec
data16
lahf
and
push
cdq
in
(bad)
call
nop
pop
sbb
and
add
retf
retf
popf
push
dec
sar
(bad)
(bad)
call
test
test
pop
sub
mov
in
dec
neg
push
cld
pop
xchg
dec
test
xor
jns
push
push
jg
aas
adc
pop
cld
inc
adc
jge
leave
(bad)
push
sti
sub
(bad)
(bad)
(bad)
jg
push
jb
inc
mov
adc
inc
or
jg
pop
retf
neg
jne
test
ins
nop
(bad)
fld
arpl
mov
outs
or
pop
sub
add
jmp
mov
mov
inc
out
and
popf
inc
sbb
(bad)
(bad)
jg
xor
movs
ret
ja
addr16
cdq
mov
mov
adc
ins
ud0
(bad)
dec
jbe
jb
lods
mov
dec
push
cmps
xchg
lods
jbe
cmp
jb
jmp
adc
outs
pop
test
inc
(bad)
(bad)
(bad)
(bad)
mov
xchg
fucomi
dec
imul
push
ins
mov
stc
xchg
xchg
push
inc
test
(bad)
(bad)
jmp
retf
mov
lds
shl
pop
mov
pushf
mov
ja
add
jns
pop
aam
dec
mov
jmp
cmps
outs
stos
(bad)
cli
(bad)
call
clc
mov
das
das
mov
shl
xor
xor
mov
cmp
enter
sbb
sub
pop
xchg
adc
mov
mov
jmp
out
push
jmp
mov
pop
inc
popf
jns
shl
nop
xor
dec
nop
pop
cmp
xchg
cmp
and
inc
(bad)
pop
mov
(bad)
sbb
mov
loop
mov
call
add
(bad)
xchg
jge
movs
xor
fistp
(bad)
(bad)
(bad)
inc
out
inc
jle
push
mov
hlt
sub
push
in
dec
gs
gs
push
pop
ins
imul
xor
(bad)
(bad)
push
sub
mov
mov
aaa
(bad)
stos
pop
(bad)
gs
ins
push
xor
(bad)
jmp
fnstsw
xor
sahf
sub
fsubr
cmps
inc
and
add
inc
mov
popf
mov
mov
jg
clc
mov
add
scas
push
inc
xor
jg
call
jp
mov
data16
push
lock
sub
jecxz
mov
(bad)
call
lock
les
int
add
call
(bad)
(bad)
(bad)
(bad)
mov
jg
sti
cmc
ins
in
adc
inc
dec
sbb
inc
dec
push
pop
out
push
ret
mov
(bad)
(bad)
jmp
daa
mov
movs
and
dec
dec
add
pop
mov
movs
pop
lods
xor
xchg
jmp
(bad)
jmp
xchg
push
push
mov
test
push
sar
dec
ins
rcl
xchg
xor
jno
(bad)
(bad)
inc
iret
or
push
ret
push
lods
clc
push
out
jno
pop
das
mul
and
(bad)
call
loopne
arpl
adc
push
and
inc
xor
dec
and
xor
mov
sbb
fwait
movs
mov
xor
loope
xor
cmp
loope
sbb
js
dec
ins
pop
rcl
ret
(bad)
call
inc
test
or
pop
mov
retf
mov
ins
enter
das
jp
ins
(bad)
(bad)
jg
(bad)
(bad)
mov
xor
pop
in
inc
and
sub
dec
(bad)
mov
(bad)
(bad)
inc
aaa
jo
imul
push
adc
push
popa
lds
sub
push
add
fs
(bad)
(bad)
call
sbb
cli
xchg
add
and
iret
aad
jae
enter
jmp
(bad)
push
dec
retf
push
test
add
push
daa
ins
stc
sbb
adc
nop
iret
sbb
xor
movs
jnp
or
jbe
(bad)
mov
xchg
mov
jmp
scas
adc
ja
sub
dec
out
loope
fs
stos
fs
dec
inc
pop
push
(bad)
(bad)
call
mov
xchg
or
(bad)
sub
add
mov
into
mov
ret
nop
push
(bad)
(bad)
(bad)
push
or
pushf
sub
sub
push
or
cmp
adc
pop
outs
aad
push
in
mov
push
(bad)
(bad)
(bad)
dec
jo
push
leave
(bad)
xchg
sub
popa
xlat
fdiv
sti
ins
sub
in
add
and
add
inc
cld
or
sbb
xchg
and
rcr
jge
(bad)
dec
pop
(bad)
(bad)
(bad)
push
sbb
and
movs
add
cmp
(bad)
(bad)
jg
(bad)
(bad)
push
ins
iret
mov
scas
push
dec
push
or
add
adc
sub
(bad)
(bad)
mov
test
mov
jae
sub
push
mov
repnz
ins
test
(bad)
(bad)
dec
push
sub
sbb
loop
and
push
fidiv
fistp
jbe
bound
mov
(bad)
mov
add
xchg
jle
inc
dec
jno
pop
into
mov
lds
mov
(bad)
(bad)
push
aad
push
(bad)
pop
js
scas
pop
push
ror
cmp
test
mov
mov
sbb
enter
(bad)
jmp
jae
sub
ss
jge
adc
iret
shl
(bad)
(bad)
(bad)
(bad)
jmp
outs
imul
out
std
dec
jl
jnp
jae
jbe
adc
(bad)
(bad)
(bad)
dec
dec
jns
xchg
pushf
adc
push
ds
int
loope
mov
ja
aas
cmp
and
mov
push
(bad)
(bad)
push
xor
adc
jnp
shl
lea
push
sub
(bad)
jmp
cmc
cmp
test
out
xchg
or
ror
sbb
mov
(bad)
jmp
hlt
rcl
mov
dec
xchg
cmp
pusha
loope
icebp
cmp
xor
pop
aaa
lods
(bad)
fcomip
or
jle
sahf
es
dec
ins
(bad)
adc
ins
dec
(bad)
(bad)
(bad)
push
ins
enter
aad
stc
mov
lods
es
clc
or
push
mov
imul
cmp
mov
add
or
cmp
dec
push
push
add
loope
daa
adc
adc
add
dec
adc
and
rol
and
shr
inc
push
cld
(bad)
(bad)
mov
push
ins
imul
adc
pop
inc
or
cmp
out
mov
(bad)
(bad)
push
repnz
push
sbb
shrd
scas
pop
jle
push
and
jg
pop
jle
into
out
sbb
(bad)
add
lods
xchg
shl
jnp
jle
(bad)
cmp
add
jmp
xchg
lea
out
ins
ins
call
lock
dec
fistp
push
inc
dec
mov
jbe
arpl
(bad)
(bad)
jmp
sbb
mov
push
into
ja
call
push
dec
in
movs
push
xor
loop
push
pusha
sbb
adc
enter
movs
mov
dec
sbb
pop
icebp
(bad)
dec
inc
and
js
js
mov
xchg
pop
dec
loope
pushf
dec
shl
mov
imul
jne
xchg
js
fstp
adc
lahf
add
mov
mov
jnp
out
mov
push
movs
and
dec
adc
fild
call
or
pusha
stc
out
pop
mov
fcomp
mov
jmp
sbb
lea
hlt
in
mov
(bad)
(bad)
(bad)
call
arpl
adc
mov
cmp
sub
aad
loop
sbb
test
jmp
retf
imul
aad
add
dec
pop
and
cmp
add
(bad)
(bad)
(bad)
inc
xor
mov
jbe
jno
mov
mov
pop
lods
jns
xchg
cmps
jle
xor
(bad)
jmp
call
(bad)
push
cmps
push
fst
cmps
out
out
xor
add
(bad)
(bad)
(bad)
push
pcmpgtw
test
jecxz
ja
add
mov
sbb
and
icebp
mov
(bad)
(bad)
(bad)
in
adc
imul
int
sub
dec
dec
sub
push
ret
mov
dec
pusha
cld
inc
je
call
sahf
mov
mov
aad
dec
inc
add
sub
loopne
and
dec
loop
sbb
push
mov
(bad)
(bad)
(bad)
(bad)
jmp
sahf
mov
push
xor
repnz
cmc
lods
and
cdq
out
(bad)
jmp
xchg
xchg
daa
mov
fcom
mov
test
ss
rcl
pop
cld
sbb
repnz
ret
xor
lock
xor
(bad)
(bad)
(bad)
(bad)
in
scas
mov
pop
mul
movs
adc
mov
mov
push
fucomip
(bad)
(bad)
push
push
mov
inc
mov
jne
dec
mov
cmps
inc
jle
push
out
cmp
jmp
ds
jmp
inc
out
dec
mov
xor
data16
(bad)
(bad)
sti
dec
jmp
dec
sub
cmps
(bad)
pusha
pushf
add
push
dec
cmp
(bad)
(bad)
push
pop
sub
xor
cmp
or
xchg
sbb
pop
into
mov
dec
inc
dec
add
sbb
pop
cmc
mov
jmp
fld
movs
push
loop
addr16
in
sub
(bad)
(bad)
jmp
cmp
push
adc
xor
outs
pushw
xor
push
neg
aas
sub
addr16
shr
inc
les
fs
cmp
retf
sub
cmp
out
jl
(bad)
(bad)
(bad)
inc
inc
xchg
xor
ins
inc
ror
add
xchg
popf
mov
hlt
scas
ror
mov
pop
pusha
cli
(bad)
jmp
pop
fld
push
ret
mov
or
adc
jmp
cmp
icebp
and
add
rcr
js
and
cmp
enter
pop
jmp
dec
pop
push
push
popf
mov
sar
mov
aaa
pop
loopne
(bad)
call
sbb
jbe
nop
or
fs
pop
mov
mov
les
dec
in
cmps
and
adc
sahf
fs
(bad)
inc
mov
add
enter
pop
push
push
mov
or
jg
es
xor
arpl
fcomp
ins
push
sti
in
(bad)
(bad)
call
data16
ds
leave
aam
hlt
jne
(bad)
pop
pop
rcr
je
add
push
cld
inc
xchg
xchg
pop
mov
mov
(bad)
adc
cld
repz
in
lods
das
fdivrp
(bad)
(bad)
call
sahf
adc
pushf
sbb
fisubr
xchg
adc
icebp
mov
in
mov
bnd
sub
dec
fisttp
cmp
and
test
rcl
mov
pop
jbe
aaa
push
out
mov
nop
fwait
jno
leave
pop
(bad)
(bad)
(bad)
inc
sahf
cmc
into
in
dec
or
jg
sbb
pshufw
or
inc
(bad)
(bad)
(bad)
(bad)
fsub
ja
aam
xchg
jae
pop
push
push
int
stos
loope
or
cli
inc
push
retf
xor
push
ins
mov
repz
(bad)
(bad)
jmp
leave
or
jns
adc
js
and
retf
jno
ins
test
inc
cmps
jg
pop
mov
cmp
sbb
mov
or
sub
xchg
stos
jle
gs
mov
add
mov
pusha
(bad)
push
(bad)
(bad)
(bad)
push
pop
popf
and
sbb
add
pop
jmp
xor
or
(bad)
inc
dec
out
imul
lods
push
xchg
mov
sbb
js
loop
pop
iret
sub
(bad)
(bad)
mov
(bad)
sti
mov
aad
inc
jecxz
jecxz
into
mov
(bad)
adc
icebp
jg
sub
and
(bad)
(bad)
jmp
dec
(bad)
xlat
mov
icebp
scas
sahf
xchg
mov
push
(bad)
mov
jge
dec
mov
or
mov
(bad)
jmp
jae
sub
cmp
pop
dec
shr
pop
aad
bnd
stos
inc
push
push
imul
lods
ja
popa
test
inc
pop
movs
and
sahf
ror
push
in
xlat
and
call
(bad)
call
adc
push
push
cmp
out
int3
(bad)
call
in
repnz
jno
push
sub
mov
aaa
pop
sbb
dec
aaa
outs
push
hlt
js
adc
outs
xchg
(bad)
(bad)
(bad)
(bad)
mov
dec
rcr
mov
movs
(bad)
adc
stos
fwait
int
dec
in
push
jns
outs
(bad)
(bad)
(bad)
(bad)
jmp
ja
xlat
leave
into
iret
mov
dec
push
jmp
loop
iret
(bad)
lds
call
xchg
mov
push
int
movs
cmp
inc
test
pop
or
jmp
out
add
mov
pop
or
push
sub
or
enter
dec
add
adc
in
pop
(bad)
in
pop
push
sbb
xchg
pop
mov
sar
push
cld
iret
push
mov
jnp
std
mov
pop
outs
ss
sub
push
loop
imul
outs
cli
(bad)
dec
xchg
or
xor
cmp
mul
push
jo
(bad)
mov
mov
add
ds
ror
inc
xchg
imul
and
call
push
scas
pop
jnp
or
push
jmp
mov
mov
fimul
and
push
lds
je
sbb
push
pop
dec
(bad)
sub
leave
loopne
in
xor
dec
jae
inc
gs
out
mov
out
cli
jbe
(bad)
loopne
sbb
inc
sbb
dec
movs
(bad)
lahf
(bad)
call
inc
sub
mov
mov
ins
xor
pop
jb
mov
clc
push
repz
js
mov
fstp
push
and
int
je
loopne
(bad)
jmp
test
push
xchg
xchg
gs
cmc
idiv
jno
(bad)
fsub
mov
jnp
popa
dec
push
push
adc
(bad)
call
adc
add
sbb
stc
test
dec
mov
fwait
add
call
inc
in
leave
shr
xor
pop
iret
inc
pushf
jecxz
pop
jmp
mov
push
(bad)
fcom
sub
or
mov
add
sbb
xlat
mov
adc
cmp
nop
loopne
add
sbb
mov
(bad)
(bad)
(bad)
jmp
xchg
add
push
jne
movs
loop
gs
ss
pop
(bad)
and
add
daa
in
(bad)
(bad)
(bad)
dec
retf
pop
xchg
xchg
scas
jb
ret
push
test
sub
sbb
cmp
outs
cmp
data16
test
push
(bad)
(bad)
inc
dec
push
cmp
lahf
je
call
dec
cdq
xlat
(bad)
(bad)
(bad)
(bad)
cmp
sub
sub
movs
inc
add
cld
jmp
int3
push
std
das
js
xchg
fdiv
popf
(bad)
push
jns
and
fwait
(bad)
(bad)
push
cs
in
xchg
mov
adc
out
pop
loope
xchg
pushf
mov
inc
cmp
call
sub
movs
mov
sub
pop
loope
das
mov
outs
mov
mov
pop
daa
and
outs
and
mov
fistp
and
sti
dec
mov
(bad)
(bad)
call
cmc
pop
ins
sub
and
mov
mov
sbb
sub
mov
and
and
sbb
mov
jo
lods
sbb
jno
imul
(bad)
cmp
fcom
(bad)
mov
call
test
imul
fsubr
retf
push
jmp
ds
sub
or
lock
sbb
inc
dec
retf
cli
out
push
jecxz
mov
(bad)
call
cmp
cs
mov
mov
mov
rcr
jmp
call
cmp
sti
add
xorps
push
dec
or
dec
(bad)
adc
adc
mul
xchg
mov
addr16
mov
jnp
in
fwait
xchg
repnz
scas
clc
(bad)
push
mov
test
loope
out
and
test
mov
(bad)
(bad)
(bad)
(bad)
jg
xchg
or
hlt
mov
adc
or
inc
jbe
stos
out
ins
lahf
ror
rcl
gs
cli
pop
(bad)
(bad)
(bad)
(bad)
jns
and
dec
push
inc
pop
adc
mov
inc
shl
pop
sub
leave
js
mov
(bad)
(bad)
(bad)
call
pop
les
sti
sbb
div
and
xor
push
scas
cmc
mov
xchg
mov
ror
dec
(bad)
inc
hlt
mov
jb
fbld
cmp
ds
fs
jno
xchg
cmp
inc
(bad)
movs
sbb
or
sbb
cmps
mov
sti
and
xchg
cmps
nop
(bad)
(bad)
(bad)
jmp
pop
jecxz
inc
pushf
jo
push
test
cmp
popa
lea
(bad)
sub
addr16
(bad)
(bad)
call
cwde
repz
sbb
pop
and
leave
push
mov
sbb
mov
pop
call
int3
(bad)
jmp
jno
dec
cmp
mov
sbb
cmp
mov
(bad)
(bad)
(bad)
push
cmp
and
push
xchg
dec
sub
mov
jns
in
xchg
mov
push
mov
dec
xor
ins
xchg
mov
pop
or
jae
xor
(bad)
(bad)
(bad)
(bad)
mov
inc
xor
dec
cmp
fcom
xor
or
js
mov
sbb
and
ucomiss
test
(bad)
cmp
and
std
lds
dec
(bad)
(bad)
(bad)
jg
and
mov
daa
dec
fadd
jg
cmps
movs
and
adc
out
inc
int3
jbe
call
push
and
mov
and
sub
addr16
xchg
jne
cli
or
mov
adc
addr16
jmp
(bad)
(bad)
jmp
pushf
sub
dec
push
dec
cdq
dec
hlt
(bad)
leave
leave
cmp
push
push
cmps
outs
loope
movs
cmp
add
push
dec
push
bound
jo
ds
test
jge
fs
mov
daa
mov
push
jmp
xchg
cmps
sub
arpl
(bad)
xchg
fs
jb
in
in
imul
aaa
aad
pop
cld
(bad)
mov
call
adc
cmps
mov
push
addr16
add
sar
xchg
xchg
adc
mov
pusha
loope
or
jno
mov
popf
(bad)
mov
popf
aam
sub
xor
lods
out
mov
or
ss
(bad)
(bad)
dec
push
(bad)
sbb
xchg
and
pop
push
cmp
outs
mov
sbb
mov
sbb
pop
xchg
(bad)
jmp
test
or
dec
pop
cdq
leave
mov
test
leave
shr
fcmovbe
sbb
xlat
jmp
js
scas
inc
xchg
xor
rcr
lahf
dec
and
test
jg
outs
xor
dec
cmp
rcr
cmp
outs
inc
and
cmp
xor
pop
dec
sar
(bad)
(bad)
(bad)
mov
ins
retf
(bad)
mov
cmp
mov
(bad)
mov
fist
(bad)
(bad)
(bad)
push
loope
(bad)
add
adc
sub
arpl
sti
mov
imul
mov
mov
sub
in
hlt
inc
dec
mov
jo
sub
mov
xlat
and
jle
pop
pop
sub
jmp
(bad)
(bad)
inc
lods
shl
mov
jno
test
test
and
cmovg
push
leave
sbb
or
ret
dec
ret
daa
jb
cli
inc
shl
push
icebp
imul
(bad)
(bad)
cmp
js
aad
dec
aaa
add
sbb
adc
push
std
sbb
jne
inc
push
scas
(bad)
(bad)
call
outs
out
cli
xor
inc
mov
cmp
push
aaa
out
fisubr
es
(bad)
jmp
loope
je
xor
into
adc
fsub
mov
(bad)
(bad)
push
jbe
rcl
xchg
ja
or
push
pop
stos
movs
ss
and
sahf
and
daa
or
(bad)
(bad)
jg
stc
push
repz
ficom
xchg
sbb
mov
xchg
mov
jmp
xchg
stos
(bad)
(bad)
dec
cmp
nop
xor
(bad)
fisubr
retf
jne
jmp
imul
(bad)
(bad)
jmp
adc
mov
mov
pop
xor
push
cmps
shl
pop
lods
lods
mov
xchg
or
sub
jo
fwait
ret
(bad)
(bad)
call
fmul
pop
out
dec
push
dec
hlt
pop
jge
jmp
inc
mov
mov
mov
mov
push
mov
or
daa
push
sbb
pop
fbld
pushf
dec
pop
movs
arpl
jne
sbb
(bad)
retf
mov
sub
xor
inc
leave
push
cmp
mov
in
(bad)
(bad)
jmp
sub
cmp
outs
sub
xor
dec
stos
adc
hlt
(bad)
hlt
inc
je
sbb
hlt
(bad)
(bad)
(bad)
push
cli
dec
mov
stc
jno
mov
inc
xchg
lods
dec
rcr
xchg
ror
xchg
outs
popa
sti
cmp
pushf
jns
sub
sbb
inc
pop
retf
adc
xlat
lea
mov
dec
pop
dec
test
mov
mov
bound
inc
inc
xchg
lods
push
fadd
ins
jl
add
scas
mov
jmp
(bad)
(bad)
(bad)
call
or
fld
out
ins
ret
xor
popf
test
mov
(bad)
(bad)
out
sub
jmp
fist
pop
inc
imul
xlat
dec
adc
xor
xchg
test
cld
dec
fs
mov
cmp
std
push
rcr
jge
mov
(bad)
(bad)
(bad)
push
fild
and
jno
idiv
push
add
iret
sub
mov
cmp
push
(bad)
pop
and
jo
js
iret
and
sbb
push
xchg
pop
jp
(bad)
(bad)
call
aad
outs
pop
fwait
xchg
test
mov
ret
rcl
dec
sub
sub
xor
(bad)
(bad)
cli
ds
mov
mov
mov
rcl
pop
jecxz
xor
and
(bad)
mul
out
add
push
or
pop
jae
sbb
scas
nop
xchg
fwait
imul
(bad)
clc
addr16
sub
dec
push
adc
lds
xchg
mov
sbb
fwait
push
jg
add
mov
test
push
inc
pop
xchg
pop
std
cmp
inc
dec
mov
out
int
sub
adc
(bad)
push
cwde
loope
mov
or
push
test
(bad)
push
inc
outs
lods
loope
ins
adc
mov
(bad)
(bad)
jmp
jae
xor
inc
push
jno
scas
adc
jecxz
cld
jmp
ficomp
call
mov
or
push
adc
and
add
in
push
call
arpl
(bad)
(bad)
call
pop
jno
mov
adc
test
out
outs
dec
out
push
(bad)
aam
xor
dec
(bad)
call
push
mov
sub
fcomp
cmp
cmp
jno
mov
(bad)
(bad)
call
pusha
dec
jbe
sub
fld
inc
fsub
js
(bad)
sub
sar
gs
cli
mov
jmp
(bad)
mov
xor
jecxz
sbb
mov
xchg
adc
(bad)
(bad)
call
cmc
jge
cmps
call
pop
sbb
xlat
test
xchg
jno
mov
ficom
fwait
push
(bad)
(bad)
(bad)
call
mov
xor
push
xchg
sub
popf
push
fild
adc
and
(bad)
(bad)
call
dec
jp
fdivr
dec
nop
scas
test
add
daa
cmp
push
ss
sar
(bad)
(bad)
call
pop
iret
ds
repnz
jne
fidiv
inc
push
and
push
pusha
ins
push
out
movs
and
cmp
inc
and
cmps
cmp
pop
adc
mov
inc
in
(bad)
jmp
pop
(bad)
xor
sub
dec
or
pop
fsubr
sub
or
fadd
pop
add
(bad)
inc
jecxz
xchg
sub
mov
dec
mov
jne
inc
jmp
mov
lods
loop
sbb
test
add
push
retf
mov
cmps
cmp
mov
add
test
in
outs
pop
lods
pop
mov
lea
imul
inc
in
(bad)
jg
dec
jno
test
add
dec
ja
sbb
dec
in
push
xor
call
(bad)
(bad)
in
jmp
dec
shl
adc
cmp
test
std
inc
xchg
movs
in
ret
(bad)
and
inc
(bad)
dec
popf
or
test
data16
xchg
add
push
pop
int3
data16
dec
(bad)
dec
scas
adc
dec
cli
dec
sbb
lods
ins
movs
icebp
mov
add
jbe
stos
(bad)
call
sub
sbb
fistp
inc
sti
outs
loop
push
std
add
add
push
and
rcr
inc
xchg
in
not
movs
ds
clc
xchg
mov
and
(bad)
(bad)
(bad)
call
shr
ins
sub
add
push
aas
les
mov
mov
sti
int
sbb
(bad)
(bad)
fdivr
or
mov
push
aam
jnp
call
mov
fisttp
cdq
mov
(bad)
jmp
repz
fistp
test
push
mov
iret
test
aas
fist
pop
add
cs
(bad)
fdivr
add
mov
(bad)
lods
fcomp
jne
pop
pop
ds
(bad)
jg
pusha
and
and
clc
gs
mov
mov
(bad)
(bad)
push
xchg
cmc
xchg
mov
pusha
jnp
aas
xchg
jns
xchg
cmp
not
out
dec
pop
aad
and
ud0
(bad)
jmp
(bad)
pop
sbb
mov
inc
outs
mov
add
cmp
mov
aad
xchg
mov
push
std
fidiv
int
stc
dec
dec
loop
push
mov
and
push
dec
cmp
pop
std
add
mov
xchg
cwde
cmp
inc
out
loop
aas
jge
jge
(bad)
(bad)
call
inc
cmp
test
sbb
not
clc
imul
push
and
(bad)
(bad)
call
idiv
imul
mov
xchg
lods
jle
jns
(bad)
(bad)
push
(bad)
and
imul
adc
js
fst
mov
dec
jb
xchg
dec
jb
cdq
adc
int3
(bad)
(bad)
mov
and
jo
dec
loop
arpl
ja
cmp
leave
imul
jmp
xor
xor
jecxz
movs
xchg
loopne
imul
(bad)
jmp
xor
pop
adc
je
cs
js
stos
sbb
into
test
test
ins
sub
add
push
rcr
inc
icebp
dec
shl
jmp
(bad)
(bad)
(bad)
(bad)
fisubr
shl
popf
sub
dec
mov
mov
aad
sub
mov
(bad)
(bad)
(bad)
jmp
and
mul
dec
sub
mov
stos
ins
pop
scas
into
retf
gs
or
(bad)
out
cli
outs
add
fcmovu
sbb
test
cdq
xchg
or
sub
dec
or
xchg
nop
ret
mov
push
ds
jl
pop
jb
dec
mov
hlt
(bad)
jg
xchg
sub
and
fwait
push
sbb
leave
inc
fisubr
(bad)
lods
jmp
mov
je
stc
pop
(bad)
(bad)
(bad)
dec
sahf
or
push
sahf
sti
je
mov
xchg
stos
inc
mov
push
xlat
jae
cmc
sub
jno
push
retf
dec
push
adc
sbb
mov
mov
push
mov
(bad)
(bad)
jmp
mov
outs
xlat
sub
leave
clc
scas
mov
jb
xor
push
ins
and
cmp
fisttp
and
(bad)
(bad)
call
and
sub
fisub
sub
inc
repz
scas
mov
daa
pop
fwait
sub
(bad)
(bad)
mov
fs
mov
sub
pop
(bad)
leave
xchg
jmp
xor
hlt
jo
stos
daa
sbb
cmp
(bad)
push
(bad)
jmp
(bad)
mov
frstor
jae
pop
ret
inc
cmp
xor
loop
mov
mov
mov
loope
xor
je
push
test
div
out
clc
inc
xchg
sub
leave
jg
(bad)
and
hlt
stos
(bad)
(bad)
(bad)
(bad)
out
xor
clc
push
dec
push
inc
dec
inc
loopne
arpl
ja
lods
mov
sub
repnz
iret
or
(bad)
(bad)
mov
scas
jmp
inc
sbb
cmp
xchg
push
int
mov
(bad)
(bad)
inc
fiadd
xor
push
das
add
sbb
test
add
cmp
in
(bad)
retf
call
dec
dec
jns
loope
inc
rol
mov
mov
adc
(bad)
(bad)
dec
std
pop
inc
mov
aaa
loop
inc
jbe
outs
ficom
adc
out
(bad)
(bad)
(bad)
call
shl
(bad)
sbb
icebp
lahf
or
jge
cmps
lds
cdq
mov
stos
inc
movs
(bad)
(bad)
(bad)
push
adc
or
ins
cmps
sbb
dec
cmp
mov
mov
jb
mov
movs
dec
jno
pop
pop
fcmovb
sbb
jbe
out
scas
jb
mov
inc
retf
mov
mov
cmp
icebp
fimul
jmp
stos
mov
rol
jmp
sub
cld
outs
xchg
dec
inc
inc
jae
sahf
jb
sbb
cli
(bad)
mov
ret
xchg
out
in
lods
lods
jno
sub
xchg
xchg
fucomi
(bad)
(bad)
(bad)
out
inc
cmp
cmp
push
xchg
mov
js
daa
sbb
jl
mov
add
(bad)
out
clc
(bad)
mov
push
jnp
cmp
(bad)
aam
out
pop
mov
or
(bad)
lods
add
loop
mov
movs
jbe
aaa
in
push
xor
mov
stos
(bad)
(bad)
inc
clc
mov
dec
fs
dec
fist
into
inc
cmc
ja
sbb
(bad)
jmp
aad
loopne
sub
je
movs
jle
inc
push
or
bnd
(bad)
jg
(bad)
cld
test
aad
arpl
mov
aam
pop
sub
mov
lock
fsubr
imul
pushf
jno
dec
xchg
popa
mov
jo
mov
sar
(bad)
(bad)
jmp
pop
sub
pop
inc
out
xor
dec
sub
or
cmp
sub
jp
cmp
(bad)
(bad)
cmp
cmps
pop
jge
stc
not
sub
(bad)
fwait
cli
adc
mov
sti
mov
int3
push
pop
(bad)
(bad)
(bad)
call
out
imul
call
push
rcl
jmp
push
and
cmps
sbb
(bad)
(bad)
push
push
inc
sub
jge
call
aaa
adc
out
(bad)
dec
and
push
cmp
mov
jmp
(bad)
(bad)
(bad)
call
mov
test
lea
sub
dec
or
ret
lods
movs
(bad)
(bad)
(bad)
(bad)
dec
call
and
or
and
jbe
repz
inc
xor
(bad)
push
stc
addr16
lahf
dec
push
mov
mov
jecxz
or
rol
popa
dec
dec
loopne
push
push
inc
ins
imul
jmp
sub
call
stos
push
dec
xchg
push
aas
dec
and
(bad)
(bad)
(bad)
push
and
cmps
jp
xchg
lods
sbb
or
in
xor
pop
cdq
or
push
mov
sahf
test
arpl
cmp
leave
sbb
or
out
lods
(bad)
repz
inc
add
pop
mov
lods
sub
sbb
mov
cli
cs
(bad)
(bad)
(bad)
push
nop
bound
lods
pop
ins
nop
jb
fst
not
(bad)
shl
aaa
mov
(bad)
(bad)
jmp
cmp
pop
repz
ror
cmp
pop
(bad)
cmp
add
mov
mov
bsr
(bad)
cmp
test
in
in
ret
dec
mov
out
sbb
stc
dec
rcr
loope
jmp
xchg
sub
test
rol
add
iret
xchg
pop
dec
xlat
jb
call
loope
std
test
pop
inc
pop
mov
add
adc
pusha
jo
mov
or
out
jle
xchg
jp
jmp
xchg
test
(bad)
jmp
cmp
pushf
mov
jne
dec
fs
xchg
sbb
call
jle
pop
jae
(bad)
xchg
lock
inc
int
aad
frstor
dec
push
push
mov
jle
ret
loopne
scas
cli
(bad)
(bad)
cli
scas
inc
test
ret
loope
ins
test
inc
ss
loop
xor
inc
and
ret
push
mov
mov
fsubr
mov
xor
scas
sub
popf
inc
popa
cs
mov
loop
mov
xor
scas
mov
xchg
cmp
sub
dec
(bad)
call
dec
cli
enter
scas
retf
jle
sahf
cwde
xor
inc
cli
or
mov
mov
push
mov
cmp
adc
pop
cmp
cmp
outs
imul
imul
aaa
and
inc
sbb
or
(bad)
(bad)
fidivr
cli
push
adc
or
sub
test
xchg
cmp
rcl
call
loopne
sub
jmp
repnz
(bad)
(bad)
jmp
loopne
inc
int
xor
sub
dec
push
sub
inc
pop
enter
sahf
(bad)
call
dec
(bad)
lock
pop
xor
fcmovne
mov
inc
xchg
cmp
not
ret
mov
xor
xchg
addr16
fstp
enter
cmps
retf
icebp
scas
push
aam
jecxz
sbb
les
std
xchg
fild
clc
xor
and
mov
xchg
mov
and
sub
xchg
mov
(bad)
(bad)
(bad)
call
add
mov
cmp
hlt
jl
mov
xor
dec
jno
xor
(bad)
(bad)
call
xchg
sbb
cmc
add
jne
repnz
(bad)
dec
jp
jnp
cs
nop
es
jge
cmp
addr16
iret
pop
mov
(bad)
cmp
mov
inc
mov
lods
xchg
mov
push
popf
test
dec
inc
xor
push
cmp
jp
push
cmp
int
sahf
sub
cmp
(bad)
(bad)
(bad)
push
sbb
jae
test
mov
sbb
dec
aad
lods
arpl
sbb
aas
push
fld
gs
(bad)
jg
movs
and
call
rcl
sahf
(bad)
jo
push
mov
jbe
ins
neg
jo
mov
js
and
mov
or
mov
sub
jmp
(bad)
(bad)
jmp
adc
and
js
and
push
jns
rcl
jp
aam
xchg
outs
cli
(bad)
dec
xlat
out
mov
shl
push
mov
push
movs
test
jge
stos
stos
cmps
mov
(bad)
(bad)
(bad)
mov
aad
pop
pop
hlt
clc
mov
xor
ret
addr16
adc
js
mov
adc
jne
(bad)
(bad)
jmp
fidivr
aam
mov
(bad)
xchg
mov
pop
jmp
add
(bad)
push
cld
inc
cmp
jb
popf
push
jmp
push
mov
rol
(bad)
(bad)
jmp
das
shl
mov
js
add
movs
mov
mov
push
(bad)
daa
ins
push
in
ja
mov
sbb
sub
(bad)
jmp
bound
xchg
dec
nop
jmp
and
mov
push
mov
jae
call
sbb
loop
shl
cmps
xchg
aam
mov
ins
int3
jb
(bad)
(bad)
jmp
pop
inc
ret
push
scas
sbb
add
cmps
int
pop
outs
(bad)
mov
(bad)
or
iret
mov
mov
(bad)
(bad)
jmp
repnz
cdq
jne
into
jle
lock
pop
jmp
jnp
leave
adc
(bad)
(bad)
push
xor
cmp
je
clc
push
or
into
push
cmp
mov
sbb
arpl
(bad)
(bad)
call
or
rcl
fistp
fistp
idiv
cmps
dec
dec
or
cmc
inc
iret
push
adc
mov
clc
and
out
movs
cmc
lahf
(bad)
scas
mov
or
icebp
(bad)
dec
inc
pop
mul
dec
inc
or
sbb
sbb
xor
in
out
push
push
pop
es
test
(bad)
(bad)
(bad)
fst
fidiv
dec
adc
dec
add
out
jl
enter
mov
or
cmp
ret
mov
lds
sbb
and
mov
jp
movs
xchg
mov
loop
shl
mov
(bad)
js
outs
(bad)
(bad)
(bad)
inc
call
adc
les
fcomp
js
out
adc
clc
hlt
push
push
int
and
hlt
push
xlat
mov
outs
clc
jmp
fdiv
fadd
jb
push
(bad)
fimul
jb
adc
call
(bad)
push
cmp
xchg
stos
sbb
shl
in
mov
mov
movs
sub
pop
mov
call
dec
add
push
or
add
xchg
jmp
dec
jle
push
(bad)
and
(bad)
(bad)
call
outs
int3
xlat
push
mov
push
out
aam
push
sbb
(bad)
(bad)
call
cmp
sub
xor
ins
pop
test
cmp
dec
pop
(bad)
(bad)
(bad)
push
jecxz
icebp
jmp
movs
jbe
jb
xchg
sbb
imul
(bad)
idiv
in
pop
daa
nop
inc
cmp
ror
lods
cmp
mov
mov
ins
cld
(bad)
mov
push
xchg
mov
jns
jo
sbb
imul
(bad)
call
lds
mov
jecxz
nop
cmps
shr
dec
or
mov
sbb
mov
push
dec
(bad)
(bad)
(bad)
mov
push
push
bnd
sar
cmps
xchg
dec
(bad)
ss
mov
cdq
mov
(bad)
(bad)
mov
fisttp
mov
pushf
jno
xchg
adc
ret
aaa
or
jl
mov
jmp
dec
xchg
mov
mov
(bad)
(bad)
call
fs
mov
shl
and
pop
ins
dec
add
sub
ja
cmp
idiv
dec
mov
imul
rcl
inc
daa
(bad)
jg
das
mov
push
enter
mov
cmp
pop
dec
cmp
(bad)
jg
(bad)
cmp
pop
test
fistp
pusha
inc
sub
add
ret
xlat
push
inc
mov
lahf
sbb
add
jnp
sbb
sbb
hlt
push
jg
(bad)
(bad)
(bad)
cmp
mov
mov
rcl
sti
clc
lea
shr
xchg
sub
(bad)
jmp
aad
cmp
push
pushf
js
jns
aad
or
dec
les
xor
(bad)
(bad)
(bad)
(bad)
cmp
sbb
and
idiv
ret
not
lea
cli
sar
fst
push
jmp
inc
fistp
in
jbe
pop
adc
or
ds
(bad)
push
das
lock
mov
outs
(bad)
(bad)
push
movs
xlat
xchg
jno
test
mov
jmp
ds
xchg
mov
loopne
pop
clc
jns
imul
pop
xchg
inc
outs
xchg
ret
cmp
(bad)
(bad)
jmp
out
fadd
sub
ins
sub
ss
sbb
cs
fmulp
and
jmp
(bad)
(bad)
(bad)
jmp
mov
scas
sbb
mov
sub
xor
or
fmul
xchg
ins
jae
int3
and
mov
mov
push
test
shl
pop
fstp
pop
mov
mov
int
cs
jmp
adc
jns
add
jo
mov
jmp
dec
push
jmp
pop
cld
mov
cli
(bad)
fild
push
pop
test
(bad)
(bad)
push
xor
sub
mov
call
cs
loopne
jp
(bad)
mov
and
std
ins
mov
loopne
lahf
or
push
inc
into
out
je
stos
pop
into
and
jmp
dec
test
xchg
xchg
sbb
in
add
mov
pop
mov
jmp
pushf
pop
and
mov
sub
jns
loope
and
push
jo
(bad)
(bad)
(bad)
dec
xchg
xor
retf
xchg
cmp
jecxz
sbb
push
or
jge
fist
ja
xor
jae
neg
fdivr
fldcw
ins
and
and
(bad)
call
inc
pop
inc
jge
shl
fld
sbb
xor
shl
pop
jbe
das
cli
(bad)
dec
push
nop
rcl
cmp
imul
std
sub
ins
scas
lods
(bad)
aas
or
adc
(bad)
(bad)
call
xchg
in
lods
mov
or
cmps
mov
inc
jmp
xor
adc
and
(bad)
dec
jae
pop
and
mov
(bad)
rcl
in
out
es
push
(bad)
cmp
sub
shl
(bad)
jnp
movs
xchg
sbb
rcl
repnz
jne
add
(bad)
jg
out
push
sub
jmp
mov
cmc
outs
popa
pop
fdivr
(bad)
(bad)
(bad)
cmp
sbb
mov
je
jge
fnsave
inc
lods
lahf
inc
dec
popa
sub
xor
js
(bad)
(bad)
call
push
xor
lods
jle
out
adc
mov
(bad)
repz
add
(bad)
(bad)
(bad)
cmp
mov
mov
out
mov
int
push
jmp
shl
dec
cdq
jo
mov
or
push
and
or
lock
cmp
(bad)
(bad)
dec
mov
xchg
push
movs
ret
xchg
mov
push
cmp
jo
add
imul
std
cmc
cdq
cs
(bad)
jmp
(bad)
retf
jg
pop
daa
(bad)
jo
pop
mov
(bad)
out
cli
test
xchg
jg
retf
and
adc
dec
add
(bad)
call
xlat
cwde
loopne
int
mov
aas
fs
mov
mov
(bad)
jmp
adc
jne
and
push
add
loopne
jecxz
cmps
daa
xor
popf
call
bound
test
xchg
or
loopne
xchg
add
rcr
lds
aam
or
lds
add
push
add
loop
pop
dec
xor
in
fld
sar
(bad)
out
jmp
pop
scas
(bad)
cmp
int3
popf
or
add
adc
inc
in
hlt
xlat
aam
stos
neg
push
(bad)
(bad)
(bad)
jg
loop
push
popf
aaa
push
xchg
xor
sahf
mov
jecxz
lds
mov
gs
jnp
ds
inc
dec
pop
and
jmp
cli
mov
(bad)
icebp
pop
out
aas
mov
jmp
into
test
(bad)
faddp
(bad)
call
iret
dec
pop
out
add
jp
scas
pop
fdivr
inc
pop
cld
xchg
mov
(bad)
xchg
sbb
sbb
(bad)
call
dec
ja
out
scas
push
dec
pop
test
xchg
jbe
cld
mov
jmp
fs
fimul
pop
push
les
adc
cmp
stc
push
repz
jne
int3
pop
mov
clc
cs
hlt
sti
pop
sub
test
pop
add
lahf
xor
dec
outs
pusha
out
in
push
fwait
jne
or
(bad)
push
pop
aas
test
iret
push
mov
clc
dec
outs
pop
or
out
(bad)
(bad)
call
pushf
cmp
jg
call
sahf
inc
fistp
sub
repz
jmp
lahf
icebp
pop
pop
scas
cmps
adc
movs
test
repz
add
dec
sbb
imul
jns
pop
cli
movs
das
sub
push
fcomip
mov
jp
jle
int
cmps
ins
dec
or
dec
scas
ins
rcr
cld
call
(bad)
(bad)
cmp
pop
pop
ror
into
mov
sub
lods
das
fistp
cmp
inc
test
(bad)
jg
sahf
cmp
sar
jmp
psubb
(bad)
std
lahf
cmp
jmp
sub
inc
add
cmp
enter
jmp
je
lea
sahf
ins
pop
stc
mov
ins
je
out
in
aas
jle
(bad)
mov
(bad)
(bad)
(bad)
(bad)
jge
push
mov
jae
pop
jb
jns
sbb
pop
push
mov
and
push
(bad)
(bad)
mov
inc
dec
call
lahf
idiv
cmp
pop
xchg
or
pop
aaa
mov
ds
(bad)
inc
inc
sbb
(bad)
hlt
mov
out
psubw
sub
jmp
xor
sti
dec
sar
(bad)
jmp
xchg
mov
sahf
or
mov
xor
inc
pop
inc
xchg
fmul
adc
fnstsw
dec
jecxz
mov
in
(bad)
dec
xchg
vdivpd
scas
xchg
stos
cmps
call
and
xchg
cmp
push
sbb
int3
mov
ins
add
(bad)
(bad)
jmp
pmuludq
fist
dec
jmp
mov
xor
(bad)
(bad)
jg
jne
inc
loope
hlt
and
pop
or
dec
call
nop
aad
or
(bad)
(bad)
call
mov
pop
fisub
sbb
fcmovnu
dec
inc
jo
call
movs
inc
mov
in
(bad)
(bad)
(bad)
dec
or
mov
les
and
shr
cwde
fisubr
mov
std
dec
clc
(bad)
(bad)
jmp
out
cmps
pop
pop
lods
jge
inc
imul
loope
hlt
iret
mov
les
pop
(bad)
jmp
shr
push
mov
call
pop
pushf
bnd
out
push
mov
jno
sub
mov
fwait
mov
cmps
mov
jae
mov
ds
lea
(bad)
(bad)
dec
jmp
xor
dec
arpl
push
rol
xchg
loopne
ret
movs
std
add
adc
inc
aaa
xchg
push
mov
outs
repnz
push
mov
cld
(bad)
(bad)
(bad)
jnp
mov
movs
sub
fmul
fwait
push
ja
in
dec
pop
push
lahf
mov
or
cld
call
ret
adc
jbe
xor
ins
ja
loopne
lds
repz
mov
cmp
jp
in
xor
je
fidivr
pop
(bad)
(bad)
(bad)
(bad)
or
cli
xlat
mov
retf
push
dec
jp
mov
lahf
and
out
mov
add
(bad)
(bad)
push
rcr
call
bt
jmp
and
retf
sbb
femms
jae
inc
jbe
xor
(bad)
push
inc
repz
add
mov
pop
fdiv
sar
in
adc
clc
pop
push
(bad)
push
popf
adc
jnp
pop
popa
stc
xlat
cmps
xor
popf
xor
shl
loope
(bad)
in
(bad)
jmp
mov
mov
pusha
cli
mov
dec
daa
jge
sub
mov
mov
call
mov
mov
mov
add
dec
lds
in
shr
jp
scas
test
or
stc
in
aad
pop
and
jne
mov
dec
jp
in
std
shr
sbb
jecxz
stc
push
dec
daa
dec
das
sub
dec
imul
mov
(bad)
(bad)
(bad)
inc
mov
stc
mov
cwde
add
mov
xor
cli
jp
cmp
ror
or
(bad)
dec
outs
mov
(bad)
pushf
cmp
mov
frstor
scas
xchg
and
push
cld
(bad)
(bad)
(bad)
call
and
xor
mov
push
mov
mov
and
mul
xchg
pop
fwait
aas
add
fadd
and
popf
jo
loope
daa
icebp
cmps
or
jmp
(bad)
(bad)
call
(bad)
in
leave
xchg
fsubr
adc
jb
mov
cmp
dec
push
mov
(bad)
mov
nop
popa
mov
call
stc
xchg
lods
jg
mov
dec
(bad)
(bad)
(bad)
dec
fdivr
dec
jle
cmp
daa
cmp
jmp
dec
test
int3
xor
mov
pop
(bad)
(bad)
(bad)
in
icebp
int3
add
out
stos
stc
das
mov
xchg
mov
mov
ret
ret
mov
jo
stc
repnz
mov
sti
scas
push
xor
sub
ret
aas
cld
dec
scas
adc
jmp
jmp
cld
stos
std
cwde
pop
push
mov
push
mov
sti
or
repnz
out
out
test
pop
clc
(bad)
(bad)
(bad)
sub
test
popf
outs
inc
pop
sbb
(bad)
outs
hlt
sbb
xor
sub
or
aas
push
jecxz
jne
pop
leave
adc
stos
(bad)
call
fs
fstp
cld
aam
cmp
jmp
test
push
xchg
(bad)
(bad)
cmp
cmp
xlat
(bad)
and
mov
mov
ins
sti
das
clc
pop
test
addr16
arpl
and
inc
push
and
(bad)
or
jp
mov
pop
in
scas
fsub
fnstcw
in
(bad)
mov
jp
fcmovnu
mov
in
dec
push
push
lock
(bad)
jne
jb
sbb
aad
dec
xlat
or
movs
mov
fdivr
loopne
call
in
cmp
aam
mov
jb
retf
pop
aas
stos
sti
pop
hlt
(bad)
mov
pop
cmp
retf
add
movs
in
pusha
sbb
sub
sbb
lods
(bad)
(bad)
(bad)
call
jp
aam
das
mov
ja
mov
dec
in
dec
lock
adc
cld
cdq
cmc
sub
pop
lods
sbb
add
mov
xchg
dec
(bad)
(bad)
(bad)
call
stc
jg
imul
xor
lahf
mov
pop
pop
cmp
fsub
push
aam
xchg
cmp
(bad)
(bad)
(bad)
(bad)
jge
sub
cmp
mov
mov
sahf
xchg
movs
je
scas
iret
jno
xchg
les
and
(bad)
(bad)
jmp
xchg
sub
mov
lods
xchg
cmp
int
pop
lahf
fwait
(bad)
fcomp
outs
push
jmp
(bad)
jmp
pop
movs
inc
jge
xchg
mov
push
xchg
in
mov
push
mov
xchg
mov
pushf
(bad)
(bad)
(bad)
(bad)
cmp
pop
push
mov
mov
lea
jmp
push
mov
rep
sub
add
inc
jmp
mov
fs
dec
loope
sub
sub
in
and
push
ror
ret
(bad)
(bad)
(bad)
push
jg
push
test
stc
dec
cld
imul
push
mov
sahf
jmp
dec
mov
sahf
aam
adc
sbb
retf
out
mov
test
sub
and
jmp
mov
xor
ret
push
mov
cmps
xchg
cmc
jb
test
stos
repz
(bad)
call
pop
mov
loopne
add
retf
push
loop
movs
and
xor
(bad)
(bad)
(bad)
dec
hlt
mov
js
imul
rol
push
push
fwait
xchg
loop
inc
test
mov
cmps
pop
mov
jl
dec
(bad)
(bad)
(bad)
call
out
popf
dec
not
mul
cli
das
call
mov
bound
mov
(bad)
(bad)
dec
jmp
scas
and
repnz
into
lahf
inc
sbb
scas
and
add
mov
dec
mov
inc
sar
call
inc
push
jmp
adc
adc
sub
sub
(bad)
inc
hlt
icebp
adc
xlat
xchg
icebp
mov
or
aaa
jnp
mov
fidiv
in
out
sbb
push
imul
daa
(bad)
mov
test
sub
int3
and
add
lahf
or
cld
sub
mov
mov
ins
(bad)
(bad)
jmp
scas
dec
sbb
or
popa
push
cmps
out
popf
cmp
fld
ret
(bad)
(bad)
in
pop
int
test
les
stos
arpl
adc
fcomp
(bad)
(bad)
(bad)
jmp
inc
rcr
mov
jae
mov
clc
inc
retf
(bad)
xchg
lahf
or
push
jmp
mov
cli
fsub
xchg
dec
inc
jbe
dec
pop
ss
fidiv
push
outs
clc
mov
xor
cmp
pop
sbb
adc
mov
(bad)
(bad)
(bad)
inc
adc
pop
mov
loope
ret
mov
mov
sub
xchg
(bad)
nop
adc
sub
dec
push
aas
mov
xchg
(bad)
(bad)
(bad)
jnp
mov
mov
mov
dec
xchg
lahf
lahf
push
loop
je
inc
push
push
test
cli
(bad)
(bad)
(bad)
jmp
mov
mov
lods
pop
or
stc
jo
mov
and
(bad)
push
cmp
and
jmp
mov
test
(bad)
pop
mov
loop
push
ins
test
jp
(bad)
(bad)
(bad)
fbstp
mov
mov
push
fiadd
cmp
mov
clc
fadd
pop
mov
test
mov
(bad)
int3
es
add
test
sbb
lock
pop
mov
(bad)
sbb
jno
inc
dec
pop
cmc
or
scas
adc
ja
(bad)
lods
and
inc
xchg
xor
add
pushf
(bad)
into
fld
das
(bad)
(bad)
(bad)
dec
shr
jne
loop
dec
mov
loope
test
repnz
xchg
out
mov
mov
daa
sbb
out
mov
inc
mov
cs
addr16
push
xlat
mov
(bad)
out
or
sub
popf
dec
mov
icebp
ret
add
jle
add
sbb
dec
and
outs
imul
les
outs
(bad)
out
pop
enter
(bad)
dec
in
mov
test
ja
pop
adc
sub
and
push
adc
cmp
sbb
imul
dec
mov
sub
je
xchg
repnz
(bad)
xor
(bad)
jg
fsubr
call
sub
dec
js
ja
cmp
call
and
cli
mov
push
push
mov
clc
(bad)
adc
xchg
(bad)
fcomp
fwait
test
lds
jno
push
loopne
or
sub
cmp
sbb
(bad)
(bad)
push
xor
push
sub
movs
into
popa
or
xor
xchg
and
ja
sbb
shl
push
mov
mov
xchg
bound
jb
fisttp
(bad)
(bad)
dec
cmp
sbb
jecxz
jge
ret
movs
push
jb
shl
and
mov
dec
scas
mov
std
(bad)
popf
mov
scas
xor
jge
mov
mul
movs
jmp
(bad)
(bad)
(bad)
jmp
mov
stos
lds
dec
rcr
inc
push
adc
add
cmp
jbe
call
leave
mov
dec
pop
pusha
fs
dec
mov
push
mov
dec
setae
add
lds
(bad)
(bad)
(bad)
call
sti
adc
std
bound
jnp
and
aaa
test
in
scas
or
cmp
(bad)
(bad)
call
jmp
ins
and
xor
push
jge
out
(bad)
out
aam
(bad)
(bad)
(bad)
dec
adc
and
mov
test
(bad)
mov
popf
adc
call
jmp
cmp
popa
mov
dec
inc
or
int
mov
rcr
in
push
inc
aad
cmc
(bad)
(bad)
inc
mov
jns
mov
loop
out
icebp
cmps
ins
inc
add
inc
pop
push
xchg
jbe
fisubr
clc
cmp
shl
loop
xchg
lods
push
(bad)
(bad)
(bad)
inc
pop
ins
mov
inc
mov
(bad)
sub
and
pushf
or
xchg
lock
sub
out
inc
xor
mov
repz
and
jb
xor
les
jp
gs
xchg
in
mov
icebp
mov
(bad)
adc
sti
jmp
int
(bad)
(bad)
jmp
sub
out
mov
mov
jno
and
cmp
sub
mov
mov
mov
in
dec
out
mov
xchg
adc
(bad)
(bad)
call
push
(bad)
or
or
sub
jae
popa
dec
inc
and
pop
dec
push
pop
(bad)
(bad)
(bad)
(bad)
call
es
lock
mov
fistp
stos
addr16
add
movs
test
enter
(bad)
jmp
inc
mov
cs
std
mov
jmp
mov
push
xor
in
pop
sahf
dec
rol
lods
sbb
(bad)
wrmsr
aaa
(bad)
(bad)
(bad)
(bad)
fidiv
sub
xor
mov
push
rol
adc
jo
push
inc
clc
dec
adc
loopne
mov
adc
pushf
test
icebp
out
mov
xchg
(bad)
(bad)
(bad)
inc
sbb
das
shl
repz
jmp
mov
push
inc
xlat
pop
(bad)
(bad)
(bad)
call
jp
lahf
push
jle
fist
xor
mov
pop
scas
mov
mov
jno
or
sub
call
pop
mov
xlat
push
dec
xor
inc
jge
shl
int
lea
sar
(bad)
(bad)
dec
push
outs
pop
or
aad
mov
nop
mov
mov
sahf
pop
add
dec
inc
inc
aaa
xor
jnp
mov
aad
(bad)
jmp
push
dec
rol
jno
fsub
pop
add
test
dec
dec
jo
(bad)
dec
dec
mov
dec
xchg
adc
daa
dec
push
rcr
dec
loopne
add
sbb
out
cli
(bad)
(bad)
(bad)
inc
mov
aad
inc
popf
inc
(bad)
or
pop
jmp
pop
pop
cs
pop
test
xor
repnz
(bad)
(bad)
(bad)
mov
imul
rcl
xor
xchg
mov
xlat
mov
pusha
cmps
aas
or
sub
(bad)
fsubr
pop
lea
jno
xchg
jp
xchg
aas
dec
(bad)
dec
xchg
sub
dec
mov
(bad)
inc
aad
mov
outs
ins
jp
mov
nop
mov
xor
ins
inc
(bad)
(bad)
(bad)
jmp
mov
push
push
sub
rcr
mov
cmps
inc
stos
mov
dec
popf
and
xchg
call
std
dec
push
outs
psubusw
pop
mov
js
les
(bad)
cmp
out
aad
dec
sub
stos
call
push
bound
mov
inc
lea
mov
or
(bad)
(bad)
inc
push
sbb
xchg
pop
ret
adc
mov
inc
out
inc
jb
stos
mov
(bad)
(bad)
dec
rol
sbb
mov
addr16
pop
xlat
add
cmp
mov
ficom
call
or
cmps
sbb
xchg
xchg
scas
sbb
jecxz
lea
sbb
mov
mov
(bad)
(bad)
(bad)
jmp
fadd
outs
and
xchg
dec
rol
mov
push
lea
lock
push
(bad)
(bad)
(bad)
push
stos
sub
enter
jno
stc
jmp
fs
adc
ins
and
mov
adc
push
sahf
cdq
adc
mov
xchg
push
and
jmp
call
fiadd
aam
sbb
iret
rol
inc
(bad)
(bad)
(bad)
jmp
mov
movs
aad
mov
jne
xor
stos
inc
repz
pop
out
fsub
dec
(bad)
jmp
mov
js
in
inc
sub
adc
adc
xchg
xor
mov
adc
test
mov
cwde
xchg
pop
(bad)
in
iret
inc
pop
jl
xchg
inc
push
ret
(bad)
and
out
cli
cmc
gs
(bad)
(bad)
xlat
(bad)
in
dec
test
xchg
or
jne
mov
xor
(bad)
(bad)
(bad)
mov
push
cmp
fnstsw
scas
outs
std
cmp
pop
lods
lock
mov
(bad)
(bad)
dec
scas
mov
xchg
or
push
jecxz
and
adc
jo
cmp
xchg
xchg
gs
jo
jmp
jle
jmp
je
jno
ja
outs
int3
(bad)
mov
les
sub
(bad)
jmp
pop
mov
inc
sbb
sub
pop
mov
pop
push
jmp
inc
cli
daa
pop
and
lods
cmovne
or
jg
cmp
mov
mov
add
ja
nop
and
mov
sub
xchg
cmps
(bad)
(bad)
(bad)
dec
cmp
stos
leave
cmp
test
mov
xchg
sub
sbb
(bad)
(bad)
(bad)
inc
loopne
cli
int3
sbb
into
push
fidiv
in
pop
xor
push
inc
(bad)
in
xor
or
xchg
adc
jb
and
jl
xor
shr
push
call
fwait
adc
scas
clc
call
aad
inc
mov
iret
outs
dec
out
cmps
test
push
sbb
(bad)
(bad)
push
inc
imul
sub
ret
mov
and
pop
cmp
(bad)
(bad)
call
(bad)
iret
adc
push
mov
add
daa
sub
imul
in
mov
(bad)
(bad)
cmp
pop
mov
es
mov
dec
out
mov
popa
ins
in
adc
pusha
fistp
(bad)
(bad)
inc
lods
cmc
cmps
dec
push
xor
jns
in
xchg
(bad)
outs
push
cmp
jle
in
add
jmp
sbb
pop
cmp
(bad)
pop
xchg
cmps
in
in
xor
dec
dec
call
push
mov
or
outs
dec
mov
int3
and
sub
popf
pusha
inc
loope
push
out
adc
fidivr
cli
rcr
out
cmp
xchg
mov
(bad)
movs
cmps
aad
(bad)
lods
(bad)
(bad)
(bad)
(bad)
push
and
int
push
enter
fldcw
sub
neg
adc
xor
dec
xchg
inc
test
jle
(bad)
js
and
jnp
rol
ss
mov
or
push
xor
inc
cld
mov
dec
sub
outs
jp
fxch
in
stos
out
jge
inc
mov
and
cmp
inc
scas
mov
fwait
inc
and
add
pop
cdq
(bad)
(bad)
(bad)
push
dec
dec
enter
cmps
mov
cmp
les
cmps
pop
adc
scas
pop
add
dec
add
jno
add
(bad)
fisubr
movs
jmp
lds
mov
mov
add
(bad)
(bad)
(bad)
cmp
inc
adc
dec
fdiv
scas
dec
(bad)
xchg
xchg
pushf
shl
outs
mov
call
mov
or
retf
sub
pop
mov
jne
in
dec
int
add
push
ja
push
xchg
mov
imul
out
cmp
ficomp
(bad)
push
mov
xor
sti
call
xor
or
xchg
(bad)
(bad)
(bad)
call
jno
and
and
ret
ret
movs
inc
cmps
(bad)
mov
enter
leave
jp
dec
mov
xor
sub
jmp
sub
dec
(bad)
mov
dec
xor
(bad)
mov
push
out
sub
sbb
add
(bad)
mov
test
cmp
mov
inc
mov
clc
push
test
ret
outs
mov
mov
push
int3
xor
pop
(bad)
push
inc
add
push
in
dec
fs
inc
and
das
retf
dec
or
mov
(bad)
imul
dec
push
add
shl
int3
inc
in
xchg
stos
xlat
(bad)
imul
(bad)
(bad)
(bad)
jmp
inc
xor
and
cmps
cdq
pop
fldenv
fidivr
push
add
sbb
dec
push
sbb
(bad)
(bad)
cmps
mov
mov
inc
dec
ficom
mov
jae
(bad)
(bad)
(bad)
inc
mov
pusha
cmp
sbb
inc
xor
clc
add
push
pop
or
cdq
or
mov
in
dec
in
stos
xchg
pop
pop
mov
sbb
push
xchg
(bad)
(bad)
push
mov
push
clc
rcl
call
jo
mov
scas
rol
cmp
dec
mov
(bad)
push
cmp
and
mov
rcr
loopne
xchg
sbb
(bad)
(bad)
jg
movs
pop
mov
inc
popf
mov
ret
fsubp
fcomp
add
test
inc
call
std
dec
mov
xchg
out
push
jb
cmp
mov
jne
outs
sahf
add
jbe
push
mov
(bad)
(bad)
push
ins
xchg
scas
adc
mov
sahf
add
aas
outs
hlt
test
mov
gs
(bad)
jmp
adc
pop
xor
mov
adc
sti
(bad)
(bad)
(bad)
(bad)
(bad)
jg
jl
pop
add
idiv
out
in
dec
adc
dec
mov
mov
mov
(bad)
(bad)
(bad)
call
test
xchg
lahf
add
in
push
movs
inc
mov
mov
test
pop
cmp
push
test
clc
jmp
push
add
mov
or
movs
ins
repnz
sti
dec
fisttp
call
mov
int3
shl
repz
xchg
fwait
inc
ds
adc
(bad)
(bad)
(bad)
jg
mov
push
je
push
xchg
sar
mov
(bad)
jne
mov
and
jno
push
mov
loope
add
adc
pop
mov
sub
out
daa
(bad)
jmp
lods
popf
sbb
in
(bad)
and
xchg
mov
jecxz
jg
add
cmp
cmps
shr
(bad)
jmp
xor
jmp
fcmovnu
jmp
cmp
cwde
enter
mov
inc
mov
xchg
xor
arpl
sbb
jbe
ret
(bad)
fcmovnbe
mov
iret
inc
scas
adc
popf
add
mov
imul
sub
mov
(bad)
sub
or
clc
cmps
or
jmp
mov
icebp
cmps
adc
(bad)
jmp
inc
push
into
mov
xchg
dec
jl
ds
out
mov
jno
xchg
jae
sbb
ret
jo
mov
jo
jmp
jmp
(bad)
xchg
mov
je
cld
push
sar
push
leave
outs
ins
(bad)
(bad)
(bad)
jg
outs
(bad)
es
push
adc
repnz
xchg
std
xchg
mov
rep
xor
jecxz
jmp
call
fldcw
iret
xor
xchg
push
call
jo
out
mov
dec
or
and
hlt
arpl
cmps
movs
mov
mov
mov
dec
sub
aam
ror
xchg
pop
push
inc
stos
rol
mov
fs
inc
call
pop
repnz
test
adc
pop
sub
shl
jae
push
cld
jmp
repnz
or
arpl
fdivr
(bad)
(bad)
jmp
and
call
scas
push
ffreep
in
sbb
sub
es
pop
daa
pop
jl
loope
or
(bad)
jmp
push
inc
retf
jo
xchg
pop
or
mov
fisub
int
(bad)
(bad)
(bad)
(bad)
jl
mov
and
cmps
push
test
mov
cmps
push
xchg
jle
push
fucomip
sbb
test
(bad)
dec
ret
pop
cmps
hlt
xchg
sbb
xchg
(bad)
push
ja
scas
icebp
or
(bad)
(bad)
push
leave
push
push
out
inc
xchg
fisubr
scas
mov
push
out
push
lods
js
mov
retf
inc
fidivr
inc
and
sbb
and
adc
sbb
push
ret
or
(bad)
jmp
scas
mov
xchg
repz
sub
repz
pop
aas
lea
xchg
jb
xlat
fisub
(bad)
lock
inc
and
icebp
(bad)
(bad)
dec
mov
jg
(bad)
in
hlt
fnstenv
dec
jns
dec
mov
xchg
xchg
lods
inc
sti
dec
movs
in
(bad)
fist
jmp
nop
movs
jl
or
(bad)
jg
mov
jg
fcmovu
sbb
cmps
imul
ins
retf
(bad)
push
push
cmp
and
inc
adc
push
js
mov
cmps
xor
jmp
jmp
xchg
and
(bad)
in
or
cmp
pop
mov
lock
leave
pop
(bad)
in
sub
dec
jecxz
sbb
sar
xchg
cmps
popf
dec
jo
test
nop
dec
mov
movs
out
jb
(bad)
(bad)
push
adc
into
ret
loop
cmps
push
mov
mov
cwde
gs
and
sbb
(bad)
(bad)
(bad)
inc
aam
adc
aad
inc
pop
or
scas
repz
js
pop
lea
mov
clc
(bad)
mov
jo
xchg
dec
cld
jecxz
ins
sbb
push
movs
test
scas
loopne
mov
test
ins
jmp
(bad)
(bad)
jmp
lock
push
push
xor
into
retf
push
das
mov
cmc
jmp
adc
pusha
outs
ins
aaa
cmps
mov
fdiv
dec
out
(bad)
(bad)
fistp
xlat
outs
push
retf
sub
loop
fwait
mov
pushf
loopne
shr
cld
pusha
arpl
mov
mov
cmp
xor
jo
push
xchg
mov
sub
cmp
dec
cmps
mov
jmp
xchg
adc
jecxz
mov
stos
shl
stos
shl
inc
pop
mov
(bad)
call
lea
pop
loopne
pop
cmove
cmps
mov
sbb
(bad)
(bad)
(bad)
dec
dec
enter
(bad)
cs
rcl
push
mov
pop
sub
sbb
popf
mov
shl
push
dec
pop
dec
jle
(bad)
(bad)
(bad)
mov
adc
repnz
jle
or
or
xchg
push
xchg
cmp
mov
stos
test
in
sahf
gs
retf
sub
ins
out
repnz
retf
mov
sbb
shl
inc
fwait
mov
sbb
fwait
jb
pushf
int3
mov
adc
mov
aad
adc
xchg
movs
adc
sbb
icebp
mov
dec
(bad)
scas
popf
jno
mov
and
sub
sbb
(bad)
(bad)
(bad)
dec
stos
xchg
aad
clc
xor
mov
and
das
pop
mov
mov
(bad)
(bad)
(bad)
jmp
test
icebp
jbe
jge
push
pusha
aam
push
cwde
rcr
push
je
imul
and
add
xlat
lods
loop
(bad)
jmp
sub
sub
and
and
aam
cli
cmp
test
mov
(bad)
jmp
adc
(bad)
push
ss
div
push
adc
arpl
jp
mov
(bad)
(bad)
(bad)
call
mov
sbb
jbe
adc
lahf
call
movs
daa
and
(bad)
(bad)
inc
out
push
das
movs
stos
fadd
gs
cmps
xor
sti
sub
fld
inc
xchg
repz
xchg
pop
jo
mov
sbb
xor
mov
mov
cmp
movs
and
add
mov
(bad)
(bad)
call
ss
ror
xchg
fisubr
jb
xor
push
ret
inc
jmp
movs
(bad)
(bad)
(bad)
(bad)
jge
ds
fsub
dec
cmp
push
leave
test
das
inc
inc
sar
(bad)
inc
add
xor
repz
jp
outs
loope
xchg
mov
adc
(bad)
(bad)
fimul
lods
adc
enter
loop
stos
pop
and
adc
adc
int3
sub
jmp
mov
and
push
stos
push
mov
cld
xchg
xor
mov
and
rol
push
cs
jecxz
loop
lock
int3
movs
add
fist
xor
leave
dec
(bad)
(bad)
dec
push
dec
sbb
lahf
icebp
ja
loope
(bad)
push
js
jbe
mov
(bad)
call
sbb
mul
pop
cmps
es
mov
cmp
loope
dec
in
mov
sbb
sbb
pop
lahf
or
jp
mov
add
xor
jmp
(bad)
(bad)
(bad)
call
xchg
or
push
dec
loope
lods
add
jbe
movs
shr
nop
imul
dec
dec
jae
sbb
cmp
jge
cmp
mov
popf
xor
jmp
pop
sub
push
push
xchg
xchg
mov
imul
xor
(bad)
mov
dec
pop
shr
enter
jb
les
pop
dec
jae
mov
(bad)
jmp
mov
out
fs
mov
cmc
add
mov
ins
(bad)
(bad)
(bad)
(bad)
mov
mov
inc
or
fcom
xchg
jno
xchg
sub
cli
cmp
call
mov
xor
jne
mov
ins
adc
(bad)
push
cmp
pusha
mov
pusha
mov
fs
cmp
and
movs
ficom
(bad)
(bad)
(bad)
call
xor
and
daa
add
es
dec
in
imul
cmp
or
lds
(bad)
jmp
push
cmp
loopne
or
inc
call
addr16
pop
ins
int
pop
cmp
xchg
ins
mov
arpl
ins
jmp
and
push
and
stos
and
sar
sbb
ss
xor
into
or
xchg
cmps
pop
sbb
push
cmp
js
mov
add
pop
sub
cmps
retf
popf
bound
pop
jno
(bad)
(bad)
call
rcl
xchg
enter
mov
sub
mov
in
test
push
shl
jne
stos
sub
dec
xchg
aad
cmp
std
ja
jge
adc
rcr
(bad)
sub
aas
call
pop
jecxz
sub
and
jp
hlt
push
outs
inc
mov
xchg
shl
(bad)
(bad)
jmp
movs
les
cmp
jae
jmp
xor
imul
push
sti
dec
jmp
cmp
lods
xchg
hlt
js
(bad)
(bad)
(bad)
jmp
fdiv
sub
retf
imul
push
ret
adc
inc
addr16
mov
sti
div
leave
mov
enter
sahf
(bad)
(bad)
call
xor
sub
adc
scas
sar
movs
xchg
cmp
je
jmp
(bad)
mov
shl
test
add
fisubr
xchg
jmp
call
jbe
ret
sub
cwde
sub
(bad)
mov
sbb
jo
jmp
(bad)
(bad)
jmp
stos
jnp
mov
es
sub
dec
loop
adc
imul
dec
inc
or
test
call
mov
or
out
(bad)
aam
rcl
push
fcomp
jno
cmps
int3
(bad)
(bad)
(bad)
call
sub
sub
ja
mov
mov
xor
nop
shl
inc
jns
mov
ins
gs
inc
xchg
nop
fisub
add
ret
jmp
inc
jp
(bad)
(bad)
(bad)
push
sbb
sbb
or
jo
sub
mov
push
sub
cmp
out
out
imul
cli
ins
cmc
jo
rcl
daa
sub
push
(bad)
sub
in
dec
jne
loopne
pop
jno
(bad)
(bad)
(bad)
jge
aas
or
jecxz
and
mov
sbb
hlt
out
cmp
inc
jge
(bad)
(bad)
jmp
inc
sbb
rcr
(bad)
popa
mov
fild
loope
sbb
cmp
(bad)
jmp
inc
add
mov
dec
cmp
push
push
cmp
pusha
xchg
add
jp
add
mov
mov
push
cli
stc
aam
ins
sub
inc
push
xor
inc
(bad)
(bad)
(bad)
(bad)
jmp
out
movs
in
sbb
movs
xchg
dec
or
daa
cmp
pop
xchg
loope
(bad)
jae
inc
adc
mov
(bad)
(bad)
(bad)
(bad)
out
cmp
mov
mov
or
mov
mov
adc
xlat
(bad)
(bad)
inc
inc
add
dec
lods
in
test
dec
fsub
ret
pushf
cld
stos
xchg
pop
xchg
in
xor
(bad)
(bad)
jg
or
cmp
xor
cwde
push
mov
jns
or
sub
lods
stos
mov
(bad)
(bad)
(bad)
jmp
and
into
std
aad
fist
mov
or
pop
or
or
sub
push
fiadd
loopne
jnp
jmp
mov
jmp
xchg
xor
(bad)
fstp
push
jnp
lods
jbe
or
pushf
jne
(bad)
(bad)
(bad)
(bad)
jp
ds
jecxz
fidiv
lods
mov
mov
inc
sti
mov
push
shr
outs
dec
or
daa
cdq
cwde
ss
ss
xlat
and
fs
imul
(bad)
jle
push
pushf
rcl
idiv
xlat
daa
push
jb
lds
out
mov
scas
js
out
in
daa
push
cli
iret
dec
mov
popa
(bad)
scas
push
(bad)
bound
jg
push
jge
out
rcl
cmc
inc
scas
int
lds
sbb
(bad)
(bad)
(bad)
jmp
(bad)
fisubr
in
js
xchg
(bad)
rcl
push
mov
out
dec
mov
mov
dec
mov
loop
xor
adc
mov
fcomp
(bad)
adc
out
xor
mov
cdq
cmp
(bad)
shr
adc
js
repnz
cmp
(bad)
call
lods
or
out
scas
jp
pop
mov
dec
or
(bad)
(bad)
(bad)
push
in
mov
ret
mov
jge
push
inc
aas
push
call
cmp
push
xchg
sub
(bad)
(bad)
call
jnp
jae
test
imul
cmp
jnp
stos
les
sbb
sub
jmp
(bad)
call
mov
xor
in
lods
int
jle
and
icebp
pop
fidiv
call
mov
out
cs
sbb
adc
jg
push
stos
jb
ret
jmp
adc
ror
in
fnstenv
test
ret
fwait
xchg
sar
(bad)
mov
jle
jp
adc
push
adc
cmps
xor
lods
xchg
jno
mov
(bad)
(bad)
dec
pop
sub
data16
fldenv
and
fld
and
push
mov
(bad)
(bad)
ds
mov
add
sbb
pop
mov
xor
mov
(bad)
test
iret
mov
add
mov
fcmove
jp
xchg
ds
sub
mov
cmp
jp
(bad)
(bad)
push
pop
xchg
test
popa
aas
lea
push
inc
lods
fdiv
loopne
mov
push
cs
dec
sbb
test
dec
imul
(bad)
test
and
call
jmp
and
dec
mov
pushf
in
dec
dec
sub
test
arpl
mov
dec
cld
(bad)
(bad)
push
jmp
inc
push
ficom
loopne
leave
xor
adc
xchg
fs
aam
adc
mov
pushf
inc
mov
(bad)
(bad)
inc
in
xchg
adc
sbb
sahf
ins
mov
mov
into
stos
(bad)
(bad)
(bad)
push
loope
mov
mov
jnp
(bad)
xor
call
mov
jmp
adc
imul
cmp
mov
mov
in
sub
(bad)
call
mov
in
or
cdq
stos
push
jmp
(bad)
mov
mov
jmp
ins
inc
push
mov
popa
push
jmp
aaa
(bad)
call
in
sub
cmp
lock
mov
fimul
jno
inc
int
(bad)
(bad)
(bad)
(bad)
mov
xor
ret
repnz
out
jne
lods
sbb
push
ins
nop
inc
or
(bad)
(bad)
(bad)
inc
pop
ds
dec
in
mov
lahf
fstp
xchg
in
pop
(bad)
rcl
push
adc
dec
iret
xchg
dec
jbe
ins
xchg
out
ja
icebp
pop
pusha
scas
test
inc
mov
pop
ficomp
popa
dec
int
sub
scas
(bad)
(bad)
(bad)
dec
(bad)
xor
xor
push
stc
push
fdiv
scas
repz
cmp
outs
jp
sub
push
jg
loop
adc
push
xchg
mov
imul
scas
sbb
pop
mov
lock
jmp
test
ds
sar
test
mov
cmp
enter
(bad)
call
ds
stc
push
push
xor
out
neg
(bad)
(bad)
or
cmp
xor
push
inc
in
mov
(bad)
(bad)
inc
push
xchg
add
sahf
and
mov
xchg
lahf
xor
sbb
ret
aam
dec
(bad)
push
addr16
ficom
(bad)
call
add
mov
popf
ret
(bad)
mov
popa
inc
sar
pop
xor
in
je
popf
imul
mov
sub
cli
(bad)
jmp
mov
ins
cwde
iret
jl
out
scas
mov
mov
loop
add
or
sbb
jge
imul
outs
(bad)
(bad)
(bad)
call
fistp
pop
aad
mov
sti
dec
sub
push
jle
mov
sbb
(bad)
inc
jl
push
shl
inc
dec
mov
movs
je
cmps
mov
sub
mov
movs
cmc
mov
xchg
lods
xor
pop
loopne
dec
ins
mov
mov
push
add
fdiv
or
loopne
(bad)
jmp
retf
fwait
sub
push
jge
and
call
cmp
fst
mov
inc
stc
sub
mov
sahf
or
movs
mov
or
(bad)
inc
push
pop
mov
mov
movs
mov
mov
pop
std
xchg
pusha
(bad)
fucomip
cmps
push
or
adc
pop
lods
sub
sub
nop
cli
sbb
xchg
mov
xor
sbb
repnz
dec
mov
shr
les
add
jnp
jp
ret
and
mov
clc
(bad)
(bad)
dec
lock
xchg
and
movs
inc
lock
sub
and
retf
pop
scas
cli
jmp
mov
inc
adc
sub
jge
cmp
xchg
push
(bad)
(bad)
push
sub
add
fcomp
retf
rol
movs
sub
int
aas
test
lds
(bad)
jmp
in
xor
stos
mov
retf
jb
xchg
movs
sbb
cld
mov
or
(bad)
(bad)
(bad)
cli
xchg
mov
imul
mov
ror
mov
mov
push
xchg
(bad)
(bad)
mov
pop
imul
pusha
cmc
(bad)
and
pop
xchg
icebp
xor
(bad)
(bad)
jmp
outs
gs
adc
xchg
stc
(bad)
hlt
icebp
jno
inc
or
div
mov
mov
fisttp
(bad)
jg
dec
xchg
fild
sbb
(bad)
fsub
mov
and
aaa
das
push
(bad)
mov
push
push
shl
call
outs
mov
dec
addr16
xor
mov
std
loope
fistp
inc
xchg
stc
xchg
sub
in
cli
lods
sahf
in
cli
pushf
push
jo
xchg
mov
xchg
fild
movs
arpl
addr16
(bad)
(bad)
inc
mov
test
adc
loop
push
nop
cmp
pop
pop
repz
pop
(bad)
(bad)
(bad)
jmp
pop
dec
adc
dec
ret
xor
in
jbe
icebp
and
sbb
jecxz
das
sbb
(bad)
(bad)
jmp
xchg
lods
movs
adc
stos
je
(bad)
push
ins
fstp
xchg
clc
fdiv
sti
xchg
std
aaa
leave
xchg
fstp
je
enter
(bad)
(bad)
(bad)
inc
lock
lods
add
ss
cmp
scas
int3
test
dec
jmp
xchg
adc
(bad)
(bad)
call
repnz
sar
sub
xchg
pushf
sub
sub
push
xchg
hlt
retf
inc
in
jle
add
arpl
call
fsub
and
mov
mov
enter
test
jb
sti
inc
lock
or
(bad)
(bad)
(bad)
jmp
xlat
inc
js
in
lods
jmp
dec
xchg
sub
scas
jns
mov
loop
sbb
out
dec
and
fld
aas
mov
(bad)
(bad)
call
retf
test
cmp
movs
lds
int3
dec
push
jb
cdq
fistp
(bad)
(bad)
mov
pusha
fcomp
sub
retf
mov
ja
popf
ins
sbb
sbb
or
test
fcomip
call
out
xor
pop
mov
add
call
movs
ret
inc
mov
dec
lods
push
push
std
adc
push
aad
cmp
sub
(bad)
mov
pusha
dec
lods
dec
mov
and
add
sbb
cs
pop
jne
test
popf
adc
cmp
mov
(bad)
call
jmp
jb
xor
cld
jecxz
adc
clc
js
repnz
out
mov
shl
(bad)
dec
imul
retf
push
add
add
mov
leave
dec
es
xchg
jecxz
jb
clc
(bad)
jnp
push
jle
jge
inc
ret
gs
mov
(bad)
mov
jle
mov
pop
add
shl
xchg
mov
xchg
push
ficom
hlt
push
push
cmp
inc
add
repnz
(bad)
adc
push
add
(bad)
(bad)
inc
cmp
out
mov
cmc
add
jge
into
arpl
mov
add
je
push
push
das
imul
xchg
popa
lods
sbb
push
outs
mov
sahf
cmp
cmp
jns
dec
imul
pop
test
sub
push
enter
das
lock
icebp
scas
cdq
ja
cdq
in
pop
sub
sub
push
cwde
fild
cmp
cld
push
jge
push
lea
push
ficomp
sbb
fs
cli
enter
rcl
(bad)
(bad)
push
outs
mov
sbb
xor
test
mov
dec
(bad)
jo
xchg
call
lods
ins
out
test
and
nop
sub
jne
nop
xchg
out
jae
shr
inc
jl
test
call
push
in
xor
inc
(bad)
xchg
into
int3
gs
popf
into
jb
loope
(bad)
(bad)
(bad)
jmp
mov
dec
jmp
and
out
cmp
int
ins
pop
pop
adc
push
xlat
mov
jmp
mov
popf
mov
sbb
pop
dec
(bad)
(bad)
(bad)
call
push
and
call
scas
mov
cwde
xchg
lahf
dec
sahf
loope
arpl
push
ret
loopne
pop
cli
(bad)
(bad)
(bad)
jmp
mov
jae
lds
push
mov
jle
sbb
sub
push
ss
in
mov
pop
aad
(bad)
(bad)
fcomip
xor
xchg
xchg
(bad)
push
iret
jecxz
retf
aaa
inc
mov
mov
and
cmp
enter
(bad)
jmp
push
aad
jnp
mov
call
add
(bad)
call
xor
cmc
cmc
fwait
dec
pop
jb
mov
push
retf
adc
(bad)
(bad)
(bad)
call
lds
push
adc
leave
pop
ret
dec
xor
dec
sar
or
ss
call
jmp
jle
stos
bound
jp
mov
cs
xchg
in
cmp
pop
push
jl
(bad)
(bad)
(bad)
jmp
lods
jno
add
(bad)
and
dec
(bad)
inc
jne
xor
pop
mov
fcmovb
(bad)
(bad)
(bad)
jmp
sar
push
xchg
(bad)
lahf
mov
movs
test
fs
push
leave
jge
pop
sahf
sub
scas
jb
(bad)
(bad)
call
jl
repnz
je
ret
dec
or
inc
loope
jmp
mov
xchg
push
or
push
(bad)
aad
xor
cmp
jae
pop
xchg
jl
fwait
lods
(bad)
rep
sub
clc
(bad)
call
mov
cmps
hlt
cdq
dec
popf
push
push
cmp
(bad)
pop
or
popf
jmp
in
(bad)
(bad)
(bad)
(bad)
aas
mov
push
or
jecxz
sub
jnp
lods
xchg
lods
lds
xor
(bad)
ds
pop
jl
(bad)
(bad)
call
dec
jle
mov
adc
sub
add
adc
out
xor
add
aam
lock
dec
inc
sar
push
dec
loope
sub
leave
sub
(bad)
jmp
xor
(bad)
(bad)
inc
pop
mov
pop
movs
fmul
in
and
shr
test
cmp
sub
(bad)
cli
lds
jge
mov
adc
adc
inc
ds
call
ins
mov
jns
das
(bad)
mov
add
push
sub
(bad)
call
xlat
xor
jmp
hlt
mov
jle
mov
adc
inc
(bad)
mov
inc
mov
fsub
mov
rcl
ret
mov
push
mov
pop
or
(bad)
(bad)
call
lahf
pop
pop
je
scas
dec
sbb
mov
pop
dec
or
mov
into
add
cld
fist
push
lods
mov
shr
fs
loop
mov
test
jmp
mov
sbb
and
rcl
pop
cmps
nop
inc
ss
xchg
fisttp
inc
ins
gs
(bad)
(bad)
(bad)
dec
jns
(bad)
cli
fldcw
mov
mov
xor
inc
jb
ret
cld
jmp
(bad)
(bad)
jg
sub
inc
out
out
lods
aam
adc
jb
inc
mov
mov
or
(bad)
(bad)
inc
(bad)
jnp
push
cmp
xchg
call
daa
sbb
jno
in
or
fdivr
(bad)
jmp
loopne
ror
sar
sbb
iret
pop
out
(bad)
mov
jmp
sbb
xor
jg
std
scas
xchg
mov
or
mov
imul
cmps
dec
lea
xchg
icebp
or
push
push
dec
rcr
mov
jo
and
(bad)
dec
jmp
mov
clc
push
retf
sbb
lods
push
fwait
xor
adc
(bad)
call
xchg
in
sub
mov
test
push
adc
mov
(bad)
(bad)
(bad)
(bad)
fld
xchg
jno
cmp
jno
xchg
stc
or
sub
out
cs
sub
inc
sub
dec
and
(bad)
(bad)
push
sahf
das
mov
test
popf
cmp
sub
addr16
or
pop
mov
lea
add
pop
lods
clc
push
imul
or
push
repnz
jmp
call
cld
(bad)
dec
cs
cwde
sub
xor
cli
or
jb
inc
cmc
ja
fwait
jle
test
jo
movs
nop
stos
mov
in
xor
cmp
or
xor
dec
jmp
(bad)
aam
lods
icebp
retf
pushf
push
sbb
stc
loope
sub
push
pop
xchg
dec
outs
push
sahf
mov
sub
inc
ds
inc
test
add
mov
pop
data16
mov
fadd
gs
imul
(bad)
jmp
les
dec
sub
push
sahf
mov
(bad)
xsha1
cmps
dec
inc
sub
xchg
(bad)
jecxz
movs
int3
(bad)
(bad)
(bad)
mov
push
fs
jmp
jnp
xlat
es
gs
dec
popf
mov
push
mov
mov
xchg
ror
push
mov
mov
add
test
fdivr
xor
scas
gs
mov
and
(bad)
inc
dec
data16
std
pushf
lock
and
jnp
test
or
fimul
fstp
jle
(bad)
(bad)
(bad)
call
xor
daa
sbb
ror
fcomp
mov
mov
in
stos
push
loopne
jle
ret
sbb
push
stos
sbb
pop
ss
add
(bad)
(bad)
(bad)
jl
in
and
jnp
add
movs
jae
cmp
fst
sub
movs
pop
pop
gs
pop
xor
call
imul
push
cdq
test
out
sbb
(bad)
mov
imul
std
lods
xlat
out
cdq
dec
dec
jns
stos
mov
sub
cwde
test
int
in
xchg
lea
std
xlat
imul
nop
xchg
sbb
(bad)
(bad)
(bad)
out
xor
imul
sahf
or
repnz
(bad)
push
ficomp
imul
sahf
mov
mov
int
fsub
aas
les
(bad)
(bad)
jmp
in
mov
adc
cld
and
test
dec
aam
mov
mov
(bad)
in
xchg
jns
xlat
add
ficomp
pop
jb
sbb
push
aas
sti
mov
(bad)
(bad)
mov
ficom
aam
jp
mov
or
mov
cld
call
(bad)
and
xchg
push
cmp
mov
ret
jmp
out
popf
and
cmc
scas
xlat
sbb
int
ja
ds
stos
pop
jne
fistp
in
ins
pop
fidivr
cmp
cld
sub
xchg
mov
(bad)
dec
sar
(bad)
dec
out
mov
lods
call
(bad)
mov
push
arpl
dec
jns
jg
(bad)
call
icebp
sub
loopne
pop
(bad)
das
shl
or
addr16
mov
hlt
inc
sub
ficom
in
ds
loop
sbb
outs
inc
outs
sbb
div
std
ins
xor
mov
mov
xor
int3
movs
jnp
aam
cmps
je
test
cmp
loopne
sub
nop
xor
div
leave
out
mov
cmc
pop
pop
lock
inc
mov
loop
cmc
dec
sub
sub
add
not
cmp
adc
or
(bad)
mov
shl
test
push
mov
cmps
lods
jp
and
jmp
and
dec
pop
lea
(bad)
adc
jns
(bad)
mov
addr16
and
mov
or
(bad)
fbld
xlat
sub
cwde
jns
in
cmp
dec
cmp
mov
repz
sub
div
or
gs
std
in
add
(bad)
(bad)
jmp
(bad)
sbb
and
and
cmp
xchg
mov
mov
xchg
fdiv
(bad)
(bad)
(bad)
(bad)
sti
push
sub
jle
stos
or
in
shl
xor
sti
jmp
mov
(bad)
(bad)
(bad)
call
lahf
out
mov
aad
or
pop
push
arpl
or
loop
(bad)
(bad)
(bad)
call
test
aad
ds
jmp
add
dec
xor
outs
sub
test
mov
xchg
mov
fisttp
je
jns
mov
test
push
and
add
loopne
pop
push
jmp
(bad)
(bad)
xor
cmp
push
jl
pusha
sahf
inc
stos
sbb
call
jno
add
(bad)
(bad)
(bad)
call
imul
sbb
add
jno
bound
mov
repnz
shl
push
scas
inc
pop
and
sub
movs
xchg
dec
add
sub
cmps
jno
imul
cmps
cmps
xchg
mov
inc
cwde
pop
loope
xchg
fadd
cmp
arpl
(bad)
call
nop
xor
cmps
pop
into
mov
test
adc
pop
adc
cmp
inc
jecxz
fwait
jle
cwde
cmps
scas
dec
push
aas
imul
aaa
mov
fcom
in
push
enter
(bad)
jmp
mov
jp
pop
pop
dec
dec
jae
and
les
(bad)
call
test
push
retf
dec
jge
jl
js
pop
stos
mov
pusha
mov
call
dec
aas
xor
(bad)
(bad)
(bad)
fidiv
jne
dec
mov
xor
out
jne
lahf
push
data16
in
or
(bad)
(bad)
(bad)
mov
sbb
and
add
sub
mov
sub
mov
ds
pop
adc
cld
inc
int3
inc
cmc
lea
cs
mov
(bad)
add
movs
adc
(bad)
mov
xor
cmp
cdq
mov
xchg
or
sar
(bad)
push
adc
lock
(bad)
inc
mov
iret
jbe
xchg
scas
xor
scas
fisub
and
scas
(bad)
jmp
pop
mov
push
jecxz
pop
jae
mov
push
cmp
dec
pushf
idiv
(bad)
jg
(bad)
sub
(bad)
ds
or
int3
aam
mov
push
arpl
das
sub
inc
dec
outs
sbb
and
xor
not
jmp
(bad)
cmps
int
push
shr
mov
aam
xor
leave
jnp
call
adc
or
xchg
mov
mov
(bad)
(bad)
jmp
retf
loope
(bad)
call
adc
mov
addr16
clc
(bad)
(bad)
jmp
pop
dec
mov
xchg
outs
jl
in
fdiv
(bad)
aad
jg
(bad)
jmp
sbb
imul
aam
or
jo
jl
cld
out
sahf
mov
(bad)
out
push
(bad)
jbe
sub
(bad)
imul
xor
add
jmp
jg
add
mov
inc
jmp
xor
mov
jp
xor
shr
clc
in
xchg
jl
xor
jl
cld
(bad)
push
stc
push
data16
call
pop
rcl
jp
dec
(bad)
(bad)
(bad)
(bad)
(bad)
fistp
adc
xor
push
xlat
push
ret
dec
aaa
inc
retf
aaa
sub
cmp
pop
pop
icebp
mov
in
inc
ins
test
cld
sub
je
fisubr
ja
lock
(bad)
jmp
lods
lahf
mov
fild
xlat
push
js
dec
cld
sub
(bad)
jmp
dec
call
test
cmp
cmp
and
add
int3
(bad)
xchg
sahf
sub
xchg
loop
jg
ret
push
sub
fidiv
in
outs
inc
push
jecxz
ja
scas
cli
(bad)
mov
jle
add
xor
(bad)
(bad)
jg
push
pop
ins
fld
lock
out
pop
leave
sbb
int
fisub
retf
icebp
(bad)
call
into
mov
cs
(bad)
out
push
fiadd
push
mov
mov
dec
dec
div
cld
mov
int
mov
retf
cli
aas
movs
(bad)
(bad)
jmp
call
mov
rol
push
pop
(bad)
push
ror
sqrtps
ja
aad
(bad)
jg
(bad)
frstor
shr
shl
ins
scas
add
adc
jns
push
test
(bad)
(bad)
(bad)
inc
in
xor
neg
imul
and
push
inc
pop
sbb
scas
mov
(bad)
std
xor
call
lds
pop
sub
stos
inc
xor
xchg
jae
add
hlt
xchg
retf
cmp
popf
sbb
xor
push
fisttp
lahf
lahf
(bad)
(bad)
(bad)
jmp
xor
push
fwait
call
cmps
int3
data16
push
call
lahf
aad
rcr
cmc
(bad)
call
iret
inc
stos
hlt
mov
dec
xor
pop
cld
mov
xchg
imul
in
dec
lods
stos
and
(bad)
mov
jmp
pushf
cmc
xchg
rol
clc
aam
jmp
add
lahf
rcr
fild
jl
inc
cli
(bad)
(bad)
(bad)
es
cdq
xcrypt-ecb
cmps
mov
xchg
cmps
adc
out
sbb
inc
dec
dec
mov
(bad)
(bad)
dec
adc
and
pop
pop
nop
or
loope
cwde
push
inc
push
hlt
pop
(bad)
(bad)
(bad)
jmp
leave
xchg
xchg
adc
sub
push
or
jno
jne
jge
push
stc
sar
add
(bad)
inc
popa
jb
fld
lea
xor
sbb
aad
sub
add
pop
cld
(bad)
dec
popa
xchg
xchg
lahf
xchg
aad
aaa
pop
pop
pop
push
dec
cmp
adc
dec
sub
fsub
and
add
hlt
pop
daa
jns
fnstsw
cmp
dec
pop
paddusw
xor
(bad)
(bad)
(bad)
inc
xchg
and
stos
mov
lods
cmps
repz
out
add
xchg
addr16
rcl
pop
je
(bad)
(bad)
call
pop
or
movs
mov
popf
(bad)
in
add
retf
outs
add
cmp
test
inc
out
jle
retf
inc
leave
repz
shr
pop
outs
(bad)
call
std
push
repnz
rcr
retf
out
adc
push
int
mov
fld
(bad)
scas
or
or
pushf
xchg
jp
out
popa
shl
xchg
pop
push
pop
jo
leave
dec
out
push
and
inc
(bad)
(bad)
(bad)
call
je
popf
inc
addr16
mov
sbb
inc
push
mov
pop
inc
cmp
jnp
(bad)
(bad)
(bad)
jmp
push
mov
lahf
pop
pusha
and
dec
sbb
shl
cmc
(bad)
call
mov
jne
sub
scas
jmp
sbb
xor
push
mov
mov
scas
dec
xchg
out
loop
xor
cs
(bad)
push
lahf
mov
push
js
xor
sub
and
das
ror
ret
ss
jnp
(bad)
jmp
pop
xchg
repz
pop
and
adc
mov
cmp
xchg
inc
cld
std
(bad)
(bad)
call
out
adc
int
sti
mov
jae
stos
push
and
pop
pop
xor
push
jl
xor
into
pop
retf
dec
retf
mov
aaa
cmp
xchg
pop
sub
sub
(bad)
(bad)
push
in
int3
xor
lahf
push
jp
pusha
inc
pop
jle
imul
leave
xlat
or
(bad)
(bad)
call
and
cwde
std
push
jg
mov
sub
inc
mov
push
jne
int3
(bad)
(bad)
(bad)
dec
xchg
sahf
jnp
pushf
and
or
xchg
and
push
jnp
mov
push
jmp
mov
hlt
push
aas
inc
daa
mov
jmp
mov
in
jg
pop
cs
leave
(bad)
(bad)
(bad)
inc
in
push
jecxz
or
rcr
cmc
pop
call
out
shr
push
jg
icebp
dec
or
sbb
(bad)
icebp
fs
es
das
sar
lock
ins
imul
retf
pop
sub
dec
pop
jg
pop
dec
iret
fstp
(bad)
pop
std
fild
pop
daa
(bad)
mul
in
stc
call
outs
cmp
fcomip
(bad)
cwde
loopne
(bad)
xlat
or
cli
aad
sub
push
retf
js
cli
(bad)
(bad)
(bad)
call
jb
jl
retf
add
or
adc
dec
es
push
retf
adc
rol
mov
or
sbb
mov
dec
in
sbb
cmp
(bad)
(bad)
(bad)
inc
xchg
movs
mov
aas
imul
cdq
dec
mov
xor
jnp
fbld
dec
fdivr
ins
fisubr
int3
xlat
add
cmps
cmp
push
fdivp
movs
cld
stos
iret
scas
pop
and
call
or
in
inc
cmps
in
je
and
jp
clc
js
ficomp
ins
pop
xchg
xchg
push
aad
(bad)
(bad)
dec
in
(bad)
repz
adc
push
pop
in
in
aas
adc
xchg
(bad)
(bad)
(bad)
(bad)
mov
sub
fmul
pop
les
rcr
mov
sbb
sbb
(bad)
(bad)
jmp
push
push
inc
addr16
jne
into
pop
inc
lock
cdq
adc
mov
sub
jo
(bad)
(bad)
mov
scas
aaa
addr16
xchg
mov
push
outs
mov
inc
test
add
(bad)
(bad)
(bad)
call
mov
ins
popa
jmp
add
jge
push
adc
inc
mov
nop
mov
mov
jmp
sahf
sub
xchg
mov
push
int3
mov
jp
mov
push
loope
pop
dec
movs
mov
(bad)
inc
sub
mov
out
scas
mov
xor
nop
cld
xchg
sub
mov
push
call
(bad)
(bad)
mov
push
sbb
and
jg
aaa
fisubr
shl
pop
fs
(bad)
(bad)
(bad)
ds
xchg
mov
or
push
mov
shl
bound
pop
inc
add
outs
ret
imul
sbb
(bad)
(bad)
(bad)
push
dec
inc
stos
adc
int
outs
xor
sub
imul
fidiv
(bad)
(bad)
(bad)
inc
mov
repnz
and
mov
sub
and
sub
in
mov
stos
jno
sar
out
out
and
adc
cld
jmp
or
mov
in
cwde
cdq
arpl
mov
cdq
push
pop
ss
(bad)
(bad)
inc
add
mov
inc
and
scas
dec
stos
lea
das
jne
retf
mov
or
(bad)
(bad)
push
cmp
push
push
jbe
fcomp
mov
sbb
lock
fistp
push
mov
push
jnp
jg
cmp
mov
out
(bad)
(bad)
jmp
outs
fsubr
dec
xor
out
xor
dec
div
pop
xlat
push
cmp
sbb
aaa
adc
(bad)
call
jg
stos
and
mov
mov
xor
push
fdiv
(bad)
(bad)
jg
or
add
dec
repnz
loope
mov
jecxz
and
loopne
jmp
mov
stc
push
or
ret
mov
mov
ja
loop
(bad)
(bad)
call
fiadd
aad
sbb
fcom
push
sbb
(bad)
mov
mov
(bad)
jmp
cmp
xor
(bad)
sbb
pop
ds
xchg
fnsave
jp
mov
fldcw
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
xchg
arpl
ficom
mov
imul
add
shr
cmp
call
dec
jmp
retf
mov
mov
add
sbb
sbb
push
pop
sbb
xchg
in
(bad)
(bad)
call
(bad)
mov
jg
jmp
int
mul
add
out
pop
cmc
(bad)
(bad)
(bad)
inc
sub
movmskps
iret
jae
push
mov
add
cmp
xchg
xchg
lock
loopne
cld
addr16
fwait
jne
stos
shl
scas
ficom
das
push
fisubr
(bad)
adc
call
aad
sub
stos
pop
push
repz
(bad)
or
xchg
daa
(bad)
daa
and
(bad)
(bad)
(bad)
dec
xor
sbb
loopne
cmp
dec
adc
jmp
push
jbe
and
(bad)
call
push
clc
ds
in
ins
call
push
and
pop
sbb
jecxz
push
xchg
cmc
cmp
jmp
sbb
in
cmp
push
fchs
test
xchg
loope
clc
push
loope
pop
mov
rcl
enter
ins
add
mov
icebp
ins
das
mov
fcomip
(bad)
(bad)
jnp
retf
xor
retf
cmc
dec
std
inc
jae
sbb
(bad)
lds
(bad)
(bad)
(bad)
(bad)
sub
add
out
sbb
push
and
xchg
loopne
inc
pop
movs
sahf
dec
mov
(bad)
(bad)
(bad)
call
cmp
add
inc
mov
test
outs
jns
inc
(bad)
pusha
mov
(bad)
sub
mov
inc
into
add
pop
call
dec
aad
or
bt
cmc
(bad)
(bad)
(bad)
inc
outs
ja
test
aam
outs
repz
addr16
scas
rcl
loop
int
mov
mov
jmp
jecxz
cmp
jns
mov
fst
mov
mov
outs
lock
cld
(bad)
jmp
lods
mov
sahf
stos
rcr
jns
in
aad
cmp
(bad)
(bad)
(bad)
fadd
push
nop
pushf
pop
in
lds
cmp
xchg
scas
add
loope
aad
jae
(bad)
cmc
fistp
mov
fild
mov
(bad)
jmp
repnz
pop
mov
pop
movs
out
dec
mov
mov
(bad)
(bad)
(bad)
dec
stos
dec
popf
mov
(bad)
rcr
mov
fcom
fs
int
inc
xchg
xor
nop
ja
imul
(bad)
(bad)
jmp
or
fs
fld
sti
and
jb
fwait
repnz
fsubr
loopne
cs
(bad)
ror
xor
into
cmc
cmp
push
ret
(bad)
(bad)
dec
stos
loope
movs
push
adc
imul
push
push
pop
mov
out
aam
xlat
inc
fadd
(bad)
(bad)
call
pminub
sub
repz
cli
movs
sub
ror
cld
test
cmp
push
(bad)
jmp
or
pusha
inc
add
js
mov
push
int3
sub
leave
pop
xchg
inc
mov
push
fisubr
push
dec
movs
dec
icebp
(bad)
(bad)
call
cmp
test
jl
and
inc
xchg
mov
xchg
clc
or
adc
(bad)
(bad)
fbld
cmp
xlat
stos
imul
je
push
imul
and
icebp
stos
test
(bad)
push
jb
jnp
retf
cmp
(bad)
aad
je
sbb
pop
fdiv
and
(bad)
jne
lea
jmp
and
cmp
gs
retf
push
fidiv
or
fadd
cmp
out
clc
(bad)
call
inc
mov
into
movs
push
or
cmp
sub
inc
sub
pop
lea
(bad)
jmp
fst
cmp
push
or
inc
pop
(bad)
in
mov
lea
ror
inc
jge
ins
add
enter
(bad)
call
pop
fs
cwde
icebp
jno
and
xlat
rcl
pop
fidivr
jmp
cmp
outs
aas
cmp
dec
je
(bad)
(bad)
(bad)
jmp
addr16
cmp
rcl
out
retf
leave
dec
outs
cld
(bad)
mov
ffreep
push
je
movs
mov
call
pop
gs
test
mov
movs
sub
push
add
sub
(bad)
lahf
cmp
(bad)
(bad)
jmp
stos
sbb
mov
into
jne
daa
jne
jmp
test
push
sbb
das
sbb
outs
(bad)
(bad)
(bad)
dec
repz
mov
aad
jns
inc
add
ins
rol
in
sbb
cld
(bad)
(bad)
jmp
mov
call
movs
retf
pop
sbb
out
adc
sysenter
les
(bad)
(bad)
call
pusha
mov
ret
jns
ja
dec
pushf
jnp
(bad)
leave
push
pop
(bad)
retf
out
and
(bad)
(bad)
push
out
inc
jae
push
and
out
movs
cmp
push
dec
mov
push
test
ins
or
(bad)
jmp
mov
jbe
fcmovbe
push
push
or
jae
scas
add
sub
(bad)
(bad)
(bad)
push
rcl
ret
sub
imul
pushf
jno
aas
mov
jne
imul
rcr
fidivr
add
lds
cmp
mov
leave
hlt
(bad)
rcr
pop
int
sub
(bad)
(bad)
(bad)
cmp
stos
push
cwde
xchg
rcr
add
popf
jbe
pop
ja
ror
jge
mov
jmp
or
aad
jg
data16
sahf
inc
mov
push
(bad)
(bad)
mov
jge
jae
sbb
xchg
lods
and
add
pop
pop
cld
(bad)
push
repz
repnz
pop
fsub
nop
xchg
data16
or
(bad)
(bad)
push
jecxz
leave
xor
sbb
jnp
inc
gs
mov
adc
mov
jg
push
add
jo
pusha
popf
xchg
adc
pop
(bad)
push
cmp
pop
nop
mov
sbb
sub
adc
(bad)
call
les
or
and
loop
dec
jne
pop
mov
in
jo
xor
push
(bad)
outs
clc
push
test
test
xchg
movs
jnp
dec
lock
loopne
cmps
aad
lea
and
ins
retf
imul
pop
mov
inc
push
ins
test
add
mov
call
jno
pop
loope
movs
shl
push
rcr
popf
sbb
stos
(bad)
mov
repz
repnz
loop
fdiv
inc
ja
fcomp
sar
jmp
pop
mov
inc
mov
ja
pushf
and
push
jmp
div
push
xchg
cmp
(bad)
int3
out
push
mov
mov
bound
pop
cld
(bad)
push
arpl
ins
cmp
mov
stos
mov
nop
mov
and
loop
pop
xchg
(bad)
jg
jmp
and
dec
sub
and
adc
in
das
sar
leave
mov
in
rcl
mov
push
sti
pop
push
xchg
leave
leave
cs
je
xchg
cmc
pop
add
lahf
jae
cmp
inc
mov
mov
and
xchg
ds
fwait
xchg
ror
call
cmc
jbe
imul
fcmovbe
or
push
mov
inc
call
xchg
stos
fcomp
fist
sti
sub
daa
adc
call
mov
lea
(bad)
repnz
mov
sub
aam
stc
jae
fwait
(bad)
(bad)
push
sub
out
dec
int
test
pop
fnstcw
dec
hlt
rcr
sub
ja
jmp
movs
xchg
loop
daa
movs
psubusb
ins
mov
inc
fcomp
movs
mov
push
out
rcr
movs
add
sbb
dec
mov
in
movs
xchg
add
xor
jle
enter
inc
je
js
jno
ins
std
xchg
and
xor
(bad)
dec
sub
mov
mov
sbb
xlat
sub
mov
das
mov
jmp
pop
shl
jmp
inc
dec
call
(bad)
(bad)
jmp
iret
xchg
cmc
jo
add
xchg
sub
sub
push
xlat
jae
push
repz
or
push
mov
pop
fs
cmp
(bad)
dec
je
call
enter
lds
(bad)
(bad)
(bad)
jmp
push
jmp
lods
fld
sbb
mov
test
pushf
jmp
mov
jp
push
xchg
mov
and
aam
shl
jge
mov
push
cmc
mov
in
fiadd
cmc
(bad)
push
push
mov
sub
jecxz
clc
int3
jecxz
push
dec
(bad)
(bad)
(bad)
mov
jne
xchg
mov
mov
and
loop
sub
(bad)
dec
lock
daa
movs
push
pop
jg
imul
mov
pop
loopne
ds
sbb
inc
lea
mov
mov
jg
scas
cdq
(bad)
(bad)
(bad)
(bad)
clc
sahf
into
lahf
adc
pop
cmps
dec
mov
aam
in
xor
push
lahf
loop
dec
arpl
retf
pushf
(bad)
(bad)
(bad)
jmp
xchg
pop
pop
in
push
or
mov
jg
mov
mov
std
(bad)
jge
cli
mov
loop
push
fstp
mov
(bad)
(bad)
(bad)
jmp
cmp
ins
mov
or
retf
push
add
popf
arpl
(bad)
cmp
jbe
mov
push
std
push
xchg
jb
jge
jnp
pop
pop
sub
xchg
or
ins
cmps
adc
adc
out
lock
(bad)
ret
movs
push
push
fiadd
(bad)
cmp
out
ins
shr
xlat
aam
mov
pushf
push
or
in
dec
or
cmc
(bad)
(bad)
(bad)
inc
loope
jns
imul
mov
mov
mov
aam
cli
push
cmc
jne
ja
call
(bad)
imul
mov
adc
pop
inc
inc
lahf
sub
fwait
mov
push
push
xor
mov
imul
mov
imul
adc
dec
pop
sub
retf
pop
inc
add
in
loopne
lods
(bad)
(bad)
inc
jle
mov
iret
stos
lahf
and
xchg
ret
dec
push
rcl
xchg
(bad)
(bad)
(bad)
jmp
xlat
fstp
aas
fnstenv
jnp
sub
push
shl
jno
(bad)
(bad)
(bad)
dec
pop
test
popf
(bad)
stc
lea
pop
scas
or
enter
push
dec
(bad)
adc
dec
pop
cmps
(bad)
cli
mov
(bad)
(bad)
(bad)
inc
call
xchg
mov
jno
(bad)
iret
jnp
fld
aaa
cmp
sar
jg
(bad)
jmp
or
fscale
popa
dec
xor
cs
dec
in
imul
(bad)
(bad)
jmp
jmp
ins
ret
(bad)
xchg
xchg
mov
adc
sub
(bad)
and
(bad)
(bad)
(bad)
inc
sub
and
imul
add
mov
xor
mov
(bad)
(bad)
(bad)
call
and
and
xchg
loopne
or
dec
pop
jae
jg
mov
adc
(bad)
(bad)
(bad)
(bad)
mov
aaa
mov
sub
rol
or
and
mov
mov
and
jmp
rcl
lds
fcomp
test
adc
(bad)
call
jmp
loop
xchg
cmp
enter
jo
mov
das
es
not
sahf
aam
dec
inc
repz
and
(bad)
dec
xor
mov
mov
stos
jnp
and
stc
sub
inc
dec
cdq
scas
dec
push
cmp
fstp
xor
cmp
(bad)
(bad)
call
xor
cmc
scas
mov
jle
inc
lahf
addr16
fisttp
je
pop
push
adc
mov
(bad)
(bad)
dec
cmp
push
call
loope
push
(bad)
jbe
aad
cmps
(bad)
and
sub
(bad)
push
popa
cmps
push
popf
mov
lea
xchg
test
dec
or
cmp
push
mov
add
(bad)
push
push
test
lock
(bad)
loopne
adc
sbb
cdq
sub
cmp
(bad)
(bad)
(bad)
jmp
retf
mov
mov
outs
sbb
call
nop
sar
add
loop
push
sar
call
mov
jmp
push
sbb
mov
inc
movs
jbe
xchg
mov
movs
call
hlt
sbb
(bad)
dec
jo
mov
mov
out
sahf
mov
jecxz
cmp
ss
(bad)
(bad)
(bad)
cmp
adc
cmp
xor
or
into
xchg
pop
(bad)
adc
sub
in
inc
(bad)
into
(bad)
(bad)
(bad)
push
cmp
fs
push
push
jmp
repz
jmp
fnstcw
int
push
stos
push
cmp
cmp
dec
xchg
jbe
jecxz
mov
test
fcmovne
mov
(bad)
(bad)
jmp
push
(bad)
cmp
dec
jecxz
fsub
pop
pushf
popa
(bad)
xor
fidivr
bound
ins
cmp
mov
rcr
jmp
and
mov
fcmovnu
xchg
(bad)
(bad)
(bad)
(bad)
jnp
mov
pusha
add
pop
push
in
inc
mov
ds
sbb
icebp
cmc
aad
sahf
xchg
cld
(bad)
(bad)
call
jae
mov
test
inc
cmc
and
mov
clc
shl
(bad)
call
scas
xchg
xor
xor
jmp
sub
push
scas
push
mov
or
shl
pop
in
fwait
in
xchg
or
icebp
pop
cmp
(bad)
(bad)
jmp
test
pop
(bad)
test
push
je
fisttp
dec
shl
pop
push
lahf
sbb
(bad)
(bad)
(bad)
jnp
or
xchg
push
fild
jae
jns
mov
movs
pop
addr16
int3
mov
add
push
cmp
fist
in
mov
mul
(bad)
(bad)
jg
pusha
jle
imul
fimul
stos
daa
add
sub
jecxz
mov
(bad)
out
clc
(bad)
cmp
sub
lea
jp
jne
mov
push
cmp
inc
ins
xchg
ud0
dec
(bad)
cmp
ret
jmp
aas
fst
jmp
out
das
push
(bad)
call
dec
iret
jp
fist
test
inc
jae
loop
fsubr
add
inc
icebp
xchg
inc
ins
adc
and
xor
sub
push
xchg
push
pop
gs
lahf
xchg
je
call
add
inc
cmc
jmp
sti
(bad)
call
and
pop
(bad)
out
add
in
dec
or
aaa
pop
ud0
push
and
bound
cmp
enter
sbb
out
imul
addr16
sub
retf
cli
and
jo
sti
les
mov
daa
std
lahf
arpl
(bad)
call
inc
sub
in
imul
cmps
and
pop
jnp
nop
mov
mov
push
(bad)
(bad)
(bad)
push
int3
and
pop
loopne
add
call
mov
mov
xor
jmp
push
mov
loop
push
pop
test
xor
cli
dec
mov
pop
push
add
inc
cdq
fcos
(bad)
inc
and
xor
mov
mov
das
mov
inc
arpl
cmc
outs
repnz
jmp
inc
xchg
arpl
aaa
imul
dec
aad
pop
les
cld
push
std
jmp
movs
jmp
pushw
sub
and
inc
iret
push
(bad)
(bad)
call
sbb
or
mov
in
icebp
nop
xchg
lock
lods
xor
iret
adc
clc
(bad)
mov
(bad)
call
shl
sbb
lods
pop
jae
dec
cld
add
or
hlt
add
retf
dec
stos
fsub
frstor
ja
sub
dec
lods
bound
inc
bound
push
push
dec
add
jbe
ss
and
jl
aam
sti
(bad)
(bad)
cmp
cmps
xchg
stos
push
jbe
inc
adc
sub
mov
push
enter
(bad)
(bad)
(bad)
jmp
mov
sub
xlat
out
ins
add
test
movs
mov
xchg
punpcklwd
jmp
sar
(bad)
(bad)
push
inc
lea
dec
(bad)
mov
ins
shr
and
inc
sbb
into
push
arpl
sbb
push
pop
movs
sub
inc
cmp
mov
inc
push
sub
(bad)
(bad)
inc
ret
outs
cmp
jbe
and
dec
mov
scas
pop
mov
xchg
pop
push
scas
nop
or
clc
rep
fdivr
outs
mov
push
sub
dec
fdiv
mov
dec
mov
movs
ja
pushf
push
hlt
mov
mov
js
sbb
(bad)
(bad)
(bad)
jmp
pop
repz
cmc
adc
ret
and
call
pop
mov
(bad)
dec
jmp
scas
cmps
cmps
jbe
push
xchg
into
lahf
iret
loopne
jae
mov
ja
(bad)
jmp
mov
in
xor
sahf
cli
add
dec
mov
cvtpi2ps
adc
jmp
int
add
shl
dec
mov
(bad)
jg
jl
add
mov
stos
sbb
pop
cmps
cmp
loop
sub
mov
fbstp
push
test
and
add
ins
(bad)
inc
shl
and
mov
ret
lahf
hlt
stos
and
lods
(bad)
in
jno
movaps
in
std
sub
in
jge
outs
sbb
popa
call
ins
and
or
inc
mov
xor
(bad)
(bad)
push
scas
jnp
je
and
stos
aaa
cmc
push
out
pop
outs
xor
push
clc
test
ss
repnz
(bad)
(bad)
push
cmp
aad
push
inc
aam
xor
adc
push
icebp
mov
push
mov
pop
std
(bad)
jmp
mov
pop
inc
cs
xchg
arpl
mov
cmps
and
cs
push
loop
jbe
mov
or
gs
movs
sbb
mov
(bad)
(bad)
push
mov
cmp
(bad)
jmp
add
arpl
and
xor
(bad)
(bad)
(bad)
(bad)
mov
dec
xor
mov
adc
mov
inc
mov
inc
mov
fcom
cli
push
bound
xchg
or
and
cmp
dec
mov
pop
(bad)
call
push
fstp
dec
repnz
mov
loop
xor
ja
mov
xor
dec
cs
and
mov
inc
xor
test
mov
call
mov
add
les
cs
fstp
jp
fidivr
sbb
(bad)
push
add
or
leave
mov
les
leave
add
push
mov
cmp
(bad)
call
shr
xchg
sbb
pop
cmp
sub
jbe
push
add
sti
(bad)
(bad)
jmp
mov
loope
out
idiv
dec
xor
sahf
add
rep
cdq
mov
(bad)
(bad)
(bad)
inc
mov
push
retf
out
pop
aad
popf
xchg
jno
mov
push
jbe
dec
cmp
ds
std
(bad)
jmp
lods
fcom
xchg
call
popa
jl
fdiv
xchg
out
stos
xchg
pop
je
or
xchg
pop
icebp
scas
dec
and
out
cmps
cmp
push
push
mov
jbe
sbb
lahf
(bad)
call
sub
push
rol
sub
retf
fstp
fincstp
xor
xchg
push
adc
dec
(bad)
jmp
std
and
lahf
mov
iret
(bad)
cdq
mov
pop
dec
push
scas
add
(bad)
fidivr
add
xlat
cmp
cmp
ins
rcr
ret
(bad)
(bad)
js
jae
dec
outs
pop
test
outs
pushf
test
mov
jl
dec
inc
sub
add
shr
out
fld
add
push
shl
push
sahf
fcomip
(bad)
(bad)
out
and
stos
cs
(bad)
or
sti
jb
adc
sbb
and
cmc
call
aas
gs
stc
shl
sub
fs
(bad)
jmp
loope
pop
std
out
dec
fisttp
push
mov
stos
movs
call
(bad)
sub
inc
scas
jo
cwde
and
jmp
sub
scas
cmp
retf
xor
push
lods
cwde
jne
(bad)
(bad)
inc
dec
adc
jb
xchg
ds
aad
add
push
fiadd
push
adc
(bad)
push
mov
jl
sub
out
add
dec
aas
cmp
jns
lds
push
jb
call
cld
sub
inc
aas
inc
ret
sbb
daa
adc
add
(bad)
cmp
sbb
out
xchg
xor
jnp
fiadd
mov
or
(bad)
inc
std
shl
cwde
les
pop
sub
jns
aas
cmp
retf
aad
mov
jg
(bad)
cmp
aad
cmps
lahf
adc
pop
pop
clc
popf
push
inc
stos
es
or
and
clc
(bad)
push
jg
dec
adc
in
and
push
sub
xor
xchg
jnp
or
push
movs
cdq
push
test
movs
jecxz
jo
loope
pop
xchg
xlat
dec
shl
(bad)
(bad)
(bad)
call
das
push
fs
daa
enter
and
cli
push
aad
leave
in
adc
sbb
call
adc
inc
xchg
mov
stc
mov
call
fidiv
aas
sbb
pop
lods
(bad)
jmp
cmc
mov
xchg
mov
add
push
inc
(bad)
in
mov
jmp
sub
movs
jp
fisub
shl
push
mov
cmp
lock
or
(bad)
(bad)
dec
jp
les
pop
daa
jmp
add
fsubr
psubb
xor
push
mov
(bad)
call
pop
sbb
pop
sub
mov
jnp
movs
mov
mov
out
cli
(bad)
push
sub
(bad)
not
pop
mov
push
shr
inc
test
(bad)
fcomip
call
outs
mov
pop
jnp
movs
xor
jp
jl
mov
cwde
xchg
call
ret
jg
enter
push
cmps
xchg
out
into
add
add
cwde
or
test
sbb
mov
mov
popf
rcr
stos
sbb
(bad)
(bad)
(bad)
(bad)
fcom
add
add
rep
scas
lds
(bad)
rcr
(bad)
(bad)
dec
mov
xlat
inc
mov
in
xchg
in
or
lds
push
pop
xor
lock
(bad)
call
dec
cli
out
test
adc
sub
pushf
shl
and
loop
(bad)
pop
jl
in
movs
cmc
ss
and
inc
add
xchg
clc
aad
xchg
jbe
test
jmp
mov
push
lahf
ret
(bad)
mov
(bad)
fimul
sbb
mov
in
nop
lods
retf
xlat
jne
pusha
or
popa
dec
pop
or
and
mov
(bad)
(bad)
jmp
push
cmc
pop
sbb
xchg
pop
dec
out
cmps
adc
fst
xchg
lock
mov
inc
push
dec
mov
js
test
out
dec
or
and
xor
fcomip
(bad)
jg
cli
jb
retf
call
pop
push
lods
arpl
fild
sub
icebp
(bad)
(bad)
mov
aam
ror
gs
int3
push
mov
xor
je
add
jg
pop
hlt
sbb
fbstp
repz
call
(bad)
repnz
dec
icebp
popa
sbb
pushf
mov
movs
in
retf
repz
sbb
push
(bad)
fcomip
call
ds
repz
mov
or
jbe
imul
(bad)
(bad)
jmp
inc
cdq
shl
sub
movs
adc
je
push
bnd
inc
xchg
in
xchg
test
jmp
cvttps2pi
mov
std
(bad)
(bad)
mov
fldcw
sub
popa
mov
pop
xchg
fs
inc
jp
icebp
mov
call
xor
xor
ins
fisttp
bound
js
call
scas
enter
gs
ss
jmp
mov
outs
cmp
loop
jbe
mov
cli
gs
out
inc
xchg
gs
(bad)
jg
shr
retf
loope
mov
inc
arpl
out
in
(bad)
(bad)
(bad)
call
xlat
or
pop
lea
cmp
dec
fs
jp
pop
pop
mov
loopne
inc
mov
jne
(bad)
(bad)
(bad)
call
mov
sub
or
dec
push
mov
ret
movs
stos
adc
pop
in
dec
dec
adc
jmp
hlt
hlt
retf
test
xor
xchg
mov
push
cld
call
test
sti
inc
lods
xchg
sub
ins
adc
mov
inc
dec
push
outs
mov
mov
call
pusha
(bad)
dec
mov
jg
(bad)
jmp
mov
xchg
jnp
(bad)
adc
push
movs
mov
aad
adc
jne
mov
(bad)
(bad)
call
not
fsub
mov
adc
dec
jns
cmp
nop
xchg
fsub
test
mov
(bad)
(bad)
dec
inc
and
xor
inc
es
test
idiv
(bad)
call
mov
or
outs
cmp
stos
rol
mov
rcr
fdivr
(bad)
push
mov
adc
adc
imul
movs
int3
fnstenv
and
jge
add
jmp
mov
jge
scas
mov
pop
gs
or
enter
(bad)
(bad)
call
(bad)
and
inc
les
pop
jp
dec
test
rcr
sbb
inc
(bad)
call
sub
(bad)
cmps
mov
mov
inc
out
push
pushf
lock
cs
push
in
out
data16
inc
psllq
cli
mov
(bad)
(bad)
jg
dec
outs
mov
jl
jae
pop
addr16
dec
jge
mov
sahf
dec
inc
fs
movs
pusha
mov
inc
jae
fsubrp
push
pop
outs
mov
sbb
ret
pop
rol
retf
ja
push
clc
push
in
es
(bad)
(bad)
call
fst
xchg
mov
out
lahf
push
add
cmps
and
cmp
xchg
cmp
mov
mov
(bad)
cli
mov
jle
repz
rcl
fiadd
clc
ja
das
clc
aam
cwde
mov
test
in
dec
(bad)
cli
(bad)
icebp
(bad)
(bad)
(bad)
fdivr
mov
sbb
adc
es
nop
mov
fidiv
call
adc
cwde
aad
into
mov
push
in
cli
(bad)
push
aad
pushf
aad
lods
fcomp
pop
mov
jae
pop
or
cli
sub
add
in
sub
(bad)
(bad)
call
aas
lea
jmp
jmp
jno
in
sub
jb
inc
jp
in
sub
(bad)
out
cli
(bad)
jl
adc
js
cmp
ror
sub
jge
lea
in
jl
(bad)
(bad)
inc
sbb
ja
pop
xchg
jg
scas
jp
inc
push
xchg
mov
cmc
(bad)
mov
push
out
lahf
stos
xor
idiv
adc
call
jo
jns
fisttp
(bad)
jno
xchg
cmp
dec
fisub
sar
rcl
clc
mov
or
sub
(bad)
data16
sub
add
outs
mov
loope
adc
adc
mov
ror
dec
mov
(bad)
(bad)
mov
popf
std
jmp
test
mov
js
mov
and
aad
sar
dec
in
cs
adc
push
dec
aam
loopne
(bad)
cld
jmp
hlt
inc
jl
push
push
xchg
rcl
xor
xchg
aas
test
mov
(bad)
(bad)
(bad)
fbstp
sub
adc
mov
sbb
scas
repz
int3
dec
nop
pop
push
xchg
dec
ja
push
pop
mov
push
and
test
pop
dec
lds
stos
retf
cmc
div
icebp
jg
jg
jnp
mov
push
out
rcl
mov
(bad)
call
out
pop
seto
scas
stos
mov
cmp
sar
sub
inc
fstp
sti
stos
sub
(bad)
jmp
fdiv
mov
add
sbb
cli
pop
adc
xchg
sub
jge
cmp
jmp
sub
mov
add
push
cmp
nop
ds
cmc
(bad)
clc
(bad)
(bad)
jmp
mov
or
jmp
pop
mov
dec
xor
not
hlt
aaa
adc
std
dec
adc
push
mov
dec
(bad)
(bad)
(bad)
call
xor
pop
out
inc
and
jo
jns
int3
retf
jmp
sub
add
pop
mov
jne
cld
xor
rol
inc
out
push
mov
idiv
stos
sub
jecxz
imul
cli
(bad)
push
jno
inc
(bad)
dec
dec
or
or
push
out
jne
shl
mov
(bad)
(bad)
(bad)
call
sub
mov
stos
repnz
sbb
jl
(bad)
push
gs
imul
sub
cmc
scas
xchg
lock
(bad)
fldcw
mov
sub
(bad)
(bad)
(bad)
push
(bad)
sti
jmp
xor
sbb
jbe
jmp
pop
(bad)
enter
jmp
mov
inc
jno
movs
mov
call
cld
cmc
aas
or
das
xchg
mov
stos
and
mov
out
jno
pop
jmp
push
je
jecxz
add
push
sbb
mov
mov
retf
cli
(bad)
call
mov
daa
mov
int
adc
ret
enter
in
daa
fbstp
(bad)
ja
hlt
dec
xchg
stos
push
fdiv
test
(bad)
jmp
call
push
cmc
pop
inc
jno
in
push
jle
jno
fld
movs
push
imul
(bad)
call
stc
push
xchg
and
sar
cmps
mov
jbe
push
xchg
movs
(bad)
ror
pop
fsubr
or
jo
in
data16
mov
dec
js
loope
ret
sub
(bad)
(bad)
(bad)
inc
cmp
cmp
lods
aam
out
xlat
aas
je
outs
pop
jbe
sub
ins
mov
mov
cli
cmp
push
(bad)
mov
push
mov
mov
(bad)
cmp
dec
mov
jmp
aam
imul
call
xor
jbe
(bad)
(bad)
jmp
mov
adc
sbb
enter
pop
mov
clc
jns
inc
fdivr
(bad)
mov
sbb
ins
pop
fld
mov
aas
js
mov
dec
outs
test
push
std
mov
or
sub
das
sar
aad
mov
cmp
sub
clc
push
pop
mov
cmp
cmp
(bad)
dec
ror
add
cmp
out
xchg
jge
xchg
popa
(bad)
(bad)
(bad)
jmp
test
lods
push
adc
dec
add
gs
inc
call
sti
xor
stc
xlat
retf
std
lock
rcl
sub
jae
(bad)
(bad)
(bad)
jmp
clc
repz
mov
fldenv
cmp
test
push
fcom
call
call
lds
std
push
imul
jecxz
(bad)
jg
std
pop
or
outs
cwde
and
call
mov
fidivr
ja
jmp
hlt
xlat
jmp
mov
ins
xchg
mov
pop
pop
inc
(bad)
(bad)
(bad)
call
xchg
(bad)
inc
cmp
jne
lahf
and
cli
cmp
iret
adc
or
or
data16
std
xchg
out
jg
fwait
jecxz
in
jle
faddp
sub
ficomp
sbb
(bad)
dec
sbb
lods
and
in
arpl
sub
jnp
mov
xor
push
(bad)
(bad)
out
clc
xlat
ins
outs
mov
inc
xchg
mov
mov
sbb
push
pop
icebp
(bad)
inc
push
mov
lock
xor
loope
xlat
fldz
mov
cdq
(bad)
(bad)
mov
int3
xor
retf
dec
in
loope
adc
push
push
xor
fisub
(bad)
mov
cli
mov
push
xchg
aam
movs
dec
and
xor
(bad)
nop
stc
jo
adc
(bad)
(bad)
call
jnp
call
aas
push
cmp
arpl
cmc
das
clc
mov
test
cmps
idiv
loop
dec
push
xor
and
(bad)
(bad)
(bad)
jg
sbb
sbb
jno
mov
jae
mov
dec
loopne
(bad)
in
add
lea
dec
cld
pop
cld
adc
sub
daa
fld
pop
push
imul
(bad)
sub
push
loop
inc
dec
mov
xchg
(bad)
xor
imul
cld
xchg
xor
imul
adc
add
ror
cmc
and
cs
or
xchg
push
mov
adc
ins
and
fild
or
or
inc
gs
loopne
pop
and
je
pop
push
bound
outs
cmp
push
popa
(bad)
fcos
cmp
jge
dec
outs
dec
outs
jne
gs
mov
mov
pop
sbb
or
sahf
ret
push
ds
adc
push
push
inc
fist
addr16
and
adc
cmp
sbb
rol
add
or
inc
imul
cdq
into
arpl
fist
or
mov
and
xchg
cmp
(bad)
sbb
dec
sbb
xor
or
push
pop
es
les
gs
mov
sub
ror
add
pop
dec
mov
inc
or
dec
dec
adc
push
push
clts
adc
push
or
push
mov
or
dec
inc
inc
push
js
arpl
fnstsw
xor
es
(bad)
(bad)
inc
(bad)
mov
sub
mov
or
sub
xchg
dec
xor
lahf
mov
fs
xor
test
push
xor
add
dec
add
xor
lods
add
dec
inc
dec
inc
scas
inc
pusha
xor
mov
push
arpl
push
mov
jo
data16
or
add
ds
ins
lahf
xchg
mov
push
mov
js
inc
ins
sub
call
pop
xor
add
ins
sbb
mov
test
les
(bad)
out
ins
loop
xor
pop
scas
data16
sbb
inc
inc
fisubr
xor
sar
pop
adc
sub
cmps
and
dec
outs
add
xor
inc
or
pop
stos
rcr
add
xor
bound
or
test
or
imul
push
adc
adc
pusha
add
adc
xor
pop
xchg
mov
inc
test
sub
pop
sub
push
sbb
mov
ss
inc
or
std
inc
adc
cwde
sar
shl
or
or
add
dec
mov
in
xor
sbb
cmps
or
shl
add
mov
add
scas
inc
or
push
popa
imul
push
push
pop
add
or
push
or
cs
adc
imul
jae
or
dec
add
adc
test
jnp
dec
xchg
test
xor
xor
ins
imul
daa
fbstp
lds
call
dec
sbb
adc
xchg
mov
sar
lea
pusha
or
test
or
mov
push
ja
clc
and
or
imul
loope
add
add
add
add
jb
add
mov
cwde
inc
push
xor
je
xor
cmp
cmp
push
jl
adc
xor
sbb
test
jl
and
inc
enter
push
je
mov
scas
je
ins
sub
xchg
fcomp
jae
sub
jecxz
arpl
cs
(bad)
popa
ins
daa
cmp
pop
add
push
and
mov
push
dec
shl
jne
push
and
mov
push
mov
ror
push
(bad)
punpckldq
mov
add
cdq
ins
or
popa
xor
pusha
sbb
rcr
cmp
cmp
jmp
xchg
xchg
jle
xor
or
sub
mov
dec
mov
mov
sub
call
fs
pop
push
add
data16
jecxz
or
jo
gs
jno
sub
dec
inc
xlat
sbb
xchg
add
(bad)
nop
data16
dec
add
out
ss
ret
pusha
mov
mov
popa
jbe
retf
cmc
mov
add
add
xchg
add
nop
add
mov
and
test
(bad)
lds
pop
sti
jmp
push
push
fdivr
cmp
aad
ins
adc
mov
or
push
jns
mov
sbb
pop
sbb
ret
daa
fnstenv
aas
adc
btr
push
push
ins
outs
outs
and
enter
repz
add
push
mov
js
pop
fadd
or
dec
mov
jbe
ret
ret
add
adc
xlat
xor
popa
xchg
push
nop
popa
inc
push
das
jbe
imul
add
and
or
add
adc
inc
or
scas
mov
xor
and
adc
and
jae
pop
rcr
or
rol
jecxz
adc
ss
les
push
lock
or
outs
bound
pop
sub
sbb
push
bound
arpl
cs
cs
inc
inc
xor
pop
test
cs
dec
dec
ins
jecxz
outs
pusha
dec
je
dec
or
add
je
adc
and
arpl
pop
push
mov
jae
cmc
dec
scas
(bad)
pop
xchg
or
adc
xchg
xor
jne
cmp
push
pop
add
mov
inc
inc
push
inc
push
dec
push
mov
add
stos
push
outs
ins
scas
inc
mov
xchg
push
aam
or
fst
loope
xor
xor
pop
pop
imul
mov
je
jnp
inc
mov
rol
or
dec
test
imul
xor
ret
jne
inc
xchg
mov
cmps
pusha
dec
add
mov
add
push
test
or
add
add
loope
and
mov
push
loopne
jecxz
push
sbb
inc
aas
loop
and
popf
add
(bad)
xchg
lods
std
not
ror
adc
jb
cmp
cmc
dec
add
push
or
push
or
add
jmp
xchg
xor
pusha
cli
or
scas
add
inc
je
xor
inc
dec
jg
pop
push
push
adc
addr16
sub
or
and
adc
stc
jae
aam
xor
and
inc
mov
mov
popf
pop
adc
call
mov
test
jmp
sbb
sub
and
cmp
adc
xor
in
sub
dec
aaa
mov
dec
inc
jo
push
daa
or
push
adc
lock
jns
pop
std
or
mov
inc
cs
push
jne
je
inc
xor
xor
fistp
jecxz
dec
mov
mov
sbb
and
jecxz
(bad)
adc
cmp
and
les
xor
popa
mov
frstor
and
mov
mov
adc
jle
pop
mov
ror
adc
jmp
add
mov
lds
and
dec
arpl
or
jns
mov
push
mov
add
mov
and
inc
sbb
add
addr16
inc
sub
mov
adc
xchg
and
push
(bad)
inc
and
push
dec
bound
int
lods
outs
adc
repnz
sbb
add
add
add
pusha
add
sbb
sbb
dec
outs
outs
dec
jo
inc
pop
or
push
adc
sbb
mul
adc
push
popf
or
cmp
shr
cwde
sub
sub
fcomip
cmp
add
adc
movs
xor
push
retf
(bad)
ror
push
lea
popf
out
test
or
sub
pop
and
popf
jge
xor
and
add
mov
(bad)
out
imul
stos
in
push
mov
mov
mov
ja
jmp
push
call
mov
mov
mov
push
mov
mov
mov
fsubr
sbb
sub
sar
shl
mov
add
mov
jbe
xchg
cmp
mov
rcl
push
mov
inc
xor
aas
aad
mov
xchg
add
nop
mov
xchg
fld
out
mov
pusha
icebp
popa
inc
mov
icebp
mov
and
pop
mov
push
pusha
xor
pop
shl
mov
fldenv
cmp
fiadd
sar
mov
jo
lock
and
and
test
add
cmp
mov
mov
(bad)
lds
dec
cdq
xchg
mov
sub
sti
pop
pop
jecxz
retf
mov
xchg
mov
adc
or
xchg
fst
mov
std
mov
loop
xchg
and
test
mov
stc
test
jbe
dec
push
mov
mov
pop
push
jl
xchg
cmp
sub
loop
push
aas
xlat
mov
push
ret
push
mov
push
sbb
into
and
arpl
pop
mov
mov
mov
or
ds
and
in
add
xchg
cmp
gs
xchg
xchg
mov
ret
popf
and
jge
in
sub
mov
mov
sti
aad
adc
fnstenv
dec
inc
ss
arpl
add
or
push
push
into
and
das
add
add
shl
or
jnp
xor
jg
popa
xor
mov
pop
mov
jo
mov
rol
out
fnstcw
or
sbb
pop
xor
xor
mov
mov
pusha
xor
xor
mov
pop
sub
mov
inc
popa
(bad)
and
sbb
cmps
push
mov
mov
fisttp
gs
jnp
and
jns
xchg
sub
test
stos
cmp
das
fs
pop
or
xor
add
lods
mov
(bad)
cmp
mov
mov
daa
outs
icebp
lock
fcomp
add
mov
xor
pop
in
and
sub
mov
shr
sbb
adc
or
fs
xor
add
xchg
sbb
out
and
pop
mov
jns
imul
jb
outs
jb
ret
mov
mov
iret
and
pop
and
jmp
add
fcmovb
popa
arpl
cmp
mov
xor
pop
xor
popa
scas
push
mov
adc
dec
ror
fiadd
xchg
stos
adc
dec
push
and
xchg
bound
lods
push
push
(bad)
mov
test
cwde
adc
mov
add
cmp
js
inc
xchg
sub
adc
icebp
lahf
push
sbb
ja
fcmovbe
loopne
sbb
dec
add
mov
push
mov
sar
add
inc
bound
pop
push
lods
mov
js
or
sti
mov
inc
push
xchg
mov
jbe
mov
call
and
sub
push
mov
pop
or
add
enter
dec
mov
pusha
(bad)
(bad)
fs
and
test
and
iret
mov
aad
mov
imul
mov
shl
lahf
mov
cmp
sub
and
lahf
mov
outs
sbb
and
test
push
(bad)
cmp
and
pop
add
lock
pop
push
lea
rcl
xchg
jmp
mov
adc
mov
mov
xlat
inc
sbb
and
mov
xor
mov
inc
cld
sbb
sub
mov
add
test
shl
mov
inc
adc
cmp
outs
data16
popa
jae
sub
fiadd
pusha
and
lods
mov
mov
jno
add
inc
adc
cmp
pop
ror
cs
test
jb
movs
ret
xchg
mov
xor
mov
add
test
push
dec
and
jo
jecxz
mov
in
(bad)
and
or
leave
pop
lods
add
inc
adc
sbb
sbb
out
cs
cs
sbb
xlat
inc
arpl
cdq
inc
adc
les
or
daa
sbb
cmp
adc
nop
xchg
popa
xor
jmp
dec
clc
cmp
inc
dec
adc
test
dec
pop
inc
adc
mov
pusha
imul
pop
fs
add
sbb
or
cmp
test
sar
sub
shl
jb
sub
pop
pusha
xchg
mov
retf
inc
sahf
adc
shl
sbb
in
test
imul
pop
add
imul
cmp
mov
xor
cmc
xor
sbb
cdq
fnstcw
loop
dec
pop
sar
test
mul
adc
mov
popa
retf
icebp
mov
or
mov
das
lock
inc
rol
test
and
inc
mov
add
fild
inc
jle
jno
jb
mov
inc
add
jnp
or
jmp
mov
mov
dec
xor
jnp
cmp
mov
mov
and
ja
jns
sbb
mov
les
cli
sub
xchg
push
sub
dec
daa
and
jbe
mov
mov
mov
pop
inc
sub
sub
mov
outs
mov
mov
sar
xor
mov
and
popf
cdq
xor
mov
add
push
add
push
mov
rol
icebp
stos
adc
xchg
and
mov
das
test
mov
mov
outs
sar
sbb
push
jnp
dec
adc
mov
int
cmps
dec
mov
cmp
push
sub
add
mov
rol
mov
stos
hlt
sbb
(bad)
jns
inc
mov
dec
scas
dec
sub
adc
cmc
cdq
add
pop
add
mov
push
fs
xchg
push
ror
aaa
sar
add
shl
push
in
cmp
call
and
bound
add
popf
adc
std
xor
mov
mov
fsub
mov
mov
inc
push
inc
call
ins
inc
daa
or
lahf
mov
push
sbb
mov
push
gs
and
mov
add
rol
or
sbb
cmp
je
pop
outs
push
test
(bad)
mov
add
mov
leave
xchg
ror
popf
shl
cs
or
mov
sub
mov
mov
adc
jmp
xor
loop
les
dec
add
cmp
lea
cmp
cdq
xchg
imul
arpl
mov
xor
push
cmc
and
outs
rol
pop
push
mov
in
rol
pusha
fldenv
mov
add
add
cld
adc
sar
xchg
rdmsr
adc
jnp
das
sbb
inc
(bad)
sub
add
xchg
add
push
or
jo
das
inc
mov
xor
mov
push
sub
or
xchg
xchg
xor
jnp
movs
push
adc
ror
and
xlat
and
ret
or
loopne
sbb
mov
mov
mov
das
pop
inc
pop
mov
int
push
pop
popa
mov
ret
add
pusha
pop
mov
xchg
mov
mov
stos
add
adc
pop
mov
in
jge
add
add
jecxz
xchg
cmps
test
out
retf
adc
add
out
sbb
movs
cmc
sbb
pop
mov
imul
(bad)
sub
fsub
jp
mov
xchg
pop
ds
out
inc
push
daa
adc
dec
loope
mov
stos
out
push
mov
inc
adc
jge
lds
xor
mov
mov
mov
mov
movs
adc
sub
mov
adc
add
loop
popa
lods
sar
dec
out
out
jg
pop
push
rol
scas
mov
loop
adc
cmovs
daa
fwait
sar
adc
inc
cli
test
sub
mov
sub
xor
test
outs
shl
jle
mov
inc
ss
and
or
dec
and
sbb
adc
and
or
iret
mov
dec
add
push
arpl
rcr
add
pop
xor
xor
es
xchg
xchg
xor
pop
adc
nop
and
dec
sbb
repnz
xor
xor
aam
add
nop
mov
xchg
dec
mov
xchg
adc
cs
dec
and
push
and
xor
sub
pop
jmp
xor
pop
mov
aaa
ins
and
pop
xchg
sbb
ins
xor
jbe
ja
cs
fisttp
mov
fwait
mov
mov
mov
mov
lds
pusha
dec
add
and
inc
fsub
pop
mov
dec
sub
mov
add
call
movs
(bad)
rol
push
push
cmp
pop
in
aam
into
repnz
add
mov
adc
add
test
mov
or
stc
mov
mov
ret
mov
inc
push
repnz
loopne
xor
cmp
push
xor
clc
pusha
xor
xor
sti
add
(bad)
xchg
pop
in
sbb
xchg
xchg
and
sub
inc
or
sub
(bad)
xor
das
rol
push
lahf
adc
mov
mov
inc
adc
loopne
sbb
cmp
xor
mov
mov
xchg
fild
add
jge
and
sub
and
sub
les
movs
bts
mov
in
adc
or
xor
push
ret
es
cmp
mov
call
adc
test
push
sub
adc
cmp
scas
rol
sub
mov
mov
or
sbb
enter
outs
xor
or
jmp
sbb
mov
aaa
push
call
adc
sbb
out
imul
lods
sbb
inc
add
inc
dec
add
or
add
outs
mov
ja
out
adc
push
xor
nop
shl
pop
cmps
scas
and
es
pop
add
pop
adc
jns
cs
pop
push
xor
call
add
and
mov
je
test
retf
mov
and
mov
or
push
push
pop
sbb
or
mov
mov
push
pop
and
push
adc
mov
dec
mov
jo
or
mov
jecxz
sub
lock
inc
pop
movs
mov
mov
je
or
cdq
push
or
and
xor
test
pop
pusha
mov
mov
sbb
sub
add
mov
mov
or
mov
adc
jnp
pop
add
push
and
or
xor
add
add
dec
aam
lds
pop
xchg
loopne
adc
pusha
(bad)
sti
repz
sbb
loopne
sub
mov
mov
jno
jnp
mov
ja
add
inc
xchg
(bad)
jmp
movs
adc
fild
(bad)
movs
or
scas
xor
and
cs
(bad)
jle
xchg
outs
mov
or
test
imul
adc
adc
adc
movs
or
jns
pop
inc
pusha
in
cmp
sbb
pop
test
ja
les
mov
mov
xor
mov
push
xor
outs
push
xchg
imul
movs
(bad)
adc
sbb
xor
inc
mov
xor
sbb
push
adc
out
pop
mov
or
aad
test
fld
jno
pop
shl
arpl
sbb
sbb
mov
dec
ror
cmps
pop
mov
pop
ins
mov
lock
shl
jbe
rol
mov
ss
rol
sbb
or
mov
mov
mov
add
push
add
jno
adc
sbb
lock
aaa
sub
call
popf
mov
add
or
or
arpl
xor
sti
xchg
xor
pop
push
mov
adc
inc
add
rcl
das
pop
inc
test
mov
mov
cmp
fstp
pusha
push
out
dec
sub
and
ins
and
test
outs
mov
push
sar
leave
push
and
inc
add
xor
dec
aas
or
rol
je
rol
add
nop
and
(bad)
jl
xchg
mov
cdq
sar
adc
je
jmp
mov
pop
push
xchg
mov
mov
dec
inc
add
mov
sbb
or
xlat
xchg
shl
adc
push
sar
std
das
mov
mov
push
or
sub
fiadd
mov
add
mov
aam
(bad)
loope
push
or
loopne
fild
adc
and
jbe
scas
mov
adc
xchg
add
cmp
xor
mov
popf
mov
mov
cmp
and
or
jns
jno
and
add
mov
shr
ins
xor
and
xor
sub
lods
adc
sbb
stos
ss
shr
mov
clc
or
dec
ja
add
inc
arpl
call
inc
and
lods
jge
ins
jmp
sub
jo
les
inc
and
sbb
inc
aaa
aaa
shl
mov
sbb
mov
dec
jl
inc
aaa
xor
push
ror
jno
xchg
sar
inc
in
mov
ror
mov
jno
fild
jns
sar
inc
test
leave
mov
mov
mov
pop
jb
or
imul
mov
call
pusha
mov
hlt
ror
jo
add
sbb
mov
ror
mov
xor
jno
mov
dec
sub
loop
or
mov
mov
cs
add
mov
arpl
mov
psrlq
pop
add
sar
int3
test
xchg
addps
sub
mov
add
sahf
or
sub
mov
xor
mov
adc
add
jnp
add
mov
pop
fistp
fstp
test
inc
add
pop
jo
int3
les
xor
(bad)
pop
dec
add
xchg
loope
sub
in
pop
inc
sbb
inc
adc
sub
sbb
call
adc
mov
mov
mov
pop
jne
xchg
mov
or
add
lods
(bad)
test
ror
adc
sub
mov
mov
push
pusha
shl
out
xchg
cwde
mov
push
and
and
mov
jge
pop
bound
mov
and
test
add
mov
dec
sti
repz
jl
mov
mov
inc
or
sub
in
and
push
push
add
mov
xor
nop
sub
sar
add
xchg
sub
dec
adc
or
stc
loope
mov
push
aad
push
add
or
lds
jecxz
pop
or
pop
add
scas
jge
xor
adc
mov
ja
rol
inc
xchg
mov
mov
ror
mov
mov
jp
mov
idiv
lgs
or
stc
push
sub
mov
or
add
or
sbb
rol
dec
pop
pop
das
aad
movs
test
ret
adc
int3
dec
lods
mov
pop
sbb
arpl
mov
jns
inc
dec
je
mov
fadd
or
mov
mov
adc
sbb
cmc
push
dec
inc
test
les
xchg
inc
fs
(bad)
jns
adc
mov
jg
and
fnstenv
in
and
jmp
mov
push
sub
adc
cs
push
ror
jge
dec
adc
xor
xor
or
rcl
add
and
xchg
test
rcl
sub
mov
jno
ffree
rcl
mov
jle
sub
dec
xor
mov
xchg
xchg
sub
push
inc
aam
sbb
or
and
adc
xor
adc
adc
push
push
dec
push
repz
push
or
mov
jb
mov
sub
push
jb
loopne
shl
inc
(bad)
mov
mov
mov
jmp
mov
imul
shr
mov
push
and
xchg
add
cmp
mov
mov
sbb
sub
test
bound
adc
xor
aam
add
rcr
es
pop
stc
and
or
xor
inc
int3
pop
mov
nop
dec
adc
movs
cmp
xor
or
mov
mov
call
and
jne
jb
mov
sbb
or
lahf
sub
dec
ret
inc
rcl
and
sbb
or
push
and
and
mov
pop
mov
jno
add
std
mov
and
sub
aaa
jo
adc
mov
mov
adc
arpl
fist
retf
sbb
inc
mov
mov
sbb
mov
retf
mov
jno
stos
outs
xchg
cwde
xchg
stos
xor
adc
add
push
jnp
ret
sbb
and
add
jbe
adc
pusha
mov
add
cmp
dec
(bad)
shl
adc
sbb
xchg
mov
or
aad
add
ror
push
leave
sub
xor
and
std
sub
aaa
mov
sbb
ret
mov
or
sub
mov
inc
loopne
shl
shl
mov
pusha
outs
cdq
sub
add
mov
sub
call
add
xor
imul
pop
icebp
mov
sbb
jnp
repz
push
and
xchg
hlt
ror
xor
sub
mov
lock
xor
sbb
imul
push
cwde
mov
lahf
cs
inc
and
cs
xor
inc
push
push
mov
mov
call
dec
mov
and
push
and
xchg
adc
imul
shr
jo
sar
adc
adc
lods
xchg
pusha
mov
outs
mov
movs
(bad)
jae
dec
mov
aad
cmp
jne
mov
adc
pop
and
call
test
loopne
sub
xor
and
inc
cmp
std
push
dec
jb
xlat
mov
adc
das
xor
sbb
push
xchg
inc
sar
jne
sar
pop
add
aaa
daa
push
mov
mov
push
add
xor
(bad)
adc
or
xor
adc
mov
sar
clc
rcl
and
mov
xlat
out
das
ret
adc
sub
cmc
sar
cmp
std
push
ja
mov
pushf
mov
mov
push
push
mov
je
lock
adc
pop
rol
xchg
sbb
imul
and
addr16
push
jno
sub
lahf
pusha
rol
xchg
or
mov
loope
fwait
movs
or
mov
push
pop
mov
push
pop
dec
sub
mov
adc
shl
adc
pop
ror
pop
ret
add
ret
jl
push
inc
mov
mov
and
add
lock
ret
pop
xchg
or
mov
and
push
iret
cwde
mov
gs
inc
fs
je
mov
push
xchg
lds
rcr
mov
add
push
loop
push
(bad)
retf
push
add
and
stos
mov
inc
inc
mov
xor
sub
pxor
dec
sbb
cs
xor
ficomp
add
test
sbb
add
mov
adc
pushf
and
adc
adc
pop
sbb
(bad)
jle
ror
ror
push
retf
or
push
sub
dec
aad
or
xchg
les
sub
lds
jnp
mov
aaa
mov
in
push
pop
xor
and
mov
push
sbb
and
movs
add
popa
pop
inc
push
xlat
retf
sub
xchg
shr
adc
(bad)
movs
pop
add
sbb
in
mov
mov
cmp
mov
or
ror
shr
(bad)
add
ror
adc
rol
test
add
shr
inc
imul
jecxz
test
adc
sti
push
cwde
movs
dec
sub
cmp
mov
inc
sub
pop
xchg
cwde
cmp
das
sub
adc
or
dec
mov
inc
add
ret
mov
ins
jecxz
adc
mov
xlat
add
inc
and
mov
and
and
leave
sub
or
les
leave
pop
lods
es
repz
mov
sbb
push
jecxz
mov
xchg
ret
xor
mov
push
cmp
jno
rol
imul
or
sbb
add
pop
cmp
inc
push
adc
xor
arpl
popf
inc
push
icebp
adc
test
dec
(bad)
mov
sbb
inc
xchg
pop
sub
rcl
rol
adc
retf
add
adc
lods
inc
stos
xor
sub
push
jg
mov
aam
cmp
aas
mov
dec
fwait
jno
mov
inc
dec
add
mov
pop
inc
call
loopne
popf
adc
or
ror
ins
xchg
pop
cmc
jle
test
test
mov
and
cmp
aaa
adc
mov
or
push
adc
mov
pop
mov
test
mov
cmp
mov
mov
rol
or
sub
stos
sar
rol
or
xchg
inc
lea
mov
mov
dec
rol
mov
push
mov
sbb
jns
sbb
cmp
add
or
sar
ss
xor
push
mov
add
adc
pop
push
mov
add
xor
mov
es
adc
les
arpl
and
xchg
xchg
inc
push
mov
push
adc
sbb
adc
das
pop
sar
sub
push
repz
mov
inc
mov
add
mov
dec
cmps
or
sub
shr
rol
mov
jl
mov
adc
rol
xchg
add
xchg
loope
sbb
xor
outs
push
sbb
push
inc
add
les
shl
pop
test
jmp
adc
mov
mov
push
push
push
xor
and
and
mov
iret
adc
dec
ins
xchg
popf
xor
test
sub
inc
or
cmc
cmovb
adc
shl
mov
push
sub
or
sbb
push
adc
mov
pusha
add
pop
jmp
xchg
xchg
and
call
and
das
xor
lock
mov
shl
test
adc
ins
imul
test
fstp
mov
sub
lds
sub
or
push
(bad)
scas
or
push
pop
xor
mov
test
adc
xchg
mov
fld
movs
loopne
imul
adc
adc
jns
add
xchg
shl
push
push
mov
dec
cdq
xor
mov
shl
push
mov
lods
mov
shr
xchg
adc
outs
popa
cmp
sti
xchg
cmp
fwait
xor
push
and
es
scas
out
mov
ret
xchg
shr
ror
pop
mov
mov
lahf
maskmovq
test
or
test
aad
inc
pusha
add
mov
and
push
std
push
and
out
add
adc
sar
add
les
xor
sub
cmp
xor
(bad)
cmps
bound
xchg
mov
adc
and
pop
mov
or
dec
xor
push
add
xor
inc
cmp
cli
or
ins
pop
out
sbb
jno
cmp
push
and
dec
adc
psubsb
cmp
mov
xor
out
push
test
lock
or
sub
pop
xor
cmps
or
and
lds
xor
sub
add
js
aas
arpl
or
mov
add
pop
mov
mov
ins
in
mov
add
and
(bad)
call
cmp
push
pop
sub
mov
adc
fistp
mov
cwde
mov
push
out
mov
xor
(bad)
add
rol
mov
shl
or
rol
rcl
arpl
imul
sub
xor
(bad)
mov
or
dec
mov
shl
and
test
lock
test
adc
mov
inc
mov
add
mov
mov
ins
jae
ds
mov
cwde
xor
ret
push
inc
push
sub
xchg
arpl
inc
and
rcl
xchg
stc
pop
hlt
mov
ror
add
inc
mov
xor
jecxz
mov
mov
xchg
add
push
lods
add
adc
add
outs
pusha
sbb
or
std
mov
add
mov
ror
scas
adc
xor
adc
sbb
xchg
adc
dec
xor
sbb
mov
lds
daa
or
xor
sub
xlat
push
test
imul
pusha
ret
outs
out
aaa
sbb
ins
(bad)
mov
adc
shl
cmp
daa
mov
mov
mov
cmp
xchg
call
mov
mov
daa
inc
inc
pusha
(bad)
mov
and
adc
ins
rcr
add
(bad)
xor
mov
xlat
imul
push
ror
pop
and
dec
shl
sub
sbb
cmps
push
pusha
cmp
mov
rcr
shl
xchg
je
add
push
cmp
test
dec
mov
pop
mov
mov
mov
lods
sar
mov
adc
add
call
hlt
inc
sbb
add
aam
cdq
jno
mov
ins
std
mov
cwde
loopne
es
mov
push
adc
bswap
mov
fs
and
pop
push
adc
xchg
or
and
lea
shr
add
xor
jge
test
and
xor
imul
loope
or
xlat
sub
dec
bound
add
pop
mov
dec
add
adc
mov
in
adc
rol
jae
and
ins
in
add
mov
jns
add
and
out
add
lock
inc
mov
add
adc
mov
shl
push
or
xor
movups
ffree
mov
jae
dec
adc
aam
sar
adc
movs
stos
adc
test
or
jns
mov
sbb
adc
sub
retf
mov
ror
or
sub
addr16
ret
and
push
adc
sbb
mov
cmp
not
(bad)
sbb
inc
jecxz
sbb
stos
popf
scas
add
mov
aad
ins
shl
mov
test
imul
rcr
mov
mov
sar
add
xchg
adc
mov
mov
mov
adc
adc
retf
aad
push
and
pop
ret
nop
inc
pusha
outs
sub
add
add
sub
dec
mov
sub
stos
adc
jno
mov
inc
dec
pusha
fwait
xor
mov
or
adc
xlat
mov
jle
and
xchg
mov
std
ror
cmp
xor
or
mov
mov
and
mov
rol
sub
les
lock
imul
test
push
sub
xor
push
inc
into
xchg
arpl
dec
mov
lods
push
jg
or
test
test
add
shl
jmp
stos
jnp
add
gs
mov
mov
dec
mov
dec
add
call
sbb
and
daa
cwde
push
sar
and
cmp
add
nop
and
mov
sub
cmp
or
add
jnp
sub
adc
xor
sub
inc
mov
add
stos
dec
std
mov
or
(bad)
int
sbb
arpl
xor
test
and
gs
dec
or
rol
aaa
rol
jg
pop
pop
add
mov
or
or
mov
les
or
pop
jecxz
inc
mov
test
jmp
xchg
std
dec
loope
fwait
lods
cmp
xchg
movs
rol
cmp
xchg
sti
fisttp
dec
imul
out
and
mov
and
dec
sbb
inc
lds
sub
scas
sub
and
push
dec
dec
pop
push
add
mov
mov
sub
repz
mov
xor
stos
inc
test
inc
cmp
std
mov
dec
mov
push
add
pop
cmp
or
rol
daa
mov
sar
sti
xchg
and
fisttp
rol
add
inc
inc
test
sbb
and
cwde
inc
xchg
dec
mov
push
ror
lea
das
mov
xchg
shl
sahf
cmps
cmp
and
push
call
sbb
out
mov
ret
sbb
ror
xchg
sbb
pop
push
add
inc
and
add
ror
fnstcw
adc
xlat
xor
pop
pop
sub
adc
lock
mov
iret
sub
and
ja
daa
loopne
push
inc
iret
shl
push
xchg
mov
addr16
outs
and
sbb
pop
scas
jno
adc
shl
push
and
xchg
ror
scas
inc
jl
lods
aad
adc
mov
sub
adc
and
ret
ins
xchg
les
adc
jnp
jp
sub
mov
cmc
inc
and
and
xchg
js
dec
retf
xor
cmp
and
sub
cvtps2pd
adc
inc
mov
inc
xor
push
or
sub
xchg
lea
xchg
jge
add
sbb
pop
ret
add
jb
jne
pop
mov
xchg
cdq
les
mov
add
sub
pop
or
movs
fs
add
push
push
(bad)
mov
ins
xor
call
push
jns
sub
aas
les
dec
or
push
popa
fs
outs
cdq
adc
pop
stos
sub
pop
test
sbb
in
push
fnstcw
xor
scas
and
mov
xchg
stos
add
ret
mov
or
mov
adc
inc
jo
sub
add
adc
cs
pop
inc
jo
fcom
adc
sub
inc
imul
adc
add
ror
stos
lds
bound
lds
xchg
and
sub
sub
loope
les
stos
inc
popa
sub
cdq
gs
xor
and
pop
jno
adc
fst
push
cs
aas
pushf
push
push
adc
or
xchg
pop
sbb
nop
ret
inc
add
aaa
mov
or
fwait
adc
cdq
dec
sbb
jne
add
ins
sub
inc
sbb
push
(bad)
xchg
dec
lods
push
test
sub
pop
ja
and
sub
cmp
and
dec
inc
jo
add
mov
add
daa
pushf
adc
and
push
shl
fwait
jmp
les
mov
inc
or
shr
mov
jne
push
mov
xor
jmp
stc
adc
cmp
ss
aaa
js
in
movs
popf
shl
push
bound
fbld
jmp
bound
adc
or
arpl
mov
and
ror
sti
and
pop
adc
popa
and
cmp
dec
mov
popa
add
rcr
in
cmp
int
mov
inc
lods
mov
sub
sets
add
test
xchg
mov
and
imul
or
lods
or
scas
movs
push
mov
add
cld
aaa
xchg
js
cdq
mov
dec
fld
inc
or
xor
jb
mov
adc
push
xchg
push
push
sbb
add
fnop
mov
or
dec
or
pop
xor
mov
mov
push
xor
xchg
inc
inc
ss
add
xor
(bad)
mov
fs
and
stc
cmp
mov
movs
lock
sar
shr
int
or
sub
add
cdq
adc
lahf
cmc
mov
lods
mov
clc
xchg
sbb
cmp
add
out
cmp
cmp
cmps
adc
mov
add
xchg
cmp
mov
ret
pop
sbb
mov
push
outs
(bad)
enter
push
jb
or
leave
xor
popa
sub
add
rcl
sbb
adc
dec
inc
stos
cmp
(bad)
cs
mov
mov
fcmovne
inc
pop
(bad)
out
in
sahf
add
mov
shl
jo
mov
adc
add
add
ins
xor
add
sbb
mov
inc
push
and
mov
mov
ins
sub
inc
dec
or
inc
iret
cmp
cmp
addr16
add
das
or
les
pop
adc
add
push
test
add
ror
xor
and
nop
or
jbe
fcomp
cmp
mov
ins
add
cmps
sbb
test
ins
cmp
add
sar
aad
adc
jnp
and
add
add
and
push
adc
or
add
cld
push
pop
add
dec
add
and
rol
push
jo
pusha
dec
add
dec
inc
adc
push
shl
dec
cdq
adc
or
and
(bad)
lock
add
popf
popa
adc
dec
dec
push
adc
cdq
dec
add
test
xor
dec
add
dec
adc
and
dec
dec
lds
in
ror
dec
inc
or
add
add
pop
sbb
adc
add
sub
daa
dec
dec
and
push
xor
dec
and
add
cmp
pop
test
fiadd
adc
dec
and
add
and
or
and
cdq
lds
and
xor
and
dec
cdq
add
or
and
dec
dec
or
adc
mov
or
adc
or
cdq
add
(bad)
dec
xchg
or
inc
inc
or
adc
dec
push
loopne
and
and
mov
dec
outs
and
dec
mov
dec
test
inc
lock
dec
dec
or
and
add
icebp
adc
and
and
jecxz
add
inc
nop
test
cdq
dec
dec
shl
sub
cdq
add
pop
adc
or
and
aas
cdq
inc
mov
in
mov
sbb
fild
dec
push
or
push
add
dec
sub
mov
and
or
or
dec
add
dec
adc
xchg
add
push
cdq
add
or
dec
dec
mov
mov
and
mov
add
sub
push
and
sub
dec
and
dec
imul
push
rcl
and
rol
add
add
dec
sbb
mov
push
and
dec
push
or
add
dec
and
dec
push
xchg
or
dec
push
and
mov
add
adc
test
jbe
pusha
push
and
sub
adc
and
xor
pop
mov
daa
pavgb
inc
dec
and
and
inc
mov
ror
dec
inc
mov
inc
sub
ror
test
push
gs
adc
add
adc
push
rol
pusha
inc
adc
stos
sub
pop
aaa
mov
les
dec
cmps
rol
sbb
pop
add
dec
stc
and
shl
and
dec
xchg
or
and
add
push
add
jecxz
add
mov
movs
dec
test
sub
sub
dec
xor
and
movs
adc
or
daa
and
lods
dec
dec
mov
inc
add
pop
rol
add
test
add
or
and
movs
scas
lods
call
sub
aas
cmps
xchg
cmps
push
inc
pop
dec
dec
jno
add
add
inc
dec
and
mov
sub
dec
pop
add
sub
loop
sar
push
nop
push
or
dec
stos
jno
dec
add
push
sub
add
mov
add
stos
or
or
inc
dec
ss
mov
aam
inc
nop
dec
dec
add
sub
push
les
add
icebp
dec
inc
adc
push
dec
adc
add
repz
shr
push
add
dec
and
adc
icebp
dec
add
or
mov
sbb
push
xor
pop
dec
dec
or
push
pop
jmp
and
push
adc
dec
adc
add
dec
adc
dec
add
add
and
inc
adc
add
push
pop
and
mov
imul
outs
add
jecxz
mov
pusha
inc
sub
(bad)
in
mov
dec
add
pop
and
cmovg
shr
add
dec
push
popa
mov
mov
xor
push
or
and
and
mov
and
dec
sub
add
stos
mov
scas
and
dec
add
shr
dec
test
add
and
enter
and
add
pop
add
sub
pop
sbb
inc
pusha
and
dec
and
pop
add
pusha
jg
jg
add
push
dec
jge
push
inc
mov
jnp
adc
or
fisubr
sub
dec
dec
dec
inc
sub
add
add
dec
adc
dec
push
mov
inc
dec
dec
push
adc
sbb
push
xor
dec
dec
dec
push
xor
pop
dec
dec
push
mov
dec
dec
dec
sub
or
dec
dec
sub
adc
add
dec
adc
or
movs
or
dec
adc
or
dec
adc
or
dec
adc
or
dec
dec
adc
or
dec
dec
adc
or
dec
dec
adc
or
dec
dec
adc
or
dec
dec
adc
movs
or
dec
adc
add
inc
dec
dec
and
rol
sbb
mov
push
adc
dec
dec
add
dec
add
or
adc
add
or
add
or
dec
inc
or
and
dec
sub
or
or
add
dec
dec
add
and
ror
pop
inc
adc
or
adc
dec
adc
dec
dec
adc
dec
dec
adc
dec
sub
sbb
in
cmps
add
dec
add
dec
sub
add
dec
movs
adc
dec
pop
adc
and
add
mov
cmp
pop
add
sub
scas
and
sbb
cmps
dec
adc
sbb
ss
outs
and
es
push
adc
add
nop
and
mov
dec
and
add
and
xchg
inc
enter
push
pusha
or
arpl
adc
push
push
or
push
arpl
das
nop
pop
and
inc
gs
inc
push
push
push
and
and
xor
xor
and
data16
inc
and
inc
dec
loopne
in
and
inc
pusha
inc
adc
(bad)
xor
push
xor
add
dec
and
pop
xchg
and
xor
or
ss
cmps
pop
lods
xor
add
or
arpl
data16
xor
xor
mov
and
push
xor
int
jo
imul
adc
add
ss
cld
sbb
push
inc
push
dec
and
push
out
jge
and
push
outs
or
mov
into
pop
pop
or
mov
dec
and
sar
in
xchg
push
and
(bad)
ss
adc
test
and
sbb
push
add
add
mov
pusha
gs
add
mov
and
xor
arpl
and
lods
cmp
push
call
add
pop
mov
add
mov
sahf
and
push
sbb
dec
push
fs
adc
pusha
and
xor
repnz
inc
add
add
sbb
test
add
dec
xchg
and
and
rcl
cmp
fbld
and
adc
xor
dec
add
add
test
add
xor
dec
sahf
cmp
dec
and
and
ror
mov
in
jns
push
dec
add
and
sub
add
pusha
dec
and
xor
cdq
dec
mov
add
and
icebp
sub
in
stos
in
push
add
pop
in
dec
and
add
push
or
sub
in
xor
inc
add
jns
xor
and
xchg
add
push
arpl
add
dec
arpl
and
outs
outs
fs
add
dec
and
sub
push
arpl
dec
not
add
add
add
dec
and
and
or
pop
leave
add
push
inc
add
xchg
inc
adc
and
cmp
and
add
aas
push
add
dec
loop
repnz
and
stc
adc
and
add
add
inc
lock
add
add
dec
bound
pop
pop
dec
mov
add
in
and
mov
ss
or
add
or
sahf
bound
and
dec
add
sti
add
add
stos
and
add
adc
das
dec
or
xchg
pop
outs
dec
push
adc
add
push
mov
add
sub
and
pop
or
adc
je
push
push
sub
loope
mov
xor
or
gs
in
cwde
shr
addr16
xor
or
mov
jno
lea
rcl
add
mov
xor
pushf
imul
push
push
add
push
dec
dec
dec
and
je
add
cmp
mov
rcl
xor
inc
repz
push
add
add
jecxz
xchg
add
add
fild
mov
xchg
mov
or
dec
int
inc
xor
daa
or
add
xchg
pop
leave
add
push
inc
inc
aad
pop
add
js
idiv
sub
gs
ss
bound
popa
ins
loopne
push
xor
arpl
ins
std
ins
xor
dec
outs
push
adc
jns
push
cdq
mov
mov
sbb
and
test
loopne
or
or
daa
xor
push
jbe
sbb
ds
adc
adc
ins
sbb
sbb
push
mul
test
test
repz
push
enter
inc
jns
loopne
ins
pusha
inc
js
push
fisubr
dec
and
ins
data16
ja
push
mov
and
add
dec
adc
inc
addr16
sub
shl
and
xor
push
outs
mov
mov
adc
adc
(bad)
outs
je
jo
outs
sub
inc
xadd
or
pop
dec
imul
push
outs
jnp
or
jne
jmp
adc
pop
pop
rcr
or
arpl
sbb
push
fldcw
adc
mov
mov
lock
sbb
jb
pop
push
outs
push
cmp
xor
je
cmp
adc
imul
fld
adc
das
daa
nop
push
adc
sbb
popa
push
or
pop
aam
mov
adc
outs
inc
dec
es
and
or
repnz
push
adc
push
gs
xor
mov
dec
sub
sub
and
push
push
sti
add
inc
jl
or
xchg
je
push
pop
jge
fadd
fstp
pusha
and
adc
int3
mov
dec
dec
cmp
adc
sbb
or
sbb
inc
test
leave
fwait
pop
adc
fs
add
sub
mov
mov
adc
xor
sub
out
mov
sbb
push
dec
sbb
imul
mov
and
fist
cs
sub
in
mov
dec
sub
ret
cs
sub
sub
or
sbb
push
or
push
pushf
fs
or
outs
test
jmp
loopne
mov
jns
or
xchg
out
ucomiss
push
adc
outs
inc
dec
sbb
jg
add
(bad)
imul
outs
adc
or
outs
(bad)
push
ja
jge
push
ror
mov
jge
enter
(bad)
stos
sahf
nop
jbe
outs
jbe
sub
adc
sbb
cmp
push
sub
and
xchg
gs
gs
mov
adc
fwait
cmp
(bad)
xchg
pop
popa
pop
push
or
imul
pop
cwde
dec
adc
rcr
scas
outs
ins
inc
add
sub
jl
push
cmp
fsubr
cmp
sbb
outs
pop
pop
outs
outs
fst
xchg
fadd
adc
push
stos
or
sbb
mov
push
fbstp
shl
add
inc
sub
inc
inc
xor
inc
adc
pop
and
mov
adc
int
call
sbb
je
mov
mov
sub
jns
jbe
add
inc
and
ja
and
lods
rcl
retf
and
and
add
push
icebp
adc
add
and
sbb
dec
sub
xchg
rcr
pop
daa
and
inc
js
xor
adc
frstor
dec
or
pop
sub
mov
test
push
dec
das
sub
test
adc
add
sub
sbb
adc
aas
jp
add
push
mov
rcr
ret
lods
int3
jmp
or
pop
outs
push
mov
pop
outs
mov
neg
es
push
jle
push
or
ja
or
pop
jne
pusha
ret
xor
xor
sbb
inc
fadd
in
mov
inc
lea
inc
rcl
ja
test
xor
jge
ret
or
(bad)
int
gs
fild
inc
inc
pop
jae
push
adc
imul
xor
add
imul
and
dec
outs
push
jne
cs
add
sbb
sub
xor
sbb
lahf
or
js
xchg
push
and
pop
call
add
imul
fisub
xor
pop
or
inc
and
mov
cld
(bad)
add
xchg
adc
test
test
pop
push
push
ss
outs
jae
dec
inc
push
fsubr
push
or
pop
inc
push
test
pop
mov
neg
enter
cs
sub
aad
data16
inc
out
mul
add
outs
inc
jb
adc
add
das
sub
mov
mov
xor
mov
icebp
adc
shl
iret
sub
or
mov
pop
adc
push
outs
sub
jne
in
ja
js
pusha
add
imul
jl
lds
shl
add
xor
and
shl
or
jle
add
pop
fcom
add
ret
xlat
jmp
inc
inc
dec
push
pop
loop
ins
jne
dec
jb
inc
fidivr
or
pop
mov
aam
inc
sbb
out
dec
rol
xor
loope
cwde
movs
pop
push
dec
push
xor
out
mov
xor
shl
mov
iret
adc
inc
jb
out
or
xchg
mov
mov
sbb
je
sbb
icebp
test
outs
jne
adc
imul
mov
dec
jne
inc
mov
mov
xchg
push
imul
dec
push
lock
xchg
std
sbb
adc
jp
jmp
push
and
adc
lods
in
and
mov
or
bound
add
push
mov
dec
sbb
push
push
and
inc
push
inc
loope
inc
jb
inc
dec
pusha
(bad)
mov
inc
add
pusha
imul
and
xchg
into
or
pop
sbb
mov
push
push
outs
inc
outs
std
xchg
lods
neg
outs
gs
cmps
test
shr
dec
xor
add
bound
pop
jo
sub
xor
(bad)
lods
sub
imul
push
fimul
sbb
xchg
dec
and
outs
inc
pop
lods
and
rol
pushf
lock
jge
imul
cmp
xor
icebp
dec
jne
sbb
outs
test
ss
sbb
lock
imul
push
or
call
loop
ja
adc
sbb
inc
and
rcr
cli
imul
lahf
push
outs
daa
sbb
push
adc
and
or
jnp
je
outs
sub
sbb
in
dec
popa
pop
fwait
and
and
dec
sub
add
pop
sub
xchg
cmp
jo
dec
imul
inc
and
std
inc
jb
push
outs
or
test
adc
push
and
xor
push
call
mov
popa
mov
jne
mov
cwde
and
js
scas
mov
in
pop
adc
fwait
retf
mov
into
adc
outs
arpl
test
jb
outs
xor
or
adc
push
out
je
dec
int3
sbb
mov
out
adc
adc
mov
add
push
push
push
(bad)
ins
sbb
jae
je
pop
adc
cmovo
shl
dec
inc
cmp
shl
add
ficom
and
mov
cmp
sbb
popf
push
or
loope
mov
dec
inc
in
sub
push
lock
cmp
jnp
fst
fisttp
jno
sbb
inc
inc
inc
push
aam
aam
addr16
rol
inc
fisub
ins
mov
fisubr
jmp
push
outs
jne
sar
(bad)
push
or
push
dec
jp
int
adc
jmp
mov
pop
test
push
mov
mov
pop
dec
outs
fs
mov
popa
jb
movs
ret
test
retf
or
jmp
push
jns
fidiv
outs
sbb
sub
pop
sbb
gs
mov
xlat
jle
and
aaa
and
inc
dec
jge
xchg
adc
sbb
mov
mov
jecxz
adc
loopne
and
adc
outs
outs
addr16
or
pop
fs
je
adc
aaa
adc
mov
pop
movs
mov
gs
jp
nop
mov
adc
dec
(bad)
fst
dec
adc
js
ins
outs
lea
push
add
popa
stos
retf
arpl
call
add
pop
in
stos
pusha
inc
add
test
pop
mov
or
into
sbb
jae
dec
mov
cmps
or
(bad)
push
arpl
dec
push
(bad)
rcr
les
push
mov
popa
arpl
rol
or
mov
and
fisub
xlat
out
adc
std
dec
xor
xchg
xlat
outs
in
gs
aaa
push
add
mov
pusha
pop
push
outs
sbb
ins
push
inc
imul
and
add
jne
push
jbe
movs
cmp
inc
sbb
jbe
push
push
(bad)
push
or
ss
push
outs
mov
add
daa
sahf
sub
jae
in
mov
adc
push
popa
imul
(bad)
jo
push
jmp
mov
mov
push
mov
jle
je
jne
and
push
je
add
sbb
cld
(bad)
sahf
jmp
sbb
data16
mov
adc
dec
jae
pop
cmp
fcomp
add
mov
sbb
add
dec
adc
sub
pusha
out
imul
add
mov
sar
jns
jne
sub
icebp
jb
adc
loope
test
dec
mov
jae
mov
adc
fld
mov
imul
and
sub
adc
inc
ins
xchg
jns
push
sbb
add
loop
pop
dec
ret
outs
addr16
sbb
jbe
ret
mov
sbb
cwde
and
cmc
add
jae
fimul
pusha
add
fxch
dec
sbb
xor
pop
stos
dec
fcomp
fwait
int
fs
daa
inc
inc
mov
xor
into
or
jne
push
xchg
jbe
xchg
push
and
jne
push
test
rol
mov
inc
popa
dec
icebp
adc
jmp
cdq
jne
popa
sbb
inc
sti
lahf
sbb
jb
xchg
je
fdivr
xlat
pop
fild
or
push
mov
mov
cmp
and
rcl
and
das
popa
test
and
popf
cmp
inc
fstp
sub
rcr
inc
ss
pusha
imul
sub
push
inc
js
sbb
add
xlat
sti
inc
inc
sbb
mov
and
je
mov
add
add
and
jns
ja
or
push
push
lods
inc
imul
movs
sbb
and
adc
arpl
push
and
or
adc
xor
push
and
js
push
popa
mov
sahf
iret
push
sbb
imul
sub
out
and
mov
add
arpl
push
dec
add
and
mov
pop
or
out
sbb
xchg
cmp
inc
mov
mov
jmp
in
xchg
addr16
psllw
pop
mov
test
add
pop
loope
outs
and
arpl
je
movs
jecxz
push
mov
cmps
push
pop
pop
dec
mov
adc
pop
jo
adc
pop
popa
ins
ins
scas
and
loope
xchg
int
xor
push
jb
shl
aas
lea
xchg
cld
and
es
sbb
sub
ret
test
pop
cmp
xor
inc
sub
xor
xchg
bound
sbb
mov
add
adc
mov
add
push
inc
(bad)
jecxz
add
hlt
xor
or
sbb
sbb
mov
outs
gs
das
test
mov
push
and
pushw
inc
jmp
test
and
adc
(bad)
aaa
out
pop
int
add
push
dec
cmp
inc
or
sti
sbb
loopne
fisttp
add
jnp
add
adc
shr
or
add
cs
add
mov
add
psubq
and
loopne
cmp
mov
inc
leave
jnp
stos
mov
outs
sbb
or
pusha
push
xor
ins
adc
aas
cs
sbb
or
nop
sub
popf
jge
xor
inc
and
test
dec
cmps
mul
add
movs
push
mov
and
shr
jae
pop
pop
xchg
mov
jo
shr
xor
cmp
lock
mov
cmp
fs
(bad)
(bad)
add
mov
pop
in
push
pushf
dec
je
out
dec
or
xor
mov
out
jb
mov
xchg
push
mov
dec
sahf
inc
dec
jae
test
nop
lahf
js
dec
or
adc
aas
movs
mov
and
add
add
add
pusha
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
ror
jno
sbb
jno
xor
imul
