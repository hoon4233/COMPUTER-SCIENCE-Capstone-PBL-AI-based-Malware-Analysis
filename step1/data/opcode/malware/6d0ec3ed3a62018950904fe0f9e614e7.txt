loope
sti
repnz
lods
jo
adc
mov
cmc
mov
rcl
rol
lock
mov
imul
sub
jns
or
shl
mov
jle
cmp
push
ret
fcomp
aas
pop
popf
dec
jbe
imul
cwde
xor
mov
imul
xor
loop
cmp
mov
repz
push
pop
push
scas
pop
mov
fstp
cli
mov
mov
inc
xor
and
(bad)
pop
mov
xor
call
test
cmc
xlat
gs
out
popf
cdq
sti
jp
out
or
cwde
and
cmp
loop
xor
push
shl
test
adc
add
ss
ds
push
rol
test
adc
rol
push
cwde
mov
mov
inc
push
mov
leave
data16
ins
std
shl
adc
add
adc
mov
adc
jne
push
lahf
push
cwde
mov
jle
addr16
call
div
mov
repnz
push
(bad)
adc
mov
pop
(bad)
mov
jecxz
clc
out
dec
xchg
mov
add
and
int
scas
sub
xchg
aad
inc
retf
lock
aas
mov
inc
mov
cmps
xor
imul
cmp
mov
push
push
and
push
outs
or
cmp
mov
dec
xchg
test
adc
inc
mov
loopne
adc
sub
out
imul
cmp
pop
mov
or
push
in
jecxz
shl
and
hlt
xor
xchg
add
jmp
pop
jl
cwde
push
das
push
mov
out
call
pop
xor
imul
jmp
add
iret
pop
push
or
les
pushf
icebp
and
inc
in
mov
mov
mov
and
mov
loope
xchg
jmp
cmp
cli
adc
aaa
xor
fst
test
popa
adc
in
adc
movs
pusha
jo
retf
cmp
das
leave
movs
xchg
(bad)
jl
sar
das
xor
loop
ins
enter
mov
jmp
in
idiv
cld
scas
adc
ficomp
and
stc
sub
dec
call
shl
adc
les
adc
ss
pop
movs
jmp
lock
cs
sbb
mov
mov
sub
cmp
cmp
out
mov
or
lahf
dec
fsub
cmp
and
xlat
pop
mov
jns
leave
in
adc
addr16
cli
in
pusha
scas
sbb
jo
fnstcw
pop
int3
pop
mov
push
cmp
in
into
test
cdq
sahf
jbe
adc
loopne
pop
int3
scas
pop
mov
sub
nop
pop
pop
add
gs
xchg
test
cs
hlt
add
shl
adc
arpl
pushf
push
sub
ret
imul
adc
icebp
(bad)
add
or
cmp
fisttp
xor
arpl
aad
loope
pop
fcmovnu
or
repz
sahf
fcomip
lahf
mov
cmp
pop
repnz
jo
pop
dec
cdq
xchg
add
or
jecxz
ins
cmp
xchg
xchg
loop
leave
xchg
fadd
xchg
addr16
mov
mov
loopne
out
and
or
mov
push
mov
outs
cmp
sub
retf
ins
push
pop
adc
push
dec
and
in
test
in
and
out
jns
out
and
sub
stos
add
jle
xlat
call
call
ror
test
lahf
xchg
xor
and
out
pop
jo
mov
mov
cmp
pop
loop
rol
cmp
lahf
adc
xchg
add
mov
pusha
call
rcl
or
push
lea
cmps
adc
xchg
mov
xchg
mov
cmp
sub
fld
(bad)
fcom
dec
cmps
adc
popa
ds
pop
aad
sar
push
jmp
adc
or
inc
mov
pop
sub
sub
adc
fnstcw
repz
fst
inc
in
jno
add
imul
jg
(bad)
sbb
inc
fldcw
fisubr
jbe
mov
xor
mov
adc
ror
and
jmp
sbb
jno
enter
sbb
sar
jne
and
push
sbb
mov
fbld
mov
aas
and
stc
xchg
mov
push
add
cmp
addr16
retf
arpl
mov
push
dec
xor
mov
ret
sub
ins
mov
out
stos
shl
pop
sbb
add
xchg
dec
or
call
xor
adc
adc
bound
sbb
push
test
dec
(bad)
js
pop
test
mov
jmp
(bad)
div
mov
dec
in
sub
inc
repnz
repz
inc
jl
and
mov
ficomp
xchg
adc
push
jl
data16
and
out
mov
push
out
or
push
je
std
out
mov
or
loop
pop
outs
mov
cmp
in
lahf
jmp
adc
dec
loop
lds
jle
inc
das
jno
and
inc
ds
cmps
mov
push
(bad)
push
lds
adc
jb
mul
test
or
mov
or
icebp
dec
mov
hlt
outs
(bad)
adc
enter
ja
sub
fcmovb
jg
jne
add
jbe
adc
sub
pop
cmp
shr
pop
mov
or
xor
jmp
xlat
stos
and
xchg
fwait
mov
mov
je
lods
sbb
add
test
loope
inc
jecxz
jl
cli
fist
and
in
rcl
ss
fwait
cs
call
dec
lahf
xor
add
sti
dec
iret
dec
pop
lahf
push
leave
cld
dec
dec
adc
pusha
mov
pusha
pop
xor
mov
jp
aad
mov
ja
cmp
fwait
cdq
mov
xchg
push
xchg
cld
out
add
mov
ins
out
fbld
std
fcmovbe
jp
aas
mov
mov
leave
xchg
xor
repnz
mov
pop
pusha
out
pop
std
push
push
jb
push
pusha
sub
rol
jno
ficomp
or
rcr
sub
mov
shr
icebp
nop
ror
or
fldenv
repz
outs
add
mov
ret
mov
je
mov
in
jns
jno
ins
push
adc
mov
gs
push
lods
xchg
pop
int3
inc
add
mov
pop
lock
daa
add
mov
dec
ficom
leave
or
pop
jmp
xchg
call
loop
pop
aas
mov
in
mov
or
repnz
test
sub
push
push
mov
lock
and
std
mov
in
daa
ror
cmps
sar
nop
loopne
or
je
jle
icebp
add
aaa
hlt
leave
lea
ss
push
mov
push
lock
adc
push
mov
ins
lods
push
call
inc
mov
cmp
stc
mov
mov
iret
mov
fistp
jge
mov
scas
xchg
aas
and
and
dec
loope
push
xchg
pop
mov
stos
dec
push
imul
mov
shl
dec
or
test
jns
cmc
fmul
(bad)
xchg
das
icebp
test
in
icebp
in
mov
and
stos
jmp
mov
push
je
pop
rol
frstor
je
(bad)
mov
push
retf
inc
imul
push
mov
test
sub
lea
scas
sti
jmp
mov
adc
or
dec
icebp
fldln2
jecxz
adc
push
into
ja
(bad)
fst
mov
in
jo
test
loope
call
loop
sbb
push
imul
ins
cmp
ins
jae
arpl
test
add
(bad)
int
inc
enter
xor
imul
sbb
cld
push
nop
inc
retf
loope
mov
push
(bad)
jb
sbb
imul
fcomp
rol
sub
fistp
retf
adc
add
stos
xlat
cld
mov
push
sub
les
imul
sub
rcl
dec
pushf
mov
in
dec
xor
cmp
jmp
clc
jne
addr16
cwde
sbb
jbe
out
pop
rcr
mov
xor
and
xor
cmp
leave
retf
push
(bad)
xlat
mov
out
in
add
iret
adc
sbb
adc
sbb
(bad)
sub
imul
mov
mov
call
icebp
add
ds
adc
sub
iret
outs
mov
cmp
cdq
adc
imul
jmp
out
push
in
sub
lahf
test
sbb
mov
repz
or
xchg
cmps
inc
xchg
nop
mov
shr
(bad)
xchg
cmc
(bad)
repz
mov
aam
mov
jns
adc
and
fisub
dec
mov
push
mov
fsub
and
dec
xlat
push
sti
js
xchg
sbb
sub
add
in
or
xor
mov
loope
mov
mov
sbb
mov
jne
add
rcl
xor
lock
mov
call
(bad)
fnstenv
lahf
(bad)
ins
ja
push
cmp
mov
and
add
sbb
cmp
add
jmp
in
(bad)
loopne
push
inc
xchg
add
rol
or
cmps
imul
in
ror
dec
ds
sub
inc
test
mov
in
popa
push
cmp
pop
jno
popa
(bad)
std
cmp
pop
cmc
loopne
xor
sbb
jg
push
das
neg
dec
test
jp
jecxz
jle
ins
jecxz
hlt
xchg
push
adc
or
inc
sbb
(bad)
push
cmp
sbb
or
aas
push
fstp
or
xchg
stos
das
sbb
das
das
ror
or
sub
jae
push
and
js
push
call
inc
idiv
add
arpl
pop
jg
loope
(bad)
idiv
and
push
xchg
pop
xor
in
mov
out
std
mov
sbb
inc
(bad)
cld
test
jns
lock
imul
inc
mov
sbb
adc
ja
mov
push
push
mov
inc
xchg
sbb
cmp
call
(bad)
pop
call
int
ret
aaa
sbb
leave
and
sub
xor
jnp
fistp
fs
outs
fs
scas
push
pop
ins
or
popa
sbb
jge
and
outs
int
mov
fldenv
pop
inc
xor
icebp
inc
or
sahf
mov
inc
mov
js
pusha
xchg
popf
adc
push
xchg
adc
ss
imul
push
add
mov
push
cmp
and
sti
push
(bad)
loop
in
and
cmp
add
pushf
(bad)
xchg
das
popf
cdq
dec
and
aad
repnz
fisub
shl
add
and
fnsetpm(287
arpl
mov
push
into
outs
or
cmc
jno
ds
mov
xor
nop
fdivr
and
xchg
call
ficomp
ror
cld
xchg
rcr
jnp
mov
mov
and
push
data16
xor
and
fucomip
enter
add
out
sbb
and
jle
pusha
sti
push
push
data16
xor
pop
ss
cmp
movs
pop
(bad)
adc
pop
cld
mov
mov
in
mov
shl
pop
inc
(bad)
imul
push
ss
mov
or
pop
cdq
jo
push
daa
mov
in
stos
ret
std
dec
and
xchg
addr16
jle
add
dec
jmp
mov
ds
or
add
sbb
push
jbe
mov
push
in
inc
push
pop
dec
mov
or
inc
xor
retf
fild
ja
cwde
mov
inc
fst
movs
test
cdq
lea
push
arpl
test
push
dec
sbb
xchg
inc
add
jmp
stos
lods
shl
jmp
and
neg
fwait
bnd
je
mov
scas
cmc
cdq
cmp
or
and
dec
and
je
adc
jmp
jno
mov
lea
pop
inc
mov
sbb
aam
push
adc
xchg
mov
ja
cli
add
aam
mov
std
cmp
jecxz
clc
push
mov
mov
js
sbb
mov
xor
jmp
xchg
cmp
sbb
sbb
cmp
push
dec
vphadddq
ins
aas
pop
enter
loopne
cdq
lods
test
(bad)
jmp
jl
jp
cmp
pop
sub
aas
je
jnp
push
mov
stc
sub
sti
dec
dec
test
push
daa
(bad)
jecxz
mov
(bad)
sbb
cli
jmp
in
mov
ret
sub
push
and
test
or
iret
sahf
dec
dec
adc
out
cmp
inc
idiv
cmps
push
(bad)
ficom
movs
and
popa
scas
mov
push
jecxz
push
or
or
cs
stos
xchg
xchg
sub
and
and
sub
aam
mov
add
xor
call
icebp
mov
push
adc
rcl
sti
mov
pop
mov
out
jmp
push
fnstsw
pop
or
aam
and
les
test
jae
xlat
or
cmps
pop
adc
lahf
xchg
add
sub
into
les
or
out
xchg
out
scas
mov
sti
loope
pop
cmp
sbb
stc
daa
adc
test
inc
jl
stos
xor
push
push
mov
rcr
pop
cmp
and
cdq
test
sub
mov
jnp
xchg
nop
push
push
aaa
fisub
bound
(bad)
cmp
mov
sub
pop
xlat
sti
dec
mov
push
xchg
or
pop
and
sar
fwait
outs
adc
je
push
ret
inc
loope
dec
cmp
pop
mov
cli
mov
or
inc
mov
mov
adc
and
and
es
mov
stos
mov
push
xor
and
fistp
retf
xchg
inc
fmul
repz
lds
cmp
jmp
je
xor
sbb
hlt
popf
cvtdq2ps
ins
xchg
loop
jmp
push
add
scas
xchg
in
ret
xchg
loopne
jb
dec
ffree
and
dec
mov
(bad)
in
fist
call
fistp
lods
in
and
sub
add
dec
es
or
xlat
pop
cmps
add
sub
aam
sub
jl
xor
in
sub
mov
xor
pop
jp
jbe
loop
repz
mov
cs
push
int
or
xor
or
adc
mov
mov
cmp
mov
pop
into
cmc
stos
or
ret
xor
xchg
shufps
ret
out
jmp
xchg
in
outs
jo
in
pop
repz
scas
push
mov
or
mov
stos
jno
retf
lods
sub
iret
mov
pop
ret
stos
mov
(bad)
sbb
pop
xchg
bnd
jae
int3
jo
daa
push
inc
inc
imul
cdq
rcl
rcr
cs
xchg
xchg
and
sahf
sbb
mov
fs
push
inc
dec
jmp
scas
div
or
and
pop
movs
ror
add
pop
adc
mov
adc
sbb
mov
push
(bad)
xchg
neg
es
and
out
popa
imul
(bad)
adc
test
xchg
enter
inc
out
and
mov
stos
xchg
dec
pop
jb
paddsw
mul
call
popa
mov
sub
mov
adc
xor
outs
mov
lahf
mov
clc
jo
jge
cdq
pop
stc
inc
cli
das
push
(bad)
sbb
shl
sbb
les
fst
mov
mov
pop
ja
sbb
stc
cmps
mov
jge
dec
mov
pop
retf
rcl
outs
fnsave
aam
loopne
icebp
mov
stos
pop
je
pop
(bad)
and
mov
std
dec
movs
dec
sbb
mov
sbb
fisubr
adc
sar
push
test
call
pop
fmul
or
sub
xchg
sub
xchg
dec
dec
lock
dec
fisttp
mov
cmp
test
cmp
sub
mov
and
xchg
sbb
cmp
pop
cmp
xchg
shr
scas
jmp
enter
push
cmp
rcl
gs
add
add
js
ds
sahf
sbb
fcom
mov
jo
loope
leave
and
dec
fidivr
adc
std
rcr
ins
jbe
repz
jne
pop
imul
retf
out
jle
outs
cmp
js
xchg
int3
add
fs
mov
pushf
and
rcl
fcomip
cmp
pop
sbb
jp
jae
push
test
jns
jbe
jmp
popf
push
je
sbb
ja
leave
ror
jbe
mov
stos
daa
ror
retf
jae
jnp
xor
sbb
ins
add
xchg
adc
movs
call
stc
jnp
jl
loop
iret
mov
icebp
jl
pop
push
shl
repz
cli
add
or
push
dec
out
pushf
test
jo
jno
in
mov
pop
pop
mov
push
sub
fucom
ja
jle
lock
mov
and
ins
mov
out
and
xchg
pop
sub
xor
pop
fcmovnu
shl
cmp
(bad)
fwait
and
xor
mov
mov
dec
cmp
pop
retf
js
dec
loope
in
in
test
sahf
aam
mov
push
push
mov
nop
lods
das
imul
in
mov
sbb
enter
and
cmp
inc
enter
add
adc
cwde
mov
ins
mov
sub
int3
ror
sub
imul
xor
sub
in
mov
sbb
push
cli
into
mov
sbb
xor
inc
fld
sub
jne
jmpw
sub
mov
int
push
pop
pop
(bad)
xchg
jmp
into
dec
xchg
push
sub
pop
ins
ficom
dec
pop
sbb
sub
mov
repz
cmp
jmp
jae
int
(bad)
sub
cmp
adc
mov
(bad)
add
(bad)
sub
int3
push
ins
mov
mov
mov
fild
xor
cmp
sbb
inc
lahf
sahf
sbb
jp
push
xchg
push
add
mov
dec
in
cdq
add
and
sbb
les
mov
sbb
mov
mov
or
call
pop
outs
out
jo
inc
sbb
fimul
jns
sub
jge
push
out
sbb
(bad)
pop
mov
or
sub
shl
cld
out
sbb
push
stos
cmp
push
add
push
dec
gs
lods
sahf
test
(bad)
mov
repnz
mul
push
lds
js
mov
sub
mov
mov
aaa
mov
jb
jp
or
mov
adc
lds
out
mov
lea
out
ss
out
add
adc
test
das
xchg
ins
xchg
mov
ss
jmp
inc
ins
mov
iret
mov
mov
stos
rcl
dec
jle
(bad)
pop
cmp
pop
xchg
(bad)
daa
sar
out
fnstcw
imul
xchg
psubsw
mov
pop
inc
retf
lahf
pop
stc
push
lea
mov
sbb
xlat
sub
push
into
sbb
daa
adc
inc
cmp
(bad)
mov
call
xchg
out
data16
mov
dec
xor
sti
cmps
fild
sbb
xor
dec
lahf
push
xchg
fcmovu
cmps
push
dec
out
add
lock
jl
cmp
gs
jae
xor
pop
cmps
dec
out
add
(bad)
std
sar
jl
jl
ds
out
and
daa
jmp
aaa
mov
pop
dec
aad
cmp
jge
add
aad
mov
popa
(bad)
mov
test
out
dec
dec
jp
xchg
imul
dec
xor
out
stc
add
sbb
mov
pop
aas
scas
mov
gs
sbb
bound
lock
test
call
pop
rcr
adc
mov
imul
fidiv
fstp
fbstp
mov
outs
retf
pop
call
inc
adc
outs
cmp
pop
sub
xchg
test
push
add
jmp
adc
cmp
sub
imul
mov
pop
out
lds
or
test
das
adc
pop
dec
push
enter
push
push
pop
in
push
sub
leave
aad
iret
mov
les
pop
mov
mov
into
mov
xor
dec
mov
test
and
inc
rcr
adc
scas
sahf
cmp
inc
sbb
xchg
cdq
push
call
fcomp
jo
mov
xchg
in
pop
or
cli
loop
es
imul
stos
mov
test
mov
repnz
les
test
fistp
std
ins
pop
mov
dec
mov
ins
call
(bad)
stos
imul
into
add
call
movs
jb
sub
lahf
mov
out
inc
push
test
mov
arpl
rcr
or
jp
push
lock
mov
movs
mov
inc
lods
out
rcl
inc
pop
cmovbe
fwait
aad
int3
sub
pop
data16
mov
dec
jne
in
xlat
popf
test
jne
aad
mov
rcr
in
mov
scas
mov
dec
cwde
xchg
inc
mov
add
inc
jb
mov
sub
jne
es
sub
xchg
push
jno
call
mov
cmp
push
mov
jp
(bad)
mov
fstp
in
adc
frstor
dec
cmp
inc
inc
dec
int
mov
and
sbb
adc
push
xchg
hlt
test
popf
cmp
outs
mov
daa
mov
sbb
xchg
and
add
pop
pop
xchg
arpl
popf
out
mov
rcr
mov
cmp
dec
call
outs
test
or
cld
mov
jbe
mov
in
add
stc
xchg
(bad)
xchg
int3
sahf
pop
pusha
mov
sub
add
inc
ja
rol
push
sbb
mov
es
retf
or
scas
icebp
jp
push
and
push
xchg
sbb
sti
xor
scas
popa
jmp
inc
loope
mov
out
in
jmp
pop
xor
rcr
sbb
(bad)
repz
mov
aas
jbe
jne
xor
data16
dec
xchg
xchg
rol
outs
stos
mov
cld
cmp
sbb
push
xchg
loopne
jns
stos
das
(bad)
and
adc
ret
js
sbb
mov
(bad)
xor
mov
jle
inc
test
cmp
je
add
push
jns
ja
mov
jb
jb
adc
stc
jl
ins
mov
dec
mov
(bad)
mov
inc
mov
cmps
cmp
xchg
retf
ror
addr16
dec
(bad)
jp
lock
ss
add
popa
adc
add
shl
pop
cli
in
jmp
sub
add
mov
cwde
cmps
jmp
or
and
and
add
fild
fs
ficomp
das
fnstcw
stos
adc
movs
sbb
(bad)
cmp
push
push
mov
mov
pushf
mov
ins
test
jmp
pop
pop
adc
cld
push
inc
and
and
sub
sbb
imul
cli
or
fnsave
jle
sbb
mov
pop
pop
and
retf
push
push
and
into
out
test
ds
pop
inc
adc
sub
pop
mov
aaa
call
jo
pusha
and
sbb
cmp
mov
ja
loop
add
pusha
mov
xor
inc
pusha
stc
dec
adc
int3
retf
jl
push
sub
cmps
cli
and
sub
fidiv
in
fwait
jmp
cmp
push
fistp
cmps
sbb
add
pop
(bad)
or
jecxz
retf
jo
out
aad
push
sar
xchg
stos
call
cmp
and
pushf
repz
jg
retf
jno
aad
jl
fsub
fiadd
inc
lods
popf
dec
stos
mov
jle
imul
fisttp
out
and
daa
cmp
movs
dec
jmp
fmul
cld
shl
mov
xlat
cmp
movs
int3
inc
mov
cli
inc
scas
fdivr
movs
xchg
pop
dec
cmps
mov
mov
sbb
shl
sbb
js
lahf
cli
fbld
jnp
loop
rol
test
std
sub
int
jecxz
rcr
imul
xchg
sbb
adc
push
lods
cmps
mov
sub
add
retf
and
lea
cmc
fild
mov
push
adc
shr
push
mov
inc
dec
retf
or
mov
adc
sub
in
retf
and
jge
pop
add
arpl
mov
call
cmps
xlat
call
add
aad
xchg
sub
sub
gs
add
inc
rcl
xor
movs
aam
adc
mov
add
or
add
test
mov
in
scas
sub
out
mov
dec
nop
stc
loopne
jp
bound
mov
adc
repnz
fiadd
ins
out
sbb
and
iret
cmp
mov
or
mov
addr16
pop
int
fstp
and
push
xchg
adc
hlt
jb
jns
das
push
sbb
shl
jl
push
mov
xlat
inc
mov
stos
mov
push
cmps
stos
inc
popa
test
arpl
cmc
shl
jmp
(bad)
pop
or
xchg
fld
mov
mov
inc
fidiv
pop
cmc
pop
outs
fldcw
sub
aam
mov
ficomp
xchg
fwait
mov
pop
mov
and
jle
ins
mov
xchg
jns
loopne
xchg
popa
fmul
push
jmp
pop
rol
mov
xor
daa
stc
push
pop
aas
mov
push
cmp
jno
(bad)
jg
es
pusha
ror
je
pop
push
sbb
xchg
inc
in
leave
test
sti
sbb
neg
repnz
inc
adc
ds
stc
adc
neg
jge
inc
push
fmul
lahf
js
paddsw
jmp
pop
sub
adc
xchg
stc
or
ja
data16
and
mov
push
aad
pushf
clc
and
stos
in
ins
jne
inc
fnstenv
sbb
pop
mov
pop
out
shl
rcr
mov
arpl
sub
mov
dec
mov
cmp
imul
pop
push
inc
sbb
ret
sti
movs
inc
xchg
int3
mov
mov
xchg
cmp
call
mov
and
cdq
cmp
adc
in
mov
jnp
sbb
xchg
enter
xlat
jecxz
sbb
cmps
add
pinsrw
(bad)
push
push
mov
pop
jne
test
stc
das
mov
ins
cld
add
mov
cmp
mov
lea
sahf
jg
adc
dec
test
cmc
mov
jge
push
jmp
fdiv
popf
ja
gs
gs
push
mov
push
adc
push
rcr
xchg
mov
enter
mov
scas
(bad)
imul
sub
ret
std
or
add
mov
jnp
(bad)
imul
adc
enter
shr
shr
xor
xchg
divps
or
dec
mov
cmps
mov
in
jmp
sub
mov
test
push
sbb
data16
mov
mov
and
cmp
enter
mov
pop
and
adc
pop
cld
push
call
mov
call
sub
inc
inc
pop
cmp
(bad)
popf
mov
adc
jmp
add
mov
scas
and
jmp
fcomp
mov
cmps
inc
jmp
adc
leave
mov
popa
or
repnz
popa
sbb
pop
or
cs
aas
in
xchg
cmp
cmp
push
sub
xchg
ss
or
pop
cdq
add
aad
add
ror
loop
sbb
cmps
mov
movs
ss
jmp
push
mov
imul
push
cmp
pop
mov
cld
mov
sbb
retf
and
imul
push
hlt
and
xor
aas
or
sbb
mov
adc
mov
shl
sbb
adc
or
push
cmp
and
xchg
dec
xor
cdq
js
cmc
mov
mov
cld
ds
addr16
or
daa
repnz
enter
retf
cmc
inc
cmp
jne
ret
jb
rcl
imul
or
mov
int3
mov
add
popf
mov
(bad)
mov
in
pop
(bad)
and
into
clc
fsubr
push
stc
iret
jl
pop
aaa
out
scas
mov
(bad)
loopne
test
int3
xlat
sbb
dec
fdiv
retf
in
and
out
lock
push
sub
imul
mov
in
xchg
jl
pop
push
je
adc
fcmovbe
test
mov
adc
mov
div
fadd
(bad)
push
or
add
(bad)
fld
pop
mov
out
lds
iret
dec
or
push
sbb
(bad)
sbb
dec
mov
popf
jge
stos
(bad)
fidivr
div
xor
pop
rcr
inc
mov
pandn
sahf
xlat
dec
les
sbb
cmp
add
pop
jle
leave
jns
mov
xor
xor
mov
pop
dec
mov
out
inc
pusha
add
les
cs
mov
xor
xchg
ins
mov
in
rcl
inc
movs
sub
xor
cmp
sub
repnz
cmp
cmp
xchg
stos
mov
arpl
(bad)
popa
xor
or
pop
push
or
or
xchg
das
add
xchg
stos
jae
outs
xlat
jp
cmp
shl
sbb
lahf
pop
jp
jp
sbb
jecxz
xor
lock
inc
fisttp
je
out
pop
aad
pop
pop
mov
loop
sbb
sbb
out
into
test
jmp
cmc
mov
push
sub
les
adc
dec
and
and
pop
fild
pop
movs
mov
or
cdq
dec
inc
xchg
push
push
mov
pop
jns
sbb
mov
mov
jns
mov
push
(bad)
in
lods
mov
aas
push
fimul
and
arpl
nop
pop
jnp
bound
pop
cmp
push
mov
in
adc
stc
mov
out
inc
adc
or
cmp
nop
jmp
fcmovnbe
leave
mov
lds
aas
cmp
call
fwait
pop
ror
arpl
bound
movs
nop
movs
xchg
pop
call
retf
(bad)
dec
mov
xchg
dec
sbb
jecxz
adc
ficom
dec
repz
movs
jo
lock
fidivr
and
fnstcw
jge
(bad)
out
jmp
clc
ja
mov
test
bnd
sub
push
mov
mov
mov
dec
adc
iret
inc
pop
repz
stos
and
dec
jnp
repz
xchg
call
xchg
cmp
shr
aaa
inc
outs
test
fiadd
movs
retf
imul
repz
movs
hlt
dec
les
mov
mov
in
pop
int
mov
ret
inc
jl
dec
cmp
cmp
shr
dec
jmp
fstp
imul
mov
or
ds
clc
mulps
pop
add
xor
mov
jge
jle
and
xor
jmp
add
cwde
or
cli
test
pop
inc
add
push
xchg
mul
mov
lock
mov
push
out
movs
ins
ins
fadd
imul
mov
or
cmp
(bad)
fs
mov
xchg
sub
mov
(bad)
js
mov
mov
mov
xchg
push
add
pop
call
sahf
xor
loop
inc
sbb
adc
out
outs
inc
xchg
fsubr
sub
dec
or
xor
mov
cmp
test
xchg
ja
stc
pop
lahf
push
mov
rol
push
mov
push
lea
jnp
sbb
adc
dec
push
add
lods
iret
ror
leave
mov
fisubr
movs
sub
outs
jnp
mov
fst
pop
aas
add
imul
push
fdiv
fnop
push
mov
in
add
dec
jp
aas
rcr
pop
xlat
mov
and
mov
sar
shl
sar
xchg
div
dec
cmp
xchg
xor
xchg
pop
pop
push
jo
fs
stos
call
mov
mov
(bad)
pop
push
out
and
cmp
mov
sub
and
retf
inc
pop
mov
out
lds
test
fwait
nop
or
add
fbstp
int3
inc
xor
int3
inc
(bad)
xchg
fiadd
push
lahf
inc
ret
cld
add
push
push
test
outs
sbb
fs
js
ret
loope
mov
js
les
shr
xchg
inc
xor
adc
sub
les
push
ror
xchg
sbb
jae
or
rol
jno
dec
dec
xchg
inc
mov
add
pop
sti
jnp
pop
in
fld
add
and
pop
and
scas
cmps
fbld
push
and
js
push
je
or
push
rcl
call
add
sti
stos
pop
not
jae
adc
jmp
pop
hlt
sbb
jmp
in
inc
sbb
mov
(bad)
ret
mov
aas
fdivr
jb
int
xor
or
or
int3
cmp
mov
movs
xchg
dec
and
(bad)
aas
aam
bound
out
lea
packsswb
cs
inc
retf
mov
sbb
sbb
jmp
push
cmp
add
sti
jne
ror
in
test
xchg
jmp
lds
sub
(bad)
mov
jnp
outs
cmp
ss
loopne
(bad)
mov
fistp
xchg
movs
jle
ja
jg
fld
or
cs
into
les
add
faddp
inc
(bad)
jecxz
inc
sbb
cmp
out
jmp
and
inc
jmp
lds
nop
mov
pushf
sbb
sbb
or
retf
ret
dec
fidiv
cwde
cs
in
ss
sub
mov
das
xchg
mov
bound
test
pop
data16
es
mov
xchg
(bad)
pop
aas
jge
mov
(bad)
fmul
xor
cmp
ret
icebp
push
imul
cmp
push
xchg
les
lea
xchg
out
int
retf
mov
sub
out
aad
fist
cld
push
(bad)
pusha
pop
call
sbb
(bad)
out
(bad)
mov
and
imul
xchg
jmp
iret
jmp
jmp
outs
outs
(bad)
out
not
aad
jo
mov
cli
and
sub
dec
sbb
ja
je
pusha
xor
or
repnz
sub
xchg
arpl
mov
shl
lock
jns
cld
fwait
mov
cmp
inc
jmp
(bad)
std
out
pop
pop
aaa
sub
sbb
dec
cs
push
aam
outs
sahf
jmp
(bad)
fidiv
jo
ins
mov
mov
popa
pop
enter
pop
push
aaa
pop
and
cmp
in
jnp
mov
or
add
in
lahf
pop
iret
inc
movs
stos
xor
clc
add
sub
hlt
add
pop
xchg
fbstp
fmulp
xchg
mov
fmul
mov
and
mov
dec
aam
pop
jp
xchg
ja
adc
push
and
mov
or
sub
mov
mov
pop
dec
test
mov
lock
mov
bound
pop
bnd
nop
rcl
xlat
call
cvtps2pd
sti
nop
adc
push
mov
or
pop
out
out
mov
jnp
xchg
out
(bad)
and
xlat
out
test
(bad)
pop
lds
inc
adc
mov
mov
push
mov
daa
dec
or
cmp
pop
stos
popf
mov
sbb
inc
mov
fs
repz
push
mov
jae
pop
(bad)
push
repnz
test
cld
icebp
loopne
inc
daa
ins
dec
inc
pop
retf
push
cmp
aaa
and
add
aam
cmp
mov
cld
add
xchg
arpl
mov
icebp
cmp
pushw
(bad)
test
stos
fcomi
int3
call
adc
cmp
iret
retf
fbstp
ja
iret
hlt
addr16
add
inc
loope
jecxz
sub
jmp
push
cmp
mov
popa
mov
dec
xchg
cmp
out
dec
sti
sbb
sub
push
cs
mov
xchg
popa
mov
mov
fidivr
dec
mov
pushf
test
icebp
sbb
call
mov
add
movs
scas
and
sub
dec
mov
pop
into
and
cmps
inc
sub
cmps
popa
test
cwde
sti
sub
jmp
and
mov
inc
fadd
cmp
adc
push
clc
rol
mov
lea
sub
repnz
cld
inc
in
mov
cmp
sub
dec
cld
fcomp
adc
cmc
adc
sub
pop
ficom
push
retf
scas
jmp
mov
fs
in
loop
sub
(bad)
aam
in
out
dec
aas
pop
ins
and
xlat
push
mov
sbb
push
inc
push
hlt
shl
and
and
and
inc
movs
mov
pop
ja
inc
inc
pop
xor
sti
inc
pushf
mov
xchg
mov
or
test
sbb
sub
mov
push
mov
rol
in
lods
xchg
mov
sub
popf
es
inc
mov
cwde
xor
stc
mov
pop
jecxz
push
js
je
mov
mov
xor
out
push
outs
or
fistp
outs
jg
add
lock
pop
sbb
idiv
das
mov
stos
and
loopne
jmp
xor
mov
xor
or
ins
sub
fadd
jmp
adc
dec
adc
cdq
test
sar
inc
ret
mov
sbb
mov
push
hlt
adc
sbb
fild
cli
dec
test
jo
sbb
idiv
call
enter
xchg
je
dec
or
inc
test
inc
push
xchg
pop
add
test
fbstp
sbb
push
mov
sti
repz
and
fs
mov
scas
push
cmc
sub
rcl
inc
imul
pop
fidivr
cs
dec
cmp
jge
imul
movs
jo
push
pop
test
and
mov
xchg
pop
mov
sub
into
loop
(bad)
mov
movs
pop
int
jg
adc
bound
jle
jle
mov
mov
stos
xchg
dec
sbb
jb
dec
sahf
mov
dec
mov
rcl
es
cmp
pop
mov
sti
adc
or
retf
mov
(bad)
(bad)
xchg
movs
pop
or
out
(bad)
loopne
jnp
lods
add
pop
mov
icebp
shl
es
mov
out
lock
dec
or
pop
xlat
add
cs
adc
test
aad
ja
aas
adc
movs
icebp
popf
in
xlat
mov
adc
jo
fst
mov
mov
sbb
dec
pop
or
(bad)
xchg
clc
les
inc
sbb
mov
jge
push
xor
add
cli
sub
push
(bad)
cmps
(bad)
cmp
fmul
(bad)
jno
rcl
(bad)
out
nop
or
mov
out
(bad)
sti
mov
scas
(bad)
ds
pop
aas
push
xor
push
pop
ror
mov
mov
jmp
loop
lds
(bad)
jmp
test
out
cmp
retf
or
retf
mov
xor
sti
or
push
inc
sbb
push
shl
mov
loope
pusha
push
mul
jmp
mov
cmp
imul
pop
std
push
jbe
cmp
xchg
sub
add
adc
js
xchg
lock
sbb
leave
scas
push
clc
mov
ja
mov
and
(bad)
pop
sbb
push
mov
in
push
pusha
es
jns
std
in
push
mov
mov
adc
cmp
pop
fldenv
jo
movs
push
push
jge
(bad)
xor
xchg
loope
push
xchg
or
loop
inc
inc
cmp
scas
sub
test
xchg
cli
mov
mov
call
int3
fnstcw
mov
and
sbb
inc
cmc
sti
rcr
and
pop
pop
xchg
pop
ret
cmp
ret
repnz
lods
push
sub
nop
iret
cmp
fs
dec
lods
cmc
test
and
int3
pop
int3
add
sub
mov
mov
popf
xchg
xor
rol
pop
inc
push
pop
push
push
mov
mov
mov
inc
xchg
mov
rcr
xchg
push
push
jnp
mov
imul
push
pop
into
and
jle
int3
pusha
cvtdq2ps
je
pop
jae
movs
cmp
mov
fdiv
outs
dec
and
push
mov
or
mov
cmp
movs
cmp
jmp
cmp
push
push
shl
fninit
stc
test
inc
xchg
shl
stc
sbb
push
mov
add
mov
fwait
dec
adc
mov
and
and
ss
not
sbb
in
(bad)
jmp
mov
ja
sbb
mov
push
push
ret
jae
cld
push
and
jmp
cmp
aas
movs
mov
push
inc
rol
stos
movs
and
mov
jbe
sub
mov
iret
idiv
adc
mov
mov
cmps
das
pop
xor
inc
and
nop
push
neg
jmp
push
cli
lods
in
shl
scas
pop
or
mul
xchg
mov
sub
add
adc
mov
inc
out
mov
mov
pop
jo
(bad)
or
mov
out
sub
fs
bound
in
sub
test
pop
push
inc
jne
mov
jmp
dec
inc
fst
push
or
movs
and
jecxz
mov
int
dec
sbb
call
enter
nop
mov
mov
mov
xchg
hlt
dec
mov
int3
out
pop
int
pushf
dec
or
rol
sahf
and
leave
(bad)
jmp
xor
fidivr
mov
test
lock
cld
cmp
push
scas
popfw
xor
inc
or
loop
sbb
dec
pop
xchg
call
pop
push
cmp
xor
jne
mov
jge
pusha
and
jecxz
or
push
cmps
mov
icebp
mov
scas
ret
sub
push
imul
movs
lods
cld
rcl
or
std
aam
aam
(bad)
pop
in
in
xchg
stos
and
ds
adc
add
jge
inc
sahf
push
xor
or
adc
and
lods
inc
mov
sub
cmp
outs
mov
push
lahf
mov
stos
sbb
nop
popa
push
sub
fcom
cmp
dec
xchg
call
cmp
mov
jbe
lea
push
lock
ss
cmp
cmps
jmp
mov
add
push
push
test
dec
sbb
xchg
push
bound
popa
add
in
push
xor
inc
xchg
jns
mov
lock
pushf
frstor
in
rcl
lock
(bad)
sbb
mov
and
dec
xor
aas
shl
inc
and
sbb
cmps
push
sbb
aaa
test
rcr
fisub
mov
enter
push
sbb
std
loope
or
inc
inc
inc
sar
fimul
loopne
dec
lea
into
mov
sbb
xor
inc
fcmovbe
call
xchg
pop
retf
mov
mov
ins
adc
les
adc
jge
out
jbe
arpl
sti
out
lahf
push
arpl
sub
mov
shl
popa
mov
xchg
xor
inc
mov
mov
jnp
xor
jge
add
dec
(bad)
xor
call
xchg
sbb
fcom
mov
cmp
mov
mov
popa
stos
mov
popf
gs
ss
fcom
dec
adc
dec
xor
out
aad
sub
dec
cmp
adc
icebp
jmp
in
mov
mov
or
cmps
hlt
push
stos
test
loope
cwde
bound
iret
and
ret
adc
test
xor
not
xor
frstor
jg
les
jns
fst
pop
cmp
mov
sub
cmps
rcl
sbb
aas
and
xchg
test
push
push
mov
(bad)
push
mov
mov
idiv
popa
pop
adc
mov
das
or
int
leave
pop
xor
bound
repz
fbstp
dec
xchg
test
mov
es
mov
mov
rol
pop
pop
dec
cmp
sbb
add
or
ins
sbb
inc
scas
mov
cmp
in
pusha
in
ret
push
stos
push
sar
cmp
xchg
fild
sbb
cmc
and
js
hlt
inc
and
inc
inc
sahf
mov
movs
ror
and
inc
outs
adc
popa
cmp
out
cmp
xchg
ror
out
add
out
fst
fcmovnbe
in
sbb
imul
push
sub
add
jne
pop
cmp
adc
or
lods
(bad)
aam
loope
idiv
scas
fcmovnu
mov
mov
dec
add
aam
mov
jb
adc
push
xor
sub
and
mov
pop
imul
ret
ss
loopne
ror
leave
jo
gs
test
pop
cmps
cmp
adc
adc
sbb
xlat
sbb
push
(bad)
mov
xchg
and
adc
int3
mov
jno
fs
mov
jno
jmp
fisttp
cvtdq2ps
or
sbb
lar
stos
in
lahf
rcl
not
inc
in
xor
sub
outs
or
jnp
popa
ss
push
add
xchg
cmp
iret
in
arpl
adc
dec
dec
iret
cmp
gs
inc
mov
popf
mov
div
jmp
xchg
xchg
js
lock
movs
iret
mov
adc
ds
fisttp
xor
mov
test
aad
mov
mov
mov
arpl
push
ins
and
fwait
jecxz
sar
and
imul
lods
adc
sbb
std
jp
out
or
in
std
cdq
sbb
and
push
mov
xchg
test
dec
in
cmp
shr
and
push
pop
push
popf
fist
sbb
mov
xchg
fs
pop
mov
cmp
fs
mov
mov
adc
ins
call
fistp
loop
and
xchg
lods
rcr
push
xchg
leave
test
sahf
pop
dec
inc
call
pop
cwde
cdq
imul
scas
es
and
inc
inc
fwait
lahf
test
mov
mov
mov
cli
imul
sbb
iret
fwait
mov
je
hlt
xor
mov
dec
xchg
mov
inc
(bad)
mov
mov
xor
xchg
mov
jl
ficom
adc
jns
pop
(bad)
push
jne
fild
xor
mov
and
ss
retf
dec
bound
jecxz
and
push
movs
adc
repz
aas
dec
call
and
loop
add
imul
repnz
lds
adc
sub
rol
mov
add
dec
(bad)
aam
pop
xchg
sbb
adc
(bad)
adc
lahf
push
shl
fdivrp
mov
aam
mov
jle
dec
adc
mov
stos
loopne
jl
mov
cmp
loopne
mov
shr
sub
inc
inc
push
and
lea
fstp
mov
rcl
and
scas
fldcw
dec
(bad)
cli
das
stos
jecxz
sub
loope
outs
pusha
dec
xchg
add
test
(bad)
cli
test
inc
add
pop
and
or
nop
xor
jmp
or
jp
lock
cmp
jns
jo
inc
push
stc
add
sbb
or
test
adc
cmp
imul
cmp
imul
pop
mov
ss
fcom
in
ins
jbe
jp
xor
add
into
adc
push
aaa
adc
dec
sbb
into
fstp
test
inc
xlat
fst
ret
dec
jbe
cmps
rcr
call
pop
push
pop
push
jnp
das
mov
in
xchg
cmps
inc
adc
inc
lea
add
test
movs
mov
mov
mov
mov
add
cmps
mov
in
mov
push
jmp
stc
and
sbb
out
gs
cmps
ds
adc
fsub
push
ds
jge
repnz
ret
std
mov
xchg
mov
jmp
inc
out
mov
and
push
xor
adc
fwait
jge
sbb
xchg
mov
dec
push
mov
mov
in
inc
push
and
jle
ins
dec
into
aas
test
jo
xor
out
call
pop
xchg
xchg
(bad)
popa
push
pop
jecxz
clc
out
adc
retf
or
fnstcw
xchg
icebp
ss
pop
add
or
cmps
sar
aaa
and
jmp
inc
and
mov
add
fbld
fmul
add
dec
hlt
jg
(bad)
in
and
sahf
jle
fwait
jo
mov
shl
stc
addr16
or
call
jle
stos
cmp
dec
test
imul
aam
cwde
shl
pop
xchg
test
fmul
clc
add
mov
dec
fwait
loope
sti
push
and
sub
js
pop
cmps
cmp
in
stos
mov
push
add
xchg
clc
test
popf
jmp
aas
push
add
test
rcl
cmps
jmp
mov
nop
je
add
add
jae
mov
leave
stos
loope
(bad)
jae
push
jne
je
or
shl
lds
f2xm1
(bad)
out
leave
pop
pop
add
mov
mov
inc
add
fisubr
xchg
add
xor
cwde
fwait
fwait
and
and
push
dec
pop
lods
adc
leave
inc
sub
aas
in
add
popa
ja
pop
xchg
lahf
pop
add
cdq
push
stc
sub
arpl
jg
sbb
xchg
adc
mov
xchg
shl
or
and
or
imul
bound
into
mov
xchg
mov
outs
inc
das
mov
es
inc
cwde
shl
push
sbb
cmp
dec
int3
adc
push
mov
cli
loopne
mov
push
jno
and
cmp
in
mov
cvtpi2ps
out
adc
xchg
scas
or
je
dec
shl
sbb
and
push
sbb
retf
dec
movs
out
call
hlt
sbb
pop
sub
inc
or
cmp
mov
pop
mov
pop
mov
ja
mov
stos
add
sub
cwde
out
pop
cmps
push
xor
inc
iret
sbb
push
neg
inc
hlt
imul
stos
xor
hlt
sti
add
es
sbb
ds
push
in
cli
and
dec
xchg
in
enter
xchg
loopne
ret
fadd
popf
sub
mov
(bad)
push
mov
push
(bad)
int3
and
pop
(bad)
cmp
fwait
pushf
mov
jg
inc
frstor
ret
les
inc
pop
test
lahf
dec
sbb
push
xor
aaa
push
dec
test
repz
(bad)
jle
push
in
stos
daa
outs
pop
push
inc
xchg
bound
inc
cmp
sti
ins
stos
mov
mov
popf
or
push
and
retf
fstp
sete
or
adc
int3
nop
mov
ins
pop
mov
sbb
(bad)
mov
outs
shl
jnp
cmp
push
mov
cmc
pop
je
and
das
mov
dec
les
fisubr
cmps
ds
mov
jmp
int3
jge
ins
mov
lahf
pop
jo
jnp
mov
lahf
dec
mov
js
fcmovnb
cmps
xor
in
jmp
fild
adc
add
mov
dec
and
xchg
inc
repnz
jns
(bad)
xchg
loope
(bad)
push
and
outs
push
jle
mov
fld
stos
or
popf
xlat
cs
aad
mov
cmp
fldcw
fs
rcl
push
popa
aam
in
inc
sub
xor
inc
pushf
mov
mov
xchg
or
xchg
in
das
repnz
push
mov
sahf
push
sub
dec
(bad)
mov
gs
or
sar
in
out
push
xor
in
nop
or
adc
cmp
icebp
and
sub
lahf
inc
xchg
icebp
dec
push
or
jmp
sub
movs
sbb
imul
or
call
add
xor
daa
pop
mov
jge
xchg
adc
int
push
jnp
mov
mov
ret
jmp
ja
xchg
add
jo
iret
jmp
lods
inc
cmp
(bad)
jl
out
imul
inc
mov
dec
add
pusha
enter
xchg
or
jcxz
imul
xchg
test
bound
inc
sbb
xor
mov
add
cs
xchg
push
div
adc
jae
lock
call
cmps
inc
ins
loopne
jmp
psubd
jg
inc
imul
pusha
mov
pop
xchg
ins
stos
in
xchg
leave
jl
xchg
pop
xor
inc
cmps
test
or
xchg
jno
jo
test
test
inc
and
push
mov
push
ret
sahf
push
inc
xchg
fmul
inc
xchg
loop
and
jmp
fiadd
and
cmp
xlat
ds
popf
jno
jl
and
mov
lods
retf
cmp
addr16
out
aad
fidivr
aaa
fcomp
(bad)
fistp
outs
push
pop
mov
mov
outs
loope
js
pop
nop
xchg
or
fdiv
in
mov
clc
cmps
xor
(bad)
lods
ins
rdpmc
cmp
dec
cmp
lods
ss
js
cwde
out
fsubr
or
mov
les
sub
movs
jns
xchg
pusha
fwait
mov
out
scas
pop
das
xor
xchg
mov
pop
jl
cs
adc
jbe
lahf
sahf
sbb
push
add
lods
fidiv
sahf
fnstsw
lock
mov
sub
jns
pop
xchg
(bad)
ds
shl
xchg
xchg
xchg
jnp
cmps
inc
jne
push
aaa
mov
outs
sahf
test
mov
pop
loope
mov
xchg
int3
adc
jmp
pop
shr
mov
in
nop
jl
mov
sbb
outs
fidiv
std
stc
dec
test
mov
scas
scas
clc
stc
jp
xchg
mov
pop
mov
stos
xlat
shl
(bad)
movs
add
setp
pop
pop
movs
rep
movs
bound
mov
pop
shr
cmp
mov
ficomp
pop
xor
shr
inc
test
inc
push
pop
add
mov
stc
cmc
js
(bad)
add
lea
nop
arpl
iret
repz
cmp
jae
test
in
nop
neg
paddd
xor
mov
inc
xchg
mov
pop
repnz
aas
data16
imul
or
mov
cmp
leave
sub
push
push
inc
and
mov
adc
ror
pop
jb
mov
enter
cmp
js
int
popa
add
inc
adc
jge
pcmpgtb
mov
or
loop
dec
iret
push
and
hlt
xchg
mov
inc
outs
icebp
pop
cdq
ret
sub
and
xor
jg
jmp
lds
aad
mov
fimul
retf
xchg
jg
gs
inc
inc
xchg
int3
pop
(bad)
adc
xlat
lock
xor
clc
imul
or
das
or
or
ret
imul
and
mov
jmp
adc
xchg
adc
jle
mov
xchg
lods
push
fist
dec
sbb
icebp
adc
mov
adc
cmp
loop
imul
xor
gs
fild
adc
dec
clc
je
jle
adc
into
movs
mov
pop
push
jb
stos
pop
jns
in
add
pop
dec
mov
lods
neg
add
or
ins
mov
push
imul
adc
scas
je
jnp
mov
jb
scas
add
add
lods
popf
dec
cmp
mov
fsub
push
in
movs
adc
idiv
rcr
arpl
mov
lods
mov
fucom
and
xlat
pop
xlat
call
adc
stos
xchg
mov
into
xor
sub
mov
pop
popa
shl
lds
aad
daa
and
cli
pusha
dec
pop
fsubr
sub
mov
cmp
inc
pop
pop
(bad)
jl
cwde
sbb
push
jmp
dec
scas
jne
gs
lods
clc
outs
sti
sbb
imul
movs
dec
sub
mov
out
pop
daa
cmc
pop
call
mov
xor
jle
xor
mov
cdq
xchg
xchg
js
adc
inc
push
rcr
dec
test
push
inc
mov
add
xchg
test
push
dec
cmp
movs
pushf
xor
ja
xlat
ss
clc
pop
(bad)
fiadd
int3
cld
xor
xor
mov
lock
jmp
cld
xor
jb
mov
fwait
lods
inc
add
cmp
pop
(bad)
push
int
mov
xor
xchg
fs
push
jae
xor
mov
xchg
jno
(bad)
cwde
mov
mov
sub
push
test
and
ror
cwde
mov
fcom
mov
cmps
(bad)
jns
mov
ret
daa
in
sbb
and
mov
pop
jmp
fbstp
inc
rcl
ja
add
outs
xor
xlat
inc
popf
cmps
pop
cmp
enter
xchg
(bad)
push
jnp
xor
pushf
scas
ss
sub
jno
test
ins
or
pop
lahf
mov
call
mov
jecxz
push
sbb
mov
xor
cmp
and
add
imul
jno
fild
push
les
pusha
ds
xor
pop
in
test
out
ret
sti
sub
mov
jae
shl
addr16
xor
mov
xor
lods
dec
lahf
in
cwde
lahf
imul
daa
jns
sbb
ds
xor
mov
pop
add
ja
push
fwait
jno
jl
or
inc
or
out
pop
stos
push
inc
(bad)
dec
mul
addr16
add
xchg
ins
out
fcomp
pop
cmp
add
repz
or
js
push
shr
or
cmp
in
push
(bad)
fwait
jg
sub
jo
add
stos
inc
popf
xor
push
(bad)
out
xor
rcr
inc
into
iret
pop
retf
(bad)
fucompp
popf
hlt
jns
jg
inc
imul
add
call
add
xor
cmps
test
push
pop
pop
nop
ret
sbb
mov
repnz
mov
pop
out
movs
mov
mov
xchg
iret
add
ret
xchg
loop
cmps
repz
lods
jnp
jae
lahf
fwait
mov
and
ss
in
lods
repnz
mov
push
(bad)
fs
bound
adc
fld
push
jl
inc
adc
leave
pop
pop
cwde
movs
imul
add
push
sbb
es
cdq
jmp
sbb
dec
and
mov
push
test
add
mov
sub
inc
(bad)
add
adc
out
dec
cmp
rcr
push
shl
into
aaa
retf
enter
and
ficomp
pushf
lock
ins
jge
xor
fcomp
sub
clc
cmp
je
outs
xchg
and
cmps
jle
mov
push
je
dec
xchg
outs
fmul
inc
dec
mov
cmc
movs
cdq
ins
movs
lea
inc
loope
inc
jmp
popa
sub
pop
fst
and
int
outs
hlt
mov
sub
jle
es
(bad)
push
aad
imul
mov
ud2
xchg
in
dec
mov
iret
sub
retf
xchg
repz
sub
adc
fwait
out
into
push
pop
pop
call
out
pop
repnz
movs
mov
pop
dec
aam
xor
fisubr
push
mov
mov
int3
std
pop
mov
and
push
sbb
cdq
jns
jle
mov
dec
push
or
mov
pop
call
(bad)
fistp
jb
fild
add
push
xchg
or
inc
cmp
xchg
push
pop
in
xor
scas
xor
pop
jne
pop
not
icebp
adc
xor
lods
out
into
out
leave
push
adc
and
cwde
ret
sbb
mov
cmp
outs
(bad)
iret
cmp
repz
cli
cli
cmp
shl
ins
das
outs
push
mov
inc
cmp
pop
mov
mov
sahf
daa
aad
movs
adc
jae
call
(bad)
fidiv
sahf
xchg
ss
jo
xchg
lock
mov
add
add
xor
mov
repnz
repz
mov
xor
jge
cmp
xchg
and
sar
cmps
dec
mov
inc
push
ror
test
cmp
out
rcl
fsub
popa
lea
repnz
(bad)
sub
call
mov
xor
arpl
mov
cmp
mov
or
lods
push
lds
aam
or
mov
movs
mov
mov
xchg
push
scas
inc
push
out
movs
or
(bad)
and
pop
mov
push
sub
nop
xlat
fstp
pop
retf
mov
test
jmp
fild
xchg
mov
call
and
xor
loop
rcl
mov
mov
test
out
pop
gs
pop
add
pop
test
jmp
jb
adc
push
and
call
clc
cmp
in
xor
cmp
jb
sar
dec
xor
push
cmp
xchg
ffreep
or
xchg
(bad)
mov
dec
jb
jno
inc
cmc
pop
in
push
pop
xor
xchg
sbb
stos
pop
stos
repz
pop
adc
enter
in
loopne
nop
not
mov
ss
fnstsw
fmulp
loopne
icebp
mov
xchg
push
sub
aaa
loope
mov
jg
adc
outs
jmp
popa
mov
adc
out
jnp
jle
iret
std
push
imul
push
std
shr
adc
push
cmp
push
lock
out
adc
fdiv
sbb
sub
fdiv
sahf
mov
push
pop
not
or
push
jno
push
loope
xor
pop
in
rol
mov
pop
and
popa
test
add
in
jp
dec
mov
rol
fidiv
sub
loopne
cmp
pusha
outs
retf
sub
retf
gs
cmps
jne
aaa
inc
test
mov
arpl
int3
sub
mov
jno
push
cwde
outs
mov
adc
loopne
into
cmp
push
in
and
fidivr
(bad)
cli
inc
sahf
inc
and
dec
mov
sub
es
push
(bad)
jecxz
jl
ins
push
cld
pusha
mov
cmp
push
jb
cdq
adc
fs
mov
sbb
push
cdq
hlt
cmps
fistp
(bad)
cld
cli
nop
push
mov
cmps
ins
mov
test
pop
fdivr
test
lds
stos
sti
leave
iret
sbb
(bad)
sar
xchg
and
jae
inc
data16
or
fisubr
aaa
jo
mov
(bad)
pop
xor
enter
cmp
push
inc
inc
or
sub
or
movs
cmp
adc
stos
arpl
repz
stc
mov
fdivp
inc
mov
jl
cmps
std
jl
pop
inc
and
xchg
xlat
lds
inc
retf
add
pushf
inc
adc
js
cld
inc
js
into
jmp
xlat
dec
mov
fcom
sar
repnz
ds
dec
sub
fwait
or
inc
scas
xor
or
retf
inc
loop
jl
or
lds
ss
pop
mov
scas
ret
ins
push
pushf
sbb
sbb
cmps
enter
fs
inc
icebp
pop
hlt
or
and
pop
pop
pop
(bad)
lock
mov
outs
adc
(bad)
mov
les
xor
and
cmp
pushf
dec
cs
fist
out
fmul
ins
mov
pop
ss
xchg
pop
aas
loope
rol
jae
or
fbstp
push
adc
sbb
das
arpl
lock
retf
sub
and
sti
movs
push
mov
jecxz
xchg
or
mov
mov
loop
ja
xchg
(bad)
iret
jl
jbe
ficomp
or
pop
out
and
mov
mov
adc
sbb
(bad)
stos
push
dec
xchg
push
imul
mov
stos
cs
inc
add
sbb
add
sub
jl
fist
movs
lea
mov
cmp
sahf
cmp
(bad)
cli
clc
fs
sbb
dec
(bad)
neg
sbb
cdq
popf
inc
data16
lock
mov
inc
mov
mov
je
cmps
push
pushf
add
adc
lods
not
stc
stos
jge
ins
repz
push
mov
das
jnp
pop
das
mov
sub
fldcw
out
adc
es
in
(bad)
(bad)
pushf
out
mov
or
lds
test
ins
push
into
es
pop
test
inc
enter
or
gs
popf
sub
sti
cmps
xor
shl
lahf
pop
ds
mov
add
loope
stos
xchg
cmps
rcl
call
repnz
test
repz
cmc
das
pop
(bad)
adc
call
pushf
sbb
bound
or
mov
jb
rcl
std
in
xchg
inc
fst
push
neg
inc
sar
arpl
mov
aad
push
std
and
mov
cmc
enter
inc
pop
out
inc
and
add
das
imul
xor
jecxz
sub
adc
lds
movs
pushf
cmp
or
inc
in
daa
xlat
sbb
inc
mul
or
pop
ret
pop
je
add
add
popa
lock
sub
mov
ds
inc
inc
mov
sub
dec
fwait
sub
jo
sbb
sub
xchg
push
mov
dec
inc
pop
xchg
push
jp
fisub
push
(bad)
out
hlt
mov
cs
xor
enter
pop
cmp
push
jg
das
test
mul
ds
mov
add
fadd
scas
sub
xchg
out
and
cmp
ja
mov
in
dec
std
jns
bound
ja
sbb
adc
outs
xchg
push
cmp
xchg
adc
push
jne
test
shl
dec
inc
or
xchg
(bad)
(bad)
pop
fsub
jnp
popf
loopne
outs
mov
xchg
cmp
cmp
adc
stos
clc
push
inc
jne
fs
repz
fmul
cmp
pop
sahf
loop
in
pop
retf
lds
pop
ret
mov
aaa
sti
jp
cs
scas
fstp
jge
jmp
push
retf
or
std
adc
aaa
hlt
enter
jl
dec
ss
jb
retf
sbb
fisttp
sbb
out
mov
push
das
stos
lea
xor
jmp
fdiv
or
jmp
int
push
pop
outs
xchg
add
inc
pop
mov
movs
jle
stos
push
sbb
sbb
push
test
cmp
xchg
xor
push
sub
add
repnz
neg
cmp
lahf
dec
sbb
and
sub
or
adc
adc
inc
in
adc
cmps
adc
imul
sbb
jno
ror
rol
dec
inc
imul
js
fucomi
pop
hlt
dec
data16
pop
or
inc
fmul
mov
fwait
aam
icebp
mov
ds
mov
adc
jge
add
sbb
dec
mov
div
ror
mov
push
mov
mov
cmp
rcl
jp
pop
mov
add
nop
imul
push
mov
scas
jo
dec
xor
mov
movs
inc
(bad)
shl
mov
movs
pop
lahf
dec
repz
in
rcl
xchg
push
call
push
je
ja
test
adc
pop
mov
add
sbb
inc
int
inc
xor
cmp
xor
or
ss
sbb
ss
jl
pop
enter
clc
or
leave
jg
add
sahf
mov
jg
test
mov
xchg
cdq
mov
je
pop
std
dec
loopne
mov
and
cmps
mov
xlat
cwde
inc
inc
stos
push
dec
stc
test
adc
mov
test
int
mov
test
ror
xchg
mov
mov
ds
mov
out
clc
scas
mov
mov
nop
(bad)
sub
mov
xor
cdq
xor
mov
lds
dec
mov
xor
addr16
hlt
xor
(bad)
in
stc
cdq
jle
in
leave
fdivr
imul
push
and
adc
sub
in
loopne
stos
out
pusha
pushf
sub
add
icebp
out
cmps
(bad)
mov
mov
pop
repz
(bad)
add
in
pop
stos
mov
mov
sar
hlt
out
scas
iret
push
cmp
(bad)
loopne
in
stos
jae
sbb
loop
inc
pop
jmp
movs
pop
cmp
test
imul
pop
outs
and
cmps
cmp
pop
add
test
ins
shl
(bad)
mov
mov
rcl
xchg
(bad)
adc
sbb
sbb
pop
(bad)
popa
mov
into
mov
xchg
pop
fwait
cli
cwde
aam
outs
daa
xor
jnp
fistp
inc
in
hlt
js
(bad)
adc
js
out
inc
jl
daa
mov
mov
sub
arpl
pusha
and
rcl
adc
sbb
pusha
sbb
mov
aas
pushf
xchg
das
scas
enter
bound
sbb
push
ret
add
mov
push
es
xor
jno
iret
jne
cli
jnp
ja
dec
jmp
addr16
add
ret
mov
dec
push
cmp
(bad)
mov
xor
das
cli
scas
ds
aaa
jl
aaa
in
sub
and
cmp
enter
xchg
pop
cmp
fsub
cmp
stos
loope
shl
lods
enter
pop
cmp
and
mov
(bad)
jbe
pop
adc
mov
pop
cmps
or
sub
add
adc
lahf
inc
lods
push
sbb
mov
pop
cmp
mov
fbstp
int
xor
mov
cmc
std
scas
inc
inc
aad
clc
scas
mov
xor
add
ins
push
inc
dec
adc
rol
mov
js
jl
cwde
inc
ret
xor
retf
xchg
mov
lea
addr16
(bad)
and
inc
push
int
ficom
neg
dec
xor
popa
mov
sbb
(bad)
adc
jmp
dec
adc
mov
xchg
xor
push
mov
jmp
(bad)
ret
add
mov
dec
mov
in
xchg
mov
ret
sahf
dec
(bad)
fsub
push
sbb
or
sti
xor
dec
out
je
mov
shl
add
add
adc
gs
rcl
push
popa
jmp
push
mov
arpl
shr
stos
mov
fnstenv
aad
mov
fild
aam
lock
add
mov
sub
mov
popa
bound
sub
mov
int3
jb
and
sbb
or
lds
fdiv
in
lds
cli
xor
add
push
test
std
jno
in
sub
or
in
(bad)
jo
ret
sub
dec
push
call
test
pop
ret
arpl
cwde
jb
jg
ja
sub
daa
enter
lea
(bad)
loopne
or
je
in
pushf
stos
jnp
jle
rol
sbb
adc
pop
sbb
jle
ret
or
inc
call
test
push
dec
sub
mov
xchg
cmp
jge
adc
pop
xor
addr16
fstp
jno
and
add
push
mov
ror
inc
mov
pop
pop
xchg
out
inc
sbb
mov
je
pushf
test
inc
push
js
adc
sub
setg
ret
jmp
xlat
adc
lods
hlt
mov
mov
jbe
movs
mov
shl
imul
add
cmp
push
hlt
jle
pop
lds
and
sahf
in
inc
sbb
sub
nop
or
cmc
jbe
adc
and
or
mov
xchg
mov
pop
dec
hlt
pop
das
arpl
movs
mov
mov
in
cli
adc
cdq
ret
outs
push
xor
xchg
inc
pushf
ins
out
lods
pop
lea
push
das
sar
jecxz
jns
(bad)
fcmovnb
movs
lock
sbb
sbb
cmc
sar
dec
(bad)
xchg
pop
inc
loop
adc
push
sahf
sub
sbb
js
and
add
dec
cmp
clc
aas
sub
imul
nop
and
ins
xlat
mov
test
mov
sbb
aaa
iret
in
pop
retf
addr16
pop
int3
and
mov
push
jg
sar
cdq
jns
mov
rol
cmp
jl
mov
cmc
xchg
jmp
retf
or
cmp
loope
pop
dec
std
adc
aas
mov
mov
and
mov
rcl
in
jmp
rol
mov
cmp
inc
imul
mov
dec
cmp
push
in
mul
aam
iret
aam
add
(bad)
imul
stos
cli
mov
(bad)
mov
int3
mov
imul
(bad)
lods
xchg
fist
dec
cmp
xchg
xor
sar
clc
cpuid
stos
(bad)
inc
add
leave
fs
sbb
jge
test
mov
jmp
rcr
xor
adc
popf
std
or
daa
or
mov
mov
pop
sub
nop
adc
jle
fstp
adc
idiv
icebp
jmp
adc
pop
mov
and
data16
fmul
dec
sub
xchg
daa
push
jo
xor
add
and
lds
or
(bad)
arpl
stos
sbb
call
jl
fs
fistp
dec
mov
retf
adc
pop
iret
ror
sub
dec
mov
mov
or
pop
push
xchg
mov
xchg
xor
pop
xor
mov
push
repnz
es
pop
cmp
or
xor
xor
cmps
push
in
sbb
int
pop
loop
push
dec
test
adc
sbb
push
mov
pop
xchg
sbb
sub
fcmovb
xor
rcr
sar
popw
in
imul
inc
dec
inc
(bad)
mov
pop
adc
mov
dec
(bad)
(bad)
dec
xor
les
and
in
mov
adc
jne
pop
xor
and
es
mov
mov
out
js
ret
ror
xor
cmp
fisttp
pop
outs
inc
bound
and
mov
pop
sbb
out
out
add
out
cmp
and
ds
jg
mov
(bad)
cmp
fmulp
or
fucom
inc
test
push
dec
jae
inc
xchg
mov
mov
jns
rcr
popa
inc
(bad)
jmp
push
and
les
push
das
icebp
stos
test
add
add
popf
in
xchg
rcl
jle
dec
xlat
push
sub
jecxz
and
inc
sahf
mov
ins
push
push
mov
movs
fcomp
dec
ret
shl
xor
and
movs
sub
mov
jae
push
les
movs
pusha
push
(bad)
xchg
inc
mov
ds
inc
xor
xchg
jno
inc
jl
pushf
pusha
stc
out
out
mov
aas
and
mov
jne
mov
push
dec
ins
hlt
mov
not
mov
lahf
rcr
in
test
xchg
mov
fnclex
push
call
jp
xchg
rol
stos
jmp
cmps
and
es
inc
or
cmp
dec
aas
cmp
sub
mov
mov
dec
cmp
mov
mov
mov
pop
inc
and
into
retf
fistp
popa
(bad)
movs
jmp
popf
mov
adc
mov
lock
loopne
test
(bad)
shl
ror
outs
jne
into
xor
repz
xchg
div
and
fwait
stos
stc
xor
js
ins
mov
sbb
js
cmp
and
xchg
pop
xor
lods
scas
push
sub
cmp
inc
movs
repz
ins
sub
in
mov
stos
mov
out
push
adc
dec
pop
aam
sbb
mov
out
push
fwait
nop
test
iret
mov
das
ins
xor
fwait
and
or
or
xchg
and
jns
push
cmp
push
fwait
pop
pop
cmps
mov
je
jp
cmp
inc
outs
cmp
das
ss
xor
inc
adc
mov
(bad)
mov
jp
sti
and
push
jb
ffreep
sbb
sbb
setge
(bad)
and
test
sub
ret
mov
adc
sub
mov
dec
(bad)
sti
xchg
pushf
mov
pop
lahf
ja
fnstsw
dec
inc
iret
or
dec
mov
arpl
pop
xchg
in
jne
std
rcl
jae
push
pop
sbb
retf
push
mov
mov
enter
jae
pop
imul
add
pop
mov
icebp
les
ja
dec
jnp
aas
shr
push
inc
sub
pop
mov
pop
inc
mov
and
inc
mov
or
jae
arpl
pop
jne
dec
push
xchg
cs
ds
mov
test
mov
jl
xor
dec
(bad)
push
sbb
into
jmp
mov
inc
fsub
dec
jge
cmps
push
push
mov
push
inc
add
(bad)
xchg
inc
and
push
jl
loop
(bad)
inc
ins
call
sub
or
pop
cs
fsub
pop
mov
shr
imul
(bad)
out
mov
les
and
mov
cld
or
mov
fs
sub
pop
jecxz
jmp
call
lock
inc
xchg
xor
jge
dec
scas
test
inc
in
mov
ins
xlat
xchg
mov
repz
inc
cmp
icebp
push
pop
jns
lock
jo
xchg
nop
add
dec
add
call
xchg
cmp
(bad)
mov
push
call
and
mov
cmp
call
call
pop
fcom
sar
out
add
call
(bad)
ss
mov
dec
retf
mov
js
jle
or
jbe
and
dec
jns
jecxz
loop
test
add
sbb
dec
loop
out
pop
fstp
hlt
xor
adc
call
pop
dec
pop
lds
mov
mov
xor
aas
in
in
fstp
mov
or
ret
sub
les
adc
js
jno
sbb
popa
push
bound
add
add
aaa
jg
mov
mov
pop
pop
icebp
cs
mov
inc
fnsetpm(287
push
xor
loope
and
lea
sbb
jne
xchg
mov
mov
dec
hlt
cmp
jnp
mov
jmp
xor
ins
daa
aam
or
push
cmp
and
mov
dec
jmp
push
sahf
mov
cmc
or
outs
mov
pop
cmp
das
add
push
ds
(bad)
jne
mov
call
adc
bnd
mov
mov
push
ret
leave
add
push
js
add
mov
jb
xor
sbb
xor
loopne
cmp
cmps
nop
xchg
and
ds
leave
ss
js
sbb
repz
jo
adc
or
out
out
mov
pop
pop
into
adc
and
int3
fisub
sbb
repnz
pushf
test
cmp
cmp
cmp
mov
jbe
mov
mov
or
ret
jmp
mov
jl
xchg
sbb
test
outs
sbb
(bad)
repnz
fs
ja
rol
lods
mov
fcomip
xor
jl
ss
mov
push
add
(bad)
mov
push
stos
add
xor
iret
add
xlat
inc
pop
ss
xchg
xor
aaa
lea
sub
adc
popf
xlat
mov
adc
sub
xchg
xor
jb
lods
sbb
aas
xchg
cmc
(bad)
sub
outs
and
pop
outs
das
push
clc
lock
std
js
xchg
jns
jbe
sbb
jne
ficom
add
push
inc
xchg
movs
frstor
lock
and
pushf
daa
adc
push
mov
add
adc
fld
mov
jmp
and
das
mov
mov
add
lock
leave
jl
pop
jae
mov
mov
jecxz
cmc
push
jbe
ss
jb
push
iret
push
mov
jle
sbb
inc
xor
add
xor
or
test
mov
jle
xor
psrld
mov
jg
add
test
or
add
(bad)
shl
fstp
mov
push
sub
push
clc
and
shr
lahf
rol
mov
pop
dec
adc
add
pop
retf
ds
test
pop
(bad)
aaa
ins
mov
out
loopne
repz
pusha
std
test
movs
or
xor
imul
xchg
jae
(bad)
clc
pop
in
js
daa
popf
(bad)
and
xchg
dec
push
jns
mov
xor
push
or
adc
add
rcl
dec
clc
fimul
mov
sbb
das
popa
jnp
call
dec
aad
mov
sbb
adc
lods
push
fiadd
ret
mov
jmp
xor
xchg
mov
popa
jae
outs
(bad)
sub
mov
or
xchg
xchg
jno
outs
jp
dec
mov
xchg
aas
mov
mov
inc
and
rcr
mov
cmps
repz
mov
fcmovnbe
inc
call
div
iret
daa
xchg
adc
idiv
f2xm1
dec
ins
int
jle
mov
pop
dec
pop
ror
std
adc
jmp
js
adc
or
xchg
repnz
or
sbb
out
sar
jg
mov
js
in
(bad)
cli
inc
xor
loopne
jg
mov
xor
or
movs
test
arpl
mov
retf
addr16
pusha
pusha
out
js
inc
outs
retf
rcr
inc
test
lds
loopne
pop
jecxz
aas
loop
popf
gs
sbb
sar
adc
pop
fs
adc
in
pop
adc
(bad)
sbb
and
mov
mov
repz
aad
add
mov
movs
adc
repnz
dec
mov
mov
es
push
hlt
pushf
test
mov
mov
mov
and
dec
jg
push
mov
sar
in
cld
fild
ficom
in
retf
inc
ds
lods
ja
xchg
pop
mov
and
loop
out
movsx
call
inc
aaa
sbb
das
fist
xor
ja
(bad)
fmul
pushw
mov
fstp
add
lock
iret
fistp
pop
fwait
loop
mov
daa
gs
or
cmp
data16
add
cmp
into
cmc
cli
mov
and
sub
pop
call
cwd
sbb
(bad)
pop
dec
daa
sbb
arpl
mov
push
add
mov
fild
shl
add
rcr
xchg
push
xchg
(bad)
out
leave
dec
pop
mov
adc
aaa
(bad)
push
mov
pop
jns
sbb
dec
cwde
jb
push
cmps
fild
push
ins
fidivr
inc
int
mov
mov
(bad)
fild
jmp
mov
cmps
popf
lea
(bad)
cmp
call
cmp
xor
xchg
cmc
xchg
mov
sar
mov
addr16
sbb
js
test
(bad)
js
push
push
rcr
cmps
mov
mov
fsubr
out
hlt
in
jae
sar
iret
out
aam
dec
rol
push
shr
fcomp
push
test
cmp
mov
lds
mov
repz
push
arpl
pop
jmp
mov
imul
push
xchg
mov
icebp
add
icebp
pop
add
(bad)
mov
mov
xlat
lods
movs
dec
cdq
retf
or
sub
enter
add
lock
xor
repz
sub
cs
cs
ins
mov
and
stos
arpl
shr
test
add
dec
lods
cwde
xor
imul
push
out
or
add
or
mov
scas
outs
verw
jmp
dec
mov
mov
or
fcom
sub
and
fcmovnbe
lods
(bad)
stc
fild
movs
mov
sbb
shl
(bad)
leave
push
or
stos
and
jb
repnz
inc
movs
pop
les
pop
stc
lahf
(bad)
jmp
jne
fnstenv
jne
xchg
mov
jmp
idiv
jmp
mov
jmp
int3
je
jnp
retf
or
int
mov
inc
stos
mov
loope
mov
aas
(bad)
cmp
cmp
pop
xor
rcl
push
mov
inc
out
and
popa
mov
sub
xchg
aam
test
inc
adc
pop
cmp
mov
or
fdivr
rcl
jecxz
sbb
jo
add
xchg
pusha
mov
paddw
shr
sub
mov
pop
mov
adc
test
mov
sub
and
daa
iret
mov
rol
outs
cmps
test
add
ja
out
mov
and
adc
jp
adc
aad
xor
inc
push
add
mov
mov
inc
stos
movs
bound
mov
xchg
add
pop
or
add
mov
fsub
xchg
push
push
adc
imul
repnz
xchg
sub
add
pop
es
ret
retf
scas
sub
xchg
repz
mov
fwait
dec
(bad)
cmp
inc
loopne
je
push
xor
mov
shl
cli
xor
ja
fld
div
(bad)
fidiv
and
sbb
lea
je
ins
push
inc
push
add
mov
xor
jge
mov
mov
sti
push
iret
mov
push
test
mov
sub
inc
cmp
jmp
pop
jnp
adc
jo
stos
or
push
adc
cmps
(bad)
pop
out
outs
(bad)
jnp
fcom
and
push
pushw
jnp
mov
in
jl
or
dec
mov
(bad)
xchg
movs
fs
imul
dec
mov
ret
gs
jg
out
test
adc
outs
fstp
sbb
sbb
mov
loope
mov
cmp
rol
mov
stc
fsub
cs
mov
inc
pop
retf
pushf
daa
ins
sub
cmp
or
mov
and
jle
shl
bound
icebp
lods
ret
xor
xor
dec
out
mov
pop
mov
loop
loope
loop
repnz
jne
dec
ja
xchg
mov
dec
adc
icebp
(bad)
ds
pop
int3
adc
cwde
arpl
sub
ficom
mov
mov
ins
mov
mov
mov
xor
pusha
pop
mov
pop
loop
pop
scas
scas
add
pusha
sub
sub
test
xor
pushf
ficom
mov
rcpps
pop
shl
or
and
add
call
rcr
jl
mov
or
xor
and
push
pusha
push
sti
out
scas
and
fbstp
adc
sub
inc
leave
fisubr
cwde
adc
dec
rol
cmp
jo
cmps
xor
jne
rcr
push
adc
bound
pop
jge
jne
push
cld
pusha
rcr
fwait
add
test
xchg
xor
cmps
cmps
pop
fcomp
pop
mov
xor
xchg
hlt
shl
xor
iret
inc
xor
mov
sti
(bad)
fs
stc
mov
cmp
mov
call
xchg
push
imul
mov
and
xor
sub
into
js
mov
aad
stos
clc
pop
call
das
push
fdiv
xchg
fstp
fs
and
or
js
push
psubsb
or
and
retf
cmp
(bad)
std
jae
add
inc
dec
mov
test
push
push
mov
push
sbb
cmp
mov
out
(bad)
frstor
sub
mov
fidiv
sbb
xlat
hlt
and
ins
aad
loop
ficom
pusha
sbb
out
out
mov
xchg
cmps
push
das
lock
mov
mov
(bad)
adc
cmps
bound
mov
xchg
cmp
xor
cmp
sbb
out
jmp
add
hlt
mov
daa
loop
jnp
dec
pmaddwd
mov
ds
(bad)
xor
mov
out
imul
mov
xor
inc
adc
addr16
sbb
mov
inc
jno
mov
loope
dec
cmp
clc
mov
fidivr
jmp
ja
cmc
xchg
xchg
sti
adc
sub
xchg
lea
(bad)
mov
mov
pop
shl
mov
mov
sub
out
push
adc
pop
pop
push
out
in
push
cmps
or
lock
fst
(bad)
push
stos
leave
xchg
mov
cmp
sbb
aam
xchg
pop
pushf
into
or
xchg
ins
shl
in
or
sub
cmp
gs
shr
sti
mov
rcl
add
adc
rcr
pop
mov
sub
fadd
or
sub
jmp
int
stc
and
inc
xor
lahf
into
lods
xor
lahf
into
add
xlat
pop
lahf
inc
sub
adc
call
mov
rcl
out
(bad)
rcr
(bad)
adc
or
pop
cmp
mov
stc
mov
jbe
xor
sbb
xchg
cmc
xor
adc
jne
lahf
outs
adc
jb
inc
pop
retf
mov
test
repnz
cmp
arpl
ins
(bad)
jbe
fiadd
xchg
or
cmps
scas
pop
outs
retf
add
push
mov
int
clc
xor
cld
jle
jne
imul
xchg
addr16
daa
stc
pop
pop
add
inc
xchg
daa
and
sub
sub
or
imul
das
fst
sub
ret
push
outs
leave
jnp
jo
pop
or
lock
mov
and
jmp
mov
pop
xor
mov
retf
ss
loop
push
ret
outs
sbb
iret
sbb
push
add
sub
push
sub
(bad)
out
aaa
not
clc
dec
scas
fbld
aam
aad
shl
sub
psllq
lea
lods
mov
cdq
sub
shl
enter
test
iret
or
add
mov
or
inc
mov
ins
and
dec
les
or
call
fstp
push
stos
mov
inc
cdq
loope
mov
into
int
ja
adc
dec
aaa
push
push
ds
into
push
pop
mov
pop
test
adc
cdq
pop
mov
push
fmulp
jmp
enter
cdq
popf
adc
ret
jmp
out
inc
mov
push
loopne
fsubr
and
jo
fst
inc
ins
sti
pop
aas
stc
mov
jmp
or
pop
std
cmp
adc
in
jb
mov
mov
add
aaa
and
data16
add
test
jge
(bad)
sbb
sbb
test
mov
(bad)
in
in
pop
ds
dec
rol
sahf
and
(bad)
in
xor
inc
push
xchg
es
call
retf
xchg
pop
xchg
aas
mov
sahf
cmp
loopne
cmps
dec
rol
data16
mov
or
adc
cli
fild
sub
cmc
pop
push
mov
mov
adc
inc
sub
scas
mov
arpl
cs
xor
in
mov
in
js
cmp
xor
pop
mov
mov
dec
jo
fdivp
cmc
mov
les
mov
je
xchg
fdiv
mov
jne
mov
jl
cmps
sbb
ins
sbb
mov
xchg
jae
xor
ret
cmp
inc
neg
sub
cld
and
jns
pop
mov
push
cmps
cwde
in
lea
adc
sbb
das
int
xchg
dec
retf
xchg
loopne
add
ds
inc
dec
dec
out
inc
xchg
movs
lahf
mov
aas
call
das
dec
iret
add
mov
(bad)
jmp
push
xor
lds
jge
leave
cld
lods
aas
dec
jmp
push
pop
outs
cld
sub
ins
xor
mov
out
lahf
mov
(bad)
sti
aas
xor
and
lahf
lea
cmps
call
test
sbb
fidiv
ror
push
dec
rcr
aaa
gs
xor
fwait
push
cmps
fucomi
rcl
pop
shl
add
out
mov
ja
dec
mov
adc
inc
xchg
out
into
add
xchg
mov
fistp
(bad)
nop
or
ret
sub
inc
lds
int3
xchg
nop
mov
sar
pop
jmp
pop
dec
jl
fisub
inc
es
mov
jb
mov
mov
js
push
inc
dec
ds
mov
inc
xor
retf
fimul
xchg
add
int
gs
jecxz
push
xor
test
mov
cmp
inc
and
aad
and
cli
popa
ds
shl
(bad)
in
scas
data16
jp
pop
mov
out
cmp
mov
mov
fcomp
push
aaa
inc
jno
add
(bad)
sub
xchg
cmp
test
inc
test
jecxz
lods
in
push
and
or
pushf
lock
stos
out
shl
lods
ror
push
xor
sbb
cmp
xor
cli
mov
cmps
adc
and
mov
mov
(bad)
fcomi
mov
lea
xchg
sahf
mov
push
fdiv
loop
mov
pop
dec
(bad)
cmp
adc
aas
repnz
lahf
xchg
or
cs
add
sbb
cmp
mov
shr
(bad)
shr
test
stc
je
pop
retf
mov
fcomp
and
mov
push
fldcw
mov
jle
sahf
mov
jp
bnd
test
xor
cmp
sbb
xlat
outs
test
and
into
stos
jo
sbb
cmc
jl
dec
mov
call
int3
into
js
mov
rcr
shl
jg
(bad)
stos
push
push
add
cdq
mov
movs
stos
mov
dec
xchg
add
cmps
test
mov
mov
push
dec
xchg
push
jbe
arpl
(bad)
jnp
xchg
gs
jne
clc
mov
push
cli
nop
loopne
popf
xor
mov
test
popf
push
ins
push
jle
cmps
mov
mov
and
pop
cmp
push
loopne
call
mov
jg
sub
dec
and
xor
mov
xchg
dec
addr16
in
push
fsubr
test
test
or
retf
adc
xchg
je
jnp
aam
adc
and
loope
faddp
and
lahf
or
cwde
mov
cdq
push
stos
inc
mov
xchg
in
mov
popf
inc
dec
unpcklps
jecxz
adc
dec
cmp
jns
push
sub
add
out
pushf
push
int
not
(bad)
adc
jg
mov
add
fs
sub
lods
addr16
aad
jno
jae
xor
(bad)
cmp
sbb
(bad)
enter
lea
iret
stos
(bad)
mov
loope
cmp
fs
pop
mov
pop
or
cmp
in
outs
ss
mov
fwait
or
xor
int
js
xor
arpl
repnz
mov
mov
xchg
rol
leave
gs
inc
push
sahf
out
inc
outs
sbb
and
mov
and
idiv
mov
jnp
jp
popf
xchg
test
adc
cmps
mov
sub
stos
icebp
retf
je
std
xchg
mov
faddp
pop
push
jl
lods
push
adc
addr16
loop
push
dec
mov
call
sbb
int3
loope
push
dec
(bad)
jl
dec
cmp
pop
jb
add
push
lds
(bad)
out
xchg
xchg
adc
lods
mov
adc
shr
pop
icebp
fsubp
jmp
out
aas
adc
mov
mov
jne
sub
add
xchg
mov
mov
out
dec
jmp
jmp
sub
cdq
sar
sbb
xchg
xchg
enter
ret
mov
mov
mov
ds
mul
push
xchg
inc
mov
and
inc
mov
jnp
cld
mov
daa
and
jle
mov
dec
push
dec
cmps
ficomp
adc
shl
js
xchg
sub
pop
loope
clc
jp
inc
bound
fidivr
and
popf
pop
daa
xlat
(bad)
fsubr
push
dec
mov
jle
cdq
mov
mov
xchg
xlat
jmp
mov
into
xor
test
jmp
gs
pop
and
cs
and
popa
les
inc
sub
les
adc
sub
xchg
adc
movs
(bad)
movs
jecxz
scas
clc
and
ins
sahf
mov
sbb
xchg
pop
cld
aas
cli
mov
inc
pushf
sub
lods
or
xor
sub
bound
xor
shl
cs
pop
scas
and
outs
(bad)
out
or
into
les
sahf
jo
aam
sbb
jne
adc
mov
push
xchg
dec
out
and
jno
fiadd
(bad)
arpl
ret
fidivr
imul
and
jl
mov
mov
fdivr
aad
aaa
jbe
cwde
lods
and
(bad)
call
pop
lods
test
nop
scas
movs
sbb
rol
out
cmp
movs
jle
pop
and
jns
lods
jbe
gs
add
cmp
ror
xor
outs
cmp
test
retf
nop
outs
or
and
and
loop
xchg
ds
pop
jmp
idiv
sbb
fsub
in
pop
cmp
aam
scas
sub
push
jmp
jp
mov
push
clc
xchg
dec
pop
or
adc
push
jmp
mov
xor
sbb
pop
mov
inc
jo
mov
push
ins
test
mov
in
add
ins
cmp
stc
mov
xor
add
les
add
imul
test
jge
into
ret
or
mov
fwait
mov
inc
push
imul
add
cmps
mov
mov
mov
(bad)
call
(bad)
mov
mov
stos
ret
gs
mov
xlat
sub
into
add
add
pop
mov
pop
mov
dec
push
jns
or
mov
ins
ss
mov
adc
fwait
dec
cdq
cwde
jno
mov
enter
push
cmp
movs
adc
xchg
std
in
adc
bound
pop
test
mov
loop
test
jle
rol
pop
repz
xor
sahf
int
repnz
into
cmp
(bad)
sbb
int3
jmp
bound
jge
aas
and
pop
pop
call
std
xor
sub
fmul
std
cmps
push
ret
mov
stc
jmp
jne
jecxz
adc
je
xchg
lods
repz
out
xchg
jno
call
(bad)
loope
ins
pop
sbb
popa
aaa
inc
inc
inc
iret
and
lock
pop
inc
je
in
test
cmp
pop
xor
sbb
sti
in
fmul
aad
imul
push
mov
cmc
leave
add
cmc
pop
sbb
fstp
xchg
cmc
daa
pop
push
mov
nop
out
jmp
xor
push
jbe
mov
stos
mov
inc
jmp
imul
xchg
sub
mov
push
add
pop
rcr
adc
movs
sbb
pop
js
fist
hlt
adc
ss
lods
push
mov
bound
inc
pop
cmc
cmp
in
pop
push
retf
hlt
stos
pop
daa
cld
push
in
out
test
(bad)
mov
data16
cmp
adc
ins
push
in
mov
jmp
(bad)
pop
jnp
add
stc
adc
stos
jg
jmp
nop
out
aaa
in
mov
cld
lock
pop
fisubr
xchg
lahf
test
inc
in
loope
push
add
cmp
push
xor
ret
hlt
hlt
pop
(bad)
idiv
push
fmul
add
xor
out
inc
(bad)
aam
mov
pop
mov
mov
lds
rdtsc
retf
movs
push
jp
and
push
lods
add
xor
push
imul
sbb
cmp
leave
add
cmp
pop
inc
rcl
shl
push
pop
pop
out
inc
push
sti
adc
les
inc
cmp
xchg
inc
and
cli
in
lds
jno
cmp
push
jmp
cwde
dec
xchg
xor
jns
out
push
ret
push
xchg
scas
inc
adc
pop
xor
rcl
jg
mov
jg
and
gs
lock
(bad)
lods
pusha
adc
add
jl
in
xchg
ins
fld
sbb
cs
int3
dec
scas
sbb
inc
dec
mov
sbb
jmp
mov
push
add
scas
add
xor
ss
mov
test
sbb
sbb
mov
sbb
xchg
hlt
xchg
push
dec
lods
mov
lods
fst
sub
inc
xor
push
push
sub
or
imul
not
int
mov
pop
mov
xlat
inc
fwait
sbb
in
adc
sahf
jnp
sbb
mov
sub
aaa
scas
pop
add
fbstp
sahf
jl
mov
and
adc
cmps
(bad)
sub
(bad)
jmp
xchg
(bad)
and
adc
outs
in
xor
movs
movs
dec
jno
pop
test
sbb
sub
xchg
xor
into
mov
jno
fwait
jecxz
adc
dec
test
enter
cmp
xlat
xor
add
std
inc
ror
adc
(bad)
and
call
mov
stc
sub
imul
in
cmps
out
stc
cld
sbb
(bad)
inc
and
addr16
aaa
pop
dec
dec
mov
and
rcl
les
inc
mov
enter
mov
pop
aam
cmp
cmp
popa
add
push
clc
sbb
mov
shl
lods
mov
pop
push
in
add
mov
adc
dec
iret
lahf
sbb
push
call
repnz
jl
imul
jns
sbb
cmps
cmp
aas
cwde
sbb
mov
cmp
dec
jns
nop
adc
dec
inc
jno
jp
(bad)
mov
xor
(bad)
fs
dec
test
ins
imul
les
cmp
mov
cld
push
out
push
pop
or
jo
rol
das
sbb
sbb
ins
jbe
xlat
mov
push
xlat
jmp
jbe
ret
add
and
cs
jnp
jecxz
jmp
mov
(bad)
jae
pop
mov
or
es
out
cmp
add
push
hlt
push
or
cmp
push
ins
loopne
sahf
loopne
icebp
mov
adc
adc
lock
call
fst
aas
xchg
xor
jae
dec
imul
mov
xchg
(bad)
jp
icebp
xchg
push
pop
add
inc
mul
rcr
inc
adc
pop
xor
add
int3
int
xchg
(bad)
mul
push
mov
pop
dec
sub
enter
sahf
ins
xchg
sub
or
or
fist
jmp
mov
in
and
cmp
pop
push
push
sub
outs
lock
pusha
inc
lds
call
mov
loopne
xchg
ss
sbb
(bad)
and
mov
movs
mov
fidiv
push
movs
(bad)
xor
repnz
add
hlt
xchg
dec
jmp
jno
mov
test
jmp
jnp
inc
pop
add
add
ret
jmp
jb
fcomp
aam
rcl
lahf
push
inc
jecxz
(bad)
fcomp
inc
enterw
jmp
loop
xor
pop
xchg
jge
ret
out
push
stos
push
dec
pop
int3
or
sub
mov
sbb
(bad)
inc
sbb
fwait
add
ftst
or
sbb
idiv
jp
dec
or
loop
dec
inc
pop
test
ja
test
fldcw
popf
mov
pusha
pop
pop
in
data16
lahf
sub
scas
lock
iret
dec
mov
mov
mov
add
ins
lahf
ss
cdq
xchg
xchg
cmps
test
cwde
or
arpl
mov
cwde
les
(bad)
fsubr
mov
xchg
sub
or
mov
or
xchg
dec
leave
inc
icebp
cmp
dec
retf
aad
sub
cvtpi2ps
jge
or
lods
push
lock
cmp
clc
loop
retf
inc
inc
aaa
push
inc
mov
bnd
sub
or
pop
xor
imul
retf
ins
stos
fild
retf
push
adc
hlt
xor
pop
in
test
xor
push
jne
or
pop
xor
pop
pop
sub
in
mov
fcomip
mov
sar
das
xor
mov
div
rcl
cmp
rcl
and
repnz
adc
pop
xchg
sub
and
add
xchg
repz
mov
xchg
mov
fild
and
push
leave
(bad)
push
ja
or
pop
push
mov
pop
fcom
xor
mov
ins
test
pop
int
sub
dec
mov
and
xor
mov
xor
(bad)
iret
les
push
(bad)
std
pusha
inc
in
dec
pop
aam
pop
jge
lds
mov
leave
push
(bad)
dec
ds
int
xor
enter
sub
jecxz
sbb
sbb
popa
stos
cmps
jle
call
xor
stos
nop
cmp
and
jmp
jle
or
xchg
sbb
cmc
(bad)
ds
mov
pop
jnp
ret
adc
push
sar
mov
lahf
inc
stos
mov
or
into
jle
mov
mov
cmps
cmp
es
inc
in
push
ror
imul
pop
popa
ins
push
mov
test
mov
cld
mov
jge
test
not
jno
aam
xor
inc
push
(bad)
sahf
xacquire
lahf
add
ds
adc
cs
lods
add
push
push
repnz
sti
in
dec
dec
loop
es
rcl
les
inc
(bad)
mov
gs
and
shl
mov
or
push
or
retf
jmp
jne
rol
xchg
add
inc
js
push
or
jne
mov
fdivr
sbb
inc
ins
es
mov
cmc
and
bound
mov
jp
mov
out
jnp
add
mov
mov
mov
sub
pop
(bad)
sti
lods
not
inc
in
sbb
lods
stos
mov
mov
lea
inc
add
popa
mov
ins
lahf
cmp
sbb
jmp
push
rcr
ins
pop
repz
and
xor
sbb
ins
push
jecxz
xor
js
shl
push
out
sub
das
outs
fstp
ins
repnz
icebp
fstp
cs
sub
adc
sbb
cld
les
xor
enter
in
jg
(bad)
aaa
push
add
movs
xor
les
pop
test
les
in
dec
imul
test
pop
cmp
push
dec
ins
push
adc
jmp
sahf
cmp
pop
pop
shl
cmp
mul
mov
arpl
xchg
je
dec
cld
movs
push
pop
in
scas
cwde
in
pop
cmp
sbb
mov
mov
mov
jnp
xchg
in
popf
jne
ret
sbb
mov
and
stc
ins
clc
(bad)
movs
loope
cdq
out
hlt
fwait
xchg
int3
ins
mov
and
loopne
jns
stc
xor
(bad)
fucom
jecxz
gs
pusha
test
fs
add
dec
push
adc
push
add
(bad)
ficom
jae
lods
adc
xchg
push
pop
cmc
call
adc
jge
pop
xchg
pop
sub
xor
adc
sbb
push
retf
sahf
cmp
fwait
in
addr16
int
pop
mov
ret
xor
xchg
mov
das
test
jmp
jp
imul
jo
aaa
out
aam
out
frstor
or
imul
loopne
push
gs
lock
xlat
dec
xlat
fistp
mov
imul
(bad)
out
repz
xchg
and
xor
mov
or
arpl
cmc
lds
push
xor
mov
data16
mov
sbb
xor
cmp
pop
jne
sub
nop
sahf
(bad)
jmp
out
stos
dec
pusha
call
lahf
data16
test
int3
call
arpl
xchg
mov
pusha
jmp
or
gs
outs
mov
jns
loop
push
sub
lds
mov
jmp
push
inc
rol
push
popa
aad
dec
lock
pop
mov
stc
loope
and
mov
jecxz
jae
and
mov
and
imul
mov
aam
inc
xor
inc
pop
cmps
into
(bad)
lahf
out
and
mov
push
test
mov
dec
into
je
jle
xchg
mov
fisttp
scas
cmp
frstor
fnstcw
jb
outs
jae
xchg
adc
jg
pop
xchg
xor
sbb
mov
aaa
dec
mov
jae
inc
iret
or
push
test
dec
call
cmp
shl
cmps
pop
mov
(bad)
rol
jmp
ror
push
jo
test
imul
xchg
xchg
or
or
pop
push
adc
mov
fstp
mov
jl
stos
push
xchg
push
lea
pop
icebp
jmp
xchg
cmps
mov
enter
ror
jp
xor
jae
mov
push
cmps
lods
repnz
(bad)
and
or
addr16
ss
jmp
sbb
in
fistp
fwait
dec
movs
lock
mov
mov
and
test
sbb
cmp
fs
adc
div
pop
std
jmp
sub
repz
mov
add
fs
std
sub
int3
sub
mov
mov
cld
xor
jmp
cdq
sub
(bad)
daa
pop
stos
int
movs
jbe
ins
or
out
push
mov
pop
adc
mov
xchg
inc
and
xlat
pusha
mov
mov
dec
lock
scas
cmps
or
icebp
call
adc
bound
repnz
xchg
adc
lods
xchg
in
and
sti
xchg
retf
mov
jae
int
iret
dec
sbb
(bad)
sar
jmp
fisttp
xchg
xor
inc
or
dec
pop
ret
jle
(bad)
out
push
test
adc
movd
adc
and
push
push
cmp
arpl
adc
lahf
scas
jb
push
adc
sbb
sbb
sbb
push
sbb
into
add
mov
es
push
add
pop
add
jnp
inc
xchg
adc
dec
sti
call
leave
sar
shl
push
xchg
mov
out
jmp
sub
movs
ins
push
aad
sbb
popa
arpl
sbb
mov
xchg
or
aas
inc
adc
add
push
mov
retf
mov
enter
sbb
dec
in
aad
ss
rol
sbb
or
jne
ds
pop
ret
and
pop
pop
mov
in
add
sbb
nop
ins
dec
sbb
pop
fldcw
cmps
jmp
and
scas
int
std
mov
lods
cmp
fistp
repz
sbb
fdiv
in
mov
arpl
jae
mov
stos
mov
loop
rcl
dec
shl
repz
pushf
or
xor
inc
jns
and
pop
test
cmp
cwde
popf
dec
cmps
mov
push
mov
dec
test
xchg
addr16
adc
jmp
jmp
(bad)
cmp
push
pop
add
jmp
mov
push
in
mov
out
test
adc
mov
sbb
mov
sbb
(bad)
iret
push
mov
test
mov
out
dec
(bad)
dec
test
adc
std
adc
cmp
test
jecxz
and
fnsave
nop
inc
stos
popf
or
dec
jp
fdiv
leave
ss
mov
pop
(bad)
mov
fidivr
into
packuswb
inc
dec
add
xlat
and
xchg
jl
call
sbb
cmp
jne
mov
push
xlat
pop
dec
cmc
inc
lods
mov
inc
or
int
addr16
pop
jmp
inc
icebp
jne
enter
jns
cmp
dec
mov
or
shl
addr16
jle
movlps
mov
sbb
(bad)
xlat
xchg
sub
cli
xchg
outs
daa
test
jp
pop
jns
ds
adc
mov
inc
mov
push
(bad)
ds
or
and
jne
or
xchg
mov
jp
cld
jne
pop
push
push
call
dec
mov
dec
pop
gs
loop
pushf
inc
mov
(bad)
mov
ins
cmp
cmc
mov
push
out
pop
into
push
jb
jl
(bad)
jnp
cmp
(bad)
cmps
cmp
push
in
or
xor
sub
xchg
lds
fadd
or
or
pop
and
mov
push
jge
aam
and
pop
(bad)
(bad)
push
les
mov
ins
into
mov
clc
dec
leave
and
adc
(bad)
and
push
aaa
push
or
rol
std
fisttp
mov
push
or
xchg
sub
pop
mov
iret
js
pop
and
lahf
pushf
or
mov
lock
ret
pop
stos
mov
jmp
ret
je
test
(bad)
jno
sbb
inc
pop
jle
out
pop
cmp
jns
fisttp
or
push
jmp
xchg
ret
and
mov
mov
aam
inc
scas
lahf
push
popa
cmp
(bad)
dec
cld
push
add
inc
repz
gs
add
cmp
push
sub
fs
mov
adc
adc
xor
ret
aam
addr16
add
jno
aam
lods
dec
push
xor
dec
xchg
enter
push
sahf
in
xchg
add
pop
mov
push
cmps
push
into
inc
xor
(bad)
cld
push
stos
jmp
je
pop
pop
mov
cs
sahf
add
push
inc
fcom
cmps
and
cmp
push
mov
pop
dec
arpl
punpckhbw
stos
sbb
cdq
aam
add
and
dec
fistp
fild
adc
(bad)
mov
or
and
mov
popf
adc
mov
cmp
fsub
jle
stc
enter
pop
sti
sub
add
push
(bad)
(bad)
sahf
aas
cmp
clc
cmc
xor
pop
mov
adc
and
mov
adc
int3
mov
or
dec
jne
add
mov
sub
pop
pop
loope
lds
push
mov
iret
fistp
and
lods
mov
lea
cld
shr
(bad)
fs
adc
sbb
mov
outs
div
pop
and
mov
imul
pop
and
movs
push
jno
test
in
sbb
inc
mov
mov
or
arpl
jle
xchg
adc
jae
int3
in
scas
lods
push
sar
lea
(bad)
and
sub
sbb
pop
and
aaa
xchg
ror
push
mov
rcl
ror
mov
arpl
aaa
xchg
pop
sti
pop
hlt
jae
dec
nop
sbb
cmp
call
sbb
addr16
cdq
and
pop
jno
cmp
push
into
or
and
or
into
mov
ret
int
and
adc
(bad)
sbb
in
clc
ss
and
lods
adc
dec
cmp
inc
push
aad
inc
jmp
shr
not
mov
xchg
and
fistp
(bad)
push
lea
mov
add
jbe
cs
test
ja
pop
cdq
xor
sbb
mov
pop
bound
je
fnsave
lods
pop
popf
test
mov
movs
adc
popf
push
jp
daa
fld
or
jnp
mov
(bad)
retf
xchg
fsubr
xchg
xor
xchg
clc
cmp
fst
pop
mov
ficom
xor
arpl
gs
xchg
imul
pop
retf
shl
stos
ja
jl
pop
sub
imul
push
pushf
(bad)
or
movs
push
cmp
add
je
add
int3
mov
jecxz
imul
ins
cmc
jl
push
adc
jge
pop
xor
pop
aad
mov
movs
enter
pop
(bad)
fistp
xor
or
jb
push
pop
ret
hlt
leave
add
add
jnp
xchg
cmps
jmp
stc
retf
cmp
inc
div
mov
sub
mov
(bad)
adc
scas
bound
jle
into
adc
(bad)
adc
stos
dec
cmps
mov
fld
clc
cmc
mov
fist
icebp
rol
sub
je
or
jg
std
xchg
push
popa
jbe
xor
adc
inc
and
and
les
or
imul
xchg
add
lahf
xlat
dec
scas
shl
mov
pop
ins
sub
pop
dec
cmp
add
jns
int3
or
sub
imul
adc
rcl
pop
jno
cmp
sar
inc
sahf
mov
lods
pushf
push
jo
in
in
je
push
inc
sbb
push
adc
ja
jnp
xor
je
icebp
pop
xchg
inc
iret
out
push
cmp
xchg
pusha
jg
mov
out
dec
cs
mov
repnz
js
mov
dec
and
add
leave
bound
jp
mov
test
popf
mov
fmul
lahf
xchg
loopne
mov
pop
jnp
push
outs
pop
in
sbb
aad
jbe
xchg
and
jno
out
mov
aad
sti
sbb
xor
call
cmp
push
jno
into
lods
ret
scas
test
pop
ret
dec
outs
push
pusha
jae
cmp
jns
xlat
or
aad
(bad)
cmp
das
mov
ret
xor
jge
sub
jo
popa
and
repz
pop
ret
mov
and
inc
jmp
test
sub
sahf
aaa
mov
cmp
fld
pop
mov
gs
or
hlt
(bad)
push
ja
sub
xchg
aam
add
in
lahf
fild
inc
loope
outs
or
sub
adc
test
iret
sub
cli
setl
stos
shl
out
sbb
cmp
add
xchg
js
es
xchg
adc
aas
rcr
loop
fninit
ja
and
pop
inc
loope
nop
rcr
imul
add
jl
inc
sti
xchg
add
popa
sbb
mov
clc
out
mov
jbe
test
cmp
xchg
pop
(bad)
stc
rol
and
or
mov
fucomp
ds
sbb
lock
jge
pop
add
sub
sub
ins
aas
xor
sub
les
fucom
pop
int3
(bad)
inc
mov
push
movs
mov
pop
arpl
sub
retf
gs
fst
shr
pmaddwd
xor
imul
movs
sbb
ins
adc
xor
es
add
xor
mov
aad
(bad)
and
and
rcr
(bad)
xor
or
dec
mov
es
sub
ror
cdq
out
es
ja
mov
jmp
inc
cmp
jne
push
(bad)
adc
inc
aad
jmp
arpl
std
pop
leave
push
and
adc
inc
or
cdq
loopne
shl
add
sub
das
div
cmp
daa
mov
sbb
(bad)
out
leave
mov
cdq
in
leave
clc
in
shr
sub
dec
outs
arpl
inc
push
sub
add
call
mov
retf
lahf
(bad)
push
or
inc
or
test
mov
push
int
daa
xor
mov
push
popf
in
or
inc
jg
jle
push
sti
jmp
add
xchg
gs
pop
loopne
lods
push
push
hlt
(bad)
rep
xor
pop
cmp
xchg
mov
repnz
lea
jns
xchg
inc
and
shr
imul
lods
sub
into
imul
adc
ror
data16
dec
aaa
xor
mov
and
test
mov
jo
sbb
mov
pop
jns
aas
lods
or
mov
jl
stos
mov
or
stos
call
and
mov
bound
pop
repnz
xchg
daa
push
(bad)
mov
pop
mov
andnps
aaa
jns
out
pop
fs
mov
imul
add
or
fwait
pop
sub
pop
mov
call
xor
jno
mov
sub
or
test
xor
addr16
(bad)
sub
jb
dec
jmp
jge
stos
dec
add
scas
data16
mov
add
scas
arpl
push
push
xchg
add
cmps
(bad)
or
jae
xor
push
out
pop
mov
stos
pop
fcmovnb
outs
jg
fisttp
ret
jg
dec
inc
lea
sub
aaa
inc
cmps
add
add
out
mov
scas
jge
int3
xor
mov
cld
pop
ror
jmp
pop
imul
int
movq
sub
and
mov
sub
jno
retf
mov
push
inc
fisubr
or
sub
xor
fstp
mov
mov
ds
push
mov
pop
mov
int3
pop
(bad)
cmps
jg
loope
int
shl
test
ja
xchg
mov
mov
mov
xchg
imul
mov
add
mov
dec
in
jecxz
jmp
adc
jb
xchg
jg
inc
fisttp
aam
xor
mov
mov
or
jns
das
fiadd
pop
dec
pop
jge
and
or
pop
push
push
mov
cdq
pop
call
dec
lahf
rcr
fsubr
mov
xchg
stos
ret
sub
shr
outs
mov
inc
repz
sar
mov
jns
inc
push
packuswb
mov
repz
aas
(bad)
mov
(bad)
sti
mov
aas
sbb
add
xchg
sbb
mov
ss
ds
popf
add
jecxz
and
xchg
test
stos
push
or
popa
imul
mov
(bad)
aaa
js
aas
or
es
jo
ins
sub
mov
and
cmp
iret
ja
data16
mov
retf
fbstp
push
ins
dec
sar
and
xchg
xchg
(bad)
adc
jge
push
push
mov
pop
sbb
lods
les
inc
jbe
pop
xchg
mov
mov
dec
inc
dec
mov
mov
in
sbb
jae
stos
mov
dec
jo
mov
pop
hlt
xlat
test
xchg
xchg
mov
in
cmp
sub
fidiv
mov
(bad)
mov
mov
pop
add
mov
popf
mov
pop
movs
int
sub
mov
jnp
(bad)
ret
adc
xchg
adc
push
es
int3
pop
mov
inc
mov
push
push
or
sub
ins
call
inc
sub
mov
mov
jmp
repz
adc
pop
sub
push
inc
call
je
sub
adc
and
jg
inc
(bad)
xchg
ret
popa
arpl
neg
mov
in
or
push
cmc
enter
out
pusha
xlat
lods
(bad)
sbb
arpl
pop
ds
div
fsubr
sahf
(bad)
sub
je
mov
(bad)
sub
stos
dec
lock
je
fwait
xor
mov
or
and
std
es
xor
fisttp
vmovhps
(bad)
jmp
jp
jns
lea
cmc
in
push
stos
loop
mov
sub
ins
mov
ja
and
cs
out
lods
pop
popf
outs
mov
lods
sub
pop
rcr
pop
and
out
out
add
mov
ret
in
jb
mov
adc
sub
mov
dec
add
push
outs
mov
out
mov
jne
cli
ror
xchg
jmp
outs
nop
fild
adc
jp
icebp
and
cmps
xchg
call
fisub
call
pop
mov
inc
jne
sbb
mov
pop
jmp
mov
mov
pop
push
pop
in
and
pop
mov
dec
daa
push
in
ja
pop
popa
add
into
xchg
daa
or
cmp
movs
dec
add
sub
adc
fld
pushf
fsubrp
sbb
rcl
mov
jb
xchg
pop
mov
iret
adc
idiv
push
xchg
sti
lahf
mov
sbb
inc
out
cs
fst
dec
mov
sub
jnp
into
arpl
addr16
inc
sar
dec
ins
adc
push
inc
adc
(bad)
frstor
pop
pushf
outs
imul
loop
test
jecxz
into
push
repz
stos
(bad)
jge
les
call
cld
sbb
loop
xchg
fidivr
mov
or
jae
stos
or
lds
icebp
xchg
pop
lods
test
adc
std
idiv
dec
retf
retf
lds
cmps
test
sbb
cmp
jecxz
add
les
push
int3
mov
cmc
pop
sti
pusha
xchg
add
and
fdiv
jno
pusha
push
mov
fidiv
lock
fcom
ins
mov
fsubrp
sbb
add
adc
(bad)
stos
xchg
out
pop
leave
adc
add
imul
aas
test
test
fidivr
xchg
inc
jecxz
shr
(bad)
pop
and
pusha
inc
mov
sub
add
aas
movs
sub
cmps
gs
bnd
add
cs
neg
cmp
scas
(bad)
push
pop
mov
pop
cmps
inc
or
adc
aas
pop
mov
add
pop
lds
jp
push
call
adc
xor
adc
jae
ror
mov
out
sub
pop
call
sub
push
push
ret
fistp
repz
mov
cwde
or
lods
pop
sub
fild
xor
mov
xlat
pop
mov
arpl
outs
dec
cli
inc
mov
and
mov
adc
in
fnsave
cmp
retf
scas
fiadd
mov
std
dec
and
xchg
pavgb
fcom
push
dec
add
jge
loopne
stos
add
and
push
(bad)
jns
out
aas
mov
xor
jmp
clc
pop
mov
out
aaa
adc
into
idiv
addr16
test
add
call
mov
or
cli
fisubr
bound
add
xchg
sub
cdq
loopne
xchg
pop
mov
cdq
les
ins
call
sbb
and
int3
dec
jge
sar
fadd
fs
jmp
inc
adc
rcr
add
lea
aam
jmp
cmp
sub
xchg
sbb
jnp
or
sar
std
and
mov
xchg
mov
push
and
jo
and
out
mov
and
push
lock
pop
mov
sbb
mov
adc
or
adc
xor
pop
std
mov
pop
sbb
sti
fldenv
jo
cs
jp
cdq
add
cli
aam
mov
dec
and
cwde
pop
dec
cmp
push
jg
xor
cmp
fstp
stos
jp
fist
sbb
lods
call
jmp
aad
data16
pop
adc
add
sbb
loope
rol
push
sub
cli
adc
dec
jne
test
out
leave
iret
jo
scas
mov
fwait
push
hlt
out
pop
das
mov
dec
in
dec
in
and
call
rcl
mov
sbb
mov
int3
cwde
dec
and
js
sbb
cld
rol
icebp
push
pop
pop
or
sub
cmps
cmp
mov
sbb
xor
and
pop
mov
cmp
aam
fldenv
ret
or
jl
lock
imul
(bad)
aas
daa
adc
and
push
sbb
loopne
jbe
rcl
aas
ja
pop
sub
cmp
jecxz
mov
je
push
mov
pop
inc
jnp
or
in
jnp
and
push
sbb
je
ins
rol
in
push
add
movs
push
les
lds
fstp
mov
or
lahf
add
or
xor
call
gs
outs
inc
test
and
shl
out
inc
int3
xlat
aaa
or
imul
jge
mov
and
movs
pushf
scas
sbb
inc
(bad)
aam
add
mov
mov
dec
jne
int3
in
xchg
xor
addr16
test
mov
(bad)
sbb
xchg
push
mov
lods
(bad)
pop
sahf
xchg
pop
test
enter
jae
std
cmp
loope
clc
in
lods
in
stos
and
lods
xchg
adc
mov
ja
test
loop
mov
mov
sub
arpl
jmp
jae
mov
nop
jecxz
sub
mov
dec
daa
pop
loope
inc
leave
sub
inc
in
call
inc
jb
icebp
imul
sub
mov
(bad)
aad
or
fbstp
stc
fist
cmp
xchg
daa
(bad)
stc
leave
dec
sbb
mov
pushf
cmp
call
sti
dec
mov
cwde
leave
add
push
xchg
xchg
dec
sbb
lods
push
addr16
push
repnz
or
xor
lea
js
or
push
sub
inc
pusha
jp
mov
adc
mov
inc
mov
pop
je
push
sbb
jmp
sbb
mov
jbe
jp
jbe
add
mov
and
cs
addr16
sar
call
loopne
pop
xor
pop
call
add
retf
jbe
fst
adc
sub
adc
cmp
adc
add
ror
ins
jae
dec
mov
jg
bound
fcmove
sar
out
sbb
sbb
lea
sbb
pop
dec
jmp
sub
lods
adc
dec
adc
jnp
pop
not
cmp
xchg
mov
iret
aam
mov
push
outs
mov
js
or
dec
xchg
cld
jne
sub
loopne
xchg
retf
inc
int3
mov
xchg
movs
idiv
mov
cmps
jge
shr
dec
push
or
arpl
inc
lds
mov
popf
scas
sub
nop
test
ja
in
stos
cwde
shl
(bad)
cmp
dec
sbb
pop
push
sub
or
inc
pop
mov
leave
imul
rcl
je
hlt
pop
mov
jne
jmp
(bad)
out
nop
sub
add
sbb
movs
sub
out
mov
movs
push
addr16
mov
xchg
mov
xor
lock
(bad)
sbb
cmps
out
mul
fcomp
mov
xor
scas
fstp
pop
iret
stc
and
mov
in
mov
dec
cld
shr
xchg
xlat
push
sub
retf
fdivr
stos
mov
push
test
loope
in
fwait
(bad)
sub
repnz
inc
sub
gs
adc
inc
(bad)
mov
sbb
pop
stc
imul
mov
add
and
addr16
cmp
pusha
cld
ja
(bad)
sti
jp
pop
jno
inc
retf
pop
adc
out
add
mov
js
ja
rol
pop
adc
sbb
in
lahf
pop
aaa
xchg
(bad)
mov
idiv
inc
xchg
stos
sbb
pop
sub
mov
cmp
push
xchg
push
aam
push
stos
inc
ret
xchg
push
jp
sub
add
add
jno
aad
dec
jo
mov
mov
mov
ins
leave
std
jmp
test
dec
clc
sbb
mov
add
cmp
mov
ja
test
jmp
cmp
and
bound
(bad)
js
xchg
je
les
cli
inc
push
cdq
mov
ins
push
sub
ins
jmp
call
cld
cmps
sbb
aad
mov
lods
or
call
imul
(bad)
xchg
cmp
add
xchg
out
mov
cs
adc
imul
cwde
sub
push
push
xchg
inc
inc
ret
icebp
inc
dec
and
add
inc
jne
sbb
push
lods
into
inc
mov
clc
or
push
lahf
aas
out
mov
pop
jb
xchg
popf
mov
mov
scas
(bad)
sbb
mov
stos
and
and
jno
outs
(bad)
movs
xchg
push
mov
sar
arpl
cmp
add
fbstp
daa
les
movs
sahf
add
push
jg
sub
clc
pusha
and
lds
jb
push
in
jo
fstp
jbe
fdiv
xchg
cdq
lock
push
xchg
mov
dec
popa
repz
outs
cmp
out
cmp
or
mov
sar
in
mov
neg
mov
push
mov
sbb
addr16
xchg
fnsave
xor
pop
mov
addr16
mov
cs
outs
dec
scas
push
cmp
push
mov
in
pop
sbb
dec
adc
les
aaa
xchg
aad
dec
cld
inc
aad
jp
cmp
das
jmp
es
xlat
cmp
bound
pop
lea
mov
inc
sub
ja
lock
movs
das
sub
aas
in
push
add
dec
js
push
cmps
jl
xlat
ins
and
aad
fdiv
ss
xchg
push
aas
lock
push
aad
rcr
in
clc
push
sbb
or
or
add
inc
mov
cdq
xor
and
lods
inc
out
fcmovnb
(bad)
pop
jae
add
cs
js
dec
xchg
xchg
pop
cli
call
xchg
xchg
movs
call
inc
jae
sbb
movs
push
mov
ins
xor
xchg
xchg
inc
scas
push
inc
outs
xchg
cmp
mov
fsubr
cmp
je
mov
mov
mov
icebp
shr
bound
jae
dec
mov
cmp
fs
out
sbb
inc
outs
nop
imul
sub
lods
push
sbb
pop
xchg
cmp
jp
out
outs
imul
arpl
popa
fmul
stos
add
popf
jle
vmwrite
sahf
push
and
mov
sub
popa
sar
int
loop
pop
rcl
cmc
std
(bad)
mov
and
sahf
sub
or
fnsave
cmp
cmc
cmp
es
jno
repnz
jnp
mov
ret
cmps
adc
iret
jmp
cmp
pop
push
push
adc
dec
movs
pushf
data16
and
js
xor
clc
sub
xor
pop
pop
mov
stos
add
je
mov
scas
inc
js
mov
sar
push
push
dec
push
mov
sub
movs
fisub
out
pop
pop
mov
pop
retf
and
jb
dec
mov
(bad)
sar
stos
loope
mov
inc
pop
js
ins
push
or
fcmovbe
fst
test
test
push
push
mov
add
mov
push
ror
das
lock
sub
inc
int
sbb
push
jl
sub
mov
lock
fisttp
das
daa
les
int
add
or
aaa
xlat
jae
xor
lds
das
mov
lods
shr
inc
dec
pop
les
push
push
jno
jmp
xor
aad
mov
adc
push
hlt
ss
clc
icebp
(bad)
xchg
pop
jbe
repz
jb
test
in
jmp
stos
test
xor
push
inc
inc
loope
stc
rcr
pop
pop
jae
loopne
pop
(bad)
mov
mov
mov
dec
ds
ins
inc
pop
sub
xchg
jnp
sbb
dec
nop
push
popf
shr
(bad)
popf
add
dec
movs
repz
and
sub
ret
in
out
dec
sub
cmps
idiv
test
scas
cs
sub
xor
mov
mov
addr16
les
movs
mov
pop
cdq
xchg
mov
jbe
nop
sub
mov
pop
enter
pop
cli
xchg
dec
mov
out
sbb
jp
add
aad
int
movs
fnstenv
adc
mov
gs
mov
jl
mov
sbb
rcr
xchg
je
or
jmp
loope
(bad)
sbb
sub
mov
push
xor
cmps
fwait
mov
fcomip
mov
jnp
push
test
out
push
jge
jae
cld
or
leave
scas
push
in
ret
mov
pop
add
and
sbb
xor
cmp
xchg
adc
sar
mov
mov
iret
ret
mov
cmps
pop
jne
int
mov
xchg
push
xchg
push
mov
inc
pop
rcr
sbb
(bad)
jge
inc
cmps
sbb
aam
call
jmp
gs
outs
adc
pop
(bad)
mov
xchg
push
push
xchg
call
cmp
mov
ret
jmp
jno
in
xor
repnz
cli
outs
xchg
nop
clc
pop
dec
sahf
ss
cmp
cld
jmp
(bad)
(bad)
(bad)
jg
jne
iret
test
fsubr
stos
ret
sbb
jbe
cwde
in
push
sbb
mov
test
ffree
mov
xor
repnz
dec
jecxz
dec
mov
jg
loopne
or
sbb
lahf
test
cmps
int
outs
and
push
pop
xchg
mov
aaa
inc
pop
test
movs
outs
push
fisubr
jge
bound
cmp
adc
(bad)
add
inc
pop
adc
mov
mov
cmp
fwait
push
and
and
nop
shl
pop
push
xor
mov
adc
std
or
lods
xchg
int
int
push
or
push
bound
dec
and
leave
iret
jnp
mov
xor
or
rol
inc
test
adc
push
jns
cwde
mov
or
bnd
jmp
mov
and
or
and
cmovne
or
mov
rcl
stos
je
dec
gs
pop
cmp
es
lods
cli
dec
(bad)
xchg
sbb
pop
mov
or
out
cmp
xchg
cdq
jge
loop
stc
(bad)
in
cmp
xor
ds
iret
pusha
add
add
or
fst
push
pop
xchg
mov
fs
das
jle
mov
sub
pop
cmp
cvtdq2ps
lahf
jl
hlt
dec
mov
cmp
adc
aam
outs
gs
(bad)
push
sbb
or
jmp
push
dec
push
or
enter
xor
inc
mov
mov
outs
lea
xor
cmp
dec
je
sub
repnz
loopne
lds
sti
ret
rol
push
sub
aad
push
out
dec
dec
dec
pop
pop
add
xor
jmp
adc
shl
jns
cmps
inc
(bad)
pop
bound
xchg
mov
inc
jmp
inc
push
xchg
xchg
pop
inc
xchg
push
sbb
(bad)
mov
daa
sub
xchg
inc
in
jne
clc
jmp
sub
ficomp
xchg
mov
lds
push
shl
daa
xchg
aas
ins
pop
adc
adc
jecxz
inc
mov
mov
jmp
jne
xchg
lods
pusha
or
push
lods
or
add
inc
out
mov
cmp
mov
xchg
mov
mov
sbb
js
cs
mov
sbb
or
mov
call
mov
psubusw
add
(bad)
daa
xchg
call
sbb
mov
arpl
bound
movs
xchg
cmp
adc
fisubr
pop
ins
jg
shl
movs
imul
dec
cld
adc
outs
retf
nop
ss
and
sub
int3
sub
stos
lods
fs
ficom
jns
gs
movs
bound
sub
call
cli
bound
xchg
and
ds
scas
lea
jb
out
hlt
clc
loop
sbb
jno
or
out
mov
ficomp
rol
inc
arpl
nop
sbb
aad
cmps
inc
sub
out
jp
icebp
sbb
sub
jp
add
test
xchg
pusha
addr16
pop
fisttp
bound
nop/reserved
sub
pop
cmp
adc
add
sub
xor
ror
sub
mov
xchg
in
jp
adc
xchg
and
fidivr
push
pop
inc
pop
popf
inc
imul
cmp
sar
xchg
pop
mov
(bad)
pushf
aam
shr
js
push
xchg
inc
and
imul
pop
mov
pop
je
rol
mov
aam
inc
sbb
mov
mov
imul
adc
xor
in
push
cdq
sar
add
jmp
out
xor
xchg
and
in
and
push
dec
mov
sub
xchg
retf
dec
or
pop
add
mov
mov
and
pushf
mov
xor
fs
adc
pop
xchg
add
xor
into
mov
mov
inc
sbb
inc
mov
inc
xor
xlat
adc
out
mov
ins
pop
int3
pop
in
xor
adc
and
mov
push
jmp
and
sub
sahf
sbb
xor
loope
sbb
jne
xchg
or
xchg
xor
jo
mov
dec
lea
aad
aad
xchg
mov
push
stos
or
add
cmp
pop
arpl
in
jo
cwde
imul
jl
cdq
(bad)
int
cmps
pusha
push
fld
sub
xchg
cmp
push
push
sub
or
pop
not
data16
push
add
cld
bsr
shl
mov
(bad)
cld
or
dec
retf
imul
out
xor
jp
out
movups
ret
add
stc
ins
(bad)
sub
leave
jle
push
sbb
les
mov
cmp
fisttp
dec
push
repz
xchg
mov
pop
shr
xor
dec
movs
bound
sahf
or
jmp
int3
push
mov
dec
ins
test
add
sub
aam
xchg
xchg
je
(bad)
mov
je
or
js
je
push
adc
mov
mov
adc
mov
jge
repnz
add
pop
ss
ret
out
xchg
adc
dec
dec
(bad)
mov
stc
or
mov
mov
(bad)
mov
push
and
jmp
test
stos
add
inc
repnz
mov
mov
rcl
fcom
push
add
cmp
push
and
pop
clc
fwait
inc
cmp
fsub
(bad)
sahf
aad
xchg
(bad)
icebp
clc
push
fsub
pop
lahf
mov
cmp
mov
imul
fcomp
sbb
push
jb
cmp
mov
sti
into
sub
pop
xor
xchg
cdq
fst
aam
int3
dec
mov
cdq
sahf
je
std
add
xlat
sub
sbb
pusha
mov
outs
scas
ins
bound
ss
add
lea
xchg
push
and
jae
mov
mov
pop
push
jmp
pop
jae
mov
push
stos
rcr
ins
and
(bad)
fistp
lahf
mov
sahf
bound
xor
dec
pop
aaa
(bad)
xor
and
mov
retf
push
sub
jge
adc
and
push
cmp
nop
add
lds
pop
out
jp
push
inc
pop
cmp
movs
mov
sbb
lahf
cwde
pop
loope
mov
pop
aaa
xchg
xchg
(bad)
arpl
sub
imul
pop
xchg
xchg
cmp
cmp
fnstsw
scas
aad
sub
retf
cwde
(bad)
lds
dec
mov
repz
xchg
sub
inc
lahf
fild
inc
ins
mov
loop
int
pop
pop
cdq
push
mov
(bad)
and
out
bound
popf
cmp
sub
retf
dec
and
cwde
cmp
add
push
(bad)
es
outs
mov
enter
xor
pop
dec
push
dec
xor
sbb
mov
pop
shr
in
inc
cmc
sub
ror
arpl
mov
(bad)
push
mov
cmps
leave
mov
push
pop
add
mov
push
neg
jge
xchg
cmp
or
iret
mov
xrelease
sbb
mov
jmp
stc
frstor
je
push
cmp
scas
xchg
mov
out
sbb
neg
and
popa
hlt
pop
clc
shl
lahf
gs
cmp
lods
imul
add
mov
out
out
pop
jle
sbb
adc
loope
and
inc
add
lahf
mov
pop
shl
mov
aas
mov
mov
or
sub
sub
add
enter
jnp
out
enter
and
rcr
clc
test
inc
jo
into
mov
fidiv
aam
(bad)
jmp
xor
imul
cmc
call
mov
test
fsub
push
add
mov
nop
out
adc
rcl
movs
and
lods
xchg
push
adc
push
pop
mov
pop
jnp
adc
pop
and
sbb
or
ret
out
pop
xchg
jae
adc
pop
test
xchg
stos
jne
pop
lods
(bad)
xchg
movs
stc
or
sbb
sub
push
pop
cdq
loope
and
test
mov
fldln2
push
adc
adc
or
stc
out
mov
sub
icebp
ficomp
or
xor
cs
hlt
repnz
mov
fnop
mov
out
cs
mov
jnp
xor
iret
ins
xchg
lods
int
mov
outs
(bad)
psubsw
repnz
into
lea
jmp
fs
jb
push
lods
test
add
js
mov
mov
mov
paddusw
retf
inc
imul
cmp
xchg
sar
shl
or
pop
out
mov
pop
out
jb
inc
sbb
sbb
mov
sub
adc
scas
or
sub
daa
pop
lock
aam
shr
jg
aam
jmp
xchg
(bad)
ins
(bad)
push
movs
jmp
mov
pop
or
sbb
lea
fistp
adc
push
and
hlt
or
mov
aas
leave
sbb
stos
mov
or
(bad)
test
pop
stos
push
pop
inc
call
add
cmp
adc
arpl
stos
sahf
imul
sahf
dec
adc
faddp
mov
pop
stos
cwde
movs
dec
jne
mov
pop
aad
(bad)
or
sub
(bad)
push
jmp
mov
add
cmp
jp
aaa
int
jmp
pop
out
xchg
add
mov
pop
push
cmp
xor
push
sbb
pop
or
xchg
xchg
mov
sbb
ror
in
mov
inc
enter
je
mov
imul
push
jge
adc
sbb
shl
sub
jmp
(bad)
shl
xchg
cmp
lahf
sub
test
in
inc
sub
xor
mov
movs
mov
mov
dec
and
mov
or
or
inc
mov
jns
cli
je
push
rcr
inc
imul
mov
fisttp
xchg
push
xor
clc
and
pop
push
jb
in
xor
out
fstp
ins
sub
inc
xchg
fld
pop
ins
shr
add
arpl
stos
or
idiv
push
cmp
sub
xchg
loop
bound
icebp
pop
xchg
sub
in
or
rcl
int
dec
pop
js
sub
jnp
mul
or
jmp
pop
iret
dec
cli
lds
xlat
icebp
cwde
push
sbb
jl
push
cli
(bad)
fidivr
xor
xlat
jno
pushf
(bad)
jns
push
mov
fstp
xchg
hlt
sub
inc
pusha
adc
movs
sbb
iret
outs
fnstenv
sub
test
call
out
mov
stos
inc
add
popf
jnp
mov
pop
inc
(bad)
aam
imul
lock
loopne
fimul
ins
or
lds
popf
lods
mov
add
xchg
ror
mov
shl
sub
cmp
mov
inc
stos
cmps
sbb
push
mov
sbb
arpl
test
pop
add
inc
cwde
adc
sahf
data16
xor
xchg
mov
adc
iret
mov
sar
(bad)
push
retf
cmp
sti
sub
leave
lock
scas
mov
clc
jg
xchg
push
aam
retf
out
sbb
push
mov
xlat
push
dec
es
inc
sbb
mov
adc
xor
sbb
xchg
push
push
loop
pop
ret
fisub
xchg
(bad)
out
mov
dec
loopne
fistp
mov
pop
jle
mov
mov
inc
cwde
mov
jmp
fidivr
push
mov
sbb
sub
test
ror
xor
(bad)
lea
push
fisubr
inc
jmp
(bad)
push
aaa
sub
or
and
inc
push
lock
loope
out
mov
lock
(bad)
and
or
sub
jae
and
mov
mov
dec
mov
aas
sbb
addr16
or
aam
xor
(bad)
push
jp
cmp
fsubr
add
(bad)
gs
or
mov
test
in
mov
sbb
sbb
and
pushf
ja
xlat
fiadd
cmp
cmp
mov
mov
pop
jmp
std
lahf
loopne
and
mov
lock
scas
and
movs
push
pop
mov
ins
adc
cwde
in
fucom
jg
lods
jge
add
movs
sahf
popf
jl
jns
test
inc
cs
mov
xor
push
daa
cs
orps
shl
sub
out
dec
cmp
loopne
int
rcl
inc
mov
sub
jecxz
int3
popa
add
cmp
leave
mov
mov
loope
xor
std
push
dec
mov
scas
mov
push
lea
or
cmp
or
push
sub
cwde
sub
inc
inc
push
outs
push
adc
xor
call
ins
cdq
test
pop
pusha
test
fs
xchg
outs
ret
jns
mov
cmp
pop
add
cwde
push
pop
jmp
enter
adc
jno
ins
not
sbb
call
jl
lahf
jge
jo
leave
xor
movs
pop
xchg
test
jbe
bnd
add
dec
pop
hlt
(bad)
or
neg
imul
repz
ds
mov
aad
dec
cmp
pop
mov
popa
mov
jl
add
data16
mov
xchg
mov
shr
xchg
inc
adc
(bad)
push
arpl
outs
push
sbb
or
scas
movs
ins
xchg
push
(bad)
(bad)
in
jmp
or
mov
sub
ret
adc
repnz
mov
rcr
loopne
lahf
inc
pop
jnp
sub
pop
or
shr
(bad)
inc
cdq
daa
loopne
loop
mov
gs
mov
pop
jb
jmp
cmp
add
inc
das
adc
cmps
retf
test
mov
push
push
shr
or
js
xor
outs
lods
les
mov
adc
cmps
out
into
les
ins
cmc
and
div
adc
hlt
dec
inc
retf
mov
pushf
pop
icebp
jl
in
sub
in
out
loop
jge
pusha
arpl
scas
imul
div
rcl
fmul
enter
pop
imul
rsm
xchg
inc
(bad)
(bad)
xlat
jbe
daa
add
dec
sbb
dec
ins
push
jb
mov
dec
mov
push
sub
data16
stos
and
fisttp
push
sbb
push
nop
mov
pop
inc
shr
sti
xor
ins
outs
imul
add
xchg
push
cli
call
pop
fwait
imul
(bad)
add
inc
rcr
cmp
sub
mov
(bad)
mov
cmp
sub
fisub
lds
stc
mov
xor
mov
(bad)
sub
dec
int3
jo
enter
sub
add
mov
sub
xor
mov
dec
mov
xchg
shl
popa
sub
(bad)
mov
adc
push
outs
cwde
pop
cmps
jnp
mov
push
cmp
jle
movs
(bad)
and
jp
and
pop
adc
mov
int3
mov
(bad)
sbb
addr16
pop
mov
and
mov
stc
adc
pop
jl
or
mov
push
xchg
cmp
jae
jb
xchg
xchg
sbb
adc
inc
out
pop
(bad)
push
pop
push
mov
and
sbb
pop
add
mov
stos
sbb
add
sbb
jg
int3
xor
popa
push
cdq
sub
add
dec
mov
loope
cmp
lods
(bad)
rol
or
sub
nop
or
or
daa
sub
jne
stos
mov
xchg
ret
pushf
shl
dec
pop
or
mov
jle
arpl
sbb
leave
scas
icebp
retf
sub
jmp
in
mov
pop
jne
sbb
pop
aas
pop
outs
inc
push
mov
mov
sbb
jmp
jno
lahf
les
imul
cmp
mov
sub
nop
pop
push
sub
sub
je
mov
pushf
ins
fidiv
mov
in
mov
jl
mov
repz
loopne
sbb
gs
push
push
shl
ja
lahf
cs
ret
mov
fadd
xor
lock
aam
mov
add
lock
loop
sbb
out
xchg
sbb
pop
sbb
repnz
leave
fs
ss
stos
push
add
xor
bound
aam
and
in
sub
sub
daa
retf
popa
or
dec
fsubr
jl
push
lea
mov
call
xchg
sub
pusha
repz
xchg
or
sbb
ja
popf
retf
das
mov
xor
cmc
pop
call
push
cmc
ins
lea
sub
(bad)
and
adc
clc
cmp
loop
(bad)
mov
jbe
popa
add
cmp
dec
add
mov
cmp
ja
loopne
adc
dec
and
int
mov
lock
sbb
lods
push
sar
(bad)
shl
leave
into
clc
push
movs
shl
mov
outs
ficom
mov
stos
ficom
sti
push
push
adc
mov
inc
or
scas
pop
movs
push
add
push
js
lods
and
add
(bad)
lds
leave
fisttp
pop
cmp
inc
xchg
in
inc
(bad)
push
sub
add
ret
adc
jbe
add
leave
test
les
jp
inc
push
pop
inc
shr
in
or
gs
fs
fcmovu
das
cmps
aaa
sub
int3
add
or
scas
lahf
and
sub
or
pop
fidiv
ins
pop
dec
(bad)
push
sub
jp
test
mov
loopne
leave
aam
adc
mov
inc
push
xchg
mov
fsubr
pop
in
lock
jmp
out
push
pop
and
mov
xchg
iret
enter
enter
push
es
sub
icebp
(bad)
in
mov
mov
cmps
cli
jp
ins
or
mov
or
push
add
fcomp
sub
or
ficom
sub
jmp
call
sub
ins
mov
rcr
popa
or
jnp
cmc
repz
and
in
pop
leave
inc
fwait
scas
bound
sub
sub
call
fcmovu
mov
sti
mov
xor
adc
or
dec
pop
sbb
mov
mov
sub
sub
enter
pop
das
cmp
pop
mov
sbb
jb
and
adc
adc
mov
mov
jmp
mov
fisub
sbb
std
cmps
sub
jl
dec
xor
xor
push
out
fwait
pusha
xor
jns
mov
pop
inc
add
cmp
mov
fwait
jmp
mov
cmps
ins
fimul
scas
int
cld
outs
(bad)
sti
or
imul
mov
movs
inc
dec
sbb
(bad)
ds
aam
xchg
fbld
jl
aas
xor
cmp
xchg
add
jmp
dec
jne
jb
and
fdiv
mov
popf
dec
push
data16
or
into
inc
les
xor
loopne
aas
add
mov
and
mov
lods
xor
fnsave
in
sar
(bad)
mov
mov
mov
cmp
out
push
ins
ja
fadd
mov
ret
cmp
or
(bad)
test
push
cmp
loop
or
loopne
fbld
jge
add
aaa
push
pushf
inc
pop
and
loop
fbstp
lock
mov
jle
jge
ret
and
push
xchg
xchg
dec
sbb
out
sub
or
in
mov
lods
scas
cmp
and
and
sub
xchg
cmps
push
ret
(bad)
add
lea
shl
loope
jnp
imul
stos
nop
movs
push
jmp
and
jae
jmp
imul
mov
(bad)
idiv
add
mov
mov
cwde
ficomp
pop
in
dec
jmp
cmp
rcr
xchg
(bad)
in
dec
cs
mov
js
xchg
mov
sub
mov
sar
mov
popa
neg
and
loopne
xchg
mov
sub
repz
cmp
jl
push
rcl
xchg
pusha
xchg
add
sbb
fiadd
aad
stc
or
scas
out
in
hlt
add
cmp
loope
fild
lods
ret
pop
imul
fisttp
sub
scas
movs
and
add
push
sub
inc
add
fst
es
cmps
mov
hlt
fdiv
outs
dec
mov
cld
mov
or
sahf
mov
out
add
adc
cmp
adc
pop
push
cs
int
xor
xchg
vprotb
push
out
data16
sahf
adc
in
mov
mov
cmps
mov
test
or
mov
call
fist
retf
mov
pop
mov
xor
ds
fdivr
iret
rcl
add
mov
call
add
nop
sbb
cmp
jle
adc
call
inc
mov
add
or
add
ficom
add
xchg
mov
adc
push
pop
mov
lods
pusha
sub
adc
movs
aas
stc
inc
imul
inc
jmp
ret
arpl
das
inc
mov
mov
mov
cs
loope
outs
cmp
pop
xor
lock
into
inc
inc
mov
es
fdiv
fimul
push
icebp
fild
imul
lds
repz
popf
cld
mov
sbb
rcr
pop
or
movs
push
jnp
lds
jnp
mov
popa
pop
cmps
bnd
xor
xlat
pushf
(bad)
mov
sub
(bad)
popf
sub
jp
xlat
(bad)
jp
xrstors
int3
cwde
in
jg
rol
stos
push
sbb
and
rcl
mov
dec
push
xor
loop
fwait
test
arpl
and
inc
and
mov
(bad)
cmp
in
add
jg
mov
xchg
loope
js
bound
push
gs
push
in
(bad)
xchg
ds
int3
aad
ja
dec
mov
push
pop
jle
lock
add
outs
adc
sbb
push
adc
xchg
sbb
bnd
fdiv
pop
sub
repz
xor
cmp
xchg
mov
pop
stos
out
push
push
int
adc
xchg
jne
addr16
jp
and
mov
xor
or
iret
jecxz
mov
adc
out
push
mov
sub
inc
repnz
mov
faddp
test
xchg
cmps
adc
and
popa
add
scas
std
pop
jmp
push
mov
sahf
xor
xor
mov
sbb
add
mov
dec
jb
fistp
call
cmc
dec
cli
jg
mov
mov
fstp
pop
mov
sahf
into
xor
jnp
jecxz
push
adc
out
inc
int3
movs
sub
fucomip
in
addr16
mov
mov
in
das
and
add
jne
ins
mov
out
xor
nop
add
jbe
pop
sbb
and
fcmovnb
icebp
push
test
mov
mov
inc
add
mov
in
pop
or
stos
ss
jns
xor
jl
or
dec
gs
mov
pop
ret
cmps
mov
push
xor
push
enter
and
mov
dec
retf
and
add
arpl
pop
xor
add
test
xchg
jle
dec
mov
cmp
xchg
dec
stos
js
rol
adc
jmp
mov
cli
inc
sub
jmp
repz
lods
add
push
push
jb
icebp
or
pop
lahf
sub
int3
push
jg
inc
mov
or
aad
and
dec
dec
ret
push
sub
mov
add
(bad)
jp
add
xchg
mov
pop
push
mov
pop
ror
jmp
mov
outs
movs
rcr
(bad)
in
sbb
(bad)
cmp
jbe
ins
out
xchg
push
dec
jo
push
add
stc
aam
(bad)
xchg
gs
inc
cld
rol
cmp
fdivr
dec
mov
xlat
jl
jle
in
or
lock
loope
sbb
hlt
mov
mov
inc
push
sbb
sahf
test
fiadd
mov
daa
repz
les
jnp
sti
xchg
pop
rcr
sub
push
bound
ins
mov
dec
inc
dec
int3
ror
aas
push
xlat
fcomp
adc
sub
xchg
mov
mov
mov
jo
dec
pop
inc
adc
ficom
imul
pop
sbb
mov
dec
adc
rcr
pop
sub
mov
in
fld
cmps
sahf
xchg
scas
sbb
cmp
fs
call
mov
mov
or
dec
mov
data16
movs
mov
add
mov
mov
stos
out
clc
mov
mov
shl
pop
mov
jb
outs
ss
and
outs
pop
mov
out
cmp
mov
jmp
movs
ja
inc
inc
pop
je
sbb
aas
xor
xor
push
cmp
pop
aad
sbb
push
mov
or
pusha
or
hlt
pop
test
sti
adc
fmul
fidivr
or
ins
jmp
mov
add
mov
mov
outs
xchg
movs
sub
pop
ds
int3
loopne
rcl
(bad)
xchg
ins
dec
cwde
loope
fs
stos
data16
mov
(bad)
movs
push
cmp
adc
adc
adc
daa
out
outs
retf
dec
imul
pop
fdivr
xchg
pop
std
adc
outs
outs
lds
sbb
test
stc
in
xor
paddw
xchg
fwait
mov
lock
xor
xchg
movs
test
pusha
pop
jge
mov
xchg
mov
cmp
shl
jae
ins
out
fstp
xor
jb
mov
nop
push
out
mov
pop
fsubr
icebp
mov
je
hlt
add
xor
dec
hlt
inc
daa
cmps
out
pop
adc
sub
jbe
add
sahf
push
adc
cmp
imul
mov
and
mov
mov
leave
cld
mov
or
sbb
jbe
sub
and
push
jmp
int
mov
sub
loope
sahf
out
inc
rcr
push
inc
push
inc
inc
or
xor
sahf
sub
std
add
loope
jns
or
xchg
pushf
in
mov
dec
jmp
sub
add
and
pop
jno
inc
test
retf
addr16
xor
mov
jle
rol
or
pop
int3
js
or
push
(bad)
cmp
jle
push
xchg
or
push
mov
push
add
mov
jle
test
test
clc
pusha
pop
addr16
daa
fld
out
and
and
stc
sub
pop
stc
xchg
aam
adc
cs
and
scas
mov
js
add
cmp
rcr
push
or
rol
aaa
bound
sub
ins
loopne
sbb
retf
jnp
or
(bad)
bound
repnz
jle
push
mov
xor
sub
jg
cmp
neg
mov
les
jg
jbe
and
je
dec
fs
mov
cdq
push
(bad)
jecxz
addr16
stos
nop
pop
xchg
cdq
int3
xor
add
adc
and
xor
(bad)
dec
add
lahf
mul
int3
test
repnz
ja
and
fdivr
xchg
pop
xor
xor
test
aas
and
retf
pop
xchg
inc
jmp
mov
sub
jne
inc
rcl
sub
inc
add
comiss
retf
dec
and
daa
mov
and
lahf
icebp
push
mov
popa
aad
lsl
scas
jnp
mov
outs
pop
popa
std
fnstcw
arpl
fmul
fnstcw
pop
or
jae
ret
push
pop
imul
add
hlt
sub
(bad)
mov
pop
sbb
push
xchg
xor
imul
and
cs
cmps
fild
ja
mov
xor
mov
jge
fisttp
stos
and
in
xchg
mov
loop
xchg
iret
xchg
xchg
addr16
rol
push
jle
mov
dec
mov
push
fiadd
iret
push
into
mov
inc
push
adc
mov
dec
jle
movs
(bad)
mov
jo
xchg
fnsetpm(287
addr16
rol
dec
adc
jns
ins
jbe
clc
shl
aaa
inc
push
call
or
xor
pop
mov
sbb
add
sbb
lods
inc
out
add
les
movs
cmp
add
mov
ins
sub
(bad)
mov
(bad)
movs
xchg
xor
push
mov
add
or
sahf
pop
jmp
pusha
jmp
pop
dec
inc
imul
or
cmp
in
iret
int
mov
rcr
rol
js
out
dec
sbb
jge
cmp
adc
jnp
mov
es
ficom
jle
cwde
mov
xchg
or
push
mov
in
inc
je
adc
loope
aam
rcl
sar
sub
icebp
or
or
or
inc
inc
dec
das
or
aas
mov
mov
mov
fnsave
ficom
pop
pop
dec
ds
dec
jne
pop
xor
fild
aad
pusha
sbb
cmc
add
loope
or
xor
dec
jno
adc
xchg
cmp
jecxz
cmp
add
ror
fs
(bad)
fld
dec
cwde
xor
ja
xor
outs
fwait
mov
sbb
sbb
cmp
xchg
sbb
fwait
ds
xchg
mov
pop
in
cmp
mov
enter
hlt
cmp
inc
jmp
xchg
lea
push
cdq
cmp
movs
call
(bad)
loopne
loop
or
out
loop
xor
jg
imul
mov
mov
(bad)
rol
mov
pushf
call
ret
xor
cmp
mov
loope
dec
xchg
inc
hlt
lods
hlt
ins
and
cmp
out
ret
pop
xor
imul
pop
dec
sbb
icebp
mov
inc
push
(bad)
mov
das
sbb
js
popf
inc
mov
neg
dec
push
xchg
pop
iret
lods
adc
xchg
jmp
popf
iret
sub
test
mov
icebp
ss
loop
arpl
stc
jmp
dec
ss
or
cmc
add
cdq
dec
shr
ins
test
cld
sub
ds
xlat
test
xchg
jb
into
test
outs
call
or
jb
add
push
ja
pop
test
paddsw
mov
xor
call
cmc
rol
mov
dec
xor
add
(bad)
lock
ins
call
call
inc
in
je
mov
and
mov
cld
int
arpl
sub
mov
or
enter
into
hlt
cmp
cmp
je
jle
rep
jb
mov
movs
int3
into
and
or
push
shl
sti
xchg
imul
add
mov
fnstenv
jbe
dec
out
add
inc
sbb
xchg
lock
jns
movs
mov
mov
je
repz
scas
push
mov
cmp
dec
leave
fwait
cmp
jae
jge
outs
ret
xchg
dec
popf
fld
add
jno
test
in
mov
ja
ins
add
cwde
test
jae
and
sub
aaa
cmp
sub
jmp
jecxz
and
or
outs
mov
adc
or
ins
data16
cmc
out
in
test
lock
stos
fmulp
push
mov
into
push
pusha
aas
xor
dec
push
int3
push
arpl
adc
and
cmps
jl
sbb
push
sub
sbb
retf
jmp
or
ret
xor
adc
rcl
mov
xchg
ins
dec
push
xchg
push
cmp
cmp
adc
sti
inc
psraw
jp
push
add
icebp
mov
ds
sbb
neg
fisubr
std
das
push
and
stc
pop
mov
sbb
jmp
(bad)
fisubr
mov
leave
movs
push
or
adc
retf
ret
pop
in
pop
push
dec
xor
sar
xor
jmp
mov
fcomip
mov
mov
sbb
arpl
in
das
pop
adc
cs
ins
mov
(bad)
and
cmp
jp
sbb
cmp
mov
pop
or
movs
adc
xchg
sahf
push
lea
dec
sub
popa
or
sbb
add
dec
data16
in
mov
jmp
jmp
jnp
cmp
rcr
out
nop
jl
pop
sub
cmp
pop
sub
out
jecxz
push
jae
xchg
cmps
add
mov
std
movs
mov
out
ror
lahf
std
mov
pop
stc
sub
pop
and
add
push
mov
jmp
ret
mov
xor
sub
dec
rol
or
(bad)
xlat
sbb
ret
cmc
in
jg
bound
(bad)
mov
ret
repnz
inc
adc
sbb
ss
or
mov
jg
out
inc
imul
mov
xor
sbb
push
div
xchg
cmp
add
inc
dec
jne
sub
jl
enter
mov
or
js
imul
aaa
icebp
iret
je
enter
shl
jl
lds
and
adc
movs
ins
repnz
adc
(bad)
out
adc
and
mov
pop
jnp
pushf
xor
int3
ror
pop
movs
push
pop
dec
(bad)
shl
clc
clc
sub
inc
sbb
icebp
mov
es
ja
div
dec
movs
adc
repnz
pop
cmp
and
ds
and
pop
cld
lods
int
rcl
inc
xchg
inc
movs
nop
scas
rcl
ins
push
jnp
rol
shl
test
fidiv
mov
ins
ret
in
sbb
sbb
outs
(bad)
sub
out
stos
add
dec
repz
repnz
xchg
imul
push
(bad)
cdq
jg
mov
out
jg
mov
hlt
and
push
dec
cli
lods
mov
addr16
ins
out
adc
push
icebp
add
(bad)
call
pop
or
data16
jno
add
and
mov
xor
ins
popf
and
cmc
scas
daa
hlt
cmp
cmps
clc
repz
cmc
jmp
fiadd
fistp
mov
pop
and
lock
xchg
inc
ret
jbe
daa
cmp
ja
lods
push
jp
cmp
les
mov
lods
fs
cmp
mov
mov
daa
repz
xor
out
out
std
mov
daa
scas
cmps
push
or
sub
push
clc
ror
add
cmp
jns
jnp
sub
fcmovnu
loope
mov
jl
arpl
mov
aas
adc
aas
dec
xchg
sahf
ss
mov
sub
push
popa
mov
loope
in
adc
pop
addr16
jle
icebp
leave
cmp
mov
inc
js
(bad)
clc
js
retf
dec
push
pop
rcr
repnz
int3
pop
dec
lock
shl
call
retf
clc
xor
xchg
mov
dec
jmp
mov
pop
push
cmp
fbld
xchg
mov
fcomp
jns
inc
fiadd
rol
rcl
lock
add
sub
dec
sbb
outs
mov
pushf
lods
xchg
xchg
cli
loopne
jo
push
call
daa
ds
xor
(bad)
mov
movs
pop
das
push
dec
jp
mul
xchg
push
pushf
std
xchg
jp
add
int3
cmc
cmp
dec
jp
pop
pop
inc
and
and
cmp
fwait
cmp
mov
xchg
cmp
add
mov
dec
xor
iret
pusha
or
jg
dec
xor
outs
shl
jge
xor
mov
xor
jb
imul
pop
pop
hlt
inc
pop
jb
mov
pusha
mov
fdiv
adc
(bad)
jne
mov
jge
popf
sub
iret
pop
pop
and
add
jmp
jge
jbe
jle
(bad)
jmp
mov
retf
inc
ins
mov
stos
ins
je
adc
sub
dec
xchg
sbb
xchg
inc
push
outs
mov
mov
xchg
or
popa
jo
movs
sub
(bad)
fidivr
sbb
push
sbb
xor
push
(bad)
rol
(bad)
cwde
cld
pop
cld
cmp
and
xor
inc
or
dec
bound
push
jns
fsubr
jbe
dec
fmulp
iret
and
pop
int
test
push
out
int3
jl
push
push
mov
(bad)
ins
pop
inc
test
xchg
fst
lock
sbb
xchg
fcmovu
pop
cmp
in
push
lahf
jmp
inc
out
sub
inc
aaa
jl
mov
mov
fstp
cmp
ss
loopne
int3
cdq
or
ror
icebp
in
sbb
xor
or
add
sahf
ins
iret
sbb
push
or
repnz
rcl
dec
mov
cmp
shl
inc
xchg
xchg
inc
test
sub
ret
push
and
aam
movs
lea
(bad)
mov
pop
shl
push
js
sbb
mov
outs
jmp
xor
lods
fisttp
shl
pop
jo
scas
xor
(bad)
aas
inc
call
push
pop
call
mov
cmp
inc
adc
cmp
pop
mov
jecxz
sub
jmp
mov
inc
inc
pcmpgtd
movs
push
fstp
int3
mov
lods
xchg
pop
cmp
fisttp
push
mov
cld
sbb
xchg
mov
jp
js
out
ss
shl
into
push
rcr
gs
in
ins
pop
add
fidiv
cmp
rcl
jmp
and
sub
sub
test
mov
sub
ret
sub
cmp
ins
cmp
movs
inc
dec
stos
mov
mov
in
mov
not
movs
mov
jno
mov
adc
lods
push
clc
sub
gs
int
and
or
mov
mov
xchg
pop
or
cwde
sbb
push
scas
adc
stos
popa
idiv
sub
pop
xchg
enter
mov
or
sbb
aam
stos
inc
rcl
div
and
ret
sbb
mov
dec
or
dec
or
cmp
stos
repz
mov
loop
shl
test
mov
push
cmp
mov
sub
inc
in
(bad)
out
mov
pushf
and
clc
add
mov
sub
fimul
jge
daa
pusha
or
rcr
xchg
clc
dec
adc
loope
fimul
push
(bad)
fstp
push
inc
xlat
loope
lods
sub
push
push
in
pop
cmp
jecxz
clc
push
or
(bad)
rol
add
sar
push
fcom
scas
rol
add
xchg
push
test
jge
pop
mov
or
jmp
rcl
jp
xor
movups
js
xor
jae
popa
or
aas
in
xor
ins
cmp
retf
add
daa
fcmovu
popa
lds
test
into
xchg
fadd
repz
mov
push
jno
stc
js
dec
mov
cmp
aam
into
adc
mov
pop
jbe
jp
add
iret
or
mov
cs
jecxz
mov
test
es
in
stc
jg
mov
mov
iret
push
xor
jmp
test
imul
cdq
and
push
xchg
xchg
sbb
das
and
pop
sti
ret
cmp
daa
inc
pop
loop
push
push
stos
xor
push
out
jmp
retf
adc
mov
inc
mov
ficomp
or
(bad)
mov
dec
fs
cs
jmp
and
bound
pop
xor
jl
sub
inc
sub
jmp
mov
mov
sub
mov
call
arpl
mov
fsub
push
mov
adc
or
int
xchg
or
jl
in
jno
mov
jle
push
fcomp
cmp
jae
dec
sub
cmp
mov
cmc
aas
cmp
add
xor
das
arpl
inc
hlt
call
xchg
pop
and
daa
icebp
and
(bad)
cli
mov
pusha
sbb
retf
je
imul
cmp
xchg
mov
xchg
lods
push
stc
outs
cmp
dec
jl
cmps
push
(bad)
sbb
and
dec
stos
mov
pop
ds
(bad)
pop
jge
psraw
xor
(bad)
aam
aas
push
xor
jo
mov
inc
test
fisubr
shr
imul
and
repz
sbb
pop
(bad)
leave
and
cmp
or
ja
add
or
loop
xchg
fcom
cdq
fild
mov
jmp
lock
popa
inc
cmp
sub
js
fnstcw
add
cmp
mov
mov
pop
and
(bad)
lea
mov
jo
mov
sbb
test
jmp
inc
cmp
aas
jmp
lds
xchg
sahf
(bad)
(bad)
xor
sti
scas
adc
lods
or
mov
stos
pushf
arpl
push
shl
add
mov
call
mov
fidiv
test
dec
mov
mov
scas
cmp
sub
in
mov
je
mov
sbb
push
dec
xor
and
outs
add
cmps
mov
out
imul
mov
xchg
leave
fimul
scas
push
iret
dec
les
popa
mov
(bad)
push
mov
outs
inc
xchg
(bad)
sub
jp
adc
icebp
rcl
jmp
xchg
pop
leave
in
mov
mov
xor
cs
xchg
fnstsw
jns
fld
test
(bad)
jg
retf
popa
mov
je
(bad)
sbb
and
icebp
jg
xor
mov
aad
int
in
pop
xor
push
stos
and
jl
mov
jae
sub
mov
pop
and
out
sbb
cmp
mov
pop
(bad)
fcmovbe
inc
in
add
mov
jo
lock
int
jmp
push
les
jns
loopne
jmp
scas
or
mov
retf
jg
btr
xchg
push
(bad)
arpl
mov
adc
jle
and
mov
or
fiadd
jnp
test
(bad)
inc
iret
cmp
pop
fucomi
or
call
stos
push
icebp
rcr
imul
mov
(bad)
in
cwde
xchg
inc
adc
cwde
and
or
sahf
inc
xlat
jp
jne
test
es
out
xchg
imul
das
inc
and
pop
shl
or
out
sbb
leave
retf
or
repnz
sub
ss
inc
es
sub
dec
ins
push
and
sbb
movs
mov
cmps
dec
mov
mov
ret
xor
or
dec
jecxz
pop
out
push
outs
sbb
dec
push
cmp
rcl
push
xchg
test
inc
jbe
loop
adc
sub
sbb
sbb
mov
in
jmp
dec
adc
out
js
cmp
mov
jg
in
push
cmp
and
ret
seta
and
sahf
gs
xor
and
inc
jae
sbb
xlat
add
ja
and
xchg
pop
mov
mov
or
aad
cdq
mov
cli
fisubr
jmp
mov
mov
inc
out
xor
lods
dec
add
into
adc
add
push
push
adc
imul
pop
sbb
jmp
xchg
ins
xor
sbb
retf
outs
push
sbb
cmp
les
cmp
mov
xchg
dec
test
dec
jb
or
or
mov
cmp
imul
(bad)
out
fld
jp
inc
adc
stos
mov
push
retf
out
fs
adc
in
stos
lods
xchg
jge
mov
cdq
out
xor
cmp
jmp
xor
jne
scas
xchg
ficom
stos
dec
sahf
jns
in
adc
mov
or
pop
test
adc
dec
or
add
xchg
cmp
cmp
test
stos
mov
pop
fld
fcmovbe
or
or
das
test
pop
cmps
out
inc
dec
lds
push
hlt
push
mov
loop
mov
jmp
iret
jge
lock
jp
xor
jp
or
xchg
rcl
adc
sahf
test
xchg
mov
fldcw
mov
into
(bad)
sub
rol
addr16
aas
or
imul
xor
and
mov
rcl
ret
mov
pushf
push
pop
pop
cmp
add
add
test
mov
add
ret
scas
cwde
mov
adc
stos
iret
jecxz
sbb
cdq
shl
jecxz
fisub
xor
jge
pop
aaa
dec
xlat
shl
mov
dec
ret
icebp
xlat
iret
scas
sbb
lahf
jecxz
call
sbb
push
and
sub
loop
xor
or
outs
and
cdq
xor
mov
not
pusha
sub
xchg
or
int3
mov
sub
aaa
pop
pop
or
pusha
push
pop
or
lds
and
cwde
add
int
mov
mov
movs
dec
movs
mov
and
loop
jge
xchg
icebp
or
test
and
pop
or
inc
in
cld
jns
loopne
shl
pop
shl
xor
lods
and
nop
imul
jbe
frstor
xchg
ds
fbld
xor
lea
in
(bad)
pusha
inc
sbb
mov
mov
jbe
xor
shr
sbb
or
add
imul
pop
int3
out
mov
rol
ds
pop
loopne
jmp
xchg
push
fnstsw
inc
je
scas
xor
jecxz
loopne
add
mov
mov
xor
sub
cmp
mov
mov
movs
stos
sbb
sbb
fidivr
jmp
fcom
mov
and
ret
aaa
stos
sbb
pop
inc
test
sbb
addr16
pop
push
add
in
mov
jnp
test
pusha
xor
inc
sbb
cmp
mov
cmp
das
std
aad
jmp
dec
or
std
test
mov
ins
lahf
mov
lahf
pop
cmp
imul
jnp
sbb
fcomp
mov
inc
bnd
(bad)
pop
mov
sar
add
mov
es
daa
and
mov
mov
cmc
jle
jo
dec
loope
sub
push
out
xchg
mov
cmp
sub
sti
adc
xlat
popa
push
scas
mov
mov
in
xor
cwde
popf
xchg
pop
inc
jp
fsubr
mov
stos
les
mov
mov
inc
sub
mov
aad
cmp
(bad)
stos
push
pop
push
lock
call
push
and
or
sub
or
(bad)
xor
iret
je
popa
gs
leave
pop
test
loop
sub
in
data16
mov
ret
xchg
retf
jmp
sbb
aaa
push
lock
mov
sti
rcl
ins
mov
dec
das
out
stos
les
jl
mov
pop
imul
sub
xor
shl
ret
inc
in
pushf
into
cli
pop
dec
add
fild
ins
cmp
repz
push
push
jnp
cmp
mov
dec
outs
movs
imul
sbb
mov
xchg
add
mov
ja
add
nop
mov
jo
jns
mov
inc
ffreep
out
test
jns
cmp
pop
inc
xchg
sbb
xor
push
fwait
dec
push
mov
fs
and
(bad)
xor
div
jnp
cmp
push
sbb
imul
sub
xchg
sbb
jae
rcl
lods
mov
sub
dec
enter
stc
cdq
adc
or
shr
add
(bad)
sbb
push
cdq
dec
test
cdq
jne
aas
mov
xor
test
mov
fdivrp
or
sbb
jge
call
sbb
in
inc
inc
cmp
stc
sbb
mov
and
xchg
rol
push
push
or
test
ja
jmp
pop
test
test
ja
aaa
mov
or
adc
lods
jmp
jle
repnz
xchg
fs
push
arpl
pop
arpl
inc
not
push
in
out
scas
shl
mov
int
cmps
out
jne
pop
add
mov
enter
lods
pusha
inc
test
pop
ficomp
or
pop
push
rcr
dec
aas
xor
js
push
pop
out
jns
inc
dec
call
leave
loop
mov
std
lahf
sti
retf
mov
sbb
adc
inc
movs
pop
pop
mov
mov
lds
and
neg
rcr
push
push
test
sbb
lods
xlat
sub
ins
cld
mov
retf
sub
dec
ins
pop
retf
enter
jg
adc
sbb
retf
rcr
add
pop
push
dec
xchg
jge
push
iret
aaa
stc
std
mov
xor
popf
cdq
or
push
popf
sub
mov
mov
mov
inc
in
fisub
adc
iret
stos
pop
dec
pushf
cs
loopne
popf
aam
cli
xchg
push
sub
aad
sub
xchg
jns
fnsave
es
sbb
jo
jg
ror
aad
ins
inc
(bad)
mov
and
add
lds
scas
pop
ss
push
out
or
fs
rol
fistp
stos
jg
movs
repz
inc
dec
or
enter
pop
fisttp
das
aaa
inc
push
test
lahf
outs
movs
(bad)
dec
jne
jbe
xchg
stos
loop
ins
shl
data16
loope
add
sti
adc
test
dec
xchg
xchg
fstp
pop
retf
ret
es
call
pop
js
jne
test
dec
adc
sub
fld
cld
arpl
fst
push
push
cmp
cmp
or
jb
inc
sti
inc
xor
xchg
mov
xchg
xchg
mov
das
es
sbb
xor
add
pop
and
pop
cmp
sub
jno
jmp
mov
test
add
mov
out
mov
add
dec
push
and
cwde
push
mov
fs
fidiv
sub
jno
xchg
scas
pusha
sub
lea
pop
sub
popf
pop
jp
pop
dec
push
jo
cmp
les
dec
jno
in
dec
sub
inc
sbb
and
mov
and
xor
cmp
cdq
scas
inc
inc
inc
dec
adc
sbb
mov
add
add
push
shl
mov
inc
fisttp
lock
sahf
xor
xchg
clc
mov
jge
and
movs
dec
cmp
inc
je
loope
in
and
jno
xchg
add
add
mov
fwait
dec
mov
pop
ja
dec
fs
push
jbe
lahf
pusha
mov
repz
jmp
mov
mov
push
(bad)
out
sub
push
(bad)
movs
mov
inc
inc
(bad)
aad
dec
addr16
scas
sbb
add
or
js
jae
and
fwait
ja
cmps
int
out
aad
bound
jb
mov
sbb
or
lea
push
pop
mov
dec
js
outs
aas
fsub
push
hlt
mov
mov
out
mov
push
lods
jae
lock
sbb
clc
lea
sbb
loopne
and
sbb
mov
rcl
mov
pop
ins
cmp
sti
adc
mov
ins
mov
inc
repz
repnz
(bad)
aaa
mov
mov
test
and
jmp
cld
jae
xchg
cmp
retf
xor
lods
je
cld
mov
or
sar
xchg
js
inc
stc
bound
push
xchg
or
hlt
neg
mov
xor
fld
retf
inc
jl
(bad)
push
sub
jg
das
ds
cdq
pop
push
addr16
rol
mov
inc
mov
(bad)
(bad)
arpl
adc
mov
scas
dec
retf
out
(bad)
cmp
dec
scas
movs
clc
in
inc
push
mov
das
mov
repz
jae
xor
mov
cmp
mov
imul
mov
inc
pop
inc
and
sub
inc
or
stos
add
pop
adc
and
xchg
mov
aaa
sti
test
scas
lahf
data16
xchg
mov
dec
jmp
cmps
pop
sub
daa
jmp
cwde
ret
shl
enter
mov
mov
fld
jns
fucomip
and
dec
dec
(bad)
mov
sbb
cmp
add
adc
mov
scas
iret
stos
xchg
inc
arpl
cli
add
ins
std
push
mov
push
fisub
or
sahf
or
xlat
shl
jnp
fst
jl
sub
inc
fild
pop
push
sbb
cwde
or
(bad)
push
outs
imul
mov
add
xor
inc
cmp
mov
gs
fstp
jo
mov
pop
nop
mov
inc
lahf
stc
jb
mov
pop
xor
mov
pop
mov
pop
and
pop
fsubr
dec
pop
lods
adc
inc
lds
pusha
inc
outs
jmp
loopne
dec
add
jmp
(bad)
adc
lds
outs
outs
loopne
(bad)
sbb
aad
jp
pop
mov
call
jmp
adc
xor
jg
or
push
fcom
push
jecxz
fs
(bad)
mov
psubusw
loopne
popa
clc
daa
mov
loopne
aam
adc
mov
rol
xor
push
push
out
push
sbb
push
sub
adc
nop
add
pop
push
xchg
std
mov
stos
jl
xor
(bad)
cmp
outs
ret
fdiv
outs
mov
mov
cmp
xchg
fstp
jge
repz
fldenv
ins
sbb
lock
test
sbb
mov
or
sub
sub
jp
out
iret
push
and
xor
adc
jmp
and
dec
inc
xchg
xchg
cmc
in
popa
add
sbb
imul
mov
cld
call
fwait
es
add
mov
into
daa
mov
out
enter
xlat
add
xchg
xchg
mov
or
sub
push
out
jno
ja
retf
or
sar
dec
std
pop
enter
retf
mov
mov
xlat
aad
cld
inc
mov
xchg
or
popa
test
jle
cmps
(bad)
sbb
std
and
(bad)
loop
inc
adc
push
inc
mov
jp
stos
jo
lods
push
adc
cmc
es
inc
ins
ret
pop
sti
pushf
xlat
sti
in
stc
out
cmp
(bad)
adc
scas
shl
adc
loopne
sub
sub
mov
cwde
arpl
outs
shl
jbe
ss
jp
out
fs
ret
ret
aaa
test
ja
pop
aaa
pusha
sbb
or
add
int3
call
hlt
cmps
sub
loopne
fwait
dec
mov
iret
xchg
sub
lods
pop
cmp
xchg
xchg
inc
and
rol
pusha
rcl
cmp
jne
outs
push
lds
cld
mov
sbb
int
or
daa
fcomi
sub
loopne
pusha
call
push
pop
add
ret
ror
and
jo
jae
push
mov
lods
neg
mov
cmp
movs
mov
add
add
xchg
outs
(bad)
(bad)
dec
subps
rol
frstor
into
sub
outs
lods
adc
add
fs
mov
dec
addr16
retf
mov
scas
enter
mov
jecxz
hlt
or
pop
pop
das
jo
(bad)
hlt
jb
cld
adc
jle
mov
ss
jbe
sbb
mov
lods
and
sahf
ins
or
fmul
sbb
dec
fucomip
cmp
(bad)
add
fild
cwde
cmps
(bad)
in
cmp
mov
fld
push
and
aas
sti
es
sbb
jbe
or
xor
jmp
loope
xlat
hlt
popa
add
push
mov
mov
jae
jecxz
sahf
enter
test
pushf
cmc
jg
mov
xchg
int
cmp
lds
sub
mov
in
mov
pop
cwde
popf
jecxz
xor
pop
jecxz
scas
or
mov
inc
dec
adc
iret
jge
mov
mov
jb
bnd
loope
mov
push
dec
mov
or
push
add
sub
call
fist
xlat
mov
mov
jge
popf
adc
push
fwait
stc
and
inc
jne
outs
xor
mov
inc
sub
aaa
or
adc
mov
jno
adc
lock
xchg
dec
xchg
cmps
adc
pop
xchg
pop
pop
add
inc
sti
(bad)
mov
cmps
mov
jo
nop
(bad)
ret
daa
mov
jns
stos
xor
test
inc
aas
cs
addr16
mov
cmp
lock
repnz
pop
jle
loope
sub
dec
mov
dec
push
xchg
je
mov
fptan
add
jno
ret
fisub
and
ret
pop
stos
cmp
in
mov
mov
and
iret
mov
adc
movs
popf
stos
jne
xor
lods
dec
jb
int
jmp
inc
mov
ja
dec
ret
sbb
sbb
out
popa
(bad)
ficom
je
add
(bad)
aaa
mov
je
mov
icebp
pop
stos
movs
xlat
cmc
mov
add
cmc
hlt
pop
inc
ja
xor
les
mov
push
sbb
mov
sbb
cdq
xchg
xchg
sub
push
in
jns
out
cmps
pop
test
jg
popf
(bad)
add
mov
scas
pop
pop
(bad)
inc
in
pop
int
(bad)
mov
fbstp
fld
jne
dec
mov
cmp
les
mov
and
cmp
adc
daa
enter
test
int
xchg
dec
mov
call
push
inc
ins
xchg
jno
retf
aam
mov
and
mov
dec
jge
cs
repnz
xchg
mov
mov
ins
outs
int3
ss
mov
pop
mov
aam
popa
loop
aad
(bad)
hlt
mov
mov
pop
sbb
sub
push
sar
inc
push
lods
push
or
cmp
out
retf
ret
out
test
cmps
std
aas
das
mov
into
mov
movs
pop
add
dec
inc
sub
fiadd
retf
mov
xchg
xchg
sub
pop
xchg
ja
mov
inc
cwde
mov
mov
cs
push
pusha
mov
test
cmp
scas
adc
jns
int
ins
cmp
call
and
test
xlat
lahf
add
push
or
mov
and
repz
in
(bad)
or
fbstp
pop
sub
mov
mov
jb
push
mov
test
push
test
(bad)
mov
add
inc
cmp
cmp
test
int3
leave
dec
test
xor
ja
out
mov
leave
mov
pop
shl
movs
out
jp
mov
sti
imul
dec
stc
sub
sub
lods
xchg
sub
mov
loop
retf
xor
mov
jp
xor
push
es
cmp
mov
mov
mov
pop
mov
rcr
rol
dec
xchg
xchg
xlat
and
jno
in
push
arpl
mov
jb
outs
enter
out
popf
inc
dec
jne
cdq
push
push
popa
fldenv
or
repz
test
mov
jno
xchg
nop
push
mov
sbb
sub
xor
mov
dec
push
cmc
pusha
and
mov
jl
adc
sar
std
pop
lds
cli
ret
jmp
test
pop
xchg
jmp
push
xchg
in
addr16
push
test
pop
push
push
jbe
push
popf
push
mov
push
xchg
jecxz
cwde
mov
js
shl
test
das
jg
sub
out
xlat
push
leave
leave
movs
add
shr
ins
pop
lods
popa
push
mov
pop
ins
dec
nop
(bad)
cld
bnd
jg
cmp
stos
jb
add
cmp
xor
arpl
xor
inc
out
xor
mov
pop
daa
popf
mov
adc
aas
push
cmp
mov
mov
je
mov
movs
ret
push
and
add
push
pushf
repz
inc
mov
out
cwde
inc
into
mov
mov
inc
push
fucomip
fwait
(bad)
inc
adc
sbb
out
jbe
int3
pop
stos
cdq
adc
iret
or
sbb
sar
scas
fidiv
ins
xchg
int
fs
ret
pop
inc
mov
push
iret
pop
ret
int3
mov
arpl
sbb
jl
mov
outs
es
sub
clc
iret
xchg
in
jl
adc
push
mov
ja
fiadd
out
out
push
ins
and
xor
cmp
call
ja
cmp
xchg
or
hlt
push
gs
ds
inc
jmp
or
cmp
(bad)
loopne
lods
and
cwde
repnz
out
(bad)
adc
(bad)
adc
jl
ret
cmp
ins
pushf
adc
xor
std
ss
shl
jne
push
and
in
(bad)
aas
bound
imul
addr16
addr16
aad
ins
repnz
ret
mov
mov
inc
test
jmp
into
fwait
(bad)
push
imul
jl
fimul
push
add
pop
repz
outs
pop
inc
cmp
push
dec
adc
mov
adc
call
(bad)
xchg
and
movs
test
jge
(bad)
ffreep
sti
jne
leave
in
xchg
mov
push
repnz
mov
xchg
loope
xor
mov
in
lea
lods
add
cs
and
push
lahf
cld
nop
mov
sbb
loope
imul
jg
dec
fdivr
cld
cmp
pop
cmp
mov
add
pop
or
cmp
mov
stos
pop
sub
xchg
repz
push
rol
rol
shr
mov
or
jecxz
dec
ins
in
sub
in
repz
sub
bound
xchg
jns
sub
mov
lahf
loope
jbe
push
push
pop
mov
and
mov
mov
cmp
mov
mov
retf
sub
add
jbe
mov
call
shl
dec
into
jmp
xchg
cmps
add
loop
cmps
cmps
sbb
cmps
inc
sbb
sub
pop
test
push
loopne
sar
repnz
lods
js
lods
ja
popf
into
popf
mov
pop
xor
push
dec
xor
dec
out
(bad)
jns
xchg
lods
ss
sub
adc
arpl
into
(bad)
cdq
fbstp
jecxz
loop
adc
gs
ss
out
ja
jl
mov
dec
or
xor
or
mov
das
sbb
or
clc
mov
jns
sahf
mov
(bad)
icebp
pop
mov
lods
retf
mov
cmp
sbb
push
mov
call
push
inc
mov
adc
loope
xor
mov
and
sub
iret
ss
je
or
arpl
sbb
pop
mov
ret
inc
dec
call
std
pop
out
fstp
pop
sub
cwde
sub
mov
xor
adc
test
out
mov
pop
jge
pusha
mov
inc
stos
mov
inc
xlat
adc
jb
shl
cmp
push
test
js
sbb
xchg
sub
mov
push
push
jo
clc
shl
icebp
ja
test
pop
xchg
aas
mov
or
test
sbb
sub
pavgb
repz
retf
in
adc
add
jo
cli
add
rcl
cli
aas
stos
popa
mov
jo
mov
loop
mov
(bad)
jmp
ins
xlat
int3
imul
xor
dec
inc
out
xchg
movs
cld
(bad)
or
xor
test
pop
and
xor
movs
addr16
xor
dec
jle
mov
rol
aam
or
(bad)
cdq
inc
lahf
int
shl
push
dec
inc
ss
xchg
xchg
call
xor
and
or
outs
mov
mov
sub
retf
push
xchg
cmp
fld
hlt
cs
lds
and
aaa
mov
jae
rcl
push
test
stc
jne
scas
mov
inc
jmp
pminub
sub
movs
fcom
data16
push
(bad)
out
xchg
aaa
sub
add
shl
add
(bad)
js
popaw
adc
popf
sbb
sub
ins
jae
adc
cmp
loop
mov
ins
fst
xchg
sar
mov
mov
call
sub
pop
or
pop
jo
lods
xor
dec
fsub
int
jge
gs
retf
aas
je
scas
ret
inc
cli
js
les
pop
outs
push
push
(bad)
mul
daa
xchg
stc
dec
jno
pushf
mov
loopne
mov
imul
mov
xor
pop
cld
mov
adc
add
jecxz
jo
sbb
jmp
push
neg
es
iret
jns
mov
add
sti
outs
xor
dec
jae
adc
imul
xor
jnp
adc
and
(bad)
rol
cli
jge
cmp
xchg
icebp
adc
xor
call
lea
jbe
aad
imul
int
or
xchg
arpl
add
mov
ins
cs
jnp
xchg
inc
jle
sub
pop
push
and
push
out
or
int
jmp
mov
adc
inc
cmp
nop
cmps
cmc
outs
jo
in
add
add
xchg
lods
arpl
and
inc
adc
shr
retf
xor
dec
pop
inc
mov
jb
fucom
cmp
inc
daa
mov
add
stos
std
cmp
jmp
adc
daa
cmp
and
lock
in
and
xor
jge
sub
push
and
xor
clc
(bad)
shl
and
scas
jp
adc
jl
or
lods
addr16
mov
dec
pop
loopne
push
jae
mov
sub
dec
jnp
push
cmp
mov
test
inc
jmp
cmp
(bad)
call
and
or
imul
ret
scas
mov
ins
sub
push
or
mov
cld
ds
xor
push
mov
jg
and
stos
sub
pushf
aam
cmp
or
int3
out
(bad)
jae
cmp
cmp
out
sbb
or
xchg
inc
scas
cmps
in
(bad)
ret
popf
jbe
push
retf
pusha
xor
adc
xlat
aaa
add
arpl
div
xchg
lock
lock
fild
and
retf
pop
in
mov
adc
gs
outs
inc
out
(bad)
sar
mov
bound
out
leave
lahf
push
cmp
adc
hlt
pop
inc
bndstx
das
scas
adc
push
mov
jns
scas
pop
xchg
and
sub
mov
pop
fldenv
mov
mov
mov
push
cmp
fisttp
hlt
inc
sar
or
sub
inc
cmp
pop
mov
mov
dec
in
push
sub
jae
xor
cwde
(bad)
rcl
(bad)
in
mov
and
in
aas
jns
jg
aam
jno
and
add
sub
or
mov
loope
out
pop
adc
js
or
mov
(bad)
sub
add
cmps
shl
push
out
ja
mov
popa
scas
mov
les
mov
add
or
dec
scas
xor
(bad)
jo
push
jl
pop
cmp
hlt
pop
xchg
inc
mov
dec
xchg
stc
push
imul
inc
into
cmp
pop
js
mov
js
jnp
pushf
mov
scas
sbb
das
cmp
mov
scas
mov
xchg
jg
iret
scas
aad
dec
stos
popf
ja
es
enter
stos
mov
pop
mov
retf
test
stos
pop
push
iret
daa
jmp
and
dec
in
dec
fstp
lods
jge
mov
les
mov
inc
ja
inc
imul
dec
push
je
pop
and
(bad)
test
in
push
ins
dec
or
push
and
xchg
push
ins
or
rol
xor
push
data16
push
xchg
mov
cmp
jns
xor
leave
pop
or
pop
cmps
out
sti
adc
mov
rcr
inc
fnsave
pusha
xchg
pop
jnp
cli
pop
push
vaddps
aas
aas
add
adc
or
fs
xchg
jnp
popa
add
sbb
mov
(bad)
pop
sbb
mov
push
mov
fbstp
rol
shl
cld
adc
push
not
out
in
pop
mov
fst
in
js
scas
fild
add
xor
fcos
je
cmps
cld
push
inc
xor
sbb
xor
into
jle
mov
sub
jl
(bad)
sahf
ds
pop
xor
pop
jp
stos
dec
mov
or
jnp
cmp
inc
ss
gs
rep
push
sub
dec
in
imul
test
cmp
ja
mov
int
std
push
jae
mov
dec
js
xchg
push
jle
mov
es
std
aaa
cmp
xor
pop
or
das
dec
retf
push
push
add
mov
jbe
or
cli
cmp
add
inc
inc
xchg
out
ret
aaa
out
and
cmp
sar
mov
(bad)
inc
jmp
ja
sub
xor
or
daa
dec
(bad)
pop
imul
xchg
data16
retf
xchg
push
addr16
xchg
ins
cmp
push
jns
and
pop
inc
lea
lds
es
or
mov
ror
or
lock
xchg
push
enter
jmp
enter
adc
pcmpgtb
imul
xchg
popa
(bad)
dec
adc
into
sahf
ret
rcr
dec
js
mov
(bad)
nop
inc
fist
xor
lods
add
inc
addr16
push
mov
cmp
lea
loop
or
ja
ja
mov
icebp
pop
dec
jmp
jno
or
cs
shl
dec
out
imul
add
and
xchg
mov
hlt
mov
stc
or
ficomp
fsubp
jae
pop
xor
daa
repz
fsubrp
jns
cmps
xchg
dec
xchg
and
repnz
xchg
cmps
xor
js
pop
adc
loopne
and
xor
call
repz
data16
fs
cmc
jl
clc
sbb
fwait
inc
popa
push
in
test
(bad)
repz
or
pusha
xor
push
(bad)
hlt
jo
jb
dec
dec
sub
loope
lea
ds
and
mov
ret
xor
inc
leave
lds
mov
fild
scas
out
test
sbb
mov
test
sub
int3
out
rol
or
(bad)
fs
or
ja
mov
dec
inc
cmp
shl
jo
ss
sbb
leave
xor
pop
pop
sub
sbb
aam
cdq
cmp
mov
out
xchg
call
arpl
xor
add
inc
lea
and
out
cwde
cmp
out
pop
mov
sub
add
imul
mov
pop
aad
push
adc
cmp
outs
cdq
les
xor
dec
sub
leave
dec
loopne
inc
shl
mov
rol
sub
cmp
(bad)
idiv
mov
(bad)
jb
repz
inc
je
iret
jmp
pop
push
add
xchg
sbb
rcl
lods
xchg
sub
jne
enter
jmp
pop
jg
xchg
jae
jno
lods
popa
inc
or
and
inc
jo
mov
cmp
je
idiv
mov
or
mov
mov
loopne
iret
out
in
mov
sub
shl
fadd
add
push
push
jnp
call
fstp
in
mov
sub
cmp
add
or
cmps
retf
iret
jmp
(bad)
not
mov
out
cmp
adc
and
inc
inc
mov
mov
adc
adc
mov
inc
ins
sub
arpl
mov
and
push
outs
fidivr
cli
fst
movs
jle
push
pushf
pop
fisub
lahf
cld
jne
push
xchg
aad
cmp
xor
mov
or
hlt
cs
mov
jmp
jl
in
mov
sub
sub
addr16
and
xchg
leave
fwait
lods
and
sbb
add
jbe
xor
pushf
xchg
mov
out
scas
pop
out
cmps
pop
cmp
jbe
scas
movs
xor
fcom
and
and
(bad)
jg
retf
lods
mov
aaa
int
ror
push
cwde
movs
or
lods
fwait
inc
push
call
xlat
mov
ss
mov
int
jno
repz
or
inc
and
add
sti
sub
xchg
push
sbb
sub
pushf
add
out
(bad)
jbe
stos
cdq
loope
dec
mov
mov
push
jno
xor
fisubr
(bad)
push
push
or
addr16
pop
sbb
loopne
bound
bound
rcl
shl
xlat
xor
mov
inc
ins
and
dec
ret
stos
je
fnstenv
mov
lahf
xchg
pop
inc
mov
iret
jg
cld
leave
(bad)
mov
pop
push
cmps
ins
sub
test
mov
shr
mov
cmp
inc
retf
(bad)
dec
mov
lods
into
cwde
inc
cmc
lea
loopne
fidiv
sub
mov
xor
sub
inc
std
in
cmp
or
jmp
pusha
fwait
sub
pop
cvtpi2ps
inc
dec
jae
add
test
ins
add
test
mov
and
movs
dec
mov
inc
jecxz
jmp
sbb
xchg
adc
mov
(bad)
fsubr
adc
sets
ds
mov
or
mov
xchg
push
movs
out
sar
dec
mul
sub
push
out
in
push
push
je
dec
cld
mul
pop
fs
jmp
push
leave
enter
jecxz
mov
push
mov
call
push
loop
dec
sbb
xor
pop
cs
cs
outs
cs
inc
lea
dec
pop
mov
cmps
aad
jp
xchg
mov
mov
xchg
mov
inc
jge
inc
dec
rol
pop
mov
and
mov
or
fst
mov
pop
cmp
imul
jb
xchg
xchg
aad
mov
jmp
(bad)
not
adc
mov
mov
mov
ins
call
les
dec
pop
(bad)
sub
lds
push
dec
cmp
add
xchg
arpl
sub
sbb
and
popa
mov
popa
jmp
mov
jns
mov
sub
int3
dec
xchg
sbb
rol
cs
add
repnz
pushf
clc
aam
iret
xor
rcr
add
mov
rcl
dec
push
les
adc
inc
xor
adc
imul
js
inc
rcr
les
or
addr16
jbe
inc
xchg
and
jmp
fcmovbe
lea
loop
mul
jb
pop
pop
stos
icebp
jb
(bad)
cmp
es
fwait
mov
(bad)
pop
pusha
lods
push
add
retf
cmp
inc
and
xor
nop
ret
(bad)
enter
xor
xor
xchg
(bad)
aad
bound
idiv
imul
jnp
daa
dec
dec
mov
jmp
or
jle
jae
fidiv
(bad)
fst
mov
push
jge
mov
mov
repz
jmp
outs
outs
pop
mov
sbb
pushf
add
ret
lds
leave
push
int3
icebp
mov
or
sbb
outs
fsubrp
rol
jp
lock
add
sar
mov
adc
pop
clc
call
pop
js
inc
adc
add
adc
daa
add
out
cli
in
rcr
test
jnp
cmps
xchg
mov
add
arpl
or
test
xchg
pop
fsubr
sbb
lods
(bad)
pop
out
repnz
stos
fwait
xchg
dec
(bad)
or
shl
outs
fimul
and
cli
push
pop
icebp
test
ins
retf
xchg
test
push
push
loope
loope
push
cmc
mov
mov
shl
or
test
(bad)
and
xor
(bad)
xor
sahf
sbb
les
fcomp
jno
jmp
in
inc
xor
(bad)
mov
retf
jp
rcr
cmp
cmp
mov
jbe
push
pop
out
mov
cmp
pop
shr
xor
cmps
das
mov
dec
dec
add
lods
xor
jge
out
or
push
jge
push
mov
jb
test
xchg
mov
mov
jbe
push
mov
mov
jb
add
mov
jecxz
lods
pop
mov
inc
and
xlat
and
ins
gs
mov
stc
loope
adc
dec
imul
mov
jle
mov
pop
add
(bad)
push
adc
das
inc
call
dec
and
mov
add
data16
xchg
into
jl
adc
repnz
dec
dec
cmps
fsubr
and
push
movs
into
mov
repnz
mov
adc
fs
outs
loope
add
and
push
cld
mov
mov
ds
mov
aaa
retf
mov
mov
fmul
sub
cmp
fwait
movs
push
xlat
cmp
inc
and
xchg
dec
add
fadd
mov
sbb
xchg
fsubr
cmp
mov
xchg
and
adc
rcr
push
xchg
push
push
mov
inc
xor
std
add
es
xchg
inc
mov
push
ficom
outs
dec
push
inc
loope
mov
pop
mov
mov
je
or
mov
(bad)
push
ds
push
shr
jb
lock
or
popf
mov
int3
nop
cmc
sub
sub
mov
mov
adc
jp
mov
mov
imul
mov
loope
xor
pop
sbb
aaa
xor
jmp
sbb
sub
mov
and
test
js
add
jmp
scas
clc
(bad)
arpl
add
push
mov
fmul
dec
retf
ror
jmp
or
mov
sar
mov
push
jmp
sub
dec
jbe
jle
es
(bad)
lods
push
cmp
gs
push
in
xchg
or
add
dec
loop
outs
loope
out
inc
xor
sub
mov
xor
pop
pop
sbb
cmps
jl
cmp
(bad)
mov
jno
add
test
je
mov
cwde
sbb
retf
repz
sub
sbb
cmp
movs
test
cwde
pushf
pop
jae
inc
or
add
fiadd
pop
mov
stc
fnstsw
and
ins
xor
xor
pop
cmps
cmp
jo
mov
xchg
adc
push
push
push
cmp
je
mov
mov
gs
push
repnz
in
dec
cmp
fild
xchg
pop
fcomp
mov
jl
mov
push
ins
xchg
ds
mov
pop
inc
or
pcmpgtw
push
cmp
xor
nop
cmps
mov
(bad)
push
inc
push
(bad)
popf
outs
mov
push
xchg
sub
adc
xchg
jno
cmc
out
xchg
mov
cmp
sahf
xchg
mov
cdq
cdq
add
test
nop
cmp
leave
and
sbb
lods
inc
cmp
loope
test
fadd
inc
dec
sti
push
mov
adc
mov
lods
sub
jnp
dec
test
loopne
add
inc
mov
dec
fild
mov
fbstp
dec
jg
pop
stc
xor
mov
push
mov
ins
and
outs
out
lahf
mov
aam
or
leave
pop
data16
outs
xor
xchg
ins
jl
loopne
outs
cmc
jno
pop
sbb
cmc
aad
xchg
in
(bad)
xchg
mov
jno
mov
aas
adc
and
lods
inc
hlt
add
inc
jle
pop
pop
pop
std
mov
add
dec
adc
sbb
jle
jne
xor
cmps
test
xchg
xchg
in
adc
repnz
push
je
lods
nop
lahf
sub
loopne
adc
cmp
xchg
fwait
mov
add
aaa
inc
(bad)
retf
xor
xchg
push
inc
jae
in
add
std
lds
int
mov
mov
repnz
in
call
sub
pop
fcomp
ins
sti
adc
cmp
or
popf
add
and
call
push
cli
xor
sub
or
int
test
daa
pop
xchg
call
in
hlt
adc
xchg
push
inc
stos
push
mov
outs
cmp
in
stc
aaa
arpl
inc
xor
xchg
test
das
outs
adc
scas
xchg
xchg
xchg
jl
sub
pusha
aas
jb
jno
movs
popa
xchg
push
mov
and
js
xchg
pextrw
xor
and
outs
push
retf
add
stos
push
ja
cmp
scas
es
jb
xchg
pop
fsubr
dec
push
call
sbb
inc
dec
loopne
push
cmps
jb
mov
and
out
pop
add
mov
imul
sbb
push
inc
xchg
neg
push
repnz
sub
mov
cmps
into
cld
mov
cmps
cmp
ror
jo
bound
ficomp
jle
sbb
fimul
popa
pop
in
(bad)
shr
or
hlt
cmp
sub
iret
movs
stos
or
sbb
comiss
sub
and
and
mov
pop
adc
and
daa
mov
sbb
ins
and
call
push
sbb
mov
imul
jno
movs
xchg
cmps
add
outs
ret
dec
js
retf
jo
mov
hlt
dec
mov
push
repz
int3
and
jmp
repnz
(bad)
pop
arpl
cmc
pop
cmp
jo
fld
movs
mov
and
adc
leave
nop
pop
cs
push
pusha
add
sub
cld
popa
jge
mov
ja
adc
add
adc
fmul
ds
xchg
or
add
mov
xor
ins
push
aaa
bound
mov
add
dec
shl
jge
stos
(bad)
in
outs
popf
push
mov
jl
adc
repnz
jne
daa
sub
in
xchg
daa
ret
dec
int
xor
inc
das
xor
push
lea
and
sub
cmc
out
sbb
push
shl
and
(bad)
aas
out
inc
cmp
retf
ss
cmc
mov
not
jmp
movs
shl
dec
ror
jge
fimul
movs
outs
sar
pop
sub
stc
je
fdiv
retf
out
inc
mov
loopne
push
mov
retf
out
jmp
sub
jmp
cmps
cmp
loop
mov
fsub
rcl
ja
cmp
iret
mov
mov
fiadd
or
pop
adc
add
(bad)
dec
aam
push
mov
mov
imul
cmps
jns
enter
cmp
xchg
dec
rol
(bad)
xchg
lsl
pop
add
add
nop
pop
or
jb
jle
jmp
and
gs
mov
and
cmp
xor
adc
lods
js
jmp
mov
sub
mov
push
jp
mov
les
ret
mov
dec
cmp
cmp
add
(bad)
(bad)
push
movzx
cmc
fisttp
out
ret
lahf
sub
dec
iret
movs
sbb
pop
stos
aad
(bad)
push
call
(bad)
stc
(bad)
and
sub
scas
inc
mov
test
outs
pusha
lock
adc
adc
pop
mov
add
mov
mov
gs
jmp
inc
cwde
mov
call
in
repnz
popa
leave
ins
movs
scas
xchg
bound
push
out
sbb
mov
or
sar
aas
(bad)
adc
outs
pop
(bad)
int3
mov
mov
add
loope
pop
xchg
cmp
mov
sub
(bad)
stc
fstp
mov
mov
mov
pop
mov
cmps
cmps
movs
popa
mov
test
push
or
sub
mov
and
outs
jo
jge
fisttp
jbe
out
push
dec
and
jbe
pop
leave
sbb
loope
sbb
leave
rol
xor
leave
pop
shr
dec
sbb
js
ficomp
sub
shl
push
mov
js
mov
jle
ins
cmp
cli
jns
out
and
push
popa
stos
jecxz
das
cld
pop
daa
xor
mov
sub
fstp
and
mov
icebp
or
je
je
mov
(bad)
popa
pop
xor
in
jl
sub
add
idiv
(bad)
popa
ret
sub
inc
push
mov
enter
leave
aas
xor
xor
pop
mov
mov
sar
mov
sub
inc
xor
sbb
ins
data16
mov
jp
jo
push
in
ins
sbb
xchg
retf
lods
mov
(bad)
mov
inc
push
aam
pop
add
fs
rol
(bad)
cld
add
fcmovne
and
in
mov
int
call
dec
rcl
adc
push
ja
and
repnz
push
xor
neg
inc
(bad)
or
fsub
fisttp
or
pop
daa
cmp
cmp
xchg
or
dec
(bad)
mov
out
xor
xor
dec
xor
xchg
add
data16
dec
dec
mov
add
enter
pop
rcr
and
push
pop
pop
pop
repz
xor
fsub
jo
dec
out
scas
test
fistp
or
cmp
mov
leave
scas
jo
inc
mov
fwait
in
jae
outs
test
cmp
jmp
jbe
pop
mov
or
(bad)
(bad)
enter
aam
je
mov
lds
sti
cmp
inc
lods
iret
adc
xor
mov
fdivr
sub
add
pop
out
mov
mov
sbb
cmp
sti
cld
sbb
cmp
mov
mov
sti
retf
cdq
adc
xchg
push
mov
mov
lea
jno
mov
aas
and
xlat
lock
jb
pop
add
push
mov
shl
mov
stos
cmp
xchg
jns
inc
xchg
add
mov
adc
pop
xor
call
mov
or
enter
addr16
and
xchg
aad
sti
mov
ficom
bndldx
repnz
in
les
mov
jle
push
inc
add
or
xor
cmp
xchg
cli
pop
loopne
pop
sbb
cwde
mov
pop
pop
into
or
les
pop
clc
push
pusha
mov
pop
pop
jns
sahf
sbb
pop
push
rol
fmul
retf
mov
xchg
jbe
xchg
xchg
cmc
mov
sbb
cld
and
in
xchg
jne
jb
out
jg
jne
add
test
and
push
(bad)
cmps
(bad)
sub
jecxz
push
jne
(bad)
mov
jo
mov
lds
in
in
inc
ins
adc
lods
jmp
jnp
xlat
inc
outs
sti
sbb
adc
cld
daa
shl
loope
push
jmp
mov
sbb
dec
adc
sub
ja
je
push
dec
cmps
stos
pop
or
xor
pusha
sahf
cs
push
test
xchg
jecxz
(bad)
push
sub
test
or
pop
pop
push
ror
addr16
push
nop
scas
adc
std
cs
jae
mov
and
daa
call
mov
pushf
jmp
adc
adc
pushf
push
fs
dec
aas
jnp
jns
mov
pop
sub
mov
loope
adc
mov
hlt
dec
sbb
repnz
gs
mov
into
pop
xchg
mov
and
ret
cmp
lock
sub
dec
adc
inc
aas
stc
and
add
bound
enter
nop
test
fmul
(bad)
dec
push
sbb
push
mov
push
ss
add
adc
sti
je
mov
in
xchg
pop
dec
pusha
fcom
out
mov
pop
mov
cmps
push
ret
inc
mov
adc
add
add
push
dec
sahf
jp
stos
pop
scas
push
push
loopne
outs
je
arpl
cmp
dec
cmp
inc
mov
outs
test
retf
out
pop
sub
iret
cmp
aad
outs
movs
pop
dec
pop
mov
shr
popf
(bad)
push
div
jmp
push
cmc
mov
push
cld
add
adc
scas
or
jo
sbb
repz
aaa
add
ror
or
sahf
scas
jae
cmp
int
sbb
addr16
xchg
xchg
mov
add
jmp
aaa
mov
xor
(bad)
test
or
rol
or
mov
sar
cmp
shl
scas
or
int
cmc
xchg
mov
mov
jo
adc
neg
(bad)
ds
sbb
es
xchg
mov
hlt
adc
mov
jne
inc
je
sbb
fmul
inc
mov
addr16
mov
push
cld
xor
push
or
call
int
pop
mov
aaa
in
xor
pushf
dec
and
fnstsw
fldcw
xchg
sar
out
push
repnz
dec
cs
int3
int3
into
sbb
sti
inc
xchg
mov
bound
pop
push
mov
xchg
stos
loopne
xchg
(bad)
adc
pop
adc
(bad)
sub
test
sbb
cdq
lock
xchg
scas
xor
sbb
stc
mov
dec
pop
leave
inc
mov
stc
inc
ds
mov
fadd
push
mov
and
mov
fnstsw
dec
pop
add
pop
dec
stc
push
mul
mov
icebp
sub
fld
or
mov
ins
inc
add
jne
jecxz
dec
add
je
sti
gs
cmp
cmp
aas
les
out
jle
push
mov
mov
outs
and
repnz
push
in
mov
add
xchg
in
sub
jb
add
jne
les
rcl
mov
push
outs
mov
(bad)
stc
push
clc
(bad)
mov
lods
inc
into
stos
out
jmp
pop
ins
mov
lods
sub
aad
mov
pop
inc
mov
pop
cmp
sbb
out
push
out
jo
xor
fsubr
jae
cmc
mov
pop
test
and
jg
push
pop
mov
enter
mov
icebp
fcomp
ret
clc
ins
mov
mov
add
out
fs
pop
xor
xchg
and
pop
mov
push
aam
bound
sub
scas
arpl
inc
nop
ret
clc
dec
retf
cli
ret
pop
sti
pop
pop
mov
out
mov
fst
(bad)
sub
pop
lock
clc
neg
cmp
push
or
mov
dec
mov
aas
mov
cmp
jmp
push
ficom
xor
push
fpatan
das
test
(bad)
sub
pop
popf
sub
jmp
push
les
sbb
jmp
mov
mov
mov
out
mov
add
dec
popf
mov
pop
xor
cmp
movs
dec
mov
and
xlat
jecxz
(bad)
jge
sti
inc
aad
(bad)
aad
imul
loopne
xchg
fscale
push
xor
sub
sbb
adc
and
mov
add
push
dec
cmp
and
push
pop
sbb
movhlps
out
push
and
retf
pop
mov
retf
shr
icebp
pop
out
dec
xchg
leave
cmps
lods
push
cmc
inc
sti
in
dec
xor
iret
pop
sub
sbb
std
test
add
mov
scas
ds
xor
repz
sbb
in
icebp
pop
xchg
test
xor
fimul
push
cwde
lahf
push
or
xchg
push
adc
das
push
mov
mov
adc
hlt
pop
pop
sub
cli
add
hlt
mov
push
mov
mov
inc
fisubr
sub
dec
(bad)
std
lock
lea
dec
add
into
scas
sub
gs
xor
scas
pop
push
loopne
or
stos
popw
mov
hlt
sahf
fsubp
fst
add
xor
out
ins
lahf
jo
in
jmp
jmp
and
ret
ficomp
xor
in
jl
mov
data16
and
mov
xchg
(bad)
fist
aas
and
call
(bad)
cdq
shl
xchg
test
retf
mov
lock
arpl
stc
xchg
pop
ss
js
push
fs
sub
mov
fdiv
or
retf
popf
mov
fld
sub
pop
add
test
fwait
pop
mov
mov
in
loopne
jmp
inc
out
cmp
movq
mov
jge
xor
popf
xor
aad
ror
popa
test
xchg
daa
ja
rcl
push
js
outs
mov
not
mov
sti
pop
add
mov
call
cwde
retf
dec
cmp
(bad)
xor
mov
adc
or
and
inc
or
sbb
paddq
dec
dec
cli
rol
(bad)
sub
mov
inc
leave
retf
jne
and
xor
adc
push
mov
ja
loopne
push
fmul
or
push
int3
arpl
and
int3
sbb
cld
call
inc
mov
fs
out
enter
stc
mov
inc
(bad)
pushf
and
sbb
cmp
pop
xchg
fstp
es
imul
std
rcr
pushf
and
add
jp
stos
mov
inc
jl
es
fimul
mov
and
popf
loop
int3
int
outs
nop
mov
mov
outs
jle
inc
jmp
ins
push
push
fcomp
adc
mov
lods
mov
imul
sub
jmp
mov
pop
mov
inc
add
pushf
cdq
sub
or
test
adc
mov
popa
jle
jbe
gs
sub
push
mov
loop
inc
ret
and
xchg
xor
jnp
mov
push
daa
push
test
and
ror
ds
jmp
pop
lods
mov
and
cmp
adc
inc
fdivr
call
xchg
xchg
sub
daa
repz
push
in
jle
daa
ins
pop
and
xor
push
call
cmp
rol
stos
(bad)
call
xor
dec
fbstp
or
mov
jb
stc
jl
or
icebp
xchg
icebp
xchg
jbe
push
aam
jno
adc
dec
dec
adc
push
pop
test
pop
or
out
lods
test
mov
cmp
adc
mov
push
jo
fwait
jp
data16
jns
inc
daa
xchg
mov
int
adc
jo
jnp
mov
in
test
enter
test
das
mov
cmps
and
test
push
mov
cmp
outs
test
pop
add
dec
mov
cwde
mov
pop
push
jmp
xor
mov
jns
(bad)
push
jge
push
sub
or
or
mov
ja
lods
and
xchg
nop
xchg
push
std
aad
sahf
adc
enter
arpl
xchg
dec
arpl
outs
dec
mov
adc
into
fwait
pop
cmp
jg
rol
pop
repz
jbe
mov
mov
xchg
out
cmps
fisub
not
or
jmp
sbb
shl
jmp
cli
mov
sub
jnp
push
cmp
das
adc
fs
mov
(bad)
retf
cs
xchg
lds
bound
jnp
lods
mov
(bad)
xchg
rcr
and
adc
bound
add
les
mov
jle
jmp
into
out
push
pop
mov
mov
sub
cwde
inc
movs
push
sub
je
fcmovu
test
enter
mov
xlat
and
mov
sub
pop
jo
test
mov
mov
sbb
les
add
es
imul
xchg
ret
push
cmps
loopne
mov
mov
or
pushf
dec
ret
sub
loope
aaa
nop
xchg
sar
xor
xor
enter
fisub
icebp
(bad)
jg
sbb
adc
lods
sub
inc
or
outs
xchg
loop
stos
mov
loop
add
jmp
cld
daa
aas
mov
hlt
sub
loop
push
test
in
jmp
test
cmp
dec
mov
adc
outs
mov
pop
scas
nop
imul
push
les
xchg
push
jp
stc
js
or
pop
mov
push
cmc
xchg
mov
rcl
aad
movs
ret
mov
loop
jb
hlt
cmp
dec
sub
test
inc
aas
(bad)
sub
mov
call
push
bound
out
xchg
inc
dec
out
lods
stos
jmp
sbb
sbb
imul
in
mov
int3
xchg
rol
xchg
mov
xchg
xor
(bad)
cmps
cmp
dec
jecxz
xor
xor
mov
push
mov
jae
int
mov
cmps
shl
mov
push
movsx
out
jns
(bad)
enter
pop
ficom
pop
aas
sub
sub
inc
or
(bad)
jno
push
or
into
iret
fistp
or
fisub
mov
and
inc
or
out
(bad)
mov
hlt
aad
jp
ret
push
movs
and
stos
scas
pop
inc
push
fdivr
sbb
jmp
xlat
jge
jecxz
aas
mul
xchg
aaa
(bad)
ret
ret
cli
sub
pop
cmp
jp
fs
dec
fdiv
sbb
or
in
and
outs
(bad)
popa
add
test
(bad)
push
pop
ror
fldenv
pop
and
popf
adc
fcomp
imul
pop
out
mov
cmp
xchg
xor
jb
lds
mov
cdq
es
fcomi
ror
enter
add
pop
sbb
repz
sbb
clc
xor
sub
iret
xchg
call
fild
jnp
jle
mov
adc
les
xlat
xchg
test
xchg
xor
push
sbb
repnz
pusha
jecxz
mov
cs
push
mov
push
sbb
sub
push
push
push
inc
jae
xchg
scas
fisttp
addr16
test
xchg
inc
rcr
int
jge
data16
push
or
sub
cmp
fiadd
xchg
xor
jae
cs
lea
mov
test
inc
pop
sahf
and
inc
xchg
push
xchg
popa
xchg
das
loop
std
sbb
jg
mov
pop
add
sbb
cld
and
pop
outs
inc
jbe
xchg
sbb
xchg
pop
or
scas
lods
pop
stos
out
or
pop
cwde
call
sahf
inc
je
xchg
adc
ds
movmskps
mov
mov
jg
pusha
shl
sbb
icebp
loopne
mov
and
mov
(bad)
jmp
scas
pop
fimul
mov
aaa
inc
lock
in
fld
xchg
nop
mov
xchg
mov
dec
(bad)
frstor
aam
jmp
pop
mov
outs
push
lods
cmp
jecxz
ja
loop
add
iret
fwait
cmp
pop
(bad)
gs
fisubr
jb
(bad)
mov
or
mov
jle
stos
sbb
xchg
push
(bad)
fprem
mov
xchg
xor
push
xchg
add
xor
and
inc
das
mov
jo
mov
xchg
dec
dec
inc
pop
iret
test
call
imul
shl
in
scas
imul
xor
mov
mov
rcr
popa
add
cmps
es
cs
imul
aas
mov
sahf
sub
les
call
xor
cmc
scas
xchg
sysenter
clc
fsubrp
retf
xchg
mov
ds
push
mov
mov
pop
icebp
jns
in
jecxz
ror
repnz
pop
(bad)
push
mov
in
lds
xor
outs
mov
ror
xor
xchg
jl
push
adc
xchg
cli
fiadd
daa
add
fld
mov
rcl
leave
popf
sbb
xchg
mov
mov
pop
das
cmp
push
mov
push
sub
xor
push
mov
pop
js
mov
shl
scas
and
nop
xchg
shl
mov
leave
dec
int3
mov
adc
cli
jbe
jmp
dec
dec
sbb
loopne
xchg
sbb
leave
mov
jb
fbld
push
adc
test
cmp
cdq
jmp
fdivp
jmp
cdq
mov
jg
enter
and
ret
in
les
mov
rol
push
jno
sbb
enter
jge
mov
inc
mov
pop
or
int3
mov
mov
test
ss
ja
xchg
jae
shl
jge
fdiv
neg
test
imul
in
adc
mov
cli
cmp
inc
enter
jmp
sbb
sub
les
(bad)
aad
imul
sbb
ss
ss
push
inc
sbb
idiv
xor
clc
or
inc
inc
lods
sub
and
ror
pop
lods
pushf
daa
retf
repz
in
mov
repz
inc
pop
inc
add
sti
imul
ss
sbb
jo
in
cmp
cmps
pop
xor
loopne
sbb
adc
xchg
test
jmp
popf
cmp
imul
jne
push
sub
pusha
mov
push
mov
nop
rep
dec
inc
ins
shl
dec
inc
out
adc
cmp
sub
(bad)
cmps
out
es
ins
push
lea
mov
adc
pop
pop
test
repnz
aaa
lock
mov
xor
test
xlat
fidiv
fld
jns
ror
push
das
inc
or
ins
pushf
test
mov
in
inc
ror
sbb
mov
mov
mov
mov
cmp
jecxz
out
and
inc
inc
repz
adc
cmp
in
test
bound
fs
mov
sbb
push
jns
mov
dec
inc
mov
add
imul
mov
rcr
adc
and
leave
jno
sti
gs
in
xchg
loopne
lds
in
or
arpl
dec
std
mov
mov
icebp
int3
mov
stc
test
and
sbb
out
lock
pop
int
out
mov
int3
bound
mov
sbb
imul
nop
fs
sbb
mov
loope
ret
loopne
popa
inc
jae
mov
mov
clc
mov
jg
test
inc
rol
gs
sub
push
inc
push
test
xor
les
inc
or
dec
in
inc
mov
lahf
aam
sahf
hlt
sbb
mov
dec
popf
fadd
adc
dec
scas
push
retf
cmps
xor
jmp
jb
mov
cmp
dec
xor
div
cmp
pop
scas
fdiv
scas
mov
(bad)
xlat
fistp
xchg
cmc
sbb
call
dec
imul
hlt
cmp
jns
je
mov
adc
pusha
test
icebp
repz
jecxz
adc
pop
das
iret
pop
or
retf
(bad)
or
(bad)
jb
dec
imul
xor
ror
xor
jle
push
repz
dec
xor
fbstp
cmp
and
xor
adc
outs
movs
js
loop
pop
or
fs
mov
add
jne
(bad)
pop
in
imul
pop
pop
stos
ds
pop
sub
sti
cmps
call
ja
or
test
cmp
adc
xchg
sub
pxor
(bad)
dec
sbb
push
loopne
loope
ins
jnp
cmps
in
inc
pop
push
push
mov
or
xchg
cmp
dec
jo
add
mov
in
xchg
aas
jle
push
dec
mov
popf
cli
mov
sbb
sar
std
push
and
add
popa
cmp
pop
sub
push
je
js
and
jl
data16
inc
cld
dec
dec
push
(bad)
pusha
repz
push
fwait
or
pop
sbb
(bad)
test
and
loop
adc
cwde
push
add
outs
in
scas
push
movs
pusha
pop
jns
or
dec
daa
or
clc
cs
xchg
pop
sub
(bad)
adc
add
int3
inc
ins
lea
sti
adc
mov
or
adc
mov
pop
adc
shl
iret
cpuid
or
xor
and
inc
(bad)
jne
retf
push
ss
out
mov
pop
popa
lahf
(bad)
popa
movs
repz
and
mov
dec
mov
xchg
mov
mov
jmp
cmp
es
ror
xor
pop
mov
sub
retf
and
mov
mov
mov
xor
repz
dec
push
jne
outs
and
sahf
jl
mov
jno
mov
xor
aad
(bad)
sbb
and
sub
les
cwde
mov
lea
aas
push
or
lods
adc
in
(bad)
jo
push
mov
xchg
mov
pop
ret
add
out
fsub
sub
mov
cmc
xchg
cli
iret
in
xchg
mov
outs
sbb
adc
sahf
adc
inc
scas
data16
retf
retf
fidiv
out
push
dec
pop
sub
aad
sar
push
retf
jns
push
mov
dec
sbb
pinsrw
pop
(bad)
cmc
fist
sbb
out
push
loop
cli
adc
and
mov
mov
fs
fs
movs
inc
hlt
sub
push
mov
stos
add
repnz
fwait
cdq
xchg
je
fwait
int3
cmps
xchg
in
rcl
addr16
mov
xchg
loop
adc
sbb
aam
push
mov
fbld
popa
or
xchg
pop
mov
mov
mov
out
aaa
sbb
adc
lock
(bad)
lock
mov
ror
sbb
cmp
hlt
outs
dec
ins
pop
xor
dec
ret
xor
test
test
jbe
and
and
call
call
sub
xchg
cmc
push
sub
cmp
cdq
sti
outs
pop
jmp
and
imul
je
mov
add
dec
xchg
or
fisubr
xchg
sahf
push
sbb
scas
fwait
push
cmp
push
ins
sub
cmps
or
js
and
dec
mov
xchg
movs
shl
cmp
pushf
dec
xor
jl
xor
mov
jnp
adc
push
dec
push
(bad)
xor
arpl
test
push
push
retf
fldenv
inc
jle
dec
xchg
shr
mov
movs
outs
std
mov
aam
inc
rcl
es
push
je
scas
and
sar
jnp
fwait
push
retf
or
inc
jg
sub
mov
outs
out
ds
mov
dec
(bad)
inc
test
push
fcomi
shl
xor
xchg
mov
add
mov
sub
dec
xchg
push
xor
test
add
cmp
mov
or
loopne
mov
mov
add
jle
jns
xchg
hlt
mov
push
imul
shr
ins
inc
aas
iret
sub
mov
into
dec
inc
adc
aad
(bad)
mov
sbb
dec
mov
lds
push
xchg
icebp
neg
sar
(bad)
ins
adc
sbb
fisub
add
xor
rcr
mov
mov
sub
punpckhbw
add
jge
scas
push
ja
jb
jmp
(bad)
shl
rol
jno
xor
pop
dec
mov
ret
adc
mov
call
pop
sbb
out
cmp
ds
out
ins
fild
sbb
ja
inc
xchg
xchg
sbb
push
test
ds
sub
or
mov
push
ja
test
mov
iret
sbb
jno
push
add
lods
aad
(bad)
xlat
bnd
push
and
push
psrld
pushf
shr
lock
sub
ins
xchg
sbb
nop
pop
add
sbb
inc
and
and
mov
dec
movs
fdivr
cmp
jno
adc
lods
test
add
inc
xor
xlat
and
jae
cmps
call
mov
dec
sbb
jb
pop
push
dec
sub
jb
retf
inc
stc
call
adc
addr16
loop
pushaw
inc
jns
mov
add
arpl
sbb
cmp
add
aas
sub
mov
lock
mov
ja
les
adc
inc
cmp
sahf
mov
mov
xchg
and
ror
mov
cmps
not
inc
(bad)
in
test
mov
dec
nop
add
fstp
dec
sub
std
js
jl
mov
jp
mov
mov
stos
imul
test
jmp
neg
or
mov
cmps
ror
pop
cmp
pushf
aas
sub
xchg
mov
test
pop
mov
jae
leave
hlt
push
dec
scas
xchg
pop
jmp
cs
test
cwde
sahf
cmp
xchg
dec
jmp
pop
daa
sbb
cmp
add
mov
pop
out
out
inc
fld
mov
call
sub
in
fcom
sub
xchg
mov
xchg
mov
adc
(bad)
inc
push
inc
into
push
or
into
test
shl
push
push
lock
mov
xchg
call
mov
(bad)
neg
mov
xchg
cs
pop
ins
add
or
jno
retf
cdq
idiv
inc
ja
xor
scas
pop
push
pop
ds
jo
cdq
cmps
jne
sbb
dec
daa
repz
lds
daa
jb
pop
daa
pop
mov
pop
not
jl
outs
or
call
push
or
xor
sub
int3
fisubr
dec
(bad)
mul
ss
cdq
ja
cmps
xlat
js
cld
jecxz
mov
in
and
repnz
das
add
push
jp
je
loop
pop
inc
fimul
or
loop
aas
push
mov
dec
daa
call
and
push
test
jns
js
les
pop
cmp
and
(bad)
or
sub
pop
adc
adc
sub
(bad)
fwait
pop
fdivr
data16
(bad)
repz
jne
test
add
xchg
push
mov
pop
les
dec
sti
fild
mov
test
js
jbe
sub
jne
lock
cmp
clc
loopne
test
inc
xor
sub
movs
and
icebp
aas
xchg
(bad)
nop
es
test
push
dec
dec
in
fbld
jmp
xor
cwde
pushf
mov
xchg
out
cmp
cdq
dec
jbe
mov
cmps
or
mov
mov
cld
mov
bound
mov
loope
add
pop
push
or
mov
js
pop
in
dec
sub
push
or
sub
mov
psrad
vpshufhw
or
and
(bad)
sub
mov
call
xrelease
stos
push
outs
push
test
cmp
(bad)
xor
push
dec
jae
or
das
pop
(bad)
cli
hlt
dec
push
xlat
mov
mov
call
icebp
aaa
and
push
cmp
pop
xchg
call
daa
push
sbb
cdq
inc
div
mov
push
dec
stc
repnz
dec
xor
and
sbb
and
ins
call
(bad)
mov
pop
mov
cld
das
sub
sub
adc
xchg
imul
mov
stc
inc
dec
mov
fisttp
xor
(bad)
sub
mov
xchg
nop
test
lea
inc
mov
popf
ror
xor
cmp
(bad)
sar
adc
loope
xchg
(bad)
push
mov
xor
stos
ins
scas
sbb
sub
ja
cmp
xchg
inc
push
(bad)
jo
push
pushw
xchg
fisub
push
mov
adc
es
xchg
lock
mov
inc
push
sub
repz
stc
icebp
mov
cmp
out
dec
mov
imul
mov
rcl
nop
push
sub
dec
mov
xchg
out
inc
fild
addr16
jb
mov
outs
sub
or
repz
xchg
das
inc
mov
inc
mov
mov
std
sub
mov
test
xchg
adc
push
jecxz
xor
icebp
cmps
adc
js
(bad)
and
mov
jae
fs
rcr
pop
and
push
pop
lock
sub
aas
sahf
cmp
leave
cmc
jl
imul
iret
jb
(bad)
cmp
push
rcl
lahf
pop
out
push
hlt
imul
mov
dec
mov
xchg
xchg
jns
cmp
outs
stos
into
stc
lea
mov
arpl
js
push
movs
iret
imul
imul
lds
inc
mov
test
and
jnp
sbb
mov
or
jp
pop
jns
cwde
hlt
test
pop
jnp
cmc
lock
stos
es
(bad)
int
cmp
fwait
push
sbb
xchg
ja
ins
mov
sti
push
aas
popa
or
mov
mov
and
xchg
cmp
or
adc
xchg
pushf
or
mov
cmps
inc
dec
aaa
adc
mov
hlt
arpl
dec
test
lahf
mov
and
fsub
cmp
mov
push
add
bound
outs
nop
push
dec
push
mov
mov
mov
add
cmp
or
push
fwait
add
and
int
lea
and
ret
loopne
(bad)
cmps
push
mov
je
fwait
xor
ins
pop
sub
push
stc
xchg
push
aaa
adc
mov
pusha
dec
lahf
and
dec
or
push
rcr
xor
inc
test
xor
pop
lods
sub
(bad)
rcl
mov
cmp
scas
cld
arpl
push
js
jge
or
movlps
sbb
aad
jl
mov
add
adc
inc
mov
xor
test
cmc
xor
pop
mov
jecxz
pop
mov
scas
(bad)
adc
sub
pop
cli
lock
js
push
inc
inc
call
push
push
jae
pop
fwait
dec
sbb
(bad)
(bad)
fstp
bound
sbb
push
push
scas
jle
ins
repnz
push
push
scas
add
call
test
psubd
mov
and
or
adc
and
int3
out
inc
sub
icebp
sub
push
fnstenv
xchg
push
inc
inc
std
sbb
mov
sub
test
mov
test
add
test
rcr
out
sbb
inc
(bad)
in
dec
lods
push
popa
scas
mov
std
pop
and
adc
fwait
mov
call
jne
stos
jecxz
xchg
scas
mov
fucom
adc
das
xchg
loope
out
mov
jmp
lods
cli
ss
enter
(bad)
mov
inc
in
std
test
xor
lds
jae
cdq
(bad)
adc
movs
mov
or
(bad)
aam
jbe
mov
mov
nop
and
push
retf
add
movs
jb
dec
add
aaa
push
(bad)
mov
inc
sahf
mov
mov
mov
neg
inc
loope
sub
imul
lds
mov
mov
mov
pop
and
push
cmp
outs
mov
push
lods
or
push
dec
outs
cwde
jg
test
cdq
stc
mov
stos
rol
and
add
mov
pop
dec
aas
aad
or
ins
cmp
push
push
xchg
pop
test
xchg
dec
adc
dec
or
ins
adc
mov
xchg
loop
mov
fadd
add
scas
jge
push
dec
retf
add
mov
cld
mov
cmp
(bad)
cmc
sub
xor
aas
inc
push
xchg
sahf
out
mov
pop
mov
je
pop
stos
jbe
and
inc
pop
fcom
repnz
jmp
loope
push
mov
cli
lahf
inc
xor
shl
push
cmp
inc
jns
xor
or
(bad)
shr
stos
add
sbb
aaa
(bad)
mov
push
mov
hlt
xchg
mov
repnz
push
and
outs
out
cmc
aaa
mov
mov
jae
out
xor
outs
mov
popa
xchg
sti
stos
mov
inc
popa
and
cmp
popa
pop
mov
cmp
stos
sbb
cld
in
and
pushf
jnp
cmp
mov
enter
loop
push
sbb
fs
test
xchg
push
fisttp
enter
push
fstp
jmp
sub
ds
cmps
mov
pusha
cmp
mov
call
fbld
cmp
xchg
leave
shl
mov
xchg
inc
or
and
ins
rcl
xor
jg
push
ins
out
ins
loop
jne
retf
sbb
sar
cmp
pop
dec
daa
dec
int
in
ss
(bad)
pop
pop
dec
sub
pop
xchg
js
dec
jmp
arpl
scas
xor
icebp
scas
or
nop
and
dec
imul
push
xchg
cmp
lea
mov
push
push
jns
dec
jp
xor
adc
pop
in
jp
ds
leave
scas
add
into
repz
sti
leave
gs
test
scas
and
sbb
sbb
mov
mov
mov
mov
xor
push
sbb
pop
xchg
dec
(bad)
scas
sub
cdq
jbe
sub
mov
shr
out
lahf
ins
adc
retf
dec
nop
mov
sahf
sub
aad
into
fxch
inc
cmp
lock
call
lock
xchg
out
loop
pop
cld
and
push
fldcw
(bad)
cmp
mov
xor
lods
jecxz
cmp
outs
icebp
jle
sub
add
dec
push
jecxz
mov
lods
sbb
sbb
mov
in
xchg
in
mov
shl
mov
outs
mov
mov
jl
fdiv
jo
and
and
adc
jmp
adc
out
cmc
das
gs
mov
(bad)
hlt
(bad)
fist
imul
mov
xchg
cmp
ret
rol
mov
scas
fmul
cs
sbb
fadd
and
repnz
int
mov
and
aas
sbb
pop
jns
or
or
clc
cdq
add
sti
pop
jecxz
sbb
or
in
sbb
jo
mov
jg
pushw
call
shr
pop
mov
fisubr
push
mov
cli
mov
xor
ret
inc
aaa
popf
or
fdivr
lahf
or
mov
(bad)
fisttp
sub
out
aaa
push
mov
cs
mov
ret
mov
pop
dec
inc
push
rol
cmp
xor
repnz
cmp
fwait
arpl
loope
shr
ss
jbe
mov
lods
inc
push
fistp
popf
inc
(bad)
retf
(bad)
cmc
daa
xor
icebp
test
out
adc
sti
out
outs
iret
loopne
shr
xor
in
cmp
aas
adc
sub
sub
push
xchg
fidiv
xor
fdivp
pop
nop
or
clc
je
mov
cmovbe
push
xchg
jo
add
push
sti
mov
mov
call
cmp
gs
mov
mov
mov
mov
inc
in
push
mov
pop
inc
mov
push
jp
ret
jle
and
sub
repnz
mov
addr16
fs
cmps
ficom
cdq
in
test
sub
and
fsqrt
xchg
mov
(bad)
jle
sbb
jb
inc
fst
js
xchg
cdq
(bad)
xchg
loop
lds
cwde
add
int
retf
ret
cmp
mov
aaa
jns
sahf
xchg
inc
jno
xchg
nop
jo
arpl
pusha
sub
repz
test
out
push
add
pop
inc
enter
inc
shl
jno
mov
popf
pop
inc
inc
je
xchg
push
pop
jne
scas
(bad)
dec
aaa
loope
sub
leave
jnp
dec
add
leave
imul
(bad)
mov
stos
xor
push
and
aaa
in
xor
ja
adc
icebp
cmp
mov
test
xchg
adc
add
push
mov
push
jo
fwait
int
mov
pop
inc
movs
gs
int3
cmc
add
stc
jle
inc
pop
pop
jp
(bad)
jmp
stos
das
out
push
(bad)
mov
push
pop
jmp
outs
sub
cdq
sbb
and
and
(bad)
xor
out
int
inc
ficomp
aam
movs
jp
loope
clc
fidiv
cmp
mov
sub
sbb
cmps
xchg
jmp
pop
comiss
dec
(bad)
loope
xchg
aas
cs
ds
std
push
inc
cmps
xor
jno
fisubr
adc
clc
add
jne
adc
outs
es
pop
add
sbb
mov
push
ror
cmp
pop
cmps
(bad)
sbb
mov
mov
push
add
inc
retf
je
add
mov
rcr
add
retf
std
stos
and
ins
je
out
fcmovu
int
sub
hlt
hlt
push
add
adc
mov
jo
cmp
inc
rcl
stos
dec
test
pop
cs
add
adc
pop
lods
xchg
js
retf
movs
mov
mov
test
push
rol
mov
sbb
sub
or
jecxz
adc
dec
pop
inc
push
push
dec
(bad)
jmp
inc
fcom
inc
xchg
mov
jmp
(bad)
test
dec
add
cli
ja
iret
fidivr
xchg
or
mov
jmp
inc
jo
lods
pushf
pop
sub
push
scas
cmp
xchg
ror
shr
xor
gs
push
int
or
(bad)
aas
mov
mov
and
jo
jmp
loopne
add
push
retf
adc
pop
scas
idiv
cmps
pop
enter
jl
jl
pusha
dec
sub
out
or
mov
std
ins
cmp
nop
xor
iret
icebp
hlt
aaa
scas
fisttp
pop
loope
es
es
push
dec
(bad)
divps
fdivp
cmp
cmps
jnp
push
cmps
scas
in
xchg
inc
retf
pusha
fidivr
or
sbb
sti
xchg
cmp
sahf
ss
sar
sub
out
mov
loope
fiadd
push
jmp
jns
dec
cli
lods
nop
push
inc
and
pop
xchg
push
xor
mov
and
sub
inc
fnstcw
sub
fwait
mov
aad
cmc
mov
push
lock
sbb
ret
inc
and
je
sub
cwde
jp
add
(bad)
fbld
xchg
fwait
addr16
(bad)
hlt
add
inc
adc
in
fisub
idiv
dec
rcr
inc
inc
xchg
std
movs
dec
mov
sbb
jl
fidiv
xchg
dec
push
and
sub
lds
and
stos
inc
(bad)
hlt
call
(bad)
pop
xor
push
scas
call
mov
xor
shl
fldl2e
aam
or
cmc
arpl
icebp
jo
ss
gs
sbb
int3
cs
push
sbb
(bad)
adc
outs
in
ret
(bad)
int3
loopne
call
cmp
add
push
scas
ja
xchg
mov
jbe
pop
ins
jns
push
mov
jecxz
or
xchg
sbb
aam
mov
inc
add
adc
mov
(bad)
cmp
jns
cwde
jne
push
dec
lea
iret
inc
or
jnp
in
test
jp
dec
mov
pop
xlat
shr
pop
mov
out
scas
fsub
or
dec
mov
test
cmps
mov
ins
sbb
jmp
test
or
sub
mov
cmp
daa
jecxz
stos
lods
cmp
xchg
int
or
sub
xchg
sub
jecxz
adc
mov
(bad)
xchg
mov
dec
mov
and
loope
jl
outs
xor
test
sub
add
push
inc
adc
adc
push
xchg
aaa
stos
mov
ins
pop
(bad)
jne
stos
leave
add
inc
pop
adc
mov
jmp
adc
lds
dec
ret
inc
xchg
cli
jl
jg
push
and
jecxz
pop
jle
add
stc
out
pop
jne
div
das
inc
fild
xor
(bad)
mov
push
xchg
test
dec
and
hlt
sbb
add
fs
(bad)
mov
xchg
cmp
mov
lea
out
inc
cmp
js
add
sti
mov
dec
out
xchg
jmp
in
ficom
pop
loope
call
lds
and
xor
dec
ss
or
xchg
rcl
dec
rcl
cmc
xlat
add
adc
or
inc
test
imul
loopne
sbb
(bad)
jae
(bad)
(bad)
(bad)
les
cmc
daa
and
ds
xchg
outs
adc
mov
int
call
in
gs
rcr
or
sbb
pusha
sub
mov
div
aam
or
fsubr
in
lods
scas
fnstcw
xchg
mov
pushf
xor
or
pop
sub
rol
dec
(bad)
add
iret
rcr
mov
dec
or
int3
iret
jne
loopne
mov
ret
jae
gs
cmc
jne
and
cmp
stc
jno
push
inc
rcr
imul
sti
fprem1
(bad)
lea
mul
das
lods
cmp
xlat
cdq
fs
hlt
(bad)
addr16
mov
xor
cmps
adc
inc
retf
jnp
call
cmp
xor
mov
lahf
std
dec
inc
push
inc
lods
inc
pop
cmp
out
out
inc
adc
call
rcl
fsubr
sub
int3
xor
ins
sub
cmp
es
sub
(bad)
mov
jbe
mov
sbb
sahf
push
sbb
mov
inc
fcmovnbe
push
push
fiadd
enter
xchg
dec
movs
xor
ficomp
fadd
jp
and
xchg
mov
mov
test
cmp
in
cmp
test
xlat
lock
cmps
push
mov
xchg
inc
pop
sahf
aas
mov
fimul
jp
mov
cmc
pop
retf
adc
fmul
fwait
out
cmp
aaa
call
adc
stc
lods
loope
push
add
loope
cmps
mov
addr16
mov
addr16
push
and
retf
sub
(bad)
in
mov
rcl
enter
add
sbb
fwait
jno
xor
xchg
jge
std
pop
jnp
mov
xchg
out
shl
add
add
sub
cmp
popa
jp
mov
xor
test
adc
or
ror
xlat
aad
es
mov
int
int
or
mov
mov
or
xchg
xchg
les
mov
jp
cli
xor
push
(bad)
mov
outs
fwait
mov
pop
popa
or
cmp
inc
dec
xlat
or
jmp
sbb
push
leave
dec
mov
jmp
xchg
sbb
lock
into
xchg
or
and
sub
pop
fisubr
or
sahf
cs
mov
xchg
sbb
arpl
xchg
mov
mov
xchg
cmp
cmc
cmps
push
push
sbb
cdq
in
or
shr
xor
jb
imul
(bad)
loope
cwde
fmul
cmp
ds
in
mov
xchg
imul
pop
push
mov
cwde
ret
leave
jnp
push
sbb
push
xlat
sar
mov
xchg
add
cmc
mov
xchg
mov
jo
dec
xor
(bad)
sbb
adc
ins
inc
and
mov
xchg
pop
retf
pop
cmp
dec
cli
enter
or
mov
call
cmp
or
les
ret
mov
retf
js
lds
adc
xor
mov
pusha
popa
mov
cwde
xchg
(bad)
lahf
fild
es
jo
nop
rcr
push
in
sbb
mov
xlat
xor
xlat
xchg
push
mov
int3
jmp
fidiv
arpl
jns
or
and
fstp
ret
dec
shl
xchg
lods
push
sub
popa
repz
jge
neg
or
sub
cld
xor
jae
jae
push
and
adc
mov
out
mov
push
not
push
inc
aaa
jo
ds
(bad)
stc
jbe
in
mov
jge
xor
pop
mov
sbb
aas
mov
(bad)
leave
adc
sub
(bad)
std
jmp
sti
ins
add
fwait
mov
sub
fs
in
fld
cs
bound
gs
jnp
push
lock
inc
(bad)
lahf
scas
in
cmp
jbe
retf
cmps
data16
cdq
les
pop
scas
sbb
sbb
mov
mov
mov
mov
or
les
mov
xchg
ja
xchg
pop
scas
mov
retf
inc
cmp
outs
push
xchg
mov
and
lds
xor
jge
jge
fdiv
jns
dec
mov
add
mov
test
ret
adc
adc
inc
xchg
cmp
or
das
nop
(bad)
push
ss
adc
mov
xor
lods
shr
gs
retf
sbb
mov
jbe
cmp
cmp
jle
dec
popa
sbb
pushf
nop
cmc
xchg
xor
cmps
jge
cmp
out
lahf
inc
mov
push
add
into
push
fucomip
test
push
mov
cmp
sbb
test
add
xor
sbb
sbb
push
pop
push
sti
xchg
xchg
clc
fimul
test
pop
ss
push
bound
mov
xchg
(bad)
sar
pop
push
xchg
les
das
retf
popf
mov
loop
retf
sub
cmp
jp
daa
repz
xchg
enter
jecxz
jp
sbb
icebp
add
repz
adc
in
mov
inc
rcr
sub
sbb
xor
and
pop
and
fstp
dec
call
and
and
cmc
ins
mov
and
mov
adc
(bad)
fwait
jae
mov
inc
aas
mov
mov
jo
jns
and
cli
xor
jbe
sbb
mov
aas
xchg
add
je
jb
lahf
stc
addr16
fwait
retf
pop
sti
fidiv
cli
shl
(bad)
iret
xchg
lea
(bad)
push
movs
push
dec
sti
sti
scas
pop
inc
clc
sbb
mov
push
sub
mov
icebp
leave
jge
add
pop
xchg
mov
lock
out
loop
inc
mov
test
or
push
pop
dec
or
cwde
or
mov
loop
dec
mov
xchg
setge
call
fld
lds
jmp
movs
lods
mov
sar
or
aam
mov
(bad)
fsubr
cmp
and
lahf
rcr
jmp
push
in
push
gs
out
jnp
push
(bad)
idiv
or
test
retf
cs
retf
mov
inc
xor
dec
mov
test
mov
jbe
or
fnstenv
sbb
cmp
outs
sbb
jle
clc
mov
rcl
mov
retf
push
inc
pop
in
in
leave
neg
pop
inc
xchg
inc
sbb
fsubr
mov
es
repz
es
rcr
cmps
lock
jo
jl
dec
push
jbe
nop
data16
fisttp
jp
cmp
xor
lea
pop
sbb
cmp
adc
test
gs
loopne
add
pop
sub
mov
mov
jns
icebp
cmp
mov
pop
jmp
lods
cld
stc
jno
gs
lea
or
and
jno
mov
sbb
fld
repnz
sahf
mov
in
fcom
jbe
rol
or
mov
push
(bad)
or
sbb
stc
push
push
lahf
and
mov
adc
xchg
ficom
mov
dec
sahf
lods
cld
imul
xchg
xchg
stc
jae
and
add
mov
jnp
push
sbb
push
fcomp
(bad)
and
or
mov
(bad)
sub
das
rcl
xchg
mov
in
int3
xchg
xchg
sub
pushf
scas
xchg
mul
in
out
xor
pop
push
enter
and
add
in
cmp
mov
xchg
push
cmps
xchg
call
cwde
jo
test
scas
xor
fnstenv
add
xor
push
les
wbinvd
cmp
fs
add
test
adc
neg
stc
into
sub
push
inc
std
mov
add
rol
out
ss
in
stc
clc
jmp
mov
cmp
hlt
fsub
iret
in
aaa
mov
jge
enter
(bad)
jbe
cmp
sub
dec
add
mov
sub
jmp
push
inc
iret
mov
and
push
cmp
xor
sbb
aad
and
popf
sbb
lds
adc
jge
popf
dec
(bad)
cmp
xor
dec
pop
sbb
fs
icebp
or
mov
rcr
shl
cmps
arpl
jp
mov
ficomp
in
mov
dec
in
fwait
pusha
fstp
pop
ficomp
cdq
into
cmp
sbb
and
and
out
sahf
(bad)
shl
movs
mov
dec
jmp
push
pop
bound
sar
mov
jb
xchg
fdiv
sub
and
out
pop
pop
inc
inc
das
add
cdq
test
inc
push
sbb
push
imul
hlt
mov
rcr
xor
push
inc
repnz
pop
cli
ret
mov
cmp
fistp
mov
scas
dec
xor
icebp
mov
mov
pop
push
jge
sti
jecxz
xchg
mov
xchg
jmp
mov
sub
fmul
outs
mov
out
xchg
addr16
add
daa
stos
test
ret
pop
(bad)
in
mov
push
std
sub
cdq
pop
pop
out
fwait
jecxz
cmp
rcl
mov
adc
inc
add
push
or
test
aaa
mov
fucompp
stos
jge
adc
cmc
mov
mov
adc
or
mov
jo
cdq
mov
(bad)
iret
int3
and
xor
scas
inc
jno
sub
(bad)
adc
mov
xchg
(bad)
and
rcr
dec
push
adc
add
rcr
mov
mov
jge
adc
rsqrtps
das
std
cmc
mov
ret
outs
pop
ret
mov
(bad)
xchg
sbb
add
mov
test
mov
ret
xchg
jle
mov
add
pop
dec
repnz
dec
cs
cmc
inc
sub
mov
adc
loop
fstp
retf
aas
retf
or
scas
pop
dec
aad
mov
sub
push
dec
mov
sbb
aam
repnz
pop
adc
int
outs
jmp
add
mov
add
aam
neg
aas
pop
adc
call
xor
or
test
mov
and
outs
xchg
ds
or
mov
shl
call
fdiv
ror
pop
push
sti
xchg
adc
fnstcw
sub
mov
mov
in
mov
ja
push
adc
lea
ins
ret
mov
pop
adc
cs
jg
xchg
add
sbb
and
or
push
outs
pop
adc
loopne
outs
in
es
int
push
(bad)
(bad)
cmp
cmp
jb
aad
xor
ficom
icebp
xchg
cmp
lds
scas
out
stc
shl
or
cmp
adc
sub
aam
loope
add
or
(bad)
outs
inc
inc
adc
sbb
cwde
loopne
jle
push
ja
popa
enter
fucom
aas
mov
sbb
int3
test
sub
push
or
fwait
retf
ins
sbb
mov
push
loop
jno
pushf
inc
lahf
inc
pop
fmulp
(bad)
rcl
adc
adc
mov
jno
retf
jge
inc
jg
popf
sbb
sub
push
push
sbb
cmps
pop
adc
ret
sahf
jnp
pop
ins
xchg
fsub
and
jae
retf
cmp
ficomp
mov
mov
imul
adc
add
rcr
aam
jg
pavgw
push
xchg
mov
lods
out
jbe
imul
daa
popf
lahf
xor
fs
outs
inc
xor
jbe
les
push
imul
rcl
xlat
cs
jecxz
push
daa
jb
jbe
lds
push
pushf
daa
iret
rol
push
sub
jge
lock
add
int3
add
or
cmp
push
stc
cmp
mov
in
push
addr16
jo
cmp
add
xchg
push
fcom
loope
pop
inc
inc
mov
pop
sahf
adc
shl
xchg
popf
push
inc
rcr
add
mov
adc
lds
pop
aaa
cmp
movs
inc
sbb
jns
inc
test
and
out
sbb
(bad)
cmps
test
xor
dec
cmp
xor
ret
dec
add
sbb
(bad)
mov
aaa
sub
nop
scas
xchg
jle
leave
sub
jbe
icebp
repz
ror
and
test
cs
cs
jle
cmps
pop
lods
mov
ins
rol
mov
inc
loope
cmc
add
sbb
adc
sbb
push
inc
stc
stos
outs
sub
fwait
loope
mov
mov
xchg
ins
nop
mov
(bad)
adc
lods
adc
lods
scas
cmp
jl
dec
sub
(bad)
inc
or
xor
sub
mov
pop
mov
sub
iret
mov
or
cmps
int3
mov
retf
jecxz
adc
xchg
pop
push
xor
into
pop
in
out
adc
xchg
jo
add
jmp
sub
jecxz
out
mov
lahf
xor
movs
xchg
xchg
add
push
fs
fstp
fdivr
inc
inc
mov
xchg
loopne
jge
sub
repnz
inc
(bad)
jg
out
(bad)
(bad)
pushf
cmp
pop
inc
push
jns
(bad)
fldenv
fstp
add
jno
dec
outs
cmp
pop
idiv
cmc
out
inc
add
into
retf
test
mov
jno
xor
mov
inc
popf
test
fisttp
sub
push
dec
mov
dec
out
cmp
jmp
mov
xor
mov
test
push
das
mov
adc
pop
pop
push
jmp
retf
cmp
push
add
adc
cmp
inc
nop
outs
add
imul
jp
fwait
sbb
call
or
repz
fsubr
or
mov
ret
mov
rol
jb
sbb
adc
mov
xchg
in
rol
stos
dec
dec
dec
sub
or
test
pop
fwait
outs
xlat
push
mov
pop
in
int3
call
dec
iret
and
push
mov
mov
adc
jl
sub
pop
mov
add
sub
jmp
popf
fucom
xchg
sbb
push
je
loop
cmps
out
and
dec
push
mov
mov
cmp
in
and
push
fdiv
mov
cli
sub
aas
pop
and
cs
xor
cmp
xchg
add
hlt
leave
cmp
popf
out
stos
das
mov
rol
(bad)
push
inc
stos
enter
(bad)
and
popa
out
bound
push
mov
out
inc
sbb
mov
ins
(bad)
js
cmp
mov
dec
add
xchg
into
loop
pop
lods
and
test
test
mov
imul
xchg
cdq
popa
(bad)
shl
fidivr
call
popa
int
pop
and
adc
inc
cmps
mov
push
sub
out
ds
jmp
leave
mov
push
popf
repnz
test
sub
jno
dec
iret
call
mov
and
les
int3
xor
sbb
jmp
dec
push
(bad)
sbb
arpl
mov
dec
fidivr
cwde
push
jbe
sbb
fsub
cmc
std
inc
add
js
data16
retf
sar
mov
jmp
push
mov
pop
and
aad
es
push
jp
or
mov
mov
(bad)
cmps
std
jmp
sbb
lock
mov
inc
jg
cld
xor
push
and
jmp
cs
mov
inc
loop
xor
sbb
lahf
mov
in
sbb
test
push
sbb
adc
out
sub
pop
mov
dec
movs
xor
jae
sub
pop
push
popf
dec
pop
cwde
stos
sar
stos
or
sbb
add
pop
mov
shl
(bad)
int
loopne
inc
jg
lods
bndldx
ins
call
lock
popf
push
sbb
add
jbe
dec
popa
aas
jne
leave
push
xor
call
fld
add
test
mov
sahf
mov
adc
test
fucomi
ss
int3
or
shl
sub
fsubr
add
jns
cmps
sbb
popa
xor
jae
int3
jno
jl
pop
xor
mov
jae
mov
sbb
xchg
add
mov
push
mov
loop
je
push
push
in
mov
xor
ret
into
inc
fild
out
and
loopne
jmp
add
out
(bad)
aad
outs
xor
push
push
xor
push
sbb
mov
mov
push
scas
and
icebp
adc
sub
shl
ror
pop
btr
scas
lods
xor
scas
cmp
lock
(bad)
ror
mov
xor
push
pop
pushf
mov
leave
sub
xchg
cli
mov
icebp
sub
enter
(bad)
shr
add
iret
fsubr
sbb
add
jo
ja
mov
mov
push
icebp
mov
mov
scas
ror
call
pop
inc
jle
pop
in
scas
xlat
(bad)
repz
outs
rcl
push
xchg
hlt
jmp
ins
and
jecxz
stos
dec
cmp
pop
dec
(bad)
push
dec
mov
jg
shl
inc
lea
cdq
add
lahf
cmps
data16
jecxz
jne
xchg
stos
cmp
mov
ret
(bad)
ja
inc
es
sub
imul
cmp
rcl
xor
adc
lods
xor
pop
dec
jno
xor
ss
push
mov
loop
cli
pop
xchg
mov
popf
fwait
dec
out
and
in
fisub
add
xchg
dec
test
mov
mov
retf
ficomp
div
mov
leave
mov
jns
lods
pop
(bad)
and
imul
dec
inc
aad
mov
jecxz
cmp
pop
adc
or
pop
sahf
and
out
retf
int3
jle
shr
jae
pop
push
popa
in
movs
sti
dec
mov
pop
and
cdq
xlat
cmp
inc
cmp
pop
xchg
(bad)
(bad)
add
icebp
ret
in
xchg
mov
stos
lea
ins
jg
jecxz
mov
jnp
retf
sbb
pop
push
xor
fs
mov
mov
cwde
jmp
push
scas
shl
push
mov
(bad)
test
mov
xor
fucom
fdivrp
(bad)
mov
das
(bad)
outs
sub
(bad)
bound
add
jl
nop
adc
xor
adc
cmp
jmp
push
sbb
ins
jns
pop
sbb
mov
ret
std
movs
adc
aad
pushf
inc
push
addr16
inc
inc
mov
retf
rol
jnp
cmp
arpl
xchg
cdq
imul
mov
icebp
sbb
xor
sub
in
in
imul
jle
ret
adc
fwait
retf
pop
adc
ins
mov
cmp
ret
push
inc
or
xchg
mov
or
sbb
imul
jecxz
mov
enter
dec
mov
fisub
add
in
enter
inc
iret
sub
out
mov
out
iret
cmp
push
mov
cli
lock
cs
cmp
xor
mov
pop
mov
mov
aad
and
ds
and
pop
mov
test
push
enter
data16
ret
inc
inc
jmp
shl
loopne
cdq
in
push
cmc
test
fild
not
dec
mov
outs
cdq
jno
mov
xchg
adc
xor
adc
xchg
(bad)
sbb
dec
xchg
cdq
test
shl
inc
xchg
and
pop
rcl
jl
mov
dec
(bad)
test
and
push
loopne
xlat
stos
jmp
dec
sub
mov
sub
mov
dec
and
inc
add
inc
xor
lock
mov
loop
inc
aam
xchg
cmp
dec
jmp
data16
into
repnz
aam
jp
jmp
stos
pushf
push
mov
shl
(bad)
dec
in
arpl
into
ffree
nop
addr16
jo
adc
cli
dec
ins
add
repz
sbb
cmp
js
loope
rcl
shl
jbe
test
inc
xor
push
rcl
jp
test
rcl
loope
jbe
dec
stc
add
leave
push
or
js
es
and
icebp
sbb
jge
push
int3
arpl
mov
and
and
scas
(bad)
cmp
adc
ror
fdiv
fidivr
(bad)
lea
and
gs
or
test
pop
call
sub
cmp
cmps
mov
sub
data16
xchg
mov
jbe
mov
sti
pusha
aam
xchg
jl
aaa
mov
je
call
iret
int3
xchg
push
das
arpl
mov
xchg
inc
iret
cmp
dec
sbb
push
jle
mov
inc
test
repnz
enter
add
or
cmc
dec
in
push
in
retf
jmp
pop
out
or
cdq
mov
cmp
sbb
xchg
dec
xor
(bad)
shl
jp
cmp
dec
push
outs
sub
adc
cmps
jmp
in
or
pop
repnz
stc
jbe
ss
inc
fsub
idiv
add
mov
stos
daa
xor
in
cmp
pop
mov
loop
lods
sbb
xchg
sub
fbld
push
in
add
int
xor
imul
xor
ins
jne
js
popf
sub
jmp
sahf
jns
jno
fsub
jge
or
or
mov
pop
das
mov
lods
arpl
shr
pop
mov
pop
mov
sub
mov
arpl
xchg
mov
mov
cmc
out
scas
mov
(bad)
ror
dec
pop
dec
and
mov
pop
xchg
loope
fldenv
jmp
dec
jo
retf
xor
jge
outs
mov
scas
bound
inc
fwait
adc
out
cdq
dec
cmc
pop
popf
in
dec
pushf
(bad)
mov
jb
arpl
sub
call
lahf
inc
inc
fstp
inc
mov
and
loop
sbb
not
scas
and
ins
clc
loopne
add
mov
lahf
(bad)
into
push
in
(bad)
leave
xor
sti
jp
cmp
adc
test
jns
and
lock
cli
imul
sbb
pop
out
mov
sub
and
cmps
pop
loope
pop
xor
std
pop
xchg
add
ret
pop
lods
mov
and
jns
and
ds
cmp
xor
inc
shr
add
xchg
mov
(bad)
(bad)
xchg
int
and
fisub
mov
mov
fadd
sub
(bad)
stos
lahf
sub
add
add
mov
mov
mov
adc
push
jo
bswap
ret
xchg
jbe
xchg
scas
aad
sbb
dec
xchg
es
out
cmp
lods
scas
sbb
jl
jne
pop
stos
inc
out
pop
ret
fptan
lods
movs
pop
and
jg
add
sub
cmp
loopne
leave
add
add
cmps
dec
xchg
adc
or
lahf
addr16
ja
ret
inc
jb
adc
xchg
sbb
mov
mov
test
sahf
jne
sub
mov
jno
push
xor
jno
loopne
mov
mov
mov
push
fwait
outs
retf
out
and
pop
add
out
mov
inc
sbb
scas
push
mov
imul
xor
sbb
mov
or
dec
dec
adc
cwde
pop
mov
lock
push
in
std
retf
sub
mov
sahf
ret
pusha
xchg
push
out
xor
pop
mov
xor
icebp
stos
fistp
mov
outs
cmp
icebp
popf
and
dec
cmc
xchg
mov
push
(bad)
mov
sbb
imul
push
sbb
js
pusha
(bad)
mov
push
mov
nop
xor
dec
mov
push
(bad)
es
push
fmul
(bad)
xchg
sub
push
xchg
test
(bad)
div
lods
and
sahf
div
repz
cmps
sbb
dec
add
fs
pop
fwait
sahf
push
rol
scas
int3
shl
fisubr
adc
int3
rcr
adc
dec
aas
lds
mov
popf
out
lods
sub
lock
fldenv
ret
dec
dec
nop
ds
or
repz
mov
pop
test
mov
into
xor
shl
icebp
xor
push
push
mov
ficomp
push
(bad)
sbb
call
push
pusha
push
sbb
in
push
or
dec
imul
add
lock
fcom
inc
xor
dec
jg
(bad)
ja
lds
in
mov
shr
push
or
pusha
jb
pop
mov
dec
pop
loop
les
pop
call
mov
mov
out
mov
add
push
scas
pop
jg
(bad)
adc
adc
inc
sahf
mov
push
mov
outs
push
repnz
xor
jne
mov
ins
dec
dec
scas
cmp
add
sbb
daa
push
jle
push
inc
add
inc
mov
(bad)
cmp
fcomp
xor
sahf
pop
or
or
inc
cmps
aas
xor
call
dec
and
ret
scas
add
jg
inc
(bad)
int3
pop
icebp
inc
push
das
adc
gs
addr16
les
sbb
cmps
cmps
and
dec
loopne
or
and
jo
bound
mov
hlt
mov
ins
adc
add
lds
add
mul
mov
(bad)
outs
xor
or
sbb
retf
in
inc
pop
aam
pushf
cmp
stos
and
xor
repnz
xor
es
pop
call
in
sub
mov
add
ror
out
imul
mov
mov
inc
pop
loope
pop
mov
mov
imul
mov
fistp
mov
loop
test
dec
rcl
jne
mov
cmps
cmp
pop
popa
dec
jge
cs
pop
cdq
push
mov
out
lock
out
not
gs
sahf
add
imul
pop
(bad)
out
adc
mov
dec
mov
pop
scas
aam
cli
mov
cdq
mov
add
in
mov
mov
arpl
jo
push
(bad)
out
cmp
xchg
add
jnp
call
jecxz
arpl
(bad)
int
xchg
xchg
mov
aas
cmp
loop
jg
(bad)
inc
popa
push
or
push
jle
pop
sbb
sub
cmp
mov
js
xor
scas
sbb
stc
mov
or
lock
mov
out
test
in
push
sbb
ins
addr16
cmp
fwait
int3
repz
repz
(bad)
popf
sbb
mov
test
dec
pusha
rcr
or
pusha
or
xchg
int3
push
retf
xor
push
or
dec
data16
xchg
les
jecxz
ror
sub
sub
cmp
dec
std
sub
or
shl
movs
sub
hlt
cmp
retf
adc
jmp
inc
cmp
and
adc
or
add
or
cmp
jmp
cmp
popa
xlat
xchg
out
push
dec
(bad)
mov
mov
ret
jg
div
jmp
sub
jecxz
nop
je
aam
into
pop
call
rol
xchg
jp
adc
pop
dec
or
inc
jle
sub
jns
add
jmp
mov
mov
xor
xchg
add
push
aaa
ins
push
xchg
mov
mov
test
push
jnp
int3
push
mov
cmp
or
fstp
out
add
(bad)
xchg
mov
sub
(bad)
sub
ins
inc
mov
mov
mov
or
and
fidiv
jecxz
pushf
mov
stos
popa
sbb
inc
sbb
dec
jl
xor
lods
psrad
mov
mov
dec
pop
xchg
or
les
mov
push
cld
das
pop
scas
mov
fild
addr16
dec
push
(bad)
lods
xchg
xor
xor
mov
addr16
into
iret
into
aas
lods
retf
or
add
je
das
mov
jns
add
lock
and
jnp
pop
daa
mov
fs
xor
cwde
jmp
je
push
push
lods
add
cdq
push
sbb
adc
loop
js
xlat
les
pop
xlat
or
dec
data16
xchg
xchg
mov
call
mov
jmp
or
rcl
je
aam
mov
push
cwde
out
cmp
adc
sub
pop
mov
stos
fs
push
fiadd
lea
fidivr
dec
cmps
mov
mov
add
xchg
(bad)
jl
jmp
scas
(bad)
mov
pop
stc
hlt
repnz
fist
addr16
mov
test
pop
gs
mov
out
cld
je
cmp
pushf
out
push
xchg
test
inc
adc
popf
sbb
jo
stos
scas
div
jecxz
jle
(bad)
lea
inc
in
in
mov
mov
aaa
and
mov
add
(bad)
bound
iret
shr
push
inc
cmp
inc
mov
fld
and
(bad)
sbb
and
sub
mov
enter
stos
adc
xchg
jnp
mov
jns
aam
jecxz
fcomip
fadd
add
jb
loopne
jns
jns
xor
mov
cmp
nop
std
std
mov
jle
jnp
adc
sbb
dec
inc
nop
stos
ja
adc
in
and
mov
mov
pop
and
inc
jns
xlat
test
add
test
mov
inc
mov
jb
mov
xchg
push
sbb
sub
xor
add
xlat
push
sar
dec
bound
rcl
jl
xor
js
jns
pop
lods
push
inc
sbb
adc
or
cmp
push
fsin
jecxz
aad
or
cwde
pop
rol
xor
adc
(bad)
rcr
aaa
pusha
add
pop
shl
and
cmp
pop
rcr
enter
cmp
mov
push
sbb
jo
push
xchg
jnp
fmul
outs
lea
fsub
mov
movs
push
(bad)
test
fidiv
pop
adc
out
je
push
and
fnstcw
and
movs
inc
std
ja
add
fbld
ja
rcr
rcr
pop
sub
mov
inc
mov
outs
test
repz
dec
adc
mov
push
mov
retf
adc
mov
push
rcr
mov
pop
lea
sbb
cmp
pop
jbe
mov
xchg
loop
mov
pop
or
or
sub
movs
(bad)
push
adc
pop
lock
dec
and
mov
test
loopne
lahf
xlat
sub
adc
jmp
pop
aam
dec
out
(bad)
arpl
cmp
cmp
jns
cmp
test
jae
or
xor
shr
das
stos
test
sbb
(bad)
mov
repz
pop
ds
sbb
xchg
mov
out
bound
rol
mov
scas
icebp
test
pushf
push
retf
push
sbb
(bad)
push
enter
xchg
xlat
xchg
mov
mov
xchg
and
xor
xchg
out
leave
jns
(bad)
clc
inc
scas
repnz
dec
pop
dec
test
xor
dec
push
(bad)
sahf
dec
cmp
leave
lahf
cmps
push
test
sub
test
xor
in
inc
cmp
rol
out
dec
and
fistp
sub
sbb
xchg
mov
pop
pop
pop
or
inc
xlat
jl
mov
lahf
or
mov
push
enter
inc
test
jmp
setge
inc
iretw
inc
pop
dec
sub
lea
pop
mov
out
adc
call
push
shr
aad
into
stos
in
int3
xor
in
xor
jne
lock
inc
xor
pop
test
dec
add
push
iret
dec
add
in
clc
dec
loopne
xor
adc
xor
in
mov
xchg
int
cld
fs
mov
fldcw
out
pushf
dec
iret
loopne
int3
imul
hlt
out
out
lock
ret
mov
push
inc
xchg
mov
(bad)
mov
adc
or
scas
rcr
ins
adc
cmp
pop
sar
aas
and
bound
pop
jp
inc
lock
push
cdq
pop
pop
movs
enter
xchg
jae
ja
rcr
mov
jle
or
sub
gs
daa
nop
add
cmp
lds
fbld
mov
sub
(bad)
or
jne
add
dec
jle
test
stos
and
out
retf
add
popf
int
sub
adc
pop
mov
rol
mov
jno
sbb
mov
sbb
adc
mov
sbb
aad
mov
bound
es
cmc
inc
lods
ret
or
xchg
loope
fstp
push
mov
push
call
pop
shr
jmp
bound
xrelease
lock
call
mov
std
push
repz
cmc
jp
xor
ins
icebp
lds
dec
mov
daa
dec
movs
xor
adc
in
loope
mov
inc
mov
and
das
add
xchg
inc
mov
mov
push
adc
imul
xlat
aam
add
push
fidivr
dec
pop
adc
mov
(bad)
in
push
repz
mov
add
stos
rcl
jmp
(bad)
cmp
push
lahf
icebp
push
jno
push
and
div
fild
test
pop
xor
movs
jbe
pop
adc
cmp
mov
pop
push
jbe
aad
xchg
xchg
vpunpcklqdq
ds
adc
mov
lods
addr16
loopne
fidivr
lea
pop
add
(bad)
jne
add
add
dec
jb
sbb
popa
dec
retf
scas
pusha
pop
test
fldenv
mov
jge
mov
lods
push
mov
dec
fcmovne
sub
out
stc
cmps
int3
dec
loope
and
sbb
arpl
sub
mov
or
loope
addr16
push
xchg
mov
fcomp
shr
sar
push
(bad)
adc
mov
jno
push
adc
imul
xor
(bad)
and
cmp
mov
ffree
mov
cmp
sbb
or
add
and
jmp
outs
inc
inc
cdq
fst
ja
outs
push
(bad)
jge
popa
sub
push
pusha
loop
push
das
xchg
cld
sbb
stc
fild
call
cli
mov
xchg
mov
outs
mov
stos
and
clc
dec
cmps
(bad)
ret
data16
xor
aam
inc
push
jno
in
add
ret
dec
or
jge
lods
jecxz
(bad)
sbb
cli
mov
repnz
push
ins
pop
xor
xchg
lea
dec
adc
jecxz
mov
outs
call
or
xor
pop
mov
add
cmp
sub
xor
xor
fst
xor
sub
adc
scas
and
in
(bad)
ja
sti
sub
or
xchg
icebp
xor
out
pop
adc
idiv
cmp
les
test
xor
rcr
mov
push
push
xor
je
mov
pop
(bad)
and
mov
test
leave
js
and
imul
rcl
adc
rol
(bad)
test
push
ret
mov
in
cmps
mov
scas
jecxz
jge
and
dec
shr
and
outs
fwait
push
jl
jg
ss
push
add
push
dec
fidivr
push
jnp
pop
mov
inc
push
and
fst
test
cmc
cld
push
push
inc
call
scas
push
pop
mov
mov
xchg
jns
std
movs
cmps
imul
ss
mov
mov
icebp
fild
enter
nop
mov
ins
or
xchg
jle
xor
(bad)
mov
cmp
push
mov
int
sbb
fadd
cs
pop
gs
fwait
outs
fcomip
and
push
fs
lds
sar
sub
les
sti
mov
mov
or
add
ja
sbb
or
xor
popa
xor
ss
jno
icebp
mov
mov
out
dec
ins
xchg
cdq
mov
xchg
and
and
stos
cmp
dec
scas
adc
fucomip
push
mov
mov
inc
mov
sbb
lods
push
fistp
add
jg
mov
xor
lea
fstp
popa
mov
iret
out
out
jns
jge
mov
int3
fwait
mov
sub
stos
xor
add
mov
icebp
xor
cmp
mov
mov
push
pop
xor
js
jmp
mov
ins
popf
test
loop
fist
into
and
bound
or
inc
or
(bad)
sbb
rol
push
mov
rcl
and
pop
addr16
mov
(bad)
or
stc
rcr
adc
cmps
mov
sar
cmp
test
je
dec
iret
and
(bad)
jmp
cli
adc
adc
xor
iret
mov
sar
pop
sbb
cmp
mov
in
cmp
dec
into
mov
div
mov
push
aaa
fld
and
mov
sbb
test
mov
stos
(bad)
cmp
jb
push
jns
movs
loop
clc
loopne
(bad)
adc
dec
pop
sbb
rcr
and
or
cmps
je
daa
adc
sub
fisttp
dec
fdivr
dec
pop
ins
test
add
xchg
loope
fs
lea
(bad)
mov
add
lea
sti
jl
xor
add
or
push
push
dec
jbe
call
daa
and
jl
in
cmp
and
pop
sbb
popf
cmp
xchg
aaa
pop
aaa
int3
lods
and
movs
sti
xchg
test
mov
mov
sahf
cmc
mov
xlat
outs
inc
inc
dec
push
jmp
dec
pop
mov
or
jl
push
push
jne
pop
pop
pop
jmp
test
dec
jbe
es
xor
mov
and
test
mov
ins
jge
xchg
sub
shr
(bad)
movs
fsubr
enter
imul
cld
xchg
push
and
es
test
in
mov
or
jmp
xchg
add
ret
popf
out
mov
xor
xchg
and
sbb
sbb
sub
shr
push
movs
mov
ret
mov
(bad)
cs
xchg
sub
jl
scas
ins
mov
pop
sub
inc
lahf
stc
lahf
cwde
fsubr
jno
outs
movs
adc
leave
jae
imul
icebp
(bad)
rol
pop
jmp
sub
cdq
imul
gs
xor
and
outs
popa
jne
jb
je
pop
or
scas
out
mov
dec
xor
mov
imul
sub
cvttps2pi
ss
mov
out
loope
jmp
rcl
fistp
mov
sub
add
sub
sub
int3
pop
fld
mov
push
add
add
scas
inc
fmul
fld
inc
cmps
lods
es
test
imul
push
cli
mov
inc
and
cmp
mov
mov
pushf
test
push
div
mov
cwde
aaa
aam
push
push
jo
pusha
add
dec
das
mov
and
ins
call
ss
fcmovbe
add
ins
adc
push
(bad)
jmp
aam
jge
or
xchg
icebp
aad
stos
lock
cwde
dec
fldenv
pop
fild
scas
mov
test
repnz
cmps
mov
mov
cmp
or
daa
mov
icebp
inc
add
call
call
(bad)
dec
pop
cmps
mov
xchg
jp
xchg
adc
add
outs
xchg
into
mov
sbb
xor
bound
in
xchg
hlt
ret
movs
jns
bound
movs
push
sub
fwait
ret
mov
add
fadd
jmp
add
pop
scas
add
scas
sub
xor
imul
lods
fs
or
sub
sbb
push
shl
xchg
sbb
pop
sbb
in
cwde
stos
jmp
out
enter
movs
mov
cwde
comiss
dec
ins
ffreep
xchg
or
fs
test
bnd
mov
jnp
mov
loopne
aas
jl
pop
and
and
adc
xor
mov
dec
add
sbb
mov
daa
xor
mov
push
mov
xlat
xchg
inc
stos
adc
cmp
or
adc
cdq
nop
sbb
js
fmul
stos
iret
mov
sbb
pop
jnp
adc
or
push
pop
add
and
cmp
sbb
mov
ficomp
mov
cmp
stos
ds
pop
stos
mov
das
ins
cdq
in
add
pop
adc
adc
xchg
mov
not
sub
lods
ret
sbb
shl
cdq
je
pop
mov
or
dec
mov
add
jge
cwde
leave
mov
loope
retf
call
mov
pop
or
fild
push
sub
(bad)
(bad)
shl
jle
jge
cmps
or
jmp
jno
add
add
adc
inc
(bad)
dec
push
jmp
ja
jmp
jae
xor
cdq
dec
mov
hlt
fisttp
pop
push
cmp
jno
jae
mov
xchg
adc
inc
jbe
push
lods
xor
mov
adc
jmp
movs
jp
xor
std
dec
dec
rcl
call
inc
or
dec
mov
and
repz
cmp
jmp
repnz
(bad)
call
mov
add
xchg
ds
add
adc
or
xor
pop
inc
adc
lods
aam
imul
call
cmp
cmp
jnp
enter
fdivp
retf
in
cmps
sbb
xchg
adc
xchg
data16
push
cld
push
(bad)
in
sbb
mov
inc
xor
neg
cld
add
test
dec
xchg
or
out
test
jmp
add
retf
test
fs
jecxz
stc
and
cmp
sbb
add
int
mov
mov
ins
stc
dec
sub
ja
pop
pusha
jb
inc
ror
mov
movs
adc
sub
in
retf
push
jno
movs
pop
mov
call
mov
test
fnsave
stc
adc
call
xchg
add
test
or
imul
wbinvd
popa
jbe
push
push
repz
push
add
sbb
sub
mov
pop
(bad)
in
movs
fist
(bad)
cmp
adc
pop
iret
sar
js
sbb
mov
lods
sub
add
jmp
scas
sbb
ficomp
sbb
mov
mov
(bad)
adc
enter
shl
and
in
fs
mov
dec
jge
adc
and
jb
cwde
jo
sbb
cdq
add
shl
clc
rcr
fsincos
je
sub
adc
push
cmp
or
ja
pop
das
cmps
jo
pop
or
sbb
out
cmp
clc
ror
hlt
data16
xor
xchg
push
bound
fidivr
add
jo
xchg
in
inc
fisub
and
mov
pop
das
or
pop
jge
jae
sub
stc
jae
fiadd
icebp
test
scas
call
fstp
adc
(bad)
cs
adc
call
(bad)
pop
bound
or
fcmove
out
outs
daa
mov
sbb
test
ficomp
enter
inc
lods
dec
lds
(bad)
adc
test
push
dec
in
les
mov
mov
xor
pop
aas
(bad)
mov
scas
dec
aaa
ins
scas
fdiv
jb
jne
or
jnp
std
jmp
sar
in
shl
js
or
dec
sub
test
pop
mov
add
stc
add
ror
jae
int3
cmp
jnp
push
inc
push
add
dec
test
dec
enter
mov
push
cwde
ins
sbb
adc
pop
imul
(bad)
push
inc
rcr
jns
aad
addr16
paddw
jnp
or
dec
and
mov
js
mov
sub
out
lock
ja
or
cmp
and
sbb
sbb
add
mov
scas
and
mov
or
push
jl
dec
es
pop
push
or
xor
out
das
(bad)
int3
lods
or
fdivr
scas
loope
sub
cwde
mov
adc
call
xchg
xchg
and
fs
inc
xchg
pop
sbb
mov
(bad)
jg
mov
push
push
xor
jecxz
inc
adc
hlt
nop
jmp
mov
adc
lods
jg
repnz
xor
out
fld
test
adc
dec
lds
movs
(bad)
repz
xor
and
mov
in
push
stos
inc
or
adc
xchg
sub
inc
loope
jnp
sbb
(bad)
loopne
and
push
repz
xchg
xor
dec
push
push
ins
js
dec
jmp
mov
sub
sahf
jbe
inc
shr
mov
adc
in
sbb
and
jle
pop
test
lea
mov
add
pusha
or
sbb
sti
cmp
jp
popf
cmps
mov
or
sahf
clc
xor
lods
loope
inc
test
movs
int3
fwait
jo
dec
inc
and
xchg
mov
dec
jno
sti
adc
and
out
out
imul
rsqrtps
repz
push
retf
(bad)
mov
and
cwde
test
(bad)
out
cdq
(bad)
and
sbb
cli
scas
outs
mov
sub
xchg
push
ds
clc
std
inc
jl
push
inc
ins
out
fxch
xchg
(bad)
mov
aad
outs
mov
mov
shr
push
mov
mov
xchg
lods
jo
outs
(bad)
out
aad
mov
inc
dec
lea
or
or
inc
fdiv
push
outs
enter
dec
cmp
xchg
out
dec
push
and
cmp
daa
pop
push
or
push
aam
xor
xor
lock
fcomp
std
das
lds
inc
inc
fisubr
sub
jne
mov
ds
(bad)
sub
pop
jbe
or
into
xor
rol
pop
jge
fisttp
int3
stc
dec
sub
pop
mov
add
aad
out
(bad)
inc
mov
retf
addr16
int3
inc
jno
arpl
pop
adc
imul
jo
leave
in
jge
sbb
xor
xor
sub
mov
xor
and
ret
test
clc
(bad)
rol
mov
std
and
cmp
mov
icebp
fwait
jns
inc
xchg
ret
ss
gs
sahf
imul
jle
adc
out
push
push
mov
inc
dec
(bad)
aad
mov
and
mov
sub
inc
lea
push
pop
dec
push
arpl
push
jnp
aad
jns
push
mov
iret
scas
imul
mov
inc
push
xor
(bad)
xor
cmps
stc
mov
bound
mov
inc
aaa
int3
xchg
xchg
sbb
scas
arpl
cmp
jmp
xchg
cmp
push
xchg
push
push
not
mov
dec
sbb
inc
sbb
int
adc
push
pop
icebp
std
push
mov
(bad)
mov
mov
test
cmp
jg
in
aaa
enter
data16
cs
push
ins
and
cdq
mov
sbb
mov
inc
add
dec
push
and
inc
mov
and
icebp
mov
scas
mov
lods
add
dec
inc
hlt
push
popa
outs
push
mov
fwait
mov
daa
push
cld
add
push
cmp
xchg
lock
out
psubsb
cmps
(bad)
cwde
cmp
add
sahf
shr
sub
jbe
dec
mov
jmp
(bad)
(bad)
test
pop
or
arpl
ja
mov
xchg
jg
add
dec
or
mov
push
in
xchg
lea
jb
mov
inc
ins
cmp
push
jmp
gs
xchg
jbe
xchg
cmc
lods
fldcw
dec
sub
sahf
push
(bad)
out
and
dec
and
sub
sahf
inc
popa
add
sub
adc
mov
xchg
pop
inc
and
loop
mov
adc
xchg
lahf
xor
push
in
or
imul
dec
fldcw
jb
mov
jmp
in
fwait
adc
pop
scas
int
sub
call
out
push
pusha
or
push
cmps
pop
push
scas
mov
mov
and
lea
mov
in
add
sbb
rcl
or
mov
dec
mov
cmc
mov
sub
test
outs
mov
aas
jmp
hlt
aad
pop
mov
add
aas
adc
js
dec
div
mov
retf
lock
sub
jmp
scas
rol
loopne
jae
mov
or
ins
lods
or
jle
lds
aad
xchg
mov
add
jb
ret
jae
or
gs
iret
sbb
mul
call
lds
cmp
frstor
jne
fcomp
inc
test
and
lahf
int
xor
cmps
xor
or
add
adc
pusha
mov
gs
movs
pop
shl
push
popf
das
inc
push
sbb
add
dec
int
mov
adc
jns
scas
xchg
ror
gs
sub
cmp
aas
sbb
or
push
mov
mov
mov
adc
imul
xor
cld
sub
rcl
push
lods
(bad)
in
enter
lods
add
sub
fadd
mov
(bad)
lods
add
ins
jle
cmp
add
sbb
mov
lds
dec
push
repnz
xchg
push
pusha
leave
call
and
mov
pusha
cmc
daa
rol
mov
or
jge
or
pop
or
cmc
call
adc
sti
mov
enter
xchg
or
test
jnp
push
fisub
and
xchg
mov
or
inc
gs
jns
or
cmp
(bad)
rcl
(bad)
stos
(bad)
dec
cmp
stos
and
scas
xchg
into
(bad)
mov
dec
mov
hlt
add
cmp
add
dec
mov
cli
movs
cmp
add
jle
mov
add
rcr
call
test
or
rcl
jle
xor
pop
pop
xchg
mov
mov
pop
pop
loope
adc
fdiv
out
outs
jmp
shl
push
fistp
mov
imul
ror
(bad)
fldcw
daa
outs
sbb
or
leave
ins
test
jo
or
sub
xchg
out
inc
in
push
mov
sub
jnp
push
lods
adc
mov
sbb
inc
jmp
inc
inc
(bad)
adc
(bad)
in
fistp
iret
mov
enter
sti
sbb
mov
jns
mov
xlat
adc
jns
jbe
adc
aaa
or
enter
pusha
js
jb
cmps
and
int
clc
inc
fcomp
xchg
clc
test
adc
(bad)
cmc
cld
rcr
adc
mov
pusha
loop
mov
and
nop
mov
dec
dec
mov
xchg
or
mov
cdq
lock
push
push
and
addr16
popf
addr16
add
es
cmps
push
std
addr16
cli
jo
dec
cmc
and
dec
test
lds
add
rol
cmp
mov
xchg
fs
dec
out
out
fdivr
mov
mov
lods
cld
xchg
mov
mov
inc
jle
(bad)
mov
inc
sbb
jne
(bad)
aas
mov
(bad)
shl
arpl
mov
scas
mov
jecxz
ret
xchg
add
pusha
pushf
push
in
xchg
(bad)
cs
mov
cmp
icebp
repnz
push
push
iret
inc
std
pop
stos
stos
mov
(bad)
push
test
jno
scas
ret
shr
mov
fisubr
bound
xor
xor
cmc
pop
fidivr
loope
test
or
sbb
cmps
mov
and
add
mov
shl
xchg
push
aaa
fadd
push
ficomp
imul
and
mov
stos
ins
mov
(bad)
stos
inc
pop
mov
xchg
jle
loopne
cwde
cmc
in
and
shl
sahf
imul
mov
sub
ins
lods
add
cdq
js
jns
ret
adc
push
scas
dec
xchg
icebp
cmp
add
mov
mov
add
mov
shl
jae
ja
fsubr
daa
adc
dec
and
(bad)
out
lods
(bad)
pop
mov
jge
pop
xchg
jp
xchg
movs
out
(bad)
cld
add
fs
aaa
cld
sub
(bad)
mov
jae
rcr
loopne
cli
cmc
ficom
xor
jbe
stc
cmps
mov
hlt
mov
push
sbb
push
lods
fild
lds
and
pusha
stos
retf
xchg
clc
mov
pop
fwait
adc
cmps
dec
in
jne
fsubr
push
loop
cmp
aas
repz
mov
ss
or
mov
lahf
ja
daa
faddp
fwait
adc
jl
xchg
lds
data16
mov
(bad)
pop
dec
pop
inc
jmp
adc
fcomp
outs
cmps
jmp
sbb
sahf
in
mov
or
(bad)
dec
jmp
jl
outs
mov
inc
popf
loop
inc
or
inc
dec
icebp
jnp
inc
pop
sbb
mov
and
xchg
sbb
aaa
mov
and
cmp
adc
dec
aas
mov
scas
call
scas
pop
sbb
push
(bad)
jge
mov
into
test
rcr
loop
mov
sub
sub
inc
movs
pop
shl
mov
mov
jmp
(bad)
inc
inc
lds
aas
add
fstp
sti
repnz
push
les
pop
mov
xchg
inc
aad
mov
and
dec
or
jg
jmp
jecxz
add
enter
sbb
inc
repnz
pusha
push
push
jae
xor
into
test
mov
or
sub
cli
es
arpl
icebp
xor
fnstsw
in
xor
fiadd
fs
(bad)
adc
ret
push
stc
pop
pop
out
add
push
test
gs
mov
ins
mov
or
inc
gs
xor
mov
adc
(bad)
sub
mov
push
cwde
sar
fadd
mov
out
lahf
pusha
xor
in
data16
mov
adc
daa
push
cmps
mov
fadd
in
and
out
shr
(bad)
sub
aam
ret
in
cdq
inc
push
test
nop
mov
mov
mov
push
fwait
rcl
or
mov
mov
pcmpeqd
sub
sub
int3
inc
test
mov
inc
dec
inc
ror
(bad)
mov
xor
inc
jmp
dec
fcomp
pop
(bad)
sahf
and
cs
fcomp
pushf
add
pop
psllw
ins
test
ret
sar
add
sbb
shl
mov
inc
inc
pop
and
mov
pop
jno
sbb
pop
in
xor
xlat
sahf
stos
inc
lar
dec
cmp
aaa
mov
movs
xor
loopne
int3
jp
popf
mov
or
and
int
rcl
xor
mov
sub
bswap
outs
xchg
int3
fisub
loop
mov
lock
cld
jp
ins
cmp
ret
cli
sti
inc
outs
inc
push
ja
in
mov
adc
test
(bad)
movs
inc
xchg
mov
and
pop
add
or
scas
daa
idiv
jbe
mov
push
neg
push
mov
fchs
pop
pop
jo
xlat
gs
mov
scas
mov
dec
hlt
xchg
add
cmps
push
ins
or
cli
jecxz
dec
mov
mov
inc
movs
cmp
or
lahf
js
sbb
sub
xchg
out
aas
push
pop
loopne
call
rol
test
mov
xor
xor
push
outs
mov
mov
xchg
push
or
mov
mov
lock
call
cmp
shl
mov
(bad)
(bad)
and
retf
cmp
mov
push
out
jae
mov
jo
jg
retf
add
mov
imul
mov
push
adc
in
mov
add
or
push
aam
mov
inc
scas
fst
fstp
dec
jp
mov
jno
iret
mov
cdq
pushf
imul
ins
(bad)
fbld
or
sar
jle
adc
push
nop
pusha
stc
adc
out
xchg
aad
rol
shl
jae
mov
(bad)
out
aad
mov
and
add
jl
fsub
inc
mov
sbb
es
sbb
add
jg
imul
add
rcl
add
(bad)
enter
lods
jle
push
ret
mov
sbb
aam
xchg
icebp
test
pop
shl
jmp
stos
pop
sbb
xlat
push
mov
xchg
adc
sub
add
mov
inc
mov
mov
sbb
(bad)
icebp
dec
(bad)
mov
xchg
xor
inc
cmp
xchg
push
xchg
jns
pop
inc
les
inc
xchg
mov
push
dec
jne
add
add
add
dec
mov
xabort
in
addr16
shl
mov
pusha
mov
and
iret
loope
cmp
imul
iret
sbb
pop
dec
in
pushf
leave
jg
mov
in
push
pop
cmp
cmps
xor
fcmovnu
test
fldenv
test
mov
cld
pop
and
mov
into
xor
xchg
add
cli
jmp
retf
cmc
sbb
les
inc
cmc
out
pop
es
addr16
sbb
adc
jmp
cs
jge
(bad)
xchg
push
mov
push
push
dec
hlt
cmp
push
mov
sub
xor
cdq
fadd
pusha
pop
loopne
and
mov
cmp
adc
pop
call
bound
je
dec
loop
xor
ins
push
dec
sbb
pop
jmp
imul
mov
lods
js
test
movd
push
xor
loop
cmp
and
out
movs
push
mov
inc
cmp
mov
mov
ss
mov
adc
pop
mov
les
lea
shl
nop
mov
cmp
ret
push
fcomip
and
retf
adc
popa
(bad)
sar
jne
mov
jle
and
mov
or
push
jge
push
cmps
aad
cmp
sub
popf
mov
cli
adc
xor
enter
adc
sub
sub
or
call
jns
add
(bad)
rcr
sbb
cs
popf
dec
cld
popa
sub
std
cmp
hlt
mov
(bad)
retf
movs
dec
mov
and
dec
sub
imul
je
and
and
xchg
jg
inc
pop
movs
pop
fisub
cdq
clc
je
js
jp
mov
data16
jge
mov
cli
fadd
stos
loopne
xchg
sub
sbb
mov
inc
fcmovnb
push
sahf
cmp
sbb
mov
pop
repnz
mov
mov
(bad)
cwde
inc
imul
jno
add
xchg
outs
rcl
and
div
xchg
int
pop
mov
jge
mov
cdq
lods
inc
sbb
ret
mov
dec
sbb
out
outs
push
stc
mov
call
mov
movs
mov
stos
sar
ins
frstor
test
aas
cmp
pop
shr
jo
cmp
add
sub
pop
mov
xchg
sbb
retf
ins
xchg
lods
inc
mov
push
mov
add
pop
out
jb
ss
xor
mov
out
xchg
sbb
sub
fld
shl
shr
in
(bad)
es
push
xor
jne
mov
xor
arpl
test
inc
dec
jb
jle
std
aad
(bad)
push
pop
scas
jns
mov
mov
sahf
shr
jnp
xor
aaa
cmc
add
mov
jbe
dec
jle
or
xor
scas
inc
push
cmp
bnd
gs
loope
pop
sbb
or
movs
push
xchg
stc
scas
and
add
ss
lds
sbb
mov
jg
mov
inc
sub
push
in
or
stc
xor
cmps
push
daa
ret
lods
fsubr
xchg
aad
mov
jno
call
sbb
jnp
out
cmps
mov
or
add
or
mov
mov
jl
or
cmp
mov
ss
xor
push
movs
movs
pop
mov
push
adc
into
mov
mov
nop
aas
add
dec
out
icebp
movs
(bad)
or
push
(bad)
cli
mov
daa
rol
pop
add
dec
and
(bad)
cmp
fisub
cmp
cmp
inc
dec
lea
idiv
lea
sub
pusha
es
int3
mov
xchg
jge
mov
cmc
out
mul
inc
sahf
mul
pop
(bad)
in
dec
xor
lods
and
aam
test
(bad)
aas
jle
call
mov
cmp
daa
test
xchg
pop
xor
shr
jge
sbb
cmps
cmovae
or
pop
retf
xor
ja
mov
sbb
mov
or
jmp
mov
push
push
pop
mov
call
out
out
sub
and
jno
repz
mov
aad
rol
mov
push
or
outs
mov
sbb
cmp
ds
test
clc
mov
dec
shl
mov
loopne
xor
cmps
xchg
(bad)
mov
stos
dec
pop
xchg
lds
and
pusha
scas
and
jg
repz
ins
es
clc
fbstp
cmp
(bad)
sbb
and
inc
add
stos
push
je
pop
aaa
ffree
cmp
sti
push
imul
mov
out
jp
sub
push
mov
into
mov
sub
fcomi
cmp
dec
mov
jl
mov
jl
ffree
jbe
das
push
lock
ins
addr16
adc
lods
add
aas
jmp
xchg
and
add
ror
sbb
dec
sub
or
sbb
int3
rol
lea
ds
or
push
and
lahf
xor
es
xchg
mov
sub
dec
arpl
and
pop
mov
outs
push
cs
cld
mov
push
cwde
push
jmp
shl
and
nop
int3
mov
stos
pop
pop
pushf
mov
lahf
int3
data16
add
dec
icebp
out
pop
dec
sub
and
mov
cmp
push
xlat
arpl
jmp
ins
dec
mov
int3
lods
pop
add
xlat
xor
mov
rcr
cmps
cld
lea
imul
xchg
pop
ret
mov
push
mov
jle
sahf
int3
(bad)
and
push
cmp
mov
out
mov
pop
and
push
mov
jecxz
pop
test
push
pusha
mov
jb
rcl
outs
les
fmulp
jbe
inc
sar
dec
fisub
repnz
sbb
adc
pop
in
test
push
mov
add
call
and
aas
mov
enter
cwde
mov
lea
add
scas
mov
pop
sbb
fist
movs
add
sub
and
out
jmp
jecxz
into
mov
mov
leave
shl
mov
mov
pop
into
cmp
movs
movs
in
outs
(bad)
sbb
pop
fisubr
retf
mov
or
mov
(bad)
jb
add
mov
sbb
lea
push
mov
sub
pop
adc
jmp
in
xchg
scas
pop
dec
xchg
lea
aad
js
mov
icebp
sbb
outs
leave
mov
pop
adc
pusha
cli
or
cmp
add
mov
add
dec
iret
xchg
push
sti
aaa
xchg
fnsave
jmp
rcl
test
icebp
es
pop
jge
popf
(bad)
sbb
cmps
pop
cmps
and
fnstcw
push
arpl
mov
out
(bad)
shl
mov
cmps
xchg
neg
or
lods
loope
jl
dec
bound
int3
popf
pop
cs
inc
clc
js
ret
gs
aam
push
das
and
daa
sbb
(bad)
cmp
das
rcr
movs
ud1
inc
cmp
sub
push
fdivr
jge
dec
cmp
outs
xchg
scas
pop
sub
push
cmp
cmp
test
mov
pop
in
mov
popa
cwde
or
mov
xor
stos
cmp
jo
jle
out
push
fs
lea
(bad)
mov
or
jnp
jg
in
jns
mov
adc
xchg
sub
ja
pop
(bad)
mov
add
fcomp
pop
mov
int3
pop
out
outs
out
test
cli
mov
pop
jns
push
stc
pop
add
add
inc
aaa
push
lock
mov
(bad)
es
movs
dec
jp
enter
enter
dec
adc
imul
jo
cmp
scas
ds
dec
dec
cmp
and
repnz
jmp
sbb
inc
sub
cmps
inc
mov
out
gs
bound
jmp
dec
ja
in
mov
stc
mov
ret
adc
out
retf
jle
cmp
cli
xchg
pop
push
mov
dec
rcl
aam
scas
icebp
xchg
adc
and
pop
int
jae
mov
fs
std
xchg
and
and
arpl
ins
retf
adc
dec
mov
ja
or
or
xchg
add
mov
mov
sub
pop
xlat
cmp
pop
bound
add
fwait
fwait
and
cmp
js
add
cld
pop
push
cmp
mov
aaa
sub
ins
ja
test
stos
cld
sar
add
jbe
ret
retf
jmp
add
fs
mov
and
sbb
adc
jmp
into
je
sub
js
dec
jnp
(bad)
inc
jecxz
pop
or
jno
push
in
nop
les
sbb
pop
out
outs
mov
(bad)
cld
dec
mov
jle
xchg
pop
repnz
inc
mov
stos
data16
ret
scas
sbb
aam
dec
daa
out
pop
fisttp
or
fstp
out
jo
ins
or
dec
cli
scas
out
cmp
sub
stc
pop
fadd
and
lds
mov
jno
push
push
or
lock
sti
and
ret
shl
js
call
push
add
lods
and
xadd
(bad)
pop
inc
repnz
(bad)
cld
imul
test
pop
cmp
dec
adc
xor
xchg
push
pop
push
clc
fwait
jns
inc
cwde
loop
mov
int3
jmp
sub
and
sbb
(bad)
and
aam
dec
jmp
inc
xchg
or
add
jbe
xchg
pop
xchg
jb
enter
test
and
push
inc
sbb
js
or
ret
push
and
popa
mov
and
pop
add
lds
sub
push
dec
inc
and
dec
xor
cdq
mov
sbb
mov
inc
outs
out
add
int3
mov
push
stos
lahf
mov
sbb
mov
arpl
mov
inc
lahf
xor
out
xchg
sbb
stos
adc
or
repz
inc
dec
pop
iret
shl
push
scas
dec
and
std
cld
sahf
xchg
xchg
mov
fwait
sub
out
push
mov
cmp
dec
fcom
in
sub
push
cmp
pop
dec
mov
std
popa
stc
mov
scas
xor
jbe
push
cmc
inc
imul
test
jmp
jle
push
mov
icebp
pusha
aam
outs
dec
sub
mov
pop
mov
arpl
pop
push
sbb
outs
ret
sbb
sub
ja
dec
retf
addr16
sub
aaa
mov
(bad)
js
mov
jp
xchg
enter
stc
cmp
inc
(bad)
dec
sbb
pop
lods
lods
push
imul
xchg
sahf
(bad)
into
dec
ja
or
cld
dec
sbb
cmp
and
imul
sub
and
adc
pusha
test
jl
push
retf
fucomp
add
add
fs
cwde
mov
add
jne
cli
push
outs
xchg
add
push
or
inc
adc
fwait
push
adc
xchg
mov
(bad)
jl
or
xor
cmp
nop
and
jp
out
dec
push
movs
push
push
mov
and
cli
jo
cmp
and
mov
mov
xor
and
sbb
push
xchg
xchg
or
mov
in
push
fnstenv
add
int3
mov
test
add
dec
pusha
jb
jno
ucomiss
mov
mov
(bad)
out
inc
cmc
adc
and
jo
xchg
icebp
cmp
scas
sub
jmp
cmp
aas
test
mov
xor
shl
aaa
mov
sahf
test
mov
xor
pop
jl
sub
add
sbb
retf
bound
lea
add
pop
movs
in
repz
pop
pushf
mov
mov
fadd
into
arpl
pop
xor
mov
fadd
daa
or
call
mov
inc
jb
ret
mov
jp
mov
out
sbb
add
mov
aas
cli
xor
ins
mov
mov
xchg
sub
std
cmps
arpl
mov
xlat
cwde
sub
add
fsub
mov
jno
or
xor
loope
in
jecxz
dec
jl
push
out
stos
loop
and
je
mov
gs
shl
sbb
xchg
mov
pop
add
add
jmp
xchg
mov
hlt
mov
mov
jmp
sub
fcomp
jle
stos
push
push
xor
add
sbb
push
enter
cli
inc
rcl
xchg
adc
in
adc
movs
cwde
inc
addr16
ins
mov
aas
movs
mov
stc
sbb
sub
imul
fucompp
movs
jmp
cmp
mov
or
lahf
jno
jo
add
vsqrtps
das
xchg
sub
mov
call
mov
and
iret
test
or
outs
add
fild
sub
jae
xchg
pop
enter
stos
dec
pop
cmp
loope
xor
cmps
or
dec
mov
push
cmp
out
mov
pop
gs
mov
push
movs
je
push
in
jl
hlt
pop
and
add
les
mov
dec
imul
enter
xchg
pop
das
adc
adc
mov
xchg
mov
pop
aam
icebp
cs
mov
xor
add
iret
mov
add
pop
dec
and
cmp
or
push
sub
test
push
cmp
movs
mov
sub
jmp
xlat
xor
loop
xchg
ja
test
mov
loope
xor
out
clc
aam
movs
xchg
push
ret
jnp
hlt
loop
cmp
das
out
mov
ret
add
in
and
dec
mov
mov
scas
pop
cmp
xchg
jl
sub
push
repnz
sub
test
adc
and
stos
in
fnstenv
daa
mov
in
ret
jne
xchg
mov
std
mov
jbe
mov
xchg
outs
icebp
jb
mov
ja
xchg
jmp
dec
mov
scas
rcr
xor
xchg
or
and
in
pop
pusha
xchg
sub
sti
out
(bad)
test
mov
ja
xor
(bad)
and
lock
xor
dec
adc
push
adc
add
call
xor
pop
fwait
push
jb
add
je
vmwrite
mov
sub
push
mov
daa
dec
daa
call
mov
test
mov
in
leave
and
imul
pushf
test
inc
fstp
inc
cmp
lock
inc
pop
pop
int3
dec
add
iret
adc
test
dec
mov
adc
ficom
out
and
test
ss
mov
push
imul
pop
dec
cdq
scas
and
mov
mov
fsub
rol
int3
xor
stos
and
adc
sti
cs
das
cwde
loopne
test
mov
sbb
or
out
out
jle
xchg
dec
fisub
(bad)
fwait
out
sbb
dec
cmc
sub
or
cmp
pushf
in
push
repnz
int
mov
in
jp
inc
jl
jo
xchg
sar
movs
stos
push
loop
fld
pop
sub
xchg
outs
es
pop
mov
dec
(bad)
sti
and
adc
xor
pop
fcomp
arpl
scas
fst
ret
add
jne
add
loope
mov
pushf
inc
bound
fs
sub
ja
cmps
repnz
gs
stc
xchg
(bad)
icebp
imul
push
out
xchg
out
mul
jae
fmul
movs
(bad)
out
nop
ins
popf
pop
dec
mov
aam
pop
jmp
outs
out
jmp
mov
lahf
sar
es
cmc
(bad)
(bad)
sar
dec
pop
jns
mov
imul
push
ds
loopne
sub
inc
jo
dec
mov
mov
ret
popa
or
sbb
sahf
mov
das
cmp
and
xchg
shr
add
jmp
fwait
cld
xchg
hlt
sti
dec
jae
sub
std
mov
pop
xchg
repz
adc
cli
in
adc
jnp
xchg
retf
or
xchg
aad
sti
fcomp
inc
dec
pop
mov
push
fiadd
jmp
addr16
aad
sbb
lods
add
mov
pop
and
push
mov
pop
bound
inc
fist
mov
test
out
push
pop
and
add
sub
push
mov
mov
(bad)
or
mov
and
ja
mov
lahf
push
popa
setno
add
scas
sub
xlat
push
je
int3
sbb
sub
xchg
mov
in
sti
xor
stc
dec
ins
adc
and
jno
xchg
fst
outs
fcmovnbe
imul
call
mov
jbe
retf
lock
dec
mov
hlt
popf
(bad)
retf
aas
mov
xchg
adc
jp
jae
test
cmp
ret
fwait
xchg
pop
lods
inc
cmps
push
test
shr
and
mov
sbb
push
jg
xchg
jmp
sub
stc
scas
or
or
mov
ds
arpl
dec
aad
test
and
cs
outs
leave
data16
or
fistp
repz
xchg
jg
push
and
mov
sub
add
push
dec
mov
mov
mov
in
or
push
je
sbb
leave
xchg
lds
jp
pop
jle
enter
ficomp
(bad)
mov
inc
in
neg
xchg
push
mov
dec
mov
stos
(bad)
jae
xchg
pop
mov
adc
call
(bad)
jnp
cmp
lahf
movs
scas
mov
cmp
sti
loop
dec
or
add
aas
and
fmul
push
hlt
out
cli
nop
xchg
int
fs
sbb
push
cli
adc
retf
test
push
push
mov
sub
shr
js
loop
xor
neg
enter
and
out
lods
push
mov
or
xchg
les
daa
or
and
sbb
inc
xchg
sbb
ja
sub
jmp
int
mov
pop
cld
or
out
mov
push
popa
nop
push
and
std
and
scas
in
pop
cmps
lods
dec
pop
call
adc
test
inc
sbb
leave
jne
shl
pop
push
mov
test
mov
pop
sbb
sub
fisub
ret
sti
adc
out
test
pop
push
mov
jmp
or
pop
aaa
or
mov
imul
sbb
adc
mov
xlat
ret
or
or
jg
dec
pushf
mov
retf
jns
sbb
sbb
xchg
test
lea
arpl
add
call
repz
jl
lods
push
clc
movs
mov
retf
cmp
inc
in
add
inc
enter
mov
cs
sub
inc
push
rcl
fabs
in
scas
in
cld
shl
add
sub
addr16
jns
in
xor
pushf
in
mov
push
stc
cli
dec
xchg
and
aam
dec
es
test
mov
out
push
les
icebp
aaa
or
mov
mov
mov
pop
inc
loop
pop
inc
cmps
ja
xchg
loopne
scas
jcxz
or
or
loopne
adc
retf
icebp
cwde
xor
mov
jnp
inc
mov
xor
cdq
stos
call
sub
mov
jge
in
mov
add
mov
js
push
cdq
fmul
mov
or
je
ss
(bad)
dec
sahf
loope
jge
xchg
rcr
mov
mov
aad
mov
dec
mov
jmp
and
push
fnstenv
mov
cmps
ror
mov
movs
fdivp
lea
push
mov
mov
add
inc
jns
jnp
std
loop
cmps
enter
push
xchg
dec
dec
pop
sub
mov
mov
push
in
jo
pop
stc
add
ins
(bad)
daa
mov
inc
push
enter
sub
inc
bnd
xor
in
mov
mov
sbb
sub
mov
and
adc
or
xchg
pushf
scas
cmc
lock
and
push
cmp
les
bound
fdivp
or
call
xor
push
fiadd
(bad)
out
jno
mov
sbb
push
pop
xchg
arpl
(bad)
xchg
push
dec
mov
lahf
mov
push
icebp
js
cmps
ret
div
inc
adc
pop
dec
pusha
mov
popa
dec
jo
call
ss
fdivp
add
dec
enter
adc
jns
push
lods
jp
xor
call
dec
call
sti
jb
leave
loop
jmp
movs
jp
xor
xor
pop
sub
add
xchg
xlat
into
cs
dec
test
aam
retf
xor
call
loopne
inc
inc
sbb
in
xor
cdq
inc
inc
xchg
cmp
jb
jbe
adc
imul
iret
push
and
(bad)
mov
jns
das
fcomp
xor
sbb
sub
mov
movs
psubsw
lds
xchg
ss
xchg
out
ror
je
jge
data16
fwait
pop
jno
xchg
movs
(bad)
fisttp
mov
jge
dec
icebp
outs
xchg
xor
shl
xchg
xor
pop
mov
jns
mov
jecxz
scas
sub
popa
mov
nop
loopne
inc
in
imul
push
fistp
loopne
adc
adc
das
sbb
jp
cmp
imul
add
sti
mov
and
pop
and
adc
pop
mov
mov
mov
mov
mov
shl
dec
cmp
mov
shl
frstor
dec
jae
dec
mov
cmp
dec
jg
jg
loop
dec
push
call
and
mov
movs
xchg
jb
cmp
hlt
inc
mov
sti
repz
push
scas
(bad)
jecxz
pusha
jge
iret
jnp
sbb
icebp
hlt
sbb
add
popf
xor
fisttp
mov
mov
dec
test
sahf
sar
repz
jecxz
shl
sbb
or
stos
lds
adc
and
daa
sbb
mov
lsl
fnstenv
mov
loopne
push
leave
shl
shl
mov
scas
fild
fwait
adc
xor
jle
mov
sbb
mov
sbb
dec
daa
imul
movs
cs
or
shl
jae
mov
in
in
enter
jecxz
inc
dec
int3
jg
xor
dec
rol
and
mov
int3
fidivr
sub
mul
sub
fsubr
sub
cmp
in
mov
fnstcw
call
mov
pop
fdivr
jb
popf
push
adc
and
push
aam
push
daa
sbb
and
in
mov
and
sub
mov
pop
arpl
ins
xor
ror
test
adc
jne
lahf
fs
push
popf
pop
and
mov
aaa
inc
daa
xchg
clc
jp
inc
cdq
sti
xor
sbb
sbb
jl
(bad)
(bad)
and
xor
sub
cs
daa
jo
jecxz
cld
imul
clc
mov
dec
ret
imul
and
dec
sub
lock
mov
xor
pop
cmps
dec
pop
in
test
inc
sub
je
loopne
fld
dec
push
xchg
cdq
sub
mov
pusha
outs
cmp
cmps
or
push
mov
bnd
cmps
in
in
outs
retf
enter
(bad)
xchg
mov
test
xchg
jecxz
mov
dec
rol
(bad)
lea
imul
cs
cmp
sar
daa
in
or
movs
fst
gs
(bad)
xor
aad
scas
xor
fcomp
std
fimul
and
xor
retf
out
xor
mov
xor
cmp
cmp
rol
mov
rcr
test
hlt
mov
adc
xor
not
fisub
data16
xor
test
into
movs
jne
cwde
pop
push
nop
mov
sbb
into
mov
add
pop
mov
sti
push
inc
mov
arpl
mov
gs
inc
mov
inc
pop
add
stos
mov
mov
pop
iret
sub
loop
add
ror
jle
jmp
sar
test
add
not
(bad)
or
push
mov
loope
icebp
mov
ins
and
pop
sti
fsubr
mov
fisttp
and
and
pop
je
cdq
adc
cmp
xor
retf
dec
inc
out
jge
sahf
retf
pop
js
call
fs
xor
gs
push
sbb
adc
and
push
ss
push
dec
cmp
pusha
jbe
mov
enter
fld
in
fs
dec
mov
(bad)
dec
lahf
dec
push
ins
mov
mov
ja
pop
sti
mov
out
hlt
ins
fld
outs
sub
fsubr
(bad)
in
lods
xor
mov
inc
push
dec
cs
sub
pop
idiv
out
aaa
test
xor
and
test
xchg
rcl
jl
mov
repz
pop
xchg
sbb
push
dec
fcom
imul
lods
jo
sub
push
mov
repnz
es
inc
aad
out
mov
psrad
iret
jne
and
jno
xor
fldcw
repz
inc
sahf
cmp
add
add
leave
retf
addr16
sbb
movs
dec
inc
pop
mov
test
xchg
xchg
popf
xchg
xor
repnz
inc
sub
add
pop
bnd
cmps
sub
add
fcmovbe
pop
push
adc
xlat
sub
pop
cmp
push
ins
icebp
sbb
fist
in
cmps
adc
mov
fld
retf
vfnmaddpd
iret
mov
lahf
dec
not
add
fldenv
xchg
push
pop
xchg
je
ins
dec
or
pop
shl
and
outs
cld
nop
iret
push
jbe
div
inc
test
sbb
xchg
imul
xchg
sub
fsub
mov
xor
rol
adc
xchg
xchg
push
cmp
xchg
in
add
jae
movs
iret
loope
inc
cmp
popa
fsubr
es
adc
into
daa
ret
(bad)
push
cld
and
xor
popa
(bad)
std
push
idiv
cmp
mov
sub
xor
lahf
mov
nop
aas
mov
ins
out
aam
sub
cmps
loope
dec
mov
mov
fsub
add
mov
push
and
icebp
fdiv
pop
fsub
mov
pop
mov
mov
add
mov
imul
stc
sub
sbb
scas
mov
ror
dec
cdq
clc
movs
mov
pop
(bad)
out
inc
sub
mov
fisttp
clc
push
bound
or
mov
mov
push
lock
bound
xchg
mov
cld
xchg
shl
loope
cmp
fstp
push
jle
cmps
pop
sub
push
bound
aaa
mov
ror
lds
cmp
(bad)
cmp
jbe
pop
xchg
outs
(bad)
jmp
pop
add
cwde
or
sbb
pop
test
jbe
sub
ins
es
pop
mov
aas
pop
jno
mov
add
mov
nop
and
stc
jne
popa
mov
sbb
in
das
inc
(bad)
aad
xor
xor
into
repnz
jno
(bad)
and
movs
out
sub
mov
dec
add
pop
es
outs
pop
mov
or
ins
js
push
pushf
outs
cmp
popa
dec
and
scas
push
sbb
sub
daa
fxch
scas
(bad)
(bad)
xchg
fstp
sbb
out
mov
add
inc
lds
jae
addr16
hlt
scas
adc
cmp
xchg
jbe
dec
js
cmp
cdq
js
adc
push
cli
hlt
test
enter
adc
iret
mov
mov
(bad)
xchg
sbb
and
in
mov
xor
imul
hlt
lds
add
jbe
lds
bnd
inc
cdq
lods
shr
loopne
pop
push
jmp
jl
pop
in
mov
or
add
or
pop
mov
lds
xor
fwait
or
sbb
fs
jp
ret
lods
xchg
fcom
and
sub
add
inc
in
xor
repnz
mov
cs
xchg
loope
sbb
adc
retf
mov
lods
or
or
adc
data16
enter
or
call
push
cdq
mov
bound
fwait
sub
xchg
add
ja
pop
mov
push
jns
sbb
jmp
xchg
lds
repnz
mov
lea
popa
inc
retf
and
scas
test
icebp
mov
enter
adc
out
inc
int3
mov
out
gs
ins
pop
push
dec
xor
adc
xchg
scas
push
push
pop
add
imul
pusha
and
mov
dec
fwait
sub
or
ret
push
pop
enter
mov
cmp
stos
xchg
xchg
js
mov
push
jne
shl
xor
xchg
outs
retf
cli
dec
fsubr
sub
ret
repnz
push
dec
fidiv
fild
lea
dec
cwde
cld
cmps
movs
movs
mov
adc
adc
adc
xlat
sbb
dec
imul
mov
jecxz
ret
adc
inc
jl
pusha
rol
mov
aas
in
pop
cli
rcl
mov
mov
cmp
push
ss
pop
and
cmc
mov
sub
rcr
pusha
pop
fdivr
test
hlt
test
daa
mov
into
pop
pop
pop
ins
(bad)
pop
sbb
sbb
mov
aam
push
xchg
pop
add
pop
mov
daa
and
mul
mov
jno
pop
push
fnsave
sbb
pop
or
ins
in
jmp
stos
xor
push
out
and
cwde
mov
mov
or
xchg
pop
pop
push
xchg
dec
dec
jge
xchg
push
add
add
xchg
ss
lahf
mov
xchg
or
xchg
push
ret
adc
and
lahf
and
sub
ds
retf
pop
(bad)
jg
(bad)
or
int
pop
inc
or
push
xchg
xor
int
(bad)
mov
pushf
sbb
push
mov
pop
add
jmp
xchg
pop
mov
cmp
pop
pop
mov
bswap
clc
lods
ja
cli
das
cmps
mov
clc
pop
repnz
push
popa
arpl
adc
sbb
dec
lock
pop
dec
mov
pop
xchg
je
or
dec
icebp
aam
outs
sub
pushf
adc
stos
cmc
lods
test
fwait
inc
popf
sti
rcl
xchg
rcl
(bad)
jne
and
ss
jl
pop
push
fwait
js
hlt
xor
rol
and
and
push
(bad)
mov
and
cmp
pop
cwde
sbb
pop
cmp
push
pop
push
ror
jmp
inc
fistp
mov
nop
es
imul
(bad)
ror
jns
add
fwait
inc
sub
test
jns
bound
mov
add
push
mov
lods
xor
push
pop
pop
and
sar
popf
pop
jecxz
in
imul
sbb
pop
dec
jle
jp
out
and
rcr
jge
dec
call
jne
fcmovu
gs
int3
jae
fisubr
in
mov
aam
cld
mov
pop
div
rcr
inc
sbb
retf
pop
mov
sbb
sbb
out
fwait
mov
xchg
jae
(bad)
rcl
inc
add
cwde
les
mov
or
outs
test
mov
repnz
jge
or
push
ins
outs
sbb
and
popa
(bad)
out
mov
add
repz
sbb
pop
(bad)
lock
ret
inc
lds
inc
test
dec
inc
mov
cmp
scas
add
sub
adc
push
xchg
dec
fs
xchg
push
mov
xor
fld
mov
aad
mov
call
sbb
xlat
sub
mov
mov
jmp
mov
arpl
push
or
or
ja
push
jle
add
or
xlat
inc
pop
inc
push
dec
test
mov
loop
dec
repz
push
je
hlt
pop
dec
es
mov
shl
imul
out
idiv
dec
sub
stc
test
or
stc
cmps
xor
cmp
pop
jg
hlt
lods
test
(bad)
cdq
pop
push
aad
lods
enter
lds
out
mov
retf
dec
lock
stos
jns
int
cmp
rcl
mov
cmp
test
loope
bound
mov
shr
retf
outs
inc
mov
ins
dec
pop
aam
icebp
scas
jns
xchg
(bad)
xchg
arpl
jns
push
int
pop
mov
mov
in
pop
cmp
cmp
clc
aas
dec
push
jmp
adc
sbb
ds
(bad)
and
xchg
cmp
xor
mov
pop
sub
xchg
dec
inc
cmp
adc
ror
sub
gs
jmp
xchg
jnp
out
pop
das
pop
mov
xchg
aad
sti
clc
inc
stos
dec
jns
pop
(bad)
jo
xor
fwait
mov
in
jne
sub
ret
repz
(bad)
mov
cmp
pop
retf
test
inc
xchg
adc
aam
loopne
mov
xor
and
jb
push
aaa
or
add
lods
fwait
and
and
sub
pop
aad
inc
jp
arpl
add
in
popa
rcr
xor
test
jle
cwde
inc
bound
pop
and
nop
test
ret
cmc
mov
xor
sub
mov
das
push
vsqrtpd
mov
inc
pop
hlt
fisttp
and
pop
inc
out
xor
push
mov
xor
mov
xchg
mov
in
sbb
sub
mov
and
or
fld
pop
sbb
cmc
push
aas
hlt
out
add
xchg
das
cmp
push
in
jbe
arpl
lar
pop
aaa
xor
sub
xor
mov
in
pop
push
adc
daa
inc
pop
(bad)
(bad)
sar
mov
or
movs
daa
out
imul
popf
shl
bound
push
pop
cmp
(bad)
adc
enter
jns
ins
jge
sti
push
sub
daa
xchg
pop
sbb
mov
mov
add
jmp
jne
test
sub
je
shr
and
repnz
or
inc
enter
mov
adc
imul
imul
bound
in
enter
sub
test
test
push
sbb
std
jnp
imul
mov
push
inc
xchg
sub
and
loop
mov
call
pop
push
shr
fstp
lods
mov
dec
clc
(bad)
mov
repnz
jecxz
aas
pop
loope
jmp
in
jl
in
inc
mov
mov
jns
push
popa
enter
rol
rol
push
into
ret
mov
or
repnz
sub
adc
jmp
or
inc
into
cwde
fcomp
xchg
cld
sbb
les
aaa
jnp
add
cdq
shl
out
stos
adc
push
rcr
mov
dec
xor
inc
and
jge
sbb
cmps
test
lods
out
mov
xor
inc
inc
popa
shr
inc
jmp
mov
inc
sbb
cdq
leave
inc
sub
mov
in
cs
scas
inc
fs
in
jle
jo
jo
pop
xlat
rcr
ins
sbb
xchg
inc
and
jmp
jl
scas
push
int3
nop
inc
push
aad
shr
mov
adc
add
gs
dec
in
mov
or
pop
push
cwde
jmp
jbe
dec
cmp
sub
xlat
inc
fild
into
xor
xchg
xchg
inc
xchg
xchg
xor
out
aaa
cmps
rcl
rol
stc
and
jns
fsubr
jnp
fistp
push
push
adc
pop
sbb
xchg
jae
xlat
cld
add
adc
add
or
stos
dec
pextrw
dec
(bad)
aad
and
popf
cmc
jp
jl
xlat
cdq
cmps
imul
sbb
dec
mov
sub
sbb
popa
outs
mov
sub
(bad)
jbe
dec
sub
inc
pusha
add
inc
mov
sub
fdiv
mov
cmp
and
retf
scas
push
cmp
fldenv
jg
push
xchg
mov
or
call
das
aad
mov
add
jle
out
fdiv
js
dec
xchg
pop
repz
sbb
scas
dec
push
sub
push
test
pop
sti
or
je
fld
das
pusha
mov
shl
add
sub
xor
sub
retf
cld
sbb
mov
ret
daa
adc
or
jne
(bad)
aad
and
test
ret
jns
dec
cdq
ja
int3
mov
push
mov
test
mov
add
mov
and
retf
xchg
daa
movs
test
mov
loope
(bad)
lods
inc
xor
in
cli
ret
dec
sub
pop
pop
movs
je
dec
xchg
es
je
rcl
add
ins
(bad)
shr
(bad)
mov
inc
mov
and
mov
jne
cwde
in
repnz
sub
lds
fs
call
xor
mov
fcomp
cmp
dec
clc
cmp
popa
push
les
je
addr16
or
and
sbb
clc
scas
ja
lock
pushf
lods
xchg
imul
call
mov
dec
repz
out
push
fiadd
pusha
jmp
sar
aam
imul
jl
std
ret
cs
test
adc
dec
mov
movs
jmp
stos
rol
jmp
in
jmp
cmps
sub
std
ud1
fist
shl
not
cs
cmp
cmp
sbb
pop
iret
adc
mov
ja
xor
mov
xchg
ins
out
pop
inc
call
call
push
inc
jnp
fnstenv
or
retf
aas
xor
das
adc
loope
add
cmps
out
jne
xchg
mov
dec
repz
dec
adc
xchg
sbb
xchg
adc
push
jmp
lahf
jne
adc
mov
pop
inc
inc
cli
xor
cld
jmp
rcr
cmps
scas
inc
pop
pop
mov
lock
push
cmc
stos
mov
sbb
inc
dec
inc
ins
pushw
rcl
mov
xchg
push
aad
dec
or
adc
push
into
in
sub
sbb
movs
popf
jl
arpl
pop
xor
int
cmp
inc
fwait
jmp
fsubr
adc
xchg
add
not
daa
hlt
jno
sbb
sub
mov
sbb
inc
lods
sub
and
es
vpmacssww
inc
les
popa
cmp
and
or
xchg
(bad)
das
popf
adc
xchg
jns
jge
pusha
jae
mov
push
dec
cwde
xor
cmps
ret
cmp
in
xchg
xchg
cmp
mov
imul
mov
fwait
inc
cli
xor
out
xor
frstor
xor
fucomip
adc
scas
gs
inc
scas
pop
mov
cdq
pop
(bad)
mov
test
mov
stc
pop
fcmovnbe
cmp
bound
(bad)
ret
dec
adc
sahf
xor
adc
rol
gs
adc
sbb
mov
lahf
repnz
loop
pop
je
outs
lock
mov
mov
fild
stos
mov
scas
sbb
add
mov
jae
call
hlt
pop
adc
jno
cs
mov
test
adc
fucomp
(bad)
mov
repnz
adc
and
js
jo
fadd
shl
aas
jmp
and
mov
mov
cmp
push
adc
push
scas
xor
pushf
pop
push
arpl
add
cmp
cmp
popf
xchg
aad
mov
xlat
sbb
in
out
dec
sub
lock
mov
loope
push
ret
and
call
mov
pop
cmp
fisttp
pop
push
xor
repnz
ss
mov
sub
cmps
dec
add
cli
pop
push
push
cmc
xchg
or
enter
adc
sbb
clc
cld
jae
add
(bad)
mov
push
inc
jb
jbe
ret
cmp
mov
paddsb
retf
or
mov
or
call
js
mov
adc
pop
sub
call
xor
xchg
mov
out
(bad)
pop
jp
ror
mov
fs
sbb
lahf
and
jo
adc
xor
enter
add
and
inc
test
(bad)
(bad)
adc
ins
xchg
adc
icebp
iret
jno
into
inc
int
xchg
xor
cmp
cmp
mov
pop
push
jne
cmps
call
aam
sbb
outs
inc
scas
sahf
pop
test
adc
iret
rcl
dec
pusha
cs
mov
xor
shl
cmp
cld
mov
push
jbe
out
repz
pop
mov
push
or
or
and
sub
aas
add
xlat
add
jecxz
call
ss
arpl
lea
dec
xor
mov
and
imul
icebp
ins
mov
gs
adc
xchg
jg
addr16
out
mov
mov
push
aad
add
mov
sti
shr
jns
push
sbb
lds
cmp
mov
fmul
les
cmps
sbb
pop
inc
and
aad
dec
imul
jmp
retf
rcr
jbe
pusha
add
and
push
or
or
frstor
mov
inc
call
dec
sub
jbe
jno
popa
mov
ja
pop
cmp
mov
das
inc
mov
fstp
enter
pusha
in
mov
int3
ss
sbb
adc
push
add
ds
mov
lahf
dec
ss
in
sti
or
adc
(bad)
pop
das
fs
stc
cmps
adc
push
pop
(bad)
mov
pop
mov
push
pop
add
adc
inc
push
out
pop
stc
ins
mov
out
idiv
jecxz
in
shl
(bad)
shr
das
shr
movs
push
mov
fs
mov
lahf
out
lds
jns
out
jge
adc
jb
inc
in
mov
stc
and
jns
imul
fscale
scas
fsub
xor
movs
mov
dec
push
xchg
movs
xchg
ret
pop
jmp
dec
xchg
out
fcomp
adc
and
popf
ror
cmc
(bad)
mov
enter
popf
lds
(bad)
out
dec
scas
or
dec
cmp
sbb
inc
add
jle
jno
inc
and
push
cs
lahf
sub
adc
inc
hlt
xchg
mov
scas
sub
pop
add
inc
in
xor
mov
dec
shl
xchg
jg
mov
cmp
je
pop
mov
adc
out
cmp
inc
retf
and
pop
enter
dec
and
jbe
test
adc
push
sbb
test
out
aam
into
data16
sub
xchg
or
xor
movs
pusha
lock
cs
ds
push
(bad)
retf
add
(bad)
adc
lock
adc
dec
add
pop
mov
inc
cmps
xor
or
imul
in
ja
aaa
outs
in
inc
into
add
or
pusha
pop
jmp
ror
cmps
jge
fsub
add
mov
jnp
sbb
test
xor
cmp
gs
push
jge
js
cwde
and
mov
mov
loope
push
ss
adc
mov
mov
rcr
js
in
stc
out
rol
ret
or
(bad)
cmp
outs
pushf
jae
icebp
sahf
add
out
sub
mov
rcr
in
mov
or
cmp
cmp
sub
(bad)
fisttp
jo
test
jge
ja
jno
mov
xchg
jg
outs
push
xchg
pop
retf
out
dec
stos
mov
jns
pop
or
test
sbb
mov
ins
and
es
es
stos
xchg
loopne
push
mov
push
mov
cmp
and
mov
jae
cmp
mov
mov
mov
scas
xor
dec
mov
push
xor
repnz
sub
mov
mov
test
xchg
pop
xchg
test
(bad)
rcr
jmp
adc
xchg
inc
ror
stc
shl
mov
test
mov
adc
sar
jmp
gs
imul
fcmovu
call
adc
jmp
sub
cs
mov
sbb
stos
das
mov
pause
jae
aas
mov
xchg
sub
or
inc
pop
sbb
mov
adc
mov
adc
int3
mov
push
mov
into
inc
pop
pop
frstor
push
add
ret
pop
jbe
repz
push
lods
dec
cmp
cmp
and
cmp
xor
sub
push
jnp
pop
inc
adc
repz
arpl
out
mov
cli
mov
xchg
outs
jecxz
nop
cli
nop
bound
outs
rol
ins
push
cld
(bad)
scas
push
cmc
shl
inc
inc
sub
xchg
pop
ins
rol
and
in
jb
inc
cmps
adc
push
jle
xchg
sbb
pop
inc
fdiv
gs
loope
cwde
pop
push
out
pop
call
adc
dec
addr16
pusha
xlat
sub
daa
push
cmp
and
and
dec
xchg
push
ins
test
sbb
ret
mov
sub
cli
retf
xchg
out
ins
cmp
into
or
stos
mov
ss
fwait
stos
in
ins
shl
mov
add
dec
mov
mov
adc
std
fwait
mov
mov
xor
jl
sub
mov
add
push
push
es
push
test
push
add
xchg
adc
cwde
rol
sub
mov
test
jno
cmps
or
test
in
sub
nop
inc
and
call
clc
xchg
inc
test
mov
movs
scas
sbb
mov
pop
gs
jne
test
or
(bad)
mov
pop
xchg
dec
mov
ret
fimul
cmp
jae
push
out
xchg
sub
fucomi
inc
mov
cmps
inc
mov
stos
test
out
push
mov
ror
sbb
ret
pop
(bad)
xchg
rcr
dec
push
push
adc
xchg
mov
jmp
and
gs
mov
adc
enter
inc
sbb
cmps
push
(bad)
push
or
pop
cli
add
jecxz
loop
fldenv
outs
jne
xchg
lds
adc
hlt
jmp
and
fcmovbe
inc
mov
sub
cmp
stc
pushf
cmp
(bad)
xchg
fst
push
bound
or
sti
adc
adc
loop
dec
pop
sbb
cmps
push
mov
nop
leave
push
and
movs
dec
pop
xor
jle
ins
push
or
outs
out
mov
adc
pop
cld
cdq
inc
jl
xchg
cmps
dec
sbb
inc
xlat
scas
loope
adc
sub
into
mov
xchg
leave
xor
in
dec
inc
fldenv
ret
add
neg
xchg
jge
mov
pusha
pop
dec
les
sbb
and
int3
sbb
sbb
dec
jmp
call
repnz
xchg
pop
(bad)
imul
mov
stc
sbb
dec
sbb
mov
xor
xor
iret
or
cmc
and
sub
pop
lods
adc
stc
and
ja
adc
jo
pop
or
jo
and
or
sbb
add
cdq
jecxz
into
std
das
push
jb
clc
jmp
sbb
xchg
adc
scas
inc
jge
pop
fbld
jle
sub
jle
fs
mov
add
xor
or
mov
in
mov
pop
pop
loopne
mul
(bad)
adc
mov
sbb
inc
sbb
shl
xchg
inc
sub
shl
adc
les
push
inc
mov
aad
sbb
pop
xchg
xor
push
mov
shr
test
test
out
jmp
fdiv
and
cmp
jl
xlat
xchg
int
in
cmc
imul
call
aas
mov
ins
rep
ins
repz
xchg
test
adc
hlt
push
mov
inc
ins
push
in
push
(bad)
push
int3
xchg
mov
cmp
loope
mov
lock
mov
icebp
mov
mov
neg
(bad)
retf
pop
ror
inc
push
jae
mov
fcom
std
sbb
retf
add
adc
add
je
dec
jmp
jmp
xchg
test
rcl
ss
mov
repnz
es
sbb
dec
pop
add
cs
sub
and
test
repnz
adc
(bad)
jl
pushf
mov
jl
push
ret
mov
cdq
push
sti
mov
pop
lods
lds
int3
pop
push
fucom
inc
sbb
inc
retf
adc
xchg
and
push
push
fdivr
popf
bound
in
adc
jne
popf
pop
or
pop
xor
add
aaa
ds
mov
jmp
ret
pop
jae
ja
mov
adc
push
je
and
loopne
mov
std
icebp
mov
pushf
jno
aaa
dec
scas
std
mov
fidiv
loopne
aad
enter
jne
repz
popa
mov
mov
mov
mov
mov
add
mov
mov
aam
cs
shl
rcr
push
lds
add
jno
xor
jns
repnz
aaa
mov
mov
push
bound
inc
test
xchg
pop
lock
sbb
ud0
adc
or
cld
inc
test
imul
mov
int3
dec
xchg
mov
mov
pop
sbb
inc
(bad)
sub
mov
inc
pusha
jbe
xor
dec
dec
sub
es
xor
sti
dec
jae
fimul
cdq
into
lods
adc
out
pop
cmp
inc
mov
adc
in
arpl
test
mov
sub
in
inc
stos
xor
in
std
mov
scas
mov
pop
or
mov
pop
dec
xchg
xor
cmps
sub
div
cmp
mov
data16
xchg
repnz
fstp
mov
mov
cmc
in
adc
outs
sub
out
aas
(bad)
cmps
add
xor
mov
(bad)
push
movs
cwde
fwait
cmp
mov
lods
(bad)
shl
and
fnsave
(bad)
in
das
xor
js
mov
aas
mov
jge
xchg
xchg
pop
push
sub
dec
inc
jge
fsubr
push
mov
(bad)
neg
inc
ins
and
iret
pop
xchg
das
sub
add
std
jl
add
sbb
push
sbb
add
mov
enter
aas
dec
sar
cdq
hlt
aaa
push
scas
xchg
and
(bad)
iret
bound
mov
lods
or
jbe
jmp
stos
mov
std
call
cmp
gs
sbb
arpl
jge
cli
cli
neg
and
sub
cmps
cmps
sub
addr16
lea
out
cwde
or
adc
ds
cmp
adc
(bad)
lahf
cli
enter
add
sub
push
add
add
stc
mov
sub
outs
inc
bound
int
inc
cs
scas
sbb
xor
loope
cmp
std
push
out
bnd
cmp
jns
pop
pushf
mov
mov
push
hlt
test
sbb
lds
into
sbb
(bad)
mov
mov
fist
call
inc
jmp
jl
dec
out
loopne
xchg
mov
out
movs
test
(bad)
ds
xchg
in
pop
jne
mov
xor
sub
aaa
stos
mov
sti
inc
mov
xchg
fild
gs
push
and
mov
fisttp
pop
jl
into
mov
pop
dec
aam
inc
xor
pop
in
das
push
daa
(bad)
cmp
rol
js
jbe
repz
xor
mov
xor
aas
jecxz
cmp
call
dec
stos
push
ret
test
cdq
call
pushf
jns
pop
mov
popa
fisttp
loop
test
jns
cmp
adc
jns
or
sbb
cmc
ret
(bad)
xchg
pusha
arpl
add
test
jnp
retf
retf
pop
or
push
pop
mov
xchg
int
mov
mov
sbb
push
inc
push
in
sbb
mov
xchg
mov
mov
cmp
cdq
les
adc
test
adc
and
sub
mov
arpl
fsub
pop
add
xchg
and
ja
es
les
mov
idiv
inc
call
mov
push
arpl
ins
divps
ss
sub
sbb
sub
dec
aaa
out
retf
fstp
dec
hlt
addr16
(bad)
inc
mov
xor
scas
ror
pop
pop
push
jae
out
mov
stos
push
mov
enter
mov
jl
int
je
xchg
dec
push
sub
fiadd
in
jbe
imul
jecxz
jmp
push
add
nop
add
stos
jp
add
sub
ja
retf
sbb
lods
push
and
jne
mov
jbe
nop
cmp
(bad)
out
mov
and
cmc
mov
jp
jo
mov
call
repnz
sbb
aad
movs
mov
jge
push
xor
addr16
mov
movs
add
test
gs
add
pop
dec
sbb
inc
test
jg
sub
add
fiadd
rol
stos
jo
aaa
mov
data16
lods
js
fisttp
ret
das
xchg
mov
mov
aas
mov
ja
imul
out
sbb
fwait
pop
sub
pop
(bad)
sub
xor
pop
ret
test
pop
js
das
mov
mov
cmps
mov
cmc
pop
push
icebp
loop
jp
ja
mov
jecxz
add
test
xor
cli
jge
mov
cmp
mov
fnsave
fsub
fnstenv
dec
or
jecxz
and
sub
out
lods
aaa
xor
dec
mov
fsub
cdq
sti
mov
dec
out
scas
sub
sub
pop
mov
clc
fcmove
cmp
iret
mov
xchg
pop
mov
push
rcr
adc
push
cmp
lfs
mov
sub
mov
jo
rcr
pop
adc
mov
arpl
inc
dec
cwde
mov
push
js
and
inc
jae
inc
dec
add
mov
adc
push
(bad)
pop
cmp
test
pop
sub
pop
leave
aad
push
movs
push
and
mov
mov
xchg
xchg
repnz
xor
loope
clc
adc
ins
cmc
push
in
sbb
in
mov
inc
imul
add
loop
les
jl
sbb
ins
sub
shl
jno
mov
dec
jbe
(bad)
iret
jo
fnstenv
int3
aas
cwde
daa
push
mov
mov
pushf
push
out
stos
xlat
add
cwde
push
and
sub
push
mov
mov
cli
push
lods
mov
xor
xor
xor
loop
mov
pop
fsubr
add
mov
das
or
add
cmc
lods
pop
mov
retf
inc
xor
lods
stc
mov
push
push
jno
add
std
int3
adc
lods
test
xbegin
inc
hlt
xor
xchg
jecxz
push
adc
push
mov
cmp
dec
ficom
test
jnp
jmp
sbb
imul
mov
push
bound
push
ret
xor
jmp
nop
cmp
loop
std
add
pop
add
out
cmp
add
mov
or
shl
sub
call
pop
xchg
(bad)
data16
nop
retf
mov
xor
ins
inc
cdq
retf
call
iret
mov
cmps
adc
inc
cld
jmp
jne
adc
dec
outs
mov
fs
fidiv
test
movs
jbe
push
pop
dec
bound
das
mov
in
test
inc
xor
jne
pop
mov
inc
call
cmp
sub
addr16
sahf
dec
inc
clc
xor
lds
push
sbb
sbb
lds
in
dec
mov
mov
inc
sbb
lds
mov
xchg
jne
lahf
sbb
retf
xchg
hlt
(bad)
arpl
mov
xchg
sub
mov
mov
or
push
inc
cmps
and
xchg
cmps
pop
jno
cmps
add
into
shl
or
fwait
pop
imul
fwait
jae
mov
into
sub
add
xor
cs
(bad)
pop
sub
mov
cmp
and
in
push
or
xlat
xor
xchg
lea
push
pop
sub
mov
mov
and
pop
sahf
push
jp
outs
leave
adc
fld
int3
mov
sub
aad
gs
mov
push
loopne
(bad)
or
jo
iret
cdq
fwait
retf
mov
pop
pop
or
push
jg
icebp
mov
cvtps2pd
imul
mov
adc
nop
sbb
and
mov
in
das
sbb
cli
cld
int
push
test
out
dec
jno
pop
mov
ss
push
sbb
xchg
xchg
jge
push
inc
dec
jns
dec
out
ss
sbb
shr
dec
xlat
and
cmp
sbb
adc
sub
push
ds
pop
and
mov
adc
mov
fimul
push
out
int3
mov
shl
dec
scas
inc
pop
jge
xchg
sub
cwde
jno
shr
nop
xchg
and
std
fs
push
adc
and
jae
sub
xchg
and
and
adc
(bad)
inc
(bad)
and
or
fcom
sti
in
pop
mov
mov
push
dec
ds
push
inc
aam
add
inc
cld
mov
push
mov
add
ds
inc
into
sbb
stos
jg
mov
add
jecxz
or
jle
cs
dec
xor
jmp
ins
int
sahf
xlat
out
mov
out
jp
clc
call
(bad)
cld
repz
sub
rcr
(bad)
icebp
movs
jl
leave
mov
popw
pop
popa
lods
push
add
dec
lock
call
(bad)
addr16
(bad)
jno
cmp
in
fst
xchg
xor
xor
pop
sub
push
ret
arpl
adc
jg
movs
std
jmp
sub
push
mov
in
cmp
int3
mov
das
xor
fimul
mov
stos
dec
mov
pop
adc
xchg
cwde
pushf
cmps
mov
fistp
mov
xor
or
push
sub
mov
das
mov
jmp
or
fwait
cmp
call
cli
push
cmp
or
test
movs
jno
fsubr
jbe
sub
pop
sti
xchg
jecxz
fstp
dec
stc
xchg
ficom
ror
lods
xchg
or
or
sbb
loop
fcom
push
fbstp
out
pop
jg
or
int
mov
jg
and
movs
sbb
setnp
add
jns
inc
sahf
(bad)
aas
jp
xlat
dec
cmp
js
aaa
mov
adc
popf
xchg
enter
(bad)
and
(bad)
pushf
or
out
pop
or
test
dec
dec
mov
lahf
test
cdq
inc
lock
or
jg
jg
call
mov
push
lahf
mov
aam
mov
xor
cmp
bound
cmps
daa
movs
lods
mov
(bad)
push
cmp
test
xchg
ins
pop
icebp
mov
sbb
jo
sub
mov
inc
(bad)
dec
add
mov
stos
ret
ret
inc
mov
shl
in
aam
inc
fwait
sbb
imul
leave
fld
pop
sub
or
mov
sbb
pop
cmp
mov
in
xor
and
je
inc
repnz
not
rcr
sub
pop
inc
xchg
inc
sub
movs
adc
jmp
push
pop
in
jl
cmp
ror
cmp
xchg
aam
std
lock
cmc
jge
mov
push
pop
inc
cwde
(bad)
rep
mov
fldcw
add
stos
rcr
cmp
mov
(bad)
jne
xchg
lahf
mov
stc
repz
lods
sbb
sbb
pop
adc
sbb
xlat
inc
fdivr
loope
std
mov
iret
rcr
jmp
sub
pop
ret
ss
test
lahf
or
push
inc
mov
push
mov
adc
mov
push
lea
aaa
mov
frstor
dec
fsubr
sub
outs
cmp
cmp
retf
test
mov
jae
inc
cwde
push
pop
movs
jmp
cmps
adc
xlat
push
add
jl
jmp
stc
cmp
ss
pop
sbb
aam
sub
or
push
push
popf
js
fcomip
fld
icebp
clc
inc
repz
push
pop
inc
jp
(bad)
mov
dec
movs
inc
xchg
in
pusha
dec
cmp
int
xor
pop
(bad)
nop
push
cmps
adc
jmp
leave
and
push
jmp
and
lods
push
fs
xor
push
mov
sbb
and
or
pop
add
xchg
clc
inc
stos
adc
and
cmp
ror
aad
sbb
add
(bad)
jmp
mov
or
mov
xor
std
cdq
movaps
daa
out
aas
js
mov
js
jno
push
retf
xlat
jp
cmc
jge
sbb
push
dec
enter
jbe
bound
mov
or
clc
in
xchg
movs
bound
ins
push
adc
gs
mov
imul
mov
and
cdq
adc
mov
jmp
bound
fistp
mov
ror
adc
aaa
retf
push
sub
fsubr
push
(bad)
and
(bad)
and
lea
and
data16
push
ja
push
push
inc
cs
pushf
and
mov
xchg
push
imul
inc
pop
out
or
or
sub
jmp
fnstcw
sub
movs
dec
push
pop
fnsave
js
fwait
mov
sub
or
sub
loopne
aad
adc
pop
mov
loope
arpl
lock
outs
sub
pop
pop
sar
out
sbb
add
fidivr
test
and
pop
sub
push
mov
sub
test
or
sub
ja
jne
test
outs
iret
inc
jmp
and
bound
cmp
mov
ror
sub
inc
jns
xchg
sub
sbb
add
je
cmp
or
popf
adc
push
stos
nop
cwde
jbe
std
mov
js
xor
adc
pop
jmp
(bad)
xchg
(bad)
add
sub
inc
jp
idiv
cmp
mov
(bad)
inc
hlt
iret
je
sar
out
mov
or
adc
jle
clc
ret
push
push
xchg
mov
cmp
pop
add
nop
pop
scas
cmp
aaa
adc
std
xor
or
enter
rcr
hlt
js
pop
jbe
push
je
cwde
jo
pop
std
sbb
in
out
popf
stos
pop
js
adc
mov
stc
sar
shl
xchg
xor
and
xchg
sub
pop
xchg
jns
jbe
loope
mov
sub
popa
mov
ins
idiv
xor
scas
or
loope
scas
inc
mov
pop
loopne
xor
shl
arpl
push
popf
bnd
push
call
inc
add
adc
es
sahf
call
mov
rol
mov
xor
imul
jmp
jmp
push
cld
arpl
pop
inc
xchg
(bad)
repz
sub
dec
mov
cld
fadd
mov
sub
inc
sub
mov
inc
adc
js
stos
clc
shl
into
adc
pop
iret
mov
fidivr
jmp
mov
fst
(bad)
jle
shl
call
and
mov
sbb
out
fdiv
xchg
lahf
adc
xchg
cmp
push
(bad)
int3
xchg
loopne
adc
push
adc
js
shr
cdq
add
neg
pop
add
aam
mov
dec
sar
lea
mov
xor
mov
xchg
loope
arpl
mov
xchg
and
jbe
sbb
and
dec
adc
leave
lods
aam
push
out
int
cdq
iret
mov
inc
pop
pop
xlat
cmp
ins
cld
cmp
add
jle
push
dec
fdivr
out
rep
add
scas
adc
scas
pop
pop
sbb
js
mov
add
adc
out
jb
daa
mov
rol
mov
jo
in
mov
xor
mov
pop
adc
and
or
and
stos
mov
mov
mov
jp
pop
aaa
or
mov
or
scas
test
rcl
xchg
rcr
pusha
inc
fistp
jns
adc
pop
mov
popf
imul
sub
in
jle
push
gs
or
lock
call
xlat
enter
(bad)
sub
inc
(bad)
xchg
out
mov
cmp
xor
mov
aam
hlt
push
or
addr16
loop
mov
sub
daa
cmps
pop
in
xor
clc
pushf
cs
ins
mov
mov
push
jecxz
std
in
inc
lahf
(bad)
idiv
xchg
hlt
sub
inc
pop
mov
inc
push
adc
mov
loope
and
cs
cmp
mov
sub
and
(bad)
in
scas
mov
or
cwde
sub
retf
or
jg
inc
aas
or
push
arpl
add
(bad)
push
aad
sar
ja
(bad)
fdivr
mov
fmul
adc
xor
jmp
xchg
xchg
test
jle
ret
cmp
out
mov
mov
mov
cld
push
add
xor
fld
(bad)
mov
or
stc
xchg
outs
and
(bad)
lds
lods
fs
pop
in
cmps
in
in
(bad)
stos
pushf
test
outs
cmp
mov
jp
push
sbb
jmp
xchg
in
pop
not
shr
aaa
push
loop
xor
cmp
xchg
or
lock
mov
fidivr
sti
dec
fist
fsub
mov
jle
arpl
ins
bnd
mov
pop
out
xchg
arpl
dec
mov
jo
ds
lock
shl
push
in
scas
or
jbe
neg
js
push
(bad)
sbb
aam
xchg
xchg
push
fwait
jmp
mov
mov
mov
popf
push
pusha
sub
push
jmp
fsubrp
push
jne
push
(bad)
stc
pop
adc
loope
or
into
inc
pop
push
xchg
and
repz
nop
call
xlat
imul
(bad)
dec
sub
movs
aam
mov
cwde
adc
push
aaa
in
aad
pop
hlt
(bad)
mov
xor
mov
mov
out
push
push
nop
pop
or
nop
mov
test
aam
xchg
jmp
mov
jae
outs
xchg
push
outs
mov
mov
sub
xor
out
test
or
aam
inc
cdq
pop
push
inc
nop
mov
add
mov
pop
sbb
loope
test
add
add
pop
iret
jmp
aad
cld
movs
or
lds
jp
push
mov
or
test
jne
and
adc
fimul
sti
lahf
fwait
dec
push
or
pop
into
and
push
dec
and
mov
mov
inc
or
hlt
ins
sbb
lods
mov
push
and
jne
outs
pop
js
xor
ins
xchg
pop
cmp
pop
test
inc
inc
or
xchg
push
push
aam
out
and
loop
sub
test
imul
jge
mov
or
rcl
(bad)
out
stos
aas
push
jmp
sub
jle
mov
inc
mov
in
das
in
jle
rol
sbb
and
int3
sar
loop
pop
int
std
dec
aam
cs
jnp
imul
ret
jp
cmc
out
mov
sbb
scas
or
mov
int3
lods
test
fsubrp
xor
pop
inc
enter
sahf
xor
dec
fst
(bad)
push
std
ret
dec
test
jne
xor
push
aaa
sub
sbb
xor
rcr
xchg
xchg
sbb
jno
cdq
clc
add
push
adc
or
push
(bad)
ror
int
mov
scas
ror
cmp
mov
sub
push
cmp
in
xchg
dec
and
xchg
xchg
dec
dec
or
call
inc
imul
lods
out
mov
sbb
cld
fld
sub
adc
into
or
push
sub
std
push
sub
ret
xchg
and
add
ins
shl
and
xor
and
inc
xor
fcmovnb
cwde
xchg
or
(bad)
aad
(bad)
push
aas
pusha
xor
pop
mov
sub
loope
jmp
dec
or
mov
and
aaa
adc
rcl
and
pusha
jmp
add
jle
dec
mov
ins
mov
push
ja
add
cmp
mov
js
inc
add
push
xchg
test
push
frstor
stc
jo
(bad)
jmp
outs
neg
pop
push
cmp
pop
mov
or
mov
and
or
les
sbb
(bad)
push
and
movs
gs
add
cmps
dec
xor
ficom
and
(bad)
std
sbb
xchg
shl
scas
inc
push
retf
xor
pop
sub
icebp
in
movs
and
inc
mov
retf
fldl2t
adc
sub
mov
cld
cmovae
shl
div
jg
pop
and
fisttp
mov
mov
xor
(bad)
dec
out
sbb
mov
lods
stos
xor
mul
jmp
into
cmp
ins
fadd
cmp
lods
das
pop
in
lods
mov
aaa
or
mov
mov
push
mov
push
mov
add
fild
outs
int
dec
jnp
mov
fisub
scas
fcmove
ins
leave
mov
stos
popa
cmp
xor
jecxz
test
inc
repnz
sbb
sub
mov
push
pop
push
retf
add
sub
pusha
sbb
mov
xor
sbb
lds
xchg
push
ja
mov
jno
dec
jne
imul
adc
outs
jmp
inc
sbb
cmc
mov
fidivr
scas
jmp
rcl
mov
rol
out
sbb
cli
repz
inc
xor
jno
mov
jbe
fnstenv
fwait
sub
loope
aaa
mov
mov
jns
fxch
jge
clc
jl
mov
jle
push
aaa
pop
ret
adc
dec
jl
sar
out
cs
dec
jb
call
loop
aad
mov
push
aam
cwde
out
lea
int
cmps
xchg
leave
out
or
push
mov
inc
(bad)
arpl
scas
test
pop
and
or
div
std
xor
out
add
mov
enter
xchg
test
mov
icebp
(bad)
or
les
(bad)
(bad)
in
cli
or
pop
nop
dec
or
lock
test
jmp
dec
xor
dec
pop
leave
xchg
and
les
mov
dec
rep
mov
mov
xor
xchg
cmp
movs
push
push
and
jecxz
fild
xor
mov
adc
mov
mov
mov
cmp
inc
mov
mov
cmps
mov
mov
xor
fadd
pushf
ins
repnz
aam
push
mov
(bad)
sbb
add
lods
jmp
xchg
test
jbe
or
jnp
popa
mov
loop
call
retf
loope
pop
outs
or
jl
mov
sub
outs
fwait
push
ror
sbb
sbb
sbb
mov
in
xchg
lods
ja
mov
xchg
imul
inc
icebp
stos
stos
ror
stc
shr
pusha
sub
cld
lds
xchg
scas
rcr
sahf
jg
int3
test
pop
adc
mov
and
outs
jecxz
adc
mov
adc
pop
xchg
and
shl
or
push
retf
xor
fwait
rcl
xchg
push
test
adc
mov
les
sub
std
cmp
xlat
aaa
sub
out
mov
or
mov
xchg
lock
sbb
out
(bad)
out
ret
mov
stos
xor
mov
lods
into
mov
ret
add
push
jb
push
icebp
cli
push
aam
call
jge
pop
test
inc
(bad)
sbb
and
adc
jecxz
jnp
or
mov
sbb
mov
cmp
or
shr
mov
mov
movs
rcr
and
ja
ss
mov
xor
sub
stos
add
aad
shl
inc
jecxz
xchg
push
xor
and
jp
ds
xor
pop
mov
cli
fisttp
movs
jne
mov
sar
cmp
or
xor
jmp
loop
cmp
(bad)
sbb
mov
xor
stos
mov
mov
fs
adc
sti
xchg
test
xchg
(bad)
mov
aaa
ja
fsubr
loope
ror
xor
cmovl
popa
cmp
cmp
imul
adc
(bad)
mov
inc
xchg
fs
adc
repnz
in
push
xor
dec
(bad)
jmp
sbb
sti
retf
cmp
mov
out
jo
sbb
or
add
inc
sbb
stos
mov
popf
sub
adc
push
test
dec
mov
add
and
pop
hlt
mov
mov
hlt
lahf
adc
push
out
push
es
push
adc
jae
sub
data16
test
daa
push
stc
mov
jl
push
jns
lods
(bad)
pusha
sbb
ficomp
popf
nop
test
or
fnstenv
cmp
je
cmc
dec
dec
pop
bnd
cld
mov
movs
bswap
xchg
inc
in
mov
daa
in
jecxz
sbb
sbb
shl
frstor
mov
jns
imul
inc
fwait
push
jge
xchg
mov
js
xchg
xor
mov
scas
popa
iret
jle
aas
pop
push
xlat
mov
in
retf
retf
or
push
fmul
mov
inc
in
imul
call
cld
push
jmp
outs
sbb
cli
jns
add
jbe
lahf
movs
xchg
add
xor
inc
mov
in
scas
(bad)
pop
mov
and
adc
pop
ja
lods
and
outs
pop
xor
xchg
inc
and
pop
and
clc
mov
fistp
(bad)
(bad)
iret
mov
mov
dec
lock
sbb
sub
xchg
stos
mov
push
push
or
repz
fild
mov
test
mov
sbb
mov
(bad)
scas
in
adc
mov
push
mov
jl
call
in
and
sbb
dec
sbb
in
jge
cmp
jno
ins
push
dec
mov
add
int3
(bad)
jle
jmp
test
mov
ret
or
xor
test
stos
stos
ret
in
xchg
ret
das
cmovle
cld
jge
mov
jmp
mov
cmps
(bad)
jmp
xor
sti
or
movs
ficom
les
fbld
mov
push
repnz
aam
std
pop
idiv
or
pop
mov
sbb
out
pusha
push
pop
mov
jmp
pop
cwde
inc
lock
outs
sbb
xor
ror
scas
movs
pop
sbb
sub
add
and
aad
sahf
ret
shl
mov
xor
mov
fbstp
outs
iret
xchg
fmul
push
mov
retf
scas
stc
adc
jbe
jnp
(bad)
xor
test
inc
or
or
stos
(bad)
into
cwde
xchg
test
neg
pop
enter
cdq
sbb
inc
fwait
mov
push
xchg
xchg
repz
adc
lahf
and
dec
adc
(bad)
icebp
pop
aad
xor
call
pop
sbb
xor
xchg
loop
loopne
les
cdq
bnd
push
stc
cmp
dec
adc
sub
mov
mov
syscall
sbb
mov
pop
mov
xor
movs
pop
stos
in
add
jns
call
int
or
jg
outs
push
lea
push
es
repz
cmc
add
push
push
sub
sbb
sub
retf
push
pop
repz
sub
lock
ds
push
jns
xchg
ja
jo
and
out
pop
jns
jmp
outs
add
xchg
(bad)
ret
les
jno
pop
xor
int3
sub
mov
jne
retf
mov
mov
push
push
lods
out
out
sbb
xor
push
(bad)
call
out
add
xchg
sbb
in
jp
add
inc
adc
out
cmps
sub
addr16
int3
dec
call
push
inc
test
scas
or
fisub
or
mov
sub
repz
dec
in
rep
call
arpl
cmp
lahf
add
in
push
mov
shl
popf
xor
shl
test
repnz
sti
cdq
add
cmp
or
cdq
in
sti
inc
sub
mov
dec
inc
and
popa
outs
movs
lods
lods
stc
mov
dec
mov
and
aad
lds
mov
es
icebp
int
and
mov
jecxz
outs
inc
dec
hlt
dec
cmp
out
sub
cmp
fsubr
cs
lods
mov
push
test
cmp
dec
cmp
xlat
sar
mov
out
mov
movs
push
dec
loope
sbb
push
sahf
adc
dec
mov
sbb
or
popa
pop
mov
adc
pop
xor
xor
mov
lock
data16
xor
stos
arpl
push
loop
repnz
cli
shl
mov
arpl
icebp
push
push
dec
(bad)
sahf
jo
jae
outs
push
jp
(bad)
jae
jmp
xchg
mov
(bad)
inc
pushf
ja
xchg
clc
sub
push
(bad)
mov
add
jge
movs
test
jg
popf
jb
or
loope
test
cld
jne
xor
movs
stc
or
xchg
mov
adc
(bad)
fstp
out
add
or
ja
push
add
jno
jne
ret
test
pushf
jmp
mov
push
inc
mov
stos
inc
mov
inc
scas
ins
movs
sbb
stc
push
(bad)
pusha
icebp
cs
out
out
pop
imul
push
push
fmul
fstp
ja
adc
mov
jp
add
adc
mov
mov
pop
loopne
retf
push
or
loopne
loop
push
dec
test
cld
scas
outs
sbb
dec
aam
push
in
cmp
jecxz
inc
arpl
xor
push
add
xor
jl
lods
clc
xchg
dec
pop
test
leave
mov
jae
push
jo
dec
sti
sahf
add
mov
and
sbb
(bad)
js
repnz
mov
popf
mov
mov
sahf
add
scas
outs
scas
mov
cli
loope
and
(bad)
aam
test
ror
mov
test
cmp
push
push
lds
rcr
or
mov
push
sub
pop
or
outs
sub
popf
out
xlat
mov
lods
add
or
add
je
inc
out
and
fwait
push
sbb
ins
add
or
inc
test
adc
shl
jecxz
leave
jge
daa
in
lahf
mov
shr
cmp
cmp
push
movups
lods
xor
outs
aaa
and
mov
mov
mov
sub
sbb
adc
mov
ins
xor
scas
loop
jno
push
cwde
movs
push
int3
cmc
ins
in
pop
es
jmp
sti
scas
xor
cmp
loopne
int
cdq
loopne
aam
enter
mov
fnstsw
mov
dec
adc
add
mov
int3
xchg
mov
xchg
adc
(bad)
jae
test
repz
sub
push
xlat
pop
loopne
mov
jecxz
sub
test
cmps
xor
inc
sbb
add
je
dec
xchg
adc
xchg
dec
cmps
jo
int3
lods
lea
(bad)
or
lods
repz
repnz
nop
xor
test
repz
mov
sti
pop
cmp
inc
jmp
ficomp
fnstcw
pop
push
mov
clc
mov
mov
or
mov
cmps
dec
stc
mov
inc
(bad)
sub
or
add
mov
into
cmps
loopne
outs
mul
stc
cmp
ss
push
mov
ret
fisubr
xor
ror
mov
jae
cmp
cs
ficomp
jbe
int3
mov
adc
mov
out
out
jmp
rol
push
imul
lahf
cmp
fimul
pop
sbb
add
adc
cmc
sub
popf
lahf
mov
adc
icebp
ud1
xchg
and
ret
daa
addr16
popa
inc
stos
mov
mov
ds
pop
add
jmp
test
mov
fidiv
sub
retf
dec
or
cmp
jg
ja
cmp
in
or
cmp
fistp
popa
shl
fwait
mov
pop
dec
mov
xchg
(bad)
scas
jae
pop
xchg
loopne
cmp
adc
(bad)
jmp
jne
out
sbb
inc
jecxz
lods
mov
scas
inc
push
jp
fcomp
icebp
xlat
aam
xchg
ret
adc
and
addr16
sbb
cdq
or
retf
shl
add
cmc
mov
cdq
mov
es
jne
and
ret
imul
inc
jmp
push
xor
fdiv
adc
lea
add
in
arpl
xchg
mov
data16
jne
adc
repz
cmp
call
xor
jo
jbe
inc
or
test
(bad)
sbb
aad
scas
xchg
sbb
sahf
pop
pop
loope
dec
sub
inc
gs
and
cmp
fldenv
mov
sub
dec
jo
add
test
pop
fisttp
iret
call
xchg
mov
pushf
loop
jno
imul
iret
mov
adc
(bad)
data16
stos
push
add
dec
add
shl
push
int3
dec
js
xor
add
mov
or
and
cmp
jmp
jns
in
scas
xchg
lock
in
shr
inc
cs
adc
stc
xchg
xor
and
fisttp
in
jge
xor
sub
fnstcw
inc
xor
mov
(bad)
jns
adc
lock
repz
imul
pop
cwde
into
movs
les
inc
xchg
adc
js
push
addr16
cli
pushf
js
inc
ja
sub
mov
shl
jne
mov
sbb
jge
pop
mov
cmp
mov
sti
mov
cmpps
adc
mov
int3
sti
or
repz
cmp
mov
ds
add
xor
push
lods
aaa
jne
imul
jns
fisttp
test
xchg
cmp
cmp
push
pop
mov
jbe
(bad)
cmp
call
dec
lahf
jge
fnsave
popf
xlat
sbb
cmc
pop
mov
pop
dec
lea
mov
loopne
aas
and
into
icebp
int
dec
cld
adc
cwde
push
push
adc
xchg
cmp
shl
mov
or
dec
mov
xor
cs
in
adc
mov
sub
or
sub
sti
cmp
pop
fwait
sub
stc
xor
adc
or
or
fcomp
mov
enter
cmps
sub
inc
retf
add
stos
cmps
iret
fldcw
ins
mov
add
cmp
sti
or
mov
adc
inc
jge
sub
mov
push
adc
popa
dec
sub
popa
iret
inc
iret
dec
mov
out
out
push
or
shl
fcmove
fninit
sti
outs
or
push
mov
sub
push
enter
ror
lea
rcl
mov
push
push
cmp
out
cld
push
stos
jns
test
and
and
inc
stos
mov
stos
cmps
pop
(bad)
mov
mov
pop
mov
in
int
ins
rol
fild
fistp
cdq
mov
or
in
clc
inc
ss
mov
retf
xchg
pop
fwait
(bad)
arpl
xor
enter
fisttp
push
movs
rep
popf
fwait
sbb
mov
sub
call
hlt
dec
retf
out
and
ins
jle
add
push
sbb
fimul
add
mov
dec
sar
pusha
std
push
sbb
ins
jge
sti
inc
rol
out
pop
int
jnp
push
fisub
test
pop
mov
movs
push
(bad)
and
int3
xchg
sbb
or
dec
dec
ins
dec
cli
and
mov
shr
jae
shl
rcl
repnz
dec
aad
mov
cmps
cmc
add
int
mov
fstp
dec
jmp
outs
retf
int
adc
iret
jecxz
repnz
dec
push
pop
cmp
push
push
mov
cld
loopne
push
sbb
int
out
out
cmp
out
pop
jnp
ret
or
and
jae
into
or
movs
xlat
test
iret
sti
cmp
xlat
cmp
jnp
mov
dec
jecxz
add
xchg
xchg
dec
lahf
popa
js
cmp
int3
jle
sti
imul
mov
mov
cmc
push
and
xchg
push
dec
daa
int
cmc
call
rol
cmc
(bad)
cmp
mov
movs
std
arpl
sti
jmp
mov
adc
das
test
andnps
cmps
mov
fild
lods
mov
cmps
lock
pop
add
xchg
or
rcl
push
mov
push
les
or
mov
dec
loopne
mov
pop
imul
xchg
dec
ds
repnz
add
bound
adc
xchg
repnz
and
leave
cmps
push
int
xchg
cmp
arpl
stc
dec
lds
leave
out
retf
xor
mov
and
mov
xchg
jns
jg
dec
mov
jnp
arpl
(bad)
xor
ds
fisub
outs
(bad)
scas
fst
mov
cmc
repz
push
or
mov
mov
mov
push
hlt
cdq
retf
push
or
movs
push
jbe
lock
dec
jns
adc
dec
cwde
in
lea
pop
(bad)
jbe
sub
fwait
add
xchg
fsubrp
fidiv
cmp
jmp
cmp
jp
sub
or
mov
adc
jle
sub
popa
cwde
enter
cmp
or
lods
jge
push
movs
and
mov
cdq
gs
dec
nop
mov
pop
mov
adc
pop
in
jnp
(bad)
test
mov
pop
sub
test
and
push
daa
jns
cmp
shl
ds
scas
pushf
or
retf
pusha
cmp
imul
and
xchg
int3
loop
xchg
in
cmp
jge
les
mov
out
xchg
repnz
push
stc
cmp
shl
fadd
sbb
add
seta
add
add
pusha
hlt
or
punpcklwd
xchg
icebp
sub
lds
int
daa
mov
bound
loop
cmp
(bad)
test
or
add
dec
pop
ja
lods
out
sub
mov
or
dec
call
mov
push
and
adc
push
xchg
mov
mov
mov
out
cmps
retf
push
sub
dec
or
idiv
out
mov
sub
lahf
das
mov
cmp
push
xor
cmp
sub
xchg
mov
repz
add
push
cld
test
mov
sub
(bad)
sub
or
lds
mov
xor
or
inc
cmp
rcr
cmp
mov
sbb
push
mov
and
in
out
push
cmp
sahf
dec
xchg
adc
mov
mov
cmc
push
pop
mov
mov
in
icebp
or
jno
add
dec
ds
test
sbb
sub
fiadd
or
jb
in
lods
or
test
lock
mov
sar
sbb
push
sub
mov
xlat
inc
into
jbe
mov
aam
dec
cmp
pop
sub
xor
(bad)
jae
cmps
mov
xchg
xchg
addr16
inc
in
call
pop
inc
stos
test
inc
add
add
cmps
push
sbb
cs
(bad)
hlt
ret
lods
fmul
cs
pop
jmp
inc
pop
mov
ins
cwde
hlt
in
repz
adc
and
jge
pop
mov
jp
ins
xchg
test
in
mov
stos
arpl
ror
imul
jecxz
or
xlat
dec
std
or
call
nop
lods
mov
test
or
int3
add
lahf
daa
fadd
enter
lock
scas
inc
jmp
test
and
or
mov
call
cwde
cmp
jmp
jb
inc
je
dec
add
enter
add
test
div
in
adc
sub
aad
call
xchg
mov
sahf
dec
mov
das
mov
fcomp
jg
ins
mov
xor
add
aas
(bad)
fistp
jno
arpl
add
fsubr
scas
cmp
sti
daa
adc
test
cs
add
dec
cmp
in
enter
(bad)
fist
js
pop
ins
outs
ds
adc
push
push
sbb
push
je
cmp
fistp
xor
push
add
pop
mov
lahf
adc
fwait
cmp
mov
jbe
push
out
leave
mov
pop
xor
dec
dec
sbb
movs
repnz
xor
int3
call
clc
or
stos
outs
pop
mov
fistp
mov
mov
cmp
xor
mov
lock
jns
pop
sahf
inc
and
dec
cmc
enter
pusha
xchg
bound
loop
dec
loop
pop
popa
dec
inc
push
fwait
daa
lock
int3
sar
mov
mov
ins
(bad)
xor
loopne
add
mov
and
jb
lods
xchg
and
adc
mov
daa
ret
xlat
les
or
call
mov
add
(bad)
and
or
lock
mov
aaa
xor
in
popa
fidiv
push
stos
mov
cmp
add
xor
add
mov
loopne
pusha
aad
loope
cmc
cmp
iret
btr
sbb
clc
cmp
iret
into
add
dec
xor
stos
add
mov
pop
and
test
mov
jmp
xlat
push
fnstsw
jne
repnz
sub
es
outs
mov
sub
out
adc
imul
cmc
aad
cmp
add
retf
(bad)
ror
shl
sbb
retf
mov
mov
add
pop
pop
cmp
iret
repnz
test
mov
lock
mov
retf
ror
movs
dec
adc
mov
pop
and
sub
ror
mov
(bad)
mov
xor
push
call
mov
outs
pop
mov
mov
in
add
push
outs
stos
sahf
xchg
add
jg
imul
xor
rcl
xchg
fs
vpaddq
rol
mov
xchg
mov
fs
cmc
mov
mov
movntq
hlt
jo
out
cmp
jae
add
ja
ficomp
movs
fs
jmp
adc
call
fbstp
out
pop
sbb
adc
xlat
int3
retf
out
mov
js
push
cmp
sub
outs
into
ss
xchg
movs
fldcw
dec
dec
dec
pusha
push
mov
pop
shr
nop
push
add
(bad)
lods
ins
shr
jb
mov
sub
mov
cmovp
out
sbb
shl
mov
in
mov
push
inc
sub
mov
(bad)
sub
jne
repnz
ins
test
dec
pop
adc
pop
das
ins
add
outs
dec
test
pop
stos
outs
es
mov
(bad)
enter
push
jne
pop
mov
out
jecxz
cld
mov
jno
xlat
add
int3
and
and
push
sti
xchg
dec
sub
stos
movs
xchg
test
fwait
repz
push
mov
push
out
shl
xchg
xchg
jl
xchg
mov
out
xchg
dec
push
aam
jne
sbb
clc
inc
jp
(bad)
pop
repz
sub
inc
push
call
shr
mov
fld
test
in
pusha
add
pop
push
xor
fidivr
and
dec
scas
jp
xchg
sub
hlt
iret
popa
jns
icebp
call
mov
push
inc
inc
jo
inc
sahf
ins
push
inc
adc
xchg
(bad)
or
add
jns
xor
push
mov
scas
dec
xchg
push
inc
loop
mov
leave
or
aad
mov
test
retf
out
or
or
in
mov
jns
adc
lahf
push
xchg
mov
repz
jp
je
(bad)
cmp
rol
jmp
mov
mov
jo
or
cmp
inc
pop
test
pop
mov
scas
mov
cmp
ds
jl
cmps
adc
mov
js
(bad)
icebp
add
adc
popf
dec
sub
sub
mov
and
stos
mov
add
(bad)
and
inc
(bad)
mov
push
clc
outs
fdivr
cs
push
cs
shl
and
mov
and
test
repz
adc
jae
mov
mov
jmp
addr16
dec
iret
push
and
push
jns
fs
fs
mov
fs
push
dec
pop
test
mov
cmp
in
jnp
dec
dec
pop
or
adc
adc
jne
cmc
mov
cdq
push
int3
test
retf
bound
jp
adc
cs
sbb
sbb
js
pop
daa
les
xchg
cmp
push
and
addr16
retf
xchg
push
sub
jl
cs
(bad)
cmp
mov
fs
push
and
movs
mov
pop
adc
cmps
movs
dec
inc
outs
xchg
into
je
ss
xchg
adc
cmp
cwde
mov
pop
push
push
mov
sub
cmp
mov
fwait
aam
fmul
faddp
dec
popa
outs
leave
les
sbb
dec
hlt
and
loopne
pop
mov
mov
mov
mov
mov
ja
lock
sub
pop
fwait
sbb
ss
mov
cdq
cmp
adc
xchg
sbb
dec
arpl
xchg
xchg
mov
fisttp
pop
mov
inc
jle
dec
push
push
sbb
xor
mov
jae
mov
stos
pop
xor
(bad)
mov
jmp
cwde
pop
pushf
sahf
push
inc
jnp
mov
and
retf
fbstp
mov
popf
lods
call
inc
(bad)
jmp
adc
xchg
cmps
adc
xor
mov
xchg
psubb
sub
neg
pop
(bad)
add
sti
push
lods
test
iret
leave
or
push
cmp
call
and
dec
(bad)
(bad)
mov
cwde
inc
pop
push
neg
ficomp
and
in
pop
mov
imul
mov
inc
lea
jmp
test
imul
dec
ret
shl
jmp
xchg
sar
punpckhdq
in
imul
jmp
jmp
cmp
fdiv
sub
pop
mov
lock
cmc
dec
jmp
push
cdq
add
into
jecxz
jp
std
pusha
mov
mov
inc
jge
xchg
popf
dec
iret
mov
sbb
pop
mov
add
sub
(bad)
mov
sahf
sbb
in
lods
rol
mov
cmp
popa
ins
ds
cmp
ficom
mov
pop
pop
adc
push
inc
lds
scas
dec
in
je
ret
(bad)
arpl
rol
mov
rcr
test
(bad)
sub
jge
imul
inc
in
mov
xor
call
xlat
mov
inc
or
gs
pop
push
adc
sub
outs
fwait
mov
jl
mov
jmp
mov
sub
or
gs
pop
pop
push
push
(bad)
mov
adc
js
daa
xor
test
jle
stc
fwait
xchg
cmp
xchg
adc
jno
sbb
mov
scas
xor
xor
ins
dec
xchg
jle
mov
xchg
pop
inc
inc
outs
sub
cmp
mov
fldcw
sbb
enter
cdq
adc
(bad)
pshufw
dec
pop
pop
lock
mov
push
sbb
mov
dec
loop
mov
adc
push
stos
outs
jo
mov
sub
iret
lahf
jmp
fistp
adc
mov
xchg
and
adc
test
mov
cmp
stos
icebp
jb
(bad)
enter
mov
out
cmc
test
fwait
jmp
adc
sub
push
(bad)
out
rcr
xor
shl
cwde
mov
(bad)
inc
pop
in
sub
inc
outs
mov
outs
mov
push
xchg
sub
clc
cwde
xchg
test
jg
lea
repnz
repnz
ds
sti
cmp
je
pop
arpl
call
mov
xor
ins
dec
pushf
aam
enter
jecxz
(bad)
loopne
in
push
and
js
cmps
and
cmp
jo
xlat
pop
lods
or
test
mov
aaa
retf
adc
out
adc
(bad)
ins
sar
rcr
jge
and
dec
or
pop
or
test
push
pushf
mov
sbb
inc
fisubr
repz
call
test
aad
lea
mov
popf
fstp
das
daa
jo
adc
inc
xor
jae
mov
adc
or
ins
cli
pusha
test
stc
das
mov
jmp
cdq
mov
xchg
clc
nop
ins
sub
aad
mov
inc
mov
fild
js
add
int
xchg
mov
jmp
out
int3
sbb
push
fistp
mov
out
mov
mov
cmp
pop
cmp
addr16
mov
mov
inc
and
pop
jg
mov
jmp
pushf
(bad)
cmps
dec
aas
xchg
sbb
xchg
pop
out
sub
dec
jb
cld
inc
mov
stos
bound
pusha
popf
mov
je
jns
push
xchg
dec
lea
(bad)
jb
lods
or
nop
push
jmp
pop
dec
call
mov
jg
popf
mov
dec
mov
ins
push
mov
pop
in
jmp
sti
rol
sub
pop
push
and
add
or
sub
aam
xchg
xor
je
and
add
pop
imul
data16
movs
arpl
jbe
pop
retf
or
das
push
lods
ret
ds
or
ds
addr16
rol
jo
cmps
xchg
in
nop
sbb
cmp
cmps
mov
sbb
arpl
mov
pop
mov
jp
and
movs
sub
xor
dec
rcl
jle
data16
push
cdq
pop
push
add
fsub
retf
cs
mov
shl
inc
cmp
test
jnp
mov
sub
nop
movs
mov
dec
jecxz
sbb
mov
mov
mov
xchg
add
lods
mov
stos
or
lea
push
sbb
sbb
stos
hlt
xor
aaa
sub
or
or
scas
jns
adc
js
push
pop
sbb
and
cmp
imul
cmc
xchg
mov
cld
cmp
movs
(bad)
out
ret
mov
xor
adc
lds
fidivr
inc
scas
jle
and
dec
jno
cwde
pusha
xchg
out
ror
rcl
mov
sbb
cmp
iret
xor
push
pop
lahf
add
pushf
outs
xor
outs
mov
xchg
aaa
add
inc
retf
lahf
mov
out
mov
xor
aam
retf
cmp
mov
mov
imul
cmp
bound
xor
dec
mov
mov
or
cmp
add
and
pop
jge
bound
ror
leave
pop
xor
mov
cmp
movs
dec
sbb
pop
stos
dec
jb
pop
and
mov
adc
fild
adc
movs
cdq
inc
sbb
es
test
inc
add
rcr
mov
add
pop
pop
add
inc
add
xchg
fst
push
mov
dec
stos
cli
retf
mov
jmp
test
sub
mov
push
imul
icebp
adc
addr16
fldcw
add
adc
test
cwde
(bad)
xlat
dec
cld
xchg
outs
mov
ds
mov
cs
cmp
popa
jecxz
(bad)
sub
dec
jne
xlat
cmp
ja
out
(bad)
div
aaa
mov
jno
mov
xchg
lock
mov
in
or
popfw
xchg
sub
cmp
pop
cmp
(bad)
mov
adc
pop
jbe
aad
and
push
cwde
mov
and
xchg
pop
dec
out
aad
add
or
imul
adc
es
adc
js
inc
dec
mov
jmp
jnp
leave
test
mov
lods
xor
popa
mov
add
outs
pop
jmp
fisttp
inc
xlat
ret
mov
sbb
xlat
or
outs
jbe
jbe
movs
cmp
push
mov
shr
and
mov
mov
loopne
and
xchg
sub
cld
bound
jg
dec
cs
ins
movs
pop
bound
and
test
bound
xor
test
push
mov
jnp
inc
imul
movs
mov
mov
inc
push
or
popa
push
and
cwde
ret
add
rol
test
in
retf
pop
sbb
stos
mov
cmp
sub
jo
ret
repz
mov
scas
movs
std
sbb
xor
and
jp
rep
pop
mov
push
ret
inc
mov
into
cmps
in
mov
or
lea
inc
test
mov
into
and
gs
scas
xchg
adc
push
add
ds
ds
dec
out
jnp
pop
xor
cdq
call
mov
shr
push
mov
add
imul
int3
leave
in
pop
outs
movs
int
es
or
jecxz
sbb
and
cmp
and
jl
scas
mov
push
fs
jae
jno
dec
jb
or
ret
fbld
pushf
mov
(bad)
dec
inc
mov
mov
or
sbb
xlat
dec
and
push
shr
(bad)
mov
mov
cli
ret
push
pushf
sti
adc
ds
stos
mov
mov
inc
stos
xor
ror
mov
lds
cs
fdiv
inc
add
dec
div
mov
stos
pop
mov
mov
scas
pop
call
cmp
shr
xor
test
jae
clc
fdivr
mov
jb
xor
mov
jg
iret
sbb
sti
and
cmp
pop
jecxz
xor
outs
dec
pusha
push
sti
inc
jnp
jmp
test
push
test
in
shr
add
cmp
lahf
(bad)
int
jbe
pop
mov
lahf
mov
loop
xor
pop
movs
mov
loop
fist
adc
inc
adc
(bad)
push
and
xor
add
xor
cmp
cli
cdq
(bad)
fucomp
push
rol
sahf
sbb
pop
ja
xchg
int3
xchg
jbe
jp
mov
push
mov
(bad)
mov
mov
mov
es
into
cmp
enter
mov
jge
sub
out
dec
and
adc
xor
pop
retf
lods
or
inc
fstp
fdivr
add
or
mov
pop
inc
in
xor
stc
cld
mov
sbb
sub
inc
shl
pop
leave
add
fild
gs
or
lods
jp
xor
cmc
repnz
jl
jbe
daa
hlt
fnstcw
int
mov
iret
mov
rcl
out
mov
or
(bad)
xchg
leave
jbe
xchg
inc
sbb
or
sbb
scas
movs
cmp
mov
pop
push
dec
cmps
mov
jecxz
mov
push
test
stc
dec
int
push
push
movs
les
xchg
xchg
dec
lahf
nop
mov
out
outs
outs
in
inc
and
mov
imul
cmp
cs
aam
out
mov
(bad)
shl
dec
xlat
jnp
imul
scas
mov
ret
xchg
jmp
fstp
cmp
leave
mov
je
jmp
sbb
jge
jmp
fldenv
cmp
jo
and
sub
pop
xchg
mov
push
popa
jb
inc
mov
mov
lds
xor
cmp
mov
jne
dec
stos
mov
cmps
mov
fimul
push
jmp
addr16
outs
mov
and
xchg
cmp
dec
clc
lahf
mov
jno
fsubr
sahf
retf
int3
mov
ret
(bad)
jg
xchg
xor
inc
xlat
out
mov
mov
movs
movs
and
sar
add
addr16
mov
cmp
mov
sti
sbb
int
push
adc
repz
xchg
sub
xchg
xchg
cli
outs
mov
mov
jmp
push
mov
js
mov
push
shl
xchg
test
push
adc
sbb
popa
dec
aaa
aad
(bad)
fistp
cmc
add
popf
push
enter
inc
pop
xchg
mov
add
add
adc
movs
(bad)
shr
ret
jns
mov
sub
push
clc
rcr
jo
xchg
and
test
sti
je
fnsave
sbb
imul
outs
xchg
mov
jle
add
das
loope
xchg
aaa
enter
call
repnz
mov
inc
es
das
xor
jmp
movs
mov
pop
popa
jmp
xchg
mov
xchg
mov
bound
adc
xchg
jecxz
(bad)
test
mov
js
pop
jp
stc
cmps
repz
inc
ss
and
xchg
add
pusha
xor
jno
jns
jl
cwde
sub
sub
jno
mov
mov
mov
adc
call
lea
rol
xor
scas
ret
aad
mov
cld
int
add
mov
inc
dec
fstp
icebp
jge
sar
in
push
sbb
std
push
lahf
(bad)
les
sbb
mov
fld
jecxz
addr16
mov
mov
shl
mov
mov
aam
mov
adc
push
ret
addr16
outs
add
add
lock
sbb
(bad)
sbb
mov
inc
imul
test
loopne
pop
mov
leave
stc
add
dec
and
jae
les
xchg
cmp
aaa
xchg
cmp
jmp
(bad)
dec
xor
pop
loopne
mov
retf
movs
lds
je
push
or
mov
xor
test
das
dec
sbb
adc
fst
cmps
std
rol
loop
dec
xchg
or
xchg
push
add
outs
ss
movsx
popf
fisttp
mov
scas
out
or
lods
push
in
push
je
or
in
mov
shr
add
fdiv
jo
sti
cmp
cmp
js
pop
lahf
cli
mov
(bad)
out
daa
mov
mov
dec
add
std
push
mov
out
dec
adc
mov
jno
mov
and
or
mov
lods
arpl
and
xchg
jg
or
sub
out
push
jae
sbb
sub
loope
enter
push
mov
enter
sar
stos
pop
sbb
cmp
inc
popa
repnz
push
aam
push
jp
pusha
add
dec
jb
inc
int
repz
ret
hlt
test
test
dec
mov
(bad)
call
repnz
dec
gs
inc
movs
sub
imul
mov
lock
ins
je
xchg
(bad)
cmp
ins
or
sahf
rol
and
sub
mov
or
inc
xchg
mov
sbb
arpl
outs
jmp
test
xor
ins
jb
int
stos
sbb
xchg
fs
mov
out
out
xor
mov
adc
pop
and
fwait
aad
retf
push
push
add
mov
pop
pusha
cld
xor
cmc
sbb
test
push
test
and
lods
popa
retf
dec
sub
lds
std
lock
das
aaa
sub
lods
fsubr
pop
mov
and
mov
(bad)
sti
std
stos
jne
pop
cmp
mov
mov
(bad)
lock
lds
mov
ror
and
jl
mov
pop
frstor
test
push
popf
es
bswap
rcr
fidivr
popa
aas
mov
outs
sub
lds
jp
adc
ficomp
jnp
inc
jecxz
cwde
jle
imul
mov
out
add
std
add
enter
in
or
jbe
adc
jno
daa
pop
fisttp
jge
mov
sub
jno
imul
or
sbb
nop
mov
ins
mov
and
rcl
adc
sbb
cmp
jge
repz
and
loope
xchg
mov
ret
push
adc
push
(bad)
mov
jbe
xchg
je
clc
dec
popf
retf
cli
sbb
push
(bad)
and
jmp
daa
pop
shl
mov
jne
and
cs
cmps
inc
shr
xor
mov
adc
mov
pop
pop
imul
xor
sub
jne
das
and
imul
mov
loope
mov
sbb
add
icebp
inc
inc
mov
xchg
mov
lahf
xor
retf
sbb
enter
push
sub
rol
stc
mov
xchg
dec
lds
js
adc
mov
sahf
and
sahf
test
mov
mov
mov
pop
mov
cli
adc
push
cmc
outs
jns
(bad)
scas
sub
dec
jl
cmp
pushf
jnp
es
jb
xor
cmps
push
aam
into
lock
pushf
inc
std
adc
inc
push
mov
sub
cmp
fcmovnu
jnp
test
xor
in
mov
pop
pop
sbb
dec
mov
outs
and
scas
xlat
adc
sbb
mov
fs
dec
ins
sub
(bad)
and
(bad)
je
cmps
cmps
inc
popf
push
jmp
ror
push
leave
pop
push
add
dec
adc
mov
into
retf
inc
repz
cmp
add
out
jmp
pop
sbb
mov
adc
mov
xor
fstp
hlt
(bad)
lods
pop
push
lods
sbb
icebp
inc
iret
pop
out
stos
aam
or
add
mov
in
daa
add
in
jae
push
dec
or
outs
push
mov
pop
mov
pop
xor
mov
popa
sub
xchg
ret
xor
pop
cld
pop
push
cmp
push
test
fcomp
je
xchg
pop
cmp
mov
pop
movs
not
push
fsubr
movs
pop
mov
sub
jge
xlat
cmp
rcl
imul
hlt
inc
sub
jns
cs
mov
fisttp
jp
adc
fwait
(bad)
repnz
icebp
scas
repz
iret
cwde
jle
push
out
pop
sbb
cdq
test
pop
mov
pop
push
push
test
push
ins
pop
scas
sbb
ja
in
das
out
mov
test
cmc
inc
pop
(bad)
cmp
arpl
push
mov
add
cmc
push
outs
jmp
jg
xor
push
sbb
or
push
adc
jnp
add
sar
adc
or
ror
out
cmc
call
arpl
xor
inc
fs
jmp
dec
ja
or
cmp
dec
loopne
push
push
inc
xor
sub
cmp
dec
int3
repz
pop
rol
out
mov
inc
cmp
add
and
in
push
xchg
fidivr
stos
lea
cdq
gs
jne
loopne
ret
pop
cmp
xchg
adc
xor
aam
or
clc
ins
loop
jne
jno
jne
adc
add
adc
and
ret
sbb
shl
and
inc
sub
fucom
repnz
xor
fsub
push
xor
jb
hlt
leave
lock
mov
cld
pop
test
xchg
mov
scas
add
jle
nop
bound
mov
xchg
sub
lock
(bad)
adc
mov
or
adc
test
jecxz
pop
pause
mov
pop
or
push
call
mov
push
cmp
movs
mov
mov
daa
push
out
or
loopne
sub
add
mov
push
in
push
inc
gs
sub
sbb
push
inc
and
xor
mov
and
nop
add
mov
jmp
rol
dec
and
cdq
pop
pop
sbb
int3
fcom
add
lock
jmp
and
sti
ror
mov
pusha
push
imul
or
jns
int3
pushf
ror
adc
test
or
or
dec
cmps
mov
arpl
cmps
sbb
adc
int
in
out
sbb
cmc
sub
in
lock
xchg
movs
fxch
mov
test
pop
daa
pop
cmps
popf
jle
lds
icebp
sbb
jmp
or
dec
dec
jl
ror
scas
add
std
adc
jae
adc
fisttp
xchg
aad
add
xor
cmp
mov
je
cmps
sbb
cmp
popf
xor
push
mov
ficomp
or
js
inc
jg
popf
hlt
iret
inc
bnd
xor
xchg
sub
sbb
mov
push
ss
mov
repz
in
das
add
jae
dec
lods
test
jmp
xor
jne
sbb
xor
repnz
mov
out
xor
repnz
adc
popa
addr16
sub
mov
sub
mov
or
repz
jmp
rol
out
or
ja
ret
call
out
cli
dec
aad
mov
js
adc
aas
mov
mov
sbb
(bad)
adc
add
mov
xchg
mov
rcr
mov
mov
popf
cs
push
imul
mov
push
das
add
out
sbb
pushf
sub
shl
fdivrp
sub
stc
xchg
cmp
leave
(bad)
jnp
cmp
js
xchg
sub
(bad)
das
sub
ret
cmp
pop
rcr
mov
xor
mov
icebp
adc
pop
(bad)
(bad)
mov
(bad)
addr16
mov
stos
cmps
shl
cmp
retf
add
jae
lea
dec
inc
push
dec
enter
sahf
std
mov
push
inc
stos
(bad)
lea
je
xchg
add
mov
add
jmp
fs
sbb
jg
ja
mov
inc
cdq
and
jns
jle
cwde
cwde
jns
iretw
gs
add
fcmovu
jmp
jmp
and
mov
scas
fwait
into
mov
xor
xadd
cmp
retf
dec
pop
call
jno
inc
adc
mov
mov
or
(bad)
xchg
(bad)
ficom
arpl
into
div
pop
sbb
aas
jae
inc
and
sti
outs
pop
or
lods
ss
dec
or
add
inc
jp
iret
inc
fisubr
cmp
mov
push
mov
retf
inc
ret
imul
add
push
sbb
mov
shr
les
jg
into
loop
repz
inc
fsub
jmp
cmps
jle
call
jp
pop
adc
mov
dec
shl
add
jnp
push
mov
push
and
mov
test
add
cmp
dec
fcomi
shl
sub
mov
cmp
ds
call
mov
stos
jno
xchg
lock
inc
int
test
mov
rcr
in
pop
xchg
xchg
(bad)
add
aam
stos
jo
pop
mov
test
pop
cmp
push
test
scas
push
xchg
fisubr
xchg
addr16
daa
mov
enter
enter
shl
out
cmp
aaa
push
xchg
adc
adc
inc
mov
and
cld
push
jmp
stc
cwde
retf
out
cmps
add
or
scas
fidivr
or
div
pop
jp
mov
mov
sti
or
test
xor
fxsave
push
push
das
fistp
xor
pop
sub
pop
call
shl
dec
jmp
push
out
cld
xchg
in
clc
adc
das
or
je
cmp
mov
(bad)
mov
sar
xchg
dec
fwait
in
sub
jp
or
retf
xor
popf
int3
loope
repz
jg
mov
push
cmp
sub
pop
ins
xor
iret
clc
and
and
rol
adc
retf
into
dec
jne
stos
mov
or
in
stos
popa
mov
xchg
outs
mov
repz
add
sub
adc
mov
add
sbb
mov
adc
adc
xor
mov
xchg
cmps
test
out
ins
sbb
lods
push
sub
jb
sar
push
cs
call
xchg
and
or
cmc
mov
cmp
dec
jae
std
dec
mov
mov
sub
sbb
in
ss
jno
xlat
sub
repz
lds
xor
into
sbb
jno
fdiv
fsub
inc
mov
fsincos
add
inc
pusha
push
and
fstp
lods
add
and
sbb
add
outs
sub
add
fild
mov
or
cld
jmp
xor
dec
jp
pop
call
cmp
arpl
sbb
dec
jae
cwde
addr16
out
jl
push
neg
xchg
mov
cmps
pmullw
js
mov
cwde
add
pop
fiadd
mov
dec
mov
cmp
dec
jmp
mov
jmp
add
push
ds
dec
sar
xchg
push
fisubr
loop
cmp
sbb
fld
imul
xchg
cmp
and
lods
jmp
push
fwait
add
or
mov
sbb
gs
add
adc
jo
jo
xchg
and
sahf
pop
adc
push
xorps
jo
jmp
stos
icebp
sub
cmps
cmp
sub
sbb
mov
js
sub
push
mov
aas
and
adc
push
out
test
mov
in
xor
inc
sti
sub
inc
sbb
fldcw
test
or
loopne
pop
std
sti
inc
jmp
neg
mov
retf
in
or
cmps
ret
adc
fcomp
inc
retf
ins
icebp
lock
stos
int3
aaa
lock
jmp
mov
iret
inc
(bad)
hlt
xchg
ss
mov
push
sub
push
pop
cld
ret
imul
loopne
xchg
xchg
mov
xchg
jmp
adc
add
ins
sbb
push
mov
xchg
jae
pushf
mov
pop
movs
xchg
pop
sub
sub
pushf
jp
cmp
pusha
popa
rcl
adc
mov
pop
cmps
js
adc
(bad)
fucomip
mov
into
sbb
je
cld
inc
nop
mov
imul
arpl
fisub
xchg
pushf
mov
jge
jge
jge
pop
sub
xchg
scas
cld
mov
imul
sti
inc
cmp
dec
add
adc
mov
inc
jp
mov
mov
pop
or
sbb
addr16
jl
mov
fiadd
dec
mov
xchg
cmp
pushf
popa
stos
xchg
adc
(bad)
sub
mov
sbb
test
scas
mov
add
ds
mov
mov
gs
stos
pop
and
pop
adc
xchg
mov
pop
int3
push
xor
dec
adc
mov
js
aas
jecxz
dec
out
jmp
pop
jbe
or
push
lods
fild
retf
xor
clc
inc
cs
xor
dec
popa
out
les
fsubr
popa
sub
sbb
fcom
mov
inc
(bad)
mov
xor
inc
pop
je
sti
adc
cmp
push
dec
(bad)
inc
fsubr
mov
xchg
daa
in
add
stos
in
push
jg
and
cwde
call
int3
jl
xor
stc
lea
lods
mov
jbe
ror
mov
mov
stos
in
sub
lods
xor
addr16
shl
(bad)
loope
out
adc
fnstsw
std
shl
cdq
push
fst
pop
cwde
cmp
cmp
add
or
jbe
xchg
mov
fisttp
cmps
jnp
pop
push
inc
and
mov
pop
jg
dec
inc
adc
int
push
and
push
stos
fyl2x
inc
retf
xchg
les
jmp
cs
icebp
mov
jnp
fmul
rep
or
in
mov
add
int3
xchg
sub
mov
mov
movs
inc
mov
fmul
sub
lock
jae
jecxz
xchg
test
(bad)
cmp
adc
cmps
dec
mov
xor
pop
call
sub
and
mov
cmp
leave
mov
es
je
shl
lods
movs
push
mov
jne
jno
popf
push
adc
mov
jo
mov
test
xor
lock
test
push
nop
or
mov
faddp
getsec
adc
mov
popa
dec
(bad)
out
cmps
sub
cmp
xchg
shl
popa
imul
or
mov
fadd
ss
adc
sahf
xor
loopne
push
pop
retf
enter
popa
retf
nop
add
and
scas
jmp
in
and
nop
repnz
shl
cli
mov
in
test
dec
jmp
int
loope
jp
lods
mov
fs
(bad)
in
pop
in
cli
dec
int
add
out
mov
out
and
repz
scas
out
adc
xchg
mov
frstor
sub
mov
test
dec
jnp
mov
adc
adc
and
les
mov
mov
push
adc
loope
xchg
pop
aaa
in
adc
or
pusha
nop
daa
cli
aad
ja
fsub
pop
inc
pop
mov
paddsw
xchg
xchg
inc
(bad)
mov
(bad)
lods
ss
fcomp
pop
in
not
jg
mov
enter
xor
ins
aas
cmp
arpl
push
inc
js
mov
mov
daa
xchg
xchg
mov
sar
div
cld
inc
jns
push
scas
addr16
adc
xor
pop
add
mov
pop
adc
add
mov
xchg
mov
loope
mov
inc
xlat
jmp
cmp
fist
push
mov
sar
ja
std
in
(bad)
dec
mov
enter
pop
sbb
arpl
sbb
out
lahf
push
add
stos
xchg
or
jb
(bad)
mov
out
inc
stos
jb
fcmovnbe
mov
cmp
sti
xchg
add
lahf
jp
mov
jmp
xor
fidivr
neg
stc
in
mov
fist
imul
arpl
scas
ret
fisttp
xchg
cs
shr
cmps
sub
shl
or
push
mov
push
movs
xchg
jnp
inc
mov
jb
pop
(bad)
(bad)
fdivr
retf
mov
cmp
(bad)
jo
push
adc
mov
or
or
pop
adc
xchg
fild
adc
sbb
aam
retf
(bad)
jno
lahf
lock
popf
shr
xadd
mov
jl
test
push
cmp
jmp
mov
xchg
jl
dec
retf
xor
ret
sbb
push
popa
inc
push
and
aas
cmps
or
rcr
dec
inc
out
clc
pushf
lods
mov
and
add
inc
push
icebp
(bad)
pop
das
cwde
mov
aam
(bad)
mov
daa
rcr
fwait
mov
dec
ret
xchg
out
ret
ret
push
scas
adc
dec
mov
cmps
das
shr
xchg
push
mov
sbb
push
lods
cld
sti
rcl
aas
call
sti
pusha
xor
or
idiv
push
or
push
fcom
mov
daa
stos
push
retf
retf
outs
outs
bound
xchg
dec
xor
dec
adc
push
jmp
or
and
jmp
or
dec
cmp
movaps
test
ins
xor
jecxz
jg
fstp
(bad)
xor
mov
shl
mov
sbb
and
cmp
adc
movs
mov
xor
cmp
add
aam
xchg
mul
ja
jge
aam
les
sti
lods
push
fwait
sbb
sbb
out
lea
push
xchg
into
inc
nop
dec
jl
out
sbb
jb
add
inc
cli
ins
cld
mov
dec
lea
ins
mov
in
sar
sti
aam
adc
cmp
mov
lods
jg
sahf
push
pop
mov
gs
mov
lods
loop
xchg
rol
test
addr16
les
cwde
das
xchg
mov
(bad)
cmp
neg
mov
xchg
out
inc
ja
mov
call
or
pusha
inc
popa
ins
push
adc
pop
js
xor
mov
idiv
jmp
call
xchg
mov
cmp
sbb
ror
imul
mov
mov
addr16
daa
fwait
call
sub
into
xchg
aam
clc
cmps
jl
mov
xchg
mov
fmulp
jp
shl
cli
fimul
cmp
shr
cld
(bad)
cmp
inc
(bad)
fwait
push
(bad)
dec
call
pusha
sbb
popf
ja
mov
push
das
cmps
mov
data16
les
inc
fbld
add
cld
xchg
cmp
in
sbb
cmp
cmps
push
out
scas
or
popa
jle
cdq
jg
ins
dec
aas
add
out
cmc
outs
xor
xchg
or
sbb
int3
push
xchg
adc
xchg
fimul
popf
mov
fimul
ins
mov
call
call
xchg
ins
or
loope
sub
shl
sbb
fiadd
mov
enter
and
ins
inc
push
push
inc
add
mov
sahf
loope
movs
imul
or
inc
pop
jns
sbb
stos
clc
adc
(bad)
push
enter
add
in
cmp
adc
sahf
pop
pop
dec
mov
pop
popf
jmp
push
jge
or
ror
jbe
sbb
icebp
outs
jge
sub
fs
int
push
loop
mov
and
jl
mov
loope
les
or
rcl
xor
cli
out
movs
pusha
mov
call
or
xchg
mov
sbb
add
xchg
sub
jp
scas
jne
or
sbb
stos
test
and
call
cwde
mov
mov
ret
pop
pop
(bad)
ror
idiv
push
lahf
out
dec
test
mov
data16
movs
int
pop
adc
jns
add
je
push
sub
sahf
jne
adc
push
adc
dec
jmp
data16
popa
adc
inc
ss
pop
xlat
pop
test
stos
xchg
pushf
or
adc
ins
call
inc
jmp
sbb
out
stos
dec
dec
adc
cmps
and
adc
stos
mov
ins
or
(bad)
jp
jns
adc
arpl
xor
ja
pop
fild
sti
aam
fsubr
test
out
je
jno
mov
ins
(bad)
cli
or
int3
and
adc
add
push
dec
and
cmc
test
push
sub
pusha
out
adc
int
pop
jecxz
(bad)
mov
xor
movs
xchg
outs
xor
mov
mov
arpl
in
(bad)
jg
adc
xchg
mov
cld
mov
repnz
shl
push
sbb
lds
dec
repnz
test
js
push
loopne
into
jne
gs
push
ja
fist
(bad)
outs
or
(bad)
cmp
cmp
nop
ins
mov
sbb
imul
sub
loope
inc
xchg
ds
xchg
outs
dec
mov
mov
inc
ficom
jnp
sti
fwait
jle
adc
fsubrp
pop
lahf
cwde
jmp
sub
dec
fldcw
jl
loope
into
sbb
push
test
(bad)
repnz
pop
dec
clc
jno
adc
xor
je
nop
mov
xchg
jle
mov
clc
in
and
add
inc
imul
jp
test
cmp
mov
fisub
(bad)
in
imul
arpl
fcomp
mov
mov
mov
mov
jp
push
mov
sbb
push
inc
mov
or
and
mov
idiv
pop
jnp
mov
xor
xchg
push
jg
add
aaa
adc
(bad)
mov
and
push
push
ins
scas
in
call
xchg
mov
loop
inc
movs
daa
enter
iret
inc
mov
push
xor
mov
xchg
or
xchg
icebp
adc
jo
mov
in
aam
dec
stc
adc
and
stos
mov
aam
mov
ror
div
out
movs
ror
in
dec
repz
sub
mov
dec
adc
shl
loope
pusha
cld
test
test
add
jae
ret
inc
test
add
aam
add
mov
mov
push
xchg
div
push
xchg
jl
(bad)
mov
movs
adc
push
pop
xor
nop
nop
ret
fmul
inc
icebp
inc
das
retf
mov
push
les
not
test
push
sbb
push
ds
gs
mov
pushf
rol
imul
dec
movs
repz
adc
stc
add
out
adc
imul
push
ins
dec
pop
scas
scas
push
bound
ins
lds
pop
sub
es
mov
ins
and
imul
sub
fs
lods
mov
pop
push
in
xchg
aas
cli
out
ror
out
ja
leave
ficomp
mov
std
cmp
jecxz
cmp
sbb
push
jno
mov
loopne
in
fucomi
iret
or
mov
sbb
data16
pop
int
mov
sbb
stos
adc
cmc
mov
sti
push
push
mov
(bad)
or
sar
jae
pop
pop
sub
add
jmp
sub
mov
movs
dec
mov
out
rol
icebp
inc
push
mov
xchg
ffreep
mov
hlt
retf
xchg
test
out
pop
add
push
push
addr16
push
(bad)
call
mov
nop
sar
push
push
test
jae
jnp
call
xor
and
aaa
loop
mov
jle
in
bound
icebp
mov
fisttp
ffree
test
daa
jno
sbb
and
rcr
jg
pusha
jle
stos
leave
cli
pop
jnp
xchg
loopne
sbb
dec
add
dec
bound
addr16
popa
rcr
cmc
mov
cmps
jb
xor
repz
inc
popf
(bad)
loopne
movs
push
jns
or
push
test
std
xchg
jge
out
mov
int3
nop
dec
outs
push
ret
sub
jnp
push
inc
sbb
sbb
sahf
addr16
(bad)
shr
fs
(bad)
jle
adc
cmp
cmp
ss
add
fdivr
or
(bad)
in
or
not
push
cmp
subsd
(bad)
xchg
ins
dec
(bad)
dec
inc
jbe
sti
rol
iret
jge
mov
ret
cmps
sbb
movs
into
fcmovu
leave
arpl
cmp
into
and
dec
shr
je
repz
mul
movs
xchg
dec
inc
cmp
stc
mov
mov
jo
ins
sti
inc
jo
lods
fsubrp
test
call
add
(bad)
mov
jmp
and
jns
push
sub
out
mov
std
mov
adc
push
mov
call
jne
push
and
or
dec
xchg
test
test
jnp
fdivrp
mov
push
jns
loopne
add
test
int3
jno
into
jns
push
push
shr
shr
mov
inc
cld
jp
mov
iret
xlat
jmp
aam
stos
shr
or
je
mov
mov
bound
and
movs
stc
nop
and
jecxz
ret
mov
scas
dec
loopne
xchg
iret
and
dec
sub
adc
fidiv
test
jnp
stos
das
jnp
aam
and
cmp
out
into
jb
pushf
inc
xchg
mov
xchg
shl
add
push
jns
std
mov
mov
das
ja
xchg
dec
in
dec
stos
dec
scas
push
outs
mov
pop
or
xor
push
jb
xor
test
aad
xchg
pop
pop
dec
pop
outs
pusha
jne
data16
int3
loopne
cmp
xor
(bad)
sbb
lea
jnp
push
cdq
stc
call
jnp
clc
scas
mov
mov
(bad)
ja
mov
fs
sti
xor
data16
cmp
(bad)
lahf
jge
sub
or
neg
out
gs
or
(bad)
mov
mov
cdq
sbb
call
pop
adc
cs
aam
cli
fcmovnbe
(bad)
ja
and
adc
loope
jecxz
and
lds
ret
ins
sub
fmulp
ror
mov
retf
aas
sahf
pop
scas
rol
jl
enter
pop
and
clc
adc
xor
cli
and
addr16
in
or
es
add
push
xor
adc
mov
inc
ins
fidiv
push
scas
pop
shl
pop
push
mov
aad
sti
xchg
in
add
jl
mov
or
jp
lea
lea
movs
or
rcr
pop
xchg
icebp
test
dec
or
sahf
fs
push
cmp
mov
loopne
outs
jecxz
push
sti
pop
pop
add
adc
lods
retf
mov
cmp
mov
mov
mov
cmps
clc
sti
outs
inc
adc
sahf
sub
inc
jnp
add
mov
out
xor
pop
sti
(bad)
push
stos
addr16
shl
sub
jp
stos
mov
loope
adc
jmp
and
repz
call
int3
adc
(bad)
mov
mov
movs
xor
test
mov
cli
dec
jns
mov
cmps
dec
stos
mov
fnstsw
adc
mov
fdivr
sbb
(bad)
jecxz
dec
add
ret
stos
shl
mov
pusha
js
mov
jge
jp
aam
es
jl
mov
fsubp
pushw
fisubr
adc
add
xchg
ss
sub
push
dec
and
mov
inc
addr16
ret
sar
mov
test
pop
xchg
mov
mov
sub
js
dec
mov
lods
lods
sahf
add
mul
xchg
xor
and
mov
lock
jecxz
stos
xor
xchg
pop
pop
cmp
bound
pop
xor
pushf
cs
cld
inc
jp
sub
int3
call
push
(bad)
cmp
loop
add
dec
adc
cmps
sbb
jle
shl
dec
dec
cwde
mov
out
jo
enter
popa
ss
ins
cmps
sbb
repz
les
mov
call
mov
ror
lock
xor
(bad)
leave
iret
mov
mov
int3
and
scas
repnz
in
rcr
push
mov
jno
aam
lods
lods
imul
push
callw
cdq
data16
popa
push
call
cld
jle
sub
out
mov
clc
dec
call
cwde
inc
push
sub
out
add
xor
pop
jnp
cmp
dec
stc
mov
aas
in
push
pop
dec
fucom
rcr
repz
or
or
or
dec
sbb
sbb
out
clc
xchg
sub
(bad)
sti
sub
mov
or
cmp
mov
ja
shl
add
or
mov
jmp
clc
mov
push
cmp
jmp
jne
sub
xchg
shr
or
loopne
fisubr
gs
mov
stos
outs
mov
pushf
cdq
jnp
xchg
xchg
push
das
cmp
cmp
cmps
fwait
push
dec
add
mov
cmp
clc
jmp
cmp
and
xor
mov
mov
lods
data16
sub
(bad)
iret
retf
cmp
push
push
repnz
outs
es
mul
xor
ficomp
pop
cmp
or
xlat
inc
push
test
cwde
ins
aad
or
mov
rcl
xchg
hlt
jmp
aam
mov
je
call
dec
pop
pop
in
jno
xor
inc
sahf
cs
aas
lods
test
dec
xor
or
mov
call
stos
and
dec
add
xor
xlat
dec
stc
fs
fxch
jnp
out
les
add
mov
stc
pop
pusha
or
gs
test
jb
out
mov
ret
xchg
adc
retf
ret
(bad)
mov
je
mov
mov
jbe
mov
fs
mov
sbb
iret
or
mov
jae
mov
fsub
iret
cmp
nop
sbb
stos
rol
pop
push
push
fisubr
std
jno
xchg
popa
js
out
ret
mov
add
jae
add
mov
mov
int3
mov
loopne
in
or
sbb
jns
cmc
ficomp
arpl
jle
xchg
mov
xor
sbb
inc
mov
sub
ja
test
lods
sub
stos
lock
pop
jmp
dec
dec
cmp
mov
shl
jne
cmp
mov
or
test
pop
in
inc
or
mov
ret
xor
les
std
sti
fldcw
xchg
lea
ins
cmp
mov
mov
mov
inc
xchg
push
push
or
popf
mov
outs
mov
js
pop
mov
jno
sbb
das
ja
popf
xchg
sbb
dec
scas
cmps
xchg
dec
xor
mov
fisub
mov
jbe
pop
shl
mov
jmp
jmp
inc
popf
aad
test
cmp
in
cmp
jb
enter
push
fcomip
pop
adc
es
mov
mov
cmps
outs
xor
xchg
icebp
jmp
push
dec
outs
mov
cmps
and
mov
xor
sub
out
out
xchg
or
sub
ret
scas
mov
ins
rol
out
pop
push
in
pop
mov
pop
(bad)
and
mov
mov
mov
add
jge
push
adc
and
sti
gs
xor
jo
pop
mov
and
mov
dec
call
xchg
mov
xchg
xor
clc
add
(bad)
data16
inc
sbb
popa
cmps
jl
pusha
ss
scas
jp
scas
imul
pop
mov
in
and
sub
hlt
clc
aam
in
cmp
dec
jne
and
xor
mov
lods
pop
push
jl
or
es
(bad)
and
scas
mov
in
int3
in
mov
ja
mov
sahf
cdq
adc
fdivr
pop
jl
lahf
mov
lods
mov
jmp
cmp
xor
out
test
test
push
sub
movs
and
mov
popa
sbb
(bad)
push
pop
mov
(bad)
shl
mov
(bad)
mov
call
jmp
add
stc
das
call
cmc
jns
ins
mov
mov
aad
or
mov
cmc
inc
push
jl
retf
out
(bad)
adc
jbe
inc
or
jg
and
cmp
ret
cmps
jb
or
ror
add
ss
inc
dec
add
jo
retf
xor
pop
dec
and
sub
lock
xchg
ret
xchg
push
retf
jbe
lock
mov
aaa
stc
cmps
pop
add
mov
or
leave
mov
inc
jle
outs
test
cmps
jp
mov
enter
cmc
pop
xor
call
shr
mov
jae
cmps
push
ja
stos
ins
scas
xchg
je
add
adc
movs
mov
mov
push
lods
inc
pop
stc
jae
inc
or
ss
f2xm1
sub
test
cmp
inc
sti
je
sub
or
cmp
dec
ret
push
jecxz
jno
test
mov
jbe
cmp
int3
mov
jp
pop
xor
gs
push
add
popa
shl
lahf
ficomp
jne
das
repz
mov
(bad)
fwait
sbb
fsubr
out
jo
or
adc
inc
(bad)
in
sahf
adc
mov
outs
stos
and
push
aam
iret
out
fild
cmp
dec
mov
or
mov
mov
aaa
popf
rol
mov
outs
xchg
jb
sub
retf
in
movs
rcr
stc
mov
repnz
repnz
add
xor
retf
push
sub
fidiv
push
dec
xchg
adc
adc
mov
cmps
mov
in
inc
in
pop
xor
outs
xchg
popa
(bad)
cli
(bad)
xchg
push
loop
jle
or
bound
ret
or
add
aas
add
mov
push
lods
adc
push
sub
bound
adc
inc
cmps
mov
or
dec
mov
jmp
loope
popf
adc
mov
fild
in
rep
mov
int
outs
push
mov
cmps
add
cmp
lods
sbb
movs
fbstp
inc
shr
xor
ja
fwait
test
rol
ror
loop
jne
imul
mov
int3
add
lahf
sub
sar
xchg
(bad)
out
cld
xchg
aas
jo
mov
loopne
and
jge
or
ja
or
mov
lods
stc
std
sbb
adc
pop
mov
lock
jecxz
je
xchg
lds
jge
jne
fwait
mov
aaa
inc
mov
mov
xor
out
sub
(bad)
cmc
xchg
dec
pushf
loopne
daa
xor
scas
sbb
mov
mov
and
push
inc
lahf
sbb
mov
test
mov
in
retf
xlat
xchg
dec
cmp
inc
cmc
das
pop
in
adc
push
jbe
stos
retf
popf
lock
retf
xchg
test
outs
int
test
adc
or
movs
add
mov
sar
icebp
dec
repz
fwait
and
cmp
mov
sbb
pop
fld
(bad)
jns
cwde
das
xchg
cmp
dec
push
nop
mov
cmp
cmp
std
adc
aam
jg
jl
pushf
nop
jecxz
xor
int3
or
sub
jmp
push
pop
shl
push
nop
mov
mov
pop
iret
pop
sbb
fprem1
and
xchg
out
mov
xchg
out
sub
and
mov
dec
add
jmp
xchg
mov
(bad)
sti
xchg
fidiv
xor
cmps
sbb
xchg
outs
jae
xlat
(bad)
adc
sub
stos
xor
mov
or
ss
std
(bad)
and
dec
mov
jae
push
sub
cmp
js
pop
js
inc
cmp
push
dec
pop
neg
fdiv
int3
pop
sbb
and
cwde
jecxz
adc
icebp
outs
sahf
div
jne
push
cdq
adc
mov
pop
(bad)
pop
inc
aas
shl
jb
mov
daa
pushf
aas
jo
sub
sbb
jmp
xor
out
mov
and
pusha
inc
jbe
jns
cld
inc
jbe
fbstp
push
retf
test
inc
and
inc
mov
retf
sti
adc
mov
jo
xchg
stc
mov
or
lds
adc
gs
sahf
mov
not
mov
jno
fimul
lods
repnz
icebp
add
mov
stos
adc
pop
mov
out
stos
nop
mov
mov
xchg
dec
and
pushf
clc
push
aaa
sahf
push
add
ds
sahf
arpl
jae
mov
pop
daa
loope
push
sub
inc
vmaxss
mov
and
dec
mov
pop
in
daa
mov
lods
outs
mov
push
dec
dec
jl
mov
pushf
fld
daa
fs
imul
out
out
movs
pushf
movs
mov
adc
(bad)
mov
adc
xchg
and
sti
call
fdiv
sbb
jb
pop
cmp
push
mov
and
popa
jge
loop
shr
xlat
(bad)
out
(bad)
xor
xchg
jge
add
push
icebp
push
mov
in
ret
mov
movs
cli
push
push
test
je
jbe
fcmovu
inc
out
or
mov
or
or
aas
bound
enter
(bad)
sbb
sbb
jo
adc
inc
stos
inc
leave
nop
pusha
sub
aaa
xchg
dec
pop
xor
adc
ret
mov
cmp
push
sub
jne
adc
mov
dec
mov
jp
int3
fnstenv
or
pop
sub
jb
(bad)
fidiv
xor
inc
and
jmp
leave
dec
aam
stc
mov
mov
dec
jle
pop
mov
and
sbb
sub
xchg
clc
pop
and
dec
mov
bound
inc
retf
sub
mov
inc
es
js
lds
dec
sbb
pop
and
sbb
jecxz
lock
add
jns
jge
mov
cmc
xor
mov
call
mov
add
dec
retf
movs
xchg
add
pop
sahf
das
mov
push
cmp
or
xadd
adc
test
fisub
and
loop
sti
mov
mov
inc
xor
rcl
jnp
xor
add
fnstsw
push
push
loope
or
idiv
mov
sub
pmaxsw
cmp
jns
cld
inc
pop
or
daa
arpl
pop
push
idiv
std
lods
ins
cli
(bad)
mov
fstp
cmp
das
sub
es
cmp
sbb
(bad)
mov
icebp
dec
pop
shl
div
pop
(bad)
xlat
mov
cs
jns
mov
sti
xor
push
dec
(bad)
in
pop
mov
inc
fcmovnb
push
out
and
sub
xchg
pop
inc
mov
out
(bad)
pushf
inc
in
jmp
jl
sub
call
push
xchg
retf
pop
xchg
(bad)
pushf
lods
and
sti
pop
sbb
aad
and
stc
mov
cwde
adc
jae
pop
mov
xchg
movs
inc
ds
dec
leave
pop
mov
jp
cmp
mov
fs
ins
jo
pop
inc
and
jp
daa
xor
out
or
inc
gs
add
mov
scas
pop
jno
mov
sahf
out
imul
ja
fwait
adc
test
pop
int
jno
outs
mov
setae
ins
sub
inc
jns
and
unpcklps
jns
sar
jg
pop
and
push
jo
cmc
ret
jge
imul
aaa
ficomp
dec
stc
and
cmp
xchg
lock
mov
jge
mov
in
mov
xchg
adc
popa
ror
into
mov
add
mov
mov
add
pop
adc
push
and
push
test
jb
call
jmp
daa
sahf
cmp
mov
shl
ja
icebp
mov
movs
test
jo
or
outs
xlat
mov
lods
pop
outs
shl
mov
imul
pop
xor
xchg
lods
lods
xchg
shr
inc
pusha
cmp
clc
imul
mov
jbe
xor
outs
ins
ins
sbb
xchg
data16
mov
push
icebp
je
adc
sub
jb
test
std
loope
xor
loopne
and
xchg
lds
scas
inc
inc
mov
jne
sub
test
dec
push
mov
scas
pop
push
adc
popa
mov
ins
rcl
outs
mov
mov
(bad)
(bad)
fisubr
pop
cld
je
out
rcr
jge
push
or
jae
mov
leave
add
sbb
icebp
and
inc
and
shl
movd
mov
pop
shl
dec
(bad)
retf
mov
push
sub
mov
out
pushf
add
mov
scas
test
test
cmps
add
push
cli
jp
outs
mov
xchg
out
aam
pop
mov
cld
out
lds
cdq
add
and
jecxz
adc
adc
jmp
int3
xchg
mov
js
pop
cmp
outs
lahf
jno
bound
jle
cs
mov
movs
adc
(bad)
aas
push
rcl
sub
push
pop
(bad)
lods
add
add
jmp
arpl
test
popa
je
sub
lods
into
ins
push
(bad)
fnstcw
sub
mov
out
mov
lock
xchg
mov
repz
cmps
out
cwde
push
mov
xchg
xchg
loopne
fimul
sbb
mov
mov
cmp
mov
jo
stos
inc
and
sub
ss
retf
and
aaa
inc
lea
xacquire
sahf
loopne
adc
das
push
or
mov
call
enter
adc
ss
movs
outs
mov
xchg
aam
sub
xor
fadd
cmc
in
movs
or
push
mov
xor
adc
cdq
inc
add
cmp
add
mov
adc
int3
outs
or
in
adc
mov
and
lock
jae
popa
cs
or
xor
loope
daa
cs
push
(bad)
lahf
hlt
loope
fild
faddp
out
mov
or
cs
hlt
mov
and
add
loopne
push
mov
pop
jmp
xchg
addr16
stos
dec
daa
push
pop
xchg
int3
ss
xchg
cli
loopne
mov
jp
cli
jecxz
jle
xchg
inc
scas
xchg
sub
xchg
xchg
loope
aam
fcom
bound
imul
adc
push
out
aas
xchg
ins
or
dec
sbb
cwde
pop
sub
pop
mov
mov
dec
mov
mov
jno
je
push
cwde
xor
lods
iret
pop
sbb
pop
sbb
dec
rol
(bad)
jmp
in
pusha
sbb
jmp
mov
pop
adc
bound
test
je
mov
mov
ror
popa
call
mov
pop
add
hlt
xchg
inc
loop
fist
mov
or
cdq
popf
sub
inc
dec
adc
dec
pop
sti
mov
test
inc
cmp
mul
add
jbe
or
sbb
cmp
cmp
jge
gs
push
add
push
or
test
mov
mov
lahf
mov
jbe
das
add
adc
js
pusha
pop
jp
out
popf
scas
jne
aas
js
jae
ins
mov
pop
pop
push
dec
retf
jnp
jle
push
(bad)
pop
fidivr
mov
inc
cld
(bad)
xor
adc
and
push
je
pop
xchg
fwait
mov
stos
xor
inc
jmp
inc
in
mov
ss
sub
jmp
inc
sub
xor
cmp
stos
fwait
push
iret
cli
sbb
mov
push
es
mov
sbb
out
or
adc
mov
mov
mov
retf
jo
add
cmp
shl
cmp
aam
ror
sbb
mov
lds
out
test
push
inc
jno
hlt
pop
leave
cdq
mov
out
sub
jge
in
gs
out
pusha
test
push
sub
test
daa
xchg
mov
les
jge
das
inc
adc
jmp
in
test
scas
jb
push
cmps
push
loop
stos
lock
aam
imul
ror
adc
loop
add
xor
adc
sbb
stc
gs
xchg
cs
mov
test
(bad)
outs
pop
jo
div
rol
inc
sbb
cmp
test
xlat
fistp
loop
ss
aaa
sbb
sti
vmovhpd
pusha
jo
test
mov
ja
retf
jne
retf
mov
jecxz
cwde
add
sub
aad
sbb
aas
xchg
or
add
jne
nop
enter
mov
mov
(bad)
rcl
(bad)
lock
repnz
(bad)
(bad)
mov
sbb
bound
mov
sub
cmp
or
xchg
stos
sub
aaa
add
lahf
punpckhwd
in
push
pop
mov
mov
lods
mov
sub
ret
sub
data16
stc
mov
xor
das
sub
inc
mov
xor
inc
xor
ss
mov
add
adc
retf
mov
add
mov
jp
test
retf
or
in
scas
rcr
mov
cld
and
mov
dec
push
sahf
xor
movs
or
pushf
and
sub
sbb
(bad)
(bad)
push
mov
xchg
in
jle
repz
mov
in
data16
push
and
add
sti
sub
pop
loope
add
or
call
bound
out
add
fstp
bound
in
ror
ds
mov
aam
enter
dec
cmps
(bad)
fstp
(bad)
test
(bad)
daa
and
add
pop
bound
add
lods
pop
xor
in
pusha
loop
pushf
inc
outs
stos
les
or
adc
xchg
rcl
mov
or
leave
jge
enter
addr16
inc
push
mov
dec
sar
lods
cmp
mov
inc
and
les
aam
int3
mov
jno
sub
push
push
or
jno
inc
ins
test
lock
call
sbb
mov
stos
jo
out
aad
pop
jge
push
mov
ret
loope
imul
or
fs
push
inc
dec
cmps
push
jne
pop
outs
and
pop
pop
inc
in
xor
xor
pmaxsw
in
outs
push
leave
jl
movs
mov
cdq
cmp
imul
das
mov
shl
and
(bad)
fwait
stc
and
data16
or
fst
ja
and
pop
retf
in
jp
popa
jmp
xchg
jmp
lds
cwde
dec
test
cmp
cmp
mov
into
clc
(bad)
or
sub
ins
inc
cmc
sub
ins
xor
xchg
fld
inc
push
std
push
mov
mov
jne
xchg
(bad)
sbb
jae
mov
out
loopne
jbe
daa
dec
test
adc
xlat
mov
mov
push
cli
in
xor
mov
and
cmp
loopne
das
das
aas
jns
test
test
out
mov
in
jb
sbb
pop
push
sbb
pop
inc
aaa
ja
stos
(bad)
dec
pop
lods
daa
daa
or
xchg
sbb
js
out
mov
xchg
out
out
movs
test
loopne
ins
aas
outs
and
or
popf
xlat
sub
inc
cmc
retf
rcr
test
mov
add
cmp
add
(bad)
push
mov
add
jns
adc
jb
mov
pop
lods
jb
mov
neg
dec
out
(bad)
xchg
mov
int3
ret
mov
sar
aas
aam
pop
inc
enter
jl
cmc
(bad)
fild
je
cmp
mov
test
mov
jne
sbb
xchg
xchg
aas
sbb
jge
ja
xchg
add
mov
add
jmp
in
sbb
fst
lds
enter
mov
stos
dec
cmps
xlat
sbb
xor
mov
aam
jb
and
and
adc
adc
cdq
push
mov
data16
mov
loope
mov
mov
push
ins
das
addr16
mov
lods
and
mov
sbb
inc
xor
mov
jmp
mov
cmp
and
adc
in
cmc
dec
lock
pop
and
(bad)
out
loopne
pop
push
and
add
sub
jp
add
jmp
fimul
icebp
jb
xchg
adc
repz
jo
les
and
cmp
cdq
das
mov
in
xor
dec
cmp
mov
push
fbstp
popf
fprem
jae
fbstp
movs
jnp
cmp
push
lods
lods
push
mov
bound
jmp
int
jge
dec
pop
sbb
mov
xor
call
mov
ins
nop
mov
(bad)
or
or
int3
mov
jmp
inc
jnp
fld
and
or
mov
fstp
imul
push
ss
shl
xchg
jns
adc
sbb
mov
std
jns
add
rol
or
pop
cdq
dec
jb
xchg
pop
jns
call
test
mov
mov
cmps
and
sbb
xor
and
mov
push
clc
adc
(bad)
enter
pop
aas
enter
fstp
fsub
sbb
test
inc
retf
test
push
adc
imul
test
xchg
jl
lea
and
ins
push
sbb
es
jnp
in
xchg
mov
push
cld
mov
push
pop
lods
xor
(bad)
mov
addr16
dec
add
sub
cmp
fnstcw
scas
retf
out
mov
or
jmp
push
into
and
sar
sbb
cmps
fidivr
cmp
scas
dec
fs
mul
mov
and
sub
ret
iret
jns
or
rol
data16
push
inc
nop
sub
popf
sahf
fmul
adc
aam
mov
lea
jle
dec
call
add
mov
jno
mov
or
neg
pop
inc
push
arpl
cwde
sahf
in
mov
or
add
xchg
or
mov
add
mov
outs
adc
jg
push
jg
cmp
shl
dec
adc
push
repnz
int
sbb
cdq
je
das
(bad)
dec
ins
mov
ror
leave
jmp
lods
xor
push
push
push
inc
ss
cmp
pusha
mov
into
mov
rcl
fwait
int
push
inc
add
fisubr
or
scas
arpl
xchg
les
int3
or
shl
sub
loope
add
add
dec
xor
ret
jmp
jp
cmp
test
std
and
inc
ins
mov
loopne
mov
mov
int
and
mov
cmp
mov
leave
movs
xor
adc
mov
cli
loopne
cld
mov
sub
jl
pop
and
dec
iret
into
(bad)
adc
retf
mov
out
lahf
in
push
cmovg
aad
in
push
add
into
add
push
sbb
aaa
xchg
cmp
out
leave
shr
mov
inc
fist
adc
(bad)
jo
repz
mov
lods
icebp
call
push
and
mov
pop
dec
ins
mov
(bad)
adc
scas
mov
xchg
neg
jnp
dec
inc
sbb
pop
sbb
data16
ret
std
fisubr
cmp
ds
xor
dec
xchg
pop
sub
xchg
lock
push
pop
pop
cmc
sar
adc
(bad)
add
stos
xchg
xchg
pop
int3
dec
xchg
pusha
or
mov
cmp
lds
pop
add
jo
imul
mov
ins
jne
dec
mov
pop
outs
sub
out
and
sub
retf
fld
xor
iret
mov
pop
mov
or
arpl
in
xchg
sub
mov
xor
mov
aas
sub
daa
test
int3
sub
jle
popf
sub
loopne
int
cld
add
sub
mov
sbb
call
sub
and
clc
wbinvd
and
(bad)
pop
repz
dec
mov
sub
in
mov
addr16
out
outs
pop
adc
fisub
sahf
adc
fcmovnu
jg
mov
fcomp
rol
pop
ins
add
cmp
sub
dec
data16
sub
dec
adc
push
adc
in
cs
add
mov
in
cmp
cmp
pop
popa
mov
ds
std
stos
mov
lock
jp
and
pop
and
sub
dec
ss
jg
imul
stos
pop
sbb
jmp
rol
stc
idiv
push
jmp
repz
jno
and
push
sbb
fild
cmp
ds
or
test
das
pop
fwait
ins
std
push
inc
add
sbb
lods
iret
out
(bad)
mov
out
pop
jno
adc
push
cmc
mov
inc
sbb
fild
fwait
jnp
je
mov
xchg
inc
jbe
gs
inc
test
or
dec
dec
cmps
out
jg
mov
or
push
aas
int3
data16
nop
in
adc
das
in
mov
jl
lea
push
or
sub
cmp
dec
(bad)
call
mov
sbb
rcl
shl
sbb
jno
push
aaa
lods
jg
fptan
clc
jecxz
sbb
imul
mov
inc
fiadd
jb
out
sar
jbe
scas
push
into
lds
enter
pop
pop
movs
paddd
mov
in
ret
mov
imul
jns
mov
std
ins
xchg
push
mov
or
bnd
fdivrp
arpl
add
push
or
jnp
sbb
ss
lods
inc
inc
xchg
add
push
icebp
pop
sbb
inc
mov
fistp
out
aad
(bad)
mov
and
imul
stos
pop
mov
push
inc
int3
aas
xor
cmp
ror
push
inc
dec
out
pushf
fnstcw
ffreep
adc
mov
adc
and
in
sti
cmp
push
inc
or
sub
mov
fadd
ins
xor
es
test
mov
fs
hlt
arpl
push
or
retf
fiadd
ins
cmc
fcomp
mov
jle
cmps
cdq
inc
shl
fs
mov
inc
mov
dec
dec
int3
adc
loope
pop
mov
mov
jmp
xchg
xor
rcr
jge
cmp
cli
push
and
jae
pop
outs
dec
pop
xchg
out
mov
jmp
mov
pop
push
mov
lds
stos
adc
leave
pop
dec
add
test
dec
(bad)
add
and
mov
mov
adc
cmc
lahf
aam
(bad)
(bad)
xor
repnz
sub
dec
or
(bad)
in
adc
aas
and
or
cmp
mov
test
pusha
lods
jb
xchg
(bad)
out
fwait
xchg
(bad)
add
push
imul
dec
mov
push
pop
(bad)
push
ins
xor
(bad)
xchg
xchg
pop
icebp
add
in
push
jg
and
push
sub
aam
dec
xchg
js
popa
mov
stc
jne
push
frstor
lock
in
mov
jp
fwait
test
icebp
(bad)
ja
(bad)
mov
xor
xchg
adc
mov
mov
push
ds
push
inc
mov
(bad)
pop
jmp
leave
mov
pop
cmps
mov
dec
push
lock
mov
jns
push
adc
adc
mov
out
inc
int3
push
inc
sbb
leave
(bad)
sti
out
pop
inc
call
iret
xor
inc
mov
cmps
push
movs
sar
shl
push
lods
sub
in
lods
rcl
jno
sub
push
lahf
into
dec
push
pop
jmp
jmp
std
je
mov
mov
loope
out
xchg
adc
out
sub
jb
rcr
adc
dec
adc
push
add
inc
sti
inc
lds
push
and
and
not
js
cmp
das
lea
mov
pusha
sti
test
push
adc
fst
or
cmp
jge
out
cmps
jns
call
cmps
jae
inc
(bad)
(bad)
fdivr
imul
in
fnstsw
and
cld
mov
xlat
mov
jo
sub
mov
cld
imul
mov
stos
jmp
in
out
popa
fild
cmc
in
adc
xchg
pop
adc
mov
or
std
mov
push
fwait
jle
in
aaa
imul
and
cmp
push
push
xchg
push
scas
lock
xchg
cmp
iret
jmp
out
push
mov
mov
lods
fst
repnz
jp
lahf
(bad)
jne
dec
and
(bad)
cs
cld
mov
cdq
into
sub
and
call
cmps
addr16
xlat
addr16
xor
fwait
xchg
xor
xchg
imul
sbb
or
add
into
sub
mov
dec
and
jmp
popf
jle
out
xchg
repnz
dec
mov
or
(bad)
push
or
retf
loop
push
jb
cli
test
or
mov
test
(bad)
test
push
test
mov
jne
mov
cwde
scas
loopne
(bad)
jg
xchg
xchg
lods
test
stc
mov
xchg
pop
sub
jl
(bad)
push
loop
jge
pop
es
out
daa
bound
pop
adc
jmp
sbb
test
lds
jnp
in
push
mov
ja
cmp
leave
sbb
push
dec
(bad)
and
mov
(bad)
jmp
jmp
scas
ins
mov
dec
mov
enter
clc
inc
fxch
cs
dec
jb
popa
popf
adc
int
mov
xchg
jge
bound
(bad)
cmp
sbb
cdq
xchg
in
mov
enter
inc
xchg
mov
pop
out
inc
scas
inc
aaa
mov
and
ins
adc
xchg
xor
cdq
adc
sbb
xchg
std
fcomp
clc
and
stos
add
and
aaa
sar
in
adc
add
jb
arpl
daa
pop
nop
movs
aam
test
pop
mov
(bad)
repnz
ret
mov
inc
popa
or
je
psubsw
mov
xchg
pop
add
sbb
mov
xor
jecxz
fistp
push
into
and
lock
xchg
mov
es
or
lods
mov
jmp
xchg
stos
in
int
mov
in
iret
jno
sub
fcomi
mov
lahf
js
lea
push
adc
fadd
jno
loop
push
aaa
jo
mov
ret
pop
and
cmc
ins
jae
mov
pop
out
pop
pusha
cmps
pop
dec
cmc
push
cmc
retf
rcl
test
mov
dec
adc
cmps
neg
push
fs
dec
inc
pop
out
jl
inc
mov
(bad)
or
and
dec
or
jbe
mov
lock
loope
and
push
cmp
sub
xchg
jo
aad
and
pop
or
ja
or
outs
push
sar
pop
lock
loop
and
ret
mov
ror
push
cli
out
and
test
add
fisub
out
sbb
add
fdivrp
mov
inc
(bad)
ret
dec
adc
add
and
neg
or
or
sbb
rcl
cdq
pop
mov
jge
cdq
mov
pop
jge
test
fistp
cmps
neg
fcom
xor
sub
sbb
pushf
mov
sbb
adc
retf
jne
out
bound
lds
in
pop
xchg
push
in
test
mov
scas
inc
inc
sub
jl
fcmovb
test
xchg
inc
cmps
push
inc
adc
push
ins
dec
adc
jmp
adc
das
(bad)
jmp
rcl
(bad)
retf
rol
movs
pop
mov
mov
push
mov
outs
lods
ins
add
in
and
repnz
les
push
outs
mov
sub
lods
jae
xchg
scas
jmp
fsubr
mov
fiadd
pop
icebp
in
push
fisttp
mov
mov
xor
or
pop
push
or
dec
xor
sbb
(bad)
inc
add
push
aam
jno
mov
xor
xchg
push
add
jbe
dec
test
dec
xchg
mov
push
pushf
in
loope
movs
jmp
jl
jp
push
mov
arpl
sbb
retf
mov
je
pop
pop
sub
jecxz
fs
mov
inc
xor
jge
stos
fwait
jno
outs
push
jle
sub
out
jno
mov
sub
mov
add
jne
mov
fidiv
add
ds
adc
pop
retf
push
cmp
dec
jns
or
mov
jmp
push
lahf
in
hlt
push
jnp
popa
pop
aam
sbb
sbb
addr16
xor
fld
leave
cmp
mov
loope
adc
pop
out
mul
sbb
jne
mov
mov
test
lds
mov
into
and
daa
adc
(bad)
shl
ret
lods
xchg
loope
pop
ficom
inc
addr16
sub
out
outs
call
movs
xchg
and
mov
mov
sbb
lea
fsubr
sbb
daa
das
aad
jecxz
cli
popf
shl
add
jmp
pop
jno
xchg
fist
lea
in
(bad)
jg
call
shr
out
(bad)
pop
mov
cmp
popa
xchg
aaa
scas
adc
in
xchg
(bad)
lods
sbb
cwde
jb
jae
jb
xchg
cld
test
mov
scas
xor
sti
movs
popf
adc
(bad)
imul
stos
pop
test
adc
scas
sbb
push
pop
pop
mov
mov
(bad)
jmp
movs
xchg
push
addr16
popf
pop
jl
add
ret
cli
adc
stos
ss
push
xor
ror
cmps
cmp
mov
push
xchg
jno
xchg
jbe
sbb
sbb
les
loop
les
mov
enter
(bad)
iret
outs
fdiv
or
cmp
and
cmp
xor
out
and
leave
mov
shr
xchg
cmps
mov
repnz
sbb
jp
fdivr
cmp
and
cdq
sub
add
aas
jbe
mov
gs
xchg
repnz
push
xchg
push
xchg
sbb
stos
cmp
stos
test
xchg
cwde
mov
outs
jle
fdivr
ss
bound
pop
daa
adc
mov
test
cmp
or
repnz
inc
add
add
cmps
sbb
aam
jl
mov
jecxz
bnd
popf
hlt
aaa
or
xchg
sbb
sbb
(bad)
sahf
cmp
das
loopne
loope
push
rcl
mov
mov
push
fs
popf
retf
cmps
ret
xchg
mov
movs
fidivr
out
les
mov
inc
in
arpl
jnp
dec
dec
int3
je
jecxz
dec
mov
mov
mov
pusha
ror
rcr
and
pop
cli
fwait
outs
cmc
std
jno
cmp
(bad)
imul
mov
jmp
adc
scas
imul
push
jno
add
js
xor
(bad)
aas
loope
jmp
mov
xchg
in
or
ret
scas
mov
jbe
add
adc
push
shl
dec
ss
out
xor
push
repnz
dec
aad
or
push
push
push
jg
xchg
std
div
xlat
jecxz
jmp
test
sbb
fnstenv
xor
ret
lods
sbb
sbb
adc
fistp
clc
sbb
add
mov
ret
dec
adc
faddp
adc
enter
adc
loope
xlat
(bad)
mov
je
xchg
leave
loop
ror
sahf
icebp
add
cmp
fs
jge
pop
ds
loope
xchg
dec
iret
jb
out
in
fidivr
fwait
mov
xchg
push
cmc
adc
stos
and
push
mov
(bad)
gs
pop
outs
mov
push
pop
xchg
int
rcl
pmullw
outs
(bad)
into
punpckldq
lahf
je
xor
push
popf
cmc
xchg
in
pop
cmp
xchg
lods
mov
and
fsubr
test
xchg
or
mov
pop
vminss
ins
repnz
test
mov
push
mov
mov
sbb
mov
and
adc
mul
and
add
mov
ds
adc
bound
arpl
sub
and
mov
gs
push
xor
in
loopne
or
loopne
loope
pop
dec
sbb
jne
jp
mov
mov
mov
dec
addr16
lds
mov
xlat
or
jg
or
lock
test
sahf
xor
adc
dec
push
fstp
jle
pop
les
pushf
test
pop
push
mov
jne
es
or
aas
pusha
xchg
sbb
hlt
mov
jmp
and
popf
dec
xor
jnp
das
pop
sar
sti
pusha
icebp
inc
and
(bad)
fcmovb
es
xchg
popf
ror
add
lds
xor
mov
out
inc
cmps
outs
pop
mov
stc
inc
add
inc
jle
pop
sub
xor
aad
xor
sub
js
repnz
les
cwde
pop
addr16
lds
pop
xchg
mov
jae
dec
cmps
mov
xor
(bad)
sub
int3
mov
xchg
into
push
mov
shl
mov
push
js
in
fst
scas
test
out
jp
adc
lahf
(bad)
mov
imul
mov
add
push
pop
int
cld
jle
cmp
cwde
fxch
lock
xor
rcl
sbb
sub
inc
dec
pushf
push
shl
push
fcomp
sbb
cmp
mov
shl
aad
mov
adc
cmp
sbb
jo
dec
sahf
or
and
xchg
inc
jbe
mov
xchg
jge
xor
ret
cli
out
sub
mov
and
rol
mov
fisub
jle
xchg
fcompp
inc
cld
pop
adc
lock
pushf
std
push
jb
xlat
daa
test
sub
into
dec
stos
inc
js
sar
test
fs
sbb
cmps
les
cmc
out
retf
lods
repz
shl
dec
pop
cs
stc
sbb
push
mov
adc
lock
add
jecxz
sti
mov
add
in
test
enter
add
loopne
add
push
ds
es
sub
ret
out
out
mov
add
imul
popf
aas
out
loope
popa
jg
push
call
fwait
arpl
adc
out
mov
mov
js
and
mov
fstp
adc
stc
xlat
outs
shr
push
mov
fcomp
fld
and
xchg
or
imul
or
fisttp
cmps
stc
push
sub
hlt
dec
lea
pop
sbb
ficom
pushf
adc
or
lahf
arpl
xchg
jmp
or
sub
jno
nop
xor
dec
jno
adc
mov
(bad)
test
cmp
(bad)
ja
xchg
popa
xor
(bad)
sbb
addr16
movs
fwait
shl
push
mov
retf
push
stos
retf
ss
stos
ja
mov
cld
mov
out
xlat
inc
push
rcr
sbb
loop
mov
aam
adc
stos
cmp
call
sbb
mov
lea
mov
jb
xchg
and
data16
mov
in
les
(bad)
int3
jl
xor
lahf
in
rcl
into
gs
cmp
(bad)
jb
test
jecxz
ss
scas
xchg
scas
pop
aaa
or
add
xor
dec
add
mov
into
dec
jne
jmp
pop
dec
(bad)
ja
pop
(bad)
in
test
push
inc
push
push
loop
add
repnz
pop
xor
ins
ret
sti
lds
xor
mov
fs
lods
adc
pop
mov
lods
cmp
adc
fild
(bad)
mov
in
add
leave
xchg
dec
addr16
xchg
mov
ret
pop
or
stos
scas
push
test
add
mov
outs
xor
inc
fldenv
dec
jmp
mov
popf
inc
cmp
or
mov
test
ss
icebp
out
mov
cmp
sbb
rcl
xchg
popf
adc
xchg
rcl
lods
xchg
stc
dec
push
xchg
enter
mov
sbb
shl
jbe
movs
or
ja
in
addr16
mov
(bad)
jbe
jnp
fcom
clc
jb
cmps
dec
sbb
ins
add
call
leave
and
and
mov
frndint
test
shl
dec
pop
int3
bound
xor
movs
int
or
push
(bad)
adc
pop
sar
loopne
xor
pop
and
sub
or
mov
std
sbb
and
and
loope
cdq
xchg
test
jne
jmp
xchg
sub
in
in
scas
fwait
iret
(bad)
(bad)
gs
mov
pusha
xor
icebp
push
sub
push
add
xor
retf
and
imul
xchg
pop
sbb
out
icebp
pop
xchg
mov
add
sub
lahf
pop
sub
and
add
pop
jp
jno
in
xor
cwde
sbb
or
mov
repnz
add
dec
(bad)
clc
mov
push
sub
aaa
xchg
popa
into
push
cmp
in
(bad)
jge
mov
add
aad
repz
std
(bad)
jmp
into
push
std
push
(bad)
fucompp
in
rcr
inc
mov
cmp
lds
cli
icebp
pop
mov
pop
in
sbb
test
push
xor
iret
cmp
pop
js
loopne
out
fwait
arpl
fs
xchg
cmp
inc
mov
cs
fucomip
jmp
out
add
lock
fisttp
fst
popf
pop
cwde
iret
lea
hlt
pusha
pop
push
mov
ror
test
inc
push
sub
jge
stos
(bad)
dec
mov
test
dec
inc
jg
jp
or
aas
pop
and
sub
leave
js
dec
mov
shl
sar
movs
jns
add
or
test
xchg
pop
shl
pop
sub
loop
outs
jp
cmps
pop
lahf
sbb
int3
jecxz
mov
xchg
cwde
push
mov
js
jmp
rol
(bad)
sub
fwait
cmp
sub
jbe
sbb
popa
sub
dec
and
push
fsub
jo
iret
(bad)
lods
aaa
cmps
jb
mov
aam
mov
imul
jecxz
dec
aaa
mov
push
jp
ss
es
mov
and
test
loop
cs
pop
xor
rcr
mov
push
push
dec
dec
cmp
out
rcl
mov
dec
rol
ret
ror
ja
sbb
cmp
popa
lock
sub
gs
loop
jle
frstor
pop
movs
xchg
or
aaa
jno
push
dec
jne
cwde
sti
mov
push
mov
leave
stos
test
neg
out
push
sbb
cmp
pushf
adc
dec
add
int
in
push
inc
lods
lock
xchg
ins
push
add
or
and
mov
and
mov
add
adc
mov
dec
pushf
sti
push
jbe
add
sbb
cmp
ror
aaa
cmp
ltr
jge
(bad)
in
inc
je
cwde
fcom
pop
leave
call
sbb
outs
arpl
jl
imul
dec
in
cdq
add
icebp
mov
je
jp
pop
rcr
and
daa
mov
pop
dec
add
ror
cmps
imul
and
push
jg
jne
pushf
and
pop
push
mov
jg
jne
aaa
ss
daa
and
push
fs
inc
gs
mov
fistp
push
add
inc
mov
cmp
movs
hlt
dec
ds
out
mov
loopne
adc
in
cmps
icebp
in
jp
std
leave
sub
add
sub
test
xor
div
mov
enter
cdq
aam
jbe
(bad)
mov
add
jno
push
mov
mov
test
lock
push
push
push
daa
inc
fmul
test
rcr
outs
pushf
cs
ja
test
inc
mov
cmps
pusha
cli
inc
pop
mov
pop
inc
jge
cld
int
call
xchg
adc
clc
outs
nop
(bad)
dec
pop
xlat
push
jno
mov
sub
mov
(bad)
loope
mov
lahf
std
loope
fcomp
jg
mov
movs
add
pop
ds
fwait
push
mov
cwde
xchg
out
(bad)
ss
dec
add
cmc
dec
inc
in
inc
aaa
iret
call
fidiv
enter
inc
or
pop
or
pushf
dec
rcr
xor
xor
cwde
push
inc
mov
jo
mov
test
xlat
push
movs
jle
lods
inc
inc
addr16
stos
cmp
popf
cwde
xchg
xchg
or
cmp
ror
test
xor
rsm
add
jmp
icebp
and
(bad)
fbstp
jmp
push
ret
sbb
fs
rcr
xchg
int
fcmovbe
cmps
ret
lock
in
pop
dec
push
cmp
adc
mov
mov
popf
cmp
out
test
pop
repz
dec
hlt
out
out
mov
vpcmpgtb
je
imul
mov
je
out
dec
in
popf
call
not
cmp
dec
fist
fdiv
sbb
lea
add
ficomp
xchg
and
rcr
int3
fnstsw
mov
scas
xor
xchg
fdivr
or
cli
cmp
dec
dec
xor
sub
div
out
adc
rcr
bound
push
addr16
(bad)
jecxz
mov
pop
cmps
dec
fisttp
push
aam
aas
or
sbb
movs
jne
je
rcl
pop
shl
sbb
(bad)
xor
dec
mov
enter
(bad)
xchg
lahf
js
push
sbb
push
ja
xchg
mov
inc
(bad)
jae
into
out
outs
jmp
lea
rol
xlat
sub
sub
pop
mov
stos
outs
data16
mov
cmp
aad
cs
xchg
adc
and
cmps
stos
jmp
mov
lahf
aaa
daa
outs
adc
inc
dec
sar
sti
sub
jp
add
mov
adc
inc
out
xor
inc
push
mov
stc
inc
push
cmps
not
out
xchg
xor
int3
pop
je
stos
or
jno
pop
je
jge
or
int
idiv
in
in
hlt
push
mov
ror
rol
xlat
mov
fsubr
inc
jp
inc
mov
retf
inc
stos
icebp
fadd
push
push
push
pop
out
pushf
cs
retf
dec
sbb
out
sbb
and
inc
lods
xor
bound
sbb
jae
xchg
je
shl
(bad)
xchg
dec
adc
or
or
dec
fwait
push
add
pop
rcl
shl
fist
(bad)
cld
inc
xchg
pop
mov
inc
stos
and
push
jbe
push
daa
mov
and
push
mov
popa
sbb
dec
(bad)
lods
jecxz
bound
mov
and
mov
hlt
fisttp
js
and
or
sub
(bad)
(bad)
or
cmps
add
push
test
adc
imul
hlt
mov
jl
cmps
or
adc
aad
jb
pop
sub
push
adc
and
jb
pop
shr
popf
in
lock
and
lods
cld
or
mov
stos
lock
xchg
inc
push
test
jae
push
sub
outs
pusha
aas
sbb
pop
dec
lahf
push
shl
push
mov
call
lock
jno
mov
sbb
repnz
push
push
dec
(bad)
loope
mov
jnp
pop
and
dec
stc
xor
imul
(bad)
retf
cdq
dec
stc
sar
pushf
xchg
mov
aas
or
shl
mov
movs
(bad)
int
stc
ins
inc
loopne
push
mov
cmp
cmc
popf
shl
xchg
xchg
(bad)
in
pop
add
xchg
ins
int
(bad)
lahf
sub
inc
add
xor
(bad)
xchg
ss
pusha
mov
ss
fldenv
stos
jl
ret
or
mov
sub
mov
push
cli
pop
in
imul
dec
push
mov
aaa
pop
out
add
xchg
cmc
jmp
lock
lods
add
or
mov
das
cld
pop
sbb
mov
lahf
pop
mov
idiv
xchg
outs
xlat
mov
jg
xor
xor
ds
pop
xchg
(bad)
jl
inc
mov
imul
mov
xchg
push
cmp
ss
add
pop
mov
sbb
mov
sbb
icebp
cmp
dec
outs
ss
pop
add
or
mov
popf
in
daa
jb
fadd
jecxz
cmp
in
aas
lods
imul
mov
test
imul
jne
adc
je
jbe
jno
out
sub
loop
xor
adc
cmps
cdq
mov
ror
rcl
xchg
repnz
leave
inc
rcl
stc
lds
mov
das
sbb
xchg
pop
jb
inc
iret
imul
clc
repz
adc
adc
inc
out
and
(bad)
push
sub
dec
cmp
ja
dec
test
ret
movs
mov
out
cmc
arpl
sub
lock
lods
xor
xor
stos
xor
or
and
cdq
sbb
dec
popf
fld
leave
pop
retf
pop
cmp
mov
jmp
jl
dec
cli
mov
jmp
popa
cmp
cmp
dec
iret
sub
mov
jge
leave
cmps
(bad)
repz
ja
pop
pop
sti
(bad)
jp
mov
jle
xchg
out
test
in
in
in
lods
inc
aam
adc
mov
pop
dec
loopne
mov
sub
rcl
scas
inc
push
icebp
xchg
mov
dec
retf
loope
dec
addr16
(bad)
in
sar
stos
fist
mov
mov
repz
xor
(bad)
out
shl
shl
pushf
hlt
movs
xor
les
icebp
push
jmp
fwait
dec
jns
mov
mov
mov
nop
es
in
mov
and
cmp
add
push
pop
push
loope
jp
dec
or
sub
mov
jo
pop
cmp
adc
push
imul
divps
xchg
or
xchg
dec
lods
xchg
xchg
push
call
dec
or
sbb
push
sub
cmp
xlat
cdq
ret
fnstcw
test
mov
add
add
mov
mov
jne
cld
push
cs
outs
pop
xor
fidiv
xor
fdiv
dec
mov
fild
enter
mov
loopne
sub
rcl
push
cmc
imul
jb
push
sub
(bad)
and
adc
gs
fwait
or
jae
pop
popa
cmp
add
xchg
les
jg
out
lea
mov
cdq
(bad)
jl
dec
or
push
dec
cmp
aad
pop
xor
aas
dec
js
xor
mov
sub
mov
retf
dec
fimul
mov
scas
dec
fdivrp
and
and
in
sbb
pop
icebp
lods
out
xchg
(bad)
out
xor
mov
push
pop
or
lea
sbb
push
stos
shr
leave
jmp
mov
pop
xchg
sbb
mov
xchg
mov
mov
sub
mov
pushf
mov
push
outs
ret
xlat
fnstenv
gs
mov
lock
aaa
mul
out
inc
sbb
push
adc
retf
les
jmp
xor
fdivr
fcmovnbe
into
imul
(bad)
sub
inc
inc
mov
je
sub
jno
and
ret
test
out
push
inc
ds
inc
hlt
rol
lds
pusha
mov
mov
popf
dec
cdq
push
mov
stos
push
push
inc
ret
mov
cs
mov
cdq
mov
jo
hlt
mov
jne
pop
adc
shl
xor
mov
xor
pop
xchg
sub
push
xchg
push
dec
movs
fst
xor
xchg
sub
jno
push
cmp
jge
jno
fidivr
mov
pop
sar
lock
popa
adc
mov
mov
dec
in
jl
sbb
iret
movs
jb
stos
push
cmp
xor
cdq
mov
leave
pop
xor
xchg
clc
outs
adc
sbb
add
cmp
ret
fs
out
mov
inc
inc
mov
jmp
push
jp
mov
fcomip
cwde
adc
icebp
cmps
aas
and
shr
dec
jl
stos
les
out
mov
push
imul
adc
mov
dec
sub
(bad)
fcmovu
sbb
fld
xchg
ds
add
lock
fstp
mov
inc
fs
sti
test
mov
enter
cwde
sti
xchg
cli
or
ficomp
inc
ror
loope
xor
push
sbb
xchg
push
or
aaa
jg
aaa
pop
pop
sub
adc
cmp
cmp
fs
test
pushf
adc
or
aas
test
fist
mov
or
mov
mov
pop
dec
aam
retf
adc
outs
movs
rcr
out
push
ins
xchg
pusha
ret
in
xor
adc
push
out
xor
sub
dec
cli
dec
push
inc
adc
sbb
imul
and
inc
push
mov
fcomp
mov
cmc
cmp
mov
shr
data16
xchg
pop
add
push
outs
cli
daa
xor
aam
lahf
jnp
mov
fnstcw
div
xchg
jae
lods
push
mov
xchg
dec
or
loopne
inc
nop
mov
pop
ss
push
int3
push
sub
inc
jle
in
sbb
sub
inc
inc
jle
push
in
dec
and
and
fs
add
push
sbb
mov
test
jbe
in
loope
out
cld
sbb
inc
cmp
inc
pop
mov
xchg
in
jno
mov
aad
jbe
xchg
mov
mov
dec
mov
dec
and
dec
jns
popa
in
pop
dec
ror
imul
div
sub
mov
pop
mov
hlt
outs
jmp
adc
movs
mov
inc
mov
sub
(bad)
inc
inc
in
add
nop
retf
cli
call
into
mov
pop
and
inc
mov
shl
pusha
nop
imul
jl
dec
jl
and
out
daa
arpl
out
cmp
sub
je
lea
in
pushf
in
mov
es
test
lods
cdq
xor
sub
cmp
push
dec
sub
in
pop
adc
(bad)
fdiv
inc
call
ss
xchg
jbe
xchg
int
(bad)
test
mov
xor
cmp
ss
or
jl
lock
shl
sbb
sbb
cwde
dec
mov
mov
fisub
xchg
cdq
aad
sub
(bad)
fiadd
cmp
jb
(bad)
jmp
scas
pop
bound
pushf
mov
cwde
sub
xor
xor
cmc
clc
imul
outs
adc
daa
jmp
jmp
push
push
mov
call
push
hlt
(bad)
push
cmp
cmps
dec
or
iret
inc
lahf
sti
scas
(bad)
sbb
dec
imul
pop
fisubr
cmc
xchg
push
mov
inc
xor
jmp
daa
call
or
test
ret
daa
push
dec
pop
hlt
out
in
jae
jle
imul
dec
pop
pusha
cwde
or
add
out
fcomp
hlt
cmps
pop
sub
outs
jle
xchg
les
in
cmps
mov
dec
iret
stos
bound
(bad)
adc
mov
sbb
push
inc
pop
adc
loopne
call
and
ror
push
sar
inc
push
loopne
mov
int3
das
in
mov
shl
loop
cdq
adc
xchg
dec
jae
test
adc
cs
push
xchg
(bad)
or
iret
or
neg
scas
jge
std
xor
add
es
and
and
out
mov
outs
fsubr
arpl
jns
scas
scas
repz
ins
aad
xor
int
out
push
clc
add
jo
or
jns
mov
pop
es
mov
mov
imul
mov
cmp
xchg
xchg
pop
psrlq
mov
int3
imul
cmps
xor
mov
lahf
adc
repz
aas
cmps
xchg
pop
cmc
stos
movs
inc
rcl
jnp
(bad)
sub
adc
mov
test
adc
xor
sar
mov
leave
inc
shl
fwait
adc
or
sub
pusha
mov
and
push
clc
sahf
mov
hlt
push
jb
mov
stos
cmp
mov
scas
lods
stos
jne
push
fnstcw
test
in
jl
ret
jge
cmp
retf
sub
adc
jae
ss
jge
inc
mov
and
fidiv
ins
cmps
aam
loope
nop
movs
add
cld
xor
add
(bad)
dec
mov
jno
mov
pop
mov
lock
hlt
shr
push
call
or
xchg
xor
add
cmc
out
call
scas
out
not
jmp
outs
adc
fcomi
rol
mov
mov
into
cmp
mov
sub
mov
pop
jp
jmp
das
nop
dec
cmp
repz
push
push
clc
adc
fldcw
cmp
lock
sbb
push
fwait
mov
and
test
mov
loop
pop
mov
xchg
pop
jnp
inc
dec
adc
xor
es
pop
xchg
cmp
jbe
cmp
dec
ror
shl
jge
nop
retf
xchg
push
sub
adc
inc
es
mov
movs
into
vpand
push
sahf
repz
add
js
leave
pop
shl
xor
dec
pop
sbb
enter
leave
xlat
cmp
inc
mov
sbb
inc
jmp
imul
pop
xor
dec
outs
cmps
enter
adc
arpl
xchg
pusha
adc
add
pop
jmp
and
lods
cld
aas
xchg
outs
lds
lods
retf
sub
retf
outs
cmp
jecxz
bound
ins
jge
in
mov
cmp
scas
dec
je
jno
in
push
jge
push
or
les
xor
enter
push
mov
and
test
xor
inc
call
adc
push
leave
fs
stos
leave
loop
adc
addr16
mov
out
sub
cs
dec
aam
sbb
cmp
outs
fsubrp
stc
arpl
ret
jbe
cmp
stos
jae
clc
inc
mov
mov
and
adc
mov
or
or
inc
je
cmps
ds
push
lock
pop
nop
jle
jns
cmc
adc
mov
shl
popa
pop
les
or
xlat
ficomp
jge
ret
imul
jae
xor
jnp
sub
loop
cli
cmp
cdq
pushf
push
jl
xchg
mov
call
jns
leave
bound
cmp
lea
icebp
shl
mov
sbb
fmul
clc
std
jp
out
scas
jne
outs
mov
ins
rol
jns
cmp
jae
sbb
out
mov
cs
dec
pop
and
inc
jns
jnp
into
nop
push
add
xor
call
rcl
push
movs
inc
and
pop
lods
jmp
shr
pop
retf
mov
aam
cwde
mov
cmp
ret
inc
into
lods
loop
ret
loopne
inc
push
mov
dec
int3
es
and
or
mov
xor
and
jno
push
out
cwde
push
(bad)
cmps
sbb
cmp
int3
sbb
pop
arpl
push
dec
mov
outs
sub
push
mov
stos
sbb
rcl
push
test
fwait
and
cmps
in
add
sahf
inc
inc
jle
ret
and
das
dec
and
outs
je
data16
dec
jbe
scas
ss
add
mov
push
cmp
sbb
ret
(bad)
fsubr
sahf
(bad)
pop
dec
in
mov
pop
and
and
bound
cmp
ins
ror
push
int
out
inc
aaa
or
and
jne
fcomip
pop
jbe
jne
lds
bound
sar
pop
pop
ret
sar
jb
das
imul
mov
nop
sbb
xchg
push
push
lds
inc
push
retf
sub
mov
mov
cmp
ins
jl
cmc
mov
(bad)
out
add
mov
sahf
sbb
or
dec
fbld
ret
pusha
mov
sbb
fwait
loop
add
stc
sub
fistp
adc
push
sub
cmp
sub
add
es
cdq
imul
cs
sbb
shl
inc
xchg
int3
mov
and
pop
and
movs
les
es
jnp
clc
adc
pop
inc
add
sbb
aaa
mov
mov
inc
adc
push
pop
cmc
inc
jmp
xchg
icebp
into
cmp
cmp
jmp
(bad)
rol
ror
out
test
leave
fwait
mov
popa
xor
sub
cmps
fbstp
lahf
and
jne
pop
test
sub
rcr
scas
mov
icebp
add
movs
mov
adc
into
xor
dec
sti
mov
sub
test
hlt
iret
xor
sar
repnz
mov
push
mov
inc
push
gs
call
test
cdq
mov
push
cmp
nop
mov
fld
add
and
fcom
push
test
scas
movd
xor
jb
dec
xor
dec
inc
loopne
movs
and
mov
add
adc
sbb
add
dec
aam
out
inc
add
or
pushf
add
iret
mov
and
inc
adc
ja
xor
in
lods
ficom
inc
in
sbb
cld
dec
xor
ret
and
dec
cmp
pop
mov
cmp
mov
and
movs
js
jb
ja
test
hlt
fisttp
push
cs
clc
(bad)
mov
clc
push
mov
adc
sub
inc
(bad)
and
stos
popa
dec
(bad)
in
scas
test
mov
jmp
push
push
fsubr
and
lds
xchg
sub
pop
mul
pushf
retf
pop
sbb
mov
idiv
int
lods
les
out
sub
pop
int
cmp
fsubr
mov
ficomp
jo
mov
and
popf
sbb
shl
int3
pop
xor
mov
mov
ret
mov
jmp
fisttp
or
mov
sbb
test
repz
cmp
xchg
mov
sbb
(bad)
mov
mov
push
adc
dec
sar
push
fdiv
and
mov
inc
pop
dec
stos
mov
shl
movs
movs
out
push
adc
ret
lea
inc
cs
aas
outs
and
int3
test
shl
xor
in
jmp
push
gs
inc
ss
retf
and
int
jmp
jno
pop
test
and
cmp
mov
in
mov
sub
sahf
xor
or
test
inc
sbb
ror
ss
das
xchg
xchg
lods
push
jp
jmp
iret
cdq
push
or
adc
inc
cdq
sub
mov
cmps
fimul
clc
and
xchg
imul
xor
loope
fldenv
repz
bound
out
(bad)
fdiv
(bad)
and
xchg
mov
sti
jns
cmps
pushf
add
dec
xor
sub
(bad)
xchg
add
inc
icebp
sub
fiadd
lahf
mov
mov
fwait
mov
gs
loope
ficomp
push
or
jnp
ins
jno
inc
add
cmps
xchg
jmp
clc
adc
mov
dec
mov
push
sahf
xchg
xlat
ins
inc
xchg
xor
(bad)
fisub
xchg
jge
cmp
jle
cmp
les
or
mov
aam
xchg
pusha
fsubr
xchg
jbe
jmp
pushf
jp
xor
jmp
inc
rcr
dec
(bad)
es
std
ret
cld
cwde
test
pusha
mov
fs
mov
cmp
and
push
mov
daa
pop
pop
pop
arpl
movs
adc
push
jg
ss
pusha
stos
and
xchg
iret
out
push
pushw
into
add
jmp
scas
mov
mov
mov
data16
mov
fnsave
(bad)
fdivr
and
cmp
push
lock
repz
mov
test
loope
jne
fild
lods
mov
fidiv
cmp
pop
xchg
pop
fwait
inc
lahf
ss
data16
mov
dec
cmp
mov
inc
mov
dec
and
je
push
mov
and
(bad)
call
push
xchg
hlt
sub
mov
xor
xchg
ss
in
xor
dec
fwait
sbb
idiv
scas
mov
or
xchg
mov
mov
pop
push
cwde
mov
inc
test
cmc
pop
sbb
movs
call
jecxz
imul
and
retf
sbb
and
outs
adc
inc
fcomp
test
sbb
pop
loopne
inc
call
aaa
dec
addr16
jns
mov
inc
rol
call
mov
mov
pop
mov
dec
imul
scas
pop
cdq
adc
aad
pop
(bad)
rol
fidivr
outs
mov
cmp
lock
out
mov
dec
ds
lock
rcr
jo
pop
sbb
xchg
jbe
out
iret
or
and
popf
fdivr
dec
push
xor
inc
mov
push
xor
xor
in
js
clc
ja
sbb
mov
into
xlat
xchg
(bad)
xchg
jecxz
out
mov
xor
and
mov
add
fs
(bad)
aas
scas
repz
(bad)
sub
outs
(bad)
xor
add
lods
xchg
adc
dec
mov
cmps
sub
pop
(bad)
pop
inc
cmp
loopne
adc
(bad)
rcr
imul
and
in
mov
mov
ds
push
jnp
test
call
adc
jmp
lods
add
or
add
adc
inc
sub
inc
push
rcr
aad
jmp
add
test
daa
movs
add
mov
dec
arpl
stos
mov
jle
sti
mov
mov
retf
retf
out
push
and
xchg
into
shr
xchg
cmps
sbb
jp
shr
stc
cmp
iret
push
dec
mov
outs
dec
dec
xor
sub
test
enter
mov
call
and
das
lock
and
ret
adc
pop
std
outs
inc
imul
fucomp
inc
sub
imul
clc
mul
inc
or
imul
retf
sub
xor
cs
in
retf
push
xor
push
imul
movs
movs
sub
popf
dec
stos
xchg
(bad)
iret
add
pop
mov
mov
call
dec
cli
popf
push
add
outs
loope
addr16
or
pusha
jp
loop
or
ins
inc
jmp
push
sub
js
add
sar
jbe
jne
mov
dec
cdq
sahf
sub
mov
add
mov
sbb
(bad)
mov
cdq
jnp
push
push
fidivr
stos
test
sub
pop
jge
mov
out
or
dec
add
or
inc
mov
jecxz
xchg
adc
repnz
jecxz
cmp
cmp
add
mov
stos
pop
mov
shr
lea
inc
scas
shl
mov
pop
or
mov
std
mov
sbb
adc
sub
sub
add
or
xchg
jo
adc
gs
cmp
and
lods
sub
leave
call
cmp
inc
pop
mov
adc
(bad)
int3
jp
outs
adc
xchg
or
and
pop
int
adc
jl
add
mov
mov
jl
or
jge
mov
jo
push
push
in
push
imul
mov
clc
(bad)
and
xor
push
in
pop
outs
sbb
rol
add
int
fsubr
inc
dec
jne
cmp
idiv
fcmovnu
sbb
pushf
xor
scas
out
fist
push
sbb
inc
pop
xchg
mov
imul
and
push
stos
mov
scas
add
pop
mov
dec
and
dec
inc
mov
pop
inc
inc
mov
movs
in
(bad)
xchg
xchg
mov
mov
push
sbb
mov
pmulhw
ins
mov
repnz
data16
shl
dec
inc
arpl
adc
add
loope
mov
cmp
dec
fst
neg
or
outs
dec
push
daa
retf
pop
mov
xor
push
sub
mov
test
pop
push
out
cmps
std
ins
xor
mov
mov
xor
adc
and
or
div
lds
inc
mov
(bad)
data16
pushf
scas
bound
cld
xor
out
add
push
ins
jl
mov
int3
adc
mov
call
xor
lods
arpl
pusha
(bad)
fstp
jae
push
or
add
mov
or
movs
add
cwde
scas
and
or
lock
pop
fiadd
pushf
leave
pop
ins
in
dec
jno
mov
fstp
mov
push
js
loope
dec
xor
xchg
mov
fild
mov
add
sub
mov
jbe
adc
or
cld
sub
mov
jno
adc
int3
pop
push
cld
dec
stc
cmp
dec
int3
push
jle
pop
push
mov
call
push
and
xchg
fcmovne
leave
push
mov
jmp
das
fidiv
dec
clc
test
icebp
cmp
cdq
jo
pop
xchg
sbb
dec
shl
pop
and
scas
pop
pop
fsubr
sbb
jle
out
call
mov
mov
xchg
lock
test
cmp
call
sub
add
push
sti
les
and
je
dec
sub
std
inc
inc
mov
xchg
mov
in
in
ins
out
int
fisub
and
push
je
and
xchg
jbe
mov
movs
fistp
(bad)
and
xlat
inc
jne
outs
clc
cmp
lods
pop
dec
repnz
dec
(bad)
fsub
pusha
adc
add
das
or
movs
outs
xor
sbb
sbb
test
sub
lea
fsub
scas
mov
out
cdq
or
inc
mov
push
mov
test
aas
movntps
enter
ja
lahf
xor
push
outs
sub
iret
pop
dec
test
(bad)
pop
dec
xor
jne
test
rcl
adc
add
ret
add
stc
sbb
mov
adc
xchg
mov
jno
fnsave
sbb
test
es
sbb
inc
pop
sbb
mov
mov
sbb
xchg
jne
out
mov
sar
out
repnz
imul
xor
outs
inc
in
ss
inc
retf
pop
cmp
pop
es
lock
jb
push
sbb
xchg
in
div
cmc
adc
movs
loopne
mov
stos
dec
adc
push
lods
cmp
sub
xchg
pop
cs
test
data16
(bad)
pusha
push
push
pop
loopne
adc
call
inc
add
push
jmp
ins
neg
fs
mov
cwde
movs
adc
push
fsub
cmc
fsubr
icebp
das
test
mov
outs
xchg
jp
lods
push
out
fdiv
mov
std
je
dec
aaa
in
add
pop
jl
add
add
mov
push
add
aas
jno
rcl
add
cmps
xchg
push
add
sbb
loop
xchg
out
dec
bound
or
int3
push
pop
push
rcr
retf
mov
sbb
ret
jmp
adc
fwait
cmc
pop
mov
sub
jne
or
ins
mov
add
icebp
leave
ret
test
imul
or
pop
fnstenv
sti
cli
imul
rcl
inc
ins
stos
mov
mov
add
retf
jl
inc
pop
mov
push
inc
sub
mov
loop
sub
imul
or
mov
repz
dec
in
xchg
fcomip
rcr
pop
mov
aam
mov
or
ret
arpl
or
mov
dec
jmp
sbb
dec
sbb
sub
test
cdq
(bad)
shld
push
push
push
fisub
out
jp
hlt
push
xor
pop
sbb
mov
dec
xchg
fucom
mov
or
out
jle
shl
xor
xor
add
hlt
or
pop
or
lock
outs
imul
pop
sub
in
popf
ins
jns
stos
add
jmp
mov
xchg
dec
enter
dec
jl
je
aam
shl
movs
xchg
lahf
sub
sbb
test
xor
inc
push
mov
test
fcom
push
adc
sbb
mul
test
xchg
jecxz
std
xor
repnz
div
imul
out
mov
xchg
sbb
or
mov
mov
std
mov
and
xchg
jne
clc
into
shl
aaa
push
in
cmps
retf
cld
push
jo
daa
retf
popa
jno
cwde
ins
call
fcmovnu
lea
(bad)
pop
push
mov
int
add
push
and
sbb
sbb
mov
(bad)
xor
pop
add
adc
dec
psubd
lea
repnz
sub
xor
jnp
mov
ror
test
xor
xchg
arpl
sbb
cmp
sbb
jbe
cli
push
lock
mov
and
mov
cmp
xor
into
call
pop
test
cmp
pop
rcl
mov
rcl
jno
sub
jbe
scas
sub
ds
clc
arpl
mov
mov
cmp
pop
pusha
dec
movs
push
test
fist
inc
adc
sahf
dec
add
jl
inc
sub
xlat
mov
push
fwait
xchg
jle
mov
retf
shr
or
pop
sub
push
xor
test
sbb
xor
sahf
jmp
inc
jbe
cli
sub
out
mov
jno
pop
mov
or
stos
add
pop
push
push
data16
mov
lgs
ror
dec
ffreep
clc
cdq
in
and
and
cmp
ja
cmp
adc
jl
inc
in
aam
mov
fidivr
jbe
or
icebp
ret
iret
push
jge
enter
xor
cs
push
ins
jmp
and
or
xor
sbb
xor
movs
xchg
stos
adc
jnp
adc
add
in
pop
(bad)
cs
stc
dec
(bad)
stc
gs
movs
(bad)
mov
in
pop
inc
xchg
or
shl
xchg
ins
js
dec
sub
mov
daa
(bad)
dec
cmps
test
div
js
inc
aam
inc
sub
jne
es
inc
gs
iret
or
int3
jae
inc
aad
or
sti
daa
imul
out
scas
jg
clc
sub
mov
mov
fwait
sub
push
mov
add
jne
jb
movs
mov
unpcklps
mov
mov
sbb
xchg
test
cmp
enter
add
jnp
lea
push
call
push
cmps
or
rcr
shr
sbb
fwait
test
or
in
or
push
sbb
clc
cmp
sti
ret
jle
sub
ds
add
add
jo
cdq
mov
(bad)
pop
nop
push
cwde
aaa
ret
or
push
bound
mov
xchg
in
retf
scas
or
movs
push
cmps
jns
div
out
jg
sub
out
jmp
call
mov
loop
pop
sbb
(bad)
lahf
int
inc
jb
inc
nop
mov
nop
mov
sar
sbb
scas
stos
jecxz
and
gs
enter
cmps
inc
adc
dec
push
fmul
cmp
xchg
js
sbb
test
and
and
retf
mov
gs
ins
aas
fprem
(bad)
push
cs
push
lahf
pop
lock
xchg
cmp
sbb
mov
lods
xchg
(bad)
stc
mov
bound
call
in
push
rcr
in
pop
cld
ficomp
int
cmp
mov
in
push
stos
dec
push
sbb
mov
fst
push
loope
or
lea
nop
add
cmps
es
in
popf
in
pop
sub
outs
and
push
test
xor
fwait
mov
stos
(bad)
mov
rcr
pop
popa
jge
jge
data16
scas
sub
push
and
sub
adc
jb
mov
adc
retf
in
scas
rcr
sub
out
fs
mov
xor
clc
sbb
fimul
pop
loopne
push
nop
and
pop
mov
cmps
jno
sbb
arpl
scas
inc
pop
and
cmp
dec
or
adc
xor
imul
inc
pusha
mov
or
in
add
leave
dec
adc
and
push
jl
mov
push
adc
fldenv
ins
out
or
scas
shl
sub
std
in
inc
sbb
jp
add
cld
in
leave
aaa
adc
xor
sbb
sbb
out
pop
repz
sbb
cld
push
and
sbb
jmp
push
sbb
cmp
add
xchg
and
(bad)
cmps
aad
sub
xchg
mov
test
jp
jo
das
pop
es
xor
pop
rcl
xor
cmp
jmp
add
add
mov
dec
xchg
pop
loop
stos
cwde
fisub
mov
sbb
mov
or
loop
cmc
retf
aad
dec
aad
das
sbb
xchg
bound
pusha
cli
xor
and
sti
sar
loopne
psrlw
les
jo
push
or
jp
sub
in
pop
add
push
mov
xor
pop
mov
je
mov
xor
icebp
retf
daa
xor
mov
pop
shl
mov
add
fst
jno
mov
jmp
lods
mov
cli
dec
(bad)
in
data16
push
inc
test
dec
mov
fxch
shl
dec
nop
movs
aad
mov
fwait
in
and
ficom
mov
ja
push
call
cmp
sub
mov
cmp
in
xor
mov
pop
ss
push
inc
mov
xchg
rcl
fwait
pop
call
xor
cmp
xchg
jmp
cmp
pop
(bad)
icebp
push
nop
fucomip
xor
sub
bound
mov
lds
pop
lea
repnz
or
inc
push
rol
pop
xor
fs
fld
adc
sub
add
(bad)
jo
lahf
iret
pop
mov
push
dec
fisttp
adc
jae
xor
jnp
cmp
cmp
cmp
out
mov
xor
adc
ror
(bad)
mov
(bad)
cli
jecxz
(bad)
iret
sbb
adc
pop
mov
dec
xor
pop
cmp
cmp
loop
cmps
sbb
shl
cmp
inc
aaa
shl
call
jnp
push
out
jl
test
mov
cmp
int
pop
inc
push
cmp
out
sub
(bad)
cmc
lods
pop
fwait
push
mov
ds
xchg
xchg
(bad)
movs
mov
stos
inc
iret
mov
sbb
inc
push
repnz
data16
loope
mov
jg
adc
lea
stc
add
ret
sub
in
pop
bound
pusha
in
and
jl
jmp
mov
scas
les
lods
sbb
daa
pushf
cmps
aas
test
add
inc
xchg
jecxz
loopne
add
dec
out
jl
fwait
push
aad
mov
jnp
bound
and
lock
sub
push
cs
push
xor
out
in
fwait
push
xor
xor
pop
enter
fadd
cdq
es
in
add
neg
xor
mov
mov
stos
mov
clc
mov
inc
pop
test
mov
xor
sub
pop
add
lds
out
mov
sbb
jge
jns
sbb
call
inc
add
jb
cmps
mov
xor
mov
cld
scas
je
call
sti
lods
xchg
lds
sbb
imul
test
arpl
mov
sbb
xor
mov
retf
les
and
enter
adc
xchg
inc
iret
pop
stos
xchg
add
xchg
pop
movs
enter
imul
xchg
sahf
mov
xchg
pop
push
pusha
xor
cwde
mov
rol
mov
dec
fwait
mov
push
ds
jmp
and
in
scas
mov
adc
xchg
test
add
stos
sahf
mov
inc
imul
jae
mov
xlat
unpcklps
retf
or
jae
adc
push
in
xchg
repz
test
outs
inc
dec
mov
or
repz
ror
jge
xchg
xchg
jle
rcl
push
cmps
out
stc
mul
mov
jle
stos
cmps
out
mov
pop
test
fsincos
dec
dec
push
pop
pop
jae
pop
sub
sub
ret
shl
lods
mov
aaa
mov
in
sbb
in
movs
test
mov
mov
mov
jl
jp
and
inc
lods
xchg
push
dec
lds
jle
pop
pop
sbb
sub
cmp
and
and
lahf
adc
inc
cmps
pop
jecxz
call
pop
scas
adc
ror
and
push
cwde
sbb
mov
popf
cmp
mov
dec
test
fwait
push
ret
adc
lods
mov
dec
or
cwde
fist
out
retf
(bad)
mov
adc
or
push
adc
(bad)
cmp
push
mov
rcl
movs
and
sbb
mov
int
push
ror
add
lds
push
adc
ficom
sbb
das
mov
lds
jmp
sbb
pop
jns
fwait
sub
scas
xor
xchg
pushf
popf
hlt
jnp
jg
mov
inc
push
int
dec
jo
dec
jl
pop
cli
sahf
out
call
cli
pushf
lock
or
call
adc
inc
imul
dec
ins
les
jns
and
mov
cmp
ins
int3
sub
inc
out
imul
(bad)
(bad)
cli
call
mov
inc
xchg
lea
pusha
inc
cmp
int3
call
outs
mov
mov
outs
retf
jbe
xchg
pop
mov
or
icebp
sbb
jmp
push
fistp
jle
cmp
popa
mov
push
cmc
retf
jmp
xchg
push
xchg
sbb
call
popa
mov
pop
shl
rcl
pop
ret
(bad)
call
loopne
inc
ds
push
and
adc
std
outs
js
adc
jp
stos
jle
cld
xor
push
dec
ins
mov
jmp
add
mov
add
add
xchg
fld
push
es
ins
in
cmps
(bad)
std
xlat
test
leave
and
push
push
pusha
jb
sbb
in
xchg
sub
mov
add
pop
fisttp
jne
retw
push
mov
cmp
add
inc
or
bswap
fscale
pop
push
div
dec
das
xor
push
jp
call
push
pushf
push
sbb
lds
cmc
cmps
outs
sbb
imul
out
gs
mov
lahf
push
mov
dec
jge
mov
dec
cmp
adc
jnp
stc
hlt
mov
xor
or
retf
inc
xor
push
mov
out
sbb
add
jmp
repz
inc
mov
jno
or
xchg
inc
pop
push
popa
cmc
dec
jo
or
add
enter
mov
outs
repnz
adc
ins
push
inc
inc
pushf
pop
aaa
je
push
les
push
sbb
fwait
dec
mov
fwait
xchg
in
retf
(bad)
jno
cmp
xor
imul
(bad)
out
add
dec
and
adc
popf
and
and
and
ds
push
pop
sub
enter
xor
shl
aam
fs
xchg
sbb
popf
pop
test
mov
std
sub
and
jo
dec
sbb
out
aas
xchg
push
daa
(bad)
adc
and
sbb
es
pop
jp
xchg
mov
rcr
cli
add
pop
das
stos
jns
mov
fsubr
xchg
fnsave
mov
outs
mov
push
lahf
repnz
mov
jp
xchg
jno
loop
pop
(bad)
stc
xor
cmps
out
xchg
mov
mov
or
test
fnstenv
cmp
xor
loop
js
xchg
lea
or
nop
adc
mov
ja
lods
dec
dec
sbb
sbb
cdq
push
xchg
mov
inc
ins
cmp
xchg
and
ror
(bad)
fdiv
lock
pop
scas
push
jecxz
xchg
jmp
jecxz
sub
dec
push
les
enter
pop
adc
test
call
shl
add
int
lods
sub
jmp
pop
sti
(bad)
jns
ret
xchg
dec
xor
hlt
adc
xchg
enter
push
inc
out
dec
imul
mov
jl
jno
add
add
aam
push
inc
push
inc
pop
cmp
xchg
ret
js
and
cdq
add
repnz
jbe
sbb
repnz
loopne
mov
out
inc
out
xor
mov
push
into
je
rol
jnp
neg
mov
xor
push
mov
ror
push
jns
cmp
xchg
and
adc
jns
cmp
adc
or
jo
leave
iret
dec
mov
xchg
leave
pop
dec
cmp
mov
dec
mov
mov
xor
hlt
dec
into
cmc
jp
jge
or
out
xor
push
fsubr
push
fmul
fwait
pop
mov
imul
adc
ret
les
(bad)
cdq
fadd
dec
inc
and
ja
cs
mov
les
jmp
sahf
cmps
out
call
int3
frstor
clc
sub
inc
and
add
clc
jo
jmp
sbb
leave
std
inc
out
jbe
add
add
cmp
nop
mov
into
in
inc
add
mov
test
xchg
fnstsw
cmc
dec
mov
mov
mov
mov
or
cld
jl
cmps
out
movs
lock
pop
sar
out
xchg
add
pop
sbb
dec
mov
iret
jne
sahf
shl
(bad)
sbb
sar
fld
sti
mov
xchg
(bad)
into
(bad)
int3
or
and
in
and
test
ds
inc
fstp
sbb
and
fadd
lock
add
call
enter
mov
mov
mov
mov
or
cmp
les
ins
mov
clc
mov
stos
sahf
mov
push
leave
xor
call
jmp
mov
fld
push
int3
pop
das
fistp
pop
mov
dec
inc
into
aam
push
lea
scas
mov
push
gs
push
jns
popa
out
inc
add
cwde
mov
or
ds
les
lods
dec
idiv
leave
jns
pop
jnp
data16
sbb
fld
(bad)
push
out
jp
lock
enter
pop
test
push
ret
sar
imul
jnp
dec
jno
push
mov
push
cmp
lock
xor
js
jmp
(bad)
cmp
jp
movs
out
push
out
jle
jle
mov
mov
pushf
sbb
mov
xor
lods
sub
push
call
shl
leave
cmps
jno
arpl
jne
es
das
loopne
mov
cmp
(bad)
push
add
hlt
shr
ret
rcl
enter
push
cmc
xchg
or
movs
loop
inc
mov
xchg
fld
into
jnp
pop
mov
rcr
imul
cmp
sub
sbb
add
xchg
pop
or
es
test
cmp
sbb
fild
inc
scas
daa
(bad)
fld
jmp
test
mov
adc
and
jb
xchg
mov
push
jle
push
xor
jno
adc
ins
not
das
out
cmps
pop
adc
inc
mov
sub
dec
ins
ins
loope
push
push
mov
pop
jns
pop
inc
jns
cs
pop
(bad)
loop
dec
sbb
aaa
fld
dec
dec
cdq
mov
cmc
pop
retf
ret
mov
sbb
pushf
data16
inc
cmps
stos
xor
dec
push
dec
pop
iret
push
and
ret
sbb
outs
stos
and
ins
and
dec
popa
jmp
clc
push
mov
cmp
imul
imul
xor
aas
inc
push
mov
jle
jecxz
dec
out
dec
int
ret
fsubr
mov
inc
or
test
mov
loop
dec
xor
push
push
arpl
jg
loopne
jl
hlt
lock
jo
test
jle
int
scas
test
push
dec
cdq
ins
inc
inc
test
imul
mov
dec
xchg
mov
shr
add
cmp
jo
out
mov
sbb
push
test
ja
loop
or
and
mov
gs
lock
fisub
push
sahf
mov
jns
ret
ins
cmp
inc
aam
xor
jl
cmp
std
lahf
mov
jge
dec
nop
xor
lea
cmp
(bad)
mov
imul
adc
shr
rol
xchg
add
int
lea
push
das
ins
fwait
add
cmc
inc
les
inc
pop
jmp
xor
loop
leave
add
push
int3
mov
pop
xchg
adc
aad
aaa
into
xchg
idiv
sbb
push
call
stos
adc
inc
sar
or
mov
adc
popf
fsubr
xchg
(bad)
mov
cmp
sub
push
mov
cmp
xchg
push
or
and
dec
mov
mov
bound
in
sub
dec
lahf
inc
cwde
mov
cmp
int
lds
sub
loopne
mov
mov
mov
popf
add
jae
or
inc
inc
push
fstp
pop
add
inc
ret
xor
xchg
and
xchg
jbe
inc
retf
out
mov
sbb
inc
sub
lods
mov
jmp
ror
std
adc
jmp
daa
or
loopne
xchg
or
lds
xchg
inc
mov
sub
sbb
push
ins
ret
jo
jg
loopne
push
sti
mov
adc
es
fwait
mov
sub
cli
mov
jge
pop
add
das
fs
inc
mov
call
test
adc
xor
pushf
dec
xor
imul
pop
mov
or
xchg
int3
loopne
dec
enter
into
ins
leave
jp
cmp
dec
retf
push
adc
cli
rcl
repz
(bad)
call
adc
outs
(bad)
lock
add
int
rol
dec
add
(bad)
enter
mov
mov
(bad)
ss
jno
scas
mov
fnstsw
adc
jle
jae
cld
jl
loop
mov
outs
jg
sbb
add
movups
push
mov
sbb
aaa
and
xlat
xlat
sub
sbb
cmp
pop
out
test
rol
ins
lods
sbb
cmp
mov
movs
ja
or
xchg
mov
call
rol
dec
addr16
daa
je
cmc
pop
sbb
pop
(bad)
push
push
fstp
pop
aam
push
or
push
jae
dec
iret
mov
fld
jae
stos
jg
jg
pop
ins
pop
mov
inc
bound
and
loop
pop
pop
lahf
push
jno
sar
cmp
jge
mov
pusha
clc
jno
out
mov
lods
cmp
int3
add
lahf
jmp
jae
cmp
iret
cdq
add
ins
mov
add
into
inc
rcl
(bad)
imul
aad
push
inc
pop
(bad)
mov
mov
pop
push
stc
aas
mov
call
pop
adc
rcr
dec
cmps
mov
mov
enter
inc
shl
(bad)
je
xchg
ret
and
test
sub
cmps
and
cmp
cmp
xor
pop
mov
push
add
push
ja
fldcw
pop
pop
scas
adc
sub
aam
dec
mov
mov
lods
jmp
into
inc
jne
rol
in
std
int
je
icebp
(bad)
sub
xor
cmps
lahf
push
int3
and
push
pushf
dec
sahf
pop
or
jno
mov
mov
test
xchg
mov
mov
mov
popf
loop
mov
loop
das
fld
hlt
int3
pop
sahf
out
or
mov
retf
xor
fild
call
push
lds
scas
mov
or
inc
mov
gs
mov
jg
js
mov
sub
shr
mov
fwait
mov
mov
sbb
in
xor
and
imul
xchg
jne
inc
bound
push
dec
ds
or
inc
push
repnz
iret
pop
gs
xchg
mov
mov
push
out
mov
hlt
int
rcl
fnstenv
dec
addr16
xor
fidivr
mov
xchg
jp
call
out
xchg
imul
cmp
fstp
cmc
mov
add
idiv
stos
gs
push
dec
push
xlat
adc
dec
dec
jle
pop
adc
mov
inc
inc
pop
jg
call
inc
cs
enter
ss
xchg
inc
test
in
data16
dec
and
inc
xor
xor
test
sbb
mov
jae
mov
int3
mov
sahf
mov
test
xchg
or
cmp
jns
inc
inc
jmp
arpl
and
nop
adc
je
push
dec
or
and
fst
jp
mov
adc
push
jge
mov
mov
mov
dec
jo
cmp
rol
mov
(bad)
loopne
jnp
mov
xchg
adc
gs
pop
or
cmps
(bad)
out
stc
mov
fs
sahf
jmp
add
mul
xor
enter
pop
(bad)
pop
push
jmp
fistp
mov
iret
sbb
lods
and
jmp
in
xor
adc
arpl
ins
xchg
fsubr
inc
xchg
add
jo
pop
ret
mov
add
shl
shl
xchg
sub
loop
test
adc
cmp
in
fwait
or
stos
xor
add
jle
hlt
int3
shr
loope
ftst
fistp
jnp
ins
and
or
jle
cmp
or
jae
es
xor
and
mov
enter
jbe
add
xor
and
es
xchg
ds
clts
shr
mov
cmp
jecxz
sbb
or
inc
out
adc
js
and
sub
stc
jge
cdq
sub
aaa
jo
pop
push
pop
push
adc
scas
icebp
adc
mov
cmp
mov
lods
repz
iret
movs
sub
inc
loopne
push
mov
or
cld
leave
and
popf
in
jmp
jg
lods
sbb
int
pop
and
imul
mov
mov
mov
sub
push
push
ror
adc
inc
push
imul
mov
call
ret
sub
xchg
call
or
pusha
pop
dec
out
sahf
arpl
je
cmp
push
jmp
fld
aaa
shr
lahf
(bad)
outs
dec
outs
ss
or
fwait
pop
test
sub
sar
(bad)
jl
stos
in
enter
adc
aaa
jl
jg
nop
jno
daa
jmp
or
mov
mov
xchg
es
nop
xor
test
addr16
es
aas
jo
xchg
add
outs
ret
dec
or
mov
loop
mov
sub
outs
out
and
sbb
jmp
sbb
cli
pop
jl
imul
(bad)
mov
rcl
sti
mov
sbb
mov
fld
js
pop
and
ins
sub
push
shr
dec
aas
add
jmp
lods
in
push
cmc
fsubr
into
mov
mov
(bad)
add
inc
cmp
jno
mov
(bad)
stos
and
pop
xlat
and
push
mov
adc
into
dec
lods
mov
sbb
add
jp
push
push
xchg
retf
cmp
jle
stc
cld
popa
mov
xchg
inc
and
xor
cmps
jecxz
cmps
dec
je
movs
data16
sub
push
fst
cmp
mov
adc
scas
cmps
jle
mov
mov
(bad)
xor
ss
mov
out
pop
cwde
xor
shr
popa
addr16
scas
cdq
(bad)
xchg
retf
cwde
xor
ds
(bad)
(bad)
jmp
pop
push
xlat
xchg
cmp
les
jnp
shl
ds
pushf
test
jae
inc
push
xor
add
popa
cmc
add
mov
jnp
mov
cmp
ds
cmp
jmp
addr16
sbb
mov
jnp
sub
(bad)
daa
pop
shl
xchg
cld
dec
push
cli
hlt
inc
test
sub
mov
jmp
jp
jge
ins
stos
jae
rcl
jge
or
mov
je
dec
inc
cmp
and
dec
jbe
xor
jg
jmp
mov
cmps
dec
xchg
test
repz
push
inc
adc
pop
in
cmp
mov
inc
or
shl
ja
mov
mov
adc
xlat
jmp
sbb
iret
jb
sbb
leave
or
div
(bad)
outs
test
pop
stos
xchg
adc
enter
push
out
in
or
inc
(bad)
iret
in
add
sub
scas
pop
xchg
inc
bound
xor
test
ret
mov
push
inc
fs
data16
push
xchg
mov
pop
xchg
push
js
add
pushf
and
sub
push
push
(bad)
das
jge
or
and
and
mov
fsubr
out
push
xor
enter
test
mov
movs
and
or
push
(bad)
pop
ret
into
jle
xor
retf
(bad)
neg
pop
(bad)
mov
xor
cli
xchg
sub
cs
pop
sub
and
fistp
(bad)
lods
xchg
xor
fs
imul
retf
sbb
adc
repz
jl
push
or
add
add
into
(bad)
ud2
scas
ins
arpl
or
sub
dec
ror
xchg
adc
js
push
fidivr
adc
loop
pop
cmp
pushf
cmp
cmc
fistp
xchg
stos
pop
cmp
movs
push
xchg
mov
hlt
sub
pop
cmps
xor
jle
fs
fwait
sub
call
aam
pop
sar
movs
lahf
aas
stos
idiv
sahf
(bad)
cld
sub
int
iret
aas
out
adc
xor
std
jle
jae
jne
jbe
out
int
pusha
xchg
stc
sti
and
out
fsub
xor
push
mov
push
push
sar
dec
jle
ins
jle
add
and
out
mov
fmul
call
inc
addr16
out
and
mov
mov
dec
or
cmc
stc
(bad)
xor
in
or
scas
shl
mov
pop
pop
fwait
dec
or
push
mov
jo
mov
push
inc
(bad)
out
fisubr
ja
shr
retf
mov
pop
ins
xchg
push
in
in
das
out
(bad)
nop
mov
stos
or
ins
or
int3
push
mov
mov
dec
leave
sbb
push
fwait
icebp
js
sbb
cmc
push
push
mov
mov
or
xchg
or
jb
dec
inc
enter
pop
cli
xor
fstp
inc
pop
pop
loopne
mov
and
jmp
inc
mov
sub
add
fild
push
cmp
lods
ret
ret
sub
loopne
pop
xor
add
inc
out
adc
mov
xor
imul
sub
xchg
ins
dec
add
or
jo
pop
out
cld
cdq
pop
out
repnz
xor
sar
pop
add
or
stc
mov
mov
in
xor
pop
cdq
pushf
jg
out
or
jno
mov
mov
popa
pop
jo
push
test
fimul
icebp
pop
cdq
int
arpl
shl
(bad)
js
inc
leave
shl
jmp
xchg
xor
adc
add
sub
add
je
mul
or
push
and
lock
dec
adc
adc
or
pop
mov
nop
retf
mov
xor
clc
jg
mov
jne
pop
sub
retf
stos
cdq
push
dec
loope
dec
lods
jecxz
jo
pop
xchg
sbb
(bad)
cmp
mov
mov
mov
push
jne
mov
sub
xchg
repnz
cdq
sar
jle
jl
cld
dec
dec
imul
pop
sub
(bad)
jecxz
nop
sbb
sbb
xor
sbb
push
mov
jne
out
cmp
movs
xchg
in
pop
(bad)
mov
outs
jle
dec
dec
das
loop
jne
sbb
imul
(bad)
rcr
mov
adc
sti
pop
dec
lock
add
adc
stc
push
mov
mov
sbb
cmp
or
dec
fwait
mov
or
inc
icebp
fild
mov
pop
imul
and
mov
cmp
mov
mov
pop
int
sbb
xchg
rcl
outs
aad
neg
js
pop
add
jns
cdq
mov
adc
sbb
fisub
rcl
adc
jmp
mov
syscall
into
mov
xchg
(bad)
iret
scas
push
inc
adc
fimul
imul
gs
pusha
pop
les
cmc
pusha
adc
xor
xor
push
and
push
xchg
add
adc
popa
out
int
mov
es
sub
outs
loop
lea
cmp
mov
sub
xor
into
lea
cdq
aas
pop
icebp
cmc
aaa
cmp
or
dec
xchg
push
jmp
push
xor
out
pop
xor
jo
ror
inc
loopne
ds
fidivr
cmp
movhps
std
movs
and
push
mov
outs
pop
mov
repz
psrlw
fmul
ins
int
nop
ret
cld
mov
cmp
sub
imul
ret
cmps
and
mov
out
mov
int3
or
shl
pop
mov
pop
push
scas
loopne
clc
or
xchg
mov
cmp
dec
inc
push
shl
mov
imul
fcomip
adc
mov
pop
(bad)
jmp
neg
sub
inc
sahf
push
xor
add
sub
call
mov
pop
out
repz
aad
sub
lds
add
jbe
mov
adc
xor
sbb
xor
retf
push
sub
je
in
(bad)
adc
rcr
sbb
jo
fidiv
mov
pop
in
pop
push
fisub
es
xor
shl
fcom
sbb
call
cmp
fmul
daa
dec
stos
movs
cmp
nop
mov
cwde
add
xchg
int3
mov
xchg
jp
aad
xor
out
shl
or
add
mov
xor
scas
cmc
dec
pushf
xor
stc
neg
popa
and
test
std
and
pop
dec
aad
jp
lods
das
pop
rcl
adc
mov
push
adc
add
fs
adc
stc
loop
xchg
jp
pop
push
in
ja
cmps
sub
add
sbb
sti
fiadd
lods
xchg
mov
(bad)
pop
add
aad
fdiv
fidiv
nop
mov
or
jns
pop
test
adc
cwde
xor
scas
leave
arpl
out
jne
push
std
inc
mov
imul
push
ficom
xchg
addr16
imul
xchg
stos
(bad)
std
hlt
les
scas
add
popf
(bad)
or
aad
and
push
xor
call
out
or
inc
mov
sbb
dec
mov
movs
fs
xchg
pop
lds
fistp
outs
ret
mov
xchg
adc
sahf
call
sbb
cmps
call
xor
leave
ret
out
jle
add
test
cmc
push
call
std
pop
shl
rcl
shl
cmps
in
mov
fmulp
cmps
stc
mov
add
clc
xor
adc
fist
and
or
pop
cmp
cmps
(bad)
aad
and
cmp
sti
loopne
xor
cmp
mov
dec
cdq
fidivr
mov
sbb
xchg
leave
sbb
xor
xchg
push
icebp
or
jmp
sahf
mov
stos
aaa
cmps
clc
(bad)
mov
mov
sahf
fsub
rol
sbb
adc
lea
ror
sub
push
lahf
lea
call
xchg
xchg
int
dec
jbe
mov
mov
lods
ss
stc
mov
mov
dec
sar
cmp
out
fisttp
or
movs
rcl
sub
and
xchg
mov
add
jmp
cmp
sbb
jecxz
in
ja
sub
fnstcw
xlat
mov
jge
(bad)
jmp
xchg
out
outs
cdq
rol
cmps
xchg
sbb
sar
dec
nop
(bad)
inc
mov
cmps
gs
lock
(bad)
ja
mov
and
add
sub
xor
jmp
push
loope
(bad)
jbe
sub
mov
xchg
in
imul
stos
jae
or
mov
ds
jg
fsub
mov
ins
inc
int
and
jg
test
adc
pop
lock
arpl
xchg
pop
cdq
inc
ss
xchg
or
mov
mov
popf
mov
jb
pop
call
or
mov
mov
pop
add
fdiv
out
(bad)
lahf
dec
jg
push
nop
jg
add
fwait
cmp
mov
push
rol
ins
repz
and
xchg
sub
sub
cli
push
sbb
fisub
sub
in
or
dec
inc
xchg
(bad)
mov
mov
push
add
push
xchg
daa
stos
push
jne
shr
loop
int3
push
gs
lock
gs
test
cmp
sahf
and
and
mov
fnstcw
xor
sub
cmps
inc
pop
xchg
(bad)
cdq
cmps
int
cmp
pop
dec
push
retf
and
and
sahf
rcr
in
inc
xor
dec
out
push
popa
jbe
sbb
ins
arpl
stos
popf
xchg
sahf
pop
mov
out
xor
xchg
xlat
cld
xor
inc
xchg
push
andnps
push
jg
xchg
jbe
adc
push
mov
mov
and
(bad)
into
cmc
mov
inc
sbb
sahf
sub
and
data16
inc
ror
retf
push
in
and
fsubr
in
adc
xor
jne
retf
imul
fadd
inc
in
push
cld
movs
mov
jp
jecxz
and
and
cld
or
nop
ficom
in
mov
or
inc
pusha
and
push
in
sahf
or
jae
add
jecxz
adc
sub
popa
push
sub
fst
lds
pushf
and
and
add
out
jne
retf
ret
push
cdq
jle
cmps
pop
out
and
and
frstor
push
leave
pop
push
push
and
sub
bound
arpl
dec
sbb
out
push
push
int3
xchg
or
(bad)
rcl
push
and
fisub
mov
jbe
or
rcr
xchg
rcr
hlt
mov
into
adc
imul
shl
neg
inc
ja
push
std
sub
push
bound
sub
daa
jle
mov
icebp
loopne
popf
push
hlt
int3
jge
cwde
ret
jo
xor
push
push
in
dec
or
ss
push
retf
stc
scas
stos
or
outs
sbb
and
and
push
aaa
jle
ss
sub
add
(bad)
stc
adc
push
pop
jne
repz
push
je
(bad)
mov
xchg
punpcklbw
or
xchg
adc
push
adc
mov
jns
ja
mov
cs
(bad)
mov
lods
loopne
xor
sub
xor
cmp
clc
mov
xchg
push
sbb
jecxz
inc
ins
test
push
fisttp
or
mov
lea
cmp
sub
lods
push
or
cmp
push
loop
inc
das
mov
cwde
out
(bad)
cli
dec
and
popa
mov
repnz
sbb
ret
fdiv
nop
retf
repnz
add
mov
push
xor
fwait
or
adc
and
cmp
jmp
push
js
jge
sbb
movs
sahf
adc
sub
fcmovnb
adc
mov
jne
(bad)
and
xchg
fisttp
mov
out
je
mov
jne
adc
not
or
jb
loop
mov
dec
int
xor
in
or
jbe
mov
shr
push
shr
dec
add
std
out
inc
push
dec
cmp
in
or
sbb
in
pop
inc
out
stos
inc
call
(bad)
jg
and
daa
out
in
jle
stos
or
mov
aam
into
jns
push
ins
cmp
lds
and
jne
lahf
(bad)
imul
stos
xchg
in
jmp
xchg
sub
nop
push
cs
aas
dec
bound
rcr
cmp
leave
adc
sub
xchg
pop
dec
int3
fisttp
js
jo
dec
out
adc
mov
div
not
pop
leave
cwde
mov
popa
mov
ins
(bad)
mov
push
mov
bound
data16
xchg
push
pop
adc
movs
xor
mov
(bad)
(bad)
mov
adc
cld
clc
sbb
and
push
xor
or
push
icebp
mov
push
push
dec
mov
push
sbb
movs
mov
fmul
int
(bad)
js
xchg
in
arpl
sbb
and
bound
or
or
dec
xlat
enter
in
popa
outs
into
adc
mov
das
inc
xchg
inc
mov
repnz
movs
xchg
icebp
hlt
jecxz
jg
dec
call
push
ds
or
stos
aam
inc
jnp
int
scas
(bad)
pop
inc
adc
mov
or
je
dec
mov
adc
sti
scas
xchg
xchg
lea
cs
sahf
mov
inc
mov
leave
push
and
ss
inc
or
hlt
push
lahf
mov
in
jmp
cwde
outs
popa
repnz
retfw
cmp
sbb
aad
ss
mov
fild
dec
dec
mov
pop
push
das
xchg
repz
aad
or
cwde
data16
aam
add
or
pop
dec
mov
dec
idiv
rep
aaa
pop
pop
rcr
std
not
(bad)
and
enter
xchg
or
cmp
push
(bad)
cmp
or
mov
adc
cmp
ins
lods
xor
push
sub
dec
mov
loopne
scas
movs
scas
push
les
adc
ja
dec
cmp
push
(bad)
pop
xchg
dec
dec
jnp
inc
sbb
(bad)
push
fidivr
repnz
test
retf
movs
fwait
ja
sub
dec
xor
mov
push
fs
mov
lahf
mov
into
bnd
sbb
sbb
int
add
push
xor
stos
or
scas
call
aaa
sub
inc
jmp
mov
stos
sub
pop
mov
retf
pop
jge
stos
enter
xlat
leave
lds
sahf
js
dec
test
mov
cmp
xchg
jmp
test
in
jge
push
je
add
pop
daa
es
aam
mov
push
push
mov
je
icebp
ret
push
lock
ins
adc
mov
sbb
ret
add
pop
add
fisttp
pop
(bad)
into
pop
push
and
imul
inc
into
push
int
cmp
and
jmp
(bad)
nop
(bad)
std
jl
mov
or
and
and
inc
mov
retf
sbb
cmp
inc
jecxz
add
imul
jae
in
fwait
jbe
out
inc
popa
mov
lods
stc
retf
icebp
daa
push
lock
sbb
sub
(bad)
fist
xchg
sbb
dec
inc
jl
cmp
mov
jo
mov
imul
in
dec
mov
dec
sub
xlat
xchg
push
aas
adc
add
outs
movs
sub
jnp
jne
rcr
xor
jno
mov
mov
jmp
pop
sbb
ret
adc
mov
nop
int
xchg
ja
pop
inc
inc
stos
sub
mov
(bad)
or
sbb
jne
jp
add
add
fldenv
fcom
ror
mov
in
retf
jns
(bad)
(bad)
fdivr
rcl
mov
mov
retf
xor
mov
adc
or
sbb
add
movs
xor
pop
xchg
sub
push
les
push
or
loop
adc
cmp
add
or
es
mov
into
pop
mov
ins
in
(bad)
sar
dec
(bad)
sbb
fsubr
add
pop
mov
or
lock
dec
cld
xor
cld
loopne
push
aaa
ret
les
add
jl
push
scas
icebp
mov
jnp
scas
enter
arpl
(bad)
sahf
(bad)
movs
inc
test
mov
add
sub
rcr
enter
sub
mov
mov
mov
push
jb
jg
adc
fdiv
add
inc
jl
jnp
loop
mov
int
mov
retf
mov
mov
add
sbb
cmp
xor
sahf
inc
mov
inc
inc
or
(bad)
dec
shl
sbb
mov
lahf
jl
mov
push
ds
jo
push
scas
gs
and
call
inc
xchg
dec
pop
mov
shl
fnsave
jb
cmp
sbb
xchg
mov
arpl
out
addr16
lock
(bad)
cs
xor
mov
jmp
out
lock
fwait
xchg
adc
dec
ficom
lds
mov
mov
mov
ins
(bad)
dec
add
inc
enter
sub
lahf
push
adc
fcom
pop
js
mov
rcr
sbb
fs
dec
shl
mov
dec
(bad)
cwde
jo
dec
mov
push
add
jg
stc
or
lods
dec
xchg
sar
cdq
xchg
ret
push
ins
mov
das
add
adc
enter
inc
mov
inc
jno
adc
xor
nop
sbb
pop
pop
lods
test
and
test
mov
imul
arpl
xchg
inc
outs
sbb
mov
xchg
and
jp
rol
inc
xchg
xchg
push
outs
adc
ins
dec
ror
sbb
xchg
aam
jmp
mov
jbe
fdiv
jmp
test
pop
jp
test
push
stos
pop
int
mov
adc
jae
test
xchg
scas
mov
cwde
ret
popf
cmp
lahf
lods
js
or
sbb
cmp
cmp
dec
in
push
ins
add
inc
xor
xchg
inc
shl
mov
mov
xor
into
xor
push
or
fmul
pop
fistp
pop
mov
sbb
or
enter
nop
and
cld
sub
test
mov
mov
cwde
dec
data16
sub
nop
mov
push
pop
repnz
cmp
sti
lahf
jmp
jmp
retf
sbb
test
bndldx
test
ret
xchg
stc
scas
inc
mov
pop
(bad)
cwde
fstp
aam
mov
xor
call
push
add
pop
mov
icebp
stos
and
dec
movs
sbb
sahf
(bad)
or
cmps
mov
mov
jp
mov
(bad)
mov
push
loope
mov
ret
imul
je
ss
cmp
fild
cmp
popf
fdivr
push
dec
xor
sbb
adc
pop
in
and
popa
pop
repnz
enter
xchg
mov
jmp
out
dec
xlat
retf
jns
pushf
mov
mov
not
aam
and
rcr
dec
lds
aaa
add
fxch
loope
loope
lds
mov
cmp
xchg
mov
or
cmp
inc
mov
mov
pop
sub
pushf
clc
and
arpl
cmp
cmc
pop
movs
not
div
inc
push
pop
pusha
dec
leave
adc
lds
dec
add
mov
ss
out
inc
pusha
xor
sti
xchg
pop
dec
pop
dec
push
cmp
fwait
outs
mov
loop
xor
inc
inc
sbb
inc
shl
call
retf
dec
sub
icebp
stc
cwde
aad
jb
fbld
repz
pop
mov
xchg
xlat
xchg
scas
cmp
rol
cmp
jmp
xor
dec
dec
pop
dec
fnstenv
pop
cmp
pop
ret
add
clc
lock
clc
fisttp
rcr
mov
fs
mov
jns
fisubr
mov
adc
fisub
div
inc
fist
jl
mov
sub
jns
test
cmp
xor
jp
shl
ins
leave
cmp
jno
push
add
xchg
mov
cmp
(bad)
cld
stc
stc
dec
adc
inc
sub
daa
jge
ja
js
ss
loope
leave
sub
aam
push
mov
ficom
xchg
js
xor
mov
jmp
dec
mov
retf
push
pop
icebp
das
bound
movs
gs
ds
add
add
jbe
inc
lock
mov
add
inc
movs
loope
push
popa
cld
movs
sbb
cmp
xchg
dec
push
data16
xchg
push
loope
rol
xchg
or
sbb
push
cmps
or
xor
mov
(bad)
loopne
xor
sub
add
rcr
mov
int3
push
loope
mov
aad
pop
and
fldcw
cmp
inc
and
loopne
popa
clc
mov
jb
outs
neg
dec
mov
xchg
mov
pop
xchg
stos
sub
mov
jb
push
(bad)
paddsb
and
inc
(bad)
retf
(bad)
(bad)
sub
xchg
dec
push
xor
inc
shl
data16
add
cmp
cmp
jp
mov
enter
add
out
xchg
(bad)
retf
mov
(bad)
jae
pop
jl
xor
test
push
and
aaa
fwait
inc
in
xchg
xor
xor
jecxz
and
push
sub
test
scas
aaa
sub
jle
popa
mov
retf
cmp
cmp
jo
in
in
dec
fimul
stc
xchg
or
mov
les
xchg
ds
xchg
push
aad
aas
popa
std
sbb
xor
xchg
call
jecxz
mov
cmp
mov
jno
cs
inc
jle
xor
popa
int
aam
jno
call
inc
push
shl
call
jbe
sar
sbb
jg
(bad)
pusha
dec
test
ss
push
mov
out
xchg
xor
xor
cmp
sbb
xor
inc
push
push
cmp
fistp
mov
or
push
imul
xchg
loop
pusha
sub
(bad)
icebp
mov
mov
pusha
clc
mov
cmp
pop
in
popf
xor
push
and
xchg
add
sbb
and
xchg
jbe
cmp
cmp
test
mov
xchg
test
xlat
nop
jmp
ret
mov
add
jae
xchg
mov
xor
adc
jns
xor
fcomp
inc
inc
push
inc
(bad)
mov
push
push
xor
fadd
xor
mov
cdq
fs
jae
fldenv
mov
sbb
(bad)
bnd
ins
out
cmp
stos
test
jecxz
enter
jno
cdq
mov
pop
movs
das
popa
sub
pop
daa
adc
add
xchg
pop
add
jb
xor
xor
jle
add
push
or
loop
mov
shl
cmps
adc
mov
mov
sub
xchg
mov
jl
push
(bad)
cmps
sar
jnp
cwde
mov
lods
ret
loop
cmc
shl
or
jns
jno
mov
push
lods
nop
jbe
sub
into
sub
xor
inc
fsubr
std
enter
and
or
or
sub
lahf
mov
(bad)
pop
fs
mov
jns
push
fwait
mov
mov
es
push
in
jmp
out
inc
sub
xchg
fs
xor
cmps
add
adc
mov
test
arpl
dec
movs
sub
fild
loope
(bad)
mov
cmp
jmp
push
push
adc
ins
mov
inc
sub
mov
mov
outs
xor
mov
lock
mov
ret
lods
mov
mov
ficomp
ret
xchg
loopne
xor
rol
jmp
jmp
clc
gs
dec
cs
call
dec
cld
cs
xchg
mov
dec
shr
pop
loop
push
inc
js
call
xor
pop
stos
mov
or
push
pop
inc
mov
test
test
cwde
ins
xchg
out
sub
xor
xor
mov
imul
sbb
inc
loop
mov
scas
jno
fwait
rcr
jmp
mov
fadd
mov
xchg
jmp
repnz
xchg
jmp
dec
je
and
dec
pusha
je
jecxz
mov
xchg
xor
jns
push
mov
mov
inc
mov
jmp
imul
fnsetpm(287
leave
rcr
pop
movs
addr16
xchg
out
mov
retf
aas
test
in
call
movs
cli
pop
mov
call
pop
loopne
inc
xchg
aam
ficomp
jmp
mov
xchg
add
movs
xchg
and
xchg
or
add
mov
mov
add
dec
cmps
xchg
call
xlat
cwde
adc
jmp
push
push
pop
call
add
fs
or
pop
jmp
leave
movs
sub
in
mov
push
mov
test
popf
inc
cdq
popf
popa
ins
xchg
add
xor
xabort
add
int
nop
pop
push
sbb
mov
push
add
(bad)
mov
imul
jmp
shl
in
push
das
mov
aad
sahf
sub
dec
cwde
scas
in
mov
sbb
xor
cdq
xor
xor
popa
rcl
popa
shl
jl
sub
mov
pop
lods
sub
or
pushf
xor
pushf
dec
dec
pop
fsub
jb
stc
out
daa
inc
scas
jmp
popa
repz
xor
sbb
sub
xor
and
sub
clc
push
retf
sub
test
icebp
mov
mov
dec
add
ins
shl
jmp
mov
mov
cli
cli
sub
xchg
dec
ss
jo
lods
fs
add
mov
rcr
test
cmps
mov
xor
std
or
stos
mov
lock
ret
mov
hlt
add
ss
test
repnz
jmp
ds
xor
shl
fwait
inc
fild
js
mov
lea
pop
fwait
leave
dec
ret
mov
xchg
cmps
fdiv
bound
movs
mov
outs
fisub
push
les
(bad)
dec
push
push
pop
das
cmps
jne
and
mov
sub
xor
(bad)
cmc
fmul
ins
pop
xor
dec
pushf
or
sub
jmp
pop
add
jbe
inc
mov
xchg
out
mov
gs
pop
or
inc
loop
jle
push
sbb
sub
and
test
addr16
js
les
(bad)
inc
pop
scas
nop
mov
xchg
test
int3
cmp
ins
adc
mov
fwait
retf
push
mov
adc
push
and
xor
or
or
test
fild
jle
(bad)
cs
je
xchg
retf
sbb
xor
mov
push
xor
(bad)
sbb
jns
iret
adc
adc
out
xor
cmp
sbb
mov
popf
mov
mov
fucomp
xchg
mov
sti
mov
xchg
loop
js
repz
(bad)
or
xchg
xchg
popa
pop
mov
jl
enter
mov
add
pushf
je
adc
cs
cli
jg
outs
push
jmp
mov
push
mov
repnz
neg
cli
dec
and
mov
ins
mov
and
or
arpl
inc
jg
dec
mov
inc
scas
enterw
rcl
mov
push
inc
xor
xchg
dec
mov
pop
cmps
cmp
cmps
add
jno
ffree
fdivr
dec
out
fdivr
out
xor
fadd
adc
call
inc
inc
jae
sar
and
inc
sbb
aaa
(bad)
jno
cmc
xchg
das
pushf
cmp
jle
inc
xchg
stos
stos
jmp
sbb
sbb
jl
outs
sub
test
je
xchg
fsubr
mov
cmp
ficom
add
dec
mov
or
iret
xchg
push
jp
fisubr
jne
mov
sub
xor
dec
cmp
pop
sub
add
rcl
cwde
add
inc
push
addr16
inc
add
push
xchg
data16
mov
iret
xchg
call
inc
jne
stos
out
push
popa
jmp
aam
push
stos
push
jno
mov
movs
xchg
mov
mov
sbb
xor
pop
(bad)
in
xchg
pop
pop
inc
bound
retf
clc
sub
lds
xchg
cmp
data16
jle
retf
test
shl
jmp
test
into
sbb
test
mov
pop
push
out
dec
ficomp
jmp
pop
icebp
mov
sbb
push
mov
jns
or
jb
shl
xchg
fist
retf
push
cs
int3
loope
std
lods
loop
arpl
and
out
fdiv
shr
clc
std
test
cmp
sbb
loop
xchg
leave
in
shr
and
jmp
mov
and
pop
inc
ins
fdiv
adc
mov
dec
stos
and
push
fcom
test
ss
pop
imul
sahf
neg
popa
outs
int3
push
fdiv
(bad)
repnz
push
mov
arpl
lock
inc
scas
test
in
mov
pop
jb
rcl
inc
push
jle
es
mov
sti
lahf
xchg
icebp
sub
and
xlat
ror
ret
call
stc
sahf
or
and
jmp
add
dec
out
scas
xor
push
push
rcl
in
push
sbb
fld
or
sbb
or
fcmovnu
mov
int
push
scas
out
push
das
out
and
add
dec
inc
aad
outs
(bad)
dec
sub
mov
outs
mov
stc
jns
mov
xchg
cmp
daa
ret
rcr
call
fidiv
ret
mov
inc
push
pop
inc
cmp
mov
(bad)
xchg
mov
cmps
mov
pop
je
or
push
aaa
sti
mov
xchg
je
(bad)
xchg
test
jnp
lea
push
xor
pop
mov
cli
xor
fdivr
aaa
mov
nop
pop
sub
btr
lds
rcr
mov
jle
addr16
rcr
jp
xor
rol
loope
mov
xchg
not
push
iret
push
js
fwait
add
inc
jl
loop
icebp
call
and
jb
test
or
add
mov
leave
cmps
test
pop
scas
mov
popa
or
jne
cmp
jg
cmp
aam
push
cmp
lds
rcl
shl
push
sar
in
retf
scas
hlt
xchg
sub
push
xchg
repnz
nop
or
jo
retf
push
add
mov
jns
pop
out
xchg
add
(bad)
(bad)
popf
shl
aam
xor
inc
aad
or
retf
or
lahf
scas
sub
inc
xchg
(bad)
fiadd
dec
mov
js
in
push
scas
mov
pop
add
xchg
test
add
pop
ins
push
xchg
push
xor
retf
push
xor
add
pop
popf
pop
push
mov
test
jnp
fwait
mov
pop
mov
addr16
push
int
adc
xchg
pushf
xor
pop
xchg
jle
xchg
enter
jg
or
iret
imul
call
movs
dec
mov
xor
fdiv
mov
gs
test
rol
cmp
jp
ss
cwde
loope
jb
call
sbb
into
push
mov
mov
jmp
fistp
and
inc
jp
push
push
mov
cmc
adc
sbb
sbb
(bad)
daa
adc
test
mov
mov
pop
aaa
or
push
xor
sub
call
shl
mov
push
pusha
(bad)
repnz
sbb
jecxz
imul
pushf
int3
ja
mov
push
cmc
push
cmp
enter
xchg
shl
sub
add
mov
sub
and
ror
mov
push
mov
dec
cmps
outs
push
sbb
or
rol
es
add
cmp
scas
movs
add
call
mov
lock
jl
jl
sahf
or
test
sub
sbb
cs
cdq
xchg
aad
shl
mov
nop
sbb
arpl
icebp
das
push
adc
test
mov
xchg
aam
into
sbb
or
scas
xor
push
jae
adc
pop
mov
and
ss
adc
pop
pop
outs
mov
and
aaa
jge
mov
mov
call
lods
sbb
jp
or
retf
adc
xor
jecxz
mov
movs
push
sbb
cld
xor
mov
bound
push
push
js
jmp
rol
sub
sbb
dec
pushf
adc
gs
push
test
retf
stos
push
rcr
adc
push
loope
call
iret
dec
cmp
and
mov
xchg
sbb
daa
mov
int3
loope
and
xchg
cmps
shr
iret
fwait
imul
dec
movs
add
push
dec
pusha
inc
sub
sbb
pop
add
loopne
mov
mov
or
fs
mov
jp
lods
sbb
or
xchg
adc
lods
xor
retf
(bad)
pop
shl
call
fnsave
ds
in
data16
xchg
mov
pop
stc
push
push
pop
loope
scas
sbb
bnd
mul
lods
adc
jbe
rol
repnz
ja
xor
dec
adc
js
sbb
cmp
xlat
data16
push
stc
dec
push
jae
dec
lods
mov
nop
or
adc
add
enter
in
dec
mul
push
jl
and
xchg
shl
cli
sub
rcr
jb
outs
jbe
aas
mov
cmp
jecxz
retf
push
stc
mov
jmp
ret
and
in
push
mov
retf
fisubr
jl
sbb
mov
mov
loope
pop
stos
lds
ds
ret
adc
xchg
and
(bad)
psubq
xor
fild
out
mov
or
and
outs
or
popf
mov
mov
cmps
mov
ficom
fimul
gs
mov
mov
std
sub
inc
cmps
dec
pusha
mov
mov
aad
pop
push
xchg
test
scas
mov
mov
out
add
fstp
in
outs
into
add
dec
xor
cmp
stos
call
jle
lds
lahf
push
cs
push
jge
imul
call
mov
mov
xchg
mov
imul
(bad)
idiv
and
sbb
data16
rcr
or
mov
ret
jno
sbb
jne
or
push
(bad)
retf
push
mov
adc
dec
in
pop
push
xchg
shr
mov
push
push
push
ret
mov
movs
rcl
test
jns
ja
inc
inc
adc
shl
dec
les
inc
aad
es
sysexit
imul
clc
pop
jns
jg
cli
frstor
mov
popa
ror
(bad)
jmp
ins
sti
sbb
gs
mov
adc
jne
or
sub
cmp
xchg
adc
fistp
loopne
(bad)
and
out
xchg
fdivr
adc
and
and
ins
jg
movs
or
ss
mov
pop
pusha
jmp
dec
sbb
outs
(bad)
lods
inc
test
(bad)
outs
sbb
movs
dec
mov
fcmovnbe
push
adc
cmp
cmovb
jo
(bad)
adc
iret
fsincos
clc
(bad)
and
lahf
mov
jns
bound
dec
in
and
ror
mov
not
mov
cmps
retf
inc
out
scas
push
cmp
jecxz
mov
leave
(bad)
stc
cmp
mov
daa
pop
lods
cmp
jnp
cmc
outs
mov
mov
call
test
jg
leave
(bad)
and
push
rol
xchg
jno
push
or
ret
cmps
fmul
ror
mov
out
jbe
lods
jmp
add
scas
jp
in
out
or
popa
and
imul
outs
clc
loopne
mov
add
enter
cwde
mov
xor
add
test
adc
dec
pop
or
sbb
mov
out
dec
sub
aas
mov
sar
sub
pusha
mov
(bad)
pop
adc
mov
inc
or
mov
push
sub
das
fld
into
push
aaa
dec
push
inc
jnp
mov
mov
cli
wbinvd
jmp
in
test
ja
jno
sahf
sti
sub
test
pop
fld
ret
push
mov
inc
daa
mov
es
out
shr
mov
icebp
mov
push
mov
jmp
ffree
inc
lods
fmul
sbb
les
rcl
mov
stos
in
cdq
cmp
or
in
out
push
jnp
out
les
mov
push
js
adc
mov
adc
out
out
aad
cld
ins
popa
cdq
call
xchg
cmp
mov
mov
adc
cwde
sbb
push
addr16
jmp
dec
add
out
cmp
mov
jno
ja
ret
lods
pusha
xchg
push
cmps
movs
cmp
(bad)
out
repnz
xchg
daa
fdiv
xor
call
ins
mov
jmp
scas
add
stos
pop
js
repz
aaa
lock
out
or
xor
xchg
out
cmc
shl
cmp
into
ss
mov
or
mov
pusha
call
push
pop
mov
int3
icebp
push
js
or
pop
jp
xchg
mov
jmp
sar
cmps
inc
jno
out
pop
outs
cmps
ja
inc
and
pop
jns
(bad)
in
cli
jg
mov
mov
mov
repnz
inc
xchg
sbb
vmovd
sti
aas
adc
lods
mov
add
jae
addr16
xor
dec
call
or
cmp
aam
mov
sub
(bad)
push
cmps
lahf
lock
pop
rcr
jmp
retf
xchg
std
test
sbb
mov
js
push
(bad)
movs
hlt
dec
mov
dec
inc
push
cmp
fadd
add
mov
sahf
xor
(bad)
and
in
adc
adc
mov
jb
jle
pop
in
and
hlt
adc
cmp
inc
xor
data16
fstp
cmp
jae
jbe
aam
mov
push
cmps
push
adc
pop
call
mov
bnd
movs
nop
inc
cmp
(bad)
popa
(bad)
cdq
adc
mov
(bad)
cli
push
mov
arpl
(bad)
into
mov
inc
cmp
mov
pop
sub
stos
daa
stc
(bad)
in
push
xchg
jg
jno
mov
mov
jl
jbe
pusha
dec
movs
addr16
and
xchg
jo
in
stos
clc
push
movs
cld
lods
pop
loop
sub
cmp
mov
xchg
jo
(bad)
mov
cli
(bad)
addr16
mov
je
inc
fsubr
inc
fadd
sbb
inc
xor
loope
fnstcw
and
pop
test
shl
jnp
inc
ja
cmc
xchg
adc
push
and
repnz
les
and
dec
jmp
lock
popa
(bad)
push
je
movs
(bad)
in
xor
add
lds
cmp
mov
inc
stc
lods
cmp
or
push
cmp
call
jl
aam
loopne
fidiv
out
ffreep
mov
xchg
call
(bad)
in
scas
shl
leave
retf
cmc
xchg
popa
sahf
cs
mov
pushw
mov
xchg
dec
push
ret
mov
jae
xor
mov
(bad)
xor
or
mov
push
addr16
sub
mov
data16
xor
cli
fs
daa
cmp
std
popf
pop
shl
mov
or
adc
das
dec
pop
xchg
loop
repnz
mov
mov
popa
inc
mov
and
jo
inc
cs
adc
stc
out
and
and
cmc
xor
dec
lds
xor
scas
sub
jo
retf
push
mov
cld
pop
mov
inc
enter
js
imul
jmp
pop
mov
dec
push
cmps
(bad)
lahf
(bad)
retf
test
pop
icebp
jno
mov
cmp
in
mov
adc
mov
(bad)
(bad)
iret
fdivr
hlt
push
cmp
inc
lods
lods
in
add
mov
xlat
dec
xchg
cmp
adc
adc
push
jo
hlt
iret
and
cmp
inc
mov
bound
pop
jbe
shl
cli
add
jecxz
iret
sbb
(bad)
stos
xchg
repz
test
imul
push
inc
lea
ds
cld
mov
inc
test
push
xchg
cwde
in
xor
neg
jge
dec
or
or
add
shl
addr16
cmp
or
mul
es
retf
aas
xchg
cmc
mov
std
cdq
pop
inc
mov
ja
mov
mov
pusha
mov
aam
jo
dec
sub
jp
cwde
daa
sbb
fmul
call
or
dec
sub
mov
add
rcl
cmps
hlt
daa
call
pop
retf
dec
pop
inc
add
cmp
xchg
call
or
outs
push
jns
(bad)
pop
iret
cmp
and
sar
xchg
(bad)
mov
mov
fmul
lods
push
push
std
addr16
mov
fnsave
jl
ds
or
dec
sub
jle
mov
pushf
loopne
or
cmps
dec
sbb
xchg
fistp
sub
xchg
test
ds
xlat
sbb
inc
mov
lods
fimul
fimul
inc
ds
xchg
leave
sbb
stos
in
imul
pop
loopne
popa
retf
pop
pop
aaa
inc
aam
lods
cs
iret
popf
xor
dec
arpl
ins
movs
mov
xor
ds
adc
repnz
cmc
mov
sbb
jmp
and
sub
lods
cmp
mov
push
in
pushf
shr
sbb
repz
arpl
mov
aad
leave
xchg
xchg
mov
jg
add
fistp
xchg
or
pop
cld
cmp
ret
jo
add
ror
and
mov
ins
sub
adc
outs
mov
out
adc
test
xchg
add
ror
es
mov
scas
cld
mov
cmp
xchg
mov
sbb
mov
xor
clc
xchg
movs
mov
add
fdivr
mov
mov
jae
mov
inc
jmp
xchg
fld
jge
push
sti
push
xchg
pop
neg
pop
out
sbb
pusha
or
mov
sbb
call
jge
(bad)
scas
int
fmul
xchg
xor
xchg
mov
nop
add
cs
retf
cmps
push
push
mov
movs
fucomi
(bad)
sub
out
shl
xor
icebp
(bad)
jmp
sub
dec
cli
xchg
xchg
inc
dec
pop
xor
lea
es
jle
inc
and
fs
cmp
repz
or
push
mov
inc
jne
push
(bad)
or
push
stc
sahf
or
rol
cmps
jnp
popf
ins
iret
mov
cmp
and
pop
add
xchg
xchg
fucom
jmp
mov
scas
inc
adc
xor
movs
nop
push
movs
cli
jle
sbb
or
gs
jnp
stos
arpl
xchg
lods
sub
sbb
sub
pop
(bad)
lea
or
mov
xchg
push
cld
and
mov
sbb
scas
jmp
mov
dec
jnp
aas
and
cmps
push
rol
shl
imul
pop
dec
xor
add
retf
loope
inc
pop
sar
out
pop
and
out
cmp
push
int
js
sbb
ins
loope
pop
jmp
jge
mov
mov
adc
or
push
mov
out
sub
sub
xor
mov
sub
add
stc
pusha
scas
fwait
repnz
jmp
test
test
ret
push
aam
cmp
dec
test
jp
or
push
and
in
rol
jl
sub
mov
stos
mov
sahf
pusha
jg
or
inc
mov
dec
adc
jbe
nop
cmp
jmp
enter
push
cli
inc
fs
call
popa
test
jnp
sbb
mov
ror
jl
sub
out
dec
jmp
push
(bad)
retf
inc
aam
movs
icebp
xchg
cmp
imul
nop
dec
fistp
mov
lock
xor
hlt
mov
dec
fdivr
xor
xor
(bad)
pushf
cwde
int
xchg
mov
xchg
jbe
xor
lds
push
cmp
rcr
jp
leave
mov
shl
and
pop
or
adc
retf
test
outs
movs
jae
lea
into
cmp
fistp
dec
imul
mov
aad
push
cmps
mov
je
push
sub
push
xor
sbb
sub
int3
add
hlt
ficom
xor
fcmovnb
inc
mov
out
fdiv
daa
fisubr
bound
jb
outs
lea
stos
je
rdpmc
pop
mov
adc
cs
out
add
and
adc
xlat
xor
popa
dec
mov
loopne
add
or
(bad)
dec
mov
mov
fidiv
pop
push
fist
pop
jno
and
fdivr
dec
xor
inc
adc
cmp
mov
or
popa
fld
cwde
pop
push
mov
push
xchg
sbb
hlt
or
inc
test
sar
mov
mov
dec
loope
push
mov
aad
dec
inc
out
or
pop
or
adc
dec
cwde
jae
ror
fsubr
ins
sbb
jno
mov
jecxz
jmp
jns
jne
rcl
ss
ss
lock
dec
out
mov
jns
(bad)
and
pop
push
inc
jl
xor
call
icebp
mov
sbb
push
sbb
fucomi
adc
and
fidiv
cmp
push
cmp
and
or
jge
push
mov
ror
leave
push
push
shl
mov
icebp
add
mov
adc
sbb
addr16
scas
fmul
jmp
outs
xchg
jmp
aaa
sub
push
inc
xchg
and
jmp
cmp
mov
cmc
xchg
fidiv
add
add
fdiv
outs
out
das
clc
xchg
test
dec
push
stc
fnsave
shl
hlt
cmpxchg
adc
lods
or
xchg
dec
fs
ficom
mov
xor
inc
mov
xor
pop
jae
or
push
dec
lds
into
fiadd
fwait
mov
push
add
jmp
sbb
aas
retf
and
mov
icebp
pop
mov
les
cwde
ficomp
enter
push
xor
aad
faddp
add
dec
into
xchg
jnp
aam
pop
xor
xor
mov
xlat
mov
xchg
fcom
out
pop
popa
movs
inc
arpl
aaa
stos
push
jmp
inc
mov
test
adc
cmp
dec
push
sub
into
cmp
popf
mov
mov
mov
in
sbb
ret
stos
test
call
pop
xchg
idiv
ss
or
mov
lock
or
inc
mov
sahf
pop
push
mov
shl
jnp
imul
repnz
push
inc
pop
jecxz
das
jle
sbb
mov
shl
pop
test
xor
inc
out
inc
fbstp
sbb
or
dec
mul
lods
idiv
out
xlat
or
outs
xchg
sub
ret
fdivr
fdiv
jge
fst
add
or
call
fsubr
in
and
cmp
push
push
aad
loopne
mov
stc
pop
adc
inc
aad
sti
adc
rcr
jge
xchg
mov
jg
dec
lahf
sbb
addr16
sbb
cmc
mov
cmc
sbb
lds
jbe
ret
xor
data16
and
cmp
cmps
add
mov
mov
or
fwait
popa
loop
mov
jmp
inc
outs
mov
(bad)
mov
mov
pop
cmp
and
fcomp
nop
shl
nop
cs
xchg
pop
sbb
dec
xor
cmp
mov
out
(bad)
xor
(bad)
and
test
mov
in
pop
sbb
mov
pushf
rcl
or
ins
lods
retf
dec
dec
stc
repnz
aaa
sar
jne
dec
outs
lds
push
cdq
pop
sub
cmp
pop
mov
cmps
dec
test
jge
mov
test
adc
addr16
test
mov
out
mov
clc
dec
(bad)
mov
and
mov
dec
call
rcl
out
adc
add
test
arpl
test
jecxz
push
lods
cmp
xchg
push
aas
cmps
jo
or
cs
add
ins
dec
xor
mov
xchg
jg
add
test
stc
add
sahf
xchg
jecxz
enter
mov
(bad)
mov
xchg
pop
iret
sbb
mov
pop
dec
sub
sahf
jecxz
test
mov
ss
daa
in
push
lods
jb
ror
xchg
std
mov
retf
enter
xchg
leave
out
(bad)
jg
cli
jb
fs
cmp
ds
mov
and
fistp
or
retf
loope
push
push
xchg
dec
jg
and
cmp
inc
scas
fs
adc
cli
fbld
test
mov
adc
mov
ins
push
das
cdq
mov
xlat
cmps
pop
test
lods
xor
jns
int
jge
xchg
inc
sub
push
cmp
imul
pextrw
mov
ins
lods
cli
dec
cmp
pop
(bad)
in
mov
dec
mov
into
sbb
in
push
lods
repz
cli
mov
mov
ret
sbb
shl
and
mov
add
jno
(bad)
mov
push
and
ret
pop
add
mov
jbe
inc
inc
into
add
sbb
aad
movs
push
inc
add
and
outs
jb
jp
outs
or
ins
js
addr16
js
(bad)
push
sbb
pusha
push
inc
repnz
xchg
jge
jp
lahf
mov
inc
jge
cmp
push
inc
sti
inc
adc
mov
add
sbb
dec
fcmovne
dec
(bad)
dec
ss
in
out
xlat
push
xor
jge
pop
loopne
push
clc
cmc
xchg
sar
retf
and
mov
jo
sbb
ja
push
mov
push
add
imul
bound
pop
lods
fldenv
inc
xor
jl
(bad)
ss
jo
adc
aaa
jns
dec
add
std
and
ror
ror
aas
cmp
push
push
mov
inc
popa
inc
adc
xchg
pop
mov
cmp
jecxz
frstor
mov
dec
sbb
add
int3
outs
lock
and
fadd
mov
shl
retf
jno
lods
dec
icebp
fwait
inc
pop
clc
mov
mov
xor
or
test
pop
mov
add
imul
cmp
ret
mov
push
inc
cld
fld
adc
(bad)
in
push
pop
in
mov
sbb
daa
jbe
fbstp
cmp
xor
jae
fidiv
fild
mov
mov
out
add
out
arpl
dec
sub
mov
or
cwde
retf
gs
into
pop
jno
pop
or
mov
or
adc
add
dec
add
cmp
jb
(bad)
push
jns
mov
ds
repnz
xor
sub
or
mov
ins
xchg
fucomi
test
cli
jmp
es
mov
cmovp
xor
or
fisttp
or
call
rol
mov
mov
sti
cdq
xlat
imul
push
xchg
jo
out
rcr
inc
pop
stc
mov
mov
std
jl
cwde
jo
lods
add
fs
or
mov
fnstcw
test
rcl
fcomp
leave
cmp
jl
and
icebp
pusha
(bad)
xchg
mov
pushf
cld
and
cmp
outs
aaa
fstp
repnz
inc
hlt
les
xchg
mov
add
(bad)
dec
and
mov
shl
jno
(bad)
(bad)
rcl
mov
aaa
sbb
sub
pusha
in
aam
inc
sbb
cld
dec
fwait
aad
push
and
sbb
inc
jp
xor
shl
push
jnp
imul
ins
popf
inc
mov
xchg
in
xor
mov
dec
push
jo
push
xchg
add
sahf
dec
mov
mov
icebp
pop
ds
in
mov
sbb
mov
movs
arpl
ins
icebp
xor
pusha
in
scas
cli
push
popa
call
cdq
faddp
jae
out
adc
inc
jecxz
mov
jmp
and
xchg
out
int
imul
outs
neg
adc
fild
(bad)
adc
add
cmc
cwde
shr
mov
mov
sbb
xchg
shr
sub
push
ds
cmp
xor
cdq
ficom
ret
cli
mov
(bad)
stc
fisttp
sub
in
iret
add
xchg
pop
inc
test
ficom
push
sub
pop
scas
hlt
add
mov
xchg
data16
add
pop
mov
add
sub
jno
mov
mov
adc
or
into
add
imul
into
imul
cmc
out
lea
push
jmp
scas
enter
loopne
inc
dec
push
retf
jl
cmp
dec
aam
sub
scas
push
mov
scas
adc
dec
movs
(bad)
sbb
gs
cwde
arpl
mov
cwde
lock
js
pop
bound
add
add
ror
jns
sub
int
in
popf
jbe
adc
inc
and
js
adc
cmp
loopne
sub
popf
add
out
cld
or
jnp
xchg
dec
lds
test
jmp
faddp
repnz
daa
jge
sysret
push
cwde
fiadd
aam
push
adc
adc
(bad)
int
and
out
ret
lds
in
mov
cwde
paddusw
ja
aas
mov
mov
lahf
enter
cli
adc
mov
shl
push
lods
pushf
icebp
out
fsub
js
pop
push
inc
mov
aas
xchg
rcl
jnp
fsubp
(bad)
dec
xchg
inc
out
(bad)
test
test
sbb
jmp
sti
nop
push
into
lods
aaa
cmp
(bad)
mov
inc
push
lods
(bad)
arpl
inc
inc
dec
mov
adc
test
repnz
dec
lods
xchg
dec
stc
jp
test
sti
push
dec
je
ret
or
shl
arpl
mov
inc
mov
adc
inc
cmps
mov
add
scas
pop
out
cmp
stc
cmc
sbb
fcom
mov
and
mov
rol
lea
(bad)
lahf
call
imul
nop
inc
test
and
mov
loope
mov
inc
and
push
in
call
inc
push
in
fild
ins
dec
sar
sahf
repz
and
or
inc
call
call
xor
aas
mov
mov
jl
stos
fcom
jno
and
xchg
cld
add
data16
jmp
or
xchg
enter
jns
fistp
(bad)
into
adc
loop
int3
jle
aas
jg
or
in
jnp
push
push
sahf
jo
ja
call
mov
imul
iret
fwait
add
push
jge
stc
movs
xor
cmp
xchg
cmp
(bad)
cmps
jge
std
sbb
fistp
mov
inc
push
mov
dec
mul
or
dec
rol
popa
mov
movs
ss
push
and
rcr
shl
xchg
fs
mov
push
mov
inc
scas
shl
cmp
inc
(bad)
loope
fbld
pop
jp
sub
loope
and
stc
cmp
mov
ins
lods
out
int3
pushf
loop
xchg
dec
cmp
stos
jp
xor
inc
jl
or
aas
jge
sbb
rol
sbb
sbb
inc
(bad)
xchg
scas
push
and
cmp
mov
mov
sbb
jmp
jbe
fcmovnbe
push
jmp
leave
jno
cmp
xchg
rcr
xchg
push
push
xor
enter
inc
into
ja
pop
dec
stos
ins
xlat
fcom
xor
mov
xchg
add
gs
jae
rcl
add
rol
mov
in
je
adc
xchg
jmp
cmp
xor
or
xor
ficomp
push
cmp
add
add
mov
pop
ins
sub
stc
add
loop
xchg
mov
data16
dec
pusha
pop
popa
iret
adc
dec
movs
or
test
sbb
mov
mov
mov
(bad)
or
into
jecxz
or
or
inc
pop
cmp
sbb
sar
jmp
je
pop
fst
or
jecxz
cmp
push
repnz
fdivr
add
pop
ja
or
das
scas
icebp
bound
cs
xor
mov
mov
lods
cmp
test
or
push
mov
jl
sub
popa
into
ds
je
jmp
pop
and
ins
mov
mov
repz
jecxz
mov
add
push
mov
(bad)
sbb
fbstp
cdq
adc
push
retf
mov
inc
dec
stc
sahf
pushf
mov
loop
push
bound
hlt
mov
add
outs
test
mov
sub
sbb
jmp
mov
adc
jmp
cdq
nop
dec
jns
ja
jle
call
jne
adc
out
adc
fist
int3
pop
pusha
retf
mov
fdiv
jle
imul
xchg
and
cmp
nop
nop
mov
lods
sbb
in
mov
push
mov
xor
popf
in
xchg
inc
test
and
or
ds
or
retf
sahf
(bad)
pusha
fidivr
stos
das
les
jge
pop
cld
push
mov
movs
or
sbb
jp
xor
aam
add
add
dec
or
jae
in
std
mov
sub
mov
jne
jge
cmp
sar
push
pop
or
rcr
(bad)
fdivr
add
cmp
cmp
inc
lds
xchg
push
push
stos
adc
cmp
push
call
out
popa
adc
dec
xchg
sub
pop
dec
lods
cmp
pop
repnz
adc
push
jecxz
xchg
les
mov
paddq
or
hlt
movs
cdq
outs
ficom
push
push
movs
xor
(bad)
mov
or
fs
add
or
mov
jg
imul
adc
lods
test
push
retf
lds
pop
dec
adc
andnps
adc
jbe
add
mov
cld
ins
jmp
rcr
and
dec
pushf
stc
cmp
out
cmp
sbb
vmovapd
loopne
cmp
nop
sti
pop
outs
aas
push
pop
xchg
retf
cmps
inc
or
aas
dec
mov
push
dec
sub
xchg
add
sar
mov
dec
cmps
inc
push
lods
or
jle
dec
add
jmp
add
cmps
mov
dec
xor
and
mov
push
dec
mov
cmp
xchg
push
jmp
mov
inc
add
stos
inc
xor
mov
outs
das
adc
in
dec
pop
fidiv
xor
hlt
jg
rcl
movs
jb
outs
in
stc
outs
mov
les
cmp
imul
adc
fcomip
cmp
fprem1
movs
mov
dec
shl
fcomp
es
dec
push
enter
ins
jo
add
inc
xor
adc
xchg
mov
push
push
jecxz
sub
outs
cmp
push
fiadd
sub
shl
mov
(bad)
and
idiv
retf
inc
cld
add
pushw
stc
adc
(bad)
fadd
or
adc
lock
jg
inc
push
mov
movs
adc
mov
(bad)
shl
pop
xchg
xor
cmp
xlat
push
pop
mov
out
retf
addr16
jecxz
xchg
add
pop
push
ret
addr16
pop
outs
mov
adc
mov
sub
test
dec
pop
imul
in
mov
dec
cld
clc
mov
mov
shl
cdq
ja
ret
jno
lidtd
int3
dec
popf
iret
dec
cmp
sub
mov
cmp
and
lahf
push
das
push
mov
sub
xchg
pop
in
jmp
mov
or
mov
mov
sahf
sbb
lods
mov
mov
cmc
jmp
push
jecxz
push
jb
pop
repz
dec
pop
cmp
or
jg
movs
add
int3
(bad)
ret
call
test
sub
es
sbb
and
mov
stos
stos
xchg
adc
ret
lods
push
mov
int
inc
repz
jo
cmc
out
sbb
lods
in
retf
fdivr
sbb
js
adc
and
sub
sbb
cmp
jge
leave
add
retf
jmp
adc
iret
mov
inc
je
sub
xor
dec
xor
out
pop
pusha
xor
shl
mov
aad
xlat
dec
cmp
pop
stos
sahf
mov
imul
arpl
xchg
add
or
or
sbb
out
or
shl
jp
or
out
mov
pop
cmp
mov
mov
add
pop
dec
fs
inc
loop
and
sub
loopne
jge
outs
dec
stos
aas
push
jno
sub
sbb
mov
fs
test
add
in
dec
ror
in
xchg
popa
mov
neg
pop
push
or
xchg
shl
adc
mov
test
xchg
enter
cli
xlat
xlat
mov
faddp
or
ja
into
cs
call
push
cdq
xor
fmul
adc
push
sbb
dec
xlat
and
or
sbb
mov
jg
(bad)
mov
pusha
stos
stc
add
push
scas
idiv
cwde
jmp
and
adc
or
push
push
pop
cmp
repz
mov
fstp
shr
mov
mov
jne
pop
fs
adc
test
icebp
xor
je
rcr
pop
mov
adc
xor
inc
cmp
cld
add
inc
mov
int3
jbe
movs
ds
inc
loopne
fsub
(bad)
stc
and
fs
das
lea
stc
mov
cld
add
adc
sbb
(bad)
cmp
movs
sub
fstp
les
sahf
pop
and
dec
jl
mov
(bad)
sub
push
cmp
cmp
mov
stos
mov
fcomp
cmp
inc
cs
out
cld
es
sbb
cmps
rcl
or
push
test
cwde
call
ja
push
rol
lea
jmp
loope
(bad)
sbb
std
retf
addr16
sbb
sbb
addr16
shl
adc
add
pop
sbb
stos
in
sub
ret
into
sti
or
inc
les
or
mov
cmps
clc
jp
and
clc
out
xor
mov
ret
xor
add
push
xor
je
icebp
mov
ins
aaa
inc
xchg
push
nop
clc
and
movs
add
dec
adc
adc
jp
aad
call
inc
fmul
sbb
(bad)
jle
push
cwde
(bad)
in
xchg
mov
imul
js
inc
rol
or
cmps
jecxz
ror
sub
adc
dec
imul
les
ja
mov
mov
jmp
push
mov
mov
hlt
mov
xchg
add
jnp
(bad)
mov
cli
add
inc
(bad)
dec
in
call
sbb
cmc
xchg
xor
inc
jmp
push
sub
fild
ds
scas
retf
test
lock
fisubr
inc
loop
push
push
or
inc
and
inc
sbb
leave
dec
pushf
xlat
pop
sbb
popa
xor
xchg
add
adc
fistp
std
jl
inc
fisubr
lds
push
jg
sbb
cmp
in
push
dec
lods
mov
pop
in
loop
pop
popf
int3
iret
inc
pop
or
push
repz
cmp
ja
mov
pop
sbb
mov
stos
lods
cmp
in
addr16
mov
inc
pusha
pusha
lods
test
and
ins
sbb
cmp
add
aam
int
add
retf
adc
pop
push
sti
imul
jno
(bad)
pop
sbb
push
xor
sbb
or
xchg
xchg
dec
mov
mov
cmps
inc
sbb
jmp
dec
add
pushf
xchg
sub
fidivr
mov
mov
outs
pushf
mov
sub
test
(bad)
out
pop
dec
inc
in
add
sbb
pop
movs
into
ins
int3
fs
popa
out
mov
push
in
shl
fcom
dec
push
pop
add
movs
movs
pop
ins
mov
sbb
ret
sbb
sub
sub
push
es
jne
mov
cmc
pushf
out
xor
int3
mov
int
dec
mov
cmp
push
dec
jmp
mov
fmul
fs
fnsave
add
shl
or
cmp
sbb
sbb
mov
pushf
sbb
inc
lods
jge
jmp
dec
lock
pop
and
mov
rcl
mov
pop
or
popa
std
sti
xor
dec
xor
popa
test
dec
push
push
jbe
lea
ja
lahf
mov
fidivr
test
in
push
pop
into
xor
lds
neg
std
jg
add
jb
dec
push
das
sub
ins
add
mov
or
pushf
jp
call
arpl
dec
call
aad
pop
or
inc
and
cs
cmp
outs
retf
or
pop
fisubr
aam
out
inc
push
icebp
aam
out
mov
popf
mov
stos
mov
sbb
movs
add
xchg
jns
mov
adc
mov
sbb
loopne
push
cmp
pop
out
sub
in
push
ss
sbb
lock
pcmpgtw
jle
or
mov
je
sub
repnz
enter
adc
std
cmp
js
jmp
xchg
dec
ins
leave
ret
out
mov
push
sbb
dec
cdq
push
sub
(bad)
and
add
mov
push
add
sbb
sbb
pushf
mov
rol
imul
loopne
out
ins
pop
lock
daa
aam
xor
aad
mov
sbb
lahf
test
xor
inc
loop
push
(bad)
adc
push
aaa
hlt
mov
and
mov
inc
ss
push
xchg
mov
jne
pushf
jns
jp
xchg
in
pop
push
cmps
rcl
mov
(bad)
mov
inc
aaa
mov
xchg
push
lods
dec
xchg
aad
mov
pop
data16
aad
pop
shl
out
popf
out
sub
lea
aas
fist
retf
sub
ret
aaa
hlt
and
out
add
leave
mov
test
in
and
adc
(bad)
pop
call
xlat
adc
xor
push
sti
mov
loop
xchg
pop
bound
inc
stos
pop
scas
daa
pusha
sub
or
cmp
push
popf
xchg
mov
and
adc
pop
cli
mov
mov
dec
cld
jae
jmp
xor
dec
pop
ins
sbb
cdq
(bad)
jmp
mov
outs
sub
pushf
mov
loope
cwde
(bad)
(bad)
mov
xor
inc
shl
jo
add
xlat
jno
mov
in
test
inc
setae
stos
(bad)
repnz
aas
xor
mov
aas
repz
in
inc
(bad)
adc
mov
adc
dec
int
in
cmp
leave
mov
sbb
sub
test
je
push
pop
iret
es
jns
mov
bound
loop
test
inc
stos
in
or
jnp
movs
dec
dec
inc
leave
push
mov
pop
das
dec
es
repz
out
push
cmc
lods
addr16
or
adc
push
cld
push
jns
sbb
adc
lods
add
cmp
mov
sbb
ss
add
mov
and
push
xor
jge
cdq
inc
loop
(bad)
jg
dec
das
pop
push
xor
push
sub
out
inc
and
pop
std
out
mov
adc
int
pop
dec
adc
(bad)
in
cmps
stos
cli
pop
mov
int
stos
int3
push
adc
ret
jb
dec
cli
fsubrp
mov
ret
push
loopne
ds
sub
ret
dec
jnp
scas
sub
xchg
cwde
jmp
retf
(bad)
ss
adc
inc
hlt
inc
cmp
loopne
mov
lds
in
mov
add
jo
and
fwait
xchg
(bad)
(bad)
jecxz
sbb
pusha
out
add
adc
push
mov
loop
mov
rcr
aam
stos
adc
push
mov
cdq
daa
xchg
daa
add
rcl
icebp
jae
jle
mov
mov
arpl
sub
shl
xchg
jp
xor
rol
xchg
and
test
xchg
adc
cmp
mov
scas
add
inc
jg
sbb
jne
jb
jmp
or
xor
pop
jp
mov
xor
jge
nop
sub
call
jmp
mov
test
imul
aam
sbb
lods
jnp
jle
jp
mov
call
pop
(bad)
sbb
loopne
or
and
xchg
cwde
shr
fcmovnbe
sti
and
mov
push
cmps
popa
fwait
(bad)
jns
adc
add
and
mov
sub
pusha
pop
cmp
fidiv
rcl
inc
push
jp
repz
lods
xchg
ss
ds
mov
movs
cld
inc
dec
jb
push
or
push
lock
xchg
add
or
xor
test
jle
mov
xor
adc
test
push
retf
or
sbb
fsub
stos
xchg
lods
sub
mov
test
inc
pop
sahf
mov
rol
mov
jae
push
xchg
inc
jmp
mov
inc
in
jecxz
sbb
in
pushf
out
add
push
inc
dec
xchg
jle
dec
xchg
(bad)
push
inc
pop
in
pusha
push
ret
(bad)
cmp
js
inc
rcr
lock
push
xor
or
push
enter
aas
sub
in
addr16
rcr
in
push
sar
xlat
mov
dec
into
mov
mov
cmp
or
jno
(bad)
pop
xchg
sbb
pop
lods
xchg
push
cmp
xor
pop
pop
adc
scas
cmp
mov
sahf
and
add
and
push
xor
pop
or
and
or
les
dec
(bad)
iret
jp
sahf
scas
pop
jg
xor
loope
clc
cmp
jne
gs
lock
cmp
mov
stos
and
jo
inc
jbe
xchg
stos
(bad)
mov
fidivr
cmp
cli
xor
stc
rcr
or
push
push
or
sbb
push
pop
add
xchg
add
ja
pushf
xchg
mov
mov
mov
sbb
jg
arpl
int
jno
sti
(bad)
js
jecxz
inc
jns
cwde
xchg
mov
cmp
dec
mov
mov
popf
cli
fmul
mov
add
or
xlat
and
getsec
or
jp
test
repz
sub
fld
add
ficomp
xor
xchg
cli
rcr
dec
stc
xchg
or
je
inc
push
adc
mov
inc
mov
shr
jb
cdq
inc
mov
xor
rcl
or
(bad)
(bad)
jmp
or
and
popa
xor
jg
add
(bad)
rol
add
sbb
icebp
sub
jae
rcl
retf
or
ins
out
repz
dec
and
push
jae
pusha
enter
push
shl
mov
jbe
out
pop
(bad)
out
test
pusha
arpl
daa
sub
mov
(bad)
cmp
repz
dec
mov
les
repz
(bad)
pop
pop
push
add
sar
inc
and
fsqrt
aam
mov
mov
std
std
or
adc
mov
popa
pushf
movs
or
ret
jl
mov
add
and
sbb
jmp
clc
cmp
daa
mov
dec
inc
inc
mov
popa
stc
xor
pop
mov
sbb
add
inc
cld
xchg
mov
xchg
push
jl
or
sub
inc
push
cmp
les
push
int3
add
pop
stos
sub
retf
mov
push
push
enter
push
cld
fdiv
xor
cmps
or
daa
sub
dec
fs
div
sbb
sub
mov
pusha
cwde
xchg
xor
sub
mov
and
add
xadd
add
fdivp
test
ffreep
or
imul
sub
and
dec
mov
xor
xchg
pop
jg
je
or
das
add
sbb
and
popf
mov
test
add
icebp
push
fldenv
scas
dec
xor
jl
cmps
loopne
mov
out
xchg
nop
ins
std
and
pop
std
je
js
mov
std
dec
or
adc
add
or
call
or
shr
or
push
push
loopne
mov
shr
push
iret
pop
stc
sub
cmps
stc
outs
aas
mov
xor
ds
daa
inc
lahf
cmc
sub
push
dec
stos
fsub
test
xor
and
int
add
mov
mov
sti
std
xchg
rep
jmp
or
push
jne
scas
imul
enter
push
ror
dec
and
or
std
or
xor
hlt
sbb
dec
or
out
loopne
in
pop
add
ja
add
push
popa
js
sub
popa
pop
push
ficom
int3
imul
(bad)
xor
ins
inc
sbb
push
hlt
push
jmp
or
in
std
popa
sahf
mov
pop
sbb
stos
aas
push
push
outs
jb
sbb
aad
in
xchg
cmp
inc
sbb
sbb
in
xchg
js
mov
xor
sbb
ins
cmps
stos
cmp
jge
(bad)
inc
xor
outs
sub
sbb
jo
stos
int3
movs
test
out
pop
je
sbb
sbb
inc
cdq
cmp
jge
bnd
mov
mov
dec
scas
ja
scas
das
pop
or
je
fidiv
test
mov
push
daa
call
mov
rol
repnz
mov
dec
pop
out
cmps
jle
and
sti
aas
pop
test
jmp
mov
xchg
push
fst
in
pop
push
test
jb
mov
sbb
aaa
dec
rcr
and
add
jbe
pop
cwde
mov
(bad)
shl
dec
into
imul
or
jb
or
les
xor
mov
bswap
fs
enter
lods
aam
or
out
les
or
dec
mov
paddsb
pop
cmp
int3
jle
mov
or
jns
aas
cli
and
shr
pushf
pusha
cmc
sbb
mov
in
xchg
sti
push
xrelease
retf
push
out
xchg
mov
jmp
fdivp
scas
mov
add
fs
leave
test
sub
mov
mov
xchg
fnstcw
cmp
into
loopne
cmp
retf
fwait
xlat
pop
sbb
or
loopne
mov
pop
mov
or
adc
dec
aaa
mov
jbe
mov
stos
aaa
(bad)
loop
dec
xchg
retf
adc
inc
inc
jecxz
cmps
sbb
jmp
cli
loop
aad
mov
mov
iret
mov
repz
jne
sbb
repnz
sub
pop
sub
aas
repz
adc
out
les
push
leave
xor
dec
cmps
pop
mov
jle
add
mov
pushf
mov
push
(bad)
imul
sahf
rol
inc
mov
push
push
jns
(bad)
add
pusha
enter
jae
lahf
scas
mov
inc
std
add
jmp
sbb
test
(bad)
popf
mov
and
or
pop
inc
push
cmp
out
enter
xor
data16
into
inc
out
jmp
pop
mov
xchg
daa
mov
cmc
sub
xor
and
jecxz
shl
ret
xor
mov
mov
or
jmp
fld
aam
xchg
jmp
mov
sar
stos
push
leave
(bad)
cmp
repnz
(bad)
out
mov
nop
adc
iret
js
(bad)
fadd
imul
sub
sub
pop
call
outs
push
mov
call
fist
lods
cmovge
mov
jg
jmp
xchg
jecxz
dec
test
adc
jl
mov
add
sub
adc
mov
mov
xor
push
pop
push
mov
mov
xor
sbb
js
xor
cdq
inc
outs
sti
inc
dec
lds
movd
or
mov
and
push
pop
or
sti
mov
ins
daa
paddsb
mov
jle
in
mov
mov
adc
xlat
cli
or
mov
push
push
sub
dec
jge
and
repz
hlt
push
jb
cmps
ins
mov
push
adc
jne
cmp
(bad)
sub
sbb
in
mov
fcmovbe
(bad)
mov
jmp
sub
jge
fnstsw
outs
mov
jno
gs
fwait
js
(bad)
rcl
mov
jmp
rcl
push
daa
mov
and
jno
pop
pop
aas
fstp
push
xor
jg
mov
push
adc
adc
and
inc
idiv
ja
in
popf
out
jmp
inc
imul
push
mov
jns
loope
lahf
xor
xor
add
and
fcomi
push
cmp
inc
test
mov
(bad)
test
add
mov
mov
push
fiadd
pushf
daa
(bad)
pop
xchg
mov
movs
das
inc
aas
xor
mov
bnd
push
pop
int
inc
push
push
jno
shr
sbb
mov
adc
dec
aaa
(bad)
push
jno
cwde
dec
jne
dec
push
sbb
push
lods
gs
and
popf
inc
sub
mov
in
mov
enter
lods
dec
xchg
cmp
push
push
lods
inc
arpl
push
lea
xor
push
xchg
dec
and
test
pusha
nop
ret
pop
or
cmc
jge
cli
clc
dec
mov
push
mov
adc
inc
in
call
dec
or
outs
push
and
cmp
pusha
imul
mov
bound
mov
jmp
mov
pusha
test
cdq
mov
gs
fldcw
jo
pop
loop
dec
mov
add
xchg
aam
jbe
daa
test
jge
mov
scas
or
rcr
add
push
push
addr16
icebp
setg
add
xchg
cli
test
sahf
jecxz
mov
fimul
imul
popa
lea
adc
jmp
aas
push
inc
fmul
jno
mov
test
sbb
mov
jo
mul
xor
push
add
jg
add
(bad)
cld
mov
rol
mov
ror
or
int3
cmc
sub
sbb
(bad)
jl
sub
jp
pop
in
cs
and
push
popf
repnz
fmul
mov
icebp
out
add
inc
ins
dec
fadd
mov
arpl
(bad)
adc
mov
push
(bad)
cs
sbb
aas
mov
xor
adc
cld
or
retf
outs
mov
or
mov
cmp
imul
mov
pop
add
(bad)
(bad)
movs
sub
mov
jo
ds
mov
les
mov
sbb
cmp
in
fld
std
cmps
leave
xlat
push
mov
or
mov
(bad)
aas
and
ins
iret
inc
and
mov
adc
sbb
fidiv
pop
push
imul
or
xchg
pop
stos
jo
ja
test
ror
sub
repz
sub
mov
mov
into
pop
mov
jae
outs
or
mov
or
in
or
mov
test
xchg
lea
jbe
or
bound
adc
add
xchg
xor
and
cmp
(bad)
jecxz
jb
cmp
pop
pop
retf
jbe
push
jecxz
pop
inc
lock
mov
xchg
jmp
jae
sub
fnop
stos
adc
mov
or
mov
push
cli
daa
sub
jne
icebp
push
dec
stos
js
push
mov
outs
rol
add
enter
sbb
xlat
xchg
cmps
test
mov
rcpps
rol
jae
in
add
mov
nop
add
out
add
add
aas
test
sti
retf
or
push
fist
push
jg
shr
and
mov
xchg
inc
ror
in
jge
aaa
aaa
ins
mov
push
cmp
fs
xchg
pop
test
sub
inc
mov
pop
xor
iret
sub
es
jne
data16
out
xchg
dec
sbb
fs
dec
pop
dec
xchg
inc
dec
repz
cmc
mov
push
sbb
add
xor
push
jo
lds
sar
jg
sar
or
mov
pop
addr16
push
sub
cmp
(bad)
std
(bad)
push
pop
push
int
sbb
and
test
xor
leave
pop
dec
jo
mov
stos
shr
shl
imul
(bad)
fdiv
or
and
int3
cmc
(bad)
xlat
dec
push
in
cmp
fld
cmp
lods
pop
test
adc
adc
push
std
mov
cmp
pop
dec
xor
arpl
dec
cwde
ds
(bad)
cmps
inc
inc
push
sub
dec
sub
mov
outs
pop
xor
test
imul
or
ss
pop
(bad)
and
push
lods
gs
fisub
sub
stos
xchg
ret
std
mov
xchg
inc
loopne
out
mov
cmp
jmp
fs
pop
mov
sbb
cmp
into
push
icebp
or
into
sub
xchg
icebp
pop
add
loopne
sub
(bad)
iret
imul
repnz
es
shr
test
jle
ud1
mov
cmp
in
mov
ficomp
sub
cwde
je
(bad)
out
mov
adc
mov
mov
(bad)
loope
scas
es
stc
out
push
into
imul
jns
and
hlt
xor
mov
std
mov
ret
data16
scas
(bad)
mov
mov
enter
sbb
xchg
pop
nop
ficom
imul
(bad)
aad
test
pusha
cmp
inc
jg
daa
sbb
ins
add
sub
xor
and
jp
push
loop
adc
sahf
jp
sub
cmc
aam
inc
outs
and
cmp
ficomp
ficomp
xchg
push
sar
fs
icebp
mov
retf
sbb
pop
mov
mov
mov
mov
out
xor
xchg
xchg
fsub
or
(bad)
cmps
aaa
into
xor
or
mov
push
out
pop
mov
aas
push
(bad)
sbb
ja
pop
jb
or
sub
ja
lea
icebp
mov
push
frstor
std
sbb
mov
inc
aam
xchg
dec
xor
inc
mov
push
fwait
mov
lods
imul
fnstsw
cmps
mov
cmp
sbb
add
(bad)
in
and
popa
sub
jnp
cmp
loopne
inc
pusha
out
pop
aas
sti
sbb
out
cmp
repz
fst
or
and
or
sar
sbb
mov
sbb
addr16
je
ret
les
pushf
fimul
test
sbb
push
adc
das
pmullw
sbb
jmp
ss
(bad)
adc
and
mov
movs
sbb
cld
dec
out
fcmovu
cmc
xchg
(bad)
lods
les
sub
sub
mov
jae
aam
fisubr
mov
sbb
aad
aam
push
mov
imul
loope
andnps
outs
jno
daa
aaa
sbb
inc
add
push
pop
mov
call
push
out
mov
cmp
push
jmp
or
rcl
xchg
lods
mov
sahf
jecxz
and
or
push
scas
mov
mov
xor
mov
pop
dec
popf
adc
pop
scas
sbb
sub
push
mov
or
mov
lock
mov
xchg
push
ja
push
and
pop
sub
dec
jg
sar
push
(bad)
stos
ret
jmp
add
mov
fndisi(8087
dec
or
scas
(bad)
and
outs
lods
mul
sub
mov
jge
ss
mov
shr
add
lods
cmp
mov
jne
sbb
cmc
or
inc
(bad)
mov
pushf
pop
push
stos
dec
test
fs
scas
mov
data16
sub
adc
fwait
test
inc
cld
add
sar
lods
outs
push
mov
adc
pop
dec
xor
outs
or
sub
aam
sub
push
pop
dec
div
js
pop
mov
arpl
jns
icebp
cmps
jle
xchg
cmps
lods
and
sahf
jle
pop
inc
cmp
adc
sub
iret
dec
outs
or
mov
outs
pop
sbb
inc
sbb
data16
fild
xor
mov
xlat
sbb
sub
sbb
add
(bad)
push
jge
and
mov
push
sbb
add
mov
jle
jecxz
xor
fadd
hlt
dec
int
ret
push
sbb
push
jle
jne
mov
push
and
cmc
das
bound
xlat
fdivr
stc
jl
dec
leave
inc
mov
and
shl
cs
pushf
dec
in
push
dec
sub
jmp
push
scas
test
jge
out
call
int
sbb
leave
pop
push
push
xor
hlt
dec
scas
sti
cmp
xchg
stos
xor
test
ror
and
add
push
scas
stc
ins
sub
jl
cmp
push
jle
cwde
lea
mov
add
add
mov
aaa
enter
xor
lock
pop
in
mov
add
or
popa
sbb
and
mov
in
shl
ret
ficom
xor
ret
mov
xor
xchg
sub
xchg
or
icebp
das
push
pop
push
mov
pop
stos
mov
(bad)
div
push
pop
add
jl
icebp
and
mov
cdq
arpl
pusha
in
aad
sar
jbe
or
jp
mov
jge
in
or
or
dec
jmp
jns
xchg
adc
cmp
pop
mov
push
jp
mov
pop
sbb
sub
pusha
hlt
(bad)
sub
pop
mov
cmp
or
adc
inc
push
push
cld
fstp
fadd
in
mov
es
movs
in
or
jecxz
sbb
pop
push
sbb
enter
mov
fidivr
fnsave
xchg
add
adc
(bad)
push
and
fs
pop
inc
fbld
cmp
add
int3
push
test
(bad)
jnp
sbb
fidivr
adc
cmc
or
pushf
xchg
sbb
add
cmc
movs
adc
adc
daa
je
ja
enter
repz
and
mov
and
iret
fmulp
mov
adc
in
(bad)
cmps
arpl
or
push
dec
jno
(bad)
mov
or
push
popf
mov
xchg
mov
fld
mov
inc
sub
jno
dec
ret
dec
jmp
or
in
repnz
cwde
loop
out
adc
mov
das
ss
xchg
add
test
fcom
(bad)
or
cmps
retf
push
mov
addr16
cmp
pop
jle
xchg
icebp
(bad)
mov
sbb
icebp
adc
lods
movs
add
push
in
cmp
or
aad
dec
push
dec
pop
hlt
out
adc
nop
dec
adc
fcmove
inc
push
pop
jnp
push
sbb
(bad)
out
sub
and
pop
scas
ins
mov
inc
daa
push
sub
and
in
xchg
add
mov
(bad)
call
jl
pusha
cmp
xor
xchg
cmp
lock
push
sub
jb
jmp
pushf
out
dec
mov
in
sub
hlt
js
call
imul
xor
or
pop
add
ret
xchg
jae
movs
cmps
das
rcl
fadd
pop
retf
fsubr
jle
int3
enter
pop
xor
sbb
cmc
rcl
ret
push
(bad)
mov
in
movs
int3
add
xchg
pop
ror
push
sub
push
cmp
cs
sub
and
xchg
clc
inc
ret
popa
call
inc
les
(bad)
cs
mov
and
push
imul
rol
mov
push
in
lea
inc
mov
xor
jl
daa
imul
call
push
jno
dec
mov
pop
test
dec
popa
ret
push
pop
or
daa
mov
adc
pop
wrmsr
mov
icebp
xchg
jge
retf
nop
xchg
mov
mov
loope
jno
int3
sbb
cmp
cmps
xchg
das
and
cs
jmp
add
das
jbe
(bad)
fprem
pop
sub
add
sti
pusha
std
lea
or
dec
addr16
(bad)
stc
test
mov
mov
imul
push
mov
neg
int3
or
and
pusha
in
adc
jno
in
sbb
call
jb
(bad)
pop
pop
push
ins
jge
call
add
xor
test
fs
jb
xchg
arpl
nop
cwde
neg
loope
push
inc
jecxz
inc
shl
scas
xchg
hlt
pop
sbb
mov
mov
aam
ins
pusha
call
cs
xchg
mov
scas
sub
in
add
pop
nop
stos
mov
mov
jp
mov
(bad)
cmp
(bad)
bound
or
cmp
dec
dec
fcomi
xchg
jge
loopne
rcl
in
dec
sub
pop
repz
mov
add
xchg
fst
xchg
ror
mov
sub
adc
out
pop
mov
test
lea
inc
ins
adc
(bad)
arpl
ror
test
in
pop
movs
scas
sub
lods
inc
sub
sbb
nop
sub
cmp
adc
sbb
dec
fdivr
sbb
je
cmp
xchg
and
pop
(bad)
mov
add
sbb
adc
movs
test
and
jbe
je
pop
xor
(bad)
cli
mov
mov
fsub
loope
call
cmp
xchg
lods
aad
rcr
xor
jb
test
imul
das
outs
pop
or
mov
aad
lahf
push
imul
(bad)
shl
pushf
cld
sub
fwait
or
inc
xchg
mov
ds
push
xchg
ss
mov
mov
stos
xor
pop
stos
add
xchg
push
cs
lods
cmp
cmp
inc
cmp
xor
sahf
pusha
cli
repnz
jns
ror
retf
lods
ja
sub
adc
mov
cmc
dec
push
shl
dec
and
std
sbb
rol
mov
and
nop
mov
hlt
cs
aam
ss
fldcw
adc
and
in
ds
ret
sbb
lea
jle
push
mov
fld
ds
pop
pop
push
add
add
(bad)
shl
(bad)
fldcw
or
adc
adc
mov
out
fisub
arpl
jmp
inc
push
mov
jo
or
mov
sub
pop
shl
jb
stc
call
repz
mov
das
xchg
rcr
ret
retf
loopne
xchg
aam
jns
scas
aad
sbb
mov
addr16
ffreep
aad
inc
fcmovne
rcl
sub
and
sub
xchg
retf
mov
adc
inc
xchg
push
cmp
dec
out
push
idiv
mov
sub
jp
in
cmc
and
dec
stc
xor
adc
addr16
(bad)
jnp
xchg
adc
pop
fistp
push
movs
mov
mov
test
inc
data16
pop
(bad)
sub
mov
scas
in
sbb
dec
xor
movs
je
sti
fwait
cpuid
call
call
es
dec
repnz
(bad)
in
sub
or
and
pop
xchg
push
pop
adc
push
fs
into
mov
test
xchg
push
pop
(bad)
adc
xor
mov
sbb
push
mov
mov
ds
popa
inc
mov
and
aaa
je
sub
jmp
ins
inc
jmp
lock
cmps
leave
cmp
mov
hlt
mov
push
cmp
popa
gs
sar
dec
dec
add
stc
mov
mov
sub
repnz
jg
nop
jg
or
jmp
cmp
out
xor
popa
(bad)
cmp
mov
cld
rcr
sbb
jne
hlt
scas
inc
popf
mov
mov
push
sub
and
cmc
aam
jae
or
jns
sar
pusha
repz
gs
add
loop
pop
push
or
cmp
pop
sti
stos
int
pop
jo
dec
inc
sbb
sub
cmp
jae
push
ss
adc
mov
repnz
and
rol
inc
sbb
inc
push
add
and
cmp
dec
add
push
add
into
xchg
bound
movs
inc
adc
and
psllw
sbb
mov
sub
test
test
call
in
rcl
mov
mov
pop
mov
or
pop
mov
ss
adc
cs
out
loop
imul
imul
add
mov
adc
push
dec
or
mov
cmp
dec
xor
push
jp
jmp
je
inc
jo
mov
mov
das
outs
repz
jbe
pop
mov
push
jae
movs
std
sub
int
in
rol
neg
mov
aad
mov
xchg
or
dec
es
xchg
adc
mov
cs
pop
mov
xchg
loope
fist
dec
arpl
nop
and
fwait
cmp
movs
pop
mov
ja
mul
outs
dec
jno
sbb
cli
(bad)
jmp
jl
mov
sbb
inc
mov
dec
lods
jae
push
cmp
out
mov
push
add
add
inc
dec
pop
shl
inc
idiv
or
cmp
pop
jle
(bad)
in
ret
fcomp
call
int
inc
adc
repz
fcmovu
movs
sahf
pop
imul
push
call
xchg
jge
mov
mov
ficom
jo
movs
add
icebp
cwde
lahf
call
addr16
cmp
in
push
dec
call
test
imul
pop
daa
dec
push
push
adc
cmp
xchg
mov
push
and
in
dec
movs
(bad)
out
cld
sub
inc
fxch
push
shl
mov
iret
fnstenv
loope
fld
xchg
test
pusha
dec
cmp
jle
jp
sbb
retf
sar
icebp
jmp
pop
pop
push
mov
mov
ret
mov
mov
movs
pop
fs
add
in
mov
xchg
jbe
inc
inc
xor
ins
and
add
ins
lock
cs
cmps
sbb
add
lods
out
push
popa
cmp
and
adc
inc
mov
or
mov
xchg
xor
lds
addr16
jecxz
xchg
retf
push
popf
inc
jl
das
xor
sahf
xor
xor
xchg
call
test
arpl
mov
mov
out
lahf
das
xor
sti
push
mov
and
outs
sbb
test
push
repz
and
cmp
in
movs
aad
inc
repnz
std
xchg
cld
neg
(bad)
aas
sub
mov
jb
mov
out
jecxz
popf
fst
ins
(bad)
lods
xchg
dec
daa
scas
out
sub
in
mov
imul
stos
sbb
(bad)
pop
pandn
loope
sub
jbe
cld
ret
and
call
leave
xchg
mov
iret
sub
inc
call
(bad)
jmp
and
mov
push
and
mov
mov
jns
xor
je
fucom
inc
test
loope
daa
push
daa
jo
ffree
scas
jmp
inc
adc
ror
inc
je
cmp
ror
sbb
ret
lds
into
mov
xor
mov
in
xor
xchg
or
cmc
out
and
ja
xor
movs
xchg
call
les
xchg
ret
into
loope
mov
ins
pushf
xchg
dec
repz
in
stc
call
adc
pop
xchg
mov
pop
and
pop
push
movs
inc
cmp
sub
fs
mov
imul
imul
in
fiadd
adc
adc
pop
lea
xor
sbb
aas
ins
sbb
cmp
add
js
push
mov
rcl
enter
cs
mov
cmp
dec
or
mov
push
aaa
jb
in
jge
push
neg
and
(bad)
mov
pop
sub
inc
cmp
pop
loope
pop
sub
mov
dec
or
add
call
pop
out
ret
(bad)
sub
cwde
and
retf
and
cli
jmp
sub
mov
mov
lds
jecxz
jbe
or
sahf
test
mov
or
gs
outs
in
xor
push
jecxz
pop
retf
pop
push
dec
xchg
jl
pop
out
call
jae
fisub
jns
(bad)
xor
inc
mov
mov
int3
pop
mov
pop
sbb
and
repnz
lea
movs
stc
movs
ja
xchg
add
or
pop
xor
mov
aad
push
mov
mov
adc
dec
or
sar
pusha
(bad)
out
jge
jmp
pop
call
jo
jbe
out
dec
paddq
xchg
pop
bound
fwait
mov
xor
cmp
mov
mov
add
jno
daa
xor
xor
jp
rcl
ret
xchg
pop
mov
sbb
out
rcr
movs
loope
stos
cld
sub
ret
jmp
lea
mov
jne
xchg
jae
mov
adc
popa
lods
in
cld
int
mov
add
jbe
jnp
jo
das
lods
leave
clc
rcr
or
sub
out
jp
cwde
pmaddwd
dec
dec
xlat
lods
leave
and
pushf
lods
mov
mov
out
pop
jo
addr16
inc
adc
jb
fnsave
mov
icebp
pop
and
jne
inc
mov
retf
into
push
call
sub
xchg
push
lds
test
xchg
mov
ja
mov
(bad)
and
or
cmp
ins
(bad)
imul
jge
icebp
shr
mov
popf
push
pushw
into
dec
repnz
adc
fistp
test
jo
push
push
xchg
ror
lea
mov
adc
push
or
or
(bad)
jp
lock
jmp
mov
jge
ss
hlt
adc
popf
scas
rcr
loope
push
and
fcmovne
mov
mov
jb
lea
mov
out
xchg
xchg
loope
add
push
xor
sbb
sbb
bts
test
fst
stos
xor
aam
add
cld
sbb
push
ins
repnz
mov
daa
cdq
sbb
sbb
loopne
or
sahf
call
pop
mov
lahf
repz
test
shl
dec
xlat
dec
ins
jne
or
pusha
cmps
test
add
leave
push
jne
cmp
fmul
dec
add
pop
out
pop
es
adc
outs
aad
inc
out
jecxz
test
loop
in
push
or
aas
mov
call
adc
cld
test
pop
not
mov
push
adc
push
xchg
icebp
dec
jns
cmp
loop
jae
sbb
loopne
test
sub
imul
xchg
xchg
scas
mov
and
jmp
push
push
adc
out
xchg
sbb
ins
int3
lods
ret
test
and
sbb
jb
xor
shl
pop
push
jns
sbb
mov
mov
jmp
jns
out
(bad)
fsubr
mov
xchg
cdq
movs
cmp
and
(bad)
or
imul
test
test
rcl
loope
push
dec
pusha
jae
js
pop
(bad)
jl
iret
mov
pop
xor
jae
stos
cmp
fidivr
add
and
pop
sar
xchg
data16
add
outs
stos
outs
imul
movs
clc
sbb
dec
fisub
sbb
ss
or
es
cmp
repnz
mov
mov
popa
sbb
or
mov
jbe
mov
cmp
je
push
mov
cs
xor
add
ret
and
mov
mov
retf
push
(bad)
mov
or
or
or
loop
add
cmp
std
in
inc
ret
test
xchg
mov
sbb
fadd
cwde
in
and
dec
jge
dec
and
cli
fisttp
cmc
icebp
inc
and
jnp
mov
fucomp
push
dec
mov
and
mov
xor
mov
jg
add
movs
(bad)
enter
push
xchg
fcom
les
cmp
dec
hlt
(bad)
repnz
ss
push
sub
cmc
jbe
(bad)
mov
adc
in
cmp
call
jb
popf
div
jmp
ret
inc
cmp
retf
jl
call
(bad)
int
pop
jecxz
mov
imul
xor
push
mov
test
xchg
or
inc
in
call
pop
dec
pusha
mov
ins
test
fstp
dec
loope
pop
leave
fadd
mov
pop
adc
ins
mov
inc
in
xor
cs
inc
cmp
pusha
sbb
jle
inc
jmp
sbb
in
push
push
mov
pop
jb
fs
adc
idiv
mov
push
ds
sar
popa
(bad)
mov
das
(bad)
mov
shr
add
in
jecxz
rol
(bad)
pop
lea
ror
mov
outs
add
std
push
adc
sub
ret
cmp
mov
and
dec
inc
jno
jne
ins
in
ret
je
repz
inc
push
push
leave
pop
sahf
pop
ins
ja
pop
and
add
or
aaa
int3
movs
shr
add
aas
and
int3
sahf
popa
inc
(bad)
mov
add
mov
xchg
mov
test
jbe
xchg
sbb
mov
shr
jp
sahf
cmp
into
shl
cmps
xchg
int
cmp
retf
frstor
push
jbe
and
test
je
(bad)
imul
push
xchg
retf
push
xor
mov
mov
sub
adc
test
imul
ret
fild
enter
mov
and
hlt
jecxz
test
jne
pop
repz
cdq
(bad)
mov
(bad)
clc
std
xchg
or
xlat
fdiv
jns
or
test
out
cmps
jmp
test
cmps
cmp
xchg
pop
iret
enter
add
arpl
mov
xchg
addr16
or
repz
stc
hlt
and
push
fcomi
cmp
jns
push
add
cdq
psrlw
lods
xor
shl
adc
sub
aam
(bad)
(bad)
ret
inc
push
or
mov
xchg
cmp
and
clc
push
pushf
jmp
fsubr
ja
pusha
repnz
(bad)
mov
mul
fld
cmp
icebp
jb
aam
xchg
jle
pop
ret
retf
dec
pop
push
adc
js
mov
xor
pop
rcl
ss
mov
pop
mov
jb
(bad)
sub
sbb
(bad)
inc
test
and
or
mov
adc
adc
jb
pop
addr16
icebp
scas
and
dec
sub
cmp
pop
mov
clc
push
push
cwde
loop
sub
adc
or
mov
jmp
sub
adc
ret
add
adc
js
dec
xor
cwde
ins
iret
pop
mov
lods
or
pop
adc
xchg
pop
into
das
sub
xchg
aam
xlat
xor
popf
xor
gs
pop
fimul
mov
data16
add
xor
jmp
pusha
in
out
xchg
daa
neg
add
jle
sar
xchg
add
popf
pushf
adc
iret
mov
retf
in
jl
retf
and
inc
ret
ret
cmp
dec
jno
aaa
outs
aad
mov
aaa
shl
nop
push
mov
sub
xchg
int
jnp
mov
mov
ret
push
(bad)
into
mov
(bad)
enter
push
ror
xor
mov
pop
sahf
dec
(bad)
cmp
and
or
js
pusha
cmc
cmp
jno
and
and
imul
adc
adc
bound
fadd
ret
sbb
fstp
loope
or
or
sti
gs
push
cli
dec
inc
nop
mov
xchg
cmc
cwde
jl
fs
dec
pop
and
lea
mov
xor
std
mov
xchg
out
push
shr
lea
cld
mov
rol
repz
sub
ret
xchg
sbb
cmp
sbb
clc
adc
je
in
sub
jmp
pop
imul
les
popa
cmp
lock
paddq
pop
pop
out
push
xchg
sbb
jne
xchg
call
idiv
push
xor
jg
or
or
out
das
dec
leave
xchg
mov
pusha
mov
add
jp
test
push
ja
mov
mov
jb
dec
add
movs
push
push
dec
adc
cs
scas
xchg
bound
retf
jecxz
stos
test
rcr
xchg
xor
clc
data16
popa
sbb
cmp
mov
and
pop
and
sub
fld
in
push
pushf
mov
dec
out
lea
sar
push
jnp
in
loop
mov
adc
retf
stos
sub
sub
cli
mov
loopne
cld
lock
int
mov
loope
lods
and
push
fsub
ins
shl
xor
mov
jbe
repnz
ret
cld
sub
mov
pop
lahf
or
in
cmp
mov
adc
into
or
cwde
xchg
mov
imul
sub
dec
xchg
jb
js
std
mov
lds
cli
cmp
jp
ins
pop
and
push
cmp
pushf
mov
cmps
outs
inc
push
out
aam
xchg
iret
fnsave
(bad)
aam
in
mov
xor
sub
and
shld
sbb
pop
fucomi
outs
(bad)
rcl
fdivr
sub
scas
sub
mov
cmps
shr
test
pop
ret
mov
jne
pop
adc
mov
pop
(bad)
mov
push
xlat
mov
in
stos
add
repnz
in
add
les
popf
mov
imul
cmps
push
mov
in
movs
xor
jbe
xlat
dec
popa
push
lods
stos
imul
xchg
ret
std
sub
into
add
pushf
fstp
push
call
xchg
push
movs
sti
mov
dec
inc
cmps
jae
xor
sbb
add
inc
pushf
push
mov
ret
or
xor
std
cwde
jecxz
sbb
mov
cmc
fadd
cmps
push
sub
shl
xor
scas
in
adc
and
jnp
and
xchg
jne
cmp
mov
(bad)
imul
xchg
loope
mov
test
cwde
adc
ficomp
cmps
retf
into
shr
push
jge
add
xor
aas
cmp
data16
inc
jle
lods
sub
ds
stos
adc
(bad)
mov
mov
jne
dec
sbb
or
scas
pop
retf
ins
fistp
enter
and
adc
ins
add
fiadd
xchg
inc
loopne
ins
or
rcr
or
dec
stc
(bad)
xor
neg
mov
in
loop
js
or
lea
(bad)
lods
inc
rcr
xchg
cmp
sbb
int3
inc
xor
sub
mov
and
dec
jecxz
lock
iret
mov
(bad)
jl
cmc
in
mov
jmp
xchg
sbb
nop
retf
xlat
je
lea
jne
xchg
fcom
pop
xor
and
dec
inc
stos
(bad)
scas
sub
sub
adc
add
test
inc
xchg
inc
pop
fcomp
and
mov
xchg
fst
adc
imul
int3
shl
sti
(bad)
dec
push
ins
imul
push
dec
imul
lahf
push
inc
push
movs
dec
mov
jmp
movs
mov
lods
mov
arpl
fisubr
mov
iret
push
cmps
(bad)
xor
sub
sar
xchg
ins
dec
rcr
jmp
daa
daa
xchg
jp
scas
adc
imul
aam
xor
test
pusha
imul
dec
ret
bound
xchg
(bad)
retf
jp
int3
adc
loop
cli
sbb
clc
mov
fwait
push
test
mov
jp
loop
ret
cld
fldz
cmps
jbe
pushf
mov
cmps
ror
jmp
inc
(bad)
sbb
cmp
mov
cmp
pop
bound
xchg
sub
dec
add
in
je
adc
leave
bound
jmp
add
or
inc
jno
pop
jl
cmp
fisubr
(bad)
mov
cmp
out
scas
mov
or
je
sbb
xor
or
fist
mov
daa
adc
dec
fdivr
fadd
stos
cmp
dec
(bad)
ror
pop
scas
xchg
jle
push
dec
dec
lds
sub
lods
mov
sbb
lahf
ins
cwde
cmp
xor
es
adc
fcom
sub
(bad)
rcr
(bad)
cmc
or
xchg
nop
gs
repnz
lahf
mov
test
cwde
imul
out
popa
cmc
dec
inc
ins
ja
push
xlat
and
xor
cmc
add
mov
shr
add
adc
and
push
mov
stos
popf
dec
cdq
sub
xchg
aas
repz
jb
mov
pop
mov
repz
cdq
sbb
or
cmp
in
push
adc
mov
cmc
es
cmp
cwde
xor
aaa
push
push
mov
dec
dec
push
push
pushf
cdq
mov
inc
sbb
aas
add
pop
loop
cmps
fidivr
jmp
loope
shl
or
imul
add
shr
cmp
mov
stos
lea
dec
xchg
cwde
or
add
jp
sbb
mov
into
loop
cli
(bad)
xor
clc
xchg
mov
push
push
mov
stc
stos
aas
dec
outs
(bad)
add
mov
adc
sub
je
push
ret
cmp
pop
inc
shl
push
dec
xor
xor
mov
icebp
les
mov
push
xchg
jle
cld
dec
stos
addr16
mov
outs
mov
mov
jb
lods
repnz
outs
inc
xchg
mov
in
inc
jmp
retf
cmp
clc
push
and
out
repz
mov
cdq
bound
jle
pusha
sar
sub
loopne
xlat
xchg
push
sar
test
ss
cmps
imul
repnz
cmp
cld
sbb
or
pop
jnp
push
gs
pop
rcl
rcl
cmp
xor
lock
ins
fldenv
xchg
int3
outs
dec
mov
xchg
mov
adc
movs
ins
out
dec
(bad)
sub
retf
inc
out
fstp
data16
mov
dec
fcmovnu
lods
push
xchg
fwait
xchg
aad
xchg
sbb
neg
push
pop
jge
data16
popf
je
not
outs
cmp
test
xor
fistp
mov
pop
shr
and
xchg
push
jecxz
xchg
popa
push
xchg
mov
adc
stc
out
es
sub
adc
ret
nop
repz
jmp
pop
mov
shl
dec
inc
mov
or
add
ja
jns
aas
xchg
cdq
jecxz
push
mov
outs
sbb
mov
in
xchg
daa
sbb
mov
shl
scas
or
mov
dec
mov
scas
push
loope
xor
xchg
mov
vpacksswb
add
mov
lock
lds
push
jno
fidivr
in
mov
cmps
es
fdiv
jbe
(bad)
sbb
jp
ins
mov
pushf
sub
into
dec
mov
xor
int3
mov
ror
sbb
pop
push
lds
popf
pusha
loopne
lahf
xor
ins
gs
cmp
clc
pop
mov
sbb
cmp
and
fwait
mov
adc
mov
push
push
sub
and
ficomp
inc
fsubr
dec
add
(bad)
hlt
nop
xchg
pop
shr
outs
inc
jg
mov
(bad)
hlt
aas
sub
cmp
shl
cwde
fwait
jl
rcr
mov
xchg
cmp
stos
movs
inc
repnz
scas
inc
mov
frstor
sub
mov
loope
mov
mov
pop
es
mov
mov
mov
mov
movs
inc
test
ds
hlt
xlat
add
xchg
(bad)
(bad)
les
push
adc
popf
cmc
pop
or
pop
leave
mov
shr
pop
jno
sbb
in
imul
pop
fdiv
mov
mov
fist
jge
lods
cmps
and
ret
jmp
sahf
repnz
cmp
adc
mov
sub
rol
loop
xor
mov
cli
or
add
shl
repnz
pop
imul
mov
ins
pop
(bad)
inc
out
dec
ins
inc
popa
es
and
enter
push
cmp
out
pop
adc
xor
mov
xor
cwde
(bad)
bound
jno
lock
and
mov
cdq
fstp
lds
adc
int3
jb
xor
inc
mov
mov
bound
add
cmps
inc
xchg
call
test
movs
popf
shl
push
sub
scas
sub
dec
fiadd
sub
mov
ja
or
cwde
and
or
sbb
push
or
and
mov
adc
(bad)
and
mov
push
loop
pushf
aam
pop
fninit
jmp
add
and
push
mov
push
mov
pop
xchg
sub
outs
in
movs
and
(bad)
fsubr
xor
and
les
push
and
repz
sahf
les
into
jmp
cmps
mov
out
push
push
aaa
cmp
ficomp
loopne
cs
add
test
fist
mov
cmp
xchg
sub
fdivr
out
sbb
jbe
xor
or
mov
sub
mov
ins
mov
sbb
xchg
aaa
js
and
shr
stos
jmp
mov
push
mov
or
mov
pop
jge
push
pop
and
lds
push
mov
or
mov
sub
neg
mov
sub
dec
aad
(bad)
mov
call
outs
jno
aam
not
popf
sbb
pop
xchg
jecxz
mov
mov
adc
jno
in
mov
mov
fnsave
jmp
shl
xchg
inc
xchg
scas
or
idiv
or
push
pop
push
stos
cli
add
add
mov
adc
aaa
icebp
add
push
in
sbb
retf
inc
cli
dec
inc
jae
push
aas
cwde
aaa
scas
fs
lds
jne
jp
loope
lds
mov
cdq
cdq
arpl
rcr
xchg
ss
dec
pop
call
xor
lea
lds
mov
stos
pop
aad
fwait
scas
push
xchg
mov
je
jmp
pop
lock
inc
outs
cld
sbb
mov
mov
lea
lock
mov
(bad)
mov
mov
data16
inc
dec
sub
push
mov
or
cmp
cmp
pop
mov
movs
push
cmps
ret
or
fs
repz
lea
push
fadd
mov
xchg
rol
mov
lock
movs
xchg
and
das
dec
or
call
sub
bound
(bad)
xchg
xchg
mov
inc
in
(bad)
push
div
mov
mov
icebp
mov
sub
adc
mov
cmp
dec
xor
or
fnstcw
xchg
inc
sbb
xor
(bad)
jp
pop
cmps
pop
xor
cmp
lea
sub
mov
sar
adc
pop
and
(bad)
cmc
stos
lds
push
pop
les
xor
xchg
pop
or
(bad)
jmp
ss
push
(bad)
repnz
adc
pop
inc
les
push
sub
jg
out
mov
xchg
ins
dec
in
stos
lods
loop
cmp
cmps
cmp
sbb
xchg
sbb
arpl
enter
adc
and
xchg
jb
fist
add
mov
ds
jmp
add
xchg
lahf
in
pop
xchg
sbb
sub
mov
and
and
call
jbe
mov
and
or
adc
jbe
ja
movs
add
sahf
mov
or
mov
lahf
enter
movs
mov
mov
xchg
out
ins
push
push
fstp
push
ficom
cmc
mov
jl
lods
sub
out
push
lock
div
fs
fimul
mov
int
dec
lods
repz
dec
push
fst
call
sub
push
mov
mov
mov
mov
into
movs
dec
cmp
push
in
and
test
xor
retf
imul
and
leave
and
pop
xor
aaa
adc
adc
cmp
std
test
repz
fimul
inc
inc
xchg
loope
movs
outs
sti
pop
and
sahf
jg
push
mov
mov
movs
(bad)
cmp
outs
mov
clc
mov
stos
push
retf
jb
addr16
test
jns
push
jmp
dec
add
push
icebp
pop
or
add
xor
in
pop
imul
sub
dec
xchg
pop
push
pop
cmp
push
or
pushf
sbb
rcr
inc
sbb
or
scas
mov
pop
sahf
sahf
mov
inc
hlt
add
outs
xor
retf
xchg
cdq
jmp
lahf
into
sub
cwde
or
cld
add
inc
add
movs
add
pop
add
cmp
cmps
jecxz
ins
shl
sbb
and
outs
out
inc
sbb
inc
inc
mov
jns
imul
jmp
push
adc
fwait
psubd
shr
stos
js
xchg
fwait
das
pushf
adc
mov
lods
les
add
call
mov
or
sti
aad
repz
lods
adc
inc
ret
or
mov
fld
xchg
jge
loop
cmp
ins
es
out
imul
out
bound
(bad)
adc
das
shl
cld
ds
xchg
ins
mov
clc
add
outs
clc
or
out
and
addr16
(bad)
cmp
scas
inc
or
lods
stos
les
or
cli
push
je
jge
test
or
or
mov
jb
sbb
fbstp
ds
jno
aam
mov
out
push
sub
pop
mov
and
int3
lods
call
ret
xchg
popa
cld
add
mov
repz
mov
jp
es
int3
popf
cdq
or
std
stc
mov
lock
iret
inc
and
adc
out
aaa
bound
pop
xor
fadd
fmul
and
cmp
inc
shr
mov
push
cmp
aaa
or
stos
add
xchg
loope
push
dec
(bad)
lahf
mov
pop
aaa
mov
ins
and
int
adc
das
cmp
fimul
and
aam
xor
xchg
cdq
jns
repnz
mov
xchg
and
and
into
and
pop
pop
mov
enter
jmp
cmp
xor
inc
mov
xor
add
push
hlt
mov
in
or
aas
adc
pop
add
add
add
fldcw
mov
xor
fidivr
jns
out
imul
jge
bound
xchg
cmp
sub
xor
stc
dec
push
fsincos
(bad)
js
mov
lea
mov
hlt
imul
es
add
dec
push
scas
(bad)
rcl
mov
jge
dec
jmp
(bad)
cmp
add
loop
loopne
ss
aas
pop
adc
lock
mov
daa
dec
add
pusha
cdq
lahf
les
xor
movs
enter
push
retf
sub
xchg
push
stc
cmp
dec
jmp
leave
xor
cmp
inc
pop
push
jne
push
cwde
addr16
pop
or
dec
push
xor
jmp
jmp
and
mov
popf
push
mov
dec
and
push
xlat
test
xor
loop
fdiv
(bad)
mov
push
jo
cmp
or
call
sub
inc
and
push
test
push
mov
or
ins
fcom
jl
bsf
jns
bound
jae
repz
(bad)
(bad)
sbb
into
inc
aaa
pushf
cmp
jb
cmp
arpl
mov
jae
bound
xor
xchg
xor
rcr
jge
in
jns
inc
push
aam
dec
pop
or
pop
hlt
add
(bad)
or
js
mov
(bad)
push
sub
sbb
iret
loope
jg
fisubr
mov
fadd
aad
cmps
jl
pop
ins
shld
add
loopne
sbb
fst
ret
mov
inc
xchg
data16
call
push
inc
lahf
sti
sub
jne
sbb
bound
imul
movs
lock
xlat
out
ret
add
cmp
mov
stos
loope
loop
mov
addr16
inc
scas
add
mov
cmp
fs
mov
int
xchg
ss
pand
mov
mov
add
sub
(bad)
lock
push
and
lock
adc
ins
inc
sub
test
and
in
jmp
mov
xchg
pop
xchg
test
mov
cmp
das
imul
mov
js
daa
xchg
inc
inc
cmp
aaa
retf
cli
mov
jno
xchg
pop
inc
loopne
push
nop
and
les
lock
or
jno
shl
sub
stc
sti
sbb
cli
add
sub
pop
adc
loope
xor
adc
mov
into
mov
add
cmp
sub
lods
cmp
outs
dec
mul
xchg
inc
or
add
mov
sbb
(bad)
loope
test
repz
cwde
es
mov
adc
fstp
xlat
clc
jne
jns
(bad)
les
pop
into
mov
inc
push
leave
xor
inc
xchg
sar
(bad)
mov
fsubr
je
out
pop
sub
xchg
pop
adc
jmp
add
sub
pop
pop
scas
mov
retf
adc
mov
xor
popf
sbb
or
cmc
int
inc
push
inc
mov
push
inc
repz
xchg
out
int
jp
call
cmp
xchg
push
int3
adc
push
cmp
adc
aas
fcom
dec
xlat
xchg
or
mov
jg
jne
hlt
ja
sbb
fild
mov
jmp
(bad)
cmp
loop
dec
cmp
cmp
push
sahf
sbb
push
adc
bound
pushf
ror
mov
push
in
push
clc
xlat
stc
js
stos
js
hlt
idiv
cs
imul
pop
lahf
xor
out
sub
adc
pminub
push
mov
or
or
pop
sbb
dec
inc
cwde
mov
jge
jns
jl
cmp
jae
adc
xor
es
push
cmp
outs
or
ret
sar
cs
and
test
fnstcw
scas
cmp
aam
ss
lods
sub
in
retf
mov
jne
cmp
lods
ss
popa
jbe
gs
mov
aam
xor
in
in
dec
leave
in
jle
out
add
jge
clc
out
pusha
xor
ret
sar
dec
inc
mov
daa
sub
icebp
adc
push
mov
inc
xlat
aam
cli
es
sbb
pop
rcr
pusha
sbb
push
pop
out
adc
test
ror
sbb
fnsetpm(287
mov
(bad)
mov
xchg
fwait
aaa
push
jg
dec
cwde
cs
inc
push
mov
jnp
xor
shl
mov
mov
and
inc
das
jb
in
mov
fldcw
lea
(bad)
cmps
sar
mov
fistp
add
xor
pop
lods
inc
in
iret
cmc
dec
pop
ret
xchg
mov
and
jp
mov
imul
pop
rcl
dec
xor
dec
pop
(bad)
ja
push
aam
lahf
and
mov
clc
les
ret
or
mov
scas
mov
cmp
or
adc
ret
dec
and
mov
test
(bad)
test
jno
cmps
outs
in
adc
inc
or
push
loop
mov
xor
xchg
pop
mov
mov
add
pop
jb
ret
rcl
jno
pop
out
mov
jg
(bad)
(bad)
retf
cmps
xchg
sub
mov
fistp
retf
stc
fld
enter
adc
dec
cmc
jmp
imul
mov
test
aas
mov
pop
jl
jmp
aas
mov
aad
xor
cmp
mov
stos
sahf
add
push
test
pop
inc
adc
xor
push
jb
sbb
fist
inc
and
fsubr
movs
stos
std
xchg
xchg
call
addr16
ficom
mov
and
mov
adc
loope
mov
cmp
jo
or
mov
jge
lods
aaa
bound
adc
int3
sbb
xor
push
pushf
nop
inc
mov
js
xchg
mov
out
cmps
dec
mov
test
stc
and
test
(bad)
es
push
mov
sbb
push
cmp
mov
xor
gs
sbb
sbb
leave
pop
in
push
jecxz
inc
lock
inc
imul
inc
pop
xchg
xor
push
clc
mov
sbb
jg
mov
iret
push
cld
icebp
xchg
lds
mov
add
lods
jmp
mov
sbb
xor
or
cwde
dec
jb
fxch
cmps
and
dec
jbe
mov
inc
jmp
sbb
into
sbb
sub
fcomp
sbb
adc
je
(bad)
icebp
jnp
adc
adc
nop
and
fimul
jmp
std
pop
adc
push
(bad)
mov
xchg
cld
das
mov
pusha
mov
das
jmp
jbe
ins
dec
clc
and
gs
mov
and
(bad)
jmp
sub
and
jb
pop
adc
jmp
inc
or
aas
sahf
jmp
in
fst
fmul
or
aaa
mov
add
xor
ds
pop
test
cmp
adc
in
aas
sbb
lods
cmps
lods
jmp
stos
(bad)
js
not
or
mov
dec
jl
fwait
not
cdq
jnp
test
call
(bad)
and
or
pop
push
lods
int
enter
jmp
test
outs
sub
xor
adc
mov
dec
pushf
nop
inc
data16
inc
das
pusha
push
ss
cmps
lahf
outs
in
dec
pop
enter
scas
cwde
push
xor
mov
aas
fldenv
pusha
pop
mov
aam
iret
outs
js
xchg
rcl
lock
mov
bound
repz
rcl
mov
add
and
pop
jnp
cdq
aas
dec
pop
pop
xchg
ins
shl
mov
std
lea
adc
into
jo
dec
ja
inc
cli
pusha
cmps
popf
or
mov
fadd
push
pop
cmps
ds
inc
mov
xchg
fs
out
xor
test
push
addr16
xor
test
jmp
cmc
and
cmp
int3
adc
dec
pop
add
mov
add
xchg
sbb
(bad)
std
les
mov
pop
stos
inc
mov
xor
push
iret
ins
(bad)
in
xlat
jge
in
movs
sbb
test
mov
mov
popf
les
or
test
xchg
daa
shr
jne
pop
xchg
push
mov
in
cmp
mov
dec
loopne
icebp
in
inc
xchg
js
out
popf
inc
js
mov
ins
dec
xor
cdq
and
(bad)
test
out
xchg
xchg
or
call
repz
test
mov
in
imul
mov
jmp
sbb
cmp
jmp
jecxz
mov
jo
push
adc
(bad)
popf
pop
mov
inc
into
mov
adc
mov
loop
fsubp
daa
mov
cmp
pop
mov
xor
(bad)
cmc
lahf
movs
out
test
xchg
mov
push
dec
push
xor
test
rcr
nop
popf
aam
mov
rcl
mov
sbb
test
jae
clc
jmp
mov
fisttp
adc
xchg
test
jnp
lods
dec
mov
push
ret
cld
popa
sbb
xchg
and
pop
cmpxchg
add
imul
mov
enter
cmp
adc
xchg
je
cmp
ror
sub
stc
adc
fldcw
xchg
stos
daa
outs
in
jb
add
xchg
xor
mov
(bad)
mov
push
in
aas
push
add
inc
sahf
test
cmps
add
sar
push
mov
jmp
sub
jecxz
jge
jmp
test
repnz
sub
inc
inc
loop
inc
cmp
mov
mov
je
xor
cmp
pop
cmps
mov
mov
xchg
cli
cmc
loope
js
push
(bad)
mov
(bad)
stc
sbb
mov
sbb
and
clc
adc
jl
push
cmp
jno
pop
xor
or
pop
xchg
ss
push
in
ins
outs
sub
pop
push
cmp
push
pop
mov
dec
xchg
ss
jmp
in
lea
sbb
mov
shr
in
push
pop
cs
gs
inc
inc
test
rcr
jnp
mov
pop
mov
pop
jmp
fisttp
lods
lock
outs
adc
repz
stc
out
outs
push
lods
(bad)
xchg
mov
add
pusha
mov
push
jle
in
push
adc
mov
fwait
in
imul
xor
push
sbb
xlat
and
ins
inc
jnp
in
sub
pop
fs
stos
loopne
xlat
jb
shl
(bad)
ret
push
dec
in
pop
sub
mov
or
jno
call
lods
and
lods
fimul
and
out
loope
dec
in
add
loopne
inc
sub
fwait
mov
adc
movs
add
add
push
(bad)
std
xchg
push
pop
xor
popf
mov
mov
fild
mov
rcr
movs
mov
fistp
ds
icebp
add
pusha
daa
in
ja
mov
int
test
xlat
fcmovb
pusha
clc
sar
test
popa
sbb
inc
add
nop
sub
call
pop
xlat
ins
in
xor
test
cmp
stos
sahf
inc
pop
and
jo
push
fucom
popa
cmc
pop
ret
mov
in
shl
push
into
dec
lods
dec
sbb
enter
cmp
lods
mov
xchg
push
in
push
mov
mov
mov
xor
jnp
and
test
stc
mov
jbe
cmp
jmp
pop
xor
test
ror
in
fidivr
adc
xor
or
push
inc
lahf
pushf
fdiv
(bad)
repnz
loope
fs
sub
or
xchg
sbb
xchg
dec
pop
cwde
sbb
out
es
fnsave
mov
push
mov
or
jmp
add
sbb
sbb
jmp
in
hlt
(bad)
loop
sbb
cwde
mov
pop
cmp
jae
pushf
mov
jge
test
inc
or
add
fisttp
mov
in
dec
imul
adc
mov
mov
das
mov
mov
das
xor
mov
mov
jg
or
jns
or
(bad)
pushf
pop
dec
cmp
(bad)
lods
inc
push
inc
mov
pop
adc
in
aaa
xchg
into
jbe
push
cmp
pop
jns
dec
pop
jp
inc
rcr
sub
jmp
(bad)
cmp
push
adc
sbb
popf
retf
mov
xchg
in
jmp
(bad)
mov
shr
adc
mov
xor
test
into
ror
push
daa
inc
enter
aas
adc
push
in
adc
repnz
mov
std
push
push
sub
xor
jno
mov
lahf
dec
call
rcr
rol
fsubr
or
pusha
loope
inc
jae
adc
pop
jnp
pop
aad
jl
(bad)
aad
push
shl
ret
sbb
mov
leave
add
inc
sbb
push
mov
sbb
jecxz
inc
test
inc
cmc
ja
shl
cmp
inc
test
inc
out
inc
in
sbb
retf
inc
dec
aam
adc
and
xor
stc
les
xor
and
sbb
inc
pop
lahf
ror
shl
mov
ins
imul
push
xor
inc
mov
loope
xchg
inc
mov
(bad)
xchg
mov
aaa
(bad)
jnp
push
xchg
inc
fsubr
out
and
les
clc
std
pop
add
stc
test
adc
pop
cwde
adc
xor
sbb
xchg
ficom
sub
sub
dec
fwait
and
rol
sub
ins
test
cmp
fwait
inc
fstp
cmp
int
adc
call
stc
test
ins
or
mov
outs
xchg
movs
into
adc
add
adc
aaa
jg
xchg
add
loope
in
stos
in
mov
repz
std
cmp
lods
inc
inc
outs
fld
lods
scas
push
icebp
cdq
dec
mov
mov
cld
mov
(bad)
dec
lods
enter
push
jae
push
inc
rol
ins
sbb
inc
rcl
mov
outs
push
push
mov
iret
push
sahf
fmul
ret
cmp
or
mov
nop
jg
add
scas
cmp
test
jmp
sbb
je
dec
jmp
stc
sar
scas
xchg
adc
mov
and
fild
imul
or
cmc
(bad)
pushf
or
inc
push
ret
cmps
lods
hlt
mov
xor
(bad)
sbb
mov
push
push
cmp
push
ss
out
mov
sbb
rol
popa
ror
or
jl
push
int3
mul
push
dec
mov
pop
js
cmp
sub
xchg
cli
(bad)
lods
dec
or
jo
mov
retf
and
js
dec
outs
jne
mov
(bad)
pop
aad
fcom
adc
repnz
lds
mov
mov
add
mov
mov
lods
arpl
icebp
jb
sub
jmp
pop
and
push
daa
xchg
cmp
jne
repz
jecxz
inc
cwde
mov
dec
mov
sbb
icebp
mov
xchg
push
jbe
xor
cmc
aaa
gs
sbb
scas
fisubr
pop
xchg
ins
mov
jmp
rcr
bound
fcmovbe
imul
js
loopne
mov
mov
pop
call
pop
mov
lahf
mov
xchg
sbb
fbstp
pop
rcl
pop
scas
test
sub
int
cmove
sti
mov
sbb
pop
fdiv
div
loope
out
push
xchg
rcr
movs
jge
mov
nop
add
popa
hlt
ins
mov
in
jle
xchg
ret
lods
mov
jge
ret
adc
hlt
push
xor
pop
outs
mov
mov
pop
jno
adc
in
adc
and
popa
test
stc
dec
dec
div
push
mov
mov
adc
add
and
or
pop
pop
call
test
in
fnstsw
push
movs
inc
push
xor
jge
sbb
mov
jle
or
popa
stos
(bad)
dec
jns
lahf
cmps
mov
sahf
sbb
in
repz
mov
call
and
jmp
jle
out
mov
not
pop
and
or
xchg
test
xor
push
sbb
test
pop
mov
rol
add
mov
push
ss
mov
fisttp
outs
ficom
inc
in
cs
pushf
sbb
or
fst
or
fistp
inc
mov
cmp
loope
test
inc
mov
iret
inc
mov
lahf
mov
sahf
and
in
je
jmp
std
jecxz
shl
xchg
xchg
movs
cdq
repz
les
jg
inc
loop
nop
sub
mov
jns
sub
addr16
cmp
xchg
retf
loopne
je
add
mov
outs
cld
jle
jmp
pop
scas
(bad)
in
scas
test
or
cmp
lods
psubusb
jnp
scas
es
sub
and
call
jmp
sbb
call
add
mov
nop
xor
or
and
sbb
mul
dec
out
pop
in
mov
outs
cmps
icebp
mov
cmp
(bad)
movs
mov
icebp
leave
fdivr
bound
push
cmp
sti
int
jp
jmp
fstp
inc
xchg
jnp
pop
sub
mov
stc
arpl
mov
loopne
mov
jle
std
pop
(bad)
popa
mov
jmp
jo
xchg
xor
and
bound
sbb
in
adc
je
out
(bad)
push
jno
push
daa
mov
sbb
cmp
cdq
dec
inc
jge
mov
fisub
ret
cld
xchg
xchg
xchg
cdq
adc
cmp
xor
mov
adc
pop
(bad)
cmp
mov
and
fisttp
sub
mov
mov
aaa
mov
add
mov
cmp
cmps
sub
jb
loopne
mov
sahf
gs
or
daa
arpl
xor
sar
inc
fst
dec
mov
push
pop
dec
dec
imul
out
cmc
(bad)
sbb
inc
out
jb
ins
test
sbb
xor
adc
sub
xchg
loopne
mov
inc
or
jl
dec
and
retf
mov
dec
test
and
add
or
dec
mov
push
pop
(bad)
clc
(bad)
xchg
mov
shl
lds
jp
or
fisttp
out
scas
push
xchg
jl
push
cmps
ror
sub
mov
mov
mov
xchg
dec
sbb
push
fsubrp
icebp
cdq
aas
mov
xchg
add
mov
ins
pop
jbe
xlat
sbb
sti
jnp
xchg
add
mov
popf
inc
fisttp
add
adc
or
xchg
ss
ficomp
mov
pop
arpl
outs
push
ss
mov
or
jb
and
sbb
daa
add
dec
(bad)
retf
dec
xchg
jp
fnstenv
bound
adc
xchg
adc
fnstsw
in
sti
push
xchg
sbb
test
ror
mov
lds
inc
and
mov
popa
test
cli
jo
sahf
into
ficomp
js
xchg
(bad)
and
xor
mov
xor
pop
xchg
enter
bound
sbb
dec
sbb
ins
out
mov
bound
ds
jmp
jne
jne
or
fsubr
pop
push
pop
add
xchg
int3
pop
dec
lods
pop
call
sbb
mov
cli
mov
xor
jl
mov
cmp
xchg
or
mov
call
jl
push
jmp
jne
loopne
icebp
inc
jne
in
inc
jmp
fdiv
outs
ror
pop
lods
push
dec
data16
dec
cmc
retf
aaa
jbe
movs
xor
pop
push
jbe
jns
mov
shr
inc
jp
rcr
lahf
repnz
outs
adc
xor
cmps
xor
adc
ins
cwde
xchg
aad
sbb
jle
pop
xchg
mov
or
in
and
and
jbe
stos
adc
mov
and
data16
dec
mov
dec
jmp
inc
fdivr
sti
test
cmps
jp
add
push
pusha
pop
popf
iret
lock
(bad)
pxor
sahf
test
shl
push
jmp
adc
test
into
in
dec
fdivrp
and
retf
lods
xchg
shr
xor
inc
mov
inc
in
stos
test
call
in
dec
xchg
ins
(bad)
sar
shl
pop
mov
hlt
jle
mov
into
push
lods
fbld
hlt
push
mov
inc
out
xchg
xor
inc
cmp
popa
add
inc
add
test
push
out
mov
dec
cld
call
add
inc
daa
or
aas
xor
adc
cmp
add
mov
dec
fwait
fwait
pop
mov
inc
cmps
sub
out
scas
(bad)
jge
test
ss
push
xor
mov
mov
jg
add
cmp
push
inc
test
jo
es
jno
repnz
dec
jbe
out
pop
ror
mov
push
repz
enter
and
inc
and
clc
(bad)
ins
adc
jecxz
(bad)
ja
in
mov
(bad)
sti
dec
mov
test
stc
sub
xor
jl
push
je
mov
jg
mov
pop
(bad)
dec
sub
jb
xchg
push
xor
outs
bound
in
xor
fidiv
rol
add
in
shl
ja
pop
test
mov
pop
mov
xor
retf
xchg
mov
jg
in
cdq
mov
es
ins
push
mov
in
into
xor
ret
les
cmc
mov
jae
addr16
jp
(bad)
mov
push
movs
retf
or
ds
mov
outs
push
jo
pop
xchg
popa
popf
lahf
test
aad
int3
cmps
xchg
in
pushf
test
vphadddq
and
xor
(bad)
adc
mov
lods
push
jno
jl
jle
inc
xor
mov
sbb
rcr
add
mov
pop
add
ret
pmulhuw
push
or
imul
je
or
sub
jg
adc
adc
push
inc
ret
add
les
inc
jmp
rcl
(bad)
or
test
mov
pop
xchg
push
push
lds
pop
adc
jns
mov
out
mov
iret
sub
icebp
xor
pop
xlat
rol
pop
pop
push
es
or
lods
cmp
add
sbb
mov
int
ror
lahf
mov
mov
mov
daa
jnp
jg
hlt
mov
in
cmp
or
cwde
pop
cmp
dec
and
mov
cdq
and
mov
adc
sbb
mov
int
in
cld
adc
cmp
and
fcom
jg
mov
adc
std
push
mov
jg
adc
(bad)
push
mov
jne
jecxz
adc
sbb
in
out
add
outs
inc
jae
cli
lods
jmp
dec
dec
test
cwde
sbb
or
sub
aad
call
mov
sbb
pop
cmp
stos
adc
add
pop
iret
sub
mov
jnp
je
cwde
retf
pop
inc
cmp
mov
push
arpl
pop
mov
cdq
mov
in
stos
and
test
jno
sbb
retf
xor
add
xchg
in
in
jge
sbb
mov
xchg
pop
jmp
mov
(bad)
inc
out
pusha
popa
daa
aam
or
and
cdq
cmps
scas
addr16
rcr
in
dec
mov
mov
lock
ret
pop
jnp
scas
sub
cmp
jno
pop
mov
sub
aas
xor
in
daa
jmp
int3
pop
fwait
(bad)
cmp
movs
push
cmp
dec
jecxz
iret
xor
ds
std
add
cmps
push
fimul
mov
adc
sub
aaa
addr16
jle
sbb
add
cmps
xlat
scas
stos
and
mov
add
cmp
js
data16
fwait
into
sar
das
and
xor
mov
mov
dec
enter
pusha
add
sub
mov
les
sub
sub
mov
jae
mov
sbb
sbb
mov
bound
adc
mov
push
lods
and
(bad)
fist
jl
xchg
dec
jl
sub
adc
(bad)
fild
inc
sbb
rcl
in
mov
rcl
fld
xchg
inc
xchg
js
push
(bad)
mov
cmps
ins
sub
mov
xor
xor
mov
loop
jmp
in
sbb
call
mov
ret
ret
or
sbb
and
imul
jns
sub
outs
pop
fadd
jl
mov
mov
stos
popf
fwait
push
loop
sub
neg
ja
sub
stc
pop
mov
jmp
pusha
repz
dec
(bad)
ins
push
fcmovne
pop
push
add
push
and
add
(bad)
fdiv
xchg
inc
fnstenv
xlat
mov
cmp
inc
dec
data16
mov
inc
xchg
popf
stc
shr
push
push
dec
adc
sub
xchg
mov
rcl
hlt
pop
rol
scas
push
add
inc
addr16
adc
je
std
ficomp
push
push
ror
lock
imul
adc
in
mov
mov
repnz
sbb
ss
inc
push
add
dec
or
imul
mov
lods
pop
adc
push
fbld
ins
xchg
mov
(bad)
xor
pop
(bad)
not
xchg
ror
fisttp
jb
ret
scas
dec
scas
push
xor
mov
mov
inc
scas
push
jge
xor
je
sbb
gs
and
push
jb
aad
mov
jl
jb
and
repz
add
or
sbb
cmp
mov
imul
into
add
jp
mov
mov
sub
cmp
ja
dec
paddsw
mov
pop
ja
mov
in
xor
sub
inc
adc
shl
jo
pop
inc
xchg
xor
loop
dec
ins
dec
ret
xor
retf
repz
je
stc
pop
cmc
(bad)
jle
stos
repnz
loopne
outs
aas
je
push
cmp
(bad)
cmc
pop
test
push
test
in
pop
xlat
out
outs
mov
lea
inc
mov
les
fs
test
push
mov
(bad)
daa
in
mov
jns
in
sub
dec
mov
sub
out
sub
add
xchg
push
(bad)
cmp
cli
adc
push
out
or
mov
jae
(bad)
std
aam
mov
pusha
stos
ss
inc
and
pop
lea
icebp
mov
(bad)
cli
repz
icebp
or
push
and
mov
leave
cmp
inc
lods
addr16
mov
xor
jecxz
sbb
ja
push
hlt
aas
mov
jl
xor
xor
jbe
push
push
mov
sub
cmps
mov
push
iret
stos
or
ret
sahf
aaa
(bad)
inc
inc
lock
test
out
sbb
js
lds
adc
mov
fxch
int3
rol
or
sysenter
push
push
test
ret
(bad)
shl
repnz
mul
adc
sub
or
in
pusha
push
out
mov
in
lds
cmp
(bad)
and
shl
adc
add
es
jno
jns
fwait
push
pop
push
out
shl
sub
aad
add
ret
xchg
xor
std
call
imul
out
inc
shl
fidiv
ja
pop
pop
pop
sahf
cs
(bad)
int
pop
pop
push
pop
and
shl
dec
shl
lds
popf
ds
shl
xlat
add
adc
loop
push
push
dec
and
repnz
xchg
aad
pushf
xor
mov
add
rcl
imul
push
add
push
mov
enter
scas
loopne
ins
js
push
jno
jge
and
mov
aas
or
pop
jge
push
mov
shl
pop
xchg
mov
js
sub
mov
loope
cmp
sbb
and
jb
cmp
push
lods
test
xlat
dec
xchg
cmps
into
fstp
jmp
leave
(bad)
add
nop
lahf
rcl
sub
and
jno
ss
xor
in
mov
in
cmc
cli
add
pop
mov
pop
cmp
(bad)
(bad)
bnd
in
enter
test
stos
mov
bound
pop
test
xor
and
cmps
push
or
mov
cs
and
repz
inc
imul
adc
pushf
jne
sbb
mov
jp
or
mov
arpl
jmp
enter
dec
dec
leave
shl
and
int
pushf
in
bound
sub
jbe
mov
mov
icebp
add
add
in
sbb
pop
fxch
jo
ret
cmps
jp
(bad)
xchg
out
add
jnp
(bad)
arpl
fisttp
pop
add
jl
push
inc
ret
xchg
bound
add
inc
das
repz
stc
add
dec
(bad)
ins
push
retf
mov
push
jl
jns
mov
pop
and
xor
sbb
popf
mov
and
(bad)
data16
test
sbb
pushf
ins
popa
sti
push
in
sbb
cmp
mov
mov
sub
inc
retf
scas
pop
bound
jb
ins
(bad)
cmc
sbb
xlat
lods
ret
cmp
adc
sti
fdivrp
jae
dec
fimul
jmp
movs
dec
rcl
aad
adc
push
mov
int
xchg
push
shr
retf
scas
add
scas
push
adc
shl
dec
pusha
mov
add
mov
outs
add
sub
push
sahf
mov
jle
jmp
mov
idiv
jl
mov
lahf
push
sub
cmp
mov
cdq
outs
dec
(bad)
(bad)
lock
(bad)
and
xchg
xchg
push
inc
jbe
jle
dec
movs
adc
jp
stos
scas
xchg
inc
in
mov
mov
mov
mov
(bad)
lods
in
cmp
daa
out
xlat
sub
pop
add
loope
dec
push
mov
mov
divps
pop
aaa
sbb
cmc
in
jp
sbb
rcl
call
pop
clc
(bad)
cwde
and
inc
iret
or
int3
mov
mov
imul
popf
fwait
pushf
and
hlt
xchg
ret
sbb
mov
je
rol
mov
sub
or
test
push
mov
adc
pop
addr16
out
mov
inc
jnp
enter
ret
je
pop
hlt
lods
dec
mov
out
(bad)
out
push
dec
movs
stc
mov
mov
rep
xchg
mov
lods
dec
fild
sub
hlt
es
xor
pop
ficom
fidiv
ret
lock
loope
les
dec
xor
cmp
cli
lds
call
pop
lods
push
xchg
retf
jecxz
sbb
inc
inc
repz
mov
inc
jle
fnstcw
mov
jnp
sar
outs
jbe
adc
jae
je
outs
cmc
dec
jb
mov
mov
enter
pop
and
mov
popa
fcomip
adc
or
sub
dec
aaa
cmp
jle
push
xchg
dec
mov
mov
and
jns
xor
pop
sub
jb
fidiv
neg
adc
fild
adc
out
fidivr
inc
mov
cld
mov
je
sbb
data16
and
cmc
xchg
into
xor
jl
jo
nop
mov
cmc
push
jge
(bad)
movs
fmul
rol
and
loop
lea
(bad)
aaa
lds
mov
(bad)
in
cmp
xor
sbb
push
aad
imul
adc
cmp
dec
add
xchg
xor
std
fild
shl
stc
call
add
push
pop
push
outs
loopne
shl
adc
stc
mov
cs
inc
cwde
xchg
push
fs
scas
sahf
pusha
js
sbb
jmp
cmp
das
mov
call
cmps
lods
std
mov
push
aam
push
adc
xchg
sub
mov
int3
or
repz
ret
push
dec
outs
int3
retf
(bad)
test
or
test
add
ss
out
mov
xchg
inc
mov
dec
jbe
adc
aas
test
loopne
pop
xlat
jae
xlat
rcr
add
cld
cs
mov
leave
mov
into
inc
mov
daa
jae
push
sub
dec
lea
adc
cmp
les
sub
xor
mov
pop
addr16
int
jne
fwait
mov
es
jmp
push
xchg
out
mov
add
sub
(bad)
aad
out
jo
sbb
jp
mov
outs
fldenv
dec
jmp
push
dec
pop
faddp
adc
les
push
cwde
push
sub
jno
clc
jge
aam
push
push
cmp
push
fnstenv
push
movs
cmp
dec
add
pop
int3
out
mov
mov
ss
jle
int3
xor
add
(bad)
fsub
loope
dec
xor
clc
aas
pop
icebp
sub
cmp
int3
in
loope
or
xor
shr
and
gs
inc
dec
lds
fs
stos
push
shr
in
xchg
mov
lock
xor
arpl
outs
xchg
stos
hlt
xchg
pusha
movs
sar
std
xchg
test
push
mov
mov
ins
cmc
cmp
(bad)
cmps
and
jle
outs
sub
ja
fdivr
pop
aam
push
lock
mov
xchg
movs
inc
or
jecxz
lock
mov
or
ss
(bad)
push
mov
cmp
mov
mov
cmp
ret
cmps
push
fwait
xor
or
and
xlat
jnp
jle
xchg
(bad)
jle
pop
nop
push
cmp
mov
dec
xchg
(bad)
cs
imul
xor
adc
(bad)
pop
xchg
(bad)
cmp
sub
scas
inc
cmc
ret
add
adc
jno
inc
add
sub
adc
xchg
jnp
mov
ret
cmps
retf
loopne
retf
xchg
xchg
clc
sub
(bad)
cwde
push
(bad)
jmp
in
mul
stos
push
fsub
cld
inc
jns
dec
in
xor
(bad)
in
push
push
out
loopne
call
sub
aad
popf
inc
add
inc
stos
sar
mov
inc
push
(bad)
rcr
jb
jo
fcom
xchg
push
mov
push
ret
pushf
mov
movs
fldpi
aam
clc
ss
sbb
outs
pop
dec
call
cdq
shl
mov
xor
cs
popa
adc
out
mov
pusha
inc
cmp
sub
stos
out
mov
mov
ret
mov
nop
lea
mov
in
call
mov
movs
(bad)
aad
icebp
push
sub
fisttp
loop
and
dec
inc
fldcw
shl
pop
data16
and
sub
cmp
ret
jmp
push
dec
ret
iret
mov
iret
stc
sti
popf
cmp
imul
mov
xor
lock
cmp
pop
mov
sub
call
in
xchg
inc
dec
ins
dec
mov
mov
inc
mov
cmp
iret
push
test
rol
loopne
mov
sbb
and
mov
ds
popf
out
mov
pop
loopne
and
jg
inc
out
in
iret
or
icebp
into
and
pushf
popf
(bad)
and
out
rol
pop
mov
add
movs
stos
mov
jecxz
aaa
mov
imul
push
mov
mov
nop
mov
loope
retf
(bad)
hlt
dec
push
cmps
iret
movs
push
add
push
cli
loope
in
xchg
or
adc
not
lock
pop
inc
push
jmp
and
out
cmc
into
aaa
mov
call
loope
inc
add
fild
mov
adc
or
cs
and
pop
push
mov
cmc
add
add
xor
daa
dec
retf
pop
jno
je
cmp
mov
or
ret
je
jg
add
shl
aas
in
cwde
es
imul
sbb
mov
dec
add
jge
pop
fsub
xor
cmps
or
stc
retf
sbb
lahf
jnp
cmp
cdq
push
dec
lods
jmp
inc
xchg
gs
test
ss
xor
cwde
and
push
pop
sbb
mov
mov
retf
jo
cmp
clc
sbb
xchg
in
pop
sub
push
push
aam
mov
pushf
imul
popa
mov
out
cs
xchg
scas
hlt
movs
shl
xor
pop
mov
int
and
inc
sbb
not
dec
in
call
test
cmp
xor
aad
ins
inc
mov
imul
retf
(bad)
xor
add
pop
pop
push
mov
div
sub
and
jle
push
inc
mov
jl
dec
retf
xor
cmp
hlt
push
and
jge
movs
bound
loop
fs
sub
fsubr
call
mov
mov
les
adc
ret
shr
mov
lods
ds
xchg
sti
push
mov
ja
cmps
aaa
das
and
movs
sub
in
jg
movs
nop
mov
cmp
js
jl
or
jge
arpl
sub
cmp
pusha
je
inc
inc
xor
or
xchg
push
cmp
mov
sbb
ret
jge
jno
int3
pop
outs
adc
ins
pop
push
jo
cmp
scas
inc
mov
and
mov
int3
dec
cmps
cwde
ret
cwde
xchg
push
jge
cli
pop
add
jg
jg
(bad)
jl
and
cmp
outs
xor
sbb
mov
lock
les
sbb
loopne
fwait
cs
cmp
mov
pop
add
mov
add
xlat
mov
push
outs
mov
mov
pop
and
sar
and
or
xor
adc
sbb
test
pop
mov
(bad)
jae
iret
jl
add
es
(bad)
jge
imul
jnp
out
loopne
mov
(bad)
jg
inc
add
test
or
mov
push
sahf
pop
ss
arpl
rcl
arpl
inc
or
sti
aas
sub
ror
mov
shl
shl
fldcw
mov
mov
pop
push
aad
loop
adc
je
js
push
and
test
mov
cdq
mov
shr
or
adc
ins
arpl
fstp
pop
lods
jp
enter
out
sbb
fimul
or
loope
jg
mov
push
xchg
jo
mov
push
cmp
push
cli
test
and
or
and
std
cmp
jecxz
sub
cmp
dec
and
fucomp
inc
(bad)
mov
test
xor
add
inc
mov
add
popf
add
push
cmp
out
ins
mov
xchg
pusha
inc
push
cmp
push
xchg
cdq
sub
jns
and
out
xchg
retf
adc
jmp
mov
das
dec
call
std
pop
lock
test
dec
xor
pop
out
and
call
mov
sub
jno
mov
or
or
jecxz
inc
inc
fwait
xchg
or
sbb
stos
fiadd
adc
mov
adc
mov
(bad)
mov
mov
jp
push
ret
cmc
stos
xor
pop
and
jmp
xchg
adc
push
push
sar
test
cli
mov
adc
pop
imul
cs
push
int3
and
clc
out
outs
sub
pop
daa
pop
sub
sbb
mov
out
retf
xchg
imul
push
jns
cmp
mul
sub
mov
push
dec
aaa
push
jmp
(bad)
into
out
pop
inc
mov
mov
aaa
(bad)
xchg
aam
repnz
call
mov
cli
push
jb
stos
ret
sub
pop
push
sub
sub
sbb
jmp
lods
pop
add
sub
int3
rcl
add
pop
xor
repnz
fisttp
not
pop
push
fucomi
jle
(bad)
push
pop
scas
cmp
inc
mov
mul
fisttp
mov
outs
push
add
mov
fwait
sti
fidivr
popa
dec
push
pushf
fcmovnbe
xor
imul
dec
jbe
pop
xchg
cmp
fadd
fstp
dec
gs
addr16
mov
add
mov
cmp
(bad)
jp
fs
jne
mul
into
adc
pop
mov
mov
test
je
jns
mov
xchg
test
adc
loop
(bad)
xor
jnp
mov
mov
das
sti
stos
add
out
scas
es
out
mov
dec
mov
daa
into
out
scas
pop
icebp
test
vsqrtps
aam
ror
push
mov
jmp
sar
dec
push
jae
push
sub
mov
(bad)
xlat
sbb
iret
lahf
sbb
outs
inc
dec
(bad)
leave
ret
xchg
cmps
test
(bad)
stos
mov
std
jecxz
test
push
enter
sbb
test
fwait
cmp
push
jns
scas
pop
aas
pop
jmp
rcl
dec
jno
fmulp
scas
dec
retf
pop
mov
out
rcr
test
mov
fsubr
ja
movs
sbb
inc
mov
push
mov
sub
outs
jb
pop
xor
rol
adc
repz
lahf
jge
test
and
xor
pop
mov
xor
sbb
sbb
int
shl
aas
dec
retf
ja
pop
xor
xchg
sti
push
je
jmp
repnz
rol
imul
mov
cmp
xor
(bad)
popa
add
push
mov
or
xlat
sar
mov
mov
mov
mov
loopne
out
adc
and
popa
mov
pop
out
into
xchg
or
test
aam
mov
out
mov
arpl
dec
add
call
push
jl
sbb
jo
push
jne
popf
sar
mov
scas
mov
fist
mov
pop
or
fs
jl
icebp
cmps
repnz
adc
cmps
jmp
adc
mov
out
test
dec
cs
(bad)
addr16
out
jmp
icebp
push
jb
sbb
ror
sar
add
mov
sbb
push
retf
ret
mov
jecxz
adc
xor
sbb
pushf
mov
stos
arpl
std
mov
push
mov
dec
xchg
mov
outs
push
cmps
xchg
retf
jmp
(bad)
push
daa
adc
mov
jmp
ins
fnsave
pop
pop
loope
sbb
pop
out
sub
(bad)
test
sar
pushf
mov
mov
xor
or
rcl
cs
mul
adc
or
movs
aas
jmp
retf
(bad)
cmp
outs
enter
push
imul
dec
rcr
mov
jo
ins
inc
adc
(bad)
dec
lea
ds
mov
fxch
lock
adc
pop
retf
jbe
out
in
or
jbe
mov
push
movs
jbe
int
(bad)
push
xor
dec
dec
sbb
movs
adc
je
or
and
push
pop
add
dec
leave
sar
daa
jge
add
scas
xchg
pop
cmps
mov
fmul
clc
or
adc
jg
mul
cmp
push
retf
popa
call
bswap
mov
(bad)
dec
xlat
not
ss
(bad)
sbb
aaa
add
dec
sub
and
imul
dec
mov
add
mov
ss
jecxz
jae
sahf
mov
add
cs
rcr
or
mov
leave
loopne
jp
outs
jecxz
adc
pusha
out
pop
mov
test
shl
sbb
fsubr
mov
or
or
test
cmc
call
mov
shl
fnsave
xchg
(bad)
cli
push
(bad)
mov
inc
clc
out
pop
jb
inc
jge
adc
adc
pop
in
mov
jmp
repnz
lahf
sub
test
int3
retf
push
and
int3
call
outs
jae
cmc
cmps
mov
aaa
gs
cmps
imul
outs
call
cmps
jg
lahf
shl
adc
iret
fadd
jecxz
adc
fst
or
xchg
pop
sub
or
add
aad
ret
or
nop
dec
xchg
xchg
stos
inc
xlat
arpl
outs
pusha
psrlw
repz
mov
loope
jge
or
out
clc
or
jge
pop
xchg
or
xor
mov
xor
fidivr
push
dec
icebp
loopne
mov
dec
mov
ins
idiv
dec
(bad)
push
jae
pusha
rol
loop
cmp
pop
jne
jbe
(bad)
adc
adc
cmc
daa
pop
shl
mov
pusha
int
mov
cwde
dec
or
push
loop
inc
dec
leave
ret
popf
les
lods
inc
push
lock
mov
pushf
push
jg
ret
add
clc
xchg
addr16
inc
sbb
sar
sbb
lahf
mov
into
daa
jns
add
rcl
imul
mov
sub
aaa
pop
imul
(bad)
in
mov
or
imul
arpl
mov
inc
push
(bad)
je
mov
dec
inc
mov
xor
out
sbb
pop
shl
xchg
cmps
mov
fidiv
dec
add
shl
(bad)
jae
loope
xor
push
cmps
(bad)
jb
adc
loop
mov
cmp
in
div
pop
idiv
rep
shl
mov
jle
inc
loopne
adc
mov
mov
int
mov
xor
imul
fidiv
sahf
fcmovnbe
xchg
pop
push
pusha
xlat
mov
and
cwde
mov
inc
and
es
mov
pop
push
stc
ss
lds
data16
mov
fcmove
mov
push
dec
add
jecxz
push
xchg
mov
xor
das
mov
loope
dec
mov
or
dec
cmp
pushf
mov
shl
jo
jbe
mov
sbb
sbb
repnz
es
sbb
sti
(bad)
fsubr
or
and
icebp
icebp
mov
call
cwde
jmp
loopne
push
loop
cmp
jns
and
inc
or
cdq
mov
hlt
das
mov
mov
fist
int
mov
and
ret
pop
jmp
xchg
stos
jl
pop
jae
jl
push
add
and
inc
mov
inc
inc
jg
sahf
xchg
(bad)
mov
pop
movs
push
fdivr
xchg
jge
and
mov
mov
sbb
mov
(bad)
icebp
xchg
or
clc
inc
add
or
fnstsw
test
mov
xchg
jg
or
cmp
(bad)
repnz
data16
sbb
or
fidiv
cmovge
leave
xor
add
push
icebp
push
inc
ja
xor
inc
test
rol
mov
cmp
or
loopne
add
mov
repnz
mov
daa
ror
fisubr
daa
lods
bound
in
pop
dec
imul
fidiv
xor
stos
lea
retf
xchg
outs
pop
pop
les
sbb
(bad)
xor
fisubr
cs
aad
xor
iret
adc
in
sbb
(bad)
test
loopne
cmp
xor
dec
sti
and
cmp
fwait
call
cli
loopne
test
imul
imul
mov
and
fcmovu
movs
xor
call
es
ja
mov
loopne
imul
jnp
dec
cmps
sub
dec
xchg
mov
fld
hlt
mov
sub
repz
mov
adc
dec
inc
int3
push
push
jl
xchg
push
sub
stos
fistp
inc
dec
adc
cld
or
push
ja
mov
cmps
or
pop
mov
inc
inc
int
push
(bad)
and
cld
bound
ror
out
dec
mov
xchg
push
movs
jmp
push
mov
arpl
jae
pop
pop
cmp
imul
push
push
ds
mov
jle
sub
mov
mov
cmps
fdiv
sub
add
(bad)
dec
sbb
dec
daa
and
mov
adc
pop
and
clc
sbb
stos
fadd
idiv
aas
mov
sub
or
fisubr
stc
out
inc
mov
mov
(bad)
push
adc
aaa
xor
out
shl
cmp
mov
sub
adc
sub
movs
iret
ss
and
cmp
sar
sub
adc
movs
push
sub
imul
shl
ins
mov
dec
in
pop
cmp
out
stos
sub
lds
movs
jle
(bad)
mov
lods
retf
sub
lods
stos
cmp
push
ss
or
push
xor
sub
mov
mov
dec
aad
imul
inc
cld
addr16
sub
inc
sar
(bad)
sti
enter
push
in
jge
xchg
jg
das
mov
sti
fld
and
mov
jl
sbb
push
popf
ror
sub
pop
and
or
data16
pop
repz
ror
loop
push
jae
out
or
enter
fcomp
scas
or
xor
jno
cmp
stc
adc
sub
fucom
rcr
aad
into
rcl
inc
mov
mov
ins
dec
(bad)
add
jae
sbb
(bad)
mov
(bad)
and
ret
fldenv
adc
xchg
in
xchg
nop
pop
jp
push
aam
fwait
les
dec
in
or
dec
xchg
mov
cmp
push
jg
inc
in
push
fwait
cmps
mov
fidiv
mov
add
loopne
call
outs
sbb
(bad)
cmps
mov
enter
jge
loope
jp
ins
adc
and
hlt
in
mov
adc
dec
xor
pop
aaa
sub
out
loopne
sub
aam
aaa
and
lods
cmp
mov
imul
ins
push
cmc
mov
pop
xor
add
adc
les
out
clc
or
inc
sahf
jo
push
iret
pusha
inc
or
inc
push
fmul
retf
add
xor
ja
xchg
int3
pop
retf
js
clc
fild
lock
fisubr
aam
jge
mov
rcl
or
push
fdiv
mov
or
(bad)
xor
sbb
retf
pop
aas
js
xchg
jb
pop
push
and
xchg
ja
test
jle
fimul
(bad)
dec
push
sbb
adc
xchg
test
xor
rcl
mov
and
fwait
bound
xor
ja
mov
adc
pop
(bad)
in
jmp
ficom
mov
movs
xor
adc
fcomip
adc
pusha
outs
sbb
out
aas
arpl
mov
or
hlt
aas
loope
add
in
mov
jle
cld
test
cdq
cmp
mov
movs
push
cmp
(bad)
mov
xlat
mov
sub
or
or
pop
sub
mov
sar
pop
or
xchg
add
mov
pop
std
jae
mov
dec
and
clc
mov
mov
push
cmc
xchg
loope
dec
sub
and
aam
dec
push
aad
(bad)
dec
jmp
or
pop
xor
fmul
stos
pop
or
jecxz
cmps
cdq
mov
in
int
pop
push
imul
scas
shr
mov
xchg
vmptrst
ins
add
sub
xchg
jle
out
es
rcl
or
pop
and
leave
sbb
ins
push
jno
pusha
in
ins
fistp
cmps
sbb
lods
pop
mov
inc
xor
or
(bad)
test
jp
fild
and
shl
cmp
leave
scas
frstor
mov
add
mov
adc
loopne
mov
sub
cmovns
sbb
push
in
sbb
xlat
mov
jg
popa
mov
loopne
cmp
enter
sbb
pop
aad
mov
loopne
cmp
je
movs
fwait
or
ins
mov
rcl
push
or
sub
dec
inc
lock
daa
scas
adc
push
jp
adc
dec
lock
pusha
test
sub
inc
cmc
gs
adc
adc
hlt
in
shr
mov
xchg
adc
or
cmp
loope
adc
jbe
dec
test
out
mov
fdivp
fwait
jnp
push
pop
push
mov
(bad)
pop
stc
dec
repz
mov
push
aam
and
dec
das
in
mov
sbb
fs
leave
push
jg
push
mov
jge
(bad)
hlt
cs
das
fimul
and
xor
jb
daa
mov
cs
jnp
add
adc
lahf
mov
and
jg
and
bound
push
cs
push
rol
clc
push
xor
std
lods
pop
pop
push
loop
es
pop
inc
jl
shl
das
cmp
fstp
in
pop
sub
mov
jo
std
adc
(bad)
add
fdivr
icebp
add
xor
shr
pop
xor
inc
fs
gs
outs
or
stos
pop
loope
leave
fild
repnz
dec
stos
out
in
or
sub
movs
aam
xchg
pop
pop
ds
(bad)
jp
pop
sahf
adc
cmps
pop
in
clc
cmc
mov
fimul
scas
mov
(bad)
mov
sub
pop
pop
or
xor
jge
test
out
sbb
adc
pop
ret
mov
sub
jno
fst
out
aam
jo
es
xchg
or
int
imul
repnz
pop
or
pop
add
dec
gs
out
test
jmp
pop
mov
sbb
push
into
dec
sub
jmp
pop
sub
imul
lahf
xchg
rcr
cs
mov
cli
int3
add
xor
adc
call
rcr
cmp
imul
xchg
fcmovbe
clc
cmp
loope
stos
dec
data16
and
fcmovnb
cld
sbb
mov
add
(bad)
push
retf
stc
ins
ins
fdiv
les
fidivr
(bad)
xor
pop
cs
dec
loopne
aas
int3
push
add
cmp
sti
aad
push
in
test
sub
push
stos
adc
push
retf
mov
pop
aaa
inc
add
hlt
xchg
shl
arpl
js
push
call
dec
call
mov
mov
jmp
or
dec
shr
jae
leave
pop
mov
xchg
jbe
cs
mov
mov
mov
(bad)
shr
movs
iret
icebp
and
pushf
xlat
(bad)
inc
xor
call
sbb
and
sbb
jecxz
jp
pop
pop
lods
add
rcr
ret
mov
scas
ret
loop
arpl
data16
cdq
sub
arpl
inc
mov
aas
test
or
mov
jmp
push
xlat
inc
and
or
dec
retf
gs
cdq
nop
enter
jns
xor
out
bound
sbb
lods
dec
and
shl
xchg
jp
imul
jmp
pop
mov
mov
rcr
inc
pop
in
mov
jb
adc
jmp
lock
shl
push
mov
pop
adc
(bad)
mov
jl
int
fdiv
pop
retf
jno
mov
aas
jl
jl
cmp
call
ficom
jge
dec
xchg
adc
loop
push
ja
xchg
loopne
iret
mov
xchg
fidiv
mov
inc
ret
jbe
pop
mov
sbb
fistp
or
shl
test
xchg
sbb
lahf
imul
mov
repnz
jecxz
add
jb
xchg
cmc
out
mov
cmps
popf
movs
jne
dec
clc
dec
not
ss
jbe
jnp
loopne
jge
mov
movs
mov
add
mov
xchg
outs
neg
xchg
cmp
mov
hlt
xchg
jns
add
imul
hlt
push
mov
retf
inc
ret
or
aas
push
mov
shr
push
movs
push
dec
adc
icebp
xor
call
out
sub
ins
test
mov
adc
pop
sbb
daa
cmp
add
(bad)
lea
and
int
rol
jnp
xchg
dec
jmp
inc
gs
xchg
arpl
and
dec
out
mov
xor
cmp
cmc
and
mov
movs
add
int3
test
les
fistp
call
adc
int
mov
lock
(bad)
addr16
dec
outs
pushw
pushf
int
xchg
shl
or
std
lock
mov
jmp
sar
adc
pop
adc
js
loopne
and
mov
xchg
fcmove
shr
inc
pop
jb
arpl
cdq
(bad)
stc
xor
or
add
xchg
out
jne
sbb
(bad)
pop
dec
imul
sahf
shl
icebp
pop
xor
push
jg
es
fidivr
cmp
or
icebp
sub
bound
test
jge
shl
sub
mov
ret
sar
or
sub
add
dec
arpl
imul
gs
jmp
xor
jne
stc
rol
stos
mov
cmps
dec
lock
ss
jb
sbb
icebp
mov
inc
mov
dec
retf
and
fcomp
fimul
mov
stos
jmp
push
mov
fidivr
push
test
xchg
ret
add
and
push
inc
(bad)
int
sahf
scas
xor
sub
imul
sub
mov
cmp
in
(bad)
cmc
push
pop
push
cli
jo
std
popf
dec
jbe
pop
ins
fdivr
fnstsw
jp
jae
lods
lahf
mov
out
sbb
jle
add
push
lods
popa
pop
cmc
outs
cmp
pop
pushf
jecxz
ins
xor
and
jns
or
and
cmp
mov
ret
jbe
in
in
lods
pop
xchg
das
push
js
jp
push
(bad)
sahf
push
in
push
inc
mov
aas
in
imul
inc
out
int
sti
mov
cmps
aad
sbb
stos
bound
popa
fdiv
inc
adc
jae
sbb
mov
xlat
pop
add
adc
aam
adc
dec
nop
out
mov
fcomp
and
je
fimul
xchg
mov
leave
push
and
pop
scas
call
pop
test
mov
sub
popf
sbb
jae
bound
int
cmps
(bad)
lea
pop
adc
add
inc
push
cmp
inc
aas
icebp
hlt
jno
dec
arpl
fwait
rol
mul
xor
fisubr
add
and
imul
retf
cmp
adc
(bad)
mov
loop
das
sbb
loop
push
adc
idiv
cmp
mov
fnstsw
mov
pop
xor
aad
ficomp
(bad)
xchg
pop
int
test
popa
imul
test
push
aad
add
imul
scas
outs
jo
mov
sub
inc
stc
mov
mov
xlat
or
or
enter
mov
pop
mov
outs
not
sbb
mov
sub
jne
(bad)
nop
and
inc
cmp
add
outs
rcr
outs
inc
xor
cmp
cli
xor
cwde
(bad)
push
ret
mov
out
mov
stos
and
cmp
push
fsubr
shr
std
push
sar
adc
rcl
sahf
mov
fmul
xor
rcr
sbb
in
mov
es
out
adc
sub
sub
add
mov
mov
push
inc
and
test
test
inc
shr
sub
call
sbb
jle
add
cmps
(bad)
push
xchg
jb
cmp
pop
rol
(bad)
xchg
in
add
int3
out
ret
xchg
dec
and
pop
(bad)
shl
pop
inc
rcr
sub
leave
jecxz
inc
sub
aam
jne
or
loopne
dec
fist
cmp
dec
int
shr
pop
cmc
mov
and
ret
mov
xchg
cmp
or
jmp
or
cli
push
retf
lods
ss
ss
inc
pushf
(bad)
(bad)
sub
call
pop
repz
add
stc
out
sbb
outs
mov
inc
mov
lea
gs
stos
sbb
jmp
jno
sbb
retf
loop
inc
add
inc
mov
ret
mov
jecxz
push
daa
fs
es
daa
icebp
xor
sub
xchg
cmp
iretw
push
mov
lahf
jo
jbe
ret
daa
sbb
scas
call
test
fidivr
sbb
inc
loop
mov
mov
push
pop
sahf
scas
jae
addr16
adc
enter
jg
clc
sub
push
test
xor
cmp
jge
jbe
jne
data16
adc
mov
mov
pop
sahf
pop
lods
jne
leave
scas
das
call
imul
pusha
and
xchg
pop
push
mov
cdq
scas
arpl
adc
mov
sbb
xchg
and
or
outs
mov
fwait
lods
(bad)
fmul
push
mov
and
in
dec
push
inc
fisub
outs
sub
cdq
sahf
dec
cmp
dec
call
cmp
fwait
sub
imul
fisub
loopne
mov
retf
mov
in
sub
daa
fstp
fadd
leave
xchg
push
dec
dec
addr16
mov
iret
lods
sub
imul
mov
inc
add
inc
or
stos
adc
sub
callw
xlat
xor
scas
fcomip
stos
mov
aas
jns
iret
push
push
mov
adc
or
cmps
fdiv
adc
(bad)
jmp
adc
int3
mov
hlt
(bad)
dec
pop
push
repz
aad
xlat
dec
gs
xor
mov
rcr
xor
or
jge
ror
int3
inc
dec
shl
cmp
dec
repnz
or
les
fs
fisttp
mov
mov
call
add
dec
xchg
add
ins
adc
pop
xlat
fwait
shl
mov
push
es
jp
add
std
cmp
inc
inc
das
pop
push
adc
dec
sbb
dec
rcr
leave
div
sbb
mov
imul
cwde
cwde
sar
sub
(bad)
xor
xlat
and
outs
ins
jae
ret
popf
cwde
push
dec
push
push
dec
lahf
fdivr
xor
popf
clc
xchg
stos
or
cwde
and
jno
je
cdq
and
jge
xchg
enter
xchg
pusha
pop
mov
cmp
pop
cmps
jbe
popf
dec
dec
sbb
jmp
sub
jmp
jmp
mov
cdq
(bad)
nop
jge
mov
ret
mov
xor
mov
cmp
das
pop
mov
ins
mov
mov
aam
and
mov
fsubr
pop
mov
xor
in
outs
adc
pop
pop
fld
cs
mov
dec
lahf
push
dec
cdq
pop
fadd
jb
scas
jle
pop
mov
push
add
int3
fdivr
icebp
or
ins
or
bound
xchg
aaa
aam
hlt
clc
mov
adc
out
dec
repz
ret
fld
bound
adc
movs
pop
dec
inc
mov
(bad)
lods
jns
(bad)
add
pop
mov
jp
in
xor
test
or
adc
dec
aas
mov
outs
dec
call
jp
shr
(bad)
imul
ret
pop
jmp
adc
gs
xor
cmps
mov
and
push
inc
icebp
(bad)
cmp
sub
cmp
mov
ja
push
movs
out
adc
clc
imul
mov
mov
and
mov
add
xor
ja
imul
ret
or
lods
fdivr
out
sub
rcr
cwde
imul
retf
into
xchg
sbb
sbb
test
xchg
into
test
movs
clc
ret
sti
leave
jo
and
lods
sti
icebp
xor
xchg
cld
mov
or
cli
fld
jb
ins
addr16
fdiv
test
in
push
pop
push
fs
out
outs
fist
xor
adc
push
popf
push
mov
push
sti
pop
push
test
inc
stos
ins
daa
mov
ss
and
adc
lock
pop
pusha
dec
sub
jb
cld
shl
cmc
call
popa
xchg
xchg
jmp
xchg
xor
gs
sub
cmp
push
inc
jg
push
mov
xchg
clc
outs
sub
shl
adc
pop
pop
rcr
inc
jp
cmc
ja
push
inc
test
je
fist
inc
cmp
mov
cs
push
mov
and
inc
jne
in
les
add
xchg
add
xor
(bad)
in
sub
inc
dec
mov
loope
mov
add
and
mov
mov
lahf
hlt
data16
lods
adc
or
sahf
loopne
sbb
pop
or
popa
dec
mov
adc
test
sub
pop
inc
movs
dec
ins
pop
movs
std
mov
jno
dec
jae
push
aad
mov
cmp
mov
loop
mov
iret
and
cmp
mov
and
dec
sbb
dec
pop
sbb
mov
sub
fbstp
mov
movaps
jge
sub
sahf
xchg
jmp
or
dec
cmp
enter
fmul
mov
push
push
and
push
cdq
xchg
rcl
test
dec
jg
das
lods
inc
inc
in
leave
and
inc
xor
or
int
pop
popa
aam
mov
(bad)
fcmove
lods
xchg
push
pushf
retf
push
ins
out
xor
das
jns
mov
pushf
and
cmc
push
pop
cdq
in
xchg
pop
arpl
mov
inc
mov
fnstcw
fisubr
dec
xchg
sub
xor
ds
xchg
push
dec
in
mov
pop
pop
inc
(bad)
sahf
add
dec
mov
aas
stos
pop
adc
jp
pop
cld
sbb
dec
call
mov
shl
dec
test
fistp
push
cmp
add
in
xlat
dec
jne
fstp
out
jge
cs
pop
pop
neg
sbb
sub
das
push
sar
fistp
stos
fbld
test
add
out
icebp
sub
ror
ret
or
and
fidiv
pop
push
ret
std
imul
or
repz
and
fnstcw
dec
ins
dec
loope
aad
inc
fild
jns
movs
mov
pop
rol
xor
std
int3
ss
dec
inc
xor
popa
fwait
push
mov
out
test
dec
push
inc
sahf
xchg
add
test
cdq
jno
mov
imul
push
out
mov
pop
scas
inc
add
jo
int
sbb
pusha
dec
push
ins
xchg
push
add
cwde
sar
out
test
push
add
inc
dec
inc
ds
sbb
rcl
add
loope
inc
adc
in
out
aas
cmp
mov
int
inc
cmp
aas
jl
sub
push
and
fsubp
xor
pop
push
pop
cmp
lods
push
fbstp
clc
sub
cld
adc
mov
add
cld
xlat
cdq
xor
into
mov
inc
ja
sub
xchg
jae
aad
call
cmp
loope
mov
add
test
pushf
xchg
xchg
popf
jle
and
jmp
add
jnp
xchg
out
jecxz
fnstsw
sub
inc
mov
mov
xchg
ss
cmp
call
mov
std
inc
fwait
cdq
dec
xor
fucomip
push
into
sar
lods
inc
xchg
sbb
mov
adc
popa
pop
cmovae
push
fwait
ds
jmp
dec
fisubr
inc
test
pop
loop
mov
sbb
sbb
push
jl
aas
xchg
mov
and
fnstenv
ja
repz
adc
mov
jecxz
fmul
in
pop
cwde
out
cmp
dec
mov
mov
jb
jnp
sbb
jg
pop
or
inc
sub
ja
in
stos
pusha
sbb
imul
and
in
sub
out
xchg
ret
and
jb
std
add
mov
test
cmp
not
cs
push
jno
cmp
cmp
idiv
sbb
iret
ret
bound
cs
mov
cmp
loope
mov
xor
adc
jnp
dec
push
test
fidivr
dec
(bad)
jns
mov
(bad)
in
dec
ja
mov
and
test
cmp
push
jns
cwde
and
jb
jmp
retf
test
jb
pop
pop
ss
xchg
xor
sub
xor
push
adc
sbb
push
add
lods
push
pop
cmp
sbb
pop
sub
jae
test
faddp
js
lods
js
push
stos
pop
out
cmp
mul
and
lds
imul
cmps
in
ret
push
dec
adc
out
or
icebp
and
into
je
aas
adc
mov
inc
mov
sub
inc
inc
jg
(bad)
cli
push
and
pop
lods
push
sbb
popa
dec
xchg
ret
jne
add
imul
dec
sbb
inc
aaa
mov
cmps
lahf
mov
es
mov
pop
rol
in
or
pop
mov
push
mov
sbb
loopne
cmp
arpl
and
ds
xor
push
add
xchg
icebp
add
ds
dec
retf
jnp
mov
iret
retf
xor
or
cmp
inc
mov
nop
loope
sahf
or
ror
mov
jl
jmp
mov
jecxz
sahf
and
mov
dec
xchg
xor
fwait
mov
in
cli
addr16
sbb
outs
inc
in
call
stos
mov
ins
lea
or
imul
pushf
retf
sub
mov
daa
jno
inc
fs
jp
mov
sub
inc
push
int3
mov
adc
js
mov
cdq
cmp
ins
and
cmp
pusha
sbb
push
sbb
adc
pop
mul
shr
(bad)
sbb
cmp
mov
nop
shl
movs
fiadd
cmp
mov
popa
arpl
xlat
lock
fwait
mov
jbe
les
imul
call
sbb
ret
rol
cli
xchg
repnz
div
inc
int3
lahf
(bad)
cmps
sub
sub
(bad)
push
mov
sub
mov
xchg
jmp
ins
mov
add
and
pop
xchg
cmp
inc
cmp
stos
sbb
fsubr
mov
outs
mov
ror
shl
lahf
shl
aad
pop
cs
nop
popa
sub
shl
pop
xor
mov
pop
mov
jns
ret
sqrtps
repnz
push
jne
mov
sbb
sub
fsubrp
addr16
mov
sbb
aad
movs
push
cmp
inc
push
xor
mov
mov
ds
bound
icebp
cmc
xchg
test
jl
dec
repz
dec
add
mov
pop
inc
sahf
ins
clc
sar
xchg
lahf
and
aad
cmp
mov
push
dec
add
xchg
test
loopne
mov
jg
stc
cmc
fsubr
lock
ins
daa
jae
fst
pop
test
fdivr
les
add
cmc
mov
outs
add
push
dec
js
shl
int
dec
push
cs
cs
jb
enter
xchg
cmps
mov
out
fst
stos
mov
scas
repz
pop
and
ror
test
arpl
xor
sar
aaa
or
dec
lods
push
fcomip
pop
aad
inc
inc
lea
(bad)
neg
xor
mov
pop
cmp
fidivr
scas
mov
dec
mov
push
cli
mov
pusha
jmp
dec
xchg
dec
jg
lahf
sbb
mov
adc
aaa
mov
dec
pop
xlat
jecxz
popa
mov
cld
cmp
dec
xchg
cmp
or
fwait
inc
scas
pop
mov
push
ja
not
hlt
sub
or
add
or
push
cdq
std
mov
jmp
mov
sbb
fbstp
pop
retf
cmp
add
aaa
add
cmp
push
cs
jecxz
dec
int3
fidivr
cmp
leave
dec
loope
sub
mov
test
scas
push
ss
in
stos
mov
sbb
cld
dec
ins
and
xlat
mov
push
fdiv
pop
or
ja
mov
(bad)
xor
jne
retf
push
xchg
mov
push
cmp
in
je
push
dec
or
mov
int
jp
ret
or
lods
add
dec
dec
jg
(bad)
jb
outs
in
call
and
ds
inc
ret
(bad)
ret
jnp
call
and
out
icebp
add
test
lock
inc
sub
shl
aam
movs
mul
je
out
(bad)
xchg
mov
icebp
push
or
xor
cmp
and
xchg
push
test
xor
cmps
mov
idiv
pop
mov
ror
dec
call
lock
inc
ins
add
dec
or
sti
mov
mov
xchg
ret
sbb
and
pusha
adc
sbb
stos
ror
pop
inc
mov
jp
cmc
fnsave
loope
loop
inc
cmp
mov
pop
jp
mov
shl
xor
add
pop
int3
and
gs
xlat
call
retf
es
xor
push
pop
inc
ja
add
imul
arpl
or
mov
sub
dec
mov
shr
popa
or
xchg
mov
es
sar
mov
xlat
test
repz
sbb
cmps
fcomp
mov
ss
xchg
cmp
data16
iret
cmp
dec
xor
imul
jns
adc
push
test
aaa
jmp
dec
ins
daa
xchg
mov
sub
ret
rol
push
jbe
xchg
call
cmp
repz
and
cmp
stc
ins
aas
ss
ds
and
push
sub
outs
cmps
cmp
int3
inc
or
cmp
in
xrelease
xchg
test
xchg
pop
push
clc
test
xor
add
dec
(bad)
mov
dec
mov
and
and
mov
(bad)
iret
(bad)
fwait
cwde
ret
mov
es
lock
mov
cmp
clc
pop
cmps
dec
sbb
lods
mov
and
xchg
std
sub
pop
gs
jmp
xchg
pop
adc
adc
add
das
push
aaa
lods
push
in
test
icebp
aaa
adc
pop
adc
or
imul
jmp
adc
call
out
jle
mov
xlat
add
ret
mov
je
inc
mov
(bad)
push
ret
lea
or
xchg
fidivr
fwait
clc
shl
or
mov
call
sahf
pop
push
and
clc
mov
inc
shl
add
clc
mov
cli
mov
(bad)
(bad)
sbb
or
sub
aam
jae
cmc
(bad)
inc
jg
jbe
cs
xchg
lahf
cdq
imul
push
push
jno
es
and
into
int3
xchg
not
sbb
cwde
push
fcomp
int3
pop
mov
imul
shrd
neg
lock
(bad)
mov
pushf
aad
call
pusha
xchg
or
out
pop
clc
pop
cmp
sbb
and
xchg
test
(bad)
jmp
nop
xchg
addr16
addr16
push
movs
adc
push
push
xchg
mov
outs
les
pop
test
mov
add
fistp
jb
pop
arpl
fld
mov
pop
arpl
cdq
ins
sbb
sbb
xor
mov
or
push
hlt
dec
data16
push
stc
jge
push
shl
add
mov
mov
mov
test
adc
xchg
ret
fdiv
pop
cmovge
jmp
jns
shl
jmp
lods
dec
cdq
sub
and
loopne
mov
(bad)
adc
jge
dec
xchg
jp
rcr
iret
call
das
adc
repnz
retf
mov
jle
push
pop
out
scas
add
movs
xchg
add
hlt
mov
mov
fst
ficomp
aaa
mov
in
or
int3
add
mov
or
sub
ins
jne
(bad)
shl
test
pop
push
popf
lds
dec
mov
arpl
adc
cmp
dec
das
dec
pushf
xor
mov
(bad)
fcom
outs
pop
leave
aaa
das
int
adc
jecxz
pop
cmp
push
pop
in
cmp
rcr
inc
mov
push
xchg
shr
arpl
dec
clc
pop
nop
pop
cmp
cs
dec
or
mov
fnsave
jb
mov
pop
rcr
dec
and
sub
or
pop
sbb
sbb
inc
inc
and
mov
sub
retf
add
ins
mov
xchg
pop
js
enter
js
xchg
in
jae
test
je
add
ja
jecxz
xchg
push
inc
ret
sbb
lahf
sub
sbb
test
mov
sahf
mov
jp
add
mov
retf
or
rcr
mov
jp
retf
mov
(bad)
jo
push
mov
sbb
leave
jne
iret
pusha
shl
mov
test
mov
mov
fld
dec
dec
(bad)
mov
and
cli
jb
out
add
repz
aad
cmp
out
fidivr
xchg
shl
push
ror
inc
add
pushf
sbb
lods
mov
out
lahf
ficom
add
stc
mov
sub
bound
mov
lahf
sub
and
ret
cld
nop
nop
repnz
int
fdivr
inc
push
mov
mov
push
cmps
sub
mov
adc
scas
fisttp
int3
dec
or
pop
inc
test
add
ret
push
js
sbb
in
mov
push
sbb
adc
and
clc
mov
cmp
test
jns
stc
out
js
pop
mov
je
es
leave
outs
mov
in
lds
lock
cmps
(bad)
xchg
cmp
sub
nop
mov
mov
test
adc
xchg
cmp
jno
sbb
mov
data16
mov
cmp
push
cmp
test
ret
in
add
int
hlt
mov
pop
test
jle
sbb
imul
int
nop
mov
gs
mov
sbb
add
test
mov
int3
xor
xlat
in
ror
sub
cmp
mov
fnstenv
pop
lds
push
inc
gs
aad
xchg
loopne
retf
ret
mov
sar
mov
mov
(bad)
imul
ds
push
movs
repz
push
cdq
cld
pop
ficomp
and
sub
shr
shl
cli
inc
pop
xor
pop
push
dec
adc
inc
leave
pop
mov
push
mov
jmp
retf
retf
fiadd
test
in
sub
jle
jne
retf
ss
in
in
mov
jge
mov
lea
and
inc
mov
push
dec
call
cmps
inc
fist
xchg
outs
inc
imul
ins
cmp
inc
call
mov
pop
sbb
push
cwde
scas
aam
int3
fst
mov
jl
fisub
sub
pop
lea
add
pusha
fidivr
movq
dec
test
dec
(bad)
dec
jl
cmp
fdiv
mov
push
sar
in
in
aad
scas
(bad)
jl
ret
sar
fdiv
push
nop
jmp
fdivr
dec
dec
pop
jne
mov
cmp
jnp
out
into
sub
fldcw
retf
push
mov
(bad)
pop
or
pop
dec
dec
repnz
jne
and
das
scas
inc
mov
inc
inc
sub
pop
adc
clc
inc
test
daa
scas
inc
adc
fdiv
out
fidivr
mov
inc
xor
add
ffree
xchg
jle
repnz
cmc
dec
sbb
push
pop
xchg
mov
mov
popa
out
gs
push
add
jo
cmp
cmp
push
or
mov
rol
mov
and
or
fnstsw
sti
(bad)
sbb
shl
cdq
mov
and
out
push
test
jns
inc
aas
fadd
pop
sar
(bad)
xchg
addr16
xor
adc
sahf
jo
or
fldcw
jmp
lods
mov
mov
sbb
sbb
jnp
arpl
dec
clc
pop
fild
cmp
jp
xor
push
in
and
pop
fidiv
in
mov
add
xchg
add
xchg
pop
adc
pop
mov
in
xor
mov
add
div
mov
mul
call
fwait
mov
mov
sbb
test
mov
out
aam
mov
ja
mov
dec
inc
or
cmp
rcl
pop
(bad)
outs
in
mov
xor
in
fist
(bad)
pop
hlt
mov
pop
out
inc
fbld
lods
clc
test
xchg
mov
and
call
jmp
test
pop
ret
xor
lea
xor
lds
mov
mov
or
sbb
mov
or
sub
or
out
fwait
adc
loopne
cmp
sti
sti
mov
sbb
outs
(bad)
mov
mov
test
out
jae
out
xlat
push
xor
push
add
adc
aad
mov
xor
cmp
imul
pop
adc
retf
mov
dec
lock
sar
pop
and
adc
sub
mov
out
scas
mov
stos
fcom
aaa
and
mov
or
jae
push
(bad)
out
out
jp
cmp
push
add
cmp
fsub
lahf
push
arpl
fcmovne
je
push
lahf
sub
cmc
pop
inc
call
xchg
jecxz
xor
jge
xchg
data16
pop
sbb
out
mov
cmp
mov
ja
jp
ins
or
int
ror
iret
xor
and
in
push
mov
jae
dec
sbb
adc
mov
adc
mov
out
mov
push
cmp
scas
and
pop
xor
pop
outs
sub
in
jle
(bad)
and
mov
mov
fs
xor
dec
mov
(bad)
xor
xchg
sub
shl
mov
dec
loop
adc
inc
cmps
mov
sub
adc
out
sti
out
retf
dec
sahf
mov
pop
sar
and
fst
pop
push
sub
call
push
ds
adc
xchg
cld
xchg
(bad)
(bad)
or
jae
xchg
push
in
sbb
mov
xchg
outs
xchg
pop
rcr
enter
xor
cmp
fidiv
sar
movs
pop
std
add
xchg
adc
int
xor
(bad)
jo
xor
in
call
dec
and
mov
pusha
js
push
xor
(bad)
lock
xor
mov
mov
out
sbb
cli
icebp
jl
int
cdq
mov
sub
adc
(bad)
xchg
dec
in
mov
fild
les
ja
scas
call
add
jns
(bad)
xchg
mov
ins
mov
loope
adc
mov
fwait
jbe
mov
stos
adc
(bad)
pop
mov
mov
xor
into
jo
sub
xor
add
dec
add
or
xor
outs
jns
sbb
stc
(bad)
sbb
jl
cmp
or
mov
mov
shl
sbb
cmps
mov
icebp
rcl
div
ror
jg
and
mov
mov
wrmsr
xlat
and
jecxz
jecxz
adc
dec
je
pop
js
xchg
fdivrp
or
clc
pop
xor
adc
cmp
push
cmp
cmp
out
fwait
sahf
push
or
xchg
mov
jecxz
data16
sub
aaa
mov
jmp
xchg
sar
or
cmp
xor
popa
push
data16
mov
outs
pop
inc
repnz
adc
mov
push
hlt
jae
popa
es
mov
push
cwde
adc
dec
mov
(bad)
fld
sbb
clc
mov
pusha
test
pop
jae
jns
retf
add
cmc
inc
xchg
test
lds
lds
push
ins
dec
adc
sar
sbb
out
fcomp
pop
xchg
fsubr
stos
in
repz
sbb
jmp
dec
xchg
cmc
sbb
repnz
adc
jo
je
push
lock
mov
xchg
cmp
push
out
js
rcr
test
sub
push
adc
xor
adc
int
rol
pop
nop
mov
and
das
mov
inc
ror
movs
shr
test
test
aaa
mov
and
sub
in
xchg
xchg
dec
mov
fist
scas
xchg
repnz
mov
fild
push
pop
jmp
xor
dec
cdq
cmp
loop
in
mov
pop
mov
fiadd
sub
cmp
out
cmps
mov
std
xchg
xchg
(bad)
scas
aaa
daa
fadd
adc
repz
add
aad
xor
cs
lods
add
movs
repnz
shr
xchg
jl
test
jge
fst
mov
mov
and
test
pavgw
ds
push
mov
sub
pop
scas
jmp
cmp
test
stc
imul
mov
mov
test
add
pop
cmp
sbb
js
add
cmps
(bad)
outs
fldcw
dec
xchg
mov
push
in
mov
dec
sbb
sbb
fidivr
dec
scas
xor
xchg
pop
add
sbb
mov
rol
loope
or
outs
cwde
outs
loope
mov
inc
jno
sti
repz
pop
sar
ja
inc
xchg
sbb
push
and
(bad)
and
nop
sub
cmps
mov
cmp
adc
imul
adc
fdiv
(bad)
fxch
jbe
mov
sar
add
cmp
stc
cwde
mov
xchg
(bad)
cmp
inc
mov
jmp
xchg
add
test
imul
into
(bad)
int
repz
pop
cmc
cli
mov
into
push
in
retf
inc
or
hlt
cmp
sar
jno
icebp
sbb
pusha
jb
fist
cli
xor
xchg
sar
aam
call
mov
mov
movs
sbb
cdq
mov
ja
adc
mov
xchg
jge
push
adc
shl
or
adc
shl
mov
xor
jbe
sbb
icebp
and
dec
movs
(bad)
xchg
fidivr
fs
test
dec
mov
push
fist
movs
pop
imul
sbb
pop
inc
xchg
mov
(bad)
and
dec
jecxz
inc
xor
pop
pop
xchg
mov
mov
shl
sbb
jle
and
cmps
sbb
ret
out
xchg
(bad)
adc
call
sbb
or
loopne
arpl
fldlg2
div
pop
mov
(bad)
shl
movs
cmc
xchg
das
or
mov
dec
stc
test
adc
test
(bad)
pop
outs
call
push
int
mov
or
ret
add
vmovsd
push
in
inc
push
lods
add
inc
cmps
lds
dec
data16
cdq
add
stos
into
sub
ins
aas
in
cmps
lods
pmulhw
xchg
(bad)
loop
test
push
mov
in
scas
mov
test
cmps
sbb
ret
mov
in
int
shr
adc
shl
pop
pop
inc
les
mov
pop
mov
mov
and
out
pop
sti
outs
pop
add
mov
xchg
shl
imul
jmp
adc
jbe
jb
dec
cwde
adc
xor
jp
jmp
test
pop
retf
jmp
out
scas
fs
inc
les
mov
shr
adc
ficom
stc
int
ror
xor
add
lahf
push
fmul
mov
mov
mov
fidiv
and
adc
mov
test
nop
xchg
xor
cmp
popa
outs
in
xor
cmps
jne
xor
adc
loope
sbb
inc
movs
sbb
std
cmp
sbb
lods
sub
shr
mov
(bad)
add
stc
or
xlat
test
add
es
call
xchg
jp
stc
xchg
mov
shr
mov
add
in
aad
jo
fcmovne
cmp
and
push
cli
pop
xchg
cdq
outs
add
lods
xchg
jg
xor
push
jl
popa
fsubr
pop
imul
xor
pop
inc
push
aam
cld
jns
jmp
and
jbe
sub
xchg
push
movs
or
aad
adc
outs
in
ret
stos
retf
add
sbb
std
stos
js
add
mov
ins
out
shl
adc
mov
sti
adc
loopne
pop
aad
mov
and
sbb
fdivr
cmps
mov
jns
mov
fwait
ret
xor
xor
jae
out
(bad)
out
xor
ss
jae
jbe
cmp
jge
outs
pop
and
pop
fadd
repnz
xchg
pop
std
out
clc
sbb
dec
mov
push
in
mov
inc
and
das
pop
xor
push
jmp
call
jmp
or
test
nop
xor
test
(bad)
(bad)
inc
mov
pop
shl
mov
sbb
ss
sub
push
adc
pushf
cmp
mov
jl
cmps
dec
pop
mov
pop
dec
(bad)
pop
cmps
and
sub
and
call
scas
ja
lock
and
jg
mov
call
clc
test
lock
mov
icebp
push
ror
mov
or
(bad)
pop
inc
stos
jnp
adc
push
xchg
aam
je
aaa
les
int
and
ret
ss
cmp
mov
jg
enter
(bad)
jmp
mov
mov
pop
and
test
adc
jbe
dec
jno
pushf
add
cmp
mov
push
mov
out
fild
and
cs
mov
shr
pop
inc
adc
push
sub
pop
mov
mov
inc
xchg
pop
pop
or
in
loope
(bad)
out
repnz
in
lock
inc
dec
inc
imul
pop
es
xchg
or
outs
push
adc
xchg
imul
cmps
add
mov
outs
fld
test
fbstp
mov
cs
aad
inc
xor
in
dec
push
mov
jmp
in
push
push
scas
jg
js
ins
dec
jns
sbb
xor
rcl
sub
or
xor
js
pop
rol
repz
psubusb
es
ja
arpl
(bad)
idiv
and
push
nop
push
adc
fdivr
sub
or
pop
dec
dec
pop
push
mov
sbb
mov
push
jecxz
jmp
inc
jmp
test
jo
addr16
jb
dec
int3
mov
sbb
daa
inc
test
push
test
aad
xchg
pop
leave
sub
xchg
int
addr16
adc
rcl
add
adc
iret
or
mov
das
aas
inc
add
cdq
cmps
jmp
repnz
jle
mov
jnp
ss
jbe
shl
in
mov
gs
fs
xlat
fist
mov
push
add
push
cmps
add
sub
ds
mov
pusha
(bad)
cmp
push
xor
shl
int3
out
clc
lods
call
pop
pop
and
jp
sbb
cmp
adc
jl
xlat
cmp
mov
gs
push
popf
mov
or
inc
mov
fistp
push
mov
repnz
push
add
adc
lahf
inc
pop
popa
pop
stc
dec
and
dec
icebp
push
cmp
mov
stc
icebp
and
in
int3
jecxz
lock
xchg
inc
pinsrw
push
addr16
xchg
pop
js
mov
mov
cmp
or
sub
lock
ja
mov
lea
cmps
dec
or
loopne
pop
mov
dec
fcom
(bad)
mov
pop
ds
loop
out
(bad)
icebp
pop
pop
gs
inc
into
ret
mov
jge
fbld
sub
out
lods
mov
in
out
pop
(bad)
adc
lods
xor
clc
inc
dec
mov
fwait
ret
fwait
jp
loop
jmp
mov
loopne
arpl
repnz
outs
in
or
lahf
sub
pop
mov
aaa
cmp
lods
cmp
xchg
iret
mov
ins
dec
cdq
sbb
gs
pop
sub
loop
(bad)
sub
push
mov
jbe
jae
jp
mov
push
mov
dec
shr
addr16
jbe
adc
stc
clc
retf
mov
and
fnstsw
push
cmp
or
mov
and
pop
fdiv
xor
fist
inc
leave
addr16
fdivp
push
test
jp
in
xor
adc
adc
xor
dec
cmps
cmp
mov
and
icebp
(bad)
push
sub
or
and
mov
jb
jb
ds
jl
adc
mov
push
inc
and
popa
shr
lock
imul
inc
mov
sbb
or
and
jmp
sbb
dec
and
movs
inc
mov
xor
add
js
xchg
xchg
data16
test
ja
jno
jmp
stos
xor
ret
out
cmp
aaa
xor
add
ret
mov
je
dec
aaa
jnp
fisttp
or
adc
push
xchg
jge
movs
mov
or
inc
cdq
adc
inc
sub
jmp
cmp
or
mov
fs
pop
jnp
and
imul
cld
add
cmp
pop
mov
jo
sbb
dec
and
jecxz
jns
int3
xchg
pop
push
xchg
dec
cmp
clc
out
mov
pusha
and
fidivr
xor
mov
int
add
mov
je
sub
call
mov
and
stos
cmps
enter
leave
cmp
daa
xor
in
das
mov
idiv
mov
and
daa
or
ins
mov
shr
jbe
jno
leave
push
lahf
xor
jnp
aam
add
outs
inc
push
mov
popa
addr16
inc
pop
adc
jmp
pop
add
out
div
lods
(bad)
fcomp
loope
test
pop
bound
push
add
cmps
mov
or
jmp
nop
bound
xlat
mov
call
and
adc
dec
std
and
daa
jmp
stc
inc
or
repnz
dec
dec
xor
pushf
ins
gs
cli
dec
repnz
ins
mov
maskmovq
(bad)
or
mov
fadd
in
adc
aad
sub
pushf
nop
jne
xchg
scas
cs
outs
add
and
cmp
jnp
ds
sub
xor
lea
cwde
sub
leave
test
sub
mov
cs
rcl
outs
pop
pop
(bad)
mov
out
mov
xchg
arpl
stos
or
pop
ja
movs
xchg
mov
je
xchg
xchg
sub
fiadd
xchg
ret
or
es
mov
push
fisttp
cld
and
inc
pop
fcomp
dec
jae
mov
inc
lods
dec
sbb
out
mov
mov
xor
adc
sbb
push
test
mov
jge
scas
sbb
(bad)
retf
push
xor
and
js
cmp
add
sahf
or
xor
mov
int3
sar
retf
pop
daa
jno
daa
add
inc
and
test
sub
dec
pop
cmp
add
fcomp
xchg
ret
ret
mov
mov
js
dec
out
enter
and
push
dec
xchg
push
push
inc
in
mov
leave
icebp
mov
xchg
gs
push
popa
addr16
aas
sub
and
sub
and
xchg
pop
add
repz
sar
(bad)
sbb
fbld
xor
popa
push
xchg
adc
mov
jne
sub
in
sub
inc
push
add
(bad)
fsub
xor
add
arpl
retf
sub
ja
fld
mov
mov
dec
cmps
retf
in
cmp
xchg
sbb
sbb
inc
xchg
movs
sub
sub
stos
ret
mov
xchg
(bad)
idiv
xchg
add
mov
fist
out
jae
popa
fwait
stos
shr
stos
js
xor
lea
in
mov
cmp
out
fiadd
jle
les
dec
loopne
add
adc
pop
xor
ss
rol
mov
jg
add
pop
aad
mov
sbb
inc
call
inc
xchg
movs
call
jmp
mov
xchg
mov
cld
pop
(bad)
ds
out
outs
push
shl
pop
aad
out
pop
lds
stc
mov
inc
cmp
lds
or
xchg
mov
sar
in
pop
mov
or
movs
sti
aaa
lods
cmps
out
push
jmp
push
cld
int
(bad)
fnstsw
pop
mov
repz
jae
adc
in
aad
hlt
or
sub
and
test
jp
scas
sbb
push
mov
sbb
push
adc
in
sub
adc
(bad)
adc
fwait
cwde
fwait
push
(bad)
cld
xchg
mov
or
cmp
dec
in
dec
xor
out
cdq
cli
push
lahf
leave
(bad)
hlt
ror
mov
shl
dec
aad
cmp
scas
les
outs
sub
fcom
in
jae
into
xchg
sub
xchg
add
jno
loop
inc
pop
mov
cmc
xor
daa
lods
sub
test
mov
outs
movs
arpl
mov
test
cdq
in
push
push
or
test
and
sub
sbb
sbb
ficomp
xchg
loopne
je
dec
lods
xor
out
pop
loope
mov
out
cld
(bad)
xor
xchg
aad
mov
sub
cdq
dec
cmp
pop
stc
pop
ins
sub
popa
ffree
loopne
loopne
in
sbb
retf
ins
rcr
add
data16
rol
rep
jo
push
loope
mov
sti
je
es
rcr
scas
call
dec
sbb
sbb
adc
adc
mov
aam
rcl
jmp
aas
mov
or
mov
jmp
int
cmp
dec
and
aam
popa
jno
aaa
iret
rcl
mov
aam
hlt
adc
jo
push
imul
add
jmp
retf
mov
in
scas
dec
xchg
gs
outs
xor
inc
iret
mov
fwait
repnz
repnz
lock
psrld
in
test
gs
adc
mov
movs
fs
fwait
popa
dec
mov
push
xor
sub
mov
fistp
jmp
in
(bad)
sbb
in
sub
xchg
fsubp
adc
or
jno
cmps
adc
out
les
stc
pop
jnp
daa
lea
nop
add
xchg
je
inc
pop
gs
sub
and
pop
xchg
inc
or
push
dec
dec
dec
sbb
sbb
nop
push
ja
adc
mov
icebp
hlt
jmp
in
data16
sahf
push
or
add
push
lahf
sub
dec
aas
dec
neg
pushf
(bad)
pop
int
hlt
push
test
ja
cmp
cmp
jns
repz
stc
cld
dec
mov
test
and
pop
dec
push
retf
popf
sbb
icebp
ret
lahf
mov
inc
aam
clc
cli
push
cli
inc
pop
xchg
mov
push
cmc
(bad)
(bad)
cmp
dec
retf
daa
mov
push
push
test
sbb
pop
inc
outs
sbb
dec
mov
shr
xchg
jmp
std
stos
(bad)
shl
rcr
sahf
push
pop
movs
or
inc
mov
inc
jge
add
arpl
mov
out
jmp
pop
jo
fisubr
ins
mov
test
adc
clc
adc
xor
mov
jb
retf
mov
inc
jg
sub
sbb
repz
js
loopne
(bad)
int3
push
or
pop
int3
dec
push
xor
cmp
mov
pop
and
test
or
fsub
mov
and
ins
cmp
pop
mov
jecxz
movs
jno
fcomi
xor
or
mov
mov
aad
in
(bad)
jne
sub
ins
outs
sub
stc
lds
iret
retf
daa
outs
push
cdq
aad
xchg
lock
outs
pop
in
cmp
jmp
mov
adc
add
test
daa
sbb
rcl
mov
or
rcr
test
ss
jnp
ins
ja
scas
leave
ret
fstp
nop
push
sub
shr
fnstcw
jle
loop
mov
xor
aaa
xor
mov
and
fucomip
sti
and
cmp
adc
and
(bad)
jge
xor
fs
push
(bad)
fidivr
xchg
or
jle
out
leave
call
test
retf
mov
sub
adc
pushf
pop
or
mov
cmps
loop
(bad)
pop
aaa
movs
or
and
mov
mov
sbb
loope
fcomp
sbb
dec
ret
jnp
pushf
imul
cld
jae
dec
lahf
(bad)
mov
ja
mov
mov
fistp
cmp
inc
xchg
jns
cmp
and
xchg
retf
inc
adc
pop
adc
lods
cmp
addr16
push
and
xor
push
xchg
mov
lds
ds
inc
jp
lea
inc
pop
icebp
mov
cmps
imul
sbb
popa
repz
cmps
push
cmc
or
scas
push
jnp
mov
add
mov
xlat
jp
cmp
in
mov
xchg
xchg
and
(bad)
in
lea
xchg
mov
xor
icebp
into
sbb
add
and
mov
mov
fcomi
retf
sbb
cld
stos
inc
jns
addr16
xchg
out
and
retf
popa
xchg
jne
(bad)
pop
hlt
jo
lock
stc
cld
ja
xor
sbb
mov
xchg
loopne
repz
push
xchg
out
daa
xchg
dec
in
in
jl
test
aaa
and
dec
or
ret
xor
and
ja
cmp
or
ds
and
mov
div
mov
dec
xor
outs
cld
arpl
xchg
mov
shr
xlat
aas
fld
mov
ins
enter
fwait
mov
out
iret
jecxz
add
test
shufps
out
test
and
and
in
xchg
mov
shr
lock
repnz
xchg
scas
push
popa
outs
popa
ins
les
call
adc
xchg
jmp
or
fs
aam
pop
movs
mov
dec
fwait
jns
inc
std
mov
cmp
rol
aam
loope
mov
jp
scas
jo
pop
aam
scas
out
dec
aaa
or
sbb
shl
cs
ds
clc
repnz
xor
adc
sub
in
ficomp
(bad)
pop
pop
int
push
push
cmp
jg
and
aad
xchg
pop
pop
pop
int3
sbb
(bad)
out
sar
push
mov
mov
mov
xor
cmp
cwde
cwde
or
stos
xlat
cs
fbld
push
xchg
popa
add
pop
repnz
sub
jno
out
(bad)
fstp
ins
pop
xchg
mov
jnp
mov
jmp
push
jecxz
sbb
mov
lea
inc
aaa
in
(bad)
out
aas
imul
cld
lods
xchg
jae
out
shl
push
sbb
rol
sbb
push
int3
imul
cmp
retf
in
mov
ror
sub
(bad)
pop
adc
outs
mov
sub
jns
dec
ins
inc
(bad)
mov
xchg
mov
mov
jae
push
int3
add
add
stos
fsub
nop
jmp
ins
jecxz
aaa
(bad)
shl
imul
xchg
iret
(bad)
je
lea
jno
dec
or
cmps
popa
(bad)
cdq
sub
rol
mov
mov
fst
loop
mov
lea
fcmovnbe
call
mov
jb
outs
xchg
pop
pop
jmp
es
xchg
ds
cmp
push
fsub
mov
xlat
cmp
add
fiadd
pop
sbb
adc
push
xchg
fstp
pusha
mov
xor
cli
mov
dec
fcomi
or
(bad)
adc
data16
or
xor
cmp
push
adc
jne
div
push
popf
cli
pop
mov
out
mov
jp
dec
fdiv
movs
or
sbb
mov
pop
or
retf
cli
mov
add
(bad)
adc
fbstp
cmp
ss
jnp
or
sbb
sbb
(bad)
jg
test
cmp
mov
pusha
pushf
pushf
ds
call
pop
adc
loope
adc
adc
add
push
xchg
loopne
mov
fwait
rcr
fnstcw
(bad)
cmp
mov
sti
mov
test
mov
sbb
sub
xchg
and
or
pop
int3
mov
pop
not
cmp
ins
cmp
or
xor
movs
(bad)
cmp
test
pop
imul
mov
(bad)
popf
mov
or
dec
enter
psubusw
jae
or
adc
jl
ss
rol
mov
mov
inc
cmp
fwait
sub
ss
fldz
scas
stos
les
xchg
mov
or
(bad)
push
ret
hlt
sub
xchg
arpl
fcom
hlt
mov
jp
cmps
add
xlat
enter
repnz
jl
sti
pop
sub
adc
loop
xchg
fwait
adc
and
pushf
pop
test
mov
cdq
repz
xchg
jle
inc
retf
jno
scas
imul
push
cmps
rol
mov
dec
addr16
sbb
jle
fld
pop
mov
mov
std
bound
stos
dec
faddp
out
out
stc
push
shr
jnp
push
and
or
jecxz
aaa
fiadd
ret
pop
leave
std
aas
add
outs
adc
xor
xchg
ret
push
out
fdiv
sub
mov
xor
mov
inc
(bad)
in
gs
test
push
movs
cmc
xchg
dec
stos
pmulhrw
mov
mov
cmp
gs
fnsave
sub
aam
out
ds
dec
lock
and
cmps
xor
mov
aas
shr
ins
loop
adc
xchg
leave
dec
std
lea
xchg
shl
aaa
mov
sbb
mov
mov
std
xchg
and
or
cmp
aaa
cmp
push
sub
inc
imul
fcom
mov
push
sub
in
out
and
cmp
xor
ins
gs
inc
les
(bad)
clc
mov
xchg
xor
fwait
add
mov
mov
cmp
pop
cmps
mov
bnd
and
scas
sbb
dec
popa
cmp
sar
sub
sar
ret
push
fisub
inc
adc
dec
shl
lods
imul
or
push
ss
in
dec
mov
jmp
xor
cmp
xchg
adc
movs
repnz
pop
lock
cld
sbb
jbe
rol
mov
xlat
jb
mov
xchg
mov
cmp
inc
call
mov
paddq
push
pop
xchg
test
sub
and
imul
gs
mov
mov
js
loope
xchg
add
xchg
scas
xchg
test
mov
nop
mov
inc
cmp
xor
adc
cmp
cwde
aam
push
(bad)
lods
pop
mov
outs
lods
retf
ficom
mov
sub
jae
inc
mov
pop
dec
or
add
lahf
enter
and
cmps
adc
mov
lods
idiv
je
push
jno
sub
mov
or
add
cmp
mov
pop
movs
fild
cmp
or
stc
mov
cmp
mov
push
sahf
push
xchg
and
mov
aas
mov
sub
jns
(bad)
mov
add
inc
je
sub
imul
imul
and
and
push
cli
sub
sahf
mov
pop
mov
mov
sub
mov
mov
popf
aas
ds
sbb
push
pusha
cmp
jle
loope
inc
or
cmp
dec
(bad)
int
jg
dec
sti
fcmovu
call
pop
inc
push
push
into
outs
fnstsw
mov
jl
sub
xchg
fadd
das
lock
cmp
xchg
cwde
(bad)
(bad)
pop
jg
js
cmp
mov
mov
inc
mov
push
and
and
sub
sbb
loope
js
loopne
or
mov
les
push
inc
add
cs
sbb
jg
inc
pop
fld
sub
ins
cmp
dec
mov
test
dec
adc
mov
sbb
dec
add
mov
call
jbe
sbb
je
sub
push
test
mul
mov
adc
aad
nop
retf
pop
or
adc
nop
lds
movs
shl
loopne
rcr
test
fwait
aad
in
cmp
cmc
sbb
push
dec
jg
ret
hlt
out
icebp
arpl
pop
fistp
mov
call
movs
inc
xchg
cs
movs
add
scas
adc
call
push
and
mov
xor
xor
(bad)
push
(bad)
push
add
fidiv
or
popa
cli
dec
ins
lods
and
cli
cwde
js
jno
fs
mov
dec
arpl
ret
pop
mov
ins
fadd
mov
fwait
push
and
sbb
cmp
xor
pop
(bad)
movs
mov
hlt
mov
mov
retf
push
mov
jnp
dec
dec
das
dec
je
xchg
(bad)
pop
inc
shr
jl
mov
arpl
pop
cmc
les
(bad)
out
mov
adc
mov
cdq
pop
and
mov
movs
pop
test
jne
call
or
iret
call
fbstp
ins
out
mov
mov
in
xchg
mov
loop
jns
std
fbstp
sbb
js
nop
lods
popa
bound
sahf
adc
sub
dec
xchg
sub
mov
mov
push
ja
dec
jne
push
mov
mov
cmp
ja
into
iret
inc
cmp
ret
cmp
fst
pusha
mul
mov
push
adc
pop
sar
xor
out
or
mov
es
rol
rcr
xor
(bad)
mov
fadd
(bad)
enter
xor
cmps
mov
cmp
jnp
dec
xlat
mov
pop
jb
mov
retf
out
test
or
fucomp
and
(bad)
lods
scas
adc
mov
push
(bad)
cli
fisubr
cdq
and
icebp
pop
retf
aad
sbb
xor
iret
sbb
test
sti
mov
aad
xlat
gs
ss
and
test
sbb
push
fimul
mov
je
(bad)
mov
xor
jle
ror
cmp
mov
mov
ins
sub
mov
jmp
xchg
sub
les
pushf
or
retf
push
pop
sti
mov
mov
pop
ret
in
jo
mov
pop
jge
shr
in
xlat
cmp
es
jmp
or
(bad)
mov
scas
iret
imul
xchg
aaa
sub
mov
aas
adc
jl
sbb
jmp
lahf
xchg
cmp
fsubr
push
xor
adc
sbb
popa
bound
jno
xchg
mov
jb
dec
mov
gs
cmp
sub
clc
rcl
xor
stos
bound
mov
adc
mov
jb
add
fild
(bad)
pop
pop
aas
and
xor
mov
cdq
stc
inc
and
rcl
jno
adc
jle
sbb
hlt
loope
in
mov
sub
inc
mov
cmp
jl
mov
add
xchg
jmp
add
mov
jb
xor
rcl
xlat
mov
ja
sbb
xor
or
pop
jg
adc
mov
jno
jg
pop
clc
adc
sbb
xor
movs
scas
mov
jl
push
in
xor
adc
dec
jmp
or
frstor
jns
ror
jecxz
add
cli
sbb
hlt
fistp
mov
iret
cmp
cli
mov
xor
pop
sbb
xchg
add
and
std
add
out
add
or
mov
jne
imul
mov
aas
dec
push
test
mov
pop
dec
sub
or
enter
pop
inc
invd
popa
movs
jmp
mov
xchg
int
sub
inc
push
cmp
and
arpl
fs
or
xchg
scas
into
jb
cmp
(bad)
fdivr
jmp
jno
imul
mov
inc
mov
outs
xchg
push
jge
sub
cwde
mov
mov
stos
test
shl
pop
add
fcmovu
xor
repnz
addr16
cmps
add
and
push
cmp
ins
xchg
cmovo
sti
stos
ror
inc
xchg
pop
lahf
mov
fild
retf
xor
in
ds
add
prefetch
or
retf
xchg
ss
lods
push
repnz
outs
aas
sbb
lods
push
or
dec
or
nop
or
mov
mov
sub
push
in
pusha
inc
imul
mov
push
sub
xor
test
ja
sbb
cmps
push
clc
mov
xchg
sbb
int3
and
popa
xchg
sahf
xor
sbb
shl
cmp
test
push
jl
scas
jle
lea
adc
pushf
aad
or
mov
icebp
push
mov
xor
imul
and
xchg
js
test
data16
shr
cmps
and
push
push
lea
cmp
fwait
bnd
adc
gs
shr
jg
sahf
mov
inc
imul
and
add
jo
xor
sbb
or
jb
mov
lods
pop
mov
cmp
call
and
add
(bad)
or
pop
inc
adc
arpl
es
mov
fisubr
mov
leave
jmp
adc
jbe
cmp
sub
popf
xchg
mul
xor
rol
pushw
and
xchg
(bad)
addr16
clc
ins
push
pop
fsubr
jns
mov
test
je
jo
imul
xor
(bad)
dec
push
loopne
test
cli
xchg
imul
xor
inc
test
push
aas
sub
mov
outs
cmp
and
xchg
leave
(bad)
inc
mov
mov
int
sbb
stc
call
jmp
xor
mov
push
add
xchg
jg
cmp
inc
mov
arpl
aaa
jp
inc
xchg
in
pop
xchg
imul
fisttp
addr16
push
adc
add
pop
sbb
jnp
sbb
arpl
xchg
adc
outs
cmp
pop
loope
inc
aas
xchg
add
add
and
add
test
popf
sahf
ja
loopne
mov
adc
mov
ret
addr16
xchg
cmp
fwait
and
xchg
mov
aam
xchg
jmp
mov
int3
call
in
out
sar
xor
cmp
xchg
outs
addr16
mov
inc
mov
(bad)
loopne
pop
std
pop
jns
push
push
cdq
cmp
mov
cmp
adc
lds
mov
pop
add
adc
mov
mov
addr16
mov
adc
adc
mov
loop
add
xchg
push
cdq
jnp
add
xor
popa
and
and
sub
jecxz
and
inc
inc
inc
sub
ret
adc
xor
jg
out
les
out
cmova
cmp
int
cs
push
nop
sub
jmp
pop
cmp
jmp
test
jge
ss
sar
adc
sbb
lds
xchg
jmp
fwait
retf
jo
jno
sbb
test
dec
xor
sti
mov
jge
sbb
call
xor
ja
sub
and
int
push
jge
fisttp
pop
loop
js
sbb
cmc
xchg
mov
stos
test
lds
cwde
das
xchg
test
test
mov
dec
mov
push
aam
add
cmps
shr
inc
(bad)
mov
xchg
mov
jg
shr
cmp
jl
je
(bad)
jg
adc
and
imul
retf
sahf
or
mov
dec
add
xchg
lods
lds
add
dec
pop
dec
leave
mov
fs
inc
movs
rol
mov
hlt
and
jp
jge
cld
fist
dec
mov
pop
ror
pop
mov
dec
mov
sub
xor
scas
push
out
aad
(bad)
aam
jle
(bad)
mov
dec
mov
adc
mov
adc
(bad)
cmps
pop
shr
jg
fs
pop
mov
in
cwde
ficomp
add
ja
retf
adc
mov
into
pop
cmp
mov
dec
pop
retf
xchg
gs
cli
lods
mov
ror
stos
mov
sbb
fwait
scas
stos
stc
add
push
movs
mov
into
push
inc
lahf
loop
push
enter
or
(bad)
cld
fcomp
mov
pop
sar
jns
xchg
outs
je
nop
cmps
push
mov
dec
(bad)
sub
push
(bad)
aad
add
call
mov
in
rol
xchg
or
mov
bound
mov
inc
adc
das
movs
pop
cmp
pop
xchg
into
inc
loope
mov
fimul
inc
imul
or
out
jp
nop
sahf
pop
leave
pop
jnp
mov
stc
push
out
js
sub
js
jecxz
mov
xor
adc
leave
xor
gs
frstor
jb
mov
js
stos
sar
xchg
jno
mov
mov
pop
xlat
mov
int3
jb
dec
into
adc
ds
pushf
outs
dec
mov
aam
call
xlat
mov
fmul
pushf
repz
push
je
or
shl
loope
test
fadd
xchg
call
out
push
xor
push
call
xor
inc
pop
ins
mov
push
sbb
je
sub
jne
pop
xor
enter
inc
mov
(bad)
xchg
add
adc
es
aad
mov
xor
je
fwait
mov
ret
(bad)
add
rcl
cli
je
pop
bound
pop
cmp
jb
or
mov
out
loopne
add
mov
std
mov
es
loopne
je
adc
mov
pop
mov
fist
sbb
(bad)
in
aas
popa
mov
and
sbb
(bad)
in
cmp
pop
movs
sti
(bad)
js
xchg
and
(bad)
jns
movs
mov
or
mov
data16
pop
pop
adc
ror
pop
xchg
inc
add
iret
sbb
mov
jb
adc
mov
pushf
jo
mov
dec
pop
out
cmp
ret
jb
adc
repz
(bad)
jp
js
jp
cmp
inc
gs
inc
push
sbb
add
push
in
iret
fadd
cld
ins
test
mov
mov
js
stos
cmp
arpl
mov
add
leave
cmp
sub
jae
adc
rol
mul
rcl
sub
pop
enter
ret
fwait
mov
add
in
xor
mov
push
inc
mov
xchg
(bad)
cwde
cmp
xchg
dec
imul
push
or
push
push
fs
pop
lods
outs
pop
cmp
sbb
pop
call
or
dec
ins
jnp
and
sub
lahf
mov
movs
mov
fs
js
jle
mov
mov
xchg
push
fs
test
dec
and
cmp
data16
aaa
pop
mul
jb
ret
std
ret
ja
ret
pushf
pushf
pop
outs
jmp
sbb
adc
and
pop
dec
cmc
sub
js
out
icebp
sbb
and
xchg
(bad)
dec
je
pop
mov
jae
(bad)
cmp
sahf
es
test
xchg
scas
jmp
test
inc
pop
mov
xchg
movs
rcr
shr
sar
loopne
es
xchg
jl
mov
mov
sar
cmp
call
add
push
adc
cld
mov
ins
enter
push
or
adc
pop
lahf
mov
out
mov
and
xor
aam
adc
cwde
fcomp
add
cmps
mov
push
push
js
adc
push
dec
fdiv
dec
xchg
and
test
idiv
mov
aam
and
mov
add
sti
pop
jb
lea
mov
cmp
sahf
imul
mov
mov
or
mov
(bad)
es
xor
xor
je
cmps
push
jo
data16
mov
call
shl
icebp
inc
sub
or
(bad)
cmc
pop
jp
lahf
jno
pop
mov
dec
inc
xor
mov
pusha
mov
xchg
ss
call
das
in
sbb
push
dec
sbb
pushf
out
sub
out
out
fs
out
popa
adc
add
sti
mov
cmp
aad
adc
shl
addr16
dec
push
lds
call
sbb
pop
dec
push
sar
pop
xor
mov
cmps
fwait
mov
xchg
push
sub
test
mov
cmc
sub
sub
sbb
dec
and
add
call
adc
pop
sahf
or
mov
mov
outs
stos
pop
sti
mov
sbb
clc
loope
dec
gs
ja
clc
mov
add
lahf
and
pop
pusha
nop
int
mov
lahf
mov
cmps
or
mov
imul
ins
cmp
xor
rol
mov
ffreep
xor
dec
stos
mov
adc
adc
xchg
sbb
pop
cli
and
mov
xchg
mov
imul
mov
push
mov
test
push
out
xor
jns
xlat
bnd
pop
ret
jmp
je
xchg
add
dec
mov
in
xchg
xor
call
sbb
add
mov
cdq
and
mov
adc
cwde
lods
sti
adc
push
int3
mov
and
cmp
cmc
cwde
jb
(bad)
in
shr
clc
out
ja
or
test
jne
(bad)
cdq
cmc
dec
jo
sub
in
outs
mov
inc
pop
pop
lea
or
and
sbb
ja
jl
inc
retf
lock
jmp
mov
sbb
in
mov
retf
sbb
push
sbb
mov
jae
(bad)
out
mov
mov
mov
rol
jmp
jbe
or
mov
das
xchg
inc
inc
push
in
sti
sar
push
outs
(bad)
int3
fmul
enter
push
loop
mov
and
jnp
(bad)
push
int
lock
mov
call
xchg
(bad)
pop
sub
sbb
ret
lods
inc
std
out
out
int3
iret
adc
push
push
jp
xor
pusha
or
add
popa
xlat
mov
mov
test
mov
pusha
daa
pop
mov
xor
je
mov
mov
dec
or
or
stos
lahf
mov
lods
inc
jbe
jg
in
mov
cli
aaa
repz
jnp
stc
icebp
into
jns
test
xlat
ret
out
test
fidivr
imul
out
(bad)
(bad)
push
out
ins
das
stos
test
sub
sbb
sbb
or
mov
mov
cli
push
lods
xchg
mov
add
jp
xchg
aas
sub
in
mov
std
nop
mov
inc
icebp
jo
sahf
sbb
xchg
out
ins
test
inc
xchg
cmp
daa
(bad)
add
push
inc
loope
ins
icebp
dec
or
sti
sub
dec
lock
xchg
ror
cmp
mov
lock
arpl
movs
mov
mov
int
jne
jg
das
imul
mov
inc
xchg
pop
(bad)
loope
jns
daa
mov
ror
int3
xchg
ficom
in
ret
test
add
mov
retf
mov
popf
mov
jne
mov
imul
mul
pop
das
push
mov
js
sub
ins
push
adc
push
lahf
(bad)
out
or
leave
aad
sbb
dec
sbb
int3
jbe
enter
adc
mov
pop
sub
pop
in
sub
xor
pop
lock
arpl
xor
cs
rcl
jae
cli
mov
icebp
inc
inc
sbb
cmps
aad
xor
vpopcntb
in
out
lea
adc
cmp
and
sub
xchg
cmp
lods
xchg
jae
cmp
ret
xchg
arpl
inc
push
cdq
or
adc
pop
and
xor
movs
or
sub
inc
scas
dec
jae
or
(bad)
(bad)
clc
inc
lea
or
test
cmp
push
sar
test
int3
and
dec
mov
jmp
adc
push
mov
dec
js
xlat
jmp
cmps
nop
imul
add
pusha
(bad)
movs
pusha
add
cmp
icebp
mov
(bad)
loope
in
pushw
enter
rcl
jmp
cld
mov
(bad)
pop
jge
std
mov
cmp
jne
je
inc
push
or
xchg
scas
mov
cdq
cmps
adc
dec
fwait
sti
and
lods
fnstenv
jae
add
call
dec
mov
push
dec
in
lock
(bad)
cmp
cs
mov
add
(bad)
and
push
aas
sbb
fwait
mov
or
inc
push
sub
shl
into
push
pop
retf
idiv
adc
test
out
mov
adc
push
retf
call
xor
inc
jp
(bad)
imul
test
mov
and
and
sub
pop
sbb
div
dec
or
sti
dec
or
jb
push
pcmpgtd
iret
rol
jg
clc
shl
add
mov
push
aam
jae
push
xchg
mov
test
pop
arpl
test
dec
inc
jecxz
pop
sub
pop
adc
push
ins
cli
jbe
or
(bad)
cld
ins
aad
les
out
sub
adc
arpl
inc
out
adc
pop
pop
pop
sub
sub
enter
aas
pop
cmc
stos
scas
fsubp
call
sbb
inc
jp
js
cld
jb
iret
rol
push
cld
mov
xchg
and
fwait
add
imul
icebp
stos
mov
xor
fisubr
mov
scas
ja
push
in
mov
ja
dec
adc
int
and
sub
rol
fldcw
cmp
imul
fdivrp
mov
mov
mov
sub
(bad)
jle
jp
add
sub
es
data16
jmp
mov
in
mov
jmp
shl
(bad)
cld
xchg
int3
jno
adc
or
xlat
stos
xor
addr16
mov
jmp
adc
push
mov
test
movs
out
mov
stos
stos
sub
adc
jg
sub
imul
outs
test
sbb
jl
data16
mov
jnp
dec
sub
adc
fwait
dec
or
inc
pop
cmc
pop
xor
bound
int
lods
aam
cmp
addr16
push
adc
lock
repz
aam
outs
arpl
mov
daa
mov
shr
adc
aad
nop
lds
in
ds
call
push
pop
test
mov
mov
mov
push
clc
pop
sbb
dec
mov
out
jg
retf
cmp
mov
push
sbb
and
dec
cdq
test
loopne
shl
imul
ret
add
adc
jno
inc
into
xor
imul
xor
ds
sahf
mov
push
xor
loopne
lahf
clc
mov
retf
xlat
and
test
push
outs
inc
jle
and
xchg
gs
(bad)
pop
xor
js
xchg
adc
test
psubb
out
fucomi
outs
int3
jnp
xchg
aad
cs
sbb
cmp
dec
arpl
hlt
cmps
sub
dec
mov
pusha
loop
xchg
xor
jb
pop
mov
sbb
stc
push
or
outs
cmp
outs
mov
mov
ret
or
fneni(8087
ja
inc
mov
mov
dec
movs
call
int
sahf
je
repz
or
retf
lock
cld
ja
(bad)
pushf
mov
scas
mul
jo
push
push
clc
xor
dec
movs
jne
sbb
pop
cmps
adc
pop
inc
xchg
leave
adc
mov
mov
dec
push
mov
test
xchg
(bad)
movs
inc
in
fld
jae
mov
adc
inc
sub
jo
xlat
sbb
test
cmc
push
mov
add
or
mov
sub
mov
mov
cmp
jno
mov
dec
jmp
and
add
cli
cmp
cmps
mov
mov
mov
add
retf
dec
nop
dec
mov
xchg
pusha
mov
or
mov
cs
popf
fist
mov
ret
pop
push
iret
pusha
sbb
iret
dec
ins
rol
cs
mulps
or
into
jae
push
jl
rcl
dec
mov
push
xlat
sub
adc
neg
inc
hlt
lods
mov
je
repnz
mov
push
cdq
or
sub
pop
in
jge
inc
adc
cmc
cmc
mov
dec
jle
sahf
xor
dec
adc
pop
cmp
and
icebp
xchg
faddp
sahf
in
div
les
jmp
cs
lock
fwait
push
pop
mov
push
push
inc
and
xchg
jmp
push
mov
sbb
ins
shl
sar
test
in
fnstsw
bswap
call
hlt
or
cmp
xor
inc
(bad)
test
fucomi
pusha
pop
imul
cmp
rcl
iret
push
cmovns
(bad)
inc
pop
mov
(bad)
push
mov
jne
cmp
inc
mul
pop
pop
dec
imul
test
push
jmp
cmps
xchg
or
inc
arpl
lods
mov
adc
repz
stos
cmp
setl
lock
in
mov
mov
(bad)
adc
popf
inc
sti
xchg
loopne
pop
adc
lea
retf
xor
lea
aam
and
gs
push
mov
packuswb
pop
loope
mov
mov
pusha
test
pushf
xlat
in
inc
pop
dec
inc
jmp
std
mov
sbb
scas
cs
mov
cwde
fwait
rcl
xchg
cmc
shl
out
aaa
popf
fsubr
loopne
pushf
in
mov
dec
jg
push
push
dec
test
add
dec
cmps
and
sbb
mov
clc
xor
sahf
jns
mov
and
movs
and
fwait
push
xchg
mov
stos
cmps
les
inc
mov
push
data16
mov
mov
imul
jmp
rcr
(bad)
mov
icebp
xchg
mov
cli
fsubr
(bad)
dec
mov
sar
(bad)
(bad)
add
hlt
mov
in
sub
not
mov
neg
repz
cmp
cli
sti
jle
inc
cmp
outs
out
dec
add
or
ret
loopne
clc
addr16
shl
and
mov
add
sti
dec
movs
call
mov
inc
xor
or
adc
and
mov
mov
jmp
loopne
jle
xor
ror
lahf
lahf
es
pop
or
jle
fsubr
sti
mov
jne
mov
fld
xor
jecxz
mov
jle
or
or
cmp
xchg
ja
lds
sub
sub
aam
cmc
test
cmp
sbb
inc
js
in
out
mov
jb
clc
mov
dec
sub
jmp
js
jmp
xchg
mov
mov
out
out
gs
inc
shr
jbe
loope
add
repz
sub
xchg
js
jge
movs
mov
dec
mov
js
dec
lods
daa
iret
cmp
sub
xchg
inc
test
icebp
outs
jo
adc
jmp
ror
das
xchg
sbb
xchg
out
xor
shl
(bad)
sahf
(bad)
out
mov
loope
hlt
stos
adc
push
sbb
sub
call
pop
in
out
jns
cdq
call
xchg
add
xor
cdq
mov
scas
push
stos
leave
adc
pusha
popf
jne
adc
frndint
out
mov
fnstsw
push
das
outs
scas
in
ss
mov
mov
xchg
out
pop
cmp
cmp
mov
xor
mov
sbb
inc
sub
jg
int
xor
out
aas
int
xor
rol
cmps
sbb
inc
cld
in
jecxz
add
and
cmp
mov
icebp
adc
icebp
sub
out
xlat
hlt
cmp
adc
dec
ins
fisub
stc
pushf
sub
sub
or
(bad)
int3
jp
push
xor
push
inc
inc
push
out
mov
call
dec
push
fstp
pop
add
lahf
mov
in
test
sub
outs
cmp
cld
adc
cld
stc
inc
ja
mov
mov
fiadd
xchg
loopne
rol
mov
add
je
push
lea
repnz
adc
xchg
fs
aas
jmp
out
pop
xchg
push
jp
inc
xchg
retf
(bad)
and
cmp
mov
mov
dec
sub
lods
sbb
call
inc
xor
dec
cmps
cmps
bound
push
xchg
nop
loopne
or
dec
mov
mov
pop
xlat
gs
xchg
into
pushf
sbb
int3
mov
out
iret
fdivr
(bad)
sub
push
mov
cli
pop
imul
dec
daa
leave
or
and
lock
sar
nop
cmp
rcr
mov
out
push
repz
jb
es
cmp
fisubr
daa
inc
je
and
loopne
pop
xchg
add
pop
sub
mov
loop
daa
mov
push
fdivr
rcr
sbb
push
(bad)
mov
call
pop
cmp
test
inc
cdq
test
fidiv
inc
mov
pushf
mov
mov
and
ror
stc
fisub
pop
dec
mov
fcmovnbe
or
mov
dec
retf
dec
shr
fs
mov
mov
ror
ins
sbb
lock
fdiv
out
aam
je
jbe
jb
sub
sbb
call
add
fmul
jno
(bad)
lahf
mov
jmp
lahf
cmps
ja
dec
or
rcr
(bad)
fcmovb
mov
dec
ror
pop
pop
aaa
test
bound
sub
stc
add
cmps
mov
fisub
dec
pop
bound
call
loop
jae
gs
fsub
xor
xchg
std
hlt
pop
test
ins
push
mov
nop
aad
(bad)
push
fdivr
cmp
or
jbe
out
mov
dec
stos
sti
mov
ret
cwde
mov
(bad)
in
cmp
dec
and
push
cmc
jno
push
xchg
sbb
call
lods
mov
fwait
daa
call
mov
test
or
or
add
push
ret
popa
rol
idiv
sahf
call
dec
jae
xchg
call
xchg
sbb
jmp
push
leave
aas
stos
imul
push
sbb
dec
mov
ds
inc
cmps
jnp
out
(bad)
jb
sbb
rcr
sub
mov
dec
loope
mov
adc
jnp
push
mov
xlat
repnz
mov
adc
enter
js
stos
inc
add
xchg
or
mov
out
fsubr
movs
es
fwait
sub
pop
call
cmps
mov
outs
sbb
jmp
and
(bad)
dec
lock
mov
pop
mov
xor
stos
lea
mov
(bad)
add
push
sar
inc
dec
push
adc
cdq
xchg
mov
or
xchg
out
mov
enter
das
loopne
mov
jmp
xor
pusha
les
dec
fwait
jb
pusha
pop
sbb
les
test
iret
clc
imul
mov
scas
mov
fcmovb
enter
cs
scas
add
push
sbb
mov
call
fnstsw
mov
mov
xor
sub
shl
ret
mov
sub
sub
call
mov
fwait
movs
pop
std
cmps
adc
aad
sub
mov
jmp
pusha
fbstp
xor
add
fistp
xchg
out
idiv
(bad)
ja
push
pop
push
push
int3
in
lods
dec
aaa
sbb
gs
xchg
test
iret
in
dec
aas
jne
std
mov
add
(bad)
test
push
xlat
jmp
pop
xchg
mov
iret
push
out
and
xor
icebp
inc
mov
dec
xor
push
ins
push
sub
and
enter
(bad)
mov
test
out
push
mov
(bad)
jmp
pop
inc
enter
xchg
test
sub
sti
add
pop
out
stos
add
movs
push
sub
imul
or
inc
pop
loop
xor
inc
inc
test
cmps
arpl
sub
into
mov
sbb
mov
fdivr
in
jg
fistp
jecxz
adc
ret
cmp
pushf
out
daa
aaa
fcomi
mov
jmp
retf
aas
sti
lahf
in
movs
pop
pusha
movs
jg
jl
push
mov
adc
jmp
adc
fs
or
sub
cmc
fwait
mov
add
arpl
addr16
rcl
movs
and
inc
inc
xchg
inc
arpl
mov
push
mov
test
push
movs
mov
jae
push
out
jle
scas
mov
mov
sbb
rcr
in
push
fidivr
ffree
mov
out
rcr
mov
adc
test
xlat
movs
sbb
leave
aaa
pusha
jb
sbb
xchg
lahf
jp
sbb
and
rol
iret
and
adc
addr16
mov
xchg
push
xor
cmp
xor
xchg
mov
repz
push
jne
clc
inc
popa
and
and
mov
cld
or
mov
xor
sbb
es
sbb
push
icebp
mov
fwait
push
fisubr
mov
lahf
xor
sbb
mov
inc
jbe
cld
les
loopne
outs
inc
lock
xor
sbb
jbe
(bad)
pop
lahf
lahf
push
mov
dec
retf
mov
adc
dec
fiadd
rcl
nop
pop
(bad)
dec
xor
jne
push
adc
ins
ins
imul
mov
inc
test
cmp
mov
push
mov
js
int
iret
out
test
dec
rcr
addr16
pop
lahf
(bad)
inc
(bad)
lea
sahf
(bad)
std
repnz
(bad)
je
fs
sub
mov
cmc
pop
mov
pop
mov
dec
adc
stos
fwait
xor
in
mov
test
mov
in
rol
shl
xor
push
lds
(bad)
cmp
clc
adc
sub
aam
(bad)
arpl
(bad)
in
adc
addr16
dec
lock
data16
mov
call
je
ds
mov
jns
repz
dec
cdq
xchg
out
and
retf
inc
out
jmp
jecxz
fbld
dec
les
xlat
and
stc
sbb
or
ret
and
mov
lea
in
sub
imul
mul
pop
shl
mov
dec
(bad)
xchg
nop
out
lahf
xlat
dec
mov
sbb
and
push
sub
push
sti
lds
clc
adc
scas
xor
(bad)
shr
and
js
gs
adc
mov
cmp
xor
daa
xor
loope
jmp
pop
sbb
fcomp
sar
sub
push
lea
mov
or
cmp
dec
mov
jo
sub
pop
lods
push
mov
fmul
jge
dec
xchg
sub
sbb
cmp
adc
stc
push
mov
mov
daa
push
or
mov
sar
call
xchg
fcom
cwde
mov
scas
and
dec
xchg
test
pop
das
aad
sub
(bad)
loopne
add
jae
mov
mov
adc
shl
sar
mov
xchg
mov
cmp
imul
mov
sub
xor
jmp
and
sub
cmc
mov
popf
pop
pusha
int3
xor
xor
mov
jp
daa
jg
mov
pop
xchg
out
fwait
aaa
mov
mov
sahf
adc
in
loopne
lds
mov
mov
dec
push
add
xor
aam
test
fsub
xor
sbb
and
div
mov
icebp
inc
stos
dec
or
xchg
inc
inc
shl
out
pop
lahf
shl
pushf
nop
pop
loope
pop
adc
sub
fisubr
fidivr
add
and
jg
adc
dec
les
aam
lahf
sub
cmps
push
in
push
cwde
call
and
ret
jmp
sub
push
mov
and
cwde
jp
mov
jne
fmul
rcl
cwde
xor
in
fnstsw
ret
add
repnz
xor
enter
addr16
mov
push
ret
and
mov
movs
(bad)
mov
arpl
(bad)
movs
shr
je
jnp
int3
stos
das
fst
shl
mov
adc
int
mov
shr
retf
push
in
mov
mov
pop
push
cmp
ror
sbb
or
pop
rol
std
or
test
in
rcl
out
pop
hlt
inc
pop
add
stos
pop
test
inc
int3
mov
(bad)
lods
jmp
xor
scas
fisubr
repnz
or
bound
retf
or
push
out
mov
retf
jae
stos
jns
iret
xchg
sub
neg
or
inc
div
jo
mov
std
dec
pop
out
dec
test
popf
xchg
stos
sub
mov
inc
and
popf
inc
int3
enter
sahf
jae
scas
mov
push
in
adc
mul
mov
add
test
and
adc
mov
adc
mov
mov
pop
xchg
sub
shl
add
mov
daa
(bad)
ret
jge
dec
(bad)
mov
sub
cmp
sahf
adc
nop
repnz
inc
push
js
fs
mov
add
daa
add
leave
mov
push
jb
icebp
sti
jo
or
add
sub
repnz
push
adc
setb
mov
xor
or
push
aaa
inc
es
out
adc
cmps
arpl
inc
pop
or
popf
xor
jae
dec
dec
xor
test
loopne
mov
xlat
jnp
in
mov
call
outs
pusha
fwait
cmp
add
sbb
hlt
cmp
ins
rol
idiv
pop
sbb
or
fdiv
popf
sti
xchg
retf
jnp
cmp
les
out
shl
into
xor
pop
jnp
data16
fs
push
je
cmp
scas
ss
nop
sub
repnz
cmp
add
ins
daa
cli
mov
inc
imul
cmp
imul
fiadd
sub
or
mov
xor
repz
fidivr
add
arpl
xchg
mov
enter
mov
sub
adc
xor
sbb
lods
mov
jb
push
jnp
sbb
and
lods
mov
mov
dec
enter
mov
push
repnz
push
pop
mov
push
inc
jo
cmps
movs
repz
(bad)
ja
daa
mov
mov
mov
cmp
sbb
popf
mov
jmp
aam
cdq
ins
or
adc
retf
xor
les
je
pop
popa
jnp
cmp
fsubr
jmp
(bad)
fwait
jno
mov
call
inc
jne
pminub
movs
jmp
pushf
mov
inc
in
pushf
out
adc
dec
cs
sub
inc
call
or
(bad)
dec
mov
pop
ss
retf
shr
(bad)
xor
push
in
outs
out
jmp
push
fcmovb
test
fadd
fisttp
add
pop
aaa
push
(bad)
gs
addr16
sub
cmps
gs
adc
hlt
dec
sbb
mov
aaa
add
cli
iret
ins
out
and
sub
out
in
(bad)
(bad)
sub
jae
push
sti
std
btc
pop
and
das
sbb
sahf
pop
stos
ror
cmp
out
arpl
ret
push
repnz
(bad)
int3
push
scas
add
push
jne
test
pop
in
mov
adc
lods
pop
sub
sub
xor
push
ror
mov
mov
repnz
pop
test
(bad)
out
dec
mov
imul
je
dec
push
pop
mov
mov
cli
sub
enter
adc
add
jg
(bad)
fcomp
(bad)
adc
inc
sbb
push
xchg
mov
call
xor
movs
push
add
jmp
dec
jmp
mov
xor
imul
mov
mov
in
cmp
add
jo
or
pop
cmp
addr16
(bad)
mov
call
mov
pop
dec
lock
dec
aaa
cmp
xchg
mov
xor
fisub
sar
pushf
xor
adc
nop
rcl
ss
jb
daa
sbb
js
push
ins
mov
pop
retf
sbb
push
dec
inc
add
and
cmp
pop
mov
jle
jg
mov
(bad)
mov
push
les
and
push
sub
add
xchg
dec
sub
rol
enter
test
das
adc
repnz
enter
push
mov
(bad)
out
inc
enter
cmp
aad
stc
pop
loop
(bad)
aam
and
mov
sar
outs
sub
out
lahf
cwde
ss
jl
loope
sub
sub
pop
outs
dec
lds
imul
shl
pop
lods
inc
test
jle
xchg
pop
push
fs
mov
pop
cmp
mov
inc
(bad)
cld
pop
test
adc
xchg
mov
cdq
cld
xor
fwait
or
imul
xchg
in
jb
je
test
sub
mov
mov
stos
cmps
mov
in
call
xchg
jo
adc
xchg
sbb
push
cmp
idiv
int3
rol
sbb
mov
ret
loopne
add
aaa
inc
neg
jl
push
(bad)
in
dec
mov
test
aas
mov
int3
sub
adc
clc
leave
bound
lahf
int
stos
add
mov
dec
mov
mov
cmp
jmp
aas
retf
enter
fcomp
rcr
xchg
cmp
or
jle
hlt
into
jbe
jl
or
push
or
lea
aam
leave
dec
rcl
or
stc
jle
rcl
adc
fcomp
adc
ss
(bad)
push
mov
mov
push
pop
sub
push
(bad)
mul
ss
fist
jae
(bad)
cmps
in
imul
pop
add
dec
xor
rcl
inc
fnstenv
in
inc
jmp
pop
(bad)
pop
aam
jp
fwait
stc
xor
jmp
fadd
stos
mov
cdq
jecxz
jb
sbb
cmp
pop
das
adc
add
mov
xor
push
leave
popf
sub
dec
jle
pop
or
xchg
push
push
adc
cmp
push
sub
adc
mov
or
mov
mov
xor
in
pop
push
add
enter
sub
iret
mov
mov
fnop
dec
cwde
or
add
add
rcl
jns
in
jg
int
clc
(bad)
das
mov
jl
pop
dec
cmp
test
pop
push
fwait
inc
cmp
fisub
in
xor
adc
sbb
jl
int3
iret
ja
stc
fidivr
pushf
fs
unpckhps
test
add
mov
imul
sti
into
inc
jg
fs
iret
mov
outs
sahf
mov
out
inc
push
(bad)
dec
dec
and
out
rcr
movs
pop
xor
in
ins
fs
dec
test
lea
pop
xor
xchg
pop
out
in
into
(bad)
xchg
out
fimul
xor
xlat
scas
aad
push
mov
push
mov
dec
lods
jae
jge
sar
or
pop
ins
cmp
sub
cwde
dec
adc
and
push
xor
or
scas
cdq
mov
push
loope
shr
jae
addr16
xor
mov
push
cmp
es
inc
icebp
mov
movs
data16
cld
jo
inc
repz
pop
aaa
je
in
xor
push
mov
xchg
std
adc
int3
int
pop
xor
or
loopne
and
jecxz
aaa
data16
mov
push
mov
pushf
nop
shl
xlat
mov
lahf
push
movs
mov
mov
jns
cmps
adc
jno
sub
lock
mov
xor
or
pop
hlt
push
xor
mov
test
(bad)
inc
sar
pop
xor
inc
daa
stc
ds
jl
call
dec
scas
push
out
mov
and
aad
or
movsx
clc
and
ret
ins
push
pop
ja
in
jg
std
fstp
jmp
cmp
and
int3
jle
mov
jle
mov
(bad)
repnz
mov
sbb
adc
gs
int
mov
movs
aas
mov
adc
jmp
out
imul
or
push
(bad)
stc
dec
push
dec
or
outs
jl
adc
and
lods
ficomp
sar
call
pusha
ins
in
cs
loop
ret
inc
add
mov
sbb
mov
jp
pushf
aas
sbb
adc
jno
push
outs
sub
aas
sbb
sar
lds
cmp
dec
(bad)
std
dec
aaa
lods
retf
cmp
jnp
jbe
jns
ins
mov
fisubr
xchg
ds
ins
daa
add
ficom
and
pushf
xor
mov
mov
fwait
jb
fistp
movs
shl
adc
lea
js
fsubr
push
xlat
mov
inc
xor
xchg
inc
mov
fldcw
aas
jb
fwait
cmps
or
push
pop
xchg
or
mov
dec
pop
in
hlt
(bad)
vmovupd
xor
xchg
sahf
div
aam
mov
clc
ss
and
cmc
bound
rol
ins
repz
sbb
(bad)
cmp
xor
jg
or
pop
hlt
inc
fucom
xchg
jle
movs
leave
mov
sub
push
fdivr
jo
jb
mov
cs
clc
and
cmp
add
or
pop
clc
popa
gs
mov
cld
test
int
inc
or
mov
jnp
imul
pop
je
xor
arpl
into
cld
xor
mov
sbb
mov
in
inc
sbb
sbb
mov
xchg
lahf
and
sub
stos
jb
shr
scas
sub
push
test
ss
xchg
hlt
mov
jnp
dec
jle
push
mov
lock
repz
jbe
pop
retf
dec
(bad)
loopne
jbe
mov
int
scas
sbb
xchg
mov
nop
das
pop
jg
clc
aad
xchg
add
xor
in
xor
call
es
push
cmp
mov
and
lods
frstor
ret
dec
int3
cli
xor
pop
rol
adc
sbb
pop
push
pushf
cwde
and
pop
repnz
jne
ror
adc
add
fst
adc
xlat
add
sbb
gs
jnp
dec
stc
jmp
fimul
aaa
test
xchg
xor
cs
pop
bound
cwde
lahf
in
(bad)
mov
mov
scas
clc
inc
fisub
(bad)
xchg
(bad)
xchg
mov
xchg
bound
iret
sub
cmp
inc
cmp
into
ins
xchg
imul
rcr
jl
in
push
aaa
adc
jb
add
mov
jmp
sub
fild
push
pop
les
into
movs
pusha
repnz
hlt
jb
pop
lods
outs
xchg
leave
pop
mov
fdivr
iret
and
scas
xchg
dec
or
repz
add
call
xchg
hlt
or
mov
jl
rcr
dec
nop
bound
scas
xor
xchg
and
mov
inc
adc
scas
push
jns
bound
pop
or
lea
pop
mov
inc
push
cmp
mov
inc
lock
or
sub
dec
rcl
xlat
test
je
push
sub
inc
xchg
sbb
push
mov
(bad)
jne
fucomi
hlt
xchg
mov
or
inc
rol
jge
xchg
jmp
retf
(bad)
lds
adc
and
stos
sub
jo
add
mov
ret
and
xor
jnp
addr16
fldenv
sbb
or
test
jbe
mov
mov
mov
lahf
addr16
std
inc
adc
into
mov
xchg
(bad)
movs
rol
arpl
(bad)
mov
jge
jne
lea
xchg
cs
cmp
cdq
mov
cli
enter
jmp
sti
inc
cmp
jo
push
jb
cmps
call
je
vmovups
xchg
lahf
test
jae
clc
sbb
cmc
xchg
add
push
ror
and
mov
dec
ret
(bad)
(bad)
mov
or
imul
sub
daa
mov
int
and
loope
in
cmp
or
fisttp
xchg
in
adc
sub
fimul
call
les
push
fadd
adc
or
hlt
fild
pop
test
ins
cli
test
mov
mov
mov
fdiv
adc
cmps
pushf
pushf
std
add
ins
and
das
jmp
push
cld
push
(bad)
ja
out
sbb
data16
outs
jno
cmp
push
int3
(bad)
iret
jle
pop
add
in
cmps
push
out
xor
fist
sub
dec
mov
dec
inc
xor
outs
push
ss
jnp
xor
(bad)
fcom
inc
mov
inc
add
mov
dec
mov
lock
addr16
inc
dec
mov
sub
aad
sub
pushf
and
xor
leave
lahf
sbb
cmp
ret
imul
cdq
(bad)
in
jmp
cmp
xlat
sub
jp
and
adc
imul
imul
mov
jmp
push
xchg
mov
pop
jno
fild
enter
retf
inc
pop
cmp
bound
sub
js
jo
jl
mov
stos
mov
or
xchg
adc
and
lds
je
imul
xchg
xor
xor
cmc
mov
pop
cli
push
js
jmp
pop
inc
or
(bad)
dec
and
fild
cmpxchg
add
test
in
dec
or
or
jg
mov
shl
dec
sbb
pop
and
sbb
mov
mov
(bad)
xchg
jge
add
fwait
add
or
out
and
arpl
(bad)
jo
sub
push
or
push
jle
fcom
sub
ss
ret
sub
into
and
out
ret
fmulp
mov
rol
pop
cmp
cmp
push
and
sbb
inc
pop
es
cmps
loopne
sub
call
mov
and
jne
add
stos
mov
pop
push
mov
jne
push
jmp
pop
movs
mov
push
(bad)
sti
push
mov
dec
imul
out
sbb
sub
jecxz
fadd
out
inc
mov
int
or
xchg
pop
(bad)
or
bound
jmp
das
mov
adc
jb
mov
push
inc
push
or
jle
push
in
sbb
push
cmp
js
xchg
inc
xchg
pop
mov
xchg
jp
scas
mov
aaa
lahf
loopne
mov
xchg
jb
rcr
pop
pop
dec
ret
std
lahf
movs
pop
das
popf
jp
fnstcw
xor
in
outs
and
setnp
inc
test
and
or
or
xor
retf
pushf
sbb
dec
mov
or
or
jns
rcr
xchg
lods
ins
ins
xor
ds
test
inc
pop
sub
pop
in
sbb
ds
xchg
cmp
test
enter
push
es
pop
mov
add
mov
jp
add
xor
dec
leave
push
dec
jno
sub
lahf
sbb
adc
clc
fst
loope
pusha
jb
ss
sti
mov
xchg
pop
lods
sub
div
popa
push
rol
lods
test
adc
or
add
jp
ret
(bad)
cmp
mov
cmp
jnp
mov
mov
cwde
cmp
popa
mov
movs
push
jnp
daa
push
mov
push
data16
and
div
retf
jae
sbb
or
ss
adc
sbb
inc
push
cmp
cmp
and
int3
xor
fst
imul
shr
mov
jl
push
adc
mov
push
adc
mov
cmps
or
aam
int3
and
cs
push
dec
push
nop
xchg
outs
jae
mov
cwde
mov
data16
imul
movs
jns
addr16
push
jecxz
out
lods
xor
retf
jmp
mov
dec
dec
fcomp
sbb
out
iret
push
inc
int3
or
jne
cs
inc
pop
std
dec
out
ins
adc
ja
adc
ja
inc
fsub
add
iret
lahf
pop
dec
in
in
add
test
bound
mov
mov
sub
andnps
fmul
outs
shl
sub
xor
jg
jnp
push
mov
mov
jnp
push
call
iret
xchg
lock
pop
mov
inc
shl
fs
push
popa
stos
pop
cli
clc
mul
push
test
inc
pop
daa
cmp
rol
mov
outs
sub
sub
xor
xchg
push
stos
fld
pop
test
xchg
inc
in
and
sbb
pop
sbb
iret
xchg
xchg
push
sub
in
addr16
xchg
enter
mov
pop
ins
pop
xor
vunpcklps
dec
pop
ins
mov
imul
mov
xchg
ror
sub
mov
enter
cwde
and
dec
(bad)
out
daa
fdivr
es
fnstcw
jbe
mov
or
es
and
adc
pop
(bad)
retf
sar
cmp
xor
fld
popa
inc
js
sbb
jg
xor
int
leave
mov
pop
jnp
out
jnp
xor
dec
jg
jg
ins
fwait
jbe
int3
movs
cwde
xor
(bad)
in
jmp
retf
cmp
sub
cmps
pop
mov
test
sbb
inc
xor
icebp
sbb
out
in
mov
(bad)
xchg
div
push
movs
in
mov
test
cmp
or
fistp
mov
retf
xchg
xchg
jo
arpl
into
cmc
retf
movs
dec
das
mov
pop
mov
mov
sbb
rol
add
sbb
adc
xchg
and
sub
ins
jl
mov
fadd
(bad)
pop
push
and
in
pop
ins
addr16
mov
or
sub
pop
push
mov
add
push
dec
fnstsw
mov
xor
pop
jns
shl
jge
(bad)
jnp
repz
pop
shl
dec
xchg
ret
repnz
mov
scas
imul
jb
daa
std
leave
mov
sub
push
lds
pop
mov
mov
pop
aaa
hlt
scas
push
dec
mov
int3
mov
cld
bound
and
arpl
mov
outs
pop
sbb
int3
popa
cmc
pusha
dec
fwait
dec
nop
pop
fidiv
or
cmps
daa
in
aas
jmp
pop
movs
lock
and
sbb
jmp
sar
sbb
aam
shl
call
push
jmp
or
adc
fistp
js
pushf
dec
addr16
xor
sub
or
stos
push
xchg
sub
aam
push
mov
add
xlat
xchg
stos
loop
mov
mov
fiadd
mov
outs
iret
pushf
gs
out
(bad)
out
std
out
mov
sbb
sbb
jmp
jmp
scas
or
push
or
loope
mov
dec
sub
pop
lods
fs
call
lods
xor
push
mov
call
or
mov
(bad)
and
sbb
xchg
xor
aas
(bad)
mov
inc
sub
pushf
jle
jmp
pushf
(bad)
int3
fistp
cmp
push
add
nop
(bad)
ss
aas
add
sahf
rep
push
inc
call
std
mov
sub
cmp
cmc
jo
dec
daa
xor
call
inc
outs
mov
dec
out
fld
dec
fimul
push
pop
push
(bad)
cmp
retf
jns
sbb
xchg
jg
neg
cmp
cmp
push
push
ret
cmp
cmps
mov
jbe
mov
mov
imul
jno
ret
iret
ja
cmps
pop
icebp
mov
mov
call
imul
push
in
ret
cli
int
je
push
jmp
leave
pop
sub
stos
mov
loopne
std
xor
push
mov
adc
sbb
pop
dec
or
push
hlt
les
adc
push
push
push
jne
pcmpeqw
shl
addr16
out
mov
mov
and
inc
xor
cmp
jecxz
bound
in
push
ds
and
aam
arpl
sub
xor
ja
je
ficom
inc
mov
xchg
rcr
jp
or
push
cmp
sbb
mov
inc
dec
mov
mov
arpl
stos
gs
mov
leave
mov
inc
jo
mov
jns
and
pushf
sbb
rol
gs
cmp
mov
jns
stos
stos
or
xor
push
fmul
mov
jne
aas
jo
hlt
push
adc
repnz
loopne
fild
ja
aaa
pop
xchg
enter
shr
push
cli
jecxz
xchg
into
push
retf
jle
mov
pop
inc
dec
cmp
lock
enter
addr16
mov
mov
or
push
or
cld
adc
and
or
dec
adc
and
dec
add
cs
mov
movs
fsub
in
iret
loope
cmp
fmul
hlt
xchg
jb
pop
inc
push
ins
jbe
daa
push
pop
sbb
add
xchg
call
jle
xor
push
addr16
xor
fimul
dec
xchg
push
into
mov
dec
aaa
daa
inc
xchg
sbb
outs
and
mov
mov
nop
adc
xchg
dec
mov
(bad)
test
add
data16
ror
jg
fdivr
push
sbb
or
rcl
inc
daa
xor
ins
or
and
xchg
fisttp
mov
into
jbe
fimul
pop
cmps
leave
dec
pop
sub
push
and
test
push
xor
push
pop
loopne
sbb
pop
in
sbb
and
shl
dec
cmp
(bad)
lea
cmps
xor
adc
and
scas
dec
mov
shl
jno
imul
xor
and
sub
cwde
gs
dec
ins
sub
xlat
inc
push
fmul
sbb
xor
jmp
popf
mov
shl
xchg
and
mov
sub
mov
mov
in
out
fldcw
inc
sub
jp
mov
or
ins
clc
je
add
sub
lock
xlat
mov
fdiv
mov
inc
cli
lods
add
inc
popa
mov
or
and
and
sub
lds
pop
push
loope
stc
mov
(bad)
xor
mov
jecxz
rol
cdq
mov
add
xchg
jg
mov
sbb
mov
add
ror
outs
xor
imul
ins
sbb
mov
in
dec
lds
jns
enter
xsha1
cmps
mov
jo
ins
stos
jbe
aam
mov
sub
add
retf
mov
or
mov
sbb
mov
push
xchg
mov
shl
xchg
pop
pop
mov
arpl
arpl
into
and
dec
ins
xchg
add
mov
imul
ret
mov
aas
dec
mov
repnz
sbb
push
push
mov
jbe
xor
mov
fdivr
xchg
rcr
dec
fidiv
mov
sub
inc
cwde
add
scas
xchg
mov
adc
out
jp
aas
add
dec
push
xchg
pop
call
iret
fisttp
or
cmc
push
dec
push
das
(bad)
cs
jmp
repz
pop
cmp
adc
mov
adc
cmp
pop
rol
cwde
inc
stc
fnstcw
ja
sbb
popa
int
cdq
jp
gs
in
sbb
mov
aad
push
call
in
loopne
mov
js
in
xor
scas
pusha
pushf
test
xor
xchg
icebp
popa
dec
jecxz
jnp
mov
les
test
ja
adc
cwde
inc
cwde
mov
add
addr16
mov
jge
call
jno
xchg
int
cli
call
clc
nop
shr
push
aam
mov
cmp
das
xor
test
adc
jo
jb
push
jmp
pop
call
cs
mov
test
dec
loopne
adc
mov
pop
dec
jbe
repnz
cmps
mov
pop
cmp
aam
jns
xchg
add
and
dec
add
inc
jl
cmps
jb
and
xor
pop
(bad)
sub
fadd
adc
daa
sbb
push
mov
dec
xchg
jge
jg
loope
dec
mov
jle
mov
loope
push
mov
and
call
jmp
fwait
nop
mov
sub
sub
ret
push
sub
ss
in
jno
(bad)
ins
jmp
(bad)
shl
jae
popa
or
or
mov
mov
mov
repz
cdq
jbe
adc
shr
xchg
jp
xchg
dec
xchg
outs
push
xchg
pop
inc
or
or
jo
pop
out
daa
popf
adc
push
push
xor
dec
jg
mov
cmp
data16
test
jno
or
leave
and
and
add
pop
iret
mov
jecxz
bound
into
inc
and
aad
imul
lds
adc
leave
jo
(bad)
aaa
call
push
adc
mov
scas
test
test
pop
mov
mov
sub
mov
imul
pop
push
(bad)
iret
retf
adc
ud2
nop
adc
(bad)
retf
add
inc
dec
jbe
iret
in
ficomp
jbe
ds
jb
ret
mov
cmp
in
xor
vmwrite
xor
in
cli
xchg
push
dec
cwde
and
mov
cmp
fwait
in
arpl
dec
xchg
stos
fs
and
dec
scas
nop
jnp
or
ins
add
test
cmc
inc
call
in
push
xor
mov
or
ins
jg
dec
jo
mov
add
leave
loopne
call
jne
mov
std
les
sbb
ret
mov
leave
jbe
ret
sar
test
cmp
cs
data16
adc
es
std
cmp
hlt
cmp
sti
dec
cmps
into
aaa
push
mov
out
jmp
inc
inc
scas
push
push
and
jmp
inc
mov
stc
ja
xor
jb
xchg
jp
jno
lods
mov
mov
cmp
dec
lds
cmc
or
xchg
lahf
mov
adc
movs
dec
fild
add
leave
dec
add
push
cld
pop
imul
mov
xor
imul
xlat
pop
stc
or
retf
and
ss
xlat
or
push
mov
mov
jle
loop
sbb
sbb
xor
in
cmp
call
pop
repz
fld
(bad)
jns
(bad)
bnd
sbb
or
in
mov
test
sar
test
inc
loope
add
or
pusha
and
add
lahf
ret
sub
int
dec
outs
mov
mov
mov
push
pop
cmp
mov
pop
pop
pop
jg
mov
leave
loopne
push
fimul
stc
sbb
xchg
or
mov
inc
and
stos
pop
das
clc
jnp
xchg
dec
add
push
add
lock
sbb
bound
and
inc
or
fld
mov
push
xor
jl
xchg
(bad)
cmp
(bad)
jae
jl
mov
cdq
jle
push
push
popa
ror
ds
jae
hlt
arpl
test
fcom
pop
mov
inc
dec
loope
leave
lods
cmc
or
mov
and
dec
xchg
and
dec
adc
push
cmp
test
mov
aad
daa
aad
pop
shr
aad
adc
leave
fsubr
xor
in
fnsave
loopne
mov
xor
rcr
daa
movs
pushf
or
pop
aad
in
lods
mov
dec
fcmovb
fdivrp
push
cdq
add
loop
in
shl
or
pop
out
xchg
stc
xchg
fisubr
xchg
sub
cmp
mov
aas
loope
sar
xchg
add
xchg
xor
push
mov
movs
fwait
js
sti
add
sub
scas
shl
(bad)
cmp
sub
mul
in
pop
(bad)
rcl
push
pop
sub
sub
sbb
test
ja
(bad)
pop
jp
sbb
mov
sbb
lock
xor
pop
mov
push
adc
pop
sbb
push
cmp
sti
icebp
adc
shr
scas
inc
dec
movs
cmp
test
neg
sub
(bad)
xchg
les
leave
je
aad
test
or
in
or
xchg
daa
cdq
push
xor
imul
mov
cwde
dec
fiadd
call
add
dec
out
inc
pop
scas
sbb
ror
scas
ret
mov
dec
add
repnz
jo
sbb
cmp
lahf
inc
mov
xor
jg
pop
sub
aas
gs
test
dec
inc
call
pop
mov
test
daa
add
cmp
add
fnstsw
jmp
inc
ins
fisubr
(bad)
mov
adc
iret
repz
in
pop
sub
(bad)
scas
lods
nop
mov
xchg
mov
loope
(bad)
xor
or
mov
mov
ja
(bad)
mov
sub
aad
loope
in
sbb
imul
mul
out
dec
dec
cmc
fisttp
ficom
or
push
jge
ds
push
sbb
imul
mov
movs
pop
sub
(bad)
lock
or
mov
test
mov
jle
cdq
test
lahf
aam
pop
and
out
xchg
inc
out
xor
jns
lahf
sbb
push
fmul
pop
mov
and
loope
jg
sbb
xor
imul
test
push
mov
inc
cdq
outs
scas
xor
xor
jne
fwait
mov
cmc
iret
mov
(bad)
out
cmp
test
jl
or
adc
ret
setno
call
jmp
mov
sar
stos
fld
xchg
inc
scas
or
jb
call
sub
leave
paddq
sbb
mov
add
int3
xchg
xor
ret
or
cmp
mov
repz
jecxz
sbb
sub
xor
scas
push
jle
jo
scas
daa
xchg
test
add
cmc
jne
ss
(bad)
out
push
test
cld
out
int
or
dec
ds
cld
xor
gs
idiv
mov
fwait
and
adc
inc
inc
push
fnop
aam
(bad)
push
pusha
xor
or
in
or
push
ins
retf
jecxz
ret
sti
dec
(bad)
jb
adc
jnp
fcmovnbe
aas
cmps
aam
sbb
sti
pop
rcl
push
ret
pop
mov
jo
daa
bnd
cmp
add
jnp
data16
jns
fdivr
out
inc
or
dec
add
(bad)
pop
shr
test
pop
cs
jp
mov
retf
add
mov
push
sbb
fs
test
in
sub
(bad)
js
dec
in
sbb
pop
cmc
dec
and
fnstenv
aam
cmps
cwde
fiadd
nop
inc
jmp
ficomp
or
cmps
and
mov
sub
leave
pop
add
shl
sub
xchg
cmps
xchg
xor
xor
fsave
ja
xlat
cmp
xlat
ds
jecxz
ror
and
pop
push
ins
test
in
sbb
int
jne
mov
iret
and
adc
adc
aad
stos
rcr
call
or
xor
fs
mov
jge
std
sub
and
icebp
ins
or
jmp
jle
into
or
dec
xor
mov
jnp
scas
push
mov
push
mov
int
lds
fdiv
(bad)
jmp
leave
loope
mov
daa
shl
cmp
xchg
cmc
mov
add
scas
add
jge
mov
imul
repz
inc
mov
outs
cmps
sub
cmps
mov
adc
scas
sbb
and
xor
pop
(bad)
mov
mov
xchg
inc
mov
push
xor
mov
add
jl
sub
setl
add
mov
or
xchg
aas
dec
out
leave
pop
nop
imul
xor
xor
mov
retf
not
mov
popf
push
(bad)
hlt
and
movs
out
push
jge
pop
cmps
xor
out
push
jp
pop
cmp
and
pop
cmp
sahf
mov
adc
ret
je
dec
sbb
call
and
fld
cs
repnz
bound
and
ins
movs
cld
inc
and
and
jmp
xchg
add
stos
jp
mov
mov
jmp
push
push
jo
repnz
sub
jg
jecxz
or
ja
mov
imul
inc
popf
cmp
pop
inc
jp
imul
iret
mov
iret
std
in
push
mov
(bad)
fsubp
xor
push
adc
fnstcw
cmp
(bad)
add
push
or
mov
ss
cmp
je
cdq
aas
sbb
aam
mov
and
call
xlat
sbb
add
push
add
cmp
and
dec
data16
cdq
cwde
jle
rcr
pop
shl
or
mov
outs
aam
or
pop
xor
cld
sbb
mov
dec
lahf
(bad)
or
cmp
push
ins
shr
push
(bad)
(bad)
popf
cdq
js
or
or
pop
sti
cwde
ds
in
or
popf
fdiv
fdiv
push
or
jo
jmp
jmp
(bad)
aas
mov
popa
xor
hlt
jnp
jmp
and
push
mov
pop
sbb
jnp
inc
mov
dec
mov
idiv
mov
cmp
lahf
std
lods
(bad)
fcom
fidivr
push
(bad)
cmc
and
aas
push
xchg
outs
pop
into
iret
xchg
dec
bound
ss
scas
sub
mov
pop
mov
sar
mov
jl
rol
jnp
xor
cmc
and
jecxz
dec
jmp
or
ins
sbb
sub
sbb
ins
ret
cdq
aaa
mov
retf
out
cld
cdq
loop
push
imul
bound
mov
(bad)
out
xor
inc
movs
std
jmp
add
mov
int
stos
sbb
cli
gs
mov
cmp
loope
jmp
pop
jp
fst
in
gs
jp
fstp
push
cwde
rcl
ss
out
jne
sbb
adc
xchg
lea
js
rcr
fst
add
iret
dec
div
mov
dec
sub
jmp
(bad)
cli
cmp
inc
inc
hlt
cs
outs
inc
push
fist
sbb
out
fnsave
cld
mov
add
xor
clc
mov
cmps
mov
test
repnz
mov
add
mov
mov
mov
adc
pop
jmp
mov
pop
in
aaa
not
jp
cli
mov
in
test
or
in
jp
mov
mov
cmp
movs
loope
jmp
leave
sahf
shr
xchg
jno
jne
mov
jp
sub
sub
inc
int3
ja
fcom
mov
pop
mov
xchg
(bad)
arpl
in
or
out
mov
add
ret
loope
clc
pop
mov
cmp
icebp
and
adc
dec
push
imul
dec
cmp
mov
cwde
mov
cmps
dec
or
cdq
scas
mov
out
in
xor
ins
fbstp
aaa
push
(bad)
xchg
push
mov
enter
shl
cmp
(bad)
or
sar
adc
aaa
std
push
hlt
sub
and
push
xchg
repz
mov
sub
clc
outs
std
inc
push
enter
(bad)
jge
sbb
mov
push
(bad)
jnp
stos
push
shl
mov
cmps
test
jmp
popa
mov
scas
popf
jmp
lds
mov
outs
inc
xlat
iret
lds
xor
adc
adc
cmp
fs
jns
push
add
aas
inc
shr
push
xchg
aas
push
ficomp
or
iret
addr16
lock
ins
or
in
jb
push
inc
nop
pop
cdq
pop
dec
dec
popa
add
push
in
pop
push
add
in
sti
mov
je
xchg
inc
sbb
cmp
mov
pop
inc
push
and
xchg
dec
xor
xor
cwde
pop
and
das
bound
cmp
test
ins
vpmullw
cld
push
inc
and
push
cdq
cmps
or
push
lods
aas
adc
xchg
cmps
add
out
js
movs
add
mov
inc
sbb
jne
sbb
push
cmp
cli
retf
mov
mov
mov
xchg
aas
inc
mov
inc
(bad)
mov
dec
dec
movs
xor
jb
(bad)
stc
mov
jmp
(bad)
arpl
dec
les
add
pop
jecxz
jb
test
dec
or
xchg
test
jne
stos
jmp
in
aas
mov
xchg
mov
xchg
loope
loop
(bad)
jecxz
ds
or
jp
arpl
call
jns
fwait
sub
xor
mov
pop
inc
leave
ret
pop
les
jmp
dec
or
retf
shr
ds
in
mov
pop
cmp
mov
pushf
scas
(bad)
and
pop
mov
jl
mov
push
pop
cdq
or
movs
mov
out
dec
repz
xor
fistp
add
mov
fsub
ins
push
sub
jp
adc
add
iret
mov
dec
and
repnz
call
xchg
sbb
(bad)
lahf
mov
xchg
pop
loop
xor
pushf
sub
adc
add
mov
aam
es
ins
aam
adc
mov
push
cwde
fist
pop
es
int3
test
or
pop
iret
xchg
and
sub
imul
add
push
retf
jns
mov
cdq
test
cmp
sbb
cmp
(bad)
popa
pop
es
xchg
or
rcl
ins
call
ret
push
xchg
mov
out
jmp
xchg
movs
sub
std
in
pop
fdivr
and
movs
and
out
gs
rcr
mov
out
jno
sbb
mov
pushf
scas
(bad)
mov
jle
mov
mov
mov
cli
jmp
into
shl
loopne
inc
or
add
add
dec
scas
xor
test
sbb
(bad)
pop
cwde
movs
pmulhw
test
and
push
mov
jmp
jo
cmp
xchg
cs
pusha
mov
add
cmp
add
(bad)
fstp
outs
gs
cmp
adc
sub
loop
call
add
dec
cld
nop
clc
scas
dec
mov
or
fs
test
ror
shl
mov
xor
dec
aam
cmps
dec
inc
aaa
dec
mov
inc
movs
loopne
movs
xchg
shl
ins
mov
or
xor
shl
shld
imul
shr
or
inc
out
jecxz
jecxz
jp
fwait
jecxz
sub
and
dec
add
add
pop
mov
retf
sbb
test
leave
sub
pop
and
aas
lea
jg
jle
jno
js
retf
pushf
(bad)
sub
push
daa
call
hlt
popf
sub
cld
adc
push
mov
dec
div
push
fwait
scas
and
cmp
pop
shl
repnz
push
jp
mov
int
popf
mov
in
test
jmp
and
test
mov
fsub
pop
push
(bad)
(bad)
jp
sub
mov
and
push
aaa
mov
mov
dec
jnp
ins
es
mov
jbe
(bad)
fist
sti
jmp
add
jb
mov
in
aaa
push
push
jmp
popf
js
out
jp
outs
xor
cmc
mov
stos
xor
xchg
mov
pop
push
mov
xor
push
cli
cmps
adc
pop
pop
mov
les
mov
fidiv
pop
mov
push
mov
sar
mov
xchg
push
jmp
and
push
add
fs
or
popa
adc
push
popf
xchg
aad
push
cmp
(bad)
sbb
jp
jns
push
push
(bad)
pop
xlat
test
imul
sbb
adc
inc
iret
scas
mov
enter
jbe
adc
(bad)
cld
setnp
sti
ret
pushf
pop
test
in
ins
sub
or
fwait
imul
iret
mov
mov
mov
sar
sar
test
arpl
add
fs
adc
mov
in
pop
das
push
cmp
or
cld
sti
dec
inc
and
imul
xchg
ret
inc
sahf
mov
or
pushf
rol
jb
clc
sub
cwde
adc
imul
(bad)
(bad)
addr16
loop
add
test
pop
cmps
xchg
jno
je
int
cmp
push
push
xor
enter
imul
out
outs
or
xor
sub
dec
jnp
test
stos
inc
pop
add
or
xchg
ins
dec
mov
fstp
sub
dec
sub
mov
push
lahf
push
inc
pop
stos
jne
push
cmps
mov
mov
retf
(bad)
xchg
push
jnp
fst
jl
sub
stos
push
pop
ja
aas
jo
cli
cs
and
call
repz
jge
cmp
leave
inc
test
loop
pop
and
mov
xchg
(bad)
popa
es
mov
imul
xchg
jg
jmp
sbb
jo
xchg
pop
mov
ret
xor
cmps
adc
or
inc
shl
and
and
inc
jg
loope
setg
or
aaa
sub
out
in
xchg
adc
jle
and
xchg
in
cmp
out
dec
cwde
shl
scas
jns
dec
into
mov
cld
cld
cmp
outs
nop
mov
mov
daa
jae
clc
dec
pop
movs
int3
jno
test
gs
pop
bnd
pushf
cwde
icebp
aad
xor
ror
mov
push
test
push
pop
out
and
std
ins
push
outs
push
push
call
adc
mov
sbb
aad
cmp
pop
int
ins
scas
push
mov
push
push
dec
test
shl
dec
in
arpl
scas
pushf
jno
jns
jno
and
repz
imul
push
scas
add
movs
fsubr
repnz
push
mov
jne
retf
test
es
rcr
sub
and
leave
ss
arpl
out
aas
fs
sbb
pop
in
retf
dec
jo
movs
cmp
out
(bad)
not
sub
lock
fs
movs
jo
xchg
sbb
jno
movs
ret
call
test
xchg
jns
mov
add
push
cld
outs
inc
out
in
clc
fwait
inc
enter
out
ret
fnsave
sbb
fild
inc
inc
push
sar
jecxz
or
cmp
rol
sbb
pop
aam
fcmovbe
cmp
add
inc
popf
stc
dec
out
or
imul
xchg
adc
ror
inc
loop
test
ss
jno
loop
xchg
ds
iret
dec
push
push
sbb
push
push
(bad)
push
fdiv
mov
pop
repnz
ds
mov
add
(bad)
jae
dec
addr16
xchg
push
inc
fisttp
pusha
sub
movs
cli
stos
ja
pop
fidiv
lahf
adc
pop
dec
sub
in
pop
sbb
in
ss
mov
into
out
leave
adc
xchg
pusha
arpl
mov
sub
leave
cmp
popa
daa
and
and
pop
sub
add
inc
shr
jb
sbb
add
dec
fwait
and
adc
xor
sbb
enter
fild
cmps
fcmovnu
push
and
mov
jle
mov
pop
push
scas
in
mov
and
cmp
adc
enter
jp
jbe
inc
test
sbb
std
sti
addr16
sbb
or
int
jp
fwait
sti
jno
pop
cmp
dec
cmp
mov
push
mov
jmp
(bad)
xor
(bad)
leave
mov
sub
pop
std
mov
sub
inc
mul
jl
sar
or
push
jp
test
sbb
in
repnz
push
and
sbb
jae
sti
jno
or
js
xor
cwde
jne
pop
rcl
in
test
xchg
into
es
push
push
xor
lock
mov
add
and
and
inc
hlt
mov
int3
movs
jg
add
xor
mov
cmp
cld
jmp
movs
imul
jl
mov
jne
jge
xchg
pop
(bad)
ss
outs
cld
call
stos
xchg
enter
(bad)
jo
jmp
ret
das
mov
aas
add
popf
sub
fdivr
(bad)
(bad)
stos
scas
mov
inc
movs
mov
and
call
cmp
addr16
retf
mov
lods
outs
arpl
loope
cmc
data16
ins
hlt
cld
inc
mov
test
mov
or
mov
ret
repnz
xchg
cmps
das
push
pop
xchg
aad
out
lds
mov
inc
mov
shl
jb
or
lock
out
frstor
xchg
cmp
jp
mov
out
cld
addr16
push
add
pusha
pop
jecxz
pop
(bad)
rol
lahf
dec
iret
mov
dec
adc
cmp
std
add
fs
das
jbe
sar
mov
pop
cmc
sub
into
mov
shr
mov
ret
mov
test
pushf
dec
xor
cli
jmp
mov
push
mov
push
in
dec
dec
cmp
nop
xchg
mov
lahf
ins
cli
(bad)
mov
inc
call
sub
jl
popw
in
sysenter
and
dec
arpl
movmskps
jno
aaa
jge
push
mov
lods
jb
pop
fcmovb
push
shl
jg
xchg
inc
clc
xchg
dec
xor
rcr
neg
shl
ret
cmp
(bad)
push
fist
mov
mov
pop
adc
mov
ret
and
jns
add
inc
jg
shl
js
movs
pop
push
push
or
es
mov
sub
jecxz
aaa
int3
rcl
fld
and
sbb
add
leave
mov
dec
pop
loopne
mov
mov
cmp
movs
pushf
cmc
cmp
int
ret
push
mov
int
imul
jne
dec
mov
mov
out
xchg
adc
dec
scas
retf
sbb
(bad)
jb
sbb
loop
jp
ret
shl
rcr
out
mov
lock
adc
fcomp
pop
push
mov
imul
add
sbb
jno
frstor
sahf
movs
jge
in
sti
and
cmp
inc
out
and
add
adc
jnp
jl
loope
pop
jecxz
js
push
out
mov
rcr
fisttp
call
add
pop
imul
ins
mov
repnz
int
mov
aaa
or
push
xchg
xor
shl
int3
jp
inc
sbb
sbb
dec
dec
adc
clc
cmp
push
add
pushf
adc
sti
add
push
sti
pop
stos
sub
inc
in
inc
adc
dec
out
xchg
cmp
inc
jns
divps
test
loopne
mov
cs
and
mov
je
jle
clc
std
shl
pushf
icebp
retf
imul
shr
or
adc
ss
xadd
stos
mov
adc
leave
xor
js
retf
aas
jnp
test
out
cwde
jbe
cmp
into
and
ret
ds
aaa
les
dec
or
in
push
pop
inc
sub
mov
js
repnz
in
movs
pop
mov
xchg
cdq
dec
push
push
mov
mov
push
mov
lods
into
xchg
xchg
cmp
mov
cmp
je
je
cmp
mov
mov
stos
dec
aas
xchg
enter
mov
(bad)
jg
ret
arpl
add
xchg
cmps
loopne
rol
ror
xchg
sti
jp
test
mov
dec
cmp
mov
(bad)
rol
iret
pop
daa
cwde
xchg
add
enter
xchg
or
lods
xor
pop
neg
jae
sub
mov
xchg
mov
aas
fistp
neg
and
inc
add
and
dec
in
inc
sar
sbb
sub
pop
xor
xor
sbb
push
xor
dec
xor
ret
popa
lahf
repnz
movs
push
add
int3
dec
dec
and
pop
xchg
pop
je
pop
add
push
dec
mov
xchg
mov
inc
and
je
inc
inc
fwait
sbb
addr16
leave
call
sar
(bad)
cli
pop
ficomp
shl
push
ins
or
fcomi
ja
inc
sub
jbe
jl
std
adc
fisub
inc
add
fs
pop
lahf
in
outs
push
inc
adc
nop
inc
aas
xor
mov
add
call
pop
das
pop
mov
jg
push
cwde
pushf
cmp
and
loopne
xor
in
mov
push
inc
int3
jl
jae
adc
fsub
popf
(bad)
(bad)
cmp
pop
or
imul
pushf
outs
mov
(bad)
adc
pop
ret
sub
or
movs
or
inc
push
fidivr
bound
repz
ret
mov
sbb
fwait
jge
xlat
push
xchg
jp
in
sbb
adc
mov
ja
das
cmp
cmc
aad
mov
inc
retf
idiv
or
sbb
jle
push
add
stos
xor
sub
sti
mov
inc
jecxz
adc
and
push
adc
clc
hlt
int
popa
mov
add
xchg
sbb
leave
int3
xor
sub
cmp
idiv
stc
sub
adc
mov
aad
sub
xchg
cmp
les
jl
xchg
inc
push
dec
ret
add
adc
lds
cmp
lea
and
xchg
loop
or
jbe
or
jmp
and
mov
int3
js
jg
fnstsw
movs
in
cld
lods
push
mov
mov
jb
in
and
cmps
mov
not
cli
sub
(bad)
mov
and
rcr
dec
ins
xchg
xchg
inc
out
pop
imul
mov
jp
add
jmp
push
movs
test
cs
arpl
data16
call
jmp
and
mov
cmps
js
push
jnp
cmc
fisttp
pop
call
adc
add
loopne
and
mov
or
xor
ja
pop
cs
dec
or
cmp
sysret
clc
(bad)
sbb
loope
out
cmp
cwde
cmps
inc
jno
pop
enter
dec
sar
adc
out
cmp
test
dec
ret
jp
mov
shl
(bad)
stc
test
or
ss
pop
(bad)
adc
inc
fist
or
jge
call
xor
xor
xchg
mov
jb
rcr
push
fstp
shl
xor
and
jae
pop
mul
sub
sbb
pop
das
jecxz
sub
add
pop
cs
dec
hlt
stos
mul
hlt
push
in
fdivr
sub
dec
out
add
jns
daa
aam
or
pop
inc
repnz
or
rcl
fucompp
das
mov
pop
sbb
or
add
loope
(bad)
sbb
dec
jbe
addr16
std
retf
mov
aam
test
or
sub
dec
xchg
sti
icebp
sar
adc
jge
pop
add
jne
jp
(bad)
push
xor
inc
inc
push
fild
xchg
pop
mov
or
(bad)
fld
mov
out
xchg
mov
dec
cmps
push
mov
pop
test
or
les
push
cli
out
ficom
mov
out
mov
mov
cmps
mov
retf
movs
or
out
arpl
adc
cmp
mov
aad
dec
int
mov
fcomp
sti
mov
adc
fsubrp
dec
sbb
cld
ss
adc
ret
mov
jo
xchg
test
or
push
lods
sti
cs
sub
int3
sub
jmp
jl
repnz
loopne
es
shl
jo
inc
pop
jno
das
sbb
repz
push
cmp
pop
push
shl
aas
inc
into
call
push
call
fxam
cdq
jne
(bad)
and
fnsave
cmps
jo
sbb
cmp
sub
mov
stc
aam
test
push
es
mov
adc
pushf
adc
imul
cmc
sbb
adc
es
loop
push
jmp
inc
xchg
push
loope
mov
xor
mov
push
mov
in
xor
loopne
fcmovbe
imul
add
push
dec
adc
ror
aam
data16
inc
inc
mov
clc
mov
sbb
shr
ins
(bad)
clc
xlat
call
pop
(bad)
xor
push
ins
jge
cmp
fwait
or
pop
into
lods
sbb
cmp
call
push
idiv
sub
shl
or
test
add
test
repz
xor
je
xor
push
fucom
push
or
loop
inc
dec
add
dec
jns
bound
inc
sub
dec
(bad)
shr
ins
outs
mov
jp
add
movs
retf
xchg
iret
fmul
mov
in
mov
mov
fstp
jns
lods
movs
add
cmp
int3
arpl
sbb
dec
into
mov
int3
ins
ss
mov
in
not
jge
ror
repz
stc
mov
pop
jle
mov
lods
(bad)
out
mov
fimul
pop
out
out
outs
cmp
mov
push
mov
xchg
push
dec
popf
inc
pop
shr
xchg
add
push
xor
pop
xor
fwait
add
cmp
sti
pop
inc
mov
adc
rcl
jmp
add
dec
mov
in
inc
imul
add
push
ficom
cli
scas
cmc
dec
imul
int3
lods
push
retf
(bad)
int3
ret
mov
sub
cmp
popa
xor
in
mov
stos
lock
or
mov
jno
sub
ins
mov
dec
cmc
(bad)
mov
sub
ror
movs
push
pop
gs
jne
cli
mov
cmc
and
daa
(bad)
in
jbe
in
outs
test
ror
imul
loope
shr
call
arpl
dec
(bad)
sbb
xchg
iret
cwde
sbb
jb
mov
cmp
pop
push
adc
repz
in
mov
push
xor
push
mov
dec
jge
inc
and
push
dec
retf
lea
ficom
cmp
xor
jg
adc
or
das
xor
test
inc
and
aam
and
out
pop
cmp
int3
int
cmp
sbb
or
xchg
out
sahf
in
mov
cld
ins
imul
adc
aam
sbb
pop
mov
sub
xor
mov
outs
jg
dec
dec
sti
fst
cmp
movs
xor
sti
repz
inc
mov
repnz
or
clc
cmp
or
and
sub
scas
nop
xor
xlat
mov
leave
mov
or
sahf
mov
sub
pop
(bad)
clc
loope
aad
mov
cli
ret
out
mov
cdq
jns
cmp
outs
es
jno
dec
sub
dec
inc
sbb
sti
out
pop
in
inc
test
mov
mov
add
hlt
jbe
and
std
aaa
sbb
fiadd
inc
dec
cs
jns
push
out
mov
pop
iret
and
jae
inc
and
sbb
cmp
pop
dec
xchg
push
sub
xchg
xchg
scas
cmps
sub
jbe
pushf
pop
add
ja
pusha
repnz
and
jns
xchg
jne
adc
lods
inc
push
pop
jae
xchg
call
dec
mov
ins
aas
adc
and
inc
add
push
and
push
out
push
sub
cmp
cmp
mov
mov
aaa
pop
push
gs
jl
inc
jl
mov
loopne
addr16
(bad)
out
shl
cmp
aad
js
fst
mov
neg
sbb
test
in
cmps
push
arpl
dec
scas
inc
inc
xchg
adc
leave
mov
jne
mov
or
movs
movs
and
xlat
sti
rcl
mov
mov
jb
mov
sbb
mov
(bad)
mov
mov
mov
es
mov
dec
ror
or
popf
and
jbe
xor
adc
xchg
adc
outs
ret
add
sbb
dec
sbb
lea
cwde
in
jge
add
cmps
sub
mov
add
jae
popf
test
xor
int3
jecxz
jae
mov
loopne
jb
leave
push
fwait
xor
cmp
neg
rdtsc
jns
stos
out
jo
mov
pop
sub
pop
push
call
je
jae
mov
jmp
jne
scas
hlt
rol
ror
pop
mov
data16
dec
fs
jmp
ins
jnp
xchg
pop
sar
and
add
fisttp
jmp
push
push
xchg
aad
dec
dec
xchg
cmova
ret
mov
sub
jno
mov
cwde
xor
mov
mov
push
xchg
inc
xchg
test
push
jmp
jmp
cmp
mov
adc
movs
jns
lds
mov
addr16
sub
mov
cmp
rcr
fs
lgs
jle
cmp
fistp
mov
es
inc
test
repnz
fiadd
or
lahf
sub
ins
call
xchg
inc
mov
sbb
jne
mov
push
mov
sahf
jg
shr
call
mov
inc
pop
sbb
or
jl
(bad)
loope
nop
jmp
mov
cmps
icebp
test
cmp
push
out
inc
out
loopne
jb
push
hlt
cld
stc
inc
out
mov
cmp
lock
outs
(bad)
pop
sbb
mov
adc
pop
(bad)
xor
pop
fsub
adc
inc
push
add
inc
leave
sub
sbb
inc
sar
adc
xor
jp
push
inc
stos
jne
std
sub
mov
and
mov
call
out
pop
add
inc
add
cld
jle
mov
dec
lock
xor
push
cld
push
ror
movs
cwde
sub
icebp
inc
jp
cwde
inc
inc
xlat
int3
cli
push
ss
xchg
or
lahf
leave
jl
in
pop
sbb
test
les
inc
and
push
add
mov
pop
cmp
out
xchg
hlt
and
inc
retf
adc
inc
imul
iret
xchg
aam
jo
xor
cli
inc
lods
or
js
ret
leave
sub
inc
mov
sbb
xor
add
and
int3
iret
push
or
dec
pushf
or
movs
jne
push
xlat
es
enter
cli
push
mov
push
test
pop
out
add
jmp
outs
(bad)
jge
inc
rcl
xor
arpl
cwde
gs
aaa
repz
ins
fwait
ins
(bad)
fsubr
and
ret
lods
retf
fwait
mov
lods
inc
inc
ins
xchg
fstp
pop
(bad)
in
in
push
or
mov
stos
loop
sub
push
dec
fdivr
mov
dec
outs
and
fmul
mov
cs
push
mov
jecxz
pop
sub
mov
(bad)
xchg
or
aaa
stc
jb
mov
fisub
sub
loope
div
addr16
jo
sub
out
das
add
pusha
cmp
adc
xchg
sbb
xor
in
jle
aad
add
mov
leave
push
mov
repz
fstp
jo
in
adc
jp
aad
sub
shr
retf
xor
aad
xchg
jmp
xchg
inc
xchg
xor
outs
mov
adc
out
mov
mov
jnp
jg
and
(bad)
xor
jle
push
mov
dec
jecxz
dec
cli
adc
mov
jle
(bad)
fdivrp
mov
xchg
cmp
repnz
push
or
stc
scas
bound
dec
ror
pop
and
retf
out
xchg
sti
inc
push
mov
jbe
ds
xor
ja
popa
mov
inc
pop
lods
pop
adc
or
es
stos
aam
mov
inc
(bad)
enter
loopne
pop
jmp
cmp
cwde
inc
jmp
jmp
std
js
pusha
mov
ficom
test
inc
inc
inc
xor
cmc
mov
sub
cdq
push
ss
jbe
jl
add
jbe
ret
add
cmp
mov
dec
mov
mov
and
xchg
icebp
xchg
outs
xor
lds
ins
fldenv
pop
call
arpl
out
pop
sub
lds
adc
test
lods
stos
pop
pop
or
inc
pop
cmp
(bad)
bound
mov
cmp
jnp
rcl
pop
xor
cmp
bound
test
pop
inc
pop
push
cld
out
xor
mov
pop
cmp
pop
jns
movs
loop
lea
xchg
jns
jne
lahf
xor
es
jo
dec
fucompp
fcomp
dec
cmp
add
cmp
xchg
in
loopne
xchg
and
push
imul
shr
movs
or
mov
arpl
add
or
cmp
(bad)
call
mov
pop
fcmovb
clc
leave
in
sbb
push
jbe
in
jbe
jg
rcr
dec
fbld
jge
mov
fstp
fistp
xor
fimul
xchg
in
stc
sbb
inc
push
fiadd
and
and
pop
std
in
repz
mov
mov
or
mov
and
inc
or
sbb
add
and
xchg
or
and
aaa
std
pop
in
daa
sahf
dec
push
inc
sbb
pop
add
push
sti
dec
cmp
add
push
pop
imul
push
mov
add
pushf
les
push
xchg
repz
sbb
aas
retf
(bad)
hlt
xchg
frstor
dec
aaa
je
and
into
stos
pop
pop
add
adc
sub
js
xchg
mov
daa
out
pop
js
imul
out
or
push
pop
push
aas
jmp
pop
out
mov
stos
xor
xor
outs
xchg
pushf
xor
test
aaa
add
cmp
test
out
shl
ja
push
stos
nop
mov
(bad)
mov
cmc
xchg
rol
(bad)
sbb
inc
cmp
arpl
xlat
sahf
jo
and
repz
lea
in
not
(bad)
fidiv
cmp
inc
cmc
jp
add
int
fnstsw
add
xchg
add
mov
leave
fcomi
add
fldenv
xor
pop
xchg
mov
mov
retf
pop
pop
xor
inc
cmp
jmp
in
adc
lock
adc
xchg
mov
xchg
fbstp
out
fs
jbe
sub
into
push
stc
adc
inc
add
cmp
movs
or
or
dec
rol
aas
lea
mov
shl
mov
std
lods
and
std
jl
fwait
sub
aaa
cmp
(bad)
mov
push
jae
sbb
or
mov
push
adc
rcl
ret
ret
ret
sbb
push
adc
dec
add
aas
sahf
iret
cmps
stos
pop
pusha
xchg
sbb
sbb
fwait
xchg
or
sbb
lods
mov
push
xchg
push
mov
nop
pushf
jecxz
adc
cld
ds
xor
mov
das
popf
dec
mov
retf
adc
mov
sbb
jbe
sub
add
rcl
retf
and
lds
in
push
test
rcr
push
ins
xor
movs
mov
mov
test
popa
in
lock
mov
(bad)
fcom
xor
bts
sub
cmps
and
cmps
xchg
das
inc
jmp
shl
rcl
lock
jns
pop
jg
jg
(bad)
pop
mov
(bad)
pop
mov
mov
mov
mov
(bad)
mov
test
in
pop
(bad)
xchg
push
call
cwde
movs
aas
mov
mov
mov
sar
push
sti
fs
xchg
or
add
mov
ret
out
mov
daa
cs
aam
sbb
xor
sub
sbb
push
(bad)
in
outs
inc
or
aam
xchg
xchg
add
sub
pop
adc
ficomp
test
aaa
data16
add
outs
test
push
ins
add
and
jmp
cdq
cs
stos
sub
mov
(bad)
mov
imul
inc
ret
(bad)
jmp
xchg
mov
fwait
push
pop
test
(bad)
xchg
xchg
pop
mov
mov
push
loop
jae
push
jl
adc
stos
add
in
shr
or
loope
je
sbb
xor
cdq
test
xchg
hlt
stos
sub
or
mov
gs
inc
inc
ins
lea
pop
push
adc
retf
jge
and
popa
jecxz
xor
pushf
into
jmp
clc
inc
adc
jnp
pop
test
loope
jne
push
enter
int3
sbb
dec
xchg
(bad)
xchg
adc
dec
enter
js
mov
mov
cmovns
ins
inc
push
mov
in
xchg
es
and
xchg
adc
stos
and
mov
jne
mov
mov
mov
aam
adc
fwait
add
jmp
pop
in
data16
jno
(bad)
jge
das
cmp
or
div
dec
xchg
xchg
jmp
frstor
adc
fistp
or
push
imul
je
stos
xchg
movs
inc
movs
gs
test
mov
xor
cld
dec
les
out
sbb
cmps
xor
outs
das
sti
mov
add
inc
sub
push
add
xchg
pushf
cmc
call
pop
int
in
adc
or
loop
out
fidiv
lock
add
push
pushw
xor
les
cmp
sbb
out
jbe
and
jnp
in
movs
sbb
lock
and
ret
pusha
dec
(bad)
push
pop
call
sti
lods
mov
call
in
je
fcmovne
das
cli
sbb
push
icebp
sub
rol
adc
cmp
jne
add
in
push
arpl
pop
and
jbe
xchg
mov
mov
mov
jne
mov
(bad)
mov
pop
cmp
xor
add
sbb
and
add
and
add
xchg
ficom
in
cld
pop
sar
mov
call
xor
mov
test
movs
add
stos
adc
stos
pop
fs
push
das
sbb
cmp
sub
xchg
mov
addr16
dec
sbb
sbb
adc
bound
mov
xchg
push
mov
and
mov
rcr
pop
jnp
sub
rol
push
dec
sub
fwait
mov
xchg
cwde
mov
lock
call
jne
push
neg
div
sti
inc
mul
add
jmp
mov
jle
and
bound
pop
push
sahf
xchg
repz
xchg
sti
mov
cmp
sbb
popf
or
fisttp
ja
pop
push
mov
in
repnz
call
xchg
repnz
mov
xor
addr16
shl
scas
stos
loopne
stos
shl
lods
xchg
jge
sub
cmp
add
jg
add
cmp
mov
jecxz
sub
mov
std
stos
test
and
and
mov
mov
test
test
int
or
aad
scas
adc
pop
out
adc
adc
mov
ss
out
aad
imul
inc
les
rcl
or
in
mov
sti
lds
test
fcomp
fld
lahf
repnz
add
mov
ret
mov
ret
fs
adc
arpl
mov
mov
loopne
fs
sub
xchg
fwait
pushf
addr16
sbb
sub
in
adc
push
jge
sbb
lods
mov
dec
hlt
mov
clc
imul
test
sub
xchg
mov
mov
jnp
ds
pop
test
inc
(bad)
(bad)
call
test
(bad)
call
call
retf
jg
inc
push
mov
lahf
addr16
or
daa
or
jne
inc
mov
fistp
imul
in
repnz
push
lds
jo
ret
jmp
add
and
stc
adc
loop
(bad)
(bad)
pusha
leave
xor
fdivr
adc
int3
jnp
mov
fsubr
push
cmp
pop
out
and
xchg
cmp
pop
or
test
mov
movs
inc
cli
and
pop
js
push
jnp
pusha
add
xchg
push
sub
mov
sbb
mov
cmp
aam
push
or
pop
jns
ins
push
push
and
rol
push
popa
and
pop
aas
mov
push
add
inc
xor
movs
loopne
xor
jge
jno
loop
xor
and
xchg
dec
pop
add
jp
repnz
imul
imul
shr
enter
cmc
jb
lock
ins
inc
ret
jnp
sub
(bad)
jg
inc
mov
adc
mov
and
sahf
pop
out
mov
fwait
les
jo
das
cmps
cli
bound
imul
rol
jno
ret
pop
or
xor
and
das
mov
xor
fwait
(bad)
push
leave
mov
jb
mov
pop
retf
and
retf
adc
dec
jge
inc
jl
or
ss
mov
pop
jp
test
push
fldenv
mov
cli
(bad)
fimul
adc
jb
fimul
xchg
jge
ins
jg
mov
enter
add
cwde
sbb
jno
sub
cmp
arpl
or
aad
jmp
pop
scas
xor
xchg
int3
push
cld
mov
stc
mov
dec
mov
push
faddp
jne
or
out
out
push
in
mov
repz
adc
cld
lods
inc
and
pushf
or
mul
jle
out
xor
and
add
lods
ret
jle
xchg
xchg
inc
iret
sbb
jmp
pop
outs
(bad)
lock
or
sbb
xchg
sbb
or
cmp
mov
inc
inc
mov
je
xchg
stc
gs
rcl
icebp
popa
cdq
jns
push
and
imul
lahf
imul
shl
pop
pushf
fidiv
add
mov
or
or
retf
ins
or
push
inc
ds
rol
add
ins
out
aam
retf
sub
cmps
lds
push
push
xchg
add
lock
cmp
cld
and
mov
push
leave
lahf
sbb
jle
mov
push
cmp
dec
sub
cwde
dec
test
pop
inc
add
fcmovu
sbb
or
popa
hlt
dec
jmp
outs
(bad)
pop
(bad)
int
pushf
or
cld
pusha
inc
mov
xchg
loope
adc
or
jmp
and
xor
fisttp
out
and
add
dec
or
sub
xor
(bad)
or
sub
push
sub
inc
jbe
sbb
jne
or
pop
stc
pop
jb
mov
or
lahf
mov
ror
aam
jle
inc
ins
neg
sub
frstor
jbe
push
adc
dec
test
(bad)
stc
(bad)
popa
mov
xchg
push
ins
cdq
mul
push
fimul
cmp
push
sbb
mov
mov
mov
enter
je
inc
jae
jno
imul
cmp
xor
std
test
pop
inc
cmps
movzx
mov
cli
les
push
arpl
pop
sub
mov
adc
cdq
inc
dec
jae
daa
test
jmp
movs
or
ins
push
setno
pop
mov
adc
(bad)
jecxz
xor
xor
sar
cli
(bad)
test
rcr
lahf
lods
loop
pop
add
sahf
stos
mov
mov
cmp
das
jnp
fisubr
jmp
(bad)
mov
mov
(bad)
imul
mov
pop
push
push
(bad)
int
sar
mov
pop
push
(bad)
add
addr16
stos
daa
xchg
mov
outs
push
in
sbb
pop
sbb
inc
out
stos
addr16
je
jp
imul
jmp
push
lahf
xor
gs
dec
cli
int
ins
retf
sti
pop
cmp
cs
cmps
inc
out
imul
(bad)
fnstsw
sti
cdq
mov
outs
sbb
sbb
std
addr16
jbe
adc
test
push
push
mov
jecxz
add
pop
mov
jg
xchg
repnz
nop
test
jge
pop
and
inc
sub
cmp
cmp
cmp
xchg
outs
test
adc
cmp
dec
das
xor
into
xchg
push
pusha
(bad)
sbb
cmps
pusha
out
mov
rcl
je
imul
cmp
in
mov
adc
inc
xor
dec
mov
enter
push
inc
xor
push
scas
fidivr
sahf
ret
pop
dec
xor
pop
cmps
test
inc
push
repz
xchg
mov
imul
lds
outs
inc
jne
xchg
test
int
dec
aaa
std
inc
cmp
js
mov
out
js
les
xchg
ins
mov
popa
icebp
adc
push
inc
push
(bad)
shl
jle
or
mov
pop
pusha
cmps
test
cmp
sti
cmp
sub
jno
push
jbe
fdiv
push
ret
xchg
aad
in
or
pop
and
add
push
or
pop
and
push
add
jae
dec
scas
jle
bound
daa
push
adc
outs
add
and
adc
jecxz
or
daa
sbb
fsub
sbb
add
dec
fldenv
fidiv
xchg
in
cmps
in
mov
bound
sar
push
mov
vpunpckhdq
sahf
daa
push
push
out
sub
outs
xor
sub
pusha
mov
adc
push
ror
neg
mov
sub
add
or
xlat
and
lea
dec
dec
mov
jp
in
in
dec
push
outs
movs
repnz
loopne
xor
loopne
test
inc
stos
jl
scas
mov
mov
push
pop
cli
and
enter
aad
movs
inc
imul
sub
or
movs
pop
sub
cmp
mov
push
or
dec
repnz
or
dec
out
ret
icebp
jg
adc
inc
ret
gs
push
adc
je
rep
dec
fs
xor
add
into
leave
in
push
pop
aam
icebp
cmp
add
cmp
sub
sahf
push
inc
repnz
add
and
out
inc
jp
jg
je
movs
int3
mov
icebp
in
retf
daa
mov
push
xor
jbe
int
icebp
mov
(bad)
or
lods
lds
das
jp
sbb
xor
int3
pop
add
fisttp
mov
fisttp
inc
movs
(bad)
repnz
jne
pop
mov
mov
lahf
retf
(bad)
sub
je
jns
rol
mov
call
mov
jle
and
sbb
or
mov
jbe
jnp
lds
aaa
cwde
cmp
(bad)
jmp
aas
adc
lock
loopne
dec
adc
test
shr
mov
je
pop
push
mov
mov
jge
jl
in
mov
xor
cmp
test
dec
sbb
(bad)
cmc
mov
mov
out
das
pop
dec
push
or
rol
cli
test
sbb
fidivr
xchg
iret
shl
out
push
xchg
pop
aad
stc
(bad)
adc
push
xchg
mov
jp
add
not
jle
or
aas
aaa
(bad)
sbb
arpl
in
imul
loopne
scas
adc
mov
add
xor
inc
call
add
sbb
movs
push
sub
pusha
cmps
mov
test
stc
repnz
sub
loop
std
fsub
or
mov
cmps
cli
addr16
adc
xchg
ins
xchg
xor
mov
pop
mov
in
mov
aam
xchg
jge
push
movs
mov
inc
clc
add
pop
sub
xchg
fst
dec
adc
or
repnz
mov
sbb
cmp
mov
fs
pop
mov
inc
mov
dec
add
push
mov
icebp
mov
fwait
adc
adc
inc
mov
mov
arpl
mov
out
or
retf
pusha
scas
jmp
xchg
inc
push
mov
inc
aad
mov
and
fs
push
aaa
std
mov
sbb
stc
dec
push
pop
push
test
retf
pop
stc
out
push
xchg
jge
and
xchg
dec
lock
in
in
sub
add
mov
ss
add
clc
adc
mov
imul
dec
pushf
idiv
push
ds
mov
jmp
or
popa
nop
adc
in
fld
sbb
or
adc
cmp
mov
xchg
push
imul
push
adc
pop
mov
dec
xor
cmc
or
lods
mov
call
xor
imul
stc
jae
sub
inc
add
sbb
imul
idiv
pop
test
cmps
add
test
aas
sbb
cs
in
or
shl
xchg
add
out
fidiv
push
fwait
jae
inc
aad
xor
hlt
inc
and
aad
push
hlt
test
sahf
add
adc
shl
or
fadd
mov
lods
push
scas
iret
pop
neg
shl
adc
sub
pop
adc
cmp
add
xor
int3
sub
imul
(bad)
add
das
or
mov
sbb
repnz
cli
test
fwait
sub
mov
fidivr
shr
mov
nop
cmps
jne
cmp
pop
lods
cli
sub
jno
out
pop
jmp
aas
jmp
cmp
xchg
adc
mov
dec
std
ret
pop
push
adc
sbb
test
mov
fwait
pop
mov
aas
cmps
stos
not
xor
into
mov
sub
cs
popa
fnsave
and
in
jo
in
mov
mov
pop
lock
push
xor
jg
mov
idiv
jnp
imul
ins
in
iret
or
mov
sbb
inc
imul
xor
adc
test
outs
loopne
in
dec
pop
imul
and
pop
repnz
pop
enter
xchg
or
in
xor
jnp
pop
adc
sar
popa
jecxz
jl
dec
cmp
mov
mov
sub
jmp
pop
and
dec
lea
or
retf
pop
dec
push
mov
dec
movs
lock
pop
sub
mov
xchg
fcomp
mov
xlat
or
cmp
out
fld
xor
rol
adc
mov
cli
repz
cmp
ffreep
dec
xor
js
adc
inc
jmp
dec
pusha
arpl
std
pop
pause
xor
cld
(bad)
test
call
leave
adc
jp
jo
jg
sbb
jecxz
lock
mov
in
mov
mov
mov
inc
mov
mov
mov
and
pop
pop
pop
mov
aas
pop
pop
mov
inc
jg
daa
(bad)
aam
xchg
inc
les
imul
push
aam
push
fiadd
enter
pop
dec
div
or
adc
sbb
movs
sahf
cld
or
jnp
sbb
xchg
add
icebp
ins
jge
dec
push
adc
xor
or
pop
xchg
add
icebp
in
fld
imul
enter
sub
push
test
retf
inc
xchg
or
(bad)
mov
pop
jge
xor
and
jb
jl
pop
sbb
mov
sbb
dec
adc
or
(bad)
add
xor
adc
rcr
scas
xchg
push
mov
nop
xchg
(bad)
stc
call
pushf
xor
loope
or
adc
loop
iret
(bad)
fld
cmps
pop
mov
jecxz
aam
jne
psrlw
mov
aam
je
mov
pop
fstp
hlt
mov
(bad)
int
nop
out
test
and
fmul
imul
jne
adc
add
pop
out
sub
sbb
dec
cmp
leave
push
out
pop
test
outs
or
popa
dec
or
retf
sub
les
mov
lock
cmp
jbe
cmps
arpl
sahf
mov
push
retf
pop
jmp
retf
mul
or
adc
push
mov
sub
xlat
adc
ds
dec
fist
or
test
lods
(bad)
mov
stos
(bad)
out
pop
fld
adc
mov
cmp
ds
or
dec
and
push
and
xchg
push
pop
and
popf
stc
jecxz
jg
fwait
xor
pop
sub
mov
add
mov
jmp
dec
cmp
adc
xor
inc
push
out
jp
push
jl
(bad)
in
jae
jecxz
inc
call
stc
mov
dec
loop
cmc
inc
jns
fnstcw
xchg
or
jb
or
outs
aas
cmp
jmp
xlat
fs
sub
cmp
xor
sbb
fld
jnp
(bad)
adc
push
mov
inc
push
jg
int3
mov
jg
inc
cmp
mov
clc
pop
mov
leave
xor
cmps
fnstenv
push
mov
cli
fst
xor
push
fisub
mov
jecxz
js
lods
enter
add
xor
xor
push
and
stos
lods
jbe
(bad)
ficomp
fidivr
or
mov
adc
imul
mov
pop
pop
ror
movs
pop
inc
sbb
std
sbb
ret
or
push
mov
jno
add
gs
(bad)
lock
(bad)
retf
xor
pop
test
jmp
js
lods
sbb
rol
mov
cli
sbb
and
mov
ds
mov
mov
inc
mov
arpl
retf
mov
loope
or
in
or
sbb
inc
es
cmp
mov
test
int
or
mov
sub
sub
inc
mov
lea
xor
or
or
mov
push
(bad)
sub
in
icebp
into
ja
aaa
and
cmp
enter
addr16
push
or
shl
dec
call
xrelease
scas
mov
daa
sahf
mov
imul
or
dec
mov
mov
jnp
push
mov
not
jl
in
jp
add
fcomp
or
fbld
mov
push
xchg
and
scas
sub
xor
jnp
lds
aaa
cmp
and
test
ror
shr
mov
popa
xor
inc
sbb
adc
mov
repz
std
cmp
jne
jnp
int3
(bad)
es
cwde
jmp
or
dec
push
call
fdivrp
jecxz
(bad)
loopne
pop
push
aad
or
adc
cmp
stc
les
sbb
daa
int
ss
mov
xor
pop
fild
inc
mov
sub
movs
iret
xlat
and
jg
pop
and
pop
push
cmp
sbb
sub
not
bound
lods
ret
sti
cli
sbb
cld
xchg
cmp
or
iret
popa
jle
sar
pop
sbb
dec
sti
je
out
aaa
or
iret
jl
jmp
movs
outs
or
jbe
adc
ins
jl
das
fwait
jge
inc
mov
(bad)
sub
addr16
jno
mov
xor
cmp
rep
imul
retf
neg
cmp
(bad)
sbb
mov
fnstsw
push
or
xchg
pop
cmc
ror
and
ins
mov
cdq
mov
jl
push
dec
mov
mov
mov
adc
push
ret
push
punpckhbw
cmc
xor
popa
mov
retf
adc
scas
and
fwait
push
dec
sahf
push
cdq
cmp
retf
adc
mov
gs
jge
daa
das
fwait
xor
add
add
mul
int
repz
movs
xlat
into
in
dec
dec
nop
jnp
jmp
jo
adc
adc
fisubr
and
mov
mov
ret
xchg
in
sub
sub
push
jp
retf
mov
mov
cmp
mov
pop
sub
sub
xchg
or
sar
push
lods
or
outs
imul
lea
movs
shl
push
fild
addr16
sbb
jbe
mov
lods
sbb
bnd
inc
jae
xchg
inc
mov
pop
and
mov
push
fisubr
retf
mov
sahf
pop
jno
jle
pop
dec
mov
mov
pop
mov
cmp
or
dec
or
ss
cmp
mov
push
dec
sahf
jmp
jge
cdq
data16
not
mov
sbb
mov
or
lock
(bad)
mov
and
cmp
push
ds
or
in
sub
xchg
adc
push
add
dec
pop
push
(bad)
dec
mov
addr16
pop
or
popa
int3
pushf
outs
aam
xor
fincstp
inc
lds
iret
stos
adc
push
sbb
and
push
sub
adc
cmps
sub
cmp
fcomp
jge
xbegin
cmp
push
xor
jnp
pop
inc
mov
push
out
lock
xor
sahf
sbb
adc
iret
push
dec
bound
mov
(bad)
cli
pop
jb
sub
push
add
cmp
and
outs
cmp
add
retf
adc
(bad)
xchg
outs
in
sub
add
repnz
rcr
mov
mov
xchg
movs
mov
xchg
aam
push
xchg
xchg
sub
xchg
cmp
retf
stos
je
test
adc
mov
mov
shl
fdivr
xchg
into
fld
ds
ret
xor
shr
cmp
dec
gs
dec
pop
cmps
jecxz
and
stos
out
dec
lahf
ins
pushf
(bad)
pop
inc
sbb
jg
int3
mov
xchg
fdivr
aam
mov
adc
pop
push
cmp
xor
pop
push
arpl
int3
popf
retf
mov
sbb
out
xchg
stos
jl
xchg
sbb
aaa
fiadd
icebp
in
int3
or
scas
retf
add
jle
xchg
xchg
arpl
inc
push
js
das
xchg
fnstcw
mov
lods
imul
dec
jno
cmp
mov
lods
ret
inc
sub
pop
or
js
dec
push
cs
out
mov
xchg
sub
sub
cmp
out
fsub
lds
into
(bad)
cmp
push
(bad)
inc
push
loopne
or
(bad)
loop
jae
cmps
out
pop
fwait
inc
jmp
jo
imul
mov
add
dec
mov
movs
popa
xor
push
ret
cmp
jo
inc
mov
(bad)
mov
dec
sbb
inc
imul
xor
cli
mov
into
pop
push
das
mov
sbb
loop
in
pop
fs
pop
dec
cmp
neg
pop
and
adc
cmp
mov
adc
je
retf
inc
push
fld
cwde
ret
mov
imul
jo
dec
mov
push
jnp
push
(bad)
lock
and
pushf
or
aad
(bad)
pop
sub
mov
push
xchg
jle
fadd
(bad)
lods
imul
ror
les
(bad)
out
ja
jge
ins
xchg
out
test
inc
add
cmp
jle
bound
xor
fild
and
inc
fidivr
inc
movs
std
jmp
add
aam
ins
push
sub
pusha
mov
scas
xor
cwde
xor
lahf
sbb
jbe
ds
xor
sbb
and
test
sbb
mov
sub
lock
bound
mov
pop
mov
mov
cli
or
pop
jnp
mov
push
pop
pop
and
xchg
lea
xor
call
iret
dec
sbb
mov
mov
repnz
push
imul
mov
hlt
inc
sbb
stos
xor
jbe
jmp
sbb
imul
push
ret
daa
sar
(bad)
stc
mov
jne
mov
push
sub
nop
push
jne
or
sar
loope
xchg
fisub
dec
mov
pop
or
xchg
data16
pop
push
xchg
scas
cld
cmps
fs
sbb
mov
loop
sub
lahf
pushf
fs
jno
xchg
bound
loopne
repz
jb
imul
dec
imul
inc
pmaxub
sub
pop
loope
out
loopne
into
cmp
mov
fdivr
rcr
push
out
rol
sub
aam
or
aad
in
adc
inc
mov
adc
jno
mov
fcomip
mov
popf
loop
adc
pop
inc
sbb
(bad)
aam
push
mov
inc
pusha
mov
lds
std
jb
gs
lock
sti
ror
or
dec
imul
mov
cmp
ror
adc
shl
ffreep
(bad)
jp
hlt
add
and
iret
dec
xchg
sbb
mov
mov
dec
lahf
sub
cmp
inc
mov
imul
cmp
fmulp
pusha
mov
jp
(bad)
sub
and
aad
lea
fsubr
mov
xchg
cmp
xchg
ficomp
cmc
sub
pop
or
dec
imul
hlt
cwde
pop
hlt
pop
ret
call
push
inc
shl
fbld
fwait
movs
mov
inc
ror
aas
or
(bad)
mov
push
adc
jmp
mov
shr
mov
loopne
xor
push
xor
cmp
movs
cmp
das
(bad)
daa
jmp
pop
jno
ins
cmp
cdq
pop
lahf
xchg
mov
call
xor
enter
repnz
movs
lahf
popa
sub
nop
xchg
push
push
in
pop
scas
imul
movs
in
jo
sbb
fmul
xchg
xchg
shr
or
inc
loop
stos
fadd
sbb
xor
or
(bad)
rol
popa
jge
sbb
popa
mov
adc
jge
leave
or
add
nop
pop
sub
test
scas
fwait
inc
jg
sbb
push
jmp
mov
shr
xchg
push
and
xchg
mov
adc
sti
adc
push
xchg
cwde
xchg
mov
push
(bad)
pop
call
mov
jne
pop
adc
lahf
cs
pop
ins
and
mov
out
push
clc
call
pop
imul
mov
enter
or
repz
xchg
xor
div
(bad)
enter
imul
push
and
push
xor
dec
into
or
cmc
cmc
stc
out
jnp
(bad)
push
xchg
mov
pop
les
jmp
clc
inc
jmp
xcrypt-cbc
cmps
rcr
adc
daa
xor
in
and
test
test
scas
hlt
dec
pop
and
fnstsw
or
dec
jns
stc
out
dec
test
push
or
mov
lds
mov
(bad)
shr
je
es
or
add
aaa
xchg
sbb
bound
test
dec
lods
mov
jmp
pop
mov
icebp
es
rcr
fimul
movs
adc
retf
cmp
pusha
mov
xchg
das
cdq
inc
int
adc
cld
repnz
xchg
fdiv
push
fld
xchg
and
mov
mov
stc
aaa
data16
ret
int3
test
in
les
inc
dec
mov
popa
cmp
sahf
add
outs
movs
push
pop
popa
das
out
and
shl
in
cmp
add
inc
push
xchg
(bad)
add
outs
push
inc
cmp
gs
cmp
es
cmp
jns
xchg
dec
push
cmps
es
jmp
dec
scas
xlat
xchg
dec
loopne
sbb
dec
or
in
(bad)
or
loop
xchg
xor
xor
cmp
fs
pop
pop
in
mov
rcl
cmp
repz
sbb
stc
mov
pop
fdivp
jle
daa
dec
les
rsqrtps
int
mov
push
pop
xchg
mov
cli
xchg
mov
xor
loopne
dec
sub
jg
xchg
loope
jp
sub
ja
mov
rol
(bad)
push
mov
push
in
sub
pop
cmps
daa
mov
fldcw
addr16
stc
push
mov
retf
sbb
shl
sbb
and
retf
or
push
pop
xchg
xchg
lods
add
pop
retf
out
jne
inc
je
stos
ins
xchg
dec
repnz
push
or
mov
gs
jb
dec
leave
fnstsw
dec
and
icebp
xchg
jns
sar
cmps
inc
cmp
out
dec
popa
rcl
and
adc
sub
mov
push
neg
rcr
add
push
mov
lods
scas
and
sbb
inc
xor
addr16
hlt
ja
rcl
retf
stos
or
or
repz
scas
xor
fwait
or
jae
lea
icebp
jg
ret
not
mov
or
push
cmc
mov
clc
repnz
jle
les
mov
call
add
jne
rol
dec
or
retf
loopne
xchg
movs
cmps
je
mov
cld
or
mov
lock
stc
xchg
cld
lods
outs
daa
xor
out
pop
push
adc
loop
mov
retf
ins
ins
and
shl
cmp
es
test
stc
fdivr
add
in
aaa
daa
in
stos
js
mov
mov
nop
daa
dec
mov
dec
(bad)
mov
inc
mov
das
pusha
sub
add
test
loopne
out
mov
(bad)
std
fcomp
outs
inc
jecxz
dec
inc
jge
scas
(bad)
loope
(bad)
xor
adc
retf
(bad)
cmps
sub
fsub
out
mov
add
sub
ror
fidivr
(bad)
shl
(bad)
xchg
push
out
pop
rcr
cmp
test
mov
mov
cmp
and
inc
adc
inc
xor
dec
xchg
retf
adc
test
in
and
jmp
push
ins
cmp
xchg
xchg
and
mov
mov
mov
jecxz
dec
shr
cmc
in
add
icebp
(bad)
xor
push
jle
mov
test
pop
pminub
ficomp
rcr
cdq
jno
dec
aam
and
mov
xor
jo
out
jmp
and
cmp
mov
je
xlat
hlt
dec
adc
push
push
inc
pop
hlt
cs
test
mov
sbb
sbb
sbb
cmps
push
cmp
pusha
mov
jnp
cdq
outs
push
outs
pop
cld
dec
and
xor
imul
aad
cs
jb
push
xor
xchg
xchg
aam
jmp
loop
ret
mov
shl
test
loope
mov
lahf
mov
sub
xchg
push
retf
fisub
outs
push
jecxz
add
in
add
or
push
adc
sahf
cmps
das
adc
ret
imul
test
nop
push
adc
xor
in
jecxz
xlat
dec
mov
jb
(bad)
pop
pop
xor
cwde
jns
ins
add
and
mov
div
jnp
std
push
sbb
sbb
or
jmp
or
inc
in
cdq
or
sub
pop
ss
pop
iret
test
push
push
mov
adc
fidiv
dec
add
and
(bad)
cld
adc
and
mov
repz
lahf
repnz
test
ss
lods
and
mov
mov
pop
call
popa
int3
xchg
mov
mov
out
push
xor
sbb
dec
repz
das
sti
out
lea
das
scas
xor
cmp
sbb
rol
mov
retf
mov
call
neg
jecxz
xchg
test
push
jb
jb
ins
mov
leave
jmp
push
sub
cdq
dec
mov
add
dec
ficom
dec
adc
pop
dec
dec
inc
jo
sahf
pop
mov
fld
iret
les
sub
sahf
(bad)
outs
cmc
mov
out
pusha
nop
xchg
mov
dec
jo
mov
aaa
arpl
(bad)
movs
pop
mov
jbe
aas
sub
xor
xchg
bound
mov
mov
fwait
jne
add
fsubp
jg
sub
pusha
(bad)
in
pushf
mov
mov
ss
(bad)
(bad)
leave
push
arpl
gs
sbb
dec
pop
add
addr16
popa
cmp
in
mov
jb
mov
mov
ins
mov
sbb
pop
das
ds
push
or
fld
pop
adc
scas
xor
movs
fdivr
out
sbb
jmp
and
jmp
mov
cld
mov
mov
rcl
enter
mov
and
pop
xchg
or
call
push
mov
pop
ss
in
add
fbld
pop
cmp
dec
cmp
outs
or
pop
push
push
mov
out
mov
aad
sub
int
imul
sbb
jg
test
and
shl
and
sbb
jnp
jne
sub
lock
mov
(bad)
sub
movs
cmp
push
mov
or
xlat
xchg
pop
les
push
inc
pop
cmp
sub
sahf
rcr
pop
mov
inc
mov
add
outs
or
dec
adc
test
xchg
mov
into
sub
mov
and
clc
dec
clc
push
outs
pop
xlat
out
test
ja
cwde
pop
gs
repnz
rcl
dec
mov
mov
mov
jecxz
pop
and
push
cld
push
movs
and
js
xor
xchg
sub
(bad)
push
ss
loop
fldenv
data16
or
cmp
dec
iret
jnp
jns
lea
xor
jl
repz
loopne
jmp
push
mov
scas
popa
mov
mov
nop
cdq
add
push
add
add
jns
retf
mov
out
pop
mov
div
mov
(bad)
ret
pop
xor
push
adc
sbb
pop
inc
cmp
lea
fnstsw
push
outs
fimul
test
je
push
push
test
(bad)
bound
adc
rcr
imul
jbe
push
sub
mov
push
ja
daa
xchg
stos
repz
adc
and
test
test
inc
stc
sbb
jno
cmps
mov
cmps
xchg
and
sub
ret
inc
pop
push
es
adc
jmp
mov
mov
les
jge
imul
cmc
add
rcr
mov
push
sahf
lahf
es
mov
sbb
or
and
retf
scas
mov
dec
rcr
dec
das
fstp
dec
cs
rcl
out
mov
je
retf
dec
stc
push
mov
stos
pop
adc
js
and
sti
or
jb
mov
loopne
repz
lea
pop
ja
inc
xchg
jge
mov
(bad)
lods
inc
xchg
aad
or
(bad)
jbe
jb
mov
das
imul
add
pusha
nop
clc
inc
test
dec
add
cmp
cmps
adc
sbb
out
xor
xor
jecxz
or
xchg
stos
push
mov
fs
add
mov
push
paddw
in
in
xor
and
in
add
(bad)
mov
pusha
lods
fild
cwde
sti
push
je
mov
lock
add
in
int3
push
jle
mov
xchg
in
mov
jge
imul
mov
mov
dec
aam
cmp
jle
and
test
mov
repnz
in
cdq
push
retf
dec
test
mov
dec
addr16
push
xchg
in
push
or
sahf
ins
jne
adc
push
lock
cmc
mov
and
frstor
jg
adc
in
in
jno
mov
add
cmp
mov
mov
xchg
test
add
adc
mov
adc
push
xchg
out
test
rcl
xchg
repz
mov
cmp
retf
not
mov
cmps
pop
(bad)
cmp
addr16
fsub
out
push
xchg
sub
mov
cmps
dec
add
push
xor
mov
pop
bound
and
xor
dec
mov
inc
push
leave
pop
mov
mov
add
lock
push
push
shr
sar
or
cmps
je
adc
xchg
mov
xor
and
mov
sbb
push
or
jl
dec
push
ins
int
jle
ret
inc
or
mov
sub
push
scas
pop
data16
loopne
xor
std
les
fldenv
adc
shl
mov
(bad)
dec
push
test
dec
icebp
hlt
imul
dec
push
mov
clc
test
jo
and
add
pop
mov
cmp
mov
aad
loop
dec
cdq
retf
mov
fild
sbb
iret
cmps
jnp
neg
iret
sub
lds
mov
pop
mov
sti
aas
sub
xchg
mov
int3
ins
push
xor
imul
out
jge
and
mov
pause
mov
mov
xor
(bad)
cmp
mov
sub
sbb
cdq
pop
cmp
mul
ins
inc
es
push
jo
add
and
iret
fimul
nop
nop
(bad)
pushf
fisub
mov
pushf
sub
fwait
xor
mul
in
mov
or
inc
je
push
mov
push
jmp
int3
mov
adc
mov
pop
pushf
xor
xchg
fiadd
das
xchg
movs
fdivr
sti
lahf
or
push
icebp
jl
cmc
cmps
jmp
(bad)
mov
mov
sbb
mov
into
mov
xor
imul
jecxz
retf
dec
fst
call
or
fisub
mov
jmp
ins
cli
clc
ss
pushf
inc
push
mov
jnp
mov
imul
adc
aad
fnstcw
fs
pop
adc
jbe
add
call
(bad)
in
mov
mov
pop
or
push
xlat
dec
sti
pop
and
inc
mov
push
dec
xor
xchg
das
dec
js
lock
jp
mov
ja
iret
out
aas
push
into
inc
aas
or
lock
movs
loop
push
dec
pop
xchg
xor
mov
inc
ret
test
int3
bound
daa
pushf
addr16
push
jecxz
outs
stos
push
inc
xlat
xchg
jecxz
push
arpl
or
pop
mov
(bad)
mov
dec
(bad)
loope
call
mov
inc
sbb
inc
xor
jmp
arpl
fst
(bad)
imul
mov
cmps
cmp
mov
(bad)
retf
pusha
xchg
in
push
push
scas
push
jbe
mov
in
pop
das
sbb
int3
fisttp
leave
imul
sbb
pop
push
neg
dec
add
out
dec
lods
addr16
mov
repnz
or
adc
outs
or
mov
and
ins
inc
test
fbld
lods
cmp
aad
sub
mov
xor
dec
ret
fwait
data16
pop
in
xchg
mov
xor
out
xor
ds
test
lds
add
adc
fldenv
nop
and
sub
jle
push
in
(bad)
sub
push
fsub
retf
mov
dec
adc
daa
pop
xchg
mov
push
out
adc
and
jno
cmp
jmp
push
inc
mov
pop
or
sub
mov
pop
lea
cmps
mov
cmp
pop
push
jae
jmp
jl
xchg
mov
popf
in
cmp
fidivr
mov
icebp
mov
aas
leave
or
inc
mov
fistp
push
or
es
aam
xor
test
(bad)
sbb
nop
enter
pop
scas
nop
xchg
loopne
sbb
mov
or
xchg
jp
mov
pop
fsubr
and
mov
(bad)
or
test
movs
in
jnp
and
addr16
mov
mov
xor
das
mov
pop
mov
jmp
mov
push
mov
test
sbb
push
jnp
push
lods
leave
mov
pop
dec
jle
test
shl
mov
(bad)
cmp
adc
push
mov
cs
jb
sahf
lahf
clc
clc
pusha
xor
add
imul
cdq
pop
push
fs
adc
pop
cmp
xor
dec
mov
add
loop
and
(bad)
repz
ret
and
(bad)
push
add
ror
in
push
cmp
loope
in
repnz
push
mov
push
retf
out
pop
and
cmp
rol
scas
pop
mov
cmp
sbb
inc
add
ret
scas
test
std
nop
add
ds
mov
xchg
pop
mov
inc
int
in
adc
in
data16
cs
lds
sbb
sub
sbb
adc
pop
lea
mov
dec
arpl
cld
ficomp
cwde
sub
into
dec
jae
add
adc
mov
les
push
dec
test
mov
mov
push
push
add
adc
jns
mov
and
push
es
pop
add
int
push
add
pop
and
dec
sahf
jmp
and
lahf
push
dec
repz
inc
push
pop
(bad)
jmp
sbb
push
inc
inc
cmp
gs
mov
aaa
sar
in
add
test
sub
xchg
pop
mov
and
pusha
das
stos
xor
out
mov
sti
push
movs
stos
icebp
jbe
inc
mov
icebp
aas
and
icebp
jge
stc
shl
pop
stos
retf
sub
and
sahf
aaa
test
ins
sub
fmulp
pushf
add
pop
sbb
inc
and
cmp
mov
hlt
push
push
fistp
arpl
adc
xor
test
adc
lock
js
div
mov
and
call
push
jp
xor
pushf
sbb
dec
cwde
out
mov
sub
into
out
out
mov
adc
dec
pop
outs
xchg
jmp
(bad)
dec
in
xchg
enter
aas
sub
add
mov
aad
sti
push
sbb
cmp
loop
into
sub
or
sbb
lock
cmps
mov
shl
lods
cdq
mov
mov
sub
sti
or
addr16
das
mov
in
test
jg
rcr
jecxz
(bad)
mov
xchg
maxps
add
fisubr
pop
add
ss
leave
xchg
mov
sub
(bad)
pop
mov
cmc
stos
ret
push
das
fsubr
aam
jo
push
jge
and
fwait
inc
js
mov
ins
adc
out
sub
jne
and
sbb
and
repnz
cli
cmp
clc
sbb
pop
pop
cmp
push
ret
or
or
add
int
jle
sar
pusha
shl
ins
xchg
test
ins
call
movs
xchg
or
push
cs
fisubr
and
mov
sub
xchg
fidiv
add
ficom
icebp
jp
aaa
add
inc
and
leave
sub
aad
jecxz
xor
fiadd
push
sub
test
shr
rol
fbstp
pop
mov
je
dec
mov
das
test
jmp
dec
pushw
adc
fdiv
inc
mov
repz
cmp
loope
pop
push
lea
inc
outs
add
push
and
jmp
and
push
pop
pop
cmp
(bad)
and
jno
xchg
adc
das
movs
mov
lock
(bad)
mov
aaa
and
push
enter
or
cmp
pop
mov
sub
adc
and
jns
xchg
rol
loop
dec
adc
ret
sbb
xchg
mov
sbb
cs
jp
xor
xor
dec
mov
pop
jbe
cmp
inc
pop
pop
fstp
cmp
xchg
ret
neg
dec
jo
xor
das
sbb
or
outs
xchg
cdq
mov
push
test
fs
cmp
jmp
retf
mov
int
rol
fs
dec
add
repz
push
test
inc
push
push
dec
sub
mov
(bad)
sbb
cs
push
jle
(bad)
iret
mov
or
inc
(bad)
xor
int3
call
mov
je
xchg
jmp
ret
xchg
shl
add
cmp
inc
add
test
hlt
retw
in
push
add
(bad)
cmp
push
dec
imul
(bad)
mov
adc
(bad)
xchg
push
aad
jb
in
lds
aaa
dec
sbb
mov
mov
sahf
cwde
inc
pushf
add
in
in
out
pop
in
sahf
push
movs
dec
stos
dec
(bad)
sahf
lods
(bad)
mov
fs
out
outs
nop
out
lods
xor
hlt
and
cld
inc
ficom
cmps
mov
out
fst
inc
sbb
push
(bad)
mov
stos
add
iret
mov
add
or
mov
(bad)
sub
fwait
add
mov
hlt
repz
jmp
ror
jnp
adc
nop
xchg
xchg
add
call
mov
cwde
adc
mov
fwait
adc
push
add
int3
mov
sbb
and
mov
push
cmp
repz
push
xchg
pop
cmp
xchg
xchg
bound
sbb
mov
in
fmul
aas
out
xchg
cdq
mov
pop
and
cmp
rcl
jmp
sub
jo
fsubp
cmps
ins
push
mov
adc
retf
jae
cs
sbb
mov
jp
test
pop
lds
push
sbb
cmp
push
mov
(bad)
idiv
rol
mov
sub
xchg
mov
pop
pop
out
pop
int3
loopne
test
fistp
aaa
add
jp
or
cmp
arpl
leave
mov
push
jp
lds
and
cmc
sbb
cwde
cdq
pop
jg
repz
cli
rcr
das
cwde
pop
and
hlt
aaa
and
out
mov
fwait
stos
js
pop
add
fld
mov
mov
inc
out
dec
jbe
call
and
movs
mov
and
js
ins
in
push
imul
shl
sahf
(bad)
push
push
cld
test
ins
cmp
jg
(bad)
ret
add
cmp
cmc
mov
mov
stc
out
push
enter
stos
lods
ins
or
lods
mov
gs
stos
add
inc
arpl
clc
jnp
icebp
bound
sahf
cli
push
jae
int3
and
pop
mov
and
sbb
add
ficomp
adc
cmp
xchg
movs
inc
popf
pusha
outs
jmp
lods
call
push
test
les
push
into
stc
fisub
dec
call
prefetchnta
mov
lea
retf
push
or
xor
shl
and
add
mov
xlat
popa
or
inc
(bad)
jecxz
(bad)
and
pop
mov
bt
pop
jmp
fwait
les
dec
inc
outs
test
jmp
pop
dec
cmp
in
mov
mov
cdq
cs
lea
jno
push
sub
pop
mov
pop
or
ds
dec
xchg
mov
pusha
sub
lods
ss
mov
pop
stc
mov
int
ins
dec
fnstcw
test
repnz
sar
push
jl
(bad)
push
out
fsub
popf
dec
bnd
mov
(bad)
dec
or
(bad)
and
cdq
dec
sub
ins
in
gs
jmp
or
cmp
cmc
movs
call
scas
rol
rcr
fnstcw
fld
jbe
cmp
pop
xor
xchg
jne
inc
(bad)
xchg
cs
call
cmc
ret
aam
loopne
mov
nop
xor
inc
ins
pop
sub
add
enter
mov
sub
xor
dec
push
(bad)
mov
mov
popa
dec
pop
mov
sbb
cld
pop
imul
jmp
mov
scas
jno
mov
bound
dec
and
(bad)
adc
add
xor
inc
inc
std
pop
and
mov
stos
adc
xchg
dec
test
mov
lds
dec
mov
mov
inc
rsqrtps
adc
jmp
mov
and
pop
jp
es
sub
addr16
cmp
xlat
outs
dec
lahf
ret
outs
jecxz
add
inc
mov
popf
enter
add
add
outs
enter
push
cwde
dec
lods
sahf
mov
push
movs
push
lods
idiv
imul
sbb
test
daa
adc
jb
es
getsec
jmp
xlat
jmp
lods
jne
pop
cli
push
(bad)
lea
jp
push
pop
push
dec
outs
xlat
cmp
pop
in
aas
jmp
pusha
mov
mov
or
lds
sbb
or
or
fbstp
jmp
xchg
pop
leave
cmps
ds
cmp
inc
jmp
mov
mov
mov
jno
add
scas
cmp
call
push
push
shl
mov
xor
inc
ja
pop
and
out
mov
cmps
jo
les
test
fcom
(bad)
xor
add
xchg
in
addr16
mov
jo
add
loop
loopne
stos
loop
sub
scas
hlt
cmps
push
sbb
out
push
mov
aam
sbb
mov
jne
icebp
xchg
dec
clc
mov
cmps
inc
ins
and
mov
movs
(bad)
jle
ds
(bad)
fs
push
or
inc
shl
sahf
out
jmp
(bad)
in
xchg
add
(bad)
mov
jns
push
hlt
fsub
mov
out
(bad)
in
cld
adc
popa
scas
push
add
loopne
add
cs
loopne
adc
or
add
mov
inc
push
xor
inc
fdivp
test
sub
mov
jp
and
(bad)
aad
retf
xchg
add
aam
test
inc
xor
sti
enter
and
(bad)
or
sub
cmps
getsec
or
xor
fst
(bad)
retf
faddp
xchg
jmp
in
ror
pop
push
dec
mov
fcom
lds
pop
sub
add
xor
and
cmp
mov
leave
mov
adc
(bad)
enter
dec
shr
fs
lods
hlt
inc
retf
jb
jmp
push
add
pop
xchg
pusha
je
xor
cmps
lock
lock
ret
xlat
test
pusha
fnsave
xor
lods
pop
sbb
pop
sub
ret
out
test
cmp
enter
div
pmullw
inc
mov
jp
js
test
lock
ret
xor
mov
mov
mov
and
jmp
xchg
sbb
jle
adc
stc
(bad)
into
stc
pop
cmps
push
jmp
cmp
lds
and
ins
xor
jge
icebp
or
out
mov
add
dec
push
sbb
sub
mov
int
ds
idiv
retf
add
(bad)
ficomp
pop
jmp
mov
in
pop
push
call
pushf
or
push
mov
rol
mov
fimul
lds
xchg
sub
xchg
int3
stos
jb
pop
or
and
sbb
pop
add
push
retf
(bad)
popf
jno
aad
sbb
ss
stos
or
xor
jnp
les
push
mov
call
rol
inc
fstp
enter
jo
dec
cld
lahf
icebp
sti
ror
ins
pusha
inc
mov
cdq
cmp
es
adc
cmp
test
cmc
cmp
xchg
or
ins
push
cli
movs
adc
jl
cmp
jmp
iret
sbb
(bad)
adc
jmp
test
fs
hlt
and
mov
add
and
or
sbb
pop
sub
adc
sub
jmp
popa
xor
out
inc
mov
js
jne
push
xchg
inc
or
add
cmp
nop
jo
inc
mov
fst
(bad)
or
out
sub
or
sub
inc
fdivr
bound
push
aam
stc
fisttp
in
mov
adc
push
inc
xor
push
je
mul
push
sbb
(bad)
mov
call
jl
test
adc
push
mov
iret
add
mov
add
inc
ret
mov
add
stc
mov
clc
or
xchg
aad
sub
jmp
dec
sbb
cli
pop
cwde
inc
addr16
push
pop
mov
fstp
je
fadd
das
adc
idiv
cmp
add
xchg
sub
and
repnz
fwait
inc
adc
repnz
dec
out
cmp
in
push
xor
xchg
jl
push
out
mov
push
cmc
jg
xchg
pop
fimul
data16
xlat
dec
and
addr16
xor
stc
imul
pop
push
fwait
out
cdq
mov
stc
push
jbe
jmp
addr16
mov
jnp
ins
jno
cld
(bad)
out
test
fsubrp
inc
stc
shr
int
(bad)
fild
sub
jmp
adc
fst
mov
add
cdq
popf
mov
retf
in
loop
adc
test
cli
cs
adc
mov
jg
pop
aaa
dec
mov
mov
jno
lods
cli
dec
aad
mov
xor
xchg
adc
mov
dec
mov
in
sbb
cdq
mov
push
mov
dec
mov
jo
iret
int3
adc
les
mov
aad
mov
cmp
pop
mov
mov
dec
je
push
lds
pushf
xchg
popa
retf
es
mov
add
ja
nop
stc
sub
sub
cmp
gs
daa
adc
lds
jecxz
inc
mov
xchg
(bad)
adc
jecxz
aas
pop
stc
xlat
xchg
sub
call
jne
mov
lock
mov
mov
in
rol
push
arpl
out
pop
test
call
shl
pop
add
mul
pop
sbb
mov
sbb
fprem1
stc
mov
movs
repnz
imul
or
cmp
cmp
push
mov
dec
pop
sbb
fbstp
cmps
out
push
pop
dec
jecxz
or
pop
pushf
je
cmp
fadd
or
fst
inc
and
pop
aaa
retf
in
xchg
mov
pusha
shl
out
and
and
xor
xor
outs
xchg
mov
mov
std
mov
mov
jnp
xchg
pop
push
dec
cmp
enter
sub
xor
fmul
sub
xchg
ret
or
adc
into
mov
inc
push
inc
jne
mov
mov
daa
xor
movs
rcr
adc
mov
lahf
int3
adc
(bad)
repz
adc
mov
pop
adc
loop
xchg
mov
xlat
stc
pop
pop
ja
addr16
out
popf
fdiv
mov
mov
pop
ins
inc
jg
mov
dec
adc
ds
inc
adc
popf
bound
fldenv
jle
shl
out
add
scas
dec
xchg
aas
add
repnz
push
mov
pop
repnz
aas
aas
stos
sub
cld
or
adc
leave
adc
clc
xor
mov
dec
xor
inc
out
push
adc
out
adc
inc
sub
loope
sub
aam
retf
jb
(bad)
cmp
in
cmp
add
out
shl
in
mov
cmp
cld
jno
popf
mov
(bad)
xchg
jbe
push
outs
cli
or
cmps
sub
adc
xor
sub
ret
pushf
cmp
jmp
sub
cmps
mov
stos
push
mov
and
fdivr
mov
(bad)
adc
jecxz
and
add
ret
stos
stos
inc
jmp
mov
arpl
xchg
out
jl
(bad)
cli
leave
lds
jecxz
fs
pop
aas
ss
add
rcl
test
(bad)
add
jns
outs
daa
push
cmp
pop
lea
jns
scas
pushf
pop
outs
int
out
sub
ror
data16
retf
or
mov
bound
sbb
jb
xor
mov
mov
sub
jns
lock
push
(bad)
adc
or
mov
loope
adc
lock
add
pop
cmps
shl
shr
push
sbb
pop
lds
mov
sub
xor
(bad)
inc
sbb
sbb
fisttp
ficom
mov
cs
fdivp
cmc
push
and
arpl
cmc
fstp
sbb
sub
in
or
mov
loopne
outs
sub
imul
arpl
or
(bad)
(bad)
fld
or
or
jb
mov
sub
fldenv
push
stos
and
inc
mov
and
or
in
std
shl
les
out
xchg
enter
addr16
icebp
mov
out
jo
in
cmp
and
outs
jns
inc
out
mov
test
stc
or
push
mov
enter
movs
cli
bound
and
xchg
pop
loopne
fisub
xlat
jecxz
call
mov
in
das
dec
cmps
sbb
out
enter
jnp
jg
movs
push
mov
sub
add
jne
push
mov
in
sub
aad
jbe
cmp
not
jbe
xor
lahf
cmc
out
dec
or
fmul
xor
mov
outs
je
adc
mov
mov
in
or
lods
(bad)
jne
sub
push
stos
call
pop
adc
aas
js
adc
push
int
out
jl
adc
fld
jl
add
sbb
pop
mov
ja
inc
aad
cdq
mov
sub
sub
jb
jno
or
push
(bad)
loope
sub
sbb
ss
xchg
ret
repz
into
sbb
in
pop
mov
jmp
test
outs
enter
adc
xor
mov
and
outs
imul
mov
xchg
mov
lahf
repnz
(bad)
sub
es
mov
in
and
std
jb
xchg
mov
clc
cmp
ds
into
mov
xor
outs
stc
fs
dec
and
jmp
or
sub
enter
ror
sbb
repnz
popf
iret
repz
iret
loope
xchg
adc
jg
(bad)
jmp
xchg
pop
mov
aaa
xchg
cdq
lea
je
scas
enter
cmp
bound
into
sub
pusha
jb
adc
ret
fst
dec
enter
imul
ja
into
ret
cmp
repnz
lock
call
sub
xor
enter
mov
dec
sbb
mov
nop
add
inc
dec
cmc
mov
hlt
push
fnstcw
adc
push
lea
in
clc
add
sbb
xchg
fldcw
or
loopne
add
pop
fwait
sbb
pushf
mov
test
aad
xchg
xlat
dec
pop
xchg
lods
adc
aas
clc
push
push
fistp
pop
ja
aad
mov
and
jbe
mov
scas
xor
mov
aam
mov
jo
jne
in
mov
in
or
adc
out
mul
jg
loope
loopne
sbb
dec
push
pop
movs
push
xor
retf
pop
in
add
or
popa
adc
mov
fist
cmp
mov
std
push
aaa
or
imul
pop
clc
(bad)
mov
addr16
adc
cmps
jns
cmp
cli
cmps
jbe
push
push
xor
mov
arpl
pushf
pop
adc
pushf
dec
aas
mov
cmps
(bad)
shl
or
cmp
add
fiadd
repz
add
add
sbb
fiadd
adc
or
imul
pop
fld
sahf
add
inc
daa
mov
jnp
cld
add
add
outs
push
pop
arpl
fnstsw
shr
inc
push
pop
(bad)
mov
cmps
or
(bad)
sub
outs
push
push
(bad)
inc
sbb
add
add
jns
jne
cs
pusha
popa
cmp
mov
cdq
(bad)
mov
jge
enter
push
fnstcw
loopne
call
scas
fdiv
adc
sbb
pop
or
stc
pop
jb
and
cmp
fwait
(bad)
addr16
or
mov
enter
xchg
inc
(bad)
hlt
ficomp
xchg
mov
fwait
rcl
cmc
ss
inc
(bad)
dec
push
and
add
sub
xchg
or
jmp
bound
jns
sbb
repz
sub
cdq
test
or
ja
and
pushf
pop
movs
out
xchg
xor
outs
lock
jnp
sbb
xchg
mov
out
in
lea
inc
xchg
xor
push
dec
loope
cmp
aad
in
pusha
xchg
inc
movs
add
jae
cmp
xchg
add
loope
pop
dec
push
pop
shl
repnz
xchg
(bad)
int3
jmp
lea
fwait
or
mov
sbb
mov
ins
les
add
or
pop
lock
mov
(bad)
retf
jp
cdq
cmp
sub
cmp
lahf
ffree
pop
cmc
test
popa
ds
mov
sbb
retf
cdq
call
call
ds
outs
adc
rcr
sar
je
sub
sti
inc
sti
add
mov
jmp
xchg
xchg
mov
mov
sahf
sbb
(bad)
jecxz
add
stc
not
xchg
cmp
mov
inc
test
sbb
push
popa
push
jl
dec
(bad)
mov
adc
and
xor
push
lds
enter
into
rcl
cld
jo
loope
jmpw
cmp
lahf
jno
sbb
idiv
scas
ret
push
es
nop
jne
(bad)
mov
fiadd
mov
mov
xor
rcr
inc
pop
add
dec
push
sub
mov
movs
fld
sub
mov
mov
arpl
cmp
mov
aam
cmp
and
adc
shl
cs
in
add
ja
mov
out
adc
lods
test
scas
push
test
ja
inc
test
inc
sbb
es
in
cmp
mov
dec
and
add
std
sub
xchg
jg
aaa
push
out
dec
js
and
inc
mov
mov
cmp
jp
cmp
xor
adc
mov
(bad)
cmp
adc
cli
adc
xor
push
or
js
jb
mov
call
cmp
or
inc
xor
stc
(bad)
jg
adc
xor
iret
cs
push
addr16
mov
stc
jge
ds
xchg
sbb
sbb
xor
mov
test
mov
shl
outs
sbb
adc
js
dec
pop
xchg
xor
pushf
(bad)
push
test
jmp
dec
mov
lahf
or
dec
xchg
dec
push
add
movs
add
jmp
push
fidivr
add
movs
sub
pusha
ret
xor
(bad)
adc
mov
in
and
pop
or
(bad)
sti
ss
and
xchg
sbb
dec
nop
push
inc
or
push
outs
pop
scas
imul
add
aam
adc
push
stos
mov
lea
jmp
imul
scas
mov
sbb
bound
jmp
xchg
mov
xchg
adc
cmp
cmps
stc
mov
cli
outs
adc
xchg
mov
jns
into
mov
icebp
xor
mov
pop
dec
shl
adc
dec
dec
and
sbb
mov
pop
dec
into
dec
xor
inc
in
mov
inc
cmp
pop
call
inc
sbb
loope
sub
lods
fstp
ret
adc
pop
mov
jnp
xor
fadd
out
sub
pushf
push
jne
sahf
into
cmp
pop
push
push
retf
xchg
sar
mov
dec
pop
daa
ja
shl
fld
stos
dec
cmp
out
icebp
add
cdq
inc
xlat
xchg
mov
lods
and
mov
jae
push
(bad)
scas
add
icebp
xchg
ret
cdq
cmp
movs
mov
sub
mov
pop
add
dec
push
pop
(bad)
xor
ins
in
ficomp
and
mov
push
inc
mov
ror
popa
mov
xchg
inc
in
(bad)
retf
dec
mov
inc
loope
pop
jge
imul
lods
mov
cdq
test
enter
mov
push
sub
xchg
xchg
xchg
or
sbb
mov
shr
and
add
(bad)
sub
(bad)
dec
dec
mov
fdiv
fisttp
pop
adc
xor
or
repnz
mov
mov
mov
sbb
lds
pushf
lods
int
icebp
dec
stc
aad
jne
retf
retf
dec
xor
jle
dec
xor
and
xchg
leave
pop
loopne
rcl
jmp
mov
sti
mov
cmp
sub
adc
(bad)
pop
mov
jnp
pop
and
ficom
int3
mov
or
test
cmp
stc
mov
mov
add
inc
jp
xor
mov
xor
pop
and
jecxz
stos
lods
or
xchg
mov
mov
sbb
mov
xchg
dec
dec
cs
(bad)
mov
mov
jno
pop
pop
mov
mov
fnstenv
jl
call
sbb
mov
adc
push
add
pop
xor
dec
xchg
dec
cmp
add
js
daa
aas
fld
push
pop
cmp
push
mov
xor
or
hlt
mov
jg
or
or
ins
(bad)
cmp
sbb
jbe
mov
add
aaa
pop
sbb
xor
int3
jmp
jne
aas
or
push
add
out
test
mov
xchg
xchg
xchg
add
adc
jg
xor
add
out
mov
push
ss
or
and
add
pop
mov
popa
xchg
hlt
int3
and
or
xchg
int
xor
mov
xlat
adc
fisttp
xor
(bad)
bound
xchg
jl
imul
rcpps
dec
sub
sub
popf
mov
push
bound
jb
nop
les
loop
stc
mov
pop
shr
add
adc
and
sub
sub
adc
add
jno
(bad)
repz
(bad)
(bad)
mov
enter
shr
mov
inc
in
add
lea
bound
mov
inc
and
fdivr
(bad)
icebp
es
mov
imul
sbb
push
or
jo
je
mov
dec
sub
and
mov
pop
xor
add
push
in
mov
cmps
hlt
leave
fiadd
cmp
stos
jae
std
mov
sahf
clc
mov
jge
rcr
jae
mov
dec
fisttp
mov
add
mov
dec
daa
sbb
mov
cdq
inc
mov
icebp
aad
adc
xchg
jns
test
scas
push
sub
les
jne
push
and
arpl
das
mov
std
mov
arpl
inc
ins
push
mov
pop
push
or
push
lds
(bad)
add
jns
shl
adc
xchg
out
pop
lods
je
push
retf
fisttp
ins
mov
push
add
sar
push
mov
in
push
xchg
mov
inc
add
cli
jge
mov
(bad)
xchg
or
aad
add
mov
push
ds
rol
push
aam
xchg
adc
mov
push
inc
pop
repnz
shl
fbld
std
add
and
mov
mov
pop
stc
xor
(bad)
ins
add
fst
inc
xor
rep
dec
adc
inc
rol
movs
mov
cmp
mov
ds
push
shl
ror
popf
jns
cmp
test
dec
xlat
cdq
pop
mov
jne
sub
pop
cld
popa
(bad)
mov
inc
fs
sbb
mov
loopne
and
lods
movs
stos
(bad)
push
std
mov
mov
cmp
lds
inc
add
(bad)
xchg
inc
push
rcl
add
icebp
adc
mov
or
lds
push
std
dec
xchg
jne
lds
and
jp
lea
sub
fldenv
call
dec
lock
mov
and
daa
je
jle
xor
xchg
test
out
or
(bad)
and
cs
js
mov
and
push
pop
stos
xchg
mov
xchg
aas
test
xlat
cs
sbb
cs
xchg
aas
push
cmp
jne
mov
jle
and
dec
enter
ins
and
ret
aad
mov
sub
push
xor
or
loopne
jb
out
or
jb
loope
push
and
test
sbb
fisub
mov
and
sbb
adc
cdq
xchg
int3
mov
push
hlt
stos
sub
(bad)
out
repnz
jecxz
ret
js
cmps
xchg
fcomp
fld
ins
out
add
movs
jle
fs
enter
mov
mov
lock
shl
or
cmp
mov
mov
lahf
cwde
dec
loope
push
adc
push
sbb
loope
ds
aas
pop
repnz
adc
movs
cs
mov
dec
(bad)
pusha
in
mov
leave
pop
sub
xlat
push
pop
mov
ret
cdq
fldcw
addr16
jecxz
lahf
xchg
daa
dec
sub
cli
push
inc
ins
test
cmps
je
mov
push
mov
das
and
lahf
ss
inc
test
adc
jmp
cmp
mov
push
pop
push
scas
in
push
cmp
push
enter
loopne
cmp
dec
js
daa
mov
imul
pop
jns
xor
mov
inc
clc
pop
sbb
retf
cmps
dec
add
or
test
inc
or
jno
std
dec
out
cmps
rcr
fistp
dec
add
(bad)
or
cs
mov
test
leave
not
setns
fmul
xchg
cmp
jne
pop
ds
cmp
stc
call
mov
je
add
mov
mov
sti
stos
ins
test
data16
xchg
cmp
dec
(bad)
pop
ss
out
js
enter
aad
lea
jae
xchg
in
dec
and
pop
push
cwde
lods
das
stos
nop
jp
into
fwait
loopne
mov
and
push
(bad)
mov
jns
ds
cdq
in
aad
sub
iret
and
cmc
push
jne
sub
fiadd
dec
fdivr
rcl
in
push
stc
cld
dec
nop
cmps
add
psrlq
int3
cmp
repz
and
fsubp
leave
rcl
lahf
clc
sbb
mov
push
iret
mov
stos
and
sub
(bad)
movs
add
sti
pop
lock
mov
retf
or
sbb
mov
adc
mov
and
stc
mov
mov
inc
push
sti
sbb
mov
and
ds
fisub
and
pop
mov
daa
pushf
jge
jne
jb
cdq
pop
in
movs
and
ds
(bad)
in
cmp
dec
mov
xor
jns
ins
inc
int
(bad)
leave
sbb
stos
xchg
xchg
xor
jmp
mov
in
loopne
lods
or
mov
mov
xor
pop
dec
mov
sbb
(bad)
mov
xchg
push
adc
retf
sub
and
mov
fxch
das
add
mov
push
(bad)
data16
out
pop
mov
lds
out
ja
mov
call
dec
or
mov
add
inc
lods
cmp
inc
clc
dec
xchg
mov
in
call
rol
scas
test
out
imul
ins
lods
lods
rol
retf
sbb
(bad)
stos
mov
mov
shl
inc
rol
xor
push
retf
or
ficomp
xchg
inc
lea
and
cmp
movs
jmp
inc
jmp
addr16
test
out
mov
jmp
call
(bad)
xchg
cmp
movs
scas
adc
inc
xor
(bad)
mov
ret
aad
sahf
jmp
imul
dec
scas
push
stos
jno
cs
mov
fldenv
mov
pop
pop
fnstsw
mov
mov
sub
test
call
in
fld
jl
xlat
(bad)
dec
xor
out
cli
or
mov
and
out
out
jmp
or
and
test
jb
sbb
inc
add
push
add
stc
push
bound
or
out
sti
mov
xor
jns
sahf
push
add
mov
mov
loopne
std
and
jmp
pop
sbb
inc
outs
inc
lds
mov
repz
cli
xchg
inc
sbb
mov
test
xor
xchg
dec
sub
jae
xor
aaa
cmp
cwde
lock
out
sub
adc
xchg
mov
imul
stos
push
xor
mov
mov
sbb
out
or
shr
add
xchg
jmp
enter
jp
sub
push
push
or
retf
in
repnz
and
jmp
xor
outs
aad
enter
mov
ins
arpl
fiadd
inc
aad
test
ficom
scas
dec
scas
out
aas
cld
or
inc
mov
mov
loopne
mov
xor
mov
rol
or
or
sbb
jbe
dec
fs
mov
mov
idiv
mov
(bad)
jb
push
inc
cwde
enter
jne
cmp
xchg
adc
xor
ja
and
push
lock
out
fcmovbe
add
mov
inc
xchg
test
bound
emms
mov
mov
jae
ss
mov
add
ins
adc
aaa
jecxz
xor
test
or
cmp
pop
adc
mov
jmp
pop
or
jle
cmp
ret
test
fidivr
xlat
sahf
or
fdiv
stc
jmp
das
jmp
cmc
gs
pop
mov
in
daa
ror
ja
mov
inc
inc
or
outs
cmp
sahf
jecxz
adc
mov
sub
dec
fsubr
fcmovbe
das
shl
push
retf
mov
scas
jg
cdq
pop
add
jb
add
inc
sbb
add
inc
mov
fstp
mov
outs
arpl
hlt
inc
(bad)
xchg
imul
dec
cld
fnstenv
out
outs
(bad)
lods
add
push
sti
lea
sahf
test
stos
jg
cmp
jg
not
dec
sbb
scas
popa
cs
fdivr
call
repz
xchg
jle
shr
push
xlat
stos
mov
stos
xchg
test
into
ins
jmp
(bad)
in
sbb
mov
jp
sub
pop
out
jnp
adc
push
call
sub
inc
stc
(bad)
push
pushf
add
outs
or
pop
and
int3
inc
and
and
push
and
dec
xor
hlt
pop
jg
scas
fdiv
in
adc
test
ret
and
xor
inc
lock
and
jmp
mov
and
add
outs
test
xchg
je
jmp
test
push
dec
retf
ds
push
lods
scas
push
jmp
add
test
or
sahf
lods
dec
sub
add
loop
or
mov
mov
fnsave
xor
jmp
jmp
inc
adc
dec
loope
test
sti
pop
adc
mov
in
fdiv
jle
or
push
cmp
adc
mov
sub
into
or
sub
add
sub
ret
addr16
das
movs
arpl
add
stos
ret
cli
mov
rol
sub
stos
mov
mov
call
xor
mov
inc
bound
mov
jo
inc
push
pop
retf
movs
lods
jne
mov
lods
push
in
pop
mov
out
into
out
xchg
repnz
and
xchg
xchg
loop
ret
cmp
push
push
cmp
(bad)
popa
pop
push
into
cmp
mov
cmp
xor
jae
ret
lods
aam
cld
data16
nop
add
sbb
addr16
xor
jl
sahf
jmp
mov
jne
call
test
inc
inc
sub
in
push
jg
adc
pop
and
in
icebp
dec
repnz
cmp
in
mov
pop
xor
inc
xor
dec
sti
xor
or
imul
pop
add
dec
and
push
out
mov
xchg
cld
cdq
(bad)
pop
jnp
cdq
shl
(bad)
arpl
pop
sahf
clc
xchg
mov
(bad)
out
call
jl
jno
mov
icebp
dec
imul
cmp
(bad)
in
and
mov
ret
push
das
jae
fnstcw
and
pop
pop
push
in
sub
pop
and
dec
inc
mov
(bad)
ss
and
addr16
push
arpl
cdq
jns
sub
cmp
mov
ret
cdq
mov
mov
test
inc
push
xchg
outs
mov
test
pop
not
mov
iret
jl
(bad)
lods
popf
pop
push
icebp
out
aad
neg
sbb
loopne
xchg
cld
nop
es
scas
int
pop
dec
jns
jnp
dec
pushf
in
sahf
adc
ds
fsubr
push
push
mov
push
inc
prefetchw
into
popf
pusha
or
sub
mov
je
cmc
pop
mov
jge
inc
sbb
pusha
mov
ins
out
into
ficomp
sbb
pop
xchg
jecxz
test
push
cmp
add
outs
sub
fisubr
dec
sbb
ins
pop
mov
(bad)
stos
mov
movs
fwait
cmp
add
adc
adc
mov
movs
or
inc
clc
aam
push
jns
arpl
scas
jecxz
pop
in
mov
xor
lods
xchg
or
repz
add
xor
dec
cmp
das
cwde
jno
add
cwde
lahf
inc
push
adc
mov
bound
adc
dec
jp
cld
adc
cmp
and
shr
pop
xor
add
inc
mov
jne
ins
lahf
retf
dec
dec
mul
arpl
(bad)
out
les
jle
fcomp
pop
imul
movs
daa
pop
xchg
fisttp
imul
out
mov
(bad)
jp
retf
add
outs
cli
out
enter
pop
mov
push
jl
pop
stos
cmc
addr16
fadd
jl
cmps
(bad)
das
repz
shl
pop
ret
shl
xchg
imul
mov
mov
and
push
xlat
pop
addr16
rol
out
cmps
fnstcw
jle
cmp
stos
jg
push
push
out
dec
cmp
int3
fisub
add
ins
xor
cmp
sahf
scas
xchg
lds
sbb
mov
xor
imul
cmp
pop
mov
sbb
aad
test
jnp
jge
pop
cmps
je
dec
mov
cmp
mov
pop
sub
ins
out
dec
add
xchg
xor
dec
movs
les
mov
pop
adc
enter
sub
jne
addr16
mov
movs
pop
repz
ret
mov
xchg
xor
movs
shl
imul
stos
imul
mov
and
clc
add
into
pop
adc
sub
mov
push
xchg
sbb
mov
jbe
icebp
sbb
add
mov
add
or
cmps
jno
sbb
outs
cmp
jmp
inc
xlat
fcmove
mov
inc
mov
stos
sti
mov
xchg
sub
mov
stos
ins
inc
cmp
into
xor
inc
and
sub
pop
imul
arpl
imul
outs
xchg
sbb
in
aaa
inc
dec
cmps
aam
sar
cmp
test
je
xchg
out
push
push
sbb
pop
mov
(bad)
fisttp
fstp
mov
xchg
push
in
jge
mov
pop
mov
inc
adc
jne
jne
sbb
push
or
inc
and
lea
(bad)
xor
neg
stos
cmp
aam
icebp
or
popf
or
xor
pushf
(bad)
in
adc
mov
jecxz
and
pushf
xor
aam
push
add
sub
aas
cdq
jno
xor
test
(bad)
push
add
out
call
jle
or
xchg
dec
xchg
fwait
mov
push
jae
push
clc
add
ins
std
sar
shl
mul
sbb
jp
mov
es
xchg
pop
(bad)
dec
inc
pop
add
div
ds
aam
mov
arpl
movs
mov
sbb
lahf
xchg
xlat
mov
fdivr
rcl
jle
mov
icebp
dec
in
push
cmc
xchg
test
ror
mov
mov
(bad)
fnstsw
test
sbb
cdq
repnz
clc
add
xchg
xlat
stos
dec
pop
jbe
outs
call
xor
xchg
dec
jnp
sbb
mov
jb
mov
int
push
sbb
dec
adc
push
xor
pop
test
or
mov
popa
or
mov
dec
and
pop
popa
cdq
and
mov
mov
rol
fcomp
xchg
aam
loope
je
mov
push
sbb
xchg
cmp
inc
adc
mov
(bad)
and
sub
sub
inc
adc
in
idiv
repz
fs
sub
les
cli
dec
jo
cmp
or
ds
xchg
outs
fs
lods
ins
pop
jb
mov
push
je
outs
dec
adc
in
add
adc
aas
inc
jae
fwait
loopne
jge
push
mov
loop
lea
inc
lods
test
in
add
add
shl
inc
mov
ss
rcl
iret
call
repnz
pushf
in
add
and
fbld
in
(bad)
lock
jbe
fstp
inc
sar
pusha
loope
xchg
pop
in
xchg
push
adc
adc
or
pop
loope
jle
cli
jmp
xor
inc
stos
rcl
or
add
int
sub
pop
in
loopne
imul
mov
loope
repz
shl
sub
add
retf
fild
cmps
fdiv
test
mov
xor
mov
(bad)
cmp
mov
jle
(bad)
and
nop
dec
push
xchg
into
xchg
rcl
dec
and
(bad)
push
ret
mov
cli
enter
jmp
je
jmp
fdiv
mov
add
adc
aaa
mov
add
fdiv
test
lods
mov
stc
jle
repz
sbb
pop
push
mov
repnz
xchg
ror
mov
(bad)
cmp
stos
and
push
cld
mov
ror
cli
repz
and
sbb
ss
das
jns
in
pop
(bad)
jl
pop
add
xchg
clc
adc
enter
ror
xchg
in
lock
stos
pop
push
xchg
cmp
adc
daa
stc
loope
xor
out
mov
(bad)
inc
movs
mov
mov
mov
sbb
fld
cld
test
aad
pop
fst
jns
pop
sbb
inc
out
gs
push
(bad)
sub
sub
xchg
push
(bad)
dec
cmc
push
sub
mov
pop
pop
fcomi
mov
pop
sahf
retf
(bad)
xor
push
xlat
ss
nop
fucom
sbb
mov
inc
retf
pop
movs
jp
pop
sub
shr
stc
or
cmp
clc
test
adc
fimul
not
jle
scas
mov
(bad)
js
or
or
push
out
(bad)
push
jmp
xor
jbe
imul
sbb
pop
into
xor
rcr
stc
test
or
sti
xchg
lds
xor
pop
jnp
shr
enter
lock
adc
mov
iret
xchg
imul
daa
jnp
mov
jnp
test
cmp
(bad)
pop
cmp
cmp
mov
jb
out
(bad)
sub
push
pusha
int3
nop
inc
adc
sub
cmc
pusha
call
mov
imul
sub
stos
aas
inc
int3
loope
xchg
gs
retf
imul
lods
test
pop
scas
movs
cwde
add
popf
dec
cmp
in
test
xor
fnstcw
sbb
popf
mov
popa
shl
out
or
push
mov
mov
je
and
in
jnp
cmp
out
(bad)
aam
pop
pop
mov
shl
pcmpeqw
out
sub
cli
xor
out
leave
cmc
movs
popf
and
popf
ja
fidiv
inc
dec
(bad)
push
sub
movs
jns
and
ror
dec
cmc
(bad)
adc
jecxz
sub
retf
mov
xchg
rcr
sub
add
pop
adc
loope
fcom
inc
pop
pop
jl
inc
mov
sbb
or
cmps
call
ret
ins
xchg
or
push
mov
sub
push
repz
xchg
stos
test
xchg
test
mov
popf
cmp
mov
xchg
or
(bad)
dec
int
shl
sub
xor
movs
mov
test
push
mov
mov
xor
into
ret
or
mov
pop
cld
jnp
add
iret
push
frstor
sbb
xchg
scas
sub
adc
dec
test
out
int3
or
push
push
or
je
lods
loop
add
gs
and
and
xor
mov
ja
add
xor
fadd
frstor
rol
mov
sbb
fsub
inc
rcl
fdiv
inc
cli
idiv
out
in
sbb
mov
jnp
sbb
mov
(bad)
cs
stos
je
enter
push
mov
pusha
lods
shl
jnp
ret
loop
add
and
scas
pushf
sar
cld
jns
add
repnz
stos
retf
stc
leave
shl
mov
xchg
fisub
dec
push
jg
push
in
jmp
mov
pop
mov
test
std
add
adc
sub
mov
cmc
cmp
mov
cmps
leave
jmp
add
cld
fcom
mov
jb
std
adc
xchg
nop
mov
movs
jge
jmp
mov
inc
sahf
adc
bound
rcl
lods
sbb
xlat
mov
test
mov
icebp
test
pop
xchg
leave
imul
pusha
push
adc
js
xor
ret
cmps
cmps
push
shl
inc
add
fwait
fwait
aad
or
pop
sbb
imul
mov
sbb
xchg
pop
pop
mov
lahf
sbb
shr
push
mov
add
push
repz
push
or
push
xchg
mov
fdivr
adc
push
mov
sub
call
or
ins
pop
xchg
inc
xchg
adc
sub
pop
and
add
jno
inc
into
pop
jo
outs
fwait
sub
sub
cmp
jg
test
dec
(bad)
cmp
and
mov
arpl
sbb
pop
out
adc
cmp
xchg
push
aad
aam
int
pop
add
aaa
(bad)
push
mov
sub
lods
push
cmp
mov
stos
aam
loop
inc
jne
mov
inc
in
call
es
in
mov
mov
mov
jecxz
fs
clc
cmp
add
setne
es
js
pop
retf
dec
add
xor
inc
xchg
gs
loopne
nop
fs
loop
mov
jp
ret
mov
jb
mov
bound
cmp
jle
xor
movs
push
jle
jne
lods
add
rcr
sbb
mov
mov
nop
mov
cmp
adc
adc
std
xor
jmp
pop
leave
ss
sub
mov
mov
jge
mov
popa
sbb
push
rol
adc
mov
inc
sahf
out
loop
div
cmc
jmp
sbb
dec
xchg
pop
sbb
jb
in
adc
aad
stos
mov
xor
int3
add
pop
sbb
add
jb
retf
(bad)
iret
retf
sar
not
je
xchg
dec
dec
or
inc
add
ret
cli
dec
fsub
mov
pop
sub
daa
ins
scas
jns
sub
or
movs
jmp
jecxz
sbb
leave
(bad)
jmp
outs
aas
cdq
mov
cmc
push
lds
test
test
aad
mov
adc
xchg
out
add
pusha
std
or
sub
out
cmps
mov
pop
in
js
arpl
mov
mov
aas
mov
call
and
fld
inc
pop
sub
out
dec
jge
inc
fcos
push
pop
fimul
xchg
aas
sbb
cmc
idiv
cmovs
mov
jns
sbb
xchg
and
gs
cmps
pop
mov
les
imul
mov
leave
cdq
inc
and
adc
mov
adc
cmp
pop
pop
push
jmp
jns
or
adc
sar
sbb
popf
shl
mov
mov
xchg
sbb
ficomp
push
xchg
inc
inc
push
mov
test
stc
cmp
cmp
out
lods
test
(bad)
xchg
int
(bad)
(bad)
imul
jecxz
add
into
loop
ins
dec
in
cmp
mov
fdiv
xor
cs
push
iret
push
stos
sub
les
inc
xor
pushf
cmp
push
addr16
int3
in
lahf
aaa
xor
popa
xchg
out
inc
int3
enter
adc
and
xor
stos
and
dec
dec
call
sbb
add
retf
arpl
add
mov
mov
mov
xchg
push
or
inc
retf
(bad)
xchg
cwde
mov
and
push
test
inc
and
je
arpl
jmp
jbe
push
push
out
cmp
loopne
mov
push
jmp
inc
pop
push
xor
adc
sti
xor
and
dec
xchg
in
leave
aaa
rcl
mov
mov
inc
ret
stos
mov
test
mov
xor
cmp
add
sub
mov
cmp
arpl
mov
in
xor
jle
and
jb
jbe
out
scas
pop
lock
push
push
or
call
popa
push
inc
and
shl
pop
xor
mov
in
and
test
cld
sub
mov
dec
add
movs
sbb
dec
in
jns
ror
pop
xchg
add
aam
mov
add
push
mov
enter
jns
cmp
xchg
inc
(bad)
je
inc
jl
sti
popa
push
movs
ins
mov
xor
sub
cmp
lods
mov
sub
mov
iret
and
aas
push
mov
inc
imul
mov
xor
cmps
cmp
dec
xor
and
repz
inc
lods
sbb
push
in
and
ret
cmp
pop
in
inc
cdq
add
inc
jecxz
add
adc
push
aad
xchg
stos
mov
or
add
xchg
ror
jle
icebp
fist
in
jne
ja
fidivr
and
add
and
push
popa
inc
out
mov
mov
dec
mov
and
and
xchg
cmp
xchg
or
xchg
call
and
mov
jo
and
pop
ins
stos
shl
pop
push
loop
mov
gs
dec
sbb
mov
dec
retf
ror
ins
aam
mov
out
push
jmp
in
aaa
jb
adc
inc
scas
jmp
cmp
cmp
push
repnz
or
xlat
pop
call
push
scas
stc
cdq
add
mov
sbb
dec
xchg
pop
dec
arpl
pop
lods
loop
pop
sti
fdivr
jecxz
aaa
or
dec
push
xchg
repz
push
mov
inc
jno
push
repnz
fimul
cli
cmp
jl
xor
pop
push
cli
sub
aad
xchg
ins
out
mov
mov
cwde
add
mov
jno
loop
clc
call
sbb
dec
sub
fisubr
inc
lea
test
cli
mov
push
or
inc
xchg
mov
dec
aas
inc
fistp
or
pushf
nop
xchg
icebp
sbb
lods
(bad)
popf
mov
ss
mov
and
push
lods
adc
out
out
push
pop
cmp
inc
xor
test
in
call
aas
test
rol
jle
cwde
xchg
icebp
sub
xchg
es
test
das
push
fisub
outs
in
xlat
mov
xchg
xchg
push
add
push
ss
(bad)
lods
mov
xor
xchg
daa
pop
test
(bad)
clc
jb
jle
xchg
(bad)
lods
int3
cmp
push
mov
out
xor
mov
imul
pushf
xchg
adc
jno
fpatan
dec
or
jb
cmp
mov
mov
loope
into
push
and
ss
xchg
pop
mov
(bad)
sbb
jl
sbb
lods
test
jg
dec
scas
push
mov
ja
or
sbb
and
sub
ins
mov
jle
add
pop
xchg
pop
xor
fadd
imul
mov
inc
stc
add
xchg
or
push
add
mov
clc
pop
sti
mov
pushf
add
jl
nop
sub
jmp
shl
stc
and
jmp
or
(bad)
fst
imul
std
call
out
push
mov
cmp
mov
fcmove
call
fiadd
daa
jecxz
rcl
mov
ret
inc
or
and
fdiv
int
jge
je
lods
(bad)
adc
mov
std
test
push
mov
inc
push
or
test
adc
xor
rol
sub
mov
repnz
adc
scas
add
mov
jne
dec
es
retf
rcl
sub
movs
arpl
sub
hlt
sub
mov
jo
fnstsw
pusha
xor
imul
aad
sbb
bts
add
sub
xchg
das
(bad)
dec
dec
inc
mov
aam
fisubr
nop
jmp
inc
neg
push
call
iret
outs
repnz
or
and
jl
inc
jno
push
and
sar
test
int3
inc
retf
fwait
ds
out
jmp
loope
sub
mov
pop
cmpps
cmp
xor
push
jl
retf
int3
out
mov
test
sub
mov
jbe
jno
pop
mov
call
push
add
push
pop
xor
cld
push
jns
xchg
popf
mov
mov
add
scas
and
clc
cmp
les
sbb
cli
(bad)
jb
fwait
cli
ds
(bad)
pop
movs
push
and
sub
jo
(bad)
std
push
stc
dec
leave
int
mov
or
fmul
inc
add
je
int3
adc
mov
imul
adc
and
loope
push
hlt
mov
mov
push
out
jnp
xor
ss
loopne
or
fisub
jb
mov
cli
daa
or
dec
dec
out
fwait
ins
fdiv
dec
jno
adc
jns
retf
sbb
mov
stc
pop
or
stc
mov
ds
mov
sahf
mov
sbb
mov
inc
lods
mov
mov
sahf
int3
jnp
pop
push
movs
fimul
leave
inc
mov
xchg
and
pop
lea
enter
pop
daa
push
repnz
jl
dec
int
xchg
mov
lods
push
leave
jmp
mov
addr16
jo
fmul
mov
lea
cmps
dec
gs
in
gs
jmp
mov
mov
mov
test
out
ret
outs
mov
sbb
and
(bad)
mov
in
(bad)
jle
aam
loope
int
shl
call
test
jge
dec
out
or
pusha
test
inc
sahf
sbb
(bad)
pop
leave
push
jo
or
pusha
scas
in
scas
jne
mov
mov
ds
ret
inc
sar
test
jae
cwde
cmp
fidivr
cmp
pop
and
lock
scas
lods
(bad)
sbb
aad
jmp
push
(bad)
daa
fldenv
movs
into
adc
mov
mov
lods
and
fild
iret
xchg
stos
jb
(bad)
fs
scas
adc
icebp
inc
movs
clc
cmp
repz
jge
push
out
sahf
cli
pushf
mov
pop
hlt
sub
adc
xor
xchg
jge
repz
lds
ins
jae
push
pop
jbe
nop
fnsave
or
ss
or
sti
gs
push
mov
push
leave
adc
test
lea
dec
or
mov
retf
add
inc
sbb
cwde
xor
cmp
idiv
jns
add
cmp
xchg
cmc
es
pop
stos
mov
and
aam
adc
gs
xor
out
lods
pinsrw
bound
mov
movs
in
stos
test
inc
sbb
jmp
xor
inc
ins
sbb
pushf
iret
in
sbb
mov
pop
dec
push
aad
and
mov
push
push
call
or
pop
mov
and
xchg
call
mov
mov
mov
aas
pop
dec
(bad)
mov
sub
fnstenv
fild
add
dec
loopne
stc
not
lods
xorps
mov
sbb
and
mov
mov
movs
jns
push
and
mov
popa
(bad)
push
mov
inc
or
sbb
mov
push
pop
mov
pop
xor
jle
mov
cmp
xchg
iret
sub
int
loope
test
cmp
xor
outs
add
push
push
mov
cmp
xor
adc
add
mov
inc
(bad)
push
mov
mov
dec
data16
lds
cmp
fwait
data16
not
sbb
jno
xor
pop
inc
out
mov
cmp
add
push
dec
pop
xor
stc
xchg
sub
ins
hlt
dec
movs
and
lods
ret
loopne
sti
jg
stos
ins
aaa
mov
mov
push
add
sub
(bad)
mov
fsubrp
cmp
cmp
mov
scas
xor
xor
cmps
arpl
mov
sub
mov
xchg
out
add
mov
mov
pushf
jl
jno
sbb
mov
cmp
outs
inc
jmp
(bad)
fild
sub
dec
add
push
push
aad
xor
fist
mov
pop
stos
icebp
in
nop
icebp
sub
(bad)
icebp
enter
cmp
push
into
inc
pop
arpl
mov
inc
in
retf
pop
add
add
mov
fcomp
mov
ret
shr
mov
and
pusha
sub
fcmovne
push
rcl
pop
scas
or
std
test
fst
idiv
clc
pop
into
sub
ss
mov
jecxz
cmp
ret
and
xor
lods
popf
div
dec
test
aam
neg
adc
xor
sub
jp
lahf
js
stc
popf
jbe
fwait
add
ss
dec
test
dec
ja
and
stos
jle
dec
pop
loop
bnd
ins
dec
mov
(bad)
retf
xor
lods
shl
mov
xchg
cwde
mov
ret
mov
mov
cmps
cmp
stc
test
data16
ins
icebp
xor
pop
cmp
cmp
test
lds
xor
je
mov
loope
and
or
jecxz
cmp
test
mov
xchg
ins
push
jecxz
adc
mov
pushf
cmc
add
xchg
fcom
jae
mov
dec
lea
(bad)
push
mov
je
sbb
jne
fisub
cmp
jmp
fwait
and
or
nop
cmp
ficom
rol
cmp
xor
ret
inc
or
xchg
adc
fwait
mov
jnp
aad
scas
push
in
dec
mov
sbb
sbb
push
mov
cmp
xchg
shl
push
pop
dec
mov
fdiv
sub
lds
ins
movs
(bad)
and
add
pop
push
pusha
mov
xchg
ror
fst
add
dec
pushf
xor
dec
ds
jmp
ds
stc
cmp
add
or
(bad)
int3
jmp
dec
pop
call
iret
adc
inc
hlt
leave
sti
and
gs
cs
(bad)
in
adc
arpl
xchg
arpl
pavgb
and
cmps
dec
neg
jge
mov
(bad)
push
sbb
adc
outs
xchg
dec
inc
test
ins
fsub
lods
inc
enter
add
xor
fdivrp
pop
mov
fimul
(bad)
cld
cmp
and
or
mov
enter
push
cmps
daa
sub
dec
pop
push
inc
lock
mov
cmp
and
push
sahf
push
ret
cld
mov
cs
ret
imul
int
out
adc
dec
scas
ins
js
pop
add
or
mov
mov
nop
sar
cli
pop
movs
xor
inc
push
cmp
shr
mov
int3
and
fnsave
mov
(bad)
ss
fbstp
sar
push
xor
sahf
gs
popf
sub
push
in
stos
xchg
mov
mov
stos
fwait
jge
shr
xor
jns
mov
test
das
inc
xlat
mov
sbb
pop
xchg
sub
mov
aad
sbb
and
stos
push
mov
fnstenv
sub
outs
clc
call
fld
mov
sub
inc
es
ins
fist
fidiv
jle
push
adc
ss
or
int3
fidivr
ss
pop
xor
jge
fwait
dec
scas
pop
leave
sbb
xchg
mov
mov
sub
cmp
pop
ins
jp
push
sub
aam
and
or
mul
pop
pop
cmp
out
xchg
stos
push
add
test
ja
inc
lods
push
sub
shr
test
mov
push
pop
and
(bad)
pop
dec
mov
sti
fidivr
imul
xor
sti
xor
mov
jnp
stos
dec
mov
xor
sub
adc
mov
xor
jb
inc
sbb
pushf
sub
jb
inc
aaa
jne
or
mov
jecxz
cmc
mov
pop
dec
psubusb
and
in
imul
jns
pop
icebp
jmp
sahf
movs
add
mov
adc
mov
xchg
enter
or
ins
aam
test
mov
cwde
repnz
stc
mov
fsub
jmp
mov
xor
pop
mov
inc
add
bound
inc
push
mov
ins
stos
rol
mov
es
stos
xchg
pop
add
in
mov
ds
retf
popf
cld
ins
test
mov
popa
mov
fs
arpl
sub
pop
fild
pop
dec
cmp
adc
loopne
rcr
lahf
add
cs
push
mov
nop
push
jg
loopne
adc
xchg
imul
or
mov
int3
xchg
pusha
lods
add
int
lock
pushf
sub
sub
lock
sbb
xor
lods
or
sbb
cmp
add
movs
push
sub
dec
test
imul
arpl
(bad)
iret
jp
mov
aas
push
test
dec
mov
xor
cdq
sar
out
or
ret
adc
fadd
shl
dec
adc
and
mov
pop
jmp
sbb
test
mov
cmps
jne
iret
mov
cmp
and
inc
ins
ins
sar
call
adc
push
fcmovnb
xor
stos
stos
mov
dec
mov
xchg
ret
sbb
jo
pop
aad
mov
imul
jl
mov
dec
or
mov
xchg
add
dec
in
jbe
or
test
mov
sub
addr16
iret
xchg
sbb
clc
test
fcomp
stc
fmul
sbb
mov
xor
sbb
outs
lds
pop
cmc
jl
push
cmp
mov
test
js
cdq
(bad)
div
fistp
mov
pop
imul
jmp
shl
(bad)
and
loop
clc
(bad)
mov
jnp
jne
ds
xlat
dec
cmp
or
mov
(bad)
or
dec
shl
mov
scas
out
push
enter
scas
pop
dec
daa
test
pop
sahf
adc
mov
int
mov
cmp
add
mov
sub
mov
push
xchg
jge
xor
iret
sub
adc
inc
mov
adc
in
adc
sub
loopne
mov
(bad)
std
or
test
aas
fadd
adc
icebp
(bad)
sar
inc
xchg
cdq
or
daa
push
pop
rol
sbb
clc
bnd
xchg
(bad)
mov
aaa
sahf
cwde
cmp
mov
mov
loope
les
in
fiadd
and
ret
test
ss
and
ss
mov
popf
cs
dec
jg
or
inc
(bad)
jmp
jae
(bad)
push
add
pop
adc
jg
xor
bound
sub
lds
mov
icebp
arpl
mov
cmps
ja
data16
aad
mov
test
int3
pop
aas
mov
aaa
cwde
mov
adc
addr16
mov
jne
xchg
in
mov
pop
jle
les
and
fldcw
mov
mov
imul
dec
repz
pop
xor
ror
pop
jo
outs
pop
mov
mov
mov
jae
cmp
or
or
lods
add
movs
xchg
and
xchg
xor
push
sbb
sub
add
test
pop
add
mov
mov
cmp
inc
in
popa
sbb
loope
cmp
sub
push
mov
mov
aaa
(bad)
fsub
loope
pop
leave
mov
cmps
ss
or
jle
or
mov
xchg
sub
fild
push
xor
sub
jge
adc
and
ficomp
add
inc
icebp
fistp
sub
aad
popf
in
and
add
fisub
adc
pop
jge
push
punpckhdq
loope
(bad)
mov
dec
jb
cwde
jg
inc
mov
aaa
sub
adc
ins
mov
arpl
mov
in
cmps
sub
lea
nop
sbb
inc
hlt
adc
jl
fimul
add
sub
sbb
jns
cmps
mov
dec
jp
mov
sahf
stc
imul
sub
adc
or
movs
cdq
in
xchg
sbb
cmp
xor
cdq
jecxz
jle
lock
xchg
pop
lahf
lods
outs
dec
pusha
sahf
or
loope
xchg
push
stc
and
mov
in
xchg
adc
jecxz
mov
push
stc
sub
loope
sbb
xor
loope
je
iret
fs
arpl
cmps
pop
push
sub
sbb
jo
in
in
add
pop
pop
xor
adc
jbe
outs
and
xchg
clc
or
jnp
hlt
fsub
push
push
fist
cmp
add
adc
(bad)
sbb
sub
fimul
push
cmp
ficomp
mov
cmp
jp
gs
outs
cmp
data16
push
push
add
data16
das
or
cmp
imul
lock
imul
mov
jae
movs
rol
popa
mov
hlt
dec
push
xchg
pop
rcl
mov
cwde
sbb
imul
jae
cld
adc
cs
jb
fist
add
push
out
push
repz
add
nop
pop
jmp
fisub
cmp
mov
mov
jnp
dec
cmp
lods
loopne
add
sbb
mov
ins
rcl
jne
nop
(bad)
and
pop
in
sub
es
xor
cmp
jp
neg
cdq
jnp
mov
and
xor
add
outs
test
imul
imul
mov
xlat
sbb
jae
mov
mov
push
lods
xor
push
dec
or
push
sbb
pop
outs
loop
inc
push
test
stos
pop
cmp
inc
iret
(bad)
push
mov
cmc
pop
sub
cmp
scas
je
rcr
je
xor
sub
or
pop
xchg
pop
(bad)
adc
push
cmp
xchg
(bad)
call
mul
add
and
ss
jge
mov
jl
and
add
jbe
icebp
or
data16
fmul
in
pop
repz
int3
adc
xchg
rcr
loopne
inc
xor
mov
jg
pushf
aad
inc
and
out
cld
jg
ins
(bad)
fild
fwait
lea
fmul
or
mov
into
enter
xchg
sub
jp
popf
jb
jnp
cmp
jnp
(bad)
out
loop
loop
loopne
aaa
mov
push
jle
mul
retf
or
adc
shr
jno
inc
sbb
arpl
sar
and
add
ret
pop
rcl
in
mov
dec
outs
scas
cmp
xor
jge
shl
rcl
fld
xchg
mov
pop
(bad)
bound
sti
frstor
out
jbe
adc
retf
int3
pop
leave
inc
repnz
rcr
cdq
pop
test
in
das
mov
push
movs
jge
xor
jbe
out
or
lds
ror
dec
fcmovne
xor
sti
inc
ret
pop
add
dec
div
adc
call
sbb
out
mov
aad
in
lods
pop
inc
pop
dec
xchg
push
jmp
test
pusha
push
push
xchg
sub
push
nop
icebp
dec
into
push
inc
xor
sub
mov
mov
inc
leave
shl
jmp
inc
push
cmp
mov
jl
adc
mov
push
sub
inc
cmp
push
dec
jns
(bad)
int
or
sbb
or
dec
leave
jno
fldenv
mov
pop
call
jmp
mov
and
cld
dec
jmp
mov
sub
or
lods
and
cmp
mov
loop
cmp
push
add
outs
sbb
dec
mov
jbe
dec
adc
mov
sbb
ins
test
xlat
push
int3
adc
fs
fwait
movs
xchg
mov
retf
xlat
test
mov
imul
cmp
mov
cmps
imul
addr16
cs
movs
rol
mul
enter
push
not
ins
je
jne
push
(bad)
aam
aaa
jo
jg
push
jle
cmps
jecxz
or
loop
mov
sbb
fisub
dec
in
shl
jmp
mov
cwde
pop
(bad)
pop
(bad)
stc
js
shl
bound
cmps
nop
int
dec
dec
repz
fwait
cdq
sbb
cld
das
iret
mov
cld
ja
cdq
les
scas
loopne
pop
push
inc
lahf
push
sti
ss
xor
sbb
mov
inc
shl
mov
pushf
rol
sahf
cld
cmps
movs
inc
push
(bad)
std
jmp
adc
sub
call
js
out
test
ror
es
inc
test
pop
sub
mov
cld
clc
adc
movs
fcomi
ficomp
retf
adc
rcr
sub
and
inc
sub
rol
test
mov
das
dec
(bad)
aaa
iret
fsubr
push
adc
pusha
pusha
push
dec
inc
mov
outs
jb
ds
or
loopne
test
sbb
aam
sbb
lock
push
jmp
push
or
or
fcomip
retf
sbb
jo
dec
scas
dec
inc
xchg
mov
dec
aaa
mov
shl
sbb
cmp
test
sti
(bad)
rol
mov
push
pop
pop
lods
fimul
or
cmc
push
dec
adc
xor
sar
cmp
hlt
mov
sub
iret
xchg
jae
or
dec
gs
fsubr
mov
cld
pushw
outs
cmp
jo
and
sub
ficom
xchg
sbb
les
adc
push
rol
adc
ror
sbb
(bad)
(bad)
mov
and
add
test
popa
xchg
jo
mov
sub
adc
lea
adc
cmp
imul
jp
fdiv
enter
inc
cmps
pop
cli
cmc
lahf
scas
xchg
jmp
xchg
sbb
(bad)
jl
fstp
xor
imul
jmp
cmp
inc
jnp
xor
cmp
loop
cmps
sar
fs
stos
repnz
xor
daa
loope
cmps
mov
mov
sahf
js
or
add
cdq
sbb
sub
mov
sbb
mov
das
dec
fs
and
adc
sbb
sub
aad
xchg
inc
add
cli
mov
xor
cmp
mov
cmp
inc
xchg
popf
shr
aas
add
sub
dec
mov
mov
ficomp
cmp
sbb
loope
das
add
sbb
lock
sbb
loope
mov
mov
cdq
xlat
fdivr
ret
pop
push
dec
push
xor
mov
or
adc
lock
push
or
push
ss
xchg
lds
xchg
(bad)
sar
jmp
fistp
aas
jp
out
mov
mov
call
ficom
mov
mov
pop
cmps
nop
mov
(bad)
repnz
jae
daa
scas
arpl
out
inc
int3
out
sub
cmp
mov
repnz
adc
add
dec
push
adc
xlat
hlt
shl
scas
xor
in
cmp
push
test
mov
sub
cmps
jge
scas
sub
pop
xchg
xor
ret
mov
inc
push
fdecstp
jno
pushf
shl
sbb
mov
shl
push
(bad)
sahf
push
into
scas
(bad)
and
inc
outs
prefetchw
pop
popa
or
pop
outs
add
push
adc
cmp
add
sbb
or
je
or
sub
inc
(bad)
clc
adc
imul
test
sbb
aam
xor
mov
inc
sub
cmp
jb
inc
lea
jge
adc
inc
enter
or
ret
int
pop
inc
adc
inc
push
dec
adc
(bad)
fisub
add
cs
inc
adc
xor
(bad)
sar
add
sub
popa
mov
xchg
lods
neg
call
repnz
sbb
les
jno
mov
nop
pop
sbb
in
stc
jle
cmp
jnp
jge
lahf
test
(bad)
xlat
mov
xor
(bad)
imul
fcom
retf
in
jae
sbb
cwde
mov
retf
add
mov
or
pop
dec
cmp
mov
sahf
(bad)
dec
cwde
test
sbb
sub
cmp
fstp
cmc
ror
jg
push
mov
mov
pop
mov
lahf
jle
test
dec
inc
test
(bad)
push
mov
(bad)
push
sub
retf
add
in
sub
xor
sub
stc
or
adc
inc
and
ins
ins
jp
cmp
in
dec
and
inc
lahf
pop
push
adc
retf
cld
sub
fild
daa
dec
fild
or
fimul
outs
loopne
sbb
sub
cmp
dec
dec
pop
xor
jne
int3
mov
lea
jb
sub
inc
aam
and
push
or
pop
sbb
gs
ret
xor
out
ins
out
xchg
pop
cmp
cwde
xor
into
imul
movs
call
jl
or
aad
push
inc
and
adc
mov
xor
pop
cwde
lock
cli
js
cmp
xor
sub
lds
stos
cdq
cmp
xor
repz
push
or
sbb
mov
push
outs
lahf
mov
sub
stos
(bad)
adc
mov
mov
add
imul
loopne
rcr
movs
inc
push
inc
movs
ret
or
add
adc
mov
movs
ds
mov
cmp
cmp
fucomip
daa
std
not
mov
pop
fidivr
cmp
leave
add
xchg
mov
cld
xchg
stos
dec
es
dec
mov
push
jp
push
(bad)
adc
(bad)
and
xor
pushf
test
cmp
dec
or
xor
imul
or
das
in
sbb
xor
mov
cmp
loopne
imul
ja
inc
dec
xor
(bad)
push
and
inc
retf
dec
dec
fcomp
js
mov
lods
adc
out
test
mov
or
data16
dec
sar
pop
cmp
loopne
out
leave
adc
adc
ds
aad
and
mov
jb
pop
mov
inc
add
xor
ret
push
dec
cmps
ins
fild
dec
inc
imul
(bad)
dec
and
xor
jge
or
mov
xor
loope
cmp
(bad)
outs
or
ja
out
jp
pop
enter
add
jne
aad
loope
outs
mov
xchg
xchg
jo
fimul
fdiv
jne
loope
xchg
xor
test
dec
cmc
add
or
(bad)
ficom
push
adc
stos
(bad)
push
int
xor
push
adc
add
rcr
mov
and
push
push
sub
pop
sub
push
jne
sbb
mov
pop
mov
lds
adc
xchg
dec
cmp
ficom
test
call
mov
push
mov
hlt
dec
imul
inc
daa
and
cwde
pop
xor
pusha
push
enter
xor
mov
loopne
cli
sub
mov
ficom
cmp
inc
icebp
pushf
aam
in
xor
dec
push
cmc
jmp
(bad)
gs
(bad)
xchg
in
mov
xor
xchg
mov
das
cli
sbb
mov
and
(bad)
and
sub
mov
addr16
cmp
add
ins
inc
ret
or
or
cmp
xor
popf
iret
movs
test
daa
fimul
pop
or
sbb
cs
or
xor
xchg
rol
add
fld
cmp
sub
data16
or
sahf
or
and
or
jnp
sub
xchg
aas
enter
stos
enter
ja
sbb
mov
mov
xchg
xor
sbb
hlt
push
out
dec
xor
(bad)
sahf
out
fcmovne
jmp
scas
test
dec
(bad)
jmp
cmps
nop
pushf
js
mov
dec
cld
xchg
aad
pop
in
mov
pusha
or
jns
iret
push
test
call
pop
call
(bad)
mov
xor
sbb
mov
out
and
add
loop
add
sahf
(bad)
pushf
jne
push
mov
scas
inc
mov
pop
pop
arpl
jb
xchg
xchg
mov
push
in
cmc
in
ret
popa
or
iret
or
xor
xchg
adc
jae
rol
outs
mov
mov
sub
xchg
dec
mov
mov
scas
clc
push
and
add
outs
xor
adc
fcom
push
icebp
loope
fstp
data16
ss
out
pop
sub
cmp
pop
cmps
aas
jmp
sub
out
arpl
loopne
dec
jmp
scas
cmp
dec
bound
outs
add
dec
movs
in
ins
lds
sbb
mov
lods
dec
es
fisttp
cmps
pushf
fs
ins
push
popa
mov
loopne
dec
fimul
es
bound
ins
mov
jecxz
lods
cmp
cs
push
fistp
shr
inc
push
stos
inc
xor
mov
lock
(bad)
out
inc
in
call
xor
cmp
mov
cmp
sti
sahf
lahf
and
xor
nop
and
mov
push
and
jno
ins
std
mov
test
hlt
add
out
enter
add
add
and
jno
xchg
lods
hlt
hlt
xlat
sub
aas
or
retf
icebp
sbb
lock
jge
jo
jne
mov
sub
dec
jmp
inc
not
sub
mov
fadd
jno
fisttp
sti
push
pop
out
jle
push
pop
int3
pop
(bad)
fwait
int
sti
mov
mov
xchg
(bad)
push
pop
xor
aam
pop
aad
or
jnp
xchg
std
ds
je
sub
jge
push
pop
das
sbb
push
inc
inc
movs
sbb
hlt
cmps
inc
lea
push
sti
dec
adc
xor
sbb
mov
xor
mov
mov
test
mov
sahf
rol
xchg
jnp
loopne
mov
pop
rcl
jne
in
stos
inc
cmps
mov
pop
in
cli
(bad)
out
ret
sub
push
mov
sahf
(bad)
or
xor
and
xchg
pushf
out
pushf
jg
ret
mov
int3
mov
sbb
daa
pop
inc
sub
push
fcomp
or
mov
jecxz
sar
ja
xchg
mov
cld
stos
mov
push
or
jbe
or
sti
pop
stos
gs
ds
mov
clc
clc
push
cmps
mov
cmps
lea
loopne
jnp
rcl
bound
mov
enter
outs
gs
les
jle
and
in
pop
gs
or
fwait
sbb
lock
pop
cmps
cwde
inc
add
adc
xchg
(bad)
(bad)
and
inc
es
sbb
dec
fwait
cmp
cmp
cmp
popa
loop
inc
inc
mov
push
das
sbb
adc
xor
and
je
dec
cwde
out
push
mov
jo
push
jnp
inc
iret
jle
push
dec
arpl
cli
jns
and
repnz
les
dec
mov
call
xchg
pop
es
jg
jg
lods
aad
mov
pop
mov
int3
xor
arpl
and
jns
fldcw
pop
jno
sub
loope
jge
mov
push
sbb
xchg
cs
dec
shr
cli
dec
mov
mov
and
(bad)
and
outs
sbb
jbe
add
cmp
(bad)
mov
add
and
xor
cmps
scas
cs
(bad)
(bad)
dec
repnz
mov
push
mov
xor
repnz
aaa
fyl2xp1
jge
jecxz
mov
cmp
out
lds
fstp
(bad)
jmp
shr
popa
mov
push
cmps
popa
cmps
sbb
call
lea
mov
sub
in
and
cmp
mov
mov
jecxz
pop
out
pop
sub
xor
cmp
jg
ss
lea
adc
cwde
pusha
mov
wbinvd
jmp
aam
add
inc
or
sub
into
int
add
lahf
jmp
call
inc
sbb
jmp
push
cmp
repnz
(bad)
and
out
jmp
test
mov
sahf
loopne
pop
mov
je
mov
cmp
cmp
push
fdivrp
ret
mov
sub
gs
outs
loop
fsubr
add
mov
xchg
call
inc
and
das
test
fstp
mov
add
or
scas
mov
add
mov
test
dec
sbb
out
call
or
out
pop
jne
cmps
leave
or
daa
stos
gs
mov
sbb
outs
or
add
mov
dec
fwait
(bad)
xchg
imul
xor
pop
fsub
out
cld
xor
(bad)
adc
cmp
add
push
pop
mov
push
hlt
ins
inc
nop
pop
cmp
arpl
fadd
clc
movs
sbb
stc
(bad)
fdiv
test
push
add
push
cmp
sar
push
(bad)
xor
sub
push
xlat
and
cdq
inc
mov
cmp
fstp
fxch
les
mov
fxch
mov
gs
inc
ins
stc
add
inc
stos
jbe
hlt
cdq
scas
scas
cs
push
cli
add
inc
pop
movs
and
lahf
cmp
and
jbe
or
loope
(bad)
adc
ja
push
adc
adc
inc
repnz
stc
mov
or
fidivr
mov
jns
in
mov
and
cmp
ds
scas
pop
push
inc
fs
enter
add
inc
not
adc
xor
je
repz
stc
xchg
mov
fs
jo
aaa
dec
loop
add
in
jae
push
dec
imul
jg
out
push
mov
out
add
or
repnz
or
out
pop
lds
scas
pop
lds
mov
mov
adc
es
sub
(bad)
sbb
or
sbb
test
adc
or
adc
mov
das
xchg
and
dec
push
pop
ds
(bad)
repz
xchg
clc
jb
and
enter
inc
fwait
not
mov
adc
aad
in
xchg
mov
stc
clc
ret
jno
nop
push
pop
lods
call
push
loopne
mov
sub
data16
mov
and
out
mov
jae
lahf
pop
xchg
and
call
sub
pushf
lods
(bad)
hlt
sti
jb
and
(bad)
(bad)
int3
push
aad
xchg
pop
stos
js
test
sbb
add
(bad)
addr16
push
mov
hlt
sub
or
lea
xchg
int3
lods
inc
jl
xor
push
stos
cmp
push
iret
imul
add
shl
xor
mov
nop
cli
and
mov
hlt
mov
add
(bad)
fst
jmp
xchg
xor
push
stos
jnp
push
in
leave
cwde
cmp
inc
add
adc
lds
mov
pop
pop
or
mov
inc
push
sti
call
enter
out
mov
xchg
fwait
mov
dec
mov
cmp
jb
sbb
jbe
imul
mov
add
cdq
je
icebp
in
cmp
push
pop
mov
mov
mov
sbb
mov
mov
jp
dec
loopne
mov
dec
mov
ja
mov
addr16
pop
dec
lods
cwde
call
push
mov
xchg
xchg
scas
mov
das
aaa
xor
and
shl
mov
pusha
int3
inc
jnp
push
mov
movs
shl
xchg
fdiv
(bad)
(bad)
xor
ds
pop
mov
push
push
mov
cmp
or
in
push
icebp
mov
xchg
jnp
adc
mov
test
mov
cld
outs
xor
mov
mov
push
ins
arpl
movs
movs
xchg
das
outs
push
fcomp
xchg
xchg
mov
test
cmps
in
add
movs
sbb
popf
out
pop
pushf
cli
retf
lds
in
xor
jae
stc
in
xchg
adc
lds
rcl
jmp
xor
out
sub
or
mov
mov
mov
repz
cli
sub
(bad)
jns
ins
movs
ss
aaa
lods
cmp
mov
icebp
pshufw
out
mov
fld
out
sub
movs
ins
add
call
push
jno
push
cwde
mov
pop
adc
or
mov
sahf
sub
jb
in
xchg
ret
mov
dec
and
sar
or
and
loop
sub
mov
cdq
fidiv
mov
mov
and
aas
or
clc
dec
movs
fld
ret
into
jno
scas
ja
and
jmp
xchg
inc
push
xchg
or
ret
add
aas
push
sbb
das
das
mov
outs
push
push
shl
dec
mov
shl
inc
stos
mov
push
shl
ret
jp
cmps
loope
into
sub
pusha
add
cwde
les
mov
cmp
pop
and
mov
test
gs
xor
pop
add
stos
test
cmp
cmp
push
ja
inc
leave
into
sub
loop
(bad)
clc
xor
outs
mul
mov
and
inc
(bad)
sub
ja
xor
xchg
xor
xor
dec
xchg
cmps
and
or
outs
cmp
fist
sub
mov
xor
dec
xchg
xchg
into
adc
mov
mov
pop
imul
mov
jno
inc
sub
sbb
push
cmps
rcl
xor
stos
std
mov
addr16
in
xor
sbb
dec
test
fcmovbe
pop
xor
jbe
je
ret
aam
and
pop
mov
add
push
xchg
dec
in
lds
pop
adc
mov
movs
push
sbb
sbb
lods
add
push
push
or
cmp
mov
stos
sub
in
retf
test
and
(bad)
les
or
inc
pop
cmp
std
mov
lods
call
dec
(bad)
xchg
sub
ins
int
scas
imul
lods
rcl
mov
lds
pop
scas
shl
cdq
cs
ret
in
mov
mov
pop
jne
sub
popw
bound
jo
jns
fwait
pop
popa
cmp
dec
xchg
in
retf
sub
out
loope
arpl
repnz
or
(bad)
push
dec
hlt
test
leave
mov
jmp
push
shr
add
dec
aaa
loope
rcl
sub
aam
push
shr
int
mov
in
lds
xchg
add
enter
add
(bad)
call
cmps
out
in
jo
mov
aaa
sub
lods
pop
gs
sar
or
nop
movs
fild
pusha
test
mov
jnp
int3
jbe
fimul
ss
iret
sub
in
jmp
mov
sub
pop
cmp
xor
jp
pop
push
dec
sbb
dec
rcr
imul
add
xor
adc
jecxz
int
outs
and
mov
not
jmp
fnstenv
push
mov
pop
mov
jmp
pusha
jmp
xor
retf
je
enter
fimul
out
pop
movs
outs
(bad)
cmp
jmp
repz
push
fld
inc
je
out
and
xor
lea
imul
xchg
jbe
in
movs
sbb
js
pushf
cld
sar
adc
or
mov
xchg
es
xor
sub
loop
js
ins
call
test
pop
fcomp
sbb
cwde
fs
arpl
cmp
adc
inc
in
lahf
lds
js
jecxz
std
in
pusha
rcl
and
adc
outs
push
bound
adc
pop
inc
adc
xchg
inc
inc
clc
das
leave
cld
test
push
icebp
adc
xor
xchg
jmp
xor
ror
inc
nop
sbb
lahf
repz
xor
pushf
cmps
sub
leave
pop
and
push
cli
ss
cdq
in
outs
rcl
mov
clc
movs
(bad)
mov
pop
hlt
pusha
sub
out
cmps
dec
mov
outs
ds
scas
jae
xchg
xchg
mov
push
test
cwde
inc
push
sbb
xor
imul
dec
add
int3
dec
or
pop
inc
push
or
pop
jecxz
jae
nop
nop
retf
in
inc
out
mov
ror
(bad)
(bad)
das
cmp
das
push
adc
jge
cwde
mov
in
icebp
add
xlat
shr
not
mov
inc
jle
leave
cmps
inc
xor
les
jg
aaa
xchg
mov
adc
xchg
les
xchg
fcom
leave
cmp
mov
cdq
outs
mov
retf
js
xchg
fcmovnu
xchg
lods
pop
or
nop
push
cmp
mov
add
add
mov
adc
cmc
xchg
int
dec
push
shl
and
std
jp
push
jb
xor
ins
and
inc
in
sub
out
dec
push
push
retf
ja
sub
mov
repnz
shl
aas
jns
jle
aaa
jbe
mov
fs
mov
sub
aad
mul
mov
mov
cmp
add
xor
outs
test
xchg
push
shr
ja
leave
push
test
and
sbb
sbb
cmp
lahf
call
lahf
imul
xor
xchg
sub
test
ss
mov
adc
dec
aas
jmp
sbb
xchg
jp
inc
mov
and
dec
mov
gs
mov
or
jo
jmp
aas
js
gs
jae
lods
ins
inc
jae
aas
pop
call
(bad)
xchg
push
fidiv
inc
int
cld
xchg
mov
in
sti
dec
fwait
outs
jne
popa
daa
inc
dec
xor
mov
mov
pop
sub
movs
scas
jne
leave
mov
mov
cs
jne
jno
movs
es
int
out
imul
and
bt
in
sahf
sub
adc
aas
inc
jle
dec
cld
mov
ret
mov
retf
adc
(bad)
sub
and
inc
inc
xor
jg
ss
imul
or
or
repz
cmps
stos
pushf
in
dec
mov
sbb
call
xchg
(bad)
cmc
cmp
add
push
jns
and
inc
ss
inc
out
cmc
outs
outs
mov
test
cmc
mov
ret
mov
jecxz
aam
ret
inc
sub
push
and
adc
or
int3
dec
sbb
test
mov
pop
bound
jne
ret
jge
jmp
push
jmp
mov
scas
lds
nop
lods
add
(bad)
xor
lahf
sbb
ror
leave
or
cmp
(bad)
cmp
imul
jb
(bad)
jecxz
mov
sahf
pusha
test
lods
xlat
cmp
push
inc
mov
jge
push
loopne
shr
or
ss
or
fisttp
lahf
add
outs
push
mov
cli
mov
rcr
test
daa
push
adc
loopne
repnz
jmp
std
mov
outs
inc
lock
mov
adc
dec
push
ret
ret
jbe
rol
pop
das
(bad)
in
mov
sbb
adc
scas
into
xchg
out
popw
push
push
cmp
fstp
mov
sti
scas
add
cmc
(bad)
mov
ins
(bad)
repnz
push
mov
inc
adc
ins
in
iret
data16
loop
or
mov
dec
fdivr
div
imul
mov
ret
movs
push
ins
pop
icebp
and
addr16
push
or
repz
inc
xchg
lds
(bad)
in
gs
xchg
movs
cmp
mov
cmps
mov
xchg
movs
push
fisttp
mov
das
(bad)
icebp
pop
sbb
mov
push
bound
and
in
xor
bound
pop
inc
stos
stc
push
mov
xchg
jg
cmp
sub
adc
xchg
aam
xchg
dec
inc
(bad)
jne
add
mov
adc
push
push
lea
cmp
mov
je
jno
sub
repz
dec
int
jmp
ror
cmc
mov
sub
retf
in
iret
add
cld
dec
scas
inc
mov
mov
push
pop
nop
out
sub
cld
cmp
pop
into
loopne
mov
adc
dec
mov
cwde
xor
shl
ret
popa
mov
xlat
outs
pop
pop
push
dec
sbb
aas
ret
in
scas
cmp
or
mov
int3
sbb
push
cmps
mov
mov
mov
(bad)
mov
idiv
(bad)
jge
push
sbb
loopne
push
out
fmul
out
xchg
fsub
loope
fcmovnu
ret
pushf
mov
mov
movs
scas
loopne
pop
mov
jmp
add
sub
ja
in
mov
adc
pop
sub
pushf
sbb
mov
adc
(bad)
push
adc
mov
mov
mov
test
fcomp
clc
lea
in
inc
test
pop
xchg
dec
sub
and
retf
mov
shl
cmp
push
retf
ret
xor
repz
shld
push
push
jae
mov
jno
xchg
adc
jne
add
sub
sub
adc
sahf
xchg
(bad)
(bad)
ret
adc
sbb
(bad)
out
mov
xchg
dec
lock
jns
or
je
sub
xchg
mov
jle
and
dec
mov
(bad)
fstp
mov
dec
js
mov
inc
xchg
or
push
cdq
pop
mov
out
add
ret
xor
adc
repz
sub
lds
lods
aad
push
jmp
ds
aas
ret
mov
cs
or
mov
mov
retf
sub
mov
test
add
jne
add
sub
ds
push
and
xchg
inc
mov
dec
hlt
stos
cmp
adc
dec
cmps
sbb
mov
inc
fst
aaa
imul
lds
and
cs
shl
xchg
mov
push
and
push
or
lahf
push
stos
pop
jg
pop
sti
mov
fs
cmp
outs
(bad)
mov
cli
gs
pop
inc
mov
(bad)
(bad)
push
bound
gs
jnp
cwde
adc
aam
push
xchg
out
jae
dec
cmps
inc
cmp
and
sub
inc
inc
adc
cmp
push
push
dec
sti
adc
push
adc
jecxz
xchg
or
fistp
out
xchg
call
push
xchg
ror
dec
and
cmp
add
xchg
push
cmp
or
(bad)
and
push
cmp
scas
fdiv
stc
mov
pop
mov
sub
sub
ins
pop
test
inc
popf
pop
fidiv
fsubr
mov
and
gs
push
aas
not
xchg
pop
fsubrp
iret
imul
push
add
sar
adc
inc
fnsave
int
repnz
lods
jno
popf
mov
ins
aaa
lds
sbb
icebp
stc
inc
mov
into
jb
fnstenv
pop
jnp
add
popf
jmp
in
addr16
cdq
push
inc
cmp
mov
cli
sub
mov
jge
mov
sub
ds
call
out
inc
lahf
mov
mov
repz
rol
pop
ja
mov
or
cmp
add
bound
pop
jle
xchg
loop
(bad)
mov
inc
or
dec
popf
xchg
or
out
add
mov
add
mul
add
inc
jecxz
push
adc
xor
xor
call
aas
in
adc
mov
repnz
frstpm(287
test
mov
xchg
push
js
or
fist
sub
xlat
xor
loopne
jp
mov
mov
sub
sbb
cmps
(bad)
and
adc
jmp
arpl
fcmovbe
ss
movs
inc
in
jl
test
mov
in
cmp
push
push
pop
xchg
lds
cmps
shl
push
aas
dec
xchg
das
imul
pushf
mov
ret
fistp
je
mov
add
push
push
(bad)
movs
sub
lods
mov
test
mov
es
jecxz
add
pop
es
push
test
adc
xor
ja
mov
nop
dec
retf
scas
addr16
in
movs
in
outs
aaa
repz
pop
xor
add
jp
stos
aam
or
dec
lods
out
jne
std
sbb
je
and
in
call
adc
inc
push
push
mov
les
mov
jp
sbb
inc
mov
pop
cld
fstp
test
add
test
ret
mov
and
jae
rcl
test
dec
movs
adc
adc
retf
xchg
push
mov
jno
xor
sti
in
xchg
sub
das
add
popa
shl
and
test
cli
xchg
or
arpl
dec
cmp
lahf
add
add
jbe
sub
jmp
jecxz
aad
xchg
cld
cli
mov
pop
add
adc
cmp
jne
push
(bad)
pop
sub
pop
daa
stos
cmp
mov
xor
sbb
inc
inc
inc
loop
sub
cmps
mov
movs
stos
popa
mov
sub
mov
add
xchg
dec
pop
mov
hlt
mov
adc
mov
stc
adc
popa
xchg
add
std
scas
ficomp
das
mov
or
(bad)
and
sahf
adc
movs
pop
je
aam
pop
and
test
adc
stc
mov
fwait
aas
in
sub
and
sub
out
and
jge
xchg
xor
aaa
pop
stos
rcl
cmp
and
mov
mov
sbb
jno
in
and
out
sbb
xor
xchg
jg
imul
mov
in
mov
aaa
mov
add
ins
jge
gs
enter
rol
clc
push
pushf
retf
push
jle
shr
sub
repz
loopne
pop
cmp
mov
jl
lods
in
jmp
jl
xchg
xlat
sbb
dec
in
jge
aas
(bad)
imul
scas
out
jne
ds
pop
or
or
imul
pop
les
ds
mov
adc
cmp
(bad)
jmp
jnp
mov
and
sahf
clc
push
dec
pop
call
jns
xor
mov
sti
xchg
and
push
dec
retf
inc
push
in
add
or
nop
mov
pop
adc
dec
ucomiss
int3
ss
movs
mov
(bad)
mov
cmp
sbb
sahf
in
xchg
in
mov
test
or
jb
pop
pushf
lods
popa
sti
jo
or
mov
and
icebp
cmp
add
shl
fsubr
push
sub
pusha
xchg
retf
popa
(bad)
mov
jnp
inc
popw
sbb
inc
push
out
xchg
arpl
fadd
out
or
pop
rol
fcom
fwait
cwde
out
ficomp
dec
mov
test
scas
add
jmp
add
in
call
jmp
ret
or
imul
jbe
lea
push
das
sahf
loop
loope
xchg
fadd
add
int3
jge
(bad)
jbe
stc
jnp
cld
dec
ret
mov
xor
add
lea
dec
ins
and
pop
inc
cwde
pop
cmp
leave
mov
pop
lds
(bad)
cmps
mov
in
scas
iret
and
sbb
or
push
sub
jno
and
test
push
add
adc
adc
mov
lahf
inc
adc
jl
sahf
mov
jnp
push
xchg
in
push
cs
pop
jmp
repz
push
inc
in
div
xchg
cmp
ins
pop
add
cmp
pop
mov
(bad)
mov
xchg
xchg
sub
cli
mov
retf
addr16
cld
or
mov
ds
(bad)
jae
sub
mov
fnstenv
pop
leave
sbb
(bad)
xor
sti
inc
mov
adc
mov
or
lds
mov
add
sub
mul
xchg
lods
mov
iret
retf
xor
addr16
imul
rcr
and
adc
out
xor
not
dec
xchg
xor
inc
adc
mov
push
ficomp
in
fprem1
loope
mov
sbb
adc
add
jno
pop
add
stc
inc
aam
jmp
(bad)
lods
fs
push
in
dec
cs
lds
call
pop
mov
fisub
aad
xchg
call
(bad)
and
cmp
adc
pop
mov
pop
cdq
xchg
mov
and
jge
cmp
mov
aam
ficom
(bad)
test
mov
mov
pop
cmp
add
fwait
pop
cmp
in
jmp
fdivr
xchg
mul
jge
pop
xchg
rcl
sti
leave
xchg
and
stos
fadd
aas
ss
sbb
inc
gs
lock
aaa
push
push
retf
(bad)
jo
data16
jo
ret
fdiv
mov
in
sbb
shl
mov
jne
stc
jnp
sub
cmp
clc
sar
sub
xchg
aam
adc
push
inc
adc
sbb
ja
(bad)
adc
out
out
sub
xchg
std
loop
xchg
and
(bad)
cdq
jo
cmp
pop
(bad)
ds
es
outs
test
jo
jg
imul
rcr
xor
push
stos
pop
mov
lahf
imul
and
fnsave
mov
out
jecxz
cmps
fwait
inc
outs
(bad)
loop
xchg
dec
and
adc
ror
inc
pushf
loope
jle
cmc
ins
(bad)
cld
adc
mov
sub
lods
sub
ss
inc
repz
movs
(bad)
shr
data16
les
sbb
es
push
xor
xchg
push
jg
inc
sub
or
inc
loope
fidiv
mov
pushf
xchg
xchg
mov
add
push
dec
dec
imul
in
xor
dec
setbe
add
retf
pop
aas
cdq
mov
jmp
repz
add
adc
movs
jle
xor
adc
js
inc
and
pop
sub
jb
(bad)
daa
test
int3
sub
jge
dec
(bad)
call
sbb
push
imul
test
or
ja
cmp
stos
mov
cmps
popa
jo
cmp
push
repnz
sub
lock
pushf
pop
push
push
ret
jp
cli
clc
pop
or
cmp
repnz
push
push
pop
lods
fsubr
cdq
sub
shl
popa
in
cli
jae
adc
inc
mov
mov
dec
sti
test
xacquire
xchg
adc
mov
xor
push
sub
adc
mov
and
and
jge
stos
cmp
neg
pop
xchg
out
fdivr
sbb
gs
xor
inc
loop
mov
out
mov
in
sub
ret
aaa
lods
dec
neg
jbe
mov
mov
out
(bad)
stos
ret
ret
mov
cmp
fisub
push
jecxz
inc
loopne
ficom
fisubr
mov
cli
mov
jno
jmp
ja
test
lahf
(bad)
call
jp
lods
in
int3
xchg
mov
or
je
mov
dec
add
pop
cmps
jmp
dec
(bad)
js
fs
daa
(bad)
fdivr
or
es
jg
and
cwde
pop
add
xor
loope
pop
je
jb
jne
inc
dec
inc
hlt
out
clc
jg
mov
repz
gs
mov
xlat
retf
sbb
out
pushf
pop
push
in
xor
stos
push
imul
clc
or
cmc
stc
inc
push
xor
push
adc
dec
push
shr
enter
rcr
ds
movs
fwait
iret
test
pop
sub
mov
(bad)
gs
push
sub
test
cwde
adc
jmp
mov
mov
ds
scas
shr
sub
jns
scas
out
mov
inc
data16
div
mov
inc
mov
push
shl
icebp
push
mov
push
loopne
clc
sub
add
inc
inc
mov
mov
bound
sub
enter
mov
out
jo
adc
sbb
sbb
js
jp
sub
or
mov
popa
stos
shl
add
dec
dec
dec
cmps
inc
jmp
lods
aas
adc
clc
aam
pop
or
xlat
jae
lahf
stos
adc
test
xchg
add
mov
dec
xchg
hlt
lea
pop
sbb
aas
repz
jl
aaa
xchg
and
mov
cmc
cmp
jmp
fsub
mov
loope
sbb
sbb
popa
nop
pop
and
je
in
cdq
sbb
adc
jge
push
lock
mov
sbb
or
cmc
xchg
sbb
or
mov
push
sub
add
sub
inc
loope
sub
cmp
inc
je
adc
cmp
or
shl
inc
iret
sbb
mov
push
pop
in
in
imul
jmp
retf
xchg
adc
dec
xchg
retf
test
ins
fwait
outs
clc
xchg
dec
mov
pop
dec
sbb
and
in
pop
jmp
aaa
clc
add
call
xor
mov
outs
int
add
add
stos
push
xor
mov
mov
dec
std
cmp
push
daa
or
das
mov
and
loope
push
aad
cmc
sub
lock
test
rcr
mov
repnz
push
fdiv
mov
or
jl
mov
push
out
test
in
(bad)
jnp
mov
sub
js
or
or
pop
es
dec
lods
mov
pop
mov
cmp
sbb
cld
adc
mov
lea
pop
push
push
dec
xchg
loope
fwait
dec
and
xor
pop
aad
xor
popf
xor
(bad)
jmp
add
jmp
lods
sub
push
push
pop
popa
sbb
pop
push
mov
inc
or
arpl
out
cwde
(bad)
or
scas
call
in
mov
adc
imul
faddp
icebp
stos
sub
cmp
mov
lock
push
out
rcl
push
(bad)
dec
sahf
js
das
int
out
add
and
mov
ret
repz
pusha
push
mul
pop
shl
cdq
out
mov
sahf
out
dec
pop
in
sar
jmp
pop
pop
aad
and
or
adc
data16
cmps
xor
out
adc
mov
cmp
repz
xor
fist
pop
cmp
jle
push
and
imul
mov
sbb
mov
retf
loop
jecxz
jnp
aas
ror
mov
inc
push
cli
into
mov
pop
bound
arpl
scas
neg
ins
inc
sbb
outs
daa
es
(bad)
stos
sub
nop
pusha
inc
stos
cmp
stos
push
push
les
add
cmp
pop
cld
inc
dec
jo
inc
clc
pop
jno
repnz
xor
xchg
add
test
fild
popa
js
jbe
movs
dec
jns
mov
sbb
xor
mov
and
push
pop
shl
fidiv
test
retf
cmp
test
lods
sbb
or
push
push
and
and
pop
aam
cmp
jle
mov
pop
mov
sub
push
xlat
lock
lock
jno
xchg
fist
mov
int3
imul
cmp
adc
or
inc
sbb
test
ins
test
inc
enter
adc
cld
push
(bad)
out
imul
das
(bad)
push
pop
jmp
xchg
adc
aas
jg
pop
outs
data16
xor
mov
in
int
(bad)
dec
push
and
lods
jge
cld
in
xor
mov
cmp
sub
leave
in
pop
jmp
cmp
loopne
sbb
jns
and
mov
sub
ret
out
pop
mov
or
test
dec
inc
loopne
inc
in
and
(bad)
lock
jle
ins
dec
jg
xchg
rcr
jbe
aaa
hlt
fidiv
pop
neg
fiadd
shl
(bad)
fcmovnbe
pusha
push
aaa
inc
repnz
daa
movs
outs
test
xchg
movs
fwait
mov
ficom
imul
inc
repz
shl
repnz
clc
and
xor
stc
inc
clc
(bad)
inc
not
std
add
call
fsub
sub
push
push
sub
mov
sub
test
sbb
movs
push
and
pusha
ja
fwait
dec
pmaddwd
mov
adc
out
jmp
rcr
jp
dec
pop
not
jb
jne
test
das
pushf
fwait
ins
jmp
cmp
and
inc
push
mov
cdq
adc
or
dec
daa
cmp
mov
sub
aaa
ret
jmp
(bad)
pop
dec
jbe
xor
cwde
cmp
cmp
(bad)
jecxz
cmp
and
fs
dec
pop
mov
or
ror
sbb
pusha
and
hlt
cs
scas
repnz
scas
clc
adc
mov
loope
mov
push
pop
cwde
mov
cs
fisub
pusha
mov
add
popa
push
arpl
xor
xor
idiv
call
mov
add
fmul
xor
fld
div
pop
pop
push
fistp
out
or
clc
mov
imul
fidiv
and
test
xchg
mov
mov
push
(bad)
(bad)
dec
shl
cs
int
addr16
jne
add
ret
or
ins
daa
jmp
adc
fidivr
or
pop
mov
inc
inc
(bad)
iret
cmp
rol
dec
sti
push
loopne
ret
aam
xor
sbb
mov
jmp
mov
(bad)
fistp
add
lods
pusha
mov
mov
out
jbe
inc
mov
mov
pop
sar
retf
xor
mov
mov
movs
sub
enter
dec
add
cld
in
mov
mov
daa
push
ins
scas
loopne
pushf
inc
and
(bad)
ja
cmc
push
sbb
dec
int
and
mov
repnz
mov
ret
mov
add
aas
sbb
call
icebp
imul
pop
lds
call
jo
pop
pop
dec
xchg
dec
cs
pop
jle
cmp
xor
imul
pop
sbb
mov
mov
fnstcw
xor
mov
xlat
cld
mov
and
pushf
outs
add
mov
push
sbb
and
loop
les
push
adc
push
and
xchg
push
test
or
inc
leave
and
xlat
add
pop
pop
sub
jno
cli
rol
adc
dec
pop
jmp
inc
mov
aaa
stc
cmp
movs
aad
and
repz
ffree
jno
jle
out
shl
mov
pop
aad
xor
jl
call
cmps
or
adc
add
fisubr
ins
(bad)
imul
cdq
(bad)
jg
int3
mov
mov
mov
aad
jmp
push
out
mov
pop
inc
mov
addr16
mov
aam
scas
arpl
cmc
sub
loope
mov
imul
jecxz
ficom
mov
(bad)
mov
imul
pop
lea
icebp
or
jns
shr
lds
in
add
shl
cmps
jp
int
or
es
daa
or
stos
jns
push
cmps
lds
dec
jno
aas
fwait
retf
dec
mov
sub
sbb
and
aaa
or
adc
adc
jno
fwait
aas
into
or
dec
push
in
call
scas
or
mov
adc
pushf
mov
push
xrelease
ins
or
scas
pop
js
fbstp
jecxz
push
mov
ins
inc
scas
loop
push
adc
push
dec
adc
in
(bad)
push
xchg
ins
fst
pusha
sub
and
and
mov
ret
jbe
outs
into
pop
push
sub
das
dec
mov
int
cmp
sbb
dec
push
ror
jecxz
xor
adc
test
in
xchg
(bad)
loopne
out
fisttp
ret
adc
and
add
add
add
add
cli
jo
(bad)
aaa
(bad)
sub
cmp
xor
(bad)
jl
stos
pop
rol
inc
push
(bad)
fwait
(bad)
scas
fistp
retf
outs
movs
mov
sbb
jmp
xor
cmps
and
out
fdiv
push
pushf
lds
popf
std
out
inc
arpl
push
push
sub
out
fdiv
adc
rol
sub
stos
jge
push
(bad)
mov
pushf
cmps
repnz
xchg
loope
xor
mov
and
push
inc
lds
mov
(bad)
sbb
jecxz
ins
jp
out
clc
sub
icebp
jle
mov
xor
dec
aas
fadd
es
xchg
das
mov
sub
sub
arpl
xor
stos
mov
jne
mov
and
ss
sub
pop
sub
adc
fldl2e
imul
loop
in
xchg
ins
int
in
mov
sti
daa
push
inc
hlt
rol
pop
es
out
addr16
test
inc
or
sti
mov
enter
push
mov
jg
inc
stc
cld
dec
xlat
pusha
adc
push
rol
xchg
cmp
xchg
je
jne
nop
pop
xchg
out
lods
aaa
mov
fistp
jmp
dec
dec
imul
cmp
(bad)
dec
mov
lock
add
es
in
mov
mov
push
mov
and
fdivr
scas
adc
or
xchg
int3
inc
(bad)
jmp
jecxz
inc
dec
loope
gs
push
xchg
adc
pop
mov
jnp
(bad)
jnp
xor
dec
ret
dec
xchg
ret
adc
dec
xchg
inc
pop
xchg
or
dec
or
jmp
xor
test
inc
outs
inc
sub
repz
xor
adc
mov
mov
and
mov
retf
or
leave
dec
xchg
xchg
cld
in
popf
sub
cmp
repz
aaa
fisub
pop
sbb
aam
popa
jnp
sbb
test
pusha
mov
scas
pop
xchg
jl
jo
xchg
scas
pop
test
shr
fcom
int
mov
jl
in
xchg
lods
cdq
pop
cmp
ret
in
inc
sub
mov
dec
jp
jp
cmp
xchg
daa
xchg
movs
lock
jmp
xchg
xchg
out
push
movs
xor
inc
mov
imul
(bad)
adc
add
dec
out
shr
movs
dec
in
push
(bad)
dec
dec
rcr
shl
mov
cwde
nop
xor
mov
and
xchg
pop
movs
fcom
jg
loopne
lea
inc
or
bnd
xor
mov
test
xlat
out
aad
jb
sti
or
push
cmp
jnp
int
jmp
clc
and
fadd
mov
aam
mov
inc
mov
bound
mov
aam
sbb
shl
adc
lods
sub
fcmovne
movaps
aas
sbb
xchg
jno
les
jbe
cs
sbb
aaa
call
into
xchg
xchg
push
ja
xchg
and
outs
fmul
clc
repz
movs
sbb
add
cs
xchg
cs
fdiv
stos
mov
mov
mov
sub
and
xor
mov
jnp
push
cmp
je
inc
rcl
adc
movs
nop
sar
repnz
mov
das
bound
enter
dec
bound
data16
sbb
xchg
pusha
push
mov
cmp
shr
push
(bad)
scas
retf
loope
fisttp
movs
cmp
cmp
(bad)
icebp
or
mov
mov
push
xchg
and
inc
mov
mov
sub
mov
inc
add
ds
sbb
or
cld
jmp
dec
or
adc
shr
sub
sbb
sub
in
dec
sbb
jmp
lea
dec
lea
or
push
and
add
ds
push
fsub
hlt
fwait
(bad)
rcr
jae
mov
mov
out
push
icebp
out
in
inc
dec
xchg
(bad)
jbe
add
(bad)
imul
gs
nop
sbb
popf
pop
and
(bad)
xchg
jne
dec
sub
into
jmp
mov
mov
pop
ret
add
lds
adc
pop
(bad)
mov
pop
out
mov
aaa
add
mov
inc
rcl
adc
sub
sbb
inc
lahf
daa
in
sub
jl
dec
jge
inc
loop
adc
sbb
repz
les
cld
jne
cmp
mov
std
pop
mov
cs
jp
mov
jp
shr
sub
jae
retf
xchg
not
mov
outs
int
pop
ins
jb
add
xchg
pop
sti
cmps
inc
idiv
sub
into
test
jo
imul
add
push
enter
dec
mov
out
inc
dec
xor
jno
(bad)
sbb
call
sbb
arpl
xor
pushf
dec
pop
fbld
push
push
push
and
sbb
fwait
(bad)
scas
xor
add
sar
js
ds
xor
int3
movs
mov
push
jae
popf
mov
rcl
xor
in
sub
not
mov
add
call
loop
and
rcr
jae
cmc
adc
psubq
jp
shr
fs
jns
or
mov
inc
cmp
jb
test
imul
dec
sbb
mov
xchg
dec
hlt
dec
sbb
aad
mov
pop
call
mov
xor
and
cmp
and
ret
cmp
xchg
dec
pop
push
dec
dec
push
fs
jnp
mov
(bad)
js
jmp
dec
or
ret
sub
mov
mov
push
push
cmps
out
sbb
push
mov
adc
imul
enter
jo
das
(bad)
mov
adc
and
or
in
out
(bad)
fwait
scas
test
jb
inc
enter
fimul
gs
in
mov
push
cdq
mov
mov
test
popf
pop
dec
mov
int3
pop
jns
add
sub
fbstp
into
and
icebp
xor
bound
sbb
lahf
ror
retf
fcomp
hlt
sysret
aaa
sub
mov
(bad)
and
cld
js
lahf
cmp
add
xchg
mov
pop
repz
or
out
pop
scas
jne
daa
sar
dec
pop
inc
(bad)
das
xchg
imul
mov
mov
mov
xchg
outs
aaa
push
jle
cmp
mov
pop
jmp
lods
ds
push
hlt
jl
das
lods
inc
pop
mov
(bad)
int
in
ret
outs
shl
fbstp
mov
repz
neg
inc
into
aad
pop
mov
pop
sub
lahf
call
rcl
mov
fstp
int
ins
or
xor
movs
loop
and
ins
mov
mov
jmp
outs
xor
push
inc
test
mov
call
bnd
push
ss
pushf
popa
aaa
push
mov
popa
or
push
sbb
inc
cwde
inc
or
push
dec
jbe
jbe
xor
mov
mov
mov
je
add
ds
arpl
fnsave
sub
cli
loop
xchg
pop
fldenv
mov
adc
xchg
stos
inc
in
and
sar
loop
sahf
stos
adc
dec
add
adc
push
jne
sub
or
jp
cmp
std
retf
cli
fwait
shr
hlt
dec
xor
les
fsub
lods
xchg
dec
mov
out
cmp
inc
and
ins
pop
xor
jge
pop
es
rol
sub
daa
mov
xchg
aad
fist
rcl
mov
xlat
(bad)
clc
ss
jmp
lock
push
dec
clc
add
xchg
sub
pop
or
xor
mov
fisub
icebp
push
out
jge
or
push
ficomp
stc
pop
xchg
sub
xchg
stos
mov
inc
pop
mov
dec
or
pop
js
leave
sbb
adc
in
xchg
or
or
mov
jb
jno
add
imul
jbe
mov
mov
repz
xchg
sub
adc
movs
push
sar
inc
ds
mov
xchg
and
jns
mov
push
movs
loope
ret
adc
nop
scas
adc
rcl
push
push
and
ins
mov
ret
add
jmp
sub
sub
loop
pop
retf
in
scas
xchg
fiadd
adc
mov
and
jns
inc
mov
ret
pop
mov
sbb
add
jmp
jle
push
xchg
mov
neg
jns
test
int3
pop
mov
fnstsw
imul
and
fdiv
inc
mov
ret
loope
mov
out
loop
and
adc
movs
adc
inc
dec
adc
inc
jbe
push
inc
or
sahf
shl
repnz
and
cmp
sbb
sbb
inc
dec
or
mov
jecxz
push
xor
std
repz
inc
or
or
daa
pop
or
jmp
addr16
sbb
and
neg
xchg
dec
and
test
xchg
iret
add
adc
xchg
and
rcl
pop
dec
cmp
dec
ins
es
mov
push
xchg
dec
xchg
jecxz
xor
(bad)
sbb
stos
and
loop
or
cmp
xchg
or
mov
ins
mov
shl
out
aaa
or
movs
push
lds
in
sub
shl
shl
pop
lahf
sub
and
and
lods
sbb
sbb
adc
cmp
fild
mov
and
je
jno
aad
mov
int
repnz
add
sub
sets
xor
mov
faddp
mov
push
rcl
mov
bound
ficom
sbb
les
push
imul
xor
in
dec
push
lock
and
das
aas
pop
xchg
out
(bad)
stc
jge
jmp
cmp
adc
jle
rcr
mov
mov
out
mov
(bad)
shl
scas
xor
test
ret
mov
fimul
in
jne
in
mov
sub
repz
pop
mov
ds
pop
push
imul
sbb
in
test
out
call
mov
dec
or
add
movs
sahf
mov
cmp
scas
inc
mov
stos
out
inc
ficomp
stc
dec
dec
dec
xchg
cmps
imul
jns
das
push
push
add
cmp
inc
xor
aad
pop
aad
bound
lods
inc
stos
(bad)
out
jo
dec
pop
shr
xor
mov
mov
xor
jbe
xchg
sbb
test
fsub
mov
pop
fidivr
jnp
ror
cmc
movs
cmp
dec
scas
jmp
push
test
pop
dec
in
push
rcl
xor
nop
add
mov
fadd
lahf
cwde
pop
mov
loope
cmps
push
(bad)
shl
scas
mov
mov
jp
loopne
xchg
mov
mov
pop
pop
dec
mov
jmp
push
je
adc
ss
jbe
scas
cmp
outs
mov
addr16
fild
sbb
mov
ins
adc
jge
jno
cmc
ffree
jbe
xlat
sbb
shr
or
mov
jmp
repnz
nop
add
cmp
dec
inc
add
or
dec
mov
bound
and
adc
mov
mov
or
and
and
and
cmps
add
jle
push
jle
ds
fadd
adc
in
mov
pop
and
cmp
cmp
inc
add
in
fcom
je
pop
dec
cs
jmp
pop
jbe
nop
(bad)
jg
add
into
and
mov
xor
fnstsw
dec
cmps
push
push
or
mov
jno
retf
in
dec
repz
into
mov
push
cmp
stos
popf
(bad)
xor
jg
jnp
ror
hlt
(bad)
push
ins
inc
and
jge
push
pop
jb
adc
cmp
std
add
pusha
xchg
icebp
adc
es
xor
cmc
mov
push
rcl
add
xchg
mov
adc
aam
call
push
push
ins
mov
push
je
aam
(bad)
inc
aam
pop
mov
push
adc
ret
(bad)
test
popf
outs
xor
adc
loopne
sbb
adc
jo
mov
imul
gs
(bad)
int3
(bad)
pop
fsub
test
retf
out
cld
add
and
add
in
mul
jl
add
inc
jb
dec
(bad)
jae
clc
cwde
in
xchg
aad
test
cmp
and
mov
cdq
push
mov
jne
push
sub
das
pop
clc
push
cmp
hlt
inc
repz
fsubr
dec
pop
or
or
call
add
pop
mov
pop
mov
jno
lods
fcmovnu
repz
(bad)
sub
and
adc
mov
cmp
das
call
enter
(bad)
adc
daa
shl
xor
cmp
or
stc
cmp
or
rcl
jae
push
and
sbb
ret
mov
push
imul
adc
cmp
inc
xchg
scas
add
int
pop
js
data16
vmovlps
aad
mov
sub
fnstsw
mov
push
sub
scas
push
in
add
mov
jp
mov
inc
lds
dec
mov
div
aaa
lods
xor
call
push
ret
sub
adc
aaa
add
jnp
das
push
sbb
aad
call
dec
mov
mov
mov
js
adc
adc
fistp
jle
arpl
inc
and
lahf
pop
mov
inc
(bad)
jae
xor
jg
popf
out
inc
jecxz
in
mov
out
jge
jnp
seto
(bad)
scas
pop
repnz
pop
inc
pusha
neg
rcr
in
cmp
jno
cmp
jae
lds
pop
add
call
adc
adc
xor
mov
mov
sbb
mov
mov
jl
into
das
or
retf
adc
dec
push
mov
xchg
push
neg
ins
arpl
jns
aad
pushf
imul
push
cmp
lock
add
jnp
hlt
fcomip
jns
mov
push
scas
leave
int
push
fdivr
mov
pop
pop
xchg
adc
pop
leave
jb
data16
fisttp
sahf
shl
int3
xor
lahf
mov
and
mov
add
xchg
cld
mov
sub
mov
iret
aam
add
dec
outs
std
add
rcr
inc
jo
xchg
neg
xor
aad
push
xchg
mov
jge
xor
mov
sub
out
sub
ds
inc
retf
adc
and
bnd
mov
fisubr
dec
add
cwde
into
out
iret
mov
and
adc
stos
(bad)
cmp
cmp
popa
cli
mov
(bad)
aas
adc
in
sbb
inc
(bad)
cmp
imul
xor
mov
mov
sub
mov
push
xor
jnp
mov
jns
ret
cmp
retf
pop
mov
mov
fs
clc
lds
jl
inc
enter
aad
mov
in
push
xor
adc
icebp
xchg
mov
(bad)
or
scas
fistp
addr16
or
sub
xchg
jnp
cmp
stos
loopne
outs
js
js
pusha
inc
cmp
pop
in
or
daa
push
das
out
jnp
pop
mov
xor
push
mov
pop
push
out
or
push
jb
push
gs
push
and
js
sub
cmp
jmp
mov
dec
dec
cmc
sub
jle
(bad)
je
(bad)
push
jbe
push
es
mov
dec
(bad)
cld
daa
jmp
sar
pop
jl
shl
sub
fisubr
data16
sub
mov
movs
xor
inc
sti
hlt
xchg
les
pop
sbb
ficom
sbb
and
push
push
retf
sar
in
int
rcr
enter
dec
inc
(bad)
dec
in
inc
xchg
popf
jecxz
ret
sub
sbb
fcomp
ins
pop
pop
adc
std
mov
movs
mov
pop
test
popf
pop
cmp
rcl
sbb
or
outs
mov
mov
push
loope
loop
out
sub
mov
xor
pop
sub
mov
pop
ds
mov
imul
jge
sub
fst
add
aad
and
add
mov
sub
into
hlt
mov
addr16
sbb
mov
xchg
sbb
data16
pushf
sar
es
dec
xor
dec
mov
or
bound
mov
iret
cmp
mov
sbb
dec
adc
shl
dec
cmp
fimul
pop
xor
jno
daa
movs
ficomp
scas
test
scas
aad
pop
cwde
xor
test
inc
jl
pop
cmp
mov
xor
jecxz
pop
imul
inc
cmp
(bad)
imul
dec
repz
xchg
add
repz
fidiv
arpl
sahf
add
mov
jl
js
(bad)
les
imul
mov
xor
mov
pusha
xlat
dec
mov
and
jmp
jmp
mov
lods
push
out
jecxz
daa
test
shl
sar
ins
inc
fistp
xor
lds
neg
jl
mov
dec
loope
out
(bad)
mov
in
xchg
inc
sbb
xor
add
xchg
dec
jbe
and
movs
jno
mov
mov
call
inc
cmp
out
add
loope
cmp
push
cdq
dec
or
jae
in
adc
imul
push
loope
dec
daa
lock
fst
sbb
dec
aam
mov
mov
loopne
sub
push
jmp
sub
cld
icebp
fwait
sub
xchg
push
pop
pop
pop
aam
call
pop
xchg
mov
adc
sbb
imul
sub
push
lock
jns
gs
out
test
sbb
mov
pop
imul
test
out
les
stc
outs
jge
cmp
cmp
jmp
call
or
popf
mov
jb
(bad)
push
adc
push
retf
movs
aaa
aad
lock
and
sub
es
or
sbb
push
sti
popf
imul
jnp
mov
lods
popa
pop
push
jmp
(bad)
xchg
jmp
xor
(bad)
push
push
adc
push
pushf
sub
idiv
pop
mov
mov
or
cmp
pop
aas
inc
cmp
add
iret
jo
mov
rcr
ret
out
adc
mov
lods
pop
mov
bndldx
jbe
in
inc
rol
fst
movs
lock
retf
cmp
std
pop
mov
sbb
ror
adc
adc
pop
add
push
lods
xor
mov
add
scas
(bad)
sub
fst
outs
xor
cmps
add
and
fs
inc
xchg
(bad)
push
sbb
xor
mov
cmp
pop
push
cmp
adc
or
out
cld
lods
cmp
xlat
dec
sbb
ror
mov
fcmovnbe
out
inc
push
xor
mov
retf
(bad)
outs
iret
fist
xor
jae
mov
pop
pop
cmps
outs
and
push
jne
stc
out
add
mov
mov
and
dec
retf
in
bound
pop
retf
lods
push
fwait
mov
popf
inc
or
fwait
jns
push
mov
jae
dec
inc
jo
xor
jne
std
sub
mov
and
imul
push
xor
jb
xchg
test
sub
jge
mov
js
jns
or
xchg
xchg
jnp
mov
movs
cdq
stos
hlt
(bad)
jmp
mov
iret
mov
adc
push
mov
sub
xchg
jp
(bad)
mov
xor
cmps
repnz
mov
clc
jno
dec
aad
scas
add
daa
aas
add
and
inc
fcom
jns
sub
aaa
mov
loope
inc
sub
loopne
test
or
xchg
pop
into
push
mov
jnp
and
lea
jecxz
inc
xchg
cli
es
fild
fwait
cmc
jne
pop
sub
jns
pushf
pop
rcl
aad
icebp
rcl
jl
adc
cmc
bound
mov
add
pop
xchg
es
les
cli
jecxz
xor
jg
add
icebp
js
push
or
not
int3
dec
inc
scas
push
mov
pop
xor
and
aas
pop
shl
xor
mov
mov
call
jmp
mov
jae
fsubr
xor
rcl
pushf
clc
enter
sbb
popf
je
arpl
test
and
xlat
inc
push
shl
or
outs
mov
mov
pop
inc
ret
sahf
dec
xchg
jno
jo
mov
sub
and
ja
push
lahf
mov
into
inc
inc
push
mov
popa
or
lahf
mov
push
inc
adc
out
sub
arpl
push
sbb
xchg
aaa
stos
enter
sahf
in
imul
pop
pushf
mov
inc
cmps
xor
sub
xor
pop
fld
test
push
push
lods
in
pop
int3
outs
xor
cmp
(bad)
pushf
in
imul
adc
cdq
rol
fcmovu
pusha
ins
xor
lea
fiadd
shl
es
fs
xor
sub
cmp
enter
mov
movs
xchg
in
pop
out
std
mov
mov
out
int
leave
cmp
jl
inc
mov
in
addr16
clc
sbb
and
xor
or
pop
sbb
dec
sub
adc
add
xchg
mov
mov
xlat
pop
jmp
add
fucom
test
enter
pop
cmova
cmp
sub
arpl
or
pop
aaa
ficom
xchg
(bad)
scas
inc
or
enter
pop
push
mov
pop
push
lods
jns
(bad)
jmp
inc
xchg
inc
pop
mov
out
cdq
sahf
ror
xchg
push
stc
(bad)
pusha
push
xchg
in
inc
enter
adc
mov
es
jmp
daa
loopne
sbb
inc
cdq
stos
xchg
test
(bad)
in
int
(bad)
ss
outs
mov
out
icebp
mov
xor
mov
push
mov
sub
sub
scas
sub
lahf
push
and
adc
xchg
and
aad
xor
mov
push
pushf
outs
addr16
sbb
mov
dec
push
sub
mov
inc
scas
lods
stos
inc
xor
repz
lea
ins
adc
jno
scas
aas
and
icebp
(bad)
ret
dec
adc
movs
xor
sub
nop
idiv
(bad)
ds
idiv
push
aad
or
jno
xlat
push
mov
aas
xor
jmp
ror
push
ins
xchg
js
jae
js
xchg
xor
mov
push
data16
sub
sbb
fs
adc
jne
int
jmp
and
imul
sub
imul
loope
inc
gs
in
shl
fcom
popf
xchg
pop
cmp
ins
add
dec
movs
sbb
pop
sub
retf
jnp
xor
pop
push
xlat
pop
fistp
inc
cmp
ror
pop
dec
cdq
add
hlt
adc
mov
cmp
pop
inc
add
ret
xchg
lahf
movs
push
inc
nop
dec
sahf
repz
and
adc
outs
push
fwait
and
sub
ret
test
inc
mov
push
xor
inc
movs
jle
mov
stos
hlt
inc
addr16
pop
cwde
xor
push
lds
repz
inc
or
push
adc
and
or
mov
enter
outs
ins
js
in
jo
jnp
retf
adc
ds
sub
ins
push
jg
test
call
das
and
add
mov
stos
adc
sub
stos
inc
push
push
xor
lds
inc
test
xor
js
adc
inc
aam
mov
mov
mov
int
icebp
or
mov
xor
or
sub
or
in
pop
sbb
xchg
jg
lods
sbb
push
out
xor
push
stos
sbb
inc
mov
xor
xchg
dec
push
mov
pop
jecxz
sub
lock
mov
mov
sub
sahf
aam
sbb
imul
shl
pop
sub
push
(bad)
jmp
mov
das
jge
dec
test
xchg
leave
pushf
jne
push
pop
mov
push
iret
call
aam
adc
mov
add
ret
xor
nop
out
mov
(bad)
mov
test
movs
retf
jle
dec
sub
xchg
fwait
push
movs
clc
adc
std
iret
sub
popf
outs
jmp
push
int
push
dec
ja
add
mov
out
jb
push
and
lahf
jb
retf
jge
mov
xor
fld
jecxz
add
bswap
dec
ds
xchg
leave
cli
cmc
xchg
icebp
test
neg
in
ret
jbe
jp
xlat
test
jp
ds
int3
movs
sbb
pop
jno
or
sbb
xchg
fwait
xor
pop
xchg
sti
inc
(bad)
outs
retf
mov
sub
(bad)
lock
iret
(bad)
retf
dec
cwde
or
in
cmp
xlat
push
sti
not
loopne
mov
jmp
mov
ins
not
sub
mov
mov
jmp
xchg
and
ins
jp
xor
mov
adc
lea
inc
xlat
aam
push
push
and
dec
int3
mov
pop
in
hlt
dec
and
fimul
iret
out
and
into
xor
pop
and
push
stc
sub
or
pop
sub
mov
iret
retf
jp
push
(bad)
cld
dec
cmp
sbb
int
mov
adc
neg
push
xchg
mov
cmp
jmp
icebp
add
cmp
xchg
or
mov
fdiv
int
jg
scas
lea
les
popa
enter
test
sub
mov
or
not
xchg
ficom
add
movs
push
pop
inc
xchg
mov
jmp
or
mov
jne
repnz
sbb
push
and
in
dec
sti
sub
sti
sub
iret
push
push
shr
xor
pop
ss
push
neg
inc
sub
pusha
stos
xchg
bound
mov
ds
add
test
gs
and
jo
cmps
or
movs
jo
retf
xlat
rol
lock
and
xor
gs
in
add
hlt
mov
sub
stc
pop
mov
in
xchg
pop
test
adc
push
idiv
out
shl
fidiv
xor
sub
add
std
scas
out
stos
pop
daa
and
and
out
dec
or
mov
int3
inc
out
in
cs
cmps
mov
fwait
mov
push
jp
clc
add
push
fdivp
loope
leave
arpl
mov
sti
cld
int3
pop
mov
inc
cmp
(bad)
dec
adc
xchg
mov
cwde
shl
jecxz
add
mov
sar
adc
inc
scas
lahf
(bad)
cmp
mov
xor
mov
dec
inc
jnp
and
inc
retf
cmps
pop
jns
dec
jg
imul
lock
inc
mov
popa
sbb
jmp
aam
jg
add
sub
push
mov
dec
cmp
jo
scas
pop
ds
sub
or
cmp
or
sub
call
and
out
inc
daa
test
fadd
xchg
push
repnz
and
ror
add
test
js
pop
mov
inc
mov
push
stos
xchg
test
dec
add
out
and
sahf
stos
mov
mov
sub
jo
ror
dec
adc
retf
jmp
inc
das
js
int3
rcl
clc
(bad)
push
adc
push
in
scas
push
inc
sub
add
ret
stos
push
jecxz
lea
mov
mov
lea
aaa
push
pop
rcl
and
js
js
add
outs
dec
mov
push
xor
pop
ror
and
mov
pushf
mov
xchg
push
mov
mov
inc
dec
and
pop
or
div
push
mov
int
mov
fdiv
(bad)
aad
jmp
repz
vmovaps
mov
xor
loop
xchg
xrelease
pop
pop
mov
inc
mov
pop
cmp
jmp
mov
fwait
sar
pusha
push
ret
inc
inc
loope
imul
lods
cld
lahf
and
xchg
mov
dec
mov
fidiv
and
inc
jl
test
ret
push
faddp
mov
adc
add
xchg
popw
push
daa
or
(bad)
in
cdq
js
mov
sbb
add
fst
or
xor
xchg
out
movs
fwait
mov
lods
in
into
fstp
dec
cwde
out
lods
popa
xchg
fadd
and
mov
loope
nop
aas
test
fsub
xor
fucomi
fisubr
push
mov
sub
int3
xchg
jmp
push
lds
cmp
shl
sbb
push
ja
dec
or
sub
mov
mov
inc
(bad)
aam
sar
sbb
ret
inc
(bad)
out
int
jns
js
xor
adc
xchg
push
cmp
dec
out
or
arpl
cwde
pop
rcr
xchg
inc
outs
cmp
xchg
mov
and
daa
jle
cmp
mov
xchg
jne
in
cli
(bad)
xor
movs
mov
int
jb
ins
xor
inc
iret
jmp
dec
pop
std
in
sub
xchg
mov
loop
iret
pop
fiadd
and
fs
cdq
cld
cmp
xor
pop
push
adc
repnz
xchg
push
icebp
shl
aas
cmps
and
jecxz
xor
mov
dec
or
lods
call
inc
out
sub
adc
test
mov
push
fwait
repnz
and
(bad)
lds
jb
call
xchg
loope
sbb
vpshlw
or
nop
sti
mov
adc
movs
mov
fisttp
cmps
xchg
mov
xchg
hlt
retf
lahf
jge
js
mov
test
(bad)
popf
xor
or
or
push
gs
jle
fst
jg
add
jmp
adc
adc
mov
scas
pop
rol
movs
add
sub
dec
repnz
xor
les
xor
jmp
shr
and
sub
or
push
fild
in
clc
adc
inc
fiadd
ins
inc
ins
fild
cwde
mov
clc
add
jp
shl
push
mov
aaa
loop
pop
sbb
and
leave
(bad)
leave
push
inc
fldenv
daa
popf
xor
faddp
mov
fild
or
mov
jae
ins
in
mov
mov
xchg
pusha
pop
dec
ja
xor
jp
and
cs
int
add
popa
xchg
ja
ins
inc
mov
test
stos
aam
jp
fbld
hlt
adc
movs
xchg
outs
jae
in
mov
cmp
sub
mov
inc
rcl
rcl
cmp
pop
movs
inc
jne
(bad)
div
lds
aam
push
out
outs
adc
and
into
sbb
sbb
jp
mov
aaa
js
and
xor
sysret
dec
ss
sbb
mov
jae
shl
out
out
cld
ror
cmp
jne
mov
inc
ret
and
mov
(bad)
sub
xchg
fadd
push
jge
(bad)
mov
aaa
sahf
add
lock
jp
std
mov
xor
call
inc
push
loop
in
or
push
jno
cmp
or
aam
xchg
into
aad
ret
and
cmc
dec
push
or
xlat
sahf
repnz
stos
inc
lea
inc
push
fdiv
add
inc
xchg
shl
sar
jmp
pop
aam
inc
out
cdq
mov
and
in
pop
sub
(bad)
repnz
xchg
and
in
outs
add
sbb
mov
shl
jecxz
popa
jbe
shl
sbb
sti
lahf
jecxz
push
or
fld
gs
mov
or
test
mov
test
ret
mov
sub
dec
pop
sub
xor
xlat
adc
in
out
and
shr
mov
movs
pushf
or
dec
pop
xchg
in
cwde
retf
xchg
jns
inc
fild
stc
mov
push
add
xlat
push
fwait
jle
(bad)
xor
or
lock
loopne
ja
adc
cwde
adc
dec
adc
shl
inc
scas
mov
rcl
ja
dec
cdq
shr
loopne
cmps
in
add
imul
xor
fldenv
jne
mov
jle
push
pop
mov
aam
push
icebp
arpl
call
mov
xlat
popa
enter
lea
loop
jecxz
movs
aas
cmc
pushf
int3
mov
gs
push
xchg
mov
jecxz
pavgw
and
in
imul
sbb
xor
js
pop
mov
js
mov
mov
or
imul
rcr
movs
and
cmp
or
test
mov
aas
mov
and
jmp
jmp
dec
mov
adc
daa
pop
inc
ror
shr
aad
mov
sub
jns
addr16
mov
cmc
lods
fsubr
sahf
mov
repnz
or
cmc
movs
aam
xchg
fild
lock
fbstp
jg
inc
pusha
sbb
div
(bad)
mov
pop
mov
daa
daa
call
jmp
bsf
push
and
jecxz
inc
daa
pop
std
pushf
fs
adc
loope
push
movs
pop
jns
(bad)
gs
mov
xchg
repz
sub
fstp
jo
aam
mov
sub
mov
imul
add
shl
sti
aam
xchg
or
retf
movs
aas
mul
pusha
mov
mov
xlat
inc
test
call
leave
push
pop
imul
jmp
fisubr
outs
cmp
jb
mov
lods
imul
clc
(bad)
xor
xchg
jecxz
sbb
jns
es
jg
mov
(bad)
dec
and
fisub
sub
mov
sahf
xchg
push
cmps
in
lods
mov
mov
sbb
gs
jmp
(bad)
mov
inc
cmps
gs
test
and
xor
sbb
inc
fild
jecxz
inc
sub
add
jno
loop
in
nop
cmp
fmul
shl
inc
sub
mov
(bad)
add
xor
iret
xor
ins
aas
or
lds
inc
iret
ins
out
xchg
xor
sbb
adc
(bad)
icebp
fsubr
mov
gs
je
push
xchg
in
cmps
mov
aad
sub
pop
pop
push
jl
fsubr
inc
mov
inc
lods
repnz
push
jno
sti
sbb
and
mov
enter
pop
enter
ror
icebp
jl
in
enter
retf
retf
push
pushf
jmp
movs
mov
jmp
pop
or
mov
adc
inc
add
inc
je
adc
and
clc
cmp
ds
cmp
mov
cmc
into
popf
mov
aas
mul
jo
push
mov
fcomp
std
dec
jp
jge
nop
jp
mov
pusha
aaa
and
in
inc
not
mov
jle
add
jno
popf
push
pop
xchg
mov
mov
test
(bad)
pop
in
(bad)
add
push
jne
(bad)
cs
pop
icebp
loop
jle
adc
sbb
fadd
pop
(bad)
pop
int
xlat
sbb
imul
or
jle
mov
add
bound
cld
je
lahf
jo
xchg
xchg
fdiv
xchg
mov
test
(bad)
ja
inc
ja
jb
pop
test
stos
mov
cmps
test
(bad)
dec
mov
rcr
jne
(bad)
leave
mov
in
push
(bad)
outs
xor
inc
inc
(bad)
out
mov
mov
push
cmc
rcl
xchg
cld
hlt
in
mov
mov
or
push
push
push
push
enter
popf
sbb
daa
jbe
into
or
mov
or
jmp
(bad)
mov
iret
xlat
jb
and
jb
xor
jo
xor
adc
mov
and
comiss
pushf
inc
shl
push
mov
dec
dec
and
xor
inc
and
mov
arpl
fmul
cwde
(bad)
xlat
and
lock
jle
xchg
jno
xchg
mov
inc
ins
movs
mov
xchg
mov
jno
mov
and
dec
jnp
jns
std
push
fstp
sub
mov
daa
aam
hlt
xor
mov
sar
inc
(bad)
fidivr
cmp
jmp
(bad)
test
jne
call
or
push
cmp
loop
repnz
mov
or
aad
lods
pop
pop
pop
imul
out
xchg
pop
mov
call
xadd
xchg
add
cs
rcr
and
adc
not
dec
xchg
mov
ror
mov
mov
push
cld
jmp
jecxz
push
mov
adc
mov
pop
mov
rcr
xor
retf
mul
mov
fistp
pop
jge
sti
adc
jae
push
mov
sbb
test
xchg
mov
sub
inc
fwait
cwde
jmp
or
cld
mov
xor
add
retf
xchg
mov
(bad)
mov
push
mov
lds
js
push
xchg
jmp
lea
sub
mov
ret
imul
adc
mov
push
icebp
jne
cmp
(bad)
and
mov
inc
es
std
out
ds
gs
stos
inc
xchg
jo
fs
xchg
pop
adc
fisttp
mov
sahf
xchg
cdq
mov
inc
int
jbe
and
inc
adc
test
sar
pop
add
xor
or
or
ins
lock
add
pop
sub
out
outs
sub
cmp
mov
in
xor
fs
xor
inc
push
mov
movs
test
test
dec
jg
mov
jecxz
lods
enter
data16
mov
mov
lods
ret
xchg
mov
enter
inc
in
mov
mov
add
fs
xchg
push
aaa
jne
cs
bound
cmps
jmp
fbld
mov
ja
mov
fld
cmp
mov
mov
mov
xor
xor
inc
repnz
push
icebp
test
es
pusha
sub
cli
push
gs
sbb
mov
mov
cmp
or
sahf
call
(bad)
in
dec
xchg
cmc
pop
outs
dec
jae
arpl
movs
rol
std
mov
dec
lods
pusha
cdq
sar
cmp
xor
xchg
aam
movs
out
sub
and
sbb
inc
inc
cmp
push
mov
into
and
and
add
jae
pop
in
rol
mov
es
or
xchg
mov
in
add
out
loop
sar
push
test
dec
and
test
out
cld
mov
mov
pop
inc
cmps
sbb
cmp
jp
jmp
fxtract
rcr
scas
fcom
and
sub
pop
xchg
xchg
shr
add
aam
mov
adc
cwde
sbb
push
stos
xlat
cld
pop
jmp
xchg
or
test
rcr
lahf
pop
jge
scas
adc
cld
ret
or
ret
dec
sub
enter
test
cmp
cmp
mov
mov
cld
cmp
fadd
pop
mov
je
stc
push
je
add
outs
outs
imul
pop
mov
push
inc
and
adc
gs
pop
push
out
cmp
out
cmp
ss
into
mov
fimul
les
xchg
leave
lahf
mov
mov
xchg
inc
push
push
push
cld
imul
pop
repnz
cdq
ror
sub
cmc
lods
leave
sub
retf
cmps
adc
psrld
jo
das
inc
pop
xchg
adc
rcl
and
fnstenv
mov
rcr
pop
test
or
pop
and
cli
mov
sub
jno
and
scas
mov
enter
push
pop
jnp
mov
push
xchg
or
cmp
mov
mov
and
adc
xlat
bound
sar
xor
cdq
fst
inc
jl
mov
or
pop
cs
push
jbe
cmc
cmp
movs
mov
and
mov
and
cmp
scas
push
dec
int
aaa
jmp
mov
push
add
ror
jae
std
mov
xor
ret
mov
xchg
test
cli
xchg
xchg
inc
push
or
mov
out
rol
rol
xor
inc
add
push
cmp
cmp
mov
sbb
jns
ss
mov
mov
dec
fs
add
and
jb
add
mov
stos
mov
jae
push
cmp
cmp
and
jmp
add
xor
xor
clc
push
inc
(bad)
or
push
shl
dec
lods
and
dec
(bad)
popa
inc
or
adc
or
setg
shl
hlt
inc
test
push
out
out
cmc
repz
jge
dec
test
aad
gs
call
pop
mov
test
into
aaa
add
add
addr16
test
in
das
mov
xchg
mov
enter
mov
aad
pop
leave
or
fisttp
aad
xor
in
push
leave
das
fdiv
gs
loope
sbb
lods
fld
fisttp
mov
sub
push
scas
arpl
call
daa
(bad)
fbstp
les
test
(bad)
gs
and
popw
sub
jg
fs
sub
cmp
push
dec
repz
nop
mov
lds
xchg
popa
xor
out
cmp
scas
movs
jl
xlat
mov
pusha
xchg
arpl
adc
jno
dec
cld
xchg
mov
hlt
fwait
mov
mov
pop
sub
push
jne
and
in
jne
shl
add
daa
mov
pushf
push
cld
mov
or
bound
lds
add
inc
mov
add
cmp
add
inc
aaa
loopne
jp
sub
dec
jge
outs
loope
sbb
outs
(bad)
not
xlat
push
sub
in
jl
sub
fmul
mov
icebp
pop
aad
rcl
mov
repnz
ins
cmp
mov
push
sub
sub
xor
xchg
test
stos
movups
pop
pop
xchg
and
ss
or
inc
xchg
call
sub
or
sbb
out
push
test
(bad)
cmp
inc
add
ins
sub
push
clc
loope
sub
and
in
push
imul
loop
pop
cmp
xor
gs
xchg
mov
cmp
inc
cmc
xor
xor
inc
int
sbb
xchg
cmp
push
in
dec
sub
cli
sahf
push
inc
stos
dec
and
cmp
mov
jae
push
movs
push
lds
jmp
ja
jg
adc
adc
mov
repz
adc
add
mov
mov
add
aam
(bad)
loop
imul
mov
mov
or
cmps
push
bound
xchg
(bad)
sbb
xor
dec
inc
sub
popf
xor
test
out
adc
push
inc
xchg
sbb
xor
mov
and
cmp
inc
xor
sub
popf
and
cmp
outs
inc
das
mov
inc
or
dec
movs
stos
retf
je
mov
xchg
pop
shl
fadd
adc
mov
jge
cmps
(bad)
fst
xor
pop
xor
dec
fnstcw
ds
mov
mov
mov
mov
test
push
dec
imul
mov
fadd
stos
scas
and
cmp
shl
push
sbb
out
add
cmps
or
mov
aad
into
xchg
loope
push
and
shr
sbb
pop
xchg
pop
push
xchg
pop
dec
inc
mov
pop
jmp
cmps
inc
(bad)
cdq
fdivrp
out
out
sub
and
adc
pop
enter
pop
cmp
mov
or
mov
enter
mov
retf
lea
lods
push
test
or
lahf
lock
mov
dec
pop
xor
jno
mov
dec
out
pop
sti
mov
(bad)
js
xchg
jg
xlat
dec
xor
mov
or
ds
rcr
jmp
mov
jg
mov
push
out
add
xchg
test
mov
call
fcomi
or
mov
sbb
push
push
out
aas
inc
push
mov
sbb
inc
int
enter
xor
int
pop
or
sub
aad
pop
and
push
movs
xor
int3
in
push
jge
lock
or
int
and
int
outs
pop
lock
(bad)
ficom
fdivr
js
scas
adc
or
mov
mov
push
cs
pop
scas
cmps
push
adc
je
sbb
daa
and
inc
jmp
(bad)
adc
and
mov
out
retf
shl
adc
inc
repnz
xor
into
dec
push
and
pop
loop
pop
sahf
jae
in
inc
xor
jp
xchg
arpl
sbb
mov
xchg
push
ds
pop
mov
dec
movs
aam
aad
pop
hlt
fist
call
test
cmp
jb
sbb
jle
push
test
xor
std
daa
shl
add
in
stos
leave
stos
mov
add
aad
mov
ins
bound
xchg
ins
add
iret
add
sub
fbld
adc
xchg
in
mov
jns
scas
ficomp
imul
mov
stos
test
push
fidivr
ja
fist
dec
or
jmp
adc
nop
mov
mov
in
xor
jo
xor
cmp
sbb
sbb
xor
sbb
(bad)
pop
mov
mov
cmps
sub
cld
xchg
adc
(bad)
cdq
fmul
push
mov
inc
or
xchg
and
pop
rol
mov
xlat
imul
pushf
lock
scas
dec
int3
stos
mov
cli
sub
inc
jg
xor
sub
fwait
stos
test
push
inc
or
cmp
ds
pop
icebp
test
sub
das
pop
sbb
sub
movs
xchg
pop
and
push
push
sub
jae
(bad)
lahf
in
sub
sbb
sbb
repz
outs
lea
xchg
jl
fcomp
cld
adc
pop
push
mov
lods
(bad)
bound
jmp
idiv
mov
xchg
sbb
sub
mov
cmc
add
pop
pop
and
repz
arpl
and
sar
dec
jl
jp
nop
or
xor
loope
ins
test
ret
dec
(bad)
rol
jp
push
mov
jb
sbb
or
jae
mov
icebp
outs
push
cld
cmp
pop
(bad)
sub
xchg
faddp
dec
aas
mov
aam
data16
jmp
aaa
outs
dec
call
xor
sahf
jg
es
gs
push
xor
dec
aaa
cs
(bad)
sub
jae
cmp
pop
push
or
mov
jo
mov
fdivr
clc
pop
add
lea
pop
mov
jecxz
outs
sub
jne
stos
fidivr
ret
movs
adc
stc
in
push
cmps
mov
lahf
inc
or
gs
imul
sbb
(bad)
jmp
xor
jb
sbb
xor
sbb
sub
pop
nop
hlt
fstp
add
enter
and
mov
mov
inc
mov
int3
scas
clc
ss
sub
or
pop
xor
xchg
cs
into
fscale
pop
mov
xor
mov
test
not
les
add
sub
or
push
push
cwde
push
in
jo
pop
(bad)
mov
dec
or
fst
mov
scas
mov
or
xchg
(bad)
mov
jl
dec
pop
cmp
bound
fidiv
xor
sar
dec
mov
bndstx
mov
inc
pushf
adc
sbb
data16
sbb
inc
dec
push
pop
or
mov
xchg
ret
retf
outs
push
cmps
js
sbb
call
push
(bad)
sti
pop
jo
dec
shl
fild
and
jnp
sahf
mov
add
outs
popf
mov
push
aam
ret
add
push
lea
push
cmps
sbb
(bad)
push
movs
test
jle
push
sub
arpl
xor
js
das
mov
inc
or
add
sub
sbb
test
jecxz
call
dec
jmp
data16
imul
movs
jns
or
das
mov
stos
rcr
pop
je
mov
add
fldenv
mov
jae
mov
mov
repnz
ret
pop
lea
into
sub
cli
sahf
sub
jg
inc
push
icebp
(bad)
mov
test
ret
ins
or
dec
je
call
cmp
cmp
cmp
in
or
jno
je
dec
xor
mov
out
or
inc
mov
adc
inc
lock
test
mov
pop
int
add
imul
aad
mov
stc
and
jae
ss
retf
call
and
retf
out
lea
dec
loope
(bad)
std
add
lods
in
pop
push
imul
pop
ret
cwde
jae
jmp
retf
pusha
add
shl
push
shl
movs
or
push
jmp
ds
jge
fisttp
mov
das
or
inc
test
mov
addr16
push
xor
inc
mov
push
in
jecxz
je
fdiv
stos
scas
les
movs
or
xchg
inc
(bad)
popf
inc
dec
dec
rol
mov
or
scas
ins
fidivr
add
jns
(bad)
sahf
lahf
sub
(bad)
mov
rol
call
add
dec
cld
scas
fbstp
dec
pop
fidivr
idiv
jne
inc
mov
dec
lods
daa
jl
xchg
sbb
fwait
aam
aaa
ficomp
jmp
outs
mov
mov
mov
gs
push
adc
xchg
jae
mov
and
adc
in
fcom
inc
bound
daa
pop
mov
cdq
sub
addr16
in
nop
dec
in
sti
scas
cmp
adc
push
pop
inc
popf
dec
movs
loopne
mov
add
leave
push
dec
nop
pop
pop
fdiv
mov
aad
jns
push
sub
push
sahf
sti
pop
xlat
jmp
mov
sbb
mov
loop
xchg
aad
jg
xchg
jae
xor
jge
pop
pop
jg
cmp
loopne
out
retf
cld
dec
cmc
jp
mov
rcr
dec
jno
mov
mov
and
inc
mov
xor
idiv
sub
fiadd
in
jg
mov
(bad)
fsubr
seto
idiv
fnstenv
mov
(bad)
test
sahf
add
aaa
xchg
ficomp
(bad)
jmp
and
add
pop
xchg
fistp
sub
jmp
dec
lods
enter
mov
sar
add
addr16
rol
bound
das
hlt
nop
aas
cmp
pop
sbb
jnp
clc
aaa
jmp
mov
mov
(bad)
in
inc
ret
mov
outs
fiadd
or
scas
xchg
ins
pop
add
mov
pushf
xor
cmc
sub
push
mov
imul
sub
clc
xchg
jnp
or
retf
icebp
test
jae
cwde
pop
int3
cmc
or
sub
mov
pop
mov
sbb
fcom
dec
(bad)
cmc
add
pop
push
call
xor
and
out
call
cmps
inc
mov
mov
cmp
fmul
xor
mov
dec
out
inc
repz
shl
sbb
dec
addr16
xor
sti
dec
dec
inc
add
test
sub
popa
dec
das
repnz
in
shr
jb
xor
mov
add
xor
mov
in
mov
test
jle
cmp
adc
adc
push
mov
dec
mov
movs
in
jp
loopne
jae
mov
fcom
mov
pop
(bad)
jmp
push
xor
mov
mov
xchg
movs
inc
(bad)
call
popf
mov
enter
sbb
arpl
or
inc
inc
or
in
repz
sbb
addr16
mov
popa
add
fs
lods
cmp
push
mov
out
out
mov
loopne
push
arpl
xor
xchg
mov
push
dec
pop
test
lock
jo
mov
and
or
add
push
jg
scas
mov
pop
jl
cdq
adc
out
test
sbb
fdivr
retf
gs
(bad)
fnstsw
and
mov
jns
pushf
in
call
push
aaa
cmps
pop
(bad)
push
fstp
push
bt
sub
pop
add
and
mov
cli
rol
sti
pop
retf
mov
sbb
cmc
or
xchg
aad
pusha
test
pop
loopne
iret
dec
fmul
loope
jl
mov
push
nop
scas
retf
or
ins
arpl
bound
imul
cs
pop
dec
arpl
jecxz
jle
cdq
cmp
pop
dec
and
aaa
inc
add
pop
aad
stos
out
mov
inc
sbb
jmp
out
outs
or
add
(bad)
inc
rcl
jae
sub
fsub
call
enter
jnp
push
(bad)
das
sub
mov
cli
je
retf
or
mov
clc
jb
mov
inc
fdiv
js
xor
imul
inc
cmp
stc
cmp
sbb
xlat
cmps
dec
and
std
mov
sub
adc
das
sub
pop
mov
ins
repnz
sbb
aam
lods
add
aad
add
loop
int3
cmp
cs
lea
push
cs
adc
inc
inc
in
(bad)
in
test
xchg
ss
xchg
repnz
rcl
push
fisttp
lods
mov
dec
pop
sub
in
mov
jno
mov
add
inc
add
retf
loop
xchg
repz
mov
sub
xchg
mov
or
adc
out
sub
(bad)
outs
mov
adc
pop
cs
imul
xchg
test
rcr
dec
scas
cmp
ja
dec
stos
les
fst
add
mov
fisub
out
sbb
push
mov
clc
and
xchg
neg
ins
dec
stc
inc
scas
scas
xchg
or
bound
add
jns
retf
aam
xor
dec
pop
push
mov
mov
adc
mov
mov
xor
mov
clc
lods
outs
in
or
cmc
adc
ret
mov
mov
jg
xor
test
xor
pop
jb
xchg
je
test
and
push
mov
shl
inc
sub
inc
xor
or
inc
call
lea
pop
push
ja
mov
js
test
cmps
push
arpl
out
loope
inc
adc
fsubp
jns
xchg
xchg
mov
jae
mov
je
sub
cmp
xchg
cli
or
push
sub
call
outs
cmp
jmp
jge
pusha
into
dec
imul
cmp
inc
inc
mov
dec
popf
test
clc
inc
sar
aaa
jle
pop
add
mov
dec
in
dec
pop
stos
fst
sti
dec
push
aad
nop
push
popf
fcom
dec
cmc
jne
aaa
or
xor
fisttp
and
push
add
inc
loope
icebp
jno
push
int3
cmps
pop
cmp
pushf
adc
xchg
mov
push
jle
inc
sbb
rol
cmp
imul
es
das
mov
fndisi(8087
jnp
in
add
or
and
mov
lahf
cmp
lahf
mov
aas
push
jbe
and
imul
push
xchg
cs
daa
mov
call
test
lds
xor
cmp
cmp
push
jmp
jp
and
xchg
sahf
adc
or
lahf
jnp
or
into
mov
and
mov
ss
xchg
jo
(bad)
ja
ss
es
jp
mov
cmp
adc
ds
int3
xchg
cmps
ret
cmp
ficomp
cmps
and
pop
out
cmp
(bad)
pop
ret
test
push
jge
lods
pushf
push
cmc
xor
gs
cld
popf
push
in
add
cmps
jno
dec
pop
sbb
push
bound
jne
jo
shr
adc
test
mov
lods
call
cmp
sbb
popf
pushf
icebp
inc
xor
cmp
ret
js
dec
adc
mov
xor
pop
dec
sbb
mov
add
push
pop
pop
test
jg
sub
fdiv
ret
aaa
or
cmp
clc
les
sahf
(bad)
lds
jb
std
xchg
inc
sbb
inc
xlat
loop
mov
repnz
and
imul
rcl
ret
int3
loopne
jo
push
mov
imul
imul
std
mov
ret
cmps
dec
dec
loope
xchg
cld
dec
popa
or
and
cmp
stos
out
mov
jb
push
lea
sar
outs
pusha
fild
fs
cli
sbb
lods
mov
dec
add
test
or
push
mov
dec
or
push
add
add
sub
dec
aaa
jg
out
arpl
popf
mov
sub
and
dec
out
cmp
cmp
pop
mov
repz
call
mov
(bad)
cli
pusha
and
arpl
xchg
mov
pop
pop
dec
data16
mov
arpl
sbb
push
sub
inc
repnz
shr
sbb
xor
inc
mov
sub
push
(bad)
(bad)
sbb
outs
jle
movs
push
xchg
push
xchg
push
mov
mul
ret
mov
sbb
pop
or
(bad)
jns
or
dec
add
cmps
scas
jmp
repnz
or
sahf
mov
push
shl
scas
in
mov
inc
out
stc
js
sbb
int3
jno
add
sub
jbe
or
(bad)
mov
adc
outs
inc
sbb
and
int3
leave
xchg
inc
pop
scas
out
lods
cmps
or
sub
push
pop
loopne
sbb
xchg
ds
pushf
cmp
xchg
mov
xchg
push
cmp
fwait
mov
inc
test
bound
mov
sti
push
sbb
out
sbb
pop
lods
mov
mov
mul
xor
mov
sub
jb
adc
jo
mov
adc
xor
fs
cmp
mov
(bad)
xlat
mov
inc
retf
and
jmp
aaa
arpl
aad
push
cvtpi2ps
adc
div
mov
in
cdq
pop
push
cmp
mov
add
je
cmps
push
(bad)
lds
or
pop
into
pop
dec
jmp
push
mov
das
jp
(bad)
jp
jb
mov
jb
and
lock
xchg
mov
clc
mov
lea
cmps
jae
cmp
loop
test
in
mov
jmp
les
xor
and
jns
lods
mov
popf
jecxz
lds
lds
jg
lahf
adc
xor
inc
call
ss
popa
into
inc
push
cs
mov
xchg
jae
jmp
leave
mov
dec
aas
cmc
pushf
xchg
lock
inc
clc
std
jmp
xor
ret
mov
xchg
sub
fnsave
mov
jmp
fild
adc
adc
loop
hlt
jp
in
mov
dec
and
idiv
cmps
add
xchg
leave
or
daa
call
call
sub
dec
adc
xchg
and
add
retf
or
sbb
ins
(bad)
cmc
xor
mov
adc
imul
sbb
push
push
xor
cmp
jbe
jmp
outs
jo
test
repnz
jnp
push
mov
mov
ror
int
inc
fadd
sbb
inc
push
push
call
(bad)
aas
pusha
jo
dec
ror
sbb
or
push
mov
not
mov
mov
imul
add
sbb
push
je
pop
loopne
mov
mov
xor
mov
xor
adc
inc
cs
rcr
pop
(bad)
es
dec
push
ins
sbb
ret
(bad)
fisttp
imul
push
mov
jno
inc
sti
std
adc
fstp
dec
sub
xor
sbb
cld
dec
std
jo
pop
popf
lahf
mov
rol
cwde
push
xlat
push
mov
(bad)
pop
ficomp
mov
in
mov
outs
in
push
popa
lods
jmp
add
xchg
popa
dec
add
sbb
jae
das
sti
cmp
daa
dec
push
and
imul
adc
mov
inc
mov
jl
dec
xor
push
add
xchg
sub
sub
add
imul
movs
dec
in
fistp
lea
xchg
push
pop
test
sbb
sub
aad
and
adc
sub
xor
inc
xor
ror
lahf
pop
test
in
(bad)
std
add
sbb
push
cmp
fbstp
fdecstp
xor
dec
stos
movs
sbb
dec
popa
mov
enter
jnp
sahf
mov
ficomp
out
mov
retf
jo
add
mov
push
xchg
call
add
mov
push
inc
adc
sbb
pop
je
sbb
inc
outs
jp
jmp
mov
icebp
mov
sbb
pop
and
inc
jmp
mov
sub
mov
push
adc
stos
aam
jge
jno
sub
mov
xchg
aaa
mov
hlt
sub
call
aad
push
pop
mov
inc
inc
(bad)
fisttp
lea
xchg
add
sahf
mov
stc
hlt
lahf
fdivr
xchg
fld
das
dec
xchg
push
ret
call
push
les
mov
inc
xor
aaa
pop
cmps
(bad)
inc
outs
js
lock
pop
sub
fist
sbb
push
cmp
(bad)
icebp
xchg
mov
(bad)
pop
adc
sub
rol
rcl
mov
leave
mov
repz
jae
pushf
mov
xchg
lods
xchg
push
add
jae
shr
jo
jp
sub
cmps
sbb
or
sub
lock
pusha
aas
xchg
xor
ss
pop
pop
movs
data16
clc
mov
leave
sar
mov
or
push
mov
movs
push
sub
movs
sub
loope
mov
not
mul
cmp
adc
adc
hlt
fs
jle
xor
mov
dec
enter
push
pusha
sar
mov
mov
inc
add
add
dec
fcmovnb
sub
int
sbb
dec
fwait
mov
xchg
addr16
push
cld
mov
repz
mov
fiadd
and
dec
shl
fistp
gs
sub
retf
movs
push
fwait
ss
jmp
aad
(bad)
xor
pop
push
js
pmaxsw
cmp
mov
(bad)
adc
inc
mov
pop
push
out
icebp
xor
ss
out
pushf
popa
imul
sub
int
jecxz
ret
rcr
sub
mov
cmp
(bad)
mov
cmp
dec
clc
rcr
ins
lods
push
mul
dec
in
ret
add
mov
inc
xchg
mov
pop
mov
(bad)
push
jns
stos
sbb
inc
mov
cdq
cmp
out
mov
add
imul
into
popf
add
and
(bad)
movs
and
dec
std
movs
outs
ins
movs
cmps
call
xchg
pop
sar
mov
enter
lock
push
(bad)
cmp
pop
in
jnp
jb
inc
push
shld
ja
movs
out
aam
(bad)
sub
push
iret
mov
xor
sub
jo
push
jne
sbb
btc
jmp
inc
and
in
sbb
xor
iret
dec
out
cmp
add
inc
ins
call
outs
push
xchg
mov
xchg
sub
cmp
mov
xchg
xor
jb
lahf
inc
xor
fld
jecxz
mov
ficom
and
and
mov
clc
mov
and
loope
loopne
(bad)
int3
repz
dec
(bad)
adc
and
outs
nop
xchg
repnz
xor
fmul
cmp
sub
jmp
stc
sub
push
and
cdq
popf
push
inc
xchg
out
cld
dec
in
mov
hlt
pop
mov
xchg
mov
dec
(bad)
pop
and
and
stc
bound
mov
shl
clc
jg
push
call
clc
jmp
int3
or
push
mov
nop
push
add
into
loopne
stc
into
gs
repnz
push
jmp
iret
dec
cs
xor
retf
xchg
lods
outs
test
cdq
pop
push
sub
clc
jb
imul
cld
(bad)
mov
cmp
push
sub
rcl
pop
ds
sub
push
jl
pop
mov
adc
cmp
nop
xchg
cmp
add
lea
lahf
mov
cld
sbb
inc
outs
xchg
push
aas
sub
out
mov
sahf
shr
xor
sbb
push
inc
jb
and
test
and
sbb
adc
mov
(bad)
dec
das
inc
test
xor
cmp
scas
les
les
push
and
repz
cli
and
popa
mov
jl
jl
movs
sbb
sub
stos
xchg
fbld
xor
aaa
fdivr
xchg
or
dec
xchg
ins
call
sti
xchg
jg
repz
inc
xor
cs
xchg
ficomp
sti
mov
inc
int3
nop
dec
das
xchg
inc
or
into
and
push
out
cmp
inc
mov
add
outs
fidiv
jnp
push
int3
pop
test
outs
(bad)
mov
test
gs
pop
jmp
cmp
xor
lods
push
cli
push
cmps
(bad)
das
faddp
mov
jg
push
and
cmp
mov
mov
cmp
mov
sbb
fcmovnu
add
xchg
pop
and
sub
cmc
icebp
mov
cmp
xchg
push
xchg
out
add
cld
mov
adc
stc
mov
mov
jo
cmp
pop
or
es
mov
or
les
jmp
hlt
or
mov
xor
aas
dec
xchg
nop
xor
jmp
mov
fcmovnb
add
adc
push
pop
idiv
pop
mov
jmp
js
sub
(bad)
cmp
mov
clc
stos
into
pop
sbb
lods
fcomp
jge
add
mov
cmp
pop
mul
(bad)
in
mov
js
movs
aam
xchg
and
adc
mov
fdivp
popf
dec
mov
and
xchg
iret
sbb
and
imul
push
mov
xchg
ins
lea
ins
or
mov
adc
dec
outs
lahf
sbb
sbb
dec
xchg
(bad)
out
out
mov
scas
cli
sbb
out
adc
ret
sbb
ficom
(bad)
aad
xor
mov
outs
xor
mov
cmps
in
sbb
add
add
movs
pop
jb
push
push
jecxz
punpckldq
sub
add
aas
adc
enter
loopne
push
add
add
jns
in
mov
sbb
ins
mov
mov
call
jmp
xor
jecxz
cmps
ins
sbb
xchg
retf
aam
fwait
xor
pop
mov
pop
iret
dec
das
sahf
xor
xor
div
dec
and
jl
sub
in
push
mov
mov
sti
adc
ja
clc
mov
push
sub
in
imul
mov
push
pop
popf
je
movs
lea
nop
cmp
mov
aaa
mov
pop
pop
jg
aam
inc
in
inc
stc
in
push
sti
xor
(bad)
xor
pop
add
jbe
inc
aam
cmc
or
in
xor
mov
(bad)
jge
fsubr
ror
pusha
repz
xor
jb
mov
and
and
cwde
jmp
push
lea
mov
movs
jmp
mov
inc
dec
ret
test
aam
stc
jno
jb
pop
push
jmp
in
push
or
or
sbb
inc
xchg
jmp
push
dec
dec
or
mov
pop
sub
cmp
arpl
icebp
(bad)
dec
shl
mov
cmp
push
pop
test
inc
adc
or
and
push
dec
add
cwde
jo
xchg
cmp
sbb
mov
jecxz
sbb
jbe
pop
sbb
xchg
cmp
in
lock
push
imul
sub
add
cmp
xchg
jo
fsubr
mov
adc
cdq
adc
mov
xor
sub
aaa
push
jb
pop
inc
jge
sbb
jg
daa
pop
call
popf
dec
scas
mov
loope
push
shl
xor
es
fnstenv
das
push
inc
mov
(bad)
js
rcr
push
xlat
imul
loope
out
mov
(bad)
ja
cmp
jo
imul
mov
stc
inc
test
mov
mov
add
xchg
pop
jno
or
popa
(bad)
and
and
popa
ret
adc
cwde
cdq
xchg
gs
imul
xchg
ret
pop
mov
inc
js
out
fadd
stos
movs
out
cmp
ds
push
popa
inc
xor
pop
lahf
daa
adc
sahf
stos
and
aam
or
imul
int
cmp
pop
gs
and
(bad)
dec
in
jae
mov
pminub
fcomi
and
pop
inc
sub
adc
cmp
push
xor
sbb
xor
popa
mov
push
adc
adc
dec
cmc
jmp
or
xor
cld
inc
adc
add
inc
add
cmp
in
daa
add
adc
icebp
out
push
addr16
jmp
dec
inc
fwait
push
sub
push
mov
into
mov
rol
push
and
push
jmp
out
pop
ja
sub
out
adc
cmp
arpl
lds
and
popa
inc
idiv
mov
dec
std
mov
xor
mov
sbb
jno
cmps
popa
xchg
loop
arpl
adc
scas
es
(bad)
and
aad
mov
push
mov
and
push
loop
xchg
test
es
std
adc
push
out
cmove
jns
and
out
add
mov
sub
lds
lods
retf
arpl
popf
mov
pop
dec
stc
mov
inc
pop
popf
loop
cwde
xor
fdivrp
icebp
iret
cmp
and
pop
arpl
xchg
add
ret
lods
xor
repz
dec
(bad)
out
pop
pop
jge
xor
jecxz
mov
jg
xchg
sbb
push
jo
pop
fs
(bad)
jmp
xor
fcomp
adc
add
mov
enter
push
pop
repz
cmp
inc
jb
popa
std
lahf
inc
add
fs
push
cmp
outs
rcl
stc
and
lock
jl
popf
sbb
inc
addr16
(bad)
push
or
mov
cmc
push
jb
sub
mov
mov
outs
xor
push
jmp
aam
out
int3
cmp
sbb
scas
mov
out
mov
xchg
(bad)
fisttp
or
pop
shl
jne
and
int
in
daa
xchg
(bad)
dec
jge
push
inc
jmp
ins
cmp
fwait
ret
adc
mov
(bad)
lahf
jbe
mov
out
arpl
mov
xchg
cmp
(bad)
mov
lahf
sbb
daa
sub
test
cmp
movs
out
mov
cli
xor
in
mov
cmps
sub
lahf
cmps
sbb
or
jle
add
mov
cmp
pop
das
mov
dec
(bad)
xlat
movs
adc
ret
jge
iret
int
int
lea
mov
fcom
retf
fstp
mov
and
ja
jg
inc
retf
push
aas
pushf
adc
pop
cs
jg
xchg
test
jge
cwde
stc
add
test
ret
(bad)
jge
call
xor
sti
test
addr16
gs
(bad)
icebp
call
in
test
sub
(bad)
out
sti
mov
inc
cdq
mov
xlat
and
sbb
inc
add
loopne
sub
sbb
pop
retf
inc
lahf
adc
mov
push
push
push
dec
and
jl
stos
add
test
aas
sub
pop
push
(bad)
xchg
xchg
lock
and
out
cmp
jno
loopne
jns
sub
add
or
push
mov
test
inc
loope
int
jmp
pop
loope
(bad)
retf
xor
adc
adc
or
nop
cmps
ficom
div
xchg
adc
xor
scas
mov
sbb
cmp
in
out
(bad)
lock
sbb
cli
mov
add
int
lahf
rcr
pop
mov
loope
push
lahf
mov
jne
jae
lock
test
shr
repz
shl
rcl
mov
jl
add
adc
(bad)
cmp
sub
mov
sub
imul
jb
sahf
call
in
movs
cld
stos
push
and
lahf
push
xchg
aad
push
aam
popa
or
in
sub
dec
push
shl
xchg
mov
xchg
xchg
(bad)
cs
js
xchg
pusha
xor
leave
call
mov
dec
mov
fidiv
popa
in
mov
pop
push
xor
fsubr
adc
shl
lahf
stos
(bad)
aam
pop
das
js
sbb
jmp
loopne
popa
call
or
push
imul
vrcpss
xchg
js
or
data16
xchg
dec
pop
sub
mov
cmp
mov
ret
push
dec
jb
jmp
sbb
mov
pop
mov
inc
sahf
bound
sbb
sub
mov
sub
and
mov
sub
ficom
les
cmp
movs
pop
retf
adc
push
pop
repz
sub
xchg
sahf
sub
shl
sub
add
jbe
int
js
popf
ja
loope
faddp
xchg
sub
mov
stc
or
mov
xor
inc
cmp
and
fisubr
adc
in
je
pop
cmp
out
adc
jnp
sti
mov
mov
xor
(bad)
jmp
xchg
mov
cmp
or
dec
loope
ja
sub
imul
push
rcl
inc
sub
mov
je
das
iret
mov
es
and
dec
mov
mov
outs
pop
int
popa
mov
cmps
mov
(bad)
iret
cmps
cld
and
ins
aad
ds
jmp
stos
imul
(bad)
cmp
xor
add
and
or
mov
les
out
ds
pop
pop
shl
out
clc
es
shld
adc
dec
(bad)
cmp
jmp
popa
or
mov
jno
sub
cmp
jbe
call
mov
sahf
shl
xor
leave
and
sbb
fcomp
mov
cs
xchg
adc
xchg
xchg
pushf
sub
add
out
addr16
cmps
scas
inc
jbe
popa
icebp
fld
or
ds
shl
ss
cmp
imul
mov
push
pop
fldz
inc
rcl
sbb
pop
retf
ins
nop
outs
mov
push
(bad)
push
pop
mov
add
mov
jbe
mov
sub
leave
mov
bound
shr
dec
or
pop
pop
lahf
mov
cmps
xor
nop
xor
mov
shl
fsubr
add
mov
lahf
in
outs
ret
mov
rol
mov
rcl
pop
cmp
int
js
jne
loopne
jle
lods
imul
sub
jbe
aad
movs
push
cmp
cs
ret
call
jae
sar
xchg
out
add
pop
out
les
inc
pop
pop
jno
mov
add
mov
push
(bad)
cld
pop
ret
cmp
std
pop
cmps
fisub
sbb
(bad)
(bad)
mov
(bad)
xlat
or
mov
add
jg
pushf
cmp
mov
adc
scas
mov
add
and
jmp
sub
adc
adc
out
add
push
gs
test
nop
xchg
hlt
sub
mov
xor
adc
stos
fimul
pop
sbb
add
int3
adc
leave
and
and
movs
call
pop
mov
std
jb
sahf
popf
fsubr
cmp
retf
sti
adc
cmp
xor
ins
pusha
outs
repz
mov
pushf
push
push
sbb
out
mov
(bad)
das
leave
inc
cmps
push
js
add
popf
pop
lds
dec
int
test
fnstenv
dec
adc
lea
and
daa
les
repz
or
dec
mov
adc
jae
sbb
dec
xchg
sbb
xchg
inc
retf
(bad)
jae
xchg
adc
xchg
rcr
add
add
adc
ss
pop
inc
push
jne
jne
paddd
inc
stos
and
neg
aam
push
popf
mov
hlt
xchg
xchg
enter
pop
inc
ins
pop
fwait
test
aad
sub
pop
jp
fwait
dec
jecxz
jae
xchg
or
cmp
sbb
fsub
or
mov
sub
mov
clc
dec
out
inc
pop
and
xchg
and
cli
ret
sub
test
adc
push
push
cs
xchg
imul
mov
pop
dec
movs
jnp
dec
out
inc
rcr
sub
imul
sub
inc
jb
and
(bad)
ja
mov
push
and
ds
neg
xchg
imul
jmp
test
test
cmps
xchg
and
fwait
push
pushf
push
sahf
mov
call
jmp
inc
fsub
jg
and
not
outs
mov
mov
sbb
(bad)
lock
ins
popa
arpl
dec
push
dec
sar
cmp
sbb
xor
dec
imul
shufps
lods
lods
mov
cwde
pushf
add
adc
sbb
repz
xchg
sub
fwait
ss
or
jp
data16
ret
addr16
or
cmp
xor
fsubr
and
xor
leave
inc
retf
xchg
xor
push
xchg
shl
fmul
cdq
aaa
inc
jns
jg
cwde
pop
mov
ret
rol
sub
(bad)
sub
push
mov
cmp
call
and
ds
cmps
ret
and
push
rcl
enterw
out
jl
rol
cmp
outs
fist
in
xor
jle
xor
pusha
sbb
scas
sbb
(bad)
(bad)
in
sahf
and
repz
cmp
repnz
jno
in
and
inc
push
xchg
xchg
mov
or
jb
retf
fucomip
add
or
add
lahf
pop
xor
stos
pushf
shl
mov
inc
test
mov
inc
mov
in
into
test
lea
cwde
xchg
push
scas
and
or
and
sbb
cmc
inc
mov
mov
movs
and
push
cmp
or
sbb
add
cmp
adc
cmc
test
retf
jns
cmp
ds
in
(bad)
das
xchg
jo
jl
fs
jb
push
inc
in
dec
mov
out
arpl
jle
in
inc
mov
rcl
xchg
push
int3
fadd
mov
(bad)
mov
std
and
pop
int
adc
mov
cwde
dec
out
jae
addr16
pop
cdq
(bad)
pop
cli
jae
or
rol
xchg
es
cdq
fwait
pop
rcr
fsubr
lock
ins
mov
psubsb
daa
pop
mov
jnp
push
adc
cmps
sub
nop
call
add
push
in
pop
and
repnz
and
sbb
xlat
mov
and
add
shl
and
into
jmp
or
(bad)
and
lahf
repz
leave
dec
shl
jns
mul
push
xlat
cmp
pop
arpl
cwde
and
xlat
jno
shr
cmps
lahf
mov
test
in
movs
in
mov
and
mov
dec
mov
mov
push
pop
icebp
(bad)
int3
ins
xor
mov
or
push
scas
lock
mov
bound
or
mov
jp
inc
scas
out
test
inc
sub
lock
sub
out
ret
mov
scas
not
and
mov
push
fstp
cdq
add
mov
fist
mov
push
adc
jge
js
in
xor
pop
cld
add
sbb
xchg
stc
pop
scas
xor
adc
sahf
mov
pusha
and
mov
iret
mov
not
or
mov
pop
lods
int
xor
mov
cld
inc
enter
mov
sub
xlat
pop
jp
cmp
scas
mov
fstp
sar
shr
dec
inc
dec
or
rol
add
xchg
aas
ret
shr
mov
pop
adc
xor
add
mov
mov
cli
(bad)
xlat
xchg
xlat
popa
lods
lods
inc
bound
rol
loopne
push
sub
rol
in
mov
mov
shr
jae
in
push
in
out
mov
pusha
xchg
jb
icebp
std
mov
sub
sub
cmc
mov
out
sub
imul
not
icebp
dec
cmp
fs
aad
in
movs
bnd
retf
add
mov
fistp
pop
adc
jp
dec
xor
test
jne
aad
jmp
push
push
jmp
jo
rcr
add
lods
daa
test
add
or
dec
(bad)
frstor
sub
xlat
adc
lods
cld
adc
sbb
inc
adc
icebp
popa
inc
sbb
and
cmp
ret
out
cdq
imul
shl
dec
in
add
push
mov
stos
inc
loope
hlt
xchg
stos
dec
dec
mov
push
cmps
push
fadd
inc
jns
sub
cwde
ja
ins
pop
adc
jg
mov
pop
cmp
add
into
repnz
mov
cmp
in
xor
push
inc
out
push
sub
neg
push
(bad)
cwde
stos
seto
jle
mov
ins
inc
(bad)
div
mov
repnz
scas
inc
jl
sub
rcl
imul
movs
jae
sbb
jp
cmp
lds
sahf
mov
int
and
cmp
std
push
push
movs
gs
addr16
and
sbb
and
xor
addr16
sbb
pop
pop
dec
mov
add
out
test
adc
cmp
movs
pop
in
stos
push
inc
push
outs
pop
stos
sahf
clc
psignb
adc
push
inc
xor
xor
mov
dec
lods
xchg
xchg
fs
and
rcr
and
sub
lods
add
mul
jmp
enter
ds
loope
out
jbe
mov
sub
cmp
ds
or
not
adc
pop
and
jecxz
imul
adc
cmp
mov
mov
shl
jae
inc
sub
jmp
xchg
jae
add
addr16
mov
add
(bad)
daa
(bad)
cmps
ja
jnp
int3
mov
pop
ins
pop
mov
mov
fisub
scas
adc
cld
sub
cmp
outs
fadd
mov
mov
xchg
or
pop
cwde
inc
cli
adc
scas
adc
test
int
mov
fisttp
push
sahf
addr16
mov
lods
(bad)
xchg
mov
bound
test
(bad)
jl
mov
outs
mov
cmp
fmul
(bad)
fidiv
jae
cmp
dec
cwde
retf
in
jne
adc
aas
mov
sub
push
adc
xchg
dec
cmc
push
fimul
fmul
aaa
pop
call
pop
and
ret
fdivr
adc
inc
add
(bad)
imul
ss
push
jmp
jb
sub
adc
(bad)
mov
lahf
mov
and
pusha
sar
sub
dec
and
jae
push
sahf
mov
xor
mov
adc
dec
loopne
mov
push
mov
es
xchg
and
stc
pop
push
cdq
mov
and
ss
xor
and
pushf
aas
fdiv
popaw
cmp
mov
pop
jl
std
mov
cli
and
in
mov
out
push
dec
sahf
loope
jo
and
data16
in
dec
cmps
movs
jl
pop
out
or
inc
mov
out
xchg
out
mov
cmp
sub
dec
and
inc
sub
(bad)
and
adc
ins
arpl
movs
ja
neg
int3
cmp
pop
cwde
fstp
test
inc
jbe
mov
jecxz
scas
ret
and
enter
jne
nop
jbe
es
mov
rcl
push
cmp
call
mov
mov
cmp
cmp
jmp
mov
outs
pushf
js
push
mov
mov
pop
and
and
and
and
mov
inc
(bad)
daa
rol
in
mov
dec
cmc
les
scas
ja
enter
jbe
pop
mov
sbb
push
dec
inc
nop
call
jne
arpl
and
inc
lahf
and
push
jmp
ins
rcr
dec
mov
mov
dec
(bad)
int3
out
sbb
sbb
inc
mov
push
and
sbb
fadd
push
outs
push
fdiv
popf
cdq
int3
icebp
scas
outs
pop
and
fiadd
stos
lds
add
adc
cmp
cs
or
dec
sahf
or
jo
mov
leave
fisubr
push
adc
or
xor
(bad)
and
neg
mov
dec
mov
shl
push
dec
out
xchg
ss
or
imul
pop
push
ja
mov
cld
imul
repnz
mov
lods
and
mov
in
imul
sbb
mov
xchg
cld
bound
in
test
adc
sar
sbb
shr
cmp
js
push
jmp
jnp
retf
cmc
aas
stc
test
mov
in
sbb
aad
bound
xchg
sub
xchg
add
jb
inc
inc
pop
mov
jmp
pop
add
push
scas
movs
stos
xor
push
cmp
or
adc
call
pop
cmps
imul
and
push
or
jnp
jmp
inc
push
jl
fcomp
stos
retf
or
mov
mov
out
sbb
pusha
clc
or
call
stc
cmp
cmps
jns
rcl
xchg
les
xchg
jmp
enter
sbb
dec
pop
je
mov
push
scas
and
les
imul
mov
ret
or
repz
jo
jno
xor
bound
adc
push
addr16
inc
dec
and
into
mov
movs
push
je
movs
sahf
and
aaa
jbe
js
nop
push
mov
leave
bound
inc
fcom
pushf
fwait
sbb
imul
inc
cdq
lds
xchg
pop
(bad)
lahf
daa
jnp
in
addr16
fs
inc
loop
xlat
mov
push
les
in
cmps
xchg
pop
pop
daa
jae
cmp
pushf
std
or
xchg
push
int
out
inc
ret
push
test
mov
or
or
sbb
push
pop
cmps
les
xor
jo
mov
or
arpl
ja
sub
push
scas
mov
das
rcr
adc
stos
loop
movs
ret
test
hlt
div
fcomp
cli
push
mov
xchg
dec
aas
jne
pop
xchg
and
mov
mov
mov
push
mov
cld
push
mul
pop
mov
aam
std
xor
pop
movs
fwait
imul
cmps
sub
inc
sahf
sub
js
addr16
scas
cmps
push
xor
out
jmp
(bad)
pop
dec
pop
inc
call
push
cmp
leave
push
push
sti
pusha
cmps
mov
fmul
scas
call
mov
jb
test
scas
sub
leave
inc
mov
adc
sahf
mov
call
add
aaa
jbe
in
dec
inc
xlat
sti
dec
outs
jo
push
xor
cmps
inc
jae
es
inc
neg
cdq
xor
repnz
aaa
ds
repnz
lock
iret
test
imul
shl
jecxz
mov
lods
push
loopne
push
not
cmp
neg
and
mov
daa
enter
lahf
pusha
loop
jmp
out
lahf
sbb
mov
sbb
loope
test
ret
lods
cmp
xchg
sbb
ror
loope
cmp
cld
and
inc
ror
xchg
mov
mov
mov
mov
inc
lds
push
push
ss
inc
jne
fdivr
cmps
jg
ds
mov
dec
movs
dec
jns
loope
hlt
outs
aas
(bad)
mov
and
mov
jl
push
push
cs
adc
xchg
mov
cmp
mov
cmp
cmp
(bad)
mov
out
push
not
push
push
sbb
or
add
test
or
xchg
mov
rcr
dec
mov
aaa
jae
into
(bad)
mov
jne
xor
dec
or
mov
add
bound
je
xor
cdq
(bad)
sub
xchg
cmp
icebp
(bad)
sub
cwde
inc
xor
mov
fs
and
out
aam
pusha
sbb
fwait
arpl
add
jne
arpl
xchg
mov
je
jnp
mov
dec
lods
bound
sbb
sbb
fcomi
jno
or
inc
sub
call
mov
das
cmc
push
xlat
cmp
sub
ret
sahf
stc
test
dec
mov
nop
mov
cmp
std
lock
and
pop
add
mov
push
xor
ja
add
inc
pop
ror
xchg
xor
and
loope
movs
in
jl
mov
aaa
lahf
daa
dec
sbb
inc
out
loopne
jne
adc
mov
mov
xor
jnp
mov
outs
sar
scas
imul
mul
mov
fs
jecxz
inc
mov
fcmovnb
fcmovbe
adc
cmc
mov
pusha
mov
fwait
add
das
jp
jp
adc
cld
ins
out
retf
js
fsub
cmp
push
push
inc
mov
inc
leave
stos
jg
add
popf
xchg
cmp
leave
daa
sbb
jl
bound
push
shl
es
pop
xchg
add
repnz
ss
jl
xchg
mov
inc
ins
and
jmp
and
mov
xchg
out
popa
data16
mov
jmp
ret
cdq
sub
movs
leave
cdq
arpl
test
dec
cmps
adc
int
push
std
je
sub
mov
cmp
fiadd
in
xchg
or
cdq
lods
cmp
mov
into
mov
cwde
push
pop
mov
adc
dec
jno
add
mov
mov
imul
jnp
repnz
and
sbb
adc
jge
sbb
gs
(bad)
adc
xchg
jge
mov
mov
jecxz
jns
in
jbe
addr16
xor
jecxz
leave
jmp
in
test
mov
cmp
imul
stc
jg
hlt
frstor
mov
pushf
xchg
push
mov
xor
js
or
repz
je
enter
bound
mov
shl
cli
xchg
sub
cmp
jae
stc
mov
pop
sub
xor
xlat
xlat
mov
and
pmaxsw
push
push
loope
mov
xchg
hlt
cs
jae
movs
xchg
xchg
jbe
mov
inc
xor
jo
xlat
lea
jge
or
dec
stc
jnp
pop
push
loopne
(bad)
adc
arpl
pop
pushw
sti
pop
mov
ret
int3
bound
xlat
clc
jb
aam
clc
out
jb
dec
sbb
xor
lock
jmp
into
jns
dec
lock
cmp
aas
cs
dec
jge
test
jo
add
mov
pop
mov
xchg
or
lea
outs
aad
push
xor
outs
xor
xor
mov
imul
and
mov
je
pop
das
xchg
mov
loope
push
dec
or
xchg
movs
push
stos
aam
xchg
addr16
cld
popa
xor
jg
push
and
sti
popf
test
mov
xor
sbb
push
sar
js
mov
daa
adc
out
bound
sbb
aaa
xor
or
jg
mov
mov
and
adc
retf
(bad)
push
lahf
sbb
push
cs
push
hlt
outs
fnsave
adc
shr
mov
les
frstpm(287
movs
outs
cli
inc
rol
adc
aam
xchg
test
xchg
mov
imul
ins
adc
daa
adc
jecxz
bound
adc
into
dec
bound
aam
dec
and
out
or
xor
fst
jl
push
rol
aaa
inc
push
fldl2t
xchg
(bad)
mov
je
ret
ror
je
pop
dec
xor
enter
mov
stos
dec
retf
loop
dec
fwait
add
pop
xlat
sbb
fst
mov
xor
mov
mov
mov
outs
into
jno
push
retf
fwait
cmp
cmp
repz
in
repnz
imul
scas
(bad)
push
cli
xchg
xor
xchg
push
mov
push
mov
jb
mov
retf
add
cdq
push
push
outs
mov
clc
xor
(bad)
fsubp
lock
add
ret
icebp
add
or
cwde
inc
retf
pusha
imul
pmullw
sti
nop
cmp
mov
out
hlt
inc
jno
popf
mov
outs
data16
inc
adc
das
add
xor
mov
push
rcl
mov
or
xchg
adc
add
sbb
mov
lods
fyl2xp1
nop
adc
sub
daa
jbe
sub
push
bnd
pop
dec
mov
cs
mov
mov
cmps
div
or
loop
in
mov
add
in
jno
scas
scas
xchg
sub
les
inc
hlt
xchg
ror
or
loopne
mov
aas
stos
mov
mov
xor
cmp
rcr
sbb
ins
out
stos
jecxz
fwait
ret
cld
dec
sbb
mov
mov
xor
aaa
int
jb
adc
xchg
push
cwde
xor
mov
xor
lock
hlt
fld
mov
xchg
pinsrw
shl
jb
int
clc
movs
adc
out
ds
addr16
ja
dec
mov
sub
xor
bound
and
(bad)
out
leave
jae
jne
add
sbb
push
data16
cmp
xchg
push
jmp
xchg
call
es
shl
imul
mov
out
fwait
gs
shl
mov
fst
ret
mov
xchg
pop
mov
(bad)
fwait
push
and
imul
fadd
outs
mov
pop
dec
or
push
push
xlat
jne
mov
and
pushf
jb
push
imul
inc
ror
push
mov
adc
fidivr
sub
jnp
sub
xor
mov
test
xor
add
and
sub
lds
call
rcr
in
arpl
mov
mov
imul
test
jecxz
cwde
jmp
xchg
jno
in
sbb
adc
mov
dec
call
push
enter
js
inc
pop
push
xor
or
dec
ficomp
jbe
int3
xchg
mov
add
mov
hlt
sub
dec
ret
call
lea
mov
inc
fistp
sbb
(bad)
arpl
push
std
mov
adc
rol
pop
sbb
mov
into
repz
rcl
mov
jns
jns
and
(bad)
(bad)
stos
clc
int3
fcomp
aas
mov
(bad)
or
adc
(bad)
ds
jle
fnstenv
sub
clc
mov
lock
and
lods
cld
pop
inc
mov
cmp
into
cmp
aad
and
sub
and
inc
gs
fs
push
scas
jge
js
sub
inc
scas
sbb
sub
enter
push
jbe
cmp
adc
lds
mov
lods
xlat
es
cli
push
mov
inc
movs
push
push
ficom
int3
(bad)
rcr
imul
je
push
and
ror
outs
push
sbb
jns
or
addr16
sub
xor
gs
aaa
das
jle
(bad)
(bad)
inc
sbb
cmp
sbb
add
xchg
adc
cmps
clc
movs
xchg
cli
xlat
sbb
fiadd
sub
push
cmp
xchg
jae
cmp
fcmovnu
mov
push
push
test
movs
mov
mov
test
jmp
or
xchg
add
imul
pop
xor
sub
pop
push
push
repnz
mov
mov
jo
outs
adc
sub
adc
push
lock
pop
mov
xchg
add
test
out
ret
movs
mov
jle
add
stos
lds
test
pop
out
push
pop
cmp
mov
pop
les
dec
mov
xor
das
nop
mov
jb
je
mov
nop
(bad)
mov
out
popa
dec
inc
jmp
dec
pop
mov
nop
adc
in
bswap
popa
in
push
out
out
xchg
outs
loop
stos
mov
cmp
retf
and
inc
fwait
cwde
push
add
jg
jp
mov
xchg
pop
ja
dec
inc
inc
addr16
sub
call
xchg
mov
xchg
pop
loope
mov
(bad)
call
popf
mov
icebp
mov
jl
das
sti
out
(bad)
mov
jge
ds
aam
sub
inc
cs
imul
leave
jae
cmp
cmp
cs
push
call
pop
jnp
sahf
mov
push
jnp
xor
ds
fs
and
or
xor
mov
scas
sbb
leave
mov
inc
sbb
push
rcl
into
clc
daa
popf
out
xor
jg
clc
sub
das
fwait
jl
mov
fnstcw
es
and
sub
loope
mov
jp
aad
dec
xchg
call
cld
into
dec
and
push
push
sub
adc
add
xor
xchg
jb
(bad)
data16
mov
rol
cwde
adc
adc
(bad)
(bad)
xchg
fdiv
pushf
mov
outs
jmp
or
inc
or
jo
cmp
movs
xchg
loope
cmp
dec
loope
inc
repnz
ror
test
daa
call
cmps
imul
adc
mov
push
xchg
ins
call
mov
popf
cmp
pop
mov
sub
mov
dec
pop
dec
imul
inc
loop
shl
popf
xchg
mov
stc
xor
out
stc
add
cmp
test
add
mov
retf
pop
sti
and
xchg
jnp
push
inc
popa
mov
fwait
xlat
(bad)
movs
stc
jge
popf
pop
dec
iret
jmp
sbb
jnp
je
xchg
sub
lods
xchg
push
xchg
cmp
mov
(bad)
pop
lods
movs
movs
pop
pop
sar
sub
cmp
icebp
inc
outs
adc
ins
lods
xor
and
cmp
stos
std
bound
xchg
mov
xchg
mov
arpl
in
bound
sub
adc
sub
and
iret
xchg
je
mov
pop
addr16
int
faddp
mov
inc
jle
fistp
cmp
dec
out
inc
sub
xchg
dec
bound
repz
add
test
(bad)
aam
mul
add
out
or
and
addr16
add
jnp
mov
add
popf
rcr
xor
(bad)
and
add
test
imul
in
push
add
cld
ret
sbb
pcmpeqw
xchg
test
adc
inc
mov
pop
and
sbb
loope
(bad)
enter
pop
xchg
ins
pushf
sub
jno
scas
imul
sub
mov
sub
pop
mov
mov
xor
neg
call
sub
cmp
jle
jle
mov
(bad)
pushf
sbb
mov
sub
dec
pop
retf
stos
scas
les
jg
jo
lods
(bad)
or
xor
in
xchg
ret
lahf
loopne
hlt
push
es
ja
and
cdq
mov
les
das
ret
movs
xchg
mov
mov
xchg
ss
stos
pop
dec
loop
fs
jecxz
sub
test
mov
and
int
inc
cli
(bad)
jae
add
cmp
outs
lds
or
mov
adc
mov
rcr
cmp
xchg
mov
das
outs
in
push
scas
dec
sub
xchg
sub
push
xor
sbb
mov
inc
mov
imul
or
pop
test
mov
lods
jl
sub
jmp
mov
push
cmc
adc
pop
dec
cmps
mov
cmp
das
add
xor
cmps
stos
dec
jns
dec
xor
and
jno
mov
xchg
sbb
ror
mov
jbe
fucomip
pop
and
mov
repz
jno
xchg
repnz
pop
jge
ret
push
mov
cmp
in
ret
popa
aaa
fdivr
pusha
push
(bad)
jge
jecxz
(bad)
or
neg
xlat
dec
or
mov
sub
arpl
pop
lds
pop
js
push
push
int
and
mov
and
and
fld
cld
push
shl
push
sbb
xor
mov
pop
rep
sbb
jo
mov
or
push
jg
and
inc
and
frstor
rcl
outs
xchg
sub
xchg
dec
les
mov
(bad)
sbb
mov
cmps
lods
sub
sahf
ins
jmp
jns
cmp
jge
(bad)
jg
aaa
rcr
push
in
cmp
or
retf
add
sbb
es
xor
lds
(bad)
or
mov
and
fisubr
jno
pop
ret
xchg
gs
xor
push
jmp
pop
xor
jbe
xchg
addr16
gs
jecxz
mov
jbe
iret
cmp
cwde
out
inc
cmp
(bad)
jmp
inc
lods
push
pop
xchg
retf
push
data16
pop
bound
mov
jo
fcomp
push
jnp
mov
out
push
ja
leave
fistp
adc
(bad)
jns
mov
aam
cmp
ror
lock
das
xor
mov
ss
add
mov
lods
out
rcr
fdivr
mov
jmp
adc
inc
cmp
aaa
lods
imul
sub
xchg
inc
fld1
movs
sub
push
shr
dec
adc
dec
movs
pushf
retf
jge
add
inc
bound
in
loop
inc
test
mov
out
dec
xor
cdq
adc
into
adc
mov
mov
fidivr
repnz
mov
not
dec
xlat
iret
inc
xchg
clc
scas
cwde
adc
addr16
(bad)
in
les
xchg
adc
cs
xchg
add
(bad)
in
inc
mov
pusha
out
sbb
jns
inc
and
ds
mov
gs
shr
mov
push
mov
jno
mov
sub
out
das
daa
cmc
nop
lahf
popf
bound
aam
stc
dec
retf
mov
in
push
test
stos
mov
cmc
mov
or
test
xchg
gs
lock
cmp
xor
jmp
pop
in
es
hlt
sbb
xor
and
xchg
adc
dec
pop
mov
sub
hlt
or
xor
ins
loop
pop
call
push
nop
xor
in
test
sbb
fdiv
out
mov
dec
inc
es
jne
xlat
pop
mov
jae
shl
cmps
test
pusha
loop
or
sub
cmp
or
and
xchg
and
cmp
xor
fisttp
or
xchg
mov
xchg
imul
or
inc
xor
movs
sub
das
and
inc
or
loope
and
fcomp
mov
into
mov
sbb
dec
push
cmp
repz
xor
lock
cli
mov
test
xchg
pop
pop
jae
add
lahf
fisub
lods
push
jmp
sbb
sbb
test
shr
lea
pop
(bad)
jge
and
pop
push
out
sbb
mov
pop
dec
mov
repnz
add
dec
cmc
out
dec
xor
lds
rol
jg
inc
daa
cmps
add
stc
sub
adc
inc
sub
in
jg
cmp
inc
(bad)
and
and
nop
lahf
or
jecxz
cmp
iret
add
mov
les
mov
aam
and
dec
inc
push
xchg
(bad)
adc
jno
imul
arpl
and
cs
sbb
ja
(bad)
push
and
popf
add
outs
test
and
leave
in
push
cmp
cmps
ffree
push
popa
fscale
push
(bad)
test
jg
bound
lods
xchg
jo
iret
aad
jp
es
cmps
inc
(bad)
sub
mov
sub
gs
push
shr
inc
mov
aaa
xchg
sub
ret
xchg
into
pop
js
xor
addr16
jbe
cmp
sub
mov
adc
ss
mov
pop
sbb
loop
adc
stos
add
push
dec
nop
xchg
add
adc
push
xchg
mov
mov
das
and
inc
xor
jge
xchg
(bad)
leave
push
aam
inc
adc
dec
aam
rol
jo
pop
inc
jb
pop
mov
xchg
jb
and
leave
sbb
in
cli
xor
aam
push
mov
dec
rcr
cwde
and
inc
stos
cdq
adc
adc
sbb
fbld
inc
out
icebp
cmp
out
jbe
iret
addr16
mov
sub
in
xor
outs
int
imul
push
rcl
mov
inc
inc
jnp
dec
adc
(bad)
in
or
push
inc
std
mov
push
mov
push
push
enter
pop
sbb
lock
test
xchg
mov
add
std
xchg
outs
jnp
xchg
add
push
fcmove
add
add
std
cmp
mov
adc
adc
pop
pop
adc
xor
adc
cli
pushf
loop
xor
add
and
mov
pop
das
mov
je
ja
sbb
add
das
rcl
xlat
test
pop
cli
jne
cld
in
test
mov
cld
xchg
xor
xor
sub
mov
mov
aam
adc
add
cmp
mov
push
xchg
push
movs
inc
clc
push
jecxz
sub
sbb
jo
inc
rcl
and
icebp
push
pop
jp
(bad)
pop
gs
ret
(bad)
mov
imul
xchg
and
sahf
retf
dec
lea
xchg
cmp
cmp
test
mov
adc
jnp
jl
inc
pop
fistp
inc
rcr
jb
jmp
dec
mov
pop
stc
push
mov
retf
int
mov
nop
xchg
mov
fwait
popf
push
neg
pop
cmp
stc
pop
scas
add
out
ret
mov
push
adc
ret
retf
jge
les
xor
add
pop
and
sub
mov
aad
dec
pop
movs
cdq
fwait
dec
jg
hlt
sbb
cmp
pop
outs
pop
in
les
neg
and
inc
scas
repz
or
sbb
sti
and
or
mov
or
add
retf
sbb
mov
pop
mov
xchg
cli
sahf
mov
(bad)
outs
sbb
xchg
das
cmps
call
cmp
or
sbb
push
in
test
add
add
dec
xchg
inc
and
and
dec
push
shl
and
cmps
sbb
inc
jb
les
test
(bad)
cld
stos
add
xchg
jle
imul
and
jecxz
xchg
push
cli
cmp
sub
push
pusha
outs
mov
ja
das
adc
xchg
loopne
into
data16
outs
sar
push
rcl
add
dec
daa
out
jmp
lea
popf
pop
arpl
or
scas
pop
or
or
in
sbb
call
fidiv
xchg
jnp
sub
shr
aas
icebp
dec
retf
ins
push
mov
xchg
pusha
not
stos
mov
cmp
pop
inc
push
push
cmps
imul
iret
fidivr
popa
ins
mov
packuswb
rcr
int
xor
popa
fnstcw
movs
xor
push
test
jmp
or
jg
jl
lock
and
imul
imul
push
into
or
lahf
xor
inc
dec
or
push
sti
clc
outs
inc
fdivr
call
aad
adc
xchg
mov
fsubr
xor
or
out
or
fmul
popf
jmp
int3
mov
cmps
pop
sub
dec
loop
push
inc
xlat
add
xor
out
fiadd
sbb
mov
dec
call
sbb
idiv
test
fs
mov
inc
lea
push
inc
xchg
cs
das
xor
std
push
hlt
shr
ins
jmp
xchg
xchg
inc
mov
std
in
xchg
icebp
neg
test
dec
jno
inc
mov
mov
arpl
cmp
shr
mov
(bad)
mov
loop
in
xchg
jae
and
lods
sub
je
push
shr
dec
cmp
test
aad
adc
(bad)
sbb
adc
jle
fldcw
aad
or
ja
mov
and
ss
int
cld
jnp
and
or
mov
fsub
sahf
enter
inc
push
cmp
or
mov
pop
fst
adc
xchg
or
inc
lahf
cmp
sahf
mov
test
test
clc
test
inc
cli
daa
sbb
call
inc
and
cwde
std
nop
scas
add
sub
add
fadd
sbb
test
pop
xchg
or
xor
arpl
loop
rol
aam
push
cmps
add
push
(bad)
cmp
shl
sbb
fst
aas
aad
mov
push
(bad)
cmp
pop
xchg
leave
rol
cmp
sbb
rol
daa
fwait
mov
nop
inc
mov
xchg
dec
int3
mov
sbb
inc
dec
sahf
into
xchg
movs
imul
push
stos
pushf
push
xchg
cmps
cmp
jae
nop
cmps
cmp
loope
inc
(bad)
mov
lea
pop
or
mov
or
sar
mov
pop
daa
into
pop
sub
jecxz
dec
in
mov
fisttp
mov
mov
inc
xchg
enter
clc
push
mov
arpl
dec
movs
xchg
out
cmp
cmp
inc
je
mov
outs
or
mov
repnz
das
xchg
in
lea
push
sub
mov
ss
neg
shl
lea
shr
sbb
clc
test
add
mov
add
cmc
push
jp
out
mov
xchg
inc
(bad)
std
add
nop
ins
push
clc
sbb
adc
loopne
sub
cli
mov
cmp
ret
push
jo
loop
pop
cmp
call
lods
dec
outs
sti
fsubr
mov
leave
cmp
fisub
inc
dec
lods
mov
pop
and
pop
mov
or
xchg
dec
or
inc
fcomp
inc
movs
push
shl
aaa
xchg
in
es
lock
sbb
lods
push
test
mul
outs
xor
(bad)
push
and
retf
inc
js
cld
inc
adc
xchg
cmp
adc
or
pcmpeqw
cmps
mov
lds
cwde
inc
xchg
cmp
pop
retf
mov
xchg
mov
sbb
dec
cmp
ins
add
lods
mov
cdq
fwait
and
ins
hlt
jno
jl
adc
jmp
jg
scas
jge
mov
sbb
cmp
cmp
inc
cli
add
cld
test
pop
data16
jb
ds
mov
fwait
dec
fimul
ror
in
cmpps
inc
lods
jge
jle
add
sbb
cdq
scas
push
not
pop
mov
jo
lods
rcl
outs
aad
je
mov
dec
jns
mov
sub
cmp
lds
add
lods
in
(bad)
outs
retf
sbb
sbb
arpl
and
loope
or
jns
push
into
movs
or
ret
mov
call
sbb
enter
(bad)
ins
jl
or
cmp
aam
inc
jno
xchg
pop
add
out
iret
(bad)
mov
sub
mov
scas
mov
mov
xor
add
mov
xor
xor
mov
mov
out
fstp
push
(bad)
clc
cmp
(bad)
int3
retf
out
dec
int3
lahf
shr
jns
xor
mov
mov
rol
mov
shl
sub
inc
jle
cmps
push
cmc
push
in
dec
jo
imul
pop
xchg
push
outs
mov
push
lea
mov
mov
inc
cmps
jnp
adc
mov
(bad)
icebp
jp
test
inc
shl
mov
push
lods
xchg
dec
jbe
jo
push
add
pop
je
call
cld
addr16
movs
inc
or
mov
in
inc
xchg
mov
enter
repnz
xchg
imul
call
hlt
(bad)
sbb
je
jbe
mov
mov
out
ins
mov
pop
add
sbb
jl
inc
fnsave
arpl
sbb
icebp
xor
(bad)
add
cs
inc
sub
int3
sbb
repnz
je
loopne
jecxz
dec
call
(bad)
xchg
dec
mov
int
ins
and
in
ins
cmp
dec
nop
ja
leave
(bad)
jmp
and
push
inc
aas
jecxz
popf
inc
in
mov
mov
push
nop
fistp
mov
icebp
pop
hlt
mov
push
sub
(bad)
test
sbb
cmp
inc
adc
popa
dec
repnz
sub
xchg
cmc
in
popa
push
cmp
sub
inc
mov
mov
leave
push
mov
xor
stc
mov
dec
xchg
mov
or
cmp
pop
pop
ds
or
inc
add
loop
out
imul
icebp
sbb
mov
mov
and
std
xchg
mov
ins
out
dec
and
repnz
ja
call
adc
ret
rcl
add
loope
or
jmp
fs
ins
retf
mov
mov
test
lods
mov
jl
fcom
push
imul
sbb
outs
cld
fcomp
or
sbb
(bad)
jno
ret
ds
(bad)
sbb
jecxz
cmps
std
stos
adc
fcmovu
imul
cmps
fadd
xlat
pop
out
retf
cmp
mov
and
movs
imul
jle
cwde
push
adc
inc
dec
sub
jae
mov
sub
dec
jg
loope
loopne
pop
outs
loopne
push
adc
(bad)
push
mov
outs
mov
ror
mov
pop
cmp
ror
or
push
ins
push
mov
or
xchg
and
pop
jne
mov
or
sti
cs
and
dec
lods
or
mov
sub
in
aas
clc
enter
icebp
test
dec
adc
push
xor
cmc
mov
pop
sub
hlt
call
mov
outs
inc
mov
bound
outs
adc
inc
lods
or
jne
xchg
or
sbb
into
jl
mov
(bad)
imul
imul
aad
cwde
ins
fwait
sar
mov
daa
les
loop
imul
push
cmps
dec
neg
mov
jge
loop
xor
jp
xchg
jl
pop
dec
jmp
in
fsub
popa
outs
mov
pop
test
xor
in
sub
pop
add
mov
jle
mov
(bad)
push
stc
ds
xor
retf
xor
inc
mov
add
cmp
push
mov
or
and
jbe
sub
fild
or
pop
xchg
add
not
bound
int3
sbb
mov
xor
jge
sub
inc
and
push
or
in
pusha
adc
fistp
push
and
push
xlat
dec
hlt
mov
iret
push
mov
dec
out
cmp
fidiv
jp
mov
rol
es
mov
cld
push
cmp
stos
ja
xor
jnp
xlat
repnz
jecxz
dec
xor
imul
mov
mov
sahf
into
mov
aaa
test
test
dec
clc
test
lds
mov
fldenv
aam
xor
jnp
(bad)
call
cs
xchg
sahf
inc
es
aam
dec
or
shl
pop
inc
ins
push
scas
jl
popa
retf
imul
rep
mov
extrq
jns
test
imul
jle
adc
push
scas
lea
dec
shl
imul
pushf
mov
xor
or
sahf
sahf
sar
nop
and
push
dec
call
adc
push
div
test
xor
sbb
test
push
mov
xchg
mov
pop
or
sti
jge
add
add
ds
fstp
xor
fs
arpl
adc
addr16
xor
xchg
shufps
xor
cmp
jg
inc
test
int
cdq
and
jl
push
retf
push
cmp
pop
aas
dec
mov
or
and
dec
(bad)
jns
mov
jae
out
leave
sub
inc
iret
repnz
add
mov
mov
es
pop
dec
mov
add
call
jecxz
inc
div
mov
xchg
in
out
push
(bad)
mov
add
sub
je
xchg
rol
pop
pop
idiv
xchg
pop
mov
xlat
fidiv
cmp
lods
jmp
into
cmc
ja
cld
dec
xlat
and
enter
outs
mov
jnp
push
aam
add
add
add
movs
nop
mov
jb
sub
out
in
sbb
cmps
jg
lahf
xor
addr16
sub
or
mov
aad
imul
hlt
inc
or
sbb
hlt
stc
rcl
(bad)
sbb
lods
mov
mov
sahf
xchg
sar
rcl
add
pop
dec
adc
lods
mov
push
(bad)
adc
pop
mov
add
popf
jo
push
stc
add
shr
mov
lods
imul
xor
jno
ins
rcr
icebp
jl
cdq
scas
mov
aas
fnstenv
imul
adc
fwait
out
nop
int3
mov
mov
js
rol
cmps
mov
mov
cmp
pushf
inc
inc
push
aam
cdq
and
jmp
mov
jo
push
sbb
jnp
inc
loop
cdq
cmps
sar
out
lods
or
in
lea
mov
outs
sti
mov
std
lahf
adc
mov
cs
movs
mov
push
push
or
in
pushf
jge
rcr
sub
dec
or
(bad)
fdivr
lods
shl
enter
daa
outs
movs
add
jecxz
cwde
cmp
es
(bad)
xchg
stc
xchg
inc
test
out
mov
push
jns
and
mov
(bad)
(bad)
push
in
sahf
or
out
inc
sbb
xor
adc
xor
lds
mov
inc
and
inc
ret
pop
sahf
dec
cmp
lock
mov
pop
or
test
shl
add
movs
test
(bad)
sbb
repnz
mov
pop
mov
jne
xor
mov
imul
popf
out
jne
daa
cmp
mov
sub
popf
dec
sbb
aam
stos
sbb
and
or
ja
adc
aam
loopne
je
xlat
shl
sub
push
pop
lods
jo
shl
repnz
xor
or
mov
mov
cmp
dec
adc
inc
(bad)
(bad)
int
pop
cmc
jb
fbld
aad
jae
retf
addr16
fcmove
sbb
and
(bad)
xor
mov
pusha
in
adc
pushf
add
sub
push
dec
fs
add
mov
push
fldenv
clc
addr16
pop
pop
pop
mov
aas
out
sub
cs
jl
lea
out
push
cli
mov
mov
push
xlat
retf
or
popa
sti
int
icebp
dec
and
and
pop
or
fild
mov
sbb
mov
mov
push
inc
and
push
fbstp
xchg
xchg
pusha
into
int
icebp
xor
das
cmp
test
inc
loopne
inc
mov
icebp
out
jnp
jo
xor
nop
(bad)
jo
loopne
inc
add
cli
xor
outs
pop
pop
(bad)
outs
jnp
sbb
scas
jp
(bad)
jbe
cmp
movs
pop
xor
cdq
shl
push
adc
fcomi
inc
pop
dec
popa
add
add
cmp
jnp
jle
mov
mov
shl
addr16
mov
cmp
sbb
loopne
test
aaa
stos
(bad)
shr
fisttp
jp
div
or
ja
or
daa
into
ret
(bad)
sbb
cmc
and
icebp
xchg
pop
xchg
test
inc
jne
xchg
frstpm(287
mov
cmc
hlt
mov
cmp
fdiv
movs
xor
and
sbb
bswap
shl
add
test
dec
inc
call
mov
sbb
inc
mov
ret
test
jp
xchg
mov
mov
mov
add
outs
xchg
shl
ja
sbb
mov
xor
repnz
lods
sub
cmps
repz
and
jo
scas
or
mov
xchg
push
aad
rcl
and
aaa
dec
jo
pop
frstor
loop
cwde
(bad)
repz
and
mov
ss
clc
in
or
fiadd
fmul
in
addr16
fisttp
sbb
jge
(bad)
loop
data16
dec
test
daa
jle
inc
enter
sub
xchg
sub
jmp
sar
repz
mov
rcr
dec
shl
mov
jae
lahf
call
pop
mov
xor
jp
cs
push
or
std
push
ret
mov
vpandn
ds
or
fcom
ins
(bad)
jb
stos
jg
mov
jae
aad
jmp
pop
jb
rcr
mov
dec
imul
ja
add
jae
imul
fstp
pop
inc
mov
lds
aas
xchg
jl
jb
cli
ins
imul
gs
fisubr
add
sbb
jl
or
iret
dec
dec
jb
loopne
pop
lods
lods
or
mov
ror
add
pop
(bad)
cmp
mov
ret
je
lods
cmp
pop
icebp
xor
scas
xchg
pop
ret
dec
sahf
push
mov
dec
test
pop
fldcw
xor
(bad)
jb
test
call
call
mov
lods
and
out
das
mov
das
pop
mov
jmp
push
mov
or
cmp
mov
sbb
cld
add
mov
pop
adc
bound
xor
pop
and
in
cs
xchg
or
jmp
outs
into
dec
pop
pop
mov
stos
retf
sub
mov
enter
leave
js
cmp
(bad)
inc
das
jnp
jmp
lds
fs
and
fcom
add
sbb
movs
(bad)
lock
dec
add
std
mov
push
add
xchg
sub
cmc
jbe
es
or
shl
pusha
xchg
mov
pop
pop
mov
or
icebp
cmp
xor
xor
imul
adc
adc
test
iret
fst
sbb
(bad)
popa
loope
hlt
retf
in
icebp
dec
call
mov
shr
mov
sbb
dec
xchg
mov
xlat
xchg
sbb
outs
sub
xchg
sub
shl
dec
mov
leave
mov
jp
cmp
and
retf
sbb
and
(bad)
sub
shl
push
sub
jne
rcl
(bad)
sar
and
mov
sbb
addr16
jl
jmp
jg
outs
loop
jnp
pop
ficom
pop
(bad)
lods
int3
mov
pop
fcmovb
aas
jmp
outs
xchg
popa
cwde
cmp
ja
(bad)
out
pop
push
push
(bad)
jnp
mov
push
cmps
jne
cli
test
das
int
aam
and
dec
mov
mov
push
mov
jg
retf
clc
mov
sahf
push
xchg
pop
fs
sub
xor
cmp
adc
fdivr
rcr
daa
dec
into
dec
inc
int3
dec
leave
inc
push
mov
mov
xchg
lods
lods
data16
push
and
mov
pop
pusha
mov
lahf
mov
mov
jmp
mov
xchg
jmp
leave
cmps
xchg
(bad)
adc
sbb
xchg
mov
cmp
dec
pop
aam
or
inc
mov
xor
sub
sbb
mov
add
mov
dec
pop
fmul
idiv
aam
cmps
inc
jge
or
pop
xchg
imul
loope
mov
inc
pop
mov
adc
cmp
fld1
mov
jno
mov
xor
add
leave
and
pop
out
rcl
pop
push
fstp
mov
out
xchg
lock
and
ins
xchg
mov
repnz
fadd
or
xor
ret
or
dec
sub
xor
(bad)
xlat
mov
lods
pop
and
push
pushf
imul
mov
cmp
mov
cmps
cmp
icebp
ror
xlat
out
cmp
inc
push
inc
lock
xchg
dec
dec
and
lea
add
mov
add
cmps
pop
jb
ret
fiadd
mov
push
sbb
neg
popf
pop
add
xor
jb
cdq
dec
or
xor
mov
adc
movs
or
popa
jmp
push
inc
loop
and
jl
ds
daa
loopne
mov
pop
push
jg
(bad)
sbb
(bad)
pop
mov
aam
xor
inc
xor
in
push
dec
test
aas
sbb
cmps
jns
popf
ja
ficomp
aad
(bad)
movs
push
sub
je
mov
xchg
div
dec
cs
cmc
jmp
push
cmp
mov
pop
cmps
mov
inc
sti
adc
push
mov
hlt
and
add
push
dec
gs
adc
cdq
(bad)
mov
mov
outs
pop
call
iret
pusha
add
or
movs
jnp
xor
jmp
dec
div
pop
pop
stos
sub
mov
loop
xchg
xor
enter
and
stc
clc
popf
loop
ret
fisttp
shl
jae
xchg
push
in
jg
pop
mov
or
and
inc
inc
call
outs
mov
adc
inc
xchg
scas
fisttp
dec
(bad)
cmp
push
xchg
(bad)
jb
movs
cmp
nop
pusha
push
sbb
mov
jae
imul
cmp
sbb
fidivr
je
sbb
outs
pop
popf
retf
adc
movs
dec
inc
cs
test
lods
enter
inc
shl
lahf
ret
add
add
dec
loop
dec
sbb
out
pop
dec
xchg
inc
in
das
mov
in
cmps
inc
cmp
push
loop
and
call
popf
fiadd
rcl
(bad)
aaa
iret
fnsave
cmp
call
std
loope
adc
mov
loopne
or
loope
in
popa
push
hlt
sub
ror
mov
retf
mov
jp
push
ins
jmp
aaa
in
outs
ret
out
jnp
cmp
mov
pop
fdiv
lock
scas
push
lea
leave
cld
js
fist
add
xor
fs
mov
adc
test
and
sub
pop
dec
sub
fs
or
mov
imul
cmp
retf
xor
jo
(bad)
into
bound
das
ins
sbb
or
jl
cmp
push
mov
jbe
mov
xor
xor
jge
inc
int
xchg
inc
push
mov
jmp
movs
ins
and
xchg
cs
in
push
scas
sbb
sbb
inc
ja
add
inc
in
adc
int3
clc
enter
(bad)
out
repz
out
retf
jmp
stc
les
scas
pop
mov
mov
fxch
mov
sbb
sub
mov
aaa
aam
mov
out
adc
dec
add
sub
rcl
cmc
jmp
mov
fimul
into
aaa
adc
adc
stos
test
cs
scas
lock
iret
adc
adc
icebp
pop
pop
cmp
ror
xchg
loope
mov
jmp
mov
pop
xor
sub
in
xchg
mov
mov
cmp
dec
fs
push
div
gs
sbb
neg
and
daa
(bad)
and
sub
cmp
and
ror
(bad)
sub
ficomp
mov
pop
hlt
test
pop
cs
stos
cmp
inc
jmp
cwde
jae
jbe
adc
(bad)
sub
and
xor
xchg
sub
sbb
fnstcw
out
jg
aam
fnsave
mov
xlat
loopne
test
xchg
int3
test
mov
xchg
push
movs
mov
(bad)
cmp
sub
nop
adc
std
add
jb
mov
add
out
mov
and
aam
out
sbb
out
popa
adc
or
pop
fwait
push
je
aaa
mov
mov
xchg
xchg
mov
inc
outs
sbb
(bad)
and
adc
pop
loop
out
in
push
movs
outs
mov
jecxz
jl
xor
fidivr
cs
cmp
sub
pop
ins
xor
scas
and
in
sub
or
sub
and
push
aaa
rol
je
les
or
sub
adc
inc
cmc
push
push
dec
pop
sar
jg
jb
sbb
fisttp
cdq
cmc
and
clc
mov
arpl
jne
mov
mov
inc
aaa
or
xchg
(bad)
into
int
lock
jmp
ins
xchg
stos
call
xchg
shl
pop
clc
add
cwde
outs
sbb
aad
scas
xor
(bad)
out
mov
push
cmp
inc
and
or
xor
inc
inc
pop
out
mov
and
jle
arpl
cmp
pop
std
inc
jo
pop
cmp
arpl
dec
hlt
cmps
jbe
ror
imul
fiadd
fistp
mov
pop
push
jno
call
cmp
push
pop
sbb
xor
stc
push
fs
xor
popa
daa
inc
jno
icebp
dec
jmp
cmp
lods
xchg
xchg
mov
test
cs
adc
out
mov
fucomi
stos
shr
mov
pusha
dec
fs
mov
into
jo
and
jg
xchg
and
adc
js
sub
stos
sub
leave
into
lods
iret
ins
xchg
in
or
aas
mov
lock
test
(bad)
lock
inc
push
adc
fist
pop
and
out
push
or
xor
fwait
aaa
add
or
test
mov
or
fidiv
shr
int3
jo
adc
xchg
jb
push
ins
jecxz
xor
xchg
or
and
mov
imul
rol
fld
retf
mov
dec
movs
iret
jo
data16
shr
xor
into
adc
std
cld
or
retf
jg
mov
fdivr
or
or
jae
adc
(bad)
sbb
push
mov
jg
sbb
nop
pop
mov
ffree
mov
aam
inc
test
pop
(bad)
xchg
jecxz
sbb
push
xchg
cld
frstor
push
and
imul
shr
dec
out
mov
cmp
or
pusha
jnp
cmp
push
mov
loope
pushf
cmps
repz
movs
daa
loope
inc
imul
jp
imul
rcl
push
mov
mov
mov
mov
(bad)
xor
pop
mov
scas
jle
fcom
sti
cmp
xchg
pop
movs
int3
xor
mov
xor
sbb
adc
push
ret
sbb
lea
retf
lods
js
jnp
out
out
stos
sub
push
shl
mov
ror
push
ja
adc
mov
js
pop
pop
(bad)
leave
mov
xchg
cmp
std
test
cmp
push
rol
ins
dec
mov
ja
mov
jne
pop
repnz
mov
mov
jmp
push
push
aam
push
in
rol
jp
push
mov
lahf
cmp
jno
pop
imul
fldenv
xor
lea
xchg
mov
pop
add
movs
pop
inc
leave
les
shl
es
bound
aas
sahf
jb
add
inc
cld
xor
push
xlat
mov
int3
mov
test
adc
xor
test
mov
ds
xchg
inc
push
add
xor
xchg
cmp
push
jmp
push
dec
imul
call
inc
push
fnsave
mov
sahf
inc
cmps
fsub
mov
(bad)
cmps
mov
fbstp
daa
loope
or
in
push
sbb
fdiv
in
pop
sub
dec
mov
jle
stos
inc
gs
mov
sbb
mov
xchg
xchg
shl
adc
cmc
daa
pop
stos
add
int3
mov
out
cmc
xor
xchg
pushf
jl
gs
lea
jmp
and
sub
sub
loop
xor
js
sub
cmp
test
scas
rol
push
push
push
outs
add
fstp
sahf
cmp
push
cli
push
pop
or
lahf
cli
ret
inc
inc
xor
gs
out
push
xchg
push
push
and
mov
ret
fidivr
adc
xchg
or
pop
mov
ror
add
pop
hlt
jne
xchg
jle
xlat
cld
shr
inc
cmps
and
inc
cmp
add
inc
inc
pop
and
mov
call
xor
(bad)
test
xchg
(bad)
cld
ficom
jmp
fst
jo
push
and
das
jg
or
mov
mov
inc
outs
jbe
add
jnp
jne
mov
dec
xor
hlt
push
jno
lahf
movs
fcom
mov
mov
fidiv
imul
(bad)
xchg
popf
fadd
outs
cmp
repnz
ss
fwait
pop
jecxz
mov
dec
(bad)
push
jge
cmp
out
leave
jns
xchg
fucomp
es
push
arpl
inc
add
push
jle
adc
pushf
call
inc
std
mov
test
ins
mov
adc
xchg
stc
mov
sahf
jae
or
mov
push
pop
pop
mov
outs
out
fistp
mov
cmc
es
jle
add
clc
lahf
les
test
pop
sub
fcomp
sbb
lods
arpl
test
fild
popa
pop
(bad)
add
mov
test
xchg
aam
ror
(bad)
push
mov
push
mov
adc
call
pop
inc
pop
int3
or
inc
enter
js
jp
aam
test
or
xlat
adc
outs
ss
lods
int
(bad)
lahf
mov
pop
int3
pop
shr
int
out
ja
retf
or
mov
loope
cmp
aam
cmp
push
dec
inc
pop
out
ins
mov
int3
xor
mov
push
jg
xchg
add
movs
dec
ja
js
jno
xor
out
sar
pop
fist
mov
mov
sbb
pop
data16
test
mov
mov
xchg
cmc
test
jg
dec
add
mov
inc
ret
mov
in
sbb
adc
retf
loope
push
inc
jns
loope
jae
pop
sbb
sub
cs
pop
xor
jae
or
ror
mov
aaa
inc
test
fidivr
cmp
pop
(bad)
xlat
fisub
js
mov
inc
jb
fwait
or
add
pop
out
getsec
push
push
mov
push
push
jne
scas
sub
inc
sbb
mov
xchg
mov
jns
sbb
push
xchg
pop
adc
test
mov
shl
push
stc
cmps
movs
xor
push
push
outs
scas
loopne
add
push
js
mov
cmps
or
mov
aam
cmps
jl
loop
mov
pop
inc
ffree
mov
mov
hlt
jae
add
mov
xlat
inc
loop
push
sub
inc
cdq
push
mov
and
fistp
mov
imul
pop
xchg
push
out
shl
dec
aam
sub
push
jecxz
adc
add
cmc
data16
imul
jg
xor
cli
out
popf
fidiv
jb
in
neg
out
mov
mov
sub
sbb
inc
dec
jnp
aad
cmp
xchg
push
xor
outs
fwait
jne
xchg
mov
lods
cmp
xlat
loope
aam
mov
xor
inc
fld
adc
in
call
aas
xor
cmp
loopne
out
icebp
sub
dec
call
jmp
push
mov
xor
mov
mov
cmps
mov
cdq
cmps
cli
push
les
icebp
fidiv
jo
xor
jmp
and
sbb
enter
call
or
sub
jb
stos
mov
cmp
xchg
aad
cwde
pusha
in
xor
cmp
fld1
lahf
sbb
int
or
add
ja
cdq
dec
pop
(bad)
imul
mov
cmp
jl
out
xor
lock
mov
mov
jge
pop
mov
cld
in
adc
push
nop
ins
icebp
xor
loop
mov
xor
mov
mov
and
cmps
xchg
cmps
imul
ss
pop
int3
ror
cmps
mov
cmps
jnp
xchg
popa
mov
push
not
loope
adc
lahf
add
pop
mov
pop
loope
xlat
cmc
loope
jl
aam
les
js
fstp
jge
mov
test
mov
pop
popf
pop
shr
data16
xor
xchg
mov
cmp
sahf
mov
inc
enter
scas
call
je
std
repz
cdq
imul
movs
inc
lea
lods
push
jbe
leave
retf
stos
out
ss
ins
cmp
sbb
jl
sbb
loope
shl
dec
pop
imul
imul
mov
sbb
push
cmp
add
das
xchg
jge
icebp
stc
(bad)
mov
add
mov
sub
jge
push
dec
inc
inc
and
inc
pop
inc
out
mov
mov
or
(bad)
pushf
and
int
stos
mov
xchg
mov
dec
jbe
ret
rcr
xchg
adc
jl
imul
push
jae
(bad)
enter
mov
jmp
mov
push
dec
cmp
cmps
sbb
das
adc
int3
(bad)
mov
mov
scas
mov
pop
outs
or
fcmovnb
loop
ret
pop
add
xor
mov
outs
stc
dec
rcl
or
dec
aas
in
rcl
cmps
push
pop
test
test
and
xor
leave
sahf
or
cs
je
lahf
or
inc
icebp
xor
pop
sbb
xchg
in
mov
xlat
ret
movs
pop
mov
scas
inc
sbb
lea
cmp
jo
call
jg
pop
xor
(bad)
repnz
add
and
and
gs
mov
inc
cdq
xchg
aad
cmp
pusha
jmp
movs
in
bound
mov
jo
sub
xchg
aas
out
dec
cmp
ss
xlat
enter
sbb
pop
es
add
idiv
dec
nop
hlt
out
cli
cli
jne
mov
cmps
test
and
mov
or
push
out
mov
pushf
adc
sub
lock
cmp
mov
in
dec
aaa
pop
xor
xchg
fadd
cs
and
fistp
ins
push
xchg
mov
xor
je
addr16
fdiv
das
aam
mov
push
inc
shl
pop
(bad)
or
clc
or
test
nop
adc
mov
repz
call
jecxz
mov
pushf
retf
jnp
xor
lods
test
cdq
jecxz
fadd
xlat
sbb
cmps
in
call
int3
and
cmp
test
or
mov
sbb
cld
mov
dec
xchg
xchg
pop
jp
in
test
add
adc
jecxz
push
mov
movs
in
or
loope
daa
pushf
setbe
test
pop
pop
fadd
repnz
mov
fs
xchg
cmps
jle
test
sub
loope
mov
or
jae
loopne
pop
adc
aas
inc
nop
dec
inc
mov
jge
xor
fnstcw
cmp
sar
(bad)
push
ret
jmp
dec
repnz
popa
movzx
jnp
inc
xor
cld
fwait
hlt
mov
dec
xchg
dec
daa
xchg
jmp
xlat
push
xchg
and
rcl
shr
inc
pop
adc
mov
jle
adc
jno
push
mov
cmp
or
and
adc
out
xor
ins
clc
xchg
sub
fist
mov
cmp
ss
in
ror
xchg
mov
cld
add
lods
cmp
sbb
and
pop
push
cld
retf
call
rcl
test
cmps
adc
popa
jns
xor
pop
push
fisttp
or
and
push
stos
out
push
pop
je
push
adc
in
in
dec
mov
pop
inc
jae
mov
jbe
mov
xchg
fcmovbe
cmp
iret
jne
pop
es
xor
push
ja
adc
fcom
rol
ret
js
es
and
or
jbe
xchg
mov
fimul
mov
test
adc
mov
and
sub
outs
repz
inc
in
iret
cmp
cmp
dec
cmp
push
ss
dec
and
cld
bound
xchg
mov
pop
imul
mov
aad
mov
in
adc
xchg
repz
push
mov
cmp
repz
inc
loop
ret
add
enter
adc
test
push
or
add
cmp
mov
sar
xor
stc
mov
cwde
pusha
fucom
aad
and
xchg
pop
cwde
mov
mov
cmp
cmps
cmp
in
sub
mov
jge
faddp
and
fs
push
add
repz
push
sbb
xchg
or
mov
cdq
inc
xor
xor
cld
mov
adc
mov
lock
sar
fs
xor
fisub
lahf
mov
int
and
adc
or
cli
xor
inc
adc
cmp
adc
std
inc
dec
fisttp
xlat
imul
inc
movs
pushf
jg
lock
pop
add
test
xor
jge
outs
rcl
in
sub
stc
imul
jle
dec
jo
xchg
jns
or
js
fcomp
fcmovnu
push
es
outs
push
retf
jge
xchg
mov
mov
mov
aaa
xchg
mov
les
pop
(bad)
loopne
fs
push
leave
sahf
pushf
fild
jb
pop
mov
(bad)
daa
adc
jmp
cmp
adc
call
jb
mov
xchg
and
dec
xlat
lods
push
bound
bound
mov
xchg
js
sbb
jp
ficom
fisttp
dec
sbb
ret
lahf
fisttp
xor
movs
sub
xchg
sub
aam
popf
or
ficom
mov
or
into
xor
daa
(bad)
iret
push
arpl
sub
popa
add
inc
mov
xchg
xchg
or
ret
or
xchg
and
add
cmp
and
fld
sbb
sbb
aam
add
mov
and
or
lods
cdq
ins
ins
xchg
sub
shl
loopne
jecxz
ror
aad
lds
sbb
(bad)
and
sbb
mov
aas
pushf
mov
and
inc
cmps
das
sti
icebp
mov
xor
ins
adc
inc
inc
pop
inc
popf
cs
pmaddwd
int
jo
iret
dec
icebp
and
(bad)
mov
cs
test
sub
xor
hlt
inc
jae
icebp
cmp
dec
mov
or
mov
push
fdiv
lods
push
jne
call
leave
mov
lock
movs
xor
(bad)
lea
loope
shl
pusha
fstp
mov
sub
xor
out
add
sbb
push
and
cdq
xchg
int
call
push
mov
loope
pop
test
repnz
cmp
sar
stc
outs
add
and
das
pop
(bad)
out
pop
fist
ror
push
cmps
xor
mov
es
dec
pop
adc
mov
xchg
pop
inc
fist
jae
push
sbb
or
jb
lds
cmp
mov
sbb
dec
mov
hlt
add
aam
xchg
int3
fstp
and
adc
fiadd
push
adc
cmp
dec
imul
fld
sbb
xor
sar
fs
add
mov
rcr
jl
push
jge
mov
addr16
mov
popf
cmp
scas
dec
mov
in
or
or
add
stos
adc
sbb
adc
test
test
pop
or
push
outs
pusha
retf
out
dec
mov
xchg
sbb
cmp
mov
loop
inc
and
pop
stc
sbb
and
retf
xor
pop
js
adc
clc
pop
xor
and
pop
movs
fnstenv
jo
out
mov
(bad)
inc
lds
push
cmp
sub
push
and
lods
into
out
ret
fwait
and
sbb
mov
imul
daa
dec
xchg
inc
mov
stc
xchg
icebp
add
add
js
mov
(bad)
mov
mov
es
stos
in
cld
jb
jmp
push
mov
mov
jno
cmp
mov
jp
push
cmp
mov
cmp
shl
(bad)
aad
sti
xor
loopne
jns
add
sub
outs
fsubr
fnstenv
inc
loope
mov
mov
mov
inc
push
jmp
cs
inc
(bad)
loop
inc
mov
ret
retf
repz
fadd
push
rol
jno
jle
out
or
sub
ffreep
adc
inc
cmp
dec
add
fld
outs
jecxz
mov
xchg
jmp
fwait
movs
mov
xor
mov
cmp
mov
adc
lods
mov
pop
push
fidiv
xchg
xchg
cdq
and
sub
loope
jne
mov
retf
js
jno
push
mov
int
pop
nop
push
add
xor
mov
lock
mov
movs
dec
aaa
xor
aad
loopne
mov
inc
push
cdq
or
iret
mov
jg
pop
(bad)
call
xchg
sar
fistp
es
(bad)
call
and
cdq
in
mov
(bad)
pop
ins
cmps
pop
cmp
mov
cs
xchg
add
add
rol
adc
jmp
xor
in
fldenv
je
je
mov
pop
mov
xchg
or
mov
std
jo
dec
fcmovu
pop
mov
fld
(bad)
rcl
xchg
imul
ins
outs
push
hlt
clc
xchg
mov
jnp
xor
repz
jecxz
ficomp
mov
cmp
rcl
repnz
xor
or
adc
or
inc
ficomp
out
popf
jg
sbb
sbb
test
dec
lds
popf
sub
inc
push
scas
fidivr
jmp
xor
imul
pop
fist
iret
pop
and
xchg
loope
push
cmps
jg
sbb
bound
or
xchg
imul
je
lahf
fwait
ja
mov
hlt
movs
push
(bad)
loope
push
sub
or
cmc
arpl
into
loopne
(bad)
adc
sub
dec
test
leave
pop
mov
and
dec
movs
push
jp
cwde
jb
jns
add
in
xlat
jns
mov
mov
in
push
push
out
fdiv
movs
dec
mov
ins
ret
popf
mov
push
cmp
push
and
pop
xchg
xchg
cdq
test
mov
pop
pop
ins
mov
sub
push
call
add
mov
and
dec
mov
inc
(bad)
or
add
mov
test
stc
clc
pop
push
xor
test
in
pop
inc
gs
(bad)
test
test
in
pop
ret
jmp
add
fadd
or
in
nop
jne
rol
ins
pop
sub
shl
jns
push
movs
loop
repz
cmps
pop
inc
dec
jl
sub
pop
mov
in
xchg
mov
inc
paddd
adc
push
(bad)
int
in
aad
xor
ss
es
sub
das
rol
xchg
and
dec
or
fld
in
mov
repz
scas
dec
add
xchg
pop
outs
(bad)
nop
addr16
xor
pop
lahf
ss
adc
mov
cwde
xchg
test
call
dec
cmp
sbb
movs
mov
test
pop
ins
shl
dec
loop
cdq
cs
mov
mov
inc
cdq
cmp
pusha
repnz
mov
or
dec
call
leave
sub
movs
dec
leave
mov
pop
fnstsw
and
xor
jne
push
mov
cdq
fld
pop
(bad)
jne
stos
pop
xchg
in
jo
jno
mov
test
dec
jmp
mov
dec
arpl
xchg
adc
push
push
call
cwde
push
cmps
jnp
push
push
mov
imul
cmp
imul
out
dec
test
rep
xor
jbe
aas
mov
les
or
call
sbb
push
sub
xor
cmp
gs
sahf
pop
arpl
mov
pop
lock
shr
cmp
cmps
imul
bound
rcl
jmp
mov
je
push
sbb
outs
test
call
fisttp
popf
pop
xchg
out
push
js
lahf
push
les
pop
or
call
cmps
fxch
scas
jmp
cli
mov
mov
or
adc
cmp
pop
cs
push
fwait
xlat
xlat
cmp
push
fist
ds
sahf
int
sbb
xchg
psrlw
(bad)
cli
outs
jae
xchg
jge
rcr
or
sub
mov
loope
inc
outs
gs
mov
inc
leave
ret
outs
loopne
push
cmpps
in
test
cmp
fsubr
push
enter
std
aam
fdiv
ret
inc
and
mov
sub
jae
in
cmp
neg
or
loope
daa
in
mov
cmp
mov
or
push
leave
mov
fiadd
jmp
jb
fwait
add
out
inc
aam
in
test
xchg
cmp
or
scas
(bad)
imul
rdpmc
iret
arpl
test
call
pop
(bad)
adc
ja
push
mov
pop
jae
(bad)
pop
jmp
xor
movs
dec
jg
ds
sub
test
sbb
jle
in
jg
stos
mov
pop
push
enter
cli
and
aad
popf
push
xchg
lea
pusha
lods
sub
arpl
inc
pop
cmp
jb
fs
cmp
cmp
mov
mov
inc
ss
outs
inc
repz
leave
adc
int3
clc
sbb
or
rol
mov
test
and
jae
and
enter
ins
les
or
test
fcomp
xchg
in
fcom
(bad)
xor
mov
test
sbb
jmp
in
pop
sbb
jmp
pusha
jae
loopne
xchg
jecxz
jnp
outs
test
stos
mov
add
mov
loope
ja
out
repnz
std
or
sbb
retf
xor
xchg
movs
mov
lss
sbb
push
mov
fwait
scas
dec
push
mov
pop
jmp
jns
jns
or
inc
sbb
xor
mov
xor
popf
mov
add
retf
adc
ins
jno
out
ret
popa
mov
or
std
inc
mov
cmp
mov
sub
cwde
xor
imul
movs
mov
retf
imul
gs
outs
cmps
cmps
ins
jns
xchg
aaa
dec
dec
stc
jmp
cmps
xor
out
mov
loopne
mov
test
xor
xchg
pushf
sub
and
push
mov
xchg
mov
dec
cwde
shr
fcmovb
and
in
cmp
aam
int
test
dec
bound
adc
inc
push
fnstsw
in
mov
(bad)
mov
lock
push
dec
mov
popf
cld
xchg
arpl
shr
push
nop
mov
int3
jbe
sub
adc
and
(bad)
je
in
mov
dec
jne
cmp
mov
add
test
fnsave
fldz
jmp
rcl
fwait
mov
jne
fwait
add
cmp
dec
shl
pop
pusha
inc
das
lods
mov
add
xchg
mov
pop
push
jl
cmp
jecxz
cmp
cmps
lds
hlt
mov
add
sbb
outs
stos
aam
les
jo
pop
rcr
movs
mov
dec
aad
push
fdiv
sub
push
cmp
jnp
(bad)
xchg
mov
sub
mov
int3
pop
daa
rcr
hlt
sub
mov
cmp
xlat
cli
leave
sub
outs
push
test
aaa
lock
jb
(bad)
out
add
push
imul
cwde
and
add
mov
sub
fsub
sahf
xor
inc
xor
lock
cmps
xlat
test
sub
adc
adc
sbb
mov
outs
cli
pop
ror
inc
std
and
fwait
jbe
adc
hlt
jg
outs
mov
stos
pop
sbb
mov
dec
add
cli
mov
push
nop
les
push
mov
sub
or
in
hlt
sahf
(bad)
add
popf
sub
adc
pop
cmp
push
jmp
sbb
or
mov
lods
sahf
or
adc
js
dec
mov
into
sub
pop
movs
aam
sbb
mov
xchg
mov
rol
push
adc
bound
xor
int3
dec
inc
xchg
in
jno
(bad)
scas
mov
and
mov
jge
or
int
enter
pop
mov
and
std
mov
sbb
stos
in
and
mov
lds
sbb
je
in
idiv
retf
stc
sbb
and
cli
icebp
into
xor
loopne
mov
jne
push
aam
xor
jg
js
push
mov
xor
pusha
adc
inc
mov
cmps
int3
xor
or
gs
inc
sbb
pavgw
cmp
jae
leave
cmc
js
xchg
jge
cmp
hlt
or
sbb
cld
mov
cmp
inc
call
push
inc
xlat
js
mov
push
sti
push
(bad)
lock
sbb
hlt
inc
clc
push
cdq
call
cmp
stc
test
add
push
mov
imul
popf
dec
sbb
out
call
fld
scas
in
adc
inc
mov
popa
(bad)
mov
es
ja
shl
cmp
mov
out
add
std
(bad)
fs
jecxz
sbb
fwait
gs
sbb
dec
xrelease
outs
dec
or
(bad)
xchg
mov
scas
push
and
cmp
mov
and
cld
sti
test
sub
sbb
nop
in
neg
jecxz
sti
fidivr
loop
imul
fistp
sbb
scas
xor
mov
jae
das
shr
dec
aas
add
xor
in
inc
out
jle
hlt
nop
cmp
dec
fmul
in
icebp
inc
retf
pop
imul
ins
test
cdq
mov
int3
ja
pop
fs
fsub
aas
repnz
rol
xchg
fnsave
jne
xchg
std
cmc
inc
mov
std
push
mov
outs
lahf
push
les
call
xchg
cmp
pop
xlat
cmp
ins
ss
out
in
pop
dec
mov
(bad)
int
cmp
pop
into
and
arpl
in
scas
hlt
pop
les
cmp
mov
or
dec
dec
pop
push
push
lods
fiadd
arpl
mov
add
mov
test
push
jmp
sub
shr
imul
ret
jnp
shl
cli
nop
mov
test
jns
loop
push
dec
sahf
push
xchg
dec
loop
into
and
in
lock
cld
mov
(bad)
fucom
das
xchg
arpl
aad
out
xlat
dec
xor
lds
lds
pusha
rcr
aaa
inc
xchg
xor
imul
lds
inc
adc
push
adc
int3
mov
adc
mov
outs
mov
fisttp
add
sti
loopne
jl
jno
jle
mov
jp
jmp
aam
(bad)
mov
dec
int
dec
nop
xchg
ret
xchg
xchg
pop
pop
push
push
test
xor
retf
sub
or
(bad)
(bad)
movs
fisub
sbb
mov
add
sub
pop
and
push
outs
es
(bad)
xchg
popa
es
jg
push
lock
sbb
outs
fidiv
push
stos
stc
jns
or
gs
aad
arpl
sbb
xchg
sub
or
push
push
test
push
mov
js
adc
sbb
sbb
xor
test
xchg
ja
mov
sub
push
mov
inc
std
shl
xchg
sub
xchg
daa
inc
xchg
adc
inc
or
mov
push
xor
ret
and
mov
repz
cmp
or
rol
repnz
popf
cmp
sub
ret
mov
sub
pop
xchg
(bad)
fistp
fimul
xchg
ffreep
mov
(bad)
cli
aaa
cli
fcomp
dec
jecxz
xor
adc
mov
jbe
or
call
xchg
and
cmp
fcom
dec
or
pusha
test
or
jnp
adc
xchg
js
pop
cmp
jecxz
push
stos
(bad)
cmp
dec
rcr
sub
mov
js
push
mov
jns
jns
aaa
(bad)
jmp
and
(bad)
mov
xchg
test
fild
les
std
mov
fs
outs
retf
pop
inc
(bad)
jmp
enter
loope
jge
dec
fs
lods
cld
out
leave
pop
rcr
sbb
jecxz
mov
dec
pop
sbb
jno
in
shl
test
mov
pop
inc
sbb
lods
xchg
jp
div
jbe
and
ja
sbb
inc
loopne
sbb
adc
imul
xchg
dec
sub
adc
fidivr
fldcw
in
xchg
pop
mov
je
mov
repnz
inc
in
retf
xchg
int
icebp
lods
dec
sahf
int3
mov
jnp
xchg
test
jne
or
arpl
inc
cdq
sub
dec
jge
out
mov
sub
dec
sbb
jl
call
cmc
xchg
popf
ja
inc
ret
xchg
mov
push
dec
shl
call
push
jp
mov
push
pop
inc
ins
adc
push
(bad)
push
jns
xchg
icebp
bound
lahf
xor
mov
jecxz
mov
sub
enter
pop
andps
or
cmp
inc
movs
adc
mov
in
cmp
xchg
add
enter
jnp
fwait
repnz
std
fdiv
sbb
inc
and
xchg
movs
adc
out
aaa
in
mov
stos
ins
int
and
mov
imul
imul
imul
(bad)
dec
lods
call
not
movs
out
test
call
jge
xlat
inc
xchg
mov
outs
leave
xor
mov
or
ficomp
inc
add
fs
call
add
mov
and
shr
sub
push
inc
repz
sub
dec
dec
ins
rol
cmp
mov
retf
out
fldenv
jg
jns
dec
test
and
push
les
shl
xchg
dec
dec
dec
mov
jmp
fild
pushf
(bad)
aam
xchg
xchg
fadd
into
xor
jae
pop
idiv
pushf
(bad)
stc
test
lds
sbb
sub
cmps
pop
mov
icebp
jge
dec
mov
add
mov
mov
mov
adc
leave
add
push
ins
je
cmp
ins
push
js
jge
mov
mov
ret
repnz
push
mov
icebp
or
movs
mov
ss
add
add
sti
jno
push
mov
int3
sbb
mov
inc
push
mov
cmp
xor
je
inc
retf
or
push
cmp
sbb
out
adc
push
mov
push
daa
push
pop
dec
outs
test
cli
adc
cwde
sub
aas
pop
xor
outs
adc
push
jmp
pop
repnz
retf
push
out
lea
aas
push
das
imul
xchg
sub
repnz
push
sbb
push
imul
or
dec
loopne
fsubr
xor
or
xor
cmps
movs
sub
ror
cli
pop
stos
inc
adc
mov
enter
adc
enter
fstp
adc
cmp
in
int3
test
stos
mov
and
pop
mov
lea
mov
jno
push
and
adc
inc
jo
push
inc
pop
jae
cmps
xchg
clc
lods
shr
mov
lea
cmc
icebp
pop
fimul
xchg
test
adc
add
push
fidivr
mov
das
lds
push
dec
add
rol
cli
xor
cmp
adc
repz
cld
(bad)
pop
inc
inc
jg
inc
gs
call
mov
xor
(bad)
cli
int3
inc
lock
jl
outs
shr
xchg
lea
lods
and
mov
mov
sar
das
jle
sbb
xchg
add
fcmove
ja
mov
in
mov
xchg
push
rcr
push
mov
pop
push
cmps
div
jle
in
lds
shr
dec
mov
cmp
aas
mov
or
gs
push
outs
pop
sbb
nop
out
mov
lock
clc
std
call
inc
inc
stos
into
sub
mov
jl
mov
pop
cmp
jae
jmp
push
xchg
outs
mov
lea
inc
imul
dec
mov
dec
es
mov
fbld
cmps
fdiv
not
or
mov
jns
in
mov
xchg
xor
and
ret
push
out
add
imul
mov
jno
cmc
iret
cdq
xor
jnp
test
mov
pop
jge
cmc
jns
std
sub
out
add
mov
cmp
jne
std
in
add
pusha
push
ficomp
mov
mov
xchg
and
iret
(bad)
xlat
fistp
jne
mov
xchg
sbb
mov
nop
mov
sub
imul
shl
dec
in
fldenv
and
loop
(bad)
push
aad
mov
cmp
shr
mov
std
mov
mov
test
popf
mov
sub
jmp
jp
dec
inc
scas
out
sti
ins
outs
cli
push
out
xchg
inc
mov
lahf
add
xchg
cmp
add
sub
xchg
and
inc
mov
mov
mov
mov
cmps
jp
pop
inc
pushw
jl
xor
and
mov
or
loop
ins
mov
fs
nop
ret
clc
bound
mov
dec
jp
outs
cmp
test
add
gs
mov
cmp
inc
dec
jle
cld
rcr
pop
fldenv
(bad)
fnop
retf
fs
dec
sub
scas
mov
mov
adc
lock
scas
fisubr
not
mov
dec
push
xor
jmp
fmul
mov
mov
ret
lods
(bad)
or
mov
xlat
xchg
out
adc
pop
int
arpl
popf
sar
pop
rcr
out
das
cli
inc
mov
movs
js
stc
or
mov
xchg
sub
push
sub
call
in
pop
scas
jl
shr
jg
push
shr
jecxz
push
imul
popa
inc
xchg
mov
mov
sbb
push
add
(bad)
out
ror
popa
mov
(bad)
jbe
jecxz
mov
add
dec
push
inc
xor
aad
aam
mov
out
inc
lea
arpl
test
or
cmp
add
push
add
int
lahf
cmp
test
and
jmp
jno
pushf
push
push
ret
jo
or
setge
sbb
test
mov
pop
fwait
mov
mov
divps
cmp
scas
cmp
daa
ins
(bad)
pop
xor
fsubr
fldcw
xor
or
add
or
mov
add
je
inc
sub
in
xchg
call
push
dec
push
pushf
ror
popa
test
stos
xchg
jl
hlt
push
pusha
pop
push
dec
inc
mov
dec
mov
xor
or
mov
cmp
add
(bad)
mov
add
mov
outs
jne
or
inc
or
add
adc
and
push
cmp
pop
xlat
cmps
cmps
jae
jp
test
popf
sub
and
ja
xchg
movs
sub
data16
cmc
repnz
ds
sub
stc
sub
cmps
(bad)
out
dec
mov
add
lahf
pusha
lods
retf
sbb
sbb
frstor
ja
sbb
xor
outs
cwde
xor
sbb
jbe
inc
jne
in
sub
ss
inc
xchg
pushf
add
outs
dec
sub
dec
daa
jb
mov
xchg
or
dec
or
jmp
push
cmps
cmp
dec
bound
stos
mov
xchg
jb
sbb
aam
mov
lahf
or
stos
jbe
cmp
adc
add
jecxz
pusha
inc
add
gs
pop
sbb
push
xchg
clc
sub
mov
jmp
hlt
mov
jp
scas
cmp
or
lods
pop
adc
mov
push
out
jnp
xor
stc
jno
push
(bad)
outs
inc
mov
jb
aad
jmp
push
dec
dec
dec
lods
xor
jne
imul
mov
jp
stos
scas
loopne
sar
inc
lods
pusha
mov
out
mov
ret
gs
push
jmp
mov
ja
outs
dec
inc
pushf
loopne
cmp
dec
mov
and
adc
push
lods
push
push
outs
fdivr
jecxz
jl
pop
add
loop
inc
jl
out
(bad)
jmp
out
(bad)
jge
push
ins
inc
jle
cmp
inc
or
dec
pop
shl
nop
push
mov
rol
cli
cld
adc
movs
inc
(bad)
call
lds
cmp
or
daa
cmps
add
into
pusha
dec
aaa
fsubr
sub
out
sbb
pop
int
and
jge
push
jge
adc
inc
out
dec
fisubr
jecxz
jmp
add
leave
shl
mov
in
pop
adc
xor
les
push
scas
out
xor
xchg
add
add
and
test
out
stos
push
pop
fucomi
leave
pop
test
cwde
call
aam
outs
push
rol
test
fs
std
frstor
and
pushf
leave
mov
inc
jo
push
test
int3
pusha
call
xor
jg
sets
jl
ins
jl
aad
pop
jmp
xor
and
or
sub
test
enter
and
dec
shr
cmp
retf
out
inc
and
call
pop
mul
inc
push
xchg
gs
cmp
sub
movs
cmps
mov
cdq
push
or
push
mov
or
lahf
mov
sbb
dec
sub
xchg
mov
(bad)
sub
in
loop
das
rcr
push
push
sahf
rcr
(bad)
lods
xor
sbb
(bad)
(bad)
popa
xor
js
test
sbb
sub
mov
adc
push
pop
pop
push
adc
inc
icebp
(bad)
out
jmp
shl
push
xchg
jns
sar
dec
clc
ds
test
pop
fistp
popa
shr
push
rol
mov
mov
jle
ins
inc
std
retf
retf
inc
retf
pop
push
sbb
adc
sbb
loope
xchg
dec
dec
pop
jbe
push
inc
fistp
call
xchg
mov
loope
aas
daa
outs
dec
popa
fnclex
inc
jl
dec
call
mov
adc
pop
sbb
xlat
aas
jmp
call
cmp
test
enter
mov
fdivr
out
(bad)
mov
je
rcl
ins
aaa
push
mov
jne
sahf
lds
adc
shl
xlat
xchg
sbb
add
daa
stos
jmp
rcl
(bad)
fsub
cmp
and
ret
inc
mov
std
push
ja
cmp
pop
mov
xchg
test
sbb
idiv
dec
mov
out
cmp
les
mov
sbb
sbb
pop
push
xor
cmps
pop
push
push
push
lods
div
push
pop
outs
push
in
mov
int3
and
push
jp
add
xchg
into
movs
pop
adc
or
scas
aaa
sbb
mov
fiadd
movs
aam
cs
es
loop
sub
and
or
xor
and
adc
call
push
imul
jmp
mov
push
loop
and
in
call
mov
loope
lea
repnz
loopne
inc
and
daa
inc
sbb
mov
push
jecxz
adc
loope
cmp
dec
or
(bad)
fcmove
cli
push
enter
sub
and
mov
rcl
cmp
ja
aas
pop
mov
push
mov
push
popf
call
fisttp
aad
xor
xlat
ins
adc
sbb
sub
push
sub
rcpps
test
addr16
xchg
add
retf
mov
cs
xlat
jns
jne
popf
stos
test
dec
cdq
nop
leave
add
outs
sbb
mov
int3
jmp
xchg
mov
cwde
ret
push
cmp
lea
xor
mov
fs
cmp
inc
inc
push
retf
inc
adc
ret
lds
pusha
js
fbld
and
jge
cmp
jmp
jg
cs
xlat
ret
sbb
cmc
adc
push
call
pop
push
iret
sub
stos
or
sahf
mov
adc
sbb
repz
pop
pop
cmp
out
pop
test
fcom
dec
aad
xchg
hlt
mov
jns
out
inc
(bad)
push
mov
or
push
leave
and
les
jge
sub
dec
mov
dec
sbb
pop
fs
aam
jle
clc
pop
inc
mov
(bad)
cmps
push
mov
add
lock
jmp
dec
lahf
fist
push
test
jno
xchg
xlat
rcr
lock
movs
mov
inc
adc
jb
xlat
or
sub
cmc
inc
fidiv
push
(bad)
push
shl
jb
stc
arpl
xchg
(bad)
sub
adc
fstp
fisttp
into
push
mov
lods
sbb
jl
repnz
cmp
mov
loop
cmps
cmp
adc
jle
push
mov
repnz
mov
data16
xor
mov
jge
aad
leave
jge
dec
fsub
add
jp
jg
fbstp
adc
je
and
pop
xor
mov
out
inc
ficomp
cmp
xchg
sbb
mov
shl
outs
sbb
leave
sub
outs
add
mov
jno
mov
inc
sub
arpl
mov
add
cmp
jmp
push
jae
fimul
push
scas
cmps
jl
out
and
fwait
lds
repnz
jae
scas
nop
std
cli
mov
sti
fst
stos
sub
mov
(bad)
mov
mov
cmps
clc
rol
popf
jecxz
jne
mov
xor
mov
fidiv
and
repnz
(bad)
scas
push
xchg
in
dec
cmp
jecxz
mov
mov
leave
mov
xchg
xchg
and
sbb
mov
sub
add
jle
mov
je
sar
das
jmp
aaa
mov
repnz
test
ret
mov
push
(bad)
loop
fninit
fild
cmps
or
sub
and
outs
(bad)
xchg
cmp
inc
stc
xchg
ss
jl
sub
sbb
int
lahf
adc
or
(bad)
rcr
cld
pushf
push
(bad)
aad
push
loopne
pop
outs
leave
into
vmovups
and
cmp
jnp
pop
pmaxub
dec
js
fprem1
or
cmp
inc
inc
addr16
pop
dec
ins
rol
push
(bad)
sub
stos
push
ret
push
jmp
jle
push
xchg
fiadd
or
dec
test
jae
sbb
xor
out
sbb
ror
in
lock
outs
pop
sti
daa
bound
jnp
dec
std
sbb
data16
jne
sub
or
(bad)
push
daa
pop
movs
mov
repz
xchg
in
fucomip
add
clc
hlt
or
and
pop
mov
push
xor
mov
or
mov
pop
dec
ss
icebp
gs
ret
mov
sbb
add
clc
add
out
out
sbb
test
repnz
mov
arpl
dec
pop
jne
imul
mov
in
ret
retf
scas
ja
cmp
mov
add
mov
sbb
pop
shl
adc
arpl
pop
test
shl
scas
not
xor
sub
test
jp
push
shl
jns
cmp
popa
cld
mov
dec
aas
ret
xor
xchg
(bad)
cmp
stc
inc
add
pop
jmp
aam
adc
sub
mov
addr16
fmul
icebp
mov
adc
add
(bad)
sub
jge
adc
sbb
jae
repnz
dec
xchg
dec
sub
fild
mov
dec
cld
jmp
(bad)
cmp
in
xchg
pop
fcom
lods
dec
xor
mov
sub
mov
stc
inc
cmps
mov
fild
fcomp
xor
and
pop
bound
mov
cmp
movs
dec
adc
adc
mov
adc
stos
nop
test
dec
jecxz
pop
jne
pop
sti
imul
sbb
adc
ror
out
dec
adc
xchg
les
imul
mov
ss
and
ret
ror
push
outs
push
adc
ins
jns
push
inc
shl
mov
sub
dec
mov
jne
sub
mov
cmp
adc
xchg
xor
outs
dec
inc
cmp
in
jo
xchg
clc
mov
mov
or
push
dec
inc
loop
int3
xchg
mov
push
cmc
xchg
sti
xchg
mov
mov
cwde
fwait
xor
mov
dec
sbb
sub
lods
mov
pop
fs
adc
enter
jge
inc
test
fs
sub
in
ds
push
data16
or
(bad)
cmp
mov
mov
mov
jmp
pop
mov
mov
dec
mov
and
mov
jg
mov
mov
adc
out
cmc
adc
js
in
and
retf
or
dec
ja
popa
fsubr
push
pop
cdq
sti
fimul
mov
icebp
and
bound
cmp
call
sub
cmc
push
pop
mov
es
push
gs
popf
jle
or
sti
aam
into
lahf
mov
ss
sti
rcl
mov
cmp
clc
pop
adc
je
adc
push
das
or
mov
and
loopne
jle
mov
clc
mov
(bad)
movs
icebp
call
inc
sub
rcr
cmp
and
xor
lods
lahf
xchg
es
fdivrp
retf
mov
mov
push
push
nop
push
xor
adc
inc
add
cmp
mov
sbb
sub
dec
(bad)
mov
sbb
or
jns
xchg
ins
mov
sbb
shl
iret
inc
repz
imul
jae
movs
jecxz
mov
out
popf
shl
push
leave
xor
enter
cmc
test
and
sub
mov
xchg
xor
sub
or
mov
sahf
lea
aaa
push
or
(bad)
push
js
in
js
and
aam
call
inc
add
and
loope
outs
mov
(bad)
fcomip
sahf
test
sbb
loop
stos
adc
add
dec
mov
out
shl
out
adc
call
jmp
xor
les
pop
sbb
mov
mov
mov
xchg
mov
xchg
mov
arpl
int3
stos
mov
retf
push
inc
loop
mov
cdq
cdq
dec
xchg
mov
dec
push
xor
adc
bound
fstp
clc
sbb
sahf
out
ss
jno
sub
loope
nop
test
pop
fadd
cdq
push
pop
dec
nop
pop
popa
imul
scas
mov
fst
jb
push
dec
paddd
inc
mul
sbb
sub
jg
jmp
out
dec
(bad)
call
bound
pushf
ja
js
ss
push
ins
jg
inc
jnp
(bad)
popa
sbb
xchg
jp
jmp
push
sub
xchg
adc
inc
sahf
adc
(bad)
icebp
cmp
loope
mov
mov
mov
add
adc
inc
inc
sub
call
ret
sub
in
sub
xor
sub
outs
and
in
sbb
fimul
add
jmp
in
mov
pop
jno
repnz
lahf
cmp
cmps
nop
xor
std
int3
aas
daa
cmp
inc
adc
mov
lods
retf
xchg
movs
push
fldcw
rcr
xchg
sar
retf
xor
in
push
call
xor
dec
lods
and
fstp
sar
cmp
inc
mov
ja
xor
sbb
scas
out
vprotw
and
(bad)
fucomp
ss
pop
push
pop
adc
push
lea
aam
dec
mov
dec
and
sub
push
push
leave
bswap
mov
xchg
add
mov
and
xchg
addr16
pusha
mov
fwait
inc
lds
xor
fsubr
mov
out
dec
(bad)
pop
addr16
and
div
sbb
stc
out
ror
adc
shl
pusha
cmps
and
mov
cmp
rcr
push
in
and
test
adc
pop
fsubr
rcr
pop
cmc
xchg
or
sub
(bad)
mov
(bad)
jo
icebp
cmc
xor
aaa
or
pushf
dec
and
sbb
sti
rcl
mov
retf
call
pop
inc
clc
xchg
sub
add
add
daa
jecxz
test
push
(bad)
push
stos
repnz
daa
movs
adc
sti
push
fldenv
inc
mov
mov
outs
(bad)
addr16
nop
and
xchg
push
outs
clc
xchg
mov
sbb
dec
push
xchg
ins
clc
sub
in
jecxz
push
sbb
sub
push
inc
cwde
dec
fadd
aam
fst
shr
shl
test
ds
adc
jg
mov
dec
push
pop
xchg
loope
push
jle
(bad)
aaa
addr16
adc
sub
push
inc
xor
scas
shr
aas
mov
fstp
dec
ins
ins
mov
mov
sbb
addr16
and
cs
jnp
push
inc
xchg
add
jle
mov
xchg
out
ja
pop
(bad)
dec
xchg
add
or
bound
xor
sbb
push
xor
(bad)
in
dec
movs
adc
add
mov
aas
arpl
adc
mov
fs
fmul
lods
and
rcl
sub
movs
dec
les
push
push
fwait
mov
push
lods
add
or
push
sub
jp
fwait
sbb
pushf
ins
loop
(bad)
adc
sahf
push
xchg
(bad)
in
sbb
out
pop
pop
std
setb
xchg
xor
and
pop
daa
or
fs
xchg
push
push
xor
and
adc
adc
add
push
int3
mov
scas
in
sbb
cwde
adc
pop
sbb
cmp
mov
and
sar
inc
dec
push
jae
popa
xor
in
push
xor
mov
fdiv
jae
(bad)
es
call
adc
mov
jmp
lahf
shl
cmp
xor
jnp
neg
and
in
sti
lea
sub
sub
mov
or
adc
hlt
les
xor
xchg
add
in
repz
sahf
call
loopne
jne
or
stos
adc
inc
sub
mov
test
shr
push
mov
ss
xchg
popf
sub
mov
mov
push
repz
fstp
stos
loope
push
fs
and
xchg
movs
or
add
jnp
popa
hlt
sub
retf
or
movs
inc
rcr
inc
add
test
cwde
and
inc
vorps
dec
ret
inc
mov
call
stc
pushf
push
call
pop
inc
movs
and
popf
add
pop
xchg
mov
add
push
and
cli
and
loope
test
mov
cmps
in
jmp
shl
(bad)
cmps
mov
jo
dec
mov
xor
adc
mov
nop
dec
mov
mov
add
cli
xchg
sbb
adc
jl
call
loope
or
daa
cmp
xchg
jp
addr16
rcr
in
jmp
cmps
bound
mov
lea
into
dec
mov
inc
jge
ror
pushf
dec
cmps
imul
test
mov
loopne
es
fist
ins
fwait
jecxz
test
repnz
push
xchg
dec
ror
xchg
movs
stc
add
les
inc
test
enter
(bad)
out
inc
std
out
sti
mov
mov
cmp
jno
call
arpl
inc
sbb
stos
test
or
out
push
xchg
ror
jo
mov
add
dec
push
bound
lods
mov
xchg
or
loopne
stos
retf
rcl
fst
retf
arpl
inc
jae
cmp
push
add
in
adc
mov
mov
sbb
and
imul
outs
movs
xchg
iret
mov
cdq
xchg
cld
(bad)
lock
jno
xchg
xchg
sbb
aas
addr16
pop
sub
bound
ficomp
mov
rcr
sub
xlat
out
pop
sub
lea
loop
in
aas
jg
stos
std
test
push
mul
enter
xchg
cmps
pop
sbb
jg
sbb
sbb
pop
mov
push
cld
icebp
mov
pop
jle
lahf
xor
repnz
lahf
pushf
dec
aas
ins
mov
push
sbb
xor
outs
inc
je
mov
sub
sar
loope
dec
mov
jnp
cmps
pop
push
jae
mov
add
aas
xchg
cmp
out
fucomip
xor
hlt
out
or
jmp
sbb
push
mov
mov
inc
jns
enter
not
dec
push
fldenv
movs
push
shl
pop
add
cdq
cdq
cmp
mov
xor
pop
cdq
ins
push
xor
clc
mov
add
adc
rcr
mov
gs
mov
push
imul
jl
pusha
pop
cmp
push
pop
not
test
test
mov
jecxz
movs
xor
iret
icebp
or
and
xor
cmp
scas
leave
mov
jmp
outs
or
movs
fist
push
sbb
out
mov
jg
fist
push
not
sub
mov
jmp
int
push
cdq
mov
dec
les
sti
lods
scas
pop
xor
bound
fisub
outs
xor
push
int
cmp
jb
or
aam
cmp
jge
sbb
or
jl
out
sub
or
add
sub
jns
fistp
lock
dec
mov
arpl
inc
lods
leave
jb
imul
lods
scas
fldcw
fild
pop
dec
add
push
mov
ins
sub
jne
mov
xor
lds
popa
int
jmp
push
inc
jae
adc
dec
pop
outs
out
xchg
test
cld
jae
pop
in
aas
loopne
inc
fld
lea
push
adc
xchg
and
inc
sub
int3
jns
movs
gs
sbb
aas
inc
xor
out
arpl
outs
int3
(bad)
push
out
pushf
mov
out
fidivr
mov
repz
or
and
push
jno
popa
lea
les
stos
pop
in
fsub
adc
cmp
enter
sahf
int3
test
push
push
(bad)
add
cmp
mov
ret
jg
cmp
loop
pop
pusha
ss
shl
sbb
pushf
cmp
cmp
into
retf
hlt
cmp
outs
je
jns
pop
call
shr
push
fisub
jb
into
(bad)
mov
lds
data16
mov
mov
dec
mov
jno
and
fcomp
pop
mov
stos
sbb
mov
jb
xchg
hlt
sub
retf
cdq
cmps
sub
sub
test
dec
and
xor
inc
sub
daa
cmp
js
stos
jb
add
or
xor
les
dec
mov
dec
in
xor
adc
dec
adc
aad
xor
ret
mov
aas
fidivr
jns
xor
inc
pop
mov
add
out
out
inc
push
fidivr
lea
and
pop
xor
stc
cmp
ja
cli
dec
lahf
ss
ins
mov
add
mov
add
push
fcmovnb
pop
sahf
pop
mov
pusha
pop
xchg
pop
mov
mov
and
jnp
aam
ins
pop
pop
xchg
dec
sbb
fdiv
jg
mov
and
xlat
gs
xor
sbb
sbb
outs
scas
push
pop
cs
sti
push
nop
int3
or
pop
scas
cdq
cdq
jl
popf
js
popf
push
cmp
(bad)
out
outs
pop
sbb
ds
repz
xchg
not
and
mov
mov
or
movs
cwde
in
xchg
sbb
movs
mov
(bad)
sub
or
inc
mov
jp
jmp
cmc
jno
xor
pop
hlt
pop
movs
add
retf
lea
cmp
in
ja
and
push
leave
lods
(bad)
int3
(bad)
sub
popf
pmulhuw
mov
ds
cmp
sub
call
(bad)
scas
into
jecxz
xor
shl
and
ja
inc
cmp
lock
cmps
js
mov
jnp
jns
xchg
jne
fcmovne
or
lods
into
push
daa
sar
mov
out
bound
inc
int3
adc
data16
jno
add
pop
in
pop
push
mov
out
stos
mov
sbb
stc
push
outs
dec
lahf
mov
sbb
pop
jge
addr16
mov
fisub
dec
sbb
aad
adc
call
push
ret
imul
inc
dec
adc
sbb
xchg
mov
pop
inc
lods
retf
repnz
push
or
cmp
jno
adc
pop
pop
in
(bad)
add
or
xor
sub
sbb
push
lds
push
adc
mov
scas
pushf
sbb
xchg
sub
jb
pop
aaa
jg
mul
repnz
dec
rcr
leave
push
jno
sbb
shl
int
sub
push
pop
push
cmp
add
retf
inc
into
push
sub
xor
movs
pop
fwait
loope
sbb
dec
inc
stc
mov
xor
test
cmp
pop
mov
and
in
dec
lea
sbb
xor
ret
scas
rcl
lock
test
sbb
xchg
sub
add
imul
shl
lods
js
(bad)
clc
push
push
ret
cmc
jp
jbe
int
into
xor
(bad)
jb
shl
mov
jbe
pop
adc
mov
mov
repz
cdq
push
or
or
and
add
(bad)
xlat
dec
ret
mov
xchg
(bad)
pop
sub
popf
(bad)
les
or
or
popf
test
mov
(bad)
enter
adc
dec
fwait
xlat
pop
adc
test
xchg
xor
pop
mov
xor
daa
cmp
cld
in
fmulp
jbe
or
or
add
leave
neg
ss
push
mov
mov
add
or
pop
adc
jle
push
add
or
xor
jge
jmp
pusha
test
mov
jp
sub
mov
rcl
xor
out
add
mov
xchg
and
jbe
cld
mov
stc
hlt
fs
jp
dec
ins
mov
and
xor
repz
pop
mov
loopne
fdivr
neg
mov
xchg
xlat
inc
sub
pop
add
cmp
pop
sub
push
mov
and
in
les
push
pop
fwait
nop
push
imul
clc
pop
push
pusha
inc
retf
jmp
hlt
cmp
into
enter
inc
jge
int
jle
add
mov
jae
sub
xchg
and
adc
out
aad
pop
jo
mov
xorps
ins
sub
cld
pop
cmps
dec
sbb
mov
cmp
sar
sahf
pop
ret
xchg
mov
mov
xchg
test
inc
mov
pop
pop
scas
inc
add
test
lods
mov
ins
rcl
jae
adc
jmp
jle
mov
addr16
and
repz
xchg
sub
and
data16
push
inc
or
mov
cwde
and
dec
push
or
(bad)
js
or
daa
add
cli
call
fisub
cmp
push
out
fdiv
stos
xor
outs
fnstsw
pop
stos
jno
mov
mov
xor
and
std
mov
sub
cmps
dec
por
add
test
test
inc
data16
jns
in
cmp
(bad)
xor
jg
cdq
sar
push
lahf
dec
dec
popf
sar
sti
push
xchg
push
push
mov
cmp
les
dec
mov
stos
or
cs
pop
pop
adc
xchg
popf
adc
or
test
jge
or
push
(bad)
xchg
ds
dec
(bad)
lea
leave
or
push
int3
inc
mov
cmp
inc
dec
dec
enter
sbb
cli
push
adc
adc
dec
lea
mov
imul
in
xchg
jp
sbb
pop
and
mov
fwait
add
xchg
push
mov
mov
and
test
pop
dec
xchg
pusha
and
xchg
mov
aas
ds
shl
xchg
sahf
sbb
mov
test
sbb
mov
cmp
or
jae
inc
dec
jne
mov
xchg
xor
repnz
xor
out
push
adc
cmps
mov
into
scas
out
ss
test
not
shr
(bad)
or
aaa
or
stc
fwait
xor
adc
popa
jb
call
sbb
not
(bad)
pop
push
cmp
pusha
pop
mov
inc
fsubrp
and
mov
mov
jmp
mov
imul
jp
mov
and
adc
call
jge
adc
mov
pop
inc
je
mov
sahf
scas
cmp
sbb
sub
mov
and
outs
dec
jmp
push
mov
mov
sbb
adc
(bad)
jnp
lods
jl
sub
outs
add
mov
fmul
fsubr
stc
mov
sub
and
jae
dec
xor
aas
ret
add
jnp
mov
inc
sbb
out
jmp
fadd
inc
ret
dec
out
int
fisub
popa
jg
ins
das
(bad)
xchg
mov
je
rol
inc
ret
push
outs
sub
xchg
xlat
add
adc
dec
mov
xchg
test
mov
in
leave
das
mov
jae
addr16
mov
mov
loopne
and
adc
mov
adc
inc
dec
jb
dec
and
or
cli
xchg
pop
icebp
mov
test
inc
push
mov
fcmovbe
sub
pop
mov
fwait
mov
mov
aaa
rol
ins
push
jl
push
lock
jo
xor
xchg
imul
mov
jns
jge
imul
jnp
sbb
clc
pusha
mov
jae
sbb
sbb
sbb
fs
mov
in
sbb
adc
std
pop
inc
and
cmp
add
(bad)
and
mov
mul
retf
ret
add
fisubr
inc
dec
jmp
into
jmp
inc
sahf
and
outs
jno
xor
add
clc
cdq
xchg
jecxz
mov
push
outs
(bad)
inc
sub
add
xor
test
or
adc
imul
sbb
aad
test
scas
fisubr
mov
jo
call
adc
ss
pusha
sbb
pop
sbb
popa
test
mov
out
lahf
mov
xor
adc
mov
or
jl
push
mov
adc
ja
std
scas
jl
pmaxsw
mov
dec
or
dec
adc
retf
pop
sar
or
jnp
xchg
adc
int
dec
ret
jg
imul
add
js
jne
scas
movlps
ss
cmc
or
xlat
sbb
(bad)
cmc
enter
retf
xor
mov
xchg
gs
cmps
xor
sub
xchg
hlt
mov
lods
jle
push
loop
cmp
stos
mov
in
add
es
mov
aam
dec
call
inc
cmc
pushf
mov
out
xor
jecxz
test
xchg
outs
adc
pop
dec
dec
sar
cdq
outs
push
repz
gs
add
adc
dec
or
outs
movntq
mov
mov
mov
clc
(bad)
sub
cdq
mov
and
dec
add
mov
hlt
retf
call
mov
hlt
rol
dec
pushf
dec
mov
jp
or
adc
movs
enter
and
aad
loop
mov
mov
and
fdivr
mov
popf
add
adc
dec
pop
mov
cs
lods
outs
pop
minps
std
je
test
adc
in
shl
(bad)
test
pop
shl
dec
push
in
addr16
jno
mov
mov
lds
(bad)
adc
push
mov
fucomi
fstp
cs
pop
xchg
dec
movs
test
sub
out
lahf
mov
fsubp
aam
fwait
mov
inc
out
fcomp
call
push
out
jge
dec
sbb
repz
sub
push
xlat
jb
sbb
lahf
cmp
ins
add
sub
pusha
xchg
pushf
mov
rcr
aaa
or
jecxz
jae
ror
lods
push
and
mov
aad
mov
jge
fistp
mov
fwait
icebp
fsub
mul
sub
mov
mov
adc
ins
scas
out
clc
fnsave
stos
lods
cmc
loopne
push
div
fdiv
pop
xor
cs
loop
rcl
mov
call
inc
popf
bndldx
(bad)
mov
inc
adc
ror
dec
add
sahf
cdq
cmp
adc
mov
cld
(bad)
aaa
cmp
dec
pop
stos
in
dec
xor
inc
mov
add
ret
pop
ret
or
xchg
bound
cmps
hlt
jge
js
push
and
rcr
fldcw
imul
inc
xor
mov
mov
xchg
ret
cmp
xor
cmc
popf
mov
add
cmp
sahf
jns
mov
cmp
mov
sti
iret
mov
dec
fucomi
xchg
mov
mov
and
xor
imul
stos
jge
in
mov
cli
inc
sbb
jg
stos
sub
sub
jnp
sub
das
sub
iret
pop
jno
inc
dec
shl
(bad)
fnsave
pop
cmp
push
bound
das
(bad)
loope
addr16
out
(bad)
xchg
iret
add
scas
pop
jecxz
pusha
jne
int3
or
adc
leave
inc
push
dec
sub
and
xchg
and
push
fucomi
test
mov
inc
jne
fwait
jo
mov
sub
retf
xchg
dec
mov
lea
popa
xchg
hlt
pop
or
dec
xchg
fucomp
lea
mov
xchg
or
fimul
inc
jmp
sbb
add
push
mov
inc
sbb
fs
hlt
jo
mov
jnp
add
lods
xchg
pop
mov
ins
mov
add
dec
mov
shl
imul
add
pop
jmp
retf
and
mov
sub
sub
test
mov
mov
ret
dec
mov
jo
mov
dec
aam
push
int3
jg
sti
imul
sub
jae
pushf
pop
iret
mov
aas
rcr
je
aad
fs
repz
or
loop
mov
scas
ja
jg
pop
push
out
test
and
ror
js
out
jmp
sub
mov
shr
enter
jbe
mov
cmp
pushf
xor
xchg
inc
xchg
int
loop
jmp
fwait
arpl
mov
or
jne
dec
or
aas
xchg
push
fnstsw
rol
div
fmul
fiadd
test
cmc
jmp
or
out
jnp
test
mov
xor
or
rol
adc
out
cmp
add
fisttp
cld
lods
xchg
cli
in
inc
jno
push
outs
xchg
nop
pop
pop
jae
cmp
aas
adc
sbb
inc
mov
ja
lea
stc
inc
push
xchg
add
enter
int3
mov
or
out
inc
sbb
ja
and
jb
sbb
sbb
mov
xchg
cmp
dec
sbb
repz
in
mov
lea
jo
movs
fstp
movs
push
sbb
test
fild
xchg
jae
push
and
repnz
push
in
pushf
cdq
call
sbb
and
jmp
imul
nop
fnstenv
mov
movs
sbb
sahf
rcl
pop
(bad)
xor
out
fiadd
les
or
fwait
jg
mov
loopne
pusha
push
jnp
sub
shr
pop
pop
outs
push
ficom
or
call
fisttp
retf
aaa
jbe
pop
mov
mov
jmp
stos
(bad)
push
xor
push
and
xchg
pop
ror
test
cdq
ret
cmp
aam
cmp
mov
dec
cli
jb
mov
mov
es
dec
scas
xlat
jmp
push
scas
or
jp
leave
add
mov
out
add
es
lods
or
ins
sub
xchg
(bad)
shl
pop
sbb
daa
call
test
movs
out
out
pop
jbe
pushf
mov
mov
outs
rcr
xchg
outs
cwde
popa
adc
and
sahf
xchg
cli
push
pop
loopne
imul
xchg
add
dec
aam
push
mov
dec
adc
aaa
(bad)
sbb
xchg
adc
or
inc
mov
pop
sub
cmc
pop
(bad)
lds
pop
inc
adc
push
les
sbb
sub
and
movs
push
sub
jl
mov
inc
push
jbe
out
loop
call
push
adc
call
xchg
loope
inc
test
mov
jg
lods
add
int
dec
adc
xchg
ret
mov
sbb
mov
add
pusha
mov
jne
test
icebp
ss
cmp
and
or
push
js
and
aam
fdiv
ret
pop
pop
movs
ror
push
xor
sub
jmp
fmul
sub
push
out
ins
pop
ficomp
mov
pop
cmps
xor
sub
push
arpl
movhps
adc
int3
or
dec
mov
in
and
adc
jb
popf
(bad)
lds
sbb
scas
loopne
push
mov
test
dec
pop
xchg
inc
shl
dec
mov
in
test
inc
xor
push
in
adc
inc
dec
jle
pop
lock
repnz
data16
adc
push
mov
fsubp
call
iret
inc
je
push
nop
fldenv
arpl
mov
rcl
add
cmp
adc
and
ds
call
xor
pop
push
aam
jmp
pop
std
xchg
jnp
movs
mov
stc
jmp
shl
dec
data16
xchg
pop
mov
sub
xor
outs
outs
xlat
ins
icebp
ror
dec
lods
xor
mov
leave
popa
xchg
cmps
test
ss
psrad
enter
sbb
mov
cmp
rcl
repnz
push
sub
adc
outs
mov
movs
enter
mov
cwde
sbb
mov
mov
bswap
and
cmp
adc
aas
enter
mov
outs
aad
icebp
stos
test
inc
(bad)
sub
push
add
sar
inc
jp
inc
sbb
adc
test
pop
push
shl
sbb
push
out
jmp
mov
jnp
xor
sti
sub
sahf
pop
inc
test
lods
mov
pop
push
(bad)
jp
push
hlt
ud2
ja
xor
(bad)
and
lea
lock
call
popa
sub
retf
lods
or
and
pop
xor
in
es
xor
add
retf
and
or
xchg
enter
clc
call
enter
pop
jmp
mov
mov
mov
in
xor
pop
pushf
mov
pushf
jge
jmp
xor
adc
push
sub
(bad)
test
or
dec
mov
(bad)
jecxz
retf
stc
dec
push
add
cld
sbb
and
inc
cmp
dec
jg
(bad)
rcr
xchg
test
(bad)
rcl
pushf
int
daa
and
fst
xor
jns
fucomi
sbb
imul
scas
jp
test
enter
push
adc
ficomp
je
lods
retf
add
mov
rol
fbld
mov
enter
push
push
jmp
sar
jb
les
xor
mov
inc
retf
es
jae
push
inc
sub
jne
je
push
icebp
add
sti
sbb
test
mov
jb
mov
jbe
inc
inc
adc
std
sbb
(bad)
jp
int3
and
pop
adc
ss
clc
dec
fsubr
inc
fisttp
cmp
ret
shl
rcl
and
fst
adc
mov
mov
or
adc
pop
dec
mov
adc
fidivr
in
rol
test
ins
imul
ret
inc
fidiv
jp
rcr
in
inc
or
adc
int
push
into
pop
push
mov
and
(bad)
xchg
xlat
test
test
fwait
sbb
adc
or
aad
(bad)
jecxz
and
xchg
and
or
xlat
xlat
stos
(bad)
mov
int
or
mov
(bad)
xchg
lods
es
push
cmp
jne
push
into
mov
push
popf
shl
inc
pushf
ins
ficom
lea
ins
(bad)
std
and
pop
fnsave
out
mov
(bad)
(bad)
test
ins
iret
mov
fstp
rol
add
mov
mov
mov
sahf
mov
or
cmp
mov
inc
movs
xchg
retfw
(bad)
adc
fs
mov
aam
xchg
jns
je
sbb
jl
in
push
dec
fnstsw
jmp
push
add
or
les
xchg
sub
int3
in
movs
xchg
stc
ds
fldenv
shl
xor
cmp
inc
loopne
inc
aad
mov
test
xchg
imul
sar
mov
add
into
and
mov
sbb
movs
mov
cmp
repnz
mov
xor
sbb
xchg
ins
cmova
icebp
in
lods
retf
daa
jbe
enter
jo
out
lock
jecxz
fidivr
jbe
lock
cmp
jecxz
xchg
xor
inc
pop
push
enter
mov
(bad)
in
mov
and
out
pop
fwait
jmp
sub
fisttp
pop
iret
cmp
sbb
pop
bound
lods
ss
inc
ret
inc
out
and
mov
frstor
xchg
test
pop
das
imul
je
add
push
rol
data16
xor
cmps
rcl
ret
aas
iret
inc
arpl
call
int
cmps
fcmovnu
push
clc
scas
xchg
jb
dec
sub
stos
xchg
cli
aas
jne
inc
mov
mov
sbb
dec
lods
lds
inc
push
call
push
xor
adc
fstp
dec
sub
sbb
int
mov
cmp
or
lods
jnp
fs
outs
cwde
(bad)
adc
and
clc
and
rol
ss
pusha
cs
mov
enter
repz
inc
inc
pusha
test
or
adc
test
shl
sbb
aad
rcl
pop
mov
add
enter
fs
movs
or
and
mov
xchg
sahf
das
add
stos
neg
out
lods
adc
aam
outs
mov
push
int3
xchg
and
mov
lea
push
mov
cs
(bad)
sbb
das
inc
jmp
mov
je
pushf
retf
jo
test
sbb
pop
cli
sbb
out
data16
and
push
imul
je
sbb
jne
inc
or
sub
pcmpeqw
pop
push
cmovo
lahf
test
sbb
mov
xor
sub
sbb
dec
popf
adc
(bad)
mov
and
int3
test
sub
mov
mov
jmp
stos
into
iret
mov
adc
sahf
push
jne
mov
loop
dec
lds
sbb
mov
add
cmps
mov
mov
and
retf
lods
or
pop
lds
out
sbb
inc
adc
movs
mov
call
call
jle
jecxz
push
mov
loope
push
jae
dec
neg
mov
sbb
addr16
mov
or
xor
call
adc
add
stc
xlat
in
lahf
retf
outs
lock
xchg
cmovno
cmp
imul
jmp
add
sbb
es
xchg
std
imul
shl
test
repz
(bad)
jbe
into
sub
outs
fstp
data16
sub
not
mov
js
push
addr16
std
mov
pop
in
dec
or
mov
test
adc
mov
mov
(bad)
mov
sbb
push
mov
jl
shr
hlt
ja
nop
dec
push
inc
push
hlt
or
xchg
or
adc
and
(bad)
pop
leave
or
pop
xor
xor
cmps
jnp
aas
mov
rol
or
in
bound
in
gs
xor
mov
mov
out
in
xor
imul
sub
and
jecxz
pop
and
mov
fwait
repz
xchg
mov
retf
ror
in
or
xor
iret
ins
mov
jne
shr
and
shr
xchg
xchg
scas
or
cwde
xor
popf
pop
bswap
loope
stos
fiadd
(bad)
pop
daa
dec
add
fcmovbe
cmp
and
cmp
and
pop
scas
repnz
arpl
pop
dec
xchg
jl
jp
xchg
aaa
mov
shr
adc
movs
xchg
fmul
hlt
and
cmps
adc
cmps
or
pop
es
data16
fst
xchg
(bad)
shl
(bad)
std
inc
hlt
ret
jle
sbb
adc
mov
cmp
xchg
loope
shl
fs
dec
lods
loope
jbe
in
(bad)
cmc
outs
test
stos
data16
adc
mov
retf
mov
jae
add
iret
xchg
ins
pop
mov
jns
sbb
sub
pusha
cs
cmp
repnz
js
pop
sbb
push
sub
aaa
jae
aam
mov
sar
iret
inc
js
xor
jae
(bad)
sbb
and
ss
aas
cmp
(bad)
jg
add
adc
jb
add
cmp
out
fld
jmp
(bad)
ins
das
cmp
addr16
pusha
sub
pop
xchg
cmp
std
ds
cmp
(bad)
loopne
push
add
push
mov
xor
jae
cdq
enter
xchg
jle
inc
not
inc
cmp
pop
jp
or
add
and
sub
loop
in
mov
or
add
icebp
les
push
sbb
cmp
fxch
cmps
xor
mov
stos
sahf
ins
int
push
lock
mov
movs
test
mov
inc
fbld
mov
and
add
arpl
fidiv
in
xchg
add
push
cmp
out
push
psubq
sbb
sahf
mov
ins
sub
sahf
or
xchg
scas
mov
mov
mov
cli
outs
jp
repnz
out
int
in
mov
test
mov
adc
repz
cmps
mov
push
push
iret
adc
mov
pop
out
in
sbb
dec
push
out
mov
mov
and
sbb
cdq
and
imul
mov
(bad)
sbb
js
div
xor
mov
dec
and
sbb
jnp
mov
sbb
rol
add
cwde
mov
dec
mov
add
imul
or
sub
(bad)
mov
es
cmp
push
call
sti
inc
sbb
lock
xchg
aaa
call
bound
or
test
cmps
jp
movs
sub
cmp
loop
jno
lahf
leave
imul
pop
das
aam
jle
or
sub
cmp
ret
gs
ret
mov
mov
add
xchg
daa
add
les
pop
pop
add
outs
xchg
mov
and
sub
or
(bad)
iret
gs
ins
js
enter
and
rcl
xor
inc
adc
xor
jno
cs
fiadd
cmp
mov
je
(bad)
adc
repz
(bad)
jmp
jg
aad
or
cmp
test
mov
xchg
rcr
int3
gs
cld
out
dec
loope
sbb
(bad)
xor
test
in
(bad)
push
push
push
outs
out
fwait
popa
icebp
in
rcl
mov
jge
mov
dec
pop
xor
and
retf
inc
sub
nop
cld
mov
retf
fild
xlat
mov
inc
sbb
(bad)
in
add
mov
mov
cmp
and
mov
jle
imul
sar
adc
idiv
popa
pop
shl
jmp
scas
pop
mov
push
out
push
hlt
mov
dec
clc
or
movs
pop
mov
or
push
pop
stos
add
int
icebp
add
in
fisttp
xor
out
stos
mov
test
jno
xlat
stos
nop
sub
sbb
cmp
test
mov
mov
js
(bad)
lock
pop
cmp
out
leave
xor
(bad)
int
xor
cmp
jmp
rcl
xchg
jmp
push
dec
scas
mov
inc
out
icebp
lock
pop
aaa
jg
sbb
jmp
cli
(bad)
es
dec
mov
popa
mov
(bad)
addr16
xor
test
mov
jb
pop
add
dec
pop
xchg
add
sbb
or
cmps
xlat
pop
xchg
cmp
shr
fs
shr
out
add
mov
pavgb
test
push
mov
js
leave
test
mov
sar
lods
div
dec
jo
push
and
test
sar
lods
jns
aas
inc
(bad)
std
les
mov
inc
into
icebp
in
xchg
xchg
pop
enter
jmp
cmp
out
(bad)
ins
sbb
(bad)
arpl
push
(bad)
es
das
outs
pmulhw
add
adc
mov
pop
stos
mov
pop
cld
pop
dec
inc
outs
xchg
les
mov
xor
adc
mov
cmp
xor
sub
mov
rcl
fwait
out
dec
movs
sub
sti
fs
jp
inc
jnp
imul
and
fisttp
lahf
and
push
pop
mov
fmul
cwde
in
inc
int
jle
and
xchg
push
icebp
sub
fimul
int
test
(bad)
cvttps2pi
fwait
or
dec
idiv
xchg
ins
inc
in
xchg
sub
fcmove
nop
aad
cld
cmc
in
int3
rol
pop
call
push
lock
dec
mov
test
mul
xor
sub
mov
sbb
(bad)
js
je
movs
push
(bad)
push
loopne
add
shl
fs
or
xchg
add
mov
je
mov
mov
jno
in
dec
stc
adc
mov
repz
add
pop
out
mov
push
or
and
cmp
movs
cmc
pop
and
dec
jmp
call
dec
xor
and
jle
imul
loope
(bad)
sbb
push
dec
popf
push
fsincos
xchg
lahf
xchg
mov
jbe
push
push
pop
mov
jg
jns
jo
imul
adc
lods
scas
aaa
sbb
stc
sar
mov
imul
sbb
mov
cli
inc
adc
or
std
lods
xor
dec
repz
mov
je
sti
mov
cld
add
inc
scas
popf
or
push
jb
or
push
scas
push
sbb
dec
mov
ins
and
mov
inc
pop
(bad)
pop
pop
jle
xchg
loopne
cs
cmp
in
outs
cmp
add
dec
pusha
push
rol
stos
xor
imul
sti
ins
std
fadd
mov
test
out
push
cli
cmps
xchg
cld
hlt
dec
sbb
inc
or
mov
lahf
pop
mov
test
jns
adc
icebp
mov
(bad)
pop
sub
ficomp
mov
(bad)
push
pop
loope
jo
(bad)
out
shl
adc
inc
cmp
or
mov
pop
addr16
ror
mov
mov
test
or
mov
and
push
shl
adc
cmp
leave
mov
bsr
scas
add
stc
sub
fstp
out
jge
arpl
(bad)
js
mov
mul
sbb
sbb
add
xchg
xchg
outs
jg
push
pop
scas
jge
lods
std
or
xlat
push
popw
arpl
xor
cdq
push
xor
xor
adc
mov
mov
int
sar
add
outs
imul
repnz
(bad)
dec
mov
cmp
shl
mov
ret
pop
and
mov
pop
lahf
cwde
ins
daa
popf
sub
pop
pop
sbb
bound
mov
cmp
fyl2x
nop
jbe
mov
adc
jmp
sbb
repz
rol
popa
in
stc
push
icebp
dec
mov
adc
push
and
xlat
lock
mov
fnstcw
xchg
cmp
test
enter
repz
push
pminsw
xchg
xchg
std
lds
ins
mov
push
ficom
mov
sub
stos
push
sbb
ss
xor
es
repnz
stos
lods
xlat
inc
inc
jecxz
and
(bad)
int3
dec
cwde
push
std
aad
sub
or
inc
mov
adc
pusha
mov
push
cmp
stc
sub
js
je
sub
mov
mov
nop
mov
jno
mov
or
sar
sar
add
in
imul
fxch
sbb
push
dec
sub
popf
(bad)
sahf
jns
adc
dec
mov
fidivr
mov
xchg
push
stos
dec
stos
loopne
pop
fimul
or
xchg
add
sahf
mov
and
jmp
xor
repnz
fcmove
cmp
lods
retf
out
cs
xor
cmp
add
pop
dec
dec
clc
push
stos
dec
dec
and
pop
pop
ret
cmps
(bad)
cld
mov
(bad)
enter
movs
jmp
push
mov
(bad)
(bad)
sbb
inc
jbe
hlt
xchg
int
lods
push
fsub
jno
not
enter
scas
inc
sub
movs
jmp
add
mov
(bad)
repz
stc
add
ja
xor
test
jp
mov
popa
mov
lea
jg
leave
add
cmp
daa
mov
xor
mov
addr16
pushf
rcr
adc
mov
cs
lahf
push
mov
sub
jmp
leave
xchg
lods
fdiv
fsubr
ficom
cmp
or
(bad)
(bad)
and
jns
into
adc
clc
pop
out
mov
adc
mov
loope
scas
mov
mov
push
aam
inc
movs
mov
aam
cld
pop
std
sub
out
scas
movs
mov
mov
adc
int3
imul
push
shr
xor
or
push
xor
sub
gs
pop
fisub
dec
cbw
retf
sbb
and
dec
mov
cld
ror
mov
cmc
lahf
xor
je
stc
mov
lahf
and
push
sub
ds
enter
push
(bad)
fimul
add
js
xchg
pop
outs
and
retf
leave
ret
push
dec
push
fmul
cli
mov
les
lahf
add
sub
jg
inc
test
jb
xchg
test
repz
mov
xor
movs
xchg
jo
ss
(bad)
lods
pusha
rcr
xor
loop
lea
mov
cmp
xor
jl
outs
xor
push
scas
test
jne
stc
mov
mov
and
cmp
(bad)
sub
xor
std
(bad)
and
push
out
lds
enter
nop
jl
int3
lods
fst
outs
push
js
xor
arpl
sbb
call
retf
jb
inc
leave
push
rcl
push
xchg
stc
sub
aam
aam
mov
xor
xor
or
mov
pusha
lock
mov
and
fs
xor
stos
or
fdivr
jb
ficom
in
add
cmp
(bad)
gs
lahf
out
sahf
inc
adc
nop
das
(bad)
inc
aaa
add
mov
cmps
push
and
loop
or
in
mov
or
sub
nop
aam
mov
sbb
outs
retf
out
jl
or
in
or
call
das
scas
and
retf
mov
inc
mov
movs
mov
out
rsm
inc
push
add
dec
sbb
inc
popa
mov
mov
test
push
imul
jb
hlt
retf
dec
jmp
or
add
or
mov
pop
cs
aaa
out
push
sub
sub
mov
pushf
or
mov
aas
pop
or
sbb
popf
loope
sti
inc
retf
cmp
mov
jmp
jne
scas
(bad)
je
nop
sbb
not
std
sub
(bad)
fidivr
push
cvtpi2ps
xchg
and
movs
adc
ret
dec
out
rcl
cld
fstp
sbb
jbe
jmp
and
jb
push
into
adc
push
imul
push
sub
cmp
pop
rol
push
movs
xor
sti
cmp
xor
add
pop
add
jb
and
cli
outs
cmp
cmps
jecxz
jl
pop
inc
inc
mov
mov
mov
in
test
dec
loope
ins
jbe
sub
stos
enter
aam
mov
hlt
shl
int3
hlt
push
fistp
sub
pop
pop
inc
jb
ja
popa
jmp
loop
push
pop
and
cmp
lea
mov
or
mov
cmp
inc
dec
(bad)
cmp
inc
mov
push
mov
push
xchg
jnp
dec
ret
mov
add
cmp
sub
hlt
dec
dec
pop
into
ficom
inc
push
xchg
retf
(bad)
jmp
mov
fdivr
sbb
ja
jb
mov
imul
int
not
idiv
out
stos
xchg
cmps
xor
leave
fisub
(bad)
mov
jecxz
or
in
mov
pop
cld
ficomp
leave
pop
mov
stc
xchg
inc
mov
jp
addr16
jno
cdq
mov
sbb
call
xor
dec
inc
mov
dec
mov
pop
fild
sbb
push
cmp
sbb
cmp
call
push
jl
test
push
pop
lahf
jbe
lfs
xchg
out
jge
inc
mov
out
(bad)
test
mov
repz
fsubr
iret
aad
daa
pop
add
aam
je
jl
mov
imul
jle
cmp
sahf
retf
push
cmp
test
xor
stos
xor
aad
inc
in
mov
(bad)
sub
loopne
or
cli
clc
or
ret
div
add
pop
sbb
xchg
cmps
imul
test
push
pushf
sub
pop
sti
ins
je
lock
in
fst
mov
leave
xchg
loop
push
addr16
inc
cwde
xchg
aaa
push
inc
rcr
pop
jbe
xchg
mov
(bad)
loop
gs
cdq
sbb
xor
adc
clc
ss
adc
fs
or
xor
push
cdq
xor
in
or
add
jmp
aas
shufps
dec
out
lods
shl
xor
cmp
mov
lods
bound
pop
push
std
jb
xchg
sub
xor
cmp
cmp
lods
push
test
and
idiv
outs
sbb
bnd
jge
sbb
ins
(bad)
in
es
jmp
shl
or
sbb
cmp
xchg
push
pop
add
ror
lods
shl
mov
jnp
mov
or
push
ins
pop
aam
xor
sub
cmp
push
sbb
push
fiadd
ss
mov
inc
push
fisttp
popf
les
jns
mov
pusha
mov
lods
add
inc
lods
xchg
mov
mov
and
sbb
jmp
inc
aam
push
retf
pop
and
mov
lods
xchg
sub
mov
or
adc
push
jns
lds
dec
xchg
mov
das
repz
inc
scas
pop
pop
add
cmps
push
stos
(bad)
test
fprem
jecxz
inc
stos
call
stc
rcl
retf
mov
aas
addr16
lods
lock
ja
imul
out
int3
xchg
dec
sub
pusha
sub
inc
lds
adc
popa
movs
fisubr
iret
xor
mov
outs
or
loopne
mov
xchg
test
ror
bound
or
(bad)
inc
out
shl
xor
stos
daa
stos
sbb
sbb
sub
pop
dec
test
dec
push
outs
push
ins
dec
mov
jno
jmp
or
repnz
push
in
mov
push
(bad)
aas
sub
into
test
in
cmp
iret
das
arpl
fld
iret
fs
dec
adc
mov
(bad)
jno
fcmovnb
inc
mov
not
out
adc
mov
xlat
es
inc
push
addr16
ins
mov
(bad)
xor
pop
sbb
cli
(bad)
into
mov
and
fdiv
(bad)
push
xchg
and
push
push
add
mov
test
inc
dec
pop
lahf
xor
mov
jae
dec
arpl
push
fcomp
sub
(bad)
or
mov
sbb
popf
fcomp
imul
in
gs
(bad)
mov
sbb
cmps
call
es
stc
add
mov
(bad)
and
jp
out
mov
cmp
dec
xor
cmp
fnstenv
push
je
int
popa
inc
inc
dec
out
sar
mov
sbb
aam
fist
adc
push
fistp
inc
div
je
sbb
ja
jp
adc
and
stc
or
call
retf
jmp
and
jp
mov
add
mov
out
xchg
add
mov
jle
xor
fadd
sbb
popa
mov
jns
inc
mov
cmp
out
add
or
jne
and
arpl
cwde
sub
clc
inc
movs
pop
sub
fadd
mov
retf
or
aam
sahf
cmps
(bad)
xor
das
inc
movs
in
and
popa
inc
push
fstp
(bad)
inc
jno
es
or
repz
sub
stos
les
pop
cmps
jge
sbb
add
ss
sbb
outs
test
jns
push
pop
sub
pop
cld
arpl
imul
mov
xor
pop
into
inc
pusha
daa
ds
dec
scas
test
pushaw
xchg
(bad)
sub
(bad)
sbb
cld
hlt
pop
repz
scas
jl
loopne
movs
mov
mov
(bad)
pop
dec
xlat
xor
mov
rcl
sbb
es
shr
and
fdiv
iret
mov
mov
mov
stc
jo
jae
push
or
ror
pushf
fsub
dec
and
in
xchg
cmp
or
test
xchg
les
mov
inc
repz
and
rcr
scas
outs
push
jo
sbb
(bad)
mov
retf
lock
out
sub
fdivr
test
adc
inc
jnp
shl
jmp
or
outs
or
dec
add
fadd
xchg
mov
mov
jns
pushf
dec
cmp
and
pop
sub
js
loopne
pop
shl
mov
xchg
push
ds
xor
sbb
mov
ret
jecxz
or
(bad)
test
adc
jmp
jmp
movs
sub
push
mul
xchg
popa
jmp
test
pop
mov
mov
test
ss
and
iret
pop
lods
or
jp
push
xchg
push
fst
mov
std
out
pushf
fs
pop
loopne
push
add
bound
adc
xor
cmc
mov
cmp
loope
iret
retf
or
mov
sub
inc
sub
fwait
mov
cmps
repnz
sbb
xor
adc
cmps
ficomp
in
cwde
ds
jns
sub
cwde
(bad)
cmp
retf
sbb
pop
mov
retf
fld
stos
xor
xor
cld
mov
xor
pushf
dec
(bad)
out
and
or
in
arpl
(bad)
int
icebp
or
mov
ret
add
xor
out
mov
xchg
jl
js
repnz
jo
xor
mov
mov
neg
loope
dec
(bad)
xor
push
sbb
mov
or
mov
push
stos
fnstenv
out
adc
movs
pop
push
or
inc
nop
data16
pusha
cld
xor
ret
rcl
test
push
in
out
sar
popa
movs
int
movs
sbb
sbb
sub
fdiv
pop
mov
popa
int3
imul
out
push
mov
and
hlt
retf
repz
sub
inc
sahf
xor
push
cmp
xchg
jle
mov
add
sub
dec
pop
or
sbb
(bad)
frstpm(287
and
and
mov
aad
mov
mov
repnz
call
in
stc
push
sub
xchg
int
ins
stos
mov
in
cli
fnstsw
xor
pop
and
int3
fcomp
(bad)
dec
add
and
jne
push
dec
pavgw
rol
jl
hlt
enterw
sbb
movs
xor
stos
inc
clc
xchg
(bad)
(bad)
call
or
imul
sub
sar
mov
(bad)
scas
add
rcr
out
ror
std
jbe
pushf
cld
pop
int3
int
lea
shr
push
xchg
ds
ret
loope
mov
pop
mov
outs
dec
js
retf
mov
inc
or
jb
mov
hlt
mov
fisttp
mov
lods
mov
xchg
jne
fdivr
pushf
mov
cmp
fnstsw
xor
sub
dec
jge
mov
adc
das
sbb
in
mov
fsub
add
xchg
jg
mov
pop
jno
sub
repnz
adc
ds
dec
pop
push
lahf
ins
lods
xchg
(bad)
outs
add
std
push
mov
sub
mov
xor
inc
cmp
fistp
mov
mov
mov
mov
or
dec
jbe
or
push
arpl
pause
mov
loop
xchg
ret
push
sbb
adc
jno
test
dec
jbe
mov
mov
mov
jae
outs
ins
jmp
mov
pop
and
lock
mov
inc
cmp
scas
or
sbb
rep
pusha
add
ins
sbb
jae
mov
iret
bound
test
(bad)
jo
fsub
cmp
add
mov
je
dec
ins
mov
add
(bad)
addr16
aad
in
xchg
xchg
(bad)
in
jns
mov
and
sbb
aad
pop
mov
icebp
mov
and
gs
lock
mov
rol
jo
push
test
mov
mov
iret
loope
es
ss
cmp
lea
cmp
sar
mov
jb
push
lea
jae
inc
in
mov
cmps
fst
loop
ret
fisub
es
loopne
sub
aaa
mov
or
jne
push
xchg
pop
cmp
ja
es
dec
xchg
mov
cmps
(bad)
and
fst
pop
(bad)
out
retf
repz
xchg
rcl
and
sbb
hlt
jb
dec
mov
pop
jge
sub
xor
mov
fisttp
rcpps
rcr
stos
aad
fld
lods
shr
pop
pop
adc
out
xchg
add
aam
inc
int
xchg
(bad)
and
sbb
fdivr
js
js
test
or
das
sbb
inc
loop
dec
adc
add
sbb
mov
mov
mov
push
(bad)
adc
mov
sbb
sub
sahf
push
jge
jp
inc
dec
push
cmps
mov
aad
cmp
or
push
mov
or
jecxz
in
lock
mov
xor
fs
jns
inc
adc
sub
mov
xchg
lods
rol
xchg
in
jns
call
rcr
sub
sbb
ss
(bad)
jl
loop
xlat
mov
les
add
clc
es
loope
xchg
outs
xor
sub
inc
iret
(bad)
loope
stos
cwde
lds
xchg
xor
mov
daa
leave
push
cmp
xchg
mov
add
push
pop
imul
pop
fwait
rcr
ret
mov
jle
xor
jbe
jns
jnp
jg
cmp
call
mov
cmp
mov
xchg
mov
cmp
fcomp
lods
dec
movs
mov
sbb
and
push
jnp
test
xchg
ins
inc
pop
icebp
or
sub
jmp
mov
pop
pop
add
pop
or
sbb
not
push
out
mov
popf
mov
mov
lods
in
shl
pop
or
mov
jecxz
scas
retf
adc
out
cli
(bad)
add
add
sar
mov
mov
xor
scas
std
loop
loop
ja
mov
scas
call
pop
stc
fdivr
push
and
cmp
mov
movs
inc
and
jge
test
add
sub
out
es
push
pop
cmp
ror
hlt
cs
addr16
test
and
int3
dec
cmp
out
das
ds
clc
xor
lahf
jecxz
mov
sub
cmp
adc
stos
and
xchg
in
and
mov
or
cmovge
aad
cmp
enter
mov
add
outs
or
stos
stos
fstp
or
sar
and
jne
and
jg
adc
pop
lock
push
cmp
pushf
aam
jno
sbb
pop
(bad)
push
lahf
pop
push
jmp
fs
sub
dec
xor
xchg
hlt
jle
(bad)
repz
sbb
jmp
mov
sbb
js
out
ds
sub
rcr
movs
cmp
add
jge
push
add
inc
pop
or
in
xchg
pop
(bad)
mov
cmp
and
lods
cli
mov
pop
push
cmp
sbb
lods
cwde
into
ja
inc
daa
mov
stos
and
mov
daa
je
push
jecxz
jp
rol
xor
popf
adc
(bad)
add
adc
in
mov
iret
movs
mov
inc
loopne
mov
loopne
push
adc
inc
dec
nop
jmp
cmp
enter
inc
nop
or
mov
test
jae
inc
xor
call
add
and
push
xor
jmp
pop
cdq
mov
xchg
cmp
loopne
pusha
aad
call
cmp
xchg
sbb
mov
setnp
lods
movs
sbb
xor
pop
ins
pop
or
cli
out
xchg
xor
test
jae
(bad)
jmp
std
(bad)
enter
push
and
cmp
ret
sbb
arpl
in
dec
add
out
mul
repz
out
test
push
ins
adc
fs
inc
xchg
movs
mov
jne
add
les
js
stos
ss
mov
sahf
jo
jl
mov
ss
jmp
pop
jb
dec
into
mov
dec
jle
cmps
jp
jp
lea
sub
sbb
sbb
push
mov
ja
and
ret
xchg
cwde
sbb
push
jp
das
js
add
push
out
retf
test
loopne
gs
arpl
and
cmc
popa
push
mov
xor
and
test
sub
sbb
push
jmp
pop
call
fld
fisttp
mov
scas
pusha
inc
mov
mov
lods
dec
test
sar
in
stc
ss
or
push
leave
test
or
xchg
bound
lahf
sahf
jne
int
xchg
shl
jo
imul
(bad)
call
add
(bad)
nop
xchg
ror
mov
xlat
int
jbe
or
cld
(bad)
leave
cmc
or
mov
mov
push
test
mov
push
xor
cmp
xchg
cmc
pop
pusha
mov
stc
loopne
pop
adc
call
fmul
stos
popa
push
or
inc
cmc
sbb
xchg
xor
or
cs
push
scas
pop
xchg
outs
nop
cmp
mov
lods
jge
scas
inc
repz
into
bnd
mov
aam
lock
(bad)
add
jle
int
pop
fsubr
pusha
iret
dec
pop
mov
add
adc
mov
xor
or
jne
dec
jg
pop
fs
adc
sub
es
mov
iret
fdivr
add
jg
ror
and
pop
loop
cmp
pop
arpl
pop
repnz
xor
cli
sub
inc
stos
mov
jnp
add
push
ins
dec
gs
retf
aaa
adc
push
in
mov
push
adc
in
xchg
sti
sar
shr
xor
and
out
push
inc
ss
jle
data16
xchg
adc
sub
add
mov
mov
shl
jp
mov
xchg
and
dec
int3
stc
and
aad
mov
pop
(bad)
and
inc
outs
ret
sbb
neg
xchg
lods
xchg
jo
jbe
mov
and
(bad)
dec
add
cmp
or
or
push
sub
lea
iret
sub
mov
mov
jecxz
add
aaa
imul
aas
pop
add
in
fistp
retf
lds
add
lock
jl
(bad)
jns
xchg
cmp
into
push
fwait
arpl
jae
inc
in
push
jae
mov
retf
or
jp
jle
and
sti
jmp
ds
fdiv
cmp
pop
cmp
push
sbb
scas
xchg
in
call
cmps
in
sub
sahf
stc
ret
ret
pop
push
cmc
pop
inc
cmp
jno
push
add
lods
and
in
cwde
mov
pop
push
pusha
mov
adc
mov
cmps
pop
mov
div
fwait
and
nop
cmp
mov
sub
add
into
fistp
fimul
cs
sahf
jle
imul
mov
and
pop
(bad)
shr
and
sbb
cmps
js
loope
pop
mov
leave
mov
sbb
aad
push
xor
into
test
ret
push
popf
(bad)
repz
sbb
or
mov
jbe
cli
jle
lods
adc
or
jae
push
rcl
adc
and
test
xchg
jae
push
fiadd
mov
movs
retf
pop
call
push
and
aaa
popf
xchg
in
add
ja
scas
jb
add
ja
pop
xor
sub
ret
mov
fimul
pop
mov
arpl
ja
jae
sub
pop
push
fcomi
sar
jmp
sub
pop
jo
stc
xor
push
call
sbb
test
stos
addr16
sub
jle
jmp
mov
leave
popf
dec
or
pusha
xchg
outs
inc
pusha
pop
xlat
in
fild
(bad)
outs
mov
jae
dec
adc
in
mov
fmul
pop
test
loop
(bad)
pop
std
xchg
jmp
mov
jecxz
cmc
pop
mov
xchg
mov
pushf
mov
test
pop
fwait
sbb
lock
mov
cmp
cmp
xor
push
mov
pop
in
in
sbb
mov
aas
icebp
shr
popa
inc
push
sub
mov
hlt
sbb
cmp
repnz
sub
pop
imul
and
xor
xor
stos
pushf
stc
test
imul
gs
aad
sahf
push
sbb
jmp
mov
gs
pop
adc
add
xchg
xchg
stos
int3
repz
leave
retf
xchg
mov
mov
mov
imul
loopne
jbe
in
imul
cli
sbb
gs
or
and
gs
pop
xchg
sub
cld
lock
dec
cmp
ss
mov
enter
or
daa
mov
test
mov
imul
or
fiadd
arpl
enter
sti
mov
leave
loope
call
std
sub
cmps
call
or
mov
in
mov
add
dec
inc
movs
cmp
loopne
dec
mov
add
jle
mov
arpl
test
call
dec
test
dec
pop
cmps
fist
aas
fmulp
out
cmps
scas
mov
test
and
gs
xor
pop
sysenter
iret
mul
popf
jo
int
mov
push
and
(bad)
dec
repnz
lods
sbb
hlt
call
adc
dec
stc
cmps
cs
in
retf
cmp
and
adc
fimul
mov
xchg
mov
push
and
setae
pop
sti
aad
jnp
js
pop
out
xor
mov
addr16
sub
jae
jmp
enter
movs
pop
lahf
mov
cmps
or
mov
pusha
lods
outs
mov
sub
mov
jg
test
cmp
jns
xor
sub
add
xchg
jnp
into
iret
mov
arpl
xchg
dec
add
or
(bad)
mov
test
(bad)
mov
push
and
stc
adc
adc
mov
add
mov
fcom
push
add
cmc
push
mov
mov
jne
push
dec
hlt
pop
ins
jecxz
add
clc
cmp
jg
xchg
mov
mov
jmp
and
pushf
arpl
sbb
ror
pop
adc
cs
sub
jo
inc
sbb
(bad)
scas
mov
neg
dec
mov
pop
sub
in
repz
ret
mov
sub
sub
mov
xchg
dec
mov
mov
js
cmc
out
inc
data16
stos
cmps
pop
cmp
sub
xor
adc
int3
int
jg
push
mov
enter
mov
fist
mov
mov
sar
mov
call
push
out
aad
xor
loopne
or
jp
push
sbb
lahf
retf
in
adc
fdiv
push
push
int3
adc
ins
xor
jmp
add
dec
and
mov
icebp
adc
cmp
outs
inc
dec
sti
jne
adc
mov
pop
jmp
aam
add
rcl
lahf
xchg
lods
std
js
(bad)
cmps
or
in
pop
iret
push
std
pop
jo
fidivr
lahf
mov
addr16
cwde
pop
psubsw
add
xor
push
xor
(bad)
in
arpl
mov
ficomp
loope
shl
and
pop
jne
in
in
add
imul
dec
cmp
mov
push
call
mov
fldcw
sub
mov
fsubr
xchg
dec
cmp
repnz
mov
push
out
aas
mov
hlt
pshufw
push
jbe
adc
in
fwait
xchg
xchg
popf
adc
repz
mov
bound
out
xor
test
cmp
(bad)
jmp
retf
frstor
fisub
hlt
pop
cwde
sbb
mov
cmps
jne
xor
dec
xchg
outs
and
cmp
bound
adc
ror
dec
dec
xor
jge
popa
repnz
jmp
and
sbb
jo
inc
cli
mov
jmp
sbb
cmp
ja
adc
arpl
cmp
push
fwait
mov
push
and
mov
clc
mov
retf
cld
popf
out
mov
push
jmp
xchg
(bad)
and
cld
jmp
in
enter
jmp
inc
add
mov
or
movs
out
jle
and
adc
sub
add
sar
int
sub
pop
sti
xor
sbb
push
cmp
test
ficomp
call
iret
jne
je
pop
cmc
into
shl
adc
test
pcmpgtw
icebp
dec
push
and
cmp
shr
mov
add
iret
adc
push
pushf
push
cdq
add
lds
jns
or
inc
rcl
mov
mov
sbb
(bad)
jp
mov
popf
lahf
push
xor
out
pop
sbb
cmp
push
xchg
test
repz
imul
mov
fcomp
mov
and
xor
(bad)
icebp
shl
icebp
jle
out
xchg
shl
jmp
scas
add
out
ins
nop
or
cmps
and
mov
shl
jae
mov
mov
shr
fsub
ss
cmps
pop
sbb
fs
not
and
xor
imul
push
jo
sti
(bad)
sbb
push
adc
cli
add
pop
outs
push
rol
push
mov
sub
mov
popf
xchg
inc
mov
sub
mov
rcl
cmp
cmps
outs
jle
xchg
retf
fist
xchg
push
add
fcmovnu
mov
cmps
add
outs
(bad)
outs
aaa
cmp
mov
or
jecxz
mov
rcl
push
jno
pop
mov
and
loopne
mov
or
xor
mov
xchg
shl
mov
cmp
arpl
mov
dec
mov
fs
cmp
push
ins
push
or
fiadd
call
cdq
enter
(bad)
loopne
add
fld
sar
retf
cmp
and
pusha
(bad)
out
xlat
mov
lea
loop
(bad)
stos
and
fisubr
add
mov
push
mov
das
xor
sar
cwde
jns
das
mov
cmp
popf
lods
mov
adc
dec
fs
inc
and
pop
(bad)
cld
xchg
fld
(bad)
xchg
sub
call
aas
(bad)
mov
call
jecxz
in
popf
sbb
rcr
mov
add
(bad)
vmwrite
jo
jl
int3
icebp
neg
sbb
xchg
mov
mov
sub
xchg
jl
pop
(bad)
adc
je
(bad)
in
(bad)
cmp
sub
xchg
fcom
sub
js
shl
fidiv
mov
xchg
jge
inc
out
jmp
outs
add
pop
call
and
loop
add
loopne
dec
xor
dec
movs
jmp
jl
outs
mov
stos
in
jmp
pop
enter
sub
adc
aaa
inc
scas
sbb
adc
jmp
pusha
and
jl
dec
loopne
test
les
pop
icebp
scas
call
mov
call
sbb
lahf
call
add
arpl
xchg
(bad)
sbb
into
or
cdq
test
adc
pop
retf
add
add
sub
out
sub
dec
pop
inc
dec
into
enter
and
jb
mov
aas
cmp
into
repnz
sbb
idiv
mov
pop
sbb
scas
cld
pop
mov
test
pop
jo
and
ins
test
or
mov
inc
jg
jbe
xchg
adc
sub
xchg
lahf
aaa
loopne
add
pop
xchg
outs
inc
fidivr
jle
fild
out
add
cmp
mov
mov
mov
lock
ror
test
js
rol
call
gs
cdq
adc
cmc
mov
ror
inc
ret
jl
jmp
in
jae
sub
dec
adc
and
(bad)
fdivr
sub
sbb
or
daa
mov
sbb
adc
add
cmp
jns
mov
xchg
fwait
pop
ins
dec
in
enter
mov
out
and
repz
clc
xor
(bad)
into
pop
sbb
dec
ins
into
cdq
idiv
inc
int3
cmp
out
fist
clc
adc
jl
push
ins
pop
push
xor
fcom
mov
cli
cs
or
mov
retf
into
das
xor
std
push
xor
movs
out
and
popa
jbe
int
inc
enter
adc
add
adc
imul
shl
jae
cdq
inc
jecxz
dec
movs
mov
cmp
int3
cmp
xor
scas
inc
xor
pusha
dec
or
shr
leave
pop
aas
or
outs
mov
rcr
jns
push
call
sbb
xchg
out
adc
mov
push
add
inc
adc
and
dec
les
sub
(bad)
mov
sub
jle
xchg
imul
sbb
icebp
push
fdiv
fwait
jns
ror
movs
mov
ret
sub
retf
or
jge
fwait
mov
mov
test
clc
and
std
jecxz
jbe
inc
xchg
cld
rol
fnstsw
outs
jnp
jae
jo
pop
dec
and
inc
iret
cmp
or
stc
xor
or
pop
mov
mov
lock
fst
pop
inc
jg
adc
sbb
clc
sahf
in
fstp
ja
into
push
jecxz
or
jmp
add
sahf
dec
or
(bad)
ja
ins
xor
ins
mov
jmp
movs
scas
test
pop
sbb
cs
mov
cli
dec
and
sbb
movs
enter
adc
sbb
jl
dec
xor
jnp
test
dec
pop
jmp
add
repnz
(bad)
leave
sub
(bad)
stos
fwait
xchg
int
das
iret
pop
adc
in
stos
xchg
xor
jbe
rol
sti
data16
mov
pop
mov
aas
sbb
js
add
movs
add
(bad)
adc
push
(bad)
inc
addr16
cmps
mov
loope
or
test
push
fisub
and
(bad)
aas
out
adc
daa
pop
jae
sub
jb
lea
dec
out
outs
ins
test
jo
dec
xchg
cmp
jg
nop
les
das
sbb
pusha
sbb
mov
inc
inc
sahf
fsubr
dec
aad
adc
(bad)
je
mov
jno
cmp
mov
std
popa
jecxz
lock
add
pop
and
or
cli
rcr
mov
pop
add
int
leave
call
pop
mov
mov
pop
dec
(bad)
or
(bad)
fwait
(bad)
mov
cmp
fcomp
icebp
add
sbb
dec
jle
stc
cmp
mov
adc
cli
and
or
xchg
and
ds
lds
daa
mov
jns
lds
(bad)
int
adc
lahf
and
shl
sahf
cmc
mov
xchg
ins
pop
hlt
outs
dec
fstp
push
sub
test
mov
jp
out
pop
arpl
int3
xchg
adc
aam
or
popa
or
inc
rcl
dec
das
neg
addr16
cwde
pop
int3
cmovae
lods
inc
mov
jmp
xchg
test
ins
xor
popa
xor
scas
mov
packsswb
mov
mov
je
retf
lahf
cs
push
add
jmp
lea
scas
cmps
cmp
test
pop
sub
mul
mov
push
sub
fimul
sub
(bad)
fcom
mov
addr16
ins
xchg
and
je
xor
(bad)
mov
in
test
(bad)
mov
add
loope
pusha
sub
das
and
pop
dec
dec
push
pop
sahf
sbb
(bad)
adc
lds
jmp
scas
out
movs
inc
cmp
jns
lock
push
adc
fdiv
fsubr
mov
pushf
mov
inc
dec
cs
ss
sub
shr
xchg
pushf
fcom
imul
mov
fnstcw
fldl2e
movs
cmp
test
sbb
scas
pop
adc
dec
cmc
or
xchg
mov
outs
xchg
or
mov
lds
(bad)
sbb
test
ja
popa
fdivr
or
push
cmps
mov
jne
push
dec
inc
push
imul
fldenv
pop
cs
jae
outs
sub
adc
jle
xor
and
into
xor
xor
fnstsw
sbb
jae
out
xlat
or
xchg
scas
mov
add
js
sub
arpl
mov
ror
scas
adc
mov
hlt
stos
enter
add
mov
rcl
jmp
ds
cs
scas
push
sub
popf
and
push
push
nop
xor
mov
pop
xchg
mov
add
popa
shl
cmps
mov
dec
in
icebp
pop
ss
jno
or
inc
rcl
lahf
inc
pop
inc
rol
stc
test
repnz
test
push
pop
loop
(bad)
out
sub
dec
fwait
push
lahf
adc
jmp
loope
push
ret
adc
std
gs
push
jl
sar
movs
movs
jo
std
xor
inc
cs
call
shr
mov
add
iret
jmp
pop
loop
pop
(bad)
mov
push
push
push
aaa
ss
add
cli
and
scas
ins
or
(bad)
mov
rol
movs
out
and
mov
addr16
lds
icebp
inc
pop
sbb
int3
inc
push
sbb
leave
dec
(bad)
pop
jecxz
fdiv
xchg
mov
in
mov
or
aaa
mov
into
mov
jmp
xchg
cmp
retf
call
xor
(bad)
push
add
int
pop
push
inc
adc
sbb
loope
cmp
add
add
mov
push
or
test
jbe
not
jns
dec
and
xchg
jns
cmp
mov
mov
lock
out
shr
in
sub
mov
mov
jo
xchg
mov
clc
push
out
ret
or
iret
cmc
ret
in
mov
int
imul
adc
outs
mov
sub
mov
enter
mov
out
repnz
retf
push
or
aad
shl
push
jmp
pop
mov
aas
(bad)
xchg
jmp
cmc
loopne
jp
jno
pop
mov
xor
jp
fsubr
dec
dec
pop
push
ins
ret
push
imul
ss
jae
sbb
jg
loopne
out
cmp
jnp
and
fwait
in
xor
xchg
retf
clc
cmp
addr16
adc
iret
jmp
sti
add
inc
jle
jo
shl
loope
cs
test
xor
je
pop
jb
ret
add
mov
push
xchg
cmc
ror
push
ret
rcl
sbb
mov
push
pusha
out
pop
mov
jbe
add
aas
jo
(bad)
movs
adc
retf
call
pop
sahf
pop
push
pop
push
cmp
or
inc
sub
out
pusha
push
adc
fnstenv
lods
icebp
xor
xchg
fisttp
dec
(bad)
adc
stos
mov
push
jnp
out
test
pop
jmp
jp
clc
xchg
inc
retf
xchg
movs
dec
dec
mov
ja
outs
pop
and
cmc
inc
jmp
aam
shr
aam
mov
mov
sahf
repnz
outs
cmps
sbb
cmp
inc
imul
cmp
data16
out
pop
nop
push
dec
das
movs
xchg
aaa
dec
pop
ret
jmp
lock
xchg
cmps
inc
fisub
mov
add
and
xchg
into
mov
add
not
xor
jecxz
push
push
fs
jne
xchg
mov
sbb
sub
sub
aam
rol
xchg
ret
jmp
(bad)
pop
xchg
outs
sahf
movs
es
std
in
aad
xchg
add
out
ja
push
shr
rol
pop
sbb
jbe
dec
jp
cmp
push
push
test
mov
pop
dec
call
pop
fiadd
repz
(bad)
out
push
inc
sti
jl
cmp
ins
movs
fdiv
xor
jmp
pop
dec
pop
cmp
test
fsub
xchg
push
sub
lds
aas
jae
mov
adc
push
mov
loopne
ret
push
inc
push
das
push
push
daa
jecxz
inc
sar
cmp
and
or
call
push
mov
sbb
inc
inc
repnz
or
push
stos
aad
add
popf
outs
in
retf
shr
jp
dec
ficomp
cmp
repnz
push
dec
pop
dec
and
enter
push
sbb
pop
push
dec
addr16
arpl
mov
outs
loope
sti
mov
mov
mov
in
sub
outs
popa
ror
loope
mov
test
mov
mov
pop
outs
fst
add
add
cmp
mov
in
and
sar
repnz
mov
aam
mov
rcr
pop
mov
cmp
fcom
cmp
mov
add
adc
das
je
(bad)
cmps
test
sahf
jo
lods
cs
mov
add
pop
ins
outs
icebp
pop
sub
outs
mov
jnp
lods
push
add
pop
jge
call
(bad)
pop
cmps
leave
leave
dec
cmp
nop
and
mov
push
xchg
enter
jbe
pop
mov
or
sbb
mov
(bad)
mov
sbb
xor
dec
cmps
push
xlat
mov
std
xchg
in
std
imul
in
xor
cli
adc
jo
jl
adc
scas
ret
ret
mov
hlt
mov
jl
add
ficomp
scas
push
fcomp
add
jge
imul
mov
into
add
push
in
shl
pop
stos
nop
repnz
mov
sbb
or
or
dec
gs
pusha
int3
ja
pop
add
push
ret
mov
and
es
inc
inc
add
mov
aas
test
cmps
pop
dec
out
cmp
jle
jp
in
sbb
or
pop
sub
jmp
jmp
dec
movs
test
jge
xor
sbb
pop
cmp
aam
sub
into
lods
(bad)
clc
cmp
js
jle
dec
test
fistp
aam
mov
arpl
push
pushf
jp
shl
mov
not
aaa
int3
pop
inc
nop
iret
lock
test
mov
cld
or
lods
lds
or
mov
xchg
xlat
in
ins
enter
cdq
cmp
ins
ret
and
sub
cmp
add
add
pop
das
or
adc
jo
aam
scas
pop
gs
and
ja
dec
sub
add
mov
rol
add
or
pushf
ror
push
jno
adc
add
xchg
test
scas
retf
jb
push
aam
pop
pushf
push
int
test
cwde
pop
mov
cmp
jle
pop
xrstors
bound
mov
cdq
in
mov
mov
dec
(bad)
mov
popf
rcl
mov
fimul
stos
dec
repz
xor
imul
dec
mov
(bad)
fld
into
pop
mov
fcmovnu
aam
sbb
in
xchg
ds
repz
(bad)
jp
inc
jno
add
mov
jecxz
enter
push
mov
dec
cmp
inc
enter
jae
fld
dec
ror
cmc
nop
fstp
mov
inc
jns
adc
mov
inc
jp
fsub
out
sahf
mov
push
and
cmp
and
icebp
mov
cmp
mul
outs
sbb
in
mov
jl
out
pop
add
(bad)
aam
popf
mov
jge
mov
ret
xor
mov
inc
jmp
xbegin
gs
dec
ror
shl
push
xchg
cmp
xchg
xor
mov
idiv
hlt
push
mov
cmp
mov
sbb
dec
pushf
out
pop
mov
mov
cmp
cli
mov
mov
int
mov
retf
jnp
mov
xor
push
mov
mov
or
mov
jo
or
dec
mov
sub
push
repnz
mov
(bad)
mul
shl
add
mov
or
aaa
jo
(bad)
push
pop
fcmovnu
mov
int3
mov
inc
pop
int
push
jo
push
jmp
xor
aas
arpl
jge
imul
xor
adc
mov
mov
shl
dec
sub
push
add
lock
xlat
cmps
adc
cmps
bound
dec
jl
repnz
les
test
add
jnp
rcr
mov
dec
cmp
mov
popa
sar
mov
lea
(bad)
cmp
add
std
and
xchg
pushf
sbb
mov
pop
sbb
arpl
push
(bad)
mov
xchg
fwait
sar
pop
mov
cmps
jl
cmp
call
cmp
movs
add
enter
es
bound
test
cwde
mov
jmp
xchg
sub
sbb
mov
mov
popa
adc
hlt
xchg
pop
add
not
cmps
nop
xor
xchg
out
pop
inc
(bad)
hlt
call
into
int3
mov
mov
arpl
mov
pop
fisttp
mov
mov
(bad)
xor
dec
cmp
popf
bound
sub
push
fist
mov
jl
das
push
mov
sar
mov
xchg
test
into
push
shl
ret
cli
clc
sub
fcmovnb
rcr
imul
fldcw
cmc
adc
iret
cmp
int3
sub
les
ins
jns
int
xlat
pusha
and
jae
dec
dec
rcl
or
push
or
or
mov
pushf
sub
jecxz
jl
call
pop
mov
adc
out
pop
test
xor
scas
cmp
push
push
loope
cmp
aad
mov
mov
dec
(bad)
rol
mov
push
enter
loopne
fs
xor
xchg
pop
cmps
jg
jno
inc
aad
or
pop
(bad)
mov
mov
test
test
jae
push
loope
imul
gs
cdq
into
das
pop
mov
cwde
ret
dec
ins
sti
sbb
mov
stos
(bad)
jmp
adc
jecxz
retf
cmp
mov
xor
sub
call
out
add
jmp
cmp
es
test
xor
or
or
imul
loope
xchg
rcr
rcr
outs
pop
pop
cmp
inc
jle
jmp
pop
rol
(bad)
sub
fidivr
mov
dec
push
pop
push
jb
lods
sub
or
ins
jnp
cwde
xchg
(bad)
inc
cdq
call
scas
inc
call
jbe
mov
es
sbb
mov
jnp
mov
mul
je
gs
add
loope
mov
jbe
jbe
sub
dec
adc
outs
cmp
xchg
js
xor
hlt
lods
ss
cmp
lds
movs
mov
fisubr
cmp
xchg
cmps
push
push
dec
inc
(bad)
mov
leave
je
push
inc
xor
jl
xchg
jp
add
imul
std
cmp
pop
inc
loope
inc
push
jle
dec
cmc
pusha
call
xchg
inc
jb
xchg
jbe
jg
mov
or
je
aaa
ror
xchg
dec
cmps
cmp
ins
sar
scas
sbb
les
retf
xchg
pop
or
shl
pop
std
in
fwait
aad
push
add
pushf
out
or
and
pop
in
mov
sub
loopne
call
popa
gs
dec
pop
test
jb
mov
loop
xlat
cwde
loop
push
retf
imul
xchg
ret
addr16
cwde
fwait
arpl
add
test
sub
sbb
push
mov
inc
rol
aas
adc
and
cmp
stos
inc
mov
adc
lds
in
jmp
scas
fwait
add
dec
push
int
in
(bad)
mov
mov
pop
iret
mov
push
pop
push
inc
daa
cmp
cmp
dec
shr
push
lods
nop
add
stos
data16
pop
ror
(bad)
leave
inc
sub
(bad)
fist
dec
sbb
xor
scas
push
mov
out
mov
out
cmps
sbb
xor
pop
mov
inc
xchg
xor
dec
ror
push
adc
mov
add
push
pop
movs
ja
sti
hlt
shl
add
pop
or
cmps
(bad)
jbe
push
test
cmp
retf
or
mov
in
test
pusha
test
fsubr
les
ins
or
mov
jmp
xchg
(bad)
in
push
scas
je
sub
adc
adc
fstp
mul
fadd
mov
pop
ficomp
pushw
repnz
mov
dec
das
rcl
jge
mov
das
mov
test
mov
repnz
push
xor
movs
sub
push
xchg
fsubr
popf
pop
(bad)
sub
adc
sub
pop
mov
mov
inc
cmp
lahf
test
or
adc
push
mov
xlat
inc
mov
xchg
mov
pop
repnz
xlat
imul
shl
adc
cs
mul
dec
in
mov
push
jmp
and
scas
push
mov
repz
(bad)
movs
and
xlat
mov
daa
mov
pop
cmp
and
cmps
in
mov
aam
rcl
js
outs
push
(bad)
mov
sub
ret
cmp
stos
mov
cld
dec
daa
jno
(bad)
data16
xor
inc
lock
cdq
add
outs
and
lods
xor
in
out
sbb
cdq
xor
std
scas
xor
adc
adc
ror
ins
dec
mov
and
dec
ret
inc
mov
jg
sub
jge
jle
or
jns
lods
arpl
xchg
push
scas
ret
clc
sbb
hlt
jle
xchg
jb
hlt
push
in
dec
addr16
cmp
mov
(bad)
clc
push
sbb
mov
push
sub
clc
sub
inc
mov
lock
shl
push
cmp
mov
cs
xchg
mov
ret
imul
mov
sbb
test
enter
js
(bad)
fcmovnb
mov
inc
or
cmp
push
jl
jbe
lods
test
daa
cmp
mov
ss
adc
pusha
imul
adc
cmp
push
sbb
cs
popa
sbb
cwde
mov
cmps
out
retf
ret
and
xchg
mov
(bad)
daa
xor
xchg
std
jmp
xor
cwde
push
jp
(bad)
and
cmps
inc
inc
xor
mov
scas
sbb
mov
aad
or
dec
and
es
inc
scas
or
jl
es
mov
movs
subps
popa
mov
push
hlt
sbb
inc
push
popa
js
xor
mov
clc
std
inc
xor
retf
xor
pop
rcr
aam
or
adc
sub
pop
or
push
xchg
test
lock
or
bound
dec
mov
or
and
lock
adc
add
aam
and
jl
hlt
cmps
mov
add
cmp
push
iret
data16
out
in
and
test
and
lds
popa
pop
lods
ror
jo
pop
cmp
fimul
or
clc
xor
(bad)
stc
and
or
mov
inc
push
cmps
(bad)
cmp
and
(bad)
push
push
xor
loopne
dec
jecxz
test
push
add
pop
fisubr
pop
adc
push
aad
data16
cdq
(bad)
pop
rol
xlat
or
mov
cmp
scas
pop
dec
mov
push
push
inc
out
inc
jmp
jno
leave
sub
mov
xchg
push
inc
mov
cmp
pop
retf
cmps
mov
popa
mov
cwde
jns
das
adc
add
outs
dec
jg
fdiv
addr16
inc
ins
test
sbb
test
call
fwait
retf
and
sub
cmp
pop
(bad)
or
xor
mov
ret
outs
push
dec
loope
mov
mov
ja
cmp
or
imul
jmp
pop
xchg
sub
mov
cwde
push
cwde
pushf
push
or
movs
add
mov
xor
add
fnstenv
pop
pushf
push
mul
cmp
scas
nop
rol
sub
push
cmp
push
retf
xchg
retf
lahf
jg
call
ins
jo
scas
(bad)
pop
sub
xlat
pop
or
cmp
dec
add
adc
xchg
jns
ins
mov
mov
sbb
ror
aad
push
movs
nop
mov
adc
add
out
jnp
push
stc
push
out
pop
int3
mov
test
sub
test
push
jmp
mov
mov
push
movs
ret
shl
lods
ss
test
jp
pop
lods
dec
push
jne
pop
adc
aad
fdiv
outs
adc
(bad)
jo
cmp
loopne
loop
pop
mov
imul
push
dec
xor
call
scas
jns
ins
nop
xchg
lods
aaa
lods
push
cmps
pop
aaa
inc
pop
call
aam
fidivr
lock
lds
mov
stc
sbb
lods
sub
pop
xor
in
or
add
mov
xchg
lahf
or
mov
mov
inc
pop
push
rol
leave
pop
inc
add
(bad)
push
add
bound
test
xchg
sub
pop
push
popf
jae
push
call
mov
push
jmp
sub
loopne
pushw
add
cmp
movs
inc
fwait
inc
jmp
lea
stos
js
mov
lods
mov
sub
jne
push
sub
pop
mov
cmp
mov
in
lds
(bad)
cmp
frstor
mov
shl
enter
cmc
and
and
jle
dec
nop
bound
pop
out
adc
cmp
mov
call
inc
or
in
jno
test
xor
inc
xchg
mov
sbb
adc
mov
loope
scas
(bad)
dec
inc
or
or
(bad)
in
pop
in
add
je
pop
inc
jae
out
icebp
and
push
call
push
or
std
push
and
test
push
(bad)
cld
and
and
mov
inc
pop
cmp
in
pushf
mov
test
xchg
push
int3
mov
cmps
(bad)
pop
imul
xor
sub
jno
and
(bad)
or
cmp
cmp
popa
loope
jmp
and
shl
push
fistp
repz
push
fisubr
iret
inc
aad
out
sbb
pushf
sar
sbb
mov
mov
loope
jle
dec
mov
fchs
pusha
inc
std
sbb
cs
daa
js
loope
ficomp
(bad)
sti
mov
pop
test
rcl
and
pop
xchg
inc
out
idiv
pop
ret
push
fs
jmp
fwait
dec
cmp
xchg
push
das
ds
pop
(bad)
dec
and
add
pop
mov
inc
in
aad
arpl
xchg
aas
ins
or
es
mov
jp
xchg
test
pop
loopne
test
test
sub
jp
pop
jo
xchg
xor
fisttp
inc
loope
adc
jg
dec
test
test
(bad)
sub
lds
(bad)
fstp
and
jg
inc
hlt
jp
sbb
loop
sub
jbe
sahf
shr
sbb
leave
jmp
repnz
xchg
cmps
fwait
call
pop
dec
loop
fisubr
inc
scas
sub
inc
adc
add
test
sub
xchg
push
pop
cmp
data16
jnp
aam
jp
push
push
retf
out
clc
xor
sub
sbb
out
movs
ret
cmps
pop
sbb
push
adc
cmp
or
mov
push
pop
jecxz
int3
xchg
inc
xchg
add
mov
inc
cmps
(bad)
sbb
sbb
pop
cmc
push
jae
adc
(bad)
call
(bad)
lods
add
and
cmps
sbb
cmp
outs
adc
repz
sar
jge
mov
cwde
and
lea
aaa
fs
xor
aas
or
stos
sub
addr16
test
bound
mov
idiv
or
push
repz
push
add
add
sbb
jae
push
dec
es
jl
mov
sub
test
mov
mov
and
sbb
mov
dec
jo
cmc
mov
lods
je
inc
lods
sub
cmps
mov
and
dec
push
mov
into
(bad)
push
adc
cdq
cmps
test
fwait
or
ret
mov
cmp
dec
lahf
je
xchg
dec
loop
repnz
scas
xor
inc
sbb
jge
jmp
inc
int
popa
push
mov
lahf
pop
cwde
into
lods
pop
inc
xchg
cmp
aaa
std
call
sub
cmc
jns
cmp
mov
dec
or
test
stos
jne
cli
data16
xor
push
(bad)
(bad)
xchg
cdq
fdiv
fcom
xchg
popa
or
adc
mov
in
movs
retf
cmps
jp
xchg
(bad)
adc
sub
push
pop
pop
aaa
push
xchg
call
jp
loopne
jp
mov
mov
iret
fdiv
and
out
mov
data16
repz
mov
ret
pop
(bad)
hlt
jae
imul
in
adc
push
mov
cmp
std
xchg
in
sbb
or
pop
imul
sbb
mov
xor
in
pop
out
dec
sub
mov
adc
lods
(bad)
mov
pusha
jbe
(bad)
cwde
inc
sub
xchg
mov
mov
push
pminub
pop
xor
shl
(bad)
in
sbb
push
dec
mov
pop
xchg
xchg
or
pop
scas
fwait
std
mov
stos
mov
mov
mov
test
pushf
nop
push
xchg
adc
je
sbb
adc
and
imul
call
in
sbb
repz
push
scas
adc
xchg
rcl
(bad)
daa
push
dec
(bad)
jmp
aad
ret
or
jg
add
pop
inc
add
dec
dec
outs
push
add
sub
lahf
pop
push
fptan
retf
stos
lea
(bad)
xchg
inc
dec
mov
repz
ror
dec
ins
ja
outs
and
mov
cli
cmp
mov
or
std
mov
jo
cld
inc
in
jg
cmps
dec
mov
std
int3
clc
add
hlt
cli
pop
mov
ins
ins
mov
in
jne
js
(bad)
sti
rol
(bad)
jo
cmp
call
push
jecxz
fdivr
push
push
dec
sub
sub
cwde
dec
jge
aas
mov
ror
xor
cmps
push
sub
ds
xor
jae
jg
mov
dec
or
xchg
sub
shl
cmp
xor
xchg
out
lock
inc
add
adc
inc
cld
dec
xchg
lock
pop
cs
xor
push
pop
mov
mov
jge
loope
cld
popf
sub
mov
jo
ret
fimul
and
scas
or
push
cdq
jb
sub
idiv
cwde
mov
mov
pop
leave
jmp
sbb
arpl
mov
pusha
dec
or
mov
mov
add
sar
int3
push
jns
sbb
jno
mov
(bad)
lock
pop
loop
retf
das
fst
push
or
in
cmc
sub
repz
out
add
xor
and
aas
loopne
cdq
cwde
js
jp
push
outs
cmp
cmp
movs
mov
shufps
adc
mov
not
lods
fstp
fild
mov
xor
mov
xchg
pop
push
sbb
fsub
aas
enter
stos
in
mov
cmps
(bad)
fiadd
sbb
mov
into
jp
pop
ss
mov
sub
mov
cmp
jle
mov
jl
movs
icebp
pop
and
shr
icebp
and
ds
push
in
repz
adc
stc
add
(bad)
fldl2t
xor
adc
push
add
pop
fwait
lods
stc
jbe
sub
jbe
loopne
stos
cwde
inc
dec
aas
inc
out
cmps
cmp
sub
add
ins
dec
add
not
enter
inc
retf
push
add
pushf
(bad)
(bad)
fcom
(bad)
dec
pusha
test
rcr
ficomp
in
xor
arpl
jmp
sbb
hlt
xor
sbb
xchg
push
aaa
mov
clc
jmp
ror
inc
loope
(bad)
(bad)
adc
fwait
jbe
and
mov
mov
and
ins
add
sub
scas
or
cmp
or
cmp
dec
call
(bad)
sub
(bad)
xchg
outs
mov
sti
enter
sub
icebp
xchg
pop
das
mov
cli
mov
cli
jecxz
push
test
pop
add
(bad)
call
rcr
mov
pop
rcl
or
add
lock
mov
mov
clc
add
test
outs
jl
inc
pop
fistp
jno
aad
push
in
xor
mov
repnz
jbe
inc
dec
sub
mov
test
daa
adc
mov
dec
int
in
xlat
xchg
jmp
je
mov
inc
dec
cmps
scas
jns
retf
ret
inc
mov
or
inc
lock
test
sub
dec
mov
push
call
mov
push
jns
add
jecxz
ja
inc
sub
js
jnp
es
xor
push
inc
les
cmps
push
hlt
imul
jb
mov
sti
inc
cmp
xchg
cmp
sbb
imul
dec
push
pop
mov
xlat
or
ret
ror
repz
sti
sub
pop
and
sub
fdiv
(bad)
in
add
test
xchg
mov
push
(bad)
rcr
sbb
mov
add
sti
push
pop
jge
dec
mov
ret
not
enter
out
in
cmp
ret
jl
inc
mov
jb
push
ret
(bad)
or
mov
push
and
std
sbb
stos
jns
xchg
aam
call
cmps
cmps
mov
sub
movs
outs
aad
mov
shl
(bad)
je
(bad)
xchg
xor
ins
movs
ins
push
sbb
enter
test
nop
sti
nop
cmps
fs
push
sbb
fs
icebp
loopne
push
movs
js
inc
cmp
xchg
pop
jmp
sbb
cmps
ins
add
or
cs
bound
lahf
dec
rcr
popa
jge
push
es
sub
add
mov
cmp
retf
dec
mov
addr16
adc
pop
loopne
cmc
add
dec
push
inc
retf
mov
mov
mov
loopne
(bad)
jne
mov
out
mov
test
xchg
fwait
mov
push
sub
imul
mov
sub
cdq
inc
adc
mov
popf
vpunpcklwd
jge
sub
les
cmp
mov
test
scas
cli
adc
imul
adc
popa
and
push
sub
and
ret
push
sub
lods
ret
aas
adc
in
push
out
lods
in
inc
push
cwde
shl
adc
sub
push
mov
ja
outs
pop
test
adc
cmp
mov
mov
dec
cmp
stc
into
add
cmp
pusha
es
add
jmp
or
inc
xor
in
pop
in
inc
xchg
outs
xlat
mov
cdq
pop
call
pop
pop
add
dec
jmp
adc
pop
addr16
push
cmc
outs
jno
push
les
retf
adc
out
(bad)
out
(bad)
movs
mov
jne
in
pop
arpl
shl
pushf
push
retf
push
in
sbb
sbb
adc
cld
dec
ds
cmp
xchg
push
data16
fld
ror
out
xlat
mov
mov
mov
jns
or
leave
daa
in
add
lahf
inc
addr16
movs
jmp
jecxz
scas
sub
bound
add
or
mov
jge
gs
sub
mov
xor
out
cdq
mov
add
ret
shl
retf
push
dec
popf
mov
sar
and
daa
inc
xor
add
imul
int3
mov
stos
mov
mov
dec
daa
(bad)
dec
push
(bad)
into
lds
ins
jmp
or
add
loopne
inc
aas
in
push
adc
lea
sahf
scas
mov
jg
repnz
mov
dec
adc
test
xlat
sbb
int3
pop
jbe
mov
dec
jo
mov
sbb
in
rcr
mov
sbb
pop
jmp
push
outs
in
stos
xor
xchg
pop
ss
movs
das
mov
mov
sbb
cmp
cli
dec
dec
int3
and
pushf
cs
in
sub
push
xchg
pop
lds
pop
xor
push
je
popa
test
jle
push
das
arpl
out
push
mov
ss
xor
test
int
sbb
pop
cmc
iret
or
push
aas
xor
or
inc
mov
inc
jle
in
mov
rol
mov
outs
fist
or
and
mov
cmp
jno
pop
adc
mov
es
test
push
sub
mov
jns
push
ficomp
dec
in
cmc
dec
adc
or
push
mul
dec
(bad)
out
dec
and
xor
and
aas
push
xchg
pop
sbb
pusha
xchg
adc
cs
inc
sub
in
xchg
mov
pop
fbld
into
outs
clc
dec
jmp
sbb
out
rol
push
fistp
dec
outs
mov
mov
mov
clc
movs
pop
mov
iret
jbe
cmp
xor
dec
xor
iret
cmp
inc
cmp
ret
sub
rcl
jbe
pop
push
add
mov
and
pop
mov
jne
cwde
loopne
cmc
sub
cmp
mov
mov
outs
pop
sar
out
stos
mov
(bad)
sbb
fcmovnu
mov
jge
shl
clc
call
cs
sahf
ins
(bad)
bound
push
sub
gs
push
pop
xchg
lahf
push
mov
iret
mov
xor
mov
js
out
(bad)
data16
in
test
rol
and
cmps
adc
fisub
jp
(bad)
sub
mov
pop
imul
aam
add
ja
and
shl
adc
or
inc
rcr
(bad)
mov
ss
mov
(bad)
xchg
call
mov
test
neg
stos
mov
sub
(bad)
jg
inc
sbb
adc
ror
sub
cdq
mov
push
pusha
mov
fnstcw
push
dec
mov
pushf
mov
sbb
push
(bad)
sti
mov
clc
daa
adc
mov
in
inc
inc
cli
push
xchg
mov
xchg
dec
in
arpl
lds
dec
sub
mov
repz
dec
jb
lods
outs
test
add
scas
or
jmp
xor
fwait
mov
fcomp
cmps
shl
fadd
lea
or
mov
in
adc
and
jl
lea
stos
push
pop
fiadd
push
add
dec
adc
lods
gs
cmp
lods
sub
cmp
sub
or
(bad)
aam
jno
out
stos
mov
mov
iret
aad
adc
add
xchg
scas
arpl
cmp
ins
mov
mov
mov
mov
into
mov
out
inc
fwait
push
jmp
xchg
mov
in
mov
sub
ins
or
dec
stos
dec
pop
into
mov
imul
leave
je
lds
into
jmp
inc
mov
jns
hlt
into
(bad)
jle
cdq
sub
mov
ds
fimul
ss
lahf
lds
retf
xlat
xor
jnp
jno
aam
sub
das
inc
xchg
fwait
add
add
xchg
xchg
inc
sbb
push
scas
push
loope
mov
xchg
push
aad
dec
outs
int
xchg
mov
adc
xor
sahf
mov
xor
das
sbb
add
(bad)
adc
add
xchg
call
dec
xchg
push
in
mov
test
jg
dec
adc
dec
iret
loopne
xchg
pop
cmps
into
dec
pushf
test
cmp
addr16
iret
addr16
sbb
shl
xchg
dec
sahf
jne
xchg
idiv
cmp
data16
cmc
cmp
xchg
adc
cmp
xor
fidiv
push
js
cmps
sbb
aas
pop
outs
std
out
jge
imul
jne
add
sub
inc
ja
cmp
or
adc
xor
rcl
mov
lahf
je
jmp
mov
jecxz
dec
xlat
std
out
add
adc
cs
test
mov
sbb
ja
sub
add
fisub
lock
cmp
cmp
je
(bad)
adc
dec
jg
test
xchg
jns
or
push
push
add
les
mov
pop
ja
xchg
ja
push
jmp
sahf
sbb
pusha
test
inc
inc
xchg
test
xchg
mov
inc
imul
cmp
(bad)
and
add
mov
je
sub
shr
enter
mov
retf
ins
push
inc
(bad)
in
pop
cmp
cmc
cmc
xchg
inc
in
fucom
cmp
xor
leave
jg
adc
cmps
jbe
inc
adc
mov
(bad)
enter
(bad)
(bad)
fisttp
out
xor
and
(bad)
mov
out
pop
mov
dec
(bad)
mov
movs
rcl
jle
add
cmps
push
cmp
enter
shr
jns
jns
inc
xchg
stos
adc
std
add
xor
add
sub
aas
xchg
sub
jne
dec
retf
lock
je
imul
push
push
shr
xchg
jl
xchg
xchg
bswap
sub
cmc
adc
call
adc
fadd
push
call
fisubr
out
jl
mov
ins
pop
push
jle
shl
sub
mov
popf
out
arpl
or
add
fidivr
adc
mov
mov
push
pop
sbb
mov
cmps
inc
cmp
das
cmps
pop
lods
js
in
mov
cmc
jmp
mov
adc
mov
test
cmovle
dec
jmp
aam
pop
fcmovu
idiv
push
test
std
fs
data16
jp
mov
pop
mov
mov
pusha
(bad)
mov
int3
cmp
jecxz
out
jnp
push
lea
mov
shl
cmc
pop
xor
sbb
xor
iret
fmul
fisub
sahf
pop
dec
fisubr
mov
(bad)
cmp
jmp
test
xor
(bad)
cdq
ror
movs
jmp
loope
imul
xchg
xor
jp
pop
jp
xchg
loopne
out
or
dec
adc
sub
pop
lock
xor
jmp
(bad)
mov
dec
mov
enter
outs
mov
jle
mov
push
or
(bad)
test
dec
sub
movs
pusha
add
(bad)
loope
and
inc
mov
(bad)
fcmovnu
jp
into
(bad)
das
pop
fmul
push
sub
ins
sbb
xor
cli
dec
cmps
mov
mov
cmp
sub
dec
dec
ret
imul
int
mov
in
mov
mov
das
mov
push
(bad)
xor
aas
mov
out
xor
pop
inc
sbb
jbe
stos
jns
dec
stos
inc
dec
cmp
loopne
int3
mov
and
add
inc
mov
or
out
outs
adc
cmc
xor
ds
repnz
add
or
mov
inc
xlat
cli
pop
mov
imul
leave
sub
mov
push
call
fidiv
jle
inc
mov
pushf
popa
cmp
mov
mov
push
pop
dec
pop
jns
faddp
mov
xchg
cmp
mov
push
rol
outs
aam
add
push
sbb
xchg
loop
gs
ror
out
jge
add
push
dec
icebp
lds
repnz
pusha
mov
xlat
or
xor
mov
or
pop
icebp
mov
not
mov
daa
rol
jp
pop
lahf
or
stc
mov
fwait
push
aas
cdq
test
push
inc
ss
mov
(bad)
mov
outs
jp
fcmovb
push
ret
push
repnz
cmp
and
das
jo
xchg
add
mov
xchg
push
jmp
dec
xor
test
cmp
wbinvd
jne
aas
dec
mov
jbe
jge
mov
jle
test
xor
nop
inc
mov
enter
mov
xchg
cmps
call
cli
cmps
fwait
or
(bad)
call
push
push
jmp
in
mov
cmps
xchg
int3
scas
call
mov
xchg
pop
dec
rol
push
adc
sbb
inc
jb
jecxz
inc
mov
ins
cmp
mov
adc
push
rcr
daa
iret
mov
jae
inc
out
ja
je
into
dec
inc
push
sub
scas
adc
idiv
iret
bound
and
stos
je
sahf
cs
movs
or
jp
mov
out
dec
ins
jbe
fs
push
in
ror
repnz
or
sbb
repnz
gs
cmp
lds
cmp
mov
out
popa
stos
div
hlt
fdivrp
push
cmp
xor
xchg
dec
mov
rol
inc
jp
sbb
pop
ret
fidiv
cdq
(bad)
in
mov
lods
push
xor
js
jecxz
and
or
outs
retf
ins
add
jno
mov
fidiv
cmp
ja
jg
mov
test
idiv
sbb
push
ins
(bad)
in
pop
mov
ss
cli
dec
sar
xor
mov
mov
fcmovne
jbe
sub
or
cmp
icebp
inc
aas
fistp
push
pop
ja
dec
movs
retf
push
add
popf
mov
mov
mov
or
push
mov
sbb
add
into
stc
xchg
sbb
(bad)
or
neg
fnstenv
inc
adc
jno
jmp
lods
icebp
movs
dec
int
mov
sbb
shr
cmp
out
sub
jbe
sbb
cmp
fisttp
adc
sbb
test
add
cld
inc
and
pop
ret
scas
les
out
pusha
add
push
push
jb
mov
fisttp
test
fdivr
scas
sub
call
bound
lods
icebp
sbb
les
es
cmps
ds
stos
dec
push
inc
aas
daa
inc
in
mov
xchg
pop
inc
cmps
mov
sbb
popf
lods
xchg
push
xchg
or
sbb
mov
mov
jecxz
imul
ins
xchg
std
clc
ins
xchg
sbb
and
lods
rcl
pop
jmp
xchg
daa
out
gs
push
push
scas
stos
dec
mov
fwait
inc
or
arpl
sahf
inc
inc
pop
into
or
mov
add
imul
clc
clc
test
inc
pushf
xor
dec
xor
clc
and
or
cmc
cli
mov
cli
sti
mov
xchg
cld
lds
push
in
jg
dec
in
outs
inc
fadd
popf
imul
dec
pusha
enter
cmps
cmp
push
dec
add
xchg
xchg
push
xchg
inc
ja
cmps
mov
sbb
ret
(bad)
mov
ret
cmps
movs
inc
sahf
push
mov
push
shr
out
outs
fild
cwde
or
test
retf
lock
or
fdecstp
imul
cmovb
push
xchg
mov
div
cmp
mov
jecxz
jb
rcr
out
stc
lods
jne
or
jns
(bad)
movs
push
loop
pop
popf
sbb
fcom
adc
nop
aaa
imul
sar
data16
push
mov
sbb
mov
lods
mov
push
fidivr
push
cwde
test
and
mov
cmp
add
(bad)
out
push
popa
inc
sahf
stos
mov
scas
jmp
xchg
out
fnsave
jg
popf
gs
mov
adc
mov
inc
in
iret
out
(bad)
jg
push
mov
loopne
cmp
xchg
mov
push
loop
push
dec
sbb
inc
mov
lods
jae
enter
jo
aam
daa
dec
sbb
jp
xor
test
push
add
mov
gs
jl
mov
jo
jmp
cwde
push
jp
test
dec
mov
dec
outs
pop
xlat
push
(bad)
gs
shl
push
addr16
arpl
es
adc
pushw
mov
scas
(bad)
lahf
push
xchg
xlat
push
stos
xchg
xchg
es
rcr
sahf
imul
into
xor
xchg
mov
sub
(bad)
repz
inc
jge
pop
jmp
rol
xchg
pop
cmp
dec
ror
mov
not
push
call
mov
fcmove
test
mov
adc
ret
inc
mov
lea
xchg
cmp
mov
add
shl
outs
jmp
sti
cld
cmps
into
ss
sub
xor
push
jge
clc
jb
inc
xor
bound
pop
pop
pop
sub
cmp
xchg
mov
jb
hlt
jle
pop
adc
dec
int
and
out
sub
lods
xlat
bound
mov
stos
retf
push
and
mov
jbe
addr16
mov
sbb
shl
in
pop
mov
cld
outs
push
xor
sbb
push
inc
sbb
lds
stc
cdq
jae
shl
dec
push
and
mov
mul
lahf
les
inc
int3
(bad)
std
jnp
jge
xlat
daa
xchg
cmps
pop
shl
pop
outs
ins
inc
xlat
test
xchg
rcl
xchg
enter
daa
cmp
push
bound
sti
pop
inc
cdq
cmp
stc
pusha
add
push
mov
mov
xchg
je
add
or
rcr
iret
sub
mov
cmp
add
adc
push
out
mov
xlat
xchg
addr16
lock
call
sti
pop
jge
inc
jp
dec
fsubp
out
out
out
sahf
add
test
xchg
rol
cmp
mov
loopne
loop
ins
(bad)
xor
bnd
test
mov
mov
inc
fldenv
test
cli
xchg
loop
xor
jno
cwde
std
test
(bad)
rcl
imul
or
sbb
cmc
daa
stc
popa
dec
ret
bound
outs
xchg
aaa
js
test
ja
in
dec
sbb
data16
or
jo
bound
and
and
jp
mov
mov
push
sbb
sti
or
push
mov
mov
mul
and
pop
inc
and
and
adc
mov
mov
fsubr
push
test
pop
add
in
(bad)
jns
dec
mov
shl
popa
jbe
adc
mov
sar
inc
or
ror
sub
in
inc
test
xchg
repz
mov
dec
lahf
cmp
mov
lea
fbld
movs
push
(bad)
dec
repz
cmp
out
mov
cmp
xor
mov
cmp
xchg
test
inc
pop
sbb
push
mov
cmc
in
call
jnp
jmp
aas
dec
push
(bad)
(bad)
rcl
enter
jnp
pop
out
ret
jns
dec
mov
iret
sub
jnp
dec
sub
in
xchg
jge
adc
mov
dec
push
lea
test
jecxz
push
hlt
in
int
add
add
cmps
pop
mov
adc
pop
pop
mov
mov
pop
or
xor
pop
rcr
push
retf
jmp
mov
jb
movs
std
test
add
call
or
imul
xchg
inc
rcl
and
push
imul
mov
fxch
dec
push
inc
(bad)
jg
(bad)
lods
xor
dec
out
rcl
dec
fistp
(bad)
push
sar
sti
mov
mov
ins
fiadd
mov
pop
mov
out
(bad)
push
xchg
pmullw
sub
inc
fwait
adc
cli
pop
pusha
dec
loop
retf
mov
fwait
test
jecxz
xlat
movs
pusha
add
xlat
jl
(bad)
and
out
jg
mov
out
cmp
movs
xor
mov
jns
ret
and
addr16
add
lods
sbb
inc
out
push
fist
adc
test
cmps
inc
sub
int
repnz
xor
inc
aas
(bad)
push
mov
add
sub
fcmovne
and
mov
adc
inc
push
out
dec
push
repnz
dec
shl
xor
(bad)
(bad)
nop
xchg
dec
test
ds
mov
dec
adc
adc
imul
mov
pop
xor
pop
push
imul
xchg
mov
or
shr
test
sub
aad
inc
in
pop
adc
rol
sbb
mov
in
jmp
inc
dec
jle
mov
dec
sub
sbb
shr
stos
outs
clc
mov
popa
sti
xor
sub
add
or
shr
inc
or
out
push
pop
mov
xor
(bad)
sti
sbb
out
scas
hlt
sub
sti
jb
outs
mov
jmp
(bad)
aad
fnstsw
fimul
jno
lods
jmp
mov
adc
lods
ja
(bad)
std
inc
xor
push
pop
xor
push
mov
mov
sub
or
gs
loope
scas
jecxz
repz
movs
sub
or
aaa
cmp
rol
push
or
gs
dec
cmp
pushf
sub
xchg
jbe
out
mov
cmps
mov
(bad)
repz
test
xchg
addr16
mov
shl
(bad)
inc
adc
xor
xlat
les
(bad)
push
cmps
pop
xchg
inc
ds
mov
jle
arpl
stc
imul
adc
xor
xchg
dec
adc
and
inc
enter
scas
sbb
jmp
mov
xchg
std
xchg
daa
in
or
mov
xor
daa
movs
and
push
pushf
mov
pushf
sar
stc
arpl
adc
jg
out
jne
js
(bad)
cdq
jmp
mov
jp
data16
push
add
jl
sbb
pop
nop
sbb
and
sub
je
inc
sub
daa
mov
mov
xor
inc
inc
test
fstp
xor
movs
das
lods
push
push
sbb
inc
adc
and
out
mov
movs
add
in
dec
mov
rol
gs
dec
cld
les
call
add
das
sbb
clc
lock
or
(bad)
and
xor
call
js
aam
inc
lods
inc
push
mov
lods
mov
dec
test
push
sbb
fsub
pushf
inc
dec
outs
mov
and
stos
stos
test
xlat
and
les
cwde
imul
push
popf
adc
sbb
xchg
push
fdivr
pop
fchs
cmps
xchg
pop
nop
pop
pop
js
fidivr
sub
sbb
sub
fsub
push
cld
mov
shl
pop
ins
retf
jl
rol
sub
in
cs
adc
mov
js
cmp
pmovmskb
add
mov
adc
xchg
int3
iret
scas
out
xchg
inc
lahf
addr16
xchg
into
or
jnp
movs
xchg
or
ja
mov
ret
movs
sub
mov
outs
test
push
push
addr16
push
sahf
loope
mov
dec
jle
(bad)
push
push
adc
retf
pop
(bad)
push
std
scas
mov
push
push
cmc
adc
adc
ins
jno
fucomi
inc
jne
into
or
mov
in
call
dec
adc
mov
mov
out
les
dec
clc
and
inc
and
leave
inc
xchg
in
mov
imul
pop
retf
cmp
int3
lahf
fdiv
cmp
inc
mov
popa
cwde
dec
mov
and
fldenv
and
daa
xor
into
pusha
cmp
and
inc
pop
in
ret
mov
xor
pop
gs
jbe
pop
das
daa
loop
jmp
nop
in
cli
leave
inc
fiadd
lahf
aaa
or
icebp
retf
fadd
pop
fnsave
push
push
or
lods
fidiv
mov
dec
gs
fs
push
movs
scas
repz
test
imul
xchg
jns
pop
jp
gs
mov
cmp
ins
jo
inc
or
or
pop
push
jl
pop
jecxz
ss
lock
mov
scas
in
sbb
pminub
pop
enter
pop
adc
or
loop
pushf
push
lods
xchg
push
imul
leave
adc
ror
out
jle
mov
mov
jecxz
xor
push
mov
sbb
cmps
jmp
ds
icebp
repz
push
popf
jno
xchg
lods
adc
int
retf
cld
aas
or
mov
mov
lods
loopne
and
and
shr
xchg
cmp
jp
data16
inc
ins
xchg
movs
int
sbb
adc
xchg
jecxz
cli
outs
ret
and
jge
xlat
inc
inc
dec
icebp
jmp
sti
or
adc
aam
js
sbb
arpl
scas
dec
mov
inc
xor
push
mov
or
rol
fcmovu
add
stos
xor
jmp
lahf
ret
inc
mov
cmps
(bad)
dec
dec
iret
adc
push
mov
int3
ins
xlat
ds
dec
dec
sahf
ficom
icebp
in
leave
loope
cmp
inc
push
imul
add
push
fsub
test
jo
pop
imul
cmp
push
aam
pop
jns
sub
std
adc
mov
(bad)
jmp
mov
fisub
push
aam
pop
xor
les
sub
call
push
inc
pop
call
or
fisub
mov
fwait
or
fsub
icebp
fstp
retf
aad
push
xchg
pushf
pop
and
dec
ror
pop
mov
dec
pusha
mov
push
cdq
pop
sbb
pushf
fisttp
movs
and
add
xchg
dec
repnz
cmc
xchg
adc
fcmovb
(bad)
sub
pusha
aam
or
(bad)
fisttp
cmp
(bad)
inc
dec
xor
es
test
pop
lds
push
xchg
arpl
(bad)
(bad)
mov
mov
es
fidiv
inc
std
mov
pop
outs
cmp
mov
ins
(bad)
mov
xchg
or
test
jmp
rol
mov
sub
adc
adc
dec
gs
arpl
push
xchg
pop
repnz
adc
dec
add
(bad)
in
adc
xor
cmps
daa
mov
push
jmp
add
push
xor
lods
add
xlat
push
stos
loopne
adc
mov
push
push
mov
mov
nop
repnz
xchg
xchg
jae
sbb
push
(bad)
nop
xchg
mov
jo
push
out
stos
(bad)
xchg
jl
add
adc
into
sahf
ror
mov
js
push
ds
adc
xor
fmul
push
push
mov
jno
pop
xchg
stos
and
jle
pop
adc
xor
pop
mov
pusha
shl
loop
gs
jle
lock
mov
enter
jb
mov
out
arpl
inc
inc
push
cwde
mov
mov
sbb
dec
and
mov
repz
in
jmp
lods
and
jl
xor
xor
(bad)
out
jo
pop
data16
jo
push
jnp
data16
sub
retf
push
inc
push
(bad)
sbb
fisttp
jg
add
jo
mov
mov
hlt
fmul
ror
jmp
scas
adc
movs
xor
(bad)
xchg
retf
leave
mov
push
mov
push
mov
cwde
cli
sbb
sti
adc
dec
push
(bad)
jbe
xchg
popf
std
inc
xchg
das
fdivr
frstor
push
push
add
push
sbb
repz
lahf
(bad)
cli
adc
adc
xchg
jb
jnp
pop
js
out
movs
push
jge
sar
fxch
jo
fucomi
cmp
pop
mov
fs
arpl
outs
fnstenv
mov
shr
idiv
popa
js
int3
mov
dec
inc
jbe
push
or
sbb
xchg
dec
xchg
popa
adc
stos
xchg
xchg
test
popf
ficom
push
cld
ret
push
push
cdq
popf
mov
mov
das
mov
sbb
or
rcr
mov
dec
fbld
xchg
jmp
cmps
adc
pop
sar
enter
(bad)
mov
shr
lea
shl
cmp
mov
inc
push
adc
pop
sbb
bound
inc
sbb
mov
jle
and
scas
cmp
int
push
mov
pop
or
or
mov
pop
aam
ins
and
rcl
xchg
inc
dec
xlat
or
push
sub
test
jo
mov
stos
sbb
mov
call
and
enter
into
push
cmp
xor
into
dec
sub
lods
push
sbb
xchg
js
pop
sbb
cmps
mov
ror
mov
daa
add
cmc
mov
mov
lds
(bad)
mov
cmps
adc
out
xor
cwde
inc
pop
mov
cli
cmp
std
lock
push
jp
push
mov
xchg
mov
je
mov
jmp
fimul
mov
jmp
cld
arpl
cmps
cli
fld
xor
aam
adc
inc
in
jae
pushf
mov
inc
fcmovnbe
adc
dec
mov
add
jp
ins
inc
and
cmp
mov
jns
mov
imul
aaa
adc
push
test
dec
mov
or
and
sub
daa
iret
inc
add
cmp
push
sar
fldcw
dec
xchg
inc
push
test
xor
iret
mov
test
cmp
and
push
loop
fild
fwait
push
mov
leave
xchg
push
stc
jbe
mov
jbe
lods
adc
and
jmp
mov
push
cmp
and
outs
jecxz
dec
out
inc
call
mov
add
sub
xor
and
mov
scas
xor
js
repnz
xchg
mov
retf
or
sahf
ja
pop
fmul
and
paddd
jecxz
or
fcom
je
in
cmp
aam
or
jecxz
jne
(bad)
push
out
sub
jns
mov
movs
push
xor
retf
fild
or
idiv
xchg
cld
jne
in
ret
iret
retf
cmovo
fbld
jg
sub
pop
cmp
and
sub
sub
jle
push
cmps
mov
inc
sti
sbb
test
js
mov
or
(bad)
inc
xor
mul
ret
gs
xlat
shl
lods
mov
sub
xchg
sub
out
shr
xchg
add
add
ficom
lock
mov
cmps
jbe
cmps
pusha
in
dec
jbe
movs
es
push
icebp
dec
pop
mov
xchg
pop
mov
fisub
adc
movs
push
xchg
fisubr
repnz
xlat
test
std
xor
dec
std
icebp
or
dec
loopne
pop
pop
jecxz
xlat
scas
aam
or
aad
cmp
aas
xchg
cmp
je
cmp
sbb
les
mov
pop
(bad)
rcr
es
sbb
push
pop
and
sub
mov
jmp
in
jle
or
mov
je
out
mov
test
cmp
mov
xlat
push
push
add
mov
push
dec
loope
pop
cmp
sbb
in
add
mov
in
std
outs
push
pop
adc
inc
push
cmp
jmp
ret
ds
pop
jns
mov
ret
mov
sbb
jbe
fsubr
(bad)
out
leave
lock
add
or
stos
rcl
gs
test
jg
push
js
mov
adc
lock
adc
mov
clc
mov
adc
retf
les
in
sbb
xchg
xor
js
cmps
mov
adc
cmps
movs
push
gs
jle
jo
sbb
leave
fldcw
add
stos
(bad)
mov
addr16
into
lods
and
jmp
mov
aam
mov
cmp
aaa
scas
mov
mov
jecxz
push
mov
lahf
fdiv
jle
imul
add
aad
adc
mov
jb
mov
pop
enter
jno
cmp
sub
ins
lods
fld
jnp
jmp
aam
loopne
pop
scas
or
lock
jp
fcomi
mov
call
fsubr
test
enter
loop
ds
test
adc
xor
xchg
mov
ja
xchg
not
jle
jl
cmps
mov
pop
mov
add
loope
jle
or
jg
popf
ret
inc
or
xor
pop
xor
and
(bad)
xchg
mov
stos
push
or
mov
dec
and
mov
sub
fld
jb
xor
push
je
jne
sub
test
loope
inc
dec
xchg
les
iret
add
or
loope
das
cmps
adc
ss
add
dec
repnz
push
mov
retf
push
addr16
gs
dec
dec
mov
nop
add
pop
push
daa
cmps
sbb
push
call
loop
adc
mov
jmp
adc
add
jae
xor
rol
scas
int3
andps
ficomp
popf
popf
adc
fild
shl
xor
sub
sub
add
nop
les
arpl
xchg
sbb
sub
ret
inc
cld
nop
dec
cmp
pop
xor
sbb
adc
inc
push
mov
loop
(bad)
inc
inc
es
hlt
movs
push
ret
push
ja
xlat
xchg
pop
(bad)
mov
and
jae
sbb
repz
pop
retf
ins
lahf
fisub
add
es
jp
and
jae
push
aam
mov
dec
push
adc
pop
cmps
je
pop
push
and
je
push
stos
push
adc
mov
adc
xchg
cmp
or
xor
test
sbb
sbb
ficom
nop
icebp
dec
xchg
jo
dec
push
xor
xchg
aas
dec
das
inc
js
loopne
inc
add
sub
cmp
push
and
xchg
ss
or
push
jne
mov
js
hlt
test
xlat
loop
xchg
stos
jbe
push
lock
jb
mov
cwde
(bad)
loopne
mov
in
or
sub
mov
xchg
in
jl
mov
sbb
cmp
dec
imul
inc
call
add
push
test
data16
pop
das
add
jmp
out
jle
mov
frstor
pushf
or
or
stos
lods
sub
gs
adc
adc
jge
je
rcr
sub
xchg
cdq
mov
and
xor
lock
mov
inc
adc
sahf
out
ja
div
call
dec
push
cdq
cli
cld
xchg
(bad)
mov
pop
xchg
mov
(bad)
xchg
cli
pop
jge
(bad)
mov
in
or
pop
xchg
cmp
mov
jns
cmp
hlt
in
test
mov
ja
and
push
lock
lods
add
rcl
mov
xor
rol
mov
mov
aam
ss
mov
xlat
lds
xor
jne
mov
or
cmc
popf
inc
(bad)
mov
push
mov
mov
mov
addr16
fs
mov
cld
cmp
inc
arpl
xchg
aas
retf
loopne
ret
or
stos
adc
popf
add
push
sti
sahf
add
repz
jle
sbb
push
addr16
dec
fsubr
js
cld
in
fsub
into
push
in
and
xchg
jno
or
mov
es
mov
arpl
lods
add
ins
jle
bound
rcr
das
xchg
inc
adc
mov
imul
pop
icebp
fmul
shl
adc
push
mov
sbb
imul
xor
mov
ret
pop
pusha
call
sbb
jg
ins
sahf
jmp
pop
mov
xchg
sub
int
int3
test
pop
add
xchg
xchg
out
pop
mov
fisttp
xor
mov
mov
sub
lea
cld
pushf
neg
je
loop
push
test
jae
cld
add
mov
loope
and
cli
dec
scas
dec
fidivr
addr16
sub
push
jg
mov
sub
cdq
pop
fcmovne
mov
push
aam
push
push
stos
test
shl
mov
push
mov
in
fld
aas
sub
imul
inc
ins
mov
inc
test
xor
cmp
repz
add
sar
xchg
js
fcomp
mov
sahf
sbb
lahf
pop
xchg
loopne
sub
jecxz
dec
cmps
ins
retf
push
pop
cmps
and
test
mov
(bad)
jne
xchg
(bad)
bound
jno
mov
cmp
inc
mov
jb
cmp
data16
call
cmp
arpl
push
int
push
lock
int3
cmc
fcmovnu
mov
jns
(bad)
jmp
imul
bound
(bad)
cli
mov
or
data16
fnsave
xor
fdivr
and
retf
push
mov
jle
mov
aas
inc
push
xlat
sahf
push
dec
xor
call
jl
mov
mov
gs
dec
rcl
and
and
es
mov
sbb
adc
inc
nop
bound
cmp
pop
xchg
mov
cdq
pop
xlat
ja
mov
inc
cmc
or
ss
xor
movs
popf
push
pusha
inc
cwde
or
enter
test
sub
sub
rcr
ret
mov
scas
enter
dec
sub
ins
xchg
ja
fcomp
test
xor
mov
adc
jecxz
lahf
inc
shr
and
icebp
(bad)
sub
adc
mov
or
xchg
mov
repnz
pop
ret
lods
and
fnstenv
cmps
ss
push
dec
scas
lods
push
push
mov
cmp
push
push
mov
fwait
lods
cmp
add
mov
les
in
das
aas
(bad)
nop
cwde
les
jo
test
inc
push
xchg
leave
cdq
inc
xchg
dec
jmp
gs
and
sub
sub
daa
inc
mov
rcl
fistp
xor
je
sbb
popa
ror
lock
pusha
and
pusha
int
push
adc
sub
sub
cmp
dec
in
cmp
sub
nop
inc
sar
jno
out
and
mov
outs
jno
pop
sub
(bad)
cmps
mov
mov
movs
add
lods
fs
cmp
jle
xor
fcomip
out
aad
sbb
loope
adc
retf
jle
cs
mov
fiadd
sbb
add
es
into
repz
les
int3
pop
imul
movs
cli
das
pop
sub
and
add
ret
jnp
or
pop
cmps
or
xchg
nop
rcr
add
sti
sti
ins
pop
sub
in
adc
jmp
cwde
xchg
sbb
shl
test
lock
int3
xchg
push
out
jne
mov
sub
mov
cmc
xor
ret
shl
fisub
mov
fld
cmp
jmp
bound
icebp
fisub
rcr
jns
mov
mov
adc
mov
stc
or
mov
or
inc
push
mov
pop
xchg
retf
dec
push
shl
call
ds
dec
adc
mov
leave
mov
jae
loopne
jb
sahf
test
(bad)
cld
fstp
pushf
pop
in
dec
fisttp
or
sub
cmp
lds
mov
shl
ret
mov
mov
inc
xchg
adc
stos
xchg
adc
jg
imul
shl
sbb
sub
or
aaa
outs
hlt
cmc
adc
or
pop
fsubp
(bad)
lea
in
cli
mov
xor
adc
mov
inc
and
(bad)
ss
sub
jo
or
lods
int
popa
(bad)
dec
lods
cld
(bad)
xchg
mov
sbb
movs
and
or
mov
rcr
cmp
dec
stc
stc
iret
push
dec
jne
leave
sbb
in
sub
fistp
jge
in
mov
repnz
cwde
cmp
loop
retf
cmp
inc
ror
and
(bad)
pop
sub
imul
cmps
mov
test
inc
rol
sbb
pop
call
jp
ins
mov
xchg
dec
push
ja
es
mov
add
mov
je
idiv
sub
add
lahf
movs
push
push
outs
adc
inc
and
popf
mov
imul
enter
or
ins
pop
out
mov
cmps
or
retf
push
adc
mov
jb
sub
(bad)
mov
dec
sub
mov
jae
push
jle
inc
or
ins
ja
fist
shr
mov
inc
retf
mov
add
iret
mov
call
mov
in
push
pop
pusha
xchg
int
pusha
lock
ins
or
and
mov
aas
jge
das
fild
movs
(bad)
rcr
jp
imul
test
out
xor
inc
out
sbb
aaa
sbb
fs
call
mov
push
sbb
inc
xchg
dec
dec
xchg
cs
xchg
aas
faddp
fs
and
sub
int3
sbb
cmp
cmp
push
mov
inc
(bad)
adc
mov
ins
jmp
push
fdivr
call
leave
jns
or
inc
mov
cmc
xlat
sub
sub
jb
dec
mov
(bad)
icebp
imul
call
std
mov
out
or
stos
xlat
xor
std
xchg
cmps
xor
ds
in
adc
jmp
pop
pusha
jbe
inc
js
js
or
imul
dec
stos
pop
sbb
or
fmul
pusha
adc
jmp
cmc
push
stos
mov
jp
shr
(bad)
ror
lahf
in
ds
push
adc
xor
add
ret
(bad)
movs
and
sahf
inc
inc
push
in
pop
out
arpl
mov
bound
jmp
gs
add
(bad)
shl
repnz
xchg
ret
pop
mov
sub
push
aaa
popf
js
cdq
sub
mov
(bad)
stc
push
std
jp
push
test
dec
sbb
das
in
popa
pop
dec
xchg
out
pop
xchg
call
cdq
jo
pop
mov
popf
imul
sub
mov
mov
(bad)
in
sub
rol
inc
je
mov
lods
and
jmp
retf
jmp
pop
mov
cmp
mov
rol
or
sbb
fld
xchg
lods
push
sbb
les
jns
lods
cmp
or
xchg
imul
mov
inc
jb
(bad)
push
jae
mov
dec
mov
mov
xchg
dec
adc
imul
movs
jge
(bad)
cld
mov
(bad)
scas
(bad)
xor
dec
aad
inc
ret
and
sbb
xchg
call
jno
in
scas
test
mov
mov
pop
pop
lods
or
repz
push
cs
stos
dec
mov
xchg
and
mov
pop
fnstsw
push
pushf
bound
adc
(bad)
outs
mov
inc
sub
add
and
loop
clc
fmul
hlt
std
pop
or
pop
pop
mov
std
into
jl
lods
not
xchg
add
jne
(bad)
sti
or
cmp
clc
add
jb
shl
dec
mov
in
xlat
lods
fcmovnbe
pop
mov
loopne
adc
je
add
xchg
dec
and
cli
outs
push
dec
xchg
(bad)
push
pop
push
outs
jne
push
loop
push
and
xchg
add
outs
xor
or
adc
mov
dec
mov
cli
sbb
sub
out
lds
cmps
pop
stos
or
out
jno
jae
btr
jmp
jle
inc
pop
pop
rcr
jne
mov
fwait
mov
ja
outs
sbb
lods
das
pop
pushw
add
mov
sbb
inc
addr16
add
pop
sbb
pop
sub
aas
call
xchg
sub
dec
jae
mov
mov
mov
and
fiadd
push
mov
add
sub
es
inc
add
int
(bad)
hlt
neg
mov
mov
push
jo
das
retf
lea
sub
mov
out
xor
inc
mov
adc
ins
fistp
ds
mov
mov
mov
add
cs
add
dec
popa
addr16
fisub
aaa
mov
jmp
cld
adc
sub
jne
dec
ins
in
outs
pushf
cmc
add
leave
push
mov
push
in
(bad)
or
inc
xchg
xchg
out
add
jne
addr16
xchg
dec
sub
sahf
inc
and
ror
push
hlt
or
repz
es
cmp
dec
movs
stc
sub
jmp
movs
ins
aad
test
cmp
or
or
shr
push
sbb
int3
test
inc
add
jns
ins
sti
addr16
mov
add
dec
test
pop
ret
pop
push
jmp
les
add
mov
mov
cli
loope
mov
pop
inc
nop
emms
es
ds
(bad)
fsincos
out
ret
mov
shl
push
fdivr
sub
pop
scas
xchg
(bad)
in
mov
fldcw
mov
inc
pop
sub
aam
inc
mov
sbb
xor
xor
pop
sar
push
mov
dec
cs
jbe
mov
rol
in
add
movs
shr
stos
in
xchg
xchg
fst
fimul
loope
pop
xor
ja
cmps
push
paddusb
inc
add
pusha
daa
inc
aad
fistp
call
fimul
push
jne
sbb
rcl
inc
loopne
fldenv
sub
mov
mov
cmp
adc
xchg
dec
sub
adc
out
and
shl
xor
push
es
std
mov
mov
shr
xchg
adc
inc
iret
nop
pop
adc
jne
arpl
ss
cmp
sbb
mov
cld
retf
jb
test
mov
or
pop
stos
test
out
sbb
in
cmp
ins
mov
enter
xchg
stc
push
test
std
dec
gs
iret
mov
pop
jg
sbb
jecxz
mov
cmp
mov
sub
test
xor
outs
dec
push
cmp
and
dec
outs
push
push
or
xchg
mov
pop
jge
(bad)
ficom
dec
inc
out
(bad)
mov
push
push
mov
(bad)
pop
sbb
outs
push
ss
leave
ret
or
fimul
mov
jae
adc
pop
aas
ja
mov
scas
mov
inc
or
(bad)
mov
inc
adc
mov
xlat
ficom
lods
cmp
std
cld
rcl
inc
jo
mov
inc
cwde
into
mov
jo
js
scas
retf
xor
aad
sub
and
lods
int
sbb
clc
inc
or
dec
ins
movs
xor
retf
mov
daa
or
xor
cdq
fimul
lea
xchg
jae
aam
inc
mov
mov
jno
es
je
lods
aad
or
push
inc
ret
repnz
push
mov
stos
lods
sbb
imul
sbb
jmp
sub
ror
ins
xor
leave
(bad)
(bad)
movs
sbb
add
push
sub
cmp
xchg
mov
adc
rcr
sub
inc
in
add
fstp
ret
cmp
sbb
adc
dec
mov
int3
lods
imul
or
rcr
jge
scas
mov
neg
inc
dec
and
mov
mov
or
mov
cdq
das
aas
cmp
add
dec
(bad)
stos
movs
rcr
pop
xchg
or
and
test
cmps
in
rol
not
(bad)
pop
(bad)
lahf
xchg
sub
aas
nop
pop
adc
in
mov
xchg
add
je
pop
push
or
sar
xor
jnp
pop
dec
scas
cmp
fsubp
add
cmp
add
add
in
push
mov
mov
mov
movs
mov
mov
adc
sub
and
inc
mov
mov
(bad)
fmul
fdiv
jmp
fwait
mov
cwde
hlt
sub
push
ror
in
aaa
mov
mov
ins
inc
mov
push
xchg
loop
shr
xchg
imul
sub
jns
std
stc
stos
xchg
or
out
outs
retf
sbb
loop
cmp
int3
push
adc
fist
jnp
js
xchg
scas
out
inc
pop
int3
in
leave
xor
adc
or
repnz
into
push
(bad)
pop
js
imul
lds
nop
ss
imul
scas
repnz
xchg
int
and
adc
xor
arpl
and
mov
outs
xor
sub
(bad)
and
adc
and
cmp
out
push
loope
fcomp
sub
cmps
and
mov
dec
movs
lds
pop
add
sbb
aam
sub
push
je
daa
jne
je
pop
fs
add
cmp
aaa
mov
sti
leave
cwde
inc
jle
cmp
in
cli
and
lock
xor
cdq
mov
jp
hlt
inc
mov
and
es
adc
mov
js
mov
sub
inc
xor
sbb
jae
es
or
rol
add
je
test
ja
inc
mov
loopne
gs
jmp
sub
pop
call
xchg
loope
ins
inc
rcr
and
mov
(bad)
mov
or
mov
fwait
push
and
int
cmp
aad
adc
mov
jl
pusha
(bad)
mov
(bad)
pop
mov
stos
jne
div
cwde
jae
aam
xchg
test
imul
xlat
loop
test
imul
jg
adc
std
cmp
scas
ja
cdq
sub
cmp
and
mov
in
data16
dec
xor
pop
mov
mov
ins
push
fild
sar
push
mov
sub
iret
sbb
mov
pop
mov
test
into
mov
int
sub
out
icebp
fstp
pop
pop
inc
sbb
stos
out
jmp
in
xchg
sbb
scas
xchg
sub
rcl
or
popf
movs
mov
inc
xor
add
scas
mov
pop
push
into
mov
gs
push
xor
mov
addr16
jnp
xor
cdq
pusha
ret
leave
pop
mov
cmp
or
fist
inc
in
pop
scas
gs
inc
lds
cs
pop
movs
int
xor
jae
or
nop
xchg
sub
mov
aas
pop
push
mov
cwde
aas
adc
mov
rcr
loope
inc
mov
jle
out
syscall
retf
mov
ins
ins
les
out
push
(bad)
mov
icebp
sub
sub
lds
xor
xor
(bad)
adc
pop
jp
arpl
add
leave
dec
sbb
retf
mov
cdq
mov
test
out
xchg
jg
or
lahf
push
cmp
bound
cmp
ds
mov
pop
in
aaa
jae
loope
shl
sub
or
pusha
dec
push
lahf
fs
jbe
mov
and
lods
dec
(bad)
mov
sbb
pop
push
xchg
cmp
mov
neg
push
or
out
pop
lock
iret
(bad)
arpl
push
movs
call
inc
cmp
xchg
xor
fs
jb
ins
ror
adc
ja
inc
fs
test
xor
or
in
clc
pushf
cmps
pop
push
(bad)
mov
sbb
and
out
(bad)
cmp
movlps
mul
and
push
jecxz
push
mov
js
xchg
sbb
xor
xor
cmc
stos
bound
cdq
xchg
and
div
pusha
js
adc
clc
mov
push
pop
mov
sahf
cmc
xchg
inc
add
pushf
out
aas
mov
test
sbb
inc
pop
idiv
adc
pusha
mov
sub
inc
shl
inc
(bad)
sti
bound
xchg
mov
lahf
popf
cli
sbb
ins
shl
sti
sbb
mov
fisttp
vpsrlw
sub
mov
pop
adc
cmp
fidivr
pushf
push
icebp
dec
lods
dec
jecxz
or
test
mov
test
(bad)
lds
xor
pop
sub
inc
or
cmc
pop
xor
sub
(bad)
(bad)
push
mov
jmp
repz
jae
dec
adc
es
inc
sbb
scas
addr16
cld
sbb
xchg
or
or
add
pop
aaa
out
xor
test
sbb
mov
xor
mov
adc
sar
les
data16
lods
push
add
add
jmp
fidiv
in
and
mov
cmps
push
in
inc
pop
sbb
shl
fstp
fiadd
retf
stos
cmp
adc
(bad)
xchg
lahf
adc
ds
leave
xor
cmp
aaa
push
add
imul
xchg
call
or
test
xor
cmps
call
loop
dec
in
das
fnstcw
mov
das
jmp
mov
mov
xchg
pop
rcr
fbstp
mov
aad
dec
out
jmp
lods
jle
xchg
xor
pop
movs
hlt
mov
pop
cmc
xor
sbb
inc
and
mov
adc
mov
ins
push
aad
and
jns
data16
cmp
mov
popf
movs
ins
jmp
pop
add
hlt
push
lods
add
fidivr
add
(bad)
pop
or
outs
out
xor
nop
cld
daa
pop
ror
movs
push
jne
cmp
and
ins
adc
in
scas
sub
ja
push
cdq
cmps
dec
inc
shl
cs
mov
imul
mov
cwde
add
jmp
imul
repz
adc
mov
std
adc
mov
mov
clc
and
data16
and
inc
sti
(bad)
mov
je
stos
cwde
sub
pop
sub
xor
jge
std
les
sub
sub
mov
add
mov
fisubr
and
popf
cmp
pop
sbb
jg
jmp
adc
and
dec
mov
sar
iret
mov
jl
fs
sbb
iret
es
lods
stc
mov
xchg
lar
dec
ins
and
imul
add
repz
jb
outs
sub
nop
push
xchg
pop
imul
mov
pop
mov
pop
and
cmps
scas
add
sub
fld
lock
outs
push
outs
mov
(bad)
int
bnd
movs
and
test
ficomp
inc
(bad)
es
xchg
xchg
pop
push
rcl
mov
adc
add
gs
xchg
mov
xlat
fwait
cmp
lea
push
sub
xor
xor
imul
fucom
lds
enter
or
dec
jo
inc
scas
or
dec
fidiv
mov
push
lock
push
movs
add
les
out
sahf
and
stc
loopne
xor
(bad)
sub
mov
jp
inc
call
push
push
push
outs
out
inc
and
mov
sar
jae
movs
bound
xchg
mov
fsub
out
out
sar
addr16
pop
ret
sbb
or
adc
adc
cmc
movs
retf
xchg
push
in
into
retf
mov
mov
jns
lea
repz
jne
mov
fs
les
inc
scas
int
and
shl
cld
mov
push
add
xor
cdq
std
dec
call
or
je
imul
xchg
fimul
fcmovnbe
adc
stos
pop
xor
xchg
pop
add
xchg
push
stos
xor
dec
pop
push
shr
xor
shr
mov
mov
cmp
test
aam
sti
add
xor
add
xchg
or
ins
fs
in
dec
cmp
lods
scas
and
mov
cmp
bnd
mov
stc
scas
adc
push
mov
xlat
mov
sahf
scas
cmp
cmp
pop
loope
test
jmp
mov
mov
and
shr
movs
dec
mov
mov
loop
pop
mov
sbb
pop
ja
and
and
inc
adc
icebp
jne
mov
pop
fidivr
jle
mov
fwait
enter
repnz
sahf
push
test
bound
stos
mov
xchg
lea
stos
jl
xchg
xchg
addr16
stc
ficom
jbe
leave
dec
cli
leave
jae
pusha
jmp
xchg
ret
(bad)
add
jg
imul
mov
xchg
sub
ss
pop
es
sub
sbb
dec
jg
and
xchg
cmp
mov
lods
sbb
enter
sahf
outs
xchg
and
jmp
xor
jmp
loope
mov
cs
mov
xchg
in
stc
cwde
gs
mov
push
jl
fs
adc
ret
add
sahf
retf
push
lock
ffree
sub
mov
pop
fcom
sub
xor
je
mov
pop
outs
mov
inc
jmp
int3
adc
enter
(bad)
aaa
xchg
add
lds
xchg
in
inc
dec
xchg
hlt
or
inc
mov
stos
ins
aam
sbb
and
and
dec
xchg
loope
jb
cmp
mov
cmp
repnz
mov
adc
xlat
mov
or
mov
push
xor
add
dec
ficomp
jno
in
mov
and
(bad)
inc
or
lock
cwde
lock
loope
idiv
push
mov
inc
inc
icebp
(bad)
mov
add
out
dec
(bad)
mov
lods
fs
shl
jb
and
ret
cmp
leave
jno
cwde
jbe
popa
popf
push
lea
push
dec
int
call
std
mov
das
ins
icebp
sub
mov
and
gs
jecxz
(bad)
call
dec
sub
jg
jle
or
pop
mov
sbb
mov
jo
mul
sub
je
and
aaa
lods
ins
lods
arpl
dec
pop
adc
and
mov
and
pop
cmp
jecxz
iret
jmp
mov
imul
sbb
sub
or
mov
ja
mov
setnp
fwait
cwde
in
mov
jno
add
cdq
jb
mov
out
pop
or
das
dec
sbb
fadd
(bad)
mov
xchg
(bad)
and
shl
aad
jne
clc
push
das
or
or
add
repz
js
scas
enter
sbb
mov
xlat
add
cmp
xchg
rcr
aad
adc
xchg
arpl
into
rol
and
loop
mov
jg
jmp
pop
and
call
mov
pop
jg
dec
daa
fwait
sub
or
int3
jns
fucomp
jg
mov
dec
cdq
cmc
mov
add
leave
mov
test
push
pusha
add
inc
ins
push
jmp
sbb
cmp
retf
cmp
es
mov
inc
mov
hlt
mov
fadd
stos
jg
push
sub
mov
jp
fistp
addr16
fist
or
inc
fsubr
fild
xlat
mov
(bad)
loopne
jo
sub
jmp
or
push
pop
ins
xchg
xor
mov
cld
sub
test
fs
nop
fbld
jl
xor
mov
xlat
outs
gs
out
lods
add
mov
int3
xor
(bad)
out
mov
mov
xor
adc
je
popa
xor
dec
adc
pop
or
adc
hlt
fisttp
inc
pop
aam
mov
adc
loop
jg
test
(bad)
(bad)
pop
inc
lods
lods
shl
mov
hlt
fwait
repz
lods
jmp
retf
(bad)
fisubr
cmp
add
add
out
mov
push
pusha
adc
push
call
cmp
push
aaa
neg
dec
or
mov
mov
movs
mov
in
mov
cmps
cmp
ds
in
dec
sub
jecxz
mov
das
mov
cmc
jae
nop
xchg
jmp
daa
mov
std
pop
movs
lds
addr16
stos
cwde
enter
(bad)
dec
outs
pop
jle
xor
xor
adc
inc
movs
xchg
sahf
lods
mov
mov
nop
sbb
and
add
repz
jno
lea
mov
jno
jnp
xchg
movs
shl
xor
pop
jp
cmp
out
and
xchg
lock
pop
push
push
or
mov
mov
mov
jbe
push
(bad)
mov
mov
dec
cdq
inc
cmp
mov
ret
es
xchg
jp
int
outs
gs
push
sahf
cmp
out
xlat
and
(bad)
add
imul
(bad)
mov
pop
scas
xor
push
lahf
xchg
pop
mov
pop
ins
push
sti
sub
xor
jecxz
cmp
mov
and
movs
icebp
lock
cdq
aaa
aam
or
mov
inc
loopne
imul
dec
outs
xor
je
push
mov
mov
in
cmp
bound
jle
mov
adc
(bad)
inc
imul
sbb
fwait
loope
outs
ror
push
mov
sbb
nop
sub
cmp
mov
cmp
jmp
in
inc
fld
sti
cwde
cmp
icebp
push
or
call
cmp
ret
test
addr16
mov
and
adc
lds
adc
pop
es
push
and
mov
sub
xchg
retf
inc
jbe
in
cld
fisubr
not
gs
dec
cmps
fild
push
(bad)
fld
push
fcomp
js
scas
fxam
(bad)
sub
jmp
gs
mov
mov
nop
lock
inc
and
and
std
pop
sbb
cmps
add
cmc
xchg
lea
das
retf
addr16
mov
popf
inc
daa
xchg
sbb
pop
dec
outs
out
int
xlat
test
clc
das
jns
xchg
test
add
out
mov
mov
xor
test
cdq
mov
fidivr
mov
inc
xchg
mov
imul
int
mov
repz
mul
mov
jno
iret
jo
nop
xlat
xchg
loopne
fwait
pop
pop
jmp
jbe
pop
fsubr
jge
(bad)
repz
pop
or
stc
jmp
push
into
jecxz
add
scas
add
xchg
jle
xchg
rcl
sub
mov
loopne
sbb
das
mov
xchg
and
fsub
sub
cmp
mov
and
jb
inc
mov
movs
int
or
(bad)
jno
out
mov
(bad)
add
dec
xor
push
lea
mov
cmp
movs
dec
jo
dec
jno
push
xor
mov
mov
sbb
xor
imul
aam
loopne
inc
mov
and
sub
mov
mov
pop
mov
(bad)
out
mov
enter
cmc
sub
pusha
in
add
lods
in
lahf
stc
aas
pusha
rcl
mov
aas
xor
stc
jns
xor
jo
ja
mov
out
call
mov
in
inc
fs
xor
mov
xor
mov
jmp
push
ss
icebp
dec
popa
ror
sahf
jnp
inc
lods
xchg
sti
cmps
lahf
out
cdq
xchg
cmp
and
rcr
fxam
sub
pmuludq
add
inc
dec
ja
and
mov
xchg
inc
add
cmp
add
push
movs
pop
cmp
mov
mov
call
lahf
int
gs
add
pop
mov
sbb
xchg
(bad)
mov
movs
push
xchg
mov
mov
retf
lock
(bad)
cmp
sbb
mov
push
cli
jns
mov
test
(bad)
inc
sub
movs
retf
xchg
pop
jg
repz
push
jmp
sbb
pop
push
ret
dec
lods
mov
cmp
jmp
in
push
mov
addr16
xchg
cmp
mov
jmp
add
push
pop
or
cli
movs
cmps
fst
add
dec
inc
push
dec
jg
popa
lock
adc
test
inc
and
pop
lods
out
stc
neg
and
mov
stc
jne
leave
push
cmc
call
div
pop
push
pop
cmp
lods
stos
and
cmps
call
sbb
push
dec
in
jmp
and
retf
cmps
mov
jb
sbb
not
test
dec
std
sahf
add
sbb
push
or
pushf
dec
cld
xchg
xor
retf
jge
bswap
mov
cmps
or
nop
test
int3
and
push
jmp
in
pop
ss
inc
mov
pusha
sub
sbb
loopne
cmp
scas
pop
jbe
inc
or
mov
add
out
sbb
xchg
hlt
je
in
cmp
fnstcw
or
rcl
test
dec
or
jo
retf
pop
xchg
add
dec
xchg
(bad)
pop
loop
cmp
js
and
aaa
stos
push
cmp
adc
sbb
or
add
test
dec
adc
xchg
mov
icebp
push
or
ja
jnp
sbb
in
sbb
aas
jmp
pusha
adc
sbb
jae
mov
fwait
loope
stos
aam
lds
data16
mov
cmc
dec
jg
or
pop
sahf
test
out
mov
lea
jmp
rol
loop
push
stc
push
pop
adc
xlat
push
mov
jmp
bound
push
aaa
sahf
fdivr
pop
scas
enter
jae
fisub
popa
inc
inc
cmps
jmp
cmps
mov
gs
call
fdiv
or
pand
aad
mov
mov
aad
or
push
mov
lods
jp
in
retf
xor
leave
addr16
jle
pop
neg
adc
sbb
mov
or
mov
mov
pop
div
hlt
aam
callw
loope
adc
xor
pop
pop
pop
js
retf
mov
inc
jl
lods
pushf
(bad)
fnstsw
adc
bound
or
(bad)
mov
push
imul
cmp
(bad)
mov
xchg
aad
cmp
fstp
jmp
lods
mov
mov
xor
into
cli
std
sbb
pusha
ss
inc
lahf
add
mov
cmps
push
inc
cmc
pop
ja
repnz
lods
inc
cmps
cmps
dec
xor
lock
popa
mov
out
fistp
in
out
fs
sbb
xor
and
xchg
inc
mov
or
addr16
scas
mov
bound
xor
lods
in
jbe
popf
les
sbb
xor
rcl
loop
xchg
pop
mov
xchg
xor
movs
push
retf
imul
cld
fdiv
lahf
nop
push
pop
in
aad
clc
xor
mov
cmps
dec
(bad)
out
pop
es
dec
ficomp
imul
mov
sahf
jnp
test
cmovg
pop
xor
in
inc
mov
adc
push
fidiv
stos
sbb
arpl
jg
mov
xchg
sahf
out
gs
fild
cmc
test
mov
fcomp
ins
stos
sbb
dec
ret
push
push
in
into
imul
(bad)
das
push
mov
mov
scas
je
sti
ins
cmp
dec
nop
adc
pop
or
int
mov
push
imul
clc
or
sbb
mov
jmp
ds
cmp
or
outs
mov
jae
or
mov
and
fistp
push
push
scas
inc
add
mov
test
xor
sbb
mov
les
clc
dec
rcl
xchg
dec
and
nop
not
sbb
into
imul
xor
jmp
pop
cmps
xor
pop
clc
add
jg
adc
push
pop
fstp
fisub
retf
pop
icebp
fist
jb
or
xchg
xor
das
inc
ins
leave
push
pop
ins
mov
inc
xchg
sbb
cld
fwait
lea
add
jecxz
jnp
add
sub
mov
scas
pusha
mov
mov
mul
sbb
push
cmc
je
mov
bnd
shl
xor
sub
arpl
xor
cmps
mov
out
pop
repz
pop
dec
dec
add
cld
sub
cdq
mov
jne
cmp
xor
mov
shl
js
xor
ins
les
rcr
adc
ins
inc
pop
sub
arpl
loopne
pop
clc
(bad)
xor
gs
popf
add
mov
mov
add
push
gs
ins
push
les
jecxz
enter
mov
outs
(bad)
jl
xchg
pop
jmp
test
cmc
ins
test
or
stc
out
mov
or
jmp
pop
mov
leave
mov
in
imul
bnd
arpl
cmp
(bad)
cmp
xchg
loope
inc
cwde
push
test
xchg
dec
fwait
leave
cmps
mov
jge
mov
sub
fst
sub
call
pop
inc
sub
inc
das
inc
test
jg
fisubr
icebp
rol
sub
inc
cmp
xchg
add
and
jl
mov
push
adc
adc
push
fwait
xor
nop
scas
mov
xor
out
push
pop
std
inc
mov
out
fimul
mov
aaa
pop
inc
ret
scas
icebp
sbb
(bad)
or
xchg
dec
cli
mov
mov
mov
jl
pop
xor
(bad)
xor
sbb
aas
pop
sbb
xor
jno
push
jne
popa
push
sti
je
or
dec
xlat
jb
add
shr
movs
fisttp
ja
pusha
mov
dec
popf
(bad)
not
idiv
js
(bad)
push
scas
(bad)
cli
shl
mov
iret
lods
jle
mov
leave
fadd
jbe
js
movs
adc
ret
cmps
out
or
and
mov
dec
mov
repnz
outs
and
stos
push
shl
mov
cmp
dec
cdq
inc
mov
aam
mul
sbb
dec
push
fwait
mov
and
std
dec
xchg
xchg
or
mov
ins
push
jp
cmp
mul
cmp
sub
xchg
mov
sbb
sahf
jbe
outs
sub
mov
or
adc
scas
jmp
mov
retf
mov
bound
int
sub
lock
jae
test
mov
shl
aam
pop
gs
test
jecxz
js
scas
push
test
call
movs
add
dec
adc
mov
dec
popf
fsub
pop
lea
out
fdiv
repnz
mov
jnp
push
xchg
cmps
push
push
sub
aad
js
inc
leave
add
mov
fucomi
rcl
and
mov
cwde
sbb
jmp
xor
xchg
sti
sahf
daa
test
test
lahf
inc
jae
mov
or
movs
cs
not
push
bnd
inc
cli
add
ins
out
cmp
scas
sbb
fstp
fs
pop
xor
leave
call
mov
dec
lahf
fsub
mov
inc
imul
es
add
or
dec
aas
cmp
daa
retf
xchg
mov
rcl
mov
call
or
push
in
retf
lea
xchg
pop
inc
push
xlat
cli
movs
push
dec
dec
jmp
hlt
ja
into
ror
loop
and
and
dec
pop
sub
xor
mov
or
mov
sub
and
icebp
jle
sub
movs
push
fdivr
rcl
imul
sub
dec
ja
rol
(bad)
outs
out
imul
inc
inc
jl
hlt
jmp
mov
jecxz
adc
jmp
popa
pusha
aaa
xor
or
push
scas
and
jo
das
sub
xor
retf
call
(bad)
push
xchg
dec
cmps
enter
nop
and
mov
iret
aad
mov
xchg
retf
adc
in
test
push
sub
and
loope
jb
ds
xor
mov
outs
dec
mov
shl
mov
arpl
data16
push
(bad)
(bad)
pushf
dec
pop
pusha
lea
fnstenv
lods
jmp
adc
stos
enter
fimul
mov
sub
addr16
out
daa
xchg
mov
or
mov
jp
mov
pop
dec
push
enter
jmp
std
jle
xchg
inc
cmp
cmp
sub
push
jle
or
popa
call
mov
sub
shl
cld
popa
jns
in
sub
leave
imul
stc
outs
loope
aad
jb
loop
or
dec
lock
pop
out
cmps
call
inc
jp
or
jle
js
fcmovu
addr16
icebp
cli
push
cs
cli
inc
imul
sub
ret
je
sbb
xor
imul
lods
ds
cmps
pushf
cld
jle
fbstp
or
mov
cwde
movs
pop
out
xor
movs
mov
mov
and
dec
pop
sub
jge
xor
loope
call
mov
mov
mov
cmp
test
xchg
mov
dec
xor
neg
icebp
xor
xor
(bad)
sub
bound
xchg
dec
sahf
add
stos
mov
ins
xor
inc
stos
cmp
fisubr
fldenv
outs
inc
clc
test
inc
mov
and
sbb
inc
mov
hlt
mov
sbb
jae
mov
jns
fimul
pop
out
shr
ret
push
jne
sti
jl
and
outs
cmp
push
out
adc
sbb
ss
push
into
jg
cmps
call
stc
aam
or
push
hlt
into
xor
imul
jp
lock
mov
mov
lock
and
scas
add
sub
xchg
sbb
repnz
(bad)
daa
pop
adc
cmp
jnp
stos
inc
dec
cmc
lods
stc
int3
jle
cmp
test
add
pushf
mov
jge
push
stc
fst
sbb
sub
aas
shr
repnz
enter
dec
mov
jne
or
mov
xchg
and
mov
rcl
rcr
cmp
push
mov
scas
(bad)
push
sbb
cmps
repz
dec
mov
loop
sbb
sub
mov
mov
repz
xchg
in
movs
jecxz
xchg
stos
xor
add
sub
fwait
or
xchg
sbb
cld
push
pop
push
mov
sbb
push
inc
mov
dec
mov
and
ins
popf
std
xchg
push
call
xchg
aas
icebp
add
push
in
loop
add
jmp
sub
test
xchg
mov
enter
clc
imul
or
lock
sti
jnp
cmp
(bad)
rcl
sub
addr16
add
(bad)
mov
jo
pop
fsub
ret
ficom
or
mov
push
fsub
daa
movs
mov
sub
stc
push
xor
jle
dec
cmp
lea
lahf
mov
jb
mov
sbb
sbb
cmp
dec
out
jg
mov
addr16
mov
adc
in
or
rol
mov
enter
sbb
sbb
push
mov
mov
push
add
push
fisubr
hlt
add
ins
dec
(bad)
cs
mov
or
sub
icebp
popa
aas
not
or
xor
mov
adc
and
daa
ficom
mov
call
jge
mov
cli
rol
push
sub
xor
push
rol
fsub
aad
loop
xchg
inc
jno
in
sar
arpl
mov
fld
cwde
lods
es
ja
(bad)
mov
pop
dec
sub
mov
mov
xchg
or
loopne
std
push
aad
psubsw
cwde
mov
inc
fs
outs
sti
or
jns
pop
js
sub
aaa
cld
mov
ficom
fsubr
sub
mov
inc
dec
shl
xor
retf
pop
sub
rol
scas
ret
jecxz
and
xchg
mov
stos
pop
icebp
aad
push
imul
mov
fcomp
jg
ss
ficomp
jmp
in
adc
clc
jno
jmp
dec
pushf
push
and
adc
cmp
(bad)
stc
clc
ins
ficomp
sub
xlat
push
xchg
xor
sbb
test
int
loope
cmp
cmp
xor
adc
clc
jp
in
jb
dec
ret
mov
mov
pop
loope
sub
xor
mov
movs
or
rcl
push
jb
cwde
pop
mov
mov
adc
sar
jae
inc
mov
add
sbb
ja
or
call
jne
mov
data16
inc
jnp
je
icebp
es
inc
cwde
test
sahf
or
adc
es
jg
cmc
pop
jecxz
push
cdq
inc
sub
inc
sbb
and
mov
shl
add
or
clc
std
retf
retf
hlt
mov
mov
cmp
jle
or
xchg
mov
loop
mov
gs
fcomp
xchg
test
xor
adc
xor
call
shl
xor
stos
test
xor
mov
lods
push
inc
mov
in
movs
rcl
ss
dec
cmps
(bad)
mov
mov
mov
enter
inc
hlt
sub
in
mov
push
pop
xlat
jbe
xchg
sti
jbe
xor
cmc
and
loop
jmp
cmp
pop
xor
jno
mov
scas
add
jbe
mov
mov
fs
stos
sub
inc
leave
ds
mov
imul
mov
mov
(bad)
sbb
sub
xor
cmps
mov
shl
in
enter
cwde
(bad)
call
cwde
mov
hlt
imul
mov
sub
pop
cmp
add
sub
fnsave
rol
cmp
ja
jp
pop
jp
adc
inc
inc
out
(bad)
je
fwait
jle
data16
sbb
pop
ins
push
lods
clc
call
enter
add
or
js
cmps
mov
mov
cmp
push
xor
pop
cmps
mov
out
out
and
dec
dec
pop
or
jp
push
aam
stos
not
xor
cmc
scas
adc
adc
jge
out
sub
movs
cmc
push
das
mov
lods
dec
cwde
lods
xlat
mov
sbb
inc
daa
ret
xchg
adc
xchg
add
mov
fisttp
cmp
(bad)
and
push
out
stos
pop
or
dec
adc
loope
gs
and
lock
aam
or
push
add
je
mov
repnz
imul
rcr
and
pop
inc
cmp
adc
xchg
js
into
jecxz
arpl
cmp
xchg
dec
mov
push
iret
sbb
sub
adc
movs
lock
sahf
adc
stc
int3
sbb
(bad)
cmp
sub
sub
cdq
bound
mov
inc
xchg
pop
sub
imul
pop
adc
aaa
or
iret
push
and
adc
sar
retf
and
xchg
nop
inc
or
mov
push
pop
jge
out
out
ds
pop
cmp
int3
pushf
inc
icebp
adc
dec
pop
stc
pop
repz
cmp
movs
lods
xchg
clc
adc
xor
add
inc
cli
push
jmp
ret
xchg
or
pop
sbb
pop
dec
push
retf
add
shl
outs
stc
ins
push
loop
clc
in
aad
out
sbb
xlat
adc
sbb
cs
gs
ins
gs
push
(bad)
jbe
push
jp
(bad)
les
jo
fwait
in
xchg
mov
mov
inc
jmp
pop
mov
mov
ja
lea
mov
repnz
ss
xchg
mov
mov
cdq
es
adc
out
dec
js
mov
lock
fcom
int3
push
cmp
mov
dec
fucom
xchg
pop
rcr
pushf
pop
xor
(bad)
or
sar
push
jne
sub
adc
in
ret
mov
adc
in
sub
loop
jne
or
pop
sar
xlat
adc
mov
sbb
cmp
xor
inc
fmul
mov
out
es
mov
mov
cmp
or
xchg
adc
adc
push
add
hlt
mov
mov
into
inc
sub
sbb
dec
mov
out
into
jp
std
movs
or
dec
fwait
jae
std
add
lea
pop
dec
jns
jg
inc
xchg
fmulp
lods
mov
fistp
adc
cs
out
shl
cmps
cs
sub
adc
sar
mov
mov
xor
jl
lahf
popf
out
stos
cmp
jbe
push
jge
mov
cmp
pop
fsubp
ret
imul
int
lods
xchg
xor
les
jg
dec
icebp
pop
out
sub
enter
add
add
dec
cmc
cld
xor
daa
iret
dec
fs
mov
lea
ja
dec
ret
pop
mov
iret
int3
nop
mov
or
mov
js
sbb
repnz
data16
into
sbb
add
mov
add
add
(bad)
cmp
sahf
sub
mov
or
pusha
and
int
fsubr
mov
scas
enter
mov
scas
dec
pop
mov
cmp
retf
jb
push
adc
cli
sahf
and
sub
add
xchg
pushf
push
adc
jae
push
(bad)
jno
sbb
push
es
adc
fcmove
or
dec
xchg
add
popa
mov
out
cmc
or
movs
add
call
jg
or
dec
or
out
sahf
in
aaa
aad
rep
add
and
mov
pushf
add
mov
fsub
push
jbe
xlat
out
add
sub
xchg
shl
(bad)
sbb
or
push
imul
bound
cmp
cld
out
fisttp
dec
repz
push
push
mov
xchg
ficomp
cwde
popa
pop
xor
pop
adc
cmp
sub
(bad)
jp
xor
sbb
xor
fisubr
loope
(bad)
lods
mov
add
mov
data16
shl
sbb
in
cmp
sbb
call
scas
dec
hlt
loopne
sbb
inc
outs
push
inc
cmp
jo
xchg
adc
mov
rcr
xchg
retf
in
loop
les
sbb
jb
retf
pop
leave
rol
loopne
mov
mov
mov
push
dec
mov
ins
xchg
inc
mov
fsubp
retf
inc
pop
xor
hlt
mov
fidiv
xchg
mov
mov
cmp
shl
dec
loopne
adc
ins
dec
adc
pop
lods
mov
pop
xchg
out
inc
adc
std
adc
push
mov
les
outs
mov
dec
out
ret
and
outs
movs
arpl
mov
fs
imul
rol
fdiv
jmp
(bad)
sbb
cwde
or
jb
iret
out
es
add
sbb
out
sbb
aaa
sub
or
fdivr
push
test
dec
mov
inc
idiv
or
aaa
es
mov
and
xor
les
mov
add
js
ins
popf
ret
dec
sbb
mov
mov
xchg
lds
xor
out
hlt
fild
clc
shl
in
leave
cs
les
int
cs
mov
call
sub
gs
popf
xchg
xchg
lea
sub
scas
neg
adc
xchg
cmps
repz
pop
retf
xchg
pop
sub
mov
and
jp
mov
inc
bound
sub
mov
cmc
xor
ret
aad
adc
xchg
push
pop
out
xor
xchg
(bad)
or
cmp
test
aaa
xor
push
push
xor
add
sub
loopne
jo
movs
repnz
mov
int3
fldenv
mov
sub
inc
sahf
dec
cmc
push
xor
es
cmc
shr
add
int3
outs
loope
push
cmc
pop
daa
cld
or
fs
imul
movs
xor
into
stos
clc
cmps
sub
shl
push
hlt
lds
fwait
jp
js
push
out
inc
and
fwait
icebp
add
mov
sub
push
mov
cmc
xchg
xchg
sub
push
lahf
ffree
adc
test
cwde
xor
mov
pop
pop
pop
push
sar
xchg
mov
xor
aad
xchg
mov
nop
ror
sbb
mov
les
dec
adc
les
cli
clc
in
jp
cmps
xchg
xchg
out
pop
mov
sbb
dec
cmp
xchg
mov
test
sbb
icebp
mov
mov
jns
inc
mov
jle
jecxz
popa
sar
lods
or
adc
retf
mov
xor
xor
or
push
push
mov
test
inc
xchg
test
shl
inc
jmp
stc
cmps
xchg
les
sub
or
or
xchg
loope
sub
fild
xchg
gs
mov
cmp
mov
cli
xor
sbb
(bad)
rcl
sub
leave
lods
adc
clc
mov
(bad)
xchg
sar
or
inc
adc
outs
mov
cdq
mov
lock
mov
sub
cmc
addr16
xor
push
ror
push
mov
xchg
sub
mov
lahf
mov
test
and
or
pop
cs
mov
add
jl
mov
call
sbb
sbb
repz
cmp
cmp
or
adc
sub
ja
lods
(bad)
jge
(bad)
addr16
jg
mov
(bad)
and
jmp
scas
push
xchg
mov
mov
or
cmc
sbb
scas
jns
mov
popa
aas
fs
pop
or
scas
pop
dec
jge
inc
call
arpl
pusha
sub
xor
int
jno
jnp
mov
cmc
push
mov
test
repnz
(bad)
jbe
call
cld
xchg
push
xchg
sbb
jne
enter
les
sti
adc
int
pop
shl
idiv
je
and
sbb
mov
sub
inc
sub
dec
stc
adc
pop
sahf
mov
sar
ror
imul
into
sub
fdiv
sbb
inc
dec
cmp
pop
xlat
xchg
xchg
inc
leave
je
lea
jae
call
adc
fwait
imul
mov
je
jle
mov
les
push
jge
jo
pop
mov
jg
enter
icebp
js
pushf
(bad)
ins
mov
mov
(bad)
(bad)
dec
clc
int3
mov
add
mov
add
fsub
test
mov
mov
and
ins
mov
rcr
sahf
js
sahf
adc
cmps
pushf
pop
add
lock
imul
aas
es
lods
lds
(bad)
std
rol
imul
inc
sbb
(bad)
shl
test
jl
pop
stos
push
in
push
pop
mov
mov
in
addr16
adc
ror
xor
add
sbb
push
or
cmp
sbb
loope
inc
mov
mov
std
add
xor
jle
push
adc
push
pop
mov
(bad)
inc
ins
mov
inc
jbe
cmp
cs
add
je
pop
scas
in
and
stc
xchg
fdivr
xchg
jmp
popf
cs
jae
ds
xchg
into
ror
(bad)
ins
or
cmp
sub
imul
push
jl
movs
and
pop
nop
push
inc
xor
push
jns
jnp
mov
push
lods
dec
and
cmp
pusha
xchg
mov
jmp
ins
mov
cmc
call
xchg
(bad)
push
movs
int3
jno
shl
jecxz
cmp
out
iret
push
sub
jl
aam
jge
dec
xchg
jmp
and
push
or
in
xchg
cwde
sti
or
aaa
push
mov
in
lds
out
test
inc
mov
daa
pop
sti
push
ja
popa
and
mov
jp
or
xchg
cli
les
xchg
jg
inc
dec
mov
fist
mov
shr
sti
shr
add
aad
sbb
jb
xor
adc
add
add
xchg
pop
enter
dec
punpcklwd
retf
inc
pop
into
push
xchg
or
or
add
push
scas
jo
jne
popf
jl
bound
inc
scas
loope
jb
rcl
pop
(bad)
(bad)
mov
xor
mov
out
cld
loopne
sti
sti
cmp
loope
in
push
jmp
and
fcom
push
mov
pop
dec
fwait
fs
imul
lea
in
inc
dec
adc
retf
mov
inc
retf
xlat
loop
ror
fsub
ror
lods
icebp
pop
push
sub
jno
ds
mov
dec
and
arpl
div
repz
and
cmp
push
lods
cmp
dec
int
sub
ds
call
ja
aam
inc
mov
mov
jmp
dec
xor
inc
ss
test
mov
mov
mov
test
or
icebp
push
or
inc
dec
mov
mov
jg
jmp
sbb
ds
sub
int
shl
scas
das
(bad)
fmul
in
or
(bad)
sbb
test
mov
push
cmovge
or
xchg
push
stos
xlat
test
mov
dec
and
out
jge
mov
shr
je
movs
sbb
sub
inc
mov
sahf
or
mov
push
push
adc
(bad)
adc
push
retf
mov
dec
cs
inc
push
cmps
adc
mov
das
shl
or
lods
sbb
jmp
cdq
popa
adc
sub
mov
inc
pop
add
hlt
sahf
test
fild
shl
cmp
inc
push
mov
lods
int
xchg
mov
test
or
inc
in
jbe
(bad)
pop
stos
bound
imul
daa
push
mov
ficom
loope
cmc
in
xchg
dec
test
dec
inc
test
(bad)
push
xchg
mov
adc
icebp
sahf
fld
cmps
pop
fst
mov
pop
xchg
lds
mov
xor
push
daa
sahf
rcr
dec
mov
sahf
(bad)
lods
sbb
shr
xchg
jno
fistp
push
mov
inc
adc
scas
xchg
pop
mov
xor
add
adc
jns
fdivr
stos
jns
sub
jge
mov
movs
movs
scas
(bad)
idiv
popa
pop
xor
pop
rcl
loop
mov
xor
sub
fs
sub
push
(bad)
pushf
(bad)
xchg
dec
or
cmp
jl
xchg
sar
les
stc
fcom
jo
sub
pusha
add
pop
cld
mov
imul
push
push
fiadd
xchg
pop
cdq
sbb
ja
in
cmps
lds
xchg
inc
gs
shl
push
cli
mov
enter
retf
mov
push
jge
pop
lods
mov
bound
in
and
test
add
adc
and
jg
sahf
sbb
hlt
or
and
xchg
mov
inc
and
dec
(bad)
adc
das
arpl
cdq
xor
(bad)
fistp
lahf
call
cs
push
dec
cmp
add
add
mov
dec
ja
mov
(bad)
dec
xor
or
xor
cmp
xchg
gs
jmp
sbb
cmp
rcl
(bad)
je
mov
sbb
jl
dec
rol
into
cs
ret
and
mov
xchg
xor
pop
cmp
nop
fidivr
jg
call
push
pop
mov
push
std
enter
push
scas
jmp
icebp
pop
retf
test
push
or
cmp
adc
adc
xor
push
push
mov
mov
cmps
imul
mov
sub
call
and
shl
shl
fwait
mov
and
(bad)
pop
mov
test
mov
clc
call
push
lahf
inc
pop
jg
add
add
std
pop
addr16
mov
stos
add
rcr
mov
daa
data16
jb
lock
xor
pop
arpl
pop
lock
and
ror
cmps
mov
dec
aaa
in
inc
inc
inc
(bad)
(bad)
sub
dec
dec
add
jmp
out
sub
xchg
mov
push
push
push
outs
xor
cmp
gs
cld
iret
sbb
mov
mov
leave
pop
ret
pop
xor
repnz
adc
lahf
xor
loopne
aaa
ss
mov
push
xchg
pop
mov
add
ret
add
fisttp
dec
pop
jg
xchg
cwde
jmp
imul
in
data16
sbb
loope
sbb
pop
repz
inc
jg
push
call
adc
in
sub
test
jnp
lock
ins
(bad)
sbb
jne
mov
jle
ja
mov
mov
scas
test
cmp
push
cmp
jnp
dec
add
fiadd
xor
xor
imul
imul
popa
xchg
loop
test
push
in
sbb
jae
inc
je
dec
push
or
adc
cmp
dec
fdivr
and
aad
pop
aam
push
in
aaa
xchg
xlat
pushf
sub
scas
adc
(bad)
fcomp
outs
push
sbb
ret
jb
or
dec
inc
ins
push
mov
inc
je
mov
movs
lahf
ror
dec
adc
mov
and
fild
fcomp
mov
sub
push
in
in
mov
pop
pop
aam
push
call
ja
and
sub
xchg
fldcw
jnp
mov
add
imul
ror
rol
cmc
ret
sahf
jno
outs
and
xchg
xchg
das
rol
out
daa
dec
ja
and
out
aad
out
dec
(bad)
inc
test
sti
stos
lahf
lds
xor
cs
pop
movs
cmps
stc
add
pop
sbb
mov
jae
movs
xchg
ficomp
cs
jg
dec
sub
dec
dec
ins
(bad)
in
pop
sti
dec
jmp
inc
shl
std
movs
dec
mov
neg
les
jnp
add
rol
add
mov
or
pop
iret
or
mov
mov
(bad)
sahf
adc
adc
movs
pusha
xor
sbb
xchg
mov
push
sbb
ins
jo
sbb
mov
jge
imul
mov
xor
pop
jmp
std
cld
jbe
inc
inc
enter
or
adc
ss
jecxz
repnz
add
mov
sar
(bad)
fbld
jl
or
jo
jl
cmp
daa
sbb
inc
dec
sub
xchg
imul
cmp
in
inc
movs
(bad)
out
mov
test
pop
cmp
sar
inc
pop
xchg
dec
mov
jl
push
or
pop
push
and
cli
int3
add
fcomp
sub
or
add
cwde
nop
pop
mov
ret
pop
or
mov
loopne
scas
xchg
lods
add
loopne
jecxz
addr16
test
and
retf
cmp
popa
fcom
xchg
lock
pop
icebp
jae
test
mov
stos
inc
sbb
xlat
sub
mov
or
not
outs
sub
pop
(bad)
sbb
pop
and
inc
ss
cmp
jecxz
push
call
sbb
pop
jo
scas
(bad)
pop
add
cmc
(bad)
out
jbe
sbb
mov
fisub
xchg
cmps
in
pop
pusha
add
adc
loope
mov
and
dec
enter
dec
push
sub
xchg
fidivr
sbb
fnsave
mov
jns
aam
mov
jle
adc
ret
dec
xchg
sbb
mov
lods
pushf
fwait
out
add
mov
mov
ja
push
js
dec
lds
ficom
xor
add
xchg
and
mov
sbb
div
add
fdivr
lea
or
push
js
mov
inc
addr16
leave
pop
jns
jo
loope
sbb
pop
add
fst
aaa
(bad)
aam
js
mov
popa
scas
enter
ficom
inc
neg
inc
das
lahf
pushf
cmp
pop
sub
adc
mov
sub
imul
push
stos
mov
movlps
pop
inc
adc
add
pop
cmp
ins
xor
inc
retf
test
loop
xchg
jge
aad
pop
out
mov
shl
lock
sahf
fs
jnp
imul
adc
adc
rcl
fidiv
out
outs
data16
add
ficom
addr16
loope
cmp
call
mov
cmp
xchg
pop
adc
adc
xchg
jae
jmp
pop
mov
out
cmc
sub
mov
das
inc
dec
es
in
leave
cmps
adc
push
test
push
inc
mov
mov
imul
xor
lods
fisubr
mov
or
mul
mov
mov
in
xchg
pushf
pop
add
daa
cmp
popf
and
pop
adc
cmp
adc
mov
mov
lea
cmps
aam
fwait
mov
adc
sti
pop
std
iret
mov
mov
(bad)
out
pop
(bad)
(bad)
adc
cmp
xor
icebp
retf
inc
sub
jecxz
mov
in
ds
push
ins
sbb
sbb
iretw
jmp
push
mov
rcr
out
je
movs
pop
or
fdivr
inc
gs
xchg
aas
dec
and
adc
adc
xchg
test
enter
pop
mov
lods
sbb
sub
ja
or
xor
jns
xor
dec
(bad)
rol
lahf
(bad)
retf
dec
push
cmp
xchg
stos
(bad)
sub
cmc
and
rol
outs
into
retf
add
or
push
loop
inc
movs
adc
jmp
fdiv
add
lods
or
jmp
les
shl
sub
int3
cmp
cmp
test
cmp
leave
inc
mov
lods
jae
sti
sub
bound
leave
pop
pusha
fisub
adc
cmp
ds
jecxz
xchg
mov
mov
xchg
inc
dec
iret
jmp
cs
and
aad
mov
cmp
jns
std
mul
iret
ds
jmp
inc
lock
ror
outs
shl
movd
push
jmp
cdq
pushf
(bad)
mov
daa
daa
adc
movs
shl
mov
lea
call
mov
xchg
aas
mov
sbb
icebp
dec
pop
sbb
je
adc
pusha
xlat
(bad)
int3
daa
xor
ror
mov
cmc
int
and
xor
popf
retf
out
cmp
(bad)
pop
mov
cld
jnp
xchg
xor
xchg
(bad)
loope
ds
adc
add
ficom
inc
add
xlat
fwait
xor
mov
js
fnsave
cmc
xchg
sub
loopne
push
popa
push
push
daa
xor
xchg
les
mov
add
jecxz
loop
and
ja
enter
loope
dec
call
push
mov
rcr
adc
sbb
and
mov
xchg
loope
push
lods
push
cli
lds
sbb
pop
or
lock
cwde
call
scas
into
test
mov
sub
jmp
push
lock
push
icebp
mov
lods
sub
inc
scas
mov
mov
aad
dec
retf
add
pop
stc
xor
jg
sbb
fldenv
cmp
dec
jno
or
(bad)
pop
out
push
and
aas
sub
jnp
xor
lock
popa
cwde
addr16
inc
cmp
push
imul
mov
cmps
fild
shr
push
daa
stc
inc
loopne
js
ja
pop
outs
data16
cmp
sub
jecxz
push
adc
jne
mov
(bad)
ret
inc
cwde
push
xchg
daa
int
nop
sbb
mov
xchg
add
pop
or
mov
mov
(bad)
ins
pop
pop
std
(bad)
daa
test
test
jns
push
nop
mov
pop
adc
inc
and
cmp
and
fs
push
popa
mov
(bad)
xchg
imul
and
fidiv
in
jmp
mov
or
(bad)
pop
arpl
loopne
stos
retf
push
js
scas
mov
outs
jno
mov
retf
jnp
aam
add
xchg
mov
popf
cmp
fsubr
mov
stos
jo
add
outs
test
imul
pop
lahf
cmp
add
cwde
cmp
xor
mov
mov
or
fidiv
out
jbe
(bad)
loop
and
sar
mov
mov
ret
jle
mov
or
and
cmp
mov
repz
shl
pop
cmp
ss
cmc
scas
xchg
pop
nop
pop
pop
mov
push
dec
sub
test
out
inc
in
retf
iret
adc
xchg
stos
call
inc
jge
mov
push
sbb
aad
jp
and
fwait
cmp
call
xchg
or
(bad)
xor
ins
icebp
jbe
(bad)
pop
adc
call
(bad)
outs
mov
adc
imul
jp
sahf
mov
adc
inc
push
cmp
xor
and
dec
adc
add
gs
int
or
rol
push
arpl
daa
fcom
pop
jp
aad
ficomp
fs
lds
cld
or
in
adc
addr16
dec
pop
pop
inc
sub
pop
mov
pushf
pushf
test
pop
xor
jle
lods
call
clc
daa
cli
fdivr
into
cwde
std
and
push
sbb
mov
popf
and
mov
imul
int3
sbb
jns
shl
cmp
and
pop
aas
inc
std
mov
aam
xchg
mov
daa
adc
sub
out
mov
loop
dec
aaa
in
xor
jg
xor
lods
scas
pop
cmp
retf
mov
push
add
(bad)
sbb
(bad)
loope
cmp
(bad)
outs
fcom
mov
cmp
adc
fdivr
aam
out
stc
ds
lods
es
fiadd
xchg
cmp
dec
test
aam
repz
push
je
jnp
aad
bnd
in
push
out
call
push
pop
inc
xchg
repz
mov
mov
pop
in
in
jge
rcl
aas
jp
sbb
xor
outs
int3
pop
lahf
dec
sar
xchg
and
adc
lahf
sub
xor
mov
pop
push
mov
es
(bad)
push
xchg
sbb
clc
std
jbe
push
lock
push
leave
push
or
mov
scas
inc
mov
cmc
gs
cmp
(bad)
ds
mov
push
dec
and
add
sub
iret
fidiv
mov
sbb
jb
fstp
cmps
xchg
(bad)
data16
pop
icebp
cmp
cld
inc
rdmsr
sbb
test
xchg
rcr
(bad)
pop
cmp
clc
mov
sbb
jecxz
es
scas
out
pavgw
fdiv
and
jmp
cwde
jo
adc
lock
ss
fldl2e
jl
inc
ret
cdq
xor
(bad)
in
pop
jns
ret
dec
sub
add
popf
rcr
xchg
(bad)
add
dec
sahf
cmp
cmp
cmps
(bad)
push
out
(bad)
dec
sub
jmp
push
mov
push
inc
mov
sbb
xor
shl
js
xchg
inc
ficomp
in
xor
jp
out
mov
mov
jmp
add
xor
jmp
sub
pusha
and
xor
repz
fsubr
pop
iret
sbb
fcmovnbe
pusha
mov
int3
or
ret
stc
sti
add
push
pop
pushf
xchg
pop
mov
arpl
sub
jnp
js
mov
mov
xchg
cs
jle
fs
inc
mov
and
pop
push
loope
cwde
jg
and
add
out
push
sub
jle
and
(bad)
jae
and
pop
sub
fcomp
push
pusha
jle
xor
xchg
(bad)
pop
sbb
test
(bad)
jbe
(bad)
push
in
and
cli
js
inc
in
test
rol
jnp
add
sar
mov
mov
inc
xor
movs
or
xchg
cmps
fs
mov
ror
add
xor
fcomp
sub
add
jg
cmp
xlat
repnz
push
sbb
jecxz
dec
loopne
inc
xor
popf
(bad)
jle
adc
mov
rcl
imul
xor
in
mov
das
push
push
call
push
xchg
repz
lods
popf
xor
jo
aam
aaa
lods
sbb
mov
sub
ficomp
lds
mov
addr16
xchg
xchg
leave
and
xchg
sbb
ins
mov
outs
jns
and
cld
(bad)
outs
pop
cmp
mov
imul
div
inc
aas
add
or
mov
sub
cdq
out
pop
data16
std
out
jae
in
mov
sbb
ret
and
jb
gs
inc
mov
xor
add
(bad)
cmps
mov
call
test
mov
push
or
int
ret
or
or
or
stos
inc
xchg
out
punpckhbw
sbb
fidivr
fld
dec
sbb
inc
mov
mov
sbb
add
cs
pop
pusha
and
sbb
(bad)
or
js
(bad)
ins
add
dec
outs
ficom
ror
cld
stos
jg
xchg
inc
fucom
fimul
or
mov
add
(bad)
cmp
inc
xchg
mov
jmp
js
adc
icebp
pop
add
fwait
mov
xchg
adc
js
leave
(bad)
inc
in
test
pop
out
(bad)
(bad)
outs
ficom
jo
fnstsw
pop
bound
push
repz
shr
sub
outs
dec
jbe
jge
call
ja
mov
push
jp
lds
xchg
pop
push
add
loopne
test
or
mov
mov
jmp
jle
(bad)
loopne
inc
sub
pusha
push
jmp
pop
es
mov
int
sbb
jg
out
out
je
icebp
jmp
sar
ss
dec
jmp
mov
or
xor
mov
out
dec
test
xor
sti
cdq
add
loope
dec
dec
add
jg
sbb
pop
mov
aad
mov
fidiv
inc
into
(bad)
ins
lds
fisttp
mov
pop
inc
xor
lahf
lds
xor
jnp
cwde
xchg
(bad)
sub
lods
fidiv
dec
jmp
inc
das
xchg
push
sbb
icebp
push
xchg
mov
xchg
sub
mov
out
fist
sbb
pop
xor
cmp
lea
or
fs
inc
pop
mov
dec
aas
push
jnp
leave
enter
push
pmulhuw
jne
and
in
xor
and
inc
sbb
xchg
xchg
lods
or
shl
pop
popf
dec
jle
popa
mov
pop
imul
or
stos
outs
xchg
or
imul
aad
movs
jae
jo
adc
pop
fistp
shl
inc
jb
sbb
jle
add
mov
aas
and
mov
xlat
pop
ds
imul
jg
adc
push
cwde
jecxz
xor
xchg
aad
stos
fsubr
test
xor
mov
pushw
imul
aam
in
jle
sahf
mov
mov
pop
jne
test
adc
test
(bad)
xchg
push
repz
pushf
in
ret
push
mov
push
cs
sahf
adc
pusha
jae
jmp
clc
test
cli
call
sub
loope
nop
inc
jnp
mov
dec
and
jne
stos
push
int
cmp
adc
and
sbb
xchg
adc
xor
or
in
xchg
jns
ffreep
sub
jecxz
cmps
and
(bad)
push
cmp
cmc
fmul
inc
lds
mov
cwde
out
repnz
fdiv
out
adc
dec
adc
sbb
cmp
inc
and
sbb
adc
ins
add
dec
xor
iret
clc
add
loope
dec
idiv
fidivr
mov
je
and
jo
or
mov
cmp
and
adc
loopne
inc
arpl
push
ss
jno
mov
sub
cs
(bad)
xchg
inc
push
inc
iret
mov
int
ins
repz
cld
pop
rcr
cmp
push
std
js
cmp
dec
or
mov
push
retf
fs
stos
aam
push
sub
cmp
fild
jmp
mov
hlt
arpl
icebp
xor
call
scas
jbe
(bad)
in
das
push
dec
and
sbb
test
xchg
pusha
and
push
xchg
add
out
call
fcomp
mov
lods
cmps
mov
call
sbb
or
pop
xchg
mov
addr16
mov
aad
dec
cwde
dec
inc
inc
or
xor
jo
inc
fisubr
cmp
lods
ror
ret
xchg
outs
js
pop
sbb
and
leave
mov
pop
outs
sbb
sbb
test
inc
add
xchg
call
inc
dec
jle
outs
aad
push
neg
adc
loope
in
add
data16
cmp
add
lds
pextrw
sbb
enter
test
(bad)
shr
mov
pop
(bad)
mov
mov
repz
cmp
imul
adc
scas
jecxz
imul
sbb
inc
sahf
and
xor
mov
idiv
or
pop
cmp
fist
repnz
mov
es
sub
mov
call
pushf
inc
adc
aaa
dec
pop
fs
jo
test
pushf
nop
inc
pop
sub
jmp
sbb
mov
mov
pop
rcl
jg
out
js
xchg
mov
mov
shl
lock
mov
and
fistp
test
inc
ret
mov
mov
cwde
stos
mov
data16
inc
sbb
mov
mov
and
dec
jb
push
dec
sbb
bound
mov
jecxz
ror
mov
mov
sbb
push
mov
stos
fld
and
jne
sahf
xor
mov
xor
and
mov
inc
fisub
(bad)
popa
jno
add
fs
mov
push
jmp
jae
sbb
mov
adc
popf
ins
int3
ror
add
push
push
ins
mov
fcmovu
out
cmps
pusha
in
fidiv
lock
jg
jmp
dec
xchg
xchg
dec
ins
add
movs
sub
pop
dec
mov
cmp
lea
inc
imul
cmps
repnz
scas
jno
(bad)
adc
imul
aas
ins
jmp
adc
outs
jmp
and
jecxz
mov
inc
xchg
jno
add
adc
jmp
jno
retf
out
cmp
mov
lods
jmp
cmc
xchg
xchg
add
sbb
popa
les
pop
mov
inc
sahf
push
mov
add
pop
sbb
ficomp
int
cmp
repnz
push
retf
or
or
push
xchg
retf
(bad)
or
fcmovnb
movs
mov
inc
test
repnz
add
(bad)
sbb
ror
xor
sbb
xor
iret
ins
(bad)
mov
dec
retf
dec
lahf
xor
nop
inc
cmp
pop
cmc
dec
mov
ret
sub
sbb
ds
or
call
mov
xchg
shl
nop
lahf
xchg
jne
push
lea
xor
inc
dec
iret
std
jmp
adc
outs
pushf
test
mov
or
xchg
xlat
add
ror
and
gs
jmp
stos
in
call
and
arpl
push
xlat
adc
and
pop
add
(bad)
in
mov
(bad)
retf
jecxz
mov
push
sub
hlt
or
test
leave
sbb
nop
rcl
xor
jae
fld
aad
sub
cmp
fwait
xchg
test
xor
pop
jbe
and
mov
cdq
rcr
add
sub
rcl
push
emms
cmp
lock
popf
jns
std
outs
loop
ret
(bad)
jmp
lds
sbb
fnclex
scas
and
or
mov
add
outs
push
lock
jmp
repnz
sub
mov
pusha
hlt
aas
pop
dec
shl
icebp
xchg
xor
fdiv
xchg
or
daa
out
pop
push
hlt
adc
in
ins
and
jae
cli
pop
xlat
ds
xor
lds
repnz
call
mov
pop
mov
adc
add
sbb
inc
add
jae
aad
movs
fwait
inc
mov
in
clc
dec
cs
cmp
or
adc
jecxz
mov
pop
push
pop
rol
sbb
adc
retf
repnz
jg
jp
(bad)
jno
xchg
dec
xchg
imul
jne
push
test
mov
adc
out
loopne
inc
js
retf
jns
add
cwde
jae
movs
shr
and
xchg
mov
pushf
aaa
cmp
bound
jae
pop
cdq
pop
mov
not
sti
push
mov
into
stos
scas
pushf
cmps
push
and
mov
pop
fnstsw
jnp
mov
notrack
xchg
ja
dec
arpl
mov
mov
xchg
cmps
xor
outs
imul
shl
mov
lds
push
inc
popf
or
or
loope
cmp
adc
ss
ss
jle
jecxz
gs
mov
mov
add
mov
into
(bad)
mov
or
or
jl
lahf
loope
neg
stos
hlt
lds
cmp
loop
mov
movs
sbb
add
mov
inc
add
or
pop
and
sbb
jmp
xchg
pop
adc
test
ret
int
sbb
(bad)
mov
jg
ds
leave
bound
jno
mov
(bad)
pop
add
pop
jecxz
dec
adc
mov
sbb
out
loope
inc
ret
mov
or
retf
arpl
rol
pop
ja
aas
test
das
dec
dec
dec
sub
test
mov
push
fstp
fiadd
stos
in
mov
daa
pop
(bad)
cs
sahf
xchg
mov
js
sub
mov
enter
lea
jns
inc
lea
sub
sti
sbb
push
(bad)
fmul
(bad)
pusha
mov
loope
xchg
sub
(bad)
aas
bound
adc
enter
jb
push
push
icebp
cli
inc
cld
mov
xor
sar
pop
rol
mov
xor
add
jge
(bad)
aam
into
sbb
sub
in
retf
jb
pop
bound
rol
push
or
ret
sub
cmps
or
lds
or
mov
push
add
arpl
jecxz
adc
and
ins
jecxz
sub
push
popa
xor
cld
pop
pop
pop
test
icebp
adc
jae
and
mov
test
ins
dec
mov
shl
push
xchg
in
movs
mov
(bad)
pushf
cmps
or
stc
push
xor
outs
xchg
popf
mov
adc
cmp
mov
and
jl
inc
je
inc
dec
push
ficom
xor
pusha
xor
fld
cmp
cli
cmps
dec
(bad)
cmp
cmc
mov
ret
jmp
jg
cld
out
cmp
dec
mov
mov
xcrypt-ctr
cmps
fcmovnbe
icebp
int3
adc
pop
(bad)
adc
pop
mov
jecxz
jge
or
add
push
into
test
cld
add
sbb
xchg
dec
scas
or
ret
and
push
pop
cmp
pop
xchg
cdq
test
adc
ret
movzx
in
inc
jecxz
es
retf
test
xchg
les
cmps
sub
inc
sub
imul
pop
test
ins
dec
scas
clc
dec
mov
mov
cmp
sbb
xlat
xlat
xor
cld
push
(bad)
loope
pushf
fstp
xor
adc
push
inc
nop
add
jae
push
or
sti
neg
or
leave
js
or
popa
jno
add
or
xchg
(bad)
adc
add
push
repnz
push
nop
dec
cli
aam
aam
imul
sub
mov
in
dec
std
fisttp
lock
dec
xchg
jle
sub
cmp
test
imul
push
inc
xor
inc
push
pop
in
retf
sbb
push
mov
or
loope
cmp
mov
repnz
adc
sbb
jle
scas
mov
jge
fidiv
add
ja
fstp
cdq
sub
ins
add
pop
jae
iret
and
in
clc
push
test
xchg
das
cmc
out
(bad)
cmp
add
cs
mov
xchg
jg
adc
sahf
jae
fwait
add
xor
jmp
jle
ret
pop
cmp
and
mov
loopne
hlt
pop
aas
popa
or
cmp
xchg
ret
pop
rcr
outs
in
outs
aaa
pop
mov
xor
mov
mov
adc
clc
retf
pop
pusha
addr16
in
int3
sahf
push
xlat
dec
jbe
and
repnz
mov
jg
(bad)
mul
jmp
aad
xchg
push
mov
imul
ss
fs
jl
inc
in
popf
mov
mov
ror
cmps
pusha
clc
jl
push
out
mov
dec
mov
mov
out
adc
add
ss
dec
pop
sub
or
inc
fwait
lahf
test
dec
loop
int3
es
cdq
cmps
out
dec
xchg
inc
test
cmp
jp
and
imul
jmp
loopne
push
xchg
mov
test
mov
aad
or
(bad)
xchg
or
sbb
push
pop
leave
and
xlat
scas
dec
mov
dec
call
push
mov
xor
(bad)
aad
(bad)
rcr
cmp
ficom
mov
inc
pop
push
rol
jo
not
fist
clc
mov
pop
leave
xor
push
rcl
(bad)
and
xor
ret
(bad)
xlat
out
cmp
out
jg
mov
lods
mov
ret
mov
or
(bad)
stos
scas
fsub
push
xor
pop
dec
es
bound
cli
fdivr
repz
cwde
jne
xchg
fsubr
rcr
sbb
cwde
push
rcr
inc
push
add
das
jmp
mov
fwait
or
test
xchg
pop
cs
sbb
stos
sub
mov
adc
and
jl
loop
adc
mov
scas
cmpps
scas
out
xchg
add
mov
not
cmps
test
mov
jp
fsubr
ss
xlat
mov
cs
out
popf
out
sub
(bad)
aad
dec
sbb
push
(bad)
lock
xor
mov
pop
xchg
jmp
cmps
cmp
lea
jl
mov
fidivr
imul
in
call
dec
and
sbb
cwde
dec
mov
cdq
cld
dec
test
push
sbb
add
push
pop
dec
ds
cmps
pop
cmps
rcl
add
mov
mov
repnz
or
cld
jl
xor
movs
stos
mov
sar
inc
inc
dec
cmp
retf
shl
jmp
add
bound
stc
arpl
mov
xor
inc
mov
mov
test
aam
int3
mov
cwde
mov
push
call
mov
js
aaa
adc
in
or
outs
sub
pop
jb
add
mov
mov
jae
xor
pusha
mov
ss
shl
mov
pop
retf
data16
xor
(bad)
pop
bound
xchg
enter
or
mov
mov
mul
movs
jp
inc
adc
or
lock
cld
mov
push
ins
inc
xor
xchg
ret
sti
inc
pop
loopne
mov
call
or
fs
add
das
mov
mov
xchg
in
dec
das
cdq
sbb
rcr
sbb
icebp
cli
cld
loop
add
rcl
mov
cmp
xchg
or
jb
jno
push
mov
mov
inc
cmp
loop
pop
pop
bound
popa
dec
jo
cli
call
rol
outs
loopne
pop
ret
add
test
or
nop
mov
lock
pop
enter
mov
(bad)
xchg
cmp
fbld
retf
sbb
lea
jbe
add
hlt
gs
(bad)
movs
les
sub
and
es
aas
lds
cmp
popf
push
jmp
sbb
call
test
cmp
fdiv
in
sbb
sar
std
push
rcr
or
inc
jno
pop
popf
inc
mov
mov
test
xlat
pop
dec
ficomp
sbb
or
ins
add
ror
lahf
imul
loopne
pop
push
outs
cmp
jge
das
not
shl
mov
retf
fnstcw
add
in
jl
mov
mov
pop
std
ror
shr
sbb
fisttp
or
mov
push
lds
shl
push
enter
gs
sub
movs
dec
xor
scas
and
hlt
data16
ror
sub
dec
xor
cmps
push
test
push
dec
xor
and
mov
mov
in
std
mov
push
cmps
stos
adc
or
idiv
pushf
call
mov
outs
(bad)
jb
xor
ror
jmp
or
aam
adc
stos
lods
jmp
outs
pushf
pop
test
fadd
xchg
jecxz
xor
pop
(bad)
rol
in
out
inc
sub
retf
dec
mov
ffree
loope
xor
adc
sbb
int
scas
ins
das
lods
ficom
add
or
out
out
das
sub
dec
or
mov
jo
add
push
arpl
aad
sub
xor
xchg
lahf
addr16
jmp
inc
dec
mov
and
mov
cmp
dec
pop
jne
and
repz
enter
rcl
in
inc
or
and
popa
fst
aam
sar
in
(bad)
repz
push
stc
std
xor
mov
nop
pop
inc
mov
out
jnp
add
xchg
popf
iret
inc
jge
add
into
lods
xchg
push
dec
leave
mov
in
pop
xchg
sbb
mov
xor
push
(bad)
sbb
jmp
icebp
sub
add
cmps
add
sbb
test
adc
movs
mov
mov
inc
ins
push
shl
pop
mov
enter
pop
leave
push
mov
(bad)
or
sbb
jecxz
jl
jbe
add
in
lock
push
xor
pop
adc
icebp
sti
sbb
js
add
cmp
dec
enter
pop
xchg
sbb
jae
dec
aad
movs
in
lahf
test
mov
push
jno
outs
inc
mov
aas
sub
daa
fidiv
push
aam
mov
movs
xchg
call
push
fmulp
js
leave
xchg
mov
push
pop
cmp
or
stos
retf
sbb
mov
ficomp
je
cmp
xor
in
push
pop
mov
js
inc
pop
mov
lock
pop
repnz
xchg
ds
popf
retf
jb
mov
xchg
adc
mov
add
pop
sub
or
or
dec
pop
scas
mov
sahf
fmul
test
adc
and
dec
lods
jmp
fwait
push
mov
test
cmp
sti
retf
jmp
jl
mov
in
mov
xor
cld
xor
pop
pop
sub
in
cmp
mov
jae
xchg
mov
pop
add
mov
sbb
pop
out
xchg
movs
add
inc
sub
add
mov
call
stos
dec
pop
xchg
(bad)
push
mov
mov
pop
pop
js
pop
sbb
sub
cmp
jo
inc
sub
js
mov
jl
cmp
push
aas
mov
xchg
mov
stc
addr16
fisubr
and
addr16
out
idiv
jecxz
cmp
jp
popf
fadd
push
or
dec
jo
in
pop
jg
sub
jnp
mov
cmp
push
jno
and
mov
push
cs
aas
(bad)
sub
inc
lds
sbb
jne
stos
int
ins
or
leave
ss
mov
ins
hlt
pop
dec
mov
pusha
add
push
fwait
jp
sub
int
hlt
push
das
ds
push
adc
ins
mov
lds
out
push
mov
mov
dec
push
add
cmp
pusha
sahf
pop
dec
mov
inc
hlt
cli
push
outs
and
(bad)
xor
sti
sub
xchg
mov
scas
jge
scas
cmp
cmp
retf
cmp
jl
repz
xchg
cld
cmp
mov
nop
mov
inc
cmp
mov
rcr
mov
adc
retf
(bad)
xchg
popa
out
pop
xchg
push
sbb
pop
sbb
ret
(bad)
aas
clc
aas
xchg
xor
ss
ret
shr
push
inc
inc
or
imul
es
mov
gs
jmp
jo
push
jmp
jecxz
inc
rcr
mov
jb
fsub
pop
inc
out
test
loopne
ds
inc
pop
aas
div
or
mov
in
call
out
mov
fild
repz
ret
pop
jle
xchg
shl
or
outs
in
fst
dec
xor
fadd
xor
pop
adc
mov
inc
sub
add
cmp
loop
sub
xchg
xlat
pop
call
xor
repnz
loope
popf
push
xchg
clts
scas
rcl
enter
and
push
dec
fistp
dec
pop
sub
cmp
scas
pop
jno
xchg
in
aas
fs
or
fcmove
adc
push
jne
lods
ja
stos
mov
dec
sub
dec
outs
je
and
inc
cmp
popf
mov
cmps
repnz
gs
xor
gs
in
pop
aad
xchg
data16
xlat
or
retf
cld
xchg
push
jl
into
dec
mov
sbb
or
outs
cmp
sbb
add
lock
aaa
sub
dec
loope
push
and
cmp
mov
pop
cmp
aas
jb
mov
lods
in
out
xchg
mov
test
lock
sub
dec
in
mov
mov
inc
mov
inc
imul
mov
cmp
int
aad
(bad)
enter
jl
stos
bound
dec
mov
(bad)
or
or
pop
and
fs
dec
dec
and
mov
or
pop
push
or
and
mov
icebp
or
jns
push
xor
xor
mov
jbe
xlat
retf
cdq
push
out
fisttp
aam
imul
scas
jmp
jae
loop
push
push
sbb
sub
call
push
in
mov
add
sar
adc
into
mov
scas
fidiv
loopne
mov
icebp
(bad)
aam
lea
sub
xchg
nop
pop
shl
imul
ins
lods
aam
or
cli
pop
mov
repnz
xchg
retf
push
shr
loop
shl
xor
or
fist
cmp
xchg
pop
mov
test
push
jne
loop
and
pop
adc
mov
icebp
xor
pop
pusha
xchg
(bad)
mov
sbb
lea
push
jnp
push
cmc
adc
sbb
iret
mov
cmps
bound
push
jmp
aas
cmc
leave
jg
add
mov
mov
xchg
xchg
xor
jb
mov
push
lods
cmp
add
jae
mov
pop
and
sub
test
lea
dec
pop
jae
fisttp
xchg
sub
ja
jg
add
xchg
movs
lods
call
popa
xor
sbb
popf
inc
adc
leavew
jne
adc
out
adc
cli
arpl
scas
pop
gs
leave
dec
jecxz
iret
jg
stos
repz
dec
mov
ret
mov
scas
test
mov
pop
xchg
push
and
loopne
xor
mov
sbb
ja
cmp
cmps
shl
mov
icebp
cmp
imul
cmp
fmul
leave
int
icebp
ret
sub
mov
or
into
shl
xchg
push
adc
jp
push
retf
push
inc
fwait
pop
adc
jb
popa
mov
retf
and
je
dec
fs
fmul
push
(bad)
cwde
jno
outs
jmp
pop
jb
mov
dec
aad
pusha
mov
xor
(bad)
data16
adc
jne
sbb
test
aas
or
movs
push
xchg
or
imul
mov
xor
ds
gs
adc
jecxz
inc
xchg
aas
mov
ror
sti
push
xchg
mov
push
retf
inc
and
jge
std
pushw
cmp
fstp
dec
jo
outs
fld
arpl
push
sub
imul
in
scas
ret
push
jge
out
xor
dec
bnd
scas
inc
pop
mov
xchg
mov
cmp
aaa
cmc
test
mov
mov
movs
dec
inc
dec
cmp
cmp
(bad)
jo
int3
ds
and
push
ins
push
clc
push
mov
sub
mov
(bad)
loop
dec
lea
mov
call
mov
xor
das
jns
cmp
in
cmp
adc
sub
add
add
jnp
dec
jmp
push
cmp
adc
jno
movs
and
dec
adc
add
dec
std
fmul
fst
arpl
or
(bad)
jl
mov
mov
sbb
xlat
mov
stos
or
sbb
inc
mov
mov
jbe
adc
jl
sub
test
inc
ins
or
mov
clc
xchg
movs
mov
inc
mov
enter
int3
jecxz
pop
loop
repz
test
push
sub
sub
pop
adc
imul
int
jbe
inc
inc
mov
adc
fcom
pop
jg
fbld
pop
fst
les
aas
mov
xchg
lds
inc
pop
jg
adc
mov
aaa
ret
repnz
arpl
fidivr
and
test
add
inc
in
sub
dec
cmps
xor
je
sub
cmc
pop
repnz
sub
pop
push
push
adc
mov
aas
pop
test
xchg
enter
pmaxsw
mov
mov
dec
cwde
lock
xchg
or
jno
jmp
jbe
xchg
mov
call
or
add
ins
sti
mov
push
test
sbb
(bad)
in
dec
inc
sub
sbb
repnz
inc
scas
mov
fist
push
jp
adc
fstp
outs
rol
mov
call
scas
pop
data16
std
sar
mov
call
shl
idiv
hlt
fimul
vucomisd
pusha
adc
cmp
sbb
clc
or
or
imul
mov
mov
and
arpl
call
adc
xor
xchg
or
stos
pop
nop
imul
xlat
lock
mov
adc
loop
mov
xchg
mov
aad
leave
ret
ins
and
add
sahf
ins
inc
(bad)
leave
daa
retf
ins
mov
test
or
shl
push
int3
push
mov
jge
test
xor
loop
sub
mov
movs
push
xor
int3
stos
mov
jno
retf
leave
mov
iret
or
leave
inc
ss
dec
mov
bound
pop
xchg
ret
es
mov
ss
inc
dec
xchg
sti
bnd
adc
fstp
imul
mov
xchg
sbb
push
lods
cmp
push
fcom
jb
xor
mov
jle
or
adc
push
pop
fadd
add
test
ret
add
sub
pop
push
imul
push
imul
ins
or
xor
js
mov
adc
gs
fwait
jle
pop
rcr
mov
mov
jg
add
adc
pop
pusha
cld
enter
dec
je
cmc
xchg
dec
arpl
mov
fs
dec
imul
pop
repnz
push
fcom
cmp
jbe
or
push
and
mov
std
jp
mov
jl
pop
cmp
mov
push
in
je
idiv
or
jge
jp
xlat
or
push
jg
lea
lea
mov
int
pop
data16
xchg
push
not
add
add
addr16
and
xchg
sbb
test
je
imul
xor
add
jg
mov
imul
xor
push
add
gs
push
stc
movs
in
inc
push
sub
dec
and
ins
imul
sub
inc
mov
(bad)
jns
pop
inc
sbb
int
pop
sar
or
(bad)
pushf
sti
inc
jl
xchg
cld
and
pop
call
push
sbb
sub
sar
je
loopne
fnsave
mov
loop
add
xchg
or
mov
cli
scas
inc
pop
adc
fcomp
std
jb
jmp
and
fisttp
push
arpl
outs
jg
ret
lahf
(bad)
xchg
mov
dec
ds
mov
iret
test
sbb
sbb
and
mov
je
adc
out
mov
(bad)
in
and
mov
lods
xor
pop
xchg
add
mov
xlat
or
sbb
jns
or
push
jns
movs
stos
add
xchg
sahf
pusha
add
mov
pop
dec
jge
and
fisttp
popf
inc
push
cwde
dec
mov
je
jmp
popa
ret
mov
inc
jb
and
in
jns
mov
jb
stos
pusha
pop
(bad)
cmps
mov
dec
lds
fwait
lods
mov
cmps
push
xlat
or
inc
ss
cwde
call
fild
inc
mov
shr
sbb
adc
dec
inc
(bad)
push
int
das
cmps
add
sti
sub
bound
cmp
(bad)
dec
ret
pop
hlt
cld
dec
xchg
push
cmp
inc
bound
inc
dec
add
cmp
mov
jle
adc
xchg
mov
mov
sbb
sub
aad
(bad)
movs
test
pushf
mov
pop
sub
scas
inc
(bad)
xchg
(bad)
shl
push
rol
imul
(bad)
leave
mov
stos
ins
or
inc
sub
dec
pop
mov
cmp
push
arpl
xchg
shl
mov
test
arpl
jo
es
fnstenv
pop
push
mov
xor
retf
pop
jae
ret
shl
add
pop
pusha
out
(bad)
dec
push
xchg
push
popa
push
xchg
xchg
adc
sti
jmp
mov
and
std
xor
jg
adc
std
push
add
retf
cmps
dec
ja
jno
mov
dec
add
repnz
jno
inc
loope
out
add
cmp
mov
or
fcomp
inc
push
mov
xor
and
inc
popa
xchg
push
mov
cwde
mov
inc
mov
dec
sub
mov
in
pop
int
retf
(bad)
leave
ret
mov
cmp
outs
inc
test
mov
sbb
sub
pop
push
shl
loope
sbb
jbe
or
pop
cmp
pop
mov
sti
push
je
cs
cli
pop
fcom
push
inc
cmp
lock
mov
xor
mov
jge
dec
and
xor
cmp
fcmovb
cdq
sub
push
push
ret
mov
jnp
addr16
lahf
out
cmp
cli
cmps
(bad)
(bad)
cmp
xchg
adc
mov
sub
xor
add
test
pop
test
xor
das
iret
xor
rcr
add
add
aad
mov
cmp
daa
dec
dec
dec
pop
out
push
das
sub
sbb
adc
(bad)
shr
and
hlt
dec
jg
push
push
pop
dec
mov
outs
shl
sbb
pop
inc
cmp
mov
ins
mov
ret
ret
bndstx
sub
xchg
and
pop
movs
popa
mov
cmp
or
test
mov
xor
cmc
stos
sub
dec
mov
jge
or
out
sub
stc
repnz
das
mov
adc
mov
mov
push
cmp
xor
scas
inc
fisubr
js
push
dec
ret
add
xchg
fst
or
add
imul
popa
inc
xchg
shl
shr
retf
aad
sub
mov
pop
push
daa
ja
adc
jmp
aaa
arpl
dec
xor
call
jnp
dec
or
cmp
or
icebp
or
ror
mov
popf
add
xchg
add
xchg
test
jge
dec
fs
or
push
push
ss
movs
jle
movs
and
jge
je
jmp
addr16
pop
sahf
(bad)
test
cmp
fild
movs
inc
loop
inc
mul
mov
(bad)
cld
es
popa
fbstp
or
pushf
fdivr
gs
push
sbb
xchg
mov
lods
dec
mov
shl
cdq
daa
cmp
pop
mov
sar
xchg
mov
cwde
pop
and
je
dec
inc
je
imul
lods
or
outs
adc
cmc
mov
imul
adc
adc
cmc
cmp
adc
jmp
push
pop
dec
retf
push
cli
loopne
jmp
dec
scas
pusha
inc
adc
or
call
out
xchg
rol
cmp
pop
sbb
xor
icebp
js
cmps
scas
mov
mov
nop
jae
pop
andnps
(bad)
ret
cmps
and
mov
sub
push
lds
retf
ret
push
mov
xor
push
fs
fbld
add
mov
push
fwait
xchg
pop
cmp
xchg
in
and
and
sbb
xor
add
inc
pop
jmp
fs
shr
push
pop
and
in
adc
pop
inc
push
mov
cmps
lock
retf
jmp
sahf
dec
in
adc
fistp
movs
cld
mov
fld
inc
pop
push
lea
imul
mov
push
add
push
icebp
test
pop
adc
adc
scas
xchg
xchg
or
(bad)
jecxz
sbb
cs
jp
out
scas
test
repz
hlt
sub
dec
in
test
mov
or
lahf
jo
int3
test
repz
ficomp
or
pop
jnp
ret
xor
(bad)
mov
cmp
xchg
jle
inc
cld
add
inc
adc
jbe
aaa
lahf
repz
adc
enter
cmp
or
and
iret
dec
int
xchg
fs
dec
mov
out
rol
push
inc
add
push
lea
xor
jbe
push
adc
shl
rol
data16
sub
dec
test
es
mov
add
addr16
sub
fs
dec
fwait
mov
inc
sbb
dec
jmp
scas
mov
inc
outs
adc
test
mov
mov
std
inc
mov
in
and
add
fisub
outs
mov
jbe
(bad)
fcom
in
dec
push
push
push
mov
pop
nop
xchg
xchg
imul
cmp
dec
sub
loop
pop
push
out
cmc
aaa
fcomip
stc
lock
aas
xchg
cmps
fiadd
mov
mov
arpl
(bad)
jl
jne
clc
mov
push
sub
sbb
sub
loope
ficomp
sti
mov
imul
cmc
aas
and
bound
mov
xchg
pop
xlat
mov
addr16
mov
movs
test
ins
jge
fs
mov
scas
(bad)
xor
cmp
loop
in
retf
xchg
or
iret
addr16
and
mov
shl
cld
sbb
pop
mov
mov
mov
xchg
aad
(bad)
mov
inc
or
aad
out
sub
jp
jl
scas
or
dec
push
movs
mov
mov
imul
retf
inc
fsubr
aam
retf
(bad)
xor
and
jb
in
es
fsubr
push
mov
data16
pop
pop
or
mov
jmp
mov
mov
inc
xor
lods
mov
out
xchg
test
cli
mov
xor
mov
outs
(bad)
jp
xchg
inc
xchg
pop
lods
push
cmp
xchg
hlt
add
mov
test
add
ret
mov
mov
mov
ins
dec
aam
in
sub
mov
pusha
mov
adc
out
repz
xchg
xor
fs
inc
cmp
test
outs
outs
cwde
xchg
mul
mov
sbb
test
sub
fistp
cmps
xor
sub
stos
mov
fdivr
fistp
jbe
jno
jae
xchg
(bad)
cmp
imul
sbb
cld
inc
mov
xchg
aam
mov
pop
arpl
and
jg
das
(bad)
movs
sbb
jge
mov
mov
jle
pop
retf
(bad)
fisttp
or
jo
aad
dec
or
mov
ret
or
daa
shl
loopne
mov
int3
cmp
imul
pop
pop
jecxz
test
iret
inc
pop
cmp
call
out
and
lock
sbb
das
int3
lahf
sti
loopne
mov
scas
(bad)
or
lds
in
mov
imul
fstp
sub
pop
data16
add
mov
popa
into
push
jle
push
sbb
mov
dec
imul
jmp
jge
into
jns
cmps
lds
mov
(bad)
out
fbld
jne
inc
dec
jbe
test
mov
loopne
or
outs
fidivr
dec
add
iret
push
xor
xor
cmp
mov
js
leave
imul
jae
pop
mov
sbb
pop
in
pop
jbe
adc
or
aam
ins
push
cvtps2pi
push
add
es
adc
adc
jno
cmp
stc
cwde
loope
push
xchg
mov
dec
push
lahf
mov
test
cdq
ins
dec
adc
out
jge
test
xchg
lar
enter
iret
jle
ins
mov
pop
add
loopne
lock
pushf
sti
mov
dec
mov
jno
push
nop
icebp
or
jp
pop
rcr
sti
mov
sbb
dec
add
xchg
ret
add
inc
pop
fsubp
call
fsubr
imul
sbb
(bad)
ret
jg
add
fbld
and
cli
jecxz
dec
cmps
outs
aad
cld
(bad)
sub
dec
arpl
outs
std
dec
jne
inc
out
xchg
jne
test
mov
leave
bound
loope
fmul
gs
das
cmp
mov
rcr
add
bound
pop
ins
and
in
call
inc
sar
and
push
or
enter
mov
adc
jbe
xchg
or
dec
jle
lds
rcl
inc
or
push
add
ret
dec
call
add
inc
faddp
call
jmp
call
inc
cmps
mov
pop
push
sahf
clc
push
xchg
sahf
mov
cmp
int
push
mov
cmp
and
out
adc
test
stos
cli
add
les
mov
pop
push
sti
dec
bound
in
out
gs
lea
mov
dec
sub
jg
add
mov
mov
sahf
sub
out
xor
lods
lods
call
mov
cdq
movs
rcr
jmp
inc
mov
imul
add
lea
(bad)
leave
(bad)
dec
fdiv
add
js
mul
adc
sti
lods
shl
push
dec
xchg
cld
(bad)
jbe
sub
dec
jne
jbe
pop
into
stos
mov
div
lahf
div
popf
and
sahf
pop
add
clc
adc
or
push
clc
test
mov
loope
jp
mov
or
sbb
jge
std
lea
mov
inc
or
xor
into
inc
mov
xor
mov
mov
add
inc
push
xchg
hlt
xchg
dec
icebp
mov
adc
push
adc
dec
ficomp
addr16
mov
pusha
mov
jnp
dec
vpsrlq
push
sbb
call
jns
adc
inc
add
cmp
pop
in
fsubrp
ins
cmp
and
pop
mov
lea
sbb
xor
pop
xchg
cld
mov
mov
xchg
and
mov
(bad)
cmps
pop
dec
and
outs
and
mov
pop
push
fst
mov
test
or
cmp
test
ss
adc
shl
inc
jmp
or
cmp
fstp
fs
fdiv
stos
stos
sbb
stos
cmps
fs
sbb
jns
ja
jbe
aaa
mov
xchg
cwde
cld
mov
(bad)
pop
sub
pop
in
adc
or
push
test
push
push
sbb
fadd
inc
lahf
loop
adc
cmps
rcl
into
ds
add
dec
arpl
xchg
sub
das
aaa
adc
fcmovne
and
lods
imul
push
and
inc
xor
jge
jns
cmp
aam
movs
out
push
pop
popf
mov
adc
jbe
std
pop
mov
pop
adc
retf
mov
and
fild
adc
fisttp
jo
loop
ss
pop
ss
stos
(bad)
xor
outs
int
ins
ret
int
dec
ss
inc
fcomp
or
cmps
fcomp
and
jb
scas
or
stos
cmc
out
sub
jmp
movs
push
mov
mov
jecxz
inc
mov
jae
sar
adc
or
hlt
idiv
adc
mov
dec
sbb
inc
jmp
out
ja
inc
not
loope
inc
cdq
mov
xchg
cmp
dec
add
bound
jns
addr16
and
es
mov
mov
dec
xchg
pop
xlat
adc
or
out
xor
sub
cmp
cmp
sub
sub
sub
xor
stc
faddp
ret
mov
or
or
(bad)
aam
enter
loope
inc
fnclex
mov
leave
leave
fisttp
in
adc
inc
pop
dec
call
push
es
icebp
xchg
pusha
xor
add
out
or
xchg
fcom
(bad)
fild
test
mov
lock
sub
push
xor
mov
cmc
cld
nop
xchg
mov
inc
dec
hlt
das
stos
neg
nop
sti
lock
stos
retf
leave
mov
daa
cmp
scas
aas
or
inc
icebp
xor
ret
mov
push
dec
dec
dec
(bad)
add
pushf
xchg
inc
daa
retf
lds
jbe
pushf
mov
jge
popa
jb
lods
xchg
fs
(bad)
call
sti
cmp
push
sbb
clc
sub
add
pusha
fmul
shl
lea
retf
mov
shr
pop
cs
push
xchg
inc
cmp
and
std
mov
add
dec
inc
cmp
stc
bound
xchg
adc
and
jl
ficomp
lds
xor
sbb
pop
xchg
std
sub
jo
fnstcw
mov
jmp
(bad)
lods
call
stos
xor
jns
loope
pusha
dec
mov
jmp
jmp
or
sbb
mov
sub
sub
adc
popf
cmp
stc
or
jmp
fdiv
dec
out
adc
dec
neg
mov
jmp
or
fdiv
ret
pushf
xchg
pop
cmps
xchg
daa
push
inc
mov
xchg
ret
scas
in
outs
xor
sbb
push
mov
daa
xor
test
pusha
movs
(bad)
movs
mov
cmc
mov
push
das
call
lods
push
addr16
ins
outs
in
aad
fcom
push
and
xlat
add
or
loope
mov
sbb
or
dec
xor
push
cwde
adc
xchg
pop
xor
sub
mov
mov
inc
mov
outs
sbb
xchg
mov
fwait
jmp
cmc
jecxz
dec
xor
xchg
jg
push
or
mov
pop
lds
or
adc
xchg
(bad)
popa
jmp
mov
inc
xchg
inc
push
jecxz
(bad)
stos
dec
scas
and
movs
cmp
or
ud0
pop
mov
cs
mov
mov
jno
adc
sbb
xchg
cmp
outs
jae
hlt
int
cld
mov
and
into
rol
mov
dec
push
nop
cld
lahf
mov
push
cmp
pop
sub
ret
pop
dec
ins
push
cmp
rcr
bound
inc
push
jp
movs
ret
adc
xor
jne
push
(bad)
or
lahf
loope
xor
push
pop
mov
fadd
adc
xchg
in
mov
mov
fwait
jno
mov
add
hlt
or
or
scas
xchg
outs
cmp
push
shr
pop
cmp
into
or
ss
mov
add
dec
hlt
popa
push
std
loopne
setl
mov
inc
loopne
or
cmp
jnp
cwde
gs
in
xchg
xor
int3
fist
push
mov
adc
js
bound
sub
mov
repnz
rol
jmp
mov
jecxz
pop
cmps
dec
pop
xor
(bad)
out
rcr
xlat
ret
cli
add
aaa
ins
dec
push
loopne
arpl
(bad)
or
jg
xchg
mov
js
adc
rol
fld
push
xchg
push
lods
out
adc
aad
sti
and
retf
mov
xchg
gs
mov
and
es
jbe
cmps
jp
pop
mov
xor
mov
js
(bad)
mov
rol
sub
mov
xor
int3
lods
sub
hlt
loop
jecxz
and
sar
nop
daa
movs
mov
jp
aad
jne
dec
call
retf
scas
test
xchg
imul
lods
pushf
popa
add
mov
add
hlt
shl
ins
xchg
iret
mov
adc
dec
and
jmp
cld
mov
in
pop
push
cmp
fidivr
jmp
inc
jbe
or
jecxz
xchg
test
push
call
scas
dec
mov
(bad)
push
fidivr
mov
test
mov
scas
sub
daa
lds
aas
mov
in
mov
pop
sahf
mov
shl
adc
(bad)
repz
or
or
imul
cmp
icebp
mov
jmp
pop
and
imul
out
xor
sbb
xlat
ficomp
fnstsw
jmp
sahf
pop
retf
dec
cmp
pop
dec
push
jg
out
pushf
mov
pop
mov
fldcw
retf
mov
jno
push
push
sub
or
jl
cmp
imul
xor
dec
scas
nop
jle
pop
sub
pop
jb
arpl
add
(bad)
stos
xchg
mov
loopne
in
push
ss
in
adc
daa
mov
les
pop
cs
stos
add
(bad)
push
dec
sub
es
push
cdq
xchg
mov
repnz
cmps
push
(bad)
retf
call
fs
push
cmps
pop
rcl
xchg
inc
and
sub
or
push
cmp
mov
xchg
test
out
sub
fnstsw
ret
mov
jecxz
out
pop
int3
out
stos
shr
dec
cmp
sbb
and
cdq
pop
call
push
dec
aam
stc
xchg
push
inc
add
jg
inc
inc
mov
rcl
shr
mov
jecxz
dec
aam
xchg
xchg
rcl
arpl
or
mov
out
cmp
test
add
out
xor
iret
push
imul
bound
pop
xchg
int3
inc
pop
ret
mov
mov
and
xchg
cwde
fst
bound
adc
aas
add
cmp
jle
repz
xchg
jecxz
cmp
and
xor
int3
sub
sbb
mov
cmc
xor
stos
repnz
(bad)
out
xor
jnp
pushf
cdq
movs
std
lock
cmp
loop
(bad)
aaa
or
icebp
push
test
fsubp
lock
(bad)
push
in
add
add
int3
popf
inc
cmps
fld
popa
sbb
(bad)
and
hlt
mov
add
add
mov
push
je
mov
mov
dec
jo
cwde
jle
popf
sub
dec
push
xor
aaa
jg
test
jle
mov
les
dec
ret
add
aad
(bad)
pop
retf
cld
in
adc
push
in
mov
xor
test
mov
ret
movs
or
inc
jne
jp
pop
and
sbb
sub
sub
test
out
sbb
mov
mov
pop
ja
mov
and
ret
mov
inc
dec
nop
push
popa
cmp
popa
inc
enter
cmp
or
sti
xlat
dec
mov
mov
imul
jae
mov
not
scas
pushf
repnz
daa
rcl
or
dec
gs
(bad)
arpl
call
cli
in
mov
fdiv
stos
int3
sbb
scas
push
push
xchg
jp
push
jmp
inc
push
into
retf
mov
cmp
movs
lods
pusha
xchg
inc
inc
je
cs
adc
xchg
(bad)
jno
loopne
ds
fs
sbb
imul
ret
ror
(bad)
push
leave
shl
add
cli
push
mov
adc
mov
pusha
and
mov
pop
in
inc
pushf
repnz
inc
mov
movs
aas
sub
dec
pop
je
bswap
mov
in
mov
push
in
jns
repnz
daa
fstp
adc
mov
loope
inc
dec
add
jbe
cli
mov
inc
jl
es
push
pusha
xor
push
repz
rcl
daa
pusha
mov
cmp
pop
in
imul
jb
cmp
sbb
(bad)
cmps
lods
imul
push
pop
or
dec
jecxz
scas
mov
mov
sub
fidiv
dec
aam
mov
pop
into
mov
dec
inc
cmp
pop
lock
xchg
ins
and
xor
cmps
sbb
dec
xor
sub
push
aas
inc
pop
jae
jmp
cmp
mov
ins
pop
add
mov
das
cmps
(bad)
rcr
cld
push
jecxz
xor
outs
test
bound
test
fcomp
jmp
cmp
xchg
jb
push
out
ss
push
xor
inc
movs
jnp
fwait
sub
jmp
pop
or
sbb
jge
or
pop
and
cmps
ret
jp
retf
fucomp
inc
ficomp
sbb
nop
stos
inc
or
push
nop
and
clc
cmp
jg
cwde
xchg
sub
xchg
rol
mov
loop
movs
or
(bad)
dec
push
mov
pushf
inc
lea
pushf
inc
mov
adc
or
mov
adc
sar
mov
mov
add
out
sub
and
mov
aaa
loop
inc
sub
iret
not
sub
fsubr
and
mov
out
hlt
je
xor
add
mov
jmp
(bad)
cmp
arpl
pusha
sub
ins
lahf
lods
pop
xor
mov
in
xchg
mov
icebp
pusha
fimul
mov
push
popf
js
int3
into
mov
leave
and
push
imul
in
xchg
out
arpl
ffreep
xchg
scas
fidivr
jnp
and
or
les
pop
mov
and
in
sahf
xor
jmp
sub
add
pop
mov
xchg
gs
js
pop
dec
(bad)
dec
test
nop
or
mov
sbb
into
retf
and
sahf
stos
shr
ret
aas
and
inc
mov
shl
inc
mov
out
or
inc
fnsave
imul
stc
les
sar
add
imul
and
ror
dec
rcl
das
pop
sub
inc
or
aaa
push
mov
call
daa
push
arpl
stos
or
fs
lea
retf
jp
shl
dec
(bad)
hlt
jp
cmp
stos
mov
div
in
dec
pop
mov
sub
in
push
xchg
fcomp
int
(bad)
pop
adc
fcomi
xor
cmps
cmp
lahf
outs
sbb
mov
retf
push
jno
mov
push
dec
shl
(bad)
mov
rcr
repz
fiadd
xchg
ficomp
js
push
cli
inc
dec
clc
adc
dec
jge
dec
push
and
int3
sti
ins
lds
xchg
xchg
and
aas
test
fwait
cmps
int
clc
jne
test
jmp
inc
ins
lahf
sar
mov
retf
inc
mov
dec
inc
dec
and
into
lods
xor
lds
add
dec
ds
mov
cmc
neg
add
dec
int3
push
inc
push
jb
sub
rcr
adc
ss
stos
leave
sub
fstp
add
aaa
fidivr
test
or
pop
jb
adc
mov
pop
dec
cmps
dec
std
mov
mov
fs
cmp
stos
pusha
inc
mov
inc
push
pop
dec
(bad)
sbb
mov
push
jmp
repz
adc
and
imul
rol
(bad)
mov
daa
mov
jl
add
xor
push
push
cmp
sti
scas
or
pop
sahf
pushf
mov
addr16
call
aaa
xchg
(bad)
pop
mov
mov
in
inc
jge
mov
outs
outs
retf
xlat
cmp
(bad)
call
jp
sbb
mov
je
in
dec
dec
out
mov
push
fisub
fimul
dec
lock
adc
pop
cwde
xchg
sub
out
ins
jbe
lock
sbb
sbb
jo
int
ds
jno
mov
cmp
stos
fcomp
sbb
lods
je
jmp
jnp
push
mov
mov
and
sbb
rol
es
fnsave
add
div
sub
pushf
test
daa
mov
cdq
fimul
xchg
imul
push
dec
jne
repz
mov
and
push
cmp
pop
iret
imul
dec
cmc
mov
arpl
imul
fs
mov
data16
sub
ud0
pop
(bad)
out
pushf
cmp
cld
pop
pop
adc
push
aas
out
pop
loopne
xchg
loope
div
mov
push
push
test
leave
hlt
stos
iret
arpl
dec
dec
mov
rcl
(bad)
sahf
xchg
mov
test
adc
push
scas
lock
mov
(bad)
fwait
jle
aaa
(bad)
fwait
outs
xchg
stos
loope
in
shl
fbstp
pop
mov
push
cld
popf
or
push
sub
enter
jp
cmps
movs
pop
pusha
fstp
cli
sti
sbb
clc
ins
in
aam
push
push
cmp
loopne
out
scas
(bad)
jb
lds
stos
push
je
cmp
cmps
inc
pop
nop
and
sub
push
sahf
div
aaa
loopne
jns
xor
sti
lea
xchg
clc
fstp
neg
jmp
in
sar
inc
dec
test
nop
push
or
(bad)
mov
jmp
(bad)
call
jbe
(bad)
jmp
dec
(bad)
add
int
and
arpl
(bad)
jmp
pop
mov
or
sbb
(bad)
adc
push
js
popf
repz
iret
or
and
in
(bad)
mov
xchg
jne
in
fst
sti
jns
xchg
mov
pop
jecxz
repz
adc
clc
bound
das
push
pusha
popf
call
popa
cmp
push
popf
dec
cmp
stos
xchg
mov
or
push
xchg
push
and
or
pop
cmp
call
mov
icebp
js
daa
cmp
scas
lea
cmp
test
and
jns
xor
jp
sbb
sbb
mov
mov
inc
xchg
jns
fistp
pusha
aam
das
xor
xchg
inc
dec
xlat
gs
adc
jge
sbb
cmps
or
jge
stos
jnp
fdiv
mov
(bad)
xchg
mov
imul
xor
inc
xor
push
aam
xchg
push
stos
mov
and
jbe
sbb
movs
mov
cmp
stos
dec
jp
pop
ret
xor
xor
cmp
jb
int3
rcl
lods
sub
fcomp
int
mov
mov
retf
and
stos
iret
js
mov
xchg
mov
fdivr
aas
fsub
mov
pop
iret
lods
test
std
xor
repnz
mov
mov
inc
jae
push
test
sbb
jp
pop
lods
mul
mov
sar
shl
pop
icebp
cmps
mov
ret
sub
and
inc
out
stc
pop
xor
jmp
xor
and
stos
mov
repz
movs
pop
imul
pop
aaa
and
mov
imul
pop
adc
int3
movs
xchg
scas
lods
push
dec
popf
icebp
xchg
cs
imul
mov
sub
mov
(bad)
cmp
mov
push
lds
stos
mov
xchg
movs
in
pop
mov
aaa
sbb
jecxz
shl
in
sahf
(bad)
or
mov
aas
xchg
cs
adc
xor
push
push
pop
mov
stc
dec
lods
push
mov
sbb
fisttp
cmc
add
sti
imul
push
js
scas
mov
sahf
fistp
gs
mov
bound
or
in
jo
mov
repnz
cmp
bound
add
lods
test
std
out
cmps
outs
xor
mov
(bad)
mov
cmc
sub
jecxz
movs
push
shl
out
dec
jo
repz
scas
sub
sub
cmp
mov
mov
dec
or
adc
adc
int3
xchg
fwait
dec
sahf
sbb
lods
pusha
xchg
daa
jo
dec
dec
push
jns
dec
xchg
xchg
xlat
dec
or
into
fcom
add
aas
cmp
enter
push
xlat
enter
mov
stc
clc
and
retf
cmp
sub
xor
inc
out
mov
and
fxch
mov
dec
cmps
test
out
cmp
cmp
mov
fadd
mov
(bad)
fsqrt
inc
int3
adc
ins
adc
movs
push
lds
jb
push
je
jl
(bad)
leave
and
mov
sbb
cmp
dec
je
pop
fs
xor
lock
xchg
stos
ja
push
movs
cli
mov
inc
add
jmp
ss
std
pushf
fadd
scas
mov
sub
mov
add
cmc
aas
sub
mov
or
not
ffree
push
mov
imul
sbb
mov
sub
addr16
aad
icebp
nop
mov
sbb
jne
loope
nop
int
and
pop
push
push
pushf
add
xchg
cdq
mov
(bad)
jmp
push
dec
sub
cs
push
jne
jbe
in
stos
rcr
pop
jecxz
mov
push
fst
mov
mov
aas
xchg
mov
retf
test
leave
cmp
dec
jns
mov
jge
and
sahf
fst
jl
adc
pop
data16
mul
mov
dec
pop
xchg
adc
pop
cmps
sbb
and
mov
xchg
mov
push
test
leave
retf
gs
(bad)
clc
mov
test
ins
push
mov
fwait
int3
jmp
dec
imul
push
push
mov
(bad)
fsub
push
mov
xor
popf
pop
and
xchg
mov
test
stos
fild
pusha
xchg
pop
stos
add
jae
inc
js
pop
call
mov
fs
or
xchg
dec
js
or
std
aad
leave
sub
rol
cmc
daa
push
lahf
sbb
push
jecxz
cli
sbb
(bad)
(bad)
mov
arpl
scas
lock
inc
jle
test
cmc
and
and
call
adc
push
test
loope
inc
and
leave
dec
in
sti
add
inc
and
fist
push
sub
dec
dec
in
sbb
jmp
fmul
inc
mov
or
(bad)
jmp
cmp
test
or
jbe
call
(bad)
cmp
ret
and
(bad)
aaa
dec
leave
imul
data16
and
fwait
ja
dec
shl
push
pop
hlt
xor
jb
mov
sbb
fisub
jmp
xor
sub
push
daa
add
jnp
loope
dec
push
sub
jmp
js
in
inc
stos
(bad)
repz
fidivr
dec
and
mov
adc
pop
pop
push
xchg
jb
inc
js
sahf
out
mov
iret
mov
sbb
mov
dec
data16
je
iret
pop
and
sbb
out
lock
pop
or
repz
mov
iret
dec
and
cmp
inc
mov
(bad)
adc
iret
cli
fstp
mov
mov
push
fld
enter
daa
dec
aad
out
movs
sbb
jge
sti
cmp
xor
in
sbb
imul
leave
mov
cmps
jmp
push
xchg
(bad)
fsub
retf
test
shr
and
iret
dec
out
fs
pop
outs
cmps
xchg
cmp
xor
jmp
mul
push
push
push
or
jecxz
jnp
xchg
push
jne
push
cmc
push
mov
sbb
or
add
mov
das
test
add
push
mov
push
dec
jbe
call
retf
imul
fst
jl
fsin
mov
cmps
aaa
jbe
jb
pop
pop
xchg
adc
dec
repnz
cmps
call
rcl
jo
xor
frstor
pop
nop
or
mov
cmps
hlt
and
mov
je
jne
cmp
mov
jae
inc
or
test
sub
mov
jg
push
repnz
jl
xchg
test
shl
leave
xlat
das
int
dec
push
pop
fnsave
(bad)
sti
(bad)
in
jo
sub
and
push
pushf
cmp
out
xor
fstp
(bad)
retf
mov
test
jae
cmp
xor
xor
xchg
mov
enter
push
sti
mov
retf
jecxz
mov
ror
cmp
cmp
(bad)
xor
jmp
cdq
popf
iret
pop
(bad)
js
cmp
loop
mov
push
and
adc
lods
jns
cmp
push
mov
imul
lods
jnp
jp
push
popa
cli
pop
xor
and
sbb
data16
clc
inc
repz
scas
es
add
in
jnp
popa
out
xchg
jle
arpl
sbb
test
dec
cwde
push
movs
dec
sub
mov
adc
popf
loop
fmulp
fadd
into
bound
mov
pop
stc
test
call
mov
out
es
lods
cmps
jbe
xchg
loop
pop
cmc
pop
mov
push
xor
ss
mov
(bad)
xor
lods
out
dec
inc
aam
out
push
loope
in
daa
hlt
and
sbb
mov
inc
or
mov
push
sbb
jne
adc
test
sub
das
shl
daa
xchg
ins
out
add
cmps
xchg
fst
mov
pop
(bad)
(bad)
pusha
outs
cmps
arpl
repnz
push
arpl
and
scas
(bad)
pop
jae
lods
or
xor
loopne
frstor
mov
call
int
adc
imul
jmp
pop
ds
push
outs
dec
xchg
repz
or
in
xlat
repnz
xchg
push
test
sbb
inc
sbb
test
jb
(bad)
stc
push
pop
out
test
mov
jecxz
pop
icebp
fwait
pop
inc
in
retf
pop
sbb
jo
cmc
jo
xor
mov
push
mov
outs
shr
add
push
stos
push
ror
add
imul
dec
and
lods
bound
(bad)
mov
dec
loop
and
sbb
dec
popa
xchg
lahf
leave
mov
mov
fistp
inc
or
(bad)
repz
xlat
sbb
inc
pop
cmp
shl
adc
lods
sub
add
fiadd
pop
mov
je
in
cmp
jmp
add
mov
xor
jnp
dec
pop
mov
out
cli
inc
hlt
xchg
daa
fnstcw
and
imul
in
adc
jnp
movs
movs
rcl
cwde
jg
push
in
iret
pop
and
push
out
xchg
inc
(bad)
mov
xchg
push
psrad
ins
xchg
les
fmul
aaa
rol
out
jbe
dec
or
cmp
mov
pop
and
mov
shr
pop
inc
jae
pop
pop
jns
pushf
xor
scas
xor
xchg
mov
lods
ds
jne
and
add
cmp
jb
adc
dec
lods
pop
ins
(bad)
hlt
xchg
mov
sbb
adc
mov
scas
stos
jecxz
xchg
ins
psubd
test
movs
fdiv
shr
jae
dec
cmps
xor
jle
push
or
mov
movs
dec
leave
adc
out
mov
or
mov
mov
or
sbb
dec
inc
inc
addr16
dec
inc
inc
mov
mov
push
lods
adc
not
xor
fisubr
in
lods
sbb
xchg
gs
addr16
mov
mov
mov
les
dec
xchg
je
xchg
clc
jmp
lods
sub
call
pop
lods
(bad)
adc
push
inc
mov
pop
mov
or
sar
pop
jmp
cmp
inc
jne
or
repz
inc
adc
scas
xchg
and
aas
xchg
loope
or
test
jnp
cmpxchg
cwde
and
xchg
arpl
popf
sbb
mov
lahf
arpl
scas
and
sbb
int
push
fdivr
js
cmp
mov
inc
push
and
fwait
or
jg
dec
cmp
outs
(bad)
xlat
call
rol
sub
xor
ins
or
add
sub
add
xchg
push
jp
jne
xchg
mov
outs
out
retf
xor
sbb
or
hlt
xor
test
pop
arpl
repnz
je
jg
out
daa
or
jecxz
cwde
sbb
jmp
in
fcomp
dec
call
mov
adc
sub
or
leave
or
dec
loope
and
mov
mov
cmp
clc
push
pushf
mov
scas
fwait
mov
in
clc
arpl
test
ds
xchg
mov
ins
out
xchg
mov
push
scas
sbb
in
add
popf
daa
jle
outs
adc
pop
mov
out
clc
pop
fs
mov
cmp
movs
(bad)
mov
fwait
xor
xchg
add
or
mov
in
jnp
ins
sbb
pop
jno
scas
out
and
mov
or
pop
mov
fistp
jecxz
xchg
stos
(bad)
pushf
call
out
ins
mov
jecxz
push
pop
js
addr16
push
or
pop
mov
stc
hlt
fnsave
out
mov
cmps
ficom
repz
jne
add
add
xchg
stc
int
out
mov
pop
adc
out
sbb
sbb
jae
mov
sbb
pop
push
jge
mov
xchg
mov
mov
loope
push
push
out
cmp
stc
fisttp
pop
push
loope
or
mov
xchg
pop
cwde
enter
stos
movs
icebp
xchg
aas
push
nop
sahf
fs
popa
xchg
out
pop
dec
mov
jecxz
push
cmp
(bad)
(bad)
pop
or
push
pop
inc
jg
xchg
lods
xcrypt-ecb
cmps
mov
and
idiv
ja
xor
mov
(bad)
and
or
les
jnp
or
mov
jecxz
adc
out
clc
arpl
adc
daa
jb
cmps
jg
mov
mov
mov
ins
or
xchg
shl
sbb
movs
rcr
or
add
add
and
sub
cmc
aaa
mov
jno
ins
repnz
add
(bad)
mov
stc
push
sbb
xchg
fisttp
sbb
and
inc
mov
enter
adc
xor
jmp
sbb
add
ret
ss
mov
xchg
xchg
push
lsl
test
inc
jle
xlat
mov
add
call
xor
scas
fs
xor
in
mov
pushf
clc
xchg
inc
icebp
cmp
push
ins
adc
enter
adc
arpl
dec
mov
sti
sub
nop
mov
mov
and
jmp
xchg
cwde
cdq
sbb
jl
int
js
movs
fs
nop
sbb
push
mov
and
mov
dec
jmp
call
xlat
push
cmp
or
mov
mov
or
xchg
retf
mov
test
xor
popa
jb
add
aam
lock
ds
in
xor
mov
xor
jbe
xor
dec
dec
jae
fbstp
stc
test
lods
lahf
xchg
add
pop
cld
loope
and
cmps
xor
sbb
outs
sbb
loopne
fisub
mov
xchg
inc
imul
fsub
hlt
iret
(bad)
mov
mov
(bad)
xchg
mov
or
call
lea
int3
mov
jmp
repz
neg
mov
pop
ins
test
mov
or
xchg
not
xchg
pop
in
xor
test
stc
dec
fcmovne
mov
mov
and
ret
int
sub
add
push
in
xchg
ja
leave
stc
inc
push
daa
xchg
sub
cmc
ror
cmp
xor
or
mov
call
mov
cwde
sbb
sub
imul
ins
push
inc
push
js
mov
mov
out
xor
sbb
sbb
not
test
mov
movs
mov
aas
adc
leave
push
pop
jnp
or
xchg
mov
push
out
je
and
mov
push
adc
xchg
mov
std
jmp
cmp
shl
faddp
adc
sbb
mov
sbb
jp
add
das
jmp
call
fadd
mov
xchg
pop
pushf
pop
scas
mov
retf
hlt
push
jb
movupd
cmp
dec
pop
std
fistp
out
mov
dec
scas
lods
mov
cmp
scas
fdiv
test
icebp
mov
cs
cli
push
(bad)
adc
(bad)
stc
repz
mov
out
sbb
lahf
jecxz
outs
lods
fidivr
retf
popf
sbb
scas
sub
movs
data16
call
xchg
push
and
or
in
test
es
or
cmp
xchg
add
sbb
movs
jp
mov
call
or
cmp
dec
mov
xchg
test
popf
int
xchg
or
dec
in
add
movs
cmc
mov
sbb
hlt
inc
ret
mov
fdiv
xchg
adc
jnp
sub
out
fwait
loop
pop
mov
inc
mov
mov
sbb
movs
inc
stc
hlt
sbb
mov
add
ds
lock
ins
sbb
mov
inc
add
dec
push
clflush
pop
cmp
lds
mov
rcl
or
loop
movs
sub
inc
rol
scas
stos
ins
mov
xchg
cmp
inc
push
fdiv
and
aaa
out
fadd
bound
push
retf
aaa
aaa
sub
retf
or
push
fwait
lods
sbb
test
mov
mov
fadd
call
scas
add
pop
mov
enter
cmc
jno
out
in
dec
out
out
and
add
jl
jnp
pop
pop
and
xchg
ffreep
inc
inc
lods
aaa
mov
imul
shl
gs
xchg
repnz
lahf
movs
loop
dec
(bad)
(bad)
mov
push
stos
mov
dec
push
adc
aas
mov
add
and
mov
popf
mov
sbb
mov
cwde
ret
es
jbe
sub
push
repnz
push
jno
icebp
push
mov
aam
int3
xor
jp
push
pop
push
std
out
ret
dec
movs
pop
fstp
test
aad
adc
fisub
jge
adc
ret
add
std
add
retf
sbb
adc
movs
mov
sbb
sti
mov
cmps
mov
xor
cdq
call
dec
mov
or
push
mov
xchg
iret
(bad)
jmp
dec
rcr
jns
inc
mov
stc
ficom
sub
xchg
or
or
les
popf
scas
mov
push
inc
or
jns
add
dec
dec
xchg
jmp
and
fs
dec
es
mov
fimul
aad
or
and
mov
pop
in
cmp
(bad)
retf
xchg
push
mov
sahf
lods
xlat
pop
xchg
mov
inc
or
mov
xchg
cmp
mov
xor
fadd
jno
pop
lahf
mov
imul
out
fld
cmp
add
or
shr
jo
adc
add
and
push
mov
jne
jb
dec
clc
adc
cmp
cmp
cmc
xchg
popf
lods
aad
fnsave
xlat
adc
pop
mov
mov
in
mov
loop
movs
or
cwde
jge
pop
out
outs
xor
fsub
cmp
stos
aam
sbb
xchg
(bad)
push
ret
push
or
xchg
add
sub
outs
pusha
out
jns
xchg
out
mov
fsub
pusha
cmp
ret
fcomp
and
mov
fild
popa
mov
sub
loope
push
lods
xchg
xor
retf
xchg
pop
movs
popa
cmp
mov
cmp
movs
mov
push
(bad)
pop
sub
(bad)
out
adc
cld
mov
hlt
xor
inc
jb
(bad)
(bad)
stos
mov
xor
mov
adc
setge
fdivr
fisub
aam
inc
popf
adc
inc
xchg
add
fidivr
ss
out
adc
aas
adc
dec
fnstenv
rcr
stos
ins
mov
stc
jbe
jge
(bad)
sub
add
push
push
retf
dec
push
sub
lds
push
fcmovbe
sti
mov
(bad)
add
lahf
bound
cmp
mov
jmp
jno
adc
sub
push
sbb
loope
les
js
mov
mov
pop
xor
add
pop
fcom
mov
and
lods
jmp
cmps
adc
lods
dec
jno
cmp
and
iret
test
ins
imul
mov
dec
jmp
xchg
sti
int3
dec
adc
scas
xchg
mov
pushf
xchg
mov
pop
lds
push
dec
pushf
retf
lahf
outs
aas
call
in
jecxz
lea
fcomip
push
push
and
dec
dec
sbb
icebp
sbb
dec
and
scas
mov
ficomp
aad
rcr
int
ins
push
(bad)
movs
call
in
(bad)
sbb
test
repz
pop
int
hlt
fs
and
inc
adc
cmps
in
cmp
xchg
mov
das
imul
mov
scas
xchg
retf
push
cld
inc
dec
pushf
je
ins
rcr
xchg
adc
xor
cmps
adc
cmp
sub
mov
stc
lods
sub
adc
not
scas
xchg
nop
xlat
das
mov
adc
ja
mov
stos
xor
enter
shl
(bad)
push
adc
xchg
sar
adc
call
cwde
test
sti
mov
push
and
mov
cld
adc
loope
movs
jmp
repnz
ret
dec
mov
lahf
ds
das
fucomi
push
inc
iret
mov
sub
jnp
enter
movs
pop
clc
icebp
pop
mov
xchg
leave
aad
or
sbb
imul
pop
int3
mov
in
cmp
xor
mov
bound
pushf
mov
xor
cmps
lds
dec
div
mov
dec
mov
dec
je
dec
neg
imul
mov
adc
xchg
lds
and
daa
aaa
jo
mov
shr
mov
push
out
push
inc
pop
(bad)
and
hlt
jecxz
fucomip
aaa
and
push
pop
pop
add
test
arpl
cs
(bad)
jmp
xchg
rol
(bad)
mov
add
sub
mov
dec
xor
pop
mov
stos
nop
mov
jno
ins
mov
cmp
(bad)
cmp
in
xor
es
in
mov
sub
add
pop
xlat
jg
pop
(bad)
inc
add
xor
aas
stos
add
daa
cmps
push
sti
push
icebp
cld
inc
in
sub
sbb
push
imul
mov
mov
cmps
add
xchg
xor
ret
jmp
pop
lea
pusha
jno
loopne
pop
sbb
mov
fimul
mov
and
and
push
ror
adc
loopne
adc
ret
dec
adc
cwde
addr16
pop
inc
(bad)
fucomip
fnstsw
jl
test
pop
sbb
repz
dec
and
test
lock
out
sub
in
mov
in
aad
shl
stc
retf
repz
pop
retf
inc
jns
adc
clc
mov
jge
outs
dec
mov
add
xchg
push
bound
(bad)
mov
adc
push
mov
aaa
les
adc
mov
ins
mov
cmps
iret
adc
jmp
in
fucomi
mov
push
mov
stc
aam
jp
retf
dec
repz
xor
mov
out
sbb
xchg
loope
pop
pop
push
fidivr
fisub
loop
mov
bound
in
mov
(bad)
fcomp
imul
(bad)
stos
mov
mov
mov
loop
test
bnd
adc
test
imul
out
movs
xor
pop
clc
adc
div
shl
das
jle
dec
dec
shl
push
jnp
data16
xchg
add
stos
in
outs
sbb
fadd
pop
sahf
fs
aad
dec
outs
pusha
movs
call
cvtdq2ps
mov
nop
popf
addr16
arpl
test
xor
cmp
jmp
adc
sbb
idiv
and
push
stos
sbb
xchg
in
fbld
adc
cmp
sub
sbb
out
and
push
scas
xor
jnp
sub
sbb
rep
push
inc
pop
and
cli
or
test
jge
and
inc
(bad)
cmp
pop
add
push
push
or
es
ret
pop
push
pop
(bad)
pop
push
adc
ja
push
mov
push
and
mov
shl
add
mov
popa
cmc
mov
or
lea
imul
push
mov
pop
jecxz
pop
vmread
or
mov
mov
lea
sbb
and
cmp
ret
int
mov
(bad)
fs
or
das
push
call
adc
arpl
inc
adc
scas
cmp
mov
shr
mov
inc
mov
cs
lock
push
scas
ret
pop
add
xchg
xlat
sbb
cmp
pop
(bad)
adc
xchg
pop
outs
adc
call
jns
pop
push
and
push
pop
push
jge
mov
popf
ds
leave
shl
outs
cdq
movd
popf
mov
lock
mov
jno
sub
stc
adc
xor
inc
dec
and
int
jae
outs
and
sub
push
repnz
aaa
outs
in
inc
sub
push
sub
xor
adc
push
cwde
in
xchg
add
imul
push
test
ds
mov
jp
ret
add
loop
sub
js
gs
xlat
xor
or
mov
inc
dec
push
mov
push
fs
cmp
push
adc
ss
outs
xlat
push
loop
clc
jne
je
jno
shl
jle
mov
inc
lock
(bad)
push
stos
aad
jmp
inc
cmp
jmp
mov
and
in
sbb
jne
push
add
xor
sub
xlat
cld
in
push
mov
test
push
loope
(bad)
jno
leave
in
aaa
lock
loopne
clc
(bad)
in
xchg
ficom
push
inc
leave
cmp
fcom
push
out
push
movs
pop
gs
jmp
pop
(bad)
xor
push
sbb
sub
dec
inc
jmp
(bad)
scas
(bad)
jnp
xor
mov
sar
xchg
pusha
push
mov
sbb
call
mov
mov
sbb
out
sub
sbb
jg
loop
lock
mov
or
dec
xor
or
cmps
in
xchg
xor
pusha
rcl
les
mov
and
adc
cmps
mov
ss
cmp
popa
rcr
mov
sahf
xlat
xchg
inc
fidiv
jne
ficomp
mov
fs
push
ret
xchg
ds
mov
leave
xchg
cmp
out
fxch
pop
in
div
or
retf
aaa
sub
mov
dec
int3
test
pop
jmp
jbe
jo
and
aas
retf
cmc
ins
mov
leave
push
lea
mov
lds
xchg
push
adc
repnz
retf
jle
ja
mov
xor
mov
adc
mov
inc
mov
loopne
or
xor
or
or
sbb
pop
sahf
bound
inc
ss
inc
xchg
retf
or
aaa
(bad)
bound
into
pop
icebp
imul
std
call
jo
mov
shl
test
hlt
push
xor
mov
rcl
xchg
cwde
xchg
test
into
shl
add
cwde
popa
sti
sbb
pop
retf
xchg
mov
push
(bad)
repnz
cmp
mov
push
jmp
jmp
push
add
jp
sub
or
stos
and
adc
in
ret
jle
in
bound
jne
pusha
or
(bad)
outs
test
popf
mov
shl
ficomp
inc
pop
jae
stos
mov
test
setle
dec
loop
int
push
sbb
out
xchg
or
pop
scas
ins
mov
dec
xor
add
sub
adc
enter
mov
stc
mov
add
imul
lods
mov
cs
sub
pop
and
stos
movs
cmps
pop
call
fcmovbe
shl
inc
daa
ror
adc
push
ja
fdiv
jecxz
call
(bad)
rol
mov
aad
or
jo
in
xlat
fmul
fcom
in
push
loopne
in
dec
lods
xchg
xor
or
(bad)
jnp
xchg
cmp
and
fst
ret
pop
jne
stc
xchg
xchg
sbb
movs
jns
inc
pop
mov
das
jo
jmp
xchg
xlat
arpl
(bad)
lods
iret
xchg
cs
test
push
enter
lods
sub
sub
push
mov
xrelease
fist
cmp
pop
int
leave
jp
sub
loopne
add
adc
sbb
(bad)
call
in
sub
and
add
jl
adc
pop
sti
stos
cli
mov
js
scas
sub
fisubr
jmp
mov
cdq
ret
test
stos
rol
jbe
outs
mov
imul
(bad)
adc
adc
outs
sbb
add
xchg
sub
lea
mov
jmp
or
hlt
jmp
mov
sbb
pop
jmp
ins
test
and
pop
ss
ds
retf
pop
jne
loopne
cmp
add
in
popf
pushf
lods
es
sahf
push
scas
ja
lahf
cmps
cld
sti
mov
fwait
xor
fwait
imul
aad
lods
jge
sar
dec
cli
std
sbb
xchg
mov
les
xor
lods
shr
loope
cli
dec
retf
sbb
test
mov
pop
das
aas
aam
test
enter
mov
sub
sub
fidivr
sahf
push
mov
jmp
mov
call
sub
and
ds
cmp
sbb
adc
xor
pop
fdiv
gs
cmc
cmp
mov
retf
mov
dec
jbe
aad
movs
movs
push
jne
das
mov
and
imul
daa
outs
(bad)
(bad)
adc
pop
jnp
pop
pop
cmps
inc
popa
imul
cwde
sti
ficom
test
lods
stos
adc
addr16
(bad)
inc
jmp
mov
jg
pop
dec
hlt
test
ja
retf
cwde
jns
jg
aam
stc
mov
rcr
lock
in
adc
aad
jmp
cmp
fucom
movs
mov
loop
jl
bound
test
xchg
xchg
in
jo
pop
push
hlt
test
xor
ss
stc
in
xor
inc
inc
mov
add
pop
neg
mov
sbb
adc
sub
adc
mov
mov
movs
sbb
or
sbb
test
jno
mov
cmps
jg
or
xchg
stos
and
pop
xchg
arpl
mov
(bad)
adc
add
push
push
inc
add
cmp
std
pop
retf
outs
jmp
dec
lock
or
cmps
push
jge
mov
dec
jno
stc
pop
push
inc
scas
inc
mov
sbb
aaa
mov
pop
adc
adc
jp
mov
ret
(bad)
outs
add
das
ret
arpl
(bad)
nop
and
add
jmp
std
xor
adc
repnz
aaa
jae
mov
in
or
(bad)
cmp
data16
fucomi
xor
retf
xor
lods
jb
pop
cli
or
inc
rol
fstp
xchg
dec
mov
cmc
ja
hlt
xor
aaa
fdivr
pop
bound
cmp
mov
out
cmps
stos
imul
jp
sahf
jnp
xchg
bound
inc
jb
jmp
test
jg
xchg
jge
and
inc
mov
jmp
jbe
int3
mov
into
sub
inc
scas
gs
movs
ret
test
mov
or
sbb
sub
fnstenv
sub
xchg
repz
adc
dec
adc
cs
arpl
imul
mov
sub
in
xor
cmp
loop
cmc
ficomp
movs
pusha
addr16
aaa
in
adc
inc
lods
ds
outs
add
xchg
rcr
and
adc
sub
mov
imul
xor
adc
pop
fdivr
scas
sub
hlt
rol
stos
lock
and
jbe
mov
add
xor
fcom
jmp
fnclex
mov
and
popf
jmp
shr
adc
mov
je
pop
adc
jmp
inc
retf
pop
fst
fwait
iret
or
imul
test
add
cld
add
fdivr
ss
fucomi
out
mov
fwait
jp
popa
adc
add
scas
jecxz
outs
fsub
imul
outs
and
push
pop
jnp
fcom
or
pusha
cld
stos
jmp
outs
and
mov
scas
pop
jle
cli
adc
leave
inc
pushf
mov
or
sub
jbe
jg
mov
ret
dec
int3
adc
out
rcl
outs
fidivr
test
movs
sbb
test
and
adc
ror
push
cwde
mov
add
mov
or
and
inc
loope
push
outs
popf
mov
mov
cli
add
in
adc
or
cmp
inc
jmp
cmp
outs
ins
xor
test
sub
loop
lods
mov
cmp
push
icebp
sbb
mov
or
into
adc
mov
mov
(bad)
test
cmp
data16
or
fistp
sub
(bad)
imul
push
shr
xchg
mov
call
inc
mov
xchg
mov
cmc
cdq
das
pusha
push
pop
(bad)
or
inc
push
mov
add
xor
inc
jmp
pop
cdq
popa
(bad)
(bad)
fisubr
pushf
cmp
mov
cmp
les
sub
popf
outs
test
cmp
fisub
aam
int
in
loop
leave
push
cdq
test
ret
push
pusha
dec
jecxz
movs
sbb
fwait
push
add
ins
cmp
(bad)
call
jb
sti
jle
lds
clc
pop
scas
popa
adc
test
into
or
mov
inc
sub
pop
mov
out
out
mov
retf
retf
pop
or
outs
sub
shl
retf
pop
xchg
mov
imul
daa
repnz
call
mov
add
mov
out
psrlw
inc
mov
sahf
les
push
fidivr
push
outs
pop
sbb
ret
xchg
in
or
push
sbb
push
push
jp
fucomip
(bad)
cmp
push
adc
mov
lods
aas
pop
in
fs
cmp
loop
mov
push
loopne
sub
sbb
mov
loopne
fistp
imul
or
cmps
jp
pop
outs
cmp
jl
dec
scas
cmps
fisubr
gs
dec
fistp
es
outs
mov
adc
mov
push
js
imul
add
sbb
inc
jmp
fsubr
in
dec
add
xchg
jl
or
cmc
mov
std
les
sbb
mov
stos
dec
xchg
mov
push
sub
or
inc
sar
mov
outs
movs
add
sbb
push
dec
and
or
dec
bound
int
jle
pop
xlat
imul
movs
adc
sub
or
fisttp
xchg
fst
mov
fwait
sti
cvtps2pi
inc
hlt
xor
fbld
xor
sbb
cmp
repz
clc
xchg
lea
shl
ret
fs
data16
mov
xor
pop
repnz
mov
push
inc
jmp
test
sbb
gs
mov
cmc
push
or
push
inc
sub
dec
jecxz
stos
or
mov
shr
inc
mov
add
xor
cmc
xchg
ficomp
popf
in
xor
daa
adc
out
adc
clc
loop
aas
push
nop
mov
cmps
cs
mul
arpl
lods
cmp
ret
xor
ret
xlat
add
popf
nop
test
add
mov
call
ja
jno
sbb
jo
mov
enter
cmp
cmpxchg
lods
or
out
cmp
rcr
lock
test
dec
xor
dec
jle
push
xchg
popw
mov
retf
mov
and
adc
jp
adc
xor
out
scas
push
lahf
sbb
cdq
jno
jp
sub
jle
and
mov
leave
cmp
and
das
mov
(bad)
push
in
add
xor
jmp
xbegin
cmps
push
es
dec
mov
pop
inc
push
xor
cmp
cld
imul
sbb
jo
mov
xchg
packssdw
fmul
aaa
mov
adc
into
in
outs
add
sbb
xchg
cmp
stc
cmp
repnz
outs
std
add
fs
or
ds
add
adc
jo
sbb
aaa
aam
push
(bad)
enter
or
dec
rcl
lods
bndstx
aaa
lods
xchg
add
ss
xchg
adc
lea
jp
push
rcl
shl
dec
mov
clc
mov
cdq
repz
pop
mov
sbb
int
fwait
pop
mov
repnz
in
aam
fstp
mov
adc
icebp
clc
xor
ret
xchg
dec
and
mov
outs
jo
sbb
shr
shl
js
and
push
mov
popa
pop
scas
xchg
stos
push
pop
push
jmp
aas
adc
adc
sar
mov
add
xchg
and
ds
mov
iret
cmp
retf
mov
or
test
loop
repz
add
inc
loope
rol
out
mov
stos
xor
mov
add
inc
cmp
lahf
mov
out
xchg
sbb
adc
test
retf
jl
fisub
aas
jmp
cdq
fwait
cld
in
jle
lds
test
call
inc
adc
shl
sub
shl
(bad)
mov
or
retf
dec
add
out
add
(bad)
into
dec
mov
pushf
push
out
jmp
mov
jo
test
clc
lahf
sub
div
jnp
mov
loop
xchg
push
xor
jmp
(bad)
shl
or
add
ins
pusha
pop
mov
ret
sahf
jbe
jne
leave
xor
in
dec
jg
xlat
hlt
scas
sbb
mov
aam
mov
and
ret
xor
push
rol
int3
jp
ja
mov
popf
sbb
test
mov
sub
outs
imul
adc
or
mov
sbb
cmps
push
ret
jmp
nop
fbld
js
and
push
fs
mov
imul
add
sbb
lds
scas
mov
or
jl
mov
loop
rcr
mov
mov
adc
pop
aas
add
push
mov
ins
cs
lods
(bad)
int
call
ret
jmp
xchg
or
loop
arpl
xlat
pop
cmp
fdivr
retf
arpl
dec
adc
xor
loop
mov
xchg
ss
cmp
enter
test
xor
inc
sbb
add
push
push
imul
movs
movs
add
out
or
cs
xchg
in
scas
inc
movs
test
pop
dec
cmp
imul
test
cmp
sub
push
xor
xchg
inc
cmp
and
mov
push
xchg
add
cmp
in
adc
retf
jge
ret
ficomp
pop
cs
jae
cs
lea
(bad)
push
inc
scas
inc
xchg
pusha
inc
aas
add
and
pop
imul
sti
sar
push
cs
cld
jl
mov
mov
rcl
xor
sti
sub
outs
aad
xor
and
sbb
stos
cmc
or
mov
sub
sbb
pop
fdivr
dec
cmp
mov
mov
sub
xor
pop
pop
ins
jo
xchg
out
add
aam
or
inc
rcl
add
popf
push
xchg
sbb
inc
movs
push
mov
cmp
mov
in
cmp
scas
idiv
clc
xchg
sub
daa
imul
mov
xchg
sbb
mov
mov
xor
cli
add
stos
iret
loope
mov
mov
cmps
shl
(bad)
ficom
inc
in
int3
push
daa
mov
ret
and
pop
imul
sahf
les
hlt
xchg
cmp
adc
push
call
pop
shl
jnp
push
sbb
mov
bound
inc
pop
stos
in
dec
adc
test
jg
lea
fdivr
dec
xchg
sbb
or
jmp
jmp
scas
cmc
mov
fadd
repz
(bad)
aad
and
or
(bad)
jnp
inc
nop
outs
push
arpl
mov
pop
mov
mov
fadd
cmp
and
push
mov
rcl
int3
adc
fidiv
test
out
lea
mov
or
popf
sti
adc
test
and
jge
and
movs
jge
add
loope
jecxz
test
or
lock
pop
outs
imul
push
or
cli
jg
lea
push
cld
cli
jae
sar
test
lods
call
mov
call
fcom
jnp
xchg
scas
inc
cmc
iret
inc
call
sti
push
cmp
jnp
fsub
enter
repnz
iret
in
mov
aam
adc
mul
(bad)
fwait
adc
fisttp
ret
mov
ret
in
xor
or
adc
inc
dec
icebp
ror
adc
les
das
dec
inc
sbb
xchg
jle
lods
daa
popf
(bad)
sub
xor
lock
adc
sub
test
gs
xor
adc
xchg
add
sub
cli
dec
push
push
xchg
xchg
addr16
mov
fld
mov
mov
push
inc
cmc
in
sti
dec
mov
jnp
ds
inc
int3
pusha
mov
retf
add
xor
rcl
add
push
leave
sahf
mov
aas
xchg
(bad)
sbb
(bad)
push
push
mov
xchg
out
push
push
in
js
or
inc
cmps
sahf
mov
adc
gs
xlat
adc
sub
hlt
inc
mov
in
jno
popa
mov
mov
jno
or
das
pop
jnp
icebp
repz
push
es
add
imul
sbb
and
repz
inc
sbb
imul
sbb
fmul
(bad)
pop
jb
sahf
inc
js
pop
push
or
pop
sub
and
outs
call
sbb
fistp
cld
lds
jmp
mov
(bad)
jl
gs
fisub
addr16
cmp
mov
repnz
retf
dec
movs
stos
fwait
xor
inc
or
mov
jnp
inc
or
dec
inc
dec
sbb
and
sbb
pop
daa
push
mov
inc
jge
cli
das
pop
pusha
push
cmp
psubsb
push
ds
inc
sub
push
pop
mov
cwde
fidivr
adc
lahf
ins
loope
push
loop
into
pop
add
or
sub
call
daa
into
jmp
das
aaa
imul
sub
in
push
pop
jle
neg
dec
ret
repz
or
adc
mov
sub
sub
mov
adc
movs
je
inc
cdq
jno
daa
mov
shrd
ds
dec
and
push
scas
(bad)
fst
xor
out
sbb
cld
fisubr
mov
sub
dec
icebp
out
fs
scas
mov
push
mov
push
mov
dec
(bad)
add
jne
popa
xchg
xor
out
xchg
jp
das
dec
mov
fstp
push
loop
adc
mov
dec
mov
dec
mov
sub
inc
mov
cmps
add
mov
push
std
jl
ds
and
dec
add
xchg
push
add
dec
mov
sbb
xchg
xor
xor
sbb
fdiv
adc
aas
mov
in
lock
pop
fistp
int3
sbb
or
(bad)
push
mov
xor
jge
sbb
gs
mov
or
fwait
test
je
in
add
mov
dec
jbe
lea
lods
dec
pop
enter
mov
mov
call
jne
inc
(bad)
and
cmp
es
mov
pop
sbb
pop
in
les
xchg
movs
inc
out
jns
push
pusha
and
push
xchg
sbb
lahf
xor
jnp
in
bound
div
jo
mov
cmp
or
xchg
mov
or
das
adc
call
pcmpeqw
test
adc
dec
xlat
xor
mov
mov
push
cmp
outs
dec
call
retf
or
imul
xor
mov
fiadd
sbb
daa
cmp
push
xor
(bad)
and
add
mov
push
mov
jo
fbstp
lea
adc
mov
bound
sbb
lahf
idiv
(bad)
mov
outs
cmp
sbb
hlt
leave
out
aaa
loope
(bad)
sar
ds
mov
into
les
jp
pop
icebp
(bad)
fdivr
lods
(bad)
mov
and
stc
loope
jge
sbb
fsubr
stos
mov
ret
adc
inc
inc
cmp
ins
dec
mov
and
dec
cwde
ret
cmc
aam
mov
xlat
out
fild
xchg
clc
or
bound
es
loopne
fadd
mov
enter
stc
pop
test
scas
inc
pushf
add
fdecstp
sub
mov
inc
in
test
lods
ins
out
xchg
aad
call
ins
movs
adc
pop
ja
push
loopne
and
mov
cmc
cmp
push
inc
cli
imul
(bad)
mov
jge
adc
or
cmp
pop
cld
pushf
sub
rcr
xchg
mov
push
call
es
inc
inc
push
add
iret
dec
xor
sbb
adc
push
add
dec
shl
stos
aaa
sub
mov
xor
test
test
xor
and
pop
test
pop
fadd
dec
adc
jns
mov
cmps
repz
test
jl
inc
pushf
movs
and
or
mov
inc
in
sub
in
dec
out
sbb
aam
sar
sti
in
cmp
xchg
fs
dec
add
cli
ins
pop
mov
or
addr16
pop
retf
mov
(bad)
imul
push
xchg
jl
jmp
rcl
stc
or
retf
jne
push
call
jne
out
and
xor
or
push
dec
inc
and
rcr
push
inc
xchg
push
rcr
push
aad
pop
or
inc
mov
cmp
sti
test
out
push
(bad)
xchg
cmp
xchg
cmp
pop
xchg
mov
dec
xor
leave
mov
movs
pop
cmp
or
sub
pushf
cmps
in
aas
add
fsub
shl
in
in
lea
mov
or
outs
mov
add
retf
enter
xor
pop
adc
mov
cwde
dec
imul
leave
imul
push
dec
ins
ja
movs
es
push
loop
cld
fild
iret
fsubr
pop
mov
outs
lods
inc
adc
or
mov
loop
pop
mov
cmp
mov
jle
cli
arpl
sub
jo
call
(bad)
sbb
mov
imul
inc
sar
std
test
cmp
push
lahf
in
push
or
sub
sbb
or
addr16
in
movs
pop
mov
pop
mov
adc
je
test
in
fwait
test
aad
push
mov
add
in
jae
jmp
aas
popa
pop
add
int3
mov
lea
sbb
xor
jg
push
push
mov
push
cmp
aaa
and
xchg
add
pop
jp
movs
jo
cmp
fimul
mov
scas
push
xchg
fs
retf
outs
imul
je
push
mov
sub
in
icebp
(bad)
jmp
xor
cli
mov
shl
mov
pop
dec
adc
and
jmp
mov
cmp
test
(bad)
xchg
out
std
xor
push
inc
xor
inc
pop
out
jmp
mov
xor
rcl
shl
or
loope
ins
and
ja
adc
cmps
or
jle
xchg
jg
scas
shl
stc
dec
rcr
movs
jecxz
push
mov
in
pop
scas
mov
add
mov
jae
fistp
mov
(bad)
cmc
xchg
outs
test
and
xchg
xchg
adc
into
test
shl
into
xchg
jp
pmullw
rol
pop
sub
scas
or
daa
cmps
add
mov
lea
pop
retf
mov
das
in
hlt
push
cs
mov
rcr
jb
xor
(bad)
xchg
nop
xor
js
jle
test
mov
cmp
imul
sti
xchg
clc
adc
cli
mov
push
jmp
xchg
push
clc
fwait
pop
mov
jo
bound
cmp
adc
aaa
and
jnp
sbb
xchg
enter
stos
mov
repz
cmps
pop
inc
xlat
mov
cli
loope
mov
ret
jbe
pop
ficomp
(bad)
push
pop
out
and
inc
push
ror
(bad)
jae
dec
sub
mov
aad
int3
retf
sub
xchg
mov
movs
and
add
call
lods
dec
(bad)
(bad)
xor
sub
outs
mov
out
cmp
fdiv
dec
xchg
out
inc
push
jecxz
mov
test
cld
pop
bound
adc
mov
scas
cs
add
xchg
pop
mov
leave
xchg
test
cld
mov
fimul
adc
mov
inc
mov
leave
bound
sbb
fisttp
jbe
push
or
add
mov
cmp
dec
retf
imul
cs
add
pop
pop
ficomp
or
xor
in
jb
lock
cwde
mov
pop
xor
repz
push
dec
xor
sar
jmp
jmp
call
cmp
add
xlat
mov
dec
dec
cmp
and
xor
mov
mov
inc
sbb
repz
mov
test
dec
repz
shl
rcl
cdq
dec
xchg
mov
stos
dec
shl
pop
or
mov
pop
shl
cmp
xchg
out
adc
in
pop
jns
movs
xlat
push
leave
repz
mov
fwait
pop
add
sbb
adc
mov
loopne
ins
popf
das
loop
imul
into
mov
jnp
cs
xchg
xlat
add
sub
daa
and
adc
into
adc
mov
pshufw
cli
jge
lea
sub
add
jns
pop
fwait
jnp
jmp
out
jo
pusha
xor
mov
inc
repz
mov
push
sti
stos
jle
pushf
xchg
sti
(bad)
push
inc
jmp
mov
and
ins
push
or
jle
dec
mov
jns
dec
das
inc
leave
out
je
xor
std
dec
adc
dec
sbb
pop
gs
pop
xor
and
dec
lds
or
and
mov
sbb
push
push
inc
and
fstp
(bad)
push
in
sbb
popf
imul
add
jg
pop
pop
mov
jns
inc
sbb
fsub
ret
cld
fistp
mov
mov
leave
jno
clc
std
adc
std
mov
push
adc
outs
out
cwde
xor
cwde
inc
jbe
jl
test
loop
adc
sbb
xchg
test
or
cli
popf
imul
nop
inc
cwde
sti
in
loop
rol
pop
lahf
jge
test
mov
pop
sbb
push
inc
jp
enter
je
mov
js
pop
sti
or
sub
cwde
out
sahf
add
xchg
fcomp
in
out
ficomp
jmp
iret
jmp
xor
pop
fisttp
movs
scas
xor
loopne
xchg
aad
mov
jb
lock
pop
inc
adc
pop
jle
inc
lahf
inc
loopne
jl
fimul
test
inc
hlt
movs
fdivr
loopne
mov
and
xor
or
cmps
outs
ja
xor
push
(bad)
xchg
sbb
in
retf
dec
loop
ja
ret
lods
dec
adc
mov
imul
(bad)
sbb
sub
movs
and
dec
scas
shl
or
call
fidivr
mov
lds
sahf
sar
call
xchg
xor
in
(bad)
jle
sbb
push
inc
in
stc
movs
les
test
nop
xor
cmps
mov
dec
adc
int
das
dec
pop
xor
out
push
and
scas
jbe
inc
jmp
add
test
xchg
mov
push
cmp
not
jbe
mov
pop
lahf
sbb
das
lahf
scas
data16
pop
cs
add
jl
and
cwde
mov
mov
ja
out
enter
inc
fmul
xor
dec
or
lods
inc
adc
inc
movs
inc
dec
dec
inc
push
stos
inc
jmp
push
inc
inc
test
xchg
mov
stos
sbb
pop
and
hlt
add
mov
movs
inc
cld
idiv
jne
mov
inc
lods
dec
shl
mov
mov
xchg
jecxz
mov
repz
rol
imul
jmp
pop
jo
xchg
sbb
in
and
xor
jmp
add
shl
stos
jmp
not
test
outs
loope
aas
sub
jg
cmps
ret
xchg
in
clc
outs
in
mov
push
xchg
in
sti
wrmsr
xchg
mov
into
xor
xor
cmc
or
stos
pop
mov
fld
and
pop
call
xchg
sti
(bad)
jge
je
aad
cmp
cwde
inc
dec
test
mov
cmps
clc
push
rcr
fld
jmp
cmps
and
xchg
cmc
mov
(bad)
or
adc
adc
or
push
dec
and
int3
inc
mov
mov
(bad)
or
pushf
repz
push
xchg
outs
shl
pop
or
(bad)
loopne
inc
ins
inc
add
pop
xor
es
cmp
xchg
and
add
xor
add
xchg
mov
loop
pop
stos
inc
add
cli
fbstp
call
mov
cmp
loope
mov
shr
dec
xchg
jb
or
int3
int
mov
in
(bad)
xchg
inc
stos
(bad)
fldcw
add
add
dec
rcr
sahf
loopne
xchg
sub
jno
fcmovne
iret
mov
xor
movs
ret
pop
mov
int
je
in
shl
jb
cmp
cmps
imul
and
push
(bad)
sub
scas
or
or
lods
jg
jecxz
les
shl
mov
push
add
adc
jge
fbstp
in
inc
mov
push
push
xlat
imul
xor
cld
cmp
fwait
(bad)
lock
aad
xchg
into
sub
clc
sub
dec
mov
ret
out
rol
fldenv
ror
pushf
pusha
inc
es
sbb
add
in
mov
push
data16
test
mov
cmps
mov
movups
xor
xchg
push
cld
fadd
outs
sbb
mov
xchg
loopne
mov
and
gs
fwait
mov
push
data16
ret
xor
mov
dec
(bad)
repz
cmps
addr16
jecxz
adc
jecxz
fwait
mov
mov
(bad)
(bad)
in
rcr
(bad)
int3
pushf
xchg
xchg
repnz
lahf
adc
jnp
and
dec
test
out
and
int
pop
aad
cmps
cmps
sub
ins
in
sahf
loopne
push
popa
test
adc
daa
shr
xchg
xchg
push
(bad)
jns
fmul
xchg
jae
inc
inc
push
in
push
adc
out
xchg
out
cmp
or
test
mov
or
push
mov
or
fst
adc
add
stc
test
jmp
jno
add
pop
pop
mov
xlat
inc
push
push
dec
rcl
cli
ins
fld
mov
in
cmp
and
cmp
mov
push
sub
sub
sbb
shr
leave
(bad)
popa
call
adc
call
xor
clc
xchg
inc
aas
xchg
mov
dec
fcom
loopne
ins
cmc
test
pusha
dec
shl
cmc
clc
out
xchg
fucomip
cdq
pop
fmul
pop
jmp
xor
jbe
xor
sahf
lods
cmp
lods
cs
xchg
cmc
push
int3
sahf
ret
sub
sti
mov
jbe
pop
and
std
push
(bad)
sbb
popa
mov
(bad)
lock
ja
jne
mov
dec
adc
mov
push
mov
repnz
jne
sahf
das
cli
(bad)
jmp
xchg
jl
hlt
sbb
pop
pop
loope
xchg
lock
ja
sar
adc
push
outs
inc
aad
xchg
pop
cmp
mov
scas
pop
out
loop
test
into
into
sub
test
movs
stc
pop
adc
fmul
push
xor
xor
jmp
pusha
and
ins
into
push
dec
cmp
add
ja
ret
loope
sub
xchg
fist
or
sub
fbld
jno
and
data16
es
inc
lahf
push
lahf
lea
push
pop
add
dec
xor
pop
ror
fnsave
push
jg
aam
repnz
xor
pop
dec
sub
fidivr
xor
xor
mov
cmp
scas
loope
push
push
cwde
jae
ror
fs
adc
ss
call
arpl
push
int3
imul
loop
ins
sub
add
shr
xchg
mov
add
shl
call
std
pop
stos
daa
inc
xchg
aaa
mov
es
(bad)
(bad)
call
dec
adc
out
test
aas
or
frstor
mov
mov
sub
stos
or
dec
std
dec
push
push
xor
sub
push
cmps
pop
js
adc
or
aaa
pop
(bad)
jne
ret
xor
in
ret
jnp
retf
stos
scas
pop
xor
popa
fnstcw
enter
xchg
xchg
pushf
sbb
addr16
lods
repz
sub
or
push
ins
mov
sbb
imul
mov
xchg
pop
iret
xlat
rcl
xor
and
adc
(bad)
test
jg
out
sti
(bad)
jb
jg
mov
int
lods
cmps
cmp
ins
rcr
push
(bad)
xchg
es
icebp
inc
mov
and
jge
dec
sbb
pushf
pushf
ror
cmp
neg
add
fisub
imul
fs
fcomp
jl
clc
popf
cdq
xor
pop
iret
and
retf
mov
int3
mov
or
scas
hlt
cdq
inc
fwait
push
or
ja
add
dec
jae
push
xchg
in
jnp
pushf
(bad)
js
dec
mov
mov
xor
out
mov
xor
test
lods
je
pop
or
call
ret
push
mov
sbb
std
push
mov
pop
push
ja
stos
inc
xor
jp
or
lods
pop
sbb
adc
dec
sbb
mov
fwait
movs
jae
fadd
add
jne
imul
scas
retf
push
pop
mov
mov
or
js
rcr
lahf
call
mov
mov
pop
ret
icebp
xchg
xchg
lods
mov
adc
push
jge
mov
sbb
int
in
jg
add
cmp
dec
sar
ret
into
mov
aad
cmp
mov
and
in
gs
jbe
(bad)
fcom
fucomp
cmp
mov
mov
call
cmp
call
pop
mov
pop
sub
push
adc
push
jbe
imul
cmps
cmp
nop
mov
cmp
and
ss
mov
cmp
out
and
retf
mov
loopne
int
adc
je
xchg
fs
sbb
dec
cmps
je
xor
pop
mov
xor
jb
lods
call
out
jns
or
mov
sub
fimul
mov
xchg
jecxz
xchg
out
or
loop
xchg
mov
bound
jne
loopne
lock
cdq
add
retf
in
adc
mov
inc
xlat
int
mov
jl
pop
dec
repnz
xchg
sub
cmps
jge
imul
inc
jmp
fsubp
cmps
jnp
call
dec
xor
fdivr
sti
mov
push
adc
jne
fcomip
xchg
inc
fild
loop
or
sub
imul
pop
outs
repz
ror
mov
mov
in
mov
lds
cdq
mov
push
(bad)
retf
push
jae
pop
aas
int
popa
or
xor
dec
or
sub
repz
call
push
fyl2x
adc
stos
fisub
xor
mov
adc
sbb
adc
sub
xchg
mov
shl
sbb
dec
stos
push
sbb
xor
popa
(bad)
or
pop
sub
in
enter
and
loope
jae
sbb
jle
enter
pop
add
adc
or
je
mov
pop
add
lods
push
dec
outs
clc
mov
dec
ss
rol
adc
jmp
jg
dec
ret
popa
xor
popa
popf
and
sub
fnclex
imul
fdivr
repnz
sub
cmp
and
jmp
pop
in
xchg
fwait
and
mov
arpl
sbb
test
cmp
mov
mov
jg
inc
mov
mov
cmps
cmp
dec
push
div
stos
call
adc
lea
xchg
and
mov
sbb
aas
mov
mov
fidiv
shl
xchg
fsub
in
shl
jae
dec
adc
ins
pushf
in
adc
pop
xchg
stos
sub
push
or
out
ds
(bad)
sbb
add
xchg
jmp
mov
loopne
inc
add
adc
lock
xor
dec
pop
pop
pop
push
popf
jp
aaa
cmps
cmp
adc
add
jle
push
dec
in
push
inc
pop
add
shr
push
mov
mov
data16
or
js
retf
js
aaa
ss
jb
outs
fild
shr
dec
test
mov
(bad)
mov
and
inc
xchg
ja
mov
fsub
lahf
cmp
or
sar
ins
fdivp
mov
popa
push
mov
mov
push
ja
jmp
push
cwde
xor
cmp
ja
rol
jno
inc
push
pushf
or
mov
or
mov
adc
cmp
adc
add
adc
cmp
inc
sub
test
mov
mov
or
or
mov
ins
mov
je
aaa
mov
and
mov
cli
cld
mov
pop
sbb
add
fidivr
imul
pop
sbb
inc
mov
add
or
mov
xchg
arpl
push
push
repz
lods
or
vcvtpd2ps
add
jns
fadd
push
dec
scas
jns
clc
imul
icebp
jnp
ja
pusha
add
mov
cmp
and
dec
out
and
mov
adc
sahf
mov
imul
push
sub
lods
pop
xchg
mov
call
jnp
addr16
lahf
rcr
mov
inc
and
mov
dec
cld
mov
sub
push
xor
xlat
imul
retf
pop
jnp
repnz
push
cmp
in
or
push
xchg
xchg
and
stos
fwait
push
stos
(bad)
cdq
dec
inc
in
out
cmp
cmc
inc
popf
rol
cmp
fwait
xchg
je
or
ss
mov
pop
outs
scas
pusha
push
arpl
cdq
cdq
fdiv
mov
lods
inc
adc
test
mov
push
push
xchg
imul
pop
push
iret
retf
mov
les
mov
sub
lock
xchg
call
push
repnz
lea
iret
les
ror
sahf
cmp
fwait
xlat
dec
mov
dec
lods
mov
dec
fiadd
(bad)
sahf
xor
xchg
loope
movs
scas
push
jecxz
mov
or
test
sbb
xlat
inc
inc
mov
nop
lock
and
hlt
mov
outs
in
cld
jns
fwait
or
test
adc
pop
in
sbb
(bad)
xchg
addr16
cwde
shr
xor
jmp
stc
sub
mov
mov
xchg
cwde
dec
div
ja
repnz
cmp
sbb
pop
scas
push
add
nop
jb
xor
inc
mov
cmp
xlat
xlat
pop
sub
mov
lock
and
nop
test
and
mov
leave
mov
scas
dec
pop
leave
outs
pop
ror
or
push
xchg
push
add
and
mov
popf
cmp
mov
mul
enter
mov
rcl
fidiv
push
lahf
jmp
push
call
jne
in
xor
mov
ss
pop
adc
popf
cli
fld
jmp
mov
bound
push
shr
adc
xchg
xchg
ret
or
imul
js
in
cmps
addr16
mov
adc
js
cmp
test
int3
jbe
pop
in
loop
ret
inc
jmp
mov
push
mov
test
arpl
push
mov
mov
call
popa
add
xor
movs
out
adc
sub
inc
add
or
pop
or
xchg
sub
sar
sbb
push
ja
into
mov
popf
xchg
mov
out
xchg
lock
cli
add
and
aam
out
pop
mov
loopne
aad
xor
cmp
iret
sub
retf
push
idiv
or
mov
imul
cmp
pop
xchg
xor
in
xchg
cld
mov
ficomp
call
jmp
mov
adc
add
mov
jno
mov
jno
inc
inc
ds
ss
xchg
(bad)
sub
arpl
popf
xchg
aas
sar
adc
mov
cmps
push
retf
(bad)
or
jno
xor
push
lods
iret
or
pop
inc
mov
sbb
stos
popa
ss
outs
icebp
xchg
fs
or
mov
or
and
shl
mov
dec
and
sbb
sbb
ret
dec
out
inc
in
mov
ja
cwde
xchg
push
mov
arpl
inc
pop
je
call
xchg
push
jb
xor
mov
ret
imul
repnz
xchg
div
mov
push
push
sub
jmp
mov
jmp
mov
push
sahf
mov
lahf
xchg
sahf
jne
jmp
popf
in
or
popa
push
cmp
lock
push
cmp
push
ficom
hlt
pop
pusha
cmps
pop
jno
out
mov
push
sub
stos
jae
adc
sub
in
ds
in
jecxz
mov
test
push
jecxz
mov
icebp
jb
fistp
mov
pop
ret
xchg
adc
aaa
(bad)
dec
inc
pop
pop
xchg
aam
cmc
stc
jp
iret
cs
adc
mov
cs
jnp
js
mov
inc
mov
add
call
push
jecxz
cmp
xchg
nop
add
sub
pusha
outs
push
or
sub
aad
aad
fucomi
mov
cmps
sahf
and
lds
or
shr
xor
push
fcmovbe
out
xor
mov
std
std
outs
ror
outs
imul
in
call
fst
das
xor
push
add
push
mov
mov
inc
cwde
lods
sub
test
js
aad
lds
jbe
ror
inc
xchg
js
jecxz
mov
ror
mov
push
or
ret
sub
in
imul
(bad)
xchg
inc
sub
push
fs
mov
fld
call
xlat
adc
outs
aam
(bad)
popf
nop
test
imul
mov
aam
push
popf
(bad)
lods
test
dec
lea
mov
xchg
cmps
push
not
dec
mov
and
xor
mov
or
outs
adc
fcom
push
outs
stos
shr
sahf
div
(bad)
lods
push
sbb
scas
lock
lock
push
neg
sbb
mov
mov
lds
pop
push
fdivr
(bad)
mov
ror
fwait
or
inc
adc
jge
call
dec
add
mov
cmp
mov
sbb
add
mov
push
or
(bad)
fsub
mov
retf
inc
lahf
sbb
push
sub
dec
aas
adc
push
pop
scas
xchg
scas
(bad)
or
lahf
dec
sub
push
sbb
jo
sbb
sub
push
pop
cli
pop
pop
into
out
cmps
jmp
mov
inc
mov
mov
cmps
or
mov
and
pop
jb
div
xor
mov
pop
jmp
shr
lods
xchg
shl
cmp
sahf
mov
inc
repz
pop
popa
adc
push
call
icebp
loopne
dec
fwait
adc
jmp
jb
sbb
nop
addr16
fist
pop
adc
xor
lahf
add
jmp
sbb
test
int3
mov
jae
and
arpl
add
nop
fnstcw
push
mov
lods
pop
out
outs
and
aam
mov
popf
jne
pop
inc
adc
sub
xor
jb
jnp
jl
test
push
cld
adc
sbb
jno
dec
sbb
jmp
das
jecxz
add
cli
adc
mov
dec
cmc
dec
test
add
and
and
cmp
call
les
mov
sbb
lea
pop
imul
cld
dec
in
push
jnp
(bad)
push
push
fwait
scas
and
mov
cmp
adc
xor
mov
mov
cli
stos
mov
ins
test
mov
inc
add
xlat
(bad)
aam
and
ret
and
xchg
lahf
sub
add
sar
test
popf
movs
je
sbb
sub
mov
shl
mov
adc
and
pop
or
ins
retf
xchg
loop
test
es
sbb
test
(bad)
ins
popf
jg
out
dec
mov
mov
push
or
mov
adc
inc
sahf
mov
fadd
stos
pop
ja
or
in
mov
adc
addr16
cli
ficom
fnstcw
sub
movs
(bad)
push
in
mov
mov
add
pop
push
out
mov
pop
cmp
pop
add
repnz
movs
dec
(bad)
(bad)
leave
sub
cmp
pop
fld
push
cmp
lds
daa
push
repz
icebp
pop
popa
and
or
rcl
pushf
push
pop
mov
xor
int3
or
clc
and
mov
sbb
mov
adc
cli
(bad)
aad
loope
sub
add
adc
popa
mov
inc
mov
outs
sub
and
xchg
mov
sbb
lods
loope
and
push
fidivr
repnz
in
rol
test
or
mov
mov
inc
adc
add
pop
mov
(bad)
iret
mov
jp
mov
adc
sahf
ins
add
inc
loope
icebp
mov
pop
dec
xchg
pop
movs
mov
lahf
mov
mov
imul
movs
inc
or
and
outs
call
fild
mov
cmps
mov
adc
sbb
adc
sti
in
test
je
jmp
addr16
lods
pop
sub
test
stc
ret
mov
ss
mov
mov
adc
fstp
ret
aad
cmc
mov
cli
jb
std
mov
push
(bad)
jae
imul
push
mov
or
inc
fs
int
xchg
stos
xor
enter
inc
or
and
sti
cmp
aam
sti
lods
(bad)
or
fnstenv
dec
ret
stos
jb
sbb
jle
pop
(bad)
mov
pop
pop
sub
push
xchg
test
mov
or
dec
lods
adc
and
icebp
test
call
loopne
jbe
sbb
(bad)
in
push
shr
jmp
add
push
hlt
xor
adc
jmp
ret
out
jge
and
inc
aad
fdivr
not
mov
or
sbb
loop
dec
push
leave
and
inc
push
jns
fmul
gs
(bad)
jmp
push
aam
jle
(bad)
xlat
xchg
(bad)
(bad)
cli
jp
sbb
jmp
hlt
ja
xor
cmp
pop
cdq
push
sub
setle
pushf
jb
ins
aad
mov
push
lock
mov
call
mov
scas
loope
ret
out
add
div
xchg
cwde
sbb
shl
dec
ds
ins
mov
xchg
fwait
hlt
cmps
(bad)
xor
hlt
jg
ds
ss
sub
je
add
gs
in
in
adc
pop
jg
(bad)
ja
dec
ret
pop
int3
dec
inc
int
jnp
and
into
pusha
add
cmp
out
or
add
scas
lock
inc
or
aad
mov
aaa
jl
push
scas
mov
jmp
jecxz
aas
out
dec
jo
jo
jl
hlt
les
sbb
inc
sub
jae
or
xchg
gs
cmps
outs
fwait
call
fwait
dec
jbe
mov
arpl
sub
mov
mov
loope
mov
mov
(bad)
push
nop
retf
cmp
popf
fstp
cmp
lock
add
lea
js
sub
add
pop
sub
imul
hlt
dec
push
or
mov
fisttp
sar
mov
std
cdq
cmps
sar
nop
data16
jno
cmp
in
pop
lods
sar
jmp
mov
pop
lods
cmp
jp
lock
retf
dec
imul
add
fstp
stc
mov
mov
retf
jle
iret
pop
aaa
in
test
cli
out
mov
icebp
adc
fs
xchg
in
add
fsubr
lds
fld
stc
mov
nop
mov
jb
mov
adc
sbb
or
dec
pop
pop
dec
std
xchg
xchg
xor
out
or
push
mov
cld
push
cmp
sahf
mov
sti
in
mov
fucomip
mov
mov
push
add
cmps
push
adc
mov
pusha
pop
push
push
adc
cwde
jnp
rol
(bad)
int3
inc
xlat
add
pop
(bad)
int3
jp
int
(bad)
jns
jge
aas
push
(bad)
lods
test
jge
cmp
std
dec
nop
push
adc
lock
xchg
popa
sub
clc
fld
sar
mov
jne
pop
mov
push
xchg
sar
pop
scas
out
cmp
aad
xchg
movs
sbb
cmp
js
jno
in
out
sub
pop
push
lea
shr
shl
imul
(bad)
jge
mov
push
cmps
add
loope
xor
fiadd
mov
(bad)
neg
mov
gs
inc
iret
test
test
push
icebp
loopne
es
imul
cmp
sbb
loope
push
xor
mov
jno
push
fdiv
pop
xchg
into
aad
xchg
mov
das
fs
cdq
add
add
(bad)
nop
adc
mov
jae
(bad)
or
bound
loop
call
jecxz
in
mov
jmp
adc
rol
and
test
loopne
fild
call
dec
imul
mov
xlat
dec
jmp
mov
xchg
inc
dec
out
imul
jno
dec
or
mov
cmp
xchg
into
mov
out
mov
adc
into
addr16
mov
dec
jecxz
xchg
xchg
mov
jp
sbb
fs
std
cld
in
add
(bad)
mov
cmps
shl
ret
enter
(bad)
mov
ja
cmp
mov
xchg
pop
cmc
imul
fsubrp
jge
or
das
outs
mov
adc
xchg
fwait
(bad)
icebp
test
push
cwde
adc
shl
ins
ret
stos
cmp
mov
jb
div
dec
sbb
mov
jmp
dec
jo
push
scas
xchg
arpl
jecxz
inc
(bad)
jmp
neg
fistp
xchg
test
or
mov
xor
xchg
and
jle
and
fidiv
add
push
jp
xchg
aad
jge
inc
or
mov
cli
mov
push
ret
loopne
test
xor
push
jae
and
cmp
and
add
xor
scas
(bad)
cmc
test
jmp
(bad)
iret
mov
dec
inc
fimul
ror
push
push
push
(bad)
cmps
mov
dec
sbb
loopne
dec
dec
xor
in
mov
or
inc
jns
jne
jle
cs
repnz
cdq
push
mov
aad
add
push
add
or
loope
lods
rcl
enter
aaa
repz
mov
xchg
sub
test
xor
pusha
xor
aam
or
fst
enter
sub
xchg
ja
shr
cwde
mov
push
loop
mov
ror
ja
int3
jge
sub
hlt
popa
push
dec
(bad)
jnp
psubusb
das
dec
rol
jecxz
js
lods
pop
or
jl
inc
jmp
or
test
enter
ror
fdiv
mov
pop
lahf
test
js
dec
sahf
xchg
ja
mov
rol
pop
mul
popf
pop
add
fwait
cmp
add
mov
mov
sbb
mov
pusha
aaa
ret
mov
cmp
mov
adc
mov
fisub
sti
fnstenv
xchg
cmp
inc
sub
loopne
std
ret
popf
sub
inc
vpandn
data16
je
xchg
xchg
sub
and
mov
jge
jp
and
xchg
cmp
test
out
mov
loop
push
dec
movs
sub
mov
jb
mov
push
inc
mov
jecxz
pusha
and
int
clc
(bad)
(bad)
jae
fcmovnbe
scas
xor
lods
push
inc
jne
in
sub
xchg
add
loop
iret
mov
ror
aam
in
pop
xor
dec
push
(bad)
(bad)
sub
les
push
mov
out
gs
add
mov
lea
and
int3
push
lds
inc
cmps
int
fwait
mov
pop
int3
rcl
xlat
jmp
icebp
mov
mov
popa
(bad)
aad
pop
or
sbb
ror
loope
adc
mov
add
data16
shr
cwde
(bad)
push
jnp
cld
rol
push
dec
sbb
ja
cmc
stc
sub
mov
push
retf
push
jb
fldcw
iret
sbb
repz
sub
into
and
inc
push
push
pop
test
push
arpl
fucomi
xchg
dec
xor
pop
scas
mov
lock
sbb
and
jmp
mov
cs
cmp
or
loopne
ds
push
sbb
stos
pushf
shl
ret
mov
es
sbb
mov
data16
call
pop
push
inc
xchg
sbb
dec
in
and
pushw
movs
pop
push
lods
xchg
and
leave
cwde
ins
pop
jl
jnp
ret
(bad)
mov
sub
and
cs
pushf
dec
lods
daa
jle
iret
mov
push
leave
shl
in
aam
scas
pop
movs
push
xor
aas
mov
(bad)
mov
test
mov
cmp
in
cmp
inc
push
mov
in
push
jmp
cmp
fmulp
data16
jge
sbb
mov
shr
jae
dec
add
inc
sbb
lahf
ret
bound
out
jmp
outs
inc
jns
xlat
or
mov
scas
or
cmps
cwde
jp
jge
mov
add
bound
push
pop
jge
shr
jp
sbb
mov
out
neg
jmp
icebp
xchg
inc
stos
cmp
test
jno
and
jge
out
or
pop
push
cmp
mov
adc
std
dec
xor
test
into
cld
sahf
cmp
outs
out
push
stc
sbb
enter
jnp
cmp
xchg
mov
sbb
out
ins
mov
ret
shl
add
js
leave
cmp
pop
inc
inc
pop
jecxz
cmp
test
xor
cmp
and
int3
stos
mov
add
pop
mov
popf
sti
inc
(bad)
retf
outs
fucomi
mov
jb
imul
jmp
xchg
mov
int3
xchg
sub
pusha
shl
(bad)
rcr
dec
or
push
add
cmc
xchg
add
xor
ficom
je
dec
fadd
iret
dec
adc
fistp
out
inc
mov
xchg
dec
push
shl
add
inc
imul
mov
push
inc
mov
or
outs
or
inc
add
mov
sub
fcomip
dec
test
inc
fild
imul
cs
mul
mov
inc
pop
push
pop
fs
stc
sar
js
dec
loop
pop
test
cmp
addr16
rcr
fsub
inc
movs
mov
cmps
sbb
shr
push
jno
add
stos
bound
addr16
push
cwde
push
inc
jg
dec
adc
dec
xor
scas
ficomp
mov
and
mov
out
jae
sbb
in
pop
mov
add
adc
pop
(bad)
cmp
adc
sahf
test
not
js
scas
sub
sti
push
(bad)
out
into
sbb
out
fistp
pushf
jge
jmp
idiv
lds
mov
xchg
adc
sti
test
xchg
jl
cmp
pop
fs
stos
sbb
cmp
mov
shl
gs
sub
mov
ins
mov
inc
sbb
loopne
pop
sub
xchg
mov
popf
clc
add
jge
pusha
fdivr
and
sub
jle
in
not
dec
idiv
ins
push
xor
js
push
sub
arpl
add
mov
rol
pextrw
jb
mov
adc
aas
lods
xor
jnp
into
fwait
arpl
and
mov
mov
ss
adc
es
and
stc
mov
aaa
xlat
ja
xlat
sub
dec
mov
ret
push
popf
or
bound
push
push
sub
push
bound
es
out
out
cmps
dec
xchg
pop
cmc
aam
mov
(bad)
sbb
sub
arpl
mov
adc
or
sub
bnd
jge
mov
outs
adc
inc
test
add
out
push
lods
jmp
mov
cmps
mov
jno
fsub
inc
dec
repz
and
into
push
sbb
and
push
shr
push
add
sub
(bad)
outs
mov
sbb
jnp
popa
push
dec
lods
xor
cmc
pushf
dec
lahf
dec
pop
add
jmp
leave
mov
lods
xor
xor
rcr
xlat
fild
cmp
nop
xlat
pop
mov
lods
jl
dec
pop
xor
inc
scas
push
imul
jle
or
scas
jl
inc
test
leave
dec
dec
push
aad
lods
ins
pushf
pop
adc
push
retf
push
xchg
out
fsubr
leave
lahf
xchg
or
inc
dec
std
fdivr
daa
pushf
pop
mov
jns
imul
rcl
fwait
mov
jbe
jb
cmps
sub
pop
in
mov
aaa
fs
xchg
jmp
popf
cli
mov
fisubr
dec
jbe
lea
mov
cmp
add
dec
mov
jne
pop
xor
or
push
inc
out
daa
test
shr
mov
rcl
lods
nop
push
ficom
inc
inc
push
xor
loope
push
gs
daa
add
outs
mov
ja
add
xor
sub
push
movs
call
in
popa
push
das
jp
sbb
(bad)
push
stos
mov
inc
xor
and
dec
cmc
rol
scas
pushf
cmc
adc
and
adc
out
xchg
lock
jl
inc
fwait
cs
mov
pop
and
mov
sbb
push
(bad)
jne
xor
add
ja
hlt
in
int3
mov
or
outs
imul
test
and
cwde
hlt
jb
mov
icebp
ds
and
xchg
scas
(bad)
ret
inc
fwait
mov
xor
push
in
call
mov
mov
push
mov
push
and
out
inc
xor
push
cwde
fcomp
or
aad
vaddsubpd
call
js
adc
fimul
adc
inc
and
adc
gs
mov
pop
pop
stos
gs
dec
inc
push
pop
and
pop
mov
cmc
adc
push
imul
jg
jo
adc
dec
cwde
fistp
xchg
outs
jno
push
ret
dec
mov
loopne
sub
jmp
xor
je
mov
lock
fstp
mov
dec
(bad)
push
(bad)
jae
rcr
gs
xchg
add
xor
adc
xchg
jno
adc
push
or
xor
and
rol
fs
cli
imul
aad
sub
jl
fild
div
xor
add
(bad)
mov
sbb
loop
xor
(bad)
int
xchg
test
outs
xlat
nop
(bad)
pop
(bad)
mov
jge
aas
inc
mov
out
imul
pop
dec
mov
push
pop
or
das
inc
cwde
stos
movs
not
adc
sub
xchg
inc
xchg
adc
(bad)
shl
sahf
sub
add
mov
icebp
loopne
inc
sbb
inc
dec
and
std
and
cmp
mov
(bad)
(bad)
mov
mov
jae
pop
popa
(bad)
jmp
xchg
mov
(bad)
jge
sub
dec
fstp
dec
pop
gs
pop
cmp
test
mov
(bad)
fdivr
ja
std
imul
stos
sbb
daa
call
cs
mul
sbb
cmc
dec
push
std
jle
and
test
mov
out
and
cmps
mov
mov
sub
or
icebp
es
aaa
push
or
xor
or
dec
popf
mov
push
pushf
adc
mov
mov
or
jmp
loope
sbb
cmp
push
xchg
sub
ja
and
lods
call
int3
(bad)
jl
imul
data16
xor
fwait
add
pushf
adc
repnz
test
neg
mul
hlt
jbe
pop
loopne
or
in
push
mov
loop
in
sti
mov
out
cwde
loope
repnz
pop
and
xor
movs
inc
adc
movs
movs
mov
xor
sbb
sbb
mov
sub
add
mov
pop
push
test
cmps
(bad)
fimul
fstp
sub
dec
ficomp
push
mov
xor
mov
xchg
shl
loop
xor
fs
gs
gs
mov
repnz
mov
dec
popf
or
or
int3
mov
ss
xchg
mov
xchg
(bad)
jne
add
ret
aad
push
jbe
cmp
push
daa
call
mov
jge
pop
icebp
and
push
xchg
mov
(bad)
popa
inc
push
pop
pop
(bad)
imul
push
inc
and
mov
mov
xor
mov
pushf
pusha
cmc
(bad)
sbb
xor
addr16
mov
addr16
aaa
loope
jecxz
(bad)
sti
inc
shr
je
push
dec
das
sub
jne
mov
pop
cli
mov
mov
mov
call
pop
sbb
test
sbb
jae
cmps
xor
sub
dec
fsubr
cs
ja
and
inc
and
push
scas
mov
add
aad
test
mov
scas
lea
adc
gs
imul
js
inc
das
ja
add
xchg
enter
fldcw
mov
mov
es
pop
sub
mov
push
add
push
fucom
test
or
aaa
or
fld
sub
mov
jo
pushf
rol
clc
push
xchg
xor
(bad)
xor
add
pushf
push
and
jg
jge
and
cmc
imul
(bad)
mov
xor
test
(bad)
push
lods
clc
cdq
push
mov
dec
test
mov
mov
pop
into
lock
aas
mov
mov
dec
mov
jle
xchg
add
in
dec
sub
lds
push
les
mov
sub
dec
pop
pop
xchg
sub
jg
loope
cdq
js
dec
pop
std
inc
jmp
daa
or
xor
mov
cld
or
mov
mov
cmps
mov
int3
fcmove
fnsave
stos
inc
std
fild
aam
push
(bad)
sbb
pop
adc
call
jbe
loopne
not
fmul
dec
adc
mov
inc
dec
xor
cmps
adc
mov
push
call
fist
sbb
push
xchg
outs
xor
test
xchg
mov
loop
stos
xor
mov
dec
xor
sbb
lods
js
xor
jmp
addr16
leave
fdiv
cmps
add
lds
cmp
jle
sbb
or
fdivr
push
popf
adc
dec
outs
add
pop
and
test
int
ret
(bad)
mov
or
sub
loopne
or
cmp
add
imul
in
mov
inc
and
adc
jne
jmp
pusha
test
ja
xchg
cwde
push
jl
mov
mov
cmp
test
push
xor
mov
fisub
mov
mov
mov
mov
sub
add
cmp
mov
rcr
scas
jmp
lds
xlat
ud1
pop
out
mov
lods
dec
ja
cmp
mov
mov
dec
je
ins
out
(bad)
pop
lods
xor
push
hlt
add
shl
sub
pop
sbb
mov
or
cmp
add
jno
scas
mov
fild
cli
mov
aam
jno
add
ret
xlat
adc
cmp
or
(bad)
(bad)
out
ret
mov
cmp
xchg
xchg
push
or
jmp
jbe
inc
loop
shl
dec
sar
and
shl
les
lods
imul
push
stos
jmp
popf
inc
cmps
(bad)
rcl
jl
out
add
sub
xchg
retf
mov
shr
(bad)
ret
inc
mov
mov
int3
iret
xlat
sbb
cli
inc
xchg
lods
int3
mov
or
push
push
pop
mov
cmp
(bad)
(bad)
adc
ja
sub
jge
sbb
test
sub
nop
add
jle
retf
ficomp
push
jmp
loopne
popf
loop
scas
nop
test
mov
inc
pop
stos
(bad)
xlat
movs
movs
jmp
push
loopne
dec
sbb
fs
pop
sbb
inc
fcomip
xchg
lock
popa
sbb
hlt
or
and
maskmovq
not
sbb
mov
jno
sub
xor
pop
pop
inc
scas
cmp
push
add
pop
sbb
inc
out
xchg
sbb
icebp
inc
push
movs
push
jle
call
fwait
hlt
xor
cmp
in
das
sub
xor
cmp
inc
push
push
test
inc
xor
inc
icebp
int
push
inc
jmp
adc
mov
adc
inc
add
imul
jne
fwait
mov
cmp
pop
sub
mov
dec
cmp
imul
jl
pop
pusha
add
xor
mov
jne
or
jl
and
pop
xchg
(bad)
mov
push
stos
fs
sub
ret
add
xor
leave
pop
xlat
xor
lods
pop
mov
jno
imul
out
(bad)
mov
repnz
push
adc
cmp
iret
sbb
dec
jb
in
push
movs
in
(bad)
icebp
jp
js
retf
xor
scas
mov
shr
(bad)
jmp
or
dec
xor
add
call
fmul
loope
scas
clc
ror
add
(bad)
ret
inc
push
popf
addr16
lds
test
rcl
dec
sbb
aaa
cmp
add
cs
cmc
and
cwde
sbb
xor
stos
adc
data16
repz
retf
pop
scas
cmp
shr
repz
inc
dec
loope
adc
mov
iret
push
or
add
jnp
and
pop
xchg
(bad)
sub
sub
or
xchg
jmp
adc
dec
xchg
ds
lods
stos
test
cli
mov
push
aam
aas
or
dec
and
and
jg
pop
retf
sub
xchg
push
ins
in
ins
pop
fist
ffreep
cmp
cmc
pop
sbb
repnz
int3
fucomp
imul
es
mov
jmp
mov
dec
and
mov
sbb
adc
xchg
into
jl
js
push
mov
mov
push
pop
mov
shl
das
and
mov
movs
mov
mov
xor
loope
sub
imul
adc
dec
or
pushf
xchg
xchg
and
adc
dec
(bad)
lock
jns
mov
adc
cmp
gs
enter
shr
mov
stos
addr16
js
mov
jecxz
sahf
mov
jnp
xchg
mov
sbb
popa
repnz
and
cmp
lea
add
jae
sub
pop
push
addr16
xor
enter
sbb
or
movs
movs
inc
icebp
in
pusha
adc
push
fwait
mov
cli
mov
xor
lahf
aaa
stos
addr16
inc
sub
cmp
sub
out
jg
add
xchg
push
popa
sahf
(bad)
push
xor
mov
loopne
or
out
fisttp
aaa
inc
xor
or
(bad)
outs
and
jmp
or
mov
fstp
mov
test
inc
sub
push
int
aaa
sbb
enter
in
inc
scas
cdq
add
cmp
xchg
and
(bad)
xchg
shl
pop
(bad)
lods
sbb
or
test
std
dec
xor
sub
enter
cld
ss
in
(bad)
int3
std
cmp
sub
sbb
test
push
loop
std
mov
sbb
push
or
or
inc
aas
push
call
pop
fcom
mov
fsubr
cld
add
cmp
movs
iret
xor
adc
push
dec
fmulp
cmp
scas
sub
pop
jmp
add
add
cs
les
mov
jge
out
push
inc
mov
sbb
mov
push
jmp
jbe
jmp
test
repnz
mov
rol
push
cmp
push
xor
fcmovne
dec
and
popf
adc
xchg
jo
pop
mov
ins
mov
add
cmp
adc
pop
scas
scas
add
(bad)
xor
aad
jecxz
xor
mov
push
sub
nop
push
loop
mov
jae
cmp
xchg
pop
(bad)
jge
mov
push
cdq
loope
xchg
cmp
xchg
push
mov
out
mov
sar
into
dec
imul
adc
cmp
pop
pop
rcr
jg
(bad)
ja
add
lods
movs
hlt
lock
cli
leave
xchg
pop
jle
adc
xor
lods
aas
mov
mov
fidiv
add
mov
jns
fnstcw
mov
adc
(bad)
jle
cld
push
fld
shl
in
add
jb
mov
in
in
mov
dec
outs
jmp
(bad)
stos
add
test
ja
neg
jge
pop
pop
cmps
mov
js
lods
push
add
adc
xor
cdq
xchg
std
pop
mov
jl
jo
dec
int
mov
sahf
or
pop
sub
(bad)
(bad)
fsubp
inc
rol
push
scas
repnz
jo
xor
sbb
adc
(bad)
aam
shl
data16
push
mov
(bad)
dec
fimul
xor
stos
out
dec
add
mov
push
hlt
and
sbb
or
inc
xor
push
loope
adc
inc
fs
push
(bad)
push
test
fsubrp
mov
add
ror
push
or
rcl
xchg
out
fistp
xor
xor
xchg
or
inc
ret
pop
xor
sub
push
jle
imul
push
or
add
int
jge
dec
xor
idiv
push
stos
xor
rcr
sbb
jmp
mov
out
sbb
push
fcom
icebp
aam
xor
add
sub
loopne
sti
rcl
cmp
pusha
jo
xor
sbb
fbstp
clc
jne
hlt
scas
sbb
(bad)
enter
mov
dec
lahf
push
mov
pop
es
(bad)
pop
cmp
iret
mov
daa
mov
ja
in
bound
xor
xchg
inc
push
cs
loope
adc
adc
retfw
stc
lods
push
or
mov
(bad)
cmp
mov
shrd
xchg
mov
dec
and
pop
stos
xchg
sbb
jb
xlat
loop
and
(bad)
idiv
(bad)
repnz
stc
out
arpl
xor
sbb
and
pushf
out
xor
cli
and
sbb
push
je
add
shr
cli
xchg
adc
jno
mov
and
(bad)
fdivr
pop
cmp
xchg
push
pop
xchg
sbb
jb
iret
and
(bad)
cli
mov
cmp
lds
ins
not
lahf
jne
clc
push
(bad)
mov
mov
xchg
or
or
mov
sub
mov
je
gs
fstp
mov
or
imul
fadd
jb
add
mov
sub
mov
popf
xor
push
jge
inc
std
dec
je
aas
ins
addr16
sbb
mov
loop
mov
call
sub
dec
cmp
sub
scas
push
sub
cs
push
mov
ss
movs
idiv
sub
(bad)
xchg
adc
daa
sar
loop
or
fld
mov
jecxz
andps
fist
call
push
xor
mov
inc
or
stos
pop
scas
mov
xchg
mov
sub
call
xchg
fwait
xchg
ret
fisttp
pop
adc
mov
sub
or
adc
hlt
lds
test
shl
adc
rcr
and
add
or
(bad)
xor
cmc
cmps
inc
clc
cmovb
ss
push
sbb
movs
ins
enter
mov
iret
lahf
inc
mov
and
sub
setbe
dec
in
lods
sbb
mov
into
fcom
jno
loope
push
xchg
mov
movs
cs
or
stos
cmp
or
ins
cmps
fstp
icebp
dec
jmp
test
fisubr
mov
push
fsubr
ins
fild
jp
mov
sti
push
push
xor
cs
loop
push
and
ret
(bad)
push
add
movs
cdq
imul
(bad)
mov
cmp
out
dec
das
lods
jnp
jle
stos
loop
mov
lea
mov
test
stos
adc
push
sahf
icebp
push
pop
gs
loop
les
sub
inc
adc
dec
pop
cs
out
out
scas
sbb
repnz
pop
cmc
push
pusha
add
enter
scas
add
outs
cmp
xor
out
sub
cmps
stc
dec
test
mov
pop
call
push
cmp
mov
lea
mov
pop
jb
es
mov
pop
cmp
add
scas
mul
leave
add
sbb
js
pop
xlat
mov
aaa
push
inc
inc
retf
movs
xchg
mov
xor
cwde
xor
jg
repz
mov
ins
imul
cmp
or
enter
push
das
inc
jge
test
dec
jns
jno
xchg
lahf
mov
add
xor
and
mov
adc
loop
push
mov
or
push
aaa
out
in
fisub
cwde
xor
mov
push
in
push
sbb
push
mov
(bad)
xor
fwait
sub
loope
adc
pop
arpl
mov
mov
into
cld
or
cwde
mov
gs
nop
aad
adc
mov
repz
push
hlt
add
jp
inc
shl
nop
cmp
adc
cli
mov
mov
inc
les
add
dec
pop
sbb
dec
test
nop
popa
outs
leave
(bad)
sar
sub
cmp
push
sub
and
aaa
pop
ret
cmp
(bad)
arpl
pop
sbb
xchg
inc
les
sub
push
inc
fsub
lock
pop
fmul
sub
jg
call
cmp
inc
sbb
jnp
iret
mov
xchg
outs
retf
xchg
inc
adc
retf
and
arpl
inc
push
mov
stc
sub
fstp
sub
les
xchg
std
aaa
stos
fnstcw
or
xchg
pop
shl
test
pop
in
sbb
cwde
les
or
cmp
arpl
stc
int3
in
dec
dec
pop
ss
imul
or
dec
push
sbb
fcom
(bad)
aaa
sar
inc
les
div
fiadd
mov
enter
adc
in
sbb
xor
leave
bound
out
shl
into
mov
sub
cmp
fcomp
loopne
imul
nop
sahf
popa
push
lock
jo
and
aaa
test
cmp
pop
ds
daa
ins
arpl
mov
aas
hlt
push
clc
pop
xchg
(bad)
inc
dec
sub
ret
ret
cmp
mov
movs
scas
jmp
dec
jns
mov
sti
mov
loopne
retf
and
jmp
xor
adc
in
scas
and
or
inc
mov
test
test
cmp
(bad)
pop
adc
mov
fidivr
out
mov
jae
(bad)
and
cwde
mov
loopne
sub
adc
out
jmp
push
mov
retf
fnstsw
fadd
popa
not
lahf
sbb
icebp
mov
repnz
inc
retf
in
xchg
inc
adc
pop
and
add
mov
mov
and
dec
inc
xor
daa
push
fdivr
xchg
mov
sub
cmp
add
ins
dec
inc
xchg
stc
sbb
gs
xchg
in
push
sbb
lds
das
dec
mov
jl
es
mov
in
into
shl
xor
jle
daa
xor
xchg
into
or
mov
or
adc
test
aam
test
mov
ins
mov
iret
test
popa
repz
push
hlt
dec
mov
mov
out
ja
int3
pop
push
pushf
jmp
pop
les
adc
pop
sbb
add
push
pop
and
cwde
loope
cmp
and
mov
jle
fldcw
sub
dec
jecxz
arpl
sub
dec
ffreep
dec
std
or
jno
lods
stos
xchg
push
pop
add
test
lods
push
outs
sti
(bad)
push
in
sahf
mov
push
(bad)
and
sub
fiadd
jne
add
stos
pop
ja
push
inc
dec
xor
mov
mov
xor
(bad)
jae
cmps
mov
add
outs
inc
cs
push
sar
mov
scas
test
add
outs
add
pop
mov
(bad)
stos
inc
aam
xchg
sar
loopne
test
(bad)
push
es
xor
js
xlat
add
add
xchg
xchg
ror
cmps
pop
in
jnp
cld
fs
adc
xchg
loop
sahf
push
xor
mov
lods
sub
mov
inc
repz
mov
cs
cli
inc
add
cmp
inc
xchg
xchg
mov
fst
or
lds
inc
cmp
xchg
ror
pop
stos
pop
js
(bad)
fnsave
ja
jo
inc
dec
push
aad
jl
addr16
adc
cmp
jl
shr
ret
mov
adc
stc
cmp
imul
mov
jecxz
dec
jg
retf
fsub
push
cmp
repnz
mov
mov
clc
pop
inc
stc
imul
add
sbb
xchg
inc
mov
fs
jmp
ret
push
jbe
push
or
sti
fimul
xor
sahf
leave
daa
adc
mov
mov
pop
pop
dec
inc
aaa
cmps
jmp
rcr
scas
fimul
jnp
inc
pop
xchg
loop
lock
xlat
add
call
push
cmc
mov
mov
call
mov
xor
gs
dec
jmp
mov
lds
add
or
cs
jno
cmp
test
cmp
cmc
lds
scas
inc
xchg
dec
cdq
pop
mov
jbe
stc
push
scas
jecxz
push
push
sti
xor
sub
jl
pop
mov
cmps
xchg
xor
iret
sar
jmp
dec
aaa
arpl
mov
sub
jmp
xchg
add
xchg
cwde
or
das
adc
icebp
cmc
push
hlt
movs
mov
sub
shl
and
(bad)
fcom
mov
scas
ja
fadd
sbb
push
lds
addr16
mov
loopne
iret
and
inc
push
push
ficomp
dec
add
cmp
sub
jecxz
pop
mov
mov
jl
sahf
mov
inc
push
dec
(bad)
or
movs
out
sbb
dec
sbb
mov
daa
pusha
cmps
add
mov
lahf
push
push
jns
test
js
inc
mov
mov
std
scas
sbb
pop
cwde
sbb
sbb
loopne
or
sub
xlat
sbb
dec
dec
pop
int3
lea
add
add
xor
mov
inc
shl
shl
dec
ret
mov
call
and
jbe
sub
mov
pop
cmp
push
je
shl
add
enter
mov
outs
and
mov
dec
push
jecxz
(bad)
add
arpl
fdiv
idiv
or
retf
inc
movs
pop
cmps
(bad)
sub
sub
push
pop
pop
adc
outs
xor
push
ret
es
add
push
adc
lds
push
pop
sbb
es
push
xchg
retf
cmp
push
jnp
(bad)
lods
iret
fsubr
xchg
leave
mov
mov
gs
lds
hlt
sbb
xlat
mov
shl
in
inc
xor
jbe
cwde
fidivr
cmp
mov
int
(bad)
sti
cmps
fidivr
in
sbb
jl
cmp
xchg
aaa
adc
inc
call
clc
fld
je
cmp
and
jnp
add
aad
std
fsub
imul
inc
mov
ss
ins
das
cmps
cmps
push
in
movs
mov
sahf
in
push
xchg
nop
cmps
movs
adc
retf
mov
in
(bad)
mov
or
mov
xchg
push
leave
xchg
hlt
xchg
mov
mov
sbb
push
mov
inc
mov
push
inc
pop
ret
sbb
(bad)
mov
jge
popf
jne
cmp
inc
mov
pop
push
mov
jge
sar
aam
sbb
pusha
mov
mov
icebp
pop
fcomp
xchg
pusha
leave
xchg
cmp
pop
xchg
mov
repz
int3
jl
bound
xor
inc
dec
jnp
jmp
sub
ror
sbb
fwait
xchg
test
out
xor
sbb
repz
xchg
fnstsw
lea
sub
and
xor
xor
inc
adc
and
sub
xchg
mov
mov
test
repz
ds
push
retf
jl
jp
and
js
sar
and
out
in
mov
(bad)
loope
and
fld
hlt
dec
add
jno
mov
adc
xchg
into
out
inc
push
arpl
(bad)
mov
pop
rcr
sub
pop
lds
cmp
jbe
scas
add
adc
xchg
outs
ja
(bad)
sbb
inc
fild
mov
gs
(bad)
loope
mov
add
cdq
out
stos
mov
pop
(bad)
cs
jmp
imul
jb
xchg
add
sbb
in
out
xchg
and
rcr
mov
cmp
pop
push
mov
inc
std
out
push
push
cmp
sub
iret
mov
sbb
rcl
int3
arpl
push
jl
(bad)
cmps
es
add
jmp
jmp
int
lds
xor
mov
mov
mov
out
pop
xor
fidiv
in
sub
es
sbb
(bad)
fcom
(bad)
xchg
shl
lahf
outs
cmp
(bad)
scas
test
xchg
sbb
xchg
mov
jae
cmp
(bad)
dec
xchg
jge
retf
fstp
(bad)
dec
cmc
dec
in
ror
add
shr
dec
not
and
stc
xchg
lahf
clc
lahf
leave
sub
add
lods
rol
add
outs
mov
sbb
in
aaa
adc
push
fcomp
mov
sbb
cdq
sub
retf
scas
sub
retf
sub
int
outs
sti
adc
retf
dec
cmps
inc
inc
leave
jb
mov
aad
out
repz
out
push
mov
dec
mov
jl
sbb
sub
cmp
in
test
push
adc
ins
ins
inc
mov
scas
push
push
inc
jmp
gs
jno
push
cs
in
dec
and
push
jno
and
arpl
pop
xor
icebp
xor
std
aad
xchg
mov
shl
test
or
les
retf
loope
xor
movs
xor
pusha
push
cmps
xor
mov
std
mov
jae
sub
and
or
jl
lock
ror
push
pop
and
nop
cmps
lds
dec
push
adc
call
jno
das
jnp
push
aaa
or
jns
(bad)
(bad)
aaa
adc
cmp
xchg
pop
or
test
xlat
mov
push
or
retf
jmp
push
ret
xchg
dec
dec
push
mov
ja
ja
inc
add
stc
(bad)
xchg
stos
out
aas
mov
sbb
(bad)
(bad)
mov
cmp
int3
add
xchg
push
sbb
scas
xor
jno
stc
mov
dec
sub
inc
xchg
addr16
mov
sbb
cli
es
nop
mov
mov
test
and
pusha
and
sub
jo
ja
mov
xchg
icebp
jecxz
mov
xor
xchg
inc
aas
std
xor
ja
(bad)
xor
ins
loop
add
icebp
dec
adc
cmp
adc
mov
jp
inc
and
je
test
enter
das
loope
or
les
add
pop
mov
and
mov
outs
hlt
inc
jno
cld
xchg
cmp
push
jne
jae
jle
enter
adc
pop
sbb
jns
data16
or
mov
xchg
jecxz
ins
or
push
movs
xor
jns
bound
mov
cmps
sub
clc
data16
sbb
jmp
fmul
mov
scas
adc
pop
mov
jp
sub
sub
sub
mov
ror
nop
aas
sahf
dec
ds
push
adc
xchg
mov
xchg
test
inc
mov
mov
sbb
add
sub
rcr
adc
shr
push
sub
mov
imul
add
jnp
int
push
mov
jne
jmp
es
jae
je
jmp
push
repz
stos
jl
repnz
imul
fwait
enter
sbb
and
inc
add
dec
pop
cmp
call
stc
dec
dec
adc
fisttp
pop
dec
div
mov
fstp
call
push
jae
mov
jmp
cmp
push
push
dec
lods
xchg
mov
push
cld
cmp
stos
mov
sbb
sbb
sub
mov
jp
cmc
arpl
iret
cld
ss
outs
(bad)
xor
aaa
inc
dec
pop
xchg
cmp
inc
(bad)
in
lds
js
mov
out
ds
xchg
inc
xchg
in
std
cmp
mov
imul
or
push
fiadd
cmp
sbb
or
mov
jo
mov
adc
cmc
sub
xchg
pop
jne
mov
test
xor
inc
add
popf
jge
sbb
dec
iret
cmps
call
ins
jecxz
and
xor
lods
mov
cmp
sbb
in
das
or
jl
and
push
in
stos
inc
addr16
pop
(bad)
or
pop
ret
mov
cmps
pop
push
add
retf
jne
jp
lods
xchg
push
repz
adc
or
gs
add
inc
pop
ret
mov
xor
into
mov
cs
pop
mul
pop
fcmovnb
jae
int3
jno
or
in
xchg
push
pop
js
mov
mov
inc
lea
clc
bound
pop
jnp
dec
cs
rol
ficom
loope
xor
ds
mov
pop
popf
xlat
cdq
pop
sub
inc
dec
mov
mov
pop
adc
wbinvd
js
and
push
or
push
adc
sbb
xchg
add
and
mov
jl
push
and
popa
scas
jmp
imul
jp
xchg
stos
mov
dec
add
lahf
mov
jg
ins
arpl
lods
push
adc
sub
mov
xchg
or
arpl
mov
inc
shl
push
push
inc
xchg
in
adc
fcom
add
adc
stos
(bad)
cld
les
movs
fadd
mov
push
mov
mov
imul
mov
inc
pop
stos
xchg
xchg
les
push
ins
bound
retf
dec
fldenv
xchg
pop
je
ins
pop
xor
(bad)
mov
loop
push
addr16
dec
clc
scas
mov
jmp
sub
cmp
inc
push
add
push
pop
lds
fbstp
es
and
es
or
mov
xchg
jl
push
aam
(bad)
ret
bnd
pushf
jb
in
stos
jmp
cld
push
sbb
and
es
daa
xchg
cmps
adc
int3
inc
xlat
xchg
out
test
jae
xor
jg
jmp
daa
mov
mov
mov
stos
push
ficomp
fmul
cmps
pop
int
dec
repnz
ds
hlt
add
cwde
loopne
cli
fist
jno
scas
cmp
sub
nop
into
or
or
cmp
fiadd
das
cmc
and
xor
xchg
int3
sub
pop
pop
cs
push
fs
(bad)
pop
icebp
leave
repz
leave
cmc
mov
pushf
stc
fdivr
add
add
lods
jmp
adc
xchg
movs
(bad)
std
sub
loop
xlat
pop
ja
adc
pop
loope
les
in
popa
sbb
lahf
dec
jl
xor
push
rol
(bad)
hlt
xchg
outs
and
and
pushf
jp
rol
xchg
movs
xlat
xor
mov
popa
sbb
xchg
push
sbb
call
mov
stos
fst
xor
jge
retf
outs
xor
xchg
pop
(bad)
repnz
rcl
dec
and
xor
sub
and
xchg
mov
jmp
xor
mov
pop
ror
mov
cmp
arpl
(bad)
inc
and
call
test
fild
lds
or
cld
cmps
jl
data16
pop
dec
cmc
leave
mov
iret
xor
or
push
add
pop
mov
xor
mov
sub
jae
es
out
push
cwde
xor
cmp
mov
lods
dec
imul
xchg
call
lock
out
ins
dec
clc
xchg
sub
xor
pop
sbb
mov
mov
sub
jmp
mov
in
cwde
pop
and
stc
jne
aad
int
das
jle
stc
xor
jbe
es
mov
test
jle
int
bound
lahf
std
mov
cmp
adc
das
cmp
ret
ja
or
jmp
aaa
leave
sub
sub
pop
aas
ins
fwait
xor
push
jns
xchg
xchg
dec
ins
scas
pop
lods
cmc
les
add
in
iret
and
out
and
mov
rcr
adc
cmp
mov
jnp
sti
add
push
scas
inc
xor
nop
(bad)
xor
jno
mov
cmps
jmp
sbb
icebp
mov
xchg
inc
sub
call
dec
mov
fimul
pop
mov
inc
in
stos
mov
jmp
sub
inc
(bad)
ins
mov
les
in
push
xchg
stos
push
sbb
inc
cmp
or
fnstsw
repnz
inc
jns
xor
loope
dec
push
jge
ins
loop
dec
and
fimul
outs
out
out
push
stos
rol
sar
movs
out
sub
je
test
scas
loopne
pop
out
push
mov
xchg
ret
push
push
pop
mov
xchg
sbb
xor
jbe
outs
pop
mov
and
xchg
cmp
aad
mov
ins
dec
rcr
les
hlt
ins
xor
and
or
sbb
ret
dec
xor
xchg
std
pop
stos
add
mov
jnp
shr
mov
push
loope
jge
cld
mov
in
jle
repz
or
xlat
fcmovnbe
mov
mov
pop
jecxz
je
icebp
mov
sbb
sub
daa
jne
cli
add
shr
and
out
sbb
push
(bad)
icebp
lods
fsub
imul
dec
push
arpl
mov
cwde
int
mov
mov
pop
mov
ds
(bad)
(bad)
and
pop
and
and
ffree
fnsave
dec
jmp
inc
daa
repz
xor
sub
shr
xor
aad
fild
std
loop
das
pop
xchg
repz
nop
test
adc
das
and
test
test
imul
cmp
ret
pop
cmp
pop
inc
call
mov
loope
xchg
outs
or
add
jmp
fisubr
call
and
inc
and
mov
push
sub
cmc
ret
mov
sar
add
xchg
ret
push
pop
mov
div
mov
pop
jmp
gs
sub
mov
sbb
mov
loope
pop
xchg
xchg
or
pusha
loop
dec
jno
mov
int
sub
movs
mov
add
sub
(bad)
mov
sub
stos
xor
js
xor
and
xor
adc
fdiv
cwde
nop
sbb
adc
push
mov
(bad)
and
sbb
xorps
push
ret
and
push
adc
shl
das
mov
mov
jae
mov
mov
jnp
sub
test
sahf
icebp
push
call
mov
mov
cwde
int3
outs
mov
gs
mov
popa
das
lahf
aam
and
or
or
or
sub
(bad)
fnstenv
rol
enter
sub
(bad)
pop
icebp
icebp
mov
retf
sbb
or
push
and
sub
and
(bad)
aad
xor
push
xrelease
adc
add
imul
add
test
iret
inc
imul
pop
jmp
push
push
inc
sub
test
mov
das
mov
sub
mov
and
cdq
outs
gs
cli
adc
jecxz
aaa
repz
xor
and
gs
dec
pop
test
push
out
cmps
dec
nop
add
xchg
into
loop
xchg
mov
enter
sti
jae
xor
cwde
les
imul
js
js
mov
jb
cmp
hlt
pop
ret
jnp
jbe
xchg
inc
ins
and
ins
pop
rcl
xchg
test
add
sbb
xchg
aaa
je
in
or
movs
adc
mov
cmp
inc
dec
push
pop
xchg
jno
inc
xor
dec
hlt
test
sti
in
mov
sbb
cmc
and
clc
xor
rol
stos
pop
push
mov
pop
mov
test
lds
pop
sahf
xor
call
retf
xchg
xor
das
imul
add
mov
scas
and
(bad)
adc
sahf
mov
dec
gs
daa
and
push
loope
fidiv
dec
shl
inc
imul
imul
sub
cld
dec
ins
mov
jmp
sub
loop
fldcw
pop
(bad)
lods
das
cmps
jp
push
sti
neg
dec
sbb
jo
sub
push
(bad)
push
pop
movs
mov
xor
adc
mov
js
shl
adc
sub
imul
inc
push
add
jne
pop
inc
mov
ret
scas
out
icebp
jae
pop
call
sub
shr
in
add
test
repz
fstp
jb
sti
cmp
loopne
movs
fdivr
jp
(bad)
mov
popf
jge
movs
jmp
mov
add
rcr
repz
dec
fwait
cmp
dec
xchg
ret
dec
shl
test
sbb
ret
outs
mov
add
out
dec
scas
mov
jmp
jo
idiv
iret
push
popf
and
xor
fcomp
pop
pop
inc
fs
pop
lock
and
pop
mov
mov
or
scas
repz
jmp
cs
les
sub
pop
and
pop
mov
xchg
pusha
je
out
pop
cmp
les
cmp
scas
(bad)
sbb
mov
dec
pop
mov
push
(bad)
js
repz
mov
sbb
test
dec
and
mov
push
shl
xchg
and
aas
popf
sbb
dec
push
fs
mov
inc
and
xlat
aaa
scas
fs
in
jecxz
(bad)
rol
xchg
hlt
or
(bad)
call
mov
ret
ins
mov
add
cmps
cmps
stc
std
pop
mov
mov
adc
or
jae
daa
dec
(bad)
dec
fisttp
pop
add
jne
ja
pop
loopne
jb
out
and
fwait
test
xchg
xchg
idiv
inc
fwait
out
jl
int3
sbb
jne
dec
mov
dec
pop
adc
les
pop
int3
jl
pusha
dec
(bad)
xchg
(bad)
or
jne
xchg
push
inc
mov
pop
or
test
mov
ret
push
cmp
sub
inc
test
adc
mov
xlat
inc
sub
inc
mov
sub
add
jecxz
or
das
sbb
lea
mov
in
xchg
xchg
sbb
outs
cwde
int3
lods
cmp
mov
or
out
ins
cld
or
cmp
stc
cli
rcl
adc
add
ret
out
jecxz
(bad)
scas
stos
pop
scas
push
mov
mov
xlat
int
jne
push
dec
not
in
sub
push
int3
jecxz
xchg
sbb
push
fwait
or
mov
jmp
(bad)
dec
xchg
mul
stos
cmps
mov
push
fadd
xchg
push
jge
jnp
adc
out
scas
xor
push
test
dec
loop
out
cmp
sbb
fnstenv
retf
xor
popf
jp
dec
mov
std
loop
out
enter
std
mov
mov
jle
retf
mov
pop
dec
call
push
push
dec
imul
push
cdq
jno
jle
mov
retfw
inc
pop
inc
ins
mov
fnstcw
jnp
dec
or
xchg
ffreep
pop
es
bound
ins
pop
fisub
sub
inc
aaa
(bad)
inc
(bad)
push
sahf
idiv
mov
jmp
rcr
xchg
jb
mov
lea
fwait
cmp
aad
or
sub
push
adc
dec
xchg
jb
std
dec
or
out
imul
sub
sbb
out
adc
add
adc
add
mov
mov
dec
xchg
jne
dec
fisubr
cld
data16
repnz
mov
push
pop
jmp
jns
or
sbb
and
jg
fadd
out
lea
push
rcr
mov
push
mov
test
arpl
xor
xchg
cmp
movs
mov
hlt
stc
(bad)
aad
and
push
pusha
cmp
aad
xchg
je
daa
outs
les
pop
mov
sbb
outs
jnp
dec
push
jmp
aas
jnp
mov
dec
je
outs
pop
push
cs
sbb
mov
mov
pop
mov
sbb
shl
gs
pop
inc
inc
mov
cmp
loopne
leave
(bad)
repnz
add
cmp
jmp
add
scas
cmp
aad
in
pop
xor
adc
cmps
mov
add
dec
mov
mov
ins
call
sti
and
sbb
dec
xchg
and
ss
add
mov
jae
ja
out
mov
inc
jbe
push
fucompp
jne
jl
dec
mov
xor
sub
dec
ins
in
mov
in
outs
mov
aas
dec
dec
mov
mov
jo
pop
scas
mov
int
push
in
mov
ins
out
cmc
or
arpl
push
out
nop
inc
ins
inc
or
imul
push
sahf
push
xor
shr
dec
add
imul
push
loope
cli
ror
inc
stos
sbb
and
outs
and
mov
and
cmps
pop
adc
mov
push
dec
or
ins
into
mov
and
xor
jb
stos
inc
add
jae
pop
mov
movs
inc
cdq
inc
sti
test
call
pop
add
addr16
call
xchg
xor
call
dec
xchg
push
(bad)
rol
jp
inc
loop
fucomi
inc
jp
mov
cwde
hlt
fist
sub
xchg
fbld
mov
hlt
fnstenv
add
xchg
sub
xchg
adc
jo
xchg
sub
iret
popa
xchg
(bad)
sbb
(bad)
or
xchg
rol
lahf
xor
xchg
sbb
add
jle
and
jbe
cmp
pop
das
mov
adc
fwait
dec
xchg
leave
in
sub
push
call
loopne
and
mov
and
ja
xchg
mov
not
mov
pop
enter
scas
cwde
retf
in
jno
jne
mov
xor
cmps
or
mov
(bad)
out
loop
dec
mov
inc
movs
dec
jge
push
adc
aad
call
je
fnstenv
(bad)
pop
(bad)
push
fwait
cmps
in
or
repz
push
add
pmuludq
(bad)
out
jnp
cmps
push
lock
cs
js
mov
jbe
aas
std
sub
icebp
outs
xchg
push
mov
mov
mov
(bad)
add
push
in
push
ja
push
popa
and
dec
test
push
cmp
ret
jno
(bad)
ja
sub
stos
(bad)
jae
loop
test
jl
sahf
jns
cdq
(bad)
pushf
int3
into
xor
enter
xchg
pusha
push
mov
inc
nop
jmp
dec
jbe
xchg
out
adc
jg
leave
in
xchg
jo
arpl
lea
(bad)
cmp
(bad)
xchg
inc
rcr
xchg
out
inc
cdq
(bad)
(bad)
pop
lea
fdivr
mov
and
dec
cmps
push
jp
xchg
add
cmp
xlat
sbb
jae
ins
test
cs
sub
(bad)
xchg
add
ret
xor
sbb
xor
mov
nop
mov
in
mov
adc
rcl
(bad)
(bad)
jmp
sbb
push
jecxz
dec
push
xchg
jle
(bad)
mov
in
das
test
sub
or
test
cmp
outs
xor
xchg
mov
outs
inc
(bad)
popa
rcr
mov
cmp
pop
pop
push
mov
ret
add
jo
ins
adc
je
cmp
div
cmp
mov
adc
cs
ja
neg
inc
jae
ins
push
xchg
push
gs
fiadd
xlat
pop
ja
push
lods
mov
dec
adc
lea
cmp
xchg
mov
enter
mov
adc
fisub
mov
fidivr
dec
fistp
stc
jne
fidiv
jge
sti
clc
bound
(bad)
xor
(bad)
xchg
sbb
push
mov
and
jbe
nop
enter
inc
out
or
cmp
fwait
aas
lahf
inc
and
stos
cmps
sub
jge
vorpd
stos
sub
inc
vmovmskpd
jo
cdq
mov
fiadd
jbe
das
fiadd
scas
cmp
int3
(bad)
jmp
leave
(bad)
dec
xor
sub
mov
mov
sbb
cdq
and
sub
outs
cmp
inc
hlt
adc
cmp
mov
xchg
ret
pushf
sub
in
lds
xlat
call
fwait
iret
add
rol
jno
lods
push
cwde
sub
sbb
movs
xchg
sbb
sbb
mov
iret
pop
sub
push
add
jge
addr16
popf
jbe
cwde
or
jecxz
mov
aaa
icebp
xchg
dec
jmp
daa
in
push
js
scas
lds
xchg
push
or
lahf
push
sbb
(bad)
dec
sahf
push
sbb
fwait
cmp
pop
sbb
push
mov
adc
sub
xchg
jnp
int3
jae
mov
sbb
addr16
sbb
jmp
movs
xlat
mov
(bad)
(bad)
daa
push
sub
push
(bad)
fnstsw
loopne
push
scas
int3
push
mov
ja
aam
addr16
mov
stc
imul
cmc
inc
aad
jo
push
loopne
pop
xchg
push
mov
adc
pop
or
sbb
aam
sti
lods
jne
fidiv
ficomp
mov
jp
or
inc
xlat
sar
dec
mov
int
retf
sti
and
out
xchg
mov
scas
cmps
lea
inc
mov
mov
mov
outs
cld
mov
sbb
cmps
bound
shl
sub
xlat
das
adc
aad
gs
push
in
push
aad
mov
adc
ins
fcmovnbe
aaa
jecxz
sti
sbb
mov
push
dec
test
mov
movs
out
push
mov
mov
test
mov
adc
adc
shl
je
fwait
int
push
push
js
cmp
bound
cmp
inc
push
push
mov
jb
mov
inc
dec
mov
clc
(bad)
into
mov
xor
iret
mov
sbb
or
mov
xor
int
scas
cmp
in
test
sub
mul
ins
inc
inc
add
xor
push
rol
xchg
fs
lds
cmc
and
pop
hlt
mov
jno
mov
mov
add
scas
test
ins
pop
and
xchg
push
sbb
nop
stc
adc
gs
call
int
cmp
cmp
and
xchg
fs
jl
add
xchg
out
cmp
sub
mov
pop
mov
mov
fs
jno
ret
cs
sbb
rol
(bad)
add
stc
xor
cmp
or
mov
fdiv
ins
gs
(bad)
mov
ficom
push
jle
jmp
fs
jecxz
imul
mov
js
int3
push
mov
repz
mov
test
loopne
mov
dec
xchg
push
add
pusha
bound
lea
mov
out
mov
repz
retf
adc
(bad)
push
pop
out
jecxz
call
aad
push
push
dec
xchg
adc
sub
add
mov
and
push
inc
jge
push
sub
stos
mov
mov
xchg
fadd
lods
mov
cmp
mov
and
repnz
(bad)
jge
stos
add
cmps
test
inc
cli
pop
inc
pop
dec
call
jmp
imul
mov
lds
dec
xor
popf
sar
push
(bad)
out
add
loopne
jne
and
jnp
stc
outs
fistp
jbe
fbstp
xor
or
push
cmp
retf
cmp
aaa
cdq
sti
pushf
inc
call
mov
xor
pop
fadd
pop
sbb
cmp
pop
imul
cmp
bnd
xor
fwait
dec
retf
cmp
inc
push
xchg
out
push
inc
adc
mul
(bad)
arpl
js
retf
outs
aam
loop
nop
jmp
pusha
add
pop
sbb
add
movs
xor
xor
movs
push
xchg
pop
xlat
dec
jecxz
lea
mov
pop
dec
add
add
and
mov
push
mov
mov
fld
das
repnz
cmp
fnstenv
scas
cmp
iret
xor
push
mov
jb
sub
pop
jl
iret
mov
test
ins
add
inc
aaa
pop
cmp
les
aam
cmps
inc
pop
xchg
mov
lods
sar
ins
add
shl
icebp
shl
int3
or
xor
inc
and
xchg
outs
out
gs
xor
call
mov
std
xchg
das
lahf
dec
movs
addr16
les
adc
in
push
scas
cmp
rcl
fistp
loopne
arpl
ja
(bad)
pop
pop
mov
adc
daa
das
and
mov
movs
xchg
pop
mov
js
in
jecxz
cmp
cmp
sbb
neg
jmp
icebp
xor
fstp
fwait
cwde
xor
mov
stos
clc
dec
pop
adc
or
pusha
cmps
out
mov
es
(bad)
adc
shl
xchg
mov
dec
dec
adc
stos
or
into
add
mov
inc
mov
fisttp
or
jg
dec
lock
(bad)
fwait
inc
maxps
adc
push
dec
and
cmp
in
pop
push
jmp
ja
mov
pushf
imul
push
or
mov
leave
cmp
inc
xor
add
fnstcw
lea
je
ins
adc
add
add
sbb
sti
mov
icebp
pop
mov
fwait
sbb
aaa
lea
xor
loop
mov
call
push
pop
pop
pop
in
fwait
cmp
sbb
and
stos
fimul
xor
add
inc
mov
add
repz
xor
in
(bad)
jb
mov
xchg
xchg
cmp
(bad)
jmp
push
jp
mov
push
ds
test
cmps
add
mov
daa
fidiv
(bad)
in
sbb
xchg
pusha
sub
or
inc
inc
and
fild
retf
test
xchg
xor
sub
jle
rcl
mov
ins
(bad)
je
xchg
sub
xchg
loop
in
dec
scas
fisttp
and
cmp
push
loop
call
pop
push
cdq
cwde
pop
push
hlt
push
and
aam
cmc
ins
or
cmp
push
(bad)
dec
mov
popf
push
(bad)
fwait
ror
cdq
clc
push
pop
imul
call
pop
repnz
int3
lds
je
xchg
or
dec
imul
loope
mov
lods
cli
pop
mov
fnstenv
ss
sar
jg
bnd
xchg
into
jnp
int3
les
ret
(bad)
cmp
nop
sbb
(bad)
js
lods
fsubr
shl
aaa
sub
add
push
mov
sub
add
sbb
stos
cmp
rcr
movs
call
ins
sahf
aad
push
popf
stc
ins
(bad)
popf
mov
sub
xor
xchg
inc
push
mov
cmp
inc
call
clc
scas
push
enter
sahf
cmc
xor
cmp
mov
jge
adc
mov
push
sahf
jb
sbb
aaa
mov
mov
(bad)
push
les
xor
or
xor
jae
push
outs
lahf
shl
int
pop
inc
or
or
test
ret
mov
repz
(bad)
mov
pop
inc
or
fidiv
ss
add
call
cs
cmp
sbb
leave
dec
bound
adc
in
and
dec
dec
popf
dec
or
pushf
ins
sbb
dec
call
pusha
scas
jb
dec
adc
gs
jne
mov
and
ds
nop
cmps
leave
push
and
repnz
sahf
add
jmp
call
sbb
mov
enter
adc
xor
jmp
sub
adc
xchg
call
mov
ds
or
mov
retf
sar
retf
mov
mov
out
sti
mov
js
out
fild
daa
mov
aaa
cmps
in
js
pop
cmp
in
push
arpl
test
dec
out
outs
fsubr
push
sar
xchg
sets
add
sbb
fsincos
jnp
sub
push
pop
mov
push
jno
mov
je
or
cmps
mov
into
sti
cmp
xchg
adc
inc
jne
(bad)
jne
in
inc
test
retf
add
cmp
iret
shr
nop
inc
mov
enter
bnd
fidivr
dec
add
push
pushf
iret
(bad)
ud0
xchg
ss
adc
cmp
xchg
sbb
add
out
out
xchg
aas
cdq
jmp
dec
out
push
(bad)
push
call
dec
sbb
pop
inc
mov
fldenv
jmp
es
mov
pop
mov
xchg
enter
jb
ret
xor
dec
bound
stc
cmps
in
push
sub
adc
sbb
push
aaa
call
fwait
lock
xor
mov
imul
sbb
test
popa
dec
jmp
inc
ss
push
mov
outs
sar
pop
leave
fs
jae
push
gs
ja
imul
adc
scas
mov
cmp
cwde
inc
push
jg
repnz
fisubr
imul
dec
push
sar
add
xchg
pop
test
mov
adc
xor
or
les
mov
jmp
inc
mov
xchg
push
div
xchg
adc
or
cs
clc
inc
pusha
loopne
clc
sbb
ins
xchg
xchg
inc
leave
sbb
dec
(bad)
hlt
cmps
dec
stos
adc
in
xlat
adc
mov
add
xor
sti
pop
aas
fidivr
leave
add
invd
xchg
push
les
cld
loope
mov
adc
retf
add
sbb
adc
mov
loopne
test
mov
jbe
(bad)
mov
call
sar
sbb
pop
xor
mov
and
stc
call
and
retf
xchg
and
dec
sti
push
or
add
push
pop
(bad)
bound
data16
jnp
mov
xor
call
cwde
rol
pop
in
(bad)
push
neg
cmp
pop
sbb
mov
lods
cld
add
adc
xor
xchg
jg
sbb
adc
pop
(bad)
pop
and
retf
test
add
xchg
sub
push
push
adc
dec
mov
pop
pop
sub
ins
lock
stos
lea
xor
out
xor
mov
lock
leave
retf
enter
in
dec
enter
sub
ret
out
inc
hlt
sub
popa
or
sub
aam
movs
cs
xlat
inc
outs
or
sub
(bad)
in
dec
pop
cmp
cmps
xchg
jmp
call
mov
xor
fwait
(bad)
pop
retf
data16
mov
rcl
imul
clc
loop
enter
add
inc
fdivr
das
fnstcw
and
movs
js
and
scas
addr16
idiv
jo
ret
pop
xor
adc
shr
xor
pop
pop
retf
cld
xor
ss
dec
sbb
div
lahf
push
daa
dec
cdq
loope
or
inc
sahf
jg
(bad)
mov
add
scas
test
mov
or
dec
cwde
xchg
push
xlat
or
sbb
shr
enter
out
sar
stos
(bad)
sub
je
jo
pop
ret
cmps
dec
pop
mov
xor
aad
jns
dec
push
pop
mov
xchg
jmp
ret
inc
lods
push
xchg
pushf
adc
pop
fiadd
call
sbb
xchg
iret
outs
add
fmul
mov
mov
lods
push
cmp
stos
hlt
bound
pop
xchg
xor
xor
movs
sub
cs
jmp
pop
pushf
aaa
push
sbb
push
enter
jmp
cmps
daa
add
ret
aad
es
jns
xchg
mov
shr
retf
or
dec
push
cmp
dec
mov
shl
xchg
shl
hlt
cld
mov
ret
cli
jle
nop
jecxz
popf
jmp
xchg
sahf
inc
clc
retf
out
cmp
out
cli
push
xor
add
push
sbb
es
out
xor
sub
pop
pushf
mov
push
jo
out
lock
adc
fst
xchg
push
sbb
cmps
pop
or
retf
xchg
test
daa
in
lahf
xor
sbb
scas
fst
and
jge
jg
mov
(bad)
cmps
mov
xchg
add
cmps
mov
inc
std
mov
mov
gs
xchg
dec
xchg
sbb
and
int
retf
or
and
pop
mov
mov
stos
ror
dec
push
xlat
adc
pop
pop
pop
popf
stos
jo
(bad)
popf
hlt
mul
loopne
(bad)
lock
mov
push
jg
clc
or
jae
fsubr
(bad)
push
xchg
fwait
jo
ret
and
sub
lea
jmp
inc
push
sub
scas
retf
ret
pop
pop
mov
sbb
(bad)
(bad)
jmp
inc
int
dec
inc
cmps
sbb
push
adc
or
lds
inc
into
push
and
in
pop
push
add
jnp
dec
fneni(8087
pop
mov
retf
cld
mov
and
mov
pushf
movs
sub
pop
ja
dec
pop
jmp
test
mov
xor
push
dec
out
sbb
gs
retf
mov
shl
lds
xor
fucomp
ss
pop
rol
xor
xchg
push
test
mov
push
in
fsubr
cmp
lahf
cmp
inc
cmp
pop
xor
xor
or
out
mov
push
push
adc
inc
sbb
cli
inc
dec
dec
jge
les
shl
cwde
bound
jp
mov
jle
xchg
mov
(bad)
sahf
push
loope
sub
add
sub
in
mov
mov
mov
icebp
imul
daa
add
ds
mov
cmp
xor
adc
pushw
fdiv
cmp
cmp
movs
jle
call
xlat
xchg
sub
data16
pusha
out
(bad)
sub
sbb
es
(bad)
fsubr
neg
call
bound
sub
mov
add
data16
xchg
mov
inc
mov
rcl
mov
and
xchg
cmp
pop
xchg
ss
or
xchg
sbb
iret
sub
es
inc
jle
xchg
out
inc
arpl
jb
jo
retf
sbb
inc
not
loope
call
test
ss
cmc
pop
mov
sahf
fcom
pushf
scas
or
pop
ja
sub
cmp
push
nop
int3
outs
mov
in
sub
sub
pushf
movs
jp
or
jecxz
cmps
inc
shr
in
xor
bnd
push
adc
mov
push
popf
pop
mov
jg
bound
scas
lds
ror
lahf
mov
xchg
jmp
lods
test
je
stc
pop
mov
add
adc
mov
xor
(bad)
push
popa
ins
test
dec
inc
sbb
mov
sbb
sahf
and
jno
sbb
push
fmul
push
xchg
in
ds
push
sub
and
sbb
scas
test
test
ror
out
nop
xor
jge
bound
pop
mov
aad
mov
adc
inc
fistp
cs
cmp
(bad)
arpl
repnz
mov
out
lea
jmp
and
cmp
int3
mov
scas
call
popa
mov
inc
push
aam
punpcklwd
sub
nop
repnz
and
test
in
ficomp
jmp
sti
mov
cs
xchg
sbb
dec
cmp
inc
add
jno
or
jecxz
sti
push
loopne
sub
xor
ret
ss
cmc
daa
cmp
push
ret
inc
jg
jnp
inc
push
je
ret
ins
or
lea
mov
cmp
mov
std
mov
(bad)
mov
or
dec
pop
cwde
imul
push
ret
outs
jmp
or
or
adc
add
inc
mov
jb
dec
in
push
mov
jo
push
loop
dec
retf
(bad)
jmp
mov
into
push
movs
inc
aas
or
jne
dec
(bad)
gs
inc
test
mov
test
mov
cmps
adc
fcom
shl
jle
outs
enter
push
sahf
fs
dec
push
xor
cli
(bad)
fdivr
not
mov
lea
sbb
out
in
pop
clc
pop
jo
pop
mov
adc
mov
sub
std
in
mov
lods
jbe
pop
or
inc
loope
sahf
sti
mov
fidivr
dec
pop
add
push
loope
mov
mov
mov
push
xchg
mov
aaa
popa
mov
and
mov
pop
inc
retf
fs
push
rcr
mov
sti
aam
out
sub
into
pusha
cmp
add
es
or
jle
dec
dec
(bad)
imul
je
mov
idiv
pop
sar
and
mov
adc
xchg
adc
into
aaa
ja
dec
mov
nop
cmp
jnp
mul
or
mov
in
xor
and
mov
int
(bad)
loop
(bad)
loopne
(bad)
push
popf
int
daa
mov
add
sub
pop
or
cmps
pop
jb
or
or
out
das
jbe
mov
data16
pop
out
inc
jb
ins
ss
ins
mov
dec
fdiv
retf
std
xor
cdq
adc
xchg
ror
adc
fsub
cmp
aad
movs
xchg
shl
mov
sbb
adc
clc
mov
pop
sbb
loope
mov
and
mov
div
fiadd
cmp
movs
jge
mov
or
clc
je
(bad)
sub
push
jle
jmp
mov
cmps
scas
sub
fwait
cmp
or
jae
rcr
movs
(bad)
sub
les
scas
gs
fdivr
sub
sar
in
mov
cmp
cmp
les
ss
(bad)
push
pop
adc
jl
lahf
stos
cli
mov
popa
not
jp
retf
inc
lods
push
rol
dec
cmp
cmp
push
retf
in
mov
mov
jg
(bad)
stc
imul
and
add
mov
cmps
int
mov
adc
jns
clc
jno
cld
xor
iret
movs
push
and
cdq
daa
inc
daa
xlat
xchg
pop
add
mov
push
add
leave
or
aas
retf
pop
jne
mov
cwde
(bad)
lock
xor
jo
xchg
fild
jmp
and
or
pop
es
mov
adc
ret
shl
dec
icebp
mov
or
mov
outs
push
cmc
outs
imul
dec
dec
rol
xchg
jl
ins
or
jmp
sbb
mov
(bad)
jle
rol
fs
cmc
enter
xchg
out
in
sub
outs
jo
sahf
fcmovne
jp
cli
mov
inc
mov
stos
push
sahf
or
test
popa
and
or
sub
jbe
in
out
mov
into
(bad)
(bad)
xor
mov
mov
xchg
aas
out
cmp
mov
cmc
outs
rep
sahf
push
arpl
enter
mov
sti
xchg
sub
jmp
adc
(bad)
clc
ja
mov
pop
cmp
in
aad
mov
int
dec
arpl
mov
pop
inc
repnz
je
jno
in
pushf
pop
push
add
adc
mov
test
call
sbb
scas
jl
or
cmp
xor
xchg
cmp
std
sub
jmp
sbb
sbb
mov
cdq
ud0
test
out
xor
and
into
xor
jae
sub
jmp
les
scas
or
scas
(bad)
cld
adc
adc
fwait
sti
sahf
jo
inc
aad
sub
xor
movs
mov
icebp
inc
xchg
jne
rcr
int3
adc
inc
xor
test
xchg
inc
mov
mov
and
call
jnp
lods
xchg
std
mov
retf
cld
stc
mov
or
mov
xchg
scas
adc
nop
or
ficom
aaa
jge
sbb
cmp
mov
test
mov
lds
dec
pop
push
pop
mov
popa
xor
test
ss
fwait
test
cmove
xor
test
pop
push
ror
loopne
mov
fwait
pop
inc
lea
xor
mov
jae
dec
push
jns
pop
sbb
push
mov
and
jo
outs
sub
sbb
or
retf
dec
cmp
inc
add
mov
dec
outs
lea
xchg
nop
(bad)
loope
push
mov
pop
and
push
cld
xlat
test
xchg
jecxz
lock
adc
nop
lods
xchg
cs
addr16
in
cwde
call
ja
std
imul
cmp
(bad)
jmp
push
out
stos
add
push
and
call
cs
sub
fwait
add
dec
inc
mov
out
cmc
mov
aam
sub
(bad)
mov
mov
retf
pop
and
sub
shr
dec
cwde
cld
pop
xchg
inc
mov
xchg
outs
movs
hlt
inc
mov
dec
fnsave
out
or
iret
push
adc
and
cld
loopne
sbb
sub
mov
adc
and
dec
sbb
xlat
xchg
sbb
pop
sbb
imul
mov
push
sbb
popf
and
mov
lods
pop
mov
popa
cmp
das
sahf
mov
das
repnz
in
xor
mov
rcl
ins
mov
cmp
imul
pop
push
and
add
pop
scas
adc
add
ror
in
adc
sub
cwde
cs
ficomp
mov
mov
and
mov
fstp
push
out
or
movs
ficomp
and
test
test
add
int3
out
out
scas
sbb
xchg
gs
sbb
adc
enter
push
or
test
iret
outs
das
xchg
add
je
add
ret
ja
add
mov
ficom
mov
movs
aam
es
mov
outs
jp
jbe
shl
outs
fnsave
faddp
adc
loope
test
push
mov
push
jp
repnz
sbb
outs
out
xchg
and
sub
call
sar
pop
inc
mov
mov
iret
fcom
cmp
fdiv
in
cld
aaa
pop
cwde
shl
(bad)
popf
inc
mov
add
or
daa
or
jnp
push
aad
dec
xchg
xchg
pop
add
enter
adc
cmp
icebp
in
adc
dec
mov
icebp
pop
ret
mov
pop
xor
ds
xchg
adc
div
mov
mov
add
mov
mov
xor
stc
nop
loop
mov
out
ss
jae
dec
jl
mul
add
jl
(bad)
fucom
sub
enter
mov
push
xchg
repnz
jge
inc
xor
jns
inc
fcmovu
dec
adc
pop
push
mov
xor
lods
or
mov
cmps
sub
scas
mov
out
test
pop
es
scas
fcomi
push
mov
int3
cmps
dec
arpl
jl
stos
jno
neg
mov
aas
cmp
xor
bound
out
(bad)
test
call
inc
call
in
jge
push
rol
add
xlat
pop
or
mov
push
xchg
(bad)
popf
mov
mov
push
movs
xor
xor
mov
and
push
or
xchg
mov
fistp
and
sub
iret
inc
aaa
add
arpl
mov
mov
ss
mov
test
int
stc
push
or
int3
int
inc
jb
icebp
outs
cmps
neg
mov
add
ja
xchg
enter
and
add
or
loopne
mov
push
lods
inc
stos
je
inc
mov
xchg
fisub
add
(bad)
dec
inc
sub
inc
sbb
jg
out
lods
mov
jp
out
and
jno
movs
mov
push
or
adc
(bad)
push
test
frstor
cmp
jbe
cmps
jle
enter
(bad)
adc
jl
mov
jle
(bad)
out
jge
sbb
or
std
cmp
inc
dec
test
cld
pop
test
and
sar
iret
loope
or
adc
inc
dec
leave
(bad)
retf
jb
mov
sbb
pop
adc
clc
add
push
addr16
(bad)
(bad)
mov
fimul
fbstp
fwait
ds
dec
in
stos
pop
pop
mov
push
cdq
div
dec
lds
xchg
add
push
add
inc
movs
cmp
dec
or
sub
rcl
and
xor
ins
mov
fs
sbb
imul
inc
fwait
ja
add
add
(bad)
loope
fsub
xchg
out
push
mov
inc
jecxz
xor
repnz
mov
ret
int
(bad)
mov
les
call
cmp
(bad)
into
sti
add
jbe
adc
dec
jns
xchg
pop
mov
jne
fild
mov
xor
cli
push
(bad)
(bad)
jo
mov
test
mov
adc
imul
clc
or
sbb
push
xlat
js
cmc
add
push
imul
pop
pop
pop
and
push
adc
das
jo
ret
inc
xchg
mov
push
test
mov
imul
sub
outs
push
pop
push
fld
sub
dec
out
addr16
fisubr
inc
jmp
or
(bad)
jl
lock
push
xor
lock
jb
icebp
inc
lds
push
stos
sahf
movs
pop
add
jp
xor
iret
sub
ret
pop
outs
in
xchg
jmp
cmc
std
sub
repnz
ret
dec
xor
outs
dec
or
jbe
dec
add
loope
(bad)
std
mov
pop
out
(bad)
xlat
jno
xchg
inc
jge
repz
call
arpl
cli
and
jmp
ror
ret
addr16
sbb
adc
fwait
cmp
sub
sub
inc
daa
out
adc
push
gs
push
inc
aaa
imul
into
or
xor
loope
pop
sti
adc
jge
or
pop
lods
sub
(bad)
sbb
pusha
push
and
iret
out
int
cmc
pxor
and
and
cmps
and
xchg
shl
int3
jo
shr
mov
enter
div
test
xchg
pop
or
cmps
xchg
fwait
cmp
xchg
(bad)
iret
ins
int
outs
mov
mov
call
test
or
les
or
push
repnz
cmps
lods
lds
sbb
mov
(bad)
adc
in
ins
cmps
daa
hlt
daa
movs
pop
sub
dec
jno
mov
fnstenv
std
xor
stc
cs
xchg
or
in
dec
ins
cmps
jae
jp
das
inc
sbb
or
sar
mov
push
pop
aas
addr16
inc
daa
fs
sahf
aas
scas
mov
sbb
arpl
sub
sub
iret
sbb
out
hlt
push
nop
xchg
push
cmp
call
sub
nop
cmp
test
retf
mov
fnsave
leave
add
mov
test
xchg
mov
mov
push
jmp
(bad)
jmp
push
(bad)
pop
dec
xor
jecxz
js
and
shl
in
pop
or
push
cmp
je
cmc
and
test
sbb
cmp
(bad)
jno
stos
out
pop
jne
and
int
xchg
jl
cmp
dec
retf
pop
fimul
xor
fisubr
pop
push
pop
in
fsubr
pop
ret
imul
pop
jmp
mov
xor
scas
jecxz
mov
pusha
inc
mov
js
repnz
and
dec
mov
or
pop
imul
retf
sbb
sub
add
ror
lahf
add
je
rcl
cmps
imul
stc
jb
cmp
sub
sbb
iret
push
adc
(bad)
fnstsw
pop
pmulhuw
outs
cmc
movs
lods
mov
adc
sar
mov
out
push
rcr
aad
sbb
clc
shr
lods
xchg
mov
stos
jne
retf
aaa
lds
lods
sub
bound
sbb
in
mov
mov
pop
mov
es
xchg
inc
ins
movs
add
retf
xor
xor
scas
int3
cld
cmp
inc
cmp
or
inc
movs
jmp
push
xchg
popa
daa
fcomp
paddsw
push
mov
repz
pop
or
adc
mov
addr16
rcl
push
mov
push
pop
mov
aad
jge
(bad)
movs
into
daa
aas
lock
das
jg
cmp
(bad)
pushf
test
pop
xchg
retf
or
pop
xor
cmps
je
sbb
xchg
sbb
addr16
rcl
jnp
sub
push
xor
pusha
imul
fldcw
imul
ror
or
adc
or
mov
mov
xchg
inc
cmp
jns
jl
shr
in
pop
sub
mov
lods
out
(bad)
pop
mov
inc
xor
and
(bad)
repnz
rcl
addr16
ds
mov
mov
pop
cdq
cmp
gs
stos
repz
xlat
daa
test
ret
ds
and
xchg
cs
sahf
mov
mov
mov
pop
push
and
into
retf
push
rcr
fs
mov
(bad)
and
push
in
and
push
daa
jbe
and
sub
jo
test
mov
sbb
inc
and
jle
mov
xchg
jnp
adc
add
pop
in
lea
mov
add
(bad)
mov
inc
xor
loop
and
add
pop
das
mov
sbb
mov
mov
stc
mov
stos
push
test
(bad)
jle
inc
scas
imul
popf
pop
mov
rcr
inc
xor
mov
dec
xor
mov
cli
imul
imul
sub
adc
in
mov
adc
add
iret
inc
sub
mov
stos
push
add
and
call
arpl
lods
push
pop
and
sub
mov
cld
xchg
(bad)
push
or
dec
inc
fcmovnu
pshufw
out
(bad)
mov
stos
push
and
inc
add
mov
push
lahf
mov
jb
add
mov
mov
inc
mov
or
or
das
sbb
ja
mov
loope
jne
bound
xlat
test
mov
push
and
or
int
mov
xchg
mov
push
dec
sub
js
(bad)
fild
mov
sti
cmp
dec
(bad)
in
and
in
pushf
cmps
mov
stc
mov
fst
mov
dec
in
push
fwait
mov
daa
(bad)
sbb
add
mov
push
adc
dec
pop
lods
iret
rol
lahf
mov
ins
dec
hlt
sub
in
cmc
js
jmp
jns
xchg
loope
xchg
sbb
sahf
push
push
fucomp
xchg
mov
rol
shl
lods
retf
shl
inc
xchg
jmp
mov
sbb
xchg
cmp
and
xchg
add
out
jmp
fimul
mov
mov
outs
mov
sub
stos
dec
push
adc
ret
xchg
or
mov
mov
or
adc
pop
stos
inc
jno
sub
pop
cmp
iret
ins
xchg
popa
and
les
push
or
inc
push
inc
iret
jl
jmp
iret
jnp
sbb
cs
call
ret
cs
jecxz
inc
mov
test
ins
cmp
xor
rcl
leave
xor
mov
push
retf
push
jge
cmp
push
ins
add
sub
mov
dec
cld
imul
add
or
push
pop
cmp
bound
fisttp
in
dec
pop
and
dec
push
test
dec
fbld
push
fs
daa
lods
popf
mov
sahf
out
cmp
inc
ds
sub
inc
iret
rol
cmps
loopne
jbe
mov
pop
jbe
mov
std
lahf
xor
push
mov
cmps
sbb
loopne
pop
pop
sahf
ins
arpl
cmp
outs
add
cmps
sbb
cli
popa
dec
mov
arpl
jg
dec
jl
add
fisub
cmps
cld
fnstenv
out
inc
and
xor
adc
xchg
push
sub
cmp
pop
stos
fild
pop
repnz
xchg
jp
outs
cmc
repz
jae
push
dec
sub
sub
ins
inc
fdivr
call
add
dec
pusha
dec
test
xchg
jns
jle
mov
cmp
ss
es
out
sbb
dec
call
stc
dec
mov
fwait
ja
loopne
and
fwait
dec
cmps
cmp
popa
sbb
sbb
cmp
pop
out
idiv
in
or
add
stos
loope
cdq
aad
inc
sti
cli
lock
inc
clc
rol
adc
lds
sar
pop
dec
gs
sbb
shl
ds
mov
or
inc
jae
popf
mov
fcmovnbe
inc
jp
ss
in
icebp
adc
mov
js
(bad)
push
xlat
jle
arpl
or
xchg
push
shl
into
dec
jge
shl
jg
rcl
ja
mov
jbe
sub
add
inc
push
or
add
enter
fnstcw
pop
leave
popa
loopne
nop
push
(bad)
xchg
pop
movs
ins
loop
jp
sbb
mov
pmaddwd
or
scas
into
test
(bad)
xchg
add
or
lods
dec
cmp
add
dec
lahf
fistp
call
jmp
xlat
lods
fst
xchg
pop
jmp
adc
(bad)
imul
retf
and
jmp
inc
out
add
xchg
pop
cmp
aas
aad
adc
mov
ins
adc
dec
not
icebp
push
aas
or
jmp
repnz
addr16
jecxz
je
add
jae
or
(bad)
out
cld
push
outs
psubd
bound
mov
cmc
mov
adc
push
dec
or
pop
push
adc
clc
into
fcomi
sub
aam
add
push
in
inc
push
imul
test
shl
test
jmp
dec
ret
out
pop
dec
ins
push
sbb
rcl
test
scas
sbb
mov
sbb
daa
cmp
mov
or
shl
cmp
push
out
push
mov
pop
inc
push
sub
inc
xchg
inc
push
jnp
push
mov
jne
or
call
pop
in
aad
(bad)
das
push
fcomip
cmp
adc
das
inc
jmp
adc
out
out
dec
push
sub
pop
icebp
jle
jb
ret
xchg
bound
mov
adc
movs
mov
adc
(bad)
cmps
inc
dec
pop
pop
xchg
sub
inc
in
xchg
fisttp
adc
push
jns
mov
daa
and
(bad)
fdiv
lds
mov
fcomp
stos
add
push
jge
xchg
inc
pop
iret
maskmovq
test
call
cmp
lock
xor
jmp
jns
inc
mov
stos
inc
jae
adc
(bad)
xchg
imul
int3
cs
rcl
std
lea
mov
pop
jae
cmps
clc
sti
hlt
into
push
xor
mov
cmp
mov
int3
jns
cmp
bound
test
jge
push
jecxz
or
movs
jb
lods
ins
jne
rol
jmp
jns
xchg
rol
cmp
test
mov
lds
ret
iret
push
adc
cld
xchg
ja
std
add
inc
arpl
mov
or
hlt
xor
(bad)
movs
sub
es
sti
les
aam
or
dec
xor
arpl
pop
dec
mov
sbb
push
cmp
inc
sbb
pop
enter
test
cmc
lea
sbb
pushf
xchg
sub
mov
(bad)
pop
es
add
or
mov
(bad)
rcr
pop
inc
pop
push
xchg
outs
inc
sub
fs
scas
push
and
dec
push
mov
sub
jmp
and
adc
xor
pause
fimul
(bad)
frndint
iret
aam
add
popf
cmp
shr
loope
cmovbe
pop
or
xchg
cmps
aaa
jae
jmp
rcl
inc
push
mov
adc
enter
shr
pop
scas
pop
mov
mov
leave
mov
xchg
loope
sbb
push
inc
inc
pop
not
xor
stos
xor
stos
mov
xchg
xlat
xchg
xchg
jbe
xor
test
lock
(bad)
or
outs
bound
(bad)
in
cmc
fidivr
push
push
jb
fcom
mov
add
imul
shl
ds
sub
(bad)
inc
add
outs
fimul
add
stc
aas
lahf
stos
and
stos
pop
(bad)
xchg
in
sahf
mov
mov
mov
femms
xchg
das
sbb
sub
adc
xchg
rcr
xchg
int3
inc
push
movs
add
loopne
bound
xor
dec
shr
call
inc
(bad)
dec
cwde
aam
add
aas
ret
inc
xchg
jnp
push
(bad)
adc
xor
dec
test
das
iret
aas
dec
pop
int3
xor
cmp
cdq
imul
pop
leave
push
add
jmp
(bad)
adc
jmp
scas
fs
mov
sub
shl
jo
mov
mov
pusha
in
xchg
rcl
adc
adc
sub
inc
dec
lea
mov
popf
cmp
add
out
push
jecxz
pop
push
and
push
stos
dec
dec
push
mov
mov
dec
cmps
aad
xchg
mov
mov
mov
addr16
adc
xchg
stc
loope
inc
ins
aam
fisubr
mov
add
outs
retf
pop
or
pop
(bad)
shrd
dec
jecxz
adc
mov
push
jnp
idiv
fld
mov
test
(bad)
call
(bad)
pop
ficomp
adc
mov
popf
loop
adc
(bad)
xlat
xchg
sbb
mov
scas
inc
stc
lock
(bad)
iret
dec
sub
dec
(bad)
inc
ror
ss
push
fnsave
or
add
jg
jno
xchg
imul
and
lods
outs
push
jecxz
popa
dec
popf
cmp
dec
add
js
fnsave
enter
cmp
xchg
lahf
sbb
xchg
add
dec
pop
cmp
mov
xor
pop
pop
or
cmp
jp
in
enter
test
push
movs
push
mov
adc
shr
push
jns
int
push
and
sbb
das
xchg
dec
gs
repz
icebp
push
push
aaa
cmps
jg
cmps
or
push
jmp
enter
mov
pop
jne
imul
mov
shl
xchg
icebp
repnz
xchg
mov
pop
cmps
add
mov
sub
push
dec
mov
enter
pop
in
stos
push
add
push
imul
cmc
aad
cld
pop
pop
cmc
adc
pushf
jae
clc
mov
dec
jle
xor
shl
lahf
sbb
retf
iret
inc
push
fidivr
in
push
sub
xchg
fild
mov
inc
mov
push
dec
idiv
xor
mov
dec
call
add
retf
push
jns
add
dec
aaa
cmp
push
imul
sahf
aaa
dec
fist
data16
ins
ins
dec
jnp
sti
pop
fistp
arpl
fstp
(bad)
mov
movs
iret
pop
sub
mov
dec
xor
sbb
pop
dec
cmp
sar
test
mov
iret
bound
jg
adc
inc
push
mov
jne
clts
mov
ror
pop
fs
push
cmp
jo
fldenv
and
mov
mov
ret
mov
sahf
test
push
push
inc
adc
(bad)
cwde
in
js
pop
and
dec
push
push
sub
xchg
mov
mov
inc
pop
mul
je
arpl
std
push
adc
sahf
je
js
aad
cmps
lods
test
retf
sbb
ret
scas
fwait
sub
lock
lea
and
pop
iret
loope
or
mov
mov
or
xlat
and
clc
sbb
cmp
scas
std
scas
jmp
sti
fistp
dec
hlt
jle
add
neg
ja
dec
dec
popf
je
lds
push
scas
adc
pushf
and
or
sbb
push
out
sbb
push
rcl
out
xchg
jmp
mov
sti
(bad)
mov
xchg
leave
mov
cs
movs
dec
movs
(bad)
into
and
fild
pop
pop
fst
cld
cmc
scas
push
aam
mov
dec
add
add
int3
inc
movs
das
cwde
cmp
add
push
ja
sahf
popa
jge
aaa
loopne
pushf
cmc
inc
adc
lahf
xchg
les
mov
mov
add
pop
out
adc
loopne
or
dec
out
arpl
cdq
sub
or
shr
mov
jecxz
dec
es
and
push
pop
aas
fstp
jae
sar
pushf
jge
jno
ja
mov
(bad)
(bad)
icebp
add
or
stos
mov
fld
addr16
movs
ja
dec
ffreep
sbb
pusha
mov
iret
or
cld
call
jle
mov
sbb
ror
out
jbe
sbb
sub
pushf
test
or
in
inc
fcmovnbe
es
into
sub
js
leave
adc
and
pop
mov
add
dec
mov
cmp
aas
mov
sub
sahf
pop
pop
jg
or
pop
stos
sbb
pop
scas
int
push
xchg
sub
sti
ins
sar
cmps
test
or
xchg
out
aam
out
dec
cwde
(bad)
fsubr
repz
xor
scas
dec
movs
inc
not
add
dec
add
push
ror
(bad)
cmps
jo
xchg
jnp
mov
adc
pop
(bad)
int
test
or
stos
lods
jns
test
cmp
or
icebp
sub
(bad)
(bad)
pop
sbb
sbb
push
pop
out
dec
aas
sub
xlat
dec
xor
mov
out
jge
jmp
stos
jno
fmul
ins
(bad)
ror
ins
pusha
clc
cdq
push
leave
add
(bad)
pop
sub
push
push
sbb
jl
sbb
lock
mov
out
fiadd
(bad)
repz
clc
jp
jno
fcom
and
daa
popa
xchg
fxch
dec
jmp
lods
pop
mov
dec
ja
xchg
lea
mov
lods
or
fdiv
or
xchg
jo
or
enter
(bad)
sub
jg
mov
mov
mov
jbe
test
adc
frstor
out
pop
adc
mov
not
(bad)
jmp
jo
retf
ins
push
test
add
int3
mov
mov
mov
mov
int3
adc
mov
sbb
imul
pop
mov
shl
mov
outs
adc
mov
fld
add
jmp
sbb
stos
(bad)
dec
(bad)
sub
add
imul
xlat
int3
(bad)
push
push
xchg
clc
sbb
mov
inc
add
leave
xchg
ss
jne
out
das
pop
mov
repz
nop
mov
jne
aas
cmp
pop
je
xlat
lea
dec
pusha
xor
mov
xor
inc
push
lods
cmc
mov
mov
dec
(bad)
and
into
scas
jg
dec
adc
xor
je
mul
std
gs
leave
es
ffreep
inc
ja
lahf
repz
pop
pop
xchg
outs
push
out
arpl
mov
push
or
in
xchg
pop
retf
retf
push
or
cmp
outs
mov
push
cmp
cli
jmp
test
movs
mov
mul
popf
inc
arpl
add
pop
pop
add
cmp
pop
das
(bad)
cmc
fxch
dec
ins
frstor
mov
rcr
in
(bad)
mov
leave
mov
xlat
or
lods
stc
xchg
fld
mov
cmps
mov
imul
cmp
ror
pop
xchg
cld
sti
xor
xchg
pop
vshufps
xchg
push
ror
outs
cmp
mov
or
jmp
add
imul
cmp
adc
dec
mov
mov
xchg
rcr
add
mov
ds
mov
daa
fist
and
mov
repnz
sti
in
mov
in
cmp
movs
imul
add
(bad)
out
in
mov
jmp
add
mov
xor
movs
jo
sub
mov
outs
lods
loope
and
push
cmc
mov
cmp
pusha
mov
fmulp
add
int3
mov
pop
xor
adc
das
cmp
rol
fiadd
dec
daa
xor
lods
ror
mov
ds
jp
jecxz
bound
mov
fs
mov
(bad)
mov
and
aam
mov
add
sub
scas
out
mov
loop
jg
aam
retf
in
mov
outs
fadd
cdq
jmp
retf
adc
xor
daa
nop
mov
xchg
jae
inc
jmp
inc
lahf
jb
fwait
dec
dec
push
iret
xchg
fdiv
clc
dec
add
inc
popa
(bad)
cld
mov
ins
adc
adc
sahf
xchg
retf
pusha
add
cmp
ds
cdq
in
mov
repnz
pop
call
sub
loope
fmulp
lds
mov
idiv
ficom
or
sub
jecxz
push
sbb
and
xor
add
scas
sbb
scas
jae
imul
mov
out
push
test
int
aaa
hlt
imul
mov
imul
fistp
xchg
rcl
push
dec
mov
sub
mov
or
fstp
push
out
jb
pop
and
scas
jne
dec
lods
push
dec
cmp
cld
test
ja
fidivr
mov
(bad)
retf
cmp
jge
inc
icebp
xchg
sbb
aas
ret
aam
int3
cs
cmp
xchg
mov
xor
sub
lock
inc
iret
ja
or
and
les
daa
fcomp
mov
out
inc
sbb
sbb
mov
movs
push
xchg
xor
into
outs
loop
(bad)
(bad)
lods
sbb
cmc
outs
jmp
dec
fbstp
je
and
shl
(bad)
(bad)
loop
push
jecxz
adc
sbb
aam
dec
cmc
das
mov
push
js
or
or
mov
inc
loop
jge
jno
shr
mov
sahf
out
xchg
push
gs
sar
and
xchg
retf
nop
mov
(bad)
jge
scas
stc
in
jne
pop
mov
int3
or
sahf
cdq
xchg
(bad)
sti
mov
jle
mov
pop
outs
movs
sub
iret
inc
jb
(bad)
mov
xor
sbb
mov
inc
aad
and
pop
sbb
js
xor
and
and
push
add
pop
fcom
pop
(bad)
xor
mov
inc
sti
mov
and
ret
lds
xor
sar
sub
arpl
jmp
sahf
lods
fst
repnz
xor
or
das
repz
inc
fwait
sti
and
or
push
out
pop
push
xor
cmp
jae
xor
mov
pop
hlt
lods
fsubr
sbb
jne
mov
push
fisttp
xchg
or
dec
pop
mov
div
stos
lahf
sub
xor
cwde
pop
adc
(bad)
fmul
ins
sbb
sbb
retf
pop
outs
out
and
adc
mov
and
adc
mov
push
arpl
pop
pop
into
retf
ja
movnti
dec
and
and
add
mov
and
or
inc
push
add
jecxz
fistp
pop
xlat
xchg
jecxz
adc
dec
push
cmp
jg
mov
jne
sbb
fild
sub
out
popf
shl
mov
test
dec
push
xchg
xor
jno
cmps
inc
cmp
push
adc
jae
mov
cli
into
mov
mov
add
(bad)
xchg
stos
sub
dec
scas
and
loopne
jle
push
and
loopne
mov
adc
outs
cmp
jbe
test
or
jg
mov
jae
add
inc
rol
gs
in
jmp
fst
ror
add
test
gs
pop
xchg
cmp
in
dec
aad
jns
mov
fadd
mov
push
and
in
xor
mov
xor
mov
push
xor
daa
adc
js
test
ja
sbb
dec
in
je
pop
mov
cmp
xor
mov
mov
adc
adc
pop
mov
push
jne
lds
xor
mul
jno
push
aam
cmp
mov
jecxz
and
inc
cdq
outs
stc
xlat
xchg
pop
std
retf
inc
sbb
jo
cdq
popf
clc
push
scas
sahf
test
xchg
ja
fnstsw
or
or
movs
jp
adc
cmps
iret
das
or
dec
jne
and
jl
(bad)
and
push
jmp
(bad)
int3
scas
add
(bad)
sbb
fdiv
(bad)
imul
rol
or
pop
cmps
pop
push
dec
aam
in
int3
clc
shl
dec
aaa
das
push
call
push
cmps
xchg
dec
mov
loope
pop
mov
clc
popf
aam
jl
dec
xchg
fmul
mov
push
mov
and
and
cmp
ret
test
out
retf
jb
mov
push
mov
es
retf
and
sub
or
push
or
jmp
enter
xchg
inc
out
mov
es
daa
cmp
out
pop
test
out
dec
icebp
or
mov
sub
adc
jmp
mov
jg
fwait
push
mov
or
int3
sub
push
mov
sub
movs
mov
fadd
xchg
aad
out
adc
jbe
fs
adc
push
add
xchg
mov
retf
fwait
aad
xor
pushf
inc
sti
inc
aaa
test
xchg
(bad)
adc
test
scas
jg
cmps
(bad)
fsub
or
ja
xor
xor
sti
jmp
aas
inc
xor
stos
lock
xor
ins
scas
test
mov
je
adc
fdivr
push
(bad)
jns
push
aam
ror
rcr
je
pop
out
test
and
imul
pop
pop
pop
movs
cmps
sub
and
je
xor
mul
push
fadd
sti
fidivr
sbb
push
scas
int3
iret
das
jbe
pop
je
lods
and
or
sub
dec
pop
jmp
clc
out
xchg
mov
dec
lods
or
je
mov
pusha
fidiv
jmp
fimul
popf
sbb
xor
jno
cmp
ret
or
push
xchg
fistp
jp
movs
inc
mov
pop
sahf
in
and
sbb
(bad)
mov
dec
adc
xchg
daa
xchg
pop
int
les
cmp
mov
sub
je
ret
cli
mov
imul
jno
inc
mov
or
ffreep
mov
adc
ja
dec
mov
pushf
jnp
sub
fisttp
pushf
nop
xlat
mov
or
jge
in
lods
(bad)
lods
dec
les
ins
daa
or
fwait
or
out
sub
adc
ds
adc
or
push
mov
cmps
(bad)
das
(bad)
out
cmp
test
fistp
sbb
adc
add
mov
jg
pop
jno
out
fidiv
cmp
test
and
mov
outs
mov
mov
int
lock
mov
sbb
sub
ins
xlat
add
pushf
or
or
int
mov
jne
sub
les
adc
scas
mov
mov
jbe
cmp
rcl
dec
cli
jmp
in
dec
cmp
mov
sub
sbb
add
and
sbb
inc
and
movs
les
retf
fistp
fild
push
xor
xor
or
mov
test
lea
lock
cmps
ror
hlt
pop
pop
add
mov
imul
inc
pop
(bad)
mov
rcl
in
adc
push
sub
inc
push
stos
ror
imul
nop
cs
xchg
(bad)
adc
ds
mov
arpl
lods
loopne
and
pusha
push
retf
cmp
add
push
mov
(bad)
jnp
adc
push
scas
dec
stos
lahf
mov
sbb
sub
hlt
ins
xchg
and
or
sbb
inc
ret
movs
sbb
pop
mov
(bad)
loop
xchg
cmps
sub
jecxz
push
inc
(bad)
jl
sar
cmp
lock
mov
(bad)
dec
out
es
cmp
ret
cmp
out
jl
adc
pop
mov
jmp
jae
push
sbb
leave
inc
inc
jns
mov
xchg
retf
xchg
push
xor
je
push
dec
les
dec
mov
xor
jae
push
lock
mov
popf
sub
jno
je
fwait
popf
adc
sub
out
mov
jge
(bad)
jno
aam
sbb
cdq
and
adc
add
mov
jb
bound
dec
es
push
in
(bad)
pop
pop
vpaddsb
dec
push
fiadd
inc
iret
xchg
push
mov
fcomp
scas
pop
std
test
inc
push
ins
mov
fcomp
outs
dec
(bad)
repz
add
int
icebp
or
in
ret
push
sub
call
xor
pop
push
(bad)
std
cmp
(bad)
(bad)
pop
ss
or
sbb
inc
dec
inc
sub
mov
pop
add
jmp
retf
into
out
mov
ds
int
mov
sbb
pop
jne
aas
xor
imul
loopne
push
jo
adc
je
dec
lea
push
(bad)
mov
dec
jge
stos
pop
xchg
jg
and
(bad)
fnstsw
daa
inc
and
mov
dec
out
sbb
pushf
mov
scas
inc
jb
or
mov
stos
aad
push
leave
clc
es
adc
mov
jns
int
call
cld
add
rcr
int
jle
xor
fidivr
shr
cmp
fsubr
(bad)
in
leave
xchg
dec
lahf
xor
pop
xor
pop
loope
neg
cmp
sbb
mov
lds
push
fsubr
pop
or
add
enter
jnp
loop
and
and
xor
lods
sbb
push
xor
stc
fild
mov
cmp
push
cmps
arpl
fsub
mov
or
pop
cmps
call
dec
pop
sbb
sub
fdivr
inc
ror
jp
xchg
(bad)
retf
stos
stc
add
lahf
sub
fldcw
mov
xor
mov
mov
(bad)
fldcw
xor
bound
fdiv
pop
cli
dec
pop
xchg
push
mov
mov
dec
cmp
cmps
pop
or
dec
aaa
sub
repz
ficom
movs
jmp
mov
jnp
sbb
out
aad
loop
outs
nop
cmps
push
aam
es
xor
fs
pop
test
dec
and
xchg
mov
fwait
pop
lds
xor
es
or
mov
inc
adc
sbb
add
(bad)
push
daa
or
xchg
pop
cmp
mov
mov
(bad)
aad
aas
ins
mov
and
push
aaa
scas
xchg
int
clc
mov
jne
loop
stos
push
push
sub
xor
push
sti
mov
(bad)
addr16
movs
aaa
push
dec
(bad)
cli
shl
add
push
mov
or
(bad)
aad
add
enter
ret
cmp
pop
scas
or
dec
mov
cld
inc
mov
mov
das
enter
push
js
mov
(bad)
(bad)
adc
in
mov
mov
pop
test
or
cdq
xchg
jne
inc
mov
sub
sub
xsaveopt
loope
mov
stc
sbb
aaa
sbb
dec
push
sub
and
xor
ins
adc
jle
jo
popf
jno
nop
(bad)
gs
movs
jge
or
inc
dec
or
test
movs
xchg
leave
sbb
jge
mov
(bad)
push
xchg
fistp
into
jne
xor
sbb
mov
das
add
aad
outs
movs
scas
shl
mov
inc
push
push
in
popf
call
fwait
push
nop
sbb
push
daa
xor
gs
sbb
je
ja
mov
out
mov
xchg
or
push
data16
shl
add
pop
scas
out
fldenv
xlat
jecxz
test
xlat
cmp
add
fst
js
xchg
daa
dec
push
xor
imul
push
fisubr
or
mov
xchg
inc
les
sub
dec
fadd
and
ins
je
ins
mov
arpl
aaa
pop
call
shl
mov
popa
cmp
sub
scas
xor
cdq
mov
inc
mov
push
test
rol
les
jl
dec
test
mov
fsub
jle
xchg
mov
xor
scas
cmp
mov
jnp
add
pop
or
outs
lods
adc
xor
ss
(bad)
push
out
or
sbb
paddb
sub
sahf
mov
std
in
jb
cmps
sub
les
imul
outs
mov
retf
inc
jp
add
xor
inc
push
enter
in
xor
xchg
cmp
cmp
ss
mov
pop
int3
dec
jmp
jo
movs
sbb
stc
sbb
mov
fist
push
call
cs
add
add
mov
scas
jg
sbb
push
cmp
inc
nop
cmps
cmps
and
outs
movs
add
adc
xor
jmp
push
pop
sar
xor
pop
jo
fimul
add
pop
mov
jmp
mov
cmp
mov
iret
dec
push
push
fcomp
jo
scas
cmc
std
cmp
jl
push
cs
xchg
dec
adc
mov
sub
icebp
pmuludq
stos
(bad)
ds
pop
cld
imul
std
hlt
pop
jge
sub
mov
cmp
lock
mov
adc
es
mov
sbb
inc
and
mov
push
ror
test
push
(bad)
jmp
or
fbld
test
sub
test
test
lahf
xchg
mov
daa
sbb
sub
mov
loope
cs
sti
sbb
mov
movs
pop
leave
fild
pop
jnp
es
dec
cmp
push
xchg
push
(bad)
cdq
sub
mov
xchg
ins
pop
jle
aas
sbb
push
push
adc
xor
push
cmps
jmp
outs
pop
push
out
aam
add
iret
jecxz
xchg
scas
clc
dec
aas
loope
fmul
and
(bad)
cmp
aaa
maxps
dec
and
into
push
push
lds
ins
xor
jb
pop
mov
retf
add
nop
(bad)
out
xor
(bad)
push
mov
xor
scas
hlt
pusha
mov
adc
mov
lods
pusha
xchg
ds
mov
mov
jb
xchg
iret
mov
ss
push
add
mov
aaa
aaa
cmp
adc
jge
cmp
and
aaa
adc
push
inc
daa
stos
nop
je
cld
xchg
cmp
mov
and
inc
xchg
(bad)
out
nop
dec
ins
stos
ror
rcl
(bad)
je
push
xor
pop
jmp
cmc
xchg
and
push
into
retf
push
ret
xor
out
sbb
lods
in
pop
pop
mov
retf
xor
jmp
das
shl
ss
fnstsw
sar
mov
push
movs
lock
xor
test
int3
cmp
cmps
cs
ins
and
test
push
inc
cmp
sar
ins
xor
push
enter
mov
ins
out
sahf
and
bts
fadd
mov
xor
mov
and
push
xchg
shl
xchg
cmp
xchg
pop
popf
mov
lock
cmp
push
in
dec
movntq
mov
gs
mov
fwait
enter
(bad)
int3
mov
add
mov
ss
sahf
sahf
mov
mov
add
push
lahf
mov
inc
xchg
pop
mov
aam
push
pop
imul
bound
jnp
arpl
in
sub
or
popf
fxch
aad
mov
push
xchg
cmp
mov
ret
sub
std
and
dec
into
retf
test
inc
xchg
xchg
mov
jle
int3
jne
out
xchg
sbb
les
repnz
or
enter
pop
rol
test
sub
sbb
add
xchg
jno
scas
mov
mov
outs
mov
es
clc
jmp
in
push
adc
jns
fisttp
pop
mov
dec
dec
ret
adc
mov
add
push
pusha
movs
rep
add
xor
sti
cdq
inc
pand
cmps
repnz
retf
not
pop
out
push
or
cmp
xor
imul
das
pop
xchg
cmp
push
adc
ret
mov
mov
jg
daa
push
in
adc
and
push
loopne
jp
leave
scas
popa
imul
xchg
xchg
test
push
ja
cmp
xchg
pusha
push
pop
cmp
test
mov
inc
cdq
pop
aad
sti
pusha
retf
out
outs
les
dec
push
pop
add
jmp
jg
mov
cmp
add
aas
or
nop
enter
mov
jb
xchg
pop
cmc
xchg
pop
mov
ret
sub
lods
in
cli
cmp
sbb
aad
iret
(bad)
xchg
ret
shl
lock
in
sbb
daa
cmps
jl
adc
sbb
(bad)
lea
push
scas
lea
lea
and
iret
sbb
jecxz
mov
test
or
jge
and
ret
pop
stos
sub
hlt
shr
shr
ja
lods
inc
lods
and
push
xchg
fsub
pop
scas
push
xchg
pop
popf
gs
push
mov
jb
dec
call
or
dec
mov
sbb
mov
test
cmp
pop
mov
out
cwde
fdivr
fcomp
adc
pop
cmp
push
sub
cmp
into
les
mov
lahf
stos
xchg
fist
ins
sbb
xchg
shr
fist
push
xchg
mov
scas
sub
pop
pop
leave
jmp
push
pop
xor
sbb
or
fdiv
cmps
data16
push
xor
in
ret
stos
sub
cmp
dec
cmp
aas
cli
cli
repnz
pop
cmps
cmp
in
push
repnz
adc
dec
fbstp
push
push
jmp
xor
fstp
out
call
jae
enter
xchg
sbb
rcl
xor
sbb
inc
xor
push
(bad)
mov
gs
push
aam
mov
push
or
mov
imul
in
aad
int3
imul
std
in
mov
in
stc
adc
cs
sub
lods
pop
xchg
and
cld
shl
fsubr
in
cmps
mov
je
push
xchg
cmp
or
jecxz
rol
nop
iret
push
in
push
add
lods
lods
xor
loope
or
pop
push
cmc
and
cli
out
adc
jle
imul
jae
xchg
mov
mov
push
out
fldenv
stos
stc
cwde
mov
jmp
add
or
in
ins
loope
daa
rol
mov
pop
out
xchg
fmul
mov
test
out
sub
dec
retf
jae
leavew
mov
test
stc
fidivr
push
mov
or
and
jge
not
in
jno
out
add
xor
cld
add
push
xchg
jmp
inc
fcomp
outs
adc
push
sbb
sbb
popf
xor
sub
sbb
rcl
mov
dec
aad
fcom
ins
mov
shl
mov
sub
iret
scas
aad
inc
mov
pushf
push
cmp
loop
inc
ja
xor
sub
jecxz
mov
dec
pop
fmul
and
ins
sub
outs
div
aam
mov
outs
outs
cmp
in
daa
sbb
repnz
jmp
stc
mov
or
sbb
mov
adc
cdq
xchg
xchg
cmp
call
sbb
mov
pop
pusha
adc
jg
not
test
jmp
inc
aad
jecxz
je
adc
add
stc
push
sbb
jae
call
inc
addr16
mov
sti
xchg
nop
shr
mov
mov
sub
clc
inc
cdq
mov
movs
out
sbb
js
mov
femms
xchg
sub
ss
mov
dec
pusha
es
int3
sti
push
lahf
mov
je
ficomp
pop
sub
bound
mov
arpl
xor
jne
inc
xor
jge
or
shl
aaa
out
ins
mov
mov
sub
push
enter
outs
lods
ja
sbb
sub
cmp
and
xlat
test
shr
jbe
dec
mov
or
adc
rol
push
jle
lds
jns
mov
ret
push
mov
pop
cmps
test
mov
mov
xor
inc
hlt
int
test
nop
dec
inc
cmps
or
pop
xor
cmp
and
test
add
bound
fisub
hlt
jo
jmp
iret
into
inc
sub
mov
mov
jmp
(bad)
jns
push
ss
sub
pop
imul
fbld
arpl
shr
in
dec
sub
ins
mov
mov
pop
popf
in
jg
xchg
cwde
std
fmul
ins
dec
neg
lea
gs
or
shl
mov
jne
adc
bound
ret
mov
mov
sub
jg
aam
mov
push
ror
xor
dec
nop
out
hlt
add
loop
push
shl
lahf
sar
or
imul
xchg
jg
mov
and
mov
addr16
aad
mov
repnz
cdq
repz
xlat
dec
gs
call
ins
js
in
out
(bad)
dec
xor
stos
cs
mov
cmp
add
adc
xchg
ret
mov
push
and
jl
xlat
xor
push
dec
mov
fnsave
mov
inc
cld
push
mov
pop
test
daa
and
pop
push
aad
fwait
ds
xchg
cmp
pop
cmps
mov
cmps
call
or
mov
adc
mov
sbb
mov
in
or
icebp
pop
jne
mov
pop
aam
lods
pop
in
inc
sbb
jae
lahf
pop
jge
or
jl
clc
retf
lods
sub
cli
outs
and
mov
adc
int3
and
push
or
jcxz
dec
cmp
es
cmp
rcl
pop
clc
mov
lds
shl
fisub
jmp
(bad)
in
cli
or
inc
ins
shr
gs
in
xchg
xchg
repz
aam
mov
test
sub
outs
mov
ds
cmps
mov
pop
(bad)
mov
jmp
ins
imul
shr
add
aad
sub
ds
cdq
add
xchg
stc
sahf
push
sbb
popf
push
push
(bad)
jns
pop
jne
push
xor
lahf
dec
mov
sbb
rcr
pop
xchg
mov
adc
adc
xor
and
and
push
imul
adc
xchg
xchg
mov
in
dec
mov
push
jmp
mov
adc
movs
es
shl
mov
pop
fwait
shr
in
sub
inc
repnz
sub
push
xlat
test
jo
mov
jecxz
mov
xor
jmp
aad
(bad)
sahf
and
mov
push
pushf
lods
adc
xchg
cvtpi2ps
dec
retf
mov
jmp
or
loop
and
adc
xlat
mov
inc
jns
icebp
inc
jle
or
mov
data16
cmp
das
cmps
(bad)
lahf
add
dec
push
jmp
lea
out
mov
jbe
push
mov
js
pop
xor
add
imul
inc
or
fld
add
push
arpl
inc
nop
mov
xchg
xchg
push
inc
call
dec
push
xor
add
cmps
cmp
push
out
pop
adc
or
in
pop
jb
ret
sahf
sbb
add
pop
jg
push
dec
loop
cmp
pop
pop
lods
hlt
cmp
mov
push
imul
dec
test
call
nop
aas
lock
out
aas
pusha
dec
push
add
sbb
mov
inc
sbb
cmps
iret
jbe
in
fst
jle
adc
push
jb
jecxz
jo
aas
xor
iret
into
ins
sub
test
sti
jmp
(bad)
sub
icebp
movs
stc
aas
fsubp
popf
test
mov
push
es
ds
sahf
pop
pop
ins
outs
push
test
(bad)
dec
push
in
scas
sub
lods
js
mov
jo
or
(bad)
sub
(bad)
mov
inc
lods
in
adc
pop
imul
jno
jno
jmp
clc
cli
pop
mov
test
addr16
fs
sar
pop
out
jecxz
or
in
loop
pusha
scas
loopne
cmps
sbb
clc
clc
loop
sub
dec
jo
push
rol
or
or
xor
sti
outs
je
and
dec
mov
mov
mov
out
lea
ins
jl
sbb
loopne
rol
in
push
fwait
pop
fs
jp
sbb
add
ret
push
lahf
mov
fidivr
ds
les
push
xchg
sbb
cmp
movs
es
cmp
imul
in
aas
jne
jmp
mov
add
pusha
fdiv
aaa
in
inc
lods
js
fiadd
push
sahf
leave
jge
cdq
or
adc
push
int3
int
xlat
jns
sbb
jmp
xor
test
ins
mov
mov
lods
or
(bad)
stc
stos
mov
out
adc
or
mov
push
fwait
jp
rcr
dec
and
push
jno
pop
sbb
js
add
and
cld
push
(bad)
enter
push
jno
inc
and
cs
mov
mov
or
xchg
stc
lahf
or
jne
mov
xchg
call
outs
ret
xchg
call
jmp
push
add
or
aas
cmp
cmp
frstor
cs
jp
mov
call
xchg
rcl
jp
cmp
loopne
xlat
and
adc
(bad)
push
jge
ins
repz
jle
xor
jecxz
xchg
add
bound
int3
mov
mov
movs
push
int
js
stc
pop
data16
(bad)
jmp
(bad)
jns
jge
mov
dec
mov
mov
sub
out
push
shl
(bad)
sbb
fadd
cmp
push
stc
aam
dec
cmp
std
push
mov
push
inc
mov
cld
sbb
pop
pop
or
and
mov
jnp
jns
jmp
push
sub
mov
cmp
xchg
lods
sub
push
mov
loopne
shl
sub
mov
dec
jp
in
push
mov
sbb
ror
mov
push
push
cmp
or
pop
push
push
ds
les
rol
retf
cmps
shr
cdq
add
in
sar
mov
add
scas
(bad)
sub
ja
out
out
jg
adc
xchg
and
adc
add
(bad)
pop
sbb
mov
sbb
xchg
cdq
arpl
stc
ins
mov
jge
lds
ficomp
popf
inc
lahf
dec
retf
cmp
lock
inc
or
aaa
or
shl
jmp
add
or
sahf
mov
mov
jnp
lahf
cwde
sbb
inc
data16
stos
push
add
mov
mov
jl
xchg
cmp
xchg
xor
loopne
test
popf
add
mov
push
sbb
out
inc
stos
stos
jge
mov
and
call
pusha
test
inc
or
out
adc
dec
xchg
fs
push
fistp
iret
cmc
cmp
mov
xchg
test
mov
pop
lods
mov
out
nop
into
adc
popa
sub
sub
pop
mov
out
daa
retf
sahf
(bad)
xor
ds
sub
pcmpgtd
(bad)
ins
ret
or
ins
sbb
push
jmp
jl
jecxz
cld
push
mov
add
test
xlat
pop
xchg
inc
in
ret
xchg
stc
xchg
and
adc
sbb
xlat
adc
inc
jmp
dec
in
int3
hlt
stos
push
cmp
pop
xchg
ins
ficom
sub
mov
je
daa
mov
sbb
ror
mov
inc
xchg
cs
push
aam
mov
(bad)
sub
mov
fdivr
mov
and
ret
push
pop
xchg
jmp
inc
mov
mov
dec
mov
out
rcl
inc
mov
xlat
xor
cmps
rcr
add
sti
cmp
arpl
fsub
aaa
adc
sbb
test
aas
inc
jmp
xor
adc
(bad)
mov
popf
jle
pop
dec
imul
call
(bad)
les
sub
cwde
xchg
sub
xchg
inc
or
cld
sar
mov
mov
out
in
ret
inc
adc
dec
lods
push
retf
cdq
mov
movs
(bad)
mov
sub
out
or
mov
nop
mov
xchg
or
sbb
jns
iret
out
sub
pop
call
or
inc
mov
pop
mov
cli
mov
pop
mov
sahf
pushf
and
sub
pushw
int
fld
cwde
xor
xchg
sbb
push
jecxz
mov
std
std
ins
ret
(bad)
pop
data16
es
in
clc
loopne
popf
sbb
mov
and
add
shl
enter
push
imul
int
into
xchg
mov
fwait
dec
out
push
data16
xor
cmp
sub
push
inc
dec
add
imul
add
mov
scas
push
and
xchg
enter
xchg
xor
call
mov
cli
loope
out
fld
and
adc
aam
jbe
push
popf
jae
dec
inc
and
push
sbb
mov
xchg
ins
inc
adc
iret
jo
push
arpl
push
scas
mov
sbb
add
inc
(bad)
stc
ss
popf
mov
sub
pop
cmps
sahf
jb
dec
cmc
mov
sbb
push
or
lahf
xor
add
jl
jge
jmp
out
dec
cwde
dec
inc
add
dec
enter
mov
pusha
mov
pop
sar
in
outs
pop
jae
mov
jo
leave
push
arpl
adc
test
jne
ss
movs
mov
pop
or
mov
dec
ret
mov
jmp
or
add
and
xchg
aas
pop
jne
cmps
rol
pushf
sahf
aas
adc
cmp
mov
push
loopne
and
fs
icebp
cwde
mov
push
fist
fwait
add
fidiv
pop
bnd
sub
xor
in
test
shl
dec
and
dec
inc
jb
jecxz
movs
jecxz
or
jecxz
jno
mov
(bad)
cmp
push
mov
mov
movs
jo
push
xchg
jo
sbb
xor
or
push
sub
push
popa
inc
add
cmp
and
scas
(bad)
jmp
jae
pop
stos
mov
retf
pushf
jge
outs
and
and
pop
pop
aas
xchg
mov
sub
mov
sar
cdq
sub
stc
adc
add
adc
fucomip
dec
xchg
push
inc
jp
inc
dec
popa
mov
cmps
mov
enter
out
test
into
jmp
or
test
inc
adc
mov
or
ja
push
repz
jbe
iret
or
inc
mov
int
mov
ds
push
xchg
push
or
stc
shl
jbe
jno
pop
jmp
and
out
cdq
xchg
js
sbb
xor
jg
movs
mov
jo
pop
sub
jnp
sahf
mov
sub
mov
dec
push
mov
jno
arpl
push
sub
lods
test
cmp
int3
fadd
mov
sahf
mov
inc
pop
je
(bad)
stos
mov
inc
mov
div
inc
popa
pop
cmp
jmp
jp
iret
jae
push
cmps
test
mov
rcr
inc
icebp
and
mov
fmul
mov
xchg
pop
out
out
push
jo
xchg
sub
or
dec
test
shl
enter
(bad)
bound
test
test
jae
push
in
mov
push
pop
pop
mov
or
std
and
arpl
mov
cmps
fst
jmp
fdiv
inc
and
xor
inc
mov
push
mov
neg
inc
cmc
sbb
test
outs
push
imul
mov
jg
rol
jle
sbb
add
jl
hlt
out
aam
xor
imul
push
push
int3
inc
xchg
je
das
test
jnp
mov
xor
inc
jg
clc
(bad)
sbb
inc
mov
call
lods
sbb
(bad)
xlat
cwde
jae
jg
adc
adc
mov
leave
not
jb
dec
xor
pop
hlt
push
retf
mov
gs
push
(bad)
ja
outs
inc
mov
test
stc
xchg
stos
mov
call
sti
fisub
and
out
mov
and
sub
xchg
pop
cdq
mov
rcl
cmp
cmp
sahf
pop
jns
fiadd
lock
push
leave
push
sbb
scas
call
popa
das
shl
cdq
mov
inc
pop
scas
sbb
adc
add
cwde
xor
adc
cmp
or
push
repnz
xchg
cmp
mov
adc
cmps
push
(bad)
mov
cmp
sub
cwde
lods
gs
mov
inc
xchg
leave
adc
cmp
cmps
js
imul
mov
out
div
xchg
adc
push
add
and
jecxz
push
adc
xchg
jl
rcl
nop
dec
aaa
mov
es
cmp
xchg
leave
dec
adc
loopne
int
jno
and
loop
or
push
add
movs
dec
mov
fiadd
sahf
iret
into
pushf
inc
push
movs
xor
test
sbb
mov
inc
mov
mov
(bad)
sub
mov
or
xchg
pop
loope
push
mov
imul
cwde
cmp
xchg
lahf
inc
sub
popf
(bad)
clc
jb
xor
lea
ins
push
int3
inc
nop
inc
into
adc
in
sub
(bad)
cmps
out
pop
shl
xchg
retf
loope
shl
push
stos
in
out
xor
mov
sub
ds
(bad)
mov
push
fwait
push
and
lds
lock
enter
and
inc
call
das
and
aad
test
xchg
xchg
ds
sub
rol
or
and
cld
jnp
push
dec
adc
jge
gs
sti
jg
inc
adc
addr16
mov
cmp
rcl
xchg
ds
in
mov
call
jmp
vmovsd
adc
fst
addr16
jbe
adc
pop
push
mov
outs
sbb
mov
sbb
cwde
pop
scas
xor
es
scas
icebp
push
es
ss
popa
xchg
pop
jmp
aad
sub
dec
cmp
in
gs
dec
loopne
push
jns
arpl
or
out
ds
cld
ins
mov
pop
js
pop
sub
sar
mov
gs
js
ds
ret
adc
mov
shl
mov
adc
adc
(bad)
pop
sub
(bad)
call
or
mov
out
mov
retf
sahf
xchg
dec
mov
test
jl
pop
dec
and
retf
push
jo
loope
hlt
(bad)
push
sbb
cmp
inc
aam
jo
dec
inc
jl
stos
or
imul
xlat
push
sbb
xchg
out
shr
hlt
repz
retf
cld
pop
jmp
out
mov
mov
jbe
clc
lea
ss
inc
adc
adc
and
sar
in
xchg
dec
in
xor
loop
mov
iret
inc
pop
adc
and
mov
push
fwait
inc
(bad)
push
pop
loopne
aad
in
je
jo
xchg
mov
jmp
loop
dec
test
in
popf
mov
ins
sub
rcl
fmul
mov
xchg
ins
dec
or
mov
popa
jecxz
dec
xchg
call
das
adc
xor
push
jns
xchg
cmps
add
lods
pop
cld
je
call
mov
push
jle
jmp
mov
mov
jl
or
mov
es
inc
xor
jp
mov
mov
lods
and
xchg
data16
inc
clc
addr16
gs
adc
cwde
add
and
mov
push
fwait
cmp
std
mov
call
ss
mov
mov
cmps
mov
ins
dec
fadd
(bad)
xor
in
jbe
dec
mov
pop
icebp
mov
jecxz
or
mov
pop
movs
imul
int
shr
ret
pop
lds
xchg
xor
test
add
add
lods
add
and
jmp
(bad)
aam
jecxz
xchg
xchg
retf
jecxz
arpl
cwde
jge
add
inc
ror
stc
inc
scas
es
out
clc
mov
sar
or
enter
aad
fucom
sbb
(bad)
cli
clc
xchg
xor
dec
inc
movs
lea
jge
xchg
cld
in
sbb
mov
stos
mov
pop
push
pop
pop
repnz
outs
jo
jmp
sti
cmp
xor
cmp
adc
shl
sub
xor
or
repnz
push
xlat
push
iret
jmp
mov
mov
add
aaa
sbb
cmc
sub
pop
sub
retf
les
lods
or
pop
fist
test
mov
mov
lahf
sbb
sub
xchg
pop
and
push
pop
xlat
lods
ins
popa
iret
push
or
(bad)
add
add
mov
ret
ret
into
xchg
into
mov
xchg
stc
or
mov
movntps
rcr
inc
pop
rcr
fs
mov
ins
lds
and
out
mov
and
and
lea
es
cmps
mov
mov
sbb
in
inc
scas
push
add
xchg
arpl
in
xchg
inc
data16
add
xor
icebp
stos
cld
push
iret
fwait
lds
sti
mov
inc
jg
mov
mov
cmp
mov
imul
mov
mov
or
pop
fild
cwde
test
dec
sub
xchg
sbb
test
inc
idiv
jg
stc
ror
mov
(bad)
ins
push
or
cli
inc
adc
jbe
hlt
popf
repnz
push
fs
int
das
push
ret
jb
and
sub
adc
pusha
fsubr
mov
leave
mov
retf
pushf
mov
jns
pushf
sbb
mov
fisttp
or
pop
dec
test
mov
stos
scas
je
stc
stos
icebp
imul
int3
mov
jo
(bad)
(bad)
jmp
cld
inc
xor
sub
ffree
popa
push
jnp
es
push
pop
out
pop
dec
(bad)
push
hlt
jge
in
dec
ret
clc
jmp
adc
das
add
cmps
lock
xchg
mov
test
push
adc
mov
ror
js
hlt
xchg
xlat
sbb
jmp
sub
aad
pop
sbb
in
rol
inc
add
stc
add
loope
pop
or
mov
pop
mov
cmc
xchg
call
call
adc
inc
inc
in
cdq
push
sbb
jmp
cmp
out
ins
and
xchg
dec
int
test
(bad)
fadd
wbinvd
je
or
mov
daa
mov
sub
jl
xchg
int
cdq
std
sti
addr16
sar
xchg
push
xor
aaa
stos
xchg
pop
outs
pop
lahf
xchg
dec
test
dec
jmp
jge
sbb
imul
jno
or
pushf
cmp
mov
cmp
into
imul
mov
outs
sub
adc
mov
and
or
push
scas
sbb
xor
in
jmp
lahf
inc
mov
inc
push
jecxz
fcomp
retf
or
fsubr
test
xchg
or
add
cmp
push
or
fstp
jb
ret
fwait
jl
into
mov
xor
ss
les
sbb
jle
add
aas
pop
repz
inc
sub
pop
push
dec
(bad)
mov
xchg
shr
or
jne
cmps
cmp
mov
outs
dec
lea
ja
sti
inc
out
fwait
jo
(bad)
retf
aam
fs
add
out
mov
mov
cmp
xor
jecxz
mov
xor
xchg
xchg
scas
outs
ja
xlat
mov
or
mov
mov
push
xchg
das
pop
xchg
push
call
xor
push
fisttp
sub
bound
mov
and
loopne
sti
sbb
frstor
pusha
adc
loopne
add
mov
movs
mov
test
dec
or
adc
outs
inc
into
into
outs
call
dec
rol
mov
in
hlt
enter
jbe
sbb
jnp
jne
nop
leave
xor
nop
dec
adc
ins
mul
clc
in
(bad)
xchg
enter
aam
ds
adc
sti
inc
cmp
outs
jg
pop
lods
sar
push
mov
js
shl
add
fdivr
into
int3
pop
ds
jp
xchg
adc
jb
jae
mov
pop
adc
pop
or
pop
push
int3
or
dec
aad
scas
aas
bound
inc
sub
clc
inc
sbb
ds
xor
xor
mov
jg
icebp
ins
lods
fwait
and
iret
or
lods
es
sti
push
aas
mov
aad
and
jge
into
cmc
push
in
mov
fucom
jge
sahf
mov
into
ss
xchg
iret
pop
xchg
sti
scas
jno
jp
loope
outs
test
pop
add
or
sbb
pop
ins
call
and
mov
mov
inc
cmc
lds
outs
sub
repnz
push
push
(bad)
mov
sub
mov
je
cmp
or
fcmovnu
in
mov
lds
jp
in
shl
jmp
lds
dec
loopne
scas
pop
adc
icebp
dec
push
or
rol
and
push
sub
mov
repz
or
cs
sub
mov
out
jl
dec
lahf
gs
add
mov
jge
sub
pop
push
fwait
pop
es
std
adc
sar
stos
sub
clc
fmul
add
xchg
add
xor
mov
xchg
push
movs
mov
adc
push
ret
test
dec
add
add
outs
popa
mov
xor
test
movs
jbe
xchg
fcomi
and
icebp
popf
icebp
(bad)
or
(bad)
aad
push
fild
ins
cmc
int
push
pop
push
dec
test
std
in
fbld
or
retw
in
add
mov
add
out
mov
mov
mov
leave
xor
xor
shl
fimul
pop
scas
push
es
mov
pushf
inc
push
mov
aaa
int3
mov
aas
mov
fwait
retf
popa
or
and
cmp
jp
mov
jg
xchg
out
xor
mov
pop
scas
test
iret
inc
mov
fiadd
and
(bad)
outs
pop
and
dec
mov
cmp
stos
pushf
shr
into
xor
cmp
pop
inc
cmp
loope
xchg
mov
dec
sub
sub
out
cld
cmp
push
add
test
ja
cwde
cwde
adc
imul
jge
adc
inc
pop
xchg
pop
test
push
jmp
ds
shl
iret
mov
stos
inc
push
mov
mov
int3
sbb
cmps
sbb
mov
or
je
mov
test
mov
sbb
test
xor
xchg
push
dec
and
clc
cmp
pop
mov
inc
xor
ja
fdiv
shl
dec
imul
mov
fdivp
sub
aad
into
call
mov
icebp
push
and
retf
push
push
loope
dec
int3
inc
scas
ja
or
dec
adc
and
mov
ficomp
out
or
sub
add
or
sub
xor
into
das
adc
fcom
or
push
nop
hlt
sub
ret
scas
repz
rol
xor
mov
ins
sub
ins
xchg
jecxz
ret
and
lods
pop
cmp
(bad)
out
or
push
push
mov
out
(bad)
popf
pop
out
push
jmp
sti
call
add
loop
jmp
mov
call
popf
fstp
dec
sub
cs
push
ds
cmp
pop
add
imul
js
ror
aas
loopne
xor
shl
ds
cmp
sub
add
daa
dec
test
scas
jmp
jg
test
int3
(bad)
in
les
in
mov
and
jecxz
jmp
mov
(bad)
push
pop
add
mov
not
jmp
(bad)
mov
retf
adc
push
out
push
imul
push
xor
rol
mov
scas
jmp
push
repz
xchg
jle
in
cmc
ret
inc
ffree
push
dec
cmp
vpunpckhdq
aas
les
rcl
(bad)
dec
adc
add
sar
dec
(bad)
fsub
jecxz
dec
push
sbb
sub
int3
adc
loopne
ds
pop
mov
aas
adc
call
mov
repz
adc
pop
repnz
fdiv
out
arpl
clc
push
and
add
mov
or
std
mov
inc
retf
cmp
push
test
popf
pusha
cs
xor
icebp
lea
cli
adc
jge
mov
test
inc
adc
ds
enter
aam
mov
aad
pop
fwait
(bad)
outs
loope
mov
jp
push
xchg
push
popf
sti
xchg
sti
push
pop
ins
ud2
cld
inc
in
and
jo
sub
cmp
mov
mov
pop
mov
add
scas
push
fsub
rol
mov
movs
fcom
call
add
imul
mov
dec
ror
pop
pop
popa
das
enter
mov
sbb
xor
push
or
inc
cmp
mov
add
lock
pop
mov
stc
mov
xor
jg
mov
sub
popa
loopne
out
sub
aaa
fwait
pop
sbb
inc
jno
push
jg
push
jl
inc
add
cmps
inc
mov
fimul
fs
inc
or
jne
or
mov
movs
mov
js
leave
outs
inc
lock
mov
cmps
(bad)
loop
cmp
or
fs
mov
mov
in
fst
xchg
add
push
fidiv
sbb
pop
stos
ds
or
pop
add
xchg
dec
sbb
cli
cmc
stos
mov
add
scas
loope
mov
cwde
cli
cmc
push
cmc
push
mov
daa
out
pop
jnp
repnz
int
xlat
mov
cmps
push
loopne
or
xor
fdivrp
(bad)
mov
and
dec
mov
lds
and
xor
sub
rol
dec
mov
sar
adc
cwde
enter
out
xchg
fcom
xlat
push
sub
stc
push
fcomp
and
xor
mov
hlt
pop
sub
cmp
xchg
jp
je
shl
in
xor
repz
adc
int3
cld
mov
and
dec
push
test
lea
into
and
mov
cmps
push
div
fcom
jo
inc
ss
out
jb
out
imul
ds
leave
inc
fs
aaa
adc
jle
jnp
dec
add
sbb
sub
cli
push
int3
ds
adc
in
daa
inc
scas
test
jg
mov
jecxz
or
xor
shr
mov
cli
pop
jne
and
lahf
neg
ja
adc
mov
pop
push
ds
gs
mov
hlt
mov
cmp
add
outs
push
int3
pop
lods
sbb
inc
call
(bad)
jecxz
pop
push
cmp
sbb
xor
sbb
out
int3
ret
sbb
(bad)
push
cmp
call
cli
dec
punpckhdq
mov
xchg
retf
outs
(bad)
mov
shl
clc
mov
cmp
fstp
push
fcomip
push
test
mov
(bad)
xchg
dec
mov
sub
loopne
movs
out
pop
dec
mov
scas
adc
jg
cmp
mov
mov
dec
test
gs
test
lds
cmp
iret
xchg
shl
sti
mov
inc
pop
retf
fisttp
mov
fsubr
lock
inc
dec
hlt
jge
cmp
push
retf
xor
jnp
fbstp
out
pop
enter
dec
ret
mov
mov
pop
pop
sbb
sbb
int
inc
(bad)
mov
repz
xor
dec
xlat
gs
push
mov
pop
push
dec
repz
push
dec
mov
jmp
mov
leave
loopne
jbe
nop
test
jmp
das
push
jno
mov
jne
or
or
movs
(bad)
inc
push
xchg
or
inc
retf
push
cwde
jbe
loop
sti
push
out
jg
movs
xchg
mov
add
cmp
add
in
loopne
(bad)
outs
cmps
sbb
or
cwde
scas
(bad)
popa
add
inc
int3
js
loopne
fwait
jae
inc
sti
arpl
jl
or
cmps
mov
sub
retf
jae
and
push
xor
sub
pop
sbb
out
xor
fnsave
stc
inc
jno
and
sbb
mov
or
shl
jg
imul
shl
inc
mul
or
jmp
(bad)
jb
xchg
ins
(bad)
mov
rcl
(bad)
(bad)
inc
push
call
or
lea
fbstp
call
std
scas
clc
add
cmp
jbe
test
push
pop
retf
mov
lods
xor
cmp
ins
dec
add
outs
call
adc
loope
sbb
(bad)
pop
pop
icebp
popa
mov
mov
add
pop
daa
pushf
sbb
nop
lods
jl
xor
add
push
cmps
mov
jg
ins
mov
inc
or
shl
inc
leave
lds
outs
nop
scas
cmp
loopne
popf
fs
cld
inc
xlat
jns
or
(bad)
stc
scas
mov
aam
out
test
inc
push
out
inc
dec
rdtsc
xlat
cdq
xchg
(bad)
div
sbb
mov
dec
xchg
or
pop
xor
imul
cmp
mov
fwait
shl
jp
inc
jmp
or
mov
jl
sti
in
sbb
mov
dec
pop
fnstcw
mov
in
cs
pop
jecxz
jl
add
sahf
mov
ins
movs
outs
sbb
jl
call
cmp
or
pop
mov
xchg
(bad)
and
xor
test
pop
push
dec
sahf
jl
mov
inc
mov
mov
inc
and
sar
movs
loop
jle
dec
cwde
bound
push
mov
cmp
test
rcl
add
mov
ins
inc
jg
repz
dec
cwde
adc
imul
or
test
pop
loop
xchg
lds
mov
cmp
sbb
rcr
cmp
pusha
mov
neg
fistp
and
push
nop
pop
aad
ins
sahf
mov
or
mov
mov
rcr
shl
sbb
(bad)
imul
xor
in
inc
popa
mov
dec
iret
fnstenv
sub
(bad)
cmp
inc
push
fdiv
pop
int3
xchg
(bad)
push
inc
ds
mov
xchg
xchg
adc
xchg
(bad)
out
add
inc
lds
cmc
out
ins
pusha
mov
aam
call
fidivr
sub
inc
cli
pop
jns
or
daa
mov
shl
jge
dec
jl
idiv
pop
mov
mov
mov
fld
shl
out
and
sbb
and
jmp
or
mov
or
sbb
mov
adc
mov
call
(bad)
pushf
inc
int3
push
data16
sub
xchg
jle
das
cs
fcos
enter
jp
popa
xor
fmul
iret
retf
es
js
mov
jge
push
inc
jle
stos
push
aas
ror
push
(bad)
pop
or
push
xchg
fwait
(bad)
into
xor
xchg
push
gs
jmp
jae
sub
mov
add
add
xor
inc
sub
jb
mov
and
lods
adc
pop
mov
adc
test
pop
push
(bad)
mov
loop
sbb
pop
inc
xchg
retf
fcmovnbe
loopne
jb
push
jge
jp
inc
adc
int3
cdq
xchg
push
and
mov
test
mov
xlat
and
dec
ds
sub
sub
jb
hlt
pop
into
xor
retf
lahf
shl
cmp
xor
and
(bad)
fisubr
push
out
and
jecxz
lods
jnp
idiv
daa
hlt
jne
(bad)
(bad)
jae
add
jb
in
pop
mov
or
or
(bad)
movs
dec
(bad)
lea
xor
mov
out
js
jo
rcl
out
or
sbb
xchg
jmp
repnz
mov
inc
cmp
sub
mov
xor
test
cli
dec
pop
rcl
mov
cld
scas
ficom
in
mov
push
pop
call
or
inc
cld
jnp
push
call
cli
(bad)
jle
jecxz
xor
mov
mov
inc
jb
icebp
cdq
sub
in
repz
mov
aaa
rcr
lds
(bad)
data16
dec
test
retf
jno
cmp
(bad)
cmp
daa
inc
xor
dec
or
sbb
mov
sbb
dec
pop
xchg
(bad)
in
sub
mov
aaa
or
mov
shl
push
nop
xchg
cmc
mov
retf
fwait
hlt
idiv
push
stos
imul
cmp
mov
push
in
xor
pop
int3
test
int
ds
popa
mov
adc
mov
push
je
fdivr
js
mov
push
push
retf
jne
pop
in
add
mov
mov
push
push
cmp
jge
(bad)
dec
adc
lods
movs
inc
xchg
sub
push
pop
mov
fs
(bad)
test
jg
fcomip
cmp
add
dec
xor
(bad)
icebp
fistp
mov
sub
gs
daa
cs
adc
xchg
imul
add
movs
inc
gs
in
nop
mov
addr16
aaa
out
es
cmp
popa
jnp
shr
mov
leave
mov
fcom
imul
sti
dec
inc
out
jle
fild
inc
xchg
cmp
dec
mov
leave
test
(bad)
les
daa
mov
sub
pop
in
jmp
adc
sbb
adc
(bad)
adc
loop
mov
inc
xchg
fs
bound
add
jmp
pop
popa
mov
cmc
inc
cld
mov
daa
gs
mov
(bad)
outs
xor
sti
dec
jne
jne
(bad)
sub
retf
retf
mov
pop
adc
pop
pop
lfs
call
ja
xor
sub
out
dec
nop
jnp
repnz
inc
ret
xchg
loopne
push
push
mov
(bad)
mov
push
scas
sti
call
xor
popf
imul
and
je
test
sub
pop
loopne
and
lods
(bad)
xor
cdq
ret
loop
jne
std
push
mov
mov
je
sbb
pop
push
xlat
mov
lds
jns
or
adc
or
adc
cmp
fisttp
mov
jae
inc
jo
movs
adc
cld
mov
push
push
dec
sub
inc
jbe
jp
jb
xor
(bad)
adc
jmp
repnz
das
call
pop
sub
call
dec
adc
imul
mov
fcomp
test
icebp
sub
nop
cmps
pop
jmp
in
jecxz
push
les
mov
inc
mov
and
call
pop
xchg
bound
jo
mov
add
xor
pop
call
xchg
cmc
test
xchg
and
cmp
mov
and
push
dec
jns
lock
and
jmp
xchg
inc
popa
cmp
out
mov
js
movs
or
sub
cmps
in
icebp
idiv
(bad)
sub
in
adc
neg
mov
ss
je
imul
push
rol
inc
xor
and
sti
in
or
in
enter
cmp
cld
mov
call
lahf
loop
mov
mov
mov
test
cmps
ins
mov
shl
push
push
iret
pop
pop
sub
ret
(bad)
push
push
mov
dec
jne
pushf
outs
les
dec
dec
jns
cmc
add
dec
mul
mov
adc
data16
jno
icebp
push
clc
jbe
inc
xchg
arpl
pop
test
mov
mov
sti
test
or
mov
data16
fld
or
and
ficom
jg
cwde
or
cmp
push
push
pushf
jg
shl
cmc
xchg
xchg
(bad)
jge
ret
sbb
call
lea
test
stc
pop
not
lods
xor
out
dec
xchg
je
jecxz
xor
loope
scas
lock
sbb
mov
nop
add
jo
jo
ds
mov
push
pop
mov
push
pushf
push
inc
push
pop
mov
shr
(bad)
scas
es
sub
pop
(bad)
int
popf
iret
push
push
iret
pop
in
xchg
push
xchg
xchg
retf
pop
mov
and
aad
push
mov
dec
neg
mov
enter
cdq
loopne
pop
iret
lock
ja
stos
std
loopne
comiss
iret
dec
je
test
xchg
sbb
jmp
xor
mov
ds
nop
jmp
data16
and
push
fld
data16
stc
add
adc
in
mov
add
ret
ins
xchg
out
inc
sti
add
cmp
mov
add
push
xchg
out
jmp
movs
cmp
pop
adc
lods
icebp
lahf
scas
mov
lds
pusha
(bad)
ficom
test
mov
mov
inc
xor
xchg
movs
lea
nop
cmp
(bad)
sub
fisttp
ins
mov
loope
jp
mov
sub
dec
repnz
(bad)
adc
mov
dec
in
mov
scas
sub
jae
sub
dec
retf
out
fiadd
repnz
push
cmp
stc
mov
dec
addr16
adc
or
arpl
sub
pushf
shr
in
xchg
mov
test
daa
xchg
fwait
push
add
cmps
cmps
pop
mov
add
jl
jecxz
retf
xlat
push
jmp
test
int3
pop
push
fmul
idiv
cli
dec
inc
enter
dec
pop
cmp
mov
into
mov
sar
popa
enter
sub
(bad)
jp
mov
push
add
cmp
pushf
cmps
sub
mov
jge
leave
clc
daa
enter
jo
adc
jle
js
lea
ja
imul
and
popf
int
dec
outs
shl
in
push
popf
(bad)
sbb
or
dec
nop
add
arpl
push
jmp
lds
out
ds
std
mov
mov
pop
xor
out
arpl
mov
movs
ret
rcl
gs
xchg
scas
lds
and
xchg
dec
repz
sub
sub
or
out
in
jns
and
sbb
sub
mov
stos
cmp
push
or
ja
pop
lock
mov
cmp
push
imul
fsub
sbb
cli
test
mov
(bad)
sub
xchg
clc
ror
and
add
add
push
ja
mov
es
mov
cmp
inc
dec
shrd
mov
nop
popf
sbb
loop
and
sub
cdq
pop
jne
aad
xlat
inc
fcom
and
ins
xchg
stc
mov
pop
mov
xor
inc
inc
pop
push
lahf
and
or
or
retf
rcr
add
push
dec
mov
add
(bad)
loopne
hlt
dec
dec
push
pop
sub
pop
sar
repnz
cmps
aaa
lea
cli
push
imul
dec
or
lock
rcr
mov
ins
(bad)
xor
stos
push
mov
test
pop
out
enter
sub
jge
sar
jp
das
cdq
(bad)
mov
(bad)
imul
push
jmp
mov
push
and
pop
ds
shl
scas
loop
jb
dec
adc
retf
adc
sub
aam
cs
popa
shr
or
cmp
test
out
and
lahf
ja
push
lea
sbb
(bad)
adc
xor
out
clc
mov
mov
in
jge
test
(bad)
add
cmc
adc
in
das
retf
mov
jns
lock
scas
in
sti
dec
dec
lahf
jg
sub
add
psubd
aas
cld
lods
cmp
pop
mov
or
push
lods
adc
mov
aam
fsub
and
pop
mov
or
in
add
xchg
ficomp
mov
xchg
mov
idiv
je
add
cs
mov
fisubr
jb
adc
mov
test
xor
add
repz
test
lahf
dec
rol
out
out
pusha
popa
jb
adc
inc
mov
xor
adc
repz
je
push
loop
xchg
xor
imul
and
mov
sub
inc
dec
test
sbb
sub
pop
pop
es
sub
fs
dec
setnp
dec
mov
mov
sbb
or
out
scas
jo
push
fcomip
sub
mov
fdiv
stc
sbb
mov
adc
(bad)
xchg
push
les
pop
retf
iret
jo
xlat
fcmovnu
mov
jbe
pop
or
mov
in
lahf
retf
inc
xor
call
sub
fist
dec
mov
enter
dec
or
outs
jno
sbb
rcr
daa
dec
jg
adc
inc
test
cmc
adc
icebp
icebp
div
pop
iret
dec
xchg
mov
mov
movs
(bad)
push
push
imul
mov
out
scas
inc
int
cmps
in
push
dec
xor
cmps
lods
xchg
test
cwde
cmp
aam
push
hlt
vpmuludq
xchg
pushf
and
cmps
mov
fiadd
and
mov
push
hlt
mov
inc
jno
cmp
mov
or
mov
jle
call
sub
(bad)
inc
mov
mov
clc
mov
and
sbb
mov
shr
ss
push
inc
cmps
das
xchg
fcomp
push
fwait
(bad)
mov
inc
inc
mov
test
mov
retf
into
and
mov
jmp
outs
hlt
adc
les
in
add
sub
adc
xor
lds
cmp
or
jg
nop
jnp
mov
movs
cmp
push
add
outs
out
add
pop
jmp
mov
dec
ja
fldenv
sbb
ret
ror
pusha
fimul
popf
fsubrp
das
mov
xchg
pushf
pop
push
ror
in
int
iret
dec
inc
inc
or
cli
jp
cmps
sar
repz
jge
sbb
in
mov
jnp
sbb
call
jecxz
push
mov
lods
dec
xchg
div
rcl
ret
je
pusha
ret
xor
(bad)
ins
jg
neg
push
ins
into
sub
das
pop
pop
push
sub
xchg
push
or
xchg
iret
ret
test
and
addr16
in
mov
jle
repnz
cmp
and
cmp
pop
and
xchg
pop
adc
cmp
xchg
retf
retf
fsub
test
adc
jmp
jb
nop
push
stc
xchg
imul
stc
and
(bad)
outs
dec
(bad)
and
test
neg
pusha
push
and
mov
retf
pop
mov
jmp
sub
(bad)
push
sub
pusha
(bad)
fisubr
sbb
loop
jae
jnp
sbb
push
push
jbe
outs
xor
push
aaa
inc
loop
add
inc
stc
xor
ret
mov
or
adc
xchg
and
imul
clc
jbe
push
dec
sub
xchg
sub
out
test
pop
in
dec
rol
sahf
out
call
pop
shr
jge
mov
sahf
loope
out
shl
xchg
push
inc
jae
pop
cdq
inc
add
mov
mov
xchg
pop
leave
and
hlt
push
mov
cmp
call
sub
lahf
pop
dec
pop
dec
int3
mov
mov
xchg
out
lods
repnz
fwait
test
cs
sub
inc
popa
xor
fidiv
lock
test
sub
shr
pop
push
inc
cmps
dec
sub
loop
dec
daa
dec
dec
outs
pcmpgtw
push
aad
in
in
sub
sub
xor
xor
or
mov
shr
jle
xor
enter
inc
xchg
mov
gs
dec
push
pop
sbb
ins
cmp
adc
jb
cs
add
jg
mov
loopne
into
lahf
pop
ret
das
add
cwde
fcom
jbe
imul
sub
sbb
pop
sub
pop
mov
jo
xchg
push
aam
dec
sbb
and
loope
pop
inc
adc
lahf
mov
pop
sub
(bad)
sbb
push
ficomp
gs
mov
push
inc
fstp
(bad)
cli
inc
add
mov
jb
cmps
or
mov
(bad)
out
or
pop
cmc
jmp
and
push
(bad)
pop
lds
test
pop
add
dec
xor
ins
aam
loope
push
pop
out
mov
or
lods
jnp
icebp
pop
repz
mov
nop
sub
sub
sbb
dec
test
sub
or
inc
xlat
add
bound
sub
fcomp
jne
lahf
mov
xor
dec
neg
ret
xchg
cs
(bad)
mov
int
sub
stos
in
sahf
push
pop
ret
dec
ins
sbb
pop
cwde
mov
xchg
sbb
and
loop
pause
data16
and
nop
mov
pop
mov
enter
or
xchg
dec
(bad)
sbb
not
sbb
and
out
and
dec
fsub
loope
gs
push
out
and
jmp
iret
enter
mov
fs
stc
fwait
jae
mov
xchg
jnp
stos
mov
stc
xor
loopne
and
inc
sbb
es
sbb
dec
hlt
movs
in
in
xlat
neg
mov
jnp
retf
mov
test
shr
jmp
xor
pop
pusha
ins
enter
dec
test
pop
movs
pop
in
dec
test
mov
fwait
pop
and
mov
scas
sbb
inc
sbb
int3
add
ss
and
mov
dec
cmp
stos
push
(bad)
fild
scas
std
sbb
shl
and
aas
add
jno
or
imul
out
or
and
lahf
mov
mov
fisubr
inc
lahf
sar
fwait
push
test
dec
jae
in
xor
xchg
inc
jg
fsub
addr16
cmp
mov
push
push
inc
addr16
adc
xchg
add
xchg
mov
lods
jecxz
xchg
cli
jl
xor
push
lds
arpl
stc
push
mov
sub
frstor
out
or
xchg
xchg
arpl
mov
sub
pop
and
imul
xchg
ds
inc
sar
cmp
(bad)
cmp
repz
cmp
mov
mov
jmp
jnp
sar
outs
shl
jbe
jl
not
ds
cld
sub
popa
test
jo
push
test
ss
fsubr
adc
xchg
int3
scas
(bad)
mov
fs
jg
cmp
xor
mov
and
add
rcl
repz
std
xor
xor
jns
frstor
out
inc
xchg
clc
leave
xchg
js
dec
adc
cld
fld
retf
pushf
dec
sub
into
sbb
repnz
jo
fsub
(bad)
mov
retf
clc
in
retf
imul
mov
jb
ret
lea
xchg
jns
inc
push
scas
sub
and
pop
popf
add
loopne
sbb
icebp
cmps
mov
mov
in
mov
fs
rcl
xchg
sbb
test
daa
dec
sbb
cmp
int
push
repz
and
sub
loopne
es
push
out
xchg
mov
jmp
pop
push
inc
sub
jl
lods
cwde
ins
mov
test
stos
cmps
or
aam
les
out
xchg
and
or
fcomp
mov
adc
fimul
or
stos
test
cmp
push
sbb
inc
fwait
jae
sub
ret
xor
sti
lock
or
stos
stos
pusha
out
xor
test
ins
cmp
mov
mov
imul
mov
loop
fwait
and
sub
popa
mov
repnz
inc
adc
dec
aam
mov
mov
(bad)
in
dec
and
inc
stos
cli
mov
xor
sbb
call
adc
pop
xlat
setnp
lods
sbb
add
(bad)
mov
popf
mov
js
mov
movs
inc
nop
inc
repz
pop
add
gs
movs
sbb
mov
ins
fcom
dec
sahf
stc
das
std
xchg
add
jmp
xor
jge
mov
scas
push
pop
push
movs
dec
mov
sub
(bad)
lock
adc
hlt
add
sahf
sbb
cli
fucom
adc
imul
fldenv
cwde
push
inc
cs
test
aad
(bad)
lock
push
fmul
sbb
lds
test
clc
retf
xor
int
xor
cwde
add
add
bound
and
jmp
js
mov
or
push
add
out
(bad)
loop
das
hlt
call
mov
cmp
cmp
cdq
add
xchg
inc
icebp
test
sbb
rol
sub
jmp
and
xor
push
lds
jb
shl
inc
(bad)
aad
jg
cwde
push
sbb
add
scas
aaa
in
sar
sbb
cmp
xchg
lock
push
pop
imul
out
push
imul
sti
add
pop
or
popa
jo
loopne
fcomp
(bad)
cmp
hlt
adc
dec
mov
cmp
mov
adc
jnp
rcr
loop
xchg
pop
jle
xor
movs
cmp
call
mov
pop
repnz
mov
nop
pop
mov
mov
sub
outs
aam
adc
mov
fsubr
mov
xchg
test
ret
inc
enter
fwait
mov
ss
fadd
data16
adc
and
mov
mov
into
dec
into
test
dec
js
pop
jbe
leave
pop
int
dec
xor
jg
xor
inc
shr
add
push
xor
es
and
mov
sbb
mov
and
sub
retf
push
xchg
arpl
nop
imul
lock
pop
mov
scas
aas
jle
cmps
pop
push
inc
sti
shl
ins
or
loopne
call
arpl
jbe
lds
test
inc
in
pop
retf
adc
jno
jae
sbb
div
mov
daa
cli
jo
cmp
cmp
addr16
sahf
leave
icebp
xor
cmp
shr
ss
popa
inc
mov
cld
cld
xor
sub
in
sbb
clc
push
sti
stc
popf
popf
ret
cmps
add
cmc
jbe
fild
cmovne
dec
loope
inc
dec
adc
sub
add
shl
or
aaa
stos
sbb
add
xor
rol
inc
int3
lods
add
pop
cmp
in
fadd
fsub
dec
sub
mov
mov
ss
push
lods
fwait
cmps
call
into
sub
add
inc
cmp
aas
lods
adc
ss
jmp
cli
xchg
sbb
aaa
cmp
cmps
js
loopne
push
jl
in
fcomip
mov
jne
shl
popf
and
mov
mov
mov
push
sbb
mov
(bad)
hlt
std
mov
loopne
popa
jno
push
xor
(bad)
mov
pusha
and
push
into
mov
cdq
inc
pop
xlat
sbb
jmp
js
xor
leave
repz
popf
inc
js
pushf
xor
das
pop
adc
ror
xor
retf
aad
fstp
aad
repz
and
retf
inc
xchg
lods
dec
dec
jne
push
dec
and
xchg
fld
imul
clc
and
xchg
xchg
dec
jbe
jno
push
inc
mov
xchg
and
add
jge
mov
fisttp
fcomp
dec
inc
cmp
push
in
(bad)
hlt
and
fild
sbb
and
(bad)
sub
pop
les
rcr
adc
outs
rcr
cdq
dec
enter
adc
mov
test
mov
aad
out
pop
daa
sbb
popa
in
inc
(bad)
cli
dec
scas
loop
jne
cmps
jecxz
aaa
fs
pusha
lds
test
rep
xchg
add
cmp
mov
cmp
ins
cs
out
sbb
dec
push
inc
inc
adc
icebp
inc
pop
movs
cld
adc
ficomp
push
adc
mov
(bad)
ins
iret
jno
adc
and
jnp
pop
adc
test
adc
mov
cmp
int3
mov
loopne
pop
cmp
lods
mov
jae
pop
jbe
cmc
push
test
mov
adc
cdq
mov
jo
daa
hlt
push
sbb
ds
dec
mov
add
ins
imul
test
xchg
(bad)
imul
call
adc
(bad)
sbb
inc
stos
mov
sar
retf
push
jl
push
leave
jge
inc
lods
pop
xchg
lock
xlat
sbb
fbstp
push
lea
ror
push
lahf
fadd
or
retf
(bad)
fwait
xchg
and
xor
scas
ror
dec
add
cmp
popf
pop
sti
xor
mov
test
push
pop
cmp
nop
stos
and
mov
arpl
arpl
(bad)
jae
hlt
push
movs
fmul
inc
cld
data16
lods
and
cmps
test
sbb
aad
stos
jae
sbb
sub
js
ds
aad
jo
loope
scas
push
stos
test
stos
mov
in
push
test
mov
cmp
pop
repz
dec
mov
mov
in
add
cmp
push
lahf
jmp
scas
dec
mov
adc
mov
out
in
pushf
mov
cmp
jb
(bad)
xlat
lods
test
shl
inc
dec
pop
jne
fisubr
test
xchg
repnz
cmp
rcl
(bad)
repz
ins
add
cmps
jbe
ret
int
push
cdq
cmp
xchg
test
or
mov
outs
xor
scas
adc
sbb
movs
out
addr16
fsub
xchg
adc
xchg
and
add
fsub
sbb
lods
mov
mov
fs
inc
call
pop
aam
xor
xchg
add
pop
jb
mov
add
fdiv
push
and
ss
inc
sub
add
std
shr
push
and
sbb
jecxz
add
sti
lahf
stos
xor
add
loope
sbb
cmp
mov
jg
fwait
cs
arpl
fs
stos
add
jne
test
cmp
aaa
cs
pushf
dec
cs
jbe
push
loopne
ret
call
call
mov
ins
mov
iret
js
sub
in
retf
fcomip
js
int3
ret
popa
in
xor
pusha
jb
imul
sbb
cmp
rep
mov
cmp
lods
fistp
adc
sub
sub
ret
push
inc
pop
jg
sahf
mov
fadd
lds
ins
pusha
xchg
mov
pop
fidivr
xchg
add
fs
repnz
addr16
cmps
scas
pop
outs
loop
jmp
int3
lds
int
xor
cmp
pushf
mov
and
sub
dec
push
push
mov
dec
sti
add
adc
jb
mov
mov
xchg
leave
outs
inc
out
adc
shr
dec
iret
jno
adc
retf
inc
push
(bad)
pop
jo
inc
inc
or
xor
adc
mov
xchg
aad
js
lods
repz
in
mov
in
ja
(bad)
in
sbb
shl
mov
leave
cmps
test
jmp
in
shl
(bad)
pop
push
js
js
xor
and
sbb
icebp
and
xor
push
es
imul
add
xchg
mov
push
push
mov
shl
xor
jb
jecxz
adc
js
into
js
jae
cld
pop
mov
jg
int3
popa
mov
mov
and
(bad)
jle
scas
dec
pop
xor
test
daa
push
out
call
mov
pusha
cmps
mov
out
push
add
sar
jp
mov
cwde
or
jmp
shl
in
cmp
shl
cmps
jnp
sahf
pop
and
xlat
addr16
stos
ror
and
add
or
ins
pop
imul
xor
out
test
mul
dec
shl
adc
cs
in
xor
cwde
sub
inc
sbb
(bad)
push
stos
cmp
les
enter
icebp
jmp
pop
xor
push
outs
out
cmp
add
(bad)
or
jmp
xlat
nop
push
test
dec
clc
neg
call
dec
jp
stos
movs
lahf
and
in
aas
sti
out
arpl
mov
dec
int
mov
jp
sahf
mov
mov
inc
jl
movs
popf
cwde
sahf
and
cdq
js
push
push
mov
aaa
mov
out
inc
in
lods
add
inc
ins
retf
pop
mov
enter
retf
mov
mov
mov
mov
inc
cmp
iret
xchg
sub
repnz
mov
test
clc
mov
jge
fistp
xor
mov
add
in
repnz
lea
add
xor
xchg
sub
jne
jo
test
lahf
cmc
repz
out
mov
add
dec
das
(bad)
icebp
sub
mov
ins
int
repz
gs
lds
push
repz
loope
clc
add
lea
sbb
inc
lock
inc
dec
mov
jg
push
inc
pushw
clc
sbb
mov
lds
push
xor
mov
push
sbb
adc
push
es
inc
pop
dec
jmp
shl
out
dec
dec
sub
nop
jg
out
movs
push
and
test
xor
movs
lds
gs
test
jne
scas
daa
and
popa
jbe
push
aam
scas
mov
shr
popa
xor
aam
inc
jb
mov
inc
dec
scas
mov
inc
sti
int
xor
addr16
pop
stos
dec
jmp
ror
mov
adc
and
clc
jmp
sti
adc
movs
fs
out
test
das
dec
mov
daa
ins
bound
and
sub
inc
fldenv
xor
pop
inc
lds
nop
mov
xor
mov
scas
pop
pop
outs
ss
or
cwde
and
movs
sti
mov
inc
loopne
mov
lds
inc
push
inc
xchg
or
mov
pop
push
inc
test
sub
fnstcw
jmp
cmp
sbb
adc
fcompp
or
adc
popa
inc
mov
push
(bad)
xchg
pop
adc
sub
inc
imul
mov
push
push
loope
popa
and
lock
daa
shl
stos
mov
out
shl
inc
mov
add
jle
push
xchg
mov
out
loopne
adc
cmp
jae
enter
sbb
add
mov
mov
icebp
fsub
inc
or
cmc
mov
out
lahf
push
(bad)
xchg
push
push
xor
movhps
push
cmps
cwde
jge
addr16
inc
push
inc
mov
xchg
ret
inc
adc
pop
jmp
mov
sahf
scas
lods
test
push
fwait
mov
sbb
clc
push
fdiv
lea
mov
push
cwde
into
push
test
arpl
jmp
lods
xbegin
pop
sbb
into
stos
mov
mov
je
rcl
push
ds
ins
mov
fidiv
push
adc
xor
pop
fdiv
sub
pop
adc
fstp
mov
jns
cs
enter
xor
mov
xor
or
xchg
add
jmp
fwait
push
popf
sar
pop
mov
sub
imul
push
dec
imul
fbld
xlat
sub
mov
and
lods
push
push
movs
inc
repz
sub
pop
xchg
fcomp
(bad)
loopne
push
mov
add
cmp
xchg
ja
and
fist
jle
pop
jns
sbb
adc
test
adc
fnsave
cmps
dec
inc
pusha
and
rcl
pop
xchg
cmps
ror
mov
jo
mov
sbb
pop
xchg
pop
xchg
retf
cmp
mov
push
dec
cmp
push
fist
dec
fucomip
call
retf
adc
outs
int
ja
mov
dec
imul
and
add
inc
pusha
(bad)
xchg
and
fwait
jecxz
aad
cdq
ja
(bad)
jle
sub
scas
je
stos
lods
das
ret
xor
jg
pusha
mov
inc
xchg
xchg
push
sbb
pop
adc
push
sub
pop
cwde
lahf
ret
sbb
and
push
mov
push
test
push
ds
xchg
daa
pop
xchg
inc
mov
out
cmp
call
cmps
aaa
sbb
jnp
xor
mov
movs
cdq
and
cdq
in
add
mov
(bad)
mov
lds
add
movs
ja
pminub
ror
xchg
dec
or
aaa
test
mov
ins
sbb
xchg
push
jo
jmp
mov
ja
mov
or
lods
scas
retf
clc
pop
xchg
jbe
int3
adc
mov
xchg
jecxz
ss
mov
std
adc
imul
and
ror
not
and
or
ret
in
and
mov
fwait
and
test
cmc
lock
ror
xchg
fdiv
push
sar
pop
lea
xor
(bad)
or
aas
adc
call
mov
(bad)
in
test
fmulp
xchg
xor
jecxz
test
test
cmp
loop
mov
xor
adc
lock
fwait
push
or
sub
and
adc
and
and
inc
inc
mov
rcr
(bad)
push
scas
push
ret
popa
cdq
or
mov
sub
or
pusha
cdq
xor
enter
es
and
xor
fimul
sub
int3
test
adc
push
(bad)
xchg
and
or
icebp
(bad)
rol
mul
das
push
pop
lods
fst
mov
cdq
and
maskmovq
neg
jge
xor
mov
lock
dec
and
fsubrp
popa
into
movs
jmp
test
(bad)
sti
daa
(bad)
imul
dec
push
imul
and
add
pop
fisttp
imul
fsubr
out
aas
sub
push
push
(bad)
sbb
lods
lock
shr
dec
cmp
arpl
cmp
jecxz
rol
xchg
and
or
xchg
sub
add
cmp
jo
pushf
mov
out
add
mov
int
leave
add
push
imul
add
int
mov
cmp
mov
int3
jae
inc
icebp
enter
jmp
sub
js
fld
sar
fs
push
lea
(bad)
inc
mov
js
popf
dec
int3
retf
test
cmp
sub
xchg
shr
mov
ror
fidiv
xchg
adc
js
dec
shr
jp
mov
test
in
cmps
ret
mov
gs
push
xor
call
ret
xor
inc
popf
and
nop
xchg
(bad)
inc
mov
push
aad
xor
inc
inc
xchg
xchg
xchg
scas
fcomp
mov
mov
push
or
xor
out
pop
mov
(bad)
sub
xchg
mov
in
(bad)
ins
push
pop
imul
daa
add
dec
adc
add
ins
sbb
mov
cmp
mov
out
sbb
adc
jns
xchg
xchg
out
push
stos
pop
jl
in
sti
or
sbb
mov
dec
jae
mov
aaa
jge
aaa
ins
pop
(bad)
mov
sub
push
sbb
dec
mov
and
dec
aas
pop
in
sub
xchg
ds
lods
add
cwde
ja
sar
mov
pop
repnz
inc
or
mov
gs
dec
mov
jo
das
mov
jns
out
out
xor
xchg
in
jae
js
fnstcw
inc
or
and
(bad)
push
dec
sub
call
add
adc
push
push
mov
pop
lods
mov
daa
mov
xchg
jle
or
cld
xchg
mov
and
xchg
addr16
movs
push
or
repz
inc
jmp
xor
push
bound
add
stos
cld
mov
retf
loope
cmp
inc
ret
xchg
cmp
pusha
in
sbb
dec
scas
scas
popa
bound
xor
fs
bound
or
test
ret
push
hlt
(bad)
xor
sub
mov
jne
jnp
or
xchg
enter
xor
cmp
mov
xchg
mov
sub
inc
inc
cmps
mov
ror
sub
mov
mov
repz
push
je
pop
ins
jle
aad
fsubr
sbb
xor
cld
dec
hlt
int
cli
daa
ret
clc
loop
loope
mov
add
test
mov
jge
add
ds
push
jae
std
test
clc
out
ins
xchg
hlt
jns
adc
push
into
ins
dec
xchg
mov
ja
(bad)
fiadd
pushf
scas
je
or
lahf
xor
in
mov
xchg
push
clc
aaa
retf
scas
repz
push
mov
sbb
push
fstp
jmp
inc
push
push
pop
cmp
dec
jmp
xchg
jbe
sahf
sub
les
mul
xchg
ins
retf
iret
stc
mov
and
bound
jb
push
je
xchg
gs
add
mov
dec
fmul
add
cmp
mov
call
aam
sbb
in
in
shl
sbb
mov
jle
push
and
push
xchg
(bad)
stc
cmps
fcom
jmp
pop
lea
and
sub
dec
lahf
jp
jp
jae
push
(bad)
and
push
sbb
out
and
inc
rol
jle
js
inc
(bad)
inc
stos
mov
icebp
sahf
inc
cmp
or
pop
rol
adc
cwde
add
adc
xlat
jno
iret
xor
adc
and
mov
iret
dec
ja
retf
arpl
lea
push
arpl
sbb
push
mov
xor
fadd
pop
loope
addr16
mov
dec
mov
sti
stos
mov
loopne
call
cmp
scas
sbb
movs
dec
fdiv
add
scas
mov
sbb
mov
movs
jae
into
mov
dec
scas
lds
sbb
jbe
jp
and
mov
xor
retf
dec
repnz
xor
sar
adc
daa
fsub
mov
and
cdq
sbb
jne
nop
fidivr
add
retf
shl
pop
and
aaa
cmps
jne
cmps
dec
mov
sub
add
sbb
les
adc
jmp
pop
repz
or
in
dec
jl
out
(bad)
mov
dec
sbb
xchg
push
(bad)
dec
and
cld
inc
sub
pop
push
mov
dec
or
(bad)
and
mov
imul
cmc
movs
xchg
ret
test
cmp
shr
and
enter
cmp
jae
xchg
push
imul
sub
scas
cmp
sbb
sub
cmp
call
dec
pushf
push
in
fadd
lds
inc
rcr
or
mov
in
scas
in
jb
pop
pusha
xor
mov
mov
pop
inc
fidivr
dec
call
je
bound
add
bnd
push
out
ret
adc
js
pop
pop
imul
pop
out
ss
xchg
push
lods
lods
int3
cmp
push
jns
pop
shl
and
push
add
mov
mov
inc
or
dec
mov
adc
mov
pop
mov
je
sbb
fst
or
push
xor
ret
pop
jmp
rcl
dec
sbb
repz
jge
inc
cdq
xchg
es
lds
imul
imul
iret
jge
jae
lods
sbb
xchg
stc
sub
outs
and
ja
arpl
mov
push
xchg
scas
sbb
rol
mov
sbb
mov
push
int
mov
stc
pop
jg
test
cmp
cmp
lock
fisttp
mov
jecxz
or
cli
xor
in
push
(bad)
loope
sub
adc
or
sub
jmp
xor
dec
mov
fldenv
jmp
sub
sti
loope
mov
or
mov
xor
out
lock
pop
movs
(bad)
test
les
repnz
mov
lock
and
fdivr
mov
pop
xchg
dec
nop
loopne
mov
call
(bad)
scas
xchg
imul
test
cmps
shl
call
mov
mov
adc
shr
or
movs
pusha
cmps
sbb
je
pusha
sub
lods
add
mov
fistp
cmp
mov
cli
das
sub
pop
loopne
xchg
bound
push
shr
fist
pusha
cmps
dec
sub
(bad)
lahf
ds
inc
jae
inc
jne
push
inc
mov
xor
outs
(bad)
push
(bad)
es
out
das
mov
lock
loope
repnz
add
xchg
lock
pop
inc
dec
(bad)
retf
sahf
push
out
repnz
lds
xlat
cmp
stos
loope
xor
sub
xchg
or
add
jno
xor
jle
lds
ss
dec
pop
std
cdq
lahf
mov
cs
cmc
add
and
pop
mov
scas
mov
cmp
mov
icebp
xrelease
sbb
push
inc
fild
fmul
push
movs
and
out
je
sub
iret
pop
dec
mov
mov
in
sub
(bad)
nop
sar
jecxz
lods
mov
icebp
imul
in
les
add
popa
cli
test
retf
add
add
mov
push
not
inc
lods
imul
lods
fcmovnu
fwait
shl
pusha
fistp
jns
(bad)
jno
dec
sbb
push
in
sbb
cwde
loopne
movs
jne
cmps
popa
aam
push
push
mov
scas
mov
(bad)
and
gs
rcr
enter
adc
in
movs
inc
push
add
and
test
test
inc
aas
les
stos
aad
mov
mov
fldl2e
xchg
jg
ins
ja
test
push
(bad)
popf
imul
push
xor
hlt
jl
test
or
popa
bound
in
mov
mov
std
fcmovnu
mov
js
test
xchg
dec
sbb
xchg
js
outs
stos
pop
or
mov
pop
fsub
pop
jne
push
mov
(bad)
rol
repz
jnp
pushf
cmp
or
sbb
stos
pop
xchg
xor
out
cwde
xchg
inc
and
jecxz
mov
std
or
movs
div
pop
dec
mov
mov
mov
mov
aas
dec
hlt
jb
sar
mov
daa
push
jl
sbb
pop
ja
xor
xchg
jb
pop
mov
sahf
cli
ror
mov
pusha
rcl
adc
mov
pop
sbb
in
jb
xchg
cmp
pop
in
loopne
je
add
jle
fcomp
shl
gs
xchg
popf
out
lea
add
or
sbb
inc
pop
hlt
adc
cmp
push
cmps
jle
fdiv
enter
xor
mov
mov
jge
dec
cmp
jno
pop
jb
mov
ja
lds
push
cmps
mov
dec
inc
inc
lahf
xchg
push
push
cmps
(bad)
sbb
clc
pop
and
jno
enter
pop
add
mov
test
dec
mov
sub
xchg
in
mov
mov
adc
xchg
mov
mov
mov
cmps
jae
imul
jns
xor
repnz
(bad)
mov
mov
ret
(bad)
cli
loop
mov
jne
dec
lahf
xor
retf
or
inc
mov
pop
imul
scas
mov
icebp
in
jge
mov
cli
repnz
outs
xchg
cmp
xor
xor
in
add
jmp
xchg
mov
inc
imul
inc
js
push
xchg
xlat
jae
mov
mov
cli
imul
retf
xor
sahf
repnz
xlat
mov
clc
pop
imul
fidivr
aas
sub
int3
call
xor
cmp
jmp
inc
aam
ret
push
movs
add
popf
push
jo
outs
ja
test
xor
adc
fist
call
fcmovbe
dec
mov
xchg
bound
cmp
stc
ret
mov
dec
cs
clc
dec
xchg
fnstcw
sti
add
ins
ds
sub
push
mov
jecxz
daa
shl
mov
add
(bad)
(bad)
rol
mov
and
xchg
int
inc
mov
gs
mov
adc
jp
xor
xor
mov
(bad)
dec
pop
std
jb
inc
mov
je
cmps
imul
mov
pop
data16
xor
stos
mov
push
icebp
out
(bad)
or
cdq
xor
sbb
sub
daa
fmul
stc
fwait
mov
xchg
mov
mov
aas
inc
rol
popf
mov
out
mov
aaa
mov
ins
rcr
bound
dec
dec
test
and
pop
cs
push
and
inc
and
lds
shr
cmc
pop
mov
add
sar
and
pop
push
mov
pop
out
fidiv
mov
mov
movs
mov
mov
outs
push
dec
cmps
mov
rol
jmp
add
and
dec
gs
xchg
lods
enter
scas
leave
aaa
xchg
in
ja
pop
(bad)
arpl
mov
inc
loopne
sbb
ds
(bad)
sbb
call
push
and
xchg
sub
test
nop
push
mov
(bad)
data16
mov
xchg
add
inc
xor
and
out
imul
mov
dec
mov
xchg
rcl
sub
cli
scas
xchg
jg
xor
pop
sub
lods
inc
clc
push
(bad)
cmp
adc
iret
mov
or
cmp
mov
push
or
js
xchg
xor
or
cs
int3
gs
mov
sbb
xor
mov
add
cmps
aas
jmp
dec
lea
dec
jno
xor
stos
paddusb
imul
adc
test
inc
mov
out
inc
mov
mov
ins
xchg
ins
fst
cmps
cdq
shr
fldcw
sub
shl
jmp
enter
jl
adc
stos
sub
mov
add
fdivr
(bad)
nop
cmp
jae
mov
adc
push
scas
push
(bad)
hlt
sti
lods
call
cmp
inc
stos
fst
xor
mov
out
loope
int3
fstp
jbe
popf
add
ficom
fisttp
ret
xchg
inc
push
xor
adc
js
cmp
mov
mov
test
xor
jmp
shl
or
in
addr16
mov
out
stos
inc
out
add
cmps
push
sbb
lock
div
fadd
call
xchg
fsub
or
pop
in
adc
xor
push
fsub
jle
push
mov
sbb
pusha
sub
xchg
mov
push
dec
or
ret
stos
les
pop
int
int
mov
fisttp
xchg
ins
mov
(bad)
jb
mov
nop
sti
push
adc
add
inc
and
test
inc
cmp
sbb
pop
xchg
mov
jge
call
xchg
mov
ret
movs
in
fbld
icebp
mov
mov
je
inc
je
jmp
and
jbe
and
sti
xchg
adc
mov
loop
ss
jns
xlat
mov
(bad)
in
pop
jg
sbb
dec
mov
sti
sbb
out
mov
into
stos
ret
loop
push
xlat
into
loop
sbb
mov
stos
jmp
(bad)
js
push
imul
das
mov
out
in
out
cmps
inc
std
dec
and
pop
jecxz
cwde
sbb
outs
in
pop
jo
adc
(bad)
mov
cs
repnz
fisttp
sbb
mov
rol
and
imul
jl
rcr
lds
pop
mov
fadd
xor
enter
jg
inc
jo
shl
push
scas
cmp
adc
add
cdq
js
stos
aad
mov
out
mov
pop
mov
daa
movs
fld
pop
jmp
cmp
std
dec
shr
cmps
test
cmp
scas
cmc
fisub
clc
(bad)
into
xchg
pop
hlt
rol
sbb
nop
fild
test
jecxz
jp
(bad)
xor
or
ret
std
test
jg
jmp
cdq
adc
sbb
clc
xor
out
rol
jnp
adc
imul
mov
leave
push
rcl
push
and
xor
outs
outs
pop
inc
push
(bad)
(bad)
add
xchg
call
je
fidivr
cmp
mov
sub
ret
and
cdq
cmp
sti
sbb
mov
xchg
inc
push
mov
pop
jg
or
js
mov
mov
mov
or
adc
icebp
or
xchg
jle
adc
fdivr
cld
test
cmp
popf
cdq
fdiv
pop
std
shl
into
popa
mov
pop
add
in
mov
int
jns
das
je
sub
mov
cli
jl
dec
je
call
in
jo
mov
xor
mul
hlt
icebp
out
int3
ins
aam
aas
mov
repnz
and
sahf
jnp
pop
dec
xchg
jbe
and
xchg
(bad)
fdiv
jp
inc
sbb
retf
das
mov
adc
dec
jp
push
jg
enter
dec
cmp
inc
or
in
(bad)
inc
adc
mov
(bad)
icebp
mov
dec
rdtsc
dec
aas
inc
or
retf
and
retf
mov
imul
lahf
inc
sbb
adc
xor
rcr
repnz
mov
adc
add
pop
jae
bswap
cmp
mov
fpatan
sbb
popf
fistp
xchg
and
xor
jmp
xor
sbb
and
xor
daa
cmp
test
pop
adc
ror
pop
fiadd
lea
inc
xor
cdq
push
cmps
pop
outs
movs
adc
retf
pop
in
mov
sbb
aad
int
cmps
es
push
div
lea
xchg
cmps
mov
dec
fnsave
jmp
xchg
dec
aad
pop
sbb
das
xchg
xor
mov
popf
arpl
adc
test
jo
ins
into
pusha
mov
xor
fs
std
enter
jno
pusha
add
fucom
fcomp
sbb
fwait
push
sub
aaa
xlat
aad
mov
sbb
push
fsubr
cmp
rol
ret
fs
sub
cld
(bad)
es
cmp
push
(bad)
pop
ret
sbb
ja
lahf
in
inc
(bad)
shl
mov
out
dec
push
pop
jae
xchg
retf
xor
repz
js
adc
(bad)
int
mov
sub
pop
fcom
sbb
push
and
lods
imul
xor
and
add
test
into
pop
adc
ret
mov
ins
jne
(bad)
push
mov
mov
imul
jne
cs
jge
inc
pushf
inc
mov
lds
gs
pop
push
inc
mov
jge
sub
mov
out
jg
dec
sub
pop
cmp
(bad)
push
fiadd
sbb
adc
adc
stc
repnz
inc
inc
add
push
(bad)
out
call
shl
ret
cli
idiv
cmp
shl
out
jae
(bad)
nop
and
or
push
xchg
aam
jmp
std
jmp
mov
pop
pop
push
add
pop
mov
and
adc
sbb
ds
inc
and
sahf
(bad)
cmc
jp
dec
sbb
sbb
dec
jge
addr16
mov
dec
dec
clc
fwait
out
test
jno
dec
lods
aad
push
repz
xchg
pop
inc
and
inc
pushf
(bad)
or
test
sub
int
mov
mov
dec
cmp
xor
femms
movs
stos
lahf
in
xor
xchg
retf
outs
loope
jo
aas
clc
fldcw
xor
lods
mov
popa
pop
cmp
xchg
cdq
cmps
mov
mov
ds
pop
mov
or
sbb
mov
jae
shl
dec
ins
leave
xchg
xlat
pop
pop
sbb
pop
je
int
push
pop
or
cmp
clc
lods
daa
dec
mov
inc
iret
mov
jmp
call
dec
adc
add
icebp
cmp
(bad)
enter
addr16
xchg
(bad)
call
and
dec
or
mov
mov
retf
push
pop
in
into
sbb
sub
push
dec
push
ret
cdq
sbb
sbb
and
or
mov
lahf
cmp
movs
mov
scas
stos
mov
es
je
je
cmp
jl
inc
or
dec
ja
sbb
fist
sub
clc
jno
lahf
cmp
add
sbb
leave
sub
data16
loop
xchg
xchg
in
imul
pushf
loop
jl
shl
push
cmp
sbb
retf
jns
fwait
cmp
xchg
mov
(bad)
fild
sbb
(bad)
std
jbe
cmp
loop
mov
push
cmps
mov
int3
add
xchg
sub
adc
cmc
cld
mov
in
add
stc
xchg
in
pushf
pop
jg
(bad)
dec
push
or
pop
pop
mov
popa
mov
xchg
test
adc
in
call
or
pop
ja
sub
lods
repz
outs
dec
out
jnp
push
test
inc
ins
wbinvd
cs
out
pop
and
jl
(bad)
mov
inc
js
jp
mov
pusha
gs
loop
cmc
adc
push
cmps
ror
lods
push
das
out
outs
pop
sbb
mov
mov
mov
ret
xor
dec
inc
mov
addr16
ficom
cmp
repz
lock
cmp
movs
bound
(bad)
fsub
push
repz
push
push
(bad)
jmp
dec
push
push
xchg
sub
pop
out
movs
iret
rcl
xchg
fnsetpm(287
out
mov
fsub
in
jnp
cmp
sub
cli
cwde
das
repnz
adc
dec
mov
dec
pop
add
xor
test
int
in
lods
xchg
ret
ficom
test
lea
lods
shl
jns
out
lds
dec
cld
dec
popa
pop
lods
repz
ret
retf
cli
mov
int
xor
xchg
mov
(bad)
movs
push
popf
ins
mov
mov
mov
cmps
pop
and
xchg
cmp
cwde
rol
mul
mov
sub
(bad)
inc
sub
cmps
mov
dec
out
mov
adc
sbb
aad
jecxz
daa
mov
imul
(bad)
cli
push
cmp
dec
popf
stos
(bad)
sub
adc
shl
fld
leave
hlt
mov
mov
jp
fwait
in
pushf
gs
mov
stos
jb
sub
or
jno
idiv
out
retf
cmps
mov
cmps
leave
aaa
pop
push
mov
cmp
jno
adc
aas
mov
inc
div
push
je
inc
add
iret
cwde
pop
xchg
outs
imul
jno
cs
mov
cmp
(bad)
ins
gs
fcom
repnz
mov
xchg
cdq
cmp
pop
fstp
or
mov
mov
mov
jge
dec
rcr
adc
aaa
pop
jo
add
ror
pop
jb
shl
leave
or
test
popf
jmp
xchg
cmp
mov
jl
jecxz
cmc
repz
repz
xlat
pop
xlat
fmul
clc
jo
ror
popa
js
lods
jns
cld
add
cmp
out
nop
mov
sub
mov
mov
mov
adc
cdq
scas
popf
pop
mov
mov
xor
imul
cmp
ficom
mov
add
xor
mov
cdq
xor
xchg
mov
into
inc
cdq
(bad)
lock
bound
rol
jno
icebp
sub
enter
xor
cwde
add
add
adc
(bad)
rcr
or
clc
das
and
test
xchg
mov
cmc
adc
mov
outs
jecxz
fdiv
(bad)
out
ret
jg
mov
cld
cmp
ja
and
xchg
cmps
dec
sbb
or
mov
xchg
rol
mov
mov
pop
test
push
loopne
push
pop
dec
mov
xor
mov
fld
xchg
out
std
mov
sbb
aam
ins
(bad)
cld
mov
inc
inc
out
jmp
or
cwde
mov
mov
jmp
and
mov
shl
mov
mov
iret
stos
or
push
scas
mov
mov
push
aad
retf
xchg
jl
jnp
push
cmp
dec
and
and
gs
cmp
push
hlt
push
retf
mov
cld
hlt
pushf
lods
mov
push
sahf
stc
sbb
test
cli
retf
jge
cmp
jp
sbb
sub
icebp
or
(bad)
cdq
xor
xchg
outs
pop
mov
lock
rcl
lock
inc
in
dec
mov
inc
iret
jmp
sbb
out
mov
xchg
retf
adc
movs
test
pop
ds
fwait
push
push
fiadd
cmp
or
dec
daa
xchg
sar
ret
mov
inc
mov
add
cdq
cdq
inc
movs
xchg
call
fldenv
mov
neg
cdq
mov
pop
sti
jns
xchg
(bad)
mov
bound
or
and
lahf
outs
push
lahf
sbb
repz
outs
or
jne
xchg
test
test
or
adc
pop
test
inc
cmps
pop
cmp
mov
adc
push
pop
fsub
mov
and
or
xchg
andnps
jnp
push
sub
in
aas
ret
mov
mov
test
and
xchg
loop
and
ins
pusha
mov
cmp
into
and
xor
(bad)
test
xor
jne
fnstcw
repz
loope
scas
setge
cmp
mov
xchg
jb
ja
(bad)
sbb
jmp
push
fstp
mov
adc
inc
fld
and
mov
push
and
sbb
mov
mov
call
cmps
xchg
or
mov
aam
xor
mov
xor
sbb
sbb
mov
mov
push
push
dec
mov
dec
test
(bad)
cs
inc
dec
add
mov
test
push
outs
in
mov
mov
or
cmc
into
xchg
xor
xlat
inc
loop
leave
xchg
xchg
pop
mov
cmp
cmp
mov
sbb
add
pop
push
call
call
scas
imul
inc
je
adc
pop
push
shl
fcom
inc
data16
mov
mov
jle
xchg
fdiv
sar
fild
popf
daa
mov
inc
retf
push
and
mov
push
jno
or
outs
test
pop
sub
out
int
jp
cmp
call
mov
(bad)
sar
mov
xor
push
sub
and
in
icebp
add
aad
cmp
pop
fwait
cmc
lock
stos
mov
pop
cmp
jmp
xor
(bad)
mov
iret
mov
shr
dec
and
int3
stos
push
cmp
sub
mov
fld
sbb
imul
xor
lahf
loop
pop
push
jmp
icebp
daa
push
ins
leave
and
xor
fld
mov
sbb
xor
daa
test
scas
dec
nop
inc
ins
sbb
mov
inc
push
xchg
mov
sub
jno
pushf
xchg
cwde
(bad)
or
(bad)
mov
leave
int
scas
add
inc
imul
push
dec
adc
fbld
mov
aas
add
cmp
(bad)
or
dec
je
sti
sub
call
mov
cmps
daa
les
std
lahf
outs
pop
daa
lods
cli
pop
xchg
sub
xchg
sub
rol
call
daa
xchg
ds
jl
stc
lds
mov
dec
ja
scas
mov
mov
or
in
(bad)
mov
cwde
cmp
xor
cmc
push
mov
repz
sbb
push
mov
xchg
and
pop
mov
sbb
in
or
sub
in
push
outs
push
enter
inc
dec
mov
dec
aaa
das
je
js
aas
add
jns
jp
add
scas
sub
mov
and
repnz
mov
mov
jmp
sub
dec
out
fiadd
sbb
sbb
inc
xchg
mov
out
cmps
pop
cmps
lahf
cs
inc
rcr
sbb
imul
pop
dec
imul
popf
or
(bad)
cmps
popf
push
rcl
and
push
popf
jno
icebp
sbb
aad
adc
data16
fstp
popa
xchg
loope
mov
xchg
adc
cdq
popf
push
and
and
and
xchg
xor
in
cmc
or
jp
pop
push
rol
aad
adc
xchg
lock
rol
ja
scas
imul
xchg
sbb
cmp
int
ins
sahf
popf
and
inc
add
push
inc
cmc
clc
pop
adc
data16
mov
xor
mov
jae
call
xchg
cmp
mov
fstp
sbb
push
stc
repz
(bad)
jae
repnz
in
mov
jecxz
mov
mov
jl
push
rol
fcmovnb
fs
call
cmp
inc
push
xor
mov
mov
sub
sub
(bad)
cli
jae
ficomp
xchg
mov
hlt
imul
inc
outs
addr16
and
call
pop
sahf
jb
mov
sub
into
xchg
xor
outs
inc
jmp
jns
mov
fwait
xor
mov
mov
movs
and
into
and
and
or
icebp
or
mov
loop
stc
popa
sub
push
cmps
sub
std
dec
pop
mov
mov
test
clc
ja
xchg
and
nop
(bad)
jmp
fcom
xchg
loop
or
out
cmp
fwait
retf
add
shr
popa
in
ret
scas
dec
push
test
push
fimul
leave
mov
xchg
mov
add
aad
or
aad
push
lds
and
shl
popa
adc
mov
and
inc
push
or
stos
pop
cli
sbb
shl
in
js
mov
jno
pop
jg
adc
in
sbb
sub
push
mov
retf
clc
sti
mov
xor
loope
ss
jmp
adc
repnz
aam
loop
xchg
mov
fwait
call
mov
(bad)
daa
xor
add
xchg
mov
pop
sub
arpl
lods
in
scas
cmps
sub
jmp
lea
pop
adc
inc
jl
in
or
add
push
pop
xor
mov
scas
cmp
adc
jb
mov
or
adc
(bad)
out
mov
push
lods
cs
jns
add
xchg
shl
loopne
gs
xor
fnstenv
test
mov
cdq
pop
cmp
js
pop
dec
inc
push
jnp
mov
or
mov
fisub
and
fstp
and
cld
jmp
mov
fisttp
push
aam
adc
inc
in
inc
jnp
ficomp
imul
cld
jmp
lahf
dec
or
sub
xchg
pop
mov
stc
dec
bound
sub
cmp
mov
lock
push
mov
and
jg
js
dec
sub
add
xchg
leave
jle
lods
xchg
pop
and
mov
retf
push
sub
imul
adc
or
cmp
icebp
(bad)
int
dec
cwde
das
pop
or
movs
arpl
movs
jecxz
enter
jg
pop
sub
test
xchg
xchg
mul
xor
cmp
sub
bound
mov
mov
lds
popa
jg
cmp
out
sub
in
and
jae
inc
ins
call
std
mov
retf
fwait
cmps
cdq
mov
add
pop
int3
out
add
and
es
repnz
ret
mov
(bad)
mov
pop
div
aad
retf
dec
jp
pop
jae
sub
mov
rol
jmp
cpuid
dec
movs
pop
mov
fisttp
stos
pusha
into
pusha
inc
js
mov
sub
rcr
call
sbb
arpl
pop
adc
push
sti
adc
out
lea
mov
mov
mov
cdq
xchg
cmps
and
clc
jp
outs
leave
dec
das
jo
pop
ror
loope
push
or
jb
mov
or
cmc
lods
iret
jecxz
xor
xor
pop
fcomp
scas
push
adc
sbb
jno
pop
adc
or
cmps
cmps
and
and
sti
stos
imul
cli
ret
retf
mov
sbb
or
xor
scas
fcmovnb
xchg
call
cmp
dec
jb
or
(bad)
imul
or
repnz
jbe
aaa
or
addr16
enter
ins
test
sbb
stos
add
out
out
mov
mov
add
outs
jne
icebp
test
call
test
sbb
push
(bad)
call
cmp
cmp
pop
inc
(bad)
outs
xchg
outs
or
cld
jecxz
js
mov
popf
ins
push
out
jmp
mov
jl
cmc
jb
shr
js
cdq
jb
jl
mov
add
jg
pushf
inc
fnsave
mov
and
xchg
int3
repnz
dec
xor
stc
pop
xchg
and
retf
dec
jnp
inc
ja
fcomp
xor
jb
xchg
cs
ins
jl
mov
or
dec
xchg
hlt
sbb
push
rcr
pop
sub
pop
ret
int
js
out
jp
xchg
(bad)
jmp
xor
test
stos
(bad)
jecxz
inc
ret
dec
lods
dec
push
popa
jge
cld
cmp
not
fldcw
jmp
(bad)
test
or
aad
out
cli
iret
in
xor
pop
jmp
xchg
dec
mov
sbb
pop
xor
ins
imul
jb
mov
stos
adc
xchg
popa
es
retf
(bad)
push
in
cmc
adc
sbb
shl
cmp
inc
pop
or
hlt
fisub
sbb
xchg
mov
push
adc
mov
bound
add
or
push
pop
jecxz
and
(bad)
pop
popa
icebp
repnz
adc
cs
call
cmp
xchg
sub
in
fisubr
mov
sahf
lods
push
fcomp
sub
jae
aas
jb
pop
out
sub
(bad)
addr16
fs
pusha
xchg
jl
dec
pop
and
sbb
mov
sbb
mov
mov
arpl
sub
jbe
jge
lahf
ss
mov
test
(bad)
dec
outs
sub
cmps
xor
int
pop
pusha
dec
inc
pop
xchg
jns
xchg
mov
dec
sar
add
leave
popf
stos
sbb
mov
cwde
in
xor
mov
inc
sub
pop
pop
cmp
or
sub
push
xchg
add
cmps
inc
sbb
push
fsubr
sub
cmp
mov
rol
aad
or
xchg
push
cdq
push
push
inc
adc
fsub
fs
leave
xchg
cmp
add
inc
adc
ret
jp
fwait
mov
aad
jle
cmps
cmps
and
mov
mov
push
pusha
imul
inc
test
out
mov
fucom
sbb
mov
sbb
into
aam
push
jo
lock
xchg
cmp
cmps
retfw
dec
lock
in
sub
test
pusha
push
jne
xchg
mov
in
mul
xor
dec
out
xchg
imul
cmp
jecxz
sbb
popf
loop
jmp
cmp
iret
adc
push
repnz
pop
test
inc
dec
rol
pop
mov
mov
lods
std
dec
outs
(bad)
out
add
lock
or
int
(bad)
push
or
popa
div
js
pop
movs
pusha
ins
mov
in
sbb
dec
jge
imul
adc
int3
mov
std
(bad)
pop
not
jmp
loope
lea
pop
shl
jp
cdq
fwait
cmp
cmp
inc
dec
icebp
out
cwde
test
stos
shl
pop
push
xchg
sub
pop
jle
jp
sub
xchg
icebp
aaa
jge
cmps
(bad)
jnp
xchg
retf
cwde
imul
and
iret
movs
loopne
ror
push
retf
xchg
add
mov
sub
jae
add
or
shl
add
and
inc
mov
scas
ss
imul
ins
push
mov
clc
jmp
les
das
mov
mov
cmp
scas
inc
cmp
daa
out
or
lea
div
stos
mov
ja
push
dec
mov
jns
or
sbb
pop
cmps
outs
popa
ficom
loopne
jne
int
mov
es
clc
inc
dec
push
jge
jo
jg
pushf
mov
(bad)
cmps
mov
pushf
mov
and
jg
mov
or
leave
mov
xlat
(bad)
pusha
xor
sbb
mov
pop
out
and
mov
cld
enter
inc
sub
ins
rcl
lds
out
cmc
adc
call
sub
add
retf
clc
outs
pop
xchg
and
shl
dec
pop
scas
mov
mov
inc
jne
jb
lods
std
movs
dec
(bad)
xchg
jae
movs
sbb
out
fmul
(bad)
in
outs
scas
ds
in
imul
cmps
fmul
scas
mov
(bad)
mov
sbb
inc
outs
pusha
push
or
or
test
retf
and
mov
mov
test
adc
xchg
sahf
sbb
out
mov
cmp
and
cmp
int3
dec
cmps
add
adc
mov
jo
mov
adc
mov
dec
push
cmp
rol
shr
lods
cwde
mov
cmp
add
stos
cmc
cmp
pop
mov
jbe
adc
push
mov
cs
pop
xchg
adc
jo
ins
adc
dec
mov
dec
dec
mov
adc
addr16
sub
repz
mov
mov
and
jmp
cmps
fld
adc
jno
jb
xor
and
cld
mov
stc
ret
xlat
inc
jg
mov
add
pop
out
add
mov
inc
lods
jmp
cmp
jge
sti
mov
(bad)
push
loope
add
sub
jmp
inc
dec
(bad)
xor
repnz
aad
xor
(bad)
xchg
mov
ss
mov
adc
dec
ffreep
mov
and
adc
lds
ret
push
dec
sub
mov
push
sbb
sub
jns
mov
outs
enter
sbb
lock
jnp
mov
jl
sub
aas
(bad)
push
rcl
je
jne
dec
(bad)
lea
sbb
dec
sub
(bad)
xchg
adc
mov
sub
pop
mov
fs
stos
dec
jp
sbb
(bad)
inc
adc
fs
sub
es
pop
(bad)
lods
xchg
dec
jle
pop
int
sub
adc
mov
test
mov
arpl
sbb
fstp
pop
imul
sti
sbb
mov
cdq
add
jb
mov
test
pop
xlat
xchg
cmps
ins
int3
dec
psllw
push
adc
ins
adc
(bad)
push
xchg
fist
jl
imul
and
retf
push
fsub
jb
fld
xchg
sub
push
out
inc
fld
fbld
add
jmp
out
shl
inc
jae
pop
cmp
mov
adc
jge
in
ins
xchg
push
mov
iret
pop
adc
daa
sub
dec
pusha
in
inc
inc
mov
xchg
(bad)
cmp
sbb
fld
pop
push
sub
mov
cmps
and
sub
popa
push
out
int3
cmp
(bad)
repnz
jg
xor
mov
sub
jb
loopne
mov
push
mov
cmp
mov
je
jmp
mov
add
adc
cld
das
test
lods
fdiv
inc
pop
shl
loopne
data16
jg
mov
pop
pop
xlat
into
and
aam
mov
pop
mov
je
jb
movs
push
dec
fs
mov
push
lods
jo
inc
les
test
pop
retf
sub
mov
jo
js
inc
loope
addr16
xor
sbb
mov
pop
sub
(bad)
sub
or
mov
jmp
xor
imul
cli
daa
inc
daa
pop
sbb
movs
xchg
mov
test
push
xchg
sbb
inc
xchg
pop
fild
pop
sahf
sub
add
pop
pop
xchg
sbb
and
clc
cmp
fdiv
outs
mov
mov
adc
repnz
jo
mov
ret
pop
cmp
cmps
dec
jbe
sub
add
ror
loopne
popa
jecxz
push
pop
fwait
cmc
pop
and
dec
loop
(bad)
(bad)
sub
xlat
cli
jnp
xchg
fs
pop
lds
jg
les
nop
push
pop
cmps
or
scas
inc
nop
inc
mov
xchg
ret
out
push
push
(bad)
int
(bad)
xabort
shl
test
imul
lods
mov
ss
shr
stc
(bad)
xchg
call
neg
je
pop
sub
adc
cmp
and
in
xchg
inc
out
cmps
or
push
xor
movs
adc
push
das
addr16
shl
pop
sub
mov
push
mov
mov
lods
sub
outs
cvtdq2ps
jl
inc
jns
mov
lock
push
add
xchg
outs
std
xchg
pop
jo
xlat
push
xchg
mov
lock
ror
adc
pop
cs
shl
inc
mov
mov
cmp
scas
adc
inc
mov
call
sahf
enter
sbb
pop
shl
add
test
mov
in
fs
outs
cmp
push
sbb
jne
std
aas
test
gs
cdq
in
addr16
hlt
dec
inc
jge
nop
aas
or
pop
fadd
mov
dec
inc
mov
popa
cmp
mov
fldl2t
lods
sub
enter
jbe
sbb
xchg
cmp
aad
mov
fcom
or
xchg
clc
and
(bad)
movs
inc
mov
cmp
imul
mov
adc
jae
int
sbb
mov
pusha
jle
push
mov
test
xor
push
lods
sbb
jg
pushf
hlt
(bad)
(bad)
out
dec
push
(bad)
fstp
in
xchg
xor
test
mov
fistp
call
stos
dec
mov
lea
fisubr
stos
mov
inc
pop
movs
mov
sbb
jge
mul
mov
aas
fld
addr16
fadd
or
pop
int
or
jmp
sub
aam
mov
xchg
adc
mov
mov
push
pop
jbe
push
dec
call
mov
mov
das
pop
pop
and
arpl
fcomip
inc
xchg
jo
mov
scas
arpl
stos
mov
(bad)
push
imul
cli
sub
pop
push
icebp
xor
jno
and
rol
mov
ror
mov
dec
mov
inc
jp
test
push
or
xchg
mov
pop
icebp
bound
addr16
fst
pushf
outs
sahf
mov
loop
mov
add
mov
arpl
pop
or
and
stos
in
add
adc
jbe
in
sti
sbb
push
jle
test
push
push
pop
clc
inc
or
pop
jmp
call
mov
out
fsub
mov
cdq
xor
pop
shl
xor
or
jne
mov
data16
and
inc
or
cmps
icebp
xor
or
mov
leave
push
inc
adc
mov
daa
inc
add
fimul
pop
mov
fmul
dec
xchg
jl
cld
cdq
push
retf
xor
sub
daa
inc
mov
add
ds
ds
fld
gs
jge
sbb
mov
dec
into
push
iret
test
test
or
fdivr
sub
push
outs
int
fnstenv
jo
xor
add
pop
push
jae
daa
dec
js
inc
enter
nop
idiv
test
into
xor
int
mov
dec
(bad)
out
sub
mov
cmp
das
adc
ss
sub
jg
mov
dec
mov
sub
repz
jnp
dec
adc
scas
aaa
(bad)
std
jl
add
cmp
int
adc
stos
and
adc
ins
movs
es
inc
adc
mov
sbb
ret
adc
fsubr
jo
mov
imul
pop
sti
(bad)
dec
lahf
inc
pop
lea
add
sbb
jle
ret
cmp
(bad)
cli
dec
sub
cmps
js
dec
xchg
fbstp
add
adc
push
dec
xchg
inc
cwde
mov
std
jecxz
or
jae
(bad)
movs
jo
xchg
adc
adc
sub
and
jle
mov
fistp
imul
nop
out
adc
inc
or
test
stos
aas
leave
lahf
and
cwde
out
cwde
adc
adc
pop
ins
ins
fld
ss
stos
add
retf
sbb
sbb
shr
push
xor
call
mov
aas
sti
sbb
and
aas
mov
daa
sahf
test
(bad)
sti
fwait
mov
mov
aad
xlat
ror
dec
call
movs
aas
lods
in
cmp
sbb
push
cmc
or
inc
jnp
lods
or
adc
iret
pop
and
jmp
pop
mov
xchg
sbb
(bad)
xchg
adc
pushf
bound
or
and
sbb
pop
loope
cli
and
imul
pop
pusha
adc
push
push
sub
pop
push
mov
stos
jb
add
lea
cmp
addr16
fmul
dec
dec
push
jo
repz
push
imul
pop
add
lds
pop
ins
or
sub
sub
xchg
xchg
mov
lea
dec
xchg
mov
aaa
mov
or
sahf
cld
xor
test
(bad)
(bad)
xchg
jge
cwde
pop
mov
push
xchg
xor
imul
loop
xor
push
fwait
sub
xlat
hlt
lds
stos
das
jp
lahf
xchg
scas
stos
mov
pop
inc
push
add
stc
das
pushf
loop
sub
dec
ins
cmc
movs
ins
pop
in
inc
cmp
dec
movs
xchg
es
pop
pop
fidivr
jo
cli
enter
cwde
mov
fwait
mov
call
push
cmp
inc
rcl
xchg
push
std
xor
and
jle
jmp
les
add
inc
ret
cmp
adc
std
or
xchg
in
jo
in
into
adc
push
test
lahf
cmps
addr16
pop
ffree
fld
pop
aaa
dec
cmc
je
gs
(bad)
jg
mov
push
sub
sub
pop
dec
scas
mov
stos
fcom
ja
and
cmp
stos
(bad)
mov
xor
pop
popa
cmps
into
mov
shl
sub
mov
sbb
ins
mov
cmp
dec
stos
xlat
jg
or
pop
cmp
test
sbb
mov
pop
mov
or
lahf
(bad)
fadd
int
cmp
dec
shr
sub
(bad)
pop
ds
lea
mov
cmp
aad
inc
ret
pop
fisttp
icebp
gs
cli
push
or
add
cmp
imul
mov
xor
(bad)
call
mov
xchg
cmc
gs
aam
pop
bnd
stos
cmp
inc
popf
push
out
retf
iret
aam
lods
jp
pushf
sub
adc
inc
pop
stos
test
mov
sbb
mov
int
mov
cli
mov
xchg
cmps
push
adc
cmc
ficom
mov
vpsadbw
leave
out
pop
(bad)
add
jno
mov
out
mov
jno
sub
adc
push
popa
mov
push
pop
enter
cmp
mov
mov
lods
sbb
sahf
lahf
sub
stc
mov
and
stos
into
jne
inc
xchg
enter
into
dec
mov
shr
aad
outs
inc
(bad)
adc
cmps
sbb
cmps
imul
jl
xor
hlt
imul
test
int
mov
inc
int3
xchg
aad
movs
bound
inc
adc
ja
mov
bound
mov
jp
jg
pushf
mov
cdq
es
sbb
and
push
dec
shr
daa
cmp
mov
mov
mov
xchg
mov
lahf
add
xchg
sub
mov
jb
jecxz
xchg
push
or
mov
retf
and
addr16
sbb
jmp
aam
icebp
pop
fidivr
adc
mov
(bad)
inc
jge
mov
sbb
call
les
add
add
mov
jo
shr
push
cmp
loop
pop
add
pushf
inc
cmp
mov
pop
mov
jge
cli
out
jno
call
sub
mov
mov
popa
enter
or
jns
(bad)
cmc
fidivr
sbb
cmp
jnp
mov
mov
mov
add
sbb
cmc
(bad)
sbb
cdq
pop
mov
ds
mov
sahf
mov
sub
movs
adc
inc
lds
mov
cmc
mov
push
aad
mov
sar
jle
cmp
pop
sub
arpl
pusha
add
mov
push
adc
pop
xlat
or
fisttp
dec
cmp
sub
int3
enter
addr16
push
mov
and
mov
jg
push
rol
xor
fnstsw
(bad)
ss
xchg
adc
pop
out
pop
jns
sti
pop
(bad)
sub
jae
mov
lods
pop
jp
in
dec
fwait
fwait
pop
fiadd
inc
mov
sbb
cmp
sub
push
dec
fsubr
pop
(bad)
(bad)
call
sti
pop
add
jecxz
inc
gs
dec
xchg
add
cdq
adc
xor
dec
idiv
adc
call
cmp
sbb
and
das
sub
clc
mov
fist
mov
mov
jecxz
jo
and
out
imul
cmp
js
cmp
test
fiadd
aas
mov
cs
push
pop
and
scas
push
jge
xor
test
pop
adc
mov
imul
cmp
outs
pop
shl
test
xchg
mov
adc
and
popa
and
call
loope
out
test
test
mov
dec
ds
stc
jno
sbb
mov
cs
xchg
movs
and
mov
mov
dec
sub
and
dec
jge
cmp
jmp
into
push
rol
add
out
inc
cmp
aad
jnp
pop
xchg
cmp
shr
pop
imul
shr
xchg
iret
and
mov
sbb
ins
or
xlat
dec
sbb
out
pop
scas
ins
retf
jle
push
popa
call
xchg
aas
mov
clc
jge
xor
push
fcomp
adc
xchg
loop
leave
(bad)
outs
dec
aam
sub
cmp
ror
mov
neg
fwait
mov
sbb
cdq
mov
lock
push
xor
out
pop
lock
popf
dec
js
mov
mov
call
(bad)
rol
jecxz
jle
cmp
sbb
cmc
clc
stos
push
test
jno
cmp
jmp
cmp
push
cs
mov
test
inc
xor
int
xchg
inc
inc
mov
bound
adc
outs
fsub
idiv
and
pop
retf
inc
out
dec
pushf
clc
imul
inc
jmp
sbb
aam
or
add
mov
fwait
cmp
push
push
push
adc
scas
mov
gs
mov
dec
add
pop
je
jno
retf
lea
adc
add
lods
inc
adc
fmul
into
pop
jmp
cwde
mov
mov
add
mov
(bad)
fld
test
xor
adc
xchg
cli
imul
inc
sub
movs
adc
mov
xchg
addr16
lods
test
(bad)
das
fwait
inc
hlt
imul
inc
pop
fsubp
fstp
cdq
movs
sub
xchg
pushf
repz
pop
mov
dec
and
xor
lahf
and
pop
pop
rcl
jmp
lds
sub
cmc
std
shr
push
jg
inc
div
jge
jns
pop
popa
enter
sbb
or
jle
add
fld
fist
or
mov
shl
xchg
mov
daa
mov
xchg
or
test
ins
(bad)
mov
in
iret
cmps
test
aam
pop
dec
imul
mul
mov
add
jae
fs
outs
xchg
pusha
cmps
or
call
add
inc
dec
lods
jne
mov
cmp
push
retf
out
push
into
aam
inc
aas
push
or
jle
adc
jne
xchg
xor
je
adc
xchg
adc
(bad)
retf
in
dec
sbb
push
pushf
jmp
sbb
mov
emms
adc
pushf
push
(bad)
fsubrp
sbb
adc
push
fsubr
sbb
in
xor
add
sub
adc
xchg
xor
add
cs
cmp
sub
pop
mov
in
pop
pop
push
in
push
fild
xchg
xor
cmps
push
mov
test
sti
xchg
or
dec
fidiv
jo
and
(bad)
fdiv
sub
pop
test
(bad)
aaa
push
mov
in
(bad)
(bad)
sbb
pop
and
and
retf
mov
push
xor
inc
mov
in
mov
fcmovb
push
mov
push
jp
int3
(bad)
call
cmps
xchg
(bad)
rol
push
mov
jae
mov
inc
mov
xchg
lods
jge
mov
xor
call
repz
jae
sbb
jmp
rcr
pop
mov
mov
pop
mov
add
xchg
loopne
pop
hlt
push
jl
inc
mov
xor
dec
adc
mov
dec
std
mov
dec
(bad)
inc
xchg
inc
stos
mov
mov
cld
jnp
(bad)
mov
xlat
fadd
(bad)
(bad)
scas
mov
adc
mov
enter
addr16
pop
clc
std
shl
lock
xchg
test
inc
loopne
outs
les
ins
add
idiv
retf
mov
arpl
jbe
out
add
jle
sar
or
ds
mov
inc
and
push
in
or
and
js
adc
push
sub
mov
test
mov
fs
mov
cmp
scas
push
cmp
rcr
repz
hlt
or
dec
in
lock
pushf
iret
inc
mov
clc
or
lahf
mov
push
mov
xchg
loope
cld
jb
dec
repnz
xor
mov
add
rcr
pop
lea
js
and
rcl
icebp
test
adc
jecxz
push
push
test
inc
aam
test
or
dec
loop
jo
je
into
mov
bound
cmc
xor
lahf
pop
add
or
dec
jbe
mov
inc
pop
inc
hlt
retf
lahf
aas
xor
push
and
loopne
ror
mov
js
push
sbb
aaa
push
adc
mov
inc
les
std
out
or
sub
mov
rol
jne
test
mov
xchg
cmps
pop
fdivr
fs
mov
inc
loop
frstpm(287
adc
cmp
(bad)
retf
jo
arpl
mov
mov
mov
popf
ins
in
xor
inc
push
dec
lods
adc
retf
dec
leave
push
jp
clc
cs
ret
dec
idiv
and
aam
jmp
in
mov
dec
xor
(bad)
outs
jecxz
popf
sbb
jae
xchg
jnp
mul
inc
test
xchg
test
jns
add
dec
and
(bad)
aam
dec
adc
xor
push
rol
sub
mov
fld
adc
push
mov
out
push
mov
call
sub
fs
xchg
sub
mov
lock
jmp
or
fucomip
xchg
push
shr
xchg
sub
jnp
pop
xchg
sub
add
xchg
and
stos
test
mov
cmp
iret
sub
xlat
mov
retf
cli
lock
je
mov
cmps
sub
mov
xchg
mov
fcomp
test
dec
adc
dec
mov
shr
mov
popf
int
fsubr
fdiv
retf
inc
push
outs
or
mov
push
pop
stc
xor
ss
cmc
lock
stos
sbb
sbb
jmp
outs
cli
(bad)
into
mov
rcr
bnd
outs
jbe
ja
outs
xchg
js
test
retf
xor
ins
cmp
cmp
fwait
dec
add
cwde
inc
add
fnstsw
ret
out
push
inc
inc
repnz
xor
mov
mov
sub
hlt
fwait
rcr
pop
int
or
push
(bad)
cmp
lods
ja
adc
movs
xchg
gs
pusha
or
das
mov
sub
cdq
loop
call
xchg
outs
lods
adc
inc
push
js
pop
les
or
push
push
(bad)
cs
mov
js
aas
sti
pop
push
xor
add
fbld
sub
jno
cmps
imul
js
retf
jmp
out
dec
add
(bad)
sbb
jmp
scas
add
imul
push
repz
mov
loope
pop
pop
xor
mov
ret
push
pop
xor
mov
jo
shl
cmp
cmp
mov
push
jo
call
scas
mov
mov
mov
not
add
int3
inc
or
ja
stc
(bad)
out
xor
lods
push
loop
enter
ret
mov
dec
mov
xchg
sbb
sub
fisttp
aad
cmp
sub
adc
test
cmp
mov
out
repnz
cmp
push
xor
xor
dec
adc
enter
xchg
sub
scas
movs
and
jne
popa
es
repz
inc
in
fxch
or
xchg
pushf
adc
call
dec
lock
leave
shl
add
rcr
mov
cbw
clc
cs
push
gs
and
mov
push
jns
dec
ins
out
xor
pop
xchg
ficomp
rcl
mov
xchg
jbe
rcl
jmp
mov
inc
in
mov
loope
test
xchg
sti
sub
arpl
leave
cmps
(bad)
(bad)
rol
xchg
into
ror
jge
push
sub
(bad)
shl
inc
sbb
repz
push
fsub
inc
xor
xchg
xchg
pusha
in
and
push
loope
pop
adc
xlat
mov
mov
xchg
daa
in
jmp
mov
out
or
or
outs
sbb
test
(bad)
retf
push
int3
push
ins
xor
repz
inc
adc
jnp
jbe
cli
sub
arpl
int3
ins
mov
in
iret
mov
jne
jns
test
mov
test
and
pop
jno
in
xor
cld
js
pop
fs
je
cs
jecxz
xchg
add
sbb
xchg
mov
int
mov
les
cmp
mov
ins
(bad)
pop
add
addr16
stc
les
mov
dec
mov
xchg
add
pop
jge
jle
into
jns
js
leave
xlat
clc
sub
push
adc
js
or
lea
adc
ins
ret
mov
ja
sar
jp
fsubp
push
inc
push
iret
xchg
int
add
jne
mov
push
and
stos
bound
fdiv
inc
dec
xchg
stos
dec
mov
pop
dec
cmps
int3
movs
fdivr
cmp
fsub
adc
out
mov
scas
sbb
jno
dec
repz
sahf
xchg
inc
or
cdq
sbb
add
out
cmp
pop
jmp
shr
pop
imul
fbstp
je
cli
daa
add
test
fidiv
push
add
push
xchg
fld
pop
sbb
clc
(bad)
dec
mov
dec
xchg
push
and
add
xchg
daa
stos
fstp
sbb
jbe
call
jmp
push
jnp
fsubr
cwde
in
out
xchg
idiv
icebp
and
int3
xor
mov
inc
adc
pushf
enter
movs
mov
xchg
xor
mov
mov
mov
cs
aaa
xchg
mov
sub
adc
rcl
mov
mov
aad
xchg
mov
popa
push
js
xchg
or
inc
aam
ds
push
pop
stos
cmp
pop
add
and
jp
daa
not
push
js
pop
xchg
lods
ds
out
call
cmp
and
sub
das
xor
outs
loop
mov
pop
cmp
push
test
pushf
adc
test
pushf
mov
aaa
cdq
xlat
test
mov
test
scas
xchg
xor
fist
in
imul
push
inc
xchg
xchg
push
addr16
fdivrp
xor
push
or
aam
xchg
cs
lar
jbe
test
add
jbe
inc
leave
aaa
push
add
sbb
push
les
jp
test
pop
sbb
mov
dec
dec
mul
adc
xchg
loopne
xchg
cs
jmp
adc
sub
ja
xchg
call
push
push
jg
fsub
mul
test
ins
cmp
pop
xchg
cmps
fdivr
test
fdivr
inc
mov
and
push
mov
jl
jp
and
sbb
add
mov
cli
repz
into
adc
mov
out
(bad)
clc
cmp
xor
in
pop
dec
sub
adc
jp
mov
in
jp
mov
in
mov
cwde
xchg
sbb
neg
pop
mul
and
sbb
rcr
pop
leave
cmp
lock
addr16
sbb
mov
iret
pop
add
ror
fwait
fs
loope
out
bound
or
aaa
pop
or
stos
aam
cmp
cmp
je
sbb
mov
mov
pop
dec
mov
movs
mov
aad
repz
xor
mov
cmp
adc
retf
mov
or
dec
adc
or
push
test
sub
loopne
test
es
mov
pop
pop
pusha
scas
jmp
mov
mov
cmp
stc
push
push
js
shr
leave
cmp
rcr
add
div
mul
test
mov
or
pop
pusha
fwait
ds
callw
je
push
scas
icebp
xchg
xor
stc
data16
loope
xor
or
data16
shl
and
imul
xor
mov
jg
inc
push
push
clc
pop
pop
inc
test
out
rcr
dec
lahf
pushf
sti
sub
sbb
ja
adc
and
in
pop
adc
lock
(bad)
jp
inc
pop
pushf
dec
scas
add
(bad)
dec
xor
push
imul
mov
sbb
cli
push
mov
adc
icebp
cld
mov
test
dec
scas
retf
rol
gs
mov
jne
inc
mov
push
xchg
inc
neg
jecxz
mov
shl
sbb
(bad)
cs
das
jecxz
pop
into
ja
fwait
sub
push
or
mov
ins
lgs
dec
out
scas
adc
ins
repz
cld
xor
out
mov
mov
mov
cmp
add
cmp
out
mov
fs
xor
and
and
in
addr16
cmp
mov
shl
(bad)
movntps
inc
mov
xchg
mov
out
or
pop
jl
and
dec
mov
adc
daa
outs
repz
mov
mov
pushf
movs
xor
clc
add
outs
and
repnz
jo
xchg
xchg
addr16
cmp
xchg
fcom
add
jle
mov
dec
pop
add
es
jecxz
or
push
fnstenv
jg
add
jmp
stc
loope
into
xor
xchg
nop
mov
or
dec
or
clc
mov
xchg
inc
sbb
pop
imul
adc
xor
sbb
jo
and
daa
popf
mov
pop
xchg
push
dec
out
xchg
in
xchg
in
retf
mov
mov
jno
mov
mov
jns
xchg
in
mov
out
mov
mov
adc
and
movs
pop
icebp
push
inc
icebp
xlat
popa
aam
mov
mov
and
jg
movs
jno
sub
cmps
shl
add
push
xchg
jmp
mov
add
xor
int
ret
or
pop
stos
adc
js
rcl
lods
dec
sub
test
mov
in
jle
mov
cs
dec
cwde
ret
adc
sar
jne
inc
mov
hlt
jge
(bad)
or
jg
idiv
fdiv
lock
mov
(bad)
inc
je
mov
pop
pop
mov
jmp
and
call
dec
ja
jae
jmp
xchg
or
out
add
imul
enter
shl
repz
test
outs
xchg
xchg
jo
mov
ror
xchg
arpl
daa
cmp
and
aaa
addr16
mov
mov
adc
mov
vpmuludq
mov
xlat
pop
jne
xor
or
adc
and
add
(bad)
adc
or
in
int
out
sub
adc
popa
push
push
shl
loope
jmp
fiadd
ficom
pop
jae
sub
sbb
push
mov
xor
(bad)
sbb
aam
loop
adc
pusha
xchg
jecxz
xor
fwait
das
add
sub
jp
push
push
fucom
push
pop
mov
add
cwde
jle
std
(bad)
inc
pop
adc
pop
xor
int
outs
inc
xchg
sbb
jl
iret
xor
dec
push
(bad)
mov
dec
hlt
sbb
pop
mov
out
cli
sub
sub
cwde
arpl
push
jecxz
jno
sub
or
leave
or
adc
inc
clc
mov
mov
aas
pop
jbe
xor
xlat
mov
jae
out
std
shl
jp
daa
xor
jnp
cmc
cld
pop
lahf
movs
data16
or
sub
ja
aam
push
cmp
pushf
mov
aad
icebp
and
in
sbb
jo
gs
out
xchg
mov
lods
out
(bad)
(bad)
pop
pop
stos
xor
push
mov
in
dec
or
xor
nop
stc
aas
mov
mov
add
ss
sbb
mov
mov
(bad)
cmps
inc
xor
fst
arpl
fdivr
inc
inc
add
imul
and
push
mov
mov
cmp
fs
jb
dec
leave
imul
fidiv
stos
in
add
xchg
sbb
mov
or
fucomp
inc
sub
sub
cmp
pop
mov
popf
rcl
mov
loop
jae
push
xchg
call
fcmovu
or
pop
xchg
rol
inc
inc
jle
adc
pop
paddq
push
add
and
pop
ror
adc
movs
mov
add
and
inc
add
and
jns
sbb
fwait
dec
in
xchg
cmp
pop
push
and
pop
je
adc
int3
or
out
retf
fbstp
rcr
movs
sbb
cwde
arpl
pop
fcomp
xor
inc
mov
cwde
jle
das
mov
mov
jne
xor
mov
jge
es
ss
push
pop
stc
call
call
add
rcl
add
sahf
add
push
mov
mov
mov
test
inc
cdq
fmul
loop
xchg
pop
shl
pop
push
fcom
push
push
sbb
dec
sub
inc
push
test
jge
loop
inc
cmp
jle
sti
and
ins
shl
(bad)
std
xchg
pusha
in
jmp
in
jnp
dec
inc
in
aas
ins
mov
xchg
dec
xchg
cmp
aam
mov
retf
xchg
mov
mov
cmp
jg
jbe
sbb
xchg
and
sub
push
sysexit
pop
jnp
fcmovbe
dec
inc
(bad)
leave
test
inc
jae
mov
(bad)
mov
sbb
xchg
mov
icebp
push
pop
cs
sub
je
sub
movs
stos
inc
lods
lea
out
(bad)
loope
or
pop
sbb
mov
icebp
or
(bad)
repz
push
pop
xor
je
xchg
cdq
jecxz
out
stos
jmp
add
cmps
adc
xchg
fs
sub
retf
shr
ja
jbe
adc
ss
addr16
movs
cs
pop
inc
pop
or
arpl
xchg
mov
jbe
mov
ins
daa
in
xor
jb
or
fwait
ret
sbb
dec
sahf
jmp
sub
mov
scas
xchg
bound
mov
movs
dec
cmpxchg
clc
pop
cmp
cmps
rcl
rcl
retf
push
repz
je
add
test
inc
aas
call
or
dec
jp
dec
rcl
sub
adc
xor
ds
adc
inc
scas
dec
int3
jg
pop
int
mov
xor
jbe
adc
xchg
xlat
mov
scas
ins
icebp
cwde
sbb
sub
clc
adc
call
adc
cmp
test
repnz
popa
ds
addr16
outs
shl
ins
call
test
or
icebp
out
pop
in
or
repnz
pop
mov
dec
das
push
cwde
sub
(bad)
adc
add
fwait
imul
into
cld
jae
adc
fld
pop
fstp
push
lds
div
jns
or
mov
arpl
cmp
lods
and
dec
mov
mov
dec
mov
pop
adc
dec
ss
repz
inc
out
jecxz
int
movs
pop
lods
or
rcl
cmp
add
xor
bswap
cmp
ja
aam
pop
pop
retf
mov
movs
nop
sbb
jb
aas
cmp
adc
mov
mov
mov
stos
inc
pop
or
out
into
push
pop
sub
sub
jecxz
cmps
cmps
sahf
or
fidivr
inc
add
xlat
inc
cmp
xor
shl
add
js
cli
out
and
xchg
dec
and
(bad)
popf
add
mov
and
adc
gs
mov
xrelease
adc
or
daa
or
cmp
mov
jp
inc
ins
jp
mul
xchg
fcomp
(bad)
leave
push
and
push
add
sbb
mov
add
and
dec
mov
jmp
jo
into
add
cmp
(bad)
mov
push
inc
sbb
jle
xchg
int3
add
pop
nop
jnp
nop
repz
in
pop
and
cdq
enter
(bad)
pop
ret
cli
and
dec
xchg
mov
xchg
scas
ds
test
add
push
cmp
push
mov
dec
shl
test
js
mov
je
call
neg
fld
and
dec
outs
cmovo
and
je
mov
add
ins
cmps
aad
xchg
jno
adc
mov
aad
add
aas
rol
push
mov
sbb
or
or
mov
out
mov
popf
fbld
mov
outs
xchg
(bad)
pop
push
sbb
int3
mov
rcl
test
(bad)
jne
ins
cdq
xor
iret
stc
aad
sti
sub
mov
lods
pop
and
xchg
ins
pop
and
push
(bad)
mov
sbb
xor
scas
and
out
loopne
add
lock
scas
retf
ins
sahf
pop
mov
ss
in
xchg
cmp
(bad)
jmp
dec
les
add
xor
nop
sub
cmp
mov
or
shl
sbb
test
icebp
pushf
aas
sub
mov
and
push
leave
adc
(bad)
sbb
or
mov
ins
inc
jno
push
(bad)
and
push
mov
aam
mov
clc
mov
imul
xor
in
cs
jns
sbb
pop
cmp
scas
call
jo
xlat
and
imul
popa
mov
ret
xchg
dec
call
aas
pop
sub
dec
and
jmp
rol
xor
mov
test
(bad)
(bad)
or
jns
cmp
cld
pop
xor
daa
int
(bad)
mov
or
cmps
(bad)
in
gs
or
inc
out
test
add
popf
push
or
call
jge
loop
adc
dec
shl
je
xchg
xor
in
arpl
ror
mov
cmps
xor
dec
inc
mov
and
push
jo
(bad)
enter
jnp
rcl
aad
pop
push
pop
push
jle
adc
fwait
push
mov
pop
or
mov
dec
cwde
ror
cwde
lods
bound
dec
jnp
sub
pusha
dec
cmp
ins
(bad)
fdivrp
inc
jl
xchg
jo
inc
xchg
call
pop
inc
and
sub
push
inc
cmp
xchg
jno
je
in
adc
cwde
ss
sar
mov
push
cmps
popa
lock
xlat
and
adc
movs
xor
jno
xor
push
fadd
jo
test
dec
jle
dec
cld
sbb
sub
test
iret
dec
xor
rcr
xlat
xchg
or
std
int3
jo
call
lods
sbb
mov
js
xor
in
sub
(bad)
retf
cwde
test
shr
daa
cmp
cmp
mov
pop
mov
lock
jb
mov
scas
clc
pop
add
rcr
imul
jbe
dec
cmps
fs
xchg
out
mov
pop
popa
ins
adc
leave
cli
(bad)
fsubr
ret
leave
xor
(bad)
and
adc
mov
pop
ret
xchg
out
(bad)
(bad)
gs
inc
jne
movs
xchg
sub
repnz
add
enter
or
stc
lods
ins
(bad)
shl
dec
add
xchg
jge
out
mov
jg
cld
repnz
cli
lahf
pop
xchg
mov
dec
xchg
inc
jns
push
dec
pushf
std
dec
pop
scas
push
mov
mov
repnz
and
clts
pop
mov
and
sbb
jo
jae
jb
lods
add
stos
in
dec
adc
test
dec
sar
test
les
or
sub
inc
pop
lea
cdq
fucom
pop
push
lods
add
mov
cld
mov
jne
cdq
mov
push
jbe
pop
dec
dec
pop
jnp
cwde
mov
pop
cmps
push
pop
jmp
xchg
or
mov
jg
loop
xchg
dec
mov
test
xor
mov
push
dec
aam
jp
xor
adc
popa
ins
ins
sti
or
cmp
or
add
sub
lds
les
sbb
mov
in
mov
sbb
pop
loope
rcl
hlt
sbb
pop
adc
or
mov
inc
in
cmp
push
sar
lock
cli
or
mov
pop
fist
sbb
loopne
and
xor
sar
ins
stc
or
dec
cli
pop
sub
xchg
jl
ins
inc
xor
jge
dec
inc
rcr
stc
xchg
test
mov
xor
fiadd
xchg
fild
jb
gs
cmp
out
pop
mov
icebp
cmp
xor
mov
or
jg
sbb
mov
xchg
stos
adc
adc
jnp
add
mov
test
jmp
dec
mov
sbb
loopne
mov
sbb
push
pop
lods
das
dec
stos
nop
sub
sbb
test
shr
adc
dec
clc
dec
or
pop
push
mov
inc
clc
xor
mov
fwait
mov
xchg
pop
inc
ror
or
cli
mov
jbe
fild
repnz
popa
sbb
cld
jb
rcl
xchg
dec
mov
das
repz
lods
leave
rcr
add
test
push
shl
hlt
pop
jmp
in
leave
push
aas
jp
push
sub
mov
mov
mov
bound
mov
(bad)
mov
(bad)
mov
adc
jno
pop
jmp
sub
pop
mov
in
push
dec
push
cld
shr
repnz
inc
in
call
icebp
shr
mov
cmp
xchg
ins
mov
dec
shl
push
fist
pop
mov
inc
jmp
jnp
mov
cmc
and
xor
xchg
pop
jecxz
call
jmp
loopne
push
jg
jbe
mov
int
add
push
and
push
stc
retf
cmp
jle
xor
jmp
inc
sbb
cmp
repz
rcr
sahf
cmp
(bad)
push
xchg
pop
imul
int
dec
push
fwait
pushf
xlat
inc
outs
imul
jmp
and
adc
adc
nop
or
fs
pop
xor
push
add
dec
dec
pushf
push
cmp
or
stc
add
enter
loopne
sahf
push
mov
push
adc
sub
jbe
push
jne
dec
sbb
test
xor
cmps
inc
repnz
sub
mov
add
xor
leave
sub
sbb
addr16
xor
lea
sar
mov
mov
xchg
imul
pop
jne
ja
pop
cmc
scas
(bad)
es
mov
xor
xchg
leave
push
add
mov
add
jns
cli
fwait
loop
(bad)
loop
enter
jo
mov
retf
sub
dec
imul
add
scas
out
cmp
adc
xchg
stos
sub
cmp
add
mov
inc
cmp
in
leave
inc
nop
scas
xchg
xor
mov
repz
or
inc
ror
add
push
test
pop
pushf
jns
push
sub
scas
jns
sbb
in
xchg
cld
neg
jns
inc
data16
rcr
retf
sbb
mov
call
jae
push
fst
sbb
pop
pop
or
add
ss
loop
nop
dec
pop
ins
sti
mov
pop
and
ins
pop
sbb
aas
adc
or
int3
sub
pop
cli
test
jmp
outs
stos
adc
xchg
sahf
mov
add
add
pop
stos
iret
mov
cmp
addr16
pop
cmc
add
int3
fmulp
sub
ret
nop
out
mul
popf
dec
push
test
aaa
(bad)
mov
call
pop
(bad)
retf
push
int3
mov
jmp
and
mov
or
inc
mov
das
(bad)
stos
arpl
aam
and
pop
neg
mov
gs
jns
mov
(bad)
fdivr
aas
shl
sub
cmp
mov
mov
out
shl
xor
or
jae
jg
xor
daa
jmp
or
mov
fmul
push
dec
mov
jo
ins
pop
retf
dec
and
int
mov
gs
loopne
inc
pushf
jns
or
cmp
cmp
mov
push
pusha
aad
mov
retf
leave
xlat
jmp
frstor
mov
mov
imul
mov
sbb
jl
rol
xabort
inc
pop
jne
cmps
adc
ss
mov
pop
int3
jmp
add
dec
scas
in
sbb
add
push
mov
or
add
lods
mov
call
ss
xor
lock
fnstenv
jg
push
stos
jp
sbb
mov
iret
iret
sti
inc
pop
js
push
or
sbb
lock
sbb
sahf
pop
add
mov
mov
icebp
and
(bad)
push
pop
jg
sub
mov
enter
push
push
add
jno
xor
lahf
rol
sbb
(bad)
dec
mov
xor
add
pop
mov
mov
pop
aas
xor
add
bound
sbb
pop
xchg
and
or
dec
aad
sub
lods
adc
sbb
push
out
sti
(bad)
fnstcw
stos
loop
push
sub
mov
mov
adc
in
repnz
(bad)
mov
mov
nop
sbb
cdq
ds
(bad)
aas
push
fs
sbb
sti
std
fldenv
dec
ret
mov
and
xor
mov
iret
xchg
adc
add
shl
jne
pop
add
test
pop
jb
shl
pop
fild
retf
push
or
das
je
hlt
inc
das
rcl
inc
hlt
test
add
in
adc
and
addr16
retf
jae
jns
not
or
out
push
icebp
push
sar
into
and
inc
mov
fidiv
push
jle
jnp
mov
int
pop
pop
js
shl
push
push
cmp
dec
call
int3
aaa
pop
imul
and
pop
jmp
out
inc
add
mov
mov
push
cwd
std
jbe
es
hlt
fwait
ja
dec
lahf
push
cwde
dec
mov
test
add
mov
xchg
aam
and
mov
push
push
call
mov
mov
and
dec
div
and
xchg
push
jmp
add
or
and
add
(bad)
xor
push
shl
mov
out
jne
push
jp
jle
ins
cmp
pop
push
test
xor
test
jno
in
scas
xchg
cld
inc
xchg
xor
mov
pop
pop
data16
sbb
cmp
jecxz
test
out
mov
in
out
loopne
enter
mov
pop
std
out
mov
fidiv
daa
icebp
imul
or
push
dec
xchg
stc
test
dec
adc
pop
aaa
movs
cwde
and
(bad)
sbb
add
inc
pop
popa
fcomp
sbb
inc
retf
cwde
pop
xchg
mov
arpl
shl
xchg
fs
sbb
aam
jno
mov
cdq
jle
(bad)
fisttp
icebp
popf
mov
sub
mov
stos
or
mov
cmp
jmp
or
(bad)
mov
xchg
dec
mov
and
std
sub
push
in
ror
xchg
xor
pop
and
push
xor
sub
mov
sti
push
mov
ror
dec
add
loope
leave
xchg
lods
call
xchg
js
movs
mov
lock
mov
push
imul
dec
sbb
fidiv
mov
sub
fadd
xchg
cli
sub
rcl
and
xor
push
pop
stos
adc
outs
xchg
out
sbb
or
das
arpl
imul
ins
sub
jno
cmp
adc
pop
sbb
popf
ja
xchg
mov
popa
nop
push
mov
ror
xor
jle
loopne
cld
pop
xlat
(bad)
call
out
adc
into
sbb
mov
jl
and
mov
push
pop
sahf
adc
add
std
sbb
movs
call
mov
call
sub
je
enter
cmp
retf
fnstcw
lds
cmp
lods
stos
fist
cmc
xchg
icebp
popf
scas
test
add
push
cmps
fldenv
out
fisubr
cmps
adc
inc
test
mov
fcmovne
cmc
dec
mov
mov
cmp
(bad)
mov
add
push
shl
test
aas
fstp
xor
jno
jmp
adc
dec
pop
and
jae
push
sub
not
rcr
cmovl
and
inc
cmp
les
(bad)
call
mov
retf
sub
adc
mov
xchg
out
fldcw
(bad)
mov
jg
jb
es
mov
jbe
(bad)
mov
jp
push
adc
mov
dec
dec
paddsb
ja
mov
push
xor
sub
xlat
push
(bad)
movs
fsubr
lahf
pop
loop
out
outs
(bad)
(bad)
pop
inc
dec
push
cmp
mov
fsubp
ret
xor
not
dec
push
add
jbe
ds
loope
rcl
sub
xor
jle
sbb
jmp
es
mov
nop
movs
or
dec
or
xor
lock
jecxz
cmp
adc
sbb
ret
mov
sub
fld
js
or
mov
mov
cmp
imul
adc
arpl
daa
dec
pop
call
sbb
push
sub
or
and
les
pop
xchg
(bad)
sub
imul
mov
inc
into
sub
clc
add
mov
mov
mov
xlat
sub
xor
ins
pop
loop
loop
pusha
repz
sti
loope
jnp
jb
adc
ds
das
mov
out
aaa
outs
fwait
jmp
das
ret
out
shr
imul
lock
hlt
xchg
push
dec
fnstsw
mov
movs
add
mov
in
jg
jmp
(bad)
sar
jnp
inc
sbb
cli
push
sub
out
leave
rcl
cmp
push
push
bswap
shl
adc
cdq
pusha
push
fscale
js
and
clc
mov
cmp
call
vaddpd
(bad)
fnsave
iret
fidiv
adc
sbb
push
xchg
hlt
mov
mov
sbb
pusha
cld
sbb
mov
and
(bad)
(bad)
retf
sub
mov
cld
or
dec
mov
dec
call
and
aaa
(bad)
icebp
aaa
popf
dec
push
stc
pop
sbb
(bad)
ins
sub
in
xchg
xchg
(bad)
rcr
loopne
retf
xor
jmp
dec
sub
xor
pop
popf
retf
inc
sahf
mov
dec
dec
test
test
sub
js
stos
shl
lock
inc
test
(bad)
or
sub
in
ins
(bad)
xchg
popa
xor
and
cs
adc
xor
dec
dec
and
or
ret
pop
mov
xchg
mov
dec
in
push
dec
xchg
sbb
xchg
pusha
mov
std
mov
movs
xor
and
inc
les
(bad)
pop
data16
xor
gs
jmp
pop
rcr
push
add
xchg
xlat
outs
out
aas
imul
mov
xlat
or
cdq
dec
call
repz
cmp
fidiv
cmp
mov
inc
xlat
jns
mov
in
in
xchg
inc
popf
xor
fbld
int
adc
fstp
cmp
xor
int3
pop
shr
call
pusha
ja
xchg
sub
cld
sub
call
scas
xchg
mov
dec
retf
out
fwait
int
dec
add
xchg
xor
cmps
pushf
pop
sbb
cmps
sbb
out
jns
add
cmp
mov
lea
jb
(bad)
bndstx
add
ss
rcl
mov
mov
movs
mov
out
das
jns
push
aaa
xor
mov
sti
and
adc
xchg
xor
outs
cmp
popf
or
pop
inc
outs
inc
adc
lods
repz
cwde
(bad)
mov
call
inc
fnsave
jbe
pop
push
cmp
jg
sub
jns
aas
aas
adc
imul
ret
sti
rcr
loope
add
xor
mov
adc
mov
and
sbb
and
jl
jb
xor
add
cmp
int
add
inc
xor
or
mov
add
or
or
out
xor
outs
adc
je
int3
pusha
add
in
loopne
sub
mov
and
fs
int
ja
mov
mov
or
enter
out
xor
sub
pop
aaa
jge
push
mov
mov
mov
add
enter
mov
xchg
sbb
add
sub
xor
cmc
dec
lahf
loopne
ins
imul
(bad)
xchg
sbb
inc
mov
addr16
mov
inc
scas
call
jecxz
sub
lods
and
add
call
jbe
enter
jmp
fdivr
lods
ret
jle
sub
xor
data16
mov
neg
cld
repnz
adc
mov
(bad)
lea
jne
in
shl
mov
sbb
sub
(bad)
addr16
call
mov
jmp
pop
cmps
adc
retf
movs
int3
pop
sub
test
movs
fdivr
cwde
stc
push
ficom
mov
adc
and
push
push
enter
dec
cdq
mov
into
das
xor
adc
push
add
pop
pop
cmp
sub
outs
and
sub
xor
cmps
test
fcmovu
cmps
data16
sub
add
xor
call
mov
aam
frstor
ficomp
int
aam
movs
inc
adc
pop
fisttp
pop
iret
jb
mov
jmp
cld
into
in
sub
int
mov
mov
cmps
sub
pop
sbb
or
sub
ja
add
and
fnstenv
cmp
lock
mov
inc
dec
xor
popf
push
div
icebp
adc
jb
cmp
outs
aaa
js
test
rol
sbb
sbb
imul
(bad)
or
adc
fistp
sbb
inc
push
push
sbb
mov
(bad)
push
sbb
test
jle
aas
sub
mov
adc
js
das
and
add
jo
sbb
push
jl
ins
fimul
sbb
jecxz
cmp
mov
cmp
pop
push
test
add
push
inc
sbb
stc
dec
mov
and
ja
fcomp
jmp
push
dec
mov
add
mov
jp
scas
inc
stos
sbb
push
clc
cs
mov
sahf
popf
jnp
dec
(bad)
retf
mov
xchg
sahf
bound
sub
push
ins
mov
jmp
jae
in
push
mov
data16
test
int3
loope
jl
sub
sti
shr
push
test
rcl
inc
jp
jge
cmp
jbe
pushf
or
jo
aas
sub
shl
pop
mov
rcr
push
sub
mov
inc
retf
mov
cld
cmp
mov
or
paddd
push
lods
stc
leave
popf
xlat
into
inc
mov
clc
(bad)
cmp
dec
push
adc
nop
mov
ror
cmps
inc
xor
pusha
add
or
sub
adc
into
cwde
fwait
sub
scas
sbb
mov
pushf
ins
xchg
mov
and
enter
mov
sbb
jp
(bad)
out
aad
outs
xchg
sbb
fstp
xor
test
sbb
das
push
mov
and
xchg
xchg
inc
xchg
cmp
lds
js
out
data16
adc
push
cwde
retf
cmp
lds
shr
daa
dec
push
(bad)
sub
sbb
xchg
stc
das
dec
ds
stos
cmc
pushf
loop
cmpxchg
jnp
leave
data16
fmul
adc
and
xor
mov
addr16
js
and
mov
mov
fidiv
mov
outs
repz
outs
sub
cld
cs
fs
mov
or
sub
cmp
mov
xor
dec
movs
and
js
cmp
xchg
inc
sahf
(bad)
aam
inc
push
and
and
es
jns
push
popa
shl
nop
jnp
das
imul
mov
jns
mov
or
imul
fadd
cmp
mov
ss
enter
movs
(bad)
mov
rcr
outs
movs
lock
and
std
sub
in
mov
sub
sub
ret
leave
or
jp
mov
jo
sbb
inc
and
retf
mov
sti
pop
cmp
and
xlat
pop
test
mov
pop
neg
jle
leave
jo
in
sub
xchg
dec
aad
mov
nop
cmps
or
pop
sub
add
adc
stos
mov
pop
cs
xor
out
jecxz
cmp
push
lods
hlt
cmc
adc
ins
mov
rcl
in
xor
repnz
jnp
mov
mov
inc
inc
test
call
cmp
retf
daa
pop
xchg
mov
mov
in
cmp
jb
add
fucomi
push
stos
or
add
pop
xor
jnp
retf
jg
add
sbb
or
fwait
jg
(bad)
cmps
xor
int3
les
fisttp
test
add
ja
jp
pop
jle
cld
xchg
jmp
xor
scas
into
push
push
adc
rcl
dec
es
ret
jno
push
stos
pop
movs
fs
dec
fs
push
jp
and
dec
jae
test
mov
and
rcr
lds
pop
lods
mov
add
inc
pop
pop
push
dec
adc
loope
nop
mov
mov
retf
rcl
fsubr
(bad)
in
pop
in
pop
xchg
cld
(bad)
idiv
repz
jmp
xlat
inc
movs
push
ret
fwait
mov
push
push
in
inc
leave
pop
aas
popf
sbb
xchg
sub
mov
push
dec
fst
cmp
pop
loopne
push
jo
loopne
xchg
aad
cmp
mov
mov
jbe
jae
in
pop
test
adc
mov
jle
dec
(bad)
xor
movs
inc
sbb
inc
imul
mov
clc
xor
add
je
pop
in
pop
or
out
callw
hlt
mov
loope
in
sbb
inc
jl
ret
in
cmp
lahf
(bad)
fs
jp
arpl
push
mov
lds
nop
pop
imul
aaa
mov
loop
sbb
or
lods
lea
test
outs
in
fs
jmp
pop
cmps
leave
add
dec
xor
dec
mul
lods
adc
xchg
xchg
sbb
repnz
lahf
cli
out
ret
or
jge
js
dec
nop
xchg
pop
nop
sub
push
retf
stos
in
jb
push
jne
sbb
push
mov
adc
sbb
stos
jmp
call
sar
ins
mov
sbb
aam
mov
popa
test
add
mov
sbb
lahf
out
leave
sbb
aad
test
test
imul
clc
aam
scas
push
mov
loop
jmp
not
or
pop
mov
out
arpl
pop
(bad)
call
dec
imul
xchg
push
sub
cmp
out
pop
scas
mov
aam
out
adc
pop
inc
in
mov
lea
add
mov
and
mov
mov
sbb
push
sbb
jne
(bad)
pop
rcr
scas
stos
mov
sbb
push
mul
cs
xor
or
pushf
repnz
mov
push
inc
sbb
push
xchg
daa
test
cmps
scas
cdq
jle
push
xchg
cbw
shr
xlat
fs
mov
(bad)
cld
fucomip
ds
call
(bad)
les
push
lods
cmp
outs
aas
sub
cdq
jno
push
repnz
in
in
mov
sbb
jbe
mov
xchg
not
sub
gs
shl
jp
pop
adc
es
xchg
mov
cld
bound
pop
jge
jmp
mov
repz
push
pop
mov
(bad)
mov
fdivr
mov
popf
jae
jl
jp
fld
inc
mov
sub
dec
fcmove
mov
cwde
push
fcomp
pushf
dec
int
mov
mov
leave
and
repz
pusha
idiv
int3
stc
cld
sbb
imul
jbe
pop
lds
pop
mov
dec
rol
jge
adc
pop
rcl
sub
or
arpl
ja
xchg
adc
sar
outs
dec
test
jbe
out
adc
loope
jmp
add
xchg
fisubr
inc
cdq
repnz
ins
(bad)
adc
pop
sub
xor
and
adc
push
icebp
jp
mov
sbb
mov
cmc
test
shl
mov
in
stc
jae
sahf
scas
retf
xchg
adc
cwde
es
push
(bad)
retf
aam
mov
cmp
mov
movs
outs
movs
pop
(bad)
xlat
mov
clc
push
push
mov
ss
cmps
inc
ins
sbb
nop
jne
dec
pushf
mov
pushf
ins
mov
and
dec
loopne
and
lods
into
pop
mov
neg
cmps
movs
inc
aaa
imul
mov
aaa
cmp
hlt
inc
aas
dec
inc
cmp
pop
mov
jne
xchg
nop
dec
or
stc
clc
jle
(bad)
in
sbb
xlat
push
push
or
jmp
cvtdq2ps
pop
sub
pushf
into
sbb
cld
fs
stc
lods
pop
test
mov
sbb
call
pop
lock
sub
dec
jnp
fwait
jmp
out
in
xor
in
mov
arpl
pusha
xchg
adc
ins
sub
push
rcr
shl
scas
rcr
int3
or
shr
mov
ret
aad
jle
adc
mov
fcomp
mov
scas
sar
xlat
rcr
fnstsw
shl
daa
stc
cmps
scas
dec
add
push
out
xlat
mov
or
(bad)
jmp
pop
push
out
jecxz
bound
cli
leave
stos
cmps
imul
mov
mov
adc
pop
or
xor
cmps
sahf
inc
push
xchg
cli
pop
sub
or
add
xchg
out
ss
cli
pushf
jnp
xor
(bad)
fdiv
cli
pop
add
push
int
arpl
inc
js
adc
int
and
es
test
cdq
ja
jbe
cmp
sahf
jae
data16
xor
cmp
pop
fbstp
jbe
inc
or
mov
push
ss
jle
jmp
scas
into
out
dec
xchg
(bad)
in
adc
inc
sbb
cdq
push
or
mov
test
bound
pop
clc
gs
call
aas
popa
jmp
dec
cli
jne
shr
mov
enter
(bad)
xchg
das
pop
jb
adc
mov
mov
int
jno
shl
push
fs
push
mov
cmp
pmaxub
dec
push
test
pop
call
xchg
lods
ret
gs
mov
outs
inc
adc
cmc
jmp
or
and
and
nop
sub
push
jmp
or
dec
xchg
inc
in
daa
nop
mov
jg
movs
xor
outs
cmp
dec
hlt
data16
adc
outs
repnz
iret
inc
scas
fdiv
pop
pop
pop
test
cli
fist
mov
out
imul
mov
repnz
ins
retf
fsub
arpl
sar
sbb
(bad)
stc
mul
pop
int
leave
cmp
cli
stos
pop
shld
les
lea
sub
push
xchg
mov
xchg
cdq
xchg
push
pop
jb
cmp
jns
mov
dec
jb
xor
push
push
rol
rcr
xchg
retf
jb
or
dec
ror
pusha
mov
mov
outs
add
mov
ret
movs
ror
inc
in
xchg
mov
dec
jbe
loope
setle
cmp
jl
pop
sar
in
adc
ret
jmp
icebp
mov
or
mov
ror
scas
xchg
inc
idiv
or
push
inc
mov
mov
adc
mov
std
cmp
and
dec
and
mov
aad
and
dec
les
mov
pushf
mov
jne
in
mov
xchg
mov
dec
inc
cmps
sbb
enter
mul
xchg
xchg
aas
in
jnp
test
dec
out
pop
arpl
cs
mov
cwde
sbb
mov
mov
mov
in
xchg
cmp
jne
sub
cmp
xchg
dec
adc
sbb
repz
lock
les
mov
ins
popa
jmp
push
xor
loopne
outs
in
or
addr16
add
jo
lahf
add
jmp
xchg
stos
mov
pop
adc
xlat
and
pop
addr16
mov
xlat
xor
mov
mov
fnstenv
cld
cmp
test
and
push
and
pusha
iret
(bad)
adc
test
push
repz
mov
push
cmc
jno
test
xchg
jge
mov
jo
inc
mov
in
(bad)
test
imul
jmp
ins
and
retf
lods
mov
fiadd
dec
std
xchg
retf
inc
add
mov
(bad)
aad
inc
cmp
mov
push
jnp
adc
xor
stos
push
xor
retf
test
jl
(bad)
cs
call
outs
and
pop
cmp
imul
add
mov
test
aad
xor
fcom
add
retf
cmp
sub
xor
cmps
mov
pusha
push
cmp
(bad)
dec
jg
pmulhw
movs
pop
pop
xor
(bad)
fdivr
call
dec
mov
fisubr
push
(bad)
retf
cmps
movs
pop
add
or
cmc
pushf
daa
fsub
inc
or
cmp
cmp
dec
pop
mov
mov
adc
mov
fiadd
dec
cmp
cmp
(bad)
lods
imul
cwde
stc
dec
mov
push
push
(bad)
cwde
jbe
rcr
(bad)
xchg
push
cmp
ins
in
cmps
sbb
loopne
mov
push
jmp
add
jge
rcr
fwait
loope
neg
iret
movs
out
lds
movs
repnz
xchg
in
pop
mov
adc
aam
(bad)
add
out
fst
lahf
sahf
inc
push
cmp
cmp
pop
loope
or
jbe
into
bound
lahf
ror
data16
arpl
cs
xor
test
les
mov
test
jo
adc
push
pop
and
(bad)
pop
stc
and
mov
cmps
push
pop
into
fmul
pop
xor
jge
push
(bad)
jl
sbb
cmp
loop
aam
add
dec
dec
loopne
rol
js
lahf
out
aas
adc
out
xchg
mov
pop
mov
daa
neg
jne
(bad)
lods
jle
out
bound
sti
mov
dec
or
cmp
add
pop
mov
adc
aas
repnz
inc
xor
xchg
std
dec
mov
push
jo
ficom
mov
icebp
in
and
ror
pop
jae
cmps
push
loop
repnz
pop
je
inc
inc
inc
cmp
jmp
into
xor
inc
or
nop
cmp
and
mov
jb
scas
add
xchg
jbe
ror
shl
loop
pop
xlat
sti
mov
movs
addr16
es
movs
or
push
cmps
jmp
jbe
cs
arpl
jb
and
add
mov
(bad)
(bad)
mov
cdq
addr16
mov
and
leave
mov
jbe
sub
loop
std
push
push
xchg
pop
scas
stc
push
test
mov
cmp
data16
pop
dec
jbe
sbb
or
sub
aas
loope
lea
mov
mov
fs
xor
xor
hlt
push
cmp
arpl
sub
frstor
test
imul
mov
or
xchg
xchg
sbb
mov
push
xor
or
sub
jns
push
jg
test
pop
call
xchg
scas
test
sbb
mov
ins
inc
aad
repnz
mov
nop
nop
aas
js
(bad)
cli
push
imul
dec
push
stos
aaa
adc
(bad)
push
sahf
xor
bound
lds
lock
pop
out
scas
(bad)
(bad)
mov
push
adc
pop
dec
mov
or
adc
test
outs
in
stc
jb
jno
lea
daa
mov
std
imul
in
jno
call
cmp
dec
aad
jmp
out
mov
sbb
xchg
mov
jle
das
outs
add
xchg
mov
push
pop
(bad)
popa
jne
inc
arpl
push
jae
shl
arpl
dec
lods
add
int
pushf
inc
enter
out
nop
push
push
es
into
xchg
dec
mov
shl
adc
push
stc
sbb
inc
mov
xchg
lahf
mov
pop
int
aad
xor
push
and
push
sahf
pop
sub
cmp
sbb
inc
sub
rol
inc
xlat
mov
xchg
adc
inc
call
in
sbb
test
leave
data16
xchg
jg
mov
sbb
out
jl
xchg
std
pop
and
xchg
mov
sbb
outs
push
xlat
out
xchg
rep
inc
push
mov
in
(bad)
sub
inc
ret
mov
es
jae
stos
or
popa
(bad)
sbb
aam
mov
lahf
aas
loop
xchg
add
lods
cld
adc
and
inc
mov
add
pop
push
mov
stc
mov
aaa
inc
xchg
dec
out
push
lea
and
push
push
mov
pop
sub
or
fild
jle
shl
pusha
mul
sbb
push
dec
mov
cli
mov
cmp
inc
mov
cwde
xchg
pop
int
jo
clc
xor
(bad)
sahf
adc
sbb
out
icebp
adc
jle
mov
(bad)
rcl
push
mov
mov
dec
aas
push
cmps
lods
stc
icebp
inc
dec
dec
lahf
inc
sub
adc
pop
sub
mov
cdq
lods
dec
retf
shl
inc
mov
mov
sbb
adc
ret
mov
bound
int3
mov
in
ret
jp
pushf
gs
sbb
sbb
push
or
movs
and
int3
(bad)
out
adc
jmp
neg
ds
or
dec
push
xlat
jae
sub
lea
dec
mov
adc
jmp
cmp
sti
pop
sub
add
scas
rol
repz
das
mov
jmp
mov
mov
in
pop
ins
repz
mov
mov
cmp
aad
shl
xchg
xlat
push
retf
outs
sub
xor
daa
sub
push
rol
ins
inc
aaa
fsub
ror
pop
mov
sbb
sbb
mov
ds
pop
inc
pop
cmp
add
test
les
cdq
into
xchg
push
or
in
add
add
cmp
int
enter
cmp
sbb
push
add
ds
mov
push
test
push
ret
sub
sub
mov
in
sbb
outs
stos
mov
adc
add
not
push
fsubr
xchg
mov
fstp
sub
fild
mov
jb
jb
int3
cmps
pop
mov
mov
jle
mov
mov
bnd
movs
jb
push
and
mov
and
cmps
jbe
pop
xchg
dec
inc
je
pop
mov
imul
test
popa
cli
(bad)
fimul
nop
retf
sahf
add
inc
shl
jl
or
cmp
jge
test
test
cmps
loope
dec
or
stc
in
jmp
push
xchg
and
xchg
mov
mov
test
xchg
test
fidiv
xlat
or
aad
pop
or
gs
test
outs
sar
mov
mov
lahf
cli
and
jmp
add
inc
daa
clc
jl
xor
ret
jmp
repz
ret
or
mov
idiv
jmp
mov
retf
jle
mov
jne
jg
xchg
cmp
push
xlat
cmps
adc
jl
and
add
ins
cmp
ret
push
hlt
repz
(bad)
xor
sbb
pop
fdivp
mov
(bad)
retf
jbe
mov
cmc
push
xor
stos
push
ret
mov
es
mov
cmp
test
lahf
outs
stos
mov
scas
adc
dec
cmps
jnp
xchg
or
xchg
out
stc
and
jnp
test
jb
shr
neg
sbb
pop
ds
jbe
bound
(bad)
jmp
cmp
lods
xor
js
mov
gs
push
aaa
int3
shl
inc
mov
pop
cmc
dec
cmp
inc
jecxz
mov
xor
cmp
pop
sbb
imul
and
popa
inc
repz
sbb
daa
xchg
push
add
mov
xor
push
call
inc
stos
dec
sahf
jb
adc
and
and
xchg
fnstsw
sub
outs
add
test
sbb
lea
xor
movs
imul
pop
jg
js
cmc
fwait
and
push
das
je
or
mov
(bad)
stc
jmp
sub
out
push
repz
cmc
aas
xchg
adc
mov
mov
dec
push
movs
sub
in
cmp
or
dec
pop
movs
(bad)
fcmovne
mov
call
and
and
jb
lods
js
popa
clc
ja
jge
js
cmp
and
in
lea
test
adc
jae
xchg
or
pop
pop
movs
(bad)
mov
test
pop
cmp
push
(bad)
loopne
nop
sti
sub
retf
and
xor
call
mov
test
movs
mov
or
cmps
cdq
call
into
cwde
popf
int3
push
sbb
xor
push
retf
xor
sahf
gs
cmp
mov
daa
jae
loope
popa
xor
jg
sub
ret
jns
out
mov
clc
enter
(bad)
pushf
inc
xchg
imul
in
out
in
mov
out
push
mov
xchg
call
sti
mov
jle
pop
es
cmp
int
push
fimul
jp
jmp
lds
mov
mov
mov
idiv
dec
stc
push
and
dec
ss
cmps
mul
xor
pop
adc
pop
jnp
mov
jbe
sub
xor
xchg
test
adc
enter
aad
(bad)
cmp
ins
ss
push
and
lock
jmp
push
jge
adc
xor
jb
mov
xor
pop
mov
inc
mov
addr16
sub
(bad)
mov
mov
popf
xchg
mov
int
cli
sbb
nop
mov
shl
push
pop
sub
jno
aas
ins
(bad)
jne
sub
icebp
sub
cwde
mov
movs
int3
test
sbb
pop
inc
add
shr
addr16
sub
repnz
fnstcw
loope
cmp
push
ret
cmc
repz
lds
mov
jae
ret
inc
js
imul
ins
repnz
sub
dec
xor
jbe
push
pop
cli
sbb
xor
jge
or
mov
push
sub
sbb
sbb
sub
pop
data16
jb
fwait
les
mov
cmp
push
xchg
add
mov
jae
push
mov
mov
jmp
or
xor
cmc
mov
pop
(bad)
stos
mov
mov
jnp
dec
add
mov
aaa
loopne
mov
mov
ficomp
sbb
loopne
and
xchg
pop
repz
clc
inc
inc
sti
lds
shr
inc
loope
sub
ins
rcl
scas
clc
mov
lods
mov
xchg
cmps
sahf
and
mov
lahf
cmp
dec
jne
ror
mov
(bad)
retf
fst
xor
cs
jmp
add
dec
scas
pop
mov
push
sahf
fdiv
fs
cmps
pop
cdq
int
enter
inc
sub
inc
add
or
sbb
iret
pop
rcr
in
inc
int3
mov
out
js
push
adc
xchg
inc
jge
js
xchg
lods
mov
jb
add
mov
cmp
mov
test
imul
shl
mov
push
loopne
cli
shr
inc
stos
xor
in
xor
mov
or
xchg
sub
lds
enter
mov
test
inc
sub
vmovapd
xchg
mov
adc
dec
cdq
jae
out
add
test
loope
imul
and
jno
jl
mul
pop
ja
test
xchg
iret
imul
cwde
mov
inc
jnp
cmp
sbb
scas
and
cmp
inc
push
sbb
or
jg
and
lea
mov
sbb
sbb
xor
ss
push
sub
and
push
pop
push
cmp
xchg
dec
imul
cmp
push
nop
cmp
cmp
xchg
ja
add
xchg
addr16
les
out
pop
mov
leave
into
cmp
xor
popa
xor
daa
lock
mov
mov
jecxz
fs
call
push
daa
jnp
scas
and
jecxz
dec
fs
lea
clc
dec
mov
ins
sbb
mov
cld
enter
jle
mov
test
fcom
aaa
jg
dec
cmp
pushf
or
pop
dec
rcr
mov
jecxz
dec
and
out
pop
dec
and
cvtps2pd
mov
dec
adc
dec
inc
fsubr
mov
fs
lea
aam
(bad)
loopne
mov
pop
lods
addr16
imul
xor
and
loop
xchg
iret
or
xor
sti
ficomp
mov
xor
(bad)
(bad)
adc
les
repz
mov
in
inc
out
inc
xchg
or
cmc
ja
cmp
cmps
and
test
(bad)
pop
xchg
iret
push
mov
or
ss
repnz
enter
and
add
sub
sub
mov
pushf
sbb
adc
dec
sub
adc
xchg
jmp
sbb
sub
cwde
std
in
jge
xchg
inc
scas
sbb
and
fiadd
inc
dec
int
and
and
mov
addr16
pop
scas
sbb
pop
mov
cmp
push
cmps
mov
call
test
jp
pop
in
mov
pop
(bad)
cmps
push
into
jne
push
stos
rcl
not
cli
(bad)
stc
dec
sahf
ds
hlt
jae
pop
retf
ret
out
je
fbstp
lods
mov
or
mov
shl
psraw
les
pop
mov
mov
pop
aad
mov
sub
es
fwait
adc
sub
das
pop
mov
dec
and
sub
fidivr
pop
sbb
retf
sub
xlat
push
or
add
pop
cmp
add
add
cmp
push
xchg
xor
sub
pop
int
in
adc
clc
mov
pop
pushf
jo
push
cwde
popa
pop
pop
pop
jl
gs
push
jne
and
mov
jg
sbb
mov
movs
mov
(bad)
mov
hlt
mov
aam
stos
sub
mov
mov
cmp
retf
sub
(bad)
mov
std
mov
movs
loope
xlat
shl
ds
ret
in
pop
dec
mov
dec
lahf
in
in
and
fdiv
sub
mov
daa
sbb
push
mov
into
add
or
std
dec
cmp
cmp
or
ins
xor
iret
push
xor
mul
push
xchg
jns
std
xor
xchg
mov
(bad)
movs
pusha
mov
mov
pop
sbb
xor
pop
repz
and
ins
jmp
push
cmc
repnz
fisttp
cmp
adc
fist
(bad)
jnp
into
push
enter
lods
add
xor
fistp
or
retf
xor
mov
(bad)
cld
cld
cld
or
push
clc
retf
push
inc
sbb
in
sbb
inc
leave
sub
std
int3
mov
xchg
out
add
clc
ret
fs
aas
fs
mov
sbb
fsub
sbb
adc
inc
jns
cdq
xchg
fld
clc
lds
mov
jg
fidiv
ret
pop
pop
mov
mov
fcmovu
arpl
call
sbb
adc
jns
cmp
pop
sbb
or
int
pop
mov
adc
inc
push
sbb
sub
lods
xor
jb
stc
(bad)
xor
or
hlt
mov
int
fbld
jo
mov
adc
sbb
ja
fsubr
or
cdq
rcl
and
das
push
dec
push
(bad)
and
sub
cmps
adc
pop
lahf
sahf
clc
push
mov
out
inc
ret
stos
pop
daa
add
adc
fldcw
jno
jl
sub
hlt
das
cmps
out
fsubr
stos
arpl
pop
rcr
mov
dec
fwait
lahf
movs
xor
mov
mov
frstpm(287
xchg
and
dec
and
and
xchg
out
in
rcl
mov
enter
pop
int
rol
dec
or
fwait
mov
ss
loopne
mov
pop
test
push
add
mov
and
fdivr
stc
mov
fisub
mov
push
pop
xchg
into
hlt
nop
mov
stos
pop
test
and
fxch
stc
test
and
xchg
adc
cmp
out
add
inc
scas
dec
mov
and
jb
lods
(bad)
nop
(bad)
xchg
pop
sbb
fdivr
push
jle
jge
sub
jne
(bad)
popa
sbb
scas
sbb
(bad)
pop
adc
shl
cmps
sbb
lods
pop
xor
rcr
ror
xchg
xor
call
or
pop
ins
lock
mov
and
dec
jmp
sti
jae
movs
lods
inc
pop
in
pop
gs
xor
ret
in
iret
xchg
stos
sub
sbb
jmp
and
fwait
inc
fdivr
out
jo
nop
mov
test
push
sub
ret
adc
mov
fsubr
mov
cmp
sub
test
adc
inc
fld
lods
jne
pop
mov
dec
adc
xchg
mov
push
or
lds
sahf
add
mov
push
push
dec
jl
dec
imul
jne
add
ins
test
outs
les
(bad)
cmc
out
adc
ja
cld
mov
aas
out
jmp
aam
and
xchg
sbb
push
(bad)
cmps
cli
(bad)
pop
push
call
push
sbb
inc
mov
fisub
scas
mov
mov
jno
adc
push
inc
mov
scas
dec
and
jecxz
and
nop
data16
call
mov
cmp
mov
jmp
ins
mov
jg
jmp
add
jmp
fstp
ret
pop
sub
nop
stos
jle
xchg
sub
mov
cld
xchg
cmp
mov
mov
test
mov
aas
xchg
(bad)
push
mov
mov
mov
lahf
add
fistp
push
jb
inc
push
loopne
das
outs
bound
ins
mov
cmc
fwait
lods
sar
jle
or
cwde
add
sub
clc
fnsetpm(287
mov
ret
or
loope
test
add
xchg
bound
adc
xor
int3
cli
xchg
mov
stos
jns
aas
mov
loopne
push
and
fld
add
xchg
fdiv
stos
or
sbb
and
sbb
xor
add
das
dec
outs
ror
lods
fadd
xchg
mov
xor
shr
shl
inc
adc
jae
xor
inc
and
mov
push
stos
jmp
dec
bound
loop
pop
bnd
cmp
pop
adc
cmps
data16
(bad)
fst
nop
push
or
ret
mov
outs
xchg
loope
call
retf
rol
cs
mov
iret
push
or
push
loopne
cmovp
add
pop
jecxz
into
pop
sbb
das
retf
jnp
inc
jg
sbb
mov
and
(bad)
int
mov
mul
nop
(bad)
aas
sub
sahf
int
sub
pop
cmps
sahf
xor
xchg
out
test
arpl
idiv
jg
fisubr
mov
mov
pop
pop
add
fstp
psubusw
ret
mov
stc
aad
std
pop
popf
cmp
call
outs
xchg
and
mov
mov
cwde
pop
inc
daa
pop
dec
mov
mov
(bad)
sub
adc
mov
mov
test
add
cmp
mov
pop
cmp
xor
les
inc
aaa
cmp
cmc
aaa
data16
(bad)
das
push
rcl
int3
or
and
pop
js
add
rcr
sub
loope
fdiv
push
out
scas
mov
ins
jle
inc
push
cld
pop
cmp
sub
shl
mov
ret
sar
and
dec
es
dec
fcmovb
imul
test
idiv
add
repz
adc
jbe
cmps
adc
xchg
or
inc
in
sub
adc
pushf
aaa
mul
(bad)
adc
cmps
jns
ins
jns
pop
cmp
pop
(bad)
push
call
or
jae
xchg
gs
movs
cmps
mov
mov
enter
out
mov
test
inc
jl
adc
fild
call
aas
and
xchg
add
cld
xchg
pop
mov
push
mov
scas
adc
push
js
lea
nop
inc
ins
push
icebp
pop
dec
test
sbb
scas
mov
mov
retf
sub
dec
and
add
jp
in
dec
enter
cmp
test
js
dec
aas
jecxz
push
jns
imul
cmp
mov
sub
sbb
lahf
nop
or
out
fwait
shr
stos
sub
push
jg
push
retf
(bad)
jmp
pop
or
ret
dec
imul
mov
mov
(bad)
cmps
lahf
(bad)
div
cmps
push
add
scas
icebp
sbb
mov
sub
sbb
lods
loopne
out
sub
push
or
in
adc
mov
dec
dec
jb
sub
std
push
pop
jl
add
(bad)
pusha
popf
hlt
mov
mov
test
or
or
xchg
add
pop
scas
dec
idiv
pusha
fcmovu
mov
mov
imul
sub
push
(bad)
rcr
in
or
pop
sub
add
jb
add
outs
dec
(bad)
rol
mov
ror
pop
sti
fisubr
mov
lds
push
loop
dec
ins
stc
sbb
mov
ficom
leave
loop
int
cdq
das
mov
ret
cld
test
fadd
mov
mov
(bad)
jo
ins
push
dec
adc
fild
add
sub
mov
test
ret
loop
jmp
dec
icebp
mov
int3
xor
sbb
add
in
cmp
sbb
xchg
sti
aam
and
xor
inc
jle
or
(bad)
lods
add
in
sub
fist
sar
jo
push
dec
xchg
and
(bad)
das
cmp
and
mov
outs
pop
add
cmp
ret
hlt
pop
mov
scas
pushf
fcomip
cmp
or
xchg
jno
or
xbegin
mov
pop
cmp
lahf
mov
shl
pop
push
retf
arpl
jae
dec
jmp
adc
(bad)
or
(bad)
mov
dec
xor
mov
xchg
shl
int
or
push
mov
push
push
push
mov
mov
scas
repz
ja
std
lods
sub
movs
clc
or
rol
mov
ins
mov
mov
repnz
sahf
ret
stos
cld
std
xchg
repnz
pop
out
or
imul
xchg
cmp
mov
dec
icebp
xchg
xchg
loop
inc
lahf
cmp
daa
(bad)
jmp
out
ret
jno
ss
in
add
sbb
xchg
inc
out
mov
ret
jmp
imul
cmp
sbb
mov
repz
cli
or
jp
ins
mov
mov
ins
inc
les
adc
nop
out
dec
and
je
and
test
jnp
pop
repnz
xor
push
iret
cmp
mov
sbb
xchg
sbb
cld
loop
pop
outs
add
pop
lahf
shr
pusha
gs
xchg
jno
push
cmp
dec
mov
and
mov
retf
push
sub
sub
pushf
jo
movs
pop
mov
mov
cmc
push
clc
pop
cdq
aas
retf
pop
fnstcw
in
jmp
dec
pop
stos
push
inc
push
mov
daa
pop
fldcw
mov
lea
jmp
leave
lods
and
xlat
dec
and
mov
icebp
add
cmp
shl
popa
imul
cmp
jno
pop
xchg
pop
mov
imul
mov
adc
inc
mul
mov
retf
(bad)
and
test
fs
sub
and
popa
test
xchg
out
adc
xor
jmp
int
sub
or
daa
mov
std
jnp
push
cmp
inc
dec
sbb
es
outs
fisttp
cli
or
test
mov
add
ret
adc
das
call
hlt
test
pop
xchg
mov
dec
jae
mov
ficomp
push
push
(bad)
out
pop
repnz
cdq
icebp
das
call
pushf
xchg
(bad)
pop
jecxz
je
sub
or
arpl
mov
cdq
jne
jecxz
mov
push
nop
pop
and
or
lahf
push
imul
cmp
repnz
sbb
inc
aaa
std
inc
ror
add
jns
fs
test
lock
inc
pop
call
test
inc
xlat
ss
jg
les
fistp
jge
xchg
sub
pop
in
pop
mov
or
or
(bad)
and
jbe
push
mov
jbe
stos
hlt
in
test
not
sahf
sbb
cld
out
mov
arpl
inc
mov
jb
jge
sar
(bad)
cmp
imul
xchg
std
jge
loop
mov
adc
push
les
popa
shl
fcmovne
or
pop
(bad)
xchg
mov
test
pop
retf
cmp
call
cmps
scas
jmp
xor
sbb
sbb
repnz
or
repz
pop
or
fs
xchg
pop
icebp
or
scas
shr
jl
loopne
xchg
add
xor
jns
shr
stc
test
xchg
lahf
pop
mov
pushf
test
ja
xchg
arpl
xchg
pop
mov
movs
fmul
ins
sbb
movs
jno
adc
adc
fsubr
pop
pop
hlt
add
fadd
rcr
mov
lock
sub
outs
ret
sbb
out
pop
mov
arpl
fistp
inc
add
mov
out
mov
jg
ret
fild
jnp
lods
retf
jae
sub
pusha
nop
xchg
call
mov
aaa
jg
mov
out
xor
adc
(bad)
mov
jbe
dec
in
xchg
mov
int
out
cli
cmp
jbe
jmp
sbb
jl
push
xchg
pushf
mov
sbb
outs
xor
push
ret
sub
jle
jle
cld
jmp
in
xlat
imul
fwait
and
jl
push
adc
sbb
movs
fsub
out
mov
in
lahf
pop
(bad)
xchg
pop
add
jl
mov
jno
sbb
ror
add
sub
jmp
pop
arpl
(bad)
fdivr
dec
loope
stos
push
mov
jmp
ror
xor
add
dec
dec
popa
xchg
push
sub
xchg
hlt
mov
in
sbb
mov
inc
bound
dec
mov
sahf
in
push
xor
mov
push
dec
cmps
sbb
cbw
mov
jbe
dec
jo
mov
dec
pop
add
dec
mov
loope
iret
jmp
test
or
cmp
loope
fld
daa
push
xlat
jmp
ret
pusha
ror
iret
fsub
sub
mov
fldenv
inc
into
add
test
adc
mov
loopne
cwde
xor
push
popf
aaa
adc
ret
pop
dec
ds
(bad)
retf
scas
push
aad
and
icebp
xchg
push
inc
or
div
jno
fs
test
sub
mov
mov
cdq
mov
in
gs
rcl
cli
(bad)
xor
(bad)
fdivr
iret
test
fsub
dec
je
cmp
xor
stc
inc
mov
leave
lahf
mov
arpl
aas
std
scas
xor
les
call
cld
std
dec
xor
xchg
push
xor
dec
mov
cwde
cwde
rcr
xchg
into
and
pop
cmp
xchg
mov
push
mov
rcl
sub
pop
stos
or
adc
js
lea
xchg
and
adc
in
push
das
pop
mov
add
pop
lds
ja
jmp
pop
lea
or
dec
add
adc
cs
clc
lods
imul
mov
cmps
cmp
inc
mov
and
dec
je
and
cmp
xor
ret
mul
cdq
dec
jmp
push
adc
cmc
and
xor
enter
dec
in
mov
mov
out
pop
mov
lock
mov
and
push
imul
inc
jbe
in
out
aaa
and
test
jecxz
dec
jl
mov
hlt
pushf
js
pop
jge
call
xchg
(bad)
loope
jmp
cmps
into
sub
call
push
sub
enter
into
mov
add
lods
jo
inc
lock
jecxz
fistp
jb
or
mov
push
scas
cmp
retf
push
mov
stos
or
mov
jecxz
out
xchg
arpl
xlat
mov
jmp
sub
aas
(bad)
ins
sbb
sub
inc
stc
(bad)
dec
jp
das
int3
call
push
sbb
xchg
scas
cmp
pop
cmp
xchg
mov
call
cmp
(bad)
xor
mov
pusha
jae
rcr
mov
jle
sbb
jne
inc
adc
sti
call
sub
ror
xchg
les
in
inc
pop
mov
push
lods
xchg
pop
scas
idiv
adc
or
out
jno
shr
pop
mov
mov
(bad)
mov
inc
jge
xchg
popf
xor
mov
ds
cld
dec
jmp
movs
push
adc
mov
out
mov
and
jge
dec
xchg
std
jb
jne
xchg
and
retf
in
add
sbb
adc
sbb
retf
popf
cmp
pop
or
cmp
sub
cli
nop
and
jmp
pop
mov
fcomip
(bad)
je
ret
sti
cwde
int
lods
and
or
pop
je
cmp
out
shr
jmp
in
mov
call
pop
pop
pop
out
mov
js
push
les
sub
out
mov
dec
inc
(bad)
mov
and
fidiv
inc
xchg
in
xchg
ret
mov
jno
add
jns
lock
in
loopne
int3
sbb
cmp
adc
out
pop
jge
fnsave
lods
push
dec
arpl
pop
jbe
xor
dec
int
add
and
fist
inc
or
mov
test
jg
mov
jne
addr16
pop
repz
(bad)
fadd
int
in
push
sahf
mov
pop
mov
sub
fsubr
mov
test
dec
stos
pusha
inc
outs
ds
mov
cmp
adc
fidivr
inc
adc
stos
psrlw
call
add
add
inc
scas
adc
pusha
in
ret
sbb
fimul
imul
xchg
imul
add
mov
mov
or
add
fwait
sub
inc
add
cmps
imul
pop
jl
jmp
pop
mov
pop
sub
scas
dec
and
jno
lahf
das
add
jo
clc
(bad)
and
mov
dec
sti
jg
ins
cmp
mov
mov
pop
push
jg
test
and
dec
xchg
outs
ret
int
inc
add
popa
addr16
popa
test
es
jns
mov
retf
mov
fsubp
data16
punpcklbw
rol
lods
in
xchg
enter
(bad)
sbb
ret
fidiv
in
pop
pushf
ja
xor
test
mov
push
cmp
cmp
gs
dec
sbb
std
int3
cmp
pop
sahf
jb
sub
das
(bad)
aad
rcr
mov
lahf
test
xor
xchg
call
jmp
out
daa
fdivr
(bad)
es
mov
int
mov
adc
push
test
push
cmp
mov
and
sub
jnp
clc
push
in
fcom
jae
and
mov
push
hlt
xchg
mov
mov
aaa
xchg
ja
and
pop
ficomp
inc
cld
push
loop
out
dec
(bad)
dec
jb
imul
sub
dec
adc
add
test
int
(bad)
in
ds
xor
jl
cmps
(bad)
std
adc
iret
jae
scas
ja
lods
sti
sub
add
retf
inc
mov
pusha
add
retf
out
arpl
lock
jg
int3
cmp
xor
inc
ror
jle
mov
cmps
mov
jg
pop
sub
pop
push
jl
inc
rcl
xor
sub
lds
int
cmps
xor
sbb
inc
retf
push
and
or
mov
(bad)
mov
das
mov
in
(bad)
dec
pop
xchg
jmp
and
mov
add
fadd
xor
adc
inc
leave
imul
and
inc
jo
aad
repz
jns
pusha
aas
ja
push
je
mov
adc
or
push
ja
(bad)
std
adc
test
aam
outs
inc
stc
aam
(bad)
jl
inc
ins
inc
retf
adc
hlt
ss
xlat
add
popa
cmp
adc
pop
push
lahf
or
push
push
push
cmp
jno
test
xor
jns
rol
(bad)
jp
ja
daa
cmp
inc
(bad)
aad
and
or
ss
mov
inc
jns
push
dec
mov
mov
fistp
jg
rcr
jge
mov
nop
sub
push
inc
dec
cmp
push
ficom
(bad)
cld
mov
xor
pop
jns
fcmovbe
pop
xchg
pushf
adc
(bad)
or
dec
sub
pop
jp
or
jb
mov
mov
push
and
sub
sbb
aam
push
jno
mov
xor
aaa
div
inc
mov
sbb
inc
ds
mov
pop
mov
shr
pop
push
and
mov
xlat
sub
push
fcomi
mov
sar
push
(bad)
xchg
out
pop
add
adc
mov
movs
or
mov
sbb
mov
sbb
cwde
inc
xor
mov
pop
cmc
and
arpl
retf
sbb
loop
sub
stc
dec
jg
fwait
jo
mov
mov
sbb
gs
xchg
aad
cdq
push
xchg
in
xchg
aam
pop
aaa
pop
clc
xchg
xchg
out
sub
aas
test
or
cmp
mov
(bad)
iret
call
scas
add
in
push
loope
sub
(bad)
das
mov
(bad)
inc
(bad)
xchg
jg
or
pop
test
cld
inc
push
sbb
lock
jmp
retf
(bad)
jp
lock
inc
inc
out
cmp
lds
or
or
sti
or
jns
stc
push
lds
lea
sub
ret
adc
cmp
push
(bad)
xor
inc
int3
aad
push
repz
jp
jle
cwde
mov
sar
sbb
pop
rcl
xor
mov
cmps
or
arpl
mov
xchg
popf
dec
rcr
pop
sbb
jne
push
es
jno
stos
push
pop
jmp
loopne
adc
arpl
ins
cmp
popa
dec
test
and
popf
mov
xor
dec
shl
dec
scas
add
add
js
call
xchg
jg
in
dec
adc
dec
out
(bad)
and
xor
jecxz
lea
cmp
fst
fnstcw
sub
jmp
shl
out
xlat
pop
jmp
gs
int3
sub
pop
mov
jbe
mov
push
idiv
dec
loope
add
pop
mov
adc
jne
dec
nop
pop
add
loop
dec
push
mov
retf
jl
imul
cmp
call
data16
hlt
ss
nop
scas
jne
ja
or
mov
pavgw
xor
in
stc
mov
push
scas
std
cmp
sbb
add
or
or
dec
enter
out
cmp
xor
mov
sti
mov
mov
lea
sub
aam
or
pop
outs
out
mov
mov
and
mov
punpckhwd
data16
rcr
pop
scas
(bad)
fst
stc
xchg
data16
scas
inc
gs
aaa
jne
icebp
std
sahf
sub
sbb
lea
cs
mov
add
xor
jns
mov
add
sbb
add
push
push
push
psubusb
gs
sbb
add
ins
scas
popa
cs
movs
ret
lock
mov
cdq
xor
movs
mov
jmp
aam
lods
out
not
adc
sub
bound
mov
adc
inc
inc
(bad)
mov
pop
xchg
rcl
xor
push
out
loope
xor
jle
lea
out
pop
test
jno
scas
cwde
or
loop
xor
dec
sar
ret
ja
ja
sahf
adc
sub
xchg
xchg
stos
or
dec
xor
inc
adc
lds
add
mov
repz
pop
jae
neg
pusha
jecxz
cmpxchg
mov
popf
jp
scas
sar
xor
jo
xor
and
mov
mov
cmp
leave
mov
dec
mov
bnd
aam
mov
xor
xchg
push
out
inc
fs
or
(bad)
mov
aaa
leave
adc
xor
js
cld
adc
cmp
jno
imul
push
cli
loopne
jo
data16
jnp
dec
cdq
outs
adc
inc
cmp
repnz
sub
pusha
mov
cmp
test
(bad)
pop
and
dec
push
and
sti
add
fdiv
and
adc
pop
sbb
rol
cmp
int
jb
test
aaa
fcom
ss
outs
sbb
outs
mov
add
sub
or
push
adc
int
lahf
out
and
add
xor
pop
xor
jnp
sbb
pop
dec
push
and
mov
push
xlat
add
mov
inc
pusha
lahf
les
adc
pop
sbb
in
push
mov
sbb
jg
iret
ins
or
hlt
sub
shr
push
movs
push
mov
fstp
test
repnz
adc
aam
push
jge
scas
dec
scas
push
push
inc
daa
imul
sbb
and
sahf
test
shl
inc
test
xor
adc
jg
ficom
jmp
or
jmp
and
test
fisubr
cld
(bad)
test
sub
sub
sub
(bad)
jbe
push
into
inc
sub
push
mov
jecxz
loopne
adc
jbe
outs
pop
sbb
fs
dec
or
mov
xchg
int3
and
and
mov
mov
and
dec
mov
pop
jnp
adc
test
sbb
inc
push
fbld
push
xchg
mov
xor
call
mov
retf
jb
ds
xchg
pop
add
sub
dec
xor
mov
mov
mov
and
adc
cld
bound
mov
test
loop
xchg
scas
xchg
call
daa
jb
and
pop
jmp
inc
scas
inc
or
push
cwde
mov
mov
or
xchg
scas
inc
lods
into
mov
jnp
mov
mov
pop
push
cmp
loopne
push
ins
jne
jecxz
cmp
fwait
rol
pop
sub
jno
cli
ja
xor
(bad)
jo
sub
mov
jecxz
sbb
xchg
mov
adc
in
adc
sub
out
imul
call
scas
daa
pop
into
jne
add
push
inc
popa
ret
sub
xor
add
fisttp
rcr
mov
pop
xor
lahf
(bad)
gs
shl
or
and
mov
ret
pusha
mov
jg
adc
test
sbb
lods
cmc
data16
push
psllq
sbb
mov
mov
mov
in
out
lds
data16
or
add
not
jle
(bad)
loop
mov
dec
sbb
call
test
nop
iret
inc
out
sub
jno
jg
and
unpcklps
test
add
ds
xor
rcl
scas
push
imul
mov
out
loopne
adc
xchg
jg
inc
mov
retf
rol
mov
iret
jge
repnz
or
fdivr
loopne
ret
xor
adc
and
adc
push
cmps
push
jne
shl
test
(bad)
mov
stos
movs
popa
jnp
pushf
jecxz
outs
xchg
jmp
xchg
out
retf
icebp
in
or
sbb
loop
mov
lahf
aas
jmp
lods
jle
sar
sbb
or
aad
and
lock
or
sbb
dec
frstor
lock
pusha
rcl
stos
call
dec
cmp
sub
fwait
adc
and
mov
inc
in
push
pop
aas
adc
cmps
imul
adc
or
in
movs
out
daa
xor
dec
imul
shl
out
ss
pop
sbb
push
(bad)
jns
cmc
out
cli
cmp
pop
push
gs
rol
mov
fdivp
add
cli
mov
aad
ss
or
adc
inc
xor
xchg
pop
adc
or
jl
aam
(bad)
clc
dec
cmp
iret
push
mov
(bad)
je
sub
fisubr
in
xchg
push
iret
sub
xchg
add
xor
loopne
jmp
or
sbb
dec
out
in
cmp
shr
rcr
sub
aas
es
loop
or
mov
sti
push
inc
lds
dec
or
inc
loop
inc
leave
imul
mov
(bad)
sbb
cmp
mov
jl
(bad)
inc
inc
add
mov
mov
fs
jbe
xchg
mov
test
push
loop
mov
stc
out
cli
push
(bad)
std
out
or
sahf
(bad)
sahf
mov
and
xchg
sbb
jmp
push
in
lock
xor
cwde
push
ja
rcl
sbb
xor
add
mov
pop
retf
xor
daa
and
xor
jno
sub
push
jbe
call
sahf
and
ds
mov
jae
mov
ins
sar
sbb
cmp
imul
imul
popf
ret
or
inc
xor
or
push
icebp
jl
push
call
jnp
inc
jp
(bad)
mov
(bad)
adc
aam
push
dec
call
cwde
sbb
int
ins
or
mov
sub
je
hlt
dec
sahf
jb
fld
pop
out
xchg
popf
ret
add
add
cmp
repz
leave
cmp
adc
sub
mov
add
adc
shl
in
aad
pop
xchg
not
ret
push
int
xor
movs
fcom
lods
cmp
push
stc
dec
(bad)
push
push
pop
mov
mov
retf
mov
enter
enter
cmp
shl
inc
jb
sti
std
inc
jnp
push
mov
(bad)
inc
xor
pop
or
xchg
mov
(bad)
jmp
cdq
or
call
pop
cmp
shl
scas
not
out
mov
enter
movs
or
data16
push
xchg
pushf
sbb
mov
(bad)
sbb
(bad)
rol
mov
mov
(bad)
pop
jecxz
sub
inc
mov
mov
test
and
mov
jge
loop
aad
jmp
inc
xor
mov
test
retf
adc
mov
inc
inc
lea
inc
out
movd
mov
inc
mov
and
push
jnp
movs
pop
es
ret
fnstenv
dec
int3
jae
inc
rcr
inc
add
sub
fcmovnu
pop
mov
mov
cmps
fcom
xlat
ins
lods
outs
inc
mov
cwde
pop
jmp
push
dec
sub
mov
jmp
clc
fdivr
xchg
mov
mov
jns
std
dec
push
loop
in
push
mov
xor
cmps
pop
int3
aas
mov
mov
jle
jae
cwde
mov
push
mov
mov
out
das
mov
ror
push
cli
add
cmp
jne
dec
stc
outs
fild
mov
mov
stos
ja
adc
add
out
ins
add
jo
(bad)
jmp
outs
and
sahf
sbb
xchg
ja
jnp
retf
cmc
mov
sbb
fsubp
and
and
add
clc
in
scas
shl
sub
inc
retf
jmp
xlat
in
jne
push
xchg
bound
adc
js
btr
cmp
loop
cmc
push
in
xchg
(bad)
cmc
mov
js
and
fwait
sub
push
pop
loop
and
push
xor
mov
jno
adc
xchg
repnz
aaa
leave
fs
retf
out
jno
inc
dec
outs
ss
mov
xchg
xlat
ret
add
aas
retf
pop
popf
loop
xchg
das
push
retf
mov
fmul
mov
dec
nop
outs
aaa
jo
(bad)
sahf
mov
adc
or
sbb
mov
xor
loop
jae
sbb
mov
mov
in
lock
test
mov
and
mov
push
and
jecxz
add
add
icebp
scas
push
out
pop
stc
jo
pop
jno
icebp
cli
xchg
mov
mov
or
adc
push
popa
pusha
lds
sub
xchg
jmp
xchg
sub
push
jmp
mov
sub
mov
fisub
push
ret
aas
mov
movs
repz
dec
xor
add
mov
mov
mov
sbb
popa
fisubr
aam
cld
push
loopne
outs
adc
test
in
shr
call
adc
dec
mov
xor
dec
jle
xor
or
inc
sbb
aad
jge
mov
sub
sbb
add
repnz
(bad)
xor
shl
or
retf
shr
(bad)
aad
pop
jnp
aaa
mov
int3
or
sbb
loopne
push
movs
inc
add
ret
ror
xor
sbb
push
in
(bad)
sbb
fs
cwde
xchg
movs
repz
shl
inc
add
(bad)
nop
inc
ins
cmc
add
push
fdiv
pop
inc
push
mov
and
inc
mov
push
push
jae
cmp
jp
xchg
in
pushf
pop
ret
jp
in
mov
imul
sub
sbb
cld
ret
call
cli
outs
xchg
inc
mul
add
mov
ds
cwde
aaa
mov
pop
call
push
addr16
add
aad
and
pusha
rcr
xchg
pop
pop
fiadd
fmul
das
sbb
xlat
out
(bad)
fnstenv
test
dec
mov
inc
cdq
(bad)
repnz
pop
push
loope
and
sub
in
sub
pop
movs
cwde
fisubr
std
call
push
(bad)
and
std
leave
das
xlat
imul
icebp
cmp
jl
ja
push
jo
aam
pop
xor
lods
ficomp
jmp
xchg
inc
push
pop
mov
dec
xor
ins
inc
addr16
xchg
ins
mov
popf
mov
push
push
and
nop
jb
icebp
mov
loop
and
sbb
shl
sbb
jae
jns
push
rcr
cmp
pop
(bad)
xor
inc
ja
pop
sub
inc
cli
sub
pop
sbb
fimul
cmp
add
push
mov
fild
call
xor
xor
les
movs
fnstcw
cmp
xchg
into
data16
and
dec
sbb
jo
test
not
cmp
mov
(bad)
xlat
loop
pop
adc
jge
loope
mov
mov
out
daa
mov
cdq
call
sub
scas
test
shr
inc
pusha
push
(bad)
fcom
add
sub
mov
call
cmps
pushf
inc
aaa
jmp
stos
call
mov
xor
retf
test
jno
(bad)
mov
push
movs
inc
xchg
shl
jbe
sti
scas
call
dec
fs
mov
aad
inc
movs
(bad)
xchg
xor
scas
mov
das
out
fimul
jnp
fist
mov
pushf
repnz
mov
scas
xchg
mov
dec
movs
or
mov
in
outs
xor
cli
loopne
mov
push
imul
lahf
jnp
jne
mov
je
or
mov
inc
jle
pop
or
push
and
sar
xchg
dec
dec
adc
dec
imul
rcl
mov
jg
mov
test
in
mov
sahf
add
xchg
pusha
out
add
xchg
ja
movs
outs
test
sbb
or
jmp
dec
arpl
sub
pop
ins
jbe
jae
push
das
xor
jg
and
out
mov
and
xor
sub
mov
xchg
outs
cmps
or
mov
mov
mov
in
cmps
cmp
mov
add
mov
xchg
add
(bad)
sub
das
mov
sar
dec
mov
inc
jo
es
jecxz
add
jl
loope
pop
bound
xchg
push
rol
mov
jns
pop
addr16
fstp
and
push
(bad)
mov
loop
test
inc
mov
sbb
add
lods
adc
jg
mov
icebp
adc
jb
loope
mov
cli
inc
sar
cdq
mov
aad
adc
arpl
and
loop
and
jecxz
dec
lahf
add
jge
mov
(bad)
(bad)
(bad)
fldenv
pop
push
fstp
hlt
lods
fisttp
mov
call
add
mov
mov
ds
imul
mov
inc
mov
adc
add
lock
leave
push
jnp
push
dec
or
cmp
add
push
cmp
imul
inc
cmp
sub
pop
into
and
push
pop
push
inc
lahf
lahf
mov
push
dec
(bad)
dec
inc
or
push
mov
mov
inc
cmp
(bad)
out
mov
punpcklbw
sub
lea
sbb
sbb
mov
movs
push
mov
or
and
icebp
(bad)
popa
sub
stc
jl
adc
jmp
mov
mov
scas
xor
cld
js
mov
pusha
outs
daa
or
sub
xor
enter
jg
or
xor
dec
cmp
(bad)
sbb
popa
mov
aad
pop
dec
xchg
or
add
jg
push
and
mov
rol
or
mov
mov
push
repz
in
mov
push
arpl
push
sbb
jno
mov
push
shl
mov
xchg
jo
push
push
pop
loop
in
jecxz
xchg
pop
retf
sbb
es
pop
retf
jae
mov
adc
xchg
arpl
mov
pusha
mov
push
pop
in
wrmsr
mov
sub
xchg
in
arpl
jno
mov
or
clc
hlt
sar
mov
leave
out
mov
in
loop
mov
fidiv
mov
mov
inc
push
imul
mov
movs
mov
lahf
(bad)
cmps
cmp
pop
test
mov
rcl
inc
push
cmps
or
and
or
add
and
pusha
push
ret
pop
mov
outs
jae
loop
sub
push
mov
loopne
scas
out
and
sbb
aaa
test
mov
popf
dec
out
inc
cli
xchg
inc
xor
add
pop
xor
fwait
adc
adc
das
std
pop
int3
aaa
xlat
out
aam
xor
ret
cld
pop
fucomip
popf
jo
scas
ret
jns
lock
xchg
aaa
or
xchg
test
xlat
lahf
push
mov
jg
mul
and
scas
inc
and
inc
test
pop
hlt
lods
cmc
call
shl
mov
(bad)
std
pop
add
es
add
push
adc
ss
sub
rol
not
xor
in
add
sbb
push
xor
loopne
cmps
cmps
ret
call
(bad)
sbb
jnp
in
out
aas
fld
cs
jmp
mov
xchg
mov
inc
mov
xor
in
cmp
lds
cmp
mov
cmp
cmp
sub
push
push
cdq
xor
xchg
popa
sti
sbb
mov
fist
imul
xor
ins
mov
fldenv
inc
inc
mov
sbb
jno
lock
dec
and
pop
pop
inc
out
int
rcr
clc
jg
popa
and
iret
pushf
fisubr
icebp
add
das
jmp
sbb
pop
lods
push
nop
rol
dec
js
adc
adc
adc
movs
outs
in
push
lods
pop
fdiv
mov
jp
or
add
mov
out
jae
xchg
lds
rcr
xchg
movs
cmps
(bad)
rcr
dec
sub
lea
sub
add
cld
xchg
cmp
or
mov
test
ins
outs
xchg
scas
add
sub
jne
(bad)
into
cs
int
push
xchg
loop
xchg
aad
mov
hlt
sub
pop
push
jnp
ins
push
out
jmp
sub
int
add
retf
pop
shr
les
adc
jae
aas
sbb
xor
pop
pop
push
or
ins
scas
(bad)
sub
xchg
in
sub
sub
mov
dec
aas
add
cmps
or
lds
cmc
gs
in
pusha
cmc
mov
inc
cmp
fmul
ret
imul
jo
pop
ret
xchg
test
sub
outs
adc
int3
cmp
dec
hlt
pop
add
xchg
ficom
aaa
or
(bad)
jb
pushf
jne
adc
jmp
sub
mov
popf
ds
scas
mov
jno
out
xor
dec
fwait
and
sahf
mov
test
jo
lods
mov
test
xor
xor
pusha
sbb
outs
rol
mov
shl
add
sti
fadd
or
or
and
sbb
xor
dec
shl
mov
jb
jl
or
cmp
xchg
cmp
jmp
sahf
pop
and
out
xor
scas
hlt
cdq
cmp
ja
hlt
retf
jne
jge
jbe
test
imul
inc
cmps
add
stc
xor
or
pushf
sbb
jmp
rcr
stc
inc
mov
repnz
lods
xchg
add
add
imul
mov
add
sbb
outs
push
cmp
push
pop
mov
cmp
jo
call
dec
mov
ret
repz
mov
call
jns
sbb
fnstenv
ins
fld
xchg
sub
iret
daa
mov
mov
inc
jo
punpcklwd
out
xor
adc
out
push
sbb
enter
or
nop
(bad)
ja
in
or
arpl
xor
and
pop
shl
inc
retf
repnz
cs
xchg
inc
les
xchg
mov
les
popf
loop
mov
mov
test
xor
inc
jnp
(bad)
cmp
outs
gs
xchg
cmp
push
xchg
pop
ins
popa
sbb
push
jno
cmp
jecxz
push
sbb
xchg
inc
icebp
cmp
sbb
xchg
mov
adc
xchg
cmp
stc
clc
ror
clc
shl
add
xor
arpl
fimul
pusha
outs
out
rcr
adc
jae
xchg
mov
inc
loope
mov
and
dec
adc
pushf
mov
and
jnp
dec
and
jge
mov
pop
lahf
add
cmp
inc
scas
mov
pop
push
scas
mov
pop
pop
js
test
repnz
xor
into
test
out
cmp
push
mov
les
lahf
add
pop
not
mov
jb
daa
xor
stc
jbe
pop
pusha
pop
lds
das
adc
mov
ins
mov
fs
xor
inc
and
and
xchg
adc
nop
inc
(bad)
sti
cmps
shr
and
mov
jo
out
fcmovnu
in
push
push
inc
push
cmp
inc
test
sbb
add
out
mov
test
jmp
dec
aad
xor
adc
add
outs
aad
mov
sub
pop
popf
repnz
das
inc
mov
sbb
rcr
mov
aas
inc
shl
and
jl
dec
ja
test
or
push
fs
xor
xor
(bad)
shl
es
repnz
cmp
mov
ret
aaa
stos
lds
repnz
fldcw
xadd
pop
mov
stc
and
fisubr
mov
cld
cmp
xor
pop
inc
or
popa
out
mov
fmul
add
into
xchg
rol
scas
cmps
bound
mov
int3
and
sub
icebp
js
iret
lock
pop
xlat
mov
(bad)
lods
imul
or
shl
pusha
sbb
imul
imul
pop
rcr
ins
aad
xchg
mov
xchg
aam
dec
mov
xor
(bad)
mov
xor
xor
mov
leave
in
xor
pop
cmp
fstp
xchg
das
pop
mov
or
test
add
push
cs
fwait
push
movs
jp
dec
mov
xor
mov
iret
adc
movs
imul
push
not
lds
ss
sub
xlat
arpl
scas
fimul
xlat
mov
inc
add
sar
adc
cmps
xchg
outs
mov
(bad)
jge
dec
addr16
sbb
mov
call
out
lahf
and
pop
int3
(bad)
sub
cmc
jecxz
cmc
xchg
push
push
push
mov
ja
xchg
push
xor
es
imul
sbb
out
or
scas
iret
sub
repz
push
sbb
xor
adc
cmp
push
popa
pop
mov
in
test
ficomp
leave
pop
mov
neg
(bad)
pop
cli
in
sbb
mov
sbb
jmp
jo
aaa
test
dec
add
cmp
cmp
movs
test
bound
imul
cs
icebp
and
xchg
xchg
mov
ds
mov
std
push
dec
dec
or
cwde
push
inc
jno
or
daa
aas
sub
in
pop
cmp
xchg
mov
xchg
push
inc
std
mov
cdq
adc
jp
pop
stos
mov
and
pushf
mov
push
movs
mov
ins
sbb
in
xor
add
retf
xor
arpl
add
pop
mov
enter
enter
shl
and
inc
rol
mov
and
mov
je
sbb
jmp
xchg
out
cdq
repz
sub
or
dec
adc
xor
mov
jle
movs
test
jmp
xlat
push
repz
das
jbe
mov
sbb
inc
icebp
sbb
imul
push
loope
sub
(bad)
cmps
xor
imul
mov
mov
popa
push
or
jl
xor
inc
das
mov
sti
mov
xchg
inc
push
sbb
mov
add
sub
adc
push
sbb
and
bound
xchg
mov
out
cmp
dec
jbe
ja
bound
es
test
mov
mov
jmp
jmp
dec
adc
mov
vcvtdq2ps
test
cmp
jecxz
int
push
jb
jl
add
push
popa
dec
pop
rol
fwait
inc
and
add
or
jmp
sub
movs
jae
cmps
dec
popa
scas
hlt
loop
arpl
imul
cs
jo
adc
mov
mov
sti
lea
cmp
icebp
sbb
(bad)
jbe
in
fidiv
or
cmp
dec
inc
push
adc
repz
sbb
aaa
inc
in
mov
xchg
push
(bad)
mov
add
jbe
popf
mov
dec
or
adc
mov
xchg
push
jmp
fwait
push
test
shl
ret
push
and
cld
sbb
out
sar
cmp
sbb
test
adc
mov
jb
sub
fidiv
add
hlt
scas
leave
cmc
rol
neg
nop
jecxz
cmp
lock
lods
in
push
aam
(bad)
mov
rcl
add
xchg
repz
repnz
adc
mov
loope
adc
dec
in
clc
push
pop
xchg
inc
push
add
jmp
ret
cli
js
pop
sar
inc
sub
adc
sub
push
and
test
into
sbb
add
leave
adc
mov
or
pop
(bad)
mov
sti
mov
popa
xlat
adc
push
pop
adc
xchg
xchg
sub
stos
(bad)
cmp
ins
jnp
sahf
adc
pop
sbb
inc
dec
xor
xor
mov
leave
leave
ja
jmp
jle
loopne
push
popf
sahf
push
scas
sti
fs
loopne
jge
push
sub
pusha
jb
mov
cmp
retf
stos
in
or
int3
stos
or
push
push
loop
sub
xor
in
jecxz
aaa
fist
outs
mov
stc
sbb
jge
nop
push
mov
in
jne
shl
repnz
push
test
out
shr
and
aas
jecxz
and
sbb
out
sahf
ins
mov
add
inc
mov
daa
int
add
dec
test
mov
inc
shr
mov
add
sbb
data16
fisttp
in
sti
pop
(bad)
inc
pop
daa
fsub
pop
xchg
and
xchg
add
push
pop
ret
fcomp
cmps
xchg
push
inc
inc
sbb
and
jmp
or
mov
push
dec
call
rol
jae
div
mov
sub
cs
mov
mov
aas
pop
jb
fidiv
and
in
in
jo
push
mov
dec
xchg
mov
lock
cmp
aam
fisub
je
push
cli
nop
aam
dec
jg
jne
xlat
xchg
iret
sub
fwait
jmp
dec
dec
and
pop
out
dec
pushf
xor
mov
movs
icebp
xor
adc
push
mov
push
loope
mov
fdiv
xor
enter
cmp
mov
ret
iret
cmp
cwde
push
cmps
and
jl
mov
call
or
dec
pop
cmp
in
movs
mov
and
or
(bad)
pop
or
mul
push
add
sub
into
add
mov
movs
or
shl
sbb
xchg
jmp
add
aaa
js
adc
push
inc
mov
fcomp
lahf
repz
xor
xor
ins
stos
lahf
or
test
cmp
dec
aaa
jnp
out
mov
xchg
aas
sub
adc
cwde
pop
mov
adc
pop
mov
and
pop
xchg
mov
xchg
les
lahf
movs
adc
fisubr
pop
xchg
aaa
fld
test
adc
fbld
(bad)
and
test
fiadd
mov
imul
cmps
dec
aad
loope
xchg
adc
jmp
mov
mov
inc
scas
pop
jmp
sub
adc
repz
pop
and
fwait
arpl
pushf
pushf
push
mov
dec
inc
cmp
cmp
mov
push
scas
hlt
(bad)
in
sbb
inc
fs
mov
dec
pop
dec
mov
out
jl
popa
fild
popa
or
lods
push
mov
xchg
cmp
xchg
dec
mov
push
inc
sbb
mov
hlt
imul
sub
ss
int
stos
jle
neg
test
jmp
and
mov
mov
bound
retf
int
repnz
out
sbb
clc
int3
call
aas
mov
cmp
add
jbe
xor
cs
retf
dec
inc
jns
outs
aad
(bad)
div
ret
aam
sbb
lahf
imul
shr
fldcw
jnp
jl
addr16
pusha
mov
ror
cmps
push
jge
jno
mov
mov
or
iret
add
cmps
lods
ss
sbb
stc
pop
lea
push
jne
push
mov
loopne
jbe
mov
adc
mov
enter
xchg
jg
cmp
jmp
sti
jmp
lahf
popf
xchg
or
jns
and
mov
or
jo
(bad)
push
cmc
adc
shl
movs
stc
repnz
mov
out
in
out
iret
movs
cli
or
sbb
push
mov
loop
cwde
clc
addr16
xor
mov
or
(bad)
ja
out
mov
jns
or
cmp
test
jae
outs
cmp
or
sub
jmp
fbld
clc
hlt
cmp
fiadd
stos
out
inc
xchg
loop
sbb
xchg
in
add
push
test
adc
scas
cmp
jnp
and
loopne
lahf
inc
out
dec
pusha
mov
and
jmp
dec
push
(bad)
jo
and
dec
inc
cmp
inc
ins
adc
cmp
xchg
pop
mov
pop
mov
push
or
push
in
and
and
sub
or
lahf
mov
(bad)
in
inc
push
jmp
call
jb
add
fpatan
rcl
popa
dec
xor
es
in
xor
inc
mov
mov
aaa
pop
hlt
mov
int
repz
sub
mov
test
or
pusha
xchg
cmp
xchg
gs
in
call
jecxz
into
pop
and
or
lock
(bad)
lods
hlt
xor
imul
sti
push
enter
and
inc
pop
lods
jl
dec
rol
dec
sub
mov
icebp
jg
icebp
inc
int3
dec
call
dec
jmp
in
cli
mov
aam
js
data16
imul
jnp
shl
xchg
ins
cmp
ret
icebp
cli
dec
jp
lods
inc
mov
(bad)
jmp
shr
jge
arpl
ret
xor
test
lock
mov
(bad)
ins
nop
add
dec
dec
push
dec
loop
jae
(bad)
pop
xor
mov
cmps
loope
xchg
retf
cmp
inc
xchg
aad
inc
cmp
mov
mov
add
xor
pop
icebp
mov
push
imul
jb
aam
mov
cmp
dec
push
imul
cmps
mov
sbb
cli
icebp
fnstenv
mov
es
cmps
pop
into
fimul
xor
jne
fst
jecxz
jne
inc
int3
in
loop
rol
mov
leave
pop
aas
inc
sub
inc
sbb
or
push
inc
ret
dec
and
bound
sbb
movs
ret
(bad)
adc
mov
xor
mov
mov
jg
scas
call
dec
test
out
ja
loope
(bad)
(bad)
scas
or
push
sub
ret
call
pop
popf
dec
mov
test
adc
daa
cld
ret
fs
call
aad
and
jmp
xor
(bad)
adc
fild
jnp
gs
cdq
gs
add
sti
ja
xchg
pusha
xchg
pop
dec
stos
js
xor
pop
xchg
add
add
cmp
enter
es
int
ficom
push
push
movs
inc
mov
fbld
jno
jmp
xor
into
ror
fld
cmp
nop
fisttp
and
call
jno
out
xlat
hlt
xchg
adc
outs
xor
mov
rcr
test
int
jne
data16
dec
fs
test
sbb
ja
cmc
jg
js
add
adc
scas
(bad)
and
mov
jbe
mov
inc
in
jl
jb
sub
mov
out
jg
inc
int3
call
cmp
(bad)
sbb
mov
push
sar
jb
cmp
push
push
js
int3
(bad)
xchg
data16
inc
call
jo
jae
xchg
std
or
mov
mov
pop
fnsave
loop
adc
cmp
add
into
and
push
mov
movs
lods
push
shl
lds
retf
add
call
inc
enter
call
outs
sub
std
ret
cmp
imul
xor
mov
ds
cwde
jbe
jle
stc
mov
sbb
push
loope
(bad)
ds
cmps
sbb
lods
(bad)
sub
ja
dec
inc
or
push
out
stos
rcr
test
out
rol
inc
push
dec
mov
icebp
scas
jmp
cmps
out
mov
ins
cmp
cmp
dec
outs
pop
mov
mul
inc
fnstsw
aam
xlat
inc
bound
cmp
outs
add
cmps
mov
aaa
lods
mov
jb
inc
push
push
mov
outs
test
gs
(bad)
aas
(bad)
call
sbb
neg
mov
or
jmp
pop
push
push
sbb
mov
aaa
xor
jg
pop
out
mul
cmp
sbb
jae
aas
(bad)
out
pop
pop
push
sbb
nop
cmp
mov
cmps
not
jb
sub
imul
fcomp
retf
mov
xchg
cmp
push
pusha
mov
sub
jecxz
sahf
pushf
in
in
arpl
xchg
fcom
jbe
out
or
jne
mov
ret
stc
pop
(bad)
mov
push
outs
retf
mov
(bad)
mov
jge
dec
adc
mov
mov
popa
sbb
cmp
and
movs
xchg
jb
adc
sbb
repz
lahf
cdq
xor
call
mov
cmps
das
push
jno
xlat
xchg
mov
pop
aam
and
(bad)
cmps
(bad)
aad
dec
in
sub
fwait
jbe
mov
mov
nop
mov
dec
test
mov
call
in
popf
sbb
sbb
push
adc
add
or
fld
popf
pushf
icebp
mov
das
or
lods
xor
jae
xor
or
mul
jne
bound
adc
pop
add
jbe
xchg
das
pusha
das
cli
call
sbb
sbb
clc
add
cmovge
sahf
(bad)
jae
sub
cli
fs
out
lods
aas
jle
push
ret
push
call
dec
and
adc
xor
ins
icebp
inc
jge
scas
jns
mov
xchg
ficom
pop
outs
(bad)
rol
bound
adc
stos
jae
sar
push
sbb
mov
imul
jmp
pop
xchg
sub
cmp
cmc
xor
out
sub
retf
jecxz
bound
aas
cmp
or
add
fild
in
jecxz
fwait
imul
or
sti
xchg
scas
mov
(bad)
xchg
sbb
adc
and
mov
xchg
movs
popf
xor
mov
mov
cld
pop
lahf
fdiv
push
scas
sub
inc
dec
clc
pusha
icebp
and
hlt
into
bound
lds
pusha
mov
data16
or
push
mov
mov
cmp
and
push
dec
xchg
push
push
sbb
inc
cmps
cli
fcom
mul
outs
pop
dec
sub
jg
mov
add
pusha
stos
les
add
enter
xor
div
std
inc
stc
ss
xor
std
mov
repnz
movs
ja
cdq
mov
inc
mov
mov
sub
ins
clc
mov
xchg
int3
outs
adc
lods
adc
movaps
dec
sub
mov
fstp
xchg
stc
push
mov
cld
push
push
aam
mov
fmul
or
sbb
fsub
xchg
and
jb
js
cmp
and
add
jne
and
jne
aas
inc
das
jp
in
fisttp
inc
mov
ret
pop
lods
loopne
add
sub
sbb
cld
push
cli
and
cwde
daa
push
outs
sar
loopne
push
aaa
pop
scas
enter
stos
idiv
enter
fmul
jb
push
or
loope
or
xor
xor
jp
repnz
and
test
push
push
fmul
lock
xchg
imul
ret
shr
fpatan
cmp
outs
fucom
out
pop
aad
ret
lock
pop
pop
dec
out
mov
mov
or
add
cmps
outs
stos
addr16
cdq
pop
(bad)
adc
setno
fsubr
in
in
mov
sbb
push
in
punpckhbw
or
addr16
in
test
aam
scas
mov
(bad)
ds
rol
mov
retf
pop
aad
or
mov
jl
out
cmc
aaa
fiadd
or
aaa
inc
lea
sar
and
pop
sub
inc
or
sub
(bad)
cs
or
cmps
call
push
and
jne
jnp
mov
cmp
ficomp
out
mov
add
data16
inc
fild
cmps
add
mov
xor
jl
mov
xchg
push
call
lea
dec
out
(bad)
or
adc
mov
fucom
xlat
jecxz
std
(bad)
jge
xor
adc
test
shl
and
cld
cmp
sar
cmp
inc
push
ds
xor
xchg
sbb
push
dec
dec
xor
nop
dec
xor
in
adc
icebp
sub
mov
fcos
cmps
push
xor
mov
pop
sbb
fcomi
push
jge
cs
or
adc
cmp
inc
test
fistp
(bad)
loop
fistp
mov
mov
mov
das
mov
mov
or
pop
pop
bound
dec
fs
outs
imul
mov
scas
jb
adc
cdq
jl
inc
icebp
out
xchg
loope
movs
adc
cmp
sbb
ins
mov
stos
xor
(bad)
stos
dec
out
in
bound
movs
xchg
lds
mov
xor
outs
inc
test
jl
not
mov
inc
cdq
stos
pop
in
push
out
pop
test
xor
jo
adc
cld
xor
adc
xor
test
and
and
adc
mov
mov
imul
xor
mov
jl
add
gs
fwait
pop
push
jp
adc
clc
ficomp
aad
xchg
repnz
cmp
aaa
fmulp
pop
in
inc
mov
mov
xchg
xchg
or
mov
inc
ja
icebp
daa
jmp
pop
(bad)
jecxz
push
cs
xor
mov
jne
ficomp
jg
jmp
div
stos
sub
fsub
loop
test
es
inc
test
sbb
pop
not
and
out
std
jle
or
cmp
test
sbb
sub
xor
xor
ror
sbb
out
stos
jle
and
mov
push
fsub
clc
sub
call
xlat
cmps
mov
xor
icebp
mov
inc
sahf
repnz
inc
jmp
ins
shl
pop
add
jno
mov
push
dec
iret
fwait
iret
aam
pop
add
dec
lahf
stc
sub
leave
movs
cmp
mov
and
push
push
jle
popf
or
aaa
or
rcr
js
lock
xor
and
repz
dec
rcl
jl
mov
pusha
sub
into
(bad)
xchg
jnp
adc
cs
cmc
jnp
mov
imul
jecxz
xchg
sbb
pushf
inc
push
mov
clc
fbstp
(bad)
(bad)
sub
pop
dec
fild
call
pusha
fdivrp
add
and
or
loop
dec
xor
ins
xor
adc
call
mov
pop
(bad)
pop
(bad)
jno
jnp
mov
cdq
dec
mov
add
mov
aad
out
iret
popf
xor
jo
adc
ret
aaa
out
imul
iret
adc
xor
jno
add
retf
xchg
sub
enter
out
dec
cwde
dec
loopne
ret
dec
inc
cmp
lds
not
lods
fsub
or
jmp
pop
dec
call
push
imul
cmp
xchg
fistp
mov
adc
inc
xchg
xchg
xor
or
push
lock
push
mov
fs
cwde
xchg
mov
ret
jnp
test
adc
je
xor
jnp
xor
jmp
shl
jge
cmp
in
in
retf
dec
sbb
into
movs
jbe
sub
out
inc
inc
popf
mov
icebp
cmp
and
fnstenv
aad
out
imul
imul
cld
xor
cmp
xchg
loopne
sub
fmulp
rol
xchg
add
call
stos
mov
add
mov
imul
dec
mov
out
pop
mov
sbb
mov
retf
xchg
xor
cmp
sbb
in
lahf
dec
das
jbe
enter
pop
mov
xor
mov
and
in
loopne
push
dec
gs
mov
call
(bad)
sbb
or
mov
mov
aaa
push
mov
cld
dec
aam
xor
pushf
push
imul
int
loope
aaa
dec
jmp
and
dec
push
daa
jge
rol
loop
in
ss
mov
(bad)
fldenv
addr16
mov
push
mov
mov
add
mov
xlat
(bad)
stos
xchg
int3
lods
and
push
call
jno
pop
or
xchg
mov
mov
cmc
frstor
rcr
xchg
mov
push
iret
xor
out
retf
lock
jmp
test
out
mov
popf
push
push
ins
test
sbb
call
out
dec
jns
xor
(bad)
mov
and
stos
aad
rcr
adc
loope
cld
cmp
jg
mov
scas
into
ret
or
call
jmp
(bad)
mov
push
jae
jmp
out
adc
out
cmp
cwde
xchg
and
or
ins
xchg
lea
mov
jge
mov
cmp
push
mov
rcl
cmp
fiadd
stos
mov
outs
js
mov
popa
mov
shl
test
cmp
pushf
retf
fstcw
push
or
jmp
jmp
leave
call
je
and
inc
add
pop
jl
les
lea
adc
test
or
jb
retf
imul
jge
mov
retf
xor
adc
scas
push
jmp
lods
aad
and
repz
pop
lds
std
lock
icebp
pop
xlat
ret
xor
sub
jo
out
clc
add
addr16
cmp
cdq
cmp
out
lea
lock
leave
clc
xor
aaa
movs
mov
sub
xor
lea
mov
nop
ja
jns
adc
stos
lods
inc
popa
retf
mov
mov
lods
adc
mov
ror
mov
stos
test
test
mov
leave
and
cmps
in
sbb
imul
sub
adc
test
pop
pop
xchg
cmps
xchg
mov
push
adc
test
cmp
shl
loope
dec
in
outs
xor
loopne
adc
and
xor
imul
fdivr
stos
xchg
arpl
xor
imul
push
mov
xlat
push
sbb
pop
pop
and
adc
jbe
dec
xor
dec
mov
std
call
add
inc
sbb
enter
add
xor
mov
lods
and
jae
ror
mov
shl
fwait
add
popf
xchg
lea
jge
js
inc
dec
mov
retf
cwde
and
fild
lahf
repnz
ins
lds
popa
add
retf
out
push
mov
(bad)
cmp
pop
cld
xchg
jecxz
xchg
cmp
cmp
mov
jl
adc
jle
imul
(bad)
inc
inc
mov
xchg
adc
add
mov
fs
cmc
je
or
je
lahf
jae
es
add
addr16
jmp
call
jae
out
leave
out
loopne
pushf
test
push
and
inc
dec
leave
test
adc
xchg
daa
jae
jecxz
fild
fistp
(bad)
pop
inc
(bad)
adc
sub
push
adc
les
push
ja
fs
test
pop
sub
aas
ss
into
(bad)
in
mov
mul
sub
lahf
push
or
mov
cmps
pop
lods
or
add
sbb
dec
add
and
out
sub
ror
jmp
inc
pop
xchg
data16
cmps
push
push
xchg
rcr
and
movs
mov
inc
scas
inc
das
sub
jl
cmps
pop
enter
pop
cli
dec
ja
imul
(bad)
ja
cmps
mov
push
hlt
gs
(bad)
fwait
outs
jne
inc
cwde
mov
outs
and
or
sub
out
pop
dec
sub
push
mov
aas
pop
jmp
int3
or
aas
test
nop
mov
jae
test
imul
or
in
push
mov
in
out
movs
mov
stos
adc
inc
cmp
pcmpgtb
or
mov
stc
cmp
stos
bound
aas
mov
test
mov
mov
leave
pop
shl
sbb
inc
out
xchg
movs
cmp
aam
imul
lea
pop
into
dec
in
leave
add
retf
pop
cmp
sahf
ret
pop
in
and
out
and
rcr
jg
sti
arpl
scas
cdq
push
pop
inc
mov
pop
inc
xor
jmp
adc
(bad)
cmps
mov
lods
out
test
push
pop
sahf
je
mov
adc
push
sbb
jns
icebp
push
ds
gs
xchg
cld
sub
pop
(bad)
adc
sub
sub
stos
jmp
add
fidivr
ror
pop
jno
fcmovnu
sub
jl
fsubp
inc
dec
in
lock
mov
xchg
in
cmc
retf
push
dec
cs
push
imul
call
and
cmp
int
ds
ficom
data16
sub
dec
or
out
into
inc
or
inc
sbb
js
fwait
push
mov
(bad)
and
sbb
cmp
int3
dec
lahf
push
pop
dec
xor
xchg
mov
dec
inc
sbb
mov
adc
sbb
inc
fwait
lea
jp
cmp
outs
fnsave
pop
and
leave
inc
addr16
(bad)
xor
dec
out
jp
retf
or
mov
adc
ins
pop
stos
jae
inc
ret
imul
scas
out
pop
dec
daa
outs
shl
ins
in
push
mov
jae
int
mov
es
cmpxchg
(bad)
xor
xchg
adc
xchg
fs
and
aad
or
jecxz
push
inc
jb
je
pop
xchg
shl
mov
dec
cmps
pop
fld
cld
cli
and
xor
or
or
cmp
cmp
mov
mov
data16
sti
(bad)
jmp
rcl
xchg
std
mov
cld
in
and
cmp
lgs
addr16
jbe
cs
cdq
jns
xor
shl
push
ins
jae
sub
sbb
jmp
add
cmps
int
loopne
loop
mov
mov
imul
adc
xchg
or
sbb
and
pushf
sub
popa
leave
mov
sbb
pop
test
loope
clc
retf
push
ins
rol
jns
and
rcl
inc
div
aad
jne
out
fdivr
outs
in
jmp
jmp
lahf
add
jno
cwde
fdivr
or
and
retf
jge
and
inc
scas
data16
ins
repnz
cdq
aam
mov
js
into
hlt
enter
push
sbb
mov
push
xchg
push
popa
push
pop
(bad)
dec
cmp
pop
rol
push
pop
aam
cmp
cmp
ficom
jle
xchg
in
rol
loop
mov
jg
jne
mov
xor
mov
jecxz
inc
lods
inc
lock
arpl
test
xchg
xchg
jbe
adc
sub
and
jg
inc
pop
pushf
mov
ficom
jnp
aaa
movs
js
xchg
and
sub
idiv
call
pop
retf
ror
jp
fidiv
ds
sbb
pop
cmp
(bad)
sub
and
es
push
sub
push
movs
(bad)
fsubr
and
cmps
jl
std
mov
or
outs
adc
ds
cdq
inc
jnp
jge
cmps
pusha
sub
cld
sub
sbb
push
push
xor
sub
pop
xor
pop
jecxz
inc
js
pop
jp
xchg
xor
mov
(bad)
pop
shl
cli
daa
xor
dec
cmp
lods
mov
inc
les
mov
xchg
in
add
outs
outs
xor
sub
pusha
xchg
retf
js
fimul
mov
jae
loop
cdq
imul
pop
outs
stos
jl
adc
pop
dec
mov
retf
and
retf
xor
rcr
push
in
mov
xchg
ror
adc
sub
adc
or
fist
in
cwde
mov
ficom
dec
or
lahf
mov
adc
imul
sub
cmps
(bad)
retf
push
push
lea
inc
stos
aad
adc
ficom
cdq
das
jns
int
and
fwait
lods
dec
cmp
inc
hlt
cli
popa
jl
mov
adc
adc
call
stc
adc
(bad)
pop
add
xchg
inc
pop
test
(bad)
pop
sbb
push
mov
mov
xor
popf
jl
sbb
hlt
je
jne
mov
fcmovu
out
vphaddwd
jb
jno
jmp
(bad)
repz
aaa
pop
fsub
pop
pop
dec
mov
xchg
fisub
add
xchg
sub
pop
push
iret
mov
pusha
(bad)
xor
or
(bad)
clc
xchg
sub
jnp
movs
dec
push
je
jmp
cmps
stos
cmp
sub
fs
sub
repz
push
cmp
jecxz
add
mov
mov
out
fnstenv
xchg
push
ror
push
rol
retf
xchg
gs
inc
sub
rcl
aad
lods
loopne
cmp
jns
xchg
pushf
rcr
add
jns
lds
add
ja
fcom
adc
pop
call
add
sbb
data16
mov
test
push
push
add
jcxz
nop
(bad)
(bad)
loop
fucomip
repnz
pop
out
test
(bad)
push
fwait
mov
jne
in
test
jmp
lods
ficomp
scas
adc
jge
push
and
cmp
(bad)
rol
adc
cwde
fld
les
and
inc
or
(bad)
mov
mov
push
pop
leave
inc
adc
addr16
sub
les
adc
(bad)
in
ror
jp
xor
jo
inc
dec
or
mov
mov
ja
sbb
bnd
sub
or
mov
out
or
push
adc
push
mov
xchg
and
dec
rcl
mov
daa
cmps
test
cmp
outs
push
retf
mov
fwait
sub
aas
out
sub
call
adc
cld
xchg
jmp
test
jnp
mov
cmps
push
adc
stos
xchg
mov
test
sbb
dec
rol
fwait
stos
fdiv
das
call
ja
test
cmps
add
mov
dec
cmps
adc
adc
ss
adc
pop
shl
jae
cmp
loop
scas
or
cdq
sahf
pop
xor
jnp
adc
push
cld
ins
cmps
inc
aad
(bad)
xchg
sti
jmp
xor
pushf
mov
adc
dec
(bad)
call
ss
pop
push
jbe
mov
push
loop
ss
and
mov
xlat
xor
adc
pop
fsubr
jge
iret
lahf
mov
or
lds
test
xchg
mov
ds
inc
cmp
shl
dec
hlt
mov
out
enter
jmp
test
pop
(bad)
adc
mov
mov
inc
test
fld
cmp
stos
push
jno
mov
xchg
pop
cwde
xchg
or
mov
sbb
enter
jmp
in
jmp
xchg
fsub
mov
sbb
popf
push
inc
xor
add
mov
mov
iret
aad
adc
test
or
hlt
jmp
pop
daa
pop
les
repz
movs
mov
cmp
js
fdivr
jb
es
xchg
iret
adc
mov
dec
mov
mov
mov
fs
adc
add
cmp
cld
cmp
add
xor
adc
movs
pop
pop
jae
leave
ror
xchg
js
dec
xchg
adc
dec
retf
je
or
sbb
xlat
std
jmp
call
nop
add
mov
xor
push
out
lea
pop
fdivr
xor
cmps
js
xor
mov
mov
leave
add
jbe
mov
add
xchg
pop
loopne
inc
dec
inc
mov
xor
mov
out
out
mov
lds
push
push
or
xchg
cmp
je
mov
call
bsr
and
xchg
inc
mov
cmp
shr
xchg
xchg
shl
and
add
in
push
pop
fnstenv
outs
iret
sub
loopne
test
es
mov
test
fucom
pop
cld
push
xor
inc
xchg
sti
mov
or
jl
lods
and
std
dec
sbb
mov
mov
(bad)
jl
cs
rol
add
cwde
cmp
imul
add
jge
nop
or
mov
movs
ficomp
icebp
outs
nop
or
aas
xor
clc
jmp
cmps
mov
sbb
xor
popa
sbb
xor
stos
dec
xor
dec
push
cld
xchg
push
ss
iret
push
add
loope
inc
test
jmp
test
xor
jb
bound
outs
push
fcmove
pop
mov
dec
mov
sar
dec
mov
dec
xchg
push
adc
inc
bnd
inc
push
mov
push
sti
pop
mov
and
int3
enter
jbe
push
fcomp
aad
call
dec
and
jg
out
rcl
mov
out
inc
(bad)
retf
and
es
sub
xchg
enter
dec
mov
mov
xchg
sahf
push
dec
push
ss
mov
and
aas
push
jno
stos
pushf
ja
fcom
inc
fs
mov
jb
ret
add
mov
mov
mov
pusha
xchg
push
scas
fdivr
xchg
dec
dec
out
je
fisubr
out
adc
pop
xchg
jne
retf
or
pusha
inc
scas
add
dec
fistp
daa
xchg
or
leave
(bad)
adc
or
push
xchg
stc
jnp
xor
or
aam
pusha
dec
popa
dec
and
pop
cmp
mov
fs
mov
mov
xor
inc
dec
inc
lods
pop
mov
mov
or
sbb
xor
sub
mov
aad
das
outs
xchg
sbb
jmp
xor
sub
mov
xor
mov
(bad)
(bad)
fist
add
adc
mov
sti
cld
out
out
aad
loopne
sahf
mov
mov
imul
jl
repz
xchg
mov
jmp
int
pusha
iret
add
xchg
fmul
xor
int3
dec
retf
lea
aad
mov
ffree
pop
pushf
inc
xchg
(bad)
std
jl
adc
test
xor
lds
aad
pop
xor
out
ins
nop
or
scas
aad
in
xchg
xor
cmps
add
imul
sti
sub
xor
sub
cmp
popa
pop
vphaddbd
out
sub
cmp
ja
stc
ja
push
mov
shr
movs
out
ficom
cli
pop
iret
outs
sub
mov
retf
add
in
lods
xchg
sahf
jmp
or
movs
pop
fisubr
xor
mov
xlat
test
mov
sub
lds
mov
ret
mov
call
xadd
mov
ficomp
(bad)
and
or
and
push
aas
sbb
aas
add
in
add
jge
xor
shr
mov
movs
push
and
sub
ins
dec
adc
push
cmp
lods
pop
jne
sbb
and
adc
push
inc
(bad)
scas
stc
mov
fs
adc
cmp
stos
(bad)
xor
loope
call
xor
(bad)
movs
add
mov
pop
stos
inc
cmps
inc
jno
aaa
xor
popa
arpl
ja
outs
sub
sub
push
inc
mul
lock
sub
in
enter
jl
adc
mov
shl
inc
out
jmp
sbb
in
imul
sub
test
add
loop
adc
sub
sub
addr16
(bad)
cmc
daa
rcl
outs
or
push
pop
fbld
mov
les
popf
dec
push
mov
cmp
sub
xor
imul
mov
popf
mov
(bad)
in
inc
mov
in
movs
mov
push
test
inc
hlt
sub
push
shl
mov
fwait
and
(bad)
arpl
or
sbb
jl
xchg
loopne
mov
(bad)
adc
es
xor
cmp
popa
xchg
push
in
inc
or
pop
and
outs
dec
xor
call
in
ret
stc
xchg
sbb
les
ror
cmp
mov
daa
and
mov
or
iret
(bad)
repz
test
mov
fist
mov
cdq
push
pop
inc
scas
addr16
nop
adc
imul
jbe
xor
addr16
dec
mov
enter
ins
push
mov
push
call
cmp
cs
shl
js
mov
retf
gs
push
adc
sqrtps
pop
ror
pop
loop
mov
jg
(bad)
shr
xor
ins
cli
loope
push
aaa
cmp
jo
fiadd
loop
in
mov
dec
in
xor
bound
xor
fisttp
sbb
cmc
jno
ss
xor
aaa
aad
stos
cmovno
push
or
jbe
and
movs
mov
mov
(bad)
shl
jecxz
test
push
dec
out
mov
adc
jp
into
sti
jp
rcl
std
xchg
mov
stc
iret
jl
or
outs
fisttp
mov
test
outs
adc
jmp
or
je
cmp
and
pop
push
pop
dec
mov
cmp
rol
mov
mov
push
gs
enter
imul
pop
es
in
fs
cs
mov
shl
mov
and
lea
aas
push
fdivp
sbb
cmp
cld
ins
repnz
jle
sbb
shl
mov
jae
jmp
pop
fimul
add
jle
mov
push
repz
mul
imul
and
addr16
add
cmp
js
ins
mov
imul
fiadd
xor
bound
dec
repz
xor
sub
rcl
cmp
jnp
push
xchg
popa
je
dec
lods
icebp
nop
xchg
bound
sbb
cmp
cwde
and
sub
xor
jo
imul
jb
dec
ret
jecxz
dec
cmps
adc
out
(bad)
and
jge
mov
adc
rcl
push
dec
retf
out
fdivr
dec
inc
es
pop
push
test
call
pop
cmp
ficom
fs
xor
mov
leave
add
dec
clc
sbb
aad
cmp
data16
fdivr
ins
add
cmp
mov
mov
fs
cmp
xor
mov
push
inc
dec
call
mov
aam
or
pop
inc
pop
(bad)
mul
dec
les
mov
sub
mov
add
lahf
push
sti
lock
je
sbb
loopne
loopne
mov
icebp
xor
(bad)
xchg
js
adc
inc
xlat
in
add
push
cmp
in
inc
sbb
inc
rcr
dec
sar
fist
and
mov
(bad)
pop
cli
nop
out
pusha
je
mov
adc
push
or
sub
push
es
frstor
push
(bad)
ficom
push
fadd
ds
pushf
jmp
fwait
cld
call
and
push
stos
push
jmp
jbe
data16
pop
pop
sub
pop
test
out
popa
mov
mov
mov
push
jbe
enter
xchg
or
test
mov
push
loop
fdivrp
aaa
inc
(bad)
jle
stos
das
leave
and
aas
pop
xchg
test
lods
ins
sbb
sub
add
inc
push
pop
adc
jmp
xor
mov
and
dec
mov
aaa
sar
xchg
in
pop
sub
fnstenv
xchg
pushf
inc
or
pop
shr
cmp
clc
jmp
or
movs
aaa
mov
test
sub
xor
not
mov
push
xor
add
popf
test
jmp
ins
loope
fs
inc
fmul
pop
mov
idiv
mov
mov
retf
push
push
popa
and
mov
add
das
scas
xor
cmc
xor
push
int
fld
mov
inc
mov
mov
ds
out
cmps
inc
add
lods
lahf
rol
mov
mov
xor
out
jge
xchg
mov
into
ror
jbe
pop
pop
push
sbb
mov
pop
dec
push
aaa
or
cmp
leave
ret
mov
outs
mov
call
sar
adc
outs
and
ds
pop
cmps
add
ficom
mov
daa
retf
jbe
jnp
cld
jo
add
jns
or
sub
js
mov
gs
jg
push
dec
and
dec
fs
pop
xchg
in
sbb
fs
mov
ins
fdivr
inc
and
or
aas
shr
push
daa
ret
mov
out
push
sahf
arpl
mov
(bad)
out
ins
jae
popf
dec
xor
xlat
ds
sub
loope
push
bound
cmp
xor
les
daa
ja
stos
dec
cmp
sahf
sub
inc
hlt
xchg
(bad)
rol
(bad)
rol
fidivr
add
rcl
cmp
fisub
addr16
(bad)
out
push
out
mov
mov
outs
lods
cld
mov
cmp
arpl
mov
jmp
inc
push
fldcw
test
es
fisub
pusha
sti
sbb
push
mov
test
add
(bad)
test
(bad)
cmp
and
mov
dec
add
push
jecxz
ret
add
add
sub
retf
cdq
cmp
mov
adc
pop
in
push
int3
not
cmp
cmc
adc
cmp
mov
adc
(bad)
sbb
inc
add
ss
push
icebp
(bad)
retf
jo
jnp
xchg
mov
mov
cmp
je
std
imul
pusha
repnz
or
or
shl
jo
pop
sub
mov
leave
mov
movs
inc
addr16
dec
sub
add
out
pop
fdiv
lea
cmovge
out
and
lock
adc
(bad)
pop
(bad)
out
aaa
clc
enter
pop
cdq
mov
push
or
rol
sbb
stc
sub
and
push
lods
repnz
mov
movs
fdivr
pop
jns
ins
je
lds
and
jmp
jbe
rol
adc
rcl
aam
xor
adc
lods
pop
int3
std
repz
sar
and
fsubr
mov
in
push
aas
sub
jo
rol
das
push
in
inc
ja
iret
fisttp
mov
sub
out
xchg
xchg
dec
xchg
add
mov
rcr
mov
bound
inc
je
scas
xchg
mov
aad
xor
test
jno
loop
daa
pop
es
dec
cmp
add
mov
lods
psubq
inc
jp
and
inc
out
mov
cmp
xor
sahf
push
xchg
jg
shl
push
add
and
xchg
test
xlat
xchg
je
jp
in
mov
leave
fcomip
push
dec
movups
pop
mov
adc
or
add
or
popa
inc
adc
pop
mov
fisttp
into
or
stc
test
mov
mov
jmp
into
aad
mov
outs
pop
outs
out
dec
adc
mov
mov
xor
ret
jg
ds
enter
ret
mov
mov
inc
cmc
cmps
xchg
jae
sbb
sub
div
inc
sbb
mov
xlat
mov
mov
in
mov
xor
movs
mov
inc
pop
xchg
and
loopne
mov
jp
xchg
push
pusha
xor
jbe
sub
adc
fsub
push
je
push
(bad)
stc
mov
ins
cmp
js
daa
pop
shl
popa
test
popf
in
cmp
je
lea
and
gs
add
mov
pop
inc
cwde
test
xor
mov
jmp
jb
loope
hlt
mov
imul
mov
push
stc
scas
(bad)
xchg
pop
jbe
pop
xor
fnstenv
push
(bad)
mov
sub
daa
jecxz
xchg
mov
or
mov
nop
test
xor
and
pop
fprem1
mov
xchg
leave
mov
or
call
sbb
jbe
adc
xchg
scas
inc
ret
push
mov
jnp
inc
push
jl
ret
jae
aas
rcl
dec
aam
xchg
dec
sub
jnp
in
test
lahf
in
mov
or
aas
fdiv
adc
mov
ret
inc
in
push
in
and
jecxz
(bad)
mov
pop
mov
or
lahf
push
test
sub
sti
into
mov
cmp
ss
jmp
pushf
jmp
mov
dec
mov
ss
adc
xlat
ret
mov
cmp
(bad)
pusha
fidivr
das
xchg
pop
jnp
fsubr
dec
push
sbb
(bad)
pushf
mov
pop
mov
xor
pusha
jae
xchg
aaa
daa
fs
push
es
inc
mov
jno
call
retf
out
inc
jne
xor
fs
popf
or
pop
sbb
popf
call
xchg
popa
jo
movs
arpl
sbb
sbb
or
call
les
(bad)
sbb
pop
test
out
jge
push
leave
dec
out
jns
paddsb
jno
sbb
mov
lods
mov
push
test
mov
div
and
into
dec
or
in
sub
jge
jno
shr
adc
addr16
aad
int3
in
ret
dec
mov
cmc
fdiv
jbe
test
push
das
test
inc
fwait
scas
jb
add
and
cs
aad
add
pop
adc
inc
or
loopne
nop
mov
or
jl
fwait
test
jle
mov
fdivr
jp
mov
xor
rcr
test
pushw
cmp
mov
inc
outs
or
stos
mov
test
mov
fs
cwde
(bad)
pop
dec
repz
push
pop
jae
arpl
jg
outs
(bad)
jmp
sbb
and
mov
lea
add
inc
fdivr
(bad)
pop
stos
sbb
rep
lods
cmp
clc
repnz
test
and
lock
(bad)
shl
sub
xchg
retf
ret
sbb
not
retf
pop
mov
stc
mov
or
iret
outs
mov
cmp
mov
mov
nop
cld
test
cmp
sbb
mov
mov
out
cli
gs
and
cmp
jmp
stos
lahf
js
mov
mov
loop
adc
pop
jb
int
dec
test
mov
push
shl
cmp
stc
adc
popf
ins
add
in
(bad)
out
add
add
push
mov
imul
xor
int3
or
je
(bad)
jbe
sar
jmp
inc
(bad)
pushf
fild
imul
rcr
add
sti
xchg
(bad)
stos
or
scas
loop
leave
inc
scas
cs
test
xchg
movs
std
mov
jb
stos
imul
scas
push
pop
fsubr
push
jnp
push
and
fadd
jecxz
and
repz
test
cmp
mov
adc
jge
mov
sahf
adc
xor
stos
xchg
loopne
int3
enter
aas
mov
mov
out
jae
test
dec
cmps
push
out
and
add
sbb
fsubr
fsubrp
pop
or
loope
lea
inc
push
cmp
pop
mov
movs
fs
hlt
popa
mov
xor
popa
cmp
add
mov
retf
fbld
stc
adc
mov
clc
popa
loope
cmp
mov
sbb
lods
mov
stos
adc
mov
sbb
mov
sahf
jle
xor
jecxz
jbe
ja
jmp
sbb
iret
mov
inc
out
cmp
das
pop
push
inc
(bad)
cmp
push
push
add
mov
aad
add
cmps
xor
xchg
xchg
jb
out
mov
fld
and
mov
aaa
rcr
or
or
(bad)
movs
ins
movs
and
js
adc
bound
je
pusha
test
stc
sub
pop
(bad)
js
ins
scas
std
add
and
push
pushf
pop
mov
cld
xor
cmp
and
xchg
add
arpl
jp
(bad)
mov
in
cli
arpl
xor
int3
mov
sbb
sub
mov
stos
dec
sbb
ret
lock
inc
pop
xchg
dec
cwde
cdq
cmps
fild
ins
loop
addr16
and
gs
test
or
loop
sbb
sbb
add
sbb
sub
pop
or
fcom
jmp
cmp
inc
and
das
sti
mov
adc
aam
inc
das
mov
or
rcl
(bad)
mov
daa
loope
leave
icebp
sbb
outs
into
sub
pop
inc
inc
xor
push
xor
ret
or
push
pop
stos
out
inc
jp
sub
mov
pop
dec
dec
es
cld
mov
and
inc
cdq
rol
mov
cmp
mov
adc
jb
mov
pop
xor
retf
cmp
inc
xchg
mov
mov
in
lock
popf
ret
inc
ss
jne
xchg
out
les
mov
cmps
mov
ins
mov
mov
out
popf
jns
dec
dec
test
push
sub
xor
fs
test
fisubr
cdq
(bad)
jle
movs
sub
mov
pop
sbb
pop
ret
call
xchg
inc
idiv
jmp
addr16
movs
in
mov
or
mov
mov
punpckhbw
loope
sub
jmp
jle
dec
mov
push
std
in
xor
clc
ret
test
and
movs
push
in
cli
stos
dec
dec
jp
jne
cmp
xchg
dec
aam
jo
mov
cld
jo
mov
or
cli
fsub
xlat
push
fld
xor
mov
xchg
dec
pop
sbb
(bad)
and
adc
iret
sub
sbb
push
and
dec
std
nop
cmp
add
jmp
ins
loope
loope
pop
js
je
sub
or
sbb
aaa
adc
mov
sub
sahf
pop
cmp
sub
sub
jbe
push
xor
mov
lea
pop
mov
ss
and
mov
adc
scas
push
pushf
shl
inc
dec
mov
es
mov
sub
out
mov
push
pmaddwd
lea
ins
xlat
js
inc
cmp
icebp
daa
call
or
iret
lods
mov
call
bnd
jmp
cmc
and
stc
xchg
xchg
xchg
push
mov
push
cmp
sub
(bad)
adc
push
pop
add
(bad)
sti
xor
pop
es
push
sub
xor
(bad)
mov
out
rcr
rcr
mov
retf
jmp
dec
mov
xchg
jne
pop
jmp
jnp
jne
shr
dec
mov
lea
jmp
ret
cmc
jno
test
pop
daa
pop
xchg
imul
jmp
push
retf
add
push
movs
mov
push
ss
rcr
lods
inc
adc
sar
rcl
dec
scas
push
jp
mov
aas
rol
nop
popa
loop
ds
and
cmp
lock
fcmovnbe
das
jecxz
stos
and
outs
sbb
pushf
pop
pop
pop
dec
push
popa
leave
mov
jmp
cmp
sbb
mov
cmp
sub
sub
jge
or
rcl
loope
adc
mov
popf
sar
(bad)
sub
cmp
ins
mov
sbb
xor
jecxz
outs
loop
jmp
repz
jmp
ret
pop
inc
je
xor
ins
and
js
movzx
(bad)
stos
sub
js
outs
and
(bad)
and
push
adc
pop
je
adc
cmc
mov
call
sar
(bad)
cld
in
je
popa
mov
imul
xor
mov
fisubr
mov
mov
out
cmc
pushf
mov
pusha
mov
(bad)
dec
sar
push
sbb
adc
pop
stos
test
cmp
(bad)
xchg
push
ffree
cmp
enter
fistp
test
mov
loope
pop
(bad)
(bad)
fucomi
dec
iret
adc
sub
cmps
push
shl
mov
arpl
push
(bad)
cmp
mov
push
xchg
sub
ins
mov
gs
test
mov
fisttp
int
and
or
retf
push
inc
and
xor
add
icebp
ds
xor
leave
hlt
jo
scas
dec
jo
leave
jb
call
dec
jnp
push
mov
xchg
mov
aas
mul
jp
mov
xor
cmc
or
mov
pop
lahf
(bad)
jle
std
mov
(bad)
pop
push
mov
xor
test
dec
jcxz
inc
cmc
lock
aam
mov
ret
mov
sub
mov
jno
and
pushf
jmp
les
mov
lahf
in
imul
adc
cli
pusha
paddusb
jl
pop
call
movs
mov
mov
shr
sbb
mov
mov
aad
jecxz
repz
fisttp
ficomp
loop
mov
or
outs
xchg
lods
ret
stos
sar
pop
outs
inc
into
dec
sahf
push
aas
mov
mov
mov
test
js
fmul
and
sahf
push
dec
and
mov
test
push
out
outs
loopne
jmp
call
sub
(bad)
fnstcw
dec
pop
push
mov
inc
nop
out
cmp
in
cs
xchg
adc
(bad)
push
(bad)
mov
pop
imul
mov
mov
mov
and
sub
dec
mov
sub
or
jl
inc
scas
xchg
cmp
arpl
inc
mov
push
in
fst
fnsave
adc
popf
aad
jecxz
fmul
fbld
loope
clc
jmp
cli
das
mov
loope
and
adc
in
mov
outs
fstp
das
js
xchg
rcr
movs
test
or
adc
(bad)
stc
in
adc
shl
cmp
mov
push
mov
pop
jb
jp
xchg
ret
mov
retf
adc
out
xchg
cmps
rcr
out
inc
fnstenv
add
pop
pop
sbb
jecxz
xor
pop
inc
jnp
mov
sub
fistp
add
dec
pandn
(bad)
loopne
mov
jno
retf
dec
and
inc
in
hlt
retf
sbb
iret
rcr
movs
pusha
rcr
imul
not
mov
sub
mov
jne
inc
cmp
push
sbb
sbb
and
mov
or
pop
add
sbb
je
push
sahf
int3
daa
imul
mov
retf
aam
test
xor
idiv
pop
movs
mov
add
shl
push
fdivr
call
or
xchg
jmp
adc
add
sub
jge
mov
sub
(bad)
mov
fcmovne
cmp
mov
cmp
and
push
jp
cli
in
mov
movs
ja
jmp
add
sub
stc
scas
push
scas
fiadd
adc
rol
sub
mov
enter
fnstenv
cmp
cmp
mov
(bad)
ds
in
jp
cmp
inc
leave
mov
mov
push
mov
mov
xchg
and
inc
push
add
test
jmp
mov
cmp
sub
fucompp
jb
xor
ficom
lods
adc
leave
sti
aad
ja
fild
(bad)
loopne
inc
push
add
andps
jne
loopne
clc
sahf
push
(bad)
(bad)
daa
sti
jle
int
in
fcom
dec
fstp
imul
cmp
vmovss
loope
mov
push
loopne
inc
pop
fcmovne
pusha
test
xchg
fxch
cli
push
sar
in
mov
push
loope
fsubr
push
and
lds
sub
jns
mov
jmp
push
cmps
push
inc
adc
sti
cmp
aam
retf
mov
sbb
into
pushf
jg
(bad)
int
sub
imul
test
mov
bound
rcl
mov
loopne
mov
stos
mov
cdq
sar
outs
std
stc
mov
test
ins
fistp
sub
outs
push
mov
imul
push
pusha
lods
xor
jnp
leave
into
rol
adc
jge
pop
popf
jge
cmp
cli
mov
sub
out
and
push
out
dec
push
out
sahf
ds
mov
inc
cmp
push
rol
dec
mov
inc
or
aas
jae
(bad)
sbb
xor
mov
xchg
rcl
push
ret
fst
pop
mov
test
loope
adc
ja
scas
rcl
mov
inc
sar
push
cwde
sbb
loop
fdecstp
mov
xor
out
fucomp
cld
adc
call
mov
push
sar
(bad)
xchg
mov
shl
loop
mov
fbld
rol
jle
nop
stos
sub
mov
mov
pop
inc
cmp
sub
jecxz
xor
xchg
mov
gs
lods
pop
or
call
push
out
cmp
lods
cmp
jo
aad
fisttp
push
les
rcl
xchg
and
jle
sar
ins
xchg
je
repz
in
sbb
mov
xchg
lods
sbb
and
push
push
repnz
(bad)
pop
mov
out
ret
jl
pop
std
or
push
fisttp
jmp
pop
xchg
in
sub
and
and
inc
out
daa
sbb
pop
sti
inc
nop
mov
inc
rcr
in
mov
jo
mov
pop
jl
sar
pop
mov
xor
inc
cmp
pop
loopne
jge
int3
mov
aam
shr
fwait
sbb
cmc
inc
inc
sub
movs
test
sub
les
repz
jno
inc
inc
sub
and
retf
push
fdivr
ret
ds
xchg
retf
jg
jnp
jnp
inc
cs
ss
arpl
imul
iret
push
mov
jecxz
cdq
jl
ss
adc
add
in
cmp
imul
and
cli
xchg
adc
stos
inc
call
lea
add
fdiv
xchg
pushf
int3
(bad)
inc
pop
jbe
cwde
adc
clc
popa
push
or
js
jle
cwde
xchg
jmp
test
add
ins
psrlw
add
cmp
ret
in
das
cmp
(bad)
(bad)
call
clc
mov
movs
sub
dec
and
push
test
mov
xchg
mov
retf
inc
cwde
dec
in
xor
or
ret
mov
popa
push
jnp
aad
mov
or
xlat
imul
lods
xor
sub
scas
push
lahf
sbb
daa
scas
cli
(bad)
inc
jnp
and
xchg
(bad)
aad
jno
fwait
popa
int
sbb
call
mov
je
cli
mov
sti
xor
repz
inc
cdq
pop
cmp
iret
pop
cld
mov
hlt
outs
mov
mov
or
xor
rcl
sub
mov
or
std
sbb
inc
jae
mov
aad
test
aam
jns
stos
lahf
repz
mov
aas
dec
fs
mov
sub
add
cmp
repz
mov
add
cli
mov
mov
sub
daa
outs
xor
xor
fiadd
pop
fwait
push
fdiv
adc
arpl
sub
sar
jle
adc
mov
daa
fimul
dec
cli
jg
in
jae
sub
jecxz
pop
cs
or
test
arpl
(bad)
or
idiv
adc
mov
cmp
js
sbb
pop
test
stc
cmp
ja
outs
push
mov
mov
daa
cmc
fistp
push
cmps
shl
mov
ins
xchg
clc
jae
adc
repz
adc
addr16
mov
sbb
mov
cmp
pop
xchg
jae
push
ret
shl
sbb
stc
jmp
rol
pop
lea
add
jl
xor
and
fld
xor
or
lahf
cs
clc
scas
cmp
ss
rcr
arpl
push
(bad)
call
lock
arpl
jae
sub
pop
mov
leave
sbb
add
gs
sub
mov
push
mul
adc
sub
into
fs
sub
shl
or
mov
fld
loopne
push
(bad)
cdq
movhlps
or
push
push
cmp
out
fmul
hlt
dec
std
push
ud0
loope
mov
call
cld
mov
mov
push
pop
mov
loope
mov
mov
push
stos
xchg
test
inc
nop
loopne
fcmovnbe
cmp
ret
xchg
jno
in
ja
xor
or
adc
inc
jb
jno
icebp
movs
stc
push
imul
xlat
mov
cmc
xor
ror
or
loopne
pop
(bad)
push
popa
stos
imul
jmp
push
out
dec
dec
add
movs
cmp
aad
adc
mov
loopne
icebp
mov
fnstcw
js
cld
xchg
xchg
xlat
pop
adc
cmc
les
cmp
mov
in
jno
dec
sar
scas
(bad)
xlat
fsubr
pop
popa
rol
cld
int
xlat
(bad)
adc
and
arpl
arpl
scas
xor
rol
and
iret
fs
add
test
mov
stc
add
jae
(bad)
in
lods
xchg
inc
cmp
ins
cwde
pop
mov
jno
in
pop
add
inc
fcmovnb
aam
jg
add
xor
pop
xor
mul
rcl
xchg
add
clc
pop
sub
inc
pop
adc
lahf
pusha
call
ins
xor
push
lods
outs
dec
adc
mov
ret
sub
sub
jmp
imul
pop
fld
rol
or
xchg
cmc
or
inc
lock
add
fsubr
or
pop
icebp
xchg
adc
retf
gs
pop
or
mov
cmp
(bad)
push
mov
adc
ss
or
fst
jle
xchg
push
and
xor
in
mov
out
(bad)
xchg
movs
out
mov
and
ins
ror
(bad)
pop
inc
ret
inc
and
lock
sub
test
retf
mov
xchg
inc
inc
push
push
or
xchg
cmp
pop
sbb
je
ret
mov
inc
loop
popf
pop
adc
rcr
scas
cld
stc
pop
adc
shl
mov
mov
mov
popf
scas
pushf
cli
fs
xchg
in
push
cmc
ret
test
mov
cmps
mov
pop
inc
icebp
test
call
ds
(bad)
cmps
std
popf
cmp
pusha
inc
cld
cmc
fldcw
ds
or
add
jno
lds
or
ds
xor
outs
mov
sbb
mov
mov
imul
inc
add
nop
jnp
adc
adc
lods
mov
push
mov
clc
mov
jne
daa
div
mov
mov
scas
enter
or
cmps
ds
adc
push
push
jno
add
and
hlt
test
cmp
pop
out
cdq
lods
xchg
mov
mov
or
or
cli
dec
mov
inc
jnp
in
out
(bad)
mov
jne
pop
mov
sub
push
test
inc
fcomp
xchg
jmp
xor
imul
mov
test
bound
cs
nop
nop
dec
into
fild
addr16
ficomp
aaa
mov
std
imul
pop
cs
or
pop
hlt
std
cli
mov
clc
and
push
push
jmp
xlat
iret
rcr
mov
or
xchg
fiadd
(bad)
dec
shl
loope
sub
jmp
mov
cld
mov
jg
in
into
ret
and
mov
es
enter
nop
out
adc
sbb
mov
fbstp
mov
jno
and
sub
cdq
std
jl
jmp
leave
jb
leave
out
pop
inc
(bad)
clc
pop
out
sbb
jecxz
jb
ins
ja
cmp
out
data16
inc
fldenv
xor
jo
adc
push
call
ja
push
leave
rol
adc
mov
fwait
xchg
jp
out
cmp
ret
cmp
pop
pop
dec
or
aad
test
xchg
sub
mov
push
out
jmp
stc
xchg
xor
in
pusha
outs
out
push
xor
mov
bound
inc
rep
cmps
out
test
aam
sub
movs
push
cdq
test
mov
mov
or
or
fisttp
jmp
jno
mov
jo
leave
js
mov
fnstcw
jns
(bad)
aad
retf
inc
sub
pop
aas
xor
adc
mov
sub
dec
pop
sahf
adc
cmp
mov
gs
mov
sar
xor
and
mov
sub
and
push
adc
mov
mov
jle
clc
leave
test
adc
pop
(bad)
mov
int
(bad)
add
jge
jb
inc
jo
add
push
or
jne
inc
mov
or
pop
jne
jno
cmps
out
leave
xchg
push
jae
push
sti
xchg
xchg
inc
cmp
inc
mov
and
aam
leave
mov
or
pop
movs
sub
xor
cmp
xor
dec
mov
inc
fs
in
sar
(bad)
push
ds
jae
movs
ins
mov
(bad)
fadd
jns
xor
xor
stc
mov
imul
mov
(bad)
ret
and
retf
aaa
in
dec
dec
sbb
push
je
jns
rcr
ret
in
fistp
repnz
mov
sub
push
mov
fwait
(bad)
inc
mov
pop
xchg
cli
xchg
(bad)
call
xchg
xchg
sti
in
fidiv
and
inc
lods
aaa
adc
push
xchg
pop
cld
sub
aas
mov
sahf
cmc
lods
jmp
adc
int
and
popa
out
jg
and
push
add
add
xor
into
jmp
shl
jl
xchg
push
cmp
xchg
test
cs
repz
(bad)
in
lods
inc
adc
push
pop
jno
xor
stc
adc
ficomp
sbb
retf
jl
dec
xor
push
add
jb
xchg
ja
jge
mov
dec
pop
adc
adc
pusha
mov
and
pop
cwde
pop
inc
clc
jo
fwait
dec
aam
fstp
in
or
fs
xlat
xchg
dec
xchg
mov
ins
dec
inc
scas
arpl
sbb
mov
sub
test
push
std
sub
mov
lock
in
dec
adc
add
pop
outs
or
call
push
fisub
idiv
xor
push
mov
cmp
test
dec
push
mov
lock
iret
out
push
fiadd
sub
imul
mov
jle
jb
int
repnz
cdq
into
aaa
adc
sbb
xor
call
or
ja
jmp
lods
aaa
sbb
bound
add
rcr
arpl
mov
add
pop
lock
xor
or
je
cmp
dec
sti
jecxz
inc
aam
pop
sahf
jle
inc
sub
mov
ror
mov
adc
in
sub
mov
push
jmp
hlt
fbld
sahf
test
push
dec
xchg
movnti
or
aas
lock
mov
test
cmp
mov
lods
rcr
es
fldenv
add
mov
pop
mov
retf
or
shr
pop
scas
data16
xchg
pop
mov
fwait
jmp
xchg
mov
add
or
out
daa
ret
dec
or
add
sahf
cmp
test
hlt
es
dec
stos
sar
inc
mov
cmp
mov
xor
push
hlt
fcom
lods
(bad)
mov
jg
inc
and
call
adc
xor
fwait
sub
cmc
xlat
aas
jmp
ficomp
mov
dec
or
or
test
mov
rcr
nop
movs
lods
add
inc
popf
je
jbe
mov
scas
or
jg
out
mov
sub
xchg
int
xor
mov
xchg
jb
bound
xchg
outs
jae
scas
shl
iret
pop
mov
outs
jmp
cmps
je
call
mov
xchg
sbb
cmc
es
pop
call
in
sahf
xchg
stos
inc
mov
jae
sbb
ja
pop
lods
push
sub
mov
mov
daa
pop
cwde
xor
inc
fld
neg
gs
movs
xor
(bad)
in
mov
(bad)
leave
sbb
iret
xchg
mov
rcl
jmp
mov
out
sbb
inc
les
mov
aam
repz
inc
dec
or
sbb
cmp
pusha
jnp
jbe
xchg
dec
cmc
mov
(bad)
call
pop
fistp
and
xor
ins
dec
mov
mov
or
sti
xor
repz
int3
repz
adc
outs
jae
or
xchg
in
push
out
fadd
ss
cmp
fcom
cmp
out
mov
lods
or
push
dec
stos
sub
push
sbb
daa
jle
sub
or
xchg
pop
aad
addr16
ret
iret
mov
xor
pusha
xor
adc
jmp
cmc
fndisi(8087
cmp
or
into
ins
fwait
sub
mov
movs
sub
dec
out
pop
push
inc
(bad)
adc
fsub
mov
mov
push
mov
inc
popf
mov
dec
push
or
mov
shl
gs
test
pop
push
and
rol
outs
(bad)
mov
dec
cmp
arpl
adc
loop
mov
jbe
xchg
hlt
data16
daa
cmp
out
mov
cmp
push
cs
push
mov
out
sbb
jecxz
cdq
loop
dec
xor
test
js
jp
push
inc
in
inc
inc
and
test
sub
sub
sbb
jecxz
jnp
jmp
outs
cmps
xchg
dec
push
jnp
cmp
jp
test
aaa
cs
sbb
rcl
in
cmp
cmp
and
or
mov
lahf
arpl
or
shr
push
ins
sti
xchg
dec
ret
mov
call
sub
mov
mov
push
add
mov
leave
sub
lea
mov
imul
dec
cwde
add
jns
mov
xor
mov
rcr
sub
sahf
cmps
and
adc
arpl
sbb
fdivrp
fcomp
cld
int
enter
add
xor
push
pushf
push
ret
iret
or
jns
dec
cmp
cwde
lods
mov
shl
and
and
push
mov
arpl
gs
out
nop
inc
int3
mov
addr16
neg
sbb
jmp
push
pop
mov
(bad)
or
xchg
rol
or
(bad)
stos
push
add
(bad)
aam
repz
imul
or
ds
jecxz
(bad)
fdivr
push
xchg
fcmovbe
movnti
dec
retf
xchg
and
sub
fadd
or
loop
inc
mov
call
int3
or
call
sbb
adc
pusha
dec
cmps
retf
mov
pop
push
aam
or
loopne
scas
outs
jmp
pop
or
cwde
mov
mov
lock
in
retf
popf
mov
shl
mov
cmps
dec
xchg
cmp
pop
mov
fmul
(bad)
popf
out
inc
adc
rcl
sbb
lods
mov
inc
adc
and
lahf
lods
call
loopne
mov
push
fsubp
or
dec
es
cmp
and
xor
xor
pop
adc
sub
ins
push
sub
jg
cmp
test
aam
xchg
and
or
mov
bound
add
outs
adc
pop
and
lock
je
add
je
sub
xchg
call
gs
cli
pop
aad
pop
xchg
pop
mov
fld
loop
test
mov
dec
pop
push
lea
sar
cmp
jb
not
xor
aaa
push
sub
pushf
adc
js
adc
movs
mov
rol
push
and
enter
xchg
dec
or
xor
stos
adc
push
mov
mov
ds
(bad)
mov
pop
xchg
pop
mov
enter
dec
cs
xchg
ficomp
loop
mov
mov
outs
mov
mov
mov
cmp
push
or
or
ins
test
pop
std
xchg
test
stc
pop
mov
popf
pop
fdivr
cwde
dec
sar
cmp
or
mov
or
dec
xchg
pop
clc
mov
arpl
xchg
test
call
push
sbb
outs
not
pop
add
sti
pop
xchg
imul
xchg
xlat
jg
cmp
add
cmp
cmp
cmp
lock
sbb
jmp
ins
imul
fcom
mov
sbb
fs
arpl
iret
hlt
int3
test
arpl
shr
cmp
or
sti
aam
jno
ret
bound
or
xchg
adc
lods
lock
nop
push
inc
loopne
sub
call
xchg
(bad)
fs
(bad)
out
(bad)
sub
mov
sub
xor
cmp
scas
sar
or
pop
and
sbb
lds
xor
aas
push
or
popw
lods
arpl
jne
call
mov
xchg
lods
sbb
pop
enter
cmp
pusha
gs
ficomp
mov
ja
jb
jae
mov
test
mov
in
xchg
enter
repz
dec
adc
scas
xchg
(bad)
lock
iret
stos
enter
shr
jb
jbe
sbb
fldcw
sbb
test
dec
gs
sub
xor
and
mov
add
test
xchg
(bad)
cmp
mov
div
mov
stos
(bad)
lods
rol
mov
or
sub
cmp
call
or
add
xchg
leave
data16
mov
pop
(bad)
push
sbb
aas
lock
aas
je
mov
or
push
jnp
bound
(bad)
and
jecxz
cmps
movsx
inc
imul
ins
or
imul
mov
lds
cmc
and
cmp
jo
sahf
je
push
(bad)
xlat
jle
push
mov
or
test
mov
push
pop
cmps
jb
mov
xchg
leave
enter
aaa
or
mov
aaa
adc
lods
xchg
push
shl
jae
jne
sub
dec
js
dec
jb
cmp
push
mov
adc
mov
mov
popf
pop
loopne
sbb
jbe
ja
push
fldcw
mov
movs
add
test
jnp
mov
jmp
and
dec
mov
lock
jmp
xchg
add
fadd
jb
push
(bad)
add
jle
in
push
lods
stos
inc
das
ins
test
dec
ss
ins
push
test
mov
iret
jp
imul
stos
dec
mov
retf
adc
mov
shl
and
dec
str
in
imul
push
in
fwait
pop
outs
and
mov
push
(bad)
and
retf
xor
clc
loopne
imul
or
adc
sbb
stos
dec
inc
nop
mov
sub
pop
xchg
cdq
aad
sbb
movs
inc
call
jns
lds
rcl
std
add
push
ret
xor
or
in
imul
leave
jp
outs
inc
repz
push
daa
cmp
xor
cdq
out
addr16
stos
out
pop
shl
test
inc
test
sahf
push
add
faddp
repnz
outs
leave
push
fwait
sub
dec
pop
adc
sub
dec
mov
sbb
cmp
or
dec
add
pop
jl
pop
mov
or
(bad)
out
cmp
mov
fnstcw
fcom
mov
movs
sbb
mov
(bad)
(bad)
clc
inc
ja
test
mov
cmps
xchg
or
pop
pop
dec
adc
push
xor
add
in
(bad)
lock
adc
dec
sbb
es
pop
and
add
out
out
aam
pusha
or
mov
mov
out
ror
dec
sbb
jbe
cmp
cdq
jmp
das
push
adc
adc
push
out
call
js
sub
sub
fs
add
icebp
out
leave
ds
sub
out
push
inc
jp
mov
mov
clc
sar
lahf
cmp
inc
cmp
adc
inc
in
stos
popa
iret
jno
pushf
out
sub
outs
inc
mov
call
dec
fcom
jmp
gs
ds
xor
xor
add
mov
add
lock
cmp
sub
and
repnz
movs
push
mov
pushf
add
mov
mov
mov
push
ror
outs
mov
xchg
dec
push
(bad)
cmp
jmp
bound
ror
nop
lock
sub
int3
xchg
or
jno
(bad)
xor
cwde
in
sub
inc
xor
sub
or
gs
add
arpl
and
out
(bad)
adc
js
pop
cmp
in
aam
retf
jae
cmc
mov
stos
in
(bad)
xlat
mov
pop
ficomp
mov
mov
inc
dec
push
in
(bad)
mov
out
sub
ret
test
std
shl
add
dec
pop
pop
and
mov
and
into
and
call
fiadd
inc
pop
jecxz
adc
(bad)
push
add
and
in
clc
int
inc
mov
dec
repz
mov
test
mov
add
mov
inc
not
xchg
xchg
xor
pop
jno
fadd
push
xchg
jnp
push
lahf
in
xlat
in
mov
aad
mov
popa
sub
ror
xchg
push
in
mov
push
push
das
in
add
pop
push
and
mov
bound
aas
xor
ret
test
je
mov
jo
(bad)
adc
popf
sbb
jmp
fucom
or
jbe
adc
pop
loopne
shl
pop
lods
dec
clc
rcl
sub
mul
std
outs
sar
mov
cli
add
mov
daa
pop
call
push
xchg
xchg
movs
ins
sbb
fcmovnb
sub
push
inc
loope
scas
stos
mov
das
mov
es
xchg
mov
bound
cmp
add
adc
sbb
pop
dec
dec
mov
xor
cmp
lods
cmp
imul
cmp
mov
fmul
stos
jge
test
loopne
xchg
popa
fndisi(8087
repnz
inc
mov
mov
sbb
lahf
add
les
xor
push
aam
pushf
ds
xor
retf
or
xor
adc
or
dec
cdq
popa
stos
sbb
sub
mov
fild
test
aam
inc
pop
push
xchg
mov
arpl
hlt
cmps
pop
and
jbe
xchg
iret
aam
pop
cmp
push
loope
inc
jo
jno
pop
cmc
dec
push
nop
xchg
xchg
shl
dec
mov
int3
daa
iret
push
xor
xor
jg
fcomp
stos
xchg
mov
mov
xchg
cs
add
test
cwde
int3
test
adc
cli
movs
mov
xchg
mov
jne
pop
mov
dec
add
xchg
sahf
arpl
jge
jmp
shl
scas
and
push
arpl
sbb
je
jbe
mov
xchg
stos
and
mov
mov
pop
repz
pop
push
dec
dec
mov
std
and
mov
cmps
inc
hlt
(bad)
(bad)
mov
push
jmp
int3
lea
sub
lods
icebp
imul
(bad)
or
div
push
xchg
add
int
push
add
leave
push
dec
mov
add
in
ss
aaa
jbe
xchg
(bad)
inc
inc
bound
aam
push
mov
mov
scas
call
inc
mov
pop
sub
or
or
inc
and
cmp
(bad)
xchg
into
mov
enter
push
and
cdq
ins
dec
push
shl
push
test
add
cmp
leave
sub
adc
pop
cmp
movs
mov
cmp
jecxz
ds
call
dec
adc
fadd
push
or
jle
push
fwait
dec
enter
xor
test
lods
fwait
jne
xor
xchg
cli
xor
in
out
arpl
in
int3
pop
push
sub
mov
xchg
or
lahf
cmps
in
aam
jg
fist
inc
rcl
adc
and
cmp
inc
in
mov
sbb
mov
push
xchg
sub
dec
stos
xchg
or
mov
sahf
bswap
int3
pop
xor
aam
adc
fwait
out
sub
shr
mov
mov
cmp
mov
das
dec
mov
mov
mov
cmp
test
sub
xchg
adc
(bad)
fbstp
xchg
xchg
xor
jmp
mov
mov
ins
lods
push
adc
sub
lock
jmp
clc
enter
sbb
mov
sub
cld
into
xor
cmp
sub
add
inc
jb
cmc
push
lds
push
push
in
fcos
mov
aam
xor
fiadd
loopne
in
lds
xchg
and
cmp
repz
sbb
ja
dec
mov
lahf
daa
mov
push
mov
xchg
sbb
add
repnz
loop
lahf
shl
dec
or
data16
push
stos
pop
push
sbb
cwde
nop
(bad)
jne
movs
inc
jmp
loope
js
in
inc
add
mov
sub
pop
outs
rcl
dec
pusha
jge
jns
(bad)
adc
bound
in
adc
nop
lds
jmp
ror
mov
sti
outs
ins
xor
and
dec
push
pop
in
daa
mov
cmp
call
pop
inc
adc
sub
ss
or
test
sbb
xor
icebp
fisttp
push
cdq
add
gs
xor
gs
test
aad
nop
div
lock
add
daa
inc
sbb
retf
xor
inc
fcmove
sub
lock
push
and
xchg
push
adc
das
fstp
clc
xor
ins
cmp
pop
pusha
or
cmp
and
data16
xor
mov
data16
xor
repnz
movs
test
adc
scas
xchg
popf
(bad)
and
jb
jg
cmc
loopne
lds
cmp
mov
aam
imul
mov
das
push
mov
(bad)
cdq
mov
sub
ins
aad
push
rcl
pop
adc
fsubr
mov
xor
xchg
pushf
out
push
bound
push
sub
loop
xor
out
push
push
push
jecxz
xor
ja
shl
aam
mov
fucomi
jbe
or
or
lods
mov
and
pop
jo
add
nop
inc
out
cmp
(bad)
(bad)
mov
add
mov
push
test
pop
and
dec
mov
mov
sbb
fadd
ret
push
dec
and
xchg
mov
sti
xchg
cmp
fisub
fucom
div
loop
mov
push
fsubr
movs
push
jmp
cmp
sbb
cli
movs
aas
jae
mov
inc
jo
and
add
add
jns
retf
sbb
sbb
jge
mov
mov
jns
pop
jl
cmp
popa
fidiv
ror
int
out
ds
mov
int3
ins
add
into
sbb
push
pop
xor
xor
cmp
inc
pop
(bad)
ficom
aad
adc
out
cwde
xchg
mov
rcr
not
mov
or
mov
into
icebp
aad
rcl
retf
jl
xchg
pop
je
cmp
scas
xchg
rcr
pop
mov
sahf
in
mov
xor
mov
inc
cs
mov
pop
mov
inc
lahf
mul
out
pusha
mov
clc
xchg
lds
ja
aas
inc
inc
stos
sub
jle
scas
jge
and
pop
stc
add
inc
mov
cld
in
in
push
inc
lock
push
push
sbb
or
and
scas
push
push
fsub
xchg
adc
add
jb
and
dec
xor
arpl
jmp
ins
stc
or
jl
xor
xchg
sbb
scas
jne
add
sbb
pop
and
pop
test
call
mov
pushf
sti
add
fs
in
cli
or
pop
int3
sbb
cmp
(bad)
add
sub
pop
cli
mov
inc
ds
or
jl
ss
lahf
fs
push
xchg
inc
add
outs
(bad)
cmp
fwait
mov
xchg
jno
aad
retf
aam
jb
jns
stc
daa
mov
repz
adc
ret
xor
xchg
or
dec
loopne
cmp
sub
jno
cmp
sbb
repz
dec
inc
idiv
fmul
cmp
cld
xchg
cmps
call
sbb
neg
adc
jl
xchg
jo
loop
ins
call
loopne
xchg
add
adc
fmul
xor
cmp
(bad)
xchg
stos
jle
cli
dec
xor
cs
out
adc
loop
int
add
or
or
mov
xor
xchg
mov
lds
xor
xchg
sub
(bad)
or
mov
mov
neg
pop
mov
lds
clc
mov
out
sub
mov
dec
(bad)
lea
xchg
sub
loopne
sahf
push
inc
jmp
jmp
lock
(bad)
rcl
cwde
shl
push
xor
(bad)
fld
cwde
daa
push
pop
push
jbe
shr
stc
dec
mov
mov
shl
jae
add
(bad)
and
sub
test
xor
outs
mov
mov
fistp
leave
cmp
xchg
cdq
add
pop
ss
dec
mov
adc
repz
and
mov
pushf
adc
test
lock
test
retf
clc
stos
call
pop
or
push
mov
popa
out
push
test
js
or
adc
xor
adc
push
jg
enter
ret
cmp
nop
jbe
dec
outs
sahf
jnp
test
lds
rcr
xor
imul
jmp
inc
push
in
repz
addr16
push
fsubr
jle
or
adc
jg
imul
cmp
in
and
in
dec
mov
push
and
stos
dec
icebp
addr16
hlt
fs
cmp
adc
mov
cmps
es
cmps
add
jmp
sti
in
and
sahf
push
cmp
push
xlat
jbe
and
fnstcw
mov
aad
cmp
xor
stos
pop
(bad)
xchg
jns
loopne
addr16
xor
pop
ja
or
mov
ret
adc
mov
jne
mov
adc
in
fadd
jmp
mov
mov
(bad)
aad
js
retf
loop
or
sti
mov
lock
push
cdq
hlt
out
xchg
enter
outs
sub
scas
add
fcomp
out
push
not
aaa
mov
jns
icebp
or
enter
(bad)
pushf
out
adc
mov
stc
adc
jmp
xor
std
fwait
add
pop
sbb
dec
ja
scas
out
sub
jo
xchg
mov
outs
push
sbb
sbb
retf
lods
jnp
das
adc
jns
mov
lea
and
xor
sub
int3
sub
mov
or
inc
cmp
cs
and
scas
cmp
dec
stos
in
aaa
mov
je
fimul
and
inc
mov
inc
push
xchg
stos
adc
lods
cmp
xor
fbld
push
adc
jp
add
mov
mov
fstp
xor
data16
inc
jne
(bad)
sub
scas
test
daa
hlt
add
icebp
aaa
sbb
dec
icebp
leave
xchg
sub
jnp
and
cwde
in
(bad)
pop
out
cdq
jns
mov
add
and
ins
clc
stos
std
jg
push
push
push
sbb
dec
cdq
or
push
push
push
retf
clc
sub
inc
mov
ja
pop
test
test
fild
pop
fiadd
xchg
les
adc
test
or
cmp
ss
aas
cmp
mov
icebp
ret
mov
mov
enter
or
jo
ffreep
call
scas
jbe
sub
rcr
(bad)
or
sti
mov
mov
jbe
inc
xchg
(bad)
and
in
sub
call
pop
mov
mov
add
mov
xor
xchg
mov
int
dec
sahf
jp
sbb
shl
mov
loope
cmc
(bad)
retf
mov
js
sar
push
push
daa
xchg
and
cmps
adc
pop
(bad)
jle
movs
and
bound
inc
(bad)
xchg
test
sub
std
fsub
(bad)
fldcw
sub
add
mov
aam
push
out
jmp
pop
adc
push
pop
inc
movs
pop
adc
pop
mov
nop
jo
sub
fprem1
mov
sub
add
sti
adc
ds
push
(bad)
retf
push
sub
in
add
inc
scas
jno
pushf
pusha
shl
cmc
stos
cmps
stos
cmp
sub
push
inc
xchg
ror
push
pop
add
int3
into
mov
xor
jb
pop
mov
ficom
and
fcmovnu
xchg
sub
pop
repnz
(bad)
mov
dec
pushf
xchg
mov
and
movs
rcl
js
jae
mov
mov
inc
jg
stos
(bad)
fisttp
push
and
dec
pop
mov
popf
sub
and
retf
(bad)
adc
jns
or
dec
ds
dec
int
int
fisubr
scas
repz
sahf
loop
cs
jl
dec
dec
nop
leave
push
xor
inc
repnz
fnstcw
(bad)
cdq
add
pop
(bad)
(bad)
fcomp
jno
outs
shl
or
add
aas
lock
test
adc
dec
inc
inc
inc
fs
sbb
in
in
or
xor
(bad)
mov
mov
pop
mov
xchg
or
mov
lock
push
mov
push
pop
xor
dec
xchg
push
lods
retf
adc
sbb
dec
mov
dec
mov
xor
aas
loopne
pop
fdiv
daa
mov
sub
jae
xor
ror
out
xor
arpl
fstp
inc
and
xchg
aas
mov
mov
push
inc
ret
dec
movs
inc
add
pop
lods
sbb
test
mov
add
ins
popa
in
push
repz
xor
into
addr16
lea
cmc
and
call
or
push
add
xchg
les
mov
jge
jle
cmp
ins
in
push
frstor
lods
xchg
jnp
lahf
neg
cmc
test
sahf
ss
xchg
inc
pop
inc
call
addr16
mov
sub
fmul
sub
retf
cmp
aad
rcl
add
cdq
aad
pop
sbb
rcl
pop
pop
inc
jle
sbb
sahf
push
pop
pop
in
idiv
nop
mov
and
xchg
jg
mov
or
lock
fsub
inc
lods
stc
outs
inc
clc
imul
lahf
mov
(bad)
jmp
dec
fs
in
sahf
inc
and
add
addr16
dec
mov
shl
dec
jl
gs
mov
xor
int
cmp
mov
mov
push
ret
pop
push
xchg
int
fwait
push
mov
jl
jecxz
xor
cmp
les
mov
jne
lea
jbe
mov
inc
pop
pop
push
fisubr
pushf
inc
and
js
dec
loope
push
stos
mov
imul
add
mov
sbb
jecxz
jmp
fcmovb
dec
rol
cmp
clc
sbb
mov
jl
push
(bad)
pop
adc
mov
adc
ror
cdq
inc
icebp
push
and
add
or
or
or
lods
test
loop
out
inc
add
bound
ret
pusha
aas
ret
jecxz
add
xchg
jne
mov
fistp
or
cs
xchg
jmp
jne
cmp
pop
loop
ja
mov
(bad)
jb
stos
jle
movnti
mov
js
push
gs
in
cmp
xlat
mov
adc
sbb
lods
mov
pop
cld
mov
push
pop
pop
leave
outs
xchg
pop
dec
mov
cld
int3
mov
pop
sub
xchg
add
xlat
pop
pop
cmp
shr
pop
enter
cmp
pop
xor
pop
pop
mov
loopne
lods
addr16
adc
xor
sub
dec
dec
daa
imul
mov
fnstsw
in
or
fsub
daa
xor
sbb
movs
sub
cmp
clc
adc
push
addr16
and
jbe
sbb
push
adc
(bad)
mov
(bad)
mov
adc
pushf
aaa
dec
arpl
fidiv
fcom
in
fiadd
sbb
ins
rcr
sbb
mov
inc
dec
movs
outs
xchg
imul
xlat
in
test
ins
neg
mov
push
pop
mov
popa
xchg
inc
sbb
into
dec
sbb
data16
xchg
hlt
sbb
retf
mov
sar
sub
icebp
jbe
int
lahf
add
cmp
(bad)
leave
xchg
loope
mov
xor
das
sahf
mov
lock
js
dec
imul
ins
add
mov
icebp
cmp
lds
arpl
xlat
push
out
stc
outs
out
pop
repnz
mov
cmp
out
(bad)
mov
nop
leave
and
cmp
clc
sar
out
rcl
leave
retf
stc
out
adc
stos
mov
or
jecxz
add
adc
dec
sub
sahf
mov
ret
push
dec
stc
retf
outs
xchg
sti
push
(bad)
push
add
sbb
dec
mov
ins
imul
enter
je
jae
mov
icebp
int
mov
dec
dec
push
push
data16
outs
push
stos
cld
dec
outs
mov
mov
aad
lock
sub
sar
xchg
pop
pop
pushf
clc
lea
lods
mov
pavgb
mov
xchg
add
aam
mov
pop
out
test
(bad)
mov
and
mov
dec
mov
pop
jmp
ds
sbb
xlat
adc
and
jge
lods
pop
xchg
jmp
sbb
add
pop
jns
cli
aam
push
pop
stos
hlt
outs
push
icebp
jb
dec
mov
vmwrite
mov
adc
out
mov
int3
mov
mov
sbb
int3
and
popf
jnp
rcr
xor
push
and
outs
cmp
dec
cvtps2pi
cli
imul
js
into
mov
ins
icebp
fdivr
inc
out
add
pop
fimul
xchg
cmps
jbe
pusha
aad
retf
sbb
mov
and
lea
lds
ror
pushf
jmp
fwait
push
sbb
xor
cmp
fsubr
rcr
adc
add
and
dec
xor
sub
movs
xlat
push
std
shl
dec
push
push
scas
push
mov
fimul
inc
mov
mov
sbb
test
out
gs
call
dec
or
loope
adc
loope
adc
mov
pop
dec
dec
fcomp
add
fldenv
or
and
push
(bad)
dec
jp
cmp
adc
push
dec
imul
sbb
test
lods
fwait
jle
or
pop
jb
dec
das
mov
icebp
iret
in
xchg
push
shl
retf
mov
(bad)
adc
push
cmp
xchg
sub
push
jbe
int3
dec
aaa
cmps
pop
shr
out
xor
ja
repz
not
call
or
pop
push
jne
xor
push
ds
push
mov
movs
adc
test
in
out
mov
cwde
sub
sub
retf
jge
inc
jl
adc
xlat
dec
leave
je
aaa
ss
clc
ror
pushf
lock
arpl
lock
int3
sub
sbb
mov
and
cmps
mov
ror
out
call
sub
neg
sub
sub
out
pop
and
movs
sub
popf
movs
sar
xor
ror
mov
retf
push
retf
ret
mov
mov
sti
sbb
mov
adc
mov
mov
lock
pop
lea
aaa
call
dec
inc
fisttp
mov
(bad)
pushf
mov
pop
ja
lods
mov
scas
pop
sub
stos
jl
sub
mov
movs
inc
ins
sbb
cmp
push
mov
and
mov
push
js
cmp
dec
sbb
or
js
stc
fcomp
mov
mov
jle
jp
std
jmp
and
test
in
fdivr
mov
pusha
jae
push
xchg
and
not
cmp
sub
std
test
and
cmp
cld
dec
leave
scas
mov
inc
fimul
icebp
or
aam
xlat
out
ficom
(bad)
inc
mov
pop
rcr
mov
push
jmp
lahf
cmps
je
dec
adc
popa
inc
or
fistp
popf
mov
repnz
and
and
xchg
in
ret
inc
or
ret
out
bound
or
pushf
push
add
into
enter
out
(bad)
mov
jmp
ret
sahf
or
leave
sbb
adc
rcl
or
ret
das
(bad)
pop
cmp
jns
jnp
xor
or
mov
mov
inc
scas
outs
xor
inc
loope
inc
ds
pop
push
test
mov
and
and
xor
push
adc
cs
pop
fist
outs
mov
leave
cmp
scas
pop
out
daa
(bad)
iret
fnstcw
sub
jecxz
pop
mov
push
or
pop
mov
rcr
ss
push
(bad)
xchg
cmp
loope
mov
jbe
ins
mov
adc
dec
pop
jle
sub
in
or
push
test
rol
mov
or
into
pop
cli
sub
sbb
shr
cmp
call
mov
fdivr
es
push
jle
mov
outs
xor
jno
adc
mov
(bad)
jbe
mov
mov
daa
xor
mov
cs
pop
aas
sar
dec
and
std
mov
shl
scas
das
aas
aad
popf
(bad)
loopne
sar
mov
pop
push
arpl
arpl
add
mov
sub
ss
sti
add
push
cmp
sub
in
mov
sub
push
jmp
adc
(bad)
btc
adc
test
enter
add
fisttp
add
imul
push
sar
arpl
cwde
xor
pop
xchg
pandn
mov
inc
cmp
push
xor
notrack
mov
or
jae
pushf
inc
cmps
mov
iret
outs
inc
mov
out
jle
and
mov
sbb
sbb
mov
call
add
bound
iret
jne
xchg
enter
fidiv
add
xor
aam
shr
inc
pushf
clc
loopne
adc
retf
test
fwait
jbe
mov
imul
cmp
cmp
bound
out
or
(bad)
cmp
fisub
sub
cmp
xor
pushf
xor
add
or
jp
gs
shr
and
aas
mov
push
xor
sub
xchg
gs
jnp
scas
jp
xchg
out
add
mov
xor
and
out
xor
sbb
mov
lods
adc
movs
push
mov
inc
aad
inc
dec
out
jge
addr16
adc
leave
fidiv
cmp
int
cmp
and
and
or
mov
out
popf
cdq
adc
xchg
dec
icebp
push
push
movs
and
jns
push
lods
test
loopne
in
mov
add
lea
arpl
xor
fninit
enter
or
dec
bound
pop
dec
push
jp
dec
lahf
xchg
data16
and
pop
inc
aam
xlat
enter
inc
retf
cmp
fwait
xchg
push
rol
cmp
sbb
daa
dec
dec
xlat
cld
scas
push
sbb
add
sar
xchg
pop
mov
cmp
test
and
mov
cmps
xor
sbb
ror
xchg
mov
je
fsub
test
xor
xchg
shl
mov
(bad)
push
jecxz
ficom
jmp
and
mov
mov
lock
dec
aas
mov
adc
popa
cmps
and
xchg
ds
movs
mov
add
pop
in
mov
data16
add
ret
out
pop
pop
add
enter
mov
adc
cwde
lock
ins
push
in
scas
lahf
rep
sub
(bad)
xchg
push
push
mov
sub
jg
adc
pushf
(bad)
lods
sub
popa
xchg
ja
stos
scas
mov
sbb
xchg
adc
int
inc
arpl
test
(bad)
movs
pop
xor
shl
imul
inc
test
lods
mov
sbb
mov
stos
push
fwait
(bad)
push
jbe
dec
stos
cs
inc
je
adc
push
(bad)
or
mov
pop
scas
js
jns
cmc
xchg
cmp
sbb
push
popa
lock
jb
xlat
fwait
out
test
test
sub
xor
jbe
jle
adc
and
ins
in
rcl
lea
jmp
leave
pop
shl
rcr
fcmovnbe
pop
sbb
push
inc
dec
mov
cdq
adc
push
xor
rol
dec
push
mov
inc
(bad)
(bad)
or
pop
pop
mov
ror
sar
add
retf
pop
sahf
bound
iret
or
movs
lea
mov
or
dec
stos
gs
pop
sub
retfw
in
cmc
mov
sub
stc
shl
jl
add
in
or
int3
cmp
pop
jno
clc
imul
fild
xor
mov
cmp
clc
mov
out
cmp
fild
pop
cdq
xchg
adc
cld
add
out
(bad)
jl
lds
mov
cmps
sub
fdiv
(bad)
lock
ret
pop
sub
xor
in
sbb
cmps
leave
(bad)
stc
outs
jp
sub
inc
inc
pop
jmp
mov
adc
push
push
aad
call
outs
and
mov
pop
adc
push
pop
leave
adc
addr16
pop
jae
and
adc
or
enter
std
jmp
add
adc
sahf
xchg
and
std
jecxz
jle
mov
pop
fild
lea
fmul
jmp
in
inc
movs
cmp
sbb
retf
inc
pushf
mov
mov
movs
sub
(bad)
stc
dec
push
or
xchg
pop
mov
add
jle
pop
test
push
jg
and
cld
fild
cmp
mov
cmp
cmp
ja
or
nop
xchg
pushf
out
xor
mov
push
sub
mov
mov
jl
dec
rcl
aad
adc
ja
call
aas
movs
out
sub
lahf
pop
(bad)
pop
push
repz
cmp
jmp
rcl
out
mov
push
rcl
xor
pop
push
fs
or
fadd
mov
dec
jne
mov
movups
push
stos
cmp
popf
pop
sbb
sar
das
lsl
in
fmul
ja
jecxz
push
dec
pop
xchg
xlat
hlt
(bad)
ror
fnstcw
jmp
sbb
sub
xchg
movs
cld
lods
call
sbb
stc
pop
mov
mov
fcomi
dec
add
outs
fistp
popa
mov
jne
cli
cld
shl
or
sub
test
push
ret
mov
shr
pop
mov
sub
pop
les
xlat
push
xchg
sar
xchg
loopne
jb
mov
out
sub
test
lods
clc
pop
clc
imul
jp
inc
pop
rcr
or
mov
sbb
sub
push
lods
mov
in
fistp
sub
std
(bad)
cmps
lods
adc
xor
dec
add
xchg
mov
pop
aaa
adc
push
push
cmp
push
mov
and
add
stos
faddp
mov
dec
mov
movs
and
add
mov
adc
ret
cmp
jg
out
cmps
mul
imul
lods
stos
push
mov
adc
mov
mov
mov
or
add
pop
scas
sahf
jmp
ins
add
dec
adc
dec
out
push
sbb
(bad)
fstp
push
mov
loopne
dec
fild
mov
push
xor
shr
xchg
add
es
ror
cmp
pop
lock
inc
lods
mov
aaa
fcom
push
out
xacquire
retf
test
sbb
shl
lea
ins
jbe
stos
in
and
in
stos
imul
cmp
xor
sbb
dec
out
xchg
and
xor
mov
idiv
lahf
xor
jbe
out
shl
jmp
xor
aaa
cmp
push
adc
mov
rcl
sbb
lock
js
xor
pop
retf
push
dec
mov
sub
cmc
sub
clc
mov
and
ror
mov
mov
movs
sub
int
mov
call
pop
and
jb
outs
sti
cmp
dec
(bad)
(bad)
das
mov
clc
nop
push
leave
call
ins
imul
test
push
bound
xor
mov
mov
aas
or
fnstcw
setge
xchg
adc
mul
pmaxub
or
add
dec
inc
test
cmp
adc
sub
loop
rcr
add
rcl
sub
push
pop
jle
outs
test
sti
fisttp
pusha
cmp
jbe
mov
inc
xchg
cmp
cmp
dec
mov
in
dec
js
mov
xor
sbb
neg
aas
jo
clc
push
mov
adc
push
mov
aad
mov
jge
mov
aas
dec
jle
mov
sbb
jle
stc
add
outs
(bad)
lahf
xor
imul
enter
mov
inc
out
and
dec
inc
in
mov
test
or
(bad)
imul
sbb
test
mov
push
jecxz
(bad)
sub
clc
fucomp
cmp
aam
inc
dec
bound
scas
cwde
fcom
push
pusha
fst
test
aas
push
xchg
sbb
stos
ret
and
xchg
push
lahf
ins
mov
les
lock
adc
sar
popa
and
test
fxch
cli
pop
pop
sahf
mov
leave
loopne
mov
xchg
mov
fist
inc
mov
mov
jmp
mov
shr
mov
call
sbb
in
in
mov
call
pop
jecxz
in
ds
push
pop
mov
ds
mov
add
icebp
fistp
jno
jp
retf
out
test
add
xor
pop
cdq
je
pop
xchg
(bad)
fisub
sbb
adc
test
pop
xchg
scas
sub
loope
ret
add
stos
sbb
and
push
jp
nop
pop
mov
xlat
xchg
jmp
(bad)
sahf
push
cld
jle
jecxz
ror
jecxz
sti
pushf
cli
jp
addr16
ret
test
sbb
jle
mov
scas
div
push
addr16
cmp
(bad)
jmp
fsubrp
ss
cli
mov
outs
imul
and
je
mov
scas
ss
scas
jnp
imul
in
(bad)
fmul
pop
gs
adc
retf
iret
pusha
jno
mov
push
cld
adc
std
call
movs
push
jp
jle
and
(bad)
iret
(bad)
lods
mov
xor
jle
or
add
push
dec
mov
scas
je
std
adc
nop
imul
dec
jbe
bound
and
mov
inc
mov
hlt
mov
mov
sbb
and
add
cmp
retf
xor
pushf
cmp
test
mov
(bad)
stc
push
rol
ror
xchg
mov
sub
add
mov
hlt
adc
xor
stos
movs
rcl
sahf
ret
shr
outs
pop
push
fstp
pop
jnp
jb
adc
xor
or
push
xor
sub
imul
frstor
mov
pop
cli
cli
jg
mov
mov
mov
dec
in
out
xchg
push
and
in
bound
sbb
pop
xor
lods
ds
test
mov
lea
out
adc
cmps
pushf
jno
fsubr
cmps
push
xor
stc
jmp
mov
shl
(bad)
push
ret
ja
outs
sti
lods
inc
mov
(bad)
push
repnz
add
adc
scas
lods
xor
inc
sahf
push
or
rol
mov
mov
mov
retf
outs
pop
mov
mov
push
cdq
popa
jle
mov
mov
xchg
adc
fisttp
xor
sub
ret
push
mov
push
add
xchg
sbb
sti
push
mov
and
jne
add
or
dec
out
push
cmp
outs
jno
mov
inc
cmp
into
not
dec
mov
inc
ret
lahf
loopne
xchg
in
or
cmp
out
jne
jmp
rcl
dec
push
int
(bad)
mov
mov
mov
(bad)
cmp
cmps
adc
(bad)
loop
mov
aas
xchg
in
jecxz
sub
in
popf
fnstcw
jbe
fisubr
(bad)
in
ret
cld
inc
pop
aam
or
ret
pusha
retf
add
sbb
mov
fst
or
(bad)
cli
jne
dec
xchg
in
in
pusha
xor
and
xchg
ret
bswap
push
and
test
mov
jge
inc
test
stos
or
xchg
in
ret
rol
aad
push
xchg
sbb
hlt
cmp
neg
or
pop
(bad)
int3
inc
mov
dec
lods
mov
outs
es
imul
xor
shl
jb
xchg
out
(bad)
push
inc
mov
cmps
pop
or
mov
mov
and
add
test
scas
dec
xor
sub
jecxz
in
test
sti
pop
inc
jbe
inc
mov
les
ret
ror
(bad)
jl
push
xchg
push
loope
xor
or
jge
shr
jmp
aad
lock
or
adc
sub
jnp
repz
and
or
(bad)
test
or
add
inc
out
fimul
leave
stc
pop
loop
in
xchg
js
das
cmp
pusha
sub
cwde
cmp
ret
(bad)
adc
add
aas
stc
xchg
xor
stos
test
stos
dec
ja
out
call
fnsave
mov
jmp
test
sub
pop
stos
int3
push
fst
jge
addr16
cmp
into
push
test
gs
cmp
retf
cmp
xor
xor
xchg
sar
imul
adc
xchg
xchg
sar
(bad)
adc
mov
and
xchg
cmp
rcl
aas
aaa
pop
(bad)
cmps
xor
lods
sysexit
and
dec
mov
dec
or
push
dec
cmp
sub
shr
nop
or
stos
idiv
dec
popa
inc
jecxz
push
ds
dec
sbb
xchg
in
fstsw
adc
adc
push
or
stos
iret
arpl
jecxz
pop
sub
lock
imul
cmp
xchg
mov
pmaxub
jl
in
jmp
mov
iret
repz
test
sub
das
sbb
sar
inc
or
data16
jmp
mov
mov
ss
bound
imul
mov
das
retf
cmps
and
lea
or
xchg
pop
jmp
push
rol
int
push
push
pop
int3
jns
add
jge
pop
std
ds
aaa
xchg
in
mov
pushf
fs
loop
and
pop
cld
(bad)
xchg
fwait
sbb
mov
sti
or
push
aad
cs
bound
sbb
aad
(bad)
adc
imul
jbe
sbb
inc
fwait
adc
mov
mov
lods
and
sbb
fsub
jo
fstp
mov
std
clc
or
mov
mov
pusha
iret
jle
inc
add
sbb
and
and
mov
inc
shl
mov
adc
fimul
jg
adc
dec
xchg
cld
jg
xor
adc
mov
(bad)
mov
mov
fabs
ja
int3
outs
pop
jmp
nop
out
test
and
retf
sub
fcom
jp
lods
dec
push
arpl
dec
xor
dec
or
gs
push
enter
xor
or
pushw
pop
dec
lods
stc
ja
pop
pop
add
jl
mov
xchg
rcl
xor
pop
(bad)
in
sub
adc
sahf
neg
div
mov
push
repnz
xor
fnstsw
mov
sub
or
pop
or
mov
xchg
outs
and
mov
(bad)
movs
dec
call
cmp
(bad)
xchg
std
mov
fld
and
push
popf
jne
dec
inc
cmp
loope
inc
fild
sbb
clc
in
jns
rcr
push
push
(bad)
dec
mov
cmp
arpl
pop
jb
pusha
xor
scas
lock
push
mov
fld
lock
dec
idiv
adc
(bad)
adc
jnp
xor
arpl
sbb
fdivr
add
or
or
sub
fistp
movs
stos
push
fadd
imul
out
jne
add
ss
je
sbb
cmp
mov
aam
stos
stos
pop
clc
xchg
dec
or
xchg
fs
cs
mov
push
xor
mov
call
or
inc
xchg
outs
mov
cs
sub
xchg
fild
fmul
fldcw
sbb
stos
or
lods
gs
jg
jg
mov
popf
sbb
je
cmp
xor
mov
mov
push
mov
mov
shr
jmp
xchg
inc
mov
stos
dec
leave
ins
movs
mov
jo
xor
(bad)
jae
xor
paddd
xchg
nop
lods
scas
f2xm1
stos
adc
rcl
xor
int
xchg
cmc
les
jae
imul
sub
adc
dec
and
jle
xor
jl
int
push
shr
test
mov
out
stos
xchg
push
adc
adc
sti
jmp
xchg
addr16
outs
ror
ret
cdq
cmp
mov
es
ss
retf
gs
mov
icebp
and
shr
ret
adc
mul
cwde
rcl
inc
lods
(bad)
and
pop
lods
xchg
out
jmp
fmul
(bad)
stc
imul
cmp
push
stos
mov
lock
scas
mov
mov
push
jns
(bad)
mov
fist
push
int3
(bad)
loope
leave
push
scas
inc
push
clc
arpl
outs
retf
fs
outs
or
mov
iret
stc
xchg
jmp
dec
xchg
fstp
mov
lds
popa
sbb
pop
cs
rol
iret
add
sbb
add
stos
mov
sbb
repnz
movs
ds
or
inc
out
inc
jbe
jmp
ss
pushf
cmp
retf
stos
cmp
in
jp
pop
int
repz
into
stos
outs
cmp
repz
and
les
jecxz
das
inc
test
test
pop
frstor
cdq
cmp
call
mov
sbb
or
(bad)
fisttp
ja
sub
mov
dec
in
xchg
(bad)
js
cdq
sahf
into
out
mov
popf
ss
ror
sbb
adc
nop
clc
call
sub
xchg
sbb
ds
cmp
xor
xor
lock
mov
ror
mov
cdq
mov
cmp
out
and
dec
sar
andnps
mov
jns
ss
sbb
inc
push
push
mov
(bad)
fst
mov
inc
sbb
ret
aad
or
mov
out
mov
idiv
or
or
cli
dec
fbld
xor
pop
sahf
add
std
es
ds
sub
or
push
adc
sub
rcl
adc
test
sbb
jb
test
out
sub
sub
jmp
mov
xchg
lods
mov
xor
xchg
dec
sbb
popf
shl
adc
xchg
ret
sbb
lods
push
loope
mov
push
dec
out
fisubr
sahf
push
ins
pop
pop
jl
xchg
push
jnp
int
ins
sbb
jmp
adc
cmp
stos
and
fwait
es
shr
xchg
mov
add
sahf
dec
hlt
mov
jne
push
inc
nop
mov
inc
rcl
jmp
enter
xor
xchg
xchg
jl
mov
xchg
rep
mov
jmp
outs
movs
popf
pop
lds
mov
mov
test
mov
int
shl
fs
rcr
mov
jnp
mov
inc
or
mov
push
pop
ins
mov
leave
sub
jo
lock
sbb
mov
lods
mov
nop
out
mov
pop
xchg
or
fwait
mov
jmp
inc
cmc
lock
out
loopne
xchg
fcom
daa
jno
sub
lds
cdq
ret
gs
mov
scas
inc
xchg
adc
out
ret
dec
xchg
jno
jle
jbe
xchg
jb
mov
iret
retf
aam
mov
pop
jae
fidiv
xchg
call
imul
dec
js
not
mov
shr
add
cmp
ror
mov
mov
(bad)
daa
sahf
test
in
lahf
lods
or
js
in
mov
push
xchg
xor
mov
sbb
and
cmps
dec
out
xchg
sbb
loopne
mov
jnp
add
add
push
fdivr
je
push
inc
fcomp
loop
dec
mov
and
mov
mov
test
xor
add
mov
xor
fisttp
ins
jge
iret
cmp
int
(bad)
stc
push
retf
push
sub
push
sub
dec
imul
or
aas
shr
mov
xchg
pop
fs
scas
push
cmp
mov
pusha
ret
or
or
popa
call
adc
scas
scas
lahf
lahf
mov
pop
mov
dec
ror
dec
mov
adc
jmp
sbb
jno
je
out
xchg
inc
xlat
ds
ficom
stos
pop
imul
enter
ss
xor
jae
jle
mov
and
in
mov
jmp
popf
mov
fsubr
xchg
pop
adc
inc
inc
ror
or
in
out
pop
push
xchg
xchg
fiadd
push
mov
ss
jae
xchg
cmp
and
inc
es
test
jmp
sub
and
outs
push
push
test
xor
test
mov
sahf
stos
stc
lock
ins
inc
mov
sbb
retf
cvtpi2ps
xchg
and
pop
ins
sbb
sub
mul
in
dec
push
pop
or
pop
and
pop
(bad)
in
(bad)
popa
popf
movs
in
inc
(bad)
sbb
jle
mov
adc
xchg
sbb
xlat
xor
(bad)
int
in
popa
mov
cmp
or
call
inc
iret
sbb
stos
pop
clc
sbb
xchg
ins
repnz
pop
xchg
(bad)
sub
pop
adc
imul
movs
lahf
outs
aam
icebp
cmc
rol
in
xchg
fwait
sahf
push
int3
stos
or
or
addr16
mov
adc
lods
sbb
ins
jmp
add
dec
mov
inc
je
in
jge
dec
popf
mov
mov
and
xor
gs
fadd
arpl
dec
ins
scas
(bad)
sbb
mov
xlat
out
setge
jecxz
fimul
jle
push
out
daa
scas
xor
cdq
test
enter
jmp
pop
enter
add
pop
hlt
mov
sub
cmp
push
lock
cmc
jmp
fcmovb
jns
in
sub
pop
add
and
push
sbb
xor
cli
mov
or
mov
sti
out
idiv
jg
cmps
sti
push
sub
outs
(bad)
ror
sub
data16
add
push
jecxz
xchg
jne
inc
aad
sbb
push
dec
dec
or
ja
add
outs
outs
inc
add
add
mov
(bad)
call
popf
repz
jge
stos
in
cmp
rcl
and
shr
sar
mov
sub
push
xchg
call
pop
cmp
fmul
push
inc
cmp
pusha
repnz
xor
in
rcl
movq
lea
into
cdq
add
js
mov
or
test
mov
jecxz
xor
pop
imul
outs
iret
rol
mov
movs
ins
call
mov
cdq
shr
shl
sub
loope
sbb
mov
sahf
jbe
repz
iret
xchg
pop
xor
call
mov
imul
int
call
mov
sbb
sbb
ret
push
add
pop
lods
xchg
sub
push
mov
hlt
repnz
xor
or
je
xchg
xlat
jg
push
jge
dec
jno
imul
(bad)
test
mov
(bad)
cmp
aam
clc
and
push
mov
mov
inc
xchg
xlat
ins
mov
jmp
pop
xchg
sbb
sahf
xchg
dec
repnz
aaa
int
shr
out
fist
inc
mov
xchg
and
(bad)
retf
cmp
scas
call
jp
sub
cld
push
cli
cmp
mov
push
inc
in
das
lods
pusha
cld
les
push
cli
inc
fmulp
and
jae
dec
pop
fmulp
push
pop
adc
dec
int3
xchg
aad
ret
fmul
jp
out
cmp
mov
jge
les
rcl
or
mov
cs
jne
icebp
in
sahf
sti
xor
xor
add
xor
sbb
in
aaa
popf
sti
fdivr
cmp
and
mov
jmp
nop
js
cld
push
out
xlat
arpl
dec
fdiv
pop
inc
sub
rcr
push
loop
adc
rcl
jecxz
inc
sahf
push
jnp
pop
fwait
jne
push
pop
or
and
rcl
shl
(bad)
mov
push
loope
cmp
and
xchg
dec
push
pop
repz
fwait
mov
mov
xor
cmp
xchg
movs
dec
retf
lods
inc
mov
pop
pop
xchg
ficom
mov
xchg
(bad)
imul
je
mov
push
adc
dec
retf
loop
add
ret
ins
mov
dec
jne
imul
xchg
loope
call
hlt
lods
test
aam
xchg
or
ja
popf
push
mov
test
push
out
inc
je
(bad)
adc
mov
jmp
dec
push
mov
es
or
imul
fld
fldlg2
push
sub
out
xchg
fsubr
or
jecxz
pop
scas
mov
push
outs
cmp
bound
push
cmp
popf
xchg
pop
inc
das
nop
sahf
mov
repz
and
add
push
pop
sub
scas
jno
(bad)
leave
cld
div
stc
cwde
xchg
cmc
xor
xor
and
mov
inc
add
adc
pop
dec
loope
mov
mov
fld
add
jecxz
add
iret
cmp
fldcw
in
dec
and
imul
jmp
mov
cmp
ins
in
cmp
add
jnp
fbld
enter
sbb
movs
and
cli
jp
ins
mov
out
xchg
add
jg
scas
addr16
retf
mov
mov
and
add
push
lea
inc
adc
sub
ins
pop
jp
cmp
dec
les
add
mov
lahf
push
and
inc
adc
sbb
jo
or
sub
pop
out
mov
xor
push
iret
cmc
cdq
neg
jo
lds
sahf
iret
(bad)
outs
outs
mov
push
mov
mov
dec
sub
or
inc
stc
jge
pushf
test
bound
sub
cmp
xor
sbb
inc
cmps
test
push
stc
(bad)
jns
mov
sbb
cmp
popf
xor
and
ja
dec
fistp
mov
sub
jmp
push
xor
sbb
cmp
dec
sahf
mov
mov
int3
cwde
in
(bad)
int3
lods
dec
loope
div
dec
jo
mov
leave
xchg
test
xchg
xlat
push
inc
(bad)
call
movs
lea
cld
mov
push
add
and
in
pop
inc
aad
(bad)
enter
sub
pop
mov
mov
dec
sbb
repz
mov
mov
mov
bound
mov
and
push
daa
pop
mov
ins
(bad)
mov
jle
shr
pop
pop
cmp
cmp
xchg
add
lds
jg
sub
sub
retf
pushf
jp
sub
adc
jne
lods
adc
movs
sbb
mov
fadd
and
lock
lock
mov
inc
loopne
sbb
shl
in
inc
popa
adc
and
push
clc
repnz
and
jecxz
xlat
outs
xchg
popf
retf
jns
div
pop
and
push
mov
push
in
jmp
leave
cmp
popa
(bad)
fnsave
inc
inc
stc
or
cmps
cmp
iret
cmp
pushf
stos
mov
fmul
mov
jmp
sbb
ds
push
dec
pop
inc
mov
(bad)
(bad)
push
mov
push
nop
adc
in
loopne
pusha
pop
jmp
dec
and
leave
cwde
and
dec
pop
aaa
call
mov
mov
mov
dec
jecxz
fbld
imul
mov
xor
sar
sti
bound
push
in
sub
sti
(bad)
fwait
mov
and
pop
cmp
sub
jmp
sahf
or
inc
in
inc
or
push
jo
imul
cmps
(bad)
ss
cmp
div
inc
ret
(bad)
xchg
outs
push
mov
or
test
jmp
cmp
pop
aas
add
lods
xor
sbb
ins
scas
adc
push
aad
cmps
push
cmp
jmp
sbb
cwde
inc
cmps
add
sbb
jo
inc
stos
fs
pop
fsubr
or
inc
jnp
jnp
push
ds
xlat
jp
dec
(bad)
cld
mov
pop
adc
adc
push
dec
frstor
mov
mov
retf
or
in
or
pop
sbb
cld
popa
cmp
pop
call
(bad)
cmp
dec
dec
or
fcomp
pop
and
adc
push
lods
je
shl
mov
xlat
out
popa
das
(bad)
adc
fs
sbb
adc
jo
outs
mov
je
fadd
mov
cld
sbb
dec
iret
or
inc
mov
mov
sbb
mov
(bad)
mov
or
pop
inc
pop
mov
aaa
out
xor
ror
cmps
cwde
rol
pop
xchg
xlat
adc
xchg
in
mov
xchg
sub
fwait
dec
mov
gs
and
imul
or
dec
mov
xor
or
cmp
sbb
enter
dec
or
iret
mov
es
fisubr
sub
(bad)
pop
jbe
cmp
adc
arpl
xchg
mov
pop
loop
cli
jmp
(bad)
repnz
or
imul
sbb
cmp
aam
mov
jo
sub
push
push
xor
bound
in
jne
(bad)
mov
pop
sahf
cmp
sub
js
pop
cmc
test
fild
jmp
rol
xor
and
popa
aaa
adc
addr16
jl
xchg
cmp
gs
push
inc
jp
(bad)
(bad)
mov
pusha
(bad)
popf
ror
add
clc
addr16
mov
in
mov
and
ror
and
mov
jns
jmp
cld
test
retf
repnz
xchg
stos
loopne
xchg
std
ins
mov
pop
jae
cld
fcomp
test
jns
shl
mov
es
clc
je
fsub
lea
loop
jle
mov
mov
adc
cmp
nop
add
out
imul
pop
xchg
in
int3
ja
xchg
sbb
outs
mov
daa
imul
and
or
jl
or
and
mov
ret
sub
call
scas
cmps
xchg
push
(bad)
push
cmp
pop
neg
mov
xchg
popa
mov
stos
and
movs
sbb
into
les
icebp
sbb
dec
ja
xor
cdq
ror
dec
shl
cli
leave
cmc
sbb
pop
xchg
shr
add
ja
adc
and
and
sbb
jmp
add
add
int3
popa
repnz
mov
popf
ret
jae
pop
adc
xchg
push
lea
sar
xor
retf
scas
cmp
or
lea
sbb
pop
retf
xchg
and
mov
sub
in
push
fist
movs
mov
sub
daa
jo
out
outs
and
mov
sbb
jp
push
shr
xor
ins
push
pushf
sub
push
xchg
pop
sar
iret
mov
test
and
xchg
adc
fnstcw
pop
pop
ficomp
mov
stos
fwait
ds
dec
loopne
push
mov
ins
pop
aad
ja
enter
cdq
les
cmps
ss
xor
dec
adc
jge
arpl
add
movs
jo
xchg
cmp
pop
cmp
sub
stos
(bad)
fsin
mov
and
sub
in
sbb
xchg
sub
fiadd
mov
in
inc
fdiv
imul
(bad)
fisttp
mov
push
pop
mov
clc
jb
add
xchg
jns
lods
sub
sbb
jo
stos
sub
lds
push
imul
out
pop
and
jb
jle
movs
lahf
mov
icebp
xchg
jmp
fs
pop
ret
movs
cs
xchg
lahf
adc
test
int
test
sbb
nop
lods
stos
out
jp
shr
inc
mov
and
add
lods
popa
cmc
mov
mov
xchg
(bad)
ins
adc
daa
jge
sub
pusha
clc
(bad)
in
pop
fs
fstp
outs
mov
out
adc
fld
hlt
push
pop
xchg
test
arpl
cmps
sub
out
mov
movs
ret
or
enter
xchg
dec
dec
cmp
xor
push
pop
cmp
inc
call
jmp
je
push
pop
jmp
jge
xor
dec
jo
shr
or
push
aas
mov
(bad)
(bad)
sar
push
jmp
dec
mov
shl
push
je
retf
das
mov
enter
and
stc
jnp
push
mov
sub
mov
cs
sbb
aad
sub
sbb
push
cwde
in
scas
push
sub
inc
ds
xor
scas
or
aam
fimul
ror
sar
cmc
das
inc
mov
rcl
aaa
retf
lea
cmp
repz
sub
jge
cdq
adc
stos
stos
jl
loopne
mov
das
xchg
sbb
adc
fucomi
fs
movs
test
les
fsubr
add
movs
xor
jne
hlt
cld
test
bound
jne
(bad)
jnp
sti
sbb
test
bound
sub
jmp
fwait
jg
mul
mov
xchg
inc
imul
jmp
aad
hlt
adc
mov
dec
push
xlat
ss
dec
mov
mov
push
inc
cdq
cs
push
adc
aad
jp
xchg
aaa
inc
sub
dec
mov
dec
mov
and
push
out
mov
test
jae
sbb
jmp
retf
test
and
in
repnz
or
imul
jp
fcmovbe
ds
pushaw
mov
iret
dec
sbb
xchg
fsub
neg
popf
loopne
lea
xor
ja
or
dec
icebp
lahf
pop
jle
cli
clc
mov
lods
mov
imul
jl
mov
lods
ins
xor
xchg
push
addr16
js
in
add
mov
xor
bound
ja
or
push
gs
inc
(bad)
and
cwde
ja
aad
mov
mov
pop
ins
fsubr
dec
pop
inc
stos
xor
iret
jge
pushf
in
sub
shl
push
into
mov
xor
fs
cmp
mov
das
push
push
sbb
xchg
mov
cdq
jb
jnp
and
add
les
imul
cmps
xchg
lds
cmps
shr
aad
lock
add
cmps
xchg
sbb
cmps
out
test
hlt
test
push
dec
stos
je
xor
push
pop
sub
cmc
bound
into
fisttp
ins
out
push
popa
ret
(bad)
bound
inc
iret
dec
test
dec
xor
pop
scas
fcmovnb
es
mov
jno
dec
loop
mov
pop
iret
jmp
enter
mov
xchg
xchg
mov
pop
pop
push
jnp
hlt
fwait
sahf
std
retf
xchg
xchg
cmps
pop
cdq
aas
ror
xchg
sub
call
neg
into
retfw
jmp
dec
movs
mov
in
popf
retf
pop
stos
sbb
cmp
stos
neg
mov
inc
sbb
jbe
cmp
ror
jl
xchg
repnz
pushf
shl
mov
std
add
mov
xchg
jbe
movs
push
adc
push
adc
xchg
(bad)
pusha
dec
mov
scas
shl
push
mov
cmp
and
mov
ret
out
cmp
out
xor
and
push
add
adc
retf
mov
add
pop
aad
fstp
push
repnz
lea
dec
xchg
mov
lock
gs
adc
into
xor
xor
mov
push
mov
fstp
cmp
cmp
popf
and
or
(bad)
lea
mov
mov
pop
rcl
imul
mov
aam
bnd
pop
mov
retf
(bad)
retf
pop
shl
dec
cmp
js
push
mov
jb
(bad)
jmp
mov
imul
mov
xchg
mov
mov
mov
clc
add
mov
cmp
push
std
dec
push
jmp
pop
in
pop
dec
pop
dec
xor
gs
cwde
sti
sbb
gs
push
gs
fsub
xor
imul
sub
fs
cmp
data16
call
mov
xor
jmp
dec
inc
adc
mov
and
mov
int3
sub
stos
(bad)
in
sbb
dec
add
xor
mov
cmp
das
bnd
mov
(bad)
or
mov
cmp
adc
stos
ret
or
cmp
mov
jl
stos
xchg
sar
mov
or
(bad)
enter
test
xchg
mov
retf
xchg
je
sub
push
imul
push
jnp
(bad)
xlat
jl
xchg
stos
addr16
inc
cmps
lock
div
xor
mov
retf
mov
loop
jle
mov
push
xchg
cmp
jnp
dec
enter
test
cmp
sar
out
ins
outs
cmp
nop
push
cdq
pop
inc
es
dec
jmp
leave
mov
mov
icebp
xor
imul
sar
mov
scas
adc
or
xchg
nop
jl
xchg
push
jl
push
pusha
leave
xor
add
mov
movs
(bad)
repnz
cmps
inc
mov
rcr
push
int
dec
mov
bnd
ins
adc
aaa
dec
adc
pop
jl
scas
jae
fsub
mov
and
dec
inc
xor
mov
cmp
fidiv
ss
xchg
xor
pop
fsubr
jmp
daa
push
in
es
mov
scas
inc
shl
pop
jae
pusha
(bad)
mov
in
arpl
in
push
dec
mov
push
leave
dec
dec
movs
inc
jp
adc
std
mov
jmp
mov
mov
cmp
das
ins
popa
fld
push
shl
aaa
retf
aam
and
jge
(bad)
dec
ss
shl
mov
sbb
imul
mov
jnp
mov
dec
xor
mov
call
adc
dec
int
xchg
lahf
clc
xchg
(bad)
and
cmp
(bad)
ss
jae
dec
inc
out
rcl
ficom
mov
cs
in
dec
xor
es
adc
adc
fild
inc
ja
xor
sbb
and
xchg
lods
mov
enter
xchg
stc
add
jo
movs
mov
pop
adc
adc
fild
scas
mov
aad
push
mov
les
mov
mov
add
jo
dec
xor
fimul
xchg
dec
xor
adc
inc
push
xchg
mov
retf
push
or
jns
dec
inc
push
or
stos
mov
cmp
mov
stc
sbb
inc
inc
jo
adc
gs
push
retf
in
inc
xor
data16
cmc
push
fsubrp
dec
test
mov
lock
mov
movs
xor
test
ins
jb
jp
push
xor
dec
hlt
mov
bnd
or
jne
mov
les
movs
xchg
mov
fiadd
(bad)
retf
lods
and
fs
mov
cmp
add
mov
fsubrp
xlat
aaa
je
fdiv
les
jge
xor
scas
(bad)
and
add
call
(bad)
mov
cld
or
sbb
add
outs
ins
sbb
add
in
ins
pop
sub
je
enter
pop
xor
mov
sub
jne
and
or
mov
or
in
xor
adc
shl
imul
fdiv
cmp
sbb
addr16
mov
push
arpl
std
jbe
or
sub
sti
inc
aaa
addr16
cmp
ins
dec
and
ja
mov
imul
sub
repnz
(bad)
sbb
in
ret
neg
and
inc
sub
retf
jg
dec
dec
adc
fisttp
lods
sub
ds
repz
movs
lock
and
shl
or
adc
ins
sar
add
mov
xchg
cmp
dec
or
jge
lahf
sti
cmp
jle
dec
daa
pop
dec
in
fidivr
cmp
enter
in
fild
mul
cmp
sub
push
sub
mov
popa
mov
sahf
mov
es
jp
push
inc
xchg
test
sbb
iret
xlat
outs
ja
jo
and
inc
pop
call
pmuludq
std
test
int3
fcomp
inc
call
(bad)
jo
dec
fimul
sbb
stos
fs
mov
sahf
es
xlat
add
inc
or
or
jmp
ds
jae
mov
icebp
add
cli
jae
retf
adc
dec
test
retf
hlt
mov
xchg
je
in
rcl
adc
pop
and
fistp
sub
popa
jmp
int
push
ja
push
cmp
xor
and
mov
lea
stos
mov
adc
or
lahf
jae
cmp
lahf
and
cmp
daa
outs
int
mul
test
cmp
mov
loope
out
cli
aas
jl
lods
lock
xchg
push
aam
xrelease
xor
adc
stos
int
stos
sbb
dec
and
jo
push
sbb
fsubr
sub
leave
jmp
inc
sbb
adc
and
popf
xor
xrelease
test
adc
and
add
dec
xlat
int3
call
mov
xor
stos
rol
xchg
int
add
dec
add
mov
into
cli
add
cmp
mov
dec
push
pop
scas
pop
and
aaa
arpl
push
shl
and
popa
hlt
and
ja
push
call
scas
scas
pusha
imul
mov
jmp
mov
xor
and
test
or
movs
mov
lea
fcomp
xor
xor
and
ret
mov
sbb
out
loop
and
(bad)
retf
push
fdivp
mov
sbb
shl
inc
or
fwait
movs
stos
int3
adc
ins
stos
shr
cwde
dec
adc
lock
add
xchg
retf
imul
int
adc
loopne
mov
repnz
sar
les
ret
rcl
xchg
mov
and
xchg
ins
ret
inc
sbb
in
jmp
sar
rsm
adc
test
cmp
jp
loop
cmp
outs
jae
xchg
mov
loope
imul
cmp
test
push
fsub
mov
push
fsubr
push
test
(bad)
into
add
mov
into
adc
rol
nop
xor
mov
(bad)
pusha
retf
jg
xor
dec
loope
and
sub
loope
sub
pop
cli
hlt
das
iret
int
pop
dec
mov
fdivr
or
xchg
out
lods
bound
mov
mov
fstp
cmp
leave
xor
jecxz
shl
loop
cmp
jmp
mov
jecxz
loop
into
mov
test
adc
pop
mov
pop
rol
sbb
xchg
jo
and
jmp
aaa
in
js
dec
int3
test
sbb
sub
push
int3
movs
imul
in
adc
sbb
loope
sahf
cmp
iret
mov
repnz
(bad)
test
push
dec
push
cmps
mov
inc
adc
mov
ret
ja
or
or
cs
inc
xchg
sub
mov
push
cwde
push
pop
(bad)
fistp
jnp
sar
sbb
sbb
push
mov
call
and
sar
sub
mov
lea
js
dec
xchg
popf
enter
or
xor
and
dec
push
dec
lock
xor
mov
jecxz
xor
lahf
dec
mov
hlt
dec
or
mov
aaa
aam
mov
sub
cmps
sbb
xchg
inc
jns
js
push
inc
out
out
jb
add
mov
(bad)
int3
mov
mov
xor
mov
mov
js
dec
(bad)
add
les
retf
or
pop
mov
push
mov
leave
and
jno
jae
jg
xor
sar
sahf
cmps
xchg
out
mov
xchg
mov
cmp
cmc
aaa
inc
(bad)
shl
enter
data16
adc
vmovaps
outs
ret
pop
retf
and
cmp
mov
jno
xor
cli
inc
lds
jns
dec
push
pop
dec
gs
push
fdivr
(bad)
sub
arpl
fwait
xchg
jbe
fidivr
(bad)
xchg
outs
fs
cmp
jl
mov
clc
pop
rcl
in
and
push
faddp
mov
sub
test
(bad)
xlat
sbb
test
cmp
loop
pop
clc
rol
rol
mov
push
inc
test
enter
call
inc
push
(bad)
jmp
(bad)
xor
arpl
scas
call
mov
xor
add
lods
mov
loopne
sete
mov
fisub
icebp
xor
in
xlat
cli
das
pop
movs
inc
fist
xchg
mov
call
push
daa
into
retf
imul
pop
movs
in
les
mov
jge
loop
mov
dec
cmp
iret
idiv
and
in
jae
sti
mov
jp
retf
icebp
pop
idiv
jecxz
es
mov
xchg
xchg
push
jmp
test
imul
push
sub
bswap
call
fldenv
mov
cdq
sub
xor
lahf
bnd
cmps
pop
add
sahf
arpl
or
cli
test
cmp
push
stc
adc
std
sbb
pop
shl
cwde
jbe
mov
ds
mov
jl
jb
xchg
xchg
int
mov
mov
clc
bound
mov
inc
pop
aad
jp
retf
test
lea
test
mov
aas
add
mov
rol
jno
mov
xchg
adc
in
and
add
inc
xlat
mov
jg
call
dec
movs
jb
imul
ror
ds
rol
gs
ins
cmc
movs
hlt
sbb
pop
push
xlat
xchg
cmp
push
adc
pop
or
call
and
add
stos
add
rcl
ret
sub
sbb
mov
fld
jl
sub
mov
xchg
and
or
imul
(bad)
xor
or
jne
and
ss
fild
mov
lods
push
mov
fcomip
xchg
dec
push
pop
mov
xor
bound
js
(bad)
cdq
xlat
lods
cmp
push
mov
push
popa
sahf
sar
mov
jge
add
dec
mov
push
cdq
daa
aas
or
sbb
sub
push
icebp
cmc
push
mov
aad
(bad)
jmp
movs
inc
cmp
sahf
mov
fsub
in
mov
sar
call
add
mov
imul
mov
fbld
sahf
call
sub
jecxz
push
cli
mov
push
mov
(bad)
sub
mov
inc
in
fidivr
imul
mov
fsubr
(bad)
int3
fwait
ret
sbb
call
ror
es
mov
inc
mov
loope
dec
out
push
(bad)
(bad)
iret
and
rol
lds
mov
xor
dec
gs
sub
lock
neg
movs
pop
clc
dec
mov
fst
in
sub
std
jge
sub
sahf
ins
div
sub
aad
push
mul
xor
cmp
repz
adc
xchg
call
add
fst
jecxz
jnp
ret
es
push
int
out
iret
fsub
daa
xchg
and
inc
sub
std
or
(bad)
mov
aam
mov
and
or
xchg
nop
test
fs
mov
and
pop
sti
fstp
push
jecxz
push
scas
add
pop
pop
sbb
out
rol
lahf
mov
mov
repz
push
mov
loopne
loop
pusha
inc
sub
(bad)
pop
movs
fcomp
out
and
je
inc
jmp
pop
mov
or
fld
lods
xchg
je
mov
or
ficom
out
retf
out
sub
out
xchg
push
mov
shl
bound
lahf
in
push
sar
hlt
leave
jle
pop
fwait
push
shr
pop
mov
icebp
(bad)
ja
fld
test
push
xchg
imul
mov
mov
div
dec
sbb
jle
lods
(bad)
push
push
mov
xchg
mov
retf
mov
cmp
add
out
clc
sub
imul
mul
sub
pusha
out
mov
das
test
dec
dec
cdq
push
shr
or
push
lea
sbb
push
fidivr
adc
sub
mov
gs
imul
fldcw
shr
icebp
dec
jno
scas
adc
or
int
dec
lods
dec
shl
jge
sbb
mov
sub
scas
or
pusha
fmul
scas
sbb
sbb
inc
enter
inc
sub
sbb
or
inc
pusha
mov
aaa
add
nop
(bad)
dec
sub
xlat
adc
repz
scas
iret
out
lock
pushf
(bad)
shr
xchg
cmc
mov
or
jle
outs
jmp
in
jae
cmp
int3
inc
jo
(bad)
mov
mov
inc
mov
jne
push
ds
and
jle
mov
sub
mov
cmps
out
cli
icebp
xchg
xor
push
inc
pushf
ret
adc
push
dec
push
cdq
jl
xor
nop
mov
cmp
or
mov
push
jbe
pop
mov
cmp
jge
in
fstp
pop
push
mov
xchg
mov
outs
sbb
in
pop
jmp
test
fdivr
mov
dec
jecxz
das
mov
adc
nop
sub
push
push
pop
adc
push
and
xor
jae
into
shr
clc
xchg
cmp
add
push
xor
gs
mov
dec
fstp
jecxz
push
add
cmc
xchg
repz
js
imul
stc
adc
scas
jae
(bad)
jg
push
push
mov
out
cmp
test
mov
outs
mov
pushf
imul
cld
or
adc
mov
lea
(bad)
pusha
mov
jmp
jne
sub
into
jbe
jmp
inc
int3
xchg
add
std
in
mov
fidiv
sbb
cmc
mov
loop
dec
pop
jge
cmp
add
int
add
call
lea
out
ins
or
jecxz
push
xchg
or
push
(bad)
adc
call
sbb
xor
leave
xchg
cli
xchg
nop
rcr
es
(bad)
jecxz
mov
xor
xsaveopt
xchg
push
cmp
imul
push
into
mov
sub
rcr
mov
aad
jno
dec
mov
push
dec
push
cmp
push
aad
aaa
adc
loop
push
push
jle
in
(bad)
adc
jmp
ins
xor
jne
pop
repz
repz
mov
or
daa
sbb
fcmovu
pop
sti
retf
or
push
pop
loop
dec
cmp
arpl
adc
cmp
jae
pop
rcr
fcom
sub
mov
ret
xchg
inc
mul
pop
mov
aas
cmp
sub
mov
stos
cmp
xchg
aad
jae
mov
ins
vpcomuw
int3
sub
inc
cli
adc
push
lds
xor
sbb
push
std
aam
mov
or
je
add
hlt
(bad)
fnstenv
mov
sub
jne
fsub
les
mov
mov
or
je
iret
dec
sub
bound
mov
push
mov
cmp
sub
nop
push
and
jle
ja
fwait
xbegin
cli
mov
inc
sub
gs
sbb
gs
sub
inc
fist
add
pop
rol
cmc
or
ss
push
mov
push
adc
lea
mov
(bad)
mov
push
in
stos
jmp
mov
pop
call
mov
daa
iret
and
test
(bad)
mov
mov
sti
push
(bad)
clc
jp
fs
cs
sti
cmp
int3
adc
test
pop
xchg
sub
(bad)
xchg
xchg
jmp
clc
cmp
ret
adc
int3
shl
and
xchg
xor
mov
and
call
push
cld
adc
pop
dec
test
jecxz
jmp
xor
push
outs
adc
mov
jnp
push
cmp
cmp
retf
xor
adc
xchg
test
bound
stc
rcl
jnp
push
stc
stos
fiadd
paddusb
std
pop
adc
shl
mov
rol
mov
arpl
mov
jl
adc
xor
stos
and
dec
int3
or
mov
dec
xchg
(bad)
(bad)
(bad)
leave
std
call
ret
mov
and
pop
sub
and
jp
test
pop
movs
jns
movs
push
jmp
add
into
push
rcl
mov
push
fs
cs
mov
not
cwde
pushf
add
ins
xchg
jno
mov
mov
sbb
paddusw
fs
ins
sbb
mov
sbb
sar
dec
dec
sbb
aas
popf
iret
fsubr
fmul
js
dec
nop
xchg
adc
ss
pop
idiv
mov
add
mov
sbb
inc
mov
fidiv
mov
int
test
sar
push
xor
outs
jne
pop
jb
dec
(bad)
loopne
fcomp
cmpxchg
fidivr
jbe
xor
std
jbe
setle
lods
or
pop
sub
pushf
push
adc
in
xor
xchg
(bad)
push
sub
dec
in
xchg
add
sub
mov
add
out
or
jl
adc
and
fsub
cwde
or
jge
pop
mov
xor
retf
mov
sar
jl
sahf
or
jmp
inc
js
ss
xlat
add
push
scas
loop
test
adc
(bad)
push
mov
add
aam
dec
rcl
lods
cwde
(bad)
fstp
mov
and
mov
dec
add
add
sahf
xlat
fldcw
inc
les
inc
fcmovu
mov
shl
iret
and
fs
or
jnp
test
imul
repz
lods
inc
and
outs
aam
jmp
bound
adc
jno
mov
xor
fbld
push
loope
mov
mov
mov
push
xchg
xchg
outs
bound
inc
sub
fstp
jmp
int3
inc
sbb
adc
rcr
xchg
neg
adc
hlt
mov
in
jmp
pop
xor
cmps
pop
cmp
cmps
jns
dec
mov
pop
dec
rol
popf
jo
adc
loope
xchg
je
push
jb
stos
sbb
retf
cmp
(bad)
jno
sar
push
xchg
sbb
or
mov
or
(bad)
(bad)
mov
and
jne
aam
test
mov
ss
(bad)
out
mov
popa
popf
mov
sub
ins
repz
lea
test
sbb
mov
imul
clc
loope
leave
fsubr
lds
call
stos
popa
pop
iret
jns
xchg
sub
pop
add
sub
rcr
iret
mov
retf
add
jmp
and
das
sbb
add
frstor
cmc
sub
push
adc
pop
push
mov
test
cli
or
push
cld
jno
cmp
mov
sub
aad
out
and
mov
lods
add
dec
xchg
pushw
jmp
scas
ins
cld
jmp
popa
mov
js
fs
jmp
sub
jno
adc
cmp
imul
sbb
mov
jg
mov
pop
pop
popf
cli
out
mov
xchg
sbb
mov
idiv
add
dec
fcmovu
pop
lea
lea
lods
dec
(bad)
mov
data16
jno
mov
loope
call
push
stos
std
mov
in
dec
mov
or
sub
loop
pop
dec
jb
inc
xor
jp
dec
int3
hlt
push
add
sar
loop
push
stc
int3
jns
cmp
sub
out
pusha
jno
pop
push
std
fdivr
not
scas
std
cmp
push
jns
push
add
test
add
inc
fld
enter
inc
push
outs
pop
add
in
jbe
add
not
lds
xor
jecxz
xor
retf
inc
icebp
movsx
jmp
pop
xor
out
fisttp
add
data16
sbb
movs
imul
mov
xchg
mov
pushf
out
add
jo
jmp
rep
fwait
push
popf
inc
cmp
(bad)
sbb
loope
inc
ds
pop
and
cmp
ds
cmp
cmp
push
push
mov
in
pop
adc
dec
loop
mov
call
ret
pop
aad
nop
xchg
ret
mov
push
stos
fdiv
bound
clc
rol
out
mov
test
inc
and
clc
xchg
add
mov
or
fcmovu
in
(bad)
mov
mov
xor
jnp
fwait
xor
jg
mov
(bad)
mov
neg
rcl
aaa
movs
aam
ss
sbb
inc
aad
fadd
shl
out
xchg
or
imul
shl
push
or
dec
mov
call
push
test
xchg
jns
or
xchg
pusha
arpl
inc
or
jle
jb
sub
jmp
ds
(bad)
out
adc
mov
dec
pushf
not
mov
cwde
das
in
and
(bad)
fimul
add
ja
movs
sub
das
adc
mov
push
lock
sub
mov
fdivr
(bad)
stos
aam
outs
int3
xchg
jns
jno
repz
mov
fucom
push
fimul
lock
add
mov
or
jnp
xchg
xchg
inc
mov
mov
sbb
lods
add
retf
je
out
lock
xor
push
or
retf
push
pop
adc
jl
shr
out
xor
xor
mov
push
outs
imul
add
or
cmp
pop
adc
lods
add
shl
adc
and
pop
rcr
(bad)
cmp
push
es
loop
inc
xchg
sbb
cld
movs
add
pop
test
retf
push
in
dec
mov
jle
mov
addr16
movs
xor
jae
mov
mov
into
rcpps
mov
add
xchg
push
outs
out
sub
aaa
inc
lea
(bad)
out
jecxz
inc
add
outs
std
mov
mov
lods
push
inc
call
icebp
jno
adc
push
push
sti
ins
sbb
sar
ror
inc
cli
mov
ins
push
inc
jge
xchg
jo
inc
mov
shl
cmc
int
movs
sub
jbe
adc
enter
xor
inc
push
jecxz
sbb
and
ins
jae
jg
nop
test
(bad)
xor
mov
adc
xor
dec
dec
fild
bound
push
gs
mov
mov
ja
lock
push
(bad)
aas
je
call
mov
cmp
pop
icebp
mov
sbb
dec
and
lods
icebp
sbb
test
pop
push
mov
pusha
lods
sahf
neg
mov
sahf
push
retf
inc
xor
aaa
pop
cld
ret
dec
fs
mov
mov
cwde
xor
xor
out
mov
inc
push
cmp
mov
retf
xchg
ds
xchg
or
jp
sbb
test
xchg
push
xchg
fld
sbb
xchg
rol
lea
enter
cmps
pop
jmp
xor
repz
jno
repnz
mov
xchg
cmps
outs
fidivr
dec
pop
dec
ins
add
mov
sbb
pop
lea
cwde
scas
out
xchg
adc
inc
test
inc
xlat
imul
retf
mov
loopne
fadd
mov
add
pop
(bad)
dec
cmps
in
retf
sbb
pop
xchg
mov
xchg
mov
mov
loopne
rcr
mov
xchg
sbb
js
sbb
aaa
outs
cmps
clc
and
fbstp
and
enter
push
inc
daa
aad
adc
pushf
test
push
ror
push
sub
sbb
add
jnp
iret
out
pushf
dec
ror
popf
into
nop
or
gs
mov
push
and
mov
inc
scas
ins
inc
jg
rcl
scas
std
je
sub
cmp
ret
pop
repnz
aaa
jg
and
jmp
out
and
xchg
jne
ret
je
scas
fsub
mov
or
adc
push
mov
in
std
test
adc
retf
cld
sbb
push
(bad)
sbb
mov
iret
xchg
dec
int
dec
dec
add
les
mov
(bad)
pop
iret
and
mov
and
nop
fs
adc
mov
jp
ja
test
jmp
fwait
push
ins
push
dec
ret
outs
inc
adc
popa
data16
push
and
adc
or
jp
push
mov
push
in
outs
ret
clc
dec
pushf
lods
adc
cmp
ins
pop
out
dec
xor
or
mov
cmps
xor
push
pop
ret
emms
stos
dec
jg
shl
lock
mov
loop
push
add
xor
inc
fcom
push
xchg
xchg
pop
cmp
fsubr
cld
(bad)
out
push
and
jo
cmp
push
mov
inc
nop
imul
lods
in
(bad)
(bad)
les
ret
xor
icebp
pop
les
scas
jbe
xchg
(bad)
lods
movs
in
in
in
jnp
mov
cmp
dec
test
pusha
pop
ret
xor
test
loope
sub
sbb
mov
fincstp
lock
push
mov
add
retf
push
mov
xor
inc
cmps
cmc
adc
mov
sub
xlat
lods
aam
ds
pop
in
inc
call
push
hlt
lock
mov
xor
jae
inc
and
loope
mov
inc
fwait
test
mov
pop
sub
mov
xor
sub
pop
add
arpl
ds
ret
ja
and
enter
add
sbb
push
sub
shl
js
push
add
xor
ja
enter
js
mov
sbb
ficom
pusha
xchg
xchg
and
arpl
dec
popf
es
xor
add
add
(bad)
fdiv
mov
outs
or
or
xchg
ffree
mov
fs
mov
retf
xlat
sub
ins
movs
stc
mov
sar
sbb
push
and
lds
xchg
clc
xlat
jp
and
scas
loop
jle
shl
stos
sbb
inc
out
inc
xor
lahf
adc
je
shr
repnz
daa
lods
dec
outs
add
pop
loope
sbb
inc
(bad)
mov
prefetcht1
add
jno
test
cmc
lds
es
and
test
int
push
mov
cmc
add
mov
clc
pop
pop
in
scas
cmp
retf
imul
inc
jmp
dec
dec
mov
ret
push
lods
paddsb
mov
dec
test
pop
pusha
adc
inc
hlt
nop
push
jg
jmp
pop
jo
out
inc
inc
lods
fnsave
stc
sub
mov
and
mov
(bad)
movs
jmp
aad
xor
mov
ss
repz
mov
rcl
push
mov
fild
mov
movs
jno
cdq
or
mov
les
dec
or
and
xor
cmp
popa
ins
sbb
loop
jns
(bad)
push
ds
das
adc
xchg
into
test
icebp
xor
xchg
jno
lods
aaa
sar
nop
adc
sub
lea
cld
sub
push
stc
not
out
popf
adc
inc
adc
pop
push
test
shr
cmp
imul
cld
cmp
cdq
xlat
retf
inc
inc
dec
lods
and
adc
sub
mov
push
xchg
jp
aaa
std
aas
out
mov
and
push
mov
and
add
inc
fild
aaa
push
inc
sbb
xor
sbb
aaa
rol
pop
xor
mov
mov
sbb
mov
lea
retf
push
in
mov
push
scas
mov
sub
stos
dec
push
mov
(bad)
loop
jecxz
push
jle
(bad)
mov
pop
icebp
rcr
aad
mov
inc
sub
xchg
push
sbb
sbb
or
shl
hlt
xchg
mov
dec
sbb
add
mov
int3
scas
push
call
loopne
je
test
xor
jge
repz
dec
loop
xchg
fld
mov
retf
mov
stos
fcmove
sub
xor
pushf
in
add
lea
es
ficomp
iret
rol
mov
sub
cs
je
cmp
iret
pop
add
ss
cmp
pop
enter
test
and
sub
jb
enter
push
sub
push
rsm
cmp
xor
adc
fisub
ret
jg
cmp
cmp
and
ficomp
or
mov
mov
push
mov
mov
(bad)
mul
sbb
(bad)
test
sbb
pop
mov
leave
(bad)
xchg
push
fist
jecxz
xor
xchg
ins
dec
je
pop
fcmovb
cli
jp
xchg
gs
je
pop
aam
jmp
popa
mov
sbb
push
repnz
hlt
inc
mov
adc
dec
or
xchg
xchg
adc
cs
cwde
xchg
mov
cmp
aas
imul
dec
mov
mov
jo
cmp
pop
fimul
cmc
in
inc
inc
xchg
xor
mov
neg
xor
mov
nop
mov
xchg
sbb
sahf
int
and
xchg
loope
cmc
or
fbld
cmc
icebp
outs
pop
lock
push
ret
mov
jl
(bad)
aam
cmc
cmp
lods
popa
cmp
daa
aaa
js
mov
sub
lds
push
mov
lods
add
and
std
loop
sahf
xchg
add
dec
jne
stc
xchg
aam
nop
pop
pop
and
jae
stc
mov
ror
call
test
or
rol
push
mov
arpl
fldcw
sti
pusha
mov
xchg
mov
adc
lock
jle
push
inc
stos
cli
xlat
nop
and
or
sub
cmp
bnd
outs
out
daa
push
mov
rcl
nop
aad
inc
push
xlat
outs
xor
mov
inc
int
test
in
loopne
or
clc
cmps
popf
xchg
ja
lahf
cs
test
cmp
fsub
test
dec
cli
(bad)
cmp
scas
mov
repz
sub
outs
stc
retf
cmp
sub
test
jle
shl
sar
arpl
cmps
fistp
pusha
push
mov
(bad)
ret
shr
(bad)
lods
jne
xchg
inc
mov
dec
mov
stc
retf
(bad)
mov
xchg
ja
mov
mov
adc
loopne
push
out
mov
(bad)
out
(bad)
sub
add
addr16
adc
or
or
cld
imul
ins
xchg
call
jle
push
neg
cmps
dec
pop
bound
shl
in
ret
add
xor
and
adc
mov
aas
adc
jp
sbb
xchg
mov
outs
inc
in
cmp
lock
pop
xchg
cwde
(bad)
or
gs
mov
aaa
jle
push
cmc
aam
in
fsub
mov
out
xchg
xor
push
out
out
cmp
cmp
test
pop
inc
and
pop
frstor
lods
addr16
(bad)
sti
loop
jg
jge
cmp
popw
ss
or
inc
stos
mov
add
int
sub
mov
adc
outs
int3
out
call
push
mov
jl
inc
test
push
cmp
pop
and
int
(bad)
sbb
sub
push
xchg
and
cwde
imul
add
js
cmp
das
lds
jl
jp
pushf
sahf
sbb
loope
pop
sbb
call
inc
xchg
cmp
cmp
mov
adc
mov
inc
mov
pop
mov
jbe
inc
push
fist
cdq
icebp
push
push
adc
pop
loop
call
dec
ss
icebp
repnz
or
mov
retf
sti
mov
xchg
retf
inc
nop
inc
(bad)
xor
jno
push
pop
cmc
ret
call
pop
sbb
loop
pusha
call
call
sub
mov
mov
and
inc
inc
pop
dec
push
faddp
ins
popa
dec
sbb
shr
ds
les
cmp
sbb
jecxz
imul
sub
cmp
cmp
inc
ds
jmp
sub
jle
mov
retf
xor
inc
adc
movs
(bad)
sbb
arpl
(bad)
push
xchg
add
(bad)
mov
cdq
outs
and
fiadd
sub
jle
jne
adc
rcr
jnp
fcom
mov
sub
out
arpl
adc
cmp
or
jg
jne
mov
(bad)
mov
mov
sbb
mov
jne
push
sub
(bad)
and
stc
hlt
add
sar
xchg
cli
jp
and
aas
out
or
lock
mov
inc
or
cs
adc
lea
push
sti
je
icebp
inc
pop
call
xor
mov
inc
repz
or
das
inc
xchg
test
jb
inc
(bad)
mov
iret
mov
aas
push
mov
fcom
sub
push
adc
cmp
in
sti
or
and
add
sbb
jle
cmps
mov
lea
in
jae
mov
and
cs
xchg
pop
and
mov
xchg
test
add
cli
rol
daa
sbb
add
pop
jne
pop
mov
retf
movs
and
pop
ret
jnp
dec
out
pusha
mov
imul
jmp
sub
js
inc
ret
mov
cmp
jb
sbb
retf
adc
hlt
hlt
add
or
mov
jns
inc
frstor
or
sbb
pop
mov
inc
mov
cmp
(bad)
xchg
and
add
ret
movs
dec
sbb
cmp
mov
add
jmp
repz
sbb
lds
pop
cmp
xor
ds
jae
call
mov
mov
push
call
pop
call
xchg
sbb
dec
mov
and
rol
xor
icebp
out
popf
or
pop
xchg
mov
mov
mov
out
cmp
sbb
ret
pop
mov
fstp
xchg
punpcklbw
shl
in
xchg
and
and
sub
adc
addr16
inc
dec
xlat
sub
mov
or
push
pop
test
xchg
clc
push
cmp
iret
aaa
jp
aam
test
push
xchg
retf
sahf
cli
cmp
imul
imul
add
sub
or
iret
data16
dec
add
pop
adc
add
movs
push
ret
cmp
or
pop
loope
inc
inc
xchg
out
cld
xchg
repnz
aas
frstor
pop
mov
push
cwde
in
jmp
xchg
mov
or
cmp
lods
pushf
or
pop
repz
(bad)
and
out
cmps
fucomi
(bad)
lods
jnp
mov
ficom
loopne
add
or
adc
pop
cmp
sbb
lahf
outs
bound
fsubr
(bad)
mov
ss
adc
scas
push
adc
dec
pop
push
inc
mov
cmps
adc
mov
push
jno
fist
dec
or
je
dec
inc
xor
xchg
jmp
(bad)
and
outs
mov
jl
mov
rcl
jmp
sub
add
inc
call
les
es
xchg
je
dec
cmp
pusha
(bad)
shl
pop
sbb
je
call
mov
(bad)
test
or
ror
fabs
pop
cli
test
fwait
jmp
jg
mov
ficom
mov
retf
ror
enter
in
mov
or
dec
xchg
inc
ins
jae
push
sbb
aas
inc
sub
jecxz
cld
es
jecxz
sti
(bad)
ss
adc
sbb
and
pop
cmp
mov
int3
mov
xchg
pop
cld
cdq
cmps
ss
cmp
xor
(bad)
mul
sub
push
and
add
in
mov
mov
or
xchg
push
xchg
clc
sub
lahf
cwde
pushf
in
mov
test
cmp
sbb
stc
lea
add
and
push
ror
add
and
mov
into
push
icebp
adc
add
call
mov
(bad)
pop
lock
push
das
sbb
xchg
mov
cs
je
in
sub
das
jmp
rol
fwait
xchg
or
push
xchg
xchg
dec
cmps
push
mov
and
pop
push
aas
inc
out
sbb
cmp
loop
ds
test
sub
lahf
jne
call
jmp
retf
jbe
bswap
cs
icebp
scas
and
imul
or
stos
xor
cwde
sub
dec
mov
scas
addr16
dec
mov
frstor
(bad)
mov
lock
xchg
jbe
cli
or
out
push
xchg
test
outs
pop
lahf
push
stc
fwait
jecxz
popf
arpl
pushf
std
or
call
(bad)
push
mov
jecxz
dec
jmp
repnz
in
mov
xchg
mov
sbb
mov
scas
mov
adc
sti
cmp
dec
or
push
enter
mov
xor
rcl
popa
mov
loopne
or
lods
rcl
adc
inc
push
pop
adc
into
adc
call
and
aam
test
cmp
(bad)
jo
push
sti
inc
or
call
add
(bad)
call
cmps
add
retf
mov
or
mov
pop
cmp
jl
or
retf
pop
cmc
out
xor
adc
nop
lahf
out
iret
ds
fidiv
ja
test
loopne
or
and
jle
retf
ret
inc
ret
ins
dec
arpl
xlat
gs
sbb
inc
xor
leave
movs
mov
or
push
adc
sbb
and
add
aaa
xlat
dec
mov
std
mov
jb
fucompp
iret
hlt
dec
pop
add
sub
pop
mov
lods
fiadd
out
fnstsw
xor
lods
imul
pop
jae
xadd
dec
cmp
or
das
xlat
test
dec
xchg
push
loop
adc
movs
ret
pop
movs
mov
(bad)
fsubr
inc
push
dec
ins
add
cmp
in
nop
xchg
mov
jle
stc
mov
in
mov
dec
repnz
sti
and
int3
ja
adc
adc
jecxz
fisttp
sbb
mov
and
sbb
mov
adc
xor
lods
and
adc
adc
push
cmps
lods
cld
mov
(bad)
js
das
imul
scas
fstp
jae
outs
in
push
xor
jge
ins
pushf
out
shl
mov
sbb
in
mov
leave
and
cld
inc
lahf
daa
or
scas
add
dec
cmp
call
inc
call
(bad)
pop
add
adc
push
pushf
xchg
stos
repz
fbstp
xlat
mov
jbe
mov
inc
sbb
ds
gs
ins
ret
js
xchg
rcr
addr16
cs
popf
ins
retf
push
mov
push
push
iret
out
js
push
dec
pop
mov
test
pop
mov
and
mov
or
popf
push
mov
inc
dec
mov
pusha
adc
xor
jmp
aas
jmp
idiv
(bad)
dec
mov
pop
(bad)
add
aas
xlat
xchg
cmc
adc
cwde
fs
inc
loope
push
aad
pop
sbb
inc
addr16
inc
stos
dec
or
mov
ins
out
sbb
push
cmp
cmp
inc
mov
retf
jmp
lods
popa
push
dec
iret
daa
mov
les
adc
lea
pop
ss
xor
push
aad
(bad)
gs
mov
add
sbb
or
test
loop
ja
xor
push
add
outs
or
cmc
(bad)
jge
push
cmps
jmp
inc
stos
ret
push
xor
out
(bad)
popf
jnp
addr16
add
cmp
or
bound
jns
hlt
sbb
xchg
jo
mov
jge
fiadd
push
or
add
retf
mov
push
mov
mov
lahf
xrelease
iret
iret
sbb
inc
mov
js
imul
in
icebp
sbb
and
mov
xchg
cmp
dec
aaa
and
out
sub
jae
lods
push
or
jg
mov
sub
outs
dec
xor
movs
test
pop
inc
dec
leave
in
jg
add
adc
cs
jo
sbb
jge
into
ret
jecxz
push
mov
test
sub
shr
jg
enter
mov
call
mov
xchg
and
mov
push
or
repnz
jns
out
les
cdq
xor
ja
pop
inc
xchg
add
cmp
push
push
call
mov
adc
dec
jle
loop
pusha
popa
jle
jp
fcom
push
push
mov
cmp
mov
add
sub
enter
jmp
mov
mov
loope
dec
push
cdq
xor
cmp
js
adc
fucom
xor
dec
adc
sbb
inc
fst
call
sub
push
inc
xor
ins
jecxz
mov
adc
and
lods
dec
xor
sbb
not
adc
dec
cwde
imul
push
sub
or
and
push
mov
retf
and
adc
aad
push
rcr
jmp
cmp
lods
mov
ja
jo
dec
xchg
push
(bad)
(bad)
popa
sbb
popf
push
out
pop
bound
inc
inc
adc
xchg
xchg
mov
mov
js
mov
push
fwait
call
test
cmps
pop
pop
arpl
call
pusha
push
lds
mov
jo
ficom
imul
xchg
pushf
ja
in
pop
mov
(bad)
nop
pop
mov
cmp
jns
in
push
or
rcl
sbb
pop
scas
dec
xor
fadd
xor
mov
movs
jno
sub
repz
jp
movs
stc
dec
xor
push
adc
mov
mov
and
in
xchg
inc
jno
sbb
fiadd
faddp
mov
xchg
jmp
in
popa
sbb
jns
jg
iret
test
arpl
stc
popa
push
inc
mov
push
bound
retf
loopne
cmp
cwde
arpl
xchg
xor
jnp
iret
aas
xchg
adc
sbb
cdq
mov
mov
inc
aaa
stos
inc
idiv
mov
(bad)
mov
push
xchg
int
aas
lods
aaa
ror
les
sub
daa
push
xor
and
test
push
and
leave
imul
xchg
ja
cmc
sar
sar
cld
jnp
shl
call
test
dec
into
out
bound
loope
pop
js
xchg
inc
clc
repnz
pop
movs
jmp
pushf
test
or
inc
rol
sub
mov
out
(bad)
pusha
(bad)
out
enter
fdivr
inc
jmp
push
stos
and
sbb
and
inc
rol
fwait
sbb
xchg
or
cmps
sbb
popa
dec
imul
or
out
and
xchg
in
cmp
mov
xor
or
rol
and
cld
stos
movs
ja
xor
xchg
jecxz
add
cmp
and
test
adc
pop
push
pop
mov
dec
mov
bound
mov
push
add
jmp
mov
nop
adc
aam
sub
fisttp
ror
arpl
addr16
cwde
xlat
sub
das
inc
aas
push
jnp
aad
pop
mov
cmc
cmps
int3
fldenv
mov
sbb
and
mov
lods
icebp
lds
sti
cs
test
jp
int3
mov
cmp
daa
adc
inc
cli
dec
jns
(bad)
in
or
aam
lods
rol
jmp
mov
xchg
cmp
jp
push
sub
xor
leave
push
sub
vshufps
(bad)
loopne
mov
int3
jae
cli
loopne
add
iret
xor
cwde
jb
ins
push
movs
hlt
lds
psubusw
out
(bad)
cld
and
sub
retf
mov
arpl
mov
imul
(bad)
cs
std
pop
cwde
pop
stos
dec
sub
adc
sbb
pop
and
nop
lds
loop
mov
add
cmp
ds
and
push
push
cdq
push
(bad)
not
adc
mov
sub
test
sar
add
cmc
rcr
jnp
sub
mov
inc
lods
movs
out
iret
aaa
out
or
lock
cwde
add
mov
add
push
sub
xor
mov
inc
lea
icebp
outs
add
pop
iret
imul
jge
fst
(bad)
idiv
leave
cwde
xor
ss
shr
movs
fmul
jne
adc
adc
jb
in
ret
scas
lods
cmc
dec
pop
mov
hlt
pop
aam
ror
xchg
xor
(bad)
jp
test
sar
cmp
pop
test
xchg
add
xchg
ror
retf
push
leave
inc
clc
outs
jnp
(bad)
popa
xor
pop
xchg
mov
fdivr
mov
pop
jmp
retf
pop
dec
es
iret
push
(bad)
or
pop
(bad)
adc
push
(bad)
clc
push
and
(bad)
(bad)
popa
leave
movs
or
imul
inc
sti
int
jno
cld
scas
or
cmp
pop
jne
stos
sub
pop
mov
sbb
pop
sbb
aad
test
ret
cmp
(bad)
adc
mov
out
outs
push
lods
sahf
enter
dec
shl
cmc
loope
cmp
je
push
mov
inc
(bad)
pop
movs
xchg
rcr
(bad)
bnd
les
push
cld
movs
cmp
repz
pop
bound
add
in
sbb
xchg
cmp
dec
addr16
shr
stc
outs
pop
fcomi
das
mov
cmp
xlat
jg
enter
jl
ret
and
aas
clc
fnsave
imul
cmps
add
std
mov
jb
push
jb
repz
pop
das
jg
sbb
add
xor
stc
push
xlat
add
mov
fbld
push
popa
stc
jl
or
int
push
cmp
test
add
nop
push
rcl
movs
int
inc
lods
cmp
xor
in
pop
fldenv
mov
and
arpl
push
jae
sub
or
dec
mov
sub
lods
pop
stos
les
mov
xor
(bad)
cli
arpl
syscall
fs
lock
mov
mov
adc
out
cwde
gs
imul
sbb
push
jge
iret
mov
stos
fnsave
mov
mov
lods
js
imul
mov
mov
fbstp
inc
jmp
push
retf
imul
(bad)
xchg
cmps
ror
dec
in
dec
adc
xchg
mov
outs
aam
ds
stos
jp
pop
adc
lahf
ins
add
add
pop
iret
seta
xor
movs
dec
ins
jp
sbb
std
pop
push
jbe
pushf
mov
xor
inc
aad
mov
dec
stc
mov
test
jmp
mov
fs
arpl
mov
adc
xchg
pop
lahf
aas
jbe
push
push
shl
jg
push
mov
(bad)
pop
std
dec
(bad)
in
jne
push
std
dec
fdivr
mov
mov
jmp
div
icebp
nop
pop
mov
jbe
cmp
test
jnp
sub
or
jmp
push
inc
push
jbe
pop
test
lods
call
jne
push
and
das
xor
mov
aad
or
mov
jbe
stc
test
xchg
(bad)
jl
retf
mov
push
std
jp
or
cwde
sub
push
inc
inc
(bad)
es
mov
mov
cmp
fwait
adc
shr
pop
ja
add
push
cmp
test
dec
xor
xor
shr
imul
inc
ins
or
jg
jno
jmp
xchg
or
icebp
test
adc
outs
sub
ds
dec
loope
stos
add
mov
sahf
je
mov
mov
or
cpuid
ret
xor
mov
adc
cmp
je
add
fcom
pop
aas
pop
adc
pushf
mov
pushf
lock
push
mov
pop
jbe
sbb
ins
scas
sbb
movs
jmp
(bad)
cld
sub
aam
imul
cmp
sbb
mov
mov
mov
pop
xchg
aas
adc
sub
mov
(bad)
sub
iret
aad
and
and
jg
inc
std
push
out
jmp
adc
fwait
cdq
jns
retf
inc
and
retf
or
icebp
mov
lock
movs
addr16
adc
inc
sbb
jo
fisttp
sub
pop
ins
int
pop
push
mov
push
xor
cmp
mov
adc
jne
jl
mov
mov
fist
aad
add
ins
mov
in
shr
adc
mov
stc
repz
cld
push
adc
pop
gs
popf
or
sbb
ds
inc
sub
xor
cmovne
jne
(bad)
jae
jmp
test
add
das
xchg
mov
cld
test
clc
mov
mov
mov
retf
jge
push
mov
out
adc
aad
pop
push
jb
sbb
mov
jne
push
pop
mov
js
mov
jmp
gs
push
imul
sub
jne
push
repz
aaa
xchg
push
jecxz
pop
pop
aas
inc
out
je
mov
cli
mov
or
(bad)
inc
mov
sbb
ret
js
xchg
jp
xchg
dec
inc
cmp
dec
lods
mov
add
jno
stc
sbb
adc
mov
push
mov
xchg
inc
ficomp
mov
and
and
pop
mov
clc
or
adc
lock
sub
daa
or
mov
mov
int3
dec
mov
out
push
mov
movs
fnstsw
jns
rol
xor
fld
pop
and
cmps
hlt
push
into
clc
popf
ins
arpl
scas
jmp
pop
sub
aaa
push
(bad)
push
mov
adc
ss
ret
xor
and
in
cmp
fwait
pop
xchg
xor
cwde
aam
int3
fucom
cmps
retf
jb
ret
and
fwait
add
jl
dec
div
movs
jno
mov
jbe
shr
fstp
rcr
mov
scas
lahf
sub
movs
repnz
mov
xor
in
xor
sbb
fldenv
jecxz
test
sub
dec
xchg
arpl
ds
cmp
mov
inc
or
addr16
dec
aaa
pop
mov
mov
adc
dec
push
clc
pop
jmp
mov
pop
lods
jl
ror
push
in
inc
xor
outs
mov
push
pusha
les
arpl
jnp
xchg
pop
add
or
xor
(bad)
icebp
or
mov
aam
(bad)
jmp
test
mov
dec
pop
loope
inc
int
mov
push
pop
das
cwde
lods
pop
lods
std
cli
or
pop
jmp
mov
(bad)
mov
or
call
push
rcr
jmp
mov
(bad)
je
add
push
xor
cmp
push
out
inc
pop
retf
xor
sub
pop
pop
mul
shl
sbb
jge
push
xor
mov
jmp
xchg
out
inc
and
repnz
xor
cli
pop
lea
mov
pop
call
push
loopne
xor
adc
jae
dec
sbb
enter
out
dec
sub
out
xchg
inc
push
xor
inc
mov
cmp
in
sbb
stc
stos
dec
fidiv
neg
lock
dec
xchg
daa
iret
cdq
jnp
and
jecxz
in
jmp
outs
inc
cmps
fld
dec
mov
push
xor
out
mul
cmp
fwait
cli
sub
mov
loopne
ins
sub
sbb
(bad)
jmp
clc
dec
hlt
xchg
imul
inc
mov
stos
adc
dec
bound
sar
loopne
lahf
jmp
(bad)
sub
mov
stos
mov
repnz
xor
fdiv
mov
fdiv
fdivr
sub
cmp
in
imul
sbb
sub
neg
push
push
mov
sbb
pop
arpl
ds
lahf
push
sbb
lods
xchg
xchg
mov
jbe
into
add
pushf
dec
add
dec
mov
arpl
push
das
cmp
inc
shl
sbb
inc
jne
xor
add
mov
and
cmp
xchg
movs
outs
pop
xchg
pop
jg
les
in
cmp
pop
cld
add
mov
jno
xor
jle
enter
movq
mov
push
pop
in
out
adc
sbb
and
out
int3
dec
popa
add
neg
cwde
add
inc
push
mov
mov
ins
rcl
sbb
and
jb
lds
add
test
rcl
sub
int3
xor
fmul
or
mov
or
fild
mov
sbb
sub
test
enter
mov
adc
push
bound
xor
mov
nop
cli
inc
sbb
inc
xchg
jmp
xchg
push
movs
rcr
add
ret
cdq
adc
pop
mov
mov
movs
pushf
dec
xor
inc
jb
push
popa
mov
out
pushf
mov
push
pop
adc
data16
jno
and
icebp
xor
jne
xor
inc
push
je
fwait
shl
lahf
xchg
or
adc
fnstenv
mov
inc
dec
imul
repnz
sbb
aam
add
push
fldlg2
push
push
das
pop
mov
ds
pop
icebp
or
and
pop
je
in
out
fptan
xchg
adc
xchg
cmps
xor
int3
movs
nop
push
inc
popa
sub
sbb
sahf
mov
adc
sbb
sbb
ss
jbe
adc
mov
sahf
leave
loop
or
in
les
in
cmps
(bad)
cmps
adc
adc
(bad)
xor
adc
es
(bad)
je
repz
out
aam
(bad)
jo
push
dec
aas
mov
sti
mov
icebp
mov
out
or
xchg
retf
and
aad
test
mov
lea
xor
call
or
les
mov
mov
(bad)
aam
add
fsubr
gs
push
push
jo
rcl
sub
inc
push
aaa
mov
cmp
arpl
sbb
shl
mov
fst
push
pop
push
nop
arpl
inc
and
mov
mov
push
(bad)
xlat
mov
mov
adc
xchg
popa
xchg
mov
jo
xor
aam
shl
test
call
rcl
sbb
call
mov
cmp
inc
sbb
pop
cld
dec
into
jl
loope
inc
popf
mov
retf
mov
adc
movs
pop
je
push
mov
scas
(bad)
std
dec
jmp
xor
stos
dec
jge
mov
out
nop
mov
cmp
and
enter
xchg
xchg
push
mov
out
mov
inc
call
or
imul
fldcw
push
call
dec
bound
xchg
jmp
pushf
pop
dec
dec
loop
inc
or
mov
cmc
rcr
sahf
clc
lahf
push
sbb
neg
addr16
test
mov
xor
jo
ins
stos
and
in
in
sbb
cwde
mov
push
adc
lock
out
fisttp
mov
repz
mov
mov
mov
test
cmc
and
int3
jb
ins
adc
push
lea
mov
das
ss
stos
loopne
mov
xor
bound
xor
and
mov
inc
jp
test
mov
(bad)
sahf
retf
lock
and
or
jae
dec
xor
imul
hlt
ret
cmp
sub
cdq
add
shl
or
sub
cmp
dec
cmps
dec
cmp
inc
or
or
inc
pop
(bad)
call
push
jmp
(bad)
(bad)
in
call
gs
xchg
or
loope
movs
inc
popf
ins
jg
ret
mov
aas
in
adc
mov
rcl
add
jg
(bad)
push
neg
push
and
sub
jecxz
push
xor
cmp
cwde
shl
shr
mov
sahf
popa
xor
jmp
add
outs
in
cmps
inc
addr16
and
push
or
fist
sahf
ficomp
addr16
ins
jae
pop
cmps
push
fwait
and
jecxz
jmp
xchg
and
dec
cli
pop
push
push
lods
add
cld
rol
xor
jp
test
xor
scas
jno
imul
pop
inc
dec
dec
mov
add
or
xchg
adc
sub
mov
iret
cmp
jl
push
std
pop
hlt
in
ja
add
adc
xchg
cli
out
push
xlat
xchg
mov
xchg
xlat
cmps
sbb
dec
cmp
add
xchg
lock
je
jge
pop
fisub
or
imul
call
repnz
repz
imul
mov
nop
mov
aas
mov
mov
jae
pushf
push
(bad)
jle
inc
ins
mov
jb
lods
out
mov
fidivr
leave
inc
xor
and
cmp
repz
sti
cmp
shr
jb
xchg
push
or
mov
pusha
cwde
out
dec
jl
stos
les
add
outs
pop
(bad)
nop
jns
add
cdq
xor
loope
jmp
jp
ins
push
sub
pushf
aad
scas
jae
int3
pop
or
int3
pop
sbb
mov
or
push
lea
pop
icebp
mov
xor
clc
and
aaa
xor
xor
dec
add
dec
shr
jbe
aaa
push
xor
sbb
or
fst
inc
(bad)
jne
push
movs
push
into
sub
mov
jmp
test
mov
aam
ins
les
fidivr
mov
(bad)
xor
xchg
call
add
sbb
fxch
scas
sub
add
outs
dec
aas
or
das
mov
jo
adc
ins
lds
xchg
adc
(bad)
out
cmc
inc
call
mov
and
rcl
les
xlat
and
fsubr
and
rcr
dec
adc
jecxz
lods
stos
cmp
lods
fidivr
jl
pop
xchg
sar
lahf
pushf
push
mov
mov
sub
pop
movs
push
jno
sbb
jnp
lahf
shr
cmp
mov
leave
dec
xor
cmp
and
jb
inc
repz
and
or
adc
xor
adc
lds
ins
cmp
mov
mov
xlat
iret
cmp
add
jmp
pop
shl
loop
test
jnp
test
or
lea
sub
lods
and
cmp
jmp
mov
shl
test
sub
movs
jne
rcl
cmp
inc
(bad)
mov
sub
cwde
leave
shl
into
mov
dec
arpl
test
jecxz
jg
rcl
ficomp
dec
or
dec
jecxz
in
mov
ins
push
sbb
mov
xor
push
push
movs
sub
repz
shl
mov
cdq
cs
fstp
retf
jmp
jns
jb
icebp
mov
jae
sahf
neg
loope
in
les
sahf
repnz
(bad)
xchg
jecxz
dec
mov
cwde
fsubp
cmc
jge
mov
pop
add
ficom
mov
pusha
int3
dec
imul
pop
inc
cmp
jg
out
add
clc
neg
mov
test
frstor
push
mov
push
pop
adc
mov
imul
add
leave
out
dec
pusha
sub
push
stos
bound
inc
mov
jno
scas
(bad)
jle
mov
push
mov
rol
cs
loopne
cmc
icebp
adc
xchg
jmp
jecxz
ret
or
mov
bound
push
inc
dec
mov
scas
mov
or
mov
or
sbb
fisttp
and
fdivr
push
cmp
xchg
xor
call
xchg
scas
movs
sbb
(bad)
out
and
push
cmp
xor
mov
arpl
cmp
mov
cli
scas
(bad)
and
pop
adc
sbb
push
add
jl
fld
cmp
dec
mov
ret
dec
pop
aaa
std
inc
mov
inc
cmp
shl
mov
outs
fstp
arpl
sub
sbb
or
neg
add
mov
or
retf
cwde
inc
adc
(bad)
jo
ins
pop
sub
test
and
mov
jmp
(bad)
rcr
(bad)
mov
loope
pop
fcomp
cmps
jl
xchg
xlat
sbb
sub
addr16
dec
out
aam
fadd
in
dec
ret
scas
mov
and
push
lds
scas
call
mov
mov
dec
adc
jne
cmp
lock
fldcw
sbb
shl
test
ins
sub
test
push
inc
pop
add
inc
push
cmp
loop
gs
xlat
mov
loope
xor
pop
adc
fstp
mov
sub
lds
mov
loope
dec
movs
cmp
cli
leave
pusha
dec
mov
inc
mov
stos
mov
push
mov
les
fmul
call
ror
xchg
or
repz
sbb
sbb
out
dec
es
movs
int
mov
sub
not
dec
cmps
adc
jle
or
in
std
push
daa
retf
pop
or
cmp
push
or
dec
or
pop
sbb
outs
dec
cld
movs
div
mov
in
cs
inc
(bad)
mov
daa
retf
fcomp
push
repnz
fadd
addr16
or
loop
inc
mov
lea
in
or
mov
mov
cs
mov
push
fwait
inc
pop
movs
jbe
mov
aam
xlat
call
mov
cmps
ins
lds
lods
push
cmp
push
adc
cs
test
sub
mov
add
imul
addr16
jns
push
dec
rcr
mov
sbb
fiadd
pushf
je
retf
movs
loop
js
movs
out
(bad)
sub
xchg
cmc
and
(bad)
ror
js
pushf
test
lds
pushf
push
ret
adc
push
push
in
popa
movs
and
xchg
cdq
sbb
mov
call
enter
sbb
xor
xchg
jnp
adc
sar
xor
lahf
sub
and
fisubr
dec
std
sub
adc
jmp
cld
inc
push
test
xlat
inc
mov
leave
xor
push
test
sbb
cli
jecxz
push
fsub
jl
push
mov
mov
sub
pop
xchg
jle
shl
xchg
mov
cmp
mov
sub
and
xor
cmovge
and
jno
jbe
call
or
push
sti
in
retf
mov
js
out
push
test
sbb
data16
call
and
mov
aaa
int
cmp
ret
and
add
sub
and
es
call
(bad)
xor
(bad)
rcl
leave
popf
jl
icebp
adc
retf
mov
adc
cmp
hlt
xchg
fs
inc
mov
retf
sti
(bad)
sub
movs
mov
(bad)
lods
repnz
fwait
inc
push
in
xchg
mov
sbb
and
fidivr
xchg
inc
and
aam
adc
mov
pop
loopne
mov
rcr
sub
sub
ds
outs
ficomp
test
rol
(bad)
fisttp
push
and
mov
rcl
jp
inc
jae
mov
push
test
out
ins
je
jl
cld
adc
add
lods
out
sbb
rol
and
cmp
xlat
outs
dec
icebp
pop
loope
lea
fs
dec
push
jmp
or
pop
std
cmp
pop
cmp
cwde
mov
mov
loope
ins
iret
daa
test
outs
add
(bad)
push
prefetch
or
or
add
jp
sub
cld
dec
sbb
fdivr
rol
inc
lea
cmps
mov
push
push
ins
xchg
sbb
cli
iret
stos
dec
out
fidivr
xlat
sub
in
sbb
lods
pop
pop
mov
call
popf
inc
pusha
out
int
ds
dec
add
or
and
not
and
push
jl
adc
mov
push
not
addr16
and
xchg
es
add
jb
fist
stos
xchg
in
push
cmp
push
or
int
cdq
jno
xor
cmp
(bad)
and
out
mov
adc
and
enter
and
into
loope
test
call
(bad)
cwde
icebp
clc
pop
push
pop
jle
push
push
lahf
(bad)
mov
scas
jmp
and
hlt
(bad)
fild
iret
add
inc
out
mov
loope
pusha
repnz
mov
sbb
pusha
sub
in
and
out
adc
fldcw
jmp
jo
retf
rol
nop
push
fxch
mov
leave
arpl
and
dec
dec
mov
mov
pop
jnp
adc
mov
sti
xor
push
dec
ja
cmps
adc
into
aam
jg
adc
add
int
push
xor
dec
dec
xchg
(bad)
mov
push
aam
adc
icebp
mov
call
jns
mov
mov
ror
pop
mov
cmp
mov
not
cmp
push
popf
bound
jno
mov
push
stos
std
pop
inc
data16
xlat
or
push
je
and
fist
sub
fs
ror
xchg
xor
pop
ja
cmp
jbe
sti
retf
daa
mov
jns
retf
faddp
push
pop
neg
adc
mov
icebp
sub
or
test
sub
jb
xchg
popa
xchg
les
jle
lahf
add
aaa
bound
jle
add
test
aam
jnp
fstp
movs
and
cmp
xchg
fdiv
cli
adc
jle
cmp
xchg
movs
in
bound
(bad)
add
lea
mov
mov
outs
xchg
xor
in
jae
and
pop
fdivr
retf
jmp
scas
in
pop
int
jns
sbb
and
imul
push
push
mov
cmp
jmp
icebp
inc
pusha
aam
stos
mov
cdq
sahf
push
dec
ret
aaa
mov
ss
sbb
jo
add
dec
push
ret
xor
add
and
mov
pop
jmp
daa
scas
imul
jecxz
cmp
push
pusha
cs
lods
xchg
jae
lea
sbb
hlt
jb
jae
push
rcr
rcr
cwde
ins
push
imul
push
movs
push
xor
int3
and
fld
push
lea
xor
shl
jne
imul
call
add
mov
inc
push
pop
clc
sbb
sahf
enter
jge
xchg
out
pop
repnz
cmc
xor
sti
js
cmc
sbb
adc
adc
inc
jb
push
aam
sub
loopne
mov
cdq
dec
inc
pop
addr16
jnp
xchg
xchg
dec
inc
popa
inc
mov
xchg
mov
fist
mov
cmp
fbld
scas
bnd
pop
add
mov
xor
xchg
pop
xor
ror
lds
ds
jg
pop
mov
push
dec
xchg
(bad)
xchg
in
aad
(bad)
push
or
jp
mov
rcr
div
(bad)
clc
mov
pop
inc
movs
adc
adc
dec
mov
sub
rol
stc
sar
shl
cdq
jns
jno
pop
and
cmp
outs
stos
xchg
loopne
or
jge
clc
jns
rcl
mov
in
in
in
mov
test
clc
std
mov
jo
pop
loop
sub
push
test
and
js
sbb
pop
and
movs
jbe
fs
addr16
xor
inc
popa
push
jbe
jnp
pop
push
repnz
icebp
lock
push
push
(bad)
push
add
arpl
push
add
or
popa
jp
sti
(bad)
call
adc
pop
cmps
mov
retf
mov
daa
(bad)
mov
cmc
inc
and
test
mov
int
push
add
mov
jnp
retf
sub
mov
adc
ins
push
mov
lock
jle
jbe
repz
sub
jb
inc
rcr
(bad)
jb
sbb
in
js
fcomp
test
std
mov
xlat
mov
cwde
dec
mov
push
push
pushf
mov
aaa
push
adc
mov
test
ds
mov
mov
pop
add
stos
test
sub
stc
and
je
ins
sbb
fwait
jne
jns
sti
in
sub
or
push
ja
and
repnz
je
xchg
test
mov
push
fidiv
adc
pop
mov
cmp
add
pop
xor
idiv
test
push
add
xchg
add
scas
retf
shl
push
stc
mov
jmp
and
sbb
dec
sbb
adc
ds
jecxz
ret
push
adc
cld
aam
cmps
in
sbb
loope
neg
pop
(bad)
push
push
imul
(bad)
add
jno
inc
push
les
push
adc
sub
(bad)
jno
mov
or
outs
movs
scas
jb
mov
(bad)
xchg
hlt
dec
or
in
outs
fs
push
ss
in
jns
rcr
imul
xor
push
jle
ja
scas
leave
dec
mov
add
test
mov
aam
jmp
sub
add
icebp
push
push
mov
jae
lock
mov
test
outs
ret
stos
sbb
js
fisubr
adc
push
sbb
inc
jle
mul
out
icebp
movs
mul
sbb
push
fs
mov
(bad)
mov
jp
push
jg
sbb
in
adc
mov
loope
arpl
sar
inc
pop
rcl
inc
push
scas
loopne
loop
dec
jge
jo
movs
and
jmp
sbb
push
movs
or
jne
dec
daa
xor
add
sub
das
std
inc
xor
loop
jno
xchg
pop
cmp
cmp
or
push
pop
mov
cld
adc
in
ret
je
rcl
push
enter
pop
loop
pop
and
adc
mov
movs
fcmovb
and
xchg
jg
sub
jns
xchg
data16
mov
leave
cld
sbb
(bad)
jg
lods
lds
leave
lds
int
sub
push
icebp
push
xchg
ins
pop
push
mov
jp
dec
pop
push
loope
sar
xor
into
add
(bad)
outs
adc
dec
push
imul
and
je
loop
das
addr16
push
(bad)
std
mov
mov
mov
push
push
pop
inc
outs
or
inc
mov
and
in
mov
xchg
ret
fstp
fnsave
push
sub
mov
sub
gs
jl
jg
xchg
dec
stc
out
fimul
xchg
xchg
popa
xor
push
loop
inc
jge
mov
jmp
inc
xlat
out
and
out
outs
cmp
bound
xchg
retf
sbb
push
or
jne
mov
bound
and
cmp
push
ss
xor
mov
and
cmp
cli
and
pop
fld
aad
adc
mov
out
in
ds
inc
jnp
repnz
ds
pop
add
mov
popa
bound
jl
les
pop
mov
int
jae
pop
ins
movs
cmp
cmc
xor
push
inc
arpl
cmp
xchg
rep
pop
stc
je
pop
sbb
cmp
popa
sar
xchg
ds
cmp
push
mov
mov
out
stc
xor
(bad)
fcmovb
call
fcomp
js
sbb
pushf
jmp
std
loopne
jne
lds
add
push
sti
pop
(bad)
rol
fst
and
rcr
rol
fisubr
jmp
mov
jno
popa
repz
cmp
xchg
push
ins
mov
pop
sbb
xor
stos
fadd
mov
rcr
mov
lahf
(bad)
jne
pop
jmp
sbb
dec
sub
pop
push
loope
push
aad
ins
or
mov
jp
retf
and
ds
(bad)
jo
outs
fcmovnbe
aaa
sbb
cdq
sti
loopne
mul
pop
arpl
(bad)
bnd
sbb
pop
mov
imul
mov
aad
fs
loope
add
(bad)
pop
and
or
or
or
out
or
mov
xor
sar
call
les
mov
push
lock
cmp
xor
mov
or
fcomp
dec
call
je
stos
loopne
sub
arpl
xchg
scas
test
ss
mov
imul
test
cmps
push
xabort
push
enter
mov
mov
and
dec
imul
idiv
and
inc
push
in
and
int
push
adc
(bad)
imul
adc
add
loopne
mov
cli
mov
xchg
jbe
inc
stos
mov
into
mov
int
push
outs
xor
ret
mov
sbb
sub
push
ret
push
inc
in
lahf
iret
xchg
mov
lea
ja
(bad)
push
or
add
in
add
jo
push
pop
adc
inc
mov
mov
div
xor
pop
mov
out
mov
jmp
push
pop
(bad)
jle
jne
mov
mov
cmps
sub
and
dec
cdq
push
xor
mov
ins
jg
xlat
xor
ret
pushf
xchg
fwait
mov
sar
dec
sti
jnp
scas
sbb
div
sbb
sbb
dec
test
jns
and
(bad)
xchg
inc
mov
rcr
cmp
test
fs
xor
xor
xchg
cmc
enter
adc
pop
mov
(bad)
sahf
mov
dec
mov
fwait
(bad)
clc
xchg
aam
nop
mov
movs
cmp
xchg
pop
aas
and
(bad)
xchg
add
les
bound
jne
pop
fnstsw
loop
cmp
add
cmp
outs
arpl
pusha
push
mov
dec
xchg
inc
movs
push
jge
cmps
xchg
pusha
xchg
mov
into
fst
stos
fs
cmp
inc
arpl
(bad)
into
dec
stc
xchg
dec
mov
xchg
jbe
dec
lock
dec
mov
dec
retf
xor
sub
xchg
daa
les
iret
jp
repnz
or
loopne
imul
xor
hlt
(bad)
jno
pop
mov
dec
mov
mov
jns
inc
jge
mov
push
pop
call
jmp
jne
sbb
data16
pop
call
mov
mov
in
xor
scas
inc
gs
xchg
adc
ja
jnp
mov
pushf
leave
imul
pop
shl
outs
cmps
arpl
bndldx
add
xlat
inc
dec
pop
fcom
adc
push
mov
xchg
fist
or
add
mov
(bad)
jg
mov
ficomp
stos
jp
repz
lods
sub
cwde
dec
push
mov
fisttp
movs
mov
cli
or
dec
cmc
inc
push
ins
add
inc
push
mov
xor
outs
and
push
leave
and
fild
jl
iret
pop
and
xchg
sbb
rol
sbb
stos
rol
mov
(bad)
loope
ret
in
out
inc
stc
loope
ins
and
inc
inc
pop
jno
mov
out
jmp
lahf
ja
jns
dec
push
or
jg
add
inc
ficomp
mov
in
inc
and
stos
(bad)
mov
popf
fcomp
and
enter
pushf
retf
nop
call
adc
cld
pop
pop
dec
in
(bad)
mov
xchg
push
cli
cmps
sbb
je
lods
fstp
push
xor
xor
mov
movs
cmp
jecxz
repz
ffree
std
out
push
retf
cmp
in
or
pop
adc
jg
lods
mov
jae
das
dec
out
and
and
test
pop
jge
movs
adc
mov
fistp
sbb
add
jmp
mov
out
pop
ins
sbb
test
fmul
fldenv
cld
xor
mov
js
push
jmp
js
scas
in
sbb
jmp
inc
push
je
pushf
je
push
mov
xor
or
cmps
xchg
mov
cli
sbb
mov
xor
fst
sub
and
sub
mov
outs
loope
pusha
mov
sub
xor
cli
cmp
jmp
mov
ret
ror
inc
or
bound
cmp
pop
mov
in
xchg
pop
jno
popf
or
cmp
xor
test
enter
and
sbb
adc
(bad)
fcomp
xchg
sub
fcomp
stos
lahf
bound
mov
sub
xlat
xchg
(bad)
ror
push
or
or
aad
loopne
into
push
aas
ins
mov
jne
repnz
sti
mov
nop
pop
inc
jbe
leave
jp
loop
jl
and
test
data16
inc
jno
jb
jno
out
jmp
and
cmps
jne
into
add
cmp
pop
xor
add
in
mov
pop
mov
cs
mov
sub
lods
fwait
stos
test
ja
imul
dec
scas
lock
(bad)
and
ret
or
cmp
xchg
les
or
jmp
add
adc
inc
adc
lea
je
or
repnz
call
mov
sbb
outs
sar
inc
push
cmps
aas
mov
inc
sbb
cmp
cmps
loop
jb
dec
ins
js
(bad)
pop
test
mov
sbb
cmp
mov
iret
aas
mov
in
inc
push
push
jb
fcmovbe
xlat
cld
scas
daa
jg
cwde
mov
pop
or
es
jbe
xor
inc
fwait
dec
stos
and
sbb
sbb
lea
adc
add
jg
sti
test
loop
mov
and
fistp
daa
xchg
pop
mov
sbb
aam
leave
inc
lds
push
lea
dec
nop
ret
xchg
sbb
jg
scas
xchg
test
xchg
bound
cmp
pop
out
out
mov
inc
push
data16
lods
dec
xchg
outs
pop
add
sbb
or
popa
add
leave
addr16
jb
jo
retf
mov
or
rcr
mov
aas
dec
imul
cmp
ror
mov
sub
or
xchg
pop
pop
sti
rol
mov
in
cmp
scas
sbb
scas
movs
arpl
adc
or
std
cmp
cmp
mov
je
fisttp
stos
add
add
cmc
sahf
mov
pop
adc
sub
sbb
mov
mov
scas
sbb
pop
(bad)
jmp
inc
cmp
sbb
sbb
aas
lods
retf
sbb
add
stos
cmp
add
lods
mov
retf
xor
mov
nop
scas
outs
sub
inc
mov
jbe
push
sar
pusha
popa
retf
xor
test
mov
sahf
push
(bad)
mov
cmps
fadd
jne
dec
mov
fwait
out
jnp
cld
cld
loope
in
jne
(bad)
fidiv
loope
cmp
add
loop
mov
ins
xchg
fsubr
dec
add
fdiv
jge
xchg
int3
lods
or
out
or
inc
outs
xor
sub
and
adc
out
sbb
mov
ds
inc
xchg
inc
pop
xor
addr16
sbb
(bad)
or
cmp
jbe
mov
jmp
fisubr
sbb
mov
loopne
dec
push
xchg
mul
pop
js
push
ret
sti
loop
sbb
shr
aas
xor
mov
cmp
push
sbb
and
mov
test
push
jnp
shl
mov
leave
aam
call
mov
adc
dec
dec
and
inc
jmp
(bad)
jge
lahf
and
in
(bad)
idiv
aad
and
push
test
add
mov
call
mov
xor
arpl
cld
push
push
(bad)
or
pop
sub
mov
push
jge
sbb
(bad)
out
and
retf
sar
fistp
icebp
outs
mov
dec
inc
enter
xor
fisttp
fisttp
shl
and
call
cmc
sbb
pop
push
mov
lods
rcr
sub
test
jb
and
pusha
ins
int
arpl
call
outs
pop
in
gs
imul
push
or
in
jmp
mov
lsl
sbb
call
inc
xchg
add
cs
mov
jmp
mov
test
cmp
push
jl
jne
sti
jns
repnz
push
enter
and
ins
scas
js
fdiv
int3
mov
shl
jns
pushf
mov
test
fistp
lea
pop
lods
jg
mov
dec
xlat
xor
shl
and
ins
stc
jb
xchg
pop
adc
xchg
fcomp
test
cmp
mov
jbe
adc
js
jmp
mov
ficomp
pop
pushf
mov
xbegin
fs
out
(bad)
xor
(bad)
xchg
inc
cli
or
xchg
(bad)
mov
mov
ret
pop
xchg
arpl
add
jae
mov
jo
in
jge
inc
sbb
xchg
mov
lahf
push
shl
xchg
stos
into
jnp
mov
stos
dec
add
mov
aam
pop
mov
mov
adc
mov
jmp
test
repnz
mul
loope
adc
je
mov
mov
mov
pop
lods
retf
pop
mov
sbb
outs
cmp
push
aad
inc
add
sub
fild
mov
ins
mov
fwait
das
test
clc
jns
xor
jmp
push
jb
out
cs
mov
aad
in
pop
push
push
aaa
inc
lods
das
test
in
bound
clc
outs
in
loop
dec
mov
and
mov
and
sbb
ret
adc
pop
mov
mov
add
sbb
in
add
pop
repnz
mov
sub
mov
fsubr
rcr
mov
imul
mov
sbb
add
sub
(bad)
jecxz
sub
sub
rcr
cmps
mov
in
or
cmp
sahf
inc
scas
ins
and
mov
test
cmp
stc
outs
test
mov
arpl
sbb
scas
std
mov
int3
jno
pop
adc
(bad)
lods
add
mov
and
sbb
cdq
or
aad
mov
(bad)
mov
mov
stos
adc
out
pop
leave
rcl
lods
retf
outs
out
add
inc
mov
loope
sbb
cmp
sub
pop
fwait
mov
xor
pinsrw
popf
scas
xor
jg
xchg
sbb
push
into
xor
out
iret
add
pop
(bad)
jg
(bad)
jae
out
cli
push
pop
sbb
xor
mov
loop
ja
push
push
xchg
push
dec
jo
and
fs
jp
push
das
pop
in
std
popf
mov
sub
iret
cmps
lock
ffreep
aam
add
in
in
inc
inc
shr
adc
fnstenv
add
rcl
pop
lods
sbb
inc
call
pop
(bad)
stc
sbb
sub
scas
jle
dec
mov
push
and
clc
imul
cdq
iret
mov
int
fstp
cmps
mov
pop
clc
add
out
fsub
push
pop
and
mov
rcr
push
xor
mov
icebp
sub
es
sbb
jae
cmps
pop
test
sbb
adc
cs
mov
test
jle
idiv
jge
sbb
data16
inc
in
sub
aam
mov
call
cmps
and
lahf
jo
adc
cs
fs
fidiv
cli
pusha
ins
fsub
aas
inc
jno
shr
mov
out
(bad)
out
icebp
lods
icebp
or
pop
out
popa
push
ins
arpl
jecxz
sbb
rol
icebp
retf
in
mov
pusha
cmp
and
add
sbb
adc
lock
jns
arpl
lods
(bad)
xchg
sub
xchg
mov
jmp
add
scas
jno
mov
xor
xor
rcl
push
cmps
push
lock
pop
shl
out
mov
movs
dec
dec
(bad)
repz
xor
aaa
add
push
int3
and
out
pop
daa
jns
cmp
lock
xchg
mov
pop
add
xor
mov
cwde
lahf
cmps
es
sub
int
sub
(bad)
arpl
jns
iret
je
(bad)
mov
repnz
repz
jl
adc
mov
in
aam
xlat
pop
fucom
std
dec
scas
loope
test
sbb
or
ret
mov
adc
loope
ins
add
xor
(bad)
pop
fbld
outs
test
imul
adc
pushf
loopne
xchg
mov
test
scas
cli
rcl
inc
ins
mov
and
mov
pop
sbb
xor
in
out
xchg
popf
inc
dec
fld
mov
jnp
cwde
xchg
dec
imul
push
adc
lods
pop
adc
mov
fcos
add
data16
add
in
call
in
cmp
fild
inc
inc
add
out
lock
and
xor
cs
outs
inc
push
cld
and
aaa
jo
addr16
cmps
aam
out
pop
(bad)
jg
mov
add
push
movs
loope
or
xor
nop
fsubr
stc
pop
xchg
pop
ficomp
sahf
cli
sahf
movs
push
inc
cmp
mov
imul
add
(bad)
fld
mov
jb
popa
call
adc
lahf
(bad)
std
cmp
and
(bad)
xchg
call
jge
jno
dec
outs
jg
mov
push
ret
push
stc
fucomp
or
fwait
(bad)
cli
mov
or
fisttp
push
jb
xor
stc
sub
loope
pop
fwait
into
xlat
inc
and
dec
out
xchg
retf
adc
into
sub
xchg
imul
xchg
outs
ret
cli
dec
add
push
cmp
pop
mov
inc
push
xchg
inc
pop
push
outs
adc
clc
fmul
les
add
das
jp
dec
sahf
mov
cli
imul
inc
addr16
or
dec
cmps
or
lods
in
and
iret
mov
das
arpl
(bad)
lock
retf
or
xlat
lea
(bad)
sbb
bound
ror
pop
and
push
sub
addr16
dec
jb
xchg
mov
cmp
xchg
mov
and
lds
and
mov
sti
movs
icebp
in
sub
test
aad
inc
jecxz
out
mov
test
jae
push
sbb
jbe
outs
and
stos
ja
cmps
xchg
xchg
call
out
jo
push
into
imul
rol
and
jae
fisub
fcom
or
pop
popf
push
nop
lock
jb
mov
sbb
inc
cdq
push
inc
mov
adc
shl
push
xchg
scas
pushf
addr16
call
mov
pop
mov
push
loopne
cmp
lods
fldln2
enter
aad
ins
lea
or
mov
xlat
popf
(bad)
xor
je
add
int3
dec
adc
push
nop
pushf
mov
(bad)
xor
loop
lock
call
dec
sub
scas
jo
pop
push
lock
mov
div
test
mov
dec
icebp
adc
(bad)
jle
mov
ret
(bad)
push
inc
fild
cwde
jmp
push
sahf
cmp
jb
jmp
pop
sub
xchg
fcmovnbe
pop
xchg
mov
mov
xchg
loope
call
sbb
inc
or
clc
nop
pusha
adc
call
add
dec
rcr
ror
mov
sub
inc
(bad)
sahf
les
ds
mov
rcl
add
inc
xchg
fisttp
idiv
loope
fbstp
xchg
sar
cld
xchg
pop
dec
sub
xlat
sub
stos
outs
sbb
add
xlat
push
cmc
in
bound
cmc
dec
and
retf
fwait
sub
mov
lea
jbe
enter
daa
push
or
(bad)
dec
call
add
jmp
(bad)
mov
mov
sbb
fstp
push
and
jnp
inc
sbb
mov
jge
lods
push
in
xor
mov
mov
dec
loope
adc
mov
shl
out
out
nop
or
mov
xor
sub
inc
dec
stc
movs
retf
cmp
xchg
out
das
das
mov
mov
in
(bad)
fnstsw
(bad)
jmp
js
loope
adc
cmp
in
loop
push
jno
cmp
add
mov
push
cmc
push
sub
movs
mov
js
adc
xchg
jno
or
pop
pop
frstor
jne
fist
fcom
mov
aas
jecxz
mov
lods
push
inc
ja
rol
lods
call
int
lods
je
xchg
pop
add
cdq
std
aam
arpl
cmp
mov
xchg
je
mov
call
push
pop
and
ins
(bad)
shr
jmp
test
fcomip
ins
loopne
push
and
or
push
out
mov
and
mov
mov
cmc
repz
fs
loopne
sub
clc
mov
fidivr
add
fidivr
in
mov
xchg
pushf
cmp
push
mov
jb
xor
cmp
ss
inc
test
adc
push
mov
outs
pop
mov
push
dec
(bad)
cwde
sub
stc
adc
or
sbb
pushf
lods
sbb
fs
xor
dec
sub
adc
inc
hlt
sub
or
jbe
out
aam
(bad)
hlt
(bad)
dec
sbb
cmps
enter
or
or
test
call
mov
outs
inc
sbb
sub
cmp
in
stc
sub
rcl
adc
mov
push
sbb
cmps
pop
push
or
and
lods
cmc
shr
cdq
mov
add
cmp
mov
daa
jnp
(bad)
pop
jp
sahf
xor
js
sub
out
cmp
push
stc
xchg
adc
(bad)
sahf
and
push
jb
sub
ins
pop
pop
xor
xchg
push
sbb
cmp
cwde
and
pop
shr
lods
aaa
popa
inc
or
jmp
lahf
test
into
js
mov
(bad)
std
ins
shr
inc
(bad)
adc
(bad)
dec
and
lahf
popa
xchg
(bad)
xchg
mov
and
movs
mov
sub
mov
data16
push
es
test
jbe
(bad)
dec
fcmovnbe
dec
addr16
or
inc
mov
xor
pop
aaa
push
dec
add
call
ds
pushf
cs
jmp
and
arpl
mov
imul
sub
jno
arpl
xchg
movs
out
mov
scas
inc
fisubr
out
enter
add
xor
pusha
pop
out
push
or
imul
adc
lock
pop
loope
mov
div
adc
inc
movs
test
call
mov
fist
fsubr
imul
dec
loope
add
xchg
bound
popf
adc
nop
imul
mov
iret
fdiv
ret
(bad)
cmc
rcr
mov
ror
call
in
shl
sar
cmp
jae
retf
or
jns
dec
sub
inc
addr16
xor
sbb
nop
ins
ins
add
arpl
xor
cmps
jge
(bad)
jecxz
arpl
dec
fistp
jae
rol
sbb
and
aas
pop
pop
mov
mov
dec
(bad)
pusha
pusha
loop
lock
sar
repnz
sbb
sub
lahf
call
xor
bnd
jle
arpl
fstp
in
cs
dec
xchg
push
jb
and
cmp
and
inc
cmp
mov
push
and
mov
out
mov
pop
xor
test
jmp
and
cmp
retf
mov
daa
xchg
pop
fnstcw
scas
(bad)
xchg
mov
and
push
ins
mov
in
cmp
jne
out
retf
mov
ret
lahf
loopne
mov
out
jmp
lods
and
mov
clc
adc
sbb
popf
add
sub
add
aam
fbld
cwde
iret
mov
test
mov
pop
(bad)
call
xchg
mov
mov
mov
push
aad
(bad)
cmc
mov
jne
addr16
pop
(bad)
jmp
pop
rcl
(bad)
enter
xchg
sub
push
mov
pop
data16
cs
adc
push
dec
sub
add
dec
add
jl
cwde
loop
aas
(bad)
in
pop
stos
call
out
push
xchg
mov
sahf
adc
nop
js
push
daa
test
stos
pop
test
jl
mov
pop
pop
loopne
call
cmps
aas
sub
mov
mov
pop
loopne
jbe
rcr
push
mov
sar
data16
int3
jge
inc
cmp
jae
aam
xor
retf
mov
mov
icebp
imul
sub
inc
dec
jle
jecxz
adc
call
pop
pop
sbb
movs
cwde
push
push
popf
in
fcomp
pop
mov
(bad)
mov
outs
xchg
adc
imul
cmps
mov
lods
pushf
js
xor
in
es
jb
mov
(bad)
sar
clc
scas
inc
adc
xlat
adc
scas
adc
push
clc
jg
int
inc
dec
popa
(bad)
sbb
add
push
jbe
inc
fsubr
sub
es
pop
jae
movs
stos
add
mov
fidiv
in
and
call
popf
push
pushf
aaa
out
sar
mov
push
in
(bad)
and
or
sub
fild
das
test
add
add
cld
rol
lods
dec
stos
out
bound
adc
shl
(bad)
or
retf
cmp
call
cmp
stc
sahf
shl
xchg
xchg
mov
scas
sbb
retf
sbb
mov
iret
repz
inc
dec
push
mov
pop
sti
mov
jno
jmp
pop
sbb
cmp
lock
(bad)
pop
and
xor
xchg
cmc
loopne
imul
fs
es
dec
mov
adc
addr16
icebp
fidivr
aas
xchg
jl
pop
mov
and
jne
mov
shl
aad
rol
fcmove
xchg
pop
adc
(bad)
out
push
lods
stc
int
dec
bound
dec
mov
stos
cwde
and
pushaw
sub
retf
pop
fs
sbb
or
je
in
cmp
push
adc
push
sbb
push
mov
xor
mov
inc
dec
mov
pop
adc
ins
cmp
icebp
mov
lock
push
inc
rcl
cdq
add
pop
ins
stc
(bad)
xor
cmp
popa
xlat
jbe
rcl
pop
mov
push
outs
push
je
dec
out
(bad)
std
xchg
cs
push
sub
jmp
xchg
fs
icebp
out
inc
aad
pminsw
je
and
sbb
add
leave
mov
mov
nop
push
pop
or
ffreep
push
xchg
jmp
dec
pop
out
(bad)
rol
lods
(bad)
cwde
cdq
cmps
loopne
lds
movs
in
push
nop
daa
mov
or
jae
mov
aam
jl
xchg
pop
push
push
lds
mov
in
test
stc
or
jo
or
xor
dec
mov
mov
prefetcht2
mov
mov
adc
mov
mov
outs
pop
aas
add
inc
add
mov
jmp
pop
test
out
cdq
aaa
jl
test
lds
push
pushw
sti
or
retf
hlt
lods
or
ficomp
outs
cmps
push
mov
(bad)
fidivr
and
dec
aad
bound
ins
aad
or
ja
sbb
or
js
inc
ja
cmp
and
sbb
lea
push
mov
push
mov
(bad)
(bad)
stc
not
xchg
mov
xchg
mov
cmps
jne
outs
daa
mov
ror
pop
ds
sbb
(bad)
mov
(bad)
cmp
imul
xchg
add
cli
and
das
mov
inc
cmp
xchg
test
pop
xchg
test
test
repz
xchg
dec
jmp
and
call
push
bound
scas
push
mov
dec
in
test
mov
jb
daa
xor
aad
popa
add
ret
cmp
nop
in
xor
(bad)
(bad)
and
push
dec
sbb
es
sub
fdivr
je
mov
pop
xchg
mov
dec
sbb
mov
xor
and
dec
imul
push
scas
fcom
push
sub
sub
xor
out
adc
iret
ds
xchg
push
(bad)
dec
fxtract
mov
ror
scas
std
loopne
aam
push
mov
inc
stos
repnz
adc
bound
add
xchg
cdq
(bad)
and
mov
das
and
test
jns
sbb
dec
pusha
xor
inc
ds
call
add
adc
test
mov
scas
inc
mov
mov
inc
ret
push
lods
fistp
hlt
dec
mov
or
(bad)
cld
jne
dec
jg
or
push
or
fadd
movs
xor
mov
mov
clc
dec
jnp
repnz
xor
cli
push
ins
sub
sbb
popa
in
fsubrp
pop
pop
dec
std
ror
stos
movs
aaa
sub
dec
lds
ds
mov
in
into
adc
sbb
icebp
jo
test
shl
shl
push
xor
ret
rcl
jg
popf
dec
out
sbb
cmp
push
mov
aam
jnp
(bad)
push
outs
mov
xchg
adc
aam
fdivr
or
xchg
fidivr
dec
sbb
xchg
xor
mov
add
pop
push
imul
ficom
adc
dec
dec
mov
and
fild
repz
xlat
mov
push
bound
pop
pop
mov
pushf
jo
mov
or
in
and
jo
inc
aad
cmp
gs
pop
xor
rol
in
data16
fs
outs
sub
nop
add
aas
inc
stos
scas
and
fs
or
sub
popf
or
sub
sahf
xor
out
sub
mov
lahf
xor
and
jo
dec
mov
jle
and
cli
out
push
or
cld
mov
mov
stos
leave
in
jg
jle
mov
scas
jo
fsubr
pop
push
not
inc
and
test
stos
mov
inc
sbb
jp
hlt
call
cdq
mov
sub
cmp
ret
sbb
jo
or
fwait
inc
push
mov
jns
jo
test
addr16
ins
inc
in
ror
pop
push
int
mov
popf
pop
cmp
pop
xchg
add
adc
mov
adc
mov
in
pop
cld
sub
mov
cmps
cs
loopne
sahf
lods
add
out
sub
cs
popf
mov
xchg
js
repz
(bad)
cli
push
mov
jecxz
ret
lahf
outs
push
add
aad
sbb
jle
aas
sbb
lods
stos
cmc
xchg
cmp
jp
clc
adc
ja
xlat
or
xchg
imul
js
add
sbb
push
dec
loop
add
pop
movs
sbb
stos
cs
fnstcw
mov
(bad)
popf
jl
test
hlt
cmp
push
adc
call
aas
xor
lods
outs
out
adc
mov
aaa
jle
test
fistp
scas
cmp
mov
test
je
lock
scas
lock
pop
or
push
movs
mov
cwde
rol
in
js
pop
shl
or
call
sub
sbb
mov
xor
pop
int
lahf
scas
ror
or
int
push
in
test
rcl
push
out
out
test
inc
adc
icebp
mov
cmps
jnp
daa
cmp
xchg
jnp
mov
pop
daa
inc
and
shl
adc
sub
lahf
je
mov
dec
das
dec
sbb
push
out
(bad)
in
leave
cmps
(bad)
frstor
jno
sbb
and
and
clc
mov
data16
popf
dec
test
movs
mov
stos
sbb
cmp
inc
adc
xor
sub
cmp
mov
push
(bad)
les
pop
mov
mov
mov
in
sub
push
xchg
lock
or
adc
dec
dec
push
pushf
add
in
push
(bad)
jno
inc
test
sub
imul
stc
neg
shr
pusha
pusha
scas
(bad)
fidivr
sbb
and
jo
xlat
jno
sub
cmp
xor
rcr
ins
inc
jge
fidivr
movs
ins
enter
push
(bad)
arpl
jmp
jl
retf
jmp
xor
or
(bad)
popf
mov
outs
outs
out
adc
(bad)
push
daa
jbe
ret
inc
popf
lods
xchg
sub
add
xlat
call
aaa
xchg
fld
inc
cli
(bad)
out
cmp
sub
repz
ja
add
les
sbb
rol
dec
cmp
sbb
and
mov
daa
(bad)
sbb
jae
in
inc
fs
mov
data16
arpl
(bad)
push
shr
push
loop
gs
pop
sar
push
sti
je
ret
fisttp
xchg
pop
mov
out
xor
cmc
lods
mov
adc
pop
or
jp
outs
pushf
sahf
hlt
mov
scas
or
repz
pop
pop
lods
mov
repz
adc
xlat
push
gs
into
aaa
or
jns
push
lea
das
lds
jmp
dec
sar
xchg
cmp
pop
add
jecxz
retf
and
sub
cmp
repnz
aaa
or
repnz
shl
pushf
int
push
jg
push
ss
dec
rcl
dec
ins
das
fld
(bad)
xor
sbb
addr16
(bad)
mov
ret
(bad)
xchg
mov
mov
inc
add
clc
fild
sbb
push
movs
ss
push
jle
outs
sub
cmp
dec
or
dec
leave
mov
movs
test
lods
cmc
inc
inc
sar
fcomp
or
xor
imul
push
inc
fnstsw
je
stos
add
shl
xchg
in
fdivr
enter
pusha
push
cmps
add
inc
jp
inc
push
mov
sub
add
inc
repnz
(bad)
jnp
mov
push
or
js
inc
imul
sbb
mov
pop
test
and
pushf
pop
dec
ficomp
into
pop
push
lods
mov
cmp
mov
inc
in
scas
xor
sbb
pop
js
stos
ja
mov
and
xor
or
push
loopne
dec
push
inc
popf
(bad)
xor
cmp
sbb
adc
ins
dec
test
je
cmp
sahf
jo
stos
push
cmp
mov
fadd
sbb
push
nop
ss
repz
dec
pop
hlt
mov
iret
test
ss
mov
xchg
mov
cli
push
ins
sbb
mov
out
inc
test
xor
sbb
adc
mov
jmp
jecxz
inc
fsub
es
jnp
retf
shr
dec
cmp
scas
sub
jmp
ja
push
xor
or
ds
inc
aam
cmp
int
imul
loope
aad
adc
cmc
jl
xor
test
sub
icebp
or
mov
sahf
push
ins
cmp
stc
mov
inc
mov
lahf
xchg
xchg
pop
scas
and
push
loope
arpl
sub
fnsave
mov
movs
out
in
jno
call
les
fdivp
add
pop
sbb
jno
scas
popa
xchg
jo
sbb
add
add
push
popa
nop
and
adc
ror
push
ins
out
mov
into
bnd
scas
(bad)
jg
(bad)
ret
mov
cmp
test
std
jnp
sub
loope
xchg
cmps
push
(bad)
out
pop
shr
adc
(bad)
je
pop
jnp
aam
lods
adc
jmp
idiv
ins
cmp
mov
sbb
dec
pop
outs
dec
hlt
jo
call
fldlg2
and
cmp
jg
adc
aad
cs
addr16
pop
ret
dec
xor
in
inc
pop
mov
adc
int3
fsub
pop
jo
mov
adc
cs
jnp
pop
lods
in
jns
ficomp
pop
pop
add
adc
pop
mov
mov
mov
(bad)
movs
bound
cmp
pop
pop
repnz
and
jmp
test
sub
add
mov
test
add
mov
pop
mov
in
sahf
jmp
cwde
xchg
push
in
imul
dec
ret
les
out
pop
or
jo
jecxz
outs
xor
xchg
pushf
es
or
imul
mov
pop
cmp
pop
inc
hlt
(bad)
out
arpl
ror
fcom
sbb
ins
inc
mov
mov
clc
or
cmp
mov
jnp
pop
shl
add
out
add
mov
in
cmp
pop
test
xchg
xchg
sub
int
xor
fcmovnbe
xchg
int3
arpl
mov
js
sub
das
sti
pop
mov
adc
lds
retf
xchg
sub
das
or
mov
outs
gs
jge
mov
and
sti
dec
int3
enter
pusha
mov
ins
push
mov
xchg
pushf
mov
mov
loop
fwait
retf
add
mov
dec
xor
and
or
push
inc
add
add
xchg
rol
pop
into
out
bound
imul
lods
push
movs
nop
or
push
out
xchg
adc
adc
and
dec
xor
scas
push
int
jne
enter
rcl
retf
loopne
push
aam
and
icebp
pop
movs
add
mov
push
mov
addr16
ret
jbe
jg
inc
ins
test
retf
int
into
cmc
mov
scas
lods
jb
xor
test
shr
sti
icebp
in
sbb
jmp
repnz
dec
add
popf
mov
pop
int3
lods
xlat
nop
into
shr
mov
dec
xchg
aaa
jle
call
ss
xor
pop
mov
sub
fisttp
ins
and
cdq
xor
lds
(bad)
pop
enter
mov
cs
dec
push
jecxz
mov
xor
adc
push
xchg
sub
sbb
es
mov
loop
inc
mov
dec
or
mov
not
mov
mov
addr16
xlat
or
pop
cmc
mov
mov
mov
pop
sbb
pop
(bad)
rdtsc
add
(bad)
adc
(bad)
fwait
jbe
pop
fild
mov
xor
and
sbb
(bad)
(bad)
cmp
mov
cs
xchg
sub
test
test
fild
adc
clc
movs
repz
add
or
fadd
int3
mov
pop
adc
test
fldl2t
imul
pop
push
int
xor
mov
movs
ins
sub
lods
mov
in
jno
lods
and
icebp
(bad)
mov
ins
jge
in
push
and
cdq
inc
xor
inc
mov
or
push
vmovupd
sub
retf
mov
adc
sub
cmp
repnz
call
mov
sbb
sub
adc
fild
sbb
xchg
mov
inc
cmc
retf
and
add
push
inc
push
in
ja
fcmovnbe
inc
jp
sbb
sahf
pop
push
jne
rol
pusha
dec
mov
adc
xchg
xor
xchg
leave
in
dec
dec
daa
jnp
into
or
cld
(bad)
shl
idiv
adc
int3
sbb
test
test
and
inc
(bad)
int3
fwait
rcl
push
pop
lods
sbb
cdq
aad
jl
dec
mov
loopne
out
cmp
in
dec
into
xchg
sbb
clc
fisubr
push
add
in
std
pop
pop
inc
xor
movs
gs
lds
out
stos
mov
sbb
push
pop
inc
xchg
ror
fsubr
cmp
or
scas
lods
or
cld
cwde
test
(bad)
pop
cdq
inc
lds
adc
dec
in
mov
lods
fs
pop
repnz
es
mov
dec
jle
div
sahf
mov
test
out
loop
adc
test
and
int3
adc
jns
pop
lds
xor
inc
adc
cmps
mov
mov
ds
jns
hlt
lock
arpl
and
inc
mov
cmp
retf
not
mov
dec
push
stos
sub
addr16
mov
mov
dec
jle
adc
fidiv
test
int
icebp
retf
jnp
in
jecxz
mov
adc
(bad)
loopne
enter
pop
leave
mov
adc
mov
cmp
add
xor
(bad)
xor
lods
add
out
out
fs
retf
les
mov
xor
pop
gs
pop
shl
pop
jbe
shr
adc
jnp
mov
popf
xor
je
popf
sub
ss
pop
mov
adc
jmp
sbb
retf
(bad)
adc
sbb
mov
clc
xacquire
or
hlt
lds
scas
push
je
in
(bad)
adc
fstp
add
out
not
pop
dec
imul
add
out
mul
and
ins
add
cwde
push
jecxz
icebp
out
in
dec
jmp
jmp
and
imul
sub
adc
das
or
sahf
mov
adc
mov
jp
cld
push
mov
or
sbb
adc
cmp
adc
jmp
(bad)
pop
pop
addr16
test
or
xchg
xchg
xchg
xor
dec
hlt
or
xor
in
sub
call
pop
sti
ret
dec
or
mov
sbb
pop
sbb
adc
mov
sbb
push
cld
retf
in
add
je
xchg
cwde
int3
xchg
xchg
mov
sbb
adc
xchg
retf
xchg
aam
jno
ds
mov
dec
cmp
popa
loope
mov
div
movs
push
mov
push
retf
hlt
mov
aam
stos
loopne
(bad)
mov
xor
aad
add
cmp
dec
xchg
enter
test
mov
pop
sbb
loopne
outs
sub
push
and
into
imul
jno
and
dec
cwde
xchg
add
mov
mov
daa
sub
scas
xlat
or
inc
mov
mov
(bad)
jmp
out
xchg
rol
scas
mov
shl
cld
inc
cld
jne
scas
sti
mov
mov
add
add
out
pop
stos
and
call
jecxz
inc
pop
dec
out
xchg
aad
jge
hlt
nop
xchg
adc
xchg
cs
ds
mov
bound
push
mov
in
add
js
push
loope
dec
dec
retf
or
scas
outs
jbe
stos
or
inc
xchg
out
xchg
sbb
icebp
push
mov
xor
add
retf
mov
push
push
add
xchg
test
and
xchg
dec
shr
fistp
div
imul
mov
push
inc
sbb
iret
and
(bad)
fistp
jbe
sti
add
bound
in
mov
adc
fldenv
sbb
aas
loope
jno
jo
adc
jbe
retf
mov
push
call
and
sub
out
sub
mov
fisttp
int3
mov
cmps
mov
push
jmp
sti
loop
mov
sbb
imul
or
pop
jmp
sub
sub
bound
or
aaa
add
push
lds
or
fdiv
cdq
sub
adc
adc
call
jmp
clc
mov
dec
sbb
mov
and
push
sub
push
adc
xor
jno
stc
mov
and
neg
add
mov
ret
fisubr
dec
(bad)
mov
mov
sub
pop
imul
ficom
xchg
inc
shr
(bad)
ficom
fs
mov
mov
sub
pop
hlt
sbb
lahf
inc
not
mov
push
imul
adc
mov
jns
sub
and
call
adc
push
test
and
loope
cmps
xor
test
add
or
mov
mov
jl
mov
(bad)
repnz
lods
shl
mov
sbb
sub
inc
mov
pop
push
sub
pop
lods
push
mov
sub
fdivr
fdiv
std
jp
aas
pop
ror
cmp
cld
je
leave
stos
les
mov
in
shl
fs
push
mov
cmc
aam
mov
hlt
dec
mov
mov
and
fbld
sub
adc
jnp
retf
pusha
dec
enter
inc
xchg
mov
rcl
push
sub
cld
pop
fist
cmp
fst
mov
mov
xor
ds
(bad)
add
jge
lea
push
push
and
dec
mov
sub
xchg
pop
cmp
rcr
inc
(bad)
out
(bad)
out
shl
push
mov
test
fisttp
hlt
pop
out
shr
adc
lahf
aas
and
mov
jbe
popa
mov
test
pop
jecxz
mov
into
in
popf
les
mov
push
sbb
jecxz
mov
push
jecxz
inc
pop
or
test
push
imul
out
push
les
push
inc
cwde
and
dec
xchg
aad
dec
retf
mov
sbb
mov
xchg
pop
mov
inc
ins
cmp
lods
call
outs
es
sbb
or
out
loope
jl
ins
jne
fwait
sbb
mov
ja
xchg
mov
mov
dec
gs
xor
sbb
cmp
add
scas
or
aaa
add
cmc
fstp
ja
mov
call
push
cmp
clc
or
mov
shr
mov
add
mov
ja
xor
leave
cmp
repnz
push
cmp
jge
iret
fmul
inc
std
dec
leave
push
sbb
jl
je
out
stos
cmp
outs
fcmove
mov
int3
pop
dec
inc
sahf
jb
adc
lahf
into
adc
push
in
lea
sub
xor
mov
out
push
stos
packuswb
xchg
dec
mov
add
retf
(bad)
mov
shl
xor
mov
fstp
fucomip
mov
mov
inc
or
(bad)
jge
in
jmp
fdivr
aam
adc
repnz
dec
inc
stc
test
pusha
pop
fmul
dec
ja
ins
lahf
(bad)
and
cmp
out
lds
out
mov
mov
jae
loop
push
call
outs
(bad)
push
xor
cmp
int
sub
jp
js
shl
les
daa
jno
inc
inc
add
jbe
mov
mov
jnp
retf
sar
push
pop
push
je
inc
int
jmp
hlt
movs
movs
push
jl
aam
cmp
test
and
retf
jmp
push
aam
add
mov
sub
test
adc
fwait
(bad)
pop
push
shr
setg
push
ds
cmps
es
cld
mov
icebp
sub
dec
arpl
push
mov
fdiv
movs
add
dec
cmp
pop
inc
fisubr
aas
call
loope
and
sbb
mov
clc
jmp
cmc
test
pop
mov
mov
jmp
inc
sar
dec
jne
jp
(bad)
(bad)
ds
cmp
push
xchg
movaps
mov
jo
les
test
sti
mov
sub
jb
frstor
aam
das
lock
or
push
sbb
and
sub
mov
adc
gs
mov
jns
stos
mov
cmps
jl
mov
bound
sub
mov
ss
faddp
xor
hlt
cmp
cdq
jno
js
sub
adc
fisttp
cmc
pushf
jg
jmp
jg
and
pop
loope
out
(bad)
stc
lods
into
add
and
inc
out
adc
adc
cmp
int
cld
popf
mov
daa
imul
xor
in
(bad)
arpl
clc
sub
jge
xchg
ja
jg
pop
sub
je
pop
std
or
jmp
push
stos
ror
fidivr
xchg
sub
xor
inc
test
dec
add
and
jecxz
pop
adc
mov
pop
cmp
cmp
mov
pop
and
lock
xor
xchg
or
call
lock
xor
out
push
xchg
and
or
lods
(bad)
sbb
pushf
mov
lods
in
call
and
pop
mov
out
outs
dec
add
cld
movs
sbb
sbb
and
jnp
jmp
ins
pop
icebp
add
arpl
outs
push
and
mov
mov
repnz
cmp
or
xlat
jbe
movs
inc
cmp
pusha
lea
inc
rol
ret
call
xchg
xor
sub
adc
pop
int3
(bad)
out
pop
adc
xchg
frstor
gs
inc
xor
push
sub
(bad)
push
leave
pusha
dec
push
push
push
lock
mov
popf
cmp
sbb
jae
xchg
jne
xlat
ds
stos
push
lods
sub
pop
ss
sar
or
test
cmp
dec
shl
test
ret
jmp
mov
aaa
sub
mov
in
mov
out
cli
dec
ja
mov
setge
mov
jg
cmp
mov
jb
ds
iret
ret
push
and
add
xor
sahf
sbb
pop
jmp
jmp
(bad)
adc
cmps
sub
loope
icebp
jecxz
cmps
push
inc
nop
cwde
cmp
sub
and
aam
aaa
pop
dec
mov
mov
stos
mov
adc
ja
inc
cmp
mov
int
adc
cmps
xor
push
push
movs
iret
pop
dec
ret
fwait
nop
adc
dec
out
mov
mov
xor
pusha
scas
fnsave
(bad)
jb
mov
or
out
out
bound
(bad)
rol
cdq
sub
pop
sub
movhps
repz
hlt
sti
jge
xor
gs
sbb
nop
(bad)
int3
mov
push
stos
rol
inc
not
nop
xchg
pop
pushf
out
retf
xor
out
test
jecxz
js
in
add
inc
(bad)
jne
bound
lds
add
dec
jbe
es
shl
imul
test
outs
in
test
pop
hlt
test
sbb
mov
test
cs
sbb
or
pop
xchg
aaa
mov
push
sahf
sbb
mov
js
(bad)
jmp
cmp
lock
xor
fadd
lods
xchg
dec
mov
xchg
int
inc
jecxz
movs
push
aam
jmp
or
cli
aam
add
clc
popa
ficomp
gs
es
xchg
sbb
xor
(bad)
popf
in
dec
enter
ret
dec
push
ins
clc
pop
in
push
dec
ss
mov
push
mov
inc
rol
ss
fimul
inc
into
test
or
mov
pop
cs
cld
(bad)
imul
mov
mov
add
lahf
int3
pop
pop
mov
ss
mov
cmp
sub
lods
(bad)
mov
push
or
or
sub
dec
dec
pushf
jle
idiv
rcr
and
mov
pop
mov
ins
push
lds
cmp
cmp
add
mov
mov
mov
push
rcl
inc
jge
jmp
cmp
mov
jg
inc
je
out
(bad)
mov
rcl
add
jns
les
jo
int
lods
sbb
xchg
call
and
in
dec
ss
xchg
retf
movs
popa
in
int3
pop
fsub
sub
jnp
ja
fistp
clc
adc
sub
addr16
push
inc
inc
mov
je
or
call
and
outs
add
mov
sbb
fisttp
mov
mov
test
ins
jmp
inc
jbe
ins
xor
test
mov
cmps
es
push
mov
push
imul
daa
sub
add
or
dec
lods
mov
lock
sub
outs
fcomp
cdq
(bad)
jge
sub
push
test
cdq
ds
hlt
mov
bound
jecxz
icebp
sar
mov
jo
movs
pop
jo
dec
ret
cdq
bound
jae
adc
or
cmps
js
sbb
mov
cmc
inc
pop
aam
inc
xor
push
movs
pop
lock
aas
xor
push
cmp
shl
pop
inc
(bad)
jge
jb
lahf
retf
lods
imul
shl
dec
hlt
ret
fmul
call
fs
mov
pop
into
push
(bad)
out
pop
jmp
and
jmp
or
bound
stos
stc
fild
sbb
add
pop
push
add
cdq
bound
xlat
ret
jl
add
leave
dec
push
popa
adc
fs
fsubr
stos
xlat
or
cmp
pusha
mov
pop
dec
dec
ins
dec
mov
int3
loopne
inc
les
stos
or
lea
hlt
inc
imul
fmulp
cmp
jmp
pop
jbe
mov
aaa
xchg
or
in
add
fwait
mov
ret
cmp
or
int3
jnp
mov
cld
fstp
xchg
and
sub
out
cmps
cmps
cld
movs
mov
cwde
fnstenv
inc
and
adc
fsubrp
fcmovu
mov
mov
xchg
inc
popa
retf
(bad)
sub
cmps
mov
int
jne
inc
xchg
std
call
push
pusha
pop
aam
jecxz
outs
ss
retf
loopne
xor
lea
stc
or
sbb
xchg
fbld
sbb
fcmovb
fadd
mov
aad
jl
xchg
inc
push
out
mov
xor
mov
pop
xor
(bad)
lock
push
arpl
pop
out
jnp
and
adc
sbb
mov
cmp
es
pop
xor
push
(bad)
pop
daa
jmp
xor
movs
aam
sahf
jb
imul
imul
xor
inc
mov
(bad)
xlat
inc
pop
xchg
xchg
add
aam
sbb
mov
and
sbb
sub
(bad)
mov
sbb
test
sbb
popa
mov
std
inc
pop
aas
pusha
adc
inc
or
repz
push
sub
pop
or
call
stos
out
or
call
cmc
sbb
inc
sub
pop
jecxz
retf
dec
movs
xchg
loopne
pop
call
lahf
and
rcl
ret
lods
sti
or
clc
inc
inc
and
push
pop
cmc
je
lods
xlat
ins
loope
imul
or
jne
es
stc
sub
test
out
imul
dec
inc
cmp
pop
xchg
popa
aaa
dec
(bad)
dec
pop
loope
push
js
and
es
hlt
push
aaa
loop
sub
(bad)
loop
aam
ds
arpl
push
neg
fxch
jae
inc
adc
push
mov
mov
aas
ss
dec
mov
je
arpl
movs
iret
ret
int3
das
mov
mov
js
pop
xor
mov
or
dec
adc
in
dec
push
push
ret
mov
addr16
or
mov
adc
imul
inc
jmp
push
jmp
ins
or
xor
es
daa
scas
inc
xor
std
shr
inc
and
xchg
(bad)
fdivr
cs
sub
jnp
dec
shl
out
out
jnp
lds
cdq
cmp
out
in
sbb
call
mov
jg
fs
shl
jmp
inc
fcmovu
rol
call
mov
jne
push
outs
jb
add
push
xchg
sbb
sub
loopne
movs
test
popf
ss
dec
mov
ss
push
pusha
pop
mov
outs
mov
call
ss
lods
and
dec
dec
mov
popf
and
jo
push
mov
sub
sbb
fs
aas
icebp
mov
inc
mov
pop
adc
shl
fbstp
dec
in
cmp
xor
shl
adc
lds
(bad)
stc
pop
fs
aas
push
aad
mov
add
mov
pop
int3
ds
push
repnz
leave
test
mov
dec
jp
retf
and
fwait
js
jg
mov
mov
mov
in
push
xchg
mov
mov
xor
clc
repz
mov
fxrstor
sub
jae
mov
pop
mov
leave
mov
das
scas
ja
xchg
dec
sub
movs
ss
and
xor
pop
jb
push
xchg
jnp
std
test
xor
ret
movd
in
outs
out
popf
das
lods
cmp
imul
nop
fmul
mov
mov
cmc
add
pop
(bad)
sti
dec
adc
jle
pop
add
mov
mov
jne
inc
sub
dec
xor
sti
pop
mov
or
sbb
setg
(bad)
xlat
sti
call
push
sbb
push
loope
out
ret
xchg
popa
ds
(bad)
cmp
adc
addr16
and
cmp
add
pop
push
jl
pop
enter
ins
push
fst
add
mov
pop
mov
(bad)
or
in
inc
jae
inc
in
jo
cmp
xchg
inc
(bad)
inc
jmp
pusha
outs
add
test
or
cwde
clc
fild
pop
mov
add
(bad)
dec
loope
fisttp
cmp
(bad)
push
push
mov
test
addr16
test
pop
jne
ret
cmc
je
aas
movs
out
mov
dec
dec
std
sub
push
mov
or
pop
jnp
hlt
xor
ret
pusha
fld
xchg
pop
icebp
dec
call
shr
mov
rcr
pop
test
add
movs
push
xchg
add
gs
inc
ret
bswap
push
cmp
sub
dec
cld
adc
xchg
mov
inc
mov
lods
pop
cmps
aas
mov
sub
lods
inc
addr16
int
add
loop
inc
cwde
loop
shl
fst
sub
jmp
sub
jle
js
sti
fadd
stos
daa
hlt
xchg
dec
mov
inc
cdq
outs
push
aad
xor
and
pop
das
enter
hlt
iret
and
mov
jmp
cwde
cld
jae
fldcw
daa
iret
scas
retf
mov
ret
adc
jmp
mov
dec
mov
shr
pushf
fistp
mov
push
bswap
inc
out
cmps
adc
popf
mov
retf
jno
push
jns
imul
repz
xchg
movs
xchg
ja
pushf
movs
inc
dec
rol
fld
cdq
sbb
call
call
xchg
leave
push
shl
mov
call
js
xchg
add
jle
ficom
sub
leave
das
and
xchg
in
xchg
jmp
add
lds
mov
cld
xchg
test
cmp
xchg
cld
add
jl
cmp
mov
add
inc
test
xor
repnz
and
adc
call
mov
fmul
sub
mov
out
ret
add
jge
xlat
xor
sbb
popf
mov
pop
dec
push
mov
jae
cmp
xor
jb
pop
mov
popa
sbb
fldenvw
push
pop
bound
adc
mov
push
cmp
into
(bad)
mov
loop
arpl
adc
jnp
fsub
mov
adc
and
mov
push
pop
bound
cli
stos
call
mov
fnstcw
push
cs
push
cs
shr
adc
mov
sbb
lahf
mov
add
jg
or
adc
out
repz
cmps
test
pavgb
add
imul
ret
jbe
mov
mov
mov
cmps
imul
loopne
push
aad
repnz
gs
lahf
movs
dec
js
xchg
xchg
(bad)
mov
cwde
xlat
push
and
ret
bound
push
fisub
mov
scas
add
jnp
cmp
in
loope
icebp
retf
fld1
jne
pop
pop
fstp
xchg
add
popf
and
out
and
fwait
pop
test
repz
shl
mov
in
int
and
pop
jp
adc
mov
mov
dec
mov
(bad)
mov
fldenv
xchg
add
jg
sar
sub
jge
sub
aas
ins
aaa
ins
jl
jne
xor
bound
ins
or
in
popf
xor
je
lods
xor
pop
cs
adc
jbe
xlat
mov
(bad)
movs
xchg
inc
mov
dec
cwde
inc
jecxz
inc
ror
mov
push
dec
pop
and
jbe
rol
jns
out
js
cmc
dec
inc
aam
cwde
sbb
jmp
jp
and
fs
jbe
rol
ins
pop
add
clc
gs
or
loop
dec
or
mov
mov
jmp
jg
bound
jo
jge
xor
or
enter
and
mov
scas
lahf
xlat
add
dec
sbb
xor
sub
movs
inc
out
inc
mov
rol
aad
push
ret
pop
ss
test
outs
xor
ret
leave
imul
movs
in
adc
xchg
shr
or
xor
lds
adc
inc
clc
pop
cli
push
mov
mov
call
(bad)
shl
pop
sub
loopne
mov
push
sbb
sub
jmp
pop
in
call
xrelease
mov
(bad)
fisubr
scas
sbb
shr
lahf
and
cld
xor
frstor
jl
mov
pusha
mov
push
das
xchg
push
pmullw
or
adc
sub
pushf
push
or
add
mov
lods
stos
inc
or
jecxz
popa
or
push
and
dec
daa
in
jg
shr
(bad)
sub
mov
mov
push
fst
loopne
add
or
jl
jo
lock
pop
mov
or
cwde
adc
shr
xchg
xchg
lock
lahf
mov
movs
in
pop
call
ret
les
xchg
sub
xchg
(bad)
jmp
pop
mov
loopne
fmul
sbb
add
jmp
add
adc
or
jae
fs
adc
imul
inc
pop
lods
adc
movs
sbb
outs
loope
push
js
add
lds
sti
xor
cmps
xchg
mov
mov
sbb
pusha
pop
xlat
fsub
aad
je
fisttp
ja
xor
xchg
and
call
dec
jnp
adc
ret
mov
mov
and
call
pop
pop
inc
nop
cmp
mov
repnz
sub
xchg
push
ror
dec
stc
push
fs
cld
jle
push
popa
dec
jp
inc
push
in
jl
fadd
sahf
out
pop
push
sub
es
es
inc
rol
cmp
or
pushf
dec
mov
gs
fdiv
xchg
ror
mov
and
dec
leave
aaa
mov
sbb
push
popf
dec
adc
pop
mov
push
mov
gs
add
adc
out
fld
cmp
inc
rsm
or
repz
in
das
loope
mov
arpl
and
aam
cmp
inc
les
jmp
fistp
add
cmp
loop
jmp
xchg
adc
es
adc
push
jmp
cmp
stos
or
fwait
dec
ja
mov
pop
dec
push
dec
cmps
outs
jp
pop
sub
scas
mov
dec
pop
push
mov
movs
call
xor
in
arpl
aaa
adc
out
lods
push
lock
push
pop
and
sbb
mov
jecxz
xchg
jne
pop
pop
add
daa
xchg
loop
mov
in
add
sbb
(bad)
adc
pop
pop
gs
mov
lods
dec
add
mov
add
jle
das
movs
test
inc
jg
sbb
jge
lds
push
cmp
shl
adc
cmp
inc
in
mov
ss
call
not
fs
dec
cmps
inc
mov
jge
dec
add
jne
sti
xor
call
stos
mov
in
add
movs
pop
rol
inc
mov
jmp
and
cdq
cmps
mov
cld
sbb
(bad)
daa
aas
leave
push
jae
sbb
adc
or
imul
mov
xor
pop
pop
or
inc
xchg
xchg
pop
lea
dec
jmp
pop
cli
mov
imul
mov
sbb
cwde
in
jg
add
mov
pop
cdq
inc
xor
or
rcl
add
ins
xor
dec
cli
mov
mov
aas
jmp
pop
rcr
xchg
popa
sbb
cmp
add
or
or
add
rcl
pusha
xor
gs
aad
sub
push
stos
aaa
aas
iret
jae
inc
test
xor
popf
adc
push
adc
or
mov
sbb
mov
hlt
data16
cdq
fisub
sub
nop
xor
dec
outs
xor
push
cld
jne
(bad)
idiv
add
xchg
loopne
shl
lds
jmp
mov
bound
loop
lahf
iret
sub
and
push
mov
fistp
loope
outs
movs
inc
push
into
pop
and
mov
ror
into
dec
add
enter
shr
xchg
push
mov
jne
or
clc
aaa
jb
loop
xor
pusha
adc
push
xchg
loope
cmp
call
xchg
mov
js
jg
shl
fmul
and
mov
(bad)
into
movs
inc
sbb
into
and
retf
and
(bad)
mov
jp
daa
out
mov
enter
push
nop
lock
test
cmp
loope
pusha
or
or
sar
push
int3
mov
push
inc
pushf
push
xor
sub
imul
ret
cmp
sbb
add
push
ficomp
fadd
and
inc
aaa
push
push
xchg
mov
cmp
bound
pop
iret
mov
adc
lods
call
or
loope
mov
mov
xor
inc
mov
jmp
out
lock
es
adc
mov
pusha
rol
cmps
call
dec
mov
pop
div
adc
hlt
push
(bad)
adc
pusha
call
mov
xchg
xor
daa
int3
mov
jnp
jg
inc
bound
ins
xor
shl
fsubp
sub
pusha
dec
imul
sbb
and
jo
cmp
(bad)
dec
adc
ret
sub
jae
lods
lea
mov
sbb
mov
aam
pop
pop
add
add
inc
repnz
xor
and
mov
shl
mov
mov
dec
and
aam
fnstcw
jge
add
pop
sub
(bad)
(bad)
jecxz
mov
pop
or
xlat
inc
inc
leave
sub
pop
pop
mov
stc
std
push
aas
loop
cmp
pop
sub
push
pop
lods
sbb
mov
sbb
shl
sub
inc
js
aad
mov
push
and
dec
sbb
stos
push
cmp
cmp
out
(bad)
mov
hlt
mov
ja
inc
xchg
mov
clc
arpl
fimul
jbe
bound
xchg
and
mov
push
retf
inc
and
xchg
in
je
stos
inc
lods
daa
leave
and
(bad)
aas
push
dec
xchg
leave
popa
sub
jbe
shr
cmp
push
icebp
mov
jb
pop
outs
les
(bad)
(bad)
call
sub
int3
and
inc
jge
cdq
mov
repnz
jae
xor
fdiv
pop
inc
or
(bad)
aam
xor
jae
pop
stos
fwait
int3
lock
(bad)
in
inc
aaa
push
aaa
sbb
cmp
fs
in
push
inc
add
cmps
mov
push
mov
mov
(bad)
jb
jns
movs
leave
jbe
hlt
and
mov
pop
jb
pusha
xlat
xor
cdq
lea
in
ds
jmp
ins
dec
retf
stos
xchg
pop
in
xchg
aas
mov
lahf
and
xor
adc
shr
cmp
adc
sub
movs
sahf
sbb
bound
and
sti
dec
lods
gs
cmp
dec
mov
and
and
ret
retf
xchg
inc
pop
jno
xchg
jbe
mov
ret
test
mov
inc
fstp
jge
mov
mov
jns
(bad)
ins
dec
gs
push
xchg
and
daa
fnclex
pop
mov
(bad)
pop
mov
cdq
test
sub
push
fcom
(bad)
fist
jno
pop
fadd
leave
dec
cwde
repnz
cmps
inc
ret
cmp
dec
sub
je
mov
es
ret
pop
stos
mov
cmp
movs
cmp
sub
(bad)
jnp
adc
dec
in
retf
dec
cmp
xchg
inc
push
ret
repz
pop
or
(bad)
or
cmps
ins
in
cwd
lods
pop
dec
je
ret
pop
mov
test
inc
int
xchg
xor
adc
das
xchg
inc
mov
cmc
paddd
(bad)
je
cwde
das
push
mov
pop
adc
adc
movs
in
adc
add
xchg
in
mov
inc
pusha
mov
movs
outs
push
or
addr16
push
inc
xlat
inc
fiadd
repnz
sub
adc
mov
xchg
xchg
and
jne
mov
ds
mov
inc
pop
popa
cld
inc
mov
sbb
aas
loope
fisttp
dec
push
mov
pop
aas
xchg
xlat
sbb
mov
or
mov
sub
daa
dec
shr
pop
dec
lods
jns
xchg
es
sbb
cmc
adc
test
add
aaa
xchg
test
lea
das
into
xor
and
cwde
gs
je
sti
xchg
pop
lock
cli
adc
cmps
inc
jp
and
aaa
mov
rol
outs
push
mov
retf
je
lods
std
mov
sbb
push
jl
(bad)
cmps
out
mul
mov
iret
xchg
jno
(bad)
daa
fwait
xor
enter
jmp
push
inc
sbb
lods
loope
jae
xor
sub
jl
inc
push
fbstp
sbb
sbb
adc
stos
ror
cmp
dec
mov
or
rcl
enter
xor
push
test
pushf
pop
idiv
and
jl
clc
dec
xor
cmp
popa
fmul
push
(bad)
and
pop
xchg
push
pop
or
mov
movs
movs
daa
ret
fs
dec
sbb
mov
fwait
xor
popf
add
test
or
add
psrlw
fsubr
lock
scas
es
inc
addr16
mov
jnp
mov
in
xor
xchg
dec
ret
dec
and
int3
xchg
and
retf
xor
mov
sub
sar
pop
push
inc
into
sub
or
mov
dec
push
jecxz
retf
rcl
inc
add
(bad)
js
add
pop
outs
int3
pusha
sub
call
in
(bad)
xor
call
push
std
sub
jno
loopne
dec
mov
out
pop
mov
cmps
jmp
movs
mov
sahf
pop
popf
mov
fs
mov
int
je
(bad)
out
push
icebp
pop
cs
call
movs
jns
or
cmp
and
rcr
push
cmp
cmc
adc
xchg
xchg
cli
sbb
sbb
cmps
call
or
out
repz
lods
popf
xchg
or
xor
mov
pop
push
jmp
add
jne
sbb
jb
pop
add
add
sbb
add
fs
cs
or
jb
adc
lahf
jne
aad
mov
mov
cmps
xchg
xchg
push
scas
fist
fscale
inc
or
xchg
out
call
mov
add
and
clc
outs
and
push
fidivr
bound
jecxz
or
push
pop
push
mov
retf
fisttp
xchg
enter
ins
sti
loope
sub
jnp
push
cld
inc
mov
inc
rol
lods
jle
sbb
shl
popa
(bad)
sbb
ins
or
out
push
xor
mov
inc
sahf
or
ss
lock
jmp
mov
sbb
adc
push
push
aam
cmp
cmp
sub
fisubr
add
add
pop
imul
dec
sub
jno
(bad)
sti
and
sbb
fadd
xchg
neg
jb
xchg
pop
sti
int
inc
(bad)
fistp
xchg
std
mov
les
jmp
pop
xlat
cs
cmp
aas
push
sbb
js
popa
add
pop
adc
fmul
and
add
xor
repz
pop
push
leave
jbe
js
and
lahf
xchg
je
lods
mov
imul
dec
dec
sub
push
movs
ds
xchg
xchg
pop
or
test
ja
dec
push
inc
pusha
add
push
das
out
fcom
in
or
jg
in
or
mov
sti
inc
cwde
int3
mov
xor
rcr
inc
dec
xlat
mov
scas
inc
ret
sbb
pop
xchg
sub
dec
adc
test
xor
push
loope
popa
cwde
clc
scas
cwde
fld
xor
(bad)
xchg
sub
inc
lock
mov
and
push
out
stc
inc
jp
sub
push
dec
push
sub
inc
jo
(bad)
sahf
jp
mov
arpl
nop
push
ins
rcl
xor
pop
ins
ins
sub
mov
popf
es
sub
dec
or
aam
clc
test
leave
inc
inc
hlt
pop
jb
mov
xlat
push
hlt
mov
lds
pusha
mov
cld
xor
pop
ffreep
xchg
add
iret
push
jbe
in
pop
iret
jp
scas
in
clc
sbb
idiv
adc
in
scas
sbb
and
dec
aaa
pop
popf
loope
mov
test
movs
mov
dec
xchg
sbb
test
loopne
cmp
xlat
les
mov
outs
sbb
xor
sub
rol
test
jge
sub
lods
lahf
adc
lods
popf
(bad)
outs
rol
in
inc
push
xchg
shl
mov
bound
mov
lock
dec
dec
and
repz
pop
pop
hlt
fsub
test
outs
mov
mov
int
(bad)
repnz
push
cmp
lods
adc
adc
and
jae
ret
sbb
inc
movs
jge
sub
ja
cld
dec
rcr
or
sub
shr
sbb
sahf
jne
mov
imul
pop
pop
sub
je
(bad)
sbb
imul
push
inc
push
(bad)
jnp
aas
mov
add
stc
sub
sub
xlat
mov
and
cmps
xor
lds
in
mov
not
in
inc
xor
sub
mov
(bad)
lea
dec
dec
jg
push
out
mov
add
inc
lds
xlat
or
loope
lds
jmp
cld
into
aaa
dec
std
retf
(bad)
cld
mov
imul
xor
lods
std
sar
retf
mov
cmp
adc
sub
dec
rcr
sbb
mov
jle
retf
rol
shl
or
sbb
ror
mul
fwait
jmp
sub
frndint
push
adc
inc
int
mov
ja
pushf
ins
sub
mov
lahf
inc
xor
cmp
push
lods
mov
xchg
ins
cmp
or
dec
cli
sbb
add
test
test
jmp
js
jge
xlat
icebp
or
cmp
fild
or
jmp
(bad)
sti
mov
and
sub
ficomp
pop
pop
pop
xchg
inc
fimul
xor
cmp
in
xchg
out
sub
mov
and
dec
pop
push
adc
rcr
sub
ds
leave
jno
mov
mov
cmp
mov
push
mov
adc
aaa
mov
inc
sti
mov
inc
inc
jns
mov
dec
scas
cdq
ret
fwait
push
xchg
in
int
add
movs
cmp
aaa
jno
fisttp
xor
mov
cmp
test
sbb
dec
addr16
mov
add
(bad)
les
(bad)
dec
mov
push
sahf
jno
sbb
stos
dec
test
dec
pop
pop
call
mov
ja
push
pop
mov
inc
or
or
mov
add
movs
movs
cmp
test
fild
dec
mov
out
mov
leave
or
(bad)
das
add
in
js
jae
xor
fsub
out
xor
push
pusha
test
sub
or
sub
or
pop
cwde
in
xchg
inc
jge
rol
adc
cmp
xor
push
movs
mov
je
div
pop
pop
not
adc
xchg
(bad)
cmp
std
rcl
add
es
xchg
xor
rol
adc
test
cmp
ret
mov
xor
fcmovnbe
leave
addr16
or
jg
jb
inc
push
cmp
pusha
or
xchg
add
pushf
rcl
cmp
jl
dec
inc
inc
dec
pushf
shl
aaa
xor
mov
daa
or
nop
iret
sub
push
mov
cmp
cmp
out
scas
or
cmp
ret
in
xchg
sbb
xor
pop
push
push
aad
add
imul
inc
iret
pop
rcr
into
mov
mov
adc
mov
jmp
xchg
sahf
scas
xchg
pop
pushf
std
in
in
adc
sbb
xor
in
inc
call
or
push
sub
lods
imul
into
mov
cmps
dec
movs
outs
cmp
mov
popa
or
jecxz
movq
jno
inc
mov
jbe
xchg
inc
rcr
add
cmp
(bad)
mov
loopne
adc
inc
inc
xchg
test
inc
retf
sub
sub
das
das
jmp
sbb
add
push
repnz
inc
dec
stc
pop
aas
fbld
stc
popa
cdq
ss
popa
jg
adc
int3
sub
rcl
fmul
add
add
int
lods
mov
addr16
cmp
mov
sub
pop
cmp
mov
aad
xchg
int3
fdiv
xor
xchg
das
retf
mov
xchg
sub
sbb
inc
pop
inc
or
(bad)
jo
daa
cmc
popa
fld
outs
lods
popa
cmc
push
loopne
(bad)
and
loopne
sub
leave
in
movs
dec
dec
jmp
cmp
mov
pop
pop
inc
or
fist
pop
pop
jmp
push
test
adc
xor
retf
das
ret
xchg
cmp
cmovae
push
test
mov
int
cmps
and
sbb
pop
xor
retf
fisub
cwde
addr16
inc
out
add
inc
lds
shl
or
pop
mov
gs
add
sub
and
fwait
sbb
jo
shl
pop
jns
test
xchg
and
sar
xor
add
out
jmp
test
mov
xchg
mov
inc
and
les
je
stos
push
pop
cli
jns
push
inc
sahf
push
hlt
mov
retf
push
ret
mov
lods
shr
retf
ret
adc
xor
retf
mov
cmp
jmp
push
loope
gs
popf
std
pop
fwait
lods
xor
pop
(bad)
pextrw
xchg
add
ret
into
nop
xchg
(bad)
jg
jbe
inc
int
mov
lds
out
aaa
dec
xchg
push
inc
add
sbb
sub
adc
or
jno
cmp
ins
push
sbb
jnp
and
xor
xor
push
jnp
mov
in
call
lea
add
mov
adc
int
inc
ds
mov
sbb
fcomp
push
aas
cmp
arpl
ss
inc
pop
cmps
mov
out
mov
adc
cdq
(bad)
gs
push
test
call
mov
cld
jo
imul
push
stos
ins
sbb
inc
dec
cwde
xor
mov
dec
mov
mov
push
and
push
es
add
das
int3
sbb
jae
shl
pop
stc
inc
iret
call
or
idiv
movs
cmps
cmc
dec
movs
xchg
jns
pop
pop
mov
pop
jo
popa
or
or
pushf
call
cmp
add
hlt
cmp
arpl
mov
int3
adc
inc
sahf
pop
inc
mov
mov
shl
xor
mov
outs
pop
jb
xor
mov
cmps
fidiv
loopne
mov
jne
mov
inc
inc
out
stos
xor
fidiv
gs
sub
das
mov
daa
cmps
jl
dec
mov
sub
dec
rcl
lahf
cdq
sbb
xor
sbb
arpl
lock
retf
in
popa
xchg
fnstsw
dec
pop
or
cmp
repz
push
jmp
or
pushf
in
imul
mov
push
mov
bound
add
ja
ret
int3
mov
movs
cli
jg
jg
int
and
xor
bound
jns
dec
sub
test
out
fadd
fcmovnu
mov
mov
fld
loope
push
pop
mov
aam
int3
xor
add
retfw
ins
test
icebp
cmp
sub
push
loope
pop
js
je
dec
jae
xchg
push
aaa
ficom
add
outs
and
leave
jne
mov
and
adc
pop
jo
jp
jge
adc
ss
and
and
ret
add
xor
fdiv
retf
cmps
mov
retf
cmp
(bad)
xor
sbb
int3
call
shr
pop
cmovb
mov
ins
push
js
cwde
mov
popf
xchg
fisttp
mov
xor
jbe
push
xor
mov
cmps
ins
fisubr
sub
xor
sub
nop
jmp
adc
mov
pushf
gs
idiv
cmps
jnp
out
out
adc
loopne
repz
cmps
aad
add
cmp
cmp
mov
push
(bad)
pop
adc
retf
cmps
mov
add
adc
mov
mov
jns
jo
mov
int
xor
sub
mov
pop
inc
test
ins
clc
xchg
dec
cs
adc
add
je
dec
push
cmovle
xchg
es
pop
push
loop
fist
aad
xchg
pusha
jmp
xor
pop
pop
and
push
lds
loop
fld
mov
cli
dec
fistp
shl
in
gs
xor
or
js
cmps
push
cmp
inc
adc
mov
inc
xor
cmps
mov
retf
dec
add
repnz
ficom
outs
cmp
mov
nop
bnd
pop
mov
(bad)
jmp
fs
xor
call
dec
add
stos
loop
lods
jmp
nop
mov
int
and
fxam
ins
pop
inc
mov
xor
int
push
adc
xchg
dec
faddp
or
icebp
fs
jmp
xor
cdq
cwde
or
out
dec
cs
xor
jae
jmp
jecxz
ret
and
push
jbe
stc
push
jmp
jecxz
jne
clc
mov
into
pushf
test
cld
addr16
cmp
pop
cmp
push
push
dec
xorps
lods
outs
scas
in
test
cmp
inc
pushf
jle
shl
enter
xchg
add
pop
loop
jecxz
dec
ins
xchg
ret
test
pop
jmp
pop
sub
pusha
icebp
sbb
inc
mul
push
inc
aad
imul
sbb
and
pop
cs
dec
in
adc
arpl
adc
jae
mov
stos
sub
fldenv
xchg
add
adc
cwde
ds
pop
fdiv
pop
repz
int
dec
mov
mov
xchg
movs
add
iret
xor
scas
daa
imul
bound
nop
push
leave
fldcw
imul
cmp
jno
loop
inc
and
aas
addr16
add
xor
inc
xlat
and
mov
fwait
test
sbb
jp
inc
push
fisubr
rcr
xchg
sub
adc
dec
sub
data16
(bad)
jp
xor
stos
mov
add
(bad)
pop
fiadd
jmp
mov
(bad)
sbb
test
pop
inc
and
mov
mov
movs
pop
call
dec
mov
hlt
xchg
sahf
inc
repnz
arpl
scas
xlat
mov
mov
push
out
ja
test
jl
jno
imul
xor
cmp
movs
call
sub
xlat
sar
push
arpl
xchg
jle
jmp
and
mov
inc
lahf
int3
dec
sub
iret
xlat
sbb
aaa
(bad)
out
add
out
fcomp
push
ins
lods
lahf
cmc
pop
xchg
repnz
mov
pop
jecxz
sub
push
xor
test
push
sahf
iret
in
and
stc
(bad)
ins
or
cmc
data16
push
rcr
inc
enter
mov
test
pop
fidiv
clc
hlt
dec
clc
xchg
pop
stos
push
jmp
xor
movs
jnp
dec
mov
sub
test
in
add
pop
pop
xor
pop
cmp
pop
jmp
stos
xor
mov
jmp
or
xchg
dec
daa
push
push
pop
stos
ins
mov
mov
push
mov
ins
dec
int
shr
jmp
or
loop
push
je
add
sahf
cmps
scas
pop
sub
sub
sub
dec
popf
stc
stc
movs
xchg
and
mov
outs
hlt
outs
lahf
sub
(bad)
in
fmul
lods
mov
sbb
imul
mov
or
jle
dec
loope
add
popa
(bad)
dec
ror
add
mov
stos
popa
ror
cli
xor
pushf
push
bound
lods
push
cmp
scas
scas
call
test
outs
inc
retf
(bad)
mov
pop
pop
lahf
or
pop
and
xchg
inc
sub
xchg
iret
inc
adc
add
leave
adc
movs
jmp
fwait
sub
nop
movs
test
mov
jnp
jb
stos
push
pop
lods
test
dec
push
dec
sbb
dec
iret
xor
xchg
pop
jmp
icebp
mov
sbb
std
test
or
out
mov
sahf
add
stc
lahf
ja
sbb
cwde
int3
ror
ja
dec
dec
jmp
aam
out
scas
adc
ffree
xchg
inc
inc
xlat
std
mov
clc
fstp
xchg
cmp
popa
mov
call
mov
imul
retf
sbb
adc
mov
stos
loop
cmps
cs
ss
adc
xchg
ins
rcr
les
inc
pop
ret
adc
pop
lahf
xchg
popf
int
int
(bad)
cmp
add
aam
hlt
retf
xchg
cs
movs
popa
in
mov
cld
mov
mov
xor
lods
test
in
pushf
inc
pop
push
mov
push
(bad)
jle
and
sbb
ret
sbb
dec
cli
xchg
or
sti
mov
and
mov
aam
and
fs
out
call
shl
test
push
and
(bad)
into
xchg
out
mov
xor
das
sar
and
adc
call
scas
je
xor
rcr
sub
(bad)
sbb
pusha
push
(bad)
dec
and
retf
gs
in
pop
pop
test
xchg
inc
sub
adc
mov
idiv
imul
test
jle
jo
retf
pop
cmps
and
jecxz
mov
dec
pusha
push
cmp
out
sbb
test
js
ss
mov
xchg
ins
nop
loop
xchg
pop
movs
pop
test
retf
movs
mov
mov
add
(bad)
jo
stos
ins
sbb
jne
jnp
push
(bad)
mov
pop
or
pushf
xchg
sbb
test
cli
movs
push
pop
mov
cmovg
fidivr
retf
mov
jbe
dec
in
lahf
(bad)
sub
stos
dec
lock
push
loop
mov
call
jl
push
or
pushf
(bad)
jmp
mov
or
pop
pop
imul
sbb
outs
add
pop
mov
pop
or
sahf
lods
int3
dec
add
jecxz
and
(bad)
pusha
adc
mov
fist
ret
add
cdq
inc
sti
add
mov
mov
push
pusha
dec
loope
sbb
cmp
bound
lahf
popa
leave
mov
inc
push
bound
mov
fcom
jb
int
ins
arpl
imul
or
je
ds
pop
out
inc
xchg
lods
cdq
scas
adc
lea
cdq
mov
xchg
sar
sar
mov
push
pop
loopne
adc
(bad)
mov
fs
bound
hlt
stos
movs
loopne
sub
and
in
xchg
jmp
loopne
xchg
inc
fsubp
pop
fcomp
inc
rcl
ret
pop
adc
mov
dec
shl
dec
push
sti
push
mov
mov
idiv
mov
jecxz
in
add
jno
push
mov
loop
add
addr16
scas
sti
adc
push
adc
repnz
jle
mov
aas
arpl
or
cmp
pop
int
adc
push
push
pop
es
out
jecxz
loop
push
mov
lea
add
hlt
(bad)
addr16
push
xor
cmp
ss
pop
loope
bnd
add
je
aad
sub
xor
mov
pop
movs
lds
jno
xor
push
lea
int
lods
mov
cmc
inc
mov
cmp
das
cwde
jno
inc
jnp
lahf
(bad)
and
push
(bad)
retf
xchg
xlat
(bad)
mov
xchg
pop
cmp
xor
test
int3
jg
push
jl
or
sbb
and
mov
or
push
das
jl
dec
xor
jge
push
sbb
fsubr
inc
ins
xor
call
es
xchg
or
pop
ja
sub
(bad)
cdq
xchg
sti
test
mov
jmp
push
add
push
sahf
lods
stos
add
stos
inc
aad
outs
mov
mov
push
adc
mov
out
mov
fs
aad
movs
inc
and
mov
xchg
jno
hlt
das
xlat
or
inc
mov
sbb
pop
sbb
ins
in
icebp
mov
ret
rcr
in
aas
int3
xchg
fdiv
hlt
ins
imul
or
add
sub
pop
jne
xor
fucomip
(bad)
stc
sbb
xchg
xor
xchg
mov
shl
adc
loope
cmp
xchg
add
int
test
dec
out
and
fst
ss
mov
mov
inc
sbb
mov
daa
jne
or
fiadd
data16
mov
aam
(bad)
ins
lock
fsubrp
mov
dec
jl
dec
bound
push
out
jl
jle
aad
and
xchg
add
cmc
data16
push
and
adc
mov
adc
push
pop
sbb
adc
xor
lds
loope
sub
jmp
sti
mov
les
addr16
inc
and
gs
popf
pop
test
or
cs
fwait
mov
hlt
(bad)
in
jmp
(bad)
mov
lods
xchg
mov
cwde
xchg
xchg
or
adc
dec
jae
pusha
adc
(bad)
aad
iret
jg
mov
mov
iret
sub
lds
call
stos
gs
xor
cmp
lea
rdrand
popf
jecxz
jbe
push
cli
xchg
into
and
push
out
push
gs
scas
dec
aaa
fsubrp
shl
jmp
je
clc
dec
dec
cdq
push
pop
not
(bad)
stc
sub
cdq
ins
or
clc
jg
in
pop
repz
xlat
sar
gs
xchg
retf
fsubr
fs
jmp
loopne
data16
cmp
sbb
in
adc
adc
mov
xor
enter
push
mov
xchg
and
add
pop
push
jp
push
jp
adc
loop
adc
aam
(bad)
(bad)
adc
iret
xchg
or
es
aad
fbld
xor
and
fstp
push
js
out
sub
mov
xor
xchg
xor
lahf
sub
mov
pop
mov
aaa
or
test
dec
push
xor
xor
dec
sub
dec
mov
adc
scas
sub
out
mov
lock
jns
repz
mov
fiadd
jp
sti
inc
mov
retf
inc
ins
push
out
out
in
fdiv
pushw
adc
adc
lea
sbb
push
or
shr
lea
mov
pop
xor
loop
in
adc
movs
lea
sub
aad
push
mov
cmps
in
mov
mov
pop
cmp
fs
fistp
fidivr
dec
inc
push
sbb
push
ficomp
loope
pop
sbb
jge
fs
lahf
jae
ret
mov
mov
repz
hlt
and
cmp
scas
mov
mov
addr16
nop
test
mov
push
push
jg
(bad)
mov
(bad)
push
xchg
in
outs
lods
add
in
addr16
imul
lods
lea
adc
scas
jmp
fdiv
push
jb
inc
ror
stc
aas
shr
stc
ins
mov
pop
mov
test
adc
jp
inc
mov
push
adc
scas
stc
fist
mov
outs
gs
cdq
les
push
pop
jmp
pushf
mov
xor
dec
mov
dec
in
push
into
push
sbb
fmul
paddusb
jp
mov
adc
call
mov
pminsw
jbe
jno
retf
aaa
sub
mov
or
dec
sub
das
iret
jb
repnz
mov
popa
mov
sbb
std
fiadd
jb
cs
sbb
retf
adc
jb
nop
shl
push
lea
invd
add
pop
jmp
xchg
mov
mov
mov
mov
mov
scas
test
les
pop
jae
inc
in
and
stos
and
lea
(bad)
fs
push
enter
pop
hlt
(bad)
cmp
inc
ror
xchg
and
pop
cmp
sub
mov
loop
fldcw
jp
sub
sbb
sub
mov
pop
add
mul
cmp
pop
push
jne
dec
cmp
push
test
sbb
ss
iret
push
mov
imul
xor
gs
lds
pop
icebp
test
inc
push
inc
mov
xchg
lahf
jle
jmp
scas
or
sub
out
loopne
or
imul
adc
int3
push
lea
mov
aaa
in
fcomp
push
fmul
lahf
fld
mov
es
or
push
pop
push
jmp
dec
xor
xor
sbb
retf
mov
fstp
push
repz
jge
jbe
call
or
cmp
cwde
mov
(bad)
hlt
or
cmp
inc
test
ret
rcl
cmc
and
int
popa
mov
rcl
popa
push
mov
or
je
into
retf
sub
push
lahf
and
mov
loopne
mov
movs
call
imul
addr16
mov
nop
or
push
jb
cmp
out
xor
push
repnz
cmp
dec
ffree
mov
sbb
and
mov
mov
int
mov
dec
aas
push
(bad)
adc
in
cmp
mov
pop
aad
popf
sbb
jle
lds
and
add
retf
ins
retf
loopne
das
mov
dec
ret
mov
lods
or
stos
mov
mov
fst
sub
mov
inc
bound
cs
aaa
mov
sub
sbb
mov
xchg
fild
pop
int
or
xlat
stc
cmp
in
imul
(bad)
fbstp
or
xchg
xchg
inc
sbb
sbb
ins
fsubr
iret
push
cmp
xor
push
test
push
popa
jno
cmp
test
hlt
mov
repz
or
mov
and
pop
mov
jle
loop
or
cmp
pop
adc
inc
cwde
add
aam
add
bound
(bad)
shr
sub
mov
retf
rcl
pop
add
fisub
push
call
in
test
mov
push
or
in
push
fldenv
daa
leave
std
dec
xchg
mov
mov
mov
call
push
mov
xchg
dec
add
stos
or
rol
or
inc
and
dec
enter
push
xor
ins
cmp
(bad)
fiadd
adc
cmp
sbb
push
push
out
xchg
iret
repnz
bound
std
xchg
int3
mov
daa
ss
inc
push
jmp
or
pop
movs
jp
cmp
icebp
int
dec
mov
out
add
mov
and
xchg
in
cld
mov
xor
jge
pop
icebp
sar
push
push
lods
pop
rol
adc
pop
sti
es
inc
scas
jle
ds
dec
jg
adc
fstp
lock
gs
mov
mov
out
dec
repz
in
jl
jne
imul
push
push
dec
xor
cmp
fwait
mov
dec
neg
push
popf
movs
inc
pusha
ds
cdq
or
push
add
fwait
mov
or
test
sbb
cmp
pusha
test
test
xchg
cmp
cmp
sti
add
(bad)
push
ins
dec
xchg
cld
inc
adc
dec
imul
sbb
push
xor
scas
or
sbb
xor
movs
pminsw
mov
int3
mov
leave
mov
xor
mov
cwde
adc
iret
(bad)
cmps
(bad)
(bad)
fdivr
lds
xchg
xor
fidivr
or
aam
or
loop
fwait
push
xchg
sub
(bad)
mul
lock
sbb
pushf
pop
add
ror
mov
xchg
fstp
sub
push
lock
(bad)
jnp
fcom
xor
fucom
sub
imul
push
aas
cli
ins
jl
div
jmp
jecxz
(bad)
ror
scas
imul
mov
call
fmul
sbb
popf
hlt
es
add
dec
ror
jo
add
retf
dec
(bad)
fs
jmp
add
ins
mov
push
inc
cld
mov
(bad)
fst
push
movs
(bad)
xchg
sar
mov
out
jae
inc
(bad)
(bad)
jg
adc
sbb
push
test
inc
lds
daa
ss
shl
adc
and
inc
iret
adc
sub
mov
aaa
xor
dec
rcr
mov
enter
sbb
or
rcr
xor
xlat
addr16
xchg
cld
shl
lods
daa
cmps
addr16
mov
icebp
xchg
aam
pop
adc
jb
in
adc
jl
pop
xor
lds
dec
push
sbb
icebp
inc
xor
sub
add
mov
jmp
imul
imul
xchg
sbb
ins
xchg
mov
stos
fs
ja
jmp
inc
test
pop
sub
pop
mov
data16
arpl
xor
inc
stos
clc
xchg
jne
mov
add
mov
or
ss
ret
add
mov
mov
out
mov
test
lods
and
dec
adc
pusha
sub
in
inc
arpl
fwait
xor
or
jmp
pop
sbb
mov
mov
in
icebp
mov
mov
inc
cs
int
sar
outs
push
daa
adc
fdivr
enter
shrd
xor
sub
adc
dec
push
cmp
hlt
std
(bad)
sbb
cmps
ja
adc
pusha
push
(bad)
sti
and
jno
mov
call
test
cmps
mov
fisttp
ret
cli
pushf
daa
push
cli
add
inc
and
fnsave
in
xor
outs
dec
sbb
fnstsw
inc
inc
out
sahf
pop
xchg
adc
cld
je
data16
mov
dec
aaa
xor
sbb
mov
mov
sub
lods
push
dec
cmps
inc
pop
out
add
inc
pop
in
in
int3
sbb
dec
fist
push
jnp
pop
xchg
lahf
pop
mov
fidivr
cmp
dec
push
cdq
sub
xor
inc
imul
sbb
dec
or
mov
sbb
in
mov
fsub
test
rcl
inc
enter
jbe
adc
ja
mov
dec
ficomp
xchg
adc
mov
mov
jmp
aas
loop
out
inc
(bad)
jbe
or
aam
cmc
mov
jp
inc
shl
pop
xchg
and
cmp
fidivr
and
mov
mov
imul
int
fstp
lods
push
push
nop
xchg
mov
retf
(bad)
or
cdq
mov
add
sub
push
aam
mov
mov
sub
push
jb
arpl
stos
jae
add
scas
jo
dec
(bad)
les
fsub
mov
out
loopne
lds
adc
pushf
and
sbb
rcl
ds
test
jg
mov
and
es
jne
add
mov
in
sub
aad
cmp
stos
pop
imul
pop
and
lds
add
cld
mov
mov
retf
cs
in
inc
outs
xor
mov
mov
stos
test
cmp
stc
xchg
jmp
mov
add
in
fst
xor
or
aaa
dec
push
jl
cmp
lods
mov
cmp
mov
neg
sbb
mov
mov
mov
stos
or
xchg
(bad)
adc
bound
ja
mov
cs
and
in
call
sub
dec
or
stc
mov
shr
sbb
imul
pop
add
cwde
in
sub
xlat
pop
adc
or
lahf
sahf
xor
mov
fcomp
xchg
pop
aas
xchg
shr
sbb
movs
pop
push
std
ins
pop
scas
sub
jg
and
movs
call
pop
push
out
in
push
es
jecxz
ja
sbb
push
mov
sbb
ss
dec
adc
jae
pop
and
in
push
sub
dec
mov
in
inc
add
arpl
repnz
xchg
fcomp
xchg
enter
cmps
push
or
int
adc
call
add
(bad)
adc
push
sub
out
xchg
push
xor
sar
std
rol
push
mov
sbb
scas
loopne
mov
push
jae
adc
out
loopne
rol
sub
gs
inc
inc
adc
xchg
mov
mov
jne
shr
aam
pop
and
aaa
xor
jbe
int
adc
mov
ins
int
fsqrt
mov
mov
cmp
pop
push
xchg
pop
sub
and
repnz
(bad)
sub
inc
pop
(bad)
pushf
cdq
jbe
xchg
fs
jae
mov
add
dec
mov
and
test
fsubr
outs
fwait
es
imul
push
mov
jmp
into
add
cmp
jnp
pop
xor
mov
imul
daa
jno
dec
int3
fwait
xchg
inc
test
add
je
aaa
fimul
and
pop
or
in
ds
jecxz
repz
pop
adc
mov
or
jb
mov
push
loope
xor
push
stos
daa
into
mov
out
dec
adc
fs
pop
or
imul
imul
cmp
add
nop
mov
xlat
xchg
(bad)
into
jp
cli
mov
mov
inc
call
and
mov
xor
(bad)
lock
adc
or
arpl
and
imul
and
cmps
lods
scas
mov
inc
mov
(bad)
adc
add
mov
popa
xchg
or
int3
(bad)
cmp
pop
mov
hlt
pushf
mov
addr16
adc
mov
in
jbe
jb
push
dec
inc
(bad)
fs
jno
mov
int
xchg
inc
fisttp
scas
int
(bad)
int
mov
jmp
jnp
ret
mov
nop
jle
ins
or
push
xchg
push
call
dec
(bad)
jle
fmulp
mov
rcr
and
or
inc
(bad)
js
push
sub
mov
jmp
(bad)
arpl
out
jl
cmp
iret
xor
inc
push
outs
jmp
out
dec
enter
mov
adc
ja
inc
mul
jns
cmp
lods
xor
popf
ret
nop
sub
jmp
popa
call
sub
dec
dec
mov
bound
mov
repnz
pop
mov
cwde
jae
xchg
ja
in
retf
jg
jmp
xlat
adc
(bad)
fdiv
sub
xchg
cdq
lods
in
cli
mov
jns
test
outs
xchg
js
pop
mov
daa
(bad)
push
push
adc
mov
loop
out
inc
adc
dec
fs
or
mov
add
xchg
pop
(bad)
out
shr
or
int3
cli
fstp
les
jp
int
cmc
inc
sbb
dec
imul
mov
mov
(bad)
cli
test
ffreep
ror
push
jne
test
pop
or
xchg
add
push
fwait
pop
je
jl
push
sub
dec
fnstcw
adc
sbb
jge
loope
cmp
and
pop
mov
cld
lods
retf
jnp
dec
xchg
inc
mul
mov
loope
jmp
in
jo
jbe
icebp
jne
retf
pop
or
add
jmp
(bad)
xor
retf
(bad)
pop
mov
loope
or
in
repnz
and
ss
nop
mov
mov
jne
pop
ja
pusha
movs
out
push
or
mov
jo
jmp
xor
xor
mov
pop
cli
mov
jbe
push
test
das
mov
or
sbb
(bad)
mov
cld
adc
jecxz
retf
dec
sub
adc
lods
repz
popf
pop
ja
push
pop
jmp
pusha
enter
arpl
movs
push
or
outs
xchg
sub
mov
cmps
pop
(bad)
repz
push
(bad)
or
imul
sub
in
mov
and
ficom
(bad)
dec
rol
adc
dec
push
sub
out
mov
imul
sub
mov
into
hlt
test
scas
jmp
iret
push
xchg
stos
mov
mov
xor
ss
scas
cmp
sbb
jp
ss
movs
cmp
xor
loop
call
xlat
jnp
push
inc
mov
dec
xchg
(bad)
lods
shr
jge
mov
loop
sub
and
sahf
cmps
cmp
stos
xchg
adc
mov
dec
test
mov
call
and
jmp
in
in
das
adc
ins
jo
xchg
sub
(bad)
out
(bad)
inc
sub
nop
jl
(bad)
jg
push
pop
xchg
inc
inc
push
iret
scas
adc
inc
sar
outs
sub
pop
in
cmp
outs
sub
push
xchg
das
shr
pop
sahf
mov
ret
push
cmps
and
bound
fdivr
(bad)
lds
mov
in
inc
push
ret
or
repnz
sub
jo
cld
dec
mov
dec
sub
dec
or
lods
movhps
imul
inc
icebp
fimul
mov
sub
ret
fnstsw
fcom
jne
cmp
fs
mov
and
je
cmp
loopne
popf
ficom
mov
pop
add
pop
out
scas
addr16
cld
sub
xchg
out
jne
mov
push
call
push
xor
movs
mov
pop
mov
imul
jno
xor
dec
imul
jne
dec
adc
inc
sbb
xlat
and
js
adc
push
popa
aad
fistp
jae
cmc
mov
in
mov
lahf
cld
call
(bad)
outs
push
xor
ss
fstp
mov
xchg
movaps
lahf
xor
repnz
mov
mov
fneni(8087
dec
repz
mov
repz
and
mul
mov
xchg
retf
(bad)
pop
and
jb
jmp
adc
fist
pop
lea
or
cmps
stos
xor
icebp
push
adc
test
gs
sar
jl
inc
mov
adc
mov
or
sub
or
push
fadd
cmps
push
in
xlat
aad
lock
aad
lods
push
adc
or
sahf
dec
arpl
dec
ja
dec
lahf
lds
shl
fldcw
adc
in
xor
mov
ins
push
jmp
mov
adc
shr
leave
mov
movs
jle
sbb
aam
jecxz
icebp
jbe
stos
mov
(bad)
push
es
imul
jb
xor
push
mov
push
pop
stos
dec
ret
outs
and
popa
sbb
cmps
pop
leave
push
ret
and
stc
stc
test
mov
xchg
in
loope
(bad)
add
clc
pop
mul
test
(bad)
call
cld
cmps
fstp
aas
cmp
aad
mov
rol
jge
or
mov
fnstsw
pop
sbb
adc
not
dec
jae
xlat
leave
popf
pop
loope
cmp
pop
or
inc
sti
cs
mov
jecxz
cmp
jle
call
add
sar
scas
arpl
hlt
dec
out
jmp
sahf
mov
(bad)
call
sbb
das
mov
dec
nop
aam
and
xor
and
jmp
jl
jl
and
(bad)
and
call
xchg
jns
js
enter
and
mov
stos
pop
stos
inc
ret
out
xor
adc
pop
add
add
(bad)
test
sbb
ja
pop
add
rcr
adc
leave
xchg
mov
xchg
mov
out
dec
popw
xor
into
jg
adc
call
adc
leave
shl
ins
bnd
fst
je
dec
add
add
js
mov
jae
nop
into
cmp
mov
iret
add
je
scas
aas
xor
inc
popf
dec
mov
retf
cmp
jae
imul
pop
push
and
jmp
test
dec
fwait
cmps
jmp
inc
addr16
int
xor
scas
or
mov
pop
mov
cmps
jb
loopne
fwait
daa
adc
out
div
push
xchg
pop
xchg
or
sar
dec
das
xchg
mov
xchg
inc
cmps
jge
mov
sahf
fld
or
push
push
addr16
sets
push
xchg
adc
mov
pushf
fwait
setle
stos
call
mov
iret
push
call
sub
in
arpl
pop
jp
adc
mov
dec
(bad)
mov
pop
rcl
mov
pusha
mov
adc
push
xor
add
jp
sbb
mov
push
clc
inc
dec
push
cmc
or
(bad)
sub
cmc
xchg
mov
(bad)
xchg
mov
cmp
push
std
sbb
jmp
add
mov
pop
ror
pop
(bad)
arpl
or
pop
sub
les
add
cmps
xor
add
(bad)
mov
dec
sbb
cmc
pop
xlat
ds
jle
add
jl
in
sub
add
mov
lahf
cmp
fistp
clc
test
fisub
inc
cmc
enter
mov
adc
jne
push
inc
test
inc
push
inc
call
test
(bad)
(bad)
cdq
dec
cli
daa
stc
(bad)
call
adc
nop
rcl
xchg
(bad)
mov
fsubr
pop
xcrypt-cfb
cmps
fs
addr16
cmps
xchg
sbb
mov
sahf
sbb
push
or
lods
js
mov
adc
adc
stos
pop
dec
scas
jb
sbb
xor
rcl
jmp
stos
call
push
lds
push
dec
xor
mov
int
cdq
cld
cmp
into
inc
jmp
movs
push
(bad)
jb
mov
lods
add
out
gs
xchg
xor
test
fdiv
call
or
call
push
in
sbb
js
jne
call
xchg
cmps
mov
in
push
test
ins
jp
repz
add
push
dec
aas
cs
inc
pop
outs
cli
jge
(bad)
and
inc
inc
cmp
jmp
jbe
push
(bad)
xchg
jno
push
sub
aam
cs
mov
xor
stos
lods
shr
stos
add
call
fdiv
sbb
scas
or
xlat
dec
pop
xor
jmp
mov
jo
stc
pop
xor
jns
sub
out
es
lods
int3
xor
(bad)
mov
cdq
loopne
scas
aad
xor
scas
ficomp
idiv
xchg
(bad)
mov
cmp
and
call
addr16
mov
jnp
fwait
mov
cmp
dec
mov
aaa
sub
mov
mov
sahf
(bad)
mov
js
inc
jns
push
jge
sub
scas
cmp
jae
pop
add
adc
mov
or
ror
out
jnp
movs
jns
pop
adc
fimul
sub
out
in
aad
imul
fsub
jmp
dec
mov
or
sub
shl
in
and
icebp
cdq
lods
xchg
shr
sbb
sbb
ret
cmp
xor
jp
xchg
dec
pusha
push
mov
bound
mov
xchg
pop
ins
sbb
stc
jmp
das
aad
cmps
mov
scas
movs
fdiv
adc
mov
push
mov
push
nop
aaa
adc
add
pop
add
sbb
loop
add
pop
rcl
repnz
jp
mov
stos
stc
(bad)
sbb
pushf
test
test
retf
fs
retf
mov
retf
and
mov
mov
push
add
jnp
ins
call
or
fmul
xchg
(bad)
and
fwait
push
out
push
add
cmp
jle
test
fwait
xor
pushf
pop
outs
jno
addr16
and
lahf
test
xchg
sar
xlat
adc
in
xor
adc
dec
dec
ins
fnstenv
fwait
stos
sub
into
pusha
jecxz
jl
jmp
dec
jae
mov
cs
and
dec
xchg
dec
cli
dec
jbe
into
add
shr
retf
adc
data16
jg
into
mov
sbb
and
or
cmps
shr
out
retf
sbb
pop
cmp
mov
or
loopne
bound
or
nop
pop
lahf
cli
mov
int
or
xchg
mov
jnp
mov
xchg
cmps
scas
sub
add
push
inc
mov
into
in
xchg
jo
sub
repz
jns
das
int3
push
xor
inc
in
aam
lods
jg
or
call
jae
ret
sub
sbb
mov
sbb
cld
ret
xor
pusha
aaa
push
mov
leave
or
ins
mov
adc
stc
cmp
ret
sbb
enter
and
pop
lods
in
inc
mov
nop
xor
mov
and
cld
pop
out
sbb
jecxz
inc
push
out
or
nop
inc
stc
jge
bound
mov
loope
add
pusha
ficom
mov
cmp
in
xchg
std
mov
inc
in
push
ret
and
mul
push
add
dec
xchg
out
loopne
jno
aam
int
or
aam
sub
idiv
mov
mov
mov
push
dec
rol
into
rcr
test
daa
push
call
mov
popa
ins
inc
(bad)
rcl
sbb
les
cmp
mov
or
std
adc
sbb
dec
scas
sahf
add
xchg
call
ds
sub
cmps
jge
push
fcom
mov
jge
dec
aad
xchg
jo
push
cmp
cli
dec
loopne
push
push
pop
inc
je
js
into
and
in
dec
je
jl
lds
push
jmp
(bad)
mov
cmps
lds
lea
cmp
clc
es
jb
add
mov
xchg
add
jle
retf
pop
rcl
dec
lahf
into
cmp
mov
mov
scas
dec
jmp
enter
fisub
and
mov
int3
pop
das
cmp
pop
aam
mov
jge
pop
xor
sub
jg
sub
js
jae
xchg
dec
cmp
adc
xchg
sti
jb
(bad)
inc
dec
mov
sub
lahf
mov
test
cmp
loopne
inc
mov
push
imul
mov
test
sub
cmp
mov
push
movs
push
mov
ins
cmc
out
lock
add
shl
retf
out
jmp
fsubrp
sahf
je
js
enter
test
mov
and
pop
jg
shr
mov
cmovge
mov
ja
loop
cmp
dec
ficomp
push
aas
gs
mov
mov
les
fisub
cmp
dec
xor
addr16
(bad)
bound
pop
push
pop
push
push
cmp
inc
or
jg
stos
lods
lods
cmps
inc
push
js
or
cmps
ror
dec
xor
cmp
fmulp
sti
xor
fwait
in
xchg
repnz
(bad)
repz
lock
enter
lods
adc
jecxz
pop
or
inc
and
scas
push
(bad)
movs
mov
mov
(bad)
out
stos
adc
js
jno
adc
mov
pusha
repz
pop
jp
hlt
add
stc
or
sub
adc
daa
xlat
nop
ss
js
lods
add
add
mov
or
jae
push
xor
retf
mov
ret
fistp
mov
push
(bad)
jg
ds
xchg
out
and
xor
fidiv
sahf
pop
mov
sbb
jle
int3
cmp
or
es
and
sbb
shr
jmp
jne
inc
clc
xchg
es
outs
sub
jnp
jns
cs
xlat
in
test
inc
push
leave
xor
sbb
fidiv
in
cmc
in
and
jns
cld
retf
in
rol
in
stos
rcr
mov
scas
sahf
push
(bad)
aad
or
or
sub
bound
mov
pop
jmp
loope
xchg
cmc
outs
in
mov
mov
rep
pushf
call
add
dec
pop
in
jo
fnsave
dec
mov
rcl
(bad)
loopne
mov
adc
jns
pop
rcr
jmp
cmc
dec
dec
cmps
push
fdiv
sbb
mov
ret
dec
cld
mov
pop
add
shr
addr16
adc
pop
vpmuludq
stos
xor
adc
cli
jecxz
test
sbb
add
(bad)
imul
mov
or
(bad)
movlhps
in
sbb
mov
stc
jo
adc
mov
mov
mov
imul
sbb
retf
push
sbb
out
sub
stos
mov
sub
test
pusha
jmp
cmp
pop
retf
sbb
xchg
dec
mov
or
sub
inc
popw
lahf
aad
jnp
mov
mov
dec
cs
pop
adc
out
aad
clc
hlt
enter
(bad)
sbb
push
je
aad
jg
mov
sbb
adc
jle
adc
leave
gs
inc
jns
pop
push
lahf
ins
xchg
push
mov
and
mov
movs
push
inc
int
push
jge
cmp
outs
mov
mov
pop
sub
sub
outs
out
sbb
or
call
inc
pop
cmp
in
rcr
cmps
xchg
mov
call
jl
and
mov
xchg
pop
stos
jae
imul
mov
add
(bad)
aad
int
push
xchg
scas
adc
int
fisub
jmp
mov
cwde
sbb
in
push
scas
inc
out
sub
inc
mov
dec
jno
shl
call
sbb
mov
xor
aad
mov
cdq
sahf
add
aam
and
jno
sar
dec
mov
or
retf
aas
xchg
xchg
fprem1
mov
out
aam
xchg
xchg
cmp
dec
stc
jmp
call
or
ret
in
push
mov
out
add
rcr
adc
mov
fcomp
pop
int
pop
mov
jno
shl
pop
mov
sub
(bad)
xor
mov
ret
stos
push
in
and
ss
adc
inc
repnz
test
scas
test
aaa
cwde
ret
sahf
xchg
inc
adc
fdivr
xchg
sub
fwait
jl
rol
pop
hlt
xchg
ins
ins
or
or
sub
xor
sub
sbb
or
jae
hlt
test
mov
neg
add
cmc
neg
ja
sub
sbb
dec
clc
test
inc
(bad)
lds
js
ret
shl
(bad)
mov
and
fdivr
push
and
dec
jae
mov
shl
stc
(bad)
push
jg
pop
pushf
push
adc
push
popf
or
retf
cmp
aad
pop
test
sahf
or
jno
outs
mov
test
mov
jecxz
inc
add
push
mov
mov
les
xor
in
mov
inc
pop
std
daa
mov
inc
mov
adc
mov
sbb
inc
int
inc
add
pop
jl
(bad)
and
out
fsubr
add
outs
ror
test
lods
sbb
(bad)
sti
outs
xchg
ret
sub
retf
fsub
sahf
sub
mov
sar
dec
imul
test
xor
pop
xchg
or
jmp
or
movs
vcmppd
or
in
and
push
pop
jecxz
jbe
xchg
movs
push
adc
lahf
mov
ret
xor
dec
and
cmc
mov
dec
(bad)
or
mov
sbb
mov
mov
mov
jmp
cmps
scas
(bad)
cwde
out
xor
push
cmc
mov
and
pop
cmp
add
rcl
int
ins
lahf
jae
out
adc
add
mov
inc
fsub
dec
cmc
in
mov
lea
jno
leave
adc
rcr
test
sbb
lock
scas
and
xchg
push
jmp
mov
push
rcl
or
xchg
cli
cmp
add
adc
sub
sbb
and
push
jle
stos
enter
sub
xor
js
dec
pop
(bad)
test
stos
jmp
sbb
stc
out
loope
mov
sbb
into
ret
sbb
mov
nop
cmp
dec
movs
(bad)
mov
xchg
push
sbb
movs
and
ret
test
and
lods
xor
jmp
pop
(bad)
push
jmp
jmp
outs
dec
mov
scas
mov
fisttp
xor
xchg
dec
mov
mov
and
stos
out
mov
aas
fucomp
xchg
int
pop
(bad)
int3
mov
std
pusha
and
sub
xchg
jae
mov
add
mov
mov
outs
imul
dec
adc
cmp
mov
jo
shl
adc
or
(bad)
and
sub
cwde
mov
cli
xchg
cmp
mov
daa
(bad)
adc
stos
inc
and
pop
inc
or
daa
add
ret
xchg
mov
in
xchg
xchg
mov
xor
or
cmc
and
sub
xor
push
add
xchg
inc
inc
into
inc
mov
mov
ins
inc
or
dec
add
lods
cmp
into
xchg
and
(bad)
cmp
push
mov
sub
or
cmp
sub
add
inc
nop
add
lahf
loop
jmp
daa
push
dec
mov
adc
push
test
ins
enter
inc
adc
jp
mov
fsubp
inc
pop
mov
mov
sar
pusha
rcl
mov
xor
outs
xchg
dec
pop
je
or
mov
jle
test
and
clc
jmp
js
dec
dec
jecxz
in
xchg
push
pop
inc
inc
shl
out
repnz
in
out
mov
sti
lods
and
clc
or
or
inc
test
jbe
mov
out
les
cmc
and
into
inc
xchg
adc
push
xchg
repnz
ss
bound
jae
mov
repz
push
mov
in
add
jg
mov
cs
xlat
xor
sbb
icebp
call
xor
fucomi
xchg
push
push
loopne
xor
mov
add
push
leave
and
popa
adc
lds
jg
adc
lods
out
adc
add
das
fsubr
mov
lods
pusha
push
sbb
daa
iret
mov
jb
fnstsw
xchg
repnz
xchg
jbe
sbb
pop
or
inc
cdq
and
push
test
nop
loope
pop
sbb
gs
cmps
and
mov
call
loop
sub
push
dec
pop
mov
add
xchg
push
and
pop
cmp
(bad)
(bad)
jmp
loope
xchg
shl
cmps
xor
test
rcr
add
enter
xchg
leave
mov
and
test
xchg
jmp
and
mov
jg
loopne
lods
push
or
pop
push
in
or
mov
aad
xchg
jp
pop
(bad)
mov
pop
jmp
push
icebp
jno
jno
mov
aaa
lahf
push
adc
imul
rcl
push
out
loopne
ret
sbb
mov
and
mov
retf
call
xchg
leave
mov
enter
cmp
clc
punpcklbw
fmul
mov
movs
cmp
ret
pop
retf
xchg
ret
xchg
popf
mov
fstp
push
scas
jmp
(bad)
psadbw
cmps
imul
daa
scas
test
ret
jno
xlat
xchg
stos
pushf
xlat
fs
or
pop
cmps
(bad)
add
in
xchg
mov
inc
idiv
push
cdq
mov
pop
jno
add
push
scas
xor
call
pop
adc
shl
icebp
(bad)
out
pop
push
test
pop
iret
jle
dec
add
mov
mov
fidivr
pushf
push
dec
outs
es
ret
sar
push
repz
push
sahf
cmp
and
push
xor
fistp
mov
mov
or
jno
cmp
cmp
out
test
cmp
xchg
pop
sbb
pop
inc
mov
or
add
in
idiv
out
in
sbb
loopne
sub
and
cmc
sar
adc
inc
test
inc
dec
mov
mov
(bad)
daa
sub
jg
cmp
and
imul
arpl
mov
daa
jmp
inc
lds
sub
call
cmp
push
scas
dec
int3
icebp
loope
shl
aaa
mov
push
loope
inc
push
cmp
mov
scas
jo
mov
ins
aad
(bad)
inc
xchg
in
lock
scas
jecxz
dec
sbb
fsubrp
jmp
or
cmp
add
push
xchg
leave
or
repz
cmp
mov
es
lahf
inc
lahf
dec
mov
cmp
or
dec
jl
fisttp
jecxz
pop
cli
xor
dec
inc
cld
inc
cmp
xor
in
inc
sbb
aas
int3
int
fdiv
sub
add
sar
mov
pop
cmps
xor
xchg
sbb
mov
dec
add
sti
inc
dec
adc
in
mov
imul
shl
mov
add
dec
movs
add
fcom
gs
int3
mov
jg
data16
mov
jmp
mov
push
cmp
shl
mov
push
inc
cmps
aaa
sbb
jecxz
inc
xor
add
or
dec
gs
and
loopne
fdivr
jb
xchg
xor
xchg
ins
std
enter
add
fcom
lea
jecxz
push
enter
pop
jmp
or
stos
fisttp
mov
les
mov
or
push
fs
(bad)
sbb
cmp
ffreep
mov
(bad)
frstpm(287
xor
xchg
gs
repz
cwde
lea
add
cmp
add
mov
fs
nop
push
add
cs
sub
in
jnp
push
jb
mov
imul
test
(bad)
idiv
mov
(bad)
shl
enter
cmp
dec
(bad)
xor
shr
ret
xor
add
pop
mov
dec
pushf
add
push
xor
rcl
retf
inc
xor
mov
fisubr
lahf
push
(bad)
push
aaa
mov
sub
push
dec
scas
or
in
ins
data16
rol
nop
call
jl
push
arpl
es
sbb
cmp
call
pop
adc
cwde
push
mov
loope
cmp
mov
inc
push
in
jmp
xor
cli
dec
lods
xor
pop
pop
fdiv
ret
adc
and
push
popf
scas
and
(bad)
loop
add
or
mov
loop
sub
ret
ss
scas
xchg
pop
fs
sti
mov
shl
mov
dec
mov
inc
std
push
loopne
or
mov
xor
cld
cmp
dec
lds
(bad)
fisub
nop
xor
push
popf
inc
into
loop
ds
mov
sub
call
lea
pop
test
pop
adc
sub
mov
mov
fcom
push
inc
fisttp
push
jmp
and
cmps
cmp
ins
dec
enter
sahf
ja
pop
(bad)
cmps
call
dec
jne
mov
fwait
cmc
inc
or
jmp
sub
pop
sub
sub
stos
mov
cmps
adc
fcom
pop
cmp
or
lds
aam
or
jns
pop
loope
inc
repnz
test
ins
retf
stos
pusha
sub
inc
je
gs
loopne
ret
lds
mov
test
fnstcw
jnp
jmp
shl
das
dec
and
mov
inc
std
mov
xchg
fldcw
adc
fdivr
cdq
push
data16
xchg
ds
jle
sub
adc
arpl
test
clc
pop
mov
mov
sar
adc
mov
sbb
cmp
clc
mov
mov
loop
call
lods
inc
add
ja
jno
ins
lods
dec
test
mov
sti
xor
sub
or
sub
sub
cmp
mov
push
neg
jmp
movs
pop
pushf
mov
dec
or
ja
mov
pop
loopne
cmp
and
adc
jmp
jmp
dec
jbe
dec
dec
push
dec
cmp
sbb
fsubp
stos
sub
sahf
(bad)
(bad)
movs
pop
xor
ins
jl
shl
int
or
fidivr
xor
call
out
and
cmp
cmp
or
(bad)
cld
dec
and
push
aaa
xchg
ja
stc
retf
jg
push
pop
and
sbb
or
mov
sti
push
add
mov
pop
mov
cmp
add
mov
setno
and
add
jae
mov
in
mov
enter
cmp
cmps
scas
scas
dec
int
sub
enter
sub
lods
cld
pop
movs
test
mul
xor
sub
cld
jecxz
lods
mov
std
add
cld
dec
cdq
dec
ss
out
sbb
sbb
pop
sub
xchg
jb
rcl
pop
es
mov
std
sbb
lock
and
xor
jo
push
pop
clc
xor
or
(bad)
imul
aad
sub
mov
lds
push
jnp
pop
sub
inc
xor
lock
dec
cmp
dec
pop
in
push
js
inc
das
push
int
repz
jle
mov
(bad)
sub
or
out
dec
lea
or
pop
div
fsubr
inc
pop
inc
rcl
cmp
aam
add
xor
fwait
adc
push
mov
pop
pusha
clc
and
and
mov
add
mov
and
in
aam
pusha
xchg
(bad)
fsubr
inc
or
jmp
sar
mov
enter
adc
or
jecxz
or
mov
inc
jbe
js
call
imul
outs
adc
ret
stos
push
aaa
sbb
mul
jmp
sub
sar
clc
or
mov
inc
popf
rcr
push
dec
out
mov
dec
xchg
or
shr
(bad)
xor
mov
test
imul
sub
xchg
inc
popf
les
mov
cmp
mov
and
mov
add
sub
lar
daa
jno
mov
push
call
aaa
push
lahf
jp
and
add
call
adc
adc
jmp
ret
cmp
mov
loopne
add
push
in
xchg
ins
adc
pop
sub
xor
or
cwde
std
in
mov
inc
sbb
adc
iret
into
int3
shl
jae
push
mov
xchg
jmp
xchg
daa
popf
mov
sbb
seto
sahf
xor
push
mov
push
cmc
sbb
sbb
sub
js
adc
pop
pusha
repz
arpl
xor
enter
sahf
inc
(bad)
jb
inc
(bad)
sub
jmp
xor
cmp
xlat
out
xchg
lea
cmp
je
push
not
xlat
add
xchg
std
xchg
imul
jmp
push
mov
add
jbe
leave
repz
xchg
loopne
inc
xor
xor
test
adc
push
adc
ss
and
scas
in
jmp
and
push
cmp
jno
mov
movs
movs
jb
daa
mov
xor
(bad)
sub
mov
mov
arpl
or
cmc
push
xchg
cmp
jmp
data16
xor
or
jl
inc
or
jp
inc
(bad)
bound
cdq
pop
repz
pop
jp
xchg
jg
(bad)
dec
or
push
push
xor
jnp
out
mov
aad
cli
xor
sbb
cdq
cmp
cs
sbb
add
int
ins
mov
sub
mov
inc
es
sub
sbb
sbb
in
aaa
and
leave
ror
pop
sahf
ins
jecxz
or
sbb
ja
inc
cli
stc
sbb
push
xor
add
xor
cmp
push
xor
adc
mov
push
push
das
imul
loop
sbb
sub
push
cdq
push
add
mov
sbb
xchg
data16
ror
add
in
pop
ja
out
hlt
in
aam
and
or
ins
in
test
mov
ins
mov
test
xchg
adc
jo
lea
jb
jno
dec
cmps
fwait
loope
rol
test
call
and
test
jle
push
in
aaa
lock
mov
sahf
xor
(bad)
js
aaa
mov
sub
sub
fld
dec
push
pusha
pop
jmp
and
and
xchg
in
xor
dec
lock
cs
pop
cmp
dec
xor
retf
mov
inc
rcl
ja
add
jo
fwait
add
(bad)
retf
out
ret
(bad)
int
bound
xchg
dec
jecxz
movs
imul
add
jle
dec
std
cli
cmp
pop
mov
sbb
cmp
push
cmp
or
xchg
inc
in
dec
std
dec
jae
dec
xor
fiadd
ja
nop
jmp
add
scas
xchg
add
push
and
mov
int3
inc
mov
add
dec
and
repnz
outs
or
xchg
jmp
std
outs
cmp
repnz
cmp
ror
and
push
inc
repnz
jmp
aad
xchg
sub
adc
mov
fdiv
jb
loope
lahf
mov
add
mov
popf
xor
(bad)
mov
test
adc
clc
pop
or
loope
sti
in
add
cmp
cwde
iret
mov
pop
cmp
pop
mov
push
and
dec
inc
add
pop
fs
adc
cmp
fs
scas
pusha
aad
into
loop
jb
inc
stc
lds
int3
pop
cdq
jns
adc
fbstp
retf
sahf
loope
sbb
and
sub
imul
inc
sar
gs
mov
cmps
jnp
shr
popf
imul
or
inc
sbb
cli
(bad)
dec
lahf
xchg
cmp
dec
xor
xchg
cmp
inc
sti
jns
mov
daa
in
jg
ja
fisttp
inc
dec
cmps
(bad)
sti
fidiv
out
push
mov
aad
mov
sahf
adc
push
inc
retf
aas
or
(bad)
mov
inc
xor
cmp
loopne
cmp
retf
inc
call
and
scas
ja
dec
dec
xlat
sub
or
outs
ja
push
ins
shl
adc
pop
jle
fbstp
(bad)
fs
mov
loope
mov
aam
pop
sub
xor
dec
into
xchg
(bad)
call
je
hlt
or
dec
enter
push
bound
mov
or
jnp
adc
adc
jbe
xchg
test
aas
fimul
xchg
cmps
cwde
mov
push
call
mov
inc
sar
mov
inc
mov
mov
iret
or
ja
inc
outs
jnp
add
shl
mov
push
add
add
imul
sbb
mov
dec
jo
test
jge
mov
sub
retf
push
or
mov
mulps
aas
(bad)
call
jne
mov
fldenv
xlat
sub
repnz
xor
or
xchg
cdq
shl
js
into
mov
dec
dec
jo
mov
arpl
cmps
xor
pop
jmp
shl
int
or
xchg
aas
pop
shr
pop
sbb
jmp
ins
jo
mov
les
xchg
push
(bad)
or
sub
mov
add
mov
and
add
pop
nop
std
xor
imul
add
test
inc
test
dec
fmul
xor
fnstsw
push
add
pop
call
mov
std
leave
int
jg
icebp
outs
je
outs
pop
push
push
popa
je
xor
and
sar
mov
mov
fbstp
xor
outs
mov
arpl
pusha
pop
data16
sbb
mov
pop
(bad)
lahf
ss
or
or
arpl
and
cmp
xchg
mov
shr
and
mov
pushf
retf
xor
pop
shl
jnp
imul
inc
stos
jmp
(bad)
sahf
mov
inc
ins
pop
cmps
bound
xchg
clc
je
gs
jo
cs
adc
loope
mov
arpl
aad
add
int3
cli
ins
in
shl
movd
xor
in
jge
es
mov
jns
scas
pop
repnz
sbb
stos
pusha
xchg
je
aas
mov
into
push
fs
jno
lea
mov
cmp
add
pavgb
(bad)
aas
jo
movs
jbe
enter
loop
cmc
das
inc
call
jecxz
jmp
push
sub
les
mov
fucom
std
inc
loopne
xchg
cmp
mov
int3
addr16
pop
(bad)
mov
scas
inc
jnp
ds
cmp
test
sbb
fucomip
movs
enter
mov
rcr
xlat
jmp
mov
nop
pusha
les
push
(bad)
mov
jmp
sti
xchg
sbb
push
mov
jp
or
(bad)
mov
xor
pop
dec
ss
push
push
mov
(bad)
movs
test
xor
jge
aad
sti
adc
sub
mov
daa
mov
dec
ss
jecxz
xor
jnp
dec
jl
mov
retf
push
mov
pop
mov
or
imul
push
imul
or
adc
int3
xchg
jecxz
push
pop
mov
into
int3
push
stos
test
ja
jnp
call
adc
jle
sbb
xchg
repz
pop
mov
xor
push
fnstsw
icebp
add
pusha
(bad)
or
xor
lock
mov
sub
adc
mov
sti
add
xchg
sub
mov
cdq
or
icebp
dec
jmp
cmps
leave
inc
loope
pop
inc
inc
or
mov
mov
dec
push
pop
pop
push
nop
adc
push
in
mov
das
mov
cmp
jp
xchg
adc
je
mov
dec
lock
mov
pop
dec
test
mov
sti
imul
inc
dec
test
cld
enter
push
(bad)
fsub
adc
sar
jb
(bad)
int3
jb
jle
hlt
jo
xor
push
mov
sahf
test
cld
imul
cmp
add
mov
xchg
mov
lods
loop
shl
and
cwde
and
xchg
das
sub
dec
ds
xchg
push
cld
(bad)
(bad)
xor
loope
fpatan
or
jno
cmp
xor
or
push
add
cld
dec
pop
mov
ins
mov
loop
sahf
and
addr16
jne
inc
out
into
jne
les
jl
cs
and
mov
add
push
xchg
ret
pop
or
inc
cmp
cdq
inc
retf
dec
mov
push
xlat
add
nop
out
and
repnz
fsub
sub
imul
out
movs
inc
mov
push
je
mov
leave
xchg
outs
lea
sar
pop
std
retf
shr
cmp
push
sbb
cdq
dec
call
mov
mov
push
mov
(bad)
and
iret
sub
ret
dec
and
mov
cmp
stos
into
cmp
out
jbe
mov
jae
fld
add
pop
fld
sahf
mov
jne
neg
inc
sbb
jno
sbb
jge
mov
es
sbb
jp
cli
scas
push
or
xor
mov
sbb
out
adc
push
jg
pusha
out
and
or
inc
push
cmc
aam
sbb
jbe
inc
ss
adc
imul
xchg
js
xchg
or
jp
ins
dec
sbb
cmps
push
ret
sbb
cmp
jecxz
pushf
cmps
(bad)
stos
push
jmp
xor
mov
mov
fisttp
xchg
je
ret
dec
cmps
sub
and
iret
test
xor
retf
inc
pop
add
and
gs
add
or
pop
inc
mov
ret
sbb
push
pop
and
and
ret
and
sub
lods
jmp
hlt
ror
cs
or
out
gs
cmps
retf
movs
xor
neg
aaa
test
inc
ins
shl
xchg
sub
cmps
loope
les
in
mov
mov
hlt
adc
lds
push
or
push
pop
and
cld
repz
jne
ds
sbb
enter
cmp
inc
dec
in
call
popf
movs
xor
repnz
test
rol
jecxz
ds
shl
aad
and
out
push
rcr
or
adc
and
movs
or
or
inc
arpl
jbe
jecxz
pushf
push
sar
iret
mov
imul
cld
retf
(bad)
jbe
pushf
test
loopne
xchg
lsl
jle
shr
(bad)
enter
leave
mov
pop
mul
je
pop
adc
ss
icebp
cdq
test
pusha
mov
inc
leave
sbb
push
xchg
adc
add
dec
add
mov
movs
push
jp
push
int
jmp
mov
jmp
pushf
stos
xchg
dec
or
mov
(bad)
pop
lds
fimul
mov
mov
mov
xchg
xor
cld
lods
fdivr
mov
imul
leave
xor
div
(bad)
lock
lock
sub
outs
scas
out
jb
cmp
out
das
movs
cmc
sub
mov
adc
sbb
xor
push
jecxz
fs
dec
ds
adc
js
out
daa
xlat
repz
jmp
ins
in
mov
sub
iret
bound
int
cmps
getsec
cmp
jb
pop
mov
(bad)
xor
stos
push
cmp
ins
rcl
jmp
jmp
aaa
jno
nop
and
in
repnz
dec
or
cmc
test
push
out
test
and
adc
into
jmp
lods
cmc
mul
add
or
sbb
sahf
pop
cdq
gs
das
sbb
xlat
inc
rcr
in
jmp
stc
loope
or
add
ret
ss
adc
sti
jmp
push
and
icebp
push
shr
es
ja
sub
push
xor
cld
sub
test
and
mov
add
adc
adc
inc
push
test
or
xchg
push
retf
std
or
xchg
in
dec
into
out
push
jae
and
sahf
adc
(bad)
ret
xchg
shl
scas
or
std
lahf
inc
jns
(bad)
hlt
xor
mov
test
cs
dec
fbstp
retf
mov
mov
mov
imul
cdq
xor
fwait
xchg
in
lea
outs
xlat
gs
xchg
mov
out
push
xor
mov
push
jmp
cmps
bound
or
cmp
scas
mov
jp
mov
idiv
loopne
into
xchg
outs
xor
ss
fild
daa
call
jno
lahf
xchg
pop
shr
imul
sub
jne
test
fstp
call
std
inc
movs
pop
lods
ret
and
dec
add
and
out
mov
jl
push
inc
mov
cmps
icebp
pop
jo
push
jg
mov
push
add
stc
mov
xlat
imul
adc
push
lods
out
data16
fist
xchg
lds
jl
sbb
mov
cmp
mov
cli
mov
jae
and
pop
jno
push
xor
sahf
adc
xor
sub
mov
into
adc
outs
pop
xchg
push
mov
in
sti
fidivr
nop
pop
sbb
add
inc
stos
cli
mov
sub
sub
fucomip
pushf
xchg
add
outs
inc
push
inc
sbb
mov
cmp
int3
sub
int
push
in
add
sbb
sub
inc
mov
inc
adc
aaa
mov
sahf
sbb
and
or
gs
xchg
mov
sub
add
dec
jmp
dec
xchg
mov
pop
mov
mov
xor
xlat
fadd
jns
push
call
pop
(bad)
pop
scas
lods
sub
js
les
adc
pop
mov
and
scas
pusha
xchg
jo
shl
loopne
sub
fwait
ret
leave
cmp
cmps
fisub
cwde
movs
push
fcom
inc
outs
pop
push
cli
loope
jecxz
loope
mov
mov
cmps
mov
xor
and
xchg
sub
out
sub
xor
pop
xor
cdq
pop
mov
repnz
push
fs
stos
mov
lock
les
(bad)
push
bnd
jbe
adc
fbld
dec
sbb
adc
lock
pop
clc
sub
push
push
mov
sub
and
test
repnz
outs
cld
ss
idiv
or
sar
add
xchg
jecxz
mov
inc
les
mov
xor
cli
(bad)
mov
xor
stos
cmps
sub
add
add
test
mov
mov
es
push
ds
test
out
mov
mov
xor
inc
mov
stos
lods
shl
out
cmc
dec
fld
test
retf
pop
lea
sahf
call
call
add
or
(bad)
int3
xchg
fadd
shr
pop
cld
(bad)
mov
loope
popa
sbb
jle
cmp
pop
fadd
mov
pop
pop
sbb
shl
and
mov
pop
jmp
lds
out
fstp
div
xchg
mov
std
cmps
fisttp
popa
push
lods
or
xchg
dec
cmp
push
popa
mov
add
jns
je
call
xor
stos
cli
rcr
mov
pusha
mov
adc
push
cmp
add
dec
nop
(bad)
mov
fwait
inc
add
lock
gs
cli
pop
arpl
dec
(bad)
jge
mov
mov
sbb
add
in
jl
mov
and
mov
or
cmp
ds
adc
sbb
ret
jmp
push
popa
and
cld
dec
jmp
ins
repz
xlat
int3
fs
je
sub
ret
in
out
xor
xor
repz
(bad)
ffreep
mov
out
stc
jbe
add
and
cmp
adc
addr16
je
inc
jecxz
dec
xchg
es
mov
cmp
push
mov
cmp
push
aas
ret
es
sti
lahf
bound
push
or
fldl2t
mov
movs
in
add
enter
mov
mov
sub
arpl
sahf
in
stc
sub
add
ja
repz
in
sbb
out
loopne
out
sub
push
pop
shl
jmp
xor
std
(bad)
(bad)
pusha
push
mov
xchg
retf
popf
lds
pop
rcl
cmps
mov
in
or
push
sbb
mov
enter
mov
sbb
inc
aam
mov
stc
mov
jge
pop
es
(bad)
xor
js
adc
test
and
xor
cmp
mov
test
popa
mov
fcomp
jae
adc
mov
lahf
mov
pop
repnz
add
aad
cmp
mov
cmps
mov
sbb
mov
inc
mov
mov
adc
push
jp
push
xchg
or
mov
push
add
xchg
repz
adc
or
add
sub
pusha
pop
xor
cs
rcr
jns
ins
cmps
ins
jmp
sbb
lods
ret
arpl
ss
fwait
push
movs
lds
js
push
xchg
sub
repz
sub
push
add
ins
mov
dec
push
sub
loope
dec
into
sub
adc
pop
ficom
pop
in
shl
mov
inc
cmp
(bad)
stc
enter
xor
sub
outs
jns
xchg
movs
push
inc
test
sub
nop
push
shl
dec
xor
test
xor
imul
pop
cwde
add
addr16
push
or
movs
lock
jge
repnz
dec
jle
inc
or
mov
pop
stos
lahf
mov
repnz
dec
mov
ror
sub
pop
sahf
(bad)
pusha
jle
inc
cmp
xor
and
mov
ror
dec
movs
out
lock
lods
jbe
scas
sub
in
ins
add
shr
das
pop
jo
loopne
add
cmp
cdq
add
idiv
in
sahf
adc
push
out
push
push
push
jecxz
pushf
cld
and
(bad)
into
mov
mov
test
idiv
scas
mov
inc
cmps
jg
jmp
sub
test
popa
ja
mov
push
aam
inc
in
dec
(bad)
ret
sub
and
xchg
xor
lds
mov
push
dec
push
cmp
stos
sbb
mov
cmp
in
cmps
fisttp
inc
jns
cmp
adc
push
vfmadd132pd
jns
pusha
or
out
cmp
je
cmc
mov
xor
fsub
retf
cs
imul
in
cwde
xchg
pop
lea
xor
aaa
iret
ror
jns
adc
shl
gs
mov
mov
lods
test
call
pop
jmp
clc
pushf
sbb
imul
ja
std
(bad)
mov
sbb
and
shr
fs
hlt
(bad)
mov
enter
xor
leave
bound
ret
aam
call
or
hlt
inc
loopne
test
shr
mov
mov
dec
movs
jne
retf
mov
nop
test
inc
xor
push
cmc
push
pop
sbb
ret
xchg
aaa
(bad)
lds
scas
jnp
std
cmc
mov
and
scas
rcr
fwait
not
in
mov
or
fisttp
out
fmul
int3
das
arpl
daa
out
mov
popf
jecxz
pop
je
pop
into
push
jg
mov
dec
(bad)
push
es
pop
ja
xor
ret
pop
out
(bad)
test
bnd
movs
mov
pop
xlat
dec
loopne
icebp
xchg
daa
mov
mov
leave
lods
pop
inc
jae
pop
mov
dec
fst
and
(bad)
jmp
dec
call
and
out
adc
and
mov
repnz
xor
pop
cli
lods
dec
fimul
inc
(bad)
jnp
jp
repz
cdq
nop
xchg
pop
xchg
cdq
mov
shl
mov
scas
push
cmp
mov
repnz
adc
mov
dec
rcr
aam
mov
movs
rcl
xchg
push
cmps
pop
inc
scas
cmp
ins
cdq
cmc
js
bound
in
sahf
ja
movs
fmulp
out
inc
pop
scas
sbb
fisubr
call
mov
jo
dec
pop
sahf
adc
cmps
repz
push
out
cmp
or
adc
mov
aam
xchg
push
push
lods
or
movs
das
mov
or
xchg
and
pop
mov
stos
sahf
push
jmp
iret
in
pop
push
xchg
(bad)
mov
fs
mov
fcomip
retf
or
ret
repz
mov
mov
(bad)
mov
cmps
cmp
daa
sti
fadd
cmp
clc
loope
and
stos
adc
lods
push
out
push
dec
mov
or
stos
adc
sbb
jl
(bad)
add
and
sbb
lahf
push
jae
cwde
cs
fistp
out
or
xchg
xor
jae
push
das
lds
and
pop
pop
sbb
pop
push
mov
jp
lahf
aad
sub
ficom
shr
xor
pushf
call
ficomp
repnz
retf
retf
and
fst
dec
call
jno
test
push
in
xchg
mov
fwait
out
pop
data16
(bad)
xchg
ins
pushf
dec
or
outs
mov
arpl
lds
add
inc
pop
sbb
ins
rol
lahf
aad
adc
es
in
sub
movs
pop
pop
adc
sbb
cld
stos
dec
es
sub
aam
(bad)
xchg
ficomp
adc
inc
aaa
pop
mov
inc
mov
ins
mov
and
out
(bad)
aas
iret
adc
stos
jg
pop
cmc
pop
cmp
cs
loop
mov
nop
jnp
bound
adc
sbb
lea
cmp
mov
sbb
xchg
out
pop
test
aad
imul
and
xchg
sti
movs
test
xchg
mov
jns
mov
jle
not
mov
dec
sti
pop
mov
jp
aam
pop
stos
pop
push
fld
je
xor
in
mov
cmps
pop
xchg
dec
jp
or
pop
into
ror
stos
pop
stos
pushf
aas
lods
jg
dec
adc
in
push
and
inc
enter
xor
mov
cmp
sbb
lods
enter
out
ret
push
add
xchg
fsub
push
sahf
cmps
add
int3
lods
dec
or
out
and
ror
rol
hlt
mov
cmc
enter
out
daa
clc
outs
jb
call
cdq
cmp
jge
js
cwde
add
fst
ficom
daa
rcr
nop
jmp
mov
cmp
sbb
inc
push
icebp
mov
adc
iret
jmp
sbb
stc
inc
lods
xchg
adc
mov
loopne
inc
jae
jns
sub
loopne
cld
or
(bad)
hlt
push
mov
aas
mov
xor
and
jle
or
test
mov
xchg
xor
test
push
xor
xchg
std
inc
add
cmps
jae
jl
out
cld
outs
inc
push
gs
cmp
push
dec
inc
jl
push
mov
cmps
shr
xchg
mov
idiv
jnp
(bad)
or
outs
xor
sub
inc
sub
aam
pop
add
push
cmp
ss
and
div
push
mov
ins
sbb
ret
lock
push
(bad)
mov
lock
loopne
or
mov
cmps
ror
fsubrp
stos
fwait
pusha
sti
lds
mov
fisubr
mov
rcl
int3
jnp
pop
lahf
fwait
adc
and
arpl
fist
dec
mov
mov
inc
mov
or
je
imul
popa
inc
std
jge
cld
and
retf
mov
mov
dec
cld
out
in
or
sbb
adc
pop
mov
fwait
push
es
cmp
jbe
jge
aas
or
lds
jg
xchg
das
add
jbe
mov
daa
lods
ret
and
les
ret
cmp
sub
rcl
add
cmps
mov
and
sbb
mov
je
jne
push
pop
fistp
xchg
daa
cmp
ins
pop
lds
xchg
out
int3
rcr
pop
jne
in
into
stos
push
cwde
and
cmc
push
jae
lods
and
jle
xor
test
sbb
jmp
pusha
pop
ret
icebp
xlat
pop
xchg
call
outs
imul
addr16
xchg
fisttp
(bad)
in
xchg
in
sbb
or
sahf
rcr
jnp
push
aas
jl
dec
(bad)
mov
inc
jl
and
enter
enter
or
xor
outs
jns
cli
mov
cld
and
dec
movs
sub
push
push
inc
cmps
fld
pop
jmp
adc
adc
or
adc
ja
cwde
xchg
cmp
mov
xor
aad
push
fcmovu
aaa
ror
cmps
sahf
mov
push
jno
pop
dec
jb
jecxz
dec
test
fnstsw
dec
xchg
pop
cmp
test
jo
in
mov
imul
test
xchg
adc
pop
rcl
(bad)
mov
jmp
mov
addr16
jno
popa
minps
out
and
stos
pushf
mov
cli
stc
movs
cs
mov
into
mov
xchg
add
test
sbb
imul
dec
push
shr
cmp
jnp
retf
push
movs
out
imul
or
push
fucom
aam
mov
xchg
rcr
mov
(bad)
cli
in
push
dec
mov
aaa
cli
pop
dec
je
mov
mov
sub
imul
test
jae
and
stc
jmp
bound
or
mov
(bad)
cld
nop
jg
mov
push
adc
cdq
cmp
xor
pop
out
in
(bad)
in
rcr
inc
xor
(bad)
popa
inc
add
not
jle
test
imul
add
std
lods
out
popa
dec
(bad)
jmp
adc
pop
arpl
push
fwait
cli
ss
pop
pop
sub
adc
adc
nop
or
mov
popa
ds
call
and
icebp
arpl
cmp
and
imul
adc
pushf
and
repnz
inc
mov
(bad)
rol
clc
adc
bound
mov
(bad)
add
sub
xchg
xchg
sbb
pop
outs
adc
pop
and
sub
gs
sti
daa
loopne
(bad)
jl
repnz
add
fs
hlt
pop
add
and
push
mov
icebp
lds
call
adc
jno
adc
ds
scas
sbb
test
nop
(bad)
pextrw
xor
sub
lahf
pop
cmp
push
jg
sub
mov
btc
jg
sub
mov
jnp
xlat
les
jmp
mov
call
hlt
movs
fimul
jecxz
int
int
enter
cmc
dec
lahf
iret
adc
hlt
sar
ret
jp
int3
jp
mov
es
pop
call
inc
stos
push
adc
mov
xor
add
mov
mov
xchg
pop
or
fmul
retf
sbb
xchg
in
addr16
push
aad
sub
push
push
pop
hlt
hlt
jle
aas
jae
repz
xchg
std
jle
push
adc
xchg
pop
xchg
and
bound
aad
test
pop
in
pusha
shl
cmps
push
out
dec
ds
cmp
mov
add
mov
sbb
cmp
mov
les
test
repz
sub
xor
xchg
pop
je
sbb
add
and
nop
pusha
mov
ret
mov
jbe
int
das
movs
jmp
inc
(bad)
test
xor
push
mov
xor
test
pop
in
jecxz
ffreep
inc
pop
jmp
mov
je
fiadd
xor
pop
push
mov
dec
pop
and
jmp
push
inc
sbb
daa
out
lahf
dec
ja
sbb
cmp
dec
mov
sub
adc
neg
dec
pop
mov
and
jmp
int
and
push
in
sti
mov
stc
xor
sbb
aam
cmp
add
or
mov
and
mov
cli
jo
icebp
fwait
clc
loop
rol
jne
mov
mov
add
sub
(bad)
dec
and
cwde
sti
ins
jmp
xor
xchg
mov
jb
and
xor
popf
lods
inc
add
xor
push
or
push
movs
push
loopne
retf
mov
sbb
call
push
xchg
push
mov
mov
sahf
cld
leave
lds
lea
jns
inc
sbb
xor
adc
enter
ror
call
xchg
push
adc
cli
add
pushf
std
stos
and
js
jle
push
mov
ins
dec
fidivr
loop
cs
xor
ja
cdq
cwde
dec
pop
xchg
ins
sub
pop
xchg
push
push
sbb
aas
mov
push
arpl
std
xchg
mov
adc
stc
call
movs
inc
hlt
dec
fs
out
xor
dec
mov
(bad)
in
call
enter
push
neg
pop
mov
xor
jmp
dec
jbe
pop
test
jbe
and
mov
pop
push
xor
xor
jmp
in
test
ins
lahf
pop
sbb
or
adc
push
shl
sbb
lock
dec
jg
ret
add
aad
scas
and
pop
add
into
and
ja
dec
lods
cdq
lock
or
into
dec
xchg
cmp
fild
inc
mov
push
xchg
or
jns
inc
and
pop
dec
xchg
mov
clc
popa
stos
mov
xchg
cmp
(bad)
in
sbb
stos
xchg
mov
jbe
in
retf
cmp
add
iret
sub
mov
add
cld
xor
jecxz
mov
jg
mov
or
push
push
mov
scas
popf
mov
or
pop
out
pushf
push
dec
sbb
inc
mov
mov
push
aad
iret
nop
jge
xchg
pop
or
aad
add
iret
int
or
dec
shl
and
xchg
inc
xchg
adc
adc
mov
xchg
int
cli
fdiv
dec
sbb
fsub
or
dec
enter
mov
dec
jp
out
xor
ins
call
pop
in
inc
and
push
out
lea
xchg
sub
stos
jge
dec
fstp
daa
jnp
stc
cwde
xor
pushf
stos
adc
mov
add
popa
or
call
out
sahf
adc
add
lahf
sub
cli
ds
cld
cmp
gs
loopne
loop
stos
imul
push
repnz
hlt
je
out
mov
sti
sbb
cmps
pop
(bad)
mov
mov
add
int3
in
mov
pop
outs
sbb
(bad)
pop
jae
cmp
(bad)
not
cdq
inc
shr
aam
xchg
mov
pop
(bad)
mov
dec
in
add
mov
mov
cmp
and
cmp
mov
adc
or
adc
mov
repz
sbb
ret
cmp
mov
or
push
adc
or
stc
adc
(bad)
popf
cmps
pop
mov
into
xchg
jno
xlat
jecxz
out
xchg
icebp
lahf
adc
shl
inc
inc
cs
push
cmp
movs
mov
outs
add
or
sub
cmp
and
int
ds
dec
loop
loop
push
jecxz
inc
das
fwait
mov
mov
lahf
mov
mov
mov
or
addr16
sub
add
loope
xchg
jae
into
push
push
out
push
aam
jmp
sub
pop
call
xchg
nop
mov
or
adc
adc
and
dec
push
iret
out
sar
dec
jnp
push
dec
sub
scas
js
adc
xchg
mov
js
(bad)
jnp
push
dec
pop
inc
pop
cmps
mov
in
outs
or
ins
das
mov
fsubr
call
loopne
sbb
aam
sbb
fistp
call
sbb
xor
xor
pop
call
pushw
aad
dec
daa
fstp
in
mov
mov
adc
jne
(bad)
out
mov
ror
mov
popa
or
jl
sbb
xor
in
scas
xor
inc
mov
std
jnp
and
sahf
xchg
bound
test
xchg
iret
fs
xchg
jp
jne
fmul
ret
rcr
fwait
lods
in
add
adc
enter
dec
je
aas
jns
push
ins
call
pop
imul
out
fstp
xchg
push
stc
push
int3
xchg
adc
inc
or
retf
(bad)
(bad)
jle
mov
inc
or
les
xchg
dec
mov
jl
sub
call
mov
rcr
fsubp
pop
dec
pusha
fwait
xlat
xor
lea
inc
mov
pop
pop
jns
sub
sbb
sub
repz
xchg
add
xchg
add
ror
sbb
mov
test
push
fidiv
bound
int
cmps
aam
pop
mov
sub
cmps
hlt
addr16
in
xchg
cmp
sbb
out
pop
scas
mul
xchg
addr16
(bad)
movs
push
push
ss
arpl
xor
ins
stos
jno
mul
leave
aam
pop
adc
fchs
cwde
fwait
jg
pop
mov
push
je
pop
push
sbb
mov
jmp
dec
popa
jecxz
cpuid
mov
pop
comiss
test
fist
or
clc
pop
test
jge
jbe
enter
add
dec
xlat
jbe
adc
aam
loopne
int
aaa
jecxz
lods
in
scas
or
dec
xchg
pop
imul
in
sar
int3
mov
cmovns
inc
cmp
(bad)
cmps
sbb
sbb
pop
ret
sub
mov
add
fst
jmp
or
or
les
inc
add
sbb
jle
adc
fcomp
inc
(bad)
mov
inc
outs
aaa
iret
mov
ins
retf
scas
cdq
loope
and
arpl
call
fstp
out
lods
push
aam
mov
add
jmp
push
fld
xchg
les
rcr
loopne
cmp
pop
mov
enter
xchg
neg
in
(bad)
push
ror
repnz
jno
inc
sbb
ins
cwde
pop
add
or
sbb
mov
xchg
inc
arpl
test
jb
cmp
xor
push
lds
sbb
ret
cli
cmps
xor
adc
mov
dec
mov
or
xlat
loope
or
sub
jecxz
cmp
jmp
jmp
mov
mov
cdq
sub
adc
xchg
jmp
inc
fidivr
and
sub
mov
hlt
dec
jmp
retf
fsubr
out
xchg
ret
in
sub
scas
loop
inc
sub
mov
mov
fisub
jge
outs
jbe
mov
cli
jmp
das
test
sbb
fsub
mov
xor
sbb
inc
lds
cmp
mov
add
jmp
jne
cmp
les
repz
push
and
jbe
lock
cmp
call
ins
push
(bad)
sbb
repnz
jg
jle
push
dec
sbb
dec
in
mov
stos
cmp
jo
ret
pusha
popf
fdiv
sub
es
mov
sub
jge
and
je
popa
sbb
iret
add
mov
push
(bad)
cmc
jg
jg
fs
dec
xlat
test
push
ret
push
retf
jb
je
sub
dec
mov
mov
sbb
adc
std
aas
scas
pop
push
into
mov
mov
inc
movs
loopne
jle
inc
stos
movs
stos
or
out
jmp
adc
addr16
and
mov
imul
mov
push
sbb
aam
mov
sbb
test
in
cmp
sub
xchg
cmp
sbb
mov
inc
adc
ss
jecxz
xor
and
mov
fwait
push
mov
enter
and
movs
lahf
(bad)
dec
or
push
mov
je
xchg
retf
daa
lods
mov
and
fs
jo
mov
rcl
sbb
pop
or
mov
mov
dec
xchg
sbb
enter
mov
dec
(bad)
stos
test
les
stos
popf
add
adc
lods
nop
inc
scas
sbb
dec
lock
jb
dec
fsubr
lods
(bad)
retf
fisubr
adc
inc
sbb
push
stos
mov
dec
fs
cs
push
cmp
stos
sbb
loop
pop
sbb
pop
xor
jle
scas
int
ss
fsubrp
inc
xchg
aam
ficomp
and
into
je
jl
xchg
test
add
aas
push
idiv
xchg
jg
int3
jo
xlat
xlat
jbe
js
pop
ins
test
cmc
das
sub
frstor
sbb
mov
dec
inc
fcmovnb
push
inc
icebp
cwde
mov
in
mov
mov
push
adc
inc
jge
sbb
sar
mov
sub
(bad)
je
rcr
enter
xor
mov
jl
shr
xchg
rcr
sbb
ret
daa
lds
scas
call
pop
ss
xchg
popf
xor
mov
rol
adc
dec
or
jnp
dec
and
push
cmc
fdiv
sub
and
jae
push
bound
jle
out
in
aam
out
xchg
pop
mov
sbb
test
or
push
jae
cmps
scas
cmp
or
jo
adc
sbb
mov
gs
aas
ret
mov
cdq
in
jns
jl
xor
loop
jge
movs
in
inc
idiv
stos
dec
sub
push
pop
mov
mov
shr
lea
jno
lahf
jge
mov
imul
aad
(bad)
jns
adc
dec
pop
inc
outs
jecxz
(bad)
xchg
aad
aas
mov
ror
jl
and
xchg
outs
cmps
(bad)
(bad)
pop
push
sub
jle
sbb
js
xchg
js
push
inc
inc
int
jae
mov
pushf
cli
or
sbb
inc
fwait
pop
and
adc
in
mov
(bad)
lods
movs
sbb
mov
std
mov
mov
repz
rol
mov
pop
fild
dec
mov
sub
cmc
push
mov
lock
sub
sub
fs
dec
mov
dec
cmp
sub
pop
sub
or
xchg
aas
pushf
cmp
adc
cwde
mov
(bad)
dec
popf
inc
pop
inc
jl
xchg
inc
push
mov
scas
inc
in
stc
div
jecxz
add
cwde
or
push
dec
iret
pop
inc
sbb
aaa
mov
mov
(bad)
lods
cld
mov
mov
xor
test
pop
mov
xor
push
scas
movs
mov
dec
icebp
je
adc
int
add
repnz
pop
pop
xchg
mov
nop
jns
xchg
stos
mov
call
ins
xor
fisttp
into
jle
outs
leave
mov
dec
aad
add
mov
cmp
pop
in
pusha
inc
inc
out
or
xlat
sub
outs
lods
jne
push
sahf
test
(bad)
addr16
movs
sub
dec
pop
stc
fdivr
adc
es
not
aas
test
cmp
cmps
fistp
in
mov
leave
jg
xor
mov
hlt
loopne
push
mov
mov
fmul
jo
dec
cs
xchg
out
enter
mov
xor
or
mov
adc
arpl
xor
sar
cmp
push
(bad)
cmc
jae
popa
retf
jle
jle
cmc
adc
int
(bad)
mov
out
dec
(bad)
mov
pop
cmp
test
and
sbb
xor
mov
push
xor
pop
dec
ds
and
scas
int3
xchg
nop
mov
push
adc
jp
jmp
fimul
pushf
test
int3
in
arpl
je
sub
shr
cs
push
dec
fwait
out
fist
sti
pop
int
pushf
cmps
sbb
jmp
or
pusha
lods
(bad)
aad
outs
jnp
fwait
outs
and
jecxz
rcr
pop
cmps
mov
sub
(bad)
xchg
cmp
inc
push
or
sbb
retf
sbb
sub
push
pop
imul
popa
bound
stos
xrelease
xor
sub
fadd
xchg
aad
mov
cmps
fsubr
inc
inc
out
mov
ins
sbb
cdq
xor
call
mov
dec
in
outs
xchg
mov
pop
jp
jmp
add
mov
xchg
pop
push
loope
pop
pop
pop
fnstenv
push
call
into
inc
pop
or
jg
out
fstp
adc
mov
fnstenv
xor
push
push
daa
jmp
dec
add
idiv
xor
jbe
test
test
push
mov
cli
nop
dec
pusha
push
jp
inc
sbb
cmp
mov
sub
dec
rol
pop
push
mov
das
int
xchg
pop
test
and
loopne
push
dec
jns
jbe
xor
mov
lods
xchg
pop
(bad)
xchg
xor
rcl
je
cmp
loope
push
push
out
add
xchg
inc
dec
mov
imul
pop
jno
push
xor
outs
es
cld
xor
jmp
(bad)
in
(bad)
xchg
scas
jmp
jmp
scas
cmp
cld
and
add
ss
mov
lods
iret
adc
adc
jnp
and
xchg
mov
push
pusha
mov
dec
inc
sub
xor
ss
xchg
fbstp
clc
xchg
jae
mov
bound
fwait
add
imul
bound
fbld
and
push
stos
stc
outs
dec
rol
pop
pop
dec
xor
cmp
imul
xchg
or
test
in
dec
test
int
mov
clc
retf
push
inc
test
outs
cmp
lock
arpl
pop
inc
adc
xchg
movs
and
jbe
push
sub
fcomp
out
pop
shr
cli
mov
hlt
mov
mov
mov
(bad)
mov
shl
jge
jo
xchg
movups
dec
xchg
mov
mov
sub
in
jae
out
xchg
repnz
adc
mov
pop
call
push
push
jnp
loopne
out
test
fiadd
jmp
mov
push
sbb
inc
lock
pop
and
pop
pusha
inc
das
add
cmp
or
and
les
std
sub
movs
pop
ss
in
movs
sub
mov
xlat
test
dec
in
js
(bad)
retf
mov
sub
loop
cmp
add
ror
push
adc
inc
cs
xchg
xor
xchg
je
(bad)
and
add
xchg
das
jle
inc
jl
add
pop
movs
push
loope
ins
or
loop
sbb
in
xor
jo
pop
movhps
cmp
push
loope
test
xchg
jbe
sbb
and
push
sub
pop
xor
inc
inc
and
jb
cli
mov
fld
and
adc
mov
int
adc
mov
cmp
leave
fmul
push
cmp
push
or
add
cmp
xchg
or
icebp
pop
sbb
pop
popf
jnp
sub
lods
das
out
mov
pop
or
sbb
repz
ins
xchg
popf
cmps
js
shr
xchg
inc
pop
mov
mov
and
jo
dec
mov
aad
cmp
hlt
mov
ins
sbb
in
xor
shr
(bad)
movs
sti
jns
arpl
push
dec
cmc
lods
dec
call
adc
xchg
test
xor
jae
hlt
xchg
mov
push
xlat
lahf
clc
and
stos
mov
rcr
ror
jne
jmp
ins
and
dec
mov
and
pop
rdmsr
xchg
push
in
or
daa
mov
ficom
push
add
adc
inc
fxch
(bad)
jmp
inc
sub
enter
(bad)
outs
xchg
loop
xor
push
cmp
jl
sbb
sbb
push
adc
mov
cmp
mov
pusha
enter
scas
pop
std
jne
mov
test
or
jle
xchg
stos
inc
stos
test
pop
mov
jo
out
lods
lods
fwait
push
ss
pop
mov
inc
jnp
jae
call
mov
int
sbb
out
sub
popa
sub
inc
fdiv
data16
ins
cmp
pusha
hlt
loope
inc
dec
cmp
inc
aas
fld
out
sbb
and
adc
jge
repz
cld
rcl
sub
lea
xchg
popf
wbinvd
or
jmp
push
xor
and
stos
lock
dec
pop
dec
daa
cld
cs
sar
xchg
xchg
popa
stc
test
mov
xchg
jmp
or
cdq
pop
add
fisub
imul
sub
jmp
cmp
dec
sbb
ret
sbb
adc
fbstp
adc
mov
jg
clc
sbb
aad
arpl
std
xlat
test
js
pop
jo
fs
hlt
sti
lods
pop
shl
adc
mov
arpl
or
xor
adc
sbb
push
(bad)
mov
lods
sbb
ds
mov
push
sbb
jbe
cmps
test
inc
sub
loop
dec
add
pop
mov
cwde
add
xor
fiadd
mov
adc
icebp
outs
pop
inc
sub
ins
ret
imul
retf
xchg
es
inc
xor
add
lods
popa
(bad)
mov
xor
mov
jbe
(bad)
lea
sub
popa
(bad)
pop
movs
push
retf
cli
mov
jb
pop
in
lods
mov
mov
cwde
dec
mov
pop
ror
inc
mov
mov
movs
clc
cmp
sbb
adc
idiv
jae
call
pop
add
dec
jnp
add
pusha
leave
jge
cmp
mov
sbb
mov
adc
sbb
cmc
(bad)
aad
shr
popa
inc
movs
out
pop
repnz
out
mov
repz
stc
mov
adc
lea
mov
fidivr
popf
cwde
popf
dec
mov
into
jmp
mov
fwait
je
dec
nop
xchg
lods
fistp
retf
in
cdq
inc
ret
cmc
or
xor
addr16
call
imul
and
mov
cdq
test
push
adc
jl
jns
jg
std
lods
mov
push
push
adc
out
(bad)
aas
jmp
aad
push
push
dec
sbb
out
push
movs
fadd
push
lds
cmps
movs
push
push
in
add
pop
mov
and
and
or
ret
add
sbb
mov
push
mov
and
xchg
cs
(bad)
fucomp
pop
rcr
push
movs
lahf
out
imul
mov
imul
jbe
pop
div
mov
cmps
cmp
inc
repnz
icebp
dec
aaa
inc
jl
sub
imul
xor
push
lea
ret
arpl
jo
cmc
xchg
mov
and
setle
rol
mov
cmp
les
add
fild
clc
(bad)
mov
loopne
pop
add
leave
leave
rcr
push
mov
or
or
pand
push
or
fbstp
rcl
inc
push
sti
rol
inc
call
cdq
jae
pop
dec
or
fcom
xlat
jle
cmp
nop
fld
ret
mov
cmp
inc
sbb
adc
clc
outs
test
or
loopne
xchg
dec
xchg
out
fst
jae
retf
pop
data16
xor
cmps
mov
cmp
jmp
rol
clc
fcmovnb
cdq
jnp
(bad)
xor
mov
add
mov
test
pop
ja
test
mov
push
loope
out
aaa
dec
push
xlat
xchg
sub
lods
mov
lods
es
add
jmp
call
js
and
imul
push
out
sbb
and
aas
xlat
inc
cmps
ins
add
mov
inc
or
mov
xor
or
test
xchg
fisttp
ins
mov
iret
dec
mov
inc
sub
retf
fwait
nop
xchg
or
stos
push
ja
je
(bad)
aas
xchg
sub
pop
test
add
sbb
ss
mov
aam
mov
gs
pop
nop
push
xor
ret
dec
lea
inc
movs
outs
les
jg
jbe
pop
(bad)
(bad)
cld
mov
shl
pusha
mov
add
or
arpl
push
push
xchg
adc
shl
jp
and
jl
adc
xor
adc
(bad)
cmc
cdq
xchg
popf
jns
movs
mov
jmp
adc
call
pop
inc
mov
(bad)
jae
test
arpl
cli
popa
sbb
out
mov
out
ror
fcmove
sahf
lock
inc
push
xor
sub
pusha
push
movs
fmul
pop
xchg
cdq
mov
jp
movs
sub
shl
push
and
ja
cmps
icebp
int
xchg
dec
push
mov
dec
push
mov
pushf
inc
ins
jecxz
pop
in
xor
repz
rcr
pop
xchg
shl
xchg
pusha
call
imul
xchg
xor
cmp
sbb
(bad)
je
xchg
pop
repnz
pcmpgtd
and
test
xchg
cdq
push
or
sar
rol
gs
out
fcmovb
adc
xchg
or
lds
je
test
addr16
or
(bad)
dec
push
push
dec
cmovp
add
cmc
fwait
mov
push
mov
jmp
jb
cmp
shr
inc
test
out
jg
xor
(bad)
cmp
pusha
retf
btc
enter
and
mov
mov
push
push
pop
cmp
and
inc
clc
into
adc
cmp
out
jmp
adc
jo
xor
jp
shl
lods
fild
xchg
adc
push
inc
sub
xchg
jg
fld
sbb
test
sbb
icebp
push
das
cmp
sbb
xchg
jle
lods
jecxz
cs
jo
fadd
push
scas
jb
mov
mov
std
sub
(bad)
xlat
cmp
test
xor
push
sub
or
xchg
bound
outs
mov
retf
div
dec
add
sub
cmp
xchg
pop
and
lods
dec
out
mov
sub
inc
push
nop
pop
bound
loope
pop
fimul
(bad)
in
inc
mov
cs
iret
inc
in
xor
pop
cmp
mov
mov
pop
cmp
mov
lds
inc
mov
shl
inc
xor
(bad)
mov
mov
(bad)
arpl
cwde
fiadd
leave
add
rcl
out
jbe
(bad)
hlt
rcl
hlt
mov
add
fwait
lods
sbb
mov
(bad)
push
push
addr16
add
mov
mov
mov
sub
mov
ja
cmp
mov
mov
icebp
jge
outs
fnstcw
(bad)
mov
sar
inc
sbb
rcl
pop
dec
cli
or
inc
imul
jmp
call
push
pop
out
(bad)
mov
xchg
mov
cdq
sub
jge
loope
xchg
popa
rep
xchg
adc
(bad)
mov
cli
mov
test
in
push
les
arpl
test
repz
dec
or
icebp
inc
sbb
cmp
and
imul
and
pop
addr16
mov
data16
dec
js
or
ins
daa
cmps
mov
neg
mov
rol
cmp
cld
cmp
push
or
xchg
out
and
mov
retf
je
xor
lahf
hlt
xchg
stos
ret
out
and
jmp
lods
repnz
aam
call
pop
frstor
adc
jle
loop
shl
call
icebp
cmp
xchg
lahf
and
dec
mov
daa
add
mov
mov
push
js
nop
push
mov
mov
and
cdq
push
xor
and
xor
int3
adc
scas
scas
inc
retf
adc
xor
sahf
xchg
bound
push
lahf
push
test
add
out
add
sbb
sbb
add
in
push
push
movs
adc
cmp
ret
xor
or
imul
popf
ins
xchg
pop
ins
mov
je
adc
aaa
add
repnz
inc
cdq
jns
scas
enter
enter
cmp
cdq
arpl
push
imul
lods
out
mov
jg
fldenv
ror
aas
mov
sbb
lds
ds
inc
xchg
test
xchg
imul
leave
in
(bad)
out
cmc
fs
mov
or
xlat
xor
sbb
cmp
je
je
mov
adc
div
imul
add
pop
lea
mov
or
(bad)
jns
add
jge
or
aad
push
push
xchg
repnz
fisttp
pop
sub
lahf
mov
out
sub
cmp
inc
add
lods
pop
mov
pop
inc
jecxz
aam
ins
gs
stos
popa
xchg
or
ret
pop
cs
es
test
dec
jmp
jnp
je
pop
xchg
pop
ret
and
stos
jns
push
jae
cmp
push
outs
lods
jp
in
jge
xor
je
mov
dec
cwd
sbb
(bad)
xchg
inc
mov
outs
retf
in
mov
push
(bad)
and
adc
adc
out
les
repz
je
push
inc
sbb
aad
pushf
leave
fwait
popf
ds
jecxz
clc
stc
push
mov
xor
mov
mov
sub
xchg
cmp
cmp
cmp
shl
sub
lods
aas
push
les
leave
sti
or
jbe
in
cli
and
mov
or
xor
add
xchg
out
std
adc
xchg
out
or
sbb
xor
and
cmps
int3
add
jge
ret
mov
fsub
sbb
sub
scas
rol
xor
add
cs
adc
loop
rcl
sbb
adc
aaa
cmp
vmread
or
add
pop
mov
leave
js
or
inc
clc
out
inc
jo
mov
or
mov
jmp
cwde
and
mov
pop
jl
fsubr
psubq
mov
or
fcom
add
popf
pop
imul
repz
ret
(bad)
pusha
shl
int3
in
jg
(bad)
mov
fsub
sbb
ins
movs
in
adc
in
xor
(bad)
jp
push
movs
xchg
addr16
call
cs
mov
xor
repz
call
cli
mov
loope
mov
(bad)
xchg
jg
gs
mov
cmp
fiadd
sti
xor
add
popf
mov
in
fucomi
adc
int
xor
cwde
fidivr
sub
adc
popa
std
nop
loopne
mov
jge
popf
(bad)
and
ds
or
xchg
mov
mov
test
mov
pop
and
jge
push
or
push
hlt
sbb
pop
retf
loopne
scas
in
out
jns
pushf
je
and
fs
mov
iret
fidiv
cli
scas
push
fs
stc
pusha
add
popa
jae
pop
(bad)
je
cmp
mov
adc
scas
cmp
push
ret
loope
mov
lods
imul
ja
inc
xchg
sbb
mov
jl
retf
ret
jns
test
mov
sar
jmp
fcos
loop
and
ds
cwde
call
inc
push
mov
mov
push
cwde
fwait
mov
loope
mov
adc
arpl
mov
dec
mov
cmps
hlt
retf
loopne
call
fcmovbe
adc
(bad)
arpl
pop
or
sub
xchg
gs
and
cwde
pushf
cmp
mov
sbb
mov
test
xor
mul
cmps
loope
jo
pop
les
cmp
mov
aam
mov
(bad)
(bad)
imul
or
and
xor
rcr
sar
ret
retf
fcom
or
hlt
mov
push
ds
(bad)
xchg
aaa
movs
rcr
std
mov
ret
sar
sahf
mov
fdiv
and
jmp
dec
(bad)
in
or
neg
mov
mov
dec
imul
(bad)
retf
sbb
mov
add
test
sbb
dec
cld
fnsave
pusha
mov
jnp
ins
jnp
(bad)
jp
mov
push
mov
jge
int3
pop
xchg
sub
fld
xlat
call
cmp
xchg
in
sar
dec
jo
jno
imul
shr
ficomp
mov
sub
fcmovb
sub
dec
pop
cld
xchg
mov
imul
movs
inc
ret
pop
cmp
icebp
or
add
mov
aam
shl
int
cwde
cli
repnz
or
or
btc
imul
cmps
es
or
push
sahf
es
out
bound
sbb
adc
and
inc
cli
bound
add
loop
daa
repnz
push
std
sbb
sbb
jmp
push
push
fiadd
test
cmp
retf
(bad)
xor
xchg
and
fadd
cmp
ins
shr
pop
mov
imul
xor
lods
sar
inc
sti
add
inc
cmp
xchg
or
sbb
xor
repz
enter
pmuludq
retf
(bad)
add
pop
inc
rcpps
pop
aaa
out
test
mov
sbb
sub
cdq
jae
pextrw
jne
jle
outs
fstp
cmp
cmps
lods
popa
or
xlat
or
test
cmp
dec
inc
test
pushf
test
clc
(bad)
dec
(bad)
fist
aaa
inc
add
xchg
(bad)
mov
sti
or
adc
imul
add
imul
mov
pop
jo
das
inc
dec
or
mov
lods
pop
rcr
sbb
and
into
inc
es
sub
mov
jb
std
jg
add
add
or
mov
mov
add
aam
out
call
adc
sbb
xchg
jo
mov
xchg
(bad)
sbb
in
and
sub
adc
jmp
aaa
inc
fisubr
mov
inc
dec
pop
mov
dec
inc
fild
cmp
fiadd
jecxz
int3
ret
stos
ja
sti
pop
rcr
pop
mov
int
pop
xchg
or
mov
mov
(bad)
out
adc
call
mov
fsubr
out
in
ja
dec
mov
pushf
mov
mov
lods
jb
pusha
add
add
inc
lea
(bad)
cmp
test
push
in
popf
mov
mov
ret
mov
pop
shl
mov
mov
ins
jo
loop
push
add
std
ins
or
addr16
(bad)
adc
add
mov
test
pusha
repz
dec
(bad)
mov
cmps
mov
cmps
pop
mov
xchg
aas
inc
mov
xchg
sahf
sub
adc
dec
out
pop
sar
adc
jne
jle
test
adc
out
add
xor
(bad)
pop
mov
mov
jle
pushf
inc
cld
out
sbb
aad
imul
mov
movs
icebp
in
out
or
cmp
mov
loopne
movs
fincstp
dec
mov
idiv
les
fiadd
lock
call
or
pop
jmp
fnstenv
pop
ds
jo
jo
leave
(bad)
call
int
mov
cs
mov
dec
inc
(bad)
aaa
mov
mov
and
inc
inc
pop
add
mov
(bad)
mov
or
gs
popf
sub
fucom
daa
inc
out
inc
xor
jmp
mov
cwde
cld
clc
pop
repz
or
add
rcr
or
fist
lea
out
mov
mov
imul
stos
cwde
pop
push
nop
mov
je
cli
rol
push
fwait
mov
cmp
pushf
test
cmp
pushf
and
ins
dec
leave
xchg
mov
push
push
mov
ss
jecxz
dec
shl
movs
es
inc
fdivp
sbb
out
mov
fst
retf
aaa
push
sbb
mov
push
inc
int3
mov
cli
cmp
sbb
(bad)
or
int3
cld
ja
enter
push
fist
movs
stc
les
and
mov
cmp
ret
pusha
xchg
mov
out
ret
arpl
jge
stos
stos
test
and
shr
dec
sbb
push
jge
push
sbb
retf
pop
mov
sbb
cmp
cmp
mov
add
sti
jmp
loope
ins
mov
jecxz
pop
sub
mov
or
jo
(bad)
stc
inc
cdq
cs
ja
dec
xchg
mov
xchg
lods
push
mov
clc
in
aad
mov
mov
mov
stos
ret
pop
stos
lds
xchg
adc
push
add
test
clc
das
js
cmp
push
xchg
xchg
add
not
(bad)
jb
mov
fs
xchg
xchg
xchg
xchg
xor
cdq
out
cdq
repz
xlat
stos
xor
in
adc
mov
das
cmp
cmp
cmp
or
movs
pop
push
pop
shl
xchg
adc
fdiv
stos
mov
mov
and
call
ret
aaa
mov
shr
enter
mov
adc
loope
mov
lock
lods
aas
sub
movs
shl
or
dec
cmps
xchg
push
mov
stc
sub
push
adc
and
jle
mov
or
jmp
mov
outs
sub
push
jbe
cmp
mov
mov
(bad)
xor
dec
push
sahf
jbe
into
mov
dec
inc
shl
or
push
cmp
jnp
popa
imul
xchg
jne
xor
lds
rol
(bad)
fwait
cli
sysret
(bad)
xchg
ja
push
nop
test
pop
push
test
aad
jnp
mov
cdq
xchg
lods
aaa
cld
hlt
movs
aaa
test
scas
or
xchg
push
jle
(bad)
dec
and
ret
add
inc
ja
in
sbb
dec
mov
mov
loopne
test
jns
mov
scas
ss
cmp
mov
and
inc
jmp
arpl
adc
pop
xor
pop
outs
inc
or
movs
mov
add
ret
popa
mov
lods
retf
fwait
push
push
inc
mov
outs
test
or
(bad)
cmp
ret
mov
push
stc
inc
popa
push
pop
test
xchg
inc
push
adc
xchg
aam
push
and
jg
adc
mov
push
mov
jl
scas
cmps
mov
inc
ins
lahf
(bad)
cmps
push
and
pop
(bad)
pop
imul
mov
and
adc
test
cmp
push
enter
stos
hlt
ret
pusha
ins
sbb
xchg
add
test
push
imul
dec
or
cmp
jne
or
gs
pop
inc
mov
sub
arpl
xor
pop
popa
out
adc
loopne
jmp
push
cmps
gs
inc
push
mov
lock
push
jo
add
mov
das
add
add
pop
mov
pop
push
lods
adc
pusha
out
push
xor
je
fadd
scas
mov
repz
push
mov
and
cld
xor
mov
int
rcr
xchg
cwde
pop
mov
push
js
fadd
and
(bad)
sbb
cs
mov
fidivr
sub
or
sar
mov
pusha
mov
xchg
pusha
cmp
int3
add
call
mov
push
mov
int
popf
mov
sub
sub
push
pop
lock
cmp
mov
cmpps
icebp
dec
add
retf
dec
dec
call
fst
pop
mov
sbb
sbb
xlat
(bad)
(bad)
rol
fcomp
mov
ror
add
cmps
loopne
fcomi
push
das
push
adc
mov
dec
sub
push
adc
sub
and
mov
or
and
pop
pop
and
lahf
jecxz
mov
fisub
pop
cmp
cwde
clc
sub
fild
sub
sub
cmp
stc
nop
or
ret
lds
mov
jo
dec
inc
push
jge
loope
stc
fucomp
ins
xchg
(bad)
into
pushf
pushf
mov
mov
ror
leave
inc
scas
or
inc
adc
pop
adc
and
cld
inc
jb
dec
cld
xor
(bad)
jmp
mov
fidiv
lea
pop
xor
sub
mov
jb
dec
inc
scas
aam
mov
rol
imul
ss
or
pop
xor
loope
sbb
adc
add
xchg
fild
xchg
daa
jmp
sbb
pop
call
sar
movs
inc
mov
arpl
rcpps
test
out
sub
push
in
add
push
stos
xchg
mov
test
sub
xor
stos
inc
test
jne
fs
cmc
shl
leave
idiv
jge
lea
inc
cmp
add
sti
aad
pop
pop
dec
aaa
xchg
xchg
retf
leave
cmp
and
inc
mov
pop
test
dec
lds
shl
enter
neg
movs
cmc
xchg
fidiv
stc
int3
(bad)
xchg
xor
movzx
jg
pop
inc
xchg
and
and
lea
pop
scas
das
fs
mov
mov
shl
sbb
scas
jl
or
mov
aas
(bad)
mov
xor
push
clc
sub
daa
aam
pop
mov
dec
pop
stc
lea
int
push
sub
outs
or
out
neg
clc
sub
rol
sbb
cwde
loop
sub
cdq
scas
cwde
sub
and
and
mov
cmp
push
outs
mov
xor
mov
cs
shl
adc
nop
inc
adc
retf
out
mov
add
push
jmp
pop
mov
lods
cmps
jb
out
add
sbb
sub
or
add
sbb
xchg
cmc
mov
jnp
mov
rol
mov
sbb
adc
and
mov
test
add
mov
(bad)
pop
dec
ins
xor
std
mov
lock
scas
ss
cmc
xchg
mov
(bad)
push
cmps
cmps
out
mov
sub
mov
loop
mov
inc
loopne
mov
aam
(bad)
jno
data16
loopne
cld
jae
xor
retf
push
xor
les
out
fisttp
test
test
ror
sub
pop
add
leave
outs
popf
gs
or
rcr
lahf
jnp
in
(bad)
(bad)
in
stos
aam
pop
push
imul
arpl
inc
ret
pop
pushf
sti
mul
fdiv
sbb
dec
jmp
loope
jae
push
adc
jle
mov
mov
arpl
cmp
push
jmp
sbb
adc
adc
aaa
ins
xor
pop
xor
std
les
sbb
sbb
adc
mov
loop
mov
fstp
iret
xlat
add
xor
stos
xchg
(bad)
add
dec
inc
mov
or
lock
dec
call
xor
outs
inc
and
push
and
xchg
cmp
addr16
push
int
push
pop
sar
pop
push
cwde
lods
popf
wrmsr
pop
pop
inc
rol
pushf
scas
aas
test
pop
mov
(bad)
mov
js
js
xor
stc
xchg
sub
shl
pop
scas
out
aam
lods
inc
stc
repnz
sub
add
push
sbb
push
push
scas
add
or
push
daa
aaa
out
xchg
pop
mov
popf
(bad)
dec
mov
in
test
iret
retf
or
sar
xchg
cmp
mov
mov
mov
push
nop
iret
xchg
and
jl
mov
add
cmps
cmp
jl
or
je
mov
add
int3
inc
jecxz
data16
xchg
jp
aas
movs
(bad)
cwde
jne
push
sub
push
iret
sti
bound
popf
repnz
out
mov
push
rcl
sub
ja
xlat
fdecstp
mov
pop
ja
dec
nop
shr
push
pop
(bad)
and
fsub
push
cdq
aas
movs
sub
hlt
push
cmp
xlat
fld
fisttp
mov
popa
cmp
retf
jle
stos
mov
ss
jge
shl
imul
mov
(bad)
and
repnz
sub
jnp
and
push
popa
xchg
push
lock
jno
dec
inc
ins
or
adc
dec
rcr
or
call
push
or
idiv
inc
adc
scas
mov
push
enter
arpl
leave
mov
shl
add
cmp
mov
mov
scas
push
pusha
mov
sbb
cmp
sub
xor
adc
adc
cld
adc
test
dec
mov
mov
mov
mov
mov
out
enter
inc
mov
aas
cmp
popaw
(bad)
fst
sub
(bad)
popf
pop
add
jae
dec
jno
pushf
fdiv
or
xchg
push
(bad)
cli
les
pusha
fiadd
movs
jbe
call
add
rol
xor
push
(bad)
mov
dec
sub
cmp
cmp
add
mov
repnz
aaa
adc
jecxz
sub
jp
mov
mov
cmps
inc
jbe
arpl
gs
dec
(bad)
jb
mov
add
lods
push
lds
adc
jge
jb
mov
adc
add
arpl
jp
mul
movs
mov
scas
popa
in
fld
inc
je
lods
or
ins
jne
or
fild
sbb
xor
movs
int3
(bad)
fisub
xor
(bad)
adc
sub
mov
jne
mov
lea
jmp
fdivr
shl
bound
lahf
push
fs
xor
cli
push
pop
adc
push
leave
les
lds
mov
pop
push
jno
retf
cmp
push
mov
push
in
push
cwde
sbb
lds
bound
sbb
sar
sub
push
mov
ja
fidivr
daa
sbb
jae
xchg
xchg
cmp
out
add
mov
sbb
fbld
in
cld
es
loop
fstp
mov
outs
in
loopne
jle
cmp
add
add
push
xchg
inc
out
xor
iret
ds
xor
fcomp
sbb
or
sub
jae
mov
mov
inc
jmp
cmp
sub
mov
mov
jno
mov
ret
jecxz
pop
fbstp
jmp
ja
jb
ror
dec
push
ret
or
loope
fisubr
cli
pop
mov
push
dec
mov
je
aas
jbe
cmps
loopne
es
ins
inc
push
push
mov
cmps
pop
dec
outs
jno
cli
cmp
bound
cmp
(bad)
mov
shl
mov
fbstp
push
mov
pop
rcl
repnz
sbb
movs
sbb
sub
fbstp
sub
repnz
es
mov
adc
fsub
jg
add
data16
mov
arpl
mov
cli
or
lds
mov
sbb
es
pushf
test
cmp
adc
popa
ror
jecxz
jbe
dec
mov
sbb
dec
popa
int
ret
in
pop
ds
mov
xor
cld
fwait
sbb
test
in
cwde
in
cmp
xchg
push
int
into
mov
nop
adc
es
xchg
xchg
xchg
cdq
enter
pop
out
repnz
mov
pop
movs
pop
rcl
or
push
xor
outs
push
leave
ins
xor
push
pushf
fild
lahf
je
ret
sbb
fdivp
inc
push
call
rcl
data16
push
jl
pop
dec
(bad)
cwde
mov
xchg
aad
rcr
inc
loopne
or
js
rol
and
test
(bad)
xor
gs
test
pushf
lock
in
arpl
in
jnp
frstor
xchg
call
cmc
pop
ins
aas
pop
retf
fsub
cld
jecxz
fs
int
mov
cmp
sbb
ja
fnsave
ins
sub
pusha
pusha
cdq
adc
mov
cwde
iret
jnp
sub
int
inc
repnz
inc
loop
into
stos
inc
bound
jne
mov
add
push
sub
gs
jno
mov
add
mov
xchg
aad
loope
jb
popa
jp
cmps
adc
xchg
dec
adc
(bad)
ffreep
aam
xchg
sub
sub
and
pop
jns
das
ja
xor
mov
popa
xor
xor
mov
loopne
cmp
mov
xchg
push
ret
js
and
imul
adc
jnp
rol
fst
popf
xchg
in
cmc
ret
jg
sti
stos
cmp
cli
mov
or
add
enter
adc
adc
fiadd
cmp
ret
rcr
imul
and
mov
clc
neg
add
retf
repz
sar
inc
out
mov
jp
lods
sar
js
imul
jae
js
psrlw
push
mov
es
sahf
std
or
mov
iret
xacquire
ss
ret
cmps
rol
in
stos
mov
out
jae
lahf
lods
xchg
enter
lahf
retf
add
mov
jo
pop
mov
popa
dec
lock
xchg
dec
rol
add
cdq
daa
outs
out
adc
inc
mov
out
sub
aaa
gs
cmc
call
cwde
xchg
aaa
mov
mov
pushf
je
mov
pop
and
xchg
ret
mul
fcom
add
loop
in
adc
in
sub
sub
jno
and
outs
stc
imul
or
xor
push
ds
fisub
into
xor
sub
inc
xlat
mov
mov
bound
add
inc
aaa
ins
enter
xchg
jmp
push
xchg
je
mov
or
jmp
cmp
(bad)
dec
std
lods
hlt
aaa
mov
mov
mov
push
dec
dec
cmp
test
push
stos
mov
loope
jno
mov
push
repz
push
pop
lods
aaa
jne
inc
adc
aad
lods
sub
inc
mov
mov
xor
adc
cmp
retf
jge
lock
(bad)
idiv
jae
lahf
adc
lock
jp
fmul
dec
mov
cmc
loopne
jecxz
dec
repz
leave
xlat
ja
xor
mov
xchg
cmp
mov
pop
mov
mov
dec
dec
(bad)
stos
add
iret
cmps
std
je
mov
pop
lods
inc
(bad)
xchg
and
jl
cmps
fstp
jecxz
ss
stc
(bad)
ja
fld
inc
aad
mov
je
pop
outs
aaa
xchg
cmps
adc
leave
push
push
pop
jnp
mov
push
inc
jae
leave
lea
sub
stos
sub
cmp
mov
shl
cmp
out
idiv
or
dec
xchg
arpl
cli
mov
xchg
and
mov
sahf
outs
jbe
(bad)
xchg
dec
push
sub
inc
es
xchg
or
xor
push
pop
inc
xor
inc
sub
ins
push
dec
fs
push
pop
stos
or
cdq
hlt
xchg
jnp
jbe
and
sbb
mov
icebp
dec
into
cmps
call
push
sbb
cmps
call
retf
xchg
mov
push
push
outs
add
xchg
in
(bad)
xchg
es
mov
mov
repnz
shld
adc
jbe
js
add
xor
fnstenv
rol
popf
dec
into
push
rol
icebp
popa
cwde
fisttp
mov
adc
xor
jne
cmps
jle
mov
xchg
jmp
xor
adc
and
into
jo
inc
and
retf
mov
stos
lea
lock
mov
dec
sub
jecxz
loope
int3
mov
push
lock
sbb
mov
lock
push
dec
mov
sbb
cmps
adc
fisttp
fs
cdq
or
adc
pop
mov
sub
test
push
push
popa
pop
inc
ins
cmp
repz
push
iret
pop
push
rcr
push
stc
adc
clc
jnp
scas
cmp
mov
or
add
dec
test
pop
ror
into
fmul
test
ret
cmps
pop
popa
or
adc
pop
mov
xchg
xchg
adc
fs
xor
and
lds
icebp
sti
mov
aaa
mov
mov
mov
ja
cmp
test
iret
or
dec
pop
(bad)
add
inc
xor
mov
push
mul
cs
sub
sbb
scas
and
popf
popf
mov
push
aam
sbb
mov
icebp
stos
dec
xchg
outs
sub
es
mov
enter
mov
stos
xor
xchg
jmp
jno
das
xchg
out
mov
adc
and
imul
push
jae
xor
xor
sub
fidivr
add
adc
sub
inc
int3
int
lods
cwde
inc
add
sbb
call
add
int
call
lds
lea
pop
xor
stc
test
repnz
ror
popa
jnp
mov
push
push
fiadd
cmp
iret
aad
pusha
popa
dec
ret
pop
inc
stos
jmp
cmp
in
(bad)
movs
sub
fisttp
popw
test
leave
loop
and
push
or
std
fist
xlat
mov
pop
mov
imul
or
jp
xor
jecxz
aaa
mov
dec
and
adc
mov
daa
mov
(bad)
cmp
stos
sbb
mov
push
out
mov
adc
lahf
dec
mov
aad
fdivp
mov
lahf
rcl
nop
rcl
div
(bad)
jae
adc
mov
loop
cmp
cmp
dec
es
data16
mov
mov
pop
(bad)
rcr
xchg
loopne
fwait
mov
(bad)
pop
cmp
mov
fdiv
cmp
sar
xor
cmps
ffree
into
leave
mov
out
mov
inc
in
add
mov
dec
push
xchg
mov
push
icebp
mov
aam
ror
or
daa
shl
mov
and
jmp
pop
xchg
(bad)
inc
and
xchg
dec
mov
icebp
mov
xchg
enter
fdivr
loope
test
adc
sbb
xor
xchg
cdq
mov
call
movs
iret
push
dec
jle
sbb
in
pop
(bad)
mov
add
fimul
dec
out
loop
in
lds
out
lods
inc
cmp
(bad)
in
and
jne
adc
inc
inc
xchg
inc
sahf
push
out
xlat
push
fistp
cmp
jb
mov
data16
xchg
inc
or
push
dec
jns
test
jae
into
mov
jl
sahf
test
mov
retf
mov
scas
inc
adc
out
pop
push
outs
xor
xchg
into
fnstcw
jae
(bad)
mov
add
mov
das
push
push
(bad)
sbb
sub
sub
xchg
pop
in
inc
mov
leave
mov
and
mov
adc
pushf
dec
(bad)
es
imul
dec
jmp
pop
lods
out
sti
popf
pop
fwait
out
push
or
inc
mov
mov
lock
jp
mov
jmp
pop
jae
fs
push
daa
leave
push
inc
sub
test
add
popa
add
and
das
sbb
mov
mov
(bad)
pop
aad
push
out
es
mov
xchg
push
mov
into
mov
mov
enter
xchg
cld
xchg
xor
in
aam
ins
dec
in
ins
mov
add
xchg
sbb
push
push
std
sub
or
ins
in
fmul
and
hlt
clc
ficom
push
pop
(bad)
int3
jp
xor
dec
sbb
pop
xchg
fldcw
jne
push
scas
adc
xchg
sub
xor
ja
out
or
loope
jecxz
pusha
or
mov
int3
ins
mov
popa
scas
xchg
adc
fs
pop
fwait
(bad)
dec
xor
and
mov
mov
pop
jb
adc
test
dec
xchg
cs
jge
xchg
mov
call
mov
int3
and
xchg
in
adc
mov
push
bound
xor
pop
aam
add
aaa
cli
retf
pushf
lods
sbb
stos
pop
jo
stc
mov
mov
stos
cs
ins
xchg
or
(bad)
test
je
pop
pop
fst
and
pop
pop
fdivrp
cmp
popa
in
sub
lock
inc
scas
mov
push
adc
por
push
dec
adc
xchg
mov
outs
cmp
shl
mov
push
(bad)
popf
and
inc
mov
(bad)
pop
add
stos
les
push
(bad)
cmp
pushf
je
fs
jp
lods
inc
and
sub
and
clc
mov
hlt
add
aaa
mov
stc
jae
sbb
ret
jecxz
xchg
inc
mov
daa
ss
adc
fiadd
pop
push
and
scas
xchg
pop
outs
add
lock
adc
popa
das
mov
arpl
mov
dec
out
xor
gs
bnd
mov
int3
xor
mov
cmp
push
push
push
cmp
xor
ja
add
jne
outs
mov
fistp
test
push
xchg
daa
lahf
loop
lock
es
(bad)
pop
dec
dec
rcpps
or
das
xor
leave
popa
rcl
sbb
push
add
das
fwait
les
pushf
mov
pop
jo
push
mov
jecxz
clc
lds
xchg
xchg
stos
adc
test
loop
scas
ins
push
push
movs
adc
cmp
inc
std
jp
push
adc
les
add
sub
test
adc
icebp
mov
je
and
jmp
sbb
push
xor
mov
mov
xor
out
push
js
out
add
xor
wbinvd
repz
add
cmp
outs
xchg
stc
push
mov
ret
bound
imul
xlat
cmp
xor
(bad)
int3
or
xor
fstp
call
mov
test
jmp
jge
imul
and
xchg
in
rcl
sahf
mov
jae
rol
xchg
stos
mov
xor
int
sub
mov
sub
xor
mov
push
lea
call
sub
sbb
push
popf
repnz
or
cmps
dec
push
mov
and
and
push
mov
inc
push
pop
hlt
adc
mov
adc
cwde
push
inc
xchg
xor
pop
and
iret
add
push
or
gs
sub
cmps
pushf
push
mov
test
xchg
neg
pusha
test
jl
sub
sahf
mov
fidivr
stos
dec
cmp
sub
add
fisttp
popf
movs
mov
neg
or
mov
iret
mov
stos
(bad)
pop
jbe
xchg
mov
mov
aam
fistp
xchg
sbb
mov
mov
add
stos
adc
jmp
or
hlt
stc
cmp
jecxz
lock
mov
sub
adc
loope
sti
or
xor
and
in
js
loop
lds
mul
rep
push
stos
test
fsub
out
push
mov
ins
ss
jl
lahf
test
xchg
xlat
or
mov
push
ins
push
adc
nop
pop
pop
mov
test
jp
or
and
push
sbb
mov
out
jle
mov
pop
in
jno
mov
dec
cmp
jl
xchg
dec
aad
cmp
fist
xor
iret
adc
and
pop
lods
push
jg
push
mov
aaa
out
jb
dec
jmp
neg
pop
fisttp
xchg
fs
cmp
or
push
in
imul
push
cmc
jns
aaa
icebp
fstp
mov
jmp
sbb
dec
pop
xchg
aas
mov
sub
push
std
inc
ror
push
cmp
(bad)
call
jb
stos
fsubr
mov
lock
test
inc
je
push
push
cmp
movs
dec
fidiv
nop
(bad)
sahf
xor
adc
cdq
sub
sbb
and
loopne
(bad)
call
leave
icebp
xor
cmp
adc
xchg
cmovae
mov
sahf
lea
inc
mov
mov
mov
adc
cs
mov
mov
cmp
in
cmp
ja
fistp
mov
dec
jae
(bad)
repnz
pusha
dec
mov
cmp
into
xchg
test
mov
xchg
or
movs
inc
and
fucom
imul
push
(bad)
mov
scas
cmps
and
lahf
mov
not
inc
adc
jge
xchg
(bad)
daa
test
stos
sub
push
push
sbb
pop
xor
cld
xchg
jnp
ror
cmp
js
mov
outs
sbb
lock
(bad)
cmp
stc
ror
aad
pop
inc
(bad)
out
out
mov
inc
mov
test
out
and
test
(bad)
fwait
ror
or
and
mov
xor
sub
sahf
aaa
xor
xchg
ror
mov
std
imul
add
cmp
fmul
ss
(bad)
gs
cli
lods
arpl
(bad)
sbb
aam
aam
ror
scas
fild
(bad)
(bad)
(bad)
(bad)
scas
(bad)
push
xchg
popa
ja
add
mov
mov
rcl
scas
imul
push
ins
or
(bad)
aad
and
aad
int3
cmp
jmp
push
fs
sbb
mov
and
mov
daa
or
retf
xor
xor
xchg
mov
iret
add
leave
lea
inc
nop
adc
test
mov
ins
(bad)
fcom
mov
dec
repnz
in
mov
xchg
xchg
pop
jle
sub
dec
(bad)
sti
jmp
or
mul
xchg
rcr
and
push
mov
ss
scas
sbb
and
pop
stc
or
push
cmp
std
pop
and
rcr
mov
in
mov
or
mov
(bad)
dec
fild
movs
inc
fs
pop
ja
scas
fcmovb
cld
icebp
popf
cmps
or
sbb
sahf
xchg
mov
cld
fadd
jae
push
sbb
call
xlat
inc
push
cmp
mov
shl
add
stos
push
push
pop
test
sub
jl
test
push
clc
or
or
or
mov
lds
fdivr
(bad)
cli
jb
jno
mov
pop
js
(bad)
adc
icebp
jmp
pop
or
cmp
call
xchg
imul
mov
imul
push
pop
add
push
lahf
sub
mov
jae
loop
or
out
and
outs
jmp
xchg
dec
ret
or
mov
xchg
dec
cmc
pusha
fadd
inc
sbb
icebp
ins
sbb
jae
scas
or
or
xchg
test
jbe
ret
sbb
xchg
mov
in
test
daa
sub
jl
fs
inc
push
outs
adc
xchg
mov
les
frstor
scas
in
inc
mov
and
push
add
leave
out
fs
sar
shr
mov
jae
adc
clc
imul
push
and
jnp
ret
(bad)
pop
pop
inc
test
xchg
pop
dec
je
inc
adc
mov
pmaddwd
das
fimul
fdecstp
cmp
jle
pusha
lea
das
xchg
mov
inc
js
mov
out
dec
jb
out
xor
hlt
icebp
(bad)
xor
mov
sub
je
icebp
mov
aas
(bad)
push
pop
mov
sar
jmp
stc
inc
ins
dec
pop
push
pop
pop
loop
jnp
push
adc
jmp
xchg
jl
push
stos
sbb
rol
mov
lock
stc
outs
rol
jmp
fbstp
adc
(bad)
mov
aam
loopne
jo
mov
sti
xchg
rcr
mov
or
mov
or
jge
ret
lods
pop
sbb
inc
cmps
sbb
pop
cmp
scas
adc
inc
inc
into
mov
xor
ja
sub
mov
scas
inc
and
sub
(bad)
repz
add
jno
es
rcr
jmp
sub
and
add
movs
sar
jecxz
imul
cmp
xchg
fwait
loop
pop
sahf
je
mov
jns
xor
outs
xchg
xor
or
sub
fild
test
aad
dec
and
addr16
fidivr
jnp
mov
nop
(bad)
out
(bad)
js
push
push
mov
jb
sub
dec
test
and
mov
adc
sbb
shl
or
pop
mov
in
int3
cs
pop
ret
out
sub
aam
je
in
adc
cli
xchg
xor
sub
ror
sub
ins
arpl
jl
(bad)
rcr
es
add
test
xchg
xor
repnz
test
jmp
adc
cs
sub
(bad)
ret
(bad)
fistp
mov
mov
popa
arpl
dec
xor
inc
pop
mov
gs
add
mov
mov
(bad)
or
inc
std
or
into
push
inc
xchg
pop
int
icebp
or
fcmovnbe
push
cmps
test
sbb
xor
adc
repnz
stc
mov
jecxz
jae
push
cmps
cld
ret
pop
push
call
jp
pop
scas
lds
shl
or
or
lds
jge
in
inc
push
out
hlt
xchg
mov
daa
xchg
jne
arpl
sub
jl
xchg
repz
xchg
push
cmp
sbb
scas
jmp
loopne
fistp
retf
hlt
mov
cwde
imul
add
in
clc
xlat
cs
pop
cmp
xchg
push
jl
jae
aam
xor
std
and
rcl
jle
loopne
sub
ins
sbb
pop
add
sbb
cmps
std
mov
xor
mov
stos
pop
shl
mov
out
dec
sbb
cmps
mov
cmc
mov
add
jbe
jp
lock
push
movs
jmp
(bad)
dec
es
jmp
jge
or
jb
sti
(bad)
test
out
scas
or
imul
mov
std
jmp
pop
push
xor
arpl
not
lods
hlt
dec
push
stos
jecxz
push
jno
dec
fs
xor
push
inc
cmp
cmp
stc
adc
add
push
or
stos
mov
retf
mov
ja
mov
stc
in
pop
mov
jnp
scas
jbe
ds
mov
xchg
push
shl
xor
test
enter
xchg
addr16
aas
jae
mov
retw
adc
add
push
jle
mov
aas
jmp
inc
dec
inc
mov
and
jnp
(bad)
jbe
popf
adc
sub
in
sub
dec
and
xor
mov
(bad)
sbb
pop
or
or
adc
mov
scas
dec
or
mov
dec
mov
and
scas
mov
in
add
aam
mov
cs
je
jmp
pop
push
cld
xchg
out
(bad)
xor
mov
sbb
out
loopne
xchg
not
ja
xor
mov
xchg
mov
ss
xor
int3
jne
or
push
cmp
mov
mov
jb
sbb
fxch
(bad)
call
or
repnz
into
jle
leave
(bad)
mov
fcmovnb
shr
repnz
mov
mov
jmp
fdivr
out
lahf
sbb
fcomp
outs
bound
adc
sbb
jl
adc
mov
or
hlt
pusha
or
aad
pop
popf
adc
(bad)
ror
inc
popa
rol
sbb
mov
jns
inc
scas
cwde
jp
inc
loopne
sbb
mov
jecxz
dec
inc
sub
xchg
sub
mov
pushf
loope
mov
enter
xchg
sub
push
(bad)
int3
mov
(bad)
pop
out
jae
outs
out
out
mov
imul
ret
mov
bound
dec
mov
out
jmp
jmp
aad
in
inc
cmps
xor
stc
jl
jp
and
xor
mov
sub
xlat
push
add
adc
add
cli
gs
sub
add
mov
fiadd
and
movs
popf
add
pop
cmc
pop
neg
leave
iret
aam
sub
add
std
sbb
fdiv
and
fsub
int3
aad
(bad)
imul
mov
jmp
out
dec
or
fisttp
or
or
je
jmp
cmp
or
inc
ss
rol
retf
retf
jnp
push
pop
iret
fnsave
gs
call
mov
popf
cmps
mov
sar
mov
pusha
dec
mov
pusha
mov
test
mov
aam
pop
sahf
pop
ss
(bad)
push
test
push
push
out
xchg
mov
int3
mov
shl
lds
and
lods
(bad)
jg
ret
ds
leave
rcr
fs
xor
add
aam
and
jno
pop
pop
mov
test
dec
mov
sbb
jbe
mov
push
inc
loopne
pop
nop
(bad)
xchg
shr
ret
call
xchg
mov
ds
dec
and
lods
nop
mov
jl
ror
(bad)
cwde
mov
xchg
arpl
stos
jbe
jne
dec
(bad)
pop
pop
push
retf
and
sbb
test
pop
pusha
test
leave
das
mov
cmps
out
adc
pusha
or
adc
ret
sub
stos
sahf
sar
add
push
(bad)
sub
mov
pop
cwde
outs
(bad)
clc
cmp
daa
lods
out
or
ins
push
fsub
clc
fisttp
pop
shl
sahf
jmp
lods
test
lds
dec
cmp
xor
jnp
jl
ror
aaa
adc
jp
inc
adc
rcr
push
mov
fs
mov
fstp
scas
scas
(bad)
sbb
sbb
inc
lods
cmp
arpl
jnp
mov
jecxz
push
or
pop
sub
add
retf
fmul
cmc
add
xor
enter
mov
push
mov
pop
mov
in
or
mov
iret
add
jle
sti
daa
(bad)
xchg
daa
ds
int3
xchg
xor
inc
addr16
and
and
arpl
push
mov
jbe
hlt
nop
fs
std
dec
jle
jbe
jo
popa
pop
retf
adc
push
sbb
hlt
adc
mov
enter
push
loope
or
push
sub
and
sub
pushf
repnz
fidiv
lods
push
(bad)
pop
pushf
add
aas
(bad)
outs
dec
jle
sbb
sbb
adc
aas
jno
mov
(bad)
(bad)
xchg
gs
shl
call
sar
sbb
xor
outs
mov
inc
push
inc
loope
adc
pusha
add
push
dec
inc
jbe
out
mov
test
jnp
dec
push
mov
pop
jl
enter
in
aam
xchg
or
hlt
xchg
pusha
adc
jg
push
xor
xor
add
ja
jns
fucom
fwait
xchg
nop
cs
jl
pop
add
ja
xchg
(bad)
repz
retf
push
cmps
jns
in
mov
call
jnp
xor
call
inc
(bad)
sbb
jae
sbb
je
jp
jl
dec
out
jno
mov
push
inc
mov
dec
sub
jns
popa
stos
nop
lock
stc
cli
pop
cmc
sahf
xor
jb
ffree
sar
sbb
mov
dec
leave
mov
and
cmps
arpl
lods
pusha
into
dec
mov
cmp
movs
(bad)
pop
push
push
jae
dec
mov
fcomi
xor
cmp
xchg
mov
adc
in
ret
cmps
mov
popf
jp
ss
imul
adc
hlt
scas
mov
and
inc
cmps
adc
mov
mov
inc
push
movs
aam
dec
dec
xchg
push
xchg
sar
mov
pop
push
cmps
lods
mov
in
mov
cmp
pop
cwde
retf
sub
leave
mov
sbb
pop
pop
out
dec
jge
pop
mov
dec
test
adc
mov
sub
mov
arpl
jp
dec
fisttp
pusha
sbb
scas
(bad)
jmp
xchg
fisub
hlt
sub
ss
sbb
enter
inc
lock
adc
es
(bad)
push
dec
das
movs
icebp
jge
push
and
pop
jl
jge
or
mov
pop
inc
fcomp
idiv
lahf
rcr
test
mov
not
sub
sbb
and
or
sbb
ins
add
dec
sub
sub
push
loope
les
xor
sub
ss
retf
neg
movs
and
jmp
int3
jno
not
ja
mov
jne
mov
sbb
jbe
lsl
repz
sahf
pop
sbb
int3
and
sti
xor
lahf
sub
and
cwde
stc
popf
loope
push
js
sar
(bad)
(bad)
movs
iret
and
mov
es
or
ret
sub
cli
shl
dec
bound
push
xor
ins
sbb
jo
inc
inc
loop
jae
adc
pop
ins
nop
sub
mov
push
aam
repz
(bad)
adc
add
int
stos
outs
add
mov
cli
mov
jne
mov
lods
push
fwait
push
repz
fcom
push
popa
mov
pop
and
mov
inc
xchg
mov
icebp
(bad)
mov
pop
fadd
lahf
lahf
jmp
dec
movs
ret
sub
push
stos
fwait
dec
pop
das
mov
push
pop
movs
cdq
mov
out
pop
push
in
sbb
jb
stc
push
ins
cmp
(bad)
cmps
clc
clc
push
xor
and
retf
inc
das
mov
dec
ret
mov
fcom
in
adc
sub
jne
xchg
pop
adc
jnp
(bad)
out
jmp
pop
rcl
sar
push
rcl
jl
mov
jle
xor
out
or
fcomi
or
cmp
xor
xchg
push
cmp
or
push
sbb
xchg
pop
mov
or
lea
or
mov
pop
sti
adc
sbb
cwde
xchg
test
fwait
pop
lock
(bad)
mov
jp
dec
in
ins
mov
into
aas
mov
mov
stos
mov
cdq
or
out
icebp
jle
push
lds
or
repnz
inc
cli
sahf
sub
and
test
ds
and
mov
adc
es
jge
or
pop
sub
retf
icebp
cmp
pop
mov
xor
dec
fwait
mov
loop
inc
add
lea
out
adc
add
hlt
mov
stos
ss
cld
enter
sbb
cmp
jb
pop
xor
mov
xor
mov
cdq
add
and
dec
and
xchg
lock
inc
repz
and
outs
and
shr
or
xchg
adc
mov
pop
loopne
aam
xchg
loope
arpl
jmp
xor
cmp
xor
imul
in
sahf
outs
iret
pcmpeqb
or
daa
lds
pop
fs
mov
mov
fiadd
setge
popf
jge
addr16
mov
mov
sar
mov
jmp
in
xchg
pop
jp
pusha
aad
out
movs
xchg
(bad)
pop
in
iret
jmp
or
sbb
jne
aam
outs
push
add
mov
aaa
xchg
xor
push
out
xchg
jmp
(bad)
call
repnz
js
xor
mov
out
push
adc
pop
jne
dec
test
jle
or
out
test
mov
imul
push
(bad)
cmp
popf
mov
pop
push
inc
xchg
loop
push
in
pop
jg
addr16
sbb
mov
movs
imul
mov
int3
jb
adc
cmp
dec
adc
inc
into
ret
push
xor
mov
mov
push
ins
or
and
popf
and
je
data16
iret
dec
aas
mov
movs
ret
xor
or
(bad)
dec
pushf
jge
mov
pop
sub
inc
aam
clc
add
and
into
mov
(bad)
dec
inc
push
lea
inc
(bad)
mov
aas
inc
rcr
data16
popf
(bad)
push
call
aad
inc
sub
fnsave
mov
inc
xlat
ret
sbb
shl
frndint
repnz
cwde
sbb
push
push
(bad)
jmp
movs
xor
sahf
push
movs
js
shr
pop
sub
aaa
movs
dec
aam
imul
jle
xchg
mov
dec
xchg
pop
mov
cmp
or
add
mov
push
inc
cmp
jno
out
scas
mov
scas
adc
int3
or
push
in
cmp
shr
add
ss
fsub
xchg
scas
into
retf
cmp
xchg
mov
sub
loop
repz
lea
add
inc
loopne
sub
ret
pop
sub
or
(bad)
pop
pop
pop
clc
lods
mov
in
movs
dec
fild
aaa
loope
dec
aas
outs
jbe
into
dec
pusha
mov
pop
je
mov
add
(bad)
popa
jae
int
pop
mov
out
outs
repnz
movs
icebp
inc
test
cmp
mov
lds
inc
adc
sbb
and
(bad)
cmp
popf
inc
iret
mov
and
in
sbb
pop
jbe
dec
jle
nop
add
shl
js
sar
(bad)
mov
add
jp
mov
in
adc
and
int3
or
and
and
pop
cwde
lahf
push
fdiv
rcl
mov
push
mov
xlat
call
mov
outs
gs
jbe
mov
pop
cwde
jle
jae
ins
ss
adc
data16
mov
sub
inc
push
and
jns
adc
push
xchg
fucomp
jb
mov
adc
dec
loope
mov
mov
bound
and
imul
mov
es
and
aam
fs
clc
jb
das
shr
xor
(bad)
rcl
es
pop
pop
xor
je
inc
sub
jg
push
sbb
push
popf
inc
out
ins
push
cwde
sub
shr
pop
mov
adc
mov
xor
into
push
and
fmul
int
rcr
jnp
xor
jno
(bad)
xchg
ins
cmp
repz
push
adc
jmp
dec
pop
push
hlt
push
adc
jnp
or
or
add
ficomp
sub
mov
mul
sbb
push
sbb
push
sbb
movs
stos
mov
cmp
shl
stc
mov
sub
mov
inc
sub
je
popf
test
mov
sar
push
mov
movs
mov
dec
neg
retf
vpermb
cmps
jae
(bad)
(bad)
jmp
and
mov
and
jge
sub
repz
inc
jmp
shl
popf
movs
sbb
call
sub
loopne
fdivr
sbb
cmp
outs
jnp
lods
addr16
push
or
dec
call
push
lea
adc
retf
xor
add
ret
xchg
call
fmul
aad
cmps
cmp
cmp
stc
out
mov
rol
xchg
inc
jp
pushf
loope
cs
jb
iret
jp
addr16
add
inc
bound
xor
push
addr16
stc
in
mov
aad
stos
int
lods
mov
mov
test
inc
int3
sbb
mov
adc
(bad)
frstor
jne
jbe
jo
xor
fs
ds
xchg
adc
shl
mov
repz
cwde
mov
inc
aaa
jge
icebp
cmps
sar
fcomp
retf
jns
push
push
mov
mov
mov
arpl
push
mov
inc
stos
and
lahf
jnp
cli
add
jo
outs
mov
loopne
test
out
xor
stc
mov
jge
dec
mov
push
ficomp
cmps
jb
adc
das
xchg
imul
imul
mov
cdq
cmp
loopne
pop
dec
xchg
mov
adc
pop
cwde
jp
lods
lea
fistp
int3
dec
test
loop
mov
jo
add
cmps
lods
xor
ins
fisub
push
(bad)
adc
add
fwait
aaa
pop
lock
or
gs
and
loop
cdq
mov
rol
push
xchg
int3
jbe
or
inc
aam
push
dec
sub
add
mov
out
jge
inc
ds
pusha
jns
pop
jns
or
pop
mov
xchg
scas
fs
retf
lahf
mov
neg
pop
retf
jmp
add
out
xlat
leave
and
push
cld
test
inc
inc
cmc
and
call
dec
xchg
out
mov
lods
scas
adc
xchg
add
dec
imul
add
call
xor
jmp
adc
pop
pop
leave
fdiv
cmc
xchg
bound
jbe
add
sbb
add
mov
mov
stos
cmp
adc
sbb
inc
adc
and
sub
push
push
std
stc
push
aam
adc
or
xchg
adc
ret
mov
add
pop
rol
sbb
jo
std
sub
retf
pop
leave
mov
dec
mov
rol
in
pandn
adc
das
pop
fst
inc
rol
popa
and
and
push
out
push
jae
fwait
sahf
and
repz
jns
and
pop
ror
or
or
sti
mov
fstp
fs
stos
(bad)
mov
inc
fst
jo
popf
mov
inc
fiadd
mov
xchg
pop
sti
mov
outs
or
ins
mov
sti
push
cmp
jg
add
(bad)
jmp
or
shl
cmps
xchg
(bad)
pop
jnp
inc
sbb
(bad)
mov
xchg
push
pop
push
push
jo
push
les
hlt
sahf
stos
or
repnz
clc
or
cs
mov
mov
add
fisttp
fmul
push
mov
(bad)
psubsb
jle
iret
rcr
nop
or
pop
mov
mov
(bad)
outs
and
iret
aas
or
lock
sbb
aam
(bad)
mov
lahf
sub
jg
imul
pop
nop
or
cmp
retf
mov
jns
mov
mov
call
pop
fld
cmp
dec
add
push
push
mov
pop
jecxz
push
lds
mov
add
and
cdq
rol
(bad)
push
je
mov
ja
or
push
mov
mov
cs
cmps
in
ins
(bad)
dec
xchg
sbb
fld
je
mov
push
mov
es
clc
std
adc
idiv
cld
ret
lea
fsubrp
popf
stos
and
jp
dec
cmp
test
add
cmp
xchg
lock
sahf
push
mul
test
retf
mov
cmp
stos
lahf
sbb
sar
test
dec
pop
xchg
ror
retf
pop
add
shl
test
cmp
jbe
inc
mov
pop
adc
pusha
repnz
sub
mov
das
adc
adc
cmp
pop
scas
mov
loop
fld
push
stos
inc
adc
add
cmp
pop
push
push
and
fist
enter
lahf
sub
mov
mov
cld
push
xchg
xchg
push
lds
ds
(bad)
(bad)
aam
arpl
fist
jae
rcl
and
xchg
ds
fwait
fwait
and
push
sub
mov
and
out
icebp
inc
xor
xchg
mov
sahf
and
mov
lea
and
jnp
mov
dec
scas
test
aas
jp
int3
stc
mov
push
(bad)
int
aad
fsub
adc
and
in
add
aad
jb
sbb
xchg
aam
add
div
(bad)
nop
das
pop
lds
pusha
in
movs
call
pop
push
mov
sub
cmp
mov
and
cmp
stos
in
mul
sbb
inc
das
mov
cmp
pop
movs
xchg
icebp
xchg
push
addr16
xchg
inc
xchg
push
and
cmp
xlat
(bad)
cmp
bound
xchg
push
inc
ins
fucomp
dec
xchg
test
jne
xchg
mov
dec
xchg
xchg
das
mov
in
sub
add
xchg
inc
ins
outs
fldcw
call
aaa
dec
cmp
xor
out
adc
sub
jne
out
and
call
dec
fisub
and
sbb
sbb
sub
popa
std
mov
adc
fidiv
into
or
es
xchg
xchg
int
or
dec
inc
out
rol
imul
sbb
dec
ret
lock
movs
xor
sbb
sahf
retf
jo
je
cmc
int
ja
pop
xlat
retf
aas
stos
adc
sar
dec
cwde
cmp
fld
sbb
push
sbb
ror
and
iret
adc
cwde
clc
mov
xchg
sub
dec
and
(bad)
xchg
in
dec
jb
inc
out
or
movs
outs
xchg
in
sub
and
mov
push
bound
xor
sbb
push
xor
push
cmps
cmp
aam
mov
xchg
aas
popf
lods
fsubp
ss
rcr
fsubr
or
(bad)
cmps
mov
xchg
dec
jbe
and
xor
(bad)
movs
in
xor
jae
mov
icebp
dec
lds
jmp
pop
jmp
lods
or
mov
mov
sbb
in
push
pop
popa
arpl
pop
jl
popf
aad
pushf
sub
sbb
mov
xor
dec
mov
add
push
mov
or
sar
out
xchg
fild
call
adc
mov
xor
test
cwde
mov
jmp
(bad)
sahf
pop
pop
adc
sub
repz
inc
xor
push
int3
xlat
inc
push
loop
push
dec
pop
sahf
call
pop
xor
les
je
loopne
adc
dec
mov
inc
mov
xor
gs
rol
xor
inc
mov
xor
in
shl
pop
push
or
push
mov
xchg
outs
popf
cmp
movs
push
das
jl
clc
addr16
hlt
mov
cmp
std
xor
jp
jp
fdiv
cmp
in
inc
push
inc
sahf
jmp
inc
fist
scas
inc
push
xchg
dec
ror
in
mov
or
inc
or
add
rcl
inc
dec
cld
push
adc
inc
fs
push
sbb
push
out
mov
jae
dec
mov
pop
(bad)
fidivr
sbb
fcomi
or
js
mov
xchg
mov
ret
push
sbb
jg
xor
lods
pushw
shr
out
or
repz
dec
mov
pop
cmp
pop
push
xchg
xchg
or
fild
out
fwait
bound
and
mov
xor
test
neg
cdq
sbb
cdq
mov
jb
jle
mov
push
retf
(bad)
jg
scas
div
jns
xor
dec
aad
bound
(bad)
retf
jmp
clc
ins
pop
push
jecxz
call
mul
fcmovne
aas
jbe
jl
stc
sub
(bad)
call
fisub
rol
xor
adc
(bad)
mov
mov
mov
test
mov
test
push
add
das
je
fcmovb
mov
stos
mov
mov
add
into
aad
fidiv
mov
mov
not
inc
and
js
sahf
out
ss
pop
(bad)
ins
movs
sbb
jmp
inc
test
sbb
mov
dec
xchg
out
mov
mov
cmc
sub
inc
shr
jns
movs
mov
cmp
sub
jecxz
fsub
iret
pop
aas
pop
jg
lahf
call
adc
rcl
ret
cdq
nop
mov
fimul
mov
gs
fs
data16
sbb
out
rcr
idiv
or
inc
xchg
pop
lahf
cmp
lods
aas
int
bound
outs
cmp
cwde
mov
aas
lahf
imul
pushw
test
jb
sahf
leave
or
add
dec
popf
mov
(bad)
mov
pop
loopne
push
jle
xchg
jae
xor
mov
and
aas
stos
fild
push
inc
mov
test
xor
cmp
cmp
jnp
call
dec
dec
pop
jecxz
cmp
adc
ja
ret
std
movs
sahf
pop
xlat
mov
xchg
mov
xchg
in
push
cld
(bad)
inc
in
inc
fwait
test
loope
push
outs
mov
dec
jnp
mov
jnp
fimul
push
jle
push
(bad)
nop
mov
pusha
aaa
add
loop
fnstcw
jmp
(bad)
(bad)
adc
xor
sub
icebp
popf
std
inc
and
jbe
xor
sahf
ins
add
lahf
out
pop
fcmovb
push
jno
add
sub
cmp
xchg
nop
fwait
and
js
mov
sbb
fwait
sar
add
jle
test
xor
jno
push
ins
xor
cmps
mov
dec
iret
jecxz
sub
pop
not
sbb
repz
sub
mov
push
(bad)
aad
push
outs
inc
add
call
jne
jae
sbb
sahf
(bad)
adc
cdq
mov
jge
ins
fistp
cmc
jle
inc
push
(bad)
(bad)
xor
daa
push
pop
ret
xchg
(bad)
sbb
push
(bad)
in
adc
push
data16
std
lds
pushf
stos
mov
dec
pop
mov
pushf
neg
mov
cmps
jns
or
mov
js
ret
sbb
jmp
movs
and
xor
sub
pop
xchg
cmp
pusha
xchg
movs
jp
sbb
xchg
xor
movs
mov
ins
cmp
mov
mov
sbb
mov
fst
xlat
inc
hlt
sahf
mov
aas
or
xchg
sub
inc
arpl
adc
mov
shr
fsub
xchg
pop
and
mov
mov
repnz
sbb
mov
dec
xor
mov
pop
pop
cmp
pop
jbe
inc
inc
jb
ficomp
mov
je
loopne
lods
sub
call
je
pop
jbe
movs
push
loope
xchg
add
jno
sbb
arpl
mov
(bad)
adc
aaa
cwde
stos
aam
xlat
cdq
arpl
pop
shl
xor
jbe
outs
push
lods
in
push
pop
ror
dec
in
aam
push
cwde
mov
xor
inc
in
inc
mov
xor
add
cmc
push
dec
pop
add
dec
pop
mov
aaa
clc
xor
enter
pop
dec
cli
mov
adc
xor
aam
int
xor
xor
out
imul
adc
sbb
mov
lds
jmp
jae
push
and
or
mov
xor
fdiv
and
cmps
cmp
mov
shl
and
aad
mov
pop
popa
ss
pop
xor
jne
xchg
xchg
jmp
das
std
inc
(bad)
cmp
mov
mov
repz
dec
mov
rcr
push
aaa
adc
inc
test
fld
fmul
xchg
out
mov
(bad)
push
xor
pop
es
pop
cmp
adc
xchg
sar
call
movs
sub
nop
xlat
clc
pop
or
rol
lea
pop
aaa
cmp
push
dec
and
scas
fadd
in
push
rcl
cmps
(bad)
pop
loop
loope
mov
retf
adc
paddw
mov
aas
pop
rol
cmp
les
jle
xchg
test
xchg
lods
je
xor
scas
sbb
pop
gs
jno
(bad)
(bad)
aas
sbb
or
push
out
sbb
sar
adc
and
jmp
mov
add
and
dec
push
xchg
sbb
stc
out
js
fimul
xchg
sub
xor
adc
daa
das
jp
lea
int
and
xchg
aas
inc
test
mov
(bad)
mov
popa
xor
cwde
or
push
pop
lods
mov
sbb
push
call
inc
push
imul
jge
fnstsw
adc
mov
sub
cmp
pop
cmp
cmp
movs
int
jb
adc
or
and
clc
mov
add
mov
mov
call
popa
in
out
jae
mov
push
outs
mov
adc
dec
xchg
in
and
test
dec
gs
das
movs
popa
inc
xchg
jnp
das
(bad)
xor
mov
cmp
mov
fsubr
fild
mov
mov
stos
in
add
iret
shl
retf
je
jmp
inc
out
adc
std
cld
pop
lea
inc
test
push
push
repz
mov
mov
std
js
adc
bound
bound
cs
and
stos
pop
fcmovnu
dec
and
push
inc
mov
dec
lock
mov
iret
movs
and
imul
push
shr
and
sub
ja
repz
call
push
daa
aad
cmp
into
test
add
rcr
pop
jns
sbb
dec
cmp
push
cmp
jne
and
inc
sub
aam
add
sahf
jecxz
dec
cs
xchg
pop
jle
ja
pop
push
retf
mov
test
shl
push
or
jle
sub
out
rcr
fld
pop
jb
gs
scas
adc
js
sbb
mov
pop
ins
lahf
inc
fadd
leave
stc
int
push
dec
xlat
mov
sar
loopne
fwait
pusha
fdiv
mov
xchg
out
ss
movs
in
std
jnp
rcr
and
cs
jbe
and
lods
jns
out
dec
scas
or
fisttp
adc
mov
cmp
(bad)
scas
xchg
inc
fs
cdq
ret
imul
add
mov
out
or
dec
add
nop
push
and
xchg
movs
les
ror
mov
mov
cmp
xchg
mov
std
push
jle
adc
pop
shl
imul
jb
jnp
pop
fisttp
loopne
popf
cmps
es
inc
enter
aas
inc
imul
stos
sub
add
fistp
jecxz
push
adc
adc
mov
xor
or
mov
dec
add
std
fimul
rol
adc
rcr
int3
mov
sti
mov
adc
add
(bad)
out
sbb
es
sub
add
retf
inc
pop
cwde
popa
xlat
add
xchg
cmp
dec
(bad)
sbb
jmp
inc
test
xchg
movs
shl
cmps
sub
cmp
jecxz
mov
or
and
int3
xchg
std
jge
call
call
cwde
outs
mov
scas
mov
xchg
or
push
shl
pop
mov
pusha
pop
fwait
aad
fsub
fs
cli
scas
retf
daa
call
icebp
mov
iret
lea
xor
pop
push
pop
xchg
or
les
add
ins
arpl
cmp
cmps
popf
es
fldenv
stos
imul
enter
sbb
xchg
mov
dec
jns
jmp
sub
in
push
adc
addr16
js
fld
shl
jmp
and
scas
imul
test
or
jecxz
bound
loop
(bad)
sub
jp
(bad)
in
inc
lock
test
push
lock
push
and
dec
pusha
jno
call
nop
mov
ffreep
mov
cld
call
cmp
sbb
mov
mov
dec
pushf
xor
ror
ins
jmp
add
bound
sub
push
lds
or
test
cld
or
pop
xor
ror
and
(bad)
out
test
popa
and
(bad)
or
mov
xor
sbb
ret
movs
cmc
mov
xor
loop
jp
lahf
xchg
cdq
rcl
lods
mov
ins
data16
retf
push
rol
(bad)
mov
push
adc
jb
xor
pop
sub
cs
sti
push
lock
inc
movs
loop
mov
sbb
cmp
adc
jae
xchg
adc
jo
sub
fdivr
shl
mov
pop
test
pop
leave
(bad)
adc
mov
aas
pop
fldenv
mov
push
push
sub
das
push
cmc
in
ret
lea
adc
jg
inc
das
imul
cmp
jbe
xchg
mov
add
mov
ss
mov
hlt
mov
lods
sar
(bad)
fst
sub
pop
jno
aam
mov
out
jmp
pusha
pop
int3
xchg
mov
inc
adc
and
xchg
pop
cmp
js
cmp
sar
cmp
push
je
jmp
loope
push
retf
lahf
(bad)
and
test
or
jnp
dec
shr
push
push
addr16
push
push
stos
ror
cmp
js
pop
sti
icebp
fwait
ins
jb
mov
mov
adc
leave
pop
aad
les
sbb
nop
push
sub
mov
mov
jno
addr16
aaa
ins
js
inc
scas
mov
jne
adc
lock
dec
push
pushf
mov
loope
inc
push
pushf
leave
inc
std
leave
rcl
sbb
and
outs
int
mov
jle
lods
jbe
pop
(bad)
movs
jae
stos
inc
aas
les
dec
sbb
push
imul
and
cmps
es
nop
out
xchg
lods
adc
dec
cwde
dec
aas
mov
adc
push
popf
outs
fistp
mov
aas
jns
mov
add
rcl
jge
mov
enter
mov
push
xchg
add
std
es
movs
repz
push
mov
or
jno
cmp
push
imul
cmp
lahf
(bad)
cmp
shl
sub
ins
inc
sub
or
or
es
xchg
in
movs
lock
nop
inc
xor
fwait
mov
jnp
or
or
sbb
mov
push
ret
lds
cmp
aam
jmp
xor
cmp
or
fnsave
jl
sub
push
out
mov
pop
pusha
movs
push
jo
hlt
mov
in
mov
(bad)
imul
jbe
mov
ja
jmp
mov
(bad)
sti
cs
das
imul
xchg
cmps
pushf
fld
and
pop
(bad)
cdq
clc
push
outs
sub
jnp
neg
sub
mov
mov
popa
aaa
lods
fisubr
and
cwde
mov
loopne
push
mov
adc
mov
mov
out
ss
stos
popf
push
daa
sbb
xchg
dec
sub
adc
mov
inc
xchg
add
fld
mov
out
adc
dec
int3
mov
loop
or
xchg
es
fld
add
mov
lock
aaa
inc
dec
in
int3
lds
adc
pop
adc
mul
aas
loop
(bad)
push
and
add
push
test
sbb
xchg
stc
lods
div
mov
leave
xchg
mov
lods
lahf
pop
addr16
out
fld
mov
fcom
push
push
hlt
jecxz
movs
add
xchg
fdiv
adc
(bad)
mov
neg
iret
loope
mov
dec
outs
pop
mov
xor
ret
lock
test
cmp
xchg
sub
mov
cmc
pop
mov
jnp
add
sub
(bad)
hlt
in
fcom
sub
aaa
cdq
jg
movs
pushf
call
mov
in
outs
cwde
push
jmp
adc
pop
pop
imul
popf
cmp
push
jecxz
aad
mov
rcl
jb
jbe
imul
ror
aad
aas
pop
add
sub
fld
ret
mov
rol
test
add
jecxz
inc
adc
ds
js
test
popa
cmp
or
or
xchg
mov
adc
or
and
or
inc
fxch
shl
int
cwde
mov
loope
sahf
jge
jno
xchg
ins
pop
sbb
push
sbb
sar
sbb
mov
movs
xchg
sbb
shl
outs
push
repnz
pop
cmp
fist
mov
push
jb
stc
out
cmps
lods
mov
jp
or
retf
repz
jmp
cdq
add
push
dec
sub
pushf
retf
retf
cmp
xlat
pop
in
and
sub
aam
inc
xchg
ss
lods
pop
cmps
rol
out
repz
daa
(bad)
stos
cdq
and
sbb
clc
jne
mov
cli
arpl
test
xchg
in
xchg
shr
ds
push
shl
arpl
pushf
call
inc
sub
xchg
add
fisttp
xchg
pop
adc
shl
add
inc
mov
aaa
jmp
pop
xor
retf
pusha
push
aad
lock
dec
in
xor
leave
cmp
pop
push
icebp
mov
mov
rcr
inc
push
or
push
shr
cmp
mov
sar
mov
es
xchg
leave
push
push
sub
jo
data16
leave
push
jnp
xchg
cld
mov
push
sub
loop
scas
jecxz
call
js
mov
stc
icebp
jnp
pop
add
sbb
lods
xor
out
mov
cwde
pop
pop
inc
add
xchg
mov
loop
aad
(bad)
arpl
dec
inc
xchg
ja
sbb
jns
pop
push
add
div
fdivr
adc
mov
ins
push
push
push
(bad)
pop
mov
fs
mov
sbb
jg
sub
imul
push
xchg
imul
adc
retf
and
mov
das
sbb
retf
xchg
cmp
call
fs
xchg
into
jmp
call
jbe
iret
sbb
push
out
cmp
(bad)
jb
mov
cmp
jl
int3
inc
aaa
mov
or
push
adc
or
test
(bad)
pop
jae
(bad)
fs
or
pusha
stos
jne
hlt
test
cld
lea
rcr
lods
fst
inc
adc
push
adc
in
jns
add
push
(bad)
mov
aam
popf
popa
dec
retf
jecxz
fisub
dec
add
mov
sub
mov
add
jecxz
retf
mov
imul
ja
push
xchg
scas
sub
daa
xchg
adc
and
sahf
push
and
pusha
mov
inc
mov
int3
cli
adc
xor
push
fdivr
xlat
je
add
cdq
loope
lds
aas
jns
dec
mov
inc
mov
inc
arpl
cmps
jp
dec
cmp
and
pop
(bad)
int
mov
scas
movs
lods
xchg
jnp
adc
xchg
icebp
mov
jp
xchg
stos
inc
aam
lahf
out
sahf
out
bound
mov
push
ja
jne
sbb
les
aam
rol
xchg
into
jmp
mov
sbb
cdq
jmp
adc
push
iret
gs
add
je
fwait
pop
and
fsub
cmp
xchg
ds
(bad)
xor
mov
(bad)
in
scas
jmp
addr16
inc
adc
fmul
mov
jecxz
dec
xchg
push
out
or
imul
(bad)
(bad)
mov
xchg
mov
into
fs
cmps
(bad)
jbe
mov
add
mov
inc
add
jp
jecxz
repz
pop
push
pop
cli
loope
xor
sub
cmp
jle
mov
dec
iret
(bad)
push
jecxz
outs
(bad)
call
mov
popf
retf
mov
daa
or
cwde
pop
ja
test
mov
fidiv
push
sahf
sub
test
pop
clc
dec
pop
gs
xor
jbe
xchg
jp
cdq
retf
pop
retf
mov
or
jmp
sub
out
pop
scas
and
into
(bad)
adc
inc
(bad)
das
mov
pop
and
outs
aam
out
mov
shl
gs
sti
mov
les
or
adc
fs
ins
fidiv
iret
test
test
pusha
lahf
xchg
sbb
in
rcr
movs
xchg
sub
adc
leave
pusha
test
mov
test
xchg
popa
outs
pop
sbb
in
push
adc
jecxz
out
shrd
fimul
lods
loopne
push
adc
rcr
push
and
push
ror
push
pop
popa
hlt
js
pop
pop
jbe
retf
mov
scas
fstp
add
(bad)
jecxz
aam
into
jnp
retf
scas
mov
jg
or
push
xor
aam
pop
lahf
xchg
sub
scas
inc
inc
test
js
add
pop
dec
es
js
mul
(bad)
ja
nop
sub
mov
(bad)
push
mov
js
(bad)
cmc
cld
mov
push
mov
movs
outs
xchg
lahf
mov
cld
mov
push
xor
mov
mov
lods
push
loope
mov
int
inc
push
(bad)
fbld
xor
xor
aaa
jle
push
rol
add
ret
retf
test
sbb
add
dec
lods
add
xchg
or
mov
pop
push
jmp
iret
cmp
xchg
loop
addr16
lahf
cmp
mul
adc
movs
out
and
in
mov
hlt
out
lods
cld
fwait
jbe
in
jne
xor
out
or
aad
jg
push
jl
inc
shr
daa
jne
and
and
rcr
cmp
xor
repnz
mov
mov
mov
daa
pop
dec
mov
sub
xor
mov
xor
sub
mov
push
cmp
leave
inc
mov
jmp
lahf
pop
lock
cmp
lahf
adc
lds
fild
and
popa
dec
xor
retf
or
outs
test
xchg
xor
add
inc
loopne
(bad)
jmp
sbb
outs
and
mov
inc
int
jp
xor
adc
aas
(bad)
fst
pop
scas
push
shl
adc
sbb
dec
ret
inc
xor
mov
(bad)
adc
jns
outs
lods
std
fadd
clc
mov
cli
shl
and
xchg
test
shl
sbb
mov
out
mov
mov
ss
addr16
dec
rol
jmp
test
leave
div
ins
adc
pop
mov
imul
cmp
in
test
shl
cmp
jg
int
dec
xor
dec
push
inc
push
inc
cmp
pushf
hlt
mov
add
cmp
pushf
leave
jno
dec
push
push
mov
loop
jno
and
pushf
sbb
lods
aas
loope
or
sub
cwde
ret
cmc
mov
sub
aad
jbe
add
aas
mov
fadd
sti
movs
mov
mov
cmps
mov
xor
mov
clc
pop
jae
iret
mov
mov
pusha
push
sub
mov
out
push
ins
and
dec
jb
mov
sub
add
mov
mov
pop
add
jns
adc
xchg
movs
lea
add
add
stos
lahf
sub
adc
shl
leave
mov
xchg
cmps
sbb
scas
call
std
or
pusha
cmp
aad
jmp
and
jg
pop
inc
cs
ins
sbb
daa
test
pop
xchg
fnstsw
js
add
(bad)
(bad)
or
sbb
pop
jl
sar
inc
retf
movs
push
ret
jecxz
(bad)
sti
add
fst
fsub
ja
in
jmp
jl
out
cmc
fwait
into
pop
dec
movs
adc
fistp
outs
mov
ror
pushf
mov
sbb
jne
inc
scas
cdq
fs
mov
(bad)
les
fist
repnz
jae
test
dec
test
sar
sti
ret
fbld
out
jp
mov
push
pop
jle
and
stos
push
test
mov
sbb
scas
mov
sbb
mov
ins
jl
out
xchg
sub
cmp
psubq
jmp
sti
xchg
mov
call
xchg
mov
mov
xchg
or
sahf
retf
jns
mov
das
repz
ds
dec
imul
add
out
pushf
mov
loopne
or
loopne
ss
pushf
mov
adc
cmp
mov
xlat
mov
push
dec
lahf
test
test
pop
xchg
cmp
out
jmp
mov
jno
inc
lahf
sbb
in
xor
and
imul
gs
retf
jmp
in
and
add
jmp
or
inc
mov
xchg
hlt
(bad)
mov
jns
add
repz
xchg
pop
push
out
jmp
mov
pop
jecxz
adc
cs
movs
cwde
push
jl
fwait
out
dec
mov
cmp
into
rcr
cmps
sub
leave
je
cmp
test
adc
div
iret
mov
ds
mov
push
mov
mov
fidivr
fmul
addr16
pop
mov
jb
in
fidiv
es
cmp
pushf
fdivr
test
nop
out
push
out
retf
cmps
jl
mov
mov
mov
ret
cmp
add
stos
pusha
jns
xor
es
sbb
mov
arpl
dec
imul
or
les
sbb
jmp
loop
ret
inc
fist
fcom
adc
xchg
fnsave
push
adc
add
jnp
sub
int3
xchg
add
shl
mov
pop
frstor
pop
psubb
cmp
mov
xor
mov
mov
test
cmp
pop
mov
aaa
sub
mov
adc
jg
aam
into
mov
and
dec
mov
xchg
jecxz
push
js
movs
ins
mov
popa
shr
sub
xor
push
push
sar
push
push
xchg
ficom
push
lea
push
lahf
pop
scas
lods
jno
sub
adc
(bad)
ss
and
jge
repz
test
gs
ds
data16
test
(bad)
mov
scas
inc
cmps
ret
ret
cli
lahf
sbb
inc
ja
pop
mov
into
popf
pop
aad
mov
in
ds
jmp
push
push
xor
pop
out
mov
mov
out
loopne
fimul
cmp
jns
es
ror
dec
jae
sbb
mov
sub
ret
xchg
mov
mov
mov
push
dec
fwait
jl
ror
test
mov
cmc
or
push
add
out
or
jb
lock
push
lahf
cmp
jbe
mov
scas
inc
sub
popf
xor
fldenv
inc
or
sbb
mov
jl
clc
mov
push
jns
xchg
retf
jne
xlat
cmps
test
pop
push
inc
cmp
loope
push
test
sbb
mov
dec
adc
leave
bound
stos
mov
fwait
stc
jg
fs
cli
sub
pop
lahf
xor
mov
loop
push
popf
xchg
jmp
sbb
lea
xor
inc
jge
pushf
dec
leave
sub
test
xor
bnd
imul
xlat
pop
sbb
adc
in
xchg
js
sub
jmp
stc
(bad)
(bad)
mov
(bad)
xchg
sahf
cmp
mov
add
mov
or
sub
jo
or
loope
clc
or
add
jmp
int3
popa
mov
mov
push
retf
push
test
or
mov
or
stos
adc
cmp
icebp
jmp
xchg
or
add
arpl
mov
popa
(bad)
sub
(bad)
or
push
je
pusha
mov
lea
add
xor
mov
pop
dec
sbb
int3
pop
mov
aam
ss
push
in
es
loope
je
daa
loope
test
sub
cmp
cli
lahf
retf
fild
jmp
stos
jb
cli
mov
dec
xchg
jno
test
(bad)
js
mov
rcl
inc
cmp
push
jns
ja
lods
sti
and
push
mov
and
xchg
mov
inc
lods
pop
enter
or
fistp
jmp
mul
inc
mov
clc
(bad)
int3
cmps
push
add
mov
lds
fstp
mov
push
jno
outs
xchg
leave
stos
cmps
pop
int
xor
mov
movs
sbb
cwde
adc
jnp
inc
mov
push
fadd
dec
sar
sti
test
cmc
aam
add
push
push
xor
sub
loope
pop
pop
sbb
sub
push
pop
mov
fcom
in
(bad)
mov
or
xor
int
mov
xchg
dec
pop
xor
cld
std
call
je
jae
pop
les
sti
and
dec
sbb
dec
hlt
bound
push
adc
bound
lock
pop
fnstsw
jnp
retf
lods
xchg
(bad)
fsubr
mov
add
leave
inc
sar
add
aaa
dec
enter
lea
add
sbb
cmc
xlat
push
in
pop
inc
in
in
sub
add
cmp
xor
or
sub
sbb
icebp
or
xor
xchg
dec
loope
cld
imul
sub
outs
sub
clc
lods
pop
or
idiv
sbb
or
pop
mov
push
bnd
ja
das
not
xor
mov
mov
ins
lds
sbb
sub
push
or
iret
cmp
retf
xchg
jp
mov
push
mov
sbb
sub
inc
dec
xchg
ins
sbb
mov
mov
mov
mov
mov
ins
pusha
ja
dec
push
or
aas
add
mov
das
xor
in
scas
pop
arpl
pop
mov
(bad)
mov
or
jmp
mov
lods
or
sbb
mov
sbb
pop
push
push
dec
fwait
and
addr16
ins
hlt
xor
cmc
fdiv
xchg
mov
test
je
mov
mov
add
bound
call
mov
mov
sub
and
ja
gs
jns
xor
in
sbb
mov
mov
mov
cmps
gs
add
call
cmp
jl
repz
xchg
push
xchg
sbb
das
mov
fisubr
aaa
or
jge
mov
out
inc
jp
mov
aad
pop
in
je
sbb
push
mov
loope
fiadd
mov
pop
dec
mov
mov
push
lea
pop
dec
inc
pushf
and
pusha
out
dec
das
pop
inc
push
shl
inc
push
xchg
mov
out
xor
cmp
jnp
sbb
xor
movs
mov
adc
(bad)
hlt
or
adc
mov
pop
and
hlt
ret
push
and
not
mov
jne
into
sub
out
cmp
fadd
sub
rcr
inc
jbe
int3
ror
add
inc
aad
mov
add
out
or
jnp
cmp
jg
xchg
pop
or
fstp
lahf
ins
das
add
dec
xchg
retf
(bad)
mov
sub
jecxz
pop
mov
adc
lods
inc
pop
stos
ror
jg
es
sahf
ffree
clts
f2xm1
mov
fsub
out
data16
stc
cmp
loope
(bad)
std
xchg
cmc
xor
fdivr
ret
cmc
sub
cli
es
add
arpl
xor
in
loop
mov
dec
pop
cmp
xchg
add
rcr
gs
adc
pop
aaa
clc
pop
xor
fwait
gs
test
jl
sbb
sbb
jecxz
mov
or
cmp
mov
inc
leave
movs
sbb
sbb
mov
pusha
std
push
lods
jbe
adc
shr
stos
cmp
test
gs
adc
add
dec
sbb
mov
(bad)
leave
add
mov
leave
jg
mov
loopne
popa
mov
ins
pop
scas
mov
stos
adc
sti
mov
fisttp
adc
lods
inc
push
fistp
xchg
xchg
imul
xor
jne
adc
dec
lea
popa
call
rol
and
xchg
popf
imul
iret
shl
lods
ficomp
xor
(bad)
in
push
add
sub
ins
fnstcw
popa
xlat
xor
loope
push
push
retf
adc
mov
call
xchg
pop
int3
sub
nop
mov
cmp
adc
inc
push
jne
lods
mov
push
mov
test
sub
cdq
xor
push
fs
sbb
popf
or
pop
adc
sub
pop
sbb
push
jg
pop
jo
fistp
in
popf
in
jns
stc
and
pop
mov
xchg
sub
shl
xchg
enter
hlt
int
les
scas
adc
call
iret
mov
das
cmp
mov
pop
popf
fistp
das
mov
jp
jb
mov
(bad)
imul
cmps
out
fidivr
dec
push
out
test
movs
xchg
jbe
add
hlt
js
jl
or
imul
aas
sbb
les
push
mov
dec
dec
ins
mov
in
and
mov
push
mov
rcl
or
jbe
mov
and
hlt
push
in
mov
cmp
xor
in
push
sbb
dec
rcr
sub
shl
adc
mov
loope
pop
cmp
je
mov
lods
cmps
aaa
xor
stos
jno
and
ins
xchg
adc
add
cld
not
in
sub
ret
xlat
mov
adc
(bad)
shl
call
add
sub
inc
cmp
and
mov
cdq
push
and
movs
das
dec
mov
push
mov
cli
loop
dec
jmp
(bad)
mov
mov
cmps
sub
pop
test
add
(bad)
aas
add
jnp
dec
test
mov
pop
adc
retf
xor
inc
push
jae
inc
aad
test
bound
cmp
sbb
push
arpl
jge
inc
bound
xchg
inc
mov
retf
popa
je
ss
mov
pushf
push
jmp
xor
fnstsw
sbb
mov
(bad)
lock
dec
jp
jmp
jnp
cmps
pop
push
frndint
out
gs
mov
and
and
mul
cmp
dec
dec
mov
mov
popf
das
cmp
or
js
in
clc
pop
adc
cmps
inc
data16
and
mov
(bad)
stc
cs
loop
cmp
mov
lods
adc
sub
movs
xor
out
pusha
sub
dec
aam
add
inc
or
pop
sbb
ins
lahf
and
aaa
ror
xchg
sbb
jecxz
add
add
daa
ins
mov
inc
(bad)
addr16
and
sub
idiv
and
cmp
push
imul
mov
jnp
inc
push
inc
dec
(bad)
dec
stos
jecxz
xchg
sub
sub
mov
aam
cmps
fiadd
stos
repz
arpl
mov
dec
cs
cmps
fiadd
call
xor
sbb
mov
push
mov
mov
sbb
jnp
call
inc
mov
xor
dec
dec
and
arpl
or
fmul
fstp
leave
mov
jmp
jp
retf
jbe
(bad)
sub
jns
retf
out
fwait
lahf
sub
or
in
pop
in
fisub
dec
mov
and
jge
add
ret
cs
aaa
cmp
add
inc
(bad)
add
sub
inc
pop
mov
pop
in
out
fisttp
sti
pushf
ja
mov
retf
aaa
loope
daa
inc
mul
xchg
mov
dec
bts
es
pop
addr16
fwait
scas
pop
shl
jmp
(bad)
cmps
out
daa
inc
mov
xchg
fidiv
in
jl
inc
jg
cwde
ret
mov
mov
jmp
aaa
adc
mov
push
inc
movups
mov
pop
mov
mov
dec
retf
imul
and
pop
in
loopne
sub
adc
or
or
ret
pop
mov
mov
dec
mov
rol
add
retf
fild
mov
cwde
das
jl
ror
or
lods
sbb
retf
xor
std
shl
xchg
ins
ficom
push
push
mov
(bad)
stc
adc
ins
mov
call
dec
jnp
mov
add
jmp
aad
out
sbb
stos
add
retf
adc
add
mov
ja
idiv
mov
ss
lahf
and
scas
loope
stos
dec
xlat
sub
out
fst
or
repz
or
cmp
lock
push
ret
inc
adc
mov
stos
test
loop
std
mov
cld
cmp
call
mov
into
movups
jl
and
and
mov
pop
xchg
scas
push
pop
add
inc
inc
mov
xor
rol
inc
daa
das
lods
jmp
sub
lds
test
inc
adc
imul
pop
dec
jmp
sbb
pop
rsm
jecxz
fidiv
ffree
data16
jo
das
mov
fnsave
xchg
daa
xor
into
aas
push
ins
sbb
push
stos
push
jl
pop
xor
push
mov
add
lods
pop
ret
pop
or
test
rol
loope
dec
sahf
leave
and
in
ja
adc
sub
pushf
outs
fdiv
and
rcl
inc
or
push
mov
jmp
dec
lods
js
(bad)
mov
and
push
add
pop
lods
xlat
int3
dec
mov
pop
and
push
mov
sbb
mov
pop
pushf
rcl
mov
jl
mov
xor
cmp
retf
pop
xchg
sbb
sbb
lock
clc
mov
sar
jns
sub
aaa
aad
mov
pop
in
in
mov
mov
les
push
test
cmps
int
nop
mov
leave
inc
ret
lods
mov
scas
add
loop
mov
pop
inc
daa
mov
or
repz
data16
mov
lahf
cmps
repz
mov
int
mov
mov
adc
and
div
femms
jnp
and
movs
sub
inc
push
arpl
mov
dec
clc
mov
fptan
test
sbb
mov
pop
out
xchg
out
ror
repnz
adc
test
test
aad
xor
in
mov
push
scas
clc
push
or
or
sub
push
adc
les
jno
sbb
aam
cmc
mov
cmp
lahf
cmp
jmp
jo
clc
ins
in
adc
mov
int3
(bad)
movs
ret
xchg
in
das
mov
add
mov
in
add
add
push
fisub
iret
(bad)
mov
loope
or
fcomi
push
outs
mov
push
mov
rol
cmp
dec
jne
pop
jb
xor
out
js
dec
push
add
(bad)
jmp
in
shl
outs
das
out
ins
or
in
or
pushf
mov
iret
lock
mov
dec
adc
sbb
les
aad
int3
xchg
pop
mov
jbe
in
shl
xor
stos
dec
les
xor
(bad)
neg
push
pusha
push
jmp
mov
jl
push
push
aaa
sti
xchg
add
sub
les
pop
xor
cmp
pop
gs
jo
es
daa
jb
cmp
push
rol
(bad)
lods
push
jne
adc
lahf
imul
aad
pop
dec
int3
lea
stc
sbb
dec
rol
ret
enter
pushf
jp
jmp
cmps
out
(bad)
sub
mov
jbe
lods
fsub
jne
mov
and
les
ret
cdq
push
ret
sbb
mov
add
pushf
push
adc
stos
xchg
bnd
pop
in
(bad)
xor
cmps
jg
mov
cmp
dec
enter
inc
push
lods
rcl
pusha
popf
mov
jns
int
push
or
jno
cmps
xor
aaa
arpl
xor
std
jecxz
pop
gs
jmp
cs
js
stos
push
xchg
dec
(bad)
sbb
shr
arpl
cmp
push
add
cli
loope
sbb
(bad)
fisub
or
sub
sbb
sar
or
sub
jne
popf
adc
mov
popa
xor
test
not
add
rcl
std
add
mov
ja
mov
sbb
icebp
mov
xchg
mov
cdq
cmps
dec
inc
mov
ret
jp
pop
jl
stc
mov
push
push
fistp
stos
in
cvttps2pi
push
sbb
dec
jno
sub
int
cmp
xchg
mov
imul
out
call
call
fwait
icebp
dec
push
adc
fcomp
or
sub
inc
pop
jnp
sbb
xchg
(bad)
pusha
sub
int
shl
imul
cmp
(bad)
mov
out
sbb
push
adc
sbb
xor
cmc
add
jno
add
clc
add
xor
(bad)
push
adc
cmp
sbb
sahf
stos
mov
in
mov
add
daa
push
iret
mov
cmps
adc
cdq
shl
push
push
pop
xchg
adc
sahf
retf
xchg
mov
mov
xchg
xlat
push
je
js
xchg
in
(bad)
clc
or
inc
(bad)
sti
mov
sub
add
bound
mov
movs
int
pop
bound
loopne
movs
pop
push
jb
cs
push
mov
and
xchg
int3
(bad)
retf
jo
arpl
stos
cli
adc
gs
cmps
xor
push
cwde
pop
dec
cdq
xor
popf
jae
scas
sub
lds
xor
loope
and
icebp
cmp
ret
scas
sbb
aas
jge
inc
cwde
inc
jge
cli
mov
aaa
mov
or
inc
adc
fld
mov
jmp
xor
add
mov
inc
adc
cmp
scas
adc
stos
mov
arpl
call
pop
sahf
mov
std
dec
les
inc
xor
stos
push
out
adc
ja
fcomp
dec
mov
cmp
dec
imul
mov
sbb
xchg
mov
je
pop
adc
ds
mov
xchg
xchg
es
sub
cmp
call
adc
js
jnp
xor
mov
adc
daa
push
xor
adc
call
or
and
in
and
ss
sub
pop
sbb
call
stc
push
and
pop
in
sub
sti
mov
pop
xchg
push
sub
mov
daa
dec
push
call
add
(bad)
es
sub
add
inc
jmp
pop
cmp
nop
test
movs
rcr
push
xchg
xchg
pop
dec
jge
out
lods
cmps
in
push
inc
imul
scas
hlt
push
adc
adc
xlat
mov
mov
push
inc
pop
fist
out
sti
(bad)
mov
add
mov
icebp
js
xor
add
xor
js
xchg
mov
(bad)
lods
mov
inc
movs
cmp
in
int3
inc
stos
retf
mov
movs
les
or
dec
fwait
mov
cmp
imul
inc
mov
inc
mov
or
popf
jecxz
and
xor
mov
jne
in
inc
mov
jge
cdq
mov
pop
into
jo
or
cmc
call
jmp
stos
inc
nop
rcl
cmc
or
sbb
mov
xchg
adc
and
or
sub
ror
mov
adc
stc
ins
(bad)
mov
push
(bad)
inc
mov
push
(bad)
and
xor
sbb
retf
inc
dec
wrmsr
inc
inc
js
pop
int3
repnz
int3
or
aas
int
inc
sti
(bad)
daa
lahf
add
cmps
aad
xor
popf
sbb
(bad)
push
ficom
ret
mov
dec
dec
in
lahf
inc
xor
cli
xchg
outs
add
in
std
div
test
mov
mov
aas
add
sbb
lea
mul
jecxz
mov
mov
sub
mov
stc
push
add
sub
jne
mov
dec
push
xor
mov
add
push
jl
mov
cmc
mov
xchg
lea
in
xchg
cmp
jecxz
jmp
add
cmp
push
(bad)
mov
loopne
push
pop
xchg
imul
das
(bad)
sti
test
or
pop
daa
jle
push
ror
cmp
cmp
movs
int
(bad)
cmp
mov
addr16
mov
fadd
adc
imul
lock
mov
inc
cmp
cmp
jno
pop
mov
mov
out
push
mov
jb
mov
outs
xlat
fmul
adc
stc
sbb
lods
pop
jb
loope
xchg
les
cmp
std
and
xor
gs
jecxz
stos
sub
or
sbb
loope
pop
cmp
fs
adc
ror
cmp
adc
mov
inc
dec
mov
in
fwait
popa
push
int3
scas
and
out
add
cmps
stos
movs
jp
pushf
fcomip
push
mov
ds
jmp
jg
adc
sbb
retf
sbb
xor
push
js
or
xlat
sub
jno
outs
and
xchg
xchg
xor
xchg
xor
mov
arpl
mov
add
adc
xlat
pop
aam
and
mov
cmp
js
xchg
jmp
sub
outs
nop
pop
inc
pop
(bad)
in
push
outs
sbb
mov
test
bound
xchg
loope
cmps
fsubrp
not
jmp
lock
push
jbe
je
jnp
cld
push
xor
add
pushf
std
jno
ins
or
lods
and
xchg
dec
data16
fcom
jg
fimul
xchg
ins
test
sub
pop
add
cmp
cmps
jmp
pop
cwde
sysenter
adc
call
popf
inc
add
pop
sub
pushf
(bad)
iret
sbb
cmp
jmp
jbe
jns
sbb
mov
xor
dec
mul
outs
mov
mov
inc
not
mov
sbb
enter
bnd
mov
inc
int3
cdq
js
xchg
xchg
leave
scas
lahf
sub
(bad)
mov
outs
pop
or
mov
aaa
dec
les
jmp
leave
into
les
mov
mov
inc
pop
cmp
popf
call
inc
mov
sbb
add
xchg
dec
sbb
inc
ret
and
jmp
ja
mov
cmps
lahf
add
in
mov
je
mov
loopne
fisttp
jbe
(bad)
mov
(bad)
mov
dec
push
jle
frstor
out
jno
fisttp
mov
inc
cmc
mov
mov
lea
cmp
dec
shl
int
pusha
lea
jb
popa
es
mov
enter
cwde
sub
aad
xor
cdq
adc
loopne
out
jecxz
adc
call
xor
adc
cmp
or
dec
xchg
push
movs
pop
dec
mov
xchg
mov
outs
out
cmp
push
in
ja
and
lahf
xor
sti
dec
sub
or
cld
cmp
aad
rol
iret
rol
sub
icebp
std
xchg
in
dec
daa
xchg
mov
dec
dec
je
inc
in
adc
fs
adc
xchg
lock
rol
xchg
jecxz
inc
inc
lods
jecxz
xchg
xchg
sbb
or
fidiv
jecxz
add
(bad)
jl
(bad)
shl
dec
mov
and
push
push
jae
aaa
pop
xchg
add
mov
pop
or
ins
push
or
sbb
cmps
test
adc
inc
or
jg
cmps
adc
cld
loopne
xchg
retf
or
or
and
loop
lods
retf
adc
mov
movs
or
sbb
xlat
mov
sub
pop
sub
dec
mov
not
jno
inc
call
push
pusha
scas
aas
(bad)
or
or
xchg
icebp
cwde
sub
lahf
nop
xchg
pushf
pop
mov
imul
cmp
outs
into
push
ret
retf
push
jnp
sti
lods
int
push
cld
out
cdq
push
or
in
retf
movs
xchg
rcl
pop
cmp
pop
push
sbb
ret
dec
xchg
jg
and
repz
xlat
jle
icebp
and
stos
mov
mov
stc
(bad)
shr
push
cwde
jmp
cdq
cld
xor
jbe
je
mov
push
or
cmps
ins
and
cmp
pop
cmps
fldcw
lock
daa
inc
in
das
xchg
scas
sub
sbb
jbe
clc
into
mov
cmps
enter
mov
sub
xchg
mov
adc
cmps
loopne
adc
cwde
sti
call
es
add
jg
and
xor
cmp
xchg
imul
sub
mov
jmp
fucom
and
pop
cmp
mov
adc
aam
addr16
stc
adc
movs
and
aam
and
sbb
or
outs
cli
mov
aas
movs
cmp
ss
jb
xchg
jns
into
lock
fs
inc
adc
push
cmp
mov
ins
pop
and
ss
jp
ret
icebp
mov
sbb
xchg
daa
jle
sbb
sbb
lahf
jo
int
add
adc
push
ja
mov
dec
sub
or
leave
jb
mov
sti
add
xchg
movs
sub
jecxz
dec
push
xchg
into
into
das
mov
loope
ins
cmp
pop
loopne
inc
inc
pop
sbb
cmp
pop
inc
(bad)
push
cmovns
cmps
push
sahf
lahf
xor
stos
pop
fwait
out
sbb
push
jl
lods
sub
dec
jne
fs
cwde
iret
lds
cmps
xor
mov
mov
adc
movs
in
xor
fcmovnbe
inc
call
dec
nop
pop
sbb
sbb
and
cmp
rcr
in
sub
xor
retf
mov
jle
mov
mov
retf
(bad)
repnz
out
in
xor
ret
inc
out
test
repz
inc
pop
xchg
dec
cmp
test
or
sub
mov
popf
jne
xchg
icebp
mov
mov
je
adc
add
mov
push
inc
test
les
dec
pop
std
sbb
stc
movs
push
aaa
adc
fstp
aam
push
cmp
out
loope
jmp
test
cwde
(bad)
and
sbb
daa
in
xchg
mov
push
int3
in
in
push
sbb
test
das
mov
mov
sub
sub
ds
add
ficomp
inc
fist
sbb
icebp
xor
cmp
mov
mov
xor
sbb
jg
gs
imul
push
iret
pushf
mov
iret
shl
mov
add
aaa
lods
fnstenv
fisttp
mov
(bad)
ja
pop
adc
lds
in
xchg
shr
sar
push
popf
cmp
mov
pop
iret
into
xchg
xor
popf
push
lods
outs
cmp
or
shr
add
mov
mov
pushf
scas
repz
pusha
or
jns
jmp
(bad)
(bad)
sub
out
popf
fdiv
setle
add
inc
pop
inc
mov
(bad)
jno
ins
js
push
jae
xor
cmps
fnstsw
outs
ret
and
add
jo
loope
mov
fstp
dec
std
inc
dec
and
arpl
push
fdiv
out
paddq
lahf
cmovnp
into
push
pop
retf
cld
aas
mov
int
sar
cld
daa
rol
dec
lahf
mov
movs
(bad)
and
mov
out
mov
mov
add
push
inc
das
shr
das
ret
call
or
push
mov
push
(bad)
mov
xchg
xchg
std
xchg
mov
add
fist
lahf
pushf
in
retf
popa
fiadd
nop
es
fild
je
mov
arpl
mov
clc
mov
add
stos
or
call
lock
mov
mov
mov
cmps
scas
clc
sub
repnz
xchg
sbb
push
push
xor
mov
movs
pop
in
sub
push
pop
push
icebp
add
cmps
cs
call
push
ds
push
and
mov
add
jecxz
das
adc
adc
mov
(bad)
ds
or
mov
pop
popa
sub
inc
add
test
(bad)
(bad)
jmp
pavgb
jno
jp
sub
in
push
jecxz
ret
mov
pop
movs
cli
pop
pop
rcr
push
imul
je
push
add
jl
xor
lds
sti
popa
add
and
shl
in
fwait
loopne
pop
repz
sub
cmp
sbb
dec
in
sbb
xchg
xor
imul
xor
pop
pop
jnp
cmp
cmp
sbb
sub
inc
(bad)
pop
lock
xor
xchg
sbb
sar
mov
test
mul
cmc
jecxz
jns
(bad)
ss
out
cmp
ja
mul
mov
push
sub
xor
lea
mov
xor
mov
sysret
jbe
out
out
push
mov
add
ins
sahf
in
scas
adc
push
loopne
mov
mov
add
adc
outs
mov
mov
push
shl
into
outs
sub
sub
and
add
add
out
mov
cli
fisttp
aad
rcr
daa
mov
sub
sahf
pop
push
retf
adc
(bad)
fisttp
push
jns
push
mov
and
daa
les
sub
(bad)
pop
sahf
push
mov
lahf
dec
or
daa
iret
fld
test
cmps
push
stos
int3
sub
ficomp
mov
cs
loopne
ss
cmp
jae
(bad)
into
adc
xor
sub
ss
aam
cs
xchg
mov
mov
in
dec
sub
xchg
cli
test
imul
shl
aad
or
sub
stc
movs
lods
push
fidivr
jle
(bad)
jle
sti
popf
shl
(bad)
in
mov
iret
nop
dec
sub
dec
adc
mov
cmp
fst
out
sbb
pop
dec
sub
mov
xchg
inc
mov
clc
and
jecxz
das
dec
sbb
cmp
movs
xchg
pop
js
sbb
jae
adc
cmp
out
lea
pop
adc
mov
jb
mov
clc
pop
cmp
ins
test
dec
cli
mov
arpl
adc
jmp
cmp
inc
and
adc
sbb
mov
jmp
test
outs
(bad)
sub
pop
aas
ss
dec
pop
push
(bad)
jb
sub
mov
push
fnstenv
adc
xchg
fldenv
(bad)
cmp
adc
(bad)
imul
pop
ins
enter
and
xchg
mov
pop
pushf
cmp
jp
scas
xchg
xor
mov
std
dec
scas
push
loopne
lock
aam
sti
jmp
adc
adc
push
sbb
xor
ins
mov
sub
pop
dec
scas
inc
ds
packssdw
mov
xchg
aad
clc
pop
sbb
ficomp
cwde
ret
xlat
mov
adc
adc
push
dec
shl
(bad)
push
pushf
xchg
xchg
shl
xor
sub
outs
add
repz
mov
inc
sub
mov
bound
in
fs
adc
aas
adc
in
aaa
add
data16
stos
pop
dec
retf
aad
mov
sti
rcl
xchg
hlt
dec
js
daa
inc
cmp
icebp
push
ins
dec
lods
enter
hlt
jecxz
push
or
movs
sahf
call
ins
movs
and
xor
xchg
js
xor
test
adc
adc
push
icebp
sbb
add
scas
inc
test
mov
in
aas
mov
loopne
fwait
test
xchg
mul
cmp
and
test
in
push
inc
pop
test
in
push
aam
push
jg
push
lods
mov
cmp
push
sbb
rol
mov
xor
jo
xlat
xchg
fidivr
fist
fwait
push
sti
mov
dec
adc
or
cmps
and
ins
in
ror
mov
mov
mov
xchg
pop
adc
das
add
cmp
mov
jae
and
popf
es
xchg
xchg
test
bound
rcl
daa
test
or
or
cmp
xchg
cmp
shl
jmp
jnp
(bad)
sti
stos
mov
mov
fst
stc
xchg
mov
add
enter
shr
ds
jp
xchg
mov
or
jl
in
mov
je
inc
cwde
jl
sti
sbb
and
push
jl
cmps
repz
sar
pop
push
ss
push
icebp
inc
dec
adc
shl
repnz
jns
xor
and
std
lea
cld
push
xor
test
and
out
adc
ins
push
les
or
push
cs
inc
or
push
jmp
and
jp
jno
sbb
jne
add
(bad)
cmp
stos
pushf
fstp
pop
pop
pop
mov
icebp
ds
pop
mov
popf
jno
in
js
shr
dec
mov
xchg
pop
fisub
add
xchg
mul
lds
jg
in
xor
daa
adc
cmp
lahf
mov
xchg
fiadd
sub
xchg
pushf
out
jge
cmp
fwait
or
cmp
cdq
enter
fwait
push
or
pop
stos
aas
das
sub
adc
jmp
mov
pop
add
shl
test
add
imul
jge
enter
ins
jmp
fisub
mov
hlt
(bad)
fild
jg
and
scas
loop
adc
mov
(bad)
popf
add
sbb
(bad)
cmp
sub
aam
hlt
adc
shl
movs
outs
cmps
test
cmc
adc
(bad)
cli
bound
xchg
xchg
jmp
or
sub
mov
ins
das
push
and
jp
push
jmp
scas
repnz
loope
sahf
mov
inc
inc
jns
sbb
in
sbb
sahf
push
shl
(bad)
popa
push
mov
jnp
xchg
(bad)
mov
mov
jmp
out
fwait
fs
xchg
stos
(bad)
int3
jp
add
adc
dec
ret
sbb
push
push
ins
addr16
sbb
ins
push
pop
sbb
loop
imul
add
mov
(bad)
js
or
int3
daa
(bad)
lea
jmp
cmps
xchg
add
dec
mov
xor
nop
xchg
aad
mov
aad
xor
mov
and
jecxz
ss
sbb
and
fdivr
(bad)
js
mov
xchg
xchg
jecxz
addr16
xor
imul
dec
xchg
pop
pop
scas
call
call
xlat
dec
and
fild
fild
inc
dec
jns
clc
pop
and
jmp
test
sti
js
inc
adc
stc
and
clc
test
cmps
and
stc
adc
loop
dec
ins
pusha
adc
pop
adc
adc
cmp
frstor
pop
loop
out
test
inc
mov
std
sub
sbb
pmaxsw
ret
mov
mov
imul
pop
sub
sbb
adc
or
jmp
inc
aaa
adc
cld
adc
and
retf
and
xor
sbb
pop
xchg
out
mov
movs
sar
sbb
jae
mov
jo
nop
fld
daa
clc
add
xchg
aad
les
cmp
pop
sbb
mov
lds
daa
jmp
mov
jl
push
adc
dec
add
outs
ss
rcr
adc
mov
int
adc
icebp
mov
int
pop
push
push
outs
sbb
sbb
mov
push
jb
or
jnp
out
inc
lahf
inc
jnp
sar
push
fmul
push
inc
mov
sbb
div
das
or
shl
pop
int3
or
imul
xchg
ins
dec
out
mov
mov
clc
jg
jecxz
cmp
jge
adc
test
inc
mov
fisttp
inc
(bad)
loope
mov
fldenv
aad
out
outs
mov
pop
push
sti
nop
repnz
pop
sbb
add
(bad)
inc
popa
push
mov
cmovle
adc
loopne
packuswb
arpl
pop
(bad)
push
dec
mov
mov
mov
push
or
xchg
imul
ins
xor
(bad)
leave
dec
ds
pop
and
inc
dec
int3
mov
(bad)
dec
sbb
pushf
adc
pop
mov
loop
mov
test
in
lods
adc
stc
jge
ins
cwde
add
cmc
mov
aas
js
xor
or
in
or
mov
sti
mov
in
loopne
scas
ret
cmp
idiv
idiv
push
(bad)
mov
(bad)
stc
xlat
jp
jmp
test
std
sub
sbb
sub
adc
cmp
idiv
add
into
mov
add
jb
jae
add
and
ds
dec
mov
xchg
dec
fisttp
ret
cld
mov
jne
retf
mov
xchg
cdq
nop
in
xchg
fsubrp
push
jmp
mov
add
movs
inc
(bad)
shl
(bad)
out
aas
push
jp
xchg
imul
test
out
or
shr
fisttp
arpl
jmp
adc
lods
pop
lock
or
push
sbb
ss
aam
fnstsw
sub
(bad)
mov
pop
jno
inc
dec
mov
sub
and
push
pop
push
test
lods
dec
jp
(bad)
ins
adc
adc
fist
mov
test
(bad)
aad
pushf
sti
loope
dec
dec
inc
cmp
mov
rcl
popf
adc
dec
cmp
sub
pop
(bad)
(bad)
and
mov
int3
call
scas
xchg
xchg
loopne
sbb
retf
inc
cmc
jnp
add
stc
jmp
into
cmps
rcl
xor
in
xchg
mov
cmps
scas
enter
jo
sub
dec
imul
adc
mov
mov
add
cmp
mov
(bad)
in
cmps
cli
je
adc
ins
xchg
pop
addr16
out
sti
sbb
in
call
jbe
jo
sar
cmp
mov
xor
fdivp
mov
mov
dec
sbb
push
jo
sbb
push
push
cli
push
cmps
xor
inc
pushf
dec
mov
lds
iret
fcmovu
mov
pop
daa
push
test
ins
or
pop
jo
adc
sub
outs
lea
add
nop
xchg
popf
cmp
scas
mov
xchg
cli
jmp
jbe
lods
shl
dec
mov
mov
dec
inc
out
push
dec
xor
es
call
fstp
aad
fst
jbe
aas
rol
push
inc
loope
mov
pop
cmp
inc
test
lds
mov
xor
rcr
pop
enter
cmps
fwait
xor
xchg
and
adc
xchg
sub
cmps
inc
sub
adc
mov
and
bound
inc
daa
adc
cmp
cmp
pushf
or
ja
repnz
stc
pop
sbb
shr
add
xchg
pop
dec
dec
dec
int
or
or
adc
xlat
retf
xor
jno
xor
lea
jmp
dec
aam
or
dec
pusha
les
xor
dec
div
(bad)
js
inc
inc
std
bound
std
retf
mov
add
inc
pushf
add
mov
pop
pusha
jbe
sbb
cmp
xor
sbb
xor
out
test
pop
dec
ins
sub
cmp
movs
push
call
xchg
sub
mov
push
inc
jg
cwde
sub
fld
push
dec
pop
daa
shr
or
xchg
popf
add
add
pop
adc
mov
cmp
pop
cmp
mov
mov
sbb
loop
cld
sbb
push
sar
cs
mov
aaa
pop
and
mov
rol
in
dec
(bad)
mov
pop
xchg
jne
sub
dec
test
xor
jecxz
stos
mov
jle
xchg
cmc
sahf
shr
and
xchg
(bad)
sub
enter
jno
or
lods
in
imul
sub
lods
and
lock
(bad)
push
out
in
cmp
jbe
cmp
shl
imul
sbb
lods
sbb
ins
jmp
hlt
pop
xchg
cmp
mov
rcl
popa
enter
call
jo
movs
and
sbb
fisubr
shr
add
xchg
or
cld
popf
imul
sub
adc
loop
das
mov
sti
xor
bt
add
mov
not
cld
imul
popa
inc
mov
and
shr
add
cmp
out
lods
mov
and
fwait
mov
mov
pop
test
retf
popf
fadd
xor
adc
jnp
jg
dec
adc
jl
sbb
les
dec
sub
call
in
sbb
mov
clc
xchg
cdq
outs
sbb
add
in
or
leave
iret
popa
lahf
jle
ret
scas
repz
(bad)
aad
or
dec
and
mov
nop
test
push
mov
xchg
pop
push
add
out
adc
jle
push
(bad)
mov
loopne
ja
and
sub
dec
jge
aam
mov
shr
sub
pop
dec
je
dec
pop
or
aam
arpl
ret
push
sub
test
or
pop
outs
dec
iret
mov
popfw
xchg
or
scas
adc
push
stos
add
sti
pop
mov
stc
sbb
aam
mov
inc
add
mov
ins
mov
imul
jp
dec
push
cmps
pop
inc
xchg
pop
adc
call
add
inc
stc
xchg
out
xchg
sub
popa
mov
jecxz
add
aaa
ins
mov
pop
fwait
addr16
jmp
sbb
mov
aaa
inc
xchg
push
ins
bound
dec
jp
xchg
sar
sub
ret
test
aas
cmp
iret
fiadd
push
inc
adc
ret
imul
lahf
and
repz
in
stc
jne
ror
icebp
xchg
sbb
or
mov
in
out
ficom
pop
adc
dec
aaa
cwde
fild
cs
imul
je
jg
imul
sar
ss
mov
add
lea
test
test
loope
rcl
push
xchg
je
leave
mov
sub
aad
dec
jg
daa
fisub
fldcw
lock
mov
push
mov
(bad)
cld
in
pop
sub
pop
dec
xchg
adc
sbb
imul
and
test
enter
xor
pop
pop
sub
adc
inc
xchg
(bad)
sub
ds
es
stos
cmp
lods
inc
fnstcw
lods
ror
call
pop
dec
int3
jle
add
ins
sbb
retf
aaa
xchg
sub
aaa
push
adc
lds
pop
call
jg
add
cmps
jl
dec
retf
mov
aas
in
shl
shufps
mov
in
sahf
clc
xor
jbe
in
pop
xchg
(bad)
jns
cs
int
mov
sub
or
or
cdq
sub
or
jl
adc
sahf
aaa
(bad)
mov
sti
(bad)
cmps
call
fwait
inc
retf
adc
test
pop
pop
movs
cmp
ret
pop
popa
add
in
push
push
cli
ins
push
(bad)
gs
mov
data16
push
mov
push
enter
mov
rol
dec
idiv
ror
repnz
out
or
retf
sbb
mov
ins
fimul
mov
out
pop
iret
mov
add
jmp
pop
and
inc
push
sub
cmp
fsubr
test
add
xor
into
cmp
cmp
jecxz
cld
jne
cmp
mov
pop
hlt
push
sub
push
test
nop
xor
sbb
fcom
sbb
lods
mul
xlat
call
cmp
and
push
ret
call
cli
or
and
les
ds
push
mov
push
push
xchg
pop
xchg
push
xor
or
mov
xor
mov
xchg
int3
xlat
and
(bad)
lahf
in
fst
mov
inc
fimul
jge
jecxz
lods
test
cmp
pop
pop
cwde
xchg
popa
(bad)
sub
call
sahf
aam
and
xor
push
xchg
jge
(bad)
sbb
fidivr
icebp
and
cmp
cs
or
loopne
sub
fsubr
push
adc
stos
in
in
pushf
sub
and
addr16
clc
cmp
dec
sub
adc
and
(bad)
push
leave
cmp
xor
out
add
sub
cmps
jle
lds
(bad)
fdiv
les
stc
imul
lds
test
inc
jmp
jae
mov
adc
ds
pop
test
sbb
adc
fcomp
xchg
xor
aam
hlt
mov
jle
inc
sbb
mov
dec
and
cs
push
mov
adc
xchg
popa
add
mov
jg
stos
jp
in
sbb
push
fild
inc
or
mov
sti
sbb
jbe
xor
add
hlt
xlat
fisub
push
or
sub
add
mov
add
addr16
(bad)
cld
or
or
jmp
(bad)
iret
fwait
push
or
push
cmp
cmp
add
jge
test
in
xchg
mov
mov
xlat
pop
sub
stc
push
fucomip
into
fidivr
inc
mov
add
sub
out
or
pop
popa
sub
fst
out
jecxz
mov
mov
inc
mov
cmp
repz
jmp
test
lds
adc
cwde
cli
push
sbb
push
add
jbe
or
sbb
ja
mov
xor
ss
and
mov
xor
jg
(bad)
jg
inc
pop
inc
xchg
and
xchg
ja
xor
gs
data16
fs
and
cmps
dec
ins
jecxz
pop
in
push
les
mov
jb
fwait
mov
xchg
imul
mov
stc
sbb
jmp
xor
or
xor
sets
cdq
je
xor
cmp
xchg
leave
loop
add
push
sub
lahf
popa
stos
into
aas
fwait
mov
outs
mov
pop
aaa
cmp
neg
xor
fbld
js
test
xchg
movs
xchg
shl
fcomp
stos
cmps
jge
dec
iret
xchg
mov
faddp
in
jmp
daa
fldcw
fiadd
aaa
jns
xor
sbb
rol
sbb
lods
sub
cmp
sub
movs
js
(bad)
adc
jbe
sub
push
fcomi
cld
pop
mov
in
xchg
or
xor
jnp
mov
mov
in
xor
adc
jle
cmp
xor
xor
std
cmc
sub
fisttp
ins
pop
inc
inc
push
lds
in
sbb
mov
outs
xor
pusha
mov
in
mov
lds
or
push
sub
icebp
push
push
sbb
mov
and
sbb
ret
xchg
mov
jo
pop
push
fcom
call
inc
xor
mov
adc
out
adc
xchg
jne
adc
data16
push
popa
dec
pop
icebp
popa
adc
gs
push
cmp
(bad)
jo
lods
je
es
ins
xchg
pushw
push
mov
out
sub
stos
adc
mov
adc
mov
cmp
sbb
inc
ss
mov
or
mov
inc
fisub
fcom
out
jnp
push
(bad)
popf
out
jecxz
ret
ret
ds
xor
sahf
xchg
sub
xchg
arpl
adc
lods
mov
(bad)
hlt
test
aaa
mov
add
sub
adc
fwait
pusha
hlt
aaa
in
xchg
xchg
ins
data16
inc
mov
(bad)
loope
sbb
inc
adc
adc
or
and
aaa
add
stos
jo
cdq
ds
mov
daa
int
jae
jmp
aas
mov
iret
jo
xchg
std
xor
push
in
inc
pop
and
iret
cld
cli
cdq
mov
popa
sub
mov
add
pop
js
adc
and
fimul
shl
jbe
pop
outs
mov
adc
pop
fild
xchg
bound
outs
nop
xor
pop
fnstcw
add
mov
fldcw
jmp
shr
inc
pusha
lahf
xchg
jne
and
test
rcl
lock
cmp
push
stos
jno
cmc
shl
in
sbb
dec
mov
ror
mov
push
push
repz
jne
fsubr
inc
ins
bound
fnstsw
ret
sbb
sub
test
push
fcom
or
rcl
clc
cmps
jge
inc
lds
pop
mov
adc
jmp
fcmovnbe
push
fsub
rol
inc
pushf
(bad)
cmps
out
xchg
add
out
sub
mov
(bad)
rcr
jmp
mov
int3
xchg
aam
mov
mov
(bad)
jb
push
cli
and
outs
xchg
mov
out
jmp
shl
rol
or
xor
adc
inc
jb
int
pop
xlat
popf
or
mov
pop
clc
lods
jmp
div
ins
sbb
pop
xchg
or
inc
fidivr
mov
or
jae
push
imul
jno
(bad)
sub
lock
iret
jecxz
sbb
push
xor
add
retf
retf
xchg
add
mov
cmp
cmp
mov
out
xor
jo
cli
adc
inc
pusha
add
sub
(bad)
cmps
xchg
add
inc
rol
and
xchg
mov
shr
fcmovb
pop
mov
pop
xchg
or
and
mov
push
(bad)
cdq
sti
adc
int
xor
mov
cmp
sub
aaa
xchg
scas
push
fs
xor
(bad)
jo
std
int
call
sbb
sbb
(bad)
xchg
shr
push
cmps
int3
lock
loopne
xor
sti
ror
scas
mov
add
imul
push
or
pop
leave
retf
sahf
pop
cmps
stos
xor
xor
nop
psraw
pop
sub
(bad)
pop
push
into
cmc
js
jns
inc
aam
pusha
fcom
sar
jo
jp
and
sub
jmp
add
or
inc
push
push
or
es
pusha
sbb
xchg
and
jb
xchg
jo
enter
adc
jecxz
(bad)
push
mov
scas
test
rsqrtps
fwait
repnz
jno
rcr
cmp
xchg
stos
bound
mov
sub
push
mov
sub
and
outs
pusha
jnp
ret
pushf
loop
xchg
cmp
ret
repz
jmp
pop
cld
(bad)
rcl
std
clc
dec
cmp
cmp
pop
fcomp
mov
in
fidivr
ffreep
idiv
add
enter
push
test
nop
add
dec
dec
jge
lods
aaa
jno
loope
ins
adc
mov
jbe
pop
adc
push
jne
(bad)
retf
lods
mov
imul
idiv
inc
int
mov
xlat
test
rol
sbb
pop
push
push
add
push
call
je
lods
test
or
xor
cdq
push
ds
shl
jge
aam
add
pop
ss
mov
push
shl
mov
arpl
mov
fidiv
mov
jmp
jle
adc
inc
stos
fiadd
sbb
test
enter
div
popa
arpl
sub
ja
add
into
ins
pop
cmp
popf
loop
cdq
cmp
icebp
into
ror
cdq
cmc
gs
rcl
pop
ret
cld
icebp
mov
ficom
mov
xor
nop
adc
mov
cdq
aaa
xor
xchg
mov
sbb
rol
pusha
ret
or
dec
mov
aas
loop
mov
call
fimul
fldenv
or
push
fs
fnsave
pop
mov
adc
out
cwde
pusha
cmp
bound
jp
gs
sbb
and
pusha
rcl
dec
or
push
add
loope
ins
push
pop
aaa
pusha
dec
and
in
int
xlat
in
mov
adc
add
cmc
lock
neg
inc
fwait
mov
mov
mov
mov
inc
adc
inc
jnp
push
mov
fst
xor
push
cmps
mov
cli
and
dec
cmp
fwait
xor
sub
scas
in
lea
xchg
and
push
jno
mov
retf
mov
inc
shl
and
leave
mov
or
mov
mov
jl
mov
fincstp
bound
dec
xor
jg
fld
inc
xchg
pop
push
add
mov
mov
jbe
inc
and
lds
cmp
sbb
cld
mov
sbb
sbb
idiv
mov
pop
add
(bad)
xchg
add
push
add
call
jp
jl
lock
aam
mov
sub
sbb
loopne
push
mov
pop
adc
ret
out
(bad)
pop
and
inc
in
jnp
sub
data16
fcomp
rcr
std
gs
cli
mov
lahf
aas
iret
test
repnz
retf
xor
inc
jmp
inc
inc
icebp
repnz
add
cld
dec
movs
sti
adc
int
pushf
ret
adc
out
inc
test
sbb
lock
iret
ss
pop
lds
dec
xor
lds
mov
fs
dec
std
ins
pop
pcmpgtw
pop
aas
fbld
popf
mov
int
dec
test
jmp
into
mov
es
mov
mov
das
bound
push
pusha
vmaxsd
lods
add
fcomp
adc
jle
enter
into
lahf
xchg
xchg
fiadd
mov
int3
imul
xchg
push
xor
dec
loop
sahf
sub
(bad)
popf
bound
pop
ret
adc
(bad)
jmp
idiv
pop
sub
int3
call
dec
jmp
mov
dec
jb
jno
jecxz
daa
rcpps
lods
arpl
add
mov
xor
(bad)
js
cmps
xchg
or
pushf
fs
sub
les
(bad)
and
xor
dec
lods
add
sbb
adc
dec
jg
retf
retf
test
cdq
cmp
enter
aaa
vaddpd
mov
sub
lock
push
sbb
repz
dec
cmp
fcomip
mov
sub
jge
cmp
(bad)
cwde
sub
scas
icebp
(bad)
fistp
fild
xor
fstp
lahf
or
loopne
shr
aad
mov
jbe
arpl
or
cmps
fwait
adc
lea
cmps
(bad)
rol
shl
sbb
addr16
lods
jecxz
(bad)
cld
ss
inc
push
and
lea
loopne
add
outs
jg
adc
mov
cmovae
fdiv
xchg
call
dec
sub
cld
jg
ror
loop
sub
fadd
rcl
adc
sti
and
push
push
dec
pop
lods
sub
scas
add
mov
xor
xor
xchg
retf
add
inc
fmul
shr
(bad)
or
out
cwde
xor
cdq
sub
push
and
cdq
leave
fnstcw
aam
rcl
sti
xchg
stos
loopne
mov
mov
shl
mov
mov
jle
fdivrp
jp
data16
les
adc
neg
add
inc
pop
imul
lds
pop
data16
adc
cmp
mov
aad
fwait
jge
and
xor
lods
inc
xlat
retf
cmp
push
jmp
test
popa
mov
inc
pop
outs
push
mov
fisub
and
xor
push
sbb
in
xor
pop
cmp
loopne
cmp
movs
jnp
jge
sub
mov
mov
xchg
das
mov
pop
add
xor
daa
pop
mov
out
leave
or
push
mov
push
xchg
mov
pushf
jmp
xor
push
push
mov
mov
xchg
mov
push
(bad)
fsubr
push
xchg
or
int3
shr
inc
push
test
jg
push
dec
fnstenv
xchg
or
sub
push
(bad)
xor
xchg
gs
cmp
pop
cmp
outs
enter
cld
sbb
sbb
(bad)
aas
imul
or
pop
imul
cmp
dec
dec
in
dec
pushf
add
pop
movs
or
xchg
mov
cli
ret
inc
add
out
xchg
(bad)
std
or
je
or
ror
jmp
fwait
mov
jmp
retf
outs
daa
mov
push
icebp
inc
add
mov
ss
jle
or
inc
cmp
icebp
hlt
and
push
out
inc
daa
xchg
outs
scas
xor
mov
sbb
dec
test
push
and
push
dec
cmp
int3
sub
bswap
mov
push
fbstp
int3
lods
test
inc
sub
(bad)
gs
and
int
inc
ret
adc
inc
push
enter
sub
mov
popa
mov
cmp
dec
sbb
loop
cmp
inc
rcl
ror
mov
ror
jle
xchg
xchg
ret
scas
cld
lods
jnp
les
mov
and
out
fwait
pop
scas
inc
dec
mov
pop
scas
sub
xchg
cdq
mov
ins
cmps
jecxz
test
loop
mov
je
fs
xlat
xchg
sub
cdq
sti
loop
scas
mov
mov
cwde
cdq
xor
dec
cmp
rol
es
mov
sub
shl
adc
push
cwde
pop
dec
out
xor
mov
in
mul
lahf
pop
ret
add
or
or
push
push
xchg
call
jle
jg
aad
pop
stos
test
in
xchg
or
out
inc
pop
xor
(bad)
outs
aaa
and
adc
inc
test
pop
mov
xor
pop
inc
in
mov
rcl
jp
jns
jmp
cmps
dec
inc
stos
lds
nop
lods
out
iret
mov
xor
shl
pop
popa
and
jne
aad
ja
mov
retf
mov
xor
call
push
mov
inc
mov
sahf
cmc
ror
lds
clc
outs
cmp
test
rol
rol
popf
add
in
mov
adc
mov
fld
dec
cmp
push
cld
xchg
arpl
das
jmp
fnstcw
sbb
xor
xor
xchg
js
sbb
sbb
int
jae
xor
lds
jge
cmp
cmc
outs
fld
push
dec
arpl
jo
inc
jmp
fdivr
adc
mov
mov
mov
jge
mov
out
sbb
mov
xchg
sub
sbb
loopne
cmp
ins
cld
movs
fstp
shl
(bad)
mov
fdivr
sbb
lock
jg
outs
cld
hlt
pop
adc
inc
int3
test
data16
adc
or
push
pop
add
dec
sbb
cmps
fdivr
push
xor
stos
or
cmp
dec
aaa
(bad)
ins
dec
sub
push
shl
test
addr16
adc
xor
retf
test
fldenv
inc
sub
jp
adc
dec
inc
mov
rol
push
inc
or
pop
push
dec
xlat
(bad)
call
pop
push
xchg
jo
xchg
mov
imul
inc
and
jno
xchg
jne
mov
sar
fdivr
stos
push
mov
inc
data16
fwait
outs
repnz
jb
or
and
and
scas
aam
adc
inc
cmp
jl
lods
sar
xchg
cli
daa
mov
inc
outs
outs
dec
lds
in
rcl
ins
lds
mul
cwde
in
cmc
mov
retf
mov
sub
or
gs
sub
and
jae
mov
xor
pop
mov
sbb
add
adc
sub
sub
cwde
or
xchg
jne
dec
jmp
sbb
or
pop
dec
dec
repz
pop
fucomp
mov
xlat
push
pushf
ja
or
mov
aam
int3
add
jnp
cs
ds
push
outs
mov
and
jmp
mov
sub
imul
ret
cmp
jae
call
inc
ds
mov
cli
add
cmp
pop
cwde
push
inc
shr
nop
dec
xor
xchg
push
fcom
jecxz
out
aaa
dec
and
stos
das
adc
mov
mov
shl
rcl
sar
xor
xor
xchg
jbe
je
cmp
and
and
lods
in
mov
aad
aam
clc
jnp
jmp
sbb
bound
push
mov
pop
int3
fcom
sbb
pop
mov
movs
xchg
hlt
xor
pop
pop
xor
push
mov
mov
cmp
mov
and
push
or
jecxz
pop
fild
push
fwait
and
test
pop
fidiv
(bad)
movs
cs
pop
sub
sub
add
push
ja
bound
add
cld
mov
add
sbb
retf
or
jae
push
mov
pop
div
mov
dec
ds
imul
add
sub
call
aaa
in
xchg
jmp
push
pop
pop
xor
jmp
add
mov
sbb
fwait
sub
repnz
sub
push
int
pop
push
xlat
dec
std
add
or
fst
jns
pop
data16
cmp
sub
stos
mov
xor
les
cli
nop
push
xor
pusha
mov
or
repz
cmc
(bad)
fwait
jmp
or
repnz
repnz
scas
adc
dec
or
dec
aas
(bad)
xor
out
sub
les
aas
dec
inc
adc
ds
push
rol
imul
aad
or
mov
cmp
cmp
fsub
jmp
xchg
mov
xchg
push
jge
push
adc
inc
inc
or
xchg
in
es
inc
fidiv
pop
cmp
sbb
push
repnz
sub
and
in
and
fistp
ins
adc
sti
jbe
cmp
aad
lock
or
xor
xchg
(bad)
ins
mov
sub
pusha
das
movs
ss
or
inc
pop
repz
jae
cmp
mov
mov
inc
xchg
cmp
pop
das
and
mov
xchg
je
in
jecxz
(bad)
lods
jae
popf
dec
movs
add
sub
xchg
sub
ins
inc
push
inc
mov
push
rcl
jmp
mov
cmps
add
not
imul
mov
inc
xor
retf
sbb
pop
sbb
pop
pop
mov
cmps
test
in
das
adc
pop
movs
inc
xchg
(bad)
(bad)
sub
lds
in
jns
mov
mov
and
aas
pop
adc
ss
lahf
xchg
das
push
dec
sub
and
pop
sub
stc
arpl
or
jecxz
jp
pop
rol
jle
mov
test
mov
sbb
enter
sub
mov
les
lea
lds
inc
sub
mov
add
rol
je
jmp
ret
dec
add
popa
adc
add
imul
ja
adc
rcl
fcomi
sbb
fs
adc
clc
xor
arpl
fist
pop
mov
mov
inc
pusha
lods
jp
xchg
(bad)
inc
and
xor
pop
bound
iret
outs
dec
(bad)
adc
inc
dec
lods
cs
pop
add
inc
test
(bad)
and
xor
sbb
sahf
imul
cmps
je
jnp
pop
aad
fbld
xor
vpaddb
mov
mov
imul
sti
ror
jle
loop
daa
adc
jo
xchg
cmp
mov
sub
add
fmul
xor
(bad)
sahf
add
cmp
and
xchg
popf
(bad)
or
imul
loopne
out
or
dec
cdq
and
mov
mov
sbb
mov
inc
and
in
cs
mov
(bad)
sub
add
xchg
lds
rcl
push
or
inc
mov
lea
out
and
movlps
jl
aad
sbb
das
pusha
mov
movs
push
xchg
jecxz
std
add
push
pop
aam
fimul
bound
inc
arpl
inc
pop
bnd
out
push
pop
outs
je
mov
jo
pop
sar
es
dec
hlt
xchg
fdivr
pop
xchg
xchg
cmp
arpl
out
dec
nop
jmp
clc
jno
inc
mov
leave
mov
mov
cwde
lds
arpl
fnstsw
inc
(bad)
sub
iret
out
popf
(bad)
aaa
add
adc
test
pop
(bad)
cmp
sbb
and
add
scas
and
or
cld
cs
stc
stc
jns
jmp
scas
aad
mov
hlt
cmp
cmp
inc
test
jno
push
inc
sbb
inc
call
rcl
mov
retf
enter
jo
hlt
sti
lahf
mov
std
push
sbb
stos
out
and
dec
inc
adc
sbb
mov
mov
sbb
jns
ficom
imul
sar
pop
adc
ss
or
or
popa
pop
call
std
inc
mov
test
sti
inc
pusha
aad
xor
mov
scas
jge
xor
cwde
shl
sbb
dec
mov
fidiv
icebp
stos
fcom
mov
lock
jne
and
mov
add
jno
inc
mov
movntps
pop
loop
push
int
hlt
xchg
inc
test
inc
or
add
das
call
(bad)
cmc
mov
xchg
xchg
or
adc
or
in
jno
add
fwait
(bad)
xor
shl
ficomp
mov
mov
loope
ds
(bad)
js
jo
inc
scas
mov
xor
dec
jb
sbb
fdivr
sub
mov
push
xor
mov
or
xor
pop
mov
pop
repnz
sub
and
fwait
pusha
adc
push
bound
jno
cld
and
pop
int3
repnz
(bad)
xchg
push
push
out
ins
ficomp
iret
push
mov
jae
aaa
inc
mov
xchg
fistp
rcl
inc
lds
in
bound
mov
ror
push
xor
enter
mov
fstp
mov
pop
cmps
inc
dec
cmp
arpl
movs
push
stos
jecxz
and
scas
in
mov
cld
das
mov
xor
xor
xor
loop
lods
fwait
cmp
mov
cmps
test
(bad)
nop
push
fisub
nop
cli
jge
pop
stos
outs
sub
outs
popa
mov
data16
inc
pop
shl
call
retf
je
push
pop
mov
sbb
cdq
outs
test
or
dec
retf
push
pop
push
sub
repz
push
imul
(bad)
and
outs
push
xchg
cdq
sar
aaa
(bad)
xchg
jmp
test
dec
hlt
jbe
cmp
pop
fwait
and
ficomp
inc
mov
mov
mov
mov
int
lods
inc
inc
mov
in
enter
cmp
lods
add
repz
cmc
shl
popa
fisub
fnsave
mov
jne
outs
cmp
sub
popa
xchg
push
cmp
pop
push
fist
ss
add
pop
imul
pop
std
in
pop
dec
mov
xchg
outs
inc
sbb
cmp
pop
pop
aad
jg
add
imul
and
scas
lahf
jns
les
sbb
inc
xchg
inc
hlt
ins
std
inc
adc
cmp
jne
rcr
dec
mov
call
cmp
jmp
sub
and
mov
test
push
mov
push
xchg
sahf
pop
xor
pop
cmp
cmp
dec
mov
xor
push
sub
mov
mov
dec
cmp
rcl
mov
ins
cld
imul
cmp
push
test
pop
sub
adc
out
inc
stos
cmp
es
pop
xchg
iret
(bad)
clc
jnp
repz
movs
add
aas
dec
sbb
out
mov
sbb
scas
test
mov
jo
jp
int3
test
pop
inc
mov
sbb
mov
fdivr
ficomp
addr16
cdq
xor
loopne
mov
jo
sub
call
cmc
call
icebp
call
push
adc
fisubr
ret
dec
xchg
inc
lock
pusha
(bad)
inc
ret
mov
dec
imul
lds
inc
in
xchg
(bad)
stos
jle
fwait
(bad)
and
jg
add
popw
jl
add
push
or
outs
fisttp
ss
popa
dec
inc
xlat
sbb
bound
cwde
jmp
xor
inc
movs
out
xchg
pop
fisub
jle
mov
jae
jae
dec
and
inc
(bad)
rcr
mov
repnz
sub
pusha
jmp
or
jns
cdq
jo
shr
dec
es
lock
std
mov
test
cmp
fnstcw
mov
pop
jg
mov
bound
cmp
adc
pop
jge
movs
and
popf
repz
popf
sti
add
sbb
loop
outs
out
(bad)
int3
push
sbb
bound
push
xlat
arpl
cdq
sub
jae
rcr
push
inc
jne
mov
out
xchg
stc
or
fnstcw
fadd
cmp
jp
push
jno
mov
in
dec
pop
stc
add
xchg
adc
add
mov
sahf
gs
add
push
(bad)
stos
or
add
dec
mov
popa
adc
data16
pop
inc
xor
mov
popf
ss
cld
and
movs
repnz
adc
sti
retf
jo
ins
movs
cmp
jecxz
add
retf
(bad)
push
out
fldenv
pop
(bad)
jp
xchg
fbstp
pop
mov
mov
sbb
push
adc
(bad)
out
mov
js
mov
call
mov
xor
adc
push
add
int3
inc
bound
or
push
in
pop
jp
dec
add
repnz
mov
inc
jns
mov
xchg
and
imul
cli
or
jmp
js
xor
mov
scas
jbe
shl
pusha
popa
push
nop
les
mov
xchg
mov
mov
cld
xchg
loope
inc
jns
pop
mov
ins
xchg
daa
dec
repz
mov
in
outs
adc
xchg
popa
cmp
call
pop
mov
sbb
call
sub
dec
xchg
pop
test
inc
gs
push
mov
mov
bound
retf
inc
outs
ja
push
loope
jmp
outs
sub
clc
or
pop
push
and
or
nop
mov
leave
pop
call
ja
or
mov
cmps
xchg
ins
pop
jbe
push
push
and
mov
outs
pop
add
push
adc
and
jmp
cmps
jno
das
outs
push
jl
ja
lods
mov
xchg
pop
call
mov
push
xchg
inc
test
sbb
jmp
inc
mov
in
stos
mov
repnz
enter
movs
jecxz
daa
sub
sub
cmps
pop
jne
pop
js
mov
loope
das
jo
push
jmp
sbb
out
or
repnz
dec
push
add
adc
(bad)
fidivr
mov
pop
mov
stc
pop
mov
dec
sbb
and
imul
or
fcom
out
retf
jno
sti
lds
push
cwde
ins
add
icebp
fadd
mov
das
add
jbe
or
pusha
icebp
cli
sub
cdq
jne
xchg
retf
or
fimul
lods
adc
dec
movs
push
sbb
hlt
cwde
ret
div
hlt
int
aam
das
enter
fstp
loope
cmc
or
sub
or
nop
imul
jne
adc
sbb
lahf
inc
mul
xor
cs
aaa
js
cld
xchg
shl
in
fisubr
nop
mov
mov
dec
retf
sti
sub
loop
scas
repz
push
(bad)
mov
imul
addr16
add
stos
mov
or
add
ss
add
or
das
cmp
pop
sub
stos
mov
iret
dec
pop
sbb
jg
sbb
retf
mov
ret
xchg
in
pop
jmp
aam
sbb
(bad)
repz
add
dec
in
repz
xor
sub
rcl
out
xchg
sti
mov
xchg
fist
sbb
xor
sbb
mov
xor
push
mov
aas
sbb
ret
mov
xchg
push
icebp
lods
inc
fistp
(bad)
and
or
int
mov
xor
pop
pop
add
xchg
popa
js
push
push
push
out
stc
(bad)
call
pushf
push
cmc
repnz
fwait
(bad)
mov
repnz
inc
push
mov
jnp
push
arpl
and
sbb
xchg
sub
push
stos
int
dec
pop
cmp
xchg
sbb
daa
aad
sbb
sahf
or
inc
gs
mov
sub
ss
mov
call
dec
clc
pop
and
inc
xchg
repz
(bad)
fisttp
add
xor
xchg
cmp
ja
mov
test
bound
js
(bad)
imul
iret
push
push
mov
movs
push
adc
outs
(bad)
xchg
xchg
pop
mov
mov
jge
add
outs
add
push
test
mov
shr
stc
mov
pop
fld
inc
scas
pop
loope
mov
mov
or
pop
(bad)
push
jmp
mov
jo
mov
cmp
aas
jge
fdivr
nop
cmc
add
mov
imul
lea
or
pop
adc
das
js
mov
mov
popa
xchg
aas
stos
sbb
xchg
leave
cmps
dec
out
jp
popa
ror
into
inc
push
mov
pop
test
inc
pop
imul
int3
inc
loop
mov
xchg
inc
stc
dec
int
cmp
push
sub
fwait
lods
jge
pop
clc
adc
mov
push
jnp
movs
stc
dec
call
nop
inc
ss
pop
xor
call
arpl
cmp
xor
jo
mov
out
mov
xchg
add
mov
cmp
xor
mov
sbb
add
repz
outs
mov
and
jl
lods
sub
fisttp
cld
mov
jge
fnstsw
sub
mov
jno
xor
xchg
hlt
icebp
mov
ret
packuswb
ret
out
(bad)
lock
mov
rcl
push
pop
inc
test
in
dec
pop
and
sub
cmc
(bad)
out
loop
(bad)
in
push
lock
and
fbstp
and
js
adc
jmp
repnz
popf
sahf
leave
xor
sti
adc
jne
cmp
inc
inc
cmps
stos
add
mov
inc
pop
and
aaa
pop
xchg
enter
cmp
bswap
sub
pop
mov
test
pop
dec
push
push
stc
and
jb
sahf
pop
jl
stc
iret
inc
shl
add
inc
mov
cmc
movs
inc
pop
lahf
xlat
out
bound
in
(bad)
daa
add
shl
cmp
inc
xor
mov
std
dec
mov
ins
(bad)
lea
lods
(bad)
xchg
cmp
es
ret
xchg
adc
push
das
inc
xchg
xchg
in
cmp
jo
or
push
aaa
mov
pop
push
adc
fiadd
and
neg
push
pop
int
ja
sti
dec
mov
das
push
and
into
push
into
(bad)
sahf
mov
(bad)
dec
add
imul
pop
pop
sub
inc
jmp
lock
jo
xchg
js
sub
jbe
mov
push
mov
jmp
cwde
stc
cmp
bound
mov
clc
sahf
int3
out
mov
(bad)
pop
push
lock
or
rol
fidiv
sbb
pushf
(bad)
xchg
ins
sti
cdq
bound
arpl
shl
inc
call
cmp
fwait
xor
jg
cmp
mov
loop
mov
adc
gs
dec
or
mov
add
cmp
mov
cmp
cli
je
outs
lea
aaa
pop
out
dec
sub
mov
mov
xor
test
adc
ror
js
scas
pusha
dec
stc
xchg
add
stos
test
dec
movs
push
dec
loope
jns
jle
mov
dec
mov
bound
xor
mov
retf
or
shr
pop
push
fcomp
or
popf
mov
call
vmovlps
aam
xchg
inc
sbb
inc
rcr
shl
mov
in
pop
or
cmp
out
dec
mov
shl
adc
xchg
lahf
es
adc
fwait
bound
fiadd
nop
mov
(bad)
div
add
pop
inc
mov
jo
and
sub
call
pop
dec
push
sbb
push
sbb
push
xchg
jmp
and
and
mov
ret
lock
stos
fist
and
movs
and
or
fild
in
jmp
pop
and
jo
dec
std
cmp
and
popf
mov
loopne
push
or
xor
bound
neg
xor
mov
test
loopne
xor
je
xor
cmp
inc
and
push
or
pop
cs
fidivr
int
mov
push
xchg
adc
leave
sbb
and
fisub
xchg
cld
ds
and
inc
sub
inc
fbld
jecxz
loopne
outs
aaa
call
cmp
sti
in
neg
repnz
sahf
fcmovu
icebp
retf
ret
nop
outs
jmp
and
xchg
jo
cmp
aaa
sbb
mov
es
pop
add
arpl
xchg
(bad)
jb
mov
inc
into
adc
das
pop
fstp
mov
sub
pop
xor
xor
(bad)
pusha
(bad)
and
mov
dec
cli
(bad)
in
xchg
(bad)
fst
ds
jae
jge
arpl
dec
out
fidiv
test
mov
push
loopne
or
shl
cdq
mov
(bad)
xchg
shl
movs
push
xor
add
repz
mov
jmp
jb
out
call
jmp
cld
sbb
push
iret
jns
push
jmp
jno
dec
push
cdq
jbe
aad
(bad)
adc
xchg
aad
push
xor
sbb
iret
adc
inc
mov
icebp
loop
psubb
outs
add
in
(bad)
pop
xchg
fs
outs
xor
mov
loope
lods
retf
mov
cmps
pop
mov
stos
mov
sbb
xor
or
int
mov
adc
xor
daa
fdivr
push
cmp
enter
mov
sub
sahf
mov
stc
cmp
jb
out
bswap
sbb
das
dec
outs
retf
jl
movs
adc
jne
adc
jecxz
ret
inc
bound
jmp
fs
and
fnstenv
sub
jns
iret
mov
xor
rcl
repnz
sub
sub
push
mov
popf
inc
sub
xchg
loop
cmp
icebp
inc
add
lea
or
jl
sub
sub
retf
mov
xor
adc
test
(bad)
int3
push
or
inc
sar
fmul
aad
dec
in
in
xchg
loope
adc
pop
push
dec
cli
sbb
ins
push
push
pop
pushf
pushf
sbb
pop
mov
pusha
add
sub
retf
xlat
push
leave
je
pop
jmp
stc
xor
pop
(bad)
scas
inc
les
bound
xor
in
add
sar
sbb
xchg
ret
adc
pop
pop
sbb
jns
bound
jmp
ja
or
sub
outs
bound
jle
rcr
cmps
aam
or
std
vaddsubpd
xchg
test
movs
in
hlt
mov
pop
cmps
xchg
mov
cmp
sub
(bad)
or
mov
outs
popf
add
xor
scas
push
add
pop
xor
iret
mov
ficom
add
mov
pop
fs
mov
xchg
push
xchg
ret
push
add
or
pop
call
sub
ficomp
jnp
push
xchg
sub
(bad)
repz
fdiv
xchg
rol
add
popf
cmp
and
sbb
shl
fidiv
mov
jne
jmp
call
imul
in
enter
out
cs
xacquire
fs
mov
cmp
xor
pusha
mov
lods
test
xor
movs
bound
jp
movs
jne
mul
dec
out
in
or
sbb
mov
dec
add
or
icebp
sbb
inc
adc
sbb
mov
and
xchg
xchg
cdq
pop
cmp
mov
mov
test
ins
ins
or
mov
adc
sbb
sub
sti
mov
sbb
sub
int
out
out
or
jecxz
xchg
jle
sub
add
push
dec
push
pop
dec
(bad)
stc
xchg
xchg
jg
push
xchg
ret
xor
imul
in
dec
cs
xchg
mov
iret
mov
daa
or
stc
test
pop
push
popf
pop
(bad)
adc
mov
popa
pop
stc
cld
mov
les
pop
out
aas
xchg
retf
cmp
push
sbb
int
ffreep
test
push
inc
xor
scas
(bad)
enter
leave
xor
mov
xor
in
repnz
or
pop
push
shl
xchg
clc
in
adc
outs
cs
cmp
and
ss
jns
mov
not
adc
sbb
and
inc
mov
push
mov
(bad)
js
repz
ins
test
pop
xor
xchg
rcr
pop
pop
cwde
add
in
dec
jne
and
fld
inc
mov
sub
in
dec
cdq
and
setno
sub
loop
cs
ret
lods
cwde
lods
out
ins
pop
retf
push
mov
repnz
add
enter
mov
xchg
jno
dec
add
cmp
shl
int
sbb
pop
fidivr
mov
fst
inc
pop
daa
daa
adc
add
arpl
mov
mov
sub
int
lock
outs
mov
iret
jmp
mov
or
ins
jmp
ret
popa
sbb
lds
std
pop
pop
imul
iret
imul
mov
test
sbb
pusha
mov
jp
adc
jmp
pop
jg
mov
fucomi
sbb
test
(bad)
in
lock
and
in
sub
xchg
(bad)
aaa
mov
int
add
outs
mov
inc
es
out
mov
fnstsw
pop
cmp
push
out
ss
arpl
cmp
pop
mov
or
push
mov
movs
stc
cdq
lds
push
lea
cwde
mov
imul
mov
push
cmp
xchg
pop
mov
test
sbb
sub
cld
and
jp
xor
jne
retf
data16
jl
nop
add
sbb
repnz
jae
pop
into
adc
nop
dec
push
out
lods
add
mov
jae
mov
mov
(bad)
adc
mov
mov
sub
nop
dec
pop
dec
test
and
mov
jmp
adc
xor
xchg
jmp
inc
xchg
in
jecxz
fwait
mov
xchg
movs
and
rcr
or
lds
arpl
or
ins
ret
repz
sub
sub
add
into
clc
imul
fdivr
pop
mov
jo
in
pop
sti
add
push
sub
cmp
or
ds
fild
mov
adc
mov
push
fwait
sub
inc
sbb
push
and
(bad)
adc
xor
pop
add
lods
dec
outs
adc
test
push
mov
call
in
icebp
xchg
je
mov
repnz
mov
cs
jmp
sub
mov
scas
cmp
push
cli
xor
test
push
rol
fstp
enter
and
test
mov
sub
popf
jecxz
(bad)
push
in
cs
test
sub
shl
shl
mov
lea
xchg
push
jae
or
and
fnsave
(bad)
fwait
leave
cmp
dec
ds
push
sub
push
mov
pop
int3
icebp
jnp
ficom
dec
retf
xchg
les
in
or
jl
call
daa
sbb
jp
pop
dec
mov
stos
jnp
inc
data16
jmp
adc
stc
dec
add
shl
fnstenv
ficomp
sbb
outs
(bad)
fidivr
mov
and
popf
cmps
adc
lahf
adc
ret
loop
aad
stos
jp
cmp
push
(bad)
int3
inc
ja
push
les
jo
xor
cmp
mov
retf
mov
mov
in
cmc
je
(bad)
pop
sub
xchg
xchg
lds
test
inc
dec
mov
dec
pop
aaa
cmps
leave
int
cli
xor
xchg
mov
push
ja
fist
dec
and
adc
inc
dec
sub
pop
push
sbb
push
stc
es
in
mov
sahf
outs
inc
push
ficomp
sbb
rcl
push
pop
popa
ja
xlat
sub
inc
mov
popf
xchg
cmp
pop
jne
int
das
pushf
enter
push
mov
out
xchg
cmp
push
es
lahf
scas
lea
cmp
aas
push
leave
push
out
arpl
pop
mov
out
push
mov
lock
adc
retf
fist
(bad)
(bad)
mov
sbb
rcr
arpl
lods
jnp
push
or
mov
jae
dec
popa
(bad)
out
pop
inc
pop
js
loopne
int
jbe
ds
js
jno
ficom
adc
pop
aaa
cmp
aaa
pop
inc
jae
xchg
ficomp
push
push
and
dec
mov
(bad)
imul
jne
into
or
mov
test
stos
mul
jmp
nop
ror
clc
mov
sbb
pop
les
std
pop
dec
cli
(bad)
xlat
inc
cli
stos
mov
(bad)
int3
fs
(bad)
das
jae
and
inc
or
pusha
js
xchg
and
call
in
xor
xchg
dec
jecxz
jo
dec
mov
xor
loope
hlt
aam
into
in
outs
call
add
xor
and
and
jge
add
imul
stos
fdiv
and
rcl
stos
xlat
cmps
xchg
cwde
mov
and
repnz
sbb
add
mov
jno
addr16
pop
lods
scas
outs
lea
and
xchg
dec
mov
jbe
sti
add
adc
cdq
test
sub
int3
adc
pusha
in
lods
lods
in
pop
mov
pusha
cdq
xlat
push
int3
mov
xor
xor
sbb
jbe
movs
(bad)
xchg
inc
dec
call
inc
xor
retf
and
sti
or
(bad)
sub
push
dec
pop
hlt
ss
jo
xor
retf
sbb
into
enter
in
dec
push
cli
aas
dec
adc
shl
(bad)
or
xor
dec
xor
fld1
mov
push
jae
cmp
sub
shl
test
aam
stos
dec
(bad)
shr
js
ss
sahf
push
mov
sti
mov
js
loope
ret
mov
or
lods
mov
inc
mov
stos
adc
in
icebp
cmps
cmp
adc
scas
pushf
push
xchg
rcl
sahf
push
jae
imul
cmc
movs
mov
adc
jmp
mov
mov
inc
rol
lods
clc
cmp
pop
(bad)
out
ja
pop
jp
adc
fldl2t
xchg
adc
adc
cmps
push
scas
adc
cmps
outs
xchg
(bad)
jl
leave
shr
in
ret
ret
dec
cmc
outs
daa
xchg
outs
xchg
fdiv
inc
lods
xchg
cmps
or
push
sub
adc
test
retf
js
xchg
retf
cmp
pop
xchg
xor
and
sbb
mov
inc
push
jbe
xor
or
ret
mov
xchg
outs
mov
dec
mov
pop
mov
jg
rcr
loop
mov
sbb
sub
sbb
rol
loop
sahf
aad
out
lock
cs
(bad)
imul
adc
and
lods
or
in
sbb
jmp
add
pop
jl
mov
je
inc
push
(bad)
cmp
add
scas
pop
dec
dec
jmp
sbb
xchg
(bad)
stc
(bad)
dec
ins
scas
jmp
dec
cmp
add
and
enter
gs
jne
sub
je
and
lods
mov
or
fidivr
test
cmc
sub
push
ror
pop
lods
cld
int3
retf
mov
shl
(bad)
cs
cmp
mov
mov
not
xor
rol
scas
inc
jle
and
mov
or
les
imul
xchg
sub
ds
dec
call
lods
inc
fcmovnb
mov
js
mov
dec
inc
mov
ds
rcr
add
cli
jle
pop
mov
(bad)
push
add
loop
in
fst
dec
sub
test
pop
and
cmp
enter
loopne
pop
rol
xor
retf
or
mov
les
mov
sub
cdq
jmp
or
mov
jbe
test
inc
repz
pushf
xchg
hlt
mov
pusha
push
adc
dec
gs
stos
(bad)
pop
sub
repz
loop
shl
mov
xchg
dec
(bad)
enter
sahf
dec
sbb
pop
daa
mov
pop
not
rol
mov
xchg
scas
cdq
ror
fwait
sub
nop
sbb
icebp
pop
inc
iret
sub
dec
mov
int
loop
mov
in
gs
push
arpl
rcl
mov
popf
loopne
dec
pop
push
mov
sti
jmp
jl
nop
inc
fs
bnd
pop
mov
test
fcom
xor
or
ret
dec
xor
dec
pop
sbb
push
mov
mov
stc
jmp
jb
addr16
mov
add
stos
dec
clc
lods
(bad)
jae
push
femms
jg
mov
(bad)
dec
mov
push
xor
popf
pop
(bad)
out
mov
retf
shr
sti
or
push
rol
icebp
jle
push
sbb
push
pop
and
pop
lea
pushf
je
jle
inc
out
js
pop
out
jbe
scas
jl
push
mov
mov
out
mov
test
mov
add
div
inc
mov
mov
inc
push
pavgw
popa
loopne
ret
push
xchg
loopne
sbb
sub
enter
dec
stc
ficomp
int
mov
hlt
jbe
adc
mul
and
out
scas
mov
ja
xchg
sbb
mov
cwde
test
jbe
loope
mov
cmps
mov
dec
sbb
jo
mov
adc
pop
shl
push
popa
lods
inc
stos
pop
scas
not
inc
and
mov
fstp
inc
into
fcomp
or
add
jmp
adc
pop
mov
mov
popa
xchg
cmps
lods
int
xchg
cdq
dec
call
inc
ja
in
ds
popa
scas
lods
pop
lahf
fwait
dec
jno
jae
pop
lea
hlt
push
test
sub
xlat
push
shl
or
test
adc
jnp
outs
sub
push
and
add
aam
out
mov
xor
imul
daa
clc
xchg
cwde
lods
and
imul
ret
xor
pop
(bad)
mov
aad
cmp
fld
retf
mov
cli
mov
retfw
cmp
mov
mov
shr
ret
ror
gs
inc
lahf
jbe
pop
mov
out
push
div
or
push
pushf
stos
leave
sbb
cli
jns
mov
rol
das
xchg
leave
shl
push
popf
add
cmp
test
and
out
mov
add
add
ret
xchg
loope
push
clc
ret
mov
cmp
hlt
aam
call
mov
jns
icebp
push
mov
jecxz
xchg
scas
pop
frstor
inc
push
mov
push
into
sti
inc
mov
pop
div
repnz
add
and
sub
or
rcr
mov
mov
and
test
idiv
inc
test
jecxz
dec
idiv
add
iret
popf
sti
bound
or
icebp
pop
(bad)
adc
sub
fstp
jno
(bad)
pop
xchg
div
mov
test
mov
mov
inc
cmp
xor
mov
mov
(bad)
out
xchg
repz
loope
test
pop
xor
leave
sbb
popa
leave
jmp
imul
pushf
mov
jno
aad
lds
fcomp
sti
scas
bound
mov
jne
dec
adc
jmp
not
imul
std
fistp
std
inc
add
and
sub
jnp
add
imul
lock
call
shl
sub
popf
out
iret
xor
jnp
xor
push
setl
cmp
ins
out
dec
shl
ds
sub
ret
cs
(bad)
mov
sbb
fwait
pop
fnstenv
das
cmp
mov
int3
cmp
leave
cdq
mov
xor
test
mov
les
ror
loop
mov
add
ins
daa
inc
fild
iret
sbb
add
retf
pop
fdivr
inc
pop
add
cmp
adc
and
cli
inc
sbb
popa
pop
and
loope
mov
test
cmp
shr
mov
lahf
les
stos
xor
loope
push
mov
int3
dec
cmc
xlat
cmp
out
call
pop
cmp
xchg
scas
xlat
jns
or
ss
mov
cmps
icebp
es
fs
mov
scas
lods
iret
and
sbb
mov
adc
arpl
sbb
scas
lea
adc
push
xchg
sbb
(bad)
ret
into
ss
fbld
add
mov
(bad)
cmp
je
jae
fs
mov
addr16
ret
test
loopne
pop
adc
and
cld
(bad)
cmp
out
mov
push
(bad)
sbb
cmp
in
out
dec
sub
jae
jp
hlt
fs
mov
jnp
xchg
pop
and
es
pop
mov
cmps
mov
mov
cs
pop
cmp
xchg
add
pop
in
dec
mov
retf
xor
mov
ds
rol
stc
sub
inc
test
pop
jle
loop
add
ldmxcsr
xchg
stos
cmp
cmp
loop
std
pop
sub
add
add
int
pop
mov
ficom
out
and
cmp
jb
sbb
mov
sub
daa
enter
into
sub
jg
cmp
lea
push
addr16
aas
hlt
add
mov
adc
jl
pop
out
mov
fsubp
in
nop
jo
adc
add
int3
xchg
test
or
or
idiv
sbb
fnsave
dec
or
push
sti
stos
cmp
or
cmp
sti
add
push
mov
bswap
add
sub
push
jbe
fiadd
ret
xor
cld
lds
or
xor
popa
adc
jmp
push
dec
in
fsubr
inc
and
or
sti
test
push
xchg
pop
adc
pop
stc
(bad)
add
pusha
int3
inc
into
or
pusha
pop
xchg
xor
dec
inc
mov
imul
bound
mov
adc
mov
ja
ror
pop
adc
ss
xor
jbe
adc
fwait
xchg
cmc
cs
pop
push
or
retf
jl
lods
dec
jbe
bound
inc
cs
or
pop
out
cmp
cwde
aas
bound
mov
or
pusha
xchg
mov
xlat
(bad)
xlat
add
xchg
movs
cmp
jmp
jo
jne
push
in
mov
mov
adc
clc
mov
mov
out
sub
mov
(bad)
out
retf
push
xchg
mov
(bad)
pop
mov
xor
(bad)
fsubr
push
clc
pop
xchg
(bad)
cmp
outs
icebp
xchg
inc
adc
and
je
jmp
xchg
loopne
xchg
rcl
fldl2t
push
add
cmp
cmp
addr16
cmp
cwde
dec
aaa
inc
fisttp
jle
inc
neg
iret
dec
pop
or
repnz
fist
out
gs
fild
jge
stc
inc
mov
sti
xor
xchg
cmp
cmps
ja
dec
movs
call
pop
(bad)
not
adc
and
add
call
out
rol
stc
xchg
mov
iret
ret
xchg
sub
cs
mov
mov
mov
pop
mov
cmps
loopne
xchg
inc
push
jp
out
pop
push
push
icebp
dec
sub
mov
dec
cdq
call
push
pop
xchg
sbb
mov
scas
out
pop
(bad)
das
xchg
push
ror
ud1
cmps
lods
sub
or
nop
scas
das
mov
jle
or
ror
dec
mov
call
lea
jo
jb
add
(bad)
es
push
inc
and
dec
loope
or
popf
das
fcom
addr16
inc
lds
in
sahf
and
in
push
rcr
lods
mov
mov
xor
mov
dec
adc
jno
jmp
out
mov
jg
inc
cdq
mov
pop
mov
in
nop
int3
ss
or
test
sbb
cwde
(bad)
jo
aam
call
into
inc
arpl
femms
(bad)
pop
dec
inc
int
xchg
mov
pop
dec
adc
or
out
xor
aam
xor
sub
lahf
xchg
icebp
int3
push
mov
pop
pushf
mov
cdq
out
test
fsubr
add
cli
cmp
pop
sbb
in
ja
sub
inc
push
dec
push
mov
lea
mov
mov
pop
sub
xchg
inc
in
sbb
xchg
lods
adc
sbb
sahf
retf
xlat
jecxz
test
mov
mov
jle
lods
leave
jbe
jae
mov
pushf
in
(bad)
out
mov
xchg
dec
les
mov
inc
mov
pop
cmp
pusha
mov
lock
outs
cmp
arpl
shl
jnp
jle
push
and
pushf
and
jno
fs
push
ja
nop
or
xchg
sbb
jo
loop
into
icebp
push
xchg
inc
xchg
mov
lahf
leave
aas
loop
and
imul
imul
ss
retf
pop
scas
inc
pop
cmps
gs
add
add
inc
iret
repnz
cmp
adc
xor
fcmove
stos
in
jo
or
aad
movs
xor
ins
sub
mov
sbb
mov
xchg
cmp
int
jecxz
stos
jp
je
call
adc
movs
cmp
jno
adc
imul
mov
(bad)
and
or
sub
and
ins
inc
scas
loope
test
jbe
lock
mov
mov
cmps
dec
pop
pop
outs
test
xchg
jp
mov
cmps
add
ins
lods
dec
pop
pop
movs
in
(bad)
int
nop
jno
xchg
popf
adc
cwde
push
ins
jne
dec
mov
push
es
retf
pop
in
(bad)
xlat
push
and
mov
lods
push
push
pop
or
jle
or
test
cwde
push
pop
pop
retf
iret
and
mov
sbb
pushf
aam
imul
iret
popa
add
inc
arpl
jmp
das
jbe
mov
mov
gs
pop
mov
(bad)
sbb
mov
imul
mov
xor
gs
cs
loop
call
and
xchg
xor
test
mov
mov
push
jne
ret
lods
(bad)
or
pop
push
(bad)
adc
dec
mov
adc
add
mov
dec
fnstenv
xor
mov
sar
mov
inc
stos
pinsrw
lea
xchg
and
in
sahf
rol
test
xchg
xchg
and
in
daa
inc
sbb
mov
xor
pop
idiv
test
cld
xlat
xor
call
(bad)
hlt
add
adc
pop
xchg
in
imul
or
mov
arpl
in
ret
nop
mov
cmp
push
fistp
aad
adc
data16
sub
popa
rcl
mov
xchg
jae
mov
push
mov
sub
push
cdq
pop
jl
push
lahf
mov
push
movs
jnp
rol
xchg
inc
cli
fist
inc
inc
clc
ret
in
mov
pop
pop
push
rcl
inc
rol
xchg
xor
outs
xchg
mov
xor
(bad)
push
sahf
fs
jns
in
rcr
bound
and
arpl
dec
pop
adc
xor
mov
test
in
movs
pop
mov
fmul
scas
out
mov
aad
sbb
cmp
dec
fwait
ror
int
sub
inc
int3
scas
inc
aad
ds
es
hlt
loope
sub
sub
push
cdq
popa
mov
jno
cld
outs
call
(bad)
out
xchg
cmps
fadd
pop
jge
ss
mov
sub
retf
mov
dec
xor
jnp
lds
lahf
sbb
sbb
sti
fbld
xor
push
fwait
xchg
outs
sar
cmps
stc
or
inc
xchg
lea
jecxz
add
mov
adc
jne
push
clc
test
jae
cdq
in
icebp
aaa
sbb
mov
or
inc
add
adc
icebp
jne
adc
mov
pop
pop
pop
or
clc
inc
es
cmps
sub
inc
lahf
sub
in
adc
adc
dec
sbb
outs
adc
(bad)
data16
or
jmp
cmp
dec
pop
iret
movs
in
stos
xor
cmp
lds
inc
sti
xchg
sbb
scas
and
loope
jb
jo
test
js
add
sbb
add
std
mov
sti
fdivr
mov
mov
ins
test
ret
call
mov
xchg
fisubr
ficom
inc
or
or
or
in
je
xchg
rol
fwait
dec
jg
inc
or
loope
addr16
mov
data16
mov
idiv
mov
fmul
(bad)
mov
stos
push
adc
pop
mov
aas
movs
and
jo
adc
retf
ins
inc
pop
repnz
es
inc
push
sbb
imul
xor
ror
mov
xor
mov
jl
ret
dec
aam
jns
pusha
xor
es
xor
add
retf
push
lods
(bad)
mul
pop
add
inc
(bad)
jmp
mov
xchg
mov
cmp
xor
lds
aaa
in
mov
test
cmp
and
jnp
dec
pop
sub
bound
popa
and
out
sahf
test
retf
sub
lea
jge
xchg
adc
mov
addr16
add
retf
xchg
pop
loopne
(bad)
sar
add
clc
outs
sar
out
rol
jp
sbb
imul
xchg
jnp
retf
pusha
cmps
icebp
call
inc
test
xor
add
pop
stos
mov
or
repnz
lahf
aas
and
int3
mov
daa
xor
iret
loopne
dec
mov
jbe
push
dec
xor
mov
in
mov
leave
sub
aaa
push
loop
in
jno
cmp
scas
stc
sbb
add
ja
or
shr
or
call
or
iret
in
push
aad
add
mov
adc
jnp
stos
cdq
push
pop
mov
pop
fwait
in
mov
retf
scas
jo
sar
mov
sub
and
scas
cs
call
xor
mov
mov
fdiv
sub
(bad)
es
mov
out
cmp
inc
inc
out
jg
cmc
xor
dec
add
xor
stos
loopne
cld
sbb
inc
jmp
jae
cmp
or
sub
jns
js
in
sub
sahf
mov
jae
int3
or
rcr
ss
sub
cwde
inc
retf
test
add
(bad)
adc
jmp
in
not
adc
cmp
dec
(bad)
xor
leave
aas
aaa
test
cli
ss
xchg
mov
retf
retf
fld
pop
jno
shl
lock
test
test
mov
sub
xor
sbb
xor
je
jp
addr16
(bad)
repz
cli
push
push
adc
xchg
jg
sahf
retf
push
pushf
lahf
int
stos
and
mov
cmc
mov
mov
mov
cmp
ret
sahf
jmp
mov
push
jmp
in
xchg
sbb
inc
adc
pop
rcl
inc
mov
retf
push
out
cmps
ins
cli
int
push
add
in
lahf
gs
loop
out
mov
retf
loop
(bad)
stc
adc
and
push
cwde
mov
or
cmp
cmp
das
lock
pop
add
mov
in
mov
enter
(bad)
add
movs
aas
sub
or
inc
stos
mov
cmp
xor
dec
inc
retf
jnp
sub
pop
push
xchg
cld
mov
push
imul
or
pop
inc
sub
lods
mov
movq
jne
mov
adc
call
cmp
adc
retf
loope
xchg
fwait
dec
jnp
cmp
pop
or
sub
pop
in
ja
lods
xor
xor
(bad)
pop
popa
cmp
fs
cld
(bad)
test
(bad)
dec
je
loop
(bad)
int3
out
sti
mov
pop
stc
inc
test
or
xor
xchg
adc
xchg
popa
cmp
lahf
cmp
lods
arpl
hlt
shl
cmp
(bad)
lods
inc
adc
add
aaa
mov
aas
lock
push
test
dec
je
ins
xchg
stc
jbe
mov
sti
cmp
adc
xor
sbb
imul
test
shl
pushf
cmp
xchg
jae
arpl
pop
add
in
mov
loopne
fsub
es
lds
cmp
hlt
xchg
cdq
mov
and
fisttp
retf
lock
xor
pusha
ins
dec
sbb
ds
push
add
mov
cmc
sar
or
jns
scas
in
gs
out
scas
in
push
int
stos
sub
lahf
loopne
sub
fistp
and
add
inc
out
pop
je
repnz
xchg
cmps
scas
icebp
sbb
mov
retf
jecxz
pusha
dec
clc
retf
add
js
gs
add
pushf
lods
and
call
icebp
js
sub
mov
aam
dec
sub
enter
inc
shl
std
xchg
xchg
xchg
and
jae
in
(bad)
push
adc
inc
xchg
mov
(bad)
sbb
scas
dec
dec
mov
xor
add
dec
mov
ins
movs
lods
inc
out
sbb
dec
sbb
outs
inc
add
fs
shr
mov
sbb
sbb
sub
(bad)
imul
sbb
push
hlt
add
call
mov
in
aaa
mov
cwde
out
in
mov
inc
sbb
je
repz
jg
mov
jno
push
call
adc
cmp
test
pop
or
ja
jecxz
and
dec
jbe
lahf
les
lods
retf
loopne
xchg
out
outs
ins
xchg
int
lea
xchg
les
sar
sub
js
sbb
inc
fidivr
clc
out
movs
push
fchs
or
sub
inc
rcr
cmp
mov
aaa
adc
jg
mov
in
jmp
xchg
mov
fcom
test
enter
aad
push
test
fsubr
jp
call
jl
call
sti
loope
(bad)
fist
and
fild
jp
das
test
mov
adc
aad
ret
mov
repz
push
add
push
adc
scas
dec
sbb
bound
lahf
hlt
jg
cmps
popf
int3
mov
cmps
add
dec
push
jmp
xor
xlat
daa
retf
shl
jl
ins
push
mov
rol
lahf
cld
xchg
xchg
ret
jg
shr
ss
fist
ins
lea
inc
or
cwde
add
pop
loopne
outs
jecxz
push
cmovb
jg
adc
pop
fmul
xor
mov
and
(bad)
mov
sbb
adc
stos
test
lahf
jmp
dec
mov
mov
mov
cbw
cmp
xor
inc
xchg
aad
mov
push
xchg
adc
out
ret
ss
and
(bad)
sbb
out
fcom
(bad)
sti
cmp
xchg
push
jge
test
lods
aaa
cdq
pop
mov
dec
sbb
std
jnp
fist
loop
pop
inc
and
les
mov
(bad)
adc
inc
mov
sbb
mov
cmp
mov
js
fild
sub
xor
push
lods
dec
pop
int
adc
cmps
add
pop
xor
mov
(bad)
cli
imul
gs
jo
out
sahf
push
enter
pop
adc
aas
mov
jmp
retf
jnp
mov
jbe
push
loop
repz
mov
cld
or
sub
lods
pushf
ins
xlat
sub
aam
mov
ret
in
aad
out
in
xor
lds
jecxz
push
jo
mov
inc
ror
inc
add
xor
add
repnz
push
je
pop
sar
mov
pop
mov
imul
outs
add
dec
and
sbb
sti
jo
dec
bound
cmp
adc
jle
fucomip
cmp
scas
and
std
int
ret
pop
in
fldcw
movs
or
add
jb
mov
mov
scas
and
stos
mov
push
sub
xchg
jl
jae
popf
xchg
adc
call
fist
mov
jno
mov
in
cdq
test
dec
adc
lds
ds
in
cli
sbb
mov
cmc
or
fisttp
inc
add
popa
xchg
adc
push
fs
jns
inc
mov
xor
out
or
cmp
icebp
mov
ficomp
lahf
dec
lds
push
cld
ss
sub
in
int3
fsubrp
bnd
stos
push
call
push
jge
jecxz
pop
in
(bad)
pop
xchg
out
mov
pushf
add
mov
out
push
mov
push
repz
pusha
test
ins
mov
cmp
push
sub
fcom
jno
stc
mov
cld
fcomp
into
inc
cmp
in
or
out
in
dec
out
in
(bad)
fnstsw
les
xor
sbb
push
pushf
ret
sub
aas
cmp
out
test
xor
adc
mov
mov
push
inc
xchg
test
mov
push
inc
inc
mov
fwait
sub
xor
jle
mov
loop
mov
inc
div
pop
cwde
xor
adc
push
cdq
jg
call
arpl
das
adc
push
pop
mov
nop
lods
sbb
cmp
add
loope
adc
out
shl
pop
cs
shl
sbb
aaa
jmp
add
mov
ss
sub
in
jl
stc
add
xchg
push
retf
test
pop
repz
daa
xchg
test
jp
mov
(bad)
popa
jmp
dec
or
mov
cmp
pushf
pop
test
or
xor
loope
push
push
aas
push
into
dec
nop
push
jno
loope
test
dec
pop
aas
adc
outs
sti
mov
push
cmp
int3
pushf
cmps
xchg
ja
pop
mov
int
jmp
sbb
call
push
xor
jle
gs
ja
les
dec
dec
mov
xor
fs
outs
jno
jb
and
cmp
(bad)
loop
inc
cld
add
xor
xlat
sub
retf
cmp
xlat
int
mov
div
movs
into
fisttp
sar
adc
adc
sbb
cmp
in
push
jnp
xor
sbb
jg
sahf
aam
adc
ja
mov
jnp
loopne
inc
or
ins
movs
repz
mov
call
ins
inc
adc
test
jg
xchg
or
(bad)
pusha
push
gs
daa
push
icebp
loope
gs
pop
popf
xor
iret
push
and
pop
pop
movs
cdq
mov
xchg
cs
out
retf
push
stos
dec
jbe
(bad)
in
rcl
pop
addr16
test
es
mov
mov
int3
jmp
or
je
in
imul
imul
jo
pusha
out
scas
cmp
scas
fimul
aad
mov
and
sub
imul
jo
data16
xor
jmp
jno
hlt
inc
jmp
or
pushf
add
pop
call
pusha
ja
ss
mov
jp
(bad)
out
mov
ja
outs
adc
mov
sub
push
fnstsw
pmaddwd
jno
out
fistp
jnp
lahf
inc
pop
dec
sbb
inc
add
jbe
scas
das
daa
xchg
inc
or
or
jp
movs
add
and
push
imul
retf
push
stos
stc
movs
adc
adc
jns
push
je
dec
mov
sti
xor
sbb
shl
scas
or
sub
jecxz
cmp
ret
mov
cwde
jno
xor
mov
mov
dec
stc
dec
retf
(bad)
or
int
in
in
xor
add
icebp
xor
fcmovnbe
jb
in
push
dec
jo
mov
add
or
mov
jne
arpl
adc
lock
stos
adc
mov
out
mov
bnd
lock
(bad)
into
inc
inc
stc
inc
out
mov
dec
pop
shl
movzx
test
sub
mov
aam
dec
lds
(bad)
sbb
mov
push
pop
das
adc
push
arpl
in
xchg
inc
cs
and
dec
iret
hlt
lahf
jl
pop
lods
xlat
pop
inc
sbb
(bad)
dec
inc
ins
dec
cmp
movs
ret
jecxz
fisubr
dec
jg
jmp
int3
sbb
jg
jle
fs
sub
or
daa
ins
push
(bad)
out
hlt
pop
mov
mov
mov
mov
xor
xor
push
sahf
adc
cmp
out
fisttp
test
std
pop
adc
push
ss
pop
mov
cs
dec
ret
lahf
adc
retf
push
ret
jge
int3
outs
ins
pop
call
cmp
ss
mov
adc
test
lahf
jo
jbe
push
jo
sbb
push
pushf
sub
pop
daa
stos
ins
lock
sbb
sti
xchg
xchg
mov
mov
dec
cmps
fist
push
dec
inc
sub
xor
sbb
js
int
sub
jb
mov
and
ins
jle
popf
mov
xchg
call
mov
pop
cmc
xchg
or
rol
mov
iret
jno
push
xchg
xor
jmp
js
cdq
call
inc
jp
js
in
and
ins
sub
mov
push
test
xchg
ins
xchg
cmp
icebp
inc
lea
shl
das
fmul
add
loop
and
mov
lods
and
pop
cmp
stos
xor
adc
dec
test
dec
inc
cmps
inc
cmps
les
pushf
pop
mov
and
pop
scas
mov
jmp
lahf
mov
popf
std
stc
mov
jl
sbb
out
ins
sbb
dec
int3
xor
sar
(bad)
stc
push
push
sub
dec
and
push
mov
(bad)
in
stc
mov
jl
pop
adc
ss
xchg
jmp
mov
hlt
loope
add
jge
jne
adc
jns
fstp
mov
cmps
mov
ret
lds
mov
adc
and
stc
mov
(bad)
in
std
mov
mov
lahf
jae
push
push
test
pop
ins
jbe
dec
jp
add
add
xor
lds
and
popa
jbe
inc
fisttp
xor
xchg
ss
ins
pop
xor
xchg
fnsave
lods
cli
pop
mov
mov
stc
mov
add
sub
fs
cdq
dec
and
sub
mov
loopne
or
mov
pushf
aam
mov
pushf
lea
and
pusha
pop
pop
mov
fwait
clc
ret
mov
and
call
dec
ret
mov
dec
out
xchg
sub
(bad)
imul
or
push
cmc
fs
icebp
push
int3
and
ja
mov
mov
cmc
gs
(bad)
fprem1
mov
popf
dec
sbb
ret
mov
mov
imul
rol
pop
ss
push
iret
and
imul
pop
into
push
retf
inc
(bad)
push
stos
xor
clc
test
lahf
sbb
mov
mov
loope
xor
add
rcr
cmp
inc
add
jb
xor
inc
out
xor
iret
add
ins
push
dec
inc
inc
aas
mov
lea
loopne
xchg
xlat
test
pop
mov
sub
outs
sar
xchg
sbb
sbb
cmps
adc
jg
cmc
ror
je
dec
ret
or
cwde
das
push
adc
sub
call
rcl
sub
or
fdivr
dec
cmp
shl
sar
inc
jbe
jne
aam
retf
bound
mov
in
sbb
pop
and
cwde
push
fidiv
fstp
mov
add
(bad)
das
jl
inc
fcomi
add
jl
inc
repnz
movs
out
add
retf
cli
xor
mov
or
cli
icebp
into
xlat
sti
fwait
stos
aad
dec
xchg
pop
xlat
out
jbe
arpl
aam
(bad)
dec
scas
add
arpl
jo
stos
sahf
xor
mov
ret
push
dec
jno
fadd
mov
js
out
ins
lods
cmp
mov
ins
dec
icebp
add
das
jg
xchg
push
push
sti
ret
jbe
add
mov
aaa
out
inc
inc
mov
sahf
retf
push
inc
mov
push
push
in
and
dec
xchg
add
inc
mov
in
ror
lds
dec
dec
repnz
loop
inc
jmp
pop
sub
addr16
push
in
push
outs
cmp
mov
mov
xchg
fisub
push
dec
retf
in
inc
push
push
stos
lock
(bad)
(bad)
loopne
push
stos
mov
movs
add
xor
out
out
loope
add
pop
sub
xchg
es
xchg
add
dec
test
retf
hlt
add
cmp
jmp
pushf
mov
stos
cmp
in
xchg
mov
inc
xchg
cli
jge
sbb
xor
add
fdiv
cmc
jnp
retf
and
rcl
and
dec
mov
les
mov
xor
mov
sub
retf
cdq
rol
cs
mov
(bad)
(bad)
push
mov
ss
imul
stos
or
add
pop
test
movs
inc
push
pushf
test
xor
push
out
or
cmp
push
inc
loope
ja
ret
mov
cmps
scas
(bad)
cmps
test
ret
sar
xchg
lods
inc
repnz
jle
dec
inc
dec
mov
(bad)
jmp
xchg
jl
inc
pop
idiv
fist
out
scas
mov
aad
test
pop
ret
arpl
shl
jns
loopne
xchg
movs
pop
mov
lahf
adc
and
inc
cmp
into
in
adc
fidivr
add
and
sbb
js
jp
ins
inc
jle
dec
push
ja
ins
mov
stos
mov
adc
fist
dec
and
icebp
popa
jmp
pushf
xlat
(bad)
push
lods
es
test
movs
loop
mov
stos
scas
arpl
dec
jne
push
cmp
push
fidiv
test
inc
cmp
xchg
outs
sbb
and
int
rcr
addr16
push
mov
retf
push
cmc
das
cld
into
mov
dec
cdq
push
jmp
xchg
popa
das
outs
push
or
dec
and
call
add
not
clc
cli
int
bound
push
lods
(bad)
lea
push
push
std
rol
out
sbb
nop
ror
push
jecxz
sub
push
rol
ins
adc
or
test
ins
adc
adc
dec
jmp
repz
jns
add
mov
rcl
inc
cmps
jmp
pop
push
dec
add
push
dec
mov
adc
nop
data16
ror
lds
or
jg
mov
or
sbb
clc
je
pop
xchg
adc
test
dec
ficomp
or
sti
mov
repnz
ja
repnz
mov
es
leave
cli
or
ss
lds
fidivr
cdq
scas
mov
push
ins
shl
addr16
out
(bad)
fst
or
mov
mov
aaa
adc
lea
xor
in
xchg
push
push
sbb
fucomip
call
fwait
int
adc
aaa
icebp
or
ja
std
stc
scas
sub
fsubr
leave
loope
cmp
cs
icebp
div
fld
xchg
imul
jl
loopne
loop
jae
add
dec
test
mov
inc
xor
ss
arpl
out
or
sub
fisubr
bound
movs
sbb
cli
xchg
jl
xchg
rcl
sahf
(bad)
ins
add
ret
adc
jl
pop
outs
es
in
dec
add
inc
repnz
and
setb
shl
aaa
pop
push
cs
or
into
pop
or
jle
jae
aam
jns
ins
jecxz
and
cmp
mov
lea
push
daa
in
mov
mov
cmp
or
test
aam
push
(bad)
hlt
(bad)
or
pop
add
cmp
fild
mov
xchg
add
aas
mov
ror
out
cmp
jg
sbb
push
dec
mov
jle
pushf
xor
add
or
lock
push
rcl
jns
inc
cdq
retf
ss
xlat
jb
enter
jbe
shl
dec
mov
jns
(bad)
lock
inc
sti
adc
adc
fmulp
sub
cli
add
pop
cmp
ja
xchg
pusha
pop
xor
dec
mov
adc
addr16
fimul
mov
shr
pop
pop
xchg
xchg
mov
in
(bad)
mov
int
mov
jnp
mov
(bad)
jmp
into
mov
push
dec
mov
out
xor
cmps
(bad)
mov
(bad)
imul
cmps
pop
stos
pusha
ins
movs
lock
adc
retf
aas
push
es
scas
xor
scas
mov
push
jp
adc
inc
mov
stos
pop
dec
jbe
mov
jo
test
xchg
adc
pop
outs
jb
fisubr
ins
cmp
in
xchg
dec
dec
in
outs
movs
dec
xchg
movs
inc
sub
cwde
imul
dec
mov
add
sub
jb
in
pop
inc
jg
cmp
jnp
js
mov
sbb
out
loope
jae
pusha
xchg
and
sbb
lea
jbe
add
jne
xchg
or
daa
and
lods
pop
sub
(bad)
icebp
pop
iret
gs
mov
xor
and
xchg
mov
mov
cmps
loop
iret
push
xchg
lea
xlat
sar
loop
sti
mov
jns
aad
cs
pop
daa
xor
adc
pop
imul
(bad)
xor
test
push
cmp
stos
sbb
push
pop
adc
das
stos
cld
lods
pop
imul
ror
push
mov
ret
movs
xlat
in
pop
cmp
es
mov
into
ror
loope
push
jns
inc
addr16
aas
push
add
sahf
out
test
cmp
or
aam
mov
imul
clc
xor
sbb
loope
pop
sahf
dec
repz
(bad)
into
xchg
mov
xor
(bad)
push
cmp
(bad)
cwde
dec
and
sub
iret
mov
mov
mov
dec
out
pop
fwait
cmp
mov
outs
jl
push
shr
xor
push
adc
jp
mov
(bad)
cli
inc
push
stc
inc
std
push
lock
push
retf
test
push
imul
add
adc
fnstenv
jl
sub
popa
xchg
sbb
je
jle
dec
dec
test
jne
cld
push
and
out
ins
out
test
pcmpeqb
mov
stc
(bad)
cmp
push
stos
push
std
mov
ss
sbb
cmp
cmp
ror
lahf
rcr
add
pop
mov
inc
repnz
ss
dec
fnstenv
enter
jb
cdq
ficomp
(bad)
std
js
sub
mov
dec
inc
mov
imul
mov
add
push
(bad)
retf
cmp
mov
test
aad
xor
mov
jg
daa
and
sbb
stos
xchg
add
sbb
popf
sti
mov
popa
ds
push
fstp
ror
push
mov
leave
bound
pushf
jbe
inc
mov
cwde
add
sbb
mov
jecxz
mov
sub
pop
popf
fnclex
stos
popa
sar
mov
xchg
in
outs
add
ret
dec
lahf
rol
in
xor
in
pop
add
inc
cmp
adc
inc
xor
aam
adc
mov
dec
xchg
out
push
add
mov
mov
dec
jmp
sbb
xor
es
and
cmp
inc
fistp
push
stc
outs
or
mov
dec
push
pop
loop
xchg
mov
retf
push
(bad)
mov
int3
dec
cmp
push
lds
fisttp
xchg
and
adc
xchg
fistp
jp
enter
movs
pusha
sti
mov
addr16
repnz
lds
push
ss
repz
dec
pop
sbb
dec
popa
aad
test
ss
rcl
jmp
sub
sbb
into
in
adc
loopne
in
mov
aam
sbb
dec
dec
(bad)
mov
and
adc
into
xchg
dec
xor
call
xchg
pop
dec
les
and
sbb
dec
mov
cmp
mov
daa
mov
imul
int
loopne
div
in
int3
and
movs
cmp
inc
aam
jb
xchg
pusha
dec
pop
cmp
retf
mov
pop
(bad)
jmp
push
adc
jb
shl
dec
cmp
inc
mov
ds
imul
or
pusha
cs
jecxz
sbb
push
xchg
mov
push
xchg
xchg
jp
cli
cmps
test
loop
inc
mov
or
jnp
repnz
sub
fwait
test
mov
cdq
mov
aad
inc
neg
sub
ret
ret
aad
or
xor
mov
xchg
xor
stos
jle
test
push
dec
iret
mov
add
lods
xchg
add
cmp
cmp
mov
(bad)
push
scas
xor
cmp
dec
adc
aaa
ret
add
cmp
call
push
adc
retf
push
jne
outs
aad
in
add
jmp
jbe
or
mov
and
push
popa
mov
inc
icebp
sub
gs
pop
lahf
das
jecxz
xchg
mov
push
outs
dec
cmps
mov
and
sub
pushf
out
outs
adc
or
int3
rol
das
and
fistp
sbb
(bad)
in
push
inc
scas
mov
mov
pop
jbe
add
or
add
(bad)
ss
fbld
test
stos
pop
(bad)
mov
scas
or
sti
wrmsr
mov
sar
je
jecxz
push
aad
fwait
arpl
cli
pop
xor
pop
push
mov
jmp
movs
out
sbb
mov
lods
das
mov
add
or
or
adc
dec
in
aad
repz
mov
xchg
loop
sub
loop
loope
push
sub
data16
push
and
pop
aaa
pop
jmp
sbb
mov
and
mov
mov
or
lea
jmp
inc
mov
imul
dec
leave
xor
dec
jne
inc
aad
push
das
cld
or
jbe
push
fsub
pop
cmp
xchg
sub
mov
push
sahf
and
inc
jne
stos
and
xor
int
push
mov
pop
or
xchg
stc
test
add
and
mov
ss
std
lds
sub
mov
xchg
ja
dec
aam
in
push
cli
call
pusha
jno
(bad)
sub
mov
sbb
sbb
cmp
les
loop
pop
mov
mov
sbb
xor
cmps
pushf
mov
add
mov
jge
dec
pop
xor
xlat
data16
mov
cmp
jp
nop
xor
mov
jae
mov
xchg
retf
xchg
mov
or
pusha
or
in
mov
xchg
xchg
mov
push
mov
mov
lock
mov
or
dec
cld
into
nop
(bad)
js
outs
outs
jmp
add
push
fisubr
add
in
(bad)
(bad)
in
mov
xchg
jbe
lahf
cmp
add
hlt
outs
sbb
xchg
sbb
in
inc
sub
adc
jae
test
cmc
mov
mov
or
jbe
vmread
cmp
test
out
cmp
ja
xlat
lahf
xor
jl
or
dec
mov
movs
adc
rcr
scas
mov
mov
(bad)
retf
rol
dec
fistp
ss
ins
popa
imul
stos
xchg
les
pop
mov
add
scas
outs
jae
jle
cmp
mov
xlat
daa
dec
mov
imul
int
aaa
mov
fnstcw
and
sub
daa
or
mov
ret
aam
repz
fistp
lea
xor
mov
dec
or
cmp
sub
xchg
cmps
and
adc
cli
dec
or
push
sbb
xlat
jg
jmp
test
cmp
pushf
jecxz
fwait
cmp
cmp
pop
push
add
pop
xor
je
lahf
out
jnp
lahf
stc
push
sub
(bad)
retf
jns
loop
pop
sub
jae
jo
mov
mov
fs
pop
jnp
add
hlt
mov
xor
or
fisubr
xor
inc
fistp
loop
xor
iret
mov
inc
sub
(bad)
cmp
je
adc
cdq
sub
daa
loope
out
fmul
push
jne
stos
and
push
ds
popa
lods
add
pop
mov
dec
xor
xor
dec
in
movs
mov
push
imul
mov
mov
pop
out
or
ficom
addr16
call
push
xor
sub
es
push
imul
push
cli
or
out
daa
pop
in
out
(bad)
fistp
out
xor
fwait
loop
add
arpl
(bad)
adc
or
jge
jo
sbb
add
nop
shl
js
add
sub
push
loope
stc
nop
dec
and
rcl
ja
mov
scas
jecxz
push
inc
xchg
xor
xchg
sub
ret
dec
int
push
sub
inc
lea
and
pop
xchg
(bad)
je
(bad)
xor
and
jns
mov
mov
les
push
jnp
fistp
jp
xor
push
gs
loop
popf
lock
les
xor
or
ss
dec
clc
call
fsub
or
jmp
or
fdivr
(bad)
dec
xchg
popa
mov
inc
movs
push
add
mov
fwait
and
inc
jb
sahf
ins
(bad)
mov
sbb
adc
and
dec
push
adc
scas
xchg
and
stos
mov
jle
mov
push
data16
dec
loopne
ins
adc
fcmovne
fbstp
add
inc
pop
jbe
dec
adc
popa
std
ret
frstpm(287
push
mov
mov
call
push
lea
dec
call
adc
out
neg
and
arpl
dec
sbb
inc
mov
push
mov
repnz
adc
cmps
aas
retf
cld
test
(bad)
ins
rcr
scas
xchg
pop
mov
in
jge
(bad)
not
neg
sub
rol
bound
push
pop
cld
push
outs
adc
push
bound
jle
sbb
add
inc
out
inc
mov
cmp
cs
das
add
inc
fldln2
mov
outs
call
nop
mov
in
add
mov
sahf
movs
cmp
pop
sub
adc
call
mov
and
adc
mov
outs
dec
pop
dec
inc
mov
jne
imul
push
pop
xchg
js
inc
jnp
lods
cli
inc
std
dec
mov
and
int
test
lahf
add
(bad)
out
push
imul
(bad)
push
dec
mov
inc
sbb
stos
xchg
pop
inc
fcmovb
(bad)
daa
inc
xor
cdq
das
add
push
or
mov
or
das
mov
mov
pusha
js
es
ret
pop
pop
aam
xor
cmp
xchg
mov
jmp
xchg
cmps
mov
pop
sub
cwde
xor
pop
or
lods
add
xchg
fiadd
dec
je
add
mov
pop
ror
mov
inc
vpsubusb
icebp
aaa
xchg
or
call
stos
sbb
(bad)
cmp
mov
movs
jp
scas
inc
inc
in
icebp
test
sub
jl
leave
movs
mov
push
jg
(bad)
imul
pop
dec
cmp
push
test
aad
xor
or
sub
popf
push
mov
push
aas
outs
fdiv
out
in
pusha
mov
jl
inc
nop
fdivrp
loop
push
dec
mov
and
std
movs
sbb
pop
cli
xchg
cld
in
adc
sub
sbb
inc
push
(bad)
adc
rcl
xor
add
push
je
fstp
aaa
mov
xchg
dec
js
enter
inc
fs
cdq
pop
adc
cmp
push
mov
ja
fisub
mov
sbb
xor
jbe
xchg
(bad)
nop
pop
or
aas
scas
cmps
sub
leave
mov
lods
(bad)
call
xchg
sti
call
add
rcr
mov
sub
lods
or
repnz
mov
out
adc
cmp
test
xor
push
and
cmp
enter
stc
dec
fidiv
mov
adc
pop
jne
fist
cwde
add
repnz
inc
mov
push
or
jmp
mov
cmp
adc
ss
push
push
jnp
fdivr
xor
ret
pushf
jb
ret
les
jbe
mov
and
mov
dec
xor
and
les
ins
xchg
daa
loopne
add
sbb
call
(bad)
stos
daa
add
push
mov
add
xor
(bad)
sub
xchg
jno
pop
loope
jmp
push
jae
mov
test
popf
(bad)
adc
rcl
mov
out
scas
dec
mov
sub
test
mov
xor
stc
retf
stos
es
out
into
dec
pop
or
xor
cmps
ret
or
lods
pop
lahf
mov
xchg
sub
cmps
aam
test
and
dec
or
push
pop
jmp
(bad)
cmp
cmc
mov
fidiv
or
adc
dec
and
pop
fisttp
mov
cld
push
cs
xchg
jbe
inc
cmp
loop
mov
lahf
mov
lahf
xchg
fnstenv
jp
dec
les
scas
adc
iret
xor
jnp
pop
mov
movs
or
cwde
or
push
pop
sahf
and
and
test
add
nop
movs
popa
pushw
cmp
stc
xchg
add
rol
xchg
and
fcom
xchg
les
pop
retf
not
enter
dec
sbb
and
adc
mov
pushf
mov
aas
or
loope
or
mov
xchg
dec
fwait
rcl
push
loop
int3
ret
dec
movs
push
movs
daa
cmp
xchg
cmp
repz
mov
sub
(bad)
stos
pushf
jno
(bad)
pop
das
xchg
cmp
push
retf
dec
popa
sahf
inc
aam
jb
jo
not
and
inc
lahf
jl
push
pop
xor
outs
cld
xchg
inc
sbb
std
pop
pop
stos
mov
es
push
and
into
(bad)
lea
pop
cli
mov
lds
dec
dec
retf
sub
jo
cld
repnz
mov
inc
and
adc
pop
or
jle
dec
cmp
aas
push
cmp
mov
sbb
call
pop
jns
add
repnz
jle
adc
mov
mov
(bad)
and
shl
pop
jns
std
lahf
xlat
mov
addr16
mov
inc
cmp
pop
adc
xchg
sbb
inc
mov
scas
aas
xchg
enter
cli
mov
test
dec
push
aam
jmp
mov
add
(bad)
std
mov
into
inc
(bad)
push
cmp
jge
lds
cmp
jne
and
jns
call
stos
in
ja
hlt
jae
sahf
xchg
inc
xor
mov
gs
jb
int
in
mov
call
jmp
jno
jns
xor
(bad)
jecxz
cmp
sub
out
test
or
call
sbb
mov
icebp
enter
mov
add
mov
push
inc
cmps
icebp
aad
dec
adc
cmps
nop
adc
(bad)
xchg
xor
fst
lahf
or
je
jle
jns
mov
sub
ins
clc
pop
fs
and
and
mov
dec
aam
imul
or
(bad)
adc
jno
jae
adc
xchg
cmp
movs
mov
mov
and
jo
pushf
arpl
movs
push
js
dec
cs
dec
std
ret
sub
add
pushf
pop
mov
adc
dec
call
dec
leave
inc
cmovl
rcr
adc
jecxz
sub
xor
mov
imul
cld
loop
scas
xchg
cmp
and
or
dec
pop
mov
fcomi
ret
imul
pop
xchg
mov
xlat
mov
pushf
js
stc
imul
mov
push
jno
iret
jo
dec
mov
push
(bad)
movs
(bad)
dec
es
mov
imul
mov
dec
into
(bad)
test
das
mov
add
and
ins
movs
mov
stos
jecxz
and
rcl
push
hlt
mov
add
loopne
inc
sar
or
in
ret
push
(bad)
xchg
popf
cli
cs
lahf
gs
dec
xchg
bound
inc
mov
or
mov
push
push
popa
ins
xor
mov
push
ins
cld
or
idiv
into
loope
pop
inc
dec
out
out
jnp
cld
xchg
mov
xchg
(bad)
test
rcl
nop
push
fcom
in
inc
call
(bad)
ret
push
and
xor
push
ficom
jb
cld
xor
(bad)
nop
mov
inc
mov
adc
imul
sbb
push
push
ret
dec
adc
and
cs
pop
xor
jmp
rol
sub
sub
fisubr
sub
pop
xor
jb
adc
repnz
dec
(bad)
xor
pop
xchg
jle
pop
inc
cmp
lods
mov
xchg
retf
fdivr
pop
fmul
jmp
outs
mov
aam
outs
push
dec
fldcw
(bad)
push
stos
mov
sar
pop
sub
fwait
movs
and
cmp
das
xchg
mov
int3
add
(bad)
packsswb
push
and
xchg
jns
and
out
mov
pop
popa
or
pop
jne
inc
mov
repnz
dec
scas
test
sbb
shl
mov
mov
std
push
(bad)
ins
cmp
or
stos
xor
test
repnz
mov
ror
lods
mov
push
nop
mov
push
xchg
das
daa
jns
push
sbb
(bad)
fneni(8087
adc
mov
sub
dec
js
adc
xor
adc
adc
or
and
push
xor
push
xor
mov
aas
call
imul
cmps
out
add
fs
pop
pop
add
rcl
sar
call
call
and
dec
shl
mov
xchg
adc
das
test
pop
inc
in
inc
imul
push
mov
inc
(bad)
sahf
js
jmp
not
mov
ud1
nop
(bad)
idiv
cmp
leave
popf
fild
pop
call
loope
call
in
shr
xchg
loopne
add
fisub
lea
js
nop
dec
sbb
idiv
mov
inc
imul
mov
inc
(bad)
stos
movs
xchg
test
dec
loop
dec
xchg
mov
mov
inc
into
call
cmp
adc
outs
cmp
lods
inc
dec
adc
mov
mov
xor
(bad)
or
adc
push
out
jnp
inc
and
mov
push
cmp
adc
dec
stos
aam
mov
dec
mov
jne
jns
sub
ret
xor
and
inc
adc
sub
mov
xchg
jns
loop
call
push
cmp
cmp
(bad)
cmp
xchg
sysret
or
in
dec
leave
ficom
inc
adc
cmp
mov
leave
jnp
test
data16
adc
fstp
rol
xor
in
xor
jg
mov
in
inc
data16
push
outs
fnstcw
addr16
(bad)
retf
or
mov
pop
sbb
ret
jl
stos
shl
shl
mov
stc
int3
sbb
fldcw
cmc
scas
std
mov
call
clc
or
add
(bad)
pusha
jp
inc
enter
push
sub
rcl
(bad)
xchg
hlt
aaa
xchg
push
imul
mov
mov
sbb
sub
sbb
stos
(bad)
cmps
mov
sbb
in
daa
bound
mov
fwait
ror
mov
ret
dec
xor
cmp
and
dec
jge
cmp
mov
dec
cmp
xchg
mov
and
mov
aam
pusha
pop
dec
nop
inc
ficom
dec
das
mov
ds
fnsave
sbb
jo
or
dec
cmp
mov
(bad)
or
repnz
dec
mov
mov
dec
std
jmp
lock
cmps
jle
stos
sub
add
dec
sub
jnp
push
(bad)
jmp
imul
pushf
mov
fcomp
nop
das
sbb
ins
jbe
(bad)
int
xchg
cs
xor
rcr
add
dec
mov
mov
mov
int
add
into
(bad)
ret
enter
push
jle
pusha
imul
sub
fcomp
movs
arpl
sbb
in
scas
pop
jecxz
in
jmp
and
stos
dec
aad
sub
sub
inc
enter
mov
pop
inc
sbb
movs
pop
repnz
out
mov
jle
popa
xor
(bad)
dec
and
push
shr
mov
cmp
iret
jg
jg
or
ret
mov
pop
and
dec
mov
dec
lock
(bad)
clc
xchg
jne
add
enter
inc
stos
dec
mov
retf
mov
jo
push
clc
push
xlat
cmp
push
(bad)
enter
xor
pop
int3
cld
mov
(bad)
fisubr
into
push
jae
push
(bad)
jnp
inc
sub
sbb
sbb
jmp
ret
gs
or
(bad)
into
push
cmp
and
das
ret
(bad)
repz
sbb
xchg
dec
xor
push
mov
sar
or
dec
dec
clc
lds
jae
(bad)
scas
int3
pop
mov
sub
stos
fidivr
adc
mov
jno
daa
inc
xchg
pop
js
push
mov
xchg
xchg
and
(bad)
jmp
cdq
and
(bad)
outs
mov
shr
js
xor
push
sub
std
adc
jg
and
enter
xor
cmp
lock
fbld
retf
(bad)
out
sahf
lahf
sub
arpl
sub
xor
sbb
sbb
cmp
sub
std
fcomp
mov
push
sub
(bad)
out
add
pop
lea
or
inc
mov
inc
mov
scas
xchg
(bad)
jne
push
push
cmp
add
mul
sub
mov
nop
bnd
aas
push
mov
call
xor
dec
push
shr
and
or
xor
js
adc
(bad)
retf
pop
cld
cld
lods
outs
mov
repnz
(bad)
cli
jl
adc
popf
inc
outs
push
call
cli
ret
sub
hlt
call
xchg
push
mov
adc
imul
out
fsubr
ja
jg
std
cs
outs
rcr
inc
repz
jl
jns
fidiv
int3
arpl
test
push
imul
or
push
jmp
test
dec
and
fst
mov
and
dec
xchg
popf
jl
fbstp
sub
inc
mov
push
push
or
ss
mov
pusha
lods
pop
repz
retf
xchg
inc
ins
mov
ins
mov
xchg
inc
inc
push
pop
mov
inc
jo
stos
adc
mov
scas
aad
xchg
sub
jo
pop
push
xor
cmp
or
add
mov
mov
jp
in
retf
jl
and
fsub
imul
pop
call
jnp
add
rol
mov
sahf
in
iret
stos
xchg
add
mov
jo
cld
lock
mov
fild
lds
addr16
aam
jne
test
ja
mov
mov
pop
outs
cdq
push
adc
push
pop
push
pop
jle
je
jo
sub
ja
or
mov
sub
cmc
inc
lock
ret
cmp
xchg
mov
shl
jmp
scas
test
pop
xchg
sar
lods
xchg
aad
xor
jle
lock
dec
mov
or
jle
inc
sbb
mov
retf
adc
sub
arpl
ja
cdq
dec
fmul
push
fldenv
int
in
xchg
xor
mov
test
mov
int
cmp
sub
cmp
mov
stos
paddsb
mov
mov
inc
mov
cmp
add
test
pop
add
mov
jmp
push
push
xor
pop
leave
cmp
xchg
(bad)
sahf
in
jb
popf
cli
scas
jo
sub
lahf
xchg
inc
test
xor
into
inc
jb
dec
out
movs
movs
iret
dec
and
mov
mov
ins
hlt
inc
and
mov
jmp
lock
ret
mov
(bad)
pop
push
mov
jbe
clc
jle
popa
call
leave
xchg
inc
mov
sub
call
inc
test
pop
gs
outs
xchg
mov
stos
popf
ds
xchg
cld
push
and
jp
cmp
fld
add
das
cmp
test
sub
mov
sub
out
sbb
pop
cmps
xchg
es
idiv
call
push
cmp
fstp
pop
pop
pop
(bad)
and
loop
dec
push
dec
movs
jg
pop
icebp
push
sub
out
mov
xchg
push
outs
mov
push
or
lods
aas
je
aam
rol
push
jmp
test
and
dec
test
mov
cmp
addr16
jne
daa
mov
fs
push
jns
ficomp
xor
mov
mov
jg
xor
mov
stos
in
imul
ins
xor
mov
mov
mov
cmp
push
sub
(bad)
jge
mov
call
mov
cmps
psrlq
pop
cld
fldenv
std
lds
dec
push
xor
aad
pop
cdq
daa
scas
cs
ret
or
sbb
ins
fs
movs
scas
repnz
dec
bound
rol
repz
jne
daa
xchg
icebp
jmp
push
ror
cs
ds
push
pop
out
inc
add
push
jp
ins
mov
xchg
(bad)
je
pop
pop
push
out
or
xor
push
add
lds
lods
push
cs
mov
outs
lock
div
loopne
movs
rcr
push
fucomi
adc
inc
lods
popf
fisubr
test
cmp
sub
sbb
mov
test
jmp
xlat
sbb
inc
jno
sbb
retf
seta
jbe
push
cmps
xor
mov
repnz
add
pop
clc
push
fst
lock
or
fs
imul
jb
mov
jno
sbb
push
pop
pop
or
inc
pusha
sub
(bad)
mov
jmp
loop
in
movs
cmps
mov
scas
mov
xlat
xchg
cmp
in
das
pop
add
mov
fisttp
sub
int
sbb
pop
cmp
and
cli
or
out
(bad)
aaa
pop
pop
mov
sub
mov
sbb
repnz
xor
xchg
(bad)
cmp
out
je
push
js
jp
and
jns
lods
std
and
dec
cmp
fs
adc
push
mov
mov
adc
test
fs
sbb
push
retf
add
mov
push
movs
pop
adc
xor
fdivr
sar
jmp
inc
outs
push
adc
pop
jns
sti
je
adc
fadd
inc
push
ret
ror
enter
cdq
pop
sahf
dec
aad
test
pop
jecxz
push
dec
or
call
test
mov
out
mov
ret
in
push
aad
mov
jp
shr
jle
push
jp
jno
data16
rol
or
add
push
sub
fs
pop
ins
mov
or
xchg
jae
repnz
cli
pop
dec
cmp
shl
(bad)
(bad)
jmp
mov
lea
in
lock
lds
and
leave
sbb
pop
test
fs
pop
in
cli
or
adc
nop
xchg
jp
mov
and
fadd
out
not
sbb
adc
mov
or
pop
scas
mov
inc
stc
pop
mov
and
popf
aam
sar
repnz
add
aam
xchg
add
sub
jecxz
mov
jle
cmp
or
gs
nop
push
test
aam
sub
cs
les
and
popf
rcl
adc
push
mov
cmp
or
cmp
push
sti
(bad)
pop
stos
mov
jno
lea
jg
push
cli
mov
lea
xor
dec
lea
and
sub
mov
sbb
icebp
pusha
jbe
jne
pop
mov
in
adc
fidivr
imul
fadd
sub
mov
cmp
mov
iret
push
test
shr
adc
or
jb
add
(bad)
dec
and
stc
and
pop
inc
imul
and
sbb
fcmovbe
cmp
xchg
stos
repz
push
mov
fcom
pop
sub
mov
mov
out
jecxz
shr
mov
jns
sbb
push
xor
ins
mov
or
inc
sub
pop
xchg
mov
mov
ins
jbe
push
push
popa
push
cmp
mov
pusha
xor
test
mov
fwait
jg
jne
xor
ret
dec
sub
js
jecxz
sbb
std
popa
sub
aam
pop
or
cmp
mov
adc
sbb
mov
push
test
push
mov
adc
jle
sahf
jle
pusha
inc
pushf
test
pop
arpl
je
xchg
std
es
jmp
les
dec
jg
jb
sub
rol
push
push
adc
adc
stc
cmc
add
xchg
mov
out
and
test
lock
pop
pop
push
and
pop
mov
add
std
sti
cli
adc
push
bound
ret
bound
add
xchg
pop
call
sub
mov
jns
jle
inc
(bad)
jne
and
and
jmp
mov
pop
(bad)
pop
imul
pop
jg
in
and
ficom
cmps
(bad)
fiadd
test
scas
out
mov
call
push
push
pusha
outs
test
outs
or
js
popf
movs
aam
add
das
mov
test
loope
add
mov
sub
xor
ret
into
jo
or
fs
pop
cmp
fiadd
sub
jecxz
mov
pop
mov
mov
arpl
mov
fst
xchg
jne
shl
aas
adc
popf
hlt
inc
add
mov
or
(bad)
ins
xchg
xchg
mov
pop
mov
adc
clts
aad
xchg
test
mov
pop
adc
aad
push
push
gs
leave
mov
in
mov
pushf
test
call
pushf
dec
or
cld
ret
ins
xor
cwde
ret
and
inc
lds
ins
sbb
inc
mov
addr16
mov
shl
push
pop
fs
out
jae
mov
outs
test
and
(bad)
push
mov
pop
push
pop
(bad)
movs
movs
call
aas
std
or
push
leave
stos
sti
mov
(bad)
rcr
retf
out
lahf
lahf
std
shl
mov
xlat
xor
pop
pop
inc
dec
ret
add
jmp
push
popf
call
and
jnp
icebp
push
enter
xor
cmp
(bad)
loopne
mov
adc
xor
sub
clc
mov
sub
outs
(bad)
icebp
mov
xor
das
retf
mov
arpl
arpl
xor
push
mov
fidiv
cmps
ret
dec
daa
pop
add
inc
enter
call
xor
(bad)
and
sub
mov
and
jns
rcr
mov
jne
push
push
pusha
mov
jnp
mov
in
(bad)
into
sbb
mov
ret
adc
xchg
arpl
sbb
inc
imul
adc
outs
imul
mov
push
daa
sbb
cli
retf
mov
pop
movs
call
xchg
jl
jmp
addr16
clc
or
cmp
push
mov
fcomp
inc
mov
loope
aaa
cmps
mov
popf
xchg
dec
sub
dec
enter
sbb
repnz
dec
sbb
xchg
in
(bad)
movs
out
adc
mov
shl
repz
cld
jp
pop
int
jnp
xor
int
dec
pop
sub
sbb
jno
std
fwait
rcr
sub
push
(bad)
(bad)
push
aam
imul
leave
xchg
adc
xchg
inc
or
ja
jno
jmp
popa
jp
fsubr
clc
loop
xchg
jp
push
test
xchg
test
js
in
pop
or
popa
outs
fsub
cmp
das
mov
dec
pop
add
je
repnz
pop
sub
outs
in
jo
mov
adc
shl
jo
clc
(bad)
loop
or
mov
xlat
outs
enter
lock
aas
test
arpl
mov
pop
je
cld
test
sub
cmp
(bad)
mov
add
push
addr16
and
xchg
sub
cwde
add
repz
xor
cs
cmps
scas
pop
or
cmc
jecxz
and
cmp
adc
inc
je
mov
ss
xlat
scas
frstor
xchg
cwde
(bad)
loopne
repz
inc
movs
enter
or
aas
in
daa
push
pop
popa
das
push
icebp
movs
add
pop
jns
pusha
cmps
dec
rcr
pop
dec
mov
aaa
adc
cs
jae
jae
stc
iret
mov
xor
fild
shr
cmp
sbb
adc
out
imul
xchg
cmps
dec
cdq
(bad)
xchg
mov
repz
push
outs
dec
clc
pop
fdivrp
lods
test
fist
lods
add
arpl
adc
out
bound
cdq
mov
imul
mov
clc
sub
add
cmp
xor
fdiv
outs
dec
ret
or
fneni(8087
mov
rol
ss
pop
test
dec
pop
mov
aas
pop
inc
outs
popf
mov
(bad)
out
pop
test
xor
push
adc
or
clc
icebp
mov
and
fisub
push
xor
push
jmp
fsubr
pop
add
mov
scas
push
ins
push
dec
call
test
pop
ds
mov
sbb
and
cli
pop
push
sti
dec
lahf
sbb
sti
(bad)
popa
cdq
add
xchg
pop
(bad)
mov
cmc
sbb
out
push
or
jne
xchg
mov
adc
shr
adc
mov
movs
and
sbb
cmps
push
test
cdq
stos
pop
scas
or
cmp
xor
aas
mov
loopne
fsubr
movs
rcr
test
cmp
cld
hlt
das
fdiv
movs
sub
lahf
outs
popa
mov
or
std
jns
and
scas
adc
push
sti
jle
sbb
mov
into
pop
inc
fs
addr16
xchg
dec
pop
cmp
mov
fwait
pop
loopne
int
loopne
test
je
in
push
lahf
mov
pop
cmp
jo
dec
addr16
fcmovb
shr
and
fadd
cmp
and
das
xlat
mov
data16
lods
aam
jmp
and
add
cmp
dec
xchg
jo
cmp
call
sub
xchg
imul
dec
mov
loopne
in
aaa
cmp
sub
hlt
scas
pop
mov
call
adc
fwait
call
std
jnp
push
das
enter
inc
or
or
jmp
ror
retf
sbb
inc
out
fst
sbb
dec
daa
cs
adc
sti
ret
xchg
add
movs
or
sbb
jmp
mov
jmp
gs
add
cld
jo
loopne
cmp
lods
loope
lea
test
add
add
push
cmps
jle
sbb
aaa
daa
sbb
sub
loop
fidiv
or
retf
mov
retf
mov
dec
add
sbb
imul
sbb
sub
stos
stos
aas
cmp
cmp
popf
jb
push
add
xchg
push
or
inc
push
fadd
dec
ss
dec
mov
sbb
dec
xchg
jmp
test
pushf
xlat
(bad)
lock
inc
or
fst
push
and
add
retf
stos
sub
dec
inc
cmp
(bad)
mov
xlat
xchg
adc
or
pop
call
mov
mov
ret
nop
ins
inc
add
jmp
cdq
cmp
js
and
jp
movs
dec
mov
(bad)
ins
cmp
mov
addr16
xor
inc
fnstsw
les
lea
or
fcmove
scas
jecxz
sbb
sbb
mov
pop
sbb
sub
rcl
out
inc
stos
das
dec
imul
loope
mov
inc
xlat
push
in
xchg
jg
xchg
cld
fsubr
mov
add
fiadd
scas
ror
je
xor
and
icebp
mov
or
pop
jb
pop
xchg
fst
cmp
pusha
xchg
mov
xor
xchg
add
fs
jae
ror
outs
inc
push
out
xchg
sbb
sub
lods
into
mov
push
iret
into
(bad)
cmp
clc
rol
test
int
data16
mov
cmps
fs
jne
test
les
das
dec
add
mov
sbb
addr16
pop
test
xor
cmps
data16
aaa
mov
imul
rcr
pop
xchg
daa
adc
popa
adc
daa
popf
mov
ja
sar
(bad)
mov
sbb
fwait
xor
inc
test
and
xchg
adc
xor
add
ret
dec
call
aas
test
jno
mov
in
movs
outs
mov
or
sbb
icebp
aaa
xchg
mov
mov
pop
mov
shl
cmp
std
imul
sub
out
and
lea
xor
ficom
mov
enter
pop
jbe
(bad)
push
mov
jbe
in
scas
fldenv
inc
sahf
fst
mov
jl
mov
je
add
cmp
aad
sbb
pop
aad
mov
inc
mov
arpl
dec
adc
enter
mov
or
xor
lods
aas
jo
mov
add
push
je
mov
sub
jo
xchg
or
jo
inc
mov
and
mov
ret
push
pop
(bad)
dec
(bad)
shr
xchg
into
mov
or
xchg
es
xor
sub
nop
je
xor
rol
push
into
stos
stos
in
and
add
int
retf
xor
pop
jb
mov
rol
mov
xor
pop
add
test
hlt
(bad)
out
push
aam
fwait
pop
ror
mov
xor
sbb
mov
push
dec
push
and
mov
xor
mov
ret
sbb
into
jbe
ror
mov
mov
add
sub
fldenv
dec
aad
cmp
or
out
jmp
rcr
mov
xchg
rol
xchg
dec
je
inc
aaa
shr
mov
xor
repz
sbb
cmp
or
xor
and
ficomp
inc
cmc
inc
les
or
mov
mov
pop
pop
mov
mov
leave
imul
mov
and
jnp
mov
ins
pop
mov
sub
jge
xlat
and
imul
and
push
dec
and
cld
(bad)
lock
shl
daa
mov
adc
mov
cmp
inc
stos
pop
retf
add
mov
cmp
push
imul
fs
out
jge
or
pop
adc
rcr
mov
sbb
inc
loop
rol
ja
je
push
jge
(bad)
sar
jnp
push
dec
sub
jg
or
mov
add
test
stc
inc
pop
mov
fdiv
pushf
stos
jl
dec
cld
or
pop
mov
add
fdiv
mov
mov
jmp
cmc
or
bound
outs
shl
pop
shl
mov
sysenter
xor
dec
pop
out
fild
push
test
mov
jmp
push
and
rcl
sbb
mov
jno
inc
and
dec
xchg
loope
fisub
arpl
loop
xlat
test
dec
dec
test
mov
aaa
rcr
jmp
test
jecxz
sbb
mov
mov
push
scas
clc
shl
jo
mov
or
cli
push
mov
jp
std
popf
cwde
or
rcr
cmc
inc
push
sub
out
mov
or
ror
aas
ret
movs
clc
outs
mov
retf
call
pushf
xchg
dec
call
mov
jns
push
push
pushf
push
shl
xchg
ret
das
js
int3
pop
dec
mov
out
mul
push
cmp
call
inc
add
xchg
cdq
(bad)
mov
cmp
push
sub
iret
in
sub
(bad)
jnp
jbe
inc
or
or
repz
scas
test
lods
sahf
popa
mov
inc
adc
lods
cmps
aas
xchg
push
cmp
mov
out
fstp
cmps
cmc
mov
mov
dec
les
mov
in
dec
pop
mov
fld1
rcr
push
mov
imul
xor
rol
test
mov
mov
into
add
cli
or
mov
rol
lock
fwait
das
test
inc
ins
mov
retf
and
mov
pop
test
jns
or
cmp
sahf
hlt
std
dec
mov
add
fnstsw
mov
or
pop
xchg
ret
pop
loope
iret
mov
out
mov
dec
into
xchg
hlt
fs
xlat
movs
jge
ss
aam
imul
inc
mov
aaa
push
xor
cmp
sbb
xchg
div
out
jae
sub
dec
sahf
mov
sbb
int
inc
sub
rcr
out
stc
test
fst
push
sub
jne
stos
cmp
repz
int3
push
aam
(bad)
daa
lahf
outs
cmps
sbb
pop
pop
push
xor
jl
add
cmp
sahf
stos
mov
jns
mov
fsubr
and
stc
mov
jge
push
add
call
pop
mov
cmps
adc
test
mov
ja
test
out
enter
cmp
jmp
add
mov
shr
shr
mov
cwde
pusha
mov
and
call
cmc
test
xchg
arpl
pop
in
fcmovne
cwde
xor
loopne
aad
test
pusha
(bad)
fcom
nop
cdq
leave
mov
push
ins
aad
xchg
inc
pop
mov
daa
sub
dec
repnz
jp
and
ds
pop
mov
xor
ja
js
xchg
push
push
xchg
fdivr
jnp
sbb
mov
push
daa
and
xchg
jmp
sbb
not
push
inc
sbb
dec
daa
pop
icebp
and
leave
cmc
inc
add
inc
aad
fisub
push
out
pop
ret
adc
fcmovne
outs
pop
or
xchg
xchg
cmps
or
pop
ins
jae
es
out
jl
popa
mov
ds
outs
push
mov
push
outs
jae
and
jge
jmp
or
and
fdivp
cmp
fdivr
jno
not
mov
push
xor
and
rcr
mov
sbb
inc
dec
mov
(bad)
lahf
loope
stos
push
js
xchg
mov
in
cs
mov
inc
xchg
jne
jnp
dec
xchg
jbe
or
ja
jno
mov
sbb
call
push
pop
sub
imul
dec
imul
dec
imul
mov
leave
scas
mov
lds
pop
cmp
mov
shl
mov
popf
rcl
repz
adc
cmp
ror
fdiv
sub
sub
fwait
inc
in
mov
out
jne
adc
enter
adc
cld
inc
ins
in
pop
icebp
stos
dec
popa
addr16
shl
cmp
inc
jge
sub
div
nop
or
or
and
xchg
jle
les
mov
sub
int
xor
jo
mov
int3
int
scas
fdivr
push
icebp
rol
and
jns
(bad)
sbb
mov
int
dec
xchg
aam
arpl
dec
out
rcr
and
stos
pop
sbb
retf
mov
test
aaa
sub
xchg
mov
bound
xor
xchg
retf
and
fsub
pop
shl
repnz
test
adc
std
out
jns
lea
dec
loopne
movs
sub
inc
jmp
lods
dec
movs
lock
pusha
imul
mov
mov
jmp
cmps
cs
lock
fist
fsubr
mov
retf
sbb
xchg
js
push
sbb
(bad)
push
mov
sub
jmp
daa
sub
cmp
xchg
je
or
cli
add
iret
pop
rcr
scas
pop
mov
pop
dec
(bad)
rcr
clc
call
nop
xchg
jge
mov
jle
sbb
sub
(bad)
sahf
ds
cmps
inc
fucomp
pop
call
int
mov
lods
ret
sub
mov
add
xor
inc
imul
xor
fidivr
pop
or
shl
mov
xor
or
pop
test
adc
sti
or
mov
sbb
push
push
test
pop
and
dec
fsubr
mov
adc
jmp
adc
arpl
push
test
aaa
leave
cmp
inc
outs
fwait
stc
cmp
pop
aaa
xchg
stos
jns
into
sbb
add
(bad)
ror
aas
push
fcmovnbe
es
mov
xor
inc
xchg
dec
stos
daa
repnz
pop
adc
inc
mov
mov
sbb
pop
ficom
repnz
mov
push
or
popf
in
neg
stc
jbe
jae
arpl
out
mov
les
jae
xor
jmp
mov
pop
or
xor
out
inc
cld
scas
mov
jae
das
(bad)
xchg
adc
imul
xchg
ret
and
not
add
pop
xor
je
sub
sub
dec
sbb
cwde
xchg
mov
xchg
pop
cld
dec
repnz
hlt
je
pop
ins
jecxz
xor
xchg
movs
fidivr
inc
jle
and
call
leave
xor
je
and
jge
mov
jne
int
cwde
mov
out
jno
mov
rcr
fstp
jl
rcl
pop
lds
retf
pop
je
pop
mov
movs
or
jl
xor
jg
sub
mov
or
cmps
int
adc
popf
ficomp
jns
clc
repz
sar
fnstsw
jg
mov
push
cld
pop
xlat
and
sub
outs
pop
ins
jno
mov
mov
icebp
sbb
out
sahf
call
loopne
or
sbb
cmp
sbb
cmp
daa
mov
clc
mov
das
pop
pushf
xor
ss
fs
pop
push
pop
stc
pop
mov
mov
adc
mov
mov
scas
push
xor
(bad)
cmp
icebp
sbb
jb
int3
cmps
test
jp
rcr
jge
dec
push
or
adc
ror
mov
out
adc
imul
jecxz
or
fcmovbe
lahf
inc
dec
jnp
and
mov
xor
scas
pusha
mov
mov
into
pop
out
lea
jle
out
or
lds
call
fbld
test
psrlq
cmp
je
or
jge
lods
jle
xchg
(bad)
(bad)
jmp
or
pop
xor
sbb
test
imul
mov
movs
adc
sub
or
out
jge
add
inc
movs
or
mov
pop
rep
dec
sahf
add
inc
mov
addr16
jo
push
jg
cmp
mov
daa
sub
frstor
ins
pusha
not
mov
(bad)
xchg
aaa
(bad)
int
add
adc
daa
sub
push
xchg
sbb
fs
inc
daa
cmp
shr
cld
adc
push
pop
gs
sar
aaa
imul
inc
jecxz
cs
mov
mov
mov
(bad)
leave
mov
mov
imul
stos
push
(bad)
add
pop
mov
xlat
adc
add
pop
add
xchg
ret
jmp
push
(bad)
adc
(bad)
repnz
std
xchg
jp
push
inc
cmps
in
mov
mov
aad
pusha
xor
add
cmp
fild
add
(bad)
cmps
jb
fmul
sar
in
call
or
adc
stc
or
mov
dec
push
cmp
mov
gs
fmul
icebp
test
push
je
xchg
or
dec
xchg
cmc
aam
out
test
out
and
fisub
out
repz
pop
addr16
ret
pop
int
aam
ins
scas
add
(bad)
adc
cli
push
cmp
aaa
sub
gs
pop
ins
repz
js
sub
jl
or
sbb
(bad)
retf
xchg
xchg
mov
cld
cmp
ret
pushf
inc
popa
fsub
ret
cwde
outs
mov
cmc
fistp
mov
mov
push
mov
retf
mov
pop
fld
iret
pop
arpl
jmp
dec
adc
mov
test
test
push
sti
dec
scas
repz
sub
clc
cmp
out
dec
pop
hlt
sar
(bad)
rep
mov
sbb
lods
scas
xchg
mov
lods
push
cwde
sub
jmp
jne
inc
sbb
ss
lea
cdq
pop
xor
push
aam
aaa
push
jnp
dec
jo
sub
pop
xchg
xlat
shr
sar
sahf
nop
xchg
jne
dec
push
repnz
icebp
dec
xor
daa
popa
in
and
rcr
mov
scas
in
mul
or
and
mov
cmovno
cmp
fldcw
dec
out
xor
dec
fwait
xchg
cmp
push
and
mov
mov
inc
call
sbb
mov
jle
pavgb
scas
mov
sbb
fist
aas
or
pop
shr
xor
mov
sbb
ror
loop
jmp
lds
mov
sbb
cwde
fwait
cwde
clc
repz
jo
cmp
push
stos
das
sbb
sub
pop
hlt
jne
xor
mov
fisttp
out
mov
and
(bad)
pop
sbb
mov
jge
retf
cmp
or
das
shr
cld
inc
mov
jmp
nop
ins
sbb
(bad)
ss
sar
dec
fldenv
call
outs
pop
mov
loop
mov
cs
aad
adc
mov
loopne
cmp
inc
jb
aam
dec
jo
sub
jg
sar
mov
div
push
lea
push
dec
xchg
mov
out
out
cmps
lahf
xchg
xor
call
xchg
out
into
jp
pop
push
pop
ficom
cwde
and
ret
out
retf
imul
jge
test
push
mov
daa
dec
lods
sar
mov
enter
push
adc
mov
mov
clc
ss
push
mov
nop
pop
mov
imul
int
mov
sub
inc
clc
adc
es
scas
sub
aad
aaa
pop
aas
stos
repnz
dec
sar
adc
aad
(bad)
jmp
int
pop
sbb
xor
push
stos
arpl
xor
mov
dec
sub
jl
push
jecxz
sbb
data16
dec
mov
and
pop
dec
enter
and
retf
and
sub
pop
and
cmps
clc
pop
repnz
push
int
in
cmp
ret
pop
mov
out
mov
cmps
inc
pop
aam
cld
xchg
scas
cli
inc
shl
out
jge
push
dec
inc
push
in
scas
jbe
(bad)
and
mov
mov
outs
leave
inc
jb
aam
mov
and
sbb
fimul
adc
dec
xchg
jbe
mov
scas
repz
paddusb
lods
jge
popf
test
adc
adc
arpl
push
sbb
imul
adc
ins
cmps
adc
jge
fist
lahf
ins
mov
inc
xor
fs
add
js
xchg
inc
mov
fwait
jg
mov
movs
mov
mov
cmp
repz
fistp
call
push
jle
pop
xchg
rol
clc
repz
push
std
loope
or
inc
(bad)
test
push
pop
xchg
jne
imul
jmp
es
stos
sub
sub
imul
loop
nop
mov
lea
in
inc
cli
mov
add
pop
sub
adc
call
aas
mov
(bad)
and
aaa
jmp
pop
sub
dec
lods
pushf
imul
(bad)
enter
les
fidiv
mov
frstor
jle
gs
mov
and
stc
loope
cmp
xlat
push
(bad)
or
jae
test
push
add
cdq
cld
(bad)
aam
sbb
adc
push
push
jmp
jmp
or
iret
pusha
arpl
call
mov
xchg
push
not
jmp
mov
cmp
movs
sub
jp
pop
pop
nop
mov
outs
loope
or
test
pusha
or
fmul
sub
pop
mov
leave
mov
and
adc
push
in
mov
jle
cld
mov
sbb
adc
in
cli
cmp
pop
adc
sar
and
xlat
jle
ins
test
push
icebp
mov
jnp
cmp
mov
(bad)
sbb
mov
pop
das
aad
push
xchg
cld
jg
dec
xor
je
jmp
ficomp
mov
repnz
clc
outs
lods
sar
sub
movs
fldenv
or
loope
or
pop
fcom
push
adc
imul
adc
in
movs
inc
cs
int3
xchg
mov
push
mov
jne
pop
dec
lods
repnz
clc
mov
pop
mov
adc
dec
in
xchg
nop
enter
mov
daa
cmps
stos
sub
dec
xchg
ins
mov
mov
cld
nop
sub
add
jecxz
jmp
js
xor
icebp
fs
mov
add
movs
pop
std
mov
xchg
jns
or
repz
and
sti
dec
scas
fcmovnb
push
dec
adc
test
jbe
adc
call
iret
sahf
sub
(bad)
aas
xchg
sub
in
loope
dec
(bad)
lahf
mov
rcl
dec
push
rcr
jbe
int3
adc
aam
mov
repz
sub
pop
jbe
aad
hlt
nop
aam
pop
add
ja
or
ret
pop
out
lods
test
js
fsub
cld
je
imul
jnp
hlt
xor
add
scas
push
cmp
sub
(bad)
push
sbb
mov
xchg
in
cwde
pop
or
jl
ss
mov
(bad)
sti
jb
xchg
cmps
and
test
sbb
out
repz
mov
cmp
inc
imul
jecxz
mov
call
sbb
jge
(bad)
sbb
lock
stos
push
ds
mov
or
lea
sbb
inc
dec
ins
add
add
mov
jne
sub
movs
ins
push
shr
mov
icebp
sbb
xor
repz
xor
adc
bound
inc
cmps
lods
test
and
jmp
lock
iret
stos
pushf
xlat
sub
push
(bad)
scas
call
movs
pop
inc
xchg
inc
fbld
addr16
xchg
lahf
cmp
push
pushf
push
mov
and
enter
push
jmp
adc
fisttp
or
test
call
push
lods
(bad)
mov
imul
adc
cwde
push
gs
add
cmps
inc
cli
and
push
mov
mov
inc
sub
jb
add
cwde
pop
mov
inc
inc
mov
mov
int3
loope
mov
sti
pop
push
dec
add
dec
add
mov
sub
ja
icebp
and
add
shl
push
das
inc
bound
sub
jmp
test
cmp
mov
sbb
fwait
or
mov
scas
cmp
fild
xchg
sub
push
movs
mov
mov
jmp
(bad)
scas
push
adc
icebp
push
xchg
iret
fistp
loope
lods
imul
dec
mov
jmp
and
iret
pop
fwait
int3
ss
test
sbb
idiv
and
(bad)
jge
stc
ja
xchg
lea
outs
adc
dec
repnz
mov
out
loope
sbb
rcr
fcom
ret
popa
pusha
shr
xchg
je
(bad)
sbb
push
mov
fwait
repnz
pop
and
in
inc
mov
mov
or
pop
mov
data16
cmp
lods
push
fwait
push
sar
cli
ins
mov
ja
ins
pop
mov
mov
or
mov
test
frstor
std
sahf
mov
gs
ret
test
idiv
popf
xchg
jns
lock
hlt
shr
sbb
(bad)
sbb
mov
cs
sbb
and
nop
adc
out
or
pop
jg
pop
call
adc
jle
adc
adc
out
ror
cmp
inc
jecxz
movs
call
push
lock
retf
xor
dec
inc
xor
push
mov
jecxz
pop
xchg
cs
mov
xchg
cmp
push
fs
mov
popa
rol
adc
ins
jnp
lods
addr16
lods
sbb
je
cli
xlat
mov
dec
mov
xor
lods
mov
(bad)
push
push
ja
sar
les
std
sub
shl
imul
jbe
mov
mov
lock
popa
test
out
sti
mov
cmps
push
ret
dec
jo
jmp
repz
jge
bound
pop
mov
out
add
mov
fild
out
pop
push
sub
sub
jmp
dec
lods
mov
xchg
xor
or
push
jno
adc
pop
outs
cmp
add
lods
les
rcr
jmp
mov
cmc
dec
(bad)
mov
in
cli
stc
in
pop
cmp
push
jp
dec
pop
fsub
or
xor
sub
loope
hlt
in
dec
in
sub
int3
push
mov
xchg
pop
std
callw
neg
xor
adc
push
and
scas
and
shr
fwait
mov
out
call
scas
loope
aad
sub
push
mov
fcomp
out
xchg
jge
xchg
or
div
repnz
fmul
mov
pop
(bad)
nop
fisubr
shr
pop
pop
mov
loope
inc
xor
fsub
or
cmp
pop
pop
and
fadd
or
test
push
pusha
mov
fsub
sub
pop
mov
cmp
in
or
cmp
out
clc
mov
imul
xchg
cmp
cmp
retf
addr16
jb
xchg
rcl
xor
add
arpl
pop
cmp
bnd
movs
mov
mov
shld
fisttp
aas
inc
lods
mov
fld
into
inc
and
cmc
dec
loop
jns
cmps
inc
arpl
adc
jo
(bad)
cdq
mov
dec
sbb
xchg
in
shl
dec
in
out
mov
imul
mov
mov
cmc
stos
xor
in
adc
jge
ret
sti
dec
and
cld
jmp
mov
clc
cmps
mov
xchg
xor
call
scas
movs
or
pop
sar
jmp
xor
and
out
cmovbe
adc
int
sbb
pop
in
mov
mov
jmp
mov
sbb
arpl
mov
jmp
cmp
sub
xlat
rol
lods
add
pushf
call
imul
dec
leave
adc
sub
jg
and
mov
pusha
int
es
inc
test
fistp
imul
sbb
cmp
or
sar
lds
xor
shl
and
paddb
fcmove
and
in
in
into
xor
push
xchg
(bad)
(bad)
jb
push
cmc
or
inc
or
adc
jmp
add
ret
mov
aam
icebp
bound
add
fisub
sbb
sub
sbb
sar
adc
loopne
adc
enter
arpl
push
mov
pop
retf
shl
adc
int3
ss
cli
std
dec
push
push
mov
pop
(bad)
adc
stos
add
adc
inc
rcr
popf
sbb
call
cmp
cmp
cdq
cmp
mov
and
fwait
xor
hlt
mov
cmp
mov
push
(bad)
stos
xchg
ins
and
xchg
jmp
xchg
call
scas
lea
push
push
adc
(bad)
jge
adc
jmp
inc
sbb
inc
dec
daa
mul
lea
hlt
scas
aaa
out
or
jnp
xchg
sub
std
mov
enter
adc
mov
dec
inc
inc
inc
mov
test
in
mov
or
mov
retf
cmp
jae
xor
add
jne
ror
sub
sbb
imul
fld
not
and
cdq
cwde
or
sub
fstp
out
push
adc
mov
mov
adc
xchg
jecxz
dec
jecxz
dec
nop
xchg
cmps
pop
xchg
sub
inc
jne
adc
mov
sub
repnz
data16
fs
das
nop
in
or
test
(bad)
(bad)
mov
push
cmps
ins
mov
out
fwait
mov
je
cmp
add
in
push
sbb
ret
adc
push
pop
sub
nop
cmp
and
sub
mov
sbb
mov
inc
mov
std
push
push
(bad)
shl
adc
xchg
cmp
lea
(bad)
lock
movs
xchg
(bad)
push
outs
outs
lods
cmp
fnstcw
adc
inc
mov
mov
cdq
dec
iret
add
retf
xchg
cmp
mov
xchg
ffree
repnz
inc
rol
push
popa
mov
jnp
cdq
or
shl
int
push
cmp
in
sbb
sbb
sub
jp
test
jp
cmp
test
inc
xchg
bnd
sub
fsubr
loope
fsubr
loope
add
pushf
pop
or
jmp
dec
and
retf
and
jmp
neg
inc
push
mov
rol
stc
gs
addr16
shl
xor
push
adc
sbb
outs
test
cli
pop
inc
inc
sub
std
inc
popa
inc
inc
push
test
pop
jnp
cli
fsubr
mov
stc
rcr
ins
cmp
jae
sbb
jmp
pusha
jmp
fadd
popf
loopne
sbb
or
xor
xchg
fdiv
retf
rcl
xor
and
in
dec
or
pop
out
fisub
stos
xchg
test
mov
xor
adc
mov
sbb
mov
xchg
imul
sbb
stc
dec
nop
repz
ins
mov
cdq
add
and
cmps
push
icebp
or
xchg
add
mov
dec
test
es
cdq
and
mov
jnp
mov
test
shl
mov
nop
sub
pop
(bad)
imul
loopne
xchg
mov
mov
fcmovnb
or
xor
punpckldq
data16
sub
inc
dec
sub
jno
mov
adc
daa
inc
add
(bad)
jge
xor
inc
mov
jge
std
imul
jmp
scas
sahf
mov
or
jns
inc
push
ds
or
push
loopne
loopne
ins
sub
cwde
adc
mov
inc
fsubr
adc
ret
add
fsubr
retf
adc
ficomp
jp
push
in
mov
loop
cmp
inc
aas
iret
xor
daa
cmp
and
mov
test
out
jno
push
enter
fist
dec
xchg
int
inc
loop
push
cmc
pushf
push
retf
mov
loop
pushf
adc
out
shr
fisub
xor
cmp
pusha
inc
pusha
aas
data16
cmp
cmp
test
push
mov
jns
cmp
popa
mov
cmp
xchg
call
inc
or
clc
mov
test
ret
jp
(bad)
sar
retf
es
push
adc
cmp
into
mov
scas
pop
sbb
sub
out
fsub
shl
inc
lea
mov
addr16
jmp
fadd
xchg
add
lock
cmp
push
sahf
rcl
repnz
push
pushf
sahf
ret
jnp
fst
jo
mov
sub
push
mov
mov
pop
cli
or
loop
je
aas
leave
popa
mov
xor
dec
(bad)
loope
adc
push
movs
mov
pop
cmp
push
data16
xchg
dec
les
(bad)
xor
cmp
(bad)
mov
mov
jns
push
mov
sbb
and
or
dec
sahf
daa
push
push
and
fsubr
lods
mov
push
addr16
addr16
ret
enter
pop
das
push
or
rol
dec
push
rcl
pop
add
and
idiv
sbb
nop
mov
outs
add
popa
daa
mov
dec
repnz
pop
repnz
outs
std
adc
adc
pop
imul
out
cwde
addr16
inc
out
mov
fcom
bnd
out
cmp
dec
mov
pop
dec
inc
fild
mov
mov
dec
iret
fnstcw
and
sti
fld
out
mov
cwde
push
test
nop
or
mul
stos
inc
cmp
rcr
imul
and
gs
xor
movs
sti
add
ja
push
repz
sbb
into
mov
(bad)
js
pop
mov
add
adc
gs
xchg
addr16
inc
(bad)
push
mov
out
(bad)
push
hlt
rcr
nop
xchg
jns
inc
push
pop
cmp
neg
into
scas
adc
xchg
test
jp
daa
push
xchg
ror
pop
loopne
inc
sub
or
iret
mov
(bad)
sub
or
clc
pop
pop
imul
iret
xor
jmp
aad
dec
pop
push
imul
in
fldcw
and
dec
mov
pusha
out
mov
scas
(bad)
sbb
add
cmp
in
call
outs
psubq
stos
xchg
xchg
xor
outs
pop
scas
(bad)
push
aam
cmp
mov
jne
iret
ja
add
jg
movs
add
cli
imul
add
dec
dec
sahf
adc
cmp
rcr
aad
push
jl
ss
loope
fisub
inc
mov
in
mov
sti
xchg
js
adc
cs
sub
mov
int
popa
cmps
mov
cdq
ficomp
push
dec
loop
dec
je
scas
lds
fimul
sub
shl
ss
add
es
push
inc
and
adc
enter
(bad)
sbb
and
and
push
add
pop
es
sahf
inc
dec
aad
mov
vpermil2pd
sub
dec
mov
cmp
jns
xchg
adc
adc
mul
xchg
xchg
and
xor
bound
in
adc
data16
imul
dec
or
ret
mov
repnz
push
inc
fnsave
std
mov
cmp
cmp
jmp
out
push
ficomp
push
addr16
jae
push
mov
push
movs
jnp
mov
es
fucomip
ins
inc
push
call
popa
mov
dec
add
ret
popf
not
lds
add
inc
adc
pop
mov
and
inc
push
call
ja
xchg
cmp
dec
pop
sub
cmc
dec
addr16
div
lods
mov
frstor
jae
mov
in
shl
push
and
in
sub
push
push
fnstcw
adc
mov
adc
pop
dec
test
mov
xor
stos
mov
into
lods
push
into
aam
and
call
pop
or
fidivr
fistp
out
xchg
aad
push
les
mov
ja
pop
jnp
in
cmp
fidivr
fisub
push
mov
test
inc
(bad)
cmps
ins
xchg
xor
in
pop
push
je
push
fsin
add
adc
scas
ds
ret
popf
sub
ds
sbb
loop
mov
fadd
movs
pop
xor
mov
pop
mov
adc
test
push
xor
sub
xchg
movs
mov
mov
fiadd
mov
popf
xor
jmp
jl
popf
test
icebp
into
into
mov
pop
(bad)
in
in
cmp
inc
add
mov
(bad)
cs
test
mov
js
push
add
mov
xchg
jo
cmc
push
test
shl
aad
out
inc
test
arpl
stos
pop
sub
mov
pop
retf
add
dec
dec
popf
mov
clc
icebp
push
mov
pop
retf
test
imul
sahf
(bad)
fdivr
daa
mov
dec
jne
pop
leave
sub
jge
sbb
mov
(bad)
aaa
retf
leave
ins
sub
adc
das
push
mov
hlt
xor
lock
adc
pop
sti
push
push
shl
mov
and
lods
adc
idiv
and
sub
or
dec
jb
aas
sar
clc
movs
push
pop
idiv
test
cs
test
leave
cs
push
xor
sbb
nop
cmp
repz
cmp
pop
out
test
mov
xchg
mov
dec
call
xchg
popa
ins
mov
aad
(bad)
sbb
outs
xor
daa
nop
pop
imul
sub
aas
xchg
not
mov
cmp
mov
in
add
ss
add
cmp
push
xchg
gs
pop
sbb
movs
pop
dec
inc
mov
push
movs
and
lock
cmp
cmps
mov
push
pushf
lea
dec
imul
push
ins
mov
sbb
int
and
cmp
cwde
cmp
inc
cmc
xor
mov
cmps
aad
pop
pop
mov
(bad)
push
sti
(bad)
in
repz
loope
(bad)
push
sub
outs
dec
ret
fdiv
jecxz
jp
lahf
adc
mov
add
and
and
jne
ins
jne
and
inc
pop
outs
ficom
mov
sub
in
push
rol
push
lds
cmp
pop
scas
jbe
dec
es
add
jbe
aaa
mov
into
xchg
push
lock
mov
ins
xchg
test
mov
inc
cmp
jecxz
xor
jle
stos
test
dec
out
jle
or
adc
push
mov
xchg
out
mov
add
je
add
push
cmp
pop
shr
pop
jbe
loope
push
fucomp
xchg
das
add
ins
xor
loope
adc
pop
ds
xchg
int3
pop
fcomp
ror
movs
push
js
(bad)
in
popa
and
add
pop
call
cmp
test
rol
pusha
hlt
jae
mov
retf
add
leave
std
(bad)
repnz
mov
fnsave
mov
ror
test
imul
mov
aam
sub
stc
pop
(bad)
cmc
push
imul
push
std
jbe
shr
add
inc
xchg
aaa
inc
in
xchg
pop
inc
rcr
sub
mov
sbb
jns
fwait
sub
setne
mov
xchg
into
or
and
ins
sub
push
pop
xor
sbb
jne
(bad)
add
or
popa
pusha
test
jnp
mov
cmp
or
mov
icebp
pop
push
mov
xor
lahf
aas
enter
int3
adc
jae
sub
xchg
ja
(bad)
shl
xchg
les
dec
lahf
out
push
dec
push
adc
mov
addr16
mov
icebp
addr16
loop
dec
inc
mov
popa
std
inc
test
add
push
inc
jmp
aad
or
adc
stos
mov
imul
repnz
bound
scas
lahf
adc
lfs
pop
mov
idiv
inc
ja
call
nop
sbb
out
fimul
and
sbb
xor
mov
mov
xchg
(bad)
sar
sub
test
push
mov
test
pop
iret
cwde
add
mov
push
pop
in
sub
mov
scas
test
cmc
add
lock
js
ror
mov
xchg
jp
jge
inc
add
pop
xlat
inc
into
push
icebp
push
push
mov
out
lods
add
outs
dec
xlat
es
pusha
(bad)
and
jne
sbb
xchg
repnz
add
xchg
add
fidiv
loop
lods
inc
xchg
in
iret
icebp
(bad)
sbb
outs
es
or
les
dec
push
pop
jg
cld
stc
stos
ds
mov
ficomp
push
inc
jae
cmp
test
and
cdq
dec
xchg
dec
xchg
rcl
add
loope
push
fidiv
pushf
(bad)
retf
inc
fs
fstp
sti
stos
sub
add
jmp
jns
dec
lea
and
push
lock
xchg
cld
ret
fnstcw
jp
jle
inc
mov
rol
xchg
mov
sbb
stos
jne
stos
jl
shl
xor
scas
sub
mov
mov
lea
xchg
push
sbb
xchg
xchg
ins
sbb
mov
shr
xchg
arpl
in
test
addr16
pop
punpckhwd
cli
sub
aas
jnp
xlat
sub
push
retf
pop
cmp
mov
lods
dec
out
outs
sbb
test
fwait
(bad)
pusha
jle
mov
xor
std
xor
or
jp
and
push
sar
loope
nop
jmp
mov
dec
mov
call
pop
push
pushf
mov
stc
push
push
in
lea
adc
xor
pop
xor
jl
lea
neg
and
push
scas
push
icebp
call
jne
in
and
or
sbb
push
dec
enter
pavgw
mov
mov
ss
xlat
xchg
ficom
int3
retf
test
rol
test
(bad)
retf
sub
clc
fsubrp
adc
int3
cmp
inc
dec
fidivr
hlt
sbb
add
ins
push
jmp
pop
xor
fdivr
lea
loop
(bad)
and
movs
rcr
cmp
xchg
inc
test
and
and
adc
mov
cmp
jae
fidiv
push
mov
sbb
gs
loop
clc
jp
sbb
jno
test
inc
adc
pop
sbb
sub
std
xlat
cwde
outs
call
fimul
push
cmp
sahf
push
sub
neg
stc
push
fcomip
inc
adc
mov
xor
js
and
or
gs
jo
inc
dec
push
fwait
jne
pop
mov
addr16
push
call
pop
or
add
jmp
psubusb
imul
fst
ja
cmps
ja
mov
outs
add
jne
push
std
mov
dec
adc
xchg
daa
cmp
mov
push
shl
mov
out
cs
mov
(bad)
gs
cmp
popa
fist
push
out
push
pusha
shr
rcl
push
sbb
sbb
rcl
jae
adc
inc
int3
js
mov
jp
inc
jg
mov
xlat
xor
pop
ins
idiv
dec
xor
repnz
leave
hlt
(bad)
test
lea
jne
in
jo
mov
inc
not
push
repnz
cmp
sti
scas
stc
stos
inc
nop
mov
(bad)
cmps
or
rcl
and
sbb
sub
cmp
div
fidiv
scas
leave
sbb
out
cdq
cs
lmsw
xchg
mov
mov
lds
ins
mov
ret
mov
inc
sti
push
mov
sub
add
fdiv
movs
cwde
mov
and
xor
stos
jmp
std
fsub
call
repnz
(bad)
(bad)
fimul
xlat
out
in
sub
adc
cmp
ins
ins
dec
xchg
lods
sub
and
mov
and
jb
rcpps
hlt
and
ss
dec
and
mov
sbb
pop
jne
hlt
pop
and
cdq
je
js
outs
sbb
adc
xor
xor
mov
xor
sbb
and
imul
dec
cmc
inc
test
and
call
aas
aas
idiv
inc
and
dec
in
add
or
daa
and
jmp
add
pop
mov
cld
lods
test
mov
jo
hlt
stos
xchg
add
aas
add
popf
outs
adc
xlat
xor
gs
pop
(bad)
aaa
(bad)
daa
mov
cmps
add
arpl
cld
pop
xchg
cs
add
pusha
lods
icebp
and
push
into
lahf
sub
leave
sbb
js
movs
or
xchg
jecxz
and
neg
lahf
jo
mov
repnz
pop
(bad)
fcmovnbe
mov
push
mov
sti
jbe
mov
rcr
in
mov
jo
xor
lea
and
in
cs
fcomp
rsqrtps
imul
inc
icebp
inc
sub
mov
not
sbb
shr
mov
fisub
mul
shr
mov
retf
scas
jecxz
push
pop
dec
out
push
scas
ss
cli
sti
add
jnp
push
icebp
and
ins
mov
aas
mov
stos
aam
scas
js
push
pusha
jl
scas
cmp
push
xor
mov
jp
or
call
dec
xor
icebp
dec
(bad)
outs
test
inc
or
in
mov
push
movs
push
xchg
jno
movs
xchg
in
mov
mov
cli
xor
test
add
cmps
je
sar
cmps
lahf
inc
hlt
dec
lds
int
das
or
jecxz
or
push
popa
retf
cmp
mov
in
cmp
mov
mov
outs
push
jbe
mov
stc
jae
out
inc
cwde
or
test
jnp
frstor
and
jecxz
mov
sbb
movs
jbe
iret
push
inc
add
call
or
add
jo
fwait
cmp
movs
jb
popf
outs
test
add
ret
bound
pop
int
sub
rcl
xor
pop
xor
adc
xor
movs
sar
mov
aaa
sbb
fst
popf
sub
and
xchg
pop
rol
xor
dec
dec
fsub
mov
fnsave
jmp
push
in
adc
pop
mov
fstp
nop
sbb
mov
jle
pop
or
mov
mov
add
sbb
aas
sbb
pop
and
test
fsubr
xchg
jle
sbb
daa
ds
shr
popf
sub
push
nop
out
into
aaa
stos
adc
cmp
xor
mov
fld
jnp
jmp
jo
imul
jae
sub
das
mov
add
push
retf
pop
aaa
fcmovnbe
rol
call
iret
cld
jae
daa
aas
es
add
or
bound
mov
xor
daa
mov
jns
ds
into
cli
(bad)
xchg
imul
dec
push
(bad)
xor
popf
lods
lock
shl
outs
in
inc
mov
adc
aad
sbb
inc
in
add
or
add
inc
and
das
xchg
adc
mov
mov
jns
bound
jg
outs
add
sbb
dec
dec
out
sahf
pop
jp
xor
arpl
jle
aaa
and
test
daa
lahf
sbb
mov
icebp
std
cmp
in
xchg
adc
movs
sbb
sbb
sub
pop
loope
rep
ja
retf
call
mov
mov
aaa
and
add
int3
mov
cld
xchg
loop
shl
pushf
pop
fimul
stc
(bad)
nop
xor
loope
dec
imul
int3
dec
ja
mov
push
cmps
call
jo
add
push
inc
add
pop
sub
addr16
push
cli
xor
loopne
push
gs
xchg
xchg
pop
movs
xor
fs
jns
leave
das
mov
mov
mov
mov
mov
push
or
adc
sahf
mov
mov
cmp
cmp
ins
jecxz
ins
sbb
inc
push
jns
data16
cmp
mov
jne
or
jp
repnz
pop
es
into
jns
fldenv
ds
mov
sahf
(bad)
push
adc
sar
(bad)
ret
mov
pop
and
sahf
fcmove
sbb
cmc
(bad)
jbe
add
(bad)
lods
and
adc
(bad)
imul
pop
fucom
shl
jmp
fidiv
fs
aaa
fidivr
test
jle
fld
js
mov
popa
sahf
add
push
(bad)
and
(bad)
cmp
in
fbstp
dec
inc
das
enter
ret
ret
inc
add
call
mov
add
cdq
dec
adc
xchg
hlt
cmps
sbb
daa
or
test
movs
sub
ins
mov
mov
scas
nop
xchg
sbb
mov
test
mov
mov
adc
mov
outs
in
repz
pop
call
and
stc
xchg
adc
mov
imul
and
pop
call
pop
add
and
stos
push
push
test
sub
jp
enter
or
daa
add
jnp
or
mov
sbb
xor
hlt
adc
dec
xor
xchg
fisttp
inc
push
sub
int
lods
mov
je
jo
adc
xchg
inc
push
popa
mov
dec
sbb
int
ds
push
mov
popa
pop
shl
in
pop
cmp
jnp
(bad)
out
inc
jo
mov
sub
adc
xchg
adc
ret
mov
rcr
stos
loopne
inc
xchg
lods
std
or
mov
hlt
cmp
hlt
lods
out
mov
xlat
add
mov
nop
pop
and
fdiv
mov
xor
push
jae
sbb
ins
dec
mov
cmps
push
and
xor
jbe
fs
sub
mov
pop
ins
fdivr
js
inc
lea
repnz
out
pinsrw
push
and
or
push
mov
mov
lods
jbe
lds
test
in
data16
cld
xor
adc
pop
mov
imul
cmp
push
(bad)
fist
inc
aas
add
add
pop
or
loope
mov
jo
push
sub
retf
lods
ins
into
ror
cmp
pusha
rcl
adc
fist
xlat
mov
shl
dec
aam
mov
movs
sbb
jb
stos
mov
push
enter
cmp
popf
(bad)
(bad)
mov
jno
and
adc
jge
add
fwait
rol
push
mov
xchg
and
out
lea
jnp
pop
arpl
neg
xlat
dec
sbb
xor
mov
ret
cmps
pop
add
(bad)
fwait
pop
push
pop
mov
adc
stc
(bad)
jl
stc
sti
aas
pop
push
nop
out
ds
hlt
int
xor
jo
mov
inc
pushf
arpl
loop
or
aaa
push
and
test
movs
(bad)
cli
ret
and
movs
jne
xchg
arpl
push
imul
push
xor
ret
cld
out
push
test
adc
push
mov
lods
test
push
dec
(bad)
popa
rcl
sub
fld
or
push
add
sub
fs
mov
outs
mov
popf
jnp
rol
mov
xchg
dec
sub
mov
int3
jnp
mov
mov
add
inc
pop
adc
xchg
mov
cld
daa
aas
sbb
loopne
jl
cli
sar
mov
jo
or
xchg
mov
ret
inc
adc
adc
or
jle
xor
nop
not
pop
sub
jae
jp
dec
aam
test
xor
ficomp
outs
ret
bound
imul
jg
test
inc
jmp
rcl
(bad)
pop
out
lahf
dec
scas
pop
mov
mov
pusha
cmps
xor
retf
cmp
(bad)
jmp
in
or
int
or
pop
jmp
out
or
xor
jmp
sub
add
mov
jns
sahf
mov
xchg
dec
jmp
rcr
and
gs
mov
jmp
and
cwde
fsub
adc
push
jmp
dec
leave
pop
dec
jae
and
xchg
push
push
cmc
cmp
(bad)
jo
not
je
pop
cs
(bad)
xchg
les
push
dec
xor
in
inc
fcomip
push
(bad)
leave
mov
mov
mov
iret
cs
in
inc
adc
jno
or
push
int
jge
sbb
mov
mov
add
sbb
pop
inc
ss
jo
inc
repz
and
mov
mov
fisttp
xlat
loope
fdiv
jae
fdivr
les
repz
fadd
repnz
sbb
mov
in
and
aam
scas
into
jbe
ja
push
or
je
shl
ss
sub
js
fs
data16
aas
xor
sbb
pop
mov
xlat
push
jg
mov
mov
add
test
ficom
out
inc
sub
push
inc
sbb
loope
or
rcl
std
das
ficom
aam
(bad)
and
fadd
cmp
inc
fsubr
inc
xchg
loopne
aas
popf
dec
xor
adc
sub
jbe
loop
repz
jo
jmp
and
aaa
dec
movs
sub
repnz
sub
cmp
es
outs
das
or
mov
cmps
in
dec
sbb
jg
add
jge
cmps
pop
mov
mov
mov
pop
div
and
pop
stos
daa
neg
mov
sbb
xchg
and
xor
push
xchg
mov
sub
mov
mov
out
outs
xchg
mov
les
ds
stos
xlat
outs
imul
cs
cld
movs
daa
pop
add
je
inc
imul
aad
icebp
fcmovbe
scas
(bad)
bound
bnd
sar
out
cmp
xchg
stos
in
mov
imul
fwait
ss
xor
(bad)
push
stos
shl
inc
scas
aam
retf
pop
fild
dec
(bad)
icebp
out
sbb
sbb
dec
cmp
sbb
js
repz
(bad)
push
lds
iret
push
(bad)
xlat
gs
test
push
test
adc
std
push
movs
test
(bad)
jl
ret
out
shl
xor
sti
mov
push
imul
inc
sbb
adc
lods
pop
dec
rcr
mov
lods
loope
mov
mov
sub
and
fs
int
sub
push
test
leave
cdq
add
jns
sbb
or
ja
imul
cli
movs
push
cmps
cmp
inc
push
sbb
add
addr16
lods
push
lahf
je
cmc
bound
dec
cdq
dec
xchg
or
jle
jns
test
ja
cmps
adc
sbb
cmps
push
push
hlt
in
in
pop
cdq
neg
mov
scas
lahf
xor
into
sub
lds
dec
les
or
jo
push
js
add
lods
les
lea
and
in
out
stos
lea
xor
mov
data16
sbb
ja
jmp
in
mov
hlt
(bad)
xchg
and
ins
sbb
dec
pop
push
mov
imul
ins
push
popa
aam
inc
mov
je
cmc
fcmovnbe
jecxz
shl
lea
xor
jle
pop
push
ret
and
jae
xchg
mov
push
mov
jno
loop
stos
dec
pop
cwde
xor
xchg
dec
sti
cdq
sub
jo
xchg
repz
and
push
jmp
ds
call
push
push
in
sbb
scas
and
fcmovnbe
stos
mov
push
dec
mov
xchg
inc
or
shl
sbb
sbb
rol
call
icebp
scas
xor
or
(bad)
(bad)
cmp
out
push
les
stc
retf
scas
mov
pushf
adc
not
or
jl
mov
sahf
xchg
jnp
mov
xor
and
repz
mov
or
xchg
sub
push
mov
mov
and
stc
mov
adc
cmc
adc
pcmpeqb
idiv
xor
adc
sti
out
mov
imul
mov
xor
push
push
daa
test
mov
sahf
cmp
shl
cmp
cmps
inc
ret
and
mov
push
inc
fucomi
leave
jecxz
leave
(bad)
sub
jo
div
cmps
inc
adc
pop
test
ror
fldenv
mov
hlt
scas
sbb
dec
push
mov
sub
sub
mov
iret
sbb
rol
imul
mov
dec
push
jmp
bound
push
popf
icebp
in
or
std
repnz
outs
bound
(bad)
ror
outs
pop
in
mov
cmp
ret
aaa
mov
cld
retf
pop
(bad)
xlat
xchg
dec
or
stos
mov
movs
xor
pop
mov
je
inc
jo
adc
and
mov
and
pop
out
js
inc
(bad)
jmp
scas
stos
(bad)
jge
imul
(bad)
jnp
ins
push
adc
mov
inc
into
stos
add
dec
dec
xchg
clc
rol
pusha
outs
pop
mov
jge
shr
imul
shr
xor
inc
lahf
adc
rcr
jne
fidiv
cmp
repnz
jo
mov
and
shl
pop
or
(bad)
xlat
xor
mov
push
jnp
sahf
in
jmp
aad
jg
out
sbb
adc
mov
div
cmp
scas
dec
and
popf
cmp
aad
mov
cwde
sub
mov
sbb
mov
test
es
xchg
std
gs
push
jl
js
or
ss
pop
ficomp
mov
mov
test
pop
ins
sub
pop
pop
push
cmps
adc
jae
push
out
jmp
jne
cdq
pop
pop
das
mov
cmp
in
retf
out
fwait
mov
out
mov
popf
frstor
(bad)
int3
xor
cmp
lods
test
or
test
sub
div
cdq
cmp
jp
mov
in
in
movs
sbb
mov
and
dec
scas
fld
mov
mov
daa
sti
aad
mov
stos
imul
mov
aam
mov
mov
repnz
aas
mov
sbb
xor
mov
jmp
mov
and
or
out
aas
push
out
xchg
push
inc
pop
leave
out
mov
fwait
jecxz
test
test
inc
push
clc
dec
lods
data16
and
inc
add
push
and
dec
dec
repnz
add
mov
sub
stos
fidiv
jns
aam
out
fucom
ins
dec
nop
lea
leave
dec
mov
inc
pop
push
lahf
push
clc
push
addr16
adc
pop
ret
outs
addr16
or
outs
mov
dec
or
push
xchg
mov
mov
repz
ret
pop
fst
adc
xlat
popf
mov
je
cli
(bad)
int
xchg
test
xchg
and
jb
movs
mov
hlt
out
ins
(bad)
sub
xchg
int3
jnp
adc
sahf
and
jle
dec
sbb
sub
dec
pop
lods
push
jo
push
imul
mov
sub
cmc
ja
(bad)
cwde
cmps
mov
xchg
mov
fs
adc
shr
xor
ins
icebp
pop
pop
out
push
inc
push
inc
and
add
and
imul
in
sub
push
cld
retf
mov
mov
xor
pop
inc
inc
into
das
xchg
pop
and
jmp
mov
mov
xor
xchg
sub
das
jne
sub
and
mov
sub
icebp
loope
mov
or
adc
(bad)
xor
mov
pushf
call
or
call
out
jmp
sub
outs
xchg
mov
and
mov
sbb
push
xchg
jmp
shl
cmc
loope
push
adc
lds
pushf
imul
or
inc
push
test
mov
fist
mov
inc
mov
ja
jge
pop
in
pop
pop
xchg
fdiv
(bad)
jg
push
fcomp
mov
cs
dec
inc
push
fild
std
mov
add
cmps
shl
and
js
mov
xchg
in
rcl
push
in
jo
xchg
jle
loopne
fstp
rol
jg
add
popa
(bad)
retf
jle
ss
xor
sub
pop
push
inc
outs
jns
leave
imul
jb
adc
cmp
je
mov
mov
pop
ss
aas
sbb
push
cmps
push
ins
loopne
fwait
les
inc
xor
hlt
push
hlt
call
and
test
mov
and
shl
test
xor
jmp
fnstcw
xlat
out
push
retf
push
mov
outs
icebp
mov
add
(bad)
cli
mov
nop
sub
or
push
ret
aad
xor
lods
imul
icebp
and
adc
push
mov
add
mov
int3
add
cld
(bad)
dec
xchg
(bad)
call
js
sbb
stos
mov
cwde
sub
scas
out
fsub
ss
cmp
jnp
push
sub
lods
push
or
(bad)
jae
mov
stos
mov
fwait
clc
mov
test
push
pop
add
dec
das
popf
jmp
shl
mov
sub
in
std
xchg
test
dec
jmp
imul
mov
pop
pusha
mov
push
push
loopne
mov
xchg
cmp
sbb
pop
or
cmp
sti
xchg
movs
shl
mov
cdq
pop
les
cmps
les
mov
popf
sub
je
fisttp
ds
imul
aas
add
aad
pushf
idiv
adc
mov
mov
adc
inc
mov
jnp
lahf
sbb
push
mov
xlat
xor
pop
push
out
mov
push
or
lods
push
jbe
sbb
xchg
xchg
pop
mov
inc
mov
jl
popf
out
call
sbb
inc
mov
sub
or
fld
xor
rcr
addr16
sub
std
push
cmps
sahf
dec
jp
push
jno
stos
daa
fwait
sar
mov
call
outs
sbb
mov
aam
arpl
xlat
add
lods
cli
pop
cmp
push
pop
ins
mov
sti
(bad)
int
xor
or
or
add
sbb
cmps
std
fistp
(bad)
jnp
inc
jae
xor
or
pop
sub
or
mov
cld
push
cmps
rcl
fs
iret
(bad)
shl
and
loop
jle
xchg
ret
push
mov
sbb
iret
sub
mov
push
call
cmps
ffree
add
jmp
fs
fidivr
jne
xchg
push
xchg
mov
xor
scas
inc
loop
scas
(bad)
stc
std
xor
mov
cmps
xchg
jl
sub
xchg
cmp
shl
stos
jo
int3
xlat
daa
sub
jno
sub
out
icebp
cmps
fidivr
xor
xor
shl
ret
jp
sub
jo
aad
and
enter
int
dec
push
arpl
mov
add
and
push
dec
test
loopne
retf
lahf
jge
pop
adc
jns
movs
dec
pop
push
loop
add
test
icebp
lods
jne
pop
push
xchg
sar
mov
test
inc
or
enter
pop
xor
adc
lock
jns
je
out
pop
cmps
(bad)
loopne
repnz
popa
test
enter
out
push
push
add
push
test
les
adc
pop
add
add
mov
mov
mov
or
sbb
addr16
xchg
cs
in
xchg
xor
inc
lods
(bad)
aam
sahf
mov
push
mov
xchg
test
fnstenv
sbb
adc
add
pusha
repz
jae
imul
push
lahf
lods
mov
push
or
fsubr
test
mov
cmps
jmp
hlt
mov
cmp
sub
jno
in
adc
xchg
jl
cld
jns
mov
dec
stos
outs
cmp
cld
mov
push
cmc
and
lods
xchg
rcr
rdtsc
adc
add
stc
push
mov
cmp
pusha
mov
icebp
mov
repz
adc
mov
or
jp
fstp
xor
or
xor
outs
out
in
push
xor
cs
retf
daa
push
sti
outs
mov
cli
outs
jno
and
add
add
stos
xchg
scas
or
cld
xor
clc
adc
sbb
add
sub
gs
cmp
mov
stc
add
aaa
sbb
mov
push
adc
cmp
out
cmp
fsub
retf
sub
clc
push
inc
lds
(bad)
mov
frstor
pmaddwd
cld
js
stc
lods
cmps
pop
out
adc
ja
(bad)
retf
or
add
mov
dec
jne
pop
stc
addr16
inc
sub
cmps
ja
repz
enter
out
pop
cmp
call
add
pop
jmp
mov
cmps
es
adc
scas
pop
dec
pushf
cmps
int3
scas
mov
fwait
fwait
rol
add
int
movs
arpl
push
scas
sbb
(bad)
cld
je
mov
pop
adc
icebp
pop
adc
arpl
dec
and
push
pusha
cmp
push
mov
addr16
xor
popf
xor
cmc
or
mov
jp
sbb
stc
call
clc
popa
popf
ds
pop
ret
(bad)
cmp
mov
retf
sbb
dec
jmp
and
mov
or
clc
cld
pop
in
leave
jge
cmps
mov
outs
aas
xchg
mov
and
mov
js
addr16
xor
cdq
daa
inc
pusha
neg
mov
inc
int3
ins
sbb
(bad)
imul
shr
jl
pop
out
xor
mov
stos
aam
repz
push
shl
bound
(bad)
out
jne
adc
fnstsw
sti
jae
mov
or
outs
xor
cmp
inc
mov
sbb
scas
pop
add
jmp
push
jmp
shl
repnz
push
retf
jmp
cmp
jne
pop
clc
add
imul
and
add
add
push
icebp
xlat
popa
mov
mov
inc
shl
push
hlt
pop
dec
pop
out
pushf
dec
mov
mov
push
xor
xchg
jmp
mov
mov
in
aaa
sub
or
dec
add
sbb
push
mul
sub
popf
iret
jl
test
test
ss
add
cmp
add
ret
dec
adc
pop
(bad)
push
cmp
jmp
cmp
mov
pushf
retf
neg
jbe
and
scas
mov
push
call
call
into
fadd
cli
inc
outs
je
in
inc
fidivr
mov
not
sbb
pusha
pop
jmp
cmp
ret
xchg
scas
call
or
jo
in
dec
punpckhwd
inc
cmp
mov
adc
cmps
les
ret
cld
jmp
daa
pop
aad
cld
lahf
mov
mov
cmp
mov
add
cmc
xchg
ret
and
or
cwde
adc
sbb
cmps
mov
mov
imul
inc
sub
mov
mov
dec
pop
sbb
ds
xchg
fdivp
call
and
cmp
sahf
xchg
mov
call
pusha
pushf
or
daa
(bad)
sbb
mov
push
retf
ss
adc
mov
push
cmp
stos
pop
jne
jae
and
pop
pop
sar
ja
xor
arpl
cmp
xchg
jg
cmp
jae
cmp
and
out
sbb
scas
sti
pop
push
sbb
icebp
shl
pop
mov
sbb
dec
push
scas
cs
ss
xchg
xchg
dec
pop
aaa
xchg
xchg
fnstsw
imul
sub
add
xchg
mov
cmc
xchg
push
mov
rcr
(bad)
mov
mov
adc
dec
mov
mov
mov
or
jb
pop
jle
and
cmp
inc
push
jbe
pop
xchg
test
add
loopne
cmp
jmp
out
dec
cmp
cmp
scas
sbb
loop
xchg
jge
(bad)
jbe
jne
cmp
dec
or
loope
jnp
cld
mov
jbe
mov
mov
xchg
push
pop
iret
sub
jl
fwait
jns
aas
jbe
and
stos
out
pop
sub
fistp
shl
pop
jo
es
(bad)
sub
xchg
popa
jns
test
xor
out
pop
adc
or
in
cmp
in
movs
cmp
mov
sbb
in
adc
aas
mov
pop
sub
pop
les
icebp
and
add
fcomp
sub
(bad)
pop
out
rcr
dec
sub
xchg
adc
add
shl
jg
rol
es
push
loopne
jg
cmp
adc
div
das
vhsubps
das
mov
ja
outs
int
pop
int
sub
cmc
aas
call
xchg
(bad)
ficom
fidiv
movs
das
repz
cmp
or
or
mov
dec
shl
and
add
pop
sub
xchg
jno
pop
mov
adc
lea
dec
jmp
inc
imul
outs
push
or
fst
pop
push
jne
cmp
dec
sbb
or
(bad)
(bad)
or
repz
bound
adc
push
into
or
cld
add
cmp
hlt
jle
out
outs
fdiv
push
stos
popf
enter
push
xor
dec
push
(bad)
and
mov
in
push
aas
jae
daa
xchg
inc
pop
leave
xchg
jns
int3
fstp
mov
jmp
mov
ins
cmc
sar
scas
jmp
scas
(bad)
pop
jmp
rcl
les
gs
inc
sbb
jo
jge
bound
inc
shr
xor
push
cld
add
loop
(bad)
shr
movs
push
mov
retf
or
sti
pop
pop
push
jae
pop
or
mov
das
dec
aam
mov
cmp
lock
loopne
add
pop
ja
fistp
mov
fisubr
call
push
popf
scas
push
mov
mov
sar
and
cdq
jmp
jmp
mov
lods
cmp
mov
mov
sub
por
mov
xchg
lods
mov
inc
mov
push
pmulhuw
cmps
dec
jmp
out
inc
into
ja
es
ret
shl
(bad)
fisub
pop
ins
sbb
cwde
repz
sub
cmc
loop
scas
dec
les
mov
outs
int3
mov
nop
jnp
and
sti
jae
movs
packssdw
sbb
push
movs
(bad)
out
movs
ret
mov
imul
movs
repz
nop
call
nop
dec
rol
scas
icebp
jo
jmp
lahf
lea
imul
xchg
js
pop
push
pusha
hlt
mov
dec
fsubr
fmul
xchg
test
xchg
rcl
jnp
out
and
loop
mov
loopne
cmp
sub
sub
test
div
loopne
popf
xchg
stos
push
sbb
and
cmp
loopne
jo
or
inc
or
test
add
mov
inc
out
test
loopne
cmp
pop
mov
aas
mov
or
jo
dec
xor
idiv
pop
cmps
call
loop
mov
sbb
(bad)
mov
adc
stc
sbb
jnp
aaa
xchg
sub
mov
sbb
mov
adc
pusha
jo
mov
in
push
sub
pop
das
popf
(bad)
aaa
or
xchg
cmp
out
sub
shl
pusha
ins
and
or
mov
addr16
in
sbb
jle
mov
jne
mov
cmp
sub
pop
jae
fadd
dec
je
mov
inc
mov
repz
pusha
call
mov
retf
cli
pusha
das
cmps
cmp
aas
push
xlat
sbb
in
add
shr
jno
jae
pop
cwde
adc
movs
pop
xor
aaa
inc
cs
mov
pop
pushf
ficomp
xchg
jecxz
loop
mov
daa
dec
das
xchg
mov
dec
mov
fwait
push
mov
or
lock
aas
pop
cmps
mov
jne
fwait
retf
mov
sub
popa
ficom
add
xchg
jl
scas
cmp
add
jae
pop
xchg
sub
out
inc
jecxz
(bad)
aad
loop
aad
jl
out
mov
dec
push
xchg
ins
push
mov
mov
mov
movsx
hlt
jo
pop
fnsave
mov
(bad)
mov
data16
push
fcmovnu
push
lods
mov
or
sub
fistp
add
daa
jg
pusha
shl
(bad)
adc
cdq
lock
cmp
mov
enter
mov
in
ret
(bad)
fcomp
pop
lahf
sub
add
adc
add
sub
ins
mov
je
rcl
sbb
(bad)
dec
scas
retf
ucomiss
xchg
mov
movs
push
and
fisub
and
push
cmc
jmp
gs
push
mov
pop
add
movs
std
dec
sub
inc
sar
pushf
je
xchg
call
pop
sbb
stc
or
fsub
mov
push
dec
xor
call
mov
add
xacquire
outs
mov
adc
sub
mov
out
fdiv
rol
cmp
lods
es
out
repnz
jmp
push
push
pop
nop
pop
inc
adc
jp
cli
mov
(bad)
jp
call
mov
inc
sub
jno
mov
mov
lea
xchg
sub
les
sub
(bad)
pop
jg
bound
dec
dec
shl
sahf
je
dec
ins
lock
ror
fidivr
mov
icebp
sub
pop
xchg
push
mov
in
and
push
sbb
jecxz
xchg
xchg
push
xor
jmp
add
push
jecxz
movs
out
rsqrtps
loop
pop
xchg
cmp
xor
(bad)
outs
js
adc
iret
push
mov
int3
imul
fs
xchg
jg
jmp
ret
neg
inc
mov
stc
(bad)
call
jg
pop
sub
pop
mov
loope
xor
out
stos
lods
lods
movs
push
inc
xchg
jp
inc
data16
xor
sbb
or
imul
int3
mov
adc
xlat
call
xchg
into
scas
xchg
aam
add
push
ret
fs
cmp
imul
movhps
and
jne
shl
sbb
hlt
in
add
mov
xor
jmp
mov
push
or
pop
mov
adc
imul
pusha
add
inc
mov
ss
sti
inc
jmp
cmp
mov
aam
imul
or
pop
mov
mov
faddp
jg
scas
push
sub
cmc
mov
icebp
mov
(bad)
fsub
cli
not
cmp
mov
pop
cmp
jle
pop
xchg
pushf
add
add
xor
ss
lds
xchg
scas
cdq
das
je
repz
outs
jns
clc
(bad)
daa
mov
test
or
imul
loop
das
icebp
push
pusha
jle
mov
shl
mov
mov
add
pop
sbb
cld
mov
popa
(bad)
ds
sbb
(bad)
pop
and
add
jne
outs
loope
ss
mov
cmps
sbb
pop
or
retf
cwde
sbb
pop
push
and
in
pop
mov
int3
push
in
fisub
lahf
add
shl
rcr
mov
test
and
or
xor
rol
xchg
scas
xor
sub
mov
ss
std
or
fcom
add
inc
cli
jb
popf
or
mov
jp
ret
int
repnz
and
sub
repnz
shl
xor
out
popa
dec
dec
adc
aad
lds
and
sti
inc
aam
fldcw
adc
lds
mov
jmp
or
mov
out
es
mov
pop
dec
push
cdq
xor
fbstp
mov
sub
pop
inc
ror
fsub
adc
movs
sub
cmp
add
(bad)
das
setle
rol
test
xchg
mov
mov
push
mov
xor
bound
test
cmps
mov
add
pop
es
dec
das
jne
sbb
scas
add
stc
in
outs
add
dec
dec
xor
lds
fstp
ins
imul
mov
pop
data16
sub
out
lahf
ss
mov
inc
cmp
(bad)
test
mov
sbb
push
sahf
add
repnz
inc
jne
pushf
ds
repnz
ja
xor
(bad)
loop
sub
cwde
paddusb
push
stos
sub
in
and
out
aas
lahf
addr16
out
xchg
xchg
out
sbb
sub
cmps
mov
rcl
call
dec
addr16
scas
jmp
add
fild
xor
clc
into
mov
push
stos
or
cmp
xchg
mov
sub
xchg
outs
lea
mov
adc
adc
fcom
retf
ins
xor
mov
in
xchg
in
fstp
dec
xchg
mov
sbb
cmp
mov
mov
mov
cmp
rcr
inc
in
push
xlat
dec
add
mov
jmp
ins
xor
cmps
and
add
test
or
fs
fwait
loopne
dec
push
shl
mov
scas
xlat
sahf
dec
and
or
jmp
sub
clc
jmp
out
add
mov
in
and
cs
gs
je
mov
imul
jl
xchg
push
mov
mov
jge
fdiv
je
push
stos
push
fisttp
sub
pop
pop
push
push
add
test
shl
xchg
nop
mov
shl
cmp
cmps
push
clc
sub
and
xchg
mov
retf
cmp
cmp
sbb
pop
xor
cmp
inc
addr16
mov
jb
iret
jmp
push
cmps
mov
mov
jno
ret
or
es
je
stc
sahf
into
push
(bad)
push
mov
cmps
das
sub
fild
and
inc
push
mov
xor
add
setl
sbb
leave
cmps
add
int3
mov
pop
daa
jo
push
add
inc
dec
mov
repz
mov
ret
sahf
push
outs
xchg
add
fdiv
(bad)
(bad)
ror
mov
mov
adc
loopne
sahf
ret
nop
pop
cmc
adc
lock
(bad)
rcl
mov
add
shl
ins
add
clc
inc
ss
jne
fsqrt
fdivr
(bad)
jmp
xchg
fisubr
neg
cli
or
mov
enter
(bad)
mov
or
add
test
lea
push
add
jl
loopne
cmps
push
sub
xor
push
les
push
or
ret
dec
pushf
adc
inc
inc
xor
ror
mov
(bad)
cs
(bad)
shl
sub
js
shl
es
dec
push
call
adc
fadd
adc
cmps
fsub
pop
nop
shr
sub
push
and
pop
pop
sub
(bad)
loop
(bad)
mul
ror
or
push
xor
call
dec
ds
xchg
push
xchg
jmp
push
movs
ss
inc
and
(bad)
adc
mov
pop
int
aas
pop
addr16
cmc
outs
daa
addr16
cmp
rcl
mov
dec
dec
rol
inc
sbb
in
adc
or
jle
hlt
jno
sbb
cli
aam
dec
bound
dec
sub
mov
sbb
aam
pop
inc
(bad)
sub
jno
push
dec
lock
ins
test
xor
xor
or
ret
push
mov
mov
pop
ja
jmp
cmp
rcr
push
dec
cmp
(bad)
dec
mov
push
(bad)
push
mov
ss
inc
iret
leave
cs
dec
aad
cmp
jecxz
dec
popf
gs
lods
cmp
sub
or
nop
fld
mov
push
jp
xor
or
push
movs
or
jb
mov
jae
(bad)
mov
sub
lds
(bad)
sbb
sbb
inc
pop
cmc
cli
push
sub
push
add
ret
push
clc
enter
sar
adc
adc
and
in
icebp
aas
cdq
cs
(bad)
xor
jl
xor
mov
inc
jns
sar
rol
sub
lods
cwde
xchg
out
or
add
fdivp
repnz
fmul
dec
je
xchg
shr
dec
in
(bad)
cmp
add
push
inc
sbb
scas
or
add
jmp
leave
scas
ss
cmp
test
inc
fist
ss
out
and
or
sub
mov
out
cmp
clc
dec
sbb
dec
jl
popa
push
add
jae
cmc
cwde
push
cmp
pop
ret
push
pop
push
and
push
jno
jecxz
push
add
and
mov
rol
sahf
xchg
fdivr
rcl
clc
lahf
shl
inc
cld
add
cmp
out
aad
std
test
jecxz
add
out
sbb
mov
scas
cwde
dec
sbb
mov
add
fsub
cmp
dec
adc
or
and
(bad)
aas
cs
cmps
adc
gs
bound
push
mov
outs
int3
mov
shr
mov
mov
pushf
mov
outs
jecxz
push
aaa
xlat
push
lds
aad
pop
mov
cdq
pusha
int3
push
add
repz
inc
push
push
popa
loope
call
mov
adc
cmp
imul
xchg
mov
cmp
shl
es
jge
ins
xor
mov
daa
fs
rol
mov
cmp
sub
push
repz
loopne
mov
movs
mov
push
jnp
(bad)
or
xchg
cld
xor
fsubr
sbb
xor
aas
je
sub
jmp
aad
fidivr
pop
lock
push
cld
dec
xchg
iret
fnop
std
ret
push
fist
add
call
rcr
popa
jle
add
add
fcom
and
gs
push
shl
cs
xchg
lea
cli
inc
shr
scas
dec
movs
cmp
pop
sti
test
adc
test
adc
(bad)
cmp
sbb
jg
or
xlat
popa
loop
aad
lahf
add
aaa
retf
enter
call
adc
enter
mov
mov
idiv
fwait
rcr
retf
sti
mov
xlat
lods
in
cld
loope
cmp
mov
push
arpl
cdq
pop
sahf
ins
adc
int
lds
dec
in
(bad)
loopne
test
cmp
jge
scas
xchg
(bad)
xor
in
std
xlat
dec
aam
jmp
and
cmps
xor
push
ja
xchg
sbb
mov
xchg
(bad)
dec
fld
(bad)
adc
jnp
ins
push
jae
gs
push
fisttp
xchg
mov
mov
enter
rcl
sti
or
push
lea
mov
(bad)
sbb
imul
gs
aas
inc
pop
aam
int
push
daa
loope
int3
pop
adc
jl
jae
add
add
sbb
int
push
pop
fld
movs
add
sar
xchg
push
sub
std
and
or
out
sub
and
in
enter
ret
xchg
inc
cdq
inc
push
pop
dec
pusha
add
inc
mov
aas
pop
inc
inc
or
aam
jmp
adc
adc
jae
sub
push
and
int3
cmps
cs
nop
xor
hlt
cdq
scas
ins
cli
sub
stc
xchg
or
dec
xor
jle
(bad)
daa
pop
out
sub
push
lods
ins
jae
aaa
leave
in
je
adc
fcomp
lea
and
mov
aas
out
adc
imul
clc
push
push
lea
movs
cdq
mov
stc
pushf
stos
add
mov
(bad)
mov
push
and
jmp
cmp
je
push
pop
xchg
test
sbb
sti
and
aad
add
xchg
sbb
xchg
std
ficom
push
pop
dec
sbb
jo
call
sti
lods
jno
jbe
pushf
aaa
mov
cs
push
mov
fisttp
pop
mov
lea
push
daa
lds
call
nop
lods
leave
lea
and
out
je
cwde
xchg
mov
cmps
dec
out
sub
xor
sbb
pop
push
fs
scas
das
push
repz
jnp
(bad)
cmc
fld
sub
cmc
lock
retf
pop
pop
shr
and
(bad)
xchg
idiv
(bad)
int3
and
push
fist
leave
and
test
int3
mov
int
ja
iret
cs
loope
retf
test
xchg
push
jno
inc
call
gs
cmps
call
scas
jecxz
mov
in
xor
pop
je
mov
nop
inc
nop
call
sub
sahf
jbe
xchg
mov
int
mov
xor
mov
iret
sbb
inc
and
gs
or
xchg
inc
xor
inc
lock
ror
xor
xor
xchg
loope
shl
push
fcom
mov
test
les
je
mov
stos
mov
and
retf
(bad)
icebp
sbb
push
and
sub
or
jecxz
leave
cmp
or
push
addr16
push
mov
inc
test
or
(bad)
(bad)
fadd
aad
mov
push
int
arpl
pop
std
inc
push
jmp
pop
movs
push
(bad)
sbb
stos
cmp
xor
ins
lea
dec
loop
mov
push
cmp
cmp
or
xchg
je
sub
loope
outs
test
sti
ja
push
loope
outs
test
shr
ins
stos
mov
aaa
add
mov
daa
in
xor
add
test
adc
pop
cmps
cli
adc
idiv
xchg
scas
popf
gs
cmp
mov
call
mov
out
pop
dec
pop
pushf
test
shr
test
lock
lods
(bad)
pusha
jnp
sysenter
mov
xor
jno
cmps
mov
repnz
test
hlt
dec
xor
and
sbb
pop
jae
imul
or
mov
(bad)
addr16
mov
xchg
jnp
(bad)
loop
pop
sar
xchg
and
imul
xchg
xchg
add
call
adc
jno
add
and
add
pusha
sar
bound
cmp
mov
sub
xchg
dec
les
ds
pop
jae
repnz
cmp
xor
icebp
xchg
cmps
jnp
sahf
sbb
aaa
scas
test
mov
fwait
xchg
inc
(bad)
(bad)
mov
inc
outs
lds
pop
inc
sbb
imul
repnz
(bad)
cli
lea
cwde
icebp
test
ins
cmc
aaa
cld
xchg
jae
dec
xchg
test
push
adc
push
mov
pushf
movs
shr
loopne
test
rcr
daa
jnp
jge
int
cmp
mov
rcr
retf
cmp
inc
cmps
jg
mov
pop
popa
mov
cmp
mov
test
ret
xchg
aas
xor
mov
jno
pop
ret
jno
fcom
call
mov
push
cmps
push
add
pop
pop
dec
into
int3
loopne
xor
adc
ror
sub
sbb
or
mov
cmc
in
pop
mov
dec
push
push
ss
into
aad
js
adc
inc
out
mov
sbb
repnz
mov
mov
inc
xchg
rol
outs
and
or
push
and
xchg
inc
cs
inc
jmp
cli
imul
mov
adc
into
rol
xor
push
sub
mov
test
and
inc
dec
inc
test
push
mov
leave
ss
inc
cmp
stc
dec
dec
mov
jnp
add
imul
out
push
xchg
and
bound
ins
adc
dec
dec
and
or
or
mov
mov
in
and
and
and
mov
addr16
repnz
or
adc
xlat
ds
cmp
out
int3
push
sub
mov
sub
imul
movs
mov
cmps
mov
sub
pop
sub
adc
mov
mov
loop
xor
scas
sbb
and
cmps
sub
jge
mov
mov
or
inc
daa
test
loop
jmp
fcomp
pop
aaa
add
js
mov
inc
test
js
sub
jb
shl
xchg
in
call
lahf
out
ficom
rol
and
push
add
pusha
xchg
xor
sbb
stc
int
push
(bad)
out
sub
lock
and
xchg
xor
mov
inc
cwde
push
mov
cmp
or
popa
pop
mov
fimul
into
or
jmp
loope
add
fwait
xor
mov
adc
sahf
retf
cmp
dec
out
call
cmp
loop
mov
or
sar
pop
sub
je
push
push
jno
pop
in
pop
popa
aad
add
and
mov
fbstp
pusha
dec
push
shr
(bad)
add
loop
and
dec
aad
sbb
pop
dec
and
ror
div
mov
in
mov
inc
imul
dec
js
dec
adc
mov
push
pusha
mul
and
rcr
adc
int3
xchg
and
mov
jno
test
mov
xchg
(bad)
std
xchg
stc
xchg
dec
call
ja
adc
rol
(bad)
jp
icebp
out
jle
inc
shl
pop
mov
push
daa
cli
daa
dec
mov
retf
js
dec
clc
sbb
das
sbb
cli
push
mov
sbb
mov
cmps
scas
mov
das
mov
pop
jnp
xchg
ret
lea
ins
xchg
jmp
ja
adc
push
pop
xchg
jo
mov
jmp
test
rcl
mov
sub
xchg
sti
inc
and
nop
push
dec
push
enter
(bad)
sti
imul
loope
fsub
add
lock
mov
test
cmps
lock
mov
movs
loopne
test
or
jbe
fwait
inc
dec
lock
push
xchg
mov
mov
mov
imul
movs
or
sub
cli
sbb
cmp
cmp
xchg
cmp
loopne
jecxz
xlat
add
or
dec
mov
jns
xor
push
jo
popf
fdivr
and
jmp
into
pushf
iret
es
popf
pop
dec
cmp
nop
int
lahf
ret
test
stc
jnp
push
in
cmps
add
pop
pop
add
stos
mov
cdq
xor
jno
jb
sbb
addr16
cmc
xchg
sub
mov
pop
mov
pushf
mov
je
push
lds
and
add
out
xor
adc
enter
sbb
jmp
test
gs
xor
push
sub
inc
adc
neg
xchg
(bad)
int
jnp
xor
nop
(bad)
rcr
adc
out
fst
jmp
cs
ds
mov
or
cli
lock
jo
retf
adc
mov
push
data16
mov
outs
mov
inc
dec
daa
inc
dec
rol
xchg
sub
scas
xor
or
ins
mov
push
push
in
mov
or
test
or
xchg
or
jo
fisub
jmp
mov
ins
imul
cs
popf
add
into
movs
xor
inc
adc
aad
lock
jg
stos
shl
repnz
idiv
jns
ins
pop
leave
fist
(bad)
pusha
push
mov
shr
test
jbe
neg
push
imul
test
das
loope
rcr
and
out
test
mov
cmc
loopne
push
sbb
or
int3
xchg
mov
add
jmp
push
mov
(bad)
sbb
cmps
xor
ret
mov
(bad)
jle
(bad)
es
inc
push
ret
xchg
jmp
nop
inc
pop
mov
fmulp
fnstsw
(bad)
stos
cld
idiv
pop
dec
mov
mov
dec
ret
pop
les
popf
mov
fisttp
cs
sbb
(bad)
retf
add
jg
mov
mov
push
jecxz
ss
mov
(bad)
sahf
div
cld
shl
mov
idiv
inc
lods
popa
cmp
inc
repnz
dec
jb
mov
fcom
outs
mov
sub
pop
xlat
pop
xchg
pop
xor
cmc
je
or
in
sbb
cmp
xchg
xchg
adc
inc
xchg
aad
mov
dec
fsubr
sti
pop
sbb
stc
mov
or
aad
push
lea
and
ror
cmp
(bad)
cmp
gs
pop
pop
scas
xlat
mov
add
int3
lock
xchg
mov
and
inc
sysret
jmp
mov
ss
inc
jp
mov
sub
or
test
jmp
repz
ins
xlat
and
es
test
xor
mov
loop
cmp
lahf
dec
adc
sub
fsubr
push
test
movs
call
ins
rcr
das
das
out
mov
mov
or
mov
aad
mov
sbb
push
(bad)
arpl
push
in
cmp
shl
inc
pop
ret
mov
cdq
js
mov
cdq
lea
mov
js
addr16
jns
mov
push
sub
inc
adc
push
imul
cld
push
mov
call
xor
sahf
or
dec
std
aaa
fbld
push
inc
(bad)
mov
fldcw
bound
ins
sub
in
daa
fimul
jge
jae
sbb
clc
add
push
push
and
cli
test
ficom
and
sub
cld
mov
and
ja
and
pop
xchg
adc
mov
outs
pop
dec
fisub
rcr
addr16
jge
and
popa
cs
lea
clc
fwait
add
mov
lods
sar
leave
mov
sahf
add
and
out
xchg
ror
mov
frstor
mov
add
fcomip
jecxz
adc
or
out
int3
mov
pop
dec
cmp
or
xor
inc
call
adc
and
test
xor
aaa
(bad)
cwde
xor
loopne
mov
inc
out
data16
adc
cmp
nop
or
inc
out
and
xor
or
mov
jecxz
adc
dec
cmp
or
and
jnp
xchg
pop
call
push
(bad)
aaa
cmps
sub
xchg
fistp
inc
fild
lods
add
mov
jp
in
jo
add
add
and
inc
fs
push
inc
cmp
sub
add
and
or
cwde
or
(bad)
aad
ja
xchg
retf
sbb
icebp
xor
inc
sahf
shr
mov
jge
adc
(bad)
outs
push
or
ret
pop
mov
cmps
aad
sbb
cmp
cwde
das
(bad)
and
mov
jmp
rcr
mov
mov
mov
xlat
mov
nop
ficomp
push
xor
daa
mov
xor
out
jge
fcomp
mov
js
fist
test
pushf
jmp
xor
ret
invd
mov
or
icebp
xchg
cmc
popa
cli
fcomp
cmc
retf
push
dec
popf
cmp
xchg
pop
in
js
pop
push
push
mov
popf
sbb
cmp
pop
mov
aam
fdiv
inc
popf
inc
test
int
push
xchg
adc
mov
pushf
out
fstp
sub
cmp
jae
sub
loop
out
ret
jns
icebp
loopne
xor
out
fild
jns
adc
lahf
iret
int
mov
pop
add
ds
jb
movs
push
cwde
dec
loopne
and
in
ins
jecxz
mov
sti
ja
xor
add
xor
sbb
mov
xchg
aad
or
jns
mov
or
xchg
dec
xor
lock
push
lods
fild
es
mov
mov
sti
mov
fimul
call
jmp
sub
std
pop
push
fxch
mov
iret
mul
push
scas
adc
mov
push
xchg
cmc
gs
stos
sbb
fisttp
dec
push
sbb
out
les
pop
sub
shl
int3
pop
scas
and
push
cmp
out
fdiv
sahf
(bad)
jmp
or
pop
inc
or
jl
aam
test
and
in
outs
xchg
sub
add
loop
pushf
outs
jmp
and
and
popa
add
(bad)
fidivr
dec
fistp
add
mov
fwait
loopne
inc
sub
sub
push
or
fs
xor
push
jl
js
inc
and
out
inc
fistp
mov
stc
clc
push
mov
retf
test
fisubr
in
mov
push
(bad)
call
call
loop
int
mov
mov
pop
mov
sahf
out
loopne
lods
mov
dec
xchg
xchg
mov
mov
sub
ins
movs
es
or
mov
fwait
jg
sub
sbb
movs
mov
shl
or
shl
outs
push
dec
cmps
mov
gs
sub
cwde
cld
shl
movs
je
xor
xchg
imul
dec
add
pop
in
sub
cs
sub
or
cld
out
fild
push
jb
xor
mov
mov
ret
mov
jno
mov
jnp
idiv
stos
aam
fwait
inc
ret
stc
cmp
aaa
sub
cdq
push
mov
sub
mov
inc
pop
inc
in
and
sbb
add
mov
movs
or
leave
fwait
loop
aad
mov
iret
(bad)
out
jp
cmp
xchg
stc
inc
mov
jle
add
push
jecxz
push
xchg
adc
pop
lods
xchg
cmc
inc
sbb
and
sub
inc
jmp
push
pop
ror
xchg
dec
stc
jl
leave
and
sub
adc
imul
lods
inc
ret
test
inc
jae
movs
push
add
or
scas
aaa
fldenv
pop
and
and
lahf
movs
je
test
sbb
adc
push
repz
test
mov
mov
xor
cmc
(bad)
pop
add
jbe
xchg
push
push
es
pop
cmp
xor
push
je
xchg
cmp
iret
sub
xor
mov
mov
sbb
fsub
add
enter
je
xchg
mov
jp
ss
(bad)
fsubr
xchg
cmp
dec
mov
(bad)
xlat
fbstp
int
or
jp
or
fiadd
and
xchg
loope
lods
(bad)
jp
repz
in
or
jmp
add
xchg
add
(bad)
xor
adc
sub
sbb
mov
in
scas
sub
clc
inc
fs
fistp
cwde
xchg
jge
add
data16
repz
aaa
push
data16
mov
mov
pop
repz
stc
in
js
cdq
push
aad
and
xchg
mov
mov
cmp
mov
jl
xor
xor
iret
sbb
sub
daa
ja
inc
out
loopne
jecxz
(bad)
sti
or
adc
jo
mov
icebp
loopne
hlt
fcomp
movs
enter
inc
xor
mov
jl
in
mov
add
xor
xchg
aad
add
and
in
fs
ins
rcl
ret
shr
in
push
inc
mov
std
gs
sti
push
inc
cmc
test
inc
cdq
add
jb
push
push
pop
sbb
sti
hlt
mov
ror
mov
mov
and
inc
sub
xor
lahf
push
xchg
dec
cdq
aad
add
cmp
pop
and
iret
outs
inc
sbb
popf
popf
mov
dec
jnp
and
test
adc
inc
movs
jg
fcomp
popf
rol
and
push
jae
add
aaa
and
mov
dec
out
lea
dec
push
pop
push
aad
out
xor
cmps
lock
mov
movs
pushf
dec
sahf
cld
mov
sbb
jmp
fistp
int3
pop
mov
pop
mov
xor
addr16
jge
in
cs
das
ins
cmp
lahf
xor
cli
push
mov
gs
mov
ret
add
lods
sbb
add
pusha
(bad)
enter
add
xor
dec
ret
xchg
enter
adc
stc
inc
addr16
rcl
inc
lds
pop
cmps
mov
mov
xor
cmova
sub
mov
push
imul
(bad)
cmps
mov
xor
push
push
cwde
out
pop
xor
xlat
or
add
stc
xchg
jmp
ret
inc
xchg
test
aas
rcr
popa
fadd
test
test
je
add
pop
js
dec
mov
jmp
mov
xchg
jb
lods
mov
movs
lods
add
or
test
test
xchg
repz
popw
pop
pop
lock
lods
jg
inc
xchg
in
sti
cdq
push
mov
loop
inc
test
mov
or
mov
lea
pop
(bad)
cli
jl
aas
mov
xor
out
dec
std
dec
daa
addr16
scas
jecxz
and
xor
mov
pop
mov
in
std
sbb
pop
jge
inc
std
inc
jle
cmp
cmp
xchg
add
ud1
push
mov
xchg
fsubr
loop
push
int
jnp
pop
(bad)
sar
mov
int
nop
retf
xchg
pop
xlat
xor
jo
cmp
adc
xchg
cs
aas
hlt
leave
pop
loopne
mov
inc
add
push
lea
rcr
mov
inc
cli
xor
dec
(bad)
or
aad
sub
mov
ficomp
loope
imul
pop
ins
jne
repz
stos
fwait
adc
push
bound
jmp
add
test
pop
shl
push
jle
pop
mov
adc
mov
xor
es
dec
cmp
inc
int3
das
cmp
jmp
inc
pop
mov
fadd
jl
nop
(bad)
and
mov
jns
cld
ret
jmp
or
push
or
or
and
jmp
sub
sub
inc
lahf
jmp
inc
call
dec
rcr
(bad)
xor
dec
test
dec
adc
mov
xchg
dec
cmp
ret
sub
and
lahf
das
mov
test
mov
out
jb
push
dec
sbb
test
xlat
cdq
(bad)
pusha
pop
sub
adc
jae
dec
xor
push
push
mov
sar
xchg
pop
mov
sub
into
inc
jl
pop
mov
pop
mov
fild
mov
fadd
mov
(bad)
add
aad
pop
jp
inc
call
pop
jg
imul
adc
iret
stc
and
cwde
push
or
mov
iret
cmp
or
clc
sbb
imul
cmp
es
fs
pushf
mov
adc
lahf
scas
sar
iret
(bad)
popf
enter
sbb
scas
out
push
std
mov
and
cmc
pop
sub
pop
xor
xor
cmp
xlat
pop
sahf
cmp
fstp
and
and
push
adc
xor
inc
stos
call
fild
push
dec
mov
add
mov
shr
push
movs
test
icebp
xchg
cli
cmp
mov
xor
mov
jns
mov
cmps
daa
sub
icebp
sub
fadd
test
mov
and
mov
bound
fwait
jbe
shl
and
lock
pushf
imul
stos
sbb
retf
pop
add
mov
outs
push
cmp
pop
ror
rcr
scas
add
test
push
mov
pop
imul
lods
cli
frstor
jns
das
les
cld
rol
js
and
xchg
xor
jns
popa
xchg
lods
and
mov
lds
and
jge
out
sub
xchg
jbe
xor
loopne
imul
push
dec
mov
ret
or
and
mov
outs
mov
test
jns
jo
out
ror
mov
mov
jle
sub
cmp
sahf
xchg
inc
fisub
int
push
dec
jns
(bad)
clc
(bad)
mov
pop
jl
jo
jbe
sub
sub
or
popa
imul
ja
(bad)
out
cld
sub
jno
xchg
mov
mov
sub
mov
ret
out
push
pop
in
inc
xchg
push
add
das
sbb
fwait
cwde
sub
shl
neg
add
sub
jmp
in
mov
adc
(bad)
stos
lods
call
cmp
cmc
push
jae
div
out
adc
jmp
push
addr16
aam
mov
iret
fcom
cmp
cdq
(bad)
(bad)
jns
fiadd
inc
lods
cmp
(bad)
loopne
mov
je
sub
std
jg
fs
test
push
repnz
mov
sbb
and
test
test
les
pop
and
enter
into
adc
(bad)
aad
add
mov
js
js
sub
inc
retf
cmps
mul
add
(bad)
mov
jg
dec
shl
xor
adc
dec
(bad)
dec
inc
or
cs
aam
add
sbb
jbe
das
jo
push
icebp
cmp
mov
xchg
retf
xchg
not
adc
mov
or
mov
pop
jmp
pop
pop
aad
mov
je
mov
bts
dec
cs
push
mov
cdq
xchg
out
or
xor
xor
push
mov
xchg
imul
lock
add
addr16
sbb
iret
sub
sub
pop
(bad)
dec
mov
div
movs
das
xchg
std
call
xor
mov
pop
mov
push
xchg
int3
mov
addr16
outs
xchg
loopne
sub
jp
mov
fldcw
xor
add
loopne
mov
cld
ja
sbb
ret
mov
jb
push
xor
scas
inc
clc
cmp
add
test
xchg
shl
xor
pop
mov
cmp
inc
dec
ins
push
pop
loope
jno
pusha
inc
fwait
adc
les
jmp
mov
les
rcr
fiadd
std
icebp
es
int
(bad)
inc
fnstenv
repnz
dec
movs
pusha
rcl
(bad)
cmp
cmp
mov
cmc
pop
popa
sub
sbb
xchg
jns
hlt
cmps
adc
iret
stos
test
xor
xchg
loop
enter
xchg
cmp
(bad)
aad
xchg
int3
cmp
xchg
adc
inc
scas
pop
aam
popf
call
mov
adc
xchg
xor
pop
clc
push
mov
mov
or
or
aas
lds
push
push
jnp
cmp
adc
mov
add
inc
bound
cmp
fst
lds
xor
out
ins
and
fidivr
sub
test
jno
pop
jno
mov
pop
add
ficom
ins
ret
fild
mov
div
and
mov
or
ins
pop
and
inc
dec
mov
jmp
xor
add
push
iret
xchg
rcl
fwait
out
sbb
call
dec
fbld
mov
outs
adc
repz
pushf
out
mov
xchg
test
mov
jnp
retf
inc
sbb
lea
xchg
mov
sbb
adc
or
inc
xchg
ror
ret
mov
ret
and
lods
gs
jle
pop
inc
adc
clc
sbb
xor
mov
call
sbb
test
lahf
test
jb
or
cmp
mov
inc
sbb
fnstsw
jb
lods
mov
pop
mov
gs
xchg
inc
inc
push
dec
outs
jl
xchg
je
daa
shl
adc
mov
jbe
xchg
into
loope
(bad)
loopne
add
arpl
loope
test
dec
leave
xor
inc
(bad)
outs
sub
mov
sbb
xchg
add
cmp
int
push
(bad)
rcr
inc
retf
xchg
je
add
mov
mov
repz
jnp
jo
dec
aaa
dec
xor
sub
push
or
call
ror
jg
rcr
cmp
sub
adc
cld
pop
scas
mov
daa
fidiv
not
and
fnstenv
ror
sub
cld
ds
sub
fwait
sbb
xchg
ret
or
mov
mov
jp
loopne
cwde
mov
push
mov
or
mov
mov
inc
nop
scas
mov
js
rcl
xlat
xlat
jnp
popf
lods
adc
mov
pushf
cwde
sub
stos
hlt
ss
cld
ret
mov
sub
adc
lahf
inc
mov
(bad)
aam
test
cs
mov
clc
mov
cmp
test
aam
add
ret
loopne
dec
ds
add
test
pop
xchg
mov
in
xchg
xor
cmp
movs
rol
call
imul
ret
fnstsw
loopne
xor
push
imul
test
jb
arpl
xor
jbe
out
lock
sbb
aas
clc
mov
test
cmps
(bad)
jmp
(bad)
jp
jnp
and
inc
xor
stos
mov
jb
mov
xchg
jne
call
mov
push
or
and
and
xchg
add
sub
and
scas
jbe
cmps
out
and
push
hlt
lea
push
adc
fistp
loop
outs
in
movs
addr16
and
xchg
scas
xchg
dec
sbb
adc
fild
(bad)
xor
inc
cs
nop
paddb
bound
sbb
rcr
sbb
aaa
loopne
int3
dec
adc
(bad)
rol
aaa
int3
pop
xchg
retf
sub
push
es
and
sub
into
pop
or
sub
sahf
sahf
mov
int
sbb
shl
adc
and
fwait
push
mov
pop
xchg
jl
lahf
push
push
sbb
cld
adc
aaa
sub
sti
lods
cdq
(bad)
adc
pop
loope
xlat
(bad)
or
xor
xor
popf
arpl
aad
mov
pop
loopne
pop
js
ror
ficom
lahf
pop
lahf
mov
xchg
sbb
xchg
add
cs
pop
mov
sub
ja
ret
fiadd
mov
movs
div
retf
push
(bad)
fnsave
stc
leave
shl
jge
int
xlat
adc
push
and
aad
sbb
xchg
xchg
inc
dec
or
sbb
outs
outs
cmps
ins
call
jl
pop
arpl
fwait
xor
ins
mov
sti
adc
push
xchg
js
dec
dec
mov
(bad)
or
ds
data16
ds
jmp
adc
and
cmp
fidiv
scas
mov
push
xor
stos
push
iret
(bad)
push
daa
int
mov
cmps
sar
jo
and
in
pop
aas
xchg
nop
repz
cmps
adc
jge
cwde
(bad)
rcr
pop
out
sahf
div
jns
mov
enter
mov
loope
mov
mov
(bad)
mov
pop
pop
loop
fs
(bad)
cli
pop
leave
add
jl
lahf
mov
clc
mov
movs
clc
aad
adc
cmps
mov
in
in
imul
jns
test
cmp
stos
test
stos
imul
loope
and
lock
mov
or
cmps
push
cmp
xor
popf
loopne
pop
(bad)
ja
inc
repz
and
add
mov
cmp
jge
xchg
and
push
bound
les
les
cmps
lods
retf
sbb
lahf
dec
gs
push
cmp
dec
mov
sbb
cmp
and
dec
cmp
call
rcl
dec
push
xchg
mov
cmp
and
sar
push
ds
call
sbb
nop
ficom
cwde
int
stc
outs
xor
jno
aas
sbb
inc
mov
fsubr
fucomip
ret
adc
das
adc
mov
loope
mov
inc
mov
arpl
push
lahf
mov
aas
dec
test
aaa
popf
xor
(bad)
adc
pop
add
push
xor
dec
scas
imul
je
retf
imul
sar
push
fcomp
jmp
mov
ret
je
scas
ror
adc
dec
push
int
push
dec
xor
cmp
popa
popf
jecxz
sahf
scas
lea
fs
enter
ins
pop
mov
lods
lds
imul
inc
jmp
das
xlat
dec
mov
iret
popf
sub
aaa
loope
mov
out
movs
push
and
jbe
xor
inc
mov
cmp
dec
in
mov
lods
and
cmp
test
mov
lods
add
pop
push
retf
dec
inc
mov
addr16
sub
repz
retf
push
jmp
rcr
dec
mov
aaa
or
cmc
xor
shl
jg
pop
and
out
and
push
jo
sbb
arpl
inc
mov
jmp
or
iret
not
je
xchg
cld
adc
xor
rcr
sub
push
push
add
sahf
mov
in
inc
hlt
mov
mov
xchg
scas
out
retf
or
inc
and
jmp
add
jle
call
jle
test
xor
jle
cmc
jge
push
add
arpl
inc
adc
and
sub
fstp
jb
mov
call
das
push
scas
outs
mov
(bad)
iret
int3
jb
mov
add
ins
rcl
jmp
mov
push
push
jmp
push
or
dec
les
inc
sub
cli
mov
sti
icebp
ja
outs
and
mov
lods
test
sbb
hlt
test
sets
xlat
mov
in
loopne
ds
fimul
(bad)
fld
sbb
cmp
xor
outs
shl
in
add
inc
or
mov
fwait
das
icebp
jp
lods
jbe
xor
dec
scas
cmc
and
mov
pop
ret
je
imul
cs
shr
xchg
test
push
add
add
pop
and
lds
outs
neg
pop
out
inc
stc
enter
sbb
fld
push
and
daa
pop
imul
mov
out
addr16
jae
lods
in
xor
pop
mov
add
jbe
jne
pop
adc
retf
push
mov
ds
pop
cmp
in
leave
push
mov
hlt
jnp
xchg
jmp
lea
mov
stos
mov
push
and
iret
pop
push
inc
out
xchg
xor
push
jl
(bad)
call
push
mov
dec
or
enter
mov
push
mov
cmp
hlt
cmp
cmps
cld
dec
or
(bad)
retf
(bad)
dec
sub
aam
ds
pop
loopne
push
push
mov
add
sub
out
repz
push
pop
inc
inc
mov
push
popf
and
xchg
jge
cld
sub
push
xchg
shl
loopne
(bad)
nop
test
(bad)
rcl
test
jns
inc
icebp
push
xchg
push
cli
cmp
leave
sbb
adc
push
jg
mov
inc
shl
movs
jnp
push
ret
mov
inc
and
xchg
test
inc
xchg
cmps
or
jecxz
out
aaa
xor
pop
xchg
retf
dec
push
pop
jae
stos
add
lahf
fwait
push
(bad)
jecxz
adc
or
jle
out
cmp
aas
in
out
pop
in
(bad)
sti
retf
push
dec
enter
out
and
adc
jo
add
(bad)
aas
xor
xor
pop
pop
adc
(bad)
xchg
fst
xor
stos
inc
ins
fstp
rcl
xchg
push
or
test
iret
mov
pop
xchg
adc
call
cld
add
jp
in
cwde
jp
cmp
pop
loop
and
movs
jge
dec
jp
mov
call
jne
test
rol
imul
cli
and
sub
push
in
inc
mov
mov
xchg
das
imul
cmc
and
sub
jg
ror
fcomip
repz
mov
dec
mov
push
fucomip
jne
xor
into
push
stos
int3
sar
cmp
js
aas
popa
shl
and
jmp
in
push
ret
mov
in
adc
faddp
jns
arpl
aam
add
or
xchg
out
pushf
jmp
jmp
jl
add
daa
or
dec
std
sub
mov
test
inc
adc
xchg
rol
mov
sub
pop
and
sbb
mov
ja
xchg
fwait
and
jno
cmps
ss
pop
clc
inc
retf
call
ins
sbb
pop
jo
jmp
leave
inc
push
js
adc
sbb
push
add
dec
add
cmp
mov
out
test
mov
loopne
mov
cmp
jmp
sbb
in
rol
xchg
out
aaa
imul
lea
xor
ror
iret
or
lock
mov
and
pop
std
xor
ins
(bad)
inc
cmp
ss
test
pop
cmc
jae
pop
shl
add
in
add
test
cmp
mov
jge
jmp
test
mov
inc
scas
sahf
xlat
arpl
or
clc
iret
pop
jno
and
dec
je
(bad)
aad
jg
loop
sahf
mov
call
push
mov
mov
sbb
dec
stc
inc
adc
cld
ja
sub
jne
mov
pop
adc
lahf
daa
jp
lods
add
pop
lahf
dec
push
dec
clc
sbb
adc
pop
xor
rol
in
ss
pop
cmp
push
inc
and
mov
mov
dec
movs
push
adc
test
pusha
mov
mov
sub
(bad)
cs
gs
jge
xor
mov
dec
pushf
leave
fstp
aas
cmp
sub
push
fadd
arpl
xor
pop
or
jp
xchg
adc
dec
outs
shl
std
dec
cmp
adc
sbb
cmp
sbb
stos
pop
aaa
dec
cmp
cld
jge
and
xchg
outs
xabort
mov
icebp
stc
mov
clc
cmps
fidiv
jo
and
jne
fwait
inc
fld
adc
mov
out
push
mov
ror
daa
adc
gs
inc
scas
mov
xor
ret
jno
scas
jns
test
sub
jle
pop
pushf
stos
das
(bad)
loope
jecxz
jne
lods
mov
cmc
fcompp
sbb
push
push
(bad)
(bad)
int
add
xchg
inc
cmp
pop
push
pusha
out
dec
test
sbb
cmp
push
div
popa
cmp
push
out
fcom
outs
mov
add
loope
pop
jge
mov
retf
aas
rcl
mov
pop
add
mov
push
dec
push
test
adc
int
mov
dec
xor
in
js
xchg
adc
(bad)
out
jb
jge
push
mov
test
dec
jmp
loopne
or
inc
mov
pop
adc
adc
ja
and
lea
xor
retf
pop
aam
adc
ss
call
push
pop
icebp
sbb
pop
cmps
cmp
xor
xchg
hlt
lds
mov
or
cmps
sbb
cmp
inc
sbb
and
mov
(bad)
cmp
cmp
fwait
pop
add
out
inc
in
scas
stos
cmp
outs
mov
cmp
jne
out
dec
loopne
popf
inc
dec
test
cwde
aad
jg
test
jg
mov
mov
mov
(bad)
adc
mov
jmp
fnsave
mov
push
or
and
js
adc
fwait
mov
pop
test
push
arpl
adc
(bad)
xchg
stc
xor
loop
(bad)
pop
mov
call
add
popf
xchg
push
push
jle
mov
mov
push
sbb
out
jae
mov
mov
dec
xchg
imul
imul
sub
sbb
push
mov
int
push
cmc
out
cli
cwde
pop
cmc
fsub
les
add
lea
call
ja
ja
mov
cld
rcl
rcl
rol
or
sti
xchg
cmps
push
xchg
idiv
mov
push
jmp
aam
lds
data16
ins
rol
dec
add
xor
(bad)
push
jns
cmps
aas
sahf
pop
or
fisttp
imul
cwde
cwde
iret
fsub
pop
inc
pop
jnp
(bad)
mov
jp
or
xchg
rcr
imul
daa
mov
push
stos
mov
xor
cmp
pop
jecxz
xchg
clc
mov
xchg
mov
xor
xor
xchg
stos
jo
out
ss
fst
retf
pop
dec
ins
push
jle
nop
pop
cs
mov
gs
ds
inc
xchg
xchg
xor
or
push
add
mov
mov
pop
pop
ror
xor
fimul
pop
imul
fisubr
fs
rcr
test
scas
and
daa
and
bound
add
and
inc
mov
pop
shl
xorps
repnz
pop
cwde
push
test
out
sahf
aad
pop
xchg
aaa
popa
int3
je
jecxz
movs
sti
sub
cmp
sub
jne
jecxz
jbe
mov
mov
push
and
jle
push
jbe
pushf
dec
dec
dec
adc
es
adc
sub
or
dec
cmp
sbb
mov
pop
push
jne
cmp
dec
lods
inc
call
pop
call
idiv
aaa
gs
mov
mov
add
lds
test
enter
cmp
(bad)
xacquire
jmp
into
mov
xor
loope
push
mov
push
repnz
js
mov
lea
fwait
mov
movs
test
jnp
lock
adc
es
mov
mov
std
push
pop
inc
push
sbb
xor
push
or
outs
pop
lods
scas
dec
das
cwde
shr
sbb
fnop
and
inc
stos
add
xlat
mov
jmp
sbb
pop
mov
cmp
out
jp
sti
imul
sub
xlat
push
shr
jae
fwait
and
and
mov
(bad)
je
fmul
cmp
cmp
in
push
fs
les
retf
xchg
cdq
(bad)
fwait
sub
int3
cmp
add
cdq
and
cmp
lods
dec
(bad)
jg
mov
push
pop
pop
and
jno
rol
popf
scas
loope
push
pop
push
mov
lahf
or
mov
in
(bad)
movs
ror
fist
bound
mov
aam
inc
cdq
jp
xor
mov
dec
out
dec
pushf
pushf
mov
jo
imul
inc
jo
dec
aas
mov
pop
int
cld
loope
aam
js
and
movs
lods
cmc
pop
test
(bad)
cli
call
xor
cmp
int3
fldcw
pop
(bad)
ror
jmp
ret
outs
int3
cli
inc
jmp
aaa
inc
es
pop
mov
test
inc
push
js
cdq
push
xchg
jne
in
push
rol
inc
inc
test
inc
push
and
pop
xchg
std
in
loop
and
cmps
xor
add
mov
adc
ins
jbe
jae
pop
mov
xchg
or
jae
jl
adc
sti
mov
ins
jno
jnp
enter
push
(bad)
cmp
xchg
pusha
icebp
stos
push
dec
and
jle
test
xor
dec
fs
stos
mov
mov
in
xchg
ins
xor
mov
sahf
fild
push
mov
cwde
in
mov
mov
xchg
push
sub
repz
dec
push
lea
pop
jnp
enter
scas
mov
push
jge
adc
xlat
push
adc
push
aas
cwde
lea
mov
sbb
mov
lea
cmp
dec
cwde
fmul
push
or
popaw
sub
xor
addr16
cld
push
enter
mov
js
rcr
je
xchg
aaa
lods
stos
repz
(bad)
call
adc
push
pop
in
jns
(bad)
std
or
sub
sub
jno
mov
int
jb
sbb
(bad)
(bad)
mov
push
add
and
jno
shl
cmps
cmps
bound
push
stos
push
mov
outs
nop
lods
test
xchg
fmul
call
into
xor
nop
in
sub
ins
xchg
(bad)
jbe
(bad)
in
aam
sbb
fdiv
in
jmp
dec
mov
and
mov
lahf
inc
mov
in
cmp
fcomp
push
dec
cmps
pop
xlat
cmp
movs
test
test
or
movs
cmp
out
clc
and
jecxz
mov
add
mov
jbe
sub
call
cmps
(bad)
xchg
xor
outs
push
sbb
cmp
dec
adc
dec
xchg
jge
xor
pop
push
xchg
adc
fidivr
mov
aas
cmc
js
and
pop
(bad)
cmps
jmp
cmps
stos
push
dec
not
cmp
xchg
bound
xor
adc
add
inc
mov
into
push
(bad)
mov
clc
jbe
jecxz
cmp
aam
pushf
test
fimul
je
mov
pop
out
loop
ss
xor
and
rol
loopne
imul
add
xor
nop
imul
cmp
arpl
test
mul
inc
outs
out
popf
pop
dec
(bad)
mov
or
scas
gs
or
je
push
js
cmp
jae
xchg
call
nop
cmp
idiv
and
cmc
or
push
std
push
cmc
adc
fs
test
sbb
jnp
inc
iret
stc
dec
xor
sub
sub
xchg
shl
int3
push
fdiv
mov
outs
push
mov
sub
xchg
and
fcomp
jbe
xchg
mov
test
pop
fs
jmp
stc
rcr
popf
out
mov
or
adc
mov
push
xchg
bound
cmps
fidivr
inc
and
pop
int3
cmp
mov
mov
and
outs
xor
sub
ja
cmp
mov
push
call
inc
inc
sbb
dec
xchg
(bad)
sti
pop
add
push
ror
repnz
jnp
lods
lds
mov
fstp
imul
sbb
mov
gs
sar
test
jo
or
loopne
aad
xchg
cmp
mov
lods
mov
test
outs
test
mov
xor
ror
jp
movaps
addr16
and
sub
pusha
jecxz
adc
xor
inc
scas
xchg
cmp
xor
(bad)
sbb
fst
pop
imul
cdq
sub
or
push
icebp
in
loop
mov
test
movs
(bad)
push
jne
adc
mov
(bad)
clc
into
push
test
inc
jle
lock
ds
fdivr
xchg
push
sub
xchg
xchg
adc
ins
dec
je
punpckldq
rcr
cld
cmc
mov
loopne
test
jge
aas
in
hlt
lea
adc
int3
sbb
sub
mov
lods
test
jecxz
mov
push
sbb
mov
and
mov
cld
leave
ja
sti
neg
xchg
cmp
sbb
jge
or
inc
inc
shl
xor
or
dec
loopne
test
loop
push
add
jb
lea
ins
stos
(bad)
into
inc
push
aad
jmp
add
lods
dec
xor
ss
jecxz
das
es
bound
leave
popf
xor
and
aad
movs
sbb
push
call
pusha
outs
mov
inc
adc
xchg
jmp
add
xor
popa
movs
or
sti
gs
or
lods
xchg
cmpps
cdq
ins
mov
inc
loop
sbb
xor
daa
pop
pop
aad
ja
and
pop
push
cmps
(bad)
call
cmp
xlat
mov
(bad)
sbb
fs
pop
sahf
ficomp
fnstenv
lock
(bad)
mov
in
add
jo
nop
cdq
pusha
fimul
in
and
sar
dec
lods
or
ds
stos
push
rcr
dec
mov
gs
jg
xor
lds
iret
pop
cli
push
and
enter
xchg
sub
jno
cmp
data16
inc
inc
mov
cmps
repnz
fisubr
es
icebp
inc
cmps
push
daa
fisttp
nop
outs
aad
xor
ss
pop
in
test
das
sbb
in
xor
mov
add
push
std
pop
ss
loop
cmp
adc
xchg
jge
and
out
cli
inc
jmp
scas
out
adc
adc
mov
das
mov
outs
push
or
jmp
aas
repz
and
popa
inc
mov
leave
mov
retf
clc
out
out
test
jb
ja
sbb
mov
dec
mov
mov
fdivr
daa
test
bound
mov
mov
add
out
sti
shl
pop
es
mov
cmps
xchg
xchg
dec
fs
cs
shl
xor
xor
enter
int
jmp
sub
cmp
xchg
sbb
aaa
int3
aam
sbb
dec
cmps
or
adc
xor
(bad)
sbb
dec
mov
cld
repnz
outs
adc
ins
mov
mov
sbb
xlat
push
pop
imul
jl
add
movs
inc
mov
xchg
nop
sub
addr16
outs
pop
sbb
jmp
xor
cld
pop
xchg
pop
xchg
ins
push
jmp
cmp
sbb
inc
test
cwde
jb
mov
or
iret
pop
xor
jb
loopne
jle
jg
mov
sbb
or
xchg
shl
(bad)
push
xor
sub
add
fstp
adc
sbb
stos
xchg
xor
pop
adc
pop
xor
mov
daa
cmp
push
enter
repz
retf
jle
iret
jecxz
in
(bad)
or
aas
pop
fnstcw
inc
pop
stc
pop
inc
dec
pop
leave
in
movs
shr
inc
pop
push
les
aam
pop
xchg
call
jnp
xor
xchg
fadd
jp
adc
sbb
add
xchg
call
dec
rcl
aas
xor
jecxz
jmp
ficomp
aad
and
mov
push
fmul
popf
enter
xchg
or
(bad)
iret
loop
add
int
inc
jns
stos
dec
mov
push
ja
push
sar
xor
iret
and
cmps
dec
test
nop
icebp
mov
int
xchg
clc
mov
jge
fst
mov
popa
outs
sahf
into
(bad)
scas
cmp
mov
int
scas
cmp
scas
aas
xor
stos
or
ss
push
iret
or
dec
adc
xlat
ret
jle
cdq
pushf
xchg
sar
mov
adc
sub
sub
sub
(bad)
lock
sub
xlat
adc
rol
mov
inc
cli
xchg
icebp
test
fdivr
lahf
mov
mov
cmp
outs
dec
dec
shr
jge
out
lds
stos
inc
and
xchg
inc
pop
jmp
js
test
mov
mov
dec
daa
mov
lock
push
std
mov
shr
stos
(bad)
jns
lds
and
in
mov
fdivr
cmp
(bad)
mov
pop
ret
popf
jb
in
lea
int3
xchg
mov
daa
loop
cmp
dec
fcomp
cmps
daa
mov
xor
stc
xchg
es
mov
out
dec
sub
mov
leave
adc
xor
push
call
xor
out
adc
std
or
pushf
jl
fwait
and
push
and
push
jns
push
jnp
cmps
mov
aad
inc
mov
jge
test
sbb
fadd
xchg
xor
pushf
mov
xor
mov
sub
mov
test
cmp
mov
out
outs
cmp
adc
xor
je
cmp
xchg
mov
rcr
xor
sub
dec
pop
fiadd
cdq
cmp
and
jo
or
fisttp
repz
mov
sbb
jno
out
push
push
adc
clc
test
in
(bad)
mov
or
(bad)
not
push
sub
aam
loop
dec
push
dec
retf
pop
loop
sub
aad
sbb
cmc
cmp
cs
rol
mov
mov
push
jl
loop
xor
push
xor
mov
arpl
imul
fsubr
dec
out
push
dec
dec
jnp
addr16
sar
xchg
mov
dec
cs
stos
sub
push
mov
sbb
add
pop
movs
xor
cmps
adc
aas
push
adc
and
xchg
mov
dec
dec
sub
popf
lods
sub
loopne
in
stos
dec
push
dec
mov
xor
pop
in
xor
jmp
mov
test
pop
xor
jle
in
fst
pop
fwait
punpcklwd
fsubp
dec
lods
add
stc
add
push
jecxz
packuswb
or
pop
sbb
jecxz
sahf
(bad)
outs
push
and
das
push
push
mov
clc
jae
loopne
sbb
cmp
push
sub
pop
jno
xchg
xchg
(bad)
mov
jecxz
push
ret
cwd
movs
sahf
pop
sub
mov
fdiv
jle
xor
rcr
repz
imul
pop
inc
push
xor
mov
add
pop
test
(bad)
jne
xor
jmp
mov
mov
xchg
lea
xor
cmps
xor
xchg
mov
retf
mov
ins
sub
adc
mov
push
test
data16
mov
and
inc
cmps
arpl
jne
stos
aad
test
mov
bound
add
shr
sub
loopne
ins
test
movs
inc
pusha
mov
xchg
xchg
out
pusha
int
jne
adc
and
in
push
add
xor
fdiv
adc
xor
mul
int
pop
popa
mov
cmp
jmp
dec
shl
mov
xor
mov
dec
mov
add
arpl
icebp
dec
(bad)
dec
aaa
push
pop
push
dec
jo
inc
dec
cmc
and
pop
packssdw
ss
sub
mov
lock
mov
jp
mov
popa
add
adc
cld
jmp
mov
scas
rcr
in
adc
addr16
lds
xor
or
cmp
rcl
(bad)
push
sbb
mov
mov
aaa
sub
xchg
loop
shl
jg
xor
push
rcl
aaa
mov
dec
push
stc
cmc
pop
shl
push
inc
or
xchg
hlt
xlat
dec
jae
inc
pusha
and
or
jo
das
inc
in
sahf
daa
mov
add
rcr
jg
pop
xor
icebp
in
std
shr
loop
pushf
or
dec
shr
sub
jns
into
add
iret
in
mov
(bad)
aad
and
sbb
adc
inc
popa
cli
imul
jmp
sub
or
(bad)
imul
inc
sbb
add
aam
add
in
jb
mov
cmp
imul
jbe
mov
frstor
pop
sub
stc
push
je
in
aam
in
icebp
inc
xchg
stos
jno
aad
cmps
popa
inc
sub
fwait
jle
inc
fld
movs
daa
mul
add
inc
pop
rcl
test
sahf
cdq
fadd
mov
loopne
ret
call
push
xchg
or
ins
sub
leave
hlt
and
sub
sub
loope
loop
ret
aam
sub
mov
inc
retf
in
ret
sbb
fnstsw
cmps
es
jp
jne
bound
xchg
inc
mov
add
jb
add
int3
pop
adc
mov
rcl
loopne
rol
lods
into
aaa
ret
and
and
push
repz
adc
inc
in
test
push
cs
jle
inc
retf
sub
fs
imul
or
adc
cli
push
aaa
pop
mov
pop
xchg
ja
adc
sub
ins
imul
icebp
cwde
pop
nop
pushf
cdq
popf
ss
loop
jae
or
movs
and
lods
stos
in
lea
mov
jno
cmp
mov
add
fiadd
(bad)
lods
arpl
les
mov
retf
dec
xor
mov
fsubr
repz
dec
push
xchg
xlat
ins
cli
mov
out
sti
loopne
pushf
imul
dec
sbb
push
arpl
(bad)
or
and
or
xor
push
jbe
pop
arpl
sub
dec
cmp
xchg
cli
xor
xchg
stos
jbe
jecxz
sub
sar
dec
out
ja
cmc
or
sub
outs
fist
xor
or
dec
lock
sahf
sub
inc
mov
jp
je
aas
mov
cmp
cmp
dec
(bad)
(bad)
loopne
retf
mov
xor
outs
inc
ins
fcomp
mov
mov
pop
jno
arpl
mov
aas
js
inc
idiv
ss
adc
lock
neg
mov
stos
inc
(bad)
adc
outs
cs
stos
cwde
push
xchg
loopne
in
inc
repz
ins
mov
jle
sbb
(bad)
leave
repz
stos
retf
fwait
rol
xor
pop
mov
outs
pop
nop
inc
arpl
popa
xor
rcr
mov
add
mov
and
and
sub
inc
loopne
add
sbb
ret
mov
fwait
stc
cmc
adc
push
pop
ins
xchg
fcmovnu
jle
leave
cmp
or
xor
sbb
enter
aaa
not
not
pop
and
mov
pop
inc
jle
out
push
or
xlat
das
dec
push
inc
gs
in
cmp
in
pop
cld
shr
and
arpl
jg
add
call
leave
sub
cmp
push
in
test
mov
mov
dec
and
popf
imul
jo
xchg
dec
sbb
ror
xchg
lds
aam
faddp
xor
push
pusha
push
sub
xor
ins
xor
cmp
and
and
cmps
outs
cmp
push
mov
das
sub
scas
push
outs
movs
mov
mov
pop
dec
or
jmp
xchg
jge
scas
adc
ds
fs
out
fcom
sti
fs
cmc
sub
adc
pop
adc
movs
es
adc
rcl
sub
push
(bad)
std
adc
sub
dec
movs
rcr
outs
les
adc
push
loope
inc
cmp
loope
movs
jmp
mov
inc
test
scas
mov
xor
xor
and
inc
pop
jp
inc
pop
movs
cmps
out
cmp
lds
push
xor
pop
in
mov
adc
xlat
mov
pop
fs
frstor
loop
in
(bad)
push
out
jbe
int
dec
push
sbb
iret
inc
push
inc
stc
out
lds
inc
push
loopne
(bad)
sbb
push
xor
stos
inc
jne
sbb
pushf
cld
mov
movs
aam
stos
stos
or
enter
nop
pop
retf
es
jns
loop
jo
add
inc
je
or
stc
adc
sub
push
icebp
aas
mov
rcl
mul
cmp
xchg
add
add
dec
pop
and
push
inc
mov
cdq
add
xchg
call
push
scas
and
(bad)
push
mov
fmulp
mov
xchg
or
cmp
je
and
pop
push
out
sbb
outs
scas
pusha
out
xchg
scas
bnd
mov
sar
aad
xchg
sbb
jne
es
add
(bad)
sbb
aas
cmc
cs
aam
rcr
popa
inc
and
sub
rcr
je
lods
cmp
jb
test
adc
repnz
sbb
inc
cmc
cdq
mov
push
stos
mov
fsub
jb
cdq
into
das
in
pop
adc
(bad)
xlat
sub
or
invd
movs
mov
(bad)
mov
pop
lea
sbb
inc
xor
mov
ins
ds
xchg
ins
and
and
int
ror
in
cmc
inc
ror
data16
xor
pop
mov
pop
inc
mov
xchg
adc
or
jb
xor
cmc
jecxz
rol
mov
aas
pushf
and
retf
scas
(bad)
js
sub
mov
jbe
lahf
xchg
adc
jns
cmp
xchg
arpl
movs
ins
sbb
push
xchg
jg
sbb
lds
(bad)
sub
xlat
mov
inc
test
push
js
icebp
xchg
xchg
int3
lods
into
out
xlat
sbb
jg
dec
pop
push
push
daa
fs
add
test
pop
lahf
mov
out
ins
xchg
dec
scas
out
dec
jp
lds
xor
and
add
daa
adc
add
pop
pop
jne
ret
push
clc
imul
nop
(bad)
call
cmps
xor
adc
mov
push
mov
push
xor
push
pop
mov
pop
jmp
fcom
push
jne
sub
js
push
call
mov
dec
xor
add
scas
sbb
adc
inc
fcmovu
sub
push
test
out
sti
repz
pushf
cld
popa
sub
icebp
(bad)
push
sbb
popf
jo
lods
inc
outs
movs
and
hlt
fwait
(bad)
cwde
iret
psubq
ror
pop
fld
jecxz
mov
sub
scas
mov
mov
loopne
rcl
adc
sbb
pushf
cmc
(bad)
shl
inc
cld
mov
mov
cmp
or
and
lods
and
jnp
xchg
sbb
loop
jae
pop
adc
and
and
daa
or
cdq
xor
arpl
loopne
(bad)
lock
mov
in
inc
in
aaa
mov
and
loop
sahf
dec
imul
xor
sti
retf
pop
pushf
mov
mov
cmp
or
mov
dec
ror
and
pop
mov
or
or
in
stos
inc
jns
xor
push
shl
adc
jmp
inc
test
jp
daa
cli
les
int
xchg
push
xor
cld
xchg
push
das
or
cmp
(bad)
push
jb
mov
add
mov
ja
(bad)
lea
jp
dec
popf
out
jl
jmp
xor
js
icebp
movs
stc
dec
rol
imul
cdq
sbb
imul
sub
cmp
dec
test
cmps
push
ja
pop
mov
ret
pop
xchg
daa
inc
adc
jb
inc
pop
ret
lds
cmp
fisub
lock
pusha
shl
adc
push
shl
ins
nop
lods
sahf
movs
bound
dec
clc
sbb
dec
cmc
pop
xor
jae
push
in
mov
fcmovnb
adc
add
lds
fcmovbe
push
sub
mov
jmp
adc
lea
in
xchg
jl
sbb
cmc
rol
sbb
mov
mov
pusha
jns
xchg
cmp
and
das
les
fisttp
xchg
inc
xchg
retfw
push
aaa
gs
ins
ror
fisttp
gs
or
mov
xor
xchg
outs
hlt
inc
dec
nop
push
inc
fsub
xlat
pop
cmp
leave
pop
lock
shr
xor
ss
add
mov
xchg
dec
dec
aad
adc
push
daa
arpl
mov
mov
pushf
test
cmp
stc
out
movs
ds
idiv
sub
gs
jae
push
cld
in
aad
jb
cmp
push
or
stos
lea
fs
push
xchg
or
cs
fstp
stos
fadd
push
jne
push
and
dec
fwait
jge
jle
enter
push
sub
dec
xor
lahf
sub
es
cwde
arpl
mov
in
xchg
mov
adc
(bad)
mov
add
and
dec
jp
dec
push
int
dec
sub
(bad)
adc
push
bound
and
fwait
les
jg
adc
xor
ja
fadd
in
aaa
fld
sub
mov
add
inc
jbe
add
hlt
jno
popa
or
sbb
lock
mov
sub
xchg
jnp
dec
scas
rcr
cld
movs
and
add
xchg
imul
sub
push
or
rcl
sub
and
add
mov
dec
in
push
mov
std
adc
push
test
ins
not
rol
loop
mov
dec
cli
sub
xchg
fcom
adc
add
(bad)
mov
push
mov
aas
cdq
fwait
lock
stos
in
adc
aaa
jmp
lods
xor
push
or
jne
jecxz
pop
test
add
dec
jmp
lods
jg
leave
push
dec
pop
cmp
aaa
shl
cmps
fs
xor
shl
sub
inc
icebp
push
fbld
and
popa
xor
sbb
sar
jmp
inc
leave
adc
sbb
rol
inc
lahf
jle
lods
push
push
pusha
sub
sub
(bad)
test
fsubr
loop
in
sub
pop
mov
int
pop
inc
icebp
jo
jge
mov
xchg
jp
push
push
fild
adc
or
cmp
leave
cdq
push
xor
scas
in
xchg
dec
jmp
gs
xchg
in
lock
test
out
ja
in
push
cmp
inc
pop
pop
push
in
lea
mov
mov
jns
movs
xor
sahf
adc
call
outs
ins
dec
push
sub
mov
enter
cmp
inc
mov
jnp
test
or
inc
movs
mov
hlt
iret
pcmpgtb
xor
mov
rcl
packsswb
jbe
retf
mov
mov
mov
jge
xlat
fs
popa
mov
daa
retf
aas
ret
jle
xor
test
jle
dec
gs
ret
idiv
mov
fs
lahf
movs
sar
mov
inc
inc
add
jbe
and
fstp
cs
pop
ret
icebp
rcr
pop
ins
xchg
sub
je
scas
or
xor
inc
je
mov
cwde
pusha
dec
fsubr
je
mov
retf
jns
cmps
cmp
mov
and
xchg
mov
push
mov
mov
into
add
popf
ret
pushf
add
fwait
xchg
xchg
cwde
ins
xchg
retf
add
lea
out
lock
mov
stc
dec
push
lock
out
and
mov
(bad)
ds
pop
fldcw
xor
std
fmul
les
jge
and
inc
lds
sub
jbe
test
and
outs
sbb
std
retf
call
push
dec
gs
mov
xor
iret
jmp
add
call
jne
dec
inc
test
mov
repz
fst
movs
and
inc
iret
mov
or
adc
gs
pop
mov
or
adc
xor
mov
sbb
inc
pop
jnp
inc
cmc
js
xchg
jmp
push
jl
push
sub
fwait
scas
pushf
pop
in
mov
es
enter
dec
mov
dec
inc
jl
xchg
dec
jo
lds
fsubr
sbb
and
jo
cmp
(bad)
push
push
mov
jb
out
adc
jg
(bad)
enter
inc
bound
and
rol
jle
in
mov
add
retf
imul
retf
lods
push
inc
push
fsub
jmp
dec
mov
xor
jbe
adc
stos
cdq
sub
movs
xlat
xchg
lahf
lock
fnstenv
sub
jmp
rcr
cmps
sti
std
mov
stos
sbb
inc
outs
call
mov
inc
mov
push
xor
repz
fidiv
dec
xchg
push
cmp
mov
xor
jae
mov
pop
cmp
mov
loope
push
(bad)
mov
icebp
out
leave
scas
lahf
mov
test
or
pop
(bad)
cli
xchg
add
fucomi
pop
repnz
xor
mov
shl
fld
inc
or
icebp
test
mov
inc
pusha
inc
sar
jae
outs
adc
ficomp
fwait
add
scas
and
int
in
and
inc
fwait
out
test
jp
sub
sti
sbb
(bad)
mov
and
mov
(bad)
push
das
xlat
dec
ins
inc
dec
jb
mov
rcr
add
addr16
jmp
mov
push
fidiv
sbb
sub
pop
push
mov
jge
pop
outs
pop
(bad)
test
xchg
mov
mov
xlat
ds
jne
loope
push
fbstp
push
in
adc
cwde
xchg
pop
movs
add
xlat
xchg
sub
sbb
jge
push
jb
mov
sub
mov
into
xchg
pop
loop
and
cmps
jo
mov
jl
xchg
push
inc
mov
fisubr
jno
rcl
sbb
mov
sbb
inc
lds
xchg
retf
mov
dec
pop
sti
mov
jle
mov
(bad)
lods
dec
sbb
fsub
call
repz
cmp
jp
push
mov
adc
push
xchg
sub
xchg
mov
mov
mov
jp
xchg
test
lods
xor
add
and
pop
pop
sub
cmps
popf
pop
jge
xor
xor
jp
(bad)
(bad)
aaa
shr
fadd
fistp
mov
xor
sbb
sbb
bnd
fwait
pusha
fidiv
clc
repz
jp
mov
or
inc
pavgw
pop
aaa
popf
dec
push
add
jecxz
mov
inc
or
mov
repnz
mov
(bad)
ss
adc
cmp
cwde
enter
mov
mov
jmp
fs
cld
mov
push
dec
cmps
repz
jl
stos
ss
jg
js
fdiv
cli
sub
out
(bad)
push
inc
mov
mov
stc
xchg
aaa
inc
jl
je
xchg
xor
mov
mov
inc
jmp
cld
(bad)
js
test
jge
ss
push
and
mov
mov
(bad)
(bad)
imul
inc
add
cmc
inc
ja
hlt
xchg
sar
data16
ret
sahf
xchg
(bad)
shl
mov
jb
(bad)
clc
and
cmp
std
xchg
jbe
mov
iret
aam
paddsw
and
js
mov
(bad)
push
or
in
sub
dec
outs
out
inc
sub
ds
mov
hlt
movs
jns
dec
mov
xchg
adc
jae
mov
mov
loopne
lock
push
addr16
or
pop
sub
jno
mov
sti
icebp
push
inc
arpl
xor
inc
dec
addr16
inc
rcl
inc
rcl
loop
jp
scas
into
cld
out
int
in
inc
and
add
test
pop
sub
and
fdivr
mov
repnz
jbe
pop
and
mov
inc
mov
aam
jge
fdecstp
scas
das
add
repz
in
jmp
mov
sti
xor
ror
test
inc
inc
push
cwde
sbb
pop
jecxz
mov
inc
call
imul
shl
add
push
das
sub
dec
test
lods
stc
into
inc
popf
(bad)
cmps
int3
dec
or
in
dec
inc
cmp
xor
adc
mov
into
scas
inc
das
jo
sar
aam
mov
in
aaa
stos
outs
sti
dec
pop
leave
xor
imul
out
int3
jnp
dec
mov
dec
inc
push
les
dec
xor
jmp
mov
add
or
adc
sub
inc
mov
xor
loopne
and
sbb
cmps
popf
arpl
xchg
adc
adc
in
push
js
retf
xchg
push
enter
xchg
mov
(bad)
vpshlw
out
fnstcw
enter
push
push
data16
inc
adc
call
int3
xchg
mul
js
xor
movaps
mov
xlat
mov
call
imul
cmps
or
fild
les
push
int
movs
jmp
out
mov
push
jmp
push
push
ficomp
popa
cdq
cmp
in
iret
jo
dec
sub
mov
pop
add
mov
dec
aad
dec
push
je
sub
fnstsw
fwait
adc
jo
jp
xor
pop
shl
test
imul
xchg
outs
jmp
iret
mov
add
hlt
jne
sbb
jo
mov
or
imul
xchg
lods
jno
sbb
cmp
stos
adc
les
jp
push
pop
mov
pop
arpl
inc
sub
mov
or
lds
repz
movs
add
mov
sbb
out
jae
icebp
lods
jge
(bad)
shl
dec
mov
shl
fcom
mov
jmp
and
iret
mov
imul
fstp
pusha
push
jmp
jg
or
fs
loopne
in
ins
mov
pop
fsubr
or
sbb
not
mov
add
loop
adc
stos
in
cmps
sub
std
idiv
stos
xlat
inc
xor
adc
inc
jns
xor
mov
inc
add
push
jmp
icebp
sbb
nop
movs
in
mov
ss
push
sahf
and
push
jb
cmp
and
call
add
test
mov
fistp
nop
xchg
or
xchg
push
and
dec
jbe
shl
xchg
mov
inc
lds
fwait
(bad)
cmps
out
xchg
mov
repnz
mov
cmps
xor
fnstcw
sti
repnz
jbe
inc
aad
mov
clc
dec
push
out
mov
scas
sbb
xchg
ret
and
and
inc
test
repz
clc
mov
sbb
ins
dec
mov
cs
xchg
imul
cmp
dec
cmp
pushf
push
xchg
es
xchg
add
dec
int
lahf
adc
paddsb
sub
jmp
jle
inc
cmps
jge
dec
dec
ja
lea
dec
hlt
adc
jne
sbb
jmp
shl
imul
popf
loope
rcl
cmps
cmp
sbb
rcr
fimul
div
mov
push
jmp
mov
dec
lods
inc
xchg
in
cli
popa
sahf
fisttp
std
cmps
cli
dec
dec
cmp
push
fild
add
cmp
inc
push
sbb
cmp
mov
pop
fcom
mov
jecxz
xchg
fsubr
ret
loop
hlt
ins
test
xor
mov
bound
leave
add
pop
out
neg
(bad)
dec
dec
dec
and
shr
lea
jle
jb
push
jae
iret
shr
cmp
push
shr
pusha
imul
mov
lds
outs
nop
dec
sub
sbb
jno
out
xor
je
(bad)
je
outs
fwait
mov
mov
data16
cmc
add
arpl
fstp
out
jns
adc
jmp
and
div
imul
fidiv
mov
and
pusha
jle
mov
jnp
call
scas
in
or
fs
shr
pop
add
fcmovnbe
add
popa
xor
mov
cmp
stos
push
sahf
inc
int3
inc
inc
or
js
loop
enter
loop
inc
jp
xlat
fld
mov
mov
mov
xor
xchg
mov
pop
stc
xchg
pushf
pusha
ret
daa
jecxz
stos
push
dec
(bad)
fucomip
cwde
cmp
ror
sar
pop
ror
sbb
cmp
cmps
mov
mov
xor
mov
sahf
xor
ret
pushf
popa
arpl
xor
mov
adc
les
add
mov
movs
popf
(bad)
cmp
je
out
jae
inc
or
mov
aad
or
sar
or
dec
jae
call
cmps
out
adc
test
shl
aas
lahf
int3
pop
test
std
adc
dec
inc
out
(bad)
lahf
lods
scas
in
aam
fwait
fwait
mov
lea
(bad)
xchg
sbb
not
jecxz
not
fdivp
adc
xor
xchg
adc
leave
jb
dec
lods
out
mov
sub
pusha
add
jl
inc
clc
xchg
jbe
adc
jno
add
leave
int3
xchg
ins
cmp
scas
ds
xor
outs
enter
mov
mov
inc
in
mov
lahf
mov
sar
aaa
pop
shl
pop
clc
out
xchg
and
inc
mov
mov
jmp
ss
repnz
loop
or
bnd
leave
jmp
repnz
in
ins
std
lea
outs
arpl
shl
lea
mov
fsubr
push
mov
jge
dec
test
pop
mov
sti
jbe
mov
fst
jb
jns
loop
xchg
push
stc
bound
sar
inc
repz
scas
cs
adc
inc
popa
js
lods
add
es
cmp
dec
fwait
test
retf
sbb
in
dec
rol
test
fist
mov
mov
cmp
(bad)
pusha
loop
in
adc
add
pushf
dec
sbb
mov
in
pusha
fnstcw
loop
and
aas
aaa
test
add
xlat
push
fidiv
jb
scas
idiv
adc
mov
jmp
hlt
push
inc
add
jge
lds
in
stc
add
add
call
pushf
out
mov
mov
nop
sbb
mov
(bad)
cwde
mov
mov
or
bswap
in
push
int
xor
push
xor
and
je
imul
(bad)
cmc
icebp
add
sub
fs
in
(bad)
arpl
sti
dec
add
mov
gs
dec
pop
out
sbb
add
inc
sbb
movs
loop
xchg
popa
ins
jg
scas
call
clc
pusha
leave
ror
clc
arpl
(bad)
(bad)
ficom
or
retf
ret
or
cmp
in
jmp
stos
and
outs
in
shl
scas
stos
jno
iret
test
ret
ss
cmp
pop
xchg
(bad)
setl
mov
mov
inc
fadd
xchg
daa
pop
mov
pop
cli
clc
fs
sbb
(bad)
(bad)
mov
call
test
mov
fwait
dec
repnz
movs
jmp
nop
jmp
sahf
push
out
jle
pop
(bad)
outs
push
push
pop
jge
sbb
in
sub
fcomip
xchg
pop
jns
shl
data16
cmps
cli
jo
cmps
mov
ins
in
cdq
imul
lea
fst
repnz
lods
jns
rcr
xor
inc
call
cmp
loope
inc
jns
mov
dec
dec
push
call
jmp
xor
popa
pop
call
cwde
fiadd
call
aas
jmp
inc
mov
scas
pop
sub
call
mov
retf
js
sbb
inc
mov
call
or
hlt
sbb
mov
scas
ffree
out
outs
jmp
pop
push
pop
sar
mov
sub
clc
mov
out
lods
push
push
inc
adc
and
xor
sbb
jbe
jmp
shl
push
sti
daa
aas
mov
pusha
vpsubw
jnp
mov
jl
jae
or
(bad)
in
jle
inc
cdq
ret
pusha
pop
mov
fs
and
stos
(bad)
cmp
xchg
inc
push
sbb
pop
adc
jp
dec
mov
aad
stos
dec
jo
aad
fwait
in
cmps
mov
aad
enter
dec
mov
sbb
call
mov
imul
arpl
dec
adc
mov
adc
es
sub
add
idiv
repz
mov
sub
lock
mov
les
sbb
adc
pushf
mov
or
fwait
inc
sbb
je
pop
xor
mov
mov
scas
mov
push
push
mov
push
jbe
jcxz
js
call
jnp
push
es
lods
popa
ins
into
retf
ins
sbb
bound
and
cli
or
mov
pop
clc
mov
(bad)
xor
add
mov
xor
pop
push
pop
ins
dec
sub
test
mov
les
xchg
xor
push
pop
enter
in
out
fucomi
(bad)
sti
cmps
cmc
xor
adc
dec
movs
out
fild
les
inc
mov
stos
ret
pop
sub
and
aaa
call
test
ror
mov
clc
pop
les
mov
hlt
xchg
cmps
adc
jmp
lods
or
cs
push
pusha
xchg
stc
mov
or
jno
loop
xchg
mov
jns
cdq
mov
adc
cmp
jno
bound
test
sub
lods
(bad)
shr
push
and
mov
test
sub
mov
sbb
cmps
call
ins
jl
fisubr
xor
jnp
xor
sbb
fcmovnu
ss
fistp
sar
or
pop
adc
mov
loopne
or
jp
mov
(bad)
ror
adc
bswap
mov
xor
add
push
cdq
push
bound
push
ret
mov
jo
cmp
jmp
ins
pop
mov
fbstp
sub
push
sub
dec
sahf
call
jle
aam
adc
sbb
out
bound
add
aaa
aam
dec
dec
xlat
pop
jle
neg
mov
jmp
sbb
retf
out
dec
sbb
out
int3
pop
jecxz
js
mov
popf
jne
xchg
mov
mov
xor
adc
xchg
outs
pop
push
mov
mov
ret
jb
test
xchg
ja
shl
popf
dec
adc
lods
adc
xor
xchg
test
add
outs
add
out
in
fadd
xchg
inc
lock
fsub
es
scas
cdq
ds
repz
sub
mov
sbb
(bad)
cmp
xor
jl
sub
and
pushf
ja
cmps
push
pop
push
push
push
xor
sub
xor
jl
push
ds
lods
jmp
jmp
add
mov
push
gs
sbb
stc
sbb
rol
lahf
outs
ins
outs
cmp
fsubr
sbb
nop
adc
scas
sbb
jge
mov
les
cmps
fstp
mov
cmp
add
pop
cli
pop
xlat
(bad)
dec
mov
inc
adc
repz
popa
out
dec
mov
lock
xchg
int3
mov
mov
out
mov
mov
mov
mov
rcr
sub
jnp
sbb
xor
dec
lahf
cmp
pop
mov
loop
dec
and
push
mov
xor
and
stos
jg
out
lods
and
repz
fidiv
test
cmp
and
and
pop
mov
imul
add
movs
fmul
sbb
sbb
sbb
push
mov
add
mov
stos
mov
jae
std
repnz
loopne
mov
push
retf
mov
fild
fmul
imul
ret
xchg
sbb
mov
fnstenv
mov
jp
enter
or
popf
cld
xor
int
or
or
mov
jl
xlat
je
add
pusha
jl
push
push
cli
add
aam
lock
xchg
cld
mov
repnz
xchg
xor
or
leave
sbb
ja
sub
add
enter
sub
dec
add
sub
cs
imul
sub
retf
inc
popf
cmc
call
cmc
sbb
mov
leave
(bad)
iret
test
fwait
in
dec
push
and
mov
dec
and
dec
nop
fisubr
sub
jbe
(bad)
mov
cmp
js
pushf
inc
pop
dec
lea
imul
adc
inc
out
ins
add
xlat
inc
jne
(bad)
push
jnp
(bad)
icebp
mov
jbe
pop
mov
hlt
clc
test
adc
ret
xor
idiv
cmp
sub
mov
in
or
push
cmc
jo
push
sub
fdivr
sub
or
je
gs
std
cs
fcomp
add
iret
or
xchg
mov
enter
cmp
mov
in
jmp
(bad)
jecxz
leave
xor
lods
into
mov
cmps
ret
push
mov
call
iret
jbe
or
or
mov
cld
mov
scas
mov
int3
inc
cwde
pop
xlat
(bad)
loope
std
sbb
mov
imul
mov
pop
rol
sqrtps
xchg
push
push
ret
or
inc
aad
xor
fisubr
or
sti
inc
cmp
cld
lods
mov
push
les
dec
test
and
jmp
lea
ds
jle
jnp
inc
jo
xchg
xchg
sbb
jae
aam
and
movs
loop
ss
jbe
ret
ins
xchg
mov
add
aad
dec
arpl
mov
aaa
push
test
pushw
sub
xchg
lds
dec
rol
hlt
jno
mov
dec
mov
mov
into
mov
adc
lds
mov
pop
or
and
arpl
push
xchg
cmp
cld
add
mov
fs
jnp
mov
jnp
ror
fmulp
shr
add
dec
scas
adc
add
mov
pop
push
imul
sbb
mov
loope
mov
and
adc
(bad)
xchg
loopne
push
movs
mov
loope
movs
cmp
imul
lea
data16
movs
dec
es
mov
pop
mov
rcr
outs
lods
scas
cmc
mov
mov
inc
daa
push
sbb
sub
arpl
shl
xchg
fidivr
mov
inc
cmp
repnz
or
adc
in
mov
fisttp
or
or
mov
test
cdq
bound
adc
fwait
cmps
mov
jns
inc
mov
int3
ins
retf
xlat
xchg
jl
mov
mov
enter
outs
adc
arpl
mov
or
sahf
sub
test
inc
adc
loope
mov
lds
ud0
xor
cwde
js
icebp
sbb
mov
cmp
push
mov
test
mov
add
pop
xchg
aam
push
dec
cmp
push
ror
cmp
sbb
push
cmp
shl
sbb
jno
jns
movs
or
inc
loopne
and
ret
dec
sub
inc
xchg
push
out
sbb
mov
jns
push
in
xlat
hlt
cmp
xor
cdq
fstp
fdiv
push
pusha
xor
sub
inc
out
mov
shl
int3
add
mov
enter
and
or
mov
retf
in
fwait
sub
sbb
and
pop
dec
lods
out
je
inc
xor
call
out
popf
hlt
inc
out
lods
jge
movs
repnz
jmp
cmps
daa
lea
lds
retf
out
ja
sar
cdq
push
icebp
jle
ja
sahf
sti
mov
jb
pop
sub
hlt
leave
dec
fisubr
cmp
daa
in
loopne
cld
ja
out
movs
or
std
rcr
fdiv
sbb
jbe
lds
call
adc
jl
adc
(bad)
movs
ret
push
movs
std
xor
repz
retf
in
pusha
and
mov
mov
jo
sub
inc
sbb
mov
jmp
pop
jg
hlt
pop
mov
sbb
or
cli
mov
hlt
shr
fbld
(bad)
cli
and
scas
hlt
mov
sti
js
add
sub
and
sti
add
jecxz
and
popa
mov
pop
ins
(bad)
sti
add
dec
mov
mov
sbb
xchg
scas
cmp
lock
inc
dec
icebp
jmp
std
fimul
test
ret
jns
jmp
mov
jmp
or
mov
sti
ds
or
iret
(bad)
imul
out
(bad)
gs
cmp
mov
shr
cmc
(bad)
test
fmul
push
shl
out
mov
sbb
ror
mov
adc
popa
mov
mov
addr16
fdivp
(bad)
shr
out
adc
icebp
iret
(bad)
pop
pop
shl
xchg
xchg
clc
add
inc
test
pop
ret
test
dec
cmovle
cmps
cmp
xchg
mov
fsub
mov
scas
sub
pop
mov
mov
das
push
jns
ror
push
sti
mov
pop
add
xlat
sbb
sbb
sub
movs
mov
adc
jns
iret
es
sbb
xor
(bad)
dec
xchg
pushf
xor
mov
sbb
mov
push
rcl
inc
add
leave
dec
adc
lahf
mov
and
outs
xor
enter
and
mov
lods
jecxz
clc
pop
mov
in
(bad)
mov
inc
fcmovnbe
repz
mul
add
jmp
popf
icebp
xchg
pop
jmp
dec
pop
sub
jge
(bad)
imul
pop
mov
xor
in
cmps
(bad)
bswap
call
and
adc
adc
fisub
xchg
iret
cdq
fidiv
push
sub
sub
std
cwde
pop
mov
fwait
jecxz
xchg
stos
fisttp
sub
jmp
pop
fadd
sub
cmp
mov
or
sub
cmp
fwait
mov
jnp
nop
ret
pop
mov
aam
xor
pop
and
adc
push
mov
add
mov
inc
cmp
movs
leave
pop
push
js
and
dec
inc
test
cmp
stc
aad
aas
mov
stos
and
rcl
xchg
retf
mov
jmp
cli
or
pop
sub
jl
(bad)
jb
loopne
test
les
push
adc
cmps
mov
test
rol
imul
add
push
jb
push
daa
in
into
ins
cmps
push
push
stc
add
dec
enter
adc
call
leave
call
xchg
ret
test
xor
fidiv
cli
xchg
or
mov
mov
es
lods
scas
mov
cwde
xor
shl
imul
add
call
fst
lds
jmp
imul
mov
dec
sbb
loopne
scas
dec
and
jmp
cmp
pop
push
sbb
retf
cmps
jae
cmp
shr
rcl
or
(bad)
ror
retf
pop
xor
xor
(bad)
int
jp
jo
mov
movs
inc
xor
or
test
call
mov
nop
je
clc
sbb
sbb
mov
add
mov
jnp
mov
mov
loope
and
mov
mov
xchg
test
addr16
add
fldcw
loopne
test
adc
popa
imul
pop
repz
push
sub
aad
data16
lahf
push
adc
and
(bad)
pop
out
das
jb
cmps
es
xor
cwde
xor
mov
fst
xor
cmp
mov
cmp
mov
into
mov
lds
push
and
inc
sub
into
outs
loope
jmp
out
add
dec
xchg
dec
cmp
fistp
call
and
mov
movs
mov
cmp
push
mov
sub
push
adc
or
add
repz
cmp
sub
or
sub
outs
pop
clc
fnstsw
fdiv
xchg
push
cmps
lea
cmp
jno
cmp
inc
jo
pop
sbb
or
in
sbb
inc
and
adc
fwait
push
(bad)
fcmove
dec
jmp
sbb
repz
and
hlt
cmp
xor
pop
or
sub
test
push
(bad)
or
mov
sub
aam
les
retf
jg
cmp
adc
out
aam
test
add
mov
cwde
cmp
xchg
inc
dec
xor
add
ret
cmp
sbb
mov
pop
dec
xchg
nop
fld
inc
xor
jae
xor
shr
sbb
inc
scas
xor
cmp
jmp
cmps
jmp
push
adc
mov
inc
mov
fadd
xchg
mov
cmp
je
mov
cmps
push
push
(bad)
dec
jne
inc
gs
xchg
dec
cmc
mov
mov
pop
(bad)
neg
jns
(bad)
aad
push
pop
and
mov
cmp
adc
sub
jne
adc
test
cmp
pop
arpl
xchg
repz
shl
sar
shl
jp
cli
popa
cmp
jl
je
push
cdq
sub
mov
adc
push
xor
mov
or
pop
(bad)
pusha
or
adc
cmp
add
fsubr
test
xchg
retf
pop
movs
(bad)
aam
rcr
std
jae
mov
jbe
xlat
jo
xlat
adc
sbb
push
loopne
jge
or
mov
bound
add
int3
sbb
xlat
adc
or
mov
push
jge
push
sub
push
je
adc
out
xor
mov
repnz
mov
lahf
je
or
bound
sbb
int
adc
bound
push
ja
mov
pop
mov
xchg
inc
fidiv
mov
cdq
retf
inc
call
jp
add
movs
out
or
push
ficomp
jp
mov
je
cmps
mov
mov
xlat
add
ret
push
fs
arpl
push
dec
icebp
add
fisttp
jmp
sub
jae
xor
push
js
mov
in
bnd
and
test
jnp
inc
mov
mov
es
adc
xchg
pop
in
retf
cmps
add
stc
xchg
loope
cmps
pop
xlat
mov
scas
adc
ja
add
ret
xchg
pop
add
imul
imul
inc
xor
fnop
pop
xor
pop
ins
mov
sub
in
das
mov
push
nop
outs
scas
out
sub
and
clc
jmp
dec
mov
jbe
dec
stos
es
xlat
adc
push
jge
xor
add
jae
into
mov
imul
mov
cmp
(bad)
in
(bad)
hlt
aam
dec
inc
scas
imul
mov
push
mov
es
shl
jbe
fdiv
pop
jbe
dec
xchg
mov
in
jecxz
mov
pop
retf
or
aad
arpl
stc
jb
cmp
in
inc
adc
sbb
and
mov
add
mov
lahf
mov
mov
add
inc
or
dec
stos
xchg
ja
xor
push
les
push
ror
jp
repnz
ss
fdivr
sub
or
cdq
jl
mov
jo
imul
cmp
js
inc
js
nop
pop
mov
in
ret
mov
mov
xchg
cmps
jp
cld
mov
js
inc
push
push
or
in
and
test
pop
inc
mov
and
popf
sub
into
xor
xchg
add
sub
or
sub
ret
dec
mov
jns
mov
pop
sub
xor
push
lahf
inc
push
enter
call
mov
mov
add
ficom
les
(bad)
out
fisttp
aam
mov
in
inc
mov
popf
neg
stos
mov
or
or
fild
test
mov
xchg
mov
or
cmc
fcmovnb
xchg
mov
jns
sub
or
xor
mov
and
adc
ja
inc
cmp
fsub
dec
jmp
retf
popf
mov
pushf
bound
(bad)
dec
jne
cmp
stos
xor
push
sub
out
sbb
rcl
xor
call
test
xchg
movs
dec
mov
ret
(bad)
mov
cmps
mov
jp
pop
inc
push
test
xor
cmp
xchg
imul
mov
push
pop
test
loop
imul
hlt
cli
outs
xor
lods
cmp
push
inc
cmp
xor
ins
jns
xchg
loope
dec
and
push
xor
mov
xchg
call
pop
mov
shl
dec
xchg
add
cmp
clc
mov
sub
jnp
icebp
adc
inc
(bad)
hlt
jmp
pop
(bad)
js
test
ror
and
lahf
leave
mov
jle
xchg
cmps
rol
push
cmps
inc
sbb
cmp
imul
movs
(bad)
mov
sar
sbb
jecxz
ffree
inc
int
dec
loopne
or
mov
mov
idiv
push
pop
jns
push
dec
adc
sbb
dec
dec
add
add
add
repnz
or
lods
xchg
je
bound
cdq
(bad)
add
scas
lea
(bad)
jnp
mov
loopne
stc
(bad)
dec
imul
popa
lahf
inc
retf
sub
mov
mov
jne
scas
aam
test
add
sub
add
inc
adc
inc
mov
cmc
inc
outs
adc
shl
mov
(bad)
jnp
sub
and
icebp
(bad)
mov
add
jns
push
xchg
pop
push
(bad)
int3
rol
sbb
mov
mov
aam
mov
mov
shl
adc
inc
mov
mov
or
ror
cmp
rcr
dec
push
pop
loopne
xchg
adc
cmp
pop
aas
or
pop
daa
jne
pop
(bad)
popa
mov
out
push
and
and
and
pop
or
pop
sti
mov
xchg
je
pop
or
int
adc
scas
sub
mov
push
popf
inc
xchg
push
repnz
mov
xchg
push
lock
inc
daa
loopne
sbb
lea
out
jb
test
inc
cwde
rol
mov
mov
(bad)
dec
jns
dec
cmp
inc
cmp
sub
in
pop
jmp
jmp
dec
inc
inc
mov
cdq
lahf
jmp
pushf
fild
jbe
js
and
ret
imul
mov
mov
dec
or
cmps
(bad)
jg
cmps
push
sbb
dec
xchg
iret
call
enter
jb
sbb
or
xlat
add
fcmovne
and
xchg
iret
inc
cwde
mov
sub
mov
out
stos
jmp
sbb
adc
jae
outs
rol
and
or
and
inc
pop
(bad)
cmps
mov
rcr
sbb
jecxz
mov
popf
lods
fxch
clc
lods
cld
xor
jo
ficom
stc
aam
push
mov
leave
or
enter
xor
loopne
mov
pop
cmp
jnp
push
loop
ficom
or
sub
ja
sahf
cwde
aam
jmp
mov
mov
sti
or
call
std
xchg
pusha
imul
push
ja
add
mov
data16
aam
sbb
stos
ss
add
xchg
and
out
jecxz
fiadd
xchg
add
add
aas
jbe
xor
and
xor
(bad)
jmp
inc
sbb
dec
mov
(bad)
or
jmp
jb
cmps
iret
and
push
fwait
lds
mov
jp
daa
pop
sub
add
dec
mov
pop
sbb
stos
xor
push
cmp
pusha
clc
push
imul
mov
stos
test
sub
js
jmp
lds
push
jo
sbb
pop
hlt
stc
xchg
ficomp
push
data16
sub
inc
or
mov
mov
mov
int3
je
cld
das
pop
jo
xor
xor
ins
jge
cmp
loope
push
jle
outs
in
xchg
das
nop
jp
aad
adc
hlt
push
add
mov
mov
cmp
int
pop
shl
adc
pop
stos
mov
imul
adc
push
adc
sub
(bad)
iret
test
setle
lds
mov
sub
mov
inc
jp
cmp
jbe
xchg
cmovs
pop
fisubr
xchg
or
rol
inc
imul
cmp
pop
sbb
sbb
sar
inc
lock
das
dec
repnz
shl
out
xchg
loop
pop
mov
push
push
push
pushf
scas
jg
std
xchg
dec
int
cmp
fcom
ror
leave
pop
sbb
and
and
mov
mov
push
xchg
(bad)
stc
fcomip
push
jbe
pop
or
retf
scas
iret
mov
ret
pop
adc
xor
fisub
in
lds
leave
mov
jmp
dec
xor
stos
pop
into
mov
mov
(bad)
out
mov
out
xchg
jmp
pop
xchg
das
xchg
inc
icebp
stos
sbb
sbb
push
int3
cmps
cs
push
retf
cmp
cwde
xchg
push
lea
ss
pop
sub
or
pop
adc
in
popa
mov
test
jnp
fnsave
out
(bad)
jecxz
push
out
push
mov
inc
add
xor
inc
and
fsubp
ds
inc
loopne
jae
mov
xchg
mov
das
pop
movs
rcr
lods
and
ja
ss
xor
cmps
inc
xchg
and
sub
jb
rcl
xchg
sub
cmp
popa
or
jg
(bad)
jl
push
loop
repnz
pop
fdivr
xchg
pop
push
test
pop
dec
into
jo
out
aaa
jmp
cld
xchg
dec
(bad)
mov
push
cmp
push
jb
or
or
(bad)
hlt
add
dec
xchg
inc
push
xchg
gs
mov
dec
mul
jmp
imul
(bad)
pop
fwait
add
sbb
jns
pusha
cwde
pushf
cmp
mov
xor
cmp
nop
push
fistp
retf
sti
sub
cdq
into
pop
inc
pop
pop
ret
(bad)
xchg
xchg
push
push
jge
sub
jnp
loope
test
cld
int
arpl
std
loopne
inc
jne
mov
or
cmp
mov
mov
fbstp
and
jecxz
xchg
pop
dec
enter
push
loopne
(bad)
pop
mov
lods
mov
sahf
test
cmp
mov
cmps
or
inc
mov
lock
sbb
jecxz
test
mov
cmp
mov
pop
aas
scas
ss
test
inc
push
sbb
inc
sub
mov
adc
mov
inc
(bad)
or
jns
cmp
or
fimul
fld
rol
es
nop
or
jmp
fisttp
and
jge
retf
into
xchg
jae
out
iret
adc
jp
dec
cwde
adc
xchg
stos
mov
mov
mov
push
aas
loopne
mov
fisub
out
mov
loope
jns
mov
retf
in
sub
add
push
fnstenv
cld
(bad)
and
adc
mov
dec
sub
enter
add
or
int
imul
inc
cmc
sbb
mov
mov
aas
movs
call
add
jg
jp
xchg
dec
fwait
inc
lock
cdq
inc
or
add
adc
adc
aam
ja
cmps
enter
(bad)
in
arpl
dec
das
push
fisubr
les
pop
stos
xor
iret
inc
xchg
call
ja
add
popa
sbb
jno
(bad)
test
add
arpl
pop
mov
jne
(bad)
daa
dec
pop
fnstenv
push
dec
adc
shl
dec
addr16
ficom
mov
inc
lods
xchg
retf
and
pop
fistp
stc
adc
sub
jl
test
fucom
clc
repz
mov
sub
clc
mov
pop
jb
nop
loopne
jae
adc
out
jl
or
dec
sub
add
cmp
test
unpcklps
sub
xchg
rcl
ins
sub
mov
jmp
scas
loope
add
nop
mov
data16
fstp
or
sahf
push
test
sub
jmp
jl
popf
dec
sti
jnp
repz
sahf
in
bound
mov
ret
cmp
ins
mov
sbb
mov
lods
retf
js
jno
sub
jge
jmp
xchg
sub
fsubr
add
mov
das
xchg
jp
fldcw
sbb
pop
fcomi
xchg
add
push
jle
aad
fst
xor
mov
xlat
and
fcom
mov
xchg
mov
cmc
es
inc
push
cli
sbb
jl
inc
pop
or
inc
not
dec
lods
add
in
jp
xor
push
int
test
(bad)
mov
movs
clc
inc
lea
hlt
enter
cmp
add
bound
inc
push
push
aam
mov
xchg
frstor
sub
mov
clc
ja
mov
retf
fld
mov
add
xor
imul
dec
xchg
push
das
mov
(bad)
xor
clc
pop
sbb
loopne
push
cli
(bad)
mov
mov
nop
mov
out
push
in
push
dec
into
adc
lods
or
mov
ficomp
cmp
and
dec
iret
mov
sbb
mov
(bad)
mov
iret
mov
ret
gs
aam
pop
xchg
movs
cdq
xor
and
ins
mov
fmul
stc
sti
inc
xor
dec
not
mov
mov
mov
lods
pop
add
pop
sbb
enter
inc
jle
jmp
cmp
jecxz
push
daa
sahf
xchg
fld
xchg
iret
and
xor
adc
mov
mov
movs
cmp
pop
sub
lock
push
jp
jecxz
ds
sub
aad
fs
out
add
fs
dec
in
call
jmp
rcr
xchg
jge
jg
xor
repz
push
retf
call
loope
xchg
sbb
push
mov
dec
xchg
sbb
inc
sbb
inc
mov
out
add
sbb
inc
fimul
sbb
movs
(bad)
cmp
xchg
enter
cwde
nop
pop
pop
jmp
inc
jl
adc
add
xchg
ret
xor
(bad)
fst
test
add
inc
inc
add
mov
mov
movs
fwait
out
inc
xchg
idiv
xchg
xchg
movs
xchg
scas
ins
and
imul
sbb
push
out
dec
call
stos
mov
pop
int
xor
fwait
sub
jns
lea
addr16
mov
into
into
sub
lds
xchg
ret
shl
sub
push
adc
xlat
sub
add
fist
fnsave
int3
cli
inc
loop
mov
jae
repz
pop
inc
popf
in
inc
in
pop
jbe
pusha
push
sbb
or
pop
pop
sbb
and
pushf
addr16
ja
bound
dec
push
mov
aam
bound
mov
cmp
xor
dec
sub
loop
xchg
outs
dec
adc
pop
mov
ins
adc
daa
ret
xchg
cli
jmp
imul
jnp
mov
rcl
jecxz
jecxz
in
aas
repnz
jo
outs
pusha
pop
rcr
inc
clc
movs
jge
(bad)
fstp
inc
aad
push
lea
movs
adc
pop
or
or
out
out
pop
ret
sub
out
aam
rol
repz
in
push
cmp
aas
in
(bad)
int
mov
xchg
sub
mov
xor
xchg
mov
pop
cmc
aad
push
push
jo
add
por
mov
aas
sbb
(bad)
sub
mov
pop
int3
retf
push
xor
push
xchg
xchg
push
sahf
or
(bad)
daa
(bad)
cli
pop
xor
xchg
mov
push
fucom
and
repz
cmp
rcr
fldcw
add
push
add
push
sti
ror
inc
adc
scas
xchg
push
aas
jne
data16
popf
sbb
int
jmp
push
xchg
dec
out
or
pushf
jo
repz
clc
dec
cdq
dec
retf
loopne
mov
pop
lods
dec
xchg
add
in
movs
cwde
stc
movs
aad
test
ret
xor
cli
mov
mov
scas
lods
jmp
test
jg
add
cmps
mov
mov
stos
rol
add
test
mov
mov
popf
push
fidiv
adc
dec
xchg
sti
ficomp
mov
pop
addr16
test
push
push
retf
pop
pop
add
or
lods
jge
js
sbb
inc
xchg
nop
imul
call
push
aas
cmc
test
das
xor
pop
mov
mov
call
adc
test
data16
adc
imul
or
mov
popf
inc
sub
dec
mov
jp
dec
xor
mov
addr16
out
push
add
jno
retf
mov
push
push
(bad)
sub
or
push
inc
push
shl
adc
mov
adc
jl
test
addr16
push
sbb
jmp
jmp
mov
inc
jl
adc
adc
pushf
add
inc
sub
inc
cmc
add
mov
sbb
cld
test
adc
(bad)
pop
and
and
xchg
stc
sbb
sub
and
movs
and
pusha
addr16
adc
jne
sub
and
adc
pusha
int
sub
sub
sbb
test
inc
rcr
stos
popf
sbb
jecxz
adc
nop
cmps
cli
ret
aam
test
(bad)
adc
out
mov
push
sbb
clc
repz
popf
std
mov
mov
or
fs
(bad)
mov
fsubr
enter
mov
adc
mov
shr
sbb
push
popa
mov
mov
or
inc
xor
push
mov
jb
xor
xor
pop
or
jg
aas
(bad)
out
adc
dec
test
popa
jns
adc
scas
push
(bad)
jmp
fild
ds
inc
and
mov
pop
rol
aad
pop
mov
das
mov
rcr
mov
xchg
inc
and
jmp
dec
aaa
out
daa
aas
rcr
aad
inc
xchg
shl
in
cmps
ds
sahf
push
mov
and
jbe
xor
popa
(bad)
ins
inc
or
jne
mov
xchg
sub
fstp
mov
shl
call
push
push
add
(bad)
leave
xchg
mov
inc
hlt
or
inc
mov
jmp
sub
adc
mov
jns
mov
mov
or
mov
test
add
repnz
mov
jle
xor
inc
pop
xor
rcr
movs
ficomp
mov
dec
adc
daa
pop
dec
push
xchg
inc
or
mov
call
mov
out
pop
cmp
(bad)
cmps
loopne
or
fdivrp
mov
test
nop
loope
mov
(bad)
mov
and
aaa
add
add
push
fstp
lods
cmp
xchg
ins
and
jne
test
sub
sub
repnz
sub
inc
in
ret
imul
out
(bad)
sbb
mov
pop
mov
outs
sbb
es
arpl
mov
mov
and
ret
rcl
scas
lods
push
in
fwait
jo
imul
das
(bad)
aam
pusha
pop
fwait
or
ja
mov
xor
arpl
jns
dec
inc
mov
push
nop
lock
mov
jne
pop
xchg
mov
pop
loop
fistp
jecxz
leave
mov
push
out
jae
mov
cmp
add
and
inc
sahf
lds
push
pop
mov
mov
mov
or
ss
in
cmps
scas
add
mov
mov
ins
fwait
jnp
adc
ror
jl
push
sub
sahf
iret
call
mov
in
or
jo
sub
ss
push
add
(bad)
xchg
dec
or
or
jo
stos
(bad)
dec
in
push
xchg
ja
je
mov
inc
test
fisub
cmps
and
sub
jp
and
jmp
xlat
push
mov
gs
jnp
not
inc
ds
dec
pop
pop
test
jge
push
cmovle
push
push
inc
push
sub
outs
dec
pop
xchg
pushf
sahf
mov
xchg
add
pop
push
or
hlt
xchg
sbb
fiadd
fstp
push
test
movs
test
arpl
(bad)
in
jne
mov
xchg
jbe
aaa
or
xor
scas
imul
push
ror
test
mov
xor
bound
imul
jge
push
pop
bnd
mov
or
xor
xchg
outs
jecxz
hlt
or
adc
dec
and
push
mov
mov
jmp
fs
int
repnz
push
dec
sub
sbb
cmps
xchg
movs
and
mov
sub
cmp
rol
pop
adc
ins
mov
and
push
mov
scas
clc
rcr
outs
shl
aaa
stc
in
fnstsw
rol
sahf
cmp
popa
pop
add
fidiv
xchg
xchg
ror
(bad)
loop
xor
sub
pop
xchg
jb
ja
sub
mov
dec
sbb
jbe
cmc
cmp
sti
setge
rcl
scas
and
data16
adc
daa
xor
cmp
ds
fst
icebp
clc
sub
mov
pusha
adc
inc
into
xor
leave
xchg
cmp
icebp
jno
jb
xchg
fstp
sar
pop
test
jmp
add
and
mov
xchg
mov
mov
add
mov
cs
push
out
dec
imul
and
add
fiadd
in
sbb
inc
inc
xchg
test
stos
es
push
xlat
std
or
in
and
loop
mov
jo
sub
ja
or
(bad)
push
fcmove
(bad)
xchg
sub
les
sar
pop
cdq
mov
hlt
jno
mov
iret
ret
push
jns
push
call
aad
push
pop
mov
or
bound
repz
xchg
cdq
xchg
fidiv
push
gs
mov
out
push
sahf
jge
cmp
or
mov
jmp
int
jl
jmp
dec
retf
hlt
cmp
xchg
imul
jb
mov
xor
pop
rol
ror
xor
aam
xchg
cmps
(bad)
scas
xchg
(bad)
jg
xor
and
jecxz
cmp
into
push
push
and
inc
rcl
pop
adc
sbb
movs
mov
jp
cmp
dec
shl
jge
pop
dec
int3
push
inc
push
inc
jo
shr
movs
inc
push
mov
sahf
push
push
daa
ins
ret
push
shl
(bad)
aam
pop
ins
jae
xor
or
mov
jmp
es
aad
in
push
clc
dec
mov
dec
shr
mov
cmp
and
cmp
inc
push
jl
push
jmp
movs
outs
sub
xor
push
iret
dec
mov
repnz
inc
loop
mov
adc
push
retf
ret
popf
test
mov
rcr
jp
sar
add
mov
add
icebp
xor
in
mov
ds
pusha
dec
leave
sbb
pop
add
sub
(bad)
cmc
ins
mov
inc
sub
ror
cmp
add
daa
mov
int3
stc
clc
push
mov
jns
pop
or
retf
scas
pop
mov
iret
fwait
and
cmc
add
push
test
out
inc
inc
add
dec
ret
mov
clc
jge
out
repnz
cmp
dec
sbb
lods
inc
mov
test
popf
shr
xor
xor
or
inc
jmp
mov
xor
xor
imul
in
pop
jae
movs
cmp
pop
dec
add
(bad)
adc
out
or
lea
mov
je
push
add
lahf
mov
ds
fnstcw
cmc
or
call
enter
arpl
mov
repnz
enter
test
pop
cmp
jno
(bad)
popa
lods
push
in
outs
lock
leave
mov
daa
pop
mov
sbb
fmul
dec
inc
call
pop
dec
inc
int
sti
mov
and
jo
adc
int
cmps
fistp
(bad)
fild
fsub
sub
push
fs
hlt
scas
sub
add
(bad)
inc
out
or
scas
xor
popf
repz
jno
jae
pop
pop
jb
pop
pusha
fst
ja
add
pop
iret
shr
cs
stc
repnz
mov
imul
pop
bound
or
mov
jmp
(bad)
gs
or
pusha
jnp
push
sbb
shl
std
inc
hlt
lahf
pushf
mov
dec
ret
mov
adc
pop
imul
and
addr16
inc
mov
mov
or
dec
sub
call
fwait
adc
push
inc
clc
idiv
mov
adc
add
jo
or
jge
and
push
scas
test
xchg
aad
bound
inc
test
cmp
or
popf
xchg
add
pusha
add
lods
fcomp
push
push
and
and
scas
pop
fs
mov
gs
mov
pop
mov
(bad)
data16
(bad)
test
fmulp
hlt
out
inc
arpl
sub
inc
or
inc
sub
push
dec
mov
std
sub
loope
jb
(bad)
mov
xchg
int
dec
in
lds
add
push
mov
fild
icebp
icebp
mov
xchg
add
cmp
pop
scas
std
pop
addr16
jno
(bad)
lods
xchg
pop
lsl
stc
loop
add
mov
mov
mov
cs
mov
mov
xchg
mov
pop
popa
dec
fcom
adc
cmps
dec
or
and
test
imul
jbe
adc
test
add
mov
enter
sub
mov
push
sbb
ins
push
adc
daa
je
loopne
jmp
(bad)
rcr
repz
in
add
inc
mov
call
jns
mul
mov
cdq
stos
pop
int
bound
sub
leave
daa
sub
movs
dec
gs
in
popf
aaa
or
gs
pop
in
xchg
dec
xchg
and
cwde
jbe
stos
mov
adc
(bad)
cmp
or
sub
lock
mov
xor
inc
mov
pop
cmp
in
pop
xlat
and
fsubr
inc
sub
mov
sub
inc
inc
mov
shr
and
sbb
adc
imul
xor
xchg
cwde
lods
lds
gs
mov
mov
add
and
sub
stos
push
add
bound
lods
mov
je
sti
jne
dec
pusha
sub
cmps
or
xchg
add
mov
jbe
jnp
inc
mov
loopne
pusha
xchg
or
sbb
int
les
push
mov
push
dec
dec
cmp
mov
jo
ins
add
cdq
(bad)
adc
sbb
mov
out
sbb
dec
cmp
call
push
xor
idiv
pop
jno
test
aam
mov
mov
jle
pop
test
nop
(bad)
imul
retf
call
xlat
in
sub
ins
ins
in
jns
dec
popa
or
jl
rcr
enter
and
cmp
repz
popf
stos
xchg
das
test
fidivr
mov
xchg
cmps
pop
inc
dec
and
inc
push
bound
in
call
adc
je
and
(bad)
in
cmp
call
pop
ret
ja
lods
pop
aam
out
xor
xchg
out
arpl
push
in
test
sbb
push
or
stc
cwde
mov
int
cmps
or
cmp
outs
test
mov
test
test
ins
pop
in
outs
lds
es
(bad)
fld
data16
sub
ret
addr16
cli
jns
jns
loop
jbe
fdiv
push
jno
xor
adc
xor
mov
cmp
rcl
lods
mov
mov
xor
or
and
push
sub
jg
iret
mov
shl
mov
push
idiv
xchg
xor
fs
test
into
pop
xchg
out
jbe
or
test
pop
mov
cs
retf
stc
ds
push
sbb
loope
fdivr
cmp
mov
icebp
es
jmp
xchg
aam
cmc
ja
or
mov
stos
sbb
xor
mov
and
shl
ror
ror
or
xchg
xchg
xchg
or
nop
test
call
cmps
rol
and
or
not
push
sti
sub
jo
rcl
mov
movs
je
jmp
pushf
fbld
in
dec
xor
push
shl
jmp
dec
cmp
mov
int3
movs
es
sbb
dec
clc
cmp
cmp
xor
pop
sbb
cli
inc
dec
data16
imul
imul
mov
int
shr
cmps
fldcw
sub
das
xchg
jae
or
xchg
xchg
movsx
ret
jmp
cmp
push
repnz
cmp
out
lea
push
ja
pop
retf
mov
jp
mov
sub
je
and
shl
mov
cdq
dec
sub
xchg
xchg
int3
test
aad
icebp
nop
add
lods
dec
imul
cmps
mov
addr16
outs
and
int
mov
mov
ret
xchg
pushf
sti
sbb
movs
int
mov
xchg
inc
stos
jle
xchg
xchg
loop
add
xchg
fdiv
jmp
cmps
repnz
fist
fs
or
retf
sub
dec
adc
sbb
jae
imul
xchg
jo
push
mov
mov
sbb
inc
inc
mov
jbe
push
jg
adc
pop
sub
sbb
mov
sbb
dec
bound
jnp
test
xchg
inc
(bad)
aas
cs
push
shr
nop
xchg
xlat
adc
repz
fisub
(bad)
aam
into
(bad)
jns
cmp
outs
stc
sbb
mov
leave
dec
lds
xor
cmp
sbb
mov
fnstsw
push
xor
sub
dec
push
scas
adc
icebp
fimul
mov
ret
mov
mov
sub
xchg
jo
int
mov
ss
sub
adc
mov
pop
mov
xchg
dec
scas
mov
inc
dec
mov
enter
imul
test
jbe
xor
xchg
push
popa
add
push
xchg
jns
jl
mov
imul
xor
xlat
inc
scas
dec
dec
test
aam
in
fisttp
and
idiv
mov
dec
in
ret
mov
push
rcl
test
je
test
push
pop
mov
mov
sub
rcl
fmul
mov
gs
sub
inc
imul
clc
jge
jmp
sar
dec
xchg
xor
pop
jle
dec
mov
sub
cmps
sbb
stos
xchg
jb
adc
fisub
cs
(bad)
xchg
in
sbb
pop
rcr
popf
mov
es
repnz
mov
fdiv
mov
in
cld
in
test
repz
inc
push
hlt
and
push
call
pop
ja
xor
cmp
xchg
mov
jns
setge
ret
ret
icebp
push
or
cmp
lock
mov
int3
dec
mov
adc
jb
imul
arpl
outs
dec
aad
in
retf
retf
xor
call
shl
dec
fld
mov
jg
dec
and
cs
imul
mov
hlt
mov
ror
xor
jo
xor
sub
aas
sbb
cmc
dec
adc
movs
xchg
int
cmp
mov
sbb
scas
lds
xor
xchg
fsub
mov
fwait
dec
xor
jle
ret
cs
stos
cmps
nop
adc
mov
mov
fnsave
pop
sub
jmp
(bad)
rcl
rol
mov
or
out
daa
int3
je
add
mov
fadd
sub
pop
hlt
loop
dec
stos
add
test
adc
pop
push
jmp
retf
ins
jecxz
mov
jo
dec
inc
cmp
jns
xchg
rol
mov
xchg
ins
scas
fsub
pop
js
and
cmps
mov
loopne
pop
inc
xor
mov
inc
test
sub
imul
push
adc
not
mov
pop
xchg
and
pusha
arpl
sub
cwde
int
cmp
(bad)
jl
pop
mov
mov
cld
rcl
add
cmp
xchg
dec
push
(bad)
loop
jecxz
mov
jno
xchg
lock
hlt
iret
cmp
fiadd
out
daa
xchg
add
daa
loope
fcom
dec
xchg
out
fisttp
add
mov
(bad)
jp
aas
mov
xor
scas
je
jle
in
jmp
jo
cmp
cwde
add
pop
nop
mov
mov
and
mov
inc
std
ds
pop
or
(bad)
shl
jb
mov
and
cmp
loop
stos
xchg
dec
add
jbe
mov
mov
and
mov
fnsave
scas
and
inc
mov
popa
in
sbb
ss
ja
adc
dec
ins
or
jg
jnp
ret
shr
hlt
sbb
int
int
pop
daa
icebp
out
cmc
out
iret
loop
nop
cmps
adc
mul
sub
popf
sbb
jns
(bad)
outs
and
nop
sub
call
in
pop
or
or
mov
fld
movs
hlt
cmp
nop
fidivr
cmc
mov
cmps
sbb
or
sbb
(bad)
div
mov
call
dec
mov
mov
inc
mov
xor
stos
sbb
outs
icebp
popf
leave
jnp
in
fnstsw
mov
cmps
adc
icebp
movs
push
sbb
inc
(bad)
or
call
and
pop
aam
imul
repz
daa
push
dec
gs
mov
shl
add
push
cmp
(bad)
stos
dec
push
mov
push
inc
mov
clc
xchg
cs
pop
(bad)
jne
mov
bound
aas
push
cmp
lea
and
mov
rol
mov
in
adc
jecxz
and
mov
inc
data16
movs
mov
adc
cmp
jle
adc
call
cld
cmps
dec
dec
ret
lock
(bad)
repz
pop
pop
pop
jge
cmp
pop
and
std
sub
xchg
inc
pop
push
hlt
cmp
ins
cdq
ins
ficomp
ins
outs
sub
mov
add
mov
jle
adc
push
loop
pop
xchg
enter
cmp
mov
dec
jmp
and
mov
pop
pushf
xor
ss
jmp
(bad)
mov
inc
cmp
mov
push
jb
mov
mov
push
loope
daa
mov
pop
int3
shl
mov
shl
and
pop
cmc
leave
xlat
jg
gs
psubd
sub
mov
pop
fdiv
inc
js
and
add
pop
not
add
shr
adc
and
aad
pop
fsub
sub
sub
and
mov
or
fisubr
int3
imul
fdivrp
mov
cmc
jmp
ins
stos
inc
push
jnp
push
cmps
and
repnz
mov
int
cli
mul
jns
repz
dec
mov
xor
jae
test
or
cmp
stc
inc
jae
retf
stc
es
out
inc
rol
rol
or
sub
(bad)
scas
fcom
fadd
nop
and
xor
enter
out
inc
jmp
jp
cmp
xchg
call
push
and
ds
jg
popa
jp
gs
push
(bad)
mov
push
adc
adc
ja
scas
(bad)
adc
push
retf
dec
cld
(bad)
aaa
outs
jb
mov
es
js
jg
rcl
jo
adc
xchg
mov
(bad)
xlat
imul
ror
repz
les
push
pop
dec
loop
sub
iret
pop
jo
ret
and
add
mov
cmp
test
stos
loopne
or
movs
fld
popa
xchg
inc
jmp
fstp
and
push
arpl
les
dec
out
mov
out
fwait
jb
dec
xchg
xor
inc
inc
fsub
cmps
lods
pop
add
js
cs
fdiv
jmp
xor
sar
dec
outs
call
cmp
dec
jle
cmp
xor
daa
jmp
dec
(bad)
pop
mov
ins
or
pop
pop
cmp
out
ftst
ins
add
jmp
and
or
add
push
xor
push
inc
(bad)
gs
pop
popa
shl
and
sbb
dec
ficomp
leave
pop
mov
shl
mov
push
cmps
in
jmp
inc
mov
and
cmps
aas
pop
push
dec
add
xchg
add
and
loopne
mov
cld
idiv
and
sti
mov
jge
jae
lock
jns
push
mov
imul
mov
pop
hlt
(bad)
pushf
out
dec
mov
mov
cmp
add
dec
dec
es
(bad)
test
pop
jb
sbb
jnp
cmp
push
icebp
stos
jo
dec
inc
aas
jmp
jns
dec
pop
inc
push
loop
adc
scas
fstp
(bad)
dec
iret
lock
dec
or
adc
cmc
into
sub
mov
gs
mov
test
push
adc
fwait
sub
xor
aad
jns
test
sub
adc
dec
hlt
sbb
pop
iret
lea
fdiv
adc
aaa
fstp
sbb
retf
stos
pop
mov
and
add
mov
mov
hlt
mov
scas
dec
cmp
xor
aam
iret
adc
xlat
(bad)
movs
push
js
and
sub
sbb
(bad)
(bad)
xchg
fcmovne
xchg
nop
add
dec
shl
xor
loopne
fsubr
pop
out
ret
push
rol
nop
add
aam
cli
sub
sbb
sahf
inc
out
or
jns
ss
jp
pop
int3
or
ror
sbb
and
(bad)
pop
nop
pusha
sbb
xchg
sub
and
jmp
(bad)
fld
sub
mov
push
or
push
mov
test
retf
dec
fist
dec
sbb
push
xchg
loope
es
ins
shl
stos
(bad)
and
jmp
fwait
ret
add
ror
pop
repnz
pop
nop
or
xchg
mov
fmul
jmp
std
or
or
jg
pop
jns
rcl
out
je
xchg
jg
nop
std
sub
xchg
scas
fidivr
retf
mov
xchg
and
enter
push
sub
es
ins
add
mov
fdivr
mov
or
xchg
mov
pop
and
mov
mov
(bad)
gs
popa
(bad)
jg
out
int
mov
popf
dec
lds
rol
cmps
sub
cmps
xchg
arpl
arpl
sbb
sar
lods
or
adc
mov
pop
cld
pop
push
cmp
xchg
test
int3
mov
jnp
cmp
add
mov
xchg
push
xor
push
mov
sub
shl
sub
addr16
cld
push
mov
mov
aam
mov
std
pop
adc
sbb
fstp
sub
pop
je
mov
fstp
mov
into
nop
je
mov
repz
inc
adc
mov
inc
cmp
sbb
ja
test
imul
cld
stos
mov
shr
retf
outs
std
test
xlat
(bad)
adc
xor
call
ret
in
mul
xchg
retf
pop
sub
dec
stos
(bad)
rcl
or
xor
out
pop
cdq
clc
in
xor
push
push
sub
xchg
sub
adc
jns
mov
sub
loopne
cmp
cmc
mov
mov
jp
mov
test
sub
mov
inc
xchg
neg
cmps
fldcw
xor
fs
out
mov
mov
js
push
aad
sbb
ins
int3
das
adc
or
imul
mov
retf
sahf
jns
movs
cli
adc
out
fld
xchg
imul
loopne
sub
dec
pop
sbb
mov
repnz
sbb
mov
cmp
cld
leave
xor
mov
push
inc
xchg
ins
xchg
out
test
push
xchg
sbb
enter
ss
xchg
mov
or
aaa
adc
add
cmp
mov
push
xchg
and
push
hlt
mov
sbb
fidiv
inc
iret
call
mov
ficomp
or
lds
push
fisttp
enter
push
cwde
cmps
mov
scas
in
lock
and
mov
test
pop
pop
je
xchg
push
hlt
sbb
hlt
pop
and
cmp
or
add
cmp
mov
push
mov
jne
je
push
xor
push
mov
std
test
adc
pop
mov
mov
xor
cmps
sahf
out
pop
stos
push
aas
mov
or
sti
and
push
and
xor
cmps
mov
or
pop
cli
lahf
pop
dec
jne
mov
or
jmp
lahf
jmp
pop
mov
div
mul
movs
mov
ss
push
iret
nop
pop
mov
je
loopne
stos
adc
pop
test
dec
lods
ja
fsqrt
(bad)
mov
jbe
push
sub
push
xchg
xchg
imul
dec
xchg
jno
xchg
xor
jmp
(bad)
scas
popf
or
cwde
(bad)
sti
arpl
das
outs
dec
push
xor
push
jmp
pop
call
mov
jg
push
imul
call
test
inc
repnz
inc
xchg
and
xchg
mov
inc
or
jg
sar
xchg
mov
add
lea
dec
and
mov
cmp
xor
push
inc
adc
push
cld
out
call
push
and
pop
test
loop
push
sti
(bad)
mov
jbe
cmc
mov
div
mov
dec
out
or
push
push
(bad)
(bad)
sub
sahf
shr
or
in
inc
jne
or
stos
cmp
xchg
in
enter
std
fmul
in
int3
loop
mov
push
mov
aas
jg
xor
xor
lock
js
pop
clc
xor
iret
nop
sub
lds
inc
and
push
stos
js
mov
lahf
pop
or
jecxz
push
add
mov
dec
cmp
pop
(bad)
and
sub
aaa
rcr
mov
or
test
cmp
cmps
xor
mul
sbb
xor
and
gs
xor
popf
ja
sub
out
mov
xchg
(bad)
cmc
adc
out
fisttp
cmp
jmp
xchg
jns
cmp
cmp
mov
xor
jle
ins
ss
pusha
xor
imul
iret
xchg
xchg
fwait
add
push
lahf
leave
inc
les
mov
mov
das
or
and
test
sbb
(bad)
cmps
sub
push
sub
cld
das
stos
cmp
shl
fstp
mov
mov
xchg
mov
mov
loop
inc
out
lods
and
test
xor
int
xchg
test
push
data16
jnp
cmp
xor
pop
out
xchg
push
push
mov
jp
cmps
in
ficom
ret
out
in
dec
cmps
xor
sub
mov
sub
mov
out
lea
adc
or
js
add
nop
jmp
sub
scas
add
adc
adc
mov
xchg
or
mov
call
pop
sub
adc
add
mov
lea
mov
daa
xor
xor
dec
imul
and
sub
fdivp
into
push
lock
loope
into
fdiv
pop
xor
ror
xchg
sbb
jge
add
scas
pop
movs
xor
cmps
sar
pop
sahf
cwde
pop
(bad)
xlat
xchg
xor
or
loopne
movs
dec
or
clc
xchg
xor
sbb
fld1
adc
les
mov
movs
repnz
test
add
xchg
jmp
xchg
stos
jnp
cmps
adc
pop
nop
nop
dec
pop
iret
cmps
out
pusha
cld
out
(bad)
and
pop
xchg
add
ror
jae
xchg
xchg
push
aaa
ror
outs
(bad)
dec
jb
shl
cmc
aam
mov
movs
cdq
adc
add
retf
retf
in
and
mov
ret
call
and
mov
cmp
outs
xor
ds
sbb
cdq
outs
cdq
mov
xchg
aaa
cld
inc
loopne
retf
loope
xchg
adc
scas
xchg
push
jg
in
push
mov
pop
fs
jmp
cmp
ret
lods
ss
push
aaa
stc
pop
push
cmp
or
mov
fstp
(bad)
adc
push
mov
add
lahf
mov
mov
pop
inc
or
fisttp
aam
add
(bad)
mov
jle
enter
and
mov
retf
pop
or
inc
test
add
outs
sbb
push
inc
in
stos
jbe
arpl
pop
jle
add
pop
outs
(bad)
ret
push
lods
xchg
mov
icebp
test
mov
dec
in
das
clc
jns
repz
addr16
dec
sbb
xor
and
cli
jns
add
push
out
and
jno
aam
push
xlat
inc
shl
cwde
shl
push
pusha
nop
dec
push
sub
pop
pop
xor
rol
add
inc
xor
mov
stos
(bad)
xlat
test
scas
and
pop
cmp
repnz
fcmovbe
xchg
xchg
xchg
inc
mov
aaa
stos
lods
pop
mov
shr
dec
add
dec
dec
sub
sub
das
sub
lar
scas
in
fst
stc
pushf
sahf
jnp
mov
pop
shl
sahf
ja
and
xchg
bound
jmp
in
rcr
xchg
add
sti
push
or
inc
and
mov
inc
sahf
add
cmp
sbb
xchg
cmc
cmp
and
(bad)
push
movs
sbb
ja
jns
and
cmp
or
(bad)
fbld
mov
hlt
mov
imul
jp
sub
(bad)
add
and
cmp
in
mov
mov
xchg
test
push
imul
dec
jb
xchg
fsub
aas
stos
out
fild
jmp
mov
mov
cmp
dec
mov
pop
mov
mov
inc
psrlq
cmps
rcl
scas
fisubr
and
les
sbb
lods
and
jmp
stc
inc
nop
push
stc
mov
loope
push
push
fyl2xp1
lods
and
sub
inc
stos
test
in
hlt
adc
xchg
lock
lods
dec
nop
daa
dec
and
cwd
rol
inc
in
pop
gs
jnp
add
push
mov
xchg
cmp
or
hlt
adc
scas
loop
aaa
ss
push
ja
ins
in
push
aas
retf
in
in
and
leave
or
retf
xchg
shl
daa
ja
cmp
daa
inc
mov
mov
sbb
fstp
push
loopne
sbb
mov
xor
movs
add
xor
in
fistp
es
add
lods
shr
push
jmp
xchg
lds
fsubr
shl
fs
ss
mov
jge
mov
jbe
int
sub
sbb
ficom
mov
gs
nop
push
test
add
or
scas
iret
leave
mov
xchg
inc
add
mov
jmp
adc
scas
sbb
jne
jecxz
push
push
adc
jecxz
pop
shl
pop
jne
(bad)
mov
mov
jmp
sbb
daa
push
xchg
das
push
ins
xchg
stos
push
test
daa
popa
lods
push
sub
pop
cmp
lahf
mov
cmp
sbb
mov
cmp
or
movs
mov
jge
mov
pop
push
mov
adc
cmp
jmp
scas
dec
adc
sbb
cmp
cmp
(bad)
xor
loop
gs
push
hlt
aam
cmp
push
popf
push
das
adc
xchg
fcom
dec
imul
sahf
dec
leave
and
fsubrp
push
ds
pop
inc
inc
xor
mov
sub
stos
sbb
mov
cmp
pop
mov
out
xor
sbb
sbb
adc
cdq
in
mov
cwde
fcmovnbe
stc
imul
hlt
test
dec
sti
xor
mov
sahf
cld
adc
push
ja
fist
mov
cmp
lock
mov
mov
jne
pop
jmp
outs
out
push
comiss
call
jo
outs
test
xchg
xchg
ss
sub
out
repnz
sub
mov
bound
lds
xchg
sbb
in
mov
push
push
(bad)
gs
inc
pop
push
test
and
push
xchg
sbb
test
retf
into
mov
dec
pop
enter
in
sti
rol
clc
mov
pop
adc
mov
iret
leave
(bad)
bound
or
out
aam
mov
fistp
dec
clc
call
call
push
mov
imul
je
mov
(bad)
in
jae
je
movs
pop
cdq
lds
loopne
(bad)
retf
leave
xchg
mov
in
and
clc
xchg
call
adc
xor
xchg
cmp
and
adc
cwde
ror
iret
pusha
mov
out
or
mov
xor
jne
lods
dec
adc
popf
pop
cmp
pop
mov
push
jge
mov
ret
not
or
fwait
add
jg
iret
imul
fnstsw
sahf
mov
arpl
cmp
loop
mov
sub
lods
jno
aam
pushf
xlat
or
adc
ret
xor
mov
fistp
lock
mov
xor
sbb
xlat
pop
jge
aaa
test
jp
imul
jnp
in
jno
movs
cmc
jbe
jl
mov
call
mov
mov
mov
pop
neg
bound
cmc
pop
xor
xchg
repz
xchg
ret
mov
mov
aaa
outs
int
mov
(bad)
pushf
pop
adc
xchg
push
jb
retf
ins
movs
clc
ror
xchg
jb
icebp
outs
jg
outs
lods
sbb
jg
mov
fcom
mov
popa
outs
push
xchg
mov
sub
jae
push
inc
stc
or
dec
jg
out
sbb
add
xor
jno
cmp
(bad)
fstp
mov
adc
push
pusha
cld
in
sub
pop
sub
xchg
cdq
(bad)
xchg
(bad)
jmp
(bad)
out
test
adc
std
push
mov
stc
push
cmp
push
inc
cmps
hlt
or
or
repnz
(bad)
fld
sub
xor
or
stos
loopne
lock
add
xor
loop
mov
pop
neg
retf
inc
stos
ret
inc
push
xor
in
push
mov
ins
lea
xor
in
into
and
mov
dec
outs
ror
in
fisttp
test
ror
push
mov
fdiv
mov
sub
xor
sub
das
pusha
inc
(bad)
inc
je
lock
xchg
cwde
adc
cli
sbb
jne
add
inc
adc
jg
or
add
fcom
int
dec
dec
cmps
pop
jmp
sbb
fwait
adc
xchg
inc
jne
cmc
bound
(bad)
ds
inc
mov
mov
fsub
jge
(bad)
sti
popa
rol
push
cmps
dec
cwde
out
xlat
jcxz
inc
cmc
dec
sub
lods
nop
xchg
scas
push
sar
mov
dec
js
pop
mov
loopne
mov
push
lods
pusha
ror
cmp
fidiv
cmp
in
popa
xor
push
push
pop
mov
sub
xor
jl
sub
mov
jg
inc
dec
or
ret
and
inc
inc
push
(bad)
pop
lods
push
lods
aad
dec
mov
jne
mov
or
fild
jmp
fcmovbe
mov
outs
dec
gs
push
push
sub
cmp
xlat
stos
mov
jge
xor
push
add
aas
jle
push
in
inc
fneni(8087
push
ss
mov
push
shr
or
dec
xchg
lahf
retf
cmp
dec
pop
mov
add
out
or
sbb
xor
sub
inc
mov
jbe
mov
stc
sub
sbb
add
pop
inc
movs
push
mov
adc
cmp
leave
sub
dec
inc
cld
nop
cmp
test
xchg
(bad)
jmp
hlt
scas
push
scas
dec
arpl
ss
mov
aaa
sub
mov
iret
inc
mov
inc
hlt
iret
fiadd
jnp
sbb
pop
repz
loopne
adc
xor
add
fidiv
(bad)
mov
sub
inc
cmp
sbb
es
push
cmp
xor
imul
jl
out
(bad)
clc
mov
les
lock
es
in
into
out
jg
dec
retf
iret
addr16
xor
addr16
xchg
mov
stc
inc
test
in
cmp
pop
or
pop
fild
jp
int3
cmps
mov
bound
mov
ins
push
repz
add
fcomp
inc
sahf
stos
adc
xor
(bad)
pop
pop
pop
or
push
mov
jge
xor
(bad)
call
nop
fistp
mov
jg
stos
cdq
mov
xchg
sbb
xchg
outs
inc
cmps
fstp
aam
std
and
loop
outs
xchg
xor
xor
pop
mov
add
and
push
ret
aas
mov
enter
dec
rcr
lods
sub
cdq
cs
inc
dec
lea
mov
(bad)
jns
sbb
mov
xor
repz
xchg
inc
in
inc
pusha
sub
push
dec
mov
lea
xchg
xor
jb
into
mov
cmp
cmp
pop
mov
retf
adc
pop
jne
jl
ret
push
ret
mov
xor
cmps
pushf
mov
mov
sbb
fsubr
cmp
jmp
mov
mov
mov
popf
fsubr
mov
push
fsubr
retf
push
icebp
outs
mov
push
leave
inc
sbb
fucomp
inc
lods
out
into
mov
sub
int
les
sub
rol
shl
pop
pop
aam
stos
pop
retf
les
loop
inc
mov
lock
inc
(bad)
add
test
cdq
pop
cmp
xor
sbb
pop
stos
mov
leave
(bad)
cwde
pop
js
mov
adc
enter
pop
repnz
xor
dec
sar
clc
test
daa
inc
mov
xchg
cmp
jl
(bad)
stos
or
sbb
ds
add
loopne
push
gs
cli
push
pop
sar
(bad)
xlat
xor
inc
ins
les
xchg
repz
out
loope
test
cwde
sbb
imul
nop
and
or
imul
arpl
pop
test
addr16
cld
stos
(bad)
xchg
mov
mov
scas
out
jae
and
dec
aam
xor
sub
sbb
mov
fs
lods
in
lods
or
inc
inc
aas
add
cwde
gs
push
fisub
xchg
(bad)
jb
or
or
push
mov
out
shl
mov
sub
mov
add
(bad)
(bad)
xchg
lahf
push
jecxz
popf
cmp
mov
jnp
aam
aas
inc
(bad)
add
push
les
fistp
out
adc
push
xor
into
in
cdq
jg
add
and
jg
pop
test
or
ja
cmc
ret
sbb
and
jle
hlt
mov
das
popa
mov
ss
arpl
(bad)
xchg
pop
(bad)
stc
test
imul
lods
stos
and
cmps
lods
mov
push
shr
sub
cmp
int3
mov
loope
(bad)
scas
add
clc
test
bound
imul
sub
sahf
jmp
mov
jp
lea
xor
in
xchg
push
xor
and
xchg
sahf
daa
lahf
add
jbe
outs
rcr
cmps
nop
mov
shl
or
arpl
pop
pop
push
fcomp
or
push
jl
fimul
rol
sub
gs
and
inc
fstp
fs
pop
mov
mov
jmp
pop
outs
push
push
mov
inc
in
stc
mov
xor
dec
fnsave
adc
lds
jno
js
lahf
push
dec
cmp
pop
xor
pop
jno
dec
mov
mov
push
add
dec
mov
and
cld
es
(bad)
mov
in
out
cmps
cmp
sets
loop
cmp
outs
jns
sahf
push
inc
pop
fld
mov
push
jmp
or
sbb
cdq
or
jne
and
loopne
fiadd
inc
adc
jne
test
(bad)
dec
pop
(bad)
test
fnstcw
xchg
mov
mov
cdq
jle
fist
fsub
mov
ins
test
dec
cdq
fnsave
nop
repz
repnz
sub
inc
loopne
fisub
sahf
pop
push
mov
push
sub
xchg
fsubr
fld
cli
cdq
xor
fwait
cmp
cld
loope
xor
mov
sbb
aas
inc
sub
in
and
sub
mov
sub
mov
repz
rcl
cmp
pop
gs
clc
pusha
test
and
(bad)
jp
xor
mov
ret
add
add
sahf
fdivr
int3
sub
add
ds
popa
(bad)
aad
pusha
add
test
outs
retf
xchg
sub
les
(bad)
jae
or
cmp
and
stc
inc
fwait
movs
and
mov
and
mov
sub
sub
pop
sbb
jp
mov
mov
dec
mov
sub
push
or
sbb
jmp
pop
(bad)
sbb
jmp
inc
pop
mov
add
cmp
test
mov
adc
in
mov
lods
fadd
movs
fisttp
xor
cmp
jg
cmp
sub
out
or
sahf
fucomi
xchg
sbb
mov
shl
jbe
ss
retf
sub
pop
cmp
stc
mov
mov
mov
and
neg
int3
pop
repnz
(bad)
imul
cmp
xchg
pop
data16
xor
mov
dec
arpl
lahf
pusha
mov
fadd
das
sbb
inc
jecxz
(bad)
lods
int
sub
fmul
fdiv
push
dec
ret
ret
xchg
test
jb
in
push
push
cmp
loope
pushf
aaa
xchg
js
loopne
or
loop
jne
push
mov
adc
les
dec
iret
jno
push
lock
adc
pop
push
outs
into
cmp
adc
add
mov
jns
pushf
out
jns
rol
in
xlat
sti
in
into
stos
nop
pop
sbb
add
fimul
mov
ins
js
sbb
jg
(bad)
lods
jg
inc
sub
cwde
leave
bound
hlt
fidivr
test
push
ret
mov
mov
push
sub
leave
outs
pop
mov
add
mov
aaa
jmp
js
ret
pop
in
jns
jne
push
js
sub
in
loopne
xchg
mov
fst
adc
xchg
fs
or
xor
(bad)
sub
mov
jmp
sahf
push
ffreep
sub
mov
pop
loopne
rcr
sub
fld
mov
(bad)
aaa
xchg
pop
sbb
int
pop
xlat
push
jnp
fild
xchg
mov
hlt
clc
cmp
mov
and
ret
sub
pop
(bad)
adc
or
stos
stc
ins
xor
dec
mov
test
sbb
cmp
xchg
lahf
jb
sub
or
outs
xlat
out
sbb
addr16
adc
and
push
shl
cld
sbb
pop
push
push
in
add
inc
pop
cmp
xchg
push
std
retf
push
mov
sbb
into
aam
inc
dec
pop
adc
mov
jb
test
sub
mov
fsub
mov
rol
mov
push
pop
arpl
int
xor
mov
xchg
sbb
ins
pop
adc
test
cli
into
in
xor
in
mov
xchg
push
and
mov
mov
arpl
jns
add
mov
mov
jle
mov
mov
inc
sbb
outs
jmp
cs
ins
jo
cwde
sub
loopne
scas
jb
lods
mov
push
loop
mov
xchg
data16
and
add
(bad)
xchg
and
(bad)
adc
xchg
push
(bad)
fld
adc
mov
and
cmp
stc
dec
scas
pop
jp
mov
rcr
push
jg
jmp
add
dec
sub
and
dec
cs
je
(bad)
das
std
in
leave
retf
dec
fisubr
xchg
push
icebp
and
push
sbb
inc
xor
test
mov
ins
aam
mov
push
repz
leave
jmp
xor
or
(bad)
mov
mul
cmp
pop
lock
or
ins
leave
jmp
rcr
cdq
fidiv
lahf
out
popa
jno
jmp
push
adc
not
mov
popa
es
test
sbb
loop
inc
dec
lods
sahf
xor
sbb
frstor
ret
js
imul
mov
jnp
repnz
sti
or
pop
inc
mov
xchg
addr16
mov
xchg
mov
repz
xlat
inc
call
pop
sbb
dec
xchg
rcr
or
fcomp
rcr
push
loop
cmc
loopne
inc
stc
test
pop
xchg
and
mov
out
sbb
cmps
scas
aaa
scas
in
jge
inc
ins
mov
ins
push
jmp
xor
dec
jmp
fidivr
sbb
imul
in
push
mov
xor
clc
jle
mov
inc
sar
and
pop
mov
jp
(bad)
xchg
jge
retf
popa
in
nop
ins
xchg
lods
cli
movs
pushf
sbb
and
cmps
stos
xor
pop
in
cmp
(bad)
icebp
cmps
addr16
push
dec
frstor
or
cmc
shl
mov
sub
xchg
fs
les
xchg
cmp
(bad)
dec
xor
dec
lahf
cmps
gs
sbb
cmp
add
into
push
(bad)
in
cmp
add
call
add
(bad)
rcr
push
jo
das
into
mul
(bad)
(bad)
push
inc
pop
pop
adc
retf
jbe
xor
cli
xchg
dec
fdiv
aam
rol
cmc
std
cmps
sbb
lea
cmp
repnz
jne
xor
test
xor
adc
inc
cmps
sahf
mov
inc
xor
push
enter
jae
xor
pop
mov
ins
ja
add
pop
sbb
sub
push
pop
test
xchg
sbb
jecxz
stos
add
test
mov
sbb
mov
jl
dec
cmp
adc
(bad)
jecxz
ss
pop
mov
lods
jl
bound
xor
inc
push
in
push
fxch
mov
jp
push
dec
mov
dec
push
cmp
pusha
or
into
jne
fild
cmp
fstp
mov
jns
xchg
call
mov
push
dec
pop
sub
movs
in
scas
ds
arpl
shl
cmp
or
add
push
lods
loop
mov
std
je
bound
enter
inc
sbb
dec
mov
(bad)
dec
outs
and
pop
jl
xchg
add
daa
push
sbb
cmc
psrlq
cli
into
jb
loop
and
div
cwde
call
sbb
repz
mov
(bad)
jnp
aad
call
push
sbb
lds
add
sbb
push
out
cmp
cli
shl
fwait
and
cs
cmc
mov
and
cmps
or
jg
out
jae
xchg
pushf
jle
and
aad
sub
mov
icebp
movs
jo
xchg
rcr
std
mov
fs
mov
in
push
ss
xchg
(bad)
imul
ficom
push
rcr
or
repz
dec
cmps
jl
inc
popf
pop
in
mov
rol
or
pop
adc
adc
enter
jg
(bad)
test
sub
inc
mov
int
mov
or
fadd
xchg
xor
sahf
es
sar
cli
jmp
sub
lods
repnz
(bad)
nop
cmc
pop
xor
rol
(bad)
scas
ins
and
loope
outs
outs
out
jnp
jl
mov
xchg
fild
dec
xor
fimul
test
push
jmp
shl
or
lds
inc
aaa
retf
xchg
sub
mov
mov
dec
(bad)
int3
and
add
test
imul
adc
lock
outs
in
cmps
mov
gs
dec
pop
push
xor
mov
mov
push
and
sub
dec
dec
aaa
xor
or
jmp
push
imul
pop
dec
dec
sub
ins
fwait
lea
ss
test
push
loop
imul
xor
push
sbb
push
sub
mov
scas
test
ret
retf
cmps
ins
push
outs
cmp
inc
sbb
(bad)
jne
(bad)
pop
or
lds
xor
xor
jno
jae
jne
je
and
cmp
hlt
add
arpl
mov
mov
sbb
sbb
mov
mov
cli
mov
outs
scas
int
and
sub
xchg
test
jle
dec
ret
sahf
xchg
test
adc
jle
fsub
pop
or
imul
inc
out
pusha
cmp
add
add
hlt
add
push
pop
jp
adc
xor
push
imul
rol
in
(bad)
fdivr
loop
int3
in
js
data16
inc
test
cmp
jmp
int
xchg
out
addr16
das
mov
popa
xchg
inc
xlat
icebp
stc
mov
inc
adc
xchg
cmps
pusha
iret
leave
pusha
(bad)
lea
aas
mov
cmp
sbb
jmp
xor
adc
push
(bad)
jns
mov
in
mov
dec
loopne
push
in
push
mov
mov
dec
push
int3
or
stc
or
je
std
mov
pop
dec
push
call
test
xor
inc
sub
jno
cdq
stc
add
mov
cmp
test
xchg
nop
rcl
rol
lods
pop
das
adc
jo
sub
mov
inc
pop
pushf
jl
jecxz
stc
fnclex
pop
mov
aad
aaa
lods
mov
int3
mov
in
pop
mov
mov
scas
and
adc
dec
dec
ret
xchg
sbb
aad
cmp
xchg
fsubrp
loop
mov
sub
movs
inc
adc
in
pop
add
push
xor
xor
pop
retf
jnp
mov
dec
arpl
mov
(bad)
out
dec
push
jb
jg
cmps
icebp
test
dec
stos
dec
int3
ins
(bad)
movs
xor
ins
cmp
xor
mov
pop
pop
in
push
lahf
std
add
xor
pushf
xor
fs
inc
mov
arpl
xor
inc
pop
in
cmp
in
cli
fldenv
in
xchg
arpl
or
cwde
in
or
sbb
(bad)
push
pusha
mov
pop
adc
or
jb
adc
inc
bnd
adc
adc
pop
pop
hlt
jecxz
div
fstp
sub
cmp
ins
int
or
int
aaa
pushf
arpl
pop
xor
das
pop
and
jecxz
push
inc
push
add
cld
das
mov
add
push
cdq
pop
pop
jo
aaa
jbe
je
pusha
lods
push
jge
xchg
mov
dec
int3
ja
idiv
jmp
add
ficom
(bad)
or
int3
imul
mov
stos
inc
push
sub
popf
imul
scas
clc
mov
xor
test
rcl
popa
jnp
popf
rol
hlt
push
xchg
xor
out
outs
mov
cmps
pop
lods
je
xchg
sar
fst
shl
xchg
stos
cmp
(bad)
jnp
scas
loopne
icebp
inc
dec
clc
lods
sbb
mov
mov
sub
jmp
sbb
or
jno
ret
xor
mov
aam
sub
popa
dec
pop
fsubr
in
in
and
sar
sub
mov
loopne
mov
xchg
popa
dec
dec
adc
inc
inc
fbld
inc
add
sub
ror
xchg
and
or
xlat
mov
fadd
sbb
(bad)
fsub
test
pop
dec
enter
or
adc
mov
or
inc
iret
xchg
leave
cmps
add
sbb
or
push
dec
dec
std
outs
sbb
stos
add
out
cld
push
adc
xor
add
(bad)
xchg
hlt
mov
mov
test
rcr
idiv
fnstenv
jge
and
mov
inc
lock
pop
aad
inc
sbb
mov
adc
push
mov
xchg
push
push
into
xchg
repnz
xchg
sub
cmps
push
mov
gs
enter
cld
pop
adc
loopne
sbb
add
enter
jno
inc
pop
xor
xor
jne
int3
mov
xor
mov
cmps
in
retf
ss
mov
and
cli
aaa
rol
adc
or
call
(bad)
fnsave
mov
(bad)
and
ficom
enter
add
ror
in
loopne
xchg
jne
inc
pushf
pop
pop
test
pop
repnz
xor
arpl
xor
iret
mov
fisub
mov
imul
(bad)
jg
fiadd
(bad)
lahf
mov
mov
test
inc
les
pop
jl
dec
scas
lds
aaa
inc
mov
sbb
cmp
mov
retf
inc
mov
xor
push
clc
mov
pop
arpl
test
outs
test
int3
pop
add
pop
pop
mov
dec
add
jp
cmp
(bad)
and
(bad)
pushf
test
pop
imul
sbb
orps
dec
ins
clc
jle
inc
ins
xchg
popa
and
fld
push
push
jmp
cmc
push
sub
pop
mov
out
sub
outs
adc
lock
int3
inc
mov
cmp
jp
imul
jecxz
mov
mov
jecxz
dec
xor
push
ss
sub
mov
leave
loope
int
repnz
cmp
mov
xor
stc
mov
sbb
in
test
cmp
mov
aaa
fnstsw
push
mov
int3
mul
dec
mov
jns
push
add
mov
ror
jmp
jmp
sti
mov
mov
mov
sub
jp
inc
pop
hlt
jle
cmp
ficomp
les
pop
mov
mov
enter
xlat
imul
retf
and
add
xchg
xchg
add
jp
sahf
inc
xchg
pop
xlat
ja
fwait
lidtd
fadd
(bad)
icebp
adc
mov
sub
sub
mov
xor
mov
gs
div
and
stos
jnp
push
jmp
dec
mov
cmc
out
and
jae
repnz
rcr
cmp
faddp
push
(bad)
lock
sub
push
cmps
or
rol
mov
mov
sbb
cmp
(bad)
mul
lods
addr16
xchg
jmp
dec
(bad)
jno
fdivp
adc
mov
loop
and
jmp
inc
add
je
dec
retf
out
sar
loope
or
and
mov
std
pusha
arpl
adc
jno
pop
mov
imul
inc
sti
fdivr
cmp
in
sub
xor
add
pop
xor
mov
aad
rol
out
sbb
xchg
aas
push
add
mov
jb
sub
jmp
cmp
stc
sub
push
ret
imul
xor
adc
cmc
or
jo
lea
jnp
outs
clc
xchg
pusha
es
sahf
data16
mov
add
fld
and
mov
stos
cmc
push
cmp
aas
dec
add
cmp
in
outs
add
dec
or
xchg
imul
jnp
iret
xchg
and
and
(bad)
pop
dec
mov
or
in
int
stos
ds
adc
mov
jns
neg
scas
jbe
sub
test
cmps
retf
call
rcr
(bad)
jg
in
dec
(bad)
push
out
out
dec
or
int3
pop
mov
div
nop
das
mov
mov
or
dec
xor
cmps
ror
fwait
mov
jmp
cmp
push
pop
bound
mov
sbb
inc
inc
popa
mov
mov
xchg
cmp
sbb
ficomp
fidiv
scas
repnz
stos
(bad)
mov
lods
mov
in
(bad)
xchg
or
and
dec
lods
test
xchg
(bad)
bound
add
movs
lods
jmp
jbe
cmps
ds
mov
nop
ins
add
xchg
arpl
cmps
fcmovbe
jae
sbb
mov
or
stos
arpl
xor
ficom
(bad)
shl
test
ss
arpl
retf
aad
popf
pusha
clc
mov
lea
movs
popf
inc
rol
cdq
jl
inc
mov
mov
pop
inc
out
popa
loope
cs
sbb
adc
fisub
cmp
mov
cmc
push
sub
jne
sbb
push
pop
xor
or
mul
inc
je
and
xchg
mov
mov
mov
imul
push
retf
xchg
retf
retf
sub
ins
in
inc
pushf
mov
push
jecxz
pop
pop
mov
ret
inc
sub
test
pop
popf
push
cli
inc
bnd
mov
mov
(bad)
imul
test
xor
jecxz
add
es
fcomp
js
dec
pop
fist
sbb
cdq
out
lea
aas
div
repz
jge
(bad)
hlt
mov
mov
mov
into
mov
or
cdq
(bad)
lock
pushf
dec
sbb
jl
fucomp
jo
lds
in
int
fcom
push
ret
icebp
xchg
jb
cdq
mov
jo
push
inc
jge
aaa
jb
and
xor
push
cmp
std
aad
nop
daa
int
cmp
mov
sbb
shl
cmp
retf
test
xor
xor
ltr
inc
cmps
std
in
loopne
lods
outs
fcmovb
xchg
sub
push
xchg
shl
stos
inc
jns
out
movs
mov
mov
in
or
jecxz
mov
push
fcom
mov
das
pop
sub
shl
adc
cmc
mov
dec
mov
fild
mov
std
out
nop
dec
daa
scas
pop
les
fcmovne
push
sbb
aam
adc
mov
cmps
xor
adc
jns
in
jmp
les
lock
push
pushf
mov
dec
not
or
or
leave
cwde
and
outs
cdq
fld
inc
sbb
dec
call
repnz
dec
mov
shl
sub
int
repnz
and
leave
data16
and
into
cld
fwait
arpl
pop
push
sub
jp
add
pop
sub
call
aas
test
push
aaa
in
push
popf
jge
cmps
xchg
mov
test
pop
dec
cld
or
daa
add
sbb
push
push
into
lahf
gs
jno
jnp
mov
cmp
mov
ins
jne
std
and
jle
or
sbb
je
xchg
sub
rol
es
cmp
(bad)
jae
mov
mov
mov
repz
mov
pushf
ins
xchg
add
and
enter
cmps
push
rcl
rol
xchg
je
cs
imul
mov
jnp
add
sbb
popf
or
das
cmp
test
daa
ror
inc
outs
add
or
pop
push
and
fadd
adc
ja
inc
xor
loopne
fst
pop
xor
cmp
jno
mov
rcr
xor
pop
sbb
bound
mov
and
and
popf
cmp
neg
mov
clc
fs
mov
cld
test
inc
nop
sbb
dec
cld
pop
xor
(bad)
stos
imul
(bad)
xchg
push
jnp
mov
rcl
ror
ins
pop
mov
push
test
dec
mov
test
fstp
inc
cmc
test
sub
dec
out
ins
popa
jecxz
sbb
inc
into
push
sub
rcr
cmp
(bad)
xor
in
inc
js
or
arpl
xchg
mov
mov
or
lods
jns
mov
repz
inc
cmp
xchg
lea
sub
add
clc
sub
fcmovnbe
nop
fs
jecxz
out
and
call
lahf
ror
int3
pushf
and
test
mov
int
and
mov
push
loop
push
stc
sbb
loopne
neg
jns
push
cmp
fmulp
pushf
xchg
imul
fs
jbe
(bad)
jne
cwde
and
dec
sbb
test
pop
mov
adc
push
push
push
adc
pop
xor
loop
sar
and
pop
mov
inc
xchg
inc
cld
or
jno
or
into
mov
imul
mov
(bad)
mov
outs
mov
adc
mov
add
mov
push
retf
dec
cmps
sbb
test
dec
sbb
add
inc
icebp
cld
push
dec
jle
enter
and
aam
xchg
jns
sub
outs
ins
in
xchg
jno
jge
sub
lea
das
xchg
cmps
dec
lods
dec
sub
(bad)
sub
or
mov
pop
mov
lock
fbstp
test
fist
retf
and
jp
xchg
mov
jl
xlat
push
xchg
aaa
das
add
loop
lea
nop
call
es
call
mov
call
pop
push
data16
jb
mov
cmp
push
mov
pop
sbb
push
retf
repz
push
(bad)
cmp
xlat
js
xchg
jle
push
mov
leave
popa
aas
stc
push
imul
mov
add
fcomp
push
rol
stos
add
loope
push
jnp
sub
dec
aad
and
fcomp
or
movs
inc
enter
mov
inc
or
or
(bad)
js
leave
inc
das
popf
push
fidiv
mov
xchg
pop
pop
out
pop
push
test
jnp
call
push
pop
je
movs
(bad)
inc
es
push
or
pop
cmps
push
inc
cs
sub
xor
sub
mov
adc
mov
fiadd
cli
adc
adc
pop
repnz
push
nop
mov
dec
adc
xchg
jbe
dec
pop
scas
fadd
aad
shl
je
jae
sub
cdq
pop
loopne
jno
sub
dec
dec
hlt
sbb
xchg
mov
jmp
into
in
aas
add
retf
adc
in
jmp
sti
mov
jecxz
adc
outs
scas
fldcw
(bad)
int3
mov
out
mov
clc
push
lds
lods
push
dec
dec
call
jle
sahf
fnstcw
add
es
rcl
and
dec
jp
movs
mov
dec
aam
neg
adc
test
dec
cmp
jmp
shl
test
rcr
mov
cs
cmp
xchg
fwait
jg
sub
lock
jge
adc
pop
sub
in
pop
push
dec
xchg
fisub
loop
mov
sub
inc
xor
mov
les
xchg
jmp
ret
mov
shl
inc
or
(bad)
xchg
sub
repnz
push
xor
loopne
lods
sub
hlt
or
(bad)
sub
scas
sbb
ss
mov
add
xchg
mov
add
pop
pop
mov
jb
jnp
mov
(bad)
push
xchg
fimul
and
bound
hlt
push
cld
fiadd
push
jle
les
mov
ret
ffree
push
mov
addr16
push
fsubr
sbb
push
mov
and
push
pop
push
push
sahf
cdq
jl
cmps
mov
add
xor
xor
mov
fdivr
sbb
scas
xchg
retf
xchg
ins
mov
sub
and
arpl
push
push
hlt
adc
cdq
push
pop
retf
mov
out
(bad)
repnz
mov
jne
or
inc
mov
dec
stos
mov
add
in
fimul
jae
jge
movs
xchg
and
push
call
mov
pop
lds
shr
out
pop
xor
loope
ret
or
outs
xor
pop
add
cdq
cdq
inc
jp
adc
xchg
loope
pop
pop
and
outs
in
mov
pop
outs
mov
push
int
rol
(bad)
hlt
sub
cmp
in
sbb
xor
js
inc
out
out
mov
mov
inc
mov
pop
xor
mov
bound
nop
cmc
iret
push
movs
andnps
int
in
mov
add
or
ret
jmp
mov
mov
loope
ins
mov
sbb
es
jmp
mov
ret
imul
clc
push
jg
repnz
std
lahf
fdiv
cmp
pop
daa
jp
cmp
test
cmp
mov
ficomp
outs
das
inc
enter
inc
xchg
push
sbb
fstp
xchg
in
cmp
dec
fxrstor
repnz
sub
or
test
and
cmp
call
aaa
mov
ret
fdivr
mov
jae
sbb
xor
fld
dec
jp
cwde
sahf
aaa
sbb
mov
pop
fs
jbe
dec
test
cmp
xchg
dec
mov
xor
fnsave
inc
outs
ret
cmp
mov
sub
cmp
jo
push
out
repz
in
push
cmps
xchg
imul
mov
int
js
xchg
je
mov
stc
push
(bad)
xchg
xor
or
push
leave
inc
out
jns
xchg
test
sub
aaa
ins
les
mov
(bad)
sub
retf
out
adc
mov
adc
(bad)
mov
pop
cmp
out
dec
inc
adc
aam
jnp
out
call
and
outs
fadd
sub
inc
cld
push
jle
sub
push
(bad)
push
inc
xchg
js
pop
and
stos
xchg
pop
scas
dec
loopne
out
movs
pop
and
out
js
sbb
fsubrp
shl
sbb
movs
dec
mov
(bad)
xor
mov
and
ret
dec
jp
imul
lock
mov
ins
or
jnp
push
jmp
mov
mov
jbe
mov
xor
cmps
xor
aad
(bad)
out
xchg
(bad)
stos
jne
pop
mov
popa
dec
mov
lods
call
mov
je
ins
inc
test
mov
push
adc
jmp
push
lds
xor
outs
rcl
push
or
das
pop
jae
retf
jl
jmp
sub
and
push
push
shl
jge
inc
push
dec
push
scas
rcr
xor
mov
fmul
ins
mov
das
sub
push
pop
inc
xor
push
repnz
pop
jl
adc
xchg
cmp
and
cli
adc
cwde
imul
fistp
adc
jecxz
xchg
repz
xor
cld
mov
push
and
adc
addr16
mov
pop
xor
fs
imul
loopne
mov
cs
loop
pop
leave
test
dec
(bad)
cwde
retf
mov
retf
mov
pop
not
jnp
rcr
(bad)
stos
sbb
imul
jno
cmps
adc
pushf
push
inc
cmp
je
iret
adc
retf
sbb
sub
mov
add
add
sbb
mov
pop
stos
cld
push
sahf
daa
adc
sub
mov
push
cmp
adc
and
pop
adc
dec
mov
test
xchg
(bad)
jmp
add
call
fcomp
dec
addr16
mov
popf
fnstsw
mov
ds
stos
ss
inc
adc
ins
and
retf
sub
push
push
stos
fistp
adc
aaa
jecxz
and
inc
data16
pop
mov
mov
repnz
pushf
adc
xchg
in
repnz
xchg
inc
rcl
test
gs
cmp
int
fcomip
jae
(bad)
dec
test
(bad)
stc
push
add
sbb
cdq
or
push
inc
push
xlat
mov
pop
in
aad
or
jecxz
cmp
mov
and
cwde
mov
ss
cmp
cmp
nop
jg
push
xchg
dec
mov
mov
mov
mov
fmulp
sbb
cmp
sbb
lods
sbb
push
add
ror
test
(bad)
xor
jg
push
and
xchg
movs
lock
push
repz
cmp
dec
adc
dec
jb
cmc
popa
in
jg
sub
xchg
mov
popf
push
popa
test
cmp
mov
into
inc
adc
push
adc
je
xchg
xor
or
inc
push
push
xchg
ds
call
mov
ror
aaa
es
cmp
hlt
adc
or
adc
stos
fs
jecxz
dec
xor
imul
stos
inc
aam
sar
mov
add
xor
test
std
and
sbb
test
xchg
jg
add
push
iret
jo
pop
out
push
xor
xchg
pop
and
(bad)
out
stos
into
outs
sbb
iret
popf
lods
sahf
or
pop
imul
movs
fimul
call
test
mov
dec
jb
pop
push
cmp
and
sub
jnp
in
sbb
scas
loope
inc
mul
add
cmp
mov
(bad)
stos
cmp
fisubr
(bad)
xchg
xchg
push
push
sub
retf
mov
aaa
mov
jmp
or
jg
mov
add
mov
ror
lahf
shl
xchg
inc
idiv
dec
popa
iret
jbe
cmp
jl
xchg
js
push
mov
mov
jb
stc
test
inc
pop
das
aaa
imul
cmp
fisttp
dec
jecxz
cmp
aam
jns
out
adc
sbb
out
jnp
mov
ss
(bad)
or
dec
hlt
fxch
xchg
or
inc
cli
(bad)
shl
xchg
movs
pop
dec
ds
int
jb
jmp
ins
mov
pop
aad
jo
mov
cmps
push
nop
mov
jb
pusha
push
adc
adc
inc
repz
retf
cmp
fld
repz
iret
pusha
xor
pop
or
imul
scas
jmp
pusha
mov
nop
pop
icebp
retf
push
and
ja
out
shr
lods
sub
adc
push
fadd
mov
sbb
mov
ja
call
fldenv
mov
inc
test
je
adc
push
jge
mov
clc
fwait
out
cmps
jo
(bad)
icebp
cld
iret
out
mov
rcl
mov
or
xor
jg
outs
cmp
mov
nop
lods
lock
jge
stos
mov
sub
call
add
pop
inc
push
popf
std
jle
test
or
xchg
in
jns
and
pop
mov
cmps
aam
inc
push
cmp
loopne
cmp
out
add
mov
push
pop
fcom
jl
sub
jbe
(bad)
and
cmp
js
loope
jb
inc
and
sbb
out
and
xchg
jae
add
dec
pop
sbb
sbb
push
add
jo
adc
xchg
les
dec
and
jecxz
into
sbb
dec
std
jns
or
ret
pushf
cmp
and
bound
scas
xchg
xchg
popf
cmp
imul
(bad)
jnp
sbb
fild
inc
leave
sbb
mov
in
loopne
das
jp
in
rcr
cmps
xchg
push
xlat
mov
aas
pusha
or
and
inc
icebp
push
int
pushf
not
jb
adc
fnstcw
dec
paddb
sub
cwde
xor
xchg
dec
shl
int
mov
enter
sub
and
xchg
sub
xor
cmp
out
out
mov
or
lahf
fmul
or
xchg
push
mov
(bad)
(bad)
neg
call
shr
ret
mov
xor
scas
test
stos
and
lea
popf
dec
addr16
push
jge
push
cmp
jae
fisubr
leave
jo
xchg
sbb
cmp
inc
inc
adc
xor
jne
jne
aas
cdq
pusha
jbe
mov
out
rcl
and
movs
push
and
enter
mov
in
ins
mov
sar
adc
cwde
jne
xor
call
pusha
push
cld
push
fcom
push
sub
outs
jns
lea
xbegin
dec
and
dec
cmp
mov
mov
lods
mov
jbe
sub
mul
clc
fiadd
lea
add
fisttp
ficomp
mov
push
popf
mov
cmps
pop
scas
fistp
push
es
inc
jbe
outs
daa
jle
popa
adc
enter
jp
cmc
inc
xor
mov
sbb
iret
cmp
push
jp
adc
or
or
inc
dec
dec
inc
jmp
shl
sub
push
int3
rcl
jmp
mov
sub
fucomip
sbb
mov
scas
stc
pop
ficomp
rcl
div
pop
in
data16
jbe
enter
inc
adc
lea
(bad)
in
xor
jmp
push
inc
enter
nop
mov
jbe
mov
jle
add
ffreep
pop
leave
xor
dec
push
outs
push
mov
popf
ss
push
dec
push
cmp
lock
shl
and
adc
popa
adc
loope
jp
jns
jp
mov
sub
iret
stos
mov
inc
out
jl
lahf
inc
popf
scas
sbb
push
(bad)
mov
mov
inc
push
shr
pop
add
push
cmps
pusha
add
pop
cdq
out
push
test
es
daa
cmp
push
das
adc
cmp
cmp
out
jge
outs
bound
call
loopne
add
push
sub
push
cmc
gs
inc
popa
sahf
inc
or
mov
ficomp
shl
ins
fdivr
push
adc
push
iret
lds
outs
xchg
pop
cmp
popf
dec
adc
out
xor
ss
neg
sbb
pop
add
push
sbb
scas
mov
in
(bad)
and
inc
add
(bad)
xchg
push
push
mov
xchg
fbstp
mov
jo
sub
cli
cmp
int
les
mov
ret
nop
scas
mov
in
je
lock
addr16
mov
clc
pop
in
rcr
aaa
inc
fmulp
sti
pop
arpl
push
mov
jecxz
mov
cmp
mov
jle
loope
mov
ins
retf
mul
sub
shl
jmp
cmp
jl
lds
imul
js
jl
pusha
mov
movs
mov
clc
jge
sar
(bad)
(bad)
(bad)
jnp
mov
ins
lock
ins
inc
jo
sbb
gs
inc
aad
add
call
xchg
dec
jnp
sahf
sub
sub
mov
push
call
mov
movs
pop
test
adc
jns
jns
rep
call
mov
int3
jg
pop
les
icebp
je
cmp
fmul
ret
pushf
sti
pushf
cli
jae
mov
fnstenv
mov
adc
push
xor
(bad)
cmp
in
adc
test
in
xor
jl
inc
loop
mov
dec
inc
bound
cdq
adc
xor
cwde
imul
test
mov
mov
outs
adc
rcl
addr16
fs
dec
cli
in
xor
adc
cmp
dec
aam
inc
sbb
lahf
xchg
popf
jae
adc
push
daa
fcom
aaa
pop
(bad)
div
aaa
push
inc
(bad)
out
add
sbb
cmp
and
mov
dec
sub
mov
sti
(bad)
mov
cmp
rol
cs
fld
sahf
xchg
mov
js
dec
dec
aad
pop
ds
movs
sbb
and
popa
(bad)
cwde
add
es
sahf
(bad)
xchg
or
psrld
cmp
mov
add
sbb
sbb
cdq
cdq
nop
cmps
pop
lock
jl
(bad)
pop
sbb
jbe
iret
dec
jmp
mov
sahf
mov
cdq
xchg
js
clc
enter
aad
mov
push
ret
dec
sub
cmp
adc
retf
rcr
or
mov
(bad)
in
les
cmp
dec
adc
fsub
mov
push
test
xchg
mov
jo
cdq
lods
pop
sbb
sbb
in
aas
jmp
int
fdivr
add
adc
(bad)
cld
cmp
mov
ror
sub
push
and
imul
inc
ds
jecxz
jbe
rol
icebp
push
call
hlt
cs
xor
xchg
push
dec
std
sbb
nop
add
test
sub
call
jp
jg
and
sub
mov
ins
js
mov
cmps
call
xlat
(bad)
pop
stc
cdq
sbb
ret
dec
mov
adc
fst
inc
inc
rcl
mov
pop
adc
arpl
clc
xor
inc
ins
repnz
jge
xchg
push
xor
jp
fild
lock
jno
push
lea
or
(bad)
gs
sbb
mov
jl
nop
dec
mov
mov
mov
push
data16
sub
push
repz
mov
cmps
push
mov
in
mov
xchg
or
mov
hlt
or
dec
movs
mov
mov
clc
push
mov
adc
dec
sti
bound
jbe
xor
stc
lods
pop
jbe
jne
push
adc
jae
ins
cmp
or
imul
mov
aas
(bad)
je
test
add
ret
xchg
ins
fcmovnbe
fild
out
clc
lahf
sahf
inc
bound
and
ds
repz
push
pop
add
mov
mov
daa
fsubr
sub
fstp
and
mov
cmp
cwde
retf
daa
xchg
ins
lock
stos
call
loop
xor
sbb
popa
es
adc
movs
fwait
loope
sub
(bad)
int3
jl
out
test
jne
fstp
jb
aaa
pop
cmps
add
jmp
sub
out
cli
sbb
(bad)
daa
out
pop
mov
push
sbb
xor
mov
dec
aam
aad
jg
cmps
mov
xchg
fwait
lahf
movs
adc
hlt
add
dec
sbb
push
into
mov
and
out
xlat
mov
mov
push
push
or
mov
xchg
push
jg
fmul
data16
dec
stos
mov
xor
and
inc
pop
fdiv
mov
cmp
add
inc
les
cld
push
xchg
(bad)
cdq
sub
jg
add
shr
dec
(bad)
mov
xchg
enter
cwde
cmp
and
mov
aad
xor
mov
stos
dec
pusha
pop
push
sub
pop
daa
movs
xchg
jp
into
add
inc
call
fdiv
add
clc
shr
ret
sbb
inc
jne
daa
and
mov
dec
(bad)
sub
rcr
xor
imul
test
xor
std
cmp
push
lods
cmps
(bad)
int
aad
xor
mov
push
int3
xchg
int
push
fwait
adc
cdq
push
bound
jno
sbb
and
(bad)
out
dec
jo
push
dec
ret
jg
sbb
aam
sbb
or
loopne
xchg
and
push
jnp
cdq
sti
rol
ds
add
out
and
or
or
sahf
sahf
dec
out
dec
xchg
cmp
jp
enter
ja
aaa
inc
push
and
punpckhbw
pop
sbb
push
sbb
push
movs
dec
xor
or
cmp
sar
jg
aad
cli
sar
mov
lods
ret
cmp
ror
sbb
sub
push
adc
hlt
test
push
sbb
call
mov
push
pop
adc
out
mov
inc
stc
cmps
xchg
pop
mov
push
arpl
jg
xchg
cmp
or
cmps
sub
xchg
adc
daa
les
jge
out
jns
sub
jecxz
push
rol
sar
fldcw
dec
jmp
jmp
xor
xchg
sbb
(bad)
sub
call
lods
cmc
mov
cmc
pop
lods
loopne
or
and
sub
add
push
enter
mov
inc
mov
test
adc
mov
ja
and
icebp
sbb
xchg
jno
stc
add
ss
inc
mov
xor
test
mov
adc
xchg
nop
dec
loop
sub
adc
push
mov
jle
addr16
ret
test
pop
sub
movs
mov
cmps
and
dec
sub
mov
das
test
mov
cmp
cmp
cmp
aam
ja
cmp
scas
jmp
mov
add
(bad)
and
sbb
xor
pop
xor
push
jb
ror
out
xchg
mov
sbb
and
dec
mov
xchg
and
stos
mov
mov
xchg
xchg
and
jb
add
hlt
mov
dec
xor
cmps
or
cmps
xor
scas
popa
pushf
gs
in
fnsave
adc
or
addr16
inc
(bad)
arpl
sbb
and
push
mov
fs
das
(bad)
out
cmp
nop
and
les
push
ficomp
push
ds
imul
(bad)
repnz
inc
push
lock
repnz
aam
adc
cmp
mov
std
cdq
and
std
adc
adc
jg
pop
imul
jl
mov
iret
cli
push
and
mov
inc
pushf
lahf
sbb
loopne
push
in
in
iret
dec
std
sub
push
push
push
fcom
cmps
test
stos
cwde
cmp
inc
cs
stos
inc
xchg
push
repnz
popf
xchg
cmp
or
cs
nop
ret
mov
adc
adc
dec
fist
pop
dec
inc
mov
and
int3
pop
pushf
adc
dec
imul
and
xor
test
lds
cmp
int
in
cld
dec
fs
adc
xchg
inc
adc
daa
xor
imul
mov
sbb
in
js
adc
pop
popa
xchg
sub
jae
das
pop
sahf
int3
leave
add
mov
adc
dec
jo
jmp
loopne
mov
pop
popf
sbb
(bad)
(bad)
in
xor
lea
nop
xchg
inc
into
leave
jge
rol
push
das
mov
cmp
jge
xchg
jg
mov
and
pushf
sbb
shl
test
mov
jne
xchg
fcmovnbe
jb
nop
retf
mov
xchg
pop
dec
(bad)
cmc
fwait
mov
pop
pop
in
loop
xor
(bad)
mov
fcom
cmp
sbb
mov
test
fadd
int
(bad)
bound
mov
mov
outs
pop
push
lsl
inc
add
cmp
scas
sub
mov
clc
push
ret
jl
jnp
xchg
fsub
pop
or
xor
add
xor
ret
fisubr
and
repnz
push
dec
cli
jmp
push
xor
arpl
idiv
adc
test
mov
movs
or
mov
fdiv
fimul
xlat
push
dec
add
jmp
cmc
sub
pop
xor
or
push
jmp
mov
int
test
ins
enter
add
je
leave
ds
adc
dec
dec
pop
shr
cmp
mov
sub
jmp
in
push
sbb
cld
xchg
jmp
into
movs
cmp
and
adc
(bad)
sbb
and
push
lahf
(bad)
mov
jo
dec
sub
pusha
lea
push
fld
fnstsw
xchg
js
sub
xor
inc
fsub
jnp
ja
js
xchg
sahf
aaa
xor
xor
repz
mov
shl
cli
adc
int3
leave
out
call
sub
scas
in
cmp
push
inc
(bad)
cmp
addr16
ficom
dec
dec
jne
push
dec
mov
rol
xchg
pop
fwait
add
aam
jecxz
sub
loope
out
enter
les
jnp
jbe
out
gs
pop
xchg
push
mov
cs
ret
call
add
mov
sub
push
inc
jmp
lods
iret
cmp
mov
inc
inc
ret
inc
xlat
mov
sbb
fld
pop
cwde
(bad)
dec
or
icebp
test
gs
inc
and
ffreep
push
fdivr
sbb
cmp
jno
clc
adc
in
ror
repnz
dec
pop
in
sbb
cmc
std
fst
mov
push
ins
int
(bad)
cmc
push
cdq
in
ja
fild
(bad)
cmps
mov
sahf
lods
adc
cli
sbb
jnp
mov
sbb
mov
dec
fcom
ficomp
xchg
xor
jmp
in
sub
(bad)
sub
into
sbb
cmp
test
out
popa
shr
popf
mov
call
inc
(bad)
(bad)
jo
mov
add
push
loop
cs
adc
(bad)
cmp
mov
into
and
stos
shl
or
data16
clc
pop
xchg
adc
test
into
add
loopne
das
mov
jo
pop
jae
aaa
test
mov
fild
pop
inc
mov
add
jecxz
retf
add
bound
add
add
push
add
cmp
ficomp
push
mov
rcl
push
dec
sub
adc
pop
and
call
in
dec
or
(bad)
or
xchg
sbb
pop
mov
ins
ins
aam
dec
xchg
or
xchg
mov
and
or
scas
jge
pop
sub
sub
and
mov
or
pusha
scas
ins
mov
out
ins
in
jmp
aas
std
jge
fcomp
fadd
add
or
clc
or
cwde
lahf
xchg
sbb
imul
xor
mov
xchg
rol
dec
outs
mov
outs
xchg
and
lods
test
out
sbb
or
mov
(bad)
adc
mov
or
cmp
mov
sbb
inc
ret
jb
popa
mov
mov
mov
stos
jbe
fwait
mov
adc
jmp
lods
mov
call
inc
(bad)
outs
inc
pop
mov
jg
ss
stos
xchg
stc
xor
pushf
jge
cmp
or
cmp
popf
shr
mov
pop
mov
int3
xor
mov
(bad)
pop
add
mov
xchg
jno
inc
xchg
add
push
sbb
pop
imul
mov
and
ror
pop
inc
inc
popa
inc
sbb
jae
cmc
enter
fmul
or
xchg
jnp
cmp
mov
fbstp
scas
mov
xchg
mov
lea
pop
fcmovne
fist
psrad
and
and
idiv
pop
push
push
js
mov
jl
jl
sbb
aam
xor
(bad)
out
cmp
add
jle
adc
call
push
inc
es
fisubr
mov
sbb
data16
stos
es
sub
xor
in
pushf
(bad)
sub
sbb
xchg
stos
sub
test
cmp
xchg
imul
adc
jmp
mov
pop
xchg
loop
les
push
into
test
fidivr
dec
adc
cmp
lods
add
push
lods
add
imul
push
mov
mov
and
int3
and
pop
and
xchg
mov
mov
or
xchg
xchg
(bad)
cmc
jbe
scas
addr16
sub
cli
ret
jp
stos
jmp
aad
sbb
pusha
adc
data16
ret
cli
cmps
out
cmp
ja
or
sub
gs
mov
jno
outs
inc
mov
sahf
push
and
rol
mov
in
inc
jnp
push
inc
aad
sbb
daa
clc
pop
les
or
fsub
js
push
popa
cld
fdiv
inc
loope
(bad)
rcl
stc
sbb
sbb
js
(bad)
add
mov
call
hlt
scas
mov
jbe
(bad)
mov
jecxz
aam
xor
ss
repnz
jb
in
dec
loop
adc
inc
icebp
and
xor
and
and
stos
adc
xchg
les
fwait
mov
test
shl
jp
mov
jmp
fnstcw
pop
rcr
repz
mov
and
lea
es
mov
sbb
sar
push
stc
adc
and
addr16
pusha
ret
fcomp
cs
pop
sub
pop
movs
rcr
test
pop
aaa
and
xlat
sbb
imul
add
mov
sbb
es
dec
imul
aam
inc
cmp
jae
shr
push
mov
or
daa
ret
pop
or
in
cmp
mov
mul
in
stos
jb
aam
movs
push
clc
push
jmp
js
cmp
xchg
mov
clc
dec
push
and
pop
shl
lods
ror
mov
adc
mov
inc
push
into
js
dec
inc
les
out
xchg
bound
fisttp
push
sub
mov
cmps
xchg
dec
jo
mov
sar
rcl
sub
(bad)
jl
mov
inc
sbb
jb
in
mov
push
add
shr
inc
int
movs
pop
shr
mov
retf
cmp
adc
xor
fisub
xor
xchg
ds
inc
mov
mov
add
idiv
movs
add
sbb
call
mov
dec
pushw
push
retf
pop
pop
push
out
sbb
retf
push
mov
inc
fadd
lahf
inc
daa
in
test
inc
push
aaa
cld
icebp
sar
loopne
cmp
scas
xchg
sbb
push
xchg
cmc
sbb
adc
icebp
add
mov
mov
cmps
jae
jmp
dec
ficomp
mov
inc
popf
push
or
hlt
leave
push
fist
pushf
push
mov
jmp
(bad)
jo
ins
aaa
ins
in
movs
pop
dec
sub
pop
xor
or
mov
xchg
xchg
adc
xor
sahf
jns
popf
cmp
in
mov
fcomp
inc
es
inc
pop
sbb
(bad)
ja
arpl
inc
cmps
cmp
sahf
mov
sub
out
mov
pop
xchg
xor
into
or
(bad)
stc
xor
outs
pop
ds
push
ret
inc
and
push
cli
fidiv
outs
es
movs
push
es
sub
out
cdq
test
shl
jmp
aas
xchg
cmp
push
jecxz
cdq
loopne
sahf
mov
add
mov
sti
sub
enter
mov
xor
aad
and
mov
jno
pop
nop
or
jecxz
sub
sub
icebp
(bad)
pushf
mov
push
sub
lock
int
les
add
cmp
cmp
inc
test
ds
sbb
js
mov
in
pushf
movs
push
das
mov
add
call
das
lock
stc
icebp
lock
jmp
jbe
leave
and
jmp
cwde
pop
adc
lds
xor
push
or
test
imul
out
outs
into
pop
aam
shl
xor
leave
retf
lods
add
test
jmp
nop
jns
jl
mov
dec
lea
fucompp
xchg
xchg
jnp
add
jno
fsub
xor
jmp
pop
sub
mov
sub
mov
jae
sub
fsubr
pop
jo
mov
push
lods
test
add
pushf
jp
push
enter
ss
sub
into
adc
inc
mov
mov
cmp
inc
add
pop
mov
xlat
(bad)
jp
xchg
xchg
pop
mov
add
fcomp
aaa
sbb
or
aaa
or
fdiv
jae
fidiv
mov
mov
dec
sub
xchg
(bad)
cmp
sahf
push
mov
add
scas
and
rol
packsswb
sti
dec
imul
push
dec
or
in
mov
mov
pop
sti
out
or
or
cdq
xchg
mov
sahf
popf
jmp
out
lds
add
into
xchg
xor
movs
(bad)
xor
pop
dec
clc
push
shl
adc
pshufw
pop
mov
cdq
rcl
daa
sbb
sub
out
in
movs
push
xchg
add
cmp
enter
jne
outs
pusha
jae
mov
clc
fisubr
jecxz
xor
out
lock
addr16
mov
xor
enter
xor
stc
xor
mov
ds
call
imul
das
pinsrw
je
pop
xchg
adc
into
(bad)
scas
imul
stc
xor
repnz
cmps
jne
mov
adc
mov
in
add
pop
dec
movs
inc
jbe
pop
mov
push
mov
jns
cmp
sbb
out
xor
test
scas
hlt
je
pusha
data16
call
mov
mov
sub
mov
jmp
dec
sub
bound
mov
test
pop
xor
je
jmp
js
lods
sub
mov
push
aad
pushf
or
fdivr
fwait
xchg
test
cmp
and
(bad)
push
ins
cmps
jnp
lods
sbb
stc
pop
jl
xor
fnstsw
retf
push
imul
mov
mov
xchg
sub
ret
add
xchg
pop
stos
fs
or
jno
(bad)
pop
imul
sub
rcl
xor
mov
mov
mov
in
adc
retf
mov
gs
test
dec
fwait
or
push
(bad)
ss
leave
movs
or
xor
bound
cwde
push
mov
outs
pop
mov
ret
out
lods
pop
mov
pcmpgtd
mul
in
push
adc
xor
cwde
ja
add
jbe
data16
ds
ins
loopne
enter
pop
into
jne
(bad)
call
iret
data16
push
mov
int3
push
aaa
inc
cwde
rcl
(bad)
fiadd
xchg
mov
mov
mov
inc
jge
sahf
aas
stos
lods
add
dec
bound
jno
iret
mov
mov
cmc
and
call
je
or
js
push
xor
addr16
out
jno
aam
sub
loopne
xor
fcomp
sti
mov
loope
dec
push
xchg
or
sbb
or
dec
daa
in
outs
mov
xchg
arpl
fsub
mov
call
stc
mov
jnp
mov
xor
fild
aaa
sub
xor
xor
xor
jo
outs
xchg
dec
inc
jo
pusha
xchg
jb
fs
sub
xor
push
ds
and
fwait
into
mov
sahf
or
popf
stos
ja
cmp
cmps
inc
push
dec
mov
push
imul
test
dec
mov
inc
es
and
dec
fld
stos
es
in
rol
cmps
mov
mov
mov
sbb
xchg
scas
arpl
mov
and
and
outs
ja
mov
in
dec
retf
xor
fs
add
mov
retf
jecxz
mov
out
data16
nop
fwait
repz
aad
fs
cld
or
test
inc
imul
aaa
jno
cmp
pop
sub
cmp
push
ret
(bad)
pop
and
sbb
popf
inc
test
inc
stos
adc
out
sbb
clc
jno
mov
adc
sbb
into
retf
push
int
cmc
and
add
sub
sbb
pop
push
test
dec
lods
cwde
cmp
aad
es
aad
cli
shr
xchg
jo
cmp
cli
xor
xchg
out
fistp
lods
cmc
sti
mov
jl
movs
jle
xchg
mov
fimul
and
jo
xchg
adc
mov
inc
jae
inc
jmp
adc
movs
out
mov
mov
rcl
push
fwait
or
(bad)
test
scas
iret
sbb
in
push
das
rol
les
xchg
pop
aas
push
repnz
mov
jno
mov
cmp
add
xchg
push
fld1
dec
mov
mov
fistp
shl
das
pop
movs
mov
adc
xchg
scas
rcl
rcl
pop
popa
mov
mov
sbb
sub
in
dec
stos
add
xor
cmp
rcl
add
in
push
sub
movs
icebp
into
push
repz
jmp
mov
or
push
test
pop
jb
into
fmul
fisub
inc
and
sub
es
fcomp
sub
enter
or
jl
jecxz
fdiv
sub
cmp
xchg
mov
mov
jmp
push
push
cmp
(bad)
pushf
(bad)
cmp
jne
jmp
mov
int
push
push
pop
js
cmp
loopne
mov
out
bound
je
mov
rcl
dec
and
xor
and
stc
or
push
xchg
(bad)
adc
mov
add
pop
iret
sub
mov
leave
sar
mov
and
fdiv
cld
push
ret
aas
outs
mov
pop
or
cdq
adc
in
jl
mov
ins
ja
adc
ds
jmp
cmp
push
test
mov
scas
xor
aas
cwde
lar
pop
fs
dec
pop
jb
or
fisttp
pop
inc
push
and
push
into
in
ror
xchg
test
mov
(bad)
mov
(bad)
mov
sbb
arpl
xor
sbb
stos
call
dec
sub
jl
jmp
rol
xchg
ret
out
les
fidivr
or
cld
aaa
int
and
mov
cmp
inc
nop
mov
rcl
adc
mov
ins
ror
into
dec
dec
xor
lds
clc
mov
and
imul
aam
retf
jp
call
and
add
pop
jae
mov
adc
lds
mov
fisubr
ins
cli
rcl
ffree
xchg
pop
cmp
retf
add
mov
enter
fbld
jge
pop
stos
(bad)
pop
out
jnp
ja
sar
inc
mov
ins
jmp
push
outs
pop
jp
mov
aad
xchg
mov
and
test
enter
dec
add
sub
push
cmp
and
cmp
stos
dec
xor
cmp
dec
xor
or
call
push
push
mov
bound
mov
test
nop
into
mov
adc
mov
scas
fwait
call
je
push
hlt
shl
dec
in
out
sub
into
inc
test
jb
scas
js
stc
(bad)
add
jne
sahf
xchg
ss
pushf
mov
mov
mov
pop
add
jle
sbb
push
jecxz
pushf
scas
(bad)
push
and
fidiv
dec
nop
pop
movs
lods
jne
in
fs
ins
cmp
mov
xor
in
out
or
das
xor
lea
cli
adc
ds
movs
add
(bad)
jg
loopne
movs
in
inc
pop
jl
and
movs
xchg
pop
cmp
mov
jb
add
pop
xchg
push
adc
jmp
mov
jnp
mov
mov
test
jle
xchg
push
push
fidivr
repnz
shl
dec
call
mov
test
pop
ja
fldcw
cmps
xchg
jno
aaa
movs
je
imul
nop
imul
inc
fiadd
std
call
lds
mul
and
sub
xchg
jo
shl
repnz
inc
movs
mov
or
mov
in
adc
cwde
ins
inc
inc
pop
call
mov
fs
dec
sbb
pop
nop
loopne
shl
adc
push
and
pop
cmp
cwde
adc
daa
call
pop
fdiv
das
fdivr
popa
cmp
ss
add
jge
mov
ret
shr
(bad)
data16
cli
sar
loope
xadd
and
push
ins
mov
fcmovnu
xor
dec
fcomp
mov
gs
mov
jbe
add
jo
mov
pushw
(bad)
movaps
mov
scas
push
sbb
mov
aad
iret
addr16
and
xor
ret
test
aad
movs
mov
adc
into
jl
cmp
dec
std
cld
cmp
ficom
adc
imul
jle
jnp
ret
cmp
xchg
(bad)
rol
dec
test
add
adc
mov
sti
push
stc
enter
mov
inc
push
inc
add
jo
das
dec
sub
ins
adc
int
add
or
xor
push
popf
push
mov
xor
xchg
lods
stc
hlt
jmp
mov
out
and
jmp
mov
(bad)
push
pop
jmp
int
aas
leave
dec
lods
scas
push
cdq
jle
cs
mov
jmp
lock
cmp
(bad)
cld
mov
mov
xchg
dec
dec
mov
pop
pop
jp
repnz
test
stos
sbb
fstp
jbe
mov
(bad)
jnp
imul
push
inc
mov
mov
sbb
(bad)
or
push
lea
not
mov
shr
ins
xchg
fcomp
or
cdq
div
mov
lods
push
nop
rcl
loopne
or
lahf
push
xor
call
ret
or
sub
iret
sub
sub
xor
gs
sbb
jge
fiadd
and
idiv
and
retf
pop
je
stc
and
retf
mov
add
dec
and
cs
xchg
sub
popa
jne
pop
cmps
xchg
(bad)
scas
or
retf
jb
bound
xchg
rcr
ret
popa
test
fbstp
sub
dec
lods
(bad)
fisub
jg
xchg
jns
rol
cmp
mov
dec
ret
test
cmc
and
in
dec
mov
push
outs
test
or
cmp
inc
lock
call
cmps
add
add
jb
cmp
or
pmullw
cmp
mov
arpl
enter
push
push
adc
rcl
mov
cmp
mov
mov
mov
sti
sar
(bad)
jle
mov
sbb
inc
xchg
into
xchg
outs
push
push
pop
push
iret
mov
hlt
dec
out
stos
scas
aaa
stos
push
adc
cld
inc
mov
push
push
mov
out
cwde
rol
test
adc
push
inc
(bad)
retw
sbb
push
sub
xor
mov
scas
test
xlat
neg
sub
mov
in
test
shr
shr
and
sbb
pop
outs
fwait
and
mov
ins
ja
(bad)
sub
mov
push
js
test
xor
test
(bad)
xor
sub
bound
inc
sub
adc
mov
xchg
lds
ja
push
inc
movs
stos
je
xchg
cwde
movs
js
xlat
sub
cmp
add
mov
in
aaa
fst
cmp
lds
push
dec
imul
jo
dec
jmp
outs
sub
mov
jge
call
pop
add
dec
sub
mov
or
aad
hlt
aas
(bad)
jo
xchg
jl
sbb
cmp
push
jmp
dec
bound
sub
and
xor
fist
movs
xor
push
in
or
mov
cmovne
mov
adc
cwde
dec
mov
popa
stc
jmp
imul
inc
cs
cmps
xchg
punpckhdq
popf
inc
ins
dec
mov
or
mov
shl
fstp
mov
jecxz
adc
lods
mov
addr16
stc
ret
bound
mov
mov
cli
cdq
adc
ss
(bad)
dec
inc
sbb
loope
or
sar
jl
inc
push
dec
push
xor
scas
shl
cmp
test
enter
sahf
pop
fmul
xchg
jmp
(bad)
adc
add
in
aaa
cmp
ss
add
push
leave
icebp
push
sub
fiadd
or
mov
xchg
mov
(bad)
push
sub
jns
out
ret
daa
test
sub
push
sbb
pusha
xchg
dec
ret
inc
xor
imul
mov
into
mov
cmc
push
adc
movs
iret
inc
adc
add
sub
cmps
add
out
nop
mov
retf
dec
out
js
jl
xchg
inc
or
std
or
imul
lds
or
push
test
js
cdq
repnz
cmps
push
inc
jbe
xchg
cmp
in
sub
jbe
fdivp
sbb
cdq
mov
xchg
fidiv
dec
sbb
sub
xchg
in
arpl
add
add
ret
mov
je
mov
xchg
mov
xchg
(bad)
in
fistp
retf
enter
int
xor
lds
(bad)
popa
adc
scas
sbb
shl
pop
icebp
shl
adc
push
push
loopne
pusha
sbb
add
sbb
inc
pop
or
pop
xor
lods
mov
xchg
add
jo
mov
mov
add
loope
inc
inc
lock
jmp
call
and
or
repz
add
jl
int3
test
jmp
xchg
pop
add
scas
lahf
add
mov
dec
fs
cmp
dec
jmp
pop
repnz
cmp
xor
iret
rol
mov
ds
sbb
fwait
(bad)
iret
dec
iret
in
(bad)
std
xlat
jg
push
cmovle
or
lea
cmps
lahf
std
stc
push
xor
push
movs
lock
es
pop
mov
std
ds
add
sar
pop
jmp
adc
or
(bad)
and
xor
shl
call
pop
repnz
cmp
stc
cs
mov
in
xor
cmp
mov
fld
movs
das
sub
add
or
xchg
mov
xchg
sbb
mov
xchg
outs
add
and
mov
rcl
sub
push
push
cmp
out
clc
sbb
out
mov
xor
adc
push
mov
or
cs
out
stos
push
outs
adc
jmp
icebp
jnp
xchg
(bad)
enter
sahf
fistp
(bad)
scas
xchg
add
push
xchg
push
daa
mov
cs
shl
div
ror
xchg
mov
outs
in
sbb
jp
mov
or
mov
sub
push
adc
cli
jnp
mov
stc
fidivr
iret
cmp
data16
fld
push
cmc
lods
jmp
push
mov
and
dec
lea
jne
xchg
loope
jmp
xor
xchg
and
dec
xchg
push
and
ins
lds
jae
sub
pop
mov
mov
aaa
jo
cs
push
xor
inc
sub
es
mov
bnd
aaa
jnp
add
cmp
repz
hlt
fcmovb
leave
mov
cmp
push
clc
lods
push
inc
in
mov
sahf
(bad)
js
outs
mov
fisub
(bad)
mov
add
add
dec
xchg
ds
gs
push
xor
xor
dec
mov
mov
shr
dec
or
loope
je
inc
outs
repz
or
fimul
retf
xchg
dec
mov
xchg
mov
jmp
jno
push
repz
retf
mov
mov
div
xchg
jbe
xor
mov
push
jmp
or
sbb
mov
cdq
test
xor
rol
or
xchg
sbb
add
mov
mov
es
mov
cs
and
jmp
outs
cmp
les
sub
out
scas
push
and
icebp
cmp
push
lahf
les
push
cmp
shr
xchg
sbb
inc
pop
aaa
dec
mov
pop
stc
iret
xor
dec
sahf
xchg
fcomp
xchg
xchg
jmp
bound
int
aad
nop
je
xor
jnp
cmp
lock
icebp
retf
(bad)
in
xchg
mov
ins
add
lahf
xchg
cmp
add
pop
push
pop
out
and
jg
icebp
pop
retf
(bad)
aaa
jecxz
ud0
imul
mov
xor
call
les
and
sub
ins
sti
mov
cmp
test
out
test
jb
pop
xor
fwait
les
shl
cmp
jg
sbb
popa
or
mov
xchg
cmp
and
xchg
cmp
bound
dec
jno
adc
fisubr
leave
gs
jmp
xlat
call
pop
pop
(bad)
addr16
ins
sbb
js
pop
mov
dec
retf
test
mov
imul
xchg
shl
push
mov
lods
call
scas
fld
jbe
or
imul
and
aad
xchg
mov
adc
mov
stc
aas
aas
lds
inc
dec
popa
jno
xchg
mov
adc
mov
outs
sub
popa
repnz
sahf
xchg
aam
inc
scas
or
jnp
push
mov
jbe
jmp
push
mov
pop
jmp
xchg
push
cdq
push
and
mov
sub
sub
adc
add
sar
call
ja
push
sahf
mov
sbb
(bad)
fwait
outs
inc
xchg
pop
les
and
or
pusha
loop
jns
call
(bad)
push
jl
js
cld
mov
adc
mov
jbe
ja
adc
mov
fst
icebp
sar
es
aad
ds
fsub
test
pop
cmc
push
ja
test
into
call
mov
shl
ja
fstp
imul
xor
xor
mov
repz
test
popf
cwde
pop
inc
xchg
(bad)
sti
cmp
jnp
popf
cld
(bad)
fidivr
shl
jmp
pop
pop
sti
pop
ret
xchg
ret
cmp
jmp
sub
jae
ret
int3
adc
inc
jae
es
js
xor
inc
sub
mov
movs
dec
mov
push
retf
jmp
cmp
xchg
sub
and
cwde
adc
out
and
xchg
rcr
mov
cdq
je
ss
pushaw
pushf
les
sub
mov
fs
jbe
call
shl
push
fdiv
cmps
fsubr
les
inc
ja
xchg
push
add
and
xor
lea
xor
lea
mov
ins
cwde
cmp
sahf
cmp
into
sti
mov
lahf
pop
je
and
or
and
(bad)
(bad)
lods
sbb
xor
xchg
call
xor
aad
fdivr
add
iret
call
xor
cs
sub
(bad)
int3
cmp
cmps
xor
outs
inc
and
icebp
push
add
mov
imul
nop
inc
xchg
aad
and
cmps
test
cld
mov
mov
jae
adc
pop
in
push
cmp
inc
sub
aam
push
push
adc
stos
mov
cdq
int
popf
(bad)
(bad)
jo
popa
dec
push
enter
mov
test
cmps
test
add
push
lods
adc
call
jmp
fst
lds
add
inc
mov
mov
inc
or
inc
in
outs
and
loop
scas
jns
and
jne
ins
ret
ret
into
outs
fadd
mov
jb
imul
and
adc
ins
(bad)
xchg
adc
sub
shl
adc
cmp
jecxz
dec
(bad)
jmp
scas
jmp
or
mov
sahf
mov
mov
ja
rcl
inc
imul
sub
int3
stos
add
mov
sub
pop
shl
xchg
mov
push
cwde
(bad)
xor
dec
or
xor
imul
mov
sub
push
bound
xchg
xchg
retf
in
aas
xor
inc
or
and
push
lods
sub
movs
sbb
stc
outs
sbb
(bad)
stc
jo
fwait
scas
out
cmp
inc
dec
loope
xor
retf
inc
add
popa
pushf
xchg
ins
shl
test
push
shr
into
mov
fadd
sub
dec
sbb
push
jg
movs
jbe
test
xchg
jecxz
jge
push
jb
scas
adc
and
sub
stos
aas
and
dec
xchg
xor
int
fnsave
call
push
xor
cs
push
pop
aam
cmp
int3
scas
sbb
sub
imul
xchg
lock
jo
imul
or
sub
repnz
call
pop
jno
ins
or
xor
inc
hlt
out
add
in
jae
pop
sub
iret
add
mov
bnd
dec
cwde
rcr
je
pop
mov
and
lea
push
or
mov
stos
and
sar
pop
sbb
hlt
fidiv
lock
adc
jg
xchg
loopne
or
shl
adc
dec
ficom
cmp
fmul
ss
cmp
push
jno
dec
fwait
clc
std
jae
xchg
pop
cmp
xchg
lock
mov
push
add
jns
pop
cmp
sbb
sub
adc
into
mov
xchg
jb
xchg
(bad)
sbb
sbb
mov
and
sub
push
xchg
aam
dec
(bad)
adc
push
mov
adc
pop
clc
fsub
imul
dec
in
jbe
idiv
rcr
std
into
adc
jae
fadd
invd
and
pusha
push
and
stc
ss
add
loopne
dec
test
cmp
add
sbb
jle
mov
imul
xchg
les
push
ficomp
retf
jno
or
enter
cmps
in
sbb
inc
(bad)
adc
iret
daa
nop
cmc
rol
jg
mov
dec
and
fld
mov
gs
ins
fnsave
sti
call
into
mov
xchg
hlt
cdq
fld
es
mov
aaa
aad
or
mov
and
dec
cld
pop
add
or
fidivr
xchg
mov
push
add
xchg
pop
imul
into
daa
add
push
mov
dec
enter
adc
fcom
test
and
cdq
fwait
pop
jns
xlat
push
out
cmp
inc
xchg
add
int
mov
test
xchg
sbb
jl
add
outs
js
outs
outs
jno
shr
xchg
sub
add
shl
mov
pop
int
xor
push
out
inc
pop
pop
pop
push
nop
lahf
ja
sar
imul
in
xchg
xchg
iret
cld
cmp
aas
(bad)
ficomp
test
test
shr
ja
mov
je
imul
or
retf
pop
repz
jns
into
test
test
ss
pop
scas
jge
mov
outs
push
or
retf
mov
fdiv
or
xchg
and
retf
or
pop
xchg
rol
xchg
les
push
repnz
pop
or
fisub
jae
inc
call
inc
repz
into
cld
leave
mov
jno
ins
cmp
(bad)
dec
and
cmps
push
(bad)
in
inc
mov
sahf
and
js
pop
pop
aas
fcom
mov
arpl
adc
jno
clc
sbb
add
push
inc
daa
lods
xchg
mov
movs
dec
mov
gs
push
stos
lahf
lea
aam
sbb
and
dec
in
sbb
(bad)
xlat
in
call
adc
pop
(bad)
push
pop
inc
enter
mov
jg
xor
mov
(bad)
pcmpeqb
cmp
fwait
push
push
pop
pop
jo
jmp
mov
sub
test
adc
fwait
sbb
jg
stos
xchg
and
sub
jbe
scas
in
pop
call
inc
add
imul
sbb
mov
test
out
outs
lods
dec
xor
cmp
mov
retf
scas
ss
call
daa
in
cdq
(bad)
mov
adc
jne
(bad)
mov
inc
jge
(bad)
ja
add
xor
inc
jg
sar
add
call
xlat
lea
xchg
ins
int
xchg
aas
sbb
inc
pop
push
push
xor
enter
xchg
mov
aaa
test
push
and
leave
retf
or
push
inc
push
jecxz
nop
stos
and
xlat
sub
cs
jg
pop
mov
cmp
scas
mov
dec
loopne
jo
ds
bound
addr16
mov
pop
imul
mov
in
test
lds
mov
fwait
popa
push
sub
mov
add
push
fld
or
jge
or
inc
mov
out
(bad)
ss
lods
xchg
sub
or
add
sbb
xchg
inc
cmps
jmp
loopne
call
xchg
adc
ret
loopne
sub
shr
inc
and
adc
mov
jbe
lods
mov
loopne
cmp
jbe
xchg
popa
dec
inc
adc
gs
dec
es
out
lea
mov
aad
call
add
hlt
mov
aam
int
fiadd
or
mov
jmp
rol
scas
leave
adc
and
mov
lock
sub
mov
or
xor
xchg
rcr
and
lds
lea
dec
push
ret
aaa
cmp
dec
and
stc
movs
jb
xor
and
cmp
fdivrp
lods
mov
hlt
pop
cmp
rcl
jl
mov
sbb
popf
inc
mov
xchg
add
jb
mov
dec
push
ss
data16
movs
sbb
add
mov
sub
int
xchg
das
sbb
bound
loop
fsub
jg
loop
sub
mov
jmp
movs
repnz
iret
sahf
je
mov
dec
or
sbb
cwde
imul
cmp
aaa
aad
inc
div
cmp
xlat
jl
push
cmp
dec
mov
push
add
xchg
pop
stc
arpl
int
cmp
lods
js
mov
leave
xchg
dec
aad
into
add
cmps
in
(bad)
jae
ja
sub
movs
and
sbb
mov
and
mov
pop
xlat
addr16
pop
xor
fsub
rcr
mov
mov
shr
push
stc
and
pop
mov
jae
jo
cmps
xchg
js
mov
push
repnz
ds
mov
push
into
add
das
stos
popf
add
inc
mov
es
cdq
aas
scas
js
popf
fistp
xor
addr16
push
pusha
out
jae
stc
stos
xchg
nop
lock
test
xor
inc
adc
sbb
shr
mov
test
div
cmp
sbb
inc
add
sbb
mov
arpl
das
and
daa
fst
mov
push
pop
jae
jbe
xchg
in
jb
int3
pop
mov
ds
adc
jg
test
inc
jmp
lods
cld
test
jmp
adc
adc
sar
leave
add
jae
shl
pop
call
sbb
loopne
mov
sub
mov
push
pop
lods
stos
push
xor
dec
push
mov
outs
sub
movs
pop
ss
aad
jg
sub
(bad)
jb
jb
sbb
stc
dec
xchg
js
loope
(bad)
cli
nop
jge
xchg
fsub
sbb
push
sti
movs
loop
aad
mov
cdq
pop
test
sub
dec
inc
out
dec
sub
not
adc
sti
das
mov
sub
mov
sub
adc
cmp
mov
aad
mov
push
add
mov
imul
mov
xor
pop
sbb
xchg
js
mov
add
jmp
aam
outs
mov
dec
lahf
frstor
das
push
frstor
loop
scas
je
adc
jae
pop
push
ins
xor
dec
jae
ds
mov
call
xor
sti
stos
call
and
mov
jp
inc
mov
(bad)
hlt
adc
add
pop
xchg
lods
xchg
in
jo
xchg
xchg
xchg
mov
jg
jb
pop
pop
adc
(bad)
xchg
jnp
es
ss
pop
hlt
pop
push
xor
cmp
sbb
pushf
xor
inc
and
mov
jp
rcr
call
and
loopne
dec
sbb
sahf
sub
inc
js
fcmovnb
or
push
imul
fs
fs
dec
popf
imul
dec
mov
bound
dec
das
ret
mov
es
sbb
cs
jo
cmp
dec
rcl
lahf
pop
test
outs
adc
sbb
mov
mov
adc
add
xchg
stos
pop
ins
addr16
inc
(bad)
ds
popf
inc
pop
in
mov
jmp
mov
and
lods
xchg
or
leave
(bad)
in
pop
add
pop
ss
mov
or
mul
xchg
push
jp
mov
inc
cmp
pop
mov
pop
mov
(bad)
and
sti
or
inc
lahf
jmp
push
adc
xor
fcom
stos
mov
push
mov
cs
mov
mov
sub
outs
fwait
shl
inc
hlt
aaa
into
sar
lahf
mov
lods
inc
sub
fs
pop
mov
in
cs
adc
rcr
xchg
in
(bad)
gs
fistp
cmps
mov
daa
xor
addr16
inc
jbe
sub
sub
mov
jbe
test
jmp
out
adc
cmc
xchg
fwait
and
mov
fucomip
ficom
faddp
movs
test
adc
adc
dec
(bad)
cmp
jecxz
dec
adc
sbb
push
xor
inc
or
leave
ds
cdq
in
fisttp
sbb
(bad)
out
sar
push
cmp
mov
retf
mov
xchg
ja
adc
jl
jbe
push
jmp
fmul
mov
pop
stos
push
sbb
sbb
pop
jnp
and
test
loope
ins
(bad)
mov
xor
push
jno
adc
sub
mov
mov
jne
jp
ins
rcr
push
cmps
xchg
push
jb
aad
cwde
sbb
or
ss
dec
fs
add
fidiv
mov
enter
sti
out
jo
iret
hlt
rcr
pop
sbb
pop
xor
inc
mov
jge
cmp
jmp
push
dec
hlt
add
mov
repnz
rcr
into
mov
mov
test
int
push
popa
les
add
mov
or
xor
add
outs
fwait
aaa
movs
aas
mov
mov
xchg
dec
scas
cmc
in
mov
push
cmps
into
int3
ret
inc
and
adc
inc
sbb
fldcw
cmp
and
add
add
mov
(bad)
(bad)
stc
inc
shl
push
dec
cmp
into
jne
clc
dec
and
cli
ins
pop
in
mov
mov
(bad)
icebp
fldenv
adc
dec
jne
push
jne
sbb
stos
push
push
mov
jo
inc
inc
xor
push
inc
xchg
call
mov
mov
and
popf
push
dec
out
adc
sbb
(bad)
in
jmp
add
pop
dec
jmp
test
jnp
push
push
add
cs
lahf
in
stos
mov
idiv
mov
fcom
cld
mov
mov
mov
xchg
(bad)
adc
sahf
cmp
imul
jmp
and
xchg
out
xchg
xchg
arpl
sbb
popa
(bad)
pusha
and
shl
xchg
sbb
imul
jg
mov
pop
adc
test
xchg
sahf
push
(bad)
dec
or
dec
lods
pusha
pop
aaa
(bad)
je
loopne
xchg
mov
test
(bad)
fadd
daa
push
imul
outs
sub
jbe
inc
cmps
imul
sbb
push
data16
cs
mov
adc
fidiv
cmps
clc
(bad)
div
mov
push
xchg
add
rcl
inc
adc
fisttp
mov
or
dec
pop
lds
cmp
mov
dec
fnstcw
cwde
mov
call
mov
push
mov
xchg
push
aad
mov
or
inc
pop
mov
push
mov
cmc
cmp
xchg
mov
jecxz
into
push
add
mov
ss
iret
lods
jl
xor
sbb
pop
and
(bad)
push
add
ins
cmp
push
cmp
jge
push
jnp
lods
icebp
inc
ret
mov
shl
mov
ins
into
push
xor
jge
ins
sub
fsub
ror
or
add
sbb
cmp
fidivr
mov
mov
and
jmp
pop
cmp
mov
scas
add
in
pop
retf
scas
sub
xor
inc
lds
aaa
cmps
jmp
test
dec
dec
jmp
fcom
push
popa
jb
in
fsub
fld
add
gs
adc
cmp
call
inc
mov
cmps
add
cdq
sahf
icebp
les
sbb
jmp
inc
lds
fs
sar
sub
pop
das
jmp
inc
or
test
dec
sti
sbb
push
sbb
mov
sbb
outs
pop
mov
repz
or
arpl
shl
lahf
xchg
mov
rcr
int
xchg
or
sub
pop
push
ss
mov
ror
jo
rol
cmp
scas
cmp
pop
jecxz
imul
inc
cld
sub
dec
dec
sahf
ins
or
push
repnz
retf
test
int3
hlt
aad
sar
add
outs
out
inc
sub
or
add
push
push
jmp
inc
ja
loope
add
jmp
inc
add
or
mov
retf
xor
xchg
cmp
iret
imul
adc
xor
push
call
das
push
call
or
dec
sbb
dec
or
int
add
es
push
nop
mov
mov
jne
dec
xor
nop
outs
mov
dec
das
adc
movs
and
jl
mov
(bad)
lods
cmp
dec
out
(bad)
pop
sar
mov
stc
mov
or
inc
clc
mov
pop
mov
test
inc
push
dec
jne
aaa
icebp
sbb
dec
inc
pop
test
dec
lahf
sub
test
xor
movs
sub
test
mov
movs
repz
popa
int3
mov
rcl
ss
cmp
or
jge
lods
mov
call
sub
jg
push
int3
cs
cli
cmp
pop
dec
mul
pop
sub
cmp
add
ss
jmp
imul
test
sub
outs
imul
sbb
inc
dec
pop
jbe
inc
int
push
xchg
sub
push
add
(bad)
lds
mov
mov
mov
mov
loop
inc
mov
jmp
arpl
jb
push
out
into
aas
in
pusha
test
adc
sbb
cmps
push
jg
sahf
pop
inc
pop
jns
popf
pop
fstp
daa
pop
xchg
sti
mov
jle
cmc
in
inc
iret
cmps
and
inc
rcr
dec
mov
in
pusha
add
cmc
popf
dec
imul
in
add
cmp
mov
shl
jbe
sbb
hlt
xchg
scas
leave
pop
dec
pop
arpl
adc
cwde
xchg
jmp
adc
movs
or
xor
pop
sbb
stos
and
(bad)
lods
shl
or
je
jno
rol
mov
inc
xchg
adc
cmps
lds
fnstsw
or
call
pop
xlat
cmp
push
mov
jecxz
sbb
aas
(bad)
xor
cmp
ret
fcom
pop
lock
lahf
mov
test
imul
adc
dec
xchg
fstp
stos
in
jecxz
dec
loopne
iret
jecxz
cli
jne
int3
pushf
pop
ss
cwde
xchg
div
sub
scas
cs
das
aad
ret
pop
pusha
adc
(bad)
stc
das
fdiv
idiv
xlat
scas
and
popf
ficomp
mov
xlat
jge
sbb
sub
jg
pop
xchg
jmp
jmp
jle
(bad)
and
sub
push
movs
push
fdivrp
cli
leave
call
pushf
xor
xchg
mov
xchg
adc
mov
movs
nop
stc
aad
ins
ss
or
pop
dec
mov
mov
cmp
inc
sahf
and
and
pop
push
fimul
mov
jmp
and
dec
repnz
xchg
int
in
data16
and
enter
mov
loopne
frstor
pop
imul
sub
pusha
lea
sti
xor
xor
push
mov
dec
ret
inc
ficomp
mov
mov
adc
pop
in
fs
and
mov
inc
loopne
push
popa
neg
data16
rcr
enter
shl
mov
fild
push
lods
ror
aaa
fisubr
ins
xchg
cmp
jecxz
mov
repnz
fbstp
ret
(bad)
stos
imul
test
ror
(bad)
sbb
push
dec
imul
adc
enter
push
enter
and
fsubr
test
lods
adc
jecxz
pop
and
jp
fcom
dec
popf
push
xchg
bound
push
mov
add
movs
in
cmp
lods
dec
test
add
mov
sbb
jge
int
imul
jns
std
mov
lods
das
push
imul
fmul
jb
mov
aad
cmp
add
retf
mov
xchg
jbe
out
mov
pop
loop
hlt
sub
idiv
jno
xchg
mov
mov
cmp
jle
cmp
inc
arpl
or
shl
xchg
loop
inc
mov
push
cmp
sbb
pop
loopne
inc
xor
aam
cld
sub
outs
pop
dec
xchg
mov
xlat
sbb
jnp
(bad)
jg
xacquire
push
mov
xchg
or
adc
retf
(bad)
into
mov
inc
cmp
xchg
sbb
fnstenv
push
vpmacsdql
jnp
je
xchg
jmp
sbb
aad
fild
in
cmps
cwde
jb
(bad)
inc
pop
sbb
dec
mov
inc
mov
dec
mov
mov
and
pop
mov
mov
push
jb
lahf
mov
mov
shr
in
push
mov
pusha
movs
and
xor
gs
fnstsw
fdivr
xchg
inc
push
jmp
pop
cli
xchg
mov
loope
test
adc
pop
test
enter
pop
or
(bad)
adc
add
lea
mov
or
retf
(bad)
cdq
jle
out
aaa
scas
xchg
adc
ins
jecxz
or
hlt
rcr
imul
sbb
fmul
and
xor
push
(bad)
pop
idiv
ja
pushf
es
movs
rcl
push
inc
ror
mov
xlat
arpl
inc
sahf
push
adc
dec
mov
cs
cmps
bnd
inc
ret
sbb
in
stos
cmp
pop
dec
xchg
jmp
rol
push
push
pop
dec
cmp
and
mov
lahf
fsubr
and
cli
ret
xchg
jns
adc
fidivr
shr
and
nop
repz
cmp
dec
jno
and
neg
jo
sar
adc
inc
xlat
popf
push
arpl
jae
add
je
or
xor
int
inc
cdq
repz
add
fnstcw
dec
rol
loope
nop
movs
and
iret
(bad)
in
cmp
inc
adc
imul
stc
mov
nop
fucomp
leave
jg
cmps
adc
jle
cmp
mov
ret
test
pusha
push
iret
ss
imul
(bad)
sub
inc
(bad)
pop
into
push
cmp
pop
ds
cmp
jne
stos
(bad)
movs
and
xchg
jecxz
call
scas
push
xlat
and
dec
xor
sbb
bnd
xchg
fpatan
arpl
test
push
(bad)
stos
add
inc
test
and
adc
add
das
ret
bound
out
dec
jne
adc
push
int3
mov
sbb
repz
adc
dec
push
inc
dec
add
inc
fcomp
into
adc
test
mov
mov
add
clc
push
out
mov
jae
sbb
jmp
lahf
icebp
add
push
push
xchg
cmps
bound
cmp
push
cmps
or
mov
jp
inc
loope
mov
lods
dec
pop
inc
mov
test
or
push
adc
inc
push
loope
mov
(bad)
fwait
lea
pop
daa
mov
mov
adc
jge
movs
push
and
inc
ret
cli
stc
repnz
pusha
sbb
fs
xor
adc
mov
out
ja
cld
xchg
movs
nop
mov
pop
push
or
inc
arpl
xor
mov
jbe
out
ins
cmp
in
or
int
retf
lock
imul
jle
mov
jns
mov
scas
imul
fld
inc
leave
icebp
fisttp
pushf
leave
cmp
add
xchg
and
adc
imul
jne
mov
sbb
rol
sbb
shr
scas
loope
out
out
cmp
mov
ja
jnp
dec
adc
and
stc
sub
ja
sbb
xor
adc
test
push
cmp
popa
pop
jmp
outs
mov
jl
test
jnp
ja
call
repz
cmps
adc
sub
sub
ds
mov
std
fnsave
push
mov
mov
mul
xchg
into
or
into
out
push
jecxz
xor
popa
cmp
mov
dec
jne
sbb
imul
and
out
xchg
loop
pop
leave
(bad)
ins
repz
loop
inc
ds
add
xlat
cmps
cmp
(bad)
and
pop
add
fisttp
outs
push
jle
mov
add
pop
xchg
jmp
cmp
fstp
push
add
mov
movs
pop
in
sub
std
outs
addr16
ret
cmp
retf
push
xchg
test
shl
into
es
mov
movs
sbb
loope
cdq
jmp
cmp
xor
leave
sub
gs
mov
dec
aam
cld
or
inc
add
mov
push
xchg
retf
xlat
ret
dec
sahf
and
inc
add
shr
out
js
cwde
retf
mov
mov
mov
fdiv
sbb
or
mov
cwde
nop
stos
stos
jecxz
pusha
sbb
sub
leave
fs
pop
cwde
sbb
pop
jl
mov
mov
(bad)
xor
mov
out
pop
sbb
rol
es
fisub
add
push
stos
jne
lods
inc
pop
mov
pop
aad
pop
jo
scas
pop
mov
pop
aam
or
xlat
cmps
push
mov
dec
pop
(bad)
jle
call
xchg
adc
add
pop
fsubr
push
mov
mov
push
shl
and
xor
and
mov
inc
mov
and
(bad)
sti
xor
mov
ds
ins
ins
jns
pop
add
xor
push
(bad)
out
dec
mov
or
mov
adc
adc
fsubr
sub
in
adc
loope
hlt
movs
fdivr
or
push
cld
arpl
cld
add
and
adc
repnz
pop
pop
sahf
hlt
sbb
js
movs
xchg
sub
cs
xor
pop
shr
fimul
fisttp
jnp
mov
dec
scas
xor
mov
aad
cmp
mov
(bad)
mov
sub
adc
push
jne
cmp
(bad)
xchg
xchg
pop
hlt
or
push
adc
sbb
sbb
add
pop
fiadd
adc
and
inc
fild
or
jmp
int
lock
mov
fmulp
xor
mov
inc
xchg
retf
outs
lds
adc
iret
mov
(bad)
inc
add
retf
stc
pusha
xchg
daa
imul
jne
pop
dec
(bad)
mov
ins
add
mov
mov
adc
xchg
mov
jmp
push
mov
sub
dec
pop
mov
stos
adc
sbb
push
sub
loop
lods
addr16
or
out
loop
fdivr
pop
mov
sahf
scas
cwde
sub
mov
jmp
xor
add
xlat
mov
(bad)
popa
data16
addr16
push
stc
xchg
test
jp
push
mov
add
sbb
jge
mov
cdq
pop
dec
dec
icebp
lock
inc
mov
jle
retf
and
mov
jns
push
sub
fld
jecxz
add
pop
jecxz
imul
aaa
test
mov
xor
je
xchg
lea
data16
xchg
lods
push
pop
aad
nop
test
jne
jp
xor
jne
out
jge
cmps
jo
ja
adc
adc
and
push
xor
pop
in
lahf
adc
jmp
mov
bound
adc
sbb
retf
inc
ret
scas
fnstenv
sbb
push
outs
daa
and
outs
jbe
xchg
jno
daa
jns
int3
lea
sub
cmp
movs
cmp
in
inc
pop
or
inc
jp
loop
cmp
sub
out
push
push
in
jmp
add
cmp
repnz
cmp
test
(bad)
daa
js
mov
les
xchg
ja
add
inc
into
int
dec
inc
pop
addr16
xchg
es
mov
ror
push
jmp
xor
sti
jns
mov
jb
test
shl
hlt
cmps
sub
lods
sub
jbe
jg
xor
enter
sar
inc
xor
sub
push
js
fmul
ins
xlat
cwde
mov
adc
hlt
adc
mov
ret
sti
inc
das
scas
dec
cmps
stos
fst
mov
cmps
shl
mov
add
or
int3
je
ret
out
cmp
out
mov
test
xor
inc
cmp
or
xor
cmp
mov
fs
mov
shr
mov
call
sub
popf
lds
and
xchg
cdq
setbe
scas
cmc
cs
sbb
jmp
jle
mov
sahf
add
xchg
dec
mov
icebp
fdiv
mov
adc
sbb
jg
sub
fs
inc
inc
scas
test
or
shr
inc
jecxz
js
add
mov
mov
lods
inc
jl
out
bound
sbb
sbb
jp
mov
fst
sbb
sahf
fild
jmp
jmp
jl
jge
cwde
sti
mov
mov
lds
jb
add
adc
inc
cwde
mov
pop
ja
dec
or
jae
sub
jb
mov
div
push
(bad)
not
dec
int
stos
(bad)
in
dec
push
sub
jge
push
out
xchg
push
call
aam
call
jg
xor
jecxz
xchg
mov
outs
xor
cmp
std
xlat
jbe
dec
xor
xor
mov
push
lahf
mov
js
lods
jne
cs
sbb
mov
call
xlat
in
xlat
jmp
(bad)
mov
mov
cmc
mov
data16
pushf
xchg
fild
ja
sub
push
call
icebp
imul
imul
test
fild
out
shl
or
stos
int
cmp
mov
xchg
outs
and
ins
add
mov
lods
xchg
scas
mov
in
cld
ror
popf
shl
push
shl
fimul
fld
dec
ja
daa
aad
enter
repz
mov
push
mov
add
cmps
dec
inc
jl
pop
push
outs
jne
cdq
loopne
inc
call
jecxz
jo
fdivr
outs
push
dec
imul
mov
cs
cld
sti
inc
stos
push
lock
xchg
inc
push
fwait
adc
pop
in
pop
arpl
xchg
fwait
jo
mov
aas
sub
gs
shr
jecxz
loope
cmps
mov
xchg
add
xchg
(bad)
mov
daa
sub
xor
stos
aaa
pop
xchg
push
push
ins
jp
xor
sub
jle
lahf
loop
mov
stc
inc
dec
call
adc
push
add
scas
sbb
or
hlt
dec
hlt
cmp
pop
xchg
fst
and
xchg
jge
mov
nop
out
dec
enter
fldcw
jmp
sbb
fwait
add
icebp
mov
(bad)
push
jb
add
popa
fwait
ror
in
fwait
jmp
inc
cmp
mov
mov
sahf
xchg
sub
aad
push
fdiv
stos
xchg
stos
mov
nop
jb
adc
and
pusha
jecxz
xchg
rcl
and
stc
fiadd
pop
aas
xchg
or
test
push
arpl
xor
fcom
js
cwde
cmp
mov
sbb
pushf
pop
(bad)
push
test
retf
fs
jae
mov
retf
jns
add
cmp
(bad)
mov
and
loop
jo
sbb
scas
push
adc
inc
push
outs
cdq
iret
mov
push
add
fisub
push
in
lea
rcr
sub
in
pop
xor
xor
push
mov
(bad)
(bad)
push
mov
mov
xchg
xchg
inc
and
mov
(bad)
or
popf
mov
leave
xchg
(bad)
pop
push
call
sahf
push
retf
add
sbb
mov
out
jae
movs
xor
movs
js
retf
cdq
dec
mov
shl
fld
sahf
ins
ret
(bad)
cdq
or
cmc
pop
iret
and
sbb
adc
xchg
fwait
xchg
jae
cli
xchg
cld
xor
or
and
or
xchg
xlat
xchg
pop
fdivr
pop
sti
sub
ret
dec
adc
inc
inc
out
imul
stc
das
ficom
sbb
cmp
dec
das
scas
cmc
inc
mov
popf
retf
arpl
xor
xchg
sbb
mul
cmps
mov
jnp
mov
mov
sub
or
and
icebp
data16
mov
mov
pop
push
cmc
ficomp
dec
mov
test
dec
ja
push
pop
sar
lods
pop
int3
and
dec
mov
test
and
movs
mov
mov
out
fistp
jbe
in
dec
pop
and
sub
dec
fnstcw
aam
sub
xor
into
push
mov
push
cmp
pop
mov
test
mov
aam
int3
mov
pop
adc
inc
lods
into
add
retf
in
sub
jg
loopne
ds
pop
in
or
or
sub
(bad)
push
mov
into
mov
and
scas
and
or
xchg
jae
sub
push
pop
fdivr
sub
mov
lock
(bad)
enter
mov
adc
cmp
xchg
xchg
ficom
daa
mov
push
dec
dec
mov
lock
xor
loopne
push
or
jae
dec
(bad)
fwait
imul
aaa
sti
fs
and
enter
xchg
sbb
scas
aaa
cmp
in
fsubr
arpl
fsub
or
mov
pop
out
mov
(bad)
stos
clc
pop
jns
fild
jge
jbe
out
mov
inc
push
xchg
add
xlat
push
test
xchg
push
out
and
aaa
mov
xor
mov
inc
cmp
sub
loopne
mov
aaa
inc
cmp
ins
or
mov
bound
test
mov
and
icebp
fcmovnbe
ds
imul
fucom
or
inc
xor
xchg
cmp
in
(bad)
and
bnd
cmp
jge
jae
xor
push
js
inc
dec
cmps
test
push
bound
dec
mov
imul
xchg
bound
fisubr
cmp
adc
cmp
(bad)
jnp
sti
push
cmps
cs
fistp
loope
sbb
pop
inc
jp
icebp
inc
adc
mov
fwait
or
inc
cmps
inc
out
push
leave
fdivr
ja
dec
jno
leave
push
mov
xor
cmc
call
mov
mov
cmp
std
adc
xchg
jno
je
or
sbb
jp
push
nop
or
cmps
xor
jb
sub
ds
fmulp
imul
imul
mov
mov
in
adc
int
jmp
loope
fdivr
sbb
mov
cld
and
sahf
sbb
cmp
out
std
xor
popa
arpl
call
setnp
add
and
imul
cmps
xor
adc
lods
cmp
push
and
push
xchg
bound
(bad)
xchg
sbb
lods
jl
les
xor
test
popa
xor
loope
test
inc
push
(bad)
not
fs
dec
jns
add
js
mov
addr16
sahf
mov
add
xchg
shl
mov
pop
dec
inc
xlat
mov
jno
sub
mov
test
add
xchg
inc
sub
mov
sahf
ror
lds
in
out
mov
push
fcom
je
frstor
(bad)
sbb
pop
inc
dec
cmp
adc
test
mov
mov
int
aaa
lds
pop
(bad)
sbb
out
imul
and
fwait
cmps
popf
or
mov
std
aas
movs
mov
retf
test
ins
ins
cmp
mov
scas
cdq
outs
out
in
fnstcw
lea
or
ror
cld
cmp
pop
aad
jmp
mov
pop
or
enter
loopne
mov
popf
jmp
sbb
xor
fisttp
pop
jno
jnp
lds
mov
inc
retf
and
lahf
jae
mov
add
movs
imul
lock
and
dec
call
repz
fidivr
scas
jno
scas
push
in
sbb
cmp
push
push
and
int3
inc
cmp
push
push
popf
pop
stc
push
jnp
aaa
xchg
push
scas
in
test
daa
in
push
mov
mov
loopne
pop
push
jmp
jb
adc
cs
jns
or
ret
jnp
push
ds
leave
mov
cmp
adc
pop
lea
in
inc
sti
pusha
repnz
(bad)
or
nop
inc
(bad)
and
ret
in
call
into
sbb
hlt
outs
add
movs
dec
mov
shl
rcl
retf
fsubr
iret
cmp
inc
cs
jmp
inc
pop
dec
(bad)
std
mov
mov
jl
pop
loopne
pop
pop
dec
cli
pusha
(bad)
jmp
retf
inc
inc
xor
(bad)
jmp
lahf
mov
das
mov
shl
push
sbb
leave
sub
iret
push
xchg
repz
jl
push
inc
jge
daa
int3
pushf
mov
dec
cmp
cmps
add
jbe
fcmovbe
cmp
and
xchg
call
cmovbe
pop
fisub
fxch
jmp
fwait
loopne
aas
dec
loope
cmps
xor
dec
mov
sub
cs
mov
mov
pop
movs
movs
out
mov
cmp
pushf
jne
rcr
test
dec
mov
jno
cmp
adc
sub
pop
cmp
cwde
sub
idiv
stos
push
fiadd
loope
push
or
neg
fist
cld
sub
ss
into
cdq
jecxz
push
add
xor
sub
and
ret
xchg
pushf
fnsave
lds
jge
ds
ja
lods
xchg
push
adc
xor
dec
out
pop
test
jmp
pop
jg
popf
pop
iret
push
ins
daa
std
jae
shl
dec
dec
mov
not
fsubr
loope
clc
aam
xlat
and
sub
jmp
inc
sub
push
lods
nop
mov
or
stc
mov
ss
les
add
icebp
outs
fsub
dec
add
sbb
aaa
fs
pop
push
sti
adc
inc
inc
std
and
shr
sahf
xor
dec
int
frstor
and
or
jns
xor
gs
cdq
inc
out
xchg
stc
mov
rcl
into
xchg
jb
mov
ret
and
cmp
or
jmp
jl
cmp
dec
ins
ds
jmp
mov
xchg
pop
loop
and
push
(bad)
jmp
neg
adc
dec
lds
push
fmul
mov
retf
mov
push
loope
es
retf
das
xor
dec
adc
test
mov
rol
push
mov
push
faddp
call
inc
dec
pop
fnstsw
int3
aaa
or
mov
mov
adc
das
sahf
pusha
mov
dec
cdq
ds
test
mov
mov
mov
mov
mov
xor
or
loop
retf
and
sbb
mov
ret
push
xor
cmp
sub
or
push
das
jne
scas
leave
xor
sti
pop
fadd
(bad)
popa
cmp
ins
lock
jb
dec
ss
mov
or
int3
loopne
jb
sub
stos
and
mov
lods
pop
and
pop
dec
lds
push
xor
lahf
mov
imul
(bad)
push
and
ret
es
(bad)
adc
cmps
iret
je
add
mov
or
scas
jmp
into
out
ror
mov
adc
cmp
dec
or
hlt
std
push
pop
hlt
daa
dec
sar
arpl
adc
push
mov
sbb
or
call
jae
push
xlat
fs
xlat
imul
fdiv
int3
pusha
mov
(bad)
(bad)
std
jl
shr
nop
lods
dec
push
lahf
or
mov
adc
rcl
in
ss
ret
fcomip
jmp
jns
lods
lods
jne
mov
std
lds
stc
mov
int
adc
add
les
jo
adc
xchg
in
sbb
es
inc
cmp
jmp
mov
and
movs
sbb
(bad)
fisub
jle
ja
cld
pop
and
frstor
mov
sbb
or
cdq
pop
xlat
mov
outs
mov
out
jo
lds
test
test
pushf
adc
cmps
or
retf
mov
lea
les
jmp
push
icebp
fmul
mov
scas
scas
sub
jnp
scas
add
pop
fmul
fwait
sbb
sbb
jmp
sbb
mov
mov
jns
loop
(bad)
mov
add
sub
cmps
lea
xor
(bad)
stc
xor
xchg
xlat
fs
ja
out
xchg
pusha
dec
inc
xchg
inc
cmc
clc
iret
dec
mov
add
ds
xor
test
or
mov
pushf
dec
aas
mov
pop
(bad)
mov
dec
or
test
ss
aaa
pop
les
push
inc
adc
jb
sub
nop
push
jnp
cmps
push
pushf
xor
push
mov
pusha
call
sbb
lea
mov
cli
scas
mov
mov
jne
shl
test
stos
xchg
jnp
retf
and
(bad)
sbb
ss
and
mov
rol
pop
call
or
jle
shr
mov
hlt
dec
lods
cmp
loope
adc
fwait
cdq
test
and
enter
movs
add
add
xchg
aaa
aad
out
push
or
jns
and
xchg
or
lds
or
mov
repnz
xor
dec
jbe
push
in
(bad)
out
xchg
lods
ins
jae
or
int
mov
sti
mov
(bad)
xor
test
in
in
int
jle
int3
push
div
lods
cmp
pusha
jo
cmp
sub
out
arpl
push
hlt
rcr
xor
adc
mov
cmp
into
repnz
sub
and
cmps
in
or
lods
cmp
arpl
inc
jns
jbe
xlat
stos
lea
xchg
jp
jge
mov
ret
lods
xchg
mov
int3
dec
xchg
xor
adc
fsub
lock
hlt
and
mov
ja
pop
sbb
imul
fs
fwait
sub
movs
loopne
adc
lea
xchg
xchg
shr
ret
or
cli
pusha
fild
out
cmp
add
sbb
jecxz
bound
jmp
hlt
(bad)
loop
mov
push
dec
das
cmp
jmp
pop
fwait
push
dec
mov
inc
jae
dec
retf
imul
mov
push
cmp
or
jle
rep
jmp
sar
(bad)
cmp
ror
sub
mov
adc
jnp
test
pusha
sbb
jbe
sub
pop
sbb
outs
cli
pop
shr
pop
jecxz
and
nop
mov
sbb
aam
cmps
inc
popf
adc
cmp
daa
sbb
pop
push
bound
loop
lea
pusha
mov
iret
and
jns
hlt
outs
adc
(bad)
pop
jbe
xchg
mov
pop
sub
mov
into
xchg
and
and
inc
xchg
sub
jb
and
repnz
loopne
aam
rol
add
test
push
push
psubusw
nop
pushf
(bad)
cmp
ror
es
sub
out
gs
bswap
dec
and
or
mov
mov
sub
or
sar
adc
xchg
lods
and
lods
neg
inc
mov
ret
in
sub
xchg
iret
adc
out
and
int3
fimul
aam
xchg
mov
cld
mov
jns
mov
adc
adc
cmps
in
out
push
ror
pop
inc
daa
sbb
outs
cmp
(bad)
lahf
mov
adc
xchg
push
and
fld
push
shl
test
jno
fcomp
mov
jmp
add
cmps
sar
(bad)
dec
loope
and
cdq
xchg
fdiv
pop
push
xchg
ja
stc
movs
ins
pop
xor
pusha
pop
in
fidivr
pop
(bad)
jecxz
adc
das
ss
cmps
loop
inc
jecxz
push
into
out
hlt
and
push
aad
pop
popf
into
sub
add
repnz
jno
call
test
jbe
sahf
repnz
sbb
popf
imul
fimul
mov
aam
cmp
fisub
jge
cmp
loopne
sub
ds
fistp
movs
sbb
sub
jg
xchg
shr
pop
cmp
iret
xchg
xchg
mov
pop
sub
pop
dec
scas
or
(bad)
fs
mov
adc
and
add
lods
push
ret
inc
mov
sbb
imul
push
cdq
cmc
mov
push
aad
mov
jne
retf
mov
aam
rol
cmp
or
jb
dec
loope
or
ret
mov
lods
sbb
cmp
rep
or
mov
mov
push
sbb
std
movs
aam
dec
jmp
and
je
fsub
cld
sbb
icebp
jp
pop
push
lea
ror
mov
js
lods
outs
movs
aam
or
or
add
xchg
sahf
ret
cmp
and
sub
cmp
iret
dec
fs
adc
xlat
(bad)
fsub
pop
jae
cmc
xor
add
inc
ror
(bad)
int3
push
adc
mov
cmp
pop
mov
(bad)
jecxz
jnp
movs
imul
push
clc
movs
sub
mov
fild
jge
iret
ins
adc
cwde
fisub
jmp
add
cmp
int3
or
push
(bad)
pusha
call
scas
aam
push
or
or
or
push
stc
sbb
jmp
mov
addr16
add
cmp
pop
mov
fwait
mov
mov
adc
push
mov
dec
aam
mov
jae
fldenv
test
je
push
out
push
xchg
mov
jmp
mov
cs
imul
jg
sub
retf
push
fidiv
mov
or
inc
js
test
(bad)
cs
neg
mov
sub
popf
icebp
clc
inc
icebp
cli
pop
adc
inc
inc
add
scas
pop
cmps
lds
add
movs
cmp
push
out
int
je
cdq
pusha
rdtsc
ror
and
cs
fild
mov
loope
pusha
das
sub
xchg
loopne
add
xchg
mov
cdq
sahf
adc
mov
jmp
xor
fisttp
mov
adc
add
fsub
jno
sbb
stos
in
je
dec
cdq
add
loope
xchg
jb
cmp
mov
or
inc
pushf
call
call
mov
jno
push
xchg
adc
mov
sbb
push
dec
pop
add
jb
scas
pop
lods
jno
push
popa
mov
loopne
inc
(bad)
mov
adc
mov
out
dec
push
cmp
cmps
cmp
sub
cmps
dec
ret
or
sbb
ins
mov
push
fidiv
into
std
imul
hlt
mov
shl
ret
enter
lods
inc
retf
in
add
inc
mov
mov
cmp
push
cs
retf
pop
add
std
inc
stc
adc
jmp
ret
dec
sbb
xchg
xchg
and
arpl
leave
aas
push
dec
shr
mov
test
fiadd
sahf
fdiv
xchg
push
cmp
arpl
mov
sub
call
or
icebp
add
push
xchg
mov
(bad)
je
imul
push
jb
mov
pop
push
xchg
jno
pop
jecxz
es
inc
fisub
rol
ins
sub
xlat
mov
(bad)
mov
lods
xor
cs
je
fs
cmp
or
movs
in
into
in
addr16
call
inc
or
add
xchg
sub
leave
sbb
les
mov
sbb
je
call
cmps
sbb
pop
scas
jmp
sbb
and
jbe
fldcw
inc
ins
xor
fdivr
mov
mov
sahf
and
push
rcl
jno
mov
jmp
mov
ret
pop
sbb
mov
iret
adc
mov
cmp
iret
out
mov
add
(bad)
jne
jns
test
aas
out
jnp
jge
jecxz
jmp
adc
xlat
(bad)
push
xchg
xchg
inc
push
and
xor
pop
daa
xchg
inc
cli
cld
loope
xchg
outs
imul
in
mov
gs
push
xchg
adc
xor
jl
data16
enter
mov
cmps
push
jo
loopne
cmc
inc
fdivp
push
sbb
add
loop
test
bound
loope
xor
jmp
add
jp
movs
jecxz
or
cmp
cmps
loop
or
push
addr16
enter
fwait
les
pop
add
div
pusha
adc
pop
cld
jmp
fistp
mov
outs
inc
push
add
and
xchg
or
inc
in
pusha
js
and
fwait
pop
pusha
add
pushf
add
mov
add
lods
sub
xchg
pop
das
retf
sahf
das
das
jb
movs
cmps
fdivrp
(bad)
rcr
adc
or
xchg
jne
jg
(bad)
aas
call
jge
pop
cmp
jge
lods
pusha
xchg
sub
mov
out
cmp
std
jp
push
push
call
imul
popa
jne
lods
lahf
fs
or
mov
sahf
movs
test
addr16
outs
outs
inc
mov
add
ror
cmc
cwde
dec
xchg
in
push
jbe
mov
jbe
mov
cmc
daa
aad
in
sub
sar
pop
cmp
xor
xchg
stos
jge
cmp
cmp
xor
xor
rol
inc
mov
test
imul
xchg
ret
xor
adc
jmp
push
ret
jmp
aas
mov
into
and
es
sub
dec
mov
adc
or
jb
in
aas
sub
add
mov
div
sub
sub
sub
pop
sbb
out
jle
test
pop
sub
and
xchg
js
das
enter
push
cdq
xchg
jbe
fist
fidivr
leave
ins
ss
sbb
push
(bad)
call
sub
mov
mov
jmp
adc
sub
fs
sbb
mov
leave
jns
or
sbb
and
aam
adc
arpl
mov
hlt
fld
adc
adc
mov
data16
lock
pop
and
popf
(bad)
mov
push
inc
lahf
and
int3
outs
out
nop
or
(bad)
mov
stos
ret
pop
xchg
enter
loope
xchg
jno
in
push
pop
add
add
sbb
push
in
scas
cdq
adc
lods
adc
sar
add
ss
repnz
jns
inc
lock
stos
pop
iret
push
xor
add
or
out
xchg
fsubr
popa
outs
mov
outs
xchg
xor
or
lds
xor
rep
rcl
(bad)
mov
add
sub
ins
sub
fist
xor
adc
pop
jge
cmp
iret
sub
test
scas
mov
mov
call
daa
push
rol
push
lock
ins
add
push
or
imul
(bad)
inc
stos
loopne
jmp
hlt
mov
shl
ret
dec
aas
ret
pop
cmp
imul
std
xchg
icebp
jmp
inc
sub
popf
sbb
mov
push
sub
lods
mov
pop
and
and
inc
pop
xchg
add
imul
out
ins
sbb
xchg
mov
or
cli
pop
jmp
push
sub
mov
ins
mov
shr
in
inc
in
sub
mov
dec
sub
std
jle
adc
popf
repnz
in
pop
mov
fwait
out
sahf
or
and
inc
hlt
test
daa
jno
and
xchg
inc
out
imul
jle
jmp
test
std
mov
aad
or
inc
aad
pusha
cwde
adc
pop
adc
(bad)
(bad)
lds
stc
xor
cmp
rcl
adc
cmp
ss
je
jp
hlt
xchg
inc
rcr
sahf
push
fst
stos
lock
clc
push
aad
sbb
mov
add
xor
and
pop
dec
cli
(bad)
lods
mov
fs
das
aam
out
jg
xor
fs
push
push
stc
lods
adc
fimul
aad
inc
push
ins
pop
adc
stos
jmp
xchg
jo
jecxz
pop
int3
addr16
call
stos
cmps
fmul
cmp
jns
(bad)
cmps
repnz
mov
ror
das
inc
(bad)
data16
and
mov
pop
mov
pop
loop
cwde
clc
pop
movs
adc
dec
lds
inc
jae
push
data16
popa
retf
gs
sbb
add
or
(bad)
mov
sub
adc
clc
dec
cmp
loopne
or
arpl
arpl
adc
(bad)
mov
jb
adc
xchg
fmul
aas
jns
daa
and
dec
push
or
mov
mov
jmp
push
dec
or
lods
fld
cmp
hlt
pop
outs
pop
mov
mov
fbld
in
pop
(bad)
adc
jae
outs
imul
jb
dec
test
pop
gs
dec
jo
mov
mov
imul
ror
lock
mov
(bad)
jno
jl
sbb
jno
int
call
xchg
pop
mov
adc
sbb
cmp
cmps
jge
test
add
rcr
icebp
or
mov
aam
dec
cmps
or
jecxz
not
(bad)
cmc
inc
shl
mov
push
into
sti
xchg
pop
pushf
push
adc
fwait
test
loope
mov
push
mov
or
cli
inc
and
outs
sub
sub
bound
cmps
add
mov
mov
ret
rcr
jnp
jmp
jp
dec
xor
in
inc
cmp
out
loope
loop
add
std
mov
imul
push
xchg
test
push
jb
jecxz
or
ss
pop
jns
into
inc
in
gs
adc
leave
ret
xlat
in
sub
fs
(bad)
out
mov
inc
je
sub
out
add
inc
xlat
cmp
jecxz
enter
test
pop
push
movs
jle
add
xchg
int3
and
sahf
(bad)
cld
rcr
mov
test
inc
int3
or
iret
pop
in
pop
scas
cld
hlt
out
mov
jecxz
dec
shl
jg
push
lods
js
mov
lock
mov
imul
push
push
jge
or
push
ins
push
mov
mov
dec
inc
inc
inc
popf
call
dec
dec
mov
cli
xchg
mov
clc
inc
loopne
aad
pop
jmp
or
push
add
das
mov
cmps
jle
sub
xchg
data16
fwait
and
or
mov
cmp
ja
cmp
sbb
(bad)
popf
(bad)
fadd
or
xchg
xchg
cmps
fmul
jmp
shr
sbb
cmp
pusha
div
icebp
pop
clc
test
xchg
out
js
in
jmp
shr
sub
and
mov
stc
(bad)
cmp
stos
adc
aas
inc
xor
jge
cmp
aad
adc
xchg
mov
je
pop
retf
jle
cdq
xor
xchg
xlat
stos
and
and
or
add
mov
inc
push
stos
jl
mov
mov
lds
ret
push
push
mov
sar
jge
mov
dec
xlat
jbe
or
gs
std
psllq
(bad)
(bad)
ss
jns
cmp
mov
add
jno
mov
xchg
retf
fwait
test
mov
clc
dec
mov
es
sub
call
sti
mov
or
mov
jmp
push
push
xlat
jecxz
sub
ficomp
call
pop
int3
adc
(bad)
add
mov
jge
push
pop
mov
ins
mov
push
add
retf
mov
sar
dec
lods
sub
int
std
fldenv
(bad)
mov
sahf
scas
loope
pop
lods
sub
push
sub
aas
xchg
cdq
mov
ss
clc
mov
movs
jp
inc
das
dec
int
gs
popaw
xor
sbb
jg
adc
xor
out
je
adc
pop
mov
sub
mov
mov
test
add
stos
shr
xchg
pop
fisttp
or
mov
test
rcl
add
jns
pop
test
push
pop
sti
retf
mov
add
xchg
ins
mov
scas
sub
fs
push
pop
data16
pop
sub
rcl
mov
pop
rcr
jbe
imul
iret
mov
test
(bad)
jmp
aam
cwde
dec
aam
jmp
(bad)
arpl
xchg
sti
lods
stos
stos
imul
addr16
out
out
sbb
ja
sbb
ret
xchg
mov
cmp
rsqrtps
push
mov
in
inc
sub
fisttp
stc
mov
dec
add
sbb
popa
es
jp
jno
push
or
test
pop
bound
or
mov
or
arpl
dec
jmp
add
add
jp
fimul
(bad)
pushf
mov
xchg
dec
sub
fbstp
int
cs
int3
xchg
push
jmp
retf
setb
xchg
nop
popa
add
mov
gs
cmps
aaa
sahf
mov
push
sub
mov
mov
cmp
lea
pop
cli
jp
fs
mov
pop
xchg
js
scas
mov
popf
leave
inc
lahf
retf
push
and
pop
fldcw
dec
adc
jno
jno
int
call
pusha
and
cli
adc
jbe
mov
sub
imul
fst
loop
dec
mov
dec
mov
or
adc
mov
mov
shr
not
push
dec
add
add
retf
sub
rol
pushf
push
(bad)
mov
movs
pop
and
push
inc
ja
mov
cmc
out
push
dec
mov
add
ret
mov
cmp
cld
fsubr
pop
xchg
cmp
jno
scas
enter
add
xor
sub
mov
xor
mov
fcom
xlat
pop
push
stos
inc
pop
imul
mov
xchg
cmp
out
cmp
xchg
call
pop
cmp
in
mov
adc
inc
sub
pop
pop
mov
repnz
shl
xor
test
int
mov
jbe
(bad)
ficom
jo
repz
mov
out
inc
call
fucomp
jle
test
xor
out
das
or
inc
jle
mov
sbb
adc
xchg
sbb
sub
inc
jno
movs
mov
lods
mov
cmp
std
in
test
leave
jns
sbb
cmps
and
cvtdq2ps
fsubr
test
inc
sub
xor
fmul
es
lods
or
dec
dec
retf
jae
mov
jno
add
push
scas
push
repz
ret
popa
sbb
cli
push
int
call
scas
sub
cmp
jge
lahf
jmp
loop
int3
ins
in
ins
inc
and
sti
clc
mov
dec
jnp
push
sbb
push
and
mov
xchg
inc
and
xchg
xchg
adc
add
lea
jno
not
fucomi
adc
and
lds
sbb
push
rol
pop
mov
and
mov
std
inc
pop
scas
push
push
xchg
add
cmc
stos
sbb
adc
xor
add
jle
into
mov
inc
movs
jbe
pop
in
loope
push
(bad)
xchg
rcr
add
push
loopne
inc
movs
jmp
mov
mov
xchg
scas
mov
xlat
mov
(bad)
lods
and
push
inc
jbe
mov
pop
jno
dec
sub
es
jbe
jne
cmc
push
add
fcmovu
xor
mov
adc
pop
or
shl
sub
sbb
mov
aam
test
lods
mov
dec
jo
cmp
xchg
pushf
dec
dec
adc
cld
cmps
add
dec
jg
cmps
pop
jne
xchg
fadd
inc
imul
jns
dec
rol
aaa
test
rcl
xor
(bad)
aaa
sbb
push
in
fmul
add
xor
mov
ins
dec
clc
loop
popf
push
sbb
mov
jg
movs
or
jmp
pop
pushf
pop
pushf
(bad)
test
mov
mov
or
and
inc
out
jmp
sbb
push
ins
mov
scas
push
test
sub
pop
jecxz
inc
sub
les
xchg
xor
sar
test
mul
xchg
push
push
add
cmp
arpl
mov
cli
sub
test
and
sbb
mov
retf
mov
mov
jns
xlat
push
pusha
loop
mov
fiadd
aaa
mov
movs
mov
popa
xchg
or
aaa
push
stc
inc
xchg
mov
test
enter
xor
jg
xchg
inc
arpl
mov
mov
add
shl
clc
adc
cmp
outs
je
leave
aam
sbb
vmread
mov
loope
(bad)
fcmovne
loopne
xchg
push
and
or
imul
xchg
jl
lds
adc
add
dec
(bad)
xchg
imul
ins
adc
inc
nop
or
cmc
pop
or
test
into
das
jo
inc
call
std
mov
sbb
jne
push
sbb
jp
into
call
test
jmp
inc
out
pusha
mov
jno
sbb
or
pop
mov
icebp
pop
mov
(bad)
lods
adc
pop
pusha
inc
adc
out
add
xchg
jns
push
ds
mov
mov
(bad)
in
xchg
imul
fs
adc
call
inc
loopne
aam
jge
and
add
pop
push
dec
outs
mov
loopne
push
dec
bound
rcr
xchg
arpl
push
sti
push
mov
popa
xor
clc
jno
jecxz
xabort
mov
mov
or
sbb
mov
pop
cmp
inc
ja
pop
imul
stc
je
sub
mov
test
movs
in
daa
jo
inc
adc
outs
into
jl
push
and
adc
je
popf
cmp
inc
cmc
pop
movs
into
pop
mov
pop
jmp
test
scas
pop
adc
cmp
addr16
clc
ret
pop
daa
add
add
jnp
js
neg
sub
pop
and
in
movs
sbb
stos
lock
maskmovq
neg
in
xchg
cmp
repz
enter
inc
(bad)
sbb
icebp
bndldx
int
inc
jne
xor
out
sbb
scas
or
jnp
addr16
sti
xor
xor
jle
ins
out
test
faddp
shr
pop
mov
aas
sub
fimul
mov
jno
dec
adc
push
and
mov
add
inc
retf
(bad)
aas
in
sbb
sbb
into
fistp
loopne
mov
(bad)
xchg
or
aam
jnp
inc
(bad)
sub
dec
in
and
or
push
fild
push
or
fnstsw
stc
outs
inc
mov
push
aad
mov
popa
xchg
push
mov
cdq
ins
std
out
ins
retf
mov
lods
xchg
in
push
jb
(bad)
bound
mov
add
leave
and
pop
push
cli
sbb
nop
lods
outs
cmp
pop
sbb
arpl
jae
mov
mov
and
bound
cmps
adc
xchg
pop
mov
or
push
pop
sub
pop
arpl
ins
xlat
mov
rol
mov
adc
jbe
shl
clc
stos
div
jge
add
xchg
(bad)
rol
js
pop
jmp
ja
jle
addr16
scas
xchg
or
sub
loopne
sub
mov
(bad)
jp
inc
into
or
pop
leave
movd
ficom
sbb
stos
sti
pcmpgtd
or
mov
dec
fsubr
jmp
and
jno
cmp
jmp
sbb
ret
mov
mov
je
jl
xor
cwde
and
call
jmp
xlat
lods
xchg
fbld
inc
mov
in
fsub
repz
and
mov
test
out
rcl
out
test
cdq
addr16
in
and
mov
jg
adc
sub
jne
push
pop
es
ja
sbb
push
leave
dec
(bad)
(bad)
dec
or
pop
sub
iret
aad
inc
addr16
mov
cmp
fcom
jo
adc
jne
mov
cmps
mov
lods
xor
xchg
inc
les
sbb
mov
jmp
mul
sub
mov
int3
popa
fcmovne
cmp
xchg
cmp
push
outs
push
(bad)
cld
or
test
xor
enter
push
inc
adc
add
mov
sub
lods
(bad)
enter
sti
(bad)
in
cdq
in
mov
test
outs
int3
imul
pop
add
mov
inc
ja
sbb
add
gs
adc
out
sbb
bound
cld
or
sbb
adc
div
scas
cmp
repz
push
test
in
test
gs
pop
imul
stc
retf
fimul
cmps
cmp
push
cmc
shr
or
movs
sub
jp
in
cmp
push
(bad)
daa
pop
mov
out
sub
das
in
push
dec
leave
xchg
mov
mov
jle
adc
or
test
movs
(bad)
xchg
stos
add
add
call
mov
jl
push
or
ret
jge
xor
retf
in
sbb
dec
adc
aad
cdq
mov
xor
pop
cmps
push
test
push
sbb
in
repz
push
jg
cmc
add
push
test
sahf
je
sbb
adc
inc
inc
mov
and
dec
les
push
test
inc
mov
(bad)
aad
jmp
adc
sub
sbb
sbb
mov
stc
pop
scas
jae
fs
daa
les
rol
movs
mov
ret
rcr
ss
pop
cs
and
pusha
dec
mov
jnp
fsub
mov
xor
fadd
sar
dec
rol
shl
in
repz
push
(bad)
sub
or
mov
clc
and
add
sbb
adc
mov
mov
popa
test
shr
imul
jp
xor
cmp
out
aaa
loop
outs
mov
movs
shr
pushf
jno
rol
cmp
push
aam
loope
sbb
xchg
jb
out
repz
stos
pop
sbb
mov
sti
mov
iret
mov
loop
sub
sub
int3
push
xchg
mov
inc
call
jl
ficomp
icebp
xor
xchg
sub
jmp
aam
fcom
aaa
call
mov
pop
mov
jnp
enter
inc
pushf
mov
retf
push
and
dec
das
sub
pushf
je
pop
pop
xlat
pushf
dec
(bad)
repnz
loopne
movs
mov
inc
mov
sbb
mov
sub
inc
(bad)
mov
sti
cmp
add
mov
pop
dec
dec
dec
jnp
xchg
cwde
sti
out
inc
std
mov
mov
mov
xchg
mov
mov
lods
mov
sub
jp
jns
aaa
adc
push
cmp
dec
mov
je
push
loop
shl
pop
ret
add
xchg
xchg
dec
mov
int3
ss
movs
fadd
push
in
xchg
pop
adc
push
jl
pop
(bad)
cld
push
jmp
dec
push
jl
inc
sub
xor
aad
les
ins
sub
retf
push
inc
push
inc
pop
pop
sbb
lds
aad
lock
ins
cmc
xor
in
cmp
xchg
cld
mov
ret
jne
dec
sub
add
dec
xchg
cmp
pop
fisub
dec
push
repnz
in
sar
repnz
aad
mov
dec
xor
mov
scas
push
aad
push
in
ss
lods
mov
mul
and
(bad)
push
pop
inc
addr16
sub
sahf
mov
js
aaa
iret
push
mov
mov
push
popf
sub
stos
sbb
lahf
sub
movs
add
loopne
or
retf
aam
mov
sub
and
xchg
mov
jo
cmps
lods
or
push
lea
and
in
or
mov
dec
sbb
push
fmul
dec
outs
nop
shr
inc
mov
shr
push
in
out
jae
pop
test
jae
jg
push
shr
shl
adc
pop
sub
es
test
stc
and
dec
xlat
push
loopne
jbe
jp
jmp
pop
popa
pop
pop
jp
int3
fisub
(bad)
pop
adc
daa
shl
adc
ret
std
pop
pop
ret
mov
push
add
das
in
jnp
and
mov
popa
sysexit
sub
call
test
imul
fst
mov
pop
or
nop
fcom
mov
and
dec
mov
sub
xchg
ss
je
sub
or
leave
jnp
cmc
fwait
sbb
jp
and
retf
call
fsub
dec
pop
bound
xchg
jnp
je
aam
scas
push
out
(bad)
xchg
repnz
cld
std
movzx
push
pop
fld
mov
adc
jo
xchg
and
jle
inc
sub
pusha
adc
pop
push
cmps
hlt
mov
sub
and
lds
sti
sub
jmp
imul
(bad)
xchg
(bad)
test
iret
jb
jo
pushf
imul
int3
or
or
aas
push
(bad)
loope
retf
and
(bad)
stos
push
mov
into
das
mov
fnstcw
stc
addr16
ins
leave
lock
xchg
add
jge
in
xor
add
jecxz
or
sub
test
mov
or
jmp
push
cmps
dec
mov
je
cli
sub
xchg
(bad)
in
scas
xor
jbe
mov
cdq
sbb
stos
pushf
movs
sbb
adc
loop
xor
dec
mov
lods
fidiv
ja
repnz
inc
(bad)
sub
ja
add
int
lahf
fsub
xchg
fdivr
ret
push
fucomp
popa
jbe
cmovne
repnz
xor
xchg
dec
fwait
xchg
and
pop
mov
fiadd
or
or
retf
xor
xchg
aas
inc
popf
jbe
sub
stc
xor
(bad)
sbb
sbb
ror
mov
lds
cld
xchg
mov
and
push
mov
mov
or
mov
enter
call
jbe
loope
movs
lods
sub
sub
popa
in
fidivr
push
pop
aad
jle
addr16
dec
call
sub
adc
cmps
jne
sub
inc
sbb
scas
js
push
das
xchg
pop
stos
xchg
or
and
sub
sub
xchg
(bad)
adc
xchg
bound
mov
scas
pop
xchg
aas
inc
aam
push
sub
call
dec
push
not
mov
cld
adc
xchg
addr16
and
icebp
mov
outs
fs
div
arpl
jb
and
outs
and
cs
jge
add
out
push
jae
in
call
clc
sahf
dec
test
sub
pop
sub
shr
cmc
pop
je
dec
adc
inc
adc
cmp
ds
lds
pop
mov
push
or
xchg
shl
push
imul
mov
(bad)
test
pushf
imul
sbb
in
mov
sub
inc
in
jb
fiadd
sbb
shl
push
addr16
adc
out
or
test
jno
or
ins
cmps
jg
mov
fst
mov
inc
mov
ins
jp
jbe
gs
jae
jge
repz
daa
icebp
pop
(bad)
in
cmps
repz
pop
test
je
mov
(bad)
adc
mov
sbb
and
mov
addr16
sbb
xchg
in
or
pop
ins
sahf
cmp
inc
retf
cmp
mov
jmp
fs
outs
retf
xchg
loopne
add
cmp
pushf
es
mul
pop
imul
stos
xchg
in
mov
test
pop
fidiv
xchg
call
mov
loope
sub
xor
(bad)
adc
jmp
add
imul
cmp
ins
jo
push
js
inc
imul
jmp
xor
inc
ins
in
adc
cld
mov
mov
sub
in
xor
lods
enter
bound
push
ins
sub
cmc
test
out
in
fbld
shl
push
cmp
fld1
fidiv
push
lods
in
pop
pop
push
or
xchg
fld
mov
or
fcom
fnsave
lock
gs
repz
mov
jns
jmp
sub
shl
jnp
or
clc
push
jns
cwde
scas
mov
and
mov
rcr
hlt
sub
or
mov
adc
sbb
fisub
mov
push
inc
data16
xor
dec
inc
cdq
lods
in
idiv
mov
xchg
pop
xchg
dec
in
add
stc
mov
ret
xchg
push
xor
mov
cmps
pop
push
ins
mov
clc
test
adc
xor
ss
adc
fdivr
test
leave
adc
test
inc
mov
dec
mov
ins
je
aad
add
pop
and
mov
in
(bad)
mov
add
int
iret
mov
arpl
dec
push
mov
lahf
paddd
adc
and
rcl
popf
cli
adc
inc
stos
mov
xchg
mov
sbb
push
mov
ror
and
pop
or
popa
jmp
add
sub
sub
xor
push
and
ins
mov
mov
or
addr16
add
mov
dec
iret
pop
inc
mov
mov
(bad)
mov
sbb
sub
mov
xchg
scas
jp
fstp
sbb
fst
jmp
je
adc
cmps
je
dec
cmps
aad
xor
fwait
inc
xchg
cmp
out
xchg
xchg
xor
and
cmps
sub
loope
jo
sbb
mov
fucomip
(bad)
jg
test
pusha
xor
mov
add
pop
(bad)
xor
into
push
out
test
mov
inc
psrad
fcom
mov
bound
pop
mov
psadbw
scas
and
sub
add
push
push
and
and
mov
lahf
mov
js
test
jmp
sub
jle
enter
jg
fmul
mov
sbb
add
pop
aas
int
xchg
inc
xchg
div
xchg
(bad)
adc
mov
in
xchg
mov
lock
call
idiv
sub
aad
aam
ja
ins
out
xchg
mov
jle
adc
fs
(bad)
push
cwde
sub
jle
xor
jge
jge
cmps
scas
ror
stos
es
leave
jmp
cdq
mov
rcl
ja
pusha
sar
iret
jmp
test
dec
enter
into
shr
fwait
ds
mov
pop
mov
inc
mov
lock
jbe
std
sahf
loopne
or
jl
ins
cdq
and
mov
ins
int
sbb
pop
and
add
loop
ffreep
scas
or
dec
xchg
fdivr
iret
jle
sbb
nop
ret
sahf
pusha
(bad)
dec
adc
add
inc
(bad)
mov
mov
inc
pop
sbb
nop
imul
lds
xchg
adc
(bad)
repnz
mov
jae
xor
shl
test
and
jle
xor
bound
or
lock
mov
dec
cld
cli
addr16
fst
jbe
push
adc
add
adc
in
sub
pop
or
jbe
add
inc
shr
mov
jno
fistp
inc
lods
repz
push
xchg
xchg
call
push
mov
dec
outs
inc
cmp
test
or
scas
js
stos
aam
mov
xor
jecxz
out
fst
rcr
cwde
xchg
jns
push
movs
movs
jge
(bad)
sbb
push
nop
mov
cmps
sbb
mov
imul
add
cmp
js
jle
stos
cmp
call
jb
jne
lahf
mov
stos
or
imul
inc
cs
mov
ret
outs
mov
mov
retf
scas
pop
mov
jne
cmp
mov
lods
or
sbb
sbb
pop
inc
loope
test
mov
ret
push
int
pop
sub
ss
cmp
dec
sti
push
xor
jecxz
clc
push
mov
pusha
cmp
fld
dec
inc
ins
(bad)
xchg
fst
int
sub
xor
and
xor
inc
out
xor
or
imul
adc
cmp
push
pop
dec
jo
movs
sub
fnstcw
xchg
adc
pop
cmp
add
mov
inc
arpl
dec
xchg
ja
mov
test
mov
jg
cmp
pop
outs
mov
mov
cli
push
outs
jns
jns
dec
add
or
mov
mov
shl
xor
aaa
add
lods
or
js
xlat
push
jb
fiadd
push
add
jbe
shr
out
out
in
cmp
pop
push
cmp
loope
out
mov
iret
push
inc
mov
or
jl
pop
dec
jmp
adc
std
sbb
pushf
das
xor
mov
xor
sahf
fcomp
cmp
jecxz
sbb
mov
outs
lods
cmps
fdiv
lods
pop
sbb
jno
xor
int3
mov
sbb
sbb
and
loopne
push
aad
cmp
iret
mov
lahf
mov
mov
inc
push
lock
cmp
lods
cmps
in
mov
xchg
fimul
lea
daa
in
lods
test
fidiv
push
aam
xlat
xchg
xor
movs
xor
stos
dec
mov
inc
push
repz
xlat
inc
add
and
mov
hlt
jp
into
enter
cmp
in
ja
fnstcw
mov
mov
jb
push
cld
inc
in
push
aam
adc
add
and
pop
imul
push
sbb
scas
xor
(bad)
lds
test
pop
ss
dec
out
mov
cmps
lods
int
push
adc
out
rol
sub
int
or
cs
mov
ja
mov
and
aam
int
aaa
sbb
js
inc
jg
stos
or
jb
mov
sub
pop
imul
push
es
add
add
scas
jl
inc
outs
or
or
pop
and
mov
mov
fnstsw
sbb
pop
add
pop
or
jo
adc
ret
xor
aas
push
test
das
lock
(bad)
adc
int3
scas
nop
data16
loop
xchg
mov
mov
imul
xchg
push
sbb
cmp
mov
cmps
sub
xchg
test
mov
xchg
pop
jecxz
test
sbb
jb
add
in
mov
xor
into
dec
jb
xchg
loope
mov
adc
sbb
inc
(bad)
and
dec
adc
out
pop
int3
push
cmp
(bad)
sub
sub
jg
(bad)
lea
pop
sti
call
imul
xchg
or
and
cmp
outs
test
mov
stc
leave
js
addr16
push
in
int
jne
adc
adc
add
push
(bad)
mov
sbb
popa
fstp
imul
movs
push
leave
fild
sbb
and
cmp
inc
jno
mul
mov
fisub
mov
mov
mov
ficom
aam
push
ficom
sub
test
out
mov
jns
fdivrp
jp
adc
xor
lods
add
xor
mov
test
pop
call
add
mov
fst
xor
shl
int3
sbb
clc
inc
out
icebp
bound
pop
mov
sbb
cmp
gs
mov
xor
pop
sub
mov
sub
dec
bnd
test
dec
sub
or
mov
aam
pushf
sti
cmps
mov
(bad)
mov
cmp
mov
mov
jb
in
jne
pop
stc
les
jl
push
mov
lods
mov
dec
xchg
aam
popf
js
(bad)
aam
(bad)
jmp
push
outs
jl
loopne
sub
pop
ss
sbb
adc
mov
test
jae
cmp
sub
out
sub
repz
sbb
je
(bad)
ins
test
fisttp
sbb
xor
and
es
hlt
sub
jne
retf
imul
out
cwde
pop
xchg
addr16
jne
mov
add
mov
pop
imul
pop
nop
cmp
jae
shl
pusha
sub
dec
rcr
jnp
adc
ficomp
and
sbb
retf
call
push
sbb
test
ins
xchg
leave
mov
ins
aad
mov
dec
cwde
shl
xchg
xor
or
test
xchg
cld
pop
bound
mov
stc
jnp
dec
sub
xor
mov
jp
test
cwde
out
pop
push
(bad)
(bad)
mov
push
shl
sub
clc
les
sbb
cmp
jecxz
inc
cld
xchg
jg
(bad)
call
sub
arpl
jno
cld
pop
movs
inc
push
xchg
popf
mov
dec
jo
gs
jl
movs
xor
sbb
push
jae
not
call
and
add
mov
dec
pop
in
sub
aaa
dec
push
add
ins
mov
rcl
not
out
ret
lods
mov
xor
xchg
pop
arpl
stc
jbe
out
(bad)
and
push
add
outs
and
sub
movs
call
adc
or
repnz
jmp
mov
mov
gs
and
imul
ss
mov
fild
icebp
jg
(bad)
icebp
ds
outs
clc
mov
xchg
pop
push
cmp
push
(bad)
in
loopne
sub
add
xchg
dec
cs
movs
ret
(bad)
jg
or
imul
fstp
aaa
and
and
mov
dec
and
jp
pop
or
data16
and
sbb
xor
mov
cwde
es
mov
cmp
jb
sub
sub
arpl
outs
sahf
(bad)
fld
jns
adc
mov
inc
movs
sbb
adc
scas
mov
adc
xlat
and
and
lahf
loope
arpl
test
sub
es
in
inc
pop
daa
jle
in
loop
test
inc
dec
int
out
mov
inc
pop
and
aam
stc
inc
mov
repnz
in
mov
mov
mov
jge
(bad)
dec
iret
mov
in
mov
dec
in
add
dec
and
xchg
jg
(bad)
sub
inc
ds
rol
add
leave
adc
stos
stc
fidivr
push
pop
or
or
cmp
push
pop
fwait
(bad)
icebp
in
or
cld
add
dec
test
cmp
jg
in
xor
pop
ja
inc
call
jne
repnz
add
ins
psllw
dec
rcl
pop
cmp
xchg
push
cmp
enter
pushf
test
cmp
mov
cmc
mov
cdq
hlt
xor
jnp
mov
dec
mov
jne
push
gs
adc
fs
dec
xor
sbb
sbb
pop
fistp
data16
enter
sub
pop
faddp
pop
xchg
xor
xchg
sub
or
in
lock
inc
xor
bound
lods
sub
cmp
mov
dec
fisubr
sbb
push
call
mov
retf
mov
retf
inc
std
mov
jmp
mov
mov
mov
fiadd
ret
dec
out
pop
mov
data16
dec
sub
ds
loop
xchg
iret
and
or
mov
scas
inc
dec
xor
pop
lea
enter
call
inc
loope
leave
sar
cmp
retf
mov
mov
sahf
jl
pop
(bad)
pop
cmps
outs
xor
or
and
movs
into
cdq
mov
push
cs
sti
adc
cld
sub
mov
xor
sbb
fdivr
je
jp
mov
fimul
inc
repz
xor
xor
jmp
sbb
dec
cmp
fldenv
test
cli
nop
pusha
xchg
(bad)
dec
adc
enter
cmp
cli
jne
shr
sbb
sti
or
add
and
repnz
jne
gs
inc
jmp
sbb
sahf
bswap
mov
jmp
jle
xchg
stos
aas
mov
jp
xor
xchg
dec
adc
sub
retf
scas
ins
adc
cld
pop
mov
push
fld
adc
fwait
jns
xor
push
push
(bad)
bound
xlat
jecxz
test
mov
(bad)
in
xor
inc
jp
pop
sub
mov
inc
mov
imul
popf
pop
lea
push
jmp
and
add
jge
dec
inc
sar
push
sub
test
popf
sub
inc
(bad)
xor
test
push
dec
push
jecxz
mov
fsubr
sub
add
std
xchg
mov
cmc
out
pop
int3
jecxz
lock
sub
or
sbb
test
mov
sbb
lods
mov
mov
jmp
xchg
mov
jp
push
dec
(bad)
call
xchg
jbe
mov
mov
xor
or
xchg
adc
lods
popf
call
inc
aad
sbb
xchg
xchg
mov
sar
and
push
mov
sbb
test
jne
mov
ins
ds
and
ror
movs
lock
inc
jle
xlat
push
daa
push
xor
sub
jmp
mov
mov
arpl
out
push
xchg
(bad)
mov
xchg
mov
out
xchg
xchg
inc
inc
mov
add
xor
cli
shr
jg
add
iret
fmul
mov
inc
mov
out
mov
sbb
jecxz
sub
mov
mov
int
mov
mov
jmp
sbb
in
mov
dec
dec
jb
ret
jl
jmp
sti
mov
dec
test
inc
add
jo
loop
push
popf
push
adc
sbb
(bad)
shr
mov
fisttp
cmp
cmps
outs
inc
popa
out
(bad)
in
xchg
(bad)
repz
xor
cs
xor
jno
cld
mov
add
push
push
movs
aam
retf
cdq
rcl
mov
or
(bad)
in
stos
call
je
fistp
push
sub
dec
and
xor
ins
sbb
push
aad
fwait
sub
xchg
(bad)
jne
enter
sbb
mov
lahf
xor
ror
stos
sub
loope
add
dec
mov
add
dec
pop
jns
inc
je
lea
xchg
loope
jns
add
xchg
dec
xchg
into
pop
mov
pop
sahf
xor
jae
es
pop
(bad)
(bad)
jmp
adc
adc
jne
mov
adc
test
xchg
popf
pop
es
out
inc
cmps
fldcw
sub
mov
movs
mov
jl
pop
xor
cmp
inc
iret
aam
or
shr
and
int3
dec
mov
addr16
pop
(bad)
lock
cmp
push
cmps
add
mov
sbb
cmp
push
out
imul
aaa
sti
lods
pushf
xchg
stc
or
fs
sbb
daa
(bad)
int
ss
xor
jmp
mov
sahf
aam
sti
push
repz
(bad)
into
sub
clc
dec
jb
jne
aad
inc
movs
daa
xchg
mov
pop
dec
out
mov
into
sub
enter
lea
dec
and
fstp
adc
add
test
inc
(bad)
fmul
mov
enter
outs
sbb
mov
sub
out
sti
popa
clc
and
out
cmc
mov
mov
sbb
popf
inc
mov
push
push
sub
inc
ret
out
ret
retf
xor
push
ret
into
test
xor
int3
inc
mov
imul
cli
and
mov
fild
mov
addr16
or
into
jmp
pop
adc
aas
pusha
inc
push
aad
mov
and
fdivr
dec
in
out
aaa
mov
sub
xor
call
inc
gs
(bad)
sbb
mov
xlat
sub
je
sbb
inc
lahf
div
aaa
inc
push
pop
outs
das
test
es
repz
jne
mov
sub
add
(bad)
outs
enter
shr
mov
repnz
(bad)
add
lock
push
dec
xchg
cmp
imul
dec
(bad)
inc
mov
jl
sub
add
pop
or
jecxz
sbb
add
out
imul
(bad)
mov
sbb
and
sbb
push
sbb
jae
movs
xor
lahf
sub
add
retf
jne
add
outs
imul
mov
addr16
sub
outs
xor
sbb
fcomp
or
and
pop
pop
jae
xchg
cld
sub
push
xor
loopne
sbb
jmp
test
imul
push
mov
cmp
cmp
cmp
in
add
mov
fwait
pop
jns
jbe
std
into
andnpd
scas
fidivr
arpl
into
push
jno
jle
inc
sbb
fimul
mov
das
hlt
test
jmp
gs
in
shr
jge
lahf
imul
out
push
jp
cmc
push
repz
sbb
imul
pop
fld
pusha
mov
mov
or
sbb
test
sbb
(bad)
hlt
inc
mov
jmp
out
fidiv
das
push
xor
sbb
inc
mov
xchg
push
or
fnstcw
or
aas
mov
push
js
lahf
imul
mov
imul
inc
cld
retf
test
in
sbb
inc
test
scas
mov
aaa
adc
pop
sub
cmp
jmp
mov
fdiv
sub
jmp
dec
push
xchg
add
pop
fcomp
(bad)
mov
das
(bad)
push
stos
mov
call
or
nop
or
pop
aas
cmc
or
jecxz
pop
clc
add
jmp
popa
or
mov
mov
movs
pushf
dec
add
sbb
sub
xor
mov
int
xchg
lock
ja
test
push
pop
dec
mov
push
sbb
test
bound
pop
pop
jmp
repz
ins
ret
sbb
cmps
mov
push
stos
sbb
push
popf
fsub
leave
shl
inc
scas
fimul
call
push
sar
mul
js
xor
xchg
scas
pop
mov
jecxz
(bad)
retf
xor
dec
lods
sbb
mov
mov
sti
test
mov
sub
gs
daa
mov
in
push
push
pop
test
xlat
or
cs
add
mov
or
idiv
mov
dec
add
jno
movs
into
push
add
out
ins
retf
jmp
mov
test
je
jl
jecxz
loope
dec
jl
sbb
aam
push
pop
bound
xchg
push
jnp
xchg
gs
sub
pop
fdivr
push
lods
add
push
ds
mov
std
sbb
and
add
mov
pop
(bad)
and
pushf
push
or
enter
mov
mov
retf
into
imul
and
sar
jne
jle
add
lea
xchg
push
jb
mov
ds
cmc
imul
int3
out
adc
push
adc
aas
jge
push
xor
cmp
adc
cmp
cmp
xlat
jne
cmp
dec
sbb
dec
sub
push
les
inc
cmovno
inc
popf
aam
xchg
xchg
rol
sub
inc
pushf
mov
xor
leave
enter
test
dec
xor
and
aam
arpl
lods
scas
ret
scas
mov
and
leave
es
call
fistp
imul
mov
push
jmp
das
xor
add
(bad)
sbb
pop
dec
xchg
fldenv
mov
push
and
jo
ror
test
rol
mov
in
inc
outs
(bad)
lods
and
daa
(bad)
movs
xchg
mov
or
sahf
inc
stos
adc
cmp
call
clc
cs
cmps
push
mov
popf
icebp
pop
xchg
sub
shl
arpl
and
mov
jg
stc
xor
dec
xchg
fwait
movs
mov
adc
out
stos
cmps
(bad)
and
jo
cmp
jmp
inc
inc
icebp
jl
push
ret
dec
push
pop
mov
dec
xchg
sti
daa
adc
retf
or
in
sbb
adc
ret
inc
or
scas
xchg
(bad)
out
div
pop
mov
retf
loopne
mov
adc
xor
sub
or
push
or
xchg
jge
or
(bad)
xchg
mov
lods
fimul
(bad)
mov
retf
daa
push
ret
inc
sub
add
ret
pop
xchg
bound
push
xchg
in
in
out
and
dec
call
adc
dec
out
mov
xchg
cmp
sbb
icebp
mov
mov
pop
test
outs
jl
int3
cmp
dec
bswap
xchg
push
cdq
push
xchg
or
(bad)
mov
std
(bad)
iret
cmp
ret
adc
push
mov
sti
dec
mov
fstp
jno
and
cmp
mov
aam
pop
fdivr
sbb
jae
jb
mov
mov
cmp
call
adc
fimul
stos
cmp
inc
mov
daa
(bad)
iret
cld
mov
jecxz
in
xchg
gs
lea
mov
mov
mov
cwde
xlat
(bad)
(bad)
pushf
inc
lahf
mov
fs
mov
cmc
cli
sbb
inc
clc
push
aaa
loope
sbb
imul
fsubr
dec
jnp
xchg
arpl
push
inc
mov
sub
iret
jmp
loopne
scas
(bad)
mov
add
(bad)
retf
neg
mov
dec
test
push
outs
sar
inc
stos
mov
iret
arpl
mov
int
icebp
mov
or
jo
push
test
and
fstp
mov
push
inc
pop
outs
retf
mov
mov
aaa
bnd
inc
jno
in
sub
rcl
lods
pop
cmc
retf
mov
and
mov
clc
fst
dec
cmp
push
fcom
cwde
push
add
loopne
inc
daa
jae
or
and
mov
enter
or
pop
dec
js
ds
inc
div
fs
aad
in
mov
test
sar
pop
fistp
icebp
in
sub
sahf
lock
imul
xor
mov
mov
bound
sub
sti
jo
scas
int3
sub
push
(bad)
je
mov
adc
xor
adc
push
ja
add
add
in
xchg
sub
pushf
mov
mov
outs
ss
hlt
mov
jne
stos
idiv
shr
sub
xchg
aaa
out
js
pop
xchg
rol
pop
aad
lahf
outs
test
and
ss
mov
mov
fstp
push
jne
and
mov
dec
ret
xor
rcl
sbb
jle
les
fs
test
mov
fs
iret
sti
cmp
lea
mov
mov
mov
iret
mov
ret
jle
cmps
cmp
test
ds
pop
push
dec
adc
dec
add
cmp
pushf
aas
fisubr
shl
outs
sbb
fcomip
in
and
daa
mov
and
pop
sar
inc
fsubr
cmp
jmp
inc
(bad)
mov
int
adc
sahf
movs
push
sbb
retf
or
sub
xor
xor
lock
stc
cmp
xchg
rcr
dec
out
loope
mov
sub
lods
pop
movs
xor
imul
inc
nop
sbb
out
dec
inc
jno
jb
cmp
stos
xor
retf
xor
scas
popa
mov
arpl
sub
ret
imul
xchg
(bad)
icebp
adc
dec
lds
xlat
aas
xchg
out
xor
adc
xchg
mov
hlt
aas
test
cli
cld
icebp
rcr
fisubr
test
jne
mov
stos
and
sar
aaa
jge
and
mov
dec
sahf
xchg
imul
and
jle
xor
push
mov
xlat
hlt
iret
add
cli
xor
call
fwait
sub
mov
xchg
retf
loop
add
push
dec
add
in
sub
jae
xor
outs
mov
(bad)
nop
pop
xchg
movs
imul
inc
bswap
push
stc
sbb
dec
loopne
dec
adc
rol
out
call
xor
aas
fisub
push
sti
jae
pop
mov
fs
xlat
in
mov
in
popa
fild
repnz
pop
mov
(bad)
add
imul
clc
sar
jg
enter
pusha
xor
dec
movaps
add
mov
nop
mov
add
cmp
movs
jle
mov
pop
(bad)
fwait
mov
icebp
sub
daa
mov
cmps
into
stc
bound
mov
in
icebp
cwde
js
test
mov
cmps
hlt
cmps
(bad)
rol
push
jmp
push
jb
pop
ror
mov
add
or
es
xlat
shl
stos
pop
xchg
pop
retf
cmp
mov
mov
mov
sbb
xchg
in
(bad)
lea
shr
xlat
pop
(bad)
(bad)
nop
(bad)
pusha
sbb
loope
(bad)
sbb
or
enter
hlt
sbb
jecxz
sub
aad
add
mov
inc
xor
cmp
or
shr
cmps
int
push
xor
sbb
and
es
jne
xchg
cwde
or
cmp
sbb
cli
pop
or
rcr
mov
outs
addr16
ja
cmp
cmp
jge
outs
mov
add
pop
(bad)
xchg
inc
ret
jg
and
aam
scas
and
(bad)
mov
lock
loopne
inc
sbb
call
das
mov
xchg
push
sbb
adc
pop
mov
ins
adc
(bad)
pop
mov
scas
into
cwde
mov
out
push
ins
cmc
shl
mov
int3
repz
jno
std
fistp
outs
mov
xabort
(bad)
int3
inc
mov
leave
fistp
sahf
mov
ficomp
or
aas
fstp
mov
mov
cmp
push
icebp
cmp
stos
mov
(bad)
cs
xchg
jmp
dec
cmp
repnz
sbb
aaa
js
mov
lods
dec
xchg
mov
ror
push
js
push
sbb
repz
sbb
into
lods
sub
movs
(bad)
jb
mov
mov
mov
mov
lods
xchg
fwait
mov
mov
mov
push
popf
and
inc
outs
sub
dec
jle
cmp
mov
mov
pop
pop
dec
sub
cmp
cmp
adc
mov
xchg
add
popa
inc
(bad)
mov
sbb
xor
into
sbb
xchg
sub
(bad)
leave
mov
and
push
dec
or
or
stos
pop
(bad)
mov
stos
mov
call
adc
push
jge
sub
mov
das
mov
xchg
xchg
push
(bad)
inc
adc
mov
ins
stos
ret
mov
cmp
xchg
fdivp
retf
je
ds
xor
push
in
in
(bad)
pop
inc
dec
pushf
or
or
ja
out
mov
jmp
sbb
leave
cdq
push
xchg
cwde
inc
shr
pop
lds
sbb
js
adc
ret
sub
jp
ins
jmp
test
push
mov
enter
jns
xchg
ds
jbe
or
adc
cmp
rcl
movs
adc
aad
add
jle
sbb
stos
test
jmp
pop
push
imul
dec
adc
leave
rcr
mov
je
pop
push
mov
mov
or
lea
fist
add
(bad)
into
stos
add
adc
js
cmp
fidivr
xor
cdq
movs
mov
or
add
cmp
adc
mov
jns
fwait
sub
adc
daa
and
dec
fcmovb
cmp
movs
cmp
es
popa
sbb
ja
jecxz
fdiv
gs
pop
jnp
pop
ins
push
xchg
ffree
jmp
fistp
fdivr
xor
pop
adc
push
sbb
mov
adc
and
test
mov
sub
mov
sbb
jecxz
into
cwde
adc
retf
or
sub
rcl
inc
cmps
add
jbe
dec
sbb
add
and
mov
sub
je
and
sti
sub
mov
shr
sahf
lds
inc
jmp
aad
movs
mov
(bad)
jne
or
nop
sbb
out
add
inc
iret
retf
fs
outs
(bad)
mov
or
push
cdq
and
shl
in
push
and
xchg
add
iret
out
daa
enter
jne
ror
sub
not
(bad)
call
enter
xor
arpl
lods
mov
dec
mov
push
pop
inc
mov
loop
iret
iret
mov
mov
jno
add
dec
imul
sub
push
mov
push
jecxz
pop
and
dec
inc
push
daa
pushf
jecxz
add
pushf
test
mov
xchg
pxor
dec
rcr
pushf
pop
or
imul
repz
das
loop
sar
das
mov
retf
dec
jae
mov
call
xlat
in
fwait
xor
mov
jne
xor
cs
jg
push
nop
xor
push
hlt
in
sub
rcr
push
rol
push
sti
stc
add
or
jecxz
outs
bound
xor
(bad)
sahf
out
dec
and
pop
or
xchg
out
and
retf
pop
sub
mov
jmp
loopne
int
adc
xchg
movs
xchg
sbb
(bad)
jmp
mov
and
iret
call
stos
out
clc
in
mov
test
in
call
icebp
mov
in
daa
stos
xchg
fcomi
adc
xchg
les
cmps
jns
cwde
sbb
cmps
and
push
retf
retf
sbb
adc
inc
add
pop
jo
adc
inc
nop
(bad)
cmp
hlt
adc
or
jmp
jecxz
mov
mov
dec
leave
push
add
test
ja
sbb
inc
outs
pop
(bad)
mov
cmp
rol
mov
(bad)
(bad)
mov
out
or
push
mov
hlt
js
inc
or
adc
fnsave
push
js
pop
dec
or
test
cmps
mov
and
stc
dec
mov
icebp
outs
mov
sub
xor
scas
pop
adc
add
fistp
arpl
mov
lock
aam
daa
cld
and
jne
or
xchg
jl
mov
(bad)
dec
shr
mov
and
jnp
(bad)
sbb
mov
or
imul
outs
push
xor
and
hlt
mov
outs
fdiv
call
inc
f2xm1
mov
sub
xchg
jecxz
mov
repnz
cli
in
push
cmp
fistp
jge
out
push
fsub
push
fs
sbb
mov
sbb
jecxz
push
dec
or
cmp
jmp
ins
inc
jle
xchg
dec
daa
ja
mov
cmps
cmp
pop
test
lods
sub
inc
(bad)
jno
push
mov
stc
xlat
xor
lock
cs
xor
fdiv
rcr
sahf
xchg
cmp
sub
aad
push
sub
mov
mov
test
mov
pop
cmps
in
sbb
in
inc
ret
mov
mov
movs
or
ds
mov
repnz
outs
xor
ins
mov
cs
pop
sahf
mov
fwait
or
aad
loop
dec
loopne
pop
lods
xchg
mov
arpl
inc
mov
popfw
mov
mov
mov
pusha
stos
xchg
or
movs
aad
(bad)
jge
mov
add
cmp
bound
add
jle
retf
mov
inc
ror
or
add
dec
or
mov
dec
cmps
add
dec
inc
and
sub
dec
sahf
into
sub
mov
lods
add
test
and
scas
xchg
lahf
jg
pop
push
push
mov
pop
aas
in
pop
adc
mov
(bad)
adc
jge
icebp
int3
jp
push
retf
into
sar
cmp
pop
stos
sbb
push
adc
or
and
mov
movs
push
call
xchg
adc
test
mov
in
outs
sti
jb
pop
push
not
jl
pop
out
and
push
mov
or
shr
jmp
xchg
mov
add
jae
or
mov
(bad)
out
xchg
and
push
dec
ins
add
test
in
retf
dec
call
not
adc
rcl
fisubr
dec
outs
jnp
cmp
(bad)
sti
(bad)
or
ror
shr
(bad)
jo
dec
mov
mov
adc
sar
pop
outs
sahf
sar
imul
pop
lahf
cmp
xor
pop
pop
call
pop
popf
fimul
push
(bad)
ins
outs
mov
out
mov
scas
loope
jp
loop
xchg
xor
add
iret
mov
xor
cmc
addr16
hlt
jnp
loopne
adc
fistp
mov
fwait
lods
jl
lods
xchg
cmp
fmul
sub
xchg
iret
xchg
test
adc
fnstcw
int
xchg
test
pushf
and
test
cmp
aas
mov
ss
mov
in
adc
mov
push
pop
sub
dec
mov
adc
push
pop
dec
cmc
test
sar
fwait
test
fwait
mov
or
mov
lahf
and
xchg
fisttp
shr
jnp
aas
test
imul
add
xchg
jno
into
fwait
dec
lea
retf
cmp
je
mov
pusha
and
ds
scas
push
push
add
jecxz
jp
out
pusha
sbb
sbb
adc
dec
icebp
out
jge
jmp
in
out
jl
loop
aaa
mov
sar
add
xchg
daa
inc
stos
and
pop
iret
(bad)
(bad)
fmul
cwde
pop
xchg
ss
je
enter
mov
jb
out
popf
mov
neg
dec
ja
data16
outs
dec
div
imul
setp
les
repz
or
sbb
and
pop
hlt
or
cwde
adc
and
aad
fs
inc
shl
call
call
clc
aaa
repz
xlat
out
jecxz
push
(bad)
fcmovne
fadd
jecxz
pop
pop
es
cdq
mov
mov
iret
xchg
xchg
and
ja
push
sub
pop
retf
xchg
pusha
push
mov
push
mov
ror
imul
sar
into
adc
fist
push
lea
je
nop
or
les
popa
jnp
movs
mul
dec
fnsave
push
xor
xchg
sub
hlt
mov
adc
mov
test
scas
(bad)
dec
pop
leave
shl
jle
push
test
arpl
mov
jle
inc
js
push
loopne
push
call
gs
push
jecxz
sahf
mov
loope
push
sub
xlat
sahf
ret
loopne
push
pop
or
(bad)
pop
mov
push
xchg
jb
mov
mov
test
out
dec
xor
dec
push
popf
ds
jnp
imul
clc
cmp
in
arpl
mov
lods
lods
cmp
add
add
mov
fsub
aaa
sti
ss
out
mov
in
push
mov
bound
cdq
xor
sub
out
gs
nop
in
icebp
ss
xchg
xchg
mov
rol
push
sub
scas
or
lods
mov
loope
ret
xchg
add
xor
idiv
aaa
in
loop
push
jmp
bound
retf
jmp
adc
mov
scas
mov
pop
adc
cmp
mov
jmp
xor
cmp
lock
ja
jecxz
addr16
jae
push
int3
lock
rol
loop
inc
cli
add
mov
mov
test
sbb
sti
or
sub
stos
daa
(bad)
hlt
inc
daa
inc
cli
mov
xor
pop
int3
fcmovbe
lods
sahf
movs
cld
sar
or
pusha
adc
and
jns
out
out
outs
xor
jmp
test
lock
inc
mov
inc
imul
stos
rep
div
push
pop
push
sti
pop
add
int
add
in
add
dec
sbb
add
or
data16
add
retf
hlt
push
dec
sbb
sub
pushf
test
shl
movs
mov
sahf
shr
imul
enter
xchg
(bad)
xchg
inc
jbe
push
add
jmp
enter
cdq
popa
mov
add
sub
inc
rcl
pop
data16
xor
pop
fist
imul
add
sti
stc
push
mov
cmps
cs
call
dec
jp
call
mov
movs
shl
mov
push
fmul
sbb
ins
mov
ficom
pop
cmp
adc
inc
(bad)
mov
outs
nop
xchg
dec
mov
pop
cmp
idiv
pop
xor
ret
jo
rep
(bad)
call
jno
movs
pushf
int3
jle
int
(bad)
xor
push
jecxz
data16
outs
mov
mov
mov
mov
aas
pop
push
mov
jl
pop
mov
push
jns
sub
(bad)
jbe
lods
mov
sbb
dec
enter
sub
(bad)
call
xchg
xchg
jg
inc
in
dec
jb
frstor
mov
in
jg
popf
push
or
jo
jo
jno
mov
push
cmp
dec
pop
mov
inc
xor
imul
jg
dec
add
outs
int3
repz
call
jle
mov
stc
leave
pusha
enter
push
xchg
push
dec
xor
mov
outs
clc
push
(bad)
fist
out
cld
xchg
aad
hlt
jno
je
in
and
inc
xor
data16
ins
adc
xor
iret
(bad)
and
cs
xor
out
out
imul
inc
or
or
(bad)
je
xor
push
xchg
fstp
cmp
aam
mov
or
fadd
dec
mov
movs
(bad)
mov
stc
mov
hlt
dec
or
push
xor
dec
mov
jp
jno
mov
dec
or
cs
jecxz
lock
scas
addr16
adc
sbb
(bad)
fs
popa
out
cwde
cli
mov
mov
jmp
int3
in
outs
fimul
sub
imul
xchg
enter
outs
or
rol
loop
mov
pop
dec
adc
jge
aam
ja
xlat
mov
cli
lds
leave
outs
fcomp
or
out
add
icebp
mov
or
adc
add
les
jge
adc
ins
dec
movs
push
mov
lods
sbb
pop
push
out
pop
inc
aam
pop
and
addr16
ins
fs
mov
scas
inc
jle
in
sahf
fild
jnp
mov
jno
cmp
(bad)
fwait
cmc
push
loope
xchg
(bad)
clc
out
out
xchg
call
sti
jae
cwde
jmp
movs
hlt
jo
scas
mov
add
pop
and
(bad)
cs
not
out
sub
adc
jp
add
cs
or
xchg
pop
loop
(bad)
stc
sub
in
add
jle
cwde
shr
xor
cs
and
das
pop
sbb
mov
aaa
mov
dec
(bad)
mov
inc
mov
call
ins
push
mov
xchg
jae
test
cmp
sub
adc
rol
pop
fidiv
imul
(bad)
pop
fs
(bad)
nop
mov
clc
mov
cmp
rol
loop
add
xor
(bad)
(bad)
and
xchg
pop
and
mov
stos
idiv
sub
jp
addr16
mov
xor
pop
mov
jmp
lahf
call
xor
inc
inc
add
sub
int3
aas
aaa
xor
in
or
enter
pop
rcr
rcl
out
xchg
jle
add
int
lods
mov
imul
dec
cmps
(bad)
fnstsw
jno
sub
xchg
dec
cmp
add
xchg
arpl
int
test
push
inc
scas
(bad)
je
mov
inc
cwde
xor
sbb
push
rol
cmps
int
pop
mov
fild
jne
xchg
or
out
aam
adc
scas
test
dec
mov
shl
shr
mov
frstor
call
pop
jb
push
or
sub
pop
xor
dec
jp
or
icebp
les
in
adc
int3
inc
pushf
rcl
dec
pop
xor
push
pop
cmp
movs
movs
ficom
xor
adc
pop
jmp
push
mov
mov
stc
mov
outs
jo
push
sub
mov
dec
call
movs
jo
or
lods
outs
xor
and
test
add
shl
or
inc
out
pop
add
push
pop
sbb
test
inc
mov
aaa
xchg
sub
ficomp
arpl
outs
add
xchg
and
sub
xor
and
pop
test
push
fsin
xchg
lock
jl
sbb
lea
push
add
xchg
jno
repnz
mov
mov
and
or
jb
and
aad
sub
mov
or
arpl
popf
std
inc
(bad)
add
xchg
lods
scas
sbb
or
repz
outs
push
jne
ds
jle
jno
inc
ins
imul
sub
dec
pop
shl
enter
and
dec
cmp
sbb
scas
jle
or
test
es
xchg
sub
or
xor
dec
outs
clc
adc
adc
pusha
xor
jge
clc
(bad)
mov
sub
jl
cmp
dec
adc
(bad)
cld
or
add
dec
not
mov
inc
cmp
push
and
add
enter
enter
out
out
faddp
pusha
icebp
inc
fisttp
rcr
aaa
inc
loop
outs
test
inc
cmp
jno
push
adc
in
xchg
adc
(bad)
fidivr
fnsave
arpl
mov
scas
cmps
fs
inc
test
int3
in
or
outs
sbb
push
dec
pusha
(bad)
sub
jo
fwait
sbb
mov
pop
or
inc
shl
add
pop
inc
retf
mov
jns
mov
jne
sbb
dec
movs
dec
jle
(bad)
stos
stos
inc
in
mov
add
mov
mov
scas
arpl
sbb
movs
mov
or
and
jb
sti
dec
movs
shl
add
test
mov
jmp
js
cmp
scas
ss
sub
stos
inc
shl
imul
add
std
sbb
pop
xchg
mov
adc
cmp
xor
popa
xor
test
sti
adc
addr16
mov
loope
enter
push
dec
faddp
push
adc
mov
adc
fdivr
std
icebp
jns
inc
fdivr
xchg
push
fwait
cmps
mov
mov
mov
dec
je
pop
outs
xor
retf
aam
and
pop
mov
nop
or
loopne
sbb
adc
or
adc
add
movs
jmp
pop
jge
xor
pop
in
(bad)
je
fidivr
cmp
sbb
sbb
push
and
imul
sahf
push
adc
arpl
ja
mov
addps
inc
aad
call
dec
fwait
(bad)
sbb
sub
jae
pushf
fptan
daa
xchg
mov
sub
fs
ds
data16
push
push
call
dec
in
(bad)
ja
cwde
int3
cmp
lds
in
jae
retf
adc
push
inc
test
mov
xchg
in
xchg
pop
dec
pop
into
sub
mov
pop
and
xchg
icebp
cmc
lods
mov
icebp
inc
(bad)
js
(bad)
mov
mov
dec
fwait
sbb
xchg
(bad)
cmp
cmp
dec
lahf
jmp
and
out
sbb
test
shr
pop
imul
xchg
sbb
pusha
dec
fisttp
mov
idiv
mov
xor
mov
mov
(bad)
out
ficomp
loopne
dec
mov
jnp
adc
inc
inc
jp
add
inc
cmp
sub
repz
push
adc
mov
in
adc
and
int
pop
in
fsub
(bad)
push
mov
add
dec
push
cmps
icebp
shr
sbb
pop
mov
lock
sub
hlt
aas
clc
cmps
ds
(bad)
cmc
mov
faddp
lods
ja
cmp
std
inc
enter
(bad)
cld
cmp
sub
jbe
sub
aad
js
adc
addr16
sbb
inc
add
neg
pop
outs
repnz
jp
sbb
pop
rep
jmp
sahf
jnp
xor
push
mov
cwde
aas
add
push
rcr
mov
loope
nop
push
aaa
pop
test
jns
(bad)
push
add
and
fst
jle
in
hlt
add
(bad)
in
or
dec
fbstp
jbe
stc
cmp
push
pusha
cli
cdq
xchg
jmp
movs
ds
xchg
pushf
pushf
sbb
pop
out
mov
aad
mov
adc
or
stos
and
(bad)
sahf
dec
int
mov
or
test
(bad)
test
adc
test
ins
outs
and
jle
rcr
je
test
popf
and
fst
rcl
xor
or
jmp
xor
out
push
(bad)
adc
not
daa
adc
retf
loope
sbb
adc
leave
rol
fbstp
xchg
ror
push
mov
addr16
adc
mov
popf
in
xchg
xor
retf
xor
fmulp
neg
stos
imul
std
or
sub
fnstcw
lods
repz
cli
cdq
adc
loop
mov
xchg
xchg
jl
in
into
adc
test
mov
sbb
xchg
(bad)
in
outs
jae
mov
pop
ficomp
cmp
std
outs
stc
or
jo
and
in
mov
mov
inc
jno
fist
add
push
push
xchg
push
call
scas
xchg
sbb
jbe
arpl
fisubr
mov
mov
mov
cmps
pop
lds
outs
inc
retf
inc
and
adc
pop
mov
push
cld
scas
mul
ja
dec
jmp
leave
aad
push
sti
sbb
push
xlat
aaa
test
xor
setne
icebp
loope
add
jmp
rol
cmp
leave
loopne
cmp
mov
aaa
sbb
lds
fcom
inc
es
dec
or
and
sbb
xchg
and
xor
xchg
pop
stc
fninit
scas
and
out
(bad)
pop
jae
bsr
ror
sub
movs
stos
in
lods
inc
xlat
mov
jns
arpl
mov
daa
jl
daa
add
push
mov
mov
mov
jge
daa
mov
popa
(bad)
push
dec
cdq
xchg
es
adc
pop
mov
jge
in
fidivr
adc
leave
(bad)
pop
sbb
cs
movs
clc
ret
sub
xchg
mov
data16
mov
arpl
arpl
retf
mov
in
(bad)
xchg
jecxz
dec
xchg
xor
mov
inc
lds
(bad)
fidiv
push
iret
mov
dec
pushf
push
inc
les
dec
mov
test
dec
mov
sub
add
lds
mov
fucomp
mov
xor
dec
cmps
and
arpl
push
sti
mov
and
mov
(bad)
adc
out
and
gs
cmp
aam
js
jo
or
pop
fistp
pop
xchg
mov
mov
sub
adc
mov
mov
sub
aas
sbb
sbb
sbb
jo
test
add
mov
mov
push
pop
sub
xor
movs
je
imul
xor
fidiv
pop
mov
jne
jne
fcomp
or
dec
and
dec
cmp
mov
int
mov
add
mov
pop
push
test
pextrw
pusha
test
ror
mov
ins
mov
push
xor
xchg
dec
jne
leave
cli
sti
push
jmp
repnz
ins
imul
jecxz
jmp
fcomp
gs
ss
idiv
out
std
enter
repz
test
sub
adc
and
mov
mov
xor
out
arpl
jg
dec
int
fst
retf
(bad)
xchg
mov
movs
addr16
in
neg
out
scas
sbb
pop
push
bound
jno
push
and
push
scas
imul
or
clc
leave
add
xor
aad
pop
or
ficom
in
(bad)
push
fnstcw
jae
push
ins
dec
js
xor
mov
inc
xchg
shl
lock
dec
sub
xchg
sub
xor
pop
xor
inc
or
mov
ja
inc
jmp
xor
push
(bad)
ficomp
hlt
adc
js
jge
jbe
cs
add
push
push
sub
js
add
scas
gs
inc
cmc
popf
mov
xchg
mov
pop
and
add
(bad)
imul
xchg
push
jbe
pop
and
push
adc
call
in
daa
sub
pushf
cmp
int3
pop
loop
call
push
cmp
fcmovu
dec
out
cmps
jg
lods
lods
inc
mov
pop
pop
xor
pop
bound
mov
rcl
push
and
push
sbb
pushf
adc
loop
mov
retf
test
sahf
imul
xchg
jle
clc
stos
push
push
cmovns
jmp
pop
add
cmp
mov
cmp
sbb
adc
cmp
sub
movs
shl
pop
loop
add
jg
cld
inc
cmp
call
and
(bad)
inc
jbe
mov
data16
test
ss
test
mov
cmp
pusha
jnp
retf
xchg
cmp
sbb
lea
cmp
and
mov
push
hlt
rcr
mov
rcl
mov
(bad)
fwait
cmps
jnp
jmp
mov
cdq
xchg
and
aam
outs
loopne
mov
je
icebp
lods
iret
scas
jnp
dec
push
bound
loope
out
sbb
test
sbb
dec
stc
loope
pop
dec
xor
mov
pop
repz
adc
xchg
cmp
push
fidivr
movs
dec
nop
enter
add
(bad)
out
int3
cli
push
push
mov
mov
or
or
sub
jg
mov
out
sbb
test
push
mov
lahf
jmp
and
out
or
jge
mov
enter
call
push
mov
jp
dec
xchg
(bad)
(bad)
or
pushf
inc
loop
loop
fist
pop
cwde
mov
add
addr16
cmp
ror
sbb
test
or
xor
mov
add
pusha
sbb
adc
jmp
push
pop
adc
xchg
imul
xor
aas
ds
dec
in
sbb
movs
mov
retf
jbe
loopne
(bad)
rcl
push
enter
out
xchg
cs
outs
pushf
sbb
hlt
add
or
loopne
(bad)
dec
sub
sub
push
push
cmps
inc
movs
dec
mov
sbb
pop
pop
ret
sti
jp
xor
or
call
sbb
jno
push
out
cmp
test
push
call
pop
nop
push
jecxz
mov
jo
xchg
cwde
(bad)
pop
or
push
xlat
lods
adc
jbe
push
fnstcw
add
stos
jae
jle
test
inc
aas
add
xchg
cmps
jbe
bound
rcl
jmp
in
stos
mov
cmps
jge
and
cmp
jb
test
inc
xchg
adc
leave
(bad)
loopne
dec
xchg
scas
pop
ret
sahf
shl
jge
jmp
loopne
clc
push
cmp
cs
enter
mov
add
inc
push
clc
(bad)
call
call
out
loop
mov
aam
jp
test
or
in
rcl
and
mov
ret
xchg
(bad)
aas
cmp
outs
mul
sub
pop
test
leave
xlat
popa
in
add
addr16
adc
jb
xchg
inc
(bad)
or
mov
sub
add
fcmove
in
and
xor
pop
out
add
and
in
idiv
pushf
and
mov
jle
(bad)
into
lea
pop
push
jmp
hlt
stos
xor
stos
ds
cld
sbb
gs
or
bound
xchg
jl
mov
pop
xor
push
pop
jmp
shl
adc
pop
xor
ret
pushf
jns
cmp
idiv
add
xor
popa
mov
sbb
adc
pushf
call
das
fsubr
hlt
or
mov
mov
cdq
xchg
adc
lahf
je
adc
cdq
mov
adc
or
push
push
test
lahf
cld
int3
fistp
retf
jne
out
fiadd
inc
das
mov
mov
sub
dec
(bad)
mov
enter
retf
fidiv
dec
jl
(bad)
int
in
push
add
dec
jl
pop
dec
out
inc
in
pusha
scas
mov
shr
push
js
test
test
cs
lods
(bad)
into
jb
cmc
lods
mov
icebp
sar
sub
xchg
call
fld
(bad)
xchg
call
sbb
fisubr
mov
mov
cmp
shl
xlat
adc
imul
aaa
xor
rcr
pusha
scas
jmp
xchg
lds
mov
sahf
jnp
call
or
out
fadd
pushw
pop
dec
retf
pop
sub
xchg
jp
stos
push
imul
jbe
jnp
or
popf
mov
pop
push
add
cmp
pop
leave
pusha
add
ror
and
cld
(bad)
jge
or
or
xor
sub
imul
push
pop
lahf
xchg
sbb
pop
inc
inc
dec
and
movs
or
adc
push
mov
sbb
(bad)
mov
mov
cmp
push
xor
fcomp
sub
adc
push
mov
psllw
clc
add
call
shl
xchg
mov
mov
pop
and
pop
(bad)
ficom
shl
jne
or
adc
xlat
enter
lods
mov
cs
xor
bound
(bad)
dec
push
fidiv
test
call
pop
add
jp
mul
mov
mov
cmps
dec
jbe
int
clc
mov
add
fdiv
dec
and
call
dec
nop
dec
mov
adc
shr
lds
outs
cmc
pusha
adc
sbb
(bad)
lods
retf
out
xor
mov
cmp
loop
pop
out
mov
jb
cmp
(bad)
cmp
push
mov
in
jns
mov
or
nop
push
jne
mov
mul
mov
ss
bswap
sahf
sub
mov
xchg
das
xchg
dec
adc
jl
test
mov
dec
imul
pop
aad
ret
pop
mov
ins
aas
movs
jecxz
shl
push
fdiv
xchg
jecxz
int
push
aad
fwait
mov
out
pop
scas
loope
out
jbe
dec
jg
jl
(bad)
pop
dec
and
cdq
pop
cmp
daa
mov
push
push
cs
inc
or
pushf
or
and
jl
push
pop
xor
aaa
xchg
mov
outs
test
ror
sub
xchg
jnp
xchg
(bad)
cs
mov
jo
lods
push
mov
jmp
sbb
sub
iret
les
int3
sti
add
cmps
hlt
pusha
shl
mov
sub
sbb
sbb
inc
push
repnz
jl
sahf
out
sub
xchg
mov
cmc
bound
cmps
add
leave
push
mov
sahf
(bad)
sub
xchg
out
push
call
test
mov
shr
and
add
stos
adc
cmps
fld1
fucom
sbb
jmp
pop
sub
cli
lahf
dec
dec
inc
cmp
js
pop
jb
pusha
rol
stos
mov
pop
sti
(bad)
(bad)
cdq
mov
xchg
or
inc
(bad)
fmul
shl
push
imul
scas
scas
push
mov
(bad)
scas
pushf
sbb
in
and
inc
mov
pop
imul
test
mov
or
mov
mov
in
push
ret
(bad)
fcom
ins
fst
push
jnp
mov
dec
mov
push
sbb
add
bound
sub
xchg
lea
fsubr
ror
loop
scas
mov
jbe
fistp
mov
test
pushf
sbb
push
cmc
xor
jle
xor
cmp
lahf
push
adc
inc
imul
mov
pop
mov
clc
call
or
stos
push
lds
adc
icebp
je
sti
div
ret
rcl
dec
mov
mov
mov
sahf
lahf
sub
xchg
movs
add
fs
xchg
mov
adc
rcr
bound
sbb
inc
imul
mov
mul
in
into
push
push
test
shr
ins
and
push
dec
arpl
in
out
adc
and
imul
pop
xchg
out
ins
(bad)
stc
sbb
xor
sub
jns
in
jb
add
inc
jg
sub
add
cli
outs
add
(bad)
popf
xchg
push
in
cmps
push
cwde
lods
pusha
lahf
lahf
in
push
aas
adc
lea
add
test
hlt
push
add
jb
(bad)
arpl
scas
or
jnp
cld
push
push
ins
retf
cmc
pop
xor
repnz
in
fisttp
repnz
int
push
scas
int
mov
xchg
or
or
fstp
rcl
hlt
mov
jnp
xchg
add
inc
xor
cmp
inc
mov
mov
lock
ret
inc
push
out
scas
and
inc
mov
xor
scas
aam
(bad)
adc
stos
xchg
popa
add
sub
(bad)
js
xchg
xor
ss
int3
push
rcr
or
in
jno
add
push
sbb
shl
icebp
sar
inc
popa
lods
je
(bad)
xchg
fnstsw
out
xchg
jle
xchg
cmp
into
sub
out
out
nop
(bad)
and
cmp
hlt
or
push
push
mov
push
mov
cmp
mov
jge
int3
aad
int3
int
mov
cmp
sbb
or
push
add
inc
xchg
cmps
add
and
mov
ins
call
rol
or
mov
jge
jmp
adc
add
aam
imul
sub
push
enter
(bad)
cmp
add
push
cmp
jae
fisubr
sbb
adc
imul
mov
nop
cmp
adc
mov
bound
jno
bound
adc
sbb
in
(bad)
gs
push
std
xor
(bad)
inc
data16
arpl
sbb
sbb
outs
dec
das
sbb
push
xor
ds
int3
(bad)
push
push
xchg
dec
int
mov
ins
add
mov
jecxz
clc
sub
(bad)
mov
xor
cmp
fidivr
fadd
mov
push
push
xchg
dec
out
add
jmp
int3
adc
push
call
push
leave
sub
jmp
lods
xchg
or
fld
(bad)
jmp
fimul
shl
popf
cdq
jg
xor
pop
inc
cwde
xchg
dec
sbb
inc
add
iret
shl
int3
and
clc
ss
cmps
xlat
inc
int
push
shl
enter
imul
push
push
push
rcr
add
movs
or
or
adc
push
shr
(bad)
sbb
sbb
stc
xor
add
lods
inc
aaa
sub
fst
jge
mov
add
xor
xchg
add
mov
outs
push
imul
mov
xchg
mov
mov
push
cwde
lock
iret
push
push
fnstsw
aam
sub
pop
adc
rol
(bad)
(bad)
shl
fld
inc
cmp
push
xchg
xor
or
jp
outs
ss
sbb
cmps
shr
inc
mov
data16
in
inc
stc
out
mov
cmp
pop
fwait
(bad)
push
(bad)
and
and
mov
xor
mov
push
sub
pop
and
(bad)
mov
mov
pop
mov
push
daa
lods
cmp
and
inc
jne
pop
movs
xchg
inc
mov
adc
mov
bnd
sar
push
dec
movs
cmps
mov
outs
ret
mov
fwait
clc
jae
push
addr16
fdiv
push
movs
int3
mov
xchg
pop
jo
cmp
mov
aam
jnp
fisttp
test
rcr
mov
outs
dec
jbe
enter
cmp
and
(bad)
shl
fdiv
xor
out
shl
mov
out
jo
mov
pop
mov
retf
xchg
xchg
lds
movs
imul
ret
dec
sbb
sbb
mov
(bad)
jb
pushf
mov
aad
mov
jg
adc
and
inc
dec
mov
inc
jecxz
(bad)
xchg
push
cmp
repz
sbb
mov
in
retf
stc
ins
aam
inc
shl
jo
sahf
lods
and
cwde
repz
neg
jne
cdq
cmp
push
dec
mov
int
jp
out
je
mov
lock
mov
sbb
fcomi
or
adc
mov
ret
out
je
jbe
xor
int
div
xor
adc
adc
dec
xlat
and
repnz
adc
xchg
call
pop
test
scas
xchg
neg
test
retf
fwait
or
outs
icebp
jg
out
mov
sahf
cmc
sub
fst
test
sbb
test
jmp
jae
lods
int3
mov
inc
mov
fst
std
je
push
ret
scas
out
lock
ret
pop
xchg
add
mov
fcomp
or
or
dec
test
jp
(bad)
dec
and
mov
or
mov
or
adc
mov
xchg
mov
clc
xor
sub
(bad)
mov
push
or
inc
jns
nop
loop
repz
jecxz
out
ins
mov
fwait
push
xchg
mov
pop
push
mov
test
dec
popa
or
or
adc
je
gs
cs
ja
not
mov
mov
jl
scas
pop
add
sbb
leave
dec
cmp
adc
lods
mov
ins
js
sbb
lds
stc
mov
mov
out
pushf
outs
add
lahf
adc
or
(bad)
jp
and
(bad)
shl
or
xor
dec
ret
(bad)
sar
mov
mov
sahf
inc
pop
mov
jmp
jl
mov
add
add
dec
pop
(bad)
(bad)
or
push
lock
cdq
mov
icebp
pop
out
stos
sbb
out
les
out
in
sub
add
push
rol
sub
xchg
mov
pop
push
into
int
xor
push
stos
loopne
cmp
leave
inc
mov
inc
mov
mov
push
ret
imul
jns
test
icebp
addr16
jmp
xor
or
ret
sbb
push
cli
mov
mov
inc
and
xor
pop
shl
pop
fcmovu
shr
loope
outs
std
in
and
dec
sti
adc
xchg
fdivr
loop
daa
jae
dec
push
or
sbb
imul
mov
jmp
sbb
loop
dec
mov
add
and
inc
sbb
in
sub
dec
imul
pop
(bad)
mov
(bad)
std
cmp
adc
jg
mov
pop
mov
fwait
cli
mov
and
jecxz
out
imul
and
inc
jns
and
push
sub
pop
test
inc
mov
xor
xchg
pop
cs
sub
xor
ror
cmp
inc
popa
xchg
mov
call
pop
push
xchg
pop
addr16
xor
pop
xchg
movs
inc
adc
xor
bound
movs
daa
(bad)
or
xor
cmp
in
push
mov
push
mov
lahf
fsubr
pop
sub
dec
call
cmp
retf
jg
sti
adc
je
hlt
cmovbe
mov
fstp
pop
mov
pop
pop
cwde
ins
mov
push
mov
sub
xor
cmp
fisttp
xchg
gs
out
xchg
out
retf
fisubr
dec
nop
lods
mov
mov
cmc
inc
add
or
add
jge
fcomp
mov
cmp
sub
nop
pop
scas
adc
inc
cmps
xor
outs
xor
mov
pop
and
cmp
repnz
fnstenv
outs
lods
cmps
call
lods
sub
pop
(bad)
push
xor
jl
push
mov
add
sbb
push
xor
cli
mov
icebp
test
in
jo
clc
cwde
xchg
or
push
push
push
icebp
outs
inc
test
xchg
cwde
push
xlat
inc
(bad)
pop
js
clc
xchg
test
test
shl
iret
mov
jmp
mov
pop
std
jmp
push
dec
add
pop
sti
push
jno
les
and
sbb
inc
push
mov
mov
in
cmp
fsubr
mov
and
fwait
ins
in
loope
mov
pop
scas
sub
retf
in
mov
sbb
jl
cmc
push
shr
push
repz
loope
xor
jmp
into
pop
dec
sub
xchg
cmp
jp
or
xchg
push
fs
mov
adc
and
push
push
push
dec
adc
xchg
js
js
(bad)
sbb
push
(bad)
lods
loope
or
gs
push
push
(bad)
jae
pop
jmp
sbb
mov
push
push
adc
push
mov
cld
in
mov
es
test
jmp
outs
gs
mov
in
and
xchg
adc
mov
jbe
stos
popf
outs
(bad)
inc
pop
xor
sub
jmp
mov
push
cs
mov
mov
jl
cmc
or
mov
jbe
cmps
aad
cmp
(bad)
sub
push
ins
sbb
inc
add
adc
sti
mov
mov
(bad)
cld
fsub
push
not
or
in
aas
repnz
loopne
mov
rcr
inc
hlt
mov
(bad)
out
stos
out
out
(bad)
int
jg
pop
ins
popa
aas
sub
(bad)
test
movs
pop
push
push
in
adc
aad
(bad)
or
lock
sub
pop
popa
pop
push
loop
in
jnp
aaa
push
mov
cmp
xor
call
lahf
sub
sub
fcom
push
cwde
cmps
xor
(bad)
jno
add
sub
mov
xor
int
out
leave
repz
mov
add
(bad)
cmp
jmp
out
aas
push
sar
push
ds
xchg
inc
frstpm(287
add
mov
cmp
cli
pop
push
dec
test
cli
int3
movs
rcl
push
into
ins
arpl
mov
pusha
ss
mov
lahf
aad
test
adc
mov
loopne
int3
stos
fcmovu
mov
cmp
fstp
arpl
or
dec
dec
add
sub
mov
or
pop
jg
mov
retf
sub
jg
adc
adc
and
or
push
mov
iret
(bad)
jmp
cmp
mov
sbb
pusha
(bad)
ins
aam
in
std
add
xchg
adc
pusha
xchg
jb
psrad
das
imul
jo
cdq
xchg
cmp
sub
jbe
dec
aas
pop
in
ins
rcr
and
mov
pop
sub
adc
cmp
inc
sahf
std
sub
pop
sbb
movs
test
loop
mov
das
push
cmps
(bad)
or
inc
mov
sahf
mov
mov
aaa
xor
mov
pop
push
imul
xchg
out
adc
ins
adc
fchs
inc
mov
cdq
ds
add
std
and
iret
fsub
xchg
xor
(bad)
xor
jl
imul
lods
inc
jne
mov
jbe
scas
sar
and
add
aad
cmp
shl
cmp
(bad)
retf
mov
push
js
retf
fimul
mov
repz
ins
ret
add
and
xor
sbb
hlt
mov
adc
retf
addr16
fst
jb
cli
pop
xchg
xchg
movs
rol
mov
xchg
out
int
pop
(bad)
or
push
cwde
cmp
es
jo
push
rcl
or
mov
xor
sbb
sahf
inc
jl
sbb
popa
lahf
mov
mov
xchg
pop
jle
pop
dec
(bad)
fsub
jne
pop
mov
and
daa
clc
ret
mov
add
fs
push
aaa
retf
push
loop
int3
das
ins
and
inc
call
fbstp
cld
push
ja
inc
ret
inc
lahf
and
test
jmp
push
jg
sahf
adc
jns
jb
cmps
jmp
ret
mul
xchg
xor
nop
sub
pusha
and
jb
or
fnclex
sti
pusha
add
inc
loopne
or
or
fwait
inc
sub
in
cmp
scas
iret
cs
aaa
sbb
aas
push
stc
mov
neg
dec
mov
pop
jecxz
xlat
mov
cwde
adc
or
and
ror
sub
std
je
out
ss
push
imul
les
push
je
(bad)
mov
pop
push
ds
stos
dec
repnz
bound
or
repnz
out
dec
or
jp
aas
cmp
add
aas
call
sbb
or
push
test
data16
(bad)
jp
cmp
mov
dec
add
fistp
sbb
test
cwde
and
mov
add
out
push
rcr
cmp
add
int
sub
arpl
(bad)
mov
je
fistp
fcom
inc
stc
cmp
cmp
push
jle
(bad)
and
sub
add
hlt
pop
sub
out
push
and
xor
xchg
mov
mov
and
pop
std
sbb
daa
imul
sbb
arpl
dec
les
mov
ds
data16
shr
jmp
dec
or
ja
cli
dec
pop
adc
rcr
jne
lods
icebp
mov
sahf
sbb
dec
dec
add
xor
sbb
pop
mov
or
int
dec
sub
call
mov
push
lock
inc
and
dec
popf
adc
add
and
ffreep
or
iret
and
inc
dec
aad
jp
test
pop
or
nop
dec
inc
pusha
inc
pop
out
fist
shr
mov
add
std
and
and
(bad)
retf
dec
fstp
add
nop
fsubr
mov
enter
sar
imul
dec
idiv
in
loop
sub
(bad)
mov
movs
sub
call
cmp
xchg
jne
push
fbld
mov
es
xchg
push
lahf
and
inc
cli
xor
rcl
retf
cmp
mov
addr16
rcl
jo
push
fisub
cli
popa
movs
mov
addr16
push
int3
dec
js
(bad)
in
jae
mov
push
mov
add
mov
add
data16
cmps
fidiv
ret
dec
mov
pop
iret
pop
call
pop
popf
imul
ror
sub
add
mov
loopne
adc
shr
dec
xchg
mov
mul
adc
call
loopne
loope
add
pop
shl
fldenv
push
out
mov
jno
jge
lahf
push
xor
pop
inc
mov
data16
in
xor
or
fbld
or
int3
jno
cmp
jnp
sbb
rol
cmp
aas
aam
mov
sub
loope
popa
cmps
stc
jbe
cmp
stos
xor
arpl
xor
cmps
stos
dec
aas
test
or
(bad)
pop
push
cdq
or
add
(bad)
xor
es
and
mov
nop
cmps
retf
jle
icebp
movs
psubsw
jo
pop
xchg
pop
out
aaa
add
xlat
mov
js
and
sub
jmp
dec
fisubr
data16
mov
inc
dec
loope
mov
lds
(bad)
clc
and
sbb
mov
inc
pop
test
jp
jp
(bad)
repnz
xor
xchg
xor
pop
pop
sbb
inc
pop
sub
repz
dec
(bad)
lods
sbb
outs
xor
test
mov
rcl
inc
ins
mov
or
fsub
xchg
shr
sub
mov
loope
loope
xchg
or
out
cmp
bound
(bad)
adc
jl
jecxz
out
or
pushf
push
dec
cwde
inc
nop
dec
aad
neg
mov
leave
or
pop
xor
fistp
jnp
(bad)
sbb
or
in
inc
fs
movs
push
mov
call
dec
ins
fdiv
sbb
movs
clc
jg
and
jae
xor
and
lock
mov
ret
cld
into
mov
adc
xchg
jmp
ror
mov
imul
mov
sub
call
xchg
cmps
push
test
psllw
in
mov
clc
cs
nop
fiadd
daa
pop
ds
das
fs
dec
fwait
hlt
cmc
and
sbb
cmp
cdq
ds
dec
les
and
inc
loope
mov
cvtpi2ps
fisubr
pop
jg
mov
into
icebp
pop
loope
push
jg
gs
ss
sub
push
and
inc
jl
hlt
dec
shl
(bad)
leave
dec
loop
call
and
(bad)
sbb
pusha
in
(bad)
nop
(bad)
stc
and
ss
(bad)
loope
lods
ja
(bad)
xchg
jbe
fwait
cmovl
adc
lea
pop
add
aad
fstp
pop
sub
fwait
ds
fimul
dec
dec
xor
jg
loope
popf
inc
cmp
cmps
test
mov
jmp
rcr
cmc
mov
rcr
fdivr
push
jno
mov
jmp
lock
movs
add
in
mov
mov
add
cmps
imul
mov
xchg
xor
and
sbb
stos
pop
int3
push
push
mov
int
jge
ins
fild
push
mov
fcmovne
aad
mov
xchg
repz
xor
lds
sbb
popf
lods
inc
loop
cmp
cmc
sbb
sbb
or
loopne
movs
mov
js
xor
(bad)
xlat
cmp
fs
xor
dec
iret
lods
jns
mov
aas
jge
dec
lods
push
fdivr
push
adc
cmc
jmp
mov
std
sub
rcl
jmp
pop
rcl
dec
jecxz
nop
loope
sbb
ret
adc
xchg
int
ffree
(bad)
out
mov
cmp
bound
lds
xor
inc
(bad)
aad
pop
mov
dec
scas
or
inc
mov
mov
cli
mov
aaa
in
push
mov
lock
(bad)
sub
stos
ret
cmp
fidiv
data16
dec
(bad)
clc
mov
or
aaa
inc
push
in
adc
jo
out
mov
in
add
inc
shl
std
out
int
arpl
mov
sahf
mov
or
lahf
pop
gs
jl
ret
jnp
mov
dec
stc
(bad)
jge
xchg
inc
hlt
fcomip
in
(bad)
jb
out
(bad)
ins
push
mov
aas
dec
sub
inc
lahf
lods
push
pop
push
mov
das
pop
inc
pop
push
stos
cmp
sub
push
mov
xor
push
jmp
sti
sar
(bad)
fisubr
das
ins
sbb
push
or
adc
inc
cdq
dec
in
jmp
cdq
int
cmp
pop
in
mov
mov
inc
push
sbb
cmps
imul
pop
es
sbb
cld
pop
and
scas
inc
add
inc
iret
loop
daa
test
cmp
dec
clc
cmp
sbb
adc
es
daa
jecxz
cmps
add
or
(bad)
adc
test
int3
cmps
fs
sub
pop
ins
stc
addr16
mov
ds
popa
outs
retf
sbb
sub
sbb
les
cmp
hlt
xchg
aas
pop
repz
mov
(bad)
dec
call
mov
cs
mov
cmc
sbb
pop
cmp
mov
jne
ja
sbb
sub
or
retf
out
outs
and
jge
and
(bad)
ret
or
les
cmp
adc
mov
retf
ficom
dec
outs
cmc
lods
(bad)
pop
mov
sar
or
(bad)
ror
jecxz
fld
out
xor
cmc
bnd
or
sub
cld
out
lock
(bad)
inc
int3
mov
pop
cwde
in
sub
lock
(bad)
fcmovu
dec
stos
dec
pop
pop
push
mov
lea
int3
loope
jle
adc
sbb
imul
(bad)
fstp
inc
adc
push
aas
mov
test
sub
mov
in
add
aam
pop
scas
shl
mov
inc
and
sbb
mov
fsub
scas
fisub
aas
sbb
jmp
out
dec
mov
mov
mov
mov
xchg
mov
mov
sbb
adc
xchg
mov
test
and
cli
mov
fsubr
les
dec
div
cdq
mov
ja
out
inc
push
push
mov
dec
cmp
test
pop
or
hlt
pop
out
fstp
dec
repnz
arpl
jmp
or
or
arpl
arpl
sbb
cmovl
into
fdivr
imul
or
cmp
pop
loope
lea
das
mov
add
cmc
xchg
xchg
xor
ss
pop
(bad)
bound
sar
dec
inc
nop
inc
repnz
es
dec
call
jmp
sub
mov
mov
xchg
pop
mov
retf
in
imul
cmp
add
sbb
xrelease
mov
hlt
inc
(bad)
pop
fnsave
inc
outs
dec
sar
das
jne
sbb
shr
ficom
jl
popf
adc
xchg
lock
cld
mov
leave
cmp
call
xchg
mov
mov
(bad)
in
adc
cmp
xor
or
jnp
xchg
dec
push
jle
cwde
xor
pop
das
jnp
inc
dec
fimul
bound
push
inc
std
add
sub
icebp
aam
cmps
imul
push
call
push
cmp
das
add
arpl
mov
and
neg
xchg
xor
mov
sub
sbb
movs
xchg
std
mov
xor
in
scas
push
mov
mov
ins
mov
push
aad
pop
call
inc
dec
icebp
ret
jmp
shl
add
xchg
cmps
fadd
cmp
xchg
xor
inc
xor
inc
enter
jne
xchg
or
dec
out
stos
xchg
aad
pushf
js
in
mov
push
add
or
sub
push
mov
ret
movs
ins
hlt
std
mov
sti
jns
rcl
push
fs
mov
loop
dec
repz
fstp
pop
retf
aaa
add
bound
sti
xor
fdivrp
sub
jecxz
shl
and
inc
test
sti
push
aas
rcl
arpl
pop
psadbw
lods
icebp
sbb
pushf
ds
cli
retf
jb
mov
cld
test
jnp
scas
mov
add
sahf
sbb
daa
jb
popa
jmp
and
int
stc
test
xor
fcmovb
xchg
cmp
and
fldcw
jge
ret
rol
mov
xor
imul
sbb
cmps
sbb
mov
lods
xchg
fld
pop
stc
daa
xchg
aad
adc
pop
into
sbb
xor
push
daa
push
mov
loope
mov
fild
and
mov
cmps
mov
ret
cmc
mov
call
aas
fwait
push
inc
ret
and
push
dec
shl
mov
inc
adc
repnz
or
adc
push
scas
mov
mov
iret
jle
adc
or
loopne
cld
mov
imul
or
lods
rol
jnp
es
scas
jno
mov
mov
ss
mov
sbb
sub
sub
cli
lods
xchg
shl
scas
push
or
mov
mov
pop
sahf
hlt
mov
aad
icebp
cli
mov
push
ret
or
stc
(bad)
iret
(bad)
fistp
repnz
rcr
neg
dec
pop
mov
mov
push
jl
adc
aas
sub
test
movs
outs
jbe
mov
xchg
push
xlat
icebp
loop
and
cdq
outs
mov
test
mov
sub
and
cmps
mov
sub
das
mov
pop
(bad)
repz
push
bound
sar
shl
mul
dec
imul
test
std
pushf
mov
jnp
mov
in
std
lahf
cmp
xchg
add
sub
(bad)
stc
pusha
popf
jle
lock
xor
shl
inc
inc
push
xor
div
or
and
cmp
or
shl
sub
shl
cmp
cmp
push
ja
mov
jecxz
inc
or
mov
push
sub
ins
rcr
mov
mov
daa
dec
push
xchg
pusha
imul
add
sti
push
ins
push
push
xlat
push
imul
jno
add
inc
mov
mov
or
ret
mov
out
and
xchg
mov
loopne
jae
stos
(bad)
iret
xchg
aam
jo
inc
and
fadd
ficom
lods
daa
sub
stos
adc
scas
xchg
outs
bound
or
inc
inc
leave
sbb
lahf
adc
or
mov
lods
push
add
js
ins
xchg
call
in
jmp
xchg
dec
mov
movs
jle
lock
mov
iret
xchg
addr16
push
adc
retf
push
jnp
push
or
ret
mov
xor
pusha
xchg
or
push
shl
push
xchg
dec
pop
imul
add
mov
es
loop
es
pop
popa
movs
ins
loope
mov
popf
mov
cmp
add
jb
jp
xchg
adc
mov
inc
inc
pusha
lods
or
pop
nop
push
test
out
push
mov
(bad)
xor
call
leave
movs
fimul
mov
jo
leave
rcl
mov
add
(bad)
and
ret
xor
mov
mov
push
push
rcl
mov
cmps
jecxz
jl
xlat
nop
shr
jo
lods
ins
mov
test
(bad)
rol
sbb
neg
add
push
and
jo
xchg
jmp
fisub
cli
movs
or
xor
shl
xor
retf
iret
pop
ret
xor
mov
cmp
jl
dec
mov
push
xchg
and
inc
jbe
test
add
cmc
xchg
sub
push
mov
aas
push
bound
xchg
jg
aas
xchg
stos
or
stos
(bad)
je
mov
int
repnz
pop
mov
xchg
hlt
rol
mov
sub
adc
mov
bound
and
call
sbb
mov
je
mov
mov
dec
inc
pop
retf
pushf
loope
lods
mov
lahf
addr16
ins
push
xor
mov
xor
or
mul
popa
mov
pop
inc
ficomp
dec
loope
xor
sti
mov
or
sbb
push
in
(bad)
inc
mov
mov
loop
pop
out
sub
sbb
pop
push
aas
dec
mov
ss
add
outs
xchg
and
imul
repz
out
cmps
dec
push
in
mov
xchg
mov
mov
imul
inc
ror
cmp
retf
lock
cdq
cmp
std
pop
ja
sbb
arpl
adc
dec
xchg
pusha
adc
cmps
sti
xor
pushf
sar
sub
cs
push
xchg
movs
push
xor
xchg
mov
jle
retf
cmp
xchg
sti
stos
xor
xchg
xchg
and
inc
push
out
bound
sbb
ins
and
add
mov
xor
aad
out
sub
movs
ja
fadd
xchg
or
ins
pop
mov
add
mov
mov
imul
ret
cmps
ficomp
adc
dec
ins
imul
or
vmovntps
pop
jb
push
pop
cmp
xor
push
ins
xchg
or
retf
(bad)
iret
inc
sbb
mov
in
push
jge
xor
xchg
or
xchg
or
out
sub
jmp
dec
push
aas
icebp
xchg
rol
dec
popa
mov
daa
retf
jne
hlt
cmps
int3
pop
inc
jno
inc
xor
pop
(bad)
dec
mov
xor
out
pushf
mov
mov
loop
es
jmp
cmp
movs
je
shl
dec
rcr
inc
push
pop
nop
dec
xor
xchg
std
dec
adc
push
dec
daa
sti
daa
sbb
jbe
in
mov
lods
bswap
sub
sbb
(bad)
outs
repnz
sub
jnp
cwde
(bad)
or
lahf
inc
push
(bad)
and
out
in
inc
inc
pop
call
push
ins
push
mov
mov
pop
mov
pop
sbb
cmp
sub
push
fwait
rol
fld
aam
div
xchg
pop
add
dec
aas
adc
and
inc
add
or
jne
xor
loopne
mov
bound
call
inc
ja
cmc
cmps
cli
sbb
jns
dec
mov
std
mov
shl
push
mov
(bad)
(bad)
jle
and
out
pop
mov
loopne
push
(bad)
jmp
adc
mov
or
sub
jmp
pop
leave
sub
sbb
shl
mov
les
fist
jns
popf
fstp
movs
rep
xchg
dec
mov
popa
dec
out
ret
jae
inc
sar
outs
iret
mov
pop
mov
ss
sub
test
mov
cmp
or
adc
inc
icebp
jmp
and
aas
(bad)
ror
xchg
push
imul
std
add
push
retf
aam
mov
sbb
jae
push
sub
(bad)
adc
test
fld
xor
cwde
out
mov
mov
mov
mov
daa
adc
xchg
int
lahf
xchg
jle
in
xchg
and
shl
inc
stc
call
stc
cmp
dec
stos
into
pushf
imul
in
push
cld
mov
pop
and
nop
adc
out
mov
adc
aad
shl
gs
(bad)
push
(bad)
jno
pusha
pushf
daa
sbb
ror
mov
push
sbb
or
cld
cmp
mov
add
mov
test
mov
je
lock
test
mov
jp
dec
rcl
imul
pop
push
neg
and
or
push
mov
cwde
ficom
add
adc
adc
and
mov
repnz
pop
push
arpl
inc
and
and
cdq
adc
fadd
je
xchg
mov
add
inc
jge
fcmovu
sti
lea
and
mov
jne
iret
dec
sub
(bad)
in
xchg
xor
add
cmp
in
pop
mov
cmp
and
mov
push
(bad)
mov
lods
add
bound
mov
xor
dec
out
or
pop
push
sub
mov
mov
mov
gs
mov
stc
jne
sbb
in
pop
sbb
dec
jle
jg
adc
pop
ss
test
push
hlt
xchg
jae
aas
aaa
fs
and
pop
cmps
scas
add
sub
cmps
sub
dec
rol
mov
(bad)
stos
cwde
cmp
(bad)
cmp
push
ss
call
pop
sbb
getsec
pop
stc
fist
arpl
xchg
and
call
test
cmp
push
loop
pop
outs
or
jle
ret
clc
push
cwde
dec
or
ins
jns
mov
add
add
xchg
mov
inc
jecxz
dec
and
add
and
gs
xchg
jnp
scas
fdiv
jmp
loopne
cmps
push
jae
dec
mov
ss
daa
mov
ret
xor
mov
mov
imul
jmp
dec
mov
retf
popa
call
dec
cmp
sub
or
std
jge
fisttp
mov
adc
lock
mov
mov
jo
jbe
(bad)
cs
shr
fisttp
cmp
xor
out
pop
imul
xchg
dec
jge
push
aaa
xchg
mov
inc
imul
sbb
jo
sti
xchg
out
popf
adc
pop
shl
dec
xchg
pmulhuw
stos
jl
and
sub
pop
xchg
inc
outs
inc
jbe
mov
fistp
test
sub
mov
cli
add
repnz
push
mov
and
jg
mov
call
lds
adc
push
mov
mov
cmp
and
cmp
lahf
pop
lds
sub
mov
popa
(bad)
sub
lahf
xchg
repz
or
sub
call
cmp
mov
movs
mov
jno
(bad)
repz
es
je
(bad)
retf
out
jp
outs
xchg
add
add
or
or
push
push
mov
xchg
fmul
xor
jae
add
sub
dec
push
stos
jecxz
push
mov
sub
and
push
sbb
outs
cs
or
bound
imul
push
xchg
cmp
ret
outs
cli
jmp
mov
or
call
stos
hlt
dec
mov
ins
clc
jo
inc
inc
(bad)
std
xor
loope
push
xchg
inc
les
xchg
dec
and
jae
cmc
stos
loopne
int3
xchg
and
aas
fistp
xor
adc
je
test
cmp
pushf
mov
fcomp
into
dec
aas
aaa
cs
or
aaa
ret
xchg
xchg
not
ss
repnz
clc
sub
adc
mov
cmps
iret
cmp
les
loope
mov
shl
es
mov
cwde
push
in
arpl
fstp
ins
dec
push
pop
mov
pop
ret
fdivr
mov
inc
popf
dec
jb
test
push
pavgw
jmp
jecxz
ja
xchg
cmps
aas
ret
mov
adc
mov
lea
out
lock
scas
push
cmp
imul
test
dec
mov
or
stos
push
pop
sbb
push
sub
add
adc
ret
fs
popf
add
dec
addr16
sub
mov
jb
jmp
ror
lods
fild
lock
add
pushf
pop
jb
add
dec
ret
xchg
cmp
cmp
mov
and
(bad)
fbstp
ins
jnp
test
fstp
pushf
and
pop
(bad)
scas
(bad)
push
cmp
dec
je
push
or
jecxz
je
xchg
test
and
popa
sub
jns
jmp
js
into
add
ss
sub
(bad)
cmc
fmul
(bad)
xchg
jle
mov
cmp
push
ret
in
mov
mov
cld
sbb
add
rol
ins
int3
daa
and
mov
cdq
ss
lea
push
(bad)
js
jnp
(bad)
fucomip
data16
and
gs
nop
scas
(bad)
jno
je
lods
add
loop
xchg
outs
rcr
ds
push
push
add
mov
sub
and
add
push
pop
or
scas
in
add
add
mov
push
pop
mov
fs
data16
pop
arpl
mov
xor
xlat
and
dec
mov
out
mov
xchg
push
scas
xchg
cwde
push
add
add
outs
cli
adc
jae
shl
(bad)
js
ss
aas
dec
mov
add
arpl
pop
jmp
xchg
daa
ins
adc
jno
dec
cmp
push
ins
sub
adc
jmp
outs
pop
push
push
imul
jle
cmp
xor
call
pop
sbb
hlt
(bad)
or
xchg
in
ja
icebp
cld
sbb
add
xchg
fidiv
adc
jmp
aas
xchg
bound
scas
push
aam
sbb
bound
adc
es
and
cmp
add
xor
test
sub
ror
rcr
cli
mov
cmp
ror
fdiv
xchg
ins
fcomp
stos
mov
push
mov
rcr
or
pop
pop
in
xchg
xchg
inc
retf
cmp
jl
xor
cwde
sbb
rol
pop
int
xchg
jmp
movs
pop
adc
jp
out
or
ins
jae
imul
pop
jno
loopne
pop
mov
out
inc
or
inc
push
mov
adc
sub
xor
mov
or
cmp
je
push
ins
sub
icebp
leave
movs
mov
push
mov
scas
mov
mov
jmp
jl
sub
mov
and
in
inc
sub
push
push
ins
in
loopne
pop
sub
ret
inc
outs
into
or
cmp
jno
stc
xor
int
push
add
mov
stos
dec
xor
jg
or
test
aam
dec
mov
sbb
push
jnp
push
xor
xor
sbb
rcr
dec
movs
push
icebp
jno
mov
dec
lea
gs
mov
(bad)
push
and
xor
mov
fs
imul
sub
jmp
jecxz
test
sub
adc
int3
pop
sbb
and
or
cwde
mov
mov
add
add
jg
(bad)
push
dec
or
in
lea
sbb
xor
cmc
mov
rcr
imul
inc
xor
push
or
cdq
cmp
ins
jns
or
dec
dec
mov
ins
hlt
retf
js
add
(bad)
mov
inc
fs
mov
sbb
rcr
aas
xor
stos
cmp
jae
and
or
sub
sbb
mov
hlt
lock
jle
imul
ja
(bad)
lea
jmp
push
lock
cmp
add
inc
lds
add
jg
fwait
ja
outs
lods
jns
mov
push
mov
jbe
sahf
adc
in
mov
ret
not
xlat
aad
xlat
cli
(bad)
fdivr
mov
cld
fcomp
dec
jnp
movs
out
out
jmp
inc
inc
dec
mov
out
or
pop
jp
mov
add
add
and
(bad)
loop
jmp
xor
ds
cmp
xor
aas
mov
and
mov
aam
inc
inc
std
mov
int
bound
(bad)
pop
(bad)
pop
xchg
mov
stos
adc
mov
int
push
jne
push
or
scas
test
cdq
xchg
scas
sub
sbb
push
push
inc
jno
ss
rcl
mov
in
dec
push
movs
leave
sub
fst
push
cmps
addr16
mov
jne
nop
pop
jl
outs
add
fwait
dec
jg
mov
jl
push
push
mov
xor
add
in
sub
retf
or
adc
jmp
or
mov
leave
popf
add
movs
lock
lahf
adc
pop
pop
adc
(bad)
and
outs
push
cmp
sti
iret
test
mov
pop
jb
push
mov
xchg
in
enter
outs
inc
cmp
daa
int
and
fist
cld
int
pusha
test
and
std
push
xor
loopne
sub
pop
xor
xor
and
stos
mov
stos
ret
xchg
aam
mov
cdq
add
lea
sbb
test
movs
mov
cmc
jecxz
scas
lds
(bad)
das
out
push
mov
dec
push
retf
call
pop
stos
repz
lods
shl
fmul
pop
sub
mov
neg
cmp
bound
test
and
push
test
stc
lods
and
out
mov
add
adc
icebp
adc
mov
rol
and
cmp
(bad)
sar
dec
mov
loop
and
and
push
scas
imul
dec
lods
out
ja
and
xchg
pop
retf
pop
scas
mov
adc
add
gs
in
into
sbb
xchg
pop
push
pop
mov
mov
pop
test
movs
push
idiv
cmc
scas
inc
add
ins
and
mov
outs
adc
jge
sti
sbb
xchg
push
je
add
ret
movs
or
jns
repnz
inc
sbb
or
mov
fdivr
push
xlat
mov
cmp
mov
pop
fdivr
fs
push
scas
lea
or
cmc
pop
lock
xchg
jns
lea
pop
aaa
int
mov
fdiv
cmp
dec
xchg
dec
lods
cmp
push
mov
jnp
xchg
test
ficom
(bad)
lahf
(bad)
into
lods
xchg
ja
sub
pop
data16
ins
jnp
lahf
mov
or
xor
or
rol
add
imul
cmp
jle
sub
mov
imul
mov
xor
(bad)
data16
fcomp
ins
push
inc
ds
jb
and
add
out
mov
sub
push
xchg
mov
jg
jb
out
dec
int
jo
cmp
js
jb
loop
mov
xchg
mov
mov
mov
add
jecxz
rcr
or
lock
ror
adc
sub
jns
add
div
fwait
and
in
rcl
add
repnz
dec
into
les
fnstcw
ret
mov
aas
inc
pop
dec
call
push
xor
xor
lds
dec
rcl
sub
shl
inc
xchg
fistp
jae
pop
ret
imul
pop
sub
and
mov
out
and
sbb
jns
fisubr
fisubr
xchg
jge
cmp
and
std
and
mov
icebp
mov
dec
mov
pop
popf
pop
mov
dec
retf
mov
lock
mov
in
clc
jae
mov
in
mov
fwait
icebp
test
adc
dec
push
je
stos
ficomp
push
ret
lock
leave
call
ret
or
(bad)
mov
sbb
dec
cmps
popa
stos
ss
je
mov
xchg
call
inc
inc
cwde
pop
adc
jne
out
in
add
fcom
inc
or
call
xchg
mov
mov
pop
int
or
or
gs
adc
cmps
cmp
pop
xchg
fimul
dec
mov
push
outs
call
xchg
adc
mov
fwait
jmp
jg
xchg
pminsw
mov
mov
sahf
dec
jae
lods
shl
jns
xlat
dec
inc
(bad)
dec
pusha
ret
jnp
lock
or
or
mov
das
mov
push
es
dec
xor
inc
out
fs
cli
iret
wrmsr
mov
test
jg
call
mov
loope
ds
into
dec
clc
fdivp
or
push
sub
sub
bnd
cmp
ss
pop
cli
mov
xor
mov
and
icebp
int3
xchg
mov
in
jl
or
fld
icebp
daa
jnp
popf
xchg
cli
mov
(bad)
push
pop
popf
bound
repz
mov
sbb
inc
pop
pop
xchg
mov
jp
imul
cmps
mov
les
(bad)
push
cmp
mov
(bad)
mov
sti
vpcomw
push
aaa
ror
retf
fistp
mov
and
pop
push
mov
pop
jno
pop
pop
adc
arpl
sub
jg
into
js
(bad)
jl
(bad)
fldcw
loopne
iret
xlat
retf
ins
add
cld
push
rcr
dec
push
push
jbe
(bad)
je
mov
jmp
push
les
retf
mov
pop
clc
aas
test
mov
dec
sub
fnsave
push
pushf
and
in
outs
data16
iret
jg
cmp
sub
(bad)
js
jae
test
ins
shl
outs
mov
xchg
les
int3
jge
jbe
mov
in
sbb
add
into
jnp
pop
ja
xchg
add
pusha
and
inc
popf
repz
loopne
ret
sbb
sub
aam
mov
xchg
inc
mov
(bad)
stos
push
cmp
test
fwait
call
xor
cmps
fbstp
xor
jle
dec
push
popf
popf
clc
xchg
in
in
jmp
repz
sbb
lahf
call
pop
mov
(bad)
dec
mov
push
and
ficom
inc
xchg
dec
fldenv
out
adc
jmp
pop
add
or
dec
adc
in
in
(bad)
xchg
arpl
sub
dec
enter
ds
mov
cmp
clc
mov
arpl
(bad)
sub
addr16
dec
mov
int
dec
sbb
mov
add
imul
mov
shl
xchg
or
xchg
jb
xchg
ficomp
or
in
sar
arpl
scas
dec
loopne
jbe
and
mov
into
inc
ins
push
imul
pop
or
pop
add
repz
sbb
jp
repnz
push
mov
xchg
sub
add
loopne
lds
push
adc
inc
pop
loope
addr16
mov
inc
ret
mov
inc
in
mov
xchg
popa
test
mov
jo
inc
test
adc
repz
xchg
sbb
aas
(bad)
clc
push
mov
aas
les
lahf
les
rcr
movs
dec
mov
adc
xchg
out
lea
daa
jns
in
mov
mov
cld
imul
in
mov
xor
(bad)
out
fist
hlt
or
add
sbb
bound
xor
xor
call
scas
pop
adc
jno
pushf
mov
adc
sbb
in
push
(bad)
retf
mov
lods
loope
cmps
inc
xchg
mov
sub
mov
aas
adc
push
mov
push
imul
push
and
lea
adc
push
(bad)
push
mov
sub
xchg
setbe
lods
pushf
lods
loopne
outs
dec
(bad)
ss
ret
loope
pop
sbb
lods
pop
xchg
or
in
aad
adc
dec
std
loop
or
call
loopne
inc
outs
test
daa
out
aaa
pop
push
push
mov
mov
mov
push
repnz
mov
ret
cmps
loop
cmpps
xor
sahf
daa
cmp
stos
add
out
je
push
std
cwd
sub
ins
cmp
lahf
jnp
push
xor
push
and
test
adc
sahf
jb
mov
jno
push
aad
movs
mov
push
sub
lea
mov
ins
pop
int
cmp
pushf
xor
or
cmps
or
mov
pop
imul
adc
add
or
inc
sub
(bad)
outs
xor
loope
cmp
jmp
call
popf
cmp
ret
inc
aas
imul
adc
aaa
xchg
pop
ds
nop
jl
mov
add
sub
mov
xchg
inc
jnp
sbb
out
pop
jnp
mov
or
dec
daa
fimul
out
fwait
mov
out
ror
nop
sub
iret
sub
fwait
aam
and
inc
and
sbb
cli
sub
div
loop
scas
xor
cmp
jp
pop
sub
mov
and
cmps
es
push
(bad)
lea
cmp
sub
pop
bound
and
cmp
cmps
jno
jbe
(bad)
or
outs
push
push
and
test
fs
int
mov
cdq
xor
imul
jge
std
pop
push
xchg
daa
sub
faddp
jae
cmps
jecxz
jb
es
mov
popf
rol
add
into
idiv
test
int3
cmp
test
frstor
xor
dec
cmp
sub
xchg
xor
sbb
inc
mov
movs
mov
push
mov
(bad)
int3
repnz
mov
pop
ret
call
mov
push
stos
fnstenv
jmp
imul
inc
xor
jle
pushf
aad
mov
adc
ror
and
or
cdq
xlat
shl
push
ja
and
adc
pop
test
sub
jp
iret
add
das
push
mov
mov
xchg
or
retf
push
adc
leave
mov
adc
sub
mov
sti
mov
adc
mov
dec
int
pop
aad
mul
dec
ja
mov
mov
int
jle
(bad)
xor
pop
(bad)
fisubr
not
sbb
clc
jns
daa
int
xor
sbb
ins
mov
adc
repz
and
mov
jo
mov
push
in
xchg
inc
mov
call
push
xchg
cmp
pusha
and
movs
sahf
mov
ret
xchg
div
jecxz
into
retf
ficom
loop
leave
mov
push
test
cmps
mov
loop
xchg
adc
outs
mov
cli
lahf
dec
sahf
stc
pop
mov
add
rcr
add
lock
int
daa
fwait
je
stos
cmp
leave
and
mov
fimul
les
popa
fdiv
loopne
or
test
sti
fistp
fs
mov
js
add
push
add
pop
inc
loop
enter
xchg
cmps
ds
xchg
push
retf
mov
test
inc
xor
neg
stc
icebp
stos
cmc
mov
je
or
cdq
(bad)
sbb
imul
clc
jno
popa
in
adc
test
mov
mov
in
imul
mov
dec
pop
mov
mov
icebp
dec
adc
popf
sbb
enter
xchg
shl
rcr
push
pop
xchg
add
xchg
int3
stc
enter
cmps
add
ds
pop
cli
dec
(bad)
or
pop
push
or
nop
ss
mov
and
xor
lock
stos
int
sbb
cmp
and
repnz
pop
cmp
ror
xor
push
cld
fsubr
push
stos
cmp
enter
jns
sbb
xor
out
cmp
jp
xchg
shl
in
lods
dec
popa
cdq
adc
ret
push
test
xor
mov
ret
arpl
(bad)
retf
adc
icebp
add
popf
retf
adc
push
xchg
sub
shl
cli
sub
add
inc
jmp
(bad)
cmp
aad
(bad)
mov
scas
stc
nop
fmul
loopne
xchg
aaa
sar
pop
sar
aad
imul
repz
cmp
neg
daa
or
xor
outs
sar
repz
push
and
cmps
pop
mov
clc
shl
add
icebp
pop
xchg
adc
push
xor
mov
sub
and
in
xor
push
push
pop
mov
pusha
pusha
push
int3
fisttp
in
imul
clc
aaa
pop
push
xchg
jnp
call
iret
mov
psllq
aas
or
cmp
fwait
(bad)
cmp
and
inc
dec
pop
xchg
cmp
mov
fcom
add
cmp
das
pop
dec
mov
jb
clc
and
adc
sbb
lds
mov
es
adc
cmps
push
xor
stc
push
mov
repz
push
xchg
sbb
push
(bad)
bound
ins
push
test
cmps
adc
or
xlat
repnz
jns
and
cwde
or
scas
(bad)
jo
popa
mov
and
xlat
hlt
cmp
push
cmp
and
scas
idiv
es
fmul
mov
out
add
test
stos
jp
dec
retf
(bad)
aam
movs
jns
pop
pushf
mov
adc
jecxz
jns
int3
mov
cmp
sar
xor
mov
scas
adc
(bad)
dec
aas
mov
jecxz
mov
lea
ss
aas
add
xchg
xor
xor
push
inc
cmp
dec
mov
inc
sbb
mov
inc
call
xchg
int3
outs
xchg
jmp
outs
sub
sub
jmp
repz
sbb
shr
dec
dec
fs
mov
mov
inc
cmp
pop
ss
ss
inc
mov
and
adc
jns
xchg
out
mov
lahf
daa
inc
movs
inc
jb
in
mov
inc
push
adc
xchg
add
adc
out
mov
cmps
jns
bound
cmc
aas
inc
jae
dec
clc
mov
mov
jmp
sub
inc
cdq
ins
lods
iret
cmp
push
fnsave
enter
xor
mov
jnp
xchg
mov
imul
cld
mov
les
fldenv
and
js
ss
aaa
dec
out
add
mov
out
pop
mov
push
in
ss
inc
inc
push
sub
sbb
js
stos
pop
js
dec
and
fwait
fs
xchg
push
xchg
xor
fst
test
lahf
jb
icebp
stc
repnz
and
test
sub
daa
xchg
jnp
stos
add
test
push
sbb
repz
outs
sbb
push
mov
or
nop
rcl
pop
sti
cli
push
push
push
adc
push
fld
and
rol
dec
inc
pop
or
test
cmp
jb
dec
inc
cmp
scas
repnz
(bad)
dec
cli
mov
bound
pop
cmp
jmp
cdq
sbb
jg
(bad)
fsubr
dec
sub
loope
cmps
es
sub
in
outs
scas
xor
leavew
sub
in
leave
enter
mov
loopne
enter
sbb
and
das
loop
jb
loop
dec
(bad)
int
mov
adc
or
sbb
jae
leave
mov
std
bound
repnz
pop
mov
hlt
mov
or
add
jo
sbb
rcl
jl
(bad)
lahf
lods
pop
or
inc
dec
rcl
leave
or
aam
cld
pop
sbb
mov
pusha
xchg
and
jo
sub
xor
leave
adc
or
loop
fsubr
xor
push
imul
xor
je
stos
jb
dec
(bad)
fdiv
(bad)
jl
mov
adc
aaa
mov
scas
leave
stos
cmp
mov
jnp
cld
jp
sub
popa
pushf
cmp
xchg
sub
or
jae
and
icebp
and
popf
pop
xor
jl
pop
out
stc
mov
adc
jle
pop
ds
mov
retf
mov
push
aaa
adc
cmps
inc
sbb
mov
fwait
inc
xchg
adc
test
sbb
xor
lahf
scas
repz
push
and
push
test
es
pop
jmp
(bad)
jg
(bad)
mov
call
sbb
loopne
lods
outs
sar
fs
stos
(bad)
in
sbb
inc
les
pop
mov
sub
mov
push
clc
jb
ins
adc
xchg
in
call
ds
lahf
xor
sub
or
dec
and
mov
jmp
add
stos
mov
fdiv
out
iret
test
push
or
fistp
xchg
inc
ss
movs
rcl
or
cmp
sbb
and
fld
aaa
bound
retf
xchg
fwait
sbb
mov
lods
dec
std
pop
add
mov
dec
neg
loopne
and
jno
xchg
push
shr
leave
loope
ja
xchg
dec
xchg
xchg
ins
and
dec
xor
push
loop
outs
sbb
or
les
jp
mov
fcomp
fsubr
xchg
mov
scas
adc
jno
xor
(bad)
mov
jns
lods
sbb
mov
outs
add
movs
push
call
in
pusha
aaa
aaa
push
(bad)
adc
mov
movs
cmps
pusha
push
mov
aad
enter
sahf
pop
jle
fs
sbb
leave
dec
mov
pop
pop
push
and
lahf
xor
retf
pop
dec
xor
push
jns
stos
push
mov
aad
iret
fmul
mov
fidiv
(bad)
or
sahf
xlat
inc
xor
pop
and
mov
mov
aam
adc
popa
jl
addr16
mov
inc
fs
and
in
aad
dec
pop
push
xor
cmps
fisub
cld
sub
xor
push
or
add
mov
jb
sbb
pushw
es
adc
mov
retf
mov
cdq
adc
test
stc
sub
shl
ret
rcr
cmps
shr
mov
xor
mov
daa
aam
sbb
mov
imul
lea
aam
inc
mov
ficomp
dec
sbb
repnz
in
jns
sbb
inc
push
sti
js
out
fwait
test
test
lods
and
or
pop
gs
out
add
lods
or
xlat
jp
clc
jbe
cmp
ret
pusha
jne
scas
ja
ret
retf
out
lahf
push
std
push
jecxz
int3
xchg
add
xor
pop
inc
loop
or
div
adc
fwait
sti
jecxz
sub
push
test
xchg
call
shr
ins
lock
jecxz
inc
sub
cmp
fisttp
cmc
push
pushf
popf
push
push
cmp
movs
dec
loop
out
or
or
push
std
das
cdq
popa
xchg
ds
push
jbe
enter
jg
fcmovbe
inc
push
inc
xchg
lods
dec
or
adc
sub
xadd
mov
lock
ret
cwde
je
aaa
jl
(bad)
pop
mov
imul
push
add
nop
pop
aam
nop
cs
lahf
cmp
pop
mov
out
pop
repz
or
bound
(bad)
aad
loopne
cdq
and
jb
push
dec
mov
add
xor
and
stc
es
and
fcomp
bound
mov
push
imul
push
cmp
cmp
test
inc
jmp
mov
cmps
mov
or
mov
ror
scas
mov
cmp
push
std
mov
in
or
fcomp
jle
fild
jnp
ficomp
retf
es
mov
mov
gs
imul
arpl
scas
ret
addr16
or
out
loopne
xor
ja
jmp
sub
fs
jmp
push
clc
iret
mov
loopne
ja
sbb
call
cmp
das
add
jno
popa
mov
gs
in
fist
add
(bad)
arpl
push
rcr
sub
psrlw
aam
xor
int
ins
rcr
(bad)
adc
(bad)
fstp
imul
mov
icebp
xchg
ins
fisub
mov
inc
mov
ror
push
in
lds
adc
add
cs
xor
cmps
std
adc
aam
loop
out
jp
call
es
sbb
pop
dec
or
mov
cmp
test
xor
fcmovb
test
aam
pop
pop
fs
js
xchg
mov
cmp
arpl
arpl
mov
cmps
dec
xchg
nop
xlat
out
pop
push
cmps
cdq
mov
xchg
add
fs
adc
inc
mov
jmp
sbb
ins
xchg
sbb
ret
and
sbb
aaa
fimul
inc
test
icebp
loope
dec
leave
push
daa
out
inc
ss
int
les
pop
or
lea
add
movs
inc
fadd
loopne
repnz
les
sbb
adc
add
in
bound
pop
out
push
xchg
imul
mov
mov
or
and
loope
fdiv
mov
mov
adc
xor
in
daa
push
adc
inc
out
mov
sbb
es
enter
ret
test
mov
hlt
ret
push
cmp
sahf
(bad)
pushf
sbb
xchg
pop
add
sbb
and
or
and
add
jns
or
call
mov
jle
mov
push
dec
jle
mov
mov
mov
jmp
and
sbb
cmp
or
ja
pop
adc
jnp
jmp
lock
dec
and
sbb
mov
cli
int
pop
fimul
pop
sti
das
stc
popa
lock
fmul
dec
iret
clc
nop
enter
out
xor
sub
iret
ss
(bad)
and
aaa
hlt
out
inc
cmp
bound
sub
call
lds
fisttp
inc
daa
ss
fwait
stos
add
mov
hlt
inc
dec
lock
sti
setge
or
popa
stos
push
test
(bad)
(bad)
in
mov
add
xor
xchg
jge
ss
dec
adc
jmp
push
js
push
cmp
push
das
mov
repnz
mov
stos
movs
sbb
add
dec
(bad)
lock
and
cmps
push
adc
rcl
and
fsubp
daa
cmc
movs
cs
and
sar
ret
retf
adc
outs
push
mov
(bad)
pop
clc
cmps
mov
push
push
retf
test
out
(bad)
shl
movs
push
mov
ins
and
push
and
scas
arpl
push
pop
sub
int
rcr
sbb
jmp
lods
fdiv
arpl
push
popa
xor
arpl
enter
(bad)
mov
cmp
cmp
jl
add
adc
add
xor
in
cmps
mov
fistp
retf
pop
dec
pop
xor
jmp
sbb
icebp
inc
fldlg2
aam
out
call
sub
mov
sub
mov
in
add
push
lahf
ja
cmp
mov
es
sub
inc
push
inc
pusha
movs
test
dec
test
mov
and
mov
test
out
push
push
xchg
pop
shl
push
push
mov
mov
movs
stc
fs
mov
or
shl
jle
push
in
movs
pop
push
dec
mov
cmp
test
adc
pop
mov
or
aas
push
pop
pop
clc
cmp
fbstp
lahf
shl
rcr
and
aas
dec
das
retf
fcom
xor
out
loope
ret
daa
sbb
and
js
and
or
add
mov
stos
add
rcl
into
call
aam
outs
jnp
scas
(bad)
(bad)
popa
inc
xchg
xor
out
lods
push
sub
mov
mov
push
sbb
xchg
mov
fcom
or
sar
jl
fmul
sti
push
shl
retf
sub
sbb
mov
xchg
ss
jae
cmp
test
xchg
ror
dec
add
push
lods
mov
lock
pop
pusha
jb
test
leave
or
and
ins
cmp
adc
das
jae
fwait
pop
jg
fmul
push
pop
stos
and
or
pop
mov
out
add
mov
push
xchg
loop
mov
jne
dec
lds
add
inc
bt
xor
adc
pusha
sbb
mov
ror
sti
add
or
fsubr
gs
cmp
mov
cmc
test
loopne
daa
pop
aam
mov
xor
and
mov
sbb
arpl
push
sub
mov
pop
ds
sub
push
lock
or
pushf
add
push
mov
or
inc
xor
sub
mov
mov
push
test
ins
sub
add
push
and
test
dec
and
mov
mov
lds
les
or
mov
sahf
push
call
mov
into
hlt
mov
outs
shl
xor
adc
pushf
mov
pop
dec
add
in
stos
cli
ds
test
push
mov
data16
xchg
call
idiv
loope
xor
mov
outs
or
inc
push
mov
movs
leave
cld
(bad)
push
adc
pop
dec
stc
(bad)
int3
aad
jmp
dec
inc
push
dec
lods
jge
outs
push
jmp
mov
ret
shl
or
shl
imul
push
push
jg
jb
push
jae
(bad)
aaa
inc
jmp
addr16
sub
imul
les
cmp
or
xchg
cmc
lock
dec
fs
mov
pop
pop
nop
or
(bad)
pop
movs
jmp
push
sbb
fcmove
or
sbb
push
cwde
add
icebp
test
das
mov
faddp
pop
dec
aas
cdq
push
and
or
xchg
inc
xor
adc
pop
outs
sbb
jns
xchg
sbb
sbb
mov
outs
int3
hlt
test
cdq
daa
sub
jmp
and
addr16
xchg
jo
cmp
sbb
push
outs
mov
pop
dec
ret
test
adc
test
scas
and
mov
cmp
sub
cmp
sub
cld
or
cmp
in
call
leave
add
popa
pop
je
repnz
mov
ins
mov
sub
xor
loope
ret
aas
mov
cmp
add
mov
and
jmp
xchg
out
cmp
mov
or
add
gs
dec
mov
add
call
adc
dec
mov
inc
jb
mov
outs
sub
inc
and
cmc
jne
lods
outs
pusha
inc
sbb
push
jmp
cdq
(bad)
gs
in
jmp
lods
int3
pop
aas
arpl
or
and
mov
inc
adc
rcr
inc
and
and
cmp
test
lods
int3
mov
mov
test
push
(bad)
add
fstp
mov
or
scas
mov
dec
aad
push
test
loope
sub
inc
imul
sbb
pop
stos
bound
ins
jne
movs
and
sub
lods
mov
ja
rol
mov
dec
movs
xlat
ds
sbb
cmp
inc
push
dec
ror
push
sub
mov
jb
push
cli
lock
sbb
dec
mov
iret
clc
loopne
xlat
inc
in
mov
and
aam
dec
stc
add
loope
fldenv
jg
lea
jle
cmp
mov
les
add
push
ins
sbb
icebp
pop
repnz
lods
in
(bad)
out
jl
gs
in
xlat
pop
jmp
stos
fcom
xchg
pop
inc
rcl
mov
pop
dec
pop
das
into
cs
and
sbb
fstp
call
and
xchg
mov
mov
outs
stos
mov
sbb
aad
nop
cmp
pusha
xor
add
jle
in
fcmovu
cmp
out
mov
js
cmps
push
cdq
(bad)
mov
or
imul
aas
mov
fdivr
dec
sub
out
jp
(bad)
jnp
sbb
mov
fwait
xor
sbb
fld
in
xchg
bound
mov
push
fcomp
jle
xor
int3
je
data16
pusha
xchg
sbb
and
in
cli
test
push
cld
sbb
icebp
jle
push
xor
lahf
pop
push
inc
dec
ds
sub
xchg
ret
stos
fadd
mov
fcmove
mov
pop
ja
pop
nop
int3
mov
stos
ins
(bad)
(bad)
stc
repnz
or
mov
xchg
jb
cmc
and
xchg
cmp
adc
cmc
xor
nop
push
(bad)
fcom
test
hlt
aaa
fchs
mov
out
push
ret
jo
fldl2t
mov
push
mov
sub
aam
movs
rcl
mov
mov
les
ins
mov
or
inc
xchg
jg
gs
outs
push
int
mov
inc
(bad)
dec
or
or
fwait
add
out
mov
sub
call
adc
scas
call
xor
dec
(bad)
xor
ja
mov
pop
stos
add
pop
jmp
sub
pop
pop
repnz
mov
hlt
iret
stc
std
sub
cmp
pop
aas
cmp
push
inc
push
adc
int3
push
test
loop
xor
mov
retf
mov
mov
(bad)
nop
sbb
mov
rdtsc
and
push
imul
xor
in
das
in
xlat
fistp
inc
jmp
fadd
idiv
or
mov
jns
and
pusha
leave
fist
gs
shr
fstp
test
sub
inc
je
xchg
sbb
push
stc
cmp
push
shl
dec
out
stos
lea
mov
pop
shl
jno
shr
clc
jno
dec
bswap
cdq
mov
xchg
adc
xchg
push
xchg
jle
sub
pop
push
sub
fisttp
cmp
or
rcl
adc
mov
adc
mov
pop
adc
(bad)
xor
fsubr
jmp
jnp
sti
imul
add
fcom
dec
mov
xchg
fld1
leave
sub
jnp
fs
jns
leave
addr16
mov
je
sti
retf
xor
mov
js
in
pop
push
sub
jg
repz
adc
sub
xchg
push
lods
pusha
xlat
push
dec
mov
outs
dec
outs
jle
jae
jne
lods
repz
pop
pop
shl
xor
mov
adc
push
ja
dec
stos
cdq
movs
cmp
or
leave
jle
mov
mov
sub
cmc
shr
sub
mov
cmp
(bad)
cld
stc
ror
or
dec
jns
pop
and
dec
xchg
into
mov
das
jg
fsubr
and
and
inc
xchg
mov
dec
repz
cld
shl
mov
push
aam
mov
push
test
or
inc
scas
xchg
dec
sbb
iret
jmp
scas
lods
fwait
and
and
cmps
xor
or
clc
fld
mov
and
in
(bad)
sub
sub
push
jmp
popf
xor
nop
push
pushf
into
push
adc
push
ret
ret
cmps
call
xchg
jno
test
stos
xrelease
ins
adc
jmp
fnstenv
cwde
push
stos
sbb
xor
das
add
popa
xchg
inc
mov
mov
repz
sub
(bad)
cmp
(bad)
test
xor
sahf
stc
ficom
mov
cmp
push
or
sbb
push
xchg
data16
xor
push
cmp
mov
adc
mov
fisubr
loop
dec
test
pop
imul
dec
jp
fbstp
mov
mov
pop
ja
jg
jmp
push
imul
std
cdq
movs
out
(bad)
sti
xchg
dec
dec
(bad)
pusha
inc
(bad)
mov
push
or
pop
cmp
jmp
cmc
and
(bad)
movs
test
out
imul
pop
fiadd
loope
sahf
(bad)
xor
fucom
push
xchg
xchg
or
cmp
jmp
cmp
mov
lahf
mov
sub
adc
pop
cdq
dec
push
ret
cs
pushw
repnz
es
nop
sub
or
jp
mov
push
jecxz
add
inc
add
imul
mov
out
stc
inc
jns
and
sub
dec
outs
xor
jne
xchg
icebp
push
stos
sbb
jmp
lea
sbb
shr
push
mov
xchg
stos
sbb
jae
nop
int
popa
push
inc
pop
in
sbb
in
cmps
jp
push
mov
aas
addr16
rcl
push
into
jmp
clc
push
retf
or
dec
scas
or
push
and
rcr
movs
lods
cmp
call
fsubrp
popa
cdq
mov
lds
les
xlat
jo
or
div
retf
mov
sbb
adc
cwde
stos
repnz
xor
pop
or
adc
or
popa
lahf
mov
call
xchg
(bad)
bound
ret
push
das
inc
dec
mov
dec
int3
cmp
idiv
or
outs
aaa
inc
add
and
add
pop
cmps
inc
sub
mov
out
in
out
jp
mov
fild
icebp
(bad)
adc
iret
retf
neg
dec
stc
iret
call
xor
mov
(bad)
add
jbe
rol
mov
scas
jnp
ror
push
mov
in
jns
lock
or
in
xchg
or
sub
mov
ds
cld
inc
xor
and
adc
stc
jo
dec
(bad)
sti
add
in
in
pop
mov
xor
and
adc
cdq
cmp
lea
es
(bad)
jmp
fwait
data16
scas
dec
or
pop
hlt
popf
dec
cmp
popf
or
and
mov
movs
xchg
imul
jne
pop
(bad)
into
mov
(bad)
popf
and
jae
cld
or
not
out
adc
xor
pop
sub
xchg
lds
in
push
cmp
and
sub
cmp
mov
icebp
inc
push
pop
sbb
or
mov
cmp
std
imul
dec
ja
push
int3
fdivp
pop
dec
cwde
xlat
xchg
pop
loope
mov
daa
adc
cmps
or
xchg
es
aam
ret
iret
pop
inc
add
mov
lea
das
inc
mov
mov
cli
test
fisubr
lahf
xor
sbb
xchg
adc
ins
jns
and
in
out
ret
rcr
pop
pop
mov
in
cmps
les
and
dec
lea
mov
in
rol
add
add
ret
inc
cs
xor
mov
std
test
pop
call
mov
into
push
test
sbb
inc
lahf
in
in
inc
(bad)
sub
mov
leave
and
(bad)
in
aas
daa
xchg
or
stos
adc
xchg
cmp
sub
mov
push
mov
das
and
sti
es
shl
in
mov
hlt
and
mov
and
jbe
mov
dec
(bad)
xor
mov
and
fnstenv
inc
in
jp
mov
clc
test
jl
xchg
mov
mov
sub
mov
je
ins
inc
dec
stos
xchg
sub
and
scas
fisttp
mov
dec
cmc
inc
xor
into
jmp
push
rcr
mov
leave
mov
push
sub
pop
dec
daa
mov
jmp
push
pop
sub
inc
pop
sub
stos
outs
sbb
div
cs
push
mov
ret
xchg
mov
xor
imul
out
(bad)
into
call
stc
jbe
and
jge
popf
fadd
js
into
daa
cmps
mov
scas
sub
jbe
sub
popa
mov
(bad)
or
nop
sar
aad
adc
adc
pop
cmp
stos
jno
jae
push
mov
jbe
mov
mov
in
jae
pop
and
fcom
shl
mov
jecxz
dec
ror
sbb
push
test
xor
jge
les
scas
xor
or
mov
mov
pop
ins
sub
dec
cmp
les
lods
sub
sub
stc
dec
stc
cli
inc
xchg
ror
aam
ja
dec
xor
sbb
fcom
fstp
pop
dec
(bad)
adc
cmc
loopne
or
movs
fdivp
jns
sbb
jbe
mov
pop
or
sbb
repnz
imul
cmp
mul
mov
push
xchg
shl
fcmovnbe
push
push
test
xrelease
inc
jne
or
sahf
int
or
leave
pop
xchg
xor
(bad)
sar
fadd
pop
sar
dec
or
stos
jbe
cmp
mov
retf
bound
inc
push
repz
call
push
lock
sbb
test
aas
mov
fwait
pop
or
lock
or
cmp
push
dec
push
mov
loop
or
scas
jecxz
cmp
cmp
adc
fwait
sbb
add
mov
cmp
rol
inc
loop
pop
add
movs
(bad)
jmp
add
push
mov
mov
jle
pop
or
fldenv
dec
scas
popa
and
xor
fist
jmp
outs
fnstcw
xor
fist
mov
test
xor
aad
mov
xchg
shl
push
push
aaa
sub
into
mov
and
repnz
div
(bad)
sbb
mov
jne
into
in
mov
adc
push
clc
xchg
adc
sub
pop
arpl
fdiv
push
hlt
shr
adc
out
out
stc
xchg
jne
shl
mov
ja
mov
mov
jle
cmp
adc
push
mov
and
popa
jge
mov
in
xchg
inc
jns
jo
mov
push
stos
loope
cmp
push
jmp
cwde
mov
xor
pop
lea
pusha
cmp
sub
stos
outs
mov
fdivr
loope
jae
pop
outs
outs
jbe
xchg
dec
cmps
call
add
rcl
nop
jmp
mov
inc
sahf
or
cmp
cmp
add
sub
add
push
imul
pop
cmp
xlat
jmp
popf
inc
cwde
mov
fidiv
jle
aam
jmp
dec
ins
test
iret
xlat
push
inc
xchg
int3
loopne
push
push
mov
sbb
dec
push
cli
sub
push
lahf
jge
and
mov
jne
scas
adc
rcl
hlt
clc
jno
push
scas
mov
or
sub
movs
lods
shr
in
cmps
or
or
shl
(bad)
out
cmps
xchg
sbb
loope
lods
xor
shl
cmp
fwait
and
inc
mov
daa
xchg
movs
rol
lea
add
rcr
ja
pushf
dec
xor
std
call
jne
mov
fmul
ror
mov
call
xchg
pop
(bad)
adc
mov
xchg
and
jo
inc
movs
cmc
cdq
mov
and
jg
les
test
xor
push
mov
push
push
jne
mov
jecxz
mov
or
fcmovne
push
js
push
aas
pop
mov
pop
scas
mov
xor
and
inc
jbe
pop
fs
inc
jnp
mov
ret
inc
sbb
xchg
cwde
bound
fst
inc
fisubr
adc
push
scas
dec
inc
(bad)
push
push
retf
lahf
fbstp
stc
push
stos
jo
push
(bad)
aam
mov
outs
mov
mov
stc
cmc
cli
mov
fs
jns
push
(bad)
mov
repz
cs
xchg
inc
xor
or
fldpi
mov
xchg
sbb
iret
lds
mov
je
mov
out
mov
mov
xchg
jbe
add
stc
push
add
mov
std
lods
cmp
in
inc
mov
sub
xchg
cli
jb
adc
mov
cmp
imul
hlt
or
or
push
sahf
cmps
popa
neg
push
cmps
jne
and
addr16
push
stc
sbb
push
dec
loope
rcl
out
arpl
sbb
aas
fimul
or
add
and
out
push
xchg
gs
in
dec
sbb
in
pusha
out
mov
jae
icebp
cmps
fcomip
ds
imul
and
sbb
ds
call
(bad)
inc
sar
add
lods
dec
mov
xchg
mov
test
inc
aas
fdiv
(bad)
aad
sbb
mov
mov
fsubr
mov
int3
mov
dec
dec
lahf
sub
dec
jns
and
sub
pushf
popa
xchg
aad
cmp
push
add
adc
cmp
ja
cmp
jg
sbb
repnz
mov
inc
push
out
minps
adc
jle
shl
push
movs
pop
retf
inc
sbb
lods
scas
rol
jmp
dec
cdq
cmps
fmulp
mov
sbb
sub
pusha
rcr
sbb
imul
loopne
xchg
ins
test
adc
sub
or
jo
and
xor
pop
lods
adc
lahf
stos
sbb
in
push
std
sbb
pop
or
imul
loopne
or
jae
push
add
ins
pop
rol
int
inc
jb
scas
cmp
or
shr
cwde
xchg
dec
lea
fdiv
sbb
hlt
ret
repnz
and
sbb
movs
dec
xor
mov
adc
pop
rol
add
dec
daa
test
jl
jmp
mov
fimul
push
xor
pop
adc
pop
adc
les
or
enter
mov
stos
mov
mov
dec
pop
inc
sbb
pop
mov
scas
rcl
mov
mov
ror
dec
aaa
adc
lahf
outs
fcom
mov
or
out
pushf
aas
icebp
div
pop
fist
ret
mov
repnz
adc
and
push
iret
add
nop
jnp
pushf
xchg
les
sub
push
cli
and
sbb
cmp
and
mov
adc
sbb
mov
aaa
jle
retf
push
in
sub
int
movs
xchg
pop
fsub
add
mov
xor
arpl
pusha
xchg
cmps
test
add
imul
sahf
jecxz
cli
dec
sub
pcmpgtw
pop
daa
ret
mov
(bad)
test
arpl
push
cmps
out
ss
dec
dec
ret
loopne
out
je
fld
dec
cdq
pop
cld
cmp
cld
stc
sbb
enter
cli
hlt
jmp
push
push
lahf
mov
push
dec
mov
inc
adc
cmp
fwait
pop
pop
mov
mov
cmps
push
ret
mov
xchg
xchg
jmp
sbb
jecxz
fcom
jno
xchg
sub
outs
sub
cld
dec
ss
push
lea
imul
jecxz
push
ins
cld
pop
out
shr
fucom
stos
scas
sbb
aam
push
jo
movs
adc
jl
cs
icebp
das
cmc
or
lock
jl
mov
cdq
adc
cli
xchg
cmova
leave
lds
lods
and
stos
add
ficom
xchg
sub
mov
jl
and
xchg
mov
movs
pop
(bad)
mov
pushf
iret
sub
loope
mov
sub
mov
sub
bound
outs
xor
or
dec
push
xchg
jmp
mov
fild
inc
jp
dec
push
cmp
and
mov
nop
xchg
in
enter
(bad)
popf
sti
add
mov
outs
or
jecxz
push
dec
lods
jl
(bad)
fwait
inc
sbb
sahf
pop
loope
push
sar
adc
sar
aam
ret
inc
adc
es
inc
stos
jne
mov
push
stos
iret
add
mov
fwait
call
scas
adc
das
or
or
xor
sub
jmp
sbb
pop
arpl
sahf
clc
mov
sub
mov
dec
in
cs
cmp
mov
push
call
shl
mov
mov
in
mov
(bad)
addr16
(bad)
jmp
hlt
sub
jge
pop
pop
xor
enter
sbb
in
imul
in
xor
call
(bad)
stos
xor
(bad)
and
sub
push
pushf
std
stos
outs
loopne
fstp
sahf
outs
xor
sub
mov
cli
and
push
ficomp
lock
daa
push
push
adc
movs
repz
mov
iret
pop
pop
xor
rcr
push
and
add
ficom
stos
jno
cwde
loope
and
ret
cmp
nop
mov
cmc
pop
mov
cmps
inc
es
or
ds
pop
xor
lock
sub
cwde
inc
pop
iret
in
fs
loop
arpl
add
jg
jns
jmp
sub
bound
test
push
push
dec
fisttp
xchg
(bad)
add
dec
in
aad
or
(bad)
fidivr
ret
std
mov
add
xor
mov
push
push
cdq
ss
inc
std
ret
xchg
aad
cdq
push
mov
test
xlat
call
imul
adc
dec
ds
push
dec
push
inc
adc
mov
cmp
repnz
sbb
pushf
(bad)
outs
mov
xor
mov
in
cld
in
jl
paddusb
popa
call
daa
sbb
popa
mov
push
dec
out
pop
pop
dec
xor
add
mov
repnz
mov
aam
and
les
mov
(bad)
jns
mov
(bad)
adc
xlat
addr16
outs
rcl
stos
(bad)
std
loop
add
(bad)
pushf
jp
dec
mov
add
in
inc
aam
iret
sti
cmps
fcomip
adc
dec
mov
pop
je
push
fisttp
leave
test
pop
shl
movs
and
mov
or
dec
xor
add
cli
dec
in
movs
adc
shr
lods
inc
cmps
jmp
xchg
xor
jp
pop
movs
cdq
es
pusha
stc
jmp
xchg
pop
aam
dec
sbb
pop
nop
push
xchg
ja
add
shl
cs
jle
sbb
or
xchg
aas
scas
in
pop
int3
jbe
mov
ds
pop
dec
dec
jnp
fmul
inc
pop
lahf
ss
lahf
mov
mov
lods
add
mov
cmp
sbb
push
imul
call
js
scas
dec
dec
inc
shr
add
jae
xor
sub
push
push
jmp
nop
movs
push
pop
jmp
shr
sbb
mov
or
sahf
mov
jns
test
movs
add
adc
stos
push
cmps
jb
pop
fmul
jae
shl
stos
(bad)
nop
or
(bad)
lock
scas
xchg
movs
cs
(bad)
add
and
sar
xor
inc
hlt
jecxz
mov
fdivp
cmp
frstor
sbb
les
sub
(bad)
call
ret
lock
pushf
outs
mov
lds
test
xchg
scas
xor
jb
cs
adc
jmp
cmp
(bad)
movs
leave
sub
mov
jno
mov
sbb
sbb
aam
(bad)
rcr
mov
in
pop
mov
retf
or
pusha
test
cli
mov
xchg
push
jge
fisttp
cli
ret
push
jb
sar
inc
xchg
fiadd
pop
ins
int
push
xor
out
ret
loopne
dec
inc
add
daa
fs
dec
jp
lds
push
mov
not
lea
adc
cmp
sub
pop
mov
cmps
cmp
pminub
jmp
(bad)
and
scas
ss
rcr
mov
mov
inc
rcr
xor
test
sbb
mov
and
scas
jbe
call
cmc
call
xchg
jmp
popf
add
cmps
add
add
pop
pop
lods
cmp
and
adc
mov
(bad)
xchg
xor
stos
adc
adc
add
loop
rcr
add
mov
pop
loope
(bad)
in
push
xlat
adc
imul
pushf
push
push
inc
jb
jb
pushf
fs
imul
xchg
sub
dec
mov
stos
mov
adc
imul
ficomp
xchg
push
xchg
mov
xchg
ret
xchg
div
or
push
or
add
lods
test
fisubr
mov
loope
push
call
cmc
iret
xor
jle
mov
mov
loope
stc
mov
jo
outs
movs
int3
bound
cwde
sbb
push
pop
jb
xor
xlat
int
imul
ins
das
push
jmp
icebp
scas
repz
mov
sub
mov
adc
and
sub
lahf
data16
hlt
sub
push
and
and
lahf
pushf
inc
lahf
add
sub
retf
pop
movs
enter
or
out
push
and
dec
xchg
arpl
retf
adc
cmps
mov
and
xor
push
add
mov
push
add
jp
dec
aad
test
and
jae
leave
mov
or
call
ficom
iret
ss
(bad)
xor
cmp
shr
sbb
iret
aaa
push
popf
fnstcw
pop
cmp
aaa
fild
mov
xchg
(bad)
aad
test
mov
push
xchg
pop
outs
punpcklbw
(bad)
call
gs
and
stc
dec
inc
loop
xchg
stos
or
jns
jno
push
pop
in
daa
or
fistp
and
test
mov
ins
mov
rcr
mov
sub
xor
(bad)
pop
cli
pop
sub
adc
cdq
clc
jle
in
push
push
test
sub
sbb
arpl
lds
(bad)
jmp
daa
aam
aam
pmaxub
arpl
jno
and
cmps
add
mov
mov
push
(bad)
jp
pusha
ret
xchg
mov
push
xchg
push
ret
cli
adc
fild
fild
sub
inc
movs
sahf
rol
push
dec
jecxz
xchg
pop
pop
(bad)
retf
lock
mov
cdq
xchg
je
or
iret
or
dec
int
lock
dec
mov
pop
inc
fisubr
pop
xchg
lock
stos
std
ins
sar
push
(bad)
mov
mov
sbb
cmp
inc
jne
arpl
cs
inc
lds
jmp
enter
jg
cs
js
mov
iret
xchg
outs
xor
inc
mov
sbb
frstor
cmp
inc
sbb
ins
sbb
int
push
pop
div
adc
sbb
pop
or
sub
pop
jo
imul
push
pop
push
and
jns
pop
or
xchg
std
stc
ins
adc
pushf
adc
aas
cli
mov
push
push
mov
sahf
xchg
aas
(bad)
adc
inc
pop
xchg
stos
enter
add
xor
cmp
(bad)
add
jo
adc
pop
mov
and
push
lock
push
cld
cmp
movs
inc
fmul
xlat
cdq
cmp
add
and
scas
mov
pop
enter
stc
and
pop
push
(bad)
ja
add
inc
(bad)
(bad)
je
jbe
mov
pop
mov
and
stos
ror
mov
out
push
div
inc
dec
data16
sahf
ficom
push
push
test
popf
scas
ja
sub
and
aaa
(bad)
pop
push
bnd
push
push
dec
das
mov
(bad)
jl
call
mov
inc
addr16
adc
mov
outs
sub
loope
push
call
leave
outs
int
xchg
mov
movs
gs
or
xchg
cli
(bad)
xor
shl
adc
or
inc
adc
adc
sbb
in
out
movs
(bad)
pushf
or
lods
repnz
adc
jle
les
push
xor
inc
xlat
cdq
mov
xor
push
pop
ds
cmp
or
mov
repnz
sar
sbb
sbb
sub
gs
hlt
rol
std
cmp
push
bound
mov
arpl
pop
xor
(bad)
iret
jo
lods
sbb
aad
mov
cmp
repnz
imul
xchg
add
pusha
sbb
aad
xor
ss
mov
inc
movs
ret
xlat
and
ret
fst
test
test
imul
pop
cwde
cmp
movs
inc
or
mov
jne
xor
dec
lds
pop
adc
test
pop
leave
lods
lock
sahf
inc
xor
out
jl
xchg
push
add
in
sub
pusha
xchg
mov
ficom
cmp
sub
inc
mov
stc
sbb
sbb
dec
mov
call
mov
mov
imul
stc
sahf
retf
jns
mov
aas
das
test
jge
inc
xchg
push
sub
out
mov
repz
inc
inc
popf
push
fcom
(bad)
sbb
jo
cmp
ss
test
and
call
xchg
call
mov
pop
pop
xchg
cdq
ins
std
jb
test
mov
xor
add
push
inc
push
pop
jbe
xchg
rcr
mov
push
push
ror
mov
imul
dec
arpl
cmp
jbe
ins
xor
pop
std
nop
movs
sbb
test
bound
add
dec
test
aam
lahf
faddp
test
adc
sahf
shl
cmp
mov
dec
pushf
cdq
cmps
add
mov
push
test
(bad)
retf
jg
rol
daa
lock
fs
sahf
(bad)
or
dec
pop
cli
xchg
ds
rcl
ins
xchg
pop
leave
loopne
push
add
mov
fdivr
aaa
push
or
mov
ins
inc
scas
mov
aas
inc
inc
aam
jecxz
xchg
pop
cli
test
inc
dec
inc
or
mov
je
imul
mov
jno
movs
push
and
cmp
popa
mov
pop
pop
jno
mov
rcl
repnz
xchg
outs
(bad)
fs
pushf
rcl
mov
lds
iret
pushf
adc
lahf
jle
fidivr
mov
rcl
iret
jno
mov
test
dec
or
adc
loope
iret
mov
cmps
scas
sahf
cmp
loop
xor
imul
mov
out
clts
xor
push
shr
adc
mov
mov
fwait
je
mov
ja
mov
add
dec
mov
sbb
mov
fild
jecxz
jle
inc
das
jmp
jns
clc
xor
int
in
pop
mov
mov
push
out
xlat
jb
cmp
fnstenv
xchg
aad
mov
aas
mov
pushf
pop
jmp
pusha
leave
sti
xchg
js
fs
call
adc
jp
mov
ror
iret
sub
inc
int3
mov
sbb
sub
into
lea
(bad)
push
jecxz
dec
add
dec
je
stos
ror
sub
adc
(bad)
imul
stos
data16
cmps
inc
ds
mov
shrd
mov
xor
pop
mov
fs
dec
sti
popa
(bad)
rcl
xchg
and
jge
push
and
popa
add
mov
int
cmc
mul
(bad)
xor
and
pop
add
pushf
jnp
pop
push
cmp
cmp
aaa
add
mov
dec
std
jnp
push
dec
push
les
hlt
mov
adc
push
rol
or
mov
out
int
ror
repnz
xchg
aaa
mov
iret
cmp
aam
fwait
inc
lods
cs
cld
imul
pop
lds
inc
lock
gs
xchg
jns
hlt
loope
push
xor
jne
scas
lods
cmps
mov
stos
int3
jne
xchg
xor
lods
add
lahf
clc
ins
push
mov
mov
sbb
aad
inc
aaa
xchg
hlt
push
cwde
mov
mov
cwde
push
dec
out
lds
and
test
xlat
retf
push
mov
sbb
lahf
call
xor
aas
cmps
xor
add
mov
dec
fidiv
mov
or
push
ins
scas
loopne
jp
lahf
xchg
push
and
je
out
adc
xchg
lods
add
cld
push
call
cmp
or
or
leave
scas
or
out
xchg
inc
pusha
shr
(bad)
inc
lea
ja
scas
jg
loop
sub
xor
mov
ja
lods
xchg
addr16
xchg
mov
sar
es
push
test
jp
sub
pop
cmp
dec
adc
xor
repnz
add
repz
(bad)
(bad)
(bad)
rol
retf
inc
cli
leave
mov
or
rcr
jmp
xor
or
fisub
je
cli
out
jno
lock
pushf
into
jb
adc
pop
stc
arpl
scas
(bad)
sbb
lea
dec
push
cmps
in
inc
adc
addr16
sub
icebp
add
cmp
xor
ss
js
dec
lahf
(bad)
loope
push
test
mov
nop
sbb
jle
lock
out
and
jb
popf
and
lahf
fs
out
jo
outs
push
dec
dec
clc
(bad)
aaa
pop
cmp
push
add
push
cmps
cmp
arpl
push
or
add
ja
das
mov
sub
pop
mov
jmp
ins
loopne
iret
mov
or
sbb
pushf
xchg
pushf
repz
mov
imul
or
add
out
sub
ss
jmp
rcl
dec
scas
arpl
and
mov
cmp
inc
lock
(bad)
pop
(bad)
xchg
or
mov
or
sahf
xlat
cs
add
iret
push
and
mov
push
das
out
imul
int3
xor
jge
inc
mov
adc
call
nop
xor
in
add
xchg
fist
fcmovnb
in
pop
sub
adc
mov
pop
inc
pop
rcl
ret
pop
cmps
mov
push
xlat
imul
mov
call
adc
ret
mov
ror
fsub
mov
test
mov
ja
and
std
sbb
imul
dec
sbb
call
je
xchg
mov
pushf
push
and
out
ret
sub
dec
nop
in
stos
sub
dec
sub
inc
pop
dec
mov
inc
and
outs
xchg
jmp
pop
aad
lds
std
mov
xchg
mov
(bad)
and
and
stc
arpl
outs
shl
clc
sar
mov
push
dec
adc
out
mov
fmul
mov
fwait
iret
arpl
and
jg
popf
stc
ins
test
out
fs
sub
lods
mov
push
mov
pop
aaa
(bad)
leave
xchg
out
cmp
cmp
hlt
mov
jo
adc
enter
fnstcw
xor
inc
pop
aaa
(bad)
sbb
mov
mov
gs
mov
outs
mov
ret
mov
dec
and
xlat
in
xchg
inc
mov
stos
out
(bad)
outs
mov
fmul
dec
push
pop
mov
mov
dec
sub
push
(bad)
mov
or
loopne
fidivr
stos
loope
int
shl
push
push
dec
add
push
cmp
add
xchg
loopne
jmp
inc
add
movs
lock
fisttp
fsub
dec
pop
shr
or
leave
inc
cmps
std
dec
test
repnz
in
jle
mov
fldcw
mov
es
sahf
sub
andps
jmp
repnz
xor
inc
hlt
add
xchg
hlt
scas
mov
push
or
cdq
imul
cmp
(bad)
push
cwde
or
mov
push
adc
pop
adc
outs
xlat
ds
test
outs
or
ds
mov
mov
imul
sbb
nop
jle
aad
aaa
push
retf
in
or
dec
retf
(bad)
jle
pop
push
xor
push
fs
into
repz
imul
and
mov
pop
pop
iret
test
sahf
xchg
xchg
outs
cmps
outs
(bad)
cmps
or
lea
rcr
or
imul
mov
mov
mov
scas
gs
sbb
(bad)
adc
mov
or
xor
dec
or
cmp
adc
sub
mov
or
jnp
dec
arpl
adc
lahf
cdq
mov
(bad)
enter
cmp
jle
xchg
pop
or
cld
mul
add
div
push
adc
icebp
inc
jb
fsubr
xor
repnz
(bad)
mov
scas
cmp
sahf
mov
pop
test
mov
sbb
inc
movs
or
fidivr
mov
pop
inc
jne
jl
test
das
mov
add
xchg
adc
cli
sub
popf
cld
jmp
inc
mov
(bad)
jno
(bad)
into
dec
leave
dec
popf
mov
jg
popf
mov
push
mov
loope
sti
mov
xcrypt-ctr
je
cmp
outs
aaa
das
stos
aad
cmp
enter
mov
aaa
xchg
movs
cwde
mov
sbb
xor
neg
fdiv
loop
mov
es
adc
ror
sbb
ficom
mov
mov
mov
mov
mov
aam
daa
jle
sbb
leave
bound
mov
mov
imul
jne
fcos
lods
mov
enter
test
add
sbb
push
xchg
jnp
add
int
(bad)
push
jo
add
loopne
ret
frstor
add
and
enter
mov
inc
adc
sbb
bound
in
into
mov
xor
call
stc
scas
adc
inc
ja
int3
mov
inc
or
add
mov
cmp
pop
or
xchg
pop
mov
sub
jp
mov
adc
fstp
pop
test
pop
adc
test
in
and
sbb
outs
fsubr
clc
pop
push
popf
push
test
outs
jnp
mov
mov
es
mov
into
aad
push
scas
fsubr
enter
xchg
ins
(bad)
retf
mov
push
or
mov
xor
jmp
ror
int
loopne
dec
stos
sub
in
mov
xchg
loopne
push
mov
sbb
fmul
std
out
or
sub
imul
popa
jo
mov
sbb
pop
mov
out
sbb
sbb
test
into
adc
mov
pop
daa
push
and
inc
and
out
(bad)
inc
inc
ins
pop
imul
add
sbb
xlat
stc
fldenv
movs
cmp
leave
shl
push
jns
movs
adc
clc
pop
out
pop
or
xlat
mov
sbb
lds
imul
inc
cmp
adc
lea
push
cmp
cmp
sbb
cmp
adc
out
mov
movs
cld
lods
add
cmp
call
mov
sub
lock
xchg
test
jmp
sbb
inc
inc
(bad)
mov
mov
(bad)
fcomip
cmps
mov
and
movs
pop
push
out
lahf
call
mov
adc
jecxz
imul
ds
push
jnp
jo
retf
and
lock
bnd
add
pop
test
mov
dec
sahf
sti
outs
jae
sbb
sbb
js
arpl
or
and
push
xchg
sbb
mov
xchg
cmp
cmp
in
push
faddp
mov
and
push
loop
dec
mov
sbb
sahf
adc
stos
mov
inc
jo
add
mov
add
pop
in
or
mov
xchg
mov
lahf
dec
into
lahf
xchg
mov
int
mov
pusha
push
jecxz
pop
jecxz
xchg
jno
(bad)
and
adc
(bad)
push
pop
jp
mov
daa
cmp
sub
imul
lea
movs
mov
mov
retf
cwde
push
mov
xor
stos
jmp
adc
popf
jbe
jle
ret
scas
cmova
fsub
mov
(bad)
mov
bound
sub
retf
push
add
pushf
push
(bad)
xchg
es
push
imul
jecxz
xor
xor
(bad)
or
cmps
scas
push
inc
out
mov
mov
fdiv
js
(bad)
repz
push
add
push
fcmove
fs
cmps
sub
xrelease
(bad)
sbb
loopne
stos
dec
int
pop
inc
inc
sti
dec
inc
push
or
imul
pop
cdq
mov
inc
dec
imul
mov
repnz
jmp
sub
and
in
outs
fistp
out
xor
mov
dec
in
and
and
mov
inc
pop
into
and
pop
lods
adc
mov
or
cmp
sub
fisubr
or
(bad)
mov
mov
and
mov
in
pop
das
repnz
mov
repnz
push
inc
mov
aam
push
xchg
fstp
fcom
cdq
imul
in
sub
add
and
push
(bad)
push
mov
in
outs
sbb
jnp
imul
mov
retf
scas
dec
pusha
jnp
lea
aad
push
jp
sub
and
test
jnp
xchg
das
push
cwde
aaa
retf
push
movs
test
rcl
inc
(bad)
sbb
movs
aam
xor
xlat
mov
pop
cdq
adc
adc
or
ret
dec
push
repz
push
xchg
jno
pushf
daa
jbe
addr16
or
fndisi(8087
xchg
movs
test
add
xchg
ins
or
imul
(bad)
xor
sub
xor
cmc
add
push
stos
(bad)
hlt
xchg
dec
retf
call
and
js
fnstcw
popa
cmc
out
adc
imul
outs
adc
hlt
and
or
jb
jb
jb
lock
add
jno
push
sbb
pop
sbb
or
rcr
sbb
xchg
xchg
fwait
dec
push
mov
leave
mov
push
cmps
les
and
push
or
pop
ds
loopne
(bad)
sub
mov
xchg
mov
rcl
sbb
xor
gs
neg
cmp
mov
cmc
xlat
or
xchg
popa
lods
mov
retf
int
or
pop
inc
xchg
and
add
adc
shr
add
push
iret
cmps
popf
les
cmp
inc
bound
cs
push
push
mov
test
push
add
sbb
sar
jp
loopne
or
fcomp
push
inc
(bad)
repnz
test
bound
imul
dec
cli
cwde
xor
(bad)
int3
inc
(bad)
cdq
das
adc
out
lock
xor
movs
or
adc
(bad)
mov
in
loop
mov
jecxz
cwde
out
jo
sub
jp
pop
jb
cwde
push
pop
push
retf
inc
xchg
ror
popa
int3
cmp
fs
retf
mov
jo
mov
mov
cmp
fld
cmps
mov
lods
jb
xchg
(bad)
fwait
in
sbb
fild
add
fiadd
nop
aad
cwde
mov
int
add
jae
adc
test
jnp
push
inc
ficomp
int3
dec
imul
mov
mov
punpckhbw
inc
ret
out
add
push
jbe
jne
out
test
sbb
adc
jmp
xor
pop
leave
cwde
xchg
ror
mov
daa
xchg
jno
(bad)
int
mov
add
cmps
mov
xchg
inc
xor
mov
adc
jno
mov
(bad)
loope
mov
(bad)
jmp
call
movs
inc
les
(bad)
push
cmps
pop
jbe
jnp
sub
or
xor
push
imul
popa
retf
inc
push
retf
(bad)
mov
adc
ja
outs
jp
lds
iret
sub
adc
jnp
push
mov
xchg
sub
dec
xor
xchg
mov
inc
xchg
or
mov
mov
mov
sbb
mov
sti
sub
cwde
jnp
js
jmp
aad
cld
inc
les
dec
addr16
xchg
pushf
mov
scas
jg
dec
lds
rcr
cmp
mov
or
mov
lea
add
or
les
sub
cmc
imul
xchg
jo
xor
clc
xor
ror
xor
pop
nop
and
test
arpl
fisttp
jns
stos
mov
sbb
adc
mov
jbe
popa
xor
cdq
inc
sub
or
jo
nop
sahf
mov
in
adc
scas
jnp
enter
clc
inc
out
or
mov
cli
jnp
push
dec
jne
push
push
sub
mov
cld
dec
lock
push
xchg
lahf
(bad)
xor
sub
stos
jnp
(bad)
ss
sub
imul
mov
push
not
lods
in
xchg
dec
pop
fmul
cmp
cmp
std
add
fstp
sub
les
mov
inc
xchg
scas
mov
ins
shl
nop
imul
ficom
call
retf
add
inc
fstp
inc
fcomp
or
xlat
xor
push
jmp
rol
adc
shr
mov
mov
(bad)
leave
hlt
xchg
ss
mov
into
stos
push
inc
push
mov
push
dec
pop
push
out
add
ja
adc
xrelease
addr16
xchg
rol
mov
into
in
sub
jno
sbb
out
(bad)
jo
jecxz
out
cmc
aaa
mov
inc
mov
adc
or
dec
add
std
dec
sbb
sbb
lds
les
sahf
jg
xchg
push
inc
jo
loope
sub
sbb
pop
adc
jno
mov
pop
nop
or
sbb
and
sar
xchg
xchg
mov
jge
pop
jnp
cmps
xor
xor
push
ins
fimul
and
leave
aaa
sbb
lock
cmc
xchg
mov
ret
jecxz
stc
dec
sub
inc
fadd
pop
test
or
sub
jb
sbb
aam
out
rol
scas
or
pop
stos
jae
xchg
push
mov
in
ds
mov
hlt
lea
sbb
aas
push
dec
cmp
sbb
or
push
cdq
pop
aas
fwait
ins
out
mov
adc
hlt
ss
sar
outs
stos
xchg
ins
aad
in
aam
add
in
pop
ins
les
jle
cmc
call
mov
jmp
les
lock
or
and
iret
cmp
pop
mov
and
test
imul
out
retf
call
mov
add
in
mov
aam
mov
repnz
(bad)
loope
xor
xor
mov
jg
cli
das
mov
xchg
cmp
dec
shl
movs
enter
xchg
fs
cmp
int3
cmp
std
mov
sar
xor
cdq
test
fwait
jb
xor
scas
sti
cmp
dec
mov
adc
and
mov
pop
mov
and
shr
leave
iret
loope
daa
push
mov
cmp
sub
stos
mov
push
push
retf
cs
adc
mov
jge
clc
or
inc
dec
out
pop
out
call
jae
mov
pushf
mov
mov
mov
int
stc
mov
adc
out
push
jb
push
(bad)
aam
pushf
push
repz
sub
sar
mov
in
hlt
or
and
pushf
adc
les
push
test
pop
mov
inc
aas
xchg
cmp
ja
sbb
pop
mov
mov
adc
pop
lds
ins
xchg
and
and
shl
inc
sub
and
stc
cmc
mov
sahf
xchg
sub
xchg
test
and
or
into
fs
push
sub
int
jg
cmp
ror
cmp
mov
shl
enter
xor
pop
cmp
jmp
cmps
inc
(bad)
ret
mov
cmp
cld
push
push
hlt
rep
ror
std
in
faddp
mov
(bad)
cmp
dec
add
(bad)
hlt
mov
jg
jp
call
sbb
mov
fistp
arpl
mov
and
sbb
jns
ins
imul
(bad)
int3
jecxz
(bad)
fst
mov
retf
add
cmps
fldenv
adc
xchg
pop
pop
shl
cmp
xor
inc
aas
int3
cmp
das
mov
mov
xchg
fdiv
in
scas
jno
sub
add
sbb
mov
fwait
push
pop
call
mov
iret
mov
mov
mov
mov
retf
jbe
mov
movs
adc
pop
jo
cli
ret
xchg
retf
movs
mov
dec
das
mov
push
jmp
xor
or
ins
lock
push
cmp
iret
pop
ja
mov
sub
pop
push
cmps
stc
sub
jp
xchg
cs
mov
outs
or
stos
dec
adc
call
mov
add
sub
bound
adc
sub
and
xor
jmp
rol
and
cmps
fs
rep
inc
mov
or
rcr
add
inc
adc
movs
sbb
js
mov
xor
shl
bound
add
inc
jmp
push
aas
fst
fldcw
loope
popa
call
int
test
pushf
or
int
dec
imul
push
dec
or
lahf
mov
mov
and
xor
fistp
mov
mov
mov
sbb
sub
jne
cdq
cmps
xchg
adc
dec
inc
mov
xlat
jae
push
mov
ret
out
into
sahf
push
aas
loopne
mov
pusha
lock
mov
cmps
imul
push
ja
push
push
loop
lea
jmp
outs
hlt
mov
push
je
out
daa
psubusb
cmp
sub
das
les
inc
cmp
and
aad
mov
xor
or
sub
vzeroall
push
pusha
push
adc
or
push
push
and
xchg
call
mov
lock
pushf
xchg
push
mov
xor
arpl
in
pop
cdq
rcr
sbb
mov
nop
push
pop
lods
pop
adc
xlat
out
leave
cmp
cmp
(bad)
loopne
xchg
push
sbb
jno
int
out
mov
test
sbb
(bad)
cmc
cmp
fmul
movs
or
in
xlat
xchg
mov
xlat
hlt
push
mov
and
aad
sub
mov
adc
(bad)
mov
or
ss
dec
inc
pop
mov
push
or
jle
push
addr16
pop
ins
push
sbb
fwait
aad
nop
sbb
shr
es
and
cli
cld
mov
sbb
rol
in
ja
xor
inc
imul
out
dec
retf
(bad)
pop
sub
mov
call
fs
cmp
jne
daa
sahf
xor
(bad)
in
cli
cmp
imul
jp
cmc
pop
popf
pop
cmp
popf
sti
mov
xchg
adc
(bad)
and
mov
push
adc
jecxz
das
mov
ret
mov
shl
and
cmps
jb
mov
dec
dec
mov
add
push
jae
aas
xchg
in
xchg
out
jmp
xchg
pusha
or
int3
repz
mov
nop
mov
xchg
jg
les
jg
push
adc
mov
inc
ja
pop
test
pop
ins
test
sbb
out
jno
push
fwait
xor
xor
push
aas
js
pop
xor
call
inc
mov
adc
dec
call
adc
xchg
and
xchg
in
sahf
sar
aaa
or
mov
imul
xchg
imul
jle
adc
push
adc
inc
(bad)
ins
scas
sbb
out
je
mov
aas
test
inc
hlt
sbb
sbb
adc
test
add
add
jl
pop
nop
mov
arpl
push
sub
fdivr
cdq
pop
mov
aam
or
jnp
loopne
test
push
cmp
lea
(bad)
lock
push
daa
mov
jl
test
fsub
sahf
jecxz
scas
mov
sbb
sub
stos
imul
lock
push
adc
aad
test
dec
retf
ins
out
rcl
xor
and
lods
pop
les
jo
sub
das
mov
ret
mov
je
dec
inc
inc
fiadd
sbb
sahf
jmp
sub
int
mov
in
cli
push
adc
test
into
iret
or
iret
jnp
in
inc
sub
fwait
mov
adc
push
les
adc
cmovno
popa
movs
sbb
dec
push
das
mov
ds
call
adc
xchg
mov
inc
stos
jae
nop
adc
add
std
add
enter
addr16
push
mov
dec
mov
fxtract
or
call
mov
movs
repz
xor
mov
rol
(bad)
adc
hlt
scas
mov
sub
call
xor
(bad)
xor
push
outs
push
cli
inc
mov
ret
and
les
call
mov
jle
adc
sub
js
lods
inc
mov
jb
pop
cs
into
and
adc
mov
test
iret
pop
push
push
xor
fistp
push
pop
arpl
dec
sbb
add
and
movs
jbe
push
es
movs
mov
mov
mov
sar
sbb
cmps
inc
(bad)
cmp
cld
push
repnz
cmp
daa
dec
sub
adc
fisubr
outs
imul
pop
pop
xchg
mov
mov
inc
repz
xor
jbe
dec
inc
ficom
cmp
dec
mov
jmp
sbb
sbb
inc
cld
out
push
out
popa
stos
xchg
dec
dec
cmp
sub
and
es
daa
shl
and
xchg
dec
pop
and
sbb
fldenv
ds
sbb
test
lock
rcl
mov
cmps
int3
in
mov
jecxz
mov
push
mov
push
push
inc
adc
fild
jno
push
sbb
cli
fistp
pop
cmp
xor
sub
push
pop
adc
in
aaa
jo
dec
mov
fistp
sbb
sbb
das
jge
data16
std
mov
pop
or
sti
jle
jns
push
popa
mov
dec
imul
dec
cli
(bad)
sub
fiadd
aaa
shl
xchg
jo
test
retf
xor
xchg
pop
inc
mov
not
out
adc
push
or
(bad)
jno
inc
outs
mov
retf
dec
sub
pop
sbb
call
call
repnz
scas
fimul
imul
adc
aad
mov
adc
(bad)
or
dec
fcomp
call
xor
jne
icebp
pusha
jl
jmp
mov
aas
dec
cmp
cli
mov
sub
adc
sbb
jo
add
and
jne
xlat
push
pusha
stc
add
mov
les
add
inc
xchg
inc
cmp
test
outs
cmp
stc
or
std
xor
push
or
sub
setns
outs
lods
fst
mov
jge
add
push
dec
push
xor
inc
xor
xor
lea
call
ins
ret
rol
inc
mov
icebp
pop
inc
jns
into
or
sti
inc
jo
cwde
push
cmc
jns
inc
popa
addr16
adc
sbb
ret
stc
imul
fistp
cmp
jne
push
inc
pop
js
xor
adc
std
xor
or
shr
jnp
fnstsw
in
stos
inc
mov
in
jo
add
(bad)
outs
ret
mov
push
pop
fsub
add
fwait
into
pop
(bad)
repz
(bad)
mov
in
or
jae
test
popf
inc
cli
sub
iret
cmp
nop
ins
push
test
xchg
(bad)
and
es
mov
aaa
jo
sub
(bad)
int
inc
xlat
je
popf
sbb
mov
repz
mov
popf
aaa
and
push
push
jne
enter
icebp
ja
xchg
ja
shr
cli
push
inc
fisttp
inc
xchg
or
cmps
push
xchg
mov
pop
add
sbb
lea
sub
mov
cmp
jmp
sar
dec
or
inc
or
pusha
pop
cdq
dec
ds
into
cmp
jecxz
pop
data16
jp
xor
xchg
mov
int3
mov
fld
xor
out
mov
sub
scas
in
mov
mov
inc
or
xchg
addr16
mov
mov
sti
pop
aas
mov
stos
repz
in
repnz
jg
pop
sub
imul
add
arpl
push
int3
ret
ins
and
push
icebp
push
popa
inc
xor
jecxz
enter
mov
adc
dec
add
in
add
fadd
lahf
out
jo
mov
ret
js
mov
mov
mov
fnstsw
cmp
(bad)
jl
push
add
xor
add
fadd
ja
hlt
sbb
(bad)
ja
mov
pop
dec
jle
pop
mov
or
cmp
(bad)
iret
(bad)
push
push
xor
or
sbb
and
shl
pop
out
mov
xchg
fcmovu
stos
repnz
sbb
fs
cdq
inc
inc
sbb
push
mov
(bad)
js
in
push
mov
push
sbb
and
mov
ficomp
cmp
push
test
psllw
sbb
inc
sbb
push
movs
stos
xchg
ret
push
cwde
jg
adc
neg
mov
or
(bad)
sub
sar
into
call
movs
pop
iret
adc
sub
sub
xchg
cmp
(bad)
mov
mov
fdiv
xchg
mov
scas
fbld
xchg
push
mov
jo
mov
adc
fcomp
hlt
pop
push
cmp
pushf
mov
sbb
int3
pop
jnp
jle
push
push
pop
mov
ins
cmp
jle
sar
push
jp
adc
dec
add
xchg
into
adc
push
pop
out
inc
(bad)
aaa
mov
iret
jg
add
pop
mov
fld
sbb
mov
dec
or
mov
fld
sbb
jno
fild
inc
mov
sti
enter
dec
(bad)
lds
add
(bad)
js
out
ret
or
cmps
adc
mov
movs
mov
ins
sahf
(bad)
std
adc
mov
push
dec
mov
iret
ret
sub
ret
mov
pop
lock
jmp
inc
adc
vmwrite
xchg
movs
data16
call
call
push
mov
inc
or
xlat
jmp
aaa
mul
(bad)
adc
data16
(bad)
dec
jg
test
adc
mov
ins
cwde
ss
cmp
dec
std
es
into
push
clc
(bad)
jbe
xor
or
retf
push
adc
clc
dec
cmp
call
mov
inc
mov
jecxz
mov
sbb
sub
xor
push
cdq
mov
adc
pop
fisubr
into
xor
fstp
pop
xchg
mov
gs
dec
in
mov
cld
or
cmps
push
cmp
aaa
inc
out
dec
xchg
fisub
inc
(bad)
sub
loope
fst
inc
retf
aas
pop
pop
and
jns
rol
std
and
pop
inc
(bad)
gs
mov
cmps
clc
xchg
inc
pop
call
mov
jne
cmps
inc
sbb
(bad)
fisttp
cli
bnd
push
cs
push
movs
in
test
jno
ds
and
gs
xchg
dec
je
in
push
inc
mov
nop
outs
mov
sbb
sahf
and
jmp
shl
jno
inc
int
mov
out
add
dec
mov
inc
pop
lea
dec
outs
sbb
aas
mov
pop
sti
sahf
xor
stos
bound
inc
dec
or
push
mov
jne
cmp
xchg
mov
or
div
cmps
mov
cmp
scas
sub
iret
addr16
dec
jbe
xor
sub
add
pop
fadd
aas
jb
sub
loope
jmp
(bad)
aaa
retf
stos
mov
mov
or
sbb
mov
push
and
dec
xor
outs
jae
mov
dec
test
cmc
dec
pop
mov
iret
cli
pusha
outs
pop
sbb
(bad)
popa
les
ja
push
fsub
aaa
ret
pushf
fcomp
loope
sub
adc
ror
pop
mov
adc
retf
jle
scas
mov
mov
in
arpl
xor
and
cmps
mov
loopne
adc
mov
adc
ror
xchg
cmp
test
sahf
sub
mov
mov
xchg
mov
pop
movs
ja
out
mov
mov
mov
jl
ins
sub
add
cmp
outs
cmp
sbb
sbb
or
jo
add
in
fisttp
mov
inc
jg
sbb
cwde
xor
and
es
cdq
mov
sub
outs
movs
je
test
mov
xchg
push
and
sub
out
pop
popf
dec
pop
inc
(bad)
jge
mov
mov
aas
inc
idiv
dec
adc
mov
jno
xor
dec
stos
xor
mov
xchg
div
mov
dec
mov
pop
jmp
stc
sbb
cdq
scas
xor
jns
sti
mov
sbb
sbb
out
or
jo
dec
mov
pop
stc
jp
imul
mov
dec
adc
movups
sub
adc
lahf
outs
std
xchg
ret
pusha
mov
sbb
jb
cmp
aas
inc
adc
mov
repnz
or
jno
out
pop
leave
dec
mov
mov
xor
rcl
leave
inc
in
xchg
pop
dec
xor
shl
pop
pop
and
aam
xchg
sbb
out
mov
jnp
test
repnz
sar
loope
(bad)
in
push
movs
xlat
hlt
pop
js
rol
ror
pusha
test
cli
imul
sbb
jge
pusha
cmp
outs
inc
and
cmps
jge
imul
fisub
or
scas
xchg
mov
add
jno
cmps
add
(bad)
cli
outs
inc
out
scas
and
cmp
pop
idiv
xor
in
popf
fs
pop
sbb
push
imul
(bad)
cld
jmp
shr
and
adc
mov
sahf
nop
mov
push
jno
mov
inc
adc
and
lods
pop
add
mov
fdivr
inc
aaa
cmp
mov
jle
in
mov
mov
jne
sbb
das
xor
and
stos
and
push
jb
push
pop
mov
mov
pop
sbb
iret
dec
inc
shr
xchg
test
popf
inc
test
fstp
sahf
xchg
mov
rol
lea
xor
repz
xchg
fimul
push
push
inc
mov
imul
mov
ins
adc
inc
mov
test
dec
mov
call
push
ffreep
cmp
adc
nop
(bad)
fimul
pop
push
retf
jle
pop
cmp
sub
cmp
mov
sbb
dec
push
jne
popf
dec
adc
in
xchg
cmp
jns
lds
cli
fadd
push
xchg
or
ror
inc
retf
pop
jle
push
jne
add
stc
icebp
sub
xor
jmp
jle
jne
xchg
nop
cmps
and
leave
ret
sbb
and
inc
push
daa
push
sbb
cmp
repz
push
clc
or
lahf
mov
jne
loopne
out
adc
and
jmpw
dec
scas
jb
nop
addr16
xchg
aaa
and
outs
inc
retf
mov
sub
pusha
mov
fucom
adc
dec
rol
xlat
adc
leave
xchg
retf
mov
add
(bad)
mov
xchg
and
and
std
adc
inc
aad
cmp
push
lds
xlat
push
aad
sbb
and
jnp
jl
rcl
cs
and
push
cmp
xor
lea
sbb
or
pop
add
push
fisub
movs
cmp
leave
in
lahf
shl
lds
xor
pop
inc
or
test
mov
mov
frstor
adc
test
dec
cmp
sub
rcr
imul
cmps
push
paddusw
cs
mov
add
mov
pusha
push
jge
aam
fadd
cmp
daa
sar
enter
enter
sbb
shr
xchg
int3
movs
imul
(bad)
ja
push
jle
xchg
and
pusha
xchg
inc
sbb
or
repnz
aaa
movs
jl
(bad)
pop
mov
xchg
ret
cmp
shl
stos
xor
aaa
stos
cld
lods
popa
push
adc
iret
adc
xor
mov
mov
call
stos
cli
or
pop
jb
arpl
aam
inc
rcl
sahf
popa
adc
xlat
loope
xchg
add
mov
ret
outs
jecxz
dec
out
rcl
lahf
add
inc
in
sub
test
sub
mov
xchg
mov
loopne
and
mov
ja
repnz
adc
mov
or
lahf
push
pusha
mov
inc
inc
mov
sbb
aas
sub
and
jnp
add
adc
les
loope
ficomp
ja
cmps
std
jecxz
add
add
loop
int3
and
cwde
dec
pop
ja
jo
pop
lahf
pusha
jmp
clc
mov
and
nop
dec
fild
cmp
sub
mov
aam
call
das
icebp
scas
call
and
cmp
hlt
jmp
push
push
and
and
xor
sub
mov
and
adc
fist
add
retf
(bad)
xor
popf
mov
push
test
jns
inc
shl
xchg
jecxz
pop
jno
loopne
mov
in
mov
repnz
sbb
sbb
jg
fld
loope
shl
(bad)
stos
jp
in
jge
jp
out
cli
xchg
sbb
movs
and
adc
dec
(bad)
hlt
xchg
out
cmp
std
pop
inc
sub
inc
push
sahf
lods
in
dec
cli
sbb
inc
stos
fs
sub
jbe
pop
jno
jbe
int3
idiv
mov
and
daa
ffree
xor
lods
int3
push
fcomp
or
clc
loopne
jle
dec
pop
mov
push
ror
sbb
push
(bad)
cld
pop
outs
int
sbb
repz
retf
aas
xor
enter
mov
bound
lock
mov
rol
ins
sbb
fisttp
inc
add
xor
jne
jbe
test
aam
jp
verr
aas
outs
movs
mov
scas
scas
sub
cmp
ja
or
loope
rcr
call
nop
jns
fucomi
or
fwait
add
rcl
cwde
xor
scas
push
pop
(bad)
lods
cmp
mov
ds
mov
fisub
aam
sub
adc
shl
dec
int3
out
inc
std
and
jae
test
nop
inc
jecxz
je
cli
jp
aam
inc
sub
dec
out
loopne
cli
or
shl
movs
in
xchg
xor
inc
push
loope
cmp
pop
fsubr
xchg
sbb
xchg
in
xor
and
xchg
cdq
(bad)
fidiv
jp
mov
pusha
test
(bad)
cmp
retf
and
in
dec
scas
mov
xchg
cli
rcl
inc
adc
jp
jne
jne
sbb
gs
mov
mov
int3
inc
jo
stos
or
mov
ficomp
cmps
dec
mov
jb
fstp
xchg
mov
cmp
icebp
xor
ja
adc
adc
cmp
popf
pop
push
jl
pop
lds
fadd
xchg
mov
mov
push
data16
loope
inc
in
xor
add
and
sti
fs
les
push
ja
push
scas
sbb
sub
xor
rol
xor
push
jnp
xor
jecxz
xlat
adc
sub
xor
add
inc
loope
arpl
sar
mov
or
enter
out
inc
or
rol
pop
push
pop
or
clc
dec
out
mov
int3
mov
(bad)
push
movs
enter
adc
aad
push
jae
test
and
mov
jo
stos
cmp
adc
ins
dec
cmp
mov
idiv
out
iret
cmp
ret
jmp
(bad)
jnp
xchg
stos
outs
sub
cld
(bad)
not
jnp
jae
and
shr
outs
fcomp
(bad)
xchg
loope
out
fadd
por
movs
fld
cld
mov
hlt
adc
imul
das
jle
js
pop
mov
dec
lods
sub
push
sbb
fistp
(bad)
std
iret
dec
push
xchg
mov
ret
sbb
xor
and
xor
(bad)
std
loopne
das
mov
jge
push
shl
or
dec
out
lods
and
sub
pusha
adc
xchg
shr
dec
bound
fwait
pop
or
in
dec
jo
add
pop
retf
inc
add
fimul
leave
ins
jle
xchg
out
in
retf
dec
cmps
scas
inc
cdq
push
loop
imul
inc
outs
and
pop
adc
(bad)
iret
dec
popa
fwait
sub
scas
pop
sub
icebp
push
jl
out
ret
nop
imul
sub
ret
retf
daa
dec
(bad)
and
(bad)
mul
cmp
add
lods
pop
aam
cmp
int3
test
pop
mov
je
add
sbb
inc
test
push
or
repnz
or
jno
mov
adc
add
(bad)
mov
(bad)
out
mov
jno
enter
out
les
push
je
cmp
loopne
jp
add
push
xchg
sbb
mov
mov
call
add
das
mov
xchg
sub
adc
mov
in
push
(bad)
fcomp
sar
mov
sbb
hlt
in
mov
ss
jmp
cmp
arpl
clc
fsub
pop
and
sbb
cmp
jg
mov
jp
addr16
lods
and
pop
cmps
pushf
sbb
mov
push
ds
test
fwait
icebp
jae
ficomp
outs
nop
mov
sar
mov
fcmove
sti
out
scas
cwde
(bad)
sbb
(bad)
out
sub
das
aaa
rcl
lds
xchg
call
mov
inc
pusha
mov
sub
push
loope
pusha
jne
sub
js
imul
lods
sbb
and
mov
jo
fmul
sub
xor
outs
popf
idiv
xor
dec
shr
ins
sti
push
movs
mov
call
cdq
and
jg
xchg
jg
xchg
mov
les
jb
or
cli
not
ins
mov
cmps
sbb
nop
pop
mov
cwde
add
push
test
jl
jae
pop
xchg
dec
jns
scas
dec
mov
imul
icebp
mov
or
pushf
xchg
sub
fisttp
dec
ss
push
(bad)
jp
cmps
mov
hlt
ja
aas
jecxz
xor
jnp
jo
xchg
dec
or
(bad)
adc
lock
(bad)
lea
and
inc
pushf
sub
xor
pop
push
popa
jg
pop
xchg
adc
fxch
fcomp
lods
hlt
retf
repnz
stos
pop
out
inc
sar
push
sub
repnz
inc
jne
dec
or
adc
xor
pcmpeqb
inc
fmul
sahf
jp
outs
(bad)
adc
daa
cmps
dec
call
jo
push
inc
mov
add
push
test
out
sub
and
and
mov
mov
shl
(bad)
test
xor
dec
add
test
scas
inc
pop
or
and
sub
pop
outs
lds
adc
mov
xchg
aas
out
pop
(bad)
movs
sub
int3
pop
gs
jmp
sti
xchg
and
ror
rcr
shl
adc
lahf
mov
into
call
ret
sbb
ins
das
sbb
mov
repz
xchg
cmps
fisttp
ins
jb
jecxz
xchg
dec
lock
jl
mov
adc
inc
cwde
cmp
mov
push
mov
(bad)
je
push
push
in
push
in
dec
fst
leave
push
push
(bad)
sub
(bad)
or
or
les
add
sub
inc
(bad)
or
call
sahf
mov
xlat
es
dec
scas
xchg
(bad)
pushf
rcl
(bad)
aas
sti
xlat
lahf
aam
lock
ja
stos
fbstp
fsubr
fild
cmc
js
in
daa
push
sub
call
or
jbe
std
stos
dec
or
loopne
mov
cdq
dec
ret
and
js
std
add
std
nop
es
imul
cmp
xlat
int3
mov
jg
mov
int
xchg
stc
out
(bad)
cld
bound
fcmovb
jnp
(bad)
icebp
mov
add
xchg
sbb
mov
sti
push
cs
add
mov
mov
call
rcl
inc
sbb
imul
mov
mov
mul
push
in
xlat
cmps
jne
jns
jecxz
jae
pop
fs
add
and
loopne
aas
outs
rcr
adc
ja
dec
mov
push
aas
and
aad
in
iret
lods
cld
(bad)
cld
jle
jg
adc
or
stos
cmp
fst
cmps
lea
xor
(bad)
sub
dec
xor
adc
pop
jecxz
inc
or
and
hlt
cwde
out
or
call
add
dec
loope
jmp
and
mov
jno
pop
stos
test
lods
push
ins
jle
sti
lahf
push
movs
or
call
dec
mov
cmp
outs
and
jb
xchg
mov
imul
call
hlt
pop
test
fist
fucomp
(bad)
push
mov
das
cdq
scas
bnd
sbb
adc
aas
jno
push
(bad)
mov
daa
lods
imul
push
sbb
test
mov
xchg
bound
test
jl
pop
sar
push
js
test
iret
inc
mov
or
fdiv
sub
mov
imul
iret
inc
fisubr
adc
xor
lea
add
inc
(bad)
pusha
ins
and
or
clc
js
in
sbb
jmp
mov
mov
dec
cmp
dec
or
mov
pushf
and
js
jb
cmp
jne
in
push
mov
xor
aam
into
push
xchg
retf
loop
push
xor
fld
and
or
dec
fwait
shl
pop
jmp
push
cmp
mov
loopne
stos
std
aam
rol
xchg
push
jecxz
fisttp
mov
push
mov
sub
std
mov
sti
dec
dec
imul
sbb
inc
adc
int3
fdivrp
jo
je
jnp
dec
pusha
jb
add
cmc
jge
(bad)
mov
adc
add
sub
scas
test
mov
pop
and
into
mov
cmc
push
cmp
push
test
add
jle
retf
enter
div
inc
inc
mov
inc
jnp
test
fs
cwde
xchg
cmp
popf
stos
cwde
sub
not
jecxz
dec
jp
in
add
and
sub
dec
cli
xchg
add
and
fistp
xor
pushf
out
or
or
xor
pop
cwde
iret
mov
aam
push
cmps
enter
cmps
add
repnz
sbb
adc
xor
push
pop
gs
jmp
jae
fwait
and
fstp
sub
mov
add
stos
test
sbb
int
in
test
xor
stos
or
mov
call
lahf
adc
pushf
loopne
je
loop
and
retf
stc
test
push
sar
aas
pusha
in
test
push
arpl
inc
sbb
cmc
shl
shr
arpl
mov
mov
ins
jae
(bad)
out
cmp
loopne
call
mov
push
xor
(bad)
inc
cmp
retf
dec
and
sub
cmp
dec
aam
add
adc
mov
movs
fld
jecxz
(bad)
popa
inc
ficom
loop
pop
push
cmp
lods
push
pusha
pop
xchg
inc
imul
xlat
ret
xchg
ins
sub
(bad)
mov
test
xor
jnp
mov
in
mov
in
push
pop
ja
pop
mov
push
add
ror
dec
leave
sub
push
xchg
test
gs
push
sub
daa
dec
aaa
arpl
outs
lock
push
lock
push
mov
mov
in
inc
popf
sub
mov
adc
lock
or
jle
test
outs
mov
sub
xchg
ins
sbb
add
push
fcomp
repz
rcr
ret
xchg
(bad)
das
inc
sbb
cmp
cmp
push
add
and
sub
arpl
adc
pop
add
xchg
and
test
outs
cmp
sbb
jl
inc
jae
(bad)
fld
std
jp
std
scas
mov
xchg
mov
popa
xor
pusha
inc
jmp
aam
dec
jle
jne
push
popa
fbld
push
cmc
and
fmul
push
inc
pop
adc
xchg
aas
loope
cmp
ja
enter
or
mov
mov
fs
push
cmp
sar
push
and
xor
lds
sbb
ja
pop
xor
pop
mov
inc
lea
xchg
and
lods
pop
call
jns
inc
(bad)
push
sbb
xchg
xor
imul
adc
inc
je
sbb
and
mov
sbb
cwde
dec
mov
fxch
xchg
fwait
dec
mov
jno
xchg
mov
xor
mov
cmps
loopne
add
ins
cmp
daa
xor
cmps
or
push
aam
dec
sub
push
pushf
retfw
pop
iret
mov
and
ret
call
fldenv
sub
fidiv
(bad)
inc
pop
xorpd
call
dec
outs
je
aas
push
sub
ret
xor
adc
push
jnp
scas
mov
rol
or
jns
add
movs
js
jo
or
adc
pop
pop
or
adc
stos
fs
pusha
dec
xchg
gs
retf
cmps
jo
ss
jle
push
or
cld
xchg
or
das
mov
dec
inc
inc
(bad)
mov
popa
sub
sub
push
leave
lea
(bad)
dec
adc
pusha
xchg
add
std
(bad)
out
cmc
xchg
daa
inc
sbb
xchg
and
das
imul
lea
jmp
test
sub
xchg
jno
movs
leave
enter
mov
xor
jns
sub
mov
dec
pusha
xchg
in
in
movs
icebp
and
test
dec
or
(bad)
lock
push
cmp
add
or
cmp
cli
loopne
dec
add
sbb
sti
and
jge
jmp
jmp
xor
daa
mov
sbb
inc
(bad)
std
mov
out
icebp
xor
cld
idiv
loop
mov
pop
movs
add
lock
sub
outs
lods
pop
jge
jecxz
dec
add
mov
mov
or
imul
sbb
push
in
mov
popf
sub
mov
mov
shl
adc
inc
not
rcl
loope
cwde
dec
cdq
idiv
cmp
push
sub
cmp
pop
addr16
adc
jp
cmc
jo
jecxz
push
push
(bad)
xchg
cld
sbb
push
push
lods
xadd
pop
in
xor
jb
or
loopne
or
inc
rol
scas
popf
fcmovu
pop
adc
mov
cld
scas
xchg
sub
pop
adc
movs
dec
cs
call
mov
or
adc
out
cli
dec
xchg
cmp
jne
and
mov
(bad)
fimul
ror
fwait
push
out
push
mov
jne
rcl
retf
push
mov
cmp
sbb
aaa
aam
lahf
cmp
loopne
mov
mov
imul
add
ds
(bad)
movs
or
lds
add
mov
call
cli
pop
(bad)
(bad)
shl
call
adc
mov
cmps
ss
mov
cli
aam
and
std
inc
push
mov
test
int3
mov
fs
arpl
dec
rcl
fst
push
lahf
adc
and
call
sub
imul
sbb
xchg
cmp
fldenv
xchg
daa
scas
fist
push
mov
push
xlat
arpl
push
jmp
sti
aad
popa
clc
fisttp
es
and
mov
stos
pop
add
jnp
arpl
scas
int3
fist
and
pop
jge
and
lahf
shl
adc
sbb
push
or
cmp
pop
push
enter
push
jle
and
fistp
mov
xchg
and
dec
cs
xor
out
jno
adc
cmps
mov
push
pop
xchg
arpl
or
jl
and
push
or
fstp
call
std
xchg
jns
jmp
adc
xchg
jmp
lahf
xor
inc
shr
mov
std
adc
push
gs
lock
shr
xchg
jmp
data16
sub
jl
test
aaa
ja
xchg
dec
int
or
outs
(bad)
in
or
hlt
xor
xchg
sub
jge
or
cmc
hlt
add
call
cmp
xor
(bad)
pop
scas
dec
xor
adc
sti
push
icebp
add
(bad)
fcom
bound
retf
(bad)
lock
loop
mov
(bad)
push
ins
mov
inc
mov
imul
out
adc
sbb
int3
and
sahf
inc
lock
fsub
outs
dec
xor
push
xlat
repz
loope
lods
pop
jb
adc
jbe
lods
ds
fucom
mov
and
ins
add
leave
(bad)
test
sbb
adc
fiadd
out
add
xor
sbb
xchg
or
mov
jle
cmp
jo
div
pop
sbb
inc
xchg
repz
xchg
aas
in
jmp
mov
es
add
stos
mov
sbb
out
std
jle
push
sub
sbb
dec
(bad)
push
push
dec
aaa
jmp
jmp
lds
es
and
mov
(bad)
xor
stos
popa
dec
test
sar
cdq
adc
lock
mov
and
loop
ja
dec
sub
or
aam
stc
xor
daa
(bad)
cld
shl
fist
push
cmps
lock
loop
mov
stos
sub
icebp
lea
mov
sub
sub
cmp
adc
jo
in
sbb
mov
mov
clc
nop
test
stos
lahf
adc
(bad)
ins
popf
call
pop
cli
cli
adc
ins
mov
lea
sbb
jecxz
ror
jmp
or
icebp
mov
es
icebp
not
mov
dec
out
in
jo
aas
lea
xchg
xchg
adc
call
repz
neg
scas
repnz
in
xchg
xor
add
pop
inc
popf
and
cmp
pop
jmp
dec
xor
jne
sbb
pushf
pop
mov
sahf
repnz
jmp
mov
loope
jg
jb
ja
xlat
pop
jne
and
test
pop
leave
or
out
ficomp
rol
call
cmp
cmp
(bad)
dec
or
mov
(bad)
enter
hlt
or
push
in
push
jge
jnp
or
add
out
mov
movs
sbb
push
aam
shl
call
neg
pop
dec
mov
jmp
cmp
cdq
sub
mov
sbb
bound
mov
pop
mov
sub
mov
(bad)
mov
jmp
clc
and
imul
stc
mov
ret
inc
jp
inc
inc
fmul
and
dec
pop
sbb
(bad)
imul
aaa
pop
lods
pop
pop
adc
sti
jge
dec
mov
or
(bad)
outs
mov
test
aam
sbb
(bad)
sbb
inc
daa
mov
sbb
dec
repz
jl
out
mov
jb
ja
and
dec
into
sbb
fwait
dec
pop
dec
sti
ss
(bad)
movs
scas
lods
aad
in
hlt
jae
push
push
in
je
jb
retf
int
stos
or
mov
pop
lds
xor
or
lods
jmp
data16
mul
movs
fnstcw
mov
sbb
xor
jge
test
xchg
enter
dec
jae
and
cmp
or
ins
js
fidiv
je
pusha
push
rcr
add
jecxz
pop
cmp
pop
mov
jle
sub
cmp
cmps
stos
mov
xor
dec
shr
jle
rcr
push
or
cmc
mov
ficom
mov
fmul
aam
sar
es
push
adc
sar
sbb
fst
inc
pop
in
inc
imul
inc
push
mov
adc
call
cmp
mov
adc
push
cmp
gs
push
rep
imul
cdq
(bad)
sbb
mov
pop
sbb
xchg
push
ins
xor
xchg
and
les
pop
xchg
arpl
pop
(bad)
push
rcr
cmp
jo
mov
cmp
sbb
test
jns
jnp
pop
stc
dec
and
ja
and
std
and
xor
xchg
js
mov
test
sub
pop
call
in
ror
add
sbb
xchg
pmuludq
jecxz
imul
rcr
xchg
push
repz
call
push
jecxz
loope
push
mov
add
fmul
scas
(bad)
jne
enter
sub
pop
and
mov
push
pop
inc
loope
xchg
cmp
fdivr
dec
sahf
cli
mov
mov
repz
int
(bad)
sub
mov
repnz
and
push
cmp
cdq
cs
jp
add
dec
in
sub
xor
mov
fsub
or
in
pop
outs
adc
mov
or
stos
dec
fwait
push
std
xor
loopne
dec
push
mov
ret
dec
jge
inc
or
push
inc
dec
fsubr
into
clc
push
dec
data16
imul
shl
imul
pop
mov
push
mov
sbb
call
mov
jnp
jbe
sub
sbb
in
mov
add
and
scas
sar
jg
pusha
imul
xchg
aaa
sub
cmp
jnp
out
sbb
repz
stc
or
and
in
test
leave
push
pop
pop
mov
gs
aaa
pop
popf
and
jbe
dec
ja
and
mov
mov
not
frstor
mov
cmp
test
inc
mov
lahf
mov
lods
xor
xchg
aad
sub
push
shr
mov
xcrypt-ofb
cmps
push
out
inc
mov
dec
mov
push
out
ret
nop
mov
add
imul
mov
or
aam
in
mov
es
lods
sahf
int3
lods
cmp
sub
sti
mov
scas
jae
aas
jp
in
outs
add
mov
stos
jbe
fisttp
mov
fwait
cdq
fcomp
rcl
lahf
mov
adc
mov
lods
into
sub
sub
addr16
(bad)
imul
call
xchg
dec
jmp
cmps
pop
mov
sbb
jg
cmp
ficomp
adc
test
sahf
mov
fldcw
pop
dec
mov
das
inc
and
mov
stc
pop
movs
rol
sub
or
icebp
ficomp
test
inc
ja
sar
nop
mov
(bad)
fimul
call
scas
xor
pop
imul
aad
in
jae
cli
test
jo
test
out
pop
loop
cmc
cmps
scas
xor
out
(bad)
fadd
inc
mov
mov
ret
aad
xor
mov
out
cmp
jle
jne
lahf
retf
movhps
push
sub
enter
fstp
mov
lahf
sahf
and
sti
push
and
in
or
pop
mov
sub
xchg
fidiv
or
out
dec
sti
and
ins
lods
popa
fisttp
mov
(bad)
je
lahf
dec
push
dec
stos
and
jae
in
stc
mov
ins
les
arpl
fimul
add
jge
inc
repz
stos
test
nop
cwde
push
dec
inc
repz
or
sub
fadd
cmp
test
(bad)
enter
int3
xchg
mov
sbb
adc
push
lahf
jmp
push
push
or
fnsave
adc
shl
mov
lahf
mov
test
sub
ins
(bad)
aas
jp
mov
pop
inc
fprem
inc
(bad)
fldcw
pop
and
sbb
call
dec
inc
adc
adc
bound
sub
cmp
rcr
xchg
stos
loop
xchg
mov
add
(bad)
test
adc
call
bound
movs
pop
cwde
xchg
adc
xor
ss
mov
jp
rcl
iret
cmp
and
xor
jno
ss
call
add
xchg
hlt
mov
xlat
mov
pop
icebp
ins
rol
lahf
jle
mul
jg
fnstenv
iret
bound
or
rol
xlat
out
scas
cmova
pop
rol
icebp
cmp
xor
mul
lods
cdq
movs
pop
mov
stos
mov
les
pop
outs
sub
retf
add
adc
ret
mov
sub
pop
test
push
mov
jns
loop
fwait
sub
cdq
stos
sar
dec
mov
adc
aam
fcom
mov
jl
in
ins
and
stc
test
dec
stc
out
xchg
(bad)
push
add
retf
leave
sub
sar
xchg
inc
leave
push
icebp
push
ins
fild
pop
popa
xchg
cwde
lahf
popf
aaa
pop
cld
fisttp
adc
push
push
jae
jle
imul
mov
pop
pusha
jns
push
outs
inc
loope
sti
(bad)
cmp
xchg
jbe
dec
ja
adc
idiv
inc
xlat
cmc
lods
mov
inc
ins
cli
sbb
(bad)
or
dec
nop
nop
and
mov
aam
mov
mov
iret
sbb
sub
mov
mov
(bad)
xlat
or
loop
or
rcl
mov
ss
adc
cmp
jb
inc
push
movs
sub
sahf
sti
xor
pop
out
cmps
or
mov
clc
xchg
or
inc
add
sti
dec
out
scas
adc
sbb
inc
cmp
fcmovu
mov
mov
sbb
movs
loope
pop
cmp
ror
xor
aad
ss
addr16
test
dec
loopne
sub
sbb
inc
imul
fwait
jmp
rcl
fiadd
cmp
std
arpl
shr
hlt
or
pop
pop
in
jp
push
arpl
cwde
ret
inc
push
xor
mov
sbb
push
fs
or
sub
xchg
cmp
pop
outs
loopne
test
ret
dec
(bad)
(bad)
cmp
retf
out
mov
imul
and
dec
pushf
adc
pusha
jbe
cmp
bound
jns
pop
ins
mov
fcomp
and
mov
sbb
out
lods
mov
mov
mov
fs
js
lds
inc
jnp
clc
scas
ins
inc
mov
push
xchg
pop
nop
loopne
adc
xchg
movs
stos
hlt
fbstp
outs
jg
popa
test
js
loopne
imul
pop
sub
sub
enter
pop
les
and
push
in
xor
cmp
(bad)
shl
sbb
add
(bad)
jb
add
adc
jmp
lahf
mov
jbe
sub
xchg
enter
adc
or
std
je
and
mov
lds
cmp
mov
stos
dec
in
aam
jg
and
dec
xor
jo
div
jae
jl
daa
adc
retf
rcl
cld
and
xor
cli
pop
aaa
repz
cmps
in
ins
(bad)
lock
jns
mov
loope
mov
and
test
or
mov
mov
sub
xor
mov
xchg
in
imul
and
in
xchg
test
xor
ret
jnp
mov
push
enter
adc
cmp
rol
mov
daa
ret
dec
pop
lods
cwde
(bad)
std
fnstenv
sti
adc
jmp
pop
and
jns
xchg
sbb
mov
pop
pop
outs
mov
jl
lods
and
push
pushf
mov
inc
aaa
mov
loope
mov
and
in
lods
mov
outs
loopne
into
out
sar
cmp
data16
jmp
mov
enter
sub
mov
sub
mov
lock
dec
mov
mov
sbb
test
push
xor
in
mov
jo
fsubr
jnp
inc
dec
or
cmp
mov
addr16
jmp
ss
aas
cmc
mov
push
dec
and
neg
xchg
and
add
pop
and
sti
stos
fistp
cs
add
dec
jecxz
xchg
popa
cmp
(bad)
cli
in
daa
jb
int
scas
sti
pop
out
xor
mov
in
xchg
enter
push
mov
(bad)
scas
jge
fisttp
ds
pop
sar
rcl
(bad)
rcr
jl
cmp
int
push
pop
sar
inc
sub
xchg
addr16
mov
rcl
fcom
mov
inc
outs
xor
jle
fdivr
cwde
dec
or
adc
inc
sub
cmp
xor
and
jecxz
pop
loop
sbb
jmp
clc
aad
mul
cs
xchg
cmp
jo
sar
(bad)
mov
mov
adc
lods
test
fmul
sbb
int3
fstp
fdivr
gs
fistp
mov
mov
mov
and
cmps
imul
jle
ret
mov
pop
adc
mov
loop
neg
retf
ret
xor
push
lahf
cmp
adc
cmp
mov
and
push
ror
lods
call
xchg
and
fist
enter
cmps
stos
inc
es
xchg
jg
xchg
mov
sbb
xlat
push
adc
push
push
fistp
fs
dec
jge
daa
clc
rol
iret
lock
addr16
mov
loope
sub
jle
push
pushf
pushf
and
movs
addr16
mov
popf
aaa
or
jl
adc
cmps
push
popa
sub
push
mov
test
push
jg
or
jo
push
ret
inc
nop
shl
adc
ror
jmp
in
in
xor
inc
in
ret
and
mov
div
dec
cmp
scas
(bad)
cdq
gs
mov
push
pop
sub
loop
into
adc
or
mov
or
pop
fimul
add
aaa
in
(bad)
jl
es
jecxz
jno
xchg
in
popf
pop
sub
push
push
jge
cmp
mov
rcl
mov
inc
inc
jmp
pop
js
ds
xchg
inc
adc
push
rcr
rcr
enter
in
popa
sbb
push
jmp
(bad)
jecxz
cmps
sub
jae
adc
pushf
sub
std
loop
xchg
sar
(bad)
and
hlt
mov
popa
mov
cli
xchg
mov
bound
jb
xchg
call
scas
into
les
add
cmp
xchg
adc
(bad)
mov
jnp
(bad)
jp
jl
or
mov
rcl
cmp
out
push
mov
add
mov
or
into
inc
neg
cmp
das
shl
dec
dec
repz
mov
addr16
push
cmc
in
loopne
nop
sub
sub
aaa
dec
mov
pop
push
pop
mov
pusha
repz
je
lds
jb
mov
jmp
arpl
inc
popa
movq
cmp
test
mov
aas
gs
jl
cs
iret
pop
call
fstp
lahf
ja
mov
dec
jmp
adc
hlt
xchg
push
add
out
pop
sbb
sub
call
bound
jecxz
hlt
jmp
ja
sub
inc
mov
(bad)
dec
(bad)
imul
jbe
xchg
in
sbb
sub
or
pop
not
or
cmp
pop
jns
mov
imul
mov
jmp
rcr
out
cmps
pop
stc
(bad)
out
into
jge
fild
mov
(bad)
shl
scas
retf
lods
xchg
stos
in
call
rol
(bad)
leave
stos
mov
mov
push
mov
in
scas
inc
add
stos
clc
sub
sub
not
call
aam
adc
lock
sti
stos
mov
iret
add
mov
mov
adc
lods
sbb
xor
daa
xor
jl
inc
arpl
lahf
mov
pop
(bad)
arpl
out
jle
cs
jp
fmul
js
sub
test
test
cdq
out
int3
popf
mov
retf
and
sub
jge
pop
popf
stos
clc
aad
push
icebp
xor
dec
pop
xchg
push
xor
inc
push
fcomi
dec
iret
mov
test
fucomip
das
out
mov
pop
inc
and
xor
out
and
or
fadd
pop
and
mov
test
mov
inc
jl
ins
mov
mov
call
sub
call
inc
jbe
enter
je
push
inc
sub
adc
add
movs
jmp
fstp
out
dec
sub
add
sbb
clc
sub
push
mov
xchg
scas
sub
jb
xchg
ret
iret
cmp
fstp
es
fisttp
fwait
aas
lock
stos
cmp
test
xor
sbb
inc
aas
or
shr
sub
int
push
shr
test
cmp
cmp
sbb
push
sub
pop
and
and
fst
loopne
add
dec
shr
cs
dec
xor
inc
mov
cmp
jge
out
push
lock
aas
pushf
lock
out
cmp
sar
ficom
scas
ret
sub
dec
mov
loope
ins
add
inc
movs
rcl
pop
fidiv
dec
retf
mov
adc
fld
call
dec
adc
paddusw
push
fistp
mov
mov
sbb
cs
xor
sub
pop
ds
jl
push
jg
ret
dec
aaa
in
scas
sbb
les
(bad)
xor
xchg
dec
pusha
stc
mov
adc
popa
pop
push
inc
inc
and
ja
movs
fdivrp
jge
sti
inc
push
push
repnz
inc
push
ins
das
adc
retf
inc
dec
cmp
and
les
jnp
loope
popf
push
cmp
cli
adc
jge
pop
inc
sbb
jmp
jb
pop
nop
mov
cmp
cwde
sub
enter
xlat
sub
cs
push
push
mov
adc
or
jg
mov
adc
push
loop
test
outs
(bad)
jg
cli
inc
(bad)
cld
add
xor
cmp
jl
pop
mov
pop
sbb
mov
sti
mov
out
push
inc
add
inc
arpl
test
std
add
ins
xor
adc
ja
mov
xchg
push
xor
scas
add
and
je
jae
test
movs
fisubr
xor
jo
pop
cwde
int3
icebp
jle
xchg
pop
jns
mov
test
in
inc
xor
push
pop
out
cmp
mov
or
fstp
sbb
repz
je
sub
inc
pushf
stos
sbb
push
or
mov
mov
ja
(bad)
js
or
dec
lahf
out
in
mov
cmps
sbb
jle
push
jne
push
in
(bad)
clc
test
std
in
mov
inc
(bad)
jb
fisub
mov
cmp
sbb
adc
test
cmp
ss
mov
or
mov
in
sahf
xlat
fst
lock
aad
je
imul
iret
loope
and
xchg
adc
sub
ins
add
sahf
push
push
sbb
mov
mov
jae
scas
into
lock
lds
add
mov
jae
sbb
sub
ins
sbb
sar
push
xor
pop
add
enter
loopne
test
(bad)
es
adc
push
gs
int
pop
fisub
in
push
mov
sub
xchg
inc
mov
adc
call
xor
mov
frstor
mov
(bad)
push
or
lahf
cmp
add
hlt
dec
cmp
add
movs
in
sbb
or
sbb
icebp
lock
push
or
cmps
dec
or
imul
jmp
test
aam
pop
cmp
test
movs
(bad)
das
adc
sub
fstp
adc
not
std
std
iret
call
inc
ja
sub
(bad)
aaa
adc
and
cmp
lods
in
lods
fwait
adc
(bad)
das
nop
inc
push
inc
test
out
mov
xlat
xchg
cmp
mov
rcl
sahf
cmp
loopne
push
shl
jo
or
jg
loop
(bad)
xchg
push
addr16
movs
add
xchg
mov
inc
outs
out
sahf
cli
xchg
push
xor
out
push
(bad)
in
data16
mul
pop
xchg
push
aam
sbb
add
xchg
sbb
mov
cdq
out
cmp
xlat
jl
xor
mov
fdivr
out
pusha
add
cmp
test
dec
or
xor
addr16
push
mov
in
jp
iret
shl
pop
lahf
popa
xchg
(bad)
or
pop
aas
mov
cmp
pop
mov
sbb
mov
jae
lock
or
push
test
lods
ret
loopne
fstp
imul
push
cmp
xor
push
sbb
out
jbe
loope
adc
hlt
xchg
mov
mov
(bad)
fsubr
in
inc
dec
fimul
lods
pop
jecxz
xchg
cmc
mov
or
jmp
popa
cmp
pop
xor
mov
in
loopne
aam
pop
mov
sti
sub
cld
adc
cmp
fwait
push
jmp
shl
and
sub
xchg
sbb
loope
jns
push
aam
ins
adc
aam
and
test
or
in
add
xchg
fidivr
loop
inc
mov
int3
jmp
dec
adc
jne
cmp
push
adc
or
mov
dec
ins
lock
sahf
(bad)
push
outs
push
pop
dec
arpl
int3
test
xor
js
movs
sub
xor
mul
dec
add
mov
jge
sbb
pop
pop
inc
dec
ficom
aas
rcr
inc
lahf
mov
push
xchg
scas
gs
xchg
cs
out
or
(bad)
in
imul
or
jno
push
inc
xchg
(bad)
jmp
jmp
jp
mov
imul
push
or
(bad)
ja
fistp
sub
mov
inc
popa
adc
mov
mov
push
dec
adc
shr
push
pop
shl
xchg
ins
sub
out
mov
inc
(bad)
imul
aas
je
mov
add
sbb
leave
jle
mov
ins
ja
xor
jno
dec
dec
xor
push
mov
and
sbb
jg
aad
popf
mov
imul
loope
inc
aad
cmc
leave
scas
and
fmul
loopne
stos
fs
mov
hlt
int
xchg
cmc
mov
std
cmp
sbb
xlat
pop
aam
pop
jns
push
fstp
retf
xchg
fwait
mov
pushf
jmp
pushf
rcr
(bad)
retf
xor
mov
pop
inc
inc
loop
jnp
jnp
inc
fdivr
fnsave
sub
sub
inc
ss
leave
aaa
adc
dec
shl
(bad)
sbb
(bad)
adc
push
mov
adc
and
xchg
dec
inc
je
push
dec
mov
xor
mov
and
adc
or
and
mov
lds
stos
or
sub
pop
iretw
push
rcl
cmp
cmp
xlat
sar
hlt
inc
cmp
xchg
lds
lods
mov
loope
popw
ja
mov
stos
xchg
(bad)
cld
mov
cmc
jno
scas
shufps
les
inc
push
mov
pop
mov
outs
fiadd
in
jo
inc
push
int3
test
jnp
cwde
adc
fldcw
push
cwde
and
jp
mov
xor
or
mov
mov
adc
mov
test
sti
jmp
dec
and
test
inc
cmp
aas
dec
inc
icebp
div
das
mov
rol
adc
jbe
inc
fist
aam
mov
jg
jg
ret
test
and
rol
xor
push
gs
push
je
retf
outs
xor
or
sbb
test
rcl
and
mov
in
aam
je
(bad)
retf
test
xor
inc
push
xor
cmp
aam
cs
and
test
sub
cli
(bad)
(bad)
cmps
inc
outs
stos
jmp
adc
scas
in
add
enter
hlt
adc
shr
ins
sbb
jbe
(bad)
cdq
jne
ja
and
push
fs
mov
add
push
push
pusha
and
jg
xchg
sbb
mov
and
popf
movs
cmp
outs
lahf
mov
fstp
xchg
sub
add
icebp
inc
xchg
test
add
add
pop
or
les
or
push
arpl
ins
mov
outs
push
ret
dec
mov
jmp
clc
mov
test
mov
outs
inc
imul
cmp
jp
add
mov
jmp
les
out
push
mov
ret
jp
les
inc
and
sub
loop
fld
clc
push
inc
push
sbb
pop
cmc
scas
mov
neg
inc
nop
jns
push
imul
jnp
mov
adc
lahf
inc
jae
and
inc
cwde
shr
bnd
xor
lock
jp
jecxz
inc
pop
jns
xchg
hlt
xchg
push
dec
or
pop
mov
xor
ror
xor
or
sahf
add
shl
xlat
or
pop
stos
(bad)
sub
scas
inc
and
and
mov
call
repz
pop
(bad)
icebp
(bad)
into
stc
(bad)
xor
sbb
pop
push
imul
popa
sub
stc
jmp
inc
cli
cmp
es
repz
jb
inc
lods
mov
push
arpl
cli
and
call
sbb
lods
mov
ret
mov
ja
loop
vpinsrw
dec
pop
mov
cli
add
fsubp
sar
inc
(bad)
daa
ror
stc
(bad)
dec
push
inc
add
inc
sub
mov
(bad)
(bad)
mov
mov
stos
xchg
jno
xor
in
dec
cmp
cmp
cmp
fisub
popf
into
adc
test
sar
(bad)
(bad)
and
jle
mov
fst
xchg
lahf
sar
ds
xchg
adc
mov
f2xm1
fistp
loopne
mov
stos
fisttp
imul
push
dec
fs
or
sub
outs
popa
push
mov
lock
sbb
enter
fcmovne
mov
fcmovnu
mov
lock
xor
(bad)
in
fwait
in
push
repz
inc
aaa
frstor
push
pop
(bad)
dec
add
mov
popf
and
sub
imul
xchg
imul
pop
xchg
jl
shl
in
or
adc
jg
and
(bad)
(bad)
cmp
mov
push
push
inc
call
push
call
fisubr
pop
mov
sbb
lock
and
sbb
shl
popa
mov
in
(bad)
int
dec
inc
loop
sub
push
mov
pop
icebp
and
push
pop
lds
mov
popa
addr16
or
pop
cwde
mov
repz
mov
js
stos
mov
mov
sbb
(bad)
cmp
cmps
fwait
ss
mov
sub
pop
pop
mov
enter
or
dec
(bad)
lea
dec
imul
dec
je
out
xchg
push
adc
pop
jae
push
sahf
pop
xor
mov
retf
mov
cmp
jbe
mov
ins
shl
mov
std
call
mov
clc
adc
cld
adc
jmp
cmps
jle
or
mov
aad
mov
push
push
sbb
sub
(bad)
(bad)
jae
ret
xchg
and
sub
push
addr16
pop
out
rep
cwde
dec
and
fdivr
dec
iret
dec
shl
cmp
sub
out
jge
jae
mov
mov
repnz
mov
jno
push
stos
inc
jb
dec
xchg
add
je
in
xchg
gs
xor
add
in
fs
adc
sbb
cmp
sbb
repz
clc
in
jns
pop
adc
out
lds
das
adc
pop
dec
cdq
fsub
xchg
mov
mov
js
pusha
fs
sub
inc
das
sahf
mov
dec
mov
out
sbb
jno
imul
and
mov
fwait
lods
xor
adc
push
lds
jle
jo
dec
(bad)
xor
ret
adc
call
mov
dec
mov
cmc
ror
scas
pop
in
or
shl
das
xor
and
jns
mov
mov
pop
in
retf
fidiv
jge
js
ret
mov
imul
and
ret
mov
inc
cmp
and
sub
shr
lods
in
sbb
inc
retf
dec
(bad)
mov
cmova
lahf
shl
outs
data16
inc
cmps
(bad)
lods
and
cmp
cli
jmp
inc
adc
repnz
add
icebp
push
test
dec
mov
ds
adc
jmp
in
xor
sahf
inc
stc
sbb
inc
popa
jno
mul
mov
aam
repz
xchg
stos
clc
cld
sub
xchg
shl
mov
fdivr
imul
imul
mov
jne
cmp
xchg
(bad)
in
outs
shl
push
cmp
(bad)
mov
pop
cwde
test
daa
mov
mov
xor
ret
push
cdq
xchg
sbb
call
mov
test
in
dec
xchg
loopne
cli
loopne
fisttp
xchg
imul
push
xor
dec
loop
fnsave
push
in
jg
adc
fs
jns
sub
xor
sub
fsub
jae
mov
sub
iret
imul
mov
js
push
lock
add
xchg
or
stc
push
aam
sahf
xor
and
pop
push
imul
aam
iret
adc
fild
ret
inc
aaa
add
cdq
inc
das
or
retf
retf
cmps
xchg
lods
cmps
jg
mov
scas
xlat
inc
mov
adc
bound
popf
or
adc
inc
lea
mov
or
std
cmp
cmp
je
out
push
inc
sub
mov
pop
mov
pop
cmp
and
loopne
inc
imul
jb
add
repnz
xchg
(bad)
jo
jbe
sbb
(bad)
push
retf
ficomp
sti
add
add
popa
xor
fsub
push
out
gs
call
es
out
pop
jnp
inc
push
mov
mov
fnsave
jns
hlt
arpl
push
(bad)
jg
(bad)
xlat
mov
push
pusha
xor
adc
add
test
cld
pop
jl
adc
movs
or
test
cmp
sahf
call
mov
pop
xor
or
push
ins
fisub
retf
push
or
jmp
xchg
jecxz
test
push
sub
jne
cmp
mov
xchg
adc
fld
sti
retf
lock
inc
lahf
movs
repnz
mov
sub
inc
neg
shl
sub
push
sbb
mov
inc
repz
jmp
pushf
lods
sub
or
mov
mov
and
push
sbb
cdq
and
popa
ins
dec
inc
xor
aaa
cs
outs
inc
in
bswap
dec
jmp
push
scas
adc
mov
adc
or
dec
push
add
add
inc
out
into
ror
repz
add
std
cmp
sbb
rol
jnp
mov
shl
jmp
mov
in
dec
cmp
jg
sub
push
dec
push
test
lock
pop
movs
xor
mov
repnz
fstp
loope
sbb
sbb
bound
xchg
sbb
jmp
pop
stos
inc
ss
mov
or
cmp
pusha
fwait
push
out
(bad)
rcl
int3
repnz
mov
pop
push
mov
fs
outs
les
push
cs
sti
aaa
and
aaa
mov
mov
push
out
out
pop
adc
imul
data16
adc
push
mov
test
xor
bound
pop
sub
pop
xor
icebp
imul
pop
movs
cmp
pop
and
ss
scas
mov
sbb
and
scas
sub
sub
inc
push
repnz
test
fcom
sbb
dec
movs
dec
in
hlt
jb
or
rcr
sbb
sar
xor
sub
pop
into
xlat
xlat
fs
or
test
repnz
je
mov
fstp
push
sbb
test
jecxz
push
inc
push
retf
or
adc
bound
hlt
cwde
fs
shr
mov
cmp
lea
in
outs
add
cdq
(bad)
cmp
jb
test
mul
fs
jle
cmp
inc
dec
pop
mov
sub
push
addr16
pop
(bad)
cmp
jmp
repz
add
mov
clc
out
mov
adc
stos
xor
inc
dec
aad
cmps
ja
mul
pop
into
bnd
add
movs
enter
jne
cwde
loope
mov
push
(bad)
mov
inc
pop
aad
jp
out
jl
(bad)
mov
pop
sti
psadbw
jp
in
call
mov
add
cmps
je
ret
or
xchg
ds
int
out
jno
mov
test
ins
ret
into
jo
push
mov
jae
pop
out
fs
add
les
loopne
cmp
leave
cld
sahf
xor
fld
lds
in
ror
arpl
mov
lods
js
out
pop
cmp
in
or
je
scas
add
imul
pop
xchg
int
(bad)
dec
inc
mov
cli
fiadd
mov
and
loopne
ret
bnd
and
shl
int3
cmp
pop
fs
pop
int3
cmp
jnp
scas
es
ds
movs
mov
iretw
dec
(bad)
and
and
mov
pop
pop
int3
mov
xchg
xor
jp
jl
pop
push
out
xor
pop
and
xlat
push
dec
mov
xor
inc
add
sahf
out
test
cmps
xor
inc
mov
xor
aad
in
cmp
pop
je
sbb
or
sbb
lods
mov
test
mov
outs
xchg
dec
test
mov
rcr
sbb
int
lods
inc
or
adc
xchg
dec
rep
ret
and
or
les
out
or
jae
cmp
mov
pop
xlat
loope
dec
leave
dec
adc
push
out
adc
jle
xchg
pushf
cmp
mov
call
mov
outs
(bad)
push
cs
dec
pop
cmp
mov
mov
push
icebp
jns
push
sub
dec
or
call
lds
xchg
in
pop
fldenv
sbb
jns
repz
and
inc
inc
lahf
push
mov
scas
ins
mov
pop
mov
in
and
sbb
add
add
jnp
or
les
xor
ins
sbb
mov
(bad)
sti
dec
gs
fld
popa
push
mov
xchg
xor
cmp
add
cmp
retf
stos
and
or
popf
vmread
xchg
icebp
push
stos
mov
retf
sbb
out
addr16
add
sub
fwait
bound
inc
push
pop
shr
cmps
pop
pop
jns
sub
push
pop
xchg
add
push
xchg
pop
stos
mov
sub
sbb
and
mov
lock
js
dec
pushf
jnp
mov
mov
jmp
outs
fidivr
aaa
xor
dec
jae
std
popa
push
mov
mov
xchg
test
cld
push
mov
xchg
cmps
aad
xor
in
mov
xor
pusha
add
sahf
ja
xchg
xchg
and
daa
rcr
add
rol
das
fcom
in
push
inc
out
xor
in
adc
jnp
adc
lods
sbb
xchg
dec
ins
push
leave
or
dec
mov
ds
and
pop
add
mov
and
pop
xchg
xchg
int3
(bad)
sub
int3
cli
je
and
sub
hlt
lods
fiadd
clc
call
dec
dec
mul
mov
out
mov
or
mov
pop
shl
sub
mov
ins
ja
sub
sahf
aas
and
and
xor
pop
loope
xchg
mov
les
jecxz
add
mov
mov
push
outs
cmps
fwait
nop
add
mov
jg
pop
rcl
push
jo
enter
inc
pushf
repz
cli
jno
push
in
aas
dec
pop
dec
hlt
adc
inc
in
pushf
mov
in
mov
jb
lock
(bad)
or
ret
hlt
xchg
test
sti
stos
pop
mov
outs
mov
jo
cs
pop
pop
lods
mov
xor
push
add
mov
adc
icebp
mov
inc
push
xchg
(bad)
sub
cld
push
bound
shr
adc
cmp
xchg
(bad)
imul
cmp
push
(bad)
test
dec
int3
xchg
test
xor
pusha
jp
sahf
jno
add
pop
fwait
push
shr
and
into
stc
js
cs
cs
jmp
sub
pop
mov
out
sub
pop
loop
add
stos
cmp
(bad)
(bad)
in
pop
cs
jmp
(bad)
popa
pextrw
sbb
je
adc
mov
mov
dec
outs
scas
inc
inc
sahf
mov
fwait
mov
les
push
daa
test
stos
ins
(bad)
jo
(bad)
mov
sbb
jne
repnz
pop
mov
mov
adc
jbe
movs
push
imul
mov
mov
(bad)
stos
inc
inc
jae
cdq
fsubr
push
mov
push
(bad)
clc
inc
and
std
cmp
and
and
addr16
stc
push
ret
cwde
mov
mov
mov
(bad)
mov
mov
sahf
xchg
jae
cmp
pop
mov
fmul
pop
shl
mov
fstp
int
xor
dec
push
sub
and
adc
je
and
js
ds
pusha
and
lods
pusha
add
(bad)
stos
jecxz
stc
out
shl
ins
sub
and
jne
adc
loop
sbb
nop
les
rcl
pop
inc
sub
in
dec
jl
jbe
pop
inc
sbb
inc
jecxz
jb
ins
xchg
pop
enter
pop
or
dec
jo
xchg
cmp
push
push
ror
mov
sub
sub
test
ficom
test
sub
pop
cmc
dec
stos
mov
or
repz
pusha
mov
stos
mov
mov
sbb
sub
test
xor
in
cmc
cmp
sub
xchg
shl
leave
xlat
pusha
push
scas
mov
xchg
stos
jecxz
pop
aas
ins
pop
loop
neg
mov
into
jnp
sub
fdiv
fadd
shl
jne
movs
scas
cmp
imul
stos
cli
xchg
scas
loope
add
dec
into
jo
push
or
loopne
mov
jo
std
mov
or
clc
adc
push
cmps
ja
scas
iret
or
and
mov
sbb
sub
repnz
ret
stos
jno
and
mov
xchg
push
pushf
ss
push
(bad)
xor
in
push
ret
stos
rcr
cmp
stc
add
cmp
in
sti
test
ins
cmp
js
jmp
cmps
mov
cmc
pop
dec
push
cmp
call
push
fsubr
fwait
push
and
lea
mov
icebp
adc
push
xor
pop
jmp
lea
imul
(bad)
jge
xor
jecxz
ss
ret
jns
scas
lods
dec
and
mov
and
adc
sub
nop
cmp
rcl
jmp
pop
xor
jbe
gs
sbb
(bad)
push
push
sub
mov
jb
out
xlat
pop
dec
daa
pop
repnz
pop
dec
sbb
rcr
dec
dec
stc
aaa
hlt
gs
sbb
cmp
mov
xchg
ficomp
dec
and
sbb
or
and
test
adc
xor
push
or
jne
out
push
push
nop
call
add
pop
xchg
add
xor
inc
add
inc
call
add
pop
cdq
adc
sub
xchg
mov
outs
push
scas
je
mov
es
add
fimul
call
inc
mov
popa
mov
lods
lahf
jmp
imul
daa
jnp
inc
mov
push
push
aam
push
xor
dec
jg
out
lock
mov
mov
xlat
jp
std
or
call
jp
or
cli
mov
cmp
jb
fbstp
push
daa
fcom
xchg
sub
mov
call
dec
out
aam
test
sub
retf
scas
out
scas
cmp
dec
outs
sub
fdivr
clc
mov
daa
push
mov
push
in
movs
mov
leave
push
jae
pop
fcmovbe
xchg
lods
ins
push
icebp
lds
sti
push
mov
push
in
inc
stc
pop
in
mov
in
outs
and
sub
aad
rol
rcr
or
fsubr
arpl
pop
frstor
dec
nop
data16
repnz
sub
push
xchg
xchg
push
jg
cmps
inc
inc
and
clc
xor
in
(bad)
enter
loop
jns
mov
cld
(bad)
adc
xchg
data16
mov
xchg
push
cmps
retf
mov
ja
or
lods
xchg
rcr
retf
mov
mov
dec
repnz
ja
adc
push
(bad)
fld
ss
out
sbb
push
pushf
repnz
ds
(bad)
shl
xor
inc
popf
sbb
mov
rcr
add
dec
pop
jecxz
aaa
es
ins
fidivr
mov
call
ror
sahf
(bad)
clc
xchg
lds
push
and
out
sbb
pop
adc
lea
je
or
pop
xor
xchg
out
fist
imul
bswap
mov
adc
test
jmp
ins
dec
mov
or
ja
pop
and
test
pop
mov
jmp
out
add
retf
dec
fnstcw
mov
fsubrp
adc
sub
sbb
popf
lea
push
sub
int
xchg
cmp
sbb
mov
adc
out
je
out
lea
ins
xor
imul
fdiv
jno
pushf
push
inc
adc
or
fsub
and
mov
cmp
lods
jmp
aam
sar
mov
hlt
pop
add
xchg
shr
cli
xchg
sub
mov
in
push
and
inc
mov
push
inc
fcom
mov
xor
loope
cld
xor
sbb
jecxz
fist
aaa
inc
mov
and
mov
jne
add
inc
push
xchg
pcmpeqw
and
mov
jb
jmp
adc
test
dec
jmp
neg
ret
loope
clc
adc
dec
ret
test
stos
dec
lahf
leave
rcr
sbb
imul
fs
or
popf
(bad)
dec
in
ror
loop
stos
jne
jno
lods
jmp
nop
pusha
inc
ds
adc
mov
jno
adc
pcmpeqd
dec
(bad)
jnp
inc
dec
dec
sbb
sbb
test
jb
or
je
inc
lds
dec
ins
and
xchg
xor
sti
std
or
pop
mov
pop
popa
sbb
ja
add
clc
ds
mov
popf
(bad)
mov
dec
lds
int3
outs
push
in
pusha
add
pop
in
popa
lods
sbb
or
adc
pop
and
add
cmp
xor
retf
loop
dec
mov
rdpmc
mov
mov
xchg
sbb
add
daa
push
mov
aas
out
shl
popa
pop
out
mov
and
xor
fwait
mov
mov
push
inc
and
jmp
add
jle
(bad)
iret
int3
ror
test
jl
cmp
xchg
sub
lods
repz
stos
xchg
scas
mov
repnz
popa
mov
in
outs
cmp
cwde
repz
test
mov
cmp
and
jmp
movs
gs
mul
popa
adc
jge
movs
in
pop
mov
addr16
stos
pop
xchg
pop
cs
jmp
imul
mov
aad
xor
imul
jnp
ins
pop
(bad)
inc
repz
mov
dec
sub
retf
scas
sbb
lods
cli
clc
mov
fldl2t
mov
pop
adc
push
aam
inc
out
sbb
pusha
and
and
cld
and
mov
pusha
sub
rep
pop
inc
xor
cdq
in
iret
in
xchg
ja
js
xchg
fst
sub
or
push
jbe
or
sbb
mov
mov
pop
mov
jmp
(bad)
mov
fs
jns
not
sub
ss
sbb
push
icebp
mov
movs
cdq
pop
mov
push
adc
loope
mov
lods
mov
repnz
out
jns
jp
jmp
mov
mov
adc
std
adc
and
imul
repnz
lahf
fs
dec
jnp
std
adc
out
jl
sub
call
add
(bad)
push
stc
mov
shl
push
adc
(bad)
inc
mov
mov
mov
jo
add
in
shr
(bad)
sub
das
adc
jmp
jge
push
pop
int3
push
dec
push
sbb
sti
(bad)
loopne
xchg
cmp
xchg
out
adc
mov
xor
jnp
loopne
add
jg
or
add
mov
jg
aaa
sti
mov
jbe
mov
jge
push
dec
les
jge
mov
xor
cli
and
sbb
out
int3
sbb
jmp
sub
cmp
xchg
pushf
cs
pop
sbb
and
loopne
loop
(bad)
push
mov
xor
(bad)
aaa
xor
icebp
rol
mov
ss
(bad)
fidiv
and
mov
data16
icebp
mov
pop
xor
scas
pop
pop
dec
xchg
loop
xchg
mov
imul
add
sbb
mov
add
pusha
push
mov
mov
out
ds
xchg
mov
call
xchg
jp
scas
(bad)
(bad)
(bad)
add
cmp
adc
outs
test
lock
inc
push
or
sbb
adc
mov
and
cdq
mov
jmp
ficom
shr
mov
ret
movs
push
ja
movs
sti
pop
repz
dec
fst
jne
pop
inc
pop
das
cmc
mov
cwd
repnz
adc
sbb
popf
icebp
addr16
or
pop
cwde
jns
dec
xchg
jmp
in
movs
cwde
and
push
xchg
fadd
std
or
cs
int
jmp
fldenv
jns
xor
push
fidiv
dec
retf
and
shr
xor
pop
and
xor
(bad)
push
cwde
jbe
push
lds
lahf
imul
ja
fwait
aad
mov
aas
mov
xchg
sbb
ficom
add
ja
sbb
add
mov
shr
cmp
retf
mov
xlat
jo
mov
and
das
xchg
sti
test
xchg
mov
cld
push
or
adc
jmp
adc
mov
mov
push
inc
jle
xor
push
push
mov
sbb
in
pop
into
push
sar
push
adc
pop
xchg
dec
adc
in
add
and
into
std
jge
mov
add
or
pop
add
je
inc
dec
sar
ins
xchg
mov
push
jmp
push
sbb
cld
arpl
push
cmp
or
cdq
imul
iret
ds
sub
pop
mov
movs
sub
dec
add
cdq
aam
and
pop
std
pop
imul
(bad)
mov
xchg
das
push
(bad)
push
mov
into
ds
mov
add
(bad)
imul
mov
out
cwde
loop
cmps
jb
popa
not
mov
mov
sub
xchg
mov
adc
aaa
stc
popf
or
in
pop
xchg
rcl
jmp
push
dec
(bad)
mov
sub
fnstenv
cmp
cmc
cmp
pop
sub
(bad)
xlat
stc
mov
ret
in
movs
pushf
js
nop
inc
test
hlt
push
cmp
cmp
sbb
push
sbb
sbb
call
pop
lods
shl
sbb
arpl
push
sbb
int3
mov
add
jbe
bnd
and
stos
push
mov
jecxz
mov
sub
test
and
test
bound
jae
out
repnz
stos
pop
loop
inc
inc
push
mov
gs
push
xchg
push
and
sub
inc
repz
neg
cmps
sar
test
into
push
xor
pop
pop
(bad)
lods
(bad)
mov
mov
stos
jl
ins
arpl
pop
pop
(bad)
js
movs
loope
fs
into
jmp
jp
out
adc
jno
inc
inc
add
iret
add
or
push
or
jbe
mov
inc
(bad)
mov
shr
in
aas
sbb
std
jmp
sbb
retf
mov
inc
mov
cli
movs
loopne
fistp
cdq
sbb
xor
dec
jmp
add
mov
jno
cs
mov
pop
mov
cmp
mov
scas
arpl
mov
idiv
aaa
fstp
xchg
fsub
retf
rdmsr
int3
sbb
test
ret
pop
inc
and
mov
jmp
fstp
jg
or
mov
sbb
mov
aad
sub
mov
inc
mov
idiv
repz
mov
adc
in
outs
or
inc
pusha
cdq
das
cld
shl
mov
icebp
sbb
jmp
iret
movs
or
pop
cmps
in
sub
pusha
mov
outs
hlt
add
or
xchg
(bad)
and
sbb
add
xlat
xchg
dec
btr
and
fist
icebp
inc
pop
inc
jp
sub
icebp
cmc
inc
mov
aam
xorps
add
cli
mov
(bad)
inc
xlat
test
jno
test
out
inc
cs
out
cmps
jnp
mov
aad
(bad)
data16
dec
fisubr
rcr
loopne
js
pop
jae
and
out
jb
mov
dec
pop
pushf
cmp
call
fimul
adc
mov
sub
inc
aad
int3
into
mov
shr
mov
shl
out
or
inc
in
scas
pushf
dec
arpl
fwait
push
mov
and
out
sbb
rol
neg
inc
inc
xchg
xor
test
in
iret
loop
xor
cmp
cmp
jge
sbb
xchg
or
dec
xchg
push
loopne
mov
jmp
inc
cmp
outs
sar
and
clc
cmp
adc
and
in
cmp
jo
xor
jne
xor
sbb
dec
pop
scas
adc
aam
and
stc
lea
dec
xor
pop
(bad)
pop
add
test
push
je
jmp
scas
dec
out
pop
mov
sbb
xor
test
sti
sbb
cmovo
daa
inc
test
mov
sbb
jg
and
in
into
mov
dec
adc
sti
mov
es
(bad)
fmul
jo
mov
sbb
pop
add
xlat
cmp
or
pop
ds
xor
xchg
ds
jl
adc
adc
xor
push
lahf
mov
loope
in
fcom
fs
dec
and
cmc
shl
sbb
add
stos
test
mov
and
inc
addr16
or
adc
inc
std
int
stos
sbb
push
icebp
add
rol
mov
aad
add
inc
xor
pop
mov
outs
repz
and
push
cmp
jno
inc
fbld
lods
xchg
arpl
cwde
cmp
add
(bad)
out
mov
test
imul
pushf
or
inc
pop
call
fmul
shr
sahf
or
mov
or
imul
xlat
pop
scas
mov
imul
cwde
imul
in
cwde
outs
cmc
cmova
mov
mov
fmul
cmp
(bad)
(bad)
fld
and
xchg
call
dec
and
add
push
out
stc
jecxz
mov
jnp
fucom
jge
mov
aas
mov
jge
mov
aaa
jo
jl
outs
and
fldcw
popf
cmps
jae
ins
mov
in
xchg
outs
imul
mov
push
scas
jp
mov
inc
test
xor
dec
xchg
cmc
add
pop
mov
mov
fadd
mov
shl
dec
jmp
pop
outs
enter
push
cdq
call
dec
addr16
std
mov
mov
popf
fiadd
cmp
jp
into
push
inc
xor
jge
ja
mov
fdivr
jnp
fsub
fwait
sub
mov
and
movs
sahf
inc
lods
mov
add
cmps
das
rol
sub
dec
fisub
mov
jnp
(bad)
clc
call
outs
movs
xor
stc
inc
or
aas
lods
sahf
in
xchg
fst
mov
push
es
unpckhps
fst
out
cli
mov
pushf
repz
movs
adc
in
push
and
(bad)
pusha
cmp
fldenv
sub
push
cmp
push
sbb
ror
mov
jns
cli
retf
cmp
mov
jmp
sbb
mov
xor
popa
cs
popf
shl
add
js
push
outs
es
add
or
ret
add
jbe
cmps
cmp
sub
mov
call
and
adc
rcr
int
shl
jb
xacquire
xchg
jbe
push
or
and
mov
jae
in
cmps
xor
pop
inc
add
add
xor
jg
sahf
jbe
loopne
pop
push
push
mov
inc
jle
bound
push
xchg
arpl
cmc
pushf
fimul
ss
mov
mov
and
mov
sbb
pop
mov
pop
dec
in
cmc
pop
mov
add
int
mov
mov
jbe
mov
and
sbb
and
daa
gs
shl
dec
jno
sub
mov
repz
fld
outs
or
icebp
xchg
inc
push
cli
or
cmp
sub
ficomp
popa
(bad)
cdq
rol
push
dec
test
mov
popf
fs
call
push
outs
es
jnp
mul
mov
mov
ss
and
(bad)
sti
test
mov
xchg
in
cmp
mov
in
push
(bad)
jo
or
sbb
rol
stos
pop
and
(bad)
out
(bad)
pop
adc
fnstenv
mov
test
movs
stos
xor
pusha
cmp
ins
dec
mov
push
in
mov
clc
or
js
and
mov
call
repnz
sbb
js
dec
clc
call
scas
lds
cmp
xchg
mov
adc
lahf
into
mov
fmul
mov
retf
inc
test
xchg
aad
das
or
scas
loopne
cmps
and
mov
sbb
sub
mov
outs
push
cld
das
jb
sub
push
jle
sbb
daa
sbb
daa
pop
gs
mov
xlat
push
ja
and
mov
ss
xchg
js
jmp
push
jge
(bad)
lods
loope
or
sldt
(bad)
rcl
enter
dec
mov
sti
inc
pop
push
lods
mov
push
scas
(bad)
pop
sub
imul
push
mov
js
jl
test
and
fisub
jae
jmp
add
pop
mov
sub
dec
push
(bad)
out
pop
mov
into
jge
(bad)
lds
cs
std
(bad)
fstp
aas
out
jmp
add
leave
cs
test
jb
xchg
cmp
stc
mov
push
ins
dec
pop
fstp
fisttp
rcr
cmps
jae
pop
(bad)
imul
xchg
jle
sbb
dec
xor
adc
inc
pop
loope
nop
mov
lods
inc
jb
js
pop
out
sub
lods
fstp
cmp
adc
dec
jo
call
arpl
cli
push
stos
mov
mov
je
mov
(bad)
add
dec
xchg
shr
les
sub
and
cmp
xor
xchg
add
je
(bad)
arpl
lods
movhps
shl
sbb
or
mov
mov
xchg
ss
fistp
mul
js
lock
hlt
cmp
test
push
aaa
pop
je
mov
int
in
retf
les
add
pop
sub
push
fst
ds
lock
not
(bad)
mov
add
dec
fistp
aaa
dec
jl
sub
test
mul
and
push
fnstcw
push
jno
cmp
jmp
test
sahf
dec
and
push
push
sbb
leave
or
lds
ror
add
(bad)
fnstcw
pop
lahf
sub
pop
dec
in
cmp
sub
xchg
xlat
retf
ret
aas
je
xlat
dec
cmps
xor
inc
xchg
inc
cmps
add
sbb
adc
data16
mov
and
sub
push
xchg
or
adc
or
arpl
push
nop
xchg
(bad)
test
(bad)
in
cmc
retf
cmc
pop
or
mov
sub
jno
stos
push
out
cwde
jl
sub
jecxz
ficom
daa
or
addr16
lds
adc
xchg
mov
js
fsub
sahf
fistp
xchg
lds
lds
jge
pop
lods
rol
xor
cmp
loop
mov
cwde
inc
lods
mov
jmp
lahf
or
cmp
jae
bound
aaa
mov
push
sbb
arpl
ror
sub
inc
gs
mov
stc
pop
cmp
shr
add
inc
outs
std
test
sub
push
popf
and
xor
cwde
inc
pop
push
std
(bad)
mov
push
sbb
mov
out
mov
push
inc
imul
cmp
xchg
shr
dec
push
add
xor
lock
or
sbb
jbe
cmp
jmp
call
bswap
mov
xor
xchg
cmc
cdq
adc
gs
or
mov
sub
add
jbe
and
rol
mov
xor
jl
lock
movs
movs
div
pop
xor
mov
cmc
aad
add
les
xlat
push
mov
shr
sbb
in
daa
adc
fwait
inc
inc
or
ins
clc
add
cld
and
jns
fimul
sub
push
and
je
jo
mov
pop
mov
push
mov
out
mov
sub
jne
shr
ds
ret
sbb
rcr
sets
or
neg
sti
jbe
mov
pop
lahf
popa
adc
dec
add
test
icebp
and
(bad)
inc
(bad)
pop
push
add
(bad)
aaa
rcl
pop
jmp
into
out
xchg
in
push
inc
jne
mov
mov
xlat
sbb
push
or
mov
fwait
outs
scas
sub
and
cmc
push
mov
in
cmp
int3
cmp
cmp
dec
out
cdq
gs
in
dec
xchg
(bad)
data16
or
(bad)
aad
lahf
add
fs
scas
gs
mov
(bad)
ins
nop
pop
sbb
push
mov
dec
xor
add
sti
aas
sahf
lods
sbb
add
add
cmp
jne
out
ins
std
sbb
jecxz
stc
nop
jmp
pushf
sbb
cmc
imul
adc
inc
jne
cs
xchg
cwde
mov
dec
cmp
pop
mov
(bad)
out
adc
adc
ret
push
gs
or
les
fwait
js
and
bound
xlat
push
push
adc
gs
or
sbb
scas
rol
scas
dec
sbb
xor
(bad)
into
add
mov
xlat
(bad)
mov
inc
sbb
scas
cdq
jp
jl
xor
or
call
xchg
nop
mov
mul
ins
and
or
out
std
mov
dec
out
mov
xor
test
movs
pop
outs
(bad)
frstor
mov
je
add
xor
xlat
out
call
pop
pop
aas
stos
stos
mov
clc
cmp
cmp
cmp
push
adc
movs
movs
xor
jmp
imul
mov
mov
iret
jmp
(bad)
test
pusha
test
push
std
add
sahf
cmps
(bad)
sub
lds
into
xor
scas
dec
(bad)
fmul
bound
lds
stos
int
leave
add
push
xchg
jne
mov
xchg
push
mov
push
test
ror
xchg
or
cld
jecxz
xchg
test
add
adc
jns
and
call
add
and
out
inc
xor
das
sub
mov
out
jg
push
or
push
adc
jle
mov
mov
out
push
lods
xchg
inc
and
jns
loop
sbb
js
scas
sub
add
cdq
(bad)
or
pop
mov
clc
dec
adc
stos
dec
sub
clc
adc
mov
add
jo
rcr
push
and
mov
sub
add
cwde
(bad)
xor
pop
cli
ds
(bad)
daa
movs
shl
pop
sbb
xor
add
repnz
jmp
sbb
pop
pop
xchg
test
jge
hlt
test
rcl
lea
jmp
repnz
dec
jl
mov
not
fsub
push
iret
js
call
out
sub
and
sbb
xor
push
or
dec
and
mov
retf
pushf
jg
leave
(bad)
xor
xor
cld
mul
jge
out
mov
iret
lods
(bad)
dec
aas
imul
fisttp
lea
xor
int
cmp
push
push
jge
scas
mov
mov
es
mov
cmc
stos
and
pop
int
inc
xor
push
cmp
fstp
push
cld
adc
cmc
clc
icebp
jns
leave
lea
sti
gs
imul
adc
repnz
mov
sub
mov
dec
and
and
sti
jno
pop
inc
jae
pop
push
dec
pop
adc
inc
mov
outs
stos
into
fwait
mov
jmp
cwde
xor
xor
push
jmp
mov
mov
das
jbe
pushf
movs
test
inc
pushf
shl
xor
dec
pop
sub
leave
mov
ins
adc
push
mov
lea
das
adc
ret
inc
mov
inc
test
mov
lahf
pop
mov
mov
push
fst
pop
adc
pushf
sbb
out
mov
mov
je
int3
inc
jns
adc
xchg
cdq
dec
icebp
mov
ret
push
ins
mov
lea
je
pop
ja
imul
(bad)
mov
int
inc
mov
and
xor
(bad)
call
cmps
xor
or
call
push
jne
mov
fcom
dec
in
(bad)
push
test
popa
adc
pop
xor
outs
call
ss
fiadd
jmp
cmp
add
out
adc
and
cmp
pop
fcmovb
xor
add
sbb
push
sbb
push
jo
push
mov
es
sub
inc
call
dec
cmp
dec
sub
test
cmc
cmp
ret
lsl
dec
and
retf
dec
jno
ror
cmps
fidiv
inc
cmp
stos
push
sub
(bad)
int
jl
push
test
or
push
imul
hlt
xor
movs
aam
jge
sti
mov
push
popa
push
loope
xor
mov
jo
xchg
xor
loope
movs
pop
add
test
jns
js
adc
sti
iret
popf
sub
mov
fucom
dec
sbb
pop
xlat
imul
cs
inc
gs
test
ins
jno
and
pop
or
jmp
pop
inc
mov
adc
fimul
cmp
ss
out
xchg
test
ror
pop
mov
(bad)
mov
or
xor
in
adc
popf
retf
xchg
mov
fst
sbb
aaa
push
push
int
push
push
add
test
ins
retf
lods
xchg
sub
int
sar
inc
dec
test
xchg
shl
(bad)
cld
dec
div
jb
dec
fwait
test
out
or
mov
shr
jno
mov
sbb
adc
les
sahf
sbb
out
or
push
xchg
cli
in
sub
out
or
pushf
addr16
adc
sahf
xchg
xor
call
enter
inc
aam
les
inc
adc
into
retf
xchg
sub
xchg
dec
push
sub
lods
inc
push
mov
mov
dec
jno
leave
mov
fistp
dec
sbb
cmp
mov
sub
cli
(bad)
xchg
add
push
cdq
enter
popf
jmp
cmp
dec
int3
and
xchg
fwait
retf
jge
dec
dec
jmp
std
pop
sub
mov
aam
jecxz
sbb
push
mov
shl
mov
loope
cmp
std
pop
xor
sub
lods
sub
mov
jl
push
test
fisttp
int3
mov
ret
xchg
rcl
jno
push
jle
or
idiv
(bad)
mov
shl
or
sbb
dec
outs
mov
in
dec
mov
inc
ss
adc
sti
push
push
push
add
or
xor
ins
fwait
mov
jb
sbb
(bad)
rcl
lock
test
loopne
push
jno
ds
mov
dec
mov
loop
mov
std
push
mov
jge
inc
(bad)
out
nop
and
dec
push
leave
popa
and
dec
xlat
(bad)
push
adc
popa
test
rcr
gs
retf
or
movs
xchg
cmps
xchg
add
cmp
in
jno
xlat
nop
mov
aas
cs
movs
jl
and
push
adc
xchg
push
push
adc
add
js
cld
and
pop
out
cmp
std
push
lahf
adc
push
mov
sub
cmp
pop
(bad)
retf
fs
and
push
test
pushf
cwde
push
and
push
iret
mov
xchg
jl
mov
imul
scas
retf
xchg
data16
hlt
icebp
lds
in
loope
adc
arpl
stc
bound
pushf
push
pop
ret
push
dec
mov
mov
add
shr
cmps
sub
dec
inc
popa
mov
adc
lea
loopne
inc
dec
xlat
xor
jle
or
call
in
lock
cwde
jp
loopne
int
and
inc
(bad)
adc
dec
adc
enter
je
cmp
push
(bad)
push
mov
adc
imul
jge
repz
mov
cwde
aas
inc
xchg
push
jge
adc
cli
mov
mov
jo
nop
iret
jbe
or
pop
mov
push
in
inc
dec
push
push
mov
xchg
mov
push
cmp
cmp
xor
jge
aam
mov
std
daa
stos
call
jmp
aas
jmp
movs
and
push
sbb
lods
jle
lea
cmp
jmp
push
movs
sbb
aam
sub
jno
mov
pop
test
into
(bad)
jbe
mov
movups
pop
lahf
test
jmp
icebp
addr16
int3
mov
xor
push
(bad)
into
mov
xchg
into
push
aas
sub
xchg
pop
das
xor
loop
pop
inc
add
and
mov
add
adc
push
inc
xchg
nop
xor
add
lock
mov
dec
xor
xchg
adc
mov
aad
sub
adc
cmps
bound
mov
xchg
lods
jne
ret
inc
pop
ss
and
adc
imul
jnp
push
cmp
lea
jno
seta
gs
or
cmp
call
cmp
lea
sbb
lds
les
mov
add
push
js
jne
and
add
(bad)
adc
int3
mov
(bad)
mov
cdq
or
mov
aaa
pop
mov
ins
push
outs
xor
add
loope
fisubr
into
cmc
ds
lock
adc
dec
jb
lods
sar
(bad)
int
inc
std
loope
mov
ds
bound
out
scas
pusha
ret
push
sbb
jl
or
xchg
add
imul
movs
mov
out
push
push
call
retf
inc
movs
les
sub
sbb
push
test
inc
inc
adc
cmp
fs
repz
out
stos
sub
or
fnstcw
(bad)
into
pop
pop
in
dec
nop
mov
jo
ins
test
stos
pushf
inc
pop
xchg
jno
sbb
mov
sub
(bad)
(bad)
mov
enter
(bad)
sbb
add
dec
cmp
pop
and
lds
popf
sbb
cld
dec
push
test
inc
jne
xchg
imul
sub
test
scas
adc
add
test
inc
pop
sbb
adc
add
sub
scas
adc
iret
mov
rol
sub
dec
push
sub
pop
mov
jg
leave
xchg
ret
jmp
adc
repnz
dec
cmps
das
in
fwait
mov
or
jmp
xor
xor
(bad)
nop
mov
xchg
sub
cli
mov
sub
stos
xchg
push
xchg
movs
mov
or
popa
iret
and
ret
retf
dec
cmp
loopne
jne
call
inc
fs
daa
push
ss
and
jb
int3
je
enter
mov
mov
test
pop
xchg
rcl
add
sbb
xor
cmp
lds
and
sbb
addr16
inc
jbe
in
jp
stos
mov
push
dec
jge
jl
lods
cdq
ds
push
mov
fisub
pop
stc
xchg
pop
jbe
aam
shl
cli
movs
inc
inc
enter
jnp
leave
sub
jg
fnstenv
jle
inc
push
aas
pop
ss
movs
cmp
repnz
lods
jp
daa
loope
mov
ret
enter
mov
jle
jg
or
adc
mov
aam
adc
lahf
ss
xor
fwait
ret
xor
repnz
test
pop
jmp
mov
or
mov
mov
push
ror
sbb
ret
jo
cmp
movs
add
loopne
mov
je
xchg
jne
outs
fcom
hlt
lea
pop
mov
dec
dec
or
es
mov
ret
out
loope
iret
scas
add
test
push
cmps
push
xor
test
mov
fwait
or
adc
add
shl
stos
cmp
pop
xor
loope
jbe
or
and
lods
aas
lods
xor
xchg
adc
ds
rcl
inc
fcomp
or
shl
das
fsubr
js
jmp
jge
pop
adc
fist
pop
jle
mov
shl
int3
and
test
test
mov
add
out
(bad)
fistp
cmps
or
add
cmp
mov
frstor
bound
aad
repnz
mov
shl
pop
jp
dec
cmc
adc
add
sub
or
jbe
fistp
sbb
xchg
fwait
or
in
push
pop
clc
cmp
lsl
ror
mov
mov
outs
fimul
jl
enter
mov
cmp
push
or
stos
sub
mul
shl
add
jecxz
jle
rcl
js
mov
(bad)
cmp
mov
popf
mov
nop
fidivr
fldenv
jp
pop
add
adc
ins
mov
sbb
or
pushf
sub
jns
push
sahf
loopne
xor
sub
mov
xor
sub
dec
(bad)
mov
xor
jecxz
jno
pop
add
push
stos
cwd
retf
iret
js
inc
fbstp
test
cmps
leave
outs
mov
jge
arpl
rol
retf
adc
(bad)
sar
cmps
dec
xor
pop
in
mov
and
jmp
into
dec
xchg
mov
and
imul
lods
inc
and
mov
push
adc
movs
clc
jne
dec
pop
add
dec
call
popa
dec
std
ja
dec
sbb
mov
int
addr16
shl
ja
sbb
adc
scas
xor
or
div
cmp
fwait
call
popf
jae
mov
pop
in
loopne
aam
loopne
dec
xor
dec
mov
adc
or
pushf
jnp
test
mov
test
clc
mov
cmp
(bad)
mov
hlt
inc
sbb
das
xor
packuswb
in
rcl
int3
and
inc
xchg
pushf
imul
out
push
pop
sbb
sub
jno
add
dec
test
mov
outs
jge
imul
and
sbb
pop
sub
fs
cmp
repz
push
ins
(bad)
imul
stc
fcmove
or
fs
in
sti
ds
xor
cmp
adc
retf
dec
jbe
add
hlt
aad
cmp
mov
mov
imul
ror
imul
pop
shl
fldenv
sti
xchg
test
adc
xor
or
add
cs
addr16
outs
cmp
xor
jmp
pop
into
ins
fld
add
mov
sub
jge
lock
xchg
xor
push
fdiv
pop
in
cmp
sbb
fisubr
out
stos
add
arpl
push
fwait
mov
outs
dec
loope
xchg
xchg
les
pop
sbb
pop
sbb
in
inc
xlat
ds
call
xchg
sar
xchg
scas
(bad)
ja
inc
fmul
inc
mov
es
push
psraw
pop
sub
or
add
xchg
mov
dec
aas
or
mov
retf
stos
call
out
sbb
int3
sub
inc
lods
cmc
js
mov
enter
jge
lahf
out
xor
fimul
and
jg
or
stos
or
cmp
mov
push
inc
or
int
cdq
mov
dec
mov
out
out
test
(bad)
fisub
xlat
add
ret
jae
out
(bad)
repz
push
push
das
or
fild
mov
xchg
ret
lods
inc
outs
call
cwde
dec
xchg
cmp
pop
rcl
lods
ss
dec
jnp
call
adc
popa
and
jg
xchg
(bad)
repz
dec
cmp
mov
not
iret
shl
mov
mov
inc
cmp
adc
add
and
call
jmp
aam
mov
and
daa
xchg
loopne
mov
(bad)
jp
mov
xchg
pop
add
(bad)
sti
mov
iret
outs
mov
mov
or
mov
mov
push
mov
popa
pop
jno
add
fwait
pop
cld
in
scas
mov
pusha
nop
mov
pop
clc
addr16
call
add
punpckhbw
rcl
hlt
dec
pop
test
jle
fwait
mov
out
enter
jae
call
frstor
call
mov
sub
fcmovnbe
push
in
xlat
pop
ret
fdiv
fmul
mov
das
dec
pop
cmps
jo
gs
ror
or
daa
imul
jns
ja
out
xchg
or
jmp
mov
ja
std
xor
jmp
lahf
mov
add
mov
icebp
je
mov
test
xor
or
jae
or
xlat
ins
sbb
sar
add
jmp
xor
sahf
fmul
push
gs
(bad)
jne
and
pop
push
mov
popf
int3
mov
or
nop
adc
pop
enter
inc
mov
dec
stos
push
retf
mov
dec
icebp
jl
retf
mov
stos
je
std
mov
scas
sbb
retf
pop
(bad)
imul
cmp
push
test
outs
ror
or
push
js
jle
cdq
pop
push
cli
into
stos
call
fdivp
mov
add
dec
popf
sbb
jno
ret
out
mov
cmp
je
lds
jns
addr16
jl
jge
call
lock
int3
jb
int3
cmp
xor
pushf
push
(bad)
or
xchg
(bad)
push
loopne
daa
setnp
out
or
mov
inc
add
cld
fdiv
pop
jge
jo
es
out
jb
dec
sbb
and
hlt
sahf
pop
inc
mov
lds
push
xchg
loop
movs
push
(bad)
jmp
mov
push
fwait
inc
retf
arpl
mov
add
fist
lods
fstp
pop
push
cmps
pop
je
arpl
stos
movs
scas
push
std
mov
stos
mov
add
xor
ds
call
jle
push
or
loop
out
call
dec
stos
outs
cs
push
sub
or
popa
test
sbb
push
pop
fwait
addr16
add
shl
test
jl
daa
push
pop
and
dec
push
or
sbb
aam
addr16
xchg
test
mov
das
jmp
dec
sub
daa
xor
lods
cmp
inc
and
enter
mov
or
pop
pop
(bad)
int
or
ins
cmps
daa
xor
(bad)
sbb
add
push
jge
push
ror
out
stc
xor
rol
out
and
(bad)
daa
cli
jno
or
jl
pop
sub
jo
bound
lods
not
jbe
sbb
jmp
add
aam
bound
xor
rol
jmp
xchg
sbb
jmp
sbb
push
xchg
cs
jecxz
stc
fiadd
xor
jp
arpl
pusha
xlat
jo
popa
popf
xchg
cmp
push
nop
add
stos
les
cs
inc
jae
add
sbb
(bad)
and
add
and
mov
adc
push
data16
callw
into
dec
and
inc
mov
mov
test
pop
or
sub
les
loopne
(bad)
push
(bad)
fidiv
add
(bad)
mov
cli
(bad)
sbb
jbe
sbb
aas
lahf
cli
xor
and
lods
or
mov
or
fnstsw
mov
inc
sub
outs
cmp
push
dec
xchg
test
lahf
push
inc
test
jecxz
sbb
cli
sar
jge
iret
jo
scas
cmp
inc
shl
xor
mov
xchg
jg
rcl
mov
mov
js
stc
mov
mov
add
sub
xchg
jg
mov
idiv
jle
xchg
pushf
xor
stos
mov
lds
push
adc
rcr
cmp
and
retf
out
outs
test
sub
jno
ror
cmps
mov
inc
sub
adc
loope
mov
push
xor
sub
xor
mov
pop
mov
dec
lea
inc
imul
xchg
movs
or
or
gs
dec
dec
(bad)
jle
jecxz
int3
sar
test
inc
loopne
(bad)
add
out
add
call
jl
retf
rep
push
adc
cmp
add
aas
(bad)
or
test
lods
inc
neg
xchg
and
add
xchg
aaa
sub
int
ret
in
mov
popf
imul
pop
mov
call
jmp
mov
mov
mov
pop
(bad)
jo
or
sbb
out
lds
sub
sub
das
imul
movs
mov
push
adc
in
add
adc
sbb
retf
cwde
jmp
or
adc
push
mov
rcr
xchg
jno
mov
rol
jno
(bad)
dec
xchg
and
outs
in
push
mov
mov
dec
mov
mov
pop
jge
xchg
in
cmps
out
xor
cmp
mov
cmp
enter
adc
js
cmp
shl
or
and
xchg
sub
mov
and
enter
movs
add
xor
cmp
sub
sbb
mov
cmp
movs
mov
cmc
scas
sub
jne
sub
cmp
push
jne
xchg
aam
mov
movs
test
nop
push
cmp
lods
rol
stc
retf
stos
pop
xor
and
dec
and
adc
push
mov
fwait
xchg
xchg
imul
fcmovu
loop
shl
sbb
jle
sbb
mov
nop
(bad)
arpl
outs
fild
cs
ja
stos
iret
sbb
ins
mov
mov
outs
mov
inc
(bad)
and
adc
lods
div
in
push
stc
cmp
mov
jmp
out
imul
movs
push
push
ss
cmp
cli
in
push
add
mov
lods
in
push
mov
pop
lock
stc
or
xor
cli
jecxz
inc
or
cmc
pop
dec
or
jle
outs
call
loop
(bad)
pop
and
(bad)
cmp
xchg
add
clc
xchg
jae
mov
outs
push
aad
mov
fild
imul
sub
imul
jb
inc
leave
icebp
dec
push
xor
pusha
lock
or
add
clc
je
mov
add
(bad)
aad
out
cmp
jg
sbb
mov
xchg
popf
push
sbb
inc
sbb
cdq
xlat
mov
xchg
add
xor
adc
adc
mov
jmp
xchg
imul
mov
clc
xchg
outs
and
ins
add
jp
mov
lahf
retf
mov
test
cmp
push
aaa
and
sub
inc
push
pushf
jge
jne
(bad)
clc
aas
sbb
push
jmp
iret
add
call
pop
mov
rcr
enter
cmp
xor
jne
adc
sub
sbb
dec
sbb
lods
jns
mov
mov
aaa
pop
inc
mov
push
dec
or
cmp
mov
sub
dec
daa
rcr
xchg
xor
mov
scas
jnp
pushaw
xchg
into
cdq
pop
adc
sbb
mov
mov
xchg
std
jmp
jp
lds
loopne
rcr
push
iret
inc
xor
test
icebp
pop
dec
cmc
mov
sub
cmp
scas
push
call
int
push
push
out
add
jnp
enter
push
hlt
pop
mov
mov
pop
addr16
nop
mov
mov
daa
mov
cmps
inc
sti
imul
adc
or
or
mov
fcomp
adc
outs
mov
stos
inc
sbb
repz
sbb
push
adc
inc
jle
test
pop
js
jge
pusha
popa
push
mov
push
imul
pop
xchg
fsubr
aam
jne
(bad)
fst
std
dec
mov
mov
ret
inc
movs
leave
sbb
div
iret
sti
leave
in
aam
sti
(bad)
xor
(bad)
mov
sbb
ficomp
outs
je
jle
and
or
retf
ds
lods
jmp
sbb
xchg
jl
outs
aaa
mov
and
aad
call
sbb
pop
call
bound
leave
out
xchg
push
sar
pop
out
mov
xor
imul
mov
cmp
push
mov
xor
sub
mov
cwde
leave
cmp
ror
sub
ret
je
ss
mov
int
adc
loop
loopne
mov
lea
sub
jbe
jl
fs
pop
aam
fidiv
push
add
dec
fstp
pop
ss
pusha
movs
sbb
mov
jb
out
xchg
inc
xchg
mov
les
or
sbb
dec
inc
mov
pop
lock
test
mov
scas
retf
imul
xor
xchg
add
mov
sub
ds
stos
dec
mov
(bad)
test
dec
loopne
int
inc
retf
int3
add
dec
mov
cmc
ins
pushf
sbb
dec
(bad)
xchg
push
xor
repnz
and
popf
xlat
and
push
repz
push
ja
pop
mov
adc
mov
mov
xor
inc
scas
inc
adc
movs
dec
std
imul
mov
jecxz
shl
or
int
mov
dec
ret
daa
sbb
nop
outs
out
xor
dec
pop
pop
ja
rcr
pusha
and
push
cmp
dec
out
sub
xchg
in
cmps
vcvtps2dq
jg
mul
out
cmc
inc
inc
loop
pop
and
hlt
mov
shl
loope
push
retf
xchg
test
out
repnz
inc
adc
(bad)
pop
leave
dec
lea
imul
jmp
add
fwait
aas
cmp
mov
mov
jo
stos
loop
leave
xor
lds
call
sub
xor
jae
and
or
xor
jle
pop
push
(bad)
ficom
xor
aas
or
in
cmps
loopne
jns
add
mov
fisubr
retf
xchg
hlt
mov
push
rcl
into
repnz
and
push
xor
cs
jp
outs
mov
sub
push
adc
fiadd
xchg
xchg
jns
mov
out
sahf
jnp
addr16
sbb
add
mov
jg
test
and
xchg
(bad)
js
int
xlat
lock
sub
push
hlt
sub
dec
jp
mov
jmp
fs
out
cmps
outs
test
shl
outs
scas
adc
and
daa
mov
movs
cmp
xor
adc
stc
loope
mov
fistp
aaa
mov
int3
aas
jae
test
outs
pusha
cmp
fistp
int3
add
cmp
xor
sbb
leave
jmp
int3
xor
call
sub
dec
xchg
es
inc
leave
lock
jp
xlat
es
ss
arpl
mov
sbb
ins
scas
push
bound
mov
test
xor
cmp
into
icebp
(bad)
xchg
sahf
cmp
call
push
mov
dec
or
enter
pop
sar
inc
mov
int3
inc
mov
lea
inc
(bad)
mov
push
cld
sub
scas
add
dec
mov
popa
mov
loope
xchg
das
xlat
cld
mov
dec
clc
clc
stc
sbb
mov
pop
push
pusha
push
js
aam
cmp
push
or
pop
mov
pop
imul
mov
je
mov
pop
(bad)
ja
test
inc
push
stos
xor
ss
mov
xor
cmp
pop
imul
mov
(bad)
daa
jmp
cli
ds
mov
fld
movs
xchg
sub
retf
xchg
pop
call
(bad)
add
mov
mul
inc
mov
(bad)
sbb
(bad)
(bad)
cmps
dec
rol
xchg
test
fsub
stc
pop
inc
lods
pop
call
dec
dec
retf
dec
push
fnstenv
adc
out
or
test
mov
movs
(bad)
push
test
in
ja
xor
stc
test
xchg
lds
movs
sbb
cli
shr
xchg
push
sub
sub
mov
(bad)
jns
push
xor
push
into
jg
std
push
and
jmp
add
push
lahf
mov
inc
sbb
(bad)
(bad)
dec
sbb
mov
or
rcl
pop
shl
jmp
fnstcw
dec
xchg
mov
mov
and
cmps
cmp
ret
xchg
inc
jno
and
mov
mov
sbb
mov
push
pop
mov
jb
out
inc
sbb
inc
(bad)
icebp
call
movs
cwde
pop
mov
pop
inc
cmp
cli
cdq
push
pop
into
loop
mov
or
jae
in
or
arpl
mov
jmp
cmp
and
inc
(bad)
xchg
xor
dec
lea
sub
jmp
ja
std
mov
stc
add
adc
and
test
daa
jae
into
sbb
add
arpl
stc
ror
inc
rcr
sbb
pop
jp
inc
pop
test
dec
rcr
out
or
pop
enter
adc
xlat
sahf
and
adc
pop
push
je
ds
shl
pop
cmp
sub
jg
in
mov
jp
fiadd
cmp
push
(bad)
or
test
fstp
lahf
fistp
sub
sub
inc
mov
jo
or
xchg
xchg
int3
pop
ss
jle
aaa
adc
xor
in
dec
hlt
sbb
mov
sub
int
scas
outs
inc
jae
cmps
leave
mov
sahf
test
sar
ins
fldcw
rcl
push
inc
test
imul
movs
ins
jmp
xchg
mov
dec
add
(bad)
(bad)
xor
out
retf
and
lock
xor
stos
scas
mov
fcom
jle
iret
mov
loop
fimul
xchg
push
lahf
ficomp
pop
lock
test
jp
jp
sbb
cmp
fst
mov
inc
aas
add
sub
shl
mov
movs
pop
ret
and
cmps
mov
push
pop
jge
jae
xor
fcom
sub
xchg
test
inc
ficom
mov
xchg
or
rcr
aas
xchg
je
xor
xlat
mov
into
jno
(bad)
out
dec
out
popf
repnz
retf
cmps
sub
and
(bad)
js
inc
imul
mov
out
aas
icebp
dec
js
cmp
jmp
mov
inc
cli
cmc
push
test
mov
jmp
loope
sub
jbe
adc
push
mov
dec
pop
stos
jo
push
xchg
mov
out
addr16
rol
or
mov
ret
ror
mov
out
call
jg
adc
scas
(bad)
xchg
add
xchg
pop
clts
adc
loope
dec
sbb
(bad)
pusha
cmps
and
loopne
and
cmps
mov
mov
xor
sbb
push
mov
aas
adc
mov
sub
xor
lea
push
sub
and
mov
cs
xor
and
lds
ds
js
dec
xor
je
cdq
popa
cmp
or
or
jmp
in
ja
sub
fs
lods
add
mov
addr16
es
push
pop
aas
jp
dec
(bad)
lods
push
int3
cmp
ins
mov
mov
lds
sbb
sti
xor
lds
test
inc
or
pop
scas
and
enter
push
(bad)
loopne
adc
jo
cmps
inc
loopne
jge
cmp
xlat
out
movs
adc
jne
retf
mov
repz
cld
mov
imul
movs
stos
mov
and
lods
gs
scas
popf
push
ins
out
cmp
enter
jae
pop
div
xchg
mov
mov
xor
mov
cdq
and
bound
shl
xchg
sub
xchg
adc
call
and
retf
push
icebp
and
jmp
fcomp
repz
mov
pop
addr16
in
js
jnp
ins
dec
repnz
cmp
push
sub
and
into
sar
cld
movs
mov
sub
sbb
jg
and
push
jns
test
pop
lahf
add
imul
add
cli
nop
icebp
test
mov
sbb
imul
aaa
xor
rcl
popf
jmp
dec
sub
xor
shr
pop
stc
mov
jmp
mov
or
add
pushf
stos
mov
sbb
jb
add
sub
and
inc
stos
and
jbe
ja
call
xchg
addr16
outs
sub
std
fisttp
cmps
clc
inc
or
cmps
loope
push
das
and
mov
or
(bad)
add
(bad)
inc
or
(bad)
pop
or
dec
rcl
xor
test
shl
(bad)
xor
and
(bad)
mov
mov
mov
jecxz
adc
in
call
sbb
hlt
ja
adc
stos
dec
ins
xchg
mov
inc
jno
lahf
fs
test
sti
(bad)
dec
mov
pop
or
cmp
rcr
outs
dec
dec
retf
inc
dec
ins
into
je
add
jno
push
mov
cmp
inc
es
pop
(bad)
ins
mov
sbb
stos
or
(bad)
xor
int
scas
xchg
rol
adc
sar
std
mov
(bad)
aas
pop
jns
into
mov
retf
sub
rol
mov
bnd
clc
int3
scas
sar
cmp
mov
xor
sub
pop
fsub
mov
lods
cmc
mul
pushf
icebp
in
push
push
mov
xor
popf
xchg
inc
jl
js
imul
push
jecxz
ret
cmp
pushf
js
xor
ins
(bad)
pushf
jno
sbb
iret
sar
out
add
loope
push
in
dec
(bad)
mov
jge
cmp
in
xchg
fs
shl
in
bound
add
mov
cmc
pushf
test
jle
cmp
outs
or
cmp
fnstcw
(bad)
test
xor
dec
mov
ror
sti
pop
inc
mov
cmova
retf
or
inc
lods
push
and
ss
bnd
neg
(bad)
jp
ja
(bad)
xchg
lahf
add
in
div
out
retf
mov
fwait
jecxz
dec
imul
stos
dec
psraw
adc
inc
mov
push
addr16
retf
test
gs
loope
pop
jo
(bad)
mov
pop
gs
mov
push
test
enter
aad
mov
ss
cmp
imul
xchg
mov
adc
in
cs
pop
call
mov
or
push
shl
in
fld
fist
pop
sbb
les
mov
pop
mov
cmp
inc
shr
fidivr
fsubr
ret
jbe
sbb
shr
push
or
idiv
movs
and
scas
mov
dec
mov
inc
or
mov
cmps
data16
ins
fidivr
and
xchg
jg
ss
stc
fisubr
cmc
mov
shl
imul
(bad)
outs
test
sub
fcomi
out
mov
pop
mov
add
arpl
retf
lods
push
int
mov
xor
adc
adc
stos
cmps
pushf
outs
or
or
cdq
jg
pop
shl
jno
cdq
inc
sbb
les
xor
retf
stc
jns
aad
push
mov
adc
and
in
stos
xchg
mov
xchg
retf
cmp
scas
stos
add
arpl
xchg
sar
iret
aas
dec
pop
(bad)
dec
cmp
shl
xor
inc
lock
iret
movs
jne
cmps
xchg
push
outs
sub
mov
xor
les
cld
fsub
jge
sbb
bound
sbb
ins
movs
cmp
xchg
ret
cs
dec
or
dec
push
pop
ds
shl
std
xchg
shr
mov
xor
cmc
movs
dec
hlt
mov
mov
push
mov
(bad)
jecxz
in
repz
aaa
adc
(bad)
aam
mov
imul
and
push
add
dec
and
js
xchg
push
scas
or
xchg
into
cmp
je
mov
lds
push
nop
daa
xchg
les
cmp
add
push
inc
xor
or
div
fsub
loop
imul
aam
push
sub
popa
fwait
and
xchg
pushf
and
outs
push
imul
addr16
bound
imul
mov
sbb
or
inc
inc
xor
jg
fimul
or
addr16
hlt
add
icebp
xchg
cmp
mov
adc
icebp
popf
jmp
sub
inc
mov
xchg
imul
fwait
push
in
cmp
mov
and
test
je
cdq
add
call
cmp
out
push
sub
imul
jno
cmp
inc
push
mul
dec
fs
aaa
pop
jns
fidivr
in
imul
ret
fs
mul
cmp
les
enter
or
aam
dec
bnd
jg
jge
dec
fldl2t
std
xchg
xor
inc
sbb
leave
dec
fstp
(bad)
xor
jnp
dec
pushf
data16
jmp
adc
inc
enter
and
pop
fcmovnb
adc
push
xchg
in
ins
inc
mov
test
and
sbb
mov
push
aaa
dec
push
xor
mov
std
imul
jmp
push
jecxz
sti
mov
(bad)
pop
fbld
sbb
inc
jg
mov
popa
jns
pushf
pop
dec
cmp
outs
cmc
jnp
out
push
or
cmp
es
movs
or
rol
clc
loopne
mov
mov
mov
mov
inc
push
sbb
jecxz
popa
inc
ret
xchg
imul
imul
cmp
es
mov
bound
cmp
int3
jle
retf
imul
or
push
xchg
ds
xchg
and
dec
test
lods
push
and
sar
(bad)
or
jnp
inc
adc
fucomip
pushf
xlat
std
js
sbb
(bad)
mov
and
(bad)
test
js
xor
cmp
sar
popf
fs
sub
mov
push
jecxz
add
mov
sbb
loope
(bad)
sahf
lahf
stos
adc
xchg
cli
adc
jp
jb
scas
jns
rol
mov
fsub
pop
lock
rcr
dec
sub
leave
sub
push
jbe
pop
xchg
cmp
sbb
popa
stos
addr16
daa
mov
or
or
jmp
scas
mov
fadd
pushf
jae
and
xchg
js
hlt
pusha
sbb
mov
(bad)
aas
dec
pop
ins
sub
ja
pop
cdq
sub
push
sub
int
and
mov
ds
into
fs
jae
or
jg
push
pop
jg
pop
sahf
call
stc
jb
push
das
inc
sub
(bad)
stc
push
ffree
scas
pop
ja
aam
outs
ds
in
xor
inc
push
es
(bad)
das
gs
out
int3
loop
retf
(bad)
jp
ins
shl
add
aaa
aaa
mov
shr
pop
outs
ja
sub
and
mov
cwde
jae
in
mov
js
mov
in
or
fcomip
sbb
xchg
lods
mov
xchg
sub
push
inc
jmp
enter
cmc
std
aam
sub
xor
push
pushf
mov
cmp
out
pause
adc
mov
mov
ins
cmp
rcr
scas
out
cdq
out
inc
dec
rcr
sub
add
test
xchg
jg
ret
xchg
sbb
retf
sti
cld
clts
jae
pop
scas
jmp
imul
adc
adc
movs
pop
pop
sahf
xor
mov
ror
cdq
pop
(bad)
movs
or
jae
je
sub
dec
addr16
pop
(bad)
mov
pop
push
xor
dec
dec
popa
test
(bad)
dec
pop
push
pushf
sahf
mul
mov
push
popa
mov
add
imul
jbe
sti
cmps
xchg
out
or
ds
sbb
xchg
mov
fld
gs
out
int
sub
mov
jge
jge
dec
ss
mov
sahf
sbb
inc
out
inc
adc
dec
fxch
xchg
xlat
fsubr
in
adc
sahf
jno
and
(bad)
jmp
push
test
ret
ret
(bad)
sahf
push
adc
and
mov
jge
neg
icebp
mov
ins
fisttp
xor
pop
add
shl
sub
jmp
loopne
sub
pushf
mov
stos
jg
inc
jno
xor
clc
jnp
adc
lods
pop
lock
push
cmp
(bad)
jo
jne
ds
cmc
jmp
push
mov
pop
movs
retf
in
mov
inc
pop
xchg
pop
jmp
out
std
xchg
xchg
movs
mov
inc
cwde
jae
(bad)
lock
sbb
mov
(bad)
push
sbb
xchg
lea
cli
pop
fidiv
hlt
fldenv
int3
sbb
sbb
xchg
dec
aaa
adc
pop
retf
(bad)
daa
mov
inc
fmulp
add
push
(bad)
aam
loope
dec
or
pop
imul
mov
adc
sub
es
push
xchg
dec
into
xchg
dec
lods
jnp
cmc
hlt
cli
leave
test
frstor
cmp
push
xchg
and
xor
inc
adc
adc
add
jp
ja
fmul
fld
out
sub
gs
xchg
jae
xor
(bad)
in
call
jle
pop
add
cmps
retf
into
shl
jmp
dec
repz
jp
pop
dec
cmp
jle
pop
dec
dec
cdq
jmp
test
icebp
xor
clc
push
das
jmp
arpl
jno
fwait
sbb
inc
bswap
add
inc
lods
pop
popf
(bad)
(bad)
push
cmp
jmp
cmp
mov
dec
add
cmp
stc
shl
adc
loope
iret
repz
xor
(bad)
jp
mov
or
(bad)
pusha
(bad)
fbstp
mov
or
adc
push
sti
mov
gs
rcl
jmp
test
pushf
jmp
mov
in
aaa
out
in
mov
mov
in
int
cmp
test
sub
cs
fld
cmp
(bad)
dec
inc
test
or
imul
mov
cmp
xor
mov
sbb
sub
pop
xor
sub
int
mov
xchg
dec
cmp
or
and
sbb
ret
jp
js
loopne
xchg
add
jmp
leave
cdq
sbb
out
repnz
inc
and
int
mov
shr
in
cmp
mov
retf
mov
xchg
test
clc
cmp
test
fidivr
and
aaa
ror
bound
cmp
imul
aaa
adc
mov
pop
mov
xchg
lea
dec
push
sub
jmp
sub
stos
jb
xchg
jmp
push
xor
mov
and
aaa
(bad)
lock
mov
mov
sahf
fnstsw
imul
loop
in
or
ds
pop
and
add
out
lds
fisttp
imul
push
xor
mov
cld
jae
ficom
fcmovne
jp
jecxz
mov
jb
push
fild
scas
pop
mov
inc
mov
adc
or
adc
pop
lds
fnstsw
les
and
gs
mov
sbb
dec
xchg
scas
xchg
and
push
push
and
ja
mov
(bad)
pop
rcl
jge
fisub
jns
nop
retf
jae
in
inc
das
in
popa
pop
mov
outs
loope
mov
arpl
pop
ins
pop
lea
jg
lahf
sbb
xor
rcl
mov
xchg
push
mov
cmc
push
dec
push
cmc
adc
out
add
xor
xor
or
retf
lods
retf
adc
(bad)
xchg
outs
xchg
inc
adc
in
pop
lds
inc
push
es
mov
cmp
sar
les
icebp
bnd
mov
sub
test
pop
aas
addr16
push
inc
shl
hlt
neg
jb
aaa
enter
xor
ret
enter
inc
cmp
test
inc
xchg
aas
ret
inc
(bad)
dec
mov
mov
fwait
xor
jae
xchg
jbe
or
dec
jae
or
cmp
cmps
mov
idiv
pop
and
out
lahf
mov
stos
mov
mov
fistp
mov
xchg
xchg
add
popf
aas
and
test
sbb
nop
sub
fstp
in
jmp
dec
push
call
push
das
jno
xor
jp
and
xor
add
inc
xor
mov
nop
sar
or
sbb
pop
mov
inc
jmp
leave
sti
daa
push
or
mov
pop
push
mov
fild
aas
cmp
jmp
xor
jb
and
pusha
loopne
sub
mov
movs
adc
ss
sub
xchg
push
jns
cwde
mov
(bad)
jnp
lods
pop
lock
dec
outs
pop
ret
jge
cmps
push
out
loopne
adc
js
xor
push
nop
inc
loop
or
aam
retf
jmp
and
push
mov
cdq
mov
sar
test
mov
cmp
in
pop
inc
mov
mov
aam
xor
lea
aam
ins
rcr
in
test
test
out
push
fwait
cli
fldcw
dec
mov
out
dec
cmps
pop
aas
pushf
jne
out
sar
fs
jo
pop
sub
adc
cmp
movs
push
movs
bound
(bad)
adc
nop
(bad)
jne
inc
(bad)
jmp
mov
adc
mov
repnz
cmp
cwde
sti
lahf
je
shl
jae
les
xor
icebp
xchg
ficomp
jp
aam
test
sti
into
and
mov
jo
int
sub
add
mov
fld
outs
mov
lds
ficom
sub
dec
cmps
pop
dec
pop
sti
lds
pop
mov
sub
pushf
cs
sub
hlt
adc
xchg
or
popa
sbb
push
and
push
push
inc
sub
pop
repz
push
pop
lods
icebp
(bad)
cld
jmp
or
push
xchg
fcmovbe
jp
dec
inc
lock
jmp
mov
inc
pop
xor
ret
cld
in
adc
add
pusha
out
pop
data16
loope
and
jo
fs
and
imul
cmps
stos
popa
shl
fidiv
add
xor
jnp
mov
in
mov
lahf
push
adc
mov
push
adc
mov
lods
xor
pop
add
lds
imul
(bad)
mov
cmp
fbld
push
(bad)
push
mov
xlat
repnz
and
mov
(bad)
xchg
fild
mov
inc
arpl
lods
xor
mov
push
xor
lahf
jle
pusha
inc
inc
enter
xor
enter
popa
cmp
adc
mov
sti
(bad)
retf
aad
sub
xchg
sbb
mov
and
pusha
or
adc
cmp
adc
push
inc
ins
cld
and
loopne
cmp
and
cmp
fcom
inc
xor
out
out
sub
je
xor
inc
adc
repz
xlat
sub
les
js
mov
iret
or
sub
cdq
lods
inc
jns
pop
inc
test
cmc
(bad)
gs
leave
mov
nop
shr
out
adc
jp
pop
adc
in
mov
outs
cmp
mov
leave
int3
imul
in
dec
adc
aaa
jg
add
mov
xchg
add
jnp
xor
cld
adc
xor
inc
dec
aad
mov
dec
cwde
cmp
pop
mov
pop
jne
dec
repz
jo
movs
je
imul
jg
daa
push
ins
mov
les
pushf
sbb
(bad)
fwait
xor
and
aas
fidivr
jp
push
int
dec
retf
adc
(bad)
cmc
push
(bad)
ficomp
int
fidivr
xchg
dec
push
loop
(bad)
gs
mov
lods
sub
sbb
hlt
add
xor
jl
ins
sub
xor
lahf
mov
test
icebp
and
fild
mov
adc
xchg
mov
push
mov
nop
push
sub
mov
xchg
inc
enter
ja
aaa
xchg
jmp
jg
mov
(bad)
fucom
sbb
mov
mov
(bad)
mov
jno
dec
sbb
adc
scas
in
push
inc
xchg
xor
xchg
xor
stos
push
mov
nop
in
(bad)
ins
lods
inc
and
pop
adc
sub
sbb
mov
call
xchg
push
imul
fisttp
mov
add
aam
jo
or
stc
fstp
mov
(bad)
and
inc
daa
xchg
jmp
fldenv
cmps
xor
mov
push
pusha
xchg
dec
cmc
std
sub
pop
aaa
jae
sbb
mov
add
xchg
leave
sbb
bound
xchg
in
xor
mov
push
mov
cmp
es
add
(bad)
gs
add
imul
pushf
and
in
mov
(bad)
(bad)
xchg
dec
mov
or
imul
outs
shl
xor
lds
scas
or
push
sub
arpl
mov
xlat
js
in
jge
scas
or
xchg
jle
jns
dec
rol
xchg
jg
inc
xchg
sub
test
ds
mov
adc
fidivr
mov
xor
xchg
(bad)
es
inc
loopne
movs
cmps
fbstp
jp
push
fsubr
sbb
int
stc
jmp
push
(bad)
pop
sti
lock
cli
outs
stos
adc
pushf
and
sub
daa
adc
xchg
clc
cmp
and
scas
push
push
and
dec
popf
sbb
in
call
int3
repnz
pop
test
das
retf
mov
inc
jecxz
lds
dec
(bad)
xor
push
(bad)
jge
pand
mov
das
add
push
jne
ret
out
or
add
ds
mov
or
pop
xchg
adc
mov
mov
push
ret
add
(bad)
int
repnz
addr16
je
fs
mov
adc
dec
mov
jecxz
leave
xchg
cmp
dec
ins
bound
pusha
xor
add
es
or
ss
mov
sti
pop
ins
mov
inc
push
mov
jno
leave
aaa
cld
mov
adc
push
fld
add
dec
rol
imul
or
jo
in
and
retf
shr
js
scas
mov
jmp
call
pop
imul
aam
mov
loope
inc
and
rcl
jle
pop
jle
sub
mov
ds
in
pop
cli
scas
scas
adc
outs
leave
pop
jl
xlat
inc
pop
lods
nop
retf
sbb
or
jmp
aad
pushf
mov
(bad)
gs
inc
ds
scas
shr
or
int
mov
and
inc
xchg
add
hlt
pop
sub
mov
ret
jb
outs
mov
mov
xor
cli
cmp
and
mov
pop
pusha
rcr
adc
push
mov
in
pop
movs
ficom
ds
js
mov
and
mov
out
cmc
pop
leave
push
mov
sti
jecxz
cwde
shl
or
cld
lar
jmp
mov
iret
inc
out
add
pop
push
loop
outs
adc
call
sti
jnp
in
retf
ins
out
dec
shl
inc
js
cmp
mov
loopne
test
pop
or
shl
fldenv
dec
enter
xchg
sub
je
aad
or
sbb
add
xor
test
cld
or
mov
xor
mov
push
popa
js
jg
arpl
inc
push
sub
sub
popa
jge
inc
psraw
mov
push
mov
pop
ins
jmp
pop
popf
xchg
cmp
cmps
xchg
dec
mov
sbb
and
adc
xchg
js
adc
add
fistp
jb
rcr
and
test
je
dec
cmp
mov
xchg
mov
push
mov
cmp
movs
das
jnp
mov
jne
mov
mov
jbe
dec
into
push
dec
cdq
xchg
sbb
cmp
mov
ja
and
push
inc
mov
xchg
xchg
jecxz
xchg
arpl
ret
js
cli
jp
ja
xchg
xchg
jmp
outs
pop
and
inc
cmp
(bad)
or
mov
sub
test
es
shr
fstp
call
not
fwait
dec
or
xor
adc
jg
mov
enter
add
rol
pusha
repnz
mov
push
jl
or
sbb
cmp
pop
xchg
cmp
ss
fldcw
xchg
pop
inc
aam
sub
ror
mov
fmul
rol
mov
inc
not
pop
into
dec
mov
daa
jmp
int
jbe
pop
mov
mov
cmp
and
push
ror
xor
jl
cmp
hlt
mov
rcl
cmps
mov
sti
sar
mov
mov
call
push
sub
or
mov
inc
xchg
add
movs
push
sbb
enter
stos
stos
shl
xor
inc
jb
retf
push
sbb
sahf
(bad)
in
jge
in
sahf
mov
push
fild
scas
xor
cmp
dec
pop
test
(bad)
or
bound
add
and
(bad)
cmp
dec
retf
enter
mov
or
xchg
pop
jg
jg
jae
cli
cmp
and
test
cmp
iret
jbe
mov
lock
adc
aad
out
mov
ret
leave
fdivr
test
aaa
cli
or
call
mov
shl
fnstenv
aad
shl
xchg
push
enter
retf
das
movs
add
xlat
not
mov
cmp
jmp
mov
in
sbb
or
fimul
not
out
mov
inc
add
mov
scas
inc
sbb
enter
cli
(bad)
outs
sub
cdq
cmc
mov
pop
inc
cmp
int3
cmc
popf
shl
push
add
push
mov
mov
or
push
std
fbld
outs
sub
adc
pop
jmp
cmc
mov
sub
lea
cli
clc
inc
sbb
cli
xor
xor
sub
xchg
jno
dec
shl
js
add
imul
aad
ins
sbb
cmp
(bad)
hlt
add
stc
jg
push
dec
mov
gs
or
lods
adc
jl
icebp
pop
mov
xor
enter
or
push
cmp
push
in
and
sbb
scas
dec
movs
in
in
jne
ins
or
lock
add
loopne
cmp
push
mov
inc
stos
pop
sub
fldenv
jle
test
popa
xor
and
inc
xor
outs
mov
stos
or
jne
or
mov
lock
(bad)
jno
inc
popf
lods
pop
or
rcl
lods
pop
sbb
into
xor
add
mov
inc
lods
cmps
cdq
pop
les
sbb
in
mov
call
push
int
rcr
(bad)
xchg
loopne
pop
ins
fs
cmps
out
jmp
cli
leave
lock
cmp
pop
pop
ds
retf
jns
xchg
iret
pushf
xchg
in
cdq
pop
inc
int
jne
or
or
clc
gs
sti
dec
shl
and
sbb
fwait
or
xchg
retf
or
fcomp
inc
in
out
fcmovb
ret
mov
test
xor
jmp
sub
gs
das
hlt
in
in
retf
xor
pop
aad
or
adc
push
in
in
push
cvtps2pd
outs
pushf
mov
cmps
push
cmp
cli
push
cmc
and
(bad)
les
or
mov
xor
or
frstor
sbb
loope
add
sub
push
mov
test
or
popf
sahf
sahf
daa
add
jb
sub
dec
adc
lock
nop
or
pop
in
inc
retf
ret
and
inc
aas
das
or
inc
xlat
mov
gs
sub
lea
pop
push
movs
fbstp
lock
repnz
cmp
jns
or
pop
clc
cs
adc
fs
mov
xor
dec
sbb
sahf
xchg
call
(bad)
sub
retf
cmp
and
or
or
fwait
xchg
rcr
aam
xor
push
les
lock
adc
or
arpl
push
fs
jmp
xlat
dec
cmp
std
push
mov
xor
fcmovbe
dec
dec
push
inc
and
and
push
lods
sub
and
add
cmp
mov
xor
sub
lock
push
ss
ins
fdiv
push
mov
mov
es
lahf
dec
xchg
lods
xlat
xor
out
inc
mov
cld
repz
inc
fsubr
mov
cli
xchg
js
xchg
mov
push
daa
pop
sub
mov
push
xchg
mov
js
std
test
shl
inc
push
out
mov
adc
outs
cmc
jo
nop
and
loopne
or
mov
(bad)
mov
scas
dec
pop
(bad)
mul
or
test
out
push
sbb
sbb
xchg
ins
push
xchg
mov
push
loope
sub
es
pushf
sub
xor
jecxz
fwait
and
add
retf
fisubr
mov
leave
cmp
xchg
movs
(bad)
push
and
pop
mov
jp
mov
icebp
shl
mov
cmps
out
xchg
dec
inc
jp
inc
push
cmp
fpatan
push
fsub
cmp
pop
(bad)
or
(bad)
test
ss
in
sub
lock
js
adc
xchg
xor
jae
fisttp
inc
das
and
inc
outs
pushf
repz
dec
test
pop
jo
inc
xchg
jecxz
jno
test
sti
ins
xchg
lahf
scas
test
sbb
retf
leave
jle
lahf
sub
push
mov
fbstp
inc
push
ror
inc
cmp
mov
push
jmp
push
and
mov
xor
xchg
sub
xchg
inc
outs
test
sub
sahf
mov
in
ja
in
movs
jl
gs
popa
jg
sbb
mov
jmp
mov
inc
or
xor
add
sahf
dec
mov
dec
out
repnz
mov
mov
mov
mov
enter
mov
(bad)
mov
fist
jno
sub
dec
push
adc
mov
mov
cmp
pusha
fwait
enter
je
push
inc
mov
aam
xchg
int3
aas
adc
dec
jg
(bad)
pop
icebp
mov
mov
add
cmc
retf
dec
in
dec
sbb
int3
add
jmp
lock
mov
shr
sbb
movs
movs
mov
sti
ss
push
sbb
xor
mov
jbe
clc
adc
cmps
stc
pop
retf
push
xor
rcr
sub
lock
inc
pop
cwde
mov
xor
repz
sub
jmp
push
sbb
cmp
into
jne
mov
add
mov
jecxz
mov
aaa
mov
mov
add
inc
and
inc
mov
jp
dec
lods
test
int3
sbb
or
(bad)
ins
sbb
cmp
ror
daa
je
imul
aas
mov
fiadd
push
dec
test
mul
push
pop
jmp
ins
(bad)
xchg
push
fwait
clc
bound
sbb
aaa
mov
stc
pop
push
iret
fimul
stos
cmp
push
in
retf
adc
mov
inc
leave
retf
mov
clc
cld
mov
pushf
pop
das
mov
xor
stos
call
sbb
or
sbb
mov
inc
add
movs
or
es
xchg
imul
mov
aas
fbstp
push
outs
sbb
data16
aaa
test
dec
in
jg
add
dec
cmp
xor
pop
(bad)
push
push
pop
jmp
(bad)
xor
xchg
jns
in
push
lock
shl
inc
bound
add
or
call
leave
cmps
mov
cdq
rol
or
push
add
sar
(bad)
call
fnstsw
lock
inc
dec
push
iret
mov
cmps
loopne
fsub
out
cli
inc
jge
aam
idiv
pushf
sub
xchg
dec
test
cmp
fcomp
pushf
fimul
xor
xor
jecxz
xor
cmp
add
(bad)
cli
xlat
fwait
shl
movs
jp
mov
pop
inc
pmuludq
shl
or
xlat
push
cmps
jmp
and
xchg
mov
pop
inc
xchg
fisttp
xchg
jae
lock
push
sbb
fldenv
push
or
push
inc
pop
xchg
inc
pusha
int3
mov
inc
push
aas
pushf
in
add
jae
add
sbb
xchg
mov
hlt
sub
outs
cli
add
(bad)
mov
xchg
jecxz
sub
addr16
aad
fmul
jb
rcl
xor
int3
xchg
not
repnz
mov
repnz
scas
sbb
les
popa
retf
inc
sbb
out
loope
(bad)
xchg
and
out
cs
ret
jge
retf
ds
or
jmp
mov
arpl
aam
adc
test
test
in
mov
std
and
pop
jne
add
imul
les
cmps
int
inc
push
jbe
and
cli
xchg
inc
mov
xchg
xchg
xchg
pop
cmps
inc
out
xchg
pop
adc
lock
out
stos
fwait
ins
rol
add
pop
cli
hlt
(bad)
jmp
pop
sar
aad
and
xchg
movs
xchg
mov
jb
mov
ds
rol
(bad)
enter
mov
call
push
js
(bad)
mov
inc
out
inc
arpl
(bad)
sar
imul
xlat
add
jecxz
xchg
jne
aas
mov
ins
repz
cmp
aad
sub
popf
push
pop
lahf
pop
jnp
leave
pushf
push
into
js
inc
imul
sar
adc
imul
cmp
adc
test
data16
cmp
sbb
adc
sbb
or
cmps
stos
(bad)
jmp
push
jg
lahf
out
push
ins
leave
gs
dec
xchg
dec
pop
ins
mov
and
in
xor
mov
cmp
push
xchg
aaa
add
in
repnz
ins
ret
ja
push
test
sub
xchg
cmp
ja
inc
inc
or
xchg
js
popf
(bad)
lods
sbb
jl
fdiv
int
cwde
test
push
push
cmc
sti
std
lock
push
shl
das
imul
leave
sub
scas
pop
sahf
push
mov
jl
sbb
mov
jmp
out
ja
enter
xor
and
out
stos
jmp
cmp
mov
mov
add
inc
dec
call
mov
or
jecxz
jg
inc
ja
pop
pop
mov
retf
sahf
pop
retf
jg
in
shl
mov
sub
int3
out
push
pop
out
(bad)
push
sub
sub
mov
ins
mov
jns
sub
std
jno
fsub
test
xor
stos
dec
shl
xlat
pop
pop
xchg
inc
clc
imul
cmp
gs
(bad)
cmp
sar
xor
loopne
inc
jmp
ret
div
and
and
popa
pop
adc
lds
pop
icebp
dec
mov
dec
add
sub
out
jmp
(bad)
dec
std
loope
dec
leave
call
pop
cmp
sub
fst
retf
les
js
adc
mov
loop
dec
pusha
jmp
xor
mov
imul
out
xor
jne
pusha
rcl
loopne
shr
mov
add
and
mov
aas
jmp
pop
sub
aas
fimul
int
fidivr
les
mov
(bad)
xchg
mov
lea
dec
inc
mov
repz
ss
outs
xchg
push
jmp
cli
sub
fdiv
sbb
xchg
mov
and
add
data16
lahf
(bad)
adc
mov
cmps
inc
aas
cmovge
outs
retfw
push
or
mov
lea
mov
mov
iret
ret
jmp
push
lods
adc
lds
pop
dec
add
cld
sbb
imul
enter
popa
sbb
sbb
leave
into
ins
fistp
adc
clc
inc
rol
daa
retf
nop
addr16
jo
iret
aad
lods
pop
xchg
pop
cvttpd2pi
push
mov
cwde
loopne
shr
and
cli
imul
loopne
pop
jo
mov
daa
mov
add
fs
ret
xor
(bad)
jl
rol
cmp
push
cmp
lods
push
mov
iret
dec
push
pop
psubd
and
mov
or
ficomp
jmp
or
add
xchg
aaa
xchg
xchg
outs
call
xchg
addr16
jo
out
cmp
xchg
outs
pop
ins
cmp
(bad)
mov
test
inc
xor
loopne
imul
dec
test
test
sub
(bad)
mov
mov
dec
xchg
mov
pop
imul
call
cmp
ins
and
adc
fimul
push
lahf
jg
cmp
test
rcl
mov
add
shr
jg
sub
loopne
jg
cmp
movs
mov
jo
ins
xor
sar
mov
(bad)
and
stos
je
xchg
movs
adc
lea
push
mov
fs
sbb
popf
jmp
jmp
pop
scas
sti
or
xchg
lds
rcr
out
clc
xor
mov
adc
xchg
aam
mov
pop
mov
push
inc
pop
jl
mov
add
sub
push
push
xchg
push
mov
jne
outs
and
cmp
mov
mov
mov
ds
ins
dec
out
leave
xor
jge
mov
retf
outs
jl
jg
das
popf
and
xchg
mov
ins
data16
sbb
jae
stc
shl
fcmovne
mov
inc
shl
cmp
cdq
add
dec
jbe
fcom
call
jle
xor
sahf
pusha
lds
mov
mov
test
cmp
loope
inc
mov
cld
jmp
mov
add
inc
mov
mov
xchg
cwde
pop
cli
pop
ja
pop
shl
xlat
call
mov
shr
mov
sub
inc
sub
mov
lock
adc
shl
lods
call
(bad)
pop
sbb
dec
(bad)
hlt
mov
mov
stc
lods
xchg
test
int
sub
(bad)
cmc
mov
fisubr
push
cmp
push
lock
pop
xchg
mov
inc
xchg
ins
fisub
cmp
das
mov
lahf
cmp
jle
cld
lahf
fnstenv
jl
sahf
stc
(bad)
aaa
fdivr
inc
mov
test
mov
jb
loope
push
(bad)
lea
or
mov
dec
pop
or
mov
mov
xchg
pop
mov
push
out
xor
or
dec
(bad)
out
fild
jmp
(bad)
push
ds
xor
inc
jge
and
push
test
scas
pop
sub
ss
dec
mov
or
mov
sub
add
test
inc
test
sti
aaa
ror
jo
mov
mov
fist
inc
fwait
shl
adc
or
inc
sub
push
xchg
and
sti
std
and
and
lahf
dec
cmp
jg
sub
mov
xor
movs
addr16
mov
test
js
mov
pop
rcr
xchg
fisttp
loopne
fcom
jmp
xor
add
inc
aas
jl
inc
jmp
jge
addr16
sub
adc
mov
stc
not
xor
sbb
pop
jnp
out
mov
pop
mov
stos
dec
xor
sbb
bound
sub
pop
ret
xchg
jp
and
dec
adc
inc
jb
out
mov
mov
jecxz
dec
sbb
sahf
mov
std
sub
es
push
dec
pushf
rcr
(bad)
sbb
add
xchg
inc
cmc
bnd
mov
aaa
iret
jmp
loop
adc
xor
push
dec
nop
dec
das
adc
jae
inc
loop
sub
repz
add
xchg
adc
xor
mov
cli
pop
shl
xchg
in
mov
mov
mov
jns
inc
loop
mov
lahf
ss
xor
push
sub
push
xchg
test
aas
sbb
fist
aad
inc
sar
push
fisttp
test
mov
xchg
fwait
dec
iret
or
outs
inc
xor
cld
push
aaa
xor
sub
or
das
jb
lock
inc
mov
sbb
mov
cmps
jnp
aad
jnp
mov
(bad)
lahf
(bad)
add
and
fdivr
out
dec
mov
loopne
dec
loope
pop
xchg
sub
mov
dec
mov
mov
leavew
cmovs
ffree
pop
mov
pop
es
retf
dec
jmp
fcomi
xor
xor
dec
pop
cmc
les
fcomp
imul
xor
cmp
loop
jl
movlps
(bad)
sub
jb
(bad)
das
add
es
test
clc
cmp
lods
imul
pop
mov
cmc
popa
mov
inc
les
loopne
sub
sub
fidivr
inc
iret
jp
and
nop
xchg
cmps
adc
aas
pop
xor
cmps
mov
mov
push
in
push
shr
cmp
shl
mov
jmp
cmp
icebp
pusha
das
dec
call
push
repz
(bad)
lods
pop
pop
ja
popf
mov
push
mov
lea
jp
cmp
add
not
fisttp
add
jo
jbe
fisttp
xor
xlat
ins
loop
xchg
mov
pop
mov
sbb
enter
add
inc
or
(bad)
stc
stos
cmps
push
jbe
push
xchg
out
pop
jle
les
fld
into
fist
ret
mov
les
stos
fst
bound
jae
pop
aas
repz
add
add
dec
scas
xchg
das
and
repnz
mov
add
inc
add
mov
fst
or
retf
sub
ins
xchg
pushf
das
xchg
mov
loop
jle
mov
dec
daa
mov
jae
push
js
adc
push
push
adc
aam
fld
les
jmp
(bad)
mov
aas
test
jle
sbb
or
pop
and
stos
cmps
mov
xlat
vunpckhps
repnz
dec
out
je
push
dec
pop
mov
lea
icebp
mov
iret
dec
push
cmp
(bad)
cmp
or
push
push
and
push
and
or
mov
add
adc
sub
rcr
retf
popf
xchg
int3
bound
xor
outs
data16
xor
dec
pop
push
fiadd
pop
xchg
dec
and
mov
rcr
push
(bad)
mov
ds
push
push
adc
shl
jae
mov
or
dec
xor
or
jmp
loop
sti
(bad)
jecxz
pop
mov
inc
rcl
push
adc
(bad)
inc
or
sbb
adc
mov
xchg
xchg
jl
add
lea
push
push
out
int3
jmp
pop
pushf
inc
shl
ja
or
ret
into
xchg
adc
call
xor
jb
in
mov
bound
(bad)
push
inc
xchg
in
pusha
(bad)
push
adc
out
mov
and
loope
pushf
xchg
jns
sti
and
pop
sub
mov
outs
loope
mov
add
ins
xchg
dec
ja
pop
jecxz
adc
outs
int
int3
adc
call
maskmovq
out
mov
aam
mov
sahf
(bad)
adc
cmps
or
shl
clc
xchg
sar
loop
mov
fcmovnb
mov
adc
outs
retf
cmp
fdiv
jne
in
jmp
lds
ret
sbb
mov
mov
mov
fisubr
into
fst
jp
or
pop
sti
bound
mov
retf
xor
mov
jmp
outs
repnz
mov
jae
xchg
xchg
stos
mov
jne
test
out
leave
scas
in
(bad)
cmp
xchg
jmp
mov
test
icebp
inc
out
dec
stc
test
in
in
outs
and
leave
ins
test
cld
mov
xchg
or
sub
outs
jmp
cmp
push
fiadd
xchg
mov
pop
test
sub
arpl
rcl
xor
lds
xor
mov
sar
in
sbb
fld
and
cmps
mov
(bad)
std
int
movaps
push
xchg
test
addr16
ins
cdq
dec
jmp
in
inc
jb
cwde
sub
jp
scas
loope
into
das
mov
retf
ret
icebp
int3
rcr
xchg
lods
stos
mov
or
mov
in
mov
inc
outs
outs
gs
clc
add
ss
icebp
mov
cmps
xchg
cmp
push
or
pop
loope
lods
ret
(bad)
nop
cmp
stc
in
mov
and
jb
xor
push
pop
ficom
sti
pop
dec
and
lods
fst
jl
(bad)
and
ss
xchg
in
out
add
pop
cmps
ds
mov
jne
aas
int
and
movs
popa
mov
movs
xchg
and
ss
xlat
stos
sbb
inc
xchg
and
mov
cmps
bound
fist
outs
mov
mov
jp
push
call
dec
push
repz
aad
sub
call
cdq
(bad)
and
stos
pop
jns
in
add
mov
sahf
lods
mov
in
(bad)
mov
(bad)
xchg
icebp
daa
sti
pop
mov
sub
pop
and
cmp
mov
daa
clc
jae
xchg
or
das
aaa
das
or
xchg
sbb
ffreep
pop
dec
mov
jmp
jns
into
sbb
arpl
ins
cli
push
data16
jno
sar
xor
lds
(bad)
iret
xlat
dec
and
into
pop
sub
outs
repz
xor
inc
(bad)
dec
scas
pop
push
push
adc
push
or
call
rcr
out
adc
or
cmp
mov
jb
outs
pop
push
push
mov
aaa
cmps
lods
repnz
loop
mov
cmp
call
pop
xor
pop
jecxz
out
int
dec
mov
ins
scas
(bad)
test
inc
add
inc
xchg
jb
sub
inc
cmp
outs
cli
or
xor
in
mov
inc
aam
xchg
pop
sub
popf
enter
xchg
mov
in
fsub
je
lods
cli
push
idiv
ins
inc
shr
fwait
xchg
mov
push
mov
ret
push
xchg
leave
and
stos
xor
xor
sti
imul
cmps
pusha
sub
imul
cs
mov
mov
dec
jns
or
sbb
ja
daa
loopne
jnp
into
mov
loope
xchg
xor
xor
and
enter
sub
adc
pop
mov
ror
in
lea
mov
push
pop
movq
cmp
xor
add
or
pop
mov
mov
stos
add
cmps
sub
loop
add
rol
repnz
jecxz
retf
and
dec
jmp
(bad)
jmp
push
mov
sbb
gs
pop
push
fdiv
pop
loop
mov
sahf
jmp
out
dec
adc
mov
ret
dec
sub
int3
in
push
push
das
mov
pop
add
cmc
das
hlt
sbb
fcmovu
xchg
push
mov
jno
and
cmc
into
dec
push
mov
fstp
pop
fmul
jp
pop
cld
xlat
xchg
inc
push
push
or
mov
add
push
gs
mov
pushf
pop
mov
cmps
(bad)
mov
test
imul
cli
adc
scas
xor
(bad)
adc
in
xchg
cmp
and
mov
dec
pushf
mov
push
adc
sub
enter
mov
popf
movs
test
jp
imul
frstor
arpl
loopne
dec
pop
mov
ins
jmp
fisub
fsubr
lds
or
push
sbb
inc
clc
inc
sub
mov
inc
sub
jmp
add
xchg
sti
mov
xchg
dec
cmps
pop
out
lock
push
lea
xor
inc
sub
mov
pop
mov
inc
(bad)
mov
push
aad
xor
(bad)
cmp
stc
push
pop
pop
xor
shl
in
sti
and
jne
add
pop
jg
dec
aas
mov
aas
test
mov
adc
inc
push
jnp
add
and
push
inc
jmp
js
cmp
mov
ss
jnp
fs
xchg
mov
call
push
sub
sub
data16
sub
xor
out
sahf
inc
rcl
mov
(bad)
mov
movs
enter
mov
sub
mov
or
jg
sub
mov
pop
cmp
adc
faddp
cld
popf
in
int
mov
cmp
mov
sar
jbe
clc
and
mov
pop
fistp
inc
adc
pop
fdiv
out
mov
add
mov
repz
mov
sbb
jno
popa
push
ret
lods
sub
mov
(bad)
and
mov
mov
sbb
xor
or
jmp
adc
mov
mov
iret
jg
movs
cmp
jle
(bad)
inc
push
enter
mov
test
imul
rcr
popa
xchg
jg
nop
outs
pop
xor
in
out
into
rcr
and
stos
inc
(bad)
es
nop
(bad)
adc
xor
dec
jne
xchg
add
jecxz
sub
js
and
out
ja
sbb
and
stos
call
adc
push
inc
bound
in
pusha
xchg
int
mov
mov
jp
pop
leave
in
in
dec
les
xor
ficom
nop
out
cld
ficom
pop
jg
addr16
jmp
jo
push
mov
push
sub
sub
adc
inc
stos
mov
(bad)
sub
mov
les
jmp
clc
ret
inc
lock
retf
mov
jp
jp
adc
xchg
xchg
mov
test
mov
and
pop
das
ret
sbb
fidivr
lahf
not
xchg
ficom
cmp
mov
mov
xlat
or
call
imul
js
in
xchg
jmp
dec
das
js
hlt
out
and
hlt
lock
test
xor
std
jg
imul
sbb
out
rcr
pop
gs
sub
test
in
out
int
lea
xlat
fild
jb
outs
fmul
in
jp
popf
or
jge
ins
or
js
mov
aas
movs
dec
and
xchg
lods
dec
cmp
inc
fdiv
fist
je
mov
cli
(bad)
or
xor
mov
scas
enter
jmp
sub
call
fistp
xor
loope
(bad)
and
dec
loope
aas
or
pop
imul
push
add
call
aam
xchg
das
push
out
sbb
outs
xchg
call
clc
mov
pushf
unpckhps
pop
jle
sar
std
out
mov
xchg
icebp
aam
inc
fisttp
fwait
cmp
leave
mov
push
dec
adc
jne
push
and
dec
dec
cmc
pop
mov
iret
js
dec
idiv
out
test
aad
cmc
xchg
cmp
fimul
inc
icebp
das
push
mov
shl
jno
daa
cli
scas
push
cmp
mov
out
movs
push
sbb
idiv
inc
in
push
sbb
retf
imul
in
ss
outs
xor
aas
js
(bad)
lahf
sub
std
jbe
inc
dec
scas
into
fisubr
push
retf
or
or
ja
mov
cld
pop
cmp
sbb
ja
(bad)
mov
push
jb
pop
repnz
sbb
(bad)
(bad)
and
out
test
popa
pusha
icebp
xchg
jne
mov
mov
push
mov
jmp
shr
pushf
jmp
and
cmps
cmp
aas
cmp
jp
mov
jg
mov
movs
sub
jne
push
adc
cmc
sub
mov
cmp
xlat
jmp
jae
les
je
or
ret
jb
inc
pop
xchg
or
(bad)
sbb
mov
add
jb
not
mov
or
jecxz
push
mov
adc
dec
out
add
sbb
push
mov
loopne
or
sahf
and
sub
xchg
pushf
pushf
test
jecxz
pushf
adc
adc
clc
add
imul
neg
clc
pop
loopne
cmp
sbb
inc
fdivr
sbb
lock
adc
jl
jmp
in
rol
xor
inc
fmul
inc
add
cdq
push
mov
(bad)
adc
cmp
mov
fistp
iret
dec
popa
out
jne
jnp
xchg
jecxz
aas
and
xchg
cmp
aaa
dec
adc
in
jnp
jns
inc
ins
popa
inc
jo
shl
adc
sti
push
data16
mov
punpckldq
out
lods
and
xchg
jae
cld
sbb
shr
pusha
mov
das
repz
nop
push
test
popa
mov
push
mov
dec
aaa
or
outs
cmps
lahf
or
ins
mov
dec
retf
test
(bad)
test
bound
call
jp
inc
push
adc
addr16
push
rcl
jne
enter
mul
cmps
loope
jns
and
loop
jge
and
dec
jae
push
test
push
out
retf
dec
dec
xor
add
mov
cwde
in
dec
or
movs
ror
sub
xlat
(bad)
xchg
frstor
dec
dec
cmp
xchg
mov
cmp
jl
es
inc
sar
inc
test
sar
fnstenv
mov
dec
xchg
pusha
sub
dec
inc
dec
jl
jecxz
xchg
fisttp
push
push
adc
inc
push
mov
popa
adc
cmp
ja
movs
(bad)
cs
mov
xchg
std
jg
adc
xchg
fcom
adc
iret
arpl
movs
push
xlat
pop
sbb
mov
gs
inc
test
push
push
stc
int3
xor
push
fmul
in
or
lea
and
jmp
lods
or
inc
addr16
cmp
outs
inc
mov
or
daa
jmp
xchg
xchg
mov
sbb
mov
lea
fnstenv
icebp
call
push
data16
cld
xor
or
aaa
les
lock
fldcw
daa
aam
sbb
maxps
pop
adc
in
xchg
cld
ins
in
xor
pusha
fs
fcomi
adc
and
push
mov
out
jmp
fbstp
movs
adc
nop
mov
and
fmul
pop
je
sub
push
scas
sbb
sbb
rcr
lods
inc
inc
push
enter
outs
fcmovne
or
movs
and
or
bound
fndisi(8087
push
jl
xchg
aam
out
sbb
lea
rcr
dec
icebp
(bad)
xchg
lock
lea
jb
mov
daa
xchg
dec
mov
jae
sub
mov
inc
ret
dec
shl
add
fisttp
imul
sbb
inc
xchg
sub
sbb
nop
test
jns
cmps
adc
add
cwde
push
or
out
and
rcr
jmp
cmc
(bad)
or
outs
enter
push
popa
scas
outs
inc
mov
jno
xchg
adc
sbb
inc
gs
xchg
xchg
add
or
das
test
(bad)
inc
xor
xchg
jo
jbe
inc
add
in
mov
inc
mov
test
mov
je
mov
retw
shr
mov
mov
mov
movs
outs
xor
push
popf
loop
sbb
cli
lods
and
int
je
mov
jo
sbb
adc
fldenv
mov
retf
icebp
popf
arpl
rol
cmp
xchg
sbb
jmp
popa
xchg
popf
xor
mov
mov
xor
cdq
cmp
xor
mov
je
fld
out
out
pop
(bad)
popf
lods
xchg
fsub
jne
lea
adc
cdq
ret
fwait
retf
into
push
test
mov
sub
pop
mov
je
mov
sub
sbb
scas
mov
pop
or
mov
fld
jb
fwait
pop
cmp
jae
pop
sub
xchg
and
fnstcw
inc
cmp
pop
adc
ins
retf
jecxz
dec
mov
cwde
pop
pop
sbb
ret
or
xlat
cmp
loope
pop
in
lds
xor
enter
push
add
sbb
neg
fisub
dec
clc
mov
retf
dec
dec
(bad)
cmp
add
mov
and
int3
call
(bad)
fmul
cmps
cmps
scas
dec
dec
jns
push
mov
cli
test
lea
cmps
in
pop
(bad)
push
imul
dec
pop
leave
dec
jae
mov
shr
test
cdq
sub
jl
test
push
cli
out
cmp
mov
outs
xchg
scas
(bad)
enter
mov
nop
loop
jge
ins
mov
add
es
(bad)
cmp
push
push
pop
sbb
and
fcmove
mov
inc
bound
mov
leave
pop
mov
enter
mov
call
sub
mov
sub
in
add
pushf
dec
mov
ret
mov
mov
push
movs
push
and
sbb
popf
mov
test
mov
dec
and
add
outs
fistp
ret
inc
sbb
sbb
push
pusha
mov
mov
mov
mov
jecxz
xchg
out
add
cwde
and
cmp
xor
pop
dec
std
pop
push
call
mov
xor
jb
jmp
push
cmp
fnstenv
xor
mov
adc
(bad)
outs
or
xor
mov
xchg
daa
pop
(bad)
pop
xchg
in
jmp
mov
mov
pop
test
add
xchg
jmp
xchg
pop
mov
xchg
test
pop
cmp
or
pop
repnz
inc
ror
test
js
push
pushf
das
inc
xchg
sbb
dec
iret
ret
mov
aam
push
in
xor
jl
add
mov
lea
push
push
inc
pop
add
rcl
or
(bad)
hlt
aas
push
sbb
std
mov
cdq
adc
enter
enter
popf
pop
jmp
inc
mov
iret
les
inc
int
icebp
xchg
enter
loop
sbb
sahf
(bad)
test
addr16
push
pop
mov
ja
(bad)
fst
dec
scas
pusha
imul
fwait
push
fisub
and
jae
and
lock
pop
cmc
or
cs
cmp
pop
or
xor
fisttp
jmp
sub
nop
pop
ja
int
inc
adc
adc
or
jecxz
cmp
jae
iret
inc
stc
mov
imul
daa
mov
sub
int
mov
jg
inc
jno
or
inc
xchg
(bad)
sub
push
dec
int3
xchg
cmp
mul
sti
or
les
scas
icebp
fidiv
pop
jb
test
lods
jge
mov
movs
(bad)
sbb
adc
cmp
mov
lahf
sahf
xlat
aad
test
retf
and
mov
cmps
fwait
sub
das
jae
push
jnp
dec
ins
out
aas
and
mov
or
or
loop
xchg
test
dec
cld
js
jg
mov
add
mov
xor
xor
cmc
xchg
push
lds
push
int
stc
push
cmps
push
dec
int
in
adc
pop
jae
clc
mov
ss
iret
inc
mov
mov
into
jmp
mov
jp
adc
popf
pushf
ins
adc
cld
cmps
sti
pop
scas
lds
cdq
pop
je
iret
aam
cmp
cmp
inc
mov
inc
or
cmp
mov
(bad)
bnd
sbb
dec
out
pop
aaa
jmp
int
jbe
add
cmp
not
pop
cmp
pusha
mov
jmp
dec
loope
mov
cwde
stos
cmp
in
xor
mov
inc
and
xor
mov
xchg
xlat
out
out
in
mov
jg
jnp
js
mov
dec
clc
xchg
pushf
je
sub
sbb
jns
mov
or
xor
dec
sub
outs
and
lods
loop
sar
jno
mov
cmp
cli
dec
fst
ror
and
icebp
out
leave
sub
pop
or
push
jge
push
pop
hlt
data16
daa
add
and
mov
stos
mov
and
into
cmp
mov
lahf
pop
push
and
cli
scas
sbb
pop
jb
cs
fsubr
mov
xchg
fwait
cmps
sbb
cmp
fadd
pop
dec
add
mov
fldenv
sub
div
mov
fucomi
xchg
mov
into
lahf
in
xor
mov
or
les
mov
imul
xchg
add
imul
cmc
movs
popf
(bad)
pop
cmp
xor
scas
push
jno
neg
dec
int3
sbb
stc
add
getsec
imul
cmp
adc
hlt
sub
mov
in
(bad)
loopne
sub
jb
push
jno
add
ret
add
jne
xor
test
enter
and
sar
sbb
popa
fild
pop
popa
sbb
sub
dec
das
cmp
add
and
and
xchg
add
sub
enter
rcr
cmp
sub
fwait
imul
jmp
pop
js
cmp
arpl
movs
or
and
and
adc
mov
test
mov
or
jecxz
or
hlt
mov
pop
xchg
shl
(bad)
jmp
arpl
test
mov
lock
sub
inc
xor
imul
pop
push
mov
pop
aaa
fimul
fisttp
pop
(bad)
pop
fstp
sub
mov
mov
cmps
jo
sub
inc
rcr
fbstp
inc
push
adc
dec
xchg
sbb
xor
sahf
hlt
test
(bad)
(bad)
mov
dec
or
test
in
xor
jae
pushw
pop
or
dec
std
and
sbb
and
mov
hlt
pop
call
jp
fcmovu
dec
ins
es
rol
mov
int3
int3
movs
std
out
es
(bad)
mov
mov
mov
mov
mov
mov
sbb
mov
or
call
aaa
push
inc
in
enter
jge
ja
sbb
or
cmp
je
pushf
movs
fst
dec
inc
sbb
fld
dec
cmp
jp
fisub
(bad)
adc
ret
aaa
les
movs
add
stos
ja
mov
arpl
and
jo
nop
sub
and
sbb
dec
cmp
rep
sub
inc
add
push
jmp
mov
sub
aam
pop
xchg
xor
and
jecxz
sbb
stc
ds
mov
frstor
daa
pop
push
ret
ins
in
and
push
fwait
push
fld
and
lahf
ud1
(bad)
xchg
jmp
sub
repnz
adc
push
mov
push
xchg
xor
shl
push
ins
fwait
jmp
aad
mov
mov
call
jl
sub
xchg
cmp
jecxz
push
loope
or
dec
and
jp
stc
add
xor
ins
dec
add
cdq
outs
mov
outs
jno
(bad)
retf
inc
jl
out
cmc
inc
mov
mov
add
push
mul
fneni(8087
ins
lods
sub
fdiv
or
xor
dec
je
inc
in
pop
sub
mov
push
xchg
das
jbe
cmp
push
cmp
lods
push
and
and
mov
(bad)
fsub
(bad)
jnp
push
int3
mov
push
push
nop
xchg
aas
imul
and
mov
ss
ins
into
mov
repnz
je
pop
out
jle
cwde
stos
sbb
(bad)
xor
mov
imul
aas
scas
test
mov
and
jle
lahf
pop
sbb
dec
fcomp
iret
out
mov
out
cdq
inc
xchg
jp
mov
scas
dec
push
aas
xor
dec
dec
jb
aam
sub
fistp
cmps
fdivr
or
loopne
jno
ins
inc
mov
adc
aad
mov
into
adc
pop
mov
js
jae
ins
mov
and
sbb
les
or
test
jmp
cmp
lods
or
pop
or
pusha
pop
push
mov
dec
fist
sub
shl
jno
xor
jo
mov
mov
div
adc
jge
jne
(bad)
mov
sub
push
xor
call
add
and
mov
sahf
cs
mov
pop
hlt
ins
xchg
pop
inc
sahf
test
shl
jmp
adc
(bad)
rol
lods
xor
fisttp
push
cld
dec
mov
pop
and
jae
je
sbb
dec
inc
ds
and
xor
adc
adc
out
sub
imul
dec
adc
sub
(bad)
and
adc
(bad)
out
arpl
pop
cld
int
ins
inc
mov
out
(bad)
ds
xchg
ja
mov
iret
sar
repz
fsubr
inc
aas
lea
leave
test
les
std
data16
pop
xor
sti
push
scas
adc
cmp
aas
cmps
add
fbld
cmps
dec
sbb
std
push
out
sbb
pusha
out
sbb
lds
add
iret
add
into
in
idiv
ret
cmp
add
fsubr
out
div
movs
pop
bound
add
stos
fidiv
xchg
cmp
jns
push
aaa
aaa
rol
push
push
sbb
xchg
sbb
push
outs
div
adc
fs
in
call
movs
jmp
lods
stos
xlat
jns
xor
rcr
push
cld
test
cmc
ret
dec
outs
push
or
rol
lods
jne
mov
(bad)
icebp
pop
pop
push
(bad)
lods
cmp
push
push
dec
sub
push
mov
inc
dec
add
shl
scas
retf
in
ret
or
sbb
lock
adc
or
mov
mov
or
xchg
add
pop
mov
popa
(bad)
das
mov
and
aam
and
and
call
lods
inc
mov
xchg
outs
add
in
mov
xchg
aad
pop
pop
cmps
add
sar
scas
xor
or
cmps
push
mov
pop
imul
push
push
jae
inc
inc
icebp
loop
aad
nop
sub
mov
mov
and
push
dec
xor
(bad)
cmc
xchg
and
dec
in
frstor
int
pop
(bad)
scas
fwait
sbb
sar
xchg
sar
test
fist
add
xchg
or
adc
dec
dec
push
in
loopne
inc
leave
movups
(bad)
jae
movntq
out
loope
dec
out
jo
fidiv
nop
lock
cs
in
loop
test
popf
imul
ror
xlat
retf
movs
sti
jae
lods
retf
adc
dec
scas
mov
jnp
inc
shr
mov
fcomp
sub
xchg
mov
add
call
fcomp
loope
movs
jmp
jno
inc
sbb
push
aaa
and
adc
push
xchg
imul
and
test
adc
fmul
sub
pusha
and
dec
(bad)
fistp
movs
lahf
xchg
imul
in
mov
jp
jecxz
xchg
loopne
hlt
cli
pusha
scas
push
imul
pusha
mov
dec
(bad)
sbb
outs
ja
adc
push
shl
ss
nop
cwde
sbb
fstp
lahf
aad
jp
add
cmps
push
outs
cmp
sub
int
xchg
loopne
mov
cmc
push
inc
imul
inc
dec
or
test
jno
mov
repnz
test
push
mov
cs
push
adc
mov
imul
ja
xchg
xchg
sahf
stos
fild
xchg
loopne
loop
movs
out
repz
lea
inc
repnz
dec
cmp
push
rcr
pop
ja
xchg
pushf
out
shr
mov
int
into
jbe
mov
mov
dec
cmp
add
mov
push
add
pushf
loopne
sub
enter
mov
push
int3
jecxz
or
xor
pop
call
or
mov
cdq
vgatherqpd
sbb
dec
mov
cmc
jmp
lock
repz
call
xchg
sti
pop
jb
(bad)
out
mov
xchg
pop
and
mov
out
xlat
xchg
es
movs
dec
sbb
popf
mov
sbb
push
sub
mov
and
pop
xchg
cmp
jo
inc
pop
xchg
imul
push
hlt
les
ins
call
jmp
cmc
mov
ret
jno
sar
ins
jne
repnz
test
sub
adc
cli
dec
out
dec
loope
stc
xor
inc
add
popa
jg
rcl
push
movs
cmp
ds
addr16
outs
add
hlt
in
jle
mov
sbb
mov
stos
fwait
cmps
int
add
sti
jb
push
and
jb
mov
push
pop
lods
dec
aaa
mov
pop
mov
xchg
mov
std
jbe
adc
pop
jmp
mov
lahf
lds
fcom
call
jo
xchg
cmp
addr16
in
mov
icebp
mov
adc
popf
mov
(bad)
and
int
push
xchg
jbe
inc
jge
sub
popa
add
mov
jl
imul
fstp
clc
call
jmp
test
lds
cld
int
js
(bad)
cmp
das
sbb
or
xor
scas
push
push
aaa
xchg
pop
mov
push
sbb
pop
jmp
je
jnp
setle
ffree
fstp
or
sbb
call
pop
jmp
pop
inc
cwde
sub
retf
adc
xchg
pushf
lods
retf
leave
bound
xor
retf
in
jns
iret
mov
pop
fwait
ror
pop
pushf
or
pop
adc
imul
ds
sub
ins
mov
shr
out
clc
dec
mov
jmp
loop
mov
lods
int3
popf
mov
sub
in
jo
mov
inc
scas
sub
xchg
xchg
push
(bad)
xor
ds
jns
ins
mov
mov
inc
mov
xchg
stos
xchg
pop
inc
cld
push
mov
lock
pop
xor
pop
iret
mov
sti
xor
mov
pop
imul
push
fist
cwde
cmps
xchg
out
push
adc
sub
cmp
or
sbb
hlt
add
pop
cmp
nop
jae
ret
add
push
mov
push
mov
(bad)
sbb
les
cmps
clc
std
test
push
(bad)
push
adc
and
cmps
jmp
lahf
sub
mov
cs
or
es
cmps
inc
or
jmp
mov
or
jno
arpl
cmc
dec
fs
(bad)
outs
xor
fsubr
sbb
add
or
dec
outs
daa
aam
lods
add
in
fucom
(bad)
enter
retf
add
out
stos
pop
fistp
in
ins
fs
aaa
test
stc
arpl
or
pop
adc
idiv
mov
rcr
jo
inc
sub
pop
pop
fcmovu
lahf
retf
imul
dec
jp
xchg
outs
add
mov
mov
out
cmp
test
inc
xor
or
rcl
adc
push
jnp
enter
jae
(bad)
fdivp
push
stc
call
mov
(bad)
sbb
stos
xor
cwde
pop
and
mov
aas
xchg
pop
mov
mov
sbb
jmp
dec
popf
sub
adc
(bad)
rcl
aas
lods
jae
mov
add
pop
mov
cli
out
xor
les
mov
imul
dec
aas
mov
jle
aad
cmp
mov
popf
fs
ins
xor
pop
mov
nop
adc
mov
push
test
dec
cli
cs
pushf
clc
sub
lods
push
pop
pop
mov
jno
sti
ins
xor
mov
call
xchg
leave
sbb
xor
cmp
outs
xlat
loope
sbb
in
mov
(bad)
mov
cmp
shr
adc
mov
and
shl
outs
inc
add
lahf
fdivr
jp
jo
sub
jg
dec
add
mov
sub
lea
test
add
fist
mov
sub
dec
rol
add
mov
out
fwait
aad
push
sar
xchg
dec
sub
out
outs
adc
daa
dec
pop
repz
xchg
ss
push
int3
or
or
div
popa
bound
jmp
push
outs
jge
popf
xor
lea
add
cwde
push
mov
nop
les
cld
aad
mov
imul
mov
sar
inc
stc
fcomp
ins
or
cmps
aas
in
inc
bound
ins
jmp
fwait
mov
add
adc
adc
int
loop
lods
cli
sub
test
daa
and
movs
or
add
inc
aam
ins
sub
aas
call
sbb
arpl
ss
lock
mov
leave
pop
and
idiv
dec
or
pop
dec
mov
cmp
sbb
stc
sbb
mov
inc
push
pop
xchg
cli
cmps
mov
sub
mov
mov
adc
xor
aad
mov
mov
jg
jle
sub
aad
iret
outs
repnz
and
pop
test
pop
jbe
xchg
leave
mov
out
mov
sti
movs
stos
cli
adc
push
jns
mov
(bad)
arpl
or
xor
(bad)
lahf
sub
sbb
pop
ss
adc
popf
fldcw
loopne
in
cli
inc
xor
xor
fidiv
jg
(bad)
inc
mov
cmps
fstcw
das
sti
enter
jecxz
pop
inc
dec
push
ins
adc
sub
push
mov
fisttp
jmp
mov
jns
lds
data16
(bad)
int
iret
test
bound
sbb
popf
mov
and
sub
in
imul
(bad)
xor
lods
pop
retf
lahf
xchg
sub
dec
sbb
jbe
mov
sbb
jae
mov
and
shr
std
sub
mov
xor
adc
xor
bound
in
out
pop
push
dec
test
sub
int3
pop
fdivr
stc
and
inc
push
sbb
sbb
data16
outs
bound
sti
out
jle
std
adc
jne
gs
cmc
outs
mov
push
cmp
ss
dec
adc
retf
repz
adc
leave
imul
lock
or
cdq
mov
inc
mov
mov
dec
retf
les
imul
pop
push
test
xor
mov
ds
hlt
and
pop
psubsb
je
add
ja
add
ins
mov
inc
jle
fwait
xchg
pop
cmc
in
pop
cmp
xchg
and
adc
mov
fcomip
daa
jb
call
xchg
in
cs
jl
mov
lea
dec
loopne
mov
(bad)
sbb
icebp
pushf
pop
fistp
mov
xlat
(bad)
hlt
ret
jl
scas
sub
mov
pop
push
sbb
mov
pushf
test
rcr
push
lahf
xor
cmp
inc
call
mov
(bad)
xchg
dec
aad
sub
mov
aad
pop
nop
fisubr
adc
cmp
mov
jne
ret
xchg
add
jecxz
scas
mov
mov
push
xor
add
clc
sub
test
pop
mov
ins
sbb
jmp
daa
lods
inc
cmp
movs
or
adc
retf
pop
and
mov
rcl
and
mov
mov
cmp
jge
aas
mov
rcl
sub
test
lods
out
sbb
add
xlat
stc
push
mov
mov
stc
retf
fild
add
cld
pop
dec
loope
cld
test
int
(bad)
jo
cmp
dec
shl
inc
mov
stos
pop
clc
repnz
movs
stc
adc
dec
pop
add
and
mov
hlt
ins
add
repnz
test
div
jo
aaa
(bad)
cmp
xchg
xor
pop
scas
rcr
pop
movs
aad
jp
xor
lods
pop
not
es
call
rcr
xor
inc
ds
int3
ins
sbb
adc
icebp
pop
mov
pushf
fidiv
dec
popf
inc
ss
jae
popa
pusha
sti
xor
icebp
lods
and
jle
jl
and
cmps
push
adc
jb
mov
(bad)
js
call
or
in
push
ret
sub
jnp
aad
movs
pop
pop
xchg
jae
addr16
mov
dec
ret
nop
mulps
adc
jae
fs
hlt
and
cmp
mov
mov
mov
test
into
or
push
mov
sub
and
fadd
xchg
adc
(bad)
jg
(bad)
mov
xchg
mov
cs
xor
or
sub
xchg
mov
test
mov
outs
and
and
daa
cmp
sub
inc
scas
lds
movs
test
push
xor
int
mov
retf
rol
jne
out
mov
cwde
and
ret
gs
jb
sbb
div
mov
pushw
cmp
sbb
sbb
rcl
cmp
lods
xchg
cdq
gs
cwde
and
popf
sub
mov
je
push
sbb
mov
mov
pop
out
xor
and
lds
jl
inc
jge
jmp
pop
push
sbb
jns
pusha
adc
and
jle
(bad)
and
inc
sbb
push
inc
aad
popa
rcl
push
and
cmp
pop
mov
xor
push
sbb
push
sub
xchg
cmp
push
test
xor
call
xchg
mov
jmp
lock
sbb
jbe
cdq
pop
arpl
aam
cwde
pop
rcl
aaa
push
lea
pop
ins
bound
out
push
enter
in
push
adc
or
lahf
shl
sub
movs
into
ss
or
movs
stos
ret
inc
iret
mov
push
push
inc
daa
cmp
xchg
leave
xor
xchg
fs
mov
or
cmc
dec
aam
mov
cmp
jg
aam
shr
xor
or
in
push
stos
and
push
lahf
add
push
jmp
ins
pop
not
repz
xchg
push
xor
imul
add
hlt
pop
dec
fwait
dec
sub
icebp
mov
inc
add
jb
sbb
jecxz
jnp
push
sub
lea
(bad)
xor
dec
iret
and
jmp
and
test
bound
loopne
xchg
scas
dec
call
cs
bound
ja
and
push
mov
lods
mov
push
test
nop
ds
out
es
xchg
mov
loop
paddd
dec
sbb
test
movs
dec
leave
xor
cld
iret
xor
mov
xor
and
mov
ror
and
adc
enter
ret
bound
pop
inc
mov
ret
ins
out
push
mov
or
mov
es
adc
or
call
push
int
adc
ins
pusha
movs
dec
inc
push
and
sbb
outs
cmc
push
jl
shr
imul
mov
fistp
pop
test
mov
in
neg
(bad)
dec
mov
fcmovu
dec
pop
sub
fbld
add
pushf
hlt
pop
stos
pop
jle
pop
sub
cmp
sbb
pop
mov
ss
pop
dec
sar
out
or
xor
xchg
outs
mov
mov
(bad)
adc
lahf
fld
icebp
test
retf
mov
jp
aas
xor
push
sub
rcr
lods
add
pop
jmp
in
out
inc
add
pusha
sub
cwde
xor
mov
leave
dec
jne
iret
int
repz
div
jns
pop
out
sar
cwde
mov
sbb
not
sbb
pop
push
(bad)
fwait
jo
hlt
dec
int3
pop
retf
and
repnz
mov
dec
fld
mov
sub
arpl
fsubr
data16
clc
push
out
sbb
mov
add
(bad)
loope
cmp
or
lods
push
pushf
jnp
in
jmp
add
adc
jb
das
(bad)
stc
sbb
aad
fs
mov
sub
pop
and
sub
out
sub
adc
or
rol
fnstcw
sbb
lea
es
mov
jg
push
mov
sahf
mov
pop
bound
jne
push
fisubr
or
xlat
mov
mov
or
cwde
sub
sahf
or
pusha
sti
lds
mov
shl
add
lahf
imul
movs
bound
pop
xchg
cmps
mov
dec
imul
aas
or
scas
and
xor
push
push
cmp
cmp
ins
sub
xor
cmp
int3
jne
popa
mov
and
xchg
je
and
sub
lea
popa
cdq
pop
in
mov
adc
adc
ins
and
popa
pop
push
jmp
xor
pop
ss
mov
cmp
jno
mov
cld
mov
repz
dec
and
cwde
mov
sbb
jnp
mov
or
jecxz
or
mov
leave
adc
mov
imul
and
cli
and
mov
in
cmps
push
ds
pushf
mov
mov
sti
xor
and
mov
pop
shl
jmp
xchg
xlat
push
(bad)
dec
call
cmps
mov
xlat
or
arpl
loope
outs
ret
aaa
ins
cwde
aaa
int
sbb
and
mov
fwait
inc
stos
or
and
jp
jb
cwde
dec
mov
and
add
ud0
movs
pop
xchg
sbb
pop
mov
imul
xchg
pop
adc
xchg
xchg
inc
test
inc
cdq
fwait
mov
dec
and
xor
movs
and
ds
mov
daa
xor
inc
sbb
sub
jmp
dec
sbb
loope
stos
dec
jb
add
jb
data16
daa
ror
or
les
cmp
lods
adc
jns
xor
ins
es
cld
pop
(bad)
xchg
xchg
cmp
dec
mov
mov
js
stos
(bad)
cmp
aad
push
sar
jns
push
scas
jp
mov
push
inc
int3
xor
adc
(bad)
add
les
popa
lahf
aam
adc
push
fidiv
popf
dec
sbb
xlat
rcr
push
(bad)
in
or
push
scas
sub
xor
cdq
push
pop
push
ror
into
ins
ins
and
adc
add
pop
mov
sub
dec
popf
dec
push
xchg
push
xchg
ins
dec
icebp
inc
fild
(bad)
xor
mov
in
movs
fucom
sti
hlt
gs
dec
push
xor
push
or
(bad)
pop
rcl
jmp
rol
pop
add
out
dec
sbb
push
cmovno
sti
add
mov
pushf
dec
cmp
mov
sar
xor
fs
xchg
mov
xor
xchg
sbb
push
push
loop
push
lods
mov
(bad)
bound
ret
(bad)
shl
leave
call
mov
call
es
jb
or
js
ins
imul
cdq
and
sti
aad
push
xchg
push
idiv
mov
push
mov
adc
sub
into
out
(bad)
ret
jp
inc
and
or
jbe
cli
sqrtps
cmp
jne
out
(bad)
loopne
test
xchg
fidivr
lahf
repz
mov
xchg
xchg
push
std
and
jle
adc
push
lds
ja
es
gs
lock
out
push
loop
jb
jnp
push
dec
mov
mov
arpl
ror
push
sbb
movs
data16
and
jo
sub
test
fwait
retf
pop
pop
les
movs
ss
xor
pop
push
pusha
jae
add
inc
inc
sub
mov
js
jp
scas
std
push
(bad)
pop
fnstsw
retf
ins
ins
mov
and
pop
fidivr
push
clc
out
aas
ror
xlat
jmp
push
and
dec
cmp
shl
inc
pusha
int
jp
inc
sbb
pop
or
movs
mov
and
rcr
xlat
sub
in
jbe
loop
cmovg
mov
(bad)
jmp
xchg
add
sar
mov
lahf
sbb
fwait
mov
jbe
push
mov
(bad)
dec
jmp
sub
jge
or
cmp
das
outs
sub
fisub
mov
add
mov
hlt
(bad)
stos
in
cmp
loopne
bound
stos
das
outs
(bad)
icebp
mov
and
fmul
xor
or
jns
aaa
jo
stc
dec
(bad)
mov
pop
(bad)
imul
outs
add
out
and
shl
mov
push
daa
pop
xchg
lea
or
in
inc
xchg
jge
xchg
xor
mov
shl
mov
call
sbb
xor
leave
jge
xchg
cwde
pop
mov
es
sub
fisub
jmp
rcl
mov
js
test
outs
adc
adc
add
data16
add
outs
iret
lea
pop
je
sub
pop
fwait
mov
and
mov
in
or
dec
inc
mov
test
out
mov
ss
enter
arpl
dec
mov
mov
mov
push
or
call
cmp
ins
cld
movs
gs
xor
dec
call
std
retf
or
repnz
stc
nop
mov
mov
test
iret
cmp
xchg
out
std
cmps
mul
pushf
xchg
sbb
xchg
aaa
dec
cmps
mov
je
sub
call
cld
add
pop
mov
mov
js
jp
xchg
mov
pop
lds
icebp
sahf
cmp
pop
aad
cmp
dec
(bad)
(bad)
repnz
(bad)
adc
bound
add
jmp
mov
outs
fdivrp
pop
jb
jg
dec
xchg
adc
rcl
xor
repz
pop
mov
mov
push
gs
push
into
popf
stc
hlt
mov
popf
(bad)
xchg
cmps
stos
stos
sbb
or
dec
mov
inc
gs
push
jne
and
xchg
out
push
movs
ret
jno
popf
hlt
ss
and
mov
jno
pop
inc
punpckhbw
xchg
and
pop
retf
cmp
ret
adc
aad
pushf
cmp
cli
cwde
jp
imul
sti
and
es
or
scas
adc
push
hlt
push
shl
jns
outs
adc
int
inc
sub
cmc
sub
dec
sub
jmp
and
mov
push
sub
and
clc
pop
scas
dec
adc
xor
add
xchg
ds
scas
xchg
rcr
movs
loopne
xlat
arpl
pop
push
pop
xor
out
jnp
stos
xchg
gs
outs
mov
in
mov
cmps
nop
aad
inc
push
rcr
and
jl
pop
stos
mov
aas
imul
push
js
test
mov
or
arpl
mov
mov
cmp
xchg
sbb
cmps
pop
adc
cmp
jne
jge
ret
fdiv
dec
cmps
cmp
sbb
sbb
xchg
xchg
mov
add
popa
ds
mov
mov
xchg
and
sti
cmc
shr
leave
addr16
mov
sub
aad
sub
push
data16
lock
cmp
jl
bound
jmp
cmps
dec
push
lods
dec
xchg
pusha
shl
cmps
cmp
pop
fdiv
pushf
out
jne
inc
push
cmp
sub
jns
dec
pushf
aad
clc
sbb
aad
loop
retf
sbb
add
ror
or
jmp
mov
mov
fmul
adc
int3
pop
sub
js
jle
push
push
sbb
jnp
movs
mov
test
jecxz
mov
xchg
pop
retf
loop
fld
(bad)
sub
dec
fisttp
and
repnz
int3
fwait
(bad)
dec
inc
pop
pop
xor
cli
inc
jmp
jg
sub
call
pop
(bad)
fadd
dec
adc
and
into
cmp
mov
test
push
cmp
aad
xor
add
jge
mov
cmp
mov
call
pop
lods
sub
loopne
loope
push
call
imul
and
mov
(bad)
jne
gs
mov
test
retf
les
pushf
dec
arpl
cmp
mov
jmp
out
loop
pop
dec
xchg
fld
(bad)
fadd
mov
out
repz
sub
push
out
mov
pop
push
ds
into
mov
jmp
push
test
inc
xchg
pushf
and
xor
xchg
in
dec
push
div
mov
gs
pop
jge
cmc
and
pop
and
and
add
hlt
cmp
cmc
loopne
jg
add
shr
xchg
(bad)
pop
and
fwait
inc
dec
mov
mov
or
mov
repz
inc
loop
inc
adc
movs
pop
loope
test
push
push
bound
xor
adc
ret
push
shl
sub
fcomp
mov
inc
cmp
jns
sbb
push
into
dec
sahf
loope
test
aad
add
mov
out
push
int
dec
dec
imul
push
push
dec
push
gs
loop
mov
scas
mov
mov
pop
jge
sub
dec
aad
xor
retf
sbb
dec
dec
dec
sub
inc
fidivr
push
sub
sbb
aam
out
inc
(bad)
fucomp
mov
adc
sbb
andnps
cmp
xor
in
cmp
jl
jl
or
call
int
push
and
jb
pop
(bad)
jnp
pop
mov
cwde
mov
pop
mov
xchg
jle
loope
ror
mov
inc
dec
cmp
cli
mov
push
enter
xlat
mov
retf
pop
adc
shr
adc
mov
scas
lds
int3
outs
imul
mov
test
mov
dec
sar
mov
loop
fild
push
ins
xchg
mov
and
push
sar
push
in
cmc
pop
xchg
mov
rcr
inc
xchg
jns
xchg
pop
rcl
xchg
xor
dec
sbb
out
sub
add
shr
sti
nop
mov
dec
out
rol
mov
and
cwde
in
add
scas
mov
nop
sub
sbb
ins
cmp
retf
mov
lods
push
pop
(bad)
cmp
sbb
jmp
dec
lock
mov
jecxz
xor
xchg
outs
xchg
dec
icebp
sub
xor
cs
fdivr
inc
add
nop
or
pop
xchg
fldenv
push
and
cld
and
sbb
adc
add
out
aad
adc
xor
fst
outs
test
test
loopne
or
mov
add
pop
inc
add
xchg
push
lahf
shl
jmp
or
mov
(bad)
(bad)
jge
lock
fst
push
cwde
sbb
xor
adc
pop
push
pop
mov
inc
sub
lahf
in
jnp
cmps
das
jbe
js
sti
or
in
xchg
and
and
mov
cld
push
push
mov
mov
je
ret
(bad)
mov
(bad)
(bad)
imul
cmp
inc
xchg
call
rcr
mov
out
mov
cdq
sub
stc
push
ror
pusha
jecxz
cmp
(bad)
jmp
(bad)
adc
xor
shr
push
dec
test
fdivr
(bad)
mov
inc
mov
fcomp
aam
jmp
test
dec
sbb
shl
sahf
inc
cs
stos
inc
popa
test
mov
inc
cmp
xchg
push
mov
js
and
sbb
(bad)
js
and
in
xchg
pop
fist
popa
jb
push
dec
push
sub
fwait
mov
ins
jae
out
(bad)
shl
out
imul
data16
jmp
mov
shr
shl
pop
xor
cld
push
js
clc
lea
adc
xchg
outs
add
sub
sbb
aaa
sahf
fmul
xor
pop
sub
push
dec
dec
adc
pop
out
cmp
and
ror
bnd
inc
fisubr
stos
cmp
push
(bad)
mov
sbb
stos
(bad)
mov
mov
cmp
sbb
call
(bad)
or
std
in
outs
xlat
test
mov
xor
and
adc
hlt
or
cmp
push
xchg
ret
mov
push
inc
cmp
mov
(bad)
sbb
push
sub
inc
cmp
push
(bad)
std
or
jmp
in
xchg
popf
sbb
aas
push
rol
mov
test
cmp
lods
mov
mov
xchg
mov
xchg
int3
push
jle
and
mov
in
ficomp
ror
adc
adc
mov
mov
arpl
xchg
mov
xchg
pop
cmps
iret
clc
in
scas
sbb
scas
rep
jl
out
ins
xchg
push
add
je
adc
adc
jge
cli
popf
add
lods
mov
es
mov
test
mov
sbb
mov
mov
adc
inc
ja
add
sti
xchg
lods
inc
lods
mov
pop
lea
cmp
outs
mov
fisub
pop
fisub
lods
ins
cli
in
(bad)
cmp
push
mov
loope
or
in
shl
sub
dec
xor
jmp
pop
mov
aas
ins
jecxz
shr
sub
mov
push
fcom
adc
dec
sub
icebp
push
shl
dec
sub
aas
ror
imul
ss
les
enter
push
jno
jb
adc
shl
push
fcomp
fadd
mov
xchg
push
scas
jecxz
pop
ja
jge
int
idiv
setb
or
pusha
shr
pop
gs
scas
push
add
xor
mov
and
xchg
push
and
push
mov
jle
inc
scas
mov
mov
sti
xlat
dec
in
test
xor
in
and
sahf
test
mov
ins
leave
das
jmp
add
in
pop
pop
int
nop
jle
fwait
outs
pop
mov
or
js
pusha
jg
stos
sub
push
push
aas
sub
(bad)
aas
jge
inc
pop
(bad)
jne
inc
push
adc
sahf
ins
test
and
push
fidiv
xor
xchg
stos
mov
add
adc
and
sti
in
xchg
shl
nop
xor
jle
fsubr
lahf
cdq
mov
cmps
dec
mov
pop
in
ja
out
sub
dec
mov
sar
pop
adc
add
and
or
ja
and
test
mov
adc
stos
fild
mov
movs
and
ret
inc
and
lock
les
imul
mov
sahf
inc
ret
xor
iret
mov
mov
push
retf
dec
mov
push
aas
dec
pop
int
stc
sub
cmp
les
sbb
(bad)
mov
mov
dec
dec
mov
xlat
jno
outs
stos
sub
cwde
(bad)
cmp
push
dec
arpl
fisub
add
ror
movs
aaa
add
retf
pop
cmp
or
cwde
and
xor
arpl
pop
daa
lods
push
ins
mov
dec
push
lea
ret
cmp
fadd
adc
push
data16
xor
mov
pop
leave
cs
push
cmp
push
int3
sbb
inc
imul
out
mov
inc
fisubr
fiadd
stc
pop
mov
je
in
xor
out
cmp
jbe
icebp
mov
test
xchg
push
(bad)
rcr
ds
out
dec
test
mov
mov
push
in
add
shl
push
jle
or
call
stc
(bad)
pusha
and
lea
imul
cmps
in
mov
call
mov
out
pusha
cli
mov
pop
fwait
push
bound
dec
stos
push
popa
imul
dec
fidivr
in
int3
fs
add
loopne
cli
sbb
xchg
dec
mov
out
jmp
addr16
xchg
cld
or
xchg
inc
in
push
mov
dec
addr16
fwait
retf
repnz
inc
jns
and
(bad)
enter
add
mov
inc
ret
inc
mov
or
mov
mov
and
jp
xlat
mov
fisub
or
ss
mov
bound
mov
fucom
mov
sbb
adc
and
xchg
add
xchg
fnsave
inc
sub
test
ret
fidivr
fsubr
xchg
mov
pop
lahf
in
rcr
inc
xchg
inc
aad
idiv
pop
pop
aam
daa
cdq
xchg
push
cmp
and
scas
(bad)
push
sbb
jno
fs
test
repz
fld
les
mov
pop
adc
push
mov
fcomp
xor
inc
popf
inc
mov
mov
in
lods
mov
and
les
xor
push
rcl
mov
jge
pop
call
mov
xchg
add
ror
mov
jg
cmc
out
call
xchg
(bad)
fiadd
dec
pop
sahf
imul
lods
les
fld
jg
add
popf
push
jae
out
sub
lods
scas
adc
iret
shl
ins
outs
dec
mov
or
inc
inc
test
mov
sbb
movs
sub
test
pop
fs
cs
inc
fstp
std
xor
lds
or
sbb
cdq
test
jle
loope
inc
fwait
sub
(bad)
ins
mov
xchg
mov
fld
or
xchg
sub
ds
int3
fs
cdq
xchg
and
cmp
cmp
pop
dec
xlat
or
adc
aam
lods
ja
ja
lahf
nop
sbb
push
repz
test
retf
sahf
ja
imul
retf
and
mov
jno
cs
and
pop
aaa
fs
cmp
and
hlt
inc
cli
inc
ins
in
ret
xor
adc
fistp
fs
call
fnstenv
jge
icebp
sbb
jae
sub
pop
in
mov
inc
mov
movs
fadd
mov
popa
add
cmp
das
add
leave
(bad)
icebp
xchg
clc
add
daa
jbe
xchg
aaa
jmp
pushf
jg
mov
inc
push
fnstenv
xor
jmp
jb
call
inc
inc
and
je
lea
and
retf
adc
xchg
(bad)
out
xor
pop
xchg
add
shl
pushf
jne
loope
inc
call
nop
mov
int3
aas
or
dec
inc
cwde
push
push
xchg
and
sbb
mov
mov
push
sbb
push
and
icebp
cmps
cwde
aad
inc
mov
out
enter
xor
(bad)
iret
je
add
retf
sbb
(bad)
pop
loope
dec
sbb
shr
rcr
push
scas
retf
loopne
add
retf
or
and
xchg
jg
jno
aam
mov
inc
loopne
push
push
mov
icebp
xor
cmp
push
pusha
out
popf
adc
outs
mov
push
iret
popf
pushf
mov
sub
cmps
dec
cs
leave
imul
xor
arpl
cmp
jmp
push
cmp
aaa
in
shr
(bad)
jecxz
dec
pop
lds
jnp
jbe
sbb
aaa
jl
pop
adc
jno
fbld
add
ror
xlat
cld
(bad)
mov
in
and
movs
jo
movs
scas
std
out
imul
sbb
mov
ins
jp
retf
xor
xor
retf
mov
and
cli
ins
enter
aas
neg
data16
jbe
jmp
test
in
pop
fisubr
loopne
call
dec
xchg
clc
enter
cmp
pop
jne
idiv
jae
lods
sub
inc
(bad)
cmp
xchg
les
clc
mov
neg
dec
(bad)
out
or
leave
hlt
scas
retf
push
or
adc
aaa
pop
push
inc
movs
les
cld
jmp
inc
mov
mov
sahf
ins
scas
jmp
adc
inc
adc
mov
ins
hlt
aam
jecxz
pop
adc
pop
push
or
loopne
push
test
(bad)
inc
push
dec
add
mov
dec
sbb
xor
mov
test
mov
pop
xor
in
push
pop
cmp
std
add
push
adc
mov
dec
or
push
add
pop
fimul
dec
adc
outs
push
mov
push
mov
jo
xor
in
ror
sbb
inc
pop
and
pcmpgtd
sub
ds
xlat
push
push
imul
pusha
loope
add
xor
mov
cmps
jmp
xchg
pop
jg
xchg
xchg
adc
dec
mov
movs
jl
xlat
fld
call
xor
adc
dec
dec
fisubr
bound
add
dec
push
jo
adc
push
xor
xchg
outs
dec
retf
test
xor
fistp
aam
mov
xchg
rol
jns
daa
test
jbe
push
jae
inc
pop
pop
push
retf
pushf
aaa
icebp
mov
mov
mov
jmp
and
pop
and
mov
rcl
xchg
cli
or
sub
push
sbb
sahf
clc
xor
xor
push
test
lahf
mov
and
in
int3
jmp
ret
leave
sbb
push
hlt
xchg
clc
test
xor
jmp
icebp
pop
or
aad
jnp
outs
sub
push
inc
xor
arpl
frstor
test
xchg
pusha
in
shr
xchg
fdivr
pop
imul
retf
fnstenv
cmps
sub
inc
sub
pop
mov
idiv
inc
add
(bad)
(bad)
es
cmp
hlt
adc
lods
stc
std
add
pop
aad
in
sub
lea
(bad)
mov
and
mov
and
in
inc
gs
dec
xor
imul
xchg
dec
lea
xor
cld
mov
xor
(bad)
sti
ror
adc
bound
or
xchg
mov
xor
mov
xor
xchg
pop
iret
pop
xchg
out
(bad)
push
dec
sub
mov
adc
dec
pusha
sbb
mov
sbb
or
xchg
pop
dec
sahf
pop
xchg
cmp
or
fbld
xchg
fistp
dec
or
add
inc
adc
add
sbb
pop
sbb
pop
xchg
push
punpckhwd
xor
or
pop
out
fsubr
or
cs
cmp
daa
pop
jp
bound
stc
mov
sahf
mov
mov
adc
pop
js
sub
ja
fimul
movs
push
xor
add
dec
dec
sbb
mov
repnz
xchg
lahf
(bad)
pop
dec
mov
xchg
out
loopne
add
ficomp
sub
jo
xor
or
mov
mov
sub
int
adc
popf
push
mov
jnp
pusha
fucom
adc
mov
out
push
and
popa
leave
mov
call
jp
xchg
cmp
mov
sbb
sbb
inc
loope
(bad)
call
repnz
jmp
mov
out
cmps
pop
cmps
fstp
out
pop
int3
shl
jge
in
fidiv
fs
int
pop
mov
ja
xchg
pop
lods
add
leave
(bad)
into
int3
mov
in
mov
push
xchg
mov
and
lahf
cmp
daa
repnz
push
mov
fbld
das
repz
dec
add
xchg
cmp
std
add
and
sub
mov
iret
fld
inc
add
aas
xchg
outs
mov
xor
or
repnz
fistp
adc
fild
mov
and
pop
arpl
lds
dec
push
sbb
add
push
mov
cli
xlat
pop
mov
jp
or
bound
jmp
lock
or
int
mov
popa
mov
pop
sub
outs
jne
xchg
fidivr
retf
(bad)
test
sub
mov
outs
movs
pusha
dec
jle
xor
pop
popf
mov
push
fild
add
cmc
sbb
sub
jb
aaa
xchg
adc
push
bound
add
nop
add
xchg
push
retf
std
dec
sbb
cmp
leave
jg
fs
ror
dec
push
sub
retf
retf
cmc
mov
push
xchg
and
mov
mov
jmp
scas
add
mov
popf
out
js
dec
dec
jns
ins
out
cmp
push
addr16
cmps
in
xchg
mov
int
xchg
xchg
jg
out
cdq
shl
(bad)
xor
es
and
pop
pop
cmp
mov
leave
mov
outs
pop
fwait
out
xor
pop
sbb
jl
and
push
mov
xor
packssdw
dec
pushf
rcl
pop
dec
mov
aas
lds
xor
movs
(bad)
retf
(bad)
repz
jbe
movs
xchg
push
mov
(bad)
xlat
in
cdq
dec
repnz
xchg
adc
push
xor
imul
pop
cwde
xchg
cmp
test
xchg
repnz
jae
je
xor
pop
push
pop
aam
ret
xor
xor
cmp
fist
(bad)
jns
shr
pop
std
sbb
xchg
cmp
jnp
jo
fild
outs
dec
sbb
dec
or
dec
cmp
nop
fwait
mov
mov
jo
fsubp
ror
aas
cmp
(bad)
push
pop
mov
pusha
xor
adc
sahf
mov
es
das
loop
cmps
xchg
mov
fs
fiadd
jl
(bad)
and
push
adc
imul
ret
xlat
sub
push
jg
jns
movs
add
ins
movs
scas
sbb
(bad)
adc
push
retf
mov
pop
leave
lea
jmp
xchg
jmp
fwait
xlat
mov
push
fwait
inc
push
and
pop
push
(bad)
jnp
pop
cmp
(bad)
mov
or
call
dec
in
mul
stos
push
ds
ret
sahf
lea
daa
inc
inc
jecxz
sub
jmp
dec
cmps
sub
test
(bad)
xor
outs
xchg
mov
js
fstp
es
sub
call
cmp
dec
and
xor
ss
(bad)
shl
stos
(bad)
add
fwait
leave
or
test
mov
fmul
fisttp
mov
or
inc
(bad)
mov
aaa
in
jb
sahf
into
push
or
sbb
jae
jnp
jl
call
(bad)
push
arpl
jno
cli
jns
dec
(bad)
pop
xchg
and
jl
adc
les
adc
mov
imul
add
jge
dec
add
sete
xor
add
jnp
xor
outs
ja
stc
pop
jmp
inc
sub
loopne
push
cli
je
(bad)
scas
add
loop
jo
nop
es
frstpm(287
adc
leave
in
push
mov
sub
pop
loop
in
in
mov
jp
pop
lahf
test
jnp
dec
fsubrp
push
cmp
adc
clc
scas
mov
add
ficomp
xor
add
test
mov
stc
aam
dec
aad
outs
and
clc
jo
mov
or
inc
xlat
movs
jo
push
jecxz
dec
sbb
dec
fadd
outs
push
push
jnp
push
sub
icebp
or
iret
and
cmp
test
xchg
fsub
sbb
xchg
fwait
mov
dec
push
ja
(bad)
js
mov
daa
jne
push
sbb
scas
sbb
mov
cmp
inc
sbb
fsubr
inc
jl
cli
lods
and
cmp
loope
cmp
shl
jmp
loop
dec
xor
scas
shl
or
(bad)
cld
dec
mov
mov
arpl
std
xor
stos
or
push
(bad)
mov
(bad)
and
lds
push
stos
imul
add
jo
adc
cmp
mov
add
mov
data16
loopne
mov
dec
sub
gs
mov
sbb
jmp
pop
jnp
mov
and
xor
pusha
xchg
sbb
push
stos
mov
sbb
mov
in
bound
sbb
mov
or
pusha
fwait
movs
pop
add
(bad)
pop
inc
push
aaa
ds
retf
pusha
popf
pop
neg
xchg
jmp
(bad)
call
push
push
ror
cdq
imul
clc
bound
dec
shr
int3
add
sahf
into
adc
mov
stc
push
hlt
pop
test
retf
push
scas
stos
push
cld
mov
xchg
imul
stos
jle
jmp
ins
or
and
popf
fadd
jp
mov
retf
push
inc
mov
mov
arpl
pop
lods
inc
and
(bad)
mov
xchg
mov
js
les
gs
mov
and
xor
xchg
fdiv
aad
dec
or
das
cmps
or
out
or
shl
mov
gs
xor
mov
pop
fmul
lahf
call
aam
mov
test
and
out
mov
jae
cmp
rcl
movs
icebp
cmp
adc
xor
adc
ret
retf
ret
or
ins
lods
mov
(bad)
shl
les
(bad)
jecxz
push
repz
xchg
sub
add
nop
cmp
sbb
(bad)
out
sahf
jns
icebp
push
mov
jg
rcl
sar
sbb
fild
imul
cli
mov
scas
aad
sbb
mov
jb
inc
inc
mov
pop
cmp
mov
pop
mov
outs
fstp
retf
jo
aaa
xchg
sub
(bad)
mov
inc
pop
xchg
js
lds
jnp
sar
jmp
adc
add
ror
jmp
dec
adc
xchg
shr
sub
xchg
(bad)
cmc
or
dec
sbb
scas
(bad)
stc
fs
movs
rol
mov
(bad)
mov
jge
push
popa
pop
jb
adc
xchg
shl
jmp
push
arpl
cli
frstor
xchg
inc
add
retf
stos
push
and
pop
(bad)
add
inc
mov
shl
jo
in
icebp
rcr
ret
or
and
sar
sahf
dec
call
jne
cli
mov
in
fld
imul
xchg
sahf
arpl
cli
sub
push
dec
rcr
out
and
jne
popf
adc
sbb
xchg
or
lock
bound
nop
cwde
(bad)
or
adc
(bad)
fstp
ficom
push
lods
inc
call
pop
or
imul
mov
inc
mov
xchg
mov
out
mov
retf
xor
mov
mov
inc
sbb
push
(bad)
scas
mov
popa
sub
mov
leave
bound
mov
and
cmp
lea
rol
pop
jge
cdq
test
mov
jbe
adc
mov
rol
dec
inc
add
and
mov
clc
les
cmps
cmp
ds
(bad)
nop
sub
aad
inc
pop
dec
int
loop
adc
loopne
pop
jp
hlt
cwde
ins
loop
std
pop
mov
or
push
xor
mov
mov
popa
sbb
cs
(bad)
cdq
dec
pop
dec
sbb
adc
imul
jle
mov
jae
or
(bad)
cmp
mov
pop
daa
xor
jp
mov
sbb
xor
inc
sub
movs
sub
pop
into
int
ja
push
inc
dec
cdq
lds
mov
ret
imul
jno
add
inc
test
iret
mov
jae
and
ja
push
mov
add
scas
fs
test
sbb
and
test
bound
cmp
push
mov
xchg
ror
idiv
call
add
xor
sub
push
push
dec
pop
sbb
sahf
je
les
and
popf
mov
and
push
dec
jne
movs
jno
iret
mov
fst
icebp
sbb
stos
nop
call
cmps
mov
leave
inc
cli
in
jmp
repnz
dec
lahf
retf
inc
mov
cmovs
aad
push
cmp
inc
inc
call
mov
idiv
push
scas
ret
fdivr
jp
rol
cmc
out
bound
or
fbld
push
add
icebp
push
shr
cmp
test
sbb
sub
(bad)
dec
test
and
and
int3
dec
scas
fisub
or
(bad)
mov
rol
sub
loop
jo
fbstp
or
aas
ret
mov
mov
cmp
sbb
lahf
rcl
iret
in
cmp
dec
mov
enter
movs
mov
and
movs
cmp
xlat
push
xor
test
(bad)
not
lods
int3
cmp
pop
xchg
js
fwait
jno
xor
mov
sub
std
xor
jns
pop
push
arpl
js
pop
inc
retf
sub
mov
int
out
add
add
xchg
sbb
push
test
adc
mov
in
mov
popa
jge
pop
xor
(bad)
shl
or
in
xchg
or
xor
push
mov
dec
outs
out
(bad)
stc
outs
mov
adc
ss
rol
dec
ret
and
sub
adc
fild
xchg
ja
aam
push
in
adc
mul
jecxz
pop
pop
cmp
xchg
sub
pop
and
aad
shl
inc
mov
test
dec
shl
mov
xor
sbb
push
cmc
or
std
loopne
shr
fimul
sub
imul
jbe
xor
ret
or
cmp
test
pushf
jl
enter
sub
movs
mov
cmps
adc
dec
cmp
ss
mov
daa
cmp
jle
sbb
sub
xor
fmul
inc
(bad)
mov
call
ins
enter
mov
jg
jp
pushf
ds
nop
ret
mov
shr
ret
pop
in
hlt
inc
pusha
dec
jmp
in
sbb
cmps
push
(bad)
mov
xor
cmp
add
xchg
psraw
add
daa
jbe
pusha
mov
jno
out
sub
cmp
adc
call
out
ret
lea
cmp
lds
pop
xchg
mov
push
mov
lock
shl
int3
iret
fidiv
push
nop
aaa
cmc
(bad)
lods
xchg
push
adc
ins
or
clc
mov
shl
cmps
shr
add
jb
mov
in
nop
fld
scas
out
xlat
dec
loop
push
les
mov
xor
jge
imul
push
pop
jmp
inc
inc
push
pop
mov
lods
jge
dec
dec
fimul
into
(bad)
shl
mov
gs
je
enter
aaa
les
lds
inc
mov
mov
mov
out
jbe
mov
add
stc
mov
dec
xor
push
call
pop
sar
test
lds
jmp
mov
(bad)
and
fisttp
lods
xor
add
mov
add
sahf
or
(bad)
movs
cmp
pop
cld
in
cmp
and
enter
js
mov
leave
jg
gs
pop
dec
cmp
mov
adc
cld
enter
sbb
adc
jno
stos
movs
cld
pushf
sar
test
and
stos
push
out
inc
cmp
push
xchg
sub
js
call
xchg
dec
mov
pop
mov
pop
cli
sbb
xchg
gs
cmp
pushf
aaa
adc
cwde
test
(bad)
lahf
dec
out
push
scas
pop
mov
push
ss
mov
js
xor
and
sbb
mov
leave
mov
pop
mov
cmp
dec
inc
data16
out
pop
mov
jmp
lahf
stos
and
inc
sub
jle
mov
mov
bnd
push
and
or
and
add
stos
imul
mov
mov
enter
add
jmp
lock
push
pop
xor
jmp
inc
mov
pop
(bad)
lods
retf
ja
adc
repnz
adc
retf
xor
xchg
fsubr
jge
ds
mov
(bad)
outs
nop
push
test
mov
iret
stos
outs
mov
xor
daa
scas
call
(bad)
sub
mov
retf
mov
jae
movs
mov
rcl
xchg
sahf
movntps
push
mov
(bad)
ja
cmp
imul
repz
or
ja
sub
(bad)
or
sbb
les
inc
jbe
mov
push
cmps
xchg
push
jecxz
add
pop
int3
add
dec
push
call
adc
fmul
lea
int
mov
mov
or
xor
arpl
call
loopne
das
lea
imul
sbb
(bad)
or
cmps
inc
in
stc
test
pop
sub
pusha
cmps
loopne
stc
loope
xchg
jmp
cmp
jmp
push
mov
push
in
push
jp
xor
xor
cmp
inc
mov
sbb
mov
test
dec
cmp
js
das
adc
pop
lds
dec
dec
xor
or
pop
out
cmp
jp
add
jecxz
call
push
iret
jo
out
imul
and
add
xchg
jmp
add
loopne
sbb
aam
xchg
dec
pop
fimul
test
mov
outs
jae
mov
xlat
shl
sub
fcmovnbe
pop
test
movs
pop
shl
ficomp
inc
pop
in
xor
call
pusha
popa
dec
push
pop
mov
test
scas
xor
ror
cdq
add
test
(bad)
pop
(bad)
xor
cmc
dec
mov
rcr
idiv
retf
xchg
out
nop
fistp
shl
movs
inc
nop
sub
jne
aam
out
fdivr
mov
out
cmps
pop
xchg
fdiv
sub
and
stc
addr16
dec
sbb
ja
and
cmp
loope
lods
push
(bad)
adc
and
mov
and
aas
icebp
cmp
sar
jmp
add
mov
les
pop
daa
and
inc
mov
sahf
cli
xor
test
inc
pop
mov
out
cli
iret
test
sub
es
cmp
jmp
push
iret
push
mov
int3
inc
adc
push
push
in
mov
mov
hlt
mov
sahf
std
clc
out
or
inc
push
pop
push
js
(bad)
iret
jmp
xor
cli
cmps
mov
dec
call
pusha
gs
adc
popf
popf
push
sub
call
mov
mov
ret
fucom
or
cmps
int3
xor
cmp
dec
inc
sbb
imul
lahf
pop
push
jns
repnz
popf
nop
clc
xchg
sub
mov
test
or
repnz
lock
loop
dec
std
sub
pop
sahf
jb
cwde
in
loopne
mov
fnsave
sbb
sub
movs
dec
stc
add
mov
scas
out
nop
(bad)
stos
mov
es
ror
popf
jbe
mov
adc
cmp
prefetcht2
sub
and
shr
inc
fs
hlt
sbb
shl
int
xchg
dec
xor
xor
push
push
jmp
fdiv
sub
mov
jo
nop
les
loopne
call
das
nop
xchg
pop
cmp
ins
pushf
call
or
ret
fs
add
mov
popf
push
xchg
push
xchg
popa
add
in
push
mov
jmp
int3
sub
out
or
call
mov
rcr
retf
shl
push
sbb
inc
mov
mov
shr
js
stos
fistp
cmc
pop
mov
sub
retf
outs
push
fld
pop
jmp
call
jl
adc
and
mov
pop
and
ret
adc
inc
jmp
sub
arpl
jnp
jns
cmps
sub
cmc
xchg
mov
int
add
aaa
inc
or
pop
xchg
add
or
and
mov
not
hlt
jp
mov
sbb
clc
ror
fs
add
inc
dec
cmp
inc
dec
ss
loopne
push
jge
pop
call
sbb
imul
xchg
push
hlt
mov
dec
sbb
sar
cdq
jl
cld
and
xchg
xlat
retf
push
ins
push
frstor
test
sbb
adc
sub
push
mov
stos
add
in
jle
xlat
or
sub
std
and
push
icebp
call
dec
frstor
and
xor
sbb
repz
add
jg
stos
adc
cwde
push
retf
push
cmp
xchg
pop
sub
xor
cmps
mov
sub
stos
aad
adc
fist
shr
cmc
and
not
or
lock
jns
xchg
and
push
lahf
adc
fcomip
movs
dec
mov
jae
xlat
mov
sar
add
sbb
das
inc
icebp
sbb
cld
or
fdivrp
pop
repnz
outs
stos
mov
stc
inc
dec
cmp
jb
jg
jno
test
jl
sahf
(bad)
cmp
aam
test
jbe
add
inc
jne
pop
repnz
fidivr
lahf
int3
sub
sbb
xchg
out
mov
xor
js
sub
xor
cmps
or
jg
lods
stc
push
xor
jmp
ret
icebp
or
add
in
xchg
scas
(bad)
dec
adc
rcl
aaa
push
or
mov
clc
pop
pop
pop
push
neg
cmp
add
ret
outs
push
mov
add
push
adc
mov
shl
rcr
xor
into
dec
pop
sub
outs
sbb
inc
mov
dec
cmp
dec
cmp
clc
call
test
cmp
ja
xlat
mov
test
jnp
mov
sar
xor
push
les
pop
movups
in
shl
jmp
sahf
loope
scas
shl
push
xor
and
jbe
push
cmps
sub
add
addr16
pop
push
mov
cmp
sub
jno
and
sbb
inc
xchg
retf
scas
aad
in
sahf
xor
pop
shl
outs
jl
mov
adc
imul
nop
and
fbstp
clc
mov
or
mov
ror
in
aas
cmc
sar
repz
pop
repnz
push
mov
lahf
xchg
(bad)
jp
add
pop
ds
xchg
cmp
jnp
sar
add
sub
pop
push
call
rol
or
inc
xchg
test
nop
mov
mov
shl
cdq
iret
jbe
xchg
mov
jge
push
mov
jb
mov
out
mov
iret
pusha
jne
mov
adc
add
sar
xchg
outs
xchg
push
push
ds
cli
and
int3
add
mov
pop
outs
cmp
(bad)
movs
jl
inc
fistp
sbb
xor
pusha
add
retf
fnstcw
add
push
test
push
in
pop
rcl
sub
shr
ret
inc
jge
daa
jae
xor
movnti
fld
inc
(bad)
das
sbb
enter
or
stos
push
jge
push
jae
or
movs
out
sub
cmp
mov
pusha
cwde
sbb
fst
imul
xor
in
jbe
lock
jno
(bad)
pop
loopne
pop
test
ficomp
jge
jmp
cmp
sbb
push
add
and
imul
sar
sub
retf
inc
(bad)
(bad)
cwde
fs
mov
fcmovne
imul
mov
rcr
and
fisttp
mov
sub
jnp
xchg
mov
dec
sub
ins
push
mov
sub
das
add
pop
inc
cmp
or
push
loope
lahf
les
jns
sbb
mov
mov
ss
mov
(bad)
pop
xchg
mov
(bad)
dec
inc
into
xchg
pusha
movs
loopne
mov
push
jl
shl
and
movs
repz
call
aam
jmp
xor
in
cdq
xor
mov
fld
jb
xchg
add
adc
cmp
mov
icebp
imul
ret
rcr
mov
inc
inc
aas
xor
dec
cli
push
cmp
pushf
jmp
mov
out
mov
cmp
inc
mov
cmc
inc
push
add
scas
arpl
mov
mov
addr16
or
jb
mov
ins
test
and
push
stc
shl
shr
push
or
sar
add
mov
xor
mov
movs
scas
fistp
mov
fiadd
dec
xlat
repz
sbb
fmul
add
push
addr16
iret
retf
push
lock
cmp
add
test
pop
add
nop
mov
retw
cmp
sub
cmc
in
dec
arpl
xor
push
hlt
loop
inc
jo
rcr
(bad)
js
dec
std
mov
into
xor
pop
sbb
in
add
(bad)
push
fwait
pop
jno
xor
js
cli
adc
jne
or
jae
bound
xchg
sub
rol
xchg
or
lock
push
mov
dec
mov
test
out
jl
mov
mov
(bad)
movs
neg
jge
(bad)
pop
xor
inc
mov
push
or
retf
inc
fisub
pop
fsubr
scas
adc
pop
mov
(bad)
gs
mov
hlt
fsub
add
aaa
xchg
add
xor
jg
pop
(bad)
ret
movs
xor
inc
push
test
sti
mov
enter
fwait
(bad)
xlat
data16
mov
xchg
dec
cmp
lods
push
nop
add
repz
std
mov
ret
ins
cmps
mov
xchg
mov
popa
leave
and
cli
fnstsw
jg
iret
push
aad
dec
icebp
mov
adc
out
push
add
mov
push
rol
(bad)
lock
cs
das
mov
mov
sbb
sub
cli
dec
ret
popf
int3
inc
jmp
add
sbb
enter
pusha
pop
mov
xor
(bad)
cs
ficomp
and
loop
cwde
icebp
adc
leave
mov
dec
mov
mov
jp
cli
(bad)
data16
mov
pop
jno
mov
inc
push
mul
push
sbb
in
push
cmc
ins
pop
xchg
inc
mov
add
pop
sbb
jb
aas
add
shl
and
imul
ds
jmp
push
div
cmp
mov
(bad)
ja
or
xlat
push
ret
out
sbb
aad
sub
pop
mov
dec
inc
repz
cmp
bound
ss
jnp
in
jg
repz
lahf
rol
or
dec
xor
inc
lock
adc
jmp
xor
adc
in
test
pop
aas
sbb
sub
jmp
jbe
mov
loope
nop
gs
mov
xor
pop
shl
and
and
and
adc
aad
xor
pop
add
in
push
lahf
push
test
or
add
mov
rcl
scas
retf
push
adc
jmp
lock
xchg
sbb
and
push
sub
ret
or
cdq
xor
cwde
iret
cmp
gs
cmps
imul
pushf
or
jnp
fwait
mov
xor
xchg
cmps
push
xchg
icebp
icebp
dec
ins
sub
lds
sub
adc
pop
adc
aam
cmp
pop
sub
hlt
arpl
lods
mov
sub
repnz
cmp
ins
push
fadd
movs
push
jmp
stos
sbb
loopne
scas
das
hlt
inc
or
(bad)
pop
xchg
xchg
gs
adc
call
into
xchg
mov
jne
mov
outs
js
addr16
out
adc
cwde
imul
shr
idiv
fstp
cli
jno
sbb
retf
repz
mov
xchg
out
test
inc
xchg
xor
in
and
std
dec
xchg
repnz
addr16
cmp
xchg
xor
inc
stc
cmp
or
mov
ins
or
xor
jl
push
pop
cmp
jnp
pop
call
pop
jg
mov
std
inc
or
call
ins
pop
fmul
push
mov
div
push
arpl
popf
sbb
fs
add
inc
jbe
int
sbb
sub
mov
sub
or
xchg
mov
jns
sub
push
xlat
add
xor
dec
ror
add
sub
js
mov
mov
inc
lea
jnp
add
daa
sahf
and
iret
and
and
push
stos
push
call
jne
mov
xchg
sbb
mov
sbb
loopne
nop
call
out
sti
mov
or
int3
cmp
sbb
outs
neg
pushf
ja
add
jmp
int
call
adc
lea
push
sub
pop
daa
test
xor
xor
inc
cmp
int
ds
sbb
inc
cmp
fnsave
push
cmps
cs
out
(bad)
stc
push
mov
mov
fst
push
out
pusha
mov
inc
rcr
ficomp
pop
adc
push
adc
sub
cld
fwait
pop
cmp
pop
sbb
sbb
xchg
xchg
and
aaa
push
mov
cmps
adc
add
add
mov
pop
add
cmp
loope
or
lidtd
nop
push
stos
push
loop
jmp
data16
retf
and
push
cmp
jno
sbb
fsubp
ds
sbb
mov
ror
mov
inc
jbe
dec
mov
imul
jns
shl
sbb
adc
sbb
sbb
call
int
adc
cmp
aad
lds
mov
jecxz
loope
pop
sbb
cli
and
ret
add
or
pop
xor
les
cmc
outs
jne
pusha
movs
jbe
dec
pusha
loop
ins
dec
call
sti
loope
dec
test
adc
jo
aam
movs
test
mov
ret
mov
sbb
test
ins
jmp
movs
lock
(bad)
mov
pop
fucom
xor
int3
fimul
sbb
dec
add
mov
xchg
xor
aad
inc
aad
add
popf
mov
mov
mov
xor
in
aas
leave
jns
xor
(bad)
lods
sti
data16
in
loopne
mov
pop
mov
xchg
push
(bad)
retf
nop
cdq
pusha
ror
xchg
pop
pop
cmp
mov
loop
shl
mov
aaa
dec
js
dec
sti
loopne
sbb
fs
sub
mov
data16
stos
imul
shr
dec
xchg
loope
and
inc
mov
pop
jge
cmp
mov
jbe
jg
popa
lea
(bad)
stos
les
shl
mov
(bad)
mov
adc
xchg
out
stos
outs
mov
ret
loopne
lods
push
shr
cmp
sbb
cmp
sub
mov
aaa
lods
jns
pop
add
test
push
ror
iret
or
sbb
cmp
(bad)
out
cwde
stos
add
ds
fiadd
or
aam
push
push
cmps
or
in
dec
out
in
out
mov
inc
cmc
or
adc
pop
fsubp
fwait
push
sahf
jge
mov
icebp
sbb
mul
neg
or
push
and
hlt
xchg
or
int
mov
ins
popa
(bad)
push
xor
sbb
cli
xchg
je
cmp
fst
call
popa
push
call
js
test
and
mov
outs
xchg
push
mov
fstp
ret
outs
or
pop
inc
adc
jmp
inc
mov
mov
jmp
adc
push
es
fcomp
(bad)
cld
add
(bad)
mov
sub
popa
test
push
je
or
push
and
ret
sahf
push
xchg
add
dec
sbb
push
mov
fsub
fcom
xor
daa
pop
mov
add
adc
stos
mov
outs
jae
jne
mov
cs
es
pop
in
(bad)
std
into
cmp
or
sub
aam
fild
mov
add
pop
clc
aaa
mov
pushf
ja
push
mov
into
add
or
scas
or
movs
xchg
or
or
daa
jl
mov
movs
inc
push
xchg
addr16
push
jmp
push
dec
mov
mov
cmp
jb
dec
(bad)
jns
clc
xchg
add
daa
jb
inc
fisub
sub
stc
or
and
cmp
sar
mov
push
enter
(bad)
shl
cdq
out
push
jg
test
sti
jno
cmp
out
inc
mov
std
adc
xor
mov
test
nop
mov
jge
cwde
mov
ja
ret
add
stc
jl
loop
mov
inc
repnz
adc
stc
push
or
pop
aad
hlt
fwait
xor
cmp
push
mov
and
xor
jg
das
lahf
sub
push
enter
lock
js
sbb
gs
aam
daa
loope
sbb
popa
and
push
jmp
push
shr
pop
jl
sub
aad
lock
test
or
fiadd
not
cmp
imul
cdq
mul
mov
adc
int3
cwde
loop
aaa
loope
pop
(bad)
cwde
repnz
cmps
lds
and
push
fsub
lods
mov
pop
push
jnp
dec
popa
popf
inc
iret
jmp
loope
and
jmp
fsubr
xor
nop
push
aad
push
pavgw
mov
add
stos
push
push
out
dec
inc
call
iret
sbb
push
sbb
push
(bad)
jle
hlt
outs
repnz
sub
mov
pop
dec
fwait
shr
adc
arpl
mov
adc
pop
jmp
daa
or
movs
imul
mov
daa
out
aad
cdq
test
xor
add
ret
push
pop
xchg
lock
leave
and
push
jo
and
je
cli
out
xor
jge
push
xchg
sub
pop
xchg
mov
movs
sub
jae
xchg
mov
sub
adc
ja
dec
jl
sub
mov
adc
ret
repz
cld
enter
jg
in
xchg
out
adc
test
(bad)
rol
fidivr
sub
in
xchg
pop
mov
js
mov
sahf
cdq
inc
mov
add
cwde
add
repnz
xchg
dec
call
ins
add
pusha
popf
cdq
sbb
fcomip
cmp
scas
mov
xlat
sub
sub
mov
aam
mov
and
rol
daa
shr
pop
pop
pop
iret
cmc
push
add
(bad)
aad
cmc
dec
popf
mov
pop
push
clc
push
cmp
in
mov
cmp
xor
inc
jmp
ins
pop
mov
lahf
mov
lahf
jb
rcl
mov
add
xchg
push
aad
mov
pop
xor
mov
in
pop
enter
test
mov
sub
mov
test
mov
dec
rcr
sahf
cmps
test
pop
aaa
fld
fbld
ret
pop
sbb
(bad)
cmp
arpl
jbe
out
call
mov
push
sbb
xchg
sub
mov
cmp
jle
stos
push
mov
sub
daa
bound
push
mov
jp
cs
sub
int
sub
inc
(bad)
std
dec
scas
cmp
mov
xchg
or
jbe
lods
mov
pop
outs
sbb
jne
jo
xor
pop
icebp
adc
mov
cmp
sub
push
adc
out
icebp
push
dec
jmp
stc
in
call
sbb
cmp
or
bnd
icebp
xor
(bad)
jmp
inc
cmp
dec
push
cli
mov
cdq
lea
stos
in
scas
call
xchg
mov
sub
dec
(bad)
mov
mov
jg
sbb
mov
sub
imul
cmc
mov
daa
(bad)
(bad)
push
xchg
or
xor
adc
adc
outs
sbb
xor
mov
or
add
jl
cld
xor
lods
jp
xor
add
test
scas
jmp
hlt
inc
int
fcomp
pop
push
mov
int
inc
ja
and
popa
sbb
xchg
iret
add
inc
dec
test
leave
or
jmp
dec
adc
cmp
retf
ror
push
jecxz
xor
jo
outs
add
pop
adc
lock
or
mov
ror
push
and
into
loop
ret
sbb
ror
mov
retf
ret
mov
jbe
test
xor
mov
mov
and
aad
pop
cmp
into
pop
rol
mov
sti
sub
push
cs
sahf
(bad)
and
jne
adc
call
sbb
mov
mov
fnstcw
jmp
sete
popf
dec
ds
push
in
and
popf
xchg
je
mov
cmp
fild
stc
push
test
add
imul
jns
data16
sbb
outs
jnp
jne
adc
mov
jno
(bad)
cmps
mov
mov
mov
xor
jp
jle
addr16
movs
shr
push
mov
dec
cmp
mov
icebp
sti
pop
lea
push
jle
or
outs
push
mov
fistp
popa
imul
loopne
pushf
jg
dec
mov
pop
sbb
call
js
(bad)
(bad)
js
ds
(bad)
cli
and
and
retf
add
adc
sbb
xor
lock
ret
inc
inc
mov
xchg
cli
add
in
jo
dec
dec
sub
push
dec
xor
fldcw
ds
mov
std
imul
outs
push
rol
adc
xchg
dec
ds
in
xor
gs
cmp
inc
daa
lea
je
arpl
cli
cmc
add
pushf
test
outs
enter
push
or
bound
loopne
lods
mov
arpl
pop
movs
cmp
jne
mov
scas
dec
mov
mov
test
mov
add
jmp
mov
(bad)
sar
push
xchg
out
push
cwde
rol
popf
sub
out
sbb
je
cs
dec
mov
inc
addr16
stos
mov
cld
mov
jl
xor
icebp
jmp
xchg
xchg
fistp
push
push
push
push
pop
stos
inc
sub
retf
pushf
aaa
xchg
or
data16
imul
dec
xchg
ret
cmova
lea
sbb
inc
cli
ss
call
mov
(bad)
fiadd
pop
call
mov
mov
std
or
lahf
jae
pusha
pop
jp
sub
pusha
and
stc
dec
pop
mov
lods
(bad)
in
cs
js
fisub
xor
mov
into
jnp
or
call
inc
lahf
hlt
xor
lods
aas
(bad)
js
test
add
scas
(bad)
sahf
mov
scas
repz
imul
popa
arpl
mov
rol
pop
fst
loop
mov
sub
out
sub
mov
fsubr
sbb
cdq
push
jnp
mov
add
dec
and
inc
in
and
in
jnp
push
div
sar
fstp
data16
jnp
ins
dec
cmp
hlt
inc
xchg
pop
bnd
into
sti
push
push
mov
imul
shr
sbb
xchg
scas
movs
sub
pop
mov
outs
xor
call
int3
out
cli
fidivr
mov
aad
in
stos
out
adc
sub
addps
pop
and
or
das
stos
sub
and
add
int
loop
pop
xchg
ins
adc
sub
sti
imul
mov
xlat
jo
push
mov
push
loope
pop
ret
mov
cdq
add
fucomi
daa
or
neg
(bad)
cmp
es
bound
xor
cli
movs
mov
addr16
addr16
(bad)
cli
mov
xchg
pop
push
cmp
icebp
mov
stc
lahf
pushf
adc
or
or
scas
imul
outs
cs
pop
sti
stos
hlt
retf
ficomp
xchg
pusha
rol
jb
xor
daa
dec
ret
addr16
std
std
mov
data16
xchg
mov
pop
push
fwait
sub
xlat
imul
adc
mov
xor
aam
cmp
xchg
sub
push
rcl
push
xchg
mov
(bad)
out
sbb
add
mov
ret
js
cmp
call
clc
cdq
xchg
sbb
push
stos
push
xchg
retf
enter
xor
dec
test
dec
cwde
mov
sbb
inc
addr16
xchg
mov
adc
dec
cli
mov
jno
out
int3
test
or
jp
push
arpl
push
dec
pop
pop
nop
mov
std
pop
fcom
mov
xchg
shr
out
jmp
sbb
in
pusha
sub
jo
inc
xor
cmps
inc
movs
sahf
and
mov
push
jns
fstp
or
ret
in
je
dec
es
or
pop
retf
pop
or
xchg
into
cld
mov
push
sub
xchg
lods
movs
mov
aad
int3
inc
fbstp
and
repz
sub
pusha
lods
(bad)
xor
push
je
dec
pushf
jecxz
and
fs
add
pop
dec
das
dec
out
cmp
movs
rcr
mov
fs
mov
gs
xchg
xor
lahf
jb
pop
mov
sbb
cmp
scas
icebp
xor
jns
not
ins
shr
push
cmp
xchg
mov
cmc
or
xor
out
outs
mov
push
pop
sbb
add
movs
inc
pop
lods
pop
cmps
lock
sub
loop
mov
outs
cli
mov
ret
add
iret
adc
push
jae
in
aas
add
cmp
shr
xor
mov
sub
(bad)
mov
push
cs
sbb
js
mov
or
js
dec
call
lahf
ds
jmp
clc
cmp
adc
outs
xchg
push
jmp
cmps
xchg
ss
jb
jle
(bad)
scas
(bad)
rol
xchg
jmp
push
lea
mov
imul
inc
(bad)
adc
sub
sti
and
bound
add
add
fwait
test
mov
in
and
xchg
xchg
leave
push
mov
mov
adc
jae
scas
in
into
mov
inc
jmp
sbb
inc
jmp
mov
push
sahf
mov
lahf
sub
mov
dec
iret
je
push
or
jo
pop
adc
inc
lods
pusha
ds
retf
mov
sub
adc
add
xor
xor
cmpxchg
test
fcomp
pushf
shl
out
cmp
aam
mov
adc
fbld
hlt
mov
(bad)
cwde
jmp
cwd
jbe
loope
sahf
dec
sub
sub
fldenv
or
push
pushf
and
sub
inc
push
fisubr
cmc
or
aaa
cmps
pop
ja
fldenv
mov
and
clc
mov
ins
outs
ret
mov
aad
cli
inc
pop
fs
jb
std
or
nop
sbb
cli
sub
inc
in
out
movs
iret
mul
mov
fwait
mov
pop
dec
pushf
lods
loope
sub
(bad)
daa
sub
movs
sub
std
sbb
pmaddwd
stos
shr
jo
sbb
mov
push
mov
jle
je
sub
aad
ja
cmp
sar
push
test
lds
pop
adc
jge
push
sahf
push
loop
je
loop
test
stos
cwde
add
pop
ss
int
clc
mov
mov
subps
ret
inc
pop
out
int3
pushf
push
xor
std
jne
fisttp
mov
xchg
push
push
add
cmp
rcl
or
mov
lods
js
data16
jns
push
dec
push
fnstsw
je
pop
push
adc
lds
add
bound
(bad)
popa
je
icebp
jmp
call
add
cvtpi2ps
xor
dec
cmp
sar
ret
sbb
cli
hlt
arpl
xchg
mov
mov
xor
bsr
add
lds
fwait
inc
and
or
dec
xor
icebp
cmp
sbb
arpl
out
call
sbb
dec
mov
dec
(bad)
scas
mov
inc
jmp
(bad)
stos
loope
loope
mov
into
dec
cdq
fwait
not
mov
dec
inc
std
sbb
sahf
adc
mov
(bad)
adc
and
push
push
rol
adc
aad
jp
pop
pop
lock
inc
out
cmc
rcr
push
dec
mov
in
(bad)
fdivp
repz
enter
adc
add
cmp
jne
xor
pop
aas
inc
and
jmp
adc
push
inc
loop
leave
adc
mov
push
mov
adc
mov
xchg
cmp
jmp
jo
mov
addr16
test
iret
retf
xchg
in
sti
out
and
xchg
ins
mov
loop
pop
ss
outs
mov
or
popa
fucom
sbb
add
or
cmps
inc
add
mov
xor
xchg
arpl
out
lahf
out
xchg
mov
adc
dec
sbb
clc
mov
mov
jg
retf
adc
push
inc
mov
dec
dec
pop
mov
cmc
add
out
push
jno
imul
mov
sbb
pop
mov
scas
xor
rol
add
pop
sub
shl
stos
or
repz
cdq
add
mov
(bad)
in
cs
test
inc
out
dec
pop
push
sub
mul
sbb
dec
adc
sbb
sub
cdq
mov
mov
ins
cmps
or
cwde
mov
xchg
rcl
rcr
imul
jnp
push
mov
lea
fdiv
inc
sar
jmp
scas
clc
dec
(bad)
pop
and
jnp
adc
push
mov
inc
inc
lock
inc
adc
or
push
lea
in
push
neg
movs
jne
mov
mov
sub
dec
sbb
(bad)
push
xor
mov
ins
pop
push
add
hlt
fs
fild
lahf
add
sbb
lahf
cli
mov
addr16
(bad)
pusha
push
cmps
mov
cmp
push
clc
jge
ret
xchg
outs
add
rcr
pop
adc
inc
xor
das
inc
mov
(bad)
pop
sub
pop
popf
sbb
scas
add
or
add
xchg
imul
sub
jp
imul
mov
popf
jmp
or
dec
in
hlt
cmps
inc
push
jo
pop
les
sbb
(bad)
sub
xor
retf
call
dec
mov
ds
mov
(bad)
std
cs
cli
in
add
or
pop
fistp
jnp
jp
xchg
push
ins
jbe
mov
pop
loop
or
out
ds
ret
enter
add
lods
cdq
std
aam
ins
add
or
ret
fidiv
or
sub
xchg
iret
imul
lds
mov
ins
fsubr
das
and
je
pop
(bad)
ins
sahf
mov
cmps
dec
or
push
mov
test
xchg
push
xchg
sbb
into
pop
xlat
retf
xchg
xor
push
mov
fldenv
push
mov
xor
cli
pop
sub
std
hlt
inc
xchg
mov
aam
test
pop
mov
retf
cmp
icebp
fstp
mov
push
sahf
push
and
dec
dec
sub
or
push
pop
repz
mov
test
adc
movs
mov
rcl
mov
pop
jbe
cmp
sbb
mov
rcl
cwde
mul
xlat
mov
jge
dec
in
(bad)
cmc
fstp
inc
adc
dec
retf
cmps
ins
les
test
int
cld
xchg
pop
and
mov
sub
xor
ds
shl
mov
popa
cmp
push
loop
or
inc
sbb
inc
xor
mov
jbe
mov
popf
fistp
cmps
or
and
pop
mov
xlat
xor
(bad)
xor
jmp
or
arpl
pop
push
jg
push
xchg
add
stos
xchg
idiv
mov
dec
pop
leave
arpl
int3
addr16
sbb
cli
xor
mov
inc
ret
iret
mov
jae
or
pop
push
cmp
xor
xchg
add
call
ins
(bad)
jbe
jmp
xlat
stos
aas
test
xor
xor
or
push
sub
mov
cmc
int
adc
fdivr
ret
imul
jb
mov
(bad)
jl
xchg
lods
add
sti
cdq
scas
fistp
sbb
cmp
jb
mov
push
repnz
cmp
lods
mov
inc
out
pop
stos
rol
push
fistp
mov
fs
dec
xchg
shl
das
fild
jae
addr16
dec
dec
pop
jp
add
xchg
into
sbb
xor
jne
mov
fsubr
int3
mov
mov
fstp
mov
xchg
mov
dec
ror
mov
stc
mov
jle
lahf
or
xor
jmp
adc
or
xor
std
adc
sub
enter
int
sub
int
rol
clc
and
int
or
scas
ja
call
mov
movs
sbb
mov
xor
jns
das
into
push
addr16
es
cmp
dec
cmp
sbb
sbb
iret
icebp
push
dec
xchg
loope
lds
dec
ret
scas
jno
dec
mov
fiadd
cmps
test
(bad)
push
adc
jge
lock
mov
stos
mov
enter
dec
in
(bad)
lock
in
sub
pusha
rcr
shr
jecxz
push
nop
inc
add
popfw
adc
lea
dec
dec
aad
add
jmp
inc
psubd
call
sti
mov
jmp
cmp
retf
mov
iret
arpl
test
addr16
outs
out
mov
push
repz
mov
adc
mov
lods
dec
cmp
sbb
sub
mov
mov
sbb
xor
idiv
xor
inc
lods
xchg
les
jmp
xor
or
mov
loope
xchg
xor
xchg
sbb
loop
test
xchg
popf
pushf
jge
adc
push
dec
sub
popa
(bad)
mov
nop
dec
mov
mov
fnsave
jne
jle
mov
xchg
mov
ins
xor
int
mov
(bad)
jae
xor
aas
popf
stc
mov
lods
mov
ret
lea
loopne
push
pusha
xor
sbb
ds
rol
lea
and
int3
repz
cmp
push
sub
pop
inc
and
aas
pop
and
pop
xor
sbb
inc
scas
add
mov
dec
daa
adc
in
xor
jecxz
inc
mov
xchg
ror
pop
int
rol
fistp
inc
xor
jmp
div
das
in
mov
mov
shl
mov
adc
push
stos
jmp
int3
push
push
add
dec
(bad)
iret
sub
cmp
cmp
jbe
cmps
or
mov
push
mov
sub
or
mov
cdq
outs
add
pop
test
jbe
imul
popf
cmc
lds
jo
dec
push
mov
mov
jp
and
xor
jmp
addr16
mov
popa
retf
xor
inc
call
cmc
imul
sahf
adc
stos
push
movs
cwde
mov
mov
jp
adc
add
js
movs
add
sub
xchg
sti
popf
test
ficomp
xor
sub
in
mov
icebp
xchg
and
in
lea
scas
sub
push
push
iret
movs
nop
and
sti
ins
shl
sbb
fmul
enter
sub
sub
inc
jmp
das
test
retf
test
imul
pusha
mov
daa
fistp
shl
cmp
loope
loop
outs
inc
jns
xchg
xchg
adc
pop
add
mov
pop
jge
add
(bad)
xchg
or
fdivrp
cmc
jo
fmul
scas
push
adc
push
cmp
and
mov
jmp
imul
push
pop
sbb
pop
inc
xchg
xor
aas
push
div
pop
dec
pop
mov
clc
out
sub
inc
xor
mov
mov
push
xor
sar
out
test
pop
adc
xor
pusha
xor
std
cmp
cli
pop
and
lods
sbb
inc
repz
push
adc
jmp
nop
jns
push
mov
mov
addr16
xor
lock
rcl
out
sbb
xchg
jb
inc
jb
sbb
mov
and
test
or
enter
inc
(bad)
mov
push
aaa
jg
das
cwde
pop
outs
daa
adc
(bad)
(bad)
fisubr
dec
pop
ret
cmp
sahf
test
sub
mov
ss
cmc
(bad)
or
outs
cmp
clc
ret
fiadd
ds
mov
cmp
sub
aaa
mov
nop
sub
pop
or
xchg
leave
push
sbb
pop
sub
mov
mov
jmp
call
outs
mov
gs
and
mov
loope
inc
outs
bnd
xchg
out
xchg
cs
and
xor
cmc
imul
sbb
dec
cs
or
xlat
je
mov
cmp
in
fisub
jbe
xchg
lods
in
cmp
mov
inc
jns
out
push
hlt
in
(bad)
mov
sar
xchg
stos
(bad)
mov
loope
aam
es
jle
mov
test
pushf
cmp
dec
sub
es
dec
and
shr
aas
shl
pop
loop
daa
sbb
iret
sub
push
scas
(bad)
icebp
or
push
sbb
adc
shl
adc
xor
retf
outs
inc
cli
imul
push
sahf
and
je
into
xor
(bad)
and
ret
jmp
add
sub
jbe
lea
inc
inc
cs
sahf
mov
lahf
xor
fwait
and
cmp
aam
out
sbb
pop
daa
xor
mov
into
retf
push
lds
adc
cmps
out
mov
lods
pop
push
dec
pop
pop
push
aaa
jns
adc
mov
inc
fcom
mov
sbb
retf
repnz
xchg
ret
xchg
ror
push
adc
xchg
or
scas
es
int3
xchg
xchg
push
gs
mov
and
pop
cs
repnz
push
adc
jne
mov
repz
and
xchg
pop
xchg
fs
xchg
out
ins
sub
push
or
sbb
les
mov
sbb
pop
je
mov
lahf
or
pop
and
push
add
adc
mov
out
lds
call
lds
pop
loope
fsub
stc
dec
push
pop
popa
cmp
icebp
pop
cmps
sbb
push
rol
sub
popa
mov
mov
xchg
adc
pop
mov
int
add
inc
lods
fist
(bad)
jns
call
jecxz
sti
int
je
rcl
adc
test
mov
push
sub
lahf
mov
adc
sub
xor
dec
xchg
add
data16
jno
scas
out
dec
aas
call
push
arpl
lods
rcl
es
mov
jge
dec
and
xchg
push
sbb
cmp
cmp
dec
mov
clc
imul
and
js
dec
mov
sbb
outs
and
pop
inc
test
stc
sbb
outs
sahf
jbe
jb
jb
mov
mov
and
(bad)
jb
aas
fwait
push
inc
retf
push
iret
mov
add
sbb
mov
stos
lahf
aas
fidiv
es
rol
mov
add
sbb
es
imul
dec
sub
mov
pop
dec
and
inc
jb
push
jge
mov
inc
dec
push
in
ret
dec
or
arpl
xor
ins
cld
scas
in
daa
sbb
shr
enter
dec
test
cmp
in
std
mov
(bad)
pusha
mov
xchg
sahf
aam
fldenv
std
xchg
outs
call
not
ins
or
clc
nop
imul
fidivr
mov
pusha
ja
push
dec
jmp
ss
mov
mov
lods
gs
pop
aad
jl
sub
xor
inc
pand
sbb
out
adc
sbb
inc
hlt
mov
into
push
test
shl
mov
xor
ffree
clc
or
clc
retf
sbb
mov
div
loop
mov
ret
mov
dec
jp
ficom
adc
xchg
hlt
or
mov
pushf
pop
dec
dec
adc
dec
mov
and
push
sub
inc
and
daa
popf
xchg
imul
sar
push
in
les
sbb
sub
jnp
mov
das
xor
and
fwait
imul
jno
enter
sub
pop
mov
cld
aaa
push
xor
ds
int3
(bad)
jmp
jl
enter
(bad)
div
adc
dec
fwait
lods
cmp
jmp
jae
in
cwde
xor
fwait
xchg
hlt
adc
xchg
jp
dec
xor
aaa
loop
mov
xchg
sbb
icebp
cmp
inc
or
pop
xor
and
outs
test
dec
pop
sub
and
cmps
jmp
(bad)
rol
push
pop
addr16
sub
adc
mov
stos
cmp
push
retf
imul
repnz
les
cmp
xacquire
(bad)
pop
pop
repz
mov
jmp
push
fs
mov
jnp
adc
jns
cmp
nop
add
push
ret
mov
movs
pop
(bad)
jmp
fstp
xor
xchg
aas
mov
jl
lods
sub
out
std
cmc
adc
adc
fadd
ins
inc
sub
xchg
lods
mov
(bad)
or
pop
jbe
lock
(bad)
mov
clc
jl
std
jp
xor
int
dec
cmc
fwait
icebp
pop
mov
cmps
push
pop
jno
sahf
xor
jo
jo
std
int
adc
ins
cmps
idiv
add
(bad)
mov
mov
mov
jbe
outs
sar
add
mov
stos
add
mov
jne
repz
push
pop
inc
(bad)
sti
xor
ins
jbe
gs
mov
jp
and
jecxz
adc
xor
cmp
jmp
test
cmp
sbb
test
mov
cld
cmp
push
lods
repnz
in
sub
dec
(bad)
sbb
test
fstp
add
sbb
mov
cmc
(bad)
ficom
cmp
cmps
xchg
xchg
and
test
mov
jbe
push
xor
push
pushf
movs
dec
or
and
push
shr
imul
jge
push
in
inc
fsubr
ins
pusha
scas
jo
adc
add
xor
add
and
out
repnz
call
sbb
jne
mov
(bad)
push
cwde
mov
adc
sar
and
popf
xchg
out
ins
mov
mov
mov
cwde
jne
iret
fwait
sub
cmp
sar
pop
ins
jl
outs
jnp
mov
ja
pop
mov
sub
ror
sbb
sahf
pop
and
out
dec
xor
stos
cmps
(bad)
pop
sub
mov
repnz
xor
shl
cmps
ds
and
call
inc
mov
in
fs
push
add
lods
or
mul
fs
adc
iret
jns
dec
add
pop
mov
jnp
pop
mov
push
and
data16
push
fdiv
xor
rcr
add
jno
aaa
xchg
gs
out
cdq
(bad)
pushf
movs
mov
pop
(bad)
mov
data16
mov
out
xchg
adc
fdivr
call
mov
inc
jb
jnp
sbb
dec
jb
adc
inc
inc
pop
inc
mov
(bad)
sbb
pop
mov
jmp
lods
aas
jle
imul
mov
jb
aaa
pop
fdivr
add
dec
sub
xchg
xor
retf
arpl
or
div
fs
(bad)
push
or
jp
ret
mov
pop
jle
mov
ins
xor
mov
sub
out
cmps
mov
inc
mov
scas
mov
push
cmp
daa
xlat
jl
add
mov
cwde
pop
cli
int3
aas
cwde
mul
mov
jnp
sub
ds
lock
mov
add
nop
sbb
movs
sbb
push
icebp
cmp
mov
cld
sbb
xor
xor
fstp
mov
mov
or
inc
ficomp
ret
mov
pop
shl
pop
mov
and
ret
sub
add
adc
mov
lds
xor
pop
pop
out
adc
or
mov
fbld
bound
stc
(bad)
mov
ror
cmp
pop
cmp
neg
mov
sbb
and
add
ret
and
xor
sub
loop
sub
or
loop
and
cmp
cld
push
jno
imul
mov
(bad)
sbb
ins
sub
pop
nop
retf
clc
stos
inc
jnp
push
or
pop
das
mov
and
mov
sub
(bad)
mov
jmp
xor
mov
dec
adc
jp
imul
iret
in
push
cli
ins
pop
pop
jbe
mov
push
mov
js
popa
inc
push
push
pop
cmp
xlat
add
add
push
loopne
xor
lea
pop
dec
inc
aam
or
or
mov
je
outs
sbb
mov
retf
dec
mov
aas
push
or
bound
aaa
stos
push
mov
mov
pusha
iret
xlat
scas
aas
dec
push
jno
fstp
dec
icebp
pop
ins
and
add
imul
cdq
ror
xchg
into
aas
adc
mov
stos
jg
enter
mov
icebp
sbb
xchg
adc
lea
movs
and
inc
mov
cli
lods
pop
sub
jmp
js
dec
cmp
in
outs
xor
ss
addr16
data16
or
aaa
xchg
lahf
shr
or
cmps
loopne
jno
adc
xchg
push
jmp
cmp
mov
cmp
fld
test
or
mov
in
adc
xchg
lahf
or
xchg
fild
cld
mov
inc
sahf
or
push
mov
in
pusha
mov
and
push
mov
cmp
mov
push
mov
iret
jmp
sahf
xor
fadd
inc
mov
movs
lahf
lods
mov
add
adc
fisub
dec
ret
jmp
aas
ds
je
and
mov
ror
movs
jb
mov
mov
aam
imul
int3
leave
xchg
adc
hlt
adc
shl
retf
push
jmp
pusha
std
push
xor
push
xor
sbb
or
xor
sbb
cmc
test
adc
xor
cmp
sahf
fadd
pushf
inc
mov
inc
cmp
xchg
xchg
cmps
movs
rcl
sbb
xor
add
and
xor
mov
test
xor
cli
cmp
out
jecxz
arpl
jl
fld
sub
xor
jg
cmp
adc
mov
jne
xchg
(bad)
das
mov
iret
das
sbb
jns
ins
ja
sbb
xchg
gs
inc
bound
cwde
pop
out
pop
rcl
(bad)
loopne
punpcklbw
cmp
push
jb
sub
loopne
inc
cmps
push
jns
in
dec
or
pop
cmp
and
ffreep
mov
pop
mov
jbe
mov
inc
or
(bad)
int3
sar
nop
fnstsw
dec
popa
jno
push
ss
lods
stc
push
inc
sub
mov
out
in
sub
dec
pop
mov
fiadd
stos
scas
jecxz
inc
mov
in
ret
xchg
inc
or
inc
push
int
in
inc
and
mov
das
test
inc
mov
dec
pop
jge
mov
xor
push
mov
xchg
jne
aas
inc
or
xchg
in
shl
cli
push
sar
pop
popf
adc
push
or
inc
ror
jmp
jmp
aas
rcl
imul
push
or
push
ja
cmp
sbb
fcom
xchg
xchg
lods
sub
fst
mov
sahf
call
xchg
stos
hlt
scas
je
or
xchg
xor
inc
nop
outs
cmp
je
ds
jns
xor
int
call
pop
add
hlt
sar
mov
inc
or
lods
mov
rcl
repnz
ds
cdq
mov
push
jge
jge
stos
and
push
xchg
scas
cmp
adc
lahf
xor
adc
sbb
enter
aaa
sub
pop
mov
jbe
and
test
shr
daa
or
out
cmps
in
dec
or
lods
push
data16
and
ds
fcomi
pushf
jae
pop
jnp
sbb
pop
shl
neg
aad
(bad)
adc
cmp
lock
push
cld
sbb
jg
pop
push
ror
shl
pop
sbb
xchg
popa
push
mov
sub
jp
push
std
inc
sub
hlt
fwait
stc
fimul
in
adc
xor
push
test
(bad)
xchg
fcmovb
mov
dec
cmp
jg
push
fimul
push
movs
cmp
mov
add
push
sbb
push
retf
ficomp
add
sar
fwait
std
into
hlt
adc
gs
clc
pop
lahf
movs
jmp
mul
jbe
cli
inc
pop
push
mov
(bad)
call
into
sub
aam
mov
imul
pusha
ja
mov
mov
sub
pop
pop
outs
int3
pusha
lods
repz
fwait
sub
mov
dec
dec
ins
outs
add
dec
in
mov
push
xchg
sbb
(bad)
stc
sub
pop
shr
loope
pop
sbb
ss
inc
adc
adc
iret
popf
cmp
dec
pop
inc
dec
fidiv
mov
into
loop
pop
jmp
mov
ret
xchg
or
inc
sbb
das
std
in
adc
push
push
repz
cmps
cmc
rcl
mov
aad
mov
std
inc
fadd
sub
push
ds
pop
xor
push
or
xchg
jecxz
adc
outs
and
mov
and
xchg
fs
mov
out
stos
xor
(bad)
js
or
mov
mov
cld
int3
es
push
cmovns
test
mov
inc
adc
adc
inc
pop
test
mov
cmp
push
mov
push
out
or
fld
cmp
pop
xchg
dec
pop
popa
jno
pop
mov
cmp
icebp
mov
daa
jmp
adc
je
cmp
fs
jle
mov
ficom
or
add
aaa
mov
xchg
mov
jnp
jo
jmp
dec
pop
in
jae
dec
or
sub
xor
cmp
mov
in
xchg
xchg
mov
jp
and
adc
mov
loop
lods
inc
stos
push
sahf
mov
or
or
loop
sub
pop
jne
mov
out
sub
lods
sbb
mov
adc
les
inc
sahf
popf
shl
push
stos
call
test
add
mov
fmul
sbb
(bad)
mov
mov
es
loop
mov
outs
pop
inc
sar
xor
test
movs
es
(bad)
call
pop
out
leave
or
mov
cmp
sbb
sbb
idiv
pop
add
dec
and
mov
xor
ins
push
inc
shr
call
mov
fistp
nop
(bad)
adc
mov
sub
mov
push
ds
imul
xor
movs
add
pop
in
jg
out
mov
div
xchg
fs
inc
inc
jno
hlt
and
fnstenv
xchg
fsubr
mov
mov
xchg
call
(bad)
imul
ss
fidiv
xor
jge
and
movs
das
mov
adc
mov
idiv
out
(bad)
bndldx
or
aaa
retf
mov
pop
cdq
es
iret
fstp
mov
dec
jns
shl
sbb
sub
ror
sub
js
mov
int
cwde
cmp
fwait
xchg
(bad)
jge
jle
dec
cli
sbb
mov
ja
add
xchg
daa
jl
je
js
xchg
mov
dec
leave
sbb
xchg
and
xchg
and
xchg
cmp
xor
into
jge
lods
pop
(bad)
cmp
sub
enter
ret
les
pop
shr
add
hlt
test
dec
pop
push
and
sbb
ror
push
mov
popa
sub
test
push
and
dec
retf
icebp
lods
loopne
mov
ss
lahf
outs
ss
jmp
stc
ja
jo
cli
pushf
in
mov
fbstp
cmp
adc
sbb
mov
xchg
xlat
arpl
cmp
or
push
sub
or
pop
mov
xchg
fisub
out
sub
test
or
xchg
dec
jmp
or
dec
test
sahf
and
add
aas
outs
(bad)
mov
xor
or
push
jp
add
sbb
inc
out
mov
or
xor
repz
repnz
mov
mov
jo
mov
aam
mov
outs
pop
xor
pop
mov
adc
cmps
iret
(bad)
je
mov
xchg
inc
push
jp
push
push
dec
(bad)
or
mov
cdq
add
repnz
lds
mov
movs
mov
aaa
lds
lods
daa
cmp
sbb
add
add
and
adc
stos
sbb
in
and
adc
cmc
sub
fmul
in
dec
mov
cmps
or
inc
pop
dec
inc
xor
sbb
xor
int3
sar
es
daa
inc
and
movs
cmp
aaa
loopne
mov
dec
leave
pop
fwait
repz
mov
das
int
sub
scas
inc
sbb
xor
test
inc
mov
dec
or
push
ins
add
sbb
xor
push
bound
enter
sub
(bad)
fldcw
push
mov
scas
sub
or
inc
movs
test
popa
out
sub
mov
inc
(bad)
arpl
(bad)
arpl
cmps
popf
cmp
std
or
push
test
inc
cdq
push
jmp
push
int3
jg
pop
xchg
les
aaa
mov
pop
frstor
fwait
inc
test
outs
in
xor
iret
or
sbb
mov
(bad)
mov
les
aad
ror
cmp
dec
test
mov
test
xor
js
mov
out
jecxz
out
sbb
out
pop
and
out
pop
and
in
jmp
pop
fbld
adc
push
add
xchg
ret
jmp
and
add
fwait
inc
pusha
aad
shl
pop
and
or
xchg
fbstp
mov
int
pop
cmp
jbe
mov
sbb
loopne
(bad)
jmp
mov
mov
leave
dec
fidiv
sbb
dec
je
add
rcr
and
in
jmp
push
add
adc
in
adc
mov
inc
jle
jecxz
aad
icebp
pop
nop
add
add
xlat
xlat
dec
and
mov
outs
dec
jmp
mov
xchg
mov
(bad)
xchg
cmp
adc
dec
repz
mov
mov
js
ds
popa
and
cmc
dec
pop
fst
mov
inc
popf
or
movs
cmc
(bad)
xlat
mov
sbb
pop
or
ja
mov
sahf
pop
jae
jg
test
mov
and
add
ror
pushf
jnp
fdivrp
imul
lahf
and
mov
mov
pop
mov
(bad)
adc
loopne
add
push
ds
cmp
sub
retf
xor
xor
mov
movs
mov
jbe
nop
lock
mov
retf
add
sbb
or
test
aas
jle
dec
mov
push
adc
jbe
ins
mov
xor
pushf
and
sbb
in
movs
test
or
je
cdq
mov
mov
cdq
push
movs
xor
jmp
mov
leave
sub
in
push
xchg
inc
ret
xchg
sbb
ret
shl
scas
mov
mov
sbb
gs
xchg
pop
test
in
jle
ret
gs
pop
and
mov
js
add
jmp
push
cmps
mov
cmp
push
sti
jmp
push
add
(bad)
rol
inc
pop
dec
(bad)
aam
popf
or
imul
add
addr16
(bad)
xor
and
test
and
push
add
push
jns
loope
adc
sub
pop
jne
sub
mov
dec
xlat
pop
je
jmp
arpl
mov
(bad)
or
xchg
and
adc
je
dec
outs
cmp
mov
adc
or
cmp
jbe
loopne
mov
mov
dec
pop
pop
std
lds
or
mov
dec
mov
or
pushf
adc
ins
scas
js
cmp
mov
mov
mov
and
pushf
mov
push
or
pop
and
retf
mov
ss
add
dec
dec
dec
aas
fcmovnu
cmp
iret
stos
inc
out
cmps
mov
outs
stos
(bad)
daa
lods
dec
jnp
jnp
sub
arpl
arpl
inc
push
and
cmp
dec
in
sub
imul
adc
jecxz
icebp
jmp
aad
or
enter
das
or
xchg
dec
movs
dec
xor
jp
(bad)
in
dec
xor
aaa
ret
test
push
jmp
cmp
daa
push
xor
add
setno
aaa
mov
pop
in
xchg
leave
cld
cmp
scas
jo
fwait
adc
adc
test
cli
in
js
shr
mov
dec
sub
es
adc
dec
jmp
mov
gs
rcl
sahf
(bad)
mov
out
imul
add
push
push
adc
in
arpl
mov
in
sbb
jg
cmp
adc
or
jmp
jb
push
sub
ja
mov
adc
add
pop
inc
daa
loopne
sar
mov
lods
dec
mov
rcl
je
aam
test
movs
in
and
repz
pop
xlat
adc
and
xchg
cmp
pusha
in
mov
add
fild
xchg
add
fidiv
fcmovnbe
in
outs
stos
adc
cmp
sbb
or
inc
push
fcomp
cmc
sub
pushf
jle
pop
or
jbe
test
sub
jbe
xchg
lock
sar
pop
adc
inc
sbb
dec
mov
xchg
scas
call
jne
popa
mov
fdivr
mov
clc
cmp
adc
in
push
sub
mov
sar
test
loopne
push
dec
push
(bad)
pop
add
fadd
(bad)
push
retf
mov
outs
stos
pop
stos
xor
in
aad
adc
ds
cdq
out
lock
xchg
mov
mov
iret
out
mov
frstor
movs
dec
nop
fs
rcl
(bad)
cmp
xchg
jb
add
push
popa
xor
pusha
loopne
mov
jo
mov
daa
dec
int3
dec
bound
xchg
sub
in
shl
mov
pmuludq
push
pop
ret
aad
sbb
dec
xchg
out
push
xor
xchg
jmp
fiadd
jbe
add
sub
push
sbb
jg
or
call
mov
jge
(bad)
adc
xchg
mov
rol
sbb
jns
fcom
call
or
pop
fcomi
pushf
jmp
or
push
pop
jne
dec
push
imul
fisttp
cs
xchg
bound
std
or
(bad)
(bad)
mov
sbb
cs
(bad)
xchg
and
or
xchg
jne
push
adc
gs
push
adc
jg
ret
jbe
arpl
jbe
cld
repnz
jo
repz
aam
inc
fld
cmc
jle
ins
pop
mov
ds
loope
jmp
jmp
dec
mov
inc
sbb
(bad)
or
aad
and
pop
jl
mov
stc
mov
ja
mov
stos
pop
mov
data16
aas
sub
sub
les
lock
into
fsubr
mov
scas
jno
mov
or
imul
idiv
clc
add
nop
mov
mov
sahf
(bad)
mov
in
xchg
pop
cmp
call
mov
dec
pshufw
jmp
ja
jle
jo
add
dec
les
xchg
pop
pop
inc
hlt
jecxz
sub
sub
pop
jnp
and
cld
cmp
dec
xchg
inc
adc
add
jecxz
dec
(bad)
mov
lea
das
xor
adc
mov
dec
loopne
inc
lods
pop
gs
retf
xchg
out
mov
dec
jns
fld
pop
ds
fadd
loop
hlt
inc
aas
inc
leave
sub
cmp
dec
inc
js
repz
and
nop
scas
or
mov
imul
fcomp
out
mov
bound
cmp
push
(bad)
lods
mov
add
dec
mov
std
mov
fdiv
cli
in
test
data16
adc
sti
jp
arpl
cmp
jmp
aam
cmc
sbb
xlat
or
cmp
inc
sbb
and
inc
aas
sbb
into
cmp
(bad)
pop
test
jp
sbb
push
xor
imul
add
daa
icebp
(bad)
in
jmp
aam
xchg
ret
lds
repnz
push
test
sub
inc
inc
dec
ja
jecxz
loop
retf
xor
cmp
repnz
pop
(bad)
pop
and
sbb
mov
movs
xchg
dec
stos
jecxz
ret
jg
jns
loop
jge
outs
js
push
repz
sbb
mov
cmp
pop
(bad)
in
retf
sub
mov
pop
lahf
jmp
push
loopne
loop
sahf
sbb
fdiv
inc
add
xchg
dec
xor
movs
inc
jmp
gs
xchg
aam
push
push
(bad)
int
ds
clc
mov
pop
jp
jp
mov
jb
ret
mov
lods
inc
sub
push
call
lods
cmp
pop
stos
pop
xor
pop
sub
and
or
xor
stc
cld
xor
pop
mov
enter
jbe
(bad)
xchg
loop
xor
nop
dec
jecxz
jbe
dec
mov
mov
pop
or
fdivr
popf
sbb
out
or
int3
inc
popf
adc
addr16
ins
pop
clc
nop
inc
not
fistp
xlat
jmp
rcr
dec
mov
mov
jno
test
inc
scas
dec
push
jg
mov
jns
mov
push
adc
inc
cmps
sti
push
lea
push
test
es
pop
sbb
idiv
stos
ret
jo
dec
xchg
or
sub
jmp
mov
repz
sbb
cmps
call
imul
and
jg
aam
inc
ret
lahf
jo
das
daa
xchg
pusha
stos
ins
push
xor
ins
xchg
rol
les
lds
rol
mov
in
retf
out
pop
add
fimul
xor
push
sub
sbb
add
cld
pop
mov
call
rcl
(bad)
in
stos
std
cmps
pusha
xor
out
mov
mov
or
scas
outs
xchg
sub
int3
add
jno
push
xchg
and
cli
fwait
dec
aas
adc
or
dec
mov
dec
push
mov
(bad)
xor
rcl
sub
xchg
lds
hlt
in
sbb
inc
in
cwde
les
int
jmp
nop
movs
aas
dec
je
mov
fst
or
sub
sub
push
adc
sub
jbe
call
mov
inc
jno
xchg
sub
push
push
xchg
loope
jl
add
sub
sbb
jb
cs
outs
add
cmp
inc
mov
dec
jo
cmp
je
dec
pop
(bad)
pop
fistp
ret
mov
and
mov
aas
pop
mov
out
or
ins
push
cdq
jl
imul
inc
(bad)
xchg
movs
or
loopne
or
imul
jo
push
fmul
dec
and
pop
and
dec
sbb
mov
cmp
test
fwait
xchg
inc
dec
or
test
sub
(bad)
popf
xchg
and
jmp
iretw
repz
into
mov
scas
cwde
fwait
xor
mov
adc
js
xchg
mov
fsubr
and
sbb
jo
dec
xor
call
pop
lods
inc
fimul
push
sahf
out
jecxz
ins
add
in
cli
in
add
pop
popf
cwde
ja
add
or
mov
inc
cmps
jne
push
or
js
xchg
out
xlat
mov
loop
mov
sbb
cwde
mov
movs
ja
dec
popf
pop
ficom
mov
ins
das
repnz
mov
repz
push
test
cmc
arpl
cmp
add
mov
mov
adc
dec
sub
mov
in
test
sti
mov
cmp
int3
inc
jb
fnstenv
fld
pop
sti
stos
or
cld
or
popa
xchg
enter
enter
leave
fnstcw
pop
pop
pop
clc
add
or
rcl
shl
loop
ret
push
fbld
pop
mul
mov
xor
outs
(bad)
push
adc
or
sub
dec
dec
mov
jmp
cmc
loopne
add
mov
hlt
push
arpl
mov
sbb
ins
sub
push
mov
inc
shl
ret
mov
movs
ret
std
mov
lds
add
or
xor
and
ins
dec
bound
sahf
xchg
retf
lods
add
call
fldln2
inc
dec
inc
push
(bad)
mov
call
in
mov
push
rcr
dec
in
xor
mov
imul
or
push
or
stos
ins
fisub
mov
ret
cli
ret
jmp
je
adc
pop
stos
push
pop
ins
jmp
inc
xchg
xchg
mov
cmp
xlat
xlat
mov
mov
mov
fstp
test
pushf
lahf
push
sti
sbb
sahf
xchg
xor
cli
push
mov
inc
push
cwde
mov
popa
(bad)
jo
inc
inc
movs
push
pusha
shl
jge
out
or
ss
xchg
sub
jno
cmp
xchg
xchg
mov
imul
pop
inc
scas
push
mov
nop
rcl
loopne
cmp
adc
popa
inc
add
sahf
mov
cwde
inc
repnz
lds
cmp
pop
test
sbb
loop
mov
xchg
rol
jae
sub
xor
popf
adc
cli
add
nop
jecxz
dec
pusha
adc
hlt
sub
sbb
jl
or
mov
cmp
test
and
xchg
mov
mov
mov
or
mov
gs
mov
dec
push
push
dec
and
adc
xor
adc
xor
retf
lea
(bad)
pop
mov
es
adc
inc
xchg
push
mov
es
lock
inc
call
add
jp
jae
mov
pusha
pop
daa
jbe
xor
jle
das
jge
js
fcmovnbe
cli
ds
fild
inc
je
test
mov
jl
test
push
cmp
jmp
outs
test
cmp
lods
push
sbb
or
icebp
scas
enter
pusha
sub
out
imul
xor
jle
repnz
inc
cmp
jbe
test
mov
pop
pusha
dec
adc
sbb
pop
mov
cmp
mov
call
and
idiv
cmp
(bad)
ss
or
push
(bad)
addr16
pop
cs
cs
fsubp
xor
inc
dec
mov
sbb
(bad)
(bad)
out
xchg
outs
call
sub
popf
sub
call
pop
jns
inc
or
(bad)
(bad)
mov
pop
and
ret
xchg
(bad)
jmp
cmp
jmp
leave
out
sub
inc
movs
stos
sbb
xchg
mov
sub
jg
ror
stos
xlat
aaa
inc
mul
cmp
jg
sti
xor
sbb
cmp
stos
inc
mov
std
addr16
icebp
xor
out
rcl
pop
adc
in
pusha
xchg
ror
inc
daa
sbb
mov
sbb
or
push
mov
test
(bad)
aam
push
iret
cmp
in
das
and
sahf
ins
ftst
(bad)
dec
ins
ret
inc
fimul
xor
or
aad
fild
xor
push
xchg
test
mov
xchg
movd
cwde
xor
mov
inc
xchg
ret
fs
push
das
cli
sub
push
movs
call
cmps
push
and
clc
jo
test
lods
dec
push
xchg
inc
sub
pop
inc
push
out
in
pop
push
push
cmp
sbb
dec
mov
loop
cmc
push
add
and
dec
sub
into
rcl
ds
inc
gs
rcr
pop
(bad)
mov
ja
mov
test
sub
add
jno
push
adc
push
scas
mov
jmp
lea
cmc
mov
mov
cld
pop
imul
pop
(bad)
out
aam
jle
cmp
mov
(bad)
sub
add
popf
mov
mov
or
fwait
dec
jmp
sahf
call
cmp
shl
out
fwait
loopne
dec
(bad)
push
lock
cmp
cmp
sub
adc
and
(bad)
adc
and
aad
push
cmp
lahf
cmp
lods
xor
sub
push
stos
jl
mov
fnstsw
push
sbb
push
int
adc
add
xlat
mov
xchg
and
fincstp
pop
aad
gs
test
rcr
fild
sbb
xor
mov
call
js
movs
xor
mov
jg
addr16
pop
adc
sub
mov
mov
push
dec
shl
xchg
ret
in
cmc
mov
mov
fild
cmps
loopne
cmp
inc
popf
and
arpl
jmp
call
push
and
adc
cmc
dec
sub
push
mov
push
das
push
out
test
in
jo
(bad)
mov
fmul
xor
movs
sub
jg
test
mov
add
pop
push
xor
jp
mul
dec
in
out
xchg
stos
hlt
shr
mov
adc
add
daa
add
push
ins
lea
ss
jmp
in
push
dec
retf
add
call
in
sbb
push
ret
and
fnstenv
sub
arpl
jbe
mov
das
and
inc
pop
jge
pop
call
push
or
bound
fst
or
mov
dec
je
add
dec
loop
scas
in
lahf
inc
mov
das
lods
inc
fcomp
and
mov
jg
and
xor
pushf
pop
and
pxor
inc
imul
adc
out
psrld
sub
outs
xchg
pusha
xor
popa
xchg
push
adc
jmp
ret
sub
xlat
retf
mov
std
int3
jg
jl
or
shl
jb
pop
in
mov
pusha
lods
mov
je
sbb
xchg
mov
pop
or
mov
imul
xchg
dec
cmps
dec
popf
daa
add
mov
mov
push
fistp
dec
fisub
pop
or
mov
push
xor
adc
leave
cdq
fistp
pop
ja
cmps
hlt
ror
sbb
cwde
stos
pop
les
hlt
pop
fwait
and
out
adc
adc
jle
loopne
mov
add
mov
scas
cli
push
push
fist
push
idiv
cmps
lea
mov
mov
into
aam
dec
jle
int
imul
dec
std
sbb
imul
jmp
scas
or
sar
outs
mov
cmp
sbb
push
push
cmp
push
adc
das
add
push
cli
sbb
xor
inc
in
and
cs
adc
imul
aad
adc
mov
leave
shl
repnz
jecxz
and
xchg
les
movs
mov
mov
das
xchg
outs
xor
aaa
dec
lea
test
in
xchg
jno
clc
add
pop
mov
jnp
leave
inc
dec
(bad)
dec
mov
xchg
imul
mov
mov
jo
inc
push
cmp
push
adc
rcl
popa
cmp
jns
mov
or
(bad)
retf
xor
or
lods
push
sti
sub
mov
psubq
add
test
(bad)
or
mov
nop
(bad)
sub
scas
inc
xchg
cmc
jle
icebp
push
cmp
test
push
pop
jp
mov
inc
jge
cmp
inc
jp
and
mov
xlat
clc
arpl
ins
jge
pop
add
bound
inc
fst
ins
inc
adc
push
inc
dec
xor
inc
je
inc
push
xchg
pop
dec
inc
fnstsw
ds
imul
sub
std
or
xor
out
in
sahf
mov
lea
shl
adc
sub
mov
push
mov
pop
adc
cwde
outs
and
fcom
cmp
cmp
mov
arpl
ficom
push
xor
pop
adc
neg
mov
dec
gs
adc
jno
mov
fcomp
ds
neg
jle
jns
ret
cdq
cli
iret
lods
loop
pop
nop
ins
(bad)
int
xchg
add
mov
adc
lock
in
mov
aam
jbe
cmp
mov
sbb
in
mov
scas
in
pop
cdq
push
icebp
cmp
sub
or
shl
pmuludq
mov
sbb
scas
inc
adc
ret
aas
movs
rcr
outs
movs
dec
xchg
xchg
loope
pop
stos
jg
aaa
mov
push
fiadd
imul
ret
sub
lock
(bad)
(bad)
addr16
outs
popa
mov
sbb
lock
sub
(bad)
and
xchg
shl
pusha
fadd
adc
mov
push
jae
cmovle
xor
cs
movs
mov
mov
cs
dec
js
jnp
pop
xchg
jo
clc
pop
cdq
cmp
and
sub
jge
scas
aad
(bad)
clc
cmp
sub
sbb
xchg
sbb
pop
add
lods
nop
(bad)
imul
jo
pop
imul
sub
add
cwde
sub
and
out
ror
xor
out
adc
jbe
mov
xor
or
mov
push
sbb
pushf
push
ficom
jae
call
sti
mov
loope
ja
cld
ins
shr
popf
scas
and
cmp
adc
(bad)
cmp
inc
and
fs
out
dec
movs
js
mov
dec
jae
xor
or
ds
int3
jge
push
add
pop
mov
in
(bad)
mov
fidiv
in
push
fs
push
jecxz
xchg
ins
cmp
addr16
mov
lds
inc
(bad)
icebp
cmp
xchg
(bad)
and
shl
jno
sub
add
cmp
sub
xlat
fldcw
inc
loop
int3
in
in
dec
(bad)
adc
je
inc
lock
pushf
shl
rcr
mov
mov
popf
mov
dec
inc
sub
cmp
sbb
mov
and
shl
daa
punpcklwd
push
mov
dec
cmp
push
jmp
inc
sbb
fidivr
adc
loop
(bad)
jle
fild
inc
pop
and
dec
adc
xor
jl
lea
sub
adc
shr
push
inc
fwait
push
inc
fxch
repnz
sub
sbb
js
(bad)
cdq
popf
cmp
mov
enter
rol
outs
adc
push
ja
in
sar
fadd
in
push
sub
adc
xor
push
lock
in
jns
xlat
cmps
cwde
sbb
jmp
and
pusha
aas
(bad)
fisubr
pop
mov
adc
or
dec
xchg
out
stos
stc
pusha
in
rol
mov
(bad)
bnd
das
mov
cli
bound
inc
test
sub
pop
(bad)
cwde
dec
call
aaa
push
in
sbb
mov
jl
jp
cmp
scas
mov
out
std
cmp
sbb
sub
sar
sbb
shl
in
sbb
mov
inc
jmp
repnz
(bad)
lea
test
stc
jle
fld
adc
aas
out
inc
mov
add
(bad)
loopne
dec
js
mov
sti
ins
test
fs
(bad)
adc
jmp
imul
lea
gs
mov
mov
rol
cli
dec
sbb
fist
mov
sub
inc
pop
test
dec
test
and
lock
mov
dec
mov
lds
push
movs
adc
in
ins
cs
and
xlat
pop
fdiv
adc
pop
mov
stc
xchg
jmp
shl
addr16
aam
int
cmp
mov
xchg
cmp
sub
jnp
es
leave
retf
pop
and
mov
add
cdq
jno
mov
into
test
adc
aas
rol
jmp
out
jns
jmp
mov
ins
mov
jno
xchg
dec
mov
sti
add
je
jp
(bad)
cmps
pop
sub
jg
out
cs
push
jmp
jnp
addr16
jmp
inc
adc
and
into
nop
mov
rcr
sub
push
lock
imul
jmp
pop
mov
jnp
jge
call
sbb
imul
push
and
mov
pop
sahf
cld
dec
mov
sub
jbe
aad
mov
cmp
into
sbb
lods
popf
aam
cmps
dec
aas
mov
into
xchg
xlat
mov
xchg
inc
repz
inc
enter
and
in
inc
out
(bad)
popf
sbb
or
sbb
stos
sbb
scas
loop
mov
in
push
imul
mov
mov
imul
dec
gs
mov
fld
icebp
outs
pop
or
jo
retf
push
out
pushf
sbb
mov
shl
loopne
xchg
scas
adc
xchg
or
dec
or
pop
jb
pop
fcom
pusha
sub
lods
test
loop
int
mov
sub
ffree
inc
cdq
ds
fucom
xchg
dec
xchg
and
inc
sbb
add
cmp
fisubr
ss
rcr
push
and
scas
movs
and
repz
mov
adc
or
jnp
test
pop
and
ror
and
pop
into
stos
or
sti
stc
jp
inc
int3
sub
pop
stc
xor
pusha
out
or
mov
dec
dec
pop
nop
nop
sbb
mov
js
out
in
ror
inc
(bad)
aam
xlat
jge
mov
mov
push
cmp
rcl
int
inc
and
or
mov
ins
cld
(bad)
aad
int3
mov
push
test
cdq
jmp
out
adc
jmp
dec
mov
mov
jmp
pop
xchg
lock
add
and
xor
shl
mov
test
inc
and
in
push
fucomp
pop
push
xchg
test
loopne
sahf
cld
stc
and
push
pop
or
add
int
ss
je
ror
cmp
adc
push
xchg
jmp
xchg
xor
gs
add
xor
cmc
repnz
pop
xchg
jecxz
cmp
ss
idiv
ins
push
xchg
jmp
fimul
mov
mov
mov
jmp
pop
jnp
lahf
imul
sub
fbstp
mov
pop
mov
push
repnz
xchg
push
mov
in
popa
xchg
pop
mov
jb
jne
pop
retf
pop
iret
daa
clc
scas
das
dec
fstp
stos
inc
(bad)
mov
sbb
inc
jb
loope
imul
(bad)
xchg
jp
sub
mov
dec
ret
pop
push
dec
sbb
(bad)
push
xchg
loope
cmc
loope
mov
fcmovnb
mov
in
dec
leave
jae
jl
lahf
adc
jmp
rcr
clc
pop
ror
xor
test
dec
repz
mov
data16
out
cmp
cmp
sti
stc
push
jo
sbb
arpl
push
ins
les
pop
sbb
sbb
and
shr
sbb
neg
cmp
es
xchg
fdivr
xlat
mov
fidivr
adc
mov
ja
enter
cli
enter
jns
xchg
mov
or
mov
sbb
(bad)
mov
dec
jae
or
sub
inc
fldcw
or
lds
test
out
dec
adc
mov
dec
pop
dec
scas
jb
mov
call
ss
push
jl
xor
lds
mov
inc
pop
dec
sub
gs
ror
fistp
mov
(bad)
pop
test
iret
push
scas
cmp
pop
ds
inc
(bad)
call
test
sub
inc
mov
jmp
push
popa
xor
inc
sbb
aam
imul
push
xor
mov
jge
mov
lds
dec
lea
cmp
jecxz
(bad)
push
rcl
ficomp
hlt
cdq
cmp
stc
sbb
or
jl
xchg
cdq
mov
stos
push
std
js
ds
mov
pop
(bad)
push
push
mov
scas
adc
push
cli
cmps
pop
movs
and
(bad)
sar
daa
fimul
popf
xchg
sbb
sbb
bound
mov
repnz
(bad)
arpl
movs
(bad)
jno
pop
push
out
fld
and
xor
test
push
loop
repnz
stc
hlt
gs
jp
out
add
ja
add
push
popa
lods
pop
mov
loopne
and
or
mov
xchg
mov
pop
mov
outs
jno
ds
aaa
inc
jmp
sub
pusha
mov
ffree
loopne
mov
mov
sar
and
mov
shl
add
push
call
(bad)
xlat
or
scas
arpl
aaa
xchg
popf
or
jno
cmp
outs
mov
sub
rcr
cmp
mov
pop
xchg
cmp
mov
ror
or
or
and
mov
add
loop
daa
clc
inc
shr
sbb
mov
fnstenv
jno
clc
mov
sbb
mov
sbb
pushf
mov
pop
jae
loopne
out
cmp
stos
rcl
mov
jne
jbe
mov
or
div
and
or
mov
jp
add
mov
(bad)
cld
repnz
shl
cmps
xor
dec
popa
push
mov
daa
xor
or
and
xchg
and
popf
scas
push
xor
sub
inc
push
mov
sub
retf
jae
mov
nop
shr
in
hlt
faddp
pop
cmp
leave
(bad)
je
or
jg
mov
je
mov
jb
(bad)
fdivr
jae
jp
imul
xlat
mov
inc
std
shl
xchg
mov
cwde
cdq
call
scas
and
out
cli
cli
data16
mov
lds
inc
imul
xor
inc
adc
ror
daa
pop
icebp
inc
out
sub
sub
pop
int3
dec
in
cli
add
cmp
nop
arpl
fsubr
loopne
add
fcomp
retf
das
es
sub
gs
xor
xor
pop
outs
add
fwait
jno
in
es
or
aad
fs
mov
push
cmp
dec
and
fsub
sbb
sub
sub
cmps
pop
mov
test
pushf
lods
movs
mov
out
push
std
add
pop
outs
mov
push
popa
mov
mov
retf
hlt
int
cmp
xor
cmp
out
adc
jmp
jmp
enter
rcl
pop
or
and
or
push
out
jmp
mov
mov
int
cs
jl
xchg
xchg
inc
fst
aaa
shl
imul
aam
ret
ret
push
adc
ror
add
imul
cmp
xchg
mov
movs
ret
mov
fld
js
adc
orps
in
sbb
inc
lods
or
ins
inc
mov
pop
lock
mov
push
outs
fwait
sub
dec
call
lods
jae
sti
jns
pop
cld
pop
mov
push
lsl
adc
xchg
aaa
aad
mov
pop
push
jl
xor
or
xchg
rol
mov
mov
sub
or
retf
test
xchg
inc
mov
add
jnp
dec
mov
jg
outs
adc
cmps
xchg
xor
inc
mov
mov
pop
mov
mov
or
push
shr
sbb
icebp
pop
cmc
in
lock
mov
sahf
xchg
mov
inc
mov
daa
stos
bound
and
test
mov
sub
jnp
into
cmc
lods
jbe
nop
jbe
data16
rcl
jmp
inc
std
jnp
push
gs
lods
cmp
push
jl
icebp
jmp
pop
and
int3
dec
in
scas
adc
mov
mov
int3
fs
ins
mov
aaa
mov
xchg
sub
push
pop
rol
adc
cmps
cmp
sub
loope
sbb
and
push
xor
push
cld
lea
xor
mov
and
fst
mov
xchg
jns
pop
mov
clc
scas
in
sub
or
and
add
aas
loop
push
pop
dec
inc
mov
pop
lods
add
mov
bound
xchg
sbb
mov
shr
out
xchg
inc
pop
cmp
push
hlt
inc
and
mov
add
hlt
mov
rcr
dec
jecxz
scas
dec
dec
dec
dec
jmp
mov
xor
push
adc
jl
call
ror
mov
jg
inc
dec
cmps
mov
in
pop
movs
jecxz
mov
fsubr
adc
xchg
adc
movs
pop
push
shl
je
mov
sbb
bound
test
and
cwde
add
dec
jmp
or
xchg
cmp
lods
addr16
sub
pop
mov
inc
stos
mov
sub
cmp
jmp
leave
jne
mov
mov
rep
or
ja
inc
mov
and
leave
inc
shl
or
cmc
rcl
push
xchg
aad
or
imul
rcl
mov
push
inc
(bad)
cdq
lods
sbb
inc
cld
stos
pop
push
push
fwait
rcr
pusha
cmp
push
pop
pmovmskb
retf
rcr
sar
clc
mov
mov
jl
iret
les
jnp
jb
mov
pop
sbb
rol
out
xlat
ret
sti
mov
in
(bad)
fnstsw
xor
add
jecxz
dec
mov
sub
inc
arpl
pop
imul
xchg
or
sbb
movs
inc
mov
add
fisub
ror
std
xchg
ret
cmp
not
in
data16
rcr
retf
cmp
cmp
sub
pop
xchg
cmps
push
pop
(bad)
xlat
jmp
cmc
aaa
jne
adc
mov
dec
aam
mov
or
daa
out
jmp
sbb
inc
movs
push
stc
pusha
jmp
mov
jmp
fldenv
xchg
and
cmp
pop
sbb
stc
stos
(bad)
dec
add
fist
outs
or
and
mov
std
jo
cmp
jo
jmp
sahf
sub
mov
xchg
jg
mov
mov
sbb
jmp
loopne
retf
xchg
add
ins
push
push
inc
cdq
lea
(bad)
loopne
pop
mov
sub
stos
shl
test
or
mov
stos
and
shr
ins
sti
imul
adc
in
sub
pop
dec
inc
out
xchg
fild
(bad)
jge
clc
jns
lahf
or
jae
ins
or
jnp
in
jns
lods
(bad)
fdivr
mov
and
jo
ja
call
jmp
xchg
jae
in
cmp
into
pop
mov
clc
jno
mov
fnstcw
add
jne
and
mov
add
push
ret
mov
ret
clc
cmps
dec
push
xchg
ss
mov
in
fst
pop
bound
dec
les
in
add
and
inc
mov
push
sbb
scas
sti
daa
jle
or
hlt
mov
sbb
cmps
xor
sub
adc
push
jg
stos
push
imul
sub
push
jo
call
dec
push
sbb
add
cmp
mov
sar
cwde
cdq
(bad)
jge
mov
mov
lods
je
ss
es
mov
dec
push
lea
fstp
mov
jp
and
das
pop
out
and
retf
sub
jb
pop
inc
fild
test
mov
dec
sub
cmp
jno
xchg
test
mov
xchg
cmps
addr16
mov
mov
nop
push
movs
fiadd
aaa
xchg
lahf
or
(bad)
mov
mov
xchg
xor
pop
cmp
pop
shr
push
xchg
mov
xor
pop
push
sub
mov
sbb
jmp
(bad)
jae
daa
jmp
or
sbb
add
loopne
xchg
fcmove
fst
xor
and
and
cmp
dec
or
ror
add
mov
mov
stos
pop
jae
inc
popa
loope
sar
xchg
jns
retf
push
pusha
ins
lods
sbb
and
add
(bad)
adc
fxch
inc
xchg
ret
or
int3
mov
stos
fcomp
cmc
cmp
leave
sbb
std
xor
mov
out
lahf
mov
shl
mov
push
and
iret
push
or
jl
mov
adc
xor
ss
es
mov
fs
mov
and
test
mov
push
fimul
pop
rol
mov
inc
int
hlt
inc
adc
movs
cs
push
shl
outs
jg
push
mov
xchg
xor
jne
xchg
and
mov
aaa
stc
repz
test
addr16
movhlps
adc
cs
jmp
pop
test
pop
mov
pop
jg
sub
arpl
xor
sbb
add
add
xchg
popa
push
rcl
ret
movs
retf
cli
or
inc
jmp
xor
shl
sub
or
inc
cmc
sub
mov
push
fadd
jle
cwde
je
sbb
cmp
and
popf
cli
sub
cmp
and
push
cwde
les
aaa
mov
jmp
inc
push
lods
sbb
aas
jge
jl
ds
mov
retf
mov
jb
(bad)
jle
call
pop
jecxz
jl
xchg
loopne
xor
(bad)
mov
mov
and
xor
xchg
out
(bad)
jnp
out
dec
sub
rol
and
ret
inc
imul
fcomp
pusha
pop
xchg
cmp
jnp
add
ins
lea
xchg
or
dec
into
adc
xor
mov
dec
inc
cli
popf
xchg
jo
inc
pop
adc
bound
mov
inc
leave
cdq
stc
adc
cli
push
repz
sub
scas
loop
fild
or
in
jnp
pushf
gs
retf
jl
repz
sub
jno
mov
lods
pushf
(bad)
ror
xchg
dec
lahf
and
pop
xlat
mov
pop
jmp
mov
cwde
sbb
cmps
adc
jle
or
mov
mov
(bad)
pop
aaa
leave
call
dec
mov
or
fdiv
loope
pop
(bad)
out
enter
pusha
mov
xchg
(bad)
aaa
fisubr
data16
sbb
xlat
dec
neg
ins
imul
sub
out
pop
mov
or
lock
retf
scas
sbb
push
adc
(bad)
pop
or
mov
sbb
mov
mov
sub
jae
push
ret
adc
dec
retf
xchg
mov
inc
ret
mov
test
rol
dec
call
popf
sub
push
inc
and
int
inc
std
cmc
pop
sub
xchg
sbb
das
fist
mov
xchg
mov
leave
cmps
mov
ja
push
jb
movs
inc
fimul
repnz
xor
shr
imul
mov
int3
dec
(bad)
sub
xlat
and
ficom
shr
dec
les
or
jb
push
int
xchg
adc
iret
jmp
dec
dec
push
clc
loope
leave
jnp
outs
sub
punpckldq
or
scas
mov
or
stos
cld
sar
mov
add
mov
pop
out
icebp
push
jne
or
cmp
fisubr
test
cmp
aam
inc
and
movs
out
adc
fmulp
arpl
ins
iret
test
xchg
(bad)
mov
xchg
dec
mov
mov
std
cmp
test
dec
sbb
movs
jb
add
rcl
das
jns
arpl
xchg
or
loope
retf
es
xchg
and
cli
pop
movs
mov
enter
lock
enter
inc
or
sub
leave
mov
and
mov
imul
cmp
sahf
test
push
popf
scas
not
lods
lock
(bad)
jns
push
cmps
or
popf
icebp
out
and
and
test
push
imul
xchg
jne
adc
add
shl
xchg
cmp
test
xor
adc
push
mov
push
test
inc
in
xor
inc
mov
mov
(bad)
icebp
test
xchg
or
mov
jbe
sbb
aam
xchg
out
dec
rol
(bad)
mov
movs
cmp
adc
add
push
or
pop
push
mov
sub
ret
fwait
ins
das
ror
mov
inc
movs
sub
lods
mov
pop
inc
cmp
sbb
mov
jl
or
jge
es
pop
(bad)
fcmovnbe
ins
popa
or
aam
xlat
and
cmc
jg
jmp
clc
sub
retf
mov
scas
pop
out
push
cmp
test
dec
fstp
inc
jle
lock
test
push
inc
fwait
(bad)
into
push
cmp
cmp
js
mov
push
mov
add
add
xchg
xchg
sbb
(bad)
std
or
repnz
mov
adc
fistp
addr16
lahf
inc
jne
dec
dec
push
imul
ins
aas
pop
xchg
pop
call
ins
clc
test
sub
movs
dec
fs
dec
dec
sbb
cmp
fidivr
pop
loop
repz
mov
pop
fcomp
inc
mov
gs
xchg
jecxz
mov
jo
mov
call
inc
(bad)
imul
and
jo
mov
cmp
or
sub
call
xor
jle
or
xor
sub
fsubr
fs
test
jp
xor
or
dec
std
cs
sti
sbb
call
mov
les
push
mov
mov
imul
xchg
pop
lock
adc
js
ficomp
mov
in
xor
mov
jecxz
fistp
pop
pop
sahf
int
rol
lds
xchg
cwde
mov
mov
int3
enter
cmp
add
ja
and
fld
into
int
mov
sub
add
cli
and
test
loope
sub
push
inc
fld
inc
dec
mov
or
sbb
adc
aas
mov
pop
inc
adc
fbstp
repz
mov
push
cmp
pop
out
jae
in
fwait
mov
imul
cwde
push
dec
out
pop
leave
xchg
pushf
out
out
xchg
dec
js
fwait
shl
hlt
jge
add
cwde
(bad)
mov
(bad)
cmp
idiv
inc
pop
add
jns
push
cmp
xchg
inc
ja
cmc
int
sbb
mov
mov
inc
cmps
pop
int
inc
push
push
gs
fs
add
fsubr
popf
mov
inc
iret
dec
inc
inc
and
scas
xchg
cmp
ja
in
or
add
fisubr
pusha
fs
mov
mov
stos
out
ins
mov
(bad)
push
retf
and
loopne
lds
push
jb
fs
add
hlt
dec
jmp
or
imul
test
mov
shl
test
adc
sub
inc
jb
ja
inc
pop
scas
mov
cld
retf
fcmovnbe
shld
mov
jecxz
mov
in
adc
mov
push
into
xor
ret
sbb
and
mov
sub
stos
xor
cs
push
push
mov
lea
mov
lea
mov
fcmovbe
dec
bound
outs
lea
cli
in
out
shl
ret
mov
cmp
inc
mov
imul
jns
je
cmp
daa
xchg
cmps
(bad)
arpl
inc
adc
fmul
inc
nop
sahf
jecxz
jo
les
aaa
out
mov
loopne
lahf
xchg
test
or
rcl
pop
push
inc
add
fldenv
pop
mov
pop
sbb
inc
loope
add
out
stc
(bad)
cli
jns
into
popf
(bad)
push
mov
push
add
push
add
xchg
hlt
jo
push
mov
stos
inc
and
jle
test
push
cmp
movs
jmp
inc
sahf
aaa
add
aad
cwde
test
(bad)
call
daa
repz
add
fdiv
sub
pop
icebp
xor
pop
test
add
sub
dec
outs
movs
jns
movs
and
push
(bad)
jnp
rcl
repz
cmps
mov
loope
xchg
pop
ins
sbb
jmp
fisttp
adc
fnstenv
dec
inc
push
rcr
mov
in
jl
gs
jg
iret
push
xchg
mov
fild
push
xor
ins
sbb
mov
mov
push
pop
jno
jmp
xchg
int
xor
jmp
rol
in
mov
inc
mov
(bad)
enter
and
je
inc
or
push
bound
rcl
cmps
div
test
out
mov
hlt
adc
add
adc
ror
in
sti
sar
bound
sbb
nop
adc
shl
popf
xor
xchg
dec
add
and
jmp
xchg
cld
cmp
retf
stos
(bad)
cmp
xchg
pop
or
sub
xor
push
cli
inc
xchg
inc
sahf
mov
lock
mov
xchg
(bad)
(bad)
js
mul
bound
(bad)
add
lock
imul
sub
jg
fwait
lea
xchg
sub
mov
shl
sbb
cmp
stc
ins
dec
dec
nop
jge
push
push
cs
mov
mov
clc
pop
sbb
cmp
xor
sbb
int
ins
std
or
push
xchg
jns
push
cmp
loope
mov
cmp
int
jg
or
icebp
mov
cwde
mov
add
sub
popf
fsubr
ficom
fdivr
or
movs
mov
lahf
inc
inc
scas
loopne
mov
fnstsw
cmp
pop
aam
mov
daa
mov
xor
pop
cld
sbb
cdq
push
ds
gs
push
inc
outs
ds
xor
xchg
loope
dec
jnp
xchg
add
sbb
scas
addr16
sub
cmp
push
pop
xlat
cmp
stos
lock
inc
mov
lods
dec
stos
shl
rcl
or
in
call
dec
retf
ss
jbe
push
xchg
das
xchg
push
in
lock
pop
mov
sahf
jl
jbe
inc
scas
fwait
lahf
pop
add
stos
jge
ret
scas
cmp
retf
sub
cmp
seto
into
jne
mov
repnz
jge
dec
lods
pop
stc
jecxz
pusha
je
or
(bad)
adc
aad
mov
mov
jbe
fcom
pop
mov
imul
xchg
in
pop
aas
mov
fisub
in
prefetch
cwde
dec
test
xchg
out
stos
mov
mov
xchg
push
pop
add
inc
xchg
ja
test
sar
(bad)
mov
xchg
(bad)
and
stc
stos
hlt
aas
int
mov
xor
cdq
cli
stos
xchg
popf
data16
push
inc
imul
mov
popa
and
loope
jae
imul
inc
pop
mov
xchg
adc
rol
fild
pushf
pop
ins
test
adc
loop
(bad)
mov
cmovnp
sbb
imul
jmp
xchg
test
lods
adc
cmp
call
lea
or
mov
pusha
xor
stos
pop
or
daa
arpl
lea
or
sbb
cs
je
movs
or
push
mov
iret
xor
add
pop
mov
add
pop
test
xchg
enter
or
jo
neg
xchg
mov
pop
add
inc
mov
out
cli
xchg
adc
pop
sub
sub
cmp
rol
mov
lahf
inc
mov
rol
mov
cli
es
ret
mov
int3
inc
inc
mov
icebp
icebp
mov
das
mov
inc
pop
push
aas
je
inc
daa
push
es
retf
cld
cmp
scas
cmp
js
xor
and
or
dec
loopne
into
cli
mov
push
xchg
adc
int
jge
scas
lds
bound
fst
xor
mov
ficom
dec
nop
out
xchg
adc
not
and
jp
mov
imul
push
out
pop
idiv
imul
addr16
test
aam
xchg
ja
pop
mov
pop
xchg
lock
enter
sbb
call
push
daa
fistp
retf
ja
xor
pop
xor
jl
mov
retf
mov
daa
dec
mov
ret
adc
(bad)
outs
fbld
mov
repnz
ror
xchg
dec
imul
loope
inc
jl
dec
pop
out
aas
push
mov
dec
sbb
stos
and
mov
in
mov
dec
ds
daa
mov
in
(bad)
sbb
outs
inc
cmp
and
repz
shl
pop
std
cmc
rcr
scas
aaa
sub
dec
push
inc
inc
sub
mov
cmp
ret
call
push
cmps
xor
and
cmp
mov
mov
cmp
(bad)
fist
shr
mov
ja
cmps
push
shr
(bad)
(bad)
cli
movs
sbb
iret
lds
(bad)
mov
mov
xchg
adc
jmp
enter
lods
cmps
pop
add
push
addr16
mov
iret
inc
jne
or
add
out
mov
les
int3
ret
ret
shr
mov
adc
mov
push
outs
pop
cmp
leave
aas
jmp
je
dec
pop
xor
lahf
jl
sbb
mov
add
sahf
repz
jbe
out
mov
pop
popa
mov
bound
rcl
jg
jmp
bswap
add
jp
pop
inc
das
icebp
pushf
inc
mov
icebp
pop
adc
or
pop
push
sbb
pusha
fidivr
push
pop
sub
and
inc
stos
sbb
lds
inc
shl
into
adc
test
push
je
movs
dec
aas
adc
push
cs
cli
inc
lahf
jmp
pop
dec
je
mov
ja
loopne
dec
stos
dec
add
arpl
mov
ret
js
call
pop
cmps
test
fld
lahf
test
dec
fsubr
push
adc
scas
push
sbb
xor
add
retf
out
push
dec
fwait
dec
cmc
test
(bad)
in
dec
mov
in
aaa
jbe
and
dec
cmp
mov
leave
arpl
lahf
or
fidivr
pop
inc
fstp
movs
lea
dec
aad
(bad)
enter
inc
add
mov
lahf
fs
add
in
mov
es
xchg
aad
fistp
pop
movs
movs
cmp
stc
jg
sub
in
test
ins
sbb
jbe
push
test
out
cdq
mov
imul
add
pop
pop
xor
xor
cwde
xchg
dec
repnz
push
scas
adc
loopne
mov
jl
cmp
movs
push
sub
mov
cmp
clc
fsub
data16
nop
inc
not
jp
jb
push
fadd
inc
les
popa
mov
push
mov
mov
int
xchg
rol
mov
sbb
xchg
push
scas
(bad)
sub
ins
dec
push
sti
sahf
neg
imul
cmp
ins
inc
pusha
and
sub
popa
lock
mov
popa
into
sub
test
fmulp
and
lods
or
stos
add
xor
jle
hlt
and
stc
adc
inc
sub
aad
add
jbe
push
push
or
shl
xchg
and
test
lea
mov
dec
call
xchg
neg
mov
adc
pop
loop
test
stos
mov
fwait
cdq
xor
clc
xor
sar
test
or
fbld
imul
cmc
stos
sub
shl
or
xor
aad
and
(bad)
shr
imul
xchg
das
and
push
pusha
jnp
in
adc
aam
adc
mov
sar
jae
pop
pusha
stos
push
loope
mov
or
push
imul
add
jb
cmp
inc
and
(bad)
aad
mov
jmp
cmp
xchg
leave
mov
lea
jne
inc
xor
mul
(bad)
addr16
sbb
sbb
push
cli
push
lea
(bad)
cmp
xchg
xchg
cmp
outs
cmp
loope
stos
mov
xchg
mov
push
mov
mov
mov
daa
(bad)
aad
stos
xor
mov
ret
mov
sub
in
push
mov
add
adc
jmp
arpl
lods
mov
jb
div
pop
sbb
and
int3
sti
mov
adc
and
fcom
cmps
les
and
push
mov
int
ja
ret
mov
bnd
fbld
cwde
pop
bnd
out
dec
and
je
sbb
test
xor
xchg
mov
ins
push
push
cmp
mov
or
and
gs
icebp
jmp
leave
cli
lods
mov
xchg
xchg
xchg
mov
mov
and
inc
or
xchg
adc
and
mov
out
aam
call
rcr
cmp
adc
sub
cmp
int
push
idiv
dec
retf
cmp
mov
loopne
btc
out
adc
test
call
sahf
sahf
pop
push
pop
xor
sbb
mov
push
(bad)
scas
in
out
ds
mov
xchg
ins
inc
pop
rcl
push
sub
ss
mov
and
push
sti
dec
cli
mov
pop
loope
test
add
(bad)
add
test
or
mov
stos
inc
ds
fst
iret
inc
cs
mov
jbe
cmp
fist
aas
adc
enter
test
xor
ins
test
xchg
sbb
mov
lods
push
(bad)
popa
jmp
jp
xor
popf
sbb
lahf
and
sti
or
ins
pop
pop
movs
cld
pop
or
jnp
dec
movs
jbe
dec
xor
xchg
pop
inc
ins
mov
fisubr
mov
jmp
push
sub
stos
xor
jg
add
cld
pop
iret
xchg
test
sbb
sar
test
div
popf
push
xchg
cli
push
in
jmp
lods
mov
jle
jns
clc
jg
adc
in
sbb
stos
loopne
out
aad
or
enter
jge
movs
jmp
inc
fld
add
jg
mov
sub
das
stos
and
pop
mov
ror
fs
push
adc
inc
pop
neg
mov
jge
rol
ss
xor
cmp
fwait
das
add
div
and
dec
adc
test
loope
in
gs
outs
xor
out
xchg
cmp
and
in
lahf
sbb
and
repz
loope
sub
jae
stos
(bad)
jl
into
pop
dec
shl
ss
out
in
lahf
ret
mov
jp
mov
test
cdq
inc
add
xchg
std
in
mov
cmp
lea
call
data16
add
cmp
inc
add
aam
xchg
icebp
sbb
jmp
ror
sar
iret
repnz
and
sub
test
mov
dec
cld
add
call
aam
sub
and
fadd
xor
add
add
inc
dec
enter
add
mov
pusha
or
push
mov
cmp
mov
pshufw
or
push
jno
jne
repz
push
inc
jae
adc
in
xchg
cld
pop
fbld
mov
das
mov
(bad)
js
dec
cmps
inc
mov
xchg
push
test
iret
repz
push
sub
test
mov
pop
imul
rcr
push
sahf
add
lods
sub
rcl
pop
adc
fdivr
mov
in
dec
pop
in
sar
push
pop
add
inc
sbb
push
ins
and
mov
adc
sub
pop
in
cmp
iret
xor
(bad)
aas
out
jmp
lahf
shr
lods
test
ror
popf
or
ds
loope
or
sti
add
mov
mov
or
jnp
hlt
push
cmp
cmp
lods
aaa
call
xor
sbb
pop
xor
or
xor
pushf
jbe
dec
jbe
push
jns
push
sbb
fisub
pop
inc
push
xor
push
repnz
jl
add
jns
xchg
sbb
scas
cdq
push
lods
or
dec
xchg
dec
jns
outs
scas
cmp
and
dec
int3
fdivr
sbb
jne
movs
or
sub
fldcw
(bad)
(bad)
out
jmp
and
jb
and
cs
push
mov
outs
gs
sub
mov
es
sahf
adc
ins
pop
ss
push
xor
faddp
inc
lds
cwde
cmp
dec
sbb
xchg
sbb
popa
cmc
mov
pop
sahf
jns
stos
inc
push
arpl
fmul
sub
xor
push
add
push
movs
int3
shl
in
xchg
pop
cmp
neg
nop
xor
inc
mov
ret
mov
add
imul
(bad)
cmps
sar
and
xchg
leave
pop
iret
fst
ficomp
rol
add
cmp
fdivr
call
jecxz
rcl
push
mov
sub
int3
jecxz
ret
xor
call
mov
xlat
rcr
cwde
ins
push
inc
shr
cmps
out
add
cmps
aaa
imul
cmc
xchg
bound
addr16
jge
outs
push
(bad)
aam
stos
sysexit
add
stos
lahf
stos
pushf
dec
aad
mov
xor
push
xor
iret
sbb
pop
retf
stos
push
add
clc
adc
xchg
sub
pop
js
call
lods
fs
mov
loopne
sub
adc
out
jg
add
mov
pop
cmps
sbb
xchg
mov
in
pop
xchg
mov
cmp
inc
pop
xor
push
xchg
cld
cmc
test
jo
xor
or
ficom
adc
not
jbe
(bad)
cmc
jge
or
adc
xor
lea
jecxz
rol
(bad)
cmp
and
inc
jns
push
ret
or
sti
add
mov
jno
fs
int3
popf
clc
das
sbb
dec
sbb
jno
dec
sub
mov
outs
(bad)
jmp
clc
addr16
xor
xor
and
fs
push
mov
sbb
rol
jmp
shl
dec
and
in
jae
cdq
(bad)
in
mov
dec
shl
sub
cdq
xor
cld
in
std
mov
gs
popa
dec
ret
adc
fwait
push
cmp
mov
js
mov
imul
xlat
scas
mov
mov
lea
arpl
out
cmp
dec
mov
(bad)
push
jle
push
pushf
aaa
pop
(bad)
hlt
push
(bad)
sar
sbb
cmp
xchg
sbb
iret
cmps
jge
in
and
sub
adc
mov
neg
dec
or
push
cmp
xor
test
jecxz
jnp
dec
add
ds
mov
addr16
imul
movs
jae
out
jmp
pop
inc
in
int
cmp
fsubr
fcmovbe
and
jmp
and
int3
mov
pop
adc
int3
push
int
dec
or
retf
(bad)
lods
add
lock
aad
push
clc
hlt
lods
stos
dec
enter
jae
(bad)
stc
stc
push
icebp
dec
int
sbb
dec
xchg
lods
or
inc
test
stos
call
fisubr
xchg
out
cmp
movs
daa
sub
js
repz
shl
mov
mov
dec
ret
lahf
invd
add
es
mov
or
mov
xchg
pop
out
and
outs
inc
inc
xor
mov
arpl
or
jmp
lods
and
fs
test
repz
or
and
xor
or
test
pushf
adc
pop
das
shl
loop
popf
aam
xor
add
mov
dec
mov
shr
sbb
fbstp
jecxz
imul
call
xchg
jnp
cs
push
les
mov
cmp
push
sub
mov
pop
out
cmps
pop
fdivr
retf
out
push
mov
or
jge
adc
mov
and
mov
cmp
xchg
int3
cmp
(bad)
xchg
les
xor
in
jg
movs
inc
fadd
in
ficomp
xchg
pop
mov
scas
adc
jbe
repz
pop
dec
mov
sti
cdq
(bad)
lock
int3
(bad)
retf
pop
pushf
scas
call
ret
push
popf
pop
(bad)
stos
add
bound
adc
scas
mov
adc
jmp
mov
push
(bad)
xchg
test
add
mov
mov
pop
aam
lods
mov
movs
cmps
outs
mov
xchg
not
add
adc
in
mov
sbb
fistp
xor
clc
mov
cmp
into
adc
cmp
arpl
push
xchg
push
adc
push
in
push
adc
in
xor
and
sub
mov
enter
adc
mov
ror
pusha
movs
in
jmp
mov
rcl
jns
jle
mov
test
int3
inc
xor
adc
mov
push
inc
fsubr
push
repz
or
dec
push
ss
mov
jbe
leave
stc
mov
leave
mov
xchg
dec
adc
pop
test
xchg
add
test
mov
dec
adc
push
pushf
lock
jo
enter
retf
paddq
loopne
xchg
push
sahf
inc
lea
inc
cmp
mov
jo
cwde
dec
sbb
fcomp
mov
dec
mov
(bad)
push
fisubr
dec
pop
and
push
adc
nop
rcr
sub
sbb
mov
dec
dec
mov
jmp
pop
mov
lods
es
xor
bound
push
cdq
iret
call
sub
pushf
enter
pop
inc
sbb
lds
lds
jnp
mov
cmp
fmul
cmp
(bad)
fld
xchg
sbb
cmp
and
xchg
test
stc
test
mov
fdiv
and
dec
sbb
mov
nop
push
cmc
xchg
call
jnp
or
pop
test
jp
pop
inc
int
retf
cmp
ins
or
adc
mov
jne
dec
imul
lock
inc
ins
xor
adc
or
jns
repnz
dec
in
not
xor
shl
pusha
js
popf
push
xchg
cmp
(bad)
(bad)
aas
dec
pushf
xchg
and
test
adc
sbb
mov
in
sti
repz
mov
or
push
in
cmp
jnp
sahf
mov
inc
sub
sub
push
push
int
xchg
xchg
pop
mov
adc
jae
push
or
mov
mov
or
(bad)
fisub
push
adc
push
cmp
fcom
cmp
mov
push
or
fld
lahf
adc
lea
fisubr
mov
jns
les
sbb
ja
mov
cmp
xchg
pop
sar
xor
fsubr
mov
inc
mov
or
cmc
dec
xchg
out
mov
mov
or
repz
pop
and
pop
(bad)
mov
fwait
inc
fisubr
test
iret
cmp
or
pop
mov
push
out
test
in
popf
pop
mov
and
inc
pop
add
sahf
push
jo
mov
pop
or
fcmovne
jmp
adc
mov
inc
push
enter
adc
fmul
dec
movs
mov
sbb
cmp
pop
push
sbb
mov
jne
pusha
sub
js
movs
daa
lds
mov
mov
push
and
xchg
lea
pop
mov
outs
lods
xor
fucomp
and
push
(bad)
and
xor
mov
and
or
mov
xor
fiadd
add
or
sar
dec
imul
int
dec
push
test
push
out
dec
or
scas
sahf
jns
xchg
or
arpl
pusha
xor
dec
out
mov
sub
push
int3
add
movs
xor
retf
jle
icebp
sbb
jnp
adc
sbb
leave
cwde
or
mov
div
jb
push
inc
sbb
jb
xchg
in
shr
add
mov
call
rol
popa
jmp
into
jmp
cmp
mov
loope
mov
xor
fld
jp
mov
std
add
enter
fs
adc
repnz
mov
rcl
out
add
call
shl
je
(bad)
outs
ins
sbb
inc
add
xchg
dec
pop
shr
(bad)
jnp
iret
xor
inc
sub
pop
sub
mov
inc
pmuludq
adc
jmp
dec
jae
jp
es
push
dec
or
cld
jle
(bad)
pop
dec
dec
mov
(bad)
in
inc
or
push
dec
inc
cmp
xlat
xor
lods
fcmovb
(bad)
retf
or
ins
xchg
pop
cmps
sbb
ins
inc
test
jl
ins
test
icebp
test
adc
xchg
outs
inc
ins
jae
rol
sar
mov
xlat
xchg
jecxz
loope
cmp
outs
sbb
add
jb
imul
pop
cmp
pop
sbb
dec
xchg
or
lods
mov
mov
scas
jmp
or
jl
pusha
xor
inc
movs
outs
pusha
and
cmp
push
pop
sbb
mov
adc
movs
into
xchg
mov
inc
mov
or
push
sub
scas
sbb
leave
icebp
aaa
adc
mov
mov
pxor
mov
xor
inc
and
sar
retf
push
mov
inc
outs
mov
mov
mov
and
lea
jno
fsubr
and
and
jp
jp
stc
fadd
movs
jb
shl
repz
jmp
cmps
inc
mov
dec
mov
loop
mov
mov
adc
jbe
jmp
lods
xchg
xchg
(bad)
xchg
push
sub
js
xor
xlat
rcl
mov
daa
xchg
jno
outs
cmp
fstp
mov
or
mov
mov
popf
adc
int3
dec
fdivr
fisttp
or
lods
cmp
or
ss
mov
cwde
ja
sub
and
mov
fimul
adc
retf
popf
(bad)
jmp
call
out
jg
fdivr
mov
out
fisubr
pop
test
mov
inc
fwait
test
push
dec
popf
jno
sub
dec
(bad)
mov
rol
jge
int
int3
xchg
shl
ret
dec
xor
shl
(bad)
arpl
add
and
fcomp
daa
(bad)
clc
in
mov
and
add
dec
cmp
adc
adc
push
rol
xchg
aaa
or
gs
xor
or
jl
sbb
mov
das
outs
mov
mov
aam
pop
repnz
xchg
js
pusha
add
icebp
jmp
jge
inc
ret
push
mov
pop
mov
in
jle
jns
fst
rcr
dec
test
es
dec
dec
xor
mov
sub
mov
sbb
ins
xchg
pop
cmp
sbb
sub
sar
push
loopne
adc
hlt
inc
mov
pmulhuw
jle
pop
mov
jg
cmp
in
or
movs
nop
cdq
aam
add
rcr
mov
pop
rcl
sti
sub
adc
xchg
addr16
mov
inc
xor
fst
shl
mov
fst
mov
jo
jmp
jmp
pusha
daa
mov
scas
fucomi
jle
in
dec
outs
shl
movs
adc
mov
pushf
cmp
and
idiv
call
fstp
ins
int
lea
rcl
dec
add
out
mov
test
xchg
add
cld
leave
or
test
rol
pop
clc
fmul
fsubr
push
rol
push
add
data16
pop
(bad)
movs
rcl
movs
xchg
adc
mov
sub
jge
retf
(bad)
jns
div
or
das
es
pop
cmp
jge
sub
cdq
xchg
cld
jnp
cwde
ins
jle
dec
jns
xor
mov
sbb
dec
ins
dec
imul
pop
retf
imul
pop
(bad)
xor
mov
pop
mov
jmp
mov
je
push
ins
sbb
(bad)
sbb
clc
pop
int
stos
aam
test
mov
loopne
mov
xchg
jne
scas
movs
or
inc
mov
jne
inc
mov
lods
sahf
xchg
push
sub
sti
mov
jno
sub
rcr
lods
dec
neg
in
cmp
vshufps
xchg
add
or
adc
scas
pop
dec
adc
push
adc
popf
jne
xchg
dec
push
jle
dec
dec
out
xchg
sub
sbb
fsubr
scas
fnsave
je
ret
std
dec
mov
cmp
leave
imul
or
out
loope
inc
xor
pop
test
sbb
lods
mov
rol
xlat
pop
hlt
gs
push
shr
xor
mov
mov
aaa
sub
xchg
add
daa
xchg
push
cmc
sbb
aad
std
or
fld
adc
sar
cmp
pop
fiadd
repnz
je
inc
stos
ins
or
retf
int3
dec
mov
cwde
aas
imul
pusha
and
in
add
div
int
mov
adc
xlat
or
outs
push
xchg
int3
stos
cmp
lea
adc
cmp
loop
push
push
jp
fldcw
mov
dec
sub
movs
fnstcw
xchg
add
stc
and
add
jle
xor
call
outs
cs
sbb
sub
xlat
in
cli
mov
and
cwde
inc
enter
fwait
jmp
or
pop
adc
push
popf
add
mov
hlt
mov
add
xchg
cli
ror
div
mov
shl
push
cmps
jmp
sahf
mov
or
push
push
daa
dec
out
and
and
les
and
leave
add
aaa
adc
push
fldenv
(bad)
push
(bad)
push
add
mov
jo
rcr
test
aaa
enter
test
inc
cli
fst
repz
fidivr
pusha
fsub
cld
jecxz
sti
jge
push
mov
xor
inc
adc
inc
add
add
cwde
fistp
dec
push
lea
mov
xor
mov
fnstenv
mov
cmp
pop
dec
daa
(bad)
ret
test
jecxz
popf
jbe
ds
add
mov
mov
mov
add
mov
in
(bad)
shr
or
dec
je
mov
call
jg
clc
xor
mov
xlat
dec
cmps
fmul
mov
push
sub
cmp
outs
(bad)
xchg
dec
(bad)
(bad)
(bad)
mov
mov
(bad)
shl
jle
pop
(bad)
push
jb
lahf
fs
test
imul
jecxz
aaa
and
dec
retf
in
cmps
cmp
mov
fist
sub
pop
rcl
xchg
or
sbb
inc
repz
push
cmp
je
fild
test
lea
shr
sbb
pop
(bad)
dec
aad
dec
addr16
(bad)
or
(bad)
fld
test
xor
cmp
cwde
mov
js
mov
pop
sub
jns
pop
xor
mov
adc
scas
or
arpl
cmps
xchg
inc
out
icebp
jno
inc
jno
or
add
loop
jecxz
or
push
gs
push
and
xchg
xlat
push
out
retf
push
mov
mov
sar
int3
lods
cmp
pop
inc
inc
mov
sub
inc
add
or
jecxz
ret
outs
(bad)
std
out
(bad)
cmp
jle
cld
cli
pop
xchg
ins
jecxz
fs
sub
sbb
call
ret
ret
cs
jecxz
mov
sub
retf
call
ins
lock
daa
inc
je
lock
mov
mov
adc
cmp
and
std
sbb
fstp
mov
mov
and
(bad)
mov
fucomip
retf
addr16
cmp
lds
fdiv
cld
daa
jnp
or
lods
dec
out
cmp
repz
scas
outs
inc
mov
sub
in
retf
sbb
out
shl
cld
ss
pop
or
pop
je
cdq
test
aad
xor
jae
rcr
repz
(bad)
arpl
or
loope
stos
adc
enter
xchg
aad
dec
pushf
outs
test
fild
(bad)
ja
and
test
cmc
add
repz
mov
lods
movs
sub
lods
sbb
mov
mov
adc
stc
inc
jne
pop
addr16
idiv
mov
adc
repnz
pop
lods
int
mov
add
inc
mov
pop
inc
inc
pop
sub
dec
mov
xchg
lds
and
jno
imul
aad
xor
dec
pop
push
jg
adc
sbb
mov
add
sub
test
je
xchg
mov
dec
jo
add
movs
sbb
and
ficomp
sbb
loop
inc
movs
shr
cmp
cmp
cmp
xor
inc
and
cmp
mov
loop
push
pop
xchg
cmps
dec
call
mov
rcr
scas
das
out
xor
pop
mov
inc
neg
mov
sti
aam
cmp
mov
sbb
ror
xor
sbb
cmp
loope
(bad)
fiadd
arpl
or
arpl
sbb
or
adc
nop
jne
mov
mov
xor
push
es
dec
sbb
sar
or
xor
push
fisttp
inc
fisub
cmp
frstor
sub
cmp
(bad)
sub
or
imul
mov
mov
or
adc
sbb
add
cmp
rcr
lock
push
push
stc
pop
pop
(bad)
xor
push
add
stos
jnp
test
pop
adc
cs
sbb
cli
add
movs
inc
dec
stos
or
shr
movs
in
cmp
out
xchg
xchg
fild
inc
jno
inc
xchg
sbb
adc
push
push
lea
cmp
mov
jae
sub
int
and
xchg
mov
imul
mov
push
les
add
push
mov
jne
fnsave
add
leave
jae
mov
cvttps2pi
nop
jne
sub
ficomp
in
test
and
fdiv
add
jnp
mov
(bad)
ror
cmc
outs
ror
mov
mov
jnp
(bad)
cmp
and
imul
out
es
mov
sbb
push
adc
ss
in
mov
cmp
sahf
add
cmp
fcomp
sub
pop
push
push
xchg
push
ss
dec
pop
push
out
ja
retf
fadd
xlat
cmp
xchg
adc
and
lods
into
imul
xchg
call
fdivr
setns
xor
push
inc
(bad)
mov
dec
cmps
xchg
push
cdq
pop
into
js
enter
cwde
xchg
push
fidivr
imul
cmps
rcr
and
mov
call
and
push
inc
add
arpl
pusha
mov
cmc
jns
imul
mov
jnp
jp
sbb
(bad)
fild
ficomp
lea
retf
jbe
add
pusha
cmp
repnz
loopne
inc
test
out
call
dec
cdq
dec
dec
nop
push
aaa
inc
ins
ds
inc
cwde
cwde
out
movs
outs
mov
leave
aaa
adc
jle
das
inc
inc
iret
dec
pop
pop
jecxz
inc
shl
arpl
sub
push
loop
movs
popf
pushf
test
xor
lods
pop
aam
iret
test
pop
cmp
xor
call
pop
mov
addr16
fs
aaa
aas
dec
je
lahf
jl
adc
sbb
dec
popa
inc
dec
sub
xor
jmp
jnp
dec
cmp
leave
outs
test
add
jne
(bad)
push
aas
sar
lods
out
push
stc
mov
push
and
lods
adc
retf
pop
sti
and
and
xchg
pushf
mov
sbb
pusha
pop
sub
mov
mov
inc
sbb
adc
mov
mov
retf
jmp
mov
dec
lods
xor
and
inc
mov
pop
jae
xlat
and
xchg
cmp
repnz
outs
iret
in
arpl
cld
inc
ret
fsubr
sbb
rol
adc
xchg
pop
and
jg
jnp
bound
scas
push
jno
adc
and
lods
in
in
ds
imul
stos
loop
ret
xchg
lock
jl
jne
push
sbb
push
mov
sub
loope
bound
push
fisttp
shr
jne
xchg
or
addr16
mov
jbe
stos
je
les
xchg
pop
daa
inc
push
mov
fcmovnu
sbb
sbb
mov
xchg
dec
aaa
sub
add
test
xor
sub
adc
jnp
pop
push
and
add
fstp
in
cmp
cmp
test
xchg
pop
pop
std
add
fimul
jle
scas
mov
cmp
mov
pop
popf
mov
fcomp
das
and
mov
addr16
popa
cmp
push
lods
mov
jp
xlat
loope
mov
lock
mov
push
shr
lds
retf
jle
jl
mov
shr
fs
sbb
xchg
dec
push
pusha
add
xor
xor
cmp
mov
nop
cli
mov
ja
jne
in
sbb
xor
adc
adc
mov
cmp
js
add
add
les
out
mov
fnstsw
push
xchg
ret
cdq
(bad)
sub
xlat
or
sbb
nop
pop
mov
arpl
lock
test
jo
and
int3
or
push
inc
mov
je
push
sbb
pop
jo
add
jno
loop
xor
push
mov
cmp
in
ins
push
test
pushf
adc
add
neg
sbb
inc
cmp
push
xor
shl
dec
fsub
mov
dec
mov
repz
cmp
cdq
lods
cmc
(bad)
jecxz
add
mov
fcmovnu
pop
and
leave
bound
mov
mov
sbb
xor
movs
cmps
aad
inc
jbe
popf
mov
(bad)
dec
jmp
movs
repnz
in
stos
out
out
push
out
mov
push
je
push
call
loopne
addr16
js
iret
pop
jl
out
cld
cmps
out
gs
arpl
push
retf
jb
mov
lea
sub
cli
push
dec
add
sti
pop
add
jmp
daa
jne
inc
add
enter
std
mov
jnp
(bad)
test
xchg
cwde
xchg
lahf
push
push
or
outs
ja
push
adc
test
stos
pop
pushf
fsub
sar
in
inc
cmp
cmp
mov
mov
add
je
ret
fisttp
inc
sbb
clc
cmp
es
femms
xchg
push
repz
inc
lods
and
cmp
call
test
jmp
outs
aaa
aam
push
xlat
mov
jg
stos
mov
jnp
mov
dec
nop
cdq
frstor
ret
add
fld
int3
lods
sahf
or
pop
leave
cmp
shl
(bad)
push
sub
xchg
out
es
iret
mov
xor
stc
cld
mov
fwait
das
cwde
cmp
pop
dec
pop
repz
shl
aam
fld
adc
aas
xchg
pop
fdivr
pop
aaa
(bad)
mov
jle
ret
or
jmp
popa
out
jl
adc
xor
mov
mov
xchg
ficomp
inc
push
pop
imul
rcr
mov
(bad)
mov
xor
mov
and
(bad)
(bad)
or
lahf
pop
or
sar
add
mov
out
add
out
adc
or
iret
and
sbb
js
xchg
jo
test
into
and
mov
push
call
adc
imul
jbe
lahf
mov
xor
jp
xlat
in
xor
stos
out
(bad)
xlat
jo
inc
pop
sub
loop
mov
cmp
sub
sbb
xor
jo
add
mov
push
jb
cld
cmp
inc
dec
adc
mov
inc
imul
scas
ficomp
fwait
hlt
or
push
xor
lods
fs
dec
jns
jb
mul
in
mov
xchg
cdq
mov
rcl
sar
lock
pop
mov
mov
dec
pushf
ins
imul
mov
nop
je
inc
lods
les
pop
mov
daa
int3
xor
ins
lahf
in
xor
mov
lea
out
cmp
fistp
imul
add
mov
pushf
jl
mov
scas
jl
mov
sub
sub
loopne
xchg
gs
cmps
rcr
push
clc
lds
xchg
mov
push
lea
or
adc
mov
imul
stc
lock
nop
cld
fcom
or
loope
adc
aaa
stos
cs
iret
jle
in
retf
(bad)
add
into
imul
and
cli
psrad
fdiv
fstp
les
adc
inc
sub
or
mov
movs
jno
mov
call
data16
or
hlt
adc
fstp
icebp
dec
push
cmp
jle
fdiv
xchg
add
xchg
fcomp
cdq
aaa
mov
mov
lock
sbb
inc
nop
loopne
fs
fistp
std
sbb
or
int3
or
test
iret
(bad)
jae
mov
sbb
push
add
pop
jl
and
fisub
dec
fisttp
mov
fistp
xchg
push
in
and
call
sbb
pop
inc
lods
mov
das
cmp
cmp
mov
cli
dec
xor
sbb
sbb
addr16
push
rol
out
push
mov
imul
sub
test
dec
mov
scas
into
xor
and
xor
jnp
add
xlat
sahf
fnstenv
lahf
sti
mov
imul
push
adc
sar
cs
mov
inc
add
pop
push
mov
or
mov
adc
stos
in
fimul
push
push
aaa
inc
jne
stos
retf
jns
cwde
icebp
in
out
scas
outs
aam
fmul
pop
std
aam
sbb
popf
push
lahf
pop
outs
xchg
repnz
cmp
xchg
mov
in
js
sub
mov
sbb
jp
(bad)
mov
aad
int3
xor
lea
mov
ss
ins
gs
out
xchg
xlat
xor
xchg
daa
and
inc
push
shr
mov
(bad)
lock
dec
or
mov
mov
xchg
(bad)
cli
cld
arpl
cmc
pusha
sbb
leave
cs
in
out
lods
inc
inc
add
ds
stos
pop
repnz
add
mov
mov
leave
and
pop
cmp
xchg
sti
adc
rcl
cli
add
ds
fwait
sbb
(bad)
cs
movs
xchg
arpl
mov
jecxz
cmp
fld
pushf
lods
fscale
dec
enter
(bad)
jno
addr16
in
in
jl
jp
jl
icebp
push
movs
inc
inc
popf
adc
rcl
cli
scas
int3
imul
in
xchg
sbb
dec
ret
or
jecxz
jb
cmps
rcr
adc
nop
pop
xchg
sbb
dec
pop
pop
xlat
mov
sbb
sahf
(bad)
out
jns
pop
sub
scas
jb
inc
imul
call
sub
out
dec
cmps
iret
icebp
loop
xchg
popf
and
loopne
dec
out
fcomp
dec
pop
scas
pop
mov
mov
adc
mov
cmp
dec
inc
and
adc
dec
pop
out
inc
pop
outs
shl
mov
shl
pusha
out
sub
and
push
jns
cmp
add
dec
cmc
fst
jge
inc
call
jge
popf
outs
lock
mov
mov
cmp
pop
add
lds
mov
aam
ss
hlt
lds
data16
jb
cs
fwait
cmp
push
adc
pushf
rcr
ss
xchg
dec
retf
or
mov
stos
test
jp
xor
into
(bad)
test
das
mov
mov
cmp
shr
sub
jle
add
xchg
dec
cmp
mul
mov
xor
pop
mov
(bad)
shr
mov
imul
mov
xchg
and
mov
idiv
mov
aas
jmp
repz
and
sbb
cmps
push
inc
js
cmp
(bad)
sar
mov
arpl
sbb
pop
dec
dec
push
rcr
inc
mov
retf
or
add
das
sbb
cmps
(bad)
leave
sbb
mov
sbb
es
mov
push
cwde
gs
sahf
rcr
mov
lea
fwait
cmp
repnz
mov
jg
xchg
mov
out
out
mov
inc
xlat
xor
jecxz
or
xchg
mov
adc
fdiv
push
mov
and
movs
lock
mov
sub
push
push
les
repz
adc
xor
out
adc
mov
or
add
jno
sub
out
push
cmc
movs
inc
push
arpl
add
mov
mov
xchg
push
jmp
mov
movs
lods
mov
sbb
xor
clc
ins
jno
stos
mov
adc
inc
(bad)
jbe
gs
pop
ret
dec
mov
jl
std
or
sahf
fisub
jecxz
xor
or
outs
pop
mov
mov
in
cdq
push
jae
add
inc
push
push
push
in
xchg
or
loope
shr
jns
xchg
into
lea
mov
add
inc
loope
repz
add
xor
cmp
xor
xor
lods
push
push
ret
ret
add
push
push
fiadd
neg
clc
call
sbb
call
lahf
pop
jp
sub
inc
lock
retf
mov
inc
dec
repz
ss
lods
in
xchg
das
leave
xchg
xchg
bound
lock
leave
push
add
ja
ds
pop
ins
add
adc
mov
cli
ret
cmp
and
add
call
dec
xchg
out
outs
pop
and
fisubr
xchg
iret
xchg
pop
pushf
jle
test
mov
or
sub
fwait
sar
jge
iret
cmp
imul
lods
push
xor
cmp
cld
popf
xchg
das
sysenter
lods
dec
(bad)
aaa
pop
and
pop
xchg
push
lock
mov
push
retf
add
xor
xchg
dec
mov
xor
adc
aas
addr16
adc
adc
dec
dec
add
xor
(bad)
inc
jbe
repz
mov
loop
push
in
sub
dec
xlat
xor
adc
out
lds
xchg
adc
popf
aam
push
add
cmp
or
xor
mov
add
in
xchg
outs
xchg
ret
hlt
cmp
je
and
cmps
jb
ins
pushf
loope
ins
pop
ja
cmp
mov
jg
cmp
sub
out
mov
in
cs
or
js
xchg
sbb
push
cmc
fs
inc
stos
cmps
or
fnsave
fisttp
mov
or
xchg
sub
adc
pop
jno
in
ja
ret
je
imul
xor
sbb
hlt
in
mov
sub
sub
push
out
dec
imul
cmc
bound
push
xchg
arpl
pop
jmp
inc
or
lea
sub
lock
and
repnz
nop
mov
das
leave
enter
fst
jo
stos
sub
out
cmp
mov
mov
add
jnp
pop
mov
hlt
mov
add
xor
js
shl
add
mov
es
in
lahf
jmp
cmps
outs
mov
icebp
mov
inc
pop
push
mov
xor
inc
add
daa
cmc
sar
inc
cmp
lea
mov
sbb
xchg
aad
in
ins
xchg
mov
bswap
in
out
sbb
xlat
jmp
or
dec
push
sbb
and
jnp
aam
xchg
add
or
sub
je
inc
ss
pop
arpl
popa
retf
ins
repnz
psubd
mov
outs
retf
add
imul
out
loope
adc
pop
add
mov
(bad)
dec
and
xchg
cdq
push
mov
out
push
fstp
xor
outs
add
loop
(bad)
push
loope
mov
ins
push
mov
add
popf
jl
outs
(bad)
dec
mov
retf
popa
inc
scas
outs
pop
lods
xor
or
cmc
mov
mov
add
cmp
imul
jo
inc
pop
push
retf
or
mov
xchg
daa
xchg
sbb
int3
lds
xchg
push
and
clc
jo
adc
xor
test
xchg
rol
clc
imul
lods
call
xchg
mov
es
jns
ret
mov
jbe
xchg
ret
je
adc
xor
call
adc
xor
mov
jae
stos
mov
fiadd
(bad)
enter
jge
shl
sbb
pop
jbe
jns
je
pushf
sbb
xchg
shr
pushf
sbb
out
fs
stos
dec
fnsave
mov
sub
xlat
inc
xor
icebp
jg
aas
inc
outs
sbb
jl
mov
pop
out
and
dec
fcom
jns
inc
and
mov
out
test
ror
into
lods
adc
aaa
les
xchg
ror
(bad)
push
pop
pop
mov
outs
inc
loope
int
retf
sti
cmp
jle
jmp
dec
dec
stos
(bad)
and
cmp
call
lods
jmp
sub
cmp
lods
mov
retf
sar
js
pop
in
pop
add
mov
not
and
xchg
(bad)
in
les
mov
and
stos
jae
add
push
mov
sbb
mov
in
pop
shr
stos
sbb
(bad)
pop
mov
jo
jbe
les
and
enter
mov
push
pop
sbb
xor
pusha
int
shl
leave
cmp
icebp
ins
push
scas
out
mov
and
(bad)
sbb
stos
fnstsw
sub
out
stc
int
loope
push
push
xor
das
and
pushf
inc
gs
adc
cmp
test
bound
test
fisttp
mov
mov
shr
and
xchg
enter
adc
scas
neg
mov
xchg
clc
in
or
test
into
adc
lock
mov
or
jle
pop
cmp
outs
xor
mov
dec
lea
shl
(bad)
aas
inc
jbe
cli
les
mov
xchg
dec
outs
mov
je
xchg
jb
jmp
or
push
sahf
xchg
out
inc
outs
out
xor
int
pop
push
rol
aas
adc
jo
les
sbb
mov
mov
jno
retf
mov
es
mov
aaa
cmp
jo
pop
js
in
lds
jnp
adc
ret
xor
pop
or
cmp
pop
push
test
aas
sbb
rcl
push
jle
sar
mov
cdq
dec
mov
jno
mov
mov
hlt
lock
addr16
add
cmp
sub
cmc
sub
daa
sub
push
xor
fxch
loopne
(bad)
out
mov
inc
and
inc
jnp
jg
das
add
xchg
sub
and
loop
stos
adc
or
or
int
inc
popa
dec
mov
or
in
jmp
push
leave
lds
sbb
cmp
ror
stc
lods
daa
or
test
rcr
push
dec
ror
inc
add
stos
inc
inc
cli
cmps
aam
in
inc
mov
mov
iret
fld
test
inc
or
push
inc
xchg
test
mov
ss
cwde
mul
fnstcw
lahf
enter
adc
dec
mov
ret
fld
or
cmps
cmp
push
rcr
je
jl
cmp
or
call
mov
sbb
in
sub
addr16
cmp
add
js
adc
aam
nop
clc
jge
or
(bad)
mov
and
ins
int3
call
sbb
outs
sbb
sub
lea
mov
adc
mov
jmp
and
popf
mov
jl
stos
cmps
pop
inc
mov
xchg
in
inc
rcl
daa
cmps
(bad)
test
inc
ins
jnp
mov
inc
lea
and
ins
jmp
mov
mov
pop
mov
xchg
cmp
mov
push
shl
leave
inc
(bad)
mov
lods
call
cld
sub
and
or
cmp
cmc
rep
inc
mov
es
dec
scas
mov
mov
add
dec
into
mov
out
mov
pop
shl
icebp
ret
sbb
mov
or
in
xor
push
sub
out
mov
jmp
mov
shr
clc
outs
ret
rol
sub
int3
fstp
je
push
cs
xor
sub
adc
cmp
mov
mov
mov
aad
lea
test
retf
dec
jo
das
fiadd
xchg
mov
test
in
mov
mov
or
test
mov
ins
jne
loope
arpl
xor
xchg
mov
loop
call
lods
or
es
jbe
inc
xchg
lods
popf
inc
mov
cmps
fucomip
mov
dec
fucom
aas
outs
or
cwde
(bad)
jbe
mov
jecxz
cmp
loopne
mov
pusha
mov
push
(bad)
mov
dec
sub
int
mov
mov
std
jns
aam
outs
and
cmc
sbb
push
xchg
add
mov
dec
not
jl
mov
or
ins
jl
inc
ret
imul
retf
lods
adc
mov
stos
mov
rcl
dec
cld
adc
imul
retf
call
push
mov
adc
stos
xor
mov
fisub
jnp
aam
sbb
in
add
clc
hlt
sub
mov
cli
and
pop
inc
add
cmc
or
and
and
adc
pusha
sub
lds
push
cmp
cmp
ja
mov
sar
sbb
pop
push
movs
xor
dec
cmp
mov
sub
add
test
push
into
inc
mov
call
or
mov
xchg
or
or
dec
and
xchg
add
mov
xchg
add
hlt
es
dec
add
mov
lock
dec
mov
and
and
sbb
cmps
les
shl
jmp
and
mov
xor
dec
mov
scas
stos
cmps
inc
loop
sti
sbb
stos
sub
test
stos
add
iret
push
sub
adc
ret
mov
and
fucomi
icebp
cmps
cmps
(bad)
cwde
jo
add
imul
add
mov
mov
jmp
pop
or
mov
mov
clc
push
push
ins
push
add
rcr
mov
stc
mov
sar
sbb
std
pop
cmp
in
cwde
inc
mov
imul
imul
(bad)
mov
push
(bad)
sbb
rcr
mov
je
ds
xchg
sub
mov
jae
adc
xor
out
mov
jmp
hlt
sub
and
jl
cmp
xor
scas
aam
dec
loop
ja
jns
test
sti
popa
lahf
lds
add
xchg
popa
inc
pop
mov
in
fiadd
xor
push
fimul
mov
ins
xlat
xor
pop
cmp
push
pop
test
enter
cld
and
jl
mov
sahf
push
jo
xchg
test
jmp
jae
cmps
push
inc
jb
test
pop
pop
mov
js
push
loopne
iret
int
mov
repnz
fs
dec
loope
js
or
mov
cmp
out
xor
mov
jbe
jg
push
fnsave
mov
inc
dec
ret
xor
mov
loope
xchg
push
push
sub
in
cdq
dec
pusha
pop
lea
jbe
add
test
push
mov
inc
mov
das
sbb
mov
sub
ds
sub
mov
push
mov
pop
movs
adc
stos
push
or
ror
jecxz
cmovl
xor
mov
dec
and
ss
aas
add
or
xlat
(bad)
aas
sub
repnz
jbe
fcmovnb
test
popa
jmp
xchg
enter
and
(bad)
mov
cli
xchg
scas
in
punpckldq
ss
pop
aam
adc
ror
sahf
mov
out
mov
mov
add
or
test
push
mov
retf
cmp
xor
mov
popa
loop
movs
mov
fs
int3
hlt
mov
prefetcht1
xor
stc
aam
retf
add
ret
and
push
pop
cmc
add
xchg
fstp
in
adc
into
push
imul
rol
jae
and
(bad)
dec
int3
adc
lock
clc
pop
scas
jnp
addr16
adc
call
mov
nop
push
jp
retf
pop
int3
and
and
pop
xchg
stos
mov
xchg
cmp
and
mov
pop
jmp
lahf
lea
fcmovu
pop
mov
mov
arpl
pusha
pusha
pop
sahf
loope
loope
aaa
enter
mov
and
bound
popf
fnstsw
push
adc
push
cmp
outs
cmp
imul
mov
mov
mov
clc
or
mov
icebp
sahf
push
std
in
fstp
jge
sbb
pop
or
xor
fs
pop
xchg
jbe
add
pop
mov
aam
bound
mov
cmp
xor
xor
std
retf
inc
mov
mov
fsub
mov
fcmovu
xchg
dec
add
es
dec
jne
jl
loopne
icebp
lods
out
out
inc
jmp
jmp
push
or
daa
shl
in
mov
retf
mov
xlat
xor
ins
mov
cmp
jbe
lock
rol
fwait
in
movs
and
call
(bad)
lock
xor
cmps
repz
mov
mov
cwde
jmp
retf
sbb
jnp
fst
dec
je
cs
add
pop
jp
mov
lock
sbb
push
xchg
aas
scas
push
jo
fs
and
xchg
adc
call
jno
jecxz
scas
mov
test
mov
mov
shr
mov
rol
adc
cmp
xor
cmp
cmp
cmovbe
ja
or
lods
js
sbb
jbe
push
adc
pop
(bad)
pop
sbb
add
jns
icebp
or
mov
sbb
mov
jnp
xchg
das
or
loop
cmps
inc
jmp
out
mov
into
inc
lock
imul
es
adc
jbe
ja
push
sbb
mov
(bad)
shl
push
and
or
dec
leave
jmp
jne
push
xchg
dec
fcmovnu
mov
js
xchg
into
in
loop
loope
or
movs
push
into
pop
mov
sahf
push
inc
adc
test
add
mov
in
push
lea
xchg
mov
into
lea
pop
(bad)
mov
mov
stos
pop
call
cwde
cmp
loopne
inc
aas
pop
sbb
sbb
and
icebp
adc
hlt
xchg
scas
and
xor
cmc
and
pop
ins
adc
in
jp
into
inc
mov
xor
int
imul
pop
nop
std
jle
push
outs
mov
iret
repz
or
cmps
fxch
retf
movs
xchg
pop
clc
iret
inc
fs
sub
mov
leave
fidiv
push
mov
leave
jmp
(bad)
in
cmp
cs
es
cmps
lods
and
in
ret
iret
mov
fisub
push
aam
cmp
sar
mov
ss
cmps
std
adc
lock
outs
mov
pushf
loope
fwait
mov
imul
lods
ffreep
aam
or
xor
ret
loope
arpl
push
dec
iret
in
jle
sbb
into
fsub
adc
inc
mov
(bad)
xor
lods
lods
mov
dec
xor
xchg
xchg
xor
inc
jmp
mov
rol
test
pusha
out
mov
inc
xchg
push
mov
sub
mov
aad
aad
and
lea
idiv
mov
add
into
shl
sahf
out
nop
fstp
rcl
adc
fnstcw
dec
mov
sub
retf
adc
fst
(bad)
xor
repz
les
fdivrp
iret
cmc
jmp
and
stc
inc
adc
jl
mov
out
and
icebp
out
cmps
inc
daa
and
and
and
jns
(bad)
pop
fs
lods
cmps
pop
scas
xchg
jp
sbb
fcomi
sub
out
call
sub
pop
pop
pusha
xchg
adc
cmp
xchg
mov
push
data16
mov
ror
out
add
adc
adc
mov
loop
lods
dec
inc
xchg
(bad)
(bad)
out
jne
pop
dec
pop
arpl
je
pop
jmp
cmp
movs
in
or
jno
sbb
jno
int3
push
xor
jo
iret
mov
push
xchg
or
xlat
test
ja
fcmovnb
mov
mov
mov
outs
pop
sahf
or
mov
xor
push
out
shl
xchg
(bad)
popf
sbb
push
es
mov
mov
popa
cmps
xchg
add
pusha
inc
mov
mov
adc
dec
dec
add
push
cmp
hlt
rcr
lea
je
push
jl
cmp
es
sbb
mov
out
or
or
xchg
cmps
mov
inc
imul
mov
mov
(bad)
sbb
xor
mov
push
push
lods
retf
arpl
popa
xchg
stos
popf
jp
data16
mov
cmp
ins
xor
icebp
lds
js
lock
mov
push
pushf
mov
push
iret
lods
push
(bad)
in
push
das
(bad)
fnstenv
sub
lods
xor
inc
mov
xchg
fisttp
mov
cmp
popa
stos
ror
dec
scas
ja
iret
xor
dec
(bad)
not
ret
push
(bad)
mov
loopne
mulss
aaa
xchg
push
outs
cwde
cld
sub
cmp
xor
mov
mov
cmp
add
shl
aaa
and
xchg
repz
scas
lea
cmp
shl
xchg
push
adc
adc
les
lods
int
sbb
dec
sbb
cmps
push
js
mov
imul
xor
rcl
int3
or
lock
js
jmp
and
fstp
add
push
and
rcr
shr
nop
pop
adc
test
mov
cwde
movs
test
cwde
adc
fild
loop
and
add
mov
or
xchg
gs
scas
dec
clc
addr16
jp
bound
cmp
xchg
xor
or
fistp
int3
ds
sti
dec
pop
jne
outs
std
dec
jmp
cmps
add
or
or
mov
mov
scas
adc
in
sub
shl
add
(bad)
enter
(bad)
sub
outs
shl
stc
dec
adc
stos
je
popa
inc
fisub
aas
sti
mov
(bad)
not
outs
stos
dec
pop
push
(bad)
sbb
retf
jp
(bad)
and
arpl
xor
stos
mov
dec
mov
dec
mov
lea
shr
(bad)
popf
fisub
jbe
ja
out
xchg
test
lods
ret
jb
icebp
test
and
dec
in
push
(bad)
rcr
loope
pop
fs
aas
or
sub
(bad)
push
sbb
sub
rcl
mov
fisttp
clc
jl
mov
push
pop
jg
in
popa
or
sbb
cwde
push
add
scas
into
aaa
push
mov
xchg
push
mov
inc
adc
dec
lahf
cs
popa
fld
mov
rcr
js
std
dec
xor
call
or
sbb
ins
push
sub
add
jp
dec
mov
in
xchg
xchg
pop
mov
das
add
sub
mov
loop
daa
jp
daa
bound
inc
imul
inc
imul
jb
pushf
jmp
clc
in
cmp
js
add
inc
cmp
pop
and
jecxz
stc
dec
test
or
icebp
loop
iret
adc
jb
mov
and
push
jnp
push
cli
jg
retf
xchg
mov
sbb
sbb
ins
push
cli
pop
and
pop
test
pusha
lds
xor
rcl
jl
xor
pop
aas
stos
out
stos
add
push
inc
mov
imul
inc
jl
jle
push
mov
jl
rol
aas
hlt
outs
scas
sbb
push
(bad)
mov
fcom
pop
pop
and
mov
rcl
pop
mov
jae
xchg
mov
in
and
retf
xor
jle
xchg
loopne
sub
cwde
aaa
xchg
inc
xchg
das
out
and
xor
cli
or
jge
jns
gs
(bad)
push
and
shl
leave
lock
cmps
(bad)
mov
inc
mov
(bad)
outs
xor
(bad)
std
lea
int
pushf
sbb
sub
and
push
ins
pop
jg
mov
or
dec
pop
jno
clc
aaa
mov
out
push
mov
jnp
jo
xor
fxch
leavew
stos
add
jmp
stos
cmp
out
aad
sub
add
and
jmp
and
adc
sbb
sbb
inc
inc
leave
sbb
mov
fldcw
and
std
sub
mov
xchg
lods
pop
movs
js
cmp
mov
ds
sahf
adc
xor
or
scas
fcmovbe
jo
adc
lods
inc
jno
iret
pop
aaa
pop
jecxz
mov
popf
int
pop
aaa
fadd
cmps
sbb
dec
loope
lods
inc
mov
daa
xor
cmc
mov
in
or
rol
xor
add
cld
add
scas
mov
pusha
jb
mov
mov
(bad)
cs
add
push
out
int3
mov
push
or
cmps
xor
loope
enter
(bad)
out
mov
out
pop
iret
dec
jmp
jle
fbld
mov
in
je
imul
cdq
dec
fucomp
mov
movs
push
and
(bad)
(bad)
jecxz
add
xor
xchg
stos
leave
and
mov
pop
fldcw
mov
jb
mov
cmc
xlat
or
mov
sub
pop
nop
aas
push
inc
mov
mov
dec
pop
cs
sbb
jo
mov
add
out
or
mov
pop
mov
stc
sub
mov
jae
aaa
jge
into
call
mov
add
xor
mov
jb
cmp
pushf
xchg
dec
out
iret
in
lods
sub
(bad)
xchg
jne
je
jge
movs
adc
xchg
mov
aam
fsubp
add
ja
jmp
mov
adc
lds
test
xchg
pusha
jne
mov
adc
icebp
jbe
in
cmps
fwait
lock
fadd
(bad)
cmp
and
(bad)
jmp
hlt
sbb
data16
sbb
push
push
and
xchg
lods
xor
xlat
addr16
xor
aam
pop
aaa
cmp
daa
xchg
xlat
fild
(bad)
es
in
jo
inc
inc
push
cmps
pushf
cdq
outs
(bad)
iret
and
fdiv
in
or
pop
add
xchg
dec
std
add
add
pop
pushf
in
xor
or
jmp
dec
mov
adc
call
cmp
fistp
shl
sbb
(bad)
in
inc
xor
fld
movs
in
retf
in
cmps
retf
pop
fisttp
lahf
adc
add
pop
loope
mov
xchg
retf
les
dec
stc
shl
scas
jle
cmps
imul
dec
jnp
repnz
call
xchg
mov
adc
imul
pop
movs
test
leave
inc
jl
into
lahf
dec
test
fs
int3
xor
xchg
adc
pop
push
and
out
add
dec
and
cmp
ret
add
inc
mov
ins
adc
shl
jle
lds
call
mov
or
ret
jnp
(bad)
jg
inc
sub
cwde
push
out
mov
in
dec
cld
jmp
jmp
push
mov
retf
sbb
sbb
sub
jp
shl
sbb
mov
xchg
dec
rcr
mov
sub
arpl
fimul
cmps
rcr
xchg
repnz
pop
iret
cmp
outs
sub
iret
(bad)
xor
push
jle
pop
cwde
scas
repz
mov
push
inc
lock
add
into
enter
push
daa
call
pop
leave
repnz
lods
rcr
sbb
add
out
les
clc
loopne
sbb
push
adc
sahf
mov
fnstenv
loop
xchg
js
xor
imul
sti
adc
inc
inc
adc
push
aas
addr16
cld
out
(bad)
xchg
popa
xchg
cmp
aam
dec
jns
inc
(bad)
inc
test
lock
mov
bound
xlat
rcr
inc
in
movs
daa
mov
ins
jo
adc
dec
enter
mov
push
cmp
push
sahf
inc
mov
es
jo
ss
shr
cwde
sar
not
xor
inc
cmp
sub
pop
int
mov
sub
jmp
pop
push
dec
std
pop
inc
ja
jmp
lods
adc
nop
pop
jg
pop
inc
inc
imul
sub
das
xchg
push
repnz
pushf
in
jmp
mov
popa
cld
inc
stos
push
mov
sub
aas
rcr
jae
imul
les
lods
xchg
cmp
and
data16
fs
xchg
mov
pop
adc
inc
pop
or
pop
lods
outs
jb
aaa
cmp
out
aad
stos
dec
mov
adc
cwde
addr16
jg
pop
daa
xor
lahf
push
arpl
jne
dec
sub
data16
add
jb
push
and
in
outs
pop
cmc
fwait
sti
mov
inc
hlt
gs
or
cmp
jecxz
aas
cmps
pushf
adc
int
or
fnstsw
in
sbb
ss
push
jmp
inc
mov
mov
pop
mov
(bad)
sti
int3
aas
xor
call
mov
in
or
(bad)
cmc
shl
aam
push
add
mov
add
test
pop
jmp
imul
push
mov
and
or
outs
or
mov
sbb
jne
nop
mov
mov
push
fcom
call
inc
jo
fcom
(bad)
sahf
loope
mov
inc
cmp
pusha
addr16
push
ret
ret
dec
fsub
mov
fstp
fldenv
pusha
in
sub
es
aam
mov
add
in
stc
rcr
(bad)
mov
sti
xchg
pop
les
int
and
ins
jae
scas
outs
pushf
pop
das
jnp
mov
das
mov
pop
jg
dec
pop
cld
jle
outs
mov
movs
sti
rol
shl
jne
fidivr
dec
push
dec
fs
aam
pop
outs
fwait
in
cs
jg
and
inc
fwait
popf
pop
(bad)
aam
cmc
dec
push
sub
adc
aaa
jbe
sbb
(bad)
adc
sub
sub
push
mov
es
xor
in
sahf
sub
mov
mov
jbe
(bad)
jle
dec
jb
add
in
gs
jno
test
stc
xlat
mov
cmp
mov
xor
xor
test
(bad)
adc
js
(bad)
mov
pop
sti
sbb
pusha
xchg
cmp
call
pop
dec
scas
inc
dec
in
pop
sbb
xlat
sub
inc
fidiv
xchg
test
pop
inc
scas
cmps
jle
dec
out
fisttp
mov
inc
pop
xchg
mov
loopne
sbb
xor
scas
xchg
es
(bad)
pusha
rol
je
jg
imul
push
jo
hlt
pop
lock
gs
scas
int
imul
outs
int3
(bad)
adc
test
mov
jne
mov
out
pop
inc
or
ret
clc
push
adc
jp
sbb
pushf
xchg
fsubr
push
add
adc
in
(bad)
dec
ret
push
push
lods
sub
cdq
cmp
loop
add
sub
lods
aad
mov
add
add
mov
and
mov
fld
xchg
sub
or
jns
mul
xchg
(bad)
adc
cmc
inc
std
sbb
iret
shr
mov
call
(bad)
sub
mov
mov
addr16
or
adc
xor
rcl
or
lds
sbb
mov
nop
repnz
ret
cdq
sub
rol
outs
adc
sbb
cdq
enter
add
adc
mov
daa
cmps
add
sub
ret
xor
vmwrite
jb
add
loope
in
sbb
sbb
push
dec
push
stos
pop
jg
jae
repnz
ds
pusha
mov
fdivr
repz
sbb
inc
xor
push
jmp
add
push
push
xchg
push
pop
std
xor
jne
mov
(bad)
lods
fcom
aas
dec
out
imul
cmp
ins
daa
out
xchg
mov
and
cli
xchg
retf
push
out
lods
cmp
addr16
adc
aaa
dec
js
inc
test
and
push
mov
mov
cmp
pop
jne
cdq
xor
pop
addr16
loopne
sub
and
jge
pushaw
out
idiv
lods
mov
inc
sahf
test
push
inc
jl
lds
jo
shr
xlat
stos
mov
mov
sub
cwde
mov
dec
push
bound
psllq
bound
repnz
add
and
xchg
add
lahf
pop
(bad)
push
inc
cmp
mov
movs
dec
sbb
fwait
inc
ja
data16
jb
scas
sahf
fiadd
xor
nop
icebp
and
add
xchg
mov
xchg
std
scas
inc
push
dec
data16
push
call
daa
std
sbb
cmp
add
inc
int3
test
xor
sub
bound
out
mov
pop
test
(bad)
aas
jge
lea
(bad)
stos
mov
push
repnz
leave
scas
mov
imul
inc
inc
xchg
jne
ins
mov
mov
or
cs
in
mov
inc
mov
and
cmp
xchg
fs
gs
xchg
add
lods
ins
xor
fs
pusha
in
outs
jecxz
sbb
int3
pop
xor
fwait
(bad)
adc
repnz
cmp
jmp
cld
pop
sbb
daa
mov
call
mov
push
lahf
das
(bad)
loope
jae
adc
es
out
add
out
xchg
pusha
pop
xchg
cmp
in
mov
add
adc
iret
test
call
push
not
retf
xchg
add
mov
call
adc
add
stos
jbe
outs
mov
sbb
dec
and
jbe
mov
(bad)
xor
mov
xor
loope
mov
push
mov
pushf
xchg
xchg
lock
fidivr
mov
fld
adc
pop
mov
ins
cmp
mov
(bad)
scas
(bad)
dec
movs
sahf
loopne
mov
sti
inc
adc
in
dec
shr
(bad)
mov
sub
cli
cmps
out
push
jne
loope
les
xor
stos
inc
enter
retf
pop
or
adc
pop
jnp
mov
mov
outs
and
mov
push
(bad)
in
je
xor
sbb
and
jmp
xchg
jle
add
outs
jp
cmp
cwde
adc
and
cmp
sar
push
std
ret
int
push
xlat
mov
sub
mov
mov
pop
sti
add
pop
sbb
rol
pop
push
retf
mov
repz
ja
or
mov
hlt
imul
stos
mov
or
pop
mov
xor
push
add
push
mov
sbb
jns
jp
and
stos
mov
icebp
xchg
shl
jo
mov
cdq
stos
stc
mov
dec
xor
jns
mov
jae
loopne
inc
stos
dec
push
xchg
add
jae
and
out
ret
std
mov
pusha
(bad)
and
fst
ja
ja
pop
in
push
xchg
ins
outs
mov
pop
jp
sub
call
sbb
fstp
or
mov
dec
fdivp
daa
std
pop
call
fs
mov
jg
clc
rcl
mov
ret
daa
arpl
sar
stc
loope
shr
cld
aas
stos
mov
shl
popa
pop
inc
fcomp
xor
inc
les
pop
adc
dec
sub
sahf
fisubr
push
add
cmp
hlt
dec
ret
das
jno
xchg
dec
mov
inc
jmp
sti
xor
retf
ds
jp
jmp
movs
pop
jmp
xchg
or
push
jne
xchg
arpl
xor
xor
popa
sub
in
bound
stos
sbb
xchg
cmp
fs
(bad)
xchg
jno
fst
in
jg
cmc
call
ins
sbb
test
nop
xor
cmp
pop
out
or
or
jne
in
push
mov
fstp
xchg
loop
and
or
mov
repnz
mov
mov
mov
xor
mov
pop
loop
xchg
pusha
mov
cmp
pop
fstp
or
xchg
jns
mov
inc
add
or
shr
test
pmaxsw
mov
mov
(bad)
call
push
mov
(bad)
mov
movs
mov
enter
imul
jnp
push
inc
jg
div
and
loope
test
mov
jge
call
adc
cmp
sahf
push
out
cmovbe
mov
mov
ins
je
push
enter
jne
adc
mov
sti
test
leave
sti
(bad)
popa
inc
cmps
jo
mov
xor
xchg
pop
mov
mov
int3
or
fst
arpl
das
mov
lahf
push
cmp
push
pop
sti
inc
not
xchg
cmp
push
xchg
sbb
out
inc
cmp
scas
pop
xchg
xor
data16
mov
push
add
push
cli
(bad)
mov
bound
aas
mov
adc
xchg
cs
dec
cmps
repz
cmp
pop
push
pushf
enter
pop
pop
inc
or
jo
imul
rcl
mov
fisubr
daa
add
fdivr
rol
mov
mov
xchg
pop
sub
xchg
mov
movs
mov
js
int3
enter
push
adc
cs
add
arpl
nop
mov
xchg
pushf
int
add
inc
dec
and
imul
inc
(bad)
push
or
push
out
mov
mov
imul
pop
cmp
ins
aas
adc
xor
jmp
add
imul
mov
jnp
xor
stos
add
js
push
(bad)
or
fs
cmps
std
cmp
shl
and
cmp
jecxz
sub
mov
imul
js
and
loope
mov
cmp
xchg
mov
call
aas
retf
inc
mov
leave
and
test
and
fmulp
and
jne
sbb
sbb
or
mov
enter
sbb
xor
pop
mov
sbb
pop
cs
dec
cmps
sar
popf
push
imul
mov
mov
sub
dec
add
push
sub
stos
out
shr
in
adc
mov
jmp
in
jmp
jg
adc
aas
push
enter
imul
adc
cld
test
add
fcom
sbb
addr16
ror
in
fcmovu
mov
stos
call
dec
jp
push
pop
push
bswap
js
fisttp
pop
add
cmp
cmc
pusha
jae
xor
and
fnstenv
int
in
sub
daa
dec
call
sar
call
and
clc
es
cmp
push
cli
pusha
gs
adc
outs
sub
inc
or
lock
jmp
cdq
shl
xchg
loopne
mov
sub
mov
or
mov
jmp
stos
sbb
dec
jmp
(bad)
lds
out
xlat
into
jl
(bad)
iret
jecxz
adc
das
dec
push
jae
cmp
push
popf
adc
push
cmp
stos
retf
push
and
gs
sahf
xor
adc
ror
pop
or
aad
imul
ins
mov
das
stos
fcom
mov
or
mov
or
out
jp
push
int3
fstp
pop
pop
adc
or
adc
mov
adc
fldenv
and
dec
adc
xchg
out
pop
inc
movs
shl
leave
in
xchg
pop
icebp
das
add
jmp
push
mov
pop
outs
inc
hlt
xchg
push
push
icebp
mov
cmp
add
cld
pop
xchg
jl
retf
sub
pop
mov
scas
fcmovbe
adc
or
and
repz
mov
cmps
stos
or
xor
cmps
ins
xchg
call
arpl
daa
mov
xchg
int3
fld
sub
fistp
xchg
pusha
clc
mov
and
mov
pop
or
dec
dec
iret
shl
xor
int
(bad)
icebp
lods
xor
inc
movs
and
push
or
sub
push
mov
mov
movs
xlat
pop
clc
add
mov
jno
adc
cmp
call
mov
add
and
pusha
mov
mov
std
cmp
xchg
aas
sub
inc
jg
sar
daa
fcom
scas
inc
movntq
into
nop
call
repnz
cmp
or
push
cvtpi2ps
dec
mov
call
add
dec
push
aad
jne
fstp
add
fild
xor
aaa
pop
pop
or
int
movs
mov
cwde
mov
test
imul
jb
adc
outs
loopne
pop
scas
push
jb
xor
mov
lds
pop
das
cmovs
pavgw
fcmovnb
inc
pop
jle
rcr
sub
(bad)
mov
and
int
in
push
popa
pusha
add
jmp
int3
and
movnti
cmp
es
(bad)
call
ret
jmp
out
jo
xor
shl
or
xchg
and
out
aad
jae
jmp
jp
loop
push
dec
xor
pop
mov
xor
xlat
mov
mov
je
dec
push
fsubr
or
aas
push
(bad)
out
gs
xchg
and
push
xchg
cdq
sub
cmp
hlt
push
jbe
out
xchg
dec
jnp
stos
push
xchg
loope
loope
add
jnp
div
pushf
mov
jmp
jbe
js
mov
add
pop
lods
push
push
jns
mov
pop
fimul
pop
cmp
cmp
inc
push
mov
adc
mov
xchg
in
push
or
mov
pop
fidivr
add
int3
fwait
xor
jecxz
call
and
dec
cmp
inc
mov
push
xchg
popa
or
mov
push
mov
scas
sub
cmps
push
test
(bad)
daa
fcmovbe
rcl
jmp
jne
fild
lods
xchg
adc
mov
addr16
call
push
fst
dec
mov
cmc
mov
popf
xor
jb
stos
out
push
dec
loope
mov
sbb
push
iret
lods
mov
xchg
arpl
xchg
retf
mov
and
and
or
mov
xor
leave
xor
inc
dec
into
jno
pop
pop
call
idiv
xchg
es
fwait
shr
lods
fadd
fs
pop
ror
es
mov
push
out
jecxz
in
nop
test
xchg
add
ins
clc
sub
fwait
lahf
(bad)
adc
jae
stos
dec
inc
loopne
mov
es
fld
pop
jl
lods
ja
or
pop
add
jae
push
js
dec
clc
pop
ret
push
inc
pop
mov
fcmovnu
shl
loopne
push
js
(bad)
jb
cmps
sub
xchg
(bad)
push
icebp
mov
jae
in
xor
sub
jne
aas
mov
mov
cmp
sub
fnstsw
inc
dec
mov
fadd
inc
push
sbb
xor
hlt
imul
inc
dec
dec
stos
into
mov
scas
pop
jle
add
test
push
idiv
xor
xchg
pop
call
adc
out
mov
mov
arpl
ss
cmps
out
inc
xchg
pop
test
inc
pop
xchg
pop
in
cli
sub
jl
or
sub
scas
inc
cmp
xchg
xlat
adc
pop
inc
xor
loop
mov
out
ins
fisub
inc
iret
shl
cmp
popf
fwait
inc
int3
or
xchg
prefetchwt1
pop
fimul
and
icebp
cmp
or
inc
push
dec
daa
jb
jmp
push
push
sub
adc
iret
mov
jecxz
jp
push
lods
add
inc
adc
dec
mov
test
int
push
(bad)
loopne
lock
xor
cmps
push
fist
out
fst
sub
xchg
and
inc
not
sub
and
mov
out
aad
mov
loop
cmps
mov
lods
cmp
sbb
cmp
std
pop
sahf
(bad)
pop
add
outs
fnstsw
sub
mov
or
cmp
icebp
imul
xchg
je
imul
dec
push
mov
pop
sti
jg
pop
outs
xchg
jle
aad
add
inc
cmp
and
add
mov
sti
mov
gs
out
rol
enter
mov
jno
and
cli
jle
push
push
or
xchg
and
inc
fidiv
sbb
cmp
sbb
outs
add
adc
fneni(8087
retf
xor
push
add
push
push
cli
sub
repz
lock
stos
pop
mov
ds
mov
popf
sbb
pusha
iret
mov
test
xor
xlat
enter
cmp
sbb
lahf
pop
push
addr16
xor
addr16
or
ins
inc
push
xchg
jle
push
(bad)
adc
hlt
mov
mov
je
dec
repnz
je
aad
and
xchg
adc
mov
leave
stos
jae
jb
mov
fimul
(bad)
psrlw
stc
mov
call
stc
pop
push
aaa
ret
push
sub
rcl
sar
mov
cld
hlt
pop
lock
dec
aas
dec
jne
push
fisttp
sbb
cmc
aad
or
aam
inc
clc
mov
sar
(bad)
jnp
or
test
mov
xchg
test
fisub
mov
jno
push
inc
add
popf
jg
xor
icebp
mov
fiadd
sbb
stos
test
scas
sub
retf
mov
cmps
push
jge
xchg
mov
mov
mov
aaa
lahf
cmp
dec
lods
pop
(bad)
cld
(bad)
xor
rcl
push
cmc
stc
inc
(bad)
in
sub
inc
std
mov
test
cld
cmp
inc
sub
cli
imul
inc
inc
les
call
cmp
js
dec
cmc
lahf
pusha
mov
dec
sahf
fs
aam
mov
popf
bound
out
sbb
jno
push
lods
adc
je
lods
or
dec
mov
outs
(bad)
out
es
inc
fld
xchg
xchg
jp
div
add
xor
mov
js
iret
mov
inc
inc
jg
(bad)
lods
dec
dec
movs
in
shl
pushf
cmp
lods
rcr
sub
fs
sbb
retf
idiv
inc
lock
mov
push
and
in
jbe
div
daa
mov
fs
dec
call
push
add
xchg
in
mov
pop
cmp
jns
jb
mov
and
inc
dec
sbb
sahf
cmps
dec
jnp
mov
test
cli
cmp
ins
dec
(bad)
mov
mov
shl
pop
out
bound
sub
stc
inc
sbb
dec
test
loopne
sbb
cwde
mov
fisub
out
scas
and
push
fcomp
out
arpl
fwait
loopne
fcom
out
add
jle
mov
xor
pop
mov
mov
jo
jae
inc
aam
adc
sub
js
dec
fadd
test
sahf
or
enter
dec
and
dec
xor
mov
div
(bad)
jb
into
in
outs
pop
(bad)
push
int
jne
(bad)
lahf
ins
push
mov
sub
call
jb
sbb
test
push
pop
cdq
es
in
ss
inc
into
mov
neg
jno
clc
dec
add
loop
sub
jg
addr16
movs
loope
call
push
push
inc
sahf
xchg
popf
jmp
ins
fistp
jns
dec
mov
dec
xchg
pop
fisubr
mov
adc
xchg
cmp
jns
mov
jb
retf
add
mov
shl
stos
xchg
std
lea
mov
repnz
sbb
mov
bt
mov
mov
test
dec
int3
push
adc
xchg
and
sti
enter
and
pop
push
in
pop
loop
mov
stos
sbb
arpl
fistp
and
(bad)
mov
iret
imul
adc
dec
add
xchg
and
arpl
test
lock
popf
data16
and
jne
test
push
adc
sbb
inc
pop
ficom
or
jnp
mov
aas
std
mov
les
fnstsw
adc
ins
jno
or
je
test
sub
add
or
and
push
xchg
lods
js
(bad)
ins
xchg
xor
sub
sbb
and
xor
int
add
and
js
inc
(bad)
sahf
arpl
mov
inc
lods
pusha
(bad)
aaa
xchg
xor
push
push
mov
dec
sub
and
adc
out
pop
mov
jns
xchg
movs
call
ins
cs
cmps
inc
xlat
fild
je
lahf
out
jmp
pop
mov
push
(bad)
push
xor
jmp
ror
inc
adc
inc
pop
imul
sbb
enter
shl
popa
fisubr
xchg
push
adc
nop
xor
(bad)
jp
mov
aam
jl
arpl
popf
mov
pop
test
sub
data16
cmc
fcom
lods
xchg
xchg
inc
add
cdq
inc
test
(bad)
imul
jb
pop
test
and
or
mov
mov
sub
dec
cmp
cwde
pop
mov
imul
outs
cmp
jns
inc
enter
xchg
sbb
or
repz
sbb
pop
mov
jle
mov
les
cmp
popf
outs
mov
rsqrtps
aaa
rcr
dec
js
mov
enter
stc
pop
sub
adc
int3
mov
outs
xchg
add
jo
fadd
push
lds
xchg
hlt
adc
lds
mov
ins
out
loop
cmp
out
outs
add
jno
es
jns
pop
mov
fstp
adc
xchg
jecxz
inc
std
shl
dec
xchg
push
mov
cs
adc
mov
and
jle
push
outs
les
loope
push
je
das
ficomp
mov
aam
in
in
add
mov
scas
pop
cdq
ffree
ss
sbb
ror
fistp
lock
sbb
shl
mov
mov
or
(bad)
lea
push
inc
sub
ficom
imul
test
push
adc
pop
ss
(bad)
adc
mov
mov
jo
add
pop
mov
call
cwde
pop
dec
call
push
mov
aas
lds
mov
sti
shl
mov
mov
jle
push
fiadd
imul
shl
leave
xor
jne
jmp
arpl
jle
jmp
pop
jns
jnp
fsub
jecxz
dec
push
mov
arpl
mov
pop
inc
(bad)
mov
(bad)
cmp
js
test
jnp
push
mov
xchg
cmps
cmps
add
dec
cmps
mov
sub
ins
test
inc
jle
aad
push
das
fidivr
stc
loopne
push
dec
dec
movs
ja
lea
(bad)
push
loopne
mov
jecxz
pop
jle
mov
sbb
mov
jne
dec
mov
mov
mov
inc
xchg
xor
out
jns
aas
sub
sub
xchg
in
cmp
mov
inc
inc
cwde
aam
fs
mov
xor
push
imul
shl
sbb
cmp
not
mov
mov
in
(bad)
pop
jmp
rcr
dec
leave
push
int3
push
or
or
or
xchg
int3
(bad)
imul
add
aad
mov
add
stc
and
fwait
outs
mov
inc
mov
mul
adc
cdq
loop
cmp
test
xchg
iret
adc
pop
adc
and
add
sub
popf
test
jmp
lea
sti
fsub
and
xchg
rcr
cmp
fistp
xchg
jp
movs
cs
bound
outs
pop
mov
enter
dec
(bad)
stc
push
shl
push
div
dec
int
gs
jmp
dec
mov
adc
sbb
enter
inc
jmp
sub
lahf
lock
pop
dec
dec
(bad)
jge
into
(bad)
fdiv
scas
add
lahf
lods
ret
xor
stos
clc
arpl
xor
sbb
mov
and
loope
or
(bad)
aam
fwait
push
mov
sbb
lods
daa
vmwrite
sub
jns
out
dec
jae
cmp
pop
lock
xlat
xchg
push
mov
jmp
mov
adc
xor
lods
data16
dec
mov
das
or
scas
imul
cmps
adc
lds
add
add
lds
shl
sub
jp
fnstsw
cmp
cld
xor
bound
mov
cmps
inc
or
cmp
cld
stos
xor
jmp
push
mov
stos
xchg
add
push
arpl
dec
push
dec
(bad)
loope
std
mov
xor
inc
xlat
fwait
sbb
mov
lock
or
push
repz
dec
iret
into
jg
push
dec
add
(bad)
sbb
retf
mov
(bad)
nop
jb
nop
ret
push
jge
test
test
outs
jl
pop
lea
lahf
test
add
xchg
jge
xchg
xchg
mov
stc
sbb
cs
sub
retf
fwait
ja
(bad)
cli
arpl
imul
mov
inc
mov
stos
ins
push
mov
lods
ret
ret
sahf
mov
pop
ins
packssdw
(bad)
out
xchg
cwde
cmps
or
mov
jg
and
arpl
fsubp
jg
inc
jne
fsub
inc
mov
mov
dec
fcmovb
pop
xchg
jmp
fidivr
dec
lods
leave
pushf
cbw
xor
repz
dec
ror
pushf
je
push
popa
add
sbb
pop
(bad)
dec
lds
jg
push
bound
(bad)
jge
mov
add
jle
mov
ss
cmps
fmul
ins
cmp
pop
cs
cmp
movs
mov
leave
leave
(bad)
iret
xchg
cld
and
dec
mov
pop
or
dec
mov
shr
adc
pop
xchg
aam
ss
mov
xchg
cwde
sbb
dec
stos
loop
pushf
in
jge
ds
movs
jae
pop
xchg
fadd
mov
or
sbb
fdivp
ror
jbe
sbb
mov
xchg
ror
jno
mov
mov
(bad)
lahf
xlat
adc
or
jmp
scas
test
mov
into
addr16
jl
inc
jae
cmp
push
mov
das
int3
jl
mov
scas
or
cmp
out
vmread
int3
imul
aaa
add
mov
in
jmp
fimul
and
stos
cwde
pop
scas
js
dec
sub
push
sbb
mov
push
cld
repnz
sub
scas
loopne
cmps
scas
xchg
sub
cmp
dec
fwait
mov
inc
jns
retf
out
pop
jge
lods
cwde
dec
adc
push
mov
cmps
aad
lods
jp
sar
push
enter
fild
inc
cld
mov
pop
cmps
sub
retf
jnp
enter
ds
movs
stos
or
push
dec
ficom
sbb
cmc
xor
dec
inc
jmp
(bad)
pop
mov
inc
jb
and
dec
dec
cmp
shr
or
(bad)
iret
fld
ret
sbb
jo
ja
jl
xor
icebp
and
jp
cmp
xchg
cmp
mov
dec
outs
lds
pop
fucomip
xchg
pop
mov
mov
jmp
popa
dec
jae
ja
sahf
jbe
sar
nop
out
xlat
and
xorps
jle
pop
jl
out
fdivr
aam
arpl
daa
mov
sub
aad
popf
std
loope
movs
sbb
fabs
xchg
dec
push
cmp
pop
add
stc
repnz
jmp
push
into
(bad)
div
(bad)
mov
jp
mov
std
scas
mov
or
por
into
jo
in
sbb
xchg
jno
lock
clc
and
jae
pop
xchg
dec
cmp
clc
pop
lods
call
dec
sub
xchg
push
push
dec
in
xchg
add
xchg
inc
ret
loop
(bad)
pop
test
mov
mov
sahf
jno
stc
fcomi
jle
fs
push
cwde
cmps
jnp
lahf
xchg
(bad)
cmp
and
cs
pusha
aas
cwde
lahf
test
std
mov
je
daa
sahf
dec
xchg
xor
mov
cmps
dec
sbb
stc
xchg
pop
adc
out
or
mov
push
test
(bad)
fiadd
out
movs
add
lds
jnp
xchg
adc
test
jbe
mov
xchg
loopne
call
or
push
shr
rcl
fwait
arpl
add
lahf
jecxz
mov
xchg
(bad)
std
repnz
jmp
xchg
mov
cdq
jns
xchg
jg
(bad)
adc
sbb
add
cmp
imul
outs
mov
loopne
sahf
js
mov
std
push
and
xchg
jae
sbb
gs
jne
psrlq
lock
cmps
out
mov
stc
push
xchg
sub
sub
nop
push
push
sbb
sub
sbb
addr16
gs
in
in
jge
(bad)
mov
rcr
stos
(bad)
in
sbb
sbb
mov
call
popa
adc
ds
fist
push
and
imul
xchg
sub
sar
daa
xchg
push
push
(bad)
add
mov
out
inc
scas
jno
and
xor
sahf
dec
add
pop
cs
ins
xchg
ja
sbb
rol
jb
stos
lahf
imul
mov
mov
sub
leave
int3
inc
das
mov
mov
or
dec
shl
ja
shl
dec
push
mov
cmps
call
xor
inc
mov
mov
jne
hlt
mov
(bad)
fs
mov
push
pop
push
dec
jb
cdq
sbb
(bad)
in
mov
faddp
dec
adc
in
(bad)
call
xor
imul
jno
jae
repnz
sbb
jecxz
ins
xor
les
pop
sub
cwde
dec
or
sbb
std
jge
into
mov
movs
jbe
in
inc
enter
aad
hlt
(bad)
stc
test
adc
inc
push
adc
fs
mov
mov
iret
inc
sbb
add
jo
fsub
retf
and
ja
jle
mov
push
xlat
(bad)
and
jl
lods
jnp
mov
xor
call
xchg
daa
sub
mov
shl
pushf
jecxz
in
test
or
das
js
inc
jns
(bad)
mov
lods
jbe
pop
int
dec
mov
or
jbe
pop
xlat
ret
test
pop
gs
dec
sbb
in
push
dec
push
sub
sub
push
adc
je
sahf
out
inc
jmp
stos
xor
int
pop
nop
rol
dec
inc
cmps
scas
in
mov
cmp
stos
sub
jo
mov
cmp
je
retf
dec
xor
pop
cmps
jecxz
mov
inc
xor
mov
scas
mov
loopne
jb
(bad)
push
or
pop
lahf
pop
push
shl
arpl
mov
xchg
(bad)
repnz
push
cmp
inc
inc
fistp
test
scas
xor
mov
add
xor
push
mov
inc
iret
cmp
sub
sti
jmp
inc
push
pop
fist
push
jae
popa
mov
adc
sub
push
sbb
ins
inc
add
xor
push
mov
xor
jne
inc
mov
and
cld
adc
sub
scas
das
ret
adc
adc
sbb
ret
icebp
stos
add
jmp
(bad)
fdivr
xor
adc
adc
mov
stc
lea
jne
scas
xchg
fild
mov
mov
adc
dec
adc
or
cli
fwait
dec
inc
push
loope
rcr
stos
sub
stos
inc
push
mov
xor
or
xor
call
pop
cmp
mov
out
icebp
fdivr
inc
out
ds
push
push
mov
stos
shr
arpl
sti
scas
jle
out
push
in
push
cld
std
sbb
or
stc
loope
popf
inc
add
in
xchg
sbb
pop
mov
jbe
inc
neg
loopne
sub
rcl
sub
or
adc
loopne
aam
add
push
leave
inc
mov
(bad)
mov
loopne
push
in
inc
jmp
dec
std
sub
xchg
inc
xlat
adc
jg
pop
loopne
nop
sbb
mov
stos
out
cmp
mov
leave
int
adc
pop
mov
jmp
jl
rol
stc
xchg
push
sbb
or
aaa
jae
dec
jg
sub
mov
xchg
mov
add
add
fs
retf
lds
in
mov
jno
mov
inc
adc
jb
outs
out
jae
in
xor
ret
into
retf
cmps
int
ins
fadd
mov
sti
ins
lock
cmp
inc
jmp
mov
jno
popf
rcr
pop
loopne
or
xchg
(bad)
imul
adc
imul
or
fwait
test
clc
icebp
jb
popa
mov
add
and
jge
mov
xchg
add
(bad)
adc
in
cmp
add
aad
fwait
adc
(bad)
pop
or
inc
push
int
jns
dec
or
inc
push
dec
and
test
in
inc
xchg
add
outs
cmp
push
out
mov
loopne
cmp
pushf
es
ror
push
xchg
hlt
mov
lds
enter
cmps
mov
shl
shl
int
outs
das
sbb
and
aad
cdq
adc
add
mov
stos
mov
or
adc
sub
pop
jbe
div
call
leave
lods
int
aas
pop
sbb
pop
cwde
ins
jb
push
sbb
aaa
movs
mov
cmp
pusha
outs
sbb
sbb
arpl
hlt
mov
cmp
xchg
das
arpl
and
jmp
in
aad
add
rcr
in
fnstsw
lods
test
xchg
jne
movs
push
adc
pushf
or
fcmovnu
mov
pushf
or
xchg
xchg
xchg
jmp
or
mov
xchg
sti
and
jbe
cmp
mov
pop
ror
and
mov
into
aad
jecxz
cmp
mov
test
pop
xor
addr16
mov
inc
xchg
mov
into
jno
or
xchg
xchg
ss
stc
popf
or
lods
jl
aad
jns
or
aas
cwde
add
ins
push
movs
cmp
mov
movs
(bad)
shl
pushf
dec
jge
hlt
pop
es
or
dec
dec
xchg
ret
retf
or
push
shr
mov
pop
loope
fsub
cs
cmp
inc
out
mov
or
jo
sub
ins
push
addr16
gs
pop
or
in
push
add
popa
fs
push
mov
jmp
sub
aas
mov
movs
test
cld
pusha
sub
mov
cmc
sbb
(bad)
xchg
xor
stos
xor
hlt
test
fs
je
bound
pop
dec
mov
add
(bad)
bound
ror
sbb
jb
add
daa
sub
pop
in
das
out
adc
out
inc
retf
lock
and
retf
xchg
imul
daa
sub
(bad)
fiadd
mov
xchg
imul
in
icebp
dec
push
out
movs
inc
sti
lahf
mov
pop
jmp
iret
push
mov
stos
cmp
(bad)
mov
or
add
cmp
fdiv
ret
jle
or
je
or
das
je
pop
lahf
in
xchg
lds
dec
jmp
adc
mov
in
daa
fstp
or
ret
or
jle
adc
mov
pop
push
cld
xchg
in
mov
sbb
push
sub
xchg
sub
out
xchg
jbe
mov
cmp
adc
inc
mov
dec
sub
popa
shl
or
test
xchg
jmp
lahf
pop
dec
mov
push
push
movs
pop
data16
xchg
add
mov
adc
jmp
and
xchg
rcl
sbb
(bad)
jae
loop
xor
pop
inc
add
and
lea
cmp
xchg
pop
cmps
daa
sahf
daa
xor
xchg
out
cmp
sbb
in
mov
cmps
or
cmp
(bad)
adc
inc
mov
sti
(bad)
movs
outs
mov
(bad)
neg
xor
cmp
lds
(bad)
jb
cdq
imul
loopne
mov
(bad)
rcl
and
lods
sbb
imul
cmps
cmp
mov
gs
test
sub
call
and
fist
adc
mov
leave
fbstp
xor
dec
call
sbb
xchg
adc
call
fcom
iret
cmp
iret
cmp
push
dec
retf
jge
dec
test
test
add
jle
bound
sbb
xchg
dec
lahf
xor
movs
xchg
xchg
jmp
clc
int
dec
(bad)
fdiv
cmps
fld
pop
cmp
push
push
add
icebp
sbb
fidiv
mov
int
lahf
sub
faddp
stos
aam
cmps
(bad)
mov
xor
popa
mov
add
es
xor
fdivr
retf
shr
and
sbb
(bad)
mov
or
test
pop
test
popa
stos
mov
into
(bad)
pushf
icebp
leave
scas
repz
xor
mov
popf
pop
sbb
add
sbb
or
and
jbe
cmc
out
xchg
and
and
dec
inc
retf
scas
add
cli
cmp
dec
mov
stos
jns
or
jae
fsubp
test
retf
test
add
mov
pop
dec
sbb
fdiv
repnz
rol
gs
pushf
pop
(bad)
jne
sahf
and
push
mov
mov
jle
inc
(bad)
cmp
stc
ins
jle
jmp
cmp
loope
xor
sbb
xchg
cmp
mov
(bad)
adc
retf
inc
out
adc
fs
pop
cmp
or
out
stos
scas
mov
push
fwait
outs
pop
or
(bad)
and
mov
jmp
sbb
adc
nop
rol
jae
pop
std
iret
mov
adc
dec
scas
xor
ds
les
and
es
gs
add
adc
mov
sahf
jbe
adc
rol
sbb
sbb
sbb
push
push
clc
inc
enter
cmp
sbb
push
pop
enter
mov
pop
popa
inc
sbb
jle
in
imul
dec
cmps
cmp
es
sub
xchg
xor
inc
jae
div
sahf
addr16
das
inc
mov
xor
dec
outs
retf
or
loope
into
fisub
sahf
and
push
or
xchg
into
shr
push
ja
cmps
clc
fistp
(bad)
add
scas
repnz
push
jns
and
(bad)
add
pop
jmp
imul
stos
ins
pop
add
mov
pop
shr
xchg
pop
(bad)
jecxz
cwde
jge
bound
push
scas
dec
bnd
ret
push
xor
lgs
inc
xchg
aam
dec
xor
add
rol
scas
xchg
loope
(bad)
clc
rol
je
div
pop
lds
mov
push
popa
xchg
les
xor
fstp
mul
mov
mov
and
push
inc
lock
sti
or
fist
test
gs
inc
cdq
or
adc
and
add
rcl
cmps
xor
call
in
xchg
sbb
add
(bad)
cmp
idiv
mov
dec
test
sbb
dec
stos
hlt
movs
movs
arpl
xor
sbb
mov
jns
mov
pop
stos
lea
adc
pop
or
inc
lock
loop
inc
stos
vmovaps
scas
(bad)
mov
test
cld
ret
mov
cs
into
mov
mov
sbb
iret
jo
inc
jge
(bad)
push
xchg
out
arpl
xor
fimul
out
out
mov
cmp
aam
imul
push
pop
enter
cmp
sti
sbb
rcl
or
xor
shr
sbb
jb
not
mov
sahf
pop
adc
sbb
push
fnstsw
inc
cmp
leave
or
push
ret
or
dec
repnz
out
iret
mov
add
inc
jg
jle
sbb
jmp
fnstcw
and
cwde
cmp
test
mul
mov
lahf
je
cmp
fbld
jp
popf
js
ror
dec
mov
out
jb
mov
ja
cmps
in
jnp
sub
jnp
mov
mov
movs
rcl
adc
cmp
xchg
push
cli
push
imul
mov
mov
push
adc
mov
addr16
push
ret
lock
lods
mov
pop
mov
mov
popa
addr16
retf
xor
movs
pop
dec
call
lods
dec
jb
stos
outs
pop
mov
and
cmp
(bad)
push
es
outs
push
mov
pop
cmp
es
mov
out
ins
mov
pop
add
xor
fwait
idiv
or
pop
lods
out
imul
pop
jl
xor
sbb
in
pop
rol
inc
xlat
mov
cmp
mov
push
rep
js
mov
movs
push
adc
not
(bad)
jecxz
div
mov
fisttp
add
(bad)
popf
out
xchg
push
rcr
push
in
inc
(bad)
into
dec
and
rol
icebp
mov
mov
fidiv
out
sahf
addr16
pop
push
(bad)
jmp
fisub
sbb
cmps
aam
mov
movs
cwde
std
int3
jp
ds
mov
jecxz
leave
jp
bound
sub
and
(bad)
test
in
ds
bound
aas
pushf
leave
mov
sti
cli
and
lds
nop
xor
(bad)
cld
push
retf
push
mov
mov
sbb
mov
repz
add
mov
stc
scas
jns
add
xchg
mov
push
add
ret
jp
pusha
xor
test
push
adc
retf
enter
push
mov
push
in
les
push
xor
mov
dec
retf
aas
ja
loope
ss
aaa
jb
je
jmp
mov
inc
in
icebp
and
add
aam
stc
or
(bad)
cmc
mov
not
and
cmp
sti
arpl
ins
(bad)
jbe
mov
cli
(bad)
ins
retf
rcpps
mov
xchg
mov
sbb
cli
push
test
add
push
pop
add
and
and
ret
jp
stos
shl
push
xor
mov
adc
sub
jb
xchg
adc
xor
jge
sub
cwde
pop
xor
xchg
in
adc
(bad)
je
sub
and
adc
sub
movs
jl
xchg
mov
retf
sub
fld
arpl
xor
neg
rcr
(bad)
fwait
xor
test
in
push
push
xchg
or
add
mov
call
cmps
ins
or
mov
inc
test
lods
cmp
call
repnz
push
fdivr
dec
daa
test
lahf
aam
dec
sbb
xchg
or
retf
clc
xchg
mov
mov
jmp
aaa
sti
xchg
test
pop
leave
in
outs
xchg
adc
out
mov
jnp
loopne
mov
push
movs
jecxz
sub
ret
sub
cmc
call
into
push
push
xor
mov
inc
imul
fs
out
icebp
ret
inc
arpl
in
imul
jne
stos
int3
out
(bad)
mov
jae
push
leave
cmc
fst
xor
xchg
mov
repnz
mov
cmp
addr16
xor
(bad)
sub
dec
sub
call
out
xchg
hlt
jmp
outs
push
(bad)
mov
adc
mov
ins
pop
jmp
inc
pusha
fwait
scas
and
xor
xor
or
dec
test
cmp
push
pop
dec
into
mov
push
rcr
or
inc
xor
rcr
cmps
add
mov
inc
push
aas
imul
adc
and
mov
adc
call
lock
inc
fisubr
jge
outs
stos
jb
jno
adc
mov
push
xchg
cs
imul
fldcw
dec
iret
add
ja
xor
or
cmp
cmps
call
jnp
dec
mov
adc
dec
or
sub
popf
call
jg
sbb
lea
sbb
jmp
ror
dec
push
sub
or
clc
jnp
(bad)
cmp
jg
mov
sub
jne
xor
pushf
js
cmp
mov
mov
add
jns
xchg
ins
in
sbb
xchg
jmp
dec
cmp
jl
xchg
add
mov
mov
ins
xor
xor
pushf
jecxz
daa
xor
rcl
pusha
sbb
add
and
jbe
les
pusha
xchg
or
push
(bad)
add
push
add
jp
mov
mov
or
scas
xor
pop
xchg
jge
cmc
pop
aas
cmp
mov
add
(bad)
mov
movs
and
and
pop
shl
and
jo
fidiv
rcr
test
outs
jo
push
add
(bad)
hlt
sbb
test
retf
sub
and
and
stc
jnp
jl
or
test
push
js
loope
sub
das
(bad)
fldenv
mov
hlt
cs
mov
arpl
ins
shl
sub
inc
daa
sahf
shr
ret
out
dec
rol
outs
jp
sub
aam
jb
jmp
sub
(bad)
stc
(bad)
pop
push
xchg
inc
cmp
outs
dec
adc
fsubr
or
jno
(bad)
jmp
(bad)
aaa
dec
mov
add
test
jns
mov
add
movzx
daa
mov
call
adc
add
aad
cmp
adc
inc
and
and
push
fucom
add
cmc
mov
pop
ss
sbb
call
mov
inc
push
sbb
jle
ins
cdq
cmp
sub
xchg
(bad)
pushf
sub
popa
mov
sub
jmp
xor
call
shl
fisub
cmps
inc
cmc
xlat
addr16
xor
dec
lea
mov
retf
mov
fcomp
das
mov
(bad)
cli
xor
ss
jmp
push
je
xchg
add
or
add
or
add
pop
dec
pop
sbb
ror
lds
stos
and
stos
jle
mov
and
xchg
mov
or
jl
in
mov
retf
dec
cmp
pop
xchg
push
add
adc
push
mov
hlt
movs
pop
js
retf
in
and
adc
sub
retf
lahf
push
push
xor
les
aas
jl
(bad)
xchg
out
clc
mov
mov
lahf
sahf
mov
fwait
retf
pop
shl
bound
push
jb
dec
(bad)
mov
out
out
rol
jo
stos
int
pop
enter
into
mov
int3
mov
jbe
js
pusha
jnp
dec
(bad)
repz
mov
jge
enter
call
add
repnz
shl
mov
jo
jo
leave
arpl
add
jb
(bad)
pop
add
mov
loope
adc
ret
dec
push
add
mov
dec
adc
and
jb
sbb
mov
mov
lock
out
cmp
and
sub
inc
into
mov
xor
les
ficom
jecxz
dec
xor
call
push
(bad)
cmps
lea
pusha
(bad)
xlat
stc
adc
lahf
ins
loop
xchg
push
aam
fwait
aas
or
adc
push
inc
retf
mov
stos
pop
xor
push
mov
test
dec
cmp
inc
cs
pop
sbb
push
add
adc
call
jb
shl
pop
outs
xchg
jbe
cmc
ret
inc
enter
or
sbb
movs
out
bound
ja
pop
dec
mov
scas
bound
jp
xchg
jge
popf
and
and
repz
fst
nop
jmp
cmp
rcl
ins
or
je
clc
push
dec
inc
sbb
mov
sub
pop
dec
or
dec
retf
pop
sub
fsub
jns
dec
xchg
leave
std
mov
mov
(bad)
mov
ins
aaa
mov
in
xchg
(bad)
sub
out
dec
push
adc
mov
repz
pop
mov
test
outs
dec
xlat
cli
in
or
cmps
sbb
mov
add
loopne
or
or
and
pop
mov
push
(bad)
outs
pop
aad
pushf
cdq
jle
pop
mov
cmp
sbb
mov
es
or
in
fnstcw
push
out
add
or
in
mov
mov
dec
ficomp
push
mov
int3
into
push
sar
jbe
sub
jne
outs
scas
popf
sub
rol
sti
dec
daa
inc
int3
dec
fcomp
imul
xchg
repz
xor
fadd
mov
test
cmp
push
aad
dec
cs
int
cld
or
jno
jl
call
test
cmps
sub
(bad)
nop
call
add
sbb
sahf
fstp
pop
jne
jo
fsub
fistp
outs
pcmpeqw
cmp
push
and
loopne
aaa
pop
iret
lahf
jp
dec
dec
mov
add
fcomp
sbb
and
div
jge
xchg
xchg
cmp
cmp
sbb
jo
xor
ins
adc
sub
rcl
popa
mov
cwde
sub
push
mov
int
xchg
fdivr
add
cli
jne
pusha
xchg
cmp
out
or
sbb
mov
sub
popa
jl
fs
jne
inc
mov
outs
aaa
mov
rep
xchg
adc
in
retf
sub
pop
retf
aam
mov
ds
mov
xor
dec
dec
call
cdq
cmp
add
add
mov
outs
adc
mov
scas
pop
push
push
xchg
nop
scas
into
dec
sti
aaa
xchg
hlt
xor
xor
jmp
outs
and
imul
ror
dec
push
(bad)
jbe
inc
(bad)
(bad)
mul
repnz
xor
in
xor
ss
in
xchg
mov
arpl
in
xchg
js
sub
mov
and
cmp
mov
dec
push
and
in
jnp
mov
xor
lds
jecxz
adc
pop
popa
mov
mov
adc
inc
push
cwde
mov
push
lock
fdivr
dec
or
xchg
jns
dec
retf
movs
nop
mov
fidiv
stos
(bad)
cld
ins
cld
push
mov
and
xchg
loope
or
dec
loop
add
adc
jg
and
and
outs
inc
ds
xchg
or
rol
dec
adc
mov
aam
mov
call
fisub
popa
add
cmps
pop
nop
xor
sahf
sti
inc
fld
xor
imul
pop
push
cs
leave
retf
xor
imul
xchg
cld
hlt
cli
xchg
test
lods
push
call
mov
cli
xchg
or
pop
and
or
(bad)
hlt
stc
xor
or
outs
sub
sbb
(bad)
cmp
(bad)
nop
std
push
in
jle
cmp
iret
int3
shr
outs
adc
ss
and
in
sbb
retf
movs
test
xchg
ins
or
iret
xor
test
ds
adc
dec
or
inc
adc
test
cmp
jle
push
into
pop
jmp
ret
call
lods
push
lods
jmp
(bad)
cwde
mov
stc
pop
pusha
sti
ds
sbb
ins
mov
sbb
sub
(bad)
repnz
inc
sub
jg
loope
push
pushf
inc
lea
in
xor
cli
scas
and
int3
jnp
jns
iret
cdq
add
leave
sub
sbb
shl
or
pop
int3
dec
jae
or
dec
add
fcomp
or
xchg
cdq
fnstsw
pop
shl
imul
dec
sbb
aad
mov
dec
sub
cs
mov
pop
stos
sub
push
mov
cmp
pop
cdq
nop
push
fcom
int3
out
int
das
nop
jne
push
sbb
or
mov
aam
js
fiadd
pop
cmp
sti
add
adc
ins
movs
lds
sub
scas
and
adc
aad
sub
(bad)
sbb
sbb
add
add
ret
push
cmp
dec
test
jnp
mov
push
sub
call
retf
and
inc
mov
in
mov
out
enter
push
sub
xchg
push
adc
jb
sti
sub
jno
int3
add
not
imul
in
movs
pop
rcl
push
mov
push
sub
jb
sar
mov
add
sbb
rcl
popf
push
lock
popa
push
adc
mov
mov
pop
push
mov
mov
in
jecxz
push
pop
scas
push
(bad)
or
mov
sahf
inc
jb
jge
aas
jmp
mov
sar
mov
repnz
and
jg
mov
pop
fst
xchg
add
sbb
pop
scas
test
popf
pop
and
call
cmp
push
jno
and
mov
jmp
mov
sti
mov
inc
jae
xchg
movs
movs
mov
sti
in
cmc
cli
fdiv
inc
push
lock
imul
int3
mov
xlat
or
hlt
or
(bad)
pop
dec
gs
push
mov
jb
pop
mov
aad
and
stos
outs
jmp
cmps
cld
push
and
je
mov
mov
lods
inc
jnp
int3
add
je
dec
enter
mov
sub
adc
mov
jnp
cmps
imul
mov
pop
sub
sbb
mov
xor
lea
in
xchg
test
and
jl
sar
sbb
xor
push
dec
inc
xor
mov
(bad)
dec
pushf
xchg
jmp
gs
inc
inc
cmp
lods
pop
sti
push
cmp
fsub
shl
add
sub
leave
clc
shl
jmp
loopne
(bad)
iret
xchg
mov
mov
in
fld
outs
xchg
cmps
(bad)
mov
and
mov
push
or
test
push
stos
rol
lahf
cmp
retf
pop
inc
or
ss
push
das
inc
xchg
inc
jae
pop
dec
mov
or
mov
xchg
mov
(bad)
xor
pop
sub
in
jo
hlt
lea
fist
mov
sar
jns
add
test
retf
mov
imul
push
fst
pop
or
lds
ret
outs
ror
stc
mov
sbb
daa
jle
cmp
jo
mov
fnstcw
cli
push
fwait
dec
lock
sbb
lods
cmp
(bad)
jno
enter
leave
add
dec
stos
in
sti
test
mov
pop
(bad)
add
in
jle
sub
sub
(bad)
retf
mov
or
imul
or
test
loopne
(bad)
jle
adc
test
mov
daa
mov
mov
cmp
add
lahf
xlat
push
scas
sub
cmp
cli
je
add
adc
sub
jg
imul
out
mov
xor
mov
and
movs
jmp
ss
adc
add
js
aaa
fisub
pop
xlat
arpl
jg
data16
(bad)
mov
mov
movs
add
(bad)
das
dec
hlt
and
or
push
jecxz
fucomi
sbb
out
stc
sub
nop
push
ds
lods
add
jecxz
loopne
rcl
xchg
adc
ret
mov
scas
dec
fcmovne
loopne
jmp
jge
mov
pop
(bad)
retf
ret
aas
sbb
sahf
and
retf
push
aaa
inc
adc
fldcw
test
imul
cmp
ffreep
loopne
or
adc
setns
mov
call
retf
popf
nop
inc
cmp
or
repz
mov
stos
mov
fsubr
jne
sahf
addr16
or
jne
sbb
ins
or
sub
inc
iret
int3
push
test
sub
aam
dec
idiv
or
or
cmp
pop
cmp
xlat
fwait
mov
jp
add
jl
adc
xor
dec
or
xor
jae
(bad)
(bad)
mov
call
test
sbb
jle
push
ins
ret
(bad)
mov
and
out
fdivr
imul
xor
ds
adc
xor
jnp
aad
pushf
or
cmp
ja
mov
or
ins
ret
mov
inc
lods
lock
jno
push
ins
pop
fisub
inc
loop
dec
movs
add
xchg
pushf
fwait
mov
push
or
int3
mov
repnz
push
cmp
push
test
(bad)
mov
shl
(bad)
jo
mov
add
cdq
mov
dec
push
das
pop
jae
mov
outs
push
out
xchg
jecxz
push
iret
cs
mov
cmps
imul
inc
repz
call
mov
sbb
push
cmp
sub
push
test
fstp
pop
mov
xor
(bad)
imul
jmp
inc
or
or
bound
xchg
(bad)
fstp
pop
pop
dec
xor
sbb
rep
and
mov
popf
ret
lods
ret
lahf
add
jg
jae
add
dec
adc
shl
mov
int3
fs
push
fadd
add
cmp
lahf
scas
jo
adc
fnstsw
mov
loope
mov
xor
mov
push
push
push
mov
pop
and
and
mov
xor
push
call
iret
dec
hlt
xor
xor
cdq
mov
shl
mov
mov
pop
test
jle
bound
fst
lods
jmp
repz
jp
jmp
dec
mov
adc
inc
fs
push
push
enter
jbe
jns
add
(bad)
push
loopne
mov
mov
fiadd
mov
add
xor
fwait
mov
push
mov
imul
movs
repz
push
xchg
pop
test
retf
jae
xor
jo
lods
inc
jmp
jp
add
mov
cli
aas
jb
inc
pop
mov
aam
out
inc
sar
ds
mov
inc
or
cmp
(bad)
movs
mov
mov
mov
mov
dec
test
cs
mov
sub
dec
ins
jne
cmc
dec
cmps
in
mov
push
fsubp
push
in
mov
jmp
sar
loope
and
push
cld
xchg
popa
or
aas
pop
outs
pop
pop
inc
pop
loopne
fbstp
loop
mov
push
xchg
sub
mov
cs
out
mov
dec
sti
mov
shr
push
adc
int
(bad)
mov
das
in
ficomp
dec
mov
es
or
or
inc
inc
pop
pop
stos
mov
mov
mov
jp
xchg
sti
dec
dec
ds
sub
shl
push
xchg
lea
push
int3
fnsave
(bad)
xchg
push
mov
cld
aaa
jl
das
retf
jl
push
push
dec
idiv
add
inc
inc
jbe
lock
jns
rcr
dec
mov
mov
or
sub
mov
inc
fdiv
ds
sbb
addr16
int3
pop
xchg
pop
sub
adc
out
add
out
xlat
es
push
jmp
cmps
test
xor
scas
cs
pop
sbb
retf
je
mov
sub
and
lahf
push
adc
leave
(bad)
shl
fcomip
std
test
mov
or
test
add
sbb
rol
xchg
fwait
(bad)
(bad)
ret
popf
fmulp
aad
jb
mov
and
movs
add
in
cmp
sbb
xor
jo
in
addr16
in
mov
xchg
in
mov
rcl
xchg
call
jge
(bad)
push
call
sub
dec
daa
test
shl
xchg
pop
gs
dec
fcomp
scas
cmp
pop
in
scas
popf
(bad)
inc
sub
and
cmp
xchg
in
rcl
stc
sbb
lock
push
hlt
mov
push
stc
jg
retf
out
fld
push
iret
xor
adc
jae
add
sub
inc
movs
add
arpl
lahf
pop
xor
xchg
push
push
mov
movs
pop
add
push
btc
jecxz
jmp
cmp
pop
aas
jl
mov
mul
jg
cmp
mov
scas
enter
push
push
cmps
in
and
in
adc
cmp
les
mov
and
iret
add
mov
out
lock
xor
repnz
add
add
xchg
or
mov
adc
xor
lods
cmp
xor
and
in
call
and
and
pushf
(bad)
ins
cld
sub
add
out
and
mov
fstp
cmps
ret
add
ins
cld
xchg
aam
dec
sub
(bad)
loope
xchg
inc
cmc
fsub
inc
js
retf
adc
test
ror
mov
jl
das
jbe
cmp
mov
repz
lds
out
adc
in
add
mov
inc
push
enter
and
adc
mov
cmp
sbb
sti
rol
push
lock
push
rcl
leave
mov
jbe
iret
dec
xor
jno
cmp
mov
lods
lahf
sub
dec
outs
fcom
mov
lods
es
and
fcmovu
into
jnp
jns
cs
mov
in
xchg
push
cwde
scas
adc
pop
inc
push
xchg
out
jo
push
in
popf
in
iret
dec
xor
sahf
sahf
push
sti
inc
cmp
sub
out
loopne
hlt
test
sub
and
inc
jl
mov
mov
das
lea
mov
mov
imul
push
aam
je
aad
jb
add
sti
movs
xor
cmps
sbb
mov
in
cwde
sub
cdq
jge
sbb
cmp
in
or
cmps
jl
aas
shr
stc
retf
std
aam
lahf
daa
push
push
daa
icebp
jle
lahf
(bad)
movs
jns
mov
inc
sub
or
in
lock
test
shl
pop
or
dec
mov
mov
pop
sub
bound
mov
outs
cdq
scas
test
fimul
adc
mov
stos
test
ror
adc
push
jle
mov
cmc
fadd
lea
mov
sar
dec
mov
and
push
test
and
pop
scas
mov
pop
std
(bad)
movs
(bad)
jo
and
lds
mov
retf
xor
dec
xor
xchg
dec
aam
dec
xchg
jle
mov
fld
pusha
fisub
clc
lods
sbb
xor
mov
pop
pop
mov
sbb
pop
xchg
test
nop
pop
dec
(bad)
jecxz
nop
fisttp
sub
pop
icebp
xchg
pop
jg
int
or
push
in
push
mov
push
inc
cli
sar
xchg
push
imul
nop
push
js
rcl
cli
or
mov
xchg
shl
pop
(bad)
dec
outs
out
test
inc
jg
movs
adc
out
fsub
addps
ins
test
lock
inc
movs
retf
and
aas
xor
lock
jae
pop
sub
cmp
dec
repz
retf
pusha
pop
iret
inc
nop
mov
xlat
aaa
shr
icebp
das
push
mov
out
jmp
dec
dec
(bad)
std
add
jo
mov
es
adc
push
in
xor
imul
std
cs
enter
add
(bad)
in
shl
ror
cmp
push
push
adc
adc
mov
mov
hlt
adc
adc
ins
ret
cmps
fnstsw
or
or
push
leave
sahf
cli
adc
mov
fidiv
push
push
jo
imul
mov
add
movs
pop
sub
inc
imul
jno
addr16
dec
iret
jo
loope
pop
test
and
or
rcr
movs
pop
call
pop
fwait
scas
out
mov
sbb
inc
and
cmps
imul
(bad)
and
xchg
pop
pop
icebp
sbb
movs
jae
neg
xchg
rcl
inc
arpl
ja
fisttp
add
jle
dec
dec
or
cld
outs
lds
mov
inc
jmp
iret
inc
cmp
jle
loope
sub
aas
scas
mov
pusha
lods
add
lock
popa
es
ins
push
test
sub
mov
int3
cli
mov
jecxz
stc
push
outs
test
cwde
xchg
sub
mov
mov
sub
js
arpl
adc
mov
sahf
rcr
test
adc
and
bound
fld
pop
jmp
pushf
xchg
xchg
std
mov
cmp
dec
enter
sbb
mov
add
xchg
mov
mov
in
aas
cld
xor
jl
cmp
mov
daa
out
ss
jo
lea
les
(bad)
(bad)
cdq
aad
xchg
shl
pusha
xor
addr16
inc
out
repz
push
shr
sub
pop
out
sub
cmp
sar
enter
inc
lahf
test
pushf
push
lods
push
lahf
and
jge
pusha
sbb
pop
lods
adc
mov
gs
sahf
sbb
cmp
aad
sub
call
push
outs
adc
xor
fs
add
in
dec
inc
stc
jnp
xchg
cdq
xor
jnp
sahf
sbb
mov
pop
jg
pop
repz
ins
cld
cmp
out
daa
jae
ds
fisub
fidivr
(bad)
lods
adc
or
lods
(bad)
leave
out
fcom
mov
adc
push
popf
cs
mov
pop
xor
fs
loop
cmp
icebp
out
mov
fstp
fist
ss
inc
rcl
mov
or
push
inc
inc
in
call
addr16
pusha
(bad)
call
sub
inc
and
mov
pop
jae
rol
fwait
jecxz
inc
fsubr
jmp
xchg
mov
sub
xchg
xchg
adc
out
and
out
sbb
cmp
xor
sahf
jecxz
mov
aaa
icebp
pop
xor
xchg
outs
xchg
push
sbb
xor
or
daa
ret
loope
xchg
ja
daa
(bad)
push
dec
ds
test
mov
ficomp
sbb
lock
sti
sub
into
jno
ins
outs
add
data16
sub
in
xor
jmp
push
sti
or
mov
aad
ins
pop
sbb
(bad)
das
enter
daa
jmp
inc
xchg
xchg
outs
sbb
cld
(bad)
loope
dec
aam
dec
dec
xchg
rcl
mov
ds
push
(bad)
and
adc
mov
popf
hlt
popf
not
int3
pop
jbe
or
pop
push
or
test
aad
sub
jp
mov
fwait
add
pop
div
dec
aas
lahf
pop
add
push
sbb
xchg
movs
daa
cmp
jne
mov
adc
pop
dec
jnp
js
pusha
sbb
daa
js
jg
push
or
scas
adc
js
adc
mov
sbb
(bad)
push
xor
adc
and
ror
add
outs
push
inc
popa
mov
and
cmps
jl
outs
ds
inc
mov
add
ror
std
in
outs
xor
int
fcom
arpl
lds
dec
int
cmc
add
fwait
push
cmps
test
xchg
add
add
ins
aad
daa
mov
mov
cmp
push
mov
cmps
cs
mov
fsub
popf
dec
ds
jnp
mov
push
lahf
jmp
or
mov
dec
pop
mov
pop
mov
ss
mov
rol
aam
stc
leave
mov
mov
jmp
mov
mov
cmps
mov
mov
in
cmp
(bad)
xor
in
mov
push
scas
outs
pop
aaa
pop
add
xchg
psrlq
inc
push
mov
jp
in
xchg
lds
sub
jl
mov
ret
aam
mov
and
sar
jg
sbb
mov
xor
sti
test
adc
push
jl
mov
movs
outs
rcl
inc
xchg
and
mov
pop
mov
mov
jo
lahf
inc
mov
test
cmp
or
mov
jg
int3
leave
cli
cli
je
call
hlt
jnp
cmp
xor
xor
mov
mov
push
inc
mov
inc
mov
mov
fdiv
outs
xchg
cdq
mov
push
cmp
imul
push
test
ins
jae
jl
sar
jg
mov
lahf
mov
ins
xor
ins
icebp
in
sub
neg
loopne
lds
jae
cmp
and
int
xchg
jge
and
(bad)
sub
cmp
cmp
imul
ja
adc
lods
push
clc
mov
dec
ror
mov
shl
movs
icebp
shl
popa
mov
adc
(bad)
pusha
out
mov
push
or
cmp
out
bndldx
jne
es
xchg
es
mov
add
into
cld
cli
js
fld
scas
add
xor
jmp
popa
repz
and
pop
pop
repz
push
call
xor
sub
ja
pop
imul
jae
loopne
pop
call
inc
mov
movs
inc
aam
jns
mov
imul
push
dec
jp
xor
jae
mov
adc
xchg
fwait
arpl
dec
jns
aaa
fisttp
lock
inc
ret
mov
aas
ss
call
dec
cld
mov
cld
mov
or
lds
jne
and
inc
jns
xor
sub
arpl
movs
mov
shl
mov
or
jp
icebp
rol
mov
int3
cmps
add
pop
jp
int
sbb
pushf
fcomp
xchg
or
push
rcr
test
mov
and
add
popf
adc
enter
call
popf
pushf
loope
pop
mov
ja
loop
mov
sbb
pop
jae
add
lock
cmc
ret
pop
dec
call
push
test
mov
ret
fcmovnbe
or
arpl
aaa
call
movs
std
jmp
jns
repz
add
sbb
jmp
test
adc
jb
pop
adc
retf
popa
shr
int3
inc
dec
adc
stos
mov
inc
push
ret
adc
outs
mov
lods
bound
push
and
out
shl
pop
push
shr
add
das
cmp
xor
cmp
fldenv
push
jp
xchg
pop
or
xor
(bad)
sahf
and
enter
retf
mov
adc
out
outs
push
lods
and
iret
pop
into
sbb
fld
jmp
test
movs
mov
pushf
idiv
fwait
adc
out
xchg
sbb
into
enter
add
pop
add
call
xor
ins
sub
add
rol
call
jmp
imul
xchg
sub
sahf
shl
dec
xor
call
repnz
lea
test
(bad)
or
lock
jnp
and
fbld
add
shl
and
push
mov
lods
cdq
xor
es
fwait
mov
pop
sbb
mov
mov
cmp
jnp
shl
out
shl
mov
lock
sbb
gs
add
ficomp
test
push
or
inc
stos
or
xchg
jb
push
or
(bad)
shl
pop
repnz
xchg
sbb
out
push
ret
jmp
aad
mov
jno
imul
iret
ja
mov
call
pop
pop
test
and
pushf
inc
and
cli
imul
pusha
test
(bad)
mov
mov
xchg
cld
(bad)
in
cmps
sti
ins
dec
loop
mov
push
cwde
fs
icebp
and
xor
jecxz
jb
je
inc
jno
out
stos
mov
loop
xor
(bad)
outs
jmp
rcr
outs
fist
dec
sbb
dec
mov
imul
imul
jg
xor
shr
pop
push
push
ds
mov
push
xchg
or
mov
adc
mov
adc
out
pop
mov
push
push
jbe
cmc
sbb
mov
cmp
outs
stos
cmp
push
jnp
cmp
arpl
and
jns
sub
fcomp
fwait
cmps
lock
jbe
stos
jns
push
mov
pop
lods
shl
mov
or
xrelease
retf
mov
mov
popf
cld
adc
sub
leave
jae
adc
imul
int3
sbb
sbb
dec
pop
push
push
or
add
jecxz
cwde
in
data16
push
push
mov
icebp
ret
mov
or
pop
iret
pop
ffree
nop
sub
xchg
fidiv
sub
jne
(bad)
cmc
outs
sbb
jb
lahf
push
xchg
loopne
and
movs
lods
ins
repnz
xor
out
mov
add
hlt
mov
hlt
mov
loope
inc
xor
lods
scas
cmp
or
push
jno
push
imul
jp
and
cmp
scas
rol
retf
xchg
add
scas
or
inc
mov
lods
cmps
(bad)
xchg
mov
mov
push
pop
popf
aad
aam
adc
dec
xor
sub
pushf
mov
fcmovnb
jg
push
in
cld
cmp
inc
mov
push
popf
cmp
push
xor
test
pushf
cs
bound
and
dec
gs
fcomp
pushf
sub
nop
adc
(bad)
(bad)
adc
movs
daa
not
daa
jp
mov
mov
inc
nop
mov
lahf
aaa
xchg
mov
jae
pop
or
in
pop
fs
imul
mov
jns
sub
rol
or
mov
xor
clc
add
cmps
xor
xchg
mov
lds
push
dec
cs
mov
enter
clc
sub
sub
int
jmp
addr16
dec
xor
push
jmp
sbb
cld
mov
dec
ret
mov
sti
jp
cwde
push
jbe
fcmovnb
leave
adc
leave
scas
sahf
jmp
rol
jb
pop
sahf
xor
cli
push
push
add
outs
(bad)
push
sbb
ret
dec
lock
sbb
cld
sahf
ror
pop
outs
push
inc
clc
int
add
jecxz
int3
sbb
cld
test
ja
pop
sub
int
stos
sbb
aad
into
les
shr
push
xor
in
inc
add
(bad)
out
mov
arpl
pop
xor
mov
test
fs
mov
mov
fisub
sub
jg
scas
loopne
call
or
sub
loope
or
or
scas
aas
imul
pop
xchg
es
cwde
jnp
dec
bound
dec
popf
sbb
out
scas
jle
xor
daa
push
(bad)
sbb
push
popf
out
mov
fistp
sti
loopne
mov
ror
inc
mov
jb
push
mov
cli
shrd
adc
out
sbb
adc
mov
aad
mov
les
addps
mov
mov
test
jns
cmp
mov
(bad)
stc
mov
daa
push
rcr
inc
popf
xchg
push
mov
sahf
cmovo
lods
sbb
test
sbb
mov
pusha
out
xchg
jge
stos
pop
hlt
mov
pop
shl
cmps
mov
sub
push
sub
ins
push
cmp
(bad)
ficomp
int3
gs
rcl
(bad)
idiv
pop
repz
sub
lahf
shr
mov
rcr
mov
jo
cmp
repnz
adc
popa
in
inc
jno
dec
pop
xchg
aam
or
(bad)
nop
popf
pop
mov
push
sbb
xchg
dec
sbb
jb
mov
mov
in
dec
xor
(bad)
adc
ins
js
adc
aaa
retf
or
jmp
jo
dec
in
fidivr
cmp
cmp
cmp
bound
out
mov
sbb
mov
ret
xchg
jl
(bad)
sti
pop
arpl
pop
add
fcom
adc
jbe
inc
xchg
cmp
mov
call
jb
repnz
neg
push
pop
add
and
or
mov
aas
cmp
loope
or
aam
fucomp
outs
mov
adc
test
xchg
imul
xchg
mov
fbstp
call
mov
mov
pop
push
stos
lds
mov
fadd
out
(bad)
mov
jle
cmp
sbb
push
pop
jmp
adc
xchg
xor
xor
jb
mov
mov
dec
fdivr
into
cmp
or
mov
xor
xchg
in
sbb
mov
int3
std
xchg
xor
(bad)
adc
adc
inc
in
int
nop
into
imul
mov
test
shr
ins
or
loop
lods
jmp
dec
cmps
lds
and
and
xchg
push
cmp
mov
xchg
sbb
cmps
in
sbb
xor
jae
lea
cmp
fdivr
or
fwait
pop
cli
or
out
adc
or
mov
adc
push
pushf
shl
adc
inc
inc
(bad)
add
push
sbb
xchg
add
out
add
outs
(bad)
push
(bad)
out
and
cld
retf
and
pop
in
adc
cld
leave
mov
inc
lds
out
add
dec
push
xchg
pop
jne
out
inc
das
xor
movs
jg
inc
test
mov
mov
dec
repz
(bad)
aad
or
jne
mov
dec
test
sub
(bad)
or
cli
sbb
sahf
push
movs
mov
xor
(bad)
mov
out
shl
(bad)
leave
or
inc
adc
adc
push
mov
cmp
imul
mov
jae
clc
fnstsw
sub
mov
xlat
dec
xor
fstp
sub
cs
popf
mov
jae
dec
sbb
addr16
dec
mov
lods
sbb
sub
mov
shr
(bad)
and
ja
movs
cli
out
cmp
mov
test
pop
mov
or
stos
or
inc
dec
fwait
cld
mov
icebp
dec
mov
daa
dec
push
pop
imul
lea
add
(bad)
fld
imul
jle
jmp
cmc
cmp
fisub
fisttp
push
mov
pop
xor
cmp
lods
mov
xor
push
nop
mov
test
xor
test
add
mov
mov
addr16
ret
(bad)
add
xor
in
mov
je
shl
xor
cdq
fwait
leave
iret
cmps
imul
sar
xor
pop
lahf
mov
dec
mov
cmp
fs
scas
ss
add
or
xchg
push
in
ins
xlat
movs
loop
dec
sbb
sub
hlt
test
push
or
mov
imul
stc
push
cmp
jnp
add
repnz
dec
mov
mov
jmp
mov
push
test
in
add
adc
mov
imul
in
jae
dec
xor
stos
repnz
jge
mov
test
mov
cmp
movs
xchg
cmps
and
popa
addr16
jns
imul
scas
jne
pop
test
jae
dec
movs
xchg
stc
jl
sbb
fistp
inc
pop
je
xchg
shr
je
clc
cmp
jmp
jbe
jmp
push
mov
and
in
outs
mov
sbb
xchg
mov
push
mov
fild
out
shl
lock
ins
in
in
push
xlat
gs
pop
push
xchg
movs
adc
xchg
push
dec
xor
aas
lea
lea
jns
mov
pop
imul
add
and
mov
mov
and
call
sub
mov
bound
add
into
mov
adc
clc
adc
mov
sar
ins
shl
cmp
sar
xor
iret
pinsrw
add
push
test
test
hlt
pushf
and
mov
aad
cmp
test
and
xchg
fs
aas
xchg
pop
cmp
data16
enter
and
das
mov
test
(bad)
jo
clc
test
aas
iret
mov
inc
inc
aad
stos
add
ds
xor
js
inc
mov
or
jne
lds
retf
ins
pop
sub
rol
sbb
adc
xchg
jae
or
sub
jbe
enter
adc
cmc
push
adc
add
pop
loopne
cmc
idiv
lock
mov
aam
inc
jb
test
fmul
aaa
sar
int
cs
repz
jbe
leave
push
mov
mov
sbb
out
push
sbb
mov
add
push
icebp
inc
xor
lods
xchg
cs
call
lea
cmc
outs
ja
adc
fcomp
ror
mov
repnz
std
mov
(bad)
clc
jne
fcmovu
stos
mov
hlt
bnd
enter
mov
ret
dec
inc
mov
pop
mov
inc
shl
sub
test
fisttp
sbb
adc
out
jmp
inc
cmps
mov
jg
retf
mov
jmp
cwde
mov
mov
daa
cmp
or
sub
retf
push
mov
inc
xor
(bad)
pop
pop
add
ds
fidiv
and
mov
les
push
sub
fsubr
les
inc
rcl
xchg
rcr
cld
aaa
and
add
jbe
retf
xchg
lea
dec
out
pop
je
iret
dec
xor
arpl
scas
mov
dec
xor
adc
iret
or
arpl
mov
sti
retf
cdq
int
ret
add
inc
pusha
sub
cs
iret
xchg
sub
and
pop
fist
aam
push
dec
clc
retf
pop
shl
imul
ror
push
jmp
jecxz
enter
push
mov
sub
sbb
shl
in
cmp
(bad)
stos
loope
jbe
inc
pop
jmp
or
mul
ret
int
(bad)
popa
sti
stos
lds
adc
popf
aaa
xchg
pop
scas
and
outs
push
call
mov
mov
push
xor
lock
inc
in
pushf
or
mov
outs
jg
cmp
ins
(bad)
fld
movs
mov
call
rol
ror
clc
cdq
imul
pop
push
out
or
(bad)
nop
(bad)
into
mov
retf
stc
out
fsubr
sub
test
xchg
ror
mov
jle
enter
(bad)
sub
in
arpl
xchg
push
out
popa
jp
cmp
mov
and
push
pushf
inc
or
sbb
xchg
mov
fsub
lds
inc
cmps
push
and
add
mov
stos
mov
movs
popa
retf
(bad)
mov
jae
or
sub
test
loop
cmps
sub
repnz
cs
or
dec
dec
addr16
in
sbb
in
cli
xchg
fwait
mov
sar
test
aad
push
inc
and
loop
jb
or
les
call
add
scas
sbb
icebp
ja
sti
fwait
movs
jno
pop
sub
jmp
retf
dec
xchg
add
aas
cdq
fsub
jae
ins
sub
cmp
push
(bad)
xor
mov
jbe
fadd
retf
xchg
sub
push
mov
test
push
cmp
pop
xor
jne
jne
sbb
sub
lock
mov
std
push
xchg
aam
push
jbe
test
inc
cmp
ins
fst
ins
mov
or
dec
push
fisttp
aad
push
and
and
and
pop
jnp
push
add
cmps
shld
cld
adc
imul
das
(bad)
adc
out
and
sbb
sbb
repnz
cmp
das
fild
lds
dec
inc
add
and
fdiv
sbb
pushf
dec
cmp
fsubr
into
rol
inc
xor
add
push
retf
aas
xor
in
aam
xor
push
popa
ret
push
or
adc
mov
xchg
lea
mov
sub
pop
pop
dec
pop
dec
xchg
mov
push
cs
adc
fld
sbb
gs
jmp
test
sti
loop
fcom
push
neg
inc
hlt
scas
pusha
push
sahf
or
stos
push
mov
pop
inc
in
jl
daa
xchg
push
xor
xor
mov
inc
mov
(bad)
fisttp
scas
ins
repnz
jmp
inc
ret
mov
mov
push
les
jg
ror
sub
mov
enter
pop
pop
dec
xor
xchg
inc
inc
ins
sub
add
pop
inc
shr
jg
test
mov
pushf
mov
ins
popa
mov
lahf
cmp
add
push
int3
mov
mov
leave
cdq
or
dec
mov
in
and
inc
and
cmp
xor
mov
xor
mov
iret
mov
jl
mov
add
xchg
mov
jnp
pop
mov
jbe
js
xor
inc
inc
sbb
and
dec
into
in
pop
mov
movs
and
icebp
lods
std
mov
pop
xchg
out
xchg
ins
jbe
in
les
fcmovu
fld
imul
stos
xchg
push
out
lods
pop
xchg
mov
dec
out
jge
xchg
(bad)
rcl
jnp
jmp
aam
arpl
lea
out
dec
test
mov
cmp
inc
das
das
dec
imul
dec
fdivr
rcr
dec
imul
loopne
dec
mov
imul
das
sbb
inc
sub
aam
data16
jae
inc
mov
add
aad
sub
cmps
mov
sti
pop
push
movs
(bad)
xchg
pop
pop
test
shrd
push
push
(bad)
xchg
test
jmp
dec
scas
inc
repnz
leave
jle
cmp
adc
int3
into
pop
cmp
rol
into
ret
arpl
jmp
jge
or
shl
or
clc
pop
pop
mov
xchg
pop
xor
mov
out
jbe
test
sub
jno
sahf
inc
(bad)
push
ins
clc
test
stos
clc
(bad)
ja
inc
cmps
dec
jo
or
pop
xchg
cmp
stc
cmp
loopne
sub
jecxz
jnp
fsub
daa
add
xchg
stos
cmp
dec
dec
jns
ja
vmovaps
cmp
adc
jl
gs
cmp
fcmovu
call
loopne
cli
adc
cmp
(bad)
dec
loopne
xchg
dec
xor
pop
int3
les
jge
jle
sub
pop
sti
shr
or
inc
mov
out
fidivr
iret
(bad)
sbb
push
mov
adc
es
sbb
jo
bound
sti
cmp
or
pop
dec
mov
data16
imul
into
add
adc
pop
sub
xchg
cmp
sahf
fstp
adc
cmps
xchg
aad
fcomp
dec
rcr
or
cmc
fidiv
fcom
cmp
jmp
xor
mov
(bad)
xor
adc
nop
fsubrp
mov
inc
xchg
loope
repz
stos
das
cmc
test
add
pop
and
es
mov
pop
fsub
or
shl
push
and
or
mov
mov
mov
or
xlat
cmp
inc
push
or
stos
adc
das
add
stos
xchg
xchg
inc
adc
cmp
fild
clc
(bad)
jecxz
or
cmp
pop
cmp
mov
ins
xor
je
test
push
xor
xchg
repnz
jnp
or
jmp
add
pushf
scas
rol
fldpi
les
jg
fcom
sti
pop
in
test
mov
mov
lahf
div
(bad)
or
ss
sbb
pop
inc
lods
sahf
dec
push
mov
inc
mov
mov
fwait
aam
pop
retf
xor
mov
fdivr
out
push
jne
bound
sub
vshufps
pop
loop
add
inc
inc
aam
mov
mov
push
je
pop
test
les
mov
mov
std
std
sub
push
pop
stc
jae
in
adc
rol
add
push
fisub
cdq
or
in
mov
cmc
mov
dec
add
mov
cmp
lahf
xor
push
cmp
pop
push
mov
dec
mov
mov
jb
mov
outs
bound
pushf
adc
lahf
add
call
mov
sbb
popa
jle
(bad)
dec
xor
sti
or
jmp
dec
mov
push
(bad)
adc
(bad)
les
mov
in
out
push
mov
movzx
push
retf
push
cmp
cmp
and
(bad)
mov
pop
push
pop
push
cmps
loop
mov
push
cs
cdq
cmps
jne
lds
inc
push
sbb
jecxz
inc
inc
push
sbb
lahf
dec
(bad)
outs
adc
mov
and
aam
mov
inc
fst
xchg
mov
mov
and
xchg
mov
push
sub
xor
mov
inc
hlt
fimul
sub
sbb
out
nop
cmp
movs
mov
fist
inc
fimul
push
jnp
ins
and
add
mov
stc
jb
movs
pop
bound
movs
push
or
mov
jbe
inc
or
lds
loope
test
les
outs
stc
shl
dec
test
mov
push
pop
inc
jmp
jnp
iret
ins
push
rcl
jb
stos
push
mov
punpckldq
and
jmp
sub
test
pop
jno
outs
pop
shl
es
iret
loope
in
icebp
in
aam
(bad)
jns
mov
jecxz
inc
movs
cmp
fucomi
not
pop
mov
sbb
cli
mov
sub
xchg
cs
sbb
scas
stc
cmps
mov
push
mov
lods
(bad)
adc
add
stos
push
xor
xchg
jne
or
hlt
xchg
mov
cmps
jge
fs
fabs
adc
xlat
out
addr16
in
in
pop
mov
push
mov
inc
xchg
mov
sub
fadd
mov
enter
pushw
int
imul
push
fcmovu
sub
outs
or
cmp
xor
push
mov
push
jge
jne
pop
inc
imul
movq
cmp
jl
cdq
push
stos
retf
movs
aam
test
jecxz
pop
push
xchg
lods
xchg
pop
pop
std
dec
ror
mov
sub
daa
xor
ja
cmps
pop
adc
popf
arpl
ja
xor
shl
xor
pop
cmps
or
jns
fwait
retf
loope
fstp
(bad)
pop
jmp
add
call
dec
mov
cmp
mov
fidivr
pop
repnz
or
aas
or
ja
push
sahf
xor
mov
adc
mov
pop
sar
std
cld
and
mov
mov
ret
inc
sub
retf
lock
jmp
mov
ret
mov
fcomp
inc
sub
xor
jne
cmps
lea
pop
loop
inc
js
cmc
pop
mov
fmul
add
xlat
(bad)
je
push
adc
add
and
test
inc
mov
popf
leave
mov
dec
enter
fwait
adc
pop
fisttp
jmp
xor
pop
cmp
or
lock
rcr
jp
jo
fldcw
jl
pushf
mov
mov
dec
shl
adc
movs
pop
xchg
leave
dec
lods
push
dec
cmps
cli
or
in
pmullw
push
dec
adc
mov
add
mov
push
jecxz
fwait
jne
es
fdivr
lahf
adc
and
cli
push
inc
rcr
jmp
test
add
push
sbb
inc
stos
dec
xchg
jl
and
and
cwde
dec
ds
mov
retf
call
pop
jns
sbb
cdq
int
add
sbb
inc
loop
inc
rcr
push
leave
inc
mov
aad
dec
pop
and
addr16
adc
sbb
pop
lods
jmp
mov
(bad)
bound
(bad)
mov
jecxz
sbb
(bad)
test
and
dec
jecxz
cwde
add
inc
(bad)
outs
and
xchg
pop
sub
xchg
nop
mov
mov
sbb
add
clc
or
jmp
jne
es
jge
icebp
add
out
adc
push
add
(bad)
fiadd
fisub
pop
sti
test
xchg
mov
stos
sub
dec
daa
arpl
fnstenv
sbb
test
arpl
icebp
cmc
xor
loope
cld
add
xchg
ins
aaa
outs
pushf
loop
inc
test
lahf
das
icebp
jmp
xor
ds
lds
inc
nop
arpl
mov
imul
std
mov
stc
pop
jmp
out
shl
or
test
stos
xor
mov
push
mov
pop
push
inc
shr
mov
inc
xor
fcmovu
adc
mov
add
retf
(bad)
je
mov
bound
stos
add
fucompp
jecxz
sbb
out
pop
out
cmp
sbb
and
mov
scas
mov
scas
mov
jno
mov
pop
xor
cmp
cmps
loop
cmp
in
and
je
hlt
xchg
dec
jecxz
push
inc
adc
jg
cdq
adc
test
pop
cmp
jb
in
movs
mov
push
popa
bound
int3
mov
repz
dec
mov
adc
sbb
fadd
bswap
idiv
push
sbb
mov
jl
nop
outs
inc
dec
pop
dec
mov
shl
push
ss
mov
loopne
or
xlat
ret
ret
add
add
push
jo
fucomip
xchg
lahf
fiadd
push
mov
xor
push
iret
mov
pushf
call
sbb
jb
call
adc
dec
mov
ins
repnz
ja
scas
rcl
jl
sahf
or
and
push
cwde
ret
repz
jmp
inc
jbe
and
xchg
xchg
fstp
sar
stos
or
stos
inc
dec
add
stos
sub
and
or
cdq
enter
retf
setne
ror
mov
popa
mov
mov
pop
xor
pop
push
test
mov
inc
arpl
test
xor
stos
and
xor
pop
(bad)
dec
sub
push
stos
and
cmp
fiadd
and
jl
rcl
mov
retf
out
mov
xor
adc
add
dec
fbld
mov
call
jne
popa
mov
jge
push
add
mov
das
adc
stos
(bad)
push
scas
and
pop
push
lea
movs
shl
lods
ja
mov
aad
lods
mov
stos
shl
cmp
xchg
imul
cmps
mov
inc
push
jmp
and
push
not
ds
xchg
sub
jmp
lods
sub
xor
icebp
dec
ret
sti
in
add
(bad)
mov
fs
pop
nop
cli
mov
imul
mov
or
jns
mov
sbb
pop
or
xchg
jb
pop
jmp
ret
loope
ret
dec
setnp
mov
and
ret
dec
call
pop
std
and
inc
xlat
ror
pop
pop
iret
(bad)
ins
ret
ret
clc
jecxz
push
lds
jp
es
stos
mov
enter
pop
movs
add
sti
and
sub
cwde
jno
(bad)
mov
sti
je
cmp
jb
xlat
mov
lods
sub
in
(bad)
jl
mov
xchg
hlt
out
xchg
outs
xor
lods
sbb
lea
jnp
hlt
mov
fimul
gs
adc
imul
add
and
scas
xchg
lock
jbe
fs
popf
jne
sub
fidivr
jnp
call
jnp
and
not
iret
repz
and
test
scas
mov
fld
jne
xor
std
clc
test
(bad)
cli
pop
jge
out
mov
call
cmp
jecxz
and
pop
mov
int3
push
int3
shr
dec
dec
sub
xchg
repnz
call
call
adc
out
(bad)
mov
push
lods
rcr
dec
gs
inc
popa
push
(bad)
retf
out
and
sbb
fcomp
test
fadd
cmps
mov
cmp
setl
pop
loop
pushf
adc
icebp
cmp
iret
call
add
mov
adc
push
adc
sar
loopne
(bad)
(bad)
cmp
test
js
imul
push
adc
inc
int
mov
fwait
jnp
fcmovnbe
aad
xor
mov
clc
mov
mov
adc
jne
sbb
and
dec
sahf
cmp
inc
loope
lods
(bad)
mov
mov
pop
dec
cwde
push
and
stos
sbb
js
mov
das
ds
aaa
cmp
jno
sub
dec
or
adc
mov
push
cmp
add
adc
call
mov
popa
jecxz
mov
and
sub
into
jnp
fist
pop
lahf
ins
mov
xchg
jp
add
ins
fist
aam
daa
dec
dec
cmc
pop
vpminub
lds
xor
(bad)
outs
sub
inc
retf
pop
inc
mov
mov
ror
sbb
ds
or
stos
lea
pusha
imul
push
jle
or
inc
mov
mov
xor
ret
xor
mov
stc
cmp
or
pushf
inc
jmp
fsubr
xchg
mov
jge
aaa
sbb
fnstcw
fld
mov
sub
xlat
pop
imul
nop
call
pusha
jge
mov
sbb
pop
xor
int3
lods
fnstcw
cdq
aaa
dec
div
add
push
loopne
pop
cs
sbb
loop
fs
push
jno
jg
ja
cmp
pusha
pop
js
lods
add
mov
cmc
sub
xchg
adc
mov
(bad)
sbb
or
cmp
mov
popa
add
sub
stc
rol
outs
retf
xor
xchg
cmc
ret
pop
and
cs
mov
mov
cmp
mov
pop
inc
pop
xchg
jmp
in
imul
pop
push
(bad)
cli
hlt
and
mov
inc
xchg
ja
mov
xor
lahf
jmp
dec
and
sbb
in
inc
stos
jge
icebp
cs
sti
fcmove
stos
pop
repz
cmp
movs
jl
pop
dec
mov
push
inc
fs
cmp
push
pop
adc
mov
js
pop
sub
ins
test
arpl
out
fist
fld
jmp
std
pop
mov
sahf
ret
pop
dec
rcl
int3
inc
sub
xor
xchg
adc
adc
stc
hlt
lds
mov
pop
push
jb
push
jmp
pop
int
sub
out
leave
out
repnz
inc
das
sub
rcl
int
pop
fsub
(bad)
out
pop
xor
fsub
int3
pop
test
and
sub
and
pop
mov
rcr
fmul
xlat
mov
sub
jg
aaa
test
retf
mov
es
jnp
pop
imul
push
imul
pop
out
xor
aam
ret
pop
sbb
js
push
pop
cmp
jb
lock
ror
dec
std
outs
lea
(bad)
fwait
cmp
ins
mov
out
adc
jo
retf
xor
jne
fucom
call
ds
dec
ret
pop
pusha
push
adc
add
xlat
stos
sub
dec
mov
pop
jbe
adc
and
and
sub
fstp
pushf
sub
xor
xor
test
jbe
push
mov
fidivr
xchg
jecxz
dec
push
jg
sbb
jmp
cld
sbb
and
jns
mov
jns
sub
pop
mov
ja
sbb
and
das
fdivrp
xor
pop
test
xchg
push
inc
inc
and
adc
and
push
jg
aaa
xchg
adc
bound
push
jb
imul
mov
and
and
add
int3
cmps
cmps
fisttp
dec
xor
test
jo
inc
mov
xchg
arpl
sbb
stc
(bad)
out
or
popf
loope
xchg
lock
ins
add
inc
dec
and
jb
adc
push
ins
in
lds
aaa
or
sub
adc
les
(bad)
bnd
ret
mov
inc
test
or
in
mov
(bad)
setbe
cmp
mov
add
fld
sub
call
pushf
jno
dec
dec
mov
pop
jns
xchg
jb
(bad)
out
dec
stos
outs
ins
xor
outs
aaa
xor
xor
jmp
or
fimul
movs
test
fdivr
cmp
and
jmp
(bad)
daa
inc
mov
mov
pop
in
dec
push
int
aam
sbb
pop
xchg
pop
pop
rol
fidivr
dec
aas
push
aaa
pop
(bad)
(bad)
sar
inc
retf
test
shr
sbb
pop
inc
mov
loop
(bad)
retf
xchg
sar
je
les
lods
cli
iret
push
jmp
lods
fwait
lods
ret
jae
mov
and
jmp
mov
pop
cld
or
jns
mov
cmp
lahf
xchg
neg
enter
cmps
mov
lds
fidivr
mov
ds
mov
loopne
pop
mov
adc
push
sbb
mov
fmul
lods
mov
pop
repz
xor
aas
std
sar
inc
pusha
mov
dec
stos
dec
add
mov
sub
inc
jno
mov
jbe
add
jle
or
ds
out
(bad)
sbb
mov
stos
and
push
mov
in
xchg
pop
and
std
pushf
cdq
xchg
jecxz
(bad)
jmp
sub
out
and
in
mov
out
dec
sbb
fcomp
push
mov
loop
stos
ret
mov
push
rcr
js
test
push
xchg
push
dec
nop
mov
inc
sub
lahf
add
jmp
xchg
mov
in
add
inc
retf
shl
(bad)
std
xchg
stos
sub
je
jnp
test
or
stos
bound
jne
rol
jae
jecxz
cli
test
cs
lods
cbw
xchg
cld
jnp
and
cmp
fcomp
xor
xlat
add
sbb
mov
mov
cmp
pop
jmp
mov
in
in
dec
ins
inc
loope
(bad)
icebp
inc
adc
in
cli
cwde
push
les
int
and
nop
out
fcom
fnstsw
jnp
mov
xor
je
xchg
jle
mov
sub
and
cli
mov
je
push
inc
imul
mov
stc
(bad)
into
or
dec
pusha
dec
retf
jmp
sbb
cmp
bound
retf
or
xchg
push
loopne
add
pusha
scas
ret
fidivr
ja
mov
pusha
ror
add
sub
xchg
dec
dec
pop
pusha
cld
inc
(bad)
fs
ins
imul
inc
aam
jg
loop
(bad)
sub
and
mov
int
adc
inc
mov
fnsave
push
xchg
inc
sbb
int
sub
fcomp
int
sub
sbb
xchg
in
enter
push
sahf
xchg
rcr
add
fsubr
shl
jmp
xor
jno
sbb
hlt
mov
adc
test
cmps
test
xchg
out
xchg
mov
cld
aam
movs
fadd
dec
mov
iret
leave
and
mov
arpl
sub
pop
pop
in
push
add
cmp
cmps
gs
mov
aam
xchg
hlt
sub
call
sbb
outs
lock
cs
cmps
outs
ret
shr
push
mov
xlat
add
loope
jae
push
adc
shr
mov
popa
inc
xchg
jp
jnp
mulps
ds
stc
push
dec
imul
cmp
mov
(bad)
js
retf
add
pop
neg
adc
ret
and
(bad)
repnz
mov
mov
mov
push
mov
mov
mov
sbb
mov
mov
std
cmp
(bad)
jecxz
ins
ins
rcl
aas
lods
mov
mov
xchg
arpl
jmp
in
mov
cmp
mov
or
clc
add
jo
xor
pop
lods
xchg
in
bound
xchg
into
call
mov
dec
gs
outs
call
repz
jo
jmp
pop
mov
and
leave
ret
hlt
xchg
stos
cmps
push
jmp
lahf
loopne
mov
ins
and
adc
xchg
mov
fdiv
xor
outs
pop
mov
mov
pop
sbb
jge
adc
add
test
std
ret
xchg
inc
cmps
and
or
mov
mov
mov
push
inc
push
in
pop
pop
ret
loope
mov
mov
test
sbb
lock
pop
daa
stos
shl
push
pop
xchg
aad
inc
clc
sub
cdq
addr16
sub
in
mov
mov
(bad)
sub
adc
or
int3
and
imul
xchg
jl
add
dec
hlt
lods
mov
adc
idiv
push
xchg
xor
retf
test
mov
out
dec
cs
pop
mov
jmp
inc
popa
jno
push
imul
arpl
xchg
sbb
ins
inc
mov
sti
ss
int
in
mov
mov
sbb
das
adc
mov
sahf
lods
push
and
inc
jle
fcom
sub
pop
dec
pop
push
pushf
dec
addr16
hlt
daa
rcl
ss
leave
int
xor
mov
xchg
out
xlat
cwde
push
push
mov
ret
inc
dec
popf
loopne
(bad)
dec
dec
pusha
in
inc
and
movs
jno
out
lods
retf
cmp
pop
(bad)
cli
jmp
inc
sub
sbb
xchg
pop
enter
(bad)
sub
fs
cmovle
and
push
stos
scas
pushf
adc
jno
arpl
push
call
in
shr
xor
out
sub
pop
call
lods
clc
outs
inc
pop
jb
fs
jecxz
cmp
inc
dec
jae
dec
(bad)
cmp
leave
aaa
mov
jbe
sbb
inc
pop
call
jbe
sbb
pop
out
xor
dec
(bad)
sbb
in
add
push
mov
(bad)
cmp
cmp
pusha
mov
or
sub
das
xchg
push
push
imul
add
sahf
sbb
movs
xor
xor
test
mov
inc
loope
mov
cs
fidiv
ficom
lahf
mov
dec
add
retf
cmps
imul
ss
scas
pop
lods
inc
cwde
into
xchg
xor
mov
add
ins
cwde
cld
jg
cdq
dec
dec
jne
adc
nop
mov
lahf
enter
sbb
jp
and
ret
jo
push
pop
popa
pop
fstp
or
adc
xor
nop
cmc
mov
xchg
or
push
jnp
stc
data16
sbb
stos
daa
ja
rcr
not
int3
ror
retf
mov
test
cdq
xchg
xchg
out
movs
adc
push
push
cld
pop
xor
les
push
loope
pushf
in
test
dec
add
dec
out
pop
in
xchg
stos
pop
loopne
stc
adc
dec
sub
jnp
xor
sub
retf
mov
dec
mov
cmp
iret
add
rol
jge
aas
mov
xor
call
inc
mov
scas
repz
hlt
mov
push
adc
stc
ror
mov
es
or
push
call
mov
mov
inc
(bad)
jno
stos
in
add
into
pop
ins
das
out
adc
sbb
repz
sbb
push
dec
inc
outs
outs
sub
jbe
enter
jmp
adc
mov
xor
stos
and
mov
mov
pop
repz
push
mov
adc
pusha
fcom
stos
pop
mov
and
mov
scas
pop
add
stos
jecxz
out
bound
cmp
aaa
adc
mov
jno
jnp
cmp
cld
lea
ja
leave
inc
jo
sti
sbb
scas
std
mov
lods
sahf
cmp
jge
icebp
fcmove
add
sub
pop
aad
adc
ror
aad
push
push
jnp
and
or
mov
cmp
aam
stos
loopne
mov
call
test
bound
or
jbe
mov
popf
int3
fnstsw
mov
in
fadd
inc
aaa
dec
sub
outs
sub
adc
das
cmp
adc
ret
xchg
pop
add
sub
and
dec
ror
retf
mov
xchg
push
icebp
mov
popa
and
jmp
imul
imul
movs
sbb
jecxz
xchg
sbb
cmps
dec
xor
jmp
les
cmp
sbb
xlat
sbb
imul
push
or
xchg
jle
mov
fsubr
fucomip
gs
stos
add
ret
movs
out
movhps
add
sub
pop
popa
rcr
mov
in
inc
repz
xor
shl
(bad)
in
pop
jp
mov
add
dec
hlt
fcomp
test
mov
sub
cld
mov
setae
or
stc
(bad)
ja
jne
dec
xchg
sbb
test
ins
push
cmp
mov
stc
retf
push
dec
outs
push
shl
inc
hlt
stos
jnp
add
(bad)
mov
pop
xchg
lea
dec
jno
mov
sub
loopne
icebp
les
data16
mov
jmp
add
aam
(bad)
jecxz
vpshufhw
test
mov
stos
jmp
mov
add
cs
(bad)
mov
xor
pop
stos
call
push
das
arpl
(bad)
inc
xchg
ja
lods
aam
adc
mov
mov
in
outs
mov
or
imul
arpl
ins
loope
mov
mov
sub
and
push
inc
adc
mov
adc
xchg
sbb
in
adc
fwait
adc
lea
mov
and
push
retf
pop
outs
dec
in
jmp
cdq
xchg
enter
push
or
mov
aad
cmp
dec
sub
aam
inc
xor
mov
ret
dec
mov
std
xor
inc
xchg
jmp
jecxz
inc
mov
mov
mov
stos
adc
xchg
inc
test
mov
not
out
std
outs
and
ror
movs
mov
dec
and
ret
sar
sub
out
and
sub
or
xchg
inc
push
mov
movs
cmps
pop
cdq
cmp
sbb
jge
pop
setae
and
dec
adc
pop
(bad)
cmc
jl
fimul
addr16
imul
fwait
push
out
fmul
sbb
(bad)
cmp
aad
int
and
outs
or
xor
test
push
push
adc
sub
push
sti
mov
add
imul
pusha
mov
arpl
retf
mov
jb
mov
frstor
jae
and
pusha
fild
scas
out
jae
dec
mov
into
mov
scas
ror
das
dec
pop
jbe
movs
jns
adc
stc
pop
aaa
mov
jbe
jecxz
xor
xor
mov
push
scas
jne
jg
push
sbb
sbb
xor
(bad)
inc
cmc
ss
div
push
push
scas
pop
out
xchg
sahf
fwait
pop
and
adc
mov
(bad)
xchg
das
test
adc
js
jbe
inc
jbe
cmp
js
into
ss
out
inc
fistp
push
test
cmp
pusha
push
sbb
aaa
xchg
stos
mov
or
(bad)
out
mov
mov
inc
movs
mov
xchg
or
xchg
leave
in
push
xchg
in
aaa
pop
mov
shl
in
jg
lock
cmc
loopne
scas
push
jbe
sub
clc
inc
push
cmp
cmp
xor
addr16
shl
cmps
mov
ja
pop
in
inc
mov
mov
test
sub
imul
bnd
add
fmul
mov
imul
shr
mov
fldcw
retf
mov
sbb
cmp
jbe
dec
sbb
jno
fdivr
aaa
mov
cmps
scas
jmp
fucom
fnstsw
mov
(bad)
ins
dec
and
scas
xchg
dec
sub
dec
inc
addr16
push
(bad)
push
nop
jno
loopne
imul
fist
fld
stc
(bad)
(bad)
cmp
ins
out
dec
xchg
stos
jmp
jno
jnp
dec
add
std
stc
adc
and
mov
and
iret
lds
ret
fcomp
inc
cld
cli
cmp
mov
mov
in
lods
or
xor
jae
adc
sbb
enter
xchg
jo
dec
or
push
fistp
into
(bad)
cmp
jge
das
cmp
xlat
out
cmp
cmps
xor
xor
sahf
jge
cmp
and
dec
sub
pop
mov
mov
aad
inc
leave
sar
add
pop
nop
xchg
xchg
push
jmp
add
ins
sub
jecxz
fcmovu
repz
push
retf
iret
popf
sbb
dec
mov
pusha
xor
mov
jmp
cmp
mov
popf
cmp
mov
inc
fidiv
arpl
nop
sub
lea
fdiv
enter
mov
in
ss
std
inc
inc
daa
inc
in
or
mov
xor
fidiv
cmp
clc
das
daa
jo
jno
sub
je
dec
clc
shr
mov
ror
neg
mov
cmps
xor
xor
enter
push
add
arpl
pop
fnstenv
mov
pusha
shl
pop
pop
imul
call
pop
xor
fmul
push
sbb
cwde
cmp
imul
dec
jb
pop
and
ins
enter
mov
adc
jle
test
ror
inc
add
push
xchg
add
ficom
ffree
xor
adc
jmp
and
adc
mov
pop
xor
ret
pop
push
js
push
aaa
dec
scas
out
xchg
push
pop
dec
jmp
fldcw
push
pop
xor
loop
imul
push
cmc
pop
cmp
sbb
iret
or
inc
shl
div
out
fcomip
xchg
je
out
rcr
and
stos
mov
mov
pop
repnz
pop
push
cmp
cmp
setb
adc
rcr
fcmovne
xlat
aaa
adc
mov
test
mov
inc
jb
fs
add
push
pop
or
fcomp
jne
xchg
jge
int3
push
lea
or
sub
lds
xchg
outs
dec
jmpw
mov
mov
mov
add
xor
inc
push
mov
test
inc
or
(bad)
repnz
jnp
call
adc
dec
xchg
sbb
mov
mov
(bad)
and
mov
xchg
bound
shl
cld
adc
scas
or
mov
pusha
vmovshdup
stos
dec
enter
and
dec
xor
out
mov
mov
lds
cmp
mov
jge
out
push
sub
xor
xor
sbb
clc
scas
cmp
mov
adc
xlat
out
outs
mov
push
repnz
test
mov
hlt
loop
test
adc
push
shl
fnstcw
mov
add
push
adc
jne
xchg
les
rol
adc
out
cli
jmp
ror
jno
adc
and
inc
add
or
out
and
mov
ret
mov
inc
lahf
push
ja
or
xchg
push
leave
in
mov
xlat
cs
mov
inc
xor
stos
jge
jle
and
or
(bad)
sahf
aaa
mov
pop
stc
repnz
call
push
cmp
test
cmp
add
out
add
xchg
inc
or
jns
sbb
push
iret
xchg
sub
out
scas
(bad)
bound
movs
sbb
dec
jmp
push
mov
adc
ds
pushf
dec
xor
pop
daa
or
or
mov
mov
push
ret
retf
and
inc
and
jle
leave
inc
inc
loopne
xchg
sub
mov
inc
mov
adc
dec
adc
push
ss
push
dec
cli
mov
retf
pushf
(bad)
mov
sti
cli
add
dec
jmp
out
arpl
shl
stc
add
push
in
(bad)
push
aas
popa
pop
xor
popa
cmp
ss
popf
popa
ds
not
push
pop
daa
xchg
mov
push
dec
pop
or
or
and
bound
aas
xchg
out
es
inc
dec
(bad)
sbb
push
sub
shl
mov
add
cmp
fldl2t
mov
rcl
xchg
sub
mov
sar
jbe
mov
dec
lock
jnp
jns
dec
aaa
mov
data16
xchg
jmp
je
add
jmp
out
sbb
fbstp
jp
mov
cmp
test
mov
push
repz
pop
jge
jnp
in
(bad)
stos
repz
xchg
imul
inc
jp
movs
in
out
(bad)
sbb
or
jo
xchg
pop
pop
mov
inc
not
es
xchg
push
in
js
xchg
mov
adc
clc
es
jg
sub
mov
cli
aam
inc
leave
xor
push
adc
or
cmp
sbb
mov
add
ja
sub
(bad)
call
dec
pop
and
mov
push
imul
cdq
dec
(bad)
push
sub
adc
fwait
inc
mov
addr16
adc
sub
cmp
nop
jge
push
bnd
jmp
push
adc
mov
int3
popf
and
pushf
push
push
ror
hlt
jge
xor
inc
mov
dec
mov
and
popf
fdivrp
push
jnp
ins
test
(bad)
push
rol
cld
sbb
rcl
push
pop
addr16
rol
dec
sbb
ss
out
xchg
xor
jno
in
jne
xor
lahf
push
jmp
jle
mov
div
jns
pop
inc
lock
pusha
adc
movs
cmps
and
mov
adc
xchg
cld
mov
or
test
jmp
fst
cmp
nop
leave
fs
push
fcom
dec
xchg
push
iret
inc
ja
das
cmp
mov
rcl
mov
pop
sub
dec
mov
add
jecxz
fbld
shl
jp
arpl
es
sbb
cld
mov
int3
iret
cli
ins
sbb
pusha
enter
or
lods
xchg
mov
call
pop
in
or
and
xor
cmc
mov
int3
cmps
test
cmp
mov
sti
rcl
test
sub
call
jp
popf
cmp
xchg
pop
hlt
inc
ficomp
test
aad
or
jo
movs
std
and
jp
fst
pop
out
pop
mov
adc
cld
scas
push
add
(bad)
repnz
shl
and
aas
and
shr
xor
xor
ret
pushf
dec
into
call
data16
dec
sub
sti
aas
dec
cmps
xchg
xchg
xchg
(bad)
repnz
and
leave
xor
ja
pusha
aam
mov
lock
push
leave
jae
and
jge
sub
inc
inc
pop
xchg
jmp
(bad)
std
xor
ret
loop
(bad)
cmp
and
sar
push
add
lods
jmp
icebp
dec
cmp
add
jg
inc
nop
mov
rcr
dec
int
add
mov
pop
call
ret
sub
je
fs
call
cli
psadbw
pop
fcos
cdq
and
aas
repz
push
xchg
retf
aas
mov
dec
pop
dec
arpl
movs
inc
loop
stos
and
xor
shr
int3
mov
in
dec
pop
xchg
push
iret
dec
ret
(bad)
fmul
sahf
inc
add
dec
jns
cmp
sbb
call
xor
xor
push
xchg
and
xchg
leave
out
add
pop
ret
daa
movs
shr
mov
mov
mov
pop
call
inc
and
call
retf
xchg
push
(bad)
mov
jp
popa
push
mov
aaa
adc
outs
cld
xchg
add
mov
cld
jne
xor
fstp
inc
mov
fadd
or
mov
jns
in
shr
adc
(bad)
retf
std
jnp
mov
aad
dec
in
jle
cmp
add
clc
sbb
mov
mov
cmp
int
js
gs
xchg
les
mov
cld
dec
std
xchg
xchg
fld
or
clc
aas
dec
dec
shr
jmp
js
lea
ins
sbb
sub
xlat
push
enter
push
adc
xchg
or
lahf
push
and
fwait
xchg
fld
add
nop
jae
mov
add
dec
fild
fwait
add
repnz
mov
cld
test
(bad)
loopne
enter
cmp
cdq
cmc
les
mov
jg
xchg
cmps
test
int
push
jg
and
aas
test
mov
mov
pop
xchg
out
add
add
jge
mov
mov
mov
and
jmp
xchg
hlt
repnz
cmps
sub
sub
mov
xlat
sbb
fadd
js
(bad)
out
call
adc
shl
sbb
lods
mov
hlt
inc
in
je
das
push
inc
xlat
div
cmps
(bad)
jns
push
dec
xchg
push
and
mov
shr
jmp
mov
inc
xlat
fst
add
pop
dec
xor
and
ror
sbb
jnp
cwde
xchg
stc
popf
mov
or
mov
push
fist
add
rcl
pusha
es
or
fdiv
(bad)
xchg
push
pop
jecxz
cmp
mov
mov
ret
push
in
cmp
sti
sahf
shl
add
add
dec
push
(bad)
fstp
test
cmp
push
jge
or
imul
jae
xlat
sub
xchg
dec
pop
push
mov
ror
repz
addr16
stc
mov
mov
sbb
mov
ds
dec
mov
cmps
dec
push
mov
mov
sbb
add
sbb
or
pop
shl
dec
arpl
out
jp
mov
cdq
cmc
cmc
xchg
mov
mov
and
clc
ins
cdq
loope
loopne
mov
xor
out
retf
jo
jno
cmc
clc
call
dec
(bad)
lods
jmp
sub
sub
push
ficomp
outs
mov
jno
adc
hlt
les
movs
loopne
add
call
loope
xchg
mov
fidivr
adc
addr16
(bad)
(bad)
(bad)
xchg
out
cmps
mov
mov
nop
ror
xchg
cmp
(bad)
pop
in
pop
dec
jl
cld
ret
test
and
je
jns
ficom
fs
dec
fcom
pop
clc
mov
std
xor
add
retf
out
sahf
pop
add
ins
sbb
add
cmp
mov
and
in
cdq
adc
jns
mov
xchg
xchg
loope
iret
imul
icebp
imul
loope
shl
mov
mov
sbb
jmp
inc
jl
xchg
lds
neg
push
aaa
lds
jge
xchg
popf
mov
jmp
cld
ficomp
cmps
nop
jecxz
cwde
in
sbb
add
daa
in
jle
aas
(bad)
enter
cmc
add
xchg
push
sub
arpl
pop
in
repnz
push
push
jp
add
ret
es
arpl
pop
dec
scas
cmp
fnsave
cmp
and
div
and
les
(bad)
fild
(bad)
jle
sub
int
mov
jb
add
sub
or
mov
fdiv
add
mov
mov
pushf
add
add
stos
mov
push
bound
cli
outs
mov
ficom
mov
fnstcw
inc
das
pop
into
not
jg
lahf
xchg
test
aaa
out
mov
or
and
sub
add
cmp
adc
xchg
dec
(bad)
cs
mov
mov
repz
nop
pop
jl
mov
sbb
stc
xchg
fistp
fs
pop
pop
xchg
xor
(bad)
cli
jb
dec
fst
ins
imul
enter
inc
inc
movs
sbb
xchg
pop
pop
mov
loop
in
scas
das
mov
in
jne
ins
xchg
mov
jbe
xchg
xor
cmove
mov
daa
lock
aaa
inc
add
call
ds
cdq
test
fldcw
push
jnp
test
(bad)
lock
ret
outs
pop
bndldx
jp
mov
cmp
fs
dec
jmp
mov
ja
push
je
(bad)
pusha
ss
dec
dec
aas
jp
cmp
inc
add
mov
ja
xor
in
sar
pop
(bad)
aaa
inc
add
mov
add
push
iret
push
stc
jle
aad
sbb
stos
jmp
in
nop
cmp
(bad)
jne
dec
jle
xor
mov
dec
lods
pop
retf
daa
gs
sbb
test
popf
retf
add
hlt
dec
ret
cld
mov
xor
(bad)
cli
sub
sub
mov
mov
in
add
retf
inc
pop
dec
(bad)
neg
js
adc
scas
int3
popaw
clc
mov
imul
pop
xor
sbb
and
ret
inc
js
push
out
movs
inc
icebp
xchg
xor
adc
cmps
stos
pop
inc
xchg
mov
nop
or
outs
or
mov
xchg
lods
cmp
inc
or
dec
les
add
pop
call
add
addr16
imul
xchg
pop
fidiv
pop
bnd
fstp
outs
cmp
mov
jae
jmp
test
mov
and
js
jge
call
sar
in
inc
inc
mov
mov
ja
imul
sbb
(bad)
xor
jmp
out
(bad)
fisttp
pop
cld
cmc
popa
mov
cmp
out
mov
cmc
iret
pop
loopne
cmp
imul
push
push
or
mov
sbb
sar
jno
inc
mov
ds
and
enter
pop
dec
test
fmulp
dec
or
add
mov
imul
fs
xor
daa
adc
inc
inc
jno
sbb
sti
and
test
and
int3
mov
add
jbe
rcr
inc
fsubr
inc
stos
nop
ins
lds
sbb
dec
sbb
loopne
add
setae
mov
outs
inc
jo
ret
adc
adc
outs
xchg
shl
dec
out
adc
out
fiadd
pusha
inc
or
daa
and
dec
dec
call
aad
aaa
push
mov
xchg
mov
dec
fndisi(8087
jge
sar
xor
je
dec
mov
mov
fisttp
(bad)
call
(bad)
fcomp
fmul
mov
ds
jle
push
jns
xchg
dec
je
push
test
mov
jp
or
cmp
lds
and
out
push
ret
mov
mov
inc
ds
fiadd
dec
add
popf
mov
gs
mov
dec
pop
jne
outs
cmp
cli
into
(bad)
bound
dec
in
or
bound
or
repnz
cs
arpl
shl
push
cdq
fidivr
cmps
xchg
ja
cmp
xor
sbb
mov
xchg
and
dec
or
mov
cmp
mov
sbb
stos
ja
jno
pop
push
mov
movs
not
fsub
ins
enter
das
pop
jo
xchg
pusha
add
(bad)
loope
xchg
xor
retf
dec
shl
cli
and
jle
inc
retf
and
imul
arpl
cmp
lods
mov
push
sahf
sar
aad
xchg
imul
cmp
outs
iret
test
lock
inc
pop
inc
push
scas
gs
loope
sahf
in
fdiv
cmp
mov
inc
sbb
movs
push
xor
jns
lahf
int
xor
fwait
adc
(bad)
mov
cli
push
pop
cmp
dec
into
push
es
jb
cwde
retf
fstp
mov
idiv
cmp
pop
lods
dec
lds
mov
int3
movs
dec
sub
mov
add
stc
retf
test
(bad)
imul
push
in
lods
sbb
push
push
sub
pop
xor
xchg
ret
mov
test
pop
push
xchg
pop
iret
movs
outs
in
mov
add
in
push
aaa
daa
mov
repnz
ins
mov
push
aad
mov
sbb
add
es
pop
pop
fistp
pop
xor
into
push
dec
rcr
mov
inc
xor
fadd
mov
(bad)
push
enter
sub
pop
push
fcomp
fdivr
add
or
pop
call
mov
adc
xchg
adc
hlt
pop
inc
jae
out
test
jno
call
and
xchg
sahf
push
addr16
pusha
push
or
in
push
out
inc
mov
int3
inc
add
int3
int3
pop
fdivrp
mov
hlt
(bad)
mov
sbb
loop
or
data16
sbb
push
daa
test
mov
cmp
and
xchg
mov
repnz
jg
cmp
mov
sbb
push
add
sub
ror
adc
jecxz
and
std
jl
xor
push
sbb
cdq
mov
cdq
cmc
cmp
call
xor
cmp
adc
sub
js
adc
jle
sub
inc
mov
push
jg
test
or
dec
or
pop
fild
arpl
push
gs
clc
push
cmp
fisubr
xchg
sub
or
enter
cmc
or
cmp
xor
mov
pop
movs
repz
adc
cmps
das
sbb
xor
ficomp
out
(bad)
loope
mov
out
leave
ins
or
data16
scas
repz
adc
xchg
sub
inc
lds
jo
and
sub
popa
mov
mov
pushf
leave
cmc
jns
and
pushf
pop
fiadd
dec
xor
retf
xor
es
dec
test
dec
sbb
jmp
imul
cmp
aam
pop
hlt
xor
and
sub
clc
dec
ds
mov
jb
mov
mov
jae
out
dec
arpl
xchg
dec
xchg
out
sub
jmp
fldenv
mov
(bad)
xlat
inc
push
std
das
aam
mov
sub
add
jp
add
fs
xor
iret
fs
pop
push
add
nop
ja
sbb
movs
jb
retf
(bad)
mov
dec
mov
mov
ss
mov
adc
adc
call
push
fcom
adc
or
xchg
or
cmps
cmps
sub
dec
test
mov
scas
mov
and
push
mov
cmp
add
nop
adc
ja
sbb
dec
aaa
dec
push
and
push
imul
mov
call
mov
es
or
and
pshufw
xor
pop
imul
mov
jg
ds
mov
imul
ins
dec
fwait
and
js
inc
jmp
inc
(bad)
aas
aad
loop
jp
push
ror
repz
mov
movs
shl
cs
xchg
leave
pop
push
pop
imul
or
(bad)
mov
push
pop
inc
lock
sub
xor
retf
and
push
ret
jp
mov
fwait
add
push
xor
cmps
pop
stos
and
icebp
mov
sub
aad
inc
dec
fild
movs
xchg
fbld
(bad)
or
hlt
loope
daa
xchg
mov
aaa
dec
icebp
cmps
inc
jmp
loopne
mov
repz
fmul
cmps
in
xor
fisubr
jno
xchg
mov
arpl
das
fimul
scas
push
xchg
pop
das
push
mov
ret
fwait
xor
inc
shl
mov
xchg
cmps
jno
rol
mov
ret
jp
out
out
inc
fdivr
shl
push
mov
(bad)
mov
add
outs
shr
sbb
xchg
mov
jl
call
xor
jl
into
add
mov
sbb
ror
jmp
nop
pop
movs
xchg
sbb
or
xor
int
lea
jns
shr
push
into
adc
aaa
test
fimul
mov
jne
retf
sbb
test
jns
cmp
push
call
scas
pop
pop
add
inc
push
(bad)
adc
mov
popf
fwait
push
in
out
lods
test
sti
int3
jecxz
sub
loop
stc
or
fcmovne
xor
mov
sahf
mov
cmps
outs
pop
out
ror
mov
add
pop
cs
iret
ja
retf
jmp
fsubr
mov
bnd
loope
cmp
fcom
jle
mov
shl
xor
add
cmp
mov
test
inc
pusha
out
xor
adc
imul
mov
dec
jge
pop
mov
mov
pop
jp
es
push
jmp
adc
enter
mov
sub
mov
stos
fsub
xlat
mov
aad
jb
sbb
popf
xor
sbb
xor
push
cmps
mov
xor
xchg
mov
rcl
mov
dec
(bad)
xlat
push
xor
push
addr16
cmp
jnp
mov
das
or
cmp
aaa
in
leave
sub
jp
stc
xchg
inc
fimul
stc
push
imul
mov
cli
push
mov
push
mov
jnp
retf
inc
push
mov
and
adc
or
and
pop
pop
(bad)
mov
pop
ins
xchg
stos
movs
push
ret
es
and
mov
sub
shl
fmul
stos
mov
mov
inc
jecxz
push
int3
mov
mov
je
rcl
dec
stos
xor
test
xor
inc
and
jg
je
xor
inc
jb
int3
(bad)
cli
iret
sbb
pop
mov
jno
les
out
mov
and
jne
sub
pop
dec
mov
daa
es
add
and
outs
test
pop
xchg
test
sub
stos
sbb
bound
push
push
inc
(bad)
cld
add
imul
out
or
pop
imul
dec
xor
rol
(bad)
dec
add
push
jg
(bad)
sbb
ror
jb
jns
inc
stos
sbb
inc
xchg
pop
dec
mov
jns
cmps
(bad)
hlt
(bad)
dec
aad
mov
outs
mov
pop
inc
pop
fwait
dec
jae
imul
ficom
div
call
ins
cmp
jg
sbb
sahf
ss
or
lock
lahf
movs
out
or
jns
pushf
jle
out
add
scas
sub
cwde
mov
cs
sbb
(bad)
jne
addr16
mov
dec
or
pop
mov
cmps
cmps
mov
sub
out
in
pop
jge
icebp
inc
jns
and
or
push
mov
iret
test
popf
mov
adc
repz
mov
das
adc
lods
es
test
fstp
sbb
mov
jb
ret
sbb
popf
ds
mov
mov
test
idiv
xor
imul
retf
jmp
cmp
ffreep
push
iret
fst
mov
outs
push
jmp
imul
call
pop
xor
std
fdivrp
and
mov
xchg
out
test
scas
pusha
movs
add
cld
mov
cmp
call
push
inc
aaa
sbb
repnz
jae
mov
(bad)
imul
add
fnstsw
sar
push
lods
inc
push
shl
mov
mov
popa
sbb
jecxz
and
lahf
or
mov
test
repz
(bad)
fdivr
push
pop
xor
xor
push
adc
fucompp
pop
sbb
mov
xchg
and
sti
jmp
pop
lea
mov
push
js
cmc
pop
jne
enter
hlt
fisub
ss
adc
in
pop
jno
add
sbb
xchg
pop
cwde
call
ret
or
inc
jno
fimul
sub
push
(bad)
sbb
ror
add
xor
hlt
fisttp
lods
sar
cwde
loope
cmps
pop
loope
stos
inc
mov
cmp
jae
pop
sub
pop
cmps
std
dec
out
lods
pushf
test
push
inc
out
cmps
dec
cld
inc
push
pop
in
pushf
in
xchg
jns
cs
dec
stos
ficomp
mov
out
pop
test
in
push
dec
pop
xchg
add
(bad)
shl
(bad)
pop
vpmacssww
into
out
push
add
cmp
inc
lds
sbb
xor
sahf
and
push
or
outs
inc
ret
int
dec
push
or
adc
icebp
push
aam
sub
outs
stos
pop
rcr
jle
stc
rcl
dec
xchg
or
rcl
dec
and
icebp
cmp
inc
sub
adc
rol
jnp
mov
jb
pop
dec
stc
(bad)
mov
push
push
aaa
int3
std
nop
fmul
push
mov
mov
mov
mov
sub
outs
xchg
fnsave
inc
retf
int
in
es
test
xchg
stos
(bad)
imul
out
cmp
sahf
fnsave
pop
clc
xchg
je
xchg
cmp
jp
mov
pop
inc
xor
(bad)
nop
jo
mov
loopne
jmp
add
ja
mov
cmp
or
xlat
paddsw
stos
mov
repnz
scas
hlt
inc
lds
cmp
mov
movs
stos
in
call
stos
loope
jnp
in
jecxz
xor
or
arpl
dec
cmp
pop
mov
sbb
daa
mov
and
out
sub
cmp
in
rcl
jmp
lds
inc
cwde
or
sar
dec
cmps
call
call
rcr
test
mov
jnp
test
and
int3
into
addr16
cvtpi2ps
mov
xlat
cmp
xchg
dec
pop
mov
out
mov
jg
mov
les
push
stc
ss
rcl
aaa
fild
retf
int
ret
pop
sbb
mov
int
pusha
(bad)
mov
mov
add
dec
enter
add
fistp
mov
and
stos
dec
out
aaa
test
and
pop
out
or
dec
fild
pop
mov
sbb
call
mov
ror
sub
jecxz
add
or
loope
ds
(bad)
bound
xchg
xlat
gs
cli
(bad)
inc
imul
mov
(bad)
jecxz
adc
mov
cmp
push
stos
push
jmp
xchg
xchg
pop
stc
(bad)
xchg
ins
mov
mov
add
add
add
icebp
les
fdivr
jmp
dec
shl
dec
ins
int
xor
xor
fstp
ret
push
sub
pop
inc
jle
les
mov
xor
sub
lods
enter
pop
push
adc
mov
add
jp
push
xor
push
dec
in
(bad)
inc
data16
or
ins
push
adc
jg
sub
inc
or
push
sahf
daa
jge
fwait
lea
mov
push
xor
in
cwde
and
icebp
and
cmp
int3
out
test
pop
xor
dec
movs
lahf
mov
mov
add
push
cmp
loopne
test
inc
jb
sahf
adc
inc
mov
(bad)
mov
add
stos
retf
sub
dec
mov
ret
or
push
cs
sbb
rol
into
rcl
movs
sti
jne
fwait
(bad)
int3
xor
adc
add
mov
jmp
cld
pop
mov
jle
mov
int
icebp
sbb
scas
test
sbb
cmp
adc
test
sub
retf
push
xchg
rcr
(bad)
mov
xor
ret
(bad)
sbb
and
iret
xor
inc
(bad)
rol
stc
cmc
dec
jge
mov
push
ds
pushf
fstp
and
pop
loopne
mov
mov
mov
push
adc
sbb
push
adc
inc
dec
inc
sbb
mov
inc
mov
xor
cld
inc
jle
fs
cld
inc
sahf
mov
fdiv
xchg
cwde
add
movs
xchg
or
fsubr
scas
cmps
test
iret
jge
mov
stc
jmp
pop
outs
rol
ret
lock
jg
out
xor
das
or
mov
in
mov
sbb
inc
push
fsqrt
repnz
push
mov
jbe
imul
in
repz
xor
inc
in
ret
adc
fnstsw
stc
dec
out
out
jae
cld
mov
or
xor
and
adc
sahf
repnz
mov
popa
xchg
sbb
inc
xchg
jecxz
inc
add
mov
arpl
jns
pop
test
add
mov
mov
inc
jo
sub
xchg
jg
sbb
test
out
sub
ds
imul
addr16
scas
xor
xor
iret
mov
retf
xchg
inc
imul
sbb
fwait
mov
cld
sbb
mov
inc
lods
xor
jb
add
mov
cmp
pop
push
mov
sbb
test
pop
pop
xor
lock
sub
jle
xchg
mov
(bad)
mov
test
pushf
ds
or
ret
cmp
loopne
popa
out
xchg
sbb
popf
out
adc
ret
outs
repnz
lahf
mov
pop
loopne
fimul
xor
pop
xchg
push
and
and
mov
ds
jle
aas
sbb
push
mul
mov
rol
clc
add
out
(bad)
push
fwait
in
in
popa
xchg
or
mov
cmp
pop
inc
xchg
mov
jecxz
out
jle
push
xor
jns
jl
ret
dec
hlt
cld
sbb
aad
popa
and
xchg
pop
and
sub
jbe
pop
mov
in
gs
adc
into
dec
es
ins
inc
sub
nop
je
mov
or
mov
and
inc
jmp
xchg
pop
jnp
lock
sbb
adc
fs
int
jnp
jecxz
call
sub
and
cmp
inc
add
popf
jecxz
mov
loop
repnz
push
(bad)
into
push
xchg
push
jne
adc
cwde
mov
cmp
pop
jo
xchg
lods
jae
shr
stos
xlat
test
xchg
jl
shl
xor
push
lods
pop
push
adc
mov
icebp
dec
cmp
jmp
cmp
inc
xor
pop
mov
cmp
sbb
fs
dec
stos
add
pushf
icebp
stc
inc
iret
loopne
outs
and
ja
sbb
outs
jo
inc
bound
jge
ins
scas
in
cmp
xchg
fisub
pop
loopne
dec
das
mov
arpl
aas
inc
lea
retf
popa
and
inc
cmc
mov
xchg
push
mov
jbe
add
cmp
adc
addr16
mov
push
ja
and
adc
repz
stc
mov
sub
test
lea
mov
cmp
adc
sub
or
movs
test
inc
fs
inc
mov
xchg
cmp
push
add
dec
cs
loop
dec
mov
stos
shl
push
sbb
lds
jne
in
pop
mov
cld
mov
lods
xor
fucomp
int3
out
out
cmp
xor
mov
fstp
push
in
jns
and
in
xor
lock
add
ror
cmp
(bad)
push
jae
mov
sar
div
test
pop
jge
fldcw
movs
ret
mov
add
jne
clc
and
or
inc
in
push
add
retf
(bad)
jbe
add
loope
clc
mov
push
mov
out
fstp
adc
(bad)
clc
test
loop
fcomp
scas
ins
aam
rol
pop
jmp
(bad)
and
lock
add
(bad)
pusha
mov
cmp
cdq
aam
lods
sbb
mov
out
cmp
jp
add
ss
lock
inc
stos
mov
shl
xor
xor
jbe
stos
jb
sbb
daa
gs
mov
push
lods
fcomp
shr
sub
pop
dec
(bad)
in
in
add
pop
sub
(bad)
dec
fiadd
mov
jg
pop
ror
and
push
fndisi(8087
add
or
cld
push
mov
adc
xchg
pop
or
test
inc
lds
leave
cmp
mov
add
in
imul
xchg
sbb
ror
mov
imul
adc
int3
push
adc
popa
and
pusha
cs
add
nop
jno
push
jb
sbb
fincstp
call
(bad)
repnz
mov
and
ja
cmp
mov
aas
loopne
imul
jl
mov
pop
ret
push
dec
pop
mov
mov
pusha
cwde
clc
adc
cmps
pop
push
and
xor
rcr
shr
out
aaa
les
loopne
les
mov
(bad)
mov
repz
into
sbb
ins
xor
pop
sub
daa
fiadd
pop
loope
movs
inc
jmp
sahf
in
loop
adc
mov
mov
dec
sub
enter
inc
sub
sti
fwait
loope
mov
fsubp
and
sub
pop
fisttp
sub
cmps
ret
das
sub
mov
mov
repnz
push
cmc
mov
inc
sbb
mov
add
ins
jge
fwait
mov
jle
test
dec
movs
push
cli
imul
in
and
call
pop
mov
popf
movs
sti
addr16
scas
mov
inc
jmp
idiv
call
shr
xor
or
not
je
adc
jno
or
rcl
sar
into
push
dec
ror
mov
or
fucom
inc
dec
imul
test
add
jg
sub
sbb
scas
add
not
les
das
arpl
cli
mov
dec
add
mov
mov
sbb
or
dec
lahf
push
pop
mov
mov
cmp
arpl
lea
sub
xor
(bad)
fwait
jp
pop
push
lea
sub
mov
out
push
jmp
or
jmp
addr16
aaa
add
push
xchg
jge
test
into
sbb
leave
and
or
cmp
inc
dec
mov
mov
rcl
adc
and
es
aam
or
test
mov
sbb
adc
in
(bad)
iret
add
jne
cmp
jecxz
pop
mov
aas
push
(bad)
pop
xor
popa
popa
ja
into
(bad)
inc
aaa
or
mul
adc
and
or
fsub
inc
and
int3
cdq
cmp
and
stos
and
inc
jns
test
rcl
sbb
xchg
scas
mul
xchg
or
pop
outs
sub
stos
sti
jp
shl
ins
mov
xchg
push
inc
push
inc
cmp
jnp
push
pusha
dec
lahf
pushf
xchg
xchg
fwait
mov
aad
adc
cmp
and
pop
inc
stos
xor
pop
jbe
pop
clc
(bad)
mov
mov
push
pop
int3
out
xor
scas
mov
mov
pop
sub
aaa
out
mov
mov
mul
loope
push
mov
test
add
idiv
js
sub
popf
jg
cld
pushf
call
cmc
imul
adc
mov
pop
push
je
mov
enter
pop
push
xchg
push
or
jo
push
xchg
inc
push
pop
cmp
retf
nop
shr
test
add
repz
ror
push
std
push
mov
jg
mov
clc
push
daa
(bad)
mov
xchg
push
outs
and
imul
ret
pop
mov
pop
dec
pop
sub
ins
mov
inc
loop
(bad)
and
cld
dec
push
and
ins
popf
es
or
cmp
sub
xchg
dec
fimul
cmp
xor
xchg
add
xor
mov
mov
jle
and
addr16
jg
add
jb
push
adc
jns
aas
or
jne
aaa
ds
rcl
mov
mov
jp
rcr
loopne
add
jbe
in
or
xchg
clc
out
push
inc
cwde
fdiv
fsubr
inc
ficom
rcr
cmp
arpl
add
mov
gs
mov
cmp
dec
(bad)
arpl
xchg
icebp
jns
stc
int
inc
ins
xor
loopne
push
xor
dec
iret
pop
sub
scas
ins
xor
bound
xchg
(bad)
lods
dec
stos
xor
pop
mov
pusha
xchg
pop
call
xchg
clc
xor
or
(bad)
xlat
jmp
push
push
or
xchg
dec
add
cmps
and
test
scas
push
jge
sbb
or
cmc
sub
push
lahf
cmp
add
das
xor
xchg
out
rcl
fcom
stc
inc
pop
xchg
and
push
leave
ja
cdq
pop
and
sahf
retf
ret
jbe
inc
xor
mov
out
retf
or
mul
pop
daa
sahf
jo
aas
jo
sub
mov
data16
mov
lds
ret
pusha
or
jg
imul
dec
mov
add
mov
stos
xchg
push
movs
jne
dec
or
pop
out
jne
adc
add
ins
cwde
push
dec
adc
adc
pop
ins
test
mov
hlt
pop
jge
dec
push
fdivr
pop
jbe
out
sti
stos
mov
pop
inc
push
stos
mov
jmp
xchg
mov
mov
call
pop
mov
sti
mov
push
stos
mov
jnp
jns
ret
adc
jo
movs
push
jne
adc
fisub
popf
out
sbb
xor
inc
mov
sub
jp
popa
xchg
push
(bad)
mov
mov
push
dec
jecxz
sti
fwait
popf
shr
jb
xchg
cmps
(bad)
jg
inc
(bad)
or
xchg
pushf
pushf
pop
movs
iret
mov
adc
shr
sbb
cmc
loop
sbb
xchg
stos
mov
ret
gs
daa
pop
repnz
(bad)
int3
pop
popa
loopne
ins
repnz
(bad)
retf
and
dec
daa
jbe
sahf
sub
cmp
dec
mov
cli
mov
xchg
or
retf
test
or
dec
inc
pushfw
mov
and
xchg
push
inc
cmp
lods
(bad)
hlt
jmp
nop
adc
and
push
div
out
jp
fs
xor
and
retf
add
mov
jb
fdiv
mov
jo
or
shr
aas
push
les
jbe
(bad)
jnp
dec
and
mov
cmp
retf
test
fwait
xlat
test
dec
xor
out
xchg
out
mov
(bad)
call
in
out
addr16
jle
fs
rcr
imul
imul
outs
(bad)
outs
jnp
adc
fmul
jnp
mul
mov
stos
ret
and
sub
data16
enter
shl
scas
mov
and
push
xor
rcl
repz
adc
xor
sub
scas
(bad)
das
aas
push
sub
cmp
jno
push
sub
sub
lods
or
ret
popf
stc
data16
push
mov
sbb
mov
mov
mov
test
retf
or
push
punpcklbw
push
(bad)
jge
jmp
inc
rcr
xchg
and
retf
fcom
inc
push
adc
sbb
adc
mov
dec
(bad)
call
xchg
js
aam
xchg
push
pop
pushf
adc
push
out
jecxz
vprotb
push
push
inc
ret
pop
fmul
pop
sbb
mov
pop
popf
movs
push
dec
in
dec
sahf
xchg
pop
xchg
xchg
jg
push
and
cmp
sub
push
mov
ss
bound
sbb
lahf
loop
adc
push
lds
jns
lea
aad
outs
xchg
jae
mov
test
call
daa
xor
adc
xchg
loopne
fild
xchg
ret
xor
outs
out
fist
mov
test
push
pop
aas
stc
xlat
gs
sub
sub
mov
push
rol
dec
adc
jnp
or
mov
push
std
sbb
fisttp
(bad)
adc
loopne
pop
jnp
or
inc
xor
out
lods
loope
test
sub
fimul
cmp
inc
sbb
add
pop
mov
(bad)
iret
ins
mov
fcom
repnz
mov
cmp
fistp
out
leave
fsubr
(bad)
stos
enter
mov
call
dec
or
inc
add
jp
or
rol
test
or
inc
inc
inc
xchg
les
adc
mov
jb
xor
mov
mov
popf
or
mov
push
lahf
xchg
mov
mov
jp
mov
std
cdq
mov
sub
imul
and
pop
sbb
pushf
scas
adc
inc
push
cmp
jno
xor
call
mov
push
(bad)
xlat
fwait
mov
jecxz
push
dec
push
fsubrp
sub
std
push
in
dec
xchg
loopne
add
sbb
or
xchg
inc
gs
je
iret
jmp
cmp
cwde
fcomip
aad
sar
xor
mov
dec
lods
push
fimul
pop
or
enter
mov
push
gs
test
xor
dec
jg
fmul
test
fs
mov
sbb
jg
daa
neg
push
neg
xor
cmps
shl
mov
sbb
mov
jnp
push
xor
cmp
fiadd
sbb
mov
mov
ret
(bad)
sub
cwde
inc
xchg
sahf
outs
leave
jnp
push
mov
inc
and
fwait
adc
test
push
xor
inc
sbb
mov
cmps
mov
retf
pop
aam
inc
mov
(bad)
rcr
sbb
imul
and
pusha
xchg
in
sbb
mov
push
(bad)
es
adc
jae
mov
lock
nop
cmp
or
mov
xor
mov
enter
sbb
addr16
dec
inc
push
fstp
push
jg
fist
or
dec
jg
and
xor
cs
xchg
mov
outs
jl
fwait
xchg
pushf
enter
sar
jmp
pushf
pop
rol
cmc
pop
stc
pop
jecxz
dec
fild
shl
inc
inc
push
pop
inc
jnp
mov
sbb
stos
mov
in
pop
adc
push
test
jno
xchg
test
hlt
and
mov
xchg
ret
clc
pop
jmp
sub
out
rol
repnz
pop
cmp
jb
pop
sbb
or
jmp
mov
mov
jnp
fsubr
arpl
jmp
jp
in
xchg
movs
(bad)
cld
xor
pushf
pop
jmp
mov
rcl
mov
xlat
mov
das
dec
stos
imul
xor
fbstp
mov
jmp
push
mov
xlat
fimul
ret
xchg
and
ret
mov
pop
inc
cdq
in
mov
cmp
mov
fcomip
mov
idiv
scas
jnp
dec
in
mov
clc
add
dec
mov
loop
gs
xor
test
mov
std
mov
xchg
inc
xor
movs
or
cmps
and
dec
addr16
into
clc
pop
xor
push
fbld
mov
or
jg
ds
xchg
dec
xchg
fwait
mov
aad
xchg
cmps
cwde
add
test
(bad)
retf
jno
push
push
mov
addr16
and
lahf
xchg
push
repnz
jg
mov
sbb
ss
and
xor
fistp
push
sbb
inc
outs
stos
ret
push
bound
mov
cmp
jl
jno
imul
pop
test
jbe
push
or
sbb
pop
mov
mov
push
pusha
icebp
iret
mov
or
in
push
clc
mov
xchg
lahf
push
pop
mov
adc
push
jno
mov
js
psubusw
xchg
out
sub
add
sti
dec
loopne
mov
jmp
inc
mov
rcl
out
inc
cmp
mov
jae
int
and
mov
dec
mov
rcl
call
nop
adc
rol
xchg
in
sar
repnz
sub
jnp
cld
idiv
cmp
scas
test
aam
mov
mov
pop
and
addr16
mov
mov
jle
xchg
cld
push
and
sub
and
popf
in
jmp
dec
mov
shr
xor
jmp
pop
stos
jmp
jae
cmp
adc
std
or
les
scas
imul
into
stos
jg
pop
loope
jns
lea
xchg
out
inc
lods
pusha
cmp
ds
ret
test
into
in
dec
push
iret
nop
mov
push
(bad)
sbb
jns
cmp
sub
push
xchg
bound
daa
dec
cmp
sub
movs
inc
xor
retf
add
or
pusha
retf
mov
mov
je
loope
int3
outs
mov
in
nop
mov
sti
loop
mov
jbe
je
popf
add
adc
inc
(bad)
cmps
or
retf
mov
lahf
out
push
sub
mov
mov
arpl
jnp
aas
push
xchg
call
xor
mov
das
jne
pusha
into
xchg
sti
or
add
dec
pusha
call
inc
jns
fst
(bad)
push
mov
dec
push
aam
cwde
je
ja
lods
and
aas
shr
dec
nop
arpl
lods
aaa
sbb
ss
pop
cmp
mov
pop
imul
cmp
repz
bound
mov
pop
movs
jnp
pop
mov
add
mov
int
mov
(bad)
xchg
lock
retf
and
sahf
mov
jne
ins
stc
sbb
xchg
in
(bad)
shr
sti
cmp
cmp
in
sahf
or
xor
mov
mov
sbb
sbb
repnz
js
and
fisub
pop
es
frstor
neg
es
or
jmp
mov
push
inc
dec
std
movs
popf
aas
nop
xchg
repz
mov
push
sbb
jnp
sbb
inc
mov
or
sbb
push
out
cdq
xchg
iret
cs
es
inc
cdq
push
inc
mov
js
add
cmp
xlat
xor
aaa
dec
fst
ror
cmp
mov
aas
scas
ret
jmp
retf
js
add
clc
cwde
adc
jb
movs
shl
add
nop
popf
dec
test
ins
in
jbe
inc
mov
fistp
pushf
inc
dec
mov
imul
mov
aad
les
aad
pop
jae
adc
pop
mov
xchg
jp
add
mov
sbb
cmps
mov
shr
mov
cmps
retf
iret
cld
rol
out
jmp
xchg
inc
add
inc
add
pop
mov
push
bound
sub
dec
or
rol
(bad)
fimul
ja
ins
cwde
pop
das
mov
fs
outs
xchg
sbb
les
mov
dec
jecxz
mov
or
jbe
call
cmps
outs
enter
cmp
adc
and
inc
ins
data16
pop
js
xlat
mov
(bad)
jno
(bad)
in
pop
pop
mov
sub
inc
xlat
pop
sub
xor
fs
mov
mov
ja
or
sbb
cmp
shl
mov
cmp
imul
aaa
xor
xchg
xor
dec
pop
sub
and
dec
mov
adc
into
xchg
jmp
xor
lock
jo
adc
xchg
pop
pop
inc
stos
dec
mov
icebp
aam
test
pop
loop
xor
arpl
xchg
dec
enter
aad
lahf
dec
and
ret
test
xchg
dec
sti
mov
push
mov
push
mov
test
das
outs
xchg
out
fwait
ins
sub
loope
in
aam
and
dec
jae
repnz
add
mov
adc
sbb
repz
lods
sub
mov
add
push
xor
sub
ds
sub
sub
jbe
xor
or
out
arpl
mov
imul
ss
xchg
inc
dec
sub
in
mov
pusha
sbb
push
pushf
cli
mov
pop
push
sub
popf
pusha
inc
jo
ins
aad
mov
lock
faddp
and
jo
dec
(bad)
fimul
retf
sbb
int3
jnp
test
or
hlt
(bad)
push
dec
jg
and
scas
out
mov
jnp
inc
std
cmps
xor
dec
xchg
ins
push
mov
add
(bad)
and
sub
inc
dec
in
mov
dec
xchg
sti
cwde
daa
fistp
(bad)
xchg
imul
nop
add
xchg
mov
ret
pushf
repnz
in
jns
jmp
hlt
imul
inc
scas
test
mov
fnstsw
push
fwait
imul
sub
int
pop
push
out
test
xor
stc
inc
cld
call
cmovg
shl
in
cmp
xchg
sub
fisub
or
jle
cmps
jmp
jno
cmp
sub
pop
retf
pop
pop
iret
xchg
out
leave
pop
cwde
push
jno
mov
mov
repz
push
inc
xchg
jne
adc
cdq
mov
je
jno
lahf
out
push
inc
sahf
inc
arpl
shl
mov
loopne
and
push
dec
push
push
jne
or
cmp
arpl
in
and
aas
retf
mov
mov
cmp
jge
sub
js
in
sti
jge
repz
mov
clc
imul
push
rol
rcl
cdq
inc
sub
js
push
mov
enter
pop
xchg
pop
imul
xchg
add
icebp
inc
add
loop
add
icebp
sub
mov
xchg
add
neg
push
js
std
pusha
cmp
dec
adc
mov
test
mov
jne
outs
lods
lods
int3
dec
add
rcr
popf
mov
fld
mov
sbb
repnz
jmp
mov
xor
jmp
adc
stc
mov
icebp
cld
adc
push
sub
pop
mov
pop
xchg
(bad)
xlat
cmp
fbstp
dec
sub
in
cmp
bound
mov
arpl
das
push
enter
pop
ret
fidiv
stos
mov
push
icebp
mov
mov
repz
ret
inc
call
shl
add
cwde
mov
xor
(bad)
call
push
in
adc
cld
push
xchg
jle
sbb
retf
push
pop
pusha
inc
enter
in
xor
push
cmps
fidivr
push
in
imul
outs
dec
jns
mov
mov
mov
mov
and
ss
xor
push
adc
test
int3
iret
push
rol
mov
pop
pop
cmps
mov
jno
(bad)
ds
stos
ins
xchg
sub
int
fwait
in
rcl
(bad)
sub
std
jmp
jmp
imul
jmp
or
push
(bad)
stos
and
int3
sbb
pop
xor
pop
(bad)
fwait
mov
fs
int3
jae
(bad)
sub
xchg
lock
sbb
jecxz
int3
leave
iret
or
mov
mov
mov
aad
cmp
xor
mov
(bad)
sub
in
inc
or
(bad)
sub
mov
mov
jmp
arpl
cli
push
shl
add
sbb
mov
mov
outs
fidivr
and
pop
fwait
or
imul
dec
test
repz
mov
add
and
mov
or
dec
pusha
lods
mov
pop
test
inc
aad
test
addr16
ins
mov
add
sbb
cmp
pop
cmp
adc
push
cmp
mov
add
std
adc
ins
sub
cmp
mov
repnz
div
pop
jnp
cmp
add
ins
inc
xor
jbe
dec
jg
popf
ret
(bad)
xchg
pop
xor
xchg
int
les
shl
or
test
je
pop
adc
inc
sub
push
jge
das
int3
out
movs
lods
adc
sbb
lods
call
jge
pop
pop
sub
xor
sub
fcmovnu
jmp
add
in
sub
push
push
mov
(bad)
test
movs
dec
sub
cs
cli
in
jp
and
mov
enter
jp
repnz
stos
and
aaa
lods
lock
dec
into
or
and
push
je
out
xor
lods
pop
push
sub
les
mov
xor
stc
mov
dec
(bad)
cli
pop
(bad)
loopne
xchg
aad
jae
add
dec
out
movs
cmp
cwde
fwait
arpl
pop
test
popf
shl
xchg
test
fs
fld
out
sbb
ror
lods
rcr
mov
add
sbb
mov
ficomp
push
cli
int
inc
scas
call
and
xor
sbb
mov
lahf
jmp
mov
ret
dec
dec
push
xchg
pop
dec
xchg
mov
les
out
fiadd
jecxz
push
hlt
call
neg
and
sbb
aaa
stos
mov
(bad)
mov
enter
cmc
enter
dec
pop
jp
fdiv
mov
cwde
ror
mov
enter
sti
mov
into
pop
ins
shl
jnp
(bad)
into
cmp
pop
xor
pop
xor
pop
stos
cmp
mov
adc
repnz
movs
xlat
jae
lock
retf
and
mov
outs
mov
in
in
std
outs
xor
jmp
cmps
movs
shr
cmp
das
inc
retf
mov
pop
not
fsub
hlt
fst
cmp
inc
mov
mov
shr
int3
std
xchg
or
mov
psubsw
jae
mov
sbb
ret
inc
xor
fstp
jl
add
mov
jg
push
div
push
inc
fdiv
in
enter
ins
sar
jmp
das
or
shr
mov
(bad)
push
push
movs
pop
xor
stos
xchg
cmp
or
mov
es
xor
(bad)
loop
js
sbb
push
iret
dec
(bad)
mov
int
test
rcr
loop
and
sbb
ins
push
mov
sbb
adc
sub
xchg
and
sbb
movs
fild
cmps
pop
call
sbb
mov
pop
jl
inc
or
cmp
pop
data16
mov
in
out
inc
call
cmp
jmp
shl
scas
(bad)
fadd
cmc
mov
add
in
test
pop
cs
mov
jp
push
inc
int3
pop
add
or
test
pop
daa
iret
adc
add
or
lahf
jl
pop
adc
add
fwait
(bad)
jmp
dec
sbb
xchg
xchg
xchg
jne
xchg
hlt
xor
mov
stc
(bad)
push
xchg
sbb
test
inc
mov
bound
xchg
jecxz
adc
ror
popf
xchg
icebp
add
mov
or
pop
sbb
push
push
xor
ss
mov
dec
fist
fiadd
fld
dec
add
js
xlat
or
aad
sub
sbb
fist
fwait
and
pop
sub
pop
push
push
stos
inc
repz
cmp
pop
jge
mov
repz
and
fnstcw
lods
mov
mov
test
sub
in
lds
in
jns
retf
add
mov
add
scas
cmp
clc
out
leave
fdivr
shl
popa
pop
push
push
sti
mov
xchg
mov
pop
imul
pop
pushf
add
in
sar
push
fdivr
mov
hlt
inc
fnstsw
(bad)
jle
loop
je
and
imul
(bad)
(bad)
daa
push
mov
xor
(bad)
sbb
mov
jb
adc
aad
mov
add
fst
add
outs
or
stos
xchg
inc
mov
fld
jp
popf
mov
lods
mov
jb
jp
enter
cwde
or
std
pop
fwait
out
push
les
or
loope
and
lock
cdq
jne
push
push
arpl
in
cmp
xchg
push
sbb
stos
(bad)
arpl
jle
leave
fidivr
shl
fcomp
push
aam
xchg
xchg
cmc
aad
push
movs
mov
imul
or
inc
rcr
jae
xor
outs
xchg
pop
mov
cmps
in
and
call
lea
rol
xor
cmp
mov
mov
add
call
cmp
add
imul
out
clc
mov
je
les
pop
or
jle
daa
mov
dec
out
in
(bad)
(bad)
arpl
inc
stos
je
lea
aam
jmp
in
dec
mov
jo
in
fwait
(bad)
fsubr
enter
fild
pop
out
cmc
fiadd
adc
lock
sub
ret
dec
out
push
add
fnstsw
sbb
inc
dec
push
in
inc
xchg
int3
ret
fild
lock
retf
loopne
xor
sbb
jno
mov
mov
in
sbb
test
pop
xor
sbb
jnp
int
and
or
cmp
hlt
ss
sub
daa
ins
add
push
popf
fcom
mov
sar
fsubp
and
cmc
sbb
sbb
scas
movs
jne
push
pop
fidivr
xor
pop
lahf
fdivr
popa
iret
repnz
jle
sub
jne
mov
cli
mov
rol
(bad)
mov
loope
fs
sbb
cmp
jmp
std
(bad)
loop
das
ror
adc
mov
cmp
jb
mov
mov
mov
imul
lods
imul
in
pop
inc
call
pop
pop
inc
mov
push
retf
test
adc
aas
outs
out
int
pop
jge
imul
inc
arpl
mov
stos
rol
fsub
jle
shr
call
push
aaa
ficomp
xor
cs
mov
mov
push
jnp
dec
sub
sub
retf
popa
inc
test
scas
push
cmps
stos
push
js
dec
loopne
push
xor
ins
sbb
adc
cmp
rcr
pop
add
pop
push
jl
jle
in
xchg
and
xchg
pop
push
out
mov
jo
or
xchg
enter
mov
jns
fcmovnu
jb
push
aaa
lock
ror
xor
adc
mul
lea
pusha
push
xor
pop
adc
adc
inc
mov
lea
xchg
inc
mov
mov
in
push
push
push
cmp
outs
xchg
and
mov
jns
out
scas
sbb
cld
sub
ins
les
mov
jp
inc
xor
add
es
lahf
fidiv
call
jns
push
jb
adc
mov
mov
sub
bound
sbb
(bad)
inc
test
push
in
sub
js
cld
mul
and
mov
push
fistp
sub
or
inc
jo
add
in
jecxz
cld
dec
out
dec
jl
div
lahf
add
in
out
sub
jns
xchg
or
add
add
sahf
(bad)
mov
cmps
cdq
mov
jmp
xor
cmp
sub
lahf
stos
scas
imul
sbb
jbe
hlt
sbb
imul
jbe
leave
ficomp
or
jae
shl
mov
rep
mov
call
or
add
loop
cmp
lods
or
fcom
jecxz
ror
mov
sbb
inc
dec
(bad)
fmul
aad
inc
add
push
(bad)
in
and
bound
popa
out
pop
dec
loope
js
jbe
dec
xor
jmp
(bad)
sub
leave
mov
mov
call
sahf
jp
int
retf
sub
std
scas
sub
mov
xchg
loope
lods
dec
jmp
xchg
loop
aas
mov
imul
es
or
lahf
aam
data16
sub
scas
xchg
adc
lds
pop
adc
mov
dec
jg
in
sar
xchg
stc
mov
cmp
dec
mov
call
pusha
(bad)
cmps
fdiv
fmul
loop
push
fcmovu
ins
xor
push
xor
cld
pop
push
sub
fcmovnb
data16
(bad)
sub
dec
and
push
mov
aam
call
movs
enter
jmp
xor
cwde
call
into
inc
push
das
adc
or
or
mov
fsub
lds
xchg
jge
movnti
push
je
repz
push
cmp
mov
dec
xlat
mov
aaa
(bad)
pop
sti
dec
cmp
adc
xor
pop
cdq
pop
mov
pop
xor
hlt
pusha
add
pop
xchg
in
mov
inc
dec
push
mov
mov
xchg
dec
mov
sub
iret
jecxz
sub
lock
xchg
loop
int
jmp
sbb
sbb
pop
xchg
mov
nop
or
fsubrp
in
cmp
outs
imul
mov
sub
lahf
cmp
add
dec
repnz
in
sub
fwait
pop
cld
stc
fild
dec
(bad)
push
pop
rcr
div
cmp
frstor
fistp
cmps
xchg
lods
pop
ss
jmp
loop
popa
not
scas
push
sub
es
adc
push
push
jg
push
cwde
dec
and
mov
imul
ins
loope
fisub
cmps
mov
loopne
cmps
inc
dec
ror
shr
loopne
fnstenv
(bad)
rcl
call
push
jmp
gs
movs
in
icebp
pop
xor
cli
pop
outs
neg
rcr
inc
stos
mov
test
hlt
int
or
inc
shr
cwde
out
and
icebp
bound
push
gs
in
addr16
sbb
lds
mov
push
xchg
cwde
cdq
in
(bad)
mov
mov
(bad)
xchg
or
jno
call
pop
in
xor
les
(bad)
jbe
popf
lock
mov
push
repnz
sar
lock
xor
js
dec
loopne
dec
lea
mov
adc
pop
inc
add
into
repz
sub
mov
pushf
or
(bad)
scas
sbb
inc
add
jge
add
mov
jmp
inc
push
out
jbe
or
dec
fild
stc
ss
cmc
fbld
inc
imul
xchg
fcmovu
in
lock
xor
ja
xor
loopne
mov
popf
iret
xchg
adc
inc
ins
cmps
jne
mov
mov
xor
js
mov
retf
repnz
add
sbb
imul
div
(bad)
jnp
adc
rcl
cmp
cmp
mov
jmp
cmp
jbe
lods
mov
in
or
les
mov
mov
or
push
jmp
rcr
das
or
mov
jnp
dec
cdq
outs
push
push
pop
jae
movs
inc
push
sub
mov
cmp
ds
lds
jbe
add
pop
xor
pop
jg
pop
mov
sahf
arpl
jmp
sbb
mov
leave
push
in
ss
mov
shl
jp
jle
std
dec
jnp
jle
lea
xchg
pop
call
ins
add
or
add
xor
cmps
and
xchg
mov
push
adc
sbb
xchg
push
jnp
adc
sub
(bad)
pop
mov
mov
add
fwait
xor
in
in
jmp
jb
scas
mov
cmp
in
sti
add
pop
jle
jnp
cmp
and
inc
pop
sub
and
jb
jle
mov
not
dec
fmul
test
xor
(bad)
jg
ficom
mov
add
cmp
jmp
push
sbb
in
jp
mov
pop
repz
xchg
cwde
icebp
aad
pop
btc
jae
mov
popf
jbe
cmps
jmp
push
mov
mov
adc
jnp
hlt
dec
add
lds
sub
cwde
neg
out
add
frstor
mov
cmps
jecxz
pushf
xchg
das
add
jne
pushf
(bad)
in
sbb
ret
mov
fwait
les
dec
ficomp
mov
pushf
xor
pop
jmp
xor
dec
inc
push
xchg
shl
ja
and
mov
and
push
push
add
mov
(bad)
(bad)
xor
stos
ss
jb
pop
xchg
dec
mov
rcl
mov
or
sbb
retf
out
scas
daa
sub
mov
lahf
aad
xlat
fcomp
test
push
inc
lods
add
loopne
out
pop
mov
inc
scas
out
xchg
xor
add
(bad)
loop
sbb
outs
out
fadd
(bad)
and
or
pop
test
inc
pusha
and
push
fist
cmp
inc
cmp
pop
mov
xchg
mov
mov
xlat
mov
jmp
and
xor
push
sahf
ss
jae
inc
add
out
jmp
in
aam
cmps
sbb
inc
sbb
in
cmc
xchg
daa
js
xor
xchg
fidivr
(bad)
clc
xor
arpl
fcmovnb
or
pusha
mov
xchg
xchg
mov
or
ins
sbb
int3
mov
je
lods
mov
xchg
jmp
mov
cli
ffree
cmp
retf
xchg
cld
adc
repnz
mov
jmp
retf
inc
stc
mov
sbb
cld
icebp
stos
aad
add
das
sbb
dec
and
or
pop
je
cmp
jecxz
mov
and
rol
jne
jne
pop
push
inc
fist
neg
jnp
push
add
pop
scas
pop
push
fs
sbb
into
push
retf
inc
jecxz
adc
and
ret
xor
cmp
push
jg
mov
cli
inc
cmp
jmp
test
adc
adc
push
inc
xlat
scas
outs
and
mov
pusha
scas
pop
mov
push
test
inc
retf
scas
mov
sahf
pop
mov
or
js
fsub
fiadd
jle
mov
mov
in
sbb
xchg
data16
test
sbb
mov
(bad)
outs
xchg
mov
in
lds
movs
int
cwde
das
sbb
bswap
(bad)
sub
fmul
sbb
and
in
shr
mov
nop
inc
call
mov
dec
mov
div
movs
aad
fadd
pop
push
scas
push
in
mov
adc
jnp
or
cs
ror
call
add
cs
mov
dec
push
xchg
test
mov
lahf
inc
and
call
cwde
or
push
repnz
enter
adc
and
cs
inc
pop
cdq
(bad)
(bad)
stos
retf
or
sub
cmp
movs
lock
scas
loopne
add
pop
ins
stc
fwait
stos
adc
pop
cmps
xor
out
cmp
and
push
int
lods
jmp
cmp
cmc
sub
pop
fld
(bad)
sub
cmp
add
fwait
dec
(bad)
mov
fisub
cmp
repnz
ins
pop
jle
dec
movs
push
lock
and
push
repnz
xlat
or
pop
mov
xchg
outs
cmp
or
data16
jmp
leave
in
addr16
ret
xchg
xor
dec
enter
xor
lods
cmc
inc
sub
sti
lock
fwait
pop
loop
lods
gs
inc
mov
push
movlps
inc
push
sar
(bad)
jno
cmp
dec
shl
mov
pop
mov
sbb
mov
adc
ja
into
push
daa
and
aaa
cdq
es
aaa
ror
aam
dec
xor
test
leave
push
push
pop
test
test
sti
sbb
push
cld
xchg
not
movs
clc
cmp
xor
mov
(bad)
movs
int
in
pop
shl
inc
dec
out
add
jnp
sbb
clc
scas
dec
or
sti
jmp
imul
cmp
mov
xor
test
fisubr
stos
sbb
hlt
xchg
adc
je
cdq
jne
cmps
aam
push
mov
arpl
enter
dec
inc
mov
or
test
xor
xchg
shl
jo
or
(bad)
adc
pusha
fidiv
inc
cmps
cmp
(bad)
sub
das
adc
adc
pop
ret
or
dec
int
movs
adc
es
lahf
jle
retf
ins
mov
fadd
call
and
(bad)
ror
adc
cmp
push
cwde
bound
add
pop
loopne
push
ret
ds
sahf
cmp
jecxz
stos
xlat
shl
jp
das
cmp
jmp
jmp
retf
cmps
cmc
aaa
scas
loopne
or
ret
pop
mov
pop
and
out
mov
xchg
retf
out
arpl
add
dec
(bad)
xlat
icebp
ss
xor
jno
push
mov
xchg
test
push
mov
adc
leave
and
jmp
pop
pop
sub
(bad)
jne
add
pushf
out
lahf
int3
stos
shr
fcmove
arpl
mov
ror
in
test
xor
jbe
adc
or
or
imul
sbb
xor
dec
dec
je
pop
mov
jp
fcomp
stc
nop
iret
pushf
mov
mov
imul
fdivr
push
mov
push
adc
scas
xchg
pop
stos
sub
sbb
loope
inc
stos
movs
cdq
in
adc
or
pop
dec
dec
jp
mov
mov
lds
lods
inc
sahf
jl
xchg
dec
mov
and
mov
push
mul
lods
std
mov
add
pop
cs
or
xor
int
mov
jo
pop
aas
add
aad
lods
or
fstp
dec
mov
push
fdivr
cmp
dec
mov
mov
fbstp
jl
test
loop
sub
dec
mov
mov
mov
xchg
cmc
jno
fcomip
lods
jns
sti
and
xchg
xor
test
loop
cmc
jl
jns
cmp
loop
push
sbb
dec
fcomp
sbb
popa
push
sub
jge
ins
cld
sti
jp
shl
jp
(bad)
les
cmp
and
xchg
adc
push
push
and
jne
aas
das
out
daa
dec
ja
fadd
xchg
xor
ret
test
stos
in
fstp
mov
imul
pop
dec
test
mov
out
out
fst
arpl
and
jno
mov
popf
xor
or
pop
jae
jge
pop
lods
(bad)
xchg
cmc
(bad)
and
nop
push
xor
and
(bad)
pop
stos
ret
std
(bad)
mov
and
mov
xor
daa
mov
pop
loop
jl
push
or
push
rol
aam
ror
daa
int
sbb
popa
xor
xor
and
rcr
mov
push
sti
xchg
out
cvtpi2ps
div
iret
idiv
dec
cli
fidivr
sbb
mov
call
call
les
mov
sti
adc
jnp
xchg
outs
dec
inc
push
or
pop
jmp
jno
fidivr
jecxz
or
into
push
pop
jg
cmp
inc
aas
mov
sbb
inc
jnp
aaa
(bad)
iret
into
pop
outs
loop
add
ror
cmps
loop
jl
cwde
xchg
dec
xor
sub
adc
add
mov
inc
daa
add
fcom
not
shr
dec
mov
aam
mov
inc
in
int
fst
dec
bound
or
repz
push
or
xchg
std
mov
and
or
(bad)
add
pop
push
pop
mov
xchg
scas
ror
and
or
leave
fs
ja
neg
mov
lods
push
push
outs
jmp
jp
addr16
pop
aas
ret
xor
push
jge
movs
outs
jmp
int
je
xchg
adc
arpl
jmp
inc
imul
push
dec
dec
jge
xchg
add
mov
or
popa
enter
pushf
idiv
and
push
xor
or
or
stos
cwde
cmps
outs
and
push
adc
mov
sub
movs
sub
and
inc
mov
and
in
cmps
push
rol
shl
mov
or
int
sub
ja
adc
repz
pop
nop
outs
pop
popa
fist
sbb
push
jo
nop
outs
add
inc
bound
mov
or
and
or
(bad)
fsub
sub
adc
nop
dec
or
je
js
hlt
push
fsubr
lods
idiv
dec
mov
arpl
mov
ds
mov
xor
pop
xor
mov
test
xchg
pop
cmps
and
loopne
mov
pop
data16
std
lea
jle
dec
dec
jl
aad
mov
scas
or
fdivr
cwde
inc
sti
add
xor
js
jecxz
int3
add
push
aas
jo
in
inc
and
shl
and
aas
pop
fcom
mov
icebp
leave
fsub
shr
mov
cmps
fdivr
xor
in
ficomp
into
pop
jne
test
call
sub
inc
mov
jno
sbb
xchg
xor
jmp
pop
pop
or
imul
pop
inc
pop
jb
sub
imul
setns
and
pushfw
sub
retf
aam
jg
(bad)
xchg
mov
add
push
in
aaa
mov
mul
clc
retf
loope
addr16
std
movs
sahf
jp
neg
mov
dec
mov
out
(bad)
(bad)
cmp
push
adc
test
cmp
or
aas
js
and
xor
and
bound
into
or
call
cmps
fwait
mov
and
or
not
pusha
mov
mov
fbstp
pop
xlat
dec
les
pop
dec
aaa
lahf
mov
xchg
jg
mov
les
and
dec
hlt
mov
adc
jl
jns
std
ins
je
push
fnstcw
pop
sahf
scas
pop
cdq
jo
jp
data16
push
cld
scas
sbb
mov
mov
jp
mov
and
imul
sub
jo
push
sbb
lods
xchg
dec
inc
stc
cmp
mov
jno
retf
inc
into
xchg
jb
or
lds
adc
mov
pop
mov
xor
fwait
mov
mov
mov
add
cmp
xlat
bound
jecxz
pop
push
jecxz
xor
xchg
ins
lahf
int
mov
lods
int3
jne
lahf
adc
xchg
mov
jmp
mov
inc
popa
cld
icebp
pop
adc
xchg
inc
jp
mov
in
fsincos
movs
or
adc
fs
sbb
enter
mov
test
test
inc
imul
sub
sbb
inc
and
imul
dec
fnstcw
xor
or
add
pop
inc
aad
jmp
cli
cmc
popf
ss
mov
xchg
retf
jecxz
sbb
lds
addr16
xor
jge
inc
xchg
mov
push
push
xchg
popf
outs
pop
gs
sub
mov
shl
scas
(bad)
jb
and
xor
pop
cwde
jle
inc
pop
mov
push
mov
retf
cld
lods
scas
fsub
sub
fnstsw
(bad)
fsub
mov
ja
sbb
fcmovnbe
sar
cmc
or
xchg
xchg
iret
repz
jle
cdq
out
xchg
retf
jns
sub
add
xor
addr16
and
sti
cmp
adc
jge
xor
jmp
les
jb
xor
(bad)
imul
push
bound
ins
push
cmps
dec
std
mov
push
mov
jns
cmp
iret
add
pop
sbb
jp
mov
cmp
cmc
in
(bad)
and
add
mov
sub
mov
(bad)
scas
add
ds
aaa
std
lds
in
jmp
outs
bound
lahf
inc
jl
xchg
mov
ret
mov
aaa
shl
sub
sbb
outs
xor
mov
in
fs
jno
mov
rol
cmps
xor
mov
shl
sti
mov
retf
mov
inc
les
movs
or
repz
repz
mov
in
adc
cwde
push
dec
fadd
add
(bad)
bts
pop
push
cli
mov
or
inc
das
clc
lds
xchg
(bad)
out
add
jnp
mov
inc
popa
dec
push
fldenv
push
fs
(bad)
fnstsw
fs
and
into
loopne
cmps
xor
daa
adc
(bad)
jbe
popa
pusha
stos
mov
mov
mov
fwait
dec
(bad)
push
retf
mov
jle
mov
ds
sbb
cmp
neg
or
es
mov
data16
sub
or
mov
aaa
out
xchg
imul
push
ret
adc
inc
xchg
call
shl
jp
iret
sbb
je
and
call
outs
jbe
scas
in
das
cli
mov
add
push
movs
mov
or
push
pop
outs
mov
imul
push
and
push
(bad)
pop
mov
rcr
and
stc
outs
xchg
cmps
ins
mov
push
push
jl
jge
xchg
test
or
call
(bad)
dec
mov
mov
hlt
sub
add
push
jp
dec
shr
jle
pop
imul
and
add
or
xchg
dec
mov
sub
clc
mov
sub
sbb
mov
scas
jl
pop
clc
cmp
adc
cmp
sbb
jo
mov
fistp
int3
in
in
pusha
mov
jbe
into
push
lock
lods
ins
xchg
in
sub
lods
scas
dec
rol
(bad)
(bad)
pushf
rol
in
fs
(bad)
mov
cmps
scas
push
and
clc
in
icebp
cmp
das
dec
ret
pop
mov
leave
les
push
push
fnstsw
sbb
(bad)
daa
xchg
mov
add
jo
mov
jmp
and
aad
arpl
aas
sub
or
mov
(bad)
mov
jno
mov
imul
hlt
xchg
ret
dec
mov
clc
ja
push
dec
dec
imul
aam
jo
sbb
jmp
or
sahf
cs
iret
scas
jae
cli
ret
xchg
repnz
inc
xor
ins
and
enter
sbb
add
loopne
push
push
sub
mov
jmp
(bad)
mov
call
inc
sbb
pop
ins
nop
idiv
or
in
ss
mov
leave
outs
imul
shl
into
sbb
xchg
xor
fadd
xor
shl
pop
xchg
test
lock
xor
xchg
adc
push
and
out
pop
jo
xchg
inc
sbb
jmp
daa
cmp
rcl
push
xor
jge
or
daa
or
cwde
push
mov
and
shl
and
mov
push
jnp
xchg
test
add
xchg
xor
test
addr16
or
stos
mov
mov
cmp
and
loopne
pop
aam
stc
sti
enter
pop
leave
aad
movs
and
ins
lods
sub
loop
push
sub
jnp
sub
sub
pushf
out
rcr
sub
sahf
sar
cld
sbb
mov
adc
cmc
dec
jno
adc
ds
mov
adc
mov
imul
jne
cmps
arpl
mov
test
adc
or
ret
stc
cmps
lea
shr
or
cmp
push
mov
push
cmp
out
movs
ret
jnp
adc
xchg
daa
lea
cmp
neg
xchg
lea
retf
adc
cmp
xor
int3
or
jp
dec
rcl
sbb
mov
adc
sbb
ins
ins
and
js
popa
adc
test
xor
fild
xchg
aas
in
push
div
xchg
loop
or
gs
dec
(bad)
xchg
jnp
rcl
jne
das
pminub
pop
psubd
(bad)
in
and
stos
out
aad
and
push
sti
(bad)
push
inc
xchg
xchg
(bad)
in
pusha
call
adc
xchg
inc
and
and
pop
jns
pop
out
and
sub
xchg
adc
push
aam
or
iret
mov
test
sub
adc
and
push
sbb
push
movs
push
sbb
int3
aaa
movs
aad
jno
add
add
(bad)
(bad)
scas
pop
or
jecxz
sub
sbb
adc
add
ror
push
fwait
pop
sar
inc
mov
and
dec
shl
fwait
repz
addr16
popf
ret
fisub
std
mov
pop
cmp
sbb
lahf
arpl
test
fbstp
hlt
pusha
mov
sbb
inc
fnstsw
in
in
dec
test
sbb
sub
cmp
cmp
pop
mov
fisubr
ja
pop
addr16
add
loope
cmps
xor
jge
xchg
dec
xor
fs
sub
xchg
imul
mov
add
pop
(bad)
fcomp
into
fucomp
xchg
cld
xchg
add
ret
dec
sub
popf
in
cmps
push
movs
ret
hlt
inc
push
xor
cmp
inc
(bad)
lahf
lods
repnz
sbb
sub
ins
cmp
mov
cmp
add
aaa
xor
(bad)
and
inc
imul
cmp
daa
cmp
ins
movs
pcmpgtd
or
adc
data16
sar
sbb
fcom
shr
aaa
push
lock
scas
daa
inc
pop
aam
add
and
sub
nop
cmp
test
ss
jae
jmp
stc
mov
loope
cld
addr16
imul
add
and
or
jl
push
cmp
enter
mov
out
pop
mov
inc
cwde
mov
dec
aaa
pop
and
dec
mov
mov
inc
sti
jo
xchg
cmps
dec
cmp
jmp
pop
shl
into
(bad)
in
inc
sub
es
xchg
mov
sahf
aas
sti
xor
dec
jl
mov
scas
mov
outs
and
stos
sbb
push
je
mov
xchg
je
sahf
cmc
add
enter
sub
mov
add
(bad)
push
xchg
call
retf
retf
popf
test
and
(bad)
xor
jno
xor
xor
jno
jmp
loopne
dec
test
repnz
bound
cdq
popf
ds
xor
(bad)
pop
mov
popa
ficomp
mov
mov
test
ret
out
adc
aas
mov
cmp
stc
in
inc
or
jbe
aam
stc
inc
xchg
je
mov
popf
rol
cdq
das
jecxz
dec
xchg
jp
je
stos
movs
lds
stos
mov
and
scas
lock
and
mov
and
aas
outs
mov
(bad)
jmp
(bad)
lahf
out
loop
cmc
inc
xchg
mov
cmp
mov
and
out
adc
fidiv
mov
mov
jno
jo
mov
cli
jno
jmp
outs
pop
rcl
adc
ret
sbb
imul
call
cli
jbe
xlat
sub
sub
ins
sbb
jmp
sbb
push
xchg
push
aas
(bad)
xlat
mov
fdivr
inc
es
sub
clc
test
push
in
mov
dec
test
inc
xchg
sub
pop
cmc
push
mov
call
mov
push
push
out
push
cmc
add
cmps
sub
jp
cmp
cdq
dec
lods
sahf
movs
xor
pop
mov
xchg
jb
mov
arpl
pop
cs
pop
jo
mov
xchg
test
and
pop
test
and
cwde
jne
ins
ja
outs
mov
pop
or
and
hlt
adc
fwait
cwde
mov
pop
and
pop
jo
les
dec
xor
mov
or
xlat
inc
jmp
mov
sbb
jae
jo
xchg
(bad)
jbe
fistp
pop
lock
or
xchg
shr
lods
jbe
bswap
add
outs
pop
mov
mov
in
sti
mov
imul
mov
repz
(bad)
jl
xchg
arpl
sbb
int
scas
or
sbb
stos
fmul
shl
mov
pop
and
popf
cmps
or
or
xlat
jb
jno
dec
daa
sbb
sub
rcl
cmp
mov
cli
jecxz
and
dec
cmp
jmp
mov
mov
fs
push
dec
mov
data16
inc
mov
and
and
pop
lods
shl
push
retf
les
and
(bad)
push
call
push
and
out
bound
sbb
(bad)
aaa
push
and
or
std
mov
mov
fadd
ror
arpl
hlt
test
push
clc
push
push
cmp
lods
pop
cld
fdivr
and
inc
leave
int3
dec
aas
sub
xor
cli
cli
xchg
bound
mov
jae
rdmsr
scas
lock
cmp
xchg
mov
out
in
(bad)
arpl
pop
jle
xor
mov
xchg
or
mov
lock
xchg
les
cmp
push
ror
popa
es
mov
sbb
add
mov
cmp
mov
fxtract
in
ins
dec
rcl
push
cmps
jmp
push
stos
pop
mov
push
inc
mov
lods
test
movs
xchg
(bad)
(bad)
ins
and
mov
mov
mov
dec
cmps
loopne
clc
sbb
aas
aas
dec
(bad)
cli
dec
test
fsubp
cmp
popf
sbb
dec
lea
xor
shr
or
ss
jecxz
xor
push
mov
test
or
(bad)
cli
xchg
mov
dec
xchg
and
aad
or
call
and
lea
and
push
jp
fstp
push
aaa
enter
aaa
add
test
fcmovu
bound
call
ret
scas
jae
inc
iret
icebp
sub
(bad)
cld
sbb
sbb
sub
cmp
(bad)
jecxz
xor
add
jbe
add
in
pop
aad
icebp
add
jg
pop
cmp
sub
movs
inc
cmpxchg
jnp
xchg
fsubr
ret
repz
lds
xor
push
(bad)
test
in
cmp
scas
xchg
shl
loop
add
add
push
push
gs
outs
into
xchg
aam
mov
mov
mov
mov
ins
pushf
mov
test
mov
mov
or
fisttp
inc
xchg
out
jnp
aaa
scas
mov
rcl
ins
les
xor
mov
cmc
xor
jp
je
push
data16
adc
mov
push
and
and
(bad)
addr16
shl
jg
pop
aam
aaa
test
cs
icebp
lahf
cmc
push
add
mov
rcl
and
add
aas
xchg
mov
add
(bad)
jb
push
or
sti
rcr
cmc
stc
aaa
dec
mov
pop
aas
xor
hlt
out
sahf
pushf
mov
ret
test
sbb
mov
push
int3
fs
fisubr
int
loope
es
pop
pop
xchg
es
xchg
cmp
push
jmp
push
(bad)
leave
out
ja
cmp
cmp
in
movs
adc
mov
mov
mov
pusha
scas
push
pushf
pop
arpl
leave
pop
sbb
ins
mov
xor
pushf
(bad)
jp
les
int
jg
push
and
ja
push
add
jmp
out
inc
out
xchg
mov
push
jl
ja
xchg
dec
shl
pop
ror
jecxz
dec
xor
ret
or
fdivrp
ret
mov
pop
in
push
push
loopne
xor
aaa
pop
sub
push
xchg
pop
cdq
or
push
pop
dec
mov
mov
aaa
(bad)
mov
xchg
rcl
mov
ins
movs
xor
jg
clc
xor
jl
clc
add
mov
xchg
cmp
lock
pop
push
dec
mov
inc
mov
sub
mov
sub
ja
sub
dec
into
jmp
mov
xchg
xchg
xchg
rcr
inc
jb
mov
(bad)
sub
mov
mov
mov
in
test
xchg
jae
and
push
xchg
idiv
mov
adc
ja
gs
dec
inc
xor
ss
mov
(bad)
fcom
sub
push
test
pop
mov
clc
or
inc
imul
in
pop
fnstsw
jne
xor
icebp
push
in
pop
inc
push
out
lahf
xor
leave
or
bound
cwde
xor
xchg
xchg
js
sub
enter
fs
imul
ret
dec
jo
sysexit
mov
xchg
nop
enter
sub
fdiv
cmp
cmps
pusha
fstp
outs
sub
mov
inc
test
out
mov
xlat
push
sbb
push
shl
call
addr16
pop
mov
xor
ret
shl
ss
mov
pop
and
pop
xchg
sbb
jl
loopne
retf
lahf
pop
lahf
outs
(bad)
or
out
enter
cdq
push
jmp
imul
aad
and
dec
addr16
hlt
ja
dec
fldenv
or
xchg
repz
mov
lods
push
or
leave
movs
lods
in
and
pop
xchg
nop
dec
add
or
or
add
lods
and
in
mov
pusha
push
icebp
inc
ret
leave
mov
mov
fld
ret
(bad)
movs
stos
sbb
ret
(bad)
out
fwait
xor
stc
retf
push
mov
jno
sbb
ror
js
aas
or
sub
fiadd
sbb
pop
cmp
ss
lods
dec
jb
or
and
aaa
mov
aad
adc
mov
aas
cmp
jbe
sub
leave
ret
pop
outs
mov
sub
fst
xor
mov
cwde
pop
mov
lds
lea
movs
sbb
jle
dec
jmp
js
and
fstp
addr16
call
popa
fcom
outs
neg
or
das
cmp
or
push
leave
ins
dec
daa
cmp
pop
or
mov
fbstp
mov
call
push
pop
and
ins
mov
xor
mov
jbe
aas
fmul
fwait
movs
push
mov
lods
sbb
adc
add
xlat
enter
adc
lods
fucomip
pushf
js
jnp
fsub
xor
pop
mov
xor
sub
mov
add
stos
push
and
dec
mov
jecxz
pop
jle
inc
cdq
dec
call
imul
loopne
repz
mov
(bad)
adc
push
jns
and
add
ss
push
nop
cmp
shl
frstor
ja
jbe
jno
mov
cli
inc
inc
aas
xchg
push
(bad)
cmp
pusha
fbstp
inc
ja
mov
ficom
mov
outs
and
dec
sub
popa
inc
call
mov
loopne
(bad)
or
push
popf
adc
int3
repz
mov
aaa
hlt
fimul
push
shr
jmp
mov
inc
mov
ja
in
lds
push
cmp
cdq
mov
lahf
(bad)
sti
dec
jmp
inc
(bad)
mov
inc
in
ret
inc
les
mov
jb
pop
test
mov
ins
scas
adc
push
jl
add
jbe
mov
mov
fisub
jae
fild
lock
push
xchg
and
push
push
jno
pop
jmp
imul
push
pop
(bad)
xchg
leave
dec
dec
pop
add
aaa
xchg
pop
loop
out
outs
in
test
push
inc
mov
ins
in
push
pushf
mov
mov
jnp
jg
jmp
out
push
aad
(bad)
rcl
stos
push
dec
jno
dec
fnstsw
sbb
lahf
out
pop
jg
xchg
sub
sbb
js
add
(bad)
pop
or
jmp
cmp
mov
adc
shl
sbb
ja
mov
push
mov
call
sti
sbb
dec
xchg
mov
add
imul
daa
adc
mov
mov
leave
jne
jbe
mov
rol
imul
mov
stos
sbb
jl
sahf
mov
sahf
jmp
shl
rol
inc
mov
xchg
and
pop
push
cwde
xchg
jae
or
out
shl
inc
xor
sub
add
stc
push
leave
pop
jo
sbb
fnstenv
stos
pop
cmp
popf
push
ret
scas
push
jmp
rcl
jb
inc
movs
(bad)
cmp
lahf
and
imul
push
lahf
js
mov
psubsw
mov
and
mov
pop
and
push
lods
loope
je
ins
test
push
dec
or
retf
loopne
jl
sub
sti
pop
shr
(bad)
repnz
jo
fwait
pop
sub
in
clc
jle
imul
pop
mov
rol
xchg
or
dec
fs
xchg
fsub
shl
add
mov
inc
jp
bnd
rol
sub
aas
adc
xchg
pushf
scas
imul
in
lds
int
and
lahf
sbb
cdq
mov
sub
mov
push
xchg
add
(bad)
push
aas
push
adc
sbb
sbb
mov
xor
sar
pusha
xchg
mov
aas
out
bound
repnz
mov
lods
sbb
jl
xor
cdq
das
pop
movs
add
(bad)
xchg
ins
data16
adc
repnz
or
popa
mov
lahf
pop
cmc
out
fnstcw
addr16
dec
loop
mov
ins
add
enter
gs
ret
xor
clc
mov
jb
add
outs
sub
aam
sub
pop
or
inc
pop
sbb
jae
into
push
call
in
or
xor
inc
mov
shr
(bad)
arpl
jecxz
inc
mov
cmp
ja
cmps
cmp
ja
xchg
loopne
cmps
xchg
push
mov
call
es
test
mov
fcom
xchg
fwait
aam
adc
and
hlt
fidiv
mov
xchg
pop
mov
fcom
jne
mov
mov
mov
cmc
inc
fimul
adc
add
mov
or
xlat
mov
mov
push
out
dec
fmul
mov
lea
and
or
iret
inc
outs
jb
mov
mov
jno
out
lods
and
ffree
es
dec
pushf
push
xor
mov
sub
mov
ret
(bad)
int
out
push
cdq
inc
out
dec
push
(bad)
sbb
lods
enter
rol
fmul
sbb
lahf
outs
sub
pop
dec
test
popa
sbb
xchg
or
jbe
(bad)
dec
(bad)
icebp
pop
js
pop
pop
fucom
lea
xor
daa
mov
xor
dec
fwait
or
stos
mov
jbe
sahf
jno
lock
mov
aam
js
leave
hlt
or
jmp
sti
xchg
push
mov
push
add
movs
imul
inc
sar
out
pop
retf
es
int3
(bad)
pop
lea
imul
mov
sar
lods
mov
test
pop
mov
jo
out
sahf
dec
add
out
call
mov
push
inc
outs
or
push
fnstenv
lds
fidiv
mov
jo
adc
(bad)
push
mov
lds
dec
out
rol
sahf
sbb
fsub
dec
dec
mov
imul
adc
scas
and
and
(bad)
sub
je
pusha
outs
push
popa
cdq
dec
push
xchg
cmp
mov
sbb
pusha
inc
pop
xlat
add
cmp
in
cmps
popf
jns
call
test
fimul
nop
pop
pusha
leave
or
popa
add
(bad)
cmp
add
ror
rcr
sbb
xlat
mov
sub
sub
ss
xchg
lods
scas
sub
call
jbe
movs
dec
dec
gs
push
xchg
fwait
pop
mov
lahf
imul
xor
adc
xor
cmp
adc
dec
retf
jecxz
jg
dec
outs
mov
push
mov
mov
or
int
ret
cmp
ss
gs
popa
outs
push
repnz
push
aaa
cmps
lods
repz
leave
popa
xor
mov
into
inc
ret
and
in
lahf
ds
out
dec
inc
stc
pop
push
mov
and
pop
movs
xor
jmp
push
sti
sbb
dec
adc
pop
dec
or
sar
pop
push
jbe
mov
lds
nop
or
(bad)
sub
mov
retf
mov
cmps
fmul
imul
push
push
data16
mov
movs
sbb
test
sahf
loope
or
or
or
sbb
push
in
pop
push
sbb
fdivr
dec
push
fstp
inc
fisubr
inc
imul
nop
sbb
xchg
pop
ret
and
imul
fcom
mov
pop
ss
(bad)
mov
xchg
push
sbb
dec
jb
mov
dec
test
fsubr
inc
adc
lea
(bad)
daa
es
adc
cmp
add
inc
xlat
lds
mov
mov
xchg
mov
jae
pop
sbb
jmp
or
inc
cli
or
dec
popa
and
and
sub
jo
fiadd
and
xchg
sbb
or
(bad)
dec
aad
je
lock
out
sbb
jp
iret
pop
mov
jl
jl
mov
or
test
fdivr
rcr
jl
aaa
xchg
lods
sbb
push
or
fs
jle
pslld
cs
leave
idiv
xor
arpl
sub
adc
rol
hlt
mov
sar
out
shr
cs
push
push
sbb
push
cmps
or
push
xor
dec
jl
mov
cwde
push
neg
arpl
push
int
push
icebp
inc
mov
imul
mov
les
loopne
(bad)
jae
inc
sar
xchg
pusha
ins
fisttp
inc
add
lds
add
int
idiv
sahf
ss
shl
ja
pop
cdq
adc
inc
push
pop
shr
mov
int
xchg
(bad)
xchg
neg
xchg
sbb
mov
stos
cmp
test
add
mov
cs
test
ror
add
aaa
aam
adc
mov
cmps
push
cmp
xor
stos
push
aam
out
sti
ror
out
mov
inc
mov
sub
mov
popf
fprem1
push
or
mov
cli
jns
inc
jp
pop
inc
sub
aam
and
add
pusha
add
mov
stos
sti
xor
lahf
ins
xor
lds
sub
adc
mov
js
test
mov
cdq
daa
int
inc
std
push
add
stc
jl
out
cmp
sub
inc
cmc
test
cwde
aas
and
inc
jno
sar
ret
ss
in
mov
mov
loop
and
jnp
xlat
and
jbe
lahf
ss
fiadd
imul
test
pushf
popf
shl
push
cmp
loopne
adc
mov
jecxz
mov
xchg
xchg
adc
into
adc
xchg
mov
dec
(bad)
mov
adc
xchg
arpl
pop
shr
cmps
pushf
lock
jmp
dec
cli
outs
aaa
adc
lahf
sub
hlt
inc
fadd
and
int3
mov
add
aaa
adc
bound
jl
cmp
pop
fdivr
cli
(bad)
jle
retf
jp
mov
or
add
outs
xor
lods
sahf
adc
scas
push
and
and
mov
inc
rol
test
fnstcw
pop
aad
cmp
ja
jnp
xchg
imul
ja
push
add
mov
pop
test
xchg
add
out
mov
xchg
mov
cmps
(bad)
fwait
cmp
cmps
icebp
stc
inc
sbb
scas
ss
xor
jmp
imul
sbb
js
(bad)
dec
mov
bound
mov
shl
cmp
xchg
mov
inc
and
call
je
pop
stc
loope
mov
mov
cmp
daa
cmp
jae
jle
cmp
push
and
jmp
mov
push
push
aaa
and
test
(bad)
lea
in
das
pop
mov
and
sbb
inc
dec
pop
add
mov
js
and
and
call
mov
cmps
sbb
shl
and
test
fild
fild
cmp
mov
scas
mov
repnz
adc
sbb
jmp
inc
add
jge
je
push
aaa
dec
sbb
dec
mov
dec
test
imul
in
jecxz
xchg
and
enter
daa
dec
jl
jecxz
out
setne
(bad)
cmps
mov
add
inc
adc
mov
mov
mov
mov
lahf
cmp
retf
pop
pop
sti
mov
inc
stc
loope
add
es
in
inc
popf
push
and
add
jne
mov
stos
and
(bad)
imul
outs
jno
movlpd
adc
(bad)
xchg
arpl
sbb
mov
add
in
xlat
dec
aaa
dec
std
mov
gs
mov
shl
test
into
pop
dec
xchg
pop
mov
pop
repnz
sbb
xor
pop
rcl
or
dec
sahf
xchg
jmp
or
cmps
and
sbb
inc
dec
shl
jnp
int3
(bad)
fnsave
cmp
mov
sbb
dec
mov
add
jmp
sub
aam
repz
int3
in
out
sub
mov
add
int
ficom
je
jnp
adc
cdq
data16
icebp
movs
jl
dec
or
cmc
stos
call
into
lods
mov
(bad)
test
jecxz
mov
ss
push
mov
getsec
mov
sahf
cmp
push
adc
icebp
jp
mov
ror
fst
ds
or
jne
xor
fwait
add
aaa
adc
mov
(bad)
std
fld
jne
clc
shl
cmp
enter
jae
icebp
shl
inc
mov
test
imul
dec
adc
mov
nop
xor
in
fwait
xor
inc
fs
adc
mov
mov
aas
imul
xchg
shl
fsubr
mov
rol
fisub
pop
jl
lods
and
mov
cmp
or
lock
mov
movs
popa
and
add
lea
sbb
xchg
add
dec
dec
mov
out
sahf
ss
fnstsw
dec
test
cmc
cmc
aas
es
rcr
add
add
xor
inc
shr
and
and
retf
add
mov
loopne
sub
jne
and
push
adc
inc
sub
das
fdivr
retf
inc
fucom
std
xchg
or
inc
cmp
fcom
inc
sbb
mov
mov
std
and
lahf
bound
test
icebp
xor
mov
rol
push
and
stos
jbe
idiv
and
inc
and
mov
mov
or
mov
cmp
jl
fs
and
int
cmps
sbb
not
push
repnz
fild
push
mov
add
or
inc
pop
addr16
rcl
mov
aam
pop
push
sub
adc
popf
jp
addr16
mov
and
scas
xor
sub
ss
lds
lds
jmp
pop
and
add
jbe
loope
jp
xchg
jae
data16
jnp
dec
call
out
mov
sub
sbb
mov
fsincos
mov
fstp
lock
and
jo
in
jmp
add
into
inc
or
std
pop
cs
arpl
sahf
nop
out
retf
add
mov
js
mov
aaa
cli
cwd
adc
dec
vmovdqa
add
stc
add
mov
cmp
jge
sbb
mov
sbb
sbb
stos
in
ret
out
scas
in
mov
rcr
sub
stc
push
aam
int3
inc
add
fwait
clc
call
cmp
add
sub
jo
adc
arpl
push
loop
out
fwait
(bad)
stc
stos
std
outs
and
xor
movs
sar
push
sub
movs
fisubr
test
adc
nop
sbb
jnp
inc
cmps
aaa
or
lods
sbb
xchg
jge
je
adc
repz
mov
clc
xchg
dec
in
fistp
cmc
popa
mov
xlat
xor
xor
mov
push
punpcklbw
cmp
mov
xchg
aas
jae
ret
push
outs
mov
rcr
mov
clc
out
mov
sbb
push
inc
hlt
pusha
xchg
sub
das
mov
lods
xlat
rcr
neg
adc
stc
aas
xor
aaa
in
inc
dec
sbb
add
mov
xchg
adc
xor
mov
jb
psraw
lods
leave
cmps
shl
enter
sahf
inc
test
xchg
jnp
enter
pop
adc
lods
pop
xchg
sti
add
mov
lahf
jnp
jecxz
add
inc
retf
and
hlt
mov
(bad)
cmp
popa
stos
sub
outs
pop
dec
jo
mov
fidiv
and
aam
dec
pop
dec
sub
and
adc
mov
or
adc
xor
jo
mov
dec
mov
xlat
jmp
call
or
or
push
mov
mov
or
add
push
push
pop
adc
in
je
test
icebp
pushf
mov
fs
jecxz
add
test
test
es
cmp
pushf
test
mov
mov
test
sbb
jp
adc
xor
pop
into
mov
(bad)
cmp
inc
xchg
xchg
inc
icebp
add
imul
fmul
cmps
call
xchg
pop
mov
repz
ret
xor
jb
jle
loopne
je
lds
cmp
js
ror
lds
nop
aaa
mov
add
inc
imul
sbb
stos
mov
pop
push
mov
sbb
stos
je
sbb
push
cmc
outs
imul
fist
cmc
and
stos
hlt
pop
mov
(bad)
sti
mov
test
cmps
retf
test
movs
pop
or
iret
sub
mov
call
pushf
inc
fxch
scas
inc
ins
xchg
in
dec
(bad)
jmp
pop
mov
mov
fucomip
push
movs
xchg
jbe
xchg
lds
push
jmp
pop
cmp
es
out
iret
push
out
jecxz
cdq
int
xchg
bound
fdivr
sub
stos
sbb
loopne
call
sbb
mov
outs
loop
xlat
in
mov
gs
into
jne
and
xor
nop
pop
jmp
int
je
or
shl
dec
stc
or
(bad)
addr16
xor
data16
cli
push
test
xchg
mov
(bad)
pop
idiv
(bad)
out
dec
loop
jge
cmps
jmp
nop
es
pop
fwait
fwait
xor
mov
sub
cmp
push
push
lds
in
fwait
stos
jle
xor
sub
push
xlat
retf
or
add
and
(bad)
adc
dec
inc
mov
stos
and
adc
aad
test
test
push
imul
cmp
ins
out
xor
(bad)
push
cld
cmp
sahf
sub
loop
mov
lods
movs
sub
and
test
mov
mov
adc
mov
jne
and
in
data16
or
in
mov
dec
data16
fisub
mov
sahf
popa
dec
cmc
jnp
xor
adc
ret
scas
mov
xor
cdq
(bad)
cmc
lods
push
mov
stos
cmp
sub
add
xchg
adc
(bad)
test
cmp
lahf
shl
mov
or
xchg
mov
ja
stos
in
inc
cld
pop
jae
jg
sub
shl
leave
and
sar
iret
cli
mov
push
pop
jecxz
imul
xchg
int3
int3
fiadd
jno
movups
xchg
rcl
imul
fldcw
retf
sbb
pop
jp
pushf
push
mov
or
sub
in
lods
mov
jg
imul
dec
lds
arpl
rol
(bad)
adc
movs
sar
repnz
jmp
mov
mov
jecxz
push
mov
jne
div
sub
ins
movs
loop
xor
and
xor
repz
mov
or
jmp
cmp
loopne
je
adc
xor
sbb
ror
mov
js
inc
(bad)
and
and
sbb
and
ins
push
jecxz
movs
cmp
jle
cmp
adc
jp
xchg
xor
out
call
stos
es
je
imul
ror
in
mov
push
and
aaa
push
scas
inc
push
dec
sahf
xlat
sti
jb
and
cmp
pop
les
inc
mov
loopne
and
fist
cmp
test
xor
loopne
mov
jmp
pop
sbb
inc
test
sbb
mov
jmp
daa
repnz
les
shr
pop
and
jne
aas
jmp
jbe
add
ficomp
fstp
arpl
inc
adc
sub
icebp
and
push
jns
shl
mov
sbb
stos
pop
stos
sub
jmp
lock
aad
mov
push
dec
pop
out
jmp
fild
loope
xor
sbb
cmp
pop
cmc
jno
lods
push
mov
jo
cdq
sbb
pushf
(bad)
retf
imul
mov
add
sar
imul
ret
cmp
je
lea
test
jae
jno
inc
movs
call
call
and
push
sbb
(bad)
cld
int
xor
(bad)
(bad)
add
out
pusha
mov
ret
jle
cwde
pop
int3
jmp
jg
fadd
test
pop
jge
out
sar
adc
and
or
cmp
ins
jno
ret
aad
push
gs
leave
fnstenv
sbb
sub
sbb
sbb
sub
adc
inc
div
jns
into
jo
ret
xchg
xor
jg
jecxz
rcl
mov
stos
repnz
sub
lds
push
mov
repnz
(bad)
dec
aam
mov
retf
pop
fnstcw
push
outs
das
and
lahf
or
and
pop
mov
icebp
(bad)
jg
mov
call
xchg
pop
jae
loop
fisub
jmp
jno
or
scas
shr
dec
ror
xlat
xor
fisubr
lock
ins
ficomp
std
stos
push
imul
out
fadd
push
clc
fwait
(bad)
mov
test
shl
lea
shl
or
cli
mov
std
xor
pop
loop
push
aad
sub
sbb
and
dec
or
movs
add
push
in
push
rcl
int
aam
push
mov
push
call
jne
pop
pushf
xor
sub
mov
in
push
jb
pop
sbb
daa
jg
push
pop
mov
or
int
or
jno
add
xor
mov
pop
enter
movs
fldenv
call
adc
inc
jle
cmp
xor
retf
push
sbb
push
jl
pop
push
mov
xor
mov
push
rcl
shr
hlt
mov
shl
mov
mov
push
bound
lods
nop
stc
xchg
or
cmc
lea
jae
sbb
sbb
sahf
jne
jne
sub
adc
jecxz
neg
pop
out
in
retf
fcmove
mov
mov
or
xchg
inc
es
fstp
out
int
inc
push
mov
xor
test
pop
enter
test
xlat
lods
dec
xchg
push
cmp
jo
sub
stc
xor
pop
sbb
pop
(bad)
mov
xor
rcr
xor
ins
jge
sahf
cmp
shl
cmp
ret
fidiv
nop
lods
pop
dec
out
xor
dec
cmp
add
sbb
lahf
in
call
ds
mov
not
mov
fisttp
mov
xchg
adc
cmps
out
inc
sbb
fadd
out
scas
mov
inc
mov
cmp
cmp
or
adc
popf
sub
cli
push
cmp
mov
xor
xlat
xor
fmulp
mov
fwait
test
push
test
pushf
or
jmp
cs
in
cdq
mov
lds
lods
jno
cmp
jno
movs
call
ins
pop
sbb
dec
jg
js
adc
mov
jne
jecxz
cmps
lea
xor
sar
adc
pop
fst
cs
mov
pop
fcom
xor
jae
mov
sbb
jnp
(bad)
(bad)
js
fs
std
cmp
dec
movs
das
int
out
xor
sbb
sub
loope
or
fst
js
mov
add
test
call
repnz
arpl
add
sub
ja
sub
test
pop
clc
repz
adc
and
jg
add
leave
add
out
sub
xor
and
mov
or
cmp
fcmove
fdivr
into
iret
jle
in
push
jb
xlat
nop
mov
and
in
shl
sbb
cs
lea
mov
(bad)
or
repz
jnp
sar
xchg
mov
mov
aaa
push
dec
out
ins
mov
xor
mov
or
cmc
cld
aad
cmp
arpl
fstp
popa
cmps
out
pop
xlat
arpl
jmp
xchg
pop
sahf
inc
ret
mov
adc
mov
scas
(bad)
xor
repz
sub
daa
add
xchg
jle
arpl
mov
pop
jo
int3
loope
loope
lahf
ss
pop
jmp
fadd
cmp
mov
dec
inc
sbb
mov
push
dec
dec
mov
cmps
adc
dec
fld
mov
rcr
xchg
and
mov
push
cmps
ret
(bad)
or
xor
mov
call
jle
js
fild
push
popa
push
sub
pop
inc
push
xchg
(bad)
dec
jp
lea
sbb
nop
rcr
sti
and
ffree
bound
xchg
ds
dec
push
dec
cs
mul
(bad)
jae
mov
sub
lds
test
stos
ja
adc
jge
fs
retf
iret
xor
add
fidivr
mov
mov
hlt
push
mov
sub
movs
and
sub
xchg
sub
sbb
xchg
fisubr
xor
int3
adc
xchg
pop
(bad)
push
aad
pop
sbb
jb
mov
out
rcr
xor
ja
jae
cmp
sub
sub
sub
mov
test
int3
leave
and
cli
ins
test
cmp
sahf
outs
rcr
jmp
pop
stos
aam
or
out
lods
das
scas
push
or
rol
and
and
sti
pushf
or
loop
cld
(bad)
arpl
add
cmp
xor
cmps
enter
cmp
(bad)
pop
add
mov
enter
call
stc
mov
test
mov
addr16
and
add
in
cmp
jmp
in
or
pop
mov
shl
sbb
mov
shl
pop
cmp
mov
dec
nop
jae
ja
repnz
or
sub
dec
cld
push
inc
sub
ret
push
arpl
dec
cmp
cmp
dec
outs
push
cli
in
arpl
jb
mov
hlt
scas
cmps
jmp
ins
mov
ret
sar
fcomp
jb
test
mov
jl
out
xchg
sbb
cmp
in
mov
div
jne
scas
mov
push
mov
mov
cs
xor
sub
fwait
or
dec
xchg
stos
iret
xor
pop
cmps
aad
shr
sub
in
pop
pop
sbb
test
pop
stc
and
in
adc
cmp
cmc
dec
and
push
and
pop
inc
shl
jle
ror
and
xchg
pop
sbb
and
stos
mov
pop
jmp
cmps
das
sub
leave
sub
shl
dec
ins
fmul
or
ins
adc
loopne
jmp
xchg
or
mov
call
pop
mov
mov
mov
shl
neg
fst
add
fdivr
adc
lds
stos
loopne
push
aas
jle
cmp
lods
pop
jp
push
sub
cmp
add
ror
dec
enter
mov
popf
dec
das
inc
push
mov
loop
mov
jae
sbb
cmp
and
xchg
push
pop
movhps
ret
sbb
shr
mov
neg
popf
ins
icebp
pop
arpl
dec
push
fisub
dec
fidivr
cmc
dec
cwde
ins
bound
ret
sub
jecxz
dec
jle
pop
push
xlat
mov
out
cmp
or
iret
and
jge
jbe
xor
rcl
out
in
popf
(bad)
jo
cmps
pop
dec
loopne
call
out
imul
stos
leave
stos
aam
movs
call
pushf
arpl
jae
sbb
scas
ja
retf
cli
hlt
xor
sub
jmp
add
jmp
sbb
scas
retf
xchg
inc
add
or
jl
jl
imul
push
gs
fnstcw
retf
in
loope
xchg
push
xor
lods
arpl
pop
mov
cmp
stc
call
or
jmp
jne
out
std
jno
ins
div
push
add
sbb
adc
fld
mov
popa
in
jbe
xor
outs
adc
(bad)
adc
or
outs
jmp
jbe
in
push
jge
cmp
sub
outs
icebp
mov
sub
pusha
push
adc
stc
sbb
push
pop
adc
mov
and
lock
(bad)
cli
dec
rcl
jle
aam
cmps
push
(bad)
mov
loope
rcl
inc
in
jnp
jg
(bad)
arpl
jge
rcl
mov
sbb
ins
jecxz
inc
xor
dec
loop
fbstp
dec
fld
dec
ret
mov
add
pop
jecxz
movs
in
fldcw
jb
stc
lods
jge
das
(bad)
pop
sti
test
test
pop
or
repz
lods
or
cdq
fnstsw
leave
enter
or
sbb
adc
or
in
mov
push
pop
xor
mov
jle
cs
inc
rcl
jbe
(bad)
push
fisubr
jb
in
cmps
ss
mov
loop
cwde
cmp
pop
fimul
shr
inc
js
cmp
or
add
mov
out
stc
popa
cmp
sbb
jnp
xor
push
sti
cmp
arpl
jg
out
xlat
cmp
jno
cmp
fs
movs
xchg
mov
int
int
mov
add
xchg
push
xchg
cld
sbb
jno
(bad)
push
jo
movs
out
mov
pop
adc
stos
retf
stc
cmp
dec
fnclex
push
fcomp
js
mov
pop
and
lds
sub
fbld
dec
or
pop
repz
stc
inc
hlt
sbb
jo
push
int3
mov
jne
mov
or
dec
in
jecxz
retf
ss
loop
xchg
xchg
in
add
out
xor
jno
jecxz
xor
dec
leave
mov
mov
jne
in
mov
mov
sbb
leave
fld
or
jnp
or
fcom
std
xor
outs
fwait
imul
jmp
push
sti
ds
xor
jg
arpl
cmp
cmp
sub
ret
and
pop
sub
jp
sub
ret
lea
es
or
test
and
dec
das
sub
sbb
dec
in
out
lds
sbb
scas
call
push
adc
and
je
or
call
test
sub
fistp
mov
push
xchg
in
jle
in
mov
ret
mov
push
or
ja
push
movs
push
fwait
in
addr16
std
into
lods
mov
(bad)
jecxz
std
ja
jne
test
retf
push
div
push
(bad)
lock
sub
iret
inc
pop
dec
clc
push
imul
inc
jmp
jo
retf
call
mov
test
scas
mov
shl
mov
aaa
lods
dec
and
push
dec
fmul
shl
push
push
movs
mov
stos
jge
clc
dec
inc
movs
cwde
mov
dec
jbe
push
fild
outs
jg
int3
std
loop
lods
inc
add
xchg
fild
(bad)
pushw
inc
mov
retf
sahf
movlps
jb
sbb
jne
dec
sets
jae
inc
push
out
lock
push
or
cs
cmp
cmp
popf
loopne
jb
ja
ficom
arpl
and
retf
cdq
in
out
push
(bad)
cld
mov
push
cmp
jmp
sub
push
adc
mov
sub
pop
int3
(bad)
gs
mul
shl
push
or
sbb
js
popf
cwde
lock
sub
out
cli
jns
or
mov
out
div
bound
adc
cmp
xchg
mov
test
clc
(bad)
adc
add
xor
mov
mov
jle
ror
sahf
jmp
inc
add
into
iret
popf
stos
and
inc
imul
fisttp
dec
xchg
loopne
loopne
mov
push
xor
inc
push
add
sub
out
adc
adc
cmp
cmc
mov
xchg
xchg
lock
push
in
daa
fdiv
loope
sar
xor
xor
imul
cmp
sbb
aaa
dec
addr16
jb
pop
mov
jns
fimul
sub
ss
mov
js
mov
addr16
add
loopne
call
arpl
scas
adc
jl
and
sti
(bad)
shr
xor
cmps
push
push
mov
mov
pop
cmps
sbb
arpl
sti
inc
imul
or
push
and
mov
sbb
inc
xchg
mov
xchg
mov
add
mov
cmp
cmp
ins
jle
pop
repz
div
mov
cs
sbb
call
int3
add
push
jecxz
rol
pop
and
and
jno
(bad)
(bad)
enter
pop
and
popf
or
sti
pop
(bad)
push
fs
fnop
cld
dec
xchg
sti
aam
call
mov
push
lods
xor
adc
jne
imul
dec
cwde
outs
jns
xor
mov
mov
dec
in
lock
movs
daa
or
add
jl
xchg
rcr
cmp
jp
imul
mov
and
clc
div
test
outs
nop
add
shr
mov
xchg
out
sub
lods
out
test
daa
out
movs
icebp
or
pop
pop
push
add
lock
lock
dec
or
pop
xor
inc
test
cld
or
out
ins
lahf
and
in
aaa
(bad)
stos
mov
(bad)
push
push
adc
inc
outs
leave
sar
mov
mov
xchg
jp
hlt
inc
daa
nop
fcom
jmp
call
sbb
aad
xor
lods
test
repz
and
add
sub
ins
inc
mov
mov
inc
(bad)
imul
push
sahf
dec
pop
sub
sahf
jbe
mov
mov
add
stos
aas
popf
jbe
pop
add
mov
jmp
sar
stos
sbb
cmps
fwait
push
inc
pusha
add
outs
into
(bad)
add
cmp
or
movups
mov
sti
cmps
int
movs
jbe
aaa
popa
push
out
shl
add
sbb
fisubr
push
pop
idiv
cmps
addr16
pop
mov
cld
or
test
jae
nop
and
or
add
mov
mov
sub
mov
pop
add
jo
add
cmc
and
fs
xchg
pop
loopne
inc
(bad)
mov
clc
cmp
push
cmp
fs
pop
mov
sbb
ins
ret
mov
je
neg
lods
ins
sbb
xchg
push
inc
(bad)
cli
cwde
rcl
fisttp
mov
mov
call
in
in
xor
in
sbb
dec
and
test
popf
jl
xchg
sbb
nop
and
fs
inc
and
mov
div
scas
in
js
rcr
test
cdq
add
add
cld
push
nop
iret
rcr
jbe
mov
push
hlt
or
xchg
mov
jno
xor
test
test
xchg
daa
dec
loop
std
outs
xor
in
btr
movs
in
lea
mov
retf
pop
leave
and
test
cmp
shl
fisubr
xchg
adc
sbb
add
jg
pop
bound
arpl
imul
sbb
mov
cmps
sbb
ss
cs
cmps
cmps
pop
fucomp
repnz
out
lahf
mov
sub
jb
jge
inc
cwde
mov
jno
mov
icebp
and
push
mov
adc
test
mov
jmp
pop
push
xchg
mov
jp
push
lds
lock
push
pop
jnp
retf
test
inc
adc
sbb
cmp
inc
not
add
dec
cmp
push
inc
adc
sbb
movups
xchg
xor
cmp
pop
adc
imul
popa
movs
adc
in
fld
cmp
xor
mov
jb
aam
(bad)
pop
push
nop
inc
psllq
mov
inc
loop
or
aaa
into
dec
sub
iret
pop
push
xor
ja
adc
aaa
out
xor
inc
mov
retf
sbb
stos
dec
out
push
xchg
jl
xchg
sub
enter
mov
outs
jmp
rcr
pop
mov
mov
push
fistp
movs
jle
sti
not
adc
je
sbb
dec
mov
dec
dec
lods
mov
xor
xchg
rol
sbb
push
jne
mov
mov
add
push
gs
mov
push
sub
inc
dec
mov
imul
xchg
xchg
push
cmp
sahf
stos
pop
mov
lock
xchg
stc
loopne
push
mov
sar
inc
inc
aas
bnd
push
xlat
fsubr
jbe
fs
ficom
jnp
push
in
int
lock
ficom
div
xor
mov
hlt
mov
in
inc
aad
outs
rcr
nop
inc
push
rol
cmps
daa
cmps
mov
ins
push
jmp
mov
dec
loop
dec
dec
xchg
push
push
push
dec
sbb
(bad)
aam
pop
imul
xchg
add
test
jge
sahf
(bad)
in
aaa
stos
push
jle
add
cdq
ins
fisub
pop
xlat
adc
mov
sbb
mov
popf
add
ficom
call
div
imul
(bad)
xchg
shl
dec
movs
add
mov
dec
xchg
jmp
pop
mov
mov
mov
dec
mov
xlat
div
ja
add
xchg
popf
shl
dec
call
jbe
rol
fistp
xchg
sbb
and
push
adc
inc
dec
mov
xchg
ins
xlat
(bad)
add
xchg
dec
mov
ja
dec
test
fcomp
rcl
sbb
movs
retf
jbe
xor
or
cmp
popf
mov
out
cmps
sub
fadd
add
sub
sub
and
push
outs
enter
inc
ja
into
ds
mov
ret
or
fidiv
cli
js
jne
ins
mov
inc
mov
test
cmp
movs
scas
ss
mov
fucom
push
push
pop
iret
movs
pusha
out
xchg
and
ds
fcom
sar
xor
outs
test
sbb
repz
xor
xor
and
int
xchg
sub
out
fbld
cmp
ret
sub
rol
pop
in
cwde
and
mov
mov
xor
pop
idiv
mov
inc
adc
nop
aam
mov
iret
dec
jbe
cmc
idiv
sbb
jle
push
out
pop
xor
mov
pop
pop
call
test
mov
add
lods
shr
pop
fmul
adc
adc
mov
pop
pusha
sub
and
mov
xchg
(bad)
es
repnz
xchg
imul
mov
and
and
scas
mov
jg
dec
push
aad
lods
mul
push
jmp
mov
mov
cmp
lea
daa
xchg
jns
out
loopne
out
daa
shl
cmp
lds
ins
repz
mov
mov
lock
lods
cmp
sbb
enter
daa
fcomp
enter
stos
jl
push
xor
lods
fcmovb
shr
test
sbb
arpl
add
imul
push
xchg
sar
rcl
pop
mov
(bad)
aam
shl
fist
les
(bad)
mov
outs
xchg
and
or
call
jge
aaa
xchg
sbb
dec
pushf
jge
and
sbb
imul
inc
movs
fadd
cmp
fdiv
enter
jg
(bad)
jge
test
adc
stos
int
adc
push
sub
and
(bad)
sbb
sbb
xchg
mov
dec
mov
cdq
test
cmp
mov
mov
xor
mov
mov
xchg
jne
movs
pop
mov
mov
int3
repz
cli
mov
out
push
jnp
lods
and
or
neg
pop
jmp
pop
scas
jns
push
inc
xor
or
push
xor
fdivp
out
mov
(bad)
jge
cmp
aam
xchg
cmp
mov
mov
cmp
inc
sub
sub
sbb
out
fnstcw
mov
mov
sti
inc
inc
in
dec
jmp
jo
pop
sbb
xchg
and
mov
jmp
stos
call
(bad)
mov
cdq
push
add
pop
adc
lds
sub
rol
xchg
je
push
mov
jmp
daa
inc
cld
inc
cwde
ss
push
pop
ins
pusha
mov
int
das
lock
push
dec
xor
pop
jno
mov
jecxz
retf
xchg
and
mov
sbb
pop
inc
rcl
fs
mov
shl
lea
movs
mov
push
adc
popa
jmp
mov
pop
pop
sub
lock
je
pop
push
inc
gs
test
jle
sbb
dec
and
jl
cmps
mov
stc
cli
test
gs
dec
out
jp
sub
dec
(bad)
scas
cli
cmp
fdivp
shl
and
imul
cmp
fs
ss
call
xlat
push
adc
imul
(bad)
add
test
mov
dec
bound
dec
dec
xchg
fwait
mov
and
ret
inc
pop
jmp
leave
aam
cmp
jecxz
imul
dec
fwait
push
add
mov
daa
iret
cmovb
dec
std
xchg
test
pushf
push
mov
daa
jmp
dec
add
arpl
loopne
cdq
push
sub
jecxz
mov
stc
loop
jbe
xchg
fadd
jecxz
rcr
sbb
cs
sar
mov
adc
push
sub
sub
push
shl
jbe
int
jg
mov
sbb
loope
rol
pusha
(bad)
mov
inc
popf
inc
adc
xor
addr16
lds
xchg
xchg
mov
xlat
into
jl
jo
pop
mov
ja
ss
inc
jnp
stos
leave
and
lods
pop
in
mov
push
stos
fmulp
inc
test
enter
adc
pop
retf
xchg
jmp
pop
sbb
xlat
inc
cmp
push
les
repz
mov
mov
adc
lods
push
sti
neg
fisub
scas
dec
fwait
out
mov
or
add
push
out
mov
test
pop
lahf
jnp
cs
mov
mov
into
aaa
(bad)
sti
retf
mov
or
or
adc
add
scas
xchg
lods
xchg
mov
in
cmp
stos
sbb
push
inc
not
int
lock
aas
das
bswap
pop
arpl
lds
mov
mov
retf
mov
xor
mov
inc
jae
xchg
shl
(bad)
call
mov
mov
cdq
imul
scas
push
adc
jns
mov
in
inc
loopne
loope
jbe
mov
psllw
and
test
call
test
and
lahf
xor
sbb
xor
jb
in
stos
scas
xlat
jge
cmp
cmp
fiadd
ds
adc
call
cmp
and
push
sbb
inc
xchg
repnz
loope
push
push
sbb
sub
mov
out
sub
mov
xor
mov
ss
out
cmp
or
mov
xchg
mov
inc
pop
or
lahf
aas
xchg
call
arpl
pusha
or
xchg
arpl
dec
fxch
push
dec
cmp
ins
cmp
sub
add
loop
pop
ficom
inc
inc
scas
fdiv
sub
pop
or
mov
cmp
pushf
jbe
pop
bound
iret
jg
call
jbe
mov
push
imul
aad
loopne
and
sub
jp
add
xchg
call
lock
push
mov
sbb
popa
sub
aaa
mov
cmp
mov
mov
dec
xor
mov
inc
mov
cld
call
test
or
popa
imul
icebp
lods
mov
inc
sar
xor
outs
ja
push
ret
leave
jg
or
jl
cmp
cmp
inc
dec
dec
xchg
fild
aad
ja
jge
sub
sbb
in
add
pop
mov
mov
sub
jno
mov
test
or
sbb
cmps
jae
add
shl
fstp
push
cmp
fxch
ret
xor
call
and
jl
iret
daa
cdq
arpl
sub
or
js
movs
fsub
(bad)
cmps
data16
inc
pop
test
popf
cdq
dec
sbb
loop
jmp
ds
sahf
mov
add
push
mov
pop
and
sub
and
mov
pop
mov
push
sub
push
fs
je
jne
test
movs
xchg
dec
and
xchg
nop
and
jbe
cld
cmp
test
xor
xor
inc
adc
jmp
es
xchg
pushf
xchg
mov
and
fdivr
inc
sbb
add
lods
in
mov
jmp
lock
fs
mov
enter
cmp
inc
add
jns
or
fld
(bad)
iret
or
sbb
js
pop
cwde
dec
mov
sub
int3
lahf
mov
(bad)
push
mov
xchg
pusha
mov
mov
xor
or
inc
inc
clc
adc
push
jno
(bad)
and
cmp
cmp
int
xor
mov
dec
adc
stos
sbb
push
cmc
adc
mov
or
(bad)
sub
jne
test
loopne
cmp
pop
xchg
jmp
ror
pusha
loope
sahf
clc
or
push
sbb
pusha
in
les
mov
add
and
out
and
lods
add
jno
dec
into
sar
fadd
jge
repz
cmps
cmp
popa
pop
xchg
xchg
cld
xor
push
imul
mov
mul
add
mov
gs
pop
popf
imul
add
or
inc
aaa
push
loopne
add
xchg
neg
adc
xadd
jnp
sahf
movs
pop
pop
and
jg
(bad)
jle
cli
cdq
dec
or
push
mov
sahf
dec
stos
(bad)
daa
cmp
fsubrp
rol
fidivr
add
enter
movs
push
adc
push
jmp
sub
in
mov
mov
aas
cmp
or
cmp
shl
cdq
sbb
jp
fcmovu
dec
lahf
or
rol
fst
sbb
mov
sbb
scas
gs
mov
(bad)
retf
aam
stc
cmps
pop
sahf
(bad)
scas
sbb
add
or
and
or
out
das
je
aaa
mov
dec
in
jmp
mov
int
cmp
fst
int3
in
cld
adc
inc
(bad)
nop
retf
scas
sbb
in
xor
sub
lods
pop
xchg
ja
add
pop
int
test
xchg
test
mov
fidiv
sbb
cli
pop
add
test
out
mov
ror
lahf
pushf
out
push
inc
adc
and
mov
add
or
pop
mov
popa
dec
out
mov
(bad)
data16
scas
and
inc
add
repz
sbb
in
jmp
push
dec
inc
jle
ja
movs
inc
jle
test
fs
jne
pop
imul
mov
xchg
xchg
mov
adc
pop
sahf
sub
dec
lds
inc
inc
pop
jp
pop
and
add
fisttp
test
ror
icebp
xlat
and
int3
xchg
push
out
stos
arpl
cmps
in
xor
(bad)
cmc
adc
in
inc
out
jle
daa
fs
ja
xlat
xchg
clc
push
push
bound
mov
dec
out
push
push
adc
es
adc
pushf
ss
pop
rcl
or
xor
mov
(bad)
or
mov
mov
cmp
js
ss
adc
jmp
out
cdq
inc
mov
sti
in
ret
push
jge
aaa
pusha
push
aaa
daa
ffreep
dec
add
(bad)
aas
xchg
or
fadd
xchg
js
xchg
cmp
sahf
fwait
mov
inc
div
std
fs
mov
es
and
daa
std
ins
sti
cmp
mov
into
jge
ins
mov
nop
arpl
add
jne
jns
movs
pusha
pop
jmp
jbe
inc
and
scas
mov
jge
cmps
imul
jp
fs
mov
fcom
es
jne
pop
jge
cmp
in
xchg
push
and
fnsave
push
mov
(bad)
nop
cmp
repz
shl
dec
pmulhw
rcr
mov
sub
xor
jl
and
(bad)
scas
mov
xor
pop
ja
test
in
adc
movs
pop
jge
and
jmp
pop
mov
xchg
daa
mov
push
sub
push
xchg
das
call
pushf
adc
cmp
inc
push
outs
(bad)
aad
nop
lods
or
mov
jno
or
mov
bound
xor
arpl
ss
inc
movs
dec
iret
aam
dec
push
xchg
sub
pop
ror
sbb
jmp
fdiv
jge
sbb
lock
adc
inc
jecxz
sbb
hlt
xchg
push
push
outs
add
push
icebp
push
mov
xchg
fs
and
cmp
fwait
movs
mov
pop
sbb
add
sub
pop
shr
or
push
aaa
(bad)
push
std
cmc
in
cmc
and
mov
dec
add
mov
stos
and
es
or
pop
arpl
ficom
inc
fld
test
pop
shl
inc
call
jmp
or
(bad)
retf
push
jecxz
arpl
mov
mov
shr
inc
jo
jle
fnstcw
mov
in
mov
daa
mov
pop
adc
or
ja
stc
mov
mov
loop
push
bound
jbe
adc
stos
cmp
push
dec
stc
sub
pop
jg
nop
jns
pop
mov
std
addr16
test
and
ins
sbb
push
loopne
dec
xor
or
scas
add
in
rcl
fmul
shl
or
mov
add
pop
and
mov
fs
addr16
pop
push
fwait
xchg
or
sbb
imul
jb
stc
push
mov
pop
repz
and
(bad)
loope
dec
fcomp
or
mov
loope
or
xor
sti
daa
aam
or
mov
mov
mov
lahf
mov
stos
mov
cmp
popf
push
retf
test
inc
pop
push
push
xchg
(bad)
and
test
das
dec
ret
cmps
and
or
sub
jnp
leave
loopne
movs
dec
(bad)
cwde
push
enter
mov
imul
(bad)
shr
in
repz
ret
xchg
add
out
scas
mov
mov
push
mov
pop
push
imul
retf
mov
scas
fist
sbb
movs
jmp
mov
test
ret
pop
out
or
push
pop
xlat
xchg
stc
sahf
jmp
mov
sbb
xchg
leave
pop
push
ja
sub
in
std
mov
dec
data16
retf
sub
sbb
jmp
mov
call
xchg
push
inc
fdivr
or
je
clc
cmp
loop
aam
outs
cdq
div
jmp
and
cmps
int
loopne
pusha
adc
aas
push
pop
sbb
push
cmp
adc
add
cs
fmul
nop
jnp
xor
mov
pop
clc
rcr
imul
(bad)
shl
xchg
fadd
enter
add
push
inc
lods
cmc
arpl
inc
push
retf
idiv
add
rcr
dec
pushf
xor
pushf
jl
inc
nop
sub
cmps
xor
std
jne
jmp
aaa
jmp
int
sbb
out
ret
(bad)
adc
rol
pop
shr
jbe
mov
sub
mov
call
sti
scas
fiadd
cmc
dec
jbe
imul
(bad)
pop
jle
inc
pop
cmp
xchg
imul
ror
gs
jg
mov
mov
stos
mov
clc
sbb
cmps
fdiv
cwde
inc
pop
adc
xchg
or
mov
mov
popf
inc
cmp
and
ret
cmp
inc
call
fidiv
repnz
(bad)
hlt
mov
mov
xlat
nop
es
ins
int3
jne
(bad)
lds
cmps
pop
fst
and
mov
aaa
scas
push
mov
mov
into
test
sub
int3
stc
loope
es
jge
push
jae
out
sbb
lahf
push
mov
or
shl
rcr
cmp
push
jmp
(bad)
xchg
pop
xor
inc
fild
or
cmp
cmc
and
lock
or
or
(bad)
data16
jmp
int3
leave
out
sub
shl
(bad)
scas
mov
and
xchg
mov
pushf
cwde
xchg
dec
jmp
ja
mov
lds
cmc
inc
mov
push
sub
cld
out
jecxz
in
pop
or
pop
rol
jg
sbb
mov
cmp
or
call
shl
add
mov
outs
or
mov
mov
sahf
ret
dec
add
dec
dec
xchg
xchg
jo
push
pop
jmp
scas
scas
stos
push
pop
stos
ret
cmp
jno
push
or
sahf
leave
aad
dec
das
or
jne
into
sub
xor
mov
push
jmp
jnp
call
jp
dec
xchg
pop
jmp
push
retf
adc
cmp
shl
aam
retf
inc
mov
ret
inc
mov
sub
adc
mov
xchg
in
gs
loop
in
mov
aam
into
dec
inc
and
iret
dec
jg
mov
(bad)
fld
fsub
dec
aad
pop
out
stos
fistp
jne
(bad)
fs
test
dec
aam
sbb
cmp
sbb
pop
dec
inc
fstp
neg
ja
and
(bad)
nop
xchg
adc
jns
fild
iret
nop
xor
fldenv
gs
imul
mov
(bad)
dec
jmp
iret
popf
mov
test
jb
icebp
dec
add
into
lahf
call
fs
or
(bad)
cdq
and
inc
jp
mov
ror
sbb
int3
ins
sbb
and
inc
xchg
pop
pop
call
cmp
data16
es
mov
cs
adc
lahf
jae
jbe
dec
and
jg
and
pmullw
sub
push
add
adc
or
fwait
mov
popa
mov
dec
push
adc
out
sbb
sti
inc
dec
inc
xchg
daa
pop
inc
fcomp
pop
scas
sub
out
mov
adc
inc
ds
and
push
or
out
out
pop
push
(bad)
push
dec
pop
push
add
xor
arpl
adc
cdq
jecxz
stos
mov
pop
inc
dec
ins
and
xor
sub
xor
push
inc
xchg
add
xchg
push
retf
and
pop
into
push
ja
aas
scas
xchg
nop
idiv
outs
mov
mov
xor
lock
xchg
fnstsw
and
frstor
loop
shl
adc
or
xchg
or
add
std
rcr
sbb
jl
ins
(bad)
hlt
fcomp
mov
inc
inc
and
stos
(bad)
jecxz
arpl
aad
jp
or
cmps
inc
adc
mov
cmc
mov
sub
and
aas
cmp
cmp
xchg
push
sahf
or
push
cmps
fidivr
pop
shr
out
jb
popa
jbe
mov
sbb
scas
test
loopne
or
mov
jns
pop
jle
jmp
aad
jle
xchg
test
or
arpl
push
pusha
pop
mov
nop
jg
xchg
xor
dec
cmps
pop
pusha
ret
(bad)
fisub
push
inc
lea
mov
sbb
out
add
aas
and
cmp
mov
push
push
fld
pop
xchg
mov
out
dec
(bad)
jo
and
mov
ins
je
jge
mov
outs
inc
add
and
cmp
rol
imul
mov
xchg
out
adc
jnp
xchg
adc
xor
ret
mov
fisub
scas
adc
int
outs
mul
sbb
xchg
mov
mov
icebp
inc
cli
data16
xor
(bad)
or
(bad)
mov
out
(bad)
ds
(bad)
sbb
dec
mov
(bad)
and
ja
cmp
dec
sub
pop
clc
sahf
jns
adc
cmc
clc
inc
loope
mov
xor
jne
push
aaa
test
and
xchg
pop
fadd
mov
push
repnz
dec
add
imul
rcr
push
xchg
dec
cmp
sbb
pop
mov
out
mov
ret
retf
mov
lock
jge
xlat
out
inc
jae
adc
sub
loope
adc
out
fdivr
test
mov
jmp
inc
shr
fs
popa
push
ror
fs
xchg
dec
adc
aaa
fs
std
push
mov
clc
imul
sbb
cwde
push
sbb
aaa
dec
shr
fdiv
xor
cmp
sar
retf
aas
or
mov
and
xchg
jnp
cmp
in
(bad)
aaa
jle
xor
mov
xchg
mov
(bad)
fld
or
xchg
lods
dec
jne
imul
adc
or
or
fsub
in
shl
(bad)
call
mov
mov
mov
(bad)
int
cs
cmc
jecxz
push
stc
fbld
dec
jge
sbb
cmps
iret
cmp
xor
sbb
mov
jg
loope
mov
inc
cmps
xchg
out
push
outs
pop
sti
test
ror
add
sub
jmp
repz
sub
adc
inc
inc
int
ss
mov
add
sti
cmp
cdq
push
stos
fisub
je
xchg
jno
into
sbb
sbb
(bad)
jmp
call
cmps
fwait
jg
cdq
leave
push
mov
mov
add
mov
dec
dec
fcom
js
loopne
jo
xor
mov
mov
cmp
add
bound
lds
xchg
movs
add
lahf
mov
cmp
inc
push
pop
dec
dec
shl
xchg
jmp
sbb
cmp
xchg
test
(bad)
mov
in
add
ins
or
aas
je
add
add
jae
add
xor
jns
add
xor
daa
ins
mov
push
inc
pop
xor
inc
popf
mov
shr
cs
(bad)
icebp
or
pop
ret
mov
imul
and
mov
xor
(bad)
scas
mov
sti
ror
popa
mov
aam
clc
test
leave
dec
or
pop
mov
cmp
xchg
(bad)
cli
adc
push
daa
and
test
and
cmc
mov
ins
pushf
xchg
mov
(bad)
addr16
lea
mov
mov
shl
hlt
call
outs
jmp
jbe
xchg
mov
cld
pop
retf
mov
pop
out
xlat
lea
mov
inc
call
call
sub
cmps
out
dec
push
retf
sub
or
(bad)
xor
xchg
sub
cmp
and
jecxz
retf
jnp
lock
in
pop
(bad)
add
(bad)
xor
xchg
shr
aam
in
pop
mov
in
shl
and
sbb
and
mov
rcr
jb
xor
push
(bad)
xchg
out
xchg
push
and
hlt
mov
push
leave
ret
pop
mov
ins
je
push
mov
add
sbb
sub
jnp
outs
or
inc
jle
sar
mov
hlt
imul
mov
cmps
mov
jp
xor
mov
dec
movs
jbe
jl
pop
enter
pop
test
(bad)
mov
pop
mov
and
sbb
ss
(bad)
lea
dec
fnstcw
mov
push
adc
xchg
and
mov
fist
jmp
add
push
aaa
jmp
add
or
ins
das
out
adc
aas
out
mov
mov
inc
dec
call
lea
out
mov
mov
loopne
inc
dec
inc
cmp
xor
(bad)
stc
lds
jp
xchg
sti
sti
push
dec
mov
mov
ja
xchg
es
call
sbb
dec
add
dec
add
sbb
xor
mov
or
or
push
mov
mov
xor
cmp
(bad)
(bad)
les
inc
movs
stc
inc
pop
push
xor
xchg
mov
cmp
add
push
dec
out
jnp
movs
lock
fldcw
push
push
cmp
add
adc
mov
fsubp
scas
jge
scas
out
mov
scas
inc
or
pop
cmp
test
sub
(bad)
ins
jecxz
push
aam
jmp
sub
pop
leave
shl
test
(bad)
and
inc
mov
xchg
push
push
mov
mov
cli
in
xchg
push
xor
fdivrp
loopne
fld
mov
xor
dec
sbb
jp
in
sbb
and
pushf
je
sub
push
sub
xor
shl
lods
cs
xor
rol
movs
jmp
ret
jmp
mov
movs
sbb
xchg
adc
jno
fmul
adc
cld
push
popf
and
add
jecxz
fcomp
cld
push
shl
jne
icebp
nop
xor
pusha
xchg
std
popa
inc
imul
cmp
inc
pop
push
cmp
pop
in
pop
out
adc
mov
test
mov
or
das
mov
pop
or
xlat
dec
mov
ins
add
fwait
lods
and
rol
dec
(bad)
mov
loopne
pop
cdq
std
xchg
xchg
fstp
mov
(bad)
je
sbb
push
push
sbb
or
leave
shl
jns
imul
cmp
add
in
lods
outs
shl
push
or
shl
push
in
pop
in
mov
xor
sub
jne
rol
rol
out
sub
push
jns
fmul
jnp
(bad)
jle
xchg
cmp
sbb
das
xchg
xchg
mov
(bad)
mov
mov
retf
pop
popf
or
inc
fstp
stos
adc
hlt
or
into
and
jmp
mov
xor
lock
inc
inc
stc
hlt
gs
sbb
jnp
aas
xlat
sub
and
into
adc
sbb
mov
mov
push
adc
push
imul
and
mov
xor
lods
fmul
jns
fnstenv
test
loop
mov
scas
cmps
(bad)
nop
icebp
shl
add
xchg
popf
test
scas
bound
push
push
stos
adc
fistp
and
sbb
shl
dec
push
pusha
stos
mov
test
add
aam
inc
dec
mov
mov
into
adc
mov
inc
dec
cmp
mov
jg
cmps
in
inc
and
jae
es
jns
push
loopne
sbb
adc
xchg
ja
ins
adc
mov
xchg
mov
or
retf
push
in
nop
mov
enter
(bad)
in
mov
mov
jne
sub
sbb
cmp
mov
out
add
adc
push
inc
cmp
pop
mov
xchg
jo
mov
inc
call
ins
pop
mov
inc
hlt
and
ins
ja
in
dec
adc
jns
test
fwait
inc
cli
fwait
adc
adc
outs
xchg
shl
rcr
clc
xchg
stos
cwde
test
fidivr
jne
sbb
test
mov
test
cmps
aad
movs
push
push
aad
pop
je
push
jg
sub
pop
adc
xor
shr
or
fstp
mov
cs
push
jg
mov
and
std
jbe
xor
mov
dec
mov
xchg
jnp
rdpmc
xchg
cmp
test
cwde
test
jg
xor
xchg
mov
or
adc
push
xor
mov
invd
js
inc
neg
not
test
js
retf
jmp
add
push
jbe
mov
leave
fst
jbe
mov
shl
repz
repz
pop
hlt
or
pop
out
push
loop
inc
fs
not
push
push
retf
loope
arpl
aad
cmp
lods
scas
out
jmp
mov
dec
in
out
and
sub
sti
pop
inc
xchg
push
(bad)
in
sar
fwait
mov
push
or
jb
mov
or
cli
retf
pop
cmp
sbb
sub
stos
xchg
mov
shl
jmp
cmc
es
(bad)
xor
mov
sub
js
adc
fcmove
cmps
ja
push
movs
fs
int
arpl
dec
mov
jno
dec
pop
idiv
sub
and
outs
xchg
sbb
(bad)
nop
into
inc
idiv
add
pop
fld
aam
(bad)
cmp
jp
adc
test
push
(bad)
push
aam
xor
mov
rcr
pop
pop
or
xchg
div
idiv
call
scas
ret
sbb
adc
xchg
push
sub
es
xchg
push
fsub
mov
adc
xchg
push
xor
adc
in
mov
arpl
inc
and
sbb
aas
movs
pushf
call
rol
push
in
mov
mov
or
std
push
push
shl
adc
adc
jns
pop
sbb
dec
and
inc
lods
pop
loopne
sub
jns
or
xchg
loope
inc
ret
or
inc
cmps
arpl
push
scas
pop
cmc
sbb
adc
or
clc
mov
inc
mov
retf
ret
inc
iret
mov
dec
fimul
into
mov
jg
(bad)
int3
push
movs
mov
pop
mov
add
and
add
or
cmp
cmp
repnz
data16
ss
inc
fidivr
(bad)
pusha
cs
(bad)
aam
mov
jge
int
add
jae
out
cmp
(bad)
push
mov
sub
sub
ret
in
mov
mov
push
pop
ins
cmp
or
inc
js
and
retf
stc
add
imul
fist
mov
pushf
shl
xchg
push
mov
mov
push
ror
shl
imul
xor
jae
pop
fstp
xlat
jmp
adc
mov
sub
repnz
imul
lock
mov
loope
retf
cmp
jno
jnp
dec
push
and
call
addr16
pop
and
add
lds
(bad)
aad
or
mov
sbb
xor
xor
jne
pop
jmp
and
dec
sbb
add
cmp
and
cs
mov
mov
neg
push
inc
fcomip
and
(bad)
loopne
jbe
retf
call
and
movs
dec
sub
(bad)
mov
jecxz
test
cmc
mov
sub
inc
cs
mov
ror
push
fmul
jne
cmp
mov
or
and
aas
mov
or
shl
std
test
ret
idiv
mov
or
test
out
ss
hlt
lock
leave
dec
mov
adc
(bad)
fstp
dec
mov
ins
mov
aas
cld
or
xchg
fisub
jecxz
or
add
idiv
fs
mov
cmp
xor
clc
or
mul
popf
xchg
fidivr
add
jp
cmp
mov
pop
pop
stc
pop
gs
cld
mov
mov
fs
mov
movs
cmp
lods
and
cmp
ins
lds
jl
jmp
cmps
xor
adc
cdq
cwde
add
dec
mov
mov
inc
(bad)
rcl
movs
sbb
cmp
cmps
xor
mov
(bad)
retf
(bad)
push
in
dec
mov
mov
(bad)
lock
jp
leave
mov
inc
pop
addr16
sbb
pop
popf
pop
(bad)
repnz
rcr
pop
add
out
loope
sbb
jl
in
adc
jp
xchg
fdivr
jno
out
push
mov
or
mov
scas
std
mov
jge
test
mov
ds
out
daa
(bad)
fcomip
fstp
pop
dec
pop
inc
pusha
std
icebp
pop
pop
adc
sbb
xchg
scas
and
push
adc
int3
sbb
cmp
ror
ins
aam
ficomp
sahf
repz
repz
into
(bad)
pop
jb
push
dec
push
out
inc
xchg
mov
inc
(bad)
jo
push
cs
jno
test
pop
and
pushf
jmp
and
enter
push
cmp
in
adc
pop
ds
fwait
cmps
cld
pop
xchg
outs
clc
sbb
test
cmp
fs
mul
imul
or
xchg
lods
push
mov
bound
sub
mov
pop
cmps
aaa
push
lods
stos
mov
sub
(bad)
inc
or
scas
and
out
cwde
mov
pop
pop
push
sub
sub
cmps
jmp
mov
nop
(bad)
jp
arpl
clc
jl
push
daa
cmps
in
inc
clc
sbb
jmp
repnz
into
test
pop
jo
enter
and
and
push
add
gs
and
test
fidiv
vpand
and
imul
fild
ficom
xchg
aam
inc
bound
xor
xor
addr16
mov
jnp
push
std
push
js
mov
and
dec
(bad)
shr
inc
fsub
lds
fisub
cmc
fstp
xchg
xchg
inc
or
imul
sub
jmp
xor
adc
adc
into
inc
into
mov
loop
mov
cs
and
mov
dec
adc
idiv
cmp
pop
test
das
inc
xchg
aam
mov
mov
adc
inc
mov
dec
or
in
and
add
or
pop
pop
ins
scas
push
retf
inc
in
pop
(bad)
dec
ret
cmc
sub
jbe
sub
cld
lock
mov
sbb
add
loop
lahf
mov
leave
mov
add
sub
pop
ss
mov
pop
jo
ret
js
daa
loope
adc
fimul
inc
neg
inc
cld
loopne
loopne
aam
mov
ss
fmul
lods
int3
cmp
mov
sbb
call
push
lods
jb
adc
mov
xchg
mov
loop
loop
adc
cmp
cmp
arpl
xchg
inc
les
or
mov
mov
out
mov
imul
adc
mov
add
dec
add
push
or
or
dec
push
fistp
xchg
lds
shr
hlt
xchg
ret
jmp
mov
jmp
ja
and
lea
mov
xchg
cmp
lock
retf
pop
inc
in
cdq
push
sti
rcl
dec
pop
pusha
and
aas
in
mov
adc
adc
in
or
ins
pusha
xchg
xchg
cdq
stc
sti
enter
movs
or
aad
hlt
es
retf
pop
cli
dec
dec
(bad)
ja
mov
push
cwde
cmp
mov
fistp
jo
push
sahf
mov
mov
lock
mov
imul
push
push
xor
shr
and
xchg
cmp
repz
push
pusha
cmc
adc
(bad)
cli
sahf
push
(bad)
mov
or
pop
arpl
mov
xor
retf
daa
adc
mov
icebp
push
stc
jg
xlat
adc
shr
aam
mov
mov
leave
shr
test
mov
loop
shl
add
jbe
shr
fild
mov
or
into
sahf
test
ret
pop
sahf
ffree
addr16
mov
xor
pop
sbb
mov
jo
or
xor
adc
xchg
pop
fstp
ret
cmp
(bad)
les
shl
and
fxsave
inc
jns
loope
shl
es
and
pusha
inc
xor
mov
hlt
jg
dec
stc
lds
sub
jb
sub
setae
pop
in
mov
out
enter
fistp
mov
jae
push
jl
cdq
adc
aad
out
ins
bound
adc
jg
pop
outs
pop
mov
sbb
enter
mov
jmp
jecxz
xchg
mov
(bad)
xchg
inc
and
xor
std
stc
mov
add
sbb
jae
xchg
dec
adc
stos
mov
push
aam
add
sbb
jo
in
push
lock
inc
jbe
cwde
jp
adc
stos
cmps
ret
push
jbe
leave
aas
lods
stos
fcmovnb
std
jge
dec
push
mov
imul
mov
inc
sahf
shr
retf
mov
aaa
sbb
or
or
jmp
js
xor
add
mov
(bad)
push
xchg
jno
add
add
mov
ins
sbb
jbe
hlt
push
sub
sti
pop
pop
nop
jp
sub
iret
ret
push
inc
or
push
mov
retf
jmp
adc
shl
lock
cmc
mov
clc
ficomp
xchg
or
popf
dec
out
imul
inc
mov
icebp
outs
add
adc
or
mov
mov
push
xor
out
jns
sbb
scas
inc
scas
inc
ror
test
xlat
push
scas
stc
add
mov
push
in
pop
cmps
cwde
pop
sub
jno
dec
jle
and
jmp
mov
icebp
push
into
and
(bad)
nop
dec
cmps
jmp
fxch
nop
daa
jns
rcl
mov
cwde
mov
adc
retf
mov
mov
jo
inc
retf
mov
push
loop
jnp
adc
cmp
and
and
and
or
mov
das
jo
lock
dec
leave
lahf
or
(bad)
out
and
lods
imul
adc
sbb
mov
inc
mov
cdq
push
ret
fistp
out
movs
xor
(bad)
cmc
dec
repnz
adc
jnp
(bad)
mov
(bad)
repz
jg
in
jne
add
stos
in
adc
cmp
fs
pop
imul
cmp
test
scas
jp
test
pop
ja
or
jge
inc
outs
dec
xchg
cwde
iret
adc
pop
in
or
mov
mov
pavgb
inc
pop
xor
lahf
dec
jle
fs
in
fldcw
addr16
or
push
push
test
mov
es
dec
rcr
std
test
rol
(bad)
shl
ror
(bad)
sbb
std
jmp
add
cmp
push
xchg
push
xor
mov
and
adc
jno
test
inc
xchg
adc
jnp
shl
cmp
dec
dec
or
aaa
jnp
enter
hlt
and
inc
out
leave
mov
mov
fwait
cs
mov
enter
jl
jle
mov
xchg
sbb
arpl
out
add
lods
les
aaa
xchg
cmps
pop
int
and
repnz
jnp
movs
push
xchg
pop
pop
data16
fdivr
cmp
and
sbb
mov
in
inc
xchg
into
adc
call
adc
icebp
pop
into
test
fcom
jbe
es
test
mov
mov
mov
cmc
mov
xchg
je
pushf
sbb
int
scas
call
sbb
lods
add
iret
dec
cli
mov
int
in
sbb
cmps
mov
add
lds
or
in
in
jo
inc
xor
cmp
shl
(bad)
sbb
stos
mov
dec
xchg
cwde
jbe
fcomp
outs
push
sub
nop
jae
mov
jmp
mov
mov
std
lods
mov
jg
cmps
pop
shl
push
jp
mov
mov
pop
adc
xor
mov
inc
popf
aad
push
adc
pushf
jle
mov
mov
jb
pop
jnp
jp
stos
mov
cdq
xor
dec
sbb
test
test
cwde
push
mov
push
retf
enter
sub
enter
dec
pop
and
call
jae
mov
das
jmp
out
xchg
pushf
in
mov
cli
pop
and
iret
sub
pop
call
add
addr16
outs
scas
sub
sahf
push
out
cld
ror
xor
mov
(bad)
loope
ds
xor
add
mov
sub
mov
not
cmp
scas
and
push
call
mov
xchg
stos
inc
adc
xchg
shl
mov
adc
mov
pop
es
adc
pop
add
push
mov
sbb
cmc
cmp
out
sub
sub
adc
mov
mov
adc
mov
or
loopne
adc
push
pop
sbb
inc
or
mov
sti
sub
sar
xor
mov
dec
jb
dec
lds
clc
cmc
int3
loopne
(bad)
repz
movs
(bad)
jmp
mov
xchg
scas
sub
push
inc
cmp
pop
jns
mov
sbb
mov
push
idiv
adc
out
mov
push
inc
cwde
sbb
jg
add
push
xlat
lods
mov
dec
cli
shl
arpl
sbb
xor
push
dec
retf
rol
(bad)
addr16
jnp
aad
pop
lds
mov
pop
inc
xchg
stos
jg
jno
mov
mov
aas
add
pop
scas
stc
push
jb
push
repnz
sahf
dec
dec
aam
out
std
ja
mov
jecxz
or
xchg
ror
out
mov
pop
xchg
mov
or
push
movsx
mov
inc
not
inc
arpl
loopne
test
in
pop
xor
mov
and
xor
iret
je
pushf
push
mov
push
lds
into
in
repnz
add
iret
mov
in
xlat
fcmovbe
sbb
push
push
inc
mov
fisubr
fyl2xp1
imul
das
imul
dec
arpl
push
stos
(bad)
in
cli
fisubr
outs
movs
ror
or
aad
inc
jno
push
idiv
mov
jmp
test
cmp
pop
out
in
push
push
sahf
std
fwait
push
mov
xchg
xchg
outs
cmc
jno
fldcw
pop
call
jne
cld
jmp
imul
out
retf
aad
jne
repz
jl
cs
repz
fld
xchg
imul
push
imul
adc
loop
mov
mov
inc
dec
sub
std
xchg
xchg
jo
call
mov
jge
pushf
cld
stos
sub
xor
rol
retf
cmc
cld
mov
jmp
stos
sti
mov
xlat
adc
add
pushf
fldcw
or
adc
in
push
stos
jl
(bad)
dec
test
ja
(bad)
cld
dec
add
test
in
xchg
mov
adc
dec
int
pop
jnp
jp
push
ins
or
mov
mov
dec
loope
shr
mov
fst
mov
fs
or
mov
test
xor
out
sbb
adc
test
push
repnz
lods
xchg
adc
jmp
hlt
adc
test
jl
rcl
clc
enter
aad
xchg
lea
add
enter
rol
cmp
cmps
ret
(bad)
pop
cmp
fmul
scas
add
loopne
adc
xor
push
push
pop
xchg
sbb
shl
inc
popf
sti
sub
ins
xchg
mov
xor
or
cmp
neg
scas
cmp
mov
idiv
scas
sar
mov
loope
mov
mov
or
xchg
daa
sbb
mov
dec
shl
nop
sbb
pop
clc
mov
push
jge
lods
outs
je
in
dec
and
pop
gs
data16
lods
(bad)
aad
push
scas
test
adc
std
xor
inc
sbb
mov
push
push
mov
jl
jnp
add
ror
jmp
mov
inc
lahf
(bad)
pop
in
cmc
enter
ins
mov
gs
in
cmp
xor
into
aaa
lods
add
mov
cmp
cld
retf
jp
xchg
inc
and
nop
cmp
cmp
clc
mov
into
add
cdq
ins
pusha
lods
mov
cmps
aas
mov
loope
ss
jecxz
out
and
adc
hlt
pop
mov
cld
(bad)
in
aam
add
mov
cmp
lahf
int3
xor
hlt
xchg
pop
pop
push
mov
jg
xchg
xor
dec
aaa
dec
lea
pop
shr
lahf
loopne
mov
mov
inc
sub
and
mov
loope
pop
xlat
bound
neg
outs
mov
rcr
inc
data16
(bad)
loope
inc
mov
jnp
mov
jnp
pop
ss
out
adc
push
sbb
(bad)
mov
cmp
sub
call
ror
mov
pusha
add
(bad)
dec
popa
push
movs
pop
cmps
sbb
mov
push
mov
sub
pop
cld
inc
iret
dec
mov
stos
cli
fiadd
pop
call
(bad)
cld
cmps
sub
outs
push
push
mov
popa
add
icebp
mov
xchg
lods
xlat
inc
stos
jno
sbb
sbb
adc
hlt
js
jle
jno
(bad)
mov
clc
add
dec
cld
(bad)
mov
jae
push
aad
enter
sbb
pop
jo
push
in
push
or
xchg
push
mov
repnz
in
loope
sbb
ins
(bad)
rep
into
cdq
jns
dec
mov
cmp
outs
fild
xchg
fwait
daa
mov
mov
cmp
sub
lds
adc
das
push
je
push
mov
call
push
dec
pop
pop
or
sbb
clc
jge
dec
cmp
psubq
push
add
addr16
adc
pop
dec
pop
test
les
mov
add
mov
fimul
test
push
jno
es
xchg
inc
cmp
push
imul
xor
ret
cmp
(bad)
dec
mov
add
in
js
jmp
hlt
imul
jg
cmp
or
pop
dec
iret
cmp
adc
or
inc
mov
xor
outs
hlt
mov
push
movs
sub
sub
frstor
push
daa
jo
aaa
repz
pop
call
add
mov
mov
add
ins
mov
fimul
inc
mov
xor
scas
or
or
dec
sar
sbb
(bad)
adc
mov
mov
repz
clc
sub
lock
dec
jnp
(bad)
sbb
popf
icebp
push
retf
aam
mov
mov
cmp
dec
push
mov
push
and
fisub
cmps
test
ficomp
shr
cmp
xchg
mov
fs
add
or
pushf
lahf
mov
aaa
sti
(bad)
rcr
(bad)
or
clc
cmc
dec
add
cs
pop
push
in
or
cwde
cmps
addr16
mov
cli
inc
shl
cwde
and
mov
dec
hlt
mov
mov
inc
out
jmp
fwait
push
cmp
dec
(bad)
or
fcom
out
test
in
push
pop
push
movs
test
clc
add
xor
sbb
sbb
daa
dec
frstor
mov
sub
ss
add
in
sbb
aaa
pop
ret
push
test
je
pop
inc
or
inc
clc
push
sbb
mov
add
lock
push
mov
xchg
push
addr16
dec
sub
or
cmp
cli
pop
mov
(bad)
popa
mov
mov
cmp
es
int
pusha
(bad)
movs
test
pop
daa
push
mov
push
jle
(bad)
fsub
xchg
push
(bad)
cmp
add
stos
aam
imul
mov
and
and
pop
adc
std
mov
add
jp
push
xchg
cmp
fcomp
jge
sub
jmp
sub
add
and
fstp
lods
cmps
(bad)
mov
adc
add
lahf
hlt
stos
cmps
das
mov
pop
jp
jo
test
mov
xor
adc
mov
lds
sar
fisubr
xchg
cmp
jo
scas
or
sar
fwait
and
nop
call
cmp
lods
mov
retf
push
push
(bad)
cs
jns
aaa
dec
jno
mov
dec
jns
mov
inc
shl
fcmovbe
scas
pcmpeqd
adc
jo
jns
jb
or
cmc
stc
push
imul
jbe
pop
add
cs
arpl
push
jle
pop
jnp
cwde
fistp
ins
lsl
push
bound
cmps
ss
in
jne
push
mov
mul
or
push
push
rcl
lea
fdiv
add
ja
sahf
sub
xlat
mov
jmp
mov
js
fcmovnu
neg
push
ret
push
es
lods
fs
cld
adc
adc
rcl
fld
push
popf
lods
cmps
pop
push
(bad)
in
cld
cmp
adc
jns
mov
out
pushf
daa
sub
ds
(bad)
scas
xchg
int3
sub
sti
test
ins
sbb
xchg
sub
dec
fdivr
sub
addr16
iret
inc
dec
mov
addr16
dec
inc
or
dec
int3
loope
jne
aaa
xor
scas
pop
cmps
push
pop
fnstcw
xchg
shl
cwde
push
or
(bad)
push
cmps
and
adc
mov
push
xchg
xor
jl
cmp
sub
stos
je
ret
sub
and
les
in
xchg
sub
retf
pushf
add
test
push
ins
mov
int3
and
rcl
addr16
mov
xchg
imul
arpl
rcr
imul
int3
aam
aas
mov
in
adc
dec
daa
mov
or
and
or
jmp
cmp
cmp
and
ror
mov
cmp
push
fisttp
add
jp
retf
mov
xor
stc
repz
adc
dec
pop
sti
sti
popf
pop
stc
jmp
lds
fs
add
rol
rcl
cwde
aam
xor
jbe
hlt
xor
or
inc
mov
cmps
mov
sub
in
arpl
add
and
movs
mov
adc
int3
aas
arpl
xor
or
inc
jno
movs
std
jbe
fld
imul
push
pop
and
push
int3
mov
adc
jne
ins
rol
cmps
cmps
pop
arpl
lock
add
out
push
sbb
jbe
loope
xor
pop
shr
popf
popa
mov
push
inc
std
sbb
xchg
jecxz
aas
xor
and
xor
ds
(bad)
cmp
icebp
xchg
push
cli
adc
adc
push
sub
cli
js
fcomp
sar
mov
xor
addr16
add
fld
sbb
mov
in
fistp
push
rol
sbb
mov
mov
or
cmp
inc
mov
(bad)
push
jg
les
inc
(bad)
cwde
dec
stos
out
sub
cmp
cli
pop
cdq
dec
pop
mov
pop
out
and
enter
fdivr
bound
push
add
repz
je
push
inc
movs
les
inc
ss
loopne
std
inc
aad
clc
inc
cs
fnstcw
xor
bound
(bad)
pop
mov
in
retf
les
test
xor
sbb
dec
or
inc
jmp
repnz
jnp
jge
call
fs
and
mov
enter
cmp
mov
push
jmp
pop
push
cmp
adc
in
cmp
sahf
mov
lds
mov
(bad)
jg
jmp
dec
xor
ins
cmp
jb
mov
das
es
and
and
xor
push
xchg
mov
sbb
std
bound
iret
mov
mov
adc
or
mov
xchg
sub
xor
fisttp
mov
mov
xchg
scas
clc
mov
add
sbb
not
pop
xchg
xchg
popa
sahf
aam
sbb
fnstsw
mov
lahf
jg
dec
and
ins
jne
fwait
mov
fistp
sbb
outs
in
movs
cmp
sub
clc
mov
mov
jmp
jnp
mov
in
push
dec
jmp
inc
mov
bound
jo
gs
add
shl
add
shr
mov
pop
cdq
sbb
ds
add
movs
seto
out
cs
lds
add
mov
dec
push
stos
sub
aas
inc
inc
or
jmp
addr16
into
xchg
dec
mov
das
add
aaa
aaa
aaa
pusha
repnz
cli
addr16
nop
push
xor
call
movs
dec
ja
xor
mov
cld
sbb
mov
jp
pushf
cwde
dec
mov
push
mov
mov
cmp
sub
stos
xchg
mov
pusha
push
dec
or
push
cmps
jo
pop
repz
lahf
rol
scas
fucomi
add
sti
lahf
cmp
add
movs
cmp
pushf
and
jb
mov
data16
sbb
out
lock
mov
fsub
cdq
sbb
and
ret
adc
sbb
dec
jnp
push
xchg
lea
in
sahf
mov
loop
jp
lahf
add
or
dec
inc
or
int
and
mov
mov
mov
iret
fisub
leave
sbb
cmp
(bad)
inc
jmp
add
mov
mov
hlt
fbld
aaa
jmp
sbb
jb
je
je
js
in
mov
cmp
fldenv
nop
mov
out
test
ins
sub
pop
call
or
pop
add
sub
jne
lds
lock
and
mov
inc
inc
icebp
mov
mov
sar
ja
and
sub
dec
inc
pop
mov
xchg
xchg
push
fld
mov
lods
add
cmp
add
add
cmovp
add
lods
out
mov
(bad)
cmp
(bad)
sbb
cld
push
ins
enter
out
xchg
shl
js
sahf
mov
out
sbb
jno
int
lds
fucom
out
adc
repz
xchg
adc
mov
sub
ds
inc
pusha
sub
xor
xchg
(bad)
jecxz
aaa
cmc
adc
dec
pop
mov
cmc
or
icebp
jmp
mov
push
inc
inc
adc
rcr
jns
or
sub
mov
or
es
inc
mov
jbe
mov
push
or
loopne
jne
xchg
fstp
xor
mov
pop
add
loopne
movs
sub
push
jmp
rcl
mov
fsubrp
sub
cmps
das
cmp
sti
inc
and
sub
fadd
shr
push
les
or
jge
ret
outs
push
icebp
aaa
lds
in
scas
dec
pop
enter
push
mov
inc
cmp
adc
stos
stos
push
aaa
mov
push
sub
push
jae
(bad)
mov
cmp
cmp
test
push
out
shr
dec
add
mov
or
test
sbb
sbb
aas
mov
and
push
iret
sub
or
jo
mov
xor
jmp
bound
aam
sbb
pop
outs
and
cli
(bad)
fld
pop
inc
or
push
pop
adc
push
shl
mov
adc
jmp
jns
jb
cmp
aaa
sub
and
jo
enter
stos
jmp
xor
xchg
idiv
xchg
outs
jg
push
xchg
jg
push
ret
mov
and
in
loop
js
push
xlat
jmp
in
cmps
test
out
(bad)
in
inc
(bad)
cmp
es
imul
out
imul
(bad)
xor
in
daa
aaa
fidivr
mov
adc
xchg
shl
fiadd
int3
scas
inc
mov
daa
scas
inc
ins
(bad)
ret
jp
inc
add
mov
jg
std
pushf
(bad)
(bad)
pop
pushf
cwde
mov
ins
retf
push
cmp
xlat
arpl
xchg
fsub
jbe
aad
mov
cmp
or
(bad)
sub
fdivr
xor
sub
sbb
jmp
pop
loope
fcomp
sbb
fidiv
adc
repz
maskmovq
div
jge
sbb
dec
sbb
mov
and
pop
lock
push
lds
add
cmps
xchg
call
out
add
push
in
std
in
push
sub
(bad)
xchg
mov
dec
pop
shl
jnp
cmp
pop
loope
dec
pop
clc
ds
(bad)
fadd
mov
(bad)
in
inc
jp
jbe
inc
inc
imul
gs
jns
mov
sub
enter
and
outs
fwait
sbb
push
adc
cs
int3
dec
loopne
fwait
imul
outs
rcl
inc
jmp
cdq
popa
pop
xor
test
xor
jecxz
int
pop
sub
xchg
sbb
test
sbb
bound
nop
adc
inc
in
dec
(bad)
mov
and
jmp
aad
sahf
xchg
jns
add
clc
dec
jns
adc
ret
xor
sbb
jbe
cmp
mov
mov
aam
icebp
inc
repz
ins
popa
sub
jge
icebp
test
pop
or
scas
popf
test
adc
cmp
ret
add
add
push
mov
sub
sub
(bad)
enter
fld
push
das
xor
push
frstor
inc
add
xchg
dec
sub
xor
mov
in
fist
inc
enter
mov
cmps
cld
ja
into
cmps
not
jg
outs
push
jbe
fbld
ja
call
mov
cmps
rcl
mov
push
retf
(bad)
adc
jmp
popf
jbe
xor
xchg
daa
cmp
jae
xor
adc
mov
adc
mov
jle
popa
enter
pusha
cmp
mov
xchg
(bad)
sub
faddp
mov
imul
xchg
dec
push
mov
push
into
jle
cmp
dec
dec
cmp
into
sub
mov
cmp
and
jbe
jb
push
es
cdq
loopne
sub
sbb
mov
out
inc
pop
push
adc
nop
inc
push
jge
stos
add
push
in
push
stos
arpl
mov
cdq
jo
mov
mov
pop
pop
aas
add
push
imul
mov
cmp
aas
mov
push
push
pop
add
or
inc
push
pop
jecxz
mov
arpl
aaa
arpl
mov
pop
out
data16
pop
adc
push
push
xchg
outs
jne
js
daa
jnp
ins
call
jl
pop
dec
mov
out
adc
in
mov
inc
test
sti
add
popf
dec
ficomp
xchg
shl
aaa
pop
cmp
mov
xchg
repz
mov
pop
inc
ds
shr
les
bnd
mov
push
dec
call
sub
cli
pop
mov
or
push
pop
cmps
cmc
push
in
mov
movs
shl
inc
fs
push
fwait
test
xchg
xchg
pop
or
or
jge
idiv
mov
pop
imul
enter
adc
int
jae
or
mov
push
loope
mov
xchg
jns
lock
pop
cmp
mov
cmp
fist
(bad)
loopne
and
mov
fsubr
cld
and
aas
cs
inc
aas
sub
scas
mov
mov
xor
cmp
hlt
jbe
stos
push
mov
fisub
sub
xchg
dec
pop
outs
pusha
arpl
pop
jmp
not
loope
xchg
sar
sbb
scas
retf
mov
rcr
jo
mov
and
sub
mov
shl
into
pusha
inc
cld
pop
or
and
frstor
push
add
clc
mov
jle
lea
push
fs
sti
xlat
(bad)
xchg
sar
xchg
movs
or
xchg
in
push
popa
stc
push
mov
push
adc
shr
cdq
mov
cmc
test
es
push
gs
fild
inc
imul
jge
(bad)
out
loope
sub
xlat
jge
inc
cli
mov
fstp
dec
mov
fisubr
stc
out
out
xchg
mov
and
(bad)
hlt
mov
clc
repz
mov
or
sahf
dec
cli
cwde
cmps
out
call
mov
fist
retf
or
cmpps
mov
adc
daa
das
and
push
mov
or
inc
jle
lods
aas
inc
cdq
es
sbb
xchg
out
(bad)
jbe
ret
pop
jmp
ins
inc
cmp
mov
mov
mov
jp
cmp
in
jnp
sub
xchg
mov
or
retf
(bad)
push
push
dec
jb
and
imul
jmp
cs
ss
sbb
inc
pusha
adc
adc
jge
aad
push
inc
out
mov
loopne
xor
mov
xlat
fldcw
lods
mov
xchg
cmp
mov
jae
cmp
or
int
popf
ss
push
add
movs
aad
test
xchg
sub
stos
mov
adc
mov
add
xor
xchg
stc
mov
shr
imul
sbb
(bad)
pusha
test
mov
or
out
pop
adc
push
inc
in
inc
adc
pushf
into
pop
dec
push
scas
ss
pusha
sar
adc
loope
mov
push
enter
call
int3
test
pusha
mov
fist
cmp
push
add
or
jae
into
pop
loopne
adc
sub
and
ret
mov
xchg
sbb
mov
dec
loope
das
or
cmp
lods
ins
mov
stos
cmp
lahf
sbb
in
shl
loope
and
jne
dec
pop
mov
jbe
mov
jl
add
ins
and
xor
jnp
adc
out
mov
push
cld
adc
dec
or
xchg
sub
imul
fstp
test
sahf
sub
cwde
lods
xchg
sub
sbb
sbb
xchg
cmp
or
mov
movs
in
add
pop
dec
imul
mov
enter
sahf
fcmovnu
pop
pop
xor
adc
push
or
fisub
pop
or
inc
jno
mov
xchg
xor
inc
mov
call
(bad)
fisub
je
sub
loop
das
mov
bswap
pusha
add
or
jmp
adc
add
or
scas
icebp
or
lods
push
xchg
jmp
pop
call
mov
and
loopne
cmp
inc
js
stc
pop
pop
ja
pop
sub
pop
cmp
stos
or
aam
gs
out
mov
pop
inc
repz
jmp
and
ss
lods
shl
add
mov
pop
(bad)
iret
frstpm(287
inc
(bad)
std
ror
popf
inc
out
add
retf
mov
stc
out
xor
in
dec
push
fild
jecxz
sub
mov
pushf
out
dec
add
push
push
aam
lods
push
imul
leave
and
out
or
jbe
fs
repz
xchg
add
sbb
repz
mov
or
xchg
inc
jmp
clc
stos
jnp
movs
lods
jo
cwde
dec
xchg
adc
mov
lahf
movs
dec
loope
dec
dec
cmps
xchg
pop
or
and
call
cld
outs
push
xchg
test
out
ret
nop
adc
inc
xchg
adc
mul
add
jge
push
(bad)
add
fisubr
pop
jecxz
inc
sub
es
movs
out
pop
cmp
pop
cmp
xor
pop
ja
cdq
push
daa
repz
mov
adc
mov
sahf
mov
fidiv
fcomip
in
and
(bad)
test
dec
out
shr
push
mov
add
shl
jns
rol
pop
sub
retf
and
sub
xchg
jbe
fist
dec
push
lahf
retf
enter
cmp
add
push
iret
jl
inc
lea
ret
aad
pop
inc
add
dec
push
repz
mov
xlat
stos
nop
dec
outs
rcr
fs
cdq
dec
retf
mov
pushf
aam
adc
dec
and
sub
sbb
add
sbb
mov
mov
add
mov
inc
pusha
fistp
and
pop
jnp
xor
xchg
test
cwde
xor
and
(bad)
sub
cmps
rol
aam
mov
mov
push
(bad)
pop
mov
dec
xchg
lahf
imul
gs
sti
jmp
or
sbb
sti
rcr
or
dec
sbb
imul
dec
jmp
push
mov
loop
(bad)
retf
adc
(bad)
es
fucomi
aad
xchg
cs
sbb
clc
dec
ret
mov
sbb
test
stos
cwde
loop
test
xchg
jmp
mov
out
jnp
es
xchg
jmp
mov
lahf
or
mov
or
ficom
arpl
movs
adc
cmp
jne
dec
xor
in
xchg
jo
(bad)
inc
gs
shl
ds
daa
rcl
mov
enter
into
sub
dec
jg
adc
inc
push
pushf
ins
rcl
aad
ins
in
aam
shl
popa
rcl
cmc
out
mov
mov
pop
or
push
xchg
into
cmp
xor
add
sub
add
push
inc
inc
ins
lahf
sbb
div
in
sub
sbb
inc
rol
leave
jge
xor
aam
add
mov
fwait
push
jmp
bound
inc
fisub
sub
cli
add
push
sti
stos
mov
jo
adc
scas
mov
add
ja
movs
pop
test
dec
xor
sar
mov
iret
adc
test
nop
inc
out
mov
add
mov
xchg
in
pop
sub
mov
movzx
fimul
pop
adc
jns
ds
rol
scas
stos
call
out
ret
ror
ficomp
pusha
pop
cmp
out
mov
lods
push
pusha
cmp
jne
cld
or
fstp
sbb
mov
mov
mov
jbe
mov
push
aam
mov
jge
imul
fld
mov
xor
jne
xchg
into
pop
pop
and
mov
mov
pop
imul
in
dec
pop
pop
ret
(bad)
shl
inc
ficom
or
retf
push
and
or
jno
push
mov
sahf
mov
and
(bad)
mov
jno
sahf
mov
lea
enter
adc
aas
add
jge
pop
sub
lahf
xor
test
cmps
mov
das
push
in
dec
aaa
push
ja
dec
pop
rcr
loopne
inc
sbb
pop
ja
sbb
jbe
cmp
xor
outs
sbb
sub
out
push
fwait
xchg
sbb
push
sbb
repnz
mov
into
mov
push
sahf
rcl
or
cmps
in
sub
jo
cld
loope
adc
xor
js
xchg
pop
call
pushf
xor
sar
and
push
adc
daa
cmp
mov
retf
xor
pop
xlat
scas
test
mov
add
xlat
(bad)
int3
or
std
sbb
mov
loop
das
adc
test
adc
rcr
push
xchg
and
pushf
es
aaa
xor
fbld
ficom
mov
jae
std
jne
and
sbb
xlat
inc
cmps
inc
jl
mov
iret
ret
js
mov
push
cli
jl
sahf
mov
sbb
push
rol
pop
loop
push
jecxz
xor
sub
loope
push
repnz
or
mov
ror
fsubr
jno
pop
rol
shl
pop
xor
aam
jg
dec
dec
movs
clc
dec
sub
imul
jle
jmp
dec
dec
mov
xor
dec
in
out
dec
pop
leave
and
inc
sbb
add
cmp
mov
das
scas
pushw
xlat
fucomip
inc
retf
daa
test
movs
mov
sub
test
cmp
dec
mov
cmp
xor
xlat
xor
fistp
xchg
xchg
out
cwde
adc
in
cmp
and
mov
sbb
or
shr
push
scas
xchg
fistp
imul
js
in
in
add
enter
call
fidiv
add
(bad)
sub
fisubr
push
leave
data16
xchg
xor
mov
shl
push
push
sahf
aas
mov
rcr
add
inc
xchg
retf
inc
ret
cmp
cmc
xor
dec
dec
and
add
pop
xchg
push
gs
xor
rcr
mov
adc
fcomp
mov
fstp
test
mov
shr
adc
sbb
mov
dec
pusha
mov
mov
cmp
ja
ja
out
sub
pop
jno
clc
adc
arpl
mov
mov
fiadd
adc
push
sub
cmp
lds
cmp
or
aaa
push
mov
mov
jp
jle
cs
push
add
aas
dec
(bad)
dec
push
mov
xor
je
xlat
inc
and
test
jmp
push
jno
shl
scas
mov
cmc
pop
or
lods
mov
add
arpl
pop
push
cmp
imul
mov
ret
cmps
mov
push
repz
rcr
adc
ret
push
pop
pop
ja
cmp
xor
test
call
cmp
mov
cmp
dec
cs
cmc
les
push
xchg
cmp
sar
aas
daa
or
js
adc
add
mov
iret
dec
fdiv
sbb
arpl
mov
in
sub
scas
pop
sub
cld
pop
adc
punpcklwd
inc
add
mov
outs
int3
inc
jg
addr16
out
push
mov
in
cmc
sub
enter
xor
bound
in
lods
add
loope
lods
test
mov
or
stos
sbb
xor
xchg
cdq
pop
shl
lock
jne
fdivr
pop
xchg
sbb
pushf
movs
jp
pop
adc
mov
jge
loop
popf
bound
movs
sbb
test
xchg
bound
and
or
push
adc
aad
cmovne
rol
ins
mov
into
sub
xor
bound
adc
push
adc
add
push
push
and
mov
outs
and
(bad)
call
sar
cmp
shr
sub
jmp
test
sub
repnz
lahf
outs
mov
shr
in
fstp
mov
enter
sbb
xor
mov
and
mov
xor
mov
xchg
stos
and
cmp
pop
in
cmp
ret
outs
fisttp
test
sbb
enter
dec
shl
aam
mov
push
xor
lods
mov
das
repnz
add
inc
jno
jbe
fst
fwait
xchg
push
jne
jl
sub
mov
fbstp
xchg
mov
add
and
push
nop
or
mov
clc
mov
pop
xor
(bad)
jp
loop
mov
fisub
add
xlat
adc
mov
jge
or
mov
fnstcw
mov
pop
pop
xchg
pop
jmp
sub
xor
mov
sub
(bad)
jl
jmp
(bad)
repz
std
sahf
(bad)
pop
mov
xchg
stos
xor
stc
out
jmp
push
xor
sub
pop
push
mov
ret
aas
mov
xor
enter
cmps
sub
shr
sbb
dec
inc
cwde
sbb
(bad)
enter
inc
shl
sub
cmp
sub
cwde
stc
sbb
repnz
retf
push
jp
mul
mov
popa
(bad)
in
(bad)
cs
xchg
xor
das
sahf
mov
mov
out
push
inc
sub
scas
sub
call
fmul
in
frstor
(bad)
mov
or
jp
jbe
jae
packsswb
push
scas
xchg
mov
loop
inc
mov
mov
jbe
push
test
sti
sbb
cli
pop
sbb
adc
mov
retf
pop
inc
call
and
xchg
xlat
xor
out
sbb
xchg
out
into
data16
push
ret
cmps
add
inc
cmp
or
repz
push
dec
jns
inc
dec
(bad)
push
jmp
call
xchg
mov
div
inc
addr16
cmp
sub
fld
mov
mov
call
div
cli
cli
out
test
push
xchg
push
mov
sbb
arpl
pushf
(bad)
inc
mov
mov
cmp
inc
stos
aas
in
xchg
xlat
adc
ins
pop
loop
clc
push
pop
out
jge
mov
cmp
dec
cli
ja
jae
pop
adc
adc
xor
into
xor
bnd
inc
mov
enter
xchg
mov
aad
jne
push
cmp
inc
jmp
std
outs
xchg
jbe
dec
(bad)
add
dec
pusha
or
add
xchg
xor
or
fimul
call
push
xor
cwde
inc
jmp
or
push
(bad)
shr
test
mov
or
int
jge
adc
dec
adc
ds
mov
cmps
mov
jp
pop
call
adc
mov
popf
outs
fldcw
loopne
shr
pop
mov
cld
aad
dec
mov
mov
sbb
push
idiv
imul
sub
dec
mov
iret
push
pop
sti
mov
mov
fild
into
sti
or
jno
push
int3
in
mov
outs
adc
call
jmp
jmp
dec
xchg
fsubr
jp
push
pushf
jp
inc
addr16
enter
mov
lds
dec
sub
imul
iret
iret
dec
push
sar
es
inc
(bad)
xchg
out
push
shr
iret
fistp
cli
mov
jmp
movs
in
mov
mov
mov
nop
dec
fbld
and
nop
push
push
sub
cmp
sub
dec
jo
fwait
sub
js
and
daa
and
nop
out
cdq
lock
fsub
mov
push
inc
pop
pop
jle
std
scas
retf
xor
or
outs
mov
inc
lock
shl
xacquire
mov
scas
fwait
ds
and
xor
dec
add
popa
popa
stos
loopne
pop
setp
push
xor
je
pop
add
inc
cld
loop
mov
sahf
push
cmp
xchg
add
cwde
repnz
mov
pop
sub
inc
push
mov
xchg
sub
or
in
xchg
push
in
daa
addr16
int3
push
xchg
jae
jmp
(bad)
jecxz
repz
sti
push
aaa
dec
and
cmp
dec
jbe
add
dec
and
xor
push
pop
daa
jnp
and
movs
mov
inc
xor
outs
(bad)
sub
and
dec
imul
aas
cs
jmp
add
sti
not
cmp
inc
(bad)
xor
inc
mov
mov
jnp
shr
mov
ins
push
xchg
in
mov
pop
cmc
(bad)
mov
xchg
push
adc
push
ds
pop
out
clc
adc
mov
arpl
sar
aaa
xor
inc
push
fisttp
test
push
lea
sahf
daa
mov
mov
leave
movs
sbb
pusha
daa
sub
icebp
mov
sub
(bad)
jmp
sbb
mov
adc
ret
xchg
sub
lods
aas
lods
add
std
pushf
in
sub
jnp
arpl
outs
dec
into
sti
psubw
mov
bound
and
fdiv
cmp
call
clc
xchg
shr
inc
enter
pop
cmp
cli
pop
test
(bad)
pop
push
es
fs
or
pop
call
add
daa
fldenv
out
shr
(bad)
fmul
loopne
push
leave
add
ss
dec
out
add
out
lahf
loopne
cmps
sub
js
out
rcr
jbe
mov
push
pop
popa
repnz
stos
cld
xchg
repz
lods
add
imul
mov
push
imul
push
outs
imul
das
xchg
jl
add
cmp
test
mov
jns
and
ficom
mov
sbb
jmp
icebp
popf
ss
retf
das
pop
shl
xchg
sbb
or
ins
xchg
pushf
push
ficom
shr
jmp
ins
hlt
or
ficomp
sub
das
pop
cmp
pop
movs
dec
into
outs
addr16
pusha
(bad)
test
xchg
pop
pop
cld
mov
out
mov
push
in
sbb
imul
dec
pop
jmp
stc
es
int
nop
nop
mov
out
and
mov
mov
pop
push
hlt
sbb
push
in
inc
sub
add
sub
dec
jnp
movs
mov
or
ficomp
nop
fstp
xchg
adc
and
push
pop
adc
stos
inc
cmp
jo
dec
inc
and
ret
mov
sub
adc
sub
jae
inc
adc
push
mov
scas
sti
das
fisttp
jns
push
cdq
mov
pop
jno
in
dec
cmps
pop
push
ficomp
and
jbe
dec
lock
out
cli
jnp
dec
icebp
jae
(bad)
cmp
add
daa
mov
dec
xor
mov
mov
cmp
sahf
pop
stc
je
push
add
add
nop
xchg
clc
cmp
aam
or
test
pop
mov
mov
cmps
push
sub
in
fnstsw
jl
mov
or
fisub
lahf
lock
adc
sbb
cmp
sbb
shl
sub
int3
dec
test
jns
fstp
outs
jae
lds
aas
push
jg
dec
loope
das
push
push
stos
xchg
mov
into
out
call
mov
mov
and
ret
test
fbld
sub
repz
out
out
adc
dec
pop
mov
lock
dec
pop
out
or
jmp
fnstsw
or
ror
les
repz
sbb
repnz
cmps
leave
retf
mov
les
not
cmp
mov
movs
mov
xchg
cmp
mov
fs
mov
enter
and
into
repnz
imul
sbb
adc
mov
pop
inc
clc
lock
cmp
sbb
in
or
push
xor
push
test
retf
call
mov
sbb
dec
add
(bad)
dec
and
js
mov
cmps
ret
repnz
add
into
test
mov
rcr
lea
test
sti
fs
jmp
sbb
fldcw
(bad)
imul
movs
cmp
xchg
inc
mov
cmp
mov
(bad)
cmp
dec
mov
xor
jg
(bad)
int3
sub
pop
mov
jg
add
push
retf
xchg
and
push
push
ficomp
cmp
iret
in
xchg
jo
(bad)
rcl
dec
loopne
fistp
or
ret
test
jne
sar
mov
mov
push
or
addr16
mov
pop
mov
xchg
ds
add
leave
ror
jbe
and
mov
jbe
mov
inc
and
mov
sub
or
aam
movlps
(bad)
lahf
jmp
xchg
dec
fidiv
jnp
dec
movs
dec
or
setbe
dec
add
or
inc
and
sbb
mov
cmp
pop
mov
movs
stos
jmp
pop
loop
hlt
je
xchg
sbb
push
loop
push
xlat
cmp
dec
into
dec
fwait
inc
and
loopne
jecxz
cdq
smsw
mov
data16
popw
cmc
fcomp
clc
out
fcmove
mov
in
xchg
jle
ret
mov
sbb
adc
and
gs
(bad)
movs
push
xchg
test
rcr
test
dec
xchg
aam
imul
mov
jle
jl
cmp
xlat
sbb
dec
push
pop
mov
call
sub
xor
stc
mov
lds
xlat
and
jp
retf
mov
or
aam
jno
gs
mov
or
xchg
push
xchg
and
bound
test
imul
push
nop
sti
fs
mov
(bad)
xchg
push
inc
push
cld
sbb
aaa
in
add
je
cld
push
add
sti
jmp
fs
int3
fdivr
mov
imul
lods
mov
or
in
pop
(bad)
clc
(bad)
dec
add
movs
adc
pop
pop
mov
leave
aam
adc
mov
dec
pop
add
cwde
push
jno
lock
mov
daa
or
cmps
cs
fdivr
push
or
cdq
xchg
mov
fwait
aas
rol
mov
imul
dec
sahf
loope
and
xchg
mov
cmp
shr
loopne
or
cmps
jge
mov
dec
sti
dec
scas
jg
shr
cli
jmp
xor
sbb
test
ror
sbb
cld
xchg
lods
fld
gs
in
call
(bad)
or
mov
or
jae
sbb
arpl
shl
cwde
hlt
or
xchg
push
mov
test
ins
in
sahf
dec
test
test
jg
enter
in
(bad)
pop
xor
cmp
jne
addr16
popa
push
int3
xchg
mov
cli
sub
not
in
test
inc
sbb
dec
bound
pop
ds
adc
jle
mov
push
les
repnz
cdq
(bad)
fdiv
add
enter
pop
and
xchg
mov
sub
xchg
add
mov
pop
push
pop
cmp
sub
pop
out
fld
adc
pusha
sbb
mov
mov
imul
je
loop
add
outs
lea
mov
mov
cmps
loopne
mov
sub
sub
arpl
xchg
inc
stc
jbe
mov
loop
pop
dec
xchg
or
dec
jns
pop
mov
repnz
not
pop
int
scas
frstor
mov
test
call
mov
imul
and
jp
xor
nop
mov
daa
movs
mov
mov
or
mov
pop
in
xchg
fcomp
neg
xor
or
pop
jecxz
hlt
jo
cmps
and
cwde
push
int3
cmp
adc
mov
mov
mov
adc
daa
mov
mov
and
std
clc
and
inc
add
xchg
add
scas
imul
imul
add
movs
jbe
(bad)
js
ja
sub
push
xor
cli
pop
dec
push
push
cld
test
pop
pop
dec
fmul
retf
push
fdivr
pop
ins
sub
jmp
pop
jb
xchg
and
retf
jmp
(bad)
arpl
or
ds
arpl
push
aaa
aaa
cmps
hlt
rcr
lods
inc
jmp
fcom
fld
and
inc
ja
adc
mov
dec
sar
movs
mov
jmp
fdivr
lahf
das
test
push
pop
test
sub
sbb
outs
repnz
cmp
call
adc
into
mov
adc
add
push
hlt
dec
jbe
mov
mov
lahf
push
mov
jbe
add
or
fimul
mov
add
into
sub
sub
(bad)
ds
xor
pop
bound
adc
mov
test
dec
push
jno
ins
retf
into
add
add
xor
sahf
cmp
into
ins
gs
daa
cld
fimul
sar
jg
push
fistp
jmp
or
bound
mov
jp
push
cdq
push
and
xchg
outs
mov
mov
jo
mov
mov
sub
popf
sub
sbb
jle
mov
pop
pop
lock
jb
leave
mov
xchg
and
adc
cdq
bound
jmp
jmp
push
(bad)
out
inc
mov
mov
push
repz
outs
in
cmp
jp
sbb
adc
mov
bound
hlt
sahf
cmps
cmp
out
sar
int3
cmps
sahf
sbb
mov
outs
lock
pop
mov
dec
xlat
sbb
sub
xor
xchg
pop
pop
ret
xchg
sub
mov
adc
jecxz
shr
pushf
mov
xchg
jle
repnz
xchg
pop
or
(bad)
add
xor
mov
or
push
repnz
repnz
rcl
jns
(bad)
hlt
jo
daa
das
push
push
jg
imul
mov
lods
aaa
add
cdq
cld
fisub
icebp
jbe
push
in
pop
cwde
shl
scas
push
cli
pop
mov
les
mov
push
movs
movs
cmp
retf
jns
out
push
xor
sub
adc
and
aad
xchg
sbb
fbstp
push
and
ss
les
inc
add
test
adc
stos
mov
cld
pushf
ins
into
jecxz
pop
pushf
test
(bad)
jbe
push
jmp
push
fcmovbe
das
fdivrp
or
cmp
out
out
jnp
ins
mov
jnp
sub
push
and
dec
jecxz
mov
inc
and
ret
push
(bad)
imul
add
ss
push
or
sbb
test
loope
adc
hlt
adc
pop
test
fadd
inc
push
jecxz
mov
pusha
push
fst
jle
pop
test
int
inc
jmp
mov
fwait
repz
mov
lea
jb
push
adc
shr
sub
xor
out
inc
mov
and
sahf
inc
jo
sbb
push
scas
cmp
mov
dec
std
shr
pop
cmc
push
fnstcw
add
sub
pop
push
inc
dec
out
jp
ret
mov
or
sub
cmp
push
jle
mov
cs
bound
add
out
lock
jl
or
int
cmp
rcl
loope
out
fld
cwde
outs
mov
es
data16
sti
shr
mov
test
out
mov
scas
push
(bad)
adc
xlat
ja
mov
cmp
in
lods
test
popf
inc
add
jmp
push
popa
xlat
push
retf
mov
push
jne
int3
neg
pop
push
xor
jl
push
push
pop
dec
jmp
cmp
push
scas
enter
push
mov
sbb
and
xchg
sub
push
out
mov
mov
dec
mov
rol
pop
fs
stos
or
inc
fstp
push
mov
pop
adc
cmp
dec
jecxz
or
push
mov
pop
sbb
fst
pop
jecxz
cmp
stos
(bad)
jl
mov
and
xchg
adc
sub
jp
ret
loopne
xchg
mov
push
popa
jg
in
fnstenv
outs
dec
stos
out
push
hlt
lea
int
call
inc
aaa
push
lods
dec
cmp
mov
or
dec
adc
cld
xchg
xor
add
fisubr
xchg
repnz
cmc
push
repnz
mov
push
mov
jecxz
cmp
dec
pusha
pop
mov
jp
or
inc
cmp
sbb
cs
cmp
push
sbb
in
retf
shr
cmp
test
fstp
shl
mov
add
out
mov
push
lods
cs
mov
push
ins
xchg
rcl
fidiv
dec
aaa
add
and
cmps
inc
and
xor
mov
adc
or
in
mov
push
(bad)
sbb
xor
enter
mov
aam
pop
add
pop
fcomp
inc
pop
fadd
outs
cs
cmp
aam
dec
cmp
jnp
sti
pop
fldenv
(bad)
xchg
pop
mov
in
ds
xor
jno
dec
aad
popf
dec
push
movs
lock
(bad)
mov
sub
outs
mov
popf
es
inc
push
adc
mov
inc
xchg
sub
jecxz
xchg
and
(bad)
adc
je
scas
sahf
push
cmps
clc
(bad)
xchg
call
stc
dec
int
mov
aam
sub
aas
shl
inc
dec
sbb
addr16
push
(bad)
cmp
sbb
cmp
es
xor
cs
dec
pusha
pop
xchg
ja
push
sbb
outs
or
push
inc
rol
mov
sub
pop
ins
arpl
xchg
xchg
(bad)
cmp
leave
add
adc
icebp
clc
in
push
in
loopne
sub
add
inc
aas
jno
fst
pop
mov
pop
sbb
stc
stos
jl
out
push
dec
ds
call
mov
mov
mov
ins
mov
sbb
xor
add
and
cmp
and
clc
adc
push
add
pusha
loope
dec
sbb
xchg
je
aaa
mov
mov
test
jl
mov
cmovg
pop
in
jnp
xchg
retf
sub
and
call
push
mov
stc
cmp
inc
and
mov
sub
jnp
jg
mov
add
xchg
(bad)
(bad)
gs
mov
mov
or
xor
mov
sub
sti
fld
and
xchg
movs
sub
pop
mov
jno
cmp
fisttp
xor
pop
push
and
in
pop
push
ret
mov
adc
popa
jmp
mov
mov
test
inc
or
call
test
int3
fidivr
sti
mov
sahf
fnstsw
mov
push
mov
push
in
je
outs
jbe
cmp
jnp
inc
push
xor
rcr
or
imul
or
inc
(bad)
shr
pop
mov
into
dec
movs
test
push
sub
cli
mov
mov
mov
shl
test
ror
sub
jmp
add
xor
jno
add
dec
ins
cld
cmp
sub
mov
dec
pop
cmp
out
test
jo
std
cmp
fst
mov
inc
ins
sbb
cmp
(bad)
aam
into
xor
jne
bound
stos
mov
inc
rsqrtps
movs
cwde
inc
(bad)
cli
mov
jnp
cmps
dec
xchg
sub
add
fbld
push
fcomp
adc
cmp
dec
cmp
jae
sub
int3
shl
xor
(bad)
jo
dec
outs
(bad)
out
mov
call
xchg
jp
mov
int3
inc
scas
mov
cwde
retf
ss
or
ror
mov
imul
fsub
cmps
dec
mov
push
addr16
test
jae
movs
scas
xchg
aad
push
pusha
test
out
xchg
pop
jp
test
int3
dec
push
xchg
aad
gs
sub
adc
je
popw
aam
add
(bad)
fst
sbb
(bad)
sbb
test
jg
mov
mov
aad
ret
mov
data16
and
mov
es
push
aam
sbb
sbb
outs
pop
dec
sahf
inc
out
rol
loop
daa
sub
test
retf
sbb
leave
mov
stos
sti
push
stos
xchg
rcr
mov
or
jne
mov
xchg
push
out
cmc
xchg
add
cmc
push
jecxz
inc
cmp
sbb
pop
ret
call
and
ret
dec
leave
in
lods
inc
cs
and
in
mov
push
std
or
retf
sub
lods
frstor
sub
out
das
mov
ins
sti
xchg
mov
movs
stos
lahf
pop
pop
sar
and
aad
imul
adc
addr16
pop
ror
hlt
xabort
mov
inc
jae
gs
dec
hlt
or
stos
xchg
cmp
adc
pop
cld
or
fstenv
fsubr
daa
mov
lods
retf
jns
xlat
add
inc
push
das
in
inc
ficom
add
add
call
test
cmp
cli
(bad)
push
ret
and
mov
pop
xchg
je
ds
scas
adc
mov
pusha
push
ret
sbb
(bad)
and
add
popa
sub
sub
xor
adc
mov
scas
and
stc
mov
cmp
fidivr
cli
test
fstp
sti
ins
ss
inc
hlt
and
fs
lock
sub
inc
xchg
lahf
xor
adc
mov
pop
stos
into
call
pop
in
push
add
mov
adc
bound
adc
sbb
push
add
sub
aaa
stc
daa
ret
icebp
loop
mov
pop
stc
call
jne
jmp
xlat
leave
loop
push
sbb
inc
(bad)
sbb
ins
push
dec
into
loopne
pop
ja
push
mov
pop
mov
sub
cmp
int3
jno
mov
icebp
dec
fs
dec
dec
jo
sbb
xor
test
scas
daa
lea
dec
scas
mov
mov
pop
cmp
dec
stos
aaa
or
sub
loope
js
push
pop
ror
xor
imul
lds
fsubr
icebp
pop
(bad)
and
mov
call
test
push
shr
std
mov
sar
test
xchg
lahf
(bad)
loope
inc
add
hlt
sub
pop
mov
dec
push
adc
retf
arpl
movs
mov
lods
iret
call
cmp
xchg
cs
mov
je
inc
fstp
mov
mov
lahf
mov
in
cmps
cli
xor
mov
inc
(bad)
in
lds
dec
arpl
sub
bound
bound
(bad)
pop
inc
enter
or
xor
cwde
jp
(bad)
jbe
pop
mov
inc
and
jb
mov
pop
loop
mov
or
mov
xchg
jae
mov
test
inc
push
aad
push
sub
mov
inc
xchg
pop
into
clc
push
dec
stos
push
pop
ss
out
jo
pushf
mov
adc
out
out
push
mov
mov
dec
mov
retf
jge
test
into
fcomp
pop
pushf
daa
adc
fstp
lea
mov
mov
and
fs
cld
test
push
cmps
dec
mov
mov
pop
mov
test
xchg
int3
fimul
lahf
pop
in
pop
dec
xchg
loopne
popa
push
dec
cmp
push
mov
call
pop
and
push
stc
jns
inc
mov
push
xor
jmp
pop
sbb
mov
pop
int
mov
imul
js
lahf
jae
dec
cmp
adc
mov
inc
lods
dec
xchg
ins
lds
pop
xor
mov
dec
cmc
popa
add
mov
push
cli
enter
in
dec
and
(bad)
jmp
push
ret
push
aas
sar
les
ret
jecxz
aaa
lods
leave
mov
repz
dec
pop
lods
or
push
into
jl
cmp
mov
mov
jb
and
add
add
mov
sub
xor
xor
aas
mov
ds
push
dec
and
jo
xchg
pop
inc
adc
sub
call
mov
test
lock
sub
fmul
shl
mov
xchg
inc
cs
lahf
popa
dec
test
jmp
pop
mov
scas
std
mov
jge
sar
inc
mov
rep
sbb
fnsave
dec
jo
in
cmp
adc
push
inc
jmp
hlt
rcl
daa
sahf
fsub
outs
outs
inc
xor
mov
es
fnstsw
imul
jae
and
mov
adc
test
gs
adc
iret
je
fild
push
scas
add
out
or
ds
aam
call
int
ja
xor
nop
cmp
fwait
pop
dec
mov
in
or
sub
adc
repnz
mov
push
sbb
sub
jl
jb
pop
bound
enter
test
xchg
and
mov
retf
and
adc
push
pop
(bad)
ins
fsubr
in
xchg
pop
xor
jb
push
popf
scas
cli
mov
fwait
add
mov
lods
mov
mov
(bad)
jecxz
xor
pop
sbb
(bad)
(bad)
mov
cld
fdivr
(bad)
pop
push
aaa
sub
mov
adc
jl
xchg
maxps
retf
push
fwait
mov
leave
mov
out
inc
pop
pop
xchg
repz
movs
aam
xor
add
sbb
dec
jb
int
pop
in
sbb
push
ja
cwde
fs
in
push
mov
sub
inc
nop
or
cmp
aam
xchg
adc
jbe
push
inc
fld
movs
cs
pusha
cmp
sahf
ret
les
in
mov
jge
out
dec
dec
sbb
hlt
in
cmp
mov
sahf
push
mov
cmp
cmps
sbb
out
or
lds
retf
bound
in
or
jmp
ds
xchg
jecxz
sub
jae
daa
sub
xchg
push
out
movs
cmp
push
xlat
add
out
ds
mov
and
loope
stos
inc
mov
emms
rcr
imul
mov
dec
cld
cwde
in
popa
daa
jmp
inc
push
jl
jns
hlt
push
les
ret
les
ret
push
sub
mov
and
push
inc
les
mov
cmp
push
mov
sub
es
pop
lds
fcmovbe
fisubr
out
adc
push
adc
jbe
push
std
outs
mov
(bad)
imul
sub
or
xchg
cld
daa
in
jnp
jmp
in
push
or
mov
js
test
pop
pop
sahf
dec
stos
out
stc
mul
addr16
pop
dec
mov
pop
push
movs
jnp
hlt
adc
fidivr
or
cmp
push
addr16
fwait
lea
xchg
push
loope
sub
push
inc
ja
add
shl
or
cmp
cmp
leave
loop
dec
push
retf
(bad)
jecxz
fmul
test
hlt
stc
xor
jb
cmps
inc
and
pop
adc
mov
imul
int3
adc
fst
ds
ret
dec
mov
into
ins
out
inc
jg
push
xchg
sub
dec
loop
clc
fwait
and
and
repz
enter
in
mov
fmul
sbb
retf
adc
dec
xor
adc
repnz
cmp
arpl
jl
add
inc
fcomp
rcl
sti
ins
sub
mov
push
fs
push
rol
mov
out
inc
push
jne
xor
ds
je
or
push
pop
arpl
mov
test
leave
pushf
jno
jbe
fdivr
je
nop
scas
fs
shl
mov
mov
dec
xchg
sub
jmp
mov
stos
or
push
sbb
cdq
inc
sbb
(bad)
ficomp
stc
mov
mov
outs
dec
arpl
mov
sub
icebp
cmp
xchg
out
and
jbe
out
(bad)
outs
mov
jae
cs
xor
aaa
jecxz
mov
stc
cmp
add
stos
xchg
cwde
out
mov
xchg
sbb
scas
pop
in
push
inc
xor
movs
jo
loope
call
add
lea
out
xchg
(bad)
loop
push
leave
jae
pop
aas
xor
(bad)
sti
mov
call
inc
or
xor
dec
out
mov
or
stc
add
scas
xchg
mov
clc
jo
jno
out
sbb
movs
xchg
xor
push
jne
adc
lods
in
xchg
arpl
ss
out
cli
out
xor
inc
xor
ret
in
or
cmps
rcl
imul
in
sbb
cmp
and
js
dec
fidiv
dec
xchg
pop
nop
dec
pop
or
ret
dec
push
mov
xor
sbb
ja
cmp
outs
sub
inc
inc
sbb
mov
out
fisubr
(bad)
xchg
jmp
loope
imul
adc
ja
fsubp
(bad)
add
(bad)
mov
mov
add
inc
cmc
xlat
or
fld
push
sbb
dec
and
(bad)
push
inc
mov
popf
or
stos
cwde
jns
push
mov
rcl
ds
xchg
cmc
push
sbb
dec
out
inc
fimul
cmp
pop
push
leave
int3
sbb
js
dec
pop
mov
xlat
jb
lahf
pop
pop
add
xchg
mov
fs
int
dec
mov
mov
jno
pop
cmp
add
loope
scas
loopne
sbb
test
jmp
push
dec
aaa
push
scas
or
fcmove
pop
cmps
enter
adc
inc
mov
push
inc
inc
imul
adc
loopne
lods
sub
inc
push
mov
push
jne
into
add
inc
shr
jbe
jmp
sbb
int
pushf
or
(bad)
xchg
mov
cmp
int
(bad)
and
lds
sbb
rcr
loop
cmps
and
aaa
mov
cwde
xor
sbb
sbb
inc
arpl
inc
les
push
sbb
push
sub
movs
(bad)
jge
add
mov
add
adc
imul
pop
sti
mov
pop
test
inc
mov
arpl
test
test
jmp
dec
mov
inc
mov
cmp
and
fisttp
cmc
dec
xor
test
test
into
jnp
repnz
jp
mov
enter
aad
shl
push
scas
in
pop
test
scas
cmp
js
lods
add
xor
ja
add
sub
jns
inc
ss
mov
gs
test
add
(bad)
sbb
in
(bad)
xchg
ins
sub
in
xchg
jbe
arpl
aam
fadd
fsubp
jb
add
mov
sub
js
lods
jl
in
cmc
jb
xlat
ss
mov
add
xchg
js
daa
movs
cmp
xchg
ss
jecxz
jmp
adc
mov
jns
mov
and
out
mov
scas
inc
pop
int3
pop
adc
mov
jge
jb
mov
(bad)
mov
jns
jbe
dec
mov
jno
mov
or
mov
jecxz
pop
ds
mov
call
mov
enter
cli
cs
lods
add
add
jno
inc
retf
fisub
add
xor
cmps
retf
pushf
mov
outs
cwde
dec
xor
pop
add
cmc
sub
fcom
imul
mov
jns
rol
into
cwde
fst
(bad)
and
scas
shr
outs
cdq
leave
repnz
mov
cmp
pop
push
add
ss
sub
cs
ins
std
sar
push
inc
push
sub
mov
loopne
mov
je
in
ret
(bad)
jmp
adc
test
lods
xchg
xor
scas
add
mov
pusha
xor
sar
aam
jecxz
mov
addr16
fsub
call
movs
mov
(bad)
dec
mov
loope
stos
pop
(bad)
sti
leave
or
cli
stc
sti
cdq
rol
pop
sub
scas
xchg
adc
push
cmp
pop
jne
jae
ror
data16
mov
int3
and
add
cmps
xchg
nop
movs
pop
push
jmp
ds
cmp
clc
(bad)
adc
hlt
in
push
mov
xor
and
ins
adc
mov
pop
jmp
sub
fsub
ins
gs
jmp
pop
fsub
int
inc
push
shr
or
out
mov
int3
mov
sub
add
or
shl
or
pop
xchg
mov
in
int
adc
adc
inc
cld
mov
inc
inc
movs
sbb
mov
aam
mov
std
cmp
adc
mov
push
xchg
pop
ins
lock
dec
dec
adc
cs
mov
xchg
mov
or
shl
adc
movs
(bad)
(bad)
mov
ds
or
int
mov
sbb
ret
cli
push
inc
pop
fisttp
scas
mov
or
retf
add
mov
xchg
mov
and
in
je
adc
pop
or
mov
xor
js
test
xor
ss
sub
lock
pop
adc
aad
mov
and
ja
pop
(bad)
mov
xchg
adc
(bad)
jb
lahf
or
add
jb
cmps
mov
inc
sbb
mov
out
add
add
jns
xchg
jmp
fwait
dec
not
xlat
jmp
sub
jecxz
xchg
xchg
dec
sbb
or
push
retf
pop
jnp
mov
hlt
pop
and
cmp
sahf
mov
mov
dec
js
cmps
cmp
inc
fmulp
sub
sub
(bad)
dec
out
je
stc
cli
xlat
sti
ss
js
mov
pushf
xchg
add
std
xor
fwait
idiv
pop
in
cmp
pop
fidiv
xor
mov
sub
shl
or
or
mov
dec
inc
and
movs
in
inc
jle
lahf
hlt
es
pop
push
mov
fs
push
cmp
jmp
mov
in
repnz
int
out
rol
(bad)
clc
sub
or
rol
mov
mov
sub
ficomp
sahf
adc
imul
fsubr
jmp
imul
(bad)
in
test
lea
ja
dec
cmc
add
push
sub
sub
jo
xchg
xchg
cdq
mov
fmulp
jge
pop
xchg
(bad)
pop
std
mov
mov
in
cmp
mov
cmps
jo
in
cmp
jno
cmps
retf
or
mov
lock
jbe
pop
xchg
xor
or
mov
or
inc
and
xchg
dec
adc
xor
imul
inc
ret
jb
mov
add
pop
jecxz
or
dec
cwde
sti
and
repnz
dec
repz
pop
mov
mov
cmp
(bad)
daa
xor
mov
mov
dec
iret
add
stc
outs
mov
cmp
mov
xchg
sbb
xor
ins
mov
inc
cmps
pop
std
add
ins
xor
jno
xchg
mov
out
or
nop
mov
jbe
jns
popf
push
sub
loopne
ins
push
adc
(bad)
cmps
je
xchg
and
(bad)
imul
shl
popf
xchg
add
adc
imul
enter
ficom
and
jmp
icebp
mov
aad
outs
and
fldenv
mov
xor
aas
lods
imul
add
repz
cmp
lock
outs
daa
div
or
imul
cdq
mov
fldcw
inc
cmc
cmp
lods
xor
pop
xchg
jp
ds
xchg
dec
push
outs
stc
retf
push
les
pop
jmp
vpaddb
lods
mov
xchg
hlt
inc
inc
sbb
mov
pop
inc
aaa
xor
push
inc
jge
mov
cmp
xchg
pushf
bound
ss
sar
inc
es
cmp
pop
sub
aad
adc
pop
out
xor
loopne
stos
(bad)
cmps
fimul
mov
pop
push
cmp
xor
sar
mov
jne
adc
cmp
ins
sub
sub
retf
push
movs
loop
aam
retf
xor
dec
sub
rcr
jb
or
xchg
test
out
and
adc
inc
into
xor
add
test
xchg
add
xchg
mov
jne
pop
jo
jle
cmp
je
xchg
xchg
pop
shr
sub
or
inc
div
sbb
popf
lods
add
fwait
adc
movs
cs
mov
int3
iret
loop
pop
(bad)
cld
aam
mov
mov
mov
(bad)
xlat
and
lahf
and
mov
push
xor
or
jmp
pop
jmp
int3
dec
aas
push
outs
xchg
fcomp
lods
imul
scas
gs
push
out
push
jbe
sub
bound
jecxz
repnz
test
div
ins
dec
call
adc
add
aaa
fidiv
cmp
int3
je
push
dec
xchg
xchg
mov
push
xor
test
rcr
xor
arpl
(bad)
loop
or
jle
add
movs
stc
(bad)
pop
shl
in
mov
xor
rcr
shr
dec
lds
enter
mov
push
sub
pop
push
pop
jae
movs
push
mov
xchg
int3
sub
and
cmp
xchg
jp
lods
jbe
jo
cld
mov
xlat
add
sub
jle
push
scas
mov
jnp
stos
test
nop
out
lahf
out
push
mov
pusha
inc
mov
pop
inc
frstor
loope
jnp
cwde
loope
sub
stos
mov
pop
inc
rol
shl
dec
jl
test
xchg
call
or
pop
add
bound
mov
cmp
cmp
std
inc
or
push
std
popf
outs
inc
ror
push
and
ror
imul
retf
ss
in
ja
icebp
push
pop
mov
(bad)
stos
jl
mov
dec
sbb
stc
ret
mov
test
sbb
scas
add
in
and
lods
stc
sbb
aas
into
xor
cmc
lds
mov
call
jge
mov
xchg
or
xchg
imul
cmp
ds
mov
popf
xchg
mov
ins
rcr
jp
cmps
aad
test
shr
fld
and
out
mov
popa
and
icebp
fcmove
or
sub
mov
js
neg
leave
inc
cs
dec
cli
mov
iret
sub
fist
popf
add
lock
sbb
inc
icebp
mov
push
fwait
into
inc
rcl
and
test
mov
leave
lahf
mov
jno
mov
into
enter
mov
dec
sub
mov
loopne
push
jl
out
xor
clts
(bad)
in
(bad)
mov
mov
or
(bad)
stc
xchg
jns
xchg
fisttp
push
inc
dec
xor
xchg
test
dec
dec
aaa
dec
sti
lock
jecxz
(bad)
mov
mov
nop
adc
mov
cld
inc
sbb
sbb
nop
ds
xlat
jmp
add
sbb
shl
ret
fimul
mov
outs
scas
xchg
fucomp
push
js
add
mov
adc
or
sar
jns
xor
div
lods
int
adc
retf
int3
retf
pop
test
pop
jmp
mov
xchg
xlat
dec
outs
push
(bad)
fs
std
sti
mov
mov
jo
or
cdq
loope
adc
jb
inc
cmps
xchg
push
add
inc
push
add
push
pop
push
jmp
inc
data16
in
pop
mov
not
(bad)
sbb
jmp
(bad)
jmp
fldcw
loop
and
out
jns
cld
xor
(bad)
enter
jne
pop
and
cmp
aam
bound
clc
or
cdq
pop
cmps
dec
push
test
jb
and
mov
jnp
mov
test
pusha
jbe
scas
out
and
or
ja
jns
inc
dec
pop
dec
and
int3
pop
clc
xchg
jecxz
shl
data16
in
jp
dec
sub
jmp
xchg
xchg
lahf
std
dec
inc
jnp
mov
jbe
fstp
bswap
icebp
sub
shr
popa
ror
push
fbstp
loope
jge
iret
sub
popa
stos
inc
retf
pusha
xor
call
adc
dec
xor
aas
xchg
xchg
push
add
inc
xchg
dec
push
(bad)
out
clc
push
pop
mov
shl
dec
(bad)
cmp
jge
cmp
sti
push
clc
fimul
pushf
mov
add
xlat
add
rcr
pop
mov
pop
repz
ror
xchg
and
jo
test
pop
popa
sub
or
cs
xor
mov
enter
or
stc
cld
daa
(bad)
icebp
inc
mov
repz
mov
adc
(bad)
std
stos
movs
int
outs
inc
add
dec
or
cmps
div
push
inc
xchg
jmp
jmp
lods
inc
repz
in
xchg
sbb
jb
js
clc
xor
loop
and
(bad)
in
xchg
mov
jne
mov
(bad)
ins
cmps
(bad)
icebp
lock
pop
mov
lds
mov
clc
add
pop
mov
xor
mov
in
loope
out
dec
int3
dec
push
call
xor
and
(bad)
mov
bound
mov
out
adc
(bad)
mov
pop
cwde
mov
xchg
cmp
xor
push
call
xchg
sbb
or
mov
sbb
jns
das
pushf
in
scas
inc
inc
pushf
mov
jns
rcr
sub
inc
std
mov
xor
adc
xor
sbb
fisub
addr16
dec
cs
or
mov
push
out
jnp
fidivr
test
jns
or
test
mov
loopne
push
fld
ret
cmp
mov
cld
and
jbe
cmp
cmp
mov
xor
mov
rcr
int3
nop
add
leave
sbb
test
add
jl
cli
dec
adc
stos
push
pusha
(bad)
ror
icebp
mov
push
and
jg
or
jae
mov
mov
jmp
add
in
repz
inc
push
stc
xchg
(bad)
push
and
mov
ja
jmp
mov
sbb
movs
(bad)
daa
sahf
hlt
popf
push
in
and
es
ins
mov
mov
cmp
rcr
xchg
push
and
xor
push
enter
cmps
aaa
icebp
(bad)
enter
mov
mov
add
cmp
pop
(bad)
sbb
dec
xchg
adc
int3
lock
jl
push
mov
into
sub
sub
cmp
test
adc
jl
sub
ins
jmp
inc
and
cmp
xchg
sbb
and
xor
add
ins
in
sub
mov
cmp
fcomp
mov
sahf
xor
mov
push
cmp
lea
add
pop
leave
cld
mov
inc
je
dec
js
lods
pop
mov
outs
and
imul
or
and
(bad)
movs
cmp
(bad)
aam
test
fist
(bad)
ror
enter
mov
sbb
(bad)
jne
pop
jo
scas
fiadd
add
out
and
mov
mov
push
cli
add
mov
loop
or
and
scas
fisttp
mov
or
es
sub
fidivr
lods
pop
mov
das
jmp
cmp
cmc
mov
bnd
and
mov
jae
outs
data16
ficomp
adc
sbb
push
rcr
jns
mov
pop
mov
cdq
cli
ss
mov
dec
es
add
sub
outs
(bad)
cmp
dec
pop
int
xchg
xchg
lods
and
xor
mov
add
mov
add
cmp
lea
addr16
push
repz
rcr
ror
int
iret
fmul
retf
shr
shl
xchg
jg
test
popf
inc
arpl
rol
shr
and
xor
sbb
cmp
or
push
ret
xchg
and
push
xchg
icebp
call
retf
or
inc
jle
daa
inc
std
jno
xor
test
stos
mov
fwait
jae
(bad)
mov
cmp
mov
lahf
fdiv
(bad)
mov
cwde
loope
inc
bnd
outs
ins
(bad)
sti
jle
mov
cmc
scas
jl
push
cld
sbb
push
and
mov
mov
inc
scas
mov
mov
out
jb
int
inc
(bad)
xchg
jmp
adc
popf
repz
rcr
add
ins
loopne
(bad)
leave
hlt
cmps
sub
(bad)
sbb
fld
xchg
imul
das
mov
sbb
jb
cmps
nop
stos
xor
mov
push
mov
pop
fld
and
sbb
or
or
hlt
loop
sahf
jge
or
(bad)
pop
mov
cmp
aad
mov
mov
mov
jno
imul
inc
sbb
js
jb
popa
xor
(bad)
hlt
shl
adc
pop
(bad)
neg
cld
mov
lahf
jmp
mov
in
pushw
pop
xchg
out
pop
adc
dec
inc
enter
cmp
out
mov
(bad)
jmp
(bad)
call
cli
test
mov
outs
lock
stos
inc
push
inc
lea
inc
rol
dec
inc
and
bound
mov
pop
addr16
arpl
mov
xchg
in
jne
dec
clc
pop
ins
fs
out
ins
cmp
mov
cmps
jmp
lods
cwde
cmp
enter
loope
hlt
xchg
in
add
cmp
lahf
cmp
lds
adc
mov
inc
leave
fdivrp
ret
push
inc
push
idiv
popw
sub
inc
les
adc
fmul
cmp
dec
into
or
test
xchg
or
sbb
mov
icebp
inc
jbe
ins
pop
rcl
imul
inc
test
out
(bad)
int
pop
jmp
call
jge
fs
ins
xchg
shr
and
icebp
and
pop
or
dec
ins
out
sbb
jmp
loopne
xchg
movs
gs
push
adc
les
xor
in
xlat
xlat
jne
cmp
setge
fisubr
fsub
mov
xlat
jne
imul
and
push
adc
xor
pop
sahf
mov
addr16
dec
push
repz
pop
mov
clc
add
cmp
add
push
sub
mov
out
ds
mov
and
test
div
pop
out
(bad)
loop
mov
into
xchg
sar
popa
mov
or
and
std
mov
std
and
mov
fimul
stos
out
dec
jl
cmp
loope
shl
mov
inc
jae
(bad)
lock
push
sbb
outs
xor
pop
and
(bad)
sub
das
mov
outs
in
(bad)
int
pop
ds
outs
(bad)
loope
jg
jb
test
test
mov
add
or
xor
bound
inc
gs
cs
dec
mov
pop
cdq
or
lds
push
test
hlt
jno
int3
lods
cdq
or
scas
loopne
pop
or
outs
shr
in
mov
push
loop
add
cmp
add
jae
outs
inc
xchg
sbb
adc
jl
dec
add
out
xor
sbb
xlat
jno
hlt
xchg
in
out
repz
shl
inc
fld
mov
mov
mov
fiadd
sbb
mul
int
jmp
cmp
fimul
rcr
popf
fs
sub
(bad)
cmps
pusha
lea
pop
loope
loopne
icebp
pop
xchg
cmp
ror
push
mov
out
and
ja
fwait
adc
int
pop
ss
pusha
data16
push
fld
call
adc
rol
xchg
inc
sbb
outs
jmp
add
mov
push
pop
push
test
addr16
stos
xchg
cmp
leave
cmc
stos
in
fcmovbe
aad
sar
sbb
mov
mov
cmp
xchg
pop
cwde
dec
add
mov
pop
cld
dec
sahf
lock
sbb
in
aas
test
jmp
les
cli
sub
mov
mov
(bad)
leave
daa
cmp
(bad)
jnp
adc
or
and
push
push
adc
or
sbb
pop
in
or
add
mov
adc
or
and
sbb
or
inc
and
jne
shr
mov
cld
cdq
mov
icebp
cmp
std
out
adc
(bad)
loopne
sub
shr
inc
sbb
mov
in
clc
cmp
pop
push
jmp
push
out
mov
mov
retf
jg
or
or
push
sub
mov
cld
in
ret
dec
xor
mov
iret
xchg
mov
push
xor
int
retf
(bad)
pop
dec
dec
test
sub
push
push
test
jmp
aad
into
sbb
retf
pop
js
xchg
cmp
rol
fisttp
mov
adc
push
stos
out
out
add
into
and
fisubr
sar
sub
pop
inc
xlat
jno
push
adc
xor
nop
push
add
adc
mov
adc
cs
lods
dec
in
add
xor
out
push
sar
inc
sbb
cmps
sbb
dec
jp
mov
jecxz
shl
das
push
cmps
and
push
fucomp
pop
jp
sub
pop
dec
data16
ja
or
fist
lods
jne
leave
rol
pop
xlat
mov
dec
cmps
cmp
xor
push
mov
push
loopne
lea
pop
xchg
ret
daa
cld
mov
stc
push
jle
inc
test
or
adc
xchg
jp
scas
dec
xor
or
or
xchg
xchg
pop
ret
mov
iret
pop
xor
push
cld
jl
imul
xchg
dec
lds
xchg
jp
push
sar
loop
push
lds
mov
jno
enter
addr16
xor
mov
into
fst
add
sub
adc
push
leave
sbb
(bad)
fcom
mov
gs
adc
lods
adc
stc
ja
xlat
sbb
repnz
push
push
in
push
lock
push
fwait
je
jl
fcomi
mov
outs
jnp
fmul
cld
test
outs
(bad)
mov
out
pushf
nop
jno
dec
adc
push
cwde
fdivr
dec
test
pop
cmps
and
sub
and
out
adc
clc
nop
jmp
je
inc
js
lods
stos
sub
lds
rcr
or
mov
lea
rep
std
mov
ds
mov
addr16
push
repz
mov
scas
jecxz
pushf
mov
pop
nop
outs
daa
cmp
push
aaa
ja
pop
in
mov
cmp
shr
dec
push
out
cld
jbe
xchg
sti
jmp
dec
inc
fiadd
cmp
jg
mov
retf
mov
ins
sub
loopne
or
aas
out
xchg
add
or
pop
push
xor
sahf
inc
outs
cs
ds
mov
stc
pop
cdq
cmc
push
mov
in
or
pop
daa
movs
mov
sti
pop
sar
mov
xchg
stc
xlat
xlat
or
mov
sbb
pop
cmps
retf
inc
inc
xchg
push
dec
pop
stc
adc
pop
in
movs
sahf
inc
mov
mov
imul
add
int
(bad)
test
movs
jns
repnz
mov
push
fcmovu
push
jae
(bad)
mov
out
mov
in
stos
mov
cmc
arpl
(bad)
xchg
lea
cmp
sbb
push
ds
movs
cld
sbb
scas
mov
pop
mov
mov
int
and
aam
call
inc
sahf
fmulp
out
inc
dec
cmps
mov
dec
test
mov
pop
jbe
jg
popf
call
mov
adc
xor
mov
inc
push
popf
fst
pop
push
push
sbb
test
push
test
mov
adc
sahf
jne
aas
push
test
inc
sub
xor
cmp
repnz
jmp
mov
std
xor
add
sbb
rcl
mov
test
inc
dec
add
lods
push
(bad)
(bad)
ins
and
fild
sar
adc
jle
test
daa
sbb
dec
and
cmp
(bad)
xor
jp
loope
ficom
xchg
loopne
pushf
xor
popf
dec
out
rcr
adc
fcmovne
mov
inc
inc
dec
mov
mov
out
scas
sub
mov
in
mov
mov
test
sub
cmps
fdivr
popf
jno
cmp
dec
out
fsub
cmp
out
mov
inc
pop
mov
hlt
pop
loope
pop
jno
dec
sbb
(bad)
and
cdq
xlat
(bad)
mov
mov
icebp
push
pop
dec
push
cmp
std
pop
mov
mov
test
mov
and
ins
xchg
or
sub
cmps
push
out
cmp
xor
sub
ds
or
cmps
jns
repnz
cwde
aaa
pop
pause
jge
leave
ss
add
push
mov
jmp
mov
movd
dec
sbb
xchg
cmps
outs
into
rcr
adc
nop
inc
push
xchg
lods
hlt
xor
cs
mov
and
ret
add
mov
addr16
imul
idiv
je
sahf
jnp
or
sub
adc
inc
add
sbb
mov
push
xchg
loope
int3
push
mov
sub
fst
das
jns
icebp
pop
push
movs
adc
sbb
sub
shl
mov
pusha
pop
std
repz
imul
dec
sbb
inc
jp
ds
pop
imul
shr
or
in
test
repnz
xchg
sti
mov
add
out
push
lods
add
and
fld
jge
lahf
ret
and
jo
xchg
cmp
jecxz
pop
add
popa
out
xor
shl
or
cmps
outs
ja
stos
mov
jge
out
mov
je
lea
xchg
or
lods
pop
mov
adc
cld
jne
std
popa
ds
push
bound
and
sbb
sub
add
inc
retf
mov
jmp
enter
fwait
pushf
push
scas
push
cmc
int
(bad)
into
cld
xor
mov
rcl
into
imul
mov
lea
test
jecxz
nop
dec
sub
dec
popf
cmp
dec
loopne
and
cwde
jo
push
mov
fisttp
call
pop
and
rol
loope
mov
cwde
jle
mov
les
push
push
addr16
ja
lock
fwait
xlat
int
dec
dec
fnsave
jle
dec
pop
push
xchg
mov
jl
dec
mov
mov
int
icebp
scas
into
xchg
movs
push
cli
rep
pop
fcmove
fnstenv
xor
in
pop
or
sub
mov
leavew
sbb
and
inc
out
loop
adc
test
mov
sbb
movs
or
loop
sbb
retf
sub
inc
aaa
ss
add
push
mov
add
inc
js
xchg
ret
ss
xchg
lods
addr16
jle
out
add
adc
ret
cwde
psubd
pop
mov
out
sbb
dec
xchg
sahf
lds
scas
mov
imul
cs
imul
mov
test
leave
xor
mov
pusha
fninit
sub
or
enter
inc
or
dec
mov
in
mov
cdq
fwait
mov
sub
sbb
popa
std
scas
enter
imul
mov
stc
ja
js
sahf
mov
je
inc
add
fs
cmc
mov
jp
xchg
enter
std
inc
add
mov
mov
mov
mov
or
jl
fnsave
xor
icebp
mov
into
dec
sub
cmp
adc
xlat
pop
cmp
adc
cmp
mov
popa
inc
push
test
pop
push
mov
mov
and
mov
loope
dec
xchg
(bad)
xchg
scas
dec
xor
inc
cmp
sti
jecxz
dec
xor
loopne
int3
hlt
jp
pop
das
dec
xor
mov
pop
push
adc
scas
sbb
pop
inc
pop
adc
jnp
cli
bound
sbb
fimul
dec
inc
mov
jae
dec
jp
retf
xchg
pop
addr16
pop
and
call
pop
xchg
push
push
aaa
jmp
push
call
jg
jmp
das
xchg
add
cmp
lahf
leave
dec
push
out
lock
addr16
push
cmps
repz
cmp
mov
fnstsw
stos
xor
pop
cmp
xchg
sub
(bad)
sti
push
and
loop
in
loop
pop
inc
pop
mov
sub
stc
lods
arpl
mov
and
mov
xor
xchg
pop
leave
jmp
fistp
inc
ins
add
in
adc
lahf
sbb
or
push
pop
fstp
sub
mov
rcl
xor
inc
pop
maxps
pushf
xchg
inc
sub
repz
pop
fisttp
stc
inc
(bad)
out
mov
test
fs
and
lock
dec
adc
dec
jg
(bad)
ss
daa
call
stos
nop
ror
sbb
inc
xchg
sub
cld
(bad)
pop
mov
cs
js
outs
mov
or
inc
jo
aaa
jae
clc
retf
enter
or
(bad)
mov
cmps
push
inc
(bad)
lds
outs
clc
ss
sbb
repz
mov
pop
fiadd
jbe
int
call
jle
push
and
push
dec
mov
xchg
cmp
(bad)
pop
and
pop
or
mov
cmp
fcom
cmp
dec
scas
js
mov
sbb
pop
mov
push
sbb
xchg
mov
xor
mov
pop
and
pop
adc
inc
test
fcmovu
les
cmp
inc
outs
outs
push
push
jbe
xor
(bad)
icebp
mov
pusha
inc
xor
dec
ret
mov
(bad)
arpl
xor
(bad)
es
mov
jb
mov
test
sti
xchg
inc
pop
add
fbstp
inc
or
dec
out
cmp
daa
std
fistp
mov
dec
sub
mov
mov
fadd
mov
and
adc
inc
enter
or
add
add
mov
mov
cmp
ss
loop
push
bound
mov
xlat
inc
jb
daa
movs
jge
pop
xchg
push
dec
lock
(bad)
fldcw
stc
mov
push
cmp
repz
xor
int3
in
enter
enter
mov
sub
aad
(bad)
fstp
fstp
scas
xchg
cmp
iret
pusha
jecxz
jle
das
clc
mov
mov
lods
lds
sti
out
daa
cli
and
ret
movs
dec
mov
push
cmc
inc
or
icebp
push
mov
data16
push
jecxz
push
jo
xchg
sub
push
call
mov
retf
stc
(bad)
and
fcomip
sub
test
inc
addr16
or
add
aaa
(bad)
pop
xchg
inc
lea
pop
mov
inc
in
and
or
xor
pop
mov
and
add
pop
push
inc
test
jo
sub
mov
or
in
dec
pushf
fisubr
xchg
add
cmc
push
xchg
add
add
daa
iret
fs
cmp
out
xchg
mov
sbb
xchg
dec
sar
pop
adc
daa
push
push
das
std
lar
outs
(bad)
test
test
mov
mov
sbb
hlt
sbb
imul
sub
pop
jnp
sub
loopne
jns
loop
xor
dec
lods
pushf
and
int3
mov
(bad)
enter
aaa
test
and
pusha
sbb
aam
(bad)
add
dec
jae
xchg
(bad)
fstp
inc
push
(bad)
and
out
or
bound
in
sub
outs
test
rcl
jns
push
lods
pop
fild
outs
inc
sar
(bad)
(bad)
fcomp
add
jg
ret
and
outs
sub
and
jp
fisttp
or
inc
ror
cmp
jg
pop
test
push
mov
in
(bad)
loope
sbb
mov
add
inc
pushf
les
cmp
imul
dec
aas
or
stos
scas
outs
pop
push
mov
adc
retf
xor
jle
(bad)
push
lods
aam
push
and
xchg
inc
(bad)
mov
jbe
loopne
inc
icebp
xor
in
int
(bad)
cmps
fisttp
test
xor
js
aam
ds
xlat
pop
mov
jp
cmp
fst
cmps
out
retf
xchg
cmp
test
not
dec
sbb
dec
sub
xor
fld
enter
fs
sbb
test
sti
lahf
pop
and
inc
leave
jb
cld
xor
js
out
dec
and
jp
or
je
stos
jmp
push
lods
(bad)
in
jmp
inc
cmp
(bad)
aam
sub
cmp
daa
ds
stos
mov
push
dec
cmps
aad
or
(bad)
xor
clc
lods
lea
cmp
cmp
inc
jle
int
sbb
out
std
sbb
xor
lahf
sub
mov
popf
bound
pop
ret
mov
push
mov
or
push
jge
sub
mov
jl
or
push
out
in
dec
mov
push
cli
pusha
bound
(bad)
(bad)
jmp
cmp
dec
cwde
not
mov
mov
cmp
xchg
jbe
add
and
fdivp
xor
cs
fbstp
or
mov
push
cmps
outs
push
sub
test
push
int3
push
jns
data16
cmp
sub
push
mov
sub
repz
fiadd
or
or
cs
fwait
hlt
shl
add
mov
push
adc
and
mov
movs
fisttp
mov
hlt
push
out
lods
mov
adc
aad
dec
loop
ret
fisttp
iret
xlat
ins
jae
pop
bound
popf
gs
sysret
xchg
fstp
pop
retf
out
das
cdq
push
xor
and
or
mov
div
pop
out
movs
add
lods
(bad)
dec
mov
shl
jge
iret
xor
jle
icebp
push
lods
out
jle
and
sub
repz
xor
mov
jp
inc
mov
push
lock
std
cli
stc
jecxz
cmp
jb
shl
push
mov
sub
add
mov
xor
call
dec
and
mov
or
pop
add
xchg
sbb
leave
pop
push
xchg
int3
(bad)
(bad)
sub
mov
daa
add
mov
inc
mov
movs
mov
icebp
pusha
dec
in
pusha
jns
dec
stc
inc
aad
inc
(bad)
scas
or
push
test
jb
dec
mov
sti
aas
sbb
retf
xor
dec
ds
cmp
adc
mov
jl
jae
(bad)
ss
cdq
cmp
sbb
lea
pushf
outs
dec
or
push
pop
dec
test
ins
and
int3
xlat
jp
xchg
mov
movs
push
xlat
aam
outs
fs
pop
inc
cmp
ficom
xchg
mov
cmp
jmp
cmps
cmp
jbe
add
sbb
xchg
mov
xchg
mov
sbb
call
jle
(bad)
push
add
xchg
(bad)
cmp
aas
cwde
mov
loopne
imul
outs
mov
scas
ss
mov
push
rcl
or
pushf
mov
jns
adc
inc
movs
pop
xchg
pop
fistp
fisubr
or
mov
xchg
or
jno
hlt
dec
sub
(bad)
mov
leave
sub
jge
ror
in
dec
in
push
repz
mov
add
cmp
icebp
repz
cmps
test
cmps
adc
jmp
out
inc
dec
fcmove
dec
jo
push
mov
or
mov
xchg
scas
ss
pusha
mov
repz
shr
or
xchg
jae
(bad)
jle
add
inc
pop
lds
xchg
loope
cmp
cmp
sub
sbb
cwde
and
inc
aad
push
ja
mov
ins
or
jg
inc
jbe
imul
aam
daa
mov
call
or
retf
adc
jmp
adc
inc
jp
out
fdivr
and
out
mov
test
adc
repz
imul
mov
ror
(bad)
fs
stc
bound
sbb
adc
ss
fcmovu
sub
loopne
ins
push
loopne
mov
cmp
inc
arpl
xor
retf
pop
(bad)
jns
sbb
cmp
dec
mov
std
sub
sub
xchg
jmp
and
mov
shl
mov
call
push
sbb
ror
sahf
dec
(bad)
clc
stos
enter
test
jae
cmp
sbb
ds
push
jmp
and
cmp
in
lods
into
add
addr16
jmp
mov
cmps
lods
inc
mov
mov
pop
sbb
fisub
mov
call
call
scas
sbb
adc
mov
cli
xchg
pop
movntps
sbb
jbe
lds
jp
ret
fsub
pop
(bad)
jo
loop
stos
xchg
fwait
js
or
pop
sbb
pop
xchg
add
pop
ins
lds
fwait
ins
int
sbb
cmp
sub
pop
push
cmp
cmps
mov
ja
ret
cmp
and
sub
test
jns
das
shr
adc
sub
add
inc
(bad)
bound
fst
(bad)
cld
inc
sahf
ror
and
ins
jbe
cmps
out
pusha
iret
sub
and
movs
data16
or
fisttp
ja
jmp
mov
xchg
sub
mov
scas
pop
mov
repz
test
sub
sub
int
ret
adc
scas
xlat
mov
and
(bad)
jecxz
mov
sbb
add
ss
xchg
push
ror
jle
jmp
push
sub
mov
es
fdivrp
inc
dec
dec
(bad)
cli
and
xchg
mov
xor
gs
call
push
xlat
inc
imul
push
retf
xor
hlt
leave
push
pop
xchg
in
dec
dec
ret
pop
cmc
mov
and
int
and
out
inc
gs
or
xor
stos
push
retf
popf
push
sub
cmc
outs
imul
hlt
cmp
popf
inc
jle
fld
std
mov
add
cmps
mov
sub
push
cli
call
sub
bnd
push
mov
jge
int3
dec
or
push
sub
fild
jne
pop
add
sub
in
cdq
js
xchg
mov
mov
and
push
inc
fst
lds
inc
(bad)
jns
dec
sti
mov
cmp
push
sbb
in
fstp
mov
cmc
inc
sub
add
and
cdq
es
(bad)
jl
fidiv
mov
inc
push
js
mov
lods
adc
js
rcl
mov
test
pop
ins
push
mov
push
dec
xchg
es
push
mov
cld
scas
jmp
in
fdiv
add
or
pop
or
popf
jg
add
call
pop
addr16
add
or
fisttp
bound
xchg
and
sub
pop
data16
mov
shl
aad
dec
jbe
es
std
push
inc
cmp
jl
sti
cmc
dec
xchg
pushf
jecxz
arpl
cmps
add
adc
inc
lds
cmp
adc
repz
xchg
js
xchg
dec
and
cs
cld
inc
(bad)
ss
iret
sub
cmovge
cs
mov
(bad)
pop
push
sbb
sti
sbb
sahf
sbb
mov
push
inc
idiv
pop
sti
xchg
call
dec
mov
or
xchg
fs
mov
inc
pop
ficomp
sub
fs
fiadd
call
xor
out
sbb
shl
sub
fld
jb
rcl
dec
pop
mov
cli
sahf
pop
sti
pop
xchg
push
mov
mov
aam
push
pop
dec
xchg
xchg
mul
gs
ss
cdq
xchg
call
push
push
dec
inc
mov
push
repnz
lods
ficom
cwde
xchg
jmp
xchg
jb
cmp
or
into
and
arpl
cli
test
not
mov
jno
int3
and
lods
rol
mov
pop
cdq
xchg
repz
in
mov
cmp
and
dec
inc
fs
cli
aas
pop
div
call
and
aas
lea
retf
push
mov
mov
pop
pop
rep
(bad)
ja
inc
inc
jecxz
and
sbb
cdq
mov
xchg
xor
repnz
dec
stos
pop
jnp
cs
dec
or
mov
mov
pop
sbb
dec
pop
jle
movs
out
adc
cld
mov
rcl
or
mov
mov
stos
in
lea
test
dec
les
mov
iret
adc
add
inc
imul
mov
lods
out
add
fsub
xor
fsub
xor
fistp
in
push
cmp
in
ja
adc
cmp
shl
mov
mov
hlt
pusha
inc
inc
pop
scas
es
dec
xchg
mov
out
bnd
jge
cwde
fild
and
cmp
mov
dec
mov
dec
sub
or
jno
push
imul
stos
out
add
fnstsw
lods
mov
jg
cdq
(bad)
cs
clts
xchg
movs
pop
rol
pop
leave
mov
imul
out
icebp
addr16
adc
jne
or
rcl
sub
xchg
scas
inc
lods
push
sub
call
aaa
push
mov
lock
mov
inc
and
(bad)
rol
int
inc
ja
nop
stos
inc
cmp
mov
adc
icebp
cmp
mov
mov
cmp
dec
and
mov
out
mov
outs
cmp
(bad)
lods
push
sbb
and
sbb
shl
pop
imul
fidiv
fsub
test
shl
and
xor
mov
add
jae
imul
lahf
psubsw
inc
int
sub
adc
(bad)
cs
dec
jns
inc
sbb
aam
mov
(bad)
test
sbb
jmp
loopne
mov
enter
fucomip
xchg
and
fild
lds
call
clc
test
add
faddp
jl
add
es
repz
xor
sbb
es
cmp
jmp
mov
push
cmp
clc
inc
sbb
loop
outs
sar
push
movs
daa
call
jmp
fs
or
arpl
and
sbb
xchg
cli
popa
mov
xor
xchg
in
es
cmp
push
inc
test
(bad)
aaa
pop
sub
data16
xor
shl
inc
out
das
leave
pop
jge
retf
push
mov
xor
xchg
mov
adc
inc
cdq
enter
and
retf
cmp
(bad)
push
data16
jne
push
dec
in
out
ins
mov
inc
daa
out
dec
icebp
dec
ror
in
ss
pop
jnp
fsub
iret
xchg
dec
pop
fst
and
dec
ficomp
mov
outs
xlat
call
xchg
push
mov
lock
jb
jb
daa
inc
dec
lock
repnz
pop
inc
mov
mov
dec
out
pop
(bad)
fild
xor
aaa
test
push
bound
cmc
xchg
xchg
add
test
adc
repz
(bad)
aaa
sub
add
cmp
adc
xchg
and
lods
pop
jp
(bad)
dec
jecxz
pusha
add
push
sahf
jge
rcl
dec
mov
sbb
inc
push
jb
and
inc
xchg
cdq
clc
push
into
mov
and
cmc
or
jmp
or
loopne
push
jp
add
xchg
and
xor
sub
mov
jecxz
xor
cmp
mov
mov
lock
cmp
push
inc
mov
jnp
aam
inc
add
inc
in
sbb
imul
dec
xchg
fmul
jle
adc
addr16
mov
cwde
push
pop
test
jge
mov
sub
popf
test
sbb
xchg
jecxz
xor
inc
scas
movs
sub
cwde
icebp
and
js
add
cmp
mov
clc
(bad)
jl
push
cmp
int
xlat
mov
into
mov
add
or
mov
cmovnp
repnz
ret
sbb
mov
adc
mov
sahf
stos
lods
sbb
loopne
mov
mov
or
adc
or
fisttp
icebp
repnz
mov
pop
sbb
inc
fbld
and
push
mov
std
int
cs
imul
loop
mov
push
mov
fwait
jmp
xor
es
mov
sub
ret
imul
cmp
test
or
jle
or
inc
sub
mov
mov
jg
jmp
in
inc
clc
push
xchg
ins
cmp
inc
xor
sub
int3
fimul
cwde
test
mov
jg
fimul
fsub
ret
hlt
(bad)
adc
(bad)
clc
jecxz
lods
cli
jmp
or
loope
arpl
xchg
mov
jne
mov
push
sbb
xchg
arpl
test
jge
and
add
int3
rol
fwait
xor
pop
sbb
test
mov
lea
xor
call
pop
inc
jecxz
mov
ss
cmp
mov
or
mov
jmp
retf
fsubr
pop
push
sbb
dec
stos
fs
xchg
pop
loope
lahf
pop
add
es
cmp
pop
(bad)
pop
rcr
inc
add
int
cld
cmp
push
sub
in
iret
dec
imul
sahf
xor
imul
lds
jl
(bad)
daa
sti
retf
dec
retf
or
cmps
push
aad
mov
lods
mov
mov
jecxz
push
mov
sbb
cmps
cmp
cmp
ja
imul
dec
jle
cmp
ins
add
xor
fwait
mov
retf
(bad)
shl
inc
mov
icebp
dec
jae
xchg
cs
cmp
cmp
in
imul
leave
dec
sar
movs
in
popf
add
pop
cwde
sbb
jge
in
imul
shl
sub
push
push
cmp
mov
cmp
ds
pop
cli
fisub
fwait
xchg
pushf
test
cmp
stos
pop
adc
fwait
xchg
push
mov
lea
in
dec
punpckhbw
cwde
std
inc
dec
cmp
mov
mov
push
(bad)
call
cmps
cmp
iret
repnz
jae
(bad)
fisttp
movs
pop
pop
jp
ss
lock
call
mov
add
aaa
jg
pop
pop
outs
ss
je
mov
call
pop
cdq
mov
add
push
sbb
push
mov
(bad)
hlt
lods
xchg
jmp
sbb
sbb
bound
add
inc
pop
inc
sub
sub
mov
mov
je
(bad)
adc
(bad)
cmc
scas
test
pop
cmp
cmp
jp
pop
loope
sub
push
lock
(bad)
pushf
jmp
jno
cli
das
test
jg
(bad)
dec
xchg
pusha
dec
cmp
retf
cmp
mov
std
sbb
pop
sub
add
or
cli
inc
into
mov
sbb
mov
(bad)
xchg
mov
xchg
aas
pushf
stos
jo
sub
stos
and
sub
imul
mov
push
imul
ins
mov
mov
ds
mov
idiv
cmp
dec
cmps
cwde
xchg
cmp
mov
pop
test
cmp
push
sbb
ins
fwait
xor
sub
mov
cmp
adc
push
adc
nop
inc
adc
push
push
inc
cmp
call
mov
cmp
sub
pop
mov
push
cmps
ins
ins
xchg
inc
xchg
sbb
fs
inc
retf
dec
repnz
fcomp
push
jne
inc
cmp
imul
mov
xchg
xchg
sub
fdiv
inc
mov
pop
mov
mov
cmp
in
cmp
jecxz
in
jl
or
add
push
inc
add
retf
mov
xor
pop
imul
loop
fcmovne
mov
lods
popa
aaa
sub
xor
mov
adc
(bad)
xor
retf
imul
out
sti
fist
xor
les
idiv
lock
std
lods
les
idiv
lea
sbb
adc
popf
fdivp
imul
jge
pop
xchg
pop
inc
xchg
pop
pop
jge
dec
or
fcom
sub
mov
mov
retf
jne
ins
retf
inc
cmps
aaa
jne
mov
xlat
cdq
cmp
mov
ja
mov
inc
(bad)
sub
xchg
add
fs
and
lods
leave
out
mov
test
hlt
or
ja
cmp
push
retf
add
popf
shl
xchg
inc
cli
sub
mov
(bad)
scas
ret
jmp
mov
fst
dec
pop
fchs
pop
out
cmp
add
sub
push
mov
or
mov
push
test
sar
dec
cs
add
test
add
xchg
inc
dec
dec
or
xor
or
dec
sbb
fbstp
fwait
cmp
xchg
sub
dec
popf
cmp
add
jp
add
leave
pop
cmps
dec
fstp
std
xchg
loopne
mov
cmp
ja
mov
cdq
mov
loop
pop
lock
dec
add
in
cmc
sbb
mov
in
sti
ret
add
mov
dec
int3
daa
cwde
sahf
sbb
push
push
inc
adc
mov
rol
adc
dec
mov
mov
cdq
not
sbb
and
mov
fucom
fisub
jl
sbb
(bad)
int
push
add
das
or
imul
loop
sbb
and
or
mov
and
or
js
daa
daa
xor
lods
cmp
cmp
jae
sahf
test
cli
scas
or
jp
pop
add
sar
mov
and
pop
ins
lock
pop
mov
arpl
push
add
imul
sbb
(bad)
arpl
and
xor
pop
add
fiadd
stos
cmp
add
and
cmp
mov
dec
inc
shl
sub
icebp
das
and
xchg
jae
add
das
fisub
or
lahf
mov
into
jo
lods
jae
rol
push
mov
mulps
or
mov
pop
jns
cdq
jmp
push
aam
push
xchg
rcr
add
xor
mov
mov
jns
std
push
or
imul
mov
cmp
and
call
cmp
push
call
push
jecxz
pusha
fidiv
jmp
mov
adc
jne
or
pushf
xchg
je
or
lods
imul
in
mov
test
mov
sub
xor
out
push
push
xor
push
and
in
repz
sbb
in
fstp
sbb
mov
dec
jns
stc
mov
jbe
add
jns
mov
dec
sti
push
jae
repnz
sbb
fs
js
ins
inc
and
loopne
mov
imul
jl
pop
push
jl
mov
repnz
jne
fistp
and
mov
jmp
mov
arpl
shl
lock
test
test
or
push
push
jle
test
push
inc
test
sar
arpl
mov
shl
ret
mov
add
pxor
xor
mov
xor
stos
mov
cmp
push
fadd
push
inc
fcom
leave
fistp
dec
jp
(bad)
out
add
jno
mov
mov
jl
bound
xor
push
xor
jb
mov
aaa
cwde
mov
pusha
sub
xor
pop
lahf
mov
mov
mov
jo
das
out
test
push
push
iret
jmp
mov
xchg
out
ins
mov
leave
out
push
fst
leave
je
loope
sub
add
int3
cmp
sti
mov
or
test
pushf
push
mov
pop
test
lods
xchg
bound
pop
clc
es
retf
outs
xor
jo
enter
inc
xor
sbb
lds
retf
es
ret
mov
retf
cmc
cmp
ret
xchg
mov
bound
adc
pop
ins
jnp
les
outs
pop
jbe
movs
sbb
out
mov
cs
adc
pop
push
push
sbb
xor
adc
cmps
ja
outs
sub
loope
mov
cdq
xor
lds
ds
sbb
mov
scas
mov
sahf
aas
lods
js
xchg
pop
push
fucomip
mov
nop
mov
(bad)
mov
mov
pop
cdq
int
sti
or
shl
sub
loop
je
fnstcw
push
adc
rcr
push
mov
adc
pop
push
loop
sub
push
movs
pop
inc
mov
or
dec
ret
adc
adc
xor
jae
outs
out
dec
cmp
hlt
es
mov
jnp
gs
sbb
jmp
data16
stc
pushf
rol
cmp
stos
mov
add
push
test
je
out
xchg
neg
cmp
sub
push
mov
scas
push
push
repnz
or
dec
movs
mov
lds
and
rol
dec
adc
xchg
cmp
gs
adc
ja
out
jae
stc
push
aas
ds
pop
sub
pop
add
xor
mov
dec
sub
jb
adc
hlt
dec
sub
movs
mov
fcomp
dec
mov
inc
xchg
in
mov
add
xlat
sub
mov
sti
inc
ret
cmp
pop
out
lods
xchg
cdq
daa
clc
sbb
loopne
fwait
push
fucom
cmp
and
(bad)
(bad)
mov
outs
mov
pop
sbb
adc
shl
adc
stos
mov
cmp
inc
dec
in
pop
push
xor
in
add
mov
ja
and
aam
jbe
in
mov
loopne
loop
mov
daa
ffree
jge
inc
stos
push
cmp
fwait
ds
gs
popf
hlt
pop
(bad)
cmp
mov
jno
js
mov
dec
sbb
mov
adc
pop
mov
push
sbb
xchg
xchg
sahf
mov
or
add
pop
cmp
push
mov
sbb
retf
sub
push
fidivr
jge
pusha
dec
sbb
xchg
cmp
aad
mov
mov
(bad)
pop
(bad)
out
adc
pop
inc
push
inc
inc
ficom
fwait
retf
cmp
icebp
xor
and
int
sbb
add
popf
mov
ins
xor
aaa
jle
xchg
xchg
imul
cmp
jl
dec
mov
mov
add
add
in
add
pop
add
inc
push
or
jno
stos
mov
mov
sbb
mov
add
push
jnp
dec
out
sub
pop
cmp
xchg
fs
es
cmp
aam
test
test
mov
mov
ret
add
jg
(bad)
out
inc
mov
repz
xchg
mov
jmp
or
sahf
(bad)
daa
sbb
sbb
xlat
cwde
or
sub
dec
inc
add
jmp
xchg
outs
xchg
cmps
movs
mov
(bad)
xor
fbstp
movs
jle
mov
mov
pop
imul
ret
jno
xor
mov
je
adc
dec
mov
sbb
(bad)
loopne
enter
jne
lahf
push
movs
add
(bad)
cwde
inc
add
mov
test
push
fidiv
hlt
(bad)
imul
push
pop
mov
cmp
(bad)
jle
add
adc
jbe
addr16
mov
sbb
ins
pop
cld
xchg
cmp
inc
pop
sub
push
outs
movs
cmps
pop
faddp
mov
cmp
aam
lahf
mov
inc
frstor
mov
je
in
fs
mov
sub
xor
es
pop
pop
(bad)
jg
and
(bad)
outs
push
retf
sbb
adc
and
and
ror
sbb
xor
sub
or
sahf
(bad)
jl
mov
nop
xchg
pop
fistp
into
mov
jge
ror
and
pop
xor
jg
pop
push
xchg
sub
les
inc
inc
daa
mov
fs
retf
(bad)
xchg
push
or
retf
mov
or
addr16
jle
lea
loope
jae
enter
loopne
pop
enter
jl
mov
je
aad
push
mov
sub
pop
leave
aaa
mov
inc
jmp
push
ror
jne
ja
or
xlat
sub
cmc
rol
stos
xor
ret
sbb
out
add
call
jbe
inc
mov
mov
pop
push
xchg
fwait
push
mov
pop
pop
adc
(bad)
and
jle
dec
out
push
inc
jl
mov
sub
push
loopne
neg
sub
pop
and
jl
jg
inc
jmp
sub
(bad)
stc
cli
adc
xchg
mov
call
ins
dec
xchg
out
ror
cld
iret
imul
sti
sbb
call
scas
or
or
mov
mov
sub
sbb
(bad)
pop
ret
scas
sti
inc
cmp
mov
outs
(bad)
pop
dec
jo
test
ret
pop
xchg
dec
pop
mov
pop
ds
(bad)
pop
xchg
rol
adc
das
pop
or
dec
push
icebp
dec
pop
cld
adc
sbb
test
out
adc
jae
jae
test
sbb
cld
push
inc
mov
sahf
xchg
pushf
and
cmps
out
ins
add
cmp
sbb
cmps
xor
adc
cwde
pop
test
mov
fadd
int
(bad)
mov
cmc
xchg
ficom
inc
xor
xchg
aad
xor
test
mov
sub
in
mov
sahf
dec
pop
pop
and
fwait
inc
cmp
xchg
jmp
popa
ins
xor
mov
mov
mov
mov
mov
adc
inc
jb
outs
mov
mov
les
lods
push
aas
(bad)
mov
int
das
xor
lods
inc
xchg
xchg
xor
push
lods
mov
adc
mov
and
push
push
dec
pop
lods
in
mov
sbb
sub
push
xor
or
cmp
jge
cmp
popf
fxch
test
fidivr
call
mov
jns
xor
rol
pop
jmp
sub
pop
jmp
push
addr16
cmp
xchg
or
add
and
add
(bad)
sub
sub
fwait
arpl
or
aam
adc
jmp
dec
xor
mov
xchg
sahf
es
or
repnz
sub
push
imul
jmp
xchg
mov
mov
stos
sub
mov
test
add
nop
movs
loopne
mov
fwait
push
cmp
mov
retf
sti
call
mov
sub
stc
and
mov
ja
xchg
add
fcmovnbe
or
push
jb
(bad)
sahf
movups
ror
into
rcl
bound
pop
ins
sub
mov
and
dec
mov
xchg
xchg
enter
movaps
add
adc
mov
shr
jnp
sbb
xchg
push
sti
and
push
call
mov
inc
mov
repz
adc
fild
cmp
outs
pop
imul
mov
add
(bad)
jp
cmc
xchg
mov
loop
xchg
cvtpi2ps
ror
das
test
mov
repnz
imul
xor
nop
arpl
pop
hlt
(bad)
fisubr
xchg
xchg
sahf
pop
int3
xor
mov
jbe
dec
mov
movs
dec
shl
test
xchg
xchg
inc
retf
cs
out
dec
sti
fdiv
jecxz
and
shl
xchg
inc
cmps
lods
in
clc
dec
and
sub
and
inc
nop
scas
fadd
xor
(bad)
lock
retf
add
mov
(bad)
cmc
retf
xchg
or
mov
icebp
mov
add
imul
es
fst
jne
fdivp
test
lea
or
loopne
inc
push
push
stos
or
test
or
push
jecxz
popa
dec
fcom
(bad)
sub
je
(bad)
and
xlat
shl
and
fmul
scas
sbb
sbb
scas
nop
adc
movs
or
std
mov
mov
test
pushf
jnp
push
outs
sub
mov
rcl
inc
push
jo
push
xlat
sbb
lods
mov
jl
dec
cmps
jl
mov
dec
mov
ins
popf
scas
mov
xor
cld
stos
fs
cmp
or
ins
inc
mov
adc
cmp
mov
mov
stos
cmc
js
jnp
add
in
pop
or
sbb
push
mov
das
mov
cmps
aaa
arpl
clc
ins
adc
xchg
enter
mov
out
inc
fdivr
daa
aaa
inc
out
test
mov
jo
ja
lds
sub
push
or
ds
aas
adc
dec
add
sbb
pushf
popf
jle
inc
jle
out
stos
xchg
cmp
sub
mov
lods
ja
es
out
in
retf
mov
jle
scas
adc
cmp
mov
pop
pop
rep
test
jne
sti
pop
nop
lahf
out
retw
cmp
cdq
jo
cmp
xchg
outs
jb
mov
mov
icebp
out
inc
push
cmp
stos
cmp
pop
jno
ror
aad
clc
or
mov
inc
iret
mov
enter
push
dec
pop
ins
sub
pop
jp
lea
scas
(bad)
movs
(bad)
jg
je
xchg
cmp
test
mov
pop
scas
jmp
add
cmp
cmp
and
sbb
mov
cmp
and
ror
xchg
fistp
pop
movs
xchg
outs
daa
(bad)
inc
test
rcr
loope
push
sub
out
ret
inc
push
sbb
fsubr
repz
aad
mov
sbb
enter
test
sahf
in
pop
push
xchg
outs
inc
iret
bnd
aam
xor
inc
lea
in
sahf
xchg
adc
lods
hlt
data16
pusha
or
shl
les
dec
push
pop
push
sub
pop
mov
mov
pop
push
xor
push
mul
cmps
jae
repnz
aad
lock
and
(bad)
(bad)
xor
in
fcom
lds
in
ja
mov
sbb
xchg
fldenv
and
(bad)
jbe
push
jp
stc
xchg
push
sahf
mov
inc
dec
pusha
sub
popf
imul
mov
sbb
fsubr
test
jg
add
sbb
outs
mov
lds
add
mov
imul
or
lahf
mov
cmps
stc
cmp
pop
dec
pop
sahf
out
jne
out
xor
leave
jg
sbb
ins
cmp
xchg
or
push
mov
and
call
mov
in
leave
inc
inc
pop
mov
adc
adc
add
pop
int
sahf
aas
das
ins
pop
jle
aad
loope
xchg
repnz
xchg
cmp
mov
cmp
inc
ucomiss
out
push
imul
mov
mov
sub
and
out
imul
outs
repz
pusha
jl
xchg
push
daa
rcl
cmps
xor
or
or
sbb
mov
jnp
adc
iret
je
pop
jle
pop
jmp
stos
dec
scas
ds
aam
jne
sahf
fist
pop
xor
xor
mov
sub
pop
or
shl
cli
lea
sbb
pop
rcl
mov
stos
test
test
jp
sahf
(bad)
xchg
test
sti
pop
jnp
mov
xor
es
pushf
push
and
inc
sub
sub
mov
(bad)
std
imul
pusha
(bad)
fld
jg
sbb
(bad)
mov
icebp
adc
scas
add
jo
pop
pusha
das
xor
dec
frndint
mov
mov
cmps
cmp
mov
sbb
dec
nop
stc
stc
lahf
cmps
mov
arpl
loope
pushf
sub
shl
out
mov
sub
aaa
or
inc
inc
lock
xchg
jmp
cwde
jmp
cdq
daa
adc
imul
out
push
push
pop
fs
adc
push
pop
loope
xchg
cld
jmp
push
cmp
fdivr
jmp
mov
mov
push
sbb
pop
pop
or
in
test
jbe
sar
fnstenv
mov
call
mov
jle
or
or
jmp
lock
sbb
and
adc
pushf
outs
push
push
gs
xor
push
je
(bad)
push
jo
clc
(bad)
sti
rcr
sbb
shl
jg
mov
cmc
movs
je
es
and
dec
or
fcomp
lods
pop
jmp
fst
sbb
add
stc
daa
push
repz
shl
ficomp
fisubr
into
pop
ret
call
xchg
pop
push
enter
fimul
or
inc
rcr
push
sub
xchg
mov
cwde
mov
fdiv
test
inc
push
pop
jae
jp
scas
cmc
adc
pop
cli
sbb
(bad)
xchg
mov
push
jmp
adc
fwait
ret
push
add
and
mov
fisub
sub
mov
jns
imul
scas
sbb
cmp
jge
es
fwait
sbb
fistp
sbb
pop
push
div
push
and
out
out
and
adc
sub
push
adc
jnp
add
xor
ficom
and
(bad)
dec
out
or
sbb
or
call
fld
clc
push
jo
sub
out
inc
movs
dec
push
popa
mov
mov
and
movs
pop
pop
ins
push
push
inc
xor
aad
push
xor
push
lock
sub
add
mov
popf
retf
mov
out
ds
adc
mov
jbe
xor
dec
dec
cmp
xchg
xchg
jne
cmps
mov
sbb
(bad)
jg
and
mov
loope
cmp
mov
cmp
fcom
pop
pop
icebp
(bad)
lods
cmc
retf
push
retf
jp
aam
xchg
lea
test
cmc
and
jmp
mov
sbb
add
mov
repnz
jg
pop
ret
push
mov
add
sub
retf
movs
pop
movs
mov
retf
rcr
inc
(bad)
cmps
movs
mov
js
inc
adc
jp
mov
pop
mov
dec
xor
ss
loope
out
mov
fs
mul
repnz
xchg
rcl
cmp
sbb
adc
cmp
lock
push
mov
jge
or
and
scas
repz
ds
call
mov
and
pop
adc
sub
(bad)
in
mov
push
jo
and
into
mov
jmp
and
dec
jmp
sahf
sbb
push
fist
or
jmp
(bad)
loop
or
push
push
out
mov
pop
push
fstp
pushf
mov
and
cdq
(bad)
movs
lahf
cmp
mov
imul
xor
fsubr
ins
cmp
int3
push
sbb
sbb
cdq
jecxz
and
xor
adc
or
fwait
jge
out
ins
out
add
xchg
xor
dec
pop
mov
outs
js
leave
call
icebp
mov
sub
lods
not
test
pushf
jecxz
gs
inc
adc
add
pop
push
push
jge
loopne
mov
cmps
das
or
push
out
pop
js
(bad)
pop
mov
ret
or
jle
scas
pop
jg
mov
mov
je
or
mov
(bad)
pop
stos
mov
mov
push
ss
(bad)
adc
(bad)
je
adc
mov
pop
xor
popa
add
pop
inc
adc
dec
(bad)
adc
in
and
jp
sub
push
push
push
and
ret
ss
test
fcmovnbe
test
test
aam
(bad)
loopne
sti
inc
clc
repnz
push
dec
jnp
cmc
leave
sbb
xchg
xchg
xchg
repnz
adc
mov
arpl
data16
inc
out
lods
out
and
jb
frstor
enter
cmp
fisttp
xor
fnsave
sub
cmp
inc
xchg
cmp
fucomi
cmp
pushf
jnp
mov
and
(bad)
jo
hlt
mov
jmp
xor
retf
mov
aas
rcl
imul
sub
out
xor
or
in
fwait
push
or
xor
into
iret
sbb
call
add
dec
dec
or
ins
xor
prefetchwt1
jmp
in
leave
dec
imul
adc
stos
dec
xchg
xchg
fadd
div
add
xchg
outs
xchg
sub
sub
stos
rcl
shl
cmp
mov
inc
pop
pop
nop
aaa
stos
loope
je
icebp
loopne
push
ja
rol
cmp
jle
xchg
popf
add
pop
pop
dec
fs
adc
arpl
into
inc
inc
mov
sbb
pop
jecxz
test
fnstsw
push
push
jne
jl
mov
cmp
inc
call
dec
movs
xchg
cmps
(bad)
pop
sub
push
pop
jno
xor
pop
inc
leave
call
add
clc
lock
and
jl
pop
dec
inc
ins
enter
mov
lea
pushf
pop
sahf
jp
mov
push
xor
jo
pop
add
dec
jne
pop
fwait
pusha
sbb
dec
cmps
shl
test
and
cwde
mov
pop
mov
stos
repz
(bad)
shl
xchg
sub
stos
mov
dec
dec
loopne
jp
jb
xchg
(bad)
inc
(bad)
mov
loopne
cmc
popa
or
shl
mov
sbb
gs
retf
ds
pushf
out
in
or
loope
mov
jmp
adc
sbb
add
sbb
je
inc
(bad)
sbb
icebp
retf
fucomip
mov
es
add
ds
jae
aad
mov
enter
cmp
jae
xor
scas
int
push
ret
add
jg
sbb
outs
out
adc
fcomp
aad
sub
push
mov
fcom
leave
lds
lds
pop
scas
repz
cmp
loopne
cmc
fwait
cli
add
mov
call
jbe
pop
stc
inc
std
add
retf
js
push
or
inc
stos
fstp
shl
daa
cs
inc
ss
or
sub
push
push
inc
cmp
cld
or
icebp
ret
sbb
xor
push
mov
lods
out
dec
sub
ror
pop
nop
out
rcl
call
clc
test
sbb
xchg
push
add
js
dec
xchg
aad
int
xor
rcr
inc
lods
cmps
mul
cli
push
xchg
lock
fdiv
fistp
sub
nop
xor
pop
and
mov
cmp
sti
adc
cmc
xchg
mov
cmp
cs
rcr
jae
lahf
daa
into
int3
int
aas
stc
cmp
cmps
fwait
loope
xchg
loop
dec
jnp
jne
xchg
dec
add
mov
jo
stos
aas
ds
repnz
fmul
loop
aam
arpl
pop
pop
push
xchg
(bad)
hlt
mov
shl
mov
lahf
push
jmp
jae
mov
fsubr
mov
in
pop
xor
mov
push
inc
repnz
shl
pop
pavgw
daa
jmp
dec
cmps
jmp
adc
mov
in
ins
mov
sar
adc
arpl
or
rol
fild
sub
in
les
fcmovbe
pop
push
in
aas
push
les
ficomp
imul
jecxz
cmp
inc
out
mov
repnz
sbb
(bad)
jmp
adc
push
aaa
enter
xchg
inc
mov
fnstenv
pop
(bad)
movs
rol
adc
stos
jnp
adc
sti
jmp
add
mov
or
sub
std
inc
add
sub
pop
adc
push
and
lods
ror
cmp
cwde
cmp
aas
inc
pop
mov
js
xor
leave
xchg
hlt
sbb
stos
sub
cs
gs
pop
jnp
push
fild
sbb
aas
fs
adc
xchg
and
jl
dec
fnstcw
add
and
sbb
xor
sar
cmps
inc
cmp
iret
jmp
stos
mov
xchg
mov
dec
jno
inc
outs
inc
adc
adc
in
fistp
enter
jmp
enter
or
sbb
in
leave
xchg
xor
fs
jp
pop
xor
jo
xor
push
xchg
sbb
lods
hlt
inc
sub
clc
pop
es
rcl
push
test
aas
dec
repnz
jnp
push
imul
aas
push
mov
jbe
or
mov
(bad)
inc
cdq
jge
movs
cmp
add
xchg
in
jb
push
lahf
je
sub
rcl
push
out
jno
adc
cwde
call
mov
dec
stos
loop
and
sbb
(bad)
into
ret
mov
outs
pop
jg
and
cmc
sub
or
ror
loop
add
xchg
inc
add
not
je
ss
sbb
jle
sahf
pop
mov
pop
dec
aad
(bad)
push
pop
lods
test
sahf
pop
mov
cmp
adc
js
in
les
nop
mov
and
push
inc
sub
out
push
ficom
inc
mov
sbb
sub
retf
(bad)
lahf
ss
add
fwait
add
aam
inc
mov
cmp
js
and
sub
outs
jl
dec
ins
cmp
ret
in
mov
aad
inc
sub
mov
add
aaa
pop
jle
push
sub
mov
and
jbe
mov
mov
pop
ss
imul
cvtps2pi
add
sbb
lods
iret
pop
loop
shr
fild
push
and
loop
xor
push
sub
pop
and
jb
pop
push
lods
sub
sub
daa
lahf
mov
xlat
call
adc
sbb
cs
ficom
inc
sub
dec
std
test
mov
pop
pop
imul
push
ja
cmps
or
ja
cld
sub
ins
test
repz
jl
mov
fsin
js
(bad)
stos
mov
pop
aad
sbb
pop
and
cs
mov
or
inc
mov
add
ret
mov
push
cmp
sbb
pop
jmp
ret
xlat
stos
mov
add
cmps
xor
data16
pop
loopne
je
sub
vpunpcklbw
addr16
mov
adc
iret
or
pop
in
mov
mov
gs
sti
push
mov
stos
pop
addr16
out
not
or
mov
mov
cwde
xor
enter
and
push
shl
cdq
cmp
and
(bad)
dec
add
mov
cmp
test
dec
xor
scas
inc
mov
push
push
(bad)
jecxz
mov
je
or
sub
fistp
inc
dec
add
test
jg
or
shl
sbb
mov
sbb
(bad)
int
and
in
(bad)
repnz
xor
push
jg
out
inc
mov
bound
test
ret
mov
sar
add
sbb
mov
or
scas
and
test
outs
(bad)
pusha
mov
pusha
xor
call
inc
retf
mov
sub
loope
and
js
(bad)
idiv
loopne
sbb
pop
jmp
mov
sub
or
pop
jno
int
(bad)
sbb
adc
push
jmp
test
aas
daa
(bad)
dec
add
xchg
adc
xchg
jno
test
in
sbb
mov
lahf
stc
test
xor
pop
iret
ins
or
cld
adc
mov
push
push
fidivr
lahf
adc
fdiv
jl
add
lods
push
jae
or
shr
das
adc
adc
repnz
dec
and
leave
retf
jl
jle
xor
sbb
aaa
jo
(bad)
sub
imul
add
xchg
scas
cs
sbb
inc
jae
retf
sti
(bad)
ret
mov
outs
cdq
cmp
mov
push
sub
mov
inc
cwde
sbb
int3
xchg
mov
xchg
(bad)
gs
imul
test
ss
mov
mov
mov
mov
sub
add
xchg
xchg
ja
loope
and
or
enter
std
mov
sahf
xchg
in
fdivr
out
in
enter
adc
inc
cmp
add
cmp
sbb
adc
popa
clc
xor
ret
out
sbb
out
xor
push
jge
mov
xchg
pop
fadd
rcl
rcl
aam
adc
int3
mov
inc
leave
(bad)
je
test
and
shr
push
sub
out
int
ret
fld
sti
pop
sahf
dec
add
cwde
jp
add
pop
jnp
or
aas
add
lods
daa
add
xchg
dec
jo
cmc
cld
jge
lds
push
push
imul
imul
and
inc
pop
test
inc
xchg
mov
sar
push
mov
out
fbld
mov
(bad)
push
das
fmul
shl
mov
shl
pop
cmp
(bad)
push
inc
bound
sub
xor
pop
repnz
mov
add
in
rcr
test
stc
rcr
push
sub
repz
jg
repnz
imul
test
or
mov
sub
xchg
repnz
ins
pop
(bad)
push
retf
enter
mov
cmp
repz
fwait
mov
int3
jp
call
pop
add
pop
jnp
mov
loope
or
xor
xlat
inc
push
mov
push
clc
mov
inc
push
jne
mov
pusha
dec
adc
imul
jp
xchg
fcomp
jbe
stos
sbb
das
sbb
add
sahf
test
push
sbb
push
movaps
cwd
push
or
(bad)
push
xor
add
imul
or
icebp
sub
ins
arpl
jge
sub
jmp
addr16
pop
and
and
aad
int
cld
adc
mov
ror
jge
fcmovu
repnz
add
cmps
ja
jnp
inc
sahf
mov
imul
cmp
mov
adc
fldenv
dec
fs
inc
adc
mov
ds
inc
inc
repz
mov
xchg
cmp
push
mov
(bad)
lds
or
or
in
(bad)
xchg
xchg
dec
mov
sub
test
dec
sub
out
fadd
lods
fdivr
sub
addr16
ret
test
sbb
xor
mov
adc
(bad)
jmp
jg
jg
loopne
or
push
inc
gs
enter
mov
cmp
fisubr
lock
sbb
jne
jmp
mov
loop
stc
sub
fadd
test
aaa
repz
and
loopne
int
clc
imul
sbb
enter
scas
pusha
sbb
popa
cmp
enter
outs
mov
adc
js
inc
jbe
sub
ror
leave
xor
mov
ins
repz
pop
push
jne
sbb
sub
or
ror
cmps
inc
mov
jns
and
retf
out
adc
fcomp
out
addr16
or
neg
js
mov
neg
cmp
dec
in
xchg
pop
fdiv
idiv
xchg
es
and
adc
or
push
xchg
inc
clc
pop
repnz
das
js
pop
push
in
adc
cmp
outs
cmp
or
xchg
add
xor
(bad)
std
into
or
aas
pop
pop
xchg
lahf
dec
or
ds
add
xchg
mov
or
fldcw
sub
add
push
movs
push
add
mov
imul
stc
mov
add
push
fcmovb
inc
stos
dec
mov
xlat
and
mov
pop
imul
xor
xor
ror
or
jnp
movs
inc
scas
mov
jle
mov
ret
inc
ror
inc
add
push
or
into
or
mov
mov
and
push
je
inc
idiv
push
sbb
cld
enter
loop
hlt
shl
(bad)
lock
mov
jne
push
mov
and
mov
ret
xlat
test
cmp
or
add
cdq
mov
mov
and
or
pop
popa
add
(bad)
xchg
fwait
repnz
cld
out
add
ja
xchg
shl
movs
cs
loope
mov
rcr
pop
jmp
sub
push
add
add
push
sahf
fwait
cmp
sub
push
mov
sub
jl
(bad)
dec
retf
or
(bad)
fldcw
sub
mov
int3
inc
ja
mov
mov
cmp
(bad)
pushf
pushf
stc
mov
out
sar
dec
xor
mov
and
sub
std
pop
pop
pop
shl
jns
sbb
das
jge
mov
fsub
mov
mov
inc
sar
xor
add
fs
pushf
in
mov
gs
sbb
addr16
push
mov
lds
lahf
inc
out
or
loop
jmp
and
int3
xchg
xor
enter
dec
add
sahf
enter
js
aaa
aad
in
outs
ret
mov
cmp
pop
movs
sbb
xchg
jl
pop
repnz
int3
push
fdiv
sub
push
push
pushf
adc
jp
call
movs
int
dec
sbb
in
mov
pop
icebp
mov
pop
adc
push
inc
ja
mov
sbb
sbb
es
inc
push
sti
jmp
sbb
push
std
mov
sub
jmp
mov
jg
mov
in
sar
pop
sub
adc
jnp
adc
repnz
je
sbb
pop
mov
sbb
add
inc
dec
and
mov
fldenv
xchg
ror
outs
cmp
sub
xor
mov
xlat
call
mov
lds
lahf
rol
loope
or
ficomp
jecxz
leave
cmp
mov
inc
xor
(bad)
frstor
push
cmc
loopne
mov
pop
jmp
adc
add
repz
fiadd
loopne
mov
loope
pop
inc
xchg
jge
(bad)
pushf
inc
mov
outs
stos
bound
out
jmp
retf
scas
mov
add
sub
push
aas
fyl2x
fst
mov
jno
sbb
dec
jne
or
or
(bad)
cmc
lods
pop
jp
pop
dec
xor
lock
jp
xor
inc
cmc
aas
pop
push
sahf
mov
add
aad
xchg
xchg
lods
pop
add
sbb
or
adc
push
(bad)
arpl
stos
add
and
test
cld
movs
icebp
(bad)
mov
imul
mov
loopne
cmp
das
mov
cmp
int3
ror
jge
jmp
test
push
push
repnz
das
mov
ss
xor
adc
and
mov
sub
pop
mov
mov
adc
adc
mov
dec
imul
mov
idiv
adc
jge
and
sub
sbb
cmps
push
sub
rsm
fimul
fnsave
lahf
leave
test
mov
jnp
retf
inc
xor
test
fcom
mov
mov
(bad)
pop
lods
mov
push
adc
pop
xor
in
pop
add
sahf
mov
out
out
shr
inc
fisttp
rcr
aam
pop
aas
adc
call
xor
add
nop
addr16
push
cmp
jp
xor
jno
or
pop
ds
cmc
iret
test
imul
or
and
mov
dec
into
in
xor
push
scas
sahf
pop
add
cmp
add
ror
sub
out
or
neg
pop
push
cmp
adc
repnz
lds
sub
ins
dec
add
mov
ins
out
call
xchg
out
dec
dec
test
ja
dec
adc
mov
loopne
ret
pop
arpl
(bad)
addr16
mov
push
mov
aas
out
je
movs
neg
sub
jo
adc
cmc
mov
ret
out
pop
sbb
jl
adc
adc
push
retf
push
sub
in
stc
mov
movs
fs
gs
in
outs
sub
add
pop
inc
push
retf
in
imul
icebp
int
pop
sbb
movs
andps
mul
(bad)
pop
cli
adc
xor
mov
retf
in
out
into
sub
shr
fs
sub
jbe
push
fcom
rcl
add
sar
lds
inc
outs
cmps
mov
retf
or
daa
push
push
dec
fld
pop
dec
fwait
push
imul
out
push
xchg
sbb
jmp
sbb
sub
jne
xor
movs
xor
push
sahf
pop
mov
adc
mov
sub
xor
ins
not
jmp
dec
pop
sbb
xchg
repz
repnz
fwait
addr16
xchg
jno
pop
push
push
mov
int3
ja
mov
gs
lock
add
fld
fs
loop
cmp
dec
cmp
jb
dec
push
movs
inc
mov
cli
xchg
mov
and
lahf
mov
mov
das
ins
out
adc
loope
xchg
mov
xor
sub
repnz
jge
fs
out
jo
rcl
cmc
cs
xlat
push
test
out
push
or
xchg
pusha
dec
leave
mov
lahf
cmp
sbb
repz
cld
popf
xchg
sbb
xor
pop
in
inc
arpl
fwait
imul
loope
in
gs
mov
jae
(bad)
sbb
jns
mul
(bad)
loope
and
icebp
leave
daa
mov
add
xchg
mov
dec
adc
cmp
(bad)
loop
ja
cld
dec
dec
test
jle
push
xor
push
outs
cmp
add
pop
inc
inc
(bad)
push
(bad)
mov
into
cmp
daa
retf
dec
mov
mov
adc
sub
add
aam
inc
out
sub
add
fidivr
nop
inc
cs
inc
cmp
mov
or
mov
pop
push
adc
sbb
and
inc
or
into
or
pop
cdq
lea
mov
lock
dec
push
(bad)
lods
rol
mov
pop
or
js
loope
in
adc
mov
jne
stos
xchg
cmp
mov
mov
clc
fadd
push
repz
(bad)
xor
je
or
out
jle
mov
mov
ret
pop
cld
inc
adc
cli
mov
imul
sub
inc
push
inc
cmp
sub
jbe
test
jp
sbb
and
pop
xor
xchg
rcr
and
cdq
push
mov
cmp
cdq
mov
dec
mov
xor
test
mov
xlat
mov
ret
retf
mov
mov
add
mov
sahf
out
out
mov
(bad)
xchg
aam
xor
and
adc
and
mov
jmp
arpl
enter
jbe
cmc
mov
adc
test
clc
jecxz
daa
and
ins
es
ss
cmp
fsubrp
dec
mov
arpl
mov
js
ret
fcomp
xor
in
or
inc
jg
mov
int3
(bad)
(bad)
mov
sahf
retf
or
adc
push
test
xchg
lahf
fisttp
or
arpl
pop
xor
test
out
out
frstor
loop
dec
add
mov
ds
cdq
sub
sbb
jbe
cmp
add
and
fsub
int
je
aad
dec
hlt
ds
bound
xor
not
test
add
jns
int
push
adc
push
inc
push
ret
movs
call
fwait
imul
sbb
fisttp
adc
push
sub
xor
jno
shl
mov
sub
scas
mul
push
gs
push
sub
adc
xor
push
xchg
jg
add
dec
in
xor
scas
lods
cmps
hlt
push
mov
adc
cmp
frstor
push
aad
daa
or
and
push
xchg
lahf
lods
xchg
or
adc
stos
push
pop
push
mov
ret
shl
in
mov
fsub
sub
hlt
test
call
inc
leave
retf
arpl
mov
or
push
movs
bound
fldenv
jl
push
aad
sub
test
pop
xlat
push
mov
mov
loope
dec
mov
inc
push
sbb
aam
int3
rcr
dec
mov
dec
push
xor
adc
idiv
dec
xor
sub
pop
adc
cmp
or
xchg
je
call
retf
inc
call
aaa
shl
push
je
(bad)
adc
iret
in
adc
icebp
jo
adc
mov
inc
pop
dec
fiadd
pop
sbb
data16
mov
scas
push
push
shl
inc
add
fcmovu
enter
add
pop
sbb
mov
stc
push
ins
(bad)
lods
mov
or
repz
fbstp
retf
fwait
repnz
mov
scas
mov
cmp
inc
inc
mov
xchg
sub
sti
mov
sub
pop
mov
test
cmp
js
nop
retf
inc
mov
jle
jae
dec
mov
(bad)
push
dec
pop
(bad)
aas
pusha
mov
arpl
int3
out
add
mov
lea
push
ret
cld
inc
sbb
mov
jle
(bad)
mov
xor
mov
(bad)
push
stos
inc
and
adc
sar
in
dec
std
(bad)
ss
mov
sub
push
mov
jecxz
cmps
inc
enter
das
sub
daa
cmps
mov
inc
(bad)
stos
inc
ins
lahf
and
out
cmc
cmp
jne
repnz
jmp
dec
jns
or
mov
(bad)
xor
xor
cmps
loopne
addr16
inc
push
sub
or
cmp
jg
push
sbb
and
push
rol
sbb
outs
lock
pop
in
push
test
or
push
adc
popf
mov
jne
lds
push
mov
call
(bad)
(bad)
retf
mov
icebp
in
mov
movs
ds
mov
ja
stc
jb
adc
mov
int
int3
into
inc
pop
mov
xlat
retf
mov
(bad)
mov
or
std
shl
imul
cli
sti
out
cmp
cs
(bad)
mov
pop
xchg
inc
pop
fdiv
push
xor
pop
test
add
das
inc
and
gs
and
and
add
sub
sti
or
(bad)
rcr
std
(bad)
jnp
test
mov
ss
out
dec
mov
test
and
adc
jp
stos
outs
cmps
popa
mov
icebp
shr
shl
lods
std
fimul
dec
push
std
cmp
mov
mov
nop
call
sbb
mov
mov
and
lahf
sbb
adc
out
cmps
sbb
imul
push
mov
xchg
sbb
jnp
jmp
sbb
adc
push
dec
mov
sub
mov
(bad)
jmp
mov
mov
xor
aas
std
leave
loope
int
pop
sar
mov
dec
push
xchg
dec
xor
stos
pop
sub
outs
adc
mov
or
int3
(bad)
xor
jns
fcom
adc
leave
out
add
mov
xchg
div
es
xchg
add
mov
cmp
xlat
call
sub
jne
dec
addr16
lea
sub
call
add
inc
je
pop
ss
adc
outs
add
cmp
add
inc
inc
dec
pop
mov
popf
(bad)
dec
jno
push
and
and
cmp
icebp
js
inc
pop
adc
mov
push
scas
mov
pop
aam
fmul
and
dec
out
out
mov
pop
ins
jne
(bad)
ffree
sbb
push
popf
inc
cmp
stos
sub
sub
mov
push
xchg
and
mov
push
xchg
adc
out
jge
mov
pop
(bad)
xchg
shr
out
pop
mov
add
mov
cmc
push
jecxz
int
lods
xor
repnz
cmc
popf
or
xchg
cmps
scas
imul
pushf
dec
bound
jge
imul
mov
dec
adc
xor
and
in
jl
jbe
adc
jge
fcom
dec
and
hlt
addr16
mov
mov
movs
push
cmp
imul
rcl
(bad)
xchg
xchg
pushf
iret
adc
cmps
js
xchg
dec
sar
in
pop
pslld
pop
outs
sbb
enter
fild
jno
out
fs
mov
pop
mov
mov
loope
lea
inc
xchg
pop
addr16
daa
fimul
in
and
addr16
pop
inc
fisubr
cwde
movs
mov
test
mov
jno
fnstsw
pop
outs
dec
arpl
push
and
mov
std
mov
mov
loopne
jno
mov
adc
push
movs
loop
in
adc
sbb
pop
dec
dec
pop
scas
mov
aas
adc
xchg
or
jmp
xor
xchg
hlt
xor
lock
push
mov
bound
dec
fwait
or
leave
retf
cmps
call
cmp
dec
shr
in
mov
xchg
or
inc
pop
repnz
mov
cmps
add
aas
sti
out
std
outs
mov
div
shr
and
cmps
adc
enter
push
add
add
jp
repnz
and
jmp
push
scas
test
imul
push
repnz
inc
push
scas
xor
shl
ror
mov
gs
push
jle
ins
enter
aas
add
loopne
call
lods
div
ds
ins
loope
jle
aas
sub
adc
test
ins
sub
out
mov
outs
sub
aas
mov
xor
ret
jecxz
jg
sub
in
cli
sar
push
lahf
jmp
cdq
cmp
or
nop
xor
inc
mov
leave
or
mov
fucomp
pop
dec
or
scas
pop
shl
push
xchg
xor
pushf
(bad)
pusha
jecxz
mov
xchg
cmps
mov
enter
icebp
cmps
fwait
push
mov
jnp
push
test
xor
and
and
adc
pop
(bad)
pop
and
sub
adc
ficomp
les
bound
cs
int
xchg
dec
dec
dec
cmp
ds
cmp
(bad)
shl
push
jbe
lds
pop
scas
ja
movs
dec
mov
out
ror
sbb
dec
xchg
jmp
lods
sub
in
inc
pop
mul
cmp
sub
mov
sahf
repnz
(bad)
loope
sub
jb
stc
mov
cs
sub
idiv
rcl
fsub
int
aad
test
pushf
cs
sti
iret
stos
test
xchg
pop
jl
sar
mov
dec
xchg
(bad)
nop
push
jecxz
adc
sbb
enter
fild
mov
jmp
scas
pop
mov
mov
enter
dec
test
mov
clc
jns
cmp
(bad)
js
cld
or
int
rol
inc
test
fucomi
movs
inc
retf
rcr
retf
and
mov
mov
or
mov
add
clc
xor
(bad)
js
mov
mov
pop
pop
dec
out
in
bound
or
pop
test
mov
xor
xor
or
jae
pop
aam
dec
xor
or
jns
xchg
xchg
scas
mov
add
mov
dec
jle
push
cmp
push
arpl
jmp
sub
or
sti
xchg
lods
das
sbb
int
pop
fist
jne
les
or
in
sub
fmul
cld
daa
rol
addr16
outs
cmp
jp
mov
adc
cwde
inc
movs
or
mov
adc
dec
fistp
scas
cs
mov
fmul
jl
mov
fcomi
mov
inc
pop
call
mov
push
addr16
mov
and
stc
xchg
inc
jbe
in
mov
out
sbb
std
nop
push
sub
inc
adc
xchg
(bad)
jl
enter
and
jecxz
sbb
sub
and
and
push
and
(bad)
push
sti
jns
(bad)
ja
xor
loope
pop
sbb
in
out
mov
ja
xor
loopne
xchg
jmp
enter
jb
sub
bound
xor
push
dec
lea
hlt
jo
mov
mov
enter
pop
xchg
and
adc
out
jno
icebp
dec
push
div
xor
(bad)
mov
cmp
add
stos
daa
into
cmp
cmp
dec
mov
mov
in
retf
fisubr
loope
or
fisub
mov
sub
cld
aas
pop
xchg
stos
mov
sub
cmps
xor
mov
in
push
sbb
add
pop
xor
fadd
stc
hlt
out
add
cwde
(bad)
movs
xor
dec
outs
fs
mov
pop
add
nop
fdiv
or
(bad)
imul
das
mov
stc
(bad)
mov
in
push
lahf
or
scas
stos
not
and
hlt
push
mov
push
pop
rcl
loope
jnp
sbb
movs
lods
(bad)
gs
gs
ret
lods
cmp
das
push
xlat
fisub
les
enter
jecxz
cmp
jbe
(bad)
pop
mov
pushf
mov
mov
loopne
rcl
das
dec
and
lock
or
mov
sbb
and
test
in
jbe
movs
jno
adc
sbb
shr
push
push
sub
fwait
es
mov
sbb
sti
jo
movs
fnstsw
(bad)
scas
iret
aaa
mov
fbstp
aad
scas
aad
jo
inc
mov
pop
mov
mov
and
mov
sub
jne
add
sub
repnz
je
nop
push
fs
sub
add
stos
test
jecxz
test
stc
push
mov
fild
cmp
shl
push
mov
(bad)
div
lods
outs
fcomip
popf
outs
in
mov
(bad)
fs
in
fsub
nop
out
and
arpl
xor
push
cmps
jo
xlat
je
retf
xor
or
adc
fdivr
imul
mov
mov
adc
xchg
popa
jo
add
push
sahf
cdq
xchg
sar
es
test
add
push
sub
pop
mov
jae
jb
dec
popf
pop
out
les
xchg
pop
fild
push
cmp
xchg
(bad)
xor
jne
sub
test
scas
std
dec
nop
jbe
sub
sar
dec
xor
scas
mov
dec
mov
daa
jmp
ret
movs
mov
dec
adc
xchg
push
adc
mov
xor
inc
dec
dec
push
leave
stos
push
dec
stos
jns
pop
or
pop
int3
or
aaa
ficomp
pop
sbb
retf
pop
call
pop
call
loope
xchg
mov
movs
test
lock
cli
test
popa
mov
cli
pop
outs
sub
std
fcom
mov
repz
adc
dec
(bad)
sub
lahf
jp
mov
int3
repz
lds
retf
inc
pop
shl
repnz
inc
js
jns
xchg
mov
es
into
xchg
mov
(bad)
test
scas
fistp
xor
dec
push
adc
mov
cmp
adc
xor
mov
xchg
jg
adc
push
push
jp
cmp
cs
jae
xchg
retf
pop
push
dec
(bad)
outs
js
push
repnz
loopne
sub
leave
xchg
jg
xchg
les
xchg
adc
dec
es
push
xchg
and
xchg
pop
sbb
ret
shr
or
loopne
and
fdivr
ss
inc
jne
mov
add
test
stos
sub
xchg
dec
adc
fldcw
movs
push
dec
into
jmp
push
pop
jo
add
fbstp
push
repz
sbb
outs
push
fisub
adc
mov
jnp
xor
jg
push
out
jmp
adc
and
jle
dec
mov
or
mov
(bad)
dec
push
sar
xchg
setae
in
xchg
(bad)
push
inc
add
popa
push
into
push
lahf
mov
push
cmp
jb
sar
push
outs
leave
scas
js
sub
shl
das
mov
xchg
ja
imul
adc
mov
mov
xchg
mov
push
lds
fisttp
xlat
push
int3
sub
add
dec
es
and
pop
mov
jne
retf
pop
xor
int
xchg
cwde
and
enter
enter
fs
sbb
or
push
lods
outs
scas
mov
dec
mov
jg
mov
push
jo
jl
ret
jb
inc
daa
xchg
mov
xchg
sub
cld
cmp
js
sub
add
xchg
imul
retf
ins
pop
sub
idiv
xchg
sbb
mov
and
(bad)
icebp
lods
jbe
fwait
nop
(bad)
das
push
mov
push
sub
or
xchg
jb
jb
or
and
loope
sub
adc
cli
rcr
mov
repnz
sub
dec
push
sub
das
push
ret
mov
jbe
xchg
aam
mov
pop
xchg
sub
dec
adc
add
pop
ins
xor
fwait
aaa
fsub
loope
pop
in
inc
jnp
push
movs
mov
push
sbb
iret
out
dec
mov
aam
xor
test
scas
jl
(bad)
mov
call
pop
cmp
lea
dec
aad
fld
mov
xchg
daa
bound
xor
xor
push
loop
mov
or
pop
sbb
hlt
mov
xor
xor
sbb
(bad)
jbe
dec
adc
icebp
jns
cmp
mov
ret
inc
mov
xchg
mov
ins
retf
jb
pop
int
ds
popf
or
test
pop
test
jne
int3
cmp
pop
in
mov
mov
mov
aad
rol
jecxz
mov
adc
pushf
test
inc
dec
xor
dec
addr16
xor
mov
jne
test
lahf
and
popf
mov
cmp
(bad)
jp
dec
jbe
fist
repz
call
in
scas
out
dec
push
mov
push
lea
cmps
pop
xchg
sub
imul
sti
fmul
cmp
test
push
lock
pop
leave
(bad)
(bad)
adc
imul
outs
mov
sub
jl
cmp
sbb
rol
fmul
sub
mov
adc
mov
fstp
outs
and
inc
lods
push
add
adc
imul
adc
in
push
push
call
push
push
dec
mov
mov
pop
add
or
lea
dec
xchg
js
inc
xor
gs
popa
dec
xor
cmp
sub
shl
rol
sbb
mov
cmps
xchg
pop
(bad)
arpl
call
xchg
movs
pop
(bad)
int3
push
jbe
mov
(bad)
xchg
out
test
dec
lods
mov
cmc
and
rcl
xor
aas
push
je
jecxz
cld
in
and
mov
test
idiv
cmc
dec
dec
xchg
daa
push
push
inc
ins
dec
pusha
jecxz
es
in
sub
ret
movs
test
mov
retf
lods
and
pusha
ret
clc
sub
pop
fldcw
shl
add
dec
sub
call
fidivr
iret
rcl
push
ret
aas
jecxz
and
int3
ja
(bad)
xor
mov
cmp
std
das
cmc
inc
sbb
(bad)
movs
dec
cdq
retf
cli
sub
scas
lds
lahf
mov
test
repz
stos
sub
popf
imul
sbb
inc
stos
pusha
ficom
and
pop
mov
or
mov
sub
lods
push
mov
and
or
dec
dec
xchg
mov
xor
ror
jns
sti
xchg
lods
jbe
test
inc
xchg
xchg
repz
mov
mov
sbb
xchg
or
loop
mov
or
leave
push
mov
xor
int
sub
push
sbb
and
inc
xchg
inc
add
sub
push
int3
shl
mov
retf
cmp
cmp
sbb
pop
fdiv
cmp
jo
cmp
dec
add
leave
mov
icebp
loop
xor
mov
jge
adc
inc
mov
imul
sbb
cmps
pop
xor
int3
cwde
pushf
ror
and
xchg
out
stos
inc
aam
fcmovnb
xchg
push
and
push
les
mov
out
imul
cli
cdq
pop
add
jne
(bad)
sbb
pop
stos
xchg
imul
pop
mov
xor
push
xchg
push
xchg
sbb
push
lods
pop
in
imul
retfw
daa
mov
add
jno
cmp
and
or
mov
fwait
stc
cld
ins
mov
sub
sub
cmp
add
hlt
xacquire
ins
or
sbb
leave
pop
jno
dec
pop
xchg
inc
(bad)
je
scas
jnp
sbb
lock
push
arpl
bound
add
push
and
push
popa
enter
(bad)
(bad)
jne
out
sub
movs
enter
xor
adc
loopne
jmp
daa
stc
js
push
xchg
push
out
and
(bad)
cld
and
imul
xchg
ret
retf
sar
push
stc
ret
push
xor
xchg
jne
test
aaa
jno
dec
jno
and
cmps
inc
scas
sbb
dec
inc
retf
movs
pop
mov
sbb
ret
(bad)
retf
add
daa
mov
mov
fcom
cs
fwait
pop
mov
pop
ret
outs
das
shl
sub
mov
adc
call
pusha
repnz
data16
nop
sub
sbb
retf
mov
aas
jg
cmps
jo
shl
mov
jl
xchg
outs
push
call
lock
mov
fstp
mov
inc
pop
dec
or
fdivr
xchg
lods
pop
test
mov
shr
std
dec
movs
rol
test
imul
ret
cdq
stos
loope
jmp
out
jne
mov
cli
iret
jge
sub
push
cmp
ret
push
mov
rol
push
out
push
dec
fwait
ins
clc
adc
rcr
pop
jl
adc
in
retf
or
adc
or
xchg
rcl
and
adc
imul
push
je
add
lods
adc
cld
es
dec
retf
aas
int3
inc
fisub
icebp
push
push
mov
ins
push
mov
pop
imul
out
mov
movs
jmp
(bad)
dec
icebp
fdivr
mov
jecxz
mov
ins
pop
add
mov
and
scas
int3
dec
cmp
dec
retf
mov
pop
mov
mov
mov
ret
sahf
jg
cmp
cmc
adc
push
xlat
sti
push
jmp
dec
mov
mov
and
push
lods
fwait
dec
xlat
sbb
call
jle
jmp
pop
push
aad
sub
jp
fstp
and
bound
xchg
loope
jmp
xchg
sub
mov
fisub
cdq
mov
iret
mov
cmp
(bad)
imul
sub
jle
push
add
pop
cmps
add
dec
aam
xor
jp
popa
sete
adc
imul
fstp
cdq
add
sub
and
cs
and
imul
fwait
xchg
fsubr
(bad)
push
sbb
xor
les
out
jmp
mov
cs
ror
repnz
retf
js
add
test
inc
sub
repz
adc
sub
dec
dec
bound
dec
pop
pop
es
add
lods
adc
xchg
add
sbb
mov
sbb
jg
(bad)
or
lods
ror
or
cmp
fcmovnb
ss
stos
push
sub
retf
lock
stc
loopne
inc
mov
aad
scas
int3
pusha
dec
mov
mov
xchg
fcomp
shr
pusha
fs
sub
or
mov
mov
pop
and
cdq
mov
xchg
dec
sub
cmps
dec
lods
data16
xchg
xor
cmp
dec
cs
mov
div
ss
pop
cmp
icebp
and
jmp
jmp
shr
retf
fist
gs
ja
out
pop
mov
push
enter
das
(bad)
mov
ins
xor
cwde
xlat
(bad)
xchg
push
jp
imul
mov
mov
stc
in
xor
out
add
jns
inc
pop
add
nop
add
inc
mov
sub
push
(bad)
loope
sub
adc
cmc
mov
mov
icebp
push
pusha
sbb
sub
sub
outs
mov
ja
cmp
in
mov
or
sbb
shl
mov
mov
icebp
scas
push
lods
stos
aas
daa
iret
push
pop
xchg
imul
xchg
loop
test
lahf
repnz
shr
sahf
push
enter
cmp
xor
xchg
mov
push
cmps
xor
push
mov
cmps
imul
scas
(bad)
in
retf
jo
int
xchg
cmps
hlt
xor
repz
pop
mov
or
test
imul
push
jmp
mov
sub
out
aaa
inc
xor
(bad)
adc
inc
bsf
or
mov
aam
xchg
fstp
push
lds
fisub
cli
push
je
data16
pop
mov
xlat
sub
movs
jg
arpl
inc
imul
cmp
mov
pop
jg
jl
ja
mov
xchg
mov
outs
mov
fucomip
stos
add
jmp
loope
data16
ror
xor
mov
pop
push
cmp
ja
rol
out
pop
pop
pop
js
loop
mov
into
or
out
push
jb
pop
mov
mov
mov
xor
dec
retf
xchg
and
sahf
mov
jbe
je
int
sub
adc
daa
popa
cld
pop
lock
cmp
inc
push
xor
mov
jle
xor
add
jns
push
jp
nop
cli
jp
repz
dec
mov
imul
add
and
jb
fstp
das
pusha
mov
rol
(bad)
sbb
ss
(bad)
push
mov
leave
shl
jecxz
dec
in
sbb
push
xor
jb
iret
inc
sub
inc
dec
pop
stos
xchg
and
cld
add
(bad)
mov
dec
jl
ins
(bad)
fwait
cwde
cmp
pop
gs
retf
mov
call
mov
xchg
push
fcomp
xchg
(bad)
repnz
stos
pop
inc
pop
sbb
test
outs
lea
cmp
fadd
push
pop
enter
pusha
push
clc
in
push
or
pop
xchg
xor
fcomp
and
dec
or
adc
sbb
jmp
mov
and
mov
pop
test
mov
mov
mov
in
mov
pop
and
push
jle
push
sbb
popf
xchg
sub
push
mov
in
daa
das
mov
call
cmp
jno
dec
mov
ins
jecxz
push
adc
dec
or
xlat
lahf
dec
cld
(bad)
cmp
or
mov
outs
movs
xchg
jge
(bad)
jl
xor
jbe
xchg
adc
mov
cdq
adc
fldcw
ja
out
stos
outs
pop
push
dec
aaa
outs
cwde
jb
mov
jp
int3
rol
xchg
stos
fwait
mov
paddsw
cmps
xchg
in
xchg
or
int3
data16
popf
aaa
xor
dec
aas
cmp
nop
mov
rcr
das
jmp
ins
lds
cld
fsub
inc
in
int
je
(bad)
fidivr
leave
je
jl
leave
in
inc
add
and
jne
dec
lods
xchg
(bad)
ins
pop
stos
xlat
and
mov
jne
lea
rol
cs
in
popa
sub
adc
repz
mov
cmp
xchg
repnz
pusha
dec
retf
aad
mov
or
mov
jg
nop
xor
sbb
pop
rol
mov
(bad)
xchg
mov
cmp
xor
mov
add
(bad)
fsubr
inc
call
fiadd
dec
iret
dec
sub
fbld
xchg
aam
inc
scas
sbb
inc
xchg
push
lods
inc
shl
dec
(bad)
and
int
cmp
test
mov
sub
mov
mov
cs
lods
jl
mov
ret
fisub
fwait
mov
rcl
push
(bad)
in
fiadd
xchg
jno
mov
rcl
mov
jno
int
ins
int3
mov
add
jmp
inc
loope
in
repnz
out
xchg
retf
xor
addr16
mov
out
in
pop
jbe
jmp
xchg
sub
add
and
dec
dec
and
loope
jmpw
bound
dec
push
in
in
mov
rcr
mov
repz
stc
jns
cmp
push
push
jae
std
repnz
inc
fst
jmp
outs
cli
pop
les
mov
cdq
hlt
mov
es
out
push
xor
mov
sti
pusha
dec
addr16
(bad)
dec
fdiv
adc
sbb
push
movs
movs
popf
fistp
(bad)
(bad)
hlt
jmp
mov
shl
popf
fld
loopne
xchg
test
cmp
out
daa
xchg
mov
pop
cdq
jb
pop
ds
mov
or
aas
jb
cmp
stc
xchg
sub
or
jne
int3
pop
cmps
popf
sub
sub
mov
mov
xchg
cs
cmp
pop
xchg
data16
mov
xor
(bad)
jg
or
jns
sbb
out
packsswb
gs
push
shr
jmp
push
dec
test
cwde
test
and
lods
dec
mov
xchg
jmp
std
cmps
pushf
mov
pop
xchg
enter
adc
test
icebp
dec
mov
dec
sub
aad
daa
push
jmp
clc
or
cmc
fcomp
mov
xlat
data16
add
scas
xlat
stc
call
stc
aaa
and
push
addr16
call
pop
(bad)
pop
movs
xlat
call
pop
ret
lds
add
jp
popa
std
mov
push
xchg
fucomip
aad
or
or
mul
les
outs
cmp
dec
ds
jl
cwde
jbe
sbb
js
shl
sub
cmc
push
mov
dec
push
int3
aad
xor
mov
push
in
add
mov
popa
jge
and
cdq
adc
or
and
cld
mov
pop
cmp
adc
lds
xor
and
adc
call
xchg
pop
shr
and
or
icebp
cmp
retf
mov
add
mov
fild
cwde
or
mov
xchg
aam
dec
mov
xchg
add
pop
push
cli
retf
mov
mov
aam
pop
fnsave
lock
out
cmps
adc
lea
es
jl
iret
jae
mov
bound
or
pop
or
dec
(bad)
and
push
out
add
in
pop
cmp
aaa
add
jp
lods
and
stc
nop
xchg
push
fs
inc
and
push
(bad)
mov
(bad)
cmp
popa
push
inc
add
jl
xor
push
xchg
sbb
inc
pop
(bad)
jmp
adc
ins
fwait
cmp
sar
les
test
out
xor
add
sub
sbb
xor
daa
push
add
loop
mov
mov
add
test
and
add
lea
pop
lock
push
scas
add
nop
pop
cmp
out
cdq
xor
sbb
in
xchg
dec
cmp
and
mov
adc
ret
out
mov
push
mov
in
bound
call
mov
aas
fisub
sar
and
pop
clc
mov
jne
xor
retf
lds
adc
add
jge
mov
xchg
call
call
nop
inc
or
dec
stc
and
push
add
adc
int3
icebp
push
out
sub
jle
mov
sub
or
movs
bound
fst
cmp
stos
xchg
pop
ins
or
cli
fstp
dec
movntq
scas
shr
dec
jmp
inc
jle
retf
pop
mov
sbb
test
xor
fisttp
push
dec
ja
mov
and
scas
das
pop
adc
ret
xor
pop
shl
inc
mov
inc
das
mov
push
mov
add
jl
bound
clc
xchg
push
test
xchg
adc
scas
xlat
sub
lds
sub
or
fist
pop
mov
int
ds
add
add
lahf
xor
dec
dec
xchg
dec
call
adc
sbb
mov
dec
clc
adc
test
imul
mov
xchg
test
mov
rcl
pop
push
sbb
mov
cld
dec
or
dec
jbe
inc
inc
push
pop
pop
push
adc
mov
mov
xlat
ss
dec
mov
or
iret
xchg
shl
js
retf
aam
add
pop
nop
addr16
inc
ja
addr16
cld
push
(bad)
pusha
fstp
(bad)
repz
call
xchg
scas
les
jecxz
or
xchg
(bad)
or
xchg
iret
sbb
mov
sbb
pusha
mov
leave
pusha
test
sahf
inc
mov
cmps
xlat
stc
jp
jb
dec
das
ins
rcr
mov
xchg
push
in
mov
push
(bad)
dec
test
xchg
sbb
xchg
outs
sbb
push
fs
cwde
scas
xlat
or
sub
inc
mov
into
push
dec
sbb
add
mov
push
dec
push
call
cwde
mov
int
xchg
mov
inc
aas
fs
pop
or
push
adc
jecxz
jg
jge
mov
fmul
test
js
lds
shl
stos
repz
mov
add
les
mov
push
sbb
sbb
pusha
mov
sbb
(bad)
in
stos
xor
mov
push
repnz
inc
dec
es
adc
xlat
dec
ret
xlat
rol
lds
jg
fimul
std
mov
fstp
fimul
adc
cmc
popf
imul
inc
inc
inc
out
fst
push
cmps
jmp
pop
(bad)
push
fiadd
leave
jmp
pop
out
mov
popf
mov
cmp
inc
adc
out
xor
xor
es
not
jp
push
add
aas
sub
mov
sbb
push
adc
inc
xor
push
cmp
inc
out
lock
pop
les
mov
adc
jns
pop
js
sar
jne
nop
mov
jg
stos
in
jl
pop
js
idiv
ss
pop
lock
in
xchg
cld
xchg
in
jl
jmp
add
int3
sbb
cld
push
pushf
sub
jmp
ins
inc
mov
leave
and
pop
sbb
push
xchg
ret
or
inc
and
pusha
inc
popf
int
xor
sti
sbb
push
xchg
ss
in
jmp
addr16
push
out
mov
scas
push
and
xchg
cdq
(bad)
iret
or
cmp
sub
push
call
loopne
fistp
call
push
xchg
cmps
test
cwde
outs
mov
ins
push
gs
prefetch
push
push
loop
ins
rcr
pop
lods
enter
push
fsub
jne
sub
xchg
push
vmovaps
retf
jg
and
jge
daa
mov
mov
enter
clc
xor
lock
addr16
fidivr
xor
xor
gs
cdq
ins
pop
pop
fidiv
cmp
xor
xchg
mov
fimul
inc
xor
idiv
es
aam
cmps
dec
dec
rcl
data16
dec
arpl
in
mov
or
pop
iret
or
les
xor
hlt
mov
aas
pop
in
inc
mov
popf
je
dec
xchg
in
out
out
mov
lds
and
xlat
ret
pop
add
or
dec
sub
jno
sbb
shl
push
out
and
mov
adc
je
dec
cwde
cwde
pop
mov
jecxz
fisub
xchg
je
mov
add
ins
mov
lds
and
push
sub
jne
jnp
mov
inc
xor
xchg
into
xor
dec
lock
mov
pusha
std
xchg
xchg
adc
je
fsincos
pusha
lock
cli
inc
fcmovnb
in
lods
(bad)
inc
sbb
or
(bad)
jnp
les
and
rol
xchg
sbb
pop
andps
mov
mov
inc
fucom
es
dec
cmp
outs
adc
sti
sahf
cmp
or
mov
jne
mov
sub
fbld
jb
cmps
push
adc
lock
or
sbb
data16
addr16
mov
adc
or
int
sbb
push
das
pop
push
retf
xor
call
cmps
leave
jge
xor
arpl
or
fs
xor
lds
add
push
push
data16
cmp
sbb
fs
and
test
ror
jnp
mov
leave
inc
pop
mov
(bad)
enter
ds
and
and
icebp
fwait
xchg
xchg
ror
jbe
xchg
adc
fwait
pop
(bad)
cli
xchg
add
pop
in
test
imul
loope
jle
ret
ds
fstp
or
(bad)
in
lea
outs
xchg
leave
jns
or
call
mov
dec
sbb
jle
or
std
and
fld
les
or
mov
fisttp
retf
mov
jns
jp
sbb
lock
inc
fild
adc
cmps
and
sbb
cmp
push
popf
ss
outs
inc
xchg
sbb
or
mov
fwait
jns
das
pop
adc
or
dec
xchg
ja
out
sbb
js
sub
jae
cmp
pop
add
mov
and
mov
jb
push
push
mov
xor
fnsave
lahf
and
ss
push
mov
cmp
js
push
rcl
inc
retf
lods
std
pop
stos
jmp
push
cdq
enter
jmp
mov
jns
mov
(bad)
push
pop
xchg
dec
mov
xlat
shl
dec
(bad)
sahf
xor
push
push
aad
bnd
pop
inc
nop
sub
push
je
aam
fsub
sbb
pop
xor
fwait
or
inc
pop
inc
sub
ret
and
push
push
add
lods
int3
and
neg
stos
mov
pop
mov
adc
push
xlat
push
dec
and
dec
inc
test
hlt
push
fadd
pop
mov
ja
popf
fld
add
mov
and
or
mov
xchg
push
xchg
arpl
aaa
scas
xor
nop
adc
jo
shr
fucomip
push
mov
ror
push
rcl
sbb
fwait
sub
dec
ins
mov
stc
pop
sub
gs
lock
add
jg
pop
loopne
pop
pop
gs
mov
xor
jmp
jp
repz
das
cmc
xlat
ja
retf
fld
sti
clc
hlt
inc
adc
in
and
in
stc
and
cmp
jg
push
and
test
lock
out
adc
push
mov
ds
icebp
dec
sbb
pop
imul
test
push
stc
xchg
bound
or
iret
sar
in
fcmovnbe
mov
inc
call
mov
push
add
(bad)
xor
ret
lods
push
lods
jb
stc
or
fs
iret
mov
aaa
xchg
test
mov
sub
or
cmp
adc
enter
fisttp
cmc
mov
jnp
dec
cwde
cld
add
push
scas
push
lods
mov
scas
dec
or
fstp
adc
or
cli
or
imul
dec
xor
inc
scas
add
sub
cli
and
inc
adc
lods
and
push
or
lock
(bad)
out
push
mov
js
xor
dec
je
dec
mov
iret
dec
jne
add
fcmovu
cmp
pop
int
out
shr
call
mov
sbb
fxtract
ss
mov
dec
or
jmp
inc
movs
js
xor
cwde
ins
mov
or
scas
bnd
push
shl
pushf
adc
and
(bad)
cwde
fsub
div
jle
fsubr
jmp
add
and
mov
mov
loope
fst
retf
repz
mov
or
popf
xchg
add
jge
jmp
add
icebp
dec
adc
xchg
mov
mov
add
and
ins
js
xchg
in
(bad)
xor
int
adc
ins
cwde
enter
jge
inc
call
repz
adc
or
imul
cs
bound
add
stc
test
stos
cld
push
push
addr16
cmps
test
mov
std
pushf
fisttp
shl
in
je
cmp
add
pop
out
mov
adc
cs
pusha
inc
sub
jge
mov
mov
inc
stos
mov
nop
test
(bad)
adc
cmp
std
imul
lock
ss
sti
xor
jo
adc
in
add
movs
dec
or
aad
fld
mov
sti
inc
jb
pop
xchg
movs
hlt
(bad)
mov
or
xor
push
bound
test
fcomp
rcr
leave
sbb
pop
mov
imul
out
(bad)
into
bound
and
das
cli
fldcw
fst
sar
int
dec
xchg
fidiv
shl
test
jp
inc
cmp
pop
adc
or
sar
sbb
and
(bad)
test
imul
lea
jno
repz
cdq
sub
nop
or
push
shl
int
mov
(bad)
gs
ja
cdq
add
xor
jl
mov
pop
ins
sub
mov
icebp
xor
sub
push
call
fisttp
cwde
push
dec
int
fstp
push
xor
rcl
repz
jle
cmp
cmp
xchg
enter
mov
inc
and
dec
(bad)
stc
mov
xchg
ins
push
scas
cmp
repnz
test
std
jecxz
sbb
xchg
out
aad
or
mov
dec
leave
ret
hlt
xor
add
or
xor
je
inc
iret
xchg
cmps
dec
popf
mov
arpl
aam
mov
jnp
push
clc
std
dec
repnz
int3
push
call
sbb
cmp
mov
(bad)
xchg
sbb
enter
into
icebp
popf
push
sbb
ret
ins
cmp
sub
rcr
jne
mov
sbb
fcom
sbb
cmp
in
icebp
push
and
stos
push
push
dec
jge
repz
lods
sbb
(bad)
add
sahf
out
add
cdq
xchg
pop
jae
lahf
cmp
fistp
cmp
loopne
push
mov
rcr
test
jnp
xor
dec
xchg
pop
adc
push
push
fsubrp
pop
pop
dec
sub
push
into
sbb
cmps
into
pop
cmp
sbb
add
xchg
or
bound
popf
push
jne
fidivr
jg
ds
into
dec
xchg
int
push
push
js
das
push
fnstcw
nop
je
push
mov
and
leave
daa
xor
dec
dec
pusha
stos
mov
and
std
aaa
cmps
mov
add
sar
lea
sub
arpl
add
stc
loope
addr16
stos
xor
js
cmp
fstp
sub
test
(bad)
adc
jge
aad
and
(bad)
(bad)
sub
jp
push
fadd
rol
loopne
mov
inc
(bad)
stc
adc
sbb
jnp
ss
jle
(bad)
sbb
mov
jecxz
test
xor
sbb
xor
xchg
and
inc
and
cld
rol
mov
xchg
jge
or
or
nop
mov
adc
enter
jp
mov
push
adc
dec
leave
scas
popa
mov
adc
adc
xchg
pop
cmp
xor
div
daa
cmp
mov
cmp
and
adc
ror
or
int
rdtsc
xor
in
test
push
cmp
sub
std
stos
mov
cmp
fs
and
sub
retf
outs
inc
out
sub
inc
aad
ds
cld
mov
(bad)
scas
xchg
mov
dec
movs
jmp
cmps
mov
jo
scas
imul
xchg
cli
je
push
mov
jmp
aas
leave
(bad)
mov
ss
adc
not
jmp
aaa
bound
ret
ja
lock
adc
and
and
scas
sbb
inc
mov
mov
add
push
cmp
cwde
mul
fmul
mov
daa
pop
xlat
dec
rol
mov
jae
repz
ret
imul
sub
rcl
inc
pop
repnz
and
mov
out
ret
inc
jns
stos
data16
xchg
repz
ret
xchg
iret
mov
std
mov
out
pop
add
jecxz
call
scas
mov
and
mov
ins
aas
adc
push
fdiv
pop
xchg
test
test
adc
cs
in
cmp
aas
je
repz
fild
or
adc
jb
fmul
pop
xchg
shl
cmp
mov
and
bound
popf
jae
dec
mov
cmp
pop
aad
dec
dec
xchg
inc
daa
aam
outs
mov
pop
or
jg
stos
outs
push
adc
out
enter
jecxz
in
dec
das
push
sub
fnsave
mov
cdq
jb
sbb
iret
push
or
push
mov
js
push
lea
pop
xchg
jmp
inc
aas
xor
pop
sub
cmp
shr
cs
sar
push
(bad)
out
mov
mov
add
xchg
pop
dec
test
xor
je
cmp
pop
sub
pop
adc
mov
jno
cmp
dec
push
test
ins
xor
mov
lock
std
mov
mov
jle
lods
dec
pop
jle
imul
inc
sub
xor
sub
add
mov
xor
pop
and
pop
cmp
in
add
lahf
lock
sub
(bad)
test
ret
aaa
stos
cmps
(bad)
or
bound
sub
add
cs
xchg
fdivr
das
stos
aam
add
dec
test
dec
push
ret
int
fsin
aas
rcl
push
cmp
push
lea
dec
(bad)
hlt
push
adc
ficomp
xor
scas
enter
mov
ss
pop
mov
ret
test
fwait
in
fcomp
(bad)
cmp
xor
ins
rcr
push
jmp
cmc
xchg
or
shl
inc
fnsave
push
mov
call
(bad)
pop
push
or
retf
and
cli
xor
mov
call
pop
hlt
enter
or
fiadd
mov
out
and
lods
hlt
sar
cmps
dec
push
jo
dec
fiadd
adc
jmp
mov
adc
mov
test
icebp
repnz
loopne
(bad)
pop
sub
dec
addr16
jbe
mov
out
xlat
inc
stos
int3
sar
inc
ret
test
retf
xor
dec
ins
inc
inc
adc
push
inc
ret
les
inc
adc
cmp
jge
pusha
cmp
std
pop
cwde
mov
sahf
xchg
bound
cmp
or
and
jae
pop
pop
retf
ins
stos
adc
inc
dec
loope
ret
mov
addr16
jg
xchg
pop
in
xor
imul
jp
in
mov
ror
aaa
sub
ret
test
push
out
xor
popf
in
pushf
mov
and
push
pop
jbe
add
mov
scas
pushf
loopne
add
jns
cmp
fsub
add
mov
pusha
add
call
in
lahf
cli
je
mov
fdivrp
call
js
inc
fldcw
int
test
dec
xor
and
stc
mov
sar
pop
call
cmc
(bad)
cmp
rcl
sub
adc
sub
clc
call
sbb
test
adc
mov
retf
push
jb
xchg
popf
push
movs
mov
ret
ror
lahf
(bad)
mov
not
int3
pop
or
jb
pushw
movs
jmp
jecxz
mov
aad
push
push
dec
pop
xchg
or
dec
and
push
(bad)
aas
add
repnz
ins
ret
dec
leave
cmp
xchg
add
cmp
mov
test
jns
sbb
in
daa
dec
ror
cmp
fisttp
aas
push
dec
lods
cmc
fild
add
shl
ficom
scas
nop
push
mov
adc
and
in
jge
sub
popa
fistp
outs
and
outs
pop
mov
in
jge
std
push
sbb
or
xchg
jge
out
mov
or
mov
xchg
xchg
or
xor
add
mov
adc
mov
int
push
jns
leave
aaa
rcr
mov
pop
lahf
mul
lods
lds
and
pushf
push
rcl
loopne
pop
xor
jns
mov
mov
or
cmp
jns
out
mov
pop
inc
daa
test
cmp
or
xor
loope
xchg
jge
int
jnp
(bad)
jge
jle
jge
jns
arpl
aam
scas
mov
idiv
shl
es
add
sahf
repz
fisub
pop
call
mov
fdiv
adc
ss
ja
retf
jge
ja
sbb
(bad)
aad
push
lock
js
xor
gs
das
push
xchg
or
(bad)
sbb
in
inc
cld
or
push
aas
lea
retf
xor
pop
aam
repnz
sbb
xor
xchg
inc
sbb
pop
addr16
fdiv
inc
mov
and
inc
add
push
mov
(bad)
or
jge
mov
pop
jne
ds
data16
js
pop
jbe
jge
adc
ret
mov
cmp
mov
dec
into
cs
aad
ins
(bad)
jnp
or
mov
xor
not
or
inc
pop
out
mov
dec
cmc
inc
push
xchg
lods
ins
imul
fcom
sar
dec
fcomp
leave
jmp
pop
dec
sub
or
stc
xchg
sub
ret
cmp
(bad)
add
test
jmp
mov
or
pusha
int
cmp
inc
mov
data16
push
outs
mov
sbb
cwde
pop
or
and
rol
popa
inc
pop
push
mov
(bad)
sahf
arpl
ins
jmp
frstor
xchg
xchg
jecxz
mov
mov
sub
test
mov
xchg
and
sbb
daa
sbb
pop
jae
sub
push
and
stos
jmp
pop
ins
stc
and
fld
push
push
add
cmps
push
mov
div
(bad)
test
pusha
in
test
xchg
jo
mov
xor
dec
jns
ds
outs
cs
or
in
mov
iret
imul
call
lds
std
fs
(bad)
imul
fistp
and
pop
xchg
adc
mov
(bad)
fld
sub
pusha
(bad)
xchg
pushf
aad
mov
sbb
cli
(bad)
xor
mov
xchg
dec
enter
pop
jp
ror
or
adc
xor
dec
jno
push
xchg
adc
pop
ja
add
(bad)
loop
sbb
and
mov
dec
pop
movs
in
add
bound
mov
xor
mov
idiv
dec
push
jae
rcl
in
sahf
sub
push
xor
fcmovnb
mov
mov
js
cmp
mov
push
test
mov
ins
cld
fcom
dec
lahf
xor
add
add
ss
inc
mov
mov
js
sub
or
push
pop
bound
inc
(bad)
das
loopne
(bad)
ror
xchg
add
es
sbb
test
adc
push
xchg
mov
hlt
or
aam
scas
push
cwde
out
mov
movs
in
aad
ins
gs
inc
jne
(bad)
cmp
dec
xor
out
bound
pushf
or
jae
cmc
jno
push
or
in
shr
inc
sub
jns
fnsave
xchg
jns
ds
(bad)
mov
fsubp
outs
cdq
push
out
push
mov
xlat
scas
(bad)
es
cld
mov
push
gs
repnz
sub
push
scas
lods
data16
out
cmps
mov
loopne
mov
fst
jb
mov
cli
mov
out
pop
movs
dec
mov
mov
jmp
mov
push
jg
push
mov
stos
mov
ins
aaa
dec
xor
dec
sub
mov
mov
pop
test
and
js
push
jno
push
mov
imul
into
and
out
call
nop
cli
sub
cmp
pop
and
jp
mov
xor
xor
dec
adc
(bad)
(bad)
sti
xor
mov
movs
outs
sbb
in
add
jnp
outs
mov
scas
imul
mov
cmps
stos
dec
cs
sti
sbb
mov
cmp
out
jmp
xchg
test
or
(bad)
pop
pop
popf
xor
ficom
(bad)
and
arpl
cwde
sbb
ins
xchg
pushf
cmc
out
sbb
pop
mov
pop
bound
mov
pop
sub
scas
add
xchg
xchg
lahf
sbb
xor
or
lahf
outs
cmp
jmp
push
(bad)
cdq
arpl
inc
hlt
call
fs
xchg
leave
sub
enter
mov
push
xlat
mov
imul
gs
push
data16
jmp
iret
or
in
shl
fstp
jmp
mov
xor
jge
enter
jp
inc
ins
ja
inc
iret
(bad)
movs
jbe
mov
lahf
and
in
adc
xor
stos
out
in
add
add
(bad)
in
mov
adc
pop
outs
das
mov
mov
movs
sub
xlat
mov
sbb
inc
in
daa
sbb
add
imul
push
aad
aaa
mov
mov
adc
push
add
adc
mov
out
popa
fadd
xor
icebp
sbb
sbb
and
cmp
movs
outs
pop
xchg
(bad)
sti
cmp
mov
fstp
pop
push
retf
dec
sub
xchg
jecxz
mov
int
sub
xor
cmp
in
sbb
pop
in
les
(bad)
sbb
adc
(bad)
push
cmps
inc
cmp
jl
into
repnz
mov
add
outs
aaa
lea
test
or
add
cmp
mov
cli
repnz
pop
(bad)
adc
stos
mov
je
inc
dec
inc
nop
fistp
xchg
cs
les
jo
aam
push
xlat
je
cmc
push
and
jno
jmp
fucomip
adc
dec
frndint
in
push
sub
cmp
inc
dec
loop
or
data16
cld
pop
daa
mov
sub
dec
pop
les
dec
sbb
inc
es
adc
rcr
into
out
test
jmp
bound
push
mov
mov
ins
adc
mov
neg
sbb
inc
sar
push
push
mov
in
cs
add
sar
cdq
sahf
pop
fcom
mov
test
jp
xchg
imul
push
loope
pop
sbb
int3
pop
cmp
dec
sbb
movs
mov
cmp
lock
mov
mov
ret
fnsave
enter
mov
sbb
add
and
retf
mov
(bad)
xchg
ss
movs
cs
(bad)
aam
jle
mov
pop
retf
out
aam
and
dec
xchg
movs
xor
shr
push
adc
lock
push
cdq
or
mov
jp
dec
icebp
stc
mov
jno
mov
test
in
fiadd
mov
sbb
iret
enter
cmp
add
lods
inc
xlat
mov
adc
push
jmp
sub
sbb
mov
xchg
push
xchg
js
movs
cmc
idiv
mov
das
fist
popw
sbb
mov
dec
jno
retf
pop
xor
cmp
jp
fs
cmp
lds
(bad)
or
inc
pop
push
mov
push
jmp
mov
sub
and
jb
xor
dec
retf
ds
mov
push
mov
push
and
dec
adc
adc
dec
inc
sub
pop
and
inc
test
into
jno
(bad)
call
jae
sub
adc
nop
movs
xor
repz
outs
xchg
and
push
or
jmp
push
imul
test
sar
mov
pusha
fnstenv
shl
lea
xchg
int
aam
mov
and
loope
pop
aaa
jge
je
call
jle
push
jns
cmp
idiv
jmp
dec
cmc
xor
movs
shr
cmp
out
mov
pop
shr
pop
test
add
jmp
and
in
mov
jle
inc
mov
xchg
pusha
cmps
vphadduwd
inc
push
mov
mov
mov
addr16
call
mov
rcl
bound
sbb
add
lahf
jmp
mov
mov
adc
lahf
rcr
mov
dec
adc
les
(bad)
test
imul
ins
lods
ins
sti
dec
inc
xlat
dec
inc
hlt
pop
mov
lods
push
in
loopne
out
push
mov
nop
ret
push
out
ins
nop
jno
jo
sub
inc
sub
clc
cli
(bad)
iret
mov
jmp
aad
icebp
jo
cdq
jle
shl
int3
outs
mov
cli
mov
fild
fs
scas
and
ror
mov
dec
xchg
mov
jge
std
stos
pushf
not
movs
aaa
push
retf
mov
pop
sub
scas
jbe
inc
(bad)
leave
imul
pop
adc
push
daa
ret
sbb
jae
inc
xor
in
mov
pop
push
outs
cmp
xchg
add
mov
push
sbb
push
movs
push
fistp
cmp
xchg
rol
jno
adc
xchg
mov
es
inc
add
test
clc
add
xor
inc
mov
popf
outs
sbb
xor
(bad)
and
rol
jg
jne
xchg
loop
push
scas
cmp
pop
popf
pop
in
les
jle
xchg
push
sbb
out
jg
mov
inc
sub
inc
xchg
xor
and
mov
pop
fs
push
or
xchg
cmp
xlat
xchg
aam
rcl
ins
cmp
mov
lds
xchg
and
xchg
test
mov
inc
jmp
lods
dec
sbb
shr
test
cmp
adc
sbb
rol
test
fwait
scas
mov
fxch
xor
adc
pop
lea
mov
sub
sub
fisub
and
in
cmp
mov
adc
mov
stos
cs
sub
out
call
adc
add
dec
adc
dec
popf
mov
retf
inc
cmp
adc
in
mov
ins
es
pop
push
xor
and
sahf
adc
sbb
lock
popa
enter
mov
stos
inc
mov
ja
bound
add
xor
or
popf
icebp
lods
popf
dec
push
push
cmc
stc
dec
lods
mov
in
jnp
out
call
mov
push
sub
sbb
sub
sbb
lea
leave
ja
pop
adc
sar
retf
jp
inc
out
call
test
and
es
jbe
lods
inc
sar
dec
sti
push
sbb
mov
pop
jnp
(bad)
dec
adc
icebp
xchg
cmps
mov
or
xchg
sub
jecxz
cmps
or
gs
adc
pop
sahf
adc
out
pop
mov
push
or
test
lea
jg
jl
int3
outs
cld
cmp
repnz
or
(bad)
sub
jno
and
dec
xchg
fsubr
xor
add
loope
mov
lods
lock
jmp
push
cs
push
or
and
mov
fucomp
jmp
sbb
test
sahf
xchg
sbb
cmp
nop
clc
and
(bad)
and
inc
gs
stc
js
mov
cmp
dec
and
cld
xor
inc
rol
or
pop
inc
cdq
jb
pop
inc
mov
jl
sbb
call
push
(bad)
jnp
and
dec
gs
mov
mov
add
pop
dec
loope
dec
adc
loope
dec
sbb
or
push
cli
inc
loope
jo
mov
sti
jne
adc
sub
out
ins
mov
arpl
pop
jns
loope
(bad)
out
out
js
sub
cld
mov
out
not
jg
jae
and
not
push
lahf
and
push
test
scas
jno
lahf
jge
int
stos
push
mov
push
or
inc
inc
jmp
cwde
imul
xchg
mov
xchg
dec
and
out
pusha
pop
in
fsub
and
and
cmp
inc
mov
(bad)
push
out
rcl
ret
cmc
outs
xchg
imul
mov
stos
cmps
in
rcl
daa
shl
int
mov
in
push
xor
pop
pop
lods
test
xchg
inc
or
push
mov
retf
add
mov
iret
mov
or
cmp
rol
adc
in
inc
ja
sbb
pop
inc
popa
sbb
mov
sub
aad
test
jne
bound
fs
add
xchg
mov
enter
push
push
adc
and
mov
xchg
loopne
push
bound
lods
xor
cli
sub
into
loop
clc
ins
hlt
jmp
mov
push
mov
add
fdivr
out
enter
mov
sub
lds
jecxz
and
push
dec
sub
mov
mov
or
sub
inc
jne
pop
dec
sbb
cdq
icebp
or
fwait
push
inc
sti
(bad)
xchg
xchg
cld
push
xchg
xlat
out
or
cmc
sbb
cmp
push
out
mov
into
mov
shl
inc
lock
gs
jo
add
sbb
xor
lahf
add
push
jp
jb
cmp
imul
or
data16
popa
(bad)
std
jb
mov
call
inc
or
sbb
out
into
ficom
aad
xchg
out
fild
sahf
repz
push
test
push
les
or
call
mov
out
rcl
in
xor
sub
sub
mov
out
in
sub
sub
lods
in
js
mov
mov
(bad)
outs
push
push
mov
mov
add
add
mov
and
movs
dec
rol
outs
jns
mov
xor
test
push
or
pop
ss
hlt
psadbw
hlt
inc
je
icebp
pop
lds
pop
push
movs
push
pop
adc
imul
sar
dec
sar
jge
ss
pushf
or
inc
adc
push
pop
out
push
xchg
adc
ds
cmp
icebp
movs
push
and
sbb
div
pop
pop
ins
push
add
(bad)
pop
scas
mov
loopne
aaa
fdivr
mov
mov
scas
sbb
ret
jmp
(bad)
mov
js
js
mov
movs
pop
push
imul
pop
stc
daa
outs
fcomp
shl
ins
dec
or
pop
inc
sbb
inc
add
inc
mov
test
xchg
mov
jg
push
mov
add
lea
cmp
push
popa
mov
jg
cmp
mov
sub
iret
adc
aad
nop
pop
pusha
mov
jmp
neg
je
sbb
fadd
std
ja
inc
push
pop
pop
dec
inc
xor
inc
pop
std
ins
(bad)
or
pop
xor
sbb
stos
adc
cmp
mov
mov
or
cmp
and
in
sbb
jae
push
jno
and
icebp
mov
into
xchg
push
call
outs
sub
push
add
dec
mov
bound
loop
sbb
and
and
xor
adc
xchg
and
es
add
fistp
movs
lea
push
xchg
push
xchg
out
sbb
push
call
inc
lods
xor
call
in
mov
adc
jb
in
dec
call
das
xchg
xchg
(bad)
mov
mov
cmp
mov
push
jg
pop
adc
daa
dec
into
push
sub
pop
rol
ret
sbb
dec
aad
out
inc
ds
jmp
mov
repnz
daa
or
iret
icebp
add
imul
loope
outs
sbb
add
mov
push
icebp
mov
pop
neg
sbb
push
jb
cmp
jmp
mov
dec
je
push
mov
pop
cmc
pusha
xchg
adc
push
repz
fmul
jmp
lock
mov
test
mov
mov
xchg
mov
xor
push
nop
xor
and
shl
cwde
or
cmp
shr
sbb
mov
mov
les
mov
mov
mov
js
and
push
call
ret
ds
(bad)
or
outs
or
inc
fimul
out
and
loop
mov
sub
jnp
mov
into
push
in
cmps
aaa
sbb
xchg
jp
hlt
xchg
push
out
shl
test
xchg
sbb
int3
enter
inc
lds
js
gs
push
loope
sub
push
pop
jg
loopne
shr
xor
lds
(bad)
xor
mov
pushf
mov
sub
xchg
retf
mov
push
or
jmp
cdq
in
dec
fild
adc
mov
bswap
ror
daa
or
cmp
or
in
imul
cwde
aaa
xor
jg
push
test
xchg
nop
into
jecxz
ss
cld
mov
xchg
cmp
cmc
mov
je
fs
ss
sub
outs
in
sbb
cmp
sub
fsubr
add
add
mov
mov
mov
sbb
push
inc
sub
push
ret
jmp
sbb
scas
jg
push
or
mov
pop
cmp
xchg
neg
je
daa
(bad)
(bad)
(bad)
int3
cs
add
repnz
sub
test
ror
push
out
jle
lds
jno
imul
mov
test
enter
movs
xchg
xor
in
pop
sub
xor
cmovnp
jl
xchg
pop
jl
pop
fnstsw
jns
pop
cmp
add
cmc
push
sbb
jns
retf
push
int
popa
pop
popa
aad
pushf
add
(bad)
outs
push
dec
xor
jecxz
dec
push
mov
sahf
mov
jb
neg
xchg
pop
mov
les
xlat
push
sbb
shl
hlt
scas
ficomp
xor
sti
push
repz
pusha
mov
and
movs
push
mov
aaa
test
popf
jmp
or
dec
mov
scas
xlat
das
mov
cmp
stos
pusha
xchg
push
add
jge
mov
inc
fwait
stos
enter
lds
xchg
rol
cmp
aaa
push
stc
xchg
mov
fimul
add
(bad)
inc
adc
fild
add
mov
xor
gs
das
push
sbb
jo
mov
sbb
push
push
ror
mov
js
je
int3
es
xor
sbb
fdivr
push
inc
aaa
stos
jbe
pop
ins
div
cwde
in
shr
mov
sbb
aam
lds
idiv
cmp
adc
push
adc
adc
es
cmc
push
xchg
push
push
retf
lock
fiadd
shr
sbb
mov
aaa
and
sub
lods
(bad)
ja
sbb
sahf
fmul
adc
inc
push
ror
sbb
push
nop
popa
retf
xchg
push
sti
mov
ja
dec
inc
dec
hlt
pop
(bad)
pop
adc
adc
outs
mov
push
xchg
mov
pop
shl
stos
(bad)
movs
(bad)
aas
xchg
data16
adc
ins
in
jnp
repz
mov
cmp
test
jae
inc
repnz
pop
fsub
sbb
aas
adc
scas
in
or
push
ins
popf
aaa
mov
push
retf
xchg
mov
les
iret
ror
outs
cmp
fsubr
repnz
es
movs
lahf
rcr
sbb
mov
xor
jns
inc
test
stos
pop
test
stos
mov
mov
fidiv
fwait
inc
dec
pop
call
fs
mov
inc
xor
cmp
xlat
and
in
jp
enter
test
jle
sbb
adc
jl
mov
mov
outs
pop
add
and
lock
dec
xchg
mov
cld
fist
daa
test
jp
jmp
jno
adc
push
push
mov
sub
and
loope
adc
xchg
std
xchg
jb
sahf
pop
sbb
mov
pushf
out
adc
pushf
cmps
or
sub
into
out
jmp
hlt
inc
int3
vpsubusw
mov
sbb
ja
data16
pop
(bad)
xor
jg
inc
fmul
push
cdq
or
or
in
add
hlt
jo
mov
mov
in
(bad)
iret
jle
fstp
xchg
fist
test
arpl
(bad)
(bad)
inc
sti
mov
xor
push
in
mov
test
cld
push
jmp
jne
mov
jle
mov
push
cmc
and
in
icebp
add
test
add
push
in
ja
jmp
cwde
or
xor
jmp
xor
or
pop
pop
xor
dec
scas
ret
pop
inc
pushf
pop
jnp
cs
ror
outs
hlt
inc
pop
pop
pusha
and
aam
and
sub
adc
(bad)
pop
mov
jae
fidivr
aad
push
loope
dec
pop
movs
jg
shl
jl
nop
sub
pop
sub
cdq
xor
mov
out
in
ins
aam
cmps
dec
sbb
loope
pushf
jbe
jns
add
pop
je
add
inc
or
jbe
in
sub
pushf
int
or
xchg
not
jmp
aas
enter
jne
je
mov
out
repnz
inc
iret
add
scas
call
outs
(bad)
cs
mov
aas
jbe
mov
add
fs
inc
and
jo
adc
add
mov
mov
sbb
unpcklps
aad
xor
idiv
dec
sbb
inc
dec
mov
dec
sub
leave
adc
push
in
dec
sub
xchg
and
rcr
push
stos
push
test
cld
or
jge
cmp
and
cmp
les
mov
shl
push
mov
lods
adc
call
mov
shl
adc
mov
stos
sbb
adc
jmp
shl
std
push
sahf
cdq
adc
jmp
and
inc
and
shl
cld
xor
loop
scas
mov
int
lods
in
push
mov
pop
xchg
leave
push
stc
aaa
cwde
in
sub
and
jae
cs
pop
and
fbstp
sub
mov
or
idiv
mov
fdiv
arpl
std
cmp
movs
push
test
in
or
xor
fisub
jg
jmp
aad
and
stos
xor
pop
push
mov
mov
or
test
mov
dec
mov
test
jl
adc
imul
call
mov
mov
hlt
enter
mov
scas
(bad)
or
jg
icebp
in
xchg
mov
loope
cli
pop
adc
xchg
je
in
cmc
(bad)
shl
retf
xchg
test
iret
mov
iret
loopne
rcr
mov
cmp
adc
push
jno
push
or
mov
outs
nop
xor
stos
mov
cmc
cmps
repnz
ja
test
imul
leave
ret
and
in
cwde
mov
xchg
sub
(bad)
pop
in
mov
mov
xchg
inc
sbb
jno
dec
test
cmp
xor
aad
fidiv
xor
xor
dec
jnp
mov
dec
sbb
les
sbb
(bad)
cmp
xchg
lahf
mov
test
xor
or
jns
inc
jns
repnz
(bad)
pop
mov
mov
jmp
sub
jl
cmp
push
inc
or
cli
pop
pushf
mov
dec
push
stos
fcomp
les
jns
push
rcl
retf
(bad)
imul
jg
cmp
pop
push
or
out
psubsw
mov
stos
pop
inc
into
retf
cmps
pop
cmps
sub
fsubr
or
jge
mov
aaa
add
adc
loopne
pop
jnp
mov
mov
popf
iret
push
in
jno
pop
adc
retf
mov
imul
cmp
pushf
mov
dec
jo
mov
jl
jle
mov
jmp
jge
mov
jle
movs
xchg
cli
call
sbb
or
mov
fldcw
mov
jne
jmp
cmp
scas
mov
inc
iret
adc
aam
lock
out
lods
jmp
out
adc
iret
jns
and
ret
(bad)
les
and
mov
outs
push
in
sub
les
sub
leave
cld
(bad)
pop
jp
cld
pusha
push
fcmove
mov
icebp
fldcw
pop
push
or
dec
sub
push
(bad)
or
dec
cmps
push
sti
stos
push
mov
jge
test
mov
mov
pop
adc
bound
jecxz
pop
call
test
std
add
mov
inc
hlt
push
fdivr
sbb
addr16
cmp
enter
js
test
push
jg
dec
push
ja
out
jmp
or
data16
and
mov
rcr
div
in
adc
fcom
shr
fwait
jno
in
cmp
cs
jmp
sbb
mov
addr16
jno
push
add
imul
inc
repnz
mov
adc
mov
icebp
pop
mov
sub
in
cmp
pusha
retf
and
out
imul
adc
shl
movs
movs
sbb
ret
and
pop
xor
mov
aaa
(bad)
dec
inc
push
sub
add
xchg
nop
cs
and
jno
pusha
push
jg
and
outs
xchg
jne
add
retf
add
out
mov
call
loopne
das
addr16
(bad)
stos
loopne
bound
add
jmp
jne
jge
jp
aad
push
jmp
test
adc
scas
test
call
ret
je
pushf
add
pop
cmp
addr16
loopne
je
dec
pop
xchg
cmc
sub
cdq
fild
pop
push
(bad)
mov
mov
xlat
and
dec
call
pop
jge
jae
mov
add
inc
dec
sub
mov
adc
mov
fnstenv
popf
push
push
jne
sbb
es
or
enter
jne
ins
cmp
inc
mov
push
shr
or
(bad)
mov
daa
mov
sbb
inc
pop
xchg
dec
mov
cwde
xchg
(bad)
mov
mov
out
inc
mov
adc
adc
dec
add
sbb
and
cmp
leave
gs
pop
or
lds
movs
iret
push
cmp
pop
mov
mov
pop
dec
jnp
inc
fwait
sbb
gs
and
and
dec
scas
xor
or
sub
push
das
xor
test
xor
out
outs
inc
inc
add
pushf
and
xchg
pusha
push
movs
lock
dec
sub
not
and
add
(bad)
push
mov
fistp
xor
popf
mov
cmp
scas
repz
lds
mov
xor
inc
mov
push
dec
das
mov
movs
push
mov
retf
leave
pop
cmp
loop
jns
outs
lods
aas
mov
mov
nop
cmp
or
add
cs
ds
ins
pop
xor
aad
jbe
xor
faddp
shl
or
cmps
fstp
iret
inc
daa
pusha
mov
push
or
pusha
mov
stos
mov
cmps
dec
popa
dec
jae
add
dec
pop
ins
fmul
xchg
bound
dec
adc
mov
mov
sar
cmp
mov
cmp
das
xchg
pop
lea
ret
mov
push
out
dec
ins
data16
jle
das
ret
mov
cmp
push
mov
inc
and
adc
or
sbb
add
ror
sub
cmp
out
(bad)
ror
mov
mov
jb
(bad)
ret
xchg
jge
das
inc
outs
jbe
dec
movs
fistp
int
inc
pop
rcr
dec
jge
pop
outs
int3
(bad)
adc
xor
and
dec
daa
push
cmps
push
push
and
loopne
inc
cmp
cmp
test
dec
mov
hlt
inc
iret
popf
sub
push
ins
pop
dec
mov
sub
outs
shl
or
mov
xchg
xchg
pushf
sub
cs
mov
lock
bound
sahf
sbb
push
xchg
shr
rcl
mov
(bad)
icebp
in
out
xchg
pop
xchg
in
sub
xor
dec
pop
cmps
mov
punpckhdq
rol
cmps
lea
dec
and
xchg
or
add
pop
xchg
shr
cmp
push
jns
mov
push
jae
xor
dec
(bad)
xor
imul
cmp
aad
mov
mov
test
shl
stos
sbb
lods
mov
popa
adc
cwde
jmp
(bad)
sbb
jnp
xchg
mov
fidiv
mov
push
pop
pop
mov
sub
(bad)
stos
(bad)
jge
dec
xchg
sub
ror
cmps
inc
push
push
stos
test
hlt
mov
jns
xchg
sar
and
or
pop
sub
popa
lea
das
mov
lahf
cld
pop
call
jle
hlt
adc
aad
ss
and
push
repz
hlt
sbb
pusha
jecxz
add
dec
cmp
je
mov
ss
push
clc
addr16
mov
pushf
push
sub
pop
fild
mov
outs
lds
pop
popf
popa
fsubr
neg
popf
mov
dec
lock
or
jbe
sbb
test
jmp
xchg
cmp
mov
lods
popa
and
jae
fbstp
mov
pop
mov
sub
ror
mov
gs
stos
cmc
out
push
fs
mov
push
inc
shl
xchg
xchg
pop
mov
int3
dec
inc
jge
addr16
(bad)
aam
xor
jmp
sub
adc
xor
jmp
in
fist
repnz
mov
xor
mov
call
adc
inc
ins
ror
dec
or
cli
out
jmp
push
adc
adc
pushf
in
mov
mov
and
or
fwait
out
(bad)
inc
mov
jg
mov
imul
in
shr
into
inc
nop
jo
cmp
push
jl
jmp
std
mov
mov
nop
mov
dec
stc
shl
cmp
mov
in
fcom
gs
jns
push
stos
add
nop
push
sub
xor
repz
jb
in
pop
and
fnsave
dec
sub
mov
inc
pop
mov
bound
mov
or
dec
leave
xchg
pushf
jnp
daa
fimul
(bad)
or
jle
outs
leave
lods
mov
add
sbb
push
lds
int3
adc
jmp
xor
add
sub
out
push
adc
cmp
push
mov
rcr
int
in
push
push
jp
in
cwde
xchg
jb
sahf
sbb
(bad)
shr
in
cs
rcr
xchg
push
stos
and
sub
dec
popf
dec
xor
push
mov
jae
lds
mov
dec
inc
xchg
mov
push
mov
test
jmp
add
stos
outs
sub
adc
ds
pop
les
jg
dec
push
(bad)
out
xchg
inc
loop
stos
xchg
mov
icebp
mov
and
push
test
cld
push
(bad)
jle
mov
sub
rol
mov
cmps
add
xchg
shl
cmps
mov
jle
mov
pop
outs
jge
imul
dec
mov
add
mov
pop
sub
dec
lods
or
icebp
mov
test
xchg
dec
xlat
movs
push
ret
jg
imul
pop
outs
lea
jb
jb
aam
gs
fimul
pop
push
in
add
loope
ret
mov
loopne
lahf
add
mov
out
push
mov
rcl
rol
lds
sub
mov
push
sub
sbb
sbb
adc
inc
loope
in
mov
mov
xchg
cli
sub
and
hlt
pushf
pop
je
fstp
adc
or
push
pop
mov
addr16
add
jns
mov
adc
xchg
lods
lea
cmp
lods
(bad)
jmp
ins
aas
mov
or
jl
push
xchg
mov
cld
mov
sub
shr
das
or
test
jns
sbb
mul
add
js
cmp
aam
int3
into
push
xchg
mov
pop
or
test
stos
fstp
ret
cmp
fstp
pop
jb
mov
cdq
lods
cmp
mov
jno
cdq
sub
mov
push
shl
xchg
cld
or
(bad)
movs
xchg
inc
sbb
jno
mov
pop
dec
mov
aad
stos
jbe
sahf
mov
pop
mov
mov
into
outs
nop
pop
mov
into
dec
mov
das
loopne
in
push
or
dec
shl
leave
mov
push
sub
(bad)
add
repnz
sub
(bad)
inc
push
ins
imul
or
dec
pusha
in
hlt
xchg
ins
div
or
cld
hlt
mov
nop
xor
mov
and
iret
adc
dec
leave
mov
jo
ficomp
fbstp
out
cmp
xchg
mov
neg
pop
(bad)
fdivr
repz
or
or
cmp
aas
sbb
adc
jb
daa
sbb
fucomip
cmc
in
addr16
loop
jle
je
cmc
sbb
sbb
sahf
adc
retf
shr
clc
jnp
or
jmp
mov
cs
sub
in
in
frstor
xchg
lods
jns
mov
pop
pop
jmp
std
mov
pusha
pushf
push
xor
sbb
ins
pop
mov
xor
in
adc
dec
xchg
in
inc
adc
dec
fistp
cwde
in
ins
ins
aam
loop
stos
push
push
mov
sbb
cmp
xchg
pusha
gs
xchg
out
out
pop
mov
jae
jo
sub
loope
mov
mov
aad
imul
adc
popa
cmp
popa
and
stos
ret
xlat
out
add
mov
out
inc
lahf
lock
and
lock
data16
pop
and
retf
enter
push
rol
fcom
push
add
enter
mov
mov
shr
inc
adc
inc
jecxz
js
daa
test
adc
adc
movs
ins
out
call
inc
xor
hlt
jno
pushf
add
ins
adc
mov
sbb
shl
lahf
test
xchg
jb
stc
ret
mov
sub
pop
je
xor
fidiv
mov
ins
add
ss
cmc
mov
rol
or
jmp
push
(bad)
push
pushf
xchg
jo
outs
cwde
mov
ret
fadd
out
pop
xchg
xor
outs
dec
adc
shl
sti
in
xor
pusha
repz
int3
xchg
mov
aad
and
xor
jmp
mov
out
pop
cmps
dec
mov
cmp
adc
call
sub
xchg
rcr
bnd
iret
cmp
mov
jle
and
ret
(bad)
inc
outs
xor
fdivr
or
push
jmp
in
pop
and
or
enter
xchg
mov
cdq
jno
dec
xchg
mov
pop
cmp
pop
or
sar
mov
dec
les
lock
inc
mov
fisttp
loop
shl
jge
adc
mov
mov
mov
pop
or
dec
(bad)
leave
xchg
cmc
into
inc
(bad)
js
addr16
sub
(bad)
mov
push
into
sbb
jg
jmp
push
cmp
add
push
mov
bnd
ins
mov
jle
frstor
daa
pop
cwde
pusha
ret
enter
mov
xor
pop
movs
mov
rol
jne
mov
ret
popa
daa
loopne
adc
cdq
es
lea
das
dec
push
jle
push
(bad)
leave
jae
sbb
call
sti
mul
jnp
pop
sar
cmp
mov
jg
and
push
and
sbb
bound
jp
sbb
add
and
out
std
and
jle
mov
stos
pop
into
out
test
or
fst
pop
xchg
movs
xchg
and
jns
cmc
mov
fs
pusha
push
sbb
pop
or
and
iret
dec
test
cs
es
mov
mov
test
xor
mov
enter
lods
push
adc
fsubr
(bad)
cmp
jg
mov
push
mov
sub
add
lahf
das
pop
and
push
jp
add
repz
arpl
ds
push
sbb
fdiv
mov
aaa
jnp
aad
dec
push
mov
out
ins
push
scas
sub
mov
cmc
mov
or
test
out
out
aas
scas
out
adc
mov
daa
inc
push
mov
lods
rcr
sahf
add
pop
cmps
or
push
jnp
mov
loopne
repz
add
fucomp
sbb
push
and
mov
fwait
sub
test
outs
sub
dec
shl
dec
inc
test
xor
das
scas
scas
sub
or
jle
jmp
push
cld
imul
cmp
push
adc
xchg
mov
and
cmps
daa
cdq
fadd
mov
jbe
add
nop
xchg
test
or
stc
dec
daa
mov
add
mov
stos
iret
or
es
mov
fld
bound
adc
mov
or
sti
cmps
enter
cli
leave
jno
pop
xor
mov
inc
in
cmps
sbb
ftst
scas
inc
mov
mov
jg
shr
jmp
imul
daa
inc
lock
cmp
or
mov
les
xchg
xchg
push
adc
xchg
(bad)
jns
mov
or
bnd
mov
xor
out
test
shl
leave
adc
rcr
and
ret
into
inc
aaa
sbb
push
call
or
mov
and
push
(bad)
dec
fnsave
pusha
loop
pop
stc
es
pop
jns
mov
leave
call
xchg
fbld
stos
dec
add
ret
jae
(bad)
xor
xchg
(bad)
cdq
xor
mov
inc
add
out
push
fcomp
std
jg
or
(bad)
cmp
adc
mov
je
pusha
or
movs
push
cmp
or
sub
ja
mov
int3
out
xchg
stos
cmc
cmp
pop
dec
jmp
sbb
retf
push
js
sub
arpl
mov
test
dec
test
bound
outs
je
jmp
push
gs
sub
repnz
cdq
xlat
inc
dec
cmps
push
dec
(bad)
mov
dec
punpcklbw
sub
fmul
nop
adc
shr
pusha
sub
and
cmps
inc
arpl
cmc
call
or
fcomp
outs
xchg
jns
or
mov
adc
sbb
xor
jno
call
shl
jbe
repnz
clc
cmp
ins
xchg
jle
xor
xor
fist
fadd
ficomp
ja
(bad)
(bad)
push
aad
fisttp
hlt
or
sbb
cmp
adc
test
lods
pop
nop
jp
push
pop
(bad)
sahf
std
sbb
mov
hlt
cmp
adc
clc
adc
rcl
sbb
push
out
ror
loop
push
int
aas
mov
xchg
push
data16
jmp
call
jbe
xchg
aad
cmp
outs
fwait
aam
repz
xchg
mov
jo
pop
jge
fdivr
jne
push
in
mov
imul
fistp
cdq
sti
sbb
leave
sub
outs
pop
sub
shl
push
and
inc
out
jnp
lock
fldenv
mov
or
mov
mov
loope
pop
cmp
fwait
outs
cmc
in
push
pop
inc
sar
xchg
adc
sub
mov
aad
ror
ins
mov
fcomip
and
add
gs
push
xchg
sti
mov
jns
(bad)
pusha
jl
imul
push
fdivr
out
or
leave
jo
mov
add
adc
fidiv
mov
ins
xor
shl
jbe
(bad)
dec
adc
(bad)
jge
int
lods
jge
push
pop
loop
sbb
jg
jo
push
stos
(bad)
push
jb
push
push
(bad)
into
js
xor
sub
xchg
add
and
mov
stos
sub
int
add
xor
leave
or
mov
lods
pop
mov
out
or
leave
stos
fild
jmp
pop
ret
stos
aas
sub
xchg
mov
inc
mov
pushf
add
out
(bad)
or
push
bound
push
xchg
fs
dec
(bad)
or
pushf
bound
inc
mov
(bad)
or
xchg
sub
xchg
je
hlt
scas
mov
mov
std
push
aaa
sbb
inc
add
xor
jae
test
movs
fsub
xchg
push
call
mov
cmp
cmp
adc
xchg
dec
add
sbb
out
stos
jne
jbe
push
sbb
or
jmp
sbb
js
and
movs
xor
and
push
cmp
sbb
and
int3
mov
mov
stos
test
lahf
mov
imul
sbb
cmc
call
dec
jo
dec
adc
(bad)
jns
xor
cld
adc
cwde
jo
daa
mov
mov
in
imul
lahf
adc
jno
aas
sub
fcom
xchg
mov
sbb
mov
adc
aad
in
jo
and
xor
dec
mov
(bad)
stc
add
cli
inc
jp
sbb
lods
jmp
retf
outs
adc
cwde
pop
in
lock
aad
in
shr
scas
or
push
jnp
(bad)
dec
push
rcl
mov
movs
or
dec
add
and
inc
sbb
jae
vunpckhps
jmp
out
push
jns
jmp
push
jo
cmp
psubsb
xor
sub
mov
mov
lea
retf
push
or
dec
push
jbe
jmp
sub
add
shl
(bad)
mov
dec
fistp
out
fsubr
push
inc
inc
cmp
sub
inc
ret
ins
imul
adc
add
pop
sub
xchg
mov
and
popf
jecxz
pusha
sub
shl
(bad)
imul
fstp
cmps
pop
mov
or
xor
push
retf
adc
pop
sahf
sub
xor
add
ficomp
inc
add
xlat
cmp
das
popa
sub
rcl
adc
and
add
mul
push
imul
xchg
adc
shl
push
dec
pop
dec
dec
push
cmps
adc
pop
xor
loopne
fwait
and
sti
scas
dec
fimul
sub
aas
leave
movs
fidivr
xchg
bound
(bad)
test
or
sbb
aaa
pop
js
mov
int3
and
je
push
ja
push
pop
adc
mov
jl
lgs
fnstsw
push
out
dec
adc
sti
inc
xor
add
sub
shr
jmp
push
sbb
shl
and
xlat
cmp
push
inc
(bad)
movs
jp
sub
xchg
add
mov
mov
dec
pop
adc
push
inc
xchg
aam
int3
movs
jb
sbb
int3
mov
push
cli
mov
es
(bad)
iret
stc
mov
lea
and
jbe
sub
stos
mov
add
icebp
in
pop
mov
jne
mov
dec
das
in
stos
fidivr
mov
inc
xchg
mov
rcl
adc
lea
jmp
pop
inc
adc
pop
stos
cmp
sub
imul
jle
mov
ret
cmp
(bad)
out
fmulp
push
fldenv
adc
enter
nop
add
jb
xor
xchg
gs
lds
and
mov
or
test
xchg
dec
xchg
inc
mov
fsubr
and
add
out
(bad)
cmc
dec
xchg
ret
mov
sub
cmp
test
hlt
(bad)
push
test
xor
cmps
stos
sub
fimul
out
icebp
mov
les
aaa
pop
cmps
jb
ins
sub
sbb
and
sti
ja
inc
ins
test
fld
cmp
sub
and
das
call
pop
xor
fcmovu
sub
aas
cmp
pusha
(bad)
jbe
inc
out
sbb
imul
and
mov
cwde
lods
pop
pop
js
fs
dec
jl
dec
movs
dec
jp
add
xchg
lds
cmp
jle
xchg
xchg
cmps
jns
cs
dec
loopne
or
jns
bound
mov
pop
(bad)
ds
adc
iret
jns
push
int3
cwde
pop
or
jbe
mov
jmp
fs
ror
push
mov
dec
sbb
retf
jno
imul
and
call
loope
mov
mov
mov
lea
aaa
sbb
xor
and
add
xor
push
mov
test
push
add
push
and
scas
call
push
scas
dec
test
ins
std
and
cmps
jnp
in
or
push
int3
inc
retf
jne
or
jge
jge
rol
popaw
fwait
pop
lahf
sahf
sub
or
movs
cmp
ret
dec
pop
js
adc
fwait
adc
(bad)
outs
inc
lahf
pop
in
outs
aas
jmp
cld
dec
js
or
lds
mov
(bad)
mov
and
xor
ffree
dec
mov
sbb
or
pop
icebp
stc
ficomp
push
jne
frstor
es
push
xchg
frstor
(bad)
add
lahf
out
call
dec
sar
mov
sub
imul
dec
mov
dec
and
lods
add
inc
mov
push
cld
inc
bound
fs
gs
pushf
jge
cmp
push
(bad)
sub
cs
stc
jge
fimul
call
sbb
mov
psadbw
outs
lods
icebp
mov
call
stos
loop
and
les
pop
push
int3
mov
sub
inc
inc
cmp
push
(bad)
cmp
lahf
add
jge
(bad)
cmp
data16
or
(bad)
(bad)
stos
or
pop
mov
inc
mov
jmp
xchg
add
dec
adc
inc
and
in
pushf
cli
stos
xchg
aas
mov
pop
mov
jle
jecxz
xchg
(bad)
fadd
into
add
jo
bound
fwait
mov
mov
or
out
and
leave
jo
pop
dec
mov
or
push
cmp
retf
or
sbb
cmovnp
loop
mov
fwait
inc
(bad)
mov
push
test
dec
fcomp
adc
sbb
ror
or
inc
pop
mov
cmp
in
mov
(bad)
stc
pop
mov
mov
jmp
and
cmp
push
xchg
adc
lahf
add
aad
jg
or
inc
js
push
sbb
shr
pop
in
mov
ret
cwde
out
cmps
(bad)
push
nop
push
or
jp
mov
test
and
adc
xor
push
xchg
inc
int3
cmp
sub
sub
ins
iret
fbld
and
ret
cs
loope
into
push
pop
rcr
fs
movs
js
mov
not
stos
mov
fwait
div
aad
and
dec
push
mov
add
mov
xor
push
daa
scas
retf
int
loope
(bad)
fldz
out
test
dec
sbb
mov
int
rcr
test
mov
jl
outs
pop
(bad)
push
lock
cmp
cli
(bad)
cmps
enter
jns
stos
pop
jle
int
enter
jle
fdivrp
mov
js
call
mov
pusha
and
push
or
adc
push
xchg
loope
outs
xchg
lods
mov
mov
cmp
push
cld
stos
mov
dec
leave
or
aas
inc
mov
xchg
out
inc
(bad)
dec
(bad)
pop
push
test
sbb
push
pop
push
mov
repnz
fisttp
rol
movd
xchg
mov
jbe
test
and
push
xlat
mov
sub
into
cmc
jecxz
jae
jb
cmp
dec
jne
push
push
sbb
fwait
push
and
cmps
ins
fucomp
(bad)
loope
(bad)
mov
push
cld
mov
inc
sub
xlat
sbb
stos
scas
push
and
repnz
mov
int3
and
or
clc
adc
call
jne
loope
mov
(bad)
jo
out
dec
add
sub
mov
popa
in
fist
inc
push
aam
add
bound
mov
push
dec
mov
push
cs
dec
xchg
pop
lods
push
inc
aam
mov
pop
(bad)
push
dec
add
and
fnstsw
mov
mov
mov
sbb
xor
dec
push
xor
sub
cmp
pop
(bad)
mov
xchg
out
fld
inc
mov
fyl2x
or
sub
cmp
jae
and
aaa
mov
fwait
ud1
pop
and
sub
je
jns
mov
outs
fwait
add
mov
fs
loop
fs
xchg
fmul
cmp
xor
xor
(bad)
xchg
cdq
ret
xor
and
shr
dec
add
mov
mov
cmc
retf
je
jecxz
call
cmps
pop
sahf
mov
adc
xchg
repz
fadd
in
mov
test
lods
inc
add
push
popa
jl
push
jbe
mov
clc
jp
aam
mov
jo
ja
ins
fs
lahf
push
mov
adc
cmc
jmp
gs
jl
sti
lahf
xor
ret
or
and
pop
dec
or
jle
out
cmc
push
les
push
(bad)
dec
pop
adc
or
adc
mov
retf
pop
call
push
call
loopne
xor
and
loop
jbe
adc
clc
std
adc
inc
test
retf
fmul
pop
inc
int
or
jecxz
movs
fdiv
cwde
mov
jecxz
or
mov
out
leave
fild
push
or
mov
sahf
fdivr
leave
call
in
(bad)
jge
fld
outs
fisttp
stos
arpl
scas
mov
test
or
shl
push
outs
mov
sub
pushf
xlat
cs
fwait
push
movs
xor
mov
xchg
rol
xchg
add
jmp
and
leave
push
mov
ret
fs
mov
xchg
das
fdiv
int3
shr
out
hlt
movs
xor
adc
outs
jns
addr16
mov
hlt
sub
daa
jmp
dec
js
mov
popa
and
inc
gs
and
popf
pop
call
or
das
cmp
lock
pop
sub
adc
push
dec
scas
push
jbe
cli
xor
inc
sbb
pop
in
jbe
adc
inc
mov
mov
cmp
je
std
jge
pop
mov
pop
outs
cmp
loop
mov
push
sbb
push
mov
xlat
sahf
mov
gs
mov
adc
xor
push
ins
rol
pop
and
mov
ss
lods
aad
iret
pop
aad
adc
inc
cmp
jmp
xchg
jmp
popf
cdq
pop
xor
idiv
xchg
loopne
push
dec
mov
cmps
mov
dec
xor
jecxz
test
dec
push
test
(bad)
mov
mov
(bad)
inc
loopne
je
xor
mov
mov
inc
fidiv
call
or
xchg
lea
neg
retf
mov
ja
popf
or
jmp
xchg
pop
aad
xchg
daa
mov
add
sbb
push
jg
rcr
jae
cmps
mov
rcl
sub
stos
bound
std
(bad)
or
add
dec
cmp
pushf
mov
aad
pop
jae
add
push
jns
das
pop
out
cmps
mov
pop
pusha
xchg
rcr
add
jb
sbb
fst
mov
cmp
mov
jnp
mov
jp
xchg
adc
jmp
cmp
ret
lods
neg
pop
and
js
into
ret
stos
and
or
imul
neg
pusha
jp
sti
enter
scas
inc
mov
outs
push
sub
xchg
adc
fiadd
push
push
dec
out
bound
xchg
aaa
sub
jl
inc
loope
dec
or
(bad)
jne
mov
jp
sbb
and
cmp
sbb
in
mov
(bad)
cmp
jns
mov
cdq
rcl
push
sub
xor
jmp
mov
test
pushf
sar
repnz
mov
in
lods
xor
push
mov
mov
push
xchg
lahf
into
ins
outs
xor
call
mov
(bad)
dec
pop
sahf
lods
push
hlt
adc
sbb
xor
addr16
out
xchg
sahf
adc
fwait
data16
mov
pop
inc
adc
push
xor
(bad)
fwait
adc
mov
cmp
mov
dec
pushf
and
mov
push
sbb
daa
das
mov
je
jge
fwait
outs
lds
clc
pop
pop
(bad)
dec
jg
adc
pop
lods
enter
add
xor
fbstp
dec
pop
(bad)
push
loop
jo
mov
(bad)
sub
and
gs
dec
mov
add
arpl
mov
mov
xchg
cmps
fs
stc
cld
jne
mov
gs
pop
inc
fiadd
stos
rcr
enter
mov
cmp
push
jp
push
xchg
std
pop
sub
xor
or
inc
xor
add
(bad)
pop
pop
and
dec
dec
stos
pop
mov
fmul
pop
add
jae
outs
mov
push
movs
ror
mov
jno
fld
nop
cli
inc
dec
cmps
mov
or
xchg
and
jo
aad
push
test
push
jle
(bad)
cmp
and
inc
call
lahf
in
xor
push
sub
jne
jp
lea
and
dec
mov
call
dec
shl
sub
cmc
inc
add
pop
neg
retf
cmp
outs
cmp
loop
dec
(bad)
adc
test
sub
test
pusha
dec
xchg
shl
out
ror
scas
and
pop
(bad)
add
(bad)
jle
(bad)
jbe
dec
xor
push
xchg
ret
mov
jg
adc
jo
stc
les
scas
push
dec
fmul
clc
push
push
sub
push
addr16
sbb
mov
adc
retf
popa
and
xor
outs
sbb
(bad)
leave
cdq
push
mov
fs
xchg
mov
fwait
cld
cli
xchg
test
mov
xor
test
xchg
scas
cmps
stc
sbb
mov
in
push
cld
gs
inc
call
pop
(bad)
xor
gs
rcl
lds
fldenv
pop
xchg
les
std
jle
imul
and
inc
hlt
jmp
xor
sub
jmp
pusha
cwde
push
stc
and
xchg
push
inc
or
jmp
test
inc
fwait
xor
mov
out
jbe
repz
sub
cmp
sub
or
pop
imul
inc
movs
dec
fistp
loop
adc
sbb
aad
cmp
lods
mov
sar
sbb
(bad)
outs
(bad)
nop
(bad)
mov
enter
aaa
mov
and
xchg
jns
mov
in
add
and
jno
js
out
mov
dec
sub
add
pop
movnti
mov
push
rcl
sar
mov
fdivrp
stos
in
jnp
xor
ja
sub
or
imul
stos
xor
xchg
xor
iret
test
add
push
in
jecxz
and
mov
sbb
jecxz
retf
inc
aad
mov
mov
mov
fdivr
mov
aaa
(bad)
sahf
lods
ja
fsubr
dec
lock
je
ror
cld
jl
mov
adc
popa
loopne
imul
mov
and
push
stos
ror
xor
inc
movs
xor
sub
xor
ss
xor
lock
lock
push
repz
adc
into
or
out
or
xor
xor
je
inc
ret
in
cli
jecxz
adc
pop
adc
pop
hlt
imul
ss
les
xchg
(bad)
arpl
stc
jno
or
aad
ficomp
loop
mov
test
pop
mov
and
and
fimul
xor
mov
repz
sub
xchg
dec
inc
test
or
sub
push
lods
retf
dec
daa
imul
frstpm(287
jge
sub
adc
fnstsw
pop
lds
and
mov
je
lods
imul
fidivr
sub
jmp
sar
loopne
mov
sub
sub
xchg
jl
and
jb
pop
add
adc
jno
pop
inc
sbb
sbb
hlt
stc
adc
xor
jb
test
inc
fsubr
mov
adc
mov
jno
ret
push
cmc
mov
push
xchg
arpl
or
addr16
sbb
fimul
(bad)
(bad)
pop
and
test
xchg
(bad)
jmp
sbb
or
dec
inc
call
mov
fdiv
add
xchg
or
retf
out
out
pop
jmp
add
(bad)
or
sbb
call
ds
push
sbb
inc
mov
mov
bound
and
push
inc
daa
lods
pop
rol
jecxz
ja
in
lock
ins
test
je
jne
jb
cmp
test
pop
fcmovnb
jmp
test
add
jle
sbb
or
push
call
cs
popa
repz
dec
(bad)
aad
mov
push
xor
fisttp
ret
adc
cmp
icebp
jns
sub
lea
jmp
call
bound
dec
fs
nop
cmp
inc
sub
xchg
inc
and
cs
into
fs
scas
jle
or
in
jecxz
test
clc
test
jne
mov
icebp
xchg
sbb
stos
mov
dec
add
mov
movs
ins
sub
inc
lahf
test
xchg
push
into
mov
mov
out
icebp
aaa
cmp
and
sub
sub
xchg
test
aad
and
stos
inc
jno
push
sub
xor
fst
xlat
test
xor
loopne
pop
jns
mov
mov
shl
std
retf
les
mov
jmp
stos
div
mov
loope
(bad)
mov
push
cmps
and
cmps
outs
sub
nop
shl
jp
inc
ins
fnsave
hlt
add
mov
inc
in
mov
sub
stos
xchg
cld
mov
repnz
pop
inc
push
lods
mov
inc
xchg
(bad)
fwait
cs
jo
cmp
mov
mov
pop
ins
arpl
lea
(bad)
ficom
je
mov
das
push
jmp
mov
repnz
xchg
and
daa
jge
addr16
mov
lock
les
outs
mov
into
mov
jno
or
cmp
sbb
nop
retf
jp
xchg
clc
pop
call
cmp
mov
scas
cmp
xchg
jle
add
outs
add
fild
clc
mov
xor
fnstcw
jmp
(bad)
into
std
loope
push
jmp
mov
xchg
cwde
ins
and
movs
mov
and
push
inc
pop
pop
push
fsub
xor
pop
(bad)
pop
dec
inc
int3
cmps
mov
sbb
mov
pop
mov
or
pop
movs
imul
(bad)
(bad)
lods
(bad)
add
inc
cwde
nop
sbb
test
push
jne
xor
or
cwde
add
add
fs
mov
outs
fsub
mov
fs
sub
sbb
ins
add
mov
lods
push
call
fimul
and
sbb
outs
scas
jmp
leave
loopne
shr
cmps
mov
aaa
aaa
loop
or
or
adc
ja
push
fbld
push
and
into
(bad)
call
pop
stos
or
mov
mov
mov
mov
mov
ror
fsub
ror
sub
and
dec
jmp
push
outs
pop
xor
fsubrp
and
fwait
aad
adc
pop
dec
adc
js
ret
inc
sub
popf
sbb
ret
jle
test
fisub
or
in
xchg
imul
(bad)
cmc
push
mov
not
neg
xchg
mov
enter
ficom
bound
ret
dec
inc
data16
fwait
sub
arpl
push
mov
mov
addps
ja
xor
scas
je
xchg
pop
sar
cmp
cmp
fwait
jns
clc
adc
pop
enter
dec
inc
inc
inc
sbb
stc
pop
fs
rcl
js
and
jo
pop
fptan
mov
mov
jne
cmc
add
dec
inc
repz
push
sub
jne
sub
loop
shl
enter
ret
push
lods
cmp
ror
mov
add
in
nop
jl
lahf
loopne
sti
or
sbb
push
jae
(bad)
jmp
movs
inc
jmp
pushf
lock
add
test
mov
lods
push
inc
mov
and
out
test
xchg
jb
inc
add
inc
cmp
fbstp
pop
cmps
stos
lock
mov
in
int
int
popf
jns
(bad)
xlat
cmp
pop
pop
mov
retf
sub
push
cmp
outs
adc
lea
mov
mov
cmp
retf
leave
shl
push
clc
lock
jnp
sub
out
xor
adc
dec
clc
movs
imul
lea
inc
and
(bad)
aaa
ins
iret
(bad)
xchg
mov
sbb
shl
jns
ds
pop
xchg
ficom
jge
sbb
lds
dec
stc
mov
pop
loop
add
xchg
adc
test
jb
sbb
inc
sbb
pcmpgtb
xchg
movs
jmp
sbb
xchg
mov
xchg
nop
fidiv
jbe
retf
fsubp
(bad)
or
js
push
add
xchg
dec
(bad)
push
and
fwait
cmp
jo
je
lods
inc
cli
ror
je
or
push
fidiv
inc
aad
arpl
repnz
pop
xor
idiv
mov
push
std
es
data16
pop
in
ret
sbb
fcom
fdiv
sub
mov
pop
dec
mov
dec
test
mov
push
jae
mov
sub
push
popa
add
test
xor
pop
mov
xchg
(bad)
dec
dec
rol
(bad)
mov
sbb
inc
aaa
outs
inc
(bad)
xchg
add
lea
pop
xor
inc
iret
pop
lods
cmc
outs
mov
sub
xor
outs
cmp
aas
enter
(bad)
push
xlat
dec
xchg
mov
add
ss
pusha
ins
pop
xchg
sbb
nop
or
dec
movzx
ror
push
lods
adc
mov
aas
and
fdiv
lock
pop
inc
repnz
and
push
aad
mov
mov
jmp
adc
loop
shl
inc
mov
cmps
push
sahf
sub
xor
push
clc
mov
in
mov
fdiv
jne
rol
and
push
inc
jp
push
in
sub
pop
sbb
push
add
add
or
sbb
sbb
and
pushf
jg
adc
mov
cmp
jmp
pop
out
mov
dec
jo
jmp
pusha
mov
pop
bound
adc
add
sub
rcr
imul
clc
fucomp
inc
cli
add
icebp
or
cmp
mov
jae
push
cmp
aad
ret
push
outs
shr
xor
and
and
outs
lahf
je
mov
ins
xor
pop
xchg
sub
fcom
xor
dec
jge
mov
inc
ins
out
adc
pop
rcr
push
mov
sub
jmp
(bad)
mov
xor
pop
inc
pop
aad
arpl
call
scas
mov
(bad)
daa
ss
push
into
add
sahf
cwde
pop
and
shr
gs
stos
pusha
pop
push
fstp
xchg
frstor
daa
sub
adc
cmp
adc
pop
scas
pushw
(bad)
int3
in
(bad)
cwde
adc
jbe
add
fstp
jp
das
jnp
shl
aas
loop
mov
rcl
cmp
sbb
loopne
sar
cmps
in
push
mov
pop
sbb
out
pushf
dec
xor
call
pop
sub
popa
mov
dec
ret
mov
push
dec
mov
sbb
inc
pop
push
leave
shr
dec
(bad)
push
jmp
add
mov
test
je
push
sbb
jl
aaa
sub
dec
popa
(bad)
adc
and
add
mov
push
cmp
sti
jmp
pop
cs
lods
int
mov
inc
daa
cmp
mov
out
mov
xchg
js
adc
cli
cmp
xchg
psllq
imul
aaa
push
xor
mov
mov
iret
push
xor
lea
cld
mov
xchg
cmc
fsub
in
cdq
enter
jl
xchg
int3
xchg
bound
test
jnp
xor
xchg
test
sar
mov
xchg
mov
cmp
xchg
sahf
dec
sbb
outs
inc
movs
push
mov
gs
in
jo
push
jne
aad
sbb
addr16
sti
inc
adc
mov
fnstenv
adc
add
sub
jg
stos
xchg
lahf
add
and
popf
sbb
stos
mov
push
xor
or
mov
ror
pop
ss
pop
dec
icebp
dec
adc
ins
jg
mov
ror
stc
mov
les
push
dec
xor
mov
or
movs
inc
ins
sbb
inc
mov
mov
data16
sub
mov
fist
mov
or
test
hlt
dec
sar
jle
mov
push
test
(bad)
xchg
dec
adc
inc
in
add
mul
jg
je
dec
(bad)
fsub
sti
mov
jo
ins
or
xor
aam
lock
rol
push
ins
mov
dec
or
leave
aam
shr
in
jp
loopne
mov
xchg
loope
jnp
or
clc
mov
sbb
cs
inc
fwait
adc
mov
(bad)
mov
push
and
sbb
jb
outs
iret
pop
mov
shr
cdq
in
sub
cdq
add
push
out
adc
(bad)
jp
push
push
(bad)
xchg
lahf
jae
xchg
add
jnp
xchg
stos
xchg
add
xor
dec
push
out
cmp
push
aam
fwait
sti
fsubr
sub
mov
arpl
add
es
clc
ds
add
mov
mov
fisub
pusha
pop
mov
imul
inc
movs
aad
fld
mov
cmp
(bad)
sti
jmp
int
ret
jmp
sub
cli
pushf
mov
jmp
cdq
sbb
xor
mov
mov
iret
addr16
jp
mov
sti
in
scas
xor
scas
mov
stos
jbe
ds
call
lock
xor
xchg
sbb
ror
jle
icebp
in
jg
push
or
imul
bsr
iret
sbb
js
add
mov
dec
dec
adc
jnp
dec
adc
adc
xchg
dec
or
xchg
lock
jbe
imul
repz
fwait
lea
es
movs
clc
push
adc
sub
js
or
cld
xor
dec
(bad)
cld
test
or
jle
sub
imul
cdq
mov
xchg
and
jp
mov
not
gs
add
mov
push
adc
push
hlt
and
daa
sub
sbb
(bad)
jmp
shr
push
gs
(bad)
pushf
imul
or
lahf
xchg
ja
add
pushf
xchg
cwde
in
pop
cmp
mov
inc
push
and
mov
daa
or
jg
mov
inc
ret
rol
and
jne
loope
dec
in
lods
push
push
scas
pop
mov
push
(bad)
(bad)
dec
fxch
rcl
das
addr16
or
xchg
and
mov
mov
pop
xor
and
(bad)
dec
adc
xchg
adc
stc
pop
les
lock
in
(bad)
sub
call
int
cmps
cmc
ror
inc
sbb
popa
push
movs
(bad)
xlat
movs
inc
jp
das
xchg
jbe
aad
sub
mov
in
imul
in
xchg
push
adc
cmp
movs
or
push
xor
pop
xor
push
mov
mov
dec
push
sti
mov
inc
xor
xchg
inc
out
lahf
sub
scas
mov
jl
xchg
fcmovb
mov
inc
scas
test
ret
cmp
xchg
inc
mov
mov
dec
pop
into
retf
sub
retf
mov
adc
push
mov
and
xor
fdivr
mov
mov
pop
mov
xchg
jmp
dec
mov
push
mov
jae
xchg
fild
aas
dec
pop
lea
or
jl
or
cmp
leave
lods
jp
test
add
jo
(bad)
sub
pop
jg
(bad)
mov
push
jae
push
daa
stos
loope
outs
pop
(bad)
push
xchg
adc
loope
sbb
mov
mov
and
out
dec
and
repz
test
xor
test
shl
mov
mov
inc
jb
jne
addr16
push
fwait
test
push
cmp
popf
test
(bad)
jp
popf
jb
int3
ja
aad
mov
ds
push
xchg
inc
jle
call
aam
mov
out
add
xor
mov
dec
or
push
sub
stos
cmp
pop
pop
fsubrp
mov
cmp
test
xchg
jge
inc
nop
sub
cdq
repz
jmp
adc
mov
push
and
dec
cmc
dec
jmp
pop
and
adc
or
xor
pop
jne
adc
jno
adc
call
fsubrp
cwde
call
pop
pushf
push
ins
xchg
dec
mov
test
cld
dec
ds
rcr
add
cs
aaa
aaa
call
gs
adc
mov
in
retf
xor
mov
setno
jo
push
dec
xor
(bad)
mov
ret
mov
cli
in
jb
shr
xchg
or
call
fild
xchg
push
add
fucom
mov
xor
mov
jno
(bad)
movs
mov
jmp
jbe
iret
push
int
dec
push
outs
add
push
leave
mov
(bad)
or
mov
shl
and
icebp
adc
sahf
adc
xchg
mov
xor
adc
aaa
mov
and
dec
dec
js
add
pop
sbb
shl
ret
pusha
stos
cmp
mov
mov
jg
push
lea
add
test
add
retf
dec
je
xchg
or
imul
mov
push
mov
and
pop
mov
sub
fs
test
adc
dec
push
inc
inc
push
aad
xchg
inc
(bad)
stos
add
sbb
jmp
jmp
push
mov
in
pop
ja
cmp
cld
retf
jg
mov
outs
icebp
(bad)
ss
lods
jecxz
mov
mov
dec
pop
inc
xor
lea
(bad)
push
ret
(bad)
pusha
(bad)
repz
pushf
xor
add
in
push
and
and
jno
sub
fisubr
lds
push
mov
cwde
mov
lea
int
mov
and
dec
and
iret
icebp
pop
iret
call
cmp
sete
jg
lods
mov
into
pop
iret
ss
psllq
mov
add
mov
das
cwde
and
dec
je
inc
fcomp
imul
jle
and
ins
out
aas
xchg
inc
fnstcw
pushf
jmp
and
inc
dec
ds
daa
push
(bad)
or
push
(bad)
imul
cmp
push
sub
(bad)
mov
cmc
pop
lock
shr
retf
loopne
or
cmp
pop
lods
clc
dec
jne
push
mov
pop
inc
(bad)
and
adc
cld
adc
push
mov
mov
int
push
nop
sub
lods
je
iret
pop
dec
jno
pop
les
and
fisttp
inc
adc
(bad)
pop
or
mov
dec
imul
xchg
stc
xor
pushf
retf
sub
fwait
sub
in
mov
pop
cwde
dec
cli
sahf
cmp
inc
mov
add
fs
inc
stos
retf
push
push
lea
add
sbb
(bad)
movs
mov
(bad)
int3
mov
cmp
jge
jp
cdq
or
add
out
ds
mov
test
shr
fldenv
and
lds
out
addr16
sub
sbb
and
xor
addr16
fadd
imul
mov
jbe
aaa
call
imul
cmp
shr
sub
fist
or
or
mov
push
sub
push
sub
adc
adc
ja
inc
sub
lods
nop
dec
push
push
mov
ret
cli
mov
test
dec
xor
pop
je
xor
push
push
bound
daa
psrld
add
pushf
repz
jno
or
sti
add
xchg
outs
add
jns
js
clc
adc
xlat
push
cs
daa
clc
sbb
test
ret
inc
ficomp
mov
cvtps2pi
jg
stos
cmp
test
xchg
pop
cmp
mov
cwde
sbb
or
(bad)
xchg
sub
js
sti
retf
dec
lea
add
dec
sahf
pop
and
jae
inc
enter
je
cld
mov
sar
or
or
jmp
in
xor
xchg
add
aaa
fiadd
and
test
data16
repnz
and
ds
imul
mov
adc
outs
mov
cmp
inc
sbb
mov
imul
mov
adc
out
xor
fidivr
fild
mov
mov
icebp
jge
add
fxch
xor
push
pop
dec
jne
fdiv
add
in
sahf
push
pop
inc
jecxz
sub
daa
jmp
jo
nop
sar
mov
not
sti
aaa
or
jb
xor
leave
in
cmp
cmp
(bad)
stos
stos
cmp
xchg
xor
aas
loopne
adc
or
and
mov
xchg
or
add
sti
mov
pop
test
mov
sbb
cwde
stos
gs
call
xor
sbb
arpl
fdiv
push
jns
add
rcr
shr
aam
in
jmp
push
shl
pop
shl
movs
cmp
push
xor
dec
imul
jl
push
fidivr
jp
jl
mov
mov
loop
add
jge
wbinvd
fwait
dec
mov
test
frstor
dec
dec
xchg
dec
add
jne
dec
pop
sbb
jne
stos
push
aad
(bad)
dec
and
cmc
sbb
inc
dec
loop
aas
sub
xor
mov
imul
sbb
(bad)
in
jg
dec
or
mov
rcl
lock
cmp
mov
adc
push
sub
lds
rcr
or
push
test
jg
call
push
xor
shr
sbb
hlt
jge
and
mov
(bad)
fmul
add
pop
mov
into
jb
mov
xchg
inc
add
out
in
ins
pop
sbb
test
int
hlt
retf
or
fdivrp
imul
or
and
pop
mov
sahf
(bad)
pop
cwde
outs
mov
or
cmc
fmul
in
push
mov
add
js
daa
adc
pop
fisttp
add
and
jp
push
pop
test
stc
inc
jne
sub
in
add
das
pop
fidivr
inc
repz
cwde
mov
imul
cvttps2pi
jp
pop
test
xchg
mov
bound
addr16
syscall
cmps
xchg
imul
xor
bound
pop
lea
dec
cdq
xchg
dec
div
cld
in
movs
push
pop
leave
enter
cwde
and
mov
lea
inc
call
shr
sar
sbb
in
je
or
stos
or
add
inc
mov
movs
pop
mov
mov
js
into
ror
sub
dec
pop
outs
xchg
xor
mov
cwde
and
push
and
stc
xchg
inc
mov
ins
mov
mov
and
dec
popa
dec
cmps
outs
cmc
cdq
add
xor
in
fild
std
sbb
pop
xchg
cmp
push
or
je
push
gs
std
inc
and
cli
and
mov
repnz
dec
stos
sub
addr16
or
cmp
movs
out
ret
cs
js
in
aas
xor
imul
es
push
call
pusha
push
jmp
aad
mov
adc
retf
ss
pop
push
or
push
push
mov
(bad)
mov
js
mov
inc
mov
icebp
nop
add
sbb
add
ins
imul
fs
pop
mov
(bad)
jae
test
sub
sti
out
adc
fsubrp
push
fimul
bound
mov
jmp
retf
repnz
fs
push
xor
loope
push
cwde
bnd
xlat
clc
test
cmps
dec
or
add
stos
adc
xchg
jo
mov
jecxz
xlat
dec
aaa
mov
mov
or
push
mov
jg
sbb
dec
inc
xor
sub
xchg
mov
scas
and
inc
dec
shl
cdq
stos
scas
stc
push
mov
aad
pop
addr16
daa
int3
dec
in
xchg
fidiv
mov
cwde
cmps
stos
inc
in
xlat
das
and
pop
lds
lock
lea
cld
inc
mov
inc
fsub
pop
lods
test
int3
mov
xlat
pop
push
(bad)
jns
daa
mov
sar
ret
adc
or
push
push
mov
mov
nop
mov
cmp
and
and
pop
dec
leave
xchg
(bad)
fimul
jbe
ins
das
push
shr
jecxz
retf
jno
push
inc
outs
out
cmp
in
add
repz
adc
pushf
out
stos
jb
xor
fisubr
sbb
in
mov
rcr
pop
aaa
jge
dec
cmp
in
mov
aaa
xor
mov
mov
adc
mov
xlat
xor
cmps
aad
rcl
fmul
outs
or
fadd
mov
pop
jae
ins
aad
jle
(bad)
div
les
(bad)
not
pop
mov
dec
fistp
lahf
icebp
imul
out
scas
mov
pop
in
movs
mov
inc
mov
and
in
std
push
fisub
or
sub
and
and
cmp
rol
adc
pop
ds
jae
xchg
(bad)
mov
adc
test
inc
add
mov
and
or
push
xor
in
sub
imul
test
mov
adc
xor
mov
icebp
pushf
jbe
fst
mov
xchg
xchg
dec
mov
jne
std
imul
je
sbb
sbb
loope
imul
jb
add
mov
in
sub
addr16
push
xor
jg
sbb
scas
lods
xchg
inc
sti
push
xchg
jg
push
aad
and
inc
jnp
or
(bad)
sbb
es
add
sbb
adc
xor
xor
repnz
xor
inc
(bad)
stc
dec
in
pop
and
pop
pusha
adc
fistp
cmps
xchg
sbb
test
or
push
leave
adc
or
rcl
sbb
push
test
test
dec
jnp
iret
mov
mov
push
or
nop
out
push
mov
mov
mov
pop
add
xor
mov
xchg
jp
fnstsw
adc
push
mov
jmp
push
test
in
add
scas
call
dec
mov
or
add
lock
sbb
or
mov
mov
ds
arpl
sbb
sbb
and
pop
sub
addr16
repnz
aas
(bad)
jmp
and
push
xchg
sub
jb
popf
pop
add
mov
aad
add
pop
adc
cld
lock
sahf
sub
inc
inc
mov
lahf
or
lods
xchg
int
dec
xchg
je
dec
mov
in
(bad)
call
inc
(bad)
ins
xchg
jnp
xchg
mov
imul
pop
shr
xchg
dec
mov
(bad)
test
daa
aas
mov
xor
dec
xchg
mov
popa
imul
cmp
rcr
add
outs
push
popf
mov
aam
jp
(bad)
cmp
mov
pusha
and
dec
out
daa
fimul
cmp
xchg
adc
jecxz
ins
int
shr
rcl
out
unpcklps
sub
adc
cmp
xchg
sub
into
int
xchg
pop
and
arpl
shl
dec
inc
icebp
jge
push
std
push
loopne
mov
mov
dec
dec
adc
adc
pop
and
jne
les
aad
dec
data16
pmulhuw
test
push
jns
adc
push
dec
mov
les
add
lahf
mov
mov
out
mul
ret
daa
stos
sahf
and
lahf
sub
add
or
push
cmp
fmul
mov
pop
or
jae
test
mov
jmp
rcr
and
call
retfw
cmp
or
loop
or
loope
add
jo
in
jmp
ret
dec
shl
sar
xor
push
stc
in
mov
js
(bad)
out
adc
repz
stos
(bad)
sar
pop
pushf
xor
inc
pop
mov
stos
sbb
jnp
pop
xchg
and
ins
mov
mov
nop
ja
cmps
loop
cmc
stos
aam
call
sbb
mov
sbb
or
daa
pop
stos
inc
retf
fisubr
imul
inc
mov
pusha
mov
and
mov
and
std
cli
shl
int3
adc
sub
iret
aam
loope
imul
mov
or
adc
or
mov
inc
mov
int
or
sub
mov
fisttp
push
aam
lds
sbb
mov
ins
rol
pop
mov
push
mov
clc
inc
add
pop
nop
loope
in
inc
add
xchg
rcl
mov
sbb
dec
inc
fwait
pop
lods
cmp
loope
js
addr16
fs
mov
xchg
lahf
sbb
sbb
xchg
add
loop
xor
sbb
sub
push
and
(bad)
ffreep
mov
dec
aad
push
mov
jnp
sbb
mov
(bad)
sbb
imul
push
sub
imul
sti
xor
add
jmp
sbb
mov
mov
ds
or
retf
hlt
sub
loope
outs
dec
out
adc
jmp
sbb
mov
fistp
test
repnz
loopne
pop
ja
xchg
pop
pop
mov
shl
xlat
sub
jle
push
loopne
ret
sub
(bad)
jmp
jb
repz
push
mov
and
mov
outs
pop
jb
pop
sub
call
pop
push
hlt
xor
ficom
fwait
shl
stos
pop
icebp
arpl
icebp
xchg
bound
add
and
mov
push
dec
cmp
fcmove
jae
xchg
mov
cs
enter
mov
jmp
pop
sub
sub
loope
or
mov
bound
daa
push
jg
lahf
jb
xlat
mov
test
add
in
sub
jo
rcr
mov
add
retf
retf
icebp
inc
(bad)
fldcw
scas
popf
mov
rcr
mov
jmp
(bad)
mov
mov
data16
mov
(bad)
(bad)
fld
(bad)
data16
and
and
jns
add
xchg
cmp
neg
jecxz
pop
icebp
jge
jmp
out
mov
mov
sub
dec
inc
ds
frstor
pop
pop
adc
std
inc
cmp
addr16
addr16
push
jmp
fucomi
dec
adc
lock
jb
sbb
enter
inc
jbe
sti
and
mov
jnp
mov
dec
mov
repnz
jmp
js
rol
rcr
lds
aaa
dec
adc
shl
cmp
mov
das
jle
call
mov
test
aad
into
sbb
pushf
test
mov
icebp
retf
sub
fsubrp
div
mov
mov
test
sti
mov
ins
std
mov
or
mov
ds
aam
jle
pop
out
jne
mov
ins
sbb
test
pop
xor
jo
loopne
inc
ret
mov
push
mov
shl
inc
shr
scas
lods
mov
je
sub
xchg
cmp
jmp
ret
sbb
xchg
and
inc
mov
not
or
and
push
cmp
out
ror
xor
icebp
mov
xlat
lock
adc
das
mov
inc
je
add
test
cld
xor
(bad)
in
push
push
data16
pop
addr16
test
shl
daa
lock
jo
adc
stc
xchg
cmp
fdiv
das
in
out
push
xchg
mov
loopne
mov
stos
(bad)
idiv
pushf
out
add
add
outs
adc
push
loop
and
dec
jae
and
xor
daa
pmaddwd
hlt
pusha
mov
dec
lea
or
sub
add
cli
(bad)
movs
call
mov
mov
loope
sub
fnstcw
test
iret
add
and
movs
pop
out
jl
cmc
cmp
aad
push
mov
cli
loopne
hlt
push
call
test
ror
popa
cmp
les
pop
xor
adc
xor
and
xchg
test
and
adc
out
push
daa
xor
(bad)
(bad)
sti
loopne
xlat
cmp
jle
add
jne
mov
sub
xchg
fstp
imul
pop
cmps
sbb
xchg
lock
rol
jns
retf
jg
jecxz
mov
and
xor
adc
cmp
push
aam
inc
inc
pop
inc
pop
push
sahf
mov
or
sahf
xchg
xor
in
out
jae
push
mov
ret
fs
scas
push
add
mov
fist
cmp
cmp
dec
pusha
(bad)
out
loope
sub
sub
mov
dec
jae
mov
cmp
test
shl
test
cld
movs
stos
leave
xchg
ret
push
adc
je
popa
call
sub
mov
(bad)
out
mov
pusha
sub
lahf
pop
mov
xor
pop
fdivr
shl
dec
call
inc
or
adc
std
inc
lock
sub
ins
rcr
cmp
xlat
imul
fild
inc
iret
or
xchg
out
mov
pop
cmc
(bad)
inc
mov
aad
mov
mov
les
cmp
and
push
push
adc
pop
out
fcmovnu
dec
fild
rcl
inc
mov
lods
ret
lahf
mov
aam
push
(bad)
cmps
jnp
int3
mov
xchg
scas
or
fstp
jbe
stos
lods
lods
ins
rcl
movs
lds
cdq
jp
test
xchg
out
repnz
int
out
sub
jl
adc
lock
mov
test
fmulp
iret
ror
jne
pop
out
pop
cmp
popf
jnp
push
or
mul
ret
jbe
sbb
pushf
cmp
inc
and
mov
cmp
jmp
ins
cwde
sbb
pop
push
call
test
movs
repz
ins
fs
push
inc
stos
shr
push
movs
out
nop
adc
test
adc
retf
inc
xchg
lock
bound
sahf
sahf
cmp
sub
fnstsw
dec
mov
mov
and
mov
sbb
scas
add
cdq
cld
inc
jo
pop
push
mov
jecxz
pusha
xchg
xor
jbe
mov
retf
and
add
mov
les
lods
sub
aaa
out
test
pavgw
ins
imul
cmp
inc
enter
in
fst
and
cmp
mov
sbb
dec
fdivp
push
loop
jb
cmp
and
imul
stos
scas
call
dec
or
dec
xor
test
pop
loope
ret
les
sub
xlat
ins
movs
stos
aam
into
aaa
sub
inc
imul
lock
repz
mov
int
inc
mov
inc
or
cwde
retf
in
cmps
iret
fimul
outs
lods
jae
out
mov
jmp
je
jne
xor
jns
imul
mov
and
(bad)
imul
or
fwait
adc
out
call
mov
mul
in
sahf
cwde
je
bound
call
mov
push
sub
ret
aas
inc
mov
scas
ja
pop
lds
ror
mov
sub
inc
popaw
jmp
mov
xor
sub
sbb
retf
pop
jg
mov
jge
pop
sub
cld
cmp
les
into
pop
movs
adc
mov
call
or
pop
dec
xchg
leave
jnp
imul
fldl2e
jge
adc
pop
mov
lea
data16
jae
movs
mov
adc
jno
xor
popa
cmp
or
nop
(bad)
jae
pop
inc
mov
cmp
xchg
fist
inc
fisttp
dec
arpl
add
es
pop
adc
xor
mov
cld
add
mov
iret
xchg
pop
clc
movs
and
loope
cld
les
and
lds
dec
lea
in
adc
addr16
data16
or
mov
ds
inc
pop
jns
or
dec
pushf
loopne
stc
jae
mov
xchg
rcr
inc
mov
addr16
cmp
test
fs
stc
pop
adc
retf
xor
leave
mov
in
repnz
gs
daa
push
scas
das
into
cmp
es
mov
test
mov
aam
pushf
stos
aas
mul
addr16
push
mov
push
jns
sar
sbb
test
call
ins
or
(bad)
out
loop
or
mov
loopne
das
lea
nop
cmp
shl
xor
lods
push
cmp
call
rol
xchg
push
adc
not
hlt
cmp
sar
sub
(bad)
in
idiv
mov
sbb
(bad)
sar
lea
pop
(bad)
jmp
scas
xchg
mov
dec
mov
xchg
(bad)
sbb
push
push
mov
loopne
rcl
aad
fadd
jbe
mov
xor
imul
je
inc
add
xor
dec
outs
mov
aad
sbb
pop
adc
fidivr
bound
(bad)
mov
(bad)
int
call
gs
jae
test
popa
xchg
xchg
ins
jns
int3
mov
and
push
xchg
mov
sub
loop
adc
sub
cmp
xchg
shl
pop
lds
pop
cmp
das
xchg
lds
popa
xchg
pop
cs
popa
(bad)
sub
mov
je
sbb
xor
add
imul
and
dec
loop
rcl
aas
mov
lahf
in
mov
nop
fsub
push
arpl
retf
mov
lods
into
in
call
inc
jne
hlt
imul
loop
(bad)
inc
push
mov
scas
add
mov
mov
movs
mov
mov
outs
mov
sub
and
adc
xchg
mov
ret
dec
fsubr
inc
adc
rcl
jb
pop
test
add
je
jp
sbb
adc
xor
push
mov
xchg
bound
sub
jo
inc
inc
jle
and
xchg
push
push
into
mov
or
fild
daa
add
icebp
mov
rcl
repnz
mov
call
out
mov
push
sets
pop
out
shl
dec
test
outs
pop
pop
test
sbb
je
xchg
adc
fisub
jb
(bad)
enter
cld
sub
sbb
xor
inc
dec
call
(bad)
lods
sub
mov
mov
fwait
mov
xor
fmul
fisubr
jle
jbe
loopne
pop
mov
mov
cmp
mov
(bad)
push
sub
lods
(bad)
pop
xlat
pop
popf
push
inc
dec
sub
iret
sub
data16
dec
(bad)
and
retf
push
push
add
shl
pop
adc
movs
mov
ins
jb
xor
mov
push
enter
popf
arpl
dec
stos
mov
jmp
ins
pop
sub
mov
sub
xor
loopne
jb
push
mov
daa
cmp
xchg
int3
test
xchg
test
jbe
outs
sub
mov
pusha
lds
mov
pop
fsubr
fidiv
retf
mov
sub
out
data16
jmp
into
std
push
aad
or
shr
jg
xor
inc
cmp
fstp
push
mov
or
(bad)
(bad)
xchg
scas
(bad)
xor
jnp
sub
sub
adc
inc
mov
xor
inc
aaa
mov
mov
or
clc
dec
mov
xlat
scas
adc
retf
out
sti
cwde
in
repz
fldenv
call
or
int3
cmp
lahf
not
fld
stos
dec
sbb
xchg
and
jae
ret
enter
fwait
mov
add
test
inc
mov
test
mov
fistp
jae
dec
cmp
xor
mov
cmp
pop
pop
push
ja
dec
mov
adc
pop
jo
pop
mov
mov
or
cmps
test
aad
sub
sub
dec
dec
or
and
xor
jle
enter
int3
mov
ja
and
dec
xchg
mov
add
lods
dec
xor
or
repnz
xchg
imul
ss
adc
iret
daa
add
mov
add
cwde
pop
cdq
push
inc
into
cli
(bad)
ins
fidivr
dec
sub
sti
fimul
dec
sbb
out
cmc
sub
ror
lahf
je
iret
cmp
mov
rcl
popa
into
int3
punpckhbw
jg
rcr
and
dec
aaa
in
and
jnp
scas
dec
popa
mov
pop
test
mov
adc
mov
xor
jp
pop
xor
int3
rcr
popf
dec
lea
dec
jp
dec
push
dec
pushf
mul
shl
xor
cmps
ins
or
bound
sub
retf
sbb
dec
sbb
and
test
push
push
inc
sbb
sbb
sub
aaa
arpl
sbb
sahf
cmp
mov
jno
ficom
push
call
cmp
push
adc
add
push
inc
adc
fimul
cmps
cmp
mov
mov
aaa
ret
and
or
cld
shl
mov
xlat
arpl
xor
and
call
mov
and
adc
(bad)
outs
xor
aam
hlt
pop
sbb
(bad)
movs
push
fdiv
pop
xchg
adc
retf
bound
je
mov
or
(bad)
imul
and
icebp
outs
jo
xor
jle
or
cmp
hlt
aaa
inc
pushf
hlt
mov
or
popf
and
dec
adc
push
shl
pop
test
dec
jno
jmp
or
icebp
sbb
std
ret
gs
push
adc
enter
mov
je
loop
mov
out
cld
ficomp
inc
cmp
movs
sbb
xor
add
lahf
adc
inc
jbe
call
xor
cmp
cmp
ret
cmp
call
pop
xchg
repnz
or
sbb
imul
or
inc
pusha
sub
cli
fld
sbb
nop
stc
mov
ss
call
cmc
and
aam
mov
pop
into
pop
adc
lods
adc
pop
cld
leave
fbld
cli
xchg
pop
addr16
int3
out
jne
neg
sub
aad
fst
mov
mov
xor
popa
or
or
sub
ja
out
addr16
sub
dec
int
mov
adc
xchg
dec
sub
push
mov
loope
pushf
das
adc
xchg
fimul
push
ins
mov
scas
dec
out
cli
sub
cmps
xlat
lods
push
mov
dec
retf
push
xchg
inc
push
push
push
ret
fwait
xor
adc
xor
stc
sub
shl
jmp
push
lahf
xor
jmp
xor
mov
xor
sub
jge
add
cmp
sbb
mov
pop
jbe
pop
pop
push
aam
pop
loop
jge
jg
test
push
imul
ins
das
dec
dec
je
mov
clc
xchg
sub
or
fsub
mov
jg
call
icebp
call
mov
jecxz
xor
loope
icebp
mov
adc
cmp
(bad)
mov
xchg
jbe
aas
cmc
ins
ror
xchg
adc
out
cs
aaa
out
lds
mov
fisttp
inc
(bad)
movs
xchg
in
pop
adc
add
and
movs
jae
inc
fsub
cwde
mov
idiv
dec
mov
mov
jmp
and
mov
out
inc
push
cmps
ja
cwde
jae
stc
add
jae
or
mov
xor
jl
enter
pop
loopne
jo
push
sti
and
jecxz
or
pop
movs
or
aam
out
lahf
inc
xchg
in
xor
mov
dec
stos
sub
and
repz
jg
fisubr
int3
pop
daa
lods
xor
(bad)
or
sub
cli
inc
bound
push
inc
xchg
dec
stos
popa
sbb
pop
mov
jp
xor
or
mov
loope
xor
into
jb
aas
xor
inc
xchg
daa
sbb
push
mov
xchg
and
test
(bad)
push
or
and
(bad)
cli
pop
jbe
loop
shr
repnz
jp
dec
ds
or
mov
std
jbe
sbb
cdq
dec
pop
cmp
dec
jecxz
clc
inc
push
loop
jo
jo
test
and
sbb
add
add
mov
hlt
sub
in
cmps
ret
je
in
sbb
pop
cdq
rcr
xor
push
test
shr
(bad)
ja
stos
mov
add
pop
gs
push
jo
push
or
cwde
nop
cmp
out
xchg
pop
adc
inc
hlt
lods
cmps
mov
lea
push
mov
lods
push
inc
cmp
push
xchg
outs
movs
imul
fiadd
iret
movs
lahf
shr
adc
loop
jns
stos
push
add
mov
adc
mov
jb
push
stos
pop
sbb
cmp
xchg
inc
sbb
mov
xlat
jecxz
sbb
push
addr16
pop
adc
add
pop
inc
repnz
iret
bound
sub
(bad)
jmp
gs
push
mov
ins
clc
fmul
in
in
fnstsw
out
pop
push
out
ret
xor
dec
stos
pop
and
(bad)
jmp
sub
mov
fdivr
movs
or
retf
jns
mov
or
adc
cs
push
retf
call
pop
scas
icebp
adc
mov
mov
popa
pop
push
sbb
mov
je
inc
call
jl
adc
adc
cmp
mov
cmps
xor
and
mov
inc
cs
mov
xchg
cmps
cwde
mov
sbb
push
cmp
(bad)
test
iret
pop
mov
push
add
dec
sub
leave
xor
dec
mov
lock
cmp
add
in
stos
shr
popf
and
lods
pop
xchg
mov
or
repnz
sub
mov
dec
into
loopne
icebp
push
and
out
cld
dec
or
jmp
xchg
jle
mov
dec
pop
loope
mov
mov
pop
xchg
outs
retf
jmp
scas
xor
and
stc
lahf
jge
fisubr
cmp
xor
sub
or
repz
ins
nop
push
mov
call
ret
sbb
fsubr
sub
cmps
mov
cwde
sbb
mov
ins
out
jmp
push
mov
ins
mov
in
push
jg
and
leave
inc
sub
cmps
loopne
ins
scas
mov
int
dec
add
shl
xor
push
mov
cmp
shl
pop
add
mov
mov
xchg
jl
dec
mov
enter
aam
shl
in
mov
pop
mov
pop
mov
or
fcomp
mov
rol
push
cmp
add
push
aas
outs
xchg
inc
enter
mov
cmp
mov
pop
(bad)
push
xchg
leave
pushf
xchg
int
(bad)
out
(bad)
aad
(bad)
jno
mov
sbb
inc
push
jge
je
frstor
pop
loope
(bad)
mov
and
mov
pop
pushf
cmp
inc
nop
adc
out
sbb
sbb
xor
sbb
dec
jbe
aam
out
push
jae
loop
bound
mov
jo
push
mov
jle
fwait
les
mov
push
js
addr16
addr16
xchg
jns
push
mov
fmulp
out
loopne
pop
sub
stc
mov
jp
cdq
lods
inc
cmc
mov
stos
push
clc
inc
sub
icebp
stos
cmp
cwde
std
jb
xchg
dec
mov
mov
xchg
add
test
sahf
lea
push
sti
cmp
ds
leave
cld
imul
mov
(bad)
cmc
push
jle
pop
mov
pop
popf
sbb
mov
and
cli
mov
add
xchg
mov
push
fldenv
in
pop
out
movs
xchg
pusha
sbb
cmps
or
dec
mov
repz
(bad)
(bad)
(bad)
jae
aad
outs
add
add
jp
xchg
mov
gs
xor
or
mov
fld
call
(bad)
in
push
cs
sbb
mov
leave
(bad)
iret
or
push
mov
addr16
mov
jg
cld
ins
arpl
mov
out
mov
pop
mov
shl
pushf
sub
xor
outs
cld
fnstenv
inc
sub
and
sbb
push
out
ror
out
pusha
mov
adc
lahf
call
ss
fnstcw
lods
jo
movs
aaa
add
push
xchg
mov
add
int3
xor
sbb
xchg
(bad)
mov
hlt
ds
push
loopne
out
loopne
cdq
sub
jmp
sub
sub
rcl
pop
mov
mov
pop
js
jmp
in
test
gs
div
fisttp
fs
fistp
clc
imul
lods
cmps
ffreep
and
sub
mov
jne
bound
out
addr16
fdivr
pop
push
cmp
fdivr
hlt
mov
pop
mov
xor
iret
aam
test
aaa
leave
jbe
jmp
test
repz
sar
js
cmc
fcomp
or
test
cmp
cmp
outs
sahf
mov
cmp
nop
inc
mov
in
mov
or
fst
xchg
xchg
outs
mul
cmp
clc
mov
mov
fst
cld
addr16
jmp
movs
scas
in
aam
jg
cld
inc
mov
test
push
pop
push
and
inc
mov
jne
pop
mov
jp
imul
clc
pop
sbb
inc
imul
ins
loopne
retf
sub
shl
xchg
inc
mov
test
js
outs
sti
cmps
ds
mov
push
pop
div
sub
lea
addr16
pop
mov
xor
pop
pop
jo
xor
push
mov
jl
dec
aam
(bad)
sub
jmp
les
mov
in
inc
test
push
jb
jge
push
xor
outs
lods
mov
fstp
xor
sti
mov
xchg
pop
iret
pop
(bad)
ja
and
cmp
add
pusha
mov
inc
mov
mov
mov
out
fild
das
cli
les
mov
jnp
lock
sub
inc
hlt
das
fisubr
push
icebp
inc
lock
sahf
(bad)
and
sbb
cmp
jne
in
fist
or
enter
leave
dec
retf
ins
test
fisubr
fisttp
xor
in
adc
stos
push
cmps
out
outs
inc
call
lock
fldenv
aad
mov
xchg
jns
push
pop
(bad)
dec
test
sti
les
xchg
nop
add
push
xchg
adc
test
xchg
int
jne
ds
fcomp
retf
daa
outs
je
pop
pop
loop
push
jg
ins
pop
adc
and
es
add
movs
push
jl
mov
xor
(bad)
cmp
and
xor
mov
sub
pusha
(bad)
(bad)
cmp
shl
sbb
jnp
adc
xor
sbb
fnstsw
mov
mov
mul
stos
pushf
lods
add
mov
in
in
jne
mov
sbb
cmp
test
ss
out
push
je
cmp
xchg
jnp
xor
jg
jo
inc
push
cmp
mov
(bad)
push
mov
mov
sub
sti
js
mov
daa
adc
fbld
stos
sahf
call
add
or
push
shl
dec
dec
es
retf
test
mov
outs
ins
in
lds
pop
bound
lds
les
in
or
xchg
dec
loopne
arpl
idiv
in
and
jmp
dec
push
sbb
sub
mov
xor
fsubr
imul
and
jmp
lods
aad
aad
push
aas
test
jmp
lock
sub
and
inc
mov
mov
aam
push
fsub
push
repz
and
cmps
pop
icebp
sbb
hlt
in
dec
xlat
cmp
out
jbe
mov
push
mov
scas
lods
pop
sub
movs
mov
sbb
test
cmc
jmp
cwde
or
jb
repz
shl
mov
movs
outs
jnp
dec
xor
pop
cmps
(bad)
gs
xor
mov
cmp
mov
div
in
into
sbb
cwde
pop
test
cli
sbb
rol
fld
dec
out
mov
fisttp
or
addr16
cmp
sub
or
lahf
ret
sbb
and
mov
dec
sti
fwait
cwde
inc
repz
or
ds
xlat
push
inc
and
push
scas
aaa
int
(bad)
mov
adc
arpl
mov
cmp
mov
(bad)
cmp
test
inc
rol
ins
xchg
mov
push
(bad)
sahf
bound
and
mov
in
movs
fisubr
dec
popf
ja
pusha
ror
cmp
xor
jne
cli
lods
cs
mov
imul
inc
imul
dec
sbb
mov
lahf
xor
(bad)
cmp
fild
jle
add
xlat
pop
add
div
mov
mov
lea
loop
shl
pop
dec
inc
cmc
dec
(bad)
in
bound
and
xchg
dec
loopne
stos
repnz
repnz
jmp
pop
scas
jecxz
pop
or
cli
adc
sbb
retf
pop
sub
cmp
and
adc
dec
push
in
and
movs
dec
popf
imul
lods
dec
iret
jb
cld
shr
out
cwde
push
aad
jle
mov
sti
pop
fdivr
cmp
addr16
stos
outs
dec
inc
cmp
mov
call
adc
sub
(bad)
mov
mov
fbstp
pop
ins
push
je
arpl
das
nop
dec
bts
xchg
or
jp
ror
xchg
xor
retw
loop
loop
cld
jns
push
and
cmovae
push
cmc
inc
push
xchg
mov
mov
xchg
into
mov
rcl
cmp
repnz
int3
frstor
pop
add
ret
or
aas
or
inc
push
inc
dec
cmp
push
and
add
inc
test
or
stc
xor
in
aad
jl
and
movs
js
test
push
push
pop
aad
(bad)
in
or
adc
ins
lods
(bad)
jmp
movs
push
cmps
in
sbb
mov
jbe
mov
sbb
jnp
mov
int
add
or
cwde
push
in
sub
xchg
out
int
pop
jecxz
fadd
shr
sbb
test
push
in
or
stos
je
fs
dec
dec
(bad)
inc
aaa
add
inc
cmc
mov
sbb
ins
xor
pop
movs
push
sar
cmp
jg
mov
fisttp
lahf
xor
pop
sbb
or
mov
cmp
stos
mov
pop
(bad)
(bad)
jmp
adc
mov
dec
iret
fwait
gs
pop
cmp
push
pop
jns
dec
mov
and
or
int
cmps
les
push
data16
lahf
mov
push
sar
pop
dec
jbe
in
sbb
add
xchg
sub
fisttp
or
sar
loope
add
scas
dec
aam
out
stos
imul
scas
call
xlat
rol
bound
lea
loop
repnz
mov
jl
or
mov
dec
push
cmps
dec
inc
ins
nop
bsr
sub
adc
test
mov
shr
or
loopne
fldenvw
iret
ror
ja
cs
lock
pop
dec
add
mov
sbb
(bad)
sbb
mov
(bad)
fsub
mov
lahf
xor
inc
dec
push
sar
(bad)
hlt
jge
sub
mov
ds
mov
daa
xor
and
stos
sbb
lds
inc
es
clc
outs
add
aam
scas
stos
push
push
xchg
pop
adc
sbb
sahf
sti
sbb
jnp
ja
mov
outs
and
scas
inc
les
push
scas
aaa
popf
adc
mul
jmp
js
mov
push
stc
aam
or
call
out
xor
sub
add
push
mov
xor
mov
ret
ins
and
mov
push
fwait
xchg
es
dec
pop
inc
mov
into
or
xor
and
sub
repz
xchg
das
js
push
repz
mov
add
loop
mov
push
test
mov
clc
test
adc
pop
inc
xor
pusha
inc
imul
dec
ins
mov
sbb
scas
and
rol
mov
fst
fdiv
bound
ss
mov
in
sub
xchg
or
je
mov
lea
aam
(bad)
arpl
push
cmp
popa
inc
mov
mov
add
pop
or
leave
sar
dec
sbb
cmps
mov
dec
dec
lds
jge
pop
add
push
xor
arpl
push
es
xchg
les
outs
adc
dec
sbb
sub
in
retf
push
push
shl
lods
xchg
mov
outs
test
dec
lahf
enter
shr
dec
dec
sub
add
pop
adc
sbb
push
jne
adc
add
pop
sbb
bnd
neg
adc
mov
xchg
fs
push
fld
adc
or
pop
ins
jns
cmps
or
push
pop
cmp
sub
adc
inc
or
neg
retfw
popa
add
mov
cmp
ss
adc
jno
sbb
add
or
jmp
imul
cmc
xchg
mov
cmp
rcl
cmp
or
dec
cli
fsubr
clc
mov
add
mov
inc
adc
adc
or
push
out
mov
xchg
fistp
xchg
outs
lds
mov
repnz
cld
add
sub
fistp
call
daa
inc
xor
(bad)
pusha
dec
sub
pop
dec
add
dec
les
pusha
ins
mov
mov
into
in
inc
mul
std
pop
or
and
pop
push
out
pop
or
and
mov
cwde
dec
mov
cmp
ds
push
arpl
mov
xchg
loope
lahf
test
enter
mov
lods
lods
push
fadd
stc
mov
mov
pop
(bad)
test
cmps
outs
retf
xchg
(bad)
loopne
lods
cmp
mov
fisubr
and
outs
mov
lods
cmp
and
push
mov
test
xor
(bad)
jecxz
(bad)
mov
xchg
shr
jno
push
scas
push
and
aam
mov
dec
add
data16
in
push
cs
sub
pop
iret
pop
not
push
add
shl
and
dec
inc
add
xchg
inc
inc
mov
out
jo
fst
jge
pop
sbb
xchg
jp
adc
xlat
loop
cdq
xor
popf
dec
je
fidiv
mov
repz
mov
inc
and
xor
xor
outs
jno
jg
fcom
fdivr
pop
cmp
pop
push
hlt
mov
cmp
das
push
iret
pop
into
jno
mov
mov
ret
(bad)
lods
adc
mov
dec
push
mov
dec
inc
hlt
imul
xor
cmp
fcom
in
pop
icebp
sar
addr16
in
sbb
(bad)
fdivr
shl
xlat
dec
sti
jl
mov
add
push
add
push
nop
hlt
mov
cmps
inc
jmp
mov
scas
lea
mov
aad
sbb
aam
paddsb
lods
or
mov
pop
cmp
jmp
xchg
jmp
aas
lea
mov
mov
cmp
sbb
enter
push
cmp
dec
xchg
sub
loope
mov
movs
or
jl
sub
adc
pop
outs
inc
jg
sar
out
xor
pop
popa
xor
mov
and
sar
fidivr
xor
int
(bad)
push
mov
aam
das
pop
in
mov
fistp
(bad)
and
mov
push
outs
sahf
xchg
sti
dec
mov
or
aaa
jbe
nop
mov
pop
xlat
ss
jmp
or
ds
sbb
jnp
ss
in
dec
push
fisttp
add
add
dec
repnz
inc
push
pushf
neg
sbb
or
pop
or
mov
stc
mov
stos
adc
xchg
lahf
sbb
mov
mov
arpl
gs
pop
out
dec
outs
jb
and
mov
or
dec
les
in
test
mov
lds
pop
jmp
int
ret
imul
cmp
in
movs
sub
inc
dec
ds
popf
fidiv
mov
inc
fild
cli
es
mov
es
cmp
dec
fnstsw
mov
adc
mov
xor
mov
jmp
dec
popf
scas
sub
in
neg
xchg
daa
xchg
push
ror
mov
add
cmp
jg
pop
and
mov
test
adc
in
ss
mov
jp
ficom
mov
sbb
(bad)
push
mov
fsub
xor
test
scas
mov
mov
test
popa
nop
pop
add
pop
fcomp
xchg
fsubr
pop
cmp
fidivr
adc
xor
push
sub
mov
inc
push
idiv
aam
in
fbstp
dec
push
jl
xor
jbe
mov
cli
push
mov
xor
ret
sti
sub
or
or
lods
shl
sbb
mov
xor
dec
in
lahf
cs
mov
jns
push
push
js
ja
hlt
movs
push
fdivr
lea
pop
dec
lds
dec
test
push
mov
push
outs
std
lea
pop
fcmovu
mov
adc
cli
std
and
ds
pop
bound
enterw
push
stos
out
gs
mov
call
sbb
aaa
sub
dec
jne
xlat
mov
test
push
in
inc
pop
in
aam
(bad)
jae
leave
adc
inc
mov
jp
es
xor
cmp
mov
jno
outs
fnop
sub
add
imul
aam
sbb
lods
sub
and
and
cld
test
lods
aam
inc
loopne
pushf
dec
push
jmp
shr
(bad)
xor
mov
sbb
popa
test
sbb
jmp
mov
add
es
aam
cmp
aas
retf
iret
popf
iret
push
bound
xchg
xor
sub
mov
call
xlat
push
in
cmp
push
jle
pop
das
and
xor
arpl
xchg
pop
dec
test
(bad)
out
(bad)
push
enter
add
mov
push
xchg
jp
sahf
mov
jmp
jno
jmp
dec
dec
mov
cmp
gs
dec
mov
out
adc
mov
call
popa
and
inc
dec
mov
call
fwait
enter
fmulp
fild
shr
pop
or
jne
aaa
add
pop
add
or
bound
out
fadd
shl
dec
jl
loop
lods
fdivrp
push
int
cmp
mov
lea
cmc
mov
outs
mov
mov
pop
lods
xchg
mov
fsub
inc
call
add
and
or
scas
cwde
(bad)
neg
jne
dec
jge
in
stos
jmp
adc
pop
jns
call
ror
test
or
sbb
mov
lahf
repz
cmp
clc
loop
mov
js
cli
mov
sbb
test
add
rol
maskmovq
popf
push
aad
rcr
scas
movs
push
pop
scas
popa
pop
fdiv
pop
hlt
mov
adc
push
fdivr
or
pushf
leave
imul
test
mov
push
icebp
inc
test
xchg
out
retf
int3
or
and
add
inc
push
jecxz
repnz
sbb
mov
unpcklps
stos
push
and
xchg
mov
sar
sti
pusha
mov
adc
add
jnp
adc
ror
ins
or
scas
mov
dec
adc
dec
xchg
retf
xchg
inc
sbb
gs
jp
or
pop
jg
shr
(bad)
mov
in
ins
gs
pop
(bad)
sti
sbb
mov
stc
push
(bad)
mov
jne
fild
popa
and
je
sbb
push
mov
sahf
mov
iret
test
shr
loop
mov
xchg
jnp
fs
inc
imul
movs
rcl
xchg
aaa
mov
and
ds
xor
scas
mov
xor
or
scas
sub
lock
dec
jmp
jp
mov
packssdw
iret
out
sahf
jle
pop
push
nop
and
iret
je
mov
rcr
cli
bswap
fs
dec
and
fadd
add
int3
sub
jmp
cdq
and
enter
and
test
outs
jge
retf
outs
mov
and
fbld
dec
jb
daa
cmp
push
(bad)
mov
iret
jb
fcom
push
dec
add
repnz
test
fsubr
xor
xchg
mov
movs
rcr
cwde
(bad)
scas
icebp
in
cmp
cmovae
fldcw
lods
outs
fwait
pop
dec
out
jbe
cli
std
pop
dec
mov
das
in
jge
fmul
lods
push
add
mov
loopne
shr
int
push
push
loop
mov
sbb
jmp
adc
mov
pop
or
jmp
test
mov
jae
or
pop
or
mov
and
mov
(bad)
jl
repz
fs
daa
dec
mul
pop
hlt
in
pop
cmp
jge
loop
movs
out
in
xchg
sub
push
(bad)
jle
sub
sbb
mov
and
inc
dec
scas
enter
imul
sti
stos
sbb
push
xchg
and
std
repz
repz
sub
outs
push
test
cmp
mov
push
idiv
mov
xchg
push
cwde
or
cs
imul
adc
and
addr16
xor
add
push
or
and
lds
add
cdq
and
add
mov
add
ins
sbb
das
aaa
dec
inc
mul
in
outs
adc
push
add
fchs
test
mul
sbb
jmp
retf
cmp
adc
inc
or
scas
stos
jne
push
lds
test
xchg
sub
hlt
nop
add
inc
loop
loop
cld
mov
and
scas
jl
enter
leave
lock
cmp
ins
inc
lods
pop
sub
daa
xor
or
mov
mov
ins
or
(bad)
sbb
mov
xor
jmp
imul
int3
sar
push
popf
inc
cmps
mov
add
sbb
in
ret
daa
pop
test
aaa
push
rol
shl
sahf
cmps
xor
stc
sub
xchg
cmp
pop
adc
xor
fnsave
stos
sbb
push
xor
lahf
fidivr
mov
sbb
addr16
arpl
mov
lods
arpl
add
loope
dec
loop
in
loope
sub
mov
outs
popa
rcr
popf
(bad)
iret
push
(bad)
dec
(bad)
mov
or
push
cli
jne
nop
outs
pop
and
or
std
and
xor
or
jp
push
pop
sti
xor
sbb
mov
mov
repz
jbe
jg
push
cmps
mov
fwait
stc
sub
cmp
push
or
sub
push
lods
dec
(bad)
add
in
mov
lock
aam
test
into
gs
adc
mov
mov
retf
adc
xor
jp
call
xchg
out
movs
xchg
cld
push
push
mov
in
stos
mov
clc
das
bnd
stc
push
xchg
retf
iret
and
in
pop
mov
pop
enter
push
add
not
cdq
adc
data16
sub
ins
mov
and
inc
pop
sbb
shr
dec
loope
cs
cs
fwait
sub
pop
cs
sub
retf
mov
icebp
shl
push
test
mov
call
out
sbb
je
aad
dec
(bad)
xor
xchg
jbe
fidiv
sbb
cwde
inc
test
mov
xlat
retf
pop
cli
pop
popa
je
ja
hlt
adc
or
iret
xlat
lds
xchg
popa
fs
ret
cmp
out
cmp
or
add
xor
mov
in
pop
xchg
pop
sbb
scas
and
in
imul
push
retf
or
(bad)
pusha
fbld
lea
xor
or
call
aad
inc
cmp
push
inc
icebp
aaa
clc
ficom
inc
out
addr16
jmp
inc
imul
test
and
adc
jecxz
(bad)
mov
mov
stos
jns
int
adc
stos
jp
mov
cwde
xor
fsubr
int
call
shl
popa
xchg
int3
pop
add
jnp
or
loop
cmp
mov
xchg
xor
jg
push
sar
push
lds
iret
lock
cmp
dec
dec
push
or
in
sti
pop
inc
jnp
outs
cmp
sbb
aas
cld
mov
test
mov
mov
jns
mov
push
(bad)
ret
js
jmp
inc
pop
jnp
xor
in
cld
pop
inc
lods
in
pop
mov
jp
and
movs
and
xchg
or
adc
ss
pop
adc
xchg
cmp
add
xchg
cmp
xor
les
mov
inc
push
test
cli
outs
push
and
sub
or
bound
dec
out
stos
jmp
push
xlat
and
inc
or
add
jp
inc
int
inc
fsubr
fdivp
stos
jae
sub
push
not
xchg
jge
inc
xchg
lods
shl
mov
mov
mov
xor
xor
push
dec
cs
mov
popf
xchg
xchg
xor
call
xchg
sub
jnp
call
adc
inc
call
out
sub
aaa
int
scas
repnz
jp
mov
fimul
push
add
sub
and
pop
mov
xor
(bad)
cli
inc
jno
push
repnz
out
out
sbb
xchg
dec
or
pop
adc
cld
add
xor
xor
fistp
jge
fisub
repz
mov
push
mov
push
aad
pop
movs
cdq
mov
jl
inc
push
xchg
pop
adc
add
push
out
mov
cmp
test
fld
add
imul
hlt
fwait
jne
scas
dec
fimul
or
mov
push
add
and
test
ret
sbb
pop
pop
push
add
jp
movs
lods
dec
ja
iret
(bad)
das
in
ds
add
sub
rol
mov
lea
test
push
mov
stos
xchg
xchg
mov
mov
mov
push
mov
jl
loopne
js
pushf
ins
xor
aas
int
bnd
mov
sbb
jns
ins
mov
outs
sbb
sar
xor
and
and
pop
xor
push
add
aam
xchg
ret
(bad)
scas
inc
popf
mov
pop
mov
xchg
cmp
pop
fwait
ja
sub
dec
push
pop
daa
das
js
jno
or
mov
lds
adc
inc
out
iret
cmps
repz
and
pushf
add
not
add
int3
pop
dec
xchg
dec
mov
mov
jmp
je
dec
push
lea
xchg
push
mov
xchg
and
push
les
push
push
push
and
xor
cmp
std
fadd
jmp
or
add
(bad)
je
inc
inc
leave
and
loopne
add
add
in
sub
push
hlt
push
std
aam
je
(bad)
cdq
inc
add
dec
jns
mov
jmp
or
fild
xchg
xor
lahf
cdq
popa
dec
xor
(bad)
fbld
cmp
dec
ins
add
pop
mov
pop
arpl
jno
sbb
jmp
ds
inc
mov
in
shl
xor
dec
mov
add
and
movs
cld
sub
std
xchg
mov
cmps
retf
jne
imul
jb
mov
mov
xchg
retf
cli
pop
add
mov
mov
cs
imul
jbe
xor
adc
bound
gs
movs
xor
jae
mov
movs
loope
pop
or
jno
push
jmp
repz
inc
or
sub
xor
mov
das
test
push
dec
imul
or
push
mov
and
js
mov
jns
cmp
shr
fcmovnbe
ds
pop
push
lods
retf
dec
and
and
or
mov
loopne
shl
lahf
push
or
aam
or
jmp
add
xlat
jo
pop
dec
cmps
(bad)
cld
mov
inc
(bad)
data16
and
jne
cdq
js
or
stos
add
xchg
dec
mov
dec
(bad)
fisttp
loop
inc
ror
ror
or
shl
sub
sbb
loope
jl
cwde
addr16
jo
dec
inc
test
ss
push
out
push
mov
mov
scas
pop
int3
push
daa
mov
and
mov
or
adc
rcr
movq
sar
in
hlt
iret
or
pop
stos
shl
sbb
adc
in
push
scas
aas
add
jg
cmp
mov
movs
pop
or
inc
out
jb
jae
loope
mov
dec
ret
or
adc
mov
sub
cld
mov
scas
leave
aam
sti
inc
scas
out
gs
rcr
mov
mov
lds
sub
out
retf
fdiv
jp
or
add
sbb
cdq
and
mov
(bad)
std
mov
dec
pop
sbb
popf
mov
dec
sbb
mov
(bad)
jp
daa
mov
jno
popa
adc
xor
mov
mov
adc
or
push
lods
cmp
cwde
jb
jl
sub
mov
(bad)
cmc
hlt
dec
mov
test
or
sub
xchg
addr16
mov
sub
inc
pop
sbb
xchg
out
out
sbb
cs
(bad)
push
xor
jmp
mov
xchg
lahf
addr16
fild
jmp
imul
iret
xor
mov
jle
dec
pusha
and
jno
inc
add
in
adc
dec
scas
dec
das
or
inc
inc
xchg
adc
xor
fcom
sbb
hlt
pop
push
or
fistp
popa
dec
(bad)
shl
dec
gs
xor
test
mov
pop
stos
sub
sbb
call
or
clc
cmp
cmps
in
out
call
cdq
mov
jmp
pop
loop
pop
xchg
cmp
mov
hlt
lea
mov
cmp
jno
sub
pop
mov
cmp
and
test
and
fimul
ror
popf
cmps
push
(bad)
sti
mov
mov
(bad)
mov
icebp
nop
pushf
add
jle
push
xchg
fucomp
pusha
push
aas
daa
pop
(bad)
and
inc
movs
cmp
movs
hlt
movs
or
stos
jo
pop
pop
ret
mov
xor
push
cwde
mov
or
sbb
add
loop
mov
mov
jne
mov
pop
mov
inc
(bad)
scas
or
call
sbb
ins
xor
jg
push
outs
ins
add
or
pop
adc
(bad)
(bad)
pop
push
xor
rcr
ds
repz
inc
ret
mov
sbb
das
xchg
sbb
outs
inc
imul
push
scas
inc
aaa
push
(bad)
xchg
fist
jecxz
dec
adc
sub
test
jae
pop
arpl
(bad)
pop
outs
sbb
inc
loop
ret
pop
out
push
scas
ds
fadd
out
and
sub
sbb
popa
and
icebp
(bad)
mov
jno
or
movs
call
mov
sbb
lds
mov
pop
(bad)
in
test
outs
add
int
jmp
lahf
loopne
dec
sub
sub
outs
shr
lods
push
push
adc
test
mov
inc
out
mov
in
pop
imul
add
push
call
int3
lock
fstp
out
adc
scas
ret
movs
loope
les
xlat
cdq
int
cdq
cs
add
sbb
push
ins
dec
pop
icebp
repnz
(bad)
jge
jp
fwait
push
ror
xor
jno
mov
cmp
add
rcl
(bad)
cmc
and
pop
mov
mov
jg
aam
cmp
jbe
sti
ja
adc
in
jns
xor
in
add
xchg
out
and
popf
push
push
stos
(bad)
dec
mov
into
ja
je
mov
lock
push
jo
xor
leave
call
push
xlat
outs
and
mov
xchg
mov
sbb
sub
pop
mov
icebp
enter
mov
xchg
and
add
stc
push
lds
pushf
cs
sbb
in
push
shl
(bad)
and
lahf
imul
int3
out
daa
aad
push
and
fcmovnu
pop
adc
mov
adc
mov
mov
pop
cli
(bad)
int
sub
jle
ret
jmp
int3
adc
jae
xchg
jno
scas
fist
fbstp
mov
mov
sbb
mov
push
adc
xchg
add
inc
sub
popa
mov
jg
repnz
cmps
and
add
repnz
mov
(bad)
mov
(bad)
pop
push
xor
jae
pusha
mov
ins
push
push
stc
jp
mov
rcpps
lds
cmp
pop
js
jnp
dec
jmp
jle
mov
jl
cmps
movs
iret
xor
cs
or
retf
movs
or
not
and
xchg
cwde
sub
movs
sbb
(bad)
mov
test
jg
cmc
jno
push
call
add
int
xchg
lods
gs
clc
pop
xchg
mov
pop
cmp
repnz
sub
aad
push
cdq
stos
push
inc
mov
jo
mov
ror
xor
(bad)
lods
repnz
mov
dec
xor
jbe
test
push
sbb
push
mov
inc
sbb
adc
call
xor
das
psadbw
das
cmp
js
and
cmps
mov
xchg
and
cmp
push
xchg
pop
lea
inc
mov
leave
mov
loope
imul
dec
jmp
push
mov
test
add
mov
imul
cmp
inc
mov
shl
scas
fidivr
popf
lods
and
les
in
out
mov
ins
push
dec
xchg
mov
inc
mov
push
push
call
xor
inc
mov
(bad)
out
dec
jb
pop
jns
mov
in
mov
push
sbb
test
xchg
jle
xor
push
xchg
jns
pop
jecxz
(bad)
pusha
push
nop
cdq
int3
ss
imul
rcr
loopne
out
popa
pop
mov
(bad)
adc
outs
arpl
dec
adc
imul
ins
or
pop
inc
rol
jae
and
dec
retf
adc
inc
dec
icebp
mov
aas
cwde
add
cmp
dec
fsub
sbb
add
imul
inc
sbb
mov
pop
fcmovnbe
cmc
pop
test
push
or
(bad)
mov
sti
push
int3
fadd
or
jno
ins
inc
loopne
jo
test
and
xor
into
sub
mov
mov
pop
call
psubsb
(bad)
ds
jmp
sbb
sub
out
scas
sti
push
sub
ins
and
outs
loopne
dec
add
ss
mul
jnp
mov
cdq
clc
iret
inc
aaa
sbb
jmp
jmp
test
out
inc
xchg
add
call
mov
add
outs
sbb
inc
addr16
xchg
test
iret
adc
xchg
push
mov
adc
stos
adc
jne
dec
jmp
ror
mov
push
sub
and
ja
mov
xchg
mov
mov
popa
js
stc
jb
in
das
sbb
ja
retf
pop
fsubr
(bad)
cli
adc
add
into
sbb
sub
inc
fcomi
mov
sub
cmc
jge
mov
add
cdq
in
jno
scas
das
(bad)
dec
lods
xchg
ret
mov
jle
shr
in
mov
mov
inc
add
inc
mov
(bad)
out
cmp
xor
sub
xchg
inc
push
dec
pop
mov
jecxz
dec
mov
aaa
inc
outs
pop
subps
cli
imul
cmps
push
test
mov
ja
nop
sub
push
dec
mov
pop
into
inc
cdq
retf
sbb
sub
popf
pop
mov
sar
mov
jne
imul
mov
aas
sbb
fcom
cld
and
cmp
jb
outs
push
push
cmp
int3
cmps
push
inc
mov
cmps
mov
and
loope
xor
lahf
popa
jecxz
sub
(bad)
fidivr
popa
push
inc
fiadd
mov
lds
jle
mov
sbb
retf
or
and
nop
leave
sub
in
and
xchg
cmps
cli
shl
dec
mov
and
cdq
out
jno
bound
fst
(bad)
or
jmp
xor
sbb
mov
inc
mov
dec
fsin
mov
loope
fcom
adc
sar
out
xchg
fwait
retf
mov
xor
test
(bad)
scas
mov
add
mov
jecxz
push
stos
dec
cs
cdq
cmp
pop
mov
or
sbb
scas
cmp
ins
dec
and
xchg
cli
mov
or
xchg
jno
rdtsc
cli
inc
cmp
cmp
out
cli
xchg
in
aas
dec
clc
and
jo
pop
arpl
mov
xchg
pop
cmp
scas
mul
in
sub
movs
pop
jmp
add
mov
test
sbb
sar
loop
mov
jbe
int3
jnp
and
dec
dec
sbb
mov
fdiv
pop
mov
retf
call
cs
imul
imul
sbb
repz
pop
jne
jmp
adc
mov
jmp
cmp
outs
fidiv
mov
das
out
jno
or
out
adc
stos
ja
in
add
push
mov
sbb
retf
cwde
pop
inc
loop
lods
fnsave
add
dec
dec
out
sbb
adc
push
jecxz
jae
in
adc
mov
ss
or
push
add
ficom
dec
cld
or
in
mov
mov
fs
lea
jle
mov
xchg
and
adc
ja
sahf
sub
pop
dec
adc
pop
xor
cmp
mov
inc
push
add
shld
fnstenv
jmp
int
jne
add
shl
out
fdiv
push
xor
and
mov
xor
push
inc
xchg
push
popf
mov
fmulp
fcmovbe
inc
imul
lds
add
pop
test
pop
pop
push
jp
fldenv
mov
in
dec
sbb
jle
loopne
dec
in
mov
push
xchg
cmps
icebp
dec
jl
xchg
sbb
jecxz
xchg
adc
jle
lods
adc
fs
sub
jne
mov
test
bound
cmp
xchg
ja
aaa
jecxz
nop
ret
cmps
addr16
pop
jne
mov
call
retf
inc
or
or
in
pop
jo
and
scas
sbb
cmp
pop
test
js
dec
popa
and
adc
mov
(bad)
out
ret
fstp
enter
push
je
add
aam
push
lahf
push
adc
add
xor
or
inc
sbb
cli
bnd
sub
mov
outs
dec
mov
push
(bad)
mov
jl
or
lahf
cmp
jge
imul
pusha
(bad)
(bad)
fnstenv
pop
movs
xchg
xor
push
cdq
mov
push
dec
sbb
adc
push
adc
and
shl
push
sahf
adc
pop
inc
sbb
mov
pop
and
dec
and
push
retf
push
sub
sbb
xlat
mov
lods
imul
xor
mov
pushf
enter
sahf
jo
inc
test
outs
or
stos
cwde
and
(bad)
jge
inc
lar
fld
xor
adc
push
lea
mov
inc
mov
nop
ret
inc
into
mov
fist
scas
test
cmps
call
outs
push
xchg
mov
je
xor
int
jge
dec
out
cwde
neg
shr
in
lods
jecxz
lahf
add
mov
and
scas
or
imul
(bad)
or
mov
inc
sub
leave
cli
xchg
push
sti
pop
ins
pop
dec
adc
mov
adc
mov
into
add
cmc
add
jo
(bad)
aad
xor
out
fwait
jae
inc
dec
cmp
out
loop
mov
mov
jmp
and
add
adc
or
jmp
mov
lahf
repnz
test
(bad)
mov
xchg
adc
pop
xchg
cmps
push
xor
mov
jbe
cwde
inc
ss
or
out
std
adc
fsubr
adc
ror
addr16
loopne
gs
in
xor
xchg
mov
adc
cmp
and
jb
sbb
jbe
adc
ins
dec
pop
test
daa
mov
shr
les
mov
(bad)
pop
or
ins
dec
outs
jge
ror
inc
mov
neg
mov
jl
repz
mov
xlat
aam
cmp
ret
call
xor
lock
rol
adc
sbb
sub
inc
mov
mov
fdivp
jl
push
enter
push
aaa
cmp
fs
aas
or
(bad)
aaa
xor
adc
jnp
cs
jmp
or
add
jmp
jno
mov
fisubr
push
stos
(bad)
fst
int3
test
add
and
cdq
int
xchg
dec
sub
jmp
sbb
pop
cmp
adc
pusha
jecxz
xor
xchg
repnz
mov
pop
fdivr
inc
nop
mov
xor
or
stos
mov
les
push
push
(bad)
int
adc
popf
mov
je
push
mov
mov
movs
mov
xchg
cmp
(bad)
ss
ss
(bad)
rol
xchg
adc
ja
retf
clc
xchg
push
mov
sbb
inc
mov
rcr
pop
movs
mov
xchg
xchg
cdq
shl
pop
add
icebp
push
sbb
lods
mov
cwde
fucomip
shl
aaa
pusha
scas
ds
mov
gs
jnp
(bad)
repz
jmp
adc
fbld
pushf
in
lods
mov
out
dec
or
ud0
js
in
fldcw
into
dec
mov
or
stc
add
jmp
fdiv
mov
sahf
pop
pop
pop
mov
inc
shl
dec
rol
add
mov
retf
fxch
xchg
mul
mov
fcomp
popf
in
mov
mov
push
ins
stos
dec
lahf
cmps
mov
add
and
jbe
dec
pop
in
pop
and
pushf
out
clc
mov
push
retf
sub
pop
xor
adc
jle
pop
leave
pop
and
ret
out
inc
adc
shl
sahf
xchg
fchs
adc
int
mov
jmp
or
bound
(bad)
call
jge
outs
ror
cmp
mov
pop
ret
xchg
and
je
in
mov
ds
pop
jp
push
neg
push
mov
(bad)
fucomip
out
xchg
pop
add
out
push
mov
(bad)
bound
jg
dec
add
pop
sti
inc
cmp
or
repnz
sbb
loop
fwait
mov
fisub
fidivr
fisubr
dec
xchg
add
xor
jmp
mov
and
nop
lock
push
sub
xchg
sbb
data16
mov
fiadd
sahf
(bad)
push
mov
dec
jp
and
imul
and
in
cmc
mov
mov
add
es
and
push
mov
shr
pop
addr16
xor
xchg
cld
adc
push
mov
clc
int3
sub
jbe
nop
dec
adc
dec
mov
jmp
cmc
dec
aad
mov
pop
push
push
jns
sub
sub
mov
cmp
popf
xchg
sbb
ret
mov
aas
cdq
les
add
fisub
nop
sub
adc
xlat
jae
das
jae
jne
psubsb
js
into
jle
adc
and
adc
ins
cld
imul
xor
stc
sub
mov
outs
mov
and
xor
mov
xchg
fimul
loop
xor
and
adc
rcl
test
and
sub
adc
jg
fs
div
loopne
sub
add
jge
dec
sar
stos
leave
in
arpl
push
inc
fsub
out
or
fdiv
xor
test
outs
xor
and
mov
push
out
push
xor
fimul
inc
repz
je
push
arpl
sub
cmc
add
sbb
push
pusha
jo
xor
in
mov
mov
(bad)
fmulp
mov
mov
aas
xlat
pusha
add
out
jo
fnstsw
pop
adc
in
cs
xor
xchg
gs
mov
in
mov
and
add
ja
push
and
in
test
cdq
lds
call
stc
loope
mov
cmp
fsub
push
mov
cld
mov
icebp
dec
push
xor
loopne
jmp
sbb
andnps
pop
add
sub
xor
jbe
or
push
jecxz
imul
or
gs
mov
inc
pop
bound
lods
xor
cs
xchg
and
add
fstp
jb
push
jno
aam
and
and
jl
pop
xchg
int3
push
cmp
add
adc
sti
mov
pop
xor
mov
ja
call
dec
lods
psraw
lea
bound
(bad)
or
add
fmul
clc
cmp
sahf
setae
ret
mov
aam
push
loop
push
sub
fst
sub
shr
xor
retf
outs
xor
push
jb
sub
lods
xchg
mov
push
mov
fcom
movs
jo
xchg
lds
fild
imul
xor
fld
test
jp
jo
out
fwait
ins
mov
sbb
ja
(bad)
shl
adc
jmp
mov
je
dec
and
xchg
sub
push
pop
sub
dec
mov
ds
pop
sub
push
or
push
(bad)
adc
push
sub
mov
xchg
adc
push
std
xor
or
push
lods
loopne
loope
jb
test
leave
jns
jle
aam
out
add
mov
leave
jno
dec
outs
push
inc
call
dec
(bad)
mov
xchg
repnz
sahf
cli
fimul
cmps
(bad)
push
mov
push
enter
aaa
sbb
mov
or
scas
movs
xchg
mov
repz
loop
cs
sub
fst
shl
cs
pop
imul
sub
test
(bad)
stos
sub
test
dec
mov
dec
mov
lahf
mov
repz
mov
cli
add
push
adc
xor
stc
jmp
dec
or
inc
add
push
dec
or
clc
push
retf
xchg
retf
mov
or
sub
cmp
dec
and
(bad)
dec
dec
inc
mov
mov
movs
cmp
arpl
and
out
inc
shl
popa
xor
jbe
les
fsubr
aas
fisub
add
ins
out
das
mov
xchg
mov
pop
xchg
and
in
add
adc
idiv
outs
(bad)
dec
rcr
daa
outs
lahf
mov
test
sub
mov
inc
dec
push
in
or
xchg
adc
mov
push
les
pushf
push
ret
mov
xor
push
sbb
push
jmp
rcl
xor
movs
sub
xchg
test
in
pushf
test
nop
xchg
sbb
popf
retf
cdq
mov
jg
add
(bad)
daa
nop
push
scas
imul
fwait
test
mov
arpl
popf
add
xor
mov
(bad)
lock
xchg
mov
cmc
mov
inc
(bad)
pop
dec
xchg
and
sub
sbb
outs
jmp
dec
xor
out
inc
xchg
sbb
push
lahf
movs
xor
mov
sbb
icebp
xor
loopne
jbe
dec
mov
mov
mov
arpl
fwait
or
fidiv
test
out
xor
out
adc
fdivp
lods
fisub
retf
scas
data16
test
pushf
scas
lock
sub
and
icebp
mov
lock
pushf
repz
scas
inc
pop
cmp
xchg
jne
sub
pop
sub
popa
xchg
or
jno
mov
xchg
gs
xor
mov
mov
es
jmp
dec
movs
mov
fbld
push
(bad)
icebp
scas
jg
call
hlt
icebp
das
je
fidiv
jmp
in
cli
scas
inc
mov
mov
imul
rcr
dec
xchg
dec
mov
ficom
fs
sar
rol
jb
(bad)
jge
pop
pop
xchg
inc
inc
shl
sbb
cmp
es
dec
push
ins
rcl
xchg
retf
sub
rol
addr16
dec
jne
test
pop
xlat
xchg
add
(bad)
cmp
wrmsr
mov
cs
jb
inc
shl
(bad)
mov
popf
mov
outs
cmp
mov
and
iret
call
retf
pop
repz
adc
dec
shl
mov
adc
jg
pop
mov
cmp
jmp
push
jp
or
addr16
sar
cmp
in
rcl
xchg
ja
push
and
leave
and
call
adc
bound
cwde
xchg
jmp
cdq
repz
inc
mov
adc
mov
loope
or
add
cmp
or
mov
mov
pop
loope
sbb
(bad)
call
jb
lods
inc
and
pop
inc
inc
mov
imul
jno
jmp
sbb
imul
mov
fild
ret
clc
mov
jmp
dec
iret
lods
fucom
fucomp
cli
xchg
imul
ficom
inc
lods
xor
dec
out
xchg
xor
iret
cmp
mov
adc
or
mov
sahf
push
(bad)
daa
call
jp
(bad)
fld
push
pop
outs
cmp
jno
dec
ret
pop
jae
dec
xor
pop
pop
cmc
movs
addr16
in
push
sub
jg
imul
dec
or
xchg
xchg
pop
cmp
push
fst
aam
pop
pop
out
out
ins
ret
retf
mov
scas
fisubr
cwde
ret
ror
xor
iret
mov
jg
mov
test
push
je
and
sbb
mov
and
sbb
sub
out
and
int
mov
fcmovb
(bad)
push
test
mov
ss
jmp
(bad)
pop
std
pop
adc
(bad)
stc
call
mov
fnstsw
pop
mov
fwait
xchg
ret
and
or
and
nop
cdq
push
xchg
mov
sub
mov
js
xchg
sbb
cli
xchg
jbe
xchg
pusha
stos
mov
lock
cs
or
cmp
push
dec
fsubr
cmp
jmp
sbb
xchg
xor
jp
inc
ficom
std
adc
mov
pop
enter
adc
test
jae
sahf
add
repz
cs
pop
fst
push
stos
cmp
and
push
imul
jbe
mov
dec
mov
mov
mov
stos
mov
inc
out
dec
lahf
(bad)
dec
mov
cmp
sbb
push
(bad)
mov
jp
cmp
daa
add
push
fcmovnbe
stos
xor
icebp
inc
sbb
cmc
mov
shr
ret
sti
xor
scas
pop
mov
pmullw
aas
mov
cld
imul
adc
retf
inc
ss
push
scas
ficomp
fs
sbb
(bad)
ins
stos
jns
xlat
mov
lahf
or
mov
xchg
dec
dec
mov
ins
and
xor
mov
mov
retf
lods
or
sub
imul
movs
cs
cwde
dec
ret
idiv
pop
mov
cmc
adc
ins
and
cli
mov
mov
pop
outs
push
imul
(bad)
daa
cli
ins
cs
jo
cmp
pop
add
jo
out
inc
gs
xor
imul
lea
xchg
sub
adc
fst
xor
adc
test
lds
push
sub
adc
fwait
xchg
mov
mov
retf
sar
sub
cmovo
loop
mov
popa
xchg
xor
sbb
xor
xchg
lock
das
adc
sub
and
stc
mov
test
leave
jmp
(bad)
mov
jnp
xchg
(bad)
dec
push
(bad)
fidivr
je
int
fs
shr
jecxz
xchg
clc
jno
cmp
leave
daa
inc
imul
stc
popa
(bad)
xchg
dec
shr
cwde
mov
aaa
test
push
mov
je
mul
cwde
in
sub
or
jle
sbb
int
mov
sbb
and
sub
out
les
aad
add
adc
jbe
iret
push
jmp
adc
pop
lahf
push
int3
jnp
jmp
adc
jno
mov
ror
es
xor
or
fisubr
dec
add
jmp
cmps
add
pushf
add
mov
inc
pop
add
xchg
movs
sbb
es
or
add
nop
ins
loope
cmps
pop
add
pop
xchg
mov
or
int
cmc
loop
outs
or
popf
ror
pop
push
inc
inc
mov
xchg
jnp
jg
int3
loop
sahf
jg
pop
ret
repz
movs
shl
fmul
xchg
loope
ret
js
rol
mov
call
push
cmp
outs
dec
mov
push
rol
call
adc
ja
ja
cmp
xchg
das
test
mov
lods
(bad)
out
rol
sar
mov
lods
stc
sub
les
(bad)
and
imul
sub
int3
out
cdq
jg
call
adc
(bad)
jecxz
dec
int3
arpl
or
ja
dec
rcl
xor
add
push
test
cmp
xchg
ja
(bad)
sahf
in
pop
ins
jne
stos
inc
or
xlat
(bad)
div
sahf
in
and
loop
dec
mov
pop
inc
add
gs
cmp
or
or
and
loopne
test
dec
shr
test
sub
int
call
dec
lods
mov
fsub
jno
repz
inc
mov
sub
mov
pop
in
xchg
jg
bound
xor
test
inc
xchg
pop
add
cmc
jnp
dec
and
mov
(bad)
retf
stos
push
sbb
mov
dec
mov
xchg
stos
jl
dec
push
inc
mov
addr16
cmp
test
adc
aad
pop
in
jo
les
adc
xchg
xchg
jg
pop
pop
aad
ffree
xor
jnp
sar
test
loop
pop
lock
test
test
sti
fsubr
dec
not
popa
jmp
dec
mov
fsubr
jno
cmp
ror
out
inc
call
retf
enter
pop
lods
jno
fisttp
dec
scas
inc
jg
xor
pop
or
xchg
cmp
icebp
int3
leave
jl
repz
mov
loop
les
cs
lahf
aas
xchg
mov
adc
int3
mov
scas
or
or
loopne
mov
pop
push
cmp
sbb
push
push
cmp
add
loope
cwde
aad
lea
fdiv
ret
fnstsw
(bad)
rol
mov
pop
stc
add
push
stc
pop
mov
sbb
mov
mov
je
call
fistp
in
or
out
push
outs
and
jb
push
fistp
xchg
cmp
lock
enter
xchg
pop
into
mov
cmps
pop
std
mov
movs
sbb
icebp
sbb
gs
repnz
movmskps
and
ds
cdq
in
iret
aad
push
imul
sub
sub
push
js
xchg
fwait
jmp
sub
push
mov
aam
xchg
bound
cmc
sub
xlat
inc
jb
les
arpl
dec
add
imul
jns
(bad)
int3
push
cmp
test
cmp
ror
mov
ins
jnp
cli
add
loop
add
call
loop
scas
cld
fsubr
fmul
cmovae
xchg
pop
mov
in
test
jne
hlt
outs
pop
out
or
(bad)
inc
popf
sub
or
test
jp
mov
test
stc
in
cmp
test
mov
lods
lods
and
push
sbb
sar
scas
aas
imul
mov
cmp
jae
xor
push
add
push
ss
jno
push
jmp
cmp
outs
stc
push
push
lds
dec
cmc
ret
fs
mov
lahf
pop
in
icebp
mov
pop
ret
mov
sbb
mov
movs
push
pop
stos
pop
std
sbb
xchg
cmps
adc
adc
mov
ins
(bad)
sbb
outs
or
pop
cmp
imul
and
cmp
add
mov
pusha
into
cmp
lahf
int
or
aas
adc
fisttp
lea
add
aas
xchg
sub
into
sub
mov
leave
iret
jne
push
sub
jne
mov
ss
mov
cli
cmp
idiv
sbb
inc
add
inc
idiv
xchg
and
jo
fwait
add
adc
in
jmp
inc
pop
fnsave
test
aam
in
and
into
das
scas
or
cmp
loopne
xlat
adc
fucomi
ins
push
mov
cmp
rcr
cmp
pop
shl
icebp
sbb
pop
add
das
leave
out
pop
cdq
inc
jns
jmp
(bad)
push
adc
dec
or
daa
inc
mov
fldenv
es
dec
shl
retf
mov
int
leave
sar
mov
xchg
mov
and
fidiv
adc
retf
data16
dec
clc
or
mov
xchg
mov
into
icebp
or
push
cld
xchg
push
and
call
mov
sti
pop
inc
mov
call
xchg
xor
(bad)
aas
clc
adc
mov
fucomi
mov
mov
fbld
xor
movs
fnstenv
jb
xor
push
pop
jns
push
and
je
scas
test
jae
rol
outs
xlat
and
retf
bound
test
retf
pop
xlat
stos
movs
push
mov
loop
cmp
hlt
push
push
mov
cmp
dec
hlt
in
mov
loopne
adc
sbb
lahf
jne
or
adc
lods
pop
push
(bad)
cmp
push
inc
push
loop
add
lds
pushf
test
xor
clc
cmps
add
push
sub
sbb
xchg
add
mov
mov
jae
xor
add
leave
inc
mov
xchg
mov
or
pop
repnz
and
test
rsqrtps
adc
ins
push
cwde
mov
in
and
xchg
mov
js
xchg
mov
fisttp
les
inc
cmp
dec
xor
or
jnp
nop
and
jno
mov
jmp
xchg
pop
mov
sbb
mov
push
rcl
push
jno
js
or
fadd
sbb
imul
enter
fwait
test
scas
data16
add
pop
xchg
pop
addr16
(bad)
clc
dec
adc
ja
push
push
jl
push
mov
mov
sub
jne
cli
clc
add
jmp
ss
stos
inc
test
jbe
push
sbb
pop
test
jl
popa
and
push
aas
xchg
adc
xor
aam
ins
dec
mov
xor
mov
and
js
jo
hlt
fistp
add
mov
jnp
loope
ds
dec
and
add
push
xchg
push
inc
fadd
movs
mov
in
test
xchg
adc
popf
icebp
adc
sbb
(bad)
aaa
or
loopne
pop
aaa
test
hlt
jecxz
dec
out
mov
ins
imul
popa
xor
in
(bad)
(bad)
mov
jns
scas
add
cld
add
retf
in
jle
aas
stos
aam
pop
jecxz
and
loope
mov
adc
stos
fcom
or
jne
scas
test
sar
(bad)
loopne
ret
mov
jge
int3
pop
call
push
mov
cmp
mov
movs
mov
imul
mov
in
test
js
bound
xchg
retf
push
rcl
add
daa
cmp
aaa
xor
inc
out
fisub
or
push
cli
retf
aad
or
xlat
hlt
int
fimul
xchg
xchg
(bad)
adc
ja
jo
adc
sbb
jge
sti
sub
in
dec
xchg
sbb
out
int3
pop
jmp
fisttp
push
or
sbb
fdivr
call
outs
push
rcl
push
mov
cmc
call
push
sbb
add
out
pop
mov
xchg
inc
jo
pop
add
xchg
stos
clc
test
and
stos
adc
test
test
test
imul
aam
test
retf
push
jns
mov
push
aad
sub
loopne
xor
mov
pusha
je
and
sahf
test
(bad)
cmp
movs
loopne
push
sub
aam
xchg
std
rcr
or
mov
ins
(bad)
fisub
sbb
dec
inc
mov
mov
jns
cs
mov
ja
inc
cdq
dec
movs
data16
nop
xchg
dec
(bad)
jp
fcomi
mov
mov
xchg
push
imul
cmp
sar
adc
loop
mov
jg
xchg
stos
stc
popf
sub
sub
retf
enter
xchg
push
push
int3
pop
test
push
push
punpckhdq
or
clc
jmp
jo
xor
(bad)
xchg
push
xchg
pusha
push
xchg
xchg
cmp
fwait
adc
jge
je
retf
arpl
push
xchg
mov
mov
push
ja
cdq
mov
arpl
jb
push
fnstsw
adc
and
sbb
int
ins
mov
mov
xlat
push
cmp
and
mov
cmp
test
xor
jmp
and
jb
(bad)
or
rcl
mov
pop
sub
jmp
xor
ds
pop
dec
int3
xor
imul
ficomp
sbb
and
lds
mov
outs
push
xor
test
(bad)
out
mov
and
and
(bad)
nop
mov
fs
xor
out
and
adc
push
out
cmp
enter
xor
mov
mov
(bad)
cmp
adc
mov
dec
sbb
cmp
test
pop
inc
je
lods
push
lds
mov
xor
sahf
or
in
sbb
push
pop
(bad)
xor
mov
jle
fcmovne
sbb
in
pop
adc
xchg
adc
cmps
mov
inc
add
push
pop
jmp
call
ret
(bad)
out
imul
pop
les
pop
dec
btr
aaa
rcl
push
dec
cmp
mov
adc
popa
inc
loop
push
or
mov
xor
call
dec
fs
outs
cwde
or
mov
sub
cmps
sub
std
xchg
lahf
(bad)
xor
sbb
xor
fwait
data16
mov
or
aas
pop
js
scas
(bad)
mov
aas
aam
adc
sbb
sti
inc
sub
mov
and
cmp
push
inc
jle
push
outs
cld
cmp
out
adc
dec
repnz
in
lock
cmp
mov
xor
aad
dec
mov
cmp
into
inc
xchg
and
sub
cmp
mov
lods
test
shl
fimul
(bad)
push
mov
aaa
jl
fs
adc
mov
out
add
jns
loope
xor
adc
movs
jle
jp
mov
idiv
rol
cwde
inc
sbb
jecxz
or
fxch
nop
fistp
shl
pop
into
loope
cmp
jno
cmc
popa
es
stc
cmp
fwait
test
xchg
xchg
fldenv
dec
pop
jp
or
xor
xchg
loopne
fst
fnop
add
js
je
shl
pop
fcomi
stc
cmp
(bad)
stos
mov
cmp
js
daa
fisttp
popf
in
jno
sub
mov
cmp
std
mov
loope
pop
nop
mov
mov
sub
lfs
shufps
leave
sub
xchg
stos
shr
dec
sbb
inc
fcom
into
mov
jb
(bad)
in
dec
stos
out
(bad)
lock
mov
retf
inc
imul
dec
inc
mov
xor
mov
mov
stc
xor
lods
or
stos
xor
es
add
pop
fucomip
sub
mov
loopne
pusha
mov
aaa
or
xchg
sub
gs
push
inc
cs
dec
mov
mov
dec
imul
sbb
nop
push
xlat
dec
sub
mov
or
mov
loopne
(bad)
jne
push
imul
(bad)
sbb
xor
mov
inc
daa
cwde
data16
mul
pop
sahf
dec
outs
cmp
lock
add
(bad)
mov
xor
loopne
and
fld
mov
pop
test
adc
mov
fisttp
int
dec
fisttp
push
cmps
jbe
jno
popa
cmp
jmp
lods
js
cmp
add
rcl
dec
shl
jbe
dec
sahf
inc
test
jne
cs
mov
hlt
stc
mov
push
push
ja
(bad)
and
mov
mov
out
add
jp
jb
lods
inc
pusha
xchg
fild
sar
cmp
or
pop
call
rol
dec
pop
clc
bound
fiadd
test
push
sbb
(bad)
fs
(bad)
mov
mov
pop
retf
jl
mov
pusha
push
scas
mov
(bad)
jns
fsubr
pop
jnp
repnz
mov
les
mov
or
fucomi
xchg
dec
(bad)
dec
ja
adc
fstp
(bad)
loopne
jle
dec
pop
dec
and
aam
call
dec
mov
add
and
mul
loop
rol
fisttp
fcomp
xor
pop
mov
xchg
loope
push
test
push
fsubr
iret
mov
fisubr
cs
out
cmc
aad
jg
int
mov
call
fwait
dec
ins
cmps
dec
sub
in
sar
ja
ins
mov
nop
retf
aas
inc
loope
dec
inc
stos
ds
push
mov
clc
pop
daa
mov
add
and
mov
mov
repnz
fistp
inc
jp
bound
(bad)
call
scas
jge
cmp
mov
push
jmp
(bad)
jecxz
stos
dec
cmp
sar
xor
add
outs
ficom
push
mov
or
repz
xor
and
xchg
pop
shl
jg
dec
clc
inc
retf
test
shl
dec
shl
pop
sub
mov
daa
(bad)
sbb
add
jns
jecxz
xor
xchg
cdq
cli
(bad)
scas
cmp
or
es
das
jns
aas
out
or
and
(bad)
call
sub
sahf
cdq
movs
dec
outs
add
mov
fcomp
inc
pop
dec
ret
sub
pop
adc
sbb
push
mov
in
dec
out
cmp
or
mov
in
pop
test
nop
es
int3
mov
push
movs
mov
mov
or
mov
xchg
sub
pop
bound
stc
and
aas
jne
cmps
outs
call
and
push
pop
fmul
movs
jecxz
pop
(bad)
out
jo
cmp
iret
sbb
cmp
bound
fdiv
add
fsub
ror
inc
jmp
scas
or
cdq
hlt
mul
mov
std
lea
test
cmp
lods
das
add
xor
dec
loop
ss
cmp
dec
cmp
push
xor
fnstenv
or
and
xlat
push
mov
data16
aas
jbe
mov
(bad)
xchg
sub
(bad)
mov
xchg
pop
ins
sub
mov
mov
pop
std
rcl
xor
es
in
or
xor
mov
stc
lahf
adc
push
lahf
(bad)
test
arpl
pop
sub
icebp
int
aaa
xchg
movs
retf
adc
pop
add
mov
ds
xchg
xchg
sbb
or
daa
stc
inc
xor
adc
daa
stc
push
pop
sub
and
hlt
xor
movs
ins
cmp
test
push
or
in
cs
inc
(bad)
sub
xchg
sbb
adc
mov
jmp
(bad)
dec
je
std
push
dec
mov
je
push
js
mov
imul
pop
je
sbb
dec
push
jne
repnz
and
enter
add
jo
lds
inc
xchg
into
mov
and
lods
and
mov
mov
aad
(bad)
dec
retf
add
jno
jns
pop
mov
mov
sub
call
push
jg
out
cmp
jno
jno
pop
das
push
jmp
or
jbe
imul
pop
jl
ins
test
jne
cdq
dec
push
dec
jg
cwde
(bad)
pop
mov
movs
push
jl
(bad)
push
xor
add
jmp
fwait
imul
mov
jno
ins
shl
adc
inc
cmp
dec
dec
retf
jecxz
jo
iret
xchg
cmp
jp
pop
sub
jge
mov
adc
jno
inc
add
faddp
and
icebp
imul
xchg
movs
add
push
inc
mov
addr16
mov
rcr
xchg
adc
inc
inc
ror
mov
lods
int
jmp
iret
jo
xchg
fldenv
mov
xor
jo
movs
cmp
push
out
pusha
(bad)
(bad)
fs
jl
mov
xor
test
push
dec
aam
clc
sub
and
add
(bad)
push
mov
push
das
lds
shl
retf
fdiv
sbb
push
mov
xchg
jmp
cli
sub
cmp
les
xlat
mov
jbe
jmp
cmp
enter
retf
outs
mov
xor
cmps
and
jb
push
mov
mov
cmps
aam
push
mov
inc
xchg
or
int
fwait
jge
stos
pop
push
jmp
or
jbe
ror
iret
or
daa
xchg
pop
add
or
jb
mov
arpl
mov
rol
xchg
pop
or
mov
adc
xor
dec
xchg
jnp
push
fcomp
repz
clc
or
cmp
lahf
bound
or
sub
add
ret
jns
data16
cmp
test
push
fisubr
push
push
sub
lods
aas
rol
lods
sbb
pop
ja
pop
loop
cdq
pop
stos
retf
ins
cs
ins
enter
inc
and
xchg
daa
mov
jmp
fdiv
push
sbb
jecxz
jb
aaa
mov
fnstenv
stos
pop
imul
dec
mov
into
pushf
add
mov
add
mov
xor
mov
js
inc
call
dec
stos
shr
scas
add
sub
les
test
xor
xlat
je
ja
or
sar
cmps
enter
std
adc
js
movs
xor
push
dec
fwait
xlat
rcr
xchg
dec
push
inc
sbb
gs
pop
sbb
mov
in
xor
retf
xchg
ins
xor
retf
outs
sbb
fsubr
lock
stc
shl
in
mov
mov
xchg
cmp
inc
inc
jp
adc
inc
int
pop
in
mov
xchg
cmc
xor
sbb
jbe
inc
jl
mov
mov
test
xor
mov
push
in
jno
jbe
and
sub
scas
pop
push
adc
xchg
push
std
shr
adc
or
sbb
popf
lods
call
cmp
pop
inc
lods
adc
dec
xchg
or
jno
jo
xchg
mov
push
(bad)
fidiv
mov
out
scas
add
lods
mov
push
push
rol
retf
ss
aaa
xchg
leave
fsub
pop
push
test
out
or
mov
and
xor
ret
and
fwait
rcr
repz
add
data16
repnz
sbb
fwait
add
in
lock
mov
pop
lods
jb
sub
and
push
es
(bad)
loop
xor
xor
aaa
sti
jecxz
mov
ror
stos
pop
ins
pop
ret
jge
mov
add
push
mov
retf
add
sub
je
xlat
rcr
mov
inc
add
stc
movs
add
push
imul
into
cld
scas
push
cmp
hlt
aaa
sub
sti
xchg
add
(bad)
sahf
pop
lock
sbb
inc
xchg
fs
lods
sbb
aad
ja
int
(bad)
rcr
popa
jae
xchg
push
fbld
xchg
cmp
mov
push
(bad)
call
popf
fnstcw
push
shl
popa
clc
mov
xor
sub
mov
(bad)
(bad)
lock
dec
push
int
cs
inc
pop
ins
cld
push
add
sar
pusha
sub
retf
mov
add
lods
pop
dec
jg
mov
les
mov
lea
sub
or
pop
mov
jg
fisttp
sbb
repz
push
iret
mov
xchg
mov
jno
mov
out
aas
mov
mov
data16
outs
imul
sub
xchg
jge
repnz
icebp
xor
cmp
add
and
sub
or
pusha
popf
data16
js
ss
sbb
in
pop
pop
shr
mov
xchg
inc
inc
lea
(bad)
xlat
jle
into
mov
mov
adc
push
movs
add
mov
in
add
dec
push
call
mov
pop
and
pop
jne
jae
arpl
jno
test
ret
leave
jbe
sub
repnz
jmp
std
xor
leave
inc
(bad)
and
out
adc
jle
retw
dec
mov
int
push
cdq
pop
jnp
pop
sub
sbb
into
push
arpl
pushf
xor
inc
rol
xchg
retf
or
xchg
sbb
cdq
mov
push
xchg
jbe
(bad)
outs
and
sti
mov
push
inc
pop
lahf
(bad)
lods
cmp
pop
sbb
loope
or
jmp
test
(bad)
pop
ror
enter
outs
mov
addr16
add
dec
enter
enter
or
fs
(bad)
pop
inc
jns
xchg
ud1
outs
rol
or
and
lea
xor
pop
adc
or
mov
rcr
scas
ficomp
sbb
xor
aas
fistp
xor
test
ss
in
lods
mov
or
lahf
sbb
loopne
sub
aaa
pop
int3
movs
sbb
es
push
shl
(bad)
mov
test
push
clc
pop
arpl
int3
fs
outs
xlat
inc
(bad)
mov
inc
sub
fxam
add
inc
retf
xchg
sti
lahf
inc
iret
xchg
les
xchg
lahf
rcl
repz
mov
jmp
xor
jno
sbb
and
stos
or
or
gs
sub
and
or
cmp
xor
jg
xchg
xor
pop
jne
jns
sbb
push
xor
test
jb
push
pushf
imul
xchg
push
xor
int3
add
clc
jle
jg
sbb
xchg
cld
xchg
xchg
dec
push
out
mov
aam
outs
push
ja
sub
adc
outs
outs
cwde
popa
jecxz
js
scas
in
rcr
push
xchg
cmps
shl
mov
dec
rcr
jbe
sbb
mov
or
add
jg
loop
rcr
fistp
ds
xor
mov
(bad)
out
xchg
je
aaa
xor
mov
mov
pop
es
out
sti
jmp
je
adc
sar
xor
jae
or
mov
adc
lods
div
popf
fsubr
popfw
sub
and
dec
movups
mov
cmp
inc
mov
pop
or
jb
ja
rcr
inc
adc
(bad)
sub
js
dec
or
sub
adc
push
jge
pushf
fwait
push
or
out
xlat
inc
je
inc
sbb
sbb
jo
push
jmp
push
retf
shl
mov
pop
push
outs
loopne
jno
push
movs
aam
cmp
ja
shr
add
add
clc
xor
test
push
pop
mov
fidivr
pmullw
mov
aam
adc
sbb
or
int3
cmp
push
jno
popf
pop
inc
scas
in
adc
call
ins
or
xchg
daa
jnp
or
push
jb
icebp
cmp
adc
sbb
mov
out
or
neg
sbb
cmps
repz
loop
mov
ror
mov
jbe
dec
xor
addr16
out
add
jle
xchg
jo
jecxz
(bad)
jmp
push
jns
and
jg
add
imul
aaa
jnp
mov
clc
sbb
sub
xor
into
es
xchg
ficom
fisubr
xchg
int
cli
in
les
xor
adc
fst
dec
pop
aas
repnz
nop
inc
ja
test
test
aad
cmp
jb
dec
adc
fist
into
jae
mov
cmp
dec
ja
xlat
ret
inc
fmul
adc
mov
and
xor
and
jg
inc
mov
adc
movs
add
adc
cld
inc
xor
shl
adc
cmp
leave
add
mov
icebp
push
hlt
sub
fisubr
lahf
add
call
mov
add
sar
and
repz
push
jecxz
mov
mov
jb
and
mov
(bad)
fnstcw
cld
test
test
shr
mov
jnp
mov
and
and
nop
sti
fisub
xor
add
imul
leave
arpl
mov
sub
push
test
ds
jp
enter
inc
mov
into
loop
ret
adc
xchg
in
inc
ret
in
popa
rol
pop
push
inc
mov
dec
(bad)
pusha
adc
cmp
repnz
ja
pop
lods
rcl
add
xchg
fadd
ss
add
in
adc
les
pop
mov
mov
adc
pusha
jp
ins
pop
cli
movs
mov
bound
cli
pop
xchg
mov
push
sub
xor
xor
lock
jne
dec
dec
data16
jecxz
rcl
push
push
xchg
rcl
and
and
ficom
(bad)
cmp
lds
push
gs
mov
std
jmp
xchg
mov
ins
arpl
in
or
xor
std
in
push
sbb
stos
cwde
addr16
in
sub
mov
dec
push
loop
(bad)
stc
sub
and
jno
sub
sub
and
dec
data16
sub
outs
in
or
dec
(bad)
int3
and
mov
push
mov
retf
dec
(bad)
(bad)
push
inc
stos
sub
dec
pop
mov
adc
fcmovb
test
hlt
push
pop
js
mov
mov
(bad)
jecxz
mov
pop
adc
xor
adc
xlat
mov
xor
mov
jg
sub
out
push
mov
push
cmp
push
sbb
mov
jecxz
pop
jb
pop
pushf
push
stc
fldenv
mov
iret
adc
ins
divps
xor
sub
inc
dec
mov
out
ds
dec
or
xor
imul
push
mov
adc
test
xchg
sbb
push
call
sahf
cld
das
imul
aad
xchg
xchg
aad
nop
stc
outs
shl
cmp
cmps
and
xchg
aam
sbb
mov
rol
xchg
mov
cmc
stos
ret
mov
hlt
mov
popa
push
add
mov
shr
stc
mov
les
mov
xor
(bad)
sar
pop
inc
(bad)
mov
sub
sbb
cli
cmp
jns
bound
push
ret
aaa
jmp
xchg
loope
jae
and
push
adc
mov
jmp
idiv
fsubr
out
add
mov
int3
dec
pusha
jmp
dec
sub
and
test
inc
inc
(bad)
jp
outs
aas
xor
stos
sub
test
fidivr
movs
adc
call
mov
pop
sbb
or
bound
addr16
dec
out
cmp
mov
ds
sub
jns
aam
jge
iret
(bad)
mov
jbe
sbb
inc
outs
adc
push
inc
cmp
sahf
lahf
retf
dec
fwait
jge
out
leave
sub
les
popf
loop
xchg
div
dec
addr16
retf
push
aad
fcomip
xor
in
adc
mov
imul
xchg
mov
dec
jbe
sbb
xchg
xlat
frstor
inc
pop
cmp
ds
jmp
mov
(bad)
sub
call
scas
dec
cmp
xor
xor
or
fwait
rcl
dec
mov
mov
xor
adc
fcmovu
in
pusha
vcvtdq2pd
ret
sub
sbb
popa
and
repnz
and
stos
cmps
or
hlt
stos
mov
mov
inc
test
xchg
dec
xlat
clc
jmp
mov
sahf
adc
jbe
jl
xor
add
aam
mov
(bad)
leave
popf
mov
inc
arpl
shr
cli
jbe
jmp
inc
imul
mov
jle
inc
aas
nop
ins
xchg
push
outs
js
xchg
clc
mov
dec
xchg
mov
out
inc
jo
loope
pop
dec
inc
fst
add
loopne
fs
mov
adc
xchg
sbb
sub
or
pop
add
pop
hlt
(bad)
test
ret
and
or
push
jb
shl
xchg
lods
xchg
out
inc
mov
sar
sbb
cli
sub
frstor
jmp
or
fnstcw
sub
rcr
leave
mov
clc
ficom
sub
ja
push
popa
push
int3
jae
pop
aad
test
add
lods
and
pop
sub
inc
sar
dec
fcmovu
ins
(bad)
rcr
push
pop
loopne
jae
sbb
dec
sbb
push
(bad)
fsub
mov
shr
cli
js
push
add
inc
in
and
pop
loope
jae
pop
pop
mov
mov
mov
iret
push
cmp
push
cli
cs
ins
dec
adc
cmp
int3
push
cmp
int
xchg
mov
fbld
sub
movq
pop
jae
jae
fstp
sub
int
das
inc
ficomp
or
cmp
lods
sbb
aad
popa
dec
cmp
mov
or
dec
lahf
int
xor
popa
aad
popf
cmp
pop
dec
inc
push
pop
adc
pushf
int
or
inc
mov
stos
sbb
mov
pop
sti
push
xchg
jg
jecxz
mov
push
xor
pop
xor
jb
sar
and
aas
leave
sbb
repz
mov
in
test
clc
jae
or
push
aam
dec
pop
xlat
mov
fwait
jno
xchg
test
sbb
scas
cmps
add
inc
pop
ins
repz
jmp
sub
in
pop
pop
cmp
mov
sar
shr
call
popa
xor
int
xor
inc
cmp
iret
cmp
popa
jno
jbe
stos
xchg
mov
jne
ficomp
mov
into
xchg
ds
outs
cld
lock
ss
sub
xchg
jle
mov
or
movs
mov
and
cs
mov
ja
mov
nop
dec
gs
scas
fistp
pop
push
cmps
cmps
and
mov
and
bound
scas
jbe
loope
test
ds
js
mov
out
xor
(bad)
sbb
mov
pop
mov
(bad)
xchg
ret
jo
cmps
and
sub
sub
fisttp
add
jmp
test
mov
xor
or
xchg
aam
xchg
xor
scas
leave
mov
xchg
xchg
(bad)
adc
imul
aam
cmovns
arpl
jge
sti
xor
adc
popa
adc
mov
mov
hlt
stos
mov
movs
fist
mov
mov
mov
test
fstp
jmp
out
sbb
rol
sub
popf
rcr
scas
mov
shl
ficomp
mov
xchg
cmp
or
push
aas
cmps
inc
(bad)
and
cmp
pop
ins
inc
mov
loope
jmp
push
loop
ins
xchg
test
add
fdivr
xchg
mov
or
aad
pop
lock
dec
push
inc
jp
push
xor
cs
aas
rcl
push
push
or
mov
mov
dec
add
stos
int3
push
sti
paddusw
cmp
sbb
sub
jns
jg
iret
inc
push
pusha
movs
cmps
mov
loope
sub
icebp
rcr
adc
cli
mov
sub
fadd
shl
sub
push
adc
sub
rol
xor
ins
cmc
ss
sbb
mov
fild
xchg
sub
pushf
sbb
sbb
jne
fldenv
mov
pop
adc
outs
sbb
ds
sti
nop
adc
pop
push
fwait
cwde
add
jb
inc
jb
jmp
dec
test
ret
and
dec
icebp
cmps
lea
daa
into
xor
pop
or
and
inc
rcl
mov
xchg
mov
inc
fs
xchg
mov
dec
xchg
ret
sbb
pop
cld
cmp
test
loopne
cmp
in
xchg
rcr
sahf
and
mov
pop
dec
fwait
mov
fld
sbb
dec
adc
cmp
xor
(bad)
retf
nop
or
paddusb
dec
mov
lds
cmps
xor
iret
out
popf
lahf
inc
or
pop
pop
xchg
pop
push
pop
arpl
mov
or
mov
stos
sub
shl
sub
ficom
mov
lea
loopne
and
in
pusha
or
popf
das
or
pop
scas
aas
inc
test
cs
xchg
inc
add
call
mov
mov
loop
jg
push
in
out
add
pop
mov
mov
ins
call
js
leave
and
cmp
ds
movs
sbb
or
arpl
or
sahf
push
dec
int
daa
and
fwait
test
mov
or
rcl
shl
sbb
dec
icebp
inc
js
push
add
push
stos
inc
inc
js
ins
mov
in
push
aam
mov
call
(bad)
les
sti
call
add
scas
ss
push
push
ins
popf
xchg
cdq
mov
sti
repz
bound
sti
leave
inc
xchg
mov
xor
xchg
pop
test
fwait
pop
push
and
xlat
cmp
mov
pushf
mov
(bad)
call
repz
xor
pop
cmp
push
jnp
push
jg
idiv
fdivrp
xor
sar
iret
fisttp
mov
bndldx
xor
ficom
mov
imul
dec
jecxz
mov
adc
int3
lahf
data16
sub
lods
ins
jnp
inc
cli
stos
and
imul
mov
mov
retf
mov
dec
loope
xor
add
jns
rcl
sub
sub
push
cdq
aas
jmp
out
push
out
inc
cmps
inc
xchg
adc
mov
sub
pop
push
or
popa
scas
lods
mov
push
jmp
dec
in
sbb
dec
mov
pop
pop
(bad)
mov
hlt
shl
add
imul
std
dec
fistp
lock
inc
cwde
(bad)
(bad)
jmp
xchg
fisttp
jp
push
dec
push
call
enter
aam
(bad)
pop
add
dec
xor
jge
or
or
mov
scas
(bad)
mov
adc
sub
in
mov
pop
xchg
mov
xor
or
daa
cmps
sbb
xor
mov
dec
and
addr16
call
inc
call
inc
jmp
stc
cmp
sub
repz
pushf
cmp
dec
mov
pop
push
pop
mov
in
cs
and
dec
ss
pop
in
sbb
outs
daa
xor
sbb
push
neg
xchg
int
sahf
mov
or
sti
call
sub
les
cmc
mov
cwde
inc
sub
pop
sbb
pop
sub
push
scas
jg
add
outs
cmp
aad
out
xchg
pop
mov
das
xor
mov
jg
lods
mov
mov
sub
sahf
push
es
pop
int
daa
repnz
js
inc
cwde
jo
or
sub
mov
pushf
(bad)
jp
lods
add
pop
xor
pop
inc
ja
sub
jmp
adc
les
add
push
(bad)
js
je
retf
xor
ds
push
or
push
adc
cs
je
xchg
shr
and
or
fwait
cwde
movs
iret
or
and
pop
jb
ror
xor
add
stos
xchg
xchg
aaa
jae
retf
sub
mov
test
xchg
xor
iret
cwd
sbb
jp
cli
dec
xor
and
mov
mov
xchg
dec
or
and
sub
and
jl
icebp
dec
das
aam
push
fldcw
mov
add
cli
fisubr
mov
add
mov
and
enter
adc
pop
daa
and
mov
push
mov
jae
movs
mov
sti
loopne
push
pusha
(bad)
int3
fist
xchg
leave
jmp
cmp
lock
mov
xor
adc
icebp
mov
jecxz
jl
daa
dec
fcmovnu
mov
xchg
bnd
adc
mov
sub
cmp
push
xlat
int
and
jecxz
iret
pop
pop
sahf
sub
sti
ja
loop
into
fs
cmp
mov
loope
fwait
and
es
inc
xchg
test
dec
cwde
add
push
adc
push
sub
pop
jge
xor
popf
test
mov
rcl
scas
xlat
add
(bad)
dec
jns
inc
xor
jo
push
xor
xchg
mov
jl
xchg
jbe
jbe
sbb
rol
pop
jmp
mov
add
xor
push
jnp
lea
test
adc
inc
adc
cmp
mov
call
pop
mov
not
imul
retf
stc
sub
ror
fwait
dec
pop
pop
(bad)
push
cmp
shr
sbb
movs
dec
into
inc
test
xor
shl
fwait
movs
in
inc
xor
sahf
pusha
fist
and
push
push
cs
out
jns
mov
and
addr16
aam
pop
inc
test
cwde
xor
not
mov
jmp
add
outs
xor
pop
xchg
adc
push
out
push
push
mov
dec
dec
mov
imul
mov
retf
add
and
(bad)
ins
in
xlat
(bad)
jmp
movs
mov
dec
mov
(bad)
loop
xchg
shl
ins
sbb
cmp
add
inc
or
(bad)
xchg
hlt
retf
and
push
rol
mov
shl
popa
xor
xor
inc
pop
push
retf
push
mov
rcr
repz
mov
xchg
jg
or
into
fisubr
repnz
sub
lea
dec
add
mov
mov
outs
push
mov
gs
ins
cmp
dec
outs
inc
or
in
lahf
dec
push
inc
iret
jb
test
fwait
icebp
imul
mov
inc
test
dec
fwait
adc
out
test
pop
sar
loop
call
mov
sbb
or
add
fdivr
mov
jmp
movd
stos
sbb
in
xchg
or
pop
out
pop
(bad)
fs
pushf
cdq
(bad)
cmps
out
jno
fidiv
aad
shl
xchg
push
sub
pushf
dec
lods
mov
mov
adc
sub
dec
enter
and
rcl
and
retf
xor
mov
mov
into
pop
je
xlat
pop
and
pop
dec
(bad)
hlt
popa
int3
jno
xor
clc
xor
nop
xchg
outs
xchg
ss
loopne
imul
mov
(bad)
dec
add
lea
(bad)
stos
fadd
enter
xchg
jb
repz
sub
push
dec
sub
or
mov
repz
les
rcr
daa
adc
or
add
add
ds
int3
out
cmp
inc
sbb
dec
jmp
cmp
pop
sub
sub
mov
(bad)
fst
cmp
dec
inc
jo
pop
xor
in
pop
in
repz
sub
movs
jb
imul
push
mov
leave
dec
mov
shr
cwde
xchg
jbe
test
inc
or
ja
adc
and
call
or
icebp
mov
daa
loop
mov
mov
push
(bad)
test
test
test
addr16
mov
xchg
push
mov
cmp
sahf
mov
jns
mov
sub
aad
push
add
icebp
mov
jg
inc
sti
sub
mov
lods
cwde
daa
stc
rcl
mov
fst
ret
mov
cmp
and
ror
cmps
leave
push
mov
pop
inc
sub
pusha
pop
outs
rol
mov
mov
nop
in
outs
mov
sub
jmp
mov
cmp
lea
ror
leave
jne
xchg
dec
loop
(bad)
mov
add
fist
cmp
fist
adc
lods
push
cmps
int
sub
jmp
inc
lds
int
scas
add
aas
ins
ror
xor
(bad)
xor
inc
mov
adc
hlt
cld
mov
mov
mov
nop
cmp
dec
adc
jecxz
xchg
xchg
jbe
jbe
add
inc
and
mov
mov
jl
add
pop
daa
pop
xchg
test
ret
idiv
and
add
pop
test
enter
sbb
fs
sub
add
or
mov
and
jl
adc
mov
dec
lods
xlat
xor
pusha
scas
aad
(bad)
out
mov
and
mov
adc
xchg
dec
popf
scas
xor
fwait
xor
movs
mov
sub
lahf
jmp
xchg
cdq
mov
jg
sahf
or
push
lahf
jge
and
cli
iret
add
(bad)
push
out
(bad)
sbb
sbb
pop
mov
sub
pop
sub
call
add
shl
push
pop
inc
add
repnz
jge
mov
sub
cwde
ins
add
repnz
pop
xchg
dec
fbld
test
ds
add
jns
or
outs
out
fisubr
cmps
dec
out
lods
jbe
(bad)
dec
stos
(bad)
je
xor
jo
sbb
cmp
push
push
mov
popf
aam
adc
in
in
ja
out
mov
nop
jns
test
stos
out
cmp
add
shl
dec
mov
mov
jnp
and
(bad)
dec
rol
outs
mov
ins
iret
in
and
cli
mov
mov
cs
lea
aas
dec
rol
and
and
ret
repnz
sub
fdiv
pop
cmp
push
pop
jo
fidivr
sub
add
push
bswap
lahf
popf
(bad)
dec
aas
add
dec
div
shl
sub
call
sub
jmp
fadd
inc
mov
mov
jb
shr
pusha
and
jae
and
mov
mov
pop
clc
call
sbb
pop
daa
mov
and
pop
nop
leave
jnp
xchg
fisubr
or
fsub
loope
dec
mov
ss
iret
inc
push
or
xchg
jl
mov
js
outs
test
xchg
push
mov
push
adc
sub
push
cmc
(bad)
stc
(bad)
mov
xchg
adc
push
mov
inc
dec
movs
sbb
call
dec
pop
xor
adc
sbb
jg
int3
bound
imul
ucomiss
push
adc
stc
push
mov
xchg
fs
mov
addr16
(bad)
xchg
ret
jbe
jecxz
jge
out
loopne
push
sbb
mov
arpl
in
xchg
mov
xchg
sbb
sbb
ficomp
add
lahf
sbb
sar
lock
push
or
retf
jae
xchg
out
in
xchg
push
adc
mov
mov
or
dec
mov
pop
lea
jne
lock
ret
jnp
xor
shl
sub
in
imul
xchg
and
cmp
jbe
and
jmp
and
mov
addr16
xor
lea
mov
mov
push
(bad)
shl
jb
cpuid
mov
mov
(bad)
icebp
push
ss
adc
sub
mov
popf
xchg
or
adc
fsub
jmp
and
or
int
aad
pushf
mov
fisub
add
call
movs
jge
and
loope
je
daa
js
(bad)
test
xor
sub
fucomip
inc
mov
nop
aas
(bad)
push
jnp
fcomip
inc
gs
sbb
mul
mov
mov
push
mov
mov
cmc
mov
sbb
or
sahf
js
data16
scas
in
mov
mov
leave
lods
inc
mov
jg
sbb
add
mov
out
jns
push
mov
inc
mov
pushf
xor
push
jbe
pop
(bad)
hlt
jl
aad
jmp
add
bound
mov
adc
call
imul
push
xlat
and
mov
popa
add
bndldx
cwde
in
loopne
movs
and
popf
icebp
mov
shl
push
xchg
sbb
ss
mov
lods
or
mov
test
inc
xor
sub
in
cmp
pop
inc
leave
std
xchg
in
sub
mov
rcr
and
pusha
test
mov
add
or
jmp
pushf
xor
popa
sub
enter
jnp
cmp
(bad)
xlat
fild
cli
and
ja
push
jns
jbe
push
in
shl
addr16
in
jmp
and
adc
adc
dec
sub
dec
in
inc
xchg
(bad)
or
stc
in
sahf
int
retf
adc
mov
retf
pop
push
loopne
outs
cmp
xor
std
mov
cmp
ret
daa
jae
inc
jmp
(bad)
push
xchg
jne
sar
xor
in
and
inc
push
cmp
mov
(bad)
xchg
mov
adc
and
(bad)
imul
call
pop
pop
mov
shl
sub
or
xor
rcr
les
inc
cmps
adc
loopne
pop
xchg
jmp
sbb
cmps
mov
jg
add
inc
in
sbb
jmp
in
aam
add
xchg
jnp
sbb
(bad)
scas
inc
jns
xor
aad
xchg
leave
inc
push
adc
lock
test
or
cmp
(bad)
inc
push
and
stos
jmp
dec
jne
(bad)
adc
push
dec
push
in
mov
lahf
cmp
stos
and
xor
mov
sbb
push
push
sahf
mov
fwait
das
sub
jne
bound
shr
jmp
fimul
repnz
sub
in
fisubr
cld
les
push
mov
popf
inc
fstp
(bad)
fmulp
fcom
add
xchg
outs
xchg
leave
push
idiv
fwait
pop
(bad)
daa
adc
sbb
adc
adc
add
ror
dec
aad
jg
xchg
aas
xchg
pushf
sub
dec
pop
ja
jnp
or
dec
lods
inc
(bad)
loope
and
jnp
xor
jle
sub
fs
iret
jmp
adc
jbe
push
int
mov
or
cmps
cmps
jmp
or
cdq
lods
mov
fistp
cmp
jae
xlat
sub
xchg
ja
mov
push
cmp
xchg
jb
in
sti
xchg
pop
inc
push
jno
mov
pop
jp
sub
pop
cmps
lods
and
or
lock
fistp
in
test
das
inc
cmp
imul
jnp
jmp
hlt
rdpmc
cmp
ja
or
je
fldcw
xor
aam
mov
sahf
or
push
pop
in
and
mov
ins
imul
enter
fsubr
pusha
jmp
push
xchg
mov
push
mov
push
pop
stc
mov
inc
mov
ret
adc
and
pusha
repnz
inc
jo
out
xchg
mov
fsubp
xchg
(bad)
mov
jp
shr
in
pushf
(bad)
movs
push
sahf
fnstenv
inc
ret
mov
outs
pusha
(bad)
and
push
add
daa
int
pop
jae
imul
pop
pop
data16
dec
repnz
enter
cdq
inc
jecxz
pusha
mov
push
lahf
fs
adc
stc
ficom
inc
ror
mov
dec
xchg
fsubr
xor
pop
lods
and
sbb
aaa
xor
sub
inc
xchg
stos
cmp
xlat
int
mul
mov
fld
rcl
mov
or
mov
fldlg2
mov
sub
pop
and
div
inc
ins
test
(bad)
fcomp
xor
cmp
push
ret
mov
add
je
jbe
lahf
pop
sbb
fistp
mov
scas
arpl
pushf
outs
fmul
aaa
aam
test
sbb
jg
ins
pop
mov
and
out
nop
nop
xchg
in
and
xchg
mov
lods
dec
and
enter
sar
jns
jnp
xchg
xor
call
mov
ja
imul
loopne
loope
cmp
(bad)
mov
(bad)
mov
bound
push
add
adc
or
(bad)
imul
lds
mov
fidivr
fbstp
mov
cmp
ins
shl
aas
lods
cmp
imul
pop
mov
fst
cmps
stos
sbb
xchg
jle
outs
xor
icebp
loopne
mov
push
xchg
repnz
xchg
add
dec
bnd
dec
jge
int
jae
aad
jg
shl
or
sub
push
and
jae
ror
mov
shr
ffreep
pop
test
pop
sub
push
jmp
pushf
adc
mov
das
je
xchg
mov
call
pop
bound
in
or
gs
and
stos
clc
mov
ror
jb
popa
lds
add
stos
xor
cdq
mov
test
jmp
inc
popf
mov
mov
jge
cwde
mov
jo
imul
push
mov
fidiv
dec
dec
mov
mov
and
xchg
mov
rol
cdq
push
dec
(bad)
aaa
pop
iret
cmp
cmps
add
or
add
stos
dec
ins
dec
fisttp
push
scas
ins
mov
cdq
dec
xor
repnz
aas
sbb
lock
mov
xchg
xchg
adc
mov
aam
loopne
pop
repz
aad
mov
pop
push
add
retf
add
in
(bad)
jge
shl
stos
jne
jne
pusha
or
mov
push
xchg
jns
(bad)
jl
or
pop
inc
not
push
pop
imul
shr
push
sub
in
jmp
mov
jmp
test
jp
imul
sub
sub
dec
add
xor
push
add
push
mov
shr
and
push
(bad)
in
nop
(bad)
cld
dec
(bad)
cmp
or
xchg
sub
outs
stos
dec
mov
push
and
sub
inc
pop
and
adc
xchg
or
sbb
dec
sti
cmp
jns
ds
ja
inc
adc
hlt
mov
dec
cmps
inc
pop
loopne
ins
fdivr
test
pop
cmc
mov
fwait
ds
sbb
enter
cmp
pop
and
jg
arpl
xchg
nop
dec
out
and
xor
mov
xor
cmp
dec
or
jmp
inc
shl
jns
add
mov
into
retf
mov
ss
add
sbb
jo
ret
dec
inc
add
icebp
dec
popf
sub
outs
in
pop
jno
and
inc
shl
dec
cwde
ds
fcmovnb
retf
sti
and
dec
inc
or
add
xchg
dec
stos
mov
dec
and
sub
push
iret
fwait
outs
(bad)
aas
out
int
(bad)
push
dec
rcr
lods
(bad)
rol
ins
cmp
pop
arpl
sbb
jmp
sbb
fucom
mov
add
outs
fwait
dec
test
icebp
pop
mov
(bad)
stc
inc
cmp
sahf
xlat
call
mov
mov
sbb
push
hlt
pop
ins
pop
inc
pop
aas
push
adc
in
and
(bad)
adc
rcr
pop
sub
pop
(bad)
aam
shr
test
sbb
jae
jnp
shl
jo
inc
cwde
fs
sahf
mov
and
imul
jle
imul
call
mov
ins
jne
mov
mov
fadd
mov
fidivr
xor
mov
das
sar
mov
dec
cli
neg
add
mov
inc
inc
push
inc
call
repz
adc
add
jno
lods
and
bound
add
stc
xchg
mov
pop
popa
and
mov
xchg
mov
xchg
in
(bad)
fidivr
ret
test
jbe
xchg
or
popf
dec
mov
push
and
push
aaa
jmp
xchg
ss
fisttp
pop
lea
outs
iret
add
xor
sub
aaa
jle
mov
test
fcom
jge
adc
lahf
mov
repz
psubusw
lods
and
(bad)
and
mov
or
sbb
call
sbb
mov
pop
jmp
pop
ret
rcl
sbb
gs
out
outs
repz
cmps
int3
stos
mov
jmp
lock
into
ins
or
mov
cwde
xchg
xchg
inc
sub
cmp
ficomp
push
retf
fld
xor
mov
dec
mov
int
ficomp
aad
ins
out
push
call
imul
lods
add
push
sbb
add
xchg
jae
sbb
popa
stos
dec
in
outs
nop
jnp
outs
lea
arpl
push
cmps
push
into
add
or
fwait
pop
lds
sub
mov
and
retf
xchg
loope
lahf
sar
into
jo
loopne
fbstp
lahf
mov
fdivrp
scas
xor
fadd
mov
jmp
or
or
and
mov
jmp
jbe
and
xchg
dec
mov
sub
call
cmps
and
fs
or
leave
add
inc
pop
or
xor
cli
ins
(bad)
adc
sub
jne
dec
push
jmp
pop
test
mov
ins
push
sub
scas
fst
imul
pop
ins
jbe
jp
rcl
retf
nop
or
imul
adc
fwait
stc
jno
cmp
idiv
inc
inc
add
sbb
jmp
dec
jg
sbb
lahf
mov
repnz
add
adc
sub
push
into
mov
addr16
and
sub
hlt
cmp
and
cdq
dec
adc
add
xor
push
in
jmp
jmp
test
cmp
pop
mov
pop
and
xchg
daa
clc
push
push
mov
xchg
push
ret
dec
js
cmp
mov
enter
adc
jmp
repnz
inc
ja
cmp
cmp
cmp
loope
lock
fmul
jbe
inc
in
xor
repz
lods
cmps
jns
push
xchg
mov
lea
mov
xor
shl
adc
xor
out
rcr
ds
test
and
movs
xchg
lds
js
enter
mov
fimul
push
pop
stc
sbb
mov
jb
popf
jle
(bad)
leave
push
adc
lock
inc
repnz
jp
jnp
inc
outs
lods
xor
mov
jnp
enter
retf
out
mov
fnstsw
sub
jg
xor
inc
push
int
xchg
mov
and
aam
movs
jecxz
or
pop
mov
mov
leave
cdq
adc
pushf
int3
cmp
test
pop
sti
ficom
aas
stos
and
addr16
(bad)
stc
xlat
inc
loop
pop
adc
push
and
pop
cmp
jae
cmp
xchg
add
xor
xor
pop
popa
leave
adc
add
fcomp
lea
push
int
cld
enter
scas
mov
mov
inc
nop
ret
stos
out
mov
movs
inc
or
in
frstor
xchg
pop
adc
loop
push
push
xor
(bad)
mov
inc
dec
stos
mov
in
jecxz
mov
retf
push
and
adc
jnp
and
fmul
hlt
shr
sub
push
mov
adc
or
push
cmc
cmp
mov
mov
fucom
in
movs
push
cs
push
push
jl
imul
pusha
adc
and
mov
xchg
call
sub
sbb
mov
hlt
cmp
xchg
dec
cmps
fs
or
out
or
push
dec
in
pop
data16
adc
add
mov
aam
jae
das
scas
pop
jbe
outs
sbb
push
jg
cmps
cmp
repz
pop
adc
adc
xchg
(bad)
pop
cmp
cmps
test
sbb
sub
push
jmp
dec
mov
shl
pop
ficomp
ja
cmp
xor
fild
cmc
pop
jns
fidivr
clc
gs
mov
and
xor
ret
stos
shl
adc
icebp
mov
sub
lods
loope
mov
mov
mov
cwde
or
mov
jmp
jp
sbb
adc
sahf
ret
stos
xchg
and
or
sti
fcom
cdq
pop
push
(bad)
dec
mov
jae
xor
mov
pop
fcmovnb
mov
jge
mov
mov
push
mov
fild
xor
retf
je
les
or
mov
pop
imul
cmp
or
call
pop
test
rcl
fld
mov
mov
jg
fs
mov
mov
popa
mov
and
and
sub
sub
aaa
dec
rcl
jno
pop
iret
iret
jbe
mov
bound
ins
mov
inc
jl
cwde
sbb
pushf
xor
retf
pop
rol
addr16
jp
sbb
xor
and
cld
cmps
jo
mov
mov
data16
pop
data16
inc
mov
jbe
iret
add
add
ror
xchg
and
adc
jmp
clc
push
into
xor
outs
xchg
push
dec
data16
out
push
cwde
and
jecxz
cli
sbb
push
jmp
mov
in
fidiv
stos
fist
xchg
lds
inc
or
mov
(bad)
sbb
cmp
sbb
lahf
aad
outs
pop
addr16
and
test
add
outs
cld
stos
xor
sub
adc
and
jbe
ret
add
push
pop
int
lods
pop
fild
(bad)
scas
cld
jmp
sub
and
or
xlat
cmp
sub
sub
xchg
add
and
push
fcmovbe
enter
dec
cmps
or
je
dec
enter
ror
pop
(bad)
cdq
xchg
inc
or
ss
hlt
mov
mov
sbb
mov
add
popf
std
xchg
cdq
(bad)
das
push
lea
lds
mov
add
mov
adc
int
outs
ins
pop
fdivr
sbb
sbb
mov
aad
int
cmp
jo
pop
push
pop
hlt
out
pop
add
xchg
pop
repnz
shl
pop
jl
data16
jns
lods
in
cwde
sub
mov
and
or
inc
popa
sub
cdq
test
sub
pop
jo
out
mov
dec
jae
pop
shr
cmps
mov
not
in
scas
push
fcom
scas
dec
arpl
dec
inc
and
movs
jg
stos
mov
iret
add
lock
scas
and
jne
pop
jg
mov
frstor
cmp
mov
sub
arpl
inc
retf
add
aad
sub
mov
jb
mov
add
aam
and
jno
push
xchg
lods
or
and
jne
leave
lock
sbb
scas
imul
hlt
(bad)
xor
int
cmp
aaa
or
sub
jmp
popa
inc
inc
lock
arpl
das
lock
call
ficomp
aam
pusha
or
cli
and
out
test
xchg
sbb
imul
add
loope
xor
pop
mov
(bad)
dec
out
dec
jo
add
or
ret
daa
pop
neg
int
daa
cld
xchg
scas
shl
or
dec
lods
bnd
(bad)
test
pop
or
enter
mov
jmp
jo
rcl
shl
fild
out
aas
and
scas
cmps
enter
ja
sahf
jmp
jo
outs
js
sbb
addr16
jnp
sbb
add
inc
mov
sub
sub
retf
clc
jne
mov
fdivr
mov
mov
dec
push
mov
movs
aaa
cmp
mov
fwait
(bad)
sti
add
dec
pop
sub
ja
sub
and
pop
iret
push
xchg
mov
sar
das
mov
rol
jnp
aad
lods
and
aad
push
imul
push
ror
mov
dec
or
out
mov
in
ins
jae
call
mov
idiv
nop
movs
jmp
fmul
pminub
iret
and
div
adc
mov
shl
in
gs
jne
inc
call
push
and
ja
outs
addr16
sbb
and
call
push
std
shr
pop
xchg
fnstenv
cmp
out
adc
fnstcw
mov
ss
shl
and
call
push
xor
dec
in
push
inc
add
imul
sub
pop
inc
das
cmp
sub
fisttp
jmp
xor
test
xchg
(bad)
jl
ret
and
ret
xor
aam
hlt
jnp
clc
lock
sbb
jl
and
add
lea
stos
ror
aam
adc
jmp
test
xchg
and
(bad)
cmp
cmps
fwait
stc
rol
fs
lods
jg
(bad)
in
addr16
mov
jl
mov
clc
jo
sub
test
shl
repz
enter
(bad)
fs
nop
sbb
dec
push
fild
lods
pusha
jmp
inc
(bad)
push
or
mov
daa
test
mov
fwait
mov
inc
(bad)
mov
inc
pop
xor
fild
iret
push
jbe
add
out
push
mov
inc
adc
push
lods
jg
inc
aad
pop
ins
xchg
jae
aas
jge
pop
mov
and
es
aas
jp
mov
cli
fisttp
imul
adc
fs
fldcw
stos
in
lock
inc
mov
jbe
aaa
jmp
mov
outs
push
mov
daa
adc
mov
xchg
and
mov
or
pop
call
js
push
repnz
mov
test
std
jg
(bad)
out
adc
(bad)
pop
ret
jnp
inc
mov
mov
push
(bad)
mov
push
in
xchg
cmc
inc
shr
mov
popf
cmc
fdiv
test
mov
loope
jge
and
outs
xor
ja
jmp
jae
mov
mov
outs
fwait
cmps
sub
xor
int3
outs
fadd
adc
xchg
movs
repnz
gs
int
outs
lds
movs
std
add
push
xchg
adc
sub
shl
push
mov
enter
retf
ficom
leave
pop
ja
xor
clc
fsubr
add
push
push
jo
fdivr
dec
hlt
dec
pop
push
jmp
cmp
aam
std
adc
and
mov
add
clc
add
push
pop
push
icebp
cmp
fsubr
(bad)
xor
cmp
xor
movs
arpl
pop
mov
and
mov
mov
xor
inc
cdq
fsubr
add
int
or
push
pop
in
les
out
adc
ror
sbb
shl
or
dec
push
xor
add
retf
inc
frstor
jle
pop
ins
add
mov
neg
nop
jecxz
hlt
xchg
mov
in
mov
out
mov
jmp
ss
cmp
dec
test
jns
nop
pop
rcl
loopne
jae
leave
pusha
adc
cmps
cmp
loope
mov
stc
dec
and
mov
pop
cli
mov
ret
outs
es
pop
mov
dec
sti
scas
ss
aam
test
mov
(bad)
(bad)
in
or
xlat
xchg
sub
movs
add
jmp
movs
push
xor
pusha
out
inc
xchg
pop
and
xor
fist
pop
jb
adc
inc
sbb
mov
stc
jns
jge
in
inc
movs
and
mov
inc
cmp
sbb
cmps
mov
inc
and
pavgw
mov
push
pop
dec
xchg
sub
cmps
rcr
jge
jns
shr
pushf
xor
ficom
aam
outs
daa
and
cmp
ds
push
add
popf
cmp
into
sub
jge
repnz
ds
sub
ds
loope
into
lock
cmc
push
sub
hlt
push
pop
cwde
shl
jmp
sub
or
push
dec
lods
xchg
adc
inc
sub
mov
mov
mov
dec
jmp
jno
cmp
mov
repz
int
jmp
inc
pop
push
pop
loope
dec
dec
into
mov
hlt
jl
rcr
mov
movs
(bad)
int
bound
dec
retf
dec
pop
cmp
sub
mov
lds
imul
adc
popf
cmp
sub
ds
inc
add
push
outs
pusha
fwait
ret
cmp
outs
dec
adc
mov
(bad)
mov
in
in
sub
fistp
pop
cmc
sub
lods
adc
pop
dec
or
retf
leave
mov
pop
jg
mov
nop
adc
sbb
(bad)
xchg
imul
mov
and
inc
cmp
mov
popa
ja
ficom
enter
hlt
ret
int3
add
lock
icebp
(bad)
aas
mov
paddsw
fsubr
rcl
outs
push
stos
jno
std
sub
(bad)
das
lods
dec
nop
xchg
in
sahf
mov
and
sub
fistp
xor
xchg
pushf
popa
push
sbb
ret
mov
hlt
out
mov
cmp
mov
aas
cmp
iret
fisub
(bad)
(bad)
sbb
stos
pop
jg
ss
mov
(bad)
in
fld
sbb
mov
mov
test
pop
out
jns
adc
rcr
lea
push
mov
cmps
shr
xchg
fiadd
in
inc
mov
xchg
sub
sub
imul
int
arpl
push
sub
jle
sbb
mov
push
mov
push
mov
mov
push
mov
cdq
pop
cdq
add
and
fidiv
daa
mov
std
out
mov
adc
enter
xchg
pop
addr16
push
jmp
mov
(bad)
jg
xchg
ss
into
and
fistp
jl
pusha
(bad)
aaa
add
in
sub
aaa
sub
sbb
fs
ins
(bad)
jp
mov
test
bound
add
rcr
xchg
adc
and
jno
cdq
mov
dec
int3
xchg
xchg
out
jo
sbb
movs
push
sbb
xor
je
xchg
push
cld
pop
in
repz
int3
stos
les
retf
pop
pop
or
sub
sub
out
fisttp
pop
das
inc
sub
(bad)
lahf
(bad)
cdq
(bad)
lds
sub
sub
push
test
popa
and
mov
mov
sub
or
mov
popf
lods
dec
dec
adc
add
adc
dec
out
adc
int
fdiv
adc
pop
movs
and
push
(bad)
xchg
into
or
mov
in
into
scas
cmps
ret
xor
lock
jg
cs
(bad)
mov
sbb
shl
test
pop
adc
or
jle
(bad)
inc
or
xor
aas
cmps
into
jp
(bad)
ins
push
rol
inc
push
enter
test
xchg
jmp
fmul
pop
push
inc
pop
mov
stos
cmp
fs
(bad)
retf
daa
retf
inc
cli
arpl
or
push
push
(bad)
cld
fist
repnz
or
and
add
xchg
mov
mov
ret
stc
(bad)
out
(bad)
dec
retf
pop
inc
pop
pop
scas
neg
fld
push
jb
ror
add
pop
cdq
sub
lods
stos
mov
imul
out
pop
jns
cmp
out
nop
xchg
daa
mov
aas
gs
mov
jbe
std
push
leave
xor
or
test
xchg
mov
xchg
jmp
inc
push
mov
(bad)
add
rcl
(bad)
cmp
(bad)
mov
xor
add
into
pop
pop
mov
shr
test
or
inc
mov
cmp
lds
push
sbb
aas
data16
call
fld
jecxz
mov
aaa
cmps
lods
lods
or
sub
cmps
mov
dec
add
fcomp
dec
or
scas
inc
jmp
loope
ds
icebp
cld
lods
jnp
and
bound
scas
xchg
(bad)
xor
aad
jae
ins
(bad)
outs
fild
inc
or
add
loope
adc
neg
out
xor
xor
sub
pop
jmp
sub
or
sqrtps
adc
and
pop
mov
pop
fsubr
jmp
push
rol
mov
(bad)
sti
push
inc
ret
into
int
repnz
jmp
mov
adc
(bad)
(bad)
pop
adc
imul
mov
inc
inc
sbb
push
shr
sub
scas
xor
(bad)
stos
sub
mov
mov
ds
xchg
mov
imul
ja
movs
mov
jg
ret
fcom
movs
outs
div
jecxz
dec
jne
std
scas
inc
mov
and
jg
push
xlat
mov
call
clc
cmp
cmps
cmp
xchg
outs
test
movs
xchg
fadd
inc
push
mov
dec
je
loopne
shl
jns
mov
iret
mov
jbe
imul
xchg
mov
outs
(bad)
mov
cmps
clc
mov
lods
pop
and
cmp
lahf
pop
sbb
sbb
mov
retf
aam
sub
(bad)
fidiv
cmps
fdiv
ins
jecxz
fist
lods
mov
stos
sbb
movs
mov
fwait
and
fimul
xchg
and
out
jne
test
push
mov
faddp
sub
jecxz
ds
mov
idiv
cmps
ret
pop
popa
cmp
push
out
sub
dec
or
push
cmp
push
jecxz
cs
jmp
leave
push
dec
and
and
mov
cmc
xchg
push
pop
stos
inc
test
ins
into
js
in
call
cli
pusha
imul
jmp
pop
in
(bad)
sub
and
push
push
dec
aas
fwait
sbb
outs
sub
jmp
in
xor
lods
call
jmp
sar
shl
das
call
pop
and
sbb
inc
mov
out
mov
(bad)
scas
push
push
xor
rcr
sar
pop
jne
cmp
sahf
sbb
jae
jmp
sub
dec
sub
popf
pop
inc
stos
push
adc
mov
mov
cdq
xor
repz
cmp
cmp
dec
xor
arpl
cmp
fnsave
aad
adc
xor
add
sar
outs
pop
push
xor
sbb
xor
and
dec
jle
cmp
mov
pop
sbb
mov
rol
lods
jmp
repz
xchg
movs
cmps
out
xor
jae
mov
sbb
xor
mov
je
test
xchg
ins
mov
fwait
and
in
mov
push
and
xchg
add
cs
mov
xchg
sbb
outs
(bad)
sub
ror
mov
in
mov
mov
fiadd
pop
in
sbb
popf
adc
in
push
or
fs
and
movs
sbb
sahf
popf
popf
jnp
push
les
mov
(bad)
movs
rol
xor
out
lea
mov
repnz
out
out
in
idiv
fldcw
mov
jo
add
sbb
cmc
inc
mov
dec
and
or
sbb
test
lahf
adc
sub
cmc
popf
jle
push
movs
cmp
pop
popa
enter
inc
in
jge
xor
mov
mov
test
ret
ins
xchg
sub
mov
push
xchg
cld
stos
or
loope
adc
sub
xchg
(bad)
sub
call
xor
dec
mul
lock
call
cmps
(bad)
nop
and
mov
stos
xlat
mov
jbe
mov
imul
xor
movs
jmp
int
pop
clc
outs
sbb
push
sbb
sbb
jae
shl
fadd
popf
dec
test
out
push
imul
idiv
outs
scas
cmp
push
pop
jne
or
bound
inc
and
loope
dec
fadd
bound
cs
(bad)
and
mov
sub
and
imul
loope
arpl
pop
mov
shl
jp
hlt
(bad)
and
mov
cmc
cmps
(bad)
and
sub
test
sbb
fstp
mov
xchg
push
inc
retf
add
pop
adc
jb
mov
xchg
sbb
and
popa
xchg
jns
ror
push
adc
scas
pop
inc
jb
in
or
or
mov
retf
retf
repz
fidivr
(bad)
mov
mov
fnsave
aas
or
gs
popf
and
gs
retf
xchg
aam
add
aam
in
mov
mov
jmp
xchg
pop
push
enter
fisubr
imul
push
popf
mov
mov
xor
xor
out
popf
add
push
jp
add
push
out
cmps
xor
jne
retf
xor
ja
push
sub
scas
xor
arpl
add
jl
hlt
cwde
icebp
add
test
sti
xor
cmp
add
es
cmp
repz
add
add
mov
fcmovnu
test
sub
retf
jmp
mov
mov
mov
sub
loope
add
push
mov
add
(bad)
adc
in
into
shr
xlat
mov
dec
std
sti
test
out
jg
or
ins
fistp
jmp
adc
mov
rcr
xor
add
xchg
cld
ins
jge
into
push
das
in
int
push
cli
ds
scas
dec
sbb
pop
stos
cs
les
mov
popf
inc
cdq
xchg
inc
mov
adc
ja
hlt
inc
je
add
xchg
mov
cdq
cmp
mov
mov
movs
jne
int
repnz
jecxz
imul
outs
lods
and
mov
jl
mov
mov
clc
xchg
mov
je
cmp
lods
mov
mov
xchg
nop
pop
jmp
push
popf
sub
out
popa
mov
mov
dec
jne
repnz
dec
fisttp
add
and
nop
or
sbb
adc
inc
mov
add
shl
jns
movs
sub
test
stos
xchg
sub
push
push
loop
arpl
sub
push
mov
jl
in
push
adc
in
pop
dec
das
out
lock
mov
add
mov
mov
cdq
iret
jmp
mov
jo
sbb
loope
ins
ret
dec
shl
cmp
call
pop
inc
jnp
mov
inc
pusha
cmc
test
jno
pop
push
out
inc
ror
clc
mov
fcmove
sahf
pop
xor
repnz
loopne
imul
ins
hlt
inc
les
sti
out
ficom
test
test
outs
shr
jp
loope
inc
inc
in
xchg
movs
push
dec
jb
mov
into
fwait
xchg
call
les
out
adc
xchg
(bad)
pop
pop
aam
ss
push
pop
mov
inc
sbb
xor
jecxz
xor
inc
push
xchg
sub
daa
repz
lods
outs
retf
push
push
pop
push
sbb
mov
sbb
xchg
push
nop
(bad)
out
sbb
(bad)
int
loopne
sbb
loope
xchg
mov
xchg
jl
fisubr
xchg
movs
scas
mov
(bad)
sbb
jae
push
add
movs
xor
or
push
fs
es
pusha
sbb
(bad)
mov
dec
in
in
and
xchg
xor
pop
and
cmps
jge
push
test
sbb
mov
sub
hlt
xchg
push
lea
inc
ret
push
(bad)
mov
loop
cmp
xchg
adc
popa
xlat
retf
xor
or
or
add
push
sub
cmps
(bad)
out
scas
test
repz
dec
mov
repz
dec
inc
fld
adc
adc
pop
adc
cmp
mov
test
fcmovne
call
scas
mov
sbb
imul
xchg
cmps
and
cmps
xor
inc
out
inc
jge
xor
xlat
or
inc
pop
sub
pop
dec
rol
and
fs
gs
es
ja
repz
sbb
(bad)
js
std
push
retf
movs
jb
inc
jecxz
mov
jmp
or
fild
mov
cmp
inc
(bad)
(bad)
jb
inc
call
mov
test
icebp
inc
push
mov
or
jmp
cwde
mov
cmp
inc
push
fldcw
test
sbb
call
es
mov
test
ds
retf
cmp
or
cmp
aaa
jecxz
fimul
mov
pop
movs
xor
inc
popa
mov
loop
jbe
imul
pop
scas
mov
pop
fmul
inc
es
xchg
in
jmp
jnp
cmp
or
mov
fcos
(bad)
inc
mov
cmp
add
push
dec
and
lods
(bad)
in
(bad)
in
sub
js
pusha
push
repz
and
jb
ins
out
jmp
cli
fnstcw
sbb
pop
sahf
xchg
xchg
in
or
and
xchg
xlat
ins
cmp
in
pop
dec
lahf
mov
dec
push
(bad)
mov
lock
mov
xchg
jecxz
fs
inc
jge
in
outs
cmp
loopne
daa
or
clc
les
aam
cmp
into
bound
arpl
jns
fstp
outs
mov
scas
jo
sahf
inc
rol
fs
sub
jmp
push
scas
jne
repz
mov
in
add
pop
movs
out
les
cld
xchg
sub
or
dec
ins
int3
dec
fnstenv
adc
or
jb
outs
pop
(bad)
xor
inc
shr
or
mov
cmp
lods
sub
test
pop
in
mov
mov
pusha
stos
test
sbb
fidiv
test
jmp
or
push
mov
cmp
bound
mov
fcom
cmp
bound
dec
pop
lds
xchg
scas
pushf
ret
xor
ins
dec
leave
mov
fcomip
push
enter
lea
mov
push
xchg
stc
cli
enter
dec
aad
iret
sahf
add
or
inc
mov
mov
ins
inc
out
jp
sbb
sbb
sbb
push
xchg
cli
aad
inc
jecxz
test
rcr
aaa
mov
pop
dec
test
push
xchg
sub
push
xlat
mov
and
jle
into
test
shl
dec
add
jo
cmp
mov
mov
fmul
daa
inc
jbe
ss
call
or
sub
neg
not
dec
repnz
stos
adc
js
jb
icebp
popf
cmc
cmp
jo
cli
or
in
arpl
dec
xor
sbb
add
sbb
and
aas
dec
hlt
sbb
jnp
enter
jmp
xor
mov
movs
imul
or
inc
sbb
rcr
jo
and
inc
inc
adc
jae
mov
imul
repnz
and
push
(bad)
mov
jmp
push
xor
cs
xchg
not
or
pop
cli
inc
push
pop
pop
shr
(bad)
xchg
or
and
ret
push
xlat
cmp
mov
fiadd
mov
mov
imul
(bad)
push
shl
daa
adc
jg
imul
lea
jbe
popa
inc
mov
pop
outs
mov
mov
ret
bnd
aad
movs
mov
jae
bound
fistp
cmps
xchg
retf
adc
(bad)
sbb
in
retf
pushf
cs
fld
cmp
js
clc
loopne
push
fistp
(bad)
in
mov
icebp
xchg
fld
cmps
inc
clc
rcr
sti
jge
fs
push
sub
push
jl
mov
js
bound
shr
call
ss
push
aam
cmps
jnp
daa
pop
pop
and
je
mov
cmp
add
add
aam
ficomp
nop
pop
dec
ret
lds
or
jno
ror
rcl
icebp
call
ds
fmul
mov
enter
or
or
cmps
pop
div
out
adc
sar
mov
loope
dec
int3
(bad)
cmp
and
into
mov
and
mov
adc
(bad)
out
sub
in
adc
cmp
(bad)
ret
xchg
out
aas
call
movs
pop
out
fsub
ins
aas
lock
mov
and
pop
mov
pop
rcl
push
in
out
cmps
push
dec
push
into
mov
sub
cld
adc
jl
sbb
xchg
jle
idiv
mov
scas
outs
push
(bad)
sub
int3
or
outs
adc
pop
inc
push
fwait
out
aad
out
scas
(bad)
(bad)
cld
cli
div
pop
sbb
sbb
and
mov
stos
xor
out
test
and
out
lods
cmps
aaa
push
sahf
pop
lahf
cwde
adc
test
loope
mov
cmps
in
ins
mov
jo
fimul
std
pop
outs
repz
icebp
pop
push
setns
mov
add
push
xor
cmc
mov
imul
add
cmp
jae
jp
or
cmp
or
mov
(bad)
fist
shl
aas
mov
lods
clc
mov
ins
push
dec
loope
sbb
jp
pop
push
mov
shl
xor
mov
sub
test
xor
cmps
jle
sbb
pop
push
jecxz
retf
and
data16
adc
hlt
nop
fdiv
jmp
cmp
cmp
jmp
xchg
xchg
add
sub
jp
shr
(bad)
jle
xchg
dec
mov
stc
mov
pop
jecxz
aas
adc
push
clc
rol
mov
shl
inc
xchg
loope
daa
jnp
or
sub
je
retf
inc
in
fdiv
cmp
arpl
or
xchg
mov
repnz
ret
jb
mov
xor
mov
and
xchg
add
cmps
mov
push
push
dec
iret
call
xchg
jnp
(bad)
adc
int3
iret
and
das
repz
rol
jne
out
repz
repnz
out
and
pop
pushf
dec
sub
and
call
enter
add
rcr
sbb
mov
mov
pushf
lods
out
cdq
ds
pop
mov
sub
xchg
neg
cmp
push
jno
cli
push
pop
mov
bound
add
ins
stos
inc
jnp
ss
sahf
pop
xor
cmps
movs
pop
cmps
cmp
je
mov
lahf
rcr
push
iret
xchg
and
in
retf
pushf
cmp
add
je
aas
scas
mov
mov
adc
push
cmps
pop
fsub
clc
push
fmul
(bad)
mov
in
aam
ficom
(bad)
scas
xor
or
retf
data16
mov
lahf
movs
dec
and
in
dec
sbb
mov
cmps
das
pusha
loopne
jns
jno
test
push
test
ds
imul
inc
nop
adc
add
popf
adc
inc
jno
stos
mov
and
in
mov
push
cs
aas
xor
gs
ffree
pop
hlt
(bad)
jnp
and
lds
adc
lods
repnz
pushf
mov
loope
push
xchg
jp
and
xchg
mov
jp
add
cmps
daa
jle
xchg
movs
or
cmp
sub
jg
fistp
stos
mov
push
fistp
cmp
jo
inc
or
xor
cmp
in
add
gs
pop
popf
shl
or
shl
test
ins
shr
or
icebp
data16
aaa
xchg
push
call
adc
cmps
and
je
lock
xor
cmp
fcom
mov
aas
mov
push
call
mov
lahf
fs
loop
pop
(bad)
pop
push
ror
ds
outs
pop
mov
jmp
adc
sub
bound
sbb
cmp
cli
sbb
mov
push
sub
mul
xor
(bad)
sub
push
fwait
imul
mov
(bad)
inc
in
add
push
add
jl
add
ss
leave
aas
rol
pop
xchg
xchg
dec
xor
jbe
repnz
jmp
scas
jp
pop
jno
jno
rcl
addr16
xchg
in
imul
mov
ret
fisttp
inc
and
jp
sbb
push
nop
mov
inc
pop
enter
out
cmps
sbb
dec
sbb
out
repz
jo
inc
popa
pop
call
sub
pop
or
add
inc
pop
cmp
add
call
shl
pop
jle
xchg
jne
int3
ficomp
sbb
popa
sbb
jl
out
movs
stos
cmp
int
inc
mov
and
add
pop
jecxz
shl
aaa
and
sbb
adc
pop
mov
mov
jmp
dec
outs
inc
and
mov
push
hlt
jo
sub
arpl
sbb
(bad)
pop
xor
(bad)
cmps
pop
or
or
sbb
sub
sbb
xchg
adc
or
jns
and
mov
loope
adc
mov
lahf
rcr
ret
cmp
ins
dec
pop
add
repnz
outs
ins
add
and
push
inc
push
out
fisttp
int
inc
mov
mov
inc
ins
jo
push
icebp
int
stc
ds
xchg
sub
pop
es
mov
jne
mov
mov
sar
push
sar
std
jmp
in
jb
adc
stos
mov
inc
sub
(bad)
push
dec
nop
stos
ins
jbe
mul
cmc
dec
dec
outs
fcom
test
call
and
inc
mov
retf
sbb
mov
lock
gs
int3
int
sub
popf
ret
mov
mov
mov
xor
pop
xor
and
inc
clc
mov
and
jnp
bound
retf
jns
mov
out
fst
call
bound
pop
(bad)
(bad)
les
push
aad
adc
arpl
popf
inc
push
outs
push
push
dec
pusha
repnz
inc
jo
add
xchg
dec
jb
mul
shl
mov
and
mov
jae
pop
out
lock
xchg
sub
mov
bound
std
sbb
inc
jg
not
pushf
add
ins
lock
popf
icebp
dec
outs
mov
icebp
outs
cmc
dec
adc
inc
dec
adc
pushf
or
pop
and
push
xchg
ds
mov
ins
sbb
jae
rcl
push
test
push
outs
clc
pop
add
pop
cmp
cmps
jns
xchg
inc
inc
push
mov
ret
sub
mov
addps
mov
pop
ja
mov
lock
push
pop
cmps
sahf
adc
ret
std
lods
push
dec
pop
pop
cmps
aas
pop
js
movs
fs
inc
or
mov
sub
push
xchg
in
push
repnz
push
mov
and
jge
lods
stos
(bad)
cmps
cmp
mov
xor
xor
jbe
jae
loop
xchg
out
ret
and
cdq
jge
and
pushf
add
push
mov
xchg
sub
pop
push
push
imul
pushf
pop
mov
mov
cmp
xchg
out
adc
push
aaa
and
pop
das
xchg
mov
hlt
loop
jo
or
out
packuswb
jle
cmp
das
rcr
lock
add
pop
lea
daa
retf
out
inc
gs
xchg
mov
push
pushf
stc
(bad)
sbb
jmp
push
popa
xchg
jnp
mov
mov
and
shl
jnp
in
test
jg
test
jmp
outs
jg
jae
sub
xchg
shl
(bad)
aam
xchg
mov
loop
in
sti
jo
cmp
dec
cld
imul
push
movs
fnsave
push
jge
jle
fist
jmp
mov
or
imul
daa
fldcw
test
mov
loop
leave
and
in
cli
sub
xchg
cmp
xor
test
sub
sub
imul
push
add
loop
jno
jge
lock
and
add
jbe
aaa
xchg
inc
push
mov
fsubr
pop
lods
dec
mov
add
(bad)
rol
test
call
fadd
mov
jmp
dec
jb
xor
inc
loopne
mov
or
palignr
xor
add
sbb
enter
add
or
pop
fs
push
test
mov
jne
or
xchg
mov
iret
shl
xor
sbb
xchg
xchg
in
scas
dec
retf
daa
dec
xor
or
fadd
mov
jo
ins
adc
cmp
pop
cdq
je
mov
and
imul
dec
popf
enter
fwait
sub
jne
add
mov
cwde
out
icebp
adc
mov
fidivr
jmp
xchg
aad
inc
sub
cmp
add
inc
arpl
pop
lds
push
dec
popf
xchg
pop
inc
fld
fwait
in
xchg
aaa
mov
inc
imul
pop
cld
daa
sbb
sbb
movs
or
ja
and
adc
pusha
pop
push
(bad)
test
xchg
sbb
shr
(bad)
mov
icebp
dec
jno
add
pop
jmp
adc
mov
cwde
pop
push
sub
retf
cmp
cmps
inc
adc
pop
jmp
push
xchg
add
loop
push
pop
adc
mov
test
sub
test
push
mov
leave
int3
rcl
dec
inc
push
stc
sbb
ins
sbb
and
mov
inc
adc
jmp
out
jge
or
ror
adc
in
in
inc
xchg
jle
cmc
push
and
or
pop
ficomp
cmc
stos
pop
sbb
cmps
dec
push
mov
fistp
(bad)
and
loopne
inc
dec
vdivss
mov
aas
push
jmp
and
rol
das
or
cdq
scas
xlat
and
xchg
movs
pop
enter
(bad)
sbb
xchg
xchg
and
xchg
jo
hlt
add
ficom
push
sub
js
sub
fadd
ja
jbe
jnp
rcl
sbb
and
xchg
lods
imul
push
(bad)
push
scas
adc
in
inc
xlat
sbb
or
fsubr
mov
outs
pop
imul
and
xchg
add
inc
ds
cld
leave
dec
lar
test
fiadd
(bad)
sbb
jbe
dec
(bad)
test
inc
xchg
dec
push
add
dec
es
cmp
dec
pop
mov
cmp
call
xchg
mov
loopne
fimul
shl
inc
mov
jmp
lods
mov
js
and
lock
or
and
push
lods
jmp
arpl
cdq
mov
mov
pusha
sub
sar
loop
cwde
data16
push
pusha
stos
jne
xor
mov
test
adc
jle
aaa
xor
mov
outs
rol
iret
pop
call
mov
fs
out
and
push
call
data16
scas
xchg
ret
ins
test
lea
test
or
or
xor
loope
cmp
retf
push
mov
cmps
mov
pop
jecxz
mov
push
ja
retf
xchg
cmp
push
fdivr
xor
out
shl
xchg
into
test
retf
dec
(bad)
stc
sub
mov
pop
or
and
mov
sbb
data16
push
in
jmp
sub
add
or
and
and
mov
les
iret
mov
stos
shr
mov
into
or
test
mov
xor
pushf
mov
cmps
push
mov
lock
cwde
push
sti
arpl
das
scas
outs
pop
and
test
(bad)
mov
mov
and
retf
push
inc
mov
adc
or
in
fild
aas
pop
dec
adc
mov
sub
es
and
or
adc
jl
inc
ja
mov
retf
ins
add
loop
sub
fs
cmp
inc
mov
push
dec
leave
pop
in
aaa
push
mov
stc
and
jg
out
xor
mov
nop
daa
cwde
inc
push
add
cs
fistp
cmp
xlat
sbb
dec
test
pop
jo
cmp
pop
or
test
aas
inc
cdq
lahf
sub
pop
xor
fs
ret
enter
inc
jb
cwde
fs
push
ins
mov
sub
icebp
dec
push
mov
lods
or
call
add
or
jge
mov
out
or
ror
jg
cmp
inc
adc
jne
imul
mov
ds
out
fistp
and
cld
cmp
mov
mov
scas
shr
mov
cld
jb
int
add
imul
daa
xlat
movs
or
loope
addr16
fwait
jnp
jmp
in
ins
inc
loope
mov
retf
shl
cmps
cwde
jb
mov
adc
jge
jg
scas
sar
dec
jl
call
xchg
arpl
xchg
(bad)
or
pop
push
idiv
push
add
add
push
inc
ror
aad
aaa
push
or
xrelease
sbb
iret
ins
ja
mul
pop
movs
and
inc
pop
out
jecxz
ret
or
out
mov
push
dec
(bad)
sbb
ficomp
jle
and
mov
sbb
push
dec
(bad)
xchg
pop
jmp
push
xor
inc
loopne
mov
push
in
push
movs
sub
pop
fiadd
push
scas
(bad)
push
xchg
or
iret
pop
out
push
inc
jae
xchg
xchg
jnp
test
dec
mov
jne
stos
mov
(bad)
mov
fstp
repz
pop
and
jge
int3
mov
xor
fisub
dec
retf
jns
and
cmps
out
addr16
and
(bad)
and
jb
sbb
aad
shl
xchg
cmp
int3
adc
push
jae
add
fs
push
add
jge
sub
sub
adc
add
xchg
ins
cwde
(bad)
shl
and
cs
dec
lds
adc
or
fucomp
test
mov
jae
pop
sub
mov
cmp
cmp
and
xchg
cmc
sbb
(bad)
push
sbb
mov
aad
pop
stos
inc
mov
cwde
in
pushf
movs
push
sbb
ror
mov
or
xlat
mov
cmc
xor
addr16
inc
push
rcl
fs
mov
arpl
mov
xchg
outs
dec
add
(bad)
call
ins
dec
leave
inc
out
enter
in
dec
mov
test
mov
test
jmp
jmp
pop
int3
xor
mov
call
(bad)
pop
mov
ins
aam
movs
mov
jp
sub
cwde
aaa
test
mov
int
inc
loop
fs
or
(bad)
jmp
les
add
dec
or
cmp
adc
lods
(bad)
cmp
sub
inc
xor
pop
cmp
and
jmp
pop
mov
outs
dec
pop
int3
dec
inc
mov
cld
jl
outs
sub
or
les
(bad)
pop
nop
outs
shr
mov
sub
adc
xchg
movs
mov
cld
test
fadd
shr
jnp
adc
bound
sub
sub
fdivr
adc
repnz
fidivr
sub
es
adc
out
retf
sub
mov
rcr
jne
imul
es
int
jl
cli
arpl
cmp
call
dec
inc
iret
cdq
push
loopne
cwde
rol
add
add
push
push
mov
(bad)
call
out
mov
pop
add
adc
push
mov
adc
mov
fs
cmp
mov
or
inc
fnsave
pop
sbb
hlt
jbe
loope
imul
jne
xchg
js
dec
int
scas
mov
mov
push
jecxz
or
sbb
jmp
push
les
fild
cwde
mov
out
cwde
jns
and
outs
adc
sbb
jno
cmc
cs
lods
daa
mov
cmp
ffree
jg
xchg
inc
sbb
and
test
or
xchg
popf
or
dec
jp
cmp
mov
sbb
rcr
xchg
movs
mov
aam
pusha
aas
aam
outs
add
mov
jb
sub
pushf
jmp
mov
bound
pop
es
nop
xchg
jo
inc
sub
cmp
or
cli
adc
retf
push
mov
(bad)
push
jns
mov
xchg
pop
int3
imul
(bad)
ss
loop
sbb
mov
fst
jmp
inc
cmp
sbb
push
fwait
xchg
rol
mov
pop
push
adc
and
daa
mov
push
aaa
inc
rol
or
int3
call
xor
test
out
lods
xor
xchg
mov
dec
(bad)
js
add
pop
pusha
call
pop
dec
cmp
xor
sti
aad
jl
add
cmp
pop
fs
mov
retf
ror
gs
mov
fs
icebp
mov
hlt
mov
pop
js
push
jl
out
imul
test
xor
pop
loope
jl
cmp
push
js
clc
call
sbb
add
scas
addr16
mov
arpl
sti
sbb
xor
dec
aad
test
adc
std
xchg
adc
cli
(bad)
adc
jl
rcl
or
mov
movs
cmp
sub
inc
pop
add
or
adc
ret
dec
and
mov
cmp
sbb
out
jle
loop
sbb
(bad)
aad
mov
xchg
mov
pop
push
xchg
dec
sbb
scas
fst
lea
push
neg
lds
adc
out
mov
sbb
data16
or
dec
push
add
mov
ficomp
imul
pop
loope
pop
adc
scas
out
xchg
cdq
out
jge
test
jbe
call
aas
les
dec
and
inc
je
outs
mov
pop
(bad)
mov
mov
or
add
jbe
je
(bad)
cmps
aam
xor
in
and
loop
and
jne
repnz
(bad)
cmp
es
cmp
and
mov
jns
test
int3
enter
(bad)
jmp
cwde
push
push
pusha
jae
hlt
inc
repnz
loopne
in
cs
mov
xchg
and
inc
pop
cli
push
mov
iret
mov
mov
adc
xor
pop
xor
sub
mov
imul
xchg
adc
outs
fisub
cmp
mov
fs
pop
or
and
fbld
mov
mov
ja
xor
mov
adc
clc
mov
cmp
jp
cmp
sbb
pop
jmp
xor
nop
mov
es
fild
mov
cmp
(bad)
pusha
pop
clc
inc
pop
clc
sbb
ror
hlt
sbb
mov
jg
mov
or
fnstsw
fnstenv
pop
sbb
mov
push
inc
mov
cmc
aaa
outs
adc
lahf
jmp
xchg
sbb
add
neg
popa
lods
sub
adc
mov
adc
pop
in
mov
data16
ins
sbb
dec
xchg
push
leave
push
push
add
sub
push
jmp
jmp
dec
jb
retf
cmp
or
pop
push
fisttp
(bad)
mul
clc
pop
aas
call
rcr
lock
arpl
mov
and
rcr
test
test
fidivr
sysexit
and
mov
outs
sub
fsub
(bad)
into
sub
(bad)
mov
aad
arpl
mov
jnp
jecxz
and
(bad)
stos
jmp
sbb
mov
pushf
sub
xchg
int
(bad)
adc
push
mov
cmp
pop
jnp
sbb
std
inc
out
aas
pop
mov
int
xor
lahf
adc
xchg
push
js
mov
sub
shr
mov
adc
sbb
add
mov
or
xlat
xchg
outs
ret
ds
les
fldcw
ins
pop
mov
dec
std
out
and
mov
cld
cmp
xor
cmp
cmp
cmp
xchg
bound
fdiv
int3
fidiv
inc
adc
or
mov
mov
(bad)
jnp
repnz
cmp
push
mov
sub
pop
(bad)
and
xor
fincstp
mov
mov
push
inc
out
mov
add
(bad)
jae
ror
and
xchg
hlt
jnp
mov
adc
mov
push
popf
inc
jg
adc
mov
jne
dec
adc
pop
adc
mov
test
test
cmps
jl
fistp
jge
pusha
or
in
ins
pop
add
jg
xchg
das
mov
mov
pop
pop
out
mov
mov
sahf
fs
push
(bad)
ins
leave
adc
fsubp
std
shr
xchg
sub
ror
push
pusha
cmps
xor
cld
inc
push
js
adc
ds
inc
ret
push
in
clc
in
xchg
leave
inc
jg
dec
jns
dec
jmp
add
jmp
retf
sub
push
scas
jp
xchg
jmp
rcr
inc
outs
dec
or
sbb
mov
push
dec
cdq
std
bound
inc
cmp
lds
retf
inc
loope
and
xor
(bad)
sub
and
(bad)
shr
mov
lds
jge
push
repnz
and
in
and
push
and
mov
out
cmp
sahf
shl
dec
outs
mov
scas
dec
jne
xor
mov
xchg
sbb
adc
cli
jne
xor
jnp
xchg
fisubr
sub
jns
xor
mov
inc
xor
push
clc
mov
xor
outs
in
aas
sti
adc
(bad)
fisttp
fstp
fcom
push
fsub
icebp
inc
mov
add
sub
jp
or
movs
sbb
xor
daa
mov
and
xchg
mov
pop
rcr
retf
mov
sti
adc
data16
xor
lds
arpl
jmp
mov
ds
sbb
dec
movs
xchg
cmp
xchg
mov
jmp
xor
inc
adc
dec
xor
loope
and
mov
pop
xchg
inc
push
clc
xchg
jmp
data16
bound
sahf
popa
into
int
movs
adc
(bad)
xchg
sti
pop
jno
mov
fnstenv
test
ins
clc
or
xchg
imul
adc
add
imul
pop
(bad)
lahf
xchg
std
xchg
sub
sub
push
in
in
push
(bad)
jmp
push
or
or
dec
xor
push
cs
call
dec
mov
cmp
wrmsr
fwait
js
and
push
jmp
sbb
outs
adc
inc
mov
icebp
xor
mov
mov
retf
popa
jne
dec
push
loop
ret
push
push
sub
mov
pop
xchg
test
push
inc
icebp
rcl
cmp
shr
push
rol
push
es
inc
(bad)
and
push
sbb
adc
and
lds
adc
retf
cli
mov
out
inc
cwde
idiv
cmp
loop
push
pop
xchg
cmp
mov
mov
lds
xor
mov
fcomp
inc
outs
sub
fist
scas
xchg
jmp
adc
cld
lds
jmp
in
les
call
inc
dec
lock
inc
stos
nop
(bad)
icebp
cmp
jl
sub
enter
xchg
ins
mov
jecxz
pusha
sub
test
sbb
into
add
cmp
mov
mov
in
pop
xchg
inc
and
es
sub
fwait
mov
jns
mov
popf
int
retf
inc
mov
popa
mov
shl
xchg
push
cmp
bound
sub
out
mov
call
mov
movs
adc
fs
dec
jne
adc
loopne
inc
fimul
xchg
jle
stc
push
das
in
retf
cmp
call
xor
sti
inc
push
enter
imul
test
mov
add
xlat
inc
xchg
iret
and
in
call
std
dec
shl
mov
push
hlt
(bad)
adc
pusha
outs
shr
jecxz
js
loope
mov
ins
jne
outs
sbb
dec
xlat
mov
push
sbb
jo
das
(bad)
je
scas
enter
stos
xchg
xor
xchg
xor
inc
mov
stos
adc
add
push
icebp
(bad)
mov
jge
add
test
scas
dec
adc
sub
push
leave
mov
adc
jp
adc
adc
xchg
mov
push
dec
pop
xchg
fadd
neg
xor
mov
(bad)
push
jmp
pop
cdq
fist
xor
jmp
sar
ret
pop
jae
fisttp
(bad)
jl
(bad)
arpl
fnstsw
les
addr16
sub
adc
popa
sub
cmp
inc
les
xchg
and
hlt
dec
mov
test
je
das
(bad)
jns
test
push
xor
sbb
jae
fisttp
sub
in
mov
jmp
add
fucom
dec
loopne
(bad)
lock
imul
mov
repnz
dec
sbb
bound
push
ja
sub
int
jae
lahf
cdq
cwde
push
dec
add
mov
and
and
sbb
push
icebp
inc
in
push
or
(bad)
sub
fisub
pop
arpl
or
es
js
out
adc
mov
fsubr
fwait
xor
xchg
test
add
push
fwait
xor
dec
out
xchg
retf
dec
cmp
pop
scas
int3
pushf
clc
dec
jae
cmc
adc
xlat
pop
jb
xchg
shl
push
mov
xchg
(bad)
push
push
adc
mov
xor
jmp
scas
pop
xchg
loop
int3
dec
cmp
dec
jmp
mov
(bad)
dec
xlat
pop
jnp
hlt
add
sbb
mov
mov
or
mov
bswap
ja
lods
push
scas
xor
fst
push
les
pusha
add
sub
lock
popa
xchg
mov
push
call
test
mov
leave
retf
pop
mov
sbb
jo
adc
jmp
push
dec
pusha
sbb
cs
fisub
enter
add
addr16
and
fs
je
xor
mov
mov
sub
sbb
retf
les
(bad)
push
mov
jo
add
cmp
movs
leave
sub
cmovo
sub
or
cld
mov
(bad)
icebp
jo
inc
(bad)
icebp
or
retf
cwde
int
int3
xchg
add
out
add
out
rcl
pop
mul
inc
mov
xchg
pop
stc
inc
(bad)
das
stc
(bad)
xor
dec
sub
mov
mov
mov
jmp
pop
hlt
sti
pop
movs
pop
mov
movs
jmp
jmp
je
mov
adc
sbb
or
out
sbb
push
(bad)
aaa
or
xor
or
mov
pop
jmp
aas
mul
call
xchg
pop
adc
sbb
dec
or
xchg
xchg
enter
rcr
sbb
daa
xchg
mov
aaa
call
push
xchg
scas
pop
sbb
rcr
scas
cmp
in
cmp
fmul
mov
test
shl
aas
test
lahf
mov
arpl
dec
push
fnstcw
hlt
or
(bad)
jle
loope
stos
fsubr
xor
cld
xchg
(bad)
std
out
sbb
test
sar
test
in
aas
(bad)
mov
add
jmp
retf
jbe
adc
mov
jle
test
ficomp
gs
call
test
enter
xor
mov
cmp
adc
dec
xchg
ret
fbld
ja
jg
mov
sub
xor
shl
pop
popa
lods
xor
(bad)
xlat
popf
popf
xlat
jge
push
dec
ja
cmp
cmc
cdq
pause
outs
es
and
and
add
icebp
add
xchg
int3
or
add
cdq
mov
adc
(bad)
data16
jmp
sbb
pop
sbb
inc
shl
sub
dec
aas
mov
or
cmp
je
je
neg
(bad)
fcomp
(bad)
pusha
or
nop
in
icebp
cld
das
into
dec
pusha
sbb
mov
sub
jp
fwait
and
enter
cmps
jl
cmp
retf
std
shl
test
ret
inc
std
rol
sbb
adc
push
lods
push
mov
das
inc
mov
call
xchg
pop
mov
out
jb
repz
pop
scas
xchg
idiv
xor
mov
mov
test
dec
xchg
xchg
fs
add
and
es
cmp
sub
inc
ret
xchg
inc
xchg
xor
mov
aad
jecxz
(bad)
in
xchg
loop
ds
cmp
lds
aaa
pop
out
ret
setle
xlat
jmp
iret
and
mov
ins
jmp
xor
sub
mov
mov
mov
jns
jns
mov
out
fadd
icebp
out
adc
das
add
es
or
mov
cdq
aas
cdq
jge
add
lahf
(bad)
push
clc
mov
mov
cmp
popa
adc
les
sti
mov
int3
into
mov
jne
mov
cmp
push
pop
out
or
gs
mov
ins
jl
sbb
adc
or
repnz
cmp
mov
ja
dec
and
out
icebp
adc
lahf
je
mov
(bad)
in
fstp
mov
push
xchg
das
mov
lea
ins
ror
cmp
cmp
(bad)
cmc
(bad)
sbb
cmps
into
dec
adc
shr
adc
xchg
mul
ja
pop
push
inc
jbe
int
shr
inc
dec
push
pop
test
out
dec
push
xor
mov
mov
inc
call
int3
in
pop
cmc
gs
jle
in
inc
or
pop
pusha
cmp
inc
ss
(bad)
cli
stos
mov
fsubrp
in
mov
or
aam
sar
dec
out
dec
sub
pop
fs
(bad)
in
in
jmp
mov
inc
(bad)
push
outs
pushf
push
mov
cwde
dec
loope
push
xchg
push
lahf
dec
sub
dec
sbb
imul
sub
std
sahf
push
or
mov
rcr
xor
rol
test
es
es
adc
test
pop
cmc
jnp
mov
(bad)
sbb
and
je
jno
lds
mov
jle
jg
(bad)
std
(bad)
(bad)
jl
ret
xor
(bad)
dec
out
retf
jle
mov
cmps
cmc
inc
cmps
mov
mov
or
dec
cmps
adc
xor
sbb
ret
push
sahf
add
jns
pop
scas
mov
inc
mov
mov
jle
cmp
repnz
cwde
add
int3
cmp
mov
sbb
or
mov
pop
addr16
xor
inc
sbb
or
pusha
sbb
aad
jo
sub
cmp
cs
int
in
xchg
enter
cli
or
push
nop
pop
in
xchg
jne
sub
adc
adc
dec
xor
popa
pop
jecxz
dec
push
sub
(bad)
mov
repz
fs
xchg
ss
js
sbb
push
(bad)
outs
ror
push
mov
sahf
mov
ret
pop
add
test
cmps
cmp
nop
retf
imul
and
inc
sar
push
jmp
push
(bad)
fs
ret
and
cmps
(bad)
lods
adc
inc
xchg
add
mov
dec
fwait
cmps
les
ja
cmc
mov
add
add
es
push
pop
mov
test
loop
pushf
mov
mov
mov
sub
pop
jb
popa
sbb
pop
and
imul
in
(bad)
jmp
mov
(bad)
push
push
or
pushf
std
and
dec
jbe
mov
cld
fisttp
inc
xor
push
sahf
sub
sub
add
mov
mov
icebp
add
or
es
dec
imul
stos
out
movs
sbb
inc
(bad)
int3
xchg
or
(bad)
sbb
cmp
loopne
pop
aam
fst
scas
cmp
cmp
push
xchg
cmp
fwait
sbb
ss
fisub
jmp
mov
icebp
fwait
xchg
fist
sahf
mov
cwde
in
test
xchg
sbb
repz
into
addr16
inc
or
sbb
mov
inc
addr16
hlt
or
pop
lea
xor
mov
mov
xchg
jbe
les
jne
loop
add
aaa
in
jp
das
pop
fisttp
nop
iret
sbb
popf
in
jl
push
movs
dec
adc
(bad)
sub
xor
das
dec
(bad)
push
imul
ud2
inc
ins
sbb
and
inc
jno
cmc
or
dec
aam
sub
or
mov
and
imul
outs
push
add
mov
leave
test
or
out
nop
in
push
ja
ins
pop
dec
mul
arpl
aad
dec
or
jecxz
sbb
imul
mov
das
jb
(bad)
push
jecxz
or
stos
(bad)
cld
pusha
adc
dec
pushw
and
cwde
mov
shr
pop
add
jecxz
xchg
ja
xchg
cld
int
inc
scas
sbb
xchg
fld
xchg
xchg
je
icebp
mov
fild
xor
push
xor
and
retf
pop
or
xchg
add
or
lock
mov
scas
jmp
xchg
das
les
jp
pusha
inc
cld
adc
scas
fldcw
popa
fs
(bad)
enter
adc
fld
xchg
and
call
mov
ds
je
pop
sar
mov
in
dec
mov
adc
test
inc
outs
test
jo
xlat
mov
xor
scas
mov
and
(bad)
loopne
inc
or
or
cmp
std
lods
les
fmulp
scas
(bad)
out
daa
cdq
and
mov
jl
inc
cwde
or
mov
fadd
fs
mov
shl
aaa
adc
imul
push
cmp
je
mov
xchg
pop
out
shl
out
adc
sub
xchg
jge
sub
shl
add
sub
mov
ret
jp
daa
lahf
stos
lahf
cld
mov
call
mov
and
mov
aam
xor
cmc
jb
outs
mov
sti
push
(bad)
sti
mov
fmul
repnz
jge
call
add
out
mov
arpl
in
int3
xlat
sub
pop
jne
mov
adc
push
adc
adc
push
push
hlt
out
xchg
pop
xor
cmp
imul
fst
or
fisubr
cmp
xchg
in
sub
mov
ja
imul
mov
inc
push
inc
inc
aam
out
movs
test
pushf
fwait
inc
jle
xchg
ds
add
jp
xchg
ret
xor
mov
push
or
mov
mov
test
cmp
push
mov
dec
loopne
lods
pop
fisub
pop
jg
push
add
push
pop
xchg
push
pop
add
jae
adc
adc
(bad)
jo
jecxz
pop
or
ret
lahf
je
lods
add
or
cmp
xor
push
add
outs
adc
push
sti
sub
add
(bad)
je
ins
fimul
or
jmp
retf
(bad)
mov
cmps
push
inc
fs
sbb
iret
add
and
inc
test
test
xchg
inc
test
cmp
jno
adc
push
mov
mov
jle
outs
mov
add
pop
pop
ficomp
retf
cmc
lods
pop
ins
movups
push
rcr
mov
into
fmul
dec
sbb
test
popf
inc
pop
iret
cmc
shr
jmp
pop
push
mov
out
add
ffree
fstp
pusha
fsubr
repnz
cmp
or
jp
inc
add
push
and
mov
aam
mov
mov
jno
xchg
mov
adc
mov
test
xchg
popf
les
adc
push
repnz
sub
jmp
add
jecxz
in
test
sub
jg
sti
fcomp
xor
cld
in
xchg
mov
xlat
dec
xlat
mov
mov
jbe
fwait
jmp
ds
aaa
clc
mov
mov
or
jmp
repnz
mov
aad
imul
rcl
imul
nop
shr
mov
fwait
sbb
inc
sub
shr
pop
jmp
inc
aas
leave
xchg
lahf
(bad)
out
lods
ins
sub
sahf
xlat
into
retf
aaa
test
ins
cmp
mov
inc
fucomi
idiv
lahf
mov
adc
imul
pop
mov
inc
fsub
cmc
jmp
fnop
movs
lods
lea
jmp
in
or
add
div
imul
mov
pusha
mov
pop
cmp
mov
call
xor
push
into
dec
adc
mov
inc
mov
popa
pop
xchg
outs
push
lods
lea
mov
stos
outs
adc
xor
sbb
iret
arpl
push
nop
into
mov
sbb
(bad)
mov
sub
jle
mov
adc
pop
dec
leave
xchg
mov
jmp
jp
aaa
test
js
movs
adc
push
jb
jl
call
xor
jbe
out
sti
adc
and
or
aaa
mov
dec
dec
or
not
ret
test
sbb
mov
rcl
sbb
fsub
shl
addr16
out
out
jb
jbe
call
xor
push
movs
mov
aam
xor
bound
and
add
add
pushw
xchg
cmp
cmps
int3
adc
cs
sbb
(bad)
push
xor
mov
test
repz
and
leave
xchg
or
or
dec
sub
jl
mov
test
repnz
icebp
xchg
mov
xchg
mov
dec
mov
lds
dec
xchg
xor
sar
scas
fwait
and
test
pop
repnz
(bad)
mov
and
jge
push
cdq
retf
nop
mov
repz
fiadd
jmp
cmp
push
pop
mov
aaa
xchg
xchg
fidivr
mov
cmp
mov
ss
push
fild
outs
push
sbb
or
out
std
adc
repz
jecxz
into
ror
mov
adc
mov
movs
or
pop
loopne
jp
pop
test
test
sub
jb
cmp
mov
icebp
imul
or
fsub
mov
push
popf
push
sub
imul
push
pop
mov
add
xlat
rcl
leave
add
pop
dec
sub
push
adc
retf
popf
xchg
daa
gs
(bad)
sub
dec
imul
xor
(bad)
(bad)
cwde
leave
dec
loope
jne
fcom
pop
(bad)
loope
aaa
pop
or
jnp
and
js
in
and
ja
mov
int3
lock
mov
add
cmp
popf
cmps
add
mov
int3
inc
loope
lods
cmp
cmps
aaa
jae
mov
in
dec
(bad)
jnp
push
sbb
pop
adc
ins
adc
push
jo
or
pop
ins
mov
xchg
out
fidivr
out
cmp
mov
cmp
pop
fsub
sbb
in
mov
cmp
cmp
push
(bad)
push
shl
loopne
add
stc
mov
lock
push
jl
jne
and
(bad)
cli
jb
xchg
jmp
or
pushf
mov
fwait
lods
pop
push
xor
mov
idiv
in
pmullw
rol
dec
test
mov
in
popf
pop
pop
int3
jae
jmp
int3
movs
mov
fwait
pop
or
dec
adc
adc
das
fadd
rcl
(bad)
(bad)
mov
push
cmps
adc
dec
pop
aaa
aas
cmp
mov
sub
pop
mov
adc
adc
das
repnz
adc
xchg
push
loope
dec
mov
test
sub
dec
mov
mov
dec
pop
or
cdq
retf
aaa
div
iret
fsub
test
sbb
dec
std
add
aaa
idiv
add
movs
neg
sub
xor
(bad)
loopne
call
mov
retf
rcl
imul
adc
xchg
out
fwait
inc
push
call
or
mov
jmp
pushf
test
cmps
push
sahf
mov
fild
(bad)
pop
push
dec
xchg
and
(bad)
cs
jae
rcl
(bad)
cli
or
push
inc
cli
loope
mov
clc
add
js
call
add
jns
push
push
lahf
test
sahf
jb
cmp
push
sub
imul
jo
scas
sbb
je
(bad)
xor
cwde
inc
daa
imul
loopne
fwait
xchg
xchg
test
fsubr
jp
aaa
pop
ins
lods
sub
mov
add
shr
mov
jne
sbb
idiv
mov
int3
and
cld
jmp
daa
and
sbb
test
jmp
push
scas
add
mov
fmul
mov
ret
add
mov
mov
lds
rcr
cmps
je
(bad)
xchg
sub
fmul
int
xor
add
ret
mov
xor
das
mov
out
lods
push
ds
(bad)
in
mov
and
fstp
out
rcr
and
dec
xchg
ds
cld
push
and
and
sub
or
pusha
aad
in
sub
in
lds
out
add
jg
repz
pop
push
fnstenv
lds
call
aam
scas
sti
popf
push
stos
cwde
fs
fs
pop
push
mul
int3
xchg
mov
mov
cmp
push
test
cwde
scas
icebp
les
inc
cmps
xchg
rcl
ror
icebp
or
add
aam
aaa
add
adc
movs
sbb
loope
dec
jne
xchg
je
rcl
clc
aam
fild
sub
pushf
inc
out
sti
xor
lock
and
jp
or
sub
xchg
pop
stc
mov
cld
das
pop
(bad)
mov
imul
mov
sub
xchg
retf
push
add
add
push
xchg
iret
outs
mov
pop
adc
outs
mov
and
inc
inc
xchg
(bad)
gs
(bad)
mov
stc
add
and
jns
ror
dec
add
arpl
cmp
and
out
cmp
retf
mov
cmpxchg
jmp
xchg
loopne
cs
test
mov
arpl
repnz
mov
addr16
rcr
inc
pop
in
and
es
jecxz
push
sbb
mov
xchg
stos
xlat
adc
adc
clc
mov
ror
mov
gs
or
cmp
(bad)
adc
fdivr
cmc
pop
retf
scas
inc
xor
cmp
inc
push
pushw
jge
fsubr
mov
lods
js
xchg
pusha
jecxz
pop
inc
test
xor
mov
out
and
movs
invd
pop
repnz
loopne
jl
faddp
out
(bad)
repnz
add
mov
pop
ds
js
sub
mov
pop
mov
icebp
shr
or
pop
(bad)
sbb
dec
sub
stos
dec
mov
jmp
les
add
xor
sbb
mov
mov
nop
(bad)
movs
call
jbe
cmps
inc
mov
mov
pop
lds
bnd
adc
jne
fcmove
xlat
ss
repz
pop
dec
mov
call
mov
xor
pop
add
(bad)
jle
xchg
adc
push
not
out
neg
mov
sub
retf
and
mov
dec
xchg
xchg
inc
sub
push
and
ret
mov
mov
cmp
xchg
or
jb
imul
loop
push
out
and
mov
(bad)
fmul
xchg
jle
inc
shl
xchg
out
not
mov
in
cmp
jmp
test
jecxz
sbb
sahf
xlat
xchg
push
test
jno
sbb
leave
test
xor
inc
sti
mov
rol
out
cmp
xchg
nop
int
mov
mov
mov
pop
ja
push
adc
aad
xchg
or
imul
inc
mov
(bad)
sbb
stos
jns
fdiv
xchg
pop
pop
pop
and
fidiv
pop
fld
sbb
xor
dec
shr
loopne
mov
ss
jns
jmp
dec
inc
and
fcmovnu
and
adc
mov
or
loopne
enter
jbe
in
or
das
push
mov
std
mov
in
sub
(bad)
mov
mov
sbb
jge
rcr
ds
sbb
cli
pop
sar
into
jg
pop
mov
push
scas
mov
mov
fst
mov
and
lods
fisttp
iret
and
out
jne
scas
cli
cmp
cmp
mov
or
dec
sbb
cmp
jns
pop
rol
cmp
mov
jo
or
fdivr
cmp
sbb
inc
aad
and
pop
xchg
jecxz
enter
pop
cmp
jecxz
(bad)
push
push
sub
int3
std
mov
cmps
nop
xor
cmp
add
movs
ror
xor
stos
movs
inc
dec
and
cmps
pop
dec
adc
imul
repz
cmp
sar
std
mov
clc
and
aam
mov
push
mov
popf
sbb
jecxz
pushf
dec
leave
lods
cmc
xor
jp
in
lock
inc
das
xchg
jbe
ins
adc
fwait
inc
mov
in
pop
cli
push
mov
push
das
scas
inc
pop
cmp
inc
adc
and
mov
sub
inc
aas
ins
in
jge
jge
pop
and
mov
lods
aaa
repz
lea
aas
mov
add
cmovae
sbb
std
repnz
xchg
bound
hlt
sub
jmp
pop
xchg
fidiv
jo
retf
pushf
inc
in
push
pushf
out
icebp
stc
aas
jle
or
jb
inc
pop
mov
mov
pusha
arpl
sahf
pop
sub
retf
jecxz
mul
jnp
dec
rcl
push
mov
mov
stos
inc
iret
nop
jg
jp
aas
loopne
cmp
iret
sbb
shl
les
jle
mov
push
cld
push
addr16
add
xchg
add
jle
movs
pop
mov
push
sbb
jmp
xchg
cmp
inc
inc
cmps
in
cld
repnz
pop
add
ret
push
jb
scas
scas
cmc
push
call
data16
and
jb
(bad)
stos
rcl
repz
into
shl
add
mov
cs
(bad)
mov
ins
adc
adc
add
repz
clc
idiv
rcr
and
js
xor
(bad)
pop
xchg
and
(bad)
aas
aad
mov
pop
xchg
mov
inc
mov
dec
(bad)
fcmovnu
push
mov
repnz
mov
js
and
cdq
inc
or
dec
ds
pop
dec
jae
jg
jge
push
mov
sbb
mov
rsqrtps
push
popf
lods
mov
mov
(bad)
fdiv
and
(bad)
adc
(bad)
xor
inc
pop
shl
bound
hlt
mov
lods
fcomp
push
cmp
push
sub
cdq
sbb
aas
jmp
sbb
test
xor
cdq
gs
xchg
jnp
add
stos
jl
mov
pop
test
pop
adc
imul
inc
and
jmp
lods
shl
mov
in
sbb
pop
in
inc
aaa
(bad)
and
xor
and
xchg
mov
push
cmp
je
fiadd
enter
pop
out
sahf
pop
xlat
movs
push
shr
and
mov
call
jge
jg
out
pop
in
xchg
retf
je
jae
loop
pop
or
and
rcr
cmp
sti
scas
test
fnstsw
xchg
add
(bad)
aas
jmp
push
in
jne
xlat
cmc
imul
pop
xchg
mov
repz
imul
jne
pop
push
(bad)
ror
adc
push
push
mov
xor
inc
js
sahf
sub
and
(bad)
lock
sub
add
hlt
mov
push
or
inc
stc
pop
icebp
hlt
pop
pop
xchg
sub
es
enter
mov
fldenv
dec
les
shl
rol
sbb
add
mov
int
xchg
cmp
pop
imul
sar
mov
mov
dec
stos
mov
mov
mov
ret
xor
pop
jge
dec
dec
sahf
stos
mov
or
inc
daa
(bad)
add
dec
ret
sahf
cmc
cs
or
push
ss
adc
push
lahf
mov
scas
lahf
sbb
sahf
rcl
das
arpl
mov
cmps
fisttp
shl
inc
(bad)
pop
sub
cs
fwait
arpl
and
mov
add
jbe
das
imul
mov
jge
xchg
lods
mov
retf
xlat
rcr
sbb
adc
stos
mov
xchg
pop
or
cmp
mov
aas
adc
push
mov
test
ror
mov
and
adc
aaa
movs
sbb
(bad)
adc
add
dec
xchg
sub
mov
mov
sub
in
out
(bad)
or
int
sbb
pop
or
mov
mov
cmp
mov
mov
rcr
or
and
rcl
sbb
mov
(bad)
ins
cmp
repnz
daa
aaa
push
loope
or
inc
test
call
jo
out
jns
neg
fdivr
retf
lea
add
fidiv
(bad)
jmp
xor
add
adc
imul
pop
movs
add
hlt
or
cwde
or
mov
add
cmp
mov
das
hlt
adc
dec
push
push
pop
pop
into
cwde
jae
test
jmp
cs
jp
xor
cld
cmc
jo
aas
sbb
fmul
and
cmp
aas
push
mov
fdiv
daa
mov
iret
nop
mov
and
jecxz
je
push
cmp
inc
xor
jg
or
popa
mov
lahf
push
jg
sbb
mov
sub
call
mov
add
sti
ficomp
leave
dec
hlt
push
or
cwde
sbb
add
xchg
and
xor
jb
icebp
cmp
inc
shl
daa
pop
leave
fsub
cmp
bound
cli
cld
bound
mov
pop
ret
aad
neg
sti
jo
nop
xchg
rol
mov
ret
dec
outs
lods
xchg
cmps
cs
push
push
ret
dec
or
inc
inc
pop
push
lea
mov
jl
mov
popa
pop
int3
cmc
lds
into
mov
adc
xchg
mov
in
xchg
scas
and
dec
and
not
inc
fprem
pusha
jb
pop
pop
gs
dec
mov
daa
out
fstp
iret
xor
pop
cmps
jge
xchg
jl
jbe
hlt
loopne
data16
sbb
inc
mov
xchg
xor
shl
jecxz
or
adc
mov
fist
out
shl
sbb
js
out
inc
jno
(bad)
adc
outs
aad
je
mov
cmp
inc
or
pushf
retf
or
sub
in
(bad)
es
pop
xchg
ficomp
and
push
ficom
jb
sub
(bad)
jnp
inc
xor
loop
int3
pop
push
loope
and
add
dec
add
iret
lds
cmps
xor
out
retf
jmp
in
test
lods
and
push
mov
fisubr
xor
xor
xchg
ja
leave
mov
inc
ret
test
ins
les
(bad)
pop
dec
test
int3
sbb
repnz
jno
call
or
xchg
mov
retf
dec
cmp
leave
sysenter
push
fsub
xlat
das
xchg
call
adc
xor
or
pushf
dec
xlat
sbb
inc
in
mov
jb
sub
mov
pushf
mov
mov
inc
lea
fisubr
adc
stos
cli
imul
popf
cdq
in
in
nop
cmps
xor
jmp
jp
(bad)
es
(bad)
test
adc
lods
push
nop
aad
movs
fwait
xor
hlt
adc
in
das
test
and
out
add
xchg
push
pop
je
xchg
push
jno
jmp
dec
jmp
jle
arpl
add
les
ret
xor
sub
xchg
imul
test
imul
test
push
cmps
scas
mov
mov
push
add
movs
pop
pop
out
xcrypt-ctr
cmps
fsubrp
popf
xor
jnp
stc
pop
pusha
sbb
out
lds
jb
mov
sub
or
popa
ja
les
sub
imul
sbb
jnp
js
cmps
jb
popa
jg
sbb
popa
mov
xchg
cmp
and
loopne
and
sbb
outs
sub
mov
adc
jge
imul
cmps
aaa
js
lahf
out
cmps
out
dec
mov
(bad)
push
movs
div
stos
mov
daa
pop
popf
ins
rol
test
adc
test
out
cmp
dec
les
(bad)
sbb
enter
and
mov
aas
xlat
push
jnp
shufps
imul
xchg
jle
sbb
mov
or
xor
sbb
cmp
xchg
jns
cmp
ins
rol
jle
mov
cmp
pushf
push
or
inc
(bad)
scas
scas
xlat
retf
dec
mov
inc
aad
jg
ss
fisub
enter
lods
(bad)
mov
inc
cmp
xchg
data16
call
std
push
xchg
mov
mov
or
sahf
add
fs
pop
jb
adc
sub
jo
(bad)
retf
clc
inc
addr16
and
add
dec
neg
sbb
mov
cmp
mov
mov
mov
mov
jae
pop
int3
cs
push
xchg
(bad)
lods
mov
hlt
pop
stos
and
sub
push
or
fisub
pop
in
fcomp
jp
in
sbb
repnz
fnstcw
xor
arpl
ss
pop
frstor
cmc
and
xchg
pushf
push
jge
out
mov
xchg
xor
cli
(bad)
xchg
sbb
movs
mov
push
fcomip
mov
sub
scas
ret
mov
sbb
fidivr
call
mov
gs
mov
jo
xor
or
pop
imul
inc
dec
dec
sbb
or
dec
sub
mov
mov
sub
scas
sub
xor
xchg
pop
push
out
pushf
pop
jo
mov
sub
and
sub
jns
pushf
mov
inc
(bad)
fcomip
ficomp
leave
call
int3
das
jbe
xchg
push
cli
pop
les
sbb
gs
adc
pop
(bad)
clc
out
imul
loopne
jmp
dec
dec
lods
imul
mul
(bad)
xchg
rcl
xor
dec
aad
adc
test
imul
outs
rcl
and
push
bound
adc
test
inc
fnstcw
or
ins
jne
mov
mov
(bad)
cmc
and
or
out
cmps
xchg
adc
fisub
shr
cmc
mov
movs
ror
xchg
jge
push
std
push
mov
sar
push
xor
jecxz
ret
movs
ins
cld
push
sbb
(bad)
addr16
mov
push
int3
outs
enter
cmp
rcr
or
push
mov
clc
int
inc
out
outs
shl
dec
mov
fdivr
in
lods
(bad)
cmp
cmp
es
adc
jnp
fld
dec
aas
inc
test
cmc
lds
cmc
xchg
enter
or
(bad)
xor
outs
jne
inc
xor
popa
cmova
call
pop
push
adc
out
mov
repz
std
xchg
adc
mov
stos
ret
sbb
dec
arpl
or
xchg
inc
out
in
jg
push
mov
mov
(bad)
pop
repnz
pop
sti
imul
test
and
sar
mov
xor
cmc
cmp
jecxz
stos
fs
jge
and
jmp
cmc
fsub
imul
mov
movs
jb
js
test
call
daa
sbb
or
jmp
mov
std
xchg
fs
sahf
loop
shl
xor
push
mov
outs
aam
mov
fwait
sbb
adc
push
and
pop
(bad)
in
in
fisttp
imul
mov
sbb
fcompp
mov
outs
ss
sbb
mov
fidiv
cmp
fsubr
sub
ret
fdivr
mov
sar
sub
and
mov
pop
mov
mov
jmp
(bad)
and
movs
jmp
or
and
sbb
fimul
jg
not
mov
sti
rcr
(bad)
sub
fidiv
cmps
pop
xchg
inc
retf
and
sub
jle
adc
fadd
sahf
es
das
mov
mov
xor
adc
(bad)
pushf
jg
(bad)
adc
add
push
push
std
xchg
pop
aas
sbb
pop
cli
and
pop
retf
mov
sub
enter
push
push
test
aam
jmp
mov
xor
xlat
dec
pusha
ret
call
push
test
stos
mov
dec
jg
(bad)
repnz
in
adc
test
push
mov
(bad)
cmps
(bad)
dec
xor
inc
mov
sub
scas
(bad)
or
xchg
nop
mov
es
clc
or
sbb
and
dec
in
xchg
mov
mov
mov
imul
leave
mov
(bad)
mov
into
push
stos
out
push
mov
sar
inc
cmp
push
leave
xor
jecxz
pop
mov
jne
gs
jb
add
mov
cmp
mov
loopne
rcr
pop
dec
aad
call
shrd
mov
scas
push
or
or
data16
inc
mov
xor
push
(bad)
pop
add
and
dec
and
push
add
into
and
stos
or
push
gs
xor
stc
xchg
pop
and
(bad)
jbe
dec
mov
sbb
jp
jmp
mov
in
fiadd
add
inc
jo
jg
ret
ret
popa
mov
int
test
cmp
fdivr
dec
inc
nop
xor
into
stc
rol
jl
(bad)
retf
iret
push
jle
(bad)
mov
popf
das
cmps
jb
or
cmp
retf
ficomp
jae
das
jg
das
fsub
or
clc
dec
shl
inc
scas
inc
ror
adc
pop
dec
jo
pop
nop
test
sbb
mov
dec
sbb
xor
mov
outs
xchg
sbb
in
dec
mov
push
retf
iret
loope
adc
jmp
rcl
push
test
aam
jns
push
mov
arpl
lea
pop
push
cmps
(bad)
ins
aaa
inc
push
mov
sub
mov
fs
leave
stos
push
sub
lds
push
sub
adc
sub
cmp
push
pushf
out
or
scas
add
jle
xchg
mov
ror
inc
dec
fstp
sub
inc
fcom
inc
mov
retf
dec
cmc
adc
or
aas
stos
xchg
and
dec
stos
xor
imul
shl
sbb
div
std
dec
xor
mov
adc
sbb
push
fst
rol
or
pop
push
xchg
in
std
clc
and
ds
fdiv
add
or
int3
leave
mov
and
pop
jnp
std
cmp
nop
sub
movs
pop
in
push
or
enter
lods
xchg
jl
sub
cs
push
add
sahf
icebp
hlt
aaa
jns
fisubr
out
dec
xchg
mov
cmp
push
cmp
cmp
mov
xor
and
rcr
int
push
xchg
xor
std
fimul
shl
fistp
pop
out
scas
sbb
add
cmp
adc
(bad)
je
cld
or
out
sbb
call
mov
xor
jmp
dec
sub
sti
cmp
arpl
dec
retf
jp
mov
and
or
imul
into
add
fwait
jns
out
xchg
imul
jns
mov
mov
lods
pop
mov
pop
cld
je
sbb
test
out
call
sar
nop
mov
add
inc
cmc
cdq
inc
mov
dec
or
pop
add
rcl
test
push
iret
aad
mov
idiv
jmp
scas
cmc
jno
jl
lods
push
cmp
sub
adc
mov
push
nop
inc
daa
scas
ds
cmc
(bad)
jb
add
mov
out
shl
or
adc
add
dec
mov
retf
repz
pop
xor
aad
jo
mov
cwde
retf
in
mov
retf
or
sub
sub
out
mov
test
inc
cmp
push
(bad)
test
or
cmp
jg
sbb
in
add
pop
(bad)
cmp
jg
in
adc
mov
pop
dec
mov
sbb
not
jbe
(bad)
mov
(bad)
icebp
stos
(bad)
lea
push
mov
add
fucom
add
jecxz
das
(bad)
lods
mov
push
mov
cmc
scas
mov
bnd
dec
dec
movs
xor
into
sub
lea
add
(bad)
in
(bad)
fsub
push
fs
mov
and
push
stos
(bad)
push
jns
jmp
fwait
adc
mov
cdq
stc
ficomp
mov
xor
loopne
stos
mov
sbb
lock
fild
jae
sub
jl
sbb
cmp
sub
cdq
push
loop
jne
loop
cmps
lahf
inc
test
out
push
mov
scas
cs
aaa
icebp
jmp
xor
mov
shl
mov
jns
xor
outs
pop
aaa
xor
push
into
inc
push
mov
fs
and
cld
ins
pop
cld
int3
pop
xchg
jmp
sbb
jecxz
inc
inc
xor
sahf
xchg
fiadd
xchg
mov
xlat
scas
push
test
into
in
inc
inc
pushf
outs
xor
fmul
inc
push
push
ins
in
test
sub
inc
push
in
mov
scas
push
sub
fst
fdiv
(bad)
popf
inc
xlat
sti
xchg
in
rcr
fild
lods
das
mov
retf
xor
not
out
jp
jl
loope
je
push
push
sbb
sub
gs
ret
add
popa
ffree
adc
adc
inc
mov
xor
sub
icebp
pop
inc
xor
jmp
mov
add
nop
repnz
lahf
ret
inc
scas
or
jne
push
dec
pop
pusha
mov
mov
jl
add
repnz
(bad)
(bad)
dec
call
xchg
out
(bad)
sti
pop
jle
lds
cmc
push
mov
cs
lock
jge
or
cmp
mov
jle
xchg
xlat
jp
sub
push
add
rol
push
cmp
sbb
popa
push
inc
pop
icebp
sahf
test
xchg
jns
jg
or
ins
je
js
jno
iret
mov
into
test
add
pop
mov
jbe
jg
inc
inc
ror
push
jne
neg
xchg
repz
xor
test
and
adc
jp
pop
mov
lahf
ins
xor
iret
aad
loopne
dec
retf
add
cmp
dec
push
inc
cmps
dec
jns
xchg
cmps
cdq
rcr
mov
or
out
rcl
into
das
or
fnstenv
fs
and
pusha
jle
pop
cmp
pop
xor
stos
push
ja
repz
ret
xchg
fnstenv
(bad)
push
pop
or
sub
fmul
inc
and
icebp
test
fnstsw
and
call
imul
sub
lahf
jo
jne
and
scas
loope
mov
call
mov
push
jb
sbb
cs
aaa
dec
cld
pop
inc
inc
sub
leave
pop
sub
push
sbb
jge
outs
sbb
and
cmp
pushf
(bad)
xor
xor
sub
xchg
xor
std
das
mov
sub
pop
test
adc
mov
add
xchg
jns
xor
mov
aaa
js
ja
jle
call
test
inc
sbb
mov
data16
fadd
pop
test
popa
or
fmul
lods
push
test
sbb
mov
or
xchg
(bad)
call
cmp
(bad)
dec
je
pop
cmp
cmps
add
ss
stos
pop
cwde
sub
xor
lock
pop
xor
or
xchg
leave
pop
inc
popf
pop
xchg
call
cmp
jnp
pop
cmps
push
loope
lahf
pop
pusha
(bad)
std
and
pop
dec
sub
(bad)
push
xor
pushf
imul
pop
mov
sub
jl
inc
sub
mov
or
or
std
cmovg
sbb
mov
add
inc
lahf
inc
add
or
mov
mov
lahf
and
clc
lods
ss
(bad)
cwde
retf
retf
sub
ret
mov
sahf
xor
sbb
and
inc
test
sub
lea
and
cmp
pop
ficom
ins
inc
daa
and
arpl
add
mov
cmp
shl
pop
hlt
push
adc
mov
pop
inc
cmps
mov
fadd
iret
pop
popf
lds
sub
inc
ss
and
mov
imul
adc
pop
and
sbb
add
pop
lea
outs
into
ins
push
pusha
add
in
inc
ficomp
cmps
sbb
xchg
push
sbb
pop
test
xchg
sbb
mov
mov
into
popf
call
xchg
jmp
xlat
dec
push
cmp
mov
pop
sbb
mov
cli
or
fs
pop
push
mov
mov
fld
cmc
and
mov
or
cdq
jecxz
push
mov
in
mov
stos
pop
inc
mov
mov
xor
daa
mov
xor
test
loopne
jne
les
adc
icebp
pop
mov
ss
je
push
inc
jo
mov
lods
enter
mov
imul
dec
xor
cwde
mov
stos
sub
xchg
adc
movs
fwait
iret
or
mov
dec
sbb
inc
add
sub
fcom
cwde
mov
lahf
push
sbb
shl
(bad)
pop
and
xor
inc
or
push
sbb
(bad)
sbb
sbb
test
dec
add
call
and
mov
add
or
mov
pop
cmp
sbb
hlt
xchg
ins
call
add
sahf
sbb
and
xchg
sub
lock
sbb
int3
vmovntps
ror
mov
xchg
pop
ret
aas
fwait
sbb
xlat
xlat
ja
fimul
dec
mov
cmp
jne
inc
lahf
jmp
adc
mov
and
push
xor
mov
mov
std
mov
mov
fbld
out
pop
dec
in
out
push
pop
or
je
mov
sbb
ds
rcr
imul
out
sub
sbb
inc
adc
mov
fnstcw
mov
jne
pop
inc
inc
inc
inc
imul
fild
stos
lahf
jmp
mov
mov
mov
loop
ficomp
aad
imul
stc
xor
call
mov
mov
add
loop
and
jbe
outs
add
mov
cli
sbb
(bad)
mov
dec
jne
lods
popa
addr16
int
mov
mov
(bad)
dec
aas
ins
sbb
jns
leave
pop
mov
xor
lods
cmp
add
xchg
dec
sub
mov
fld
aas
test
jb
fisub
inc
dec
mov
jno
imul
sub
add
adc
fnsave
int
enter
push
add
movq
cmps
loope
(bad)
fimul
mov
xor
dec
xchg
sbb
cmp
mov
push
stos
mov
call
je
sub
sti
sbb
sub
jmp
push
jl
enter
pop
mov
mov
sub
jle
pop
mov
nop
retw
jb
aad
xchg
lds
xor
mov
sub
mov
mov
pop
gs
call
and
and
retf
jp
and
cmp
mov
jmp
mov
call
fisttp
retf
in
inc
sub
add
jmp
jnp
mov
push
std
call
pop
or
data16
dec
sub
gs
and
jo
scas
jbe
fiadd
inc
cmp
leave
pop
inc
push
and
or
lds
add
fdivp
fidiv
stos
out
adc
cld
jp
xchg
dec
mov
in
sahf
jecxz
mov
inc
or
xchg
xchg
sub
add
popa
mov
mov
shl
scas
aad
inc
aad
int3
aad
jnp
cld
mov
fild
scas
jecxz
add
or
loopne
jecxz
clc
jb
jge
or
cmp
div
mov
push
cmc
and
call
ror
jecxz
fstp
adc
inc
or
push
ds
dec
retf
loope
icebp
adc
jns
enter
mov
int3
into
loope
or
mov
stos
push
mov
lea
add
sahf
div
inc
xor
xchg
sahf
add
clc
leave
pop
loop
test
dec
js
xchg
jge
jl
dec
stos
in
call
mov
sbb
xchg
push
aas
inc
icebp
mov
dec
mov
std
add
mov
mov
enter
add
gs
lahf
cdq
loopne
mov
dec
retf
xchg
call
push
jp
dec
mov
enter
and
dec
sbb
push
fdivr
xor
fadd
adc
mov
loopne
sub
lea
in
ror
dec
mov
xor
in
scas
add
mov
fsub
cli
fldln2
cdq
xor
shl
add
pusha
mov
stc
or
mov
mov
push
hlt
imul
add
popa
xor
in
enter
jo
imul
in
std
mov
ss
and
and
mov
shl
movs
mov
mov
dec
aaa
jle
jb
test
fsub
jg
(bad)
inc
dec
adc
add
enter
(bad)
fcmovnu
in
and
sub
adc
out
xor
outs
xchg
hlt
aad
jmp
aas
pop
out
std
xlat
popa
push
mov
xchg
add
ret
imul
es
out
and
add
mov
fwait
hlt
inc
js
cdq
mov
jo
xor
popa
call
xchg
(bad)
cmp
fcomi
fist
add
pop
retf
in
push
pop
mov
test
xor
je
add
adc
mov
ror
movs
sub
and
push
pop
mov
mov
cwde
fidivr
xor
and
int3
into
sbb
nop
shl
push
dec
jb
cmp
cli
test
shl
mov
or
scas
ret
xor
js
out
test
xchg
add
push
sbb
push
test
jo
mov
xchg
fs
jno
add
push
lods
dec
xor
imul
and
pop
and
ds
sbb
cmps
pop
xlat
aad
cwde
int
pop
pop
push
sub
pusha
aad
jmp
sti
dec
sbb
ins
jo
xor
or
cmp
call
pushf
shl
xor
nop
cmp
addr16
jmp
fs
push
or
std
sbb
cmp
inc
in
xor
sub
dec
inc
hlt
std
popf
stc
add
aas
xor
ja
push
fistp
iret
jbe
(bad)
call
dec
stc
ror
push
inc
outs
imul
xchg
xchg
push
sub
int
mov
dec
les
adc
pop
or
stc
retf
pop
sub
lods
mov
push
jg
outs
sub
rcr
jbe
sub
repnz
sub
sbb
ss
mov
into
push
mov
push
movs
mov
in
fisubr
cld
or
jmp
jno
loopne
pop
movs
repnz
sub
jp
dec
ins
mov
shl
or
inc
retf
mov
inc
jle
pusha
sub
leave
out
test
repz
sub
push
dec
fbld
add
pop
dec
mov
test
inc
jmp
and
sahf
lock
rol
xor
and
(bad)
lock
xchg
idiv
xchg
lods
or
sbb
adc
movs
int
aas
fmul
pushf
outs
je
addr16
inc
sub
cwde
jmp
mov
and
icebp
movs
push
stc
pop
push
or
jne
mov
sbb
test
cmp
ins
pop
cmp
add
xor
add
ficomp
clc
inc
xor
test
ins
push
hlt
clc
test
repnz
cdq
cmp
push
jg
cdq
lea
pop
xchg
inc
dec
adc
mov
(bad)
sbb
loope
and
jbe
jno
xchg
mov
add
push
dec
mov
jbe
pop
scas
push
push
mov
sbb
xchg
call
test
mov
ja
stc
or
mov
(bad)
cld
sbb
fwait
in
int
mov
cs
aaa
push
int
xchg
in
out
cmp
mov
cdq
xlat
retf
out
push
and
xor
jmp
xchg
stos
cwde
cmc
ins
ds
stos
push
xor
mov
lea
in
lock
or
xor
pop
ss
sub
popa
dec
push
inc
in
(bad)
enter
cmp
les
icebp
pop
fstp
ret
sbb
or
jecxz
cmc
and
aas
mov
sbb
xor
call
test
and
aas
mov
ins
std
pop
push
adc
xchg
add
adc
repnz
in
out
xchg
pushf
mov
sbb
sub
pop
jae
pushf
aam
jns
test
cmp
cmp
mov
aaa
or
push
les
out
retf
mov
push
adc
stos
cmp
popa
cld
gs
or
add
jle
mov
jl
sbb
inc
out
sub
jge
adc
mov
aas
inc
mov
mov
push
xchg
ja
push
inc
add
mov
mov
clc
push
in
adc
pusha
cmp
pop
add
xchg
xchg
retf
xor
dec
cmp
cmp
xor
sbb
(bad)
leave
shr
sub
add
ffree
mov
or
inc
scas
pop
add
push
fisubr
mov
jecxz
lods
test
pop
ins
pop
mov
pop
add
fbld
jns
enter
sub
mov
fadd
movs
inc
add
iret
mov
adc
out
pop
bound
bswap
outs
int3
das
sub
arpl
jmp
push
push
fistp
jmp
adc
lods
imul
lahf
cmp
call
ror
sbb
jo
test
mov
js
call
or
fwait
pop
add
shl
arpl
adc
lods
fwait
imul
sbb
dec
int
jmp
cwde
adc
mov
ins
dec
movs
fmul
aad
dec
sub
adc
in
in
popf
dec
jo
or
mov
movs
adc
ds
aad
pop
leave
jle
sbb
adc
jecxz
and
ret
and
in
mov
lods
pop
mov
and
and
shl
in
addr16
jne
test
inc
add
push
test
or
stc
cmp
cs
fs
ins
sbb
rcr
ins
(bad)
cs
imul
lea
push
aam
xchg
test
mov
leave
or
cmp
fdiv
pop
mov
xchg
shr
ds
push
aas
jno
jp
dec
out
ds
imul
mov
out
ins
xor
pop
out
xchg
jns
outs
pushf
xor
mov
push
scas
adc
gs
pusha
mov
pop
leave
inc
aad
adc
jg
push
dec
sub
mov
xchg
and
rcr
mov
call
(bad)
xlat
pop
push
mov
mov
jmp
clc
xor
enter
sbb
les
sub
add
outs
arpl
movs
int
loop
(bad)
and
sub
fs
movs
xchg
cdq
fsubr
dec
xor
sub
fimul
adc
sub
(bad)
(bad)
nop
popf
jg
les
xchg
jbe
rcl
mov
jne
std
loope
nop
cmps
inc
sbb
loopne
bound
or
lds
fabs
xchg
xchg
cmp
test
push
dec
mov
mov
pushf
lea
adc
pushw
jae
call
rol
or
mov
stos
inc
test
xchg
jns
mov
loopne
jns
sti
adc
cmp
inc
push
ret
ins
jae
lahf
lock
loope
xchg
sub
or
or
movs
retf
push
repz
scas
xor
cmps
sub
or
stc
js
jae
cmp
dec
dec
cmp
iret
cmp
xor
dec
pop
xchg
cmp
iret
adc
ins
mov
mov
loopne
int
arpl
add
and
push
les
fdivp
add
jbe
aaa
xchg
sub
inc
dec
and
in
mov
add
sub
dec
push
jbe
fiadd
icebp
repz
cmp
pop
repz
movs
(bad)
cmp
repz
fwait
retf
mov
xor
fadd
xor
inc
jecxz
mov
mov
lods
adc
mov
and
es
mov
or
(bad)
mul
sbb
jae
pop
lds
push
mov
pop
sub
jecxz
push
mov
mov
cdq
jmp
or
xor
mov
mov
(bad)
push
scas
test
mov
into
cmps
dec
addr16
or
test
ins
test
jge
loop
pushw
pop
loopne
xor
frstor
mov
test
ins
xor
sub
mov
xor
adc
xchg
retf
clc
xor
xchg
iret
in
pop
xor
imul
popa
fxch
lods
add
lock
popa
sub
pop
rcl
cmp
and
or
add
jne
out
pusha
je
mov
test
arpl
mov
fstp
out
mov
add
mov
jae
out
cmps
fdivrp
push
test
or
inc
xor
push
cmp
xchg
cmc
mov
mov
mov
and
xchg
push
inc
inc
stc
in
cmp
or
push
xchg
mov
push
fcomp
pop
fwait
jnp
(bad)
xchg
add
xchg
sub
push
jnp
lods
fbld
lds
xchg
bnd
adc
call
je
sub
ja
jno
cmp
push
push
cmps
push
adc
push
jae
and
and
loop
sub
inc
dec
hlt
scas
add
xchg
xlat
inc
xchg
or
xor
gs
or
add
xchg
jle
pop
cld
or
push
addr16
popa
inc
cmp
test
(bad)
ds
mov
dec
div
(bad)
or
in
enter
shl
xor
(bad)
jge
inc
jle
mov
ret
or
inc
pop
cdq
xchg
sub
(bad)
mov
xor
aas
dec
add
dec
call
stos
adc
pop
xchg
lods
cmp
ret
pop
call
sub
jae
xor
dec
mov
retf
jge
jne
push
push
es
and
and
mov
or
imul
into
push
jae
xchg
xchg
mov
mov
mov
adc
push
hlt
push
pop
jne
push
sbb
aaa
inc
ss
fldcw
adc
scas
cmp
push
xor
pop
push
fwait
sahf
jg
add
cmc
push
mov
inc
movs
cli
dec
cmps
add
sbb
jg
out
jb
jmp
pop
rol
data16
mov
in
aad
out
sub
aad
popf
mov
mov
imul
les
sub
jp
arpl
test
js
and
sub
add
sahf
les
sar
aam
int3
add
loopne
inc
enter
std
(bad)
imul
in
pop
mov
(bad)
or
cdq
fstp
fs
or
(bad)
dec
into
mov
test
adc
xor
inc
outs
in
inc
jl
or
leave
pusha
mov
aas
icebp
sub
dec
xchg
pusha
ficomp
rsqrtps
push
push
inc
xchg
popf
add
and
aam
icebp
dec
loope
int3
int3
std
xor
sbb
add
pop
mov
jns
xchg
or
fsubrp
adc
xchg
pop
or
pop
sub
cmp
aaa
test
rcr
sbb
(bad)
lahf
jno
adc
mov
cmps
sbb
and
(bad)
mov
fiadd
inc
int
inc
int3
addr16
dec
mov
add
loop
(bad)
bt
ds
fwait
pusha
pop
aad
cmc
test
pop
mov
ins
and
sub
cmp
adc
imul
cli
and
mov
mov
cdq
loope
jno
cmp
test
sbb
mov
mov
mov
or
adc
fs
mov
mov
sti
mov
mov
jmp
dec
aas
test
mov
xor
xor
pop
jae
sbb
fwait
mov
ret
aas
inc
mov
stc
repz
cmp
add
mov
xchg
pop
sar
inc
daa
das
jecxz
data16
mov
lds
pop
xchg
pop
mov
push
dec
or
jns
mov
jnp
sub
push
jecxz
popa
pop
jbe
push
into
sub
les
arpl
rol
aam
push
test
icebp
inc
adc
lock
xchg
fnstenv
jbe
cmp
xchg
mov
test
ret
sub
pop
add
in
int3
idiv
mov
std
mov
cmp
and
ss
scas
aad
add
aas
(bad)
mov
enter
sub
and
pop
cmp
(bad)
fcom
ds
mov
jmp
xor
push
sbb
test
xchg
retf
loopne
lea
mov
add
pop
or
ins
outs
cmp
sub
jmp
inc
dec
cmc
daa
cmp
aas
neg
out
and
jns
sub
cmp
(bad)
push
jb
and
adc
or
pop
pop
movs
jmp
mov
repz
(bad)
pop
rcl
retf
out
ds
shr
jmp
lea
push
pop
jge
adc
nop
daa
loope
sbb
das
fimul
push
mov
inc
cwde
popa
test
mov
xor
or
sub
aas
adc
lock
and
int3
jle
hlt
aam
retf
xchg
cmp
push
mov
dec
adc
test
add
sbb
scas
fsubr
lock
xor
mov
jg
and
push
sti
fnstsw
or
int
fst
fs
lods
mov
popf
dec
mov
fdivr
scas
and
and
stos
arpl
dec
mov
bnd
in
cld
dec
cmp
mov
xchg
repz
xor
push
test
adc
repz
sbb
test
fnstsw
jne
xchg
add
je
or
mov
ins
pop
fld
fidiv
sbb
xchg
in
iret
daa
push
das
dec
fsubr
or
fisubr
xor
jns
hlt
inc
or
adc
rcr
repz
mov
jge
(bad)
mov
mov
or
clc
xor
daa
push
sbb
outs
sub
xchg
popf
xchg
mov
int
mov
verw
inc
push
arpl
mov
inc
iret
push
test
aad
leave
scas
or
cmp
mov
imul
outs
int3
je
adc
push
cmps
fcom
sbb
inc
retf
rcl
adc
inc
and
lahf
mov
inc
mov
mov
xchg
cmp
stos
jp
iret
loop
pop
jno
sbb
cli
push
loope
shr
sbb
mov
jecxz
sub
ins
xchg
xchg
mov
imul
ss
std
mov
inc
gs
dec
cmp
cmps
fadd
fistp
pop
rcl
(bad)
fisttp
mov
ja
sub
jmp
in
jmp
and
aad
cmps
loope
xchg
fwait
dec
or
inc
sub
push
ret
and
mov
adc
jb
push
mov
cld
(bad)
nop
xchg
push
fmul
jns
in
out
jl
fwait
push
fstp
push
retf
arpl
lahf
fiadd
fild
in
loop
lods
cmp
pslld
inc
loope
xor
test
in
push
lea
jge
neg
cmc
push
mov
enter
inc
bound
retf
adc
in
neg
lods
test
cmp
cmp
inc
mov
sub
mov
scas
mov
data16
imul
pop
arpl
test
push
jle
bswap
pop
dec
xchg
les
cli
lea
push
aas
push
xchg
cdq
and
and
add
sbb
mov
dec
add
mov
push
xor
sbb
repz
inc
mov
inc
scas
or
adc
lock
or
scas
dec
inc
stos
push
mov
or
pushf
scas
cld
xor
push
or
cmp
mov
xchg
mov
aam
kmovw
xchg
loope
imul
inc
mov
pop
lds
and
ror
movs
sbb
lds
loope
(bad)
popf
scas
pop
and
xchg
nop
push
out
pop
js
xlat
push
dec
sub
unpckhps
ins
in
aam
icebp
clc
sub
js
rol
(bad)
cmps
mov
mov
dec
loope
and
pop
repnz
cmps
jmp
mov
ds
call
adc
cmp
jb
sbb
icebp
pop
fidiv
aas
push
push
int
jne
cmp
push
fnstcw
out
dec
pop
dec
pusha
adc
xor
in
cmp
cmp
sub
inc
add
lock
out
mov
je
cmp
adc
(bad)
pop
(bad)
lds
mov
adc
inc
cmp
das
mov
out
outs
or
push
les
nop
fistp
(bad)
jns
or
mov
cwde
cwde
shl
pop
pop
mov
repnz
div
(bad)
es
xlat
mov
pop
mov
dec
pop
pop
xor
popa
mov
push
push
aaa
xchg
loope
and
sub
shl
lods
int3
outs
fnsave
mov
jecxz
jmp
jmp
add
push
pop
and
mov
icebp
dec
mov
rcr
out
popa
aad
sub
loopne
inc
pusha
inc
and
out
pop
and
stos
pop
push
mov
gs
ins
inc
cmp
fsubr
jo
loopne
ret
dec
call
daa
mov
jge
jns
fsub
and
and
int
loope
test
(bad)
inc
int3
out
cdq
xchg
enter
pop
inc
nop
hlt
es
sbb
aam
dec
add
mov
or
sti
ficom
pop
pushf
call
retf
pop
mov
add
and
call
(bad)
mov
mov
leave
mov
pop
add
or
adc
mov
rol
jge
jecxz
dec
sub
into
and
mov
lods
mov
arpl
mov
jo
xor
pop
dec
lods
out
push
cmps
mov
in
ins
and
mov
in
mov
loopne
dec
or
cmp
dec
test
xor
sbb
mov
push
pop
in
and
add
mov
mov
mov
in
add
ds
and
xchg
or
sbb
shr
into
mov
icebp
loop
mov
pop
or
loop
pushf
cmc
cmp
push
int
mov
push
sub
xor
push
aad
pop
cmp
ret
sbb
ja
retf
ja
xchg
fist
rcr
in
adc
std
das
fcomp
mov
or
sar
inc
jno
fdivr
jl
cmp
ds
ror
mov
jp
pop
and
add
outs
loope
pop
push
rol
popf
sbb
sub
ja
stc
mov
ss
pop
ins
(bad)
ss
pushf
aaa
inc
cli
jns
push
or
xchg
sahf
inc
mov
mov
pop
or
bound
or
das
mov
pop
call
fcmovb
popa
mov
mov
push
sbb
pop
mov
pop
gs
inc
sub
rol
and
in
jg
dec
aaa
mov
out
cwde
pop
idiv
pop
movs
fnstsw
or
rcl
(bad)
mov
in
in
lds
movd
cld
mov
or
rol
lods
xchg
xchg
jb
and
(bad)
adc
cld
xor
mov
pop
test
dec
or
xchg
out
(bad)
retf
mov
add
out
(bad)
mov
aaa
push
scas
arpl
or
cmps
add
cmp
mov
xor
push
or
and
movs
dec
ja
call
push
fadd
das
test
out
ja
aad
or
ret
mov
call
push
mov
hlt
mov
les
add
xor
loope
jbe
and
dec
inc
xchg
push
dec
fild
stos
cs
sub
mov
adc
pop
shr
sti
fs
and
adc
or
shr
and
xchg
inc
in
sar
adc
lods
rol
fstp
xor
sbb
xchg
pop
mov
and
leave
and
test
es
test
mov
mov
imul
and
add
xor
mov
sub
xchg
ret
inc
push
or
mov
int3
aaa
ja
xlat
pushf
jmp
test
xor
mov
lods
mov
xor
sub
cmp
lahf
inc
daa
add
aad
xchg
push
lods
sahf
into
ss
aaa
xor
xor
mov
push
cmp
iret
fnstenv
popf
xor
test
cmp
movs
pop
outs
addr16
sar
retf
retf
xchg
pop
jnp
xor
adc
outs
aam
stos
lds
sub
aaa
test
or
mov
out
cmps
or
(bad)
mov
jb
cli
std
imul
mov
(bad)
adc
cmp
and
sub
sti
add
inc
or
neg
mov
push
jmp
xor
(bad)
int3
add
add
adc
addr16
pushf
into
adc
scas
sbb
mov
stos
out
(bad)
cmps
leave
mov
push
sbb
and
lds
xor
cmp
push
outs
jne
daa
nop
xor
sub
push
stos
sahf
cld
repz
aas
jp
sub
cmc
jo
cld
mov
mov
xchg
(bad)
push
cmc
in
mov
add
xchg
push
jecxz
mov
stos
pop
stos
ret
mov
mov
add
xor
push
pop
and
aaa
xchg
in
cdq
fwait
mov
movs
xchg
into
jno
mov
inc
(bad)
mov
and
fnstcw
(bad)
rol
test
jl
(bad)
xor
fbld
(bad)
cmp
in
cmps
stc
jbe
dec
into
mov
mov
jne
imul
cmp
ja
mov
les
inc
jns
(bad)
aam
daa
and
ficomp
nop
mov
jmp
fisttp
jecxz
push
push
enter
icebp
movs
and
pop
push
mov
inc
adc
out
leave
cli
loop
mov
pop
add
adc
ret
and
in
jae
jg
sub
push
sub
popa
sub
pop
xchg
test
test
inc
ret
enter
push
mov
movs
in
(bad)
cmp
push
sub
add
sbb
into
loop
sbb
sub
pushf
mov
cmc
outs
push
ins
dec
hlt
ja
aad
mov
dec
inc
add
lds
add
mov
lds
xor
xchg
jg
inc
xlat
cwde
lods
cld
jb
jge
cwde
jg
add
sbb
add
dec
adc
arpl
movs
sahf
mov
mov
lea
imul
sbb
pop
add
xchg
repnz
and
cdq
xor
jnp
pop
movs
mov
push
out
ins
add
lods
rcl
clc
sub
test
pop
inc
add
push
or
jae
or
(bad)
xchg
sbb
push
lea
push
clc
pop
mov
dec
or
dec
push
mov
mov
adc
rol
loop
imul
scas
repz
in
jo
ja
shl
(bad)
pop
add
popf
pushf
push
mov
inc
fidiv
xor
adc
mov
sub
add
sub
cmp
jmp
(bad)
leave
adc
(bad)
mov
sbb
add
outs
dec
(bad)
cmp
scas
nop
and
add
out
fnstsw
call
in
adc
add
and
loopne
aaa
jae
je
inc
cmps
pop
dec
fimul
jp
sar
(bad)
pop
xor
into
mov
cmp
hlt
sub
dec
sahf
hlt
lods
and
arpl
push
fdivr
sub
sahf
inc
cs
push
sbb
cdq
and
in
jmp
mov
mov
je
xor
adc
out
jle
pop
dec
test
sub
not
inc
sbb
ss
xchg
lods
pop
or
sbb
in
mov
hlt
ins
movs
inc
ret
inc
mov
cmp
fidivr
enter
rcr
hlt
xchg
xchg
inc
mov
ins
ror
mov
data16
(bad)
xchg
addr16
dec
in
pop
inc
ss
xor
push
adc
(bad)
loop
cmc
or
jae
aam
pop
pop
push
jae
fcomi
std
movs
add
fs
into
ss
mov
sbb
dec
pop
ss
popf
call
inc
push
aaa
jge
fwait
jnp
jae
sub
mov
clc
cmps
and
fidiv
mov
or
(bad)
and
push
out
inc
add
lods
adc
adc
and
sbb
sti
iret
mov
in
pushf
imul
or
bound
mov
sbb
mov
nop
adc
call
xchg
sub
mov
icebp
sbb
mov
retf
xor
add
out
push
cs
sub
ss
enter
adc
xor
imul
or
pop
repz
or
cs
sub
xchg
cs
das
inc
add
push
test
sub
add
cmp
mov
jl
(bad)
mov
xchg
add
jb
push
and
wbinvd
cmp
inc
shl
ret
dec
pop
cmp
movs
in
cs
ds
adc
jb
imul
sti
dec
movs
sar
pop
scas
or
addr16
jmp
jl
mov
jbe
(bad)
iret
sbb
mov
adc
shl
jo
sbb
ret
aad
cmc
aad
cs
fs
pop
inc
sbb
outs
shl
push
mov
aas
out
cld
inc
jne
fidivr
mov
lahf
test
push
mov
add
mov
mov
push
imul
mov
sbb
inc
mov
ja
and
pop
in
gs
ficom
pop
pop
outs
push
jp
or
movs
cmp
sbb
dec
lods
jbe
fdivr
dec
test
dec
addr16
neg
mov
rol
add
out
fimul
add
mov
(bad)
and
pop
and
cmps
inc
mov
jmp
cmp
aaa
jo
adc
pop
sub
jae
push
jno
dec
aaa
mov
or
nop
jl
shl
sbb
stc
cwde
loop
fidivr
dec
mov
inc
push
fcmovb
aas
retf
push
sub
pop
imul
pop
addr16
dec
mov
adc
and
push
in
jbe
mov
push
pushf
xchg
adc
mov
fimul
rol
lds
add
ins
pop
sbb
jle
imul
add
mov
stos
sbb
push
lock
adc
xchg
xchg
sbb
xor
or
mov
das
jl
ins
sti
pop
retf
and
dec
fdiv
jge
cmps
pop
mov
add
cmp
add
fs
(bad)
stos
or
mov
mov
out
or
xor
ret
adc
outs
cmp
add
movs
stos
jle
aas
xchg
lods
add
mov
jne
aad
addr16
xchg
pop
xlat
lods
inc
sbb
rcr
xchg
jnp
jno
ins
ret
cmps
sub
stos
int
pop
cmp
aas
enter
lea
stos
cs
xor
dec
cli
sub
jae
sub
xor
cmp
aas
repz
cdq
dec
cmps
hlt
cmp
daa
je
sahf
add
ss
les
adc
sub
xchg
pop
mov
add
iret
into
mov
call
lea
dec
dec
cmc
adc
mov
stos
inc
leave
lahf
mov
jnp
cmp
ins
repz
or
jno
aaa
repz
sti
fbld
scas
xchg
jmp
mov
repnz
es
pop
and
int
xor
pop
jg
or
sub
jle
fs
fld
ss
pop
sub
or
jmp
or
jno
adc
dec
call
cmp
test
fmul
mov
add
test
cmc
sbb
iret
loopne
push
hlt
or
xor
adc
fist
push
jecxz
aas
popf
and
jo
xchg
push
inc
jb
sub
mov
data16
cli
movs
jb
xchg
adc
mov
mov
pop
jmp
out
dec
inc
sti
inc
xchg
outs
or
iret
push
inc
loopne
jecxz
fmul
aaa
out
add
and
pushf
add
xchg
aas
mov
aaa
mov
sbb
cmp
jno
fsubr
mov
in
outs
pop
call
jge
push
add
daa
scas
sub
fwait
jnp
add
(bad)
push
cmp
push
pop
fist
(bad)
out
das
inc
(bad)
lock
push
sbb
int3
mov
mov
adc
pop
nop
mov
cli
addr16
call
adc
inc
push
pop
mov
(bad)
in
mov
pop
shl
leave
call
cmp
ja
ins
or
lds
retf
test
pop
xchg
sti
push
xsaves
jmp
and
xchg
dec
jb
and
cwde
push
sti
outs
xor
and
lea
mov
sub
jbe
inc
inc
dec
out
mov
addr16
or
dec
jecxz
sbb
js
enterw
push
movs
xchg
mov
out
rcl
test
es
cld
and
mov
pop
cld
xchg
dec
call
mov
xchg
inc
cmp
mov
loopne
push
sbb
jne
push
xor
cmp
mov
xchg
xchg
ins
sub
dec
es
or
pop
and
push
mov
pop
dec
shld
mov
inc
or
xchg
or
movs
sbb
loop
mov
fcmovnbe
pop
xor
xchg
lahf
(bad)
mov
dec
mov
xchg
cmp
or
aaa
push
ins
fisttp
xor
push
cmp
and
ja
lods
mov
movs
xchg
adc
pop
popa
cmps
inc
dec
xchg
ja
sbb
sar
(bad)
shr
rol
in
jo
sub
jge
and
jmp
cmp
stos
aad
shl
paddsb
jmp
or
pop
mov
push
mov
std
ins
push
push
mov
nop
adc
fs
cmps
mov
pop
jae
push
ja
and
sbb
push
sbb
test
inc
rcr
daa
fisttp
bound
adc
loop
mov
jge
test
fimul
and
out
inc
cmp
and
cmp
push
add
pop
dec
pop
daa
mov
fdiv
add
add
imul
cmp
jge
lods
outs
mov
mov
xchg
cmp
and
pop
data16
jnp
push
(bad)
lock
push
test
pop
jnp
test
movs
mov
into
das
mov
jne
ins
lods
fs
mov
scas
call
cmp
sub
mov
mov
(bad)
and
dec
add
imul
adc
(bad)
in
push
inc
fimul
adc
ja
ins
std
cdq
pop
shl
jo
pop
xchg
rcr
bound
mov
pop
cmps
addr16
cmp
dec
div
(bad)
mov
sub
stos
mov
mov
les
fldcw
bound
pop
es
gs
mov
adc
dec
push
add
js
cmp
nop
add
loop
js
stc
int
mov
push
pop
retf
lea
aas
adc
addr16
pop
je
popf
dec
aad
xor
mov
jb
ret
rcl
xor
sub
ins
mov
dec
add
xor
jl
add
xchg
aad
cmp
ret
mov
inc
dec
pinsrw
xchg
jne
mov
es
aaa
or
lahf
lods
sbb
jae
mov
scas
sar
sti
ins
inc
mov
addr16
mov
adc
mov
xchg
imul
cmc
mov
mov
leave
clc
js
out
scas
cmps
lds
add
inc
pop
es
aas
jge
repz
mov
sub
jg
cmp
retf
dec
loop
out
adc
scas
daa
bound
jge
test
xlat
scas
mov
scas
(bad)
pop
push
adc
loop
out
push
fcmovbe
xchg
out
shl
cmp
push
arpl
dec
dec
jle
xor
sbb
cmp
mov
pop
adc
push
and
cs
xor
repnz
jne
cdq
sub
arpl
mov
mov
jmp
(bad)
pop
xor
nop
pop
sar
mov
push
lahf
xchg
fs
sub
adc
add
test
pusha
sar
xlat
test
into
and
(bad)
call
xor
loope
dec
ficom
outs
or
jne
int3
in
ret
outs
push
wbinvd
ins
mov
or
ins
mov
retf
dec
mov
(bad)
stos
aad
push
scas
test
sar
pop
test
and
ficomp
out
les
pop
xchg
dec
(bad)
dec
sbb
shr
mov
adc
pop
sub
xchg
jae
jecxz
(bad)
repz
cli
je
scas
fwait
pusha
push
jge
retf
in
out
dec
cld
lock
pop
mov
push
loopne
rol
repnz
fmul
mov
ja
mov
out
or
mov
out
in
cdq
hlt
dec
mov
sahf
mov
jge
pop
mov
adc
sti
cmc
sbb
in
xchg
in
fld
repz
lods
fwait
mov
aas
sub
shl
fcomp
fwait
pop
inc
int3
nop
scas
pushf
jp
popf
jo
(bad)
jnp
(bad)
push
sub
jecxz
ret
adc
xor
push
xor
pop
popa
rcl
les
push
sbb
dec
cmps
loop
je
or
test
mov
push
hlt
inc
cmp
aad
into
not
loopne
dec
in
out
mov
fnstenv
mov
dec
xchg
bound
aaa
add
daa
test
or
pop
adc
inc
aam
pop
in
pop
fs
add
call
xor
cmps
inc
add
mov
xchg
dec
push
mov
stc
or
int3
hlt
mov
inc
loope
and
call
loop
push
call
mov
test
out
clc
out
loope
(bad)
loopne
jno
jb
fucom
cdq
jns
scas
mov
dec
pop
and
retf
leave
lahf
pop
xor
mov
movs
int3
jnp
cmp
sbb
lods
loopne
jmp
scas
pop
dec
or
push
lods
and
jmp
add
jns
sti
and
xchg
mov
mov
test
mov
stos
mov
dec
add
int
mov
int
jmp
fdiv
or
test
fst
jg
lods
popf
pop
pop
dec
jge
adc
sti
es
add
lds
push
jae
mov
call
dec
fisub
add
loop
inc
inc
cmp
pop
or
ds
dec
js
dec
arpl
ror
fistp
xor
pop
fsub
or
sub
xchg
xlat
js
in
pop
aaa
xor
sbb
sub
dec
sti
(bad)
mov
or
lods
call
sub
jae
cmp
xlat
mov
jae
scas
call
inc
fs
icebp
inc
cwde
(bad)
into
jbe
jmp
mov
daa
xchg
sbb
add
scas
ja
mov
push
cdq
cmp
jmp
mov
sbb
jo
sbb
cmps
xor
xor
jne
push
mov
stos
xlat
stc
or
je
sbb
mov
jge
adc
aas
add
pop
jns
push
shrd
int
pop
mov
stc
sbb
ret
pop
rcl
lock
push
ret
sub
xor
adc
adc
mov
adc
mov
repnz
pop
(bad)
mov
mov
push
fldcw
add
mov
add
in
add
aaa
xchg
ss
out
fucom
sbb
mov
test
mov
xor
and
ins
xchg
pop
sub
push
fiadd
sub
(bad)
push
mov
pushf
cmc
or
in
or
dec
jmp
pop
cmps
(bad)
jns
(bad)
mov
adc
mov
(bad)
cdq
mov
inc
out
imul
sbb
xchg
inc
pop
enter
aas
jb
add
pop
les
add
push
or
inc
loope
je
lock
add
xchg
add
dec
or
cld
(bad)
pop
nop
xchg
jge
mov
sbb
inc
xlat
dec
shl
mov
scas
cmp
sbb
adc
pop
js
loope
xchg
mov
mov
pushf
xchg
add
and
jno
les
jge
dec
aas
fwait
jnp
scas
mov
mov
push
mov
push
call
xchg
mov
movs
mov
les
sub
aas
add
xchg
push
movs
ds
or
sbb
lds
movs
add
pop
ja
ficomp
push
sar
xor
or
and
push
add
cli
xchg
jp
pop
lods
push
aas
jne
inc
jbe
mov
cdq
add
out
add
shl
cmp
and
cmc
sub
or
push
xchg
or
retf
loope
and
retf
dec
push
imul
inc
pop
pop
xchg
lea
xor
adc
mov
or
adc
sbb
add
xchg
repz
pop
and
or
sbb
ror
sti
pop
int
loopne
into
mov
dec
adc
adc
push
xor
mov
pop
lods
out
ja
mov
pop
iret
ds
pop
xchg
mov
pop
and
push
lods
ss
jl
enter
aas
add
data16
mov
call
jmp
mov
clc
js
xchg
es
push
repnz
fist
sbb
(bad)
lds
jmp
mov
clc
retf
adc
lahf
jae
loop
dec
and
push
add
sub
enter
movs
inc
imul
repz
cwde
or
shl
sub
xchg
out
or
(bad)
pushf
daa
push
loop
cmps
dec
sbb
mov
push
sub
mov
mov
mov
cmc
int
or
jae
xchg
xor
out
jecxz
jno
mov
inc
cli
sub
or
mov
stos
dec
inc
xchg
jl
test
test
sbb
sbb
add
leave
or
mov
(bad)
aad
es
arpl
sbb
pop
jnp
pop
sbb
popf
(bad)
mov
mov
fsub
imul
dec
cdq
jo
div
(bad)
pop
outs
and
adc
je
push
retf
movs
pop
jl
push
jp
int
dec
or
nop
mov
punpckhwd
test
stos
mov
sub
add
add
retf
std
sub
data16
cdq
arpl
pop
js
pop
sbb
cmp
dec
sbb
fdiv
mov
ds
add
outs
xchg
xchg
mov
add
shr
call
xlat
sbb
jne
(bad)
arpl
mov
fisubr
cmc
mov
sub
pushf
hlt
aam
mov
movs
repnz
jge
inc
jg
add
jno
mov
fisttp
(bad)
retf
mov
add
jnp
ss
iret
daa
push
sar
inc
daa
ret
fild
mov
sbb
mov
or
add
addr16
inc
pop
hlt
lea
shl
inc
cmp
fcom
dec
shr
mov
pop
push
rcr
test
mov
inc
pushf
jmp
and
push
ret
into
mov
sbb
jmp
jne
mov
out
push
lock
mov
pop
xchg
cmp
sbb
jge
repnz
call
loopne
in
mov
call
and
mov
repnz
dec
sbb
movd
ins
jg
or
push
loop
(bad)
shr
ins
int
(bad)
mul
int
xchg
mov
pop
xchg
jnp
popf
cmp
xchg
fmul
dec
ret
je
sbb
and
xchg
nop
inc
cmc
fcomp
inc
(bad)
cmps
dec
push
ret
xor
push
pop
xchg
aad
rol
mul
jbe
or
loopne
lahf
xchg
cmps
loope
pop
popf
or
sbb
nop
mov
inc
pushf
jmp
dec
or
pusha
jecxz
dec
lock
aam
(bad)
pusha
dec
sbb
or
pop
in
push
clc
sbb
test
mov
adc
cmp
push
nop
push
cli
dec
xchg
ficom
add
cmp
jae
cwde
dec
xchg
(bad)
xchg
mov
jmp
fcomp
sub
and
mov
daa
fild
out
jo
add
cmp
inc
pushf
inc
out
xor
(bad)
sbb
xchg
loope
cmp
ins
or
(bad)
imul
movs
jae
adc
jmp
sbb
pop
xor
pop
out
pop
push
pop
cmp
js
test
jno
push
push
jo
xchg
or
sub
retf
mov
push
adc
xchg
pusha
loop
mov
in
stos
mov
jmp
push
sbb
fwait
(bad)
ret
adc
neg
xor
icebp
xor
mov
xchg
jb
and
int3
cmp
adc
inc
mov
mov
and
outs
push
xchg
push
and
push
mov
sub
es
and
test
imul
cmc
xor
mov
ins
add
cmp
and
xchg
cmp
cli
sub
mov
fwait
sahf
loopne
repz
add
(bad)
mov
cmp
or
add
pushf
sub
mov
mov
jmp
test
xchg
jae
dec
push
push
mov
push
ss
(bad)
out
(bad)
mov
scas
aas
fstp
popa
cmp
or
(bad)
fisub
xlat
sbb
leave
shl
and
mov
pop
mov
rcl
cld
aaa
call
fimul
adc
mov
push
pop
cmp
inc
mov
xchg
in
sbb
mov
mov
or
dec
sub
xor
in
shl
or
cdq
scas
dec
inc
inc
add
bound
enter
xor
ss
xor
pop
xchg
aam
or
mov
add
sbb
adc
(bad)
mov
cdq
imul
mov
mov
fcomp
aaa
jns
jg
daa
mov
xchg
jge
pop
mov
inc
jno
into
rcl
xchg
mov
fimul
dec
lods
popa
add
les
js
int3
std
fnstsw
push
mov
pop
loope
or
or
cdq
adc
loope
jle
stos
mov
xor
mov
mov
fmul
push
mov
dec
adc
pop
cmp
or
pop
and
ret
jecxz
cmp
mov
push
loopne
aam
pop
(bad)
mov
ins
xor
jo
(bad)
xchg
adc
pop
(bad)
out
aam
stos
xor
imul
xchg
or
and
jno
std
pop
push
lds
or
or
mov
sar
hlt
adc
ret
inc
mov
inc
fisub
sbb
pop
shr
xchg
in
into
push
inc
mov
ret
and
adc
push
hlt
add
(bad)
call
inc
loope
lea
loopne
mov
rcr
retf
mov
loop
repz
cmps
outs
fidivr
test
sub
out
add
push
add
mov
push
jae
and
add
adc
test
or
or
jg
sub
or
jne
jg
(bad)
enter
fcomp
mov
out
xchg
fisubr
call
int3
test
push
mov
(bad)
xchg
aam
loopne
jmp
rcl
shl
cmp
std
dec
mov
cld
in
scas
inc
fidiv
jmp
fild
iret
popf
inc
adc
iret
stc
jle
mov
repnz
outs
stc
icebp
mov
pop
xor
ds
inc
xor
pop
js
jb
daa
cdq
jno
cmc
es
xchg
int
pop
(bad)
std
xchg
jno
dec
xchg
cmps
shr
jmp
inc
adc
xor
mov
js
dec
addr16
retf
push
(bad)
xlat
mov
pop
jmp
fdivrp
fwait
push
ror
sub
xor
out
and
movs
lods
hlt
jge
xor
mov
fstp
push
xchg
nop
add
arpl
out
enter
xchg
(bad)
sbb
scas
pop
mov
jg
inc
adc
xlat
mov
push
in
cwde
lahf
mov
mov
or
pushf
add
fstp
icebp
mov
cmps
inc
sub
mov
pusha
test
sub
sub
ss
fisub
iret
cmp
ins
push
mov
mov
mov
(bad)
and
sbb
inc
dec
xor
imul
imul
test
addr16
jbe
ret
or
mov
les
mov
rol
cmp
loope
cs
push
xor
test
xchg
xchg
mov
movs
dec
enter
adc
(bad)
cmp
push
mov
js
and
outs
mov
dec
icebp
adc
popa
nop
sar
xchg
ja
cmp
pop
icebp
sub
mov
xchg
mov
(bad)
fs
js
inc
lahf
rcl
mov
mov
or
icebp
push
cmp
and
fisub
and
fld
sbb
inc
int
clc
cmc
cmps
test
push
mov
dec
pop
adc
seta
and
push
push
shl
push
mov
inc
push
xchg
fidiv
test
into
pop
and
pop
cs
cwde
(bad)
outs
fwait
mov
std
mov
or
aad
xchg
gs
mov
ds
ss
sahf
nop
xchg
jg
test
(bad)
pop
sub
mov
mov
mov
sub
and
(bad)
push
nop
jp
xor
add
ret
jl
pop
mov
mov
lods
push
test
jo
jo
(bad)
out
sub
outs
fwait
push
retf
movs
jno
mov
ins
pop
in
hlt
mov
jg
push
jle
mov
push
lods
mov
sbb
inc
pop
mov
shl
cmps
aad
mov
test
adc
in
in
iret
xchg
or
inc
imul
fnstenv
sbb
dec
neg
call
add
mov
shr
dec
xchg
arpl
les
mov
pop
das
es
or
mov
push
xor
mov
pop
mov
push
inc
add
add
xor
hlt
xchg
cmp
sbb
out
into
(bad)
xchg
xchg
mov
cmps
lahf
xchg
xchg
jmp
stos
mov
lods
mov
jbe
out
ret
dec
mov
jmp
push
add
aam
xor
jmp
push
xor
cmp
xor
and
jae
push
xchg
mov
add
sbb
xchg
fldcw
lds
pop
test
repnz
adc
and
jns
lahf
xchg
fdivr
cmp
and
ret
cdq
add
push
mov
jbe
out
ficomp
sub
out
mov
(bad)
xlat
ja
add
popf
outs
push
or
ins
(bad)
jo
xchg
xchg
lock
jne
aas
jecxz
retf
dec
xchg
jmp
pop
push
pop
(bad)
cld
aaa
add
dec
pusha
add
dec
or
dec
inc
(bad)
push
scas
jne
xor
imul
imul
adc
out
pop
ds
sbb
outs
cs
jp
adc
mov
xchg
sbb
sub
mov
or
stos
pusha
popa
dec
and
addr16
cmps
mov
ins
gs
imul
mov
inc
dec
int3
sbb
outs
test
lahf
imul
out
sbb
sbb
pushf
add
and
jne
pop
std
pop
ins
mov
pushf
(bad)
cmc
mov
xor
pop
ret
out
push
(bad)
aad
cmp
or
xchg
lods
adc
into
push
rcr
mov
js
fcmovb
and
and
enter
inc
sbb
mov
outs
in
mov
daa
cs
sbb
inc
cli
cmp
adc
xchg
cs
cwde
mov
imul
ds
push
push
adc
shr
dec
fidiv
sub
mov
jo
jmp
sub
cmps
ja
xchg
xor
adc
xor
and
in
mov
mov
or
(bad)
lahf
out
jl
fisubr
mov
int3
fwait
and
jns
add
pusha
cmps
jle
iret
and
cmps
xor
(bad)
jmp
or
adc
mov
test
cmp
cmp
inc
loopne
and
aaa
es
push
jg
stos
push
push
pop
test
push
ja
loopne
test
ret
es
push
fcmovnu
jb
das
or
faddp
js
std
jge
shr
neg
adc
cld
mov
fwait
mov
fs
jmp
pop
mov
mov
pop
out
mov
cmp
mov
(bad)
(bad)
pop
push
jbe
ins
lea
mov
(bad)
mov
shl
and
popa
jp
in
cmp
inc
stc
test
xchg
mov
not
(bad)
pop
stc
retf
or
sub
add
fwait
add
cmp
cmps
dec
xchg
icebp
xchg
cmp
sub
aam
pop
rcl
ret
mov
mov
push
icebp
aas
test
fstp
push
leave
fcomp
sbb
scas
ret
ss
xor
ds
ret
aad
push
and
adc
add
push
pop
jnp
jns
stc
jl
add
mov
adc
jnp
or
ret
lods
fild
inc
mov
aad
inc
loopne
pop
adc
dec
sbb
adc
popa
mov
(bad)
mov
sub
sbb
sbb
ret
repnz
cmps
jbe
xchg
push
adc
dec
mov
jnp
ret
cmp
and
dec
movs
lahf
cmp
outs
mov
cwde
push
cdq
mov
movs
xchg
cmp
dec
xlat
rcl
xchg
stos
xor
mov
int3
add
pop
popaw
jp
sub
jnp
and
dec
pop
repz
mov
push
jge
xchg
push
xor
add
xchg
jl
lahf
test
sub
lock
jno
push
and
call
cmp
mov
push
or
adc
cld
inc
jo
jge
push
inc
bound
adc
out
inc
push
push
imul
call
ins
dec
aaa
retf
mov
loop
inc
or
(bad)
outs
sub
mov
cmp
add
call
add
pop
xchg
fmul
out
and
mov
stc
daa
sbb
sbb
mov
inc
lods
int
inc
push
nop
xchg
retf
jnp
and
popf
add
(bad)
sbb
pop
or
icebp
adc
fcmovnbe
xchg
jge
(bad)
fsubr
or
je
sbb
sub
dec
iret
ss
cmp
pusha
sbb
scas
lea
rcl
ficom
inc
es
in
cld
pop
adc
aam
lds
inc
mov
inc
mov
in
and
aam
(bad)
pop
push
mov
cmp
test
cmp
sub
outs
test
mov
ret
arpl
cdq
push
push
jmp
movsx
pop
pop
or
sub
enter
mov
imul
aaa
cwde
ss
test
pop
or
inc
sar
pop
mov
cli
and
xchg
sbb
cmp
xor
mov
jmp
inc
leave
mov
out
lods
inc
add
pop
mov
rol
cli
or
or
daa
inc
mov
pop
jmp
ret
xchg
int3
dec
rcr
retf
or
xchg
psubusw
mov
cmp
mov
sti
dec
inc
aaa
or
inc
loop
cli
call
inc
cwde
adc
xchg
xchg
aas
sbb
imul
sub
and
pop
push
pop
shl
cmp
sbb
imul
imul
or
xor
mov
mov
pop
mov
push
iret
jo
push
sbb
adc
xor
cmc
lods
lds
dec
push
jne
retf
scas
adc
pop
call
jp
sub
pop
jnp
adc
stc
pop
pop
imul
sub
inc
or
scas
push
retf
retf
mov
cmp
xor
xlat
push
inc
out
popf
lods
dec
shl
or
(bad)
jp
push
test
or
out
cld
sub
scas
gs
jecxz
les
cld
repz
add
std
ins
out
ins
call
and
les
loope
cmps
in
cmc
addr16
adc
loope
test
push
fild
cmp
pop
scas
arpl
sbb
cmps
bound
pop
cs
stc
mov
mov
sbb
shl
pop
inc
(bad)
xor
pushf
or
cmp
pop
mov
fstp
jmp
sub
lahf
cmp
cmc
xchg
jbe
sar
cmp
push
mov
inc
gs
and
mov
jecxz
int
inc
sub
mov
cmp
(bad)
jo
mov
jns
out
cwde
fxch
lea
je
xchg
je
in
ss
pop
push
mov
js
fisttp
jo
add
sub
pusha
fldcw
sbb
retf
ja
gs
bound
jp
or
loopne
mov
icebp
mov
cmp
imul
dec
fs
adc
inc
xchg
pushf
pop
push
in
std
lds
push
mov
aad
sub
(bad)
cmc
popa
xchg
(bad)
jae
mov
rol
push
mov
iret
push
clc
imul
push
dec
out
data16
jns
mov
pop
xlat
xchg
out
inc
sbb
pop
push
pop
sub
xchg
push
icebp
stc
xor
mov
lock
jo
jb
or
pop
and
ins
lock
sbb
sar
xchg
jo
mov
sar
push
test
das
je
inc
push
mov
mov
or
push
and
push
movs
pop
xor
sub
les
cmp
xchg
mov
push
loopne
call
rol
ins
add
pop
or
repnz
mov
mov
cmp
or
sar
in
jo
and
mov
ins
add
push
fistp
sbb
jp
test
adc
out
mov
mov
imul
out
sub
dec
sbb
and
je
push
mov
jmp
lods
inc
stc
in
(bad)
fistp
inc
add
jae
jl
push
call
dec
jmp
(bad)
cdq
inc
fs
rcl
push
mov
xchg
clc
xor
add
add
popf
mov
fnstsw
push
jno
mov
mov
push
push
repz
mov
inc
sub
jp
dec
dec
ret
imul
push
fwait
xchg
test
das
push
sbb
in
push
mov
test
lods
and
sbb
inc
cdq
mov
pop
sub
sbb
pop
shl
fadd
fld
fs
push
sub
xchg
(bad)
call
push
lods
mov
std
fld
xchg
and
inc
fld
jmp
js
inc
jge
aas
fs
jecxz
rcr
jp
in
in
mov
sar
mov
mov
pop
movs
push
xlat
mov
ds
mov
add
fwait
movs
push
mov
dec
shl
stos
jmp
jno
adc
or
arpl
js
jecxz
ret
pop
jno
leave
out
mov
div
int3
or
jg
mov
mov
xchg
sub
popf
lock
out
pop
jecxz
stc
add
es
dec
add
les
lea
mov
sti
in
mov
inc
aaa
inc
push
(bad)
cmps
lock
(bad)
out
xchg
pop
push
cmp
test
jmp
push
add
pop
cmp
jne
in
mov
jno
dec
dec
xchg
mov
and
lods
adc
mov
add
mov
sbb
(bad)
cmp
inc
cmp
pushf
pop
xor
test
xchg
out
inc
mov
std
jno
cmp
icebp
mov
hlt
pop
and
ins
(bad)
jl
adc
adc
xchg
retf
mov
jae
out
push
mov
call
sbb
loopne
scas
and
sbb
xchg
(bad)
dec
jb
dec
push
push
fbstp
popf
pop
pop
cwde
mov
sbb
sbb
das
mov
jne
sti
pop
xchg
int
daa
out
mov
push
std
adc
pop
xor
movs
mov
push
xchg
add
fdivr
jo
jmp
mov
movs
retf
stos
xchg
push
mov
ret
mov
repnz
int
dec
loop
adc
test
outs
mov
enter
dec
jno
mov
dec
xchg
mov
shl
inc
inc
int3
add
inc
push
daa
out
aad
arpl
pop
mov
push
cmp
cmp
(bad)
xchg
mov
sar
cmps
mov
or
add
(bad)
mov
ret
cmp
aaa
mov
sti
xor
jne
or
pop
and
mov
jne
add
push
fwait
jmp
bnd
inc
dec
add
jp
out
pop
adc
fstp
mov
mov
arpl
stos
call
sbb
lock
cmc
pusha
pop
jmp
rcr
call
sbb
(bad)
test
retf
and
sbb
mov
mov
arpl
ss
pop
in
jmp
mov
loop
and
call
xor
and
jmp
add
scas
bound
mov
dec
mov
fdivr
fwait
and
fsubp
outs
inc
sahf
inc
add
(bad)
push
lds
adc
sub
les
std
xchg
pop
retf
adc
outs
ror
adc
cmp
enter
not
pop
rcl
ins
int3
loop
jo
retf
xchg
mov
(bad)
cmps
loopne
jmp
jb
int
lds
cmps
cmps
mov
pop
in
xchg
cmp
mov
mov
mov
(bad)
arpl
jno
les
in
mov
gs
pop
pop
inc
dec
push
adc
pop
mov
test
sub
xlat
adc
and
fwait
loope
jo
imul
mov
pop
ficomp
int3
jmp
vmovdqa
test
push
jns
iret
adc
add
add
xor
push
xchg
es
adc
jecxz
cmp
fist
sub
xchg
loopne
cmp
push
and
sbb
ins
sahf
or
mov
add
das
xchg
movs
jbe
sar
(bad)
ja
mov
jo
dec
lock
adc
jo
dec
mov
pop
dec
mov
daa
or
inc
imul
outs
xchg
mov
jp
mov
in
call
inc
inc
test
adc
push
popf
rcl
add
or
loopne
ds
adc
jl
mov
lahf
xor
mov
pop
retf
and
imul
test
inc
lea
bound
and
and
sar
retf
mov
stc
cmp
or
push
test
push
div
cmp
loopne
int3
xor
nop
mov
jge
dec
(bad)
sbb
pop
jae
push
dec
lods
lds
sub
(bad)
pushf
fdiv
std
xor
dec
cwde
retfw
jmp
ret
loope
lahf
loop
mov
les
adc
ror
pop
outs
xor
pusha
fiadd
add
bound
pusha
inc
ret
loopne
rol
xchg
loopne
lahf
mov
(bad)
std
mov
out
jnp
test
out
push
ins
inc
ds
repnz
fld
xor
retf
in
push
dec
sbb
outs
xor
jp
pushw
ret
cmps
stc
int
inc
hlt
mov
or
inc
scas
rol
dec
lock
jnp
imul
das
sub
test
inc
xor
fs
cmp
sahf
jbe
(bad)
jl
pop
rcr
add
mov
in
jo
or
add
jne
sbb
mov
icebp
jmp
inc
jg
xlat
test
int
cmps
aad
cmp
xchg
retf
les
push
dec
add
rcr
push
fdivr
ins
movs
fisttp
out
test
scas
mov
xor
lods
mov
arpl
cmp
xor
pop
jle
shr
scas
das
div
and
sub
cmp
mov
es
add
jmp
pminub
outs
mov
lds
rcl
lea
outs
add
ret
push
mov
out
xchg
rol
sub
or
push
popf
call
test
pop
leave
adc
repnz
inc
fcom
pop
shr
pop
mov
mov
xchg
mov
js
icebp
jecxz
mov
imul
out
cmp
int
out
int
add
clc
(bad)
popf
pop
imul
test
push
fld
jbe
sbb
pop
ds
pop
test
test
mov
mov
je
jl
dec
dec
cmc
jne
mov
(bad)
jno
(bad)
test
imul
dec
adc
ds
aaa
and
pop
mov
adc
mov
(bad)
loop
shl
aam
fadd
(bad)
push
and
(bad)
bound
mov
outs
retf
jmp
or
mov
ret
retf
imul
outs
and
scas
lds
adc
sbb
test
ins
fcomip
jmp
sub
ss
jnp
mov
bound
mov
repz
mov
(bad)
pop
jp
call
or
pop
jmp
daa
add
mov
orps
mov
rcr
fimul
outs
push
pop
test
push
adc
das
cmp
out
ret
es
into
bound
or
imul
dec
or
pusha
ror
xor
push
je
repz
sbb
sub
test
out
mov
test
push
stc
lods
and
jne
dec
jg
mov
cwde
ss
ss
dec
dec
ja
leave
arpl
mov
call
mov
aaa
push
pop
adc
mov
xchg
mov
add
dec
sub
xchg
dec
xor
(bad)
pop
xchg
cmp
or
mov
add
aam
out
push
imul
inc
pusha
push
sbb
adc
xor
fidivr
push
sbb
pop
arpl
sub
dec
fcomp
pop
(bad)
pop
mov
(bad)
mov
ret
(bad)
push
cmp
retf
test
or
lods
sub
out
jg
jge
aam
ret
test
jno
push
jp
outs
adc
into
sbb
dec
dec
hlt
stc
pop
cmps
loop
not
adc
adc
mov
ds
push
cmps
add
das
mov
sub
ret
xchg
fstp
jne
or
mov
aas
icebp
push
xor
je
jns
cmp
push
imul
or
jbe
lods
nop
xchg
stos
test
add
pop
cld
xor
aas
mov
jle
xor
scas
push
adc
xor
add
rol
mov
push
adc
dec
cmps
dec
je
pop
jmp
xchg
mov
xor
xchg
or
inc
shl
adc
(bad)
das
cmp
cmp
mov
dec
call
xchg
dec
mov
cli
outs
sahf
push
mov
in
or
in
sbb
lods
push
ins
jg
daa
dec
or
dec
dec
xchg
push
inc
xchg
pop
outs
mov
mov
mov
pusha
int
les
(bad)
jb
in
mov
mov
repnz
adc
loope
nop
call
fisub
xchg
shl
jae
inc
loopne
fdiv
mov
aaa
adc
sar
mov
or
fimul
add
int
call
cs
push
cmp
pop
sbb
(bad)
loope
mov
in
mov
lods
lds
pop
push
outs
jecxz
cmp
stc
sbb
arpl
adc
mov
mov
jbe
lock
xchg
xlat
lock
jo
out
or
jne
cdq
jne
xor
lock
inc
xchg
or
movs
cmp
and
loop
xlat
cdq
iret
mov
(bad)
adc
in
lods
test
leave
dec
xlat
push
lahf
adc
test
push
pop
gs
mov
adc
cmps
cmp
inc
stos
push
fidiv
jno
adc
icebp
jo
into
inc
sbb
inc
mov
nop
dec
add
cmps
and
pushf
bound
add
push
adc
les
jnp
cld
push
sar
or
outs
gs
cmps
jne
dec
les
adc
hlt
adc
pop
jp
mov
cmp
mov
leave
pusha
dec
scas
sahf
stos
lock
inc
xchg
out
iret
outs
xchg
dec
inc
dec
push
inc
push
not
or
sbb
mov
or
movs
inc
out
rcl
xor
mov
xor
aad
repz
and
dec
lock
ret
push
pop
push
xor
jno
jne
mov
cs
sbb
pop
mov
test
fdiv
into
mov
push
int
lock
iret
div
dec
jne
fdiv
fisub
jmp
aaa
stc
push
sbb
ret
push
or
dec
data16
daa
or
adc
push
and
sbb
push
adc
fnstcw
fs
in
scas
add
xchg
pop
mov
pop
mov
mov
xor
mov
and
aas
and
adc
or
push
and
call
ss
mul
add
neg
and
inc
push
dec
xor
push
repnz
xor
sub
cmp
mov
push
push
arpl
loopne
pop
lock
push
pop
aad
inc
and
daa
lods
imul
sbb
dec
sub
and
dec
add
dec
mov
adc
mov
push
aad
ret
sub
ficom
ins
movs
adc
mov
stos
inc
sub
mov
adc
mov
push
jge
pop
xor
and
mov
ds
pop
ss
into
push
mov
xchg
(bad)
pop
int3
xlat
arpl
(bad)
fadd
dec
cmps
push
cmps
xchg
enter
outs
dec
in
sub
push
mov
loopne
(bad)
xor
dec
into
or
inc
stos
(bad)
pop
scas
loopne
pop
cs
jg
dec
ret
ret
cs
add
ror
push
adc
inc
jge
or
cmp
mov
mov
outs
jmp
and
xchg
add
xchg
xchg
xor
lods
in
clc
mov
es
mov
int3
cmps
aad
push
push
cmp
mov
sbb
hlt
dec
sub
sbb
in
mov
lock
xchg
mov
inc
repz
enter
mov
cld
jmp
sbb
enter
cmp
sub
sbb
call
inc
cmps
cmps
aad
xor
adc
cmps
gs
inc
loopne
cmc
fwait
push
adc
aam
mov
and
push
jmp
dec
mov
(bad)
int
mov
in
jmp
and
stc
push
fisttp
les
mov
push
inc
sahf
cs
mov
sub
out
ds
inc
in
sbb
sbb
repnz
push
stos
and
dec
pop
xor
jp
or
jno
xor
leave
inc
pusha
jnp
iret
cmps
xchg
jae
into
cmps
or
shld
inc
mov
sub
cmps
aaa
jl
xor
jmp
shl
push
push
pop
jmp
inc
pop
cwde
arpl
jno
mov
outs
daa
jnp
shr
mov
pop
stos
push
mov
xor
pop
push
data16
fistp
cmp
jmp
jno
mov
test
sar
push
lahf
test
cmc
mov
bound
pop
adc
mov
xor
xor
ret
(bad)
mov
sbb
ret
inc
jno
hlt
por
mov
push
and
rol
loope
aad
push
sbb
mov
fsub
daa
jge
xchg
test
xor
mov
mov
mov
popf
and
sub
js
retf
stos
iret
dec
shl
mov
pop
mul
retf
dec
add
and
call
std
and
dec
add
add
leave
mov
mov
mov
adc
daa
enter
mov
mov
pop
push
or
pop
stos
pop
and
push
jb
jmp
(bad)
jns
xchg
inc
lahf
adc
xor
inc
test
in
mov
xchg
jle
push
cmp
mov
pop
or
pop
out
nop
xchg
mov
stos
sbb
hlt
fwait
int
cmps
int
clc
loopne
ins
mov
push
adc
pop
(bad)
test
movs
pop
iret
loop
sub
sti
mov
test
pusha
rol
lods
add
inc
clc
pop
sbb
rcr
xor
stos
push
test
dec
pushf
rcl
and
xor
jecxz
or
ss
dec
inc
mov
or
adc
movs
mov
std
jnp
and
lds
jmp
mov
cmps
scas
inc
jp
fidivr
imul
fs
cld
fmul
xchg
mov
sub
mov
or
xchg
data16
mov
add
mov
enter
sahf
shr
adc
xchg
ja
int
inc
dec
and
movs
data16
inc
cmp
or
push
scas
inc
scas
cdq
push
add
mov
dec
pop
pushf
pop
jmp
cdq
xor
js
adc
jae
les
in
mov
fimul
sub
fwait
aam
xor
lea
fsub
cmp
jbe
sahf
adc
popf
js
mov
stos
jp
stos
or
inc
push
push
scas
test
mov
fild
lods
aaa
and
sub
dec
jae
mov
lods
loop
or
pusha
in
cwde
push
ss
add
jno
shl
adc
push
push
ffree
sbb
cmps
hlt
sub
ret
and
inc
adc
mov
add
div
cmp
and
adc
jb
cmc
arpl
popa
xlat
fcomp
dec
push
pushf
icebp
xchg
adc
xor
or
test
jmp
scas
dec
add
(bad)
retf
stos
xlat
nop
mov
stos
xchg
iret
jl
into
cmps
not
sub
aas
jno
xor
mov
mov
adc
add
mov
pop
sub
iret
test
jecxz
ss
jp
dec
adc
inc
add
clc
jp
lds
xchg
pop
cmps
add
and
pop
mov
retf
push
das
jp
pop
clc
xor
iret
jnp
outs
jmp
addr16
add
inc
adc
mov
jecxz
dec
retf
arpl
xchg
out
std
aas
lea
mov
sbb
xor
add
(bad)
in
cli
inc
sub
imul
retf
xchg
test
and
ret
retf
jb
mov
inc
fwait
inc
jo
pusha
push
lock
dec
test
fst
ds
xor
push
adc
int
jmp
leave
rcr
cmc
pop
add
jmp
loop
sbb
adc
adc
xlat
pop
cdq
dec
push
pop
test
std
pushf
push
shl
mov
sbb
jmp
adc
std
aad
xlat
icebp
and
lock
dec
mov
shl
movs
jecxz
mov
test
or
push
ret
mov
mov
mov
xor
add
mov
or
popf
out
ins
mov
sub
sbb
or
repz
xchg
div
out
mov
movs
or
mov
sti
push
lds
cmp
test
stos
test
xor
cmps
jne
(bad)
retf
pop
push
mov
cs
jns
popf
les
sub
stos
xchg
jno
cmp
arpl
mov
loope
daa
xor
cmp
pop
icebp
shl
ins
adc
xor
jb
(bad)
dec
inc
je
out
call
pop
pop
mov
arpl
xchg
pop
jno
push
push
mov
iret
cld
inc
adc
(bad)
dec
fisubr
jge
dec
pop
popa
setnp
loope
cmc
ins
xchg
ss
mul
adc
add
aad
pop
popf
pop
clc
or
sub
sub
fwait
jp
fist
loop
xor
push
retf
push
mov
pushf
push
out
lea
int
dec
xor
daa
adc
test
sub
loopne
cmps
push
(bad)
outs
stos
sbb
cwde
push
ret
das
jmp
inc
cmps
push
test
add
push
jp
outs
loope
dec
pop
pop
add
ds
xor
lds
mov
stos
cmp
imul
retf
jg
scas
mov
pop
int
adc
ss
push
and
cmp
sbb
outs
imul
inc
xchg
adc
push
ins
pop
mov
fidivr
aas
pop
imul
data16
in
in
(bad)
hlt
test
stos
mov
gs
mov
and
stos
repnz
push
push
mov
push
fstp
aas
sub
fadd
cmp
and
(bad)
(bad)
dec
ffree
daa
mov
sub
pushf
pushf
jnp
jns
xor
push
adc
iret
xor
cmp
dec
(bad)
(bad)
(bad)
loopne
jmp
jmp
add
jo
aas
in
js
jb
cmp
das
mov
mov
sbb
retf
outs
mov
xor
rcl
sti
jge
aad
cmp
mov
shl
xchg
cmp
int
xchg
ins
jg
imul
xchg
lahf
js
add
jo
jle
cmc
sahf
jno
ins
and
lea
das
push
push
(bad)
lds
push
test
pop
retf
mov
jb
div
sbb
mov
jns
int
aad
pop
nop
data16
push
cdq
lock
xor
mov
push
fist
retf
rcr
xchg
mov
(bad)
xchg
arpl
aas
push
or
and
lds
push
add
sbb
adc
mov
or
outs
add
retf
retf
xchg
lods
out
push
push
jmp
push
int3
inc
repnz
adc
push
cld
rcr
arpl
and
ror
dec
pop
(bad)
fist
mov
adc
pop
mov
pop
pop
out
push
sub
ja
dec
xchg
inc
dec
or
fmul
cmps
jns
mov
xchg
(bad)
enter
cdq
int
popf
and
add
add
xor
push
and
call
mov
iret
arpl
inc
ds
jmp
nop
push
iret
icebp
outs
sbb
jl
shl
loop
(bad)
cdq
cmp
cmps
lds
lock
cli
call
dec
dec
jge
jecxz
not
frstor
retf
push
call
cld
cvtpi2ps
bound
es
(bad)
mov
fadd
or
jle
jnp
push
mov
jae
xchg
push
out
lods
call
stos
xor
out
sub
cmp
xchg
clc
dec
icebp
fs
xchg
rcr
inc
sbb
mov
cli
push
test
lock
push
and
movs
lods
addr16
je
bound
stos
sar
dec
inc
sub
faddp
xchg
dec
(bad)
adc
cmp
popf
or
call
test
rcl
pop
xchg
rcl
mov
sbb
xor
hlt
jo
sub
sar
in
cmp
adc
fs
in
enter
xchg
xchg
gs
dec
outs
(bad)
shl
les
repz
inc
cmp
loop
out
add
xchg
int
clc
sbb
inc
dec
daa
sbb
aam
or
push
mov
mov
push
in
sub
add
test
imul
test
out
adc
(bad)
mov
scas
dec
cmps
mov
sbb
test
jecxz
jp
or
mov
fwait
(bad)
lds
sub
outs
pop
test
dec
add
xchg
imul
mov
adc
jle
call
aam
addr16
sub
dec
faddp
dec
dec
cmp
or
pusha
sub
inc
inc
std
fwait
sub
push
retf
fstp
dec
retf
shl
xchg
add
cmp
push
stos
popa
jne
ret
mov
rol
popa
cmc
adc
inc
dec
ins
imul
jmp
pop
push
push
inc
mov
movs
movs
sahf
and
xchg
mov
xlat
jno
sbb
int3
cld
mov
lea
pop
and
retf
cmp
jmp
lods
sbb
push
rcl
rcl
jle
outs
fisub
add
in
aad
cmp
in
xor
add
(bad)
dec
cwde
inc
cmp
das
adc
xor
mov
cld
add
out
ret
sub
pop
and
repnz
push
inc
sub
pusha
xor
sub
push
dec
fist
jecxz
and
ror
lahf
or
sar
dec
ss
je
xor
fs
mov
sbb
mov
ret
daa
sbb
out
add
push
addr16
mov
cmp
(bad)
inc
es
mov
push
xchg
loop
fs
ret
(bad)
and
pop
and
enter
or
inc
sub
mov
rcl
dec
into
scas
jle
in
ret
fwait
jmp
test
pusha
sub
adc
loopne
mov
or
sbb
xor
mov
push
fsub
out
mov
loopne
jp
out
dec
push
dec
out
push
jnp
mov
jl
aas
push
pop
or
es
xor
pop
(bad)
ror
sub
sub
add
push
imul
ins
cmp
xor
adc
rol
test
sbb
and
inc
sahf
cmps
jae
inc
xor
mov
addr16
sub
fbld
xchg
pop
retf
aas
pushf
push
out
clc
fsub
pop
sbb
out
xchg
outs
lods
sbb
mov
add
pop
ss
es
cli
mov
jl
loop
icebp
and
sbb
dec
dec
xchg
sub
and
imul
movs
mov
ret
vmaxpd
(bad)
stc
sbb
sub
adc
jbe
sub
pop
xor
out
jg
inc
(bad)
retf
enter
or
inc
cmc
jecxz
mov
dec
jmp
or
cmp
jbe
imul
adc
fs
int3
mov
sbb
xor
inc
pop
jne
cmp
pusha
gs
pop
adc
out
dec
or
cdq
inc
mov
and
fidivr
and
retf
push
xor
push
repz
cmc
pop
adc
mov
inc
loopne
sbb
not
in
setl
jno
mul
and
xor
aas
pop
or
or
arpl
jl
push
push
add
xchg
imul
jle
xor
mov
lahf
or
(bad)
popf
fxch
int
and
repnz
jno
movs
mov
scas
dec
pop
push
lahf
sbb
dec
pop
add
or
das
leave
cmc
push
cli
inc
pop
dec
sbb
fldcw
test
push
push
aaa
cdq
and
sub
int3
test
adc
dec
cmp
stos
or
fist
das
sbb
lods
imul
pop
adc
push
mov
add
adc
imul
cmovge
cmc
shl
imul
out
dec
scas
cmp
xor
icebp
and
cmp
pusha
jno
mov
push
lahf
xchg
xor
stos
mov
mov
bound
imul
sti
into
inc
inc
addr16
(bad)
retf
(bad)
push
pop
xchg
xchg
sbb
pop
sar
or
and
lds
imul
adc
inc
in
mov
sbb
ror
mov
dec
jmp
sbb
fisttp
(bad)
cmp
xor
les
lds
int
daa
mov
scas
pop
fidivr
mov
sbb
mov
mov
(bad)
mov
mov
loopne
hlt
mov
mov
sti
inc
aaa
clc
addr16
mov
xor
in
lahf
mov
or
adc
cmp
inc
push
ja
push
ds
mov
sar
pop
mov
push
movs
js
xchg
test
xchg
jno
(bad)
loopne
pop
sub
movs
jbe
fwait
pop
inc
jnp
xor
push
mov
sar
mov
pushf
xchg
and
mov
cdq
jg
cli
test
pop
push
xchg
loop
cli
mov
jl
rol
dec
jg
cmps
cmc
imul
popf
sbb
cmp
icebp
shl
(bad)
push
mov
pop
push
outs
enter
and
test
les
cmp
dec
enter
ficom
pop
hlt
xor
dec
sbb
(bad)
jmp
mov
nop
cmc
nop
lahf
mov
sbb
test
push
fidiv
int
mov
or
sbb
mov
mov
jbe
sub
mov
aaa
xchg
mul
frstor
retf
or
sbb
pop
and
retf
jmp
sbb
push
ins
mov
sub
or
in
sbb
xor
scas
outs
mov
dec
lods
mov
mov
scas
in
mov
div
outs
test
inc
js
mov
jnp
shr
call
mov
pop
rcr
outs
xchg
push
test
adc
lock
dec
outs
inc
fild
cld
add
ds
xor
sub
push
cmp
pop
pop
(bad)
xor
jne
aaa
jnp
add
arpl
cs
adc
sub
stos
mov
popa
(bad)
sbb
push
sbb
and
bound
inc
(bad)
mov
imul
call
mov
pop
push
and
inc
aas
(bad)
pushf
dec
mov
outs
inc
cmps
mov
mov
push
mov
jno
fst
(bad)
call
sbb
or
lea
test
mov
sbb
(bad)
fsubr
scas
mov
cmp
mov
outs
fldenv
cmc
or
dec
ins
in
fistp
push
popf
dec
xchg
pop
test
or
sbb
and
jb
popa
sbb
out
mov
mov
in
xchg
pop
pop
push
xchg
mov
mov
sahf
sbb
je
jl
and
add
dec
mov
call
push
add
push
in
bound
cwde
(bad)
dec
sahf
ret
pop
or
shr
pusha
leave
xor
adc
mov
adc
pusha
cmc
int
dec
adc
jmp
inc
cmp
sbb
(bad)
mov
out
retf
jno
test
popa
repnz
xchg
sahf
ficom
add
js
pop
jmp
inc
jg
aaa
aam
cmp
mov
cmp
lods
sbb
sub
fadd
or
sbb
mov
push
test
test
or
xor
mov
test
pop
mov
sub
add
mov
xchg
enter
and
ficom
js
dec
sbb
in
test
jbe
rol
or
push
sub
movs
xor
js
aaa
push
cld
xchg
and
aad
rol
jmp
and
retf
leave
sbb
fistp
pop
fdivr
aam
sub
cmc
adc
call
cli
push
mov
fisttp
inc
pop
xor
das
(bad)
mov
pop
adc
daa
jmp
scas
or
stos
outs
sub
push
pop
bnd
adc
jl
out
add
jae
dec
daa
mov
cmp
xchg
sbb
loope
aam
(bad)
mov
push
cmp
movs
and
loopne
or
imul
and
ror
pop
out
lods
fnstenv
js
sub
daa
nop
push
mov
pop
loop
add
ret
xor
hlt
cmp
or
xor
call
leave
cmps
fiadd
ds
sbb
mov
sbb
mov
cmc
loopne
xchg
into
and
fild
movs
xor
cmp
(bad)
fs
je
lods
jb
mov
sub
arpl
lahf
xor
cli
mov
push
stos
mov
data16
and
shl
icebp
fwait
jmp
fld
aaa
add
addr16
movs
push
in
shl
ins
dec
outs
push
in
inc
mov
push
mov
jnp
jl
inc
xchg
sub
cmp
fcom
jmp
call
aad
repz
rol
sub
push
loope
outs
das
cmp
(bad)
into
out
loop
in
jno
inc
retf
cmp
je
dec
fwait
(bad)
pop
sub
mov
adc
movs
mov
cmc
xlat
icebp
jnp
jmp
add
call
(bad)
ja
aam
mov
fst
cdq
cmp
pop
(bad)
aas
test
and
shl
jmp
push
loope
in
mov
in
enter
sbb
jg
cmp
jmp
inc
pop
mov
in
stos
push
jmp
mov
enter
pushf
fidivr
pushf
mov
(bad)
pop
into
pop
cmp
fadd
cmp
inc
xchg
in
push
fadd
leave
test
sub
or
rol
adc
aam
push
std
popa
ins
mov
mov
inc
pop
mov
daa
push
rcl
cmps
jp
stos
out
icebp
repz
loope
(bad)
xchg
xor
hlt
push
fnstcw
xor
adc
cli
outs
mov
inc
in
(bad)
cmc
scas
mov
mov
repz
shl
mov
xchg
inc
lock
and
aas
xor
neg
(bad)
hlt
ror
jns
rcl
add
xor
inc
test
push
in
call
clc
fisub
and
lds
icebp
lods
pop
fwait
add
into
push
fstp
pushf
add
iret
int3
pop
xor
test
ins
jmp
xor
pop
gs
jmp
lods
jo
popf
sahf
leave
push
push
mov
and
sub
xor
pop
and
nop
test
or
cmc
iret
repz
dec
xchg
fmul
pop
call
test
lods
push
dec
rcl
inc
fmul
inc
gs
add
cwde
ja
dec
inc
or
aaa
sar
cs
or
xchg
test
jge
add
in
ds
adc
jecxz
mov
jmp
sbb
cmp
stos
mov
scas
sbb
or
mov
jnp
push
mov
mov
aam
adc
iret
shr
xchg
xchg
mov
add
scas
sar
inc
or
dec
in
pop
movs
nop
sbb
aam
cld
leave
jo
stos
inc
movs
inc
clc
fs
imul
pop
and
aaa
shl
inc
int
push
mov
pop
test
pop
adc
inc
jbe
mov
xor
push
push
mov
xchg
push
dec
add
add
add
inc
pop
std
jmp
in
popf
lea
inc
jle
lods
iret
(bad)
test
add
xchg
xchg
sbb
clc
test
sbb
mov
xchg
inc
call
sub
in
lods
rol
pop
or
push
mov
ja
shl
gs
leave
or
mov
popa
js
lods
retf
lahf
test
adc
retf
lock
aam
sbb
out
ds
inc
jnp
adc
lods
mov
sub
push
outs
inc
or
mov
push
mov
clc
sbb
mov
jge
and
pop
mov
test
sub
sub
mov
sar
cs
loop
cmps
call
or
pop
or
test
jmp
(bad)
cmps
jo
or
daa
pop
mov
inc
push
or
loopne
cs
daa
fst
xchg
loope
loop
inc
test
jge
jge
jl
dec
jecxz
shl
enter
sub
je
xchg
jb
iret
mov
ins
jns
out
mov
es
out
mov
(bad)
sbb
loop
test
pop
aam
and
lahf
jbe
push
jnp
stos
xchg
enter
sub
add
nop
mov
mov
sar
ins
xchg
enter
inc
mov
inc
inc
fld
pop
out
sbb
aam
sbb
(bad)
mov
es
(bad)
adc
addr16
jecxz
aad
(bad)
adc
lahf
out
leave
xor
mov
int
addr16
pop
cmp
xor
ror
and
mov
retf
dec
jae
fimul
stos
stos
out
and
add
jl
sahf
adc
arpl
out
out
fsub
dec
sub
jp
sti
push
mov
fsub
adc
cwde
and
and
mov
pop
lds
je
int3
les
add
cld
ds
push
bound
pop
ss
mov
sbb
mov
jle
pop
mov
and
(bad)
popa
bound
sub
je
daa
mov
sbb
enter
mov
or
jg
enter
dec
mov
jg
jmp
sub
jecxz
dec
add
inc
lds
sub
add
dec
add
lea
or
leave
repz
(bad)
cmp
adc
dec
mov
xchg
cmp
stos
sbb
xchg
in
mov
call
inc
aam
jmp
cmps
fsub
inc
cmp
leave
int
shl
retf
dec
jno
rol
pusha
mov
les
iret
sbb
pop
test
xchg
stos
jb
push
mov
clc
cs
mov
inc
stc
sub
fild
pop
add
push
push
or
mov
mov
jle
jbe
dec
dec
add
clc
sbb
xchg
out
cmp
mov
cmp
and
mov
loope
adc
movs
cli
test
ror
frstor
fs
pop
sbb
stos
ja
aaa
xor
jmp
jb
inc
push
pusha
cmp
xchg
cmp
ins
xchg
add
xchg
and
sbb
mov
shl
xor
add
add
fisubr
inc
mov
jmp
daa
xchg
ja
fmul
push
sub
inc
lods
cmp
pushf
jo
jae
lods
fnsave
js
iret
outs
sub
popa
popa
mov
(bad)
fdiv
mov
pop
jbe
jne
xor
mov
mov
in
test
fidivr
xchg
jge
cmp
push
cwde
or
add
jns
aam
push
jae
out
mov
popf
xor
rcr
scas
test
scas
retf
and
aam
into
xchg
mov
test
mov
iret
call
fwait
imul
mov
jnp
adc
fwait
cmp
add
retf
mov
stc
xlat
or
mov
cmp
lock
cmp
xchg
outs
sbb
mov
sub
push
mov
out
cmp
cli
mov
dec
rcr
push
sti
mov
push
dec
in
adc
cmps
cmp
adc
xor
and
or
(bad)
je
(bad)
ss
xchg
or
das
std
dec
inc
inc
push
ins
xchg
xchg
push
mov
dec
lds
fidiv
xor
mov
in
les
xchg
mov
imul
mov
sbb
(bad)
cmps
je
stc
and
cmp
sar
mov
ss
les
mov
xchg
jecxz
add
mov
mov
xor
adc
popa
cld
mov
mov
ins
mov
xchg
pop
repz
inc
jno
ret
xor
call
iret
enter
sbb
jp
(bad)
jbe
test
call
in
pop
and
xchg
mov
ficomp
add
out
out
and
push
push
sub
xchg
ins
mov
push
loop
push
adc
pop
cmp
(bad)
ins
jg
lds
and
or
push
repnz
add
push
in
cmps
push
gs
addr16
inc
pop
dec
and
ror
mov
pop
cdq
push
aas
jl
pop
nop
cli
push
pop
lock
add
xor
imul
jo
dec
ret
and
inc
inc
sar
icebp
mov
xchg
push
into
shl
mov
ss
hlt
clc
xchg
movs
xchg
jno
mov
dec
mov
cmc
in
cs
adc
mov
test
imul
fstp
inc
pushf
pop
pop
scas
out
aaa
sbb
xchg
(bad)
mov
jl
loope
mov
push
and
mov
aad
dec
pop
(bad)
cmps
cmps
cdq
sub
push
jmp
dec
scas
repz
add
jno
push
pusha
arpl
push
xor
add
inc
test
mul
pop
test
push
adc
jnp
pop
inc
xor
sbb
xor
cld
jnp
push
push
inc
push
push
iret
jge
push
lds
add
rcl
pop
outs
jmp
jmp
adc
imul
loopne
jne
jecxz
cmp
xor
xchg
mov
repnz
mov
mov
sar
adc
mov
aad
ins
je
ins
sbb
xor
cmp
cmp
frstor
dec
add
jp
retf
sbb
retf
add
ins
mov
push
out
jb
lds
mov
xor
outs
aaa
loop
pop
add
mov
mov
movs
neg
pushf
(bad)
(bad)
xchg
out
iret
stos
je
enter
adc
cmp
dec
xchg
jbe
mov
jle
pop
fstp
xchg
imul
iret
daa
loopne
push
es
push
loop
mov
imul
js
leave
xchg
popf
add
pop
into
sahf
jae
or
or
jmp
xchg
add
not
in
sbb
add
mov
mov
cmp
loop
imul
cli
or
shl
pop
js
mov
aad
pop
pop
out
jbe
mov
clc
lahf
loopne
push
sbb
add
ins
fild
sbb
mov
mov
cmp
fdivr
sub
xchg
xor
dec
test
das
push
je
jae
scas
xor
adc
in
fs
in
and
fmulp
imul
mov
xor
mul
fwait
mov
fdivr
ds
aas
call
mov
cmp
cmp
push
inc
aas
movs
cmc
icebp
cmc
retf
inc
lods
cwde
sub
or
popa
rcr
add
stc
addr16
xor
jns
das
lahf
cdq
outs
mov
fcomp
push
stc
and
xchg
fxtract
nop
leave
pushf
adc
retf
sub
ins
mov
cmp
jl
push
retf
adc
xor
cs
js
xor
fs
(bad)
je
(bad)
out
sbb
pop
jno
icebp
mov
(bad)
inc
imul
fistp
fst
int
pop
push
adc
add
adc
dec
xchg
movs
shl
inc
adc
sbb
(bad)
das
mov
mov
add
jno
xchg
jmp
add
cwde
repnz
test
or
(bad)
cld
xor
xchg
xchg
cmp
add
enter
(bad)
or
hlt
xor
outs
popf
jne
popaw
cli
jmp
adc
xlat
jge
cmp
cwde
out
jae
js
xor
retf
fstp
push
xlat
sbb
stc
adc
(bad)
lock
mov
adc
cmp
cmp
mov
mov
(bad)
xlat
pop
and
fs
pop
cmp
cdq
cmp
loope
shr
jb
and
test
push
int
dec
mov
dec
fidiv
(bad)
gs
inc
lods
add
jnp
push
mov
mov
in
out
adc
pop
cmp
mov
pop
nop
xor
cdq
xor
rol
in
jno
sub
std
and
ret
dec
jnp
and
outs
in
loop
aas
aam
pop
nop
xchg
adc
sar
pop
ja
add
outs
ss
inc
push
fcomp
int
cs
xchg
mov
dec
push
push
imul
adc
sbb
or
leave
pop
jp
and
jae
xor
pop
int3
adc
or
outs
jbe
sbb
mov
cs
cli
sub
jge
daa
xchg
adc
(bad)
fisubr
arpl
fsub
hlt
mov
jno
mov
inc
test
fcom
movs
add
inc
int3
jl
add
pop
pop
stos
fcomp
mov
mov
je
sti
mov
(bad)
in
ja
dec
cmps
xlat
add
inc
(bad)
mov
mov
repnz
fcom
dec
or
das
in
lea
mov
lock
add
lods
jle
pop
js
sub
arpl
add
cdq
and
xchg
ds
cmc
mov
out
sbb
neg
push
retf
jg
mov
or
pop
std
loopne
fdivr
hlt
adc
aas
xor
sub
inc
test
in
(bad)
out
sub
lods
mov
in
or
push
popf
stos
leave
lods
stos
cmp
movs
stc
in
mov
pop
icebp
dec
lods
sbb
not
in
adc
cmps
call
repz
shr
xor
(bad)
retf
imul
fcmovb
bound
mov
arpl
cs
inc
or
ds
int3
retf
push
loop
dec
mov
adc
fs
ds
add
movs
and
add
sub
fstp
mov
mov
push
mov
fcomp
mov
mov
or
outs
loope
pop
cmp
push
sub
stos
ds
ins
mov
sub
and
outs
sbb
inc
push
mov
push
jge
mov
mov
ins
psrlw
inc
loop
int3
(bad)
retf
stc
in
movs
mov
ret
inc
call
xlat
not
sub
mov
pop
jo
push
push
data16
add
out
xor
mov
push
mov
inc
lock
test
dec
fisttp
xlat
mov
dec
mov
jmp
push
aam
in
adc
movs
mov
(bad)
adc
jecxz
fisttp
add
pop
aam
fistp
pop
inc
fistp
icebp
cld
ins
popf
fstp
ja
lods
je
push
fstp
cmp
add
lods
hlt
scas
cmp
out
mov
and
in
sbb
mul
ins
xchg
xor
mov
lods
push
add
fs
sbb
pop
(bad)
aas
xchg
pop
or
sbb
dec
mov
test
fs
ins
and
and
dec
dec
sti
in
push
sbb
outs
leave
push
aad
(bad)
stos
hlt
jne
out
sahf
popf
sub
(bad)
iret
enter
test
repz
adc
data16
into
dec
in
jae
xchg
or
cmps
loopne
sahf
sbb
cmp
push
out
push
pop
stc
popf
mov
sub
or
cmp
outs
int
sub
inc
aas
pop
xor
fild
or
adc
cmc
add
inc
and
cmp
cmp
div
jnp
fs
sbb
(bad)
icebp
loopne
mov
pop
sbb
xchg
cmp
shr
pusha
mov
add
(bad)
shr
mov
add
jp
xlat
lea
(bad)
fcomp
add
mov
inc
ins
lods
call
inc
push
adc
inc
ja
shl
fcmovnbe
sub
retf
sub
or
mov
add
dec
loope
cli
cmp
mov
ret
pop
in
aam
jbe
pop
fstp
cmp
ins
arpl
hlt
jmp
pop
cmp
xchg
and
sbb
xchg
inc
dec
push
retf
jo
(bad)
push
cli
push
in
mov
cmp
ficomp
nop
push
aas
pop
rep
test
repnz
adc
dec
stos
sbb
fld
fcom
dec
inc
jbe
or
imul
xchg
nop
retf
je
mov
mov
add
inc
jnp
fsubp
call
xor
mov
push
inc
lahf
loop
pusha
leave
pop
lods
fiadd
mov
(bad)
enter
inc
test
bound
jle
sar
dec
sbb
sbb
aam
aaa
nop
push
rcl
xchg
dec
out
sbb
mov
adc
xchg
in
loop
out
mov
xor
sub
in
es
sbb
mov
sahf
sbb
aaa
inc
ja
xchg
popa
clc
rcl
adc
cli
adc
pusha
dec
pop
in
push
test
inc
or
pop
mov
je
retf
out
xor
imul
fs
jle
fwait
(bad)
sti
(bad)
(bad)
xchg
fstp
and
dec
sub
push
sbb
or
mov
movs
pusha
adc
pop
ffreep
(bad)
ins
add
sub
push
sbb
repnz
loopne
in
sbb
sub
fild
pusha
xchg
fs
out
mov
pop
jns
adc
cs
test
mov
cdq
sub
jmp
test
cmc
mov
scas
xor
ins
jmp
mov
aaa
xor
jb
sbb
fwait
popf
dec
push
lea
dec
xchg
pop
loop
imul
mov
fs
lahf
test
out
test
and
pop
sahf
stos
fwait
movs
mov
int
xchg
dec
das
xor
and
fild
add
inc
sahf
lahf
scas
sbb
xchg
or
cmp
xchg
or
add
setg
hlt
hlt
dec
in
mov
and
int3
ja
retf
dec
mov
in
mov
pop
push
daa
push
es
cmp
ins
cmc
jo
sub
cmps
fld
or
imul
adc
adc
xchg
je
add
in
push
xor
addr16
mov
xchg
outs
dec
mov
jae
xor
(bad)
ds
jle
sub
fnstsw
push
clc
push
pop
imul
sub
lds
in
(bad)
jl
loope
sbb
mov
inc
pop
mov
in
(bad)
fstp
jae
mov
pop
push
cmp
and
test
ja
pop
(bad)
pop
mov
pop
or
push
retf
dec
xlat
repnz
push
inc
pop
xor
and
dec
sub
int3
sub
or
mov
adc
push
add
xor
add
std
js
push
loopne
ret
xchg
test
push
in
add
inc
sar
xor
sbb
ja
das
push
adc
divps
push
fs
test
shl
add
push
mov
dec
cmp
mov
je
fs
sbb
xor
mov
cwde
mov
(bad)
pop
stos
(bad)
les
mov
jmp
inc
xchg
lock
pmuludq
cmp
mov
push
dec
push
test
and
jmp
sti
adc
stc
sar
std
pop
mov
es
lods
mov
and
push
mov
sti
inc
jo
and
or
in
push
sub
mov
cmp
cld
fnstcw
push
xchg
retf
add
repnz
push
js
sbb
xchg
xchg
out
and
fnstenv
les
aaa
jge
inc
inc
sub
paddw
xchg
shr
loopne
ds
xor
mov
fwait
out
mov
ja
cmp
scas
jno
dec
jecxz
inc
inc
xor
dec
test
sub
pop
das
mov
fcomp
xor
fxam
icebp
push
or
inc
mov
pop
xor
inc
movs
dec
(bad)
sub
pop
jp
mov
loopne
dec
xor
jge
out
mov
or
(bad)
add
lahf
clc
push
jo
dec
outs
mov
adc
sub
jne
retf
das
mov
jno
ins
mov
mov
add
imul
repnz
outs
xchg
out
dec
mov
xchg
out
inc
mov
fnstcw
cmp
rcr
xchg
pop
aas
or
mov
push
add
xor
lods
pop
sahf
fsub
(bad)
and
or
sbb
cmps
mov
push
sbb
jno
fnstenv
not
jg
jb
rol
loopne
iret
ja
sub
mov
not
push
inc
ds
inc
sbb
aam
push
icebp
push
call
loope
push
mov
mov
push
lahf
mov
dec
call
(bad)
jge
jbe
push
retf
cmps
ss
and
pusha
mov
jp
fdiv
sbb
imul
ds
hlt
(bad)
cli
js
mov
popf
inc
pop
cs
test
cdq
cmp
pop
mov
ret
push
stc
or
jb
lods
mov
inc
call
repnz
push
mov
dec
mov
adc
mov
cmp
dec
xor
(bad)
xchg
inc
fst
fbstp
jl
dec
adc
jge
in
test
leave
loop
ins
xchg
in
push
or
mov
xchg
push
mov
jge
mov
neg
iret
nop
(bad)
mov
test
ror
xor
or
and
dec
cmp
pop
fnstenv
cld
adc
sub
iret
fstp
and
xor
es
adc
scas
mov
inc
ds
mov
rcl
push
sub
dec
repnz
in
push
popa
dec
pushf
jae
mov
push
sub
adc
cmp
scas
and
mov
jmp
dec
in
ins
mov
mov
xor
ins
mov
stos
add
sub
movs
ins
outs
add
in
sahf
xchg
xor
jmp
push
add
into
in
mov
sub
sbb
pushf
cmp
sbb
retf
es
fistp
lock
into
and
dec
cpuid
in
ds
cmp
movs
xor
dec
shl
and
mov
pop
push
mov
popf
jmp
not
daa
bound
jp
jns
nop
in
xchg
mov
xor
clc
mov
mov
popa
fcom
push
fstp
and
movs
inc
or
add
jg
fcomp
jae
or
xor
movs
cwde
pop
lock
cld
sbb
jbe
mov
rol
les
push
and
ret
lahf
ss
xchg
(bad)
pusha
push
cwde
mov
stc
int
out
inc
test
inc
das
sub
dec
push
bound
lods
jg
retf
and
jnp
mov
mov
repnz
xchg
cmp
or
pop
fcomp
mov
mov
aad
fidivr
jge
ret
pop
and
into
mov
stos
xor
push
stos
adc
or
inc
pop
test
scas
mov
movs
or
in
lock
(bad)
fisttp
cmps
xchg
jle
inc
xchg
sbb
pop
push
das
dec
sahf
test
adc
mov
adc
pop
mov
mov
sbb
mov
in
mov
pop
stos
lahf
outs
or
(bad)
sub
es
xor
or
nop
sub
sbb
aas
arpl
(bad)
adc
les
popf
ins
int
mov
jo
pop
xchg
mov
stos
leave
sahf
scas
jle
cld
add
mov
retf
das
mov
lods
arpl
scas
mov
loopne
rol
test
xor
mov
gs
idiv
aas
cmc
movs
jl
adc
or
data16
push
scas
lods
or
pushf
cmp
lahf
push
push
or
ror
fild
push
fucomi
mov
dec
or
leave
mov
xchg
into
leave
jbe
rol
jmp
and
(bad)
repnz
add
icebp
imul
push
movs
xchg
or
xor
jp
jle
and
loop
stos
jno
ror
daa
sbb
daa
or
dec
inc
xchg
iret
xor
cmp
and
jecxz
ret
scas
das
fs
add
shl
aas
xlat
xor
hlt
(bad)
cmp
in
test
sub
adc
xor
mov
cmps
sbb
and
ins
mov
cwde
sub
sti
loop
and
push
and
push
daa
in
cli
cwde
dec
test
cwde
loop
rol
and
jmp
std
dec
stos
je
lods
push
ins
iret
int3
clc
(bad)
in
mov
aas
cmp
mov
xchg
pop
ret
xchg
fisub
out
(bad)
or
push
cdq
fstp
xchg
cwde
cmp
mov
jmp
call
ret
jp
sub
mov
or
xor
iret
std
adc
sahf
mov
sbb
push
aas
jp
fisttp
dec
sub
xchg
aad
cwde
sbb
inc
jbe
inc
sbb
cmps
aad
jmp
aam
(bad)
jmp
repnz
lds
movs
lods
scas
sbb
mov
aad
xchg
sbb
mov
fsub
enter
pop
mov
call
dec
xchg
call
cmp
popf
ins
aam
mov
movs
lods
test
dec
arpl
(bad)
dec
mov
int
jmp
hlt
loopne
stc
add
fwait
adc
adc
(bad)
dec
pop
sub
add
nop
pusha
frndint
pop
dec
xchg
pop
jno
stc
in
bound
inc
xor
outs
aas
xchg
cld
pop
mov
push
pushf
movlhps
fidivr
xchg
pusha
add
sub
cwde
ins
sbb
xchg
pop
cmp
sti
pop
xchg
je
mov
mov
push
fisub
jle
mov
push
xchg
ds
push
add
jle
push
cli
and
cmp
popa
adc
fld
mov
mov
mov
cwde
xor
jae
scas
fs
(bad)
pop
call
out
(bad)
cmp
mov
inc
or
les
xor
dec
cmp
mov
sbb
adc
dec
(bad)
iret
rcr
add
jne
xchg
ficom
adc
dec
inc
sti
cmp
push
dec
cmp
mov
push
adc
push
xchg
shr
adc
and
faddp
pop
add
(bad)
mov
xchg
sub
sar
in
mov
jecxz
push
xchg
mov
imul
push
loopne
cmps
add
push
push
clc
div
or
in
in
(bad)
ds
add
test
arpl
add
lds
push
das
retf
dec
in
inc
dec
out
jp
push
test
inc
fucomi
cwde
mov
adc
stc
push
cmp
sub
nop
xchg
xchg
xchg
mov
jae
sub
outs
push
mov
mov
sbb
xchg
ins
inc
adc
or
xchg
jns
stc
bound
(bad)
adc
out
xchg
lahf
rcr
stos
pop
into
test
outs
sbb
lock
dec
(bad)
jl
cmp
loop
pushf
and
data16
mov
into
les
je
fnstsw
and
pop
add
mov
movs
dec
push
xor
(bad)
or
in
outs
add
adc
movs
pop
das
mov
inc
push
dec
add
jns
and
arpl
popa
add
adc
dec
cmp
and
addr16
shr
in
jo
test
ret
mov
push
shl
jmp
addr16
dec
pop
cli
ss
cs
push
cs
xchg
jb
idiv
mov
pop
mov
daa
arpl
jb
dec
sbb
popf
test
frstor
int
cmp
es
xor
jnp
pop
cmp
cmp
adc
or
or
pop
ja
out
xchg
push
sub
mov
out
mov
cmps
pushf
iret
xor
clc
or
je
(bad)
jb
adc
leave
(bad)
in
mov
cmc
lods
div
xchg
push
and
sti
test
adc
jbe
pop
mov
movs
or
jg
cmp
lods
xchg
fsubr
dec
pop
cmc
xchg
imul
mov
shl
sbb
inc
push
lea
pop
les
neg
in
mov
pop
aam
loope
pop
inc
into
add
sub
jge
xor
fisub
scas
fucomip
and
nop
and
cli
add
pop
cmps
stos
dec
mov
cmp
les
aad
inc
or
xchg
fisttp
daa
jnp
add
fistp
mov
test
loopne
jle
or
inc
jb
les
fs
sar
pop
ins
movs
lods
ins
sbb
pop
aam
jne
sahf
jae
or
lock
in
adc
mov
stos
add
es
fcomp
iret
lahf
or
adc
test
stos
add
pop
pcmpgtw
mov
add
mov
fsub
cld
dec
mov
xor
gs
call
dec
add
pop
push
inc
mov
pop
push
jmp
movs
daa
hlt
loop
pop
pop
pop
(bad)
retf
lds
rcr
sub
mov
test
fadd
inc
aad
adc
xchg
pusha
cmp
scas
adc
xlat
sbb
sbb
add
rcl
ins
sub
into
ficomp
inc
in
mov
iret
cs
retf
mov
inc
or
push
out
aaa
jne
scas
cli
mov
xor
inc
sub
popf
rol
ficomp
cmp
mov
aam
mov
xor
cli
cmps
popa
jb
xchg
jp
outs
jmp
scas
sub
outs
pop
adc
dec
nop
xor
in
mov
fst
jge
ins
xchg
(bad)
leave
or
dec
pusha
pop
xor
and
inc
fstp
dec
js
(bad)
shr
repz
or
fyl2x
div
ss
fist
movs
fst
(bad)
cli
lahf
and
mov
add
test
ins
jmp
call
pop
xchg
mov
rcl
call
gs
bound
pop
fnsave
cmp
call
inc
int3
add
imul
or
shl
ror
mov
pop
adc
or
xlat
inc
xor
in
mov
mov
imul
pop
sub
movs
jecxz
loop
loopne
dec
add
pop
outs
add
rcl
outs
fs
mov
pop
pop
daa
inc
(bad)
out
xor
adc
push
sti
fcomi
(bad)
pop
mov
ret
mov
js
or
inc
aad
xchg
cmp
mov
push
fist
inc
sub
cmp
fwait
dec
je
frstor
sub
mov
sub
adc
ja
xor
dec
cmp
mov
fild
popf
fdiv
mov
arpl
in
shr
cmc
lods
sahf
mov
jo
dec
cmp
mov
mov
int
repnz
hlt
js
pop
sbb
add
lea
sub
in
dec
movs
mov
xchg
jmp
xchg
dec
mov
xchg
push
dec
fdiv
pop
or
(bad)
leave
ins
cwde
push
sub
and
inc
jle
push
inc
mov
add
push
dec
out
push
movs
xchg
pop
pop
and
fist
imul
pop
fdivr
push
xor
mov
sub
xor
mov
xor
push
xor
aas
aaa
les
jge
xchg
push
shr
add
push
adc
mov
mov
pop
shr
mov
test
dec
dec
inc
popf
scas
adc
rcr
pop
out
pusha
sahf
nop
pop
movs
hlt
pop
ficom
jle
pop
hlt
push
call
mov
stos
into
mov
ret
mov
push
repnz
pop
je
(bad)
call
aam
idiv
retf
cmps
xor
xchg
stos
data16
xor
sub
ret
xchg
pushf
mov
xchg
cmp
or
push
int3
mov
pop
add
test
mov
add
mov
mov
add
or
sub
cmps
mov
pushf
mov
pusha
fadd
and
inc
sbb
mov
and
push
(bad)
outs
xchg
leave
jae
test
pop
fstp
cmp
mov
fs
fidivr
jecxz
dec
mov
ret
outs
mov
or
sahf
xchg
mov
and
in
pop
test
and
pop
nop
xchg
out
cmp
dec
out
push
adc
cmc
(bad)
aam
repz
mov
not
jns
shl
sbb
push
inc
out
ficom
fadd
loop
retf
in
mov
inc
scas
inc
mov
mov
push
mov
in
gs
pop
push
ret
mov
mov
mov
push
cmp
sub
lahf
lock
arpl
adc
jb
in
pusha
shl
imul
xchg
fistp
or
bound
imul
out
add
iret
adc
mov
xchg
inc
leave
add
mov
or
cmp
push
jne
and
cmp
fstp
shr
mov
call
repz
mov
sub
adc
xchg
inc
cmc
js
adc
push
xchg
cmp
mov
outs
fbstp
loop
fsubr
or
pop
sub
sub
push
les
xor
pop
loopne
mov
test
mov
push
(bad)
ins
cli
fdivr
mov
jecxz
ret
cmc
xor
fld
in
inc
pop
inc
xchg
shl
dec
xor
add
imul
add
xor
jbe
push
adc
sbb
imul
xor
sub
fs
fwait
leave
pop
pusha
nop
sbb
jge
xchg
dec
fdiv
mov
pop
push
mov
nop
aad
outs
adc
add
aad
add
xor
and
push
cmp
adc
adc
mov
dec
push
or
and
call
pop
xchg
xor
test
jl
xchg
cmps
dec
mov
pop
jmp
jge
xchg
ror
mov
scas
inc
sub
xor
sub
pop
mov
mov
cld
mov
push
das
pop
adc
je
verr
ret
shl
inc
mov
adc
cmp
aaa
xchg
loopne
repnz
fninit
or
jp
and
fld
add
mov
cmps
enter
cmp
sub
mov
neg
shr
pop
jmp
outs
mov
inc
arpl
mov
outs
shr
sub
or
in
out
sbb
dec
inc
rcr
add
pop
retf
add
mov
scas
fwait
imul
fisub
shr
sub
jns
sbb
push
dec
add
push
shl
push
push
dec
jmp
cmp
scas
mov
cmc
je
popf
xor
pop
mov
mov
std
mov
or
add
imul
das
cdq
les
push
sub
lahf
mov
add
daa
(bad)
fmul
outs
and
sbb
outs
xor
xor
arpl
push
inc
push
stos
stc
bound
mov
mov
jne
lahf
dec
xlat
adc
and
adc
pop
dec
popf
in
push
ror
sahf
sub
mov
cmp
dec
popf
mov
lock
pusha
sub
xor
mov
jmp
dec
sub
sub
in
(bad)
mov
mov
aam
mov
daa
out
int
pop
pop
push
sti
into
lods
sbb
fisttp
mov
cs
adc
cmps
pop
add
cmc
mov
clc
enter
pop
adc
dec
add
mov
(bad)
(bad)
cli
xor
out
mov
shr
cmps
stc
popa
or
fdivr
ins
mov
ds
clc
popa
adc
in
cmp
shl
add
ret
inc
je
jne
sub
not
out
out
fidiv
ret
or
mov
test
xor
out
and
call
mov
or
push
dec
es
aaa
fucomi
sbb
out
sub
lods
leave
or
xchg
in
sub
fnstcw
enter
fbstp
sub
xchg
pop
cmp
or
fild
adc
fxch
add
jbe
shr
or
inc
jmp
into
iret
ret
inc
add
fs
(bad)
rol
dec
imul
add
data16
mov
xchg
add
adc
jbe
(bad)
(bad)
leave
nop
call
ret
enter
pop
in
jl
cmp
lock
xchg
lods
push
js
ss
adc
iret
push
xlat
sbb
rcr
mov
inc
lock
pop
dec
shr
add
sub
jmp
xor
push
adc
or
cld
jecxz
mov
in
lea
out
aaa
add
adc
lahf
xchg
xor
mov
cld
and
out
movs
imul
jbe
dec
jle
push
pavgb
mov
test
rol
jl
sbb
mov
cmps
jg
add
cdq
neg
xchg
mov
test
and
mov
out
xchg
retf
mov
pusha
jb
mov
out
lea
repz
jg
iret
dec
add
aam
bound
stc
mov
gs
push
lahf
and
aaa
adc
mov
adc
mov
adc
push
push
jb
adc
pop
pop
ins
fiadd
test
or
and
dec
je
repnz
(bad)
scas
imul
mov
outs
jg
cmp
pop
xchg
push
xor
(bad)
jnp
push
dec
inc
sar
hlt
int
mov
xor
in
dec
hlt
pop
mov
(bad)
call
bound
or
dec
js
aaa
adc
mov
(bad)
mov
inc
xlat
fist
pop
cli
fstp
mov
mov
mov
push
(bad)
(bad)
push
add
lds
retf
dec
rcr
dec
sbb
push
imul
cmp
aaa
cmp
test
jb
sar
mov
xchg
int3
inc
in
outs
scas
inc
adc
cmp
adc
(bad)
xor
sub
inc
das
ficomp
sti
add
jno
mov
mov
jge
cli
js
add
xor
leave
cmp
pop
das
fistp
cdq
or
je
inc
cmc
adc
cmp
lea
and
jmp
pop
arpl
js
and
mov
lds
es
lods
ss
cmps
or
aad
arpl
push
jle
repnz
dec
(bad)
pop
jns
enter
das
dec
pop
or
jnp
std
dec
les
fwait
mov
(bad)
mov
lds
adc
in
iret
cmp
xchg
repnz
bound
popf
xor
icebp
xchg
out
lea
in
out
mov
cmp
cld
inc
mov
mov
dec
xlat
lea
inc
push
inc
lods
and
adc
xchg
aas
shl
mov
jmp
aaa
imul
mov
and
jg
jmp
repnz
or
imul
loopne
bnd
stc
adc
movs
and
mov
mov
mov
jp
scas
lds
shl
and
add
aad
jg
cmp
push
(bad)
push
mov
bound
nop
call
jecxz
movs
popf
push
fwait
jg
add
lods
push
(bad)
xchg
cld
adc
and
movs
and
xor
push
jns
data16
adc
xchg
leave
inc
mov
pop
mov
dec
xlat
fild
xchg
call
repnz
sar
xchg
in
mov
test
mov
pop
mov
bnd
loopne
int
repz
add
(bad)
xchg
dec
lds
sub
jmp
bound
ret
aam
fst
test
push
cmp
inc
shl
movs
cmps
mov
push
mov
mov
jp
clc
push
fnstcw
pushf
test
xchg
push
clc
je
test
pop
inc
adc
hlt
mov
mov
int
cmp
inc
xor
pop
xchg
mov
inc
ins
mov
aam
dec
jns
lahf
cs
outs
dec
out
stos
sbb
inc
pop
fmul
fistp
out
adc
jne
into
repnz
fst
cmp
push
inc
add
int
sub
mov
jge
push
or
dec
rcr
xchg
ja
add
inc
jg
mov
jp
ins
jle
shr
or
popf
pop
test
dec
ss
xor
cmp
ret
xchg
mov
das
retf
outs
or
lds
dec
ja
cmps
imul
fiadd
(bad)
adc
(bad)
push
jmp
fidiv
and
sub
arpl
in
mov
xchg
movs
ins
(bad)
adc
cld
call
pop
movs
pop
aad
pusha
arpl
repz
(bad)
mov
pop
jecxz
inc
push
sub
add
xlat
enter
add
xlat
xchg
push
loopne
pop
inc
push
sti
xchg
scas
aad
push
test
(bad)
js
cdq
sub
stc
call
mov
test
(bad)
jmp
lock
or
scas
mov
pop
jnp
shl
inc
xchg
mov
scas
jmp
push
fbstp
mov
mov
push
sar
cmp
xor
inc
imul
pop
xor
lock
sti
jmp
call
xor
xchg
out
and
ja
and
mov
enter
sub
mov
push
mov
lock
cmps
and
mov
sub
xchg
add
popf
shr
cld
loop
das
ds
add
inc
pop
fistp
mov
add
retf
xchg
push
push
loope
jg
sbb
xchg
aad
shl
fcmovnu
shl
retf
adc
push
add
sbb
les
sbb
hlt
mov
jo
add
xor
cld
xchg
jbe
and
add
into
cmps
sbb
xchg
in
mov
and
jnp
outs
sbb
aad
test
leave
lods
sar
xchg
xchg
xchg
mov
and
ficomp
xchg
push
in
and
or
mov
les
jns
cmc
out
mov
fisttp
push
call
add
std
cmp
inc
cmp
cmp
dec
pop
xor
pusha
xchg
aas
cwde
pusha
add
mov
adc
xor
pop
outs
ror
test
mov
stos
pop
dec
xchg
loope
dec
and
jmp
(bad)
fstp
(bad)
jnp
popa
movs
dec
repz
jmp
enter
aaa
(bad)
sbb
dec
mov
cld
rol
sbb
and
inc
xchg
mov
scas
shl
nop
or
mov
adc
lock
cwde
sbb
fisubr
jae
clc
inc
jns
or
xor
xor
push
jecxz
ja
adc
xor
xor
imul
mov
neg
xchg
dec
fs
mov
mov
cdq
push
jmp
in
or
pop
mov
sti
lods
arpl
add
xor
and
pop
xchg
test
mov
pop
fimul
sti
fadd
addr16
pushf
jns
ret
mov
and
rcl
jae
push
jb
cmps
hlt
or
ficom
jl
mov
clc
pop
sub
cld
mov
cwde
nop
imul
push
nop
push
arpl
movaps
cli
imul
out
cdq
push
dec
pop
or
outs
xchg
js
cwde
dec
xor
xor
pusha
mov
inc
test
jae
push
jno
ret
(bad)
(bad)
add
inc
mov
cmp
cmps
push
xchg
or
shl
or
xchg
jg
jb
test
repz
or
pop
(bad)
lock
or
cmp
fld
jmp
adc
pushf
pusha
in
daa
jmp
and
or
mov
push
jle
stos
adc
pusha
scas
mov
jg
popf
mov
(bad)
ins
addr16
retf
xor
and
out
or
sub
dec
ret
mov
ins
add
mov
dec
push
ins
fnstsw
push
push
cmp
movs
sbb
les
das
call
mov
mov
xchg
adc
push
cmp
pop
sub
inc
jne
sub
mov
sub
add
jns
mov
mov
shr
mov
cmp
xchg
cdq
aad
les
sub
sub
push
sbb
sbb
jne
pop
mov
push
xchg
arpl
sub
xchg
push
(bad)
cmp
lock
pop
clc
pop
or
pop
imul
sbb
mov
aas
loop
push
xchg
inc
jl
movs
mov
dec
stos
mov
dec
or
dec
inc
test
cwde
cmps
test
sbb
es
xor
(bad)
icebp
clc
sahf
mov
jne
pusha
mov
mov
sub
mov
sar
push
adc
movs
out
(bad)
jns
jnp
data16
mov
dec
repnz
jbe
dec
mov
push
sti
mov
mov
call
jl
out
sub
jno
xor
loop
pop
mov
imul
sahf
(bad)
adc
jmp
mov
adc
int3
jmp
(bad)
mov
jle
sbb
loope
call
loop
jbe
sub
xchg
adc
xchg
dec
mov
lahf
pop
cmps
mov
pop
and
imul
ja
sbb
jp
add
jne
sub
fisttp
es
fmul
and
aaa
mov
imul
and
icebp
ins
movs
adc
push
jo
int
and
pop
mov
mov
push
xchg
sub
push
inc
dec
mov
sub
jae
and
sbb
rol
sub
gs
or
loopne
arpl
xchg
xor
mov
xchg
retf
mov
popa
fstp
test
mov
jmp
test
pop
xor
imul
sbb
cwde
(bad)
or
adc
lea
mov
or
pop
lods
pop
sbb
add
cmps
sahf
mov
adc
mov
and
cmps
ret
xor
sub
jae
mov
fidiv
pop
sub
lahf
cwde
(bad)
jae
cmps
mov
lea
add
cmp
int
mov
hlt
clc
fimul
(bad)
std
loope
add
cmp
fisttp
adc
or
xchg
hlt
cmps
mov
scas
stc
arpl
cmps
lods
jg
rol
add
imul
ficomp
and
pop
xor
dec
sub
mov
test
add
adc
imul
xchg
ins
lods
je
adc
pop
test
repnz
ret
sbb
add
pushf
sbb
es
jns
rcr
inc
dec
in
cli
ror
add
fs
rcl
mov
leave
mov
sahf
test
mov
mov
das
jmp
shl
and
push
mov
das
iret
or
pop
sar
in
retf
ins
inc
mov
cmc
scas
(bad)
pop
inc
pop
dec
adc
(bad)
jecxz
or
sub
ret
add
std
movs
dec
fs
xor
xor
adc
cmp
fisub
jo
ins
js
jg
push
jnp
xor
cmps
out
or
scas
mov
pop
adc
push
aad
inc
dec
setle
cmp
in
mov
push
and
add
mov
mov
gs
adc
retf
push
xchg
hlt
pop
clc
clc
shr
inc
jmp
mov
jecxz
cmp
dec
mov
push
adc
(bad)
inc
sti
shr
out
xor
aam
or
adc
fstp
ret
popa
enter
cmps
int3
xchg
mov
cmps
ror
daa
adc
je
aad
add
push
or
in
mov
and
mov
es
mov
sub
nop
ja
imul
call
inc
adc
sub
add
rol
dec
test
cmps
cmp
int3
cmp
fwait
(bad)
jmp
pusha
inc
push
(bad)
adc
icebp
loopne
add
mov
repz
into
int
rcr
test
xchg
iret
xor
push
mov
movs
xchg
addr16
jae
call
jg
(bad)
(bad)
sub
sbb
adc
sbb
cli
ja
retf
mov
loopne
push
add
inc
cmp
cmp
xchg
jge
jmp
sub
fstp
(bad)
xor
add
pop
pop
sbb
outs
or
push
dec
enter
and
ins
lods
cwde
add
xchg
lods
repz
xor
sub
outs
xchg
or
push
push
fisubr
sub
std
add
test
mov
xor
mov
cdq
jmp
sbb
or
sub
fwait
push
or
call
and
jbe
push
mov
sbb
(bad)
mov
sbb
fs
pop
or
(bad)
arpl
push
or
sbb
or
cdq
mov
xor
cli
into
(bad)
xchg
rcr
dec
xchg
push
jecxz
xchg
and
xor
cmps
mov
xchg
mov
cmps
mov
adc
inc
jp
cs
sahf
xor
gs
popf
dec
xlat
into
cmp
xor
sti
cmp
mov
(bad)
mov
jge
outs
mov
mov
adc
sub
inc
sar
mov
test
into
inc
jne
mov
lods
lods
jns
lods
dec
xchg
pop
inc
xor
mov
push
xor
fnstcw
adc
outs
inc
int
idiv
inc
jp
mov
pop
call
xor
fsub
fs
and
cmp
outs
jl
int
(bad)
adc
rcl
add
pop
push
jns
movs
(bad)
hlt
ja
xor
bound
repz
sub
popa
fisubr
mov
ret
push
add
je
cld
push
in
jo
pop
jl
or
je
shl
adc
fisttp
cli
jne
cmps
je
sbb
daa
mov
mov
and
cdq
inc
mov
shl
sub
add
dec
sbb
cwde
pop
inc
and
sub
xchg
jge
out
dec
or
mov
adc
hlt
xor
xchg
mov
aas
push
js
fisub
push
dec
dec
sti
xor
nop
jmp
retf
mov
jo
in
(bad)
jecxz
mov
jno
xchg
dec
arpl
imul
sbb
cmp
sub
bound
int
xchg
cmps
jnp
nop
cld
movs
pop
jns
push
mov
jae
mov
retf
jmp
sbb
js
or
(bad)
mov
lahf
call
or
clc
inc
addr16
push
push
jecxz
add
outs
das
test
popa
mov
test
daa
in
lea
mov
test
ins
jno
std
imul
sar
dec
pop
push
jbe
ficomp
mov
(bad)
loopne
rcl
sub
test
mov
cmc
adc
or
add
sub
nop
aad
and
lods
(bad)
mov
pop
fadd
cli
adc
jnp
sbb
dec
push
stos
mov
cmp
push
aad
ficomp
and
inc
aad
leave
sbb
and
stos
push
fdivr
cmp
cmc
sbb
and
lahf
mov
mov
mov
add
fisubr
pop
call
mov
push
(bad)
xchg
pop
mov
sub
push
icebp
mov
test
mov
adc
cmp
leave
or
stos
cmp
jl
cmc
or
and
sub
shr
out
pop
mov
or
fs
shl
int
add
scas
xchg
mov
mov
lahf
js
mov
shl
xor
stc
jecxz
push
std
mov
shr
nop
mov
aam
jp
rcl
adc
jnp
cmp
add
cmp
mov
xor
xchg
(bad)
lods
push
push
dec
push
sbb
ins
out
and
and
movs
pop
sbb
add
icebp
push
call
push
lods
push
sbb
jo
push
ret
shl
sbb
mov
add
popf
mov
aad
adc
jle
jbe
jg
test
ss
jno
sub
das
inc
jns
lods
sbb
sbb
mov
mov
int
cmp
in
les
mov
imul
lea
in
cmps
(bad)
lock
sbb
sub
pop
in
outs
xchg
(bad)
xor
pop
add
or
and
fcom
dec
mov
jge
pusha
dec
jmp
inc
pop
fcmovb
rcl
lahf
mov
aas
stc
or
fdivrp
and
dec
sbb
mov
not
or
sbb
xchg
mov
loopne
call
mov
pop
fs
rcr
push
leave
int
(bad)
inc
cs
jmp
sbb
fs
cmp
not
mov
gs
sbb
add
cmps
mov
sub
mov
and
(bad)
(bad)
jb
hlt
jmp
ins
in
shl
push
push
mov
add
popa
or
cmp
and
iret
cmp
push
and
xor
repz
mov
jle
pusha
mov
in
jmp
adc
xchg
das
cld
ror
out
mov
sub
sti
inc
jl
fcmovne
cdq
ja
mov
mov
cmp
retf
cmps
jne
test
sbb
test
sbb
jmp
lods
jnp
push
retf
lock
jecxz
adc
shr
jbe
fs
jo
pusha
cs
jmp
aaa
adc
or
rol
hlt
mov
xchg
ja
arpl
es
pushf
aas
aad
ins
bound
adc
sar
and
aaa
cwde
and
cmp
(bad)
aad
push
imul
bound
mov
js
push
dec
inc
xchg
jae
(bad)
adc
xor
mov
ret
push
pop
xchg
out
call
iret
lods
pop
fist
jo
cmp
stos
jo
int
push
fnstenv
pusha
push
push
test
cmp
sbb
retf
sub
xor
dec
idiv
mov
jge
ror
xor
mov
daa
fnstenv
add
test
push
pop
inc
ins
inc
sub
out
(bad)
sub
test
js
(bad)
lea
stos
dec
inc
mov
push
retf
cmp
adc
aam
daa
pop
jae
int
sub
or
retf
dec
adc
cmps
jle
adc
cld
cmp
nop
sub
adc
sub
pop
cmp
xchg
ss
sti
inc
mov
arpl
call
and
aad
xchg
or
dec
arpl
adc
aaa
mov
cmps
dec
rol
lds
push
lds
sub
dec
sbb
std
jmp
mov
push
rcl
dec
sahf
adc
push
loope
mov
scas
sar
xor
sub
mov
mov
nop
and
ror
loop
repnz
jnp
lods
jmp
stos
dec
sbb
sbb
cmp
neg
jno
jl
mov
cmp
test
dec
aad
adc
jmp
mov
sti
cmps
mov
shr
sub
das
sar
mov
rol
xor
cdq
cdq
cmp
jle
outs
jge
xchg
inc
push
adc
loope
jo
inc
ins
mov
jns
xor
sub
imul
jg
push
ins
mov
inc
outs
cmp
(bad)
mov
iret
rcl
test
adc
and
xchg
xchg
sub
xchg
pop
sub
imul
dec
and
pop
inc
xchg
and
ins
xchg
jle
cmp
popa
adc
mov
cmp
cmp
std
mov
enter
xor
and
outs
stos
jnp
jb
xor
popa
xor
inc
in
repz
out
ret
cld
retf
dec
stos
add
mov
push
sbb
mov
mov
cwde
mov
mov
push
pop
fs
repnz
dec
fst
imul
bound
stos
sbb
push
out
mov
jmp
ins
cwde
(bad)
fnsetpm(287
jge
sub
shl
xor
rcr
lds
out
aam
cmps
sub
int
dec
dec
ins
inc
mov
ins
cmp
stos
and
test
or
(bad)
dec
(bad)
jnp
test
imul
and
sbb
aas
pop
adc
in
es
mov
push
mov
pop
repz
jge
inc
int3
cmps
push
push
adc
arpl
das
inc
or
jmp
xchg
or
lods
out
ins
jmp
aas
ret
ja
pop
imul
push
mov
push
sbb
dec
pop
or
push
test
add
fisubr
pop
cwde
loop
stos
sub
pop
xchg
jae
jl
cmp
pop
aaa
(bad)
xor
mov
xlat
mov
vorps
mov
sub
call
pop
add
sbb
mov
or
sub
mov
cmp
imul
xchg
mov
mov
ja
sbb
(bad)
movs
inc
das
ins
push
push
cmp
ret
jecxz
test
mov
scas
nop
mov
add
jecxz
call
push
and
out
jecxz
(bad)
cs
scas
pusha
outs
mov
in
pop
inc
popa
retf
daa
mov
fidiv
rcr
sub
and
fld
mov
movs
mov
ja
fs
add
sub
pusha
ret
retf
retf
mov
mov
jns
sbb
mov
sbb
dec
jge
nop
lahf
push
ins
test
lods
cmps
cdq
inc
clc
cmp
scas
(bad)
loopne
sub
pop
ret
fild
in
leave
dec
or
iret
addr16
bnd
ja
cmc
lahf
pop
pop
or
sahf
leave
sbb
pop
ficom
mov
int
arpl
movs
xor
fstp
fadd
int3
or
mov
adc
loop
iret
pop
cld
and
xchg
ror
push
xchg
pop
shl
and
jb
push
push
xchg
out
fcmovu
out
neg
dec
xor
shl
iret
leave
jle
adc
xor
mov
jmp
push
fmul
fild
mov
out
or
jecxz
jl
mov
ret
std
pop
movs
sar
cmp
pop
cmps
test
push
pop
push
popf
out
xor
stos
inc
ss
js
pusha
sbb
test
pop
sbb
sti
mov
es
jmp
or
mov
mov
xchg
mov
add
sub
mov
push
cli
cli
movs
cwde
dec
dec
mov
jg
and
ja
mov
mov
xchg
mov
inc
push
and
je
cs
pop
imul
mov
es
fld1
shl
mov
lods
in
push
sub
cmc
mov
sahf
jo
loope
stos
das
sbb
fist
add
add
xor
xchg
pop
js
dec
adc
xor
out
xlat
gs
adc
cmp
xchg
or
push
cmps
clc
pushf
push
out
sti
sbb
dec
pop
lock
sub
lods
retf
jl
out
icebp
aas
icebp
cmp
push
lds
or
pop
lea
addr16
fbld
pop
adc
and
jl
out
daa
dec
(bad)
shr
inc
mov
or
shl
js
hlt
xchg
cs
sub
push
es
adc
call
leave
stos
xor
les
lods
or
mov
jle
pop
sub
dec
pop
or
xor
stos
xchg
aam
pusha
push
push
ins
popf
cmc
ret
retf
mov
cmps
push
and
jle
imul
dec
popf
clc
mov
out
cmc
dec
mov
mov
out
outs
jo
out
sub
xor
add
adc
(bad)
jmp
movs
and
sbb
clc
repnz
fsubr
and
dec
dec
shl
xchg
xor
inc
dec
dec
push
aad
mov
sub
adc
xor
mov
stos
sti
retf
add
sar
dec
jle
dec
xor
mov
call
add
mov
jno
test
daa
dec
cmp
jmp
fwait
int
jecxz
js
shl
ss
popf
cmps
mov
xor
push
fist
lods
inc
fcmovnbe
lods
retf
in
push
dec
and
or
outs
mov
out
bound
(bad)
mov
outs
pop
mov
adc
xchg
shl
and
call
inc
push
push
sbb
test
jnp
fild
jo
lahf
push
sbb
call
shr
daa
and
movs
fdiv
clc
shl
cld
icebp
push
mov
push
jmp
mov
add
cmp
aam
sbb
inc
sub
aas
jmp
pusha
ret
loop
cmp
pusha
mul
test
cmp
mov
xchg
push
enter
jmp
pop
test
sub
push
and
sub
js
pop
mov
je
shl
xor
call
scas
js
jg
stos
inc
push
call
xchg
out
movs
mov
in
jg
repnz
test
jge
fwait
inc
xlat
xlat
adc
jg
call
ds
(bad)
sub
xchg
clc
fucomp
fwait
clc
and
dec
bswap
mov
lods
test
jecxz
mov
and
or
movs
fisubr
imul
fcmovnb
add
or
stc
imul
loope
popf
ficomp
into
cs
adc
ins
inc
gs
mov
push
add
cmps
pop
push
inc
mov
lea
dec
mov
and
cwde
loop
lds
lahf
dec
jns
sbb
fild
push
and
or
mov
dec
push
cdq
repz
mov
jno
cmp
xchg
int
sub
leave
into
outs
ficom
ss
jno
rcl
xchg
add
(bad)
mov
push
call
shl
inc
mov
sub
cmp
pop
ds
mov
jle
xor
mov
jp
cs
xchg
cmp
inc
xor
jle
adc
sbb
push
in
jg
icebp
xchg
sub
not
in
lds
in
add
jne
add
fsub
cdq
push
sub
add
test
jg
jno
int3
add
dec
shl
in
mov
repz
adc
xlat
out
int3
idiv
rcr
push
leave
fucomp
ins
movs
lds
repnz
mov
cwde
add
hlt
or
push
rol
and
adc
or
jbe
ret
aas
inc
mov
inc
mov
pusha
xor
jge
mov
push
fcmovnu
pop
stos
shl
test
sub
add
inc
lea
jp
jo
pop
fwait
repz
xchg
pushf
add
cli
dec
repnz
inc
mov
test
mov
mov
xlat
lds
div
enter
dec
cmp
cdq
add
inc
or
xchg
xor
mov
fwait
int3
scas
xchg
and
clc
cs
xor
mov
fldcw
cmps
aaa
push
add
pop
pop
lods
das
aas
adc
cmps
aas
cmc
inc
sbb
imul
fbstp
mov
lods
pop
ds
add
fldcw
or
aam
cmp
shl
loope
mov
add
push
daa
cmps
in
inc
add
cs
jnp
jl
sbb
mov
fcmove
sbb
adc
aam
(bad)
cmp
mov
lds
out
xchg
jae
jb
cmp
xchg
fstp
(bad)
mov
pushf
test
(bad)
mov
int3
inc
mov
scas
cli
aam
fstp
loopne
hlt
xor
fiadd
mov
mov
sub
mov
sub
jbe
fucomip
mov
push
sbb
lock
loope
pop
lods
xor
jne
aam
rol
in
xchg
pop
inc
shl
and
popa
sbb
xchg
data16
dec
inc
sub
js
jg
(bad)
push
jl
jp
sbb
inc
sbb
push
sbb
sti
push
cwde
stos
cmp
lods
or
add
int
mov
mov
div
mov
sti
adc
outs
and
push
clc
shr
mov
pop
sbb
inc
push
mov
fwait
sbb
test
push
jp
pop
and
xchg
sbb
xchg
xor
mov
or
test
xchg
inc
xor
xlat
and
or
mov
cld
loop
leave
(bad)
fwait
loopne
ret
movs
pop
jle
std
icebp
xchg
xchg
add
add
test
cwde
outs
ja
out
push
inc
loope
xchg
mov
mov
inc
je
das
jg
add
sub
out
dec
in
mov
movs
aaa
jne
pusha
imul
xchg
inc
xchg
and
and
fwait
xor
adc
xor
or
mov
xor
dec
sub
jns
mov
xchg
sub
dec
mov
inc
or
jmp
(bad)
mov
in
aaa
pushf
out
xchg
jmp
dec
scas
pusha
add
fnstcw
test
add
push
mov
test
and
lahf
ficomp
out
fsub
and
jp
dec
fild
stos
leave
pusha
mov
icebp
xchg
ret
in
cmp
xchg
mov
call
es
mov
push
rcr
out
xor
push
std
sbb
mov
inc
sub
adc
int3
sbb
xlat
std
in
cmc
push
test
pop
add
popf
xchg
or
sub
cmp
mov
mov
add
in
movs
popa
fnsave
fwait
es
cli
xchg
sub
xor
inc
jb
neg
sub
mov
pop
shr
inc
xchg
cmp
repz
pop
add
push
lds
cmp
xor
mul
dec
scas
test
and
cdq
xchg
push
jmp
push
aad
sbb
test
jp
mov
xchg
test
adc
fwait
add
cld
arpl
mov
repnz
(bad)
movs
stos
mov
loopne
movhps
or
xchg
(bad)
out
es
int3
xchg
dec
dec
mov
inc
scas
mov
sbb
lahf
ret
std
sbb
and
pop
pop
sbb
icebp
inc
add
out
dec
or
mov
mov
test
retf
xor
loope
pop
cmps
adc
add
and
in
mov
pop
pop
ss
and
movs
inc
xchg
jle
jmp
fcomip
jae
movd
test
mov
mov
mov
xchg
add
mov
jmp
push
xor
sub
test
ins
daa
out
call
jp
inc
loop
mov
push
or
outs
mov
movzx
mov
xor
push
adc
mov
(bad)
jg
cli
inc
hlt
add
or
sub
xchg
push
into
fwait
dec
lods
dec
mov
in
pop
pop
out
leave
and
mov
jmp
push
xchg
dec
mov
cdq
dec
pop
or
int
mov
clc
jnp
adc
into
fdivr
and
mov
mov
in
or
outs
cs
shl
nop
ror
sbb
cwde
popf
rcl
dec
repz
dec
sbb
fistp
fs
popf
enter
cmps
stos
call
push
test
sbb
dec
std
mov
es
shl
call
adc
repz
cli
and
jg
ins
leave
clc
pop
mov
push
out
(bad)
push
out
cmp
aam
bound
or
inc
mov
les
cmp
inc
and
cdq
test
and
retf
daa
mov
dec
xchg
push
fsubr
movs
hlt
scas
mov
mov
xchg
or
adc
pusha
sub
fst
and
mov
(bad)
cmps
lock
jle
sub
push
dec
outs
stc
push
and
and
outs
mov
pop
sti
les
mov
adc
loop
test
popf
and
cmp
sbb
ss
repnz
mov
inc
lahf
jecxz
int3
mov
fstp
or
(bad)
mov
addr16
in
and
push
mov
icebp
addr16
xchg
(bad)
sti
add
pop
dec
loope
pop
int
xor
push
inc
jne
dec
cwde
mov
adc
mov
dec
cwde
mov
add
in
shr
and
data16
div
dec
aam
iret
stos
out
ret
sub
mov
aaa
cdq
push
int
int
lock
sbb
out
neg
sub
add
retf
xchg
out
cmps
push
cwde
cmps
icebp
pusha
and
pusha
push
xor
xchg
push
inc
dec
retf
and
mov
push
in
pop
jge
imul
xchg
xlat
pop
fstp
es
inc
mov
adc
mov
pop
add
fimul
fisub
sbb
pop
jbe
xchg
push
(bad)
gs
and
aaa
in
outs
test
jne
mov
out
pusha
inc
adc
jbe
(bad)
jb
xor
(bad)
ror
hlt
adc
movs
add
jne
fs
adc
dec
jmp
and
mov
es
or
and
push
xchg
or
aad
retf
mov
dec
add
inc
outs
dec
add
push
shl
out
push
shr
in
pop
push
xchg
sbb
jmp
aad
rcr
scas
and
aas
leave
push
into
pop
mov
int3
push
popf
inc
sub
data16
in
pop
popf
pop
jno
aas
in
imul
pop
loopne
ds
sub
xor
dec
and
hlt
sub
stos
and
inc
sbb
pop
push
mov
jl
inc
jne
mov
pop
xchg
push
in
push
inc
and
mov
dec
addr16
lock
fwait
call
outs
clc
jb
pop
jb
add
je
and
mov
sbb
jmp
xchg
dec
jmp
inc
cdq
xor
jp
mov
sar
sbb
jmp
sbb
mov
add
xchg
xor
fwait
aas
out
jns
fcomp
rep
pop
cmp
movs
cli
and
sahf
fcomp
movs
mov
pop
shr
dec
lods
jecxz
xchg
inc
dec
xchg
ins
into
sub
xor
jbe
sbb
outs
mov
cli
loopne
adc
call
inc
mov
mov
nop
mov
xchg
repnz
or
push
dec
adc
sbb
fucomip
ss
cdq
xor
xchg
ins
repnz
mov
push
push
outs
jg
ins
inc
fmul
jns
mov
out
cmp
add
pop
and
xor
rol
xchg
out
sbb
lahf
(bad)
retf
jecxz
rol
mov
jmp
push
sub
sti
(bad)
shl
mov
sti
out
cmps
cld
cli
pop
lahf
dec
cmp
pop
mov
es
cmps
mov
pop
inc
test
and
or
mov
std
sub
inc
pop
add
retf
add
push
mov
pop
pop
pop
mov
add
pop
je
lea
jno
mov
fmul
cmp
inc
and
inc
xor
pushf
fisubr
test
adc
leave
call
or
xchg
xchg
lds
mov
cmp
xor
sbb
cwde
push
jle
in
aaa
fwait
scas
mov
ja
add
imul
push
shl
mov
cdq
cs
repz
and
jbe
je
fdiv
xor
cmp
fisub
shl
in
jnp
(bad)
pop
jmp
ret
pusha
xchg
lock
movzx
retf
cmps
cmp
imul
and
adc
lea
out
and
mov
dec
jp
int
in
sets
mov
mov
movs
sub
push
pusha
and
mov
mov
push
and
and
push
add
xchg
div
inc
in
retf
imul
outs
daa
out
imul
or
out
in
jmp
inc
dec
outs
pop
dec
jnp
push
es
jl
(bad)
fsub
ds
cwde
sub
xchg
fstp
int3
sti
push
jns
retf
hlt
in
cmp
push
adc
outs
inc
pop
xor
push
test
aas
scas
int
imul
xchg
pop
dec
fucomip
sbb
fisttp
mov
sub
cmp
jmp
lods
sbb
inc
cld
pop
dec
pop
mov
or
in
xlat
xchg
inc
inc
cmc
out
sar
ins
cwde
jp
ja
cwde
neg
jp
lods
shl
pusha
ret
nop
outs
repz
aad
mov
sbb
inc
inc
pop
bound
dec
or
xchg
shl
pop
hlt
jle
add
sar
call
xor
lods
jae
jmp
push
arpl
add
popf
jb
inc
(bad)
jae
cli
(bad)
gs
fist
ins
xchg
int
imul
out
and
push
or
shl
test
xor
cmp
xchg
add
mov
int
pushf
push
xor
(bad)
stc
sti
aaa
addr16
mov
ror
and
mov
mov
into
mov
push
xor
sub
test
outs
test
lahf
mov
mov
inc
or
mov
xchg
push
pop
push
jmp
out
add
sbb
or
xor
mov
lea
mov
push
or
xchg
sbb
pop
jnp
xchg
cmp
loope
pop
pusha
push
(bad)
dec
sub
xor
pop
shr
mov
movs
cmp
pop
lods
adc
add
inc
bsr
das
sbb
xor
or
or
pop
(bad)
sbb
and
enter
fwait
sbb
arpl
dec
jl
lds
sbb
test
sbb
pop
sub
in
test
es
sbb
push
sub
pop
out
popa
pusha
cmps
xchg
mov
lock
out
pusha
mov
and
inc
cmp
push
mov
(bad)
mov
pop
jg
push
fwait
mov
adc
dec
adc
mov
dec
inc
gs
xor
push
mov
mov
jge
sbb
xchg
jo
mov
sbb
or
mul
xor
iret
sbb
aaa
pushf
sar
mov
cmp
out
jecxz
dec
test
cmp
mov
(bad)
out
push
std
mov
mov
popa
or
stos
in
xchg
out
inc
ja
arpl
xchg
popa
mov
lods
jge
push
xor
xor
mov
cs
movs
jecxz
dec
inc
xor
mov
fwait
jl
ret
ja
push
sbb
jno
movs
pop
dec
cwde
test
ror
lods
xchg
cwde
das
test
in
leave
sub
xor
aaa
cvtps2pi
cli
ins
jmp
into
fadd
push
scas
sbb
bound
cmp
xchg
stc
shrd
lods
push
jmp
and
addr16
inc
and
movs
or
cmps
sub
pop
jp
psubd
dec
pop
dec
xchg
lods
mov
push
ss
bound
fwait
jb
pop
adc
fld
ficom
inc
xchg
xor
rcr
mov
arpl
add
fnsave
sub
into
mov
test
stos
loopne
or
fld
or
sub
lahf
pop
cmp
sbb
ins
jle
or
sbb
xchg
std
pop
inc
sti
out
xlat
mov
lea
jns
rol
(bad)
fld
mov
push
jmp
pop
lods
cmp
call
arpl
mov
aaa
dec
cmps
retf
xchg
aam
mov
jne
test
iret
in
add
popfw
xchg
ja
push
dec
dec
pop
dec
push
pop
retf
jno
adc
imul
dec
pop
add
iret
fcomp
add
out
jle
push
scas
ret
jb
popf
arpl
in
repz
je
sub
xor
xlat
cmp
xor
or
and
xchg
adc
lahf
arpl
call
call
mov
retf
mov
sub
sub
cmc
call
or
inc
mov
inc
mov
jb
xlat
xchg
enter
popf
mov
jmp
cmc
in
pushf
stos
pop
daa
mov
mov
xor
das
cmp
push
cwde
pop
retfw
xor
fst
(bad)
in
inc
shl
imul
dec
lds
and
lods
addr16
lahf
push
(bad)
or
popf
or
jnp
jne
jnp
push
or
sbb
and
adc
xchg
dec
mov
add
adc
retf
loopne
(bad)
into
int
xchg
lds
push
daa
mov
call
call
lock
aaa
fstp
pop
or
mov
mov
out
jb
(bad)
lock
popf
and
pop
dec
sub
sub
inc
popa
mov
sub
cmc
mov
jae
cdq
dec
dec
jns
xor
cs
push
aad
push
inc
mov
mov
stc
add
outs
neg
in
adc
sbb
loopne
inc
test
mov
jp
jmp
ins
mov
sub
lea
ja
mov
xchg
test
pop
daa
and
pop
data16
idiv
and
pop
mov
jns
pop
adc
or
cmp
scas
into
ja
imul
mov
xchg
push
adc
loope
xor
cdq
(bad)
cmc
fst
loop
and
loope
call
dec
jno
dec
jmp
fld
pop
or
inc
xchg
and
fwait
sahf
shr
lock
stos
jmp
push
rcr
les
jo
test
rcr
jge
rcl
rcl
pusha
cmps
repz
mov
pop
idiv
xor
arpl
fs
dec
arpl
push
ret
add
shr
scas
loope
push
mov
mov
jle
in
sbb
or
out
mov
test
retf
adc
(bad)
mov
mov
scas
ja
cmps
or
aad
fdivr
les
adc
xchg
aam
xchg
mov
shl
push
cwde
add
xor
jmp
add
test
pushf
loopne
add
and
adc
loopne
clc
ins
fwait
loop
dec
(bad)
out
sub
or
sbb
into
add
out
cmps
adc
add
test
iret
cwde
sbb
out
add
loope
fnstenv
push
inc
dec
js
mov
xchg
inc
imul
add
pop
sub
repz
xlat
aam
out
mov
ret
sub
mov
push
push
jno
mov
and
movs
add
adc
mov
cmp
not
sbb
cli
add
shl
mov
(bad)
(bad)
(bad)
in
inc
push
push
xchg
adc
pop
ret
xor
mov
sti
cmp
adc
mov
in
sbb
mov
fstp
mov
std
mov
adc
adc
cmps
(bad)
pop
or
in
pushf
pop
icebp
xor
rcl
stos
inc
jnp
and
and
inc
xchg
xor
ror
push
dec
dec
ins
cmps
jne
adc
mov
jle
xor
pusha
loopne
cwde
fcom
fcomp
in
mov
mov
mov
mov
jle
sar
(bad)
jle
xor
call
push
push
inc
outs
sbb
xchg
jecxz
movs
jne
mov
cmc
mov
mov
rol
icebp
das
mov
xchg
aaa
(bad)
hlt
in
es
outs
int
pop
jecxz
xchg
mov
mov
xchg
lock
cmp
add
mov
mov
jmp
int3
fdivp
test
jno
pop
movs
call
inc
arpl
cmp
pop
imul
loope
xlat
fwait
inc
es
jae
ins
pop
sub
leave
push
mov
loop
xchg
push
int3
outs
sub
rcr
out
sbb
sbb
in
loop
leave
xchg
sar
pop
sub
imul
sub
lahf
neg
and
dec
and
sub
mov
adc
nop
adc
pop
mov
sbb
movs
repz
mov
retf
adc
arpl
or
ss
enter
call
mov
cmc
dec
mov
xor
lds
jmp
inc
mov
(bad)
(bad)
sub
push
jg
and
rol
adc
mov
pop
(bad)
outs
push
sbb
shr
xchg
les
pop
fist
jg
out
and
add
in
or
les
mov
jge
sub
scas
xchg
cmc
jle
outs
push
fistp
int3
fldln2
iret
pushf
icebp
int3
aam
cmp
add
add
add
cmp
or
fldenv
or
mov
mov
das
nop
sub
xchg
jno
push
lahf
shl
or
in
cmp
cmp
jmp
cmp
mov
mov
jmp
movs
imul
outs
push
arpl
call
fld
pop
pop
xlat
mov
(bad)
add
test
xchg
movs
data16
adc
mov
pop
push
out
push
ins
addr16
xchg
jmp
loop
inc
fwait
mov
pinsrw
ret
out
bound
cdq
mov
sbb
pusha
pop
aam
push
jae
or
mov
sahf
or
add
nop
jne
pop
repz
xchg
cmp
push
jle
ds
nop
lea
sub
mov
pusha
jmp
xchg
aam
and
imul
sbb
ret
push
mov
add
stos
dec
push
ret
xlat
lahf
sub
pusha
push
dec
sub
sar
xor
or
cmc
stc
fdiv
inc
cwde
aam
movs
imul
ret
jg
mov
out
lea
xchg
mov
out
into
adc
xchg
xlat
sub
sbb
mov
or
std
popa
dec
in
cmp
jo
out
leave
test
aad
clc
int3
and
push
cld
fmul
idiv
ss
(bad)
fwait
add
ins
test
scas
xor
sbb
sahf
ftst
mov
add
sub
push
sub
mov
mov
mov
mov
mov
inc
pop
jno
inc
or
test
mov
cmc
mov
xchg
sub
mov
pop
inc
addr16
mov
jnp
mov
sahf
arpl
pop
bnd
int
fs
cmp
mov
mov
hlt
xchg
icebp
js
ss
sbb
movs
into
cmp
fwait
scas
xchg
push
mov
out
mov
and
cmps
inc
(bad)
rol
adc
push
jmp
hlt
pop
stos
cmc
cmp
or
(bad)
sub
and
hlt
cmp
or
je
shr
out
xor
inc
clc
jge
and
push
or
pop
cmps
jecxz
clc
test
ret
mov
(bad)
mov
xchg
add
ficomp
bound
gs
xchg
fisttp
int3
xor
xor
jb
pop
sbb
lock
arpl
dec
push
push
rcr
push
and
xlat
push
pop
imul
cdq
xor
sbb
jnp
add
cmps
push
cs
push
lods
imul
leave
mov
ret
fnstenv
dec
cs
jne
mov
adc
push
pop
cmps
fst
cmp
ja
add
jp
cmp
addr16
cld
or
sbb
stos
sbb
dec
sub
clc
cmp
pushw
xor
aad
jne
dec
aaa
stos
push
(bad)
cmc
mov
dec
scas
daa
push
push
scas
inc
push
pusha
push
mov
sub
daa
push
test
data16
imul
jb
pop
jbe
pop
mov
call
jecxz
pop
inc
pop
push
mov
add
xchg
jmp
pop
mov
add
xlat
xchg
sub
div
or
shl
in
out
enter
xor
add
loopne
pop
add
(bad)
out
mov
or
(bad)
push
aas
mov
cmc
sub
ins
cmp
mov
pop
xor
js
pusha
push
sahf
arpl
add
clc
xchg
popa
jl
adc
iret
enter
add
jge
cmp
pop
mov
and
jl
and
add
sti
out
ror
rcl
push
jge
cdq
add
aaa
xchg
dec
sbb
lds
xchg
adc
dec
xor
mov
pop
push
mov
pop
test
lock
push
mov
cdq
sub
mov
sbb
fcomp
or
inc
jl
xchg
ret
test
or
push
ins
mov
scas
sbb
stos
cmp
or
inc
cmc
leave
sbb
outs
mov
and
push
cld
push
pop
inc
xchg
idiv
mov
xchg
loope
pop
mov
xchg
and
das
sbb
and
call
cld
and
dec
(bad)
rcr
(bad)
mov
movs
mov
push
mov
sbb
leave
mov
outs
inc
ror
pushf
scas
js
(bad)
dec
dec
sti
pop
gs
cmp
int3
jbe
and
cdq
cmp
xor
mov
jmp
fnstcw
enter
sub
adc
(bad)
adc
ins
xor
pop
adc
out
imul
sbb
adc
mov
xchg
cmp
or
add
xor
or
scas
jae
mov
adc
or
int3
cmp
jg
lods
mov
push
cli
dec
retf
inc
out
shr
jnp
add
jno
repz
cmps
retf
stos
mov
mov
push
jmp
jmp
je
mov
ins
pop
or
and
clc
push
shr
jp
xor
xchg
popa
sbb
aas
xchg
mov
stos
ds
sbb
jne
sub
and
icebp
xchg
imul
call
xchg
pop
push
stos
sbb
ret
mov
imul
mov
adc
enter
pop
pop
mov
(bad)
repnz
(bad)
and
mov
fsubr
out
fdivp
fdivr
jmp
sti
sbb
dec
enter
inc
out
repz
inc
jne
xor
hlt
or
adc
inc
les
js
and
pop
xor
xchg
out
mov
fcmove
mov
jne
jge
add
sti
ds
lods
push
sub
jnp
pop
or
cmps
adc
jmp
xchg
int
add
ss
call
dec
fwait
imul
imul
js
(bad)
repz
push
and
mov
adc
add
mov
and
outs
sbb
push
lods
fdivr
push
loop
ret
out
popf
in
aam
pop
test
push
mov
cmp
push
cmp
ins
pop
and
sbb
or
scas
xor
sbb
leave
jmp
push
enter
sbb
imul
ins
mov
jp
pushf
imul
shl
popa
lahf
popf
sub
or
mov
lods
enter
push
enter
push
xchg
jb
data16
mov
stos
pop
cmp
fimul
ror
lods
mov
cmps
cli
pop
push
jns
sub
cmp
push
movs
jp
rcl
mov
xchg
ret
out
lods
adc
jo
mov
push
and
pop
xor
add
or
dec
pop
sti
bound
dec
jle
jge
push
or
jmp
push
in
xchg
mov
das
int3
mov
dec
out
out
push
mov
sub
in
push
clc
movs
inc
jno
jmp
sbb
repnz
cmps
cmp
repz
pop
pop
cmp
fwait
adc
xchg
push
ins
jne
xor
mov
inc
loop
icebp
ss
test
jg
inc
adc
mov
stc
cmc
mov
jnp
dec
or
popa
jmp
popf
mov
addr16
retf
and
add
pop
cli
pop
jnp
(bad)
retf
in
pop
push
mov
fcomp
mov
and
pushf
jno
add
inc
mov
sub
jns
retf
push
jns
arpl
pop
and
in
stos
push
fist
rcr
add
cmps
rcl
adc
add
xchg
jge
pop
pop
adc
mov
cmp
jne
outs
pop
push
jg
mov
dec
ret
mov
inc
push
aad
or
je
jle
sub
and
sub
adc
mov
pop
and
loope
push
pop
cmp
xor
and
pop
lods
adc
not
xor
fisttp
fild
xor
xor
adc
ror
scas
xchg
pop
ror
mov
(bad)
es
loop
hlt
call
ins
inc
mov
in
jmp
push
test
sti
jo
jo
mov
fild
into
bound
mov
ret
movs
std
cmp
jno
out
(bad)
dec
aam
and
repz
mov
push
je
xchg
mov
adc
into
jae
cs
mov
ins
cli
movs
pop
mov
shr
fwait
scas
mov
jo
add
daa
mov
ror
dec
mov
xchg
xchg
ds
xor
pop
popa
aad
pop
pushf
push
(bad)
push
cmp
imul
push
cmp
mov
daa
mov
jle
cli
scas
and
mov
fwait
dec
prefetcht2
xor
mov
mov
jns
mov
push
adc
mov
pop
adc
adc
mov
xor
xchg
in
cdq
adc
mov
cmc
cmp
iret
arpl
sub
sar
call
fnstsw
xchg
sti
into
stos
cs
icebp
sahf
xor
jae
int
pop
pop
clc
ficom
das
(bad)
in
fdiv
and
pop
xlat
rcl
xchg
lods
lea
mov
icebp
into
jmp
jae
ss
aas
les
mov
arpl
mov
hlt
or
cmps
pop
scas
ret
inc
sar
xchg
stos
mov
sbb
(bad)
dec
jg
out
sti
mov
mov
fucomp
mov
int3
cld
fiadd
in
enter
cld
test
dec
fwait
jge
add
aam
icebp
ficomp
xchg
or
xchg
mov
dec
cmp
cmp
cmp
es
push
mov
aam
arpl
mov
repz
scas
push
pop
imul
jnp
sti
mov
pop
adc
mov
xchg
or
inc
daa
lock
mov
test
fisubr
and
adc
sbb
adc
not
lods
adc
or
in
mov
mov
mov
xlat
repnz
lds
adc
shl
fidivr
inc
push
inc
arpl
xor
and
fnstcw
loopne
call
mov
sbb
cmp
int
jae
out
fnsave
pop
xchg
or
out
xchg
fnstenv
pop
adc
out
call
cmovns
(bad)
mov
jne
sbb
loopne
jp
or
jbe
mov
push
int3
adc
pusha
pcmpeqb
sbb
jg
or
xchg
daa
jl
push
cmps
sbb
out
jb
xchg
sub
mov
lock
inc
fstp
mov
test
xchg
imul
data16
out
jmp
inc
scas
movs
cmps
cmp
jmp
fsub
aad
mov
leave
test
or
hlt
push
add
add
adc
cmp
(bad)
outs
mov
push
xchg
lock
icebp
xchg
enter
leave
and
out
dec
ins
fsubr
call
mov
popa
and
inc
cmp
adc
inc
mov
je
mov
jo
std
(bad)
cmp
sbb
mov
hlt
cli
xor
hlt
jmp
lahf
enter
scas
iret
xor
(bad)
xchg
and
mov
fst
sub
mov
mov
test
add
fild
jnp
(bad)
and
fwait
lds
gs
into
pop
cwde
mov
outs
cs
mov
cmc
sub
ins
popa
xchg
mov
xor
ja
adc
and
fs
scas
stc
pop
test
(bad)
push
movs
nop
jo
daa
(bad)
mov
daa
jo
fcmovnu
xor
rcl
push
dec
div
pop
into
dec
lea
test
(bad)
adc
cs
push
dec
cmps
aas
outs
rcr
retf
pop
or
cmp
sbb
call
jnp
cmp
iret
mov
je
repnz
scas
js
fld
sbb
cwde
mov
out
out
or
cmps
mov
arpl
pslld
inc
cli
cmp
xchg
xchg
fisub
push
ins
imul
fist
(bad)
jmp
xchg
xchg
pop
int3
movs
leave
leave
xor
mov
cmp
fisub
xchg
call
fisttp
sub
mov
dec
push
mov
mov
mov
mov
dec
aas
xchg
fdiv
test
es
loopne
ror
xchg
dec
(bad)
pop
test
mov
jge
xchg
and
push
or
cmp
adc
scas
aam
aas
dec
dec
clc
xor
pop
or
inc
jo
cmp
repz
cs
pop
dec
inc
sub
sbb
mov
sbb
popf
jno
dec
ror
mov
lock
sub
daa
or
cs
pop
mov
xor
or
lock
inc
call
mov
adc
mov
sbb
test
mov
inc
loope
cld
cdq
into
int3
fbstp
xor
xor
push
scas
clc
icebp
mov
das
mov
fisub
cwde
sahf
or
es
xlat
clc
xchg
lds
bound
lds
and
mov
inc
mov
dec
mov
std
jecxz
fst
cmp
iret
pop
test
ins
push
cmc
inc
cmps
sar
in
adc
xchg
outs
cmp
cs
fsubr
pop
jnp
dec
aam
dec
mov
lods
ficom
(bad)
push
mov
xor
loope
inc
mov
js
mov
imul
ss
jae
sbb
xor
adc
mov
xlat
(bad)
jg
cmc
sar
add
inc
push
int
enter
pop
sub
aas
ror
into
jp
clc
dec
xcrypt-ctr
cmps
popf
or
dec
in
xor
in
xor
inc
addr16
lds
fs
bound
sbb
sbb
imul
ror
push
jne
ds
xor
pop
pop
sbb
sub
push
or
xor
adc
mov
cdq
mov
mul
mov
loop
(bad)
(bad)
dec
jmp
push
xchg
mov
sub
xor
fistp
adc
jecxz
mov
repnz
scas
xlat
aad
add
jns
pop
add
mov
sub
adc
push
pop
or
loopne
sar
ss
cld
jecxz
in
xchg
add
mov
add
fwait
and
loopne
push
sbb
sub
pop
mul
scas
sahf
pop
out
or
push
lods
cmc
xchg
in
shl
out
addr16
pop
push
in
sbb
pop
lock
jnp
xchg
test
pushf
call
mov
push
lahf
mov
sbb
fidivr
add
jl
mov
mov
mov
movs
out
pop
out
sar
mov
sbb
mov
ror
inc
(bad)
cli
sub
pop
inc
mov
and
fwait
rcl
rol
adc
or
lea
or
mov
sub
pop
sbb
into
dec
mov
cli
ds
adc
adc
jl
test
cmp
pop
jne
(bad)
lds
out
push
into
or
pusha
call
inc
pop
xor
scas
into
inc
rol
jne
inc
push
movs
xor
mov
cmc
inc
sub
mov
adc
pop
sbb
mov
cmp
sub
xchg
pop
movs
dec
stos
jne
add
and
arpl
xchg
lods
loop
cli
xchg
inc
imul
into
pop
call
fsubr
fcomp
ds
xchg
cmp
pop
adc
mov
mov
es
cs
xor
imul
sbb
cmps
sahf
mov
pop
pop
mov
and
repz
xor
inc
arpl
mov
nop
test
mov
add
fsubrp
clc
push
fs
inc
(bad)
jmp
sub
mov
jne
int3
or
sub
daa
jne
sbb
sbb
bound
mov
(bad)
cdq
mov
cmp
data16
mov
cwde
or
mov
retf
in
ficomp
jle
push
pop
push
dec
add
add
pop
add
jnp
retf
movs
jns
sar
jmp
(bad)
xor
xor
ins
and
xchg
or
repz
(bad)
cmp
mov
inc
sbb
inc
pushf
xor
add
mov
out
fld
movs
shl
mov
sbb
inc
lea
call
inc
fld
sbb
outs
sub
jbe
inc
jmp
mov
out
(bad)
test
mov
fstp
dec
jne
xchg
leave
adc
lods
adc
retf
mov
lock
jp
cmps
cs
cld
sbb
adc
test
adc
jbe
xchg
leave
mov
sbb
inc
inc
stc
fild
inc
lahf
xor
push
push
je
fadd
mov
mov
inc
aas
fild
sbb
nop
jae
ret
push
cmp
adc
cmp
sahf
jmp
shl
push
test
jb
sbb
pop
jae
jbe
mov
retf
fs
dec
pushf
cli
sti
dec
repnz
and
mov
sahf
lock
lds
mov
mov
inc
push
push
cmp
sbb
test
or
js
hlt
test
and
call
inc
lock
in
(bad)
(bad)
test
imul
stc
aaa
adc
call
push
in
int3
stos
dec
and
stc
adc
mov
fs
push
inc
loope
jl
sbb
xor
jmp
push
imul
push
jmp
cmps
mov
jge
adc
bound
jne
out
das
fimul
enter
cmp
xchg
inc
add
adc
cmp
ss
je
jge
ror
xor
xor
cld
fs
cmp
mov
sub
inc
xor
inc
pop
mov
call
icebp
sbb
fs
ja
and
push
inc
push
adc
mul
int
or
add
fmul
fwait
call
mov
jmp
call
cmp
les
jbe
movs
cmp
sub
(bad)
iret
jno
mov
hlt
jmp
add
fmulp
adc
fnstsw
and
jb
ret
adc
jo
or
and
sub
cli
xor
sub
dec
push
or
ss
leave
gs
add
loopne
je
and
mov
cmps
lock
out
fild
and
ret
cmp
stc
mov
cmc
dec
push
push
fimul
adc
xchg
sbb
into
out
out
pop
fld
mov
out
mov
sub
(bad)
test
ret
or
mov
jle
ja
mov
add
mov
ror
rol
adc
icebp
loopne
in
xchg
jle
aad
mov
push
xor
popa
pop
fcmovb
push
sahf
scas
mov
lock
jmp
dec
mov
int3
cmc
or
ret
dec
push
cld
and
mov
cmc
xchg
stc
mov
pusha
inc
sbb
xchg
jne
dec
(bad)
xor
adc
push
imul
pusha
inc
adc
xchg
inc
xchg
inc
mov
call
push
push
cmp
bound
out
mov
loope
xlat
xchg
xor
scas
xor
inc
fisub
or
xchg
cmp
cmp
and
cmp
sbb
and
and
sbb
jb
xrelease
jo
mov
jne
addr16
ss
jmp
cdq
pop
adc
ins
xchg
pop
pop
loopne
test
test
adc
daa
mov
retf
and
leave
push
fdivr
jecxz
into
mov
cmc
stc
mov
cmc
push
fsub
xchg
pusha
inc
mov
push
and
push
fimul
retf
jmp
rol
jle
js
dec
inc
jl
iret
dec
push
jmp
(bad)
cmc
dec
clc
call
jl
add
mov
xor
in
gs
xor
mov
push
imul
clc
shl
xchg
repnz
test
leave
lds
or
ret
dec
jmp
mov
mov
push
(bad)
add
add
idiv
nop
mov
sub
test
jle
mov
aam
fadd
outs
or
aad
int
mov
sub
add
inc
clc
loopne
sub
(bad)
mov
pop
sbb
or
ds
jmp
push
cdq
(bad)
ins
cld
sub
pop
and
ins
mov
inc
popf
xor
(bad)
adc
test
cld
inc
jle
mov
xchg
in
mov
jns
inc
add
cwde
lahf
mov
fst
push
cs
(bad)
push
lea
add
mov
scas
mov
mov
or
fcom
push
out
cdq
(bad)
retf
outs
and
push
scas
jg
sub
out
pop
(bad)
mov
enter
xchg
(bad)
adc
mov
xlat
ud1
sbb
and
lahf
in
stos
mov
cli
jg
aad
pushf
xchg
jmp
push
(bad)
sahf
fsubrp
lds
addr16
xchg
push
cld
into
xor
loope
enter
es
push
push
mov
pop
lock
int3
jge
int3
mov
not
inc
das
push
pop
mov
or
and
mov
xchg
xor
pop
xchg
xor
jmp
inc
stos
xor
ret
pop
cmp
lods
jae
sub
outs
addr16
popa
push
in
mov
xchg
mov
out
jp
stos
jmp
jns
xchg
retf
rcl
mov
hlt
inc
stc
cs
pop
sbb
ins
scas
out
sub
mov
or
repz
add
retf
rcr
repnz
stc
and
add
mov
std
adc
pop
pop
jne
dec
sti
cmp
cmps
push
xchg
(bad)
aaa
data16
push
sub
cmc
add
call
sub
out
gs
mov
adc
lock
sub
mov
xor
xor
inc
pop
xchg
xchg
jl
mov
inc
or
nop
dec
push
retf
dec
and
jnp
mov
ss
pop
test
sub
addr16
aas
mov
into
mov
cmp
repnz
or
push
bound
xchg
xchg
inc
pop
loopne
lds
stc
mov
(bad)
ror
mov
dec
loop
mov
rcr
dec
les
jbe
xor
stos
aam
lds
test
pop
loop
ins
shl
and
jle
mov
adc
jl
adc
ret
push
stos
mov
cmps
jno
mov
pusha
out
xchg
or
mov
test
and
mov
xchg
jo
jge
sub
mov
xchg
ss
int
movs
mov
and
dec
loop
ins
mov
jl
pushf
jle
jns
popf
xor
mov
pop
or
cmp
mov
int3
jo
inc
movs
into
imul
icebp
cwde
jo
push
fcmovnbe
ins
cmp
dec
push
dec
and
in
jmp
inc
int
mov
adc
mov
in
fsub
dec
enter
in
pop
and
jbe
icebp
gs
mov
clc
mov
jmp
push
adc
xchg
mov
mov
cli
retf
xchg
ins
dec
das
mov
mov
and
mov
adc
test
pop
cmp
popf
xchg
jne
(bad)
fdivr
out
ret
mov
test
adc
push
mov
cdq
push
data16
mov
pop
sahf
and
mov
adc
push
adc
sbb
mov
(bad)
pop
push
lds
jg
xlat
add
fmul
cli
cmp
or
out
addr16
jp
jmp
ja
adc
stos
jns
jbe
sub
fwait
stos
jg
(bad)
aam
jp
mov
mov
and
mov
and
das
sbb
inc
fisttp
ret
aam
ds
sub
out
ins
mov
or
ds
std
cld
mov
jmp
aaa
adc
sahf
and
jle
dec
inc
repnz
sub
or
ds
pop
lea
push
test
jl
xchg
sub
push
adc
and
push
retf
iret
pop
or
jb
xchg
mov
pop
lds
mov
dec
sub
add
js
inc
and
mov
and
pop
xchg
mov
pop
cld
ficomp
mov
push
test
cdq
push
cmc
add
mov
es
and
inc
adc
popf
repz
mov
jae
pop
imul
aad
dec
nop
mov
aas
xor
loop
sub
jecxz
mov
mov
mov
rol
movs
or
sbb
or
xlat
rol
pop
push
mov
je
pop
or
inc
inc
out
xchg
sbb
shr
fbstp
inc
xchg
mov
dec
retf
jge
aas
xchg
std
mov
dec
aaa
test
push
adc
aaa
rol
punpcklwd
push
adc
iret
iret
pop
pop
xlat
adc
rcr
xchg
outs
inc
gs
cdq
jne
dec
cmp
and
sbb
(bad)
out
leave
jmp
fidiv
mov
jb
mov
jbe
lods
jl
push
sub
ins
je
frstor
or
lds
fcom
shl
mov
scas
mov
mov
and
pop
jno
cmp
pop
jle
(bad)
retf
test
mov
stos
aaa
mov
mov
mov
sbb
push
mov
mov
icebp
(bad)
xor
int3
int
xchg
repz
imul
call
pop
scas
retf
ret
xor
xchg
ret
(bad)
cld
lods
and
bnd
je
mov
in
sub
mov
loopne
into
mov
cs
outs
dec
pop
dec
cmps
pop
js
retf
fisubr
rcr
pop
popa
xor
dec
test
pop
inc
pop
push
pop
lods
xor
xchg
hlt
xor
test
sti
push
aas
sub
dec
or
inc
sar
cmp
mov
nop
xchg
jmp
fnstsw
lods
retf
or
scas
aad
and
into
mov
movs
loope
aaa
sbb
push
pop
inc
std
lock
xor
call
inc
dec
es
xchg
cmps
pushf
cli
movs
or
test
inc
idiv
hlt
pop
fnstsw
lock
xchg
pop
lock
adc
je
dec
icebp
rol
xor
dec
mov
pop
jg
aaa
jle
pop
sub
or
and
mov
dec
add
sbb
inc
bound
pushf
daa
pushf
(bad)
js
stc
cmp
push
jb
sar
pop
cmp
movs
out
xchg
clc
stos
data16
fwait
push
dec
adc
div
dec
and
cli
or
and
inc
cmp
mul
adc
out
push
xor
hlt
lods
aas
add
repnz
lods
ret
mov
mov
push
dec
mov
mov
cmp
inc
push
loopne
ror
sti
cs
clc
fisubr
mov
or
cmps
add
in
xchg
mov
out
in
xor
mov
sub
scas
je
push
xor
xchg
mov
mov
push
mov
push
push
call
es
cwde
aaa
ret
jg
addr16
pop
push
ins
pop
push
(bad)
std
movs
mov
jmp
bnd
or
inc
jg
rol
rol
push
push
xor
cdq
lock
jb
mov
aad
xchg
and
cmp
xchg
add
lahf
(bad)
or
inc
dec
call
add
lahf
ja
shr
imul
adc
aas
and
lds
sub
cmc
push
mov
mov
cmp
scas
or
fcmovne
xchg
sti
out
je
aas
jmp
aaa
into
mov
ds
inc
js
add
xchg
outs
stc
sub
in
dec
leave
xchg
imul
aam
pushf
stc
repnz
jae
(bad)
jle
out
mov
adc
sub
rol
and
mov
pop
daa
push
push
fisubr
sbb
loop
(bad)
pop
mov
mov
inc
aad
xchg
xor
mulps
push
adc
jle
inc
icebp
mov
jae
xor
push
dec
fwait
(bad)
pop
adc
sbb
add
dec
cmp
int
jbe
add
jns
repz
cli
repnz
(bad)
retf
and
fs
loope
imul
mov
mov
pushf
mov
jnp
jge
(bad)
inc
push
pop
mov
in
push
adc
sub
fidiv
imul
pusha
or
mov
cmp
test
aam
arpl
cmp
sub
or
jg
and
test
js
ss
mov
in
mov
mov
push
mov
not
retf
enter
inc
sub
imul
sub
jecxz
inc
sbb
push
jnp
add
out
push
leave
ret
test
gs
in
adc
xor
retf
movs
push
lds
xor
mov
dec
cdq
dec
pop
sbb
mov
jb
mov
sbb
mov
(bad)
test
cs
xor
gs
pop
ds
inc
jae
call
icebp
sub
dec
test
in
and
in
jno
mov
mov
iret
inc
push
mov
stos
and
jbe
lea
sbb
hlt
cmc
aam
jb
pusha
push
mov
add
xlat
scas
cs
test
mov
ror
dec
add
jbe
fstp
loop
or
jae
movs
xor
sub
fist
sahf
out
mov
jbe
pop
sbb
cmp
inc
es
jne
sahf
(bad)
pop
add
cmp
dec
adc
xchg
jmp
fstp
inc
add
out
sub
or
xor
(bad)
add
cmps
push
aad
xchg
fsub
pop
inc
sti
or
push
nop
mov
clc
cmps
mov
out
ins
fdiv
and
jecxz
add
mov
pusha
add
neg
sbb
out
inc
add
jo
mov
and
xchg
ror
mov
rol
add
imul
lods
fstp
xchg
xor
adc
push
int3
(bad)
dec
mov
lods
and
ss
mov
mov
ds
cmp
frstor
dec
mov
pop
pop
mov
mov
cmc
iret
nop
nop
or
add
jb
test
fbstp
or
mov
shl
mov
mov
(bad)
mul
dec
mov
push
cmp
into
mov
ror
lods
sbb
cwde
mov
mov
pop
push
dec
(bad)
ficom
mov
ins
dec
push
call
inc
pop
test
imul
inc
sbb
iret
mov
sub
jmp
dec
jo
int3
and
sbb
adc
xor
push
xor
mov
pop
(bad)
cwde
jmp
sbb
or
popa
sbb
sub
pop
out
test
cs
xchg
xor
pusha
cmp
mov
lds
push
cmp
or
add
xlat
shr
or
pop
xor
cmp
in
fnstcw
gs
adc
mov
xchg
jmp
retf
push
sahf
dec
fdivr
sub
cmp
sbb
push
popf
dec
(bad)
push
stos
rol
mov
or
cmp
sahf
mov
call
fcmovnb
mov
pop
out
jmp
pop
(bad)
cld
(bad)
sar
xor
pop
lods
sbb
bound
sbb
xor
sub
add
jb
and
lahf
jle
icebp
ret
nop
jmp
fcom
(bad)
adc
jae
xor
iret
daa
and
popf
or
rol
pop
xchg
std
inc
clc
dec
xchg
fs
adc
mov
shl
sub
or
leave
int
sahf
sub
in
mov
aaa
mov
std
mov
xchg
daa
adc
nop
imul
mov
aas
xor
out
pop
add
cwde
inc
mov
jns
jp
out
lods
dec
and
aaa
sub
mov
out
sbb
imul
push
dec
aam
mov
std
lock
inc
mov
and
jmp
push
int
pop
cs
cmps
in
pop
jns
add
iret
aad
lods
jecxz
mov
or
stos
enter
shl
jge
and
push
jmp
in
xor
and
inc
push
sbb
dec
sub
jle
jbe
add
cmps
cwde
fsub
lahf
test
add
retf
push
mov
cwde
jae
(bad)
js
(bad)
inc
js
mov
mov
in
sub
push
pop
fdivr
sub
int3
mov
xor
xchg
inc
in
imul
div
lahf
jg
push
fwait
out
pusha
dec
and
pop
test
mov
repz
(bad)
cmp
jbe
int
inc
loop
daa
pop
adc
push
ss
cmc
mov
into
xchg
int3
jb
dec
pop
sbb
add
jg
fs
sbb
scas
jae
fisub
xor
sbb
lock
and
in
loopne
mov
xor
jecxz
sbb
sahf
in
mov
enter
mov
xor
inc
cmp
in
fcmovnbe
xchg
mov
pop
jg
cmp
jecxz
fild
outs
dec
adc
or
pop
dec
adc
test
cld
sub
jge
clc
pop
adc
loopne
mov
jne
jmp
sbb
lock
fcomp
loope
adc
push
xlat
jecxz
mov
jne
test
xor
mov
inc
push
fld
cmp
gs
fld
shr
int3
jmp
test
inc
mov
imul
mov
xchg
shl
or
xchg
dec
mov
pop
std
shld
out
push
add
adc
adc
pop
and
arpl
popa
push
icebp
and
add
push
mov
lods
mov
xor
dec
inc
jno
fild
retf
out
inc
in
sub
push
repnz
pop
dec
sbb
test
pop
pop
and
in
mov
pop
add
mov
or
fstp
mul
lea
mov
jl
jne
imul
xchg
ins
mov
xor
mov
push
sub
(bad)
fild
aam
or
add
lods
mov
and
shr
adc
mov
xchg
clc
les
xchg
xor
inc
push
inc
jns
fstp
stc
inc
shl
and
aas
mov
dec
test
pop
sbb
mov
jle
and
xchg
or
inc
pop
aas
jne
je
cld
pop
loope
loope
xor
imul
sbb
xor
pop
in
xor
sbb
mov
aam
sbb
popa
sbb
mov
inc
mov
fdivr
sbb
fbld
sti
push
add
int3
xchg
mov
adc
(bad)
add
stos
leave
cmps
in
call
mov
cmp
outs
dec
jmp
mov
arpl
mov
push
xor
(bad)
xchg
test
inc
or
mov
mov
adc
sub
cmp
sbb
add
jecxz
cli
and
cwde
fisttp
and
ret
out
mov
jmp
sub
sub
cmc
jge
adc
dec
and
pop
cmp
inc
cli
mov
mov
(bad)
loopne
movs
jge
push
mov
sti
mov
mov
xchg
shl
sub
pusha
loopne
rcr
push
aaa
jne
mov
movs
or
imul
or
(bad)
rol
xor
out
lds
scas
mov
push
dec
push
in
rcr
and
mov
ins
add
out
jmp
fdivr
mov
sbb
sub
mov
sub
xchg
adc
addr16
dec
cdq
shr
push
call
add
sub
cmp
sbb
sbb
out
cmp
pusha
sti
and
pop
jge
jmp
test
xor
imul
xchg
xor
mov
lods
aas
dec
js
jne
sbb
inc
push
and
dec
fs
mov
or
jne
ss
xchg
jecxz
ins
mov
rcl
jge
iret
test
xchg
stc
or
xor
sar
cdq
mov
fimul
cmp
pop
jb
arpl
fwait
bound
xlat
cmp
cmp
push
jno
popa
cmp
setne
popa
push
aas
push
(bad)
xchg
out
xlat
jnp
outs
pop
sbb
pop
cmp
mov
popa
mov
jmp
cwde
data16
int
cmp
fmul
push
(bad)
cmc
cmp
mov
inc
xor
enter
int3
and
stc
out
mov
sub
jae
outs
sbb
inc
adc
(bad)
(bad)
test
das
shl
stos
test
dec
jl
mov
push
outs
sbb
mov
mov
adc
add
lahf
push
add
aad
sub
ja
lods
outs
cmp
out
pop
test
aas
or
clc
stos
loope
lds
xchg
or
adc
fmulp
add
jl
aaa
test
mov
mov
fsub
add
inc
ret
repnz
cmps
imul
sub
mov
jmp
arpl
outs
sti
add
das
mov
int
into
xor
mov
sbb
mov
sub
jbe
cmp
fnstsw
push
pushf
in
push
(bad)
in
push
fwait
cmp
sub
cli
mov
or
mov
and
adc
sbb
jbe
xor
mov
dec
xchg
imul
mov
pop
lds
mov
jns
sub
cmps
pop
sbb
sub
(bad)
cmps
pcmpeqd
jnp
mov
jae
(bad)
sub
cli
imul
xor
push
mov
or
cdq
and
mov
jno
sub
mov
or
jge
xchg
(bad)
pop
popf
push
fcomp
cmc
mov
push
cmps
push
cli
push
sti
push
adc
loop
push
bound
xor
add
push
fistp
outs
(bad)
push
retf
imul
sar
leave
and
push
fimul
mov
push
pop
sub
sub
push
dec
mov
cmp
sbb
cli
cdq
sub
pop
out
gs
and
sub
rcl
xchg
mov
inc
aaa
or
inc
pop
int
js
and
dec
test
gs
test
or
xor
xor
int
mov
mov
ret
not
push
xchg
cmp
inc
fcomp
inc
dec
mov
adc
les
bound
dec
mov
cld
les
add
xor
pop
int
cmp
es
dec
je
jbe
das
cmp
sbb
jmp
cmp
movs
scas
and
call
in
push
cwde
mov
shr
(bad)
(bad)
std
stos
rol
pop
mov
(bad)
and
stos
inc
fcomp
jmp
adc
je
xchg
(bad)
dec
fmul
sub
dec
test
xchg
stc
mov
add
jg
cmps
pop
xchg
mov
jl
dec
push
lahf
call
cmp
cmp
jno
es
sbb
or
ins
sub
cmp
mov
inc
ss
cmp
jg
mov
test
sbb
adc
mov
mov
mov
dec
and
std
fcmovnu
cmp
clc
mov
(bad)
sahf
adc
inc
lock
sbb
add
sub
out
sub
mov
hlt
pop
push
dec
sbb
or
aad
call
call
retf
pop
(bad)
popa
mov
pop
xchg
add
inc
inc
in
mov
sub
cwde
xor
or
adc
in
gs
sti
sti
(bad)
stos
in
sti
out
call
dec
icebp
dec
lds
and
(bad)
(bad)
(bad)
xchg
inc
cwde
xchg
sub
mov
mov
mov
adc
enter
repz
repz
fidiv
mov
sub
add
int
mov
sub
push
inc
shl
add
scas
push
sbb
mov
and
lods
sub
add
pop
push
sub
test
sub
add
mov
inc
sub
sub
xor
pop
aas
movs
xchg
out
cld
mov
loop
mov
push
ret
(bad)
sahf
push
cwde
dec
sbb
inc
dec
ret
mov
dec
fldcw
fsubr
pushf
cs
fcmovnu
gs
int3
retf
es
pop
pusha
sbb
jg
int3
pop
sub
das
in
jo
pop
js
adc
mov
xor
enter
(bad)
sub
scas
mov
fdiv
loope
mov
lods
xor
stc
les
jae
ins
int
sub
inc
inc
push
mov
xchg
pop
ret
in
sub
dec
call
xchg
mov
inc
mov
or
pop
loopne
push
stos
in
xchg
sub
out
cs
lods
or
scas
lahf
popf
jnp
ds
jae
fst
loop
xor
ret
jnp
mov
inc
data16
ret
mov
xchg
jp
adc
clc
jo
push
mov
ficom
loope
jge
imul
test
push
push
jae
mul
mov
push
add
cmps
fdivp
aas
mov
inc
in
faddp
jmp
(bad)
jmp
loop
sbb
enter
clc
in
and
sub
ins
mov
push
add
ror
and
jmp
adc
aad
jmp
nop
shl
jb
out
out
cwde
mov
xchg
loope
sbb
mov
push
fcmovnbe
adc
cli
push
xor
and
scas
cmp
adc
sahf
sbb
arpl
lock
cmp
pop
inc
mov
mov
xchg
je
sbb
lods
push
mov
call
mov
and
and
(bad)
ins
out
sbb
pop
sbb
and
push
mulps
jl
scas
dec
dec
dec
pop
aas
rol
dec
movs
bound
jo
xor
ins
gs
add
push
mov
in
pop
jl
jns
fdivr
or
add
xor
mov
jne
or
fild
and
lar
cmp
jmp
mul
idiv
bound
outs
in
in
imul
fistp
sbb
xor
xchg
or
inc
fwait
mov
mov
neg
in
leave
js
xchg
hlt
sbb
rcl
(bad)
es
(bad)
jmp
cmp
scas
cmp
jbe
stos
adc
in
jns
cli
jo
popf
sub
push
jns
xlat
addr16
int
mov
call
mov
dec
dec
movs
retf
das
mov
movs
pop
add
imul
popa
arpl
stc
sub
inc
imul
pop
mov
xor
call
or
jae
or
sbb
test
ret
push
jecxz
repnz
dec
push
sbb
(bad)
lds
test
imul
fidiv
xor
xchg
rcl
(bad)
mov
lods
adc
sub
add
sub
call
sub
int
ret
pusha
xchg
bound
mov
repz
lock
and
repnz
test
shl
popf
jno
sbb
sti
mov
mov
out
sti
pop
inc
aas
repz
cmp
addr16
inc
and
lods
je
pop
les
popa
sti
jmp
in
mov
and
inc
test
jecxz
inc
sub
mov
dec
fsubr
cmc
repnz
adc
jge
mov
xor
sub
push
mov
jmp
sar
je
cli
es
add
test
dec
dec
lea
xchg
cmp
bound
push
or
dec
ds
cmp
push
pop
push
sar
retf
xchg
icebp
rcr
mov
mov
mov
test
cli
sbb
xor
in
adc
jmp
mov
mov
mov
sti
pop
adc
ss
jo
out
jl
xchg
jnp
xlat
test
(bad)
push
out
adc
push
pop
neg
mov
cwde
adc
sub
xor
dec
ds
pop
xchg
retf
or
cmps
pop
shl
dec
mov
es
fsub
mov
inc
fucomi
mov
into
mov
cmp
loope
push
xor
push
push
inc
lods
or
std
clts
sar
sbb
jmp
lods
inc
mov
ret
int3
pop
cmps
call
xor
sbb
xlat
out
mov
mov
pop
test
vpsubq
mov
bound
cld
cld
push
rol
mov
add
ds
into
out
jg
mov
dec
mov
xor
jge
loope
jb
imul
(bad)
fcmove
fwait
stos
mov
test
sub
fs
dec
lock
out
and
xchg
mov
in
(bad)
cld
xchg
xchg
jg
out
icebp
and
out
xor
lods
pop
fistp
aad
enter
pop
cli
pop
xor
call
jmp
xchg
mov
ja
cmp
pop
test
lock
scas
movs
xor
dec
push
mov
lahf
mov
(bad)
fist
mov
clc
sub
aad
fs
loope
sahf
cmc
leave
jg
mov
test
mov
mov
add
int3
loopne
scas
add
cli
in
mov
adc
dec
mov
mov
(bad)
pushf
fmul
xor
das
mov
xor
mov
add
sar
outs
dec
cmp
xchg
or
int
pusha
test
repnz
or
mov
cmps
dec
inc
mov
lods
inc
sahf
inc
mov
std
hlt
test
sbb
xchg
rol
mov
inc
fwait
pop
stos
and
push
and
jmp
lea
cmp
xor
inc
arpl
les
scas
arpl
sbb
pop
call
lods
arpl
add
neg
push
ret
icebp
push
int3
push
stc
ins
lods
(bad)
idiv
pop
mov
retf
push
mov
pushf
mov
adc
sar
mov
mov
mov
push
cmps
add
dec
loope
cmps
popf
dec
pop
test
sbb
iret
out
xchg
cmc
fistp
ret
sti
push
daa
xor
cwde
stc
dec
mov
std
in
adc
mov
mov
cwde
push
(bad)
repnz
pop
adc
mov
and
rep
push
mov
icebp
jl
and
test
mov
(bad)
call
jnp
out
addr16
mov
imul
loope
cmp
shl
mov
sar
push
mov
adc
jnp
shr
lods
rol
loopne
call
mov
cmp
in
repnz
shl
movs
(bad)
shr
movs
pop
mov
fbld
xlat
stc
loopne
dec
lock
push
cmp
mov
mov
fisubr
jecxz
jl
xor
mov
inc
inc
adc
les
push
or
mov
test
push
(bad)
pop
fs
popa
jp
dec
sbb
add
add
test
(bad)
loop
les
inc
ins
mov
mov
xor
sub
jp
sub
adc
(bad)
(bad)
(bad)
leave
pop
push
imul
push
sti
(bad)
xchg
push
(bad)
mov
(bad)
ins
jecxz
inc
xor
inc
or
jmp
jmp
push
aad
mov
pop
arpl
int3
sbb
or
rol
(bad)
loope
popa
inc
mov
and
shl
push
mov
inc
mov
jp
add
outs
nop
ja
push
test
add
rcr
jp
(bad)
ds
fnstenv
aas
xor
fisttp
fxch
adc
icebp
(bad)
fstp
aad
cli
bound
stos
movs
cmps
mov
pop
xor
cdq
out
(bad)
inc
add
(bad)
xchg
or
inc
mov
xchg
push
loopne
add
addr16
sub
sbb
push
push
cmc
mov
leave
or
ins
jae
fnstenv
mov
out
in
lock
push
fcom
ficomp
mov
nop
test
setle
lahf
cmps
cmp
cmps
imul
inc
jle
mov
mov
mov
push
adc
add
fbstp
mov
cli
loope
das
rcl
xor
dec
mov
movs
std
repnz
fdiv
sub
inc
call
xor
lahf
icebp
scas
pop
int3
xlat
popa
jl
push
(bad)
(bad)
shl
add
mov
xor
nop
fld
idiv
shr
mov
dec
aas
test
and
arpl
fidiv
mov
dec
(bad)
mov
aaa
fcomp
xor
mov
jmp
test
inc
mov
push
stc
stos
adc
pusha
jnp
dec
int3
cmp
call
arpl
push
test
cmc
imul
or
in
pop
test
(bad)
outs
in
pop
sbb
stc
(bad)
stos
push
out
and
lea
adc
inc
mov
les
xchg
stc
mov
cmps
sbb
clc
mov
ffreep
jbe
ja
in
sahf
imul
pop
dec
fst
jmp
mov
pop
and
xor
aad
rcr
push
xchg
xchg
xchg
and
or
mov
pop
inc
xchg
cmp
dec
call
xor
pop
jmp
aad
ins
mov
or
and
dec
add
sbb
xchg
or
sbb
movs
retf
xor
retf
pop
loope
xchg
pop
mov
jae
pop
xchg
push
fwait
into
pop
jge
mov
or
std
dec
arpl
push
jmp
or
icebp
inc
popf
jmp
sub
(bad)
shl
inc
out
call
repz
pop
(bad)
inc
rcr
shl
out
sub
mov
fdivr
cdq
jb
mov
or
repz
in
xchg
pop
fstp
add
jmp
xchg
ret
popf
pop
sub
sub
sub
lea
sahf
aad
sub
div
cmp
pop
(bad)
push
or
icebp
rol
int3
dec
cmc
sar
ins
outs
xor
enter
mov
or
leave
ret
aas
sar
jmp
les
xor
fmul
inc
sub
stos
and
fisttp
lock
sub
pop
or
cmp
mov
int
mov
adc
jp
mov
aam
in
jg
inc
movs
mov
xor
add
push
dec
popf
sbb
(bad)
push
call
(bad)
push
outs
pop
mov
fwait
and
arpl
ja
hlt
or
std
(bad)
push
cld
jnp
fild
into
outs
and
test
pop
mov
jnp
dec
imul
or
call
neg
add
add
mov
hlt
data16
jmp
mov
add
cmp
les
jo
addr16
push
xchg
pop
jbe
test
sbb
xchg
lods
cmp
hlt
cmps
mov
cmp
jg
(bad)
dec
cmp
mov
push
retf
(bad)
test
in
and
js
retf
daa
or
ror
xchg
mov
lods
jno
enter
lea
cdq
clc
mov
(bad)
jne
cs
mov
test
retf
adc
test
inc
js
or
cmp
int3
lock
or
dec
xchg
and
mov
push
mov
lods
mov
mov
adc
ss
fisub
push
sahf
outs
inc
rol
push
loope
pop
ins
dec
cmp
shl
and
mov
jmp
inc
cdq
movs
add
xor
add
leave
jle
cmp
test
syscall
pop
call
sub
test
mov
pop
pushf
xchg
mov
clc
cmp
ror
xlat
repnz
test
hlt
div
fs
and
push
ja
sbb
dec
xchg
ss
fidiv
cmp
aam
xchg
jmp
sbb
cdq
add
fidivr
stc
in
and
dec
xchg
(bad)
ret
movs
leave
xchg
jns
push
fdiv
retf
fmul
imul
test
mov
ins
ret
xchg
mov
es
das
ret
enter
mov
int
ins
lds
rol
das
cld
hlt
jae
cmps
add
or
cld
xor
xchg
and
arpl
stc
xor
add
outs
jne
pusha
stos
cmp
stos
adc
push
jge
jbe
and
retf
fs
sub
idiv
or
dec
push
xor
jle
mov
std
stos
sti
fsubr
cmps
push
add
jo
and
sbb
xchg
es
cmp
inc
sbb
loop
mov
arpl
sub
mov
mov
das
mov
inc
outs
cmp
push
xchg
dec
xchg
popa
push
into
dec
mov
sbb
(bad)
jmp
jle
js
cmc
mov
mov
inc
pushf
jmp
mov
xchg
dec
mov
mov
mov
mov
pop
sbb
mov
push
add
ja
lds
iret
sbb
mov
xchg
std
cmp
sbb
mov
push
or
pop
mov
ins
or
xlat
lods
movs
or
jmp
xchg
add
adc
aaa
inc
je
sar
leave
lods
mov
and
cmp
sbb
pop
xchg
test
sbb
sbb
or
rsqrtps
pusha
xchg
add
ffreep
jge
and
xor
mov
cli
loopne
arpl
adc
cwd
mov
sbb
mov
(bad)
jns
cmp
loope
ja
scas
lods
mov
ss
mov
std
(bad)
push
icebp
cmp
or
and
out
xor
rcr
xor
aad
fidivr
test
push
out
mov
and
gs
mov
xchg
outs
add
sbb
retf
add
popf
pop
(bad)
and
inc
sub
fiadd
lahf
push
loopne
lahf
(bad)
(bad)
sub
cli
or
call
sbb
fidivr
retf
dec
or
pop
cli
sub
jecxz
dec
dec
sahf
js
dec
or
xor
push
adc
or
adc
shl
cmp
nop
outs
ja
push
fadd
add
mov
dec
push
icebp
ins
push
adc
inc
add
xor
cld
fisub
ror
cli
cli
mov
adc
mov
enter
adc
fisttp
shl
nop
adc
or
push
call
dec
addr16
aas
aad
mov
lods
cli
xchg
jne
(bad)
add
(bad)
mov
sbb
or
fisubr
neg
ins
mov
jnp
mov
mov
repz
and
mov
mov
add
jno
pop
ja
jo
inc
sub
push
std
shr
sub
sbb
and
jo
(bad)
fidivr
xor
mov
popa
and
mov
test
mov
sub
std
sbb
xchg
xor
test
xor
cmc
cmps
repz
sub
js
xor
mov
pop
aam
clc
jno
push
lea
(bad)
out
call
aaa
inc
dec
mov
add
(bad)
in
loopne
movs
inc
cwde
cmp
mov
fild
stos
inc
xor
movs
push
adc
jmp
jae
cli
(bad)
dec
mov
out
or
add
sbb
dec
ret
test
mov
xchg
inc
sbb
xor
mov
mov
xlat
(bad)
add
movs
jmp
dec
adc
mov
scas
or
out
shl
fisubr
jno
sbb
mov
xor
das
jae
in
mov
out
shl
pop
imul
or
inc
aaa
and
out
imul
rcr
add
mov
test
test
out
int3
mov
mov
loop
jae
add
data16
retf
pop
rol
in
add
pop
cmps
js
xchg
lock
push
imul
inc
mov
sub
dec
adc
fdiv
or
or
fcomp
icebp
rol
loope
out
adc
sub
fsubr
push
push
les
jecxz
or
push
and
movs
mov
pusha
iret
jle
jo
in
and
shl
int3
pop
add
je
(bad)
stc
fidiv
sub
mov
mov
ret
scas
push
fwait
cdq
popa
lahf
adc
popf
jmp
bound
retf
sub
repnz
ja
ins
jne
mov
bndldx
fwait
stos
jnp
(bad)
lods
jmp
imul
cmps
stos
or
out
iret
outs
fnstcw
movs
in
cdq
dec
aas
sbb
ins
test
test
lahf
jo
fidivr
jbe
sbb
xor
pop
lds
or
push
jle
inc
js
lea
sub
fsub
mov
stos
pop
loopne
mov
dec
(bad)
adc
xor
(bad)
xchg
cmc
jo
push
mov
jp
retf
lods
clc
xor
scas
sub
mov
std
xchg
mov
pop
sbb
inc
neg
xor
inc
and
push
jno
out
(bad)
adc
ret
pushf
retf
out
frstor
mov
mov
inc
mov
stos
push
mov
xor
test
jb
test
fs
test
test
push
add
add
push
inc
cdq
mov
inc
dec
pop
(bad)
pop
mov
cmp
les
stc
and
jbe
pushf
into
movs
xor
mov
dec
mov
xor
pop
iret
pop
mov
sbb
sbb
mov
in
inc
(bad)
outs
mov
repz
xor
add
xchg
add
mov
mov
push
clc
lods
dec
jae
stos
int3
push
xchg
retf
jp
mov
(bad)
ror
adc
lods
hlt
dec
push
cld
lea
aam
into
push
(bad)
aaa
lds
sub
imul
lods
push
(bad)
jmp
inc
mov
pop
cli
pop
jl
dec
fdivr
jns
in
shl
jecxz
add
xor
cmp
jno
sbb
in
hlt
arpl
in
scas
adc
clc
push
adc
xchg
push
sbb
ficomp
adc
nop/reserved
xor
mov
and
cmp
pop
dec
xchg
(bad)
fstp
mov
scas
and
and
test
lods
push
jb
dec
add
into
dec
dec
xor
cmp
out
mov
sahf
retf
stos
jb
pop
cmps
mov
int
dec
mov
sub
(bad)
into
loopne
shl
mov
jno
jbe
sbb
clc
out
lods
clc
movs
fwait
stc
es
arpl
xchg
add
fst
int
sbb
je
inc
in
lds
(bad)
fs
xor
dec
mov
shl
mov
in
ror
rcl
push
adc
xchg
jmp
js
fistp
scas
mov
in
lds
arpl
pop
movs
ret
ror
sbb
xor
cmp
(bad)
sar
sbb
mov
cwde
push
add
leave
push
or
dec
cmps
xchg
adc
jbe
or
les
jp
sub
cli
mov
sub
jmp
xchg
or
in
dec
je
in
es
movs
fistp
ret
popa
pop
in
pop
push
cwde
scas
cmp
adc
mov
es
jno
dec
mov
test
sbb
push
and
push
inc
push
cmc
or
popa
iret
pusha
sub
std
jmp
mov
mov
lds
lods
xchg
add
jge
(bad)
adc
call
jb
xchg
or
and
pop
out
sub
sahf
add
popa
push
shr
xor
sbb
not
sahf
aaa
(bad)
dec
cmp
data16
mov
fwait
(bad)
mov
adc
xor
jg
dec
neg
xor
adc
int
fs
das
dec
inc
and
pop
in
mov
stos
mov
adc
out
stos
or
mov
movs
jg
cmp
ret
repnz
adc
adc
int
xchg
adc
cdq
sub
dec
cli
cld
jnp
addr16
mov
jbe
movs
rol
cwde
daa
ss
icebp
dec
mov
adc
or
adc
ins
push
xor
in
bound
das
jl
or
pushf
fnsave
sti
push
push
movs
or
pop
ret
call
jl
pop
fwait
mov
sbb
mov
cmps
adc
scas
arpl
out
pop
push
jmp
call
mov
or
push
ins
mov
jmp
jg
pushf
xor
(bad)
inc
(bad)
mov
mov
retf
gs
xor
call
popa
mov
dec
mov
jle
dec
rcr
jle
xchg
adc
cdq
cmp
inc
out
sub
fstp
sub
stos
or
(bad)
(bad)
push
mov
cli
xor
sub
lahf
mov
cmps
sbb
fisubr
call
and
mov
mov
mov
and
es
pop
push
test
(bad)
js
cmc
aaa
imul
dec
retf
push
mov
nop
dec
(bad)
(bad)
push
cmp
lock
fidiv
(bad)
and
repz
xchg
loope
scas
mov
xlat
popa
adc
scas
sub
adc
cmps
mov
jmp
adc
cmc
in
imul
cmp
fbstp
rcr
shr
inc
dec
pop
sahf
lock
add
shl
inc
sub
lods
mov
mov
push
jle
jmp
lods
dec
shr
push
cmps
scas
(bad)
loope
push
cli
inc
scas
test
cmp
xlat
loope
mov
stc
sub
mov
mov
xchg
xchg
(bad)
retf
les
mov
push
dec
fadd
int
cmp
mov
cmp
nop
(bad)
icebp
test
xchg
mov
mov
adc
mov
out
sub
jp
imul
pop
mov
mov
dec
add
in
int
jge
xchg
(bad)
not
imul
ja
js
xor
inc
int
mov
inc
sub
in
cmp
fiadd
mov
lds
cmp
pusha
cmps
jb
cmps
inc
cmps
call
loopne
out
fdiv
inc
inc
pop
mov
mov
mov
jmp
repz
or
aaa
(bad)
jl
fidivr
mov
xchg
std
mov
iret
adc
aam
or
jne
sub
fbld
inc
dec
cld
sub
push
or
lea
mov
imul
jl
or
jno
int
lods
fsub
cli
or
fucomi
push
mov
sub
inc
cmp
inc
xchg
xchg
(bad)
pop
repz
in
pop
in
jne
inc
shl
popa
mov
out
adc
cli
mov
rcr
(bad)
loope
mov
pop
shl
nop
adc
add
fsubrp
cli
jbe
mov
cdq
pop
jne
cmp
and
out
(bad)
loopne
shr
sub
rcr
inc
mov
mov
jns
(bad)
(bad)
imul
mov
mov
jecxz
movs
aas
les
jo
xor
fisub
repnz
sub
ins
fsubr
fwait
jne
mov
jmp
mov
lea
fbstp
imul
jne
imul
or
cld
call
mov
dec
sti
sub
jno
mov
in
jle
pop
xor
and
jb
fiadd
imul
and
mov
xchg
push
jmp
fcmovnb
mov
add
mov
pop
out
push
mov
mov
inc
jmp
push
cmp
xlat
mov
test
test
(bad)
pusha
or
fbld
sub
cld
add
xlat
push
lods
in
pop
(bad)
inc
push
sub
pop
sub
cmp
test
sbb
aam
xlat
mov
cmp
and
jl
push
jno
aam
mov
mov
jp
cmc
cmp
sahf
jmp
popa
push
test
jmp
mov
fld
xor
pop
mov
and
jmp
mov
mov
mov
jp
mov
add
jle
rcr
rcr
pop
push
mov
shl
sub
loope
fs
(bad)
retf
daa
push
(bad)
mov
ret
fsubr
xor
and
jae
scas
out
icebp
fbld
out
xchg
mov
jae
jecxz
(bad)
xor
cs
dec
imul
cmp
pop
adc
xchg
gs
test
push
les
cmp
dec
push
fistp
daa
retf
jl
push
pop
mov
pop
pop
stc
cdq
data16
sub
in
sub
jmp
pusha
pop
push
jno
jecxz
pop
mov
shl
dec
ds
mov
push
fmul
or
jo
jo
push
xor
mov
push
out
xor
pop
pop
scas
out
sbb
jmp
fisttp
rol
sahf
mov
mov
fsub
and
jo
leave
idiv
out
outs
pop
xchg
mov
pop
add
mov
int3
loop
sub
mov
jne
jg
in
cmp
out
add
cmc
jae
mov
arpl
out
mov
mov
ffreep
imul
mov
push
inc
pusha
inc
ja
adc
outs
(bad)
js
lods
push
(bad)
shl
out
sbb
int3
pop
ds
mov
cld
push
rcr
clc
sbb
repnz
dec
xor
mov
xchg
add
inc
inc
cmp
dec
lods
fist
sbb
push
sbb
pop
jle
cld
lods
fidiv
xor
jns
daa
test
xchg
cmp
addr16
enter
fs
mov
and
jge
lods
int3
sub
push
xor
and
xchg
outs
inc
push
lock
call
nop
dec
ret
inc
sub
ret
xchg
mov
aas
test
fst
inc
fs
loop
mov
sahf
ror
stos
sub
and
push
cmp
int3
dec
pop
push
sahf
pop
push
xor
cmps
pop
ins
movs
stos
dec
std
sbb
je
jle
xchg
(bad)
push
dec
mov
adc
mov
imul
lahf
retf
in
test
std
push
add
adc
cmp
fild
push
pop
in
adc
(bad)
mov
aaa
dec
int
xor
jbe
jecxz
stos
test
push
mov
movs
jbe
in
xchg
xor
aam
sti
test
lods
and
mov
bound
xor
adc
push
mov
retf
jo
arpl
dec
inc
xor
cmp
fidiv
xor
fwait
lods
jnp
aaa
push
mov
outs
mov
test
not
mov
sub
jmp
test
rol
xchg
test
shl
cmps
sbb
(bad)
int3
mov
(bad)
lahf
cli
lock
inc
jl
lock
dec
pop
bound
pop
jbe
in
loopne
add
lahf
fmul
jne
jp
ins
dec
sub
xchg
sbb
rol
fbld
xchg
leave
push
inc
mov
mov
pop
ins
add
mov
add
pushf
ja
push
ss
cld
loopne
test
pushf
mov
jmp
fs
cmp
inc
stos
loopne
ins
sbb
push
lods
lods
xor
and
in
out
push
xlat
in
dec
xchg
scas
mov
inc
push
sub
sbb
test
mov
xor
and
out
cli
xor
mov
or
sar
push
dec
mov
mov
xchg
push
mov
mov
mov
push
stos
mov
jns
or
cdq
cmps
les
call
inc
popa
or
adc
aaa
mov
push
icebp
mov
mov
sub
sub
mov
and
dec
push
add
sti
or
je
repnz
and
dec
xor
shl
or
inc
bound
sti
sub
jl
inc
fidiv
cmp
pushf
imul
rol
cld
and
mov
aaa
pusha
adc
push
ret
jbe
mov
sahf
mov
jecxz
push
retf
add
stos
cmp
aas
or
push
push
iret
shl
lea
add
dec
cmp
and
mov
out
iret
inc
les
out
pop
mov
lahf
es
or
arpl
imul
push
mov
mov
scas
push
or
pop
mov
aas
std
sbb
pop
hlt
inc
push
lea
mov
out
and
int3
jb
xchg
mov
mov
nop
je
fcmovnb
mul
xchg
out
and
shr
mul
dec
sub
out
sub
in
add
mov
jle
jg
stos
jmp
pushf
cmp
add
push
fnstcw
(bad)
loopne
dec
push
inc
push
cmp
mov
cmps
imul
wbinvd
add
into
pminub
cs
or
push
inc
or
addr16
lea
int
cmp
jnp
addr16
jmp
add
sbb
pop
sub
retf
mov
pop
dec
js
mov
dec
mov
xlat
pop
mov
mov
pop
mov
mov
test
fisub
lock
mov
bound
pop
xor
mov
mov
xor
mov
fidivr
push
push
jmp
loope
iret
add
mov
xor
and
xchg
mov
in
mov
mov
ja
adc
mov
mov
ret
call
dec
out
jg
outs
add
nop
xchg
xor
pop
pop
xchg
and
jno
jmp
inc
jae
lahf
shl
clc
push
bound
(bad)
mov
inc
sub
les
mov
mov
cmp
lahf
frstor
inc
fadd
outs
or
xor
pop
cmps
outs
arpl
jo
in
add
ret
stos
fld
aad
mov
stos
mov
rcl
jmp
push
ds
mov
mov
xor
icebp
dec
jge
adc
cmp
mov
bound
fwait
lock
xchg
mov
lahf
retf
aaa
shl
pop
mov
push
(bad)
out
icebp
cmp
and
mov
adc
cmp
fadd
js
mov
add
pop
das
mov
push
xchg
(bad)
fmul
xor
xor
xchg
cmps
aad
outs
adc
mov
push
cmp
int
dec
mov
mov
adc
xchg
xor
pop
mov
(bad)
cli
lds
out
dec
xchg
adc
iret
hlt
into
outs
(bad)
repz
pop
cmp
jns
ins
stos
pushf
mov
int3
mov
(bad)
(bad)
add
ret
jle
es
data16
mov
shl
mov
loop
pusha
call
(bad)
mov
fisubr
mov
push
pop
inc
je
mov
inc
test
ss
jmp
(bad)
mov
hlt
ja
add
inc
push
xchg
sti
sbb
sub
test
imul
bound
jnp
iret
push
hlt
out
pop
pop
sbb
jmp
inc
loope
adc
in
jmp
popf
fistp
and
sub
sub
or
adc
add
xchg
fisubr
pop
outs
sbb
leave
pop
sbb
mov
xchg
and
dec
ds
call
mov
ret
ret
push
sbb
push
add
sahf
pop
mov
jb
push
pop
sbb
stos
dec
enter
sub
(bad)
(bad)
adc
je
stos
(bad)
add
das
cmp
mov
add
xlat
int3
jmp
out
jb
push
or
or
cmps
aas
xlat
test
sahf
lods
fdiv
movs
(bad)
pushw
mov
adc
cmp
out
jnp
int
fdivr
gs
mov
pop
push
sbb
cmps
loope
and
xor
add
out
mov
dec
xchg
jmp
sbb
xchg
xor
xor
in
cmps
cmps
sub
xlat
fstp
call
data16
push
sbb
cmp
mov
rcl
lods
sub
aam
pop
mov
outs
sbb
cmps
mov
push
call
inc
imul
clc
pop
pop
fldl2e
inc
inc
mov
push
sub
loop
add
outs
dec
call
pop
mov
cmp
mov
je
dec
push
sub
mov
xor
cli
cmp
xchg
inc
adc
jns
mov
hlt
push
jl
mov
mov
std
cs
inc
xor
bnd
loopne
push
popa
mov
jae
sbb
js
jge
and
sahf
clc
jg
jnp
mov
jne
mov
pusha
stc
enter
sub
xor
or
and
cmp
jge
sar
retf
std
xlat
retf
adc
fimul
mov
addr16
test
aas
outs
sub
std
out
xor
in
fwait
push
call
adc
jmp
sbb
add
push
inc
jle
xchg
cli
pop
repz
test
and
sar
rcr
das
mov
aas
inc
add
es
sub
shl
je
add
dec
cmp
sar
sbb
clc
outs
inc
cwde
(bad)
push
(bad)
mov
jne
retf
dec
jns
mov
pop
add
jmp
cdq
aaa
(bad)
call
es
stos
repz
enter
aas
cmp
lea
dec
dec
adc
scas
pop
jnp
std
push
mov
sar
cmp
adc
pop
(bad)
sub
(bad)
jne
jmp
in
jae
mov
out
cmp
or
push
and
mov
xor
cmovns
cmps
jp
sbb
jns
mov
loope
(bad)
into
nop
repnz
dec
test
add
aad
sub
sub
adc
inc
or
jno
mov
and
aaa
mov
sub
fisubr
mov
xchg
dec
test
(bad)
movs
fidiv
fistp
sbb
push
jge
push
mov
jbe
mov
es
daa
(bad)
(bad)
jmp
fisubr
cmp
add
adc
popf
and
push
push
call
data16
cs
cld
fstp
xchg
push
stos
not
mov
(bad)
mov
movs
mov
std
ror
fdivr
sahf
sbb
mov
imul
sub
test
mov
inc
cld
cli
outs
shr
xchg
inc
(bad)
pop
adc
sub
push
or
in
mov
ret
ficom
sbb
xchg
jge
aaa
ss
sbb
jbe
sbb
xchg
data16
(bad)
out
push
mov
xchg
stc
call
fisubr
xchg
xchg
aas
retf
sti
mov
mov
adc
xchg
mov
test
cli
mov
jmp
shl
loope
mov
aad
retf
hlt
test
mov
enter
push
add
jo
mov
cmp
cld
fcmovnb
mov
mov
unpcklps
and
movs
add
or
fcomp
xchg
rol
clc
sbb
movs
push
mov
push
adc
xor
sub
dec
les
jbe
je
addr16
mov
sbb
fild
retf
mov
repnz
jp
fsub
loop
dec
scas
pop
cmp
pop
fsub
xchg
mov
cmpxchg
mov
xchg
adc
push
jecxz
cmp
sub
repnz
jecxz
and
int
sbb
jnp
dec
arpl
lock
sub
enter
jg
in
xlat
out
cmp
sahf
outs
jbe
push
inc
and
pusha
sbb
pop
mov
fwait
shl
movs
movs
fcmovu
dec
xor
retf
call
push
pop
test
pop
in
scas
sahf
pop
jno
xchg
call
push
pop
fld
fwait
adc
push
imul
fbld
outs
ds
dec
and
adc
daa
leave
jle
jmp
xor
in
jb
stos
xor
sahf
and
adc
adc
pop
mov
lea
cwde
movs
push
pop
(bad)
icebp
ror
pop
retf
pop
cwde
sbb
int3
or
or
inc
ss
arpl
fmul
and
add
sbb
dec
test
jne
je
mov
mov
adc
mov
int3
outs
push
test
loope
(bad)
rol
mov
es
mov
mov
out
dec
inc
mov
stc
mov
test
nop
pop
jbe
fcomp
enter
cmp
mov
outs
jns
(bad)
arpl
fs
or
bound
and
movs
mov
mov
inc
repz
cs
inc
icebp
push
aam
xor
stos
ja
int
jnp
push
adc
pop
sub
xchg
sbb
xchg
inc
or
cmp
lods
jns
fbld
mov
stos
sub
mov
movs
stos
das
rcr
inc
lds
sbb
ds
test
xchg
add
mov
rcl
xchg
into
(bad)
(bad)
xor
jne
dec
mov
jb
jne
or
xchg
std
pop
cmp
inc
popf
cld
inc
or
(bad)
fsubp
mov
retf
das
jo
(bad)
push
cmp
(bad)
mov
mov
sbb
or
jno
and
icebp
into
das
int3
fcomp
arpl
dec
out
sti
mov
jmp
and
sahf
test
or
clc
push
add
pop
ret
stos
xchg
dec
push
inc
cmp
mov
into
sbb
add
call
mov
jg
sahf
std
in
push
fwait
(bad)
(bad)
xor
lds
in
cmp
mov
pusha
inc
mov
jno
pop
aad
cmp
xchg
arpl
sar
fstp
mov
jge
xor
push
pop
in
sub
mov
adc
lods
xchg
loopne
xchg
ror
aad
jge
repz
cmp
pusha
fisttp
mov
xor
sbb
jl
sub
or
dec
cmp
cmps
mov
jbe
mov
mov
ins
in
adc
and
mov
xchg
ja
(bad)
push
mov
popa
mov
jl
sar
pop
inc
rcr
frstor
adc
into
fnstenv
push
in
bswap
push
fist
(bad)
jo
out
mov
lock
aad
mov
inc
sbb
(bad)
jbe
add
stos
pop
xor
mov
xchg
push
fs
popw
outs
int3
lods
pop
(bad)
push
cmp
add
repz
or
inc
aas
push
dec
xor
jno
in
push
je
out
nop
shl
sahf
imul
lods
out
mov
mov
dec
mov
movs
mov
jns
inc
mov
mov
mov
mov
mov
pop
jl
mov
test
xor
mov
and
out
sub
shr
xchg
nop
(bad)
gs
dec
inc
fnstcw
xor
call
pop
xor
dec
test
dec
ret
add
ret
cmp
adc
pop
pop
dec
cmp
or
pop
cmc
mov
adc
shr
push
pop
mov
shl
sbb
test
popf
mov
or
mov
sbb
js
push
fstsw
call
shr
xchg
mov
popf
aad
hlt
stc
mov
sahf
or
and
dec
sbb
fist
scas
out
sub
or
clc
mov
mov
push
(bad)
sub
mul
in
pop
pop
les
mov
xchg
push
imul
mov
in
cs
push
xor
pusha
pop
rol
sbb
out
sub
cdq
repz
not
mov
arpl
mov
jnp
adc
inc
jmp
and
pop
cmc
mov
les
lock
loop
xor
jno
dec
dec
cli
stos
jecxz
pushf
jle
xchg
inc
xchg
lock
fidivr
xlat
cmp
pop
mov
and
pop
daa
xor
mov
dec
popf
rcr
mov
mov
jge
add
in
int
ret
cmp
mov
push
fcomp
rcr
test
div
cmp
clc
std
push
xchg
push
mov
mov
mov
xor
rcr
mov
push
movs
pop
cmp
mov
das
jp
test
out
nop
inc
test
cmps
loop
(bad)
xchg
cwde
xchg
mov
scas
pop
inc
jl
inc
jae
pop
xchg
add
iret
mov
shl
fs
push
adc
pop
push
out
xchg
sub
push
pop
ja
retf
in
add
movs
test
out
cmp
push
imul
cmp
out
xor
test
int3
not
cmps
hlt
lds
retf
sub
xor
sbb
sbb
pop
daa
pop
dec
(bad)
out
push
pop
dec
cld
inc
xor
jmp
pop
cmp
loopne
shl
mov
mov
mov
sub
out
push
pop
ja
fcom
lock
mov
sub
cld
mov
out
out
or
inc
jns
daa
adc
(bad)
adc
lahf
dec
mov
popf
cmp
pushf
cld
mov
mov
and
lahf
(bad)
out
push
pusha
fwait
dec
dec
mov
nop
hlt
ret
cdq
scas
ins
sub
pop
xor
mov
mov
add
jnp
leave
sti
es
xchg
ins
cmp
jmp
push
aad
cmp
outs
cmc
mov
loope
adc
mov
inc
cmp
mov
sub
mov
and
add
dec
or
dec
sbb
dec
outs
dec
rcr
xchg
jge
mov
xchg
fwait
lods
mov
cwde
pop
test
inc
pop
ja
daa
cmps
fs
add
in
adc
pop
push
lea
push
retf
mov
cmps
xchg
sbb
cmp
mov
ss
data16
dec
data16
in
mov
pop
into
retf
scas
out
scas
pop
(bad)
pop
mov
ins
enter
mov
add
repnz
or
ret
and
pop
test
cmps
mov
addr16
sbb
(bad)
mov
mov
xor
repz
lock
fbld
or
enter
cmp
mov
mul
push
xchg
loopne
cmps
sub
movs
push
fnsave
pop
dec
sti
xlat
(bad)
pop
jnp
xor
ss
push
movs
jno
(bad)
lods
mov
mov
out
jmp
adc
add
or
dec
jnp
stos
ins
jne
inc
inc
and
pop
adc
cmp
sbb
scas
adc
mov
push
in
movs
xor
jae
mov
clc
xchg
scas
in
imul
xchg
inc
jbe
cmp
add
cmps
sbb
loopne
push
xchg
in
xor
in
mov
popa
dec
pushf
sbb
push
fbstp
ins
or
push
(bad)
fidivr
inc
pop
sti
sar
jbe
imul
ja
adc
in
sti
mov
dec
das
lods
cmp
push
add
fdivr
pusha
lods
test
test
out
jnp
inc
jmp
sti
test
jp
dec
xor
inc
push
xchg
cmc
repnz
call
mov
ret
jnp
je
bound
mov
dec
inc
pop
mov
mov
sbb
mov
daa
inc
push
cmp
inc
and
pushf
stos
in
pop
pop
sbb
mov
inc
xlat
in
mov
add
sbb
xchg
sub
jle
not
pop
pushf
mov
push
jecxz
aad
data16
leave
xchg
dec
mov
stos
dec
scas
and
push
pop
mov
xor
retf
call
xchg
dec
sbb
aaa
aam
idiv
mov
mov
out
je
mov
push
xchg
mov
stc
ds
xlat
pop
js
dec
xor
xchg
ret
mov
jge
stos
cdq
jnp
or
popf
pop
call
mov
lods
enter
inc
push
out
pop
xchg
test
test
and
test
dec
fmul
or
lock
push
pop
dec
out
es
and
(bad)
(bad)
jl
cmp
jnp
or
inc
mov
int
add
add
xchg
push
iret
ret
stos
inc
ja
outs
outs
ret
sub
leave
pop
mov
mov
call
mov
out
mov
jae
pop
sub
lods
in
(bad)
into
sub
ret
cmp
jecxz
dec
sbb
pop
(bad)
xchg
loopne
sbb
mov
or
sbb
jne
push
dec
popf
push
fmul
jmp
stos
stos
jae
(bad)
pop
sub
jmp
cmp
or
inc
adc
ins
jge
ror
sbb
dec
retf
pusha
pop
dec
call
stos
std
outs
cmp
mov
(bad)
push
push
inc
sbb
out
mov
xchg
cmps
ins
fld
dec
mov
data16
jae
out
clc
inc
mov
fs
mov
adc
push
dec
sub
push
out
jbe
mov
call
jbe
push
sub
imul
and
jmp
jno
not
inc
ins
stc
jmp
xchg
add
cmps
stc
aaa
sbb
jno
sub
rol
pop
jp
mov
pop
(bad)
test
and
jmp
dec
pop
mov
out
xchg
xchg
bound
dec
mov
jb
add
push
(bad)
shr
cld
jp
sub
jle
ret
jecxz
enter
cld
inc
mov
jge
ds
not
xchg
xchg
shr
sbb
out
dec
mov
jnp
pop
fs
pop
in
adc
repnz
jmp
push
ret
jbe
or
dec
adc
jge
or
inc
push
pop
lods
mov
xor
inc
or
out
xchg
(bad)
imul
ret
daa
jb
repnz
js
add
loope
add
xchg
movs
loope
fwait
mov
retf
sub
xchg
das
loop
faddp
lock
mov
push
(bad)
push
sub
cmp
stos
icebp
xor
ret
les
cmp
retf
add
inc
lods
xor
scas
loop
mov
push
out
sub
mov
int3
lahf
stc
lods
data16
mov
loop
jae
push
je
xor
(bad)
in
(bad)
lea
loopne
test
jbe
test
sub
sar
pop
cmp
shr
cwde
jmp
aam
pop
inc
int3
inc
or
mov
fst
cmp
sub
ins
pop
jg
iret
xchg
nop
xchg
jge
loop
sbb
pop
pop
mov
enter
shl
repz
in
fcmovb
sti
loopne
mov
xor
adc
loopne
cli
dec
jecxz
mov
jmp
pop
and
cmc
mov
add
sbb
cdq
inc
mov
sub
popa
aas
mov
fild
mov
ret
mov
lahf
mov
nop
sub
adc
loopne
adc
cwde
lods
mov
push
or
xor
sub
mov
sahf
pop
adc
bound
mov
fcomp
dec
fst
jle
stos
imul
xor
and
adc
and
(bad)
lahf
stc
cmc
sub
test
xchg
add
jp
shr
jo
xlat
aad
pop
mov
das
pop
lahf
fldenv
jge
mov
mov
xor
and
sbb
and
inc
mov
icebp
inc
out
data16
mov
inc
test
jnp
je
fsubrp
int
movs
pushf
and
mov
cmp
cs
mov
lahf
add
jmp
pop
fistp
fucomi
inc
imul
pusha
inc
inc
xor
mov
push
fs
lds
(bad)
mov
sub
es
xchg
lea
push
cmps
aam
pop
sbb
fidiv
iret
popf
pop
stos
int
dec
rcr
push
push
icebp
lds
(bad)
retf
mov
ins
lahf
mov
or
bound
div
sub
aaa
mov
inc
xchg
xor
imul
scas
dec
fld
daa
int
xchg
adc
inc
mov
jle
mov
leave
and
out
push
pop
push
call
pop
das
and
mov
fnstenv
retf
jle
mov
(bad)
(bad)
(bad)
(bad)
(bad)
lahf
stos
mov
aaa
aad
in
fwait
sub
dec
dec
mov
ficomp
sub
mov
pop
js
in
retf
jne
retf
mov
imul
idiv
push
xor
cmp
addr16
jge
sbb
cmp
stos
dec
push
sti
rol
call
fwait
mov
pop
arpl
and
fstp
or
std
aam
sub
xchg
jle
daa
aaa
shr
addr16
daa
sub
adc
ins
imul
mov
pop
or
out
rcr
jno
rol
leave
gs
jbe
lea
loope
push
pop
adc
inc
xor
les
inc
xchg
xor
sub
or
or
div
std
clc
mov
test
fsubr
push
or
sbb
test
jg
fld
add
mov
in
cmp
dec
popa
xchg
add
inc
cmp
xor
sbb
xchg
ret
in
pop
pop
adc
add
adc
sub
xlat
lods
mov
lods
add
xor
add
add
adc
mov
inc
das
cld
popa
dec
pop
hlt
inc
lods
data16
dec
loopne
or
mov
and
add
adc
aam
cmp
imul
pop
in
push
lds
inc
push
fsubr
mov
and
xchg
or
arpl
icebp
and
sbb
add
cwde
leave
rcl
retf
mov
fstp
ret
mov
das
fisubr
and
jmp
je
push
adc
cli
xchg
push
dec
ja
inc
pop
pop
and
test
xor
out
inc
xchg
loopne
test
aad
shl
jnp
adc
(bad)
mov
jge
mov
icebp
repnz
jp
addr16
sbb
pop
xchg
adc
push
mov
pop
sbb
setnp
cwde
pop
clc
repz
mov
push
popa
mov
out
inc
jp
pushf
add
lea
lods
pop
fcomp
pop
in
cs
dec
cdq
pop
pop
adc
add
das
inc
inc
idiv
pop
or
xchg
inc
cmp
xchg
mov
push
pop
ficomp
js
sub
shl
pop
imul
scas
ins
inc
pop
add
lods
(bad)
add
mov
imul
std
ins
arpl
push
xor
dec
iret
(bad)
pop
add
stos
fs
pop
je
stos
ja
xchg
push
jo
inc
xor
push
xlat
sar
cmps
(bad)
into
fwait
mov
sub
clc
int3
mov
cmps
cs
push
test
mov
push
fdivr
xchg
(bad)
fsub
(bad)
jae
std
mov
int3
jmp
sub
loop
(bad)
ja
neg
pop
(bad)
mov
leave
in
mov
sub
clc
fcom
jmp
out
fstp
mov
test
xor
xchg
mov
test
pop
shl
cmps
mov
call
sub
fadd
add
sbb
inc
mov
jge
popa
pop
cmp
cdq
mov
sahf
mov
push
jb
je
xor
gs
hlt
int
int3
arpl
push
xchg
test
sub
pop
lods
test
ud1
xchg
fadd
jnp
xchg
loopne
mov
sub
lock
jno
adc
(bad)
mov
add
sub
lods
dec
ret
ficomp
not
xor
add
shr
inc
ds
and
aaa
xchg
fsub
jbe
push
adc
test
jge
dec
adc
(bad)
out
or
(bad)
clc
push
cmp
xchg
jle
dec
xor
into
pop
push
sub
dec
mov
sbb
sbb
call
and
lds
stos
inc
pusha
nop
inc
outs
cmp
in
aas
(bad)
sub
imul
loopne
mov
test
imul
sub
in
adc
imul
pop
loopne
ds
(bad)
loopne
adc
jnp
addr16
dec
pop
daa
or
sub
sub
retf
push
pop
xchg
mov
push
mov
push
xor
mov
push
stos
or
aam
and
mov
sub
mov
daa
cmp
mov
les
jmp
jnp
fs
out
and
jns
push
fdivr
push
out
sar
pop
dec
mov
adc
loopne
and
cmps
frndint
and
cdq
push
push
push
and
xlat
cmp
xlat
pop
cmp
stos
inc
imul
inc
lods
push
add
not
(bad)
add
push
and
mov
ror
sub
push
out
aaa
mov
add
test
(bad)
cmc
sub
fisubr
xor
push
mov
cmc
lods
dec
or
(bad)
sbb
dec
sar
push
call
into
inc
add
out
out
jp
pushf
jb
jb
into
mov
adc
and
cli
(bad)
jl
dec
push
clc
cdq
jge
and
aam
mov
nop
inc
inc
cmp
out
mov
jmp
out
dec
mov
ins
mov
stos
in
dec
pop
sbb
cmp
out
or
adc
sub
xchg
mov
inc
push
ret
(bad)
sub
fdivr
add
fs
(bad)
jmp
rcr
xor
jnp
jmp
mov
sub
movs
mov
adc
sub
mov
std
jge
stos
fst
scas
jae
or
mov
loopne
imul
dec
add
xor
lods
jnp
jb
lds
pusha
mov
arpl
xlat
pop
fistp
jmp
bound
mov
mov
xchg
jge
mov
mov
arpl
pop
(bad)
xchg
xor
shr
sub
sub
ret
jae
mov
sub
adc
sahf
addr16
lahf
popf
push
or
lea
imul
sub
mov
dec
adc
es
dec
xor
sub
or
cs
pop
(bad)
or
or
lahf
int
mov
ss
cmp
std
les
mov
clc
out
mov
mov
or
adc
sbb
test
mov
test
idiv
fisub
scas
clc
and
call
leave
mov
lds
shl
jecxz
jl
ffreep
add
or
call
and
cs
adc
mov
shl
cmp
fisttp
adc
push
in
xchg
ret
pop
std
mov
mov
loope
aas
dec
fimul
pop
popa
sub
and
in
pusha
ds
mov
sub
push
inc
ret
push
jo
fild
push
inc
daa
jns
sub
mov
das
adc
xor
xor
imul
nop
shr
mov
pop
mov
ret
test
test
es
adc
xor
fild
movs
iret
out
add
iret
shl
out
sub
dec
es
shr
cmp
mov
xchg
push
inc
lods
js
or
cmp
pop
cs
movs
cmp
add
addr16
inc
dec
dec
repnz
xor
inc
and
xor
rcl
outs
(bad)
lahf
out
sti
es
mov
xor
dec
mov
nop
xor
jno
jmp
mov
mov
outs
call
(bad)
mov
xchg
out
cmps
stos
js
push
ins
pusha
xor
pop
loopne
mov
ret
and
(bad)
mov
rol
fisubr
shl
ror
jne
xchg
mov
inc
in
ja
lock
cmp
(bad)
push
lahf
dec
and
mov
repnz
scas
xor
mov
pop
jo
fisubr
jp
loopne
adc
pop
test
addr16
rol
paddsw
out
jle
jl
out
cwde
xor
xchg
ds
push
add
jecxz
test
mov
movs
add
push
cmps
(bad)
nop
xlat
nop
jae
test
or
int
and
mov
mov
mov
sbb
xchg
test
stos
push
rol
cwde
movs
clc
sub
fmulp
addr16
sbb
inc
push
sbb
mov
push
mov
retf
mov
push
jecxz
scas
inc
push
mov
mov
adc
or
sub
jne
or
push
xchg
sub
fsub
lea
push
lahf
mov
mov
dec
sub
cld
test
xor
cmps
loop
ins
arpl
adc
les
test
pushf
outs
pusha
xor
scas
adc
jo
dec
pop
retf
mov
lods
mov
push
inc
jmp
sahf
call
jb
push
out
aas
out
cdq
and
cmc
mov
cmps
xchg
int
jle
retf
cmps
cmps
packuswb
dec
cmp
bndldx
mov
or
in
or
(bad)
into
sub
add
inc
add
imul
inc
div
imul
dec
jne
xchg
push
cld
adc
adc
fdivr
std
pop
les
in
cwde
rcr
lods
dec
scas
fst
push
mov
icebp
sbb
pop
sti
or
outs
lock
mov
inc
fdivr
les
mov
jae
or
or
lds
cld
jecxz
pop
jge
push
xchg
idiv
cdq
cld
stos
(bad)
sti
pop
(bad)
fst
sub
pop
xor
lods
jae
cli
xchg
data16
jmp
cmp
mov
(bad)
fwait
loop
inc
mov
and
ror
add
test
sbb
xchg
mov
jg
enter
and
shl
xor
cmps
push
dec
ret
mov
addr16
add
shl
(bad)
iret
arpl
and
aaa
inc
stc
mov
jecxz
lds
fwait
test
es
mov
rcr
inc
imul
lea
or
cmp
mov
sub
or
das
pop
(bad)
fsub
xchg
xor
aas
arpl
cli
(bad)
shr
jp
sbb
inc
cmp
jbe
gs
jns
mov
scas
mov
dec
rcl
scas
(bad)
cdq
cmps
daa
or
rcl
(bad)
out
jge
cmp
sbb
xchg
or
mov
call
ja
mov
and
pop
(bad)
jp
jmp
and
and
pop
adc
inc
xchg
mov
es
frstpm(287
pushf
mov
mov
repz
mov
fidivr
push
std
nop
iret
add
sti
jb
loop
and
cmp
push
xor
test
clc
test
mov
test
push
cmc
push
sub
lock
repnz
hlt
cdq
cmp
xor
push
(bad)
enter
popf
retf
mov
or
xlat
outs
jecxz
iret
mov
dec
jl
xor
push
into
sub
cld
fsubr
addr16
or
xchg
scas
or
sar
mov
popa
push
mov
and
pop
mov
and
inc
inc
loop
stos
sti
push
mov
and
in
fs
add
adc
add
cmps
mov
add
push
and
imul
into
or
mov
es
mov
xchg
(bad)
xor
mov
movs
xchg
scas
int
test
and
(bad)
xchg
lods
in
adc
xor
cmp
gs
repz
lock
jbe
add
test
test
sahf
adc
dec
sub
push
ja
inc
stos
dec
sub
and
cmps
inc
cli
and
mov
push
cwde
fiadd
xchg
in
xor
int3
loopne
(bad)
dec
and
fwait
cld
lea
iret
xchg
xor
add
inc
cmp
je
cmp
xor
(bad)
jle
std
fst
daa
jmp
lock
bound
xor
or
mov
out
pop
add
inc
xor
aas
icebp
xchg
or
pop
enter
pop
in
cmps
in
pusha
cwde
pop
scas
and
mov
cmc
(bad)
dec
cwde
fcom
push
in
sub
jmp
(bad)
daa
lods
or
fwait
lahf
arpl
jp
pop
mov
add
sub
cmp
xchg
shr
pop
xor
jo
daa
jg
xchg
std
or
ret
fnstenv
cmp
leave
lods
pop
mov
dec
rcr
lods
push
enter
jae
aad
sub
ss
(bad)
mov
mov
(bad)
cmp
add
outs
sub
sub
and
std
push
mov
push
push
mov
jecxz
fistp
push
and
rcl
(bad)
in
loop
xor
jns
lods
adc
sbb
(bad)
hlt
or
lock
inc
sbb
sar
arpl
arpl
mov
cmp
call
sub
jmp
mov
in
jmp
cwde
je
adc
outs
add
pushf
xchg
or
add
and
dec
cmp
xlat
and
inc
mov
imul
out
pop
sub
fidiv
push
popa
rol
pop
mov
and
fldcw
not
icebp
mov
leave
adc
dec
cmp
push
pop
xchg
enter
dec
mov
call
jp
mov
scas
fdivr
cmp
jg
dec
adc
mov
add
sbb
cmps
mov
mov
mov
popa
xchg
push
bound
in
sub
pusha
test
cmps
fwait
outs
in
jle
aad
and
or
sahf
fsub
adc
dec
rcl
scas
mov
in
pop
pushf
pop
pushf
das
in
push
lahf
jge
mov
jae
jle
sub
jl
icebp
loop
pop
dec
mov
out
stos
jnp
clc
fld
movs
sub
test
das
aas
sub
sub
jg
sub
sbb
add
add
push
pop
fisttp
shr
scas
pop
test
push
out
jne
outs
dec
mov
mov
rcl
and
inc
jl
and
lea
test
xchg
jnp
mov
lods
rol
mov
iret
sub
jno
mov
push
xchg
adc
mov
int
out
mov
push
push
loope
mov
mov
mov
xchg
retf
adc
movs
jbe
xor
aam
out
test
(bad)
adc
call
mov
inc
stos
cmc
and
inc
les
push
jno
add
sti
scas
hlt
mov
push
(bad)
ins
pop
enter
icebp
sub
sub
xchg
xchg
in
mov
movs
or
aaa
dec
mov
loop
dec
dec
loopne
cmp
test
jo
mov
mov
mov
push
add
xchg
rcr
inc
cmp
icebp
sub
sbb
neg
adc
sbb
cmp
pop
mov
dec
(bad)
lea
fwait
cmp
cdq
mov
sbb
lahf
test
cmps
mov
(bad)
cmp
pushf
mov
jns
inc
ret
jg
ja
cmp
mov
int3
push
dec
pop
inc
xor
int3
mov
sub
test
dec
or
xor
or
shl
fmul
test
fwait
icebp
out
and
test
pop
mov
sbb
mov
mov
fidivr
inc
mov
and
loope
shl
mov
in
es
les
and
inc
mov
clc
js
push
mov
xor
xor
repnz
fisttp
xor
dec
sub
out
mov
iret
out
xchg
and
pop
stos
cmps
mov
add
and
jo
gs
lock
loopne
sbb
rcr
aad
cmps
mov
jbe
pushf
iret
mov
mov
adc
adc
fdiv
inc
in
stc
xor
rcl
cs
and
aaa
xlat
fld
pop
and
lea
stos
add
cmps
dec
test
clc
out
nop
loop
inc
or
mov
ret
or
inc
fst
jo
pop
cld
sbb
test
jns
mov
sbb
outs
mov
lahf
enter
pop
cwde
xchg
gs
pop
addr16
sbb
and
xchg
or
xchg
mov
cdq
sub
sub
out
mov
gs
in
dec
(bad)
mov
mov
(bad)
cmp
cmp
adc
movs
or
mov
sub
les
int3
lods
xchg
ins
cwde
cdq
or
bound
cdq
in
adc
dec
cdq
pop
rcl
nop
pop
mov
out
out
pop
lock
add
pusha
retf
jns
push
adc
cmp
imul
xor
jmp
or
leave
cld
stos
mov
(bad)
(bad)
outs
popf
pop
adc
mov
push
outs
inc
sub
mov
sub
in
cmp
or
(bad)
cs
pop
mov
repz
dec
add
jecxz
jge
test
push
mov
push
into
inc
lods
(bad)
imul
int
sbb
in
je
xor
cmp
pop
mov
jmp
mov
adc
repnz
mov
mov
popa
push
push
movs
push
jle
ret
sub
add
sbb
mov
jbe
mov
mov
cmp
push
aas
pop
mov
push
push
fisttp
mov
scas
ret
mov
inc
shl
mov
pop
lock
pop
dec
inc
cwde
mov
test
movs
lods
and
mov
pop
test
clc
test
bound
push
sbb
std
bound
loope
push
mov
or
scas
in
movs
sub
cdq
clc
stos
xchg
and
dec
pop
add
mov
addr16
test
sbb
loopne
mov
clc
adc
outs
push
cmps
sbb
sti
xchg
call
ja
pusha
hlt
loope
(bad)
adc
jne
icebp
and
(bad)
pop
sti
push
rcr
mov
fcomp
rcl
push
ss
fnstsw
inc
push
jbe
aad
popf
pop
stos
imul
mov
pop
push
sti
inc
jmp
retf
push
mul
and
xchg
hlt
sub
xor
outs
cmc
out
pop
int
fwait
in
jmp
popf
call
cmp
movs
mov
sub
shl
(bad)
mov
mov
lds
sahf
adc
cmp
or
(bad)
(bad)
loope
dec
and
aam
push
mov
and
push
xor
adc
add
sub
inc
xchg
jl
in
jo
adc
popa
sti
sbb
mov
test
arpl
cmps
or
jne
ins
(bad)
repnz
clc
int3
inc
ja
and
xor
and
xchg
outs
and
mov
imul
push
xor
not
jmp
xchg
bound
inc
push
mov
les
dec
xchg
dec
mov
jns
mov
mov
push
pop
xor
jg
and
fcom
push
dec
jae
adc
imul
cmp
out
xchg
sub
inc
test
jae
add
pop
loopne
xchg
or
mov
sub
dec
ret
fs
pop
mov
(bad)
sbb
imul
push
sbb
mov
bound
retf
popa
sahf
inc
test
or
xchg
repz
or
jg
jl
xchg
mov
loopne
adc
lds
lods
jnp
dec
ret
fcomp
xor
scas
call
add
ret
add
dec
in
shl
cdq
icebp
loopne
mov
lock
fwait
mov
or
sub
enter
cwde
jle
ret
fcom
sub
les
xchg
and
jle
jge
scas
pusha
or
ss
push
mov
loopne
pop
into
inc
stos
leave
pop
cld
fidivr
lods
(bad)
fidivr
cli
sti
(bad)
ins
scas
cmc
sbb
push
jno
mov
cld
push
in
push
fst
inc
mov
daa
inc
aam
das
repz
xchg
sub
xchg
jmp
and
cmp
(bad)
mov
lods
pop
add
movs
jmp
adc
iret
pop
and
inc
icebp
inc
aam
int
into
(bad)
ss
mov
or
xor
out
sub
and
add
jo
cs
jmp
dec
rcl
gs
cmp
dec
add
repnz
ins
cmp
mov
mov
jge
push
int
neg
push
test
jne
or
(bad)
sub
pop
push
and
sub
call
cmps
add
fcmovnu
pop
dec
mov
add
and
adc
adc
mov
in
loopne
jns
gs
mov
xor
xor
cmp
ss
pop
out
out
mov
xchg
dec
mov
adc
sub
dec
and
inc
mov
fistp
xor
idiv
and
(bad)
sti
repz
(bad)
ror
gs
jb
inc
out
mov
and
jb
enter
sub
jg
gs
mov
ja
adc
int3
jle
xchg
rol
cmp
stos
leave
pop
mov
fcmovnu
cwde
inc
cli
loopne
add
sub
push
cs
fs
dec
inc
imul
lock
movs
(bad)
jmp
sahf
xchg
je
pop
mov
idiv
mov
push
(bad)
lahf
imul
int
fsub
mov
jno
scas
sbb
jns
ds
dec
fstp
or
sub
mov
ret
mov
xchg
or
cmp
sub
shl
push
fnstsw
xchg
jg
aaa
sbb
xor
sub
xchg
iret
xor
push
inc
or
das
cmp
std
and
pushf
pop
cmps
leave
cmp
add
fisttp
fisttp
xlat
test
inc
ja
and
aaa
push
xchg
pop
mov
sub
loope
pop
stos
cdq
sbb
or
pusha
mov
cmp
sbb
inc
or
into
mov
push
inc
js
ss
aam
mov
gs
pop
xchg
mov
dec
push
leave
jle
in
sbb
jns
data16
sbb
and
mov
int3
xchg
and
sbb
jno
mov
dec
out
shl
mov
rcr
test
xchg
out
cmps
xchg
cmp
mov
cli
pop
sti
js
mov
pop
adc
loop
shr
test
dec
rcr
sub
ret
inc
and
pop
sub
fidivr
sub
jmp
sbb
ja
daa
jge
jb
mov
and
and
and
xchg
lds
cmc
out
fsubr
mov
ja
push
inc
sub
xlat
or
scas
in
movs
add
lahf
pop
aad
mov
mov
mov
jmp
ret
movs
aad
arpl
lea
mov
pop
and
add
mov
sbb
outs
lods
jbe
inc
shr
test
or
daa
js
sbb
sub
leave
jmp
add
call
cmp
mov
inc
fwait
test
xchg
pusha
leave
ds
sti
inc
add
out
test
dec
inc
imul
sub
imul
jns
jns
fsub
pop
fdiv
xor
xor
stos
cmps
aad
jne
mov
les
jns
call
jae
jmp
or
ficomp
pop
inc
and
repnz
xacquire
shl
(bad)
aad
imul
clc
push
and
arpl
push
pop
or
push
xchg
hlt
xchg
inc
jecxz
div
leave
fmul
jmp
int3
loope
cdq
test
add
and
out
cs
push
dec
add
movs
and
gs
or
xor
cmps
jo
stos
imul
leave
dec
inc
mov
xchg
mov
add
inc
arpl
mov
enter
cmps
xlat
cli
test
iret
cmps
sub
push
outs
in
mov
inc
mov
xor
ret
movs
mov
stos
push
mov
fstp
pop
push
pop
out
mov
inc
dec
mov
cmp
push
mov
adc
and
sbb
pop
sub
stos
xchg
jg
pop
mov
sub
lods
(bad)
es
jns
dec
test
popf
xchg
push
inc
add
ds
mov
adc
pop
stos
leave
hlt
or
loopne
push
js
fcomp
arpl
jo
jg
adc
push
in
clc
mov
sub
jmp
stos
dec
push
jecxz
(bad)
je
add
mov
cmp
pushf
or
xor
div
sar
dec
stos
add
dec
add
mov
adc
std
cmp
add
push
hlt
ds
cdq
rol
jmp
icebp
psubb
mov
leave
mov
in
rcl
cmp
lods
push
hlt
mov
cli
jmp
sbb
mov
in
fcomip
push
scas
inc
jne
xchg
aas
or
and
scas
loopne
pushf
ror
das
push
enter
mov
mov
dec
mov
in
add
xor
(bad)
mov
clc
pop
adc
cmps
scas
mov
mov
iret
mov
cmp
inc
mov
inc
retf
sbb
pusha
cld
mov
popf
push
fnstenv
xchg
cmp
jle
mov
adc
jmp
sbb
push
popf
mov
dec
shl
jbe
and
dec
xorps
dec
sub
or
sbb
outs
mov
adc
dec
out
sub
cdq
(bad)
xchg
sahf
rcl
mov
jmp
mov
popa
cld
cmp
add
cmp
dec
mov
push
xchg
stos
cli
xor
sti
pushf
and
shr
(bad)
int
out
mov
std
or
jmp
mov
cwde
aaa
in
mov
xchg
or
cmps
mov
add
and
lock
add
rcr
adc
pop
mov
popa
ja
(bad)
xor
dec
cdq
fld
(bad)
xchg
fwait
test
lods
dec
sub
hlt
test
mov
mov
cmp
cmp
or
adc
or
push
mov
or
cdq
add
mov
or
xor
mov
jmp
push
out
loope
and
or
cmps
es
inc
jl
retf
xchg
push
jmp
dec
jmp
push
adc
test
popf
push
frstor
xor
inc
rcr
loop
push
ds
aas
not
sub
mov
push
or
pop
xchg
out
stos
test
cmp
mov
adc
outs
in
leave
into
add
xchg
add
pusha
ja
into
fadd
pop
jns
mov
add
xchg
call
(bad)
inc
cld
retf
int3
ja
inc
lods
push
sub
push
sti
mov
cmps
mov
mov
mov
push
xor
mov
popf
les
dec
push
mov
xor
mov
(bad)
out
xchg
pop
es
sbb
push
dec
fst
inc
xchg
lods
std
into
and
inc
and
mov
fs
(bad)
nop
nop
sub
mov
jecxz
mov
popa
mov
inc
mov
xor
sahf
popf
call
cmps
and
loopne
int
and
dec
and
out
xor
xchg
(bad)
sub
(bad)
cmp
stos
mov
sti
pop
xor
sbb
gs
adc
mov
pop
inc
lock
rol
mov
(bad)
hlt
stc
push
mov
test
mov
test
mov
pusha
or
wrmsr
push
xchg
inc
sub
mov
jge
mov
sahf
xlat
inc
mov
add
mov
or
ja
(bad)
aas
mov
ret
pop
xchg
add
jb
mov
sub
jmp
jnp
inc
imul
add
dec
vmovshdup
in
dec
and
jo
frstor
(bad)
fs
sbb
loopne
mov
adc
push
das
loope
sub
les
sbb
daa
adc
cmp
hlt
(bad)
and
mov
sbb
shl
aas
nop
push
imul
mov
or
mov
jle
jns
and
pop
(bad)
push
hlt
jge
retf
mov
sub
fldcw
mov
loopne
scas
cmp
les
cdq
cdq
jb
sub
test
sbb
cmp
cs
hlt
cmps
adc
push
loopne
movs
xor
mov
xor
pushf
pop
stos
fisttp
popf
loope
xor
stos
sub
xor
icebp
jp
ror
mov
push
dec
mov
gs
jmp
daa
jns
mov
mov
ss
pusha
cmp
(bad)
sbb
push
add
out
jmp
push
cld
cmp
adc
in
and
in
xor
xor
or
cmp
jno
sbb
js
fs
jmp
cmc
sub
and
xor
push
adc
adc
shl
fst
pop
(bad)
xor
and
out
cmp
sbb
shl
push
test
inc
sub
push
mov
xchg
sbb
out
ja
inc
jge
xlat
pop
(bad)
pusha
fnsave
xor
(bad)
movs
popa
das
sahf
aas
ret
cmps
inc
push
out
and
loop
mov
inc
popf
lods
enter
test
cmp
xchg
call
aas
push
jb
into
retf
sbb
and
dec
xor
retf
test
mov
adc
cmp
popf
inc
pop
vpunpcklwd
adc
cs
mov
push
fist
test
das
adc
jnp
(bad)
jge
es
push
enter
dec
jp
pop
fimul
adc
test
cdq
call
neg
outs
cmp
pop
int
bound
pop
cmc
popf
cmp
inc
and
movs
cwde
in
adc
dec
inc
js
ffree
and
adc
pop
pop
lock
jmp
pop
dec
mov
xchg
jne
pop
mov
mov
and
or
scas
addr16
xor
pop
int
inc
rcl
sub
jb
xor
aaa
iret
(bad)
push
sub
lods
clc
(bad)
push
js
sahf
lahf
sti
and
cmp
enter
push
outs
mov
movs
sub
test
mov
xlat
pop
cmp
call
icebp
sbb
xchg
mov
mov
sub
push
sub
call
imul
sar
mov
add
push
dec
mov
push
scas
inc
cmp
inc
mov
sbb
scas
std
mov
push
mov
dec
sub
add
or
xchg
cwde
cmp
cmps
push
lods
call
into
adc
adc
push
pop
mov
cmps
call
xchg
sub
fist
jo
mov
xchg
inc
jp
test
pop
push
(bad)
test
sub
sbb
out
ds
leave
sti
add
test
pop
or
fwait
call
mov
jmp
inc
cmp
push
call
pop
push
shl
aam
leave
jbe
inc
mov
jnp
sub
cld
or
mov
in
mov
ja
jmp
sub
xor
clc
adc
dec
or
jbe
push
mov
cmc
dec
mov
sub
add
shr
(bad)
jne
das
pop
(bad)
mov
dec
sub
popa
mov
cmp
or
xor
fldcw
adc
mov
in
pop
cmc
sub
repnz
rcl
or
jne
adc
add
sbb
leave
push
ss
and
mov
aaa
fwait
ja
aaa
jns
out
mov
dec
inc
or
into
(bad)
pop
in
jae
sbb
or
inc
js
push
pop
aam
aaa
ficom
pop
inc
xchg
and
mov
pop
bound
jmp
xchg
cmp
xchg
or
mov
sub
sub
and
aas
outs
sub
mov
fcom
cmp
fadd
and
mov
mov
aaa
stc
mov
mov
sub
cmp
push
mov
and
xor
mov
xchg
xor
xlat
jp
ss
int3
(bad)
cli
fild
xchg
not
add
repz
sbb
(bad)
mov
push
jl
jne
inc
popa
jle
mov
xor
add
retf
mov
jb
jmp
xchg
aad
fldenv
cdq
gs
out
push
dec
cli
popa
mov
jae
fsub
aam
pop
test
(bad)
mov
xlat
movs
shr
mov
cdq
fadd
popf
sub
dec
push
push
adc
js
fdivr
ss
neg
cmps
hlt
dec
sub
inc
(bad)
movs
mov
sub
inc
lahf
(bad)
popf
pop
mov
push
sub
fcmovbe
or
or
add
aad
fisubr
pop
push
sti
jg
xchg
jno
lahf
scas
call
add
mov
xchg
jne
mov
jmp
out
push
lods
inc
leave
xchg
rcl
xlat
jo
inc
and
aas
add
rol
jbe
stos
(bad)
test
dec
mov
mov
push
mov
push
cmps
cdq
fdiv
test
cmp
pop
inc
int
loop
adc
inc
lock
(bad)
ds
inc
sub
movs
imul
lea
movs
fist
dec
mov
ins
(bad)
xor
pop
ins
push
movs
push
jns
sub
xchg
sbb
ins
xchg
or
jmp
leave
add
mov
mov
sub
lods
scas
inc
mov
push
daa
cmc
push
inc
das
repz
push
adc
mov
inc
fisttp
nop
addr16
ror
jb
retf
outs
or
(bad)
xor
mov
(bad)
pop
sub
push
and
jno
ins
out
mov
ss
mov
inc
ret
jge
push
add
jno
add
popf
push
adc
lds
(bad)
into
outs
adc
cmps
cli
xor
sub
js
(bad)
cmp
mov
pop
xchg
leave
inc
popf
pop
xchg
retf
out
shr
ret
or
popa
mov
lods
(bad)
in
pusha
std
call
inc
pop
ins
(bad)
ins
stos
pop
jbe
mov
mov
xchg
je
add
out
add
ret
jns
push
jbe
jae
add
out
and
clc
iret
aam
dec
jl
mov
mov
in
or
in
adc
inc
mov
sti
loop
jbe
loope
sbb
ss
rcr
xchg
call
jle
iret
pop
int
aad
fdivr
test
iret
repz
in
(bad)
pop
je
push
sbb
xchg
adc
sub
les
jae
sbb
mov
in
ficomp
push
and
cmps
out
cmps
mov
fnsave
out
mov
jb
cdq
sub
in
outs
outs
pop
jp
sbb
cmp
or
pop
loope
fnstsw
rol
test
mov
outs
fucomip
dec
test
jg
pop
retf
mov
jmp
add
and
das
push
in
retf
(bad)
dec
rcl
mov
jb
xor
sbb
or
repz
inc
(bad)
repnz
push
jne
cmps
push
pop
inc
and
push
or
stos
repnz
pusha
push
jae
cmp
loop
js
lock
out
in
and
call
jbe
and
pushf
or
or
jno
and
stc
imul
jns
cwde
sar
and
adc
mov
xor
call
ja
dec
jbe
dec
std
inc
fidiv
jg
mov
sti
xor
stos
adc
mov
mov
dec
xchg
mov
lahf
in
rcl
int3
sub
sbb
sbb
sbb
xor
mov
sub
scas
xchg
xchg
repnz
push
pop
(bad)
imul
pop
icebp
xchg
add
sbb
hlt
inc
fnstsw
enter
aad
push
ret
sub
(bad)
sbb
inc
or
out
mov
sbb
pop
inc
retf
dec
outs
scas
fimul
(bad)
loope
int
ja
dec
pushf
cmp
ss
ins
add
push
sbb
ins
not
jmp
push
add
xchg
add
xor
adc
(bad)
loopne
xchg
add
pop
xchg
sbb
add
inc
shl
adc
jae
test
xchg
adc
cmp
outs
inc
repz
pop
pop
dec
or
inc
aas
sbb
mov
imul
push
xchg
cld
pop
sahf
(bad)
out
cli
push
aaa
xchg
mov
(bad)
(bad)
js
call
clc
push
push
lds
test
xor
push
dec
mov
sbb
sbb
aaa
mov
and
rcl
fwait
loope
fs
jge
fs
int3
inc
sbb
inc
aaa
jecxz
xchg
add
pop
and
mov
push
and
aas
neg
mov
fwait
scas
nop
xchg
shl
in
sub
ret
cmp
je
hlt
repz
movs
lea
push
scas
cwde
cmp
jne
out
and
shl
test
cld
(bad)
lods
fdivr
jmp
inc
sub
adc
jmp
jmp
sar
sbb
sub
adc
xchg
xchg
outs
test
retf
hlt
mov
cs
in
test
test
xchg
clc
sbb
fcomp
scas
xchg
fisttp
cmps
jecxz
jnp
xor
out
push
fsub
outs
(bad)
fsub
mov
mov
cmps
std
cld
sar
ja
out
stos
and
cmp
jg
xchg
mov
iret
sub
sub
fs
call
push
mov
int
movs
sar
aas
dec
lahf
(bad)
jecxz
je
and
push
movs
fidiv
mov
adc
or
sti
adc
inc
mov
sbb
fwait
test
mov
jmp
xor
arpl
jmp
repz
test
adc
aas
ss
dec
pop
mov
mov
push
pop
jp
dec
(bad)
add
mov
repnz
out
or
push
and
and
mov
in
jl
or
mov
sub
loope
mov
cmp
jmp
call
jbe
mov
cmps
adc
cs
fwait
sahf
clc
cmp
sub
mov
and
xor
(bad)
out
in
scas
xchg
and
adc
div
nop
in
movs
add
jae
loopne
les
cmps
jg
dec
outs
cli
add
push
je
mov
push
dec
fdiv
fdivr
test
adc
push
cmc
(bad)
sub
jl
xchg
add
jge
inc
xchg
nop
iret
dec
bound
or
stos
or
or
fidivr
push
popf
cmc
jne
dec
mov
out
adc
int
xor
xchg
ret
push
ret
mov
pop
add
dec
fisubr
scas
adc
xor
xor
das
push
sbb
sub
les
cmp
jge
out
loop
cmps
test
pop
pop
cmp
out
mov
jecxz
outs
jb
loopne
int
(bad)
pop
sbb
jae
jne
xchg
test
pop
cmc
retf
scas
out
sahf
test
pop
mov
jo
pop
ret
sbb
add
sub
movs
dec
jnp
xlat
inc
in
call
in
dec
inc
cmc
pop
sbb
ror
les
jb
xor
stos
cld
enter
jns
mov
sub
sbb
cmp
pop
dec
ret
add
mov
bnd
iret
cdq
gs
mov
mov
mov
mov
xor
cld
push
adc
bound
mov
stos
(bad)
test
ins
je
adc
mov
in
jg
repz
sub
in
push
cmp
and
jge
ins
mov
hlt
push
dec
push
movs
adc
fisttp
movs
mov
lods
cmp
cmc
add
mov
sbb
sub
adc
int3
dec
or
jnp
shl
jge
push
mov
out
add
xor
pop
das
inc
(bad)
daa
xor
out
adc
add
mov
stos
push
pop
inc
dec
mov
mov
test
xchg
xor
cmp
add
add
out
add
enter
bound
out
mov
xchg
jmp
je
out
jae
out
pop
push
push
mov
lea
inc
xor
xor
test
int3
xchg
sub
mov
mov
lahf
retf
inc
scas
aaa
cld
popf
lock
or
mov
mov
ins
mov
imul
mov
les
push
fisubr
cmc
jmp
lea
lahf
and
(bad)
push
inc
xor
add
push
lods
sub
or
icebp
imul
jnp
arpl
adc
add
sar
mov
loop
int
dec
inc
lea
retf
jg
xor
mov
ds
push
cmp
ins
inc
out
xchg
pop
or
jle
shl
mov
call
or
call
ins
mov
jg
lea
rol
push
test
pop
cmp
imul
cdq
fstp
adc
into
adc
mov
jns
sbb
ficomp
mov
shl
in
xchg
fsubp
loop
stos
and
sbb
mov
pop
pop
daa
movs
sti
sti
cmps
jge
adc
das
bound
cmp
std
jle
pop
fsubr
scas
jge
sti
push
fiadd
mov
lea
or
xor
push
(bad)
leave
pop
lahf
pop
dec
push
(bad)
xchg
jmp
rcr
call
mov
add
sub
push
mov
lahf
int3
retf
inc
out
xor
sub
jno
clc
mov
push
retf
pushf
adc
xchg
jl
adc
popa
pop
jne
dec
dec
sub
fnstsw
cmp
cmp
mov
jae
inc
aam
xchg
push
fnstcw
ins
jg
mov
cmp
jmp
clc
(bad)
addr16
mov
or
jno
adc
stc
add
icebp
push
test
xor
mov
inc
(bad)
in
clc
repnz
sub
cmp
push
push
jecxz
not
add
pusha
scas
clc
adc
cmc
mov
mov
es
cmp
lock
adc
out
inc
and
push
push
sahf
jae
mov
sbb
push
fstp
aas
jno
ret
add
xor
in
test
test
stc
jo
push
pushf
and
retf
in
xchg
daa
sbb
data16
jmp
xchg
push
and
call
pop
xchg
(bad)
enter
test
mov
das
ret
inc
cmp
mov
rol
dec
push
das
dec
cmp
cdq
mov
inc
or
sbb
aad
rcl
push
enter
aad
inc
cmp
xor
out
fistp
add
call
cdq
mov
into
push
test
ret
xor
std
inc
and
mov
mov
push
hlt
test
sbb
outs
adc
ins
mov
add
fs
add
xchg
adc
mov
xchg
loop
xchg
mov
and
pushf
retf
xor
mov
push
dec
stc
mov
sub
dec
or
int3
inc
in
xchg
addr16
sub
repz
xchg
test
es
fsub
and
jo
inc
aam
nop
les
push
(bad)
mov
scas
pop
add
(bad)
jb
mov
aad
fimul
pop
pushf
push
push
outs
mov
mov
(bad)
das
cld
rcr
cmc
cmc
sub
inc
cmc
sar
xlat
iret
cs
out
jl
pop
inc
xchg
(bad)
or
xor
add
add
pop
xor
ds
push
and
sti
out
sbb
cli
retf
shr
push
shl
dec
cmps
inc
dec
or
jno
dec
dec
daa
pop
mov
or
dec
or
vpunpckhqdq
call
adc
mov
adc
imul
repz
cmp
mov
enter
fistp
mov
xor
push
xor
mov
cmc
aad
fst
add
xchg
nop
jno
das
(bad)
movs
mov
int
test
(bad)
lock
movs
das
pcmpeqw
popf
sbb
repnz
stos
(bad)
ins
enter
fdivr
pop
inc
jae
sbb
add
jbe
ds
mov
data16
jnp
push
(bad)
ret
adc
xor
add
das
mov
and
lock
sbb
js
adc
imul
(bad)
fdivr
ins
imul
pop
xor
cmp
repz
jmp
fdivr
mov
pop
stos
test
gs
in
fild
jbe
dec
inc
xchg
sbb
sub
sub
cmc
js
enter
scas
call
inc
and
js
and
enter
stos
and
cmps
pop
and
outs
pusha
lea
mov
int
(bad)
or
into
mov
pop
ds
stos
xchg
jge
or
lods
js
ds
int3
push
lods
pop
stc
icebp
aaa
adc
mov
xor
lods
test
mov
(bad)
xchg
out
stos
sub
mov
repz
pop
mov
out
and
or
jns
mov
clc
inc
fbstp
clc
xor
popa
mov
inc
cmp
dec
or
rcr
add
add
aam
inc
pop
inc
mov
xor
inc
push
inc
clc
leave
pop
stos
jmp
add
mov
and
xchg
inc
pushf
sbb
loopne
xchg
leave
sti
push
gs
pushf
lahf
ret
iret
iret
scas
sbb
call
pop
ret
lds
mov
mov
add
cmp
sbb
xor
adc
(bad)
push
and
mov
sub
cmp
mov
cmps
xchg
push
add
push
loope
pop
mov
sub
jno
fadd
into
neg
les
mov
pop
sub
(bad)
test
aam
rcl
repz
xchg
rcl
and
jae
mov
das
sahf
ja
rol
clc
lods
lods
ret
and
sbb
mov
call
lock
mov
xchg
push
imul
shl
outs
xor
cmp
mov
arpl
xchg
aas
xor
enter
lods
out
stc
adc
mov
out
call
daa
imul
jg
sub
(bad)
sahf
mov
xchg
pop
and
sbb
xchg
adc
push
mov
sar
test
das
adc
ror
daa
(bad)
and
mov
shr
mov
(bad)
imul
mov
or
stc
push
cmp
add
inc
jecxz
jmp
cdq
or
jle
pop
sbb
clc
bnd
mov
push
test
mov
aaa
pop
dec
xchg
call
clc
clc
cmps
call
movs
out
cmp
imul
pop
das
das
into
pop
pop
fwait
xor
mov
inc
cmp
shr
loop
mov
jle
xchg
cli
sar
in
or
into
loop
rcl
adc
xchg
cmps
jo
int3
sbb
mov
pop
test
cmps
inc
mov
dec
mov
push
mov
pop
dec
mov
loop
dec
mov
push
inc
or
sbb
ds
pop
adc
out
inc
mov
shl
arpl
xlat
xchg
add
mov
adc
jl
jns
test
bound
sub
das
xor
jl
cmps
xchg
addr16
inc
mov
out
dec
adc
mov
(bad)
mov
sub
jno
dec
add
mov
bound
dec
inc
popf
push
hlt
mov
dec
mov
addr16
daa
cwde
retf
or
push
div
push
addr16
or
into
xchg
test
xchg
(bad)
add
xchg
sbb
cmp
jecxz
pop
outs
mov
iret
sub
stos
loope
clc
neg
or
mov
or
add
cli
int3
pusha
aaa
in
pop
pop
push
enter
fmul
repz
popa
xchg
ja
mov
rol
or
jecxz
jmp
mov
loope
add
aaa
ret
dec
shl
adc
sub
cmc
arpl
fstp
mov
mov
sub
into
shr
aam
fbld
push
cmp
xor
icebp
jmp
loop
movs
ss
(bad)
xchg
aam
and
push
xchg
jecxz
push
xchg
cmps
sti
cwde
out
xchg
ins
lahf
dec
out
hlt
jecxz
jo
adc
les
cdq
cld
(bad)
jg
push
ja
jg
sahf
sub
xchg
and
fidivr
and
cmp
stos
call
xor
push
out
enter
loope
lds
mov
popf
popf
pop
addr16
nop
jae
pop
push
(bad)
out
cmp
aad
and
xchg
ds
fist
sub
sub
xchg
test
ret
repnz
jmp
aad
sub
xchg
push
aaa
ins
nop
daa
pusha
xchg
sub
rol
mov
add
xchg
stos
mov
or
test
jecxz
daa
icebp
cmps
xor
mov
mov
imul
pop
fmul
cwde
push
stos
ins
xchg
daa
das
xlat
jge
adc
sub
or
pop
jbe
dec
std
cwde
loope
mov
es
push
mov
dec
int
idiv
adc
push
idiv
xor
lahf
cmp
add
pop
inc
dec
inc
dec
adc
mov
or
scas
push
jne
les
push
xor
add
cmp
jo
add
lds
push
xchg
cmp
dec
stc
mov
xor
pop
jge
enter
push
dec
sbb
lods
shl
adc
cmp
or
xchg
test
fwait
cwde
js
and
(bad)
gs
inc
xchg
sub
cmp
sar
fcom
(bad)
sbb
mov
dec
mov
lea
inc
adc
sbb
adc
xchg
push
mov
dec
(bad)
jns
add
inc
js
in
fcom
mov
sti
cdq
ss
adc
mov
push
das
rcr
dec
fwait
out
sub
retf
(bad)
pusha
scas
mov
cmp
inc
mov
xor
sub
and
adc
sbb
or
dec
sti
xchg
jb
leave
dec
mov
sbb
mov
arpl
int
jbe
add
cmp
sub
and
stos
les
add
add
dec
int3
vmmcall
ja
xor
xor
add
jle
hlt
mov
push
retf
cmc
mov
pushf
cli
aam
sub
(bad)
pop
jp
and
mov
(bad)
adc
jo
ja
sbb
das
rcr
stos
pop
inc
arpl
jle
imul
rcr
adc
in
pop
inc
fdivr
bound
out
xor
(bad)
ficom
pop
jnp
scas
mov
push
push
and
jle
xor
data16
ins
push
mov
iret
in
xchg
es
(bad)
mov
dec
fwait
in
push
jae
mov
shl
jle
jmp
adc
adc
sbb
cmp
call
cmps
fiadd
pop
jecxz
ds
jno
movs
sti
pop
xchg
dec
xor
add
popf
sub
mov
mov
dec
(bad)
mov
into
dec
rol
jnp
jp
inc
loopne
mov
jb
(bad)
push
sbb
stos
adc
mov
pop
out
(bad)
adc
and
jne
ds
and
loopne
jp
add
add
mov
mov
cmp
(bad)
lds
cmp
sbb
neg
inc
jmp
add
xchg
lahf
ins
pop
lock
mov
mov
imul
dec
xchg
iret
pop
out
cs
std
int3
mov
jle
inc
dec
adc
ret
push
loopne
or
xchg
ds
stos
pop
push
adc
mov
jb
push
cld
jmp
fcomp
aaa
idiv
stc
xor
or
sbb
or
cs
je
pushf
loope
dec
imul
cdq
push
mov
jge
xor
jb
pop
xchg
push
ror
cs
daa
xchg
jge
(bad)
ds
push
lahf
stc
pop
lods
jo
fnstenv
pop
lahf
pop
mov
push
je
mov
jle
mov
mov
jl
shr
aas
repnz
cmp
xor
enter
int
mov
jp
dec
mov
mov
xchg
adc
inc
cmp
test
mov
jo
test
nop
not
ficomp
repz
aaa
or
test
sbb
les
jbe
es
shl
xchg
push
mov
int
test
fcmovnu
pop
int
pop
push
outs
cld
inc
ja
test
fmul
sub
pop
ja
cmp
mov
dec
fdiv
sti
les
ficomp
dec
sahf
sbb
ins
mov
test
jge
cs
xor
mov
xor
(bad)
(bad)
xor
retf
mov
or
lds
popf
dec
add
js
daa
jecxz
jae
xchg
js
jne
(bad)
cmp
js
adc
and
movs
xchg
inc
mov
cdq
fs
or
jbe
mov
jg
ret
sbb
mov
cli
xor
rcl
or
add
push
clc
pusha
mov
gs
cwde
stos
mov
fcomp
retf
mov
(bad)
xor
inc
sub
rol
adc
hlt
jp
ss
lods
xchg
sub
sub
cmps
sar
dec
inc
mov
daa
sub
sub
repz
daa
inc
pop
ja
stos
imul
mov
out
mov
and
push
adc
mov
mov
in
stos
cmp
(bad)
jp
pop
push
enter
mov
cmps
je
test
outs
add
outs
imul
dec
mov
push
sti
adc
jmp
adc
mov
repz
out
int3
pop
in
push
mov
fimul
shl
and
mov
adc
mov
lock
or
lods
loope
fwait
inc
rcl
loope
aas
adc
pop
jecxz
xchg
ins
clc
mov
daa
mov
gs
push
stc
(bad)
pop
cmps
jle
movs
(bad)
mov
pop
pop
movs
push
mov
jmp
pop
cmp
aas
fistp
push
pop
and
jne
dec
cdq
jnp
adc
inc
in
cmp
mov
es
shl
mov
sti
jecxz
stc
sbb
and
mov
ret
movntps
test
mov
push
adc
ins
xchg
fs
jae
ja
dec
sub
push
inc
add
jecxz
mov
adc
mov
enter
adc
jns
and
cmp
in
clc
loope
mov
lahf
repz
(bad)
repz
call
mov
push
or
adc
cwde
push
inc
clc
adc
retf
and
ret
dec
jl
jle
stos
add
jmp
mov
push
push
push
inc
retf
out
cmc
xor
dec
cmp
xchg
inc
sahf
arpl
sbb
mov
mov
les
jae
cmp
adc
and
dec
ret
pop
inc
test
ficomp
push
adc
test
pop
sbb
adc
aas
add
loope
cmp
adc
xchg
push
fisub
retf
jb
fs
cmc
loope
jns
sbb
das
mov
adc
rol
fadd
jmp
jp
das
aam
xchg
test
pushf
shr
outs
sahf
mov
sti
jne
xchg
out
pop
lea
outs
mov
repz
push
jno
dec
outs
ds
and
mov
icebp
ss
ds
mov
xor
pop
dec
call
cli
shl
test
std
mov
inc
ins
xor
lods
push
adc
dec
lea
xchg
(bad)
sbb
ins
and
push
out
mov
bound
pop
xor
in
out
gs
movs
icebp
and
mov
jno
xchg
lds
sbb
bound
lds
dec
inc
inc
jae
jo
stc
cmc
ja
mov
inc
int
aaa
push
or
push
les
mov
jb
iret
pop
nop
cs
mov
jns
jle
fs
push
add
into
iret
cmp
call
ret
hlt
loopne
pushf
sar
mov
cmps
mov
push
cdq
pop
or
cmps
iret
test
push
pushf
sbb
inc
inc
shl
fild
aam
aas
cmps
mov
js
mov
xchg
nop
jl
fwait
inc
or
cmp
mov
jg
loope
sbb
xor
or
nop
leave
push
mov
sar
xor
sbb
adc
sbb
add
popf
jmp
and
jl
rcl
scas
mov
fldcw
pextrw
outs
loope
popf
pop
sub
je
repnz
sti
and
xor
mov
out
stc
xor
repnz
push
adc
push
popa
dec
xor
jecxz
ffree
push
jae
adc
sbb
xor
not
out
fbstp
xor
mov
pop
add
push
(bad)
jle
jp
sub
add
fistp
mov
outs
sub
pop
mov
mov
adc
cmps
jg
push
sbb
pop
dec
adc
push
jno
shr
jns
aad
fsub
and
add
popf
imul
into
stc
call
stos
push
mov
stos
sbb
pop
cld
xchg
jo
mov
mov
and
bound
mov
enter
pop
retf
xchg
sbb
xchg
mov
and
pop
fsubr
(bad)
mov
push
sub
sti
push
outs
pop
loopne
adc
lahf
or
aas
xor
aas
xchg
sbb
pop
mov
popf
int3
daa
push
dec
sar
mov
ins
jns
mov
scas
btc
sbb
or
imul
push
dec
inc
pop
loope
add
and
mov
inc
push
arpl
mov
dec
sbb
pcmpeqw
sub
or
inc
pop
es
jnp
sbb
add
mov
add
pop
mov
fld
xchg
(bad)
push
sub
outs
mov
pop
or
imul
inc
sub
mov
and
out
pop
(bad)
mov
leave
imul
test
xchg
and
test
sub
jne
cmp
add
aam
arpl
sub
into
mov
ja
lea
js
add
or
std
push
daa
call
shl
xchg
in
out
out
xor
xchg
sti
out
or
dec
test
fnstenv
inc
lahf
mov
sbb
and
or
aaa
test
add
cs
call
dec
mov
test
nop
stos
mov
xchg
repnz
xor
test
icebp
shr
scas
inc
mov
sbb
cdq
les
push
inc
popf
aaa
inc
cmps
pop
pop
fs
clc
retf
and
(bad)
mov
sar
jl
mov
aam
pop
dec
in
pop
push
pop
test
jge
xchg
aaa
jno
dec
dec
das
test
int
fnstsw
jg
xchg
(bad)
add
xchg
icebp
cmc
xor
popa
je
lods
or
test
addr16
scas
fstp
sbb
pop
shl
out
lds
push
shr
and
add
fdivr
mov
adc
cdq
push
cmp
adc
add
xchg
adc
mov
pop
(bad)
jne
ss
add
repz
dec
mov
dec
mov
fld
pop
jne
mov
xor
inc
int3
bound
je
push
push
lds
sbb
mov
sbb
iret
(bad)
fiadd
mov
movs
mov
aas
and
sar
daa
mov
cdq
cmp
cld
cmp
push
push
push
xor
mov
loopne
into
push
xlat
push
or
mov
or
ins
cld
ja
rcl
test
(bad)
les
mov
cmp
pop
iret
sub
jno
mov
pop
push
ret
adc
test
es
jnp
push
lds
and
pop
(bad)
retf
nop
lods
retf
in
stc
adc
xor
xchg
xchg
fimul
mov
add
sbb
movs
into
pop
xchg
ret
xchg
retf
jmp
mov
rcl
std
xchg
adc
ror
mov
mov
sub
cmp
rcl
imul
aaa
push
fadd
sti
pop
jle
out
jmp
iret
sbb
mov
sbb
adc
jg
and
pop
inc
sub
clc
cld
cmp
cmp
push
js
dec
add
mov
iret
leave
cwde
enter
sti
call
inc
add
mov
mov
dec
push
outs
not
fwait
push
test
mov
popa
test
or
rcl
sahf
clc
sub
pop
xchg
xchg
adc
xchg
and
fcomp
xor
dec
stos
push
cmc
xor
frstor
cmp
jge
cmp
lods
(bad)
mov
jecxz
lock
mov
xchg
in
aam
xor
imul
cmp
pop
repz
aaa
cmp
dec
xlat
jne
pop
mov
push
(bad)
jmp
mov
adc
ret
mov
test
mov
mov
and
(bad)
(bad)
repnz
and
adc
ja
dec
arpl
pop
addr16
xor
fidivr
loopne
or
ss
mov
cmp
retf
not
mov
lods
adc
mov
movs
dec
ret
jle
(bad)
test
retf
or
xor
imul
pushf
jno
rcl
int3
aas
push
dec
fs
pop
jo
scas
adc
pop
ror
cmp
or
dec
cdq
pop
das
fld
sbb
repnz
popa
pop
push
push
imul
or
(bad)
pop
add
inc
pop
jp
retf
jge
add
shr
mov
push
cs
leave
test
fsub
xor
inc
push
imul
jb
mov
adc
call
das
lea
movntq
icebp
(bad)
ror
push
xchg
vmovntpd
and
sub
pop
mov
in
push
jecxz
mov
mov
pop
jg
jmp
rcl
in
mov
faddp
add
inc
jb
rcl
dec
das
sub
push
in
sbb
dec
sub
cdq
fidivr
popf
sahf
push
inc
xchg
dec
push
or
pop
sbb
icebp
lock
and
jae
xchg
stos
sbb
jmp
scas
and
or
sub
loope
dec
jmp
jmp
inc
(bad)
pusha
xchg
adc
les
je
hlt
dec
clc
lods
call
or
jge
or
or
push
sbb
xchg
jmp
mov
mov
test
or
mov
pop
cmc
xchg
cld
retf
inc
(bad)
xlat
add
inc
data16
mov
ins
arpl
sbb
sub
es
push
cmp
aaa
dec
dec
pop
int
inc
mov
xchg
jnp
jp
dec
jle
adc
les
sahf
dec
popa
cmps
dec
arpl
stos
pop
neg
scas
leave
in
push
add
(bad)
scas
mov
or
gs
mov
mov
cwde
and
mov
shr
add
leave
adc
inc
push
ss
or
mov
lock
ja
call
jb
xchg
call
(bad)
lds
adc
push
(bad)
inc
push
outs
and
pusha
dec
mov
inc
(bad)
out
inc
sbb
dec
arpl
xor
mov
inc
dec
add
xchg
scas
and
aam
dec
aas
test
or
sbb
and
loopne
test
add
sbb
inc
std
mov
jno
cli
jge
cli
xor
sar
jns
jmp
dec
in
pop
mov
movs
inc
ins
jne
mov
fbld
push
aam
push
add
lods
pop
add
adc
mov
adc
gs
and
(bad)
cmp
pop
popf
push
mov
cmp
sub
push
push
aam
push
xor
xchg
xchg
in
pop
ds
aaa
enter
dec
outs
push
inc
fiadd
sar
xchg
xor
add
and
(bad)
mov
inc
sbb
fxch
mov
test
loopne
dec
ret
movs
cs
or
sub
shr
cs
sub
rcl
mov
cwde
add
cmp
test
cmp
hlt
call
sbb
xor
imul
add
(bad)
stos
addr16
push
pop
mov
xchg
cld
lds
cmc
cmp
mov
aaa
neg
sub
mov
cmps
pop
and
push
xchg
inc
jge
mov
(bad)
sub
aam
mov
movs
adc
push
loope
scas
or
xor
cmps
cs
loope
xchg
mov
push
stos
inc
dec
ins
inc
mov
pushf
mov
and
jmp
and
lahf
rol
popa
xor
ins
mov
and
inc
imul
pop
adc
sub
xchg
pop
push
loope
dec
xchg
(bad)
rcr
addr16
pop
push
or
adc
lods
push
sbb
and
mov
ss
icebp
or
fwait
aas
dec
dec
cmc
clc
popa
das
faddp
push
push
sti
std
hlt
sbb
stc
mov
aad
xor
fadd
mov
xor
scas
icebp
js
stos
mov
gs
jb
js
or
jne
bound
stos
xor
cmps
or
aas
int
pop
ret
sub
push
lock
loopne
in
and
scas
jo
cmp
adc
push
sub
sahf
or
pop
xor
jae
dec
out
xchg
ss
clc
mov
je
push
scas
xchg
popf
push
mov
pop
xchg
mov
pop
(bad)
cmc
nop
and
dec
and
outs
add
xchg
sub
ret
or
repnz
nop
xor
mov
dec
or
into
sub
jmp
int3
stos
sbb
and
mov
and
mov
mov
fwait
in
sub
sub
shl
dec
xlat
iret
(bad)
mov
sub
pop
adc
in
loope
cmp
xchg
in
dec
xchg
adc
sahf
push
or
inc
pop
std
adc
jbe
loopne
scas
dec
mov
int3
cs
dec
cmps
mov
inc
mov
rol
push
push
xchg
dec
cs
add
mov
sub
dec
mov
xchg
xor
movs
les
das
imul
bound
and
cmp
jb
out
fidiv
ss
movs
pop
push
jae
mov
dec
mov
add
movs
(bad)
sbb
add
test
cld
inc
imul
fcomp
imul
repz
loope
xlat
fisttp
repnz
mov
xor
sub
imul
rcl
or
xor
mov
mov
fs
sar
sub
adc
mov
dec
imul
(bad)
loopne
adc
jne
xchg
data16
cmp
scas
sti
sar
cmps
sub
jecxz
cmp
and
jae
xchg
mov
and
sub
repnz
pop
cmps
cs
arpl
lds
aad
adc
je
jnp
mov
(bad)
or
and
jp
(bad)
(bad)
pop
pop
add
lock
and
inc
(bad)
repz
sbb
cmp
and
push
xor
rcr
sub
outs
jnp
or
jmp
mov
mov
mov
mov
push
inc
cli
mov
sti
(bad)
hlt
es
jl
dec
sar
inc
bound
xor
ret
push
fisttp
out
ror
aaa
cmps
push
in
js
neg
cmps
aam
and
fs
nop
stc
mov
sbb
lods
in
inc
test
stc
pop
mov
pop
ret
shr
std
loopne
or
xchg
jbe
div
sbb
repz
shl
(bad)
(bad)
cld
cmp
mov
call
xchg
popa
pop
call
sbb
mov
(bad)
stc
leave
test
mov
loope
mov
(bad)
pop
push
and
dec
cmp
push
or
jb
loope
push
or
or
mov
or
scas
ror
sahf
ds
out
adc
out
imul
mov
sbb
int3
mov
das
jns
push
in
ficomp
fst
fsub
shl
ins
push
cmp
test
jecxz
outs
movs
ror
call
inc
jae
out
ins
ds
jbe
mov
aaa
ret
push
mov
pop
call
ficomp
hlt
pop
aas
add
and
inc
xor
inc
mov
adc
dec
sub
sub
int
and
rcr
enter
sahf
push
cdq
mov
mov
repnz
adc
sti
mov
cld
out
call
mov
stc
cwde
push
jbe
xchg
lds
push
mov
cmp
mov
neg
out
mov
sub
dec
call
and
les
pop
mov
mov
inc
bound
cmp
or
mov
pop
adc
lahf
add
(bad)
jl
sub
xor
mov
test
repz
inc
xchg
mov
test
jg
mov
les
xchg
hlt
imul
sub
xlat
xor
movs
cmps
inc
call
push
jge
pop
cmc
xchg
in
scas
popf
pop
stos
adc
cmp
mov
stos
cmp
sbb
iret
shr
addr16
xor
ins
unpcklps
dec
aaa
fadd
cmp
inc
js
jno
fistp
xor
ret
(bad)
ror
fwait
mov
int3
es
cld
das
outs
bound
call
jge
out
inc
adc
psubw
mov
jp
mov
jecxz
fldcw
ja
xor
sub
jecxz
jb
or
or
mov
sbb
mov
mov
cli
adc
(bad)
iret
sti
or
xor
hlt
icebp
inc
cmps
(bad)
scas
cmp
icebp
inc
pop
pop
jae
cmps
sahf
mov
and
ins
mov
nop
cmp
cwde
pop
hlt
retf
call
inc
xchg
and
sbb
jmp
mov
mov
cmp
push
jne
ret
mov
push
jmp
adc
outs
loop
add
mov
clc
ins
pop
loope
shl
js
call
scas
fsub
jp
sub
pop
xchg
cmp
mov
jno
push
int
test
scas
sub
ja
pop
mov
xchg
icebp
and
addr16
xchg
nop
or
or
and
sbb
call
xchg
fstp
mov
push
dec
dec
in
lods
dec
cmp
fndisi(8087
das
mov
int
fcmovnbe
scas
rcr
cmp
push
pop
out
and
add
dec
fild
jp
jb
push
mov
loop
jno
xchg
pop
ins
mov
and
cmp
ret
dec
rcl
fistp
jbe
(bad)
call
out
hlt
push
push
inc
aam
push
test
and
test
retf
adc
cmp
add
popf
imul
sahf
jae
(bad)
inc
stos
mov
neg
xchg
add
mov
out
scas
(bad)
fsub
mov
adc
xchg
icebp
leave
retf
mov
mov
jge
mov
outs
pop
cmp
cmp
cld
daa
xor
pop
dec
add
jbe
int
push
xchg
(bad)
cdq
and
add
stc
inc
dec
lods
clc
pop
or
pushw
icebp
(bad)
jno
pusha
jnp
adc
scas
fcom
xchg
cmp
aam
mov
loope
push
std
out
stos
xchg
push
cli
jno
push
repz
push
cli
icebp
jae
in
xchg
jg
pop
xchg
daa
and
mov
add
xor
sub
sbb
das
out
(bad)
enter
mov
sub
ss
xor
push
fsub
fidiv
test
frstor
push
cmp
lock
cmp
xchg
fisttp
stc
iret
push
cmp
cmps
int3
sti
cmp
dec
push
mov
fldcw
imul
cmp
jo
fcomip
push
jb
mov
inc
jo
pop
sbb
and
inc
cld
cmp
scas
sub
mov
xlat
cmp
cs
mov
idiv
inc
dec
push
add
stc
ins
test
in
arpl
pushf
mov
js
jmp
aaa
mov
pop
add
xor
leave
cwde
scas
xor
push
dec
sbb
cmp
xor
xchg
pop
sbb
out
jp
xor
pop
imul
xchg
xor
lock
mov
cld
mov
jo
xchg
push
lds
in
stos
(bad)
mov
pop
popf
idiv
fcomp
sbb
pop
mov
out
retf
add
sar
test
pop
xchg
and
push
jge
cwde
push
inc
or
cmps
dec
movs
retf
mov
ss
and
fisub
aas
jmp
or
jg
jb
clc
fcomp
jg
sub
rcl
add
sti
mov
dec
xchg
push
cmp
mov
push
and
int3
mov
aam
retf
(bad)
cli
stos
scas
mov
and
fild
jb
push
add
jno
pop
xor
mov
cmp
xchg
push
ret
in
jns
icebp
pusha
(bad)
jp
xchg
sar
retf
(bad)
popf
dec
popa
push
adc
shr
loopne
jle
jns
fiadd
mov
test
sub
gs
sbb
ins
push
push
cmps
inc
xor
jns
jae
aad
outs
jmp
jle
fld
cmc
ins
push
retf
ins
leave
mov
jg
rol
ins
or
repz
push
(bad)
shl
xchg
push
inc
inc
pop
sub
adc
xor
dec
ja
push
xchg
pop
push
xor
sub
xor
mov
sub
push
(bad)
mov
mov
aad
and
dec
jmp
call
arpl
dec
xlat
and
mov
jmp
sbb
stos
and
xor
mov
mov
cdq
ret
pop
and
cmc
test
push
scas
cmp
sar
jmp
sub
ss
dec
pusha
fucompp
add
movs
push
push
or
or
bound
adc
and
ss
cmp
scas
fsub
sbb
inc
inc
jecxz
sub
test
cld
inc
xchg
mov
dec
mov
jmp
pop
jge
test
ret
outs
addr16
shr
jmp
cmc
cmps
push
sbb
mov
pop
test
push
and
leave
dec
push
xor
jbe
mov
jno
or
dec
mov
sub
mov
data16
sbb
leave
call
fwait
mov
out
iret
daa
push
fs
and
popa
or
or
mov
ret
xchg
pop
shl
inc
xor
movs
rcr
ins
inc
mov
cs
out
xchg
inc
xchg
jo
nop
sub
inc
push
pop
loopne
push
mov
popf
loop
in
pop
cmp
rcl
mov
ss
enter
rcl
inc
ror
xor
and
das
dec
ja
out
call
lahf
sub
loopne
mov
cdq
mov
xchg
push
das
repz
retf
fidiv
je
arpl
add
dec
mov
push
in
inc
gs
push
icebp
dec
sbb
loope
fucomi
lock
fcom
cdq
enter
inc
mov
jns
pop
and
mov
stc
sbb
sbb
xchg
test
mov
(bad)
ror
pop
fs
lock
jl
scas
loope
push
pop
adc
mov
fcmovu
fmul
sbb
ins
cmp
sub
shr
cmps
int3
push
pop
pop
frstor
pushaw
push
bound
push
jbe
jne
or
cmps
ror
sub
loopne
ret
outs
pop
loopne
scas
mov
sbb
aas
push
xchg
dec
shl
ins
mov
or
xor
mov
fimul
dec
add
pop
(bad)
dec
jmp
adc
inc
sbb
dec
frstor
cli
data16
mov
adc
je
popf
mov
(bad)
jne
sub
inc
cmps
adc
adc
fstp
xchg
or
xor
dec
lds
xchg
clc
inc
in
retf
in
je
fistp
fimul
(bad)
jg
mov
(bad)
fdiv
pop
xor
sub
es
push
add
out
jl
data16
outs
int
ins
xchg
call
leave
inc
jb
dec
cwde
loop
pop
cmp
cmp
rcl
xchg
jbe
fs
xor
scas
mov
fisttp
sbb
cmp
rcl
lds
push
dec
jae
xchg
retf
stc
dec
dec
xchg
jbe
test
push
int3
pushf
xchg
xchg
pop
mov
pop
arpl
push
aaa
icebp
div
inc
mov
pop
out
retf
ins
std
inc
test
mov
inc
and
cmp
cld
lahf
push
dec
xor
or
cmp
inc
mov
jp
popf
ja
les
out
jbe
lods
mov
jne
inc
jmp
adc
inc
dec
xchg
in
cli
sbb
dec
mov
int3
pop
loopne
and
mov
movs
push
retf
mov
pop
sub
loop
jl
mov
pop
add
das
test
sub
dec
push
out
loope
jbe
mov
mov
sbb
and
xor
scas
push
loope
mov
mov
js
sub
ss
cmps
mov
pop
jo
dec
jb
xchg
outs
arpl
mov
imul
or
push
cwde
leave
jae
push
adc
cdq
out
aam
adc
cli
shr
inc
ror
jmp
add
xor
mov
cmp
mov
jge
sub
loop
(bad)
stc
mov
push
cmc
shr
mov
dec
scas
cmp
push
pop
mov
pushf
xchg
xchg
add
mov
fcom
mov
call
xchg
shl
(bad)
jp
dec
mov
cdq
push
mov
ins
xchg
mov
into
jl
sahf
dec
je
push
inc
pop
call
mov
pop
inc
popf
xor
ds
popa
mov
jo
pop
cmps
jl
add
jo
xchg
dec
jno
xor
cwde
outs
mul
cld
push
dec
or
test
mov
retf
xor
shl
adc
mov
icebp
lock
iret
stos
movs
push
push
push
arpl
xchg
addr16
xor
stos
das
push
test
into
aam
dec
lods
arpl
aas
push
lea
jmp
hlt
pushf
xor
(bad)
retf
pusha
mov
retf
(bad)
xchg
ret
lds
out
fsub
stc
jb
stc
sbb
repnz
jne
arpl
pop
sub
xor
scas
xchg
xchg
(bad)
les
and
or
aam
mov
int
scas
clc
push
popf
sbb
mov
fs
fwait
push
jp
add
(bad)
std
movs
inc
ror
inc
rcr
shl
div
sbb
rol
cmp
les
aas
xor
and
push
popa
push
adc
and
add
je
mov
pop
lods
pop
pop
out
(bad)
push
lea
push
or
shl
inc
mov
cs
inc
mov
and
repz
pop
mov
cmp
ret
test
inc
(bad)
imul
jle
lods
sbb
sbb
jns
cli
pop
(bad)
popa
mov
pushf
and
lods
int3
jno
xchg
daa
xor
dec
mov
pop
mov
fisub
imul
ret
jmp
mov
je
sar
pop
sbb
ins
cmp
leave
mov
mov
push
push
js
mov
loop
das
inc
(bad)
rep
inc
or
and
sub
shl
pop
or
movs
hlt
mov
push
shl
ja
dec
(bad)
cmp
call
mov
mov
adc
and
push
push
xor
push
aam
jmp
outs
cmp
push
inc
jmp
mov
pop
xchg
arpl
js
data16
lods
xchg
mov
pop
inc
and
pop
sbb
sub
inc
lea
mov
mov
or
mov
gs
cmp
sbb
mov
mov
stos
xchg
inc
ficom
push
cmc
retf
es
out
xor
sbb
xor
test
rcl
test
dec
sub
and
pop
call
test
pushf
cmp
rcr
into
dec
fld
dec
adc
xor
sti
push
cmp
shl
lea
call
rcr
xor
es
xor
push
and
nop
inc
push
int3
jg
sub
mov
cmp
pusha
inc
mov
sbb
jbe
pop
add
mov
sub
pop
(bad)
adc
pop
outs
cmc
or
js
loop
push
rcr
into
cmps
lods
(bad)
shl
pop
adc
fwait
sbb
adc
rcl
in
and
and
aad
fs
mov
fcmove
mov
mov
test
mov
cmps
shr
sub
add
out
shr
sti
mov
dec
cdq
and
pop
imul
test
movs
call
imul
sub
dec
std
xchg
nop
sbb
mov
pusha
in
mov
cmp
das
fiadd
sti
and
dec
cmp
in
dec
add
shl
cmps
in
mov
adc
mov
retf
lock
xor
xchg
rcr
pop
test
data16
sar
adc
dec
jle
fistp
xchg
int3
rol
or
xchg
push
xchg
mov
ins
fiadd
outs
mov
jne
aad
call
bound
pop
cmp
out
test
out
cmp
fldcw
je
fisttp
cmp
push
mov
jno
ret
(bad)
and
shr
mov
leave
into
scas
mov
getsec
xor
pop
add
lods
inc
movs
(bad)
rol
lods
dec
jb
call
icebp
mov
fbld
in
pop
mov
or
hlt
adc
cmps
dec
xchg
bnd
int3
xchg
or
add
mov
inc
jbe
in
xor
adc
cmovle
adc
xor
inc
cmp
push
es
out
test
jmp
jg
cmc
scas
outs
not
mov
clc
fisttp
daa
sti
xchg
adc
mov
pop
push
ins
fcomp
js
mov
mov
fs
fwait
pop
sbb
push
mov
sar
lahf
sub
push
xlat
xlat
sub
inc
jle
mov
stos
or
inc
jne
ror
mov
idiv
xlat
sub
xlat
adc
push
xor
mov
loop
sbb
pop
adc
push
loop
movs
jecxz
movs
pop
mov
stos
cmp
sbb
(bad)
xor
pop
jmp
outs
div
or
jae
adc
push
out
push
mov
call
gs
std
push
ds
adc
fnsave
lods
xchg
dec
(bad)
xor
push
jae
mov
(bad)
push
push
dec
repnz
xor
push
call
mov
jno
sbb
jl
test
(bad)
cwde
out
mov
ins
mov
fidiv
sub
scas
inc
js
push
test
repz
add
mov
je
xor
xlat
fimul
out
jnp
mov
std
pushf
in
pop
mov
ins
xlat
ins
jmp
cld
es
dec
dec
jecxz
addr16
mov
(bad)
fsubr
(bad)
ins
lahf
or
and
mov
mov
jmp
or
cmp
sbb
sahf
jnp
(bad)
fisttp
dec
mov
mov
cmp
jmp
hlt
ins
std
outs
xchg
nop
test
mov
sahf
adc
jo
aad
int3
jmp
pop
or
inc
mov
push
mov
inc
pusha
cmps
lahf
jo
scas
out
mov
sub
ds
and
dec
xchg
(bad)
or
iret
sbb
imul
cwde
jmp
out
inc
aam
popa
sub
(bad)
mov
stc
push
jmp
call
push
jmp
adc
daa
call
std
sub
or
pop
add
sub
mov
jl
rol
push
int
pop
pop
out
push
hlt
mov
and
push
shl
call
icebp
jp
call
hlt
and
xchg
in
and
mov
pop
mov
dec
or
cwde
push
and
pushf
mov
mov
repnz
pop
sub
in
jbe
sub
addr16
cs
je
sub
arpl
mov
jecxz
call
push
dec
mov
dec
out
test
arpl
mov
mov
(bad)
dec
cmp
nop
jge
test
and
lahf
xchg
add
cs
pop
in
call
pop
or
or
sahf
cmp
dec
cmp
es
jg
or
sbb
adc
adc
fld
cmp
aad
test
jmp
push
sub
test
enter
pusha
inc
jb
adc
push
push
movs
clc
sbb
outs
outs
cmp
fiadd
jo
push
push
out
mov
iret
lahf
adc
fninit
xchg
pusha
shl
test
ss
inc
xor
jp
pop
in
aas
loop
sti
mov
push
or
lds
push
xlat
jno
fdivr
sub
inc
adc
inc
outs
enter
dec
iret
dec
fsub
cmc
pop
pop
dec
or
cmp
or
pop
push
adc
stos
jnp
push
xlat
sbb
jge
aaa
cli
in
out
addr16
xor
outs
add
add
mov
(bad)
pop
xchg
cld
in
pop
dec
and
xchg
fnsave
adc
outs
sar
(bad)
jmp
xchg
in
cmp
loop
sbb
inc
shl
out
push
es
pop
(bad)
xor
arpl
ret
sbb
sbb
push
pop
lock
adc
push
sub
stos
leave
test
sbb
mov
mov
lds
push
mov
shr
mov
jno
in
mov
mov
pop
js
or
bswap
mov
int3
jno
imul
xchg
ds
xchg
(bad)
cmp
pop
pandn
inc
and
scas
cmp
iret
xchg
test
rol
dec
sti
mov
aad
repnz
jb
mov
push
jecxz
outs
xor
cmps
inc
mov
gs
inc
cmp
cli
jmp
mov
cmps
addr16
aam
test
les
pop
nop
lds
and
test
xor
cli
repnz
jecxz
pop
mov
push
imul
inc
cmp
stos
sbb
adc
or
shl
(bad)
retf
mov
shl
cmp
(bad)
out
fcom
lods
add
xchg
lahf
(bad)
fcmovnbe
loope
adc
and
inc
fistp
add
stos
jecxz
xchg
test
shl
add
mov
and
(bad)
shr
loope
xor
xchg
adc
pushf
or
ss
sub
push
mov
jp
fiadd
mov
jae
popa
pop
movs
xchg
clc
repnz
pop
sbb
xchg
xor
jbe
mov
jmp
(bad)
sbb
arpl
mov
das
pop
inc
cld
leave
mov
sti
mov
sbb
cmp
aam
fcom
mov
xchg
push
cmp
push
sbb
push
imul
cmp
or
call
xor
push
or
ret
call
add
into
xor
xchg
daa
adc
xor
sahf
loopne
adc
mov
pop
dec
hlt
into
push
mov
pop
xchg
dec
lds
scas
fsubr
cld
test
fs
aam
iret
loop
and
mov
rep
lods
es
out
jbe
push
lds
xchg
and
pop
and
inc
push
pop
int
cmps
shr
outs
lea
mov
sbb
or
xor
pop
dec
jle
or
out
(bad)
push
inc
jecxz
popf
test
cmp
lods
jb
inc
jge
add
in
add
xor
jg
not
mov
lds
add
and
pop
xor
push
adc
in
cmp
jp
or
sub
push
cmps
imul
in
and
paddq
pop
cmps
dec
aad
test
jmp
(bad)
enter
push
sbb
inc
invd
push
and
(bad)
jae
arpl
retf
cmp
aad
test
inc
dec
push
mov
mov
mov
dec
push
(bad)
jp
push
je
inc
push
js
test
xchg
fbstp
pop
fidivr
test
xor
xchg
add
lea
pop
mov
pop
stos
adc
js
icebp
lods
adc
or
fwait
cwde
js
add
scas
fiadd
into
in
sub
out
mov
fwait
sar
jae
xchg
mov
scas
pop
sbb
sub
pop
mov
sbb
push
xor
jmp
mov
outs
gs
or
rcr
add
push
(bad)
sub
pusha
cdq
std
jbe
mov
ds
lock
adc
nop
push
push
push
ins
adc
inc
dec
mov
xlat
sub
push
frstor
mov
std
lds
inc
mov
push
adc
repnz
fisubr
test
xor
or
fsub
ret
add
dec
add
dec
xor
cli
add
sub
call
stos
out
lock
sbb
add
sahf
lods
or
mov
push
mov
fsub
xor
retf
dec
pop
cdq
fs
xchg
jp
inc
sbb
inc
mov
sub
sar
(bad)
pop
mov
in
stos
aad
sar
in
xor
shr
iret
mov
ficom
ffree
cmp
add
call
jo
cmp
dec
mov
dec
and
ins
jmp
ins
dec
repnz
repnz
repz
out
inc
jnp
sbb
test
cmp
jbe
mov
leave
(bad)
and
adc
push
xor
push
sbb
test
and
ins
scas
inc
jae
sub
sbb
sbb
jbe
ss
sbb
jbe
cli
sub
inc
jg
ret
pop
mov
cli
into
push
fcom
jo
sbb
inc
fwait
inc
cmp
or
sbb
data16
sub
jnp
sbb
dec
add
adc
out
xor
arpl
dec
xchg
push
push
dec
gs
out
cmp
xchg
into
sub
xor
es
sbb
ja
repz
push
cmp
ins
das
movs
outs
jmp
leave
or
je
jg
(bad)
mov
mov
(bad)
xchg
and
sar
ds
stc
(bad)
retf
and
xchg
(bad)
bound
jmp
lahf
sub
nop
pushf
jne
stc
add
dec
mov
ja
mov
and
into
push
test
inc
neg
ret
cs
arpl
xor
jg
enter
mov
int3
je
(bad)
dec
hlt
sub
in
cmp
xchg
aaa
mov
and
pushf
rol
pop
inc
jnp
cld
call
cwde
hlt
mov
jle
popf
jns
call
mov
or
dec
stos
dec
adc
out
add
pushw
cdq
inc
and
out
aaa
sti
or
or
adc
pop
xchg
pop
adc
xchg
dec
out
lods
aad
das
pop
xor
popa
mov
jne
xchg
xor
ficom
push
popf
and
je
ss
or
fistp
push
hlt
add
js
lock
arpl
ror
mov
lahf
lea
xchg
pop
lds
add
xor
push
fdiv
(bad)
dec
xchg
lahf
cmps
push
push
xchg
xor
in
sub
or
test
adc
ret
jmp
popa
stos
scas
pushf
sbb
in
ret
js
pop
pop
aaa
inc
(bad)
fistp
test
jg
pop
adc
jne
xchg
mov
inc
(bad)
mov
xor
sub
pop
jecxz
lods
(bad)
aaa
loopne
pop
push
xchg
pop
scas
out
test
int3
pop
add
loope
push
jmp
jmp
sbb
test
fadd
ds
mov
das
retf
out
mov
loopne
enter
jns
adc
repnz
and
lock
jb
pop
mov
xor
mov
push
out
adc
mov
repz
in
popf
pop
dec
add
pop
rcr
add
dec
(bad)
sub
pop
retf
sub
mov
fsubr
pusha
sub
movs
xchg
(bad)
rcr
dec
fild
stc
xchg
lods
dec
push
es
sbb
ss
cmp
push
adc
js
adc
jmp
add
std
add
cmp
mov
cmp
xlat
hlt
in
les
loopne
movs
test
cmp
inc
call
pop
or
dec
nop
cli
add
sbb
loopne
int
add
dec
out
in
xchg
add
aad
test
pop
mov
jbe
repnz
sub
(bad)
fucomip
and
inc
cmp
pop
stos
pop
push
fmul
fisub
inc
adc
clc
rcr
cmc
add
cdq
cld
das
sahf
scas
(bad)
cwde
mov
sti
call
adc
out
or
xchg
movlps
outs
ret
pop
push
dec
jecxz
mov
call
lods
fs
sbb
mov
or
inc
das
imul
inc
psubsb
ja
test
or
pop
sbb
lahf
(bad)
push
mov
retf
mov
mov
lods
push
sbb
in
call
pushf
les
lea
dec
fst
or
sti
loopne
ss
(bad)
pop
xchg
(bad)
in
mov
xchg
jg
lods
call
push
push
dec
mov
pop
imul
inc
mov
xchg
cs
sbb
addr16
jbe
xor
mov
(bad)
shl
cmp
(bad)
jmp
inc
js
dec
and
push
and
arpl
cmps
fs
mov
addr16
jno
or
shl
cwde
xlat
cmp
arpl
jmp
jns
mov
sbb
jp
jns
shr
xor
inc
sub
out
popf
ja
mov
icebp
cmp
push
retf
cs
rol
xchg
es
repz
mov
test
xor
outs
and
pop
pushf
push
xchg
xor
(bad)
daa
cmps
push
mov
and
add
inc
aaa
aam
lods
mov
rcl
callw
popf
xchg
cmc
and
and
xor
pop
adc
adc
push
js
test
out
xchg
aaa
add
mov
fisttp
aas
xor
cmp
mov
cmp
loop
loopne
add
aad
test
cmp
and
das
mov
add
add
not
adc
xchg
sub
rol
dec
mov
pop
test
push
sar
push
cmps
jecxz
mov
outs
push
(bad)
(bad)
cwde
loopne
ins
and
loop
inc
xor
push
popf
sub
push
cmp
fs
sub
xchg
mov
out
test
xor
sub
aas
xchg
das
or
repz
mov
fdiv
xor
sbb
movs
pushf
push
and
add
mov
cli
lock
xchg
or
add
and
add
std
mov
xchg
xchg
adc
sti
jbe
adc
mov
dec
cmp
inc
sti
jge
pop
int3
dec
fwait
jp
sbb
add
sbb
scas
adc
xchg
scas
sub
es
adc
mov
sub
pop
jmp
int
add
sbb
loop
mov
inc
scas
std
cmps
neg
lea
inc
and
mov
jbe
cmp
clc
out
ja
cmp
mov
pop
test
or
mov
xlat
adc
mov
dec
push
jne
movs
int3
je
push
add
aad
mov
and
sti
loop
xchg
mov
mov
(bad)
call
ret
inc
pop
xlat
(bad)
(bad)
int
mov
pop
ds
aam
sub
jmp
adc
(bad)
jmp
push
and
add
aad
push
cmp
lock
jecxz
mov
adc
sbb
xor
cmps
in
ins
not
xor
arpl
out
sub
dec
cdq
add
test
daa
or
jmp
and
outs
cmp
es
xchg
xchg
xchg
jb
or
mov
(bad)
test
xchg
je
mov
ror
repnz
std
sbb
sub
mov
in
cld
xor
lds
push
pop
dec
and
inc
adc
sub
sbb
movs
dec
in
or
dec
call
jo
push
and
mov
aaa
and
mov
xchg
into
xchg
ds
inc
sbb
push
jle
xchg
test
mov
cmps
arpl
push
adc
mov
call
sbb
nop
cmp
dec
inc
je
push
(bad)
mov
mov
retf
mov
and
pushf
mov
inc
out
mov
outs
loop
jae
fs
adc
leave
sbb
sub
dec
adc
add
and
mov
lock
jmp
xchg
or
sti
fld
sbb
ins
xchg
icebp
pop
xor
xchg
xor
test
int3
imul
movs
and
jle
aam
push
out
lods
xor
(bad)
popa
jp
mov
jo
mov
mov
in
jbe
mov
mov
adc
push
mov
das
push
stos
jle
call
out
inc
and
sub
or
adc
sbb
jg
jmp
xlat
rol
movs
shl
inc
mov
mov
push
push
dec
jmp
push
mov
xchg
(bad)
mov
xchg
cmps
xor
neg
sub
nop
jp
xlat
ins
xor
lahf
stc
popf
test
cmp
aaa
mov
push
outs
sbb
ret
call
or
(bad)
jmp
dec
inc
mov
fcomp
out
aaa
imul
fcmovb
js
loop
dec
push
icebp
mov
fs
xor
adc
jns
and
je
cwde
nop
mov
(bad)
mov
call
sbb
push
cmp
daa
movs
out
or
scas
or
dec
lods
popf
adc
jp
pop
push
and
cli
jbe
popf
mov
pushf
adc
ftst
cmc
repz
sub
pop
inc
ja
mov
mov
mov
pop
xor
cmc
mov
jl
sub
fidiv
(bad)
ss
repnz
sbb
pop
in
xchg
stos
jp
or
adc
xlat
push
dec
outs
sub
jnp
sub
cmc
pop
cmp
sub
add
je
aam
lock
lods
xlat
rcr
jge
fdivr
retf
fst
loope
in
sbb
fld
je
test
jle
or
push
dec
mov
inc
not
jle
popa
lds
jle
cmp
dec
jge
push
xchg
xchg
scas
aad
icebp
cmp
test
pop
adc
jmp
rcl
in
sbb
fcom
ins
jnp
push
(bad)
inc
hlt
mov
pop
pmullw
daa
mov
lods
xchg
push
jp
mov
jle
js
and
inc
mov
icebp
mov
or
daa
cwde
outs
mov
loope
jmp
outs
popa
outs
(bad)
fmul
mov
sub
enter
xchg
out
pop
xchg
test
jmp
in
lds
pop
movs
mov
mov
xchg
jp
cmps
repz
jo
mov
data16
push
mov
lock
fs
fsub
(bad)
(bad)
push
push
sar
push
fcomp
jp
push
and
das
fnstsw
adc
adc
je
xchg
aaa
fist
xchg
and
mov
jmp
inc
and
test
pop
cmp
fcomp
leave
cmp
arpl
shl
push
ror
mov
test
(bad)
xor
std
mov
and
xsave
cmp
ja
pop
(bad)
cdq
cs
lods
ins
mov
out
push
stc
push
push
cld
test
cli
inc
in
(bad)
in
aad
xor
popf
retf
lock
mov
out
(bad)
xchg
es
xor
mov
jnp
ins
sti
jo
gs
not
push
retf
fbld
shl
jmp
cli
pusha
pop
ret
retf
push
aaa
not
lods
jo
lds
data16
and
jo
add
dec
ins
pop
push
mov
xor
jns
leave
dec
adc
retf
ret
xchg
lea
mov
push
stos
add
jle
les
cmps
xor
imul
(bad)
ins
aaa
mov
pop
scas
(bad)
and
mov
and
pop
push
pushf
fstp
dec
ja
cdq
push
nop
cmp
jne
mov
xor
pop
int3
ins
cmp
jb
jmp
mov
inc
and
inc
pop
push
cmp
adc
mov
js
nop
sub
cmp
faddp
jne
xor
adc
and
stos
daa
dec
xor
cli
test
pop
push
rol
loope
rcl
stos
push
adc
inc
cmp
push
ds
scas
and
jne
cmp
fistp
leave
retf
leave
ins
cs
xor
add
dec
mov
jo
mov
sub
fiadd
js
das
jae
inc
sbb
and
div
mov
mov
fisttp
cmp
sub
repz
imul
or
das
jns
pop
ret
hlt
push
xor
cmps
pop
ins
or
neg
jmp
sub
rcr
fild
mov
(bad)
xchg
ins
lods
retf
into
mov
ret
lahf
push
and
clc
mov
mov
js
dec
les
pop
sub
or
jecxz
jmp
test
aam
(bad)
mov
pop
cmp
js
push
repz
repz
mov
xchg
nop
loop
leave
sub
in
jl
xchg
mov
call
jne
xor
mov
cmp
lds
scas
cmc
add
gs
jmp
retf
dec
std
inc
outs
mov
xchg
dec
scas
cmp
xchg
push
mov
jae
sbb
out
pop
adc
(bad)
lock
mov
out
pop
iret
adc
mov
xor
in
push
xchg
ss
popa
rol
adc
sbb
xchg
fcom
popf
cmp
sbb
add
inc
rcl
cmp
es
dec
cmp
ret
jne
xor
xchg
lock
in
xchg
out
jp
int3
nop
jno
xor
inc
mov
sbb
mov
or
and
shl
push
jg
or
push
sub
xlat
mov
nop
pop
popf
std
out
aam
mov
adc
cli
mov
clc
dec
fnstenv
jmp
inc
cdq
adc
adc
das
out
adc
in
cmp
inc
daa
or
pop
add
in
popa
in
xchg
fld
push
sbb
(bad)
dec
xchg
popa
push
pop
clc
push
or
pop
fsubr
or
pusha
sub
js
movs
xor
enter
sbb
sub
nop
mov
or
retf
mov
pushf
test
fwait
jbe
or
cmp
sbb
aaa
dec
fisub
add
pop
mov
sbb
mov
and
sti
stc
mov
ja
adc
mov
(bad)
sub
shr
out
int3
xchg
dec
xor
sahf
outs
sahf
xchg
dec
inc
jl
in
mov
push
inc
out
neg
outs
adc
inc
retf
mov
cld
pop
sar
xchg
ins
jmp
xchg
xchg
mov
jo
mov
mov
shl
add
outs
sbb
popa
(bad)
mov
sbb
lods
or
ins
hlt
cs
mov
mov
cmp
xbegin
mov
ret
movs
sub
lods
pop
xchg
mov
add
gs
into
aad
and
mov
pop
jno
stos
jb
enter
out
xor
mov
mov
sub
cmp
scas
inc
sar
ror
nop
cmp
iret
pushf
mov
push
xor
ins
add
add
and
xor
adc
inc
mov
jno
lea
pop
jle
xchg
lds
fcmovnu
imul
pop
out
cs
xor
push
nop
retf
fild
iret
mov
repz
adc
in
pop
mov
ja
or
cwde
mov
imul
sbb
jg
push
push
aaa
and
outs
jmp
add
test
sbb
and
stc
xchg
cmp
cld
lock
dec
mov
sbb
push
mov
or
and
mov
mov
jmp
daa
repz
push
mov
jge
popf
out
(bad)
or
ds
sahf
jb
jp
loopne
mov
in
or
sar
adc
push
loope
inc
mov
loopne
out
je
xchg
adc
mov
mov
cmp
sub
aam
mov
out
adc
stc
mov
iret
scas
xchg
fsub
jl
sub
add
addr16
in
ror
push
stos
xor
gs
xor
(bad)
adc
sbb
sub
adc
mov
or
adc
scas
or
jp
lods
loop
test
(bad)
xchg
push
out
sub
cdq
ret
fld
push
dec
and
mov
cmp
cmp
mov
jle
and
ja
mov
sahf
inc
movs
inc
mov
gs
repnz
inc
sbb
xor
xchg
dec
fadd
lods
mov
sar
pop
outs
xor
jno
lahf
xor
out
leave
mov
scas
and
mov
test
adc
mov
sbb
jnp
fstp
ret
sub
xchg
aas
imul
mov
je
dec
repnz
mov
fincstp
jo
bound
xchg
je
cmps
inc
call
pop
pop
test
out
lods
mov
lds
sar
add
pop
arpl
pop
mov
out
mov
sbb
cmp
jbe
fisubr
(bad)
jmp
jno
mov
or
add
data16
fst
mov
pop
add
gs
mov
sbb
movs
mov
sub
xlat
iret
mov
jbe
into
(bad)
sub
xchg
push
outs
xor
xor
setno
jmp
outs
scas
ret
ficomp
jl
call
inc
vpackuswb
aas
pop
shr
dec
xchg
test
dec
dec
mov
fidivr
inc
inc
int
push
adc
outs
inc
inc
push
frstor
dec
add
inc
shl
cmp
xchg
inc
imul
add
sub
out
dec
iret
xor
mov
dec
push
mov
stos
push
sbb
xor
cmp
and
push
ss
packssdw
xor
call
loope
out
jge
clc
fst
cmp
jmp
inc
rol
xchg
fild
cmp
loop
sub
jle
xor
test
cmp
in
cdq
out
clc
stc
retf
mov
or
mov
popf
pop
sub
pop
jns
mov
mov
popa
or
lds
xchg
sub
cmp
retf
ja
push
sub
fidivr
imul
les
lods
outs
mov
stos
cld
adc
jno
jbe
sub
clc
or
nop
add
cwde
inc
cmp
sahf
call
popf
jnp
inc
hlt
pop
adc
bound
and
stos
data16
or
sub
clc
in
add
push
inc
dec
dec
arpl
sub
xchg
cli
addr16
ret
fldcw
and
xor
xchg
shl
mov
mov
push
(bad)
repnz
xchg
in
mov
add
out
jmp
out
cmp
xchg
jp
shld
mov
cmp
idiv
push
jb
mov
mov
cmp
or
call
cmp
out
repnz
not
lahf
inc
jae
cmp
jbe
push
jns
bound
and
lds
xchg
dec
xchg
outs
xchg
ins
stos
pop
or
lods
stc
inc
push
icebp
dec
jbe
div
shr
(bad)
mov
jno
pop
stc
aam
int3
or
mov
cmp
adc
xchg
aas
add
cwde
push
ror
adc
iret
dec
mov
shl
addr16
add
push
add
out
js
shl
pop
cmp
mov
xor
cwde
cmp
jl
xlat
xchg
aas
cdq
push
inc
push
(bad)
jmp
jns
jb
mov
pop
xlat
aas
pop
fidiv
push
pop
hlt
movs
mov
mov
test
xlat
test
jnp
jae
xchg
psrlw
loopne
mov
mov
mov
nop
dec
sub
call
mov
or
inc
loopne
xor
adc
loope
add
sbb
sbb
int
mov
jb
adc
push
cmp
in
cmp
pop
pusha
iret
mov
mov
sbb
push
pop
pop
pop
retf
retf
inc
adc
sub
mov
movs
clc
mov
sub
std
and
fisubr
fisub
lea
jecxz
jbe
outs
loopne
into
cmp
ja
mov
dec
xor
retf
ins
jp
pop
dec
imul
pop
jmp
ins
inc
xchg
inc
mov
mov
pop
adc
fdivr
xlat
cld
ss
fadd
int3
idiv
mov
push
js
sbb
dec
sub
xchg
mov
push
retf
dec
pop
es
sub
cmp
xchg
or
sub
in
daa
ins
mov
mov
xchg
dec
movs
cld
mul
sub
jae
cmp
bound
pop
mov
and
icebp
clc
stos
pop
or
outs
fstp
mov
xor
mov
loopne
pop
(bad)
pusha
mov
push
mul
mov
shr
stos
push
xlat
push
mov
or
and
sub
push
cmc
jne
jno
and
mov
repnz
xor
xchg
pop
mov
sub
sbb
or
scas
cld
mov
xchg
or
nop
add
aad
pop
push
aaa
pop
sub
jb
cmps
std
adc
rcl
dec
arpl
add
adc
cmp
fcomp
cld
push
ficom
mov
test
outs
rol
aad
sub
inc
in
fidiv
sbb
dec
adc
loopne
out
repnz
aam
mov
fadd
and
mov
mov
pop
jbe
inc
jmp
les
adc
lahf
neg
inc
cmp
das
icebp
xor
test
jle
in
mov
not
or
out
pop
pop
xchg
xchg
mov
cmp
ret
aam
stc
aam
sub
ss
and
dec
cmp
pusha
(bad)
adc
imul
xchg
mov
sub
inc
lahf
call
xchg
stc
ja
dec
outs
sbb
jmp
mov
std
cwde
add
xor
cmc
mov
xor
add
sar
cli
sar
daa
mov
sub
clc
aam
add
cmp
adc
and
pop
xor
rcr
sub
adc
sbb
les
mov
std
(bad)
scas
cmps
and
add
fsub
jle
fisttp
xor
lds
mov
dec
out
xchg
xchg
movs
and
(bad)
mov
into
test
loope
rcr
cdq
jg
inc
dec
dec
in
cmc
dec
jno
push
jae
push
loop
popf
add
inc
aam
lods
xor
pop
es
mov
addr16
test
mov
(bad)
pusha
scas
ins
jge
lods
fisub
iret
jp
clc
jb
push
mov
cmc
sti
cmp
cli
fmul
push
add
cs
retf
pop
push
fild
idiv
xchg
loopne
mov
xchg
out
cwde
inc
sbb
movs
and
int
xlat
fnstcw
in
jmp
add
scas
push
inc
lea
push
outs
retf
sahf
xchg
inc
int
jecxz
in
in
(bad)
int
or
arpl
add
retf
(bad)
add
mov
enter
jp
test
movbe
cmp
imul
mov
jno
pop
ins
mov
(bad)
sbb
mov
in
and
imul
into
and
out
inc
inc
and
test
stc
call
push
enter
sbb
xchg
sub
or
rol
es
fwait
mov
in
xlat
(bad)
sti
pop
adc
lock
sbb
mov
mov
stc
cmps
pop
idiv
dec
cli
or
out
iret
fisub
test
gs
icebp
comiss
inc
sub
add
into
and
inc
push
mov
int3
mov
in
and
push
aam
(bad)
stc
mov
sar
mov
stos
imul
sbb
add
adc
stos
enter
das
xchg
dec
push
into
call
pop
xchg
xchg
les
cli
jle
cli
push
jb
into
xchg
xor
movs
pop
dec
xchg
leave
push
dec
repnz
push
sbb
adc
mov
cwde
xor
ret
stc
mov
pop
xchg
jb
leave
scas
xchg
push
lea
sub
imul
call
aaa
test
into
fiadd
mov
or
fsubr
dec
mov
mov
jns
cwde
lds
mov
aam
add
sti
rol
gs
in
mov
scas
jnp
pop
or
push
adc
and
adc
fwait
adc
fisttp
mov
jge
xchg
dec
sub
mov
jmp
in
out
xor
add
mov
xchg
data16
mov
inc
ss
test
cmp
imul
cmp
sub
imul
loopne
mov
test
test
mov
cli
iret
xchg
fs
sub
ins
xor
movs
cs
push
div
pop
push
add
dec
data16
sbb
dec
arpl
mov
outs
sti
loope
into
loop
mov
in
imul
xor
adc
imul
ja
pop
and
sbb
loope
out
scas
push
mov
sbb
je
lds
stc
pop
xchg
das
sub
mov
out
inc
push
inc
rol
mov
jge
clc
dec
call
inc
outs
dec
xor
adc
push
scas
xchg
cmp
stos
sbb
(bad)
lods
out
ins
jae
jnp
mov
loopne
shl
test
(bad)
hlt
fld
mov
shl
or
out
fnstenv
mov
sbb
jmp
mov
jns
and
xchg
xlat
movs
out
fsub
hlt
ror
in
xchg
clc
dec
mov
xor
or
mov
inc
nop
mov
and
add
ret
hlt
adc
adc
(bad)
in
push
adc
inc
ret
call
(bad)
pop
pop
scas
xor
push
push
mov
je
push
das
inc
sar
add
popa
jp
add
inc
test
push
mov
ret
cvtps2pi
adc
sub
add
xchg
repnz
js
inc
mov
jnp
dec
mov
das
inc
mov
push
cmps
mov
pop
adc
bound
loop
stc
movs
sbb
call
dec
icebp
fnstcw
cmp
stos
xchg
mov
mov
loope
and
xchg
jl
dec
icebp
test
dec
imul
push
adc
xchg
sar
push
mov
xor
jmp
dec
add
shl
sub
push
mov
in
and
push
cmp
gs
xchg
ja
repz
and
(bad)
adc
jmp
pop
and
mov
arpl
push
outs
rcl
and
push
cmove
sbb
mov
push
sub
jb
jnp
push
int
adc
movs
in
arpl
mov
mov
and
lods
cmp
neg
push
into
cmp
sub
cwde
jecxz
cmp
lahf
mov
ins
ss
or
and
sahf
jbe
mov
jecxz
out
xlat
xchg
sbb
popa
xchg
je
rcr
and
in
in
ins
pop
out
pop
popf
aaa
popf
dec
out
lahf
out
sti
mov
adc
mov
add
out
in
js
sub
or
test
ins
mov
or
pop
stos
adc
adc
jp
sbb
jg
jns
push
lods
inc
dec
bound
(bad)
aas
nop
mov
retf
xor
(bad)
loop
jne
xchg
mov
cmp
xchg
pop
les
mov
bound
das
mov
test
or
es
ret
dec
mov
push
ret
mov
leave
mov
nop
scas
jle
aaa
ins
xchg
punpckhwd
push
xchg
imul
sbb
mov
pop
push
dec
loope
sub
mov
mov
sub
std
mov
cmp
jbe
ins
xchg
mov
xor
cld
bound
(bad)
sbb
push
xchg
adc
or
adc
pushf
mov
push
add
cmc
or
adc
outs
int3
or
test
add
mov
mov
data16
mov
rcl
mov
ficomp
outs
sub
pop
fadd
and
push
sub
outs
loope
push
cmp
rol
cmps
es
mov
push
retf
xchg
inc
mov
movs
fsubr
retf
ret
pop
ins
xchg
out
sbb
mov
adc
ja
das
jnp
and
xchg
repz
mov
pop
scas
mov
test
or
sar
xchg
add
push
sub
jo
movs
mov
pop
ficomp
jp
xor
das
out
push
adc
loope
fist
add
call
dec
sbb
jns
adc
popa
xlat
jne
adc
test
dec
mul
stos
dec
jbe
das
call
in
cli
and
out
sti
(bad)
mov
int
push
jge
mov
jecxz
fisub
lods
shr
inc
scas
ret
sbb
or
mov
je
retf
mov
ins
dec
loope
sar
jle
gs
cmp
fcom
cld
jl
(bad)
xchg
(bad)
int
cdq
outs
out
jmp
pop
push
shl
jne
test
hlt
push
jae
pusha
cld
ds
(bad)
push
dec
xor
xor
push
inc
shl
sub
cmps
jp
push
call
in
retf
out
push
dec
aaa
cmc
sbb
aaa
push
jns
aad
pop
pusha
out
cmp
fwait
push
jae
ss
out
pop
gs
je
inc
pop
or
mov
pushf
mov
or
and
sub
das
xchg
or
les
jo
jo
(bad)
fldenv
data16
adc
test
add
mov
push
fstp
retf
icebp
bound
popa
stos
and
fs
mov
sbb
fmulp
ret
and
push
add
or
push
add
cmp
imul
inc
dec
xchg
push
je
dec
and
test
xchg
adc
dec
loop
lds
push
int3
jecxz
pushf
dec
and
pop
or
jmp
ins
lahf
add
popa
pop
movs
xlat
and
dec
and
call
cmp
pop
dec
adc
dec
pop
mov
scas
aad
pusha
inc
ins
xchg
mov
push
mov
pop
xchg
adc
arpl
fadd
jl
sub
js
add
push
sbb
jns
push
cld
sub
fimul
cmp
sahf
jbe
sub
loop
inc
fdiv
dec
cmps
fcom
(bad)
xor
popf
push
ror
cmp
or
fisubr
mov
push
cmp
cli
or
mov
test
xchg
inc
or
aas
mov
jg
lds
pop
adc
jae
jno
dec
cs
cld
cmp
hlt
push
imul
mov
xchg
cli
fisub
push
pusha
call
aam
loop
add
div
mov
lds
cmc
lds
sbb
stc
add
xor
lahf
nop
in
sbb
aas
sbb
in
mov
fmul
or
cmp
mov
adc
xor
xor
mov
jmp
or
and
arpl
push
mov
mov
test
int
cmps
cmp
sub
movs
lea
push
out
mov
fdivr
outs
retf
sbb
sbb
bound
movs
xor
cmc
ja
inc
fimul
aaa
push
enter
je
push
sub
adc
mov
bnd
push
mov
les
fstp
(bad)
mov
mov
in
jne
popa
add
addr16
push
xor
add
outs
les
add
jnp
(bad)
ins
push
fstp
jecxz
aas
out
or
das
adc
movs
xor
in
cs
or
pop
addr16
jmp
imul
sbb
push
cmc
cmc
outs
cmp
fldcw
adc
ins
jae
mov
mov
adc
movs
sahf
push
out
mov
test
dec
inc
adc
lods
add
stos
xchg
mov
ror
adc
inc
mov
xchg
or
mov
push
adc
push
cs
nop
and
and
sub
aaa
pop
mov
rcl
int
cmp
or
bound
or
shr
pop
mov
mov
aad
int3
fild
test
inc
dec
sub
retf
xchg
inc
xor
pop
out
add
and
in
cld
scas
aas
(bad)
cmp
stos
test
push
sub
rcl
dec
pop
scas
sar
call
enter
test
jnp
pop
mov
mov
jb
jle
das
mov
or
cld
in
and
arpl
adc
movs
and
xchg
paddw
cmp
inc
add
push
xchg
xor
imul
mov
(bad)
ss
xor
mov
in
jmp
mov
xchg
fwait
test
push
dec
popa
lock
add
outs
sub
lods
(bad)
pusha
enterw
add
sbb
xor
push
xor
xchg
out
xchg
pusha
bound
cs
fstp
sub
xchg
jle
jno
pop
in
jno
test
jg
mov
dec
cmp
daa
mov
arpl
inc
mov
call
outs
fidiv
fs
fwait
shl
mov
jbe
mov
xor
inc
inc
jb
dec
aas
jmp
addr16
arpl
out
mov
scas
xor
cdq
adc
stc
xor
dec
or
test
call
in
dec
pushf
fidiv
and
mov
sub
lock
dec
cmps
lds
pop
jae
mov
push
fiadd
ins
xchg
fsub
add
sbb
(bad)
cld
inc
push
(bad)
aas
nop
test
shr
jnp
push
adc
pop
movs
into
push
outs
pop
cmp
lock
clc
xor
adc
pop
add
dec
popf
out
xchg
mov
(bad)
mov
stos
push
loopne
mov
jmp
repz
out
xchg
scas
inc
xchg
fwait
loope
imul
popf
cmp
mov
push
push
sahf
or
rcl
arpl
push
loope
in
inc
test
mov
clc
mov
adc
cmp
fisub
jmp
sub
pop
fs
imul
stc
jae
adc
or
cmp
icebp
xor
mov
add
into
pop
or
or
das
or
xchg
iret
ins
cmp
or
or
and
xchg
movs
or
dec
ret
sbb
jb
jmp
das
mov
inc
sub
out
push
fstp
mov
jnp
shl
lds
xchg
add
pop
cmp
sbb
cmc
push
test
mov
movs
add
pop
hlt
dec
xchg
dec
sub
popf
fadd
or
arpl
adc
test
inc
and
je
pop
pop
sbb
rcr
dec
cmps
repz
mov
cdq
jnp
add
ja
xchg
fld
(bad)
into
pop
add
dec
pop
mov
pop
xor
adc
mov
sbb
mov
xchg
bound
mov
sbb
scas
fst
dec
into
pop
jg
in
(bad)
jns
xor
mov
lods
xchg
xchg
xchg
mov
into
pop
popa
int
in
in
inc
mov
or
into
imul
call
fisttp
jmp
mov
scas
jo
jno
cmps
std
pop
or
cmp
xchg
ss
pop
add
(bad)
imul
pop
and
out
xor
sbb
loop
cmps
xchg
mov
in
jle
mov
ds
outs
leave
sub
dec
scas
jnp
movs
sub
dec
jno
mov
push
out
mov
ja
jmp
dec
mov
push
repz
in
xchg
cdq
gs
fdiv
push
jne
add
and
das
fdiv
or
xchg
push
inc
rcr
jg
and
xchg
mov
rcr
pop
cmp
jae
jge
pushf
sbb
jg
ret
jae
std
xchg
cmp
mov
in
and
(bad)
(bad)
rol
cmc
cmps
movs
cld
and
sub
mul
lea
or
cdq
aam
mov
jecxz
into
in
lahf
and
mov
mov
inc
xlat
scas
aas
push
jmp
jl
imul
addr16
lds
and
and
and
and
lods
lods
pop
sbb
sub
mov
sbb
movs
sti
cmp
dec
js
cmc
pop
faddp
lods
ins
mov
daa
test
jecxz
call
mov
idiv
adc
inc
mov
fs
rcl
xchg
sahf
push
jno
and
jbe
jge
sbb
sbb
out
push
mov
(bad)
mov
out
mov
cdq
jecxz
jl
lds
push
jnp
in
mov
add
popf
adc
(bad)
adc
jae
mov
pushf
or
mov
add
xchg
in
cmps
out
dec
call
xor
cdq
mov
cmps
fimul
sub
jns
(bad)
(bad)
sub
jbe
nop
pop
mov
mov
pop
and
and
daa
fs
push
mov
pop
out
out
dec
in
push
push
ret
rcr
inc
lea
cmp
jno
mov
mov
or
aas
jne
and
and
repnz
push
repz
push
es
ja
lock
mov
sbb
mov
mov
movs
rcr
xor
test
int
cld
sbb
std
(bad)
mov
mov
ds
xchg
push
and
div
imul
repz
mov
jl
out
pop
sar
add
es
call
inc
mov
sbb
push
es
jns
in
sub
push
neg
xchg
push
mov
pusha
add
xchg
push
mov
and
inc
es
push
xor
lds
ins
imul
ins
shr
cmc
aad
dec
sbb
(bad)
(bad)
out
ret
xchg
fnstcw
sbb
pushf
loopne
jo
cmp
shl
fimul
call
push
pusha
aaa
stc
(bad)
pop
add
in
inc
test
push
ror
stc
add
pop
cmc
fimul
out
adc
jbe
dec
and
not
shl
add
test
inc
stos
adc
sbb
(bad)
mov
sub
ins
repnz
pop
jo
(bad)
nop
dec
lea
ficomp
lahf
push
daa
or
daa
push
shl
cmps
shl
daa
sahf
in
jns
hlt
and
pcmpgtd
lods
add
(bad)
ret
sbb
pop
cmps
mov
xor
aas
pop
pop
cmc
dec
pop
mov
aaa
test
aaa
in
fiadd
sub
pop
cmp
ins
mov
mov
xchg
and
push
pop
jno
sbb
inc
push
out
dec
movs
xchg
aaa
pop
xor
iret
cmp
ds
rcl
pop
ins
push
inc
retf
mov
(bad)
jmp
xchg
mov
fdiv
icebp
and
outs
cli
mov
mov
mov
scas
(bad)
add
xor
mov
pop
push
jg
std
sbb
or
sbb
stos
add
fst
xchg
movs
lahf
sbb
jmp
mov
cmp
or
sub
and
(bad)
mov
xlat
scas
sti
scas
or
mov
add
xlat
adc
shr
call
pop
pop
and
sbb
ror
cmp
inc
push
test
cld
dec
mov
fsubr
jmp
dec
push
lahf
cmp
pop
mov
int3
(bad)
vmovaps
push
mov
pop
not
aam
push
push
mov
mov
mov
inc
dec
jns
cmp
and
xchg
call
ja
movhps
mov
cwde
idiv
cmp
push
mov
loop
das
adc
mov
js
inc
enter
fisttp
in
popa
push
or
sub
sbb
adc
mov
scas
sar
mov
jns
sbb
sub
xor
dec
cmc
pop
add
mov
xchg
cmp
ds
push
dec
jle
out
jp
aas
retf
cld
pop
cmps
or
std
push
ss
add
add
fs
dec
cld
adc
sbb
(bad)
fdivr
jg
lods
dec
mov
imul
lods
cmp
movs
in
popa
jl
cdq
nop
dec
outs
adc
std
pop
retf
(bad)
cld
pusha
stc
adc
push
dec
push
cdq
adc
cmps
mov
out
inc
out
leave
cmp
jl
adc
es
sub
and
(bad)
rcl
sar
(bad)
and
adc
pop
lahf
or
jp
(bad)
push
fldenv
mov
xchg
mov
aam
inc
mov
pop
jl
adc
movs
bound
pop
out
int3
mov
int3
gs
jb
sub
sbb
sub
push
mov
out
xchg
shl
and
movs
inc
mov
enter
mov
mov
sub
dec
cmp
scas
ds
sub
add
test
imul
inc
ss
pop
cmp
mov
addr16
adc
push
jae
jb
(bad)
das
sbb
jbe
dec
mov
mov
adc
or
add
xchg
xor
push
sub
(bad)
aam
mov
das
jmp
shr
pop
mov
shr
inc
pusha
call
sub
pop
hlt
in
push
jno
dec
sbb
std
pop
movs
aam
cld
scas
jecxz
xchg
jo
or
cmp
iret
jge
cli
adc
adc
mov
mov
pop
lds
and
jbe
(bad)
retf
stc
lods
jno
xor
loopne
lahf
(bad)
adc
push
sbb
scas
pop
ror
int3
or
pop
xchg
xor
adc
adc
imul
repz
add
push
xchg
xor
or
loop
sub
and
pop
inc
das
push
and
(bad)
add
stos
sub
mul
xchg
test
imul
fnstcw
into
ja
pusha
add
sahf
js
out
std
ficomp
xor
in
xlat
int3
pop
sub
cdq
stos
sbb
in
push
xor
out
icebp
or
sub
ror
inc
mov
inc
xchg
repnz
mov
arpl
and
cmp
sar
or
es
mov
sbb
xor
mov
sahf
out
gs
xor
icebp
enter
cdq
mov
lods
jp
add
fdiv
sbb
leave
call
and
loope
sbb
push
dec
mov
or
ret
sub
cdq
lds
mov
pop
(bad)
fadd
xchg
sub
mov
vpshufhw
test
into
xor
xrelease
cld
popf
in
sahf
sar
mov
das
cmp
ror
enter
daa
inc
inc
inc
sub
shr
pop
inc
gs
rcr
fcmove
cmp
sbb
mov
cmc
retf
fdivr
inc
dec
fist
int
push
nop
test
test
xchg
pushf
dec
ror
adc
aam
push
xor
rdtsc
jb
adc
hlt
cmp
sbb
cmp
jns
inc
mov
movs
in
mov
pop
sbb
cmps
fstp
jle
repz
inc
and
ins
shr
outs
push
mov
ficomp
movs
jne
ss
or
fdiv
ins
xor
dec
xchg
mov
hlt
nop
(bad)
retf
daa
ins
jnp
or
mov
call
jp
dec
push
push
jno
mov
or
in
bound
add
xchg
mov
popa
jbe
jbe
push
and
ret
pop
sub
push
movs
push
push
movs
and
jae
mov
adc
adc
xchg
sahf
push
js
inc
movs
cmps
adc
(bad)
in
push
xchg
stc
daa
rcr
sbb
inc
dec
enter
das
and
or
int
test
sub
mov
ins
pop
(bad)
push
mov
shl
ret
mov
or
outs
pop
adc
movs
sub
jmp
das
adc
in
jmp
shl
pusha
xchg
sub
push
cmovne
mov
sbb
add
mov
aas
xchg
in
scas
dec
stos
(bad)
into
es
and
mov
xchg
sbb
cmp
dec
out
pop
lds
outs
icebp
xchg
push
sti
xchg
cmp
sub
fnstsw
jbe
clc
sbb
mov
jb
in
and
inc
dec
xchg
shl
adc
jnp
push
in
or
and
adc
je
and
dec
push
mov
push
inc
mov
daa
imul
stc
cmp
jno
xlat
xchg
ss
data16
xor
leave
test
and
inc
mov
pop
test
mov
das
(bad)
popf
inc
push
push
and
in
push
pop
sub
repz
and
push
bound
and
ja
cdq
outs
loope
repz
jmp
mov
fisubr
shl
popf
int
popf
test
(bad)
mov
pop
mov
xchg
fldenv
sar
sar
test
lock
sub
pop
adc
pop
add
and
cmp
mov
mov
lea
cld
lods
sbb
mov
xchg
jbe
pop
mov
mov
mov
add
jp
call
in
inc
in
enter
add
inc
fsubr
retf
movs
add
and
jge
into
out
push
fucomip
xchg
xor
mov
mov
adc
pop
daa
adc
pop
xlat
test
push
iret
cdq
cmp
push
jae
jmp
ins
cmp
jmp
out
jmp
mov
leave
mov
daa
movs
mov
aam
rcl
pop
loop
sbb
lds
push
retf
xor
bound
push
(bad)
je
loope
stos
xor
in
push
pop
retf
push
rcr
and
in
movs
xchg
xchg
jb
jmp
push
or
leave
in
and
lea
sub
(bad)
outs
or
push
ins
test
jbe
inc
fimul
push
les
dec
xlat
jno
adc
jmp
jno
push
sub
sbb
jne
or
mov
clc
mov
mov
and
inc
data16
sar
test
cmps
sub
cwde
arpl
test
push
mov
int3
cmps
fstp
xor
mov
add
lds
jl
dec
nop
fisubr
cmp
fidiv
test
xchg
stos
int
mov
mov
data16
loopne
imul
jmp
sub
jg
mov
imul
adc
dec
pop
arpl
loopne
sub
jle
ja
inc
pop
(bad)
push
pop
mov
test
mov
iret
(bad)
xchg
inc
add
cs
loopne
cmps
gs
mov
das
ds
xchg
retf
xor
retf
(bad)
and
xchg
jge
jae
dec
adc
or
xchg
stc
sub
fadd
dec
pop
adc
xlat
sbb
or
cmp
jmp
in
les
jmp
cvtdq2ps
mov
ss
sub
bound
scas
dec
fsub
out
in
sti
mov
pminsw
jns
push
inc
fidivr
fcomp
or
sub
sbb
jne
call
push
push
fdiv
dec
dec
bound
out
mov
arpl
lods
fwait
mov
push
sub
(bad)
out
lock
mov
and
inc
sub
jbe
push
cmp
push
dec
jnp
int
jne
mov
pop
retf
shr
pop
imul
jmp
or
jge
and
ret
fild
mov
xchg
shr
xor
cmps
push
xchg
les
out
dec
fcom
push
pop
clc
fs
aam
(bad)
fcmovb
gs
lahf
repnz
pop
iret
pop
in
pushf
push
faddp
into
adc
add
cmps
cmp
cmp
or
pop
scas
fstp
arpl
pop
xor
stos
xchg
cmp
adc
(bad)
adc
test
je
jne
in
add
dec
xor
adc
jns
imul
xchg
sar
cmc
cmp
pop
pop
sub
sbb
jmp
je
push
hlt
mov
icebp
jns
enter
xchg
mov
dec
and
lock
iret
inc
ficomp
push
les
mov
mov
mov
int
push
adc
mov
pop
sti
fwait
aad
mov
rcr
les
jmp
jo
pop
scas
fist
add
rcr
mov
stc
pushf
scas
mov
pop
xor
loope
sar
loopne
cdq
dec
sub
adc
dec
xchg
push
out
pushf
jle
mov
sub
xchg
sbb
pop
lahf
add
mov
fbld
xchg
fs
es
mov
mov
xor
inc
pop
je
into
sbb
or
sub
retf
push
mov
(bad)
dec
retf
dec
je
arpl
add
cmp
in
stos
mov
fsub
fwait
call
mov
jbe
and
xchg
cmc
or
add
hlt
pop
scas
mov
out
into
mov
sub
adc
push
jb
xor
pop
mov
movs
pop
scas
pop
dec
inc
into
aad
in
repz
and
jmp
or
add
push
dec
xor
xchg
pop
push
test
jge
pop
nop
dec
cli
sar
jg
stos
cmp
mov
jne
cmp
test
cld
pop
sub
gs
cwde
xchg
inc
inc
add
int
dec
ffree
jo
sbb
adc
ret
mov
addr16
rcr
call
cmp
retf
push
sub
mov
adc
sti
dec
rol
daa
shl
dec
in
jmp
fstp
push
cli
or
jmp
push
mov
sbb
or
xchg
push
jp
movs
mov
les
cwde
push
sbb
sbb
adc
cwde
scas
jp
dec
cli
add
aas
sub
mov
ja
adc
int
aam
test
push
std
shl
repz
jmp
dec
xchg
pop
stc
push
dec
or
in
push
rol
dec
cld
or
jo
imul
cmp
pop
jae
jnp
mov
int3
cmp
sbb
popa
retf
loope
es
cmp
push
mov
mov
arpl
jno
and
or
popf
ret
jmp
jmp
lods
lock
call
jecxz
(bad)
test
imul
add
inc
mov
push
push
pop
cmp
imul
imul
cmc
lock
inc
xchg
jns
mov
ins
mov
xor
aad
mov
adc
mov
mov
arpl
inc
mov
mov
mov
dec
sahf
push
(bad)
scas
jae
mov
xchg
aad
out
retf
scas
or
inc
in
push
adc
sti
fild
aad
jp
xchg
cld
adc
dec
mov
pop
mov
sub
dec
cmp
fst
pop
inc
mov
pop
sub
dec
cli
fstp
aas
enter
xchg
sbb
rcl
cmc
add
es
push
xor
fnstenv
cmp
scas
hlt
icebp
rol
dec
sub
push
popf
mov
mov
mov
sti
push
cmc
cmp
pop
cmp
push
cmp
stos
xchg
inc
popa
jbe
and
in
add
jno
fisttp
adc
jge
or
pop
dec
nop
and
jae
lahf
inc
clc
jmp
or
sbb
scas
sbb
mov
in
lods
cmps
(bad)
neg
add
movs
out
mov
pop
ret
movs
(bad)
fiadd
xchg
xchg
jmp
dec
out
dec
movs
xchg
test
xor
stos
in
(bad)
fdivr
cmp
push
lahf
or
mov
jno
sbb
cmps
fisttp
imul
xor
inc
jge
cmp
adc
in
jmp
xor
inc
add
jge
fcom
lods
fist
push
sbb
mov
push
sub
jns
(bad)
int
jecxz
sbb
jecxz
cmp
iret
cmp
jo
jae
ins
mov
pusha
rcl
cs
ja
je
cld
mov
dec
cs
aas
movs
mov
jmp
imul
movs
sbb
loope
mov
(bad)
push
fldpi
jne
mov
int3
enter
cdq
and
outs
(bad)
daa
pop
cmps
xchg
and
mov
daa
and
mov
cdq
sbb
mov
adc
dec
inc
jb
ja
cdq
add
mov
fldcw
push
push
push
aad
mov
call
mov
leave
imul
and
adc
pop
jle
clc
cmc
jl
mov
cmps
pop
iret
mov
adc
xlat
dec
cmps
fmul
cmp
cwde
std
adc
pop
xchg
call
cli
jg
xor
int3
cs
sub
or
pop
xor
movs
les
jo
cs
das
addr16
clc
jg
pop
loope
mul
push
cs
loopne
push
sahf
mov
or
mov
arpl
and
sub
loope
in
jbe
out
or
add
mov
jae
mov
sub
imul
cdq
jecxz
dec
nop
mov
adc
(bad)
(bad)
aaa
retf
mov
jbe
dec
ja
lds
push
stos
je
inc
sbb
mov
mov
jae
sti
xchg
mov
test
enter
pop
test
out
mov
sub
xchg
(bad)
clc
and
jns
and
jg
mov
lods
sbb
pop
(bad)
fnstenv
jb
xor
mov
push
sbb
xchg
cmp
pop
test
loop
clc
scas
pop
bound
fwait
mov
mov
dec
cmps
cmp
inc
out
push
mov
xor
pop
nop
and
push
cs
and
lahf
cdq
push
lds
adc
sbb
in
fimul
pop
cmp
je
ins
dec
mov
dec
mov
cmp
je
inc
jmp
push
imul
loop
xchg
adc
hlt
mov
cmp
xchg
or
and
sbb
mov
or
or
cmp
mov
mov
mov
sub
nop
jge
(bad)
in
inc
inc
pushf
dec
mov
je
adc
(bad)
xor
fcomp
jno
ja
xor
ins
stos
dec
xchg
das
bound
pop
ret
sbb
and
add
mov
mov
pop
pop
shl
and
push
add
push
cld
add
fadd
jle
jg
cmp
adc
pop
movs
dec
inc
mov
aas
pop
daa
push
loopne
inc
inc
or
mov
and
inc
add
adc
out
es
es
fmul
cmp
ds
or
xor
popf
call
pop
jae
mov
jbe
out
sbb
xlat
inc
mov
nop
inc
pop
xlat
outs
fmul
jg
ret
pop
pop
jo
mov
mov
push
fbstp
imul
jle
inc
int
cmp
(bad)
data16
(bad)
or
lahf
test
arpl
cmp
mov
push
dec
inc
adc
sub
popf
dec
dec
ss
push
mov
mov
sbb
sbb
out
test
jne
call
call
jp
mov
rcl
ret
pop
xchg
int3
in
(bad)
fist
shufps
jp
sbb
mov
cmc
ds
ins
cmp
add
mov
mov
dec
mov
or
xchg
pop
das
and
mov
imul
mov
test
pusha
or
cmp
fimul
enter
vpunpckhwd
pop
mov
retf
jl
inc
imul
(bad)
imul
mov
test
push
shl
jbe
or
sbb
addr16
neg
sbb
inc
pushf
mov
xchg
dec
mov
adc
(bad)
pop
jmp
add
out
xor
test
imul
cli
cmc
push
loop
stc
mov
xor
shl
add
mov
test
arpl
test
cmp
lods
ret
jecxz
dec
aas
inc
adc
jno
jbe
lahf
aaa
mov
daa
adc
sub
xchg
lods
iret
xor
push
inc
jl
push
fadd
mov
xor
retf
xchg
adc
jle
jns
xor
cmps
add
(bad)
pusha
aad
lods
jg
into
popa
inc
int
inc
mov
pusha
ja
dec
lock
and
adc
or
pop
pop
sub
lea
dec
fstp
jl
inc
out
mov
ins
dec
add
jno
add
pop
fcom
dec
add
test
fs
es
aas
adc
(bad)
ss
out
lock
pop
sub
adc
(bad)
xor
xchg
loope
jo
pushf
mov
in
push
aad
icebp
test
push
data16
push
dec
bound
mov
jbe
sub
dec
xchg
or
xor
mov
jmp
and
call
xchg
jbe
aas
dec
mov
add
fist
mov
push
lods
dec
stc
pop
call
adc
out
jne
std
push
sub
bound
cmps
or
mov
ret
mov
lea
aaa
adc
call
dec
xchg
into
jmp
sbb
inc
js
push
adc
clc
push
dec
inc
mov
dec
retf
or
pop
add
and
mov
pop
rcr
out
add
mov
lods
lds
push
arpl
in
adc
inc
and
std
int3
pop
pop
jge
stos
in
lahf
mov
pop
sbb
inc
sub
jb
xor
and
jp
popf
jo
pop
jp
fnstcw
push
jo
inc
and
idiv
sub
fnstcw
inc
xor
push
shl
and
mov
iret
outs
das
sbb
jmp
ins
or
jle
push
fwait
and
push
cmc
push
fild
lea
sub
xor
xchg
xchg
mov
push
sbb
mov
les
mov
loope
cmp
jns
sti
add
stos
cli
mov
sbb
dec
adc
adc
(bad)
out
rcr
(bad)
gs
int3
push
and
and
jge
repz
sub
jbe
movs
pushf
cmc
cwde
cmp
frstor
xor
mov
ret
iret
xchg
lds
xchg
out
sbb
sub
xor
dec
dec
dec
(bad)
xchg
sbb
push
sub
push
movs
out
leave
stc
nop
repnz
repz
push
xlat
inc
sahf
mov
mov
add
leave
in
aam
(bad)
jo
outs
push
jmp
jp
test
cdq
cmp
fcomi
xchg
(bad)
push
int
sahf
fs
bound
(bad)
mov
ja
aaa
mov
dec
push
pop
cmp
inc
ret
pusha
out
repz
sbb
(bad)
out
scas
das
fcmovb
push
cmp
xchg
push
cld
fild
es
pop
xchg
or
mov
sbb
adc
add
inc
sub
push
xor
cmc
xor
jb
or
outs
(bad)
pop
cmp
pop
pop
sub
xchg
add
or
jp
shr
jecxz
cwde
add
aaa
and
push
xor
ret
cmp
and
mov
dec
mov
fstp
and
adc
in
daa
clc
imul
daa
push
neg
push
movs
pop
les
add
sbb
dec
and
das
jbe
stos
lods
jp
icebp
inc
into
mov
dec
data16
lahf
aad
cmps
aas
push
xchg
or
xchg
test
bound
cwde
add
jae
addr16
fisubr
pop
sbb
or
xor
(bad)
push
inc
mov
dec
ja
mov
ins
mov
sbb
mov
cmp
jp
and
(bad)
jp
pop
jg
inc
xchg
jmp
popa
lods
out
mov
jae
adc
mov
lods
js
sbb
test
mov
mov
add
test
and
mov
call
bound
inc
push
outs
mov
inc
pop
cmps
push
sub
std
jle
jne
pop
loop
mov
cld
push
inc
(bad)
mov
sub
movs
ins
cwde
sub
jge
movs
mov
or
test
leave
mov
nop
in
scas
xchg
or
jecxz
nop
dec
aam
add
dec
cmp
fwait
into
stc
push
mov
add
jmp
sbb
ficomp
xor
addr16
xor
dec
clc
push
xchg
popa
push
dec
add
fnstenv
repnz
imul
push
imul
lea
and
jge
pop
or
mov
and
inc
scas
lock
pop
push
xchg
mov
pop
je
or
jmp
xchg
cwde
fs
mov
push
sbb
inc
mov
inc
popa
dec
fistp
idiv
and
mov
aam
outs
pop
out
and
sti
leave
sahf
dec
jnp
call
sub
rcr
mov
icebp
add
aam
xor
push
xchg
jno
pushf
popf
mov
jo
sbb
cmp
sbb
dec
inc
pop
aam
clc
jnp
test
xchg
pop
jg
push
mov
out
jmp
adc
xor
movs
mov
aam
data16
xor
(bad)
out
add
jg
inc
or
cdq
xchg
test
mov
dec
push
fs
mov
shl
retf
add
jns
ficomp
(bad)
jb
mov
sbb
lods
or
je
inc
pop
pop
mov
ins
(bad)
sahf
fsubr
mov
sub
scas
out
fwait
adc
call
sbb
jmp
cli
jns
add
test
into
mov
xchg
mov
icebp
in
and
(bad)
in
fcom
add
and
inc
ja
xchg
leave
fdivrp
mov
lahf
shr
jge
ss
push
pop
sub
inc
pop
add
inc
jb
into
enter
cmp
add
add
fwait
cli
(bad)
lds
ins
in
xchg
pop
movs
inc
cs
mov
cmp
sbb
inc
addr16
fld
add
jae
xchg
xor
pop
mov
xlat
push
dec
(bad)
scas
sti
cmp
bswap
movs
scas
sub
adc
fisttp
fcom
mov
and
xor
push
xor
mul
jmp
push
sub
aaa
add
mov
int
dec
push
adc
pushf
mov
and
inc
pop
xchg
cmp
pop
cmp
mov
cmps
les
call
aaa
stc
xchg
adc
sub
xor
inc
aas
mov
nop
pop
stos
fdivr
(bad)
and
ds
xchg
in
sub
mov
mov
pop
pop
or
pop
loop
pushf
es
mov
sub
ret
pop
retf
inc
push
mov
enter
(bad)
cdq
or
jnp
jmp
jle
inc
add
out
or
cmp
aas
scas
sahf
cmps
test
xchg
out
and
pushf
jo
xor
push
xchg
push
mov
das
push
lds
push
or
sbb
inc
push
xchg
imul
cmp
mov
int3
pop
mov
mov
cmp
or
cmps
xchg
(bad)
hlt
xor
(bad)
int3
sub
movs
xchg
pop
cwde
scas
ds
ja
mov
xchg
push
mov
and
push
out
mov
add
fs
adc
call
mov
lahf
fwait
inc
jo
ja
in
xor
scas
and
push
ss
sbb
and
pop
push
cmp
test
idiv
pop
fnsave
sub
mov
les
adc
xor
sahf
pushf
mov
jbe
sub
dec
inc
sti
pop
test
fwait
cmp
dec
xor
pop
push
ins
add
or
cmps
adc
cwde
popf
sbb
mov
pop
lds
test
inc
mov
je
xchg
(bad)
scas
ds
(bad)
ret
jne
xchg
aad
fs
adc
test
inc
adc
mov
sbb
mov
rol
and
ss
daa
repnz
jns
lds
movups
push
int
xor
jnp
pop
dec
lea
xchg
(bad)
stos
jge
shl
popf
or
(bad)
jmp
xor
sbb
xchg
out
popf
loopne
loop
or
ds
dec
adc
pop
aad
dec
push
ss
(bad)
cmp
jp
cmp
test
or
adc
mov
pop
test
(bad)
retf
cmc
sub
or
mov
ds
sub
pop
pop
add
cmc
pop
lods
sahf
enter
test
jmp
mov
cli
sbb
xchg
cmp
test
ds
mov
and
in
repnz
les
jo
fs
adc
aad
call
stos
and
cs
sbb
in
fistp
and
loopne
scas
repz
ds
xor
jae
ins
pop
pop
shl
jno
xchg
stos
xchg
xchg
psubb
mov
mov
fbld
das
jg
(bad)
cmp
mov
sub
call
jecxz
ja
lahf
jl
jo
sar
fchs
lahf
and
(bad)
push
ds
sub
sub
sbb
fdiv
fnstsw
out
ror
das
sbb
mov
(bad)
jp
pushf
inc
adc
in
test
inc
iret
cmp
add
inc
pop
rcl
push
sub
cld
in
fwait
xchg
inc
jmp
pushf
lods
pop
fwait
pop
and
outs
(bad)
enter
sub
stos
arpl
sub
gs
mov
std
std
mov
add
xchg
jmp
xchg
cmovb
jp
nop
mov
les
ret
jnp
mov
(bad)
push
cmp
fcom
out
sbb
cmc
and
jbe
movs
xor
xor
xor
push
pop
mov
jo
and
mov
std
out
xrelease
pop
(bad)
mov
sbb
js
xor
hlt
sbb
test
imul
push
stc
push
xchg
and
lods
(bad)
lods
shl
test
push
popa
add
mov
inc
pop
js
mov
mov
xchg
std
jmp
je
cmp
jae
jmp
test
xor
inc
jbe
sti
repnz
mov
outs
aas
push
fst
imul
retf
pop
ss
add
sti
fcomip
mov
add
dec
pop
clc
aad
imul
cs
call
jecxz
ds
sbb
dec
pop
adc
jnp
inc
test
cmp
xor
pop
xchg
ins
mov
push
sub
jl
in
sub
pop
test
test
out
mov
lods
mov
mov
adc
lods
aam
clc
leave
or
jb
bound
mov
mov
cmps
or
mov
sub
mov
scas
cdq
inc
nop
iret
jne
add
sub
sbb
and
sub
(bad)
call
sbb
es
cmp
adc
jb
retf
cwde
adc
or
imul
cmp
sti
jno
enter
xchg
mov
mov
add
adc
cmps
stos
sbb
(bad)
addr16
out
jo
iret
adc
push
jmp
cli
fwait
cwde
fnstcw
or
int
xchg
adc
mov
mov
xlat
cmp
inc
cmp
jns
(bad)
xor
mov
sbb
push
pop
jg
mov
mov
cmp
sbb
lea
mov
(bad)
das
ret
(bad)
fwait
imul
(bad)
push
cmps
mov
pop
cmp
sbb
sub
fcom
push
push
stos
inc
and
push
int3
test
pop
and
imul
and
xor
push
ds
jmp
mov
mov
leave
cmovs
ret
sbb
pop
in
mov
sahf
mov
pushf
mov
sub
fstp
aad
mov
lods
pop
mov
inc
pushf
mov
outs
mov
and
mov
je
sub
aam
jecxz
(bad)
jg
push
and
repz
mov
xor
push
jo
adc
cmp
test
inc
push
adc
cld
mov
jmp
inc
stos
xchg
call
mov
movs
call
push
pusha
pop
test
push
mov
lds
outs
cld
fisttp
push
xchg
xchg
hlt
fistp
(bad)
loope
add
xchg
js
push
sub
fwait
push
leave
adc
cmp
dec
xchg
mov
jae
inc
sti
int
pop
adc
fmul
sti
js
loopne
pop
xchg
cwde
(bad)
repz
mov
push
or
mov
in
pop
sbb
sub
jne
push
dec
jl
stc
push
mov
xlat
or
adc
xchg
xor
ret
sub
adc
lods
in
dec
(bad)
(bad)
jne
stc
pusha
jge
stc
or
repnz
sbb
mov
add
(bad)
push
daa
push
adc
mov
fbld
(bad)
aad
movs
or
aad
mov
push
not
jb
dec
pop
xor
int3
mov
dec
(bad)
xor
xchg
arpl
leave
sub
outs
xor
or
pop
in
and
dec
pop
mov
mov
dec
jp
push
sub
enter
jg
push
pop
dec
outs
mov
fisttp
pusha
fiadd
cmps
push
ficom
inc
push
pop
jo
adc
push
std
pop
xchg
mov
inc
adc
and
fs
bound
mov
jns
ds
in
mov
pushf
in
outs
int3
push
and
and
rcl
push
idiv
stos
loopne
(bad)
(bad)
cmp
dec
xchg
mov
cmp
xor
sahf
arpl
cmps
mov
mov
pop
adc
outs
icebp
xor
jecxz
pop
dec
adc
pop
movq
or
cmc
imul
aas
aas
mov
hlt
xor
and
or
scas
(bad)
shl
in
dec
sti
or
pop
call
pop
(bad)
call
movs
mov
dec
(bad)
in
scas
pop
dec
lea
jae
adc
aad
test
pusha
jb
push
lods
pop
xchg
jle
pop
dec
test
xor
imul
pop
mov
hlt
in
std
(bad)
in
xor
or
pop
(bad)
test
in
push
add
movs
lea
mov
add
call
push
mul
or
jp
jmp
cmp
pop
inc
add
push
aam
into
add
sub
hlt
iret
cli
out
mov
and
shl
xchg
(bad)
pop
xor
inc
cli
jg
push
add
out
sbb
jnp
dec
fdivr
ror
xchg
fild
in
sub
fdivr
mul
fld
rcl
ret
push
cmp
movs
cmp
cmc
into
int
xchg
push
ret
jg
fdivr
pusha
daa
adc
je
shr
pop
loope
xor
sbb
mov
mov
int3
hlt
or
pop
lock
sbb
mov
cwde
cwde
call
adc
mov
sub
pop
jns
fist
push
or
daa
clc
mov
mov
mov
ficomp
jns
lahf
dec
dec
sbb
xor
and
fistp
stos
cmp
mov
enter
stos
nop
repz
sub
popf
sub
in
sub
rcl
add
adc
pushf
jmp
hlt
hlt
out
loopne
mov
jns
mov
and
cmp
pop
imul
sbb
fwait
push
clc
jns
and
push
cli
lahf
sub
dec
jae
sbb
int3
icebp
sbb
xchg
lock
sub
mov
and
xchg
test
add
push
jo
repnz
push
mov
mov
lock
and
(bad)
dec
inc
sub
jl
mov
aam
cli
aad
pusha
push
rol
pop
call
dec
adc
adc
fcom
aas
pusha
lock
js
dec
out
retf
cli
mov
out
(bad)
push
sbb
dec
sub
sbb
es
aas
pop
mov
fsub
js
cdq
xor
fwait
(bad)
jge
sbb
sub
pop
jmp
ret
fnstsw
mov
in
stos
dec
pmaxub
push
mov
in
in
sbb
out
jmp
ss
daa
pop
popf
loopne
sbb
int
fbstp
inc
cmps
mov
aaa
adc
call
push
stos
clc
test
icebp
sar
pusha
cmp
or
in
call
mov
sub
mov
push
(bad)
push
outs
inc
in
jl
rcr
loope
xchg
xchg
sub
test
xchg
lea
sbb
pop
imul
imul
pusha
xor
mov
fimul
push
(bad)
cdq
test
mov
pusha
pop
push
(bad)
mov
ss
mov
xchg
or
push
pop
xchg
shl
sbb
rcr
pop
sub
test
into
add
jl
cmp
mov
mov
cmp
fcomp
inc
loop
xchg
jo
jnp
push
adc
test
fwait
das
mov
test
dec
sub
jl
popf
call
addr16
pop
jno
lods
sbb
out
push
or
dec
loopne
sub
jbe
and
jmp
mov
push
push
sub
mov
cdq
and
into
xchg
dec
and
inc
and
(bad)
cmp
pop
sti
pop
mov
lahf
push
jle
sub
dec
les
pop
push
push
nop
gs
mov
sbb
and
div
out
loop
icebp
mov
repz
pop
test
mov
inc
xchg
inc
pop
not
cmp
sbb
cmp
cdq
dec
inc
std
xchg
adc
test
and
aaa
stos
sub
jg
lock
xchg
jl
or
add
ret
adc
lea
pop
imul
mov
sub
loope
enter
xlat
and
push
xlat
mov
and
imul
mov
jns
ret
or
fs
cmp
push
gs
into
inc
ins
xchg
hlt
mov
dec
popf
in
stos
aas
cwde
inc
cmp
sub
inc
fwait
or
shl
repnz
cmp
jle
xchg
or
xlat
test
or
ins
mov
jmp
fist
(bad)
lods
sub
push
xor
mov
adc
fwait
pop
jb
xor
(bad)
aam
cwde
out
inc
and
cmp
es
or
and
outs
int
in
cdq
xor
js
std
aam
dec
push
and
cmp
or
fsub
adc
add
jge
sub
inc
ret
leave
adc
(bad)
aad
ror
inc
loop
scas
adc
shr
sti
inc
jmp
xor
bound
or
push
or
gs
mov
jns
loope
xchg
in
dec
aad
push
xlat
scas
push
or
test
and
cmp
popf
in
and
lahf
test
(bad)
jmp
dec
push
imul
add
ss
mov
stos
xor
adc
lods
in
or
jmp
or
dec
push
icebp
popf
dec
into
shr
mov
mov
push
icebp
inc
push
jbe
xchg
mov
jle
sbb
inc
sti
pop
repz
jne
rol
adc
and
xchg
das
xchg
add
sbb
outs
or
ss
sbb
mov
repnz
outs
rcr
and
adc
dec
mov
outs
enter
jnp
popf
call
lods
pusha
sub
jmp
retf
adc
and
sbb
cmps
enter
mov
sub
sub
ds
mov
loope
push
pop
enter
out
icebp
cmp
je
or
dec
xchg
lods
mov
daa
aam
xchg
pop
bound
and
lahf
int3
int
dec
pop
ins
mov
sub
js
ret
gs
into
inc
sahf
and
nop
xchg
retf
sbb
mov
sub
cmp
sti
xor
imul
int3
int3
fs
jge
mov
pop
cmp
dec
fstp
push
ret
mov
fwait
mov
push
nop
daa
and
push
mov
movnti
dec
cmps
inc
cmps
and
cmp
imul
sub
and
add
dec
retf
adc
add
fldenv
jo
pop
sbb
pushf
cmps
push
imul
sub
call
sbb
jg
mov
aas
xor
mov
xor
cmp
bound
(bad)
sti
(bad)
imul
lock
sbb
mov
and
ror
dec
adc
and
add
sar
iret
adc
fcom
(bad)
mov
xchg
imul
dec
add
ja
into
pop
and
push
mov
outs
push
inc
nop
test
mov
xchg
in
(bad)
sbb
dec
mov
test
pop
das
add
mov
xor
les
dec
sub
cmp
dec
lock
lods
xchg
cdq
out
ret
lods
cmp
pop
inc
xor
and
and
xlat
std
fs
jae
ja
nop
mov
ss
jmp
xchg
inc
pop
push
stos
outs
add
shl
and
xor
iret
sub
icebp
shl
sub
pop
mov
xor
inc
or
push
cmps
mov
mov
test
xchg
sbb
jg
mov
lods
jge
sbb
ror
adc
lds
pop
inc
sbb
or
jmp
xchg
and
outs
xor
inc
(bad)
fmul
test
mov
jae
repnz
ss
stc
pmaxsw
(bad)
xor
cld
dec
and
mov
aaa
jmp
jle
add
out
int
(bad)
adc
mov
mov
sub
(bad)
aas
mov
xor
mov
out
hlt
lahf
dec
cmp
in
sahf
neg
and
adc
mov
out
daa
add
xor
adc
dec
and
jb
cmp
jge
adc
push
xchg
fcmovne
jb
xor
aas
xchg
imul
mov
ss
pop
cmps
or
jb
adc
xchg
cmp
xchg
sbb
arpl
sub
pop
dec
test
mov
sar
cmp
push
sub
imul
adc
sub
shl
xor
stc
loope
aad
mov
sbb
adc
xor
inc
and
cmps
loope
(bad)
in
xor
daa
data16
inc
jo
aam
xor
bound
or
gs
int3
ja
xchg
pop
push
fstp
imul
pop
fsubr
jg
mov
in
pop
xor
lods
pop
aad
xchg
sbb
jnp
mov
in
js
(bad)
adc
dec
adc
inc
mov
popa
rcr
push
out
test
pop
sub
sti
and
int3
test
fild
push
cmps
popa
(bad)
mov
out
sbb
xchg
ret
mul
dec
add
sub
pop
leave
int3
jp
pop
dec
clc
ins
daa
cld
pop
out
adc
mov
std
mov
pop
inc
shr
xchg
mov
data16
mov
mov
call
pop
mov
xchg
test
push
xchg
cmp
stos
(bad)
cmp
add
outs
out
pop
stos
popf
xor
jbe
ja
mov
ins
fadd
or
sbb
jo
mov
fcom
dec
call
outs
sub
xchg
pop
pop
test
xchg
lea
jp
outs
push
rol
sbb
ret
daa
popf
and
loope
xchg
das
repz
pop
repnz
xor
sub
in
fst
adc
or
or
push
int
sbb
rcl
mov
call
je
cmp
xor
outs
imul
fs
imul
inc
cmp
sbb
ss
icebp
mov
mov
lock
mov
mov
out
and
sar
pop
gs
outs
add
jno
idiv
lds
(bad)
mov
jnp
push
cdq
xor
ins
ds
jbe
out
xor
lods
arpl
loope
jle
(bad)
cmp
int3
cmp
pop
add
mov
dec
sbb
sbb
mov
xchg
jo
aas
cmp
xchg
jnp
cmp
mov
dec
push
lds
inc
jge
iret
xor
(bad)
arpl
repnz
add
jmp
or
cvtps2pi
repz
bndldx
icebp
cs
adc
movs
mov
inc
ror
xor
sbb
dec
mov
sub
cmp
cmp
loopne
fidiv
cdq
mov
jns
loope
inc
loopne
les
mov
or
xor
loope
adc
les
in
je
test
jmp
clc
call
push
pop
push
neg
stos
lods
jo
enter
adc
xchg
test
shl
mov
mov
push
loop
inc
arpl
mov
int3
push
loopne
scas
into
mov
sbb
cmp
xchg
jmp
test
ins
or
xchg
push
and
mov
or
cmp
jecxz
jmp
jno
dec
inc
(bad)
outs
sub
mov
sar
jecxz
and
push
(bad)
int
pop
adc
inc
popf
iret
imul
int
and
add
add
ficom
je
imul
mov
repnz
add
ds
(bad)
pop
arpl
imul
xchg
fmul
add
and
nop
es
mov
div
into
lock
(bad)
and
es
cmc
out
in
cmps
push
pop
add
adc
imul
lahf
data16
jl
dec
ins
enter
mov
push
mov
cwde
(bad)
fwait
add
cmp
cli
add
jb
loop
out
push
xchg
xor
jmp
jg
ret
sbb
sahf
arpl
push
nop
sbb
mov
and
lock
arpl
(bad)
jno
into
rdtsc
lock
and
ins
loope
repz
popa
push
dec
mov
mov
cld
xchg
movs
jp
and
mov
pop
jnp
cdq
lahf
aaa
sub
daa
cmp
sub
aaa
xor
jg
arpl
xor
js
dec
shl
sub
jmp
push
xchg
jnp
or
jmp
movs
rol
mov
jmp
push
call
test
test
dec
or
and
stos
(bad)
fistp
xchg
enter
call
adc
jg
mov
sub
inc
outs
mov
mov
ret
arpl
nop
jbe
add
mov
cld
cmp
mov
fwait
test
or
aad
fmul
xor
xor
dec
aaa
inc
call
pop
test
rcr
lods
mov
retf
xor
out
fistp
out
mov
xor
data16
fisub
jbe
jo
add
call
xchg
or
xchg
out
out
jle
pop
sub
sub
addr16
not
movs
into
mov
fbld
es
les
pop
lahf
jbe
push
pop
push
xchg
stc
push
sbb
test
xchg
into
fcmove
push
iret
jmp
(bad)
out
inc
idiv
xor
sub
lock
in
daa
push
push
mov
push
pop
xchg
ss
ret
icebp
push
retf
test
and
sar
mov
jne
and
daa
sub
mov
adc
into
jnp
arpl
cli
jae
mov
repnz
ins
sti
test
test
scas
mov
xchg
pop
mov
xchg
sub
jnp
inc
lock
push
cmps
xor
and
dec
jo
mul
jo
pop
cmp
test
jge
and
xchg
or
xor
movs
loopne
cmp
sti
pop
xchg
push
pop
mov
fadd
or
pop
and
sub
aaa
xchg
aam
retf
fwait
mov
cmp
mov
ins
and
mov
pop
push
outs
out
fdivp
hlt
pop
and
mov
test
stc
scas
(bad)
ror
(bad)
inc
lods
fwait
das
lea
out
fadd
fcomp
push
sbb
out
call
add
outs
cmp
das
add
sbb
div
in
jl
push
sbb
adc
mov
mov
mov
mov
or
fidivr
mov
xchg
sar
pushf
enter
call
ss
outs
call
imul
aam
and
std
pop
pop
dec
cmp
lock
cmp
fwait
mov
jnp
popf
xor
adc
sbb
xchg
(bad)
out
jnp
mov
jbe
mov
outs
add
sbb
xor
jb
pop
mov
outs
retf
ror
push
sar
lds
cmp
xchg
jns
mov
pusha
or
ffreep
inc
push
mov
pop
jno
sbb
(bad)
out
push
push
fistp
fcmovnb
xor
pop
jge
mov
ffree
inc
mov
inc
ficom
sbb
sbb
pop
icebp
repnz
pop
xor
sub
ins
xor
mov
xor
push
pop
or
aaa
in
mov
or
mov
retf
or
jecxz
(bad)
in
clc
inc
ror
mov
rol
jecxz
push
std
test
adc
mov
jno
jae
rol
(bad)
stc
test
cli
or
repnz
(bad)
addr16
mov
mov
add
ins
mov
adc
inc
jle
sahf
and
arpl
inc
ins
dec
push
loopne
sub
leave
mov
cs
sub
mov
mov
nop
pushf
mov
jb
imul
daa
adc
push
jb
movs
fxch
or
fdiv
(bad)
xor
repnz
fnstsw
adc
mov
ins
lea
adc
sbb
outs
or
dec
fisub
add
fwait
imul
mov
mov
fwait
lock
inc
mov
sbb
inc
ss
int3
push
lock
mov
adc
xchg
(bad)
mov
mov
ror
sbb
addr16
cmp
sub
push
push
xor
mov
push
sbb
pop
nop
ja
adc
adc
pop
inc
inc
(bad)
pop
push
ja
adc
jecxz
inc
sar
sbb
xchg
int3
fist
ret
arpl
jle
xchg
sbb
(bad)
ror
mov
aaa
(bad)
jle
or
jbe
sub
aas
cmps
and
stc
mov
ficomp
pop
inc
cdq
dec
xor
dec
fdivr
and
(bad)
mov
lock
mov
xor
call
or
push
cmps
xchg
mov
sbb
aad
in
cmps
daa
(bad)
pop
jge
jl
jns
add
sub
sti
(bad)
cmps
sbb
dec
and
mov
sub
pop
dec
mov
leave
push
and
ss
lock
je
push
push
sub
sbb
mov
lods
call
cmp
cli
sub
add
nop
push
xchg
data16
mov
or
test
cmp
mov
jl
in
data16
ins
xor
imul
xchg
mov
lods
pop
mov
daa
or
or
sbb
fsub
jbe
test
xchg
pop
push
or
adc
inc
dec
bound
ins
call
sub
nop
imul
lahf
pusha
rcr
shr
sbb
xor
retf
lds
mov
int3
xchg
enter
jnp
add
add
das
and
es
ins
je
cmp
out
add
inc
dec
idiv
mov
or
ins
or
les
xor
sbb
and
cmp
inc
test
fld
sbb
scas
test
pop
add
aam
and
push
push
and
out
mov
jo
mov
in
and
test
pop
ss
ss
inc
cmps
fucom
adc
test
loop
xchg
repz
mov
mov
shl
sti
jb
push
xor
push
sbb
cmp
shr
popa
or
or
mov
jnp
jne
popa
add
repz
jmp
jg
pusha
and
mov
daa
jbe
and
popf
add
sti
ret
xor
mov
jmp
shl
pushf
sbb
inc
or
and
sar
and
imul
mov
nop
ss
retf
xchg
test
dec
(bad)
xchg
mov
arpl
out
and
fdiv
xor
imul
bound
and
mov
out
jle
int3
add
pusha
out
adc
push
mov
js
mov
cmc
inc
mov
mov
jecxz
repz
or
enter
mov
(bad)
stc
lods
push
jns
in
(bad)
loopne
pop
dec
ins
xor
sub
push
not
mov
js
pop
rcl
jb
add
and
nop
adc
movs
out
jb
jo
xchg
push
and
jbe
and
in
add
dec
leave
clc
dec
shl
test
mov
jmp
fstp
adc
sub
outs
cmp
retf
jmp
ins
mov
(bad)
sahf
retf
(bad)
enter
sbb
inc
adc
mov
inc
or
xor
hlt
mov
jno
dec
clc
xlat
dec
inc
test
lods
cmp
add
icebp
aaa
cdq
mov
xchg
ret
jl
adc
xor
xchg
(bad)
mov
fadd
inc
dec
je
mov
daa
jo
(bad)
pop
dec
pop
xchg
aaa
push
repnz
repz
cmp
push
(bad)
out
js
adc
stos
add
aad
xor
out
adc
loop
jns
pop
out
mov
ror
in
jmp
mov
fwait
inc
loopne
jno
jb
stos
push
lock
mov
pushf
inc
and
fwait
push
mov
jle
mov
ins
or
ror
leave
ins
(bad)
call
dec
and
in
fucomip
neg
out
enter
sub
ss
sbb
test
push
stos
stos
push
aad
scas
cmp
mov
fisub
mov
je
jo
adc
pushaw
sub
ror
test
xlat
push
mov
outs
pop
pushf
or
icebp
sbb
mov
mov
(bad)
pushf
push
and
pop
inc
mov
dec
dec
jge
add
addr16
mov
mov
dec
mov
mov
rcl
xchg
pop
push
stc
in
pop
add
mov
dec
faddp
stos
sub
add
xchg
xor
aaa
(bad)
loop
pop
repnz
mov
lods
push
ins
(bad)
aaa
in
cmc
hlt
fbld
outs
mov
outs
aas
cmp
mov
mov
sbb
xchg
das
push
xor
lods
dec
out
mov
out
xchg
push
mov
ds
jge
inc
jmp
ins
pop
popa
dec
test
xor
mov
or
or
aas
xor
cmp
sbb
aaa
add
test
pusha
xor
shl
add
mov
lahf
imul
fadd
sar
sti
cmp
ins
test
das
outs
outs
sub
aam
pusha
pop
sub
pop
mov
lods
(bad)
jle
push
cmp
push
call
xchg
(bad)
pop
mov
add
xor
adc
aas
jno
fs
retf
jne
cmp
mov
dec
xchg
std
mov
and
fiadd
pop
push
cmp
dec
or
sbb
cmps
xor
cmps
mov
stos
bound
xlat
mov
and
lds
dec
imul
inc
dec
stos
ret
cmp
pop
repz
mov
add
mov
or
xor
repz
xchg
pop
pop
dec
outs
xchg
not
add
std
pop
outs
sub
and
inc
push
push
loopne
sbb
mov
inc
pusha
pushf
cld
sbb
fsubr
loope
cmps
xchg
(bad)
cld
ins
mov
adc
cmp
cmp
mov
nop
push
and
popa
lods
xchg
fist
add
inc
mov
rol
sub
mov
mov
mov
jecxz
cmc
mov
outs
xor
xchg
faddp
mov
out
adc
xchg
xlat
aam
fisttp
out
sub
fisttp
mov
pushf
loopne
arpl
cmp
inc
and
mov
fadd
je
xor
std
ficom
(bad)
fdiv
adc
and
add
pop
xchg
mov
cdq
mov
test
dec
out
daa
enter
add
jp
pop
(bad)
or
aad
imul
shr
pop
inc
dec
dec
push
dec
and
adc
ins
out
add
inc
loop
add
mov
dec
adc
jecxz
xor
shl
jo
popf
push
dec
mov
inc
aaa
pushf
xchg
ins
mov
fsub
jne
fidiv
mov
dec
ds
aad
fpatan
mov
fsub
jge
push
dec
ror
mov
mov
mov
mov
ins
cmp
cmp
int3
inc
stos
clc
jge
lock
or
and
and
neg
jns
add
and
push
outs
xor
dec
arpl
mov
sub
(bad)
dec
test
dec
enter
in
data16
or
cmp
mov
dec
pop
test
retw
mov
cmc
addr16
and
mov
mov
dec
dec
pusha
outs
es
fadd
pop
pop
mov
idiv
jne
les
mov
es
sbb
add
outs
pop
add
not
jecxz
movs
sbb
adc
inc
inc
retf
aad
loope
jnp
test
jbe
adc
and
ja
and
xor
inc
fs
jecxz
bound
adc
adc
adc
pop
push
cmp
add
sub
sbb
hlt
cmp
dec
mov
sahf
xchg
adc
xor
hlt
inc
push
xor
in
int3
rcr
mov
in
sbb
sub
pop
in
and
or
push
sti
int3
scas
inc
lods
jbe
lock
retf
scas
das
leave
cmp
sub
xlat
cmps
add
mov
dec
mov
pop
in
mov
sbb
repz
pushf
clc
mov
aas
call
pop
imul
bound
sti
shl
aas
stos
cli
ins
inc
xor
add
jbe
fnstenv
push
and
frstor
iret
adc
cmps
loope
dec
bound
jge
mov
mov
std
push
out
push
repnz
pop
push
dec
in
adc
or
hlt
outs
stos
jl
and
push
sar
xlat
outs
ret
dec
loop
inc
fimul
(bad)
sar
inc
sbb
or
loopne
pop
rcr
ss
(bad)
pop
stos
push
jecxz
or
add
push
dec
inc
nop
fisub
or
in
scas
add
daa
int
inc
jns
xchg
push
pushf
pop
xchg
add
lods
and
loope
(bad)
mov
shl
mov
clc
out
mov
cmp
mov
idiv
mov
push
arpl
neg
(bad)
repnz
pop
scas
sub
and
mov
push
iret
ss
jge
retf
cmp
ds
adc
repnz
mov
stos
aas
int
add
adc
out
dec
out
sbb
pop
pop
xor
ror
push
mov
mov
cmp
dec
xor
mov
pop
xchg
jnp
aas
cmp
mov
push
cmps
in
icebp
sahf
mov
(bad)
sub
mov
daa
test
hlt
aas
daa
pop
rcr
call
adc
cwde
int
data16
mov
xchg
pop
out
clc
sahf
leave
bound
cwde
ins
mov
lahf
data16
cmp
adc
push
neg
jecxz
out
mov
push
sbb
mov
sbb
std
cmp
jmp
mov
sti
adc
and
in
mov
iret
ret
adc
retf
cmps
jmp
outs
out
out
and
aaa
fsubr
cmp
arpl
jmp
ins
int3
sti
and
mov
ret
(bad)
aad
int
aad
add
aad
cld
popf
mov
jg
imul
test
aaa
push
addr16
push
mov
dec
mov
dec
outs
mov
push
iret
mov
out
adc
mov
pop
sbb
add
ins
push
outs
cmp
pop
mov
pop
mov
jno
xor
sahf
fcomip
push
sbb
sub
jb
out
sub
xchg
mov
xchg
movs
bound
pop
shr
out
out
pushf
mov
out
add
fldenv
and
into
inc
mov
push
dec
in
xor
sar
mov
adc
jp
and
rcr
push
jno
inc
aaa
shl
push
in
stos
(bad)
xchg
ins
xchg
mov
mov
jne
xchg
dec
jbe
(bad)
cs
in
mov
bnd
sti
fcmovne
sub
xchg
mov
test
cmp
fwait
push
sbb
xor
inc
cmp
and
push
cmp
mov
pop
scas
aaa
bound
adc
xor
repnz
dec
jns
fst
mov
pop
inc
push
fdivrp
mov
cmp
test
xor
xor
xor
pop
rcl
inc
neg
int3
adc
fbld
push
stos
adc
ins
adc
mov
in
xchg
xor
aas
add
sti
or
mov
fcmovnu
xchg
cmp
daa
push
jae
fninit
dec
stos
int
enter
push
jb
popa
lock
loop
je
push
jno
xor
(bad)
mov
jns
cmp
cmps
jecxz
inc
cmp
and
or
pop
neg
dec
ror
sbb
xchg
loopne
cmp
push
cmc
inc
inc
shl
mov
popa
jg
arpl
push
pop
retf
mov
test
in
jp
pop
(bad)
cld
(bad)
out
jns
data16
pop
bound
jp
xchg
jmp
xchg
repz
outs
push
sub
jb
dec
mov
inc
fst
sahf
inc
int3
xor
dec
(bad)
out
sti
sub
push
pop
fimul
in
js
push
pusha
sub
inc
add
callw
mov
push
add
inc
or
jmp
mov
aam
lahf
sub
xchg
or
sub
(bad)
jmp
inc
cdq
or
xor
enter
fwait
mov
push
enter
inc
sub
or
pop
mov
cmc
adc
adc
adc
popf
(bad)
scas
dec
lods
inc
fistp
sbb
icebp
or
call
push
mul
push
mov
or
(bad)
fldenv
mov
and
ret
sub
stc
lods
sti
ror
in
cmp
dec
push
jmp
dec
loope
cmovl
adc
dec
or
mov
sub
out
call
in
ret
adc
enter
mov
retf
neg
(bad)
aaa
add
loopne
jg
and
push
in
cmp
ins
mov
jg
fst
inc
and
cmps
jmp
and
inc
add
pusha
xchg
bound
shl
ss
or
push
in
or
ret
xor
lock
xor
lds
push
aaa
jae
sbb
jb
add
mov
jns
stc
pop
mov
mov
sbb
sar
sub
mov
iret
adc
push
pop
and
in
or
test
xchg
push
xchg
sub
inc
push
inc
xchg
test
repnz
push
pop
mov
hlt
sbb
cmp
icebp
test
fcom
out
or
inc
out
jae
mov
xchg
out
aam
(bad)
and
dec
idiv
sar
imul
push
sub
mov
mov
sahf
imul
xor
mov
push
ret
mov
int3
scas
int
(bad)
push
aas
js
ds
imul
mov
inc
ja
fsub
rcl
movs
and
das
jae
adc
dec
lds
push
in
and
or
inc
fdivr
cmc
add
and
xchg
pop
fist
test
aad
popf
xchg
stos
push
jp
dec
dec
cdq
dec
push
retf
mov
xlat
iret
loopne
adc
nop
adc
and
gs
and
jmp
jns
xchg
sbb
pop
aad
popf
popa
fbld
stc
cs
cmp
ret
xlat
mov
prefetchnta
std
test
xlat
sub
jmp
leave
mov
mov
ss
and
adc
jmp
cmp
adc
int3
repnz
mov
rcl
dec
add
mov
xor
pop
add
inc
pop
adc
pop
inc
push
cdq
pop
(bad)
cmc
xchg
sar
inc
hlt
inc
rol
cwde
nop
mov
inc
sbb
xchg
lods
leave
or
(bad)
fwait
sub
mov
stos
sbb
addr16
xchg
sar
retf
sub
data16
popf
outs
pop
mov
xlat
xlat
jbe
std
rcl
in
stc
dec
cdq
js
test
loopne
clc
repz
sbb
cmp
mov
jno
popf
arpl
lea
cmp
lahf
div
jl
jmp
sub
xor
call
outs
bound
add
sahf
addr16
and
mov
xchg
into
aam
ds
inc
imul
mov
push
fcmovb
xchg
out
mov
ds
add
adc
adc
and
adc
mov
(bad)
cld
test
push
pop
cmps
push
stos
jns
adc
fcmove
rcr
bound
xchg
cmp
dec
data16
mov
mov
xchg
call
mov
lods
and
outs
in
cmps
mov
jne
mov
loope
in
fwait
xchg
xor
ds
cmp
adc
xchg
xchg
dec
pop
std
jmp
adc
pop
jmp
lock
inc
outs
mov
mov
add
inc
in
imul
inc
mov
xchg
fadd
ret
sbb
mov
mov
sub
add
and
lods
clc
dec
sub
mov
add
or
push
jl
in
pop
cmp
push
(bad)
mov
or
mov
jge
mov
cwde
dec
cwde
jno
loope
into
mov
push
push
sbb
stos
dec
ficom
inc
arpl
mov
sbb
fiadd
push
adc
sub
mov
arpl
and
not
dec
ret
add
xchg
add
sbb
jl
mov
mov
push
dec
adc
test
not
in
iret
pop
add
dec
out
adc
aaa
inc
ret
inc
sub
mov
shr
cli
fsubr
jne
add
xor
xchg
fxch
in
sub
int
or
fisttp
lods
pop
xor
sub
inc
jbe
adc
pop
mov
jb
cmps
mov
push
add
xchg
add
jecxz
adc
push
jge
shl
inc
xchg
test
or
(bad)
xor
jnp
in
stc
neg
cmc
in
cwde
adc
rol
inc
data16
push
das
and
cld
hlt
dec
push
and
popa
ret
mov
aad
shr
mov
or
jbe
sti
jno
dec
sbb
adc
cs
inc
xor
ins
shl
stos
not
in
arpl
cmp
movs
rol
lods
jbe
sbb
adc
xchg
jle
mov
stos
mov
ror
(bad)
test
push
mov
shr
fstp
xlat
stos
aam
mov
xchg
or
jle
mov
jmp
lahf
mov
aad
add
jecxz
push
adc
jmp
mov
push
pusha
cmp
push
fbld
cmp
or
leave
retf
inc
mov
les
test
mov
retf
packsswb
fadd
adc
pop
movs
sub
loope
cmp
fisub
repnz
pop
pushf
dec
push
cld
stos
retf
sti
mov
pop
xor
test
imul
mov
cmc
or
push
push
loopne
aas
mov
sbb
lods
movs
adc
shr
jae
xchg
mov
lods
sahf
jmp
and
mov
dec
outs
(bad)
in
inc
arpl
cmp
sub
cmp
jo
pop
or
xchg
pop
fiadd
inc
add
lods
jno
jae
out
mov
pushf
ficomp
int
xor
mov
in
repz
ficomp
or
push
jbe
sub
xchg
outs
mov
lds
movs
(bad)
sub
cmps
out
or
cmp
pop
xchg
add
sub
loope
push
xor
sub
and
(bad)
xchg
mov
push
jns
pop
sbb
test
mov
(bad)
dec
push
dec
mov
sub
jge
jb
gs
mov
add
pop
jl
cmp
jmp
jp
push
add
je
adc
inc
arpl
lock
sub
ret
or
jl
rcr
retf
inc
dec
inc
push
jns
dec
sub
cwde
push
sti
test
xchg
test
mov
mov
xor
xchg
push
xor
(bad)
sbb
cmps
adc
sahf
test
lock
inc
xchg
out
daa
mov
arpl
(bad)
fcmovne
inc
fstp
sub
mov
push
jmp
cmps
push
pop
dec
and
loope
sub
mov
ret
ss
push
mov
movq
xchg
fsub
push
jae
cwde
in
push
fcomp
sbb
xor
nop
or
test
xchg
or
adc
and
retf
retf
mov
sbb
cmp
std
popf
adc
add
aam
pop
and
rcl
and
fbstp
push
jmp
adc
scas
add
fidivr
pop
xor
sbb
inc
mov
push
or
jecxz
jmp
repnz
xor
sti
xchg
fs
(bad)
stc
xchg
imul
pusha
inc
sar
add
ins
fsubr
inc
inc
mov
loop
xlat
jp
cmps
and
(bad)
out
cmps
ins
inc
xor
or
xor
and
jmp
out
sub
stos
(bad)
cs
adc
stos
add
cmp
pop
arpl
dec
cmp
push
mov
loop
scas
xor
(bad)
add
lds
pop
push
xchg
mov
xchg
popf
ret
pop
adc
mov
dec
xchg
xchg
sbb
inc
call
mov
aaa
mov
sbb
pusha
fucom
fstp
loop
cwde
cmps
add
xor
ins
dec
retf
repnz
ror
jns
fild
mov
mov
jnp
mov
mov
mov
and
xlat
inc
inc
or
mov
inc
push
outs
jecxz
lods
mov
into
mov
pop
shl
pop
and
fnsave
and
sti
xor
and
retf
jnp
push
pusha
mov
ins
fiadd
dec
das
pop
xor
push
dec
repnz
mov
dec
addr16
les
loopne
ja
ins
inc
and
mov
in
adc
xor
rcl
jae
dec
popa
rol
jb
aam
aam
mov
inc
add
out
or
push
stc
add
aam
and
ja
out
(bad)
fst
sar
loop
pop
mov
jno
pop
sub
rcl
mov
dec
sahf
cld
sti
or
cmp
icebp
mov
mov
sbb
mov
xchg
sub
dec
sub
popa
fisub
or
test
adc
inc
pop
loope
and
cdq
inc
cmp
in
jno
jmp
imul
fcom
mov
mov
lods
sub
and
cdq
or
nop
pusha
int
mov
fs
xor
es
mov
ffreep
imul
dec
xor
mov
sbb
ss
pop
xchg
add
lds
xchg
fisttp
push
movs
aaa
rol
lea
xlat
(bad)
fwait
mov
lods
inc
xchg
pop
loop
xchg
push
mov
mov
fld
out
xchg
xor
xor
call
aam
sahf
iret
sbb
(bad)
push
je
repnz
jo
mov
mov
and
and
out
cmp
inc
and
repnz
cmp
add
ss
js
push
in
mov
xor
rol
pop
jno
loope
icebp
mov
and
inc
cld
add
cmp
pop
and
mov
rcl
pop
pop
dec
mov
jae
inc
cmp
sub
ret
dec
cmp
aaa
(bad)
js
cli
sbb
std
int3
int3
pusha
call
sub
int
add
xor
fcom
pop
out
mov
push
loop
je
xchg
mov
ins
scas
aam
stos
aas
aaa
jno
hlt
fist
cmc
cli
daa
add
adc
inc
mov
mov
div
xchg
xlat
add
gs
jge
sub
sbb
out
pcmpgtd
ins
push
ins
push
aas
sbb
pop
lods
(bad)
cmps
or
pop
fsub
add
mov
ja
jmp
mov
shl
mov
mov
mov
mov
fld
cld
rol
iret
sub
lahf
fidiv
in
xchg
and
xchg
mov
inc
or
(bad)
outs
retf
ret
mov
imul
mov
sti
pop
jl
cmp
sub
bound
jmp
(bad)
ds
and
rcr
nop
je
stos
clc
push
mov
mov
sbb
push
(bad)
push
ret
loop
jmp
fcmovnbe
mov
mov
shl
mov
cmp
jae
shr
inc
retf
xlat
add
jmp
out
and
pop
fsqrt
mov
bound
mov
sub
xchg
push
pop
jg
push
das
lahf
out
sub
inc
ins
xchg
jo
dec
jle
sub
mov
xchg
pop
dec
leave
mov
xchg
sbb
cmp
shr
jge
neg
and
xchg
pop
sub
and
pop
adc
mov
scas
add
std
adc
push
retf
mov
loop
dec
push
push
loop
add
test
cmps
adc
mov
cmc
aad
stos
adc
(bad)
leave
cld
add
std
mov
mov
(bad)
popf
cmps
ja
ret
xchg
cwde
retf
jge
sub
dec
push
bound
dec
xchg
mov
push
fcomp
mov
es
pop
mov
jge
inc
xor
sub
out
dec
jg
fcomp
rcr
mov
lods
ror
mov
fldcw
dec
xchg
adc
mov
cs
fldenv
pusha
sahf
(bad)
push
xchg
mov
shl
popf
ins
mov
popf
sbb
lods
fld
cdq
retf
jno
xor
sahf
mov
fucomip
nop
cmps
into
xor
fcomp
mov
shl
sbb
mov
mov
adc
jae
(bad)
scas
dec
xchg
and
repz
push
pop
fisttp
adc
xor
push
test
jl
jnp
push
jmp
clc
test
jl
repz
or
xor
sbb
popf
fs
repnz
fs
push
movs
imul
jecxz
and
jns
les
repnz
fsubr
adc
push
sbb
aas
inc
out
jne
lods
js
rcr
fidiv
and
mov
xchg
sar
jge
mov
cmps
fmulp
int3
add
imul
jp
nop
stc
xor
les
sbb
mov
push
int3
xor
jg
(bad)
or
inc
or
adc
xor
jmp
scas
or
dec
int3
daa
mov
fidivr
movs
out
mov
push
jp
mov
sahf
ret
into
sbb
pop
push
movs
jle
adc
sub
push
push
ret
neg
push
test
out
push
in
push
pop
jl
mov
bound
jle
push
hlt
aas
shr
adc
add
sub
gs
sub
aam
(bad)
arpl
jb
and
mov
(bad)
loopne
dec
outs
daa
out
push
ins
popf
aam
lahf
xchg
cmp
or
test
icebp
aas
int3
iret
cmps
outs
ficomp
sub
jne
mov
push
pop
mov
mov
pop
(bad)
out
imul
test
iret
xchg
inc
pop
mov
int
xor
xchg
repz
rcl
cmc
cmp
dec
jmp
aad
mov
movs
cwde
int3
sbb
push
leave
jge
nop
cmp
pop
mov
shl
imul
sbb
rcl
repz
or
and
ret
repz
repz
stos
data16
call
add
mov
pop
mov
sbb
jnp
jle
sbb
jae
leave
movs
(bad)
js
add
xchg
call
mov
dec
popa
xor
push
loope
or
inc
add
mov
xor
sahf
xchg
push
popa
jg
sbb
jbe
cmp
add
test
add
stc
repnz
lods
add
std
ins
adc
sbb
add
ss
mov
or
lds
adc
xor
stc
out
sbb
icebp
mov
into
dec
shl
test
jp
sub
mov
push
call
cmp
fwait
pop
mov
xor
leave
ror
cli
aad
rol
cmp
loope
dec
into
jns
push
stos
aad
lahf
test
xlat
mov
pop
daa
retf
pop
std
lods
cmp
fstp
cdq
pop
loop
(bad)
sti
dec
xchg
adc
cmp
pop
xchg
dec
es
hlt
mov
pop
and
fldcw
mov
std
je
cmps
mov
ficomp
and
jne
add
(bad)
(bad)
out
int3
sar
or
mov
mov
mov
icebp
xor
mov
aad
popf
fdivr
ficomp
xchg
not
push
sub
(bad)
push
or
adc
es
xor
leave
in
cmp
sbb
adc
rol
jle
idiv
test
mov
and
ficomp
cmp
nop
(bad)
sbb
xchg
adc
mov
repz
dec
xchg
test
pop
xor
cmp
in
mov
push
sub
mov
mov
addr16
mov
out
outs
sbb
retf
push
mov
dec
out
ja
jmp
push
stc
pop
fbld
fwait
mov
cmp
jno
push
add
inc
push
enter
push
jg
and
(bad)
push
pop
stc
or
(bad)
mov
aas
mov
or
push
mov
add
ror
mov
sbb
and
inc
sub
mov
xchg
cmp
cli
push
add
mov
mov
sub
fidivr
and
lods
push
xchg
(bad)
test
push
jmp
mov
sbb
popf
jle
mov
fdiv
div
pop
movs
sbb
and
ss
ret
sub
aas
cmp
in
daa
sbb
outs
punpcklwd
sub
mov
loope
mov
sbb
mov
inc
bound
push
bound
cmps
ds
adc
mov
int
popf
call
dec
cmp
in
or
cmc
add
sbb
pushf
(bad)
mov
add
or
(bad)
push
jae
nop
jbe
call
enter
ret
jecxz
outs
(bad)
push
arpl
push
ins
push
mov
arpl
(bad)
mov
lods
sbb
(bad)
pop
call
lods
add
ja
lods
adc
sub
xchg
icebp
jle
cdq
or
repnz
pop
iret
add
test
adc
pusha
out
mov
aas
es
jmp
sub
jo
pop
fnstenv
xchg
cmp
outs
cmc
mov
das
aas
inc
xchg
push
cmp
iret
stos
inc
inc
bound
add
and
cmp
imul
aaa
cwde
pop
jmp
scas
js
xchg
rcr
fldenv
arpl
xor
sub
rcl
mov
xchg
into
jb
jge
mov
inc
cld
call
out
push
mov
gs
jmp
dec
fsub
push
ins
jbe
xchg
mov
mov
adc
imul
iret
cmps
inc
popa
call
mov
dec
int
push
jbe
popf
push
pop
popa
sub
in
push
sti
push
lock
mov
btc
or
xchg
jo
jecxz
sar
xchg
sub
xchg
xor
xor
mov
test
stos
nop
js
pushf
bnd
fs
pop
movs
out
push
lea
mov
call
inc
jmp
xchg
imul
mov
rcr
mov
inc
into
retf
xchg
mov
push
push
add
mov
aam
ins
pop
(bad)
jl
mov
js
sbb
mov
push
int
(bad)
sub
jno
jne
mov
jo
sbb
mov
inc
cmp
les
ret
popf
fs
mov
mov
adc
cs
mov
std
add
(bad)
cs
aas
outs
inc
lds
adc
add
or
rcr
pop
out
lods
outs
or
test
(bad)
sbb
xchg
icebp
stc
fstp
call
out
mov
(bad)
lock
arpl
test
inc
cmp
aaa
or
sbb
inc
adc
icebp
adc
or
loop
outs
cmp
fadd
data16
ins
cmp
mov
(bad)
mov
jmp
(bad)
les
loopne
pop
push
(bad)
fimul
in
pop
(bad)
xor
push
hlt
repz
into
jp
push
mov
dec
pop
add
cmc
(bad)
call
popa
or
mov
and
in
icebp
adc
sbb
bound
mov
nop
xor
dec
jle
repnz
inc
xchg
ja
mov
sub
loop
inc
fcom
mov
mov
ja
adc
fmul
sbb
adc
lahf
ror
xor
mov
add
cld
sub
fmul
rcr
(bad)
ja
int3
loope
xchg
xchg
xor
fiadd
icebp
in
(bad)
jmp
mov
retf
cmps
cmps
sub
enter
mov
(bad)
movs
das
stc
(bad)
mov
jp
scas
add
repz
jb
das
mov
sbb
mov
inc
popa
cs
xchg
jno
fcmovnbe
cli
jge
jno
fwait
sub
jecxz
and
mov
ds
stos
mov
mov
mov
lods
mov
fstp
inc
adc
mov
jno
mov
pop
cmp
mov
mov
frstor
aas
popa
xor
xor
pop
inc
pop
inc
je
xor
push
aad
push
test
mov
data16
or
xlat
add
movs
cli
push
pop
mov
mov
or
add
xor
lock
ret
and
out
pop
or
xor
in
in
push
(bad)
jle
repnz
adc
sti
movs
retf
cdq
out
pop
mov
lds
add
sahf
test
gs
cs
xor
imul
ret
or
and
call
mov
sub
mov
dec
xchg
lea
push
xchg
fsubr
xchg
bound
xchg
mov
sahf
sbb
popa
les
shr
and
and
leave
pop
mul
ja
test
inc
add
jmp
dec
mov
sbb
out
outs
mov
setae
cmp
repnz
sbb
or
cmp
cld
and
and
lods
repz
and
adc
lock
mov
sub
dec
lods
pusha
xchg
push
mov
and
or
ds
dec
push
lods
into
xchg
out
call
jb
repnz
mov
arpl
fdivp
cmps
mov
push
ins
ret
push
popf
sbb
popa
nop
icebp
(bad)
xor
clc
jbe
test
adc
and
sbb
adc
mov
in
loop
cmps
rcl
dec
fstp
sub
aam
lods
jmp
pop
fcom
and
int
mov
push
xchg
mov
jp
and
ss
in
sub
xor
(bad)
mov
push
call
adc
(bad)
and
(bad)
mov
std
xlat
xchg
ins
in
inc
push
inc
addr16
aad
add
push
push
retf
in
mov
mov
cmp
mov
and
mov
xchg
mov
test
cdq
daa
sbb
aad
add
mov
adc
add
shl
fnstcw
mov
lock
mov
xchg
sbb
fst
sahf
test
push
push
jno
mov
dec
pop
pop
adc
cmc
mov
and
retf
cld
aaa
or
loop
push
das
inc
leave
sub
push
xchg
push
aas
jge
stos
(bad)
mov
sub
sbb
xchg
fadd
jecxz
push
mov
leave
inc
inc
cmp
div
ins
push
call
outs
(bad)
(bad)
mov
jmp
push
(bad)
inc
sbb
push
mov
aad
xchg
repnz
pop
jae
jb
lods
in
cmp
aam
es
jae
arpl
out
cmps
pop
mov
xchg
ins
je
in
mov
sahf
enter
jae
mov
clc
repz
jo
or
add
aam
lods
jne
cdq
xchg
pop
push
mov
dec
jge
cmps
ss
test
cli
ds
and
(bad)
xor
mov
pop
inc
inc
repz
xor
dec
in
test
aad
xor
mov
mov
pop
push
imul
cmp
in
push
xlat
mov
das
sub
inc
int
xchg
and
push
lock
add
inc
stc
dec
cdq
pusha
shl
inc
or
imul
pop
or
inc
mov
(bad)
mov
lea
imul
(bad)
arpl
xor
dec
dec
add
xor
retf
stc
lds
aas
cli
inc
pop
xlat
stos
jecxz
(bad)
and
aas
dec
pop
test
cmp
or
clc
in
repz
arpl
add
ins
das
or
xchg
and
adc
xor
gs
inc
xlat
inc
pop
std
lahf
sub
and
daa
nop
and
xchg
pop
jnp
out
lea
xor
lahf
adc
jmp
cmp
sub
cmps
mov
(bad)
mov
(bad)
dec
int
pop
lods
push
xlat
sbb
pop
inc
xor
jmp
push
sub
jbe
push
or
(bad)
in
test
test
push
stos
test
stos
into
xchg
js
inc
fs
or
clc
ficomp
mov
jmp
add
loope
mov
neg
loope
fsubr
pop
inc
daa
js
jns
push
sbb
imul
cld
mov
ss
mov
lock
add
push
xlat
adc
popf
nop
ins
stos
and
push
lea
xchg
pusha
xor
sub
jmp
mov
jge
jo
cmps
jno
fnstsw
mov
adc
dec
stos
(bad)
pop
cdq
pop
pop
loope
stos
jl
sbb
daa
inc
fnsave
jle
imul
push
inc
dec
hlt
cmps
popa
das
dec
sub
xor
push
call
jnp
mov
mov
cmc
mov
or
movs
mov
jo
scas
fsub
(bad)
stos
sub
push
sbb
mov
idiv
or
and
mov
or
mov
inc
lock
dec
int
dec
mov
sbb
call
aad
push
mov
in
xchg
cmp
outs
lahf
inc
stos
pop
sub
scas
out
gs
cmp
call
push
rcr
sbb
iret
repz
xchg
out
sbb
sub
arpl
jno
out
jae
lea
call
repnz
stos
mov
adc
pusha
inc
or
retf
xchg
repz
lea
ret
cmp
in
cmc
sub
sahf
xchg
test
push
aaa
xor
xchg
ds
dec
les
jns
xor
int3
rcl
stos
pusha
xchg
or
in
mov
add
push
xchg
cmp
or
rol
sbb
pop
fldcw
ja
jl
xor
ss
adc
mov
and
rcl
jg
push
(bad)
rcr
repz
in
popf
add
loope
sbb
adc
out
call
jae
sub
push
pop
pop
mov
pop
pop
push
ret
push
aad
mov
sbb
addr16
sahf
mov
cdq
adc
loope
mov
add
push
loope
fcomp
push
sbb
stos
xor
cmp
test
inc
and
(bad)
jbe
sub
mov
or
hlt
fidivr
sub
jg
cli
xchg
inc
mov
imul
push
and
xchg
sub
stos
imul
mov
out
jbe
pop
mov
sub
push
mov
dec
jbe
adc
mov
mov
mov
shl
push
in
pop
inc
ficom
sahf
push
ret
and
sbb
loop
mov
mov
pop
into
das
xchg
fdivr
or
mov
adc
sub
loope
sub
inc
iret
fwait
daa
les
mov
std
xchg
push
push
xor
test
mov
outs
mov
test
mov
jge
mov
inc
dec
sub
push
sub
adc
lahf
push
call
icebp
nop
iret
cwde
mov
aaa
das
inc
mov
jp
xchg
es
icebp
add
mov
adc
clc
mov
or
sub
scas
out
cld
mov
shl
loop
test
ss
call
les
into
icebp
je
stos
imul
punpckldq
adc
jg
and
mov
and
cmp
xchg
sub
xchg
dec
xor
ins
inc
jmp
lea
fcmovb
adc
xchg
mov
jns
aas
das
fist
pop
enter
push
shl
out
mov
int3
fst
in
je
cmps
call
sub
sub
inc
in
je
mov
cmc
sbb
outs
out
ds
xlat
int3
add
pop
imul
add
out
mov
int3
or
nop
lea
cmc
cmp
out
daa
xchg
scas
int3
aaa
pushf
les
xor
cld
nop
int
add
lock
loopne
inc
pop
ja
jb
and
out
jno
and
mov
shl
pop
pusha
enter
pop
fmul
add
xchg
iret
xchg
in
(bad)
retf
fs
out
pop
push
cdq
fs
sub
ret
xchg
cmp
mov
popa
sbb
in
fisttp
gs
or
inc
pop
fcom
arpl
mov
hlt
adc
and
xchg
shl
hlt
rol
dec
ds
dec
popf
out
int3
and
js
ret
fstp
fsub
sar
jge
mov
pushf
pop
stos
mov
sbb
xchg
jne
repz
dec
es
sbb
lods
adc
xor
loopne
pop
sti
mov
xor
add
in
adc
loope
ret
inc
inc
je
xor
xor
mov
push
xchg
mov
or
xor
and
(bad)
cdq
adc
jmp
fwait
dec
xor
(bad)
sub
xchg
adc
dec
xchg
cmp
movs
adc
int3
sbb
jecxz
pop
test
sbb
mov
ror
std
sti
mov
lea
test
sbb
mov
(bad)
mov
cdq
cdq
pushf
(bad)
daa
pop
or
mov
push
jl
in
popa
cld
idiv
imul
xor
sti
mov
xor
imul
cmp
sub
out
and
out
cmps
jae
pop
push
jno
out
rol
mov
test
pop
pop
jns
jg
adc
add
es
jmp
mov
cmp
call
shr
shr
data16
cmp
mov
and
ins
icebp
cdq
ret
mov
or
inc
pop
inc
and
mov
cmove
bound
mov
add
out
xchg
cld
and
sub
and
cld
mov
dec
mov
adc
out
or
mov
cwde
dec
mov
inc
mov
std
repnz
mov
(bad)
xor
push
fcomip
iret
dec
mov
xor
ins
cmp
add
add
cmps
and
pop
aad
fistp
sub
fldenv
rcl
jecxz
nop
lock
cs
cld
mov
enterw
out
cmp
not
jecxz
mov
mov
mov
loopne
lods
xor
push
adc
sbb
je
mov
sub
fadd
adc
leave
cmp
stos
neg
inc
pop
mov
jge
mov
div
dec
mov
mov
jge
and
(bad)
retf
push
cmps
(bad)
sub
pop
jo
and
and
repnz
pop
cs
div
jg
xor
ds
imul
adc
cdq
sub
dec
(bad)
stc
and
sar
mov
ret
aaa
out
cmp
fwait
xchg
ficom
retf
js
mov
xchg
pop
mov
push
fwait
jge
push
in
gs
and
jbe
das
push
aam
jmp
in
pushf
adc
push
jg
jl
ror
jae
js
push
div
int
hlt
pop
mov
pop
dec
pop
dec
loopne
test
jle
shr
out
lods
jb
js
and
ret
retf
je
adc
arpl
or
cmps
xor
test
pop
imul
mov
inc
adc
fst
neg
pop
adc
lods
fdivr
test
cmps
bound
cdq
shl
adc
loope
mov
pop
iret
adc
sbb
out
jl
mov
out
out
xchg
and
mov
xchg
(bad)
jecxz
fsubr
lods
jge
fwait
or
inc
retf
adc
or
mov
cmp
add
adc
and
in
push
or
cmp
(bad)
push
ror
cmp
loop
cmp
(bad)
and
stc
ficom
mov
ror
fcomp
xchg
xchg
test
and
inc
mov
icebp
mov
dec
adc
fnstsw
fiadd
xor
mov
mov
dec
sbb
div
mov
add
add
(bad)
xor
push
das
(bad)
stc
pminub
add
in
and
ins
pop
pop
stos
add
or
jae
xchg
sbb
or
or
bound
sbb
into
or
repz
mov
dec
xor
or
inc
outs
cmps
dec
loopne
dec
jl
rcr
dec
dec
adc
call
xchg
mov
sbb
pusha
push
das
jno
vrcpss
dec
sahf
outs
(bad)
xor
rcl
xor
shl
pushw
cmp
mov
jmp
(bad)
les
dec
xchg
in
jl
les
xor
inc
mov
dec
mov
pop
jmp
sbb
cld
mov
xchg
pop
js
rol
sbb
dec
sbb
std
or
shr
mov
ins
enter
cld
sbb
movs
add
(bad)
je
mov
mov
mov
ins
push
inc
loopne
sub
sub
adc
add
add
sub
daa
cmp
mov
popf
mov
jl
sar
mov
and
cmps
gs
xchg
sub
sub
imul
ja
cmp
xor
jecxz
adc
mov
dec
or
adc
fisub
pop
mov
sub
popa
add
std
(bad)
pop
imul
push
movs
adc
cmp
into
(bad)
adc
popa
fwait
(bad)
addr16
mov
out
je
add
mov
sub
inc
and
fistp
push
loope
jl
sbb
pop
add
mov
test
xchg
leave
push
stos
clc
popf
fst
xor
add
xchg
mov
xchg
test
rol
sub
inc
repz
cld
popa
push
js
inc
enter
add
jo
mov
ins
mov
int
aaa
jle
jmp
popf
cmp
aaa
inc
je
dec
movs
xor
repz
nop
jmp
mov
imul
jmp
cli
xor
cmp
adc
pop
jp
pushf
cmp
dec
jmp
mov
int
xlat
jnp
lock
stc
mov
adc
stos
lods
sub
popf
scas
call
pop
mov
pop
pop
leave
add
stos
xchg
sbb
add
arpl
jne
inc
mov
dec
xchg
or
mov
mov
xchg
sub
sub
inc
inc
xchg
xchg
nop
push
nop
sbb
daa
pop
jge
mov
push
movs
pop
popa
and
cmp
pcmpgtb
sub
jb
imul
inc
mov
push
pop
cmp
xor
jp
(bad)
adc
les
loopne
in
mov
cmp
dec
add
push
push
xchg
mov
and
add
hlt
jmp
cmp
loopne
stos
jge
inc
addr16
(bad)
pop
leave
retf
cmps
les
push
pop
imul
xchg
repnz
clc
test
mov
xor
loope
add
call
xor
jmp
or
push
push
jo
mov
ds
lea
sub
jge
sub
out
lea
shl
xor
xor
ret
cli
cmc
xchg
mov
stos
je
in
test
outs
xchg
je
xor
and
pop
stos
hlt
retf
and
std
pop
addr16
fwait
mov
scas
aas
and
push
movs
mov
popf
sar
mov
neg
xchg
rcl
xor
push
scas
push
lods
sub
call
loope
cmp
les
dec
pop
and
outs
pop
sub
add
clc
mov
jo
leave
add
ss
test
push
call
or
lods
mov
pop
mov
(bad)
or
sbb
movs
fisttp
sub
and
inc
out
xchg
adc
jmp
dec
test
cmp
in
cmp
std
mov
fwait
jae
loop
cmc
sahf
xchg
enter
ret
shr
and
dec
test
add
cmp
cmp
xchg
pop
sub
inc
adc
add
jb
int3
adc
out
jb
out
das
mov
loopne
jmp
(bad)
(bad)
mov
fnsave
test
adc
mov
out
mov
test
pushf
add
arpl
sub
dec
fwait
jmp
rcl
dec
call
or
jo
retf
out
movs
add
inc
add
pushf
aam
mov
ins
dec
clc
scas
scas
test
push
in
xchg
xchg
popa
sub
sub
mov
mov
or
repz
pusha
xchg
mov
int
das
dec
aam
jg
push
lods
test
cmp
add
sub
and
add
jmp
leave
inc
dec
inc
cmps
leave
xor
jp
sub
repnz
push
dec
adc
enter
hlt
stos
enter
mov
mov
sbb
push
push
jne
call
std
pop
dec
icebp
cmp
mov
fcomp
dec
adc
add
ss
jns
repnz
add
in
and
sub
cmp
jo
loop
inc
pusha
mov
cmp
adc
les
or
adc
push
cwde
test
jae
je
pop
cli
xchg
xor
scas
pop
xor
loope
clc
nop
ss
ins
aam
call
or
cdq
pop
mov
jo
xchg
xchg
jmp
inc
loop
test
push
in
mov
jecxz
cli
repz
dec
push
clc
and
push
test
call
enter
adc
aaa
or
ss
movs
sub
adc
lds
rcr
sub
lea
rcr
xchg
push
xchg
cmp
ror
imul
jmp
jns
in
xchg
(bad)
ficomp
int3
and
jecxz
std
bswap
adc
mov
mov
ret
popf
ins
dec
add
jb
fwait
xor
fld
cmps
mov
inc
xor
mulps
sar
push
je
xor
jnp
or
inc
je
js
or
cmp
fmul
or
push
jg
xchg
or
add
loopne
nop
jp
pop
stos
mov
and
test
inc
fs
ret
adc
bound
dec
test
add
pop
int
pop
inc
out
jmp
push
jbe
daa
call
jmp
xchg
call
inc
scas
leave
inc
retf
mov
xor
adc
sbb
scas
mov
loopne
jmp
in
xchg
gs
call
xchg
jb
adc
or
jmp
xor
xor
push
fst
stos
js
pushf
out
mov
pop
ins
fdiv
pop
pop
sub
(bad)
fmul
jno
push
jmp
dec
mov
mul
leave
fmul
dec
dec
les
pop
pop
aad
cmc
push
jb
(bad)
xor
xchg
sub
outs
int3
or
mov
loope
sub
adc
and
and
lods
mov
sbb
imul
pusha
retf
xor
test
jp
inc
mov
add
repz
pop
pop
retf
test
scas
xchg
push
call
jae
daa
or
or
jns
mov
push
mov
pop
in
xadd
dec
dec
clc
int
inc
sub
test
pop
inc
not
cmps
(bad)
ss
in
fwait
pop
call
shl
dec
sbb
sub
or
ds
add
jecxz
jo
add
fdiv
stos
inc
xchg
push
fcomp
ret
sub
pop
fadd
jo
mov
jl
pop
xchg
nop
inc
fcom
jg
xlat
sbb
sbb
sbb
adc
clc
sub
imul
loope
call
ins
loopne
(bad)
jmp
test
mov
mov
xlat
nop
sar
leave
lods
inc
push
inc
js
sbb
cs
addr16
cmp
imul
les
inc
cmp
cmp
jnp
gs
sub
mov
inc
sti
jo
(bad)
xor
fisubr
imul
pop
nop
pop
jle
ja
sbb
shl
sti
mov
icebp
xchg
cmps
inc
sbb
sbb
sti
or
mov
retf
les
ds
cli
cmp
jmp
push
sub
or
jmp
leave
pop
mov
stos
lahf
jmp
mov
add
sti
cli
add
pop
out
xor
pop
push
mov
ins
ja
jno
fidiv
push
sbb
and
icebp
into
xchg
hlt
ficom
out
xor
adc
fsub
int3
leave
inc
jl
lods
cmps
add
scas
ret
loopne
js
jne
inc
leave
pop
cli
and
je
daa
es
das
xchg
jl
adc
mov
jl
pop
mov
and
pop
cmp
lods
out
sahf
inc
retf
cmp
xchg
(bad)
cmc
(bad)
xchg
or
and
jae
pop
das
cmps
ds
aam
jne
int3
push
retf
lods
sbb
mov
mov
mov
in
mov
mov
je
cmps
(bad)
dec
cdq
pop
push
inc
outs
jp
shl
adc
in
mov
shl
pop
push
rol
fwait
sbb
pop
int3
xor
dec
stc
call
cmp
iret
mov
sub
hlt
(bad)
sbb
pop
pop
and
sahf
inc
inc
dec
xor
fstp
lds
add
cli
cmps
stos
cmc
dec
fwait
mov
cmps
sub
dec
stos
jmp
jno
call
cmp
mov
shl
inc
mov
popf
cmps
pop
lds
add
and
(bad)
out
jno
and
dec
and
cmps
test
mov
push
jmp
bound
retf
xchg
xchg
inc
sub
retf
into
jo
test
cmps
repz
bound
mov
adc
jmp
loop
push
(bad)
mov
mov
leave
imul
pop
xor
ud0
rcr
xor
psubd
inc
pop
aaa
jns
shl
xchg
mov
dec
push
in
outs
cmp
mov
dec
fcmove
jnp
mov
xchg
test
push
push
dec
pop
push
(bad)
loopne
and
pop
adc
add
mov
sub
movs
ins
push
fwait
sbb
fdivr
(bad)
dec
xchg
and
push
mov
xchg
mov
push
mov
rcl
sbb
popf
fcomp
loopne
mov
test
cmp
out
xlat
mov
call
push
stos
mov
mov
jecxz
adc
push
dec
icebp
jmp
and
pop
adc
xchg
in
xor
inc
or
sbb
stos
mov
dec
outs
cmps
dec
pop
arpl
pop
scas
loopne
cmp
xchg
inc
enter
daa
pusha
inc
xchg
sub
aas
add
and
in
xchg
push
cld
ret
sbb
fucom
addr16
mov
adc
pop
scas
xchg
add
(bad)
jno
into
(bad)
or
ins
and
push
pop
fsub
in
mul
sub
and
pop
dec
fbld
pop
js
jl
retf
xchg
inc
aaa
mov
xor
call
jge
inc
pop
jg
add
push
sbb
xor
retf
sub
or
sub
mov
pop
mov
idiv
sti
js
jne
push
repz
cmp
mov
mov
push
out
mov
mov
fisttp
push
mov
cmp
daa
add
(bad)
and
test
inc
inc
adc
(bad)
mov
lahf
jmp
hlt
(bad)
dec
popf
into
push
pop
mov
addr16
pop
xor
mov
(bad)
xchg
(bad)
das
lahf
adc
sbb
xchg
lods
call
push
(bad)
(bad)
iret
fdiv
push
push
or
leave
nop
cld
imul
rcr
mov
fst
adc
or
frstor
and
hlt
sbb
sub
mov
sbb
js
call
push
or
xchg
call
xchg
adc
call
dec
add
data16
inc
pop
cwde
and
cdq
inc
lods
mov
sahf
and
mov
cwde
add
cmp
dec
jle
ret
sub
loopne
cdq
fidiv
pop
fistp
popa
retf
or
hlt
pop
pop
and
psadbw
jae
inc
or
push
in
out
cmp
jae
pop
aaa
nop
pusha
inc
inc
aas
push
adc
sbb
gs
mov
loop
pop
lahf
movs
arpl
icebp
push
repz
dec
aaa
mov
lea
loope
adc
in
(bad)
aas
idiv
inc
mov
rcl
adc
xchg
fs
int
fidivr
outs
sub
ret
loopne
loope
out
sub
gs
sbb
imul
inc
xor
or
mov
lds
or
fnsave
sbb
or
in
xchg
inc
data16
pop
pop
xlat
pop
sub
fmul
add
adc
or
cmps
xchg
push
cmp
retf
xchg
adc
fld
adc
call
dec
inc
retf
popf
shr
std
jle
pop
loop
jle
cmp
jmp
mov
mov
sub
nop
ss
mov
lea
data16
repz
test
aam
xor
div
push
push
xchg
adc
int3
vaddss
outs
mov
and
adc
push
sbb
add
repnz
ror
and
lods
or
das
pop
or
xor
jle
pop
sbb
stos
mov
cmps
add
lods
dec
lahf
outs
das
push
pop
mov
out
mov
sbb
jne
pop
jo
sub
test
enter
mov
int
int
jne
mov
or
call
sub
sar
(bad)
lods
adc
add
mov
popf
scas
push
or
mov
es
stos
or
cli
mov
mov
seta
leave
call
out
out
mov
retf
mov
push
test
lods
push
js
inc
sub
push
leave
movs
cmps
xlat
cmp
clc
int3
or
push
jae
pop
scas
inc
sbb
mov
and
mov
xor
add
push
xchg
repnz
lods
push
push
rcl
shld
cli
add
pop
and
xchg
xor
stos
pushf
jbe
push
inc
cmc
and
aam
sub
mov
addr16
stc
mov
ret
je
mov
push
fnstsw
mov
inc
push
je
xor
sbb
xor
mov
mov
mov
frndint
(bad)
enter
and
inc
or
jecxz
lods
sbb
xor
ins
fistp
mov
or
test
dec
fdiv
dec
sub
sub
adc
ror
mov
mov
cmps
daa
stos
inc
repz
mov
push
dec
jmp
les
in
repz
jg
sti
add
mov
cwde
dec
(bad)
popf
rcl
ds
vmread
cld
jg
mov
sub
retf
sbb
repnz
outs
ss
outs
or
xlat
fdiv
jns
mov
or
sbb
jmp
fnsave
jl
out
fwait
cwde
sbb
ins
pop
sbb
neg
loop
scas
in
mov
ins
iret
push
fistp
(bad)
xchg
xor
jmp
test
int
imul
sbb
ja
xor
test
push
add
mov
add
mov
lds
sub
or
(bad)
repz
xchg
jg
xlat
fdiv
hlt
jmp
fnsave
push
inc
addr16
je
shr
cmc
sub
mov
inc
and
mov
mov
leave
or
xor
mov
pop
ret
inc
adc
push
cmp
xor
mov
int3
scas
fnsave
in
mov
test
xlat
mov
push
mov
cmp
push
pop
addr16
mov
gs
push
jae
pop
and
aaa
and
sbb
dec
sbb
rcr
cmp
push
scas
fwait
mov
push
dec
jmp
leave
pop
mov
inc
adc
(bad)
movs
pop
push
jmp
mov
jb
call
pxor
sbb
das
call
leave
nop
loopne
mov
pop
adc
loop
push
add
les
mov
test
sbb
lea
cld
cmps
mov
int
sub
inc
xchg
pmaxub
call
ror
addr16
sbb
pushf
ins
mov
jp
je
or
ja
or
mov
xchg
leave
dec
(bad)
mov
(bad)
daa
nop
ret
push
push
mov
mov
jno
pop
adc
adc
jp
pusha
push
jbe
aad
dec
jno
cdq
enter
mov
js
imul
sub
xchg
sbb
gs
adc
and
or
jle
jbe
(bad)
repnz
call
repz
mov
and
xchg
popf
push
adc
mov
mov
pop
sbb
push
aas
jne
jg
icebp
mov
mov
add
fsubr
shr
jl
pusha
(bad)
sub
clc
mov
dec
or
push
pop
jg
(bad)
in
stc
add
sbb
popf
(bad)
cmp
cmc
xchg
in
int
popa
(bad)
clc
lahf
ins
jns
aam
jns
out
mov
loopne
xchg
fbld
fdivp
inc
jge
fidivr
retf
js
xor
inc
cld
add
(bad)
xchg
jnp
mov
mov
mov
mov
(bad)
mov
and
inc
dec
jno
mov
sti
xor
xor
test
in
inc
inc
dec
xchg
in
inc
in
out
jmp
push
int3
sub
mov
pop
cmp
sbb
pop
out
call
or
push
xchg
(bad)
xor
int
ror
psubb
stos
shl
mov
stos
jmp
fisttp
out
sbb
outs
xchg
push
cmp
fild
call
dec
push
sbb
mov
dec
xlat
fild
jge
jp
nop
and
leave
jp
cmps
shl
xadd
cmps
(bad)
and
shl
jl
xchg
enter
sbb
pop
in
shl
dec
sti
sub
cmp
aad
call
sbb
jp
inc
loope
cmps
sub
rcr
mov
dec
mov
mov
sbb
ret
cmp
in
pop
sbb
popf
fucomip
pop
xlat
xor
out
pop
xchg
jmp
rcl
out
jo
xchg
dec
rcr
push
mul
in
daa
pop
mov
mov
call
and
push
enter
jg
and
or
test
mov
jmp
ret
mov
mov
cmps
mov
xacquire
lds
dec
dec
imul
pop
mov
leave
mov
lahf
ds
stc
fcom
jo
fwait
add
cmp
pop
pop
jae
xchg
es
mov
mov
inc
push
mov
in
mov
in
call
popa
xchg
pop
cmp
add
xlat
mov
cli
pop
dec
int
sbb
in
jns
icebp
iret
shl
rol
in
aas
int3
in
add
cmc
retf
mov
call
call
inc
cmps
out
xor
add
out
mov
aad
mov
mov
mov
in
add
or
out
(bad)
mov
out
or
cs
dec
(bad)
shl
(bad)
pop
sbb
mov
add
cwde
xchg
sbb
and
hlt
in
adc
add
mov
or
nop
dec
enter
ins
cmp
ins
leave
sub
sbb
retf
cmp
mov
sub
add
pop
inc
pop
dec
sub
call
pop
push
mov
xchg
icebp
sahf
mov
in
inc
mov
and
mov
cmp
dec
call
dec
call
fwait
in
add
pop
xor
lods
xchg
cmp
push
dec
cli
xor
stos
fbld
pop
rcl
bound
loop
lahf
iret
push
jmp
out
dec
repnz
add
mov
add
mov
sti
cmp
pop
sbb
push
mov
and
mov
inc
fwait
inc
add
das
out
xchg
rcl
inc
and
xchg
retf
jmp
jae
and
lods
shl
test
iret
fbstp
adc
in
pusha
lods
repz
cld
ja
imul
je
les
fdivp
enter
mov
cmc
fdiv
cmp
or
call
sbb
push
push
test
rol
stos
inc
stc
icebp
inc
jge
les
ficomp
adc
pop
cdq
aad
test
pusha
dec
sub
pop
cs
lds
sbb
pop
push
(bad)
div
add
mov
popf
popa
dec
mov
sbb
sbb
lock
cmc
push
dec
jmp
test
jg
std
cmp
jge
mov
test
mov
push
neg
inc
mov
gs
xor
inc
scas
fsub
and
fs
xchg
mov
pop
jns
and
sub
(bad)
(bad)
data16
into
push
push
(bad)
lea
fnstsw
add
sub
dec
sbb
cli
daa
xor
fsubr
sahf
jbe
cli
cmp
fs
pusha
dec
or
fstp
sub
adc
sbb
std
rcr
clc
bound
add
inc
aas
not
mov
and
sub
xchg
imul
pop
ja
push
lods
iret
push
mov
out
inc
push
dec
push
lock
movs
fst
icebp
inc
js
mov
mov
nop
push
stos
rep
add
pop
repnz
sub
jp
adc
inc
fstp
and
sbb
cmp
inc
sbb
jl
in
imul
clc
out
fld
jecxz
imul
jb
ss
in
pop
jp
hlt
mov
jmp
push
movs
imul
aas
jno
push
inc
pop
sti
movs
lds
pop
adc
pop
in
test
cs
or
paddsb
int3
lock
xor
sbb
push
ja
mov
add
add
stos
sub
and
enter
in
cmp
adc
push
cmp
cmp
enter
mov
repz
shl
loope
sbb
xor
(bad)
jecxz
(bad)
jg
xchg
push
popf
jl
stos
xchg
mov
fcomip
cmp
das
or
ret
pop
mov
cmps
inc
shr
adc
cmp
dec
push
mov
mov
aad
cld
mov
ins
jns
ret
mov
push
adc
inc
bt
inc
xor
shl
lock
push
sbb
push
pusha
dec
loopne
leave
and
pop
jnp
jle
jbe
or
(bad)
neg
out
mov
dec
pop
push
(bad)
fs
fldenv
es
call
jbe
sahf
xchg
and
outs
cmps
out
dec
push
pop
into
sbb
retf
mov
mov
inc
stc
icebp
icebp
push
mov
repz
inc
cdq
xor
(bad)
out
les
push
xor
(bad)
xor
outs
sbb
movs
pushf
and
dec
icebp
inc
out
sbb
mov
inc
cli
shl
std
mov
aas
ins
(bad)
js
jno
popf
jno
xchg
sbb
add
sahf
push
jbe
rol
jmp
cdq
jo
fidiv
sub
mov
sbb
add
dec
test
xchg
repnz
mov
ret
(bad)
sar
cmps
inc
xchg
test
inc
adc
sbb
push
inc
sbb
dec
rcl
mov
pop
xchg
adc
push
or
outs
adc
pop
mov
adc
sub
xbegin
in
pop
xlat
nop
mov
xchg
mov
mov
stos
call
dec
das
xor
loopne
sub
inc
xchg
and
pop
shl
xchg
arpl
data16
add
xor
adc
add
pop
(bad)
pop
fsub
dec
xor
add
cmp
cmp
dec
add
xor
sti
mov
inc
add
into
jbe
out
or
addr16
mov
and
arpl
push
adc
jb
movs
xchg
mov
sub
inc
fdiv
rcl
inc
mov
je
inc
xchg
mov
js
jnp
xchg
cmp
push
jno
jmp
lea
(bad)
fadd
pop
pop
cmp
dec
add
clc
cmp
inc
push
ror
pop
pop
cmp
gs
js
pop
pop
mov
or
xlat
fwait
push
movs
mov
jmp
ror
mov
xchg
xchg
lods
scas
into
test
adc
(bad)
sbb
pop
or
scas
jmp
test
test
push
xor
xor
in
mov
nop
shl
movs
sahf
dec
ins
hlt
mov
or
mov
mov
stc
mov
cli
and
adc
int3
mov
mov
cli
arpl
jnp
xchg
(bad)
mov
cs
xor
fs
das
jmp
pop
sub
mov
sbb
pop
mov
sub
jecxz
inc
int
aas
shr
xor
sub
add
adc
adc
lahf
je
fstp
jge
mov
push
aad
mov
sahf
inc
mov
(bad)
sbb
jbe
pop
stos
cs
pop
dec
(bad)
iret
xor
mov
arpl
ret
js
push
sub
and
call
pop
nop
sub
(bad)
(bad)
aas
test
sub
xor
mov
mov
xor
mov
repnz
repz
and
cmp
dec
shr
ds
call
jo
mov
xor
shr
sbb
jns
outs
stc
mov
xchg
inc
mov
mov
loopne
pop
pop
mov
repnz
mov
ja
ins
nop
sbb
xor
sbb
loopne
push
mov
loope
retf
pop
mov
outs
(bad)
push
or
add
adc
cmp
jae
inc
inc
mov
into
aaa
dec
rcr
loopne
leave
cmp
test
out
mov
fs
in
enter
enter
jb
add
scas
mov
inc
icebp
aaa
pop
jae
push
push
push
cwde
inc
shl
movs
mov
push
lds
rol
(bad)
call
jg
cmp
xor
xor
retf
sub
mov
xchg
loopne
scas
movs
popa
dec
pop
inc
cdq
imul
sahf
das
mov
cmps
(bad)
call
pop
cmps
aad
mov
std
icebp
or
jg
in
ins
sbb
call
sbb
pop
mov
and
data16
ins
push
mov
sbb
pop
cmp
cmp
dec
xchg
loop
mov
je
in
call
mov
shr
mov
push
xor
aaa
mov
rcl
cdq
stc
fdivr
jae
push
pop
xlat
inc
outs
sub
inc
sub
cwde
sub
icebp
inc
jmp
mov
or
aad
push
or
test
jmp
leave
nop
pop
xor
sar
sub
hlt
jno
jg
xor
ins
cmp
adc
adc
sub
mov
cmp
pop
pop
cwde
add
xor
mov
fwait
xor
gs
push
icebp
jmp
mov
aam
push
sub
mov
mov
dec
jle
sub
xor
adc
add
and
nop
pop
popa
mov
jmp
xchg
rcl
fs
dec
cmp
dec
pop
fst
cmps
jge
xchg
mov
cmp
add
(bad)
jns
cmp
or
xor
cmp
test
inc
int
and
jnp
mov
loopne
out
cwde
arpl
mov
adc
sbb
mov
and
neg
retf
arpl
lea
test
jae
sar
push
mov
dec
push
jno
inc
xchg
push
jmp
xor
fs
add
mov
(bad)
dec
out
add
dec
mov
xchg
dec
call
jno
jo
data16
adc
(bad)
pop
push
xchg
add
or
cmp
lods
pop
pop
lock
fnstcw
cmp
push
xchg
ss
stos
rcr
idiv
jmp
pop
mov
xchg
jmp
mov
sbb
jae
ret
push
adc
mov
icebp
stc
ss
sbb
push
cmp
fwait
je
cmp
add
imul
sub
sub
mov
ja
bound
push
adc
sbb
(bad)
add
push
mov
stc
sub
je
jnp
imul
dec
je
or
dec
pop
mov
mov
add
mov
std
fcomip
jns
mov
jp
dec
xor
and
aas
mov
ja
jae
pop
hlt
push
pop
push
sub
xchg
callw
push
mov
arpl
mov
cli
mov
pcmpeqb
sbb
adc
jne
mov
mov
jp
loopne
and
out
in
add
mov
mov
pop
cwde
vshufps
lods
cmp
outs
push
loopne
push
jns
xor
dec
aaa
lea
pop
rol
fldln2
dec
push
push
retf
mov
iret
sbb
mov
ror
movs
xor
jbe
jbe
jmp
jae
inc
pop
jno
pop
popa
pop
mov
mov
dec
or
sahf
inc
imul
sbb
dec
xor
sub
xor
enter
cmp
xchg
dec
fistp
inc
loop
jecxz
dec
mov
mov
mov
pop
adc
call
add
and
es
xchg
out
mov
cwde
out
shr
retf
mov
sub
jl
sbb
je
stc
or
ror
sti
leave
sub
div
jo
fwait
mov
mov
mov
push
xchg
xor
jecxz
pop
cmp
fstp
aad
test
xor
adc
pushf
mov
lahf
out
mov
sbb
xchg
ret
ds
add
inc
rcr
or
mov
adc
adc
shl
inc
out
pop
les
nop
(bad)
inc
in
cmps
xchg
hlt
mov
and
cmp
jmp
xchg
data16
and
lods
in
mov
es
jmp
or
movs
inc
jmp
push
jecxz
sub
dec
aas
mov
mov
(bad)
out
and
ja
(bad)
xor
mov
(bad)
and
mov
in
cmc
pop
push
movs
push
pushf
xchg
adc
shr
cmp
lods
into
jecxz
xchg
out
mov
sub
jge
jno
loope
lock
pusha
jno
jp
pop
(bad)
add
adc
test
adc
push
xchg
jns
jno
xchg
pop
push
in
cld
aaa
mov
cmps
rol
cs
into
out
aas
mov
jg
adc
cmp
iret
dec
sub
jmp
pop
fdivr
jne
cli
or
xchg
test
xchg
mov
aas
mov
sub
ja
push
psadbw
inc
mov
lahf
std
in
jae
data16
cmp
pusha
add
and
add
enter
lods
pop
sub
or
fmul
inc
mov
clc
mov
mov
xchg
or
es
mov
push
xchg
mov
mov
outs
dec
lods
loopne
inc
ss
pop
push
xor
mov
cmp
pop
mov
leave
nop
push
scas
cld
inc
ins
adc
push
dec
fisubr
sbb
lods
mov
aas
arpl
fs
xchg
loop
xchg
(bad)
cmp
cld
inc
repz
adc
lock
dec
pop
aas
or
mov
jg
shl
mov
mov
jmp
fcomip
add
lock
pop
sti
test
test
enter
mov
xchg
dec
pop
mov
adc
cmc
aad
sbb
jne
ds
xchg
inc
ficomp
push
ror
mov
add
xor
dec
stos
loop
inc
push
add
int3
xor
mov
dec
or
sub
fld
cmps
call
pop
cmp
xchg
push
add
aad
out
mov
xor
push
mov
or
jae
outs
jae
mov
(bad)
arpl
(bad)
mul
jbe
sbb
ja
scas
mov
rcl
loop
jns
ins
lds
imul
inc
mov
xchg
movs
lahf
xor
lea
(bad)
adc
jecxz
jp
mov
addr16
sbb
or
repz
mov
and
mov
jmp
xlat
popf
movs
fild
xor
aas
lahf
xlat
adc
fsubr
addr16
loope
or
out
add
popf
pop
add
int
scas
mov
daa
jecxz
add
add
push
adc
mov
das
mov
add
(bad)
jl
xor
sar
sar
add
mov
adc
sahf
shl
or
js
sbb
or
movs
pop
mov
pop
cmp
and
outs
dec
fwait
mov
fwait
inc
and
dec
sub
adc
jg
mov
pop
mov
push
stos
fld
xchg
xchg
adc
add
in
loope
push
jmp
sbb
add
mov
lock
arpl
inc
xchg
stos
mov
(bad)
pop
and
push
add
xor
loop
(bad)
push
and
mov
test
cmp
dec
jp
cmp
xor
ss
or
mov
int
sbb
push
cli
or
out
mov
pop
add
hlt
add
push
ds
pusha
in
mov
fnstcw
mov
cmp
or
out
arpl
cmps
or
push
mov
inc
leave
mov
js
pop
outs
inc
fwait
or
aad
in
cmps
xor
sub
sti
retf
mov
in
rcl
scas
fidivr
ins
add
pop
mov
add
mov
push
pop
adc
mov
fmulp
or
data16
dec
pop
push
dec
pusha
or
and
lahf
mov
aas
xchg
jl
int3
adc
jp
gs
rcr
clc
cmp
sbb
and
loop
jecxz
adc
jo
or
les
aad
std
fistp
pop
pushf
mov
int
stc
xchg
outs
out
cmp
sbb
leave
or
bound
lahf
inc
(bad)
mov
mov
xor
adc
dec
int3
sub
aas
xor
add
shr
iret
jbe
cdq
or
add
neg
adc
or
fwait
aas
retf
(bad)
mov
inc
cmp
je
in
cs
out
jmp
daa
xchg
test
call
or
mov
ss
jne
call
inc
sub
retf
adc
icebp
call
mov
inc
and
stos
test
push
push
aaa
lea
or
push
add
cmp
test
mov
rcl
cmp
retf
retf
gs
lahf
push
sub
cmp
sbb
in
idiv
or
fiadd
cmp
fwait
sbb
daa
fimul
js
mov
mov
call
in
cmp
or
stos
and
sub
or
mov
test
(bad)
lock
mov
ror
dec
call
scas
ret
sub
xchg
pop
xor
das
ss
cdq
push
jmp
pop
or
loope
ret
test
cmp
xchg
ds
jmp
stos
repnz
sbb
sub
icebp
xor
jo
dec
lds
mov
aas
push
jae
push
pop
push
cmp
les
mov
jl
stc
shl
data16
outs
sbb
test
sub
test
fist
add
and
cwde
fst
mov
adc
cmp
add
mov
jae
xor
push
fst
fucom
ja
or
xlat
scas
fistp
mov
fstp
mov
sub
or
out
sub
ss
ja
daa
in
cmps
pop
(bad)
mov
out
out
sar
sahf
mov
sbb
retf
test
push
jno
jmp
dec
cmp
or
pop
sub
gs
fidiv
xchg
add
or
mov
mov
inc
cs
xor
inc
add
rol
ret
push
jns
adc
(bad)
and
mov
fnsave
fdivr
int3
sub
dec
mov
into
adc
lahf
mov
mov
mov
xor
sahf
(bad)
stos
lds
mov
mov
dec
data16
imul
retf
sub
push
jnp
mov
cmp
sbb
cmc
jg
cld
or
ret
stos
mov
stos
imul
sub
fstp
mov
and
and
fcomp
data16
add
xchg
stos
dec
jg
mov
in
rcr
cmp
jecxz
inc
cmp
pop
ins
sbb
dec
mov
jecxz
jg
nop
dec
xchg
sub
xchg
in
daa
dec
cmc
stos
rol
xchg
inc
xchg
lds
imul
pushf
enter
aad
div
jge
mov
pop
xlat
push
in
cmp
je
stos
sub
fs
ror
inc
clc
xor
xchg
add
push
ret
pandn
call
or
enter
adc
scas
or
mov
mov
jecxz
mov
cld
rcl
lds
xchg
test
sbb
push
imul
mov
inc
push
enter
xlat
je
push
lea
outs
lods
movs
adc
jl
shl
stc
push
jmp
add
nop
cli
pop
mov
addr16
clc
jge
push
add
push
fwait
push
out
mov
mov
daa
push
enter
jg
(bad)
out
scas
fxch
fnstcw
cmp
mov
dec
xchg
mov
mov
jg
into
sub
push
pop
sbb
mov
pop
div
aad
arpl
hlt
adc
test
jecxz
add
jp
push
adc
(bad)
ins
add
ret
sub
push
test
push
aaa
jp
push
and
bound
les
ja
cmp
add
push
jb
jb
add
jbe
cwde
mov
aaa
mov
sbb
arpl
gs
fimul
push
out
fst
pop
sbb
cmp
xchg
push
fst
mov
neg
sub
jne
js
shr
sti
push
add
push
cmc
inc
test
inc
pop
loop
inc
mov
mov
push
mov
jnp
pop
mov
test
inc
aam
sahf
shr
adc
add
outs
scas
es
add
and
test
(bad)
dec
sub
mov
arpl
dec
pop
loope
sbb
icebp
pop
and
mov
sbb
(bad)
adc
xor
inc
pop
pop
or
sti
ds
mov
loop
dec
mov
xchg
das
daa
sti
jnp
sub
(bad)
mov
stc
sub
xor
xor
sbb
inc
jnp
and
sub
cmp
pop
push
jle
div
mov
xchg
shl
push
jmp
not
cmp
jmp
xchg
push
dec
mov
mov
sti
cmp
inc
jmp
mov
enter
lea
enter
(bad)
or
into
bound
add
mov
xchg
or
mov
xchg
xor
sbb
push
or
xchg
jne
imul
popf
mov
outs
jo
gs
push
xlat
into
call
pop
ffree
dec
add
retf
xchg
nop
jmp
xchg
xor
jecxz
not
jb
xchg
inc
sub
inc
xchg
inc
pusha
mov
inc
push
movs
sbb
or
loop
mov
pop
xchg
cwde
repnz
jp
sub
jmp
cld
fs
xchg
xor
rcl
pushf
adc
xlat
inc
sbb
cmp
sbb
sti
leave
dec
lsl
cdq
sub
sbb
mov
mov
mov
(bad)
ds
pop
pushf
jb
int3
mov
dec
cmp
fiadd
mov
mov
mov
dec
pop
(bad)
popa
mov
ins
in
in
push
std
jno
shl
dec
add
ins
sub
jns
pop
cwde
scas
add
xchg
adc
push
movs
shl
jne
and
add
jb
mov
mov
sbb
jmp
test
fwait
enter
js
jne
mov
ror
sub
push
(bad)
movs
test
aas
add
popf
lods
cli
pushf
mov
icebp
add
(bad)
(bad)
repz
push
lods
cld
jb
stc
stc
inc
mov
or
xor
lods
imul
aas
push
mov
sar
inc
inc
add
mov
pop
aas
dec
in
cmp
mov
out
out
movs
mov
cli
clc
dec
pop
mov
ja
inc
push
cwde
leave
(bad)
rol
call
add
xor
adc
xchg
push
sub
sti
dec
fwait
xor
fwait
je
ficom
cmc
adc
push
sar
test
das
(bad)
push
aam
jo
in
nop
out
cmp
mov
and
(bad)
loope
(bad)
test
mov
fidivr
daa
daa
pop
add
mov
in
mov
sbb
std
jp
jnp
xchg
rcr
adc
stos
loopne
mov
or
shl
mov
jp
push
icebp
movs
sub
pushf
mov
cmp
lock
cmp
push
mov
stc
mov
or
shl
jge
sbb
dec
pop
js
fcmovnb
push
sub
mov
les
dec
(bad)
out
push
push
repz
push
(bad)
xchg
sbb
mov
in
inc
and
sub
(bad)
push
push
pop
or
or
inc
rcl
das
mov
(bad)
fisttp
test
aam
addr16
ret
or
(bad)
jno
add
xor
rcl
cmp
rcl
jbe
fisttp
push
mov
inc
outs
psubw
push
cmc
into
fs
push
push
dec
int3
fidivr
adc
jecxz
leave
ins
shl
lds
(bad)
pop
push
repnz
mov
and
and
jge
pop
cwde
outs
pop
in
pop
push
fsub
sub
pop
cli
push
pop
xor
dec
sub
pop
in
ja
outs
sub
(bad)
ins
mov
or
mov
pop
mov
enter
ret
outs
jnp
loope
loop
(bad)
and
aam
xchg
je
sbb
pop
dec
pop
(bad)
clc
push
jle
in
mov
div
jno
mov
test
cmc
jg
out
cmp
cmp
cli
and
mov
cmp
dec
pop
jb
cli
dec
xlat
fs
xchg
or
jp
or
out
inc
lods
ins
xchg
retf
push
out
pop
repnz
in
js
addr16
into
call
sub
repnz
cmps
push
mov
mov
in
hlt
mov
ins
imul
jo
test
mov
(bad)
in
and
pusha
fadd
xchg
call
inc
fwait
lods
push
cmps
les
mov
jge
lea
aad
mov
jb
pop
adc
cdq
imul
xor
sbb
scas
adc
dec
and
movs
fist
dec
sub
inc
jg
xchg
outs
cwde
or
pop
inc
xlat
mov
inc
outs
add
pop
test
sbb
fmul
inc
xchg
mov
ficom
adc
add
call
inc
int
in
(bad)
aas
(bad)
mov
push
repnz
and
sub
(bad)
out
inc
adc
push
jmp
dec
add
inc
sbb
mov
mov
sbb
jmp
mov
imul
icebp
aam
mov
jecxz
add
cmc
xchg
mov
and
(bad)
fstp
sub
aaa
push
cld
ficom
cmc
int3
call
fiadd
mov
shr
jno
xchg
sti
mov
add
retf
xor
cmc
add
inc
leave
add
sahf
cdq
cld
jns
and
enter
add
daa
rcpps
sti
or
sti
cmp
pop
add
xor
dec
cmp
test
retf
outs
sub
mov
aas
push
sub
dec
idiv
xchg
cs
(bad)
dec
shr
and
(bad)
icebp
push
sub
mov
mov
retf
sar
push
xchg
sahf
push
cmps
mov
inc
sub
shr
mov
lods
cmps
repz
cmp
mov
clc
mov
cmp
xchg
push
in
daa
ss
xchg
ja
or
fmul
hlt
mov
fwait
mov
lods
movs
or
mov
mov
lock
ds
pusha
add
mov
cs
call
stos
jae
adc
inc
push
push
or
xchg
test
xchg
outs
xor
dec
iret
mov
lods
mov
mov
addr16
(bad)
dec
and
mov
add
xchg
mov
pop
pop
lods
mov
fbstp
data16
inc
mov
out
es
ja
cmp
sbb
cmps
ins
mov
add
mov
cs
fcomp
jne
xchg
pop
movs
or
mov
or
je
xchg
icebp
out
xchg
hlt
mov
xor
aas
(bad)
int3
scas
add
mov
enter
dec
imul
xor
je
dec
out
loope
xor
pop
xchg
add
jne
cdq
push
fild
jmp
icebp
and
sbb
cmp
scas
jecxz
movs
sbb
cmp
mov
mov
shl
xor
das
jp
ss
or
ins
icebp
jl
add
jecxz
(bad)
sbb
paddw
cmc
inc
call
xchg
cmps
push
adc
jne
inc
jne
jle
jg
cmp
mov
mov
jne
out
mov
jo
cmp
push
cs
push
adc
cmp
mov
or
imul
jno
dec
mov
ja
dec
ds
sub
fld
lods
or
xchg
mov
repnz
push
sub
int3
mov
cld
xor
adc
mov
jmp
xor
add
neg
(bad)
fsub
xchg
pop
fistp
ins
loop
loop
out
aad
xchg
or
das
jns
fisttp
fnstenv
stos
out
ss
loop
mov
call
pop
push
or
jge
sub
push
xchg
in
movs
pop
shl
fwait
(bad)
je
nop
jns
inc
push
mov
and
xchg
loope
jno
xchg
dec
dec
mov
cmp
clc
pop
test
loopne
test
mov
and
jg
jbe
mov
(bad)
js
cmp
and
mov
mov
mov
sub
fcom
lds
xchg
cmps
dec
in
into
or
repnz
mov
das
lea
jle
xchg
outs
repnz
sub
adc
cmp
repz
xchg
push
popa
push
add
and
xchg
pop
jmp
xor
stos
js
xor
aaa
add
and
je
mov
call
fst
mov
xor
push
repnz
push
and
les
shl
ret
ds
in
sbb
out
(bad)
xor
rcl
xchg
sbb
idiv
fpatan
sbb
je
in
mov
fdiv
imul
hlt
ret
add
pop
rol
repz
call
test
rcr
sahf
cdq
add
test
jle
ins
cli
xchg
movs
push
fisttp
stos
mov
pop
mov
js
inc
jmp
push
mov
inc
sub
mov
cli
leave
aad
icebp
nop
out
out
jle
je
sub
int
xor
and
xchg
add
(bad)
xchg
out
test
push
cmc
sbb
div
and
pop
iret
xchg
ss
shr
lea
test
repz
bnd
mov
imul
dec
push
sbb
inc
sub
push
std
dec
cmp
push
xlat
les
pop
idiv
mov
stos
cmps
sbb
(bad)
pushf
out
adc
in
jns
nop
jl
jmp
adc
retf
add
and
mov
xor
jmp
jnp
icebp
retf
shl
jg
repnz
nop
add
pop
jl
pop
sar
jg
mov
aaa
stos
lahf
test
xchg
je
lea
xor
mov
xor
imul
cmp
cwde
push
pusha
int
mov
xchg
lods
out
fisttp
out
in
sbb
fwait
je
xchg
pop
ins
dec
push
jae
push
shl
neg
(bad)
sbb
or
cli
mov
or
mov
xchg
sub
inc
jp
mov
mov
xchg
sbb
aaa
leave
fldcw
dec
sbb
ret
jnp
inc
xor
movups
in
and
clc
jne
cdq
scas
std
clc
imul
jb
jle
mov
sbb
mov
push
scas
add
das
dec
stos
and
ins
xlat
lds
les
(bad)
and
dec
mov
or
xchg
iret
ja
inc
repnz
pop
cdq
loope
mov
pushf
loope
mov
fnstenv
mov
mov
pop
xchg
ins
xchg
jns
(bad)
and
cmp
and
jmp
sahf
ret
cmp
xchg
mov
inc
add
mov
lock
xchg
divps
arpl
xlat
cdq
xchg
and
ins
sbb
ret
ja
xchg
jae
ror
mov
lea
jecxz
push
push
cld
aam
adc
jl
dec
cwde
cmps
and
shl
jecxz
int3
inc
adc
pop
xlat
or
neg
fisttp
xlat
in
(bad)
jb
cdq
gs
pushf
jecxz
leave
mov
fnstcw
adc
mov
adc
outs
dec
sub
gs
jbe
iret
ins
inc
and
cmp
call
inc
fmul
jne
lods
or
push
adc
das
fcomp
jno
jne
mov
rcr
out
add
dec
into
popf
jnp
push
stos
pop
(bad)
sub
mov
push
test
pop
sbb
add
scas
sahf
dec
fld
xor
loop
retf
xor
fiadd
call
fs
pop
mov
push
ret
(bad)
dec
inc
scas
push
shl
idiv
shl
mov
test
(bad)
aam
outs
enter
jo
pusha
in
sbb
mov
enter
cmps
mov
rcl
lea
lahf
mov
xchg
sbb
and
repnz
daa
cld
popf
inc
mov
ss
lahf
ja
pop
sbb
les
xor
mov
fisttp
out
cdq
cmp
fmul
icebp
imul
mov
int
stos
retf
pop
add
lock
fcomi
mov
cwde
test
and
ins
lock
mul
xchg
pop
imul
shl
aad
dec
fdivr
add
cld
cmp
repnz
enter
arpl
jbe
or
cmp
in
xor
dec
push
sub
int3
aam
dec
mov
loopne
les
lods
cmc
push
adc
jae
pop
movs
sbb
jne
jg
leave
bound
test
js
dec
inc
inc
jge
push
aaa
mov
or
jno
in
jmp
sbb
or
dec
cdq
push
leave
sbb
sub
inc
inc
or
(bad)
js
and
sbb
das
ret
(bad)
sti
ret
push
dec
pop
sub
push
imul
adc
ins
pop
pop
(bad)
in
stos
jno
fstp
enter
xchg
xchg
inc
test
leave
out
test
jle
int3
out
sbb
jle
cwde
shl
daa
and
sub
std
xchg
sub
cmc
lods
cdq
das
icebp
std
data16
dec
scas
fsubr
test
int
jecxz
xchg
jmp
mov
pop
mov
repz
out
and
mov
lahf
stos
mov
mov
neg
jmp
rol
mov
inc
sbb
test
jge
rcl
pop
je
rcr
dec
loope
cld
pop
mov
psubusw
(bad)
movs
in
je
sar
dec
rcl
pop
jo
adc
and
push
outs
adc
add
xchg
ret
(bad)
call
and
mov
es
and
rol
pop
lods
fdiv
test
pop
cmps
mov
inc
push
jecxz
lods
dec
ret
add
cdq
in
ss
jbe
pop
add
mov
test
cmp
push
enter
mov
jmp
lea
sub
mov
test
and
je
pushf
test
jmp
movs
xchg
std
adc
add
and
out
ss
movs
add
int
and
sbb
dec
add
dec
stos
pop
add
(bad)
popf
je
xchg
cmp
cmps
pop
icebp
cwde
mov
adc
dec
js
or
xchg
loopne
dec
retf
in
nop
pop
push
iret
arpl
mov
js
or
pop
xchg
cmp
scas
mov
dec
and
jae
loopne
jne
xchg
cmps
not
jp
sar
push
inc
inc
frstor
jmp
mov
inc
push
test
xchg
or
(bad)
fucomp
fs
fistp
sbb
loop
mov
mov
call
xor
cdq
push
cmp
cmp
sub
inc
push
jae
bound
ins
mov
xor
fldcw
lock
stos
lea
stos
add
pop
jl
mov
adc
addr16
sbb
inc
popf
imul
sahf
or
les
in
mov
add
loopne
mov
(bad)
lock
mov
out
push
in
jbe
lods
fild
push
pop
xchg
cwde
jmp
add
repz
xchg
jl
cmps
push
sar
cli
mov
cdq
mov
aas
xor
and
mov
in
jecxz
xchg
sahf
xchg
fnstenv
jmp
xor
pand
push
int3
iret
lods
scas
(bad)
fsub
jbe
leave
(bad)
repz
push
sahf
cld
je
or
adc
mov
stos
js
dec
(bad)
cmp
and
dec
lock
jo
sti
bound
in
and
dec
xchg
adc
and
(bad)
inc
add
fucomp
mov
or
jnp
popa
imul
pop
add
and
pop
cwde
aad
sub
cli
pusha
neg
cmp
ffree
cli
mov
dec
lods
dec
adc
xor
in
retf
fcomp
or
push
mov
jns
repz
inc
jmp
or
inc
out
and
pop
dec
inc
sub
test
shl
pop
sbb
les
ret
add
mov
sbb
fisub
nop
jae
cmp
(bad)
dec
lea
icebp
aaa
cs
outs
jns
inc
retf
ins
and
fsub
mov
daa
aaa
fsubr
xchg
cmp
sub
(bad)
mov
lock
mov
fadd
mov
xchg
cmp
lods
retf
add
sub
adc
aas
pop
es
in
in
adc
(bad)
pop
neg
mov
mov
push
imul
pop
cmp
bound
xchg
lods
pop
repz
ficom
repz
addr16
dec
cs
mov
test
mov
ror
ins
sbb
mov
jle
push
in
repz
add
cmp
mov
int
test
xor
push
btr
sub
xchg
push
mov
shr
das
nop
mov
push
push
and
cmp
push
fisttp
(bad)
sbb
pop
xor
mov
push
and
mov
fidivr
sbb
hlt
dec
test
or
pop
inc
cli
loope
inc
fadd
popf
xchg
jmp
pop
jmp
dec
pop
(bad)
fmul
outs
(bad)
in
mov
pop
push
(bad)
movs
out
mov
jmp
loopne
push
push
fisttp
(bad)
(bad)
shr
push
jmp
ins
and
sub
sub
xchg
lahf
add
movs
mov
jmp
xchg
push
lods
cmps
cdq
push
or
jnp
pop
scas
stos
loope
xchg
fucomp
mov
sar
mov
ins
add
loope
stos
and
dec
cmps
ret
scas
sbb
in
jge
pop
movs
push
push
mov
jl
or
lea
or
push
(bad)
loope
rol
xor
pop
add
inc
mov
mov
out
mov
dec
mov
inc
ret
inc
and
aas
push
xor
popf
inc
cmp
sbb
cmps
inc
pop
mov
jmp
call
pop
test
movs
jl
mov
(bad)
rol
sbb
cmp
mov
icebp
and
jmp
jecxz
sub
cmc
out
bound
test
sub
dec
dec
fdiv
jl
sbb
ss
fst
fs
xor
outs
rol
into
dec
and
(bad)
inc
push
jg
in
xlat
and
lods
sbb
addr16
adc
add
in
xchg
into
pop
mov
stc
cmps
dec
ret
cmc
jp
push
fmul
dec
outs
loopne
inc
xchg
mov
je
xchg
ret
les
xchg
sub
dec
mov
mov
test
xchg
push
pop
sbb
retf
push
mov
jns
xor
jmp
cmp
test
xchg
push
out
xchg
jmp
xor
(bad)
hlt
and
int3
add
mov
iret
call
adc
xor
xchg
xbegin
inc
xor
mov
dec
shl
fwait
xor
inc
pop
mul
stos
aam
test
mov
sti
outs
cmp
xchg
dec
les
fbstp
jmp
xor
sbb
pushf
cld
(bad)
pop
mov
(bad)
stos
inc
les
xchg
test
fisubr
inc
xchg
mov
inc
data16
sbb
loop
xchg
scas
icebp
mov
inc
dec
fbstp
xchg
std
cmp
pusha
movs
add
movs
call
mov
bound
pop
xor
popf
push
enter
cmp
mov
push
jbe
or
dec
jno
(bad)
adc
pop
pushf
dec
jae
inc
pop
push
jns
retf
pop
pop
out
outs
sbb
sbb
inc
dec
lods
jge
enter
leave
cmp
retf
inc
xchg
xchg
mov
inc
(bad)
repnz
rol
mov
enter
out
ret
(bad)
adc
mul
and
fs
pop
inc
in
sub
jnp
inc
lds
or
popa
clc
jge
mov
fimul
retf
mov
das
and
ds
movs
scas
push
lock
mov
jmp
mov
test
je
pop
pushf
xchg
xchg
lock
sbb
imul
and
inc
sub
jo
setp
in
adc
cmp
add
sbb
(bad)
pop
mov
jge
mov
push
std
push
xchg
icebp
mov
cmc
push
test
push
(bad)
loop
adc
inc
mov
xor
fimul
dec
in
aam
fstp
mov
pop
xor
loope
cmp
pop
leave
or
mov
mov
and
test
jg
mov
mov
scas
cmp
outs
sbb
loopne
cli
jb
jl
sbb
lea
ds
(bad)
addr16
das
cmp
dec
mov
or
push
push
hlt
shr
push
mov
out
je
ins
mov
in
fs
movs
clc
aas
jnp
push
ja
lea
mov
jmp
mov
sbb
sti
fimul
adc
outs
jo
retf
mov
cmp
out
in
sbb
test
imul
test
call
retf
fs
pop
dec
cmps
sub
push
jno
mov
jno
or
jmp
xchg
add
mov
mov
and
dec
clc
fldenv
adc
lea
imul
out
mov
sbb
js
int3
mov
pop
rcl
xor
aad
lds
jge
mov
jg
retf
push
add
out
shl
das
lahf
xchg
pop
jp
pop
pop
test
test
scas
jns
call
pop
pop
imul
sub
mov
stc
cwde
arpl
xchg
and
pop
daa
jl
push
adc
add
out
(bad)
cmps
nop
mov
xchg
jb
fcmovnbe
jl
adc
fmul
js
push
pop
jo
pop
sbb
sbb
cs
clc
sar
fist
sub
outs
and
mov
cld
cmp
aad
jmp
mov
add
sbb
cmp
mov
cmp
mov
adc
loope
pop
fistp
sbb
adc
call
sbb
ins
aad
js
dec
push
call
push
dec
push
lock
add
xchg
cld
mov
pop
pushf
adc
(bad)
sub
enter
div
aad
or
add
loopne
and
mov
fst
shl
js
xchg
scas
sar
cwde
out
lea
ds
mov
and
dec
or
call
sar
xchg
retf
pop
pusha
cmp
inc
lods
pop
fld
shl
xor
pop
shl
(bad)
pop
pop
imul
pop
mov
mov
bound
xchg
ss
fistp
ss
adc
int3
repz
sbb
adc
jge
or
add
data16
sbb
inc
enter
pushf
popf
pushf
rcl
push
and
dec
nop
movs
mov
mov
pop
scas
and
shl
imul
jl
xchg
mov
cs
jo
js
shl
pop
xchg
retf
xchg
ins
in
in
scas
or
iret
scas
sub
sbb
sub
sub
dec
xlat
mov
xchg
test
mov
mov
lock
(bad)
cmp
(bad)
and
sub
pop
outs
arpl
and
jecxz
cmc
mov
sbb
adc
sar
retf
(bad)
cmp
mov
xor
xor
add
cmp
loopne
iret
or
jbe
arpl
fs
idiv
mov
(bad)
sub
cmp
dec
retf
or
pop
out
mov
mov
or
loop
add
stc
sub
sub
dec
aad
dec
lods
es
js
jmp
leave
(bad)
(bad)
jns
out
rol
push
stos
sbb
popa
(bad)
cli
(bad)
mov
fcom
bound
(bad)
xor
dec
sbb
movs
xchg
jmp
sub
sub
pop
pop
pop
lahf
in
sub
mov
cmps
jns
rol
mov
aad
mov
pop
mov
fcomp
call
push
mov
jmp
repz
jl
cmp
icebp
outs
sbb
inc
jo
cwde
aaa
(bad)
repz
xchg
mov
adc
xchg
ja
sar
jae
arpl
bound
les
push
mov
imul
test
or
cmp
mov
cld
mov
xor
xchg
je
inc
cmp
push
aaa
cmp
mov
idiv
cmps
(bad)
in
bound
std
xchg
pop
ror
mov
jo
sub
inc
or
mov
jnp
(bad)
arpl
out
xchg
jo
movs
inc
push
inc
xchg
inc
or
sbb
dec
cli
jle
cmp
cmp
sub
fadd
arpl
mov
arpl
fsub
push
sti
push
imul
arpl
xchg
test
push
movs
outs
fcmovne
loop
hlt
(bad)
ror
call
lods
rol
add
cwde
dec
inc
cmp
dec
jno
stc
cli
xchg
mov
jmp
xchg
push
mov
push
stos
push
mov
bound
mov
jns
bswap
(bad)
popf
inc
test
cmps
test
inc
jle
pop
push
adc
out
add
sub
xchg
or
dec
xor
add
pop
bound
mov
cmp
stos
call
outs
mov
xchg
jg
inc
and
push
push
cmp
mov
push
cmps
jns
ja
xchg
fsubr
jae
add
dec
xchg
xchg
addr16
and
out
sbb
pop
(bad)
js
mov
je
and
retf
inc
jae
xchg
ins
inc
jl
popa
mov
and
dec
sbb
xor
mov
retf
mov
jmp
aam
xchg
add
lds
jne
in
dec
jmp
pusha
ficomp
cmp
sub
sbb
adc
loop
loopne
xlat
pop
scas
push
jmp
push
pop
clc
xchg
mov
jo
das
mov
mov
icebp
fwait
and
cmps
(bad)
fs
arpl
(bad)
out
jbe
xor
or
add
cwde
sub
pop
aad
daa
push
data16
fdivp
and
sbb
dec
adc
sub
aad
jl
imul
popf
mov
sub
pop
jb
jns
and
jnp
cmp
out
outs
mov
das
inc
dec
aaa
add
ja
(bad)
ds
shr
pop
pop
iret
inc
sub
pushf
dec
scas
mov
jg
into
ds
jp
cmps
add
push
or
mov
mul
stos
rdtsc
add
dec
shl
jmp
loope
test
mov
add
cwde
sbb
dec
hlt
adc
and
aas
cmp
mov
mov
mov
push
cdq
jno
xor
mov
jbe
jnp
sub
(bad)
jge
call
bound
sbb
push
or
out
add
(bad)
out
cld
sahf
aam
inc
sub
add
jle
xlat
xchg
ret
ja
cmps
xor
call
mov
je
cmp
(bad)
out
gs
cmp
lds
ss
cmp
xchg
mov
mov
(bad)
and
cmp
in
sub
test
push
rcl
es
aam
mov
xchg
xlat
dec
dec
ja
out
std
das
sbb
je
jns
adc
shl
repz
jns
push
push
mov
xchg
call
sbb
and
xchg
not
shl
aam
js
pop
xchg
cld
imul
int3
ins
imul
fcmovb
(bad)
(bad)
mov
jl
xor
retf
mov
xchg
inc
std
sbb
jbe
push
mov
faddp
jp
outs
and
push
sbb
inc
sti
add
sub
adc
lds
push
mov
cmp
imul
movs
xchg
lea
xor
push
jecxz
sbb
pop
xchg
call
jne
pop
dec
cmp
lock
jp
add
(bad)
adc
mov
push
push
loopne
and
adc
mov
xor
fs
outs
fdiv
sub
jb
shl
and
fsub
jno
jl
cmp
xchg
sbb
mov
xor
mov
adc
mov
shl
xchg
sub
ret
cmp
lods
push
mov
pop
sbb
sbb
ja
pop
sahf
sbb
inc
pusha
push
xor
ja
sub
fistp
sahf
adc
or
jmp
sbb
adc
stos
das
jp
loopne
jns
push
push
js
push
in
leave
or
adc
xor
and
lods
jbe
pushf
push
je
(bad)
test
jno
retf
sbb
imul
fcomp
inc
test
cs
jbe
test
xor
int
not
xor
(bad)
sbb
sbb
cdq
fisttp
(bad)
imul
in
(bad)
mov
xor
call
add
push
mov
inc
inc
sub
lods
stos
out
inc
inc
push
cmp
out
mov
scas
icebp
and
sub
fnstsw
cmc
scas
add
shl
sbb
fnstcw
bound
ret
test
pop
std
xchg
or
pop
add
fist
popa
cmps
jne
inc
lds
inc
stos
mov
(bad)
cmps
loopne
aaa
rol
inc
or
out
(bad)
pop
mov
ja
arpl
jnp
mov
jmp
cld
xlat
mov
push
inc
sub
xchg
clc
mov
lods
sbb
leave
jle
out
popf
jbe
sbb
lods
sbb
enter
clc
nop
or
lods
xor
sub
aam
dec
scas
add
jg
cwde
sbb
jge
repz
push
out
pop
int
out
adc
add
ret
mov
scas
adc
push
pushf
sahf
sbb
clc
imul
mov
jge
shl
in
imul
out
daa
mov
hlt
dec
call
cmp
in
imul
xchg
fmul
clc
inc
or
push
push
or
mov
mov
lahf
repnz
add
rcr
xchg
xchg
cdq
xchg
jo
add
imul
dec
sahf
aas
xchg
jmp
pop
adc
out
push
mov
sbb
adc
mov
lods
jecxz
adc
sbb
xchg
pop
inc
lahf
aad
les
and
int3
std
jl
mov
or
inc
cmp
pop
jle
test
push
dec
ins
jmp
mov
(bad)
inc
dec
xor
cmps
sub
sub
xchg
dec
mov
mov
xor
push
push
inc
loop
mov
dec
or
sbb
pop
add
lods
rcl
and
arpl
cmps
or
mov
add
gs
imul
mov
int
xor
std
xor
and
int
dec
mov
icebp
movs
in
mov
js
outs
sub
cmp
les
sbb
pop
enter
and
xor
cld
iret
aas
or
movs
inc
xchg
push
and
icebp
mov
add
fstp
dec
ds
and
mov
dec
fild
retf
rcl
rcr
xchg
cwde
cli
fistp
or
ret
ja
mov
loop
add
mov
movs
mov
mov
je
add
jmp
movs
mov
js
fucom
imul
xor
jmp
outs
fisttp
nop
into
(bad)
icebp
or
or
adc
(bad)
outs
sub
mov
ja
lods
xor
in
add
das
ins
and
pop
pop
and
cmc
pop
dec
cli
inc
ins
cmp
push
les
into
dec
in
imul
or
cli
mov
push
or
dec
or
ror
lea
out
loope
mov
sahf
and
into
inc
mov
outs
mov
jne
scas
bound
jle
gs
mov
test
bound
sub
lods
pop
jl
push
imul
ds
xor
fisttp
cwde
push
stos
mov
repz
iret
sbb
outs
jmp
xchg
gs
xlat
in
or
inc
pop
sbb
cld
pop
and
jne
das
pop
stos
call
pop
push
mov
in
mov
inc
push
xor
jl
gs
xor
stc
mov
scas
push
nop
pop
icebp
dec
cmp
mov
sbb
push
sbb
aad
inc
int
or
sbb
lods
sbb
inc
iret
pop
add
xchg
out
jecxz
add
movs
mov
push
aad
cmp
sbb
and
fistp
lock
jmp
push
mul
cdq
aad
ffree
pushf
or
imul
push
dec
add
shl
push
ja
ret
xchg
mov
lock
jmp
into
and
jne
inc
inc
cwde
add
xor
int3
xor
aam
jmp
(bad)
and
lea
sbb
xchg
push
mov
pop
pop
jecxz
stos
dec
and
sub
xlat
jp
mov
push
nop
loop
jns
push
popa
add
arpl
xor
mov
(bad)
pop
les
shl
mov
xor
int3
dec
arpl
sbb
xor
imul
paddsb
iret
fidiv
repz
pop
inc
mov
lods
and
test
pusha
ds
jno
repz
cmp
fistp
inc
mov
aas
mov
data16
mov
cmps
pop
xchg
xlat
rdmsr
mov
stc
dec
rol
(bad)
nop
sub
mov
(bad)
enter
xchg
pop
dec
or
fisubr
mul
or
pop
repnz
fisub
loope
ins
(bad)
push
int3
jmp
inc
cmp
and
jbe
shl
mov
out
dec
movs
in
push
scas
add
mov
mov
aam
in
and
call
mov
adc
out
loope
jge
les
cdq
ins
fstp
(bad)
sbb
sbb
add
call
xchg
jb
gs
(bad)
pop
jmp
fld
mov
lds
push
and
mov
in
call
and
lock
fsubp
or
repz
push
mov
adc
or
xor
mov
dec
rcr
xchg
stc
xchg
cmp
in
sbb
mov
inc
push
pop
cmp
aad
call
jnp
call
sbb
(bad)
pop
aad
outs
or
nop
add
mov
jbe
mov
scas
mov
outs
add
pop
or
jne
adc
aaa
das
sbb
sbb
xchg
sub
cs
cmp
sub
sbb
aaa
mov
(bad)
hlt
sbb
bound
pop
mov
inc
mov
cmp
rol
adc
lods
xor
outs
jbe
adc
in
inc
lods
leave
bound
(bad)
cmp
ins
mov
sub
jmp
pop
xor
mov
sbb
cli
mov
(bad)
and
push
dec
sub
loope
mov
loope
and
pop
sub
pop
or
ret
adc
adc
xchg
pop
adc
or
pusha
dec
adc
jnp
out
jmp
pop
adc
ins
js
jle
fild
jmp
nop
test
jl
inc
(bad)
stos
or
bnd
fcomp
addr16
cmp
xor
cmps
dec
out
mov
lods
pusha
push
push
out
data16
ror
mov
stos
inc
adc
and
dec
jo
out
mov
mov
retf
dec
mov
push
into
inc
and
outs
mov
rcl
rcl
stos
xor
mov
mov
fistp
pop
xchg
pop
xor
adc
out
cwde
imul
push
inc
mov
dec
outs
sbb
jl
cmc
xor
cs
add
adc
sub
fwait
pop
ja
clc
pop
jg
mov
loopne
mov
lahf
cld
fild
out
movs
nop
and
(bad)
imul
test
gs
outs
mov
cs
test
daa
mov
popf
jae
leave
dec
sub
ds
aas
les
call
sti
sbb
pusha
add
or
push
scas
in
cmc
jns
xchg
jbe
add
mov
out
add
int
dec
pop
dec
mov
icebp
or
mov
inc
cli
mov
and
lds
dec
add
xchg
inc
push
loopne
xlat
loopne
dec
in
mov
mov
scas
jne
and
loopne
push
jne
repnz
mov
pop
mov
shl
dec
push
dec
dec
inc
sub
out
and
push
inc
jl
fs
push
cdq
(bad)
fdivr
inc
aam
adc
jbe
inc
jle
push
and
lods
xchg
sti
mov
mov
push
pop
push
scas
mov
cs
and
(bad)
and
ss
inc
xor
pop
sub
hlt
cmps
int3
cmp
mov
stc
(bad)
out
dec
ss
xor
sub
sub
or
mov
retf
mov
sub
adc
cmps
test
mov
xor
lock
fadd
outs
inc
mov
fcmovb
sub
arpl
clc
ss
shr
test
push
bndstx
es
in
outs
bound
mov
mov
mov
mov
xor
mov
mov
test
test
dec
into
dec
mov
pop
add
test
in
and
xchg
ror
fnstenv
xchg
aam
ret
mov
test
xchg
pop
add
es
pop
repnz
ins
push
test
dec
lods
mov
dec
cli
in
cli
aaa
sbb
stc
stos
pop
xor
jbe
mov
pusha
cmc
lods
sbb
out
hlt
or
clc
(bad)
mov
rol
(bad)
and
sub
cli
jmp
push
push
fs
aas
cmps
imul
inc
fisttp
ffreep
movs
out
out
fisttp
adc
jbe
dec
fld
in
jmp
sub
or
sahf
sub
push
mov
adc
jmp
scas
adc
mov
dec
cmp
fcmovnbe
inc
mov
imul
mov
and
ja
xor
es
mov
cdq
shr
mov
stos
push
xor
cmp
and
dec
movs
arpl
scas
xchg
jo
pop
lahf
(bad)
cs
loope
repz
rcl
or
sub
cmps
xor
shr
daa
sbb
repnz
pop
mov
xchg
aaa
addr16
xlat
jg
test
sbb
int
cmp
pop
dec
ror
adc
shr
mov
lods
adc
shr
sub
jecxz
fwait
xchg
ins
pop
pusha
(bad)
xlat
jmp
pop
ret
repz
adc
xor
or
cld
or
js
dec
sbb
(bad)
jle
sbb
and
mov
movs
xor
push
and
iret
lods
out
sbb
call
lock
mov
popa
ret
xchg
into
aaa
cs
push
dec
mov
mov
adc
int3
or
fisttp
mov
pop
sbb
mov
mov
ins
scas
je
call
dec
les
push
mov
hlt
mov
es
adc
mov
add
xor
xchg
xchg
jge
jne
add
adc
jo
mov
(bad)
mov
jmp
lea
push
stc
mov
cmp
or
test
data16
into
push
call
jecxz
or
adc
jnp
or
stos
lahf
jmp
sbb
test
xlat
popf
xor
mov
jecxz
cdq
fcmovu
xor
nop
scas
(bad)
cli
shl
ins
pop
pop
sub
div
mov
movs
pop
aas
adc
jns
mov
and
mov
aas
sbb
repz
or
out
mov
leave
pop
inc
dec
int
push
cmps
mov
jo
loopne
xchg
xchg
push
mov
push
cmp
clc
cdq
pop
xchg
repnz
inc
xor
addr16
jecxz
ins
add
or
jmp
loopne
sbb
vmovups
and
pop
adc
mov
lods
adc
sbb
dec
out
adc
movs
mov
daa
fs
mov
and
add
call
in
sti
xchg
enter
clc
stos
scas
sbb
adc
mov
jg
fcom
mov
xchg
mov
data16
pop
cmp
inc
inc
cld
test
sub
jle
ja
or
ins
pop
lock
ja
fimul
add
pop
in
xchg
test
aad
adc
inc
jbe
dec
mov
es
imul
pop
std
daa
pop
in
mov
xchg
push
sub
out
fst
push
scas
pop
in
aas
arpl
lea
test
or
add
ret
ror
js
hlt
jae
mov
fidiv
stos
movs
mov
and
ror
jmp
sub
jae
retf
sbb
xlat
cmps
lar
data16
outs
dec
cmps
std
dec
mov
mov
enter
mov
xchg
shr
in
pop
nop
popa
dec
into
push
shr
lds
stc
dec
mov
daa
dec
cwde
inc
inc
inc
je
sti
je
enter
js
out
add
pop
sbb
mov
jns
lahf
fs
cmps
(bad)
ret
fst
call
cld
cs
adc
pop
xor
mov
icebp
enter
xor
inc
dec
xor
add
out
sub
lds
les
xchg
mov
cmps
gs
popa
scas
dec
inc
mov
(bad)
fisubr
icebp
dec
rol
add
pop
xor
lea
mov
add
mov
ins
pop
bound
sahf
das
std
scas
pop
or
mov
inc
(bad)
(bad)
sub
test
call
or
movs
push
out
cmp
(bad)
mov
ins
or
(bad)
cmp
push
in
int3
push
sub
xchg
ss
out
or
mov
add
jns
js
mov
(bad)
nop
inc
push
movs
out
xchg
lods
xor
or
mov
cmp
ds
mov
stos
adc
rcl
pop
sub
inc
push
jg
stos
int
mov
jp
cld
add
(bad)
stos
scas
and
dec
movs
pusha
xchg
or
shr
inc
lea
loope
rol
pushf
adc
test
into
test
or
inc
mov
sar
aam
lods
sbb
arpl
jae
ret
test
enter
xor
addr16
fcom
add
aas
push
jns
push
and
sub
out
mov
add
(bad)
mov
pop
ins
loopne
mov
fild
xchg
jae
psrlw
bswap
inc
into
xor
and
mov
mov
fldcw
dec
addr16
sbb
scas
fidivr
sub
mov
ret
jbe
xchg
mov
jl
xor
mov
push
mov
mov
fst
dec
in
xlat
push
jge
ret
adc
scas
fisttp
ss
or
fist
aad
mov
gs
inc
adc
push
bound
int3
(bad)
iret
adc
jns
aad
mov
push
xor
push
aad
dec
cmc
daa
mov
jns
shl
test
xor
loope
adc
adc
cmp
sbb
xor
cmp
bnd
les
fcomp
jnp
pop
inc
mov
xchg
sbb
mov
xchg
or
pushf
shl
pop
int
outs
sbb
xor
mov
stos
int
or
test
push
jae
lds
and
inc
mov
out
push
xchg
stos
cmp
std
(bad)
and
mov
sahf
jne
mov
loop
ret
stos
ds
retf
and
jl
arpl
dec
std
xor
xchg
dec
movs
inc
ins
daa
adc
dec
inc
outs
(bad)
imul
bound
iret
inc
(bad)
in
movs
rcr
add
xlat
or
jo
(bad)
cwde
shr
mov
sub
gs
bound
(bad)
adc
pop
ret
mov
pop
pop
jmp
repz
ja
imul
test
std
xor
adc
and
push
loop
xchg
mov
push
adc
sbb
xor
mov
cdq
or
lds
or
cmp
ja
div
(bad)
ffree
call
xor
mov
xor
mov
mov
add
pop
loopne
mov
xor
cmps
mov
pop
sti
mov
imul
push
push
pop
icebp
add
call
rcr
imul
ret
push
pop
nop
aam
or
adc
adc
hlt
out
int3
in
and
xchg
adc
mov
adc
movs
popa
dec
inc
sub
jmp
jle
push
mov
xchg
inc
sub
cld
dec
call
jmp
jmp
push
daa
xchg
dec
xor
add
rcl
push
mov
sbb
cmps
fwait
push
pop
pop
fnstsw
push
fsubr
sbb
pop
mov
or
push
test
mov
js
adc
xchg
repz
jmp
adc
movs
sbb
add
pusha
das
inc
stc
mov
cmps
inc
cmps
xchg
cmp
pop
xchg
adc
ins
mov
out
loope
(bad)
icebp
pop
push
movs
ins
pop
int
cmc
lahf
xor
xor
jg
push
lds
mov
jae
jne
xchg
retf
xor
add
stos
push
jns
or
dec
icebp
outs
jmp
xchg
inc
dec
ja
pop
and
fs
add
mov
mov
and
imul
cmps
push
cmp
dec
push
mov
in
pusha
pop
cld
ja
jecxz
jp
leave
test
jecxz
xchg
cli
lods
loopne
jnp
jle
push
mov
xor
sub
pop
mov
jae
pop
jp
push
popa
mov
push
mov
fcmovnu
xchg
icebp
fisub
xchg
stos
out
dec
or
pop
fisub
lahf
in
xor
or
cmps
dec
movs
add
cli
pop
aas
inc
sub
cmc
(bad)
cmp
or
and
sti
xchg
pop
dec
mov
mov
mov
fisub
xchg
xlat
mov
call
inc
xchg
mov
stos
dec
imul
in
or
(bad)
(bad)
imul
sub
pop
sbb
fld
mov
add
scas
seta
mov
dec
data16
xchg
mov
jno
loop
sbb
les
xlat
inc
jae
imul
mov
jno
mov
adc
fucom
jno
cmp
call
(bad)
stc
and
mov
loop
mov
movs
xor
daa
rol
cmp
stc
cmc
xor
sbb
fwait
pop
jmp
lods
ins
retf
lods
fucompp
and
mov
mov
cwde
lock
add
inc
das
sbb
mov
aam
adc
xor
dec
cmp
cmps
movs
mov
enter
es
mov
mov
xchg
cmc
arpl
jp
daa
mov
test
sbb
add
loope
mov
jle
xchg
outs
rol
movs
inc
xchg
fisttp
mov
sahf
fcom
cmps
mov
dec
mov
repz
cmp
jb
ror
jmp
mov
fcmove
movs
push
je
xchg
cmp
fadd
int3
call
inc
vpxor
sub
dec
push
pop
inc
pop
or
sub
icebp
clc
jecxz
fiadd
mov
pop
js
mov
shl
ret
sbb
adc
fld
jmp
fmul
or
cli
sbb
fbld
ds
dec
(bad)
or
popf
aam
cmps
pop
and
xchg
xchg
jge
lods
retf
cmp
loopne
rcr
cmc
push
pop
dec
jae
cli
push
dec
fs
xchg
xchg
shr
repz
mov
jecxz
xchg
mov
jle
pop
movs
pop
adc
test
out
pop
adc
sub
out
lea
adc
dec
(bad)
ins
mov
inc
repz
ret
dec
pop
jmp
ret
out
adc
stos
in
inc
mov
pop
cwde
lods
jg
push
xchg
mov
call
cmps
imul
jmp
inc
dec
xchg
mov
xchg
pop
dec
lods
aas
mov
pop
lahf
das
add
clc
xchg
pop
mov
sbb
push
xlat
cmc
fisubr
xlat
adc
shl
and
aam
into
adc
jmp
sub
test
pop
xchg
mov
fcmovbe
and
repz
adc
add
add
adc
fnstcw
je
xchg
or
daa
push
fwait
jb
mov
(bad)
mov
jle
pop
mov
jl
ret
or
xchg
out
and
jnp
mov
and
pop
and
nop
stos
mov
les
xchg
cs
mov
jb
loop
inc
xlat
cmp
dec
gs
push
mov
js
idiv
js
xchg
sub
ret
mov
and
sbb
dec
cs
mov
ss
(bad)
adc
jmp
jb
inc
neg
repnz
mov
xchg
pop
mov
xor
daa
aaa
push
xchg
push
daa
and
sahf
loop
cmps
ins
sbb
or
mov
sub
fisubr
dec
daa
adc
mov
mov
pushf
mov
rcl
popa
cmp
adc
les
mov
sti
out
fsub
(bad)
jmp
idiv
inc
icebp
mov
sti
mov
or
not
push
add
and
mov
cdq
repz
ja
popa
jo
jecxz
or
or
xor
outs
mov
push
push
jp
nop
js
sub
je
daa
lock
sub
sbb
or
seto
dec
loop
or
repnz
fnsave
xor
adc
pop
cs
pop
data16
mov
shr
xchg
das
inc
inc
scas
aas
hlt
pop
lods
out
sbb
popa
xor
dec
iret
aas
push
or
mov
jnp
jg
mov
dec
cmp
push
aaa
cmp
icebp
mov
pop
mov
push
clc
sub
js
bound
pop
jp
mov
mov
pop
ja
jbe
loop
frstor
sbb
arpl
aam
cmc
mov
out
xlat
loopne
fidivr
sub
fistp
adc
mov
jecxz
cmp
cmp
xor
cmp
and
imul
cmp
push
mov
sub
sub
sahf
or
imul
xor
push
int
sbb
push
pop
sub
cmp
nop
pop
popf
out
out
or
mov
lock
mov
(bad)
aad
adc
add
pop
add
xor
std
jge
or
jmp
and
jecxz
dec
in
out
inc
mov
cld
movs
adc
lock
mov
mov
mov
into
fist
jmp
mov
inc
iret
xchg
daa
jl
sbb
mov
adc
jecxz
rol
push
cdq
sub
les
aas
add
aas
lds
imul
adc
mov
mov
out
ins
call
rcl
inc
mov
ret
inc
mov
mov
inc
ret
cmps
je
and
xchg
add
arpl
sbb
cmp
xor
and
int3
push
or
bound
pusha
(bad)
and
arpl
adc
cs
ds
add
pop
sub
mov
test
xchg
pop
dec
scas
in
adc
lock
out
ror
xor
xlat
mov
sbb
xchg
push
pusha
rcr
or
dec
dec
adc
xchg
mov
push
addr16
mov
movs
add
xor
mov
cli
inc
jg
cli
repnz
ins
or
sbb
cmp
jp
pop
mov
pop
je
nop
pop
fcomip
push
cli
dec
xor
in
cmps
mov
std
pushf
add
stos
lds
sbb
adc
jno
pop
test
call
int
(bad)
adc
sub
sub
and
(bad)
loopne
dec
imul
frstor
and
enter
mov
jp
push
fyl2xp1
imul
mov
push
or
int
cld
push
(bad)
sbb
sbb
addr16
sahf
push
adc
mov
lahf
bound
outs
push
inc
outs
inc
call
movs
sbb
icebp
pop
rcr
idiv
jo
call
xchg
(bad)
call
sahf
pop
jl
lods
mov
pop
aad
bnd
jp
pop
lods
and
mov
sbb
sbb
rol
das
mov
add
adc
cmp
sub
sbb
mov
adc
sub
nop
sbb
int
movs
lods
dec
adc
mov
and
jl
sar
mov
mov
sbb
loope
int
pop
loopne
push
mov
push
(bad)
xchg
lock
out
stos
sar
fidiv
jge
mov
std
jo
and
xor
jbe
jno
dec
mov
(bad)
inc
out
add
lods
cli
stos
jmp
push
je
adc
xlat
repz
inc
js
sahf
(bad)
mov
mov
inc
int
scas
dec
mov
lds
inc
loopne
bound
dec
pop
sub
push
dec
loope
outs
popa
stos
adc
(bad)
aam
xchg
pinsrw
or
pminub
push
push
ror
dec
lock
push
cmp
shl
pop
fdiv
pop
das
push
fs
xor
jo
mov
mov
rol
(bad)
(bad)
xchg
stos
fdiv
pop
add
cmp
sub
gs
mov
lahf
xchg
loop
jmp
(bad)
or
pop
push
popf
inc
push
loope
rol
adc
jecxz
bound
inc
push
mov
scas
push
mov
pop
mov
aam
mov
mov
pop
in
mov
sub
adc
and
pop
mov
ret
mov
jno
jbe
and
adc
inc
pop
ja
adc
add
sub
scas
retf
mov
out
aam
mov
ss
adc
dec
or
repz
aad
xlat
cmp
aas
adc
cmp
add
das
inc
test
out
aad
xchg
stos
dec
lods
xor
test
and
pop
imul
and
clc
fstp
adc
leave
imul
fisttp
pusha
dec
loopne
clc
in
cmp
xor
lea
xchg
(bad)
rcr
mov
pop
pop
cmp
sub
pop
or
push
xchg
ja
adc
or
jne
hlt
out
outs
ror
xor
adc
aaa
mov
dec
mov
push
not
push
add
mov
push
push
test
pop
pop
lods
cmc
inc
rcr
or
and
or
inc
lods
jl
aam
sbb
fcomp
repnz
cld
jge
mov
pop
ja
and
rcr
xchg
popf
loopne
jmp
jo
jl
add
push
in
or
jno
cdq
sbb
shr
jns
or
adc
retf
ds
xor
pop
fisubr
and
or
lea
xchg
and
xchg
push
sub
enter
inc
daa
test
pop
fwait
sti
inc
inc
jle
or
rol
aas
xchg
adc
daa
mov
xchg
call
sub
(bad)
fist
dec
xchg
mov
mov
sbb
push
adc
dec
dec
push
daa
mov
scas
lea
dec
test
adc
pushf
(bad)
mov
cli
leave
jmp
xchg
scas
out
cmp
inc
mul
les
mov
inc
cmp
and
cli
cld
fist
inc
pop
test
push
lds
stos
sub
pop
push
jmp
cmp
stos
leave
mov
inc
iret
repnz
push
add
inc
popf
stos
mov
pusha
fidivr
sub
jg
lea
(bad)
ror
dec
cmp
jl
aaa
jbe
jle
clc
je
repnz
or
xor
xchg
test
arpl
loopne
jecxz
pop
test
dec
mov
xchg
(bad)
mov
bnd
ss
mov
js
imul
nop
xor
jmp
and
ja
lahf
mov
sbb
into
push
cmps
and
inc
sub
push
repnz
mov
fsub
in
jo
inc
mov
imul
xchg
std
and
push
xor
(bad)
add
arpl
in
inc
sbb
xor
out
pop
xchg
cmp
cli
xor
sbb
sbb
or
mov
cmp
jnp
(bad)
pop
(bad)
pop
test
inc
std
clc
mov
cli
outs
xchg
outs
adc
jnp
push
cld
xchg
dec
jne
ins
fcom
fimul
mov
inc
push
push
cli
or
push
rcl
repnz
mov
ror
xchg
cmp
mov
test
cs
test
lods
leave
push
push
inc
ins
movs
ds
jns
mov
adc
xchg
dec
push
cmp
push
retf
arpl
mov
pop
les
mov
mov
mov
fcom
shl
ss
(bad)
div
jnp
dec
cmp
xor
arpl
fwait
mov
pop
out
sbb
lahf
aas
loop
lock
dec
loopne
lahf
stc
test
ror
pop
push
push
in
jmp
push
cli
mov
jmp
push
fwait
sbb
out
repz
inc
scas
inc
into
outs
xchg
mov
inc
pop
inc
cli
pop
inc
out
jge
in
xchg
jne
sub
mov
test
mov
pop
mov
pop
loope
add
iret
lds
sbb
sub
and
adc
sbb
jae
lods
xor
nop
cwde
inc
push
test
dec
and
ss
xchg
aas
jno
inc
push
mov
int
outs
jne
nop
mov
inc
fistp
jecxz
jbe
cmp
icebp
pop
sub
test
in
cmp
lods
std
and
js
cmps
pusha
out
mov
loopne
inc
mov
repz
push
dec
dec
ret
rsm
mov
dec
sub
cld
inc
in
mov
dec
and
adc
mov
stos
sti
push
inc
es
cmp
loop
xchg
jg
adc
xor
lods
(bad)
mov
xchg
fsub
mov
pop
das
sti
outs
in
push
mov
cmp
mov
cmp
int3
popf
pop
inc
cmp
jmp
test
outs
fdiv
pop
xlat
push
jmp
stc
fadd
or
addr16
pop
stos
cwde
jmp
out
shl
inc
mov
pop
mov
mov
jp
or
loopne
retf
adc
mov
xor
data16
out
xor
push
jbe
cmp
movs
xor
xchg
dec
out
ja
addr16
rcl
aad
adc
clc
retf
stos
test
dec
mov
add
mov
cwde
mov
fidivr
cmps
mov
inc
test
scas
push
ins
pushf
pop
pop
inc
loop
call
int3
and
add
jb
inc
(bad)
jmp
add
cmp
or
clc
pop
gs
or
cmp
daa
(bad)
div
sbb
(bad)
leave
mov
rol
cdq
scas
xchg
arpl
mov
pop
pop
imul
adc
(bad)
xor
and
mov
jmp
rcl
(bad)
mov
cmp
shl
inc
(bad)
mov
xlat
stos
or
pop
lahf
pandn
inc
or
retf
aaa
xor
mov
loopne
adc
jmp
jle
mov
xchg
in
pop
sti
add
addr16
mov
push
cmp
mov
or
jb
mov
leave
retf
nop
cmp
pushf
xchg
push
jbe
fst
je
jno
cmp
nop
imul
sti
stc
push
mov
mov
stos
movs
jno
cmp
in
les
jp
or
sbb
mov
je
les
mov
inc
nop
jmp
je
add
pop
fnstsw
pop
and
mov
loop
fiadd
sub
pusha
push
rcr
aam
out
aad
imul
iret
aad
fst
scas
and
call
xor
fiadd
pavgb
mov
or
div
and
hlt
out
mov
cmp
push
add
test
sub
sahf
jb
rcl
adc
outs
ja
call
pop
pop
and
lahf
mov
jl
fwait
je
fcomp
not
cld
jmp
sbb
jl
les
das
jo
or
xor
pop
loop
es
sub
ret
out
ficomp
scas
call
test
add
sbb
push
xchg
jnp
push
push
mov
pop
stos
or
hlt
les
es
scas
movs
mov
in
mov
pop
outs
jno
outs
mov
jecxz
add
mov
retf
xchg
dec
dec
or
and
pop
jmp
cli
mov
sbb
das
mov
fnstenv
jb
stos
xchg
mov
sub
cmp
imul
les
into
jl
jmp
mov
hlt
dec
stc
nop
xchg
jnp
sub
lods
jmp
stc
xchg
mov
fidiv
stos
xchg
mov
jae
mov
mov
push
repz
jb
pop
fdiv
in
add
lahf
adc
push
or
sahf
stos
sahf
mov
fmul
lds
and
add
pusha
in
or
pop
and
cmp
call
push
loope
cmps
xchg
ss
push
cs
js
jmp
sub
repnz
hlt
sub
je
add
mov
mov
lock
inc
mov
lds
addr16
pusha
mov
inc
sbb
xor
jns
push
jno
cmp
cld
xor
enter
cmp
xchg
pop
xlat
mov
cwde
pop
push
aas
inc
rcr
test
ret
aam
hlt
int3
(bad)
cs
inc
int
ins
xchg
call
es
cli
fild
in
xchg
sbb
int3
inc
adc
add
inc
xchg
xor
fidiv
pop
jp
rcr
js
adc
outs
dec
fsub
xchg
add
xchg
xor
and
adc
dec
sub
mov
(bad)
aas
mov
lldt
mov
stos
xor
dec
mov
(bad)
mov
mov
js
test
fdiv
pop
bound
pop
pop
lea
(bad)
mov
jb
mov
movs
cmp
(bad)
jnp
sub
cmp
lahf
dec
leave
icebp
sbb
ja
mov
rcl
adc
pop
scas
mov
out
stos
xor
adc
pop
movs
and
inc
xor
in
mov
arpl
or
inc
mov
(bad)
call
mov
sub
aam
ins
cmp
dec
mov
xchg
adc
pop
pop
adc
fnsave
adc
and
mov
clc
test
xchg
adc
inc
jmp
movs
xor
add
xchg
scas
push
call
sub
push
mov
dec
in
enter
push
jmp
push
jbe
icebp
xor
sub
jo
icebp
out
out
es
outs
jo
test
mov
xor
add
adc
imul
outs
fsubr
add
or
push
cmps
and
ins
jle
pop
sub
inc
xlat
je
repz
ror
adc
loope
movs
sbb
pusha
aas
inc
sti
jge
mov
cmp
rcr
cmc
ret
(bad)
mov
call
add
dec
dec
mov
push
imul
pmuludq
dec
jp
pop
and
inc
push
xchg
xor
paddusb
pop
mov
fucomip
shr
sub
pop
dec
popa
mov
pushf
cmps
sub
das
cmps
sub
xchg
sbb
cmp
inc
adc
jmp
icebp
dec
sbb
adc
or
mov
jle
lock
rep
test
mov
mov
mov
xchg
pop
sub
cmps
jns
sub
add
repnz
cpuid
les
lods
and
cli
ja
mov
jnp
mov
enter
xor
mov
xor
(bad)
adc
mov
cmc
jbe
clc
mov
imul
cmp
push
xchg
call
jg
push
add
std
jnp
(bad)
std
nop
xchg
sbb
inc
das
out
pushf
xor
cmp
add
popf
and
dec
mov
mov
in
push
inc
pop
cwde
inc
cmp
jns
call
jo
test
and
mov
lods
aam
shr
(bad)
ins
and
lea
fmul
mov
retf
das
pop
(bad)
imul
lock
jne
jae
cmp
sub
mov
dec
daa
push
inc
fsubr
push
ss
mov
jb
cmp
mov
or
and
push
iret
inc
test
sbb
movs
aad
int3
or
pop
adc
mov
push
pop
push
nop
dec
imul
scas
adc
mov
lock
cmps
jnp
mov
jae
or
cmp
jne
jmp
or
into
sub
nop
jmp
les
jmp
ins
dec
mov
ret
mov
pmaddwd
pop
cmps
push
cdq
inc
sub
inc
and
imul
cwde
imul
xor
adc
adc
push
mov
aad
icebp
ret
add
pop
pop
pop
pcmpeqb
(bad)
mov
mov
(bad)
mov
mov
dec
nop
sbb
cmp
lods
jmp
push
test
xor
and
daa
bound
sbb
shl
imul
dec
xchg
shr
jp
addr16
mov
inc
sub
mov
and
mov
cdq
inc
mov
xlat
lods
leave
rcr
ins
cmc
sub
jl
call
shr
cmp
aaa
je
in
and
bnd
fwait
xor
mov
push
je
cmps
add
dec
imul
fcom
mov
adc
shl
stos
mov
mov
push
jl
push
jae
stos
jmp
rol
lods
jg
into
mov
daa
stc
ret
mov
xor
(bad)
fdiv
cld
in
cld
sbb
xchg
cmp
test
cmp
aam
jmp
cmc
push
mov
and
adc
push
pop
inc
dec
mov
out
shl
inc
std
imul
ins
adc
adc
jmp
popf
sbb
and
les
pushf
sbb
fidiv
sahf
pop
inc
add
mov
mov
xchg
mov
sbb
popa
sub
jb
mov
std
retf
movs
loope
iret
shl
aad
test
aaa
inc
rol
(bad)
cli
mov
mov
sub
cmp
sub
jno
sar
sub
cmp
mov
ret
jl
cdq
aam
mov
push
repnz
stc
or
xlat
out
sahf
arpl
lock
dec
out
mov
lahf
(bad)
lar
in
push
ss
aaa
xchg
dec
les
jae
shl
mov
outs
jmp
xchg
xor
test
(bad)
test
inc
scas
aaa
jp
sub
push
and
pusha
fs
mov
aad
test
call
add
pop
xor
in
add
std
adc
jp
mov
mov
push
mov
and
mov
add
js
xor
ret
xchg
pop
xchg
popf
and
inc
ret
and
aaa
stc
adc
clc
pop
and
jmp
sub
not
fstp
adc
mov
daa
loop
(bad)
fs
pop
mov
(bad)
xchg
push
push
call
cmp
jbe
gs
imul
pusha
sbb
mov
mov
ja
or
pop
cwde
rcr
(bad)
jmp
jmp
mov
das
and
arpl
sti
push
fsubr
inc
test
cmps
mov
cmc
xchg
clc
and
mov
das
or
loop
xchg
stos
cdq
sub
aad
inc
xlat
mov
icebp
sar
push
sub
mov
test
mov
test
add
adc
jb
bound
and
adc
out
xor
add
push
pextrw
mov
cld
xchg
jmp
out
jl
int3
rcl
cmp
fisub
cmps
fist
fwait
lock
pop
push
ins
push
movntq
popf
aas
stc
sub
and
sbb
push
push
icebp
retf
pop
stc
ins
jmp
or
movs
call
cld
mov
bound
sbb
sbb
jno
arpl
jbe
sbb
mov
lods
stos
repz
mov
ret
out
scas
xor
js
(bad)
mov
lea
arpl
inc
mov
cmp
retf
mov
xchg
aaa
repnz
add
inc
bound
loopne
pop
mov
inc
adc
les
adc
adc
icebp
mov
xchg
jmp
sbb
enter
loope
xchg
les
fsub
xor
cmps
add
mov
fild
aam
inc
scas
retf
lock
test
test
shl
stos
nop
jmp
add
lods
clc
mov
xor
and
jge
cdq
xchg
cmps
xor
adc
mov
lea
es
lds
dec
and
(bad)
inc
out
(bad)
mov
pop
ins
stos
mov
sbb
fstp
pop
or
mov
pop
jl
lods
cld
sahf
ret
stc
sub
js
fiadd
mov
sbb
popa
cmc
cmps
les
icebp
call
and
fstp
outs
lods
lock
pop
dec
imul
mov
(bad)
xchg
mov
cli
and
xor
loop
stos
sbb
pop
outs
cmp
xor
cmp
xchg
shl
inc
pop
ins
mov
scas
cld
out
mov
cwde
inc
push
mov
jmp
mov
shl
sbb
inc
fstp
(bad)
stos
adc
hlt
shl
cmp
dec
loop
aad
outs
dec
aas
je
stos
inc
push
lds
jecxz
pop
pop
les
pop
sbb
je
js
rep
fadd
in
fstp
xchg
inc
and
inc
inc
popf
pop
aad
push
pop
push
mov
ins
push
add
add
xor
xor
mov
stos
adc
cli
jge
in
cld
rcr
pop
push
gs
pusha
fdivrp
stos
scas
test
movs
pop
stos
cmp
pop
loopne
inc
(bad)
sti
stos
or
mov
nop
int
jb
mov
inc
(bad)
(bad)
(bad)
dec
movs
(bad)
imul
sub
xor
test
inc
sbb
jmp
mov
inc
fsub
dec
popf
movs
js
(bad)
fst
sub
shl
cdq
sub
adc
fiadd
push
xor
add
cmp
lods
cmps
dec
adc
(bad)
push
xchg
out
iret
das
mov
retf
inc
mov
sub
ss
jnp
out
xchg
xchg
outs
inc
xor
movs
call
adc
stos
cmp
js
call
push
sti
data16
repz
popf
and
xchg
sar
pop
and
sbb
cs
jae
pop
in
dec
imul
arpl
inc
ss
lods
test
stc
mov
sub
movs
(bad)
xchg
mov
das
pop
popa
lds
pop
mov
clc
shl
mov
cmp
sbb
sbb
test
jbe
mov
inc
dec
hlt
xor
test
dec
cmp
or
leave
(bad)
call
pop
aaa
aam
aad
ds
xchg
pusha
xor
jmp
or
out
jno
(bad)
fisub
outs
psraw
fidiv
push
dec
repnz
out
push
test
push
mov
ret
fiadd
mov
push
xchg
add
rcl
dec
scas
test
jle
pop
add
pop
mov
mov
test
or
lea
jmp
sub
data16
test
bound
jge
aad
and
int3
fidiv
rcl
xchg
aaa
sbb
cmps
xchg
mov
mov
rcr
loope
call
inc
dec
gs
inc
mov
and
jmp
retf
pop
cmc
sub
add
movs
in
xor
test
or
adc
das
aam
sbb
test
sbb
repnz
fiadd
dec
(bad)
xor
jle
mov
jb
dec
ret
fs
jge
pop
shr
jns
loop
adc
imul
and
ret
sub
adc
or
out
dec
retf
push
sahf
jmp
sub
mov
test
movs
loop
mov
pop
clc
cmp
mov
mov
loope
jmp
int
push
or
inc
xor
scas
pop
sbb
idiv
dec
leave
push
add
adc
mov
fisubr
mov
sub
(bad)
faddp
pcmpeqd
mov
pop
or
(bad)
std
outs
mov
push
inc
leave
or
sbb
icebp
out
cmps
retf
es
test
push
fisttp
ds
xor
retf
add
repz
sub
xor
add
push
cmp
mov
sbb
sub
js
in
or
sub
mov
outs
ins
push
pop
fdivr
jg
pop
addr16
pop
mov
fwait
shl
sahf
ins
imul
movs
shr
ror
fdiv
mul
inc
call
sub
jp
sbb
add
pop
add
push
ret
xor
push
out
jmp
and
cmp
jns
lds
sub
rol
mov
fist
dec
and
rcr
pushf
ja
(bad)
out
pop
sub
clc
pop
xor
aas
sti
or
inc
retf
add
xor
jp
(bad)
outs
fwait
xor
cmps
cdq
sub
add
push
addr16
jmp
repz
(bad)
mov
ror
test
cmp
inc
div
(bad)
icebp
cmp
or
push
pop
(bad)
xchg
out
xor
cmp
icebp
ret
aad
sbb
inc
mov
inc
add
std
stos
push
jne
dec
(bad)
xchg
lods
push
jle
call
shl
xor
xor
push
and
dec
mov
or
repnz
xchg
mov
mov
xchg
add
adc
xor
lahf
cmps
dec
shr
push
pop
movs
aaa
loop
pop
bound
cmp
pop
rcl
mul
dec
xor
cmp
into
enter
mov
into
and
jl
push
enter
cld
test
sbb
cli
fsubr
dec
pushf
dec
cmp
mov
mov
pop
int3
mov
adc
lds
mov
push
jp
div
mov
mov
ins
jmp
mov
xor
mov
push
mov
or
mov
das
arpl
jnp
push
ret
call
mov
xchg
xchg
pusha
nop
fcom
out
cs
fstp
pop
iret
out
push
jae
test
xor
cmp
fdiv
sub
jb
sbb
scas
sub
xor
push
ds
sub
or
outs
mov
or
lods
jge
repnz
outs
call
mov
pop
sbb
sbb
mov
dec
in
in
sbb
mov
aas
cmps
adc
dec
es
jnp
jno
iret
inc
sub
mov
xor
outs
mov
sbb
lds
call
call
pop
iret
mov
repz
loopne
in
dec
xchg
cwde
aas
les
cmp
scas
test
(bad)
lock
in
and
mov
int
mov
xchg
mov
dec
push
pop
rcr
cmc
enter
xor
pop
fs
aad
mov
ret
jmp
scas
gs
inc
jmp
jl
out
dec
mov
sbb
and
push
stos
pushf
xchg
adc
pop
stos
(bad)
cdq
push
inc
retf
retf
cmp
cwde
cmc
jmp
adc
std
add
mov
retf
push
sub
icebp
xlat
jp
popa
mov
lock
pop
(bad)
lock
sbb
daa
xchg
pop
test
jb
dec
fsubp
call
sub
retf
inc
(bad)
iret
retf
ss
js
xchg
test
push
pop
cmp
xor
or
mov
cli
pop
push
lea
adc
add
test
adc
lds
pop
scas
sbb
xor
daa
jnp
xchg
jge
or
xor
in
sar
test
push
add
dec
jbe
mov
push
pop
ja
and
daa
into
push
adc
push
ja
mov
xchg
inc
jecxz
add
sbb
pop
or
add
add
inc
push
rcr
dec
cmp
pop
adc
sbb
pop
popf
xlat
movs
sahf
(bad)
call
sub
inc
fdivr
repz
stos
dec
jle
and
xchg
pop
mov
and
sbb
and
fpatan
adc
adc
cld
or
sub
mov
xlat
in
push
mov
(bad)
std
stc
movs
(bad)
fild
adc
stos
add
hlt
or
fdiv
adc
(bad)
repz
push
test
mov
data16
push
and
mov
std
push
in
cmps
pop
enter
in
sbb
xchg
ss
mov
pop
je
cmp
xchg
js
mov
outs
xlat
fcom
push
lock
test
inc
inc
adc
mov
push
(bad)
xor
ss
inc
repnz
xchg
nop
iret
dec
pusha
in
xor
mov
pop
and
loop
cmps
stc
fwait
addr16
(bad)
push
daa
add
xchg
fwait
dec
stos
mov
out
cli
out
aas
addr16
cmps
sbb
xchg
pop
(bad)
cmp
js
sub
jae
aas
mov
mov
sub
mov
push
loopne
xlat
js
int3
sub
push
pop
scas
lds
outs
pushf
push
cmp
inc
pop
mov
rcr
and
mov
lock
call
stc
xchg
push
mov
add
cmp
cmp
push
xchg
mov
das
dec
in
sub
outs
push
cmc
icebp
and
pop
(bad)
call
cwde
and
int
loopne
dec
sbb
(bad)
lea
pop
pop
jne
arpl
aad
xor
rcr
inc
mov
not
stos
add
push
add
rol
push
fsub
push
and
dec
cld
sub
(bad)
fadd
pop
jle
movs
rol
sub
pop
sbb
add
mov
mov
lods
je
stos
pop
sub
push
sbb
imul
lods
shr
sti
bound
bound
mov
leave
mov
and
ret
or
mov
(bad)
inc
or
shl
and
inc
les
call
leave
rol
out
in
movzx
in
cmp
(bad)
cmp
cmp
pop
cmp
les
loopne
pop
adc
call
nop
adc
dec
gs
aaa
mov
icebp
mov
mov
test
jecxz
test
cmp
sbb
or
push
cwde
loope
aad
fld
jmp
mov
mov
leave
sub
dec
fidiv
adc
test
mov
fidiv
in
fisubr
mov
dec
cwde
xor
mov
pop
fsub
rol
push
and
or
mov
fisttp
dec
clc
mov
add
push
out
inc
js
int3
pop
mov
das
mov
jl
jne
adc
jp
outs
sub
inc
arpl
sbb
fistp
dec
in
ja
pop
mov
jno
cmp
loope
add
(bad)
pop
mov
sub
in
scas
fsub
mov
xor
jo
dec
xor
mov
sub
fmul
loope
jae
aas
adc
ret
or
popf
cmp
js
ins
leave
(bad)
mov
inc
pop
fs
mov
mov
cli
pop
jnp
hlt
mov
xor
jl
jp
add
jo
sub
adc
(bad)
popa
rcl
mov
jne
fs
jno
mov
push
dec
inc
test
jecxz
jnp
mov
jp
pop
mov
inc
mov
push
add
test
add
push
cmp
sub
push
pop
out
pop
test
popa
out
aas
jns
jne
xor
mov
mov
test
ficom
add
mov
loope
shr
jnp
mov
push
jecxz
and
out
mov
cli
push
into
adc
fs
mov
cmp
adc
add
sbb
add
cmp
jmp
and
inc
sbb
sub
adc
js
pop
add
sbb
cmp
les
scas
pop
retf
(bad)
jbe
jmp
and
sbb
xor
and
rcr
les
cmp
jp
xchg
leave
dec
stc
mov
xor
dec
(bad)
nop
mov
and
push
xchg
retf
sti
je
mov
and
mov
jae
add
pusha
mov
sbb
and
dec
pop
jbe
lods
in
jl
adc
xor
fld
xchg
rcr
push
sbb
and
cmp
rcl
aas
adc
into
mov
ins
and
mov
adc
ds
jmp
lahf
sub
mov
fs
jle
adc
stos
scas
stos
inc
pop
jbe
ss
(bad)
adc
xchg
test
dec
les
movs
xor
fwait
lods
xchg
push
add
ret
adc
je
pop
push
fiadd
test
pop
mov
jo
mov
xchg
mov
xor
adc
test
es
fcmovb
daa
mov
adc
aad
or
inc
mov
call
pop
inc
ret
fmul
dec
add
mov
std
and
call
pushf
in
pop
cdq
cmp
dec
pop
mov
repz
fwait
sbb
push
shr
stos
sub
push
mov
xchg
lds
adc
scas
pop
push
stc
push
lock
xor
leave
fidiv
cli
out
aaa
lods
loop
mov
lds
test
lahf
cld
je
popa
movs
and
mov
xchg
push
pop
add
adc
sbb
mov
pop
in
fisub
shr
retf
pop
sub
mov
xchg
add
neg
lahf
sahf
mov
add
ja
cwde
adc
daa
pop
push
ins
call
dec
push
cmp
inc
jno
push
add
pusha
test
leave
pop
pop
fiadd
add
push
push
push
shl
mov
sbb
mov
fistp
nop
or
shl
xor
add
movs
and
scas
retf
and
lock
addr16
stos
seto
sub
mov
mov
and
inc
loop
or
xchg
dec
push
dec
cmp
dec
jge
pop
sbb
pop
cli
cwde
fwait
pop
and
mov
adc
ret
fs
gs
xlat
mov
mov
imul
adc
cmp
movs
call
sbb
or
les
test
stos
shl
ja
add
fdivr
loope
sub
jp
sti
rcl
xchg
dec
xchg
sub
cld
lods
enter
das
cld
xchg
xchg
pop
mov
sbb
nop
xlat
pop
aam
jo
mov
loop
fisttp
dec
or
nop
add
repnz
inc
in
ss
aas
adc
pop
fidiv
or
sbb
cwde
lods
lds
cli
fld
mov
pop
inc
adc
pop
push
inc
xchg
or
jmp
test
rol
inc
xor
iret
leave
and
jne
test
sub
in
jmp
mov
sub
push
lahf
in
test
mov
mov
ds
popf
jb
sbb
sbb
push
and
aam
scas
xlat
jmp
mov
and
sbb
les
push
adc
mov
and
sti
jmp
daa
xchg
pop
pop
xchg
je
push
mov
in
xor
pop
lahf
pop
fld
push
les
sbb
adc
(bad)
cli
stos
adc
mov
hlt
jno
sub
xchg
hlt
jno
dec
jmp
cld
ret
add
iret
jbe
sub
add
jns
lods
fndisi(8087
stos
push
(bad)
xor
hlt
or
retf
inc
mov
loope
cmc
loopne
imul
ins
push
sbb
push
xchg
mov
and
popf
in
xor
pop
jl
call
cli
dec
ss
xchg
push
mov
sbb
push
(bad)
jmp
jle
aaa
jnp
test
cmp
dec
dec
cwde
mov
inc
mul
inc
or
or
push
(bad)
lock
adc
or
xchg
add
jnp
jle
repz
xchg
dec
in
dec
pushf
xor
dec
mov
pop
pushf
rol
(bad)
lds
cmp
(bad)
retf
jg
sti
std
push
fist
dec
mov
aad
xchg
cmp
(bad)
rcr
pop
mov
jns
pop
inc
call
call
(bad)
sub
and
loopne
imul
loop
add
mov
cwde
aas
push
test
fnstcw
jl
jbe
pop
sbb
addr16
sbb
(bad)
std
repz
mov
dec
push
pop
mov
dec
(bad)
addr16
push
adc
(bad)
std
dec
pop
cmp
jmp
pusha
jns
pop
pop
inc
je
sbb
jge
ds
arpl
jbe
call
out
fadd
sbb
dec
dec
test
cmp
stos
(bad)
xor
ret
sbb
iret
gs
data16
ret
call
adc
scas
imul
lahf
cmc
int
mov
add
bound
daa
in
and
mov
or
fsubr
or
push
jg
loope
xchg
mov
loopne
mov
xchg
ror
add
ret
sar
adc
inc
xor
xchg
xchg
mov
js
inc
je
(bad)
es
cs
bswap
jmp
repnz
retf
xor
push
lds
lods
and
pop
pop
lock
fnstenv
imul
mov
in
cmps
cmp
in
dec
lea
xchg
in
nop
push
hlt
dec
ret
movs
dec
and
jo
std
mov
xor
mov
test
jo
stos
data16
ds
dec
test
cmps
pop
shl
adc
mov
mov
mov
(bad)
or
pop
and
aas
cmps
aas
and
lods
mov
and
add
ret
std
xchg
sahf
iret
das
jbe
sti
mov
rol
enter
rol
addr16
out
jmp
arpl
(bad)
xchg
push
xchg
call
pop
mov
adc
push
jmp
push
cwde
sbb
gs
mov
mov
clc
int3
lea
and
out
stos
scas
ret
cmp
inc
xchg
shl
test
clc
mov
pop
push
mov
and
and
inc
adc
ret
push
push
jp
out
jmp
std
cmp
sub
dec
mov
js
jmp
push
test
mov
dec
jno
pop
loopne
mov
mov
push
mov
test
data16
aas
xor
jb
adc
data16
out
sbb
mov
daa
push
push
lods
push
xor
idiv
les
stos
mov
sbb
jmp
retf
out
mov
(bad)
jmp
mov
rcl
and
mov
gs
outs
(bad)
mov
mov
and
mov
js
jne
cmp
les
sar
arpl
or
pop
jge
fbstp
ja
iret
(bad)
cli
mov
cmps
dec
into
fcmovb
dec
daa
xor
mov
int
ret
ja
dec
or
rcr
aaa
mov
jnp
mov
push
mov
lock
and
out
push
push
lods
(bad)
pushf
dec
in
fcmove
dec
and
xchg
call
fsub
(bad)
inc
jo
sub
pop
sub
inc
aas
popf
sahf
in
inc
sbb
not
cwde
lock
jns
xchg
push
popf
sbb
jmp
sbb
fisttp
cs
out
out
pusha
jl
inc
ret
cmps
inc
pop
cmc
(bad)
mov
int
je
xchg
sbb
jl
pusha
sbb
xchg
ins
jno
pop
cli
retf
and
data16
je
pop
adc
lock
mov
jo
and
rcr
pop
pop
adc
loop
hlt
add
call
add
or
aad
movs
repnz
cmp
mov
fcom
xchg
push
sub
lds
push
mov
xor
adc
push
mov
call
sbb
jb
sub
clc
(bad)
xor
xchg
xor
neg
cmp
add
mov
sbb
sub
imul
add
xchg
mov
lds
out
scas
dec
aam
out
scas
mov
js
int
or
scas
pop
xor
cmp
rcl
adc
cmp
leave
mov
sahf
dec
rol
jne
(bad)
cmp
xor
inc
pop
inc
popa
xor
mov
jge
sub
sub
addr16
mov
lahf
and
dec
xchg
mov
into
pop
fmul
mov
std
adc
aad
dec
xor
cmp
imul
lods
jecxz
jecxz
cmc
dec
mov
aad
aaa
dec
and
and
mov
arpl
cmp
sub
lahf
cmps
ret
inc
cs
(bad)
and
push
xchg
add
xchg
mov
cmp
mov
pop
dec
cmp
test
jmp
shr
rol
adc
call
pusha
jmp
mov
das
mov
add
fwait
std
mov
xabort
pop
pop
js
pop
mov
mov
aas
mov
aaa
push
aaa
pop
sub
stc
xor
in
dec
cmp
jge
mov
das
pusha
inc
push
xchg
lds
xor
push
xchg
inc
xchg
fdiv
jne
cld
pop
pop
aad
cmp
and
gs
(bad)
sbb
inc
add
sub
mov
xchg
cmp
cmp
push
lea
or
in
imul
idiv
pop
adc
enter
in
test
xor
mov
pop
js
lods
fstp
adc
add
dec
aaa
jl
stc
aam
test
xchg
cs
adc
ret
mov
mov
pop
clc
(bad)
(bad)
in
iret
out
or
ror
dec
sbb
mov
mov
int3
outs
clc
fwait
cli
pop
and
mov
cmc
adc
stc
jnp
push
ja
and
aas
mov
or
ficom
in
les
push
hlt
sbb
push
xchg
pusha
xchg
icebp
loop
xor
pusha
inc
into
sbb
lahf
sbb
xlat
int3
mov
in
mov
lods
je
fiadd
pop
pop
mov
lahf
stc
xchg
ss
sbb
xchg
out
xchg
mov
movs
dec
sbb
int3
and
mov
cwde
fmul
call
loopne
imul
adc
and
dec
ret
(bad)
into
fs
bextr
mov
(bad)
outs
jb
cmp
jmp
rcr
pop
and
sbb
or
inc
out
add
js
aad
sub
xor
das
retf
pop
xchg
push
test
cmp
jl
jno
in
cmp
cwde
xchg
or
sub
sti
inc
ficom
out
fistp
adc
in
data16
lods
sbb
(bad)
inc
sbb
dec
adc
aaa
mov
ja
push
inc
adc
in
inc
jno
jge
mov
cmp
data16
leave
es
pandn
es
jecxz
cmp
inc
mov
mov
pushf
push
sti
cld
aas
and
test
adc
add
movs
adc
out
xor
cmp
dec
mov
cmp
cmps
hlt
sbb
add
mov
adc
cmc
ds
clc
loopne
jb
cdq
or
xchg
shl
or
add
popf
push
push
pop
scas
mov
fiadd
xchg
xor
prefetcht2
imul
adc
cmp
add
or
adc
jb
repz
lahf
fcmovnbe
add
inc
retf
add
push
dec
pushf
pop
sbb
xor
or
(bad)
repz
push
out
loopne
repz
push
out
cdq
and
pop
sbb
jmp
and
sub
xor
test
stc
add
imul
mov
push
inc
add
sti
cld
loopne
repz
mov
sub
rol
mov
btc
repnz
xor
in
mov
in
fwait
cmp
mov
pusha
call
jp
sub
out
aas
pushf
xor
and
icebp
out
jo
xor
cmp
fstp
mov
and
push
rcr
mov
ins
into
and
jp
mov
lods
mov
call
shl
rcr
ja
mov
stc
hlt
ins
popf
jmp
sbb
sbb
mov
popa
push
movaps
or
(bad)
shr
xor
outs
cld
ret
in
sub
gs
mov
pop
hlt
sbb
jnp
sub
and
cmp
les
lods
xchg
(bad)
cmp
cmp
cmp
jl
aaa
(bad)
iret
lea
xor
xchg
retf
daa
int
sub
sahf
mov
sbb
push
adc
pop
inc
cmp
out
(bad)
mov
out
inc
lock
sbb
xor
or
push
dec
xor
scas
add
daa
clc
add
xchg
out
unpckhps
jg
popa
xchg
dec
cdq
(bad)
clc
jmp
ret
out
dec
add
ja
mov
out
pusha
and
or
(bad)
(bad)
cmc
cmp
int
sti
movs
add
into
mov
loope
jge
add
ja
addr16
test
cmp
outs
aas
and
xor
out
adc
jno
test
pop
add
repz
mov
xchg
inc
lea
sub
retf
pop
(bad)
in
fistp
mov
xor
shl
pop
in
pop
movs
mov
mov
xchg
cmps
addr16
popa
popf
dec
in
xor
mov
aad
addr16
rol
hlt
adc
das
std
sub
mov
fisubr
jg
mov
pop
aas
jmp
aaa
jge
and
inc
jle
iret
inc
adc
dec
fimul
xor
cwde
pop
mov
mov
(bad)
pop
xchg
repnz
sbb
fisttp
(bad)
mov
cmp
test
or
ins
jb
loopne
ja
xor
mov
mov
lea
pusha
dec
repz
inc
nop
jl
push
pop
mov
les
inc
fidiv
aaa
cmps
jnp
cmp
out
fstp
lods
idiv
push
push
inc
cdq
inc
add
xchg
js
add
nop
push
shl
fmul
mov
jl
xor
adc
push
or
lea
sub
movnti
cmc
dec
scas
push
push
mov
mov
cmp
fst
jne
xor
jne
mov
lds
xchg
pop
in
xchg
mov
mov
push
mov
add
fadd
mov
adc
jle
cwde
pop
adc
(bad)
lea
jg
outs
popa
outs
mov
(bad)
out
mov
push
pop
cs
sti
add
jns
sar
test
fisttp
outs
cmps
inc
mov
inc
or
xor
dec
mov
mov
bound
mov
xchg
mov
pop
dec
mov
xchg
pushf
pop
adc
ja
xchg
(bad)
fisub
cld
cmp
aad
std
enter
out
in
jo
xor
xor
or
arpl
test
fstp
mov
adc
movs
(bad)
or
ret
ins
xchg
imul
mov
mov
test
mov
bound
cli
repnz
aam
cmp
and
or
jmp
sub
repnz
cmps
push
adc
nop
mov
pop
aaa
test
push
fadd
js
in
jg
in
lahf
(bad)
pop
(bad)
adc
hlt
mov
ret
pop
pusha
sbb
push
sub
push
imul
stos
push
dec
adc
shl
push
div
fs
sub
(bad)
adc
mov
xchg
xlat
sbb
sub
loop
in
mov
add
jo
cmps
ins
aam
cmps
push
loop
mov
cmp
in
outs
mov
pop
(bad)
xchg
or
jmp
in
sbb
xor
push
cmove
test
sub
(bad)
enter
aas
jae
cmp
inc
mov
adc
pushf
ja
inc
mov
cmp
adc
hlt
inc
ss
mov
js
mov
pop
push
jo
push
retf
stos
push
xlat
fistp
sbb
fistp
and
enter
out
xor
ja
xor
or
clc
hlt
push
jb
add
pop
test
(bad)
in
push
mov
sub
dec
daa
xchg
pop
das
push
sbb
push
test
dec
jno
mov
cmp
sub
stc
or
(bad)
repz
push
scas
imul
in
xchg
inc
imul
fs
test
(bad)
iret
add
jge
lds
fcom
jg
mov
call
xor
add
jmp
ins
loopne
and
(bad)
push
out
rol
inc
pop
gs
inc
bnd
mov
mov
and
das
data16
fwait
xor
inc
mov
mov
sub
aas
sub
jmp
mov
scas
and
add
ss
xchg
stc
lds
mov
jecxz
push
loope
adc
mov
xchg
cmp
and
push
pop
push
mov
or
sbb
and
test
out
data16
xchg
dec
and
aas
adc
ins
sbb
xchg
lea
add
or
mov
(bad)
inc
inc
ins
cmp
add
iret
mov
pushf
mov
jns
or
das
ins
enter
mov
xor
fs
fild
lahf
mov
xlat
jns
inc
outs
sub
mov
lea
loop
dec
or
in
jge
pop
adc
lods
test
les
mov
jmp
lds
pushf
fst
push
xor
xor
mov
jle
call
mov
ret
cmp
popa
pop
movs
push
cld
mov
fs
stos
retf
push
inc
inc
xchg
jmp
or
sub
scas
(bad)
mov
cmps
push
cmp
add
mov
mov
arpl
enter
or
daa
fwait
movs
addr16
push
and
inc
xchg
sub
into
xor
dec
das
dec
es
repnz
mov
xchg
jmp
cmp
adc
and
leave
(bad)
test
mov
jb
dec
sub
ds
mov
fs
dec
mov
lds
and
ds
xchg
dec
pop
mov
imul
push
(bad)
sbb
dec
shr
stos
push
(bad)
xor
cli
inc
fld
daa
sub
data16
mov
sar
das
cmp
retf
xor
push
mov
cld
js
stc
jnp
add
mov
pop
outs
pushf
pusha
enter
int3
dec
gs
mov
lds
xor
in
std
push
jl
movs
xor
(bad)
and
mov
cdq
xor
cmps
arpl
es
out
add
fild
dec
jle
(bad)
fs
gs
pop
in
and
add
je
xor
fs
mov
cmps
ret
ss
loopne
push
xor
pop
sbb
pop
ds
adc
jl
or
mov
push
xrelease
mov
cdq
scas
xor
dec
lds
xor
pop
sub
xor
in
shr
cmp
cli
jge
sbb
mov
mov
pushf
(bad)
xlat
aaa
mov
stos
loop
push
sar
loope
jg
adc
leave
sbb
mov
test
aam
jno
adc
jg
cmps
or
xchg
xchg
jle
add
xor
adc
inc
jbe
mov
(bad)
ficom
mov
cwde
rcl
push
loope
aam
add
sub
dec
push
arpl
mov
push
nop
fild
loop
mov
xchg
sub
sbb
(bad)
in
fwait
xor
sbb
push
jecxz
dec
ja
sbb
jl
sbb
and
jno
jnp
das
xor
xor
dec
and
dec
lahf
mov
xor
mov
in
out
ret
pop
into
aaa
sub
lds
xchg
mov
js
and
mov
push
adc
pop
add
cmc
mov
mov
dec
xor
int
ins
aaa
pushf
shl
rcr
call
mul
mov
add
mov
xor
sub
inc
sbb
adc
es
mov
clts
scas
jne
pusha
xchg
pop
xchg
cld
pushf
add
xchg
(bad)
cli
jle
aaa
loopne
sub
rdtsc
mov
faddp
mov
out
(bad)
pop
movs
ss
mov
lods
fisubr
xor
jmp
mov
jp
test
ret
add
repz
imul
mov
push
fwait
cmc
mov
aaa
movs
fucomi
mov
psubq
test
out
jae
xchg
inc
std
and
test
out
imul
or
gs
jmp
pop
cmp
hlt
outs
not
cmp
adc
sbb
test
retf
lds
push
xchg
ja
mov
jb
jb
out
push
cmp
call
pop
xor
sbb
mov
fcmovu
cwde
sbb
mov
add
inc
mov
xchg
push
sahf
jmp
(bad)
or
mov
loope
jg
pop
dec
push
xchg
inc
(bad)
dec
xchg
mov
aaa
rcr
dec
gs
or
push
dec
sub
cs
inc
pusha
femms
push
mov
sti
leave
xor
jmp
and
js
cmp
pop
lods
mov
imul
addr16
cs
icebp
jp
push
out
call
mov
jno
pop
imul
add
les
xchg
fs
mov
mov
pushf
sbb
pop
jno
cmp
mov
jnp
cld
or
shl
push
test
add
add
add
inc
inc
jg
addr16
mov
mov
cld
pop
xchg
int
push
xchg
arpl
cmc
bound
mov
fst
mov
xor
add
cld
movs
push
js
pop
and
mov
addr16
(bad)
cmps
adc
pusha
push
pop
pop
shr
xchg
int
fs
adc
cmp
into
lods
inc
or
leave
aam
cdq
stos
bound
loopne
shr
leave
cwde
inc
imul
pop
das
or
mov
sub
sbb
cmp
push
cmp
(bad)
movs
faddp
jle
add
cmps
ret
xor
push
aad
or
mov
mov
cmps
(bad)
fisubr
nop
xor
mov
sbb
mov
retf
jno
lds
movs
fimul
aam
ret
pop
push
shl
mov
jmp
add
and
je
es
dec
jns
(bad)
(bad)
cli
add
mov
sbb
sti
call
sti
sub
out
xchg
mov
stos
in
fisubr
(bad)
cwde
xor
xchg
pop
and
mov
xchg
cmps
inc
push
cmp
pop
fisub
movs
dec
push
daa
push
xchg
jl
cmp
stc
out
and
fcomp
in
sbb
in
sbb
shr
pop
adc
cwde
mov
inc
add
inc
loope
sbb
cmp
inc
cmps
das
pop
dec
les
or
repz
sub
dec
fwait
inc
ret
pop
rol
lar
rcl
stc
das
stos
hlt
pop
icebp
div
idiv
inc
adc
pop
mov
inc
jp
xor
ret
sti
shl
test
fstp
or
pop
sub
cld
ror
add
gs
inc
test
jo
movs
mov
inc
cmps
mov
xchg
retf
xor
jns
mov
mov
or
ja
mov
(bad)
aaa
xchg
test
clc
xor
cli
cmp
pop
shl
scas
push
sti
ror
aas
adc
and
ret
xchg
popf
jecxz
lods
lods
idiv
mov
push
icebp
push
fild
fisttp
stos
and
xor
or
(bad)
add
push
push
mov
fst
inc
ret
xor
pop
mov
rcl
xor
mov
add
in
sub
sub
ds
int
in
lea
mov
fxch
aad
and
in
std
sbb
xchg
mov
test
jle
mov
jae
adc
iret
stos
inc
js
fst
fdivp
div
mov
daa
movs
push
ret
adc
test
ficomp
mov
dec
repnz
and
call
adc
aaa
jns
pusha
mov
js
popa
and
loopne
mov
adc
cmovns
xor
pop
in
mov
daa
outs
mov
out
js
push
fwait
jmp
stc
fdivr
aas
pushf
push
pusha
dec
lea
nop
mov
mov
icebp
les
test
jo
pop
and
loop
pop
leave
das
xchg
add
movs
fs
fwait
call
sbb
cs
mov
jmp
hlt
leave
xor
pop
jmp
jg
cmp
stos
in
loop
push
(bad)
or
(bad)
pop
and
push
adc
ret
xor
loope
cwde
lock
sub
inc
adc
sub
in
cmps
and
ret
push
ja
out
xchg
push
cmp
stos
cmp
mov
out
retf
lock
mov
xor
inc
xchg
pop
sbb
push
fst
xlat
xchg
and
fdiv
and
xor
sub
popa
dec
sbb
movs
xor
fmul
aaa
out
ja
dec
jbe
dec
jb
mov
scas
(bad)
mov
push
(bad)
(bad)
push
fidiv
(bad)
popa
bnd
push
jnp
xchg
sbb
bound
push
repnz
cs
jno
mov
pop
push
sbb
aam
mov
pop
jno
push
in
retf
jno
jns
ss
inc
jbe
cwde
mov
add
xchg
mov
jl
dec
lds
push
int3
xchg
add
inc
inc
retf
add
jnp
into
out
(bad)
(bad)
push
(bad)
mov
popf
shl
pop
xor
fstp
mov
pop
call
mov
push
jae
ds
mov
inc
fcomp
or
sub
mov
inc
pop
or
mov
mov
sbb
sahf
mov
lods
cmps
das
movs
(bad)
adc
mov
int3
jno
jno
ds
pop
dec
sub
push
push
add
inc
imul
inc
push
mov
fs
jbe
adc
icebp
and
mov
inc
aaa
clc
mov
movs
int
stos
ror
xlat
divps
fstp
fdivp
push
jb
sbb
lea
shr
xchg
gs
test
(bad)
(bad)
adc
cmp
out
sar
xchg
push
sar
mov
dec
fldcw
sbb
imul
push
in
lahf
sti
je
sub
std
stos
and
cmc
lds
push
bsr
xor
cmp
and
div
ins
sbb
adc
ds
lock
mov
cwde
cld
call
cli
sub
inc
and
cs
xchg
jge
test
pushf
out
sbb
cli
cmp
push
dec
out
lods
std
push
pop
imul
mov
arpl
or
and
lods
xchg
imul
test
imul
pop
test
jb
add
dec
push
rol
cmps
dec
push
and
in
loope
fcos
loope
inc
mov
sub
mov
rcr
call
xor
hlt
test
sbb
or
sub
xor
stc
add
(bad)
xor
mov
dec
mov
xchg
pop
adc
or
loope
inc
push
imul
aam
stc
hlt
cdq
pop
adc
cmc
fwait
shl
jle
fcomp
sub
and
outs
fcomi
inc
inc
jg
into
leave
push
popa
jge
fst
mov
repnz
js
(bad)
push
into
jbe
imul
jge
adc
mov
in
stos
xor
cdq
int
add
je
shl
in
or
push
cmp
dec
add
mov
ds
push
cmp
je
mov
push
jae
dec
sub
sar
in
and
sub
pop
scas
jle
adc
mov
pop
xchg
inc
sbb
pop
pop
test
or
in
iret
rol
adc
cmps
sti
sbb
mov
push
test
and
(bad)
jmp
and
scas
fld
test
add
mov
push
pop
or
cmp
mov
sbb
icebp
cmps
push
mov
les
add
repnz
or
xor
dec
pop
stos
jb
pushf
mov
or
adc
push
cmps
and
mov
inc
cmp
push
in
inc
cli
movs
ja
dec
jno
cwde
clc
xor
into
jp
push
add
push
cmp
call
hlt
hlt
repnz
fisttp
jl
mov
in
push
push
clc
out
scas
mov
mov
cdq
or
aad
jp
mov
mov
sub
js
stc
jmp
add
push
lods
dec
fild
xchg
pushf
pop
js
push
test
adc
mov
jae
mov
or
push
ja
addr16
jp
xchg
popf
sub
jmp
jne
sbb
mov
aas
test
retf
dec
lahf
jmp
leave
sub
aas
arpl
lods
outs
inc
xor
bound
cmps
aad
or
popa
lods
js
bound
cmps
test
pop
mul
data16
push
cmc
push
dec
aaa
cwde
jle
jne
xor
(bad)
jg
and
popf
test
cmp
mov
sub
add
push
jo
push
fcomip
pop
outs
aad
inc
pusha
adc
in
mov
(bad)
std
fstp
pop
fist
and
aas
mov
add
add
inc
shr
push
test
aam
cmp
std
sbb
adc
add
dec
inc
sbb
jle
fld
into
fisubr
out
or
sbb
pop
es
repnz
mov
dec
sub
dec
int3
adc
xor
std
aas
js
mov
repz
dec
cmp
or
pop
inc
sar
mov
and
mov
mov
test
jbe
mov
sub
ins
sbb
in
inc
(bad)
cmps
add
cmp
daa
(bad)
pop
not
in
inc
aaa
fbld
std
cmp
aam
addr16
cmp
not
jecxz
jb
add
add
mov
popf
jle
pop
dec
adc
es
add
imul
inc
push
rcl
sub
cmps
push
fst
mov
xchg
mov
clc
popa
cmps
adc
outs
inc
and
fnstcw
jmp
hlt
fist
cli
pusha
xor
or
or
ja
fucomip
test
cmps
outs
mov
sub
cmp
addr16
ds
fld
lock
lahf
mov
aaa
enter
xchg
ret
ret
fs
test
dec
lahf
sbb
adc
idiv
stos
pop
outs
fwait
push
sbb
xor
into
adc
mov
clc
fadd
sbb
sbb
in
add
jo
popa
stos
loopne
jb
and
arpl
(bad)
jbe
aad
push
push
sub
push
outs
mov
add
cli
jmp
inc
ins
sub
das
mov
pop
sub
pop
mov
inc
mov
cld
bound
or
jge
sub
jo
mov
mov
in
pop
dec
jp
mov
cmpxchg
loope
jecxz
lds
inc
jmp
xchg
sub
sbb
xor
mov
mov
push
xchg
xor
sub
inc
add
xor
inc
jmp
jb
sub
or
xor
fucomip
add
ins
jo
jle
ja
cmp
aam
ror
xlat
nop
mov
jbe
pop
mov
mov
fiadd
ins
inc
add
out
cmp
shr
or
aam
push
inc
clc
idiv
inc
inc
fld
mov
sbb
nop
fdivr
ds
dec
mov
test
je
movs
adc
push
dec
dec
lahf
xor
aas
loopne
jl
das
lods
pop
pop
inc
add
ss
mov
retfw
adc
scas
(bad)
sbb
sti
cmp
test
cmp
xchg
js
imul
les
(bad)
neg
mov
pop
sar
pop
mov
in
jnp
in
retf
outs
inc
das
data16
data16
pop
adc
arpl
lock
cmp
pop
dec
push
pushf
add
jge
mov
std
jno
push
popf
cwde
push
jle
lock
push
call
in
jmp
movs
cmp
fisubr
rcl
imul
inc
or
jl
aas
aas
mov
ds
pop
add
cld
scas
mov
add
scas
jmp
inc
sbb
mov
mov
rol
mov
cdq
out
mov
cmp
test
sbb
and
jno
fist
inc
mov
xlat
adc
inc
jb
cmps
adc
inc
retf
pop
cmp
xor
pop
retf
rcr
loopne
imul
mov
jmp
mov
call
lods
cmps
scas
outs
mov
add
or
mov
adc
or
pushf
and
xchg
or
je
mov
cmp
jae
data16
mov
sbb
in
mov
mov
pop
outs
dec
xor
jp
push
jle
xor
enter
mov
mov
div
add
jp
inc
pop
dec
mov
xor
inc
sbb
das
loop
mov
jmp
out
jmp
loop
leave
sub
in
(bad)
fcmovnbe
mov
jmp
push
jmp
xchg
mov
pusha
movs
cld
aad
push
hlt
or
inc
mov
sbb
cs
fst
data16
sbb
test
mov
jmp
daa
push
and
mov
(bad)
aaa
push
mov
xchg
jp
cmp
imul
mov
sbb
xlat
mov
popa
or
mov
pop
stos
xor
rol
cmc
jle
cmp
fwait
loopne
push
xchg
in
fsubr
adc
ret
and
(bad)
sub
mov
and
dec
ret
mov
retf
xchg
jmp
stc
cmp
fisttp
dec
jle
cmp
loopne
test
lock
dec
lds
dec
popf
mov
mov
(bad)
sti
test
fst
mov
ja
pusha
outs
jp
add
dec
popa
out
mov
outs
jmp
mov
out
adc
(bad)
jae
add
adc
sti
scas
and
sar
mov
jp
fcomp
es
inc
adc
test
test
jl
and
int3
lahf
inc
jp
xchg
inc
pushf
dec
and
in
mov
xchg
pop
rol
adc
push
cmc
daa
jmp
mov
sub
add
(bad)
out
mov
popf
mov
push
ds
daa
dec
or
push
mov
xchg
(bad)
loope
loope
outs
sbb
mov
mov
icebp
push
or
dec
adc
xchg
mov
mov
cmp
mov
leave
push
stos
jp
sar
push
(bad)
jno
ret
imul
xchg
sahf
es
stos
fcmovnu
cli
test
loopne
cmps
cmp
push
popf
popa
sub
in
dec
and
xor
jle
sub
jg
mov
loope
cmps
scas
and
inc
cs
xor
xchg
cmp
ror
jnp
cmp
dec
jmp
(bad)
and
adc
push
or
nop
dec
dec
jmp
mov
(bad)
mov
nop
adc
cmp
addr16
push
sbb
xor
stc
movs
mov
dec
adc
xor
call
dec
mov
stos
jg
adc
shl
mov
push
mov
xor
jmp
mov
loope
xchg
addr16
add
mov
pop
call
push
out
rcr
stos
pushf
jo
xchg
mov
ja
mov
inc
ds
shl
test
sub
(bad)
mov
inc
shl
ficom
cs
inc
and
(bad)
outs
xor
aas
leave
fisub
sbb
push
enter
sti
packuswb
ins
sbb
inc
push
fiadd
fistp
xchg
mov
hlt
jb
sar
dec
cmp
adc
out
add
clc
out
sysenter
imul
ret
bound
xchg
inc
sbb
cmp
push
inc
nop
adc
fucom
inc
sub
or
out
(bad)
test
sbb
add
test
adc
in
mov
fdivrp
mov
es
shl
xor
mov
js
sub
popa
in
arpl
mov
sub
fld
push
mov
popf
gs
pusha
dec
int
jmp
inc
dec
shl
jno
push
stos
or
xchg
aad
gs
dec
sub
adc
push
jle
stos
mov
gs
mov
or
shl
jmp
mov
(bad)
add
push
jle
xor
jb
sbb
jle
into
dec
add
loope
das
(bad)
shl
pop
xor
dec
sub
inc
cdq
fwait
push
xor
sbb
fdiv
sub
ds
push
fild
aaa
push
xor
loope
mov
in
mov
push
pop
mov
outs
jecxz
or
mov
jnp
fst
lods
(bad)
add
push
mov
cdq
sbb
jl
add
out
sub
(bad)
adc
cmc
loop
xchg
fadd
add
rol
dec
lea
out
mov
iret
ins
fidivr
test
mov
pop
stos
cmp
test
fstp
imul
sbb
xlat
outs
dec
in
mov
scas
mov
xor
push
fnstsw
nop
rcl
dec
pop
and
mov
and
rcl
adc
mov
or
dec
inc
mov
push
data16
inc
mov
mov
cdq
popf
dec
add
push
gs
(bad)
mov
shl
popf
mov
pop
lods
xchg
daa
cmc
in
ja
stos
xchg
out
dec
xchg
mov
loopne
mov
mov
push
and
mov
rol
push
xchg
lds
mov
aaa
push
movs
xchg
neg
inc
aaa
lahf
or
and
mov
dec
rcr
fwait
(bad)
cdq
xor
loopne
pop
and
(bad)
mov
or
mov
and
(bad)
cmc
pop
add
ja
popf
das
jp
out
or
mov
fimul
loop
movs
call
mov
sub
adc
lods
out
mov
pushf
or
xor
inc
adc
jno
mov
ret
mov
das
fist
sub
sub
test
push
or
cmc
mov
test
jp
dec
and
cmp
xchg
repnz
enter
fdiv
push
adc
inc
inc
pop
dec
mov
adc
fld
mov
dec
retf
ins
dec
pop
outs
xor
pop
fsubr
mov
mov
retf
jle
imul
mov
push
xchg
test
push
movs
xchg
xchg
js
ja
adc
aam
mov
or
int
movs
retf
les
push
scas
fild
mov
nop
dec
cmp
inc
add
mov
out
or
mov
loop
jmp
mov
mov
lea
(bad)
aas
sahf
inc
retf
cmp
lods
js
mov
adc
in
loope
lods
shr
or
cmc
add
sbb
rcl
rol
pop
mov
mov
push
(bad)
pop
mov
out
jb
aas
push
inc
and
aas
sub
mov
sahf
leave
lods
pushf
movs
clc
test
mov
test
cld
int
ins
jmp
pop
clc
test
movs
inc
push
jecxz
inc
(bad)
mov
mov
sahf
jo
outs
cmp
xchg
and
inc
fist
push
pushf
or
xor
std
mov
int3
test
cli
xor
push
(bad)
das
mov
aaa
and
cwde
int3
cmp
aad
cmp
mov
popf
test
adc
shr
push
pop
mov
inc
pusha
fbstp
stos
ret
lods
jo
mov
pusha
shl
lea
(bad)
ins
and
sbb
gs
test
xor
xchg
jp
jmp
inc
push
add
mov
fidiv
(bad)
pop
push
in
outs
int3
pop
mov
jae
xor
imul
pop
bound
loope
push
cmp
jnp
add
mov
dec
ss
aaa
mov
push
pavgw
adc
or
in
loope
pop
jbe
mov
push
aad
sub
jae
dec
mov
sbb
cwde
inc
aas
fdiv
jmp
aas
cli
call
ds
mov
int3
pop
jbe
inc
sub
xlat
push
aaa
dec
popa
movs
add
loop
dec
push
push
(bad)
push
jno
xor
add
ds
dec
push
mov
mov
dec
and
stc
add
ret
mov
cmps
jle
push
inc
pop
fpatan
jmp
jmp
dec
daa
out
mov
sar
xlat
adc
adc
mov
in
and
(bad)
popa
cmc
outs
and
dec
cmp
mov
inc
cdq
sbb
dec
push
pop
push
push
push
pop
test
movs
jp
pop
addr16
adc
jg
and
popf
in
rcl
es
imul
sub
leave
cmp
jle
pop
xchg
cli
fldenv
mov
test
ins
add
je
jmp
in
xchg
fucom
mov
retf
pushf
and
or
and
sbb
jbe
aas
lds
nop
mov
arpl
out
or
outs
int3
mov
pop
sub
(bad)
cmp
mov
push
or
pop
pop
das
inc
mov
dec
fcomp
mov
fisttp
ss
das
add
xchg
fidiv
add
push
rcl
jne
sti
cmp
mov
sub
lea
adc
movs
mov
jbe
popf
pushf
inc
dec
ret
ret
jo
(bad)
call
or
cmp
aaa
pop
retf
push
std
cdq
int3
movs
sbb
test
mov
addr16
into
inc
xchg
push
nop
or
in
jbe
mov
dec
xchg
inc
or
in
pop
les
sbb
or
test
into
inc
inc
test
loopne
neg
inc
pop
mov
imul
cmps
cmps
adc
xor
loope
and
out
inc
add
or
xchg
add
adc
push
std
les
add
ret
mov
sbb
xor
sub
cmps
push
iret
dec
xor
adc
out
scas
fisttp
cdq
cmc
ins
sbb
mov
scas
mov
(bad)
into
jge
loope
mov
aas
lahf
cdq
xor
sub
cmp
xchg
aaa
mov
xchg
cmp
push
mov
and
repnz
lods
ins
xchg
loop
into
dec
repnz
sub
outs
mov
adc
test
(bad)
in
js
xor
dec
lahf
inc
push
(bad)
iret
arpl
mov
adc
test
mov
sub
pop
sbb
push
mov
mov
adc
leave
mov
rcl
push
sub
xor
push
mov
cmp
and
cmp
mov
in
rsqrtps
sub
add
cmps
adc
mov
clc
or
push
pop
fs
retf
ja
xor
(bad)
jmp
shr
sbb
(bad)
aam
mov
(bad)
jmp
(bad)
jmp
ret
dec
push
push
sbb
fistp
add
push
mov
jo
fadd
xchg
call
lds
lahf
push
cli
arpl
ins
inc
mov
mov
cmp
jmp
xchg
gs
lock
push
out
mov
jnp
fdiv
inc
and
mov
xor
in
cmp
sub
mov
mov
fwait
and
jnp
ret
xchg
mov
and
ror
adc
scas
das
bound
popf
jo
cmp
into
aam
ja
gs
dec
fld
(bad)
cld
cmp
sahf
outs
scas
add
scas
mov
xor
jnp
pop
cmp
ret
cwde
mov
cld
out
jle
jb
neg
jl
rcl
outs
pop
pop
sub
out
cmc
mov
adc
das
add
ins
sbb
dec
(bad)
cld
mov
xlat
add
push
stos
pop
aad
mov
xor
push
mov
inc
int3
sub
mov
or
in
mov
dec
int
or
test
adc
or
add
add
imul
mov
xchg
fs
jmp
ss
jge
xor
or
jns
inc
pop
aas
jle
jmp
stos
mov
repnz
dec
jo
adc
push
push
mov
mov
cmp
rol
add
loope
mov
add
js
cdq
out
addr16
and
mov
in
mov
imul
aam
dec
int
dec
repnz
jl
das
outs
test
or
add
jns
sahf
xor
xor
dec
shl
lds
dec
dec
inc
mov
sti
popa
inc
and
pusha
adc
in
cmps
or
daa
and
mov
and
(bad)
cwde
(bad)
sub
mov
sbb
rol
(bad)
xor
cmp
mov
imul
test
and
inc
outs
adc
leave
std
pop
adc
mov
push
hlt
fwait
js
jl
mov
sub
dec
push
xchg
ret
sbb
sub
leave
adc
dec
hlt
add
dec
mov
sbb
mov
mov
(bad)
mov
mov
and
call
cld
cmp
and
sbb
jge
es
repnz
xchg
fnstcw
xor
dec
stc
dec
xchg
dec
call
int
push
loope
retf
push
js
adc
jp
xor
loopne
pop
hlt
mov
mov
pop
nop
adc
inc
cli
(bad)
jnp
push
mov
mov
test
in
pop
mov
data16
pop
outs
add
pop
adc
cmp
sub
icebp
jns
or
xchg
aas
mov
fiadd
fcomi
jno
scas
mov
adc
popa
sbb
push
imul
cmc
push
mov
pop
xchg
and
inc
jnp
or
pop
push
pop
jo
out
mov
vmptrst
shl
fld
inc
test
into
jmp
rol
mov
arpl
xor
add
mov
jg
or
xor
fild
in
sbb
pusha
cmc
retf
dec
mov
pop
pop
dec
sub
jmp
shl
push
mov
test
sti
jno
outs
xchg
and
mov
(bad)
call
movs
std
adc
jmp
mov
inc
in
mov
or
scas
push
inc
sahf
cwde
loop
int
push
mov
add
and
add
das
clc
cdq
out
(bad)
scas
mov
aaa
jmp
mov
out
ror
aad
jnp
sub
cmp
jg
inc
mul
sbb
in
pop
bound
cmp
and
jl
inc
xchg
lea
mov
dec
(bad)
xor
push
cmp
adc
dec
btr
push
dec
add
test
cwde
mov
shl
mov
(bad)
jle
xor
dec
jg
push
test
push
jb
cmc
loop
fcomp
lahf
and
cmp
stos
iret
nop
test
fist
ror
cmc
and
ja
pop
popf
ret
inc
pop
lock
sbb
add
add
mov
inc
pop
ja
adc
retf
(bad)
es
imul
mov
out
cmp
vunpckhps
or
adc
ret
jg
mov
nop
add
cmp
cmc
out
add
mov
jmp
cmp
loop
std
sub
daa
iret
mov
stos
jbe
and
repnz
cmps
mov
dec
loope
loopne
jge
fldenv
jle
rol
cli
jmp
xchg
cmp
pop
mov
into
pop
shl
add
loopne
mov
cmp
jo
mov
in
sahf
sbb
sbb
push
enter
adc
jmp
lea
out
sbb
ret
cdq
addr16
mov
adc
adc
adc
jo
ret
jmp
cmps
fcmovnu
inc
lahf
int3
mov
add
daa
call
test
cmp
jmp
dec
cmp
sub
jmp
jnp
add
and
lds
pop
adc
adc
add
adc
gs
dec
mov
leave
stc
out
nop
xchg
scas
cmps
mov
(bad)
loop
cdq
mov
test
out
(bad)
jge
inc
xor
stos
inc
pusha
sub
rcl
imul
and
jae
mov
jmp
mov
mov
pop
imul
gs
xchg
daa
ins
pop
mov
out
add
bound
mov
test
mov
jmp
ja
jb
mov
retf
sbb
popf
sub
outs
mov
jae
add
dec
hlt
cmps
push
imul
iret
adc
jbe
inc
movs
fild
xlat
push
(bad)
fwait
addr16
call
adc
sbb
scas
out
(bad)
stos
push
xor
or
jns
icebp
pop
lods
ret
push
xchg
jl
push
(bad)
shl
repnz
xchg
adc
mov
fwait
pop
dec
clc
or
imul
and
das
sub
jbe
retf
iret
pop
add
mov
sub
or
dec
adc
ins
fwait
adc
sub
jecxz
pop
jb
xchg
adc
imul
repz
fldcw
popa
in
push
xchg
sahf
lea
mov
dec
cmp
ret
mov
stos
jp
mov
jns
dec
js
inc
xchg
mov
push
sub
movs
cmp
ficomp
fbld
in
push
bound
xchg
ins
(bad)
outs
icebp
inc
sbb
das
cmp
ins
repz
jnp
(bad)
mov
cli
mov
cmc
fld
fdivr
or
cmps
push
in
jmp
neg
xor
mov
out
xor
inc
enter
aam
out
cmps
retf
pop
jmp
movs
int
or
mov
lods
stos
and
and
mov
jo
push
lods
mov
mov
push
dec
test
cmps
pop
lods
call
push
dec
scas
nop
mov
push
mov
ins
sbb
stos
ss
jbe
mov
dec
out
lds
jecxz
sbb
push
sub
xchg
and
(bad)
scas
pop
and
bound
pop
mov
dec
jecxz
dec
cmp
inc
jg
retf
popf
push
aam
repnz
rcr
imul
lock
loopne
mov
xor
mov
sbb
out
call
ret
pop
les
sub
call
xchg
sbb
cmp
aam
xchg
cmps
xor
aad
xchg
and
(bad)
(bad)
jmp
(bad)
dec
dec
movs
mov
movs
in
rcl
cmp
sbb
or
sub
pop
or
int3
and
sbb
retf
jne
pop
adc
(bad)
loopne
bound
cmp
dec
sub
xor
inc
cmp
lds
jecxz
retf
pop
mov
sahf
pop
or
inc
dec
pusha
cdq
aam
hlt
mov
lock
cli
pop
popf
ins
inc
or
add
call
call
shl
xor
xor
jo
gs
mov
ds
and
inc
xor
sti
dec
vmwrite
loope
mov
xor
adc
jge
aam
retf
mov
push
mov
mov
fcom
daa
jle
dec
sub
aaa
or
movs
sbb
inc
into
push
stos
fisubr
ret
repnz
sbb
ins
loopne
dec
cmp
pusha
mov
cmp
fucomi
sbb
mov
push
jle
dec
ins
mov
ret
dec
push
mov
in
(bad)
push
push
and
lahf
fwait
jnp
inc
inc
cdq
pop
dec
sti
lds
adc
dec
push
pop
addr16
(bad)
nop
std
test
in
hlt
xchg
dec
shl
pop
sbb
and
inc
cli
xchg
sbb
adc
test
add
add
inc
sbb
sbb
fcomp
inc
add
jno
clc
and
lds
pop
ins
ror
inc
out
in
add
cmp
or
call
shl
xor
pushf
push
dec
mov
adc
in
inc
sahf
popa
(bad)
sub
sub
adc
fdiv
hlt
test
je
test
xor
cs
bound
and
in
pop
mov
xor
dec
cmp
sahf
adc
gs
xchg
repnz
sti
pusha
and
sbb
cmp
xor
iret
out
cmc
jne
mov
ss
(bad)
mov
lods
dec
cdq
jle
push
push
mov
xor
test
loopne
sar
jl
inc
xor
add
sub
dec
mov
lods
mov
(bad)
sbb
sub
adc
sbb
pop
jo
lods
xchg
(bad)
sub
mov
loopne
test
out
xchg
arpl
xchg
sub
mov
sub
or
div
data16
pop
popa
xor
fcmovb
outs
retf
(bad)
out
pusha
into
into
push
popf
adc
scas
and
pop
inc
mov
xchg
aad
popa
xchg
fsub
push
push
mov
nop
pop
loopne
stos
or
repz
xchg
mov
xor
xchg
mov
xchg
mov
fld
inc
adc
mov
lds
hlt
cmp
aas
mov
enter
sub
cmp
adc
ret
dec
fwait
ret
push
(bad)
or
dec
ins
adc
or
mov
pop
push
hlt
mov
push
(bad)
test
inc
popf
push
add
aad
pop
or
xor
xor
jp
rcl
dec
(bad)
sbb
xchg
add
xor
and
add
xchg
shl
mov
or
sub
add
out
lea
outs
pushf
cdq
mov
push
pop
dec
ret
push
pop
mov
loop
cmp
fcmovu
movs
das
mov
xchg
test
lods
mov
mov
icebp
cld
mov
add
mov
std
popa
jle
xor
sbb
xchg
iret
out
fbstp
lods
mov
and
adc
pop
outs
(bad)
rcl
fnstsw
mov
adc
movs
and
mov
or
in
frstor
jno
xchg
mov
pop
ins
iret
add
cs
mov
scas
mov
mov
pop
push
outs
add
xchg
jb
adc
mov
icebp
cmp
cmp
movs
test
mov
xlat
sar
mov
pop
jecxz
les
lods
cmps
xchg
cmps
mov
dec
(bad)
int3
lahf
sbb
loope
dec
movs
ins
repnz
jle
mov
cmp
sahf
mov
mov
push
ror
sbb
pushf
fcom
loope
mov
data16
das
shl
mov
popf
es
sahf
pop
dec
in
add
dec
pop
cmc
and
dec
loope
sub
call
aaa
mov
dec
ret
or
aad
scas
add
pop
test
sbb
sub
and
addr16
lods
mov
adc
mov
scas
lods
sub
jp
imul
inc
das
movs
mov
popa
fsub
or
mov
arpl
call
in
(bad)
pusha
jle
pop
inc
ins
pop
inc
add
loopne
xchg
ficomp
cmp
mov
mov
jl
mov
(bad)
mov
lods
inc
lock
add
pop
and
inc
adc
shl
mov
loope
add
int3
dec
xor
call
jg
je
(bad)
idiv
call
add
out
sub
mov
push
frstor
sub
lock
push
or
cmc
jmp
jecxz
js
sbb
cmp
mov
mov
dec
xchg
jecxz
and
popf
xchg
pop
mov
dec
and
mov
icebp
(bad)
fmul
xor
jns
pop
btc
fmul
sub
adc
clc
jle
and
fwait
(bad)
cs
cmp
lahf
pushf
fimul
shrd
mov
dec
push
stc
xlat
push
push
adc
es
cwde
retf
lahf
pop
fisubr
cli
push
test
sub
(bad)
aam
and
mov
nop
gs
jg
cwde
fisub
sub
(bad)
fnstsw
scas
mov
enter
push
or
pop
pop
mov
adc
mov
cmp
shl
jl
sbb
push
not
and
outs
add
jp
in
out
jge
std
push
sbb
into
fnsave
push
and
fisttp
cld
push
mov
dec
add
jle
jnp
mov
jnp
adc
cmp
cmp
stc
pop
push
xchg
cwde
push
mov
push
lds
and
jno
xor
push
inc
mul
dec
aad
scas
mov
pop
jae
test
sbb
data16
ror
adc
sbb
rol
xor
xor
ins
lock
mov
cmp
lock
imul
scas
dec
jecxz
inc
dec
mov
sbb
pop
inc
ror
and
add
xchg
cmp
clc
ds
xor
cmp
mov
pushf
cmp
mov
test
nop
rcl
xchg
mov
aad
das
in
outs
pushf
div
inc
xchg
loop
cwde
mov
outs
cmp
aas
dec
call
adc
test
cs
rcl
dec
call
mov
cmps
mov
inc
pop
xor
ret
pop
jae
pop
cmps
lods
xchg
call
retf
or
popf
cmc
jne
cmc
rcl
mov
popf
(bad)
aaa
shr
lds
js
push
aad
or
call
jne
out
scas
(bad)
mov
outs
int
iret
sti
push
and
jne
dec
cmp
leave
test
(bad)
loope
pop
ins
daa
xchg
test
push
mov
mov
cmp
mov
sub
daa
stos
shl
pop
cld
push
add
mov
clc
mov
jnp
xchg
xor
in
mov
xchg
inc
loop
pop
pop
(bad)
stos
loopne
jo
pop
mov
mov
pusha
mov
js
(bad)
lahf
retf
repz
sub
push
ja
call
imul
push
pop
jmp
mov
xchg
ja
nop
mov
xchg
mov
push
sub
ror
sub
jmp
test
retf
xchg
and
out
dec
addr16
test
popf
ds
loop
jne
daa
psrad
retf
sub
mov
(bad)
(bad)
jnp
push
lock
add
and
mov
cmp
test
fistp
fs
aam
das
call
push
iret
mov
inc
das
pop
inc
(bad)
outs
imul
lahf
fucomp
push
jg
jb
push
add
movs
call
test
daa
outs
dec
dec
xchg
jo
inc
and
scas
dec
aas
jmp
dec
mov
inc
sbb
(bad)
xor
adc
inc
adc
push
(bad)
push
(bad)
add
out
retf
shl
push
mov
sbb
mov
inc
mov
or
mov
inc
mov
jl
dec
jge
shl
js
mov
cmps
pop
xlat
mov
sub
int
adc
ret
cmp
div
push
pop
adc
xchg
ds
xor
pop
shr
daa
inc
pop
xor
out
pop
mov
(bad)
(bad)
popa
jecxz
cdq
imul
sahf
jmp
enter
add
jo
push
repnz
add
sub
jnp
xchg
loop
je
mov
int3
mov
out
(bad)
jmp
or
jbe
nop
pop
mov
xor
mov
add
push
outs
jb
cmp
cs
jb
out
vandnps
inc
fld
(bad)
jnp
fld
mov
outs
jle
neg
inc
cmp
cmps
mov
addr16
push
ins
cld
test
jl
(bad)
jecxz
mov
pop
mov
push
pop
sub
bound
cwde
test
xchg
cli
lods
dec
repnz
shl
xor
xor
fwait
ins
loopne
hlt
add
push
ds
test
ins
xlat
jecxz
sbb
dec
test
and
retf
cmps
in
call
push
sub
or
leave
loope
test
push
retf
inc
add
sbb
xchg
jae
ds
fmul
rol
jg
shl
mov
jg
xchg
lahf
aad
push
pop
lods
jmp
lds
xchg
xor
loope
jns
and
push
inc
add
das
add
or
ss
adc
push
adc
lock
xchg
push
dec
movs
mov
or
sbb
fcomi
pop
gs
cmps
jb
sub
test
ins
and
out
outs
mov
stos
cmps
test
add
jns
gs
in
(bad)
pop
jp
pop
jae
sahf
test
dec
out
sub
cmp
int
jecxz
mov
mov
xor
retf
retf
(bad)
aam
aad
test
mov
int3
jbe
mov
ins
sub
jge
icebp
jl
xor
lahf
retf
out
js
xor
lea
xchg
(bad)
cwde
dec
jae
dec
xchg
dec
cmp
les
clc
push
imul
mov
xor
pop
pop
xchg
pusha
adc
scas
push
daa
retf
cs
push
ret
inc
sahf
sbb
inc
add
ins
mov
stc
es
cmp
xchg
dec
jmp
mov
loope
mov
push
or
lahf
shr
hlt
dec
or
popa
mov
sbb
popa
jbe
repnz
ins
test
bound
adc
sub
out
in
(bad)
cwde
add
mov
xchg
int
push
std
add
jbe
ret
dec
mov
pushf
pushf
js
sub
jmp
cdq
xchg
push
mov
inc
mov
mov
xor
ror
mov
arpl
xor
ret
xor
pop
dec
cmp
mov
and
dec
retf
mov
out
cmp
fstp
push
lahf
cld
call
test
jmp
(bad)
and
cmp
inc
jbe
jae
adc
std
mov
cs
stos
(bad)
in
xor
ins
add
pop
lds
dec
lahf
iret
daa
mov
outs
out
ja
int3
jbe
imul
xchg
mov
push
fiadd
shl
stc
mov
add
daa
out
dec
jge
sbb
(bad)
int3
test
popa
pop
cmp
stos
sub
lea
cmc
jmp
mov
jg
or
dec
test
stc
ja
pop
jne
cmps
mov
div
xchg
fsub
fs
mov
push
inc
push
sbb
dec
in
sar
in
ror
pushf
mov
mov
nop
inc
or
jmp
cmp
pushf
or
xor
jp
daa
out
xlat
mov
(bad)
fbstp
xchg
mov
out
xchg
or
lea
call
pop
and
shl
or
push
xchg
jae
mov
jmp
jl
jnp
sub
btc
fsub
dec
jg
adc
xchg
pop
frstor
icebp
xor
mov
inc
adc
dec
cmp
(bad)
rol
push
mov
dec
dec
sub
rcl
mov
test
cdq
adc
dec
std
dec
aas
clc
or
ss
push
push
mov
adc
aas
adc
stc
pop
cmp
mov
fcomp
out
xor
jecxz
cli
xchg
mov
les
mov
fimul
es
or
stos
xchg
add
add
mov
jl
iret
repnz
pop
cmc
pop
mov
xor
mov
push
push
cmp
(bad)
adc
pop
cld
cli
in
push
rol
mov
stos
and
fsubr
lea
loop
fimul
out
call
lods
hlt
xchg
out
xchg
inc
je
dec
leave
in
mov
rcl
or
sbb
pop
sbb
loope
cmps
add
(bad)
in
dec
inc
(bad)
sub
add
inc
or
or
dec
mov
test
scas
cli
jp
inc
xchg
push
retf
aam
out
mov
test
mov
inc
jecxz
in
push
pop
add
retf
jge
int3
fidivr
xchg
pop
ret
mov
imul
into
xchg
scas
xor
loope
push
retf
addr16
shl
jl
dec
test
xchg
add
cmps
adc
push
loopne
inc
aaa
or
jne
push
sub
jbe
(bad)
xor
loope
push
daa
(bad)
loop
push
pop
outs
lods
hlt
sub
bnd
push
xchg
hlt
icebp
xor
nop
mov
cmp
xor
push
push
pop
shl
xchg
or
push
xor
inc
dec
push
jmp
mov
xchg
mov
add
xchg
xor
or
out
dec
add
mov
adc
(bad)
pop
sub
adc
and
jecxz
cmp
test
xchg
lds
or
call
daa
in
xor
cmp
adc
lods
or
adc
push
cvtdq2ps
jbe
add
loop
test
jno
loope
(bad)
push
xor
or
scas
jecxz
and
lods
ins
repz
call
mov
inc
dec
adc
ja
mov
out
mov
cld
shl
dec
test
cdq
mov
push
mov
xchg
xchg
pop
sub
jecxz
push
inc
push
mov
mov
xlat
(bad)
mov
sub
mov
sti
arpl
pop
or
add
dec
adc
mov
push
adc
or
pop
ret
inc
cmp
int
imul
sbb
mov
cmp
inc
sub
add
inc
xchg
shl
xchg
sub
call
in
nop
jmp
jb
xor
dec
add
pop
minps
xor
xchg
fimul
mov
loope
inc
popa
lods
out
inc
sbb
or
pop
ss
or
(bad)
mov
retf
rol
add
jne
adc
inc
sahf
gs
mov
add
jae
dec
sbb
imul
sbb
mov
pop
ret
xchg
mov
push
(bad)
mov
data16
loope
movs
js
adc
pop
mov
xchg
imul
jecxz
sbb
xchg
arpl
clc
or
add
repz
mov
sub
mov
fs
and
xor
je
mov
ins
lods
xchg
out
pop
dec
push
fsub
adc
sub
cmp
(bad)
xchg
(bad)
cmp
leave
cmc
sti
aas
pop
aam
stos
mov
and
jne
test
cmps
mov
(bad)
xchg
lock
fsub
sub
xchg
dec
sbb
inc
sahf
xchg
jge
pop
stc
mov
xchg
inc
ficomp
inc
cld
stc
pop
or
or
dec
and
sti
popa
int
or
jmp
jmp
dec
pop
daa
dec
stc
mov
outs
mov
push
aas
jbe
jge
inc
and
dec
(bad)
mov
jne
test
into
sbb
add
add
(bad)
int3
mov
fwait
jg
test
and
inc
stos
inc
dec
sub
and
mov
push
addr16
sub
shl
iret
or
aad
leave
and
or
in
lock
lods
mov
dec
outs
xchg
mov
adc
fldcw
jnp
sub
dec
call
inc
xchg
dec
jge
mov
pop
(bad)
xchg
pushf
adc
nop
jmp
into
rol
add
adc
or
add
inc
icebp
xchg
push
push
sub
adc
lods
in
sahf
fbld
lds
mov
and
mov
mov
sub
inc
and
and
mov
js
dec
adc
js
sti
inc
or
mov
sub
jl
or
cmp
pusha
ja
jb
xor
das
imul
les
clc
xor
clc
retf
(bad)
aaa
gs
and
out
imul
xor
mov
jno
xchg
or
jmp
inc
adc
(bad)
jecxz
mov
sub
add
jb
cmp
pop
add
mov
pop
(bad)
cmp
cmp
push
popa
cmp
xchg
jle
les
por
mov
fbld
loopne
sahf
and
inc
cmps
dec
les
jg
mov
aad
loope
(bad)
call
fsubr
push
mov
out
mov
inc
or
pop
in
aas
or
nop
repz
sbb
movzx
sub
movs
adc
fwait
cmp
dec
and
push
push
iret
jl
gs
jb
idiv
(bad)
mov
sbb
or
xor
aad
sub
fiadd
(bad)
out
in
add
inc
sub
out
or
aam
sbb
fadd
shl
outs
int3
mov
int3
call
push
sub
jnp
mov
inc
dec
xor
xor
jp
call
bound
iret
jecxz
inc
sar
(bad)
or
out
inc
shr
int3
(bad)
rol
xchg
cmp
pop
popa
clc
xchg
iret
and
cld
jnp
jo
je
xchg
and
sbb
xor
pop
mov
jno
fnstenv
dec
xchg
adc
adc
pusha
or
xor
imul
aam
mov
clc
shl
cdq
mov
test
push
cwde
lock
dec
out
shr
das
in
pop
mov
leave
movs
sbb
jl
xor
dec
add
ins
sub
cmps
cmp
aam
scas
test
loope
and
mov
and
mov
xor
mov
imul
call
nop
(bad)
and
add
lods
(bad)
cli
xchg
sar
punpcklbw
mov
dec
and
test
popa
test
mov
mov
xor
adc
test
sub
jmp
dec
das
mov
inc
outs
test
cmp
dec
cmp
pop
das
mov
mov
mov
fs
pop
xor
imul
pop
scas
or
mov
jmp
add
mov
pop
inc
test
xchg
outs
fstp
jo
imul
fild
stc
dec
push
out
mov
iret
in
pop
mov
pop
lods
mov
mov
push
adc
sub
xor
sbb
push
dec
outs
add
(bad)
fs
jge
cmp
pop
inc
cmps
sar
popa
data16
out
ja
mov
jecxz
loop
out
and
out
mov
(bad)
cmp
stc
sub
loope
mov
sub
(bad)
xlat
push
out
pop
jno
sbb
cmp
push
cs
je
mov
adc
ins
dec
arpl
push
and
mov
mov
cmp
lds
mov
dec
pcmpeqw
and
mov
inc
mov
cs
cmp
mov
outs
sbb
jmp
sbb
or
push
fnstenv
and
ins
jbe
mov
mov
xor
jnp
fidiv
cmps
cld
dec
and
retf
rcl
dec
setp
xor
test
(bad)
outs
sti
cmp
adc
retf
shr
lea
bswap
xor
sbb
push
and
sar
or
aas
mov
mov
ret
sbb
out
call
jge
les
and
ret
push
mov
and
pop
jo
les
xor
repnz
cmps
cmp
lods
or
lea
cmc
jo
sbb
gs
scas
jge
scas
(bad)
sbb
pop
sub
cmp
ins
inc
jmp
sbb
or
add
mov
test
call
mov
movs
mov
test
jnp
push
mov
arpl
jmp
rcl
or
cs
mov
clc
sbb
js
xchg
mov
jne
xor
std
mov
imul
xor
adc
mov
xchg
mov
cmps
dec
ror
imul
xchg
adc
cmps
pop
data16
ret
sbb
add
test
xor
pop
cld
pop
cld
xchg
push
pop
(bad)
cmp
mov
data16
cli
push
sub
lock
fcmovnb
mov
cmp
cld
mov
icebp
mov
lods
pusha
das
(bad)
sub
xor
push
inc
push
test
movs
sahf
retf
call
add
mov
in
enter
arpl
lock
jb
push
dec
rcr
enter
pushf
sub
jns
icebp
jge
mov
xor
pop
push
mov
ins
leave
int3
xchg
in
dec
fimul
xchg
fisubr
cmps
ret
fwait
mov
and
inc
imul
push
mov
xchg
test
dec
(bad)
dec
push
fs
push
ret
jmp
add
movs
push
sbb
mov
pop
push
inc
push
test
movs
int
or
and
shl
or
(bad)
jae
push
and
das
inc
aaa
add
lock
and
imul
add
lods
lea
sbb
pop
adc
push
test
(bad)
push
in
inc
sar
mov
pop
dec
mov
mov
add
add
push
jns
out
mov
and
inc
daa
(bad)
(bad)
mov
cmps
clc
xchg
sbb
sub
push
mov
gs
setl
out
rcr
push
dec
ret
xchg
daa
push
out
cpuid
nop
and
and
sbb
dec
icebp
and
mov
sub
test
in
add
adc
ret
je
inc
pop
(bad)
or
dec
mov
shl
xchg
pop
daa
in
cmps
dec
xchg
adc
or
test
xlat
jmp
jne
mov
jb
sub
arpl
loope
pop
imul
dec
xchg
jnp
and
ins
lahf
xor
cmp
test
cld
xchg
movs
int3
aaa
and
test
jne
push
xchg
movs
mov
js
dec
les
xchg
xor
and
mov
jb
lds
imul
pop
jg
cmp
cmps
sbb
ins
add
inc
xor
popf
call
outs
cmp
pop
cmp
adc
xchg
fcom
inc
fwait
(bad)
xchg
pusha
ret
pop
or
mov
push
fcom
jmp
add
sub
pop
retf
rol
scas
stc
loop
xchg
and
jge
add
mov
sbb
icebp
mov
sar
push
sbb
cdq
jns
jge
add
es
pop
out
aad
shr
mov
arpl
cmc
or
xchg
inc
lahf
imul
pop
mov
mov
sahf
ss
aam
adc
push
gs
mov
ins
mov
push
ins
push
enter
je
std
call
retf
jmp
or
jmp
gs
xor
mov
mov
icebp
mov
add
push
xchg
mov
sbb
jbe
(bad)
mov
and
or
mov
adc
pop
test
out
mov
xlat
and
jecxz
pop
jns
pop
push
pop
inc
push
fst
sbb
test
and
fsubr
jmp
stc
jbe
jae
lods
sbb
sub
or
lds
sbb
aaa
fwait
pop
pop
inc
ror
out
daa
cs
jge
mov
cmp
mov
xor
xor
push
stos
lahf
jecxz
mov
pop
ret
js
push
rcl
cmps
pop
pusha
sbb
(bad)
retf
ror
out
scas
ret
pop
fistp
mov
je
aam
add
and
jo
mov
push
pop
loopne
mov
repnz
out
push
popf
dec
sub
sar
mov
xor
leave
cmp
daa
out
cmc
xchg
and
mov
sub
sub
mov
outs
mov
dec
jmp
jo
push
out
hlt
test
mov
outs
lock
mov
xor
mov
jmp
data16
or
xchg
test
jnp
dec
leave
lods
call
add
and
mov
jl
lods
data16
jmp
fist
cmp
dec
mov
cli
cmp
xor
(bad)
mov
inc
or
sub
popf
or
les
cs
pop
retf
test
dec
je
loope
(bad)
call
ja
sbb
cmp
enter
pop
cmps
ja
mov
jmp
gs
mov
ror
(bad)
mov
mov
add
pusha
(bad)
mov
jecxz
xor
mov
lahf
jle
and
test
push
call
bound
xor
sbb
sbb
lock
mov
loope
adc
test
add
xchg
stos
mov
cld
mov
ja
xlat
xchg
in
jae
aas
jb
fld
addr16
cs
mov
ins
or
xchg
(bad)
(bad)
in
in
icebp
clc
and
dec
push
aas
cs
(bad)
aad
bound
inc
fs
in
xor
clc
cmp
imul
(bad)
in
mov
inc
sbb
jmp
clc
lods
sbb
adc
add
dec
call
jecxz
inc
xor
test
loope
jecxz
xor
sub
xchg
lahf
or
ficom
push
pop
dec
ja
psubusw
xchg
mov
mov
outs
loop
data16
out
data16
xchg
popa
jle
stc
call
mov
loope
lock
or
jae
sbb
sahf
inc
test
cli
mov
je
xor
pop
loop
mov
dec
loop
cmp
retf
ja
push
in
bound
xor
ds
pop
inc
jo
jecxz
daa
xchg
xor
loopne
cmp
xchg
loope
or
xchg
int3
jecxz
cld
les
aad
int3
or
loope
ins
js
mov
inc
loop
cmp
cmp
ins
xor
and
mov
mov
add
or
push
pop
adc
mov
jg
dec
xor
test
sub
or
lods
ja
fnsave
push
jg
xlat
fld
jae
dec
mov
sar
shl
sbb
sbb
clc
pop
in
xor
test
xor
arpl
xor
(bad)
xchg
lock
(bad)
sub
or
sub
sbb
rcl
mov
push
sbb
sub
ins
cmps
sub
bound
pop
lock
shr
out
xor
es
arpl
es
or
leave
add
fxch
adc
test
stos
in
stc
in
push
pop
xor
fisubr
jl
pop
jmp
popa
bound
xchg
sbb
mov
cmp
ror
xor
cwde
sbb
cs
jmp
les
xor
test
xor
sti
outs
out
xor
mov
aas
sbb
sbb
jg
sahf
cmp
inc
push
cld
xchg
fnsave
int3
xlat
cmp
mov
cmp
fcom
inc
test
nop
pop
sub
cwde
pop
adc
xlat
cmp
cmps
into
or
cmps
sahf
push
fist
mov
ss
push
jbe
mov
jne
jecxz
fsubr
stos
jne
sub
out
cmp
mov
add
mov
pop
sbb
mov
gs
imul
xor
shl
stc
and
out
ins
icebp
ficom
jne
loope
jl
push
aas
aas
call
mov
ror
ret
bound
iret
fucomp
pop
cmp
xor
iret
inc
xor
or
cmp
xor
add
out
retf
or
leave
sub
call
out
pop
adc
aam
pop
add
pop
mov
jmp
loop
push
fcom
shl
adc
scas
(bad)
pushf
stc
mov
out
adc
sbb
mov
popf
arpl
fwait
pop
lea
jb
xchg
cdq
fbstp
imul
jo
int3
clc
jb
lds
movs
(bad)
aaa
and
(bad)
cli
and
sbb
lahf
dec
fadd
and
jnp
fadd
repnz
clc
ds
sub
repz
arpl
inc
inc
sbb
ins
push
or
jle
cmps
rcl
jo
outs
out
int3
xor
pop
push
mov
stos
add
xor
mov
sahf
xchg
push
fs
daa
xlat
ror
out
sub
sahf
xor
xchg
inc
imul
mov
dec
mov
pop
mov
in
mov
push
outs
cmps
ins
push
jb
xchg
mov
addr16
pop
inc
pop
mov
pop
cmp
mov
stos
in
gs
inc
mov
fs
mov
push
sti
add
lock
rcl
test
imul
add
cmp
cmp
pop
push
das
and
fwait
ins
xchg
ret
es
shr
sbb
popaw
cmp
mov
xor
cld
jecxz
and
or
popf
sar
add
jne
push
ss
xchg
pop
lock
jae
xchg
jb
je
adc
mul
nop
js
push
popf
call
sbb
jnp
and
cmp
and
jo
mov
retf
(bad)
adc
cmp
dec
inc
imul
ror
cdq
and
mov
cmp
mov
mov
pop
(bad)
jbe
sti
mov
clc
mov
int3
xchg
iret
push
aam
mov
xchg
sub
mov
jecxz
ficomp
pop
pop
push
mov
sbb
(bad)
adc
test
bound
je
cmp
aas
fsubr
retf
mov
xchg
lock
push
pusha
test
push
pushf
sub
cli
dec
jmp
dec
arpl
movs
jb
hlt
pop
aaa
cmps
jne
sbb
fst
repnz
je
inc
and
iret
mov
in
xor
cmp
(bad)
scas
jne
inc
fisttp
jle
in
pop
imul
cmp
cld
(bad)
adc
iret
xchg
sbb
jnp
or
push
das
aam
inc
(bad)
(bad)
cli
repnz
ss
cmps
mov
sti
xchg
das
adc
jmp
rcr
mov
retf
sbb
aaa
rol
and
sub
push
fwait
mov
cmps
cmps
pop
clc
je
rol
lods
ret
dec
shl
xor
push
stos
mov
adc
mov
and
ins
and
inc
dec
pop
xchg
push
inc
mov
out
pop
inc
cmc
and
mov
lods
(bad)
sbb
sub
out
bound
and
xchg
leave
push
fistp
push
mov
or
xlat
mov
mov
xchg
movs
addr16
push
in
cmc
mov
mov
add
adc
mov
mov
les
arpl
adc
mov
mov
add
cwde
or
dec
mov
and
jae
pop
add
sub
cmp
out
shl
repnz
inc
mov
xchg
lahf
test
lds
pop
and
(bad)
jnp
mov
femms
ss
mov
mov
pushf
adc
fst
fcomp
bnd
or
ret
aam
inc
cmps
gs
addr16
(bad)
mov
mov
add
cmps
sub
pop
mov
std
ds
fld
pop
sub
inc
sbb
pusha
push
retf
xor
aad
imul
xlat
mov
jno
ja
adc
push
fsubr
push
push
popf
mov
in
loope
cli
push
std
mov
mov
cs
add
mov
jbe
jno
jae
pop
jmp
fwait
and
lods
std
ret
and
sub
jb
out
mov
adc
push
push
es
mov
int
ds
or
(bad)
sahf
fnsave
fsub
xor
push
xor
push
add
mov
out
inc
adc
inc
in
pop
dec
outs
cdq
push
mov
mov
pushf
mov
ficomp
jo
or
imul
rol
bound
xchg
add
in
stos
mov
scas
mov
jmp
inc
ins
adc
mov
clc
popa
or
int3
out
retf
add
mov
or
and
push
pushf
(bad)
in
aad
jmp
in
mov
test
inc
mov
and
push
mov
mov
fstp
xchg
inc
pop
ret
dec
int
mov
je
(bad)
leave
cmp
pop
repnz
or
fadd
mov
inc
cmp
add
jae
xchg
outs
xlat
jmp
jl
and
pop
jl
cmp
cmp
mov
xor
xchg
or
sbb
faddp
js
xchg
cmp
mov
jnp
mov
jbe
adc
or
pop
mov
fild
push
xchg
hlt
stc
dec
add
mov
mov
ret
xchg
icebp
imul
mov
out
clc
call
dec
fwait
sbb
xor
shl
push
mov
pusha
(bad)
stos
push
push
iret
retf
and
jb
addr16
pop
retf
adc
push
mov
out
mov
jae
fwait
imul
(bad)
cmps
test
adc
jno
fdivr
jl
sub
dec
jmp
mov
xchg
ins
fs
fwait
sub
stc
xor
fcomp
cs
add
jg
or
out
pop
(bad)
mov
sbb
sub
mov
xlat
mov
push
aas
(bad)
and
mov
lock
int
repz
in
mov
jae
xor
jno
mov
fisttp
lahf
add
push
fcmovnu
xchg
aam
ins
in
inc
xchg
adc
jnp
lods
popf
(bad)
pop
xchg
jne
sbb
xor
push
loope
or
enter
test
test
(bad)
in
(bad)
dec
inc
pop
sub
xchg
xchg
mov
cmps
call
add
push
test
push
fdivr
mov
pop
and
lahf
out
repz
mov
push
ins
dec
sub
test
test
in
pop
sub
hlt
(bad)
cmp
stos
retf
pop
(bad)
imul
xchg
xor
pop
mov
mov
inc
aad
pusha
push
xchg
cmp
xchg
enter
push
mov
sub
(bad)
jg
and
xor
mov
pop
dec
jns
sti
aad
pop
add
test
mov
dec
pop
xor
mov
leave
movs
pop
(bad)
fmul
icebp
or
cmps
mov
fisub
rcr
call
jns
mov
movs
rcl
xchg
cmp
repz
mov
shr
fdiv
cmp
push
mov
mov
jno
jmp
xchg
push
leave
dec
lods
test
fcom
cwde
clc
gs
add
add
inc
or
jecxz
dec
mov
xchg
icebp
pop
mov
loope
fsub
mov
arpl
or
inc
mov
cld
add
sub
xchg
rcr
dec
call
inc
(bad)
push
jl
dec
add
and
movs
imul
sbb
jo
das
jle
test
fdiv
cmps
(bad)
frstor
(bad)
and
sub
pop
sub
jge
shl
jmp
inc
cmps
push
and
or
xchg
push
ins
sub
mov
sub
inc
bnd
and
pushf
jp
dec
sbb
inc
retf
addr16
pusha
in
inc
call
xchg
loope
mov
jne
xlat
sar
in
and
adc
(bad)
sub
mov
xchg
aam
or
add
cmps
push
xchg
pop
or
adc
xlat
pop
pop
jo
xchg
fincstp
sahf
test
cmps
test
cmp
xor
pop
mov
std
fcomp
js
std
(bad)
lods
pop
xchg
hlt
outs
fcmovne
adc
cmc
mov
fdivr
jb
sbb
jns
cmp
hlt
ins
sub
cs
fistp
mov
pop
xor
sbb
enter
je
(bad)
rcr
add
aaa
gs
imul
aam
imul
icebp
into
cdq
outs
xchg
iret
pop
or
dec
int3
mov
repz
cmp
(bad)
in
inc
je
ret
test
xchg
dec
into
test
sub
pop
jg
or
cs
ds
or
in
data16
mov
pop
xchg
dec
arpl
xor
ja
jp
pushf
mov
inc
call
xchg
jge
scas
or
stos
(bad)
ret
mov
dec
rcr
adc
and
lods
sbb
sahf
sbb
in
ds
and
movs
adc
mov
je
push
mov
mov
jge
ret
mov
jns
out
push
jmp
adc
mov
xchg
xchg
popa
xchg
jo
aas
pop
adc
ins
cmp
addr16
pusha
inc
bound
dec
mov
jl
popf
arpl
fld
adc
stos
jno
jbe
pop
mov
sub
xor
and
mov
bound
jbe
popf
shl
ret
sbb
dec
and
test
loop
jns
cwde
cli
push
dec
scas
rcr
jne
arpl
outs
(bad)
les
pop
inc
sbb
enter
pmuludq
cmp
mov
xchg
adc
out
aad
push
lds
ds
dec
jns
jl
sbb
and
adc
retf
(bad)
push
and
loope
fs
xchg
in
sbb
and
fidiv
fpatan
fadd
or
push
xchg
inc
xor
leave
jmp
inc
mov
push
int3
add
inc
inc
daa
sbb
xchg
cmp
push
(bad)
iret
out
repnz
sub
pop
loop
sahf
or
push
mov
mov
dec
arpl
lods
jns
cmps
mov
jb
xchg
loop
xor
out
inc
or
mov
das
gs
lods
push
bound
scas
imul
push
mov
enter
mov
not
add
outs
es
fmul
push
movs
push
cmps
sbb
outs
cmp
mov
jmp
jge
jp
sti
scas
shl
hlt
xchg
adc
or
repnz
sti
fadd
lock
jae
mov
inc
add
jge
frstpm(287
adc
inc
xchg
stc
fdivr
pop
pop
out
retf
(bad)
in
and
retf
imul
dec
mov
inc
xor
test
ins
pop
fadd
dec
fldln2
sub
add
fnstenv
out
cld
dec
test
or
inc
ins
mov
mov
ss
fwait
cs
jecxz
xchg
push
sbb
mov
jnp
popa
and
mov
dec
pushf
push
scas
adc
cs
inc
cmp
sbb
cs
mov
fnstenv
cmp
jne
or
pop
mov
sar
sbb
add
retf
jg
lds
mov
mov
inc
cdq
mov
(bad)
fnstenv
mov
jnp
or
xor
sbb
sti
xor
fs
ss
adc
mov
outs
pop
jecxz
sbb
sahf
adc
fimul
pop
add
data16
push
mov
in
data16
inc
stos
out
cmp
inc
jo
xor
lock
xchg
popf
xor
xchg
mov
enter
mov
xlat
rcr
jle
adc
sub
dec
fisub
out
loope
retf
pop
into
loope
mov
fistp
rcr
aas
test
fs
pop
xor
inc
(bad)
aas
mov
jp
jno
sub
lahf
ja
xor
dec
jmp
(bad)
and
mov
inc
repz
pop
aam
adc
iret
mov
and
push
fisttp
lock
clc
cs
sub
add
mov
mov
mov
fld
js
fwait
sub
inc
xor
bound
xor
test
push
mov
jns
adc
push
imul
(bad)
in
jp
jecxz
jp
clc
push
fmul
pop
jmp
sti
jno
or
cmp
mov
(bad)
jle
paddusw
mov
mov
aas
iret
nop
mov
mov
rol
outs
adc
cmps
push
es
bound
neg
bound
cli
shl
rcl
and
dec
ja
jecxz
ficom
jnp
sub
lods
das
cmp
int3
adc
jb
retf
and
sbb
push
aad
outs
mov
mov
sbb
mov
push
mov
inc
cmp
add
xor
sbb
push
dec
std
int3
fadd
mov
aas
nop
movs
xchg
in
mov
repz
in
aas
in
and
xchg
dec
pop
leave
test
pop
addr16
jb
aam
and
xchg
movs
or
aas
test
pop
cld
fild
push
mov
jne
and
cmp
gs
mov
int
jge
data16
sub
add
ror
jbe
mov
fisubr
inc
cmc
jecxz
mov
fldcw
cs
in
gs
loope
out
retf
int
mov
lock
call
fidivr
and
mov
pop
and
jb
cmc
aaa
sti
add
mov
iret
adc
ins
pop
pop
js
les
sbb
mov
cmp
hlt
cmp
jmp
pop
mov
and
and
push
cs
xor
jecxz
xor
(bad)
cmps
mov
xor
inc
std
das
xlat
pop
test
hlt
xor
mov
lods
mov
push
pop
lock
test
jb
retf
lods
bound
pop
push
and
cdq
mov
cmc
jns
xchg
aam
mov
enter
test
jae
call
jne
fld
mov
mov
mov
and
and
loopne
fcomp
push
mov
scas
mov
int
xchg
sbb
jmp
xchg
fcomp
mov
xchg
jne
lahf
jne
popf
mov
pop
inc
sbb
fsincos
ss
jmp
cmps
pushf
test
aad
inc
inc
pop
jno
adc
int3
mov
fst
fild
sar
repnz
inc
jne
je
addr16
repnz
jmp
sbb
mov
loop
xchg
push
out
inc
cmps
sbb
mov
ja
idiv
scas
mov
ss
out
mov
cmp
daa
mov
pusha
gs
popf
pop
fs
mov
iret
loope
xchg
mov
adc
mov
inc
xchg
mov
jne
rol
pushf
sar
mov
sub
lds
hlt
adc
xlat
ror
jnp
ret
pop
pop
mov
add
fwait
sub
imul
mov
fadd
(bad)
fiadd
xchg
cdq
int3
pop
cmps
call
push
xchg
xchg
sbb
gs
outs
fld
out
movs
dec
push
and
sub
adc
inc
pop
push
lods
out
mov
xchg
in
dec
jns
aaa
int3
leave
repz
fwait
js
sar
pop
jmp
mov
inc
repz
scas
std
push
cld
sub
imul
sbb
lock
push
in
mov
or
jnp
xlat
or
or
test
daa
mov
or
cmp
sbb
jns
add
test
ret
out
ds
and
out
rcl
dec
sahf
mov
std
dec
mov
xchg
movs
xchg
test
scas
test
pop
into
imul
pop
fstp
mov
push
sti
jmp
jecxz
cmps
mov
xchg
mov
movs
xchg
in
aas
and
sub
dec
out
push
and
movs
xchg
cs
mov
fldenv
leave
popa
das
mov
sbb
mov
jmp
nop
xchg
and
sub
adc
push
or
mov
stos
aaa
sub
dec
nop
cmc
gs
mov
pop
sbb
out
pop
cmovne
faddp
jle
int
call
ins
lods
and
xchg
pop
pop
xor
mov
aas
call
xchg
xchg
jae
in
xchg
addr16
mov
call
cmp
push
xor
add
ror
sbb
fimul
mov
adc
dec
and
ins
xchg
inc
add
sbb
pop
dec
mov
daa
rol
cmp
adc
cld
mov
and
jns
mov
jns
xchg
dec
sub
out
pop
dec
shl
or
pop
add
loop
test
lock
and
push
cmp
ret
inc
sub
jb
and
out
repz
loopne
pusha
and
sub
es
out
pop
and
gs
sub
adc
jne
mov
aaa
sub
pop
and
pop
cmp
js
push
dec
loope
faddp
xchg
not
mov
and
sub
les
and
inc
add
xchg
out
xchg
mov
jno
mov
fild
xchg
mov
jge
ja
dec
push
sbb
imul
test
sub
jmp
add
or
loope
jp
adc
clc
mov
xchg
or
je
add
clc
adc
and
movs
cmp
push
(bad)
popf
popa
sbb
lods
mul
pop
test
dec
aam
xor
jo
xor
test
mov
mov
lock
stc
add
fsub
in
cmc
cdq
lods
or
push
sar
ins
dec
pop
out
cmps
retf
mul
hlt
sti
pop
leave
push
jae
push
dec
jno
pop
retf
push
mov
pop
lods
mov
xchg
sub
enter
push
mov
scas
mov
xlat
cmps
sub
and
cdq
sbb
xor
xor
cld
push
and
call
jns
dec
lahf
mov
cli
push
jp
and
mov
mov
(bad)
fs
jbe
shr
pop
sbb
clc
dec
cmp
std
and
(bad)
push
xor
cld
cmp
mov
hlt
jae
pop
xor
lods
and
sub
loope
int
add
cdq
mov
rcr
dec
xor
jp
jp
mov
aas
xchg
test
iret
or
dec
in
mov
xchg
dec
xor
fwait
scas
mov
test
cmp
inc
xor
cli
fld
lea
inc
mov
mov
bound
nop
push
sbb
jmp
push
outs
pop
movs
scas
mov
fstp
mov
in
push
cmp
dec
add
ss
outs
(bad)
hlt
mov
cs
pop
jno
out
or
sbb
aas
je
mov
pusha
movs
adc
adc
stc
push
mov
test
or
in
adc
add
sti
mov
addr16
repnz
sub
jecxz
mov
ins
imul
sub
adc
inc
xchg
movs
aam
jge
jno
push
sti
scas
cmp
or
or
(bad)
lock
aam
mov
and
ins
dec
inc
lods
pop
fidiv
mov
adc
pop
inc
and
cwde
loopne
scas
fisub
mov
gs
jbe
xlat
call
cmps
js
add
(bad)
frstor
in
ror
out
repnz
xchg
out
adc
into
inc
repz
dec
stc
add
scas
jnp
or
test
fadd
js
xchg
jle
cmp
not
nop
ror
xchg
push
mov
mov
retf
ret
sbb
int
fnstcw
push
adc
cdq
iret
in
fsub
mov
aad
cs
sub
pop
add
(bad)
jbe
dec
pop
(bad)
mov
adc
pop
je
cmps
in
push
xor
push
rcr
push
add
add
test
xor
mov
mov
(bad)
popa
inc
xchg
iret
and
mov
jmp
js
scas
dec
in
add
sub
cmps
js
inc
push
daa
cmp
push
clc
jle
xor
pop
mov
xor
mov
xor
xlat
add
cmp
adc
iret
in
adc
pusha
add
xlat
aaa
lods
repnz
inc
dec
push
mov
mov
push
enter
push
sub
hlt
mov
dec
stos
or
hlt
fcomip
inc
inc
inc
nop
mov
loopne
es
das
fldcw
mov
test
dec
aaa
push
popa
leave
pop
dec
(bad)
test
iret
mov
inc
jle
mov
dec
adc
lods
dec
(bad)
add
aad
call
xchg
sbb
outs
dec
push
mov
lahf
leave
sub
push
mov
pop
inc
iret
ss
xchg
jl
mov
cli
pop
dec
adc
xor
cwde
leave
sbb
push
lea
jge
add
cmc
test
push
es
jbe
or
ficom
int
popa
push
mov
jne
mov
nop
jb
jb
mov
fimul
xchg
out
jne
ja
pop
ds
or
cwde
mov
xchg
push
xor
stos
stos
(bad)
push
dec
mov
call
fdivr
mov
jns
push
rcl
or
mov
adc
out
popa
sbb
loop
xor
sub
adc
(bad)
fld
iret
ins
fs
add
(bad)
out
mov
sub
xlat
lahf
and
inc
push
mov
cmp
lahf
in
mov
jmp
mov
loopne
mov
sbb
out
sbb
cld
push
inc
add
adc
pop
cmps
inc
mov
in
popf
je
test
fdivr
repz
in
and
cmp
pop
jb
popf
pop
pop
and
mov
fiadd
add
mov
cmp
mov
cmp
add
mov
mov
std
ins
or
add
mov
test
and
xchg
or
jmp
push
pop
mov
push
sub
sub
and
outs
dec
xchg
cli
(bad)
call
mov
int3
sub
jns
outs
pop
add
sub
stos
repz
rcl
cmp
movs
std
hlt
jmp
push
add
mov
pop
call
stos
add
ss
mov
in
out
dec
es
sar
sbb
test
pushf
popf
fld
pushf
xlat
sbb
push
stos
in
jb
sub
and
mov
repnz
callw
xchg
xchg
lods
add
pop
mov
cwde
lock
xor
sub
xor
xor
fist
pop
iret
jecxz
iret
cli
fdivr
mov
mov
mov
cli
aaa
mov
in
lods
mov
daa
inc
or
push
sbb
mov
les
cli
cmp
cmp
dec
mov
add
jmp
lds
aam
mov
dec
icebp
fild
repnz
dec
and
fdiv
or
adc
cmps
and
sub
lock
stos
out
add
shl
inc
sti
rcr
or
popa
add
fs
jae
or
add
fistp
dec
adc
mov
out
call
pop
jmp
ret
add
push
add
(bad)
int3
mov
mov
and
pop
xchg
and
mov
or
shr
jo
and
push
arpl
movs
lea
pushf
cmp
ins
pop
dec
cmp
cwde
std
stc
cmp
pop
push
xor
jbe
rcl
pop
ficom
sub
clc
cmps
add
xchg
cmp
fidivr
dec
retf
inc
sti
or
idiv
sahf
push
call
push
jp
sahf
sub
dec
fistp
pop
mov
stos
(bad)
xlat
(bad)
aad
rol
shr
fisubr
pop
aad
push
or
aad
mov
mov
pop
pop
jb
jp
mov
dec
in
js
ins
sub
shl
push
xchg
cdq
ins
cmp
(bad)
jle
push
dec
mov
sub
retf
pop
push
aam
cmps
es
inc
imul
enter
out
sub
sbb
cld
es
adc
loope
into
push
int
fcmovnu
shl
jns
(bad)
dec
loopne
imul
fs
sbb
jle
pusha
jmp
lods
mov
fldcw
mov
iret
mov
icebp
sub
enter
cli
rcl
or
pop
xchg
fmul
xor
and
or
push
mov
mov
imul
jnp
es
out
(bad)
mov
add
int
rcr
cli
xchg
cmp
(bad)
mov
shl
jb
stos
fidiv
inc
add
jmp
clc
aad
push
ret
mov
adc
test
stos
jmp
pop
cmp
and
bound
cmp
inc
mov
push
fsub
pop
cmp
in
dec
xchg
mov
lods
push
xchg
sub
aam
mov
mov
sub
push
fisttp
outs
sub
mov
mov
jns
mov
es
sub
pop
(bad)
leave
fcom
and
mov
and
push
das
push
cmc
jmp
out
lahf
aam
xchg
shl
cwde
pusha
jecxz
jle
inc
add
xchg
fiadd
or
cmc
mov
and
test
cmp
test
popf
xchg
inc
repnz
adc
out
je
and
cli
data16
call
jmp
sub
ds
push
xor
out
loopne
jne
adc
ja
dec
inc
mov
or
mov
aas
cmp
(bad)
push
or
xchg
and
(bad)
inc
push
xor
jmp
adc
pop
outs
in
mov
add
mov
jns
shl
mov
lds
xchg
rcl
pop
frstor
repz
lods
sub
rol
push
xor
push
add
jg
arpl
mov
push
fcmovbe
scas
sbb
les
daa
mov
inc
cmp
lods
lods
add
push
ja
push
dec
lock
and
cmp
lahf
movs
push
fld
push
mov
adc
movs
sbb
inc
fs
in
xor
(bad)
jle
jecxz
push
out
pop
int3
out
sub
jg
inc
std
ss
sbb
mov
sbb
mov
pop
outs
pop
stos
jmp
jmp
rol
pop
xchg
jp
cmp
outs
push
gs
and
dec
pop
pop
jo
retf
adc
xor
push
arpl
jg
loopne
cld
pop
cli
jmp
and
test
mov
push
retf
push
fld
fwait
sahf
sbb
mov
cmp
outs
cmps
pop
ret
pop
xor
out
loopne
pop
ret
and
retf
pop
add
bound
jb
jnp
or
sbb
xor
inc
lea
icebp
ret
iret
outs
fiadd
mov
popf
loope
jmp
mov
inc
out
popa
pop
sahf
mov
cmp
div
jmp
pop
sub
test
scas
cmp
sbb
mov
jno
mov
(bad)
aas
mov
stos
cs
add
scas
pop
pop
xlat
xor
xor
ins
sub
aam
sbb
pop
pop
std
inc
jbe
outs
push
dec
imul
push
shl
outs
clc
push
push
push
mov
sbb
fisubr
mov
loop
imul
rol
xchg
out
(bad)
pop
and
adc
das
dec
shl
dec
dec
add
fsub
cmp
movs
pushf
inc
idiv
aaa
adc
daa
jge
mov
hlt
lahf
mov
lds
retf
sub
ss
retf
jo
cld
push
jmp
out
loope
sub
(bad)
mov
xor
pop
mov
outs
mov
jmp
fnstcw
and
arpl
kmovw
mov
repnz
sbb
std
cs
test
loopne
in
or
mov
aam
int3
cmp
fldcw
fild
xor
ds
adc
push
sub
rcr
or
lods
daa
and
push
ins
test
ins
in
cmp
loop
in
sub
(bad)
sbb
outs
or
or
mov
fdivp
aam
mov
(bad)
gs
test
mov
jp
dec
je
ror
adc
mov
mov
rcr
dec
bound
outs
jb
mov
push
shr
in
inc
cmps
xchg
or
cmp
xchg
cdq
les
mov
mov
xor
sbb
or
pop
and
ins
es
push
push
jae
cmps
sbb
test
xchg
mov
add
adc
(bad)
jmp
mov
mov
lds
push
sbb
lock
xchg
fidivr
aas
cmp
std
arpl
mov
or
loopne
dec
dec
test
scas
(bad)
stos
aas
sahf
leave
lock
mov
retf
call
fwait
jp
movs
jle
iret
push
push
add
pop
jmp
leave
(bad)
bound
lock
push
sbb
ficomp
cmp
jp
mov
in
cmp
mov
stc
cmp
cmp
inc
je
cmp
rol
xchg
pushf
mov
or
dec
mov
retf
push
jo
in
or
or
lods
sbb
pop
inc
retf
push
(bad)
pop
ins
adc
ror
cmp
inc
jmp
lods
pop
sub
aas
arpl
in
cmp
mov
iret
sub
inc
xor
lahf
and
inc
arpl
inc
addr16
adc
test
fidivr
clc
daa
jbe
(bad)
mov
(bad)
dec
test
or
or
mov
pop
sbb
hlt
xor
(bad)
sbb
xlat
lods
jmp
jl
pop
mov
ret
sti
mov
call
adc
push
leave
movs
add
in
mov
(bad)
data16
cmp
(bad)
cld
pop
push
not
xor
inc
sti
call
nop
in
sub
push
mov
xchg
ror
sbb
pop
or
pop
cs
data16
stos
(bad)
mov
inc
cmps
dec
rol
in
(bad)
scas
dec
inc
mov
jb
call
int3
dec
dec
aam
cmps
hlt
cmp
mov
sub
nop
arpl
scas
pop
addr16
dec
fstp
or
mov
and
jmp
pop
xchg
cmp
jae
adc
pop
jns
fbstp
pop
nop
(bad)
mov
push
jmp
dec
cmp
add
sbb
(bad)
push
cmp
call
out
xchg
jnp
ins
movs
pop
daa
cwde
sub
aaa
test
adc
mov
les
jmp
pushf
ror
pop
cmp
inc
ins
test
jae
jp
xchg
and
stos
rcl
xchg
cdq
cmp
push
loope
lock
add
adc
fild
pop
pop
int3
mov
pushf
es
cwde
call
popf
rcl
js
std
ins
pop
push
mov
in
test
aad
and
adc
push
out
mov
mov
xor
cmps
adc
mov
mov
dec
jns
shl
cmp
sub
daa
adc
cdq
add
lods
call
mov
(bad)
sub
lea
test
(bad)
test
fs
jo
(bad)
mov
rcl
xchg
mov
retf
sbb
outs
jmp
xchg
loop
loopne
mov
in
xchg
dec
stos
clc
bound
inc
xchg
jg
xchg
retf
sbb
ret
push
and
ins
fs
push
cmp
cmps
retf
jmp
mov
push
or
and
movs
(bad)
aaa
xor
pop
gs
jmp
push
dec
mov
jle
in
xchg
sahf
xchg
or
div
jge
dec
aaa
adc
sbb
hlt
out
xchg
cs
inc
in
or
scas
pop
and
mov
(bad)
je
mov
cld
jl
mov
add
add
inc
dec
ins
xlat
mov
lock
int3
push
loop
ss
ret
vpmuludq
jge
push
cmp
and
repz
push
jp
aam
data16
sahf
test
mov
in
inc
cmp
fs
push
mov
cld
cmc
fsubrp
dec
icebp
test
xor
popa
or
mov
xchg
mov
fcom
add
fwait
jb
add
movs
adc
push
cmp
xchg
ror
ret
jp
arpl
addr16
add
test
mov
jae
in
fisttp
leave
mov
push
cmp
mov
ds
aaa
pop
in
push
adc
push
out
jnp
cmp
mov
int3
mov
pop
add
cli
push
fnstsw
push
(bad)
out
xchg
jmp
lahf
mov
les
xchg
add
or
inc
mov
clc
add
push
mov
pop
pushf
fmulp
push
in
jmp
pop
jmp
jge
loopne
aas
cs
adc
stc
retf
jle
out
nop
imul
js
adc
and
sar
lods
clc
sub
lds
call
push
cmp
sub
jns
ins
mov
pop
xchg
or
dec
outs
push
in
add
add
mov
mov
pop
inc
test
(bad)
pop
ret
push
ret
xlat
scas
hlt
sbb
inc
and
ja
js
pop
sub
xchg
dec
sbb
and
out
push
cmp
add
inc
adc
mov
mov
xor
inc
or
xor
bound
cdq
and
mov
test
or
pop
js
jp
das
pop
cs
inc
pop
cmp
aam
ins
sar
stos
js
mov
inc
test
scas
loopne
repnz
outs
sbb
cmp
pop
dec
push
movs
sar
or
rol
xchg
push
shl
js
cmps
stos
sahf
and
std
mov
mov
aam
cmp
jmp
or
fnstcw
and
sub
xchg
mov
pushf
test
cmp
(bad)
jecxz
loope
lods
cld
repz
rol
xor
pop
hlt
mov
retf
xchg
enter
xor
push
fild
lock
inc
enter
shl
imul
xchg
and
sar
aad
loope
jge
sub
fnstsw
int3
aad
cmp
jo
cwde
sahf
in
pop
and
mov
movs
(bad)
xchg
outs
fdivr
jnp
in
imul
adc
cmp
ret
cli
xchg
mov
in
sbb
hlt
sub
sub
push
xor
(bad)
adc
lods
cs
mov
adc
mov
fcomp
outs
mov
cmp
cdq
inc
push
mov
lea
in
jno
adc
pop
mov
push
mov
xor
adc
mov
(bad)
fsub
mov
add
je
sbb
mov
test
pop
cmps
int3
stc
and
ds
hlt
jge
popf
shl
jg
in
add
retf
sbb
mov
int3
push
sahf
push
std
and
or
pop
cdq
stos
sbb
rol
inc
sbb
ds
push
(bad)
mov
xor
ss
mov
(bad)
dec
ins
test
push
cmp
pushf
shl
in
(bad)
push
lock
sbb
les
pop
jmp
sub
popa
cmp
shr
dec
pusha
dec
adc
push
rcl
xor
push
push
adc
aam
add
sub
jae
jecxz
(bad)
inc
cmp
and
mov
xchg
xchg
ins
xchg
jmp
push
sbb
lods
sbb
jne
ss
or
lahf
inc
jb
inc
arpl
sub
adc
int
jbe
je
clc
cli
bound
or
leave
mov
(bad)
rol
mov
sbb
iret
shl
push
in
popa
add
movs
int
into
mov
add
lods
sub
loopne
push
cmp
push
xchg
retf
sub
xchg
adc
aad
pop
dec
movs
jmp
sahf
dec
or
cmp
push
xchg
nop
pop
mov
imul
sbb
cmc
ins
mov
call
loopne
mov
mov
xor
in
jmp
jno
mov
jmp
mov
sub
jne
or
push
imul
jecxz
test
sub
xor
fsub
or
ret
cmp
popf
daa
push
bnd
fstp
mov
inc
les
pop
out
fcom
dec
mov
inc
and
les
dec
repnz
add
ins
icebp
aam
retf
sub
mov
cmps
mov
sbb
stc
addr16
iret
movs
inc
js
call
outs
sbb
mov
and
xor
ins
das
jne
mov
adc
call
loope
xlat
xlat
mov
mov
push
add
outs
pop
inc
and
add
cmp
into
or
aaa
adc
fidivr
ss
test
out
in
arpl
fimul
fucomi
mov
rol
xchg
mov
iret
repz
mov
mov
add
into
push
sar
mov
test
push
inc
rol
sbb
int
lods
push
adc
out
adc
add
and
pop
adc
rcr
dec
pushf
(bad)
adc
mov
xlat
jne
(bad)
xchg
sub
dec
sbb
es
bound
pop
mov
inc
pusha
sbb
shl
jg
push
repnz
(bad)
mov
jbe
idiv
push
adc
mov
pop
xor
dec
js
popa
mov
adc
mov
cdq
test
rcr
jmp
inc
jbe
dec
ins
add
shl
and
cmp
in
call
pop
lea
sbb
sub
push
dec
or
inc
shl
daa
pop
mov
push
pop
jmp
mov
cmp
(bad)
dec
mov
jmp
inc
add
mov
jg
fiadd
stos
pop
xlat
dec
jno
gs
cdq
popa
push
jmp
popf
lods
or
cld
fwait
dec
sar
outs
sbb
jl
or
js
xor
std
cmps
int3
les
imul
push
dec
inc
out
fimul
pop
and
mov
call
fwait
retf
jle
imul
fdiv
push
push
popa
cmp
push
jg
test
cmp
ror
xor
and
in
cs
dec
icebp
dec
adc
cmp
xchg
jg
cwde
out
arpl
inc
fxch
xchg
add
and
imul
xchg
das
jb
sub
push
jno
xchg
and
jecxz
sahf
jp
fnstcw
push
mov
adc
pop
mov
adc
out
(bad)
inc
inc
lods
dec
add
push
mov
mov
push
mov
xor
push
jnp
ja
add
test
cmp
lods
adc
mov
inc
xor
cmove
ja
xchg
test
mov
(bad)
repnz
arpl
push
mov
(bad)
and
lods
pop
mov
sub
and
mov
movs
(bad)
jp
mov
pop
nop
push
lahf
ins
push
call
fstp
cli
xchg
sub
jmp
mov
test
ss
xor
scas
cmp
inc
xlat
sbb
mov
inc
mov
out
xchg
and
pop
outs
js
fwait
ja
push
inc
outs
jb
fmul
xchg
pop
loopne
inc
fistp
aam
cmp
into
ins
sbb
mov
xchg
fs
inc
aad
ror
mov
sub
ret
mov
add
jle
push
jnp
rol
stos
shr
scas
aad
xchg
call
and
jno
mov
out
mov
pushw
(bad)
dec
mov
pop
in
shl
sti
xchg
jno
retf
dec
xchg
xchg
adc
cmps
add
movs
mov
push
jo
xor
loop
fldcw
jno
fmul
jns
sbb
mov
mov
mov
cmp
loope
mov
std
addr16
add
or
jecxz
mov
sar
in
ins
aam
mov
enter
sahf
mov
cmp
push
mov
sbb
mov
rcr
out
cmp
imul
clc
ins
jb
inc
mov
push
xchg
cli
out
push
dec
pop
add
sahf
movs
sbb
es
add
mov
jg
adc
push
inc
add
and
iret
movs
aas
inc
jg
ficom
cmp
retf
mov
js
add
fst
inc
pushf
xor
outs
mov
test
pushf
pop
scas
ret
cmp
mov
cld
push
inc
adc
xchg
jbe
sbb
dec
retf
mov
sbb
movs
int
outs
mov
add
push
ret
je
test
ret
outs
(bad)
movs
or
iret
loopne
int3
scas
clc
fdiv
fs
dec
dec
or
mov
ret
stos
popa
jl
cmps
nop
(bad)
push
not
sar
xchg
pop
loop
dec
(bad)
popa
jne
sti
xor
ret
repz
mov
dec
push
adc
ret
cld
pop
and
movs
jnp
xchg
in
(bad)
idiv
add
in
mov
xchg
out
pop
pop
stos
jg
mul
xchg
jns
inc
push
jl
inc
in
mov
mov
not
push
jno
inc
mov
xor
mov
mov
cld
jne
sub
mov
les
inc
mov
in
sbb
aas
jecxz
sub
inc
and
(bad)
scas
mov
cmp
andps
mov
neg
mov
clc
popa
pop
daa
stc
xchg
pop
lods
push
push
stc
aad
imul
ins
mov
int3
jnp
pusha
push
in
or
mov
xchg
mov
sub
jle
mov
cmp
inc
inc
mov
std
loopne
retf
lea
mov
(bad)
cmp
fsub
or
and
cli
xor
ins
or
lea
push
fsubrp
adc
inc
adc
pop
(bad)
aad
xlat
pop
adc
cmps
jmp
pop
dec
jecxz
push
aad
push
ins
xchg
call
adc
xchg
xchg
adc
cmps
sbb
jmp
adc
shl
arpl
rol
rol
lods
in
je
add
push
shl
cwde
idiv
jne
mov
adc
fidiv
loope
cmp
or
bound
ret
cmp
sbb
daa
dec
jno
inc
adc
xor
fild
jno
inc
nop
(bad)
cmp
cwde
inc
cmps
and
stc
adc
jne
xlat
and
xor
mov
xchg
add
call
call
iret
mov
xor
cmp
rcr
add
mov
pop
lahf
les
mov
xor
adc
jnp
lods
in
add
add
xchg
shl
inc
pop
xchg
cmps
mov
call
outs
ins
neg
loop
or
adc
pop
mov
pusha
cmp
fisttp
xor
sub
enter
in
aas
and
call
(bad)
jnp
push
push
xchg
jl
mov
fbld
(bad)
cmpxchg
out
(bad)
hlt
mov
movs
push
pop
aaa
fisttp
pop
mov
cmp
and
sub
std
lahf
pop
into
jne
iret
or
and
pop
or
jge
hlt
fs
loop
ins
sub
repz
or
jmp
imul
mov
push
aad
adc
fstp
lahf
add
mov
mov
gs
add
test
rcl
dec
xchg
mov
lock
cmps
push
popf
mov
jge
jmp
mov
je
add
adc
imul
pop
mov
cmp
cmp
rol
popf
mov
ss
pop
jg
sbb
jno
adc
jb
push
ins
ror
lods
inc
popf
repnz
jle
imul
cmp
pop
mov
add
lods
and
retf
xchg
addr16
int3
jbe
retf
leave
pop
push
in
loopne
add
sub
xchg
mov
test
data16
inc
fwait
xchg
push
xor
xor
push
jb
dec
adc
push
push
icebp
pop
adc
ja
xchg
inc
cmc
sub
pusha
ficom
cli
(bad)
pop
jns
sbb
aam
jmp
add
fcom
mov
arpl
sbb
imul
inc
les
test
fisubr
mov
(bad)
jge
mov
scas
movs
ja
leave
ficom
mov
mov
les
cld
dec
retf
mov
enter
mov
mov
lea
imul
stos
std
popa
fistp
retf
push
pop
jge
push
mov
ds
jmp
ins
ja
loopne
add
imul
sar
test
add
inc
jne
loopne
push
or
stos
push
jmp
push
mov
mov
dec
sar
retf
sub
int3
add
(bad)
push
jae
xor
int
rcr
retf
leave
ds
push
popf
jle
mov
out
mov
test
fld
and
xor
scas
jl
mov
or
or
call
pop
div
test
push
inc
sub
cwde
dec
jecxz
aad
add
inc
je
es
dec
push
mov
jns
xchg
les
mov
frstor
mov
sbb
pusha
retf
xor
pop
cdq
ret
pop
in
sti
and
push
out
retf
aam
icebp
imul
popa
test
comiss
lock
das
add
hlt
jnp
adc
push
(bad)
call
cld
mov
or
inc
dec
int3
add
daa
push
(bad)
adc
mov
add
sub
retf
mov
jge
jae
rcl
call
or
xor
mov
mov
lahf
xor
inc
sbb
dec
push
mov
jmp
mov
and
imul
movs
adc
stos
call
sub
cmc
jne
fadd
mov
int3
inc
in
cmp
(bad)
adc
pop
ds
adc
jo
inc
ins
scas
(bad)
bound
sub
mov
ss
push
cdq
mov
mov
push
jge
or
mov
lods
mov
lahf
ja
ror
mov
sahf
inc
xchg
int
rcl
rol
and
movs
popf
jb
pop
and
mul
arpl
outs
ins
pusha
pop
stc
dec
iret
(bad)
xor
inc
xchg
pop
bound
cdq
push
add
std
push
pop
or
(bad)
push
retf
test
cld
jno
xor
(bad)
pop
push
loop
(bad)
je
div
lahf
shl
push
mov
sub
adc
jns
(bad)
(bad)
aam
xchg
xor
aam
sub
inc
jno
cmp
or
dec
fild
mov
inc
std
iret
je
jp
jge
fwait
cdq
jp
sbb
add
and
dec
test
(bad)
fst
pop
jne
hlt
xchg
cmc
ins
xchg
mov
mov
fucomip
into
adc
jmp
scas
in
adc
mov
outs
test
sub
iret
dec
repz
movs
leave
push
sub
push
cmp
ja
and
imul
inc
xlat
push
xchg
pop
gs
scas
or
jmp
inc
inc
ja
or
movs
jmp
pop
pop
add
lods
sbb
push
aad
sub
adc
call
sbb
mov
mov
out
sbb
add
movs
pop
dec
sub
punpckldq
cmps
adc
int3
xor
xor
arpl
xor
xor
push
(bad)
xchg
mov
rcr
jne
not
sub
sbb
ret
jne
fist
(bad)
inc
xor
cmc
popw
pop
pop
loope
mov
fxch
push
push
pop
mov
fsub
wbinvd
or
adc
fwait
lods
fwait
mov
mov
mov
xchg
loope
neg
or
pop
adc
jmp
int
push
and
sbb
into
pop
mov
add
cmp
rol
jge
aas
clc
push
push
xchg
adc
cmp
test
sub
push
push
(bad)
sub
xchg
cdq
dec
aad
inc
inc
stos
lock
outs
sub
push
mov
cmp
retf
xchg
ret
dec
hlt
loop
fistp
mov
mov
neg
enter
jo
pop
and
inc
jmp
dec
pushf
test
mov
int
ds
fcmovnb
repz
lds
sub
(bad)
sub
imul
gs
push
push
pop
mov
inc
cmp
pop
outs
xchg
imul
int
hlt
loope
pop
sbb
or
xchg
add
and
mov
or
(bad)
dec
and
inc
adc
mov
imul
push
mov
test
cli
(bad)
push
or
push
das
push
cmp
mov
jae
jmp
outs
mov
inc
mov
xor
imul
jae
lods
jbe
adc
rcr
dec
adc
ja
popf
sahf
xor
fadd
fidivr
cmc
dec
mov
mov
lea
or
jo
mov
ins
adc
fistp
in
add
fisub
sub
adc
iret
lock
enter
out
in
xlat
xchg
jmp
movs
enter
sbb
push
adc
dec
mov
fucomp
mov
dec
rcl
aaa
(bad)
mov
pop
mov
mov
sbb
pop
xchg
add
sbb
pop
scas
inc
hlt
cld
lock
pop
data16
add
push
imul
mov
fadd
add
push
pop
dec
hlt
das
pop
ret
pop
dec
jecxz
jge
adc
add
or
mov
sub
sahf
ins
xchg
mov
inc
std
xor
stc
fnsave
mov
mov
mov
aad
call
scas
rol
lods
mov
lock
cmps
iret
mov
cs
dec
fs
(bad)
rcl
movs
pop
(bad)
test
fimul
scas
(bad)
(bad)
jmp
mov
sbb
sub
xchg
or
ror
mov
xchg
sahf
stc
sub
xor
daa
jl
xchg
jae
jp
pop
ror
and
or
add
jns
fimul
xor
jns
xor
imul
mov
pop
out
jbe
dec
pop
dec
mov
ret
(bad)
mov
in
leave
push
dec
ins
push
mov
outs
push
push
dec
jmp
or
lods
cmp
je
cmp
cmp
dec
popf
push
out
dec
repnz
mov
sub
data16
ret
sti
dec
hlt
bswap
push
pushf
cdq
loope
ins
jno
cs
hlt
cmc
sti
ss
in
xor
dec
stc
rcr
inc
es
aam
xchg
xchg
out
dec
in
js
dec
jb
movs
sbb
imul
mov
mov
(bad)
int3
mov
in
sub
pop
mov
push
ins
xor
mov
xchg
mov
movs
sahf
pop
adc
out
pop
stos
add
leave
nop
(bad)
mov
inc
rcr
cmp
add
jae
mov
xor
mov
iret
stos
adc
mov
movs
js
jmp
inc
pop
cdq
gs
mov
and
inc
jp
outs
imul
data16
fbstp
mov
add
mov
rol
rol
cmps
lea
js
lahf
jmp
xor
cmps
repz
sub
push
shld
mov
dec
push
hlt
mov
xor
stos
fwait
int
dec
loop
dec
fistp
idiv
shl
pop
fdivr
iret
mov
push
jle
(bad)
iret
cld
push
dec
pop
imul
dec
add
div
push
sbb
xlat
adc
test
movlps
mov
popf
pop
add
add
or
stc
aas
xchg
(bad)
call
jl
shl
lahf
sahf
sti
sub
mov
jns
xor
or
push
mov
icebp
pop
push
lahf
pusha
ss
pop
cmp
loopne
fistp
mov
imul
ins
icebp
mov
or
add
addr16
push
and
ret
add
mov
ret
cwde
(bad)
jnp
xchg
daa
shl
dec
(bad)
lea
jl
prefetch
bound
sub
inc
fadd
or
cwde
pop
add
dec
popf
gs
xchg
xchg
rcr
push
or
test
rol
fwait
sub
jne
iret
ins
shl
cmc
mov
xor
and
jae
scas
jecxz
inc
pop
jo
mov
cmp
outs
xor
jge
add
out
push
xchg
pop
push
sahf
fsubr
fs
push
call
mov
jae
push
pop
hlt
jbe
arpl
mov
jge
add
xchg
jnp
push
add
mov
jecxz
dec
push
dec
retf
loopne
clc
jo
addr16
xchg
ins
mov
pushf
aad
xchg
dec
lea
fwait
and
leave
xchg
or
and
fist
loop
dec
and
xlat
int
loop
imul
jp
mov
mov
push
lods
mov
ret
call
cld
mov
adc
lods
jo
pop
lahf
arpl
jmp
ds
sbb
cwde
dec
mov
push
cmp
mov
cli
jnp
push
xor
dec
mov
out
inc
fwait
jp
dec
pop
xor
or
fidiv
mov
or
aam
push
std
dec
hlt
xchg
jo
jns
mov
imul
fwait
xchg
sbb
icebp
stos
(bad)
pop
cmc
rcl
dec
inc
inc
push
call
lahf
sahf
out
dec
retf
mov
mov
outs
std
pop
dec
mov
jo
nop
pop
jmp
xchg
or
out
push
dec
sti
dec
jno
lea
gs
cwde
rol
out
ja
dec
icebp
or
jae
daa
cmp
scas
push
ret
fld
mov
lea
sbb
ds
les
jl
cmp
sub
adc
cs
xchg
retf
cmp
inc
into
inc
xchg
iret
in
leave
push
inc
sub
call
(bad)
sub
sahf
je
out
adc
xchg
mov
cmc
xor
mov
push
int3
fs
mov
cmp
popa
ret
sbb
mov
adc
mov
jmp
jb
cmp
ret
sbb
xchg
shl
and
jns
jle
leave
and
popf
jnp
lahf
dec
pop
jno
jg
inc
inc
ror
mov
pop
xchg
repz
scas
mov
push
test
add
pop
(bad)
hlt
dec
and
mov
jmp
fwait
xor
jae
inc
test
clc
sub
cli
jmp
retf
and
out
mov
pushf
mov
mov
or
and
jmp
jmp
jp
ins
xor
nop
sub
sti
aas
retf
xor
jnp
(bad)
push
test
xor
sbb
dec
(bad)
and
imul
add
xor
push
add
cld
mov
xchg
jecxz
mov
push
sahf
ret
in
test
ffree
push
inc
jge
addr16
mov
xchg
xchg
dec
lahf
je
push
and
mov
lods
pop
icebp
pop
mov
and
int3
and
scas
test
outs
arpl
xchg
push
out
inc
and
jbe
cmp
popf
push
psubb
(bad)
stc
js
mov
mov
push
and
in
scas
cmp
dec
mov
loop
dec
pop
mov
and
dec
ja
jbe
sub
stos
dec
bound
stc
dec
pop
imul
dec
leave
cmp
mov
xchg
cmp
scas
pusha
xchg
mov
jo
mov
add
push
or
push
test
mov
xchg
daa
sbb
xchg
in
stc
push
je
or
test
pop
mov
fld
daa
int3
cs
inc
push
jge
stc
inc
ins
pop
loop
out
xchg
mov
mov
js
mov
xor
cmp
ins
repz
add
sbb
mov
mov
stos
xor
dec
stc
mov
jle
lahf
out
jbe
ror
icebp
imul
jg
inc
jg
sub
je
stos
push
cmp
mov
lock
lds
es
aas
push
nop
dec
sbb
pop
xchg
loope
sbb
int
add
cmp
xchg
stos
mov
out
push
aam
jne
xchg
mov
adc
push
cmp
js
push
mov
lods
xor
fnstcw
lea
loope
cmp
fisttp
stos
out
cdq
add
outs
jge
loopne
out
jbe
es
lea
repnz
pop
cld
pop
xchg
mov
inc
scas
mov
inc
or
cmc
jge
push
cmp
repnz
jns
rol
in
scas
scas
or
jle
sub
call
xchg
int
mov
les
inc
mov
xlat
lods
out
mov
mov
xor
pop
jmp
fsub
mov
mov
pop
mov
xchg
std
inc
repz
inc
shr
or
mov
sub
hlt
cmp
out
cmp
js
lods
jp
js
mov
or
in
in
fdiv
sbb
stc
test
rol
push
xor
mov
pop
bound
int3
cs
jns
not
inc
inc
lock
lds
xchg
ins
and
pusha
dec
jbe
pop
(bad)
movhps
fdiv
adc
push
dec
sbb
push
mov
mov
repz
mov
div
pop
hlt
xchg
cmp
xchg
fwait
cmps
leave
cmc
mov
push
cmp
neg
outs
adc
mov
scas
or
shr
sub
sti
xor
out
cwde
jb
cmps
mov
xchg
in
and
xchg
inc
cmp
mov
popa
hlt
(bad)
sbb
xor
cld
and
unpckhps
xlat
ins
mov
test
jae
into
sbb
mov
jmp
ficom
call
out
cmp
push
test
xor
and
dec
sub
sahf
xor
mov
pop
dec
imul
mov
hlt
sub
div
rcl
xchg
(bad)
pop
lock
loopne
mov
mov
mov
scas
popa
shl
cwde
push
cld
xor
jmp
rol
inc
xor
leave
aam
xchg
sub
das
popa
mov
int
js
mov
or
push
jecxz
xchg
xchg
je
push
call
inc
add
xchg
or
inc
mov
cmp
pop
xor
sbb
inc
enter
mov
imul
mov
jmp
cmp
ret
mov
jle
jae
data16
adc
sahf
mov
ins
cs
clc
push
mov
out
loopne
iret
vpaddusw
pop
jecxz
fnstsw
imul
enter
sbb
enter
adc
and
shr
repnz
retf
push
mov
push
adc
mov
in
inc
mov
out
jg
add
dec
sbb
xor
das
sbb
adc
nop
(bad)
jbe
adc
js
mov
outs
shr
aam
test
out
cwde
pop
jecxz
jae
pop
add
cmp
push
cmp
dec
inc
mov
dec
in
and
pop
push
mov
sub
or
(bad)
mov
sub
add
adc
jno
add
jbe
int3
mov
sub
pop
add
and
clc
(bad)
xor
pop
jmp
push
adc
jp
mov
sbb
test
lods
icebp
push
adc
sbb
jg
push
ja
push
sub
mov
mov
and
popa
xchg
sbb
xchg
icebp
hlt
rcr
xchg
mov
lods
sbb
sbb
mov
icebp
sbb
xchg
xchg
das
(bad)
jne
mov
jne
pushf
fidiv
outs
sub
jmp
xor
push
xchg
int
loop
mov
lock
jno
and
push
call
mov
in
mov
jge
je
jne
ja
mov
or
cld
mov
pop
add
add
js
sbb
sar
icebp
xchg
sbb
lods
mov
movs
daa
test
inc
mov
aas
jp
cld
out
rol
pop
fs
les
mov
xor
mov
xchg
sub
in
jmp
rcr
push
ret
lahf
pop
adc
and
cwde
xchg
mov
inc
cmc
jns
adc
dec
mov
stos
sbb
fistp
mov
inc
div
fldenv
movq
clc
clc
loop
ja
or
lods
cwde
pop
xchg
dec
inc
in
jge
mov
sub
jecxz
xor
out
test
fnstenv
mov
test
or
rcr
push
xchg
ret
bswap
je
ret
pop
dec
into
mov
js
jge
push
pop
xor
addr16
shl
jne
sub
mov
gs
es
stc
and
pushf
sbb
dec
into
stos
sti
xor
hlt
daa
mov
out
out
clc
pushf
jae
xchg
mov
inc
sub
(bad)
pop
sbb
cdq
xchg
out
in
hlt
mov
mov
add
and
push
sbb
pop
xchg
aas
popa
rcr
mov
cs
jg
xor
xchg
outs
adc
xor
enter
out
xchg
rcl
mov
in
dec
jecxz
cmp
cdq
sbb
sbb
pop
repz
jne
push
push
mov
cmp
addr16
or
or
rol
(bad)
pop
pusha
jg
add
inc
pusha
and
cmp
sub
cmp
fwait
inc
sub
and
into
xlat
(bad)
hlt
adc
mov
add
or
and
xor
pop
popf
mov
nop
jmp
push
leave
jle
add
xor
arpl
xchg
push
call
out
inc
xchg
mov
imul
leave
fisubr
addr16
xor
ficom
popf
repnz
sar
pop
popa
test
aam
rcr
dec
pop
mov
fsubr
ins
outs
mov
push
je
jb
or
pop
push
xchg
test
mov
call
fdivr
jns
cmp
(bad)
mov
jns
stos
ds
shl
sbb
jecxz
sub
inc
xor
mov
or
rol
sub
dec
mov
mov
sti
pop
xlat
pop
and
rcl
push
scas
cs
sbb
mov
pop
aaa
sub
in
loope
inc
dec
in
fcomi
jae
xchg
sar
xchg
jae
cli
addr16
fisttp
sub
outs
and
retf
mov
dec
mov
fild
xchg
clc
lahf
and
add
in
inc
push
add
(bad)
cs
xchg
or
cli
mov
add
out
repz
mov
or
adc
fistp
jnp
pop
pushf
inc
dec
cs
es
xor
std
push
push
in
dec
add
cdq
ret
cmp
sub
mov
arpl
xchg
test
mov
pushf
icebp
jnp
aaa
pushf
mov
xlat
(bad)
enter
dec
int
inc
shl
cld
dec
scas
imul
hlt
je
xor
fld
dec
lods
push
ss
push
pusha
inc
in
xlat
cwde
outs
jae
out
adc
cmp
aas
jns
sti
aas
aas
mov
into
xchg
lds
jbe
shr
test
cwde
movs
push
std
inc
aam
adc
mov
call
sbb
push
sub
mov
fldenv
mov
les
ss
int
retf
je
add
pop
push
xlat
cmp
pop
repnz
push
fwait
cs
out
int
mov
call
jb
test
lods
mov
xchg
pop
(bad)
dec
push
scas
int
call
shl
adc
mov
add
push
push
jb
cmp
mov
test
scas
int3
mov
push
fst
fistp
cs
mov
outs
sbb
mov
cmp
xor
pushf
xchg
mov
pop
jl
adc
in
shl
imul
dec
fwait
adc
mov
pop
jne
cmp
adc
push
push
lea
sub
add
enter
push
jae
xchg
enter
sahf
sti
std
adc
int
das
push
out
test
imul
dec
dec
or
sub
push
int
sti
(bad)
adc
pusha
cmps
add
cmp
aam
shl
xchg
cmps
xor
retf
pop
sub
add
imul
aaa
dec
fbld
jl
add
mov
(bad)
push
out
lea
mov
jno
rol
xchg
xchg
int
dec
repnz
(bad)
rcr
dec
jo
xor
in
fwait
cmp
(bad)
rcr
clc
fistp
adc
cld
xchg
xlat
inc
sbb
es
arpl
sub
xor
lds
mov
mov
rol
or
xchg
ja
cld
rcl
cld
mov
mov
outs
cmp
sti
rcl
fwait
mov
shl
lock
push
pop
xor
xor
or
test
int3
inc
outs
cmc
inc
int3
and
outs
repnz
sbb
and
mov
xchg
imul
sub
gs
cli
sub
rcr
setge
aam
leave
pop
int3
arpl
push
movs
mov
cmp
jle
mov
sbb
sbb
dec
inc
fcmovnbe
mov
icebp
sbb
push
je
movs
cs
jge
jp
jae
enter
mov
je
in
mov
movs
or
stos
sub
lds
pop
iret
iret
ja
in
push
jb
loope
xor
sub
shr
sbb
mov
ss
push
sub
mov
icebp
and
push
out
mov
xor
xchg
fnstcw
hlt
add
sub
inc
push
ds
jg
fucomip
jg
or
mov
stos
cmovne
into
retf
jb
gs
imul
imul
cmp
xchg
out
pop
repz
jns
or
(bad)
imul
dec
pop
jns
or
outs
arpl
test
jge
cmp
fadd
mov
mov
mov
mov
xor
cld
rol
pop
(bad)
cmps
(bad)
cmp
jg
mov
dec
fist
adc
clc
movs
bound
std
mov
pop
mov
sti
inc
or
cdq
imul
mov
adc
push
adc
sub
mov
inc
sbb
sti
jecxz
adc
xchg
sbb
out
cmps
es
inc
(bad)
lock
mov
sub
(bad)
cwde
fwait
dec
(bad)
out
push
push
rol
movs
pop
movs
(bad)
ins
out
call
push
inc
call
frstor
movs
xor
enter
call
(bad)
(bad)
pushf
lea
xchg
xchg
(bad)
fist
icebp
and
jne
jnp
push
hlt
fwait
out
mov
aas
arpl
or
sub
mov
mov
sbb
mov
inc
test
xlat
sahf
in
mov
xor
fdivrp
mov
push
mov
add
mov
mov
dec
inc
or
cmp
cmp
cmp
and
cmp
int3
mov
add
and
jl
(bad)
and
mov
(bad)
mov
sbb
(bad)
inc
mov
rol
xchg
imul
les
inc
in
cli
pop
mov
ds
xchg
jae
inc
cmp
mov
push
sub
mov
out
and
cdq
test
mov
outs
jmp
inc
xchg
lods
sub
shr
mov
push
sti
inc
outs
adc
aaa
cmp
dec
loope
jns
lods
ror
pop
cmc
call
loopne
dec
ret
mov
imul
ror
cwde
fcomi
mov
sbb
outs
shl
data16
icebp
sti
sub
int3
push
mov
sbb
rol
arpl
inc
in
xor
aam
xchg
push
mov
push
add
fist
mov
pop
cmps
adc
xchg
cmp
(bad)
hlt
inc
jne
dec
lahf
out
outs
movs
inc
lods
cwde
fs
cmc
sbb
movs
adc
movs
test
ffree
gs
push
mov
cmp
cdq
rcr
add
test
pushf
xor
imul
mov
cmp
into
push
fist
test
add
sbb
adc
sbb
stos
sbb
push
jb
inc
inc
pop
out
out
gs
xchg
push
cmp
xchg
lods
cld
out
cmp
mov
popa
retf
lock
sub
out
jbe
pusha
enter
or
cld
rcr
movs
mov
fsub
pop
or
repnz
neg
or
push
(bad)
jns
or
pop
and
jbe
je
xchg
outs
pop
dec
mov
out
xor
pop
push
and
xor
dec
(bad)
inc
inc
pop
icebp
or
jbe
test
or
(bad)
xlat
adc
or
loope
jmp
mov
inc
or
sbb
movs
cmp
jmp
cmp
lods
lea
cmc
leave
test
mov
cmps
out
lods
in
add
adc
mov
out
gs
fsub
jmp
push
push
lock
push
fst
(bad)
mov
pop
int
call
and
mov
stos
add
cmp
iret
dec
xchg
fnsave
call
les
add
in
cli
mov
inc
xchg
xchg
pushf
xchg
inc
lods
adc
jne
jnp
xor
sub
lds
(bad)
out
rcr
mov
out
cmp
stos
loopne
sub
inc
lods
inc
inc
pushf
jo
and
ss
fnsave
dec
in
lahf
sub
xor
adc
pop
adc
inc
sbb
aaa
dec
loope
cwde
in
adc
nop
and
pop
cmp
loope
stos
push
pop
outs
popf
and
pop
xchg
fwait
repnz
jnp
(bad)
imul
push
cmc
retf
sbb
out
stc
ins
and
sbb
out
sbb
inc
add
pop
mov
xor
ret
sub
xchg
pop
aad
fsub
stos
(bad)
sbb
js
cmps
(bad)
scas
sbb
pusha
js
adc
nop
add
jmp
jp
push
cld
sbb
push
out
push
movs
and
movs
in
pop
cs
pop
in
cs
fsub
xlat
fild
int
test
mov
cmp
(bad)
jg
xchg
shl
mov
in
imul
iret
xlat
std
sahf
cld
mov
enter
fcomi
adc
add
in
std
shl
ins
enter
mov
in
repz
and
loopne
fdiv
scas
inc
push
jge
pop
xlat
dec
dec
aad
pop
sbb
test
mov
fcom
and
lahf
test
imul
xor
pop
sub
adc
(bad)
mov
les
fimul
dec
adc
mov
xchg
call
and
daa
jmp
imul
mov
out
jle
xor
ins
xchg
(bad)
mov
sbb
jl
and
push
sahf
movs
or
mov
dec
retf
in
add
add
ja
mov
adc
adc
ins
add
and
or
nop
pop
mov
mov
pop
mov
hlt
pop
and
sub
test
mov
push
push
outs
fwait
mov
and
ret
sahf
out
push
xor
push
fistp
mov
push
div
js
dec
in
cmp
add
mov
mov
jmp
aas
jne
scas
jbe
push
jmp
pop
nop
xchg
mov
addr16
lahf
and
pusha
das
or
mov
out
ins
mov
cmp
pop
push
adc
cmp
jg
ret
jns
dec
jecxz
push
sub
mov
mov
nop
in
push
ins
sub
imul
xor
(bad)
push
xor
push
jo
pop
data16
cmp
pop
push
ret
fnsave
pushf
push
pop
xchg
(bad)
lock
outs
mov
and
pop
inc
xor
or
mov
movs
inc
jno
call
mov
push
sbb
sbb
dec
cmp
mov
ins
xor
push
or
adc
inc
aad
or
xchg
adc
div
pop
in
xor
cmps
add
pop
aas
ss
call
xor
sbb
jbe
fwait
inc
fisttp
push
das
shl
pop
test
ins
dec
mov
psubw
dec
pop
es
repz
loop
sbb
scas
and
and
sbb
(bad)
jmp
cmps
adc
jo
test
jp
mov
pushf
mov
ja
mov
adc
out
out
dec
dec
ret
jmp
sub
out
ds
xchg
cli
icebp
add
add
inc
aaa
jle
adc
dec
and
mov
mov
repz
jmp
xor
