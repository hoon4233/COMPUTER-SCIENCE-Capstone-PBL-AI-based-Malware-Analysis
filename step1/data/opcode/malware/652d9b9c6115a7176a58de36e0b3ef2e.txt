shr
add
dec
add
add
add
add
and
add
adc
add
sbb
add
add
add
sub
es
sub
es
sub
add
xor
add
add
add
add
sub
es
jb
add
jo
pop
add
jo
adc
or
push
jb
add
jo
push
pop
jb
add
jo
push
sbb
add
jo
push
sbb
add
jo
push
sbb
add
jo
push
sbb
add
jo
push
sbb
ja
add
push
sbb
jo
push
push
jb
add
jo
push
pop
or
add
jo
push
pop
or
add
jo
push
pop
or
add
jo
push
pop
or
add
jo
push
pop
or
jo
push
pop
push
jb
add
jo
push
pop
(bad)
xchg
add
push
pop
adc
add
jo
push
pop
adc
add
jo
push
pop
adc
add
jo
push
sub
add
push
add
lea
add
add
pop
push
add
add
add
mov
pop
add
jo
lea
add
add
push
jb
add
jo
or
jb
add
jo
or
jb
add
jo
or
jb
add
jo
or
push
add
push
sub
add
push
movs
add
add
mov
add
add
add
je
add
sbb
push
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
add
push
jb
add
jo
or
add
push
lea
add
add
or
add
sub
xor
add
add
adc
add
push
sub
add
push
sub
add
push
cmp
add
and
add
cmp
add
add
add
sbb
add
or
xor
add
and
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
cmp
(bad)
(bad)
inc
add
sub
add
push
and
(bad)
(bad)
(bad)
inc
sub
add
push
or
mov
and
add
add
cmp
sub
sub
es
sub
add
xor
add
add
add
add
sub
es
and
add
add
add
sbb
add
or
and
add
sub
add
push
cmp
add
add
and
add
add
loope
add
adc
aas
sldt
add
or
add
cmp
add
add
out
(bad)
call
add
add
add
add
and
add
add
and
add
cmp
sub
add
push
or
adc
adc
add
xchg
add
add
or
pop
add
push
jb
add
jo
lea
add
add
push
adc
push
add
adc
pop
add
lea
add
add
pop
adc
push
jb
add
jo
adc
pop
jb
add
jo
adc
sbb
adc
adc
sub
fnstsw
add
fld
add
add
add
and
add
cmp
jb
add
jo
and
add
je
add
add
sub
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
jmp
add
push
or
dec
add
add
add
(bad)
jmp
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
jmp
add
add
push
add
add
int
(bad)
call
or
add
adc
add
add
int
push
push
add
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
xor
add
add
sub
es
and
add
add
outs
add
add
push
add
add
add
or
or
add
(bad)
jmp
or
add
pop
cmp
add
es
or
or
add
pop
cmp
add
add
add
pop
lea
add
add
push
sub
add
push
cmp
add
and
add
add
push
add
add
pop
pop
or
jne
add
and
add
add
push
add
dec
add
add
add
dec
add
sub
add
mov
add
add
(bad)
(bad)
call
add
add
add
and
cmp
(bad)
(bad)
jmp
push
or
add
add
sub
add
push
cmp
cmp
add
add
pop
add
xchg
pushf
cmp
and
add
push
cmp
pop
add
(bad)
jmp
add
add
push
cmp
sub
xor
add
add
add
add
push
jb
add
jo
adc
or
push
jb
add
jo
push
pop
jb
add
jo
push
sbb
add
jo
push
sbb
add
jo
push
sbb
add
jo
push
sbb
add
jo
push
sbb
jno
add
push
sbb
jo
push
push
jb
add
jo
push
pop
or
add
jo
push
pop
or
add
jo
push
pop
or
add
jo
push
pop
or
add
jo
push
pop
or
jo
push
pop
push
jb
add
jo
push
pop
(bad)
arpl
add
push
sub
add
push
jb
add
jo
push
lea
add
add
pop
push
jb
add
jo
pop
pop
jb
add
jo
pop
sbb
add
jo
pop
sbb
add
jo
pop
sbb
add
jo
pop
sbb
add
jo
pop
sbb
add
sbb
jo
pop
push
jb
add
jo
pop
pop
or
add
jo
pop
pop
or
add
jo
pop
pop
or
add
jo
pop
pop
or
pop
add
pop
pop
or
jo
pop
sub
add
push
adc
lea
add
add
push
add
sbb
add
mov
or
or
add
sub
add
xor
add
add
add
add
adc
add
push
jae
add
or
push
add
add
or
sub
sbb
or
aam
add
pop
add
adc
add
push
push
lea
add
add
and
add
add
dec
add
add
add
jo
lea
add
add
adc
add
adc
adc
jb
add
jo
sub
add
push
and
add
sub
add
push
cmp
add
add
adc
jb
add
jo
add
or
add
adc
sub
add
push
adc
adc
push
sub
add
push
or
add
jo
and
add
pop
lea
add
add
adc
adc
push
mov
add
push
je
add
add
or
add
add
cmp
add
add
add
jo
outs
add
jo
pop
lea
add
add
movups
push
jb
add
jo
adc
sub
add
push
je
add
sbb
sub
outs
add
jo
pop
lea
add
add
adc
adc
jb
add
jo
adc
sub
add
push
je
add
sbb
push
sub
add
push
cmp
and
add
add
add
add
adc
add
add
jo
outs
add
jo
pop
lea
add
add
adc
adc
jb
add
jo
sub
pop
lea
add
add
adc
adc
adc
add
add
push
mov
add
push
je
add
sbb
push
cmp
add
and
add
add
push
sbb
dec
add
add
add
add
add
add
add
add
add
add
add
(bad)
push
(bad)
(bad)
inc
add
idiv
(bad)
(bad)
fadd
add
cmp
add
and
add
add
mov
(bad)
push
add
jo
lea
add
add
or
aas
add
jo
adc
add
sub
add
push
jb
add
jo
lea
add
add
push
adc
push
jb
add
jo
adc
pop
jb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
xchg
add
adc
sbb
jo
adc
sub
add
push
sub
add
push
je
add
add
add
push
or
or
add
sub
add
push
cmp
(bad)
(bad)
jmp
jb
add
jo
movs
add
jo
pop
lea
add
add
or
or
sbb
adc
or
add
and
add
add
out
(bad)
call
or
add
jo
or
adc
mov
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
jo
adc
push
sub
add
push
je
add
add
or
or
add
push
cmp
(bad)
jmp
push
adc
sub
add
push
or
add
and
add
add
inc
(bad)
(bad)
call
add
(bad)
(bad)
jmp
push
add
add
and
add
cmp
(bad)
(bad)
jmp
jb
add
jo
outs
add
jo
pop
lea
add
add
adc
adc
jb
add
jo
adc
sub
add
push
je
add
sbb
add
or
add
sub
add
push
cmp
std
(bad)
jmp
jb
add
jo
sbb
or
add
adc
adc
push
jb
add
jo
adc
pop
jb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
jno
add
adc
sbb
jo
adc
push
jb
add
jo
adc
pop
or
add
jo
adc
pop
or
add
jo
adc
pop
or
add
jo
adc
pop
or
pop
add
adc
pop
or
jo
adc
pop
push
jb
add
jo
adc
pop
(bad)
ja
add
adc
pop
adc
add
jo
adc
pop
adc
add
jo
adc
pop
adc
add
jo
adc
pop
adc
add
jo
adc
pop
adc
imul
push
pop
adc
jo
adc
pop
push
jb
add
jo
adc
pop
pop
jb
add
jo
adc
pop
sbb
add
jo
adc
pop
sbb
add
jo
adc
pop
sbb
add
jo
adc
pop
sbb
add
jo
adc
sub
add
push
jb
add
jo
or
lea
add
add
pop
adc
pop
add
adc
add
mov
add
push
fst
add
adc
adc
sub
add
push
sub
add
push
fld
add
add
inc
sbb
add
add
add
add
mov
add
add
add
push
add
add
xor
sbb
add
or
add
sub
es
add
pop
add
push
or
add
sbb
add
or
add
and
add
sub
sub
es
sub
add
sub
es
sub
es
add
add
push
sub
sub
es
add
sub
add
push
sub
add
sub
es
add
add
or
xor
add
push
add
outs
push
add
or
add
add
sub
es
add
add
outs
pop
add
or
add
sub
es
add
sub
add
sub
sub
es
add
add
or
xor
add
push
add
sub
add
or
add
add
add
push
add
add
push
add
add
or
add
sub
es
add
or
add
sub
sub
es
add
add
or
sub
es
add
sub
add
sub
sub
es
add
add
sub
add
sub
add
sub
es
pop
sub
sbb
add
push
push
sub
dec
sub
es
add
or
add
or
add
adc
add
sub
sub
es
dec
add
outs
or
add
sub
es
dec
add
sub
add
or
add
add
push
add
or
add
or
add
sldt
or
sub
es
add
or
add
adc
add
sub
sub
es
add
or
add
adc
add
sub
add
push
dec
add
dec
add
dec
add
outs
adc
add
sub
push
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
es
add
push
add
or
push
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
es
add
push
add
or
push
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
es
add
dec
add
push
sub
sub
es
dec
add
sub
add
or
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
es
add
pop
add
push
sub
sub
es
dec
add
sub
add
or
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
es
add
push
add
or
push
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
es
add
outs
add
push
sub
sub
es
dec
add
sub
add
or
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
es
add
jnp
add
sub
sub
es
dec
add
sub
add
or
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
es
add
push
add
or
push
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
es
add
push
add
or
push
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
add
sub
es
sub
es
add
popf
add
push
sub
sub
es
dec
add
sub
add
or
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
jle
add
add
cwde
adc
add
push
je
imul
add
add
and
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
inc
push
add
or
add
add
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
pop
add
add
pop
add
add
and
add
push
add
lods
add
push
add
pop
add
add
add
add
push
add
add
add
push
add
add
or
sub
xor
or
push
add
or
or
add
sub
push
add
jno
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
vmsave
add
add
add
add
adc
sbb
add
add
add
adc
sub
fild
sbb
add
add
add
add
add
add
add
add
add
adc
inc
add
add
add
add
add
add
fild
sbb
add
xchg
add
adc
addr16
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
and
add
add
add
pusha
and
add
add
add
add
add
or
xchg
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
add
xchg
add
add
add
add
xchg
dec
add
add
add
adc
push
add
add
add
adc
xchg
add
add
add
sub
add
add
add
add
shr
add
or
adc
mov
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
add
or
adc
jp
add
adc
sub
add
add
add
or
add
add
add
or
adc
mov
add
add
or
adc
inc
or
add
add
add
or
xchg
add
pop
sub
add
add
add
add
add
or
xchg
add
or
add
add
add
add
add
add
xchg
add
or
adc
xchg
sub
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
xchg
add
or
add
add
sub
xchg
add
or
add
add
sub
xchg
add
or
add
add
sub
xchg
add
or
add
add
sub
xchg
add
or
add
add
sub
xchg
add
or
add
add
sub
xchg
dec
add
add
add
add
or
xchg
add
or
add
add
add
or
xchg
add
or
add
add
add
or
xchg
add
fild
adc
pop
sub
xchg
add
fild
adc
pusha
sub
xchg
add
fild
adc
push
add
add
add
add
or
xchg
add
fild
adc
js
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
xchg
add
or
add
add
sub
xchg
add
or
shr
xchg
add
or
fsubr
xchg
add
add
sub
xchg
add
or
call
add
add
add
sub
xchg
dec
add
add
add
add
or
xchg
add
xor
adc
adc
add
or
xchg
add
fild
adc
sbb
add
or
xchg
add
fild
adc
and
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
or
dec
add
or
xchg
add
or
push
add
or
xchg
add
or
pop
add
or
xchg
add
or
pusha
add
or
xchg
dec
add
add
add
add
or
xchg
add
push
xor
adc
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
dec
add
add
add
add
or
xchg
add
add
add
or
xchg
add
push
fild
adc
lock
or
xchg
add
push
fild
adc
clc
add
or
xchg
add
push
fild
adc
add
add
or
xchg
add
push
fild
adc
or
add
or
xchg
add
push
fild
adc
adc
add
or
xchg
add
pand
adc
sbb
add
or
xchg
add
pand
adc
and
add
or
xchg
add
fild
adc
sub
add
or
xchg
add
fild
adc
xor
add
or
xchg
dec
add
add
add
add
or
xchg
add
xor
adc
push
das
add
or
xchg
add
fild
adc
pop
das
add
or
xchg
add
fild
adc
pusha
das
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
js
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
or
xchg
add
fild
adc
enter
or
xchg
add
adc
add
add
das
add
or
xchg
add
adc
add
add
das
add
or
xchg
add
fild
adc
loopne
add
or
xchg
add
fild
adc
call
add
add
add
das
add
or
xchg
add
fild
adc
clc
das
add
or
xchg
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
or
xchg
add
adc
add
add
add
or
xchg
add
adc
add
add
add
or
xchg
add
add
add
or
xchg
add
adc
add
add
add
or
xchg
add
fild
adc
push
add
add
add
add
or
xchg
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
sub
add
add
dec
add
add
add
add
add
jp
add
add
mov
add
add
add
add
add
add
add
dec
add
add
stos
add
xor
adc
xchg
add
sbb
retf
add
sbb
loope
inc
add
add
in
add
or
add
jno
xchg
or
add
or
add
add
xlat
add
or
add
ins
or
or
cdq
add
xlat
add
add
add
add
add
add
add
les
mov
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
stos
add
add
add
or
add
sti
add
add
add
add
stos
add
or
add
add
add
add
add
add
add
add
add
inc
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
arpl
ins
imul
jb
push
outs
imul
ins
add
je
xor
inc
outs
outs
ins
gs
outs
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
push
inc
jae
jae
push
jne
jp
ss
fs
ja
inc
outs
imul
dec
xor
imul
add
push
dec
cmp
inc
push
jo
xor
add
push
arpl
jno
ja
dec
push
dec
jo
jno
add
jns
inc
imul
inc
gs
jo
addr16
inc
jno
bound
addr16
dec
cmp
add
inc
popa
inc
push
pop
jae
dec
add
dec
jbe
ins
cmp
ins
imul
inc
ss
jo
jae
pop
dec
add
push
push
dec
inc
ja
dec
push
add
dec
dec
dec
xor
inc
push
jne
fs
xor
push
push
imul
push
xor
inc
xor
ins
cmp
inc
jne
pop
xor
xor
jb
xor
pop
add
dec
outs
imul
inc
jbe
push
push
xor
fs
ja
dec
jb
ss
xor
pop
inc
pop
jne
arpl
outs
jb
dec
cmp
push
outs
pop
addr16
add
je
add
inc
arpl
push
push
pop
dec
jp
je
push
arpl
push
inc
add
jb
outs
add
xor
push
ins
inc
ins
xor
inc
dec
dec
add
ja
jno
cmp
push
jae
jne
pop
push
xor
inc
fs
push
inc
inc
push
popa
push
inc
dec
inc
dec
add
xor
addr16
ins
add
dec
pop
push
ss
arpl
fs
jne
bound
js
pop
xor
ja
dec
inc
js
push
imul
add
push
dec
dec
cmp
xor
xor
xor
jne
xor
xor
push
cmp
push
bound
push
xor
inc
jne
pop
xor
jne
push
dec
inc
push
cmp
addr16
dec
add
add
outs
jo
jb
jns
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
data16
push
imul
dec
dec
jno
xor
xor
jp
je
outs
outs
add
inc
push
push
push
arpl
pop
push
imul
js
dec
imul
add
aaa
je
dec
jns
jns
imul
ss
push
push
push
jns
jo
add
je
outs
fs
outs
outs
add
ins
push
js
cmp
jno
xor
cmp
dec
push
dec
push
outs
ins
dec
dec
inc
inc
add
xor
pop
ins
gs
ins
inc
add
jno
jb
jo
outs
inc
ins
add
push
push
ss
push
add
dec
aaa
arpl
jae
jae
add
imul
inc
add
inc
dec
push
imul
popa
imul
dec
outs
push
add
push
push
dec
pop
push
arpl
inc
aaa
gs
inc
addr16
dec
push
dec
cmp
jne
inc
add
ss
imul
imul
ins
xor
jae
cmp
push
imul
imul
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
inc
fs
push
dec
ss
dec
inc
push
dec
outs
add
inc
gs
imul
jo
cmp
jo
aaa
ins
add
jae
ins
bound
inc
js
gs
imul
jo
dec
xor
dec
dec
cmp
add
bound
ss
push
xor
jb
gs
inc
push
add
xor
pop
push
inc
outs
arpl
xor
dec
imul
bound
loop
scas
loop
scas
loop
lods
loop
lods
loop
mov
or
loop
stos
loop
lods
loop
mov
or
loop
stos
loop
lods
loop
scas
loop
mov
or
loop
lods
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
scas
add
sub
loop
stos
loop
scas
loop
stos
loop
mov
sub
loop
scas
loop
mov
sub
stos
loop
mov
sub
mov
or
loop
mov
sub
mov
sub
mov
or
(bad)
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
scas
add
je
jns
gs
or
loop
mov
or
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
lods
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
mov
or
(bad)
loop
mov
sub
mov
sub
mov
sub
lods
loop
(bad)
loop
(bad)
loop
scas
add
je
jb
jo
jb
jns
loop
lods
loop
lods
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
mov
or
lods
loop
lods
loop
stos
loop
mov
sub
stos
loop
stos
loop
mov
sub
mov
or
mov
or
(bad)
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
mov
sub
popa
ins
jne
add
sub
scas
loop
stos
loop
mov
sub
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
lods
loop
lods
loop
scas
loop
scas
loop
mov
or
scas
loop
stos
loop
scas
loop
scas
loop
mov
or
lods
loop
stos
loop
stos
loop
mov
sub
or
scas
loop
mov
sub
(bad)
loop
lods
loop
lods
loop
mov
or
(bad)
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
je
outs
fs
loop
stos
loop
lods
loop
stos
loop
lods
loop
mov
or
stos
loop
mov
sub
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
mov
or
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
mov
or
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
mov
or
pop
inc
jno
popa
ins
imul
or
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
mov
or
(bad)
loop
mov
or
lods
loop
mov
sub
lods
loop
scas
loop
stos
loop
mov
or
mov
or
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
mov
or
scas
loop
(bad)
loop
scas
add
gs
imul
dec
imul
je
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
arpl
jae
data16
push
imul
jae
arpl
dec
popa
je
inc
gs
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
stos
loop
mov
sub
scas
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
lods
loop
mov
or
stos
loop
mov
or
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
mov
sub
loop
mov
sub
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
gs
sub
scas
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
mov
sub
mov
sub
lods
loop
stos
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
scas
loop
mov
sub
scas
loop
scas
loop
lods
loop
mov
sub
dec
gs
popa
addr16
sub
(bad)
loop
mov
sub
scas
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
scas
loop
mov
sub
stos
loop
scas
loop
stos
loop
mov
sub
(bad)
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
scas
add
ins
outs
addr16
gs
ins
je
push
jns
je
ins
cs
imul
inc
outs
jb
jae
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
scas
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
stos
loop
mov
sub
loop
scas
loop
stos
loop
lods
loop
mov
sub
loop
scas
loop
scas
add
xor
push
push
cmp
ss
jo
ja
add
push
jno
cmp
bound
push
xor
pop
dec
add
ins
arpl
ja
dec
xor
jo
jno
bound
dec
ja
inc
dec
xor
inc
dec
dec
bound
dec
push
jns
add
jb
popa
jns
push
jno
push
fs
xor
inc
jb
data16
inc
jo
jae
ss
cmp
xor
xor
dec
outs
imul
imul
dec
xor
inc
cmp
ja
pop
add
bound
dec
inc
push
xor
je
inc
pop
add
jae
popa
addr16
outs
js
push
push
push
outs
imul
push
data16
gs
jne
xor
push
popa
ins
jne
add
js
xor
xor
jbe
inc
imul
xor
ss
inc
push
js
dec
cmp
push
xor
add
jp
fs
push
imul
ja
xor
dec
push
je
inc
addr16
jo
ins
push
imul
inc
inc
dec
inc
outs
outs
add
aaa
js
xor
dec
gs
pop
ja
gs
cmp
inc
imul
push
jp
push
je
dec
addr16
popa
inc
xor
jne
xor
xor
dec
push
jo
xor
push
je
xor
xor
add
ins
ss
inc
xor
jp
push
jae
dec
add
inc
xor
jo
push
jne
xor
ins
push
add
push
dec
jp
inc
xor
push
xor
imul
inc
je
add
jb
xor
jno
cmp
push
add
dec
push
dec
push
dec
xor
jbe
ss
inc
pop
inc
outs
pop
dec
jae
add
xor
inc
cmp
popa
add
addr16
xor
jo
pop
addr16
bound
add
dec
pop
inc
inc
pop
dec
ins
xor
push
inc
add
dec
jns
inc
inc
push
aaa
fs
push
inc
xor
add
push
outs
inc
push
xor
popa
dec
push
add
dec
pop
push
jp
arpl
ins
ja
arpl
aaa
arpl
dec
xor
je
pop
outs
dec
outs
jns
inc
dec
add
pop
push
dec
inc
xor
cmp
push
jne
push
push
ins
dec
dec
dec
jns
add
js
jns
inc
dec
push
cmp
ja
ins
dec
jne
aaa
add
inc
imul
dec
push
pop
dec
jns
bound
inc
jno
add
jno
inc
dec
jbe
push
dec
add
gs
pop
addr16
xor
xor
jbe
ins
pop
dec
jbe
dec
push
jne
xor
outs
dec
add
pop
jno
pushw
js
push
xor
jo
dec
dec
js
dec
pop
dec
xor
ins
inc
je
dec
bound
push
imul
xor
add
je
popa
jno
dec
bound
inc
ins
inc
cmp
xor
gs
pop
dec
je
xor
jp
cmp
add
bound
xor
push
aaa
cmp
xor
ja
inc
xor
inc
imul
push
ins
popa
fs
ins
dec
xor
xor
imul
aaa
push
dec
inc
add
outs
xor
imul
jb
dec
arpl
jae
push
add
dec
xor
cmp
ja
xor
push
pop
add
pop
push
dec
js
jp
dec
push
xor
jp
dec
add
ins
popa
jo
dec
xor
ins
jae
ss
xor
inc
ja
dec
dec
push
pop
arpl
xor
inc
gs
ja
js
inc
jp
dec
outs
push
je
pop
outs
ss
add
imul
imul
cmp
inc
jbe
popa
popa
bound
inc
ins
outs
arpl
dec
add
jae
ins
gs
js
dec
outs
pop
add
jne
push
push
inc
dec
dec
imul
inc
aaa
add
popa
arpl
dec
cmp
xor
add
inc
inc
push
jne
jb
add
push
dec
push
outs
xor
bound
jns
add
cmp
jp
addr16
add
fs
dec
xor
js
imul
inc
aaa
jns
push
dec
inc
ins
inc
jno
add
dec
dec
ins
je
jp
push
outs
jne
jo
pop
dec
addr16
je
push
inc
xor
data16
dec
inc
add
inc
js
push
dec
cmp
xor
dec
push
push
xor
jbe
ja
js
inc
push
jp
data16
dec
add
dec
ins
aaa
pop
cmp
inc
jno
push
dec
inc
xor
jno
outs
bound
dec
dec
cmp
add
push
bound
arpl
dec
xor
fs
jno
push
add
cmp
ins
data16
ins
dec
arpl
pop
aaa
push
push
popa
push
ins
jne
ja
dec
outs
add
js
push
jb
push
inc
xor
push
je
add
inc
dec
jo
jb
cmp
inc
dec
add
dec
push
bound
inc
dec
je
cmp
jbe
outs
arpl
arpl
inc
dec
inc
ss
je
add
ss
pop
dec
dec
jbe
aaa
dec
jo
dec
push
add
push
xor
jbe
xor
arpl
xor
cmp
dec
add
cmp
imul
js
inc
ins
push
addr16
xor
ja
jns
push
dec
jo
push
pop
jae
inc
inc
inc
jne
dec
inc
inc
cmp
pop
imul
push
jp
xor
xor
inc
js
push
inc
ja
fs
push
add
inc
jb
dec
xor
xor
dec
js
add
push
xor
push
jae
gs
addr16
outs
jp
ins
add
ins
dec
push
jne
xor
js
inc
xor
dec
arpl
aaa
xor
je
inc
bound
jno
jae
push
push
push
bound
ss
jae
dec
add
push
dec
ss
dec
ins
xor
dec
push
inc
add
js
inc
xor
jno
popa
jno
inc
inc
dec
add
push
push
dec
dec
dec
ja
je
js
ss
inc
addr16
add
jbe
jne
push
imul
js
add
dec
jns
aaa
dec
push
dec
cmp
add
push
ins
ss
push
dec
jb
inc
arpl
ins
dec
xor
outs
inc
push
pop
outs
imul
outs
push
dec
add
jo
inc
outs
cmp
aaa
xor
add
inc
jno
jb
inc
push
dec
dec
dec
jno
je
add
jbe
xor
dec
outs
push
aaa
dec
add
push
outs
push
dec
bound
push
push
dec
cmp
gs
inc
add
jns
arpl
push
push
fs
ins
pop
dec
add
inc
push
pushw
xor
xor
pop
push
inc
cmp
jno
push
ins
jns
push
dec
add
js
data16
outs
inc
inc
arpl
add
push
cmp
outs
je
add
dec
xor
jno
xor
outs
pop
dec
inc
dec
inc
outs
jns
push
add
push
inc
jb
aaa
ins
imul
push
jne
jne
je
xor
ins
push
bound
add
push
push
imul
inc
jae
ins
jno
add
jp
je
inc
inc
xor
dec
xor
push
xor
dec
push
dec
arpl
dec
xor
imul
gs
mov
in
popf
in
mov
mov
in
xchg
in
popf
in
scas
in
xchg
in
and
stos
in
mov
mov
in
mov
mov
in
movs
in
mov
jb
jae
jne
arpl
add
jbe
jb
imul
inc
outs
fs
je
jb
bound
add
jae
gs
cs
arpl
imul
ins
inc
jb
popa
jns
je
jb
bound
add
add
add
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
inc
add
jns
jo
je
outs
add
add
outs
add
data16
jb
ins
add
add
add
add
add
popa
add
add
add
jae
add
data16
add
add
ins
add
add
add
imul
add
inc
add
add
add
imul
add
add
add
add
add
add
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
jns
ins
add
add
add
arpl
inc
add
add
jb
imul
ins
add
pop
inc
add
add
je
add
add
jb
jns
jo
je
outs
add
add
jbe
outs
add
add
pop
outs
add
push
add
jb
popa
add
add
add
jae
add
dec
add
ins
add
add
push
add
add
add
je
add
add
add
add
add
add
jbe
add
inc
add
add
add
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
imul
add
add
add
outs
add
add
add
pop
dec
add
jns
add
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
jae
jae
add
bound
ins
add
add
dec
add
popa
add
inc
push
add
jae
je
add
add
add
outs
add
jb
arpl
add
add
add
outs
add
jb
arpl
add
popa
add
popa
add
add
add
inc
add
je
dec
add
push
add
je
add
pop
dec
popa
dec
inc
dec
jge
cmp
dec
pop
dec
jbe
gs
pop
dec
sbb
dec
pop
dec
pop
dec
xor
dec
je
jae
jbe
sbb
dec
ja
push
dec
imul
xor
dec
sbb
dec
cmp
dec
push
dec
cmp
dec
imul
push
dec
fs
jo
sub
dec
dec
dec
push
dec
jno
pop
dec
sbb
dec
inc
dec
or
dec
push
dec
and
dec
xor
dec
pop
dec
dec
dec
jns
es
adc
dec
inc
dec
push
dec
pop
dec
das
dec
inc
dec
add
push
add
jae
je
add
add
je
jb
imul
pop
add
add
inc
add
je
push
add
ins
add
add
xor
push
dec
pop
dec
ds
push
dec
add
dec
pop
dec
das
dec
push
dec
inc
dec
or
dec
outs
dec
or
dec
jbe
inc
dec
and
dec
ds
adc
add
das
push
add
jae
je
add
add
add
add
add
outs
add
add
add
add
add
or
ins
add
add
add
inc
add
add
add
dec
dec
imul
dec
dec
dec
inc
dec
jg
pop
dec
and
dec
add
dec
cmovle
jo
gs
dec
dec
jge
add
dec
push
dec
or
add
add
dec
add
add
add
add
add
add
lds
stc
and
out
inc
xchg
mov
jb
hlt
idiv
add
je
ins
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
add
or
add
add
or
xor
mov
add
or
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
and
add
add
add
add
sbb
or
add
push
add
sbb
push
add
add
sbb
pop
add
and
add
push
push
sbb
sbb
pop
or
and
sub
or
add
or
add
add
add
add
sbb
sbb
sbb
sbb
pop
add
add
sbb
and
add
add
push
das
pop
sbb
sbb
sbb
xor
sbb
push
sbb
sbb
sbb
sbb
sbb
push
sbb
add
sbb
push
push
pop
add
and
add
push
sbb
adc
adc
sub
and
adc
push
or
add
adc
sbb
sbb
add
sbb
adc
sbb
add
sub
push
push
or
adc
push
sbb
pop
jg
aad
cmp
add
adc
add
adc
add
add
add
push
or
add
sub
add
sbb
and
sbb
add
sbb
add
adc
push
add
sbb
sbb
push
and
sbb
sbb
add
add
cmps
cmp
push
outs
pop
push
or
pop
in
rcpps
fist
adc
jp
sub
dec
mov
test
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jae
gs
cs
je
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
mov
xchg
daa
pop
fbld
mov
mov
mov
jle
mul
pusha
sbb
lock
imul
retf
mov
aaa
mov
outs
pop
push
inc
cmps
out
das
inc
out
mov
pop
mov
fwait
popa
arpl
mov
add
add
add
adc
add
and
add
add
add
xor
add
pushf
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
push
add
add
add
loope
add
xchg
add
add
add
add
dec
add
dec
xor
dec
and
dec
inc
dec
jle
jge
xor
jl
or
dec
jbe
pop
dec
inc
dec
jo
inc
dec
pop
dec
pop
dec
jp
dec
jo
xor
ins
dec
xor
and
dec
jge
push
dec
xor
dec
jnp
cmp
dec
push
dec
add
add
cs
jne
add
sbb
dec
dec
dec
jns
outs
dec
dec
dec
xor
dec
daa
dec
dec
dec
adc
push
dec
dec
dec
sub
dec
gs
jp
push
dec
js
pop
dec
aad
add
dec
or
dec
adc
dec
jo
jb
aas
dec
dec
dec
es
bound
dec
add
dec
dec
dec
inc
dec
pop
dec
pop
dec
add
adc
push
dec
pop
dec
xor
dec
push
dec
pop
dec
pop
dec
cmovle
dec
dec
dec
dec
pop
dec
or
dec
pusha
dec
push
inc
dec
ins
dec
pusha
imul
cmovle
dec
or
pop
dec
dec
dec
jbe
addr16
outs
dec
arpl
dec
push
dec
xor
dec
pop
dec
pop
dec
adc
jae
dec
outs
dec
or
dec
xor
dec
dec
dec
and
push
dec
sbb
dec
and
dec
jmp
pop
dec
push
dec
inc
dec
jo
add
dec
jbe
addr16
push
dec
adc
dec
addr16
push
dec
pusha
dec
cmp
dec
adc
dec
jo
adc
dec
and
cmp
dec
push
dec
jg
aas
dec
or
sbb
pop
dec
push
dec
push
fiadd
add
adc
cmp
dec
je
adc
dec
dec
js
inc
dec
sub
dec
imul
sbb
dec
add
xor
dec
popa
dec
sbb
dec
sbb
dec
sub
dec
dec
dec
es
mov
add
dec
adc
dec
inc
dec
inc
dec
or
dec
pusha
dec
xor
dec
ds
fs
cmp
dec
and
dec
jno
add
dec
cmp
dec
cmp
dec
dec
dec
add
dec
ins
dec
sbb
aaa
dec
jle
add
dec
dec
dec
inc
dec
jb
push
dec
and
dec
mov
and
dec
adc
dec
sbb
dec
push
dec
pop
dec
gs
or
dec
dec
add
dec
sub
adc
dec
xor
inc
dec
es
xor
push
dec
and
dec
loopne
add
sub
dec
adc
dec
adc
dec
dec
adc
adc
dec
pop
dec
push
dec
inc
dec
or
dec
pop
dec
js
arpl
dec
xor
dec
cmp
dec
ss
aas
dec
cmp
dec
ja
push
dec
xor
dec
xor
sbb
dec
inc
dec
add
dec
sub
dec
adc
dec
inc
dec
pop
dec
pop
dec
pop
dec
sub
dec
pop
dec
jne
push
dec
cmp
out
add
inc
xor
xor
jle
inc
dec
sub
dec
sub
dec
push
dec
or
inc
dec
adc
dec
cmp
xor
dec
daa
dec
and
dec
add
dec
xor
dec
pop
dec
push
dec
addr16
pop
dec
or
dec
sbb
dec
sub
adc
add
sub
dec
push
dec
inc
dec
pop
dec
sub
dec
ds
adc
dec
and
jg
inc
dec
adc
dec
pop
dec
jb
jb
pop
dec
and
dec
pop
dec
test
add
ins
dec
pop
dec
push
dec
cmp
dec
imul
push
dec
fs
jo
sub
dec
dec
dec
push
dec
jno
pop
dec
sbb
dec
inc
dec
or
dec
push
dec
and
dec
xor
dec
pop
dec
dec
dec
jns
es
adc
dec
inc
dec
push
dec
pop
dec
das
dec
inc
dec
gs
add
inc
inc
dec
bound
dec
pop
dec
pop
dec
and
dec
sub
dec
dec
dec
pop
dec
push
dec
or
dec
or
dec
or
dec
jbe
sbb
and
dec
daa
dec
bound
dec
pop
dec
js
ds
or
dec
sbb
cmp
dec
mov
dec
imul
dec
dec
dec
inc
dec
jg
pop
dec
and
dec
add
dec
cmovle
jo
gs
dec
dec
jge
add
dec
push
dec
or
loop
add
dec
dec
dec
inc
dec
pop
dec
dec
dec
xor
dec
and
dec
sbb
dec
outs
dec
pop
dec
or
dec
pop
dec
adc
dec
cmp
dec
add
aas
dec
pop
dec
imul
dec
jnp
ins
dec
push
dec
outs
dec
jbe
push
dec
jge
pop
dec
adc
jns
push
dec
jb
add
cmp
popa
dec
inc
dec
jge
cmp
dec
pop
dec
jbe
gs
pop
dec
sbb
dec
pop
dec
pop
dec
xor
dec
je
jae
jbe
sbb
dec
ja
push
dec
imul
xor
dec
sbb
and
add
push
pop
dec
adc
dec
inc
dec
pop
dec
pop
dec
add
dec
jns
dec
dec
or
dec
or
dec
sbb
dec
push
dec
xor
dec
dec
dec
or
dec
push
dec
ss
add
add
cs
dec
push
dec
ins
dec
ds
pop
dec
add
dec
inc
dec
jg
pop
dec
ins
dec
sbb
dec
pop
dec
fs
xor
dec
add
dec
dec
dec
inc
dec
cmp
dec
retf
add
jo
and
dec
push
cmovle
gs
jge
sub
dec
or
dec
or
dec
inc
dec
xor
dec
and
dec
dec
dec
pop
dec
sbb
sahf
add
dec
jbe
push
dec
add
dec
push
dec
sbb
dec
cs
inc
dec
and
dec
jnp
cmovle
push
dec
jo
das
dec
inc
dec
pop
dec
dec
dec
pop
dec
pop
dec
inc
dec
xor
jbe
pop
dec
sbb
dec
gs
dec
dec
pop
dec
cmp
cmp
add
dec
push
dec
jp
add
dec
ja
gs
dec
dec
xor
dec
push
dec
add
dec
and
dec
dec
dec
sub
jge
and
dec
dec
dec
inc
dec
jbe
or
dec
addr16
inc
dec
pop
dec
push
dec
or
dec
cs
or
dec
sub
dec
xor
dec
sbb
push
dec
or
add
and
cmp
add
ins
mov
pop
arpl
adc
bnd
cli
mul
mov
rcl
dec
xor
mov
or
mov
jb
sub
mov
push
fidivr
dec
scas
add
mov
neg
pop
jmp
hlt
inc
xchg
pop
int3
retf
xlat
fdivr
fbstp
ret
and
mov
sahf
aad
and
vmread
es
adc
mov
retf
in
xchg
inc
mov
daa
xor
xor
and
sahf
lahf
push
mov
pusha
in
(bad)
icebp
add
inc
stos
sub
mov
adc
sbb
mov
pop
xchg
imul
out
cmp
lock
sbb
stos
mov
sub
jge
jmp
add
mov
test
dec
nop
je
mov
sbb
popf
fs
jmp
or
xchg
pushf
jb
dec
add
jmp
and
dec
dec
test
sar
(bad)
mov
imul
lea
(bad)
mov
mov
mov
adc
shl
(bad)
xlat
push
or
inc
jge
pop
sar
leave
mov
shl
mov
or
movs
loope
enter
xchg
xor
cmps
add
jb
pop
mov
adc
mov
ins
inc
iret
fst
or
dec
jecxz
pusha
sub
jns
bound
ins
dec
mov
mov
in
push
lock
dec
mov
push
push
loopne
(bad)
sbb
in
pop
inc
xchg
cmp
je
sbb
pop
adc
push
outs
sbb
ds
mov
add
jns
inc
ret
inc
push
pusha
in
pop
jmp
rcr
xchg
shl
fld
jmp
cmp
call
mov
push
adc
int
pop
adc
out
in
mov
mov
inc
out
es
xchg
add
jmp
inc
xchg
gs
inc
cmp
pop
push
sbb
into
nop
cmp
nop
jmp
test
cwde
add
mov
push
imul
pop
sar
mov
lods
mov
movs
jl
add
jmp
aas
mov
repnz
mov
xor
jp
popf
(bad)
sbb
lods
cmp
cmp
push
jbe
aaa
inc
cs
add
xor
imul
push
mov
scas
xor
or
mov
mov
inc
mov
fcom
inc
mov
gs
xor
pop
xor
dec
jg
stos
inc
jmp
jmp
dec
add
push
push
sti
rcl
aaa
inc
pop
dec
xchg
ss
sti
(bad)
fcom
jmp
mov
mov
pop
sub
cmp
int3
fs
or
jae
push
sahf
loop
sbb
jno
or
nop
scas
and
sub
aaa
aam
adc
sub
aad
mov
pushf
jo
outs
or
mov
pop
push
stos
add
sub
adc
leave
fwait
push
test
and
loopne
int
pop
xor
adc
pop
push
scas
jb
sti
dec
jmp
cmp
sub
call
in
or
xlat
(bad)
jne
mov
mov
loope
dec
cld
jbe
push
loope
mov
add
aaa
and
xor
adc
popf
pushf
fbld
sbb
mov
jle
sbb
mov
mov
retf
adc
test
std
not
jmp
add
mov
dec
jmp
fwait
pop
mov
push
mov
jo
dec
bound
lock
fld
jb
inc
mov
xchg
or
sbb
xchg
out
mov
cwde
add
jnp
sahf
jg
jae
jo
cmps
lock
jnp
sub
sub
mov
popa
fst
pop
adc
or
xchg
push
dec
jbe
out
or
int
cmp
test
jl
das
fmul
mov
pusha
push
inc
fimul
xchg
push
add
xchg
xchg
cmp
mov
push
into
repnz
out
sti
cmp
lock
nop
gs
add
mov
mov
or
(bad)
in
mov
or
inc
xchg
movs
les
push
xor
out
cs
popf
xchg
push
pop
stos
mov
sbb
xchg
add
aas
les
xchg
inc
ja
ffree
and
shl
cmp
and
sbb
and
ret
push
cdq
push
xchg
push
(bad)
in
sbb
pop
(bad)
ret
push
mov
test
mov
jmp
pop
push
mov
lahf
mov
xchg
retf
mov
mov
inc
and
pop
or
fs
push
aas
cmp
int
test
aaa
lods
add
push
cmp
iret
xchg
push
(bad)
js
push
mov
pushf
clc
pop
or
mov
jns
rcl
out
adc
push
mov
lods
in
(bad)
pop
mov
std
push
and
mov
pop
fs
xchg
xchg
cmp
idiv
clc
jl
les
inc
fs
nop
test
push
loope
inc
add
stc
sbb
sub
and
inc
adc
fdivrp
pop
dec
nop
jnp
call
and
loopne
test
pushf
div
imul
inc
sub
std
dec
and
sub
sbb
mov
(bad)
mov
mov
jbe
add
xchg
cmp
inc
lods
js
cwde
popa
loop
mov
(bad)
mov
sbb
fucomp
nop
js
jbe
not
cmp
retf
arpl
adc
sbb
mov
int3
push
push
out
shl
ficom
cmps
pop
sbb
and
or
sub
pop
xchg
push
xor
scas
mov
stos
jmp
(bad)
repnz
dec
push
mov
pop
bound
xchg
cmps
jmp
push
addr16
xor
jmp
xor
push
scas
popa
ja
or
lock
or
dec
pop
daa
ins
fist
xchg
(bad)
add
ror
mov
sti
cdq
add
cmp
fs
push
sub
xchg
cmp
sub
test
test
les
and
(bad)
data16
mov
add
js
cmp
jecxz
pop
repnz
inc
sti
mov
xor
stos
cmp
jmp
inc
xchg
lea
aaa
dec
mov
aam
and
push
or
dec
mov
pop
fsub
popw
xor
scas
xor
fmul
push
pop
in
add
arpl
test
sub
inc
push
dec
and
and
and
dec
call
mov
rcl
imul
clc
mov
std
xor
repnz
imul
and
add
mov
(bad)
xchg
pop
pop
gs
and
ins
aam
cmps
mov
loope
mov
ror
xor
cmp
int
pop
(bad)
repz
std
ret
lods
pop
data16
mov
xchg
rcr
pusha
retf
(bad)
mov
cld
in
mov
inc
fsubp
mov
sbb
mov
cmp
push
ds
push
js
test
xchg
pop
xor
jae
xchg
jae
pop
jae
add
pop
push
adc
outs
out
mov
push
and
add
pop
inc
cmp
jmp
lods
in
sbb
add
and
inc
retf
call
jl
and
push
stos
mov
xchg
out
aaa
jnp
jmp
bswap
outs
test
sbb
push
xor
aad
stos
and
xor
cmp
inc
mov
push
push
(bad)
and
out
push
jb
stos
mov
fnsave
into
adc
outs
call
pop
cmp
cwde
jae
lds
nop
out
repnz
je
sahf
pop
nop
movs
pusha
sub
pop
pop
das
add
and
popa
jns
inc
sbb
lock
add
fdiv
inc
idiv
sar
push
(bad)
adc
cwde
sub
test
cmp
fimul
inc
fmul
and
jns
outs
jo
push
mov
pop
js
mov
lea
out
call
fadd
jae
scas
lea
jne
add
rol
into
lods
cmp
lea
push
or
and
ins
cmp
mov
jge
shl
out
add
shr
lock
popa
ins
mov
nop
or
mov
xor
xchg
(bad)
mov
mov
outs
in
je
dec
outs
cmps
ds
push
mov
shl
fdivr
aaa
xchg
inc
(bad)
(bad)
inc
neg
enter
(bad)
cmp
cmp
fidivr
jl
inc
mov
ret
inc
in
add
jne
push
or
shl
retf
add
scas
cmp
mov
mov
icebp
mov
loop
push
ins
sub
(bad)
push
ret
push
iret
sbb
xor
mov
leave
test
cmp
and
loop
int
sti
test
imul
or
mov
mov
aas
stc
mov
jl
fstp
icebp
dec
xchg
sahf
mov
leave
test
or
push
mov
push
pop
ret
loopne
jecxz
iret
rcr
cmps
and
push
cmp
data16
pusha
pop
gs
pop
fs
fdivr
das
test
pop
(bad)
xchg
test
cdq
stos
popf
movs
mov
adc
icebp
inc
fsubr
xor
mov
adc
mov
mov
fnstsw
dec
adc
xor
call
fs
dec
jns
xchg
and
jmp
or
push
push
push
pop
push
lds
pushf
jo
and
adc
movs
stc
int
push
adc
cs
or
jnp
jmp
sub
pop
add
ins
aad
pop
ret
and
jle
stos
sub
adc
jge
add
ret
retf
pop
or
inc
std
push
inc
pop
imul
cmp
rcr
out
enter
adc
shr
and
push
call
ins
enter
push
xchg
push
rep
or
or
pusha
repnz
jne
mov
stos
and
adc
lds
lods
jge
xchg
les
add
imul
out
mov
test
shl
jmp
movs
mov
es
call
xor
movs
pop
lock
jl
xor
cdq
jbe
cmps
imul
pop
or
mul
imul
stos
aaa
fwait
cld
or
dec
cli
adc
push
push
cmp
jle
jne
hlt
xchg
xor
add
aad
xchg
movs
jae
jmp
fcom
sub
cmp
mov
jno
xor
mov
or
lahf
jo
cmp
or
addr16
sub
push
or
clc
xor
dec
mov
test
xchg
fisub
sub
sub
hlt
jle
in
daa
(bad)
loop
test
ss
jle
fisub
push
sar
jmp
loope
dec
push
mov
jo
mov
ja
cmps
xor
sbb
cmc
dec
pop
ins
adc
add
sbb
ficom
pop
in
xchg
cmp
lea
cwde
dec
cmp
nop
pushf
jecxz
adc
cmp
jmp
leave
cmp
and
frstor
(bad)
call
add
push
les
stc
(bad)
cmp
xchg
ret
sub
leave
movs
loop
cmc
xor
sbb
cdq
sub
jecxz
cmp
test
jl
int
and
sti
pop
ror
adc
jne
add
xor
jl
jmp
aam
sysexit
push
mov
or
icebp
push
stos
inc
push
cmps
mov
clc
add
imul
jbe
lock
daa
xchg
pushf
push
js
mov
cmc
in
mov
sar
data16
inc
mov
jns
mov
jne
idiv
jbe
in
cmps
xor
js
push
ins
pop
rol
pop
push
iret
in
stos
inc
call
xlat
or
mov
aas
in
aad
cmps
pop
and
ins
xor
sbb
daa
imul
arpl
dec
mov
(bad)
(bad)
push
cmp
pusha
sbb
sub
mov
or
inc
dec
inc
inc
sbb
cmp
xor
add
sbb
retf
hlt
adc
inc
jns
pop
clc
add
sbb
ja
push
sub
mov
add
jge
lock
and
pop
mov
scas
fisubr
mov
lods
jo
outs
mov
push
push
les
pop
jl
adc
sahf
out
sbb
imul
mov
scas
mov
outs
fidivr
mov
pop
ins
push
les
in
push
(bad)
mov
das
mov
aad
xor
dec
out
imul
dec
ja
imul
xor
xchg
and
std
sbb
gs
sti
pop
fidiv
daa
mov
dec
add
push
out
shr
mov
dec
clc
out
pusha
fmul
loopne
pop
mov
xchg
mov
cmps
fadd
pop
adc
inc
lods
dec
mov
inc
add
jbe
xchg
cmp
adc
(bad)
neg
aam
adc
cmp
shr
sub
pushf
pop
repz
jae
ret
sub
cmp
out
cmp
push
mov
ret
xchg
mov
xchg
cmp
call
ret
mov
fwait
mov
push
inc
jmp
jl
jb
enter
mov
repz
and
adc
dec
inc
or
das
xchg
test
xchg
mov
lods
mov
into
call
mov
mov
lahf
std
(bad)
(bad)
cmps
ficom
ret
fld
xor
xor
push
pop
mov
sbb
in
inc
ret
shl
sahf
div
inc
pusha
lods
in
pushf
bound
jecxz
ffree
push
stos
jno
cmp
or
adc
daa
aad
sbb
xchg
sbb
cli
add
mov
xor
test
lods
sub
xchg
or
pop
in
pop
add
dec
dec
movs
je
out
inc
sti
jns
pop
mov
inc
in
test
lock
popa
pop
and
cmp
fimul
push
sbb
out
pop
sbb
mov
sbb
int
ret
xor
outs
pop
sbb
or
retf
or
lods
in
mov
call
mov
repnz
shl
inc
cmp
lods
call
mov
bound
push
out
inc
inc
push
loope
mov
das
xchg
push
in
aaa
jno
ret
adc
test
pop
icebp
idiv
dec
add
xchg
inc
xor
lock
ror
mov
push
test
xchg
cwde
mov
fild
mov
lahf
mov
adc
test
imul
pop
add
inc
into
popf
jns
(bad)
jle
aad
pusha
loope
out
lods
cmps
hlt
and
mov
jne
sbb
and
mov
jle
test
sbb
mov
mov
mov
inc
cdq
popf
mov
sub
loopne
(bad)
jl
jns
cwde
movs
sbb
sti
jmp
pop
mov
sub
inc
push
out
adc
pop
jg
(bad)
stc
mov
xchg
or
aam
int
and
sbb
xor
dec
add
mov
inc
push
test
shl
jne
mov
mov
dec
addr16
xchg
fcmovnbe
mov
jmp
and
int
cli
ret
aas
in
adc
rcr
sti
mov
mov
jmp
dec
ins
loope
cmp
outs
sbb
test
cmp
stos
inc
lods
outs
sbb
xchg
movs
mov
xchg
cmps
mov
call
mul
call
and
aas
adc
or
add
cmps
(bad)
retf
xor
pushf
or
sbb
inc
adc
and
xor
xor
gs
imul
xor
jns
stos
sbb
xlat
jmp
pushf
aas
test
dec
push
retf
xlat
retf
xor
push
shl
addr16
add
mov
jecxz
ins
into
outs
popf
out
test
or
mov
adc
pop
jecxz
mul
jbe
or
outs
stc
pop
sub
test
pop
leave
sub
sbb
test
mov
fidivr
push
add
clc
movs
out
pop
jge
sar
xor
int3
int3
ror
dec
dec
rcl
mov
cdq
fdiv
cmc
dec
pop
cmp
cmc
fdivr
or
sbb
ds
dec
sub
jae
sahf
push
and
stos
cmp
out
cmp
loop
push
xchg
jns
outs
adc
loopne
push
push
lahf
ins
jmp
sbb
mov
jno
jae
pop
cmp
jle
jbe
jle
dec
daa
adc
popf
mov
and
mov
fild
test
call
cmp
inc
cmp
and
push
mov
mov
pop
add
fisttp
mov
adc
cld
jg
xor
(bad)
ins
jb
int
pop
jne
scas
pop
loopne
or
xchg
cmp
fs
(bad)
sbb
punpckhdq
call
stos
fidiv
mov
pop
cli
push
cdq
pop
test
aaa
pop
fsubr
push
xor
push
retf
xor
add
or
jne
call
outs
retf
jmp
inc
ss
mov
mov
(bad)
scas
(bad)
stos
aas
aaa
enter
adc
call
jo
scas
daa
push
sar
jb
mov
xchg
pusha
cmps
push
xor
rcl
aas
cwde
mov
sub
mov
aam
sbb
xor
leave
bound
mov
js
push
xchg
(bad)
rol
je
jmp
sub
les
xchg
jmp
push
bound
pusha
leave
sbb
mov
xlat
ja
xor
xor
stos
retf
push
pop
(bad)
mov
sbb
cdq
xchg
(bad)
and
add
scas
loopne
push
xchg
or
stc
inc
stc
cmp
inc
in
es
or
cmp
clc
dec
or
les
sbb
cmc
in
xor
ret
push
dec
mov
sub
lahf
jae
call
jae
fcomp
jecxz
fwait
shl
pop
inc
popf
xchg
into
mov
xchg
cmps
test
adc
inc
ret
jno
pop
enter
jmp
mov
jb
inc
jb
add
pop
and
or
out
jmp
sbb
stc
popf
cmps
mov
(bad)
mov
(bad)
push
inc
std
fsubr
sbb
dec
add
dec
mov
shl
(bad)
cmp
and
xor
mov
(bad)
out
ja
sub
sub
adc
arpl
jae
xchg
and
pop
adc
bound
les
xor
adc
nop
pusha
and
sub
mov
inc
jg
cmp
stos
ficom
std
retf
mov
out
add
cmps
stos
mov
push
or
xchg
dec
add
sub
mov
mov
cmp
out
mov
not
adc
adc
and
lods
sar
mul
cmp
cmp
sub
xor
inc
cdq
mov
jo
(bad)
in
or
jp
mov
out
sbb
movs
and
mov
lds
jle
ins
outs
xchg
cwde
leave
aam
(bad)
mov
adc
mov
jmp
mov
jmp
mov
(bad)
adc
sub
lods
lods
shl
add
js
sub
mov
test
cmps
(bad)
mov
or
sub
and
jge
gs
mov
push
cmp
into
xor
ja
je
inc
sti
or
pop
push
mov
or
mov
outs
adc
cmp
(bad)
pop
arpl
push
jmp
fwait
jl
pusha
bound
add
sbb
outs
repz
icebp
mov
popf
dec
aas
pop
and
lods
xrelease
add
fimul
xor
aad
pop
xor
push
push
scas
popa
ror
dec
int3
test
loope
and
add
sbb
cmps
push
mov
cmps
jl
jnp
movs
cmp
scas
inc
mov
inc
inc
retf
gs
xchg
cmp
xor
or
mov
sbb
repnz
cmps
inc
clc
icebp
sbb
aam
lods
sbb
and
movs
inc
cs
inc
(bad)
ss
leave
mov
ficomp
lds
inc
(bad)
in
cs
jne
shl
xchg
push
jge
mov
out
mov
shl
push
gs
push
shl
jne
stc
cmps
sub
sub
dec
jg
cld
int
pop
cmp
inc
jle
xor
xlat
fild
pop
adc
jbe
mov
xchg
addr16
mov
mov
movs
and
xchg
shl
std
enter
push
mov
xchg
mov
enter
adc
repnz
lea
frstor
pop
dec
mov
inc
xchg
rcl
fnstenv
loope
in
sub
xor
adc
popf
inc
pop
inc
pusha
xchg
xlat
jg
mul
inc
stos
dec
in
push
mov
stos
rol
scas
bound
dec
and
test
jp
adc
dec
jecxz
adc
adc
dec
sti
xchg
scas
cmps
enter
and
pop
pop
sub
cmp
and
and
xor
fstp
das
jle
mov
in
xchg
stc
in
stos
mov
pop
mov
sbb
mov
inc
daa
xchg
inc
fsub
add
push
xchg
pop
jnp
jnp
sar
inc
or
mov
sub
cld
mov
add
mov
stos
inc
test
jg
push
sub
adc
iret
cli
push
cmps
adc
xchg
ins
push
or
ss
dec
cld
sub
mov
jbe
sbb
addr16
int3
mov
fwait
xor
lock
mov
mov
mov
add
mov
(bad)
mov
cmp
pusha
pop
shl
repz
into
jmp
mov
jne
rcr
sub
sub
pop
ja
jno
sub
push
or
shl
lock
mov
out
jo
sub
jno
enter
inc
cmp
shr
push
fdivr
stos
enter
ror
and
adc
fstp
sar
fidivr
lea
push
aad
and
shr
movs
aam
test
repnz
push
jg
lods
es
rcr
in
mov
jns
dec
gs
mov
jno
out
enter
mov
enter
in
int
popa
add
cmp
add
mov
dec
test
dec
mov
or
jecxz
mov
inc
js
cdq
inc
stos
in
cmps
es
sub
cdq
push
and
ret
jbe
aas
xor
xor
mov
stos
rcr
nop
xchg
cmp
xchg
pop
pop
and
out
(bad)
sar
lahf
pop
dec
dec
das
mov
mov
mov
pxor
adc
loopne
in
or
fwait
push
xor
cmps
xchg
push
std
push
lods
xor
inc
dec
fwait
jmp
jmp
adc
shl
sub
push
jp
cmp
sub
outs
fld
and
or
ror
int
clc
push
out
leave
ret
gs
aam
or
(bad)
jno
dec
mov
scas
retf
mov
pusha
jo
adc
dec
pop
jmp
shl
jmp
ins
adc
fwait
leave
and
mov
xor
push
push
xchg
xchg
sub
xor
test
movs
or
adc
outs
push
or
lds
enter
pop
int
adc
xchg
pop
dec
add
stos
cmp
sbb
push
es
adc
mov
js
or
pusha
jne
add
(bad)
hlt
mov
mov
adc
in
or
mov
not
js
daa
jp
in
sub
pop
pop
das
sbb
cmp
retf
int3
pop
jg
ret
scas
xchg
(bad)
sti
lods
mov
cmp
je
bound
leave
dec
xchg
mov
call
stc
push
xchg
or
cmp
outs
sbb
repz
cmp
int3
push
lods
pop
imul
or
xor
aaa
movs
les
ds
mov
sbb
lods
jb
adc
ds
pop
add
hlt
cmp
arpl
jmp
fmul
dec
arpl
jmp
jecxz
or
mov
fisttp
mov
mov
aad
dec
ins
pop
dec
loopne
inc
pop
popf
je
mov
push
int
rcr
mov
push
cs
fs
cmp
nop
mov
push
js
cmc
jmp
lea
(bad)
shr
inc
test
push
mov
inc
add
and
mov
xchg
hlt
pop
out
cmps
jnp
mov
jo
popf
ret
aam
jmp
es
push
xchg
cs
fsubp
sub
scas
rcl
sub
(bad)
int
bound
inc
dec
leave
dec
aas
add
sahf
imul
push
pop
cdq
popa
hlt
sbb
mov
sbb
mov
and
cmp
cld
lds
inc
aam
xor
xor
or
pop
mov
push
jg
cmp
fs
neg
adc
or
xor
ret
xor
std
pop
mov
int3
sub
ret
mov
inc
push
pushf
mov
stos
inc
pop
push
mov
repz
ja
jnp
add
or
movs
sub
jns
jns
in
fidiv
(bad)
ror
mov
pop
stos
push
pushf
arpl
or
enter
add
and
mov
es
ins
sbb
ja
dec
out
(bad)
jle
shl
pop
mov
gs
js
add
ret
fbld
jns
test
mov
and
ja
call
arpl
pop
stos
out
push
ds
int
pop
(bad)
repnz
and
pop
and
sub
cdq
add
xor
xcrypt-ecb
cmps
(bad)
cmc
or
and
or
push
jns
lea
mov
jle
jmp
dec
xor
mov
cmp
inc
jno
and
pop
das
outs
fsubr
mov
fdivr
adc
mov
bswap
cmp
dec
cmp
in
sub
repz
in
sbb
add
sub
adc
out
push
cwde
and
and
dec
je
jmp
mov
loopne
mov
jmp
cmp
jo
mov
xor
xchg
stos
popf
mov
mov
shl
cwde
and
call
fdivr
add
add
mov
add
in
fld
mov
ja
adc
mul
imul
mov
push
pop
pop
ins
mov
xchg
xor
pop
jbe
movs
fld
imul
stos
loopne
sub
sbb
mov
push
xor
xor
adc
dec
es
outs
xchg
mov
std
cmp
pusha
retf
mov
dec
cmp
adc
mov
scas
popa
arpl
dec
xchg
arpl
push
adc
out
push
push
and
adc
cld
dec
loop
icebp
int3
xchg
cli
outs
in
and
(bad)
lods
fisubr
and
jp
mov
xchg
mov
inc
loope
out
stos
ret
mov
call
sub
xor
loope
loopne
mov
and
fwait
in
les
fs
jb
add
div
or
or
(bad)
rol
jle
dec
mov
pop
cmp
or
xor
int
push
sbb
add
iret
sbb
dec
movs
inc
call
pop
shl
call
xor
dec
xchg
mov
mov
inc
repnz
mov
and
pop
sbb
ret
mov
adc
cmp
loop
(bad)
ss
enter
bound
xchg
test
dec
dec
es
ret
out
pop
hlt
bound
ror
add
imul
or
sbb
mov
cld
out
inc
mov
les
mov
out
inc
inc
test
adc
fwait
dec
mov
movs
(bad)
pusha
(bad)
imul
mov
nop
jno
jg
enter
lock
pusha
cmc
(bad)
xor
inc
mov
xchg
lods
jp
mov
push
adc
hlt
add
add
(bad)
sbb
arpl
adc
xor
pusha
push
sbb
int
sub
pop
pop
mov
fild
sbb
xlat
dec
inc
mov
mov
adc
mov
and
fisttp
sbb
mov
je
add
retf
mov
xchg
fnstcw
add
cli
and
inc
ja
outs
adc
mov
out
aad
push
and
hlt
cmp
xor
xor
mov
loope
ss
add
ret
ret
push
retf
cmp
daa
cmps
outs
pop
mov
mov
aas
es
jo
pop
jle
mov
fisubr
or
xchg
test
pop
out
cli
push
test
mov
mov
xchg
leave
mov
xor
cmp
pop
xchg
jmp
inc
gs
(bad)
movs
add
mov
jno
mov
les
xchg
loop
out
add
inc
fwait
mov
js
cs
inc
retf
ds
aad
cmp
into
dec
jp
out
and
add
sub
jl
in
iret
sti
dec
jge
rcl
mov
les
mov
jo
call
mov
cmp
into
cmp
fisub
sbb
out
push
rol
(bad)
xchg
sbb
ficom
es
fdivr
cmp
jno
ins
sub
imul
add
add
je
xchg
fbstp
push
mov
aam
test
das
(bad)
push
adc
cmp
pop
aas
sqrtps
test
xor
cs
push
cmc
cli
(bad)
and
jmp
mov
fs
mov
scas
pop
pop
mov
pop
ins
inc
aam
sub
ror
les
mov
enter
sbb
push
cmps
sbb
iret
and
sbb
add
adc
push
ja
jg
or
aas
dec
fdivr
mov
sub
out
and
les
enter
fistp
loopne
xchg
mov
idiv
call
retf
mov
inc
inc
cmp
lds
sbb
outs
inc
hlt
jno
mov
int3
cmp
(bad)
fcom
mov
cmp
add
and
mov
idiv
loop
(bad)
ds
or
imul
clc
clc
jno
jmp
sub
adc
stos
pop
gs
sbb
jmp
lods
pop
call
xor
inc
mov
fwait
push
sub
jp
add
mov
sbb
cmp
js
mov
ins
inc
push
test
call
scas
jmp
cmp
sbb
or
fwait
lods
into
je
mov
out
outs
push
rcl
fisubr
hlt
je
movs
push
stc
fisttp
mov
iret
ficomp
jmp
pop
pop
jle
in
retf
xchg
push
in
cmp
mov
jmp
in
dec
mov
fild
xchg
mov
jns
sti
cli
in
pusha
lods
clc
in
fcmovb
and
inc
xor
dec
mov
mov
imul
cmp
test
and
sub
imul
cmp
in
ror
jmp
stos
movs
or
adc
jecxz
and
dec
add
cmp
outs
call
ja
clc
cmp
pop
and
pop
xchg
push
cmpxchg
push
aaa
in
push
ss
inc
mov
fisub
std
mov
repz
or
frstor
pop
cmp
jp
cmp
das
sub
mov
cld
sub
cld
imul
stos
je
into
cli
ss
pop
push
push
xchg
cmp
dec
xchg
sub
test
fnsave
sub
xchg
add
scas
cmp
jge
and
sub
in
mov
inc
fnstsw
push
push
fdivr
fidivr
inc
movs
call
mov
sti
ret
and
js
push
lahf
inc
pop
jb
push
ja
in
cmp
jmp
xor
jb
or
or
cmova
inc
lahf
and
sub
add
fcom
dec
and
or
das
add
retf
xor
in
or
jle
dec
ret
loop
ror
in
or
imul
xor
arpl
out
je
pop
data16
push
jbe
(bad)
mov
out
push
es
ror
dec
xchg
icebp
ror
clc
push
stc
xchg
mov
iret
movs
lods
jmp
ret
dec
in
cmp
enter
cmp
pop
push
add
pushf
imul
scas
add
pusha
jmp
adc
mov
dec
sti
jbe
adc
jb
push
add
stos
inc
xor
cli
test
push
xchg
mov
stos
inc
or
xchg
jge
ffree
fs
xchg
jle
mov
aas
pop
sbb
jge
cs
(bad)
popf
push
inc
sbb
js
and
lock
clc
out
jge
(bad)
mov
pop
(bad)
and
and
(bad)
and
add
fidivr
xchg
adc
mov
pop
mov
stos
jge
jne
bound
mov
stos
cwde
cli
push
jo
aaa
pop
popa
inc
and
inc
cmp
pop
xchg
xlat
je
rol
sbb
int
xchg
push
pop
mov
sub
sbb
push
stos
std
mov
(bad)
jne
mov
mov
jl
iret
ret
cmp
pop
jg
jnp
in
lods
xor
mov
pop
(bad)
fst
jmp
mov
adc
push
and
adc
add
push
int
stos
dec
ret
sbb
mov
loop
inc
test
jo
into
mov
dec
mov
leave
jnp
test
jno
sub
or
fld
fisttp
(bad)
pop
cmps
pop
xlat
cli
xchg
and
jno
jne
cdq
ja
mov
add
xlat
xor
aam
mov
cmc
dec
je
sub
xchg
dec
sbb
js
jns
pop
cwde
push
push
outs
mov
icebp
sub
ret
jecxz
jae
call
mov
add
mov
sti
(bad)
dec
and
sub
pop
pop
jl
ret
jbe
sbb
mov
cmp
jge
or
pop
and
adc
xor
xor
movs
xlat
pop
scas
dec
mov
pop
inc
add
sbb
psubb
push
mov
outs
data16
mov
shr
es
mov
push
std
inc
inc
call
adc
fst
xchg
jnp
std
jo
jg
leave
jmp
mov
jg
dec
out
dec
(bad)
fcomp
add
popa
xchg
push
mov
call
xchg
mov
fwait
(bad)
cmp
adc
adc
jge
pop
push
or
dec
pop
or
ror
fldenv
mov
adc
movs
lods
lahf
into
popa
mov
les
xor
and
ds
std
imul
mov
(bad)
push
ret
push
aaa
pushf
test
sub
sub
push
out
push
(bad)
retf
pop
mov
cmp
jno
xchg
int
sub
mov
pop
push
sar
or
jnp
mov
cld
dec
push
dec
cmp
cmps
or
(bad)
in
xchg
inc
or
inc
jbe
xchg
in
push
in
and
or
add
out
push
mov
leave
cld
xchg
call
pop
jmp
pop
sub
dec
je
retf
add
sbb
out
pop
int
stc
data16
arpl
mov
sbb
sub
mov
pop
test
mov
fdiv
cli
inc
fdivr
adc
jmp
pop
(bad)
adc
jbe
mov
jo
loopne
xchg
cld
std
jne
gs
fwait
sti
rcl
jmp
cmp
dec
or
mov
cld
sub
push
dec
mov
xor
mov
and
outs
shr
aas
in
ret
repnz
ins
outs
(bad)
sub
cmps
scas
xchg
test
push
inc
lea
push
fistp
test
out
xchg
sub
sbb
jb
mov
dec
fbld
xor
mov
mov
inc
xchg
add
pop
dec
out
xchg
(bad)
repnz
push
mov
add
stos
and
jae
fmul
pop
or
pop
jne
gs
jbe
mov
xchg
lahf
pop
jmp
mov
xor
loop
inc
jmp
in
mov
loope
ret
fisttp
int3
(bad)
leave
push
outs
fs
mov
mov
mov
inc
xchg
cmp
push
push
mov
pop
popa
sub
cwde
bound
inc
ror
push
jnp
ret
xor
sti
paddsw
xor
xchg
repnz
mov
xlat
adc
(bad)
out
stos
sbb
cli
mov
lahf
(bad)
(bad)
mov
xchg
pushf
fadd
repnz
xor
and
mov
lea
jne
pop
cdq
bound
mov
mov
enter
(bad)
sahf
js
add
fisub
xor
xchg
repnz
jo
(bad)
sbb
les
dec
jmp
lods
nop
push
mov
fwait
call
dec
mov
popa
shl
xchg
add
pop
aad
mov
mov
stos
push
pop
repnz
add
out
jmp
pushf
mov
jp
xlat
inc
in
pop
clc
dec
ss
inc
(bad)
cli
outs
ins
out
nop
lahf
pusha
arpl
daa
inc
pop
popf
aaa
test
xor
xor
retf
adc
jecxz
fwait
or
or
or
xchg
inc
inc
ins
fdivr
iret
in
loope
pop
sbb
cmp
push
cwde
rcr
out
xlat
push
dec
retf
push
jno
movs
sahf
(bad)
mov
fbstp
sbb
in
mov
js
mov
(bad)
xlat
jecxz
xor
iret
jns
jns
sub
pop
xor
inc
lahf
lea
adc
scas
(bad)
jns
lea
xor
std
movs
mov
add
add
sub
push
mov
jle
je
jmp
mov
or
cmp
std
mov
inc
push
in
xchg
out
not
ja
sub
mov
pop
fnstsw
cmps
pushf
xor
rol
pop
ins
(bad)
sub
mov
fstp
and
jmp
out
and
adc
push
pop
shr
pop
into
sar
push
and
outs
cmp
xchg
fbld
rol
sbb
aaa
lahf
xchg
xchg
jmp
adc
ja
jl
out
cmovle
and
fwait
ins
or
sbb
aad
dec
mov
test
add
arpl
push
rcr
ja
xor
xlat
mov
mov
xor
outs
adc
cdq
xchg
and
ror
js
test
sahf
inc
xchg
push
xchg
pop
enter
ss
(bad)
and
push
inc
into
addr16
cdq
daa
mov
push
retf
xchg
push
cmp
arpl
dec
and
out
add
in
fs
inc
jl
shl
pop
inc
cmps
or
fisub
dec
and
xor
imul
or
inc
cdq
ja
xlat
cmp
in
sbb
rcr
cmp
sub
xor
xor
xor
xlat
mov
jg
shl
sub
jb
gs
push
sahf
pop
imul
adc
into
cmps
arpl
push
into
xchg
add
dec
in
lods
mov
and
mov
(bad)
shrd
les
add
add
adc
push
sub
or
inc
aas
cmp
scas
push
scas
inc
and
cmp
push
dec
dec
iret
push
add
cmc
lahf
dec
jnp
movs
or
xor
sub
push
repz
cmc
sub
in
pushf
lock
nop
inc
call
retf
stos
xchg
inc
xchg
xlat
test
aam
jmp
std
aad
mov
call
cmp
push
push
shr
pop
(bad)
ror
add
xor
ror
movs
dec
push
sub
xchg
or
test
addr16
repnz
outs
xchg
adc
mov
xchg
nop
xlat
arpl
xchg
ret
pushf
ds
push
out
retf
nop
les
dec
adc
enter
push
lds
scas
nop
adc
data16
mov
add
ds
repz
push
ret
add
mov
ss
icebp
(bad)
add
sbb
inc
inc
xor
inc
lods
pop
sti
pop
dec
call
in
jno
js
aad
fisub
retf
adc
scas
icebp
dec
jno
hlt
pop
xchg
inc
add
cwde
inc
pop
inc
mov
das
and
jb
ins
mov
mov
xchg
retf
adc
les
int
scas
test
bound
mov
adc
mov
jg
pop
lods
test
inc
repnz
(bad)
fbstp
adc
push
adc
or
stos
lods
adc
mov
add
ins
jp
and
std
xor
jno
repnz
sub
and
pushf
popf
inc
ins
add
sbb
nop
and
sub
ret
shl
inc
or
cmp
rcr
sbb
jo
pop
mov
pop
mov
or
mov
shr
add
lods
hlt
mov
jno
out
sbb
sub
das
loop
jl
fs
mov
add
rol
inc
fmul
push
mov
cmc
pop
pop
or
mov
jp
mov
movs
jnp
int
mov
push
hlt
iret
imul
inc
fidivr
push
mov
push
xor
les
push
mov
pop
cmp
push
aaa
jmp
arpl
imul
adc
aad
retf
in
ja
jb
leave
jle
rcr
mov
push
jecxz
outs
das
adc
jmp
mov
xlat
or
mov
mov
call
punpckhbw
test
sub
fadd
sbb
inc
loop
jmp
fwait
inc
loop
arpl
mov
or
out
or
(bad)
shr
mov
or
aam
jb
loop
scas
lods
and
and
xor
sbb
xchg
fwait
xlat
bound
xchg
sub
jns
loop
pop
dec
retf
mov
mov
add
imul
aas
retf
mov
jp
aaa
mov
test
xchg
(bad)
repnz
ror
rcr
pop
jge
push
pop
jl
pop
mov
pop
sbb
loope
xchg
and
stc
mov
sbb
popf
push
mov
dec
dec
xor
xor
push
mov
test
into
je
mov
mov
mov
mov
cdq
and
xlat
and
xchg
adc
and
sbb
push
stos
call
inc
sub
loopne
push
addr16
sub
jecxz
mov
(bad)
arpl
(bad)
adc
outs
jbe
loope
test
pop
pop
std
push
jns
dec
stc
jle
dec
jle
sub
adc
and
pop
out
mov
loop
sbb
stc
popa
pop
clc
mov
jmp
xchg
add
sar
mov
ret
lods
(bad)
loop
fisubr
mov
sti
pop
push
in
popf
cmp
test
push
dec
add
mov
mov
les
clc
cdq
mov
cmp
ds
ss
sar
test
mov
inc
mov
add
adc
inc
adc
push
pop
sub
aad
jno
mov
(bad)
pop
push
and
call
daa
xor
adc
enter
pop
retf
sbb
ficom
loop
sub
aad
not
bound
data16
sbb
mov
movs
pop
lea
or
retf
out
(bad)
imul
shl
adc
clc
push
in
cmp
and
jae
jle
mov
(bad)
xlat
mov
jecxz
(bad)
fsub
aam
mov
movs
outs
rol
push
mov
xor
xchg
int
push
js
jge
fcmovnb
arpl
arpl
pop
setle
cdq
dec
add
sbb
sub
inc
jae
cmc
fidivr
loop
outs
into
out
adc
mov
dec
and
ds
and
dec
jne
xchg
daa
fmul
stc
sbb
clc
and
jnp
cli
pushf
sbb
in
ds
sbb
(bad)
lods
pop
push
and
inc
inc
adc
mov
adc
sub
loopne
inc
icebp
inc
and
push
cmps
test
das
cmps
pop
loope
cmps
cmp
sbb
push
sub
shl
ins
call
ror
cld
inc
pusha
cld
jne
rcl
sbb
mov
lods
popa
add
jb
xchg
xchg
stc
push
xor
in
daa
xor
push
jb
mov
pushf
sub
ror
fistp
xchg
mov
cmp
aad
add
or
mov
hlt
ja
das
aam
cmc
sbb
and
push
fs
jno
mov
add
inc
es
loope
push
sbb
pop
mov
sub
lods
and
fidivr
inc
jae
mov
fbld
sti
mov
jg
and
popa
aam
test
push
jo
rcl
xchg
cld
ins
cli
pminsw
xchg
aas
daa
mov
dec
cvtpi2ps
xchg
mov
dec
(bad)
dec
loopne
xor
push
push
cdq
jne
pop
mov
adc
adc
ss
test
pop
bound
push
dec
lahf
jmp
cmp
fstp
dec
xchg
or
cmp
cmp
out
push
mov
out
pop
fmul
test
dec
mov
movs
popa
mov
das
loopne
in
sbb
call
and
test
clc
add
call
adc
xor
aam
lea
fdivr
test
xor
sar
scas
int3
adc
sub
xor
fs
push
jmp
dec
(bad)
add
pop
sub
mov
inc
stos
imul
test
dec
sti
sbb
(bad)
fidivr
mov
arpl
mov
sub
data16
xor
repnz
adc
imul
repnz
jge
fdiv
jnp
stos
loope
sbb
jbe
and
pushf
pop
sub
jge
push
stc
fist
mov
mov
add
mov
xchg
inc
dec
jg
pop
ins
mov
shl
add
pop
and
mov
mov
mov
(bad)
sub
dec
adc
xchg
lds
out
or
xchg
push
outs
dec
pusha
fistp
aam
outs
out
neg
into
ret
xor
and
sub
pand
sub
adc
shl
ret
nop
xchg
adc
fidivr
scas
mov
sub
and
rol
gs
lds
cmps
mov
outs
dec
or
pop
leave
add
shr
push
mov
ds
and
pop
aad
mov
dec
cmc
mov
shr
sbb
ss
fwait
add
sti
call
(bad)
fdiv
cmc
gs
rcr
jnp
retf
add
xchg
fldenv
call
imul
mov
fadd
dec
adc
sbb
fcomp
test
leave
mov
popa
mov
pop
loop
cmps
xchg
cmp
pop
pop
movs
stc
inc
xchg
fstp
ror
arpl
or
(bad)
inc
dec
jle
mov
mov
std
ds
ret
out
xchg
sbb
and
arpl
mov
and
cmovp
push
mov
jno
jno
and
jbe
loope
mov
fcomp
repnz
fadd
inc
and
add
into
mov
int
scas
cmp
stos
js
pop
pop
adc
out
or
inc
adc
das
retf
mov
sub
jnp
hlt
loopne
dec
sahf
inc
mov
outs
jne
sub
lahf
jns
mov
(bad)
jg
retf
sub
sbb
idiv
xchg
test
fs
cmovns
mov
adc
fdivr
scas
inc
pop
mov
lods
ins
stos
or
sub
inc
and
loop
sub
or
sub
dec
or
pop
out
add
xor
cmp
dec
das
mov
inc
shr
arpl
(bad)
nop
stc
sub
sbb
jp
ror
and
test
jb
xor
pop
jl
xor
pusha
cld
inc
inc
xchg
aad
lahf
xchg
js
xchg
inc
fild
dec
dec
xor
mov
in
add
sbb
into
and
add
pmaxsw
lahf
gs
pop
jns
lds
das
push
xor
mov
fsub
dec
lods
mov
test
add
adc
cmc
jmp
and
sahf
and
test
pushf
dec
jno
pop
mov
data16
shr
enter
xlat
adc
scas
cld
fcom
inc
xor
aaa
shl
outs
mov
mov
ss
fldcw
mov
dec
outs
fdivr
mov
inc
mov
xlat
sti
scas
jbe
and
setbe
inc
jl
repz
hlt
cmps
cmp
das
scas
push
mov
test
jae
cdq
retf
iret
mov
mov
xchg
dec
fisub
inc
aad
push
mov
mov
inc
pop
dec
sbb
inc
(bad)
fldenv
dec
sbb
cld
popf
add
fimul
push
js
fwait
movs
jnp
sahf
push
out
jns
jle
jne
test
jmp
pop
lods
nop
jns
leave
aas
rcl
xchg
repz
rcr
cmp
cwde
lds
xchg
out
pushf
(bad)
jbe
jg
add
out
cmc
cmp
pop
pop
cs
mov
lods
pop
cmp
stos
stos
inc
mov
mov
xchg
or
dec
mov
scas
mov
cmp
inc
cs
call
or
rcr
bound
pop
lods
pop
push
cwde
ds
daa
mov
sub
pop
stc
out
adc
adc
bound
jbe
aaa
sub
sbb
pop
dec
pop
dec
ins
mov
mov
mov
idiv
add
pop
outs
adc
sahf
or
cmp
add
call
xchg
pop
inc
mov
dec
scas
clc
adc
loopne
mov
jne
xchg
iret
ins
inc
cmp
adc
add
xor
or
lahf
pusha
and
mov
adc
xor
lea
mov
test
or
adc
cmc
std
push
and
stos
movs
mov
pop
fwait
dec
ja
jmp
(bad)
mov
leave
lods
pop
fsubrp
xor
mov
sbb
mov
stc
dec
sahf
mov
jmp
inc
mov
jp
mov
lds
mov
sbb
mov
(bad)
not
dec
mov
test
pop
mov
mov
or
add
shl
cmp
mov
jmp
retf
leave
inc
fist
test
ror
test
aaa
stc
sbb
(bad)
and
pushf
inc
inc
xor
xchg
sbb
rcl
sbb
xchg
rcl
cmps
cli
movs
ficomp
shr
imul
fisttp
(bad)
mov
pushf
scas
pop
pusha
add
out
(bad)
loope
mov
adc
cmps
push
les
call
icebp
sar
and
sub
sbb
idiv
movs
jmp
int3
imul
mov
fwait
jecxz
and
rep
movs
rol
mov
(bad)
add
and
and
xchg
test
(bad)
mov
xchg
js
mov
jmp
mov
movs
xchg
mov
scas
xchg
icebp
mov
push
and
add
(bad)
shl
xor
fsub
jle
pop
cmps
call
int
popf
les
stc
lods
sub
cmp
lea
cs
js
aas
shl
cwde
sbb
jge
mov
stos
sub
dec
movs
hlt
jl
sbb
mov
call
int3
out
xor
outs
int
pop
jmp
dec
nop
movs
in
out
popaw
ds
jg
fs
mov
pop
sbb
retf
out
jo
adc
dec
fisttp
push
xchg
(bad)
xchg
jmp
xchg
sub
push
xor
adc
jne
or
cmp
test
mov
xlat
cmp
sub
fiadd
repnz
out
jo
mov
fdivr
pop
xchg
hlt
mov
jp
cwde
arpl
in
xor
ror
fnstenv
gs
inc
and
sahf
mov
mov
scas
cs
loopne
adc
mov
data16
adc
dec
mov
cmp
adc
mov
retf
enter
add
inc
mov
push
test
retf
or
xlat
jecxz
retf
dec
inc
aam
mov
mov
out
adc
xor
jl
pop
shl
loop
cmp
mov
enter
cli
dec
leave
fimul
cmp
pop
mov
inc
popf
mov
dec
cmp
inc
cmp
scas
jecxz
pop
dec
add
loopne
and
sub
test
imul
stos
icebp
mov
xor
jns
dec
cmps
lock
or
jns
mov
adc
add
adc
mov
in
adc
jecxz
aad
xor
pushf
(bad)
(bad)
pop
or
aas
scas
pop
fwait
jle
mov
inc
pop
push
xchg
call
xchg
xor
stc
in
add
xchg
loopne
rol
test
std
out
mov
aam
jecxz
bnd
push
and
xchg
loope
pop
gs
add
(bad)
std
pusha
inc
push
sub
add
(bad)
jns
xor
mov
dec
cdq
pop
add
fdivr
push
out
in
and
cmc
push
out
fldcw
xchg
fadd
sbb
mov
sbb
cmp
(bad)
hlt
ficomp
(bad)
idiv
jg
jae
movs
lds
or
xchg
mov
out
in
jl
cmp
mov
inc
iret
popf
int3
fisubr
jae
out
in
lods
int
(bad)
and
push
(bad)
xor
xor
movs
adc
push
mov
iret
neg
shl
stos
pop
and
scas
lods
xor
or
pop
inc
fwait
fwait
ins
(bad)
aas
movs
cmp
sbb
cmp
mov
outs
pop
cdq
test
sub
and
outs
popa
push
dec
mov
push
xor
(bad)
jae
xchg
out
dec
aas
inc
fimul
cmp
inc
jns
(bad)
mov
inc
lds
pop
mov
adc
push
push
adc
mov
icebp
jo
pop
xor
outs
icebp
sbb
or
cmp
fldenv
outs
mov
add
retf
adc
rol
sar
iret
js
loop
dec
mov
cwde
fwait
and
ffreep
rcr
(bad)
sub
cmp
mov
inc
int
out
cmc
jns
lahf
mov
fstp
mov
jmp
sub
in
icebp
add
adc
test
pop
ficom
movs
sti
pop
jnp
mov
cmp
ins
(bad)
mov
jns
cs
push
pop
lea
(bad)
sbb
pop
or
dec
std
dec
xor
jns
cmp
inc
push
push
pop
call
push
inc
bndstx
xchg
loope
sahf
cmps
pop
jp
leave
repz
cld
loopne
or
sar
sub
fsubr
pop
jne
js
jg
jp
cmp
sbb
inc
pop
iret
repnz
add
dec
jl
and
cwde
jecxz
(bad)
xchg
xchg
inc
or
inc
test
test
inc
outs
or
in
push
inc
int3
push
bound
jns
sub
stos
jo
mov
aad
cmp
ret
dec
sbb
add
fcomp
loopne
or
or
inc
scas
test
xor
cmp
test
pop
(bad)
(bad)
pop
in
cmps
pop
mov
mov
jp
lock
push
mov
and
cs
xchg
jle
cmp
jbe
cmp
push
mov
dec
pop
fnstsw
dec
jg
ja
mov
xlat
call
out
imul
(bad)
out
and
addr16
popf
pusha
jp
mov
adc
daa
jg
cmp
cld
inc
into
pop
pop
imul
iret
stos
loope
inc
pop
movs
sti
xor
or
push
jne
loop
jg
hlt
loop
sub
push
test
add
adc
scas
jmp
push
mov
dec
and
(bad)
(bad)
xlat
inc
popf
dec
aaa
add
add
loope
ins
xlat
cwde
or
cld
(bad)
int
sbb
pop
(bad)
xor
xor
mov
jmp
sahf
pop
jg
xchg
sub
adc
js
and
int3
xchg
jecxz
imul
inc
xbegin
push
jae
dec
mov
std
es
sahf
and
sbb
test
(bad)
fisubr
ret
xor
adc
xchg
jmp
hlt
sbb
movs
ror
and
dec
retf
(bad)
daa
jmp
and
ja
jp
imul
adc
and
int3
je
pop
in
pop
inc
js
add
nop
cmp
or
bound
mov
mov
retf
shl
lods
lods
mov
adc
stos
mov
lds
xchg
jnp
in
jecxz
jns
stos
loopne
das
fisttp
call
cmp
cmp
inc
add
ret
adc
sub
or
cmp
mov
pop
clc
add
dec
das
scas
nop
push
pop
out
je
jbe
fld
shl
push
pop
dec
push
js
fs
push
fmul
cmp
int3
jbe
inc
inc
shl
mov
xchg
sbb
and
sub
xchg
push
push
cmp
mov
scas
fimul
or
add
xor
mov
mov
popa
call
sub
scas
mov
out
jl
in
or
push
das
pop
ret
sbb
gs
jne
or
push
icebp
jbe
aam
ja
popf
in
push
adc
xor
aad
jno
xor
cmc
push
add
es
les
imul
adc
or
pusha
dec
pushf
fist
sbb
push
mov
adc
(bad)
fiadd
mov
fstp
das
js
add
lock
mov
fldl2t
int
xchg
dec
pop
and
sahf
in
movs
fsubr
mov
dec
dec
push
lods
push
(bad)
xchg
dec
dec
ret
loop
cmp
mov
pop
cld
imul
or
repnz
sub
adc
mov
xlat
sub
push
lods
and
and
sbb
mov
lahf
out
sub
ins
aad
js
adc
es
inc
cld
mov
call
sbb
mov
shl
inc
pushf
pop
es
mov
mov
mov
jmp
out
int
cwde
add
jbe
cmps
aas
mov
xchg
ror
sbb
(bad)
aas
(bad)
mov
scas
sub
or
aad
sti
loope
leave
mov
call
pop
popa
xchg
inc
imul
loop
jl
xor
(bad)
mov
mov
pop
cs
jle
clc
or
pop
adc
pop
mov
xchg
cdq
push
jp
lahf
jns
(bad)
scas
arpl
mov
cmp
inc
int3
cmps
jmp
add
sbb
jg
push
rcl
or
xchg
neg
cmp
lods
cmc
push
outs
test
out
popf
in
push
xor
leave
jbe
popa
inc
je
movs
(bad)
adc
sub
adc
mov
add
std
dec
sbb
data16
iret
cdq
lahf
call
push
jecxz
jne
xchg
xchg
adc
sub
stos
and
mov
out
add
test
sub
or
mov
adc
sar
arpl
sub
je
mov
and
stos
mov
xor
hlt
outs
aam
ins
lds
jecxz
jl
test
and
jl
fabs
and
sub
mov
retf
jnp
dec
pop
out
dec
cmp
add
retf
icebp
adc
movs
ror
sub
lods
jle
and
mov
fimul
sbb
js
xchg
sahf
inc
test
fld
pusha
xor
aam
and
adc
sbb
and
jns
cmp
data16
(bad)
loop
sub
jecxz
je
xchg
test
and
xchg
mov
xor
jge
pop
mov
mov
push
in
mov
shr
cmp
repnz
stos
nop
adc
dec
mov
into
jno
cmp
test
push
clc
sbb
sti
loopne
ds
mov
sub
pop
mov
(bad)
sub
aam
or
inc
pop
sbb
rcr
bound
jns
sbb
aam
xchg
add
fdiv
jo
mov
repnz
push
xor
pop
lahf
sti
es
mov
jne
jge
mov
sbb
mov
fnsave
push
jmp
jns
and
mov
push
pop
cwde
or
and
add
out
jmp
adc
adc
repnz
xchg
ret
sahf
mov
js
out
test
ja
xor
daa
es
push
loope
(bad)
add
xchg
push
add
je
sbb
pop
or
or
mov
push
mov
jecxz
jae
cmps
popf
xchg
out
pop
mov
or
aad
sbb
cli
call
mov
pop
repz
mov
xor
pop
bound
dec
mov
adc
xchg
or
or
or
mov
xchg
sbb
in
cwde
lea
sbb
loopne
xchg
or
jmp
or
push
pop
pop
xchg
mov
mov
xor
jb
push
mov
jmp
xchg
sub
stos
pop
jnp
cld
adc
mov
mov
mov
jo
stos
cmps
je
xchg
xchg
test
jmp
push
sar
mov
push
and
pop
popa
(bad)
out
inc
pop
ja
push
or
and
mov
icebp
xchg
out
mov
pop
push
fnstsw
repnz
stos
hlt
cmp
(bad)
(bad)
clc
xor
int3
mov
jb
lahf
fld
xchg
data16
jl
clc
mov
pop
push
push
(bad)
jecxz
(bad)
out
mov
pop
or
data16
fcom
leave
aaa
jnp
push
add
ret
xor
movs
or
pause
inc
mov
out
xchg
imul
(bad)
pop
ror
nop
pushf
aaa
jae
xor
push
fwait
mov
(bad)
fidivr
inc
aam
test
pusha
mov
xchg
pop
mov
inc
ins
or
inc
in
(bad)
sti
xlat
sbb
sbb
sbb
adc
sbb
sbb
jl
xchg
fistp
sbb
add
aad
leave
imul
push
aas
and
jmp
les
iret
cmp
pop
lahf
pop
jge
in
cmp
ror
jnp
add
inc
cmp
mov
sahf
and
lock
cmp
adc
add
push
mov
fldlg2
es
icebp
arpl
outs
out
xchg
and
je
cmps
pusha
ins
jmp
repz
mov
add
adc
lock
sbb
cdq
int3
gs
jnp
jne
mov
sub
push
jmp
fbld
test
out
jle
or
stos
xchg
(bad)
xor
loop
add
push
repz
cmp
pop
cdq
jge
adc
leave
lods
jae
or
dec
out
cmc
outs
xchg
add
and
push
dec
pop
test
daa
cmps
sbb
adc
inc
dec
or
xor
aad
leave
jno
mov
dec
push
pop
jo
sbb
in
cmps
(bad)
sahf
push
pop
test
pop
cmp
out
dec
lock
pop
nop
xor
test
push
mov
in
pop
stos
jae
mov
not
test
jb
ret
jp
xchg
mov
sbb
or
imul
es
push
movs
or
push
sbb
mov
(bad)
jg
pop
xchg
cmp
sub
xchg
aaa
xor
pushf
add
dec
outs
cmp
test
pusha
scas
and
inc
lahf
or
jmp
out
leave
or
add
xor
lods
xor
mov
or
xor
mov
inc
jl
push
sub
je
adc
mov
rcr
push
add
cmp
test
pusha
jmp
jl
push
cmp
test
xor
add
jno
aad
xchg
push
dec
mov
imul
ret
js
daa
cmp
(bad)
or
scas
jne
repz
inc
addr16
shl
jno
neg
dec
pop
leave
scas
nop
jns
mov
out
sub
pop
aam
lock
jno
mov
mov
(bad)
test
pop
iret
adc
jmp
in
(bad)
in
and
stos
sbb
jge
lds
enter
js
inc
or
xlat
jnp
dec
icebp
(bad)
push
aaa
imul
imul
jno
lods
push
adc
les
pop
xor
daa
cli
(bad)
jg
pop
pop
mov
xchg
pop
push
add
mov
sub
pushf
aas
out
fmul
mov
or
mov
cmp
into
rcr
clc
ror
dec
int3
xchg
mov
sub
cwde
mov
mov
mov
or
sbb
jmp
cmps
outs
jge
das
add
aam
pop
jnp
pop
dec
pop
loope
ins
movs
test
jo
cwde
push
lock
fs
add
jo
mov
adc
sbb
(bad)
out
std
je
jb
icebp
pop
ja
xor
shl
fld
dec
repz
jmp
sub
fbstp
mov
or
push
inc
add
dec
or
inc
dec
lea
sti
inc
retf
test
dec
je
pop
add
mov
lock
cli
jb
adc
cld
divps
sbb
mov
jecxz
dec
popa
mov
add
fcomp
pop
pop
mov
dec
mov
push
(bad)
icebp
cmp
xchg
stos
out
and
stc
mov
push
jmp
mov
rol
sub
push
xor
and
hlt
outs
cs
mov
push
fsub
mov
add
scas
shr
push
test
jge
loope
scas
iret
out
push
xchg
sbb
popf
test
pushf
xor
dec
popf
imul
jecxz
pusha
push
cmp
sbb
into
imul
dec
pushf
pop
cmp
jl
aas
jmp
cmp
add
aas
les
aaa
mov
push
gs
cmps
out
mov
lea
lahf
inc
fild
pop
mov
retf
mov
adc
ins
addr16
adc
mov
pop
icebp
and
push
mov
ja
shl
test
clc
inc
mov
popf
iret
and
dec
and
push
cmp
jmp
inc
mov
out
push
sbb
pushf
hlt
push
mov
xchg
aad
dec
xor
push
ins
or
fwait
mov
xor
test
push
mov
shr
jne
mov
pop
push
sti
ret
or
ja
mov
mov
cli
ret
js
push
test
sbb
rcr
and
sbb
(bad)
clc
fwait
inc
popa
push
in
jmp
(bad)
jmp
add
mov
jo
push
cmps
sub
std
lds
inc
xchg
xchg
mov
xor
push
pushf
sar
jl
pop
and
pop
add
push
jg
xchg
or
fsubr
hlt
jmp
xor
jbe
clc
pmaddwd
cli
ds
mov
cmp
imul
fiadd
and
arpl
call
jmp
pusha
xor
push
jmp
jge
cwde
adc
jo
outs
cmp
dec
xchg
pop
out
fist
or
ds
dec
cwde
add
cdq
xchg
ret
nop
mov
jae
test
cmp
inc
mov
stos
mov
pop
pop
enter
add
mov
push
pop
jle
imul
add
mov
mov
in
(bad)
dec
add
outs
and
jp
clc
mov
adc
mov
or
loopne
xchg
and
pop
push
and
test
add
mov
mov
xchg
pavgw
jge
cmps
inc
rol
out
fdivr
adc
jge
dec
in
out
xor
jg
mov
xor
mov
mov
pop
aad
dec
sub
and
pop
sub
ins
mov
xor
rcl
rcr
xchg
xor
pop
mov
call
addr16
xchg
push
in
in
inc
add
xchg
in
mov
cmp
jg
test
outs
fbld
daa
sub
ja
cli
sbb
ficomp
adc
mov
cli
jb
retf
sub
js
ins
aas
ficomp
ret
aad
sbb
jg
sar
adc
ss
ret
sbb
pop
add
inc
xchg
push
mov
push
cdq
test
dec
rol
jb
jmp
cld
sti
fwait
jne
xchg
lea
mov
or
cmc
add
pop
push
sbb
aad
jecxz
and
(bad)
mov
call
arpl
mov
ins
jp
mov
cmp
je
lods
call
(bad)
retf
out
cwde
push
mov
xchg
jae
jae
imul
cmp
loope
xlat
sub
sahf
outs
repz
aam
lea
sti
dec
adc
xor
xlat
pop
cwde
cmp
cmc
mov
(bad)
xlat
jno
or
sub
push
add
call
mov
jg
add
push
imul
pushf
xchg
cdq
push
add
jmp
aas
fsubr
sbb
cmovg
add
jb
sar
push
mov
dec
lahf
and
inc
fmul
hlt
or
lahf
add
fwait
xchg
std
sbb
pushf
fsubr
dec
adc
test
push
(bad)
cmp
retf
push
xor
or
adc
mov
xlat
enter
call
xchg
and
jl
ds
pusha
mov
ret
mov
add
jbe
call
(bad)
dec
adc
dec
add
js
pop
mov
cwde
data16
mov
mov
mov
pop
cwde
lock
pop
es
ss
sbb
call
das
outs
cmp
and
mov
iret
xchg
sub
test
pop
stc
fcmovbe
out
lahf
out
pop
push
les
sbb
xchg
bound
dec
pop
push
jnp
sbb
scas
mov
and
call
or
test
fist
ret
add
sti
mov
fild
addr16
in
retf
sub
xchg
inc
and
lods
xor
aam
rcl
cs
cmc
adc
idiv
inc
push
ss
xor
test
lds
sub
mov
mov
loop
call
daa
aas
mov
(bad)
(bad)
fcomp
push
rcl
mov
adc
lods
sbb
nop
rol
sub
adc
in
js
xchg
iret
push
hlt
mov
mov
rep
sti
scas
jne
adc
cs
lahf
sbb
lods
xchg
rol
sub
scas
scas
pop
aad
or
cmp
and
in
movs
sub
mov
mov
add
push
cdq
fsubr
imul
push
(bad)
mov
mov
sbb
bound
add
scas
retf
rol
xchg
jg
jae
jae
mov
inc
cmp
pop
dec
push
jp
mov
outs
jecxz
xor
mov
retf
xor
rcr
arpl
push
mov
in
pop
jae
movs
adc
retf
fsubr
cs
jge
and
push
fnstcw
jmp
push
cs
adc
cmp
sub
cld
or
(bad)
sti
fidiv
add
add
lods
pop
or
outs
iret
nop
jg
imul
inc
xchg
fs
jne
xchg
xor
popa
or
push
mov
push
retf
and
fcmove
dec
repz
cli
jae
mov
retf
and
push
clc
jmp
push
inc
jp
div
cmps
xlat
lock
dec
fadd
inc
fimul
add
dec
cdq
mov
ret
lea
(bad)
pop
and
sub
dec
mov
retf
jg
mov
xchg
sbb
or
adc
jnp
(bad)
hlt
ins
(bad)
lods
mov
addr16
in
dec
stos
movs
stos
and
int
xor
imul
push
movs
bnd
mov
(bad)
(bad)
hlt
mov
in
fnstenv
test
mov
test
or
cmc
jle
and
enter
hlt
(bad)
and
mov
pop
jne
nop
adc
xchg
call
mov
dec
cmp
in
push
mov
push
les
loop
ss
or
in
pop
xor
and
ss
(bad)
scas
iret
aam
retf
jbe
ret
mov
pop
leave
lahf
test
shr
aas
inc
fidiv
ret
add
dec
jg
fidivr
fmul
jmp
in
push
data16
mov
fcmovne
sbb
icebp
dec
in
ror
add
and
and
scas
lods
push
mov
loop
(bad)
push
adc
add
addr16
mov
mov
int
mov
aas
adc
dec
in
(bad)
cli
aad
dec
pop
clc
pop
int
sub
push
(bad)
xchg
mov
cmp
cmp
(bad)
fld
dec
movs
fild
rcr
aam
into
push
jecxz
inc
mov
shl
outs
pop
ret
es
test
mov
cmps
shl
mov
mov
clc
pop
fisttp
ds
sub
mov
adc
ret
adc
leave
nop
jno
pop
in
mov
lea
add
cmp
lock
loope
push
in
imul
jp
sub
jge
cmp
push
xchg
mov
retf
(bad)
mov
push
bound
data16
dec
sub
cld
(bad)
xor
add
lods
adc
sbb
pusha
inc
jmp
aad
ror
dec
fnstenv
jne
scas
out
in
mov
shl
dec
scas
sbb
test
and
cmps
cmp
ins
lods
inc
mov
ins
shl
jle
cmps
fcomi
nop
fsubrp
rcr
xor
jno
xor
adc
mov
div
test
and
or
jno
xor
xchg
out
jmp
sub
jnp
retf
sbb
stos
addr16
jge
mov
outs
nop
push
rcl
sbb
jecxz
es
imul
xor
push
mov
ss
idiv
mov
int
fist
ja
mov
in
jp
cld
cmp
mov
movs
cdq
fcom
inc
xchg
push
hlt
int3
sar
dec
and
scas
add
dec
ins
popf
stc
arpl
cdq
lods
lea
mov
jmp
in
cmp
push
shl
mov
popfw
xchg
pop
in
not
mov
retf
mov
pusha
xchg
add
mov
movs
cmps
mov
add
(bad)
cld
dec
aas
sub
retf
js
xor
jnp
pushf
sub
sub
(bad)
adc
jnp
sahf
test
inc
pop
mov
ret
call
dec
sub
add
sub
xchg
sbb
mov
mov
and
push
outs
inc
jnp
add
mov
mov
inc
and
lea
push
or
rol
jne
fwait
ins
sti
inc
sub
jp
mov
mov
dec
bound
inc
sahf
cdq
fnstenv
imul
icebp
(bad)
pop
push
xor
mov
inc
mov
loopne
fistp
leave
(bad)
mov
loop
and
sub
fisubr
popf
ds
sub
fcmovbe
sbb
ss
inc
ss
fldenv
aam
loop
mov
stos
(bad)
mov
mul
adc
lods
outs
push
xor
and
sar
cwde
cmp
or
mov
mov
xchg
jecxz
jb
push
addr16
popa
clc
imul
xchg
mov
xor
adc
add
jecxz
sub
stos
xor
ss
dec
jmp
or
add
pop
cwde
mov
lods
(bad)
outs
xor
fidivr
push
xor
(bad)
dec
cmp
ffree
lods
adc
cmp
xor
fwait
xlat
out
in
sbb
cmps
call
cmp
sbb
cmp
dec
cld
jnp
xor
xchg
jmp
(bad)
fs
jb
dec
jns
ja
shl
mov
int
sbb
mov
outs
test
dec
and
xchg
popa
jbe
xor
(bad)
and
inc
mov
stos
adc
pop
cmc
fbld
jle
out
or
scas
inc
xchg
out
aaa
out
sbb
push
aas
sbb
jbe
stos
adc
ret
xor
int
loope
mov
mov
or
cmp
jg
pop
sar
or
sbb
fiadd
popf
icebp
dec
cmp
or
cmp
fdivr
test
imul
in
or
sub
xchg
jae
arpl
(bad)
mov
leave
sbb
mov
shl
pop
xor
xor
test
popa
bound
mov
or
and
ror
pop
retf
aas
rol
xchg
les
pop
adc
pop
or
loopne
aaa
jmp
je
and
inc
jne
dec
or
(bad)
lock
mov
(bad)
adc
lahf
sub
aad
lea
mov
or
jg
mov
(bad)
les
xchg
xlat
sbb
sbb
popf
xchg
jbe
or
lea
call
push
stos
mov
dec
daa
shr
loop
stc
in
retf
out
stos
jmp
add
cdq
retf
xor
add
inc
sti
(bad)
dec
loope
xchg
rol
lock
popa
js
(bad)
fidiv
fs
or
int
jae
int
(bad)
jmp
ins
xchg
xchg
jmp
mov
jmp
aas
or
mov
jp
cmp
pop
or
or
ds
cs
movs
retf
popf
test
dec
xchg
mov
popf
xor
mov
sbb
or
cmp
cmp
enter
mov
adc
clc
jge
add
(bad)
sbb
dec
jne
push
jmp
call
sbb
mov
xchg
mov
fidivr
cmps
lods
or
xchg
imul
rcl
pop
jnp
xor
mul
int
je
(bad)
pop
xchg
sub
add
shr
fcom
mov
add
ins
popa
test
inc
inc
sub
ret
cmp
sub
neg
(bad)
pop
repz
and
cdq
cmps
not
fsub
hlt
sbb
retf
mov
pop
bound
mov
daa
sub
adc
cld
retf
cmps
lock
test
lahf
mul
jge
lahf
jnp
sbb
adc
xor
aam
jbe
mov
stos
addr16
xchg
mov
cmp
or
xchg
icebp
push
mov
test
aaa
inc
sub
push
mov
lahf
xchg
stos
dec
mov
adc
pop
push
push
shl
jecxz
pop
mov
shr
dec
mov
and
jne
pop
and
cld
jmp
pusha
xchg
or
retf
mov
push
(bad)
out
ret
cmp
pusha
push
mov
into
sar
mov
lds
jecxz
rcr
jmp
mov
pop
jg
push
bound
pop
push
rcr
sti
mov
ss
inc
fld
pop
inc
inc
aas
xchg
repnz
sbb
cli
cmp
int3
xchg
fist
pop
mov
mov
loopne
(bad)
pushf
pop
push
daa
gs
fwait
dec
movs
jle
hlt
sar
pop
mov
xchg
push
pop
fwait
aaa
popf
mov
and
dec
fldenv
mov
dec
pop
mov
mov
cmp
push
push
or
xor
retf
inc
js
and
and
test
test
shl
loopne
inc
cmps
es
test
imul
in
fstp
sub
pop
and
mov
neg
es
mov
or
pop
dec
mov
and
bound
pop
(bad)
mov
inc
jl
inc
int
test
cld
jp
jle
add
dec
ret
imul
rol
dec
lods
fwait
mov
and
cdq
adc
sbb
fisttp
enter
xchg
mov
sub
pop
outs
xchg
push
lahf
imul
cwde
ins
xor
dec
imul
xchg
fnstcw
into
lea
inc
pop
and
xchg
adc
sbb
adc
mov
loop
xor
sbb
js
dec
loopne
mov
aam
pop
test
push
bound
cmp
inc
dec
pop
data16
stos
bound
push
mov
cs
dec
jecxz
repz
adc
loop
cmp
stc
pop
mov
pop
retf
dec
cli
xchg
inc
xchg
add
pop
add
sbb
leave
test
mov
push
sahf
test
in
mov
test
loope
inc
mov
pop
icebp
ffreep
addr16
adc
test
mov
rcr
pop
fwait
arpl
jbe
repnz
out
clc
sub
xchg
mul
mov
pop
pop
loop
outs
or
mov
int
in
sub
cmp
lods
mov
jmp
mov
xchg
mov
inc
push
pushf
nop
inc
pop
test
stos
push
mov
or
das
dec
bnd
shl
pop
and
dec
mov
pop
stc
in
jae
adc
inc
ficom
call
push
sub
or
and
cwde
aad
popa
sub
pop
push
push
cmc
aam
mov
test
pop
mov
inc
nop
push
xor
or
ins
jae
pop
adc
ret
pop
mov
clc
add
fwait
add
jns
push
loopne
iret
jne
or
or
push
push
ret
mov
mov
leave
xor
sti
push
out
fld
jb
lahf
push
sub
call
rcl
push
pop
dec
into
and
mov
das
adc
push
sbb
pop
leave
ret
mov
xchg
mov
add
es
sti
pop
pop
push
hlt
cmps
mov
je
lock
enter
les
mov
mov
ret
and
sbb
test
aam
adc
in
pop
cwde
loopne
lds
mov
sbb
cli
and
stc
inc
pop
enter
movs
or
cmp
movs
mov
inc
cdq
clc
pop
arpl
dec
ins
or
int3
sub
movs
pop
xor
cmp
test
inc
add
sub
push
pop
jge
jb
mov
enter
inc
jecxz
test
call
test
pop
dec
aaa
xchg
in
push
std
fild
pop
mov
jg
stc
outs
icebp
and
outs
int3
mov
pop
adc
sbb
(bad)
sub
cmps
cs
push
dec
int3
(bad)
repnz
pop
cdq
icebp
mov
(bad)
test
or
ret
rcr
stos
mov
loope
fs
sti
cmp
mov
loop
ret
and
out
arpl
stos
cwde
mov
test
sbb
mov
inc
mov
test
sub
pusha
xchg
sub
inc
fistp
xchg
repnz
(bad)
jo
sub
mul
sbb
cmc
lock
test
pop
loopne
neg
std
mov
push
sti
les
sbb
pop
movs
jno
inc
inc
or
or
cmps
clc
xchg
bound
inc
or
push
repz
pop
test
push
jmp
ds
mov
imul
mov
pop
push
cmp
mov
dec
push
nop
ss
and
mov
xor
retf
mov
xor
adc
call
gs
dec
lahf
sbb
inc
pop
sahf
fistp
ror
mov
out
cmc
pop
mov
popa
xchg
or
test
sbb
or
rcr
add
dec
inc
fisubr
retf
dec
push
mov
push
test
or
aas
and
cmovbe
je
jb
rcl
ds
or
dec
data16
xor
dec
and
push
int
outs
(bad)
imul
cmps
ja
dec
add
xchg
cmps
jns
jl
push
push
iret
sbb
(bad)
xor
add
out
inc
jmp
mov
enter
xchg
pop
cmp
rcr
sub
test
scas
shr
cld
sbb
fild
inc
fld
clc
mov
cdq
mov
jecxz
ja
arpl
push
sbb
pushf
retf
loopne
pop
stos
push
sub
dec
mov
jno
popf
out
or
leave
inc
aad
dec
lds
adc
repnz
daa
out
test
push
dec
xor
xor
xchg
imul
fs
push
sbb
test
in
cli
xchg
or
test
imul
dec
retf
out
in
mov
jp
sub
or
pop
pop
jmp
push
jmp
retf
test
ret
push
push
and
push
mov
daa
add
shl
jno
xchg
sub
popf
inc
js
mov
arpl
idiv
pushf
inc
cs
stos
push
jge
dec
xchg
inc
(bad)
jmp
jl
xor
jmp
or
(bad)
cmp
xchg
movs
jmp
jmp
lds
pop
popf
scas
icebp
test
add
rep
aam
mov
mov
les
test
and
rol
push
addr16
jmp
arpl
shr
jle
sbb
bnd
sbb
es
lods
imul
ret
repnz
(bad)
push
sbb
pusha
and
fwait
push
fdiv
call
jbe
mov
arpl
cmp
push
or
and
call
scas
test
xchg
jle
inc
lods
retf
dec
pushf
add
int
sbb
dec
mov
dec
in
int
dec
mov
sub
pusha
pop
add
mov
pushf
icebp
out
cwde
inc
adc
push
inc
push
pop
into
pop
dec
movs
mov
xchg
sub
pop
fisubr
jnp
lods
das
xor
lahf
fnstcw
fs
xchg
lds
jl
dec
adc
add
dec
sbb
out
gs
repz
jecxz
mov
jmp
ins
cmps
or
mov
dec
es
cmp
js
sti
adc
(bad)
in
or
mov
mov
jge
shr
mov
sti
or
and
mov
leave
adc
jb
jbe
mov
bound
js
adc
ds
xor
lock
in
(bad)
dec
inc
repnz
inc
mov
dec
stos
xor
add
aad
inc
xcrypt-cbc
cmps
push
retf
data16
add
lea
rcl
inc
jmp
loopne
ds
xor
fild
fadd
jmp
jns
push
xchg
fst
pushaw
loopne
push
test
cmp
jle
mov
push
push
popf
in
imul
xchg
movs
fild
mov
imul
iret
inc
sub
in
in
push
jae
inc
mov
pop
addr16
push
pop
pop
xchg
mov
sub
ins
(bad)
mov
loope
sti
imul
dec
mov
shl
pop
sub
sti
xor
add
or
dec
and
sub
mov
jg
inc
out
sbb
sbb
dec
jno
es
or
xchg
adc
dec
mov
jmp
or
nop
mov
icebp
nop
retf
arpl
push
push
jo
out
jle
cmp
pop
xor
adc
push
in
popa
popf
retf
shr
cmp
fisttp
push
call
leave
(bad)
mov
icebp
adc
xor
stos
cwde
jg
test
xchg
test
or
mov
and
jge
mov
lahf
repz
add
xchg
pop
cli
push
div
inc
mov
clc
cmps
inc
sahf
test
sub
cmp
fadd
pop
mov
stos
addr16
lahf
inc
sbb
push
aad
adc
jp
loope
into
and
dec
cli
(bad)
xchg
push
call
mov
ins
inc
mov
mov
(bad)
push
das
xor
aas
(bad)
xchg
jno
sub
pop
xor
mov
les
mov
and
adc
sub
cmp
pop
xor
shl
adc
and
push
push
mov
mov
adc
lea
cdq
fwait
scas
jbe
das
into
pop
mov
pop
or
pop
mov
sbb
jge
retf
sub
or
cmp
jno
push
cmp
mov
out
push
repnz
sub
mov
addr16
xchg
and
jno
sub
cdq
lods
adc
je
lods
out
xchg
sbb
mov
nop
repz
mov
mov
adc
lahf
int
dec
in
xor
xor
push
pop
inc
lea
xor
dec
dec
lahf
js
retf
stc
fisub
and
daa
sahf
iret
test
inc
mov
add
call
pop
loopne
add
nop
dec
sub
inc
push
pop
mov
stos
sub
inc
cmps
mov
mov
mov
sub
push
push
and
push
add
mov
adc
and
cmp
out
rcl
addr16
push
scas
sbb
in
push
adc
ret
jno
xor
fdiv
imul
adc
and
cmp
xchg
cmp
adc
or
pop
add
mov
adc
cmp
jg
adc
std
test
or
push
inc
and
adc
sub
es
and
pop
js
neg
pop
adc
push
xchg
adc
add
test
out
mov
pop
xor
cmps
shld
mov
add
stc
adc
inc
sub
xchg
movs
cmp
and
adc
adc
test
mov
add
or
sbb
in
cmps
in
aad
pushf
int3
and
cli
lock
cmp
ds
aaa
sbb
fiadd
mov
mov
mov
mov
test
or
dec
sub
mov
mov
std
dec
rcl
fwait
daa
out
push
les
and
xchg
nop
jmp
dec
(bad)
retf
mov
pop
dec
mov
sbb
scas
std
pop
leave
push
add
loop
lock
(bad)
xchg
mov
xchg
mov
sub
push
not
adc
jb
push
(bad)
into
jae
dec
dec
fisub
adc
mov
pusha
(bad)
xlat
jmp
mov
push
dec
ror
into
sti
inc
push
and
shl
jns
iret
pop
cmp
loop
dec
shr
fmul
mov
add
dec
xchg
push
xchg
aam
(bad)
imul
in
sbb
pop
pop
sahf
adc
inc
and
push
inc
outs
xor
dec
inc
or
push
mov
call
out
loop
fs
add
cmc
mov
je
mov
jae
xor
mov
loopne
adc
cmc
ficom
or
sbb
jne
xchg
mov
pop
cmp
jnp
aad
mov
shrd
jb
out
sbb
add
dec
inc
out
jae
pop
sbb
clc
xchg
retf
pop
inc
int3
jne
xor
mov
fmul
inc
inc
dec
or
jl
cmps
outs
fidiv
ret
dec
addr16
push
loopne
dec
lods
bound
sub
stc
stos
fstp
push
mov
jns
std
enter
adc
inc
mov
pusha
cdq
pop
sbb
push
add
sub
add
rol
dec
xor
fnstenv
shr
mov
push
dec
dec
fist
lds
movs
add
xchg
mov
out
retf
leave
mov
stos
add
mov
(bad)
scas
pop
ret
stos
sbb
(bad)
mov
push
inc
(bad)
(bad)
add
retf
sub
dec
cli
test
push
lods
xor
in
mov
mov
mov
pop
imul
retf
call
lock
sahf
push
and
mov
xchg
dec
or
mov
test
hlt
ins
test
int
push
rcr
int
outs
shl
int3
jp
adc
mov
push
out
addr16
xchg
repz
pop
pop
push
jp
adc
daa
test
ins
je
leave
ins
mul
or
or
push
call
mov
imul
out
not
cmp
cmp
jo
movs
lahf
loop
sub
clc
mov
add
add
mov
add
gs
mov
outs
nop
cs
xlat
dec
sub
mov
mov
sbb
pop
imul
xchg
cmps
xchg
lock
test
xchg
sub
adc
or
out
mov
pushf
data16
xchg
shr
cli
sub
add
lds
mov
push
push
movs
lahf
cwde
inc
aaa
adc
xchg
or
pusha
in
fdiv
hlt
or
sbb
xor
xchg
xlat
fimul
xor
sti
dec
(bad)
cld
(bad)
cmp
cmps
xor
mov
es
mov
retf
push
xor
mov
cwde
xchg
mov
and
sar
cli
and
inc
add
repnz
xchg
cdq
mov
lock
aad
jecxz
adc
loope
popa
jge
add
scas
sahf
or
ins
dec
jb
dec
add
sub
mov
dec
out
jno
daa
sub
jo
sbb
mov
in
cmp
jae
lahf
data16
pop
inc
pop
and
mov
pop
sub
or
paddq
and
dec
xchg
xrelease
add
or
jecxz
or
mov
scas
push
fadd
or
pop
adc
jb
in
cmp
aad
loope
pushf
fistp
retf
or
or
xchg
xchg
push
push
pusha
push
sub
mov
mov
jp
cs
adc
mov
jg
inc
and
jl
mov
mov
nop
(bad)
adc
mov
gs
iret
repnz
dec
outs
sbb
cmp
mov
pop
pop
mov
mov
es
xchg
cld
div
daa
in
mov
neg
and
mov
sub
retf
mov
push
push
cs
retf
ja
xchg
movs
pop
mov
addr16
gs
jae
push
sbb
and
int3
mov
movs
cmp
test
pop
sbb
scas
or
sbb
repnz
cmc
mov
add
pop
ins
push
imul
je
add
fidiv
mov
cdq
push
ret
add
inc
cmp
(bad)
cld
mov
adc
lock
push
lahf
dec
movs
or
and
test
xchg
(bad)
loopne
add
outs
dec
jnp
daa
aas
pop
(bad)
inc
mov
or
sub
idiv
add
das
pop
loope
or
cmp
out
pop
imul
or
das
add
sahf
push
adc
cmp
adc
sub
(bad)
xchg
xchg
adc
iret
test
imul
xlat
pop
cmp
popf
fldcw
rol
jp
inc
mov
lock
outs
retf
mov
pop
aad
push
pop
sub
mov
shl
jb
cmp
ret
je
fldcw
inc
mov
add
push
lock
loopne
xor
fst
cmp
inc
outs
sbb
std
stos
or
dec
push
dec
push
cdq
and
cmp
(bad)
push
or
rol
(bad)
add
cli
jl
adc
pop
or
cmp
add
fadd
clc
repnz
cdq
rcr
or
xchg
ret
xor
adc
js
xor
ins
outs
xchg
mov
(bad)
jge
dec
push
add
enter
push
and
sub
test
pusha
dec
push
sbb
or
lods
push
dec
stos
icebp
loopne
bnd
test
mov
push
pop
inc
mov
es
and
gs
gs
jne
ficom
sahf
sbb
add
dec
call
pop
pushf
add
mov
pusha
xchg
adc
int
sbb
(bad)
jle
add
lea
in
or
pop
cdq
mov
(bad)
jecxz
lea
pop
sti
xchg
adc
xchg
or
xchg
les
cmps
test
repnz
(bad)
mov
in
call
xlat
dec
retf
push
into
(bad)
mov
out
push
test
cld
mov
jge
clc
jle
jg
out
or
ins
push
nop
push
dec
fdivp
rol
sbb
jnp
push
cmp
(bad)
mul
in
frstor
cvtpi2ps
jge
dec
aaa
outs
push
iret
add
jecxz
cmps
mov
xchg
(bad)
(bad)
xor
jmp
mov
fsubr
mov
add
inc
add
bound
xor
movs
mov
mov
dec
imul
(bad)
mov
ret
sti
das
sar
mov
out
lods
adc
jp
mov
dec
dec
adc
jnp
xlat
push
fadd
add
or
push
fcom
sub
add
add
sbb
icebp
mov
mov
adc
out
pop
cwde
xchg
fdivr
cmp
xchg
mov
out
es
mov
cli
and
and
and
mov
movs
imul
xchg
fild
jle
aad
or
fmul
mov
pop
pop
leave
xchg
xchg
push
outs
cmp
cmp
in
mov
sbb
clc
arpl
pop
and
or
(bad)
std
js
lock
jnp
mov
ja
dec
jns
and
jae
sbb
loop
pop
call
nop
inc
retf
mov
jns
pop
imul
sub
mov
dec
cs
jmp
push
and
jle
fmul
mov
push
bound
aaa
sub
retf
cmps
ret
sbb
adc
cld
adc
retf
cwde
inc
out
(bad)
mov
sub
(bad)
nop
sbb
mov
clc
mov
retf
test
or
sub
inc
ret
inc
add
sbb
jbe
aas
sahf
clc
sub
pop
lds
leave
sub
jecxz
jg
neg
xor
loopne
cmp
dec
add
aam
test
pop
jbe
push
xchg
xchg
jno
outs
jmp
add
adc
(bad)
sbb
dec
jmp
jmp
xor
dec
movs
mov
pop
jnp
(bad)
loope
jae
lock
shr
fcomp
hlt
cld
mov
mov
push
mov
outs
jp
sbb
lahf
out
adc
enter
dec
stc
sti
ins
or
adc
aas
jg
lods
stos
mov
fld
jb
repnz
mov
loope
add
call
cdq
inc
jmp
sbb
(bad)
and
aam
imul
cmps
dec
push
adc
das
mov
fcmovnu
ror
loope
mov
int
add
pop
dec
jbe
dec
ret
icebp
shr
sub
jbe
imul
cmp
cmp
fsubr
outs
dec
cli
(bad)
mov
ss
daa
sub
xchg
or
scas
jbe
mov
xor
and
push
lock
inc
lods
push
popa
xchg
ror
or
xchg
jns
jne
add
ret
je
jae
adc
cmc
out
sti
or
sbb
(bad)
cs
aaa
fs
js
mov
js
mov
mov
pop
cmps
fadd
cmp
out
fidivr
mov
add
push
lods
pop
(bad)
cs
in
push
xlat
lock
js
jmp
mov
add
fsub
add
jbe
mov
push
inc
cmp
or
push
jnp
mov
add
addr16
cmp
stc
daa
cmp
xchg
sbb
push
jg
add
repnz
pop
and
fnsave
ror
cmp
cmp
shl
xor
lock
mov
mov
xor
imul
fwait
loop
mov
ret
mov
cmp
mov
adc
cld
out
or
inc
xchg
mov
pop
fcomp
mov
mov
fdiv
ja
sub
test
sub
sbb
xchg
jnp
ficomp
lods
cmp
dec
inc
mov
and
inc
mov
mov
aas
mov
pushf
add
ins
movhps
retf
add
enter
loope
scas
inc
lods
call
mov
jg
and
sub
rcl
cmp
dec
pushfw
cli
ja
stc
mov
mov
test
aaa
sar
jmp
jg
sub
in
and
pushf
pop
xchg
rol
int
aas
pop
jmp
inc
xchg
push
inc
and
dec
dec
mov
push
sbb
cmps
xor
inc
mov
and
push
cmps
ret
mov
and
push
pop
mov
xchg
sub
and
test
sets
mov
mov
jle
jmp
hlt
test
xchg
xor
icebp
push
test
push
push
movs
inc
xor
xor
addr16
aam
scas
cmp
dec
xchg
ret
pop
jne
xlat
ret
fstp
fimul
fisub
iret
iret
ret
ins
mov
popa
mov
and
push
jecxz
push
ds
test
pop
and
mov
pusha
ret
mov
lock
jmp
mov
cli
or
fidiv
sbb
push
daa
(bad)
adc
pop
and
retf
xchg
cdq
lods
das
xchg
push
ret
je
out
not
sub
fidivr
cmp
outs
mov
stc
adc
movs
ins
jmp
sub
call
sub
clc
dec
jmp
in
fidiv
sub
fcomp
retf
mov
and
rcr
sbb
push
fdivr
or
mov
bound
loopne
adc
pop
ds
adc
lock
jbe
jnp
jne
mov
nop
pop
mov
push
cmp
jns
add
xchg
call
adc
and
repnz
sub
idiv
shl
outs
push
xchg
shl
jbe
into
(bad)
mov
or
push
shl
cmc
repnz
mov
aad
push
hlt
aam
push
cwde
loop
retf
jmp
sbb
inc
imul
retf
test
retf
pop
fisub
sub
jle
pop
(bad)
iret
jmp
add
(bad)
repz
jo
loopne
sbb
(bad)
sbb
xchg
sub
mov
(bad)
in
dec
jno
mov
sub
call
out
rol
out
daa
xchg
sbb
sub
retf
xchg
fwait
sar
or
cmp
mov
call
(bad)
xchg
pop
pop
push
or
les
sub
and
mov
xchg
ror
aas
not
push
sbb
stc
adc
test
ins
dec
ret
call
inc
out
and
popf
adc
bswap
or
loop
xchg
cmp
(bad)
(bad)
push
pop
fidivr
adc
test
pushf
in
repz
xlat
adc
dec
cmp
sub
sub
cmp
add
aam
pop
push
test
jnp
mov
adc
xor
lods
sub
scas
cmp
pop
cmp
shr
popf
mov
mov
pop
sbb
jmp
xor
test
mov
pop
sub
stos
gs
outs
push
shl
dec
test
cwde
mov
(bad)
jno
outs
add
sti
(bad)
cmps
jno
pop
pop
ret
test
push
mov
sbb
fistp
leave
sbb
test
sub
or
int3
cmp
dec
inc
repnz
in
jge
adc
pusha
and
in
stos
ret
int3
test
adc
sbb
int3
icebp
jae
and
jbe
cmp
lea
mov
shl
adc
loope
shr
inc
shl
add
adc
out
cmps
lahf
ror
jno
aam
scas
das
mov
cs
lock
jo
dec
out
pop
xchg
xchg
push
ins
adc
fimul
fidiv
arpl
pushf
das
mov
test
jns
fwait
push
fucomi
mov
pop
gs
aam
pop
(bad)
lods
daa
jbe
push
rcr
push
div
sub
mov
jne
sbb
add
xor
inc
adc
mov
test
cwde
add
pop
xchg
sub
dec
sar
jne
iret
test
xabort
push
inc
retf
rol
inc
dec
scas
aam
fs
js
mov
push
ins
jp
cwde
test
leave
cdq
mov
jb
dec
push
icebp
add
inc
xchg
xlat
cmp
sbb
popa
inc
repnz
cmp
pusha
adc
ds
mov
xchg
lahf
pop
sbb
cmp
add
pop
dec
mov
jg
pop
xor
mov
nop
idiv
mov
cmp
push
icebp
int3
test
sbb
sahf
adc
out
add
movs
ret
addr16
in
mov
clc
inc
adc
fs
lods
jae
add
shr
sbb
add
lahf
enter
imul
mov
ins
xchg
ret
mov
xor
sbb
sar
and
into
mov
sub
int3
push
jae
bound
push
mov
sub
jmp
add
iret
push
ds
icebp
call
outs
xor
cmp
xor
bound
jle
pop
jp
lds
and
and
mov
add
mov
fidivr
jb
mov
inc
retf
sub
cmp
mov
inc
neg
out
stos
mov
jb
cmp
jmp
jnp
loop
inc
pop
js
shl
or
mov
nop
xchg
pop
cmp
push
xor
jle
or
xchg
mov
xchg
rcr
cmp
pop
sub
jl
movs
xlat
rcr
fdivrp
ror
popf
and
inc
pushf
enter
loop
loopne
int
xor
add
test
pop
mov
adc
(bad)
push
loop
and
inc
inc
(bad)
popa
push
aam
ds
cdq
xchg
ret
cdq
pop
hlt
push
mov
mov
cmps
les
xchg
data16
sub
cmc
dec
lds
push
aas
in
mov
add
adc
add
ins
inc
xchg
pop
inc
or
xor
jo
fisubr
enter
push
jecxz
ja
push
sti
les
into
adc
loope
sbb
fwait
sub
xchg
outs
or
mov
cwde
test
cmp
jnp
int3
lods
enter
pop
and
(bad)
xor
shl
adc
add
lds
dec
pop
nop
sub
(bad)
rcl
int
mov
xor
enter
imul
cs
je
push
out
add
repz
stc
fsub
mov
mov
repnz
(bad)
pop
and
cmps
xlat
icebp
sahf
xchg
mov
sbb
and
call
cmps
pop
int3
lock
test
dec
iret
les
sub
push
in
repnz
or
int3
xchg
xor
xchg
lods
cwde
into
test
mul
jbe
mul
mov
ins
in
test
push
sbb
push
xchg
jnp
sahf
xchg
(bad)
(bad)
dec
mov
bound
imul
rol
repz
js
cmp
jnp
mov
in
das
add
outs
aaa
loopne
mov
pusha
cmps
and
push
and
xchg
xor
sub
hlt
in
scas
loope
(bad)
push
dec
add
loopne
loope
dec
loopne
dec
jmp
cld
dec
nop
mov
xchg
sbb
in
inc
add
scas
das
sbb
add
movs
mov
cwde
add
jl
dec
cmp
adc
std
xchg
mov
ins
add
xor
dec
int3
inc
sub
or
cmp
jbe
or
neg
mov
and
mov
dec
punpckhdq
mov
aas
dec
xchg
sub
pushf
ins
dec
or
movs
jbe
out
pop
push
out
ret
enter
dec
rol
outs
xor
mov
push
retf
aad
test
inc
push
in
or
adc
adc
stc
mov
mov
sub
test
fucomip
sub
loopne
xor
(bad)
pusha
dec
(bad)
sar
mov
mov
pop
push
jg
dec
mov
stc
(bad)
jle
nop
data16
sar
mov
push
and
or
or
mov
pusha
nop
loopne
(bad)
pop
sub
outs
std
loop
pop
xchg
jmp
cmp
push
xor
dec
test
xchg
xchg
sahf
out
jns
jae
out
dec
imul
push
sub
(bad)
mov
lods
out
sbb
mov
push
and
fadd
add
ins
cdq
cmp
arpl
jmp
(bad)
sub
jb
dec
cmp
mov
mov
jl
push
xchg
lods
sub
(bad)
fidivr
shl
stos
jp
inc
scas
popf
jno
xor
add
fnsave
mov
pop
les
(bad)
sahf
or
lock
push
add
xchg
fsubr
cmps
or
sub
in
or
dec
push
xadd
ret
jns
pop
xchg
jae
test
cmp
jmp
jecxz
jecxz
dec
lods
fwait
mov
cmps
cli
(bad)
pop
mov
fldcw
jnp
movs
adc
push
(bad)
sub
inc
dec
out
loopne
add
in
add
adc
and
aas
bound
jnp
add
adc
dec
xchg
xchg
jg
call
jmp
and
bound
mov
in
add
dec
jle
addr16
xchg
data16
loope
jl
imul
iret
mov
jmp
xchg
sti
jno
out
addr16
sbb
pop
add
hlt
retf
inc
push
xchg
mov
scas
xor
sti
aas
mov
jmp
push
push
aas
mov
sahf
cmp
inc
in
iret
xchg
inc
pop
cdq
adc
sub
(bad)
repz
xchg
mov
cs
sub
jne
dec
mov
adc
adc
jae
mov
push
push
outs
shl
int
pusha
(bad)
cmp
call
pop
add
jmp
mov
and
fisttp
test
xor
add
inc
jecxz
ss
inc
je
mov
xor
aas
cwde
pop
pop
nop
pop
(bad)
(bad)
out
popf
pop
dec
jl
and
xlat
dec
clc
call
hlt
cmps
out
call
aam
jle
adc
xor
call
mov
jmp
push
popa
stos
scas
leave
enter
jecxz
movs
shl
fs
jle
jae
xchg
sbb
inc
xor
sbb
xor
adc
cmps
movs
gs
lods
xchg
loop
es
adc
ins
out
mov
pop
xchg
rol
sbb
pop
in
ret
fst
add
aas
cmp
pushf
dec
jb
xchg
ins
pop
jmpw
scas
test
add
cli
ja
nop
sub
icebp
jmp
in
sub
sbb
add
cmp
ds
loope
arpl
(bad)
fwait
loopne
iret
and
idiv
jg
cmp
push
mov
jmp
scas
in
fisubr
(bad)
sahf
test
mov
(bad)
ror
stos
cli
lds
xchg
std
lds
cli
and
jle
and
pop
icebp
sub
daa
int
pop
mov
cwde
int
push
cli
fwait
jne
xchg
movs
mov
ror
add
out
scas
and
cmp
sti
pop
push
(bad)
mov
(bad)
lahf
jno
loope
lock
xchg
add
shl
sbb
dec
sti
pop
pushf
xchg
jecxz
add
dec
(bad)
pop
xchg
dec
sti
in
cmp
and
ja
jg
push
clc
sub
inc
movs
jmp
sub
jl
sbb
cs
les
sbb
pop
lods
data16
jecxz
aaa
push
xchg
ins
shl
cdq
sbb
jg
add
scas
cmp
rcr
movs
stos
je
pop
aaa
ret
sbb
cld
mov
cmps
outs
rcl
(bad)
aas
inc
in
cmp
test
sbb
jns
xchg
mov
sub
cwde
mov
out
lods
cmp
pop
cdq
fcomp
mov
dec
(bad)
idiv
or
into
repz
or
es
std
push
dec
outs
arpl
mov
pop
fs
iret
cli
sbb
sti
xchg
xor
shr
cmp
fsub
cmp
adc
and
xor
mov
ins
pop
and
in
mov
cmp
das
out
shr
popa
xchg
(bad)
or
je
add
outs
cmps
sbb
or
mov
mov
or
(bad)
dec
dec
cmp
sbb
push
leave
push
or
push
outs
jg
call
push
fstp
cmps
jp
popa
shl
dec
adc
lea
(bad)
arpl
clc
cmp
dec
xchg
jae
bound
adc
ffreep
pop
shl
lea
test
add
or
fs
dec
cmp
aaa
jne
and
mov
cli
push
(bad)
sub
bound
imul
mov
daa
cs
sti
cmp
inc
inc
pop
xor
push
lock
sar
sub
cwde
mov
jp
aad
fwait
pop
or
into
loopne
arpl
fnsave
stos
mov
push
mov
loopne
(bad)
and
cmp
cwde
push
lods
add
out
jb
cmp
xor
stos
and
pop
mov
fistp
mov
sti
test
call
mov
leave
mov
sahf
icebp
das
fwait
mov
fwait
int
lock
scas
fistp
jns
add
jle
(bad)
sbb
mov
lock
pop
mov
adc
int
mov
outs
add
mov
cdq
pop
fbstp
jne
inc
stos
fld
xor
jle
sub
jae
fist
popf
cs
aaa
out
retf
jb
push
in
cmp
xchg
cmp
jecxz
mov
aad
mov
mov
push
xchg
add
ins
test
mov
out
and
mul
fimul
jmp
js
shld
lock
arpl
jae
jecxz
cmp
in
jmp
cmps
aaa
push
mov
movs
test
jmp
ror
mov
mov
stc
es
sbb
outs
adc
pusha
ficomp
mov
(bad)
shl
popf
rcl
mov
push
lods
xchg
sub
test
nop
icebp
loop
jb
sub
retf
cmp
inc
lds
ret
bound
dec
test
xchg
push
mov
cmp
or
jmp
mov
lock
push
pop
fs
iret
push
and
dec
push
retf
mov
movs
sti
or
xchg
pop
(bad)
jp
iret
lea
shl
mov
jle
in
xchg
jbe
clc
enter
movs
jmp
sub
mov
retf
xchg
loop
js
clc
adc
xchg
scas
stos
pop
jno
(bad)
lock
enter
test
push
mov
or
js
mov
sbb
pop
ret
dec
sub
pop
mov
jns
cmp
lods
and
leave
cmp
mov
fucomip
rol
(bad)
je
dec
cmc
xor
cmp
shr
sub
or
sbb
iret
fisttp
lahf
fst
inc
cmps
mov
(bad)
jecxz
jge
repnz
lds
jno
outs
xchg
jns
cwde
mov
push
push
sbb
xchg
mov
popa
in
(bad)
(bad)
gs
in
movs
push
mov
hlt
and
or
inc
in
cwde
mov
jae
vpperm
sub
xchg
test
push
ret
out
cmp
imul
jo
cs
into
aaa
iret
std
(bad)
nop
or
js
out
xchg
fwait
(bad)
(bad)
mov
ret
cmps
xor
lock
inc
jg
push
test
aam
pop
es
mov
lds
out
and
lods
lea
xchg
sbb
daa
mov
sbb
pushf
mov
inc
in
mov
cdq
xlat
inc
leave
imul
inc
cld
push
or
mov
and
cmp
ja
iret
sti
dec
gs
push
pushf
gs
test
sbb
lock
leave
popa
fstp
loop
xor
or
cmp
leave
sbb
cmc
stc
(bad)
sar
jmp
jmp
shl
add
mov
sar
sbb
sahf
cdq
and
cs
adc
enter
jmp
sti
mov
and
imul
mov
jge
mov
add
xor
xor
or
mov
push
test
cmp
rcr
dec
mov
fsub
push
test
jns
push
rol
mov
add
pop
test
push
jp
cmps
push
jno
push
int
std
lahf
stos
mov
shl
loope
mov
daa
cmp
div
adc
dec
fisttp
cld
xchg
jo
inc
mov
jbe
jb
(bad)
cmp
sbb
xor
out
push
mov
imul
nop
scas
add
fsubr
push
xor
sub
lahf
or
ja
push
push
mov
pushf
loopne
inc
out
xchg
shufps
fisub
daa
cmc
adc
fadd
test
mov
jno
inc
es
out
pop
dec
jle
and
cmp
mov
inc
call
jmp
mov
add
jne
aam
sub
dec
xor
in
stos
outs
cmp
push
nop
mov
mov
sbb
cmp
add
ror
adc
ja
jbe
jg
lea
cli
push
(bad)
dec
das
ret
cmc
mov
cmp
pop
dec
add
fwait
bnd
sub
pop
rcl
cmovs
sbb
data16
fidiv
mul
lock
in
inc
iret
dec
fidivr
mov
add
fmul
loope
call
and
cmp
ds
sub
push
cmp
sahf
xor
and
std
imul
xor
sbb
mov
aam
sbb
xor
int3
out
mov
inc
(bad)
push
mov
imul
mov
cmc
sub
jo
loopne
ja
add
pop
addr16
call
in
mov
xchg
xor
xlat
pusha
lods
(bad)
in
pop
pop
stos
ds
push
rol
stos
mov
icebp
enter
push
fs
aaa
sub
cmp
mov
aad
mov
cs
sub
mov
cs
lsl
jns
int3
nop
rcl
enter
loop
add
cmps
lahf
cmp
cmp
dec
jge
imul
dec
rol
add
in
inc
push
pop
jno
jecxz
mov
pop
aam
or
pop
fdivr
cmp
fs
sar
jl
dec
cmps
xchg
adc
scas
loope
out
into
stos
push
sbb
mov
or
mov
in
xor
adc
in
scas
pop
or
cmp
test
imul
mov
nop
scas
stos
jb
(bad)
movs
leave
(bad)
adc
cmp
call
shl
icebp
push
ins
in
jb
ja
cmps
sbb
jae
pop
das
fimul
sar
xchg
(bad)
movs
and
sub
cdq
ins
inc
mov
pop
adc
jbe
into
xchg
inc
sub
dec
in
int
js
add
shl
jmp
(bad)
push
or
rcl
loop
frstor
je
std
or
int3
add
mov
dec
movs
jp
inc
retf
push
ficomp
icebp
pop
fwait
ret
cmp
inc
jns
add
(bad)
or
adc
mov
sbb
lods
gs
pop
(bad)
mov
add
mov
mov
js
std
sub
cmp
(bad)
ins
dec
sar
por
not
sbb
inc
mov
jns
jg
pop
pop
imul
cld
pop
or
int
(bad)
and
cdq
push
sbb
(bad)
or
ror
and
pop
push
dec
repz
aas
scas
popa
push
xor
(bad)
cmp
int3
pusha
dec
outs
mov
adc
je
and
mov
jb
adc
add
push
cmc
mov
(bad)
adc
fwait
clc
add
mov
sbb
xor
bsf
(bad)
adc
or
shl
inc
fsubr
push
mov
ror
aad
push
mov
inc
dec
sub
add
in
vmovapd
xor
mov
sbb
les
jmp
cmp
arpl
pop
cwde
(bad)
xchg
jle
push
std
addr16
push
sub
cmp
xor
mov
lods
in
xchg
pop
pop
aas
and
jl
xchg
cmp
xchg
jno
cmp
push
lock
sbb
xor
sub
dec
(bad)
mov
adc
mov
pop
(bad)
xchg
pop
adc
push
jno
jp
bnd
or
in
fist
xchg
fistp
mov
mov
jl
mov
add
aad
add
stc
cli
mov
aaa
jae
cs
sbb
pop
jge
pop
fs
idiv
sbb
and
mov
mov
jnp
mov
mov
cvtdq2ps
xor
pop
popf
and
repz
xor
jmp
push
cmp
sar
push
stc
mov
scas
push
sbb
ins
je
dec
sahf
adc
pop
inc
adc
popf
lock
pop
out
sbb
jns
fsubr
adc
fidivr
inc
jo
fcom
out
jl
call
dec
cdq
push
pop
popf
pop
mov
outs
mov
rcr
dec
jg
ins
in
imul
loop
aad
imul
push
push
xor
in
shr
adc
mov
pusha
ss
push
rol
cmp
pop
mov
mov
arpl
lea
cmp
mov
mov
cmp
sbb
pop
and
push
ret
inc
mov
shl
inc
adc
dec
mov
pusha
pushf
pop
jle
rcl
mov
jne
iret
inc
cmp
jmp
sub
cli
fisubr
repz
cmp
fsubr
gs
adc
arpl
add
xor
(bad)
mov
dec
mov
data16
push
jmp
repz
(bad)
jb
sub
jmp
shl
mov
add
imul
cmp
stos
add
cwde
lods
and
dec
in
inc
ret
pusha
inc
ss
add
xor
pushf
and
shr
das
mov
fdivr
std
xor
fwait
or
cdq
js
out
adc
sbb
fwait
adc
jge
pop
fstp
sub
mov
mov
mov
adc
xor
out
jmp
dec
outs
mov
push
ret
pop
gs
sti
xchg
mov
mov
dec
adc
cld
stc
cmp
inc
js
loop
pop
in
mov
fisttp
add
jae
inc
scas
cmp
inc
nop
jl
call
jge
rcl
jno
aam
mov
in
ret
push
push
shr
das
push
outs
cmp
push
outs
test
jg
xor
add
lods
mov
adc
mov
push
pop
bswap
inc
mov
adc
(bad)
dec
pushf
aaa
lods
leave
cmp
inc
push
lahf
sbb
stos
call
dec
pop
dec
adc
and
inc
fild
mov
jnp
mov
pop
push
cmp
loope
gs
mov
cmp
sbb
mov
mov
inc
jp
mov
imul
lods
pop
rcl
aas
fist
jp
leave
and
les
inc
addr16
jnp
pusha
pop
push
rcl
es
mov
rcl
mov
xor
ja
mov
scas
jmp
jne
mov
or
into
loop
inc
popa
jb
jne
jo
jmp
jbe
addr16
jo
jo
jp
popa
into
retf
and
rcr
jg
lods
push
lds
outs
xchg
push
push
sub
into
or
pop
sbb
adc
sti
sub
mov
jne
fmul
pop
sti
xor
pop
sub
mov
lock
(bad)
jae
mov
xchg
mov
mov
xor
addr16
push
fucomp
les
sbb
outs
mov
mov
pop
mov
popa
jae
rcr
pop
add
rcl
jae
add
sub
mov
fcomp
mov
mov
add
lods
adc
xor
xor
mov
xor
mov
cmp
inc
jge
jno
test
jp
hlt
sub
xor
mov
jnp
fmul
scas
fbstp
sbb
mov
and
xor
dec
xchg
jno
push
fisub
dec
mov
mov
dec
call
cmc
pop
mov
jne
jnp
and
nop
js
jg
mov
push
add
out
add
jmp
mov
inc
stos
arpl
mov
or
xor
sub
mov
aas
int
(bad)
nop
sbb
jg
(bad)
pop
pop
sbb
fdiv
lods
es
jecxz
(bad)
lods
jmp
hlt
and
mov
pop
cli
mov
cld
inc
int
fidivr
pop
psubusb
arpl
dec
mov
imul
xor
sti
cmp
scas
ins
sbb
sti
sub
imul
mov
pop
xchg
mov
lods
jb
pop
clc
jl
icebp
xchg
mov
mov
cli
inc
fwait
mov
addr16
jmp
dec
sbb
mov
loope
ja
inc
call
loope
int
xchg
sahf
and
movs
in
inc
cmp
aad
test
pop
sub
aad
clc
dec
jp
arpl
(bad)
cmp
sbb
pusha
mov
jno
xlat
push
ret
push
in
adc
in
add
jecxz
pop
stos
adc
mov
add
in
(bad)
pop
loopne
jnp
mov
call
inc
mov
add
(bad)
neg
scas
push
sbb
in
pop
and
pusha
pop
arpl
push
std
mov
push
bound
lds
ins
imul
fisttp
adc
stos
inc
push
sub
out
push
adc
test
aas
and
jg
clc
pop
cmp
jmp
mov
mov
(bad)
sub
dec
sbb
adc
cmp
mov
call
hlt
dec
cld
cmp
dec
xchg
mov
in
adc
jns
pop
sbb
xchg
(bad)
mov
xchg
mov
mov
pop
ins
pop
mov
pop
or
mov
push
push
(bad)
pushf
mov
dec
mov
ret
test
mov
inc
push
mov
inc
xchg
jle
xchg
nop
jmp
in
push
jb
data16
iret
mov
add
sahf
push
into
inc
in
fmul
jg
mov
sub
fdivr
mov
push
ret
or
and
cmp
pushf
lods
mov
add
rcl
(bad)
(bad)
pop
mov
jb
enter
push
adc
mov
mov
scas
push
sahf
push
call
sub
push
jb
and
add
or
xchg
je
adc
cmp
jbe
mov
retf
fild
in
fmul
xchg
rcl
or
not
xchg
dec
push
ds
je
cs
adc
(bad)
shl
or
dec
sbb
rol
mov
mov
push
mov
into
in
add
mov
pop
ror
test
shl
jle
mov
add
movs
xor
and
inc
data16
call
xchg
xor
call
cld
push
outs
jecxz
xor
(bad)
adc
sub
out
sub
mov
(bad)
mov
ins
icebp
js
inc
dec
inc
in
movs
daa
sub
enter
adc
(bad)
push
mov
dec
(bad)
mov
lods
in
in
gs
test
pop
pop
imul
arpl
sbb
in
xor
lods
jns
mov
adc
out
imul
aad
xor
mov
mov
dec
inc
(bad)
outs
jmp
jmp
out
cmp
sub
cmc
push
jno
or
add
and
and
sub
daa
out
push
stc
inc
out
or
cwde
add
xor
lock
push
in
or
sbb
jl
sub
adc
pop
dec
xor
adc
jns
adc
repnz
push
add
popf
lahf
mov
sbb
mov
cdq
inc
jne
out
xchg
rcr
xchg
mov
adc
jecxz
popf
test
es
repz
mov
sbb
test
add
imul
inc
pop
xchg
mov
push
pop
cwde
sub
mov
and
sbb
mov
movs
sub
ins
stc
(bad)
sbb
div
scas
test
jp
mov
push
int3
jp
(bad)
cmps
(bad)
out
push
jmp
xchg
jns
cwde
jge
lahf
retf
fst
ret
lods
call
and
dec
retf
push
lods
ret
pop
arpl
xor
adc
das
cld
mov
sti
jmp
out
out
ins
mov
test
push
push
call
mov
aas
leave
int3
sub
imul
xchg
and
in
xlat
(bad)
mov
adc
cmp
mov
aad
mov
in
fsubr
sar
imul
pop
cs
xor
iret
xlat
mov
xchg
sar
jge
push
adc
xlat
cmp
popa
icebp
stc
xchg
pop
or
xchg
add
pop
in
fdivr
pop
or
mov
punpcklbw
imul
movs
mov
aam
std
loop
mov
inc
sub
mov
push
sbb
iret
xchg
dec
pushf
fcmovbe
inc
test
mov
sbb
sbb
(bad)
idiv
test
xchg
dec
jp
sub
(bad)
jmp
xchg
sub
fsubp
retf
int3
(bad)
in
aad
gs
push
psubd
(bad)
cmps
mov
inc
sbb
les
pop
std
push
sub
add
push
mov
repz
inc
mov
enter
xchg
adc
fisttp
mov
xlat
leave
mov
retf
enter
pop
cmp
out
movs
xor
pop
int3
sub
addr16
aam
cmp
movs
pop
jnp
scas
xchg
adc
sbb
cmp
sub
nop
mov
xchg
jl
ja
jb
adc
pop
mov
sub
ret
sbb
mov
sbb
mov
cmp
sbb
mov
mov
pop
out
xchg
int3
movs
jmp
add
mov
mov
sar
lods
pop
dec
push
faddp
mov
and
cmp
aas
mov
ret
movs
and
shr
std
adc
jmp
cwde
div
mov
add
jbe
and
pusha
imul
add
popa
enter
mov
in
movs
movs
dec
ss
pop
cld
data16
cmc
popa
ror
pop
mov
and
xlat
faddp
inc
jmp
mov
popa
cwde
adc
mov
(bad)
jmp
lock
repz
clc
sti
sahf
cmps
sbb
lods
leave
ja
mov
je
add
mov
jmp
push
shl
lods
mov
shl
cmp
retf
xor
fistp
dec
xlat
mov
jo
cmp
sbb
adc
mov
xchg
jo
add
jne
xchg
sub
jl
pop
retf
retf
fs
iret
mov
cmp
pop
xchg
add
sub
pop
fcom
or
retf
inc
jg
std
xor
rcr
ja
mov
or
pusha
icebp
pop
pop
(bad)
aad
(bad)
mov
out
mov
mov
mov
xor
icebp
or
push
scas
pop
test
sbb
lods
jmp
mov
lods
sub
cmp
hlt
jmp
aad
pop
call
inc
ss
ins
jmp
or
pop
jge
or
dec
push
mov
jbe
inc
lea
pop
xlat
or
in
push
jo
imul
push
rcl
add
push
inc
in
sbb
ins
ins
jecxz
out
inc
add
or
sbb
je
push
sbb
cmps
stc
cmp
jg
test
and
mov
fimul
jp
outs
std
push
or
mov
jmp
xchg
adc
dec
mov
pop
fld
dec
(bad)
lods
xchg
cmps
dec
iret
and
test
ds
mov
adc
ds
xor
xor
jo
out
das
repnz
dec
add
xchg
out
popa
and
pop
adc
call
movs
mov
push
fldcw
mov
pop
daa
pop
mov
fcmovnbe
test
bound
pop
pop
sbb
pushf
aad
inc
movs
mov
push
xor
mov
fs
inc
fimul
and
movs
jmp
xor
pop
xchg
test
jp
cmc
push
stos
cmc
hlt
rcl
push
xchg
cwde
sub
push
jp
and
xor
lods
push
js
mov
add
js
jg
cli
dec
sub
out
movd
cs
jg
(bad)
hlt
pop
dec
rol
sbb
imul
(bad)
(bad)
sar
inc
enter
arpl
mov
or
aam
mov
and
lods
stc
cmps
mov
xor
or
pop
adc
test
pop
cmps
bound
test
idiv
repz
bound
inc
leave
imul
fcomp
xor
ror
push
call
retf
mov
xor
icebp
add
inc
push
clc
jle
add
jae
xchg
jp
jecxz
bound
mov
gs
lods
dec
fsubr
fdivrp
fild
test
mov
dec
les
test
pop
sub
lods
test
out
sar
rcr
mov
mov
xchg
gs
push
add
mov
cwde
cs
jo
xor
fisttp
ret
scas
inc
fsub
ret
adc
adc
les
loop
sbb
mov
idiv
inc
sar
add
add
mov
repnz
mov
inc
mov
cmc
jle
repnz
push
out
loope
sub
cmc
cdq
sub
sbb
dec
xchg
mov
cmps
sbb
stos
cmps
stc
mov
inc
hlt
mov
enter
test
mov
sub
aaa
aam
into
int
daa
mov
outs
sub
test
test
aad
aad
imul
xchg
mov
adc
stos
fbld
push
ins
mov
lods
out
jle
lock
push
fiadd
or
jecxz
fld
lock
lds
arpl
inc
nop
scas
das
(bad)
mov
cwde
adc
lea
sub
pop
or
mov
scas
mov
push
xor
adc
popa
xchg
arpl
hlt
aad
inc
hlt
aaa
adc
adc
jmp
push
cdq
push
mov
(bad)
pop
out
lock
(bad)
or
dec
mov
pop
mov
pop
mov
mov
call
xor
stos
xchg
je
or
pusha
jecxz
jne
(bad)
sub
add
fwait
cs
mov
int3
arpl
pop
stc
stos
add
and
cli
mov
loope
xor
push
je
sbb
inc
test
push
(bad)
in
or
mov
xchg
(bad)
mov
cli
pop
sti
cmp
add
shr
pop
push
outs
jo
xlat
data16
add
dec
call
mov
cli
hlt
loopne
jp
fndisi(8087
xor
fwait
arpl
scas
lahf
out
stc
nop
outs
xchg
loope
mov
cmp
mov
mov
dec
add
cld
sbb
pushf
push
dec
sub
xchg
sbb
dec
adc
fsub
icebp
test
wrmsr
jno
test
scas
nop
test
inc
sub
lahf
enter
xchg
repz
mov
cs
xor
ds
retf
add
add
push
pop
clc
test
pop
stos
pop
out
fucompp
push
cmp
(bad)
and
adc
or
shl
xchg
(bad)
mov
jbe
cdq
shr
xchg
add
sub
push
lea
lahf
mov
xchg
ret
and
inc
out
test
cwde
int
gs
js
mov
jno
mov
or
push
(bad)
sub
sahf
fldenv
and
(bad)
call
add
adc
or
cmp
mov
sub
sahf
jae
repz
or
jp
nop
adc
jns
add
leave
pop
push
in
(bad)
cld
cmp
sti
idiv
jbe
les
lock
lahf
jecxz
inc
or
retf
lea
fild
adc
xchg
aad
mov
sub
push
mov
dec
mov
jecxz
jnp
push
std
jo
mov
sub
adc
clc
jg
push
mov
add
dec
sbb
aas
push
(bad)
mov
arpl
(bad)
dec
lock
scas
cs
popa
sub
pop
popa
(bad)
pop
stc
retf
lods
adc
in
pop
mov
pusha
arpl
ss
les
loopne
loop
aam
leave
add
in
fadd
jne
shl
or
cli
dec
gs
add
add
sahf
iret
out
inc
jae
or
in
(bad)
stc
pop
pusha
fimul
es
ficomp
rol
push
sti
sub
or
xchg
test
fs
ins
add
icebp
add
xchg
rol
lods
dec
cmp
or
bound
in
push
dec
xchg
in
mov
xchg
dec
or
lds
mov
mov
push
or
adc
sahf
cmp
test
repnz
call
jg
cli
push
dec
leave
mov
inc
mov
outs
movs
add
mov
cmp
inc
repnz
stos
(bad)
jae
adc
popf
jnp
xor
and
add
mov
imul
pop
int
imul
das
dec
out
ret
ret
adc
dec
mov
dec
mov
mov
adc
jge
imul
fcom
mov
call
ins
call
test
jb
nop
mov
pop
(bad)
cmp
popf
jl
addr16
dec
push
ffreep
imul
cwde
push
adc
mov
int
xchg
xchg
xchg
push
pop
push
lahf
xchg
imul
pop
xchg
jp
pop
dec
mov
pop
or
push
jg
(bad)
jmp
xchg
imul
std
adc
mov
sbb
pop
addr16
inc
add
sbb
mov
mov
cwde
mov
mov
pop
sub
push
ds
inc
jb
cmp
(bad)
xor
arpl
inc
sbb
mov
lock
mov
pusha
jl
shl
push
call
mov
push
pop
pop
cdq
int3
aam
inc
inc
xchg
in
in
loop
sbb
outs
mov
sub
pushf
push
in
xchg
retf
pop
pop
sbb
mov
mov
mov
mov
(bad)
fbld
sbb
loop
out
jmp
ins
pop
lods
pop
and
pop
cmp
aas
ins
dec
mov
pop
push
adc
in
or
iret
mov
jns
(bad)
shl
xor
icebp
mov
jmp
out
stos
pop
lods
xchg
scas
sbb
ror
cmp
xchg
cmc
loop
retf
sti
mov
jbe
xchg
sti
xchg
jo
mov
loope
sub
outs
bound
xchg
(bad)
cmp
xchg
xchg
data16
aas
cld
or
pusha
xchg
(bad)
mov
inc
mov
xchg
dec
mov
imul
repnz
sti
mov
into
movs
jmp
outs
outs
push
mov
mov
nop
sahf
sbb
add
test
lea
scas
adc
jl
pusha
sub
and
sub
mov
push
jg
mov
test
pop
mov
mov
mov
mov
push
push
sbb
dec
add
or
pop
xchg
push
lock
fdivr
addr16
retf
jbe
(bad)
or
dec
inc
mov
lods
test
addr16
lock
mov
dec
cmp
iret
scas
sub
out
mov
adc
xor
retf
outs
imul
in
enter
fnstsw
xchg
les
push
mov
clc
push
push
xchg
scas
js
push
mov
mov
ret
lods
repnz
cmp
sub
push
cmp
bound
ss
clc
std
imul
nop
ror
and
(bad)
repz
std
dec
int3
pop
pop
jns
mov
in
adc
fisubr
icebp
lods
scas
clc
lock
je
mov
into
mov
jae
adc
xchg
mov
cld
jg
push
test
in
add
push
mov
out
pusha
arpl
shl
pop
mov
mov
movups
dec
je
jmp
mov
enter
push
pop
push
mov
mov
mov
loop
lock
pop
popa
pop
push
or
loop
mov
retf
out
fst
ins
hlt
adc
jecxz
and
mov
loope
push
in
or
xchg
je
or
jnp
fwait
xor
sbb
pop
xor
aas
xor
cmp
dec
shl
inc
mov
xchg
jl
xchg
retf
mov
lods
xor
cmp
xchg
inc
cmp
or
push
pop
jp
sub
mov
cs
jl
push
shl
mov
xor
sub
push
stos
sti
xchg
adc
jae
mov
xor
outs
push
dec
stos
sub
mov
sbb
mov
call
adc
sar
pushf
scas
mov
fistp
jecxz
push
pop
lods
fwait
adc
and
xchg
or
fsub
add
cmp
inc
js
(bad)
mov
sbb
aaa
pop
(bad)
enter
test
dec
dec
icebp
push
movs
dec
popa
push
jmp
pop
push
cs
push
cmp
and
cmps
js
(bad)
fdivrp
retf
int
jmp
rcl
cmp
bound
retf
scas
adc
xchg
jmp
sub
mov
pop
clc
cmp
cmp
cdq
dec
mov
aad
push
mov
(bad)
and
sub
jae
in
test
jmp
push
mov
scas
mov
inc
jne
sbb
aaa
stos
pop
mov
mov
xchg
mov
fwait
repz
add
jnp
dec
ret
jnp
mov
mov
inc
inc
sub
sbb
push
xchg
mov
int3
int3
inc
je
int3
dec
jbe
out
stc
test
mov
sub
int3
iret
or
sub
imul
xor
popa
jae
(bad)
sahf
sub
or
stos
push
fisubr
in
jo
cmp
push
nop
xchg
std
and
stc
call
int
sbb
dec
sar
inc
je
xchg
cmps
mov
add
jmp
adc
test
call
lods
mov
pop
jge
(bad)
shr
sub
or
fnstenv
inc
rcr
xor
add
xchg
std
pop
dec
mov
call
mov
leave
loope
jle
mov
call
pop
retf
or
xor
sub
or
jmp
in
movs
xchg
das
inc
retf
sub
stc
stc
mov
les
adc
or
repz
xchg
push
or
ja
ins
cwde
adc
pop
dec
dec
inc
and
out
add
fild
jg
aaa
das
xor
xor
(bad)
ss
sub
ins
stos
out
push
leave
mov
mov
and
jg
cwde
es
inc
mov
(bad)
mov
pop
add
push
rcr
pop
cli
fistp
sub
xlat
imul
rcr
mov
cmp
pop
pop
cmp
pop
inc
sbb
xchg
dec
mov
loopne
pop
mov
xchg
mov
pop
mov
jge
or
push
addr16
in
xchg
aaa
pop
push
mov
cmps
iret
dec
in
sahf
jae
lods
xchg
retf
xor
outs
adc
ror
lea
(bad)
rol
or
pop
xor
or
sub
push
ret
scas
pop
je
add
int3
fnstsw
pop
les
pushf
mov
jp
xor
xchg
sbb
fldenv
(bad)
les
loop
push
fcmovb
jmp
leave
div
adc
sbb
fsub
and
push
mov
aad
jmp
test
leave
jb
push
js
mov
sbb
aad
xor
mov
mov
or
mov
mov
push
repnz
fisubr
lahf
imul
cmp
pop
retf
mov
mov
pop
cmp
cdq
and
ror
cmp
jp
lahf
adc
idiv
jne
cmp
fbld
mov
enter
push
stos
popa
in
aaa
div
mov
jbe
mov
lahf
push
scas
sub
mov
push
xchg
xor
pusha
ffreep
int3
xor
outs
xchg
jecxz
fild
data16
call
data16
test
fisttp
outs
cli
push
push
cmps
clc
mov
stos
xor
loope
sub
and
pop
daa
ret
jge
ror
mov
xor
or
xchg
lock
mov
and
mov
sbb
and
jp
lock
jbe
sti
(bad)
sub
add
sub
mov
sub
lahf
inc
outs
pop
std
sbb
add
xchg
sub
je
mov
stos
push
mov
repz
add
mov
addr16
xor
out
(bad)
call
mov
jb
jle
or
push
pop
and
dec
iret
arpl
loop
mov
push
or
xchg
xchg
fwait
adc
fidiv
xchg
in
(bad)
in
adc
sbb
cdq
mov
retf
adc
xchg
pop
and
cwde
imul
jg
or
hlt
push
popf
(bad)
je
retf
leave
fstp
dec
lea
movs
push
xchg
inc
(bad)
fsubr
test
pop
es
lahf
nop
pushf
jns
jno
cmp
mov
pop
paddusb
xchg
out
pop
jg
xchg
cmc
in
jmp
pop
inc
shl
in
sub
popf
inc
or
mul
movs
dec
rol
mov
(bad)
jg
mov
jg
push
or
dec
ret
gs
cmps
mov
outs
adc
daa
(bad)
mov
lods
xchg
pop
ret
and
adc
xor
add
shl
fmul
les
inc
cmp
xor
xor
pop
fnstenv
push
cmp
nop
add
and
je
sub
add
lock
test
ds
dec
cmp
stos
js
unpckhps
clc
mov
in
mov
or
repnz
pop
sbb
sti
jo
add
(bad)
and
inc
aaa
daa
loop
ss
sub
popa
or
push
cmps
push
pop
lds
outs
std
imul
push
ins
fdiv
outs
sub
out
imul
push
pusha
or
fst
push
jnp
sub
cmp
out
inc
or
out
inc
push
and
inc
cdq
sub
inc
stos
outs
jge
ror
pop
jb
ja
out
popa
xchg
fbstp
out
mov
push
div
sbb
or
sbb
je
jns
mov
rol
mov
aad
out
hlt
nop
sbb
xlat
and
cmp
inc
inc
ins
lods
sbb
lds
cwde
popa
or
push
mov
mov
scas
inc
sbb
and
sub
mov
xor
shl
(bad)
aam
fsub
ret
cmps
mov
inc
nop
push
enter
out
and
ss
xchg
mov
adc
addr16
sbb
xchg
fmul
data16
xor
push
sahf
sub
jb
or
jmp
mov
lods
push
xor
cmp
inc
(bad)
test
mov
mov
sti
aam
pusha
jne
jmp
sub
into
mov
dec
jp
pop
jmp
fcom
jecxz
imul
test
aad
popa
mov
or
add
mov
and
mov
outs
es
fsub
cmc
push
int3
dec
add
repnz
jo
sbb
shr
retf
cmp
retf
xchg
push
sub
packsswb
loop
mov
sbb
test
outs
pop
pop
inc
xor
mov
stos
fidiv
xchg
movs
hlt
retf
push
fisubr
imul
push
fiadd
xor
xor
lock
dec
xchg
sbb
sar
movs
inc
and
push
mov
pop
scas
movs
cwde
push
jecxz
or
push
scas
push
mov
mov
clc
push
test
jno
xor
clc
adc
popf
push
outs
scas
add
xchg
sbb
jg
imul
or
xlat
inc
sbb
sbb
jl
mov
jge
aad
in
cmp
ins
test
nop
ret
push
test
std
in
pop
sub
call
xchg
cld
pop
adc
setbe
jg
xchg
call
stos
cmc
mov
adc
nop
ins
pop
mov
cmps
mov
fsubrp
test
adc
push
int
gs
(bad)
and
adc
nop
add
ja
pusha
add
data16
push
js
nop
imul
inc
mov
mov
cmp
sub
mov
jg
dec
jo
sti
test
div
pop
scas
jle
addr16
fbld
cli
outs
int
pop
cmp
in
arpl
mov
add
jmp
dec
xchg
scas
cwde
mov
lea
sub
jecxz
int
adc
mov
sub
mov
dec
(bad)
push
mov
dec
mov
dec
jecxz
fwait
or
aam
fs
and
and
cmp
into
jg
popa
iret
sbb
add
push
jecxz
pop
push
mov
inc
dec
ss
cs
rcl
clc
and
leave
jmp
inc
loop
jecxz
cwde
mov
mov
pop
stos
mov
jbe
mov
lds
scas
xchg
out
jle
rcr
test
(bad)
pop
mov
dec
test
aaa
dec
fs
fstp
dec
xor
cwde
add
cmp
popa
push
iret
jecxz
dec
cs
mov
pop
and
dec
mov
and
mov
mov
sbb
loop
sub
xor
jne
cmp
sbb
stos
paddusb
(bad)
retf
idiv
mov
sbb
xor
and
mov
and
mov
icebp
and
xor
js
add
adc
jns
cmp
(bad)
iret
stos
add
addr16
test
bound
sahf
pop
and
jmp
xor
lea
mov
mov
mov
bsr
add
popa
and
pop
(bad)
gs
jnp
mov
xor
or
imul
(bad)
sar
add
jae
dec
mov
and
je
xchg
dec
push
xchg
xor
in
inc
mov
mov
jecxz
aas
cmovge
add
aam
leave
lods
add
les
cmps
idiv
and
inc
mov
loop
movs
pop
xor
les
cli
mov
ins
push
adc
dec
inc
cmp
fwait
hlt
sbb
push
aaa
jne
jp
pushf
pushf
xchg
sbb
fwait
push
sti
ins
shl
xchg
inc
push
sbb
hlt
test
adc
retf
push
aam
jne
into
mov
jp
add
xlat
jbe
ja
arpl
outs
sub
imul
loopne
mov
(bad)
lock
fidivr
push
mov
xor
dec
div
mov
lds
ja
gs
xlat
xchg
movs
cs
pushf
cwde
pusha
and
cmp
fucomip
jmp
adc
mov
or
(bad)
pop
clc
inc
xor
mov
sbb
pop
jb
jae
add
pop
inc
mov
sub
inc
fs
xchg
add
pop
lods
fbstp
mov
ins
cwde
retf
adc
sub
repz
into
push
(bad)
pop
jge
pop
pop
out
int
in
push
sar
shl
jmp
xchg
(bad)
iret
sbb
mov
or
jnp
mov
adc
imul
cmps
xor
adc
xchg
imul
bswap
adc
dec
mov
xlat
jge
cwde
vcvtsi2sd
xlat
test
leave
sbb
adc
xor
je
pop
out
scas
addr16
sbb
cld
adc
push
pop
sar
push
mov
cmc
dec
push
push
gs
dec
repnz
rol
aaa
lds
mov
js
movs
mov
out
test
fsincos
dec
xchg
js
addr16
or
push
adc
int3
(bad)
rcl
js
xchg
add
sbb
pop
or
es
add
outs
pop
(bad)
std
xchg
int
dec
jle
rcl
xor
xor
mov
outs
into
sbb
gs
test
and
jmp
and
ficom
xchg
rol
dec
xchg
stos
sub
cmp
xchg
mov
xchg
or
ror
(bad)
pusha
aad
push
cmc
call
(bad)
and
push
sbb
ja
jg
mov
sbb
jp
cmp
mov
push
jb
ret
or
mov
push
or
sub
cli
icebp
xlat
stc
retf
and
add
nop
pop
in
adc
adc
call
adc
je
xor
pop
add
sub
xchg
or
or
or
loop
outs
out
(bad)
push
xchg
or
int3
int
mov
push
fs
or
in
pop
or
sar
sub
into
add
xlat
in
mov
adc
icebp
in
sahf
(bad)
sahf
push
(bad)
pop
in
add
cmps
jmp
cmps
imul
or
cmp
pop
mov
inc
adc
mov
adc
xchg
inc
daa
in
les
fidiv
add
mov
add
stc
pop
sub
arpl
lods
outs
adc
lods
cli
jle
rol
cmps
stos
add
adc
or
push
fldenv
repz
test
push
ficomp
leave
and
push
pop
stos
mov
popa
(bad)
pop
xchg
push
and
fcom
mov
cmp
pop
cmp
mov
sub
sbb
test
lock
cmp
stos
sub
jp
sub
mov
sub
sub
jne
pushf
pop
push
test
cld
ja
jl
xor
or
cmp
xchg
push
xchg
daa
cmp
js
mov
add
sbb
pop
sub
sbb
adc
js
pop
std
and
outs
aaa
and
inc
jecxz
daa
and
lahf
inc
int3
hlt
call
out
push
add
mov
es
add
mov
push
mov
(bad)
sub
fbld
jae
loopne
inc
aam
add
ja
xchg
xchg
pop
mov
jbe
add
cmps
xchg
stc
pop
jb
sub
or
lahf
mov
int
sbb
xchg
sti
mov
jae
ret
xor
xor
clc
clc
lock
in
(bad)
call
xor
jne
outs
mov
arpl
shl
jle
lea
and
xor
test
fist
loop
mov
push
jmp
inc
das
inc
repnz
loopne
jbe
dec
inc
call
sub
sub
jae
int
sub
cmp
clc
es
imul
outs
inc
call
or
in
push
mov
cmp
xchg
jle
fcomp
scas
add
or
imul
movs
sbb
shl
pop
jmp
mov
cdq
push
scas
cmp
jbe
stos
out
xor
lahf
mov
call
sbb
push
(bad)
mov
push
sub
adc
in
sbb
repnz
jl
pusha
lods
call
pop
dec
ss
xchg
fst
add
fbld
fst
dec
in
cmp
fist
push
sar
xor
rcr
les
jmp
rcl
fbld
mov
xchg
pop
jno
cmp
jp
out
je
sahf
and
jno
pop
fistp
xor
jecxz
inc
push
retf
fstp
cmp
stos
pop
movs
adc
fsubr
int3
cdq
out
bound
mov
ins
lds
enter
leave
inc
add
mov
(bad)
cmp
lea
retf
push
xor
jbe
sbb
jne
jg
imul
or
pop
out
comiss
pushf
mov
std
mov
jnp
out
out
push
dec
fnstenv
imul
mov
jecxz
(bad)
sub
test
mov
int
mov
jb
cmps
jl
dec
jmp
lock
xchg
(bad)
addr16
push
dec
out
sahf
add
mov
pop
or
sub
pop
sbb
cli
cli
and
push
loop
sbb
and
mov
ins
mov
or
jmp
repnz
jmp
push
imul
fdivr
es
cli
pop
pop
push
(bad)
or
jbe
arpl
xchg
adc
out
adc
sahf
push
movs
repz
jmp
inc
cld
or
rcr
jb
mov
adc
and
fcomp
mov
cmp
stos
loopne
out
pop
popf
xchg
int3
add
mov
and
sbb
and
mov
inc
jge
dec
fdivr
pop
popa
jo
loope
push
cmps
les
sub
push
jo
adc
dec
xchg
je
inc
addr16
sub
mov
fs
popa
jmp
ss
movs
jno
(bad)
dec
icebp
out
jns
lock
test
mov
scas
ds
mov
lahf
pop
loopne
and
movs
cmp
jae
mov
mov
push
mov
test
sub
mov
out
pop
adc
inc
pop
imul
pop
sbb
cmps
shl
jbe
jg
sbb
sbb
stos
iret
push
push
mov
aas
jnp
jmp
out
rcr
adc
out
jb
pushf
outs
rol
add
add
mov
sub
mov
inc
cmp
cmps
mov
imul
sbb
jnp
fist
fld
inc
out
popa
jp
adc
dec
adc
add
jbe
cwde
je
mov
cmps
cmp
adc
sbb
or
imul
into
test
popf
push
pop
pop
adc
add
sti
test
lahf
bound
sbb
nop
xor
and
ds
dec
mov
out
jae
jns
loopne
call
dec
mov
jb
lods
and
(bad)
arpl
or
mov
mul
loope
shr
sbb
retf
cmp
mov
shl
pushf
xchg
retf
in
push
inc
jle
push
fst
add
and
cmp
cmp
out
lock
mov
sahf
daa
mov
stos
iret
cld
lods
jae
das
cs
ins
mov
pop
push
dec
xchg
mov
or
mov
inc
mov
repnz
mov
inc
rcl
mov
mov
fs
push
adc
mov
sbb
fisttp
dec
inc
adc
fbld
je
sar
das
aam
cmp
in
nop
and
mov
xchg
sar
test
hlt
fs
mov
cmp
and
inc
xchg
pushf
stc
push
add
push
sbb
xchg
adc
shl
scas
or
dec
jbe
shl
jle
push
and
stc
into
add
xor
and
inc
push
adc
push
popa
pop
jmp
adc
jl
xchg
mov
dec
add
or
aaa
pop
adc
les
lods
or
or
idiv
or
cmp
in
faddp
sar
das
out
dec
pop
mov
bound
in
xchg
and
cmp
ret
mov
out
push
rcr
shl
in
add
or
dec
cmp
out
inc
mov
or
mov
pop
ror
test
les
sub
mov
or
std
jmp
or
fst
bound
dec
jb
leave
push
pop
push
add
pop
push
fisub
push
out
push
leave
jne
cdq
rol
mov
shl
add
jne
pop
dec
mov
fisttp
nop
push
jg
jmp
xchg
xor
loopne
nop
(bad)
xchg
in
clc
data16
movs
les
mov
jbe
lods
fidivr
cmps
push
ficom
mov
aas
xchg
loop
div
jmp
adc
adc
add
adc
scas
add
xchg
xchg
mov
push
jp
jns
cmp
cmps
ins
xor
sub
adc
ret
xchg
leave
(bad)
fisttp
xchg
sub
mov
sar
mov
adc
dec
push
dec
lods
sbb
(bad)
jecxz
xlat
dec
mov
push
xchg
cmp
imul
dec
cmp
push
or
into
outs
jle
fld
shl
fcomp
mov
shl
lds
or
ja
fwait
mov
mov
jp
pusha
in
dec
imul
(bad)
mov
call
in
push
mov
fadd
popa
jecxz
jnp
test
inc
ins
adc
add
and
or
pop
xor
loopne
dec
not
outs
cmp
mov
fcomp
in
sub
xchg
ror
push
sahf
jo
sbb
rcl
fistp
xchg
in
mov
sub
pop
fistp
test
pop
cmps
lea
out
addr16
add
inc
push
les
push
not
iret
out
popa
and
push
push
sbb
cmp
in
mov
fld
pop
and
mov
dec
fst
ret
addr16
sbb
mov
mov
sbb
push
sti
dec
dec
or
cmp
in
into
or
fcom
jno
adc
lods
int
loope
ins
loope
inc
pop
mov
gs
jge
jns
and
not
sub
mov
sub
fidivr
not
cmc
add
(bad)
and
cmp
in
leave
not
lahf
xor
add
fisttp
xor
cli
sbb
pop
xchg
outs
pop
adc
scas
test
mov
xchg
or
xor
outs
imul
fldcw
ins
push
test
loopne
lock
xchg
(bad)
hlt
(bad)
cmp
js
enter
out
jbe
ds
or
data16
xchg
fmul
xor
mov
dec
mov
or
xor
or
jl
mov
aad
inc
das
leave
popf
ds
cmp
xor
pslld
or
dec
aaa
and
js
xchg
dec
es
add
mov
ja
shl
mov
loopne
imul
or
adc
xchg
cmps
cli
fisub
and
cli
ins
lods
inc
mov
test
mov
in
dec
cmps
inc
arpl
fwait
pop
popf
or
add
iret
and
aas
mov
push
bswap
out
xor
mov
fiadd
jnp
dec
enter
in
pop
ja
cmp
cmc
cmps
neg
mov
xchg
push
test
mov
mov
shl
push
(bad)
xchg
mov
xor
cmp
jg
xchg
iret
movs
sti
cmp
repz
jns
push
xchg
or
xchg
sub
fadd
cmp
je
addr16
call
retf
mov
loope
shl
inc
loop
repz
jns
sbb
or
ror
xchg
inc
aam
out
push
xlat
inc
cmp
aaa
outs
sti
xchg
pop
fdiv
pop
stc
popa
jg
(bad)
inc
jl
test
pusha
push
adc
inc
mov
dec
stos
test
adc
mov
mov
jne
adc
stos
mov
cmp
mov
jecxz
cdq
aas
cmps
inc
or
mov
icebp
cmp
nop
(bad)
jmp
adc
adc
pushaw
sub
mov
mov
cmp
sbb
xchg
(bad)
and
xchg
(bad)
mov
xchg
lahf
les
dec
pushf
nop
je
dec
cld
cmp
mov
bound
xor
cmp
sbb
and
mov
jo
jg
jmp
popf
mov
jmp
pcmpgtd
data16
sub
add
mov
xchg
mov
and
xor
imul
inc
test
loope
sub
ss
push
mov
gs
mov
cmc
mov
push
and
mov
xchg
add
xchg
(bad)
push
and
jmp
add
ret
mov
xchg
xlat
pop
sub
leave
iret
aaa
or
stc
push
loop
(bad)
pusha
(bad)
fs
jg
cmp
jno
cmc
clc
mov
xor
cmp
enter
enter
jg
popa
mov
jmp
mov
loopne
push
xor
das
lods
jns
arpl
punpcklbw
(bad)
pop
daa
mov
hlt
repnz
leave
stc
(bad)
mov
call
jmp
lods
jbe
dec
and
inc
mov
fidiv
je
xor
outs
or
sbb
push
lds
cmp
div
lds
and
xor
jbe
pop
int3
ret
int
scas
cmps
pop
bound
sub
mov
cs
mov
popa
shl
retf
mov
aaa
lahf
jl
sbb
xor
push
imul
pop
scas
pop
hlt
in
adc
out
into
jl
out
ret
les
cmp
in
fidivr
(bad)
lods
clc
push
jge
jle
outs
test
xchg
lock
inc
test
mul
sub
push
mov
outs
cdq
mov
push
rcr
inc
in
imul
jmp
xchg
retf
push
mov
mov
push
popa
jecxz
xchg
scas
jp
mov
xchg
or
call
and
sub
xor
inc
pop
fmul
adc
or
lahf
stos
in
and
std
mov
sub
loopne
mov
push
sub
xchg
add
adc
xchg
pop
popf
mov
add
pop
sub
rol
add
dec
in
mov
mov
mov
cmp
out
imul
add
iret
inc
movs
sbb
ja
rol
ins
icebp
push
pop
cld
aas
retf
push
lods
pusha
mov
add
fcom
std
dec
ret
sbb
das
(bad)
and
add
jecxz
arpl
out
int3
xor
xor
jne
cli
mov
dec
jae
xchg
out
mov
xchg
call
in
xchg
cwde
add
xchg
cmp
sti
fcomp
xchg
push
add
ret
or
or
xor
mov
sahf
fwait
cmp
repnz
sbb
fs
mov
loope
xchg
mov
out
ja
push
xchg
out
jmp
fistp
pop
clc
(bad)
nop
test
adc
sbb
fnstcw
retf
lock
cmp
js
mov
call
cmps
pop
test
call
and
cdq
add
push
xchg
ror
mov
sbb
mov
in
fiadd
jno
mov
inc
pushf
cmc
sbb
dec
pop
int3
call
add
ficom
pop
imul
lds
out
ja
adc
std
int
(bad)
jg
xchg
stc
ret
nop
adc
icebp
mov
in
and
xchg
mov
cmp
je
iret
in
cmps
jne
or
dec
aam
or
xchg
arpl
rcr
or
jns
fisttp
mov
in
inc
mov
push
cmps
xchg
and
fisubr
xor
ret
xchg
add
add
add
add
add
fs
repnz
fwait
mov
or
lods
fs
inc
pushf
sbb
jbe
pop
jno
addr16
cmc
cmp
dec
lock
mov
push
call
mov
adc
cli
in
stos
js
inc
add
rcl
test
pop
std
(bad)
mov
or
out
aad
sbb
mov
mov
rcr
dec
sbb
push
and
pushf
not
xchg
add
jecxz
jo
cmp
dec
scas
jne
cli
movs
hlt
fdiv
shl
popa
push
js
add
xchg
cwde
loop
stos
pop
nop
loop
sbb
inc
shl
fwait
inc
cmp
das
add
jns
adc
mov
xor
or
cmp
cli
cdq
jp
add
inc
jmp
retf
inc
das
xchg
cwde
inc
test
mov
push
repnz
add
add
sub
ror
jbe
mov
inc
xchg
push
xchg
adc
(bad)
mov
ss
jnp
add
mov
sub
icebp
stc
sub
aam
repnz
aam
es
movs
ins
pop
call
je
hlt
mov
sbb
imul
sbb
in
mov
in
pushf
repz
retf
xchg
cmp
lock
sub
lods
loope
inc
outs
sbb
(bad)
shl
sar
push
pop
adc
dec
add
leave
dec
cmc
fadd
lods
sar
lahf
jp
fs
sti
dec
clc
sub
lods
and
cmc
call
xor
mov
xchg
(bad)
repnz
push
push
test
inc
scas
cs
ror
ficom
mov
sub
pop
imul
stc
inc
test
jmp
xchg
out
cmp
in
mov
add
push
ss
retf
pop
and
push
sub
mov
out
xchg
in
int3
aad
fmul
mov
mov
mov
adc
movs
enter
sar
inc
fcmovbe
xor
fwait
sahf
loopne
(bad)
rol
mov
call
adc
inc
push
mov
sahf
cld
jae
jecxz
xchg
out
mov
sti
imul
pop
cmp
xchg
cmp
adc
cs
jl
xor
push
mov
dec
dec
shl
add
dec
cmp
rol
cmc
in
and
sbb
ret
add
and
mov
cwde
push
int3
or
push
aas
pop
jnp
pop
icebp
in
push
js
cmp
into
bound
cmp
push
icebp
cmp
fistp
mov
mov
fild
mov
fild
add
outs
mov
adc
push
mov
pop
(bad)
jl
pop
test
push
pop
xlat
pop
mov
ret
icebp
mov
ror
push
add
xor
inc
clc
adc
pusha
mov
jnp
cmp
mov
addr16
xor
inc
call
and
adc
mov
or
dec
sbb
mov
loope
shl
push
int
lock
mov
iret
mov
mov
push
enter
pop
aaa
xchg
mov
rol
aaa
mov
addr16
test
imul
jmp
test
rcr
test
fiadd
leave
adc
xchg
cmps
pop
push
daa
mov
cmp
dec
and
push
pop
jle
pushf
xchg
mov
and
push
xor
popf
xchg
fldcw
mov
(bad)
aad
sbb
lea
adc
ret
fbstp
nop
fsubr
sbb
dec
mov
sbb
cmps
sbb
xchg
mov
imul
or
lds
and
sbb
fst
scas
mov
ffreep
jg
int3
cs
cmp
les
and
mov
pusha
paddw
sti
mov
test
mov
add
adc
(bad)
fs
adc
dec
jl
mov
mov
sbb
adc
mov
pop
sbb
and
mov
xor
out
push
call
test
fld
sbb
es
pusha
pop
cmps
push
jmp
jp
outs
pop
fwait
mov
xor
jae
shr
jp
sti
in
dec
pop
and
cmc
int3
pmaddwd
jae
jnp
pop
sahf
mov
mov
jnp
mov
shl
inc
ss
inc
cmp
shl
stos
aaa
loop
loopne
sbb
cmps
fld
jnp
adc
or
mov
lods
fstp
xchg
bound
fldenv
out
popa
(bad)
fisubr
push
pop
mov
nop
dec
xchg
mov
test
dec
test
popa
inc
movs
pop
fucomip
cmc
inc
push
push
out
sub
mov
sub
mov
sub
fucomp
cmp
dec
or
and
jo
adc
jbe
sar
fucomp
fwait
or
int3
push
neg
push
stc
fcomp
pop
out
repz
js
int3
test
lods
xlat
mov
push
aaa
xchg
addr16
pop
je
push
movs
test
mov
fbstp
or
ins
pusha
xchg
(bad)
jmp
mov
icebp
and
ret
leave
popf
mov
mov
daa
and
cld
jecxz
or
inc
aaa
adc
and
and
xchg
push
dec
inc
out
bound
out
adc
pop
nop
(bad)
rol
pop
adc
fs
xchg
loope
lods
push
mov
aad
fild
adc
bound
dec
or
cdq
inc
push
test
sub
and
aam
sbb
cli
outs
inc
(bad)
sub
outs
xor
jbe
jg
jbe
fwait
pop
jbe
adc
dec
xor
daa
cmp
das
jmp
xchg
idiv
ficom
push
pop
mov
sbb
sub
push
outs
jecxz
or
dec
std
cmp
fisub
pop
or
push
scas
xor
pop
fidivr
sub
cmp
(bad)
test
lods
js
adc
into
and
test
mov
or
pop
outs
jbe
dec
pop
test
push
or
push
(bad)
adc
pop
push
push
shl
fisttp
cmp
leave
mov
sub
pop
ds
fcmovnu
jg
jbe
add
cmp
or
and
clc
xchg
sbb
push
pop
(bad)
push
sbb
pop
inc
or
xor
add
loope
ins
test
inc
xchg
(bad)
push
rep
ret
cmp
repz
test
cmp
push
mov
test
mov
mov
mov
test
adc
stc
out
jne
loopne
cmc
out
popf
(bad)
xor
inc
inc
cmc
dec
shl
test
or
push
cmp
stos
outs
mov
jo
leave
enter
sub
sub
mov
inc
sub
pop
jmp
fldenv
cmp
lods
lds
jbe
(bad)
lahf
mov
xor
mov
imul
xchg
not
call
mov
call
add
cmp
retf
repnz
les
mov
out
sub
adc
rcr
jnp
int
movs
call
mov
mov
jae
inc
pop
and
mov
jne
mov
or
add
iret
pushf
sub
add
push
xor
sti
xchg
pop
ret
ss
aam
cli
dec
inc
cmp
xlat
sub
or
mul
shl
mov
clc
mov
fwait
das
out
jno
popa
imul
pop
dec
into
pop
movs
mov
xor
or
int3
loopne
push
jge
pushf
out
icebp
pop
push
dec
ret
clc
rcl
jl
lds
out
stos
mov
pop
arpl
fcom
dec
mov
mov
stos
mov
movs
out
jecxz
pop
or
ret
jle
frstor
and
je
add
mov
fadd
call
mov
lods
jne
out
xor
repz
fimul
pop
or
push
xchg
ja
or
jno
mov
xchg
pop
out
sbb
jb
repz
push
rcr
mov
sti
push
adc
inc
jp
xor
push
inc
or
call
lods
rcr
outs
push
dec
pop
sti
jbe
push
cmp
fdiv
jle
push
xchg
and
neg
or
sub
dec
shl
imul
(bad)
bound
mov
pop
inc
or
js
ficomp
movs
arpl
mov
cmp
push
and
mov
mov
(bad)
xchg
aaa
jg
aaa
and
sti
adc
push
(bad)
scas
mov
or
mov
mov
xchg
(bad)
fist
shl
mov
inc
or
xor
test
adc
inc
outs
add
sahf
stc
sbb
inc
jbe
add
dec
fdivr
loope
ins
add
inc
push
shl
fsubrp
dec
pop
lock
and
call
lea
mov
pop
aam
push
daa
movs
push
xchg
pop
cmp
mov
fucomi
shl
push
jecxz
mov
popf
dec
scas
out
and
pop
mov
in
loopne
fwait
sub
pop
jmp
in
mov
lea
xor
add
sbb
push
movs
lods
fwait
xor
xchg
ret
sbb
push
xchg
inc
sti
mov
mov
inc
push
(bad)
jmp
jo
add
(bad)
jmp
mov
sbb
jnp
dec
pop
add
cmp
inc
leave
sahf
jb
sub
jno
ins
lds
and
inc
sub
jo
jmp
in
sub
inc
ret
ss
movs
call
outs
int3
cs
mov
leave
mov
int3
xor
mov
in
cld
sbb
mov
jb
stos
sbb
sar
leave
out
inc
ins
in
fnstsw
gs
hlt
pop
cmps
(bad)
sbb
mov
jmp
retf
cld
fist
push
jmp
mov
lods
mov
rcr
test
xor
sub
stos
jmp
inc
xchg
lods
aam
aaa
push
add
nop
sbb
sar
rep
fild
cmp
mov
add
daa
push
fs
mov
jns
cmps
xor
mov
inc
test
cdq
dec
fidivr
mov
xchg
xchg
mov
sbb
sbb
dec
idiv
sbb
mov
lahf
dec
jle
xchg
nop
pop
(bad)
or
push
loope
sub
jp
dec
ret
aaa
ret
out
adc
push
xor
fsubr
fsubr
mov
ja
adc
int3
hlt
dec
pop
jp
adc
dec
lds
ror
shl
mov
jbe
arpl
lods
int
or
sub
rol
in
dec
ror
fsubr
xor
sub
out
pop
mov
mov
cmps
rcl
mov
pop
lods
test
mov
pop
pop
xlat
test
add
gs
inc
popf
cmp
mov
movs
out
je
sbb
fisttp
int
xchg
mov
fdiv
xor
arpl
mov
lods
fld
add
sti
mov
ror
stos
and
xor
sbb
jecxz
dec
retf
ror
inc
popa
nop
cmc
stos
je
les
sbb
test
mov
mov
iret
scas
enter
and
call
adc
das
cmp
push
mov
fcmovnb
inc
pop
cmp
retf
jb
mov
mov
push
mov
jo
sub
je
inc
pop
mov
pop
cmp
jbe
in
xor
mov
adc
or
les
xor
inc
std
repz
push
xlat
inc
xor
movs
mov
push
jbe
popa
cs
push
mov
or
inc
pop
cmp
bound
dec
push
loope
dec
and
mov
ja
sub
inc
sbb
mov
outs
sub
call
inc
xchg
sbb
mov
inc
(bad)
jmp
loope
test
in
cmc
sub
jb
out
mul
push
push
lods
int3
pop
mov
or
mov
inc
xchg
pop
pop
loop
dec
pop
sbb
js
(bad)
cmp
and
stc
add
out
jge
pop
pop
lods
loop
adc
dec
and
dec
imul
mov
out
sub
mov
and
jp
rcr
sbb
repz
jmp
in
xlat
das
and
pop
icebp
adc
add
ss
sbb
call
mov
fisttp
cmp
bound
cmps
lock
pop
jns
mov
aas
or
cs
shr
inc
mov
push
mov
(bad)
ret
push
jnp
test
jno
jnp
push
and
stos
sub
popa
cmps
cdq
xchg
ins
jns
mov
xchg
inc
mov
add
stos
fimul
inc
fldz
test
sub
or
loop
or
adc
inc
jg
(bad)
mov
hlt
ror
scas
ror
mov
inc
lods
xor
inc
jno
scas
sbb
addr16
jmp
push
outs
(bad)
loop
fcomp
bound
fucomip
test
add
cmp
retf
mov
retf
mov
call
jmp
cmc
or
or
mov
sbb
stos
loopne
leave
xor
push
scas
ins
sub
sar
xchg
test
ins
pop
jo
cmp
mov
mov
push
mov
jp
call
and
jmp
stos
ds
imul
into
sub
jg
aas
loope
xor
mov
fisttp
fnsetpm(287
jnp
adc
call
cli
sahf
mov
lea
cmp
addr16
cmp
cmp
adc
push
fistp
retf
xor
add
pop
dec
and
fwait
(bad)
push
out
inc
std
pusha
xor
xor
shr
mov
pop
retf
fsub
mov
sbb
pusha
ds
cs
pop
cmp
dec
cmps
xchg
pop
dec
cld
xchg
aam
adc
shr
add
shl
xchg
icebp
xlat
add
cmp
loope
adc
mov
or
push
repnz
cmp
out
mov
dec
out
push
sti
fbstp
cdq
in
jns
jae
add
ss
daa
adc
in
add
cmp
call
pop
mov
sti
lods
inc
movs
add
in
jns
and
cmp
ror
and
adc
sub
lahf
xlat
call
sbb
cmp
addr16
push
pop
pop
adc
in
arpl
(bad)
scas
mov
mov
pushf
stc
mov
fcmovne
mov
fsubp
mov
jns
dec
fsubr
out
push
arpl
push
sbb
ja
push
lds
inc
pop
sbb
jb
shr
retf
sub
scas
cmc
into
mov
jg
leave
cld
out
pop
test
or
cmp
test
sbb
jl
inc
shr
sbb
lds
stos
push
jmp
xchg
fisub
in
cld
inc
cmp
xchg
xor
push
shl
mov
aas
mov
jns
ss
mov
bound
test
movs
dec
lock
sub
jg
scas
jge
sub
imul
add
add
cdq
icebp
sar
pop
xchg
mov
inc
pop
cmc
(bad)
sbb
push
or
scas
fisub
arpl
in
sbb
jb
and
sbb
adc
(bad)
icebp
jbe
inc
jge
push
pop
iret
cmp
aam
(bad)
call
jne
sar
push
push
jns
pop
jp
fidiv
push
and
jmp
imul
iret
idiv
popf
cmc
rol
jmp
mov
push
mov
jge
adc
jl
pop
stc
popf
push
xor
(bad)
push
fdivrp
data16
jge
mov
cdq
mov
sbb
test
adc
or
and
shl
shl
lock
shl
mov
jge
sub
xchg
ins
call
retf
xor
sub
out
ffreep
enter
loope
sti
(bad)
pop
jne
xchg
bound
sub
mov
jl
push
stos
and
(bad)
sub
cs
call
add
push
or
fbstp
sub
mov
mov
mov
xchg
push
retf
je
mov
mov
retf
push
jp
test
ds
stc
je
mov
aaa
inc
sbb
push
cmps
mov
xor
out
push
dec
pushf
inc
pusha
(bad)
pop
(bad)
fstp
aam
and
cmps
pop
call
pop
pop
jl
mov
outs
test
xchg
fcomp
addr16
ret
imul
ins
inc
mov
mov
adc
(bad)
fwait
or
xor
(bad)
stos
outs
sub
adc
sbb
push
aam
(bad)
push
dec
mov
mov
sbb
fwait
callw
push
jecxz
adc
daa
push
adc
or
ror
aam
fstp
jne
add
mov
dec
jnp
mov
lea
mov
retf
mov
mov
ss
inc
sub
inc
loope
mov
adc
icebp
jecxz
sub
ins
and
and
add
jno
jp
gs
mov
xchg
inc
jns
dec
adc
jge
mov
push
pop
ret
mov
sub
into
aaa
xor
sub
mov
pop
movs
aam
mov
js
dec
sbb
pop
cmp
xlat
aad
or
jb
push
inc
inc
mov
lods
out
inc
ja
lea
adc
aad
arpl
mov
retf
lock
mov
jns
call
cmp
cmps
leave
inc
call
das
dec
xchg
sbb
pop
cli
jg
xor
adc
and
mul
scas
pop
cmp
pop
and
xor
mov
jmp
pop
leave
inc
icebp
sbb
stc
inc
adc
ins
sbb
mov
cmp
stc
popf
mov
cs
mul
lods
push
adc
xor
mov
sub
aad
das
imul
and
loopne
jbe
jge
mov
rcr
fisttp
(bad)
neg
inc
jns
cmp
inc
xchg
fsub
sbb
pop
inc
add
xchg
test
ins
pop
mov
fwait
retf
xchg
cld
mov
test
inc
fadd
pop
jl
fld
loop
std
clc
add
loope
clc
lods
xchg
xchg
mov
sbb
std
shl
push
cld
cdq
add
add
mov
(bad)
dec
mov
pop
cmp
or
in
call
pmullw
pop
out
mov
test
pop
xlat
fwait
std
call
dec
mov
push
or
int
test
dec
lahf
or
adc
xchg
pop
xchg
lahf
push
adc
sub
inc
mov
jmp
xchg
fmul
imul
and
or
pop
test
adc
sbb
jmp
inc
xor
jnp
in
adc
icebp
addr16
adc
fmul
rol
fdiv
mov
or
add
lea
inc
loope
dec
jge
cmp
pop
pop
test
retf
mov
xor
imul
jmp
ficom
add
pop
cmp
gs
sub
sub
dec
mov
xchg
in
push
popa
jg
mov
movs
mov
std
(bad)
lods
xor
aaa
mov
push
loope
jl
jmp
div
out
adc
xlat
pop
push
push
sbb
shl
lods
frstor
iret
shl
into
sbb
sub
(bad)
lea
dec
(bad)
mov
popa
adc
(bad)
repz
push
retf
arpl
xor
addr16
sbb
fisttp
stos
jo
rol
fbld
addr16
jnp
loopne
inc
xchg
or
lods
inc
xor
pop
push
leave
fst
pop
cdq
add
xor
mov
mov
call
bound
rcr
mov
aad
cwde
sbb
sub
pop
loope
inc
pop
je
imul
mov
in
call
loope
xchg
cmps
mov
loop
inc
lds
outs
mov
arpl
test
nop
push
icebp
loopne
cmp
mov
sbb
jb
xor
sbb
cli
scas
xchg
jp
stos
scas
int3
dec
outs
iret
aas
push
adc
sbb
push
inc
xor
xchg
jne
add
shl
dec
pop
je
dec
idiv
mov
in
add
clc
aad
(bad)
sub
xchg
push
mov
arpl
pop
mov
jmp
cmps
push
dec
jb
mov
loope
jecxz
in
pop
pop
pushf
cmp
les
ret
fwait
pop
mov
or
les
lods
cmps
mov
cli
jno
xchg
push
mov
ins
xor
mov
pop
fdivr
dec
cli
out
xor
push
(bad)
iret
mov
inc
push
dec
jg
inc
inc
mov
fidivr
outs
dec
sbb
xchg
addr16
sub
xchg
dec
rcr
mov
call
ss
popf
push
xor
pop
and
push
pop
pushf
mov
lea
pop
mov
lahf
in
jl
stc
ret
es
add
dec
(bad)
(bad)
adc
psubsw
retf
movs
cmp
int3
mov
pop
cmp
pop
dec
push
jp
pop
cmp
push
out
inc
xor
imul
dec
jmp
int
push
cwde
arpl
adc
inc
jmp
int
add
xchg
dec
loop
ds
inc
into
mov
pop
ja
mov
lock
jbe
cmp
pushf
shl
inc
lods
xchg
push
mov
ret
jp
xchg
call
sub
iret
fadd
mov
dec
leave
jle
pop
fstp
jnp
or
mov
stos
add
addr16
repz
popa
push
loope
pop
rcr
add
in
shl
jnp
daa
mov
out
push
cmp
or
and
mov
jo
push
adc
scas
leave
mov
inc
(bad)
js
test
jge
mov
and
and
lahf
imul
sbb
ret
jg
push
xchg
jmp
sti
add
dec
(bad)
call
jbe
shl
push
push
mov
push
cmp
mov
add
arpl
enter
pusha
mov
add
xor
mov
push
out
sub
scas
(bad)
sar
fcomip
arpl
mov
cmps
stos
dec
cmps
xchg
sub
jnp
scas
mov
fcom
xchg
repnz
icebp
pop
(bad)
cld
or
xchg
bound
pushf
pop
sbb
int
and
mov
ror
fldcw
sub
or
test
popf
fwait
imul
shr
jge
aas
ds
pop
aad
shr
or
jmp
cmp
sub
adc
push
xor
mov
dec
mov
sbb
cdq
js
add
push
dec
push
addr16
call
shl
dec
pop
inc
popa
sub
(bad)
pop
xor
lahf
and
fwait
mov
in
imul
pop
sub
scas
jecxz
add
iret
pop
movq
dec
movs
test
inc
pop
int3
les
mov
pop
add
and
sub
repz
fisubr
je
(bad)
mov
out
dec
mov
ret
cmp
out
cmc
cli
mov
mov
dec
nop
call
mov
(bad)
or
mov
aaa
call
pop
mov
int3
push
mov
or
inc
jmp
addr16
and
loope
jmp
aad
adc
cmp
and
cmp
std
sub
dec
cmp
ja
jp
nop
adc
jb
pop
dec
pop
jbe
or
sbb
inc
stc
mov
cmp
or
jge
sahf
jg
xor
cmp
pop
xor
test
cwde
dec
mov
pop
ror
jl
pop
icebp
add
mov
inc
ins
ins
cmp
push
push
(bad)
nop
mov
(bad)
mov
(bad)
xacquire
pop
shl
(bad)
in
inc
inc
jmp
stos
div
daa
pop
fsub
test
shl
and
sbb
(bad)
mov
jmp
dec
inc
cdq
dec
sar
daa
add
xchg
jl
jb
dec
jmp
aaa
icebp
not
js
dec
icebp
mov
xor
mov
stos
std
mov
call
and
cmps
mov
in
cmp
mov
lahf
xor
push
mov
xchg
aam
jae
xchg
push
lock
push
dec
dec
and
pop
sbb
nop
shl
sub
mov
sbb
sub
cld
jp
jg
pusha
and
out
enter
sub
cli
and
shl
add
mov
xchg
and
sub
movs
movs
jb
inc
ds
xchg
fidiv
pop
fisub
fisttp
mov
pop
mov
dec
outs
int
ret
ret
push
mov
sahf
sub
popf
ror
sub
out
xchg
jmp
stos
ror
inc
inc
adc
rol
sbb
ja
retf
xlat
aad
sub
std
cmps
and
cwde
mov
jge
adc
sbb
test
push
lods
leave
das
mov
mov
jae
xor
and
add
sbb
push
mov
and
fisubr
ds
or
popf
mov
add
mov
or
sbb
addr16
pop
int3
ret
stc
idiv
mov
stc
pop
cdq
mov
jge
cmp
ss
sub
pusha
jmp
mov
std
inc
mov
stos
mov
mov
into
hlt
mov
jmp
data16
adc
dec
jno
jle
out
cmovb
jno
jg
mov
mov
in
ret
test
jns
outs
daa
test
cmp
jle
dec
clc
and
add
xchg
sbb
das
jl
out
add
and
adc
dec
in
(bad)
movs
sub
push
xchg
leave
(bad)
jns
pop
inc
mov
mov
adc
cmp
sahf
or
cmc
test
cmc
add
test
push
and
xchg
pop
pop
xchg
outs
in
push
jae
cmc
pop
inc
sbb
nop
jnp
sbb
pop
jns
ins
add
jmp
lock
and
cld
pop
ins
inc
sar
push
push
push
inc
mov
xlat
test
imul
icebp
or
push
pop
lds
das
fstp
lods
xor
mov
enter
imul
inc
popa
jecxz
dec
icebp
or
cdq
cmp
push
rol
cmp
add
mov
cwde
xor
lock
push
mov
mov
ins
stos
inc
push
mov
lahf
mov
dec
in
jp
stc
push
mov
pop
aad
pop
aaa
sahf
mov
jg
push
jp
mov
cmc
std
jnp
mov
(bad)
jo
sub
xchg
pushf
or
mov
mov
push
movs
cmp
imul
mov
int
(bad)
mov
inc
retf
fstp
out
repz
xlat
adc
inc
aam
out
dec
mov
hlt
imul
jne
test
(bad)
xchg
aas
jns
nop
jb
or
nop
adc
jbe
cwde
cmp
pop
inc
arpl
popa
push
dec
cmps
out
dec
jno
mov
mov
pop
push
sbb
xor
inc
adc
or
repnz
push
mov
pop
mov
mov
nop
das
fisubr
mov
xchg
sbb
shl
aam
sbb
mov
scas
in
xchg
in
pop
mov
xchg
shl
out
std
stc
imul
lds
ret
shl
and
dec
out
cdq
imul
sbb
cwde
sbb
inc
mov
jmp
mov
loopne
push
scas
cmp
or
cld
jne
jge
scas
(bad)
and
add
mov
add
shr
stos
cld
sbb
dec
lea
sti
gs
in
cli
dec
out
and
cmp
and
sbb
sub
in
add
sub
jmp
mov
mov
rcr
jb
xchg
inc
dec
sbb
bound
dec
adc
xor
sbb
adc
or
mov
cld
iret
push
inc
pushf
jnp
mov
inc
jmp
js
(bad)
dec
pop
lea
stos
xchg
rcl
xor
adc
mov
ret
xor
push
add
out
sub
lds
jmp
xor
in
mov
fdiv
add
jecxz
pop
add
sbb
jb
mov
xor
lahf
es
nop
outs
pop
adc
xor
mov
sbb
cmp
sub
dec
sbb
push
mov
pop
push
xchg
lea
or
push
xor
fldenv
fwait
cld
popf
dec
push
mov
jmp
cwde
mov
fwait
dec
or
sub
pop
sub
sbb
fdiv
lock
cdq
shr
or
fld
enter
scas
xchg
push
mov
mov
pop
push
mov
sbb
repz
es
add
jmp
jp
mov
les
sub
or
push
data16
stos
out
xor
xchg
inc
lods
clc
call
push
pop
sub
jns
das
fmul
aas
icebp
retf
inc
je
pop
and
ret
add
mov
mov
add
rcr
mov
jo
pusha
sbb
out
ret
xchg
int
lods
xchg
or
lahf
sub
push
pop
pop
jae
push
outs
pop
fdivr
(bad)
xlat
(bad)
cmc
(bad)
cld
std
popa
adc
adc
jl
sub
lahf
push
fisttp
or
mov
fimul
rcl
fsubr
idiv
(bad)
sbb
and
jmp
mul
adc
nop
xchg
adc
icebp
cmp
mov
mov
stos
pop
pop
jmp
sub
(bad)
or
pushf
stos
mov
bound
push
int
test
add
add
in
in
mov
ja
adc
adc
dec
jnp
(bad)
mov
jbe
fbstp
mov
sbb
je
mov
pop
icebp
or
test
jp
jno
mov
iret
and
push
rcl
xchg
jns
inc
push
pop
test
into
and
das
jl
sub
daa
ins
setns
cmp
int3
mov
push
ins
cmp
inc
inc
or
or
dec
out
dec
into
mov
scas
jp
test
jb
or
outs
cmp
ss
push
pop
xchg
add
dec
push
repz
les
pusha
int3
pop
pop
test
cmc
jo
inc
lea
xchg
cmp
mov
mov
pusha
into
imul
jmp
ds
dec
pop
add
xor
scas
dec
aad
jne
adc
xor
bound
jae
xchg
and
xor
int
outs
fcom
and
sub
sbb
sbb
adc
push
ror
mov
cdq
push
xchg
dec
jge
pop
stc
fidiv
mov
pop
dec
add
push
sbb
pusha
and
push
ror
inc
ins
ficomp
stc
clc
movs
sub
outs
sbb
push
jmp
ins
adc
loope
std
pop
mov
(bad)
push
jge
cmp
retf
inc
sbb
ins
cwde
inc
into
sbb
pop
cmp
sub
cli
sbb
xchg
and
ss
cwde
and
rol
sbb
jne
mov
test
sbb
adc
(bad)
stos
inc
dec
imul
dec
sbb
call
addr16
push
sub
adc
adc
mov
xlat
push
(bad)
ss
push
xor
inc
adc
rol
test
das
or
sub
xor
test
mov
test
jne
bound
cmc
inc
cmp
pop
sti
sub
xchg
jmp
mov
jne
sbb
push
in
and
test
mov
and
and
jecxz
in
movs
jp
adc
add
retf
in
out
adc
mov
xor
add
adc
ins
mov
retf
fmul
fstp
adc
or
dec
daa
jo
ins
sbb
dec
xor
adc
int3
xor
out
cwde
or
mov
icebp
rcr
sub
sar
cld
and
cmps
xlat
jge
push
add
mov
mov
mul
cmps
push
sbb
push
jmp
test
inc
push
mov
mov
and
dec
mov
mov
arpl
(bad)
and
out
jecxz
dec
xchg
adc
imul
aad
fsub
and
(bad)
jae
and
les
jle
dec
push
cmp
or
jns
int
inc
mov
sar
loop
rcr
aad
arpl
test
out
ret
outs
jge
xor
sbb
mov
mov
fsub
push
icebp
mov
xor
shl
xchg
inc
mov
mov
pop
aad
jb
mov
mov
int
jp
std
ficomp
cmp
lock
icebp
icebp
inc
stc
sahf
outs
cmp
call
and
mov
retf
fnstcw
adc
dec
shr
cmc
cmps
into
push
add
arpl
fiadd
inc
daa
or
adc
mov
mov
repnz
pop
das
jns
or
cmp
xchg
hlt
dec
or
call
xchg
mov
cmp
cs
outs
pop
pop
ss
or
mov
arpl
repnz
jl
fst
mov
xchg
sbb
pop
repz
test
popf
or
xlat
mov
popf
rol
sbb
and
stos
jno
pop
je
imul
pusha
xchg
cs
inc
xor
in
and
cmp
lds
and
pop
jne
sbb
jp
xor
xchg
leave
cmp
fcomip
xor
jbe
jo
add
push
retf
and
sbb
stos
xor
push
rol
(bad)
cmp
sbb
aas
and
adc
or
test
rcr
cdq
jbe
xor
adc
pop
jae
xor
bound
shl
pop
push
xchg
mov
cmp
gs
and
call
dec
ins
pop
xor
xor
sti
add
lods
mov
fisub
push
and
or
shr
mov
or
pop
push
aaa
xchg
outs
sub
jo
(bad)
pop
ror
push
pusha
or
pop
sub
in
push
sbb
pop
push
popa
lock
lods
xchg
mov
test
xchg
sub
add
(bad)
arpl
hlt
and
jne
push
jle
sbb
fistp
fadd
push
cmp
xchg
mov
mov
adc
mov
inc
dec
xchg
jmp
sub
fadd
out
sub
call
(bad)
cmp
das
pop
pop
in
sti
adc
test
add
jbe
aaa
int
out
sbb
stc
imul
jecxz
test
or
mov
(bad)
push
ficomp
out
cld
in
lods
mov
inc
dec
push
sbb
pop
out
cld
das
fisubr
inc
mov
mov
shl
shr
or
enter
sbb
pop
int
pusha
fwait
push
lods
arpl
push
(bad)
push
mov
push
push
adc
xchg
xor
imul
in
fwait
mov
cmp
xchg
stc
push
xchg
movs
iret
test
stos
das
loope
cmps
xchg
popf
data16
pop
jae
in
or
jns
and
push
xchg
(bad)
sbb
mov
push
add
inc
pop
sar
jo
cwde
test
loop
and
pop
out
scas
imul
add
jne
cmps
das
aad
(bad)
(bad)
push
leave
loope
cmp
sbb
js
jmp
fistp
or
mov
ss
retf
xchg
cwde
cs
ffree
out
movs
leave
inc
lods
mov
mov
push
mov
loope
test
cdq
pop
popa
clc
mov
imul
rol
fwait
jg
data16
je
adc
and
xchg
aam
mov
push
or
xchg
and
sbb
pop
aam
inc
add
cmp
inc
lds
mov
add
or
xchg
call
lahf
cmp
call
mov
adc
dec
xchg
dec
xchg
and
dec
dec
aam
aas
fwait
mov
cmp
sti
daa
xchg
popf
add
bound
jno
jge
retf
jae
and
sbb
push
test
shl
pop
xor
je
ja
jle
sar
jo
icebp
test
(bad)
push
jae
adc
mov
out
pop
mov
mov
cli
test
mov
aam
mov
pop
rcl
adc
push
pop
push
or
push
dec
outs
mov
add
sub
inc
mov
outs
sbb
jmp
mov
clc
or
pop
pop
dec
enter
in
mov
or
out
sahf
and
pop
and
xor
adc
test
and
dec
push
sar
jecxz
ret
mov
xchg
cmp
fdecstp
retf
rcl
xor
adc
push
and
adc
shl
sbb
cwde
mov
movs
mov
dec
(bad)
and
outs
pop
cld
jge
push
jge
test
dec
xchg
pop
cdq
or
cdq
rcr
dec
mov
add
mov
or
inc
out
lods
mov
dec
cmp
jne
cmp
rol
out
sbb
imul
sbb
fdiv
cli
call
scas
xchg
or
ja
sub
and
mov
mov
shr
cmp
scas
movs
adc
and
loope
cli
popf
pop
aaa
push
or
mov
jnp
xor
aam
fstp
(bad)
pushf
in
jge
gs
outs
and
pop
ss
xor
lock
mov
imul
mov
not
push
pop
iret
mov
(bad)
fwait
inc
mov
icebp
dec
cmps
mov
sub
imul
add
xchg
jecxz
or
stos
xchg
mov
mov
inc
xchg
and
pop
dec
loop
sbb
das
ficom
(bad)
cmp
inc
call
loopne
retf
es
mov
mov
aaa
jo
cli
hlt
int
stc
out
push
sbb
mov
adc
push
push
pop
test
(bad)
jg
lods
mov
inc
(bad)
pop
(bad)
(bad)
fcomp
push
cld
aas
shr
pop
sbb
cld
xor
push
dec
clc
pusha
out
push
fwait
xor
fwait
xchg
pop
lods
fwait
mov
ins
setne
scas
mov
into
cld
jo
aad
and
movs
lahf
push
inc
mov
das
dec
mov
dec
stc
sbb
sar
out
mov
jno
std
sbb
push
push
cmp
stc
mov
movs
mov
mov
scas
add
jnp
xchg
rcl
mov
stos
sbb
inc
or
stos
push
clc
push
jmp
mov
stos
lds
shr
cdq
xor
jns
(bad)
loopne
jae
test
or
dec
scas
loopne
(bad)
outs
mov
sub
push
repz
cli
inc
fs
inc
icebp
data16
ss
sar
psrad
xor
cmp
and
(bad)
cmc
jb
pop
imul
sahf
xchg
jmp
xchg
and
sub
daa
xchg
adc
loop
jns
ja
xchg
mov
sbb
mov
mov
add
dec
hlt
jmp
and
out
mov
cmp
add
mov
push
and
sbb
mov
pop
lods
inc
adc
add
ins
sti
dec
jo
hlt
and
xchg
sahf
(bad)
dec
fs
add
cmps
addr16
jg
add
in
popa
pop
outs
or
cmp
mov
add
dec
push
(bad)
xor
lods
add
push
mov
add
jb
add
mov
pop
xchg
cmp
pop
fcomip
aad
adc
icebp
push
(bad)
shl
fs
pop
dec
fcomp
mov
inc
ret
jb
xchg
inc
adc
popf
cmps
ret
jle
call
xchg
xchg
mov
add
dec
jecxz
sub
popfw
mov
aad
jmp
test
clc
pop
test
push
fcmovnbe
ds
xchg
jo
sbb
push
inc
sahf
ror
out
xor
sbb
sub
fisttp
mov
test
movs
aad
lock
mov
cmp
sub
jmp
test
add
mov
cmps
ss
or
sbb
imul
pop
push
mov
pop
push
fistp
push
jne
jl
cmp
pushf
test
sub
ret
add
scas
addr16
mov
loopne
mov
rol
xchg
fimul
jmp
hlt
mov
pop
loopne
or
adc
inc
loope
fdivr
in
mov
dec
sbb
neg
jmp
sbb
and
iret
mov
dec
push
jmp
ss
pop
call
repnz
lods
sar
jge
push
pop
mov
fstp
stos
push
cmp
lea
sub
mov
and
int3
retf
(bad)
es
jo
push
movs
pop
outs
mov
mov
adc
dec
or
sub
out
mov
ins
or
fdivrp
es
cmp
push
shl
or
push
mov
push
mov
pop
repnz
rcl
adc
dec
cli
adc
add
ja
loopne
push
or
das
fisubr
mov
je
pop
and
jmp
fisttp
js
and
fnsave
retf
push
shl
xabort
cdq
test
sub
fwait
lock
adc
das
adc
(bad)
cs
mov
les
out
push
dec
and
test
stc
push
mov
test
and
shl
fcmovu
mov
xchg
mov
mov
stos
pop
(bad)
adc
push
xchg
fdivr
mov
cdq
inc
and
mov
in
mov
xchg
sbb
mov
adc
pop
dec
cmc
mov
push
inc
imul
scas
sti
xchg
sar
call
fwait
sub
cmps
movs
cmp
in
inc
call
push
sar
ret
mov
jno
jp
push
inc
sub
dec
es
mov
adc
scas
mov
jmp
xchg
mov
call
out
or
sub
pop
sbb
arpl
clc
(bad)
fcmovnu
push
dec
jg
ffreep
stos
dec
fst
fcmovnbe
nop
mov
movs
repz
inc
scas
es
inc
cli
mov
add
nop
sub
iret
add
push
(bad)
ins
mov
(bad)
mov
fcomp
sahf
aam
mov
or
ins
fld
mov
jp
fist
lahf
pop
ins
cmp
xchg
cdq
xor
jmp
mov
ss
cs
sub
xchg
(bad)
leave
or
bound
adc
call
movs
inc
adc
push
or
into
call
xchg
cmp
jb
lods
dec
mov
fidivr
add
inc
fcmovnbe
int
mov
inc
xchg
(bad)
aam
jmp
inc
pop
push
pop
push
and
and
push
das
xchg
xor
and
or
out
stos
nop
stos
push
cld
fldenv
sbb
push
(bad)
push
int3
ins
pop
shr
ins
mov
push
pop
cmp
jnp
js
add
cmp
outs
add
adc
mov
nop
sub
(bad)
mov
mov
adc
sub
dec
fwait
stc
cld
sbb
mov
loopne
js
dec
ja
pop
jge
in
xchg
ror
jge
out
adc
imul
lods
adc
mov
sub
fsubp
pop
push
xchg
add
dec
and
test
lods
(bad)
push
retf
imul
out
mov
inc
xor
in
movs
adc
or
cmp
mov
jmp
dec
aas
popfw
cmps
retf
cld
mov
jns
nop
jle
js
pop
jg
mov
into
sahf
pop
push
lds
cmps
xlat
sti
cmp
jno
ds
js
jb
push
cmps
or
and
aam
and
xchg
enter
add
or
ja
bound
fbstp
jge
dec
into
imul
mov
dec
pop
xchg
fdivr
aaa
adc
mov
or
aaa
stos
dec
xlat
dec
xadd
fstp
adc
std
(bad)
lods
cmps
(bad)
or
inc
cmp
daa
fcmovnbe
mov
ins
sahf
sbb
mov
sar
out
dec
pushf
dec
imul
add
aas
mov
push
inc
sar
dec
inc
das
call
dec
and
ins
repz
inc
cmp
(bad)
xlat
(bad)
int
and
inc
aas
addr16
ja
dec
sahf
sub
jo
dec
add
sub
loopne
ss
test
pop
adc
add
retf
test
cs
pop
fsubr
jmp
out
clc
fsub
xchg
cmp
and
cmps
xor
rcr
jge
mov
add
pushf
mov
push
or
sti
and
jo
dec
aam
jo
mov
and
scas
shl
scas
push
inc
fsubr
lds
leave
pop
test
push
push
cmc
mov
dec
jmp
lods
pop
jge
mov
jmp
mov
shl
and
retf
fisub
lock
iret
jg
test
and
jp
fmul
dec
js
test
pop
pop
inc
out
xchg
call
lods
daa
jno
adc
sahf
sbb
sbb
add
pop
inc
jp
inc
inc
cwde
hlt
mov
mov
push
stos
adc
cmp
push
inc
mov
ret
test
mov
es
mov
push
dec
shl
retf
dec
cwde
(bad)
pop
shl
jne
mov
inc
fadd
jbe
(bad)
int3
push
push
daa
ret
stc
jmp
mov
xchg
mov
sub
xor
mov
mov
or
(bad)
movs
repz
shr
inc
int3
mov
movzx
adc
push
and
push
push
stos
xor
add
pop
pop
push
int3
push
dec
mov
call
(bad)
loopne
mov
bswap
(bad)
ss
and
cmp
jle
push
xchg
and
pop
cmps
inc
(bad)
adc
call
pop
rol
sbb
pop
ret
mov
pop
lods
sbb
je
sub
mov
lock
or
inc
inc
retf
aaa
ins
aaa
mov
hlt
jmp
and
sbb
loop
ffree
mov
cmc
sub
stos
jbe
ror
jo
mov
ins
cmp
xor
leave
inc
adc
shr
jl
sbb
sub
pop
lea
loop
lahf
mov
mov
icebp
add
sbb
cdq
cmps
loope
mov
sub
loop
mov
cmp
clc
dec
sbb
retf
mov
adc
fbld
mov
fbstp
adc
ret
ds
fldenv
out
fisttp
in
rol
or
arpl
push
(bad)
xchg
xchg
movs
mov
(bad)
push
fst
mov
xchg
aas
das
vmovd
inc
retf
std
pusha
fild
aaa
mov
mov
arpl
mov
data16
fisttp
push
lds
xchg
sbb
sub
jae
call
dec
les
inc
test
add
in
pusha
adc
or
pop
push
adc
push
nop
and
mov
lods
mov
movs
mov
pop
mov
sbb
add
idiv
jne
mov
mov
leave
out
aad
or
jbe
fwait
stc
and
scas
xchg
and
push
rep
les
sbb
pop
loop
pusha
push
lahf
ret
jp
sub
cdq
inc
and
xchg
xor
leave
inc
xchg
mov
push
or
fs
bound
in
inc
stos
push
pop
out
pop
dec
jp
xchg
and
das
dec
cmp
mov
repz
fidivr
out
loop
loop
std
lahf
push
pusha
pop
dec
add
outs
cmp
(bad)
cmps
shr
cmp
daa
push
das
gs
bound
and
cli
icebp
scas
in
pop
mov
jmp
rol
mov
mov
cmp
daa
mov
push
jb
sub
mov
inc
xchg
leave
cld
lods
fstp
sub
and
or
out
adc
out
(bad)
cmp
push
jg
mov
cwde
out
inc
clc
sub
cmps
push
(bad)
mov
scas
mov
imul
sbb
sub
push
retf
(bad)
aaa
or
push
mov
inc
or
dec
inc
push
inc
inc
or
jge
xchg
cmp
and
cs
jmp
mov
xor
loope
nop
mov
imul
push
mov
push
(bad)
out
in
sub
cmp
out
dec
mov
jmp
jle
and
stc
jg
push
add
or
jl
neg
push
daa
out
and
or
pop
xlat
popf
mov
cmps
push
gs
cs
(bad)
rol
mov
mov
pusha
data16
pop
das
arpl
xchg
loope
pop
enter
pop
xchg
ins
or
mov
popa
adc
fidiv
cmp
pusha
jns
mov
or
adc
call
sub
xchg
in
loopne
ja
lahf
sahf
call
sub
call
xchg
adc
aam
sub
pop
xor
arpl
add
in
or
out
jo
repz
(bad)
pusha
push
push
dec
adc
sti
mov
cmp
sbb
push
jmp
xchg
cmp
idiv
dec
adc
pop
cmp
fs
aad
and
push
dec
sbb
(bad)
adc
cmp
xchg
out
leave
movs
movs
out
ret
dec
xchg
sbb
dec
or
lahf
pop
not
inc
stos
ja
sar
mov
mov
mov
lods
inc
push
and
push
and
lods
in
mov
(bad)
and
iret
fs
mov
int
jo
test
movs
frstor
and
int3
dec
jnp
mov
pop
or
cmp
sbb
outs
add
pop
fmul
sub
push
and
add
sti
mov
push
int
pop
ret
sbb
adc
sbb
dec
cmp
jmp
add
xor
outs
in
and
jne
adc
adc
or
cmps
mov
adc
sub
pop
ds
push
adc
lock
ins
mov
sahf
or
dec
and
and
fistp
dec
mov
outs
dec
pop
sub
mov
lds
mov
div
inc
retf
inc
jmp
mov
shr
int3
adc
repz
pop
sub
nop
into
cmp
cmova
imul
jmp
push
popf
sbb
mov
inc
or
leave
fdiv
mov
and
inc
pusha
dec
int3
and
dec
xchg
movs
cmp
jecxz
mov
int3
cmp
fucomi
jo
cmps
pusha
inc
adc
mov
xchg
shr
outs
mov
jl
sbb
pop
mov
sub
imul
pop
outs
or
ret
ret
lods
mov
icebp
add
nop
xlat
idiv
mov
and
jb
xchg
push
cmp
fwait
xchg
sti
popa
or
(bad)
loop
jns
cld
shl
nop
dec
aam
mov
push
push
(bad)
jmp
xchg
pushf
pop
pop
ds
and
sbb
aas
ds
loope
or
js
adc
(bad)
stos
les
cmp
int
dec
cli
xor
sbb
je
pop
mov
sub
pop
fnstcw
fdivp
dec
(bad)
adc
add
call
jbe
fist
or
loopne
add
sub
(bad)
dec
inc
push
cmp
rcl
cmp
mov
mov
imul
test
ins
cmp
in
inc
cli
inc
jbe
push
cmps
mov
jg
pop
outs
aam
push
xchg
cmp
cli
push
mov
into
mov
mov
mov
test
jo
adc
out
adc
mov
test
jnp
lock
mov
xchg
test
sbb
mov
xchg
jmp
lock
xchg
mov
pop
jl
test
jmp
and
out
jne
inc
jbe
xlat
imul
into
inc
(bad)
xchg
and
rcr
pop
in
sub
adc
pop
adc
jl
cmp
or
sahf
inc
jno
pop
rol
mov
push
sbb
loope
cld
shl
xchg
icebp
call
enter
mov
adc
dec
ja
arpl
pop
das
and
xchg
ret
out
fist
es
jmp
in
or
adc
and
(bad)
cmp
xchg
fldcw
iret
aam
out
out
pop
pop
sbb
arpl
aaa
mov
loop
das
aad
lock
dec
test
out
jne
push
and
ldmxcsr
jbe
push
jmp
pop
lahf
loope
mov
test
bound
cs
fucomip
push
mov
cmp
inc
push
loop
or
jne
mov
aaa
fwait
fwait
pop
jmp
addr16
pop
inc
and
repz
ins
imul
jg
mov
push
add
in
popf
mov
xchg
jl
xor
mov
(bad)
loop
retf
aad
mov
mov
pop
or
fist
or
and
xchg
stos
adc
or
jmp
(bad)
push
jecxz
mov
enter
mov
imul
jae
add
aad
cmps
aad
cmps
fsub
mov
imul
jp
fbstp
sbb
inc
mov
aas
scas
jbe
or
adc
jno
xchg
push
(bad)
addr16
xchg
sub
sti
xor
sbb
pop
jno
inc
je
pop
nop
sbb
loop
ds
jecxz
and
mov
dec
sub
rcl
inc
rcl
ins
pusha
pop
pusha
icebp
mov
mov
and
(bad)
mov
lahf
pop
cmp
fsubr
loopne
mov
and
pop
cmp
xchg
xor
cmp
inc
stc
icebp
jg
jmp
jecxz
cli
xor
add
test
cdq
icebp
loopne
xchg
sub
clc
outs
mov
addr16
add
adc
scas
mov
jecxz
nop
aam
pop
push
sbb
fst
in
lods
cmp
lods
sub
outs
sti
xchg
pop
inc
and
or
jmp
inc
sbb
xor
hlt
inc
adc
mov
mov
pop
push
sbb
std
pushf
mov
adc
daa
sub
mov
pushf
jae
mov
pushf
sbb
xchg
ss
js
xchg
je
mov
jle
jns
ret
sbb
pop
fcomi
add
(bad)
(bad)
xor
call
xchg
pop
test
shr
aad
inc
imul
or
mov
jl
add
arpl
imul
xor
and
ja
lds
add
out
jo
sbb
(bad)
sti
sbb
cs
cmp
popf
(bad)
mov
add
xchg
mov
inc
and
adc
xchg
pop
xchg
and
pop
test
jns
int3
dec
sar
sub
dec
jmp
cli
pop
test
push
and
sbb
sub
mov
jmp
lds
and
fidiv
fadd
scas
loope
xor
add
xchg
mov
inc
das
scas
cmp
inc
jmp
(bad)
or
rol
cmp
mov
xlat
pop
js
outs
sbb
add
xor
mov
push
or
gs
movs
jmp
mov
inc
pop
iret
iret
xor
loop
or
cmps
fld
fidivr
loop
jge
(bad)
dec
dec
stos
pop
mov
rcr
jne
nop
and
add
fisttp
cmps
xchg
dec
jmp
mov
mov
adc
call
hlt
dec
sahf
fimul
lea
in
mov
pop
dec
in
pop
mov
jbe
cmp
jne
mov
cs
pop
xor
dec
ds
push
lahf
ficomp
retf
dec
rcr
jb
push
sub
popf
and
and
inc
pop
jae
shr
retf
dec
cmp
leave
enter
inc
fiadd
nop
ret
aas
cmp
push
bound
sti
adc
and
push
sbb
lods
(bad)
ss
fldcw
jle
stos
stos
std
out
test
or
push
(bad)
(bad)
bound
sbb
repz
fiadd
cmps
mov
popf
out
mov
pop
iret
adc
mov
cld
or
jmp
push
mov
daa
and
into
mov
adc
stos
jo
add
sub
ins
sbb
popa
movs
nop
sbb
es
in
and
std
xchg
inc
ret
shl
mul
pop
ds
xor
inc
dec
fdivp
adc
sar
sub
inc
test
jmp
ins
jl
adc
ror
in
clc
push
sub
mov
into
add
arpl
int
cld
fild
(bad)
rcr
sbb
sub
xchg
xchg
jg
xor
inc
and
int3
push
retf
mov
mov
mov
mov
push
add
or
jl
xlat
jae
(bad)
dec
adc
idiv
es
push
or
xchg
cmp
or
loopne
lods
aaa
out
stos
jns
scas
mov
test
inc
inc
mov
sahf
js
sub
cmp
arpl
cwde
jle
dec
imul
hlt
xchg
lea
mov
movs
out
gs
ins
xor
ins
mov
rcl
int3
or
mov
in
sti
test
push
in
daa
cmc
or
mul
cmp
in
aaa
push
int
mov
cmps
inc
hlt
in
add
in
int3
push
mov
es
xor
xchg
xchg
ins
sub
fldenv
aad
lock
das
fnstcw
mov
dec
sub
(bad)
out
and
shl
xchg
mov
and
or
out
jp
dec
pop
cld
push
cmps
jecxz
push
xor
jno
jo
jno
cwde
stc
add
popf
fnstcw
mov
mov
lea
xchg
mov
add
test
cmp
inc
das
aad
push
fist
ss
call
mov
popf
div
(bad)
ins
or
(bad)
setb
adc
mov
jg
push
push
lods
jmp
fcomi
mov
adc
mov
fisttp
mov
shr
push
xor
and
call
sub
in
xor
mov
outs
sub
ret
ret
mov
jmp
mov
mov
jae
sbb
es
fistp
push
xchg
retf
shr
(bad)
jecxz
xchg
in
cmps
inc
loopne
inc
ss
mov
sub
sbb
stos
cmps
fild
outs
or
mov
sub
outs
jb
sub
loope
out
cmp
shr
pop
in
aad
movs
mov
sbb
adc
sub
add
imul
mov
add
jge
mov
pop
movs
pushf
or
and
add
xlat
sahf
and
cwde
jnp
fidivr
jecxz
ror
xor
addr16
xor
jnp
jl
push
mov
not
mov
outs
xchg
outs
sbb
and
inc
adc
adc
cmc
ins
daa
mov
and
icebp
test
gs
xchg
das
je
push
ffreep
xor
outs
aad
lds
nop
clc
adc
into
xchg
inc
retf
call
lods
arpl
adc
rcr
mov
mov
mov
or
jb
mov
mov
push
jle
rol
das
aaa
mov
sub
int
repz
and
xlat
in
xchg
int3
cmc
mov
mov
xchg
jae
mov
add
lds
xchg
cmp
sub
jae
and
push
scas
jbe
pop
das
dec
test
xor
mov
pop
push
ret
hlt
retf
in
aam
out
icebp
cwde
xchg
mov
sti
out
xor
repz
or
jl
jecxz
or
gs
(bad)
out
sbb
test
cli
add
mov
fadd
rdtsc
sub
xchg
ds
inc
fmul
push
adc
daa
pop
and
stos
(bad)
cmp
sub
xor
jo
fst
in
jbe
push
xchg
jecxz
test
sbb
cmp
cmp
bnd
call
mov
rcl
fs
pusha
jp
je
mov
ret
add
lea
in
dec
jbe
popa
outs
add
popf
inc
js
es
xchg
sti
(bad)
add
push
sar
bswap
jge
scas
jecxz
sbb
pop
mov
mov
xchg
jo
jae
ins
arpl
outs
js
test
jne
lods
cmp
test
retf
push
imul
xor
(bad)
sub
dec
repz
cmp
jp
rcl
push
cmp
ror
jmp
mov
imul
and
jp
sub
mov
les
adc
imul
jmp
mov
pop
(bad)
cs
hlt
test
nop
je
inc
jmp
cmc
loop
scas
adc
jns
out
fwait
loop
or
ds
mov
pop
cmps
push
push
inc
and
mov
icebp
mov
mov
mov
add
std
cmp
xchg
jb
mov
xchg
jno
sbb
pop
(bad)
cs
push
(bad)
fimul
call
jae
and
jne
rol
fisubr
mov
push
pop
mov
inc
pop
data16
sar
dec
sbb
lahf
and
mov
mov
mov
xchg
inc
movs
and
cmp
pop
sub
cmp
mov
adc
les
stos
adc
loope
cmp
xchg
cmp
(bad)
sahf
cld
sbb
cmp
add
sub
fldenv
xor
add
xchg
xor
inc
sub
xchg
push
(bad)
jle
push
xor
dec
and
sub
inc
enter
xor
dec
test
dec
popa
nop
leave
scas
imul
ins
push
add
fnsave
jecxz
cmp
ret
into
ja
aad
mov
add
add
gs
in
arpl
test
pop
clc
jno
cdq
add
sbb
xchg
in
sub
mov
jb
(bad)
dec
cmp
jno
out
and
inc
cmps
mov
cmp
out
fwait
shl
mov
mov
jns
fwait
xchg
sub
add
shr
adc
xchg
popf
ins
(bad)
imul
stos
mov
mov
enter
sub
pop
cmp
add
cmps
jmp
hlt
fnstsw
lea
add
ja
jb
das
jmp
cwde
repz
sub
loopne
fidiv
and
mov
cmp
pusha
popa
and
gs
xor
fbstp
jmp
xchg
adc
popa
mov
and
into
and
ret
mov
movs
and
stc
stos
add
in
pop
repz
jmp
jmp
pop
aad
mov
jns
adc
scas
lea
sbb
add
xchg
lock
repnz
lock
dec
push
add
dec
push
(bad)
(bad)
adc
adc
jmp
sub
fimul
cmp
inc
adc
sub
jo
aam
adc
xor
cld
cli
aas
and
mov
xor
jmp
and
repnz
stc
xlat
rcl
cld
jnp
jnp
cld
cdq
retf
(bad)
adc
test
sub
adc
cmps
mov
mov
fstp
jo
adc
xor
popa
fcomp
fmul
addr16
(bad)
stc
neg
imul
in
scas
mov
in
jl
enter
sub
fwait
mov
je
scas
daa
or
jo
cmp
popf
leave
int
dec
push
imul
aad
dec
in
fxch
mov
imul
push
push
mov
cmp
repz
pop
in
mov
loop
(bad)
jbe
mov
xchg
shl
add
jge
sub
std
pop
movs
in
jle
jl
fisubr
clc
jge
and
and
add
adc
leave
ins
add
cs
lods
jbe
pop
mov
or
repz
loopne
sbb
sub
xchg
(bad)
(bad)
or
div
dec
inc
stc
mov
cmp
jns
imul
clc
sub
call
test
add
mov
in
lea
jge
scas
xchg
mov
pop
inc
popa
(bad)
cmp
cs
push
int3
sub
pushf
dec
pop
ins
mov
or
mov
mov
dec
xchg
mov
jno
sub
add
jmp
inc
push
push
sbb
aaa
lods
mov
or
jl
xor
sub
and
xchg
scas
mov
aad
je
mov
add
sub
in
(bad)
aad
mov
mov
std
cmp
iret
fisub
out
adc
iret
ret
sub
cdq
jecxz
out
pop
in
push
js
jmp
rol
sub
icebp
xor
sub
ror
mov
es
dec
popf
fiadd
jecxz
hlt
mov
push
jns
jge
push
xor
rep
int
cmp
out
outs
cmp
cmp
lods
imul
jne
ror
cmp
xor
mov
outs
cmp
ror
sbb
je
dec
jg
test
xchg
adc
xchg
sbb
mov
fisttp
dec
or
mov
jb
cmc
push
jmp
(bad)
inc
push
jnp
mov
fsub
sbb
pop
or
pop
adc
jbe
sbb
mov
add
sbb
stos
lahf
fwait
neg
rcl
mov
adc
gs
mov
dec
cmp
sahf
xor
(bad)
pop
enter
sar
adc
(bad)
sbb
call
dec
xor
clc
ret
mov
pop
pop
dec
sbb
shr
fcmovnu
daa
jmp
jp
outs
or
push
and
mov
xchg
pop
(bad)
jp
das
mov
or
xchg
jle
jns
(bad)
bnd
(bad)
rol
cmp
push
xchg
fs
les
ds
loope
or
pop
jmp
fidiv
nop
push
cmp
cmps
mov
dec
shr
scas
add
cmp
mov
push
pusha
int
ss
sub
enter
add
xor
fwait
push
adc
xchg
jns
mov
aaa
scas
pusha
mov
das
sbb
xchg
jae
dec
sub
cmp
mov
xchg
mov
sbb
(bad)
popf
or
dec
pop
js
jecxz
cmps
rcl
inc
inc
mov
je
sbb
ins
or
movs
add
nop
mov
bound
stos
adc
push
retf
faddp
les
adc
xor
adc
sub
loope
xor
xor
push
fst
mov
xor
cmp
gs
ficomp
ins
cld
mov
repz
aas
cmps
or
out
scas
pop
nop
jb
cmps
or
std
cmp
not
imul
stos
ds
xchg
jne
dec
and
xchg
mov
sub
stc
imul
(bad)
outs
popf
clc
xor
repz
cli
fs
push
popf
mov
and
jmp
lods
mov
test
lods
inc
cld
dec
lods
addr16
add
pop
fmul
mov
ds
pop
cmps
repnz
mov
push
sbb
jne
adc
stc
or
fst
mov
repz
test
push
(bad)
iret
js
stc
cmps
into
pop
aas
aad
push
int
test
stos
push
or
dec
pop
in
std
and
pop
adc
or
ss
outs
test
cld
leave
movs
jbe
lods
imul
mov
lahf
outs
pop
add
cmp
pop
ins
push
sub
dec
rep
(bad)
call
dec
in
lods
cmp
js
or
scas
jecxz
inc
scas
add
lods
inc
data16
push
cs
cmps
sub
pop
sbb
les
iret
imul
les
ret
adc
mov
mov
bswap
or
imul
in
push
add
adc
inc
fmul
sub
add
xchg
lods
loop
jae
mov
jno
imul
fbstp
lods
push
shl
repz
dec
xor
add
inc
xchg
push
push
fmul
cmove
fwait
add
mov
fbstp
aas
lds
cmp
pop
jmp
dec
dec
shl
and
mov
xor
in
ror
mov
imul
cmp
enter
cmp
out
idiv
repz
lahf
xchg
pusha
lahf
(bad)
pop
cdq
or
mov
lods
inc
test
popa
pushf
mov
outs
mov
dec
sbb
xor
repz
pop
popf
sti
das
sbb
mov
(bad)
iret
xor
fild
loope
jmp
dec
sub
mov
push
repnz
cmp
push
pop
dec
ja
adc
cmp
xchg
loop
lahf
push
retf
adc
inc
jp
pop
sub
test
cmp
retf
push
mov
mov
or
and
sbb
ret
xor
scas
test
jae
pop
and
outs
dec
inc
sub
dec
ror
push
and
in
jae
js
stos
loope
sti
pusha
and
aaa
add
mov
les
or
mov
jns
arpl
xchg
das
dec
inc
fldenv
div
out
test
and
(bad)
cmps
into
jnp
ins
xchg
scas
cmp
repz
sub
daa
test
or
scas
repz
jns
mov
push
mov
mov
pushf
mov
xchg
popa
inc
mov
xor
push
mov
mul
inc
ss
cs
mov
sbb
dec
js
push
(bad)
mov
aas
dec
sbb
jnp
cmp
sbb
lds
je
mov
sub
adc
xor
rcr
mov
test
or
xchg
loopne
xchg
cmp
inc
mov
jl
aas
es
or
jmp
test
inc
mov
fstp
push
(bad)
add
jns
ss
cmp
dec
leave
and
sbb
inc
sar
fsubrp
dec
push
mov
outs
js
and
loopne
jbe
push
xchg
aas
inc
test
rcr
(bad)
jecxz
gs
scas
fnstsw
sub
jo
stc
dec
ss
(bad)
xchg
js
push
arpl
aam
sbb
adc
call
sub
cmps
lds
push
dec
(bad)
shl
leave
hlt
pop
push
mov
clc
cmp
sar
icebp
or
sbb
xor
push
(bad)
jne
adc
cdq
jno
stos
xchg
stos
adc
(bad)
inc
clc
iret
jle
jne
je
xor
mov
mov
mov
add
mov
push
jecxz
cli
mov
jmp
and
jmp
stos
(bad)
imul
lea
push
jmp
dec
pop
cwde
scas
dec
cmp
lods
into
outs
iret
pop
mov
mov
js
push
test
mov
jl
fbstp
dec
lods
(bad)
stc
(bad)
mov
iret
icebp
xchg
sbb
ror
mov
cmps
sti
adc
(bad)
sti
pushf
adc
or
jmp
mov
inc
xchg
mov
mov
mov
out
and
xchg
add
cld
push
scas
ins
into
adc
les
mov
sbb
mov
xchg
push
out
cmp
cmp
cmps
sub
sub
jb
je
xor
add
or
mov
jmp
sti
jns
stc
shl
sar
ret
add
movs
xor
mov
mov
or
je
cmps
push
mov
pop
inc
jae
out
sbb
jecxz
push
pop
sbb
test
mov
and
aaa
pushf
test
jnp
push
push
add
cmp
loop
cmovs
pop
add
lds
fcom
es
xchg
jecxz
popf
fimul
mov
repz
out
mov
ficom
cmp
shl
cmps
jg
push
nop
push
mov
and
or
jmp
push
stos
mov
mov
add
sub
add
dec
mov
push
in
jne
push
xchg
jnp
stc
mov
in
xchg
arpl
retf
cli
popa
clc
push
test
xchg
jo
push
or
arpl
push
pop
cmp
repz
pop
mov
dec
dec
in
cmp
jne
sahf
das
pop
mov
aaa
mov
xor
lods
loope
jno
cmp
mov
lds
sbb
stos
push
xchg
mov
lock
xchg
xchg
shl
(bad)
adc
inc
arpl
in
or
fnstsw
bound
or
cs
and
bound
ja
jecxz
mov
and
mov
popf
and
(bad)
pop
ja
dec
adc
mov
test
mov
gs
iret
ret
addr16
xchg
pop
pop
sub
mov
rcl
mov
mov
(bad)
out
cmps
sub
or
dec
sar
inc
mov
inc
mov
retf
push
push
pop
cmp
sbb
mov
xor
inc
pop
lahf
icebp
lahf
(bad)
sbb
in
fistp
inc
(bad)
outs
sbb
pop
scas
nop
or
addr16
(bad)
push
sbb
mov
xor
inc
bound
sar
stos
nop
dec
and
mov
imul
fimul
xchg
cmp
xchg
xchg
ins
sbb
mov
jl
or
(bad)
stc
dec
sub
mov
add
and
sub
inc
retf
mov
pushf
mov
mov
dec
sbb
push
mov
push
sti
rcr
or
fistp
and
fstp
dec
and
and
mov
adc
jb
mov
add
repz
mov
sti
add
mov
lea
nop
cmp
out
enter
and
xor
ds
adc
mov
seta
or
mov
sub
push
mov
adc
pop
outs
push
js
shl
enter
add
daa
pusha
or
es
es
cld
jmp
(bad)
shl
daa
mov
push
faddp
call
ret
xor
adc
jecxz
loopne
cdq
cmps
ret
lods
sub
mov
inc
jecxz
or
dec
jmp
lock
lea
cmp
ret
ins
cmp
fnstenv
sar
jno
xlat
test
xor
movntps
pop
xchg
sub
mov
cmc
xchg
scas
jns
popa
in
arpl
mov
push
cmps
lock
mov
cmp
shr
xchg
ds
inc
int3
sbb
lock
test
mov
std
push
aaa
sbb
ud2
jl
ins
mov
pop
aas
(bad)
mov
sbb
or
shr
loope
and
or
stos
mov
cmc
dec
loopne
or
xchg
inc
mov
movs
adc
sub
xor
out
xlat
sti
rcl
or
dec
mov
xlat
mov
cli
xor
xor
iret
test
xor
dec
push
out
mov
call
js
outs
push
aam
stc
rol
outs
or
sbb
inc
jecxz
iret
add
fisub
inc
popa
out
or
stc
dec
xchg
ret
(bad)
mov
out
fadd
mov
outs
xlat
dec
ss
mov
xchg
mov
xchg
addr16
or
test
aam
sub
or
jns
push
movs
pop
mov
or
push
div
push
rcl
(bad)
retf
fldcw
fadd
fst
call
movs
mov
adc
or
jp
fcmovb
add
mov
test
and
jl
push
add
aad
jmp
ins
or
pop
in
push
cmp
ret
(bad)
cmp
nop
std
xor
cmp
das
jecxz
sti
out
loope
or
test
or
ins
adc
in
adc
shl
inc
mov
or
test
repz
mov
je
lahf
leave
scas
push
ds
ficomp
cmp
jae
mov
mov
and
data16
scas
jae
sub
sub
cmps
jecxz
clc
aad
fs
xchg
sub
ins
jl
fild
addr16
pop
sub
popa
add
push
or
fdivr
jp
mov
xor
jbe
mov
sub
or
js
inc
add
dec
xchg
pop
push
repnz
and
dec
(bad)
rcr
ja
leave
mov
mov
jecxz
cmp
push
mov
push
cmp
fidivr
daa
xor
addr16
sub
push
hlt
call
ret
jmp
(bad)
int
fwait
pusha
sbb
stos
push
pusha
jp
cmp
xchg
sti
and
lahf
mov
cmps
or
leave
nop
popa
add
jnp
rcl
dec
clc
sub
cmp
ins
mov
and
out
push
(bad)
out
sbb
sahf
outs
push
xchg
sub
pushf
fstp
inc
or
mov
rol
aas
jnp
jo
xchg
js
pop
inc
xor
inc
adc
jbe
mov
jns
enter
adc
push
int3
mov
outs
push
mov
loop
dec
add
lods
and
imul
mov
push
test
adc
add
pop
sbb
jb
outs
rol
mov
outs
pop
mov
(bad)
mov
sbb
mov
cmp
push
test
retf
bound
and
jnp
xchg
and
add
pop
mov
cmp
dec
fs
xlat
sbb
(bad)
push
pop
add
jno
and
sar
js
pop
sub
fidiv
pop
mov
stc
movs
jmp
movs
imul
movs
jns
cmp
sbb
dec
sbb
add
mov
push
nop
es
std
jecxz
pop
mov
jp
enter
fadd
lock
mov
sub
push
call
in
mov
sub
out
in
mov
sbb
cmp
inc
int3
inc
mov
sub
loope
nop
ins
mov
mul
(bad)
fist
in
stos
data16
fwait
and
mov
or
cmps
jae
and
mov
mov
inc
adc
aas
mov
push
int
retf
xchg
mov
popf
sub
or
jle
ja
daa
repnz
xor
and
in
call
shl
iret
les
mov
jae
and
call
add
popf
pop
inc
cmc
pusha
jmp
es
adc
xlat
sub
dec
sub
dec
jecxz
cdq
xor
stos
mov
mov
xor
jp
mov
movs
lds
imul
push
fs
dec
mov
aaa
loope
out
fstp
sar
aaa
mov
aaa
retf
inc
jbe
and
aaa
fcom
in
add
add
mov
inc
retf
ror
imul
data16
xor
cs
loop
stc
cmp
mov
xchg
sti
mov
inc
sbb
test
sar
stos
push
adc
outs
dec
lods
xor
add
pop
cmp
jmp
(bad)
add
bnd
sub
jge
das
fld
pop
cmp
mov
out
into
outs
jns
and
enter
icebp
inc
enter
out
pop
jmp
push
mov
imul
push
pop
inc
mov
jle
or
pop
daa
dec
rol
sbb
mov
xor
pop
fimul
fbld
sbb
ret
jne
aad
push
xor
and
pop
retf
add
jae
inc
jmp
push
add
lods
out
inc
(bad)
js
or
bnd
and
jbe
xchg
lock
add
cdq
cli
pop
test
dec
ja
inc
nop
pop
daa
cmp
jmp
movs
lods
cmp
aaa
inc
inc
cmp
push
call
jp
pop
fmul
xor
stc
sub
movs
adc
jno
cmp
inc
aad
adc
add
cld
cmps
add
cli
push
lea
push
ret
std
scas
sbb
add
lods
mov
xchg
test
aaa
sahf
push
mov
sahf
inc
push
mov
retf
and
dec
mov
inc
js
lea
pusha
stos
xor
out
jmp
repnz
push
rol
sub
dec
jl
repnz
or
loope
or
mov
jno
test
mov
ret
mov
test
out
call
test
(bad)
clc
cmc
ds
mov
fst
retf
mov
inc
mov
fld
pusha
adc
mov
sbb
push
rol
mov
push
ja
mov
add
cmp
push
mov
cli
dec
fcom
enter
xor
mov
mov
xor
jmp
sub
cmp
call
mov
into
or
inc
push
and
jmp
loope
out
(bad)
push
cmp
or
push
iret
mov
mov
xchg
cmps
and
sar
outs
mov
sub
call
inc
cs
mov
pop
daa
adc
je
mov
or
jmp
loope
xor
cmp
sbb
push
gs
cmp
fild
loope
out
add
pop
mov
inc
repnz
or
in
xor
popa
test
pushf
shl
adc
popf
xchg
or
dec
popa
(bad)
cmp
out
sbb
and
xor
jno
out
int
into
cmp
test
(bad)
dec
xor
test
fidivr
stos
scas
fst
cmp
add
push
mov
fstp
cmp
movs
cmp
xchg
aad
xchg
jmp
push
sub
lods
gs
cmps
inc
cmp
mov
ss
rol
pop
cmc
sub
xor
sbb
mov
lods
xchg
lahf
mov
js
lods
and
cmp
stos
cmp
mov
xchg
dec
mov
loopne
cdq
call
pusha
inc
mov
(bad)
into
and
in
shl
js
stos
mov
and
mov
add
fsin
sti
lods
xor
jb
out
addr16
inc
cmc
fwait
jnp
pop
mov
pop
je
push
jmp
push
mul
jp
ds
fs
xor
cmp
jbe
dec
lahf
(bad)
xor
dec
stos
dec
or
dec
pop
cmps
(bad)
rcr
fnstsw
iret
sub
mov
stos
pop
loope
sbb
jb
popa
cmp
xor
cdq
std
pop
iret
bound
neg
dec
sahf
test
cld
clc
cmp
push
add
pop
out
iret
mov
jb
jne
xlat
or
loop
xor
mov
inc
test
retf
lock
mov
mov
arpl
dec
pusha
xor
pop
pushf
popf
and
xchg
mov
xor
fidiv
push
lods
dec
stos
push
cs
ret
movs
shl
loope
vfnmsub231ps
int
push
xchg
loope
pusha
and
xor
adc
cmp
mov
sbb
(bad)
mov
xor
xchg
cmp
push
cmp
dec
push
xchg
mov
jmp
out
(bad)
(bad)
push
jne
mov
cmps
pushf
outs
cmp
push
arpl
mov
daa
jecxz
daa
data16
data16
xchg
adc
fiadd
scas
xor
dec
(bad)
sbb
mov
mov
int
popa
out
add
cwde
pop
jne
out
push
or
lds
jae
cli
pushf
mov
cli
aam
cs
lahf
jne
push
mov
xor
mov
inc
out
call
int
push
test
shl
mov
add
mov
fcom
movs
adc
lods
add
sbb
lea
je
dec
fld
sbb
das
mov
xor
scas
(bad)
fist
test
dec
pop
adc
or
ret
xchg
aas
cmps
sbb
mov
mov
shl
retf
jb
or
inc
mov
imul
lods
test
into
daa
idiv
cmp
mov
and
pop
xor
inc
or
mov
pop
nop
not
jns
fisubr
push
(bad)
int3
jge
ins
sub
rol
not
add
mov
icebp
cmp
jb
push
or
js
cdq
(bad)
mov
jae
shl
test
add
pop
jg
or
xchg
sub
xchg
lods
loopne
pop
sbb
adc
push
mov
pop
xchg
mov
dec
test
xchg
repnz
pop
mov
out
stos
jae
push
adc
sub
adc
xchg
mov
cdq
add
push
mov
leave
ret
jne
or
inc
scas
pop
cmps
adc
out
xchg
mov
add
dec
adc
cmp
adc
popa
ret
xor
int
inc
xchg
in
in
or
xchg
cmc
and
lds
test
jns
xor
sbb
into
imul
leave
lods
jo
(bad)
pop
or
jno
jg
push
xor
jmp
pop
sbb
and
fcomp
xor
pop
xor
clc
cmp
pop
fdiv
push
(bad)
ror
out
mul
stc
rol
push
or
int3
dec
add
js
ds
push
ja
cmp
inc
arpl
jbe
cwde
inc
sbb
adc
sbb
gs
std
push
mov
mov
scas
gs
adc
cmp
in
jb
mov
or
movs
push
pop
(bad)
fidiv
sub
rcl
sub
sub
je
dec
es
mov
cmps
lods
cmp
inc
dec
xor
fld
es
adc
mov
adc
cdq
sub
ret
cmps
cmp
stos
mov
gs
add
data16
arpl
xor
lods
aaa
dec
jbe
addr16
push
mov
mov
xor
jl
rol
cmp
inc
mov
inc
or
mov
fst
mov
ins
jmp
push
cmp
or
mov
es
xor
pusha
je
cld
mov
and
adc
call
push
xor
outs
dec
cmc
jecxz
movs
int3
aas
stos
xchg
dec
fwait
inc
fisubr
inc
out
(bad)
add
cmp
add
(bad)
fsub
inc
fdivrp
das
sub
int
in
jnp
mov
mov
add
jg
jb
(bad)
cdq
push
fwait
jmp
lds
loopne
xlat
push
scas
sub
ds
in
cld
adc
mov
xchg
out
ins
add
(bad)
pushf
inc
clc
mov
add
loopne
mov
mov
xchg
iret
xchg
xor
mov
xchg
pop
neg
ins
adc
inc
inc
add
pop
pop
inc
mov
inc
mov
mov
push
dec
scas
mov
xchg
push
repz
not
out
push
pop
or
repnz
cmps
fsub
fcom
xchg
jecxz
add
shl
rcl
lds
jne
inc
fsubr
mov
inc
xor
gs
mov
adc
pusha
lods
xor
das
rol
(bad)
mov
xchg
xchg
in
mov
xor
mov
jg
inc
jnp
sbb
mov
int3
outs
mov
xchg
sahf
pop
mov
sbb
add
sar
test
les
inc
idiv
fcmovne
ins
fadd
enter
push
into
push
(bad)
adc
jb
mov
adc
cmp
aad
(bad)
aas
lods
dec
pop
retf
add
leave
cld
sub
(bad)
iret
out
(bad)
ss
aaa
dec
add
rcl
fsubr
pop
cdq
inc
(bad)
cmc
pop
and
mov
lea
xor
fldcw
push
lods
mov
sub
loop
mov
test
je
enter
shl
rcl
int
hlt
or
mov
add
test
sub
jmp
rol
sbb
mov
test
mov
repz
shr
sbb
mov
fcom
shl
add
mov
inc
out
sbb
arpl
adc
dec
cwde
fnstcw
shl
jo
mov
sub
scas
scas
push
xchg
or
jo
sti
cmps
dec
out
cmp
xor
stos
xchg
xchg
outs
aam
mov
dec
shl
js
sbb
sbb
jmp
outs
pop
cmp
ds
call
xor
dec
leave
or
shr
aad
pusha
movs
or
or
rcr
xchg
fucom
push
dec
xchg
aaa
inc
adc
xchg
pop
lds
fisubr
mov
das
dec
add
mov
fs
out
shl
sub
and
stos
cwde
leave
fwait
cwde
mov
jmp
clc
push
lock
xor
enter
and
mov
nop
std
ret
sti
sahf
xchg
fs
sub
scas
cmc
lock
fiadd
sar
pop
pop
push
enter
shr
aaa
mov
jl
hlt
or
or
mov
jge
pop
add
outs
lods
mov
push
dec
retf
or
enter
lods
(bad)
lds
jo
test
pop
xchg
xchg
into
popa
mov
pop
or
mov
xlat
inc
sbb
sahf
aam
mov
js
pop
or
outs
inc
push
fidivr
mov
ficomp
call
cld
dec
sbb
mov
std
frstor
div
mov
(bad)
fimul
mov
xlat
fsub
test
dec
cmc
fnstcw
sub
push
jle
out
fldenv
stos
push
popa
jmp
daa
ja
cmc
xchg
and
xchg
sbb
mov
add
loop
outs
pop
mov
xchg
xor
out
push
sub
jmp
sub
and
pop
inc
icebp
add
sar
sub
jno
xor
outs
jns
and
xchg
or
enter
loope
push
ss
xchg
aaa
mov
xchg
mov
xchg
add
inc
adc
xor
dec
mov
and
shr
fdivrp
pop
fnstenv
es
or
pushf
or
movs
(bad)
mov
test
into
jnp
pusha
xchg
push
push
in
sbb
pop
sbb
movs
xor
sti
aad
xchg
adc
je
pop
cmps
pop
pushf
add
jb
xchg
fcomp
xor
xchg
nop
stos
ret
pop
imul
test
icebp
shl
dec
mov
scas
push
or
ds
add
call
mov
daa
xchg
ss
mov
out
sahf
jecxz
and
xor
adc
pop
stos
lods
loope
sub
push
jmp
push
outs
adc
dec
out
or
scas
stos
dec
(bad)
repz
mov
test
sbb
jb
outs
or
pop
sbb
adc
mov
inc
pushf
sbb
push
pop
jp
call
mov
mul
mov
inc
fld
mov
enter
push
mov
mov
retf
call
(bad)
sar
xor
imul
mov
ror
xchg
(bad)
sbb
rcl
cmp
pushf
mov
in
adc
mov
cmp
sub
cmp
cmc
and
mov
popa
or
mov
addr16
xor
movs
xchg
inc
call
das
xchg
(bad)
in
retf
push
sbb
cmp
(bad)
jmp
out
stc
in
cmp
inc
fnstcw
(bad)
mov
ins
scas
icebp
(bad)
inc
and
xor
iret
and
je
mov
fild
mov
loop
jmp
lds
xchg
pusha
inc
inc
mov
mov
out
sbb
mov
clc
cmp
sbb
clc
push
daa
xchg
iret
ds
mov
ret
dec
xor
(bad)
cmp
test
xchg
(bad)
out
jecxz
xchg
pushf
cmp
imul
mov
adc
in
call
outs
jb
add
xor
xor
out
xchg
mov
pop
out
xor
nop
(bad)
stc
add
imul
in
cmp
stos
fmul
inc
arpl
mov
or
int
mov
pushf
mov
(bad)
stos
shr
push
sub
pushf
aad
xchg
pop
sub
cwde
scas
out
pop
sbb
sbb
fs
and
cmc
ins
arpl
jecxz
out
mov
sbb
inc
jmp
mov
ret
pop
cmp
jno
(bad)
not
pop
outs
or
and
inc
out
pop
nop
(bad)
add
dec
test
fld
adc
scas
xchg
xchg
pop
aad
or
outs
push
xor
mov
(bad)
xlat
add
dec
xchg
pop
mov
test
push
pop
out
xchg
stos
enter
mov
cmps
les
jmp
inc
fld
mov
inc
cmps
xchg
retf
retf
xchg
adc
les
stos
cmp
clc
in
push
or
retf
inc
and
std
push
ins
lea
sbb
aad
aaa
xchg
mov
stos
mov
sbb
add
adc
fist
sbb
mov
add
push
adc
adc
add
pop
leave
cmp
inc
in
xor
fiadd
push
add
nop
lods
(bad)
sti
sti
(bad)
mov
dec
add
fild
xor
and
aas
cdq
out
cmc
mov
jp
stos
dec
aaa
fucom
jecxz
jmp
mov
aas
(bad)
bound
add
mov
mov
or
jo
popf
inc
pop
scas
xchg
ss
repnz
or
adc
lock
out
aas
jl
repz
lods
repz
outs
push
mov
arpl
mov
push
(bad)
mov
aam
mov
repnz
sbb
(bad)
or
test
fs
(bad)
mov
stos
call
fwait
repz
pop
xchg
shl
into
dec
xor
popf
movs
pop
inc
jo
and
data16
mov
mov
sbb
into
inc
dec
jl
and
stc
rcl
lahf
or
sbb
(bad)
pop
imul
test
inc
into
cmp
sar
jne
nop
mov
repz
adc
les
clc
inc
into
mov
sub
xor
jno
(bad)
cmp
loope
add
pop
loopne
push
and
sahf
cmp
xor
inc
mul
xchg
call
jae
in
sahf
mov
or
(bad)
add
add
sti
jge
cmp
adc
mov
cld
add
xor
je
aam
sar
bound
and
pop
pop
iret
out
jnp
and
mov
or
mov
std
call
xchg
push
push
xor
mov
imul
jl
setl
mov
inc
xlat
mov
xchg
xchg
mov
leave
mov
jle
aad
xlat
ins
dec
lahf
xchg
push
inc
nop
(bad)
jae
sub
xlat
clc
popa
addr16
push
int3
call
dec
popa
arpl
scas
pushf
xor
mov
mov
pop
dec
outs
pushf
jae
or
push
js
les
scas
inc
lods
loope
dec
xchg
call
pop
cld
in
sub
jmp
(bad)
pop
arpl
fld
dec
jb
dec
xchg
stos
push
cmps
push
add
cdq
push
mov
adc
cmp
fstp
adc
ror
add
shr
push
cdq
add
out
rep
cld
adc
out
shr
jmp
aad
(bad)
cli
pop
jb
movs
mov
mov
out
push
adc
push
jl
adc
cmp
in
push
inc
xchg
rcl
adc
fstp
mov
in
arpl
mov
cwde
aaa
mov
inc
in
std
pop
mov
mov
sahf
cs
push
add
movs
pop
adc
mov
sbb
loope
and
ficomp
mov
cmp
movs
out
js
mov
jb
or
scas
sbb
cmc
sbb
out
mov
mov
sti
in
dec
outs
aaa
push
test
imul
test
mov
jecxz
xor
das
hlt
dec
ds
cmp
call
ins
add
push
pop
shl
(bad)
loopne
ret
fnstenv
fistp
loope
adc
push
add
jno
mov
(bad)
bound
into
inc
cmp
enter
sbb
jne
add
ins
rcr
mov
call
jnp
pop
add
mov
retf
sbb
dec
ins
adc
dec
mov
inc
xchg
fdiv
ror
sub
mov
adc
and
mov
inc
cmp
cmp
dec
test
jmp
mov
inc
jne
(bad)
push
shl
fisttp
icebp
sbb
mov
mov
dec
mov
fcomp
cli
sbb
retf
popa
push
or
dec
dec
stos
scas
loopne
pop
xor
dec
mov
or
jae
pushf
test
imul
cmc
add
pop
mov
clc
pop
inc
ins
imul
fnsave
sbb
adc
fsubr
in
pop
frstor
loopne
jno
mov
sahf
retf
push
xchg
jns
mov
push
mov
in
pusha
or
leave
call
mov
or
xor
push
mov
inc
sbb
aad
mov
cmp
inc
les
xor
dec
hlt
push
or
xor
(bad)
fild
arpl
dec
(bad)
jmp
inc
push
xor
dec
push
fnstenv
call
jbe
into
aaa
into
adc
dec
sub
push
js
jb
sub
pusha
push
lahf
in
pop
jecxz
mov
mov
(bad)
mov
jne
fld
fisub
call
dec
outs
pop
mov
pop
inc
pop
je
mov
scas
stos
add
dec
mov
xor
or
push
jae
stc
dec
aas
addr16
or
dec
jbe
pop
push
out
dec
ins
or
js
mov
rol
fs
les
scas
cmp
sub
xor
cmp
sti
test
loope
mov
fst
or
mov
xor
fsubp
push
or
sar
cdq
push
jae
adc
push
or
in
xchg
jg
sub
pop
test
stos
retf
jmp
push
or
movs
or
jnp
mov
ret
add
sub
(bad)
mov
call
in
scas
jmp
fcmovnu
xor
xor
adc
xchg
sbb
out
loop
ficomp
js
cmc
push
mov
and
pop
push
call
xchg
hlt
stos
sub
adc
xor
add
cmp
push
lock
enter
mov
loop
int
add
inc
mov
out
out
dec
add
leave
lods
xchg
shr
popf
icebp
dec
jmp
mov
popa
addr16
dec
data16
dec
loop
aas
test
outs
fimul
out
xchg
mov
xor
out
mov
dec
dec
into
mov
xor
ror
aad
xor
jmp
(bad)
in
test
jns
shr
dec
(bad)
xor
pop
sbb
mov
or
push
pop
sbb
std
push
sub
dec
mov
mov
ret
push
out
dec
or
jae
xor
sti
movs
cmp
xchg
in
outs
loop
jg
enter
js
push
push
lods
retf
push
cmps
(bad)
push
cmp
lods
mov
fsub
xlat
mov
and
shl
retf
sbb
ds
mov
xor
and
out
lea
adc
in
and
popf
xor
pop
or
mov
inc
out
add
jo
pushf
dec
push
ror
fisttp
mov
scas
mov
mov
xchg
pop
add
div
sbb
dec
lds
repz
shl
dec
das
es
push
xor
mov
and
adc
ja
fwait
mov
fcom
(bad)
outs
cmp
push
sbb
sbb
les
dec
bound
sahf
pop
mov
cli
movs
jge
inc
sub
dec
mov
sub
aas
adc
addr16
nop
imul
jle
dec
inc
aaa
hlt
pop
sub
(bad)
lock
pop
and
movs
in
outs
mul
mov
cli
xlat
sub
adc
sbb
inc
popa
mov
sar
mov
cmps
cmp
jb
int3
xchg
ret
cmp
jmp
inc
sbb
popf
std
nop
pop
pop
pop
lahf
ret
or
dec
in
sahf
nop
xchg
movs
add
jmp
and
repz
add
sti
mov
or
out
pop
clc
jmp
mov
and
shl
aam
and
repz
push
sub
sbb
sbb
in
ret
adc
in
gs
cdq
jmp
(bad)
jp
sar
test
mov
rol
fist
lock
ret
inc
push
xchg
push
add
or
inc
adc
js
cdq
xor
retf
fimul
push
fimul
(bad)
xlat
(bad)
ror
dec
ins
inc
mov
pop
test
arpl
and
or
repnz
or
sub
retf
fcmovu
dec
ret
aam
mov
or
(bad)
hlt
(bad)
das
rol
or
in
and
dec
jnp
enter
add
jmp
or
cmp
jne
enter
outs
xchg
sar
pusha
cld
mov
stos
fwait
jle
hlt
lock
add
scas
in
mov
std
xchg
sub
jge
jbe
push
push
ja
add
cwde
mov
cdq
std
and
cmc
stos
sar
div
les
xor
mov
and
jns
stos
or
jnp
add
xor
jp
rcl
add
sub
les
jo
leave
dec
add
test
cmp
mov
mov
pop
lahf
cld
rcl
imul
jmp
repnz
inc
into
adc
hlt
imul
cdq
dec
xchg
test
add
mov
pop
mov
jne
mov
ss
in
jno
arpl
add
push
or
push
neg
outs
jns
mov
inc
sub
lds
dec
pop
out
mov
mov
sbb
movs
jle
std
push
faddp
test
mov
mov
xlat
push
fistp
in
push
retf
cmps
push
sahf
aam
(bad)
jecxz
into
std
mov
test
or
imul
aaa
pop
ret
jbe
mov
enter
mov
bnd
sbb
lds
and
movs
in
xchg
or
push
jo
mov
mov
jl
cmp
loope
mov
cmp
mov
sub
pop
adc
push
xchg
stos
leave
dec
inc
or
aad
fwait
xor
xchg
outs
into
push
sub
idiv
jecxz
mov
lods
stos
gs
jmp
repz
adc
movs
xlat
pop
les
fld
(bad)
mov
lods
add
loope
mov
add
add
leave
loop
xchg
in
gs
nop
sub
aas
adc
enter
cwde
sbb
retf
sbb
ret
or
rcl
aaa
cmp
jne
(bad)
jb
jg
int
sti
test
xchg
jp
mov
pusha
mov
mov
rol
frstor
lods
mov
movs
adc
mov
je
dec
mov
dec
or
pushf
(bad)
adc
xchg
test
cld
mov
mov
jg
mov
push
or
adc
pop
stos
or
dec
cdq
sbb
outs
sub
sbb
inc
jmp
loop
mov
jnp
ret
pop
out
dec
push
inc
lock
inc
push
stos
add
arpl
mov
inc
dec
addr16
sbb
adc
ss
and
inc
rcr
aad
or
cmp
je
push
adc
cs
ror
jns
ror
xchg
les
sbb
xor
inc
adc
in
popf
xchg
fcomp
call
bound
nop
and
pushf
je
das
icebp
(bad)
test
xor
add
jle
(bad)
js
in
dec
ficom
leave
cmp
inc
ficomp
popf
sub
cli
jmp
mov
jmp
(bad)
int
jae
pop
jg
daa
dec
mov
fwait
add
or
fsqrt
dec
and
adc
pop
(bad)
jns
jbe
jmp
test
sub
(bad)
or
clc
imul
dec
loop
(bad)
ins
fsubr
and
ror
mov
xchg
lds
(bad)
loop
out
mov
pop
pop
out
movs
xchg
jmp
pop
bound
ror
hlt
or
leave
sahf
popa
scas
inc
xor
cmp
mov
mov
in
and
adc
xchg
pop
pop
(bad)
add
das
outs
clc
out
mov
sbb
movs
pop
mov
mov
int
repz
mov
xchg
sub
add
pop
pushf
mov
out
mov
aam
cmp
outs
mov
and
add
or
push
add
mov
pop
inc
mov
xor
hlt
stos
ins
xor
jge
or
pop
adc
sbb
cmp
retf
mov
jg
sbb
jecxz
repnz
mov
cmp
aaa
jmp
inc
stos
xchg
xchg
call
sub
scas
shl
mov
cmp
pop
mov
push
ins
push
inc
jg
test
ins
aas
hlt
dec
push
xlat
xlat
cdq
pop
or
dec
call
das
inc
jbe
je
adc
push
and
bound
fisubr
cmp
dec
push
dec
in
and
push
(bad)
loopne
push
cdq
aad
cmp
inc
jmp
mov
or
stos
ins
xchg
or
sbb
popa
dec
neg
aaa
sub
das
dec
xor
in
cld
mov
cmp
enter
fucom
push
fimul
jge
in
adc
lds
fcomp
pusha
mov
lds
lds
xchg
sub
jle
push
out
add
out
mov
mov
or
cwde
js
add
les
les
dec
in
mov
push
inc
test
lds
push
loop
ins
sub
bound
jle
push
fwait
int
mov
inc
mov
outs
icebp
pop
or
pop
mov
mov
fcomp
neg
sbb
movups
outs
dec
loope
(bad)
mov
mov
sbb
call
int
cmc
pop
add
outs
push
push
xor
out
adc
call
add
mov
sbb
lods
int
fimul
mov
pushf
outs
and
pop
inc
push
sbb
mov
cwde
xchg
adc
fisttp
es
push
jl
and
scas
(bad)
fs
fst
fisubr
mov
ins
push
test
dec
or
xchg
jne
cmp
mov
outs
or
mov
popf
xchg
xchg
push
dec
pop
jb
jl
add
call
xchg
jge
or
add
cs
xor
nop
das
mov
mov
pop
popf
ins
mov
jbe
ret
or
(bad)
inc
dec
jae
ins
mov
add
xor
sbb
xchg
pop
mov
sbb
fcomp
dec
fs
in
mov
push
xchg
ja
cmp
(bad)
mov
int
aad
xor
cmp
jne
jmp
aam
bound
sbb
cld
loope
nop
jle
and
push
cmp
inc
cmp
out
imul
fldenv
xchg
jg
fld
pop
push
addr16
dec
lods
sbb
jne
push
pop
popf
pop
popa
and
ret
movs
aam
add
(bad)
std
push
mov
mov
mov
push
ss
sbb
push
mov
imul
push
inc
mov
xor
pop
adc
and
faddp
jb
ret
add
xlat
dec
div
mov
sub
sar
add
std
rcr
aaa
pop
sub
or
rol
lahf
mov
in
repz
in
pusha
xchg
xchg
bound
add
xchg
outs
js
pop
mov
stos
fucomp
fstp
mov
mov
stc
in
cli
ja
in
fdiv
sub
enter
std
inc
jg
clc
es
mov
push
out
push
dec
cmps
mov
fmul
xor
ret
sub
pop
and
call
inc
rcr
out
test
sahf
push
mov
pop
or
inc
add
out
fwait
call
jge
cwde
jno
xchg
jmp
pop
sbb
pop
xchg
mov
xor
xor
mov
(bad)
jae
cmp
repz
test
(bad)
imul
sub
movs
mov
dec
and
dec
fdivr
mov
inc
mov
mov
push
cmp
inc
add
dec
aas
push
outs
jmp
sbb
aam
adc
mov
lock
mov
cs
mov
call
dec
inc
imul
iret
cmp
inc
out
and
in
xor
push
lahf
jle
cdq
lock
fld
sbb
test
ret
mov
js
mov
xor
fld
xchg
sbb
lock
int3
xor
lods
xchg
dec
iret
pop
idiv
jno
sub
dec
movq
scas
push
mov
rcl
adc
mov
scas
das
bound
shl
dec
data16
and
push
les
add
retf
call
stos
dec
adc
xor
sbb
xchg
iret
mov
nop
inc
cld
xchg
inc
ins
pop
jnp
mov
dec
add
lods
jmp
test
(bad)
js
gs
sbb
daa
mov
mov
dec
ins
or
inc
cli
sub
and
sbb
mov
push
and
and
retf
dec
and
call
pop
mov
ins
mov
pop
push
add
jge
cmp
jp
adc
lea
sbb
xlat
imul
shl
ret
or
loop
pop
sub
(bad)
mov
cmp
out
adc
fxch
mov
sbb
sbb
cmps
cwde
cli
mov
inc
adc
gs
or
mov
and
lock
or
and
in
jp
aaa
(bad)
ins
mov
add
loopne
pop
mov
cmp
in
sub
pop
cmp
call
cmp
in
out
loope
jmp
and
push
lods
jp
jb
cmps
pusha
add
retf
fidiv
and
sub
jae
push
imul
iret
mov
or
xor
push
cmps
push
loopne
js
sub
(bad)
jmp
ja
(bad)
push
popf
mov
jno
shufps
dec
cmp
repnz
dec
in
enter
repnz
mov
(bad)
enter
sbb
mov
(bad)
xchg
test
push
mov
sub
add
sbb
pop
imul
popa
jmp
and
sbb
jecxz
push
push
xor
mov
push
dec
repnz
add
and
xor
sar
sar
stos
dec
and
xchg
push
jg
out
xor
pop
in
(bad)
loope
xchg
repnz
fnsave
jecxz
jecxz
daa
adc
fldcw
mov
scas
(bad)
sbb
movlps
punpckhbw
scas
sub
jns
fdivr
xor
sbb
push
jg
xchg
repz
call
pop
push
cmps
and
out
jl
ror
mov
pop
mov
pushf
mov
push
and
fisub
mov
inc
call
mov
or
cmp
test
jnp
std
je
call
xor
jns
push
jp
or
mov
add
jno
push
repnz
arpl
or
fxch
leave
xor
mov
mov
int3
push
(bad)
jl
add
jbe
cmc
inc
pusha
cmps
adc
shr
push
mov
xchg
and
ret
push
adc
out
xchg
mov
lods
cwde
jne
stc
loop
dec
mov
push
xor
ins
push
and
xor
adc
mov
lock
jge
pop
sbb
js
test
aad
sbb
retf
inc
or
push
jmp
lods
pop
out
jmp
inc
ja
dec
push
(bad)
outs
mov
xlat
and
shr
je
sbb
adc
ja
push
mul
lods
pop
xchg
pop
neg
cmc
jb
(bad)
aad
jmp
dec
jl
pusha
dec
repz
inc
stos
cmps
add
test
movs
and
mov
xlat
mov
fs
ins
gs
jns
jg
cmp
push
lods
cdq
adc
bound
pop
or
call
loope
lea
jae
(bad)
cmp
jb
sbb
int
cld
ror
cld
jle
sbb
jle
and
sbb
or
push
xor
mov
cmp
js
inc
out
retf
mov
ins
jne
xchg
xor
lock
sti
test
xor
cdq
xor
mov
ret
das
in
pop
loope
sbb
jmp
sahf
mov
and
ficom
and
xchg
int
cmp
shr
mov
dec
js
pop
test
out
lds
push
or
js
popf
inc
test
cmps
adc
(bad)
lods
mov
push
xchg
xchg
inc
pop
stos
test
out
ss
retf
call
add
jnp
jns
adc
inc
lock
out
mov
add
cmps
(bad)
cmps
adc
fidivr
ret
mov
mov
add
das
mov
sbb
fs
xor
sbb
inc
dec
daa
lahf
jno
push
(bad)
clc
hlt
jp
stos
mov
sbb
mov
inc
mov
scas
(bad)
and
pop
sub
cs
pop
dec
js
xchg
into
sbb
or
or
xlat
cmp
xlat
push
aam
adc
sbb
ss
mov
(bad)
repz
or
dec
cmp
pop
and
and
scas
les
jns
shl
aas
gs
mov
dec
mov
fs
lock
cmp
or
outs
and
iret
(bad)
lods
cmp
push
adc
(bad)
ins
arpl
lds
jo
adc
jbe
sub
mov
push
pushf
mov
pop
rol
(bad)
xchg
adc
(bad)
lea
mov
loopne
shr
aad
dec
cs
mov
cli
pop
cmp
sbb
and
fadd
enter
mov
iret
les
pop
push
pop
mov
cmp
add
xor
aaa
dec
push
bnd
push
mov
loopne
ret
loopne
repnz
cmp
or
mov
xor
jle
xor
inc
push
pushf
fstp
push
in
das
das
movs
fldcw
pop
cwde
dec
push
jmp
adc
pop
mov
and
sub
fdivr
or
xlat
lea
xchg
retf
imul
inc
lahf
adc
mov
test
mov
test
mov
push
stos
or
adc
mov
movs
lea
xchg
aad
mov
mov
jge
adc
jns
shr
lods
mov
clc
adc
and
(bad)
jmp
mov
or
dec
push
cwde
addr16
xor
setb
dec
cmp
bound
push
cmp
nop
test
or
in
dec
in
icebp
push
xchg
pop
mov
aam
jb
aaa
call
pop
stos
(bad)
out
or
movs
lock
je
arpl
pop
sub
pop
xlat
call
popw
aaa
aad
jb
jecxz
xor
scas
call
call
mov
sbb
mov
ins
xchg
jo
inc
test
jnp
cmps
bnd
jl
bound
mov
test
lock
cmp
or
inc
push
add
cmp
or
stos
pop
cld
add
mov
je
test
mov
int
pusha
xor
in
rol
push
(bad)
mov
in
rcr
mov
inc
retf
stos
add
call
sar
out
adc
add
xor
ins
xchg
xor
scas
ret
hlt
mov
lock
arpl
(bad)
loope
and
push
push
add
mov
sar
inc
add
int3
inc
test
mul
syscall
cli
(bad)
lea
nop
cmp
and
sub
adc
sub
push
cmp
out
popf
outs
out
das
fidivr
dec
clc
mov
jge
lahf
push
loopne
push
mov
push
xchg
inc
(bad)
mov
mov
xchg
pop
add
mov
test
fistp
sbb
xlat
stos
data16
ret
sbb
sub
jb
pop
push
inc
call
jmp
xchg
lea
fsubr
out
xchg
and
sar
mov
lea
mov
jne
jnp
lea
mov
cld
fstp
icebp
cmp
sub
sbb
cmps
mov
hlt
ret
jp
jb
cli
adc
pushf
and
dec
fisubr
cmps
clc
in
jae
fs
mov
(bad)
or
mov
and
or
shl
jl
adc
in
mov
jno
push
or
xor
mov
repnz
(bad)
and
push
in
in
gs
cmps
dec
dec
inc
fiadd
cmps
or
mov
push
outs
ror
mov
clc
xchg
xchg
into
jge
xlat
jb
inc
push
call
mov
xchg
sti
stos
xchg
dec
xor
adc
mov
mov
push
fld
push
loop
aad
stc
pop
push
loope
or
mov
mov
sar
lahf
mov
mov
pop
clc
(bad)
or
rcr
es
daa
mov
sbb
cmp
inc
outs
push
xchg
add
xchg
inc
out
inc
adc
inc
add
arpl
xchg
rcl
xchg
ss
stos
hlt
jl
ins
retf
ss
or
pop
rcr
xor
pop
cmps
fnstcw
dec
mov
call
dec
cmp
add
arpl
cmc
xor
es
call
rol
adc
inc
mov
cmp
retf
sbb
and
pop
push
retf
cmp
push
loope
xor
hlt
or
stos
daa
mov
in
xlat
cmp
mov
inc
fisttp
ds
test
sub
cs
mov
lock
xor
mov
icebp
push
inc
out
xor
ss
fwait
(bad)
imul
mov
mov
xor
mov
sub
aam
test
ret
adc
iret
fisub
add
jne
dec
push
test
jecxz
adc
sar
xchg
push
jns
pop
xchg
xor
div
aaa
push
mov
push
mov
jge
xlat
xor
retf
push
mov
stos
mov
xchg
or
xchg
cmp
ficom
or
push
jo
and
cld
mov
xchg
mov
sar
dec
dec
hlt
push
sub
xor
pop
mov
call
sub
bound
adc
stos
add
ficom
int
jne
cmps
sub
xor
fmul
jmp
pop
add
rol
inc
mov
and
mov
pop
jmp
cmp
jl
mov
cmp
add
push
lahf
ret
mov
loopne
sub
push
iret
add
outs
inc
mov
cmp
or
dec
dec
shl
out
(bad)
loopne
fcomp
ret
popa
jne
mov
push
hlt
mov
gs
mov
rcr
shl
or
and
dec
add
pop
xor
mov
jbe
mov
fwait
cmp
repz
inc
xor
scas
inc
call
hlt
cmps
outs
xchg
and
repz
push
fs
adc
add
xchg
pop
xor
shl
and
push
rol
mov
retf
test
push
scas
pop
movs
add
cdq
add
inc
(bad)
push
and
loopne
into
mov
jb
nop
(bad)
clc
aaa
sub
cmc
das
popf
xor
call
aaa
xor
(bad)
xrelease
adc
push
in
movs
rol
mov
int3
rcr
push
int
sbb
adc
add
jnp
sub
or
sbb
dec
inc
and
or
or
ret
cmp
pop
push
lahf
rcl
adc
cmc
pop
packuswb
push
xor
lods
add
inc
(bad)
and
fimul
jnp
aad
mov
inc
scas
mov
aaa
mov
fwait
and
jnp
push
add
inc
iret
and
in
inc
adc
sub
fidiv
xchg
dec
jnp
aaa
aam
xor
xchg
daa
dec
das
inc
ret
js
xor
ins
push
aam
loopne
mov
mov
arpl
clc
sbb
dec
stc
push
(bad)
add
mov
push
push
cmp
rcl
and
scas
jg
add
jo
scas
add
mov
or
fisttp
jp
mov
sub
das
nop
mov
push
mov
sti
aaa
test
mov
pop
xor
stc
lock
mov
ins
mov
cmp
pusha
push
mov
mov
shr
inc
shl
in
pop
scas
mov
dec
sub
test
test
and
loopne
dec
gs
data16
mov
jo
in
sbb
adc
in
mov
fidiv
lods
call
sub
mov
fucom
push
pop
xor
jecxz
push
sti
inc
jp
jnp
xchg
stc
mov
add
test
ret
scas
mov
je
fisubr
cmp
std
aam
das
push
push
or
sbb
scas
pop
dec
(bad)
in
mov
inc
pop
xchg
dec
popf
push
and
lods
dec
adc
and
jnp
or
mov
mov
add
jmp
xor
sbb
imul
mov
or
jae
sub
cmp
push
and
ins
fadd
(bad)
jge
fst
cmps
loopne
cli
cli
xor
inc
sar
clc
cli
xor
add
sbb
dec
andnps
(bad)
mov
xchg
test
ret
cs
sbb
es
sub
ds
inc
sahf
mov
xchg
xor
cmps
jns
add
jnp
call
mov
adc
retf
movs
ds
imul
add
jp
pop
imul
dec
popa
sub
push
int3
fdivp
adc
push
out
das
cli
imul
daa
push
mov
inc
inc
and
ins
adc
inc
in
ret
mov
dec
and
mov
push
cmp
stos
jmp
ja
scas
and
(bad)
out
bound
cmps
jmp
(bad)
(bad)
xchg
mov
adc
lods
mov
loope
mov
sbb
add
aad
leave
mov
inc
push
int3
or
gs
pusha
sbb
fadd
sbb
add
mov
mov
(bad)
je
push
mov
mov
jae
shl
or
test
cwde
out
dec
mov
inc
out
mov
hlt
or
mov
shr
mov
mov
xchg
lock
sahf
mov
retf
es
mov
pop
inc
or
out
das
pop
icebp
push
sbb
xchg
stc
jecxz
loope
and
pop
shl
lock
fadd
icebp
jno
or
adc
pop
neg
in
xor
add
inc
sub
loopne
pop
push
xlat
mov
pop
mov
loopne
mov
cmp
pop
idiv
(bad)
jnp
jg
xor
or
rcr
push
xlat
jae
push
scas
xlat
pop
imul
imul
shl
lods
mov
push
bound
jns
shl
sahf
xchg
dec
push
js
in
sub
mov
in
dec
sub
mov
daa
or
or
mov
cmp
add
xchg
jge
push
jmp
(bad)
mov
add
shl
jmp
fisubr
dec
adc
ins
mov
in
adc
add
test
or
ret
xchg
sbb
push
xchg
mov
in
sub
ret
push
jnp
test
dec
push
(bad)
sar
add
retf
sbb
add
cmps
ins
xchg
pusha
sbb
mov
mov
jle
adc
sub
in
inc
mov
sub
dec
adc
sbb
jns
faddp
sub
(bad)
jmp
imul
mov
addr16
arpl
adc
mov
mov
sahf
fidiv
pop
dec
stos
jmp
repz
je
mov
add
push
dec
sub
sub
ja
cli
shl
data16
push
add
fmul
pop
cmp
loope
inc
cmps
iret
stc
xor
sar
fs
in
dec
jns
fild
stos
push
jno
fdivr
jns
add
push
xlat
sub
aas
inc
adc
sbb
pop
mov
pop
mov
cdq
mov
and
pop
into
sbb
jecxz
push
std
sbb
xchg
je
push
cmps
add
jecxz
push
ss
lds
xor
shr
(bad)
xor
mov
test
test
mov
fs
sbb
outs
xchg
jbe
adc
int3
sbb
adc
(bad)
xchg
adc
jge
mov
ret
mov
mov
jg
xor
mov
loopne
add
mov
test
or
adc
jne
test
inc
or
and
rcl
sar
cmp
add
sub
pop
(bad)
xor
ins
xlat
and
mov
push
pop
dec
mov
in
addr16
mov
inc
xor
inc
lds
shr
out
push
fdivr
inc
jge
cld
dec
pop
fnstsw
lods
scas
jnp
inc
xor
pushw
mov
sub
mov
(bad)
and
out
mov
repnz
not
cmp
mov
jo
fwait
into
pop
rcr
rcr
pushf
xchg
cmp
les
stos
cdq
jnp
ret
add
jmp
in
call
mov
pop
std
mov
fdiv
sbb
mov
mov
ret
sub
push
push
cmp
xor
push
ja
bnd
inc
rol
sbb
mov
call
xor
stos
mov
pop
mov
push
inc
pop
push
push
mov
sub
push
ins
adc
repnz
inc
cli
mov
push
shl
in
icebp
or
mov
push
or
jbe
xchg
jne
mov
test
mov
cmps
and
addr16
add
adc
in
pop
pop
mov
fstp
test
xor
outs
mov
test
test
iret
dec
pusha
xchg
data16
ss
mov
jmp
es
cmp
(bad)
pop
adc
dec
arpl
(bad)
xchg
call
repnz
sar
leave
sub
jl
mov
sub
sub
stos
inc
dec
aaa
xor
pop
clc
scas
push
mov
bound
test
jns
call
dec
sub
cli
and
popf
mov
fs
jne
cli
int3
mov
or
sbb
mov
or
or
es
sbb
pop
jo
shl
int3
xchg
cmp
test
mov
inc
cmp
mov
cld
mov
cmp
jne
xor
ins
loop
bound
clc
rcl
add
jle
sar
sbb
xor
fist
push
jo
pop
jae
mov
jno
xchg
(bad)
adc
xor
mov
movs
imul
and
fs
pop
mov
cmp
jbe
sub
test
loope
dec
push
jmp
pop
mov
mov
xchg
arpl
dec
dec
ds
cli
jg
dec
adc
fild
out
mov
mov
pop
into
(bad)
mov
je
loopne
adc
or
(bad)
jne
add
(bad)
in
or
in
dec
mov
or
js
jo
rcr
push
sub
pusha
pusha
retf
and
ret
mov
pop
je
push
ins
mov
aad
lock
movs
push
cmp
sbb
int3
int
mov
pop
sbb
ins
jge
and
fcom
or
imul
or
cld
sbb
inc
xchg
xor
call
pcmpeqd
test
inc
jecxz
into
adc
xor
cdq
lock
sub
jno
loopne
stc
mov
add
sbb
rcl
xchg
push
xchg
add
iret
adc
sbb
xlat
dec
mov
dec
js
sub
shl
pushf
inc
ret
fwait
jbe
addr16
ins
adc
ret
aad
pop
stos
adc
cmps
mov
leave
and
call
or
mov
mov
dec
fstp
dec
out
aad
or
push
fcom
adc
sub
add
pop
(bad)
nop
lods
and
ja
movs
or
sbb
lods
fcmovnu
test
clc
(bad)
pushf
push
and
scas
inc
fld
(bad)
sbb
sbb
sahf
jb
movs
jo
icebp
inc
xor
(bad)
pop
pusha
data16
pop
aad
stos
shl
out
pop
repnz
das
out
vmwrite
cmc
inc
pop
aaa
dec
nop
pop
inc
lock
es
fwait
inc
(bad)
xchg
and
fwait
int3
enter
push
mov
addr16
xchg
pop
cmp
mov
push
ss
push
xchg
xor
mov
mov
or
or
mov
aam
hlt
loopne
movs
mov
dec
inc
mov
add
pop
in
mov
repnz
scas
mov
cli
in
mov
jmp
call
loopne
mov
push
jnp
hlt
ret
push
jnp
or
sahf
je
jmp
lahf
push
loop
xchg
cmps
jo
int3
xchg
out
rcr
mov
(bad)
sub
cmp
clc
adc
pop
fwait
pop
push
call
inc
cmp
sub
mov
lock
inc
push
outs
and
pop
addr16
fidiv
out
sub
test
neg
pop
jecxz
not
sahf
xchg
cmp
or
xor
dec
test
inc
mov
in
movs
cmps
inc
push
xchg
retf
xchg
xor
ret
sub
leave
cmp
or
mov
dec
stos
cli
add
jp
das
cmp
xor
mov
cli
loop
nop
cmc
leave
daa
ss
mov
fmul
push
ja
inc
jno
and
jmp
sti
fs
lock
pop
add
pushf
(bad)
int
ret
pop
in
add
sub
jnp
dec
fisttp
xchg
dec
push
dec
sub
ja
inc
xor
(bad)
nop
mov
sbb
add
rcr
and
sbb
push
out
inc
dec
cmp
inc
and
mov
adc
dec
test
aam
xor
not
jmp
add
mov
mov
ret
push
sbb
pop
push
jne
aaa
ins
cmp
retf
imul
push
dec
mov
push
push
test
sbb
dec
lds
sahf
cmps
iret
scas
in
adc
data16
push
pop
xchg
std
adc
fcomi
dec
mov
or
mov
out
pusha
xchg
lock
es
(bad)
je
fsubrp
pushf
bound
shr
pushf
push
add
inc
inc
cmp
addr16
inc
push
cmp
test
sbb
fwait
xchg
mov
inc
fnstenv
adc
daa
nop
sub
leave
aad
cmp
push
mov
popf
js
mov
xchg
jb
clc
adc
push
push
js
add
test
jmp
scas
sub
sub
xchg
cmps
sub
xor
adc
pop
loope
jg
aas
(bad)
and
not
repz
pop
ffreep
dec
popf
outs
into
or
cmp
into
call
iret
adc
inc
iret
push
mov
scas
jb
mov
mov
ja
out
in
inc
shr
or
xor
xchg
out
push
mov
jne
icebp
idiv
jl
dec
fidivr
xlat
xor
leave
xchg
mov
movs
jecxz
fwait
ins
dec
cmp
adc
rol
cmp
icebp
jo
(bad)
jae
cmp
sub
dec
add
pop
inc
stc
push
loop
arpl
fcmovbe
mov
jb
sbb
test
sub
sub
jge
jbe
cmp
sub
jne
arpl
scas
seto
ss
rcl
imul
pop
lods
inc
pop
popf
jb
retf
mov
test
push
push
and
pop
mov
or
shl
mov
pop
inc
enter
and
sbb
imul
sbb
or
jae
add
ins
out
movs
rcl
pop
rcr
xor
inc
push
mov
daa
mov
dec
add
dec
push
dec
stos
dec
sahf
cld
adc
fptan
and
fldcw
add
dec
ja
sbb
in
and
add
fwait
inc
inc
dec
or
test
add
repz
push
mov
sbb
in
sbb
add
movs
daa
ret
adc
and
mov
add
adc
das
jmp
hlt
or
add
mov
adc
add
add
inc
hlt
sar
sbb
add
mov
mov
dec
daa
and
jg
xlat
fcom
sub
daa
and
push
xor
loopne
sti
(bad)
ins
push
lods
add
add
fst
je
stos
push
repz
cs
ret
(bad)
inc
mov
add
cmp
sar
inc
sub
out
add
outs
xor
test
enter
call
sbb
inc
jne
enter
dec
sub
xlat
rcl
mov
sbb
push
shr
xchg
inc
test
push
pop
aas
test
pop
mov
adc
(bad)
in
imul
mov
rol
jb
mov
lds
in
push
adc
retf
adc
inc
mov
xchg
cmp
sub
sar
mov
and
rcr
mov
cdq
(bad)
and
pop
aam
ror
pop
jg
jl
test
lahf
cmp
sub
mov
xor
push
(bad)
push
mov
cwde
or
repnz
jb
mov
aad
xchg
ret
mov
cmp
icebp
ss
bound
sub
push
push
and
xchg
or
add
bound
mov
push
in
call
stos
das
or
sub
pop
ds
mov
lods
push
loop
dec
outs
push
push
cmp
fcomp
scas
inc
pop
pop
nop
add
pop
mov
aaa
movs
adc
sub
int3
mov
(bad)
sub
push
sar
outs
adc
cmps
mov
je
imul
(bad)
daa
push
jge
lea
or
retf
jl
enter
jne
xor
test
jnp
cld
pop
out
push
sbb
test
sar
repnz
test
xor
push
cld
dec
ror
dec
repz
sub
test
or
push
mov
and
pop
retf
xchg
loope
int3
out
aad
lods
and
data16
imul
adc
stos
and
dec
data16
cs
fs
cmps
xchg
mov
xchg
shl
das
push
mov
rcr
gs
out
stos
ret
push
or
mov
dec
sbb
and
mov
or
iret
out
movs
jmp
sar
pop
ja
out
jg
xchg
push
aaa
push
xlat
imul
jbe
dec
test
cmp
jg
cmp
push
pop
stos
or
cmc
ss
cdq
mov
ins
and
cdq
arpl
jp
or
out
out
xchg
adc
mov
sar
in
fnstcw
or
add
jmp
cmps
xchg
(bad)
mov
mov
mov
jnp
outs
sub
jmp
enter
cs
call
out
pushf
ror
data16
ja
mov
jg
pushf
out
add
addr16
mov
or
pop
icebp
mov
xchg
in
repz
mov
sbb
and
add
and
sub
fwait
inc
cmc
inc
into
inc
sbb
scas
or
(bad)
jae
shr
(bad)
sahf
pop
sbb
mov
inc
test
push
mov
arpl
mov
shr
(bad)
push
or
add
push
push
ss
sub
push
in
test
cld
adc
cmp
in
ds
cmps
jne
pop
jge
test
cmp
in
adc
dec
rcl
loope
ss
mov
xor
sbb
pop
inc
jno
sub
out
add
punpckhdq
jo
dec
dec
sub
xchg
mov
test
jae
jg
fimul
sbb
rcr
inc
push
xchg
jne
xor
sbb
add
repnz
idiv
sbb
lahf
sbb
and
push
xchg
pusha
add
mov
or
mov
stc
inc
outs
(bad)
ror
popa
loope
cmps
or
cmovb
stos
cmp
test
jns
aad
push
cdq
fild
lds
or
mov
xchg
test
sbb
xchg
ins
ret
or
push
dec
aad
sub
mov
push
xlat
mov
retf
jecxz
xor
xchg
dec
push
mov
arpl
pop
xchg
aaa
in
sub
sahf
mov
pop
loopne
or
dec
mov
sti
and
ss
or
mov
mov
inc
test
dec
push
adc
(bad)
mov
out
sbb
add
sub
cmp
movs
ja
mov
dec
dec
inc
in
cmp
jo
add
out
mov
inc
mov
xor
push
inc
pop
imul
rol
std
mov
jecxz
and
push
hlt
jb
sub
mov
cwde
(bad)
push
mov
and
push
and
cmp
lods
int
ins
pop
push
push
test
jle
mov
daa
push
aam
sti
mov
mov
stos
cs
ror
mov
sbb
jp
out
(bad)
jns
je
mov
xchg
cdq
jmp
mov
or
leave
stos
and
add
sahf
push
mov
push
lods
mov
pop
test
mov
xchg
cmps
mov
or
shr
mov
in
add
dec
inc
push
mov
outs
adc
sbb
jo
and
xchg
and
mov
fsubr
sbb
pop
fwait
das
addr16
fisub
xchg
shr
retf
out
or
jp
lahf
mov
cmps
lock
cmp
std
dec
xor
add
ret
loop
lahf
ret
mov
daa
or
hlt
sbb
imul
xlat
xchg
mov
arpl
add
retf
jmp
(bad)
mov
mov
push
mov
cs
sbb
mov
add
dec
leave
adc
dec
push
icebp
stos
clc
dec
xchg
sahf
rcr
imul
leave
mov
ss
scas
xor
inc
mov
pop
dec
movs
and
test
jns
shl
aaa
mov
or
in
xchg
xchg
aam
jecxz
add
push
test
bound
(bad)
add
out
adc
mov
ins
push
sub
jno
jbe
stos
jmp
xchg
xchg
mov
or
sbb
mov
popf
xchg
or
mov
jo
fwait
retf
mov
xchg
and
test
ret
jns
cmps
dec
push
fcomp
daa
dec
inc
mov
adc
xchg
cmp
xchg
pop
mov
inc
popf
cmp
lods
sbb
nop
(bad)
ds
cmp
sbb
xchg
scas
dec
adc
cmp
(bad)
cmp
or
movs
imul
div
adc
data16
add
fsub
cmovle
add
jb
xchg
cmp
cmps
mov
mov
add
repnz
sar
scas
int3
ss
pushf
pop
jecxz
xchg
inc
stos
out
sub
xchg
stos
xchg
shr
xchg
sub
jnp
inc
and
mov
xchg
stc
lods
pushf
por
adc
adc
adc
xchg
push
push
(bad)
aam
pop
mov
in
mov
icebp
lods
and
test
adc
jb
push
call
mov
adc
inc
push
cld
dec
out
dec
mov
loopne
or
call
pop
push
fiadd
adc
xchg
dec
fs
pop
mov
(bad)
pop
pop
packsswb
and
fsub
dec
mov
mov
and
enter
(bad)
jno
pop
and
add
out
fcmovnu
adc
iret
lds
test
shr
add
sbb
pop
retf
inc
fistp
and
push
stos
cmp
fldcw
cmp
cmp
ins
call
stos
cld
xchg
jmp
fisttp
and
pusha
dec
lahf
jmp
fwait
xchg
and
mov
and
cli
jo
test
fstp
repz
fistp
xchg
xor
adc
mov
int
push
shr
or
push
pop
xor
daa
cmp
jnp
retf
jge
jmp
mov
outs
int
ret
loop
fiadd
pop
imul
in
pop
dec
jmp
loope
imul
outs
(bad)
adc
jns
or
sub
sahf
dec
leave
jb
pop
(bad)
jnp
ins
mov
movs
jmp
pop
cs
icebp
adc
sbb
mov
push
or
or
add
jp
test
mov
xchg
popf
and
and
popa
xchg
pop
cs
and
lahf
pop
xchg
inc
jnp
mov
adc
sbb
dec
repz
cmp
jl
and
cmovl
scas
je
xor
inc
adc
pushf
or
adc
out
out
rcr
rcr
data16
sub
mov
inc
jne
and
scas
mov
stos
adc
das
xchg
mov
cs
jb
cwde
mov
les
sbb
adc
jg
inc
pushf
(bad)
push
xchg
mov
pop
aad
scas
movs
sub
xlat
inc
and
in
dec
(bad)
ss
shl
add
inc
pop
lds
test
and
shr
pop
adc
mov
dec
and
dec
dec
lock
adc
sti
int
sahf
mov
pop
punpckldq
push
rol
retf
ins
inc
in
jg
outs
aas
cld
stc
adc
and
mov
jbe
lods
rol
xchg
xlat
scas
or
mov
xor
xchg
mov
sti
dec
data16
sahf
or
and
cli
dec
jmp
dec
cmp
rcr
xchg
fcomp
lods
in
mov
add
adc
sub
and
cmp
xlat
nop
imul
pop
(bad)
loopne
push
dec
mov
shl
cwde
je
or
push
addr16
and
nop
sub
in
push
stos
pop
cmp
xor
data16
jg
add
sub
pop
sub
es
add
jne
cld
icebp
mov
aas
xchg
sti
add
stc
pop
dec
dec
in
sbb
sub
push
mov
mov
(bad)
movs
dec
mov
push
xor
aam
mov
add
push
lds
jg
push
dec
outs
inc
mov
and
out
movs
mov
cmp
fs
cmc
das
adc
inc
out
inc
push
(bad)
push
cmp
mov
call
in
popa
fild
das
or
mov
jmp
mov
cmp
mov
std
jecxz
loope
retf
xor
stc
cmps
push
clc
enter
inc
push
jmp
(bad)
add
adc
(bad)
out
or
cwde
add
cmp
lds
jmp
mov
pop
add
mov
jg
cld
fwait
dec
inc
adc
jbe
add
daa
mov
idiv
lds
mov
fucomp
add
mov
jns
loop
in
(bad)
dec
stos
push
xchg
sub
xor
push
aad
jg
sahf
test
add
fistp
js
push
loopne
and
shl
push
sub
out
jmp
les
(bad)
or
sbb
sbb
push
mov
ss
xor
sar
cmp
sti
cmc
mov
lea
adc
das
sub
jno
xor
mov
push
dec
clc
loope
push
inc
pusha
pop
retf
cld
sbb
sub
in
mov
push
nop
lds
adc
xor
sbb
cdq
jecxz
xchg
cmp
xchg
jbe
int
(bad)
cmp
shl
in
dec
sahf
(bad)
jmp
lahf
jp
retf
(bad)
in
not
dec
add
imul
sub
aas
cmp
pushf
ss
or
jge
mov
pop
xchg
(bad)
stos
adc
stos
sub
out
aam
cmps
dec
pushw
xor
and
movs
jmp
xor
xchg
mov
push
mov
test
ds
test
das
adc
xor
jecxz
adc
into
lea
repz
das
aas
loop
pusha
clc
or
add
push
mov
xchg
rol
mov
pop
mov
(bad)
sub
jns
or
cmp
mov
popf
push
popf
loope
inc
stos
stos
sbb
aam
adc
pusha
adc
dec
mov
ret
ret
pop
xchg
sti
push
cmp
cmp
ss
and
in
mov
pop
inc
out
cmp
sti
mov
dec
sbb
test
push
sbb
arpl
and
ror
idiv
or
and
mov
mov
gs
test
leave
jne
xchg
cmp
popf
adc
test
ja
in
fnstcw
cs
repz
sbb
bound
loope
out
pusha
hlt
adc
add
dec
hlt
jnp
lock
stos
jle
dec
jbe
jae
jge
xchg
pop
mov
repz
and
push
lock
push
xchg
rcr
jno
mov
mov
mov
cli
push
mov
or
cmp
xchg
in
repnz
push
ins
jmp
sbb
std
fst
mov
sub
mov
push
jl
(bad)
mov
int3
mov
mov
and
fwait
lods
dec
sbb
ror
jbe
inc
xor
mov
movs
push
sar
push
sbb
rcl
daa
adc
push
pusha
jae
and
dec
ret
dec
xchg
dec
es
push
push
cmp
cwde
aam
rcl
mov
movs
pop
mul
push
ins
idiv
fcmovne
or
hlt
rol
ret
inc
dec
and
fwait
ret
ins
jae
dec
ss
(bad)
pop
push
stc
xor
fucomi
push
pop
stos
shl
daa
push
test
or
lods
loop
pop
cli
or
fadd
mov
xlat
push
mul
mov
dec
mov
test
fwait
inc
call
scas
xchg
or
jle
xchg
aas
cmps
sbb
mov
fimul
and
jo
mov
pop
dec
call
pop
cmp
mov
fcomp
les
aam
jge
das
add
movs
popa
jbe
ficom
retf
xchg
stc
mov
jmp
push
imul
clc
xor
jae
xlat
test
mov
mov
adc
pop
xor
push
ja
imul
fdiv
clc
js
cmp
xor
pop
stos
loope
cs
xchg
nop
loop
push
mov
fnstcw
vandnpd
cld
and
inc
cld
xor
mov
mov
push
push
test
inc
lea
sub
stc
rol
sahf
adc
sub
mov
sbb
test
xchg
imul
fdiv
repnz
loopne
in
cmp
add
push
jae
pop
jno
mov
cmp
lahf
xlat
lods
jle
jmp
cli
dec
loop
dec
sahf
and
mov
or
fcmovnb
test
xchg
cmps
ins
fmul
fnstsw
lods
sub
jae
inc
out
out
and
inc
add
sbb
arpl
mov
lock
shr
mov
pop
lods
sbb
bound
out
out
icebp
je
(bad)
inc
test
jo
inc
iret
cmps
icebp
pop
sti
dec
fnstcw
push
stos
test
sub
stos
pop
in
clc
sub
xchg
pop
sub
mov
jae
dec
ret
mov
push
mov
dec
test
test
mov
mov
stos
test
cwde
shld
shl
aam
fimul
and
jae
mov
adc
loope
aad
add
mov
daa
das
inc
std
inc
pop
push
stc
clc
dec
imul
cmps
lods
lahf
shr
sbb
inc
push
add
fild
push
ret
imul
adc
ds
hlt
lods
add
mov
sub
js
and
jns
inc
jnp
leave
sti
push
pop
pop
xor
in
sbb
xchg
loope
stos
dec
sbb
mov
push
es
(bad)
and
adc
xchg
sub
sbb
cmp
and
cmps
dec
mov
or
jg
dec
js
je
(bad)
stos
lods
pop
push
mov
dec
sbb
stos
inc
lds
std
cmp
mov
addr16
jb
cmc
mov
loope
sub
mov
xchg
xor
es
test
push
jns
jne
or
jl
fdivr
and
int3
jbe
das
xchg
xor
mov
or
xor
mov
cmp
mov
mov
sub
and
pop
mov
pop
jbe
or
imul
jecxz
pop
adc
test
aas
jnp
not
xor
pop
retf
sbb
(bad)
fist
xor
adc
out
fsub
xchg
adc
rol
rcl
test
or
ret
sub
out
ret
adc
out
add
jbe
fs
stc
je
cmp
fs
jno
ds
xor
retf
or
fwait
jl
icebp
lods
test
sbb
fwait
aaa
(bad)
mov
push
dec
mov
hlt
test
ror
jo
lds
mov
out
inc
mov
sbb
imul
jbe
je
sub
or
lea
push
xchg
mov
mov
test
test
int
jge
adc
and
retf
(bad)
mov
rcr
ja
int3
jecxz
pop
sub
(bad)
inc
out
scas
(bad)
jge
shl
jbe
sub
cmps
out
cmp
stc
mov
cmp
or
sbb
leave
mov
dec
or
addr16
(bad)
(bad)
add
retf
aaa
imul
cs
pop
inc
call
mov
adc
cmp
xor
ret
push
cli
aas
add
mov
loop
inc
mov
arpl
sub
xor
bound
ss
mov
push
pop
dec
div
adc
mov
fild
call
int3
retf
test
dec
xchg
fdiv
jg
add
call
ja
rcr
scas
pop
test
test
pop
hlt
and
repnz
call
les
xor
addr16
sbb
loope
jae
fstp
(bad)
cmp
xchg
xchg
stc
cmp
cmp
and
lods
xor
push
jmp
pop
int
xchg
call
jmp
movs
xchg
popa
push
outs
cs
aam
stc
into
pop
(bad)
mov
aam
jb
call
call
sar
xchg
sti
sar
iret
jno
in
cmps
and
popa
push
and
lds
movs
cld
xchg
rcl
popa
pop
mov
pmullw
out
cmp
dec
loop
cs
pop
pop
mov
fdivrp
jbe
push
sahf
mov
call
pop
pop
(bad)
jno
out
and
dec
call
call
pushf
jb
inc
(bad)
ds
mov
and
xor
stc
xlat
or
dec
jno
into
cwde
xchg
push
cmp
mov
in
xor
cmps
rcl
push
call
mov
pop
(bad)
push
je
add
push
inc
pushf
cs
movs
adc
stc
pop
scas
sbb
test
js
push
icebp
aad
inc
push
stos
sub
dec
dec
or
lods
and
push
mov
cmps
and
adc
jbe
dec
sub
ja
nop
dec
xchg
stos
aaa
dec
push
or
cs
stc
xchg
retf
je
push
in
(bad)
in
in
ficomp
sbb
xchg
cmp
bound
fsubp
sbb
or
lods
hlt
sub
lods
cs
fistp
int
xor
mov
sub
enter
jo
push
sub
ds
imul
loop
mov
cmc
inc
xor
call
aaa
mov
mov
add
nop
out
dec
add
xchg
cmps
cmp
das
jmp
jne
adc
cmp
xor
and
cmp
jle
mov
pusha
sub
loope
push
adc
add
out
xchg
jns
adc
jl
scas
mov
push
sbb
mov
je
dec
mov
pop
jne
(bad)
or
xchg
ret
cmp
or
jp
inc
stos
data16
hlt
ja
lods
mov
repz
sub
int3
cmp
in
fiadd
push
int3
jmp
adc
jo
mov
fnsave
mov
mov
push
cmp
xchg
outs
shl
xor
inc
mov
fsubrp
push
imul
or
mov
aad
cmp
cld
loopne
adc
mov
sbb
push
xor
add
int
pop
cmp
ror
(bad)
xchg
clc
push
in
cld
call
xchg
retf
cmp
dec
sub
inc
cmps
jmp
adc
push
mov
lods
xchg
rcr
popa
inc
jle
mov
adc
pcmpgtw
dec
pop
or
jb
pusha
(bad)
scas
lods
inc
sti
or
pop
fwait
pop
rcr
mov
mov
xor
jnp
jns
pop
and
pop
dec
sub
xor
imul
es
pop
outs
sbb
jp
in
(bad)
xchg
cmp
mov
mov
shr
cmp
push
out
cmp
push
mov
aas
lahf
add
leave
daa
sub
loop
stc
push
and
stos
adc
ret
ja
retf
mov
loopne
dec
fistp
jno
mov
xchg
mov
xor
inc
ret
cdq
stos
stos
inc
mov
icebp
dec
(bad)
jmp
xchg
pop
push
stos
mov
into
(bad)
repnz
mov
sub
cli
and
sti
xchg
sbb
mov
lods
or
or
adc
cld
add
push
(bad)
inc
retf
jl
fdivp
mov
shl
mov
test
dec
cmp
test
cmp
dec
and
mov
mov
ret
inc
stos
leave
repz
xchg
cmp
push
aad
or
fisttp
shl
mov
jmp
aam
addr16
aaa
iret
fdivr
fs
inc
daa
push
mov
sbb
es
out
imul
aas
pop
ret
push
popf
push
jmp
pop
fwait
gs
lds
xor
mov
loopne
daa
push
movs
pop
jo
push
inc
sbb
sub
in
or
mov
retf
outs
cmp
pop
pushf
stos
ins
pop
add
jb
inc
sbb
and
outs
call
and
lahf
push
(bad)
out
sub
mov
movs
das
xchg
ds
push
adc
lods
jmp
mov
xchg
push
push
cmp
xchg
adc
aaa
loop
push
mov
inc
adc
push
mov
cmps
rcl
cmc
sbb
fdiv
lahf
call
aam
loope
pop
mov
cdq
mov
xor
mov
xchg
xchg
nop
ret
loopne
cmp
sub
push
and
outs
imul
stos
pop
hlt
and
mov
cld
mov
xor
adc
add
sub
inc
and
mov
aaa
(bad)
cmp
sub
leave
mov
pusha
lods
cmp
xor
mov
push
mov
dec
shr
clc
(bad)
sahf
test
jb
xor
lar
mov
out
cdq
cmps
(bad)
xor
movs
sbb
and
outs
imul
adc
push
(bad)
test
(bad)
mov
ficomp
mov
loope
and
mov
mov
pop
cli
es
loope
sbb
test
cmc
mov
or
xchg
stos
dec
cmps
dec
mov
ja
sbb
mov
inc
push
ins
mov
out
mov
bound
mov
retf
scas
shl
stc
fisttp
add
inc
pop
jmp
popf
mov
jmp
push
jns
jb
xchg
or
xchg
or
test
sbb
inc
mov
xor
dec
or
mov
fnsave
and
loopne
jnp
sbb
xchg
ja
cmps
inc
mov
push
pop
mov
les
ret
adc
mov
sbb
dec
jle
mov
cmps
pusha
in
inc
push
enter
movs
sub
bound
sub
inc
or
loopne
sub
push
jmp
sbb
dec
add
mov
clc
dec
hlt
cli
sub
and
mov
cmp
xor
mov
pop
test
scas
test
pop
out
sbb
mov
repz
cwde
sub
push
aam
push
stos
mov
push
ds
or
push
xor
jmp
jecxz
jae
push
mov
pop
xchg
loop
clc
adc
addr16
xchg
inc
sysret
xchg
(bad)
fldenv
sbb
sub
jne
cmp
mov
shl
aaa
shl
mov
jge
jo
mov
pusha
cmp
adc
xchg
gs
sbb
xchg
call
xchg
lea
push
and
retf
clc
ret
inc
add
sub
in
and
in
rol
stc
scas
xchg
cmp
les
shl
jle
pop
xchg
sbb
mov
xor
pop
ret
cs
rcr
ss
clc
aas
mov
mov
sub
fimul
ds
lods
jnp
inc
(bad)
nop
jecxz
(bad)
push
inc
sbb
jmp
into
fs
mov
ja
jmp
adc
mov
pop
mov
in
ret
xchg
inc
inc
pushf
in
iret
mov
leave
ss
jo
stos
sbb
fmul
cmps
aaa
cmp
add
psubusb
shl
mov
bound
jne
jne
call
test
rcr
add
lock
and
enter
mov
(bad)
mov
sbb
ret
and
popf
cwde
(bad)
pop
scas
pop
mov
(bad)
rol
out
lock
lods
mov
jmp
inc
mov
pop
xor
rcr
cmp
fcmovnu
mov
out
add
push
sub
xor
mov
push
(bad)
xchg
or
push
jge
and
mov
bound
mov
pop
or
inc
fsubp
sub
jb
arpl
and
test
test
mov
(bad)
call
fstp
ins
cs
mov
es
inc
lea
outs
dec
push
jecxz
repz
fnstenv
mov
sub
mov
xchg
hlt
(bad)
enter
xor
mov
(bad)
inc
pmaxub
out
push
sbb
or
lods
rcl
fimul
(bad)
retf
cmp
cwde
mov
jp
sub
daa
jae
out
mov
enter
(bad)
mov
pusha
movs
fimul
sbb
push
mov
dec
outs
cli
cmps
pop
cwde
push
xor
xor
and
inc
fdivr
lahf
inc
inc
mov
and
out
fimul
xchg
jns
stos
pop
jno
jne
pop
jge
ja
pop
push
loope
addr16
lock
pop
xchg
fld
test
push
pusha
dec
jne
sbb
retf
cli
imul
adc
sub
xor
mov
push
xchg
ja
mov
sub
pushf
in
aas
push
jbe
popa
movs
mov
xchg
cmp
gs
dec
mov
cmp
call
mov
pusha
dec
in
jb
mov
jecxz
movs
sbb
sbb
inc
icebp
mov
shr
mov
ror
jp
xchg
inc
fcomip
add
ds
xor
sbb
loope
push
fist
mov
imul
inc
jbe
addr16
lahf
leave
mov
push
les
loopne
sbb
jmp
(bad)
cmps
mov
pop
lds
aad
jecxz
enter
inc
loope
sub
loope
and
and
mov
pop
(bad)
(bad)
repnz
je
bound
and
clc
jae
in
aam
inc
cmp
outs
lahf
xchg
sub
aad
sub
in
xor
inc
add
fstp
pop
jmp
in
test
jno
xor
std
inc
xor
or
mov
push
sub
and
es
fcomp
mov
pop
sub
xchg
dec
and
sti
and
xchg
lods
mov
inc
aad
pusha
jmp
sub
je
adc
xchg
cs
sbb
scas
test
mov
sar
xor
and
fidivr
mov
inc
in
pushf
movs
mov
loop
test
mov
cmp
mov
sub
imul
cmp
into
adc
and
fstp
mov
dec
sub
aaa
bswap
aad
sbb
pop
fdivr
mov
xchg
xchg
call
adc
mov
pop
call
(bad)
xor
pusha
aad
imul
ss
lods
cmp
adc
add
jnp
xchg
ins
sbb
inc
dec
lock
in
sbb
clc
adc
(bad)
lahf
mov
shr
xor
push
add
fisttp
cwde
pop
shl
je
scas
daa
push
enter
addr16
add
xchg
in
sbb
push
hlt
cmps
clc
fwait
loope
in
or
mov
je
cdq
adc
mov
fld
test
dec
push
adc
fiadd
cs
sub
inc
aam
dec
data16
jb
frstor
je
(bad)
in
inc
jbe
arpl
jns
add
cmp
mov
add
add
je
sub
gs
xor
add
sbb
mov
in
inc
movs
push
add
call
stos
dec
rcr
xor
out
in
idiv
cmovb
mov
sbb
pop
lods
les
jnp
dec
inc
mov
test
mov
js
dec
fidiv
stos
mov
aas
mov
ins
mov
jg
inc
ds
add
fs
xchg
enter
dec
adc
les
jb
cmp
arpl
stos
sub
leave
adc
push
or
sub
and
repnz
loopne
movs
out
ret
pop
add
or
aas
jge
pop
(bad)
or
fsubr
popa
add
sub
mov
js
jmp
xchg
mov
push
cmp
pushf
mov
fdivp
call
les
jbe
rcl
and
out
fisubr
jno
mov
ret
repnz
pop
cmp
add
mov
daa
clc
out
cwde
les
dec
dec
gs
aaa
xor
lahf
mov
xchg
pop
sbb
sbb
fisub
es
out
enter
sbb
add
xchg
std
or
icebp
or
adc
or
(bad)
repz
into
call
xchg
test
push
mov
sbb
push
cs
in
shl
xchg
dec
sar
sti
and
cmps
pop
imul
adc
mov
push
mov
mov
mov
sar
dec
xchg
pop
xor
xor
stc
inc
add
mov
jae
mov
cmp
mov
ins
enter
sbb
xor
or
jecxz
add
sbb
push
adc
in
(bad)
pop
inc
jmp
shl
jl
sahf
loop
or
xchg
dec
ret
hlt
dec
loopne
int
int3
or
test
pop
mov
stos
mov
(bad)
add
lock
sub
aad
adc
sub
bound
ins
(bad)
out
push
popa
mov
mov
jae
imul
rcr
int
or
or
retf
lods
add
daa
xabort
repnz
loope
dec
add
and
push
inc
push
stos
add
mov
or
or
pop
and
out
push
mov
inc
clc
adc
jo
cmp
mov
sub
inc
xchg
and
pushf
mov
sti
mov
jbe
outs
pop
sub
push
push
imul
call
mov
call
inc
add
pop
mov
iret
call
jne
sti
imul
pop
push
fs
into
add
mov
aas
mov
sbb
aam
test
call
or
in
(bad)
mov
outs
inc
adc
icebp
retf
fs
sahf
test
(bad)
jae
int
addr16
pusha
retf
daa
hlt
ret
push
int
bound
add
aad
out
into
mov
in
outs
dec
(bad)
jl
nop
push
lds
mov
sbb
test
push
adc
xchg
shl
cmp
push
dec
jnp
adc
or
mov
sbb
in
push
mov
pop
xchg
repz
mov
jmp
cld
pop
ret
ja
pop
les
dec
imul
js
or
aad
sub
loope
outs
cli
cmp
sub
and
call
out
pop
sar
cs
ss
jnp
mov
sub
jl
adc
imul
xor
push
cmp
popa
aad
cwde
popa
adc
popa
outs
fs
jl
ins
loop
pop
fsubr
mov
cmc
pusha
dec
jbe
enter
mov
retf
mov
es
cmc
loopne
leave
ja
mov
add
mov
out
cmp
stos
jl
out
loope
fs
into
into
mov
adc
inc
stc
outs
popf
mov
add
jmp
add
into
dec
sub
call
std
in
xchg
in
xor
data16
cmps
cmps
ds
pop
fidivr
inc
ror
push
mov
sbb
fwait
loopne
pop
idiv
hlt
dec
loopne
sar
and
out
stc
mov
jns
mov
lds
popa
call
adc
ja
inc
je
lahf
or
cmp
sbb
jno
mov
cmps
repnz
xor
sub
adc
clc
push
jae
retf
and
popa
add
test
pop
adc
loop
xchg
movs
mov
xchg
neg
jns
test
outs
mov
xchg
jo
push
mov
faddp
pop
mov
in
mov
addr16
cli
fild
cld
push
fisttp
into
int
mov
mov
pusha
std
rcl
fcom
cs
pop
sbb
mov
outs
add
into
ror
aas
addr16
jmp
adc
jle
retf
mov
xor
push
repnz
loop
sbb
cmps
popa
push
push
and
sub
add
add
std
xor
lods
movs
jp
cli
or
bound
xor
or
or
(bad)
pushf
mov
mov
mov
mov
aam
sub
and
sub
pop
cdq
and
pushf
add
sub
cmps
mov
(bad)
mov
ss
fcomp
out
add
lock
std
or
cld
pop
popa
xchg
and
fstp
add
jp
scas
cmp
mov
movs
push
pop
sahf
int
mov
and
mov
cwde
jo
add
out
dec
data16
jb
push
lock
and
mov
out
shr
push
scas
dec
sbb
pop
data16
cmps
mov
jnp
leave
daa
lods
inc
movs
out
adc
test
sub
pushf
adc
or
lahf
retf
adc
jmp
ror
mov
jg
test
cwde
add
sbb
dec
jp
mov
jb
mov
dec
div
ret
test
imul
sub
cli
mov
out
test
sub
cmp
outs
inc
test
xor
repnz
adc
xor
xor
adc
add
addr16
mov
pop
fst
frstor
push
shl
sbb
fsub
dec
jp
lods
mov
inc
loopne
adc
jne
test
adc
cli
xor
into
cld
cmps
adc
mov
cli
aas
inc
cli
xchg
dec
int3
mov
mov
movs
mov
adc
les
int3
js
lds
xchg
shr
pop
sub
mov
das
inc
push
movs
and
std
and
or
clc
sbb
and
and
dec
bound
stos
push
ins
add
xor
inc
xchg
in
call
data16
sahf
pop
mov
cdq
fadd
ds
div
fwait
leave
inc
hlt
inc
pop
das
push
pop
stc
cdq
or
and
call
push
mov
ror
jp
pop
test
or
or
mov
ds
sbb
cmp
add
in
pop
aas
xchg
or
or
cmps
fstp
ins
test
inc
add
adc
xor
ja
ret
leave
(bad)
jo
inc
sub
jb
ds
retw
add
jmp
jmp
movs
icebp
mov
sub
les
hlt
outs
xchg
dec
loopne
adc
(bad)
xor
jbe
stc
jno
mov
mov
or
xor
in
push
xchg
mov
iret
jo
ins
xchg
div
(bad)
push
cwde
inc
dec
push
not
mov
push
not
in
mov
dec
arpl
ins
cli
outs
add
push
mov
add
in
test
hlt
jb
mov
aaa
push
inc
arpl
push
or
sbb
ret
add
sti
popa
sbb
punpcklbw
mov
das
pop
xchg
int
pop
popa
ins
addr16
pop
fwait
jmp
jecxz
outs
hlt
ret
xchg
inc
jnp
out
sbb
jnp
push
sahf
xchg
mov
aaa
repz
mov
in
xchg
cmps
les
inc
add
sbb
retf
gs
xor
aad
pop
or
loopne
add
je
div
push
dec
cmp
mov
fisub
gs
push
cli
pop
or
jmp
in
movs
fs
cdq
mov
enter
lea
(bad)
adc
into
movs
je
pop
neg
imul
hlt
lods
inc
shl
inc
add
inc
mov
aaa
jl
and
repnz
xor
cmps
jne
rcr
sahf
push
popf
xchg
dec
dec
jb
mov
mov
mov
jecxz
lea
jmp
ret
imul
dec
pop
movs
cmp
into
cmc
stos
imul
das
iret
mov
js
mov
cmp
sbb
sti
outs
loope
test
js
pop
(bad)
gs
or
sub
jne
xchg
out
ja
xchg
and
xchg
jbe
(bad)
jo
bnd
adc
jp
scas
xor
dec
lods
clc
and
gs
sub
pushf
out
fsubr
mov
mov
or
imul
sub
retf
mov
(bad)
int
push
sbb
in
sbb
por
xchg
mov
adc
jne
(bad)
pop
xchg
fwait
bound
sub
push
adc
or
mov
add
or
xor
das
ret
in
in
loop
push
mov
fwait
test
shl
daa
mov
mov
retf
cld
dec
dec
xchg
add
mov
pop
jbe
es
cmps
arpl
sti
jge
shl
int
and
in
aam
cmp
pop
jb
aad
gs
mov
add
push
xor
daa
fsub
mov
rol
push
pop
dec
(bad)
stos
jnp
cmps
(bad)
sbb
xchg
mov
scas
adc
jo
out
xchg
(bad)
loopne
mov
jmp
(bad)
test
mov
sbb
or
lds
ja
cmp
and
sub
lods
mov
imul
in
jns
adc
and
loopne
retf
push
loop
mov
sub
pop
clc
lds
mov
push
sbb
xchg
int3
cs
push
loopne
rol
mov
push
mov
mov
rcl
hlt
dec
jb
popa
cmp
add
mov
jmp
or
jns
add
mov
outs
dec
add
inc
push
pop
or
push
xor
cmp
or
mov
call
movaps
sbb
dec
setb
and
sbb
or
(bad)
in
sbb
sub
sbb
out
jo
aaa
and
mov
stos
inc
jbe
jecxz
adc
movs
cmp
xor
jl
xchg
or
sub
call
jae
xor
aaa
mov
or
inc
leave
mov
fisttp
(bad)
in
sub
das
dec
push
int3
pop
rcl
dec
cs
xchg
or
jmp
pop
jmp
out
pop
jno
out
push
xor
jo
lea
adc
out
sahf
aad
fisttp
push
xchg
fist
sahf
mov
icebp
cdq
leave
int3
pop
ficomp
or
jl
call
jb
jnp
add
jae
xor
jg
sbb
inc
sub
mov
cmps
les
je
(bad)
xchg
xchg
out
es
icebp
adc
lea
arpl
cmps
leave
xor
jle
test
std
stc
movzx
mov
cdq
aaa
dec
bound
and
movs
fwait
push
sti
rcl
push
sti
inc
clc
sbb
mov
fwait
pop
sahf
inc
xchg
in
imul
push
fs
dec
push
jp
jo
cmps
ss
push
ja
ja
jo
fcom
xor
lahf
mov
lahf
in
clc
adc
fild
call
mov
dec
pop
dec
mov
pop
retf
stos
inc
test
lea
and
fwait
sub
mov
icebp
cli
cmps
push
jae
rcr
out
sar
ficomp
(bad)
mov
pop
pop
call
lea
pop
clc
cmp
mov
pop
push
(bad)
rol
jle
mov
(bad)
xor
aaa
jg
ret
push
out
mov
adc
add
and
aad
or
leave
cmp
shr
cmp
aaa
push
pop
stc
ins
sbb
cmp
je
mov
cwde
add
lock
adc
cs
inc
rcl
sbb
cmps
addr16
cwde
shl
xchg
push
mov
repnz
pop
ss
and
pusha
retf
or
test
outs
sub
jmp
push
pusha
lods
and
cdq
sbb
test
dec
aam
icebp
xor
scas
into
mov
and
jle
inc
scas
inc
nop
pop
pop
push
ror
in
fnclex
cwde
sbb
in
cmp
push
pop
mov
fldenv
ds
mov
fcomp
dec
add
pusha
in
inc
jg
mov
clc
xor
loopne
mov
int3
sub
adc
test
adc
adc
push
jbe
cli
cli
push
mov
dec
dec
out
sub
adc
dec
repnz
stos
jb
sub
adc
mov
jae
aam
stc
add
pushf
fisttp
aad
dec
push
popf
ja
cmc
outs
out
stc
mov
fistp
fild
fadd
cdq
add
and
gs
inc
(bad)
or
test
mov
and
scas
dec
ins
mov
xor
sbb
or
stc
mov
or
enter
cld
sar
inc
cmps
dec
mov
addr16
sti
pop
in
fidiv
movs
jg
nop
js
bound
cld
arpl
hlt
mov
xchg
xchg
dec
push
clc
mov
jo
fldenv
mov
ds
stc
cmps
mov
cwde
out
sub
mov
add
hlt
mov
outs
or
mov
mov
mov
cmp
scas
dec
or
mov
xchg
jno
mov
jecxz
js
adc
js
and
inc
mov
dec
add
aaa
cdq
and
lods
xchg
or
in
neg
sbb
jo
leave
pop
mov
aad
repnz
popf
cs
cmp
pop
fwait
addr16
adc
sahf
cdq
push
enter
mov
push
push
and
call
or
mov
and
pop
or
pop
mov
push
jmp
mov
jne
add
bts
and
in
sub
popa
cwde
pushf
jp
xor
jle
(bad)
cli
xor
out
xchg
add
jae
sbb
iret
mov
mov
mov
clc
push
retf
mov
sub
leave
test
shr
out
call
arpl
aas
icebp
pop
ja
repz
call
inc
pop
ds
jbe
xlat
sub
add
dec
lods
icebp
xor
mov
in
movs
inc
jp
pop
xor
call
sub
daa
std
push
(bad)
test
jns
mov
in
push
ror
push
fcomp
imul
jno
xor
dec
pop
or
jmp
lods
jl
xchg
loope
lea
mov
lea
outs
dec
mov
pop
aaa
inc
stos
xor
fwait
sbb
jbe
(bad)
mov
icebp
sbb
adc
test
frstor
xchg
pop
repz
push
inc
jae
and
add
or
mov
adc
cmc
push
inc
iret
add
ds
into
in
xchg
inc
sbb
inc
ins
sbb
test
mov
lds
pop
jbe
pop
jmp
xchg
xor
or
xor
mov
dec
jl
cmp
jle
dec
ss
cmp
retf
(bad)
push
cs
ins
stos
loop
dec
data16
inc
pop
(bad)
dec
push
gs
fwait
add
sub
jno
inc
dec
add
sbb
mov
bound
clc
and
loope
mov
sub
xor
fist
mov
(bad)
xchg
dec
(bad)
push
jl
scas
mov
js
xchg
in
cmp
add
mov
pop
adc
retf
add
into
cli
jbe
push
cmp
stos
inc
dec
cld
mov
dec
mov
dec
inc
inc
in
sub
cli
aaa
cmp
sub
cmp
sahf
shl
pop
cld
mov
xor
cld
(bad)
jmp
daa
callw
inc
cmc
push
ins
mov
popa
mov
popa
call
mov
pop
cmc
jp
imul
icebp
fst
(bad)
mov
mov
xor
lods
inc
rcl
xor
push
xor
fs
loop
sti
push
dec
call
push
push
ret
fcmovb
mov
pop
and
aas
jo
push
aam
movs
leave
xchg
gs
iret
jmp
jle
and
cmp
mov
jbe
or
add
mov
lock
mov
add
ss
into
daa
pop
cmc
xchg
hlt
jge
(bad)
xchg
sub
push
addr16
xchg
inc
fild
adc
test
cmp
repz
mov
adc
inc
in
mov
in
push
sub
mov
test
mov
popa
loope
mov
push
pop
ins
pop
cld
jle
pop
push
push
arpl
dec
sahf
adc
push
test
and
pop
sar
sbb
jne
pop
ins
jno
jmp
sbb
and
sub
and
fwait
bound
push
nop
sti
inc
cwde
icebp
pop
jmp
gs
fdiv
mov
inc
ds
mov
fisubr
cmp
xchg
push
sub
mov
mov
(bad)
(bad)
in
or
loop
rol
dec
(bad)
jecxz
inc
sbb
sbb
pop
pop
loopne
cli
imul
cmps
stos
pop
adc
dec
dec
pusha
adc
dec
pop
jge
or
inc
addr16
sti
(bad)
jge
stc
xchg
shl
call
call
xchg
test
cmc
arpl
sub
inc
cmp
(bad)
cwde
scas
cmp
sub
addr16
sbb
xor
rsqrtps
inc
(bad)
dec
xor
cmc
xchg
nop
jle
sbb
shr
out
loop
mov
retf
or
mov
test
or
stos
cld
xchg
fmul
loop
xchg
sbb
dec
dec
movs
cmp
inc
(bad)
popf
iret
int3
push
ins
repz
scas
cmp
jle
mov
mov
jg
mov
into
sbb
loopne
xor
adc
stos
jge
shr
fdivr
repz
sti
or
xor
jp
cwde
pop
dec
xchg
jp
xchg
push
ret
dec
popf
adc
out
retf
(bad)
retf
xor
pushf
cmp
cli
mov
iret
aas
jae
mov
push
bound
mov
sub
and
jo
retf
mov
inc
out
jg
xor
jl
xor
bound
std
mov
loop
add
into
stos
stc
or
dec
jne
in
xor
and
mov
add
pushf
daa
push
pop
dec
xchg
(bad)
sbb
arpl
mov
cmp
push
fld
push
and
cmps
dec
sub
dec
shr
mov
rcr
adc
sbb
sub
sar
call
adc
add
stc
add
mov
mov
push
js
and
adc
push
mov
int
push
sbb
dec
daa
dec
outs
pop
dec
ds
sub
int
mov
adc
xor
push
pushf
xchg
stos
mov
mov
lods
ror
or
popf
xchg
and
scas
les
xchg
fs
ins
ins
inc
or
add
jno
or
mov
sbb
(bad)
movs
shl
pop
daa
sbb
xchg
(bad)
lahf
into
and
jnp
jmp
int3
sbb
xchg
push
std
adc
sbb
test
out
or
mov
mov
mov
push
inc
jo
repnz
imul
pop
push
sub
inc
push
(bad)
adc
push
scas
sbb
or
dec
pop
clc
jo
and
retf
sub
sub
sbb
sbb
cmp
les
movs
and
pop
outs
sti
jg
mov
mov
pop
ret
jp
push
mov
adc
inc
push
loope
jle
out
ins
xchg
xchg
push
ss
ret
mov
popa
add
out
mov
pop
outs
out
scas
sub
and
mov
jp
sub
cmps
pop
stos
or
addr16
pop
add
pop
jmp
out
inc
push
inc
outs
push
lods
(bad)
xchg
xchg
sbb
sub
adc
adc
scas
fisttp
imul
or
sub
jnp
and
icebp
add
pushf
xor
pusha
or
or
xchg
push
les
xchg
test
cmps
xchg
push
xchg
ret
cmp
sub
sbb
or
mov
clc
sbb
mov
std
cmp
ret
xchg
xor
jge
or
rcr
test
int
mov
jno
iret
sub
and
cmps
sbb
fdivr
bound
cmp
adc
loope
inc
popf
or
loop
xor
or
or
into
and
cmp
popa
in
mov
add
shr
es
scas
nop
push
test
out
shr
dec
cli
jnp
arpl
jl
mov
pusha
ds
sub
mov
mov
daa
inc
cld
adc
sbb
xchg
inc
dec
popf
bound
fsubr
mov
leave
pop
ror
xrelease
dec
stos
adc
imul
fidiv
jg
xchg
scas
and
retf
mov
js
push
xlat
mov
push
mov
cmp
cmp
test
mov
movs
iret
in
call
mov
push
les
inc
out
sbb
push
and
pop
lods
pop
jb
pop
lods
fs
outs
mov
lods
cmp
mov
in
sbb
es
xor
div
sbb
pop
movs
mov
mov
popf
adc
ror
rcl
movs
cmps
je
loope
inc
jg
out
push
dec
mov
pop
push
popf
mov
pop
test
cmc
cmp
mov
xchg
adc
inc
inc
shl
aad
sbb
pop
xor
idiv
enter
in
pop
pop
or
fidiv
jmp
std
mov
out
xor
imul
retf
enter
clc
mov
sar
pusha
push
pop
mov
xlat
(bad)
mov
jnp
mov
cmp
push
push
mov
inc
xor
fdivrp
sbb
xchg
sub
sub
cmps
jl
das
arpl
mov
push
xchg
call
fdiv
add
test
dec
int3
pop
mov
jl
xlat
(bad)
popa
xor
sub
fldenv
mov
jmp
(bad)
mov
imul
leave
jle
es
sbb
and
pop
dec
inc
and
or
and
fcmovbe
movs
xchg
ds
jl
pop
nop
sbb
mov
inc
mov
and
aaa
pop
sbb
mov
add
cmp
mov
leave
and
jb
xor
inc
sbb
adc
test
out
sbb
or
cwde
imul
pop
pushf
data16
jae
mov
and
nop
pushf
push
clc
inc
jecxz
sub
pop
mov
fnstsw
cmc
xor
xchg
cmp
and
mov
pop
(bad)
or
dec
add
mov
shl
hlt
not
inc
xor
out
out
loop
out
inc
cmp
sbb
pusha
xchg
ror
mov
add
test
mov
sbb
or
call
rcr
mov
sahf
push
sbb
repz
mov
(bad)
mov
loope
ss
jnp
jnp
and
mov
sahf
in
sub
and
mov
call
(bad)
jmp
or
cmp
rcl
add
popa
sbb
(bad)
shr
in
sbb
mov
jge
xor
pop
(bad)
push
mov
outs
fstp
repz
push
hlt
lods
(bad)
cli
jmp
(bad)
inc
mov
ret
xchg
movnti
and
cmp
int3
mov
cmps
xor
pop
loopne
jmp
push
mov
int
stos
inc
xchg
sahf
mov
daa
dec
int3
jae
(bad)
jns
aam
cmp
in
xchg
pop
push
mov
mov
pusha
fadd
adc
xchg
aam
push
xlat
loop
in
or
xor
jge
fcmovnbe
int
pusha
adc
xlat
(bad)
dec
cmp
mov
xor
pop
mov
stos
loop
add
mov
mov
mov
movs
fwait
adc
or
addr16
xlat
je
or
add
push
pop
ds
mov
pop
cmp
mov
lods
mov
fadd
repz
fnsave
dec
push
xlat
cmps
add
lea
out
jne
std
dec
jl
pusha
mov
cmp
mov
cli
stc
or
mov
xlat
push
cmc
in
das
cli
test
jns
sbb
mov
mov
test
and
ds
xchg
fcmovnu
stos
jns
lods
popa
call
inc
xchg
in
(bad)
movs
fwait
js
sahf
push
nop
xchg
xchg
mov
test
add
sti
scas
add
outs
fsubr
pushf
sub
add
fs
dec
inc
jmp
mov
cli
pop
enter
daa
(bad)
fdiv
in
xchg
xor
and
xor
inc
aaa
push
movs
jg
fist
xchg
and
pop
xchg
cmp
lea
neg
push
data16
jle
jno
int3
cld
int3
repz
add
shl
(bad)
out
push
push
out
lods
push
imul
mov
daa
fcom
mov
xor
jecxz
xchg
aaa
stos
cmps
leave
jnp
js
ret
dec
enter
mov
clc
jb
pop
js
dec
aas
fsubr
retf
repz
stos
cmp
cmps
arpl
lahf
retf
pop
jb
not
div
push
pop
repnz
iret
(bad)
fistp
push
std
loopne
mov
aas
mov
scas
or
fiadd
mov
xchg
or
xchg
icebp
cmp
sti
cld
das
cmp
and
push
jle
adc
jecxz
xor
(bad)
jmp
fstp
sbb
clc
push
adc
popa
movs
mov
int
iret
into
mov
fdiv
inc
add
(bad)
push
sub
jae
xchg
add
inc
mov
ins
inc
repz
rsm
cs
inc
int3
inc
adc
aas
std
xchg
jle
push
int3
mov
outs
and
retf
mov
jne
push
repnz
pusha
out
lods
dec
or
bound
cwde
pop
add
add
cmp
xchg
cmp
rcr
ficom
ss
cmp
(bad)
jmp
jmp
add
add
retf
je
jns
das
je
movs
push
xchg
movs
cmp
mov
adc
ror
inc
dec
pop
test
movs
cmp
pop
xor
mov
xor
or
pop
pushf
test
in
into
jge
lock
adc
retf
lock
xchg
lods
imul
dec
aas
pop
je
mov
mov
inc
(bad)
(bad)
cli
pop
frstor
cs
dec
aaa
imul
dec
clc
into
out
cmps
dec
lock
cmp
xor
and
mov
add
ret
pop
xchg
ds
cmp
xchg
sub
xlat
sub
or
out
js
add
xchg
fsub
jns
inc
popa
pop
and
cmc
outs
aam
mov
out
adc
iret
dec
cwde
xor
cmp
pop
jg
ret
push
clc
add
push
sbb
sub
aam
dec
mov
xchg
retf
ins
movs
jo
jecxz
ret
mov
cmp
lea
add
out
jbe
lods
jb
adc
mov
inc
cmp
inc
inc
mov
cwde
dec
das
loope
bound
shl
outs
jecxz
inc
sub
fdivr
in
mov
pop
and
inc
js
outs
aaa
into
lods
dec
and
arpl
movs
push
adc
clc
push
lods
dec
pcmpgtw
cmp
xchg
add
mov
xor
nop
outs
mov
xor
lds
xchg
mov
mov
sbb
cld
gs
or
xchg
out
xchg
xor
(bad)
ds
cli
adc
int3
adc
dec
xchg
add
or
push
loopne
xor
mov
push
xor
cli
mov
inc
test
inc
dec
pop
mov
fs
es
call
mov
xchg
lds
fiadd
mov
sub
sahf
push
(bad)
(bad)
lods
sub
ror
mov
dec
mov
loope
pusha
add
inc
sub
sbb
mov
mov
rcr
hlt
arpl
cmps
mov
iret
fwait
bound
dec
xchg
lods
sbb
and
into
cmps
mov
pop
iret
mov
mov
mov
jnp
das
push
std
cmp
add
and
mov
clc
inc
jle
inc
icebp
jmp
(bad)
mov
jp
adc
test
add
mov
mov
ins
mov
push
sbb
lock
dec
loopne
mov
inc
xchg
pop
daa
shl
or
aam
jge
add
and
xor
fmul
jmp
cmps
xor
jne
pusha
xchg
je
ds
scas
ds
(bad)
mov
add
stc
iret
loop
test
cmp
or
mov
xor
lock
ds
add
rol
jno
(bad)
hlt
mov
rcl
xchg
push
cdq
inc
pop
dec
arpl
(bad)
push
mov
stos
inc
push
mov
fs
adc
mov
or
and
and
(bad)
sbb
shl
loop
push
aaa
dec
(bad)
jg
repnz
lock
or
and
jae
push
dec
(bad)
or
inc
cmp
mov
repz
fdiv
mov
cmc
mov
or
xor
sbb
sbb
popf
lods
cmc
mov
add
stos
rcl
cmp
or
cmp
mov
sbb
retf
cmp
lahf
ficom
hlt
icebp
pushf
in
xchg
fnstsw
sub
ins
push
mov
pop
inc
int
loop
add
xchg
xchg
mov
pop
shl
jns
ja
adc
leave
mov
ja
aam
inc
push
addr16
jae
mov
sub
xor
lds
inc
cwde
ss
adc
pop
jp
imul
sub
aad
add
push
out
mov
xor
mov
arpl
sub
mov
loopne
ds
pushf
cmps
in
dec
pop
or
xchg
jbe
das
fst
mov
clc
mul
jb
inc
mov
(bad)
cmp
sub
ror
mov
pusha
push
test
mov
ret
jae
xor
popf
or
je
mov
into
es
daa
(bad)
out
xor
sub
push
dec
iret
rol
lea
scas
bound
scas
test
mov
out
or
pop
es
dec
lock
mov
loope
adc
ds
inc
mov
mov
sahf
pop
mov
sbb
cwde
mov
hlt
adc
ffree
cmp
out
fild
loop
popa
(bad)
push
fdiv
jle
call
push
inc
pop
pop
daa
out
lods
retf
mov
in
ror
cdq
rcr
cmp
enter
jns
pushf
mov
rcl
cdq
jns
repz
xor
cs
into
daa
mov
movs
add
push
or
ins
mov
fdivr
nop
test
js
push
mov
loopne
jnp
push
mov
adc
lods
cwde
mov
jmp
dec
cld
fistp
jae
ds
lahf
sar
das
pop
sbb
sahf
ins
das
xchg
xchg
ret
rol
or
adc
mov
or
mov
xchg
dec
mov
sbb
daa
xchg
ret
cmp
xchg
js
sahf
call
or
sbb
inc
out
popf
jno
dec
inc
sub
mov
iret
addr16
and
inc
(bad)
or
mov
fisttp
mov
(bad)
mov
fldcw
clc
ret
sub
jp
jge
dec
hlt
(bad)
fcmovnu
cmp
lods
mov
sbb
pop
rcr
push
and
(bad)
or
dec
mov
add
inc
repz
lds
sbb
sub
iret
jmp
imul
pushf
dec
push
sahf
enter
mov
ret
adc
inc
nop
cmp
mov
cdq
gs
mov
adc
es
dec
leave
mov
mov
movs
xchg
sbb
retf
and
mov
sub
dec
and
imul
popf
stos
cwde
lods
xor
popa
in
fsub
loopne
mov
mov
gs
or
or
xchg
add
push
dec
mov
sti
xchg
mov
jl
test
shl
cmp
(bad)
jmp
mov
fisubr
cmp
mov
movs
repz
sti
arpl
xor
xchg
xchg
ins
pusha
pop
sar
jne
xor
sub
mov
or
clc
jns
mov
lods
jbe
push
test
outs
sub
push
push
iret
inc
jne
ret
jno
push
jecxz
dec
push
leave
xchg
inc
add
pop
sub
jg
sbb
push
dec
sahf
out
jno
add
jbe
out
fdivr
mov
sar
cmc
cmp
lahf
sub
inc
cmp
cmp
sbb
adc
mov
pop
xchg
mov
das
jns
mov
and
push
xor
loop
sub
cmp
pusha
pop
das
in
retf
test
mov
(bad)
mov
mov
add
out
xor
stos
inc
push
icebp
addr16
(bad)
push
outs
adc
cmp
jb
and
gs
inc
loopne
push
sub
and
and
ficom
adc
fsub
xchg
xor
inc
fcmove
je
add
add
push
adc
mov
mov
add
fwait
bound
fwait
mov
xchg
ds
loop
std
sahf
pop
adc
lods
int3
dec
rcl
fisttp
or
xchg
mov
ins
into
outs
or
adc
adc
mov
sub
fsub
and
jle
inc
inc
jge
adc
xchg
fist
popf
mov
mov
add
jge
gs
pop
ror
jmp
ficom
xchg
int3
mov
fwait
shl
mov
cmps
dec
loope
jmp
mov
mov
imul
cdq
inc
mov
imul
push
dec
js
iret
rol
movs
xor
jecxz
std
jno
or
or
push
xchg
cdq
or
js
pop
and
das
inc
jns
jp
xor
pop
fbld
scas
loope
pop
imul
loopne
mov
(bad)
dec
pusha
loop
xor
cs
dec
dec
xchg
pop
cli
cmps
xor
xchg
and
fild
inc
rcr
jecxz
stos
std
pop
popf
fdiv
push
ja
lods
xor
mov
enter
xor
sub
or
add
retf
ins
rcl
leave
push
push
adc
push
pop
mov
rcl
rcl
adc
inc
loopne
push
xor
pop
inc
pop
inc
pop
or
fimul
inc
lods
iret
jno
xchg
test
pop
fstp
push
ins
add
cld
sub
add
jno
jo
scas
sbb
xchg
adc
add
mov
sbb
fstp
jle
cmps
fwait
idiv
inc
test
popf
popf
scas
dec
sbb
pop
cmp
repnz
jmp
add
retf
inc
inc
shl
repz
dec
test
xchg
ins
push
add
leave
xor
dec
and
mov
shr
stc
fistp
sub
inc
mov
lock
iret
sbb
and
(bad)
push
mov
enter
dec
and
mov
push
test
and
and
push
adc
xchg
add
inc
mov
jle
(bad)
les
cmc
adc
sub
outs
mov
cmp
data16
lahf
or
fidiv
cmp
xchg
or
adc
test
pop
aad
add
mov
xchg
pushaw
mov
mov
fbstp
cli
pop
call
or
xchg
shl
test
jo
cdq
les
or
aas
test
fs
cld
or
add
cmp
cmp
sbb
imul
jns
test
cmp
pushf
or
lock
aas
mov
cmp
hlt
cs
shl
sub
jle
xchg
mov
rol
repz
pop
popf
dec
idiv
inc
pop
test
sbb
pop
test
cli
push
xor
xor
mov
mov
daa
jmp
push
xor
inc
sti
sbb
mov
fs
scas
pusha
ja
(bad)
mov
xor
add
and
jbe
nop
xor
push
push
stos
addr16
daa
pop
cdq
ret
mov
sub
xlat
sbb
mov
lds
pop
inc
adc
fdivr
mov
pop
mov
repz
sub
jp
rcr
add
fwait
push
and
repz
pop
in
pushf
imul
cwde
cmps
sub
or
lods
fxch
ds
mov
mov
popf
mov
sub
addr16
add
sub
pop
mov
ror
jmp
imul
jl
loope
jl
pop
(bad)
movs
les
mov
mov
cmp
out
push
imul
data16
push
jbe
(bad)
fidiv
push
out
mov
or
loopne
xchg
pop
adc
fdivr
or
bound
in
fisttp
lea
mov
repnz
repnz
mov
into
aas
cmp
cli
push
adc
add
mov
pop
nop
sub
push
push
jnp
(bad)
clc
fldcw
out
push
int3
mov
jns
dec
and
sbb
bound
(bad)
nop
cmps
cmp
xor
call
into
jl
xchg
test
mov
cld
cmp
and
xchg
ins
xor
das
cld
jp
or
das
xchg
jno
cs
scas
cmp
mov
or
(bad)
movs
xchg
ins
cli
jne
mov
jo
sbb
test
pop
cmp
xchg
ret
or
cmp
adc
xor
fst
mov
and
shr
call
xlat
pop
aas
lock
inc
jno
loope
(bad)
in
outs
push
mov
pop
cli
sti
jnp
xor
mov
add
cmc
xor
(bad)
data16
or
sub
lea
add
fnstcw
enter
push
mov
adc
les
fmul
push
(bad)
aad
xchg
jnp
or
cdq
inc
ins
mov
and
mov
leave
mov
ret
cmc
pop
fldcw
mov
push
andps
hlt
outs
add
or
sar
and
cmp
popa
xchg
inc
xor
mov
into
das
clc
dec
push
(bad)
out
or
xor
jns
ins
pop
pop
mov
je
sti
aas
jg
(bad)
imul
(bad)
loope
sub
dec
mov
adc
in
call
jne
mov
dec
jnp
je
repnz
jmp
movs
(bad)
cwde
(bad)
and
pop
fisub
jp
xchg
jbe
cmc
sbb
sub
dec
sub
pop
sbb
or
add
jnp
and
add
xor
lock
mov
fnstsw
xchg
adc
adc
add
rcl
in
dec
fld
je
and
push
js
jg
mov
shl
mov
cmp
jl
fldlg2
jmp
retf
int
sbb
jnp
in
inc
loop
fs
lock
mov
and
dec
pop
jecxz
loop
sbb
xchg
pop
and
inc
test
test
movs
push
repz
test
adc
mov
mov
pop
cmp
lock
sub
loop
lahf
jae
(bad)
arpl
shl
push
aaa
push
cmps
mov
sar
and
jg
inc
push
data16
clc
push
and
cld
and
enter
loope
les
cmp
(bad)
iret
xor
jp
into
in
shl
neg
add
test
fld
rcl
mov
sub
cmp
sbb
aaa
in
out
inc
add
pop
push
xchg
push
int3
lods
push
sbb
ss
cmp
xor
mov
pop
dec
pop
ret
outs
(bad)
pop
push
loop
cmps
adc
jnp
sbb
cvtdq2ps
and
mov
mov
retf
pop
xchg
sub
sbb
and
in
dec
push
aas
inc
or
aaa
std
xchg
ja
dec
std
test
xchg
cmp
out
fs
test
adc
sahf
mov
stos
js
mov
push
push
xor
or
inc
jno
inc
mov
loope
sbb
mov
rcl
out
(bad)
cld
call
test
mov
inc
dec
jnp
loope
inc
lahf
xchg
xchg
adc
ds
dec
dec
sub
sub
imul
sahf
inc
push
in
arpl
popf
retf
sub
inc
imul
std
sub
xlat
stc
inc
push
jmp
inc
cmc
outs
ret
sub
outs
sbb
addr16
lods
xor
push
mov
cmp
rol
cdq
lea
sub
push
sbb
addr16
or
push
jmp
and
scas
or
jnp
ins
pop
(bad)
in
jo
xor
in
mov
xchg
js
or
xchg
xlat
out
lds
mov
lahf
dec
inc
pop
call
ror
mov
bound
jg
mov
inc
jecxz
aas
mov
enterw
shr
(bad)
sub
push
cmp
xor
sbb
data16
out
int
xchg
imul
jmp
xor
or
sbb
cmp
out
out
or
dec
mov
jne
mov
ret
es
int
dec
sbb
jge
gs
jle
dec
pop
dec
pop
inc
push
mov
divps
(bad)
into
pop
rol
ja
test
jge
mov
rol
int3
cmps
pmaxsw
push
xchg
out
mov
(bad)
outs
jb
fild
cmc
js
sti
push
mov
xor
and
ret
xchg
push
and
lahf
nop
fld
jecxz
mov
pop
or
xchg
mov
hlt
ret
xchg
mov
pop
push
cdq
cmp
adc
fsubr
push
test
mov
or
adc
mov
add
jp
mov
(bad)
mov
ret
(bad)
push
mov
pop
jae
jl
cld
dec
test
add
mov
pop
stos
add
or
dec
js
adc
cmps
xlat
cmc
lods
aad
xchg
cdq
dec
lea
aas
or
les
push
adc
(bad)
dec
pop
xchg
lock
(bad)
xor
mov
fwait
sbb
jb
xchg
pop
xchg
inc
cs
inc
adc
test
pushf
iret
(bad)
pop
add
cmp
add
mov
xor
out
dec
sar
pop
outs
ja
add
jmp
mov
out
xor
jmp
jle
call
pop
wrmsr
pop
loope
jle
mov
inc
cmp
bound
jl
and
push
xchg
popf
cld
or
sbb
lock
fwait
add
arpl
mov
sub
cmp
adc
popa
popa
or
mov
pop
push
pop
push
or
jno
test
inc
es
mov
pop
fbstp
in
or
jnp
inc
ja
adc
or
mov
dec
arpl
sub
jb
out
or
lods
fisub
xor
in
jle
and
or
xchg
aas
xor
cmp
cmps
test
repz
xor
xlat
jnp
(bad)
idiv
adc
pop
scas
jno
sub
sar
push
xor
jl
jns
daa
fiadd
and
les
mov
xor
mov
ficomp
call
adc
push
sub
mov
repnz
jl
pop
stos
(bad)
push
aad
xlat
dec
mov
adc
stc
jle
or
or
and
mov
popf
test
mov
dec
and
or
or
test
pop
outs
jno
inc
push
push
xor
mov
enter
cwde
mov
sub
ins
mov
dec
retf
fxch
mov
xor
mov
xchg
movs
adc
movs
push
dec
lea
xchg
out
push
xor
push
rcr
out
cdq
icebp
and
nop
shl
lds
sbb
in
mov
jmp
dec
sub
cmp
jne
sti
fadd
shl
push
add
rol
retf
cmc
fwait
pop
jb
cwde
dec
jmp
mov
loop
mov
loopne
xchg
cdq
and
xor
movs
shr
leave
cmp
push
push
push
cdq
xor
pop
or
(bad)
pop
sbb
push
cmp
sub
pop
xchg
pop
push
int3
inc
dec
imul
inc
and
loop
stc
add
call
repnz
sbb
dec
dec
or
adc
dec
adc
cmp
pop
sbb
jecxz
push
jge
sbb
js
stos
adc
shl
movs
xchg
mov
retf
cmovl
movs
fidivr
popa
cmp
and
dec
imul
dec
cmc
outs
push
ret
pop
popa
bound
fild
jg
xor
sbb
jmp
mov
add
xchg
imul
jae
push
ins
adc
sbb
or
in
imul
pushf
inc
cmp
push
lods
bound
jmp
push
hlt
cmp
ret
push
and
movs
mov
jo
fstp
popf
inc
idiv
addr16
jmp
sbb
push
movs
sub
adc
pop
out
stos
fs
std
jmp
jg
push
bound
push
add
test
pop
mov
bound
dec
and
or
std
std
imul
jge
xchg
jno
jnp
ds
add
test
mov
jno
mov
xchg
pop
jns
and
dec
aaa
aaa
push
lods
in
imul
rcl
pop
mov
iret
inc
adc
jns
mov
inc
jmp
or
call
and
pushw
aad
mov
out
mov
sub
lods
cmp
daa
adc
paddw
sub
into
cmp
clc
jns
ins
std
push
fbstp
test
fdivr
dec
(bad)
ss
inc
jns
in
call
pop
cmp
push
int3
(bad)
sbb
lahf
cs
(bad)
retf
adc
imul
retf
(bad)
mov
inc
(bad)
mov
pop
fwait
popa
test
inc
and
bound
movs
je
xchg
out
loopne
imul
inc
sub
sbb
stc
in
loope
popf
pop
movs
jg
ret
xchg
shl
movhps
inc
dec
jmp
loope
leave
ins
add
push
ret
mov
ret
in
mov
add
xor
data16
ins
mov
sbb
ror
pop
xchg
cwde
pop
cs
dec
cdq
loopne
push
jbe
fs
fsubr
je
jmp
pusha
jmp
jmp
xor
adc
push
js
sub
fsubr
loope
xchg
ret
dec
rep
out
jecxz
ret
adc
cmp
adc
mov
jp
xchg
add
mov
adc
mov
mov
das
clc
dec
xchg
pop
jge
push
in
xchg
sub
call
adc
push
lea
fsub
pop
cmp
sbb
and
es
mov
mov
pop
cmp
mov
in
jns
jmp
call
mov
fs
test
clc
push
xchg
push
ficom
add
in
les
cli
mov
fcomip
fcomip
pusha
into
add
inc
test
aas
dec
icebp
or
ins
pop
out
test
sub
fidivr
fnstsw
xchg
and
push
dec
mov
sub
(bad)
mov
sahf
push
push
ret
pop
push
repnz
test
imul
or
test
sar
inc
mov
sub
adc
inc
stos
(bad)
pop
xchg
dec
ret
idiv
add
and
mov
bound
icebp
and
add
mov
mov
add
inc
mov
adc
aad
test
jb
xchg
les
cmp
lods
pop
repnz
stos
cmc
fisttp
mov
push
dec
pusha
xchg
fwait
mov
xchg
mov
cmp
and
je
adc
shr
lods
iret
or
xchg
adc
dec
mul
xor
bound
out
sub
push
sbb
sbb
das
imul
inc
xchg
xor
ss
or
xchg
jmp
mov
push
mov
xchg
mov
daa
pop
xor
sbb
xor
imul
cmps
mov
dec
int3
and
idiv
hlt
pushf
xchg
sbb
daa
retf
retf
rcpps
adc
in
cmp
and
mov
sbb
call
scas
inc
or
push
test
in
push
sub
mov
push
lock
ins
add
mov
add
adc
loopne
retf
iret
pop
xor
jmp
cmps
and
jno
test
daa
jbe
leave
cdq
out
cmp
loop
mov
jnp
lods
loope
mov
iret
pop
lods
pop
pop
pop
dec
int3
into
fs
sbb
lahf
sbb
pop
nop
cmp
pop
xchg
or
cmp
jbe
add
mov
(bad)
cdq
xchg
mov
sub
xchg
popf
in
inc
test
sbb
adc
and
adc
popa
push
test
push
scas
lock
loop
loopne
je
mov
ja
hlt
xchg
imul
(bad)
pop
cmp
ins
inc
jecxz
jno
mov
and
mov
jb
(bad)
xor
popf
into
int3
xchg
jmp
push
mov
sbb
dec
jp
bound
mov
jecxz
adc
(bad)
stos
jmp
mov
repnz
ret
je
fcmove
jg
cmps
inc
nop
xor
dec
ins
cmp
mov
es
ror
mov
cli
jmp
xchg
mov
cwde
xor
(bad)
and
pop
add
dec
mov
add
sub
xchg
sbb
lds
or
sub
int3
in
test
push
add
sbb
test
add
mov
enter
mov
pop
cmp
(bad)
xchg
xor
ds
in
popf
retf
adc
adc
test
cmp
loope
jp
test
lock
push
iret
jae
clc
mov
sahf
in
push
cmc
and
pop
xchg
xchg
pop
pushf
pop
gs
lea
sub
sub
lock
mov
loope
pop
cmps
bound
imul
mov
jge
dec
xchg
sahf
adc
xchg
leave
cwde
ffree
mov
push
or
xor
daa
cli
fsub
dec
repz
ror
fs
aas
stc
sbb
xor
leave
dec
test
mov
enter
xchg
aaa
mov
add
push
daa
test
hlt
jmp
fst
ss
xchg
pop
sbb
scas
imul
imul
xor
pop
cli
inc
jle
(bad)
xchg
sbb
sbb
cmp
jmp
pop
inc
mov
jne
mov
mov
push
dec
and
sbb
call
mov
pop
add
adc
xchg
retf
mov
in
xchg
loopne
or
hlt
sar
sbb
push
stos
jg
xchg
and
or
repz
add
cli
movs
(bad)
arpl
mov
fstp
fld
add
icebp
push
pop
push
repz
mov
fstp
xchg
cmps
imul
mov
shl
push
xchg
imul
jmp
je
jo
mov
dec
jmp
in
pushf
add
scas
(bad)
scas
ret
ret
sahf
xchg
aas
das
or
test
sahf
mul
adc
pop
cmp
inc
outs
xchg
test
mov
mov
push
ret
stc
mov
dec
in
mov
adc
std
xchg
jecxz
cmps
outs
inc
lahf
cmp
adc
fwait
push
mov
sub
arpl
or
ss
ret
cmp
and
(bad)
jmp
shl
shr
les
pusha
jge
repnz
inc
or
mov
popa
arpl
add
xor
push
mov
cld
leave
(bad)
bound
xor
pop
call
push
les
mov
aad
arpl
stos
sub
mov
scas
repz
and
mov
push
rcl
push
or
clc
shr
aas
mov
pop
jbe
pop
lea
sahf
adc
sub
ret
mov
sub
inc
ds
addr16
mov
es
mov
add
aaa
call
mov
imul
(bad)
neg
loop
js
mov
aaa
cld
div
pop
idiv
jae
mov
adc
loopne
mov
mov
lods
int3
xor
sub
mov
dec
imul
mov
adc
call
stos
lahf
jmp
call
xor
scas
sbb
cmp
jne
retf
mov
jmp
inc
cmp
xor
push
call
mov
cmps
cwde
cmp
and
push
push
sub
xchg
pop
xor
mov
push
pushw
push
enter
and
mov
clc
movs
jmp
add
test
call
xchg
ins
xchg
aad
dec
(bad)
sbb
jno
jmp
mov
mov
ret
xchg
jnp
dec
(bad)
and
jns
xchg
movs
push
pop
daa
pop
sbb
cmp
mov
add
mov
popf
xchg
mov
inc
jmp
and
mov
sbb
bound
retf
jmp
lods
aaa
outs
das
jmp
mov
ss
icebp
lods
fdivr
scas
xchg
cmp
out
bound
fwait
jno
add
and
xor
rcl
or
retf
imul
fistp
lea
inc
push
pushf
push
pusha
dec
adc
sbb
call
pop
cmps
jge
jns
xor
js
add
in
mov
cmp
add
loopne
sub
jb
jge
cmps
lea
cld
push
test
retf
pop
mov
xor
enter
aam
jae
loope
scas
mov
fisubr
sahf
push
inc
mov
pop
cmp
stc
jae
or
pusha
dec
xor
aam
cdq
sbb
sar
sub
or
js
mov
xor
xor
call
xchg
push
scas
adc
adc
xor
push
fisubr
loop
xchg
mov
dec
mov
mov
aam
jb
popf
push
stc
sbb
(bad)
push
dec
icebp
mov
ret
dec
mov
fild
cmp
in
mov
cmp
mov
inc
push
pop
add
cmp
aad
xchg
(bad)
outs
sub
push
retf
repz
daa
int3
inc
xor
aad
aam
xchg
fisubr
inc
jne
xchg
or
setbe
arpl
repnz
sub
retf
sbb
rcr
push
mov
in
(bad)
push
mov
inc
popf
and
dec
cmps
int3
or
sar
or
shl
hlt
mov
mov
pop
jge
xor
(bad)
sbb
push
mov
fldcw
jae
dec
push
cmp
mov
push
imul
cmps
xor
shl
jae
push
cmp
ficomp
scas
dec
add
jno
in
xchg
les
jge
sti
push
or
das
out
bound
hlt
xor
pop
mov
push
retf
mov
or
out
push
xor
xor
pusha
cs
loop
icebp
imul
lea
inc
outs
dec
inc
lds
add
or
dec
xor
nop
in
pop
cdq
out
mov
mov
xchg
neg
cmp
jne
push
jo
leave
cmp
mov
and
cmp
ret
push
inc
aaa
out
ret
pop
leave
adc
loopne
not
adc
out
(bad)
push
mov
mov
jnp
cli
add
add
les
push
fldcw
pop
aas
mov
popf
add
cmp
outs
std
retf
loope
je
pop
dec
hlt
sub
sub
addr16
pop
jmp
pop
inc
jb
sub
arpl
(bad)
pusha
add
push
das
push
jae
ss
into
test
jmp
sub
dec
cli
mov
push
push
xor
pop
xchg
js
inc
outs
dec
lods
sbb
inc
pop
pop
xchg
outs
(bad)
fucomip
sti
fisub
sti
aas
sub
rcl
add
xchg
cld
mov
add
jae
leave
lock
cmps
cld
jge
nop
xor
or
addr16
out
fwait
(bad)
jns
lods
cmp
(bad)
in
add
dec
add
aad
mov
dec
jnp
loope
mov
dec
inc
mov
push
sub
mov
das
push
cmp
test
xchg
dec
xlat
pop
push
imul
mov
cs
push
sub
iret
dec
sar
push
sti
mov
ret
out
ret
in
(bad)
jge
add
ficomp
jecxz
and
mov
or
scas
pop
and
rcr
mov
adc
movs
cmp
sahf
push
mov
clc
adc
fist
or
inc
aad
or
push
mov
jae
movntps
push
je
outs
(bad)
test
sub
test
inc
cmp
test
and
fmul
xor
dec
adc
rcr
xchg
cmc
mov
push
(bad)
xchg
sub
mov
in
push
popa
iret
out
cmp
data16
xchg
jl
mov
mov
das
fucomi
aam
retf
ins
mov
rcl
test
cmp
hlt
aad
movs
call
push
xor
push
add
scas
test
dec
xor
aaa
mov
lods
pop
es
dec
jbe
fild
scas
xlat
leave
pop
pop
xchg
shr
push
out
ss
mov
fmul
jnp
into
add
jno
inc
add
xor
sub
jmp
inc
mov
out
xor
inc
call
mov
test
mov
leave
mov
out
sbb
fmul
push
pop
mov
movs
ret
mov
inc
movs
in
imul
stos
jns
in
cli
inc
sbb
int
mov
cmps
cli
pop
mov
jmp
mov
xchg
in
adc
pop
pop
pop
sub
cmp
std
jae
lea
and
cli
ins
pop
rcl
neg
cld
fnstenv
js
pop
jne
xchg
mov
xor
jp
xor
and
repnz
mov
adc
mov
fsubrp
push
in
or
test
cmc
or
xor
fwait
or
pop
jmp
xchg
mov
sbb
rcl
pop
push
adc
jns
rcl
mov
mov
rcl
mov
mov
int
ss
pop
dec
adc
adc
or
outs
xchg
lods
rol
out
push
sbb
repnz
xchg
jb
xor
dec
jmp
jl
xlat
push
adc
call
cld
call
cmp
test
mov
sbb
push
mov
out
dec
data16
xor
ret
jp
xchg
retf
adc
ins
repz
ss
cmc
mov
and
je
add
adc
inc
or
cmp
(bad)
push
shl
aaa
sbb
mov
cmp
jbe
jmp
mov
popa
sbb
cs
jae
jb
hlt
(bad)
(bad)
cmp
xchg
xchg
mov
mov
dec
and
mov
sahf
aad
inc
in
sbb
shr
lods
push
mov
scas
cdq
jne
jecxz
dec
dec
sbb
test
mov
cdq
aad
fiadd
add
fdivp
cmp
dec
lods
pop
addr16
std
pop
(bad)
xchg
or
addr16
adc
repz
xor
imul
mov
pop
int
dec
stc
jle
xor
pusha
jmp
out
out
clc
fst
sbb
(bad)
xchg
or
cmc
xchg
jl
cli
int
stc
leave
or
xchg
lock
jp
stc
lods
movs
ja
push
push
pushf
dec
sbb
cmp
xor
icebp
mov
jl
mov
fisub
cmp
out
retf
cmp
mov
cdq
jle
int
(bad)
cli
sbb
out
mov
shr
dec
xchg
cmp
pop
mov
xchg
aas
add
sbb
rcr
jb
out
das
inc
pop
sar
dec
dec
(bad)
add
inc
aad
mov
cmp
dec
(bad)
lds
loop
popf
mov
xlat
inc
ins
repz
ret
push
dec
push
cmp
ror
or
fidiv
mov
xchg
repnz
sbb
cmp
repnz
cmps
rcl
dec
jg
pop
mov
and
rcr
jp
clc
push
sar
imul
inc
lods
xchg
mov
shl
adc
or
popa
mov
pop
mov
push
call
mov
test
sti
cdq
pop
int
fcomp
jecxz
cmp
sub
cmc
push
test
sbb
pushf
ret
push
or
fidivr
mov
enter
mov
cmp
add
(bad)
enter
shl
jp
xor
(bad)
xor
pop
ja
ret
jo
push
mov
mov
mov
sbb
(bad)
mov
dec
adc
adc
inc
cmp
pop
jo
lock
sub
ret
xor
cwde
sbb
(bad)
inc
pusha
mov
sub
adc
popf
or
rol
in
aad
mov
inc
push
outs
in
xor
cmps
cmc
or
mov
pop
cli
xchg
jb
sbb
xchg
inc
adc
xchg
xchg
inc
pop
ror
aas
jg
lds
or
and
(bad)
sbb
adc
mov
push
jl
mov
lds
test
scas
nop
xor
and
stos
cmp
iret
addr16
cmps
mov
in
out
xor
inc
xor
mov
add
mov
shl
inc
fbld
push
cmc
or
inc
push
or
aas
mov
shr
ss
int
adc
xchg
fisub
mov
das
inc
ins
cld
rcl
push
retf
rcr
(bad)
mov
int
icebp
test
adc
cld
lahf
movs
jnp
das
popa
aad
(bad)
rcl
and
stos
push
sbb
lods
hlt
int
addr16
cli
mov
fld
dec
scas
out
out
adc
pop
frstor
std
fld
(bad)
in
mov
sub
pop
ror
cmps
loopne
inc
fiadd
mov
mov
jb
in
or
jno
push
dec
adc
xor
mov
les
push
aas
jmp
push
(bad)
jns
cmp
dec
jbe
or
mov
and
xor
add
movsx
mov
inc
dec
mov
sar
add
(bad)
dec
mov
js
adc
test
pop
push
es
rcl
cmp
outs
pandn
cmp
arpl
pop
(bad)
out
or
pop
adc
aaa
cmp
add
popf
or
out
pop
adc
test
mov
or
push
sbb
mov
shl
aas
aas
xor
movs
adc
out
pushf
pop
stc
adc
mov
sub
pop
xchg
rcl
(bad)
xchg
jecxz
icebp
sahf
ret
dec
mov
imul
in
xchg
add
sbb
cmp
stos
pop
(bad)
gs
xchg
in
ret
ror
jmp
sub
stc
pop
add
ja
mov
jnp
jne
cmp
nop
mov
mov
inc
mov
xchg
mov
and
push
inc
test
(bad)
dec
jecxz
xchg
sbb
repnz
(bad)
xlat
sub
inc
push
in
xor
je
jmp
adc
pop
inc
bound
lds
scas
cdq
adc
mov
outs
ds
mov
cmp
sahf
mov
call
(bad)
fs
inc
or
mov
sub
test
dec
push
push
test
xlat
or
mov
sbb
fst
fxtract
push
fwait
es
inc
mov
fcmovbe
jno
loope
or
call
bound
cmp
stc
call
mov
add
(bad)
or
xchg
jmp
cld
in
mov
(bad)
call
push
adc
call
jp
jle
ficom
push
xchg
int
adc
mov
mov
cmp
add
push
scas
push
sbb
iret
js
es
sbb
and
mov
cmc
sahf
test
repz
fild
or
mov
adc
jb
push
leave
adc
or
xchg
repnz
mov
xor
sbb
inc
xor
std
dec
cmp
adc
or
ficomp
push
lds
dec
or
fidivr
or
aas
icebp
inc
adc
mov
xchg
jo
push
or
pusha
test
fwait
mov
adc
add
retf
mov
movs
push
dec
scas
stc
or
popa
push
xchg
pop
pop
cld
lods
sbb
pminub
inc
xchg
xchg
mov
pop
xchg
add
sbb
and
mov
in
push
rcl
mov
add
call
out
mov
cwde
mov
in
xchg
mov
jns
jns
stos
in
nop
xor
and
or
xor
jae
(bad)
mov
in
daa
add
inc
cwde
adc
out
mov
xchg
mov
and
adc
cmp
loope
sub
push
jecxz
pop
mov
les
xor
(bad)
xor
rcl
mov
jo
mov
shr
mov
xlat
cmps
scas
pop
das
outs
sbb
imul
pop
daa
arpl
mov
movs
imul
or
les
cmps
xor
icebp
sbb
sub
dec
push
xchg
inc
pusha
inc
fiadd
and
push
pop
loopne
adc
xchg
shr
lock
data16
inc
jns
or
sbb
loopne
in
mov
std
sbb
add
outs
imul
mov
inc
rol
mov
jl
mov
and
pop
jae
sbb
jb
push
pop
mov
es
cmp
aas
push
sbb
shl
cmp
sbb
stos
add
pushf
test
push
in
aam
cli
add
push
(bad)
cli
mov
shld
inc
pop
sbb
mov
idiv
rcr
cmp
or
pop
jmp
dec
jmp
retf
add
fstp
mov
in
addr16
fwait
stos
movs
daa
mov
xchg
sbb
jmp
out
jmp
mov
mov
sbb
mov
aas
mov
xchg
add
test
jecxz
mov
pop
xor
test
scas
outs
cmps
pop
cmp
sti
stc
rol
lea
lea
sti
dec
stos
stos
lods
jne
inc
pop
mov
xchg
pop
add
arpl
pushf
pushf
sub
xor
jle
jbe
dec
imul
ins
push
in
sbb
add
nop
jg
dec
movs
sahf
mov
cli
dec
sub
in
scas
popf
pop
adc
pop
retf
xor
xor
xor
call
sar
cdq
in
retf
adc
in
sti
(bad)
dec
sub
pop
les
repz
dec
lds
fnstsw
push
cmp
js
mov
ret
adc
pop
repnz
stos
test
sahf
push
pcmpeqb
test
scas
inc
push
in
jmp
mov
imul
test
test
and
xchg
and
fwait
int
icebp
(bad)
and
fdiv
push
jmp
push
das
cmps
lock
and
xchg
inc
and
dec
mov
rcl
add
xchg
mov
mov
fldenv
jle
test
aad
cs
inc
es
xchg
cli
pop
nop
scas
push
and
fs
std
mov
xor
lods
dec
push
lods
inc
jge
or
adc
jp
inc
mov
mov
cmp
push
js
mov
out
lds
ins
add
jmp
xlat
push
mov
add
sbb
ss
ins
adc
inc
lea
mov
jnp
gs
add
shr
fsubr
aam
loop
in
fwait
shr
maxps
sahf
push
cmp
add
shr
adc
js
(bad)
clc
stos
(bad)
xchg
lods
mov
rcr
cmp
sub
js
pop
test
cmp
mov
(bad)
daa
sub
sub
dec
icebp
jg
sbb
stos
sub
sbb
and
push
jnp
cmp
sub
mov
stc
out
cmp
push
mov
pop
jge
mov
out
rcr
cdq
data16
mov
fs
mov
les
stc
or
xor
dec
out
jnp
daa
push
addr16
in
add
push
fs
xchg
and
mov
(bad)
aaa
rol
loopne
pusha
adc
call
pusha
(bad)
push
mov
mov
push
inc
std
pop
cwde
retf
sub
mov
arpl
xchg
cmp
pop
addr16
jl
mov
jl
cmp
mov
and
jg
loope
lods
daa
sbb
imul
mov
jmp
add
jno
enter
jo
stos
sbb
cmp
loopne
jmp
inc
push
adc
sbb
xor
cmp
dec
test
dec
xor
xchg
(bad)
sbb
das
jnp
or
push
ins
gs
lods
in
out
icebp
dec
rcr
fisubr
xor
mov
fs
xchg
sahf
dec
jmp
mov
fimul
cmp
rcr
jbe
sub
inc
in
jnp
dec
and
jmp
sbb
jno
mov
stc
aaa
fstp
in
push
sbb
push
(bad)
iret
je
out
pushf
sbb
sti
pushf
pop
jo
xor
adc
cmps
ret
xchg
std
ins
pop
je
push
and
mov
add
sub
aad
shr
jns
outs
fisttp
mov
xor
dec
cmp
cdq
add
inc
mov
rcl
mov
mov
cld
mov
fsubr
lea
out
(bad)
xchg
mov
gs
dec
or
mov
data16
sub
hlt
sti
test
repnz
jge
cmp
ret
or
sub
adc
movs
jbe
adc
adc
(bad)
ins
push
ja
mov
xlat
shl
xor
jmp
cmps
or
push
outs
mov
call
add
and
cs
sbb
pop
sub
imul
jnp
js
imul
push
imul
add
and
ret
push
sub
and
(bad)
pop
mov
mov
push
pop
pop
int3
out
out
in
cvtdq2ps
and
xchg
int
xlat
fwait
lods
adc
sub
repnz
pop
repnz
jecxz
xchg
das
shl
scas
mov
das
(bad)
fcomp
sbb
sar
sahf
bound
add
mov
int3
lahf
loopne
and
jmp
mul
xor
mov
lods
mov
retf
outs
inc
cld
mov
or
movs
adc
jmp
rol
mov
mov
xor
mov
push
sbb
sbb
mul
push
test
mov
ret
push
mov
daa
(bad)
jns
add
dec
mov
in
aad
aaa
(bad)
cmps
pop
add
inc
in
push
movs
cmp
cdq
xchg
jg
(bad)
jb
adc
dec
and
in
ret
jnp
push
push
xchg
and
or
loop
retf
cmp
push
div
mov
xlat
or
adc
inc
and
daa
mov
sbb
std
and
or
bound
xchg
hlt
push
sbb
xor
test
retf
jo
dec
push
push
rol
aaa
lods
jp
pop
cmp
ss
outs
jl
pop
int
test
test
std
mov
mov
fdiv
(bad)
in
add
push
pop
mov
jle
xor
repnz
es
out
push
fwait
push
fstp
js
jno
test
jbe
sub
and
(bad)
jmp
or
retf
mov
push
not
adc
cli
xchg
inc
(bad)
hlt
pop
ds
push
inc
loop
sub
jp
cwde
mov
push
loop
movs
or
addr16
lods
pushf
fwait
inc
clts
or
dec
dec
ja
mov
in
push
mov
and
jns
test
arpl
push
(bad)
mov
in
imul
pop
dec
(bad)
mov
dec
jns
pop
xchg
pop
je
push
mov
pusha
xchg
ror
pop
lahf
fild
int3
ja
loope
mov
jg
push
imul
adc
icebp
mov
test
and
arpl
push
inc
sahf
xchg
sub
sbb
(bad)
div
mov
sub
leave
cmp
and
sar
jbe
xor
or
cld
sti
or
rcr
fsub
jb
mov
sub
iret
sar
or
and
mov
das
push
pop
mov
pushf
sub
push
adc
xor
push
pop
xchg
rcr
shr
cmp
pushf
push
pusha
sahf
xor
and
loop
les
cmp
inc
xchg
(bad)
movs
mov
dec
xor
mov
jnp
scas
push
das
mov
pop
out
mov
pusha
(bad)
js
inc
push
add
mov
enter
or
loope
cmps
cmp
sbb
pop
pop
inc
mov
pop
mov
or
mov
fs
es
mov
sbb
xor
pop
push
and
mov
sub
xor
sub
fdivr
int3
fwait
clc
push
cwde
inc
sahf
pop
and
out
sub
push
(bad)
mov
ror
test
cmps
mov
shl
arpl
sbb
jns
adc
and
loope
mov
sbb
lock
ss
or
pop
int3
inc
add
iret
sbb
jmp
int
loop
xchg
loop
and
mov
jmp
or
ins
jmp
mov
xchg
stc
push
jmp
std
or
out
or
out
int
pop
xor
mov
xor
xor
(bad)
fcomp
je
ins
fstp
pop
daa
fsub
jne
out
cdq
fcom
xchg
cmp
fcomi
push
ja
pop
test
repnz
stc
lods
dec
pop
in
jg
xchg
push
pop
sbb
push
popa
mov
inc
mov
int3
enter
dec
mov
leave
and
nop
aad
cmp
cmp
xchg
lock
sbb
scas
in
stos
adc
fld
sbb
aas
xchg
push
jmp
ret
cmps
mov
adc
pop
push
sub
mov
rcr
and
cmps
or
movs
test
in
dec
les
mov
lock
cmp
jnp
cs
push
jp
popf
inc
sar
pop
cmp
inc
jns
fidivr
fs
and
(bad)
sub
iret
rep
inc
stos
loopne
push
sbb
dec
add
xchg
fdiv
sbb
iret
icebp
in
test
sar
ins
mov
adc
jge
xchg
sub
xor
or
push
scas
dec
aas
jmp
mov
nop
mov
dec
adc
jmp
dec
cmp
xchg
(bad)
and
push
xor
pop
rcr
hlt
aas
mov
scas
add
fadd
movs
cmp
clc
xor
jl
jle
mov
sub
cmp
mov
ins
mov
pop
cmp
aaa
lods
(bad)
xchg
mov
push
mov
fist
ss
inc
push
cmp
add
sti
ds
push
fisttp
or
pop
mul
hlt
ins
jo
psadbw
cli
cdq
retf
ror
mov
add
mov
add
mov
mov
fidiv
repnz
jno
adc
cld
sub
xor
fwait
shl
xchg
das
retf
mov
xchg
sub
das
pop
fisub
cmp
push
push
mov
jo
imul
jnp
or
outs
loop
movs
jmp
sbb
test
test
nop
popa
ror
and
test
rcl
hlt
rcl
xchg
jl
sbb
sbb
cdq
and
dec
std
test
je
cmp
sub
push
sub
aad
jb
sbb
in
test
(bad)
(bad)
inc
imul
mov
add
mov
je
push
cmp
mov
iret
mov
inc
ins
mov
xchg
fcom
stc
pop
push
mov
cmps
xchg
pop
adc
fisttp
or
mov
mov
lods
ja
neg
add
mov
rcl
inc
mov
js
mov
(bad)
call
(bad)
mov
ss
xlat
rcr
jne
push
push
mov
pop
stc
fdiv
cmp
dec
push
xor
add
hlt
cli
ss
mov
push
fidivr
add
sti
and
stos
leave
pop
dec
in
les
dec
adc
xchg
shl
jg
out
adc
pop
add
cs
stc
push
push
and
(bad)
test
movs
out
jl
(bad)
xchg
inc
fs
jp
or
sub
and
pop
movs
cli
out
es
jo
mov
jne
mov
push
call
xor
xchg
push
push
sar
ret
sbb
lods
xor
sub
movs
enter
cs
mov
xlat
add
lods
dec
mov
loopne
cmps
cmp
sbb
aas
push
clc
(bad)
aam
sub
cmp
fucomi
retf
sbb
adc
pop
sub
jg
shrd
cmp
ror
pop
outs
mov
int3
jno
mov
pop
repnz
call
pop
cmp
xchg
sbb
nop
jl
fsub
jp
cmps
jmp
xchg
mov
cmp
lock
push
xchg
aam
enter
pop
test
dec
push
add
mov
lea
ss
add
or
mov
adc
pop
ins
add
ja
neg
out
or
jbe
mov
test
bound
loope
push
pop
pop
aad
into
out
imul
mov
iret
shl
fadd
aaa
adc
out
dec
push
xor
mov
es
in
retf
inc
inc
aad
push
dec
retf
inc
outs
bnd
cmps
inc
cmc
mov
sbb
inc
and
adc
xchg
mov
mov
xor
hlt
mov
loopne
xchg
mov
ins
addr16
jmp
adc
push
cmc
loope
adc
out
and
mov
scas
out
cmp
cdq
jnp
mov
jne
adc
inc
(bad)
jns
imul
and
int3
out
xor
cmp
sub
inc
and
dec
jnp
(bad)
pop
cmps
cdq
test
ss
push
jmp
loopne
popa
inc
mov
shl
inc
or
imul
jno
cmps
fadd
jns
dec
push
cli
cmc
pushf
cli
push
xchg
mov
mov
cmc
or
jl
adc
fwait
sbb
(bad)
lods
jb
pop
mov
mov
cmp
mov
jbe
gs
adc
into
lods
sub
das
fwait
out
mov
dec
lea
mov
dec
aad
mov
sub
xchg
adc
sbb
movs
xchg
jmp
in
mov
adc
lock
inc
adc
pop
lods
in
jnp
out
pop
fs
add
add
mov
push
adc
aad
sbb
or
lods
fsubr
sbb
or
dec
mov
mov
jae
(bad)
or
adc
imul
and
int
in
imul
shr
(bad)
imul
dec
loope
fidivr
ja
dec
ins
inc
(bad)
clc
leave
sbb
jge
cld
push
enter
loopne
cld
xor
sbb
push
jnp
adc
xor
mov
out
stc
into
scas
jns
fisttp
jns
mov
jmp
js
sbb
jnp
iret
jecxz
enter
push
jg
jns
and
mov
push
jg
cs
adc
dec
sbb
shr
sub
(bad)
xor
rcl
test
bound
jp
or
scas
les
pop
mov
ja
pop
jp
mov
mov
inc
sub
fimul
sbb
and
aad
add
scas
cmps
cmps
je
sbb
cmp
xlat
test
call
dec
mov
sub
scas
pop
dec
mov
cdq
or
sahf
sub
sbb
pop
cmps
adc
push
retf
jg
dec
xlat
sub
nop
pusha
sbb
leave
out
sti
ret
fnsave
mov
push
rdpmc
test
data16
test
cs
mov
mov
and
mov
xbegin
pop
xchg
push
les
xchg
mov
in
icebp
ret
repz
add
in
dec
mov
daa
(bad)
out
cmps
arpl
push
cmp
push
push
xor
inc
(bad)
inc
repnz
(bad)
xchg
cmp
mov
push
mov
ret
pop
call
mov
mov
jmp
mov
push
aaa
call
retf
jbe
ror
cs
fnstsw
enter
sbb
jne
jmp
jmp
dec
test
cmp
xor
xchg
mov
xor
jns
add
mov
or
xchg
popf
ror
mov
jae
adc
inc
fmul
clc
push
mov
inc
push
nop
clc
mov
ins
push
mov
inc
add
rol
push
dec
mov
jae
(bad)
mov
pop
push
adc
(bad)
into
sbb
lea
ret
cmps
mov
push
shl
pop
sti
jecxz
sbb
pop
mov
jmp
repz
ret
mov
or
dec
das
adc
test
gs
add
pop
fist
in
not
xor
and
adc
ret
xor
je
repnz
ja
jnp
hlt
ret
retf
sar
cmp
push
mov
add
(bad)
ins
fmul
call
lahf
xchg
int3
das
mov
outs
neg
mov
mov
mov
inc
inc
ss
xor
pop
loope
stc
mov
inc
inc
add
jle
mov
test
inc
adc
popa
adc
cli
jns
mov
nop
cli
call
sti
jo
or
adc
inc
push
cwde
mov
retf
adc
mov
out
or
into
push
pop
xchg
inc
xchg
call
adc
fisubr
adc
xor
mov
icebp
lods
ficomp
into
xchg
ret
and
pop
add
jmp
jle
dec
mov
dec
jns
cdq
pop
xor
adc
add
fwait
and
add
cwde
xlat
(bad)
shl
adc
(bad)
arpl
leave
or
out
mov
mov
dec
dec
unpckhps
jle
addr16
inc
cli
lahf
xor
mov
mov
or
lea
retf
mov
or
sbb
js
mov
bswap
pop
inc
sbb
retf
pushf
movs
cli
sbb
mov
dec
pusha
push
adc
xchg
mov
cdq
in
out
mov
ss
popa
jmp
pop
in
cmc
xchg
mov
sub
loope
jo
sbb
push
xchg
mov
jge
push
sbb
pop
(bad)
repz
cli
push
mov
popf
mov
ror
mov
ins
mov
ret
and
dec
call
dec
sub
jl
call
fimul
xchg
in
or
jle
repz
int3
int
dec
or
push
mov
pop
jb
push
or
sahf
push
jb
mov
in
push
xor
out
pop
in
inc
jge
or
std
and
imul
leave
jns
xchg
xor
(bad)
push
call
xchg
gs
or
mov
mov
mov
mov
nop
mov
push
sar
test
adc
sub
cld
jp
sbb
push
xchg
pop
shl
push
(bad)
loopne
inc
cmp
mov
retf
in
xor
cmp
jno
lods
out
retf
fld
fist
push
cmc
lods
repnz
inc
loop
shl
test
push
aas
xchg
jle
dec
jge
aad
jne
cwde
cmp
icebp
sub
repnz
scas
addr16
mov
jae
sbb
pusha
adc
fwait
or
push
push
sub
ret
clc
mov
sti
mov
cwde
int
push
adc
cmp
adc
pop
lock
dec
or
sub
pusha
int3
push
fcmovb
jecxz
cmp
dec
or
jbe
lods
lods
pop
jbe
in
inc
cmps
jmp
jmp
mov
xchg
lds
dec
cmpxchg
jae
adc
mov
and
shl
shr
cmp
sub
lock
pop
das
xchg
rcl
in
xor
loop
jmp
mov
lea
jo
sub
leave
(bad)
retf
mov
jae
jmp
sbb
pop
popa
dec
push
jo
or
mov
icebp
shl
xor
out
retf
sub
cmp
or
lods
add
pop
scas
inc
push
push
in
test
mov
dec
(bad)
rol
cld
xor
pusha
fadd
(bad)
loopne
or
xor
inc
mov
push
ja
mov
int
pop
push
popf
jno
mov
mov
push
inc
iret
mov
test
cmp
adc
xor
call
test
mov
in
fnstsw
pop
add
mov
shl
imul
in
mov
ficom
daa
lahf
shl
fcom
adc
xchg
test
shl
cdq
arpl
jg
std
(bad)
pop
adc
jecxz
es
sub
jge
mov
sti
test
sub
test
or
adc
enter
and
sub
stos
repz
xchg
sub
push
stos
scas
leave
jb
and
dec
das
mov
movs
dec
sub
add
imul
inc
xor
or
pushf
jnp
stos
add
lods
sbb
sbb
cld
mov
(bad)
mov
fmul
xchg
jmp
ja
cmp
mov
test
push
dec
addr16
(bad)
mov
fmul
xor
pop
adc
xchg
mov
jnp
ficom
into
mov
sub
push
pushf
xor
repz
and
cmp
dec
neg
mov
and
cmp
test
adc
mov
fmul
dec
ficom
jnp
push
xchg
adc
push
inc
inc
pop
jmp
addr16
(bad)
ret
ret
jns
mov
cmp
xor
cmps
xor
sbb
adc
cdq
imul
(bad)
leave
adc
(bad)
outs
mov
cmp
loope
sub
pop
daa
mov
add
pavgb
sti
repnz
rcr
mov
jl
inc
ss
call
and
es
in
pusha
cmp
fstp
pop
xchg
aam
mov
fild
cld
add
jl
jp
or
je
sbb
lock
rcr
cmp
and
in
ja
dec
inc
ss
sbb
dec
outs
jecxz
scas
inc
pop
xchg
(bad)
sbb
mov
cmp
fld
or
repz
lea
and
inc
out
retf
call
mov
jno
jge
mov
mov
pop
inc
test
mov
cwde
dec
jbe
sar
loope
mov
shr
jno
cmp
pop
mov
mov
dec
fstp
inc
fwait
xlat
leave
das
push
fwait
in
jae
sub
loopne
call
inc
push
mov
ffreep
and
jge
data16
jno
inc
pushf
pop
retf
adc
push
jne
mov
sar
mov
jns
cdq
imul
ud2
ins
repnz
mov
fld
inc
cs
fwait
not
and
mov
sar
stos
xchg
rcl
loope
(bad)
mov
je
shl
xor
call
(bad)
sub
pop
test
and
bound
mov
and
xchg
mov
movs
xor
bound
add
ficomp
inc
inc
repz
je
adc
and
mov
mov
xchg
out
fst
fbstp
cmp
(bad)
shr
jb
pushf
xchg
inc
mov
xchg
stos
lahf
cmp
pop
xor
jg
mov
push
scas
aam
loope
pop
or
mov
and
add
mov
bound
cmps
sub
pop
or
int
xor
cmp
(bad)
std
push
xchg
loopne
xchg
cmc
inc
je
repz
mov
pop
inc
pushf
(bad)
mov
add
jbe
add
xor
push
jmp
or
lahf
push
pop
sbb
jnp
imul
icebp
cmp
rcr
adc
or
sbb
mov
in
adc
loope
mov
ss
mov
mov
repz
sbb
or
shl
dec
jl
add
jmp
fs
adc
and
mov
aam
jg
mov
dec
xchg
dec
mov
pop
sub
push
and
add
push
push
dec
inc
cmp
adc
out
mov
xor
cmps
call
cli
jmp
mov
mov
mov
repnz
mov
cwde
bound
jmp
adc
mov
(bad)
ja
sbb
ins
xchg
mov
and
adc
je
jp
icebp
sbb
imul
loop
popf
inc
cmps
cmp
icebp
jnp
in
mov
fnstsw
mov
mov
ds
ror
cdq
sub
popa
mov
cmps
xor
mov
out
xor
(bad)
js
repz
add
es
aad
mov
sbb
stc
cld
out
sbb
sub
or
imul
test
js
test
xor
cmps
xchg
sub
or
sti
in
icebp
ret
mov
std
icebp
sbb
cmp
xchg
jo
sub
pop
xor
or
iret
push
add
inc
push
inc
sbb
out
jnp
mov
in
cs
dec
aad
jne
jbe
retf
sbb
in
pop
int3
sub
xchg
mov
rcl
or
ins
xchg
repz
fbld
dec
adc
pusha
lds
aad
pop
or
leave
xor
ja
adc
sub
jmp
nop
xor
push
sub
sti
pop
pop
mov
jl
ds
inc
xchg
push
in
outs
add
test
mov
pop
inc
hlt
fsub
jnp
cld
jbe
jae
inc
jg
enter
xchg
xchg
xor
movs
les
out
imul
jo
jg
in
jno
ins
test
xlat
shl
retf
mov
ret
arpl
retf
rol
stos
stc
push
xor
hlt
dec
mov
inc
or
mov
mov
mov
addr16
add
arpl
ins
cli
mov
in
push
pop
mov
xchg
sub
pop
cmp
or
leave
xchg
scas
xchg
fild
xor
mov
xor
xchg
adc
mov
mov
mov
lods
push
movs
repz
fs
push
jecxz
pop
inc
in
fnstsw
popa
adc
dec
fnstsw
sub
pop
popa
ss
mov
in
mov
int3
std
sub
lahf
in
push
or
adc
lods
xor
jecxz
xor
addr16
cmp
cmc
cwde
xor
pop
movs
push
mov
shl
mov
push
push
push
retf
pop
mov
rcr
outs
and
dec
mov
test
ret
xor
push
add
push
cmps
mov
mov
xchg
movs
dec
cmps
push
fwait
cmp
hlt
sbb
sbb
xchg
xchg
cmp
push
hlt
sub
mov
push
jp
add
shl
xchg
cdq
adc
lds
adc
sbb
jmp
test
xor
adc
enter
call
push
in
bnd
mov
inc
and
aas
outs
iret
sub
mov
or
lahf
adc
push
xor
adc
cmovo
(bad)
jmp
sbb
aam
arpl
idiv
jge
cmp
mov
add
or
fild
std
cwde
inc
mov
adc
add
loope
inc
popf
mov
jo
sbb
test
jb
push
pop
in
and
das
mov
mov
or
push
out
loope
aas
dec
mov
xor
push
jecxz
jp
stos
mov
sub
fiadd
xor
add
(bad)
push
or
adc
mov
lock
mov
mov
lea
cmp
sub
leave
icebp
in
test
adc
mov
ficomp
pop
pop
ds
icebp
outs
mov
xor
fcomp
in
sub
xor
mov
mov
mov
jno
mov
repnz
cmc
int
cld
popf
jbe
seto
call
lea
fst
and
mov
mov
xchg
jle
jno
mov
repz
or
adc
mov
inc
dec
adc
mov
push
cmps
into
and
fld
inc
and
cmp
lahf
js
inc
xor
aas
pop
or
int3
arpl
cs
scas
add
stos
das
jb
into
std
faddp
xor
pusha
adc
fadd
arpl
mov
pop
cmp
cmp
enter
cmp
mov
or
mov
add
push
adc
adc
sti
ret
jno
sbb
int
adc
or
jbe
daa
leave
inc
dec
rol
and
test
fld
mov
mov
mov
adc
mov
xlat
push
stos
mov
nop
iret
mov
and
and
call
aas
mov
mov
rol
mov
xchg
pop
fldcw
cli
and
xlat
rcr
xchg
ret
lods
push
adc
sub
std
fisubr
aaa
hlt
jnp
inc
mov
add
rol
mov
jns
mov
popf
sbb
adc
mov
dec
adc
shl
add
shl
fsub
mov
push
test
jmp
shr
mov
adc
and
add
jge
xor
adc
ja
xchg
mov
adc
mov
pop
(bad)
out
dec
pop
shr
push
movaps
sub
inc
xor
xchg
push
bnd
fcmovnbe
mov
dec
int
test
cwde
sar
push
jns
xor
or
pusha
stos
mov
ins
rol
dec
pop
jns
(bad)
cwde
pop
arpl
push
jge
pop
cmc
mov
ja
ins
rol
push
xor
mov
jae
add
lahf
and
inc
jmp
test
push
outs
pop
pop
mov
push
addr16
sub
call
neg
daa
pop
and
sbb
xor
pop
jp
es
hlt
sbb
mov
in
jle
gs
iret
outs
out
sbb
mov
adc
popf
adc
push
push
pop
arpl
ds
xor
cmps
outs
das
int
inc
dec
xchg
pop
jns
enter
pop
fisub
test
movs
imul
sbb
mov
mov
ror
movs
ja
cmp
inc
mov
neg
jb
push
inc
mov
and
sbb
cdq
(bad)
xor
inc
inc
ds
xor
ror
xchg
mov
cmc
lahf
bound
retf
add
and
jno
mov
sub
push
sbb
add
fidiv
xor
fs
jnp
test
(bad)
int
jo
sub
xchg
popf
lock
(bad)
push
add
xor
dec
mov
inc
pop
repnz
test
test
cmp
cdq
aas
inc
adc
stc
adc
mov
frstorw
out
sbb
outs
out
push
mov
xchg
shr
pushf
and
inc
dec
xor
aam
loop
(bad)
mov
add
pusha
and
arpl
sbb
xor
push
gs
xchg
loop
daa
out
xor
and
add
ss
mov
cli
repz
movs
aad
pop
push
xor
mov
mov
push
cmps
mov
sub
adc
add
out
jge
add
mov
scas
fistp
or
dec
fs
(bad)
lahf
lahf
mov
not
push
shl
or
movs
sub
cmp
jmp
sbb
push
(bad)
shl
pushf
adc
fdiv
ficomp
mov
aaa
jmp
mov
mov
lods
xor
repz
sahf
pop
sbb
xor
xchg
push
data16
sub
inc
add
adc
repz
sbb
movs
sahf
into
or
mov
jne
mov
or
clc
dec
mov
jmp
or
rcr
out
mov
and
(bad)
mov
or
daa
cmp
fistp
lea
xor
push
jle
pop
stos
enter
cmp
outs
mov
push
mov
imul
xor
dec
mov
cmp
scas
xlat
push
outs
das
xor
idiv
cmp
cli
jns
push
xchg
push
and
rol
sbb
repz
or
xchg
pop
sbb
into
pop
dec
cld
inc
jnp
int3
mov
add
add
jmp
(bad)
out
(bad)
je
and
dec
jg
sbb
fisubr
adc
movs
xchg
jbe
push
jp
and
shr
mov
push
cmps
sbb
imul
stc
lock
movs
ror
mov
arpl
dec
xchg
les
aas
add
retf
sbb
adc
xchg
jns
shl
je
mov
vpmaxsw
fisttp
pop
dec
add
sub
mov
fs
sub
or
push
dec
pop
pop
scas
mov
js
call
test
mov
mov
inc
test
fdivr
inc
mov
stc
mov
xchg
adc
lea
cld
ffree
or
add
adc
pop
(bad)
rcl
inc
mov
mov
shl
(bad)
sbb
cmp
xchg
ja
and
jmp
jecxz
enter
or
jp
cmps
sub
cmps
stos
pop
popa
nop
vsqrtss
fst
fs
pusha
jmp
pop
sar
push
jp
and
test
pushf
adc
cmp
xchg
sbb
push
jb
mov
shl
inc
shr
aaa
retf
mov
in
push
pop
adc
sbb
mov
sbb
jmp
fsub
add
fcmovnu
loop
test
pusha
adc
in
sub
dec
jbe
sub
inc
dec
or
in
div
xor
ins
pop
mov
xchg
push
les
dec
cs
ins
xchg
retf
(bad)
mov
xchg
loop
adc
test
push
mov
leave
dec
jne
frstor
fidiv
jmp
enter
or
mov
popf
jl
or
cdq
inc
xor
lods
(bad)
movs
mov
(bad)
test
lea
ja
mov
nop
mov
retf
in
adc
sub
fdivp
or
(bad)
hlt
cmp
or
movs
in
stos
int3
jnp
ins
aas
into
clc
dec
js
jo
lds
cmp
dec
call
lea
rcl
mov
sbb
mov
push
xchg
jae
dec
sbb
movs
leave
jge
push
jne
dec
sub
cmp
push
add
frstor
sahf
jecxz
jmp
push
cs
imul
jl
add
sar
(bad)
xchg
jnp
or
in
aaa
adc
mov
repz
dec
adc
ja
sti
ss
pop
xor
ret
mov
or
xchg
push
mov
stos
arpl
call
dec
jecxz
mov
mov
adc
std
push
cli
pop
sub
xacquire
test
sbb
loope
js
push
pextrw
xor
jle
das
aad
and
clc
mov
pushf
adc
ja
adc
stos
popa
jno
push
or
scas
xlat
add
pop
es
or
das
or
mov
mov
mov
loope
ret
pop
jecxz
add
jl
push
jbe
jb
fwait
call
sub
push
sbb
into
dec
je
inc
rcl
adc
loopne
aam
mov
ror
adc
pop
mov
mov
jecxz
mul
fs
test
push
add
cwde
jl
mov
push
and
dec
push
adc
cs
popf
clc
aas
mov
repnz
mov
jae
stos
sbb
sahf
pop
fsubr
sub
test
mov
imul
test
add
pop
movs
jno
jo
(bad)
lock
call
inc
clc
adc
mov
and
jae
aam
mov
rol
aam
outs
xor
jmp
rcr
push
pusha
pop
pop
pop
ja
push
(bad)
hlt
dec
retf
movs
fist
popf
xchg
xor
xchg
push
leave
je
add
lea
xor
std
and
or
ins
data16
cmps
jg
sub
push
add
stos
adc
mov
xor
pop
dec
mov
test
(bad)
ss
dec
cmp
inc
pop
ins
add
(bad)
push
call
(bad)
in
pop
retf
test
push
fdivr
enter
cmp
aaa
jmp
pop
call
mov
ins
outs
in
mov
xchg
icebp
ror
jmp
fs
adc
mov
ds
add
cmp
mov
mov
(bad)
cmp
and
mov
sbb
nop
cmps
dec
xchg
enter
lods
xchg
push
or
aas
or
push
das
mov
scas
pop
adc
or
mov
adc
dec
int
test
test
inc
sbb
dec
xchg
ja
sub
jl
popa
dec
push
out
cmp
jno
sar
test
push
push
aaa
mov
sbb
mov
repnz
popf
movs
and
dec
lods
push
xor
jmp
sub
js
imul
xor
jmp
imul
repnz
pop
(bad)
int
push
je
out
inc
cmp
dec
dec
pause
sbb
cs
movs
in
jle
push
test
add
push
xchg
add
pushf
jns
arpl
xor
mov
pop
push
enter
lods
fwait
xor
icebp
and
push
xor
jp
jmp
les
sbb
push
push
inc
push
sbb
pop
rcl
nop
in
sbb
call
sub
adc
stos
xchg
jg
cmps
clc
xor
jg
dec
daa
rcl
daa
bound
out
scas
mov
add
and
xor
loopne
inc
mov
cmp
sbb
clc
xchg
mov
or
test
lock
gs
addr16
je
int3
leave
out
push
sub
jp
mov
sahf
mov
out
jg
add
jnp
gs
fs
repz
stc
mov
out
xor
mov
xor
repz
out
jmp
inc
pop
(bad)
shr
xchg
xor
push
xchg
int3
pusha
(bad)
imul
ficom
aas
xchg
out
test
rdpmc
inc
out
mov
push
ss
push
cmc
inc
js
add
aam
vmwrite
add
mov
std
fcomp
sub
jae
push
xchg
add
icebp
pop
mov
pop
sahf
pop
sti
jo
out
nop
sbb
dec
xchg
add
addr16
stos
jne
call
push
(bad)
mov
mov
mov
aad
shl
ins
inc
xor
lock
jmp
or
or
cmp
cmp
jo
sub
jmp
into
mov
lods
je
xchg
cmp
aam
sub
mov
mov
xor
bnd
inc
out
mov
ret
add
aaa
jg
xchg
pop
push
dec
imul
mov
pop
(bad)
push
(bad)
push
sub
loop
cmps
hlt
es
std
pop
ja
cwde
(bad)
call
or
fwait
sbb
inc
ret
lods
push
hlt
sbb
test
popf
mov
repz
fld
inc
in
mov
cmps
mov
mov
xor
jmp
call
outs
lea
hlt
in
pop
mov
stc
imul
lods
jp
push
popf
test
test
stc
mov
in
inc
xchg
adc
xchg
movs
cmp
inc
popf
daa
push
dec
xchg
jmp
cmp
push
pop
call
xchg
popa
jae
dec
lea
cmp
dec
mov
mov
stos
aad
jo
lahf
fs
xchg
test
mov
ja
mov
jecxz
inc
dec
addr16
push
ja
sub
adc
mov
in
loope
dec
mov
inc
xchg
lods
xor
daa
adc
pop
call
and
mov
mul
pop
into
ds
sbb
fnsave
mov
mov
jge
inc
imul
in
enter
mov
adc
inc
cmps
xchg
ror
sahf
lods
call
aad
sub
xchg
pop
jnp
(bad)
sub
dec
fs
retf
jnp
cmps
xor
mov
or
or
cmps
jmp
mul
xchg
dec
push
xor
dec
mov
mov
push
inc
push
fsub
sub
fcmovnbe
mov
mov
xor
repz
xor
iret
rcl
pop
dec
cdq
je
pop
pop
push
in
jecxz
test
js
mul
and
push
ret
jno
add
pop
ret
dec
or
mov
xor
and
test
fwait
ins
in
jl
xchg
fcmovbe
adc
int3
sbb
mov
dec
jmp
ss
js
lods
dec
f2xm1
pop
or
add
lahf
mov
push
test
sub
aaa
mov
pop
dec
mov
cmp
dec
sbb
mov
mov
test
cdq
ret
inc
pop
jle
sub
jge
aam
scas
pop
aad
pop
test
jp
xor
lds
pop
(bad)
pushaw
leave
cld
aaa
ret
ret
aas
jle
pop
fisubr
xor
mov
outs
jmp
shl
inc
mov
adc
icebp
pop
clc
cmp
pushf
inc
mov
jl
xor
(bad)
sub
dec
xor
lock
add
js
in
(bad)
js
xchg
cld
jge
push
pop
mov
mov
jbe
out
shr
jbe
out
jle
rol
mov
rcl
fs
ins
jp
retf
pop
mov
mov
inc
hlt
icebp
fbld
adc
lahf
mov
test
pop
sbb
push
test
out
sahf
test
sbb
mov
dec
test
pop
cld
scas
mov
int
sbb
sbb
xchg
mov
cmps
sub
jb
mov
dec
(bad)
ds
add
mov
jo
fisubr
pop
jge
jb
outs
out
leave
daa
outs
push
pop
xchg
jecxz
loope
push
push
iret
xchg
sub
out
sbb
mov
dec
jecxz
mov
fmul
mov
xchg
jg
sub
pop
in
dec
sub
and
add
add
icebp
and
das
inc
clc
cmp
sti
xor
ret
lahf
int
sub
push
imul
fistp
jno
fucom
ds
mov
add
push
enter
xchg
loopne
or
jg
xchg
adc
xchg
sbb
test
adc
push
imul
jl
jnp
xchg
dec
test
and
add
fstp
xchg
sub
popf
pop
inc
arpl
push
outs
repz
sub
mov
xlat
iret
ins
inc
aaa
jbe
shl
pop
jae
jl
jmp
dec
and
aad
dec
xchg
push
cmc
lahf
xchg
cmps
xchg
xor
mov
cli
pop
jmp
pop
lea
pop
or
jg
adc
inc
jmp
ins
or
inc
test
movs
cmc
retf
add
pop
lea
lock
lods
clc
dec
adc
cmp
cmp
test
xchg
stos
xchg
(bad)
inc
mov
jns
xchg
lock
dec
inc
inc
mov
xchg
mov
daa
js
scas
mov
daa
or
mov
cli
and
or
push
jo
stos
gs
(bad)
sub
mov
jb
push
and
dec
pop
jne
fnstcw
jno
aad
and
adc
sub
shl
mov
mov
jbe
arpl
adc
and
and
rol
xchg
jg
pop
jae
inc
cwde
sahf
fild
dec
mov
sub
cmp
fidivr
pop
mov
push
leave
jmp
and
xor
adc
loop
pusha
cmps
xlat
(bad)
ds
cmc
jae
aaa
rcl
in
fcmovu
sub
data16
retf
jmp
jae
in
out
les
ret
jmp
sbb
sub
ds
xor
add
shl
mov
lods
xor
retf
adc
hlt
es
dec
sar
imul
dec
cld
jne
mov
add
dec
out
shl
push
cdq
fcomp
mov
fimul
ds
jbe
scas
je
xor
xlat
scas
(bad)
outs
pop
dec
cmp
les
stos
cld
cli
repz
retf
inc
cmp
cld
xor
ja
out
xchg
and
push
call
cmp
fild
fnsave
idiv
loop
iret
adc
ss
aas
or
pop
pop
mov
lock
xor
loopne
xchg
inc
xchg
mov
out
mov
sbb
dec
adc
inc
leave
addr16
adc
icebp
rcr
and
daa
aas
nop
jne
cli
in
ins
popf
push
mov
popf
movs
ins
fistp
stos
out
and
jno
fldenv
(bad)
in
mov
xor
cmp
inc
cmc
fstp
pushf
pop
(bad)
push
bnd
(bad)
cmps
cmps
js
dec
adc
dec
jbe
mov
and
dec
enter
xlat
or
xor
sub
or
mov
(bad)
shr
cwde
movs
in
data16
and
inc
jmp
add
sti
aam
leave
mov
xchg
dec
retf
push
xor
lahf
fwait
mov
jl
in
(bad)
jno
mov
movs
loopne
xchg
and
(bad)
push
imul
pop
and
or
sbb
xor
shr
(bad)
outs
test
mov
mov
pop
cmp
jge
fild
(bad)
xchg
cmc
dec
push
scas
jmp
xor
mov
add
add
call
in
push
stos
lea
ins
sbb
fnstsw
lock
rcl
sbb
sub
scas
scas
addr16
cmps
leave
sahf
jle
pop
adc
lahf
pop
js
loope
out
cmps
cmp
fcom
or
jp
ss
ja
fwait
mov
into
sub
iret
aas
add
pop
cdq
outs
pop
inc
rcl
cmps
cmps
mov
mov
ss
fcom
(bad)
aaa
mov
scas
and
gs
clc
cdq
iret
in
pusha
in
push
es
mov
call
mov
cs
sti
jae
stos
cld
mul
icebp
or
adc
rcl
ins
or
clc
inc
test
push
pop
jae
dec
lods
fcomp
cs
shl
arpl
jmp
cwde
rol
dec
outs
dec
mov
xor
xlat
movs
push
mov
inc
sub
arpl
pushf
mov
std
ucomiss
xchg
shl
sbb
fimul
xor
sub
push
jmp
push
mov
(bad)
(bad)
retf
and
jne
repnz
cmps
sbb
je
clc
daa
jbe
push
idiv
dec
cmp
dec
mul
iret
ins
jb
das
pop
pop
push
inc
inc
into
mov
out
sub
ins
push
push
outs
popa
cmp
add
ror
fnstenv
mov
aas
mov
stos
fmul
in
xchg
icebp
jg
js
push
fld
push
cdq
dec
imul
outs
cmps
pushf
mov
or
scas
arpl
clc
mov
shr
xchg
sbb
retf
and
xor
cdq
aam
adc
push
rol
(bad)
arpl
scas
and
dec
enter
aad
jle
out
sub
xlat
mov
push
or
sahf
pop
cdq
not
jno
lahf
mov
test
repnz
push
or
pop
sbb
movs
xchg
push
mov
movs
sub
dec
scas
daa
add
jo
sbb
mov
jmp
lds
dec
cmp
in
xchg
es
test
pop
xchg
sbb
dec
mov
jecxz
or
or
out
pop
int
pop
xchg
jge
scas
imul
push
je
mov
cld
pop
xor
mov
mov
xchg
in
xor
sub
sbb
pop
xchg
mov
inc
and
js
xchg
and
popa
mov
js
adc
pop
fnstenv
les
cmp
pushf
pop
fs
lea
clc
cwde
sbb
and
or
(bad)
loop
jge
fnstcw
frstor
sub
jmp
stos
or
push
pop
mov
aam
leave
and
(bad)
shr
scas
ret
push
xor
xchg
mov
(bad)
loopne
out
fcomp
aaa
push
xchg
lods
inc
out
gs
jae
repnz
out
loop
sub
and
add
ja
inc
scas
shr
mov
mov
pop
xchg
outs
sub
xchg
pop
xchg
add
mul
or
movs
loopne
or
into
leave
aad
add
nop
mov
hlt
and
lock
xchg
adc
mov
lods
xchg
and
ins
or
mov
inc
(bad)
dec
jecxz
mov
add
stos
mov
cmp
outs
push
test
sub
pop
cdq
dec
js
sar
mov
dec
or
xchg
mov
push
shl
movs
cmp
ja
adc
loop
repz
pusha
or
pop
stc
xor
xchg
int3
add
sar
xchg
cmp
test
imul
xlat
push
inc
xchg
inc
cli
adc
jp
movs
jne
jns
sub
into
retf
fist
icebp
mov
push
add
or
jno
and
mov
clc
push
mov
cs
sti
fs
add
shl
ins
dec
popf
mov
push
cmp
sub
mov
lahf
idiv
hlt
xor
xchg
ret
fild
inc
pop
frstor
mov
daa
jae
xchg
sub
je
pop
pop
and
je
sbb
retf
(bad)
(bad)
mov
push
cmc
mov
jne
fidiv
xor
cdq
loope
cmp
in
xor
jae
adc
ret
xor
xchg
pop
mov
jmp
mov
loope
jmp
push
inc
sahf
lahf
mov
jecxz
imul
jmp
out
jnp
and
lea
inc
lods
into
test
das
jo
and
jbe
frstor
movs
or
aaa
fdiv
pop
mov
adc
jmp
add
fsub
sbb
gs
xor
(bad)
rep
jne
or
int3
sar
mov
icebp
mov
xchg
xchg
ret
or
fcomp
or
fs
(bad)
jmp
add
iret
jle
leave
fcomp
and
cmp
ins
ins
out
repnz
xchg
push
es
arpl
int3
data16
adc
mov
sbb
mov
retf
lock
and
pop
aas
arpl
frstor
push
sub
mov
mov
sub
addr16
cmps
lock
mov
popa
fidivr
bound
pop
ins
pop
repnz
add
sbb
jle
inc
xlat
shr
ins
xchg
inc
pop
push
cmp
in
jo
xchg
ror
xor
adc
push
into
ins
fistp
and
cli
aas
mov
push
loope
pop
idiv
mov
rol
sbb
sbb
push
popa
add
or
pop
add
retf
(bad)
mov
std
xchg
int
adc
cld
inc
dec
cmp
jno
add
sub
dec
jg
lea
or
outs
jbe
sub
jge
sbb
mov
xor
cmc
dec
push
loopne
xchg
repz
adc
jb
jmp
jae
jnp
lds
xchg
loopne
mov
mov
cmps
fcomp
adc
inc
scas
test
stos
out
popa
push
loopne
ror
ins
sbb
sbb
movs
leave
cdq
mov
pop
mov
adc
adc
inc
loop
xchg
cmp
sbb
imul
in
js
aaa
xor
mov
mov
scas
xchg
jo
(bad)
leave
out
mov
ins
les
repz
mov
addr16
neg
push
lahf
sahf
and
fdivr
push
mov
fdivr
and
sar
pop
pop
add
cmp
push
aad
das
retf
icebp
pushf
scas
jo
xchg
mov
test
push
int3
push
test
std
add
xchg
jb
cmp
js
mov
imul
xchg
push
xor
shl
adc
mov
adc
fisub
fsub
icebp
mov
cld
ret
add
inc
in
ins
lock
add
xor
or
enter
test
nop
sub
pop
jmp
popf
sbb
arpl
in
cmp
xor
test
test
cmc
adc
push
popf
test
popf
rcl
sbb
leave
xlat
cmc
xlat
aam
in
xchg
lahf
mov
dec
scas
mov
add
cmp
loope
or
mov
scas
mov
and
inc
xor
add
add
movs
jns
mov
mov
ins
mov
cmp
mov
retf
int3
and
or
cdq
jmp
pop
mov
out
adc
scas
leave
push
jle
aam
xor
jg
pop
jle
inc
mov
out
shl
dec
fwait
(bad)
jae
jae
mov
or
fdivp
mov
cmp
adc
push
stc
out
dec
loope
or
fsub
add
xchg
ffreep
jb
and
xlat
cmp
ret
xchg
arpl
mov
test
pop
(bad)
ficomp
mov
xchg
sbb
sub
xor
lahf
icebp
popa
mov
mov
pop
icebp
data16
cli
dec
push
and
cwde
push
jg
fld
sahf
fidivr
hlt
adc
inc
or
in
repnz
dec
xor
cmp
fsub
stc
ja
inc
push
ror
mov
sbb
call
(bad)
fisubr
add
add
outs
es
cwde
push
mov
je
int
into
nop
or
aam
frstor
cmp
sbb
nop
or
mov
jg
daa
push
pop
dec
dec
mov
sub
mov
daa
fwait
mov
fs
mov
xchg
and
mov
mov
push
or
movs
jmp
jl
(bad)
ficomp
fst
push
jmp
(bad)
neg
adc
xchg
fadd
jns
mov
out
xchg
adc
dec
into
icebp
nop
pop
or
dec
pop
ss
mov
test
dec
stc
call
jl
imul
or
jle
neg
ficomp
cdq
add
cmp
loope
js
sahf
pusha
and
scas
lock
mov
ficom
jae
xchg
(bad)
mov
in
fwait
sbb
xchg
or
pusha
xchg
bound
mov
aam
mov
cmps
cmps
mov
pop
aam
mov
inc
adc
(bad)
and
add
outs
inc
in
dec
int
imul
test
push
scas
rol
hlt
gs
pop
jle
inc
imul
ret
jmp
push
push
sar
and
int3
icebp
sbb
mov
call
xchg
dec
test
push
and
jmp
dec
jmp
and
lods
ins
lods
sub
int3
lea
push
sub
mov
ds
xor
cmc
mov
inc
pop
jns
out
push
sbb
pop
lods
pop
mov
xor
scas
repz
push
or
in
(bad)
mov
int3
ss
adc
neg
stc
push
in
mov
mov
sbb
mul
scas
pop
es
lods
or
shl
es
rol
(bad)
ficom
mov
in
add
out
cdq
icebp
cmc
mov
adc
dec
(bad)
int3
xor
push
fld
mov
call
push
dec
xlat
clc
mov
fnstsw
rol
sub
mov
jl
sti
jbe
ins
rcr
mov
gs
mov
cmp
inc
stc
movs
in
push
or
dec
(bad)
inc
push
jge
dec
loope
push
stos
sbb
mov
cmp
dec
std
jl
mov
or
adc
scas
jecxz
cld
pop
cmp
and
xor
outs
cmc
mov
mov
scas
out
pop
fwait
inc
sti
push
in
jmp
imul
xor
pop
cmp
je
jmp
(bad)
out
clc
je
mov
test
lods
adc
lahf
fwait
pop
xchg
dec
aaa
std
ret
lea
es
repz
jns
daa
std
mov
push
test
jne
sar
cli
add
test
leave
retf
pop
push
mov
mov
pusha
push
add
push
pop
sub
sbb
aad
and
jge
push
inc
cli
sbb
xor
lds
int
stos
js
lock
mov
mov
sbb
sub
mov
rol
dec
mov
int3
mov
out
pop
ret
sar
cdq
movs
stc
out
lea
data16
popf
inc
jp
cmps
mov
and
pop
mov
ds
mov
adc
repnz
dec
or
retf
in
mov
push
pop
mov
mov
pop
nop
(bad)
in
aad
mov
and
mov
dec
xchg
(bad)
(bad)
cmp
pop
inc
add
mov
rol
or
shr
sti
repnz
in
cmc
movs
enter
jl
or
cmp
ret
sbb
shl
mov
frstor
ja
dec
call
jae
stos
adc
pop
or
aaa
jp
adc
cdq
retf
sub
mov
and
xchg
outs
cmps
mov
xor
pop
enter
adc
mov
jbe
mov
scas
out
loopne
xor
mov
mov
and
dec
in
jbe
aaa
ds
mov
sahf
pop
lds
shl
push
out
or
mov
or
aad
lahf
and
sub
test
dec
add
jbe
jmp
push
stos
stc
or
or
sbb
ud0
cmps
stos
fcmove
xchg
adc
dec
movs
aaa
jae
jmp
cmp
push
push
(bad)
gs
imul
mov
popf
sub
ret
push
add
mov
ret
hlt
fld
test
popa
dec
dec
cmp
call
ja
ficom
adc
adc
popa
fadd
jmp
add
sbb
xlat
xchg
xor
popf
out
js
xchg
sub
mov
jl
sahf
sub
inc
inc
add
enter
push
test
mov
pusha
cmp
and
add
mov
dec
and
push
iret
jmp
popa
cs
rol
pop
or
inc
push
xchg
loopne
xchg
sbb
inc
out
xor
push
adc
mov
in
or
fmul
push
xchg
sahf
sbb
pop
or
inc
push
mov
loop
push
jp
lods
pop
jb
inc
dec
xchg
mov
(bad)
arpl
(bad)
pop
dec
jmp
add
mov
cmp
(bad)
xchg
jg
je
out
lock
sbb
push
cmp
retf
sbb
gs
sbb
clc
mov
xchg
(bad)
sbb
and
loop
mov
mov
loope
xor
cmp
es
iret
loope
inc
stos
sbb
sbb
jp
out
add
pusha
xchg
mov
hlt
(bad)
adc
out
adc
(bad)
push
sar
sub
cmp
test
xchg
js
cmc
(bad)
jno
lods
adc
jg
inc
(bad)
int
sub
jl
add
cmps
ret
sbb
ret
cmps
test
sub
jge
test
or
adc
add
push
xchg
inc
dec
mov
test
xchg
movs
inc
adc
sahf
xchg
xchg
add
xor
scas
xchg
rcl
xor
pop
jmp
call
inc
mov
jecxz
xchg
es
inc
movs
adc
mov
xor
and
jbe
cmp
cmps
div
pop
leave
add
mov
fsub
mov
sub
loop
pop
jmp
aam
xchg
or
xor
ss
jmp
push
dec
mov
pushw
add
not
stos
jmpw
mov
inc
mov
pusha
add
(bad)
pop
out
sub
or
aad
outs
mov
jg
sub
cli
xchg
ds
push
pop
ror
xor
lea
push
mov
dec
or
sub
or
jecxz
xchg
imul
sub
je
mov
push
movs
fcomp
(bad)
(bad)
(bad)
imul
les
(bad)
jmp
cmp
ss
mov
fadd
xor
mov
test
lea
shl
movs
test
and
and
mov
out
ret
rol
lods
scas
dec
jnp
dec
mov
and
enter
das
mov
ds
lods
mov
test
or
(bad)
rcl
ds
jnp
shl
int
mov
jecxz
ffree
jns
fs
push
fst
inc
mov
jne
push
popw
pop
scas
adc
ret
test
(bad)
repnz
push
int3
or
and
ss
adc
lea
scas
sbb
xor
inc
ss
int3
out
fmul
imul
rcl
test
push
ror
jo
lods
cmp
mov
lock
pop
xchg
mov
mov
xchg
pop
ja
jb
xchg
cli
rcr
in
push
push
inc
inc
push
xor
push
lds
add
pusha
jns
mov
xor
jle
xchg
(bad)
adc
loope
pusha
xor
ror
jmp
xor
adc
sub
jae
xor
xlat
test
jb
sub
inc
adc
ja
lods
das
cmp
inc
fnstenv
out
jb
test
fmul
dec
adc
inc
mov
pop
es
sbb
das
cmp
sbb
stos
hlt
inc
cmp
das
pushf
cmps
repz
cdq
fucomp
or
arpl
sbb
ror
mov
pushf
push
jle
pusha
loopne
sub
mov
iret
mov
pop
daa
sti
push
aas
fld
cmc
ins
push
stos
sbb
inc
call
and
into
mov
mov
jecxz
loope
test
test
fwait
dec
js
adc
imul
push
js
dec
push
bound
pop
lods
mov
rcl
jae
push
xchg
jp
(bad)
mov
loope
and
popf
mov
mov
div
ret
outs
stos
xchg
out
jge
pop
ror
add
out
jge
fisttp
cmp
test
in
and
in
cld
mov
ja
mov
xchg
loop
dec
fadd
das
inc
call
dec
test
lea
mov
or
jmp
cs
movs
xchg
inc
test
repnz
or
mov
aas
mov
clc
and
in
ins
sub
push
mov
scas
add
test
out
xchg
add
movs
xchg
cmps
les
sbb
push
mov
adc
sbb
les
lods
cmp
dec
pop
loopne
pop
sub
int
sub
test
loope
push
inc
mov
retf
xor
fsub
dec
push
jbe
pop
jns
rcr
xchg
into
pushf
pop
mov
lahf
bound
in
(bad)
ret
imul
push
out
dec
xlat
xlat
jecxz
test
xor
in
inc
popa
nop
cmp
sbb
div
mov
pushf
mov
aaa
dec
add
and
add
repz
mov
jo
scas
xchg
dec
aaa
cli
sub
lea
cmp
inc
push
xor
hlt
(bad)
es
stos
ins
lds
retf
pop
mov
cdq
jbe
push
(bad)
pop
fcomp
mov
out
xchg
das
adc
rcr
fisttp
scas
or
int3
cmp
cwde
int3
scas
call
(bad)
xor
loopne
xchg
sbb
mov
push
sub
add
cmp
arpl
inc
mov
imul
lds
add
mov
popf
in
in
xchg
pushf
jae
jnp
xchg
rcr
sub
pop
and
ins
sbb
sbb
pop
and
jle
dec
cwde
push
cmp
mov
mov
dec
sbb
jnp
(bad)
sbb
jne
fucomi
lds
ret
fcom
hlt
mov
stc
sbb
mov
mov
cmp
pop
inc
push
shl
adc
retf
ins
mov
retf
mov
nop
jg
out
mov
and
aam
out
mov
movs
(bad)
into
push
or
or
loop
nop
adc
push
mov
and
pop
dec
into
lods
xchg
fdivr
sahf
nop
cld
fs
cmp
pop
gs
xor
sub
daa
popf
cmp
pop
(bad)
mov
adc
es
xlat
push
(bad)
ss
pushf
or
cmp
outs
sahf
jmp
ror
mov
repnz
les
inc
inc
(bad)
adc
mov
xor
ss
cwde
or
(bad)
cmp
cli
push
nop
loopne
imul
pop
aas
popa
mov
outs
adc
imul
bound
repz
mov
(bad)
push
(bad)
clc
xchg
(bad)
sub
outs
enter
outs
xor
jno
aaa
sbb
(bad)
in
out
out
cmp
sub
and
jle
out
xor
fs
xor
nop
fcomi
std
addr16
jns
push
ret
add
fld
dec
popa
inc
jmp
xlat
cwde
mov
dec
add
scas
stc
cmp
sbb
popa
cmps
jno
jo
rcl
adc
stos
jmp
sub
lods
in
imul
ret
add
mov
inc
push
movs
test
adc
pop
stc
pop
dec
inc
jg
mov
or
fidiv
jnp
or
popf
mov
inc
fst
popf
adc
pop
rcr
push
dec
sbb
mov
paddsb
sbb
adc
retf
or
sbb
sub
or
fs
xchg
or
(bad)
ss
mov
jge
loopne
jle
sahf
dec
cdq
cmc
dec
inc
es
jns
sub
sub
mov
add
out
ins
mov
les
inc
nop
or
push
les
fwait
and
push
loopne
mov
fwait
cdq
dec
xchg
je
fiadd
icebp
test
mov
mov
inc
sub
and
jle
mov
ds
cmp
sbb
out
test
mov
call
adc
ds
es
xchg
adc
iret
sub
bound
mov
pusha
retf
push
dec
mov
sbb
sub
arpl
ret
das
jno
repz
arpl
adc
out
jae
push
xchg
push
fidiv
inc
inc
outs
jb
mov
and
fs
rcl
lods
xor
lods
std
js
sub
and
retf
icebp
sub
push
pop
inc
ins
ja
sti
jo
fisub
enter
cs
jbe
lods
aaa
outs
xor
xchg
aaa
loope
mov
(bad)
mov
jp
mov
loop
and
xchg
xchg
cmp
jo
mov
out
jle
pop
jg
mov
mov
and
(bad)
xchg
xchg
call
mov
shl
loope
inc
xchg
jmp
mov
(bad)
sti
push
xchg
add
cmp
mov
xor
mov
push
les
push
mov
(bad)
pop
xchg
or
out
xchg
es
fisubr
(bad)
cli
repnz
leave
icebp
shr
push
adc
pop
jg
in
das
retf
mov
hlt
add
inc
sahf
xlat
test
push
xchg
pop
div
cmp
retf
movs
int3
push
leave
mov
cmp
mov
push
mov
mov
mov
fincstp
ret
repnz
and
stos
mov
test
je
call
hlt
loop
and
addr16
call
mov
mov
in
icebp
mov
mov
movs
pop
test
cmp
out
je
test
nop
ret
mov
scas
mov
icebp
enter
add
cmp
aas
adc
pushf
jne
add
fcomp
sbb
sbb
mov
add
imul
and
adc
mov
dec
cmp
jbe
ret
jl
pop
call
inc
out
push
hlt
inc
jp
shl
scas
xchg
cwde
push
dec
mov
jle
retf
in
test
xor
xchg
enter
(bad)
jg
sub
in
cmps
loopne
fs
(bad)
cli
mov
test
jge
retf
jno
popf
inc
shr
shl
jo
inc
mul
stos
loopne
pop
jmp
in
cwde
rcr
mov
push
mov
xchg
push
xor
test
popf
aam
ja
inc
dec
mov
rcl
push
rol
pop
add
test
inc
ficomp
dec
pop
(bad)
adc
dec
mov
jno
push
cmps
xor
push
sub
(bad)
iret
dec
es
or
push
call
or
and
adc
call
mov
mov
add
jne
sub
in
cmp
cli
push
mov
push
cmp
out
test
fiadd
push
add
mov
test
dec
(bad)
loopne
inc
sub
outs
mov
lods
ret
mov
out
sub
xchg
jmp
imul
or
icebp
add
sub
movs
jg
mov
dec
nop
jno
inc
add
xchg
mov
jno
xor
cwde
std
div
inc
mov
jecxz
pop
cmps
movs
js
ja
daa
mov
and
mov
xchg
jg
test
xlat
pop
dec
jno
or
inc
sbb
inc
adc
shl
jno
dec
mov
mov
loopne
outs
pop
cdq
scas
xor
adc
data16
inc
push
mov
adc
sbb
inc
cmps
movs
mov
sbb
imul
dec
inc
stos
push
inc
and
aad
retf
sub
cmovo
and
sub
outs
sub
outs
dec
xchg
jmp
pop
jmp
mov
loopne
mov
xchg
(bad)
loop
inc
mov
jmp
repnz
std
jg
xchg
inc
fcmovnu
adc
movs
and
xlat
push
pushf
inc
add
repnz
adc
cs
loope
jl
cdq
test
loope
or
shr
push
(bad)
in
inc
sbb
nop
inc
arpl
mov
leave
push
int3
inc
mov
mul
pop
xchg
adc
sub
rol
rol
stc
in
into
inc
(bad)
pop
repz
jl
jp
add
outs
shl
mov
fisub
mov
sbb
xchg
popa
mov
and
shl
adc
stc
push
add
push
add
pop
daa
jg
sti
lock
popf
jp
lods
dec
add
sbb
jo
xor
jmp
mov
and
(bad)
xchg
or
lock
fdiv
adc
movs
shl
push
mov
aaa
iret
jb
xlat
mov
dec
add
sahf
out
ins
adc
out
pop
cs
ret
xchg
push
sahf
xchg
fsubr
sbb
xor
mov
dec
ret
or
movs
pop
mov
add
mov
and
(bad)
movs
popf
popf
cmc
gs
test
fiadd
test
jae
cld
movs
mov
shr
jb
shl
fisub
popf
xor
cmps
ret
mov
mov
cs
fucomip
mov
pusha
mov
cmp
adc
ret
retfw
xchg
addr16
es
les
out
jnp
test
sub
leave
jns
retf
inc
adc
sbb
and
add
sub
neg
shl
or
mov
add
add
add
cmp
mov
add
jo
push
or
mov
mov
xor
or
push
ret
pop
sbb
mov
scas
cwde
(bad)
dec
adc
jmp
out
mov
mov
jle
jno
retf
lods
mov
lods
sbb
or
add
mov
fwait
pop
bound
cmp
cmp
dec
addr16
cld
mov
sahf
sub
adc
ins
pop
lods
aaa
inc
add
popa
pushf
test
lds
sub
rol
repnz
push
sbb
je
mov
ror
pop
push
test
or
pop
inc
dec
adc
ja
das
(bad)
test
ins
lods
mov
mov
sar
inc
arpl
test
adc
test
add
jp
push
sub
sub
push
add
mov
mov
push
dec
shr
ins
adc
pmaxsw
shr
mov
and
fs
mov
jns
iret
dec
mov
(bad)
and
sbb
outs
jmp
hlt
add
es
mov
mov
or
or
mov
lea
pop
adc
add
out
mov
into
inc
sub
or
ins
and
dec
cmp
aad
xchg
(bad)
pop
jge
xchg
(bad)
out
imul
cdq
inc
mov
dec
mov
sti
jge
ror
movs
pop
ds
sti
int3
jg
daa
adc
sbb
pop
sbb
xor
aaa
mov
leave
(bad)
cmps
es
je
push
dec
mov
xor
xor
int
or
loopne
jle
jp
mov
mov
lahf
pop
or
movs
push
push
pop
inc
xor
jmp
sbb
inc
sar
jmp
sahf
adc
adc
jmp
loop
retf
pop
inc
fild
fisttp
mov
(bad)
inc
repnz
rol
mov
es
sar
shr
or
out
lahf
sahf
addr16
enter
mov
pushf
lock
mov
sbb
int
add
repz
cmc
or
pop
pop
(bad)
loopne
or
sar
fcmovu
mov
mov
repnz
das
push
lds
rcr
lds
sub
arpl
xlat
mov
ins
outs
add
and
mov
into
leave
(bad)
test
cld
cdq
pusha
ret
stos
ja
cmp
adc
stc
cmps
mov
das
add
scas
shr
arpl
xor
fs
jb
pop
push
iret
ret
pop
jmp
dec
in
dec
cmc
je
mov
sbb
enter
sub
xor
jne
jns
enter
inc
mov
jle
dec
out
mov
lea
push
mov
scas
movs
mov
add
test
push
adc
lds
jmp
cli
mov
pop
xchg
inc
out
cmps
push
fwait
leave
stos
jge
inc
popf
fistp
fisub
jae
dec
cli
adc
je
aam
jmp
mov
jg
push
and
sbb
fsubr
movs
xchg
shl
outs
cmps
ss
shl
mov
retf
sbb
int
test
pop
pop
jp
addr16
sub
and
pop
sub
loopne
fcomp
cmp
imul
dec
call
jle
(bad)
or
push
(bad)
xchg
jecxz
mov
jb
aas
and
aad
pop
shr
addr16
sub
sahf
pop
jnp
popf
fwait
adc
or
mov
ja
loopne
ret
adc
fs
pop
push
enter
mov
jecxz
in
dec
ins
cmp
push
fucomi
cmps
inc
nop
mov
cmp
fcom
cmps
push
sub
sub
adc
jb
xchg
sbb
cmps
cmps
loop
mov
xlat
xchg
(bad)
les
cs
fmul
into
ins
sub
xchg
outs
jecxz
lea
jbe
add
popa
(bad)
cmps
icebp
jo
mov
fdiv
add
jmp
mov
test
arpl
push
xlat
xchg
xor
or
mov
xor
inc
mov
movs
mov
loopne
sub
cmps
mov
mov
mov
or
fld
mov
fwait
sar
fcmove
fidivr
jns
int3
icebp
lods
dec
jmp
loopne
jne
pop
and
add
pop
pop
dec
cmp
enter
pusha
fbld
imul
mov
test
jle
mov
xchg
ja
mov
enter
data16
push
rcr
loope
retf
cld
out
xor
aaa
call
and
jns
inc
mov
push
xor
vmread
call
lods
inc
fcomp
and
sbb
mov
sbb
sub
push
mov
cmp
mov
sub
jnp
dec
data16
ss
sbb
mov
sub
xchg
dec
fwait
sti
in
jmp
ret
jns
aam
ja
fld
jb
fwait
popf
mov
cmp
aas
mov
das
add
out
mov
adc
xchg
push
inc
mov
and
mov
xor
mov
mov
push
mov
loop
aaa
fdivp
fcomp
movs
adc
xchg
pop
ficomp
lock
jmp
mov
icebp
sbb
mov
push
rcl
out
mov
test
or
jp
cmp
fistp
lock
fmulp
mov
hlt
ds
mov
test
mov
pop
dec
sahf
aas
int
push
and
xchg
dec
add
dec
shr
xlat
adc
icebp
adc
stc
cld
jmp
mov
push
retf
push
not
inc
jecxz
pushf
xchg
adc
jl
lock
or
dec
or
mov
sbb
pushf
jge
add
enter
sub
jno
pop
and
pop
imul
inc
cmp
lahf
aad
mov
pusha
push
and
push
sbb
movs
pop
add
das
ss
std
cmp
fstp
dec
repnz
popf
ja
inc
je
iret
mov
cmp
mov
sub
aad
inc
cmp
inc
gs
fcomp
xor
stos
cmps
and
outs
or
int3
js
mov
lock
in
push
sbb
jne
cs
cmps
jl
jmp
popa
xchg
hlt
dec
or
sbb
in
pop
ja
rcr
jnp
push
sbb
adc
mov
push
ret
ret
push
lods
pop
xchg
mov
push
pushf
jb
push
stos
in
call
and
das
mov
shl
lock
loop
xchg
jp
jae
and
jno
xchg
dec
push
adc
popf
inc
in
jb
pop
xor
push
jns
xor
mov
xchg
aad
xchg
pop
push
pop
mov
in
mov
push
or
mov
lock
shl
aaa
fcom
push
xchg
test
in
fild
jge
pop
jo
xlat
nop
pop
jmp
dec
xchg
fild
or
fild
scas
stos
rol
mov
fstp
sub
out
ins
cwde
xor
lods
imul
retf
(bad)
sbb
pusha
pusha
cli
es
fdiv
fstp
push
xlat
jl
pop
pop
push
fisttp
cmc
in
outs
js
cmps
test
pushf
add
lods
lods
fnstcw
mov
int
or
retf
jne
or
sbb
xchg
loop
adc
cmp
xchg
dec
loopne
mov
mov
xchg
push
xor
ds
je
jnp
sbb
add
jae
xor
jns
adc
xchg
mov
repnz
ins
movs
stc
fdiv
jmp
in
cld
pop
out
push
pop
mov
jns
out
test
cmp
into
stos
les
out
cli
xor
shl
(bad)
adc
das
aaa
mov
add
add
mov
cmp
adc
push
xor
aas
das
cmp
push
xchg
in
sub
cld
xchg
shl
push
jge
jg
pop
stc
xchg
pop
inc
in
push
rcl
jl
sbb
scas
xor
gs
cmp
and
test
inc
sbb
pop
int3
jmp
loopne
dec
pop
mov
stos
shl
cmp
jb
xor
fisub
cs
movs
pop
(bad)
fmulp
push
in
imul
push
and
and
mov
push
add
fldenv
add
mov
add
push
push
fsubr
and
add
lds
(bad)
inc
pop
fisttp
shl
in
mov
jb
ss
xor
dec
sti
stos
ret
lea
sbb
cmp
std
sbb
aas
push
imul
sbb
pop
push
mov
ins
dec
mov
push
push
inc
fs
xchg
pop
int3
xor
and
addr16
jmp
ret
loopne
dec
push
cli
ins
push
call
jnp
lahf
test
cli
cmp
pop
cmp
push
daa
sti
leave
pop
aaa
dec
inc
adc
xlat
inc
aas
fist
mov
or
je
add
popa
lea
ins
(bad)
test
or
mov
lds
out
not
pop
fs
cmp
xchg
rcr
enter
dec
pop
bound
jge
mov
nop
adc
add
and
push
fcomp
fisttp
xor
repnz
push
in
and
cmp
call
sub
jb
das
pop
sub
and
es
and
adc
outs
jmp
repnz
(bad)
scas
jge
add
pop
push
(bad)
cmp
je
neg
bsr
popa
sbb
pop
pop
(bad)
mov
ficom
xchg
sub
f2xm1
push
int
sbb
lock
dec
mov
outs
sahf
cld
hlt
and
lods
fnstcw
adc
fs
pop
pop
gs
iret
xchg
sbb
add
push
pop
push
rcr
stos
dec
push
and
leave
fnstcw
cmps
ja
jmp
cmp
ficom
mov
xor
jmp
sbb
(bad)
mov
fist
mov
imul
idiv
jle
imul
sti
nop
(bad)
icebp
pop
jg
inc
ins
mov
inc
(bad)
gs
clc
lahf
gs
aam
pop
pusha
mov
jecxz
sbb
pop
mov
daa
xchg
fwait
std
mov
jns
call
ds
int3
popa
imul
pop
mov
int
mul
gs
xor
sub
rcl
sar
mov
lea
(bad)
aaa
enter
or
out
mov
sub
mov
ja
dec
add
jmp
sahf
les
aad
imul
not
mov
sbb
or
pop
and
popf
aas
push
(bad)
sar
push
call
add
xor
iret
push
cmp
push
ja
movs
add
cmp
into
mov
mov
(bad)
ret
mov
ror
fwait
inc
sub
mov
add
jmp
push
mov
sahf
aad
rcl
(bad)
sbb
ins
lock
lds
popa
jg
dec
mov
add
inc
in
push
pop
call
arpl
imul
adc
push
cmp
adc
out
div
test
adc
jo
(bad)
and
sti
or
mov
fild
(bad)
and
addr16
jecxz
mov
int
loop
retf
out
lahf
pop
loopne
sbb
aam
div
pop
jge
xchg
mov
mov
add
and
rol
int3
shl
mov
loope
mov
cwde
sti
mov
mov
mov
mov
mov
pop
ds
lahf
adc
sbb
clc
fcom
neg
jle
jb
stos
shl
pop
lds
mov
pop
push
pop
dec
push
mov
mov
fisttp
or
jmp
loope
popa
js
(bad)
adc
fist
dec
cdq
int
adc
neg
lea
mov
scas
inc
cwde
stos
pop
xchg
add
mov
dec
leave
aam
fst
into
in
and
push
mov
adc
stc
fcomp
jne
add
jmp
inc
sbb
sub
cmp
call
dec
fs
adc
add
mov
push
and
test
repz
mov
mov
aas
jmp
or
push
repnz
das
mov
push
loopne
out
jno
fdiv
iret
push
cmp
pop
dec
outs
adc
fst
aad
popf
retf
cmc
mov
dec
inc
aas
aaa
sub
xchg
jge
mov
sti
repz
clc
js
pop
test
in
pop
sub
inc
jmp
jg
dec
mov
ror
call
jp
mov
sbb
mov
jmp
fadd
cmp
cmovge
into
pop
std
dec
and
cwde
sbb
dec
adc
push
fbld
mov
cmp
out
push
and
pop
pop
fldcw
and
mov
push
lds
cmp
pop
mov
(bad)
aad
push
pushf
jnp
xchg
sbb
jno
mov
stc
ds
push
cmp
xor
dec
or
pop
jno
lahf
fs
add
(bad)
aaa
inc
and
xchg
sbb
mov
push
pop
jo
ret
adc
lods
scas
jmp
mov
test
or
out
mov
mov
xor
add
jb
and
stc
pusha
cmp
in
ins
enter
jae
adc
sub
jecxz
(bad)
shl
add
cmp
cmp
xchg
repnz
sbb
xchg
stc
popa
xor
sub
je
push
dec
stos
jns
imul
(bad)
in
fsubr
dec
call
rcr
(bad)
call
jae
repnz
lods
pop
pusha
xor
xor
pusha
ja
aam
cmp
mov
fwait
(bad)
cmp
and
das
scas
fwait
aam
call
jae
xchg
test
push
fidivr
cmps
rep
jle
cli
sub
scas
xor
sub
stc
jge
loop
or
into
je
push
fimul
rol
push
cwde
add
je
stc
pop
mov
cdq
xor
hlt
mov
push
sbb
xchg
enter
sbb
fadd
(bad)
jno
push
and
pusha
sbb
add
retf
mov
or
repnz
and
xchg
(bad)
lods
sar
dec
ins
push
mov
sahf
cmp
ins
pop
idiv
xchg
ja
pop
pop
xchg
sti
iret
or
ss
enter
out
dec
ds
je
ss
xchg
aam
push
push
sub
dec
jmp
sar
jle
inc
sbb
lods
inc
shr
lahf
jae
clc
pushf
cmp
dec
cmp
jl
cmps
pop
sbb
push
(bad)
aam
and
test
mov
enter
mov
mov
fwait
mov
mov
or
mov
retf
into
pop
sub
push
inc
lods
or
addr16
dec
jo
mov
adc
cmps
cmp
mov
jnp
(bad)
sub
dec
pop
sub
jmp
iret
mov
aad
mov
not
minps
mov
stos
xchg
sub
cdq
int3
jg
adc
cmp
test
lock
dec
jnp
push
sub
cmp
mov
pop
mov
fwait
jp
data16
int
ins
inc
sbb
test
stc
pop
xchg
test
aad
inc
push
sahf
fidiv
push
btc
std
mov
in
and
shr
mov
or
pop
sbb
mov
dec
jle
jmp
lock
repz
loope
ja
aaa
xchg
ins
and
dec
enter
or
cli
mov
and
cmp
jae
push
jle
mov
mov
fcom
xchg
or
leave
fcomp
imul
fisubr
sub
fstp
ret
inc
or
dec
cmp
sbb
xor
sbb
mov
xchg
or
mov
inc
or
pop
loope
les
lds
idiv
shr
shl
dec
nop
or
frstor
sub
add
cmp
test
and
arpl
xor
jmp
retf
mov
adc
fnstcw
mov
in
sub
jae
cmps
aam
jns
mov
mov
and
or
mov
dec
adc
xlat
adc
lea
ret
je
push
test
out
ja
movs
cmp
push
and
xor
js
sub
mov
enter
xor
and
repz
jbe
adc
sbb
test
and
loop
rcl
push
in
cmp
retf
push
fist
jecxz
rcl
inc
in
dec
mov
loopne
test
pop
mov
push
dec
and
mov
jnp
dec
adc
movs
xchg
sbb
jae
xchg
dec
popf
daa
cmp
das
mov
xchg
dec
mov
sbb
dec
out
sahf
pop
jns
aaa
and
sbb
add
inc
sub
in
and
mov
inc
jmp
fdivr
scas
mov
cmp
jge
test
sbb
push
fcom
outs
nop
movs
inc
call
fdivr
add
add
xchg
xor
sub
jp
push
(bad)
shr
and
sbb
lds
scas
fcmove
sbb
outs
dec
push
arpl
xor
outs
add
lods
cmp
jne
adc
dec
(bad)
jb
adc
(bad)
(bad)
xchg
add
mov
addr16
xchg
inc
retf
cmp
ret
rcl
dec
adc
sub
cmp
xor
jle
jmp
mov
adc
cmp
push
mov
retf
(bad)
in
push
push
cmp
cwde
pop
out
mov
mov
add
sub
xor
push
in
sub
mov
cwde
fwait
pop
xor
xor
lahf
dec
or
fld
pop
pop
js
mov
jmp
jg
xor
xchg
les
mov
jp
push
pop
mov
xchg
cmps
(bad)
or
or
imul
inc
mov
aam
es
mov
mov
mov
and
adc
xchg
rol
aam
data16
push
inc
adc
jbe
jl
call
mov
movs
fsub
shl
sub
add
mov
mov
mov
cmp
adc
stc
gs
loop
push
fiadd
das
and
ins
xchg
ss
and
mov
jne
(bad)
in
jae
mov
call
push
ret
mov
retf
fisttp
jne
rcl
cmp
cmp
and
add
jecxz
inc
mov
mov
aaa
jns
retf
retf
add
mov
mov
in
push
xor
add
das
and
xchg
mov
ja
aaa
sar
gs
add
mov
hlt
inc
fcmovbe
stc
cdq
push
mov
mov
popa
test
hlt
sub
mov
sub
rcr
clc
add
jg
pop
mov
sbb
iret
mov
and
movs
test
stos
lea
aaa
jge
lock
mov
(bad)
call
aad
pop
push
pop
pusha
dec
mov
push
sub
push
test
sub
in
js
out
push
leave
test
movs
push
fadd
jae
mov
movs
repnz
push
aas
inc
repz
retf
fisub
sub
mov
in
push
leave
ficom
jnp
mov
ins
mov
xlat
cdq
ins
mov
jno
sub
int3
retf
xor
movs
lahf
push
dec
pop
popa
mov
xchg
fldcw
add
dec
sub
and
or
or
scas
mov
retf
cmp
xchg
inc
push
sub
mov
mov
js
(bad)
cld
repz
jbe
add
inc
jmp
out
(bad)
fild
mov
(bad)
pop
ins
ins
push
cmp
xchg
xor
ja
push
push
or
push
mov
es
popa
inc
ret
inc
inc
push
and
push
scas
add
pop
stos
adc
mov
add
mov
jmp
test
or
adc
xchg
adc
jne
(bad)
push
mov
fld
cmps
sub
(bad)
cmps
xlat
or
imul
or
pop
jle
inc
or
pop
adc
lds
add
fwait
push
sub
popa
adc
nop
push
stos
loopne
fdivr
stos
sar
lea
push
stc
mov
fimul
add
rcl
mov
test
pop
into
lds
adc
mov
xchg
dec
ret
btc
pop
xchg
int
add
arpl
xchg
dec
pop
dec
cmp
dec
mov
mov
rcr
sbb
(bad)
es
bound
(bad)
out
mov
ins
(bad)
jmp
mov
dec
sti
xor
adc
xor
sub
adc
int3
dec
sbb
(bad)
jne
rol
ret
js
fldln2
es
dec
aam
jmp
fldenv
(bad)
jae
loop
setp
rol
mov
lods
cmp
in
out
xchg
push
mov
outs
add
imul
fs
mov
push
cs
out
out
xor
add
mov
adc
cld
pop
pop
sub
ins
sbb
jge
jb
leave
sbb
loope
push
push
daa
jecxz
ds
int3
add
jae
xor
pop
mov
jmp
jo
mov
mov
xor
xchg
mov
xchg
loop
mov
cmp
clc
lods
retf
pop
cdq
lds
arpl
ja
test
iret
sbb
sbb
movs
test
ja
pop
in
cmp
out
mov
cmp
es
fidivr
mov
bsf
arpl
sbb
add
jl
cmc
add
inc
sbb
xor
ins
xlat
mov
pop
test
inc
aam
pop
or
in
or
pop
rol
vmread
imul
das
fistp
add
aam
into
mov
mov
adc
arpl
pextrw
fidivr
jnp
daa
mov
daa
call
jae
xor
rol
xchg
pop
into
mov
xor
pop
or
shr
ins
shr
jbe
mov
add
jl
fsub
cmp
in
jno
mov
cmps
xchg
adc
mov
add
cmps
pop
jbe
dec
dec
shl
icebp
imul
cdq
add
fsub
adc
sub
jp
ds
and
add
jl
pop
mov
xor
push
iret
movs
inc
sub
fisubr
xor
pop
jnp
fst
mov
out
jno
pop
popf
xchg
outs
mov
and
loope
in
sahf
popa
rcl
stos
rcl
repnz
(bad)
dec
xor
sti
daa
(bad)
ds
cdq
sub
xor
hlt
sti
pop
(bad)
sub
mov
cmp
and
and
jge
xchg
dec
push
int
push
nop
(bad)
iret
ss
pop
pop
outs
xchg
push
sub
in
dec
js
out
mov
adc
sbb
aaa
(bad)
retf
xchg
push
sub
fidiv
mov
mov
das
push
inc
add
jbe
cmp
addr16
rep
cmp
pop
je
mov
je
adc
retf
cld
push
push
add
xor
out
jmp
jo
xchg
in
arpl
sub
xchg
adc
and
cmp
lahf
mov
xor
add
push
outs
add
jecxz
ret
call
jmp
ins
push
cmp
adc
stc
xor
out
jp
cmp
repnz
pop
xchg
out
jo
das
(bad)
dec
push
push
cld
popa
(bad)
push
sbb
push
adc
xor
xchg
mov
or
popf
ins
mov
fidivr
cmp
leave
xor
scas
mov
movs
stos
out
xchg
xchg
aaa
shl
mov
jmp
and
mov
cmp
mov
int3
cmp
ror
test
test
cmp
xchg
enter
out
shl
xchg
stc
lods
push
adc
sbb
popf
xor
daa
hlt
in
mov
sub
nop
pop
dec
test
fbstp
inc
clc
rol
(bad)
and
mov
into
loope
call
retf
fdivr
xchg
shr
icebp
push
js
rol
gs
lods
sbb
fwait
adc
xor
out
mov
xor
je
or
jl
popf
and
leave
stos
cld
mov
test
push
mov
add
popa
movs
leave
sub
xor
jmp
xchg
mov
mov
inc
cld
or
lahf
outs
mov
in
jmp
xchg
ds
jmp
aas
jb
mov
jns
jae
dec
sar
sbb
push
and
mov
dec
or
mov
inc
mov
mov
add
inc
jp
repz
sub
push
add
push
sub
mov
(bad)
mov
fidiv
aad
stc
mov
add
jle
pop
xor
mov
ss
pop
or
aaa
int3
or
xor
out
or
xlat
test
xor
arpl
outs
pusha
mov
jg
fild
leave
mov
repnz
inc
outs
data16
aas
pop
and
movs
xchg
lods
ret
mov
xchg
sub
xchg
push
jp
push
test
lahf
(bad)
mov
data16
push
sbb
mov
mov
jge
mov
pop
mov
cld
nop
das
xchg
mov
imul
adc
dec
pusha
cli
jl
call
(bad)
push
mov
cmp
mov
adc
stc
out
mov
mov
stos
sub
or
sub
pop
sti
dec
xchg
sbb
retf
ret
arpl
sub
inc
loop
mov
add
lods
adc
(bad)
jecxz
jno
or
outs
push
sbb
jg
out
lods
mov
in
inc
stos
test
les
(bad)
es
cmp
xchg
and
xchg
pop
or
adc
ins
inc
xor
les
call
retf
call
pop
jo
movs
jecxz
in
std
dec
jns
dec
lods
push
fbstp
pop
xchg
push
(bad)
sub
mov
xor
ja
sub
push
out
ins
retf
or
xor
les
mov
mov
imul
outs
xchg
(bad)
mov
adc
add
into
cmp
aas
inc
lock
xor
pop
or
push
sbb
(bad)
mov
add
aaa
in
adc
test
cwde
jns
mov
push
xor
or
mov
call
in
pop
mov
jo
push
arpl
cld
sbb
add
xor
jae
dec
test
sbb
xor
and
sub
mov
mov
ins
add
mov
sub
jmp
(bad)
cmp
and
pop
mov
adc
mov
sub
pop
push
mov
pop
inc
bound
repnz
sub
in
jmp
out
push
test
push
adc
adc
push
xor
mov
add
stc
in
xchg
mov
cmc
loope
mov
loopne
xor
mov
mov
std
xor
dec
shr
ret
leave
in
int
std
push
jnp
js
out
fdivr
push
inc
lods
jg
mov
push
das
pop
les
in
mov
imul
ret
aad
ror
push
xor
mov
les
jl
xchg
xor
adc
movs
mov
je
cli
adc
test
or
loope
test
jno
in
aaa
xchg
adc
jmp
adc
sar
fistp
pop
jns
mov
shr
lds
pop
sub
adc
or
jmp
cmp
push
mov
mov
sub
arpl
scas
jp
xchg
jecxz
out
dec
push
out
das
(bad)
stc
(bad)
xchg
mov
test
pop
sahf
ja
jmp
cmps
mov
push
loop
shl
jnp
out
push
out
sbb
push
mov
or
aaa
add
push
push
jge
add
imul
push
fs
add
jp
sub
mov
push
adc
das
pop
fwait
pop
cmc
inc
jle
loopne
inc
ss
push
cmp
rol
adc
and
mov
jg
xchg
retf
mov
dec
sbb
ss
xor
je
push
mov
addr16
hlt
loop
pop
sub
loope
jmp
cmp
push
push
sub
pop
scas
call
add
xchg
bound
ja
sbb
out
not
push
stos
pop
mov
push
es
aam
scas
mov
stos
push
push
(bad)
in
sti
cmps
repz
icebp
outs
mov
pusha
push
xchg
stc
pushf
inc
ja
pop
jo
jg
out
mov
movs
xor
nop
push
outs
(bad)
hlt
dec
mov
sub
jne
inc
aad
and
iret
jbe
inc
jmp
xor
js
cwde
jns
or
push
in
fnstcw
mov
push
mov
push
in
sti
cmp
mov
and
pop
push
inc
sbb
movs
jle
out
inc
mov
adc
xchg
rol
ret
xchg
inc
pop
jns
fiadd
inc
outs
add
sbb
bound
xchg
and
mov
mov
adc
cmp
sbb
push
movs
push
lock
inc
add
xchg
sub
jl
nop
loopne
mov
lods
and
inc
mov
mov
push
xchg
xchg
fwait
mov
outs
ins
pop
jecxz
xor
rcl
add
push
sbb
div
cdq
lahf
cmps
inc
mov
jle
out
iret
call
ss
push
call
int3
popaw
pop
mov
sbb
dec
xlat
or
mov
mov
fst
dec
in
out
jae
test
fucomi
push
cmps
mov
inc
push
dec
outs
test
mov
or
call
mov
pop
arpl
and
xor
sub
hlt
xlat
xchg
scas
ja
jae
sbb
ror
cmp
jnp
pop
repnz
repz
add
adc
dec
sbb
jnp
xchg
adc
(bad)
aaa
push
cmp
jp
push
cli
lds
(bad)
hlt
mov
pushf
js
in
jge
jae
push
push
cmps
or
push
adc
cmp
mov
leave
cdq
sub
cli
mov
pop
movs
jp
or
popf
lods
mov
jl
std
(bad)
cs
xchg
fs
jbe
pop
mov
imul
daa
inc
mov
jbe
(bad)
mov
retf
jp
call
lahf
lods
inc
mov
push
cwde
add
mov
fcmovu
mov
rcr
stc
bound
fstp
jb
mov
loopne
repnz
pushf
inc
xchg
sbb
mov
add
pop
inc
test
(bad)
push
shr
fwait
xchg
xor
or
dec
or
mov
lea
out
ins
dec
inc
(bad)
pop
mov
mov
into
sbb
xlat
mov
push
cli
aas
test
push
retf
rcr
mov
xchg
and
jns
rcl
int3
outs
push
shr
mov
or
inc
outs
fnsave
jl
in
repz
jg
fwait
add
std
or
imul
or
in
pop
pop
sbb
pop
or
and
or
stos
rcr
mov
call
in
repz
inc
and
loope
sti
push
(bad)
retf
adc
clc
fld
cmp
test
pop
in
adc
pop
loopne
(bad)
mov
jp
sub
inc
cmp
leave
retf
outs
(bad)
retf
xchg
fmul
ja
pop
loope
mov
cld
iret
hlt
rcl
pop
and
mov
aaa
fsubr
push
dec
or
cdq
sbb
sub
(bad)
mov
push
lahf
enter
(bad)
movs
imul
mov
mov
dec
add
stc
leave
jbe
jbe
retf
out
xchg
int3
mov
outs
or
mov
and
add
js
xlat
loopne
call
(bad)
xchg
leave
pusha
mov
call
iret
fld
pop
lahf
(bad)
outs
adc
jecxz
pop
addr16
out
fwait
in
int3
out
mov
call
sub
dec
call
enter
mov
movs
clc
sar
loopne
cmps
pop
gs
(bad)
pop
aas
enter
push
xchg
enter
popa
pop
popa
sub
adc
and
mov
cmps
or
sbb
mov
xor
inc
xlat
xor
scas
rcl
rsqrtps
push
fnstsw
shl
test
fimul
mov
jne
xor
mov
xlat
aas
loop
push
jne
call
nop
cmps
(bad)
mov
addr16
cmps
cli
dec
sub
sub
pop
pusha
ret
out
popa
cmp
addr16
fs
pusha
jle
mov
retf
cdq
mov
ficom
aas
mov
push
adc
push
out
mov
xor
mov
push
in
xchg
jo
mov
mov
and
push
std
sub
fild
dec
inc
ret
push
inc
xor
inc
adc
movs
xchg
retf
adc
push
aad
sbb
popa
loopne
mov
sub
inc
fistp
mov
cmps
ja
add
es
mov
mov
jp
call
xchg
or
push
mov
rol
fdivr
sub
mov
sbb
jmp
jmp
out
and
lods
rcl
in
test
dec
scas
outs
(bad)
das
fs
ss
xchg
pop
or
shl
pop
fisubr
sbb
ud0
add
jbe
call
cmps
lock
rol
cmp
jo
xor
pop
out
mov
push
fwait
inc
(bad)
movs
imul
hlt
test
push
aam
sahf
jae
mov
stos
xchg
jno
ins
ret
js
adc
call
shr
jle
outs
movs
adc
imul
push
scas
in
imul
(bad)
xchg
addr16
div
jmp
repz
stos
loop
jecxz
mov
push
or
sub
(bad)
push
add
mov
sub
pxor
cmp
rol
add
inc
add
cmp
lea
xchg
nop
mov
inc
repz
xchg
retf
mov
mov
jae
dec
jo
xor
inc
or
inc
add
and
adc
mov
jg
push
and
es
inc
ror
push
push
inc
mov
xchg
jp
fdiv
jl
add
fist
in
pop
in
mov
pop
xchg
scas
pop
jmp
inc
test
dec
imul
mov
dec
pop
nop
lods
cld
in
ins
or
push
(bad)
mov
in
out
imul
pop
lea
sbb
xchg
jmp
dec
sbb
mov
mov
lods
pop
pusha
cmps
int3
sub
scas
pop
inc
inc
ror
pop
sub
in
add
cmp
arpl
mov
xchg
adc
les
lock
div
push
lea
sub
lods
not
std
rol
push
jo
push
jno
mov
jnp
cli
int3
icebp
inc
mov
pop
ficomp
mov
out
stos
loopne
movs
or
data16
loop
push
in
(bad)
mov
out
stos
movs
pmuludq
or
pop
or
fs
pop
out
xchg
and
iret
push
xchg
sbb
or
outs
shl
ja
retf
dec
mov
in
xchg
mov
dec
pushf
shl
je
sub
ins
push
jmp
and
aas
fld
jp
push
fld
push
jno
push
addr16
xchg
cmps
(bad)
js
popa
movs
xchg
inc
pop
mov
les
mov
(bad)
fwait
push
push
mov
adc
retf
stc
fwait
sub
mov
shr
lahf
mov
xchg
rol
rcl
mov
dec
xor
outs
jmp
retf
sub
mov
jecxz
lahf
cmp
int3
mov
inc
xchg
or
mov
jb
sahf
dec
ss
outs
sbb
imul
je
add
push
pop
hlt
cmp
cmps
stos
dec
ds
cli
shl
ins
ss
add
mov
ins
movs
xor
xor
lock
mov
dec
imul
scas
popf
and
xchg
mov
movs
sub
dec
pop
add
mov
mov
sbb
pop
jnp
aad
les
inc
fbld
iret
repnz
loopne
cmps
pop
call
pop
iret
hlt
rcr
xor
popf
dec
leave
cmc
bound
adc
fstp
(bad)
sbb
call
mov
imul
cmp
and
pop
fistp
cmp
imul
ret
cmp
jns
in
add
inc
test
push
xchg
push
fld
mov
xor
cdq
loop
std
dec
js
es
dec
aam
mov
sub
inc
xor
cdq
pop
popa
mov
or
(bad)
pop
dec
cmp
and
inc
out
fist
mov
ins
mov
aad
sub
adc
cmp
mov
fadd
int
imul
fs
shr
sti
into
cdq
add
lods
xchg
or
out
push
out
or
cmp
mov
out
push
xor
icebp
or
rcl
sub
fsub
push
or
mov
mov
(bad)
lock
dec
mov
cmc
lds
stos
jae
xor
jmp
add
pusha
(bad)
push
dec
ret
mov
popa
cmp
ffreep
adc
sbb
jns
xor
jg
movs
sub
push
lock
aam
or
or
add
xor
fbld
sub
mov
imul
stos
(bad)
scas
lea
push
xor
add
push
and
mov
xchg
dec
dec
dec
cmp
jl
mov
push
or
adc
xchg
xchg
inc
vmovlpd
mov
sti
vmread
pop
cwde
or
and
adc
imul
inc
sti
mov
nop
adc
sub
and
add
pushf
lea
mov
lock
shl
inc
ficomp
test
mov
clc
loopne
pop
das
clc
iret
pop
push
int
repz
push
jl
jecxz
cmp
retf
push
bound
inc
adc
sar
lods
mov
fsub
or
pop
out
test
pop
mov
jp
je
pop
enter
mov
ror
mov
xor
std
mov
pop
cmp
imul
and
dec
adc
xor
and
stc
addr16
pop
stc
mov
pop
(bad)
loopne
fbstp
push
fadd
mov
shl
bound
add
rol
rcr
pop
mov
sahf
xchg
dec
xlat
xchg
add
out
scas
loop
push
push
repnz
call
jmp
fisttp
mov
pop
inc
repnz
cmp
in
adc
mov
jb
sub
nop
test
and
loopne
daa
ss
mov
jbe
(bad)
fs
lea
mov
(bad)
outs
inc
lods
adc
ficom
cmps
pusha
(bad)
pop
test
mov
enter
adc
pop
jno
pop
scas
enter
xchg
ins
loope
std
arpl
or
inc
push
push
jae
stc
mov
nop
mov
popa
inc
push
xchg
lock
mov
sub
fistp
mov
(bad)
push
or
adc
mov
push
xor
aaa
push
dec
rol
jo
ltr
into
dec
lods
fcomp
ret
js
sub
push
or
jl
in
jmp
push
adc
add
out
pop
jg
(bad)
aam
mov
sbb
std
addr16
adc
mov
lahf
inc
push
jl
out
mov
push
sbb
or
bound
adc
call
jecxz
jle
sahf
dec
sub
dec
xchg
(bad)
pop
inc
lds
out
add
or
xchg
dec
sbb
mov
outs
shl
or
icebp
or
ret
ret
call
lods
xchg
inc
test
mov
pushf
ror
je
mov
mov
jmp
mov
add
lods
xchg
aaa
sub
dec
imul
(bad)
aad
dec
inc
mov
cmp
mov
js
nop
stc
cmps
mov
mov
xlat
xor
pop
(bad)
fisub
mov
ins
dec
pop
and
out
sbb
or
call
pop
out
mov
pop
mov
scas
in
sub
cmp
dec
mov
cmp
lods
dec
sahf
test
sub
inc
pop
jmp
(bad)
fs
jmp
sar
or
mov
push
inc
ins
mov
jle
push
xlat
mov
push
stos
clc
idiv
mov
dec
jl
les
retf
adc
xor
inc
mov
cmp
das
mov
jns
push
and
jnp
lea
cli
inc
test
mov
dec
(bad)
mov
imul
pop
movs
jp
cmp
call
(bad)
jo
call
aad
and
sub
popa
shl
and
sbb
(bad)
rcl
popa
push
sahf
dec
xchg
or
mov
sub
ret
or
push
mov
std
leave
retf
xchg
push
loopne
mov
cmp
and
mov
dec
movs
xor
inc
cmp
es
mov
cmp
gs
pop
and
in
and
aas
aas
comiss
fs
mov
shld
jnp
nop
pop
(bad)
sbb
push
mov
not
jle
xchg
pusha
jp
mov
arpl
pop
dec
pop
hlt
lods
push
call
(bad)
jb
mov
inc
jbe
cmp
hlt
pushf
mov
popf
inc
fwait
adc
mov
xlat
dec
inc
call
fs
jle
je
mov
(bad)
jge
xor
cmp
fwait
ss
test
inc
push
mov
and
mov
xchg
scas
mov
lock
sub
outs
das
fstp
rcr
mov
cmps
not
inc
(bad)
sbb
push
pop
or
jbe
es
mov
imul
mov
retf
sub
and
ret
fnstcw
imul
mov
popf
sahf
mov
sbb
stos
jmp
call
add
inc
sbb
test
jp
lods
push
or
das
imul
push
sahf
fdivr
aam
fiadd
jl
imul
dec
adc
shl
div
in
mov
lods
(bad)
pop
addr16
rcl
dec
pop
mov
stos
out
(bad)
adc
leave
push
jb
movs
lods
mov
ss
jbe
jns
or
cmc
jecxz
pop
xor
cs
fimul
enter
sbb
adc
jb
adc
int
je
jl
pop
test
adc
sbb
mov
ds
and
sub
cld
mov
mov
cld
icebp
mov
xlat
fld
out
xor
loop
ins
adc
jns
movs
dec
mov
sub
xchg
das
fcomp
std
popa
xchg
pop
aas
push
sub
adc
ss
push
sub
push
and
cld
jge
xlat
hlt
cmps
leave
sti
ficomp
cmp
clc
aad
dec
sahf
in
retf
jmp
xchg
shl
(bad)
sub
and
(bad)
dec
jmp
push
out
push
jnp
pop
xchg
cmps
mov
ins
inc
push
adc
mov
loopne
(bad)
xchg
ret
and
rcl
cmp
xor
imul
(bad)
imul
add
xor
data16
ins
lock
xchg
into
fcomi
aas
push
push
mov
mov
mov
inc
mov
ror
mov
fwait
cwde
pop
push
lods
push
das
mov
push
push
loope
lods
sub
shl
jl
test
xchg
out
mov
pop
enter
xchg
(bad)
ret
push
mov
cmp
(bad)
xor
icebp
test
push
inc
jmp
stos
cmps
repnz
mov
jecxz
lea
test
inc
add
imul
mov
fnstcw
mov
hlt
fcom
ror
add
sahf
xlat
mov
pop
inc
jno
retf
mov
mov
(bad)
out
xor
retf
xor
mov
pop
push
sahf
inc
fistp
(bad)
adc
(bad)
fstp
xor
js
in
xlat
test
mov
daa
pushf
pop
ret
clc
xor
mov
pop
pop
ret
aam
jge
test
call
int3
mov
ins
icebp
ins
sbb
mov
pop
jmp
test
idiv
fidivr
or
jbe
cmps
and
imul
jg
rol
mov
push
add
loopne
xchg
bound
jle
loopne
retf
nop
into
jecxz
xor
aaa
xor
push
ficomp
es
xchg
out
imul
add
dec
cmc
add
ret
push
scas
fisttp
pop
cld
shr
push
sbb
cs
inc
outs
loope
adc
dec
pop
imul
cmp
cmp
out
inc
or
and
movs
jb
xchg
sahf
and
mov
jl
or
aad
push
dec
ds
call
sub
outs
ins
int
mov
inc
out
in
mov
cs
or
inc
push
push
into
pop
into
inc
pop
and
fs
cmp
les
dec
mov
(bad)
test
jne
std
fwait
out
xchg
int
dec
in
xor
data16
jo
fsub
mov
nop
stos
mov
add
pop
enter
test
push
fistp
and
mov
fcmovne
stos
shr
leave
cwde
jmp
in
stos
add
mov
js
pop
repz
adc
adc
adc
add
mov
sbb
jns
fimul
inc
cli
les
xor
push
xor
jmp
call
jp
and
dec
adc
mov
cmp
in
into
(bad)
cmps
push
cmp
add
inc
add
sbb
popf
ins
outs
mov
dec
shld
out
xchg
out
stos
jo
add
(bad)
sahf
es
sub
(bad)
call
sbb
je
fdivr
enter
adc
pusha
pusha
das
aam
test
xchg
rep
jmp
loope
ins
popf
jmp
mov
leave
(bad)
sub
push
lds
stc
jle
lds
mov
mov
pop
pop
or
out
movs
(bad)
or
test
xlat
dec
xor
out
inc
cmp
jmp
out
dec
mov
jno
gs
clc
sub
cmp
jp
dec
cmp
xor
or
jnp
push
mov
mov
sahf
ds
je
daa
iret
cmp
sar
test
rcl
mov
or
inc
jb
gs
or
jmp
leave
push
dec
ins
push
shl
inc
mov
lock
dec
sub
dec
sub
outs
call
mov
cmp
jns
fnstenv
xchg
sahf
jno
mov
or
mov
dec
inc
outs
jp
cmps
dec
xchg
aas
mov
and
(bad)
mov
mov
jge
sub
(bad)
lods
or
push
shr
jle
fidivr
call
push
aam
jle
imul
pop
in
scas
mov
lods
fisttp
xor
pop
xchg
(bad)
movs
repnz
sub
and
sbb
in
vpsubq
inc
data16
adc
xor
mov
mov
in
sub
jge
fmul
jmp
(bad)
jp
sbb
out
push
dec
fcomip
pusha
ins
jae
les
push
lods
sub
adc
sahf
fadd
mov
int
jb
add
pop
ja
and
mov
adc
loop
push
aam
xchg
gs
jle
sbb
mov
cdq
call
pushf
add
inc
data16
sbb
outs
repz
xchg
sahf
data16
shr
outs
sub
(bad)
fwait
lods
inc
sahf
fcomp
out
cmp
pop
test
lds
xchg
jno
pusha
mov
test
mov
outs
push
add
mov
pop
lods
outs
mov
lock
aas
ror
idiv
test
sub
(bad)
mov
or
test
push
mov
fs
push
pop
mov
add
jnp
adc
or
sbb
aaa
sub
inc
or
dec
enter
repnz
adc
mov
or
rcl
out
add
pusha
fcmovne
jo
mov
or
lds
int3
mov
mov
ja
mov
inc
scas
sub
mov
jecxz
add
mov
rcl
fs
lahf
fild
loope
ja
mov
adc
shl
adc
mov
add
inc
mov
mov
xchg
fidiv
in
jmp
inc
inc
push
in
and
cmp
sub
mov
add
ja
int
icebp
jp
mov
imul
fcom
in
jmp
cmp
cmp
cmp
test
outs
idiv
xchg
pop
sbb
(bad)
inc
mov
inc
(bad)
mov
stos
aas
and
mov
into
pop
out
dec
xor
xchg
cld
xor
mov
dec
push
cmp
pop
push
jnp
sahf
mov
ins
xchg
ss
sub
xchg
iret
icebp
scas
addr16
std
cdq
test
cld
xor
mov
inc
mov
(bad)
add
es
push
fwait
push
jg
sbb
mov
adc
inc
int3
push
sbb
(bad)
pop
mov
jo
inc
into
mov
xchg
sub
inc
dec
or
inc
test
sub
push
push
std
mov
mov
imul
xchg
fstp
pusha
add
clc
in
jo
sbb
jb
xchg
imul
jle
loopne
ins
xchg
(bad)
sahf
sub
and
cmp
jecxz
call
bound
xor
mov
xlat
jb
(bad)
pop
fiadd
cmps
test
cmp
adc
js
mov
inc
ins
mov
add
push
push
sahf
in
inc
sub
sub
int3
xchg
xchg
mov
lds
cmp
mov
ss
ins
(bad)
(bad)
sub
(bad)
add
push
pop
pop
mov
icebp
lea
add
push
or
xor
daa
(bad)
movs
sbb
mov
dec
push
mov
xchg
xor
jg
adc
and
movs
push
push
arpl
int
jae
mov
xchg
jecxz
xchg
fadd
or
retf
xchg
push
test
movs
sub
cmp
shl
ret
push
mov
arpl
inc
and
fwait
adc
and
and
adc
xchg
jo
xchg
dec
ins
dec
sub
sbb
push
jg
pusha
data16
mov
je
repnz
in
ret
dec
neg
out
add
mov
sub
(bad)
ret
dec
mov
aas
dec
cld
xchg
outs
inc
fist
sbb
arpl
or
outs
into
mov
cmp
aam
icebp
(bad)
xor
test
cmp
sbb
sub
sbb
arpl
pop
popf
setno
fld
mov
sub
jmp
enter
lods
add
pop
mov
cdq
mov
(bad)
sub
adc
cmp
push
dec
mov
icebp
inc
dec
imul
mov
scas
aam
mov
pop
out
mov
sar
mov
ds
rol
sahf
mov
ds
push
xchg
fdiv
arpl
sbb
and
mov
pushf
sahf
aam
inc
or
add
imul
mov
mov
cmps
or
es
mov
inc
sahf
xor
push
sbb
sub
jo
call
and
aad
and
inc
aam
jmp
add
(bad)
jmp
sub
mov
mov
int3
loope
mov
bound
dec
loop
mov
xchg
enter
dec
cmps
jle
push
xchg
dec
inc
cs
scas
ss
jp
push
punpcklbw
mov
out
push
cmc
stc
in
add
sbb
popf
test
pop
lods
xchg
dec
cli
cmps
movs
jmp
mov
or
xor
int
sti
push
cmp
mov
xchg
and
dec
out
test
jns
sub
pop
pop
inc
push
pop
mov
shl
lea
dec
shl
inc
mov
loopne
popf
leave
cdq
cmp
arpl
jp
xchg
imul
push
lahf
ins
movq
loope
mov
jp
pushf
jmp
hlt
sbb
mov
and
lea
xchg
xchg
or
movs
dec
inc
add
dec
inc
add
cmc
sub
or
(bad)
jns
neg
mov
loopne
ins
(bad)
cld
out
xchg
mov
and
cmp
adc
mov
lods
mov
pop
inc
and
dec
sub
ret
sub
sbb
daa
add
outs
arpl
jg
adc
sbb
loopne
ja
scas
xchg
dec
fadd
(bad)
sub
adc
add
cs
cmp
stos
push
add
mov
fs
int
ds
in
std
cmps
sahf
clc
ficomp
retf
adc
push
pop
push
mov
hlt
xlat
fnstcw
pop
sahf
popa
stc
mov
pop
popf
sub
adc
test
in
jmp
and
or
shr
adc
js
mov
test
push
test
or
jl
jmp
iret
mov
shr
dec
lods
dec
xchg
dec
pop
dec
leave
enter
and
mov
jnp
scas
leave
xchg
aad
fiadd
xchg
sbb
imul
cmps
add
or
(bad)
cli
inc
es
lock
push
imul
inc
sub
jle
ficomp
dec
out
pusha
dec
popa
aad
cli
or
sbb
sbb
fnsave
and
and
stos
jmp
enter
ss
dec
add
cli
cmps
into
and
xor
in
pop
(bad)
or
retf
xchg
pop
jg
out
push
pusha
data16
test
lea
lods
int3
sub
dec
xor
movs
hlt
mov
inc
arpl
call
and
jg
les
leave
aas
adc
inc
clc
mov
pop
(bad)
dec
movs
dec
cmp
mov
and
dec
push
test
out
and
sbb
and
es
mov
cdq
shl
repnz
pop
sub
pop
mov
dec
mov
cmc
cmp
sub
call
mov
fiadd
xchg
out
pop
pop
mov
or
sets
push
lahf
jbe
push
sti
mov
je
cmp
sbb
and
jge
ret
push
pop
push
dec
pop
push
scas
cmp
xchg
jle
xor
loopne
rcr
in
xchg
or
mov
ss
mov
xor
hlt
xchg
xor
jno
dec
sbb
out
xchg
lea
dec
push
cmp
jp
inc
sub
addr16
out
push
xor
inc
adc
in
mov
jecxz
dec
leave
rcr
imul
out
cmp
and
retf
pop
sti
xor
das
sbb
mov
sbb
pop
ror
cmp
and
arpl
pushf
addr16
sub
outs
hlt
jmp
lds
pop
push
movs
mov
jmp
xchg
test
mov
pop
cmp
lock
(bad)
lock
bound
pop
jmp
aad
xor
or
jl
or
mov
pop
arpl
stos
enter
mov
ins
cmp
and
inc
test
mov
sub
mov
loope
ret
and
mov
jo
shl
inc
mov
dec
xor
or
mov
fcmovu
push
out
mov
mov
sbb
push
push
pop
mov
mov
push
push
mov
daa
call
fld1
or
std
cmp
push
je
xor
mov
int
mov
cmps
inc
sti
xor
call
add
xchg
icebp
sahf
ins
and
add
mov
push
mov
and
or
fsub
daa
(bad)
addr16
mov
xchg
rcl
sbb
test
sub
cld
push
and
and
add
sub
and
adc
inc
mov
clc
cli
mov
imul
sub
fs
jmp
cmp
xor
scas
fs
loop
cwde
jl
aaa
ret
xor
jmp
xchg
mov
mov
ins
sub
xlat
jb
adc
inc
dec
inc
ss
hlt
mov
adc
jae
test
pop
pop
lahf
pop
jge
jns
das
pop
movs
mov
inc
repz
adc
mov
inc
icebp
loopne
xor
(bad)
adc
add
cmps
test
add
jg
(bad)
rcr
mov
enter
fldenv
retf
arpl
out
sbb
int3
jbe
gs
xor
sub
mov
xchg
sbb
lds
dec
inc
inc
mov
xchg
nop
push
(bad)
std
icebp
popa
aam
setle
iret
imul
mov
pop
jnp
neg
sti
pop
sti
pop
or
call
rcr
sub
sbb
xchg
aaa
ss
test
test
inc
mov
cmps
sbb
mov
xor
dec
and
mov
test
xchg
inc
or
lock
xchg
scas
in
cmp
cs
je
lock
inc
movs
int
push
dec
push
(bad)
mov
xchg
mov
test
pop
dec
les
jecxz
in
pop
lods
cmp
dec
imul
fisubr
add
jae
mov
mov
xchg
popa
aad
xchg
push
mov
in
jle
inc
scas
mov
dec
sub
lods
mov
pop
das
inc
xor
fild
(bad)
cld
and
out
out
fistp
inc
popf
mov
pop
ins
in
cli
push
mov
ins
dec
pop
jno
scas
cli
or
sbb
aad
arpl
je
out
xchg
pop
scas
pushf
jmp
movs
or
push
das
arpl
loope
ins
jb
jb
mov
aad
popa
sub
out
(bad)
les
and
scas
add
inc
jae
pop
dec
adc
add
outs
sub
push
sar
jp
mov
gs
ja
adc
mov
jnp
lods
cli
ret
test
idiv
xor
(bad)
mul
dec
(bad)
data16
xor
inc
fld
leave
test
mov
xchg
(bad)
call
mov
mov
push
jg
xchg
adc
fwait
sub
test
xor
add
push
in
mov
cmc
shl
jge
rol
sub
imul
movs
aas
mov
mov
push
adc
stc
(bad)
fld
mov
in
dec
test
inc
xlat
fwait
cmp
xchg
cmp
pop
mov
(bad)
cwde
test
fldcw
dec
in
mov
imul
sub
dec
rol
movs
jle
mov
ret
and
cmps
(bad)
push
popa
popf
loopne
in
shl
pop
jae
data16
fild
xor
push
inc
and
in
imul
adc
lahf
jb
xchg
gs
mov
sbb
jnp
dec
dec
cmps
xchg
adc
shr
mov
stos
push
(bad)
inc
ror
nop
cld
fmulp
imul
xchg
or
out
pop
(bad)
mov
cmp
mov
into
fidivr
sub
jns
mov
mov
and
cmp
mov
test
add
or
mov
cs
cmp
cmp
adc
hlt
dec
mov
fs
jmp
neg
daa
jp
push
ficom
int3
mov
push
jecxz
xor
mov
std
lock
(bad)
std
ins
mov
test
xor
jb
outs
xchg
sbb
lods
das
cmp
dec
push
or
mov
arpl
lods
mov
punpcklwd
push
out
add
leave
fwait
mov
fst
add
and
outs
ficomp
jno
daa
push
loope
dec
out
cmp
popf
pop
and
xor
outs
adc
pop
(bad)
fadd
shr
cs
cmps
aaa
adc
sub
cmc
shl
(bad)
mov
mov
sub
pop
sub
retf
push
pushf
call
mov
mov
(bad)
popa
fcom
xchg
push
ret
movs
lock
xor
inc
ror
jmp
push
sahf
jg
xchg
pop
cmp
inc
leave
loope
add
cmp
pusha
(bad)
jmp
sti
xchg
inc
arpl
push
push
test
outs
retf
cdq
stos
add
loope
pop
test
and
call
mov
cdq
push
jle
sti
gs
mov
inc
test
rcr
inc
xchg
leave
xchg
rcl
pop
dec
frstor
sbb
push
inc
and
sbb
shl
jle
hlt
xor
pop
mov
enter
jge
add
enter
xchg
lods
mov
mov
stos
imul
out
dec
fsub
sub
stos
xchg
dec
loopne
mov
out
inc
fimul
cmp
mov
shr
jecxz
jg
bound
add
mov
mov
pusha
stc
aaa
pop
lea
jp
fisubr
xchg
add
imul
ins
adc
mov
mov
cmp
sub
mov
outs
dec
dec
imul
push
scas
outs
push
cwde
push
in
adc
ficomp
or
fdivr
jb
nop
das
inc
jg
mov
pop
pop
mov
fadd
sbb
or
xchg
xor
push
outs
call
add
dec
inc
adc
pop
popf
or
aas
dec
sbb
mov
leave
fwait
sbb
xor
xor
mov
add
test
pop
repnz
push
xchg
mov
mov
es
and
lods
mov
retf
lds
add
push
or
ins
jbe
xchg
jg
call
es
mov
jp
lea
dec
mov
(bad)
xlat
dec
adc
pushf
sub
mov
jle
pop
sub
aaa
cmp
rol
scas
fdivr
call
test
xor
sbb
cmps
cmp
dec
shl
mov
daa
sub
mov
mov
les
cmps
mov
rcl
imul
int
xchg
inc
cs
sub
es
cmps
lods
(bad)
or
ins
sbb
inc
push
mov
pop
and
cmps
dec
mov
(bad)
mov
pop
in
or
push
iret
push
jbe
es
(bad)
jb
jge
pop
mov
gs
aaa
movs
or
adc
sub
ins
cld
out
adc
fadd
imul
push
and
test
cmc
push
pop
scas
mov
dec
data16
iret
sub
(bad)
mov
bound
lods
xchg
std
xor
sub
shr
mov
or
mov
and
fdivr
out
inc
xchg
fistp
mov
adc
inc
(bad)
xchg
add
xlat
pop
mov
jmp
sub
aad
(bad)
push
cwde
push
and
mov
add
adc
std
xchg
fistp
fdiv
jp
loope
test
cs
pop
ror
cmps
ds
or
sbb
movs
cmp
retf
dec
data16
retf
shl
pop
data16
in
(bad)
fsubr
cmps
sbb
leave
or
xchg
cs
fisttp
js
cmp
add
dec
int
sbb
leave
inc
loop
fisttp
adc
std
loop
test
mov
mov
leave
outs
cmps
pop
test
sahf
adc
lds
les
std
into
adc
es
unpcklps
std
int3
retf
pop
mov
movs
pop
add
out
neg
js
add
xchg
sbb
fwait
aad
aas
cmp
call
data16
arpl
add
adc
mov
pop
sbb
les
mov
or
cmp
mov
add
sbb
pop
push
add
ja
cwde
and
daa
push
xchg
mov
jmp
add
ins
(bad)
fucomp
fst
mov
mov
fs
in
call
loopne
rcl
in
enter
sub
mov
ins
push
lock
mov
frstor
pop
arpl
xchg
fwait
cs
cdq
pop
int
cmp
add
pusha
fiadd
mov
and
push
mov
xor
aas
xor
mov
pushf
jnp
pop
ss
or
repz
sub
push
std
jl
xchg
mov
shr
test
pop
mov
or
xchg
loope
mov
inc
jmp
jno
pop
sub
jg
pop
jb
or
jmp
sti
psubsb
(bad)
and
cmp
pop
jg
xor
jo
not
repz
lock
mov
or
pop
das
add
adc
int3
mov
bound
or
jge
and
mov
pop
xor
jmp
mov
mov
jae
mov
loopne
adc
cdq
mov
in
sahf
imul
push
push
push
xor
inc
retf
add
mov
(bad)
xchg
pop
inc
jmp
mov
faddp
push
add
jne
xlat
imul
movs
js
repnz
movs
add
call
imul
dec
outs
xor
jne
pop
sub
ror
or
(bad)
dec
repnz
xchg
scas
rcr
retf
int
and
outs
hlt
mov
scas
adc
fmul
mov
in
jo
pop
out
cmp
push
jmp
mov
inc
(bad)
mov
inc
out
imul
js
jecxz
mov
(bad)
cmp
dec
sub
ins
outs
sub
jb
(bad)
bnd
sahf
test
test
sbb
scas
inc
clc
enter
mov
xchg
icebp
or
mov
sub
cmp
push
mov
sar
ss
icebp
adc
cmp
and
adc
loope
or
and
sbb
div
(bad)
repz
stc
push
dec
int3
cmp
jecxz
sub
retf
mov
mov
push
mov
aam
cmp
sbb
cmp
sub
pop
jecxz
jp
fdivr
ins
cdq
cmp
jno
inc
pop
stos
inc
test
mov
xor
jno
cdq
pop
mov
jl
mov
cs
loop
(bad)
es
fmul
push
sbb
out
cmp
test
add
xchg
dec
retf
out
sub
loopne
or
test
leave
inc
ret
add
dec
push
mov
(bad)
cwde
xchg
mov
mov
xchg
pop
mov
jae
mov
pusha
xor
adc
or
mul
ud0
(bad)
repz
sbb
(bad)
and
xchg
and
mov
fidiv
and
push
(bad)
jb
pop
sbb
sbb
sub
push
out
sub
out
dec
test
iret
xchg
xlat
fld
xlat
retf
mov
jo
cld
push
das
adc
(bad)
adc
in
shl
fs
mov
cmp
push
repz
call
pop
sub
xor
push
int3
jp
pop
pop
jp
out
sbb
pop
mov
cld
mov
dec
pop
adc
mov
xor
xchg
movs
imul
test
jno
push
ret
sub
les
cmps
mov
lea
add
test
aas
push
adc
jmp
and
mov
dec
mov
ins
xchg
js
push
xchg
dec
outs
inc
add
(bad)
mov
(bad)
addr16
mov
ret
loopne
scas
add
mov
push
push
out
fiadd
jmp
or
cwde
xor
out
pop
dec
pop
pop
in
js
clc
or
call
mov
lea
ja
(bad)
js
jl
add
pop
push
aaa
cvttps2pi
lods
push
add
jns
clc
and
hlt
ret
je
jno
mov
xlat
cdq
sar
jl
xor
mov
retf
adc
xchg
cwde
std
xlat
fstp
push
jl
adc
jae
push
jae
xor
mov
inc
les
sbb
fcmovnbe
dec
lahf
cwde
jo
aas
test
jg
inc
pop
clc
inc
(bad)
pop
inc
cmp
cdq
fcomp
shl
(bad)
sbb
rcr
jge
and
repnz
mov
sahf
xchg
and
rol
xor
out
shl
hlt
(bad)
jmp
cdq
sahf
mov
xor
jb
jecxz
jge
arpl
inc
xchg
mov
cmp
in
call
pop
es
test
dec
adc
jp
jbe
adc
out
loop
in
ret
xor
mov
das
push
xchg
mov
in
adc
mov
(bad)
adc
push
mov
icebp
fwait
sub
sbb
push
inc
pop
push
pushf
icebp
or
pop
fist
sbb
rcr
test
hlt
test
loope
das
sahf
test
mov
cmps
fs
lock
jp
xor
movs
lock
xor
inc
(bad)
inc
(bad)
jns
mov
cmps
out
shr
scas
push
pop
xchg
dec
xor
or
dec
(bad)
dec
leave
pop
ror
rcl
or
popa
ror
xchg
data16
jmp
cmp
shl
into
mov
xor
push
push
sub
mov
push
adc
jle
xchg
loop
push
or
or
pop
jle
pop
mov
xchg
sahf
cmp
or
push
rcl
xor
sbb
xchg
stc
sbb
inc
jno
arpl
or
adc
xchg
and
pop
cs
hlt
add
mov
xchg
xor
pop
jmp
test
sbb
outs
das
in
(bad)
(bad)
retf
push
sti
repnz
and
sub
cmp
lds
xor
xor
jne
in
cmps
add
sub
sub
jnp
or
or
mov
xor
mov
ins
imul
fistp
iret
mov
push
sbb
sub
dec
jae
gs
movs
sbb
adc
fldlg2
sahf
inc
sbb
push
add
jns
mov
test
pop
jge
add
leave
test
ja
loope
jmp
dec
in
cmp
cmps
stc
inc
and
jbe
imul
test
into
ret
ror
cmp
jmp
movs
outs
ret
(bad)
cmp
dec
mov
inc
imul
and
cmp
and
pop
loopne
sbb
(bad)
add
jmp
xor
daa
push
lds
jp
cdq
and
add
inc
mov
movs
bound
and
xchg
jg
and
sti
outs
bound
mov
pop
and
xor
loopne
pop
lock
add
scas
mov
mov
pop
lahf
sbb
jno
test
cwde
(bad)
std
jns
sub
jnp
push
aad
jo
inc
add
daa
add
test
mov
sub
dec
pop
add
xor
ret
sub
xchg
scas
leave
mov
dec
ds
jbe
lods
pop
stos
sub
mov
xchg
lods
or
fdiv
fwait
std
test
xchg
ret
sbb
cdq
inc
mov
fsubr
add
push
mov
das
mov
lods
ss
aaa
jmp
jo
and
mov
add
(bad)
out
xor
es
push
sbb
in
push
mov
sub
iret
add
cmp
loop
mov
lock
push
push
sar
in
in
pop
mov
movs
dec
push
aad
or
jge
mov
icebp
and
jae
lea
xchg
jp
retf
inc
cmp
pop
ret
push
cmp
dec
sbb
loope
fcomp
add
inc
add
scas
enter
loope
jmp
mov
(bad)
ficom
xchg
sub
retf
jo
ins
lods
rcr
iret
and
iret
pop
icebp
xchg
lods
mov
push
rol
jle
mov
xor
retf
push
ins
je
xchg
loopne
out
inc
mov
mov
addr16
fldenv
adc
mov
inc
iret
or
jo
sub
pop
pop
mov
pop
or
rcl
jb
(bad)
aad
popf
xchg
imul
inc
stos
in
outs
xor
lds
rcr
sub
shr
maxps
mov
fistp
aaa
and
xchg
and
or
pop
sub
xchg
out
je
pop
les
jecxz
cmp
mov
in
xor
ret
leave
sets
test
xchg
test
sbb
inc
call
aaa
popf
jno
xor
scas
ins
mov
scas
push
mov
inc
movs
xchg
fs
sbb
loop
mov
ror
pop
and
mov
cli
xchg
inc
ret
jp
mov
cmc
jl
(bad)
lods
jns
test
sbb
adc
sub
out
movs
inc
cmc
xor
ror
ss
mov
addr16
hlt
aad
or
mov
sbb
ss
sar
add
xchg
xchg
push
ret
addr16
and
push
dec
dec
cdq
out
call
mov
xchg
dec
xchg
sbb
out
nop
imul
int
dec
stc
les
and
dec
cwde
movs
in
pop
xchg
add
pop
(bad)
stos
sub
cmp
data16
jle
push
pop
pop
lea
and
mov
dec
pop
cmp
sub
es
shl
adc
in
adc
push
pop
inc
out
xchg
mov
adc
add
pop
inc
xchg
inc
(bad)
dec
sbb
mov
push
push
into
xor
test
dec
shl
xchg
rcl
and
(bad)
shl
fldcw
sar
cmp
fiadd
mov
cli
dec
and
mov
movs
loop
daa
sub
jge
xor
push
jg
add
aas
fistp
enter
mov
mov
mov
fcmovne
pusha
and
mov
stos
cmp
add
adc
push
and
mov
sub
mov
cld
pop
test
adc
fistp
jle
adc
mov
in
cwde
in
dec
pushf
dec
movs
sbb
jmp
mov
mov
out
jne
mov
inc
or
or
fbstp
mov
push
cmps
shl
dec
gs
inc
cli
dec
cmp
pop
inc
fdivr
call
mov
add
in
sub
inc
imul
or
cmp
and
(bad)
iret
call
inc
fdivr
xchg
lahf
push
xor
pop
or
push
imul
push
loop
inc
imul
je
out
dec
adc
or
test
push
idiv
ja
dec
push
jb
sub
xchg
sub
inc
stc
add
push
pusha
and
inc
and
push
and
mov
test
sbb
push
in
dec
aam
outs
pop
test
pushf
movs
daa
ins
shr
sub
das
aam
pop
push
mov
mov
aas
inc
jecxz
rcr
lahf
cli
mov
dec
xchg
sub
imul
add
pushw
movs
push
pop
cmp
pop
mov
jle
outs
push
rcr
mov
pop
xchg
das
jno
ds
frstor
mov
or
adc
clc
stc
xchg
cwde
loop
das
clc
test
mov
dec
inc
adc
imul
ret
mov
pop
push
adc
stos
call
jo
jae
xchg
imul
addr16
stc
hlt
jb
(bad)
jecxz
and
pop
xchg
inc
mov
pop
or
inc
dec
std
icebp
retf
and
push
call
cs
pop
(bad)
sub
out
mov
mov
loopne
jle
shr
push
push
cmp
push
stos
jb
or
cs
cmp
(bad)
js
jnp
mov
add
lock
loopne
mov
xchg
mov
adc
fwait
inc
or
sahf
xchg
mov
and
cmp
add
xchg
sub
mov
repnz
ds
pop
push
or
jg
inc
pop
pop
fistp
xchg
sbb
push
xchg
nop
cmp
pop
sub
xchg
jecxz
int
xchg
and
sahf
enter
xchg
and
fild
aas
cwde
xor
(bad)
jmp
sub
in
fsub
inc
scas
repnz
js
lahf
cmp
enter
mov
clc
lea
inc
xchg
mov
inc
xor
loopne
out
out
mov
mov
jp
fbld
add
out
in
pop
clc
xchg
cdq
lds
in
popa
cli
mov
repnz
mov
and
xchg
pop
jecxz
jnp
fcomp
add
cmp
iret
or
lahf
adc
jle
push
movs
imul
mov
fld
out
out
je
scas
loopne
cmp
adc
xchg
dec
(bad)
sbb
mov
or
pop
push
xor
movsx
mov
jnp
xchg
fcom
sbb
and
ja
mov
and
mov
mov
loopne
test
and
cmp
mov
arpl
fisubr
mov
or
sub
dec
mov
(bad)
ds
add
jne
mov
jmp
xor
out
enter
push
pop
popf
xor
and
ss
or
arpl
jp
pop
sbb
push
pop
movs
es
xor
ret
mov
in
stc
in
fucomi
nop
(bad)
and
test
or
pop
das
pushf
pop
sbb
mov
dec
xchg
xchg
retf
mov
jb
pop
mov
mov
inc
test
add
scas
jmp
push
in
adc
dec
xchg
scas
sbb
jle
cli
push
and
xor
movs
xor
pop
rol
ss
xchg
xchg
shl
daa
jae
push
inc
or
push
push
mov
loopne
pop
inc
in
cmps
retf
repz
inc
dec
jg
sbb
push
lds
ja
lahf
sbb
sbb
test
dec
int
out
jno
jg
sbb
cli
inc
adc
add
xor
ffreep
xchg
cs
jp
jb
mov
sbb
adc
mov
cmp
outs
test
push
sub
fld
or
or
or
lds
imul
repz
push
push
inc
std
pop
(bad)
jnp
or
idiv
nop
push
mov
cmp
je
addr16
xor
jae
test
das
and
popf
arpl
jo
adc
in
in
xchg
adc
(bad)
aaa
dec
mov
cmps
(bad)
shl
fcomp
and
add
and
cld
cmp
mov
and
push
adc
jnp
arpl
daa
dec
inc
pop
xor
pop
or
add
inc
pusha
inc
dec
pop
cld
es
xchg
push
stos
mov
or
das
arpl
and
inc
add
(bad)
xchg
leave
push
xchg
pop
jecxz
mov
test
popa
jmp
xor
lods
fst
push
push
repnz
xor
(bad)
daa
sbb
pop
pop
shl
sub
adc
jg
rcr
psubw
leave
rcr
push
and
dec
jnp
in
push
jo
cmp
push
jmp
jp
pop
ret
push
call
pop
inc
adc
xor
pop
jb
and
pop
cmps
leave
fst
out
fisttp
jae
fnstcw
mov
punpcklwd
movs
dec
in
push
jle
pop
rol
xor
mov
std
jno
loop
inc
xor
ja
icebp
lock
sub
cmp
repnz
push
mov
jle
sbb
in
and
les
xchg
pop
je
jae
mov
inc
adc
out
inc
ss
icebp
int3
push
mov
or
dec
and
aaa
repz
out
and
in
sbb
cmc
xor
popf
push
sti
push
sti
cmc
inc
mov
jae
push
cmp
data16
pop
in
(bad)
fsubr
clc
call
hlt
pop
mov
or
add
int
sbb
pop
das
(bad)
call
rcl
xchg
lods
imul
fst
ins
hlt
ss
pusha
mov
jge
mov
or
jmp
(bad)
test
push
stos
cmps
bound
scas
lods
rcr
push
jle
outs
mov
mov
ds
ds
mov
mov
jl
adc
adc
xchg
lods
mov
in
push
mov
in
test
mov
retf
push
leave
mul
fdiv
sti
data16
imul
loop
pusha
lods
sahf
in
xor
jg
cmps
push
fucomi
or
jnp
inc
aaa
add
add
add
mov
js
push
jnp
or
lods
sub
scas
dec
int3
das
in
dec
dec
jae
mov
xor
cmc
je
pop
push
and
jle
mov
in
jge
bound
loop
stc
imul
pop
mov
xchg
push
(bad)
outs
xchg
pusha
pop
out
inc
jg
js
sub
xchg
mov
shl
xor
movs
bound
mov
scas
add
pop
jnp
or
sahf
dec
jo
mov
cli
cmp
lahf
mov
and
jbe
push
sbb
mov
inc
mov
je
adc
push
pushf
and
and
sub
int3
add
xchg
sbb
(bad)
(bad)
aas
ret
call
mov
jge
retf
loop
test
push
mov
adc
add
cmc
and
and
arpl
neg
test
mov
ficom
dec
push
clc
dec
push
cli
stos
out
mov
or
cmp
cld
stos
fild
adc
les
sbb
mov
add
popf
jmp
enter
sub
mov
pop
fistp
rcr
fist
enter
inc
dec
inc
call
fldcw
mov
ins
push
pop
mov
dec
mov
jp
sbb
xchg
inc
xor
pusha
test
cmp
imul
xor
mov
mov
pusha
jo
and
movs
mov
sar
outs
pop
jbe
push
sub
xor
test
cld
pusha
jmp
xchg
add
jp
mov
cmp
or
or
add
jmp
adc
xchg
jns
fcmovnb
sbb
ins
or
out
inc
adc
mov
xor
lods
mov
in
aaa
loopne
cwde
cmp
lods
leave
or
dec
rol
jmp
jb
pop
sub
(bad)
cmp
arpl
xor
adc
push
(bad)
or
pop
lea
pop
idiv
aas
fsubr
dec
out
add
rol
fwait
jle
sub
and
add
add
dec
mov
iret
jne
mov
cmp
(bad)
mov
push
sub
shl
leave
(bad)
and
jmp
ror
sti
rol
pop
xor
lahf
dec
arpl
xor
jp
push
sbb
das
pop
push
mov
iret
xor
push
hlt
es
aas
int
jbe
fild
mov
(bad)
ss
daa
repz
dec
test
mov
push
inc
and
mov
sbb
pop
adc
cmp
out
lahf
sbb
mov
xchg
jmp
push
sub
dec
xchg
jno
mov
mov
lds
push
(bad)
out
mov
ret
pop
in
push
inc
jb
or
cli
or
or
mov
jbe
fcom
bound
jle
rcl
mov
and
lahf
daa
jnp
hlt
in
or
cmp
outs
icebp
mov
aam
mov
sbb
in
(bad)
or
sbb
mov
mov
add
daa
fiadd
and
jns
popa
ret
mov
sbb
and
push
cwde
dec
fsub
pop
sbb
lods
repnz
push
sub
imul
xchg
sub
icebp
inc
cmps
sub
jl
rcr
push
adc
call
or
jge
cdq
int
dec
fs
xchg
pop
and
xlat
ret
cmp
rcl
inc
out
imul
mov
jae
mov
fidivr
dec
inc
or
out
mov
in
push
or
jecxz
xchg
(bad)
ret
rcl
mov
in
(bad)
lahf
xchg
dec
fs
xchg
adc
sbb
lea
sub
cs
ds
jmp
adc
push
jmp
fistp
sub
pop
or
aaa
jmp
cmp
sbb
mov
sahf
mov
leave
inc
add
out
ds
inc
cwde
mov
fs
cdq
push
leave
mov
es
outs
jmp
jo
mov
shl
sti
fidivr
ja
cmp
jbe
inc
les
sub
pop
test
sbb
push
mov
clc
cli
dec
jbe
ret
jbe
or
mov
add
cmc
loop
mov
ret
imul
out
or
jg
pop
and
jne
push
js
pop
mov
stos
mov
pop
xlat
inc
test
test
and
mov
sti
js
mov
cmp
pop
mov
ds
mov
out
inc
xchg
xchg
pop
movs
cmps
loop
jb
imul
pop
mov
call
pop
mov
std
outs
xlat
or
inc
sbb
sbb
in
fsubr
fs
scas
fwait
xchg
loop
sub
cmps
xor
movs
cmp
pop
loopne
push
call
push
(bad)
jp
dec
test
add
xchg
mov
push
jnp
or
lods
push
int3
push
push
pushf
mov
retf
popf
std
mov
out
fwait
gs
mov
sbb
ret
add
cmp
outs
mov
push
scas
les
jo
push
push
dec
mov
pop
hlt
call
(bad)
push
add
sub
cmps
and
scas
and
stos
or
mov
pop
sahf
outs
pop
(bad)
push
pushf
icebp
dec
jmp
fcmovnbe
xor
rcl
ficomp
xchg
dec
arpl
dec
in
arpl
and
cdq
xchg
leave
pop
repz
aas
les
pop
ds
push
mov
arpl
mov
(bad)
mov
pop
cmp
mov
addr16
mov
inc
pop
stos
jo
in
jno
mov
sbb
iret
jle
fdiv
add
mov
rcl
sar
inc
and
cli
stos
lock
jae
mov
es
call
add
mov
lock
jae
jle
xor
scas
adc
xor
pop
cmps
dec
mov
sbb
fidiv
lea
ins
push
imul
fwait
pop
xchg
movs
lock
lods
out
test
adc
xor
test
nop
xchg
and
rcl
call
push
lods
sbb
dec
int
dec
add
sbb
(bad)
mov
mov
pusha
loopne
inc
into
sbb
and
and
sbb
stos
cmp
ins
cmc
push
sar
clc
sub
inc
and
fisubr
test
loope
leavew
js
stos
stc
jmp
or
adc
xchg
arpl
push
aas
push
js
xlat
xor
(bad)
pop
push
dec
sub
out
adc
and
mov
lods
xor
and
push
pusha
popa
jmp
sub
lahf
push
sbb
bound
repz
arpl
mov
in
fwait
sub
into
bound
xchg
add
pop
addr16
ret
sbb
xlat
xchg
adc
adc
sti
mov
test
rcl
shr
jg
dec
in
idiv
lods
xor
mov
std
shl
mov
add
inc
add
xor
imul
mov
test
pusha
ficomp
mov
xchg
push
inc
push
mov
jo
and
movs
clc
add
dec
xchg
repnz
jl
idiv
pop
xchg
push
jb
fsubr
fimul
or
adc
loop
in
jl
adc
add
jmp
enter
or
(bad)
adc
ret
dec
ja
cdq
hlt
imul
and
(bad)
cmp
loopne
cs
xchg
stc
jnp
sbb
xlat
sub
(bad)
mov
add
adc
dec
cdq
out
int3
jnp
push
jmp
xor
inc
fwait
add
sti
movsx
rol
jns
retf
push
push
mov
shl
repnz
cs
in
mov
cmp
mov
daa
icebp
push
xor
jne
lods
call
lahf
mov
add
push
inc
xor
lods
jo
push
mov
test
aam
sub
sbb
int3
cwde
dec
repz
mov
or
xor
mov
pop
leave
and
add
sbb
bound
(bad)
pop
jae
frstpm(287
xor
test
xchg
push
pop
cmp
shl
test
js
adc
nop
sbb
xor
outs
push
aam
cld
mov
push
mov
inc
test
cmp
sahf
mov
les
gs
xor
mov
es
dec
adc
enter
sub
mov
push
out
rcr
cmp
jns
cmps
ins
call
out
daa
stos
push
std
jp
pusha
test
movs
ja
pop
call
inc
das
call
jne
jb
xchg
sbb
cmp
or
and
jno
(bad)
jno
int
adc
sar
mov
popf
and
adc
add
bound
sbb
mov
mov
loop
fistp
test
xor
js
test
test
das
pushf
mov
(bad)
ins
fisubr
test
lahf
sub
or
movs
mov
mov
mov
call
in
adc
rcr
in
mov
(bad)
push
and
mov
xlat
xchg
movs
xor
dec
jns
push
jle
in
jp
dec
retf
jg
in
lods
add
xor
pop
mov
pop
cmp
adc
sub
add
enter
sbb
push
test
adc
push
pandn
mov
sbb
fnstsw
and
add
lahf
mov
(bad)
rcr
xchg
push
cmps
inc
jns
in
mov
dec
jmp
pminsw
mov
arpl
nop
and
jo
(bad)
or
sub
sbb
inc
loop
aad
addr16
lea
bnd
out
sub
in
sub
popf
sar
jae
push
adc
(bad)
or
push
jo
ja
push
data16
jb
cwde
mov
and
outs
cld
sub
mov
ret
retf
fstp
je
mov
test
stos
je
dec
add
ja
lods
push
adc
hlt
pop
mov
mov
fst
jmp
or
inc
pusha
push
enter
mov
jb
or
out
out
pop
repnz
push
mov
loope
cmp
push
mov
xor
ja
lahf
adc
out
or
call
repnz
lea
mov
nop
ins
sub
mov
jmp
push
mov
xlat
rol
icebp
call
mov
fs
mov
or
jne
or
outs
jmp
xor
push
ror
ja
retf
mov
mov
popf
push
dec
sahf
shl
sub
xlat
xchg
(bad)
sub
push
jp
pop
mov
xchg
mov
pusha
js
pop
mov
cwde
and
jmp
dec
stos
ja
adc
loop
pop
mov
(bad)
mov
ds
hlt
cs
push
popa
and
xchg
(bad)
xor
into
ins
ds
leave
lea
das
dec
jmp
pop
inc
mov
scas
and
pop
pushf
xor
cmp
dec
rol
(bad)
jmp
cmp
scas
push
in
repnz
add
loope
ficom
cmp
retf
sub
jle
sbb
xor
cs
das
xor
lahf
or
leave
pop
and
sbb
or
and
dec
les
into
mov
popf
adc
xor
(bad)
call
cld
test
xor
mov
out
adc
sar
jne
push
movs
cmp
fimul
xlat
adc
sbb
dec
or
sbb
imul
iret
data16
ins
pop
arpl
cmp
or
sbb
mov
mov
pop
mov
mov
or
mov
xor
ins
out
add
scas
adc
mov
scas
pushf
iret
int
retf
aam
xor
mov
inc
push
cld
sub
stos
pop
pop
sbb
test
mov
mov
stos
idiv
paddb
fdiv
loop
sub
push
mov
adc
cld
jmp
ret
movs
(bad)
(bad)
es
dec
sbb
sti
jo
sub
(bad)
out
jl
call
xchg
mov
sub
jl
in
enter
ja
or
mov
ss
fmul
mov
push
jno
xchg
inc
out
fwait
or
stos
adc
lds
xor
push
xchg
cmp
scas
data16
push
cmc
retf
inc
and
or
jne
dec
push
sbb
out
sub
int3
hlt
push
adc
ret
mov
retf
sub
ret
arpl
cmp
pop
retf
call
shl
cmc
mov
cmp
ret
outs
lods
inc
xor
js
sub
imul
jge
pop
test
jmp
inc
aaa
pop
pop
adc
pop
and
test
xor
xor
sub
popf
in
iret
cmp
not
(bad)
outs
fstp
rol
xor
rcr
and
xchg
inc
sub
ja
(bad)
in
adc
les
mov
stos
pop
fdivr
jecxz
mov
cs
in
sbb
outs
xchg
repz
push
cmc
mov
xor
jnp
pop
in
jle
add
nop
bound
iret
jmp
fwait
push
cmp
test
aaa
jmp
mov
js
push
pushf
xchg
and
mov
pop
cmp
mov
mov
xor
ret
add
pop
and
dec
adc
leave
xor
mov
iret
aad
sub
(bad)
cmp
popf
inc
repnz
sub
stc
cmps
fs
pop
ja
jbe
dec
je
cli
popa
movs
inc
inc
jmp
cmp
in
adc
cmp
mov
pop
xlat
sub
pop
mov
dec
rcl
out
jnp
clc
data16
cmp
jo
arpl
not
scas
out
gs
popf
adc
jle
das
xchg
jmp
or
xchg
cmc
popa
inc
pop
fadd
and
hlt
push
ja
xchg
xor
sbb
push
sub
jge
pop
sahf
push
shl
aaa
in
xchg
add
xchg
pop
loop
test
sub
xchg
inc
adc
cmp
jno
mov
adc
jmp
fmul
dec
pop
cmp
iret
hlt
test
clc
(bad)
jmp
test
mov
sub
xor
mov
and
loopne
mov
push
js
outs
mov
mov
sbb
js
push
clc
xor
dec
xchg
dec
into
dec
mov
fnstenv
std
hlt
sti
pop
call
mov
outs
sbb
add
mov
js
fnstenv
cmps
in
jne
mov
je
cdq
sti
les
mov
arpl
mov
push
cmp
loopne
jge
in
(bad)
dec
mov
push
mov
and
ins
jnp
push
dec
(bad)
mov
jmp
psadbw
popa
adc
xchg
ret
cmc
imul
or
dec
call
cmc
push
jl
add
jmp
pop
cs
cmp
rcr
in
das
sub
cs
enter
jmp
popf
(bad)
repz
ret
rcl
fistp
popf
sub
dec
lods
jo
mov
mov
pusha
lock
repz
inc
or
(bad)
fcomp
aam
and
cmp
pop
addr16
int
dec
lea
xchg
repz
jno
pushf
(bad)
out
adc
adc
push
sbb
stos
jnp
sub
sbb
dec
sti
mov
shl
xchg
dec
mov
xor
cli
xor
dec
in
mov
mov
out
jbe
inc
xlat
les
add
adc
fcomp
sbb
jmp
jne
fs
inc
ret
fld
movs
rcl
mov
mov
add
and
(bad)
ss
loope
movs
scas
cmp
xchg
in
div
dec
sbb
sbb
add
sbb
(bad)
sub
mov
mov
xchg
jno
pop
retf
pop
repz
mov
or
imul
add
imul
(bad)
in
(bad)
mov
movs
retf
inc
jle
loopne
mov
mov
jnp
(bad)
movs
int3
xor
mov
imul
cld
xchg
sbb
retf
mov
mov
int
ins
xchg
sub
or
push
push
test
aad
add
mov
pop
popa
ret
lds
or
repnz
cs
shl
inc
bound
int3
jg
gs
popa
mov
adc
or
push
dec
jmp
test
mov
xor
out
dec
cmp
mov
repnz
dec
popf
test
sbb
movs
push
push
cwde
inc
and
arpl
mov
adc
mov
push
and
test
pop
dec
xchg
mov
test
ins
xchg
ins
fsub
clc
out
jl
(bad)
sbb
xchg
cdq
stos
rcr
jp
test
sub
ss
clc
lods
frstpm(287
loope
out
xor
mov
sub
sub
dec
fcom
gs
jp
cmps
add
push
adc
xor
ds
add
add
pop
mov
sbb
test
jl
xchg
adc
xor
cdq
mov
pusha
arpl
cmp
sub
cld
pop
adc
lds
fbld
jnp
sar
and
les
mov
ins
stc
add
xchg
fiadd
in
jns
imul
sub
test
or
mov
stos
and
xchg
dec
scas
xchg
repnz
push
jl
lods
fimul
stos
xchg
fmul
iret
push
sar
loope
call
cmps
andnps
(bad)
push
xchg
and
jg
dec
movs
lock
sti
daa
je
mov
xchg
loope
in
fnstenv
sbb
aam
mov
xchg
or
mov
mov
inc
retf
cs
(bad)
hlt
sbb
jecxz
xchg
xor
je
addr16
shl
cmps
xchg
xor
out
sub
jl
and
call
inc
pop
adc
xor
xchg
cmps
mov
mov
ins
pop
mov
adc
popa
inc
jl
test
add
cmp
sbb
(bad)
mov
in
out
iret
cmp
fiadd
out
mov
or
rol
adc
clts
into
jge
pop
sub
push
call
cmp
mov
aad
xor
stos
das
mov
inc
push
repz
aad
(bad)
cwde
add
sub
dec
cmps
shl
mov
cmp
fidivr
aam
data16
xchg
jns
push
mov
pop
mov
iret
out
add
mov
jle
mov
or
in
gs
push
mov
xchg
rol
xchg
ja
or
pop
push
inc
fcomp
movs
shl
sub
xchg
aam
mov
jmp
aam
je
shl
xchg
and
cli
jg
dec
fdivr
(bad)
stc
pop
cmp
bound
outs
movs
adc
into
out
lods
inc
mov
arpl
mov
sub
inc
mov
pop
call
adc
aam
mov
pop
jge
ja
(bad)
fsub
push
cmp
nop
out
pop
in
sub
daa
and
arpl
aad
mov
adc
addr16
jecxz
jnp
sbb
cdq
sbb
pop
std
cdq
out
mov
shl
mov
push
sub
fisttp
(bad)
xchg
dec
or
cmp
ror
pop
scas
fisttp
mov
test
scas
pop
cmp
mov
jmp
pop
aam
inc
int
cmp
pushf
xor
pusha
or
mov
cmp
sbb
xchg
scas
ret
into
mov
pop
fxch
mov
mov
leave
mov
ret
nop
cwde
xor
fwait
push
inc
jae
push
xchg
mov
sub
or
call
ret
lods
mov
dec
loop
jns
fld
cmp
mov
lods
jl
sti
adc
mov
adc
jno
mov
add
fisub
sub
sub
dec
fdiv
mov
mov
jae
xlat
call
or
addr16
sub
xchg
in
stos
and
cmp
test
movs
fcomp
shl
xchg
dec
(bad)
mov
(bad)
cmp
xchg
loopne
sbb
mov
and
mov
lods
mov
shr
mov
(bad)
pmaxsw
xlat
mov
js
fsub
push
xchg
dec
cld
sbb
aam
gs
sbb
xchg
cmp
add
repnz
cmp
outs
pop
xchg
jge
pop
fucom
dec
aam
cld
jmp
idiv
out
nop
fwait
cmp
mov
mov
icebp
xor
dec
xor
jmp
xchg
movs
fs
pop
idiv
jmp
cmps
(bad)
aad
and
arpl
sub
sub
fild
mov
mov
fist
and
push
and
call
mov
movs
adc
in
xchg
std
mov
jg
mov
fs
loop
mov
or
jecxz
out
das
sub
xchg
loopne
call
mov
cmc
mov
mov
mov
cmp
pop
std
push
inc
ins
mov
dec
ret
icebp
lds
shl
or
mov
fnstenv
pushf
and
aas
pop
cmps
or
movs
cwde
mov
mov
in
lea
pop
in
into
and
push
scas
mov
cli
mov
ins
jmp
jg
pop
sbb
nop
pop
cmp
out
push
(bad)
add
jmp
xor
jo
dec
dec
aaa
and
sub
inc
or
mov
push
jl
xchg
xchg
and
sbb
jo
mov
test
jp
xchg
test
pop
addr16
aad
jno
cmps
push
in
push
jae
mov
aam
fld
jo
call
adc
in
ss
push
ret
arpl
pop
xchg
and
xchg
lds
call
adc
loopne
loop
or
lods
pop
movs
addr16
pop
shl
xchg
enter
sahf
xchg
xchg
fucom
into
shr
cmp
int3
je
into
sub
mov
and
sub
inc
and
add
cmc
dec
adc
stos
mov
pushf
dec
push
add
les
mov
xchg
and
pop
and
lahf
sbb
xchg
pop
push
imul
arpl
mov
xchg
fs
movs
and
push
rcr
das
gs
fstp
rep
fdiv
cmp
ss
xchg
sub
iret
je
jo
add
addr16
in
sub
popa
adc
push
add
jmp
sub
lock
add
aam
and
mov
cmp
pop
cmps
mov
hlt
fld
call
stc
aas
xor
lahf
xchg
xor
dec
mov
fnstcw
mov
xor
push
push
pop
mov
lahf
cmp
cs
and
pushf
loop
sub
push
(bad)
lea
cmp
pop
mov
pop
jge
adc
in
ja
je
push
sub
(bad)
in
or
mov
mov
popf
scas
adc
pop
rcr
pop
jg
mov
repnz
imul
test
(bad)
ds
mov
fwait
sbb
pushf
and
xchg
stos
mov
pop
bound
sub
lea
mov
sbb
or
or
cmps
push
stos
retf
aam
mov
ds
shr
cmp
mov
xchg
pusha
jg
dec
pop
scas
pop
dec
cmp
ds
fcomp
pop
pusha
cs
jecxz
sub
xchg
push
fprem1
mov
shl
sbb
add
shr
mov
jge
adc
jg
int
xor
adc
and
leave
mov
adc
pop
(bad)
dec
sub
test
pop
push
inc
mov
push
add
or
test
mov
das
xchg
std
lods
mov
cwde
stos
inc
inc
ret
icebp
inc
retf
retf
mov
int
out
mov
sbb
adc
or
es
lock
pop
(bad)
mov
mov
cmp
bound
out
cmp
mov
outs
lahf
mov
or
adc
pop
test
xor
xchg
ins
jmp
mov
jle
cmp
xchg
jo
and
inc
inc
mov
popf
sub
imul
xlat
and
xor
mul
inc
sbb
jb
xor
scas
test
pop
xchg
out
inc
push
sbb
ss
(bad)
cli
aas
pop
(bad)
cld
(bad)
or
cmp
test
setne
in
cmp
(bad)
mov
in
push
sysret
stos
(bad)
jns
shl
add
shl
mov
cs
aas
dec
jbe
sub
push
call
and
dec
popf
inc
adc
je
mov
sub
push
and
adc
sbb
addps
(bad)
or
movs
dec
popf
test
mov
push
xchg
or
(bad)
dec
xor
add
popf
pushf
cs
je
mov
dec
fwait
mov
retf
and
dec
shr
(bad)
jg
rol
imul
add
imul
pop
or
ins
and
js
sub
mov
test
push
push
std
imul
mov
cwde
inc
pop
xor
add
lods
stos
loope
stc
(bad)
shr
bndldx
je
mov
xlat
test
std
loope
xor
ss
xchg
push
scas
adc
rol
adc
mov
dec
lds
sbb
ins
icebp
add
not
mov
lods
pop
fisubr
cmp
push
ret
add
in
add
jns
dec
ror
pop
movs
jle
xchg
cmp
daa
xor
xchg
jnp
nop
lods
into
or
mov
fild
fbld
repnz
(bad)
cld
push
mov
or
pop
pop
call
retf
mov
mov
adc
test
mul
es
sahf
jnp
pop
inc
movs
pop
daa
(bad)
stos
fld
arpl
dec
call
pop
xor
sahf
xchg
add
and
in
jecxz
mov
and
aad
sub
sahf
push
sar
sub
(bad)
stos
retf
cwde
jmp
cwde
sub
cmc
push
and
push
daa
loop
adc
(bad)
jmp
movs
daa
sub
test
pop
push
push
popf
addr16
dec
rol
mov
sahf
xchg
lods
xlat
pop
retf
dec
pushf
fst
ss
xchg
mov
pop
cmp
push
pop
pop
sub
pop
mov
dec
and
faddp
loopne
add
cmps
and
cli
mov
mov
adc
nop
inc
js
push
or
adc
cmp
dec
ds
add
mov
cmp
sub
xor
pop
adc
popf
out
jmp
sti
sbb
inc
inc
push
jo
jnp
mov
clc
lods
(bad)
les
data16
test
jmp
add
add
xlat
test
sub
sbb
mov
shl
mov
mov
icebp
es
push
mov
and
or
and
push
add
test
mov
inc
jae
aam
pushf
fs
xor
popf
loope
test
mov
ret
sbb
push
pop
ret
jb
out
pop
movs
lods
shl
adc
mov
push
data16
jl
push
pop
pusha
mov
outs
sbb
mov
dec
mov
sar
mov
ficom
push
xor
daa
(bad)
fisttp
sub
std
pushf
or
pop
ja
sbb
cmp
lods
and
loope
xor
mov
imul
ret
je
push
push
pop
loope
and
cli
push
stos
fcomp
mov
fldenv
push
loop
pop
test
les
add
pop
add
call
popa
push
adc
sbb
minps
shl
lods
lahf
sbb
add
leave
pop
dec
loop
fmul
ss
stos
add
in
cli
es
(bad)
fxch
ja
adc
xlat
xchg
mov
dec
data16
pop
sar
cmp
imul
ret
inc
les
push
in
(bad)
cld
jno
jg
xchg
xlat
jecxz
pop
pushf
nop
retf
pop
push
and
and
push
dec
movs
mov
scas
cmp
scas
cs
sti
loopne
push
add
cwde
popf
lsl
adc
ret
rcr
mov
int
xor
xchg
mov
mov
add
aaa
rcl
jge
pop
mov
mov
rol
(bad)
add
cmc
pop
ss
ins
jno
mov
pop
push
popa
and
xchg
jmp
xor
adc
push
fdiv
mov
retf
ret
adc
mov
cmp
cmp
dec
jmp
stos
bound
pop
out
aaa
sub
cli
inc
fld
sbb
test
nop
add
push
loop
mov
jne
test
(bad)
in
inc
sub
test
or
jae
pusha
clc
(bad)
aas
push
sbb
sbb
jno
fisub
cdq
repz
or
or
cmp
movs
cmp
sbb
sbb
rcr
or
fcomp
fstp
(bad)
call
shr
daa
(bad)
xor
rcl
mov
push
dec
push
xor
movs
and
adc
out
imul
mov
rcl
push
pop
inc
out
leave
out
xchg
pop
in
add
je
iret
xchg
outs
sbb
add
mov
gs
and
retf
jo
mov
loopne
sbb
jne
mov
ins
mov
inc
sbb
dec
add
xor
loopne
(bad)
in
aas
mov
push
push
mov
lock
push
xor
pop
cmp
push
sbb
out
outs
mov
add
pop
clc
jmp
dec
pop
cmp
push
fisubr
in
in
cmp
jnp
pop
je
cmp
xor
add
je
add
dec
push
adc
sti
lock
mov
mov
jno
dec
xor
mov
push
stos
or
xchg
repz
cmps
test
mov
xor
inc
add
mov
and
dec
repz
outs
jl
neg
(bad)
sbb
ret
mov
addr16
imul
add
pop
cmp
movs
xchg
not
push
dec
pop
pop
test
ror
in
loopne
sub
add
cmp
fidiv
rcl
and
xchg
pop
call
sub
or
test
mov
or
les
dec
loop
adc
daa
cmp
jp
add
or
jb
push
(bad)
arpl
push
mov
inc
xor
pop
mov
aad
add
pop
jmp
pop
in
mov
test
lahf
shl
loop
or
stc
mov
push
cmp
in
xchg
pop
cmp
adc
mov
mov
pushf
(bad)
mov
repz
sbb
xor
aaa
aaa
sbb
retf
and
cld
and
xchg
pop
and
sub
push
(bad)
sub
dec
fldcw
aas
pop
push
dec
adc
out
xor
or
movs
test
and
or
and
pushf
pop
jbe
inc
out
sbb
push
sti
sbb
cmp
push
mov
mov
and
stc
shr
retf
or
jae
sub
(bad)
mov
movs
sub
dec
cmp
aad
daa
stos
ss
iret
bound
dec
jbe
mov
pop
dec
cmp
call
bnd
mov
pop
cli
mov
out
push
xchg
or
loop
fwait
mov
inc
add
icebp
dec
xchg
ins
jle
in
stc
mov
adc
mov
popa
out
mov
sub
idiv
out
mov
push
repz
aaa
pop
outs
mov
jb
in
push
xchg
xchg
inc
cmp
or
jbe
add
ins
jl
sbb
ss
sbb
jmp
pop
arpl
and
mov
xor
mov
mov
lock
add
xchg
lods
popf
adc
ja
mov
cmp
cmps
daa
cmc
pop
mov
cmp
ror
sub
jo
arpl
cld
pushf
cmps
jmp
addr16
mov
xor
dec
sbb
cmp
fidivr
sahf
lds
cmps
push
add
push
dec
pop
aam
ds
inc
xchg
test
je
mov
mov
loop
retf
inc
jmp
test
mov
stc
pop
popf
and
in
dec
ins
(bad)
ficom
lahf
ds
xor
gs
hlt
es
mov
sub
jg
jb
daa
(bad)
out
repz
das
jle
fdivr
cmp
loope
mov
popf
out
add
sbb
xchg
mov
xlat
loopne
mov
dec
push
(bad)
lock
dec
mov
xchg
cmps
call
or
stos
sbb
mov
out
ficom
jge
lahf
jb
xor
xchg
jo
mov
sub
mov
ret
fistp
jle
test
fmulp
hlt
xchg
adc
cmc
inc
sbb
jo
and
aas
xchg
jae
adc
mov
mov
jnp
cld
mov
inc
out
sti
push
cmps
add
mov
scas
pop
add
push
mov
ds
pop
pop
mov
icebp
xor
daa
int
iret
mov
inc
int3
dec
shl
pop
scas
mov
jno
push
aad
enter
or
ret
in
dec
push
sub
xchg
xchg
add
lahf
pop
mov
push
aad
jnp
dec
mov
scas
aaa
inc
or
add
repnz
das
adc
out
sub
pop
out
aad
retf
(bad)
shl
aad
xchg
dec
ja
mov
adc
shl
jmp
js
and
inc
dec
adc
or
fstp
popa
sub
orps
sbb
fild
cmc
loope
mov
and
loope
push
outs
fwait
rcl
ins
loopne
repz
stc
sub
cli
test
shl
mov
pop
shl
inc
push
int
inc
out
mov
lahf
push
sub
cmp
adc
aam
aaa
(bad)
jae
xchg
jecxz
inc
jns
push
push
jb
xchg
stc
push
movs
(bad)
iret
movs
daa
pop
fsubp
inc
xchg
int3
sbb
scas
xor
test
pushf
add
cmp
cmp
arpl
lea
scas
popf
inc
or
outs
sbb
dec
ds
xchg
test
in
inc
fdivr
cmc
jl
mov
dec
xchg
xor
das
add
loopne
sbb
icebp
dec
xor
add
sahf
jg
pusha
pop
cwde
das
pop
sbb
dec
sbb
in
js
jp
test
jbe
jp
iret
and
pop
outs
pop
addr16
gs
call
std
mov
sar
push
test
and
lahf
pushf
dec
mov
mov
movs
ins
call
and
movs
test
es
sub
(bad)
add
xor
jmp
int3
pop
pop
inc
pop
add
add
and
mov
bound
leave
retf
iret
int3
retf
enter
push
xlat
pusha
xchg
mov
stos
add
js
hlt
shr
pop
xchg
popf
xor
aam
aas
imul
call
or
sar
dec
inc
push
cwde
or
movs
ins
sub
or
jmp
push
sahf
int3
in
loope
xlat
pop
nop
sbb
xchg
les
cs
jp
int
(bad)
push
sbb
imul
(bad)
jmp
add
jnp
pusha
mov
xchg
and
mov
repz
pop
loopne
push
mov
retf
fbstp
add
leave
mov
into
mov
jle
in
jp
push
sub
sar
mov
jnp
xchg
push
in
pop
gs
lock
adc
sbb
mov
or
daa
pop
adc
mov
rcr
xlat
in
pop
enter
movs
or
xlat
test
scas
xchg
push
es
jmp
adc
jmp
push
sub
add
outs
rcr
jmp
add
mov
jp
aas
xchg
mov
push
add
clc
loope
in
inc
mov
adc
jbe
icebp
ss
jl
sub
xor
mov
inc
sti
inc
loopne
push
cmp
bound
out
mov
xlat
ins
xor
or
push
or
sbb
adc
sub
dec
push
aam
imul
or
cmps
adc
xchg
push
sub
add
out
adc
int
push
movs
mov
mov
jno
test
sbb
mov
bound
sub
push
dec
xor
sahf
mov
mov
mov
sbb
dec
rcl
lahf
sbb
call
xchg
sbb
pop
test
pusha
lods
shr
addr16
dec
mov
pop
shl
xor
pop
sbb
imul
retf
push
imul
mov
stos
xor
jns
or
mov
inc
cmp
lock
xchg
dec
ret
int
clc
adc
cld
jmp
push
gs
cdq
jnp
mov
push
jne
jmp
add
movs
in
cmp
or
cli
repnz
out
add
in
inc
xchg
inc
shl
push
xchg
mov
cwde
jb
repz
jmp
mov
sub
push
vmovss
popf
sub
fmul
inc
jno
shl
cmp
jmp
pop
jmp
pop
push
and
and
xlat
adc
pop
mov
pushf
pop
sahf
mov
fild
outs
nop
or
add
mov
dec
and
aas
lock
out
out
push
shl
stos
sbb
cld
or
inc
sub
pop
retf
add
lock
mov
sbb
cmp
inc
pop
xchg
(bad)
push
idiv
popf
out
aas
scas
loop
fcmove
xor
mov
xor
ficom
test
cli
les
call
pusha
pop
sbb
repz
jno
addr16
push
mov
cmp
inc
pop
cmp
sbb
xchg
sar
rcl
push
mov
in
fcomp
add
mov
pop
out
cmp
(bad)
jo
cld
push
adc
ins
cmc
mov
or
push
mov
or
xlat
aas
cld
jge
pushf
js
repz
mov
mov
loope
xlat
rcl
push
cmp
push
dec
adc
mov
sub
cmc
adc
jmp
(bad)
sbb
test
push
mov
adc
and
dec
(bad)
dec
gs
or
rcl
pop
sub
adc
fwait
pop
rol
xor
rol
xor
stos
cmp
lds
cli
adc
mov
adc
pop
pop
cmp
test
retf
mov
push
inc
out
add
sbb
loope
sub
adc
stos
repz
in
bound
jb
(bad)
lahf
push
lock
aaa
xchg
adc
xor
fdivrp
xchg
or
out
rol
xor
or
stos
mov
outs
(bad)
dec
dec
cmps
pop
pop
xchg
aaa
xor
into
cld
push
test
sti
loope
jmp
cs
enter
mov
sar
cs
scas
jbe
mov
xchg
or
cmp
adc
mov
(bad)
mov
mov
sbb
inc
int
inc
sub
add
fs
jae
push
mov
lock
fild
or
outs
enter
sub
retf
cmp
jne
push
pop
sbb
mov
inc
xchg
jo
mov
cmp
dec
sbb
inc
mov
cmp
aas
pop
jle
jbe
sbb
aam
ins
inc
mov
pop
scas
neg
sti
or
movs
gs
dec
inc
call
mov
adc
dec
stos
inc
xchg
daa
repz
mov
jg
adc
sbb
add
jne
das
sub
fidiv
or
sbb
rcr
out
inc
out
jecxz
jno
aas
jbe
pop
scas
lds
push
push
retf
call
sbb
lods
loope
jo
jno
jge
lock
inc
nop
outs
cmp
xchg
ja
jmp
push
add
(bad)
mov
jns
into
cmp
aas
jle
lods
repz
push
outs
cmp
mov
dec
mov
cmp
xor
push
push
dec
sbb
mov
jae
std
cdq
stos
aad
inc
fst
fistp
popa
push
mov
fsubr
ss
mov
add
ins
aam
add
stc
adc
or
cwde
test
dec
mov
(bad)
in
push
shl
jmp
aas
push
push
cmps
push
ret
mov
jmp
adc
jp
jnp
cmps
mov
lahf
push
xchg
test
stos
inc
shl
xor
int3
popa
shr
sub
test
mov
sub
cmc
dec
or
cmp
addr16
outs
push
cmps
jmp
jmp
(bad)
push
jg
add
push
data16
inc
cmp
mov
outs
rcr
ds
push
xchg
(bad)
and
ins
xor
pushf
test
or
add
int
(bad)
xchg
or
sar
xchg
rol
test
dec
push
pop
pop
push
lock
sbb
jg
movs
xor
imul
sbb
lods
iret
daa
scas
sar
push
stc
cmc
push
arpl
scas
push
and
pop
adc
xor
xor
leave
adc
ins
mov
jp
mov
rol
push
retf
fsubr
shl
mov
test
js
push
add
inc
idiv
mov
add
ja
fs
fidiv
lahf
cld
sub
retf
add
call
jns
lds
adc
xor
repz
icebp
sub
fstp
sbb
(bad)
pop
jmp
mov
inc
aaa
loope
add
and
cmp
jbe
fild
adc
push
adc
sub
call
push
sub
in
aad
dec
inc
je
jnp
push
add
and
cmp
and
push
and
pop
and
hlt
mov
inc
sbb
cld
outs
(bad)
ror
dec
sbb
jmp
fild
xor
jnp
loopne
cli
inc
ss
cwde
jmp
xlat
jl
(bad)
stos
xchg
aas
push
loop
adc
inc
xlat
mov
pusha
cmp
data16
sar
fcomi
fidivr
cmp
in
pusha
or
(bad)
cmp
jno
ds
hlt
mov
outs
in
repnz
mov
scas
ret
sub
cli
loope
mov
cmp
fs
push
push
jns
cld
xchg
scas
scas
jbe
inc
test
ins
js
cmp
sub
fidivr
mov
pop
mov
inc
cmp
adc
adc
jmp
push
out
mov
push
(bad)
cmp
std
cmp
pop
sahf
in
inc
mov
fwait
xchg
sub
inc
pop
xchg
push
addr16
push
repz
push
jmp
cmp
gs
mov
icebp
and
das
das
movs
pop
lock
scas
out
lea
mov
(bad)
or
adc
mov
xor
shl
addr16
pop
in
xchg
out
mov
aaa
lods
lods
inc
outs
push
mov
jb
es
mov
int3
iret
add
mov
mov
leave
inc
in
in
sbb
mov
pop
mov
mov
mov
out
inc
call
push
jnp
jne
inc
pop
mov
xor
imul
(bad)
repz
jbe
aaa
lahf
aad
push
pop
shl
dec
test
daa
daa
out
js
rcl
adc
xchg
stos
daa
xchg
jns
fimul
sub
or
add
lahf
repz
mov
add
add
cld
pop
inc
clc
sbb
arpl
aam
dec
push
pop
int3
fcom
and
or
inc
and
mov
mov
outs
scas
jb
outs
push
dec
inc
dec
scas
mov
in
mov
jns
outs
lds
daa
jo
inc
loopne
retf
add
jl
ret
out
clc
nop
mov
movq
not
mov
arpl
ret
fcomp
rcr
call
dec
mov
push
in
add
fcomip
xlat
hlt
push
fisubr
cmp
mov
adc
sub
mov
movs
mov
cmps
retf
out
aas
ds
mov
mov
jno
xchg
in
call
sub
jl
lock
movs
call
jl
lds
mov
adc
int3
and
and
add
add
and
ins
repz
cld
cdq
sub
out
out
pop
out
sbb
movs
or
nop
and
into
inc
add
loopne
add
jmp
in
(bad)
jl
inc
cmp
loopne
jb
shl
xor
push
xchg
shl
mov
lds
mov
outs
or
mov
inc
lock
call
jp
int3
adc
loop
jg
push
fidiv
sub
mov
mov
shl
lods
les
retf
mov
inc
adc
stos
sub
cmp
je
or
(bad)
ss
std
pop
stc
pop
jge
shr
ficom
test
pop
aas
pop
clc
xchg
aas
pusha
cli
(bad)
(bad)
xchg
pslld
pop
sti
sbb
push
pop
out
test
pop
cmp
sub
push
xor
mov
xor
int
dec
das
cmps
rcr
cs
push
add
add
adc
fmul
sti
mov
sub
hlt
test
jecxz
adc
test
test
hlt
jmp
sbb
push
dec
dec
lahf
or
adc
pushf
xchg
inc
jno
test
mov
inc
mov
imul
out
adc
addr16
sub
jb
mov
dec
test
xchg
pop
je
mov
cmp
iret
xchg
jmp
ins
daa
push
mov
push
lahf
push
cmp
mov
or
imul
mov
sub
movs
hlt
sub
icebp
add
sub
adc
jae
int3
adc
ficomp
mov
push
ret
mov
in
imul
(bad)
pushf
dec
inc
stc
pop
ja
call
mov
adc
call
xchg
pop
xor
push
mov
jle
ror
push
mov
push
mov
std
jp
lods
imul
scas
jmp
out
and
jmp
test
inc
mov
mov
rcr
pop
fs
dec
stc
xchg
jle
sbb
imul
test
pop
(bad)
adc
or
iret
xchg
mov
call
lahf
cmps
retf
mov
push
pop
inc
retf
mov
cmp
(bad)
add
jb
cmps
test
nop
sti
outs
mov
sbb
ins
jmp
aaa
mov
loopne
popf
adc
(bad)
retf
add
adc
out
ins
jbe
(bad)
in
push
and
jmp
jl
dec
pop
lea
aas
int3
lahf
(bad)
movs
mov
test
cwde
scas
inc
push
or
test
cmp
mov
jns
push
sub
imul
xchg
cmp
xchg
out
fidiv
cmps
loop
rcr
mov
xor
mov
sub
xor
or
stc
inc
and
sahf
enter
iret
icebp
int3
push
enter
dec
pop
mov
and
mov
iret
movs
cmp
inc
(bad)
icebp
mov
and
sbb
stc
add
or
dec
push
mov
nop
lods
test
and
xlat
push
fisttp
out
push
sahf
mov
jge
mov
push
mov
cdq
mov
rcl
mov
xchg
movs
les
daa
fmul
pop
cmp
pop
inc
bound
pop
(bad)
enter
lock
mov
inc
add
sbb
jnp
push
xlat
aad
out
sub
js
and
jo
cli
or
push
mov
fcmove
jp
inc
mov
mov
pop
add
stos
sub
ror
adc
cmp
and
mov
and
jecxz
mov
mov
pop
test
mov
sbb
call
mov
cs
repz
or
std
hlt
retf
bound
jnp
xchg
push
test
mov
fwait
dec
mov
out
movs
data16
stos
mov
push
loop
push
jbe
push
sbb
mov
je
pop
push
aam
pop
or
pop
lds
stc
(bad)
(bad)
out
pop
or
sbb
sbb
shl
push
push
or
in
mov
ja
dec
cwde
sbb
push
pop
or
add
xor
das
test
fneni(8087
pusha
fild
inc
shl
dec
mov
pop
mov
fsub
shl
jbe
mov
idiv
imul
aad
aad
cli
add
inc
jg
ror
inc
xor
mov
inc
or
add
out
mov
out
cmp
es
stos
cmp
dec
das
cwde
push
cmp
jmp
shl
jmp
and
cmp
jb
lods
call
adc
or
or
sub
cmps
mov
test
mov
push
rcl
lahf
fidivr
ds
push
fmul
nop
xor
movs
fwait
pop
mov
jns
pop
leave
lock
loope
in
pop
dec
ins
imul
fsubr
retf
icebp
out
xchg
sbb
pusha
adc
dec
lahf
xor
sub
push
cld
imul
cld
dec
imul
sbb
jnp
cdq
cmps
(bad)
sti
sbb
pop
fidiv
sbb
mov
mov
push
lods
sbb
aaa
push
pop
xchg
in
add
setb
push
add
mov
fild
fbstp
out
daa
and
jecxz
mov
jle
push
push
aam
sub
mov
js
pop
inc
call
std
push
jle
pop
sbb
mov
cdq
sbb
xchg
inc
add
retf
mov
clc
jmp
mov
and
jmp
inc
push
ud2
mov
mov
ret
jmp
push
mov
xor
cmps
(bad)
out
std
test
rol
or
push
jnp
or
mov
xor
dec
dec
push
push
fmul
outs
mov
les
jne
out
xor
outs
mov
out
xor
stos
movs
jle
imul
fldcw
xchg
inc
cmp
cwde
scas
out
call
push
xrelease
mov
xor
cld
pop
call
and
xchg
xchg
push
pop
popf
gs
bound
mov
mov
adc
pop
rcr
add
push
push
fwait
push
jo
add
adc
scas
rol
push
dec
aad
sbb
sub
xor
push
pop
out
bound
movs
in
and
xlat
adc
in
mov
das
xchg
gs
xor
pop
push
push
lds
mov
loopne
or
jl
inc
retf
cmp
or
pop
mov
inc
dec
fsub
jecxz
cmp
push
cmc
xchg
outs
cmps
pop
dec
test
fld
xlat
sti
hlt
jnp
push
jg
mov
or
dec
pop
shl
jb
je
loopne
out
pop
push
test
pop
mov
inc
call
enter
sti
ja
pop
pushf
sbb
fwait
xor
fdivr
add
mov
push
cmps
push
ficomp
pop
inc
add
pop
mov
or
mov
add
cmp
mov
scas
scas
sub
cld
jnp
push
jno
xchg
sar
out
sub
cs
and
and
imul
nop
icebp
lods
sbb
dec
es
mov
retfw
ret
xchg
adc
outs
pop
ja
push
and
mov
adc
rcr
cmp
mov
sub
pop
mov
add
aaa
stc
into
test
jne
test
xlat
dec
sbb
push
xchg
(bad)
retf
(bad)
jge
les
adc
dec
mov
iret
jo
mov
(bad)
mov
or
shl
adc
xor
push
or
xchg
jbe
lds
sbb
pop
fstp
gs
cmps
dec
fs
rol
mov
rdpmc
fs
shr
or
adc
icebp
cmp
(bad)
xchg
(bad)
or
loopne
xchg
dec
out
lock
adc
mov
mov
sub
fcomp
ins
push
or
into
loop
(bad)
xchg
adc
or
repnz
sub
or
or
scas
dec
pop
cmps
add
mov
repnz
adc
inc
ins
jle
push
fdiv
int
adc
fmulp
ins
in
aad
ret
(bad)
push
inc
das
sti
movs
mov
ror
jb
loope
lock
sbb
icebp
mov
in
bound
pop
cmps
mov
ficomp
cmps
mov
xor
jno
cmc
pop
cld
xchg
int
fldcw
iret
sub
cmp
shl
sub
sub
sti
(bad)
iret
pop
inc
mov
push
push
mov
(bad)
pop
push
jmp
pop
das
sub
adc
jmp
movs
pop
sub
dec
adc
mov
pop
adc
(bad)
pushf
sbb
inc
cmp
jl
inc
ja
push
jo
sbb
cdq
icebp
mov
popa
mov
sbb
fidiv
cmp
int3
or
xchg
push
popf
nop
push
pusha
xor
cmp
hlt
aam
hlt
movs
push
test
xchg
xchg
cmp
call
jo
mov
in
fldln2
mov
push
mov
jnp
jp
cmp
sbb
pusha
adc
nop
jae
or
pop
sbb
fisubr
or
sti
movs
mov
xchg
hlt
push
adc
out
shr
cmps
idiv
test
imul
in
jne
arpl
add
jo
push
inc
je
sub
and
xor
cmp
outs
cmp
mov
add
ret
lock
sbb
mov
mov
add
and
mov
test
xor
ficom
loopne
xchg
jns
add
sub
push
mov
sbb
adc
or
add
repnz
out
outs
mov
adc
gs
add
add
add
(bad)
mov
xchg
test
(bad)
jle
adc
jmp
sbb
iret
outs
xchg
ret
dec
mov
sub
mov
xor
push
mov
pop
jmp
stos
call
dec
adc
icebp
gs
test
cld
fnstcw
sti
ins
xchg
sbb
and
movs
xor
add
and
lds
test
xchg
add
mov
repz
stc
pop
cwde
xchg
dec
enter
dec
mov
pop
mov
dec
cmc
inc
bnd
add
inc
popf
mov
cwde
inc
retf
push
iret
jl
inc
inc
std
out
js
shl
xor
pop
popa
xchg
aam
(bad)
rcl
aad
sti
jb
or
dec
es
ror
mov
cmps
or
mov
cmp
add
jnp
sbb
lea
pop
test
mov
and
out
shl
cmp
pushf
sbb
sbb
xor
cld
dec
sahf
mov
pop
mov
mov
or
out
ret
rcr
outs
and
push
xchg
dec
mov
sbb
jmp
cld
mov
pop
mov
adc
jmp
mov
sbb
pop
mov
ficom
cmp
cld
imul
xchg
mov
in
jecxz
jns
aaa
bound
jo
adc
push
fnstcw
add
call
adc
pusha
out
jns
pop
dec
adc
mov
push
sahf
jno
mov
cs
repnz
mov
dec
loopne
movs
test
mov
inc
ja
ret
cld
jmp
ds
add
ret
pop
sbb
add
sub
ret
ja
pop
shl
jmp
retf
mov
lea
add
out
cs
jle
add
and
adc
lods
xor
ins
pop
test
test
outs
rcl
or
call
call
jno
sbb
pop
cmp
push
push
dec
mov
call
mov
and
loop
push
shl
in
adc
(bad)
adc
add
std
lds
repz
push
call
(bad)
mov
cmp
fsub
pop
cmps
sbb
xchg
ins
mov
xchg
repnz
sbb
jmp
inc
in
hlt
inc
dec
jb
dec
jge
scas
jmp
adc
cmp
inc
or
adc
mov
add
ja
cwde
outs
retf
push
lods
dec
dec
ds
push
adc
gs
rcr
inc
sar
jecxz
cmp
dec
retf
xor
sub
mov
xor
pop
ins
dec
arpl
push
test
out
arpl
fist
pop
int
and
cmp
jmp
sub
scas
jmp
jmp
test
xchg
dec
(bad)
std
(bad)
aam
sub
jnp
inc
and
outs
add
outs
das
mov
repz
and
out
xchg
cmps
popa
inc
sbb
lock
enter
sti
mov
out
repnz
lea
inc
sbb
mov
mov
dec
push
les
xchg
xor
mov
enter
jnp
gs
inc
shl
mov
int
inc
(bad)
pop
push
scas
loopne
retf
imul
xor
int
dec
cmc
(bad)
sbb
jl
mov
add
and
aas
jno
jecxz
cmp
mov
repnz
push
(bad)
mov
xchg
rcl
hlt
xchg
cmp
mov
fs
ins
in
sbb
lahf
sbb
or
sbb
sar
jl
mov
arpl
dec
into
adc
dec
jp
adc
jl
iret
pop
fsubr
mov
adc
data16
push
pop
pop
inc
es
xor
mov
cld
add
nop
xchg
mov
cwde
push
adc
test
adc
(bad)
out
cmc
test
mul
inc
inc
loopne
pop
fidiv
dec
lods
pop
icebp
ror
lods
in
arpl
jmp
repnz
sbb
mov
out
mov
gs
mov
mov
stc
rcl
loop
rcl
dec
das
inc
sub
cdq
fisub
adc
cmp
lock
push
jo
adc
nop
sbb
call
mov
idiv
jge
cmp
out
sbb
lea
sahf
pop
frstor
or
fwait
fwait
mov
pop
loopne
fmul
mov
mov
sub
cs
and
test
mov
or
cs
aad
ret
push
or
xchg
stc
call
sub
stos
jmp
add
mov
cmps
pop
out
nop
es
pop
ds
daa
sub
sub
inc
test
dec
shr
jmp
(bad)
movs
adc
inc
mov
xor
adc
dec
cmp
and
lds
dec
pop
clc
fs
dec
mov
sub
je
mov
sti
rcl
or
(bad)
lock
hlt
fs
shl
jge
test
and
in
xchg
push
xchg
aam
icebp
mov
or
clc
pop
jmp
sahf
loopne
ja
std
cld
bound
iret
cmp
imul
pop
mov
test
sbb
xor
icebp
mov
mov
imul
int
rcr
xchg
mov
push
addr16
and
cwde
add
cmp
add
pushf
jle
ins
cmp
xcrypt-ecb
cmps
dec
xchg
mov
es
mov
mov
or
jg
inc
pushf
sub
push
dec
leave
xchg
fxch
(bad)
adc
fcmovnb
(bad)
xor
and
test
lar
out
adc
and
lahf
pop
mov
add
outs
dec
adc
mov
fnsave
jb
mov
in
or
xchg
in
xor
ds
dec
ins
scas
and
mov
sbb
outs
cld
retf
inc
mov
(bad)
in
jmp
sub
mov
adc
sbb
xor
mov
sbb
scas
or
and
push
pop
stos
pusha
mov
inc
icebp
dec
jecxz
xor
sbb
fst
push
cmps
int3
mov
adc
mov
mov
jbe
xchg
arpl
inc
icebp
imul
cmp
inc
das
imul
rcr
jg
mov
bound
mov
imul
dec
jge
frstor
aad
das
in
push
test
pop
mov
fnstenv
wbinvd
fbstp
add
push
xlat
iret
jb
or
fidivr
add
and
xlat
and
imul
imul
loop
std
mov
cmc
mov
xchg
ss
pop
shl
fmul
xor
fdivr
xchg
inc
adc
push
push
adc
pop
mov
in
xchg
sub
push
xor
movs
cmp
dec
push
test
sar
sar
retf
aaa
cld
xor
neg
les
jmp
jnp
loop
sub
jge
mov
xchg
mov
jb
dec
cmp
jns
cmps
mov
je
mov
ins
xchg
mov
aaa
sub
push
(bad)
in
(bad)
psrad
inc
dec
out
fnsave
add
and
pop
call
shr
fldenv
dec
and
mov
adc
mov
fdivr
loope
mov
push
sub
and
jecxz
aad
jno
or
outs
sbb
jmp
xor
jmp
ss
mov
pop
cwde
xchg
sub
scas
ret
ins
jg
mov
dec
push
push
out
jbe
(bad)
inc
add
fcmovnbe
retf
cld
inc
pop
xor
ins
dec
mov
ret
xor
ja
inc
dec
and
jp
loop
adc
test
jp
and
fsubr
inc
inc
mov
scas
fwait
mov
movs
(bad)
int
sar
push
and
dec
jg
xchg
xchg
push
(bad)
js
dec
xchg
aam
sbb
sbb
movs
sub
xor
leave
jecxz
xor
jmp
mov
pop
sbb
sar
pop
xlat
dec
cmp
mov
mov
adc
outs
sbb
hlt
std
fidiv
bnd
sbb
mov
mov
sti
(bad)
mov
mov
ror
rol
adc
add
repz
iret
push
push
xor
dec
nop
jmp
call
push
movs
pushf
push
and
es
ss
jb
jecxz
inc
mov
movs
retf
(bad)
or
and
das
jne
add
cdq
inc
loope
cmp
and
(bad)
(bad)
cmp
retf
cmp
sahf
mov
test
out
fst
cmp
in
xchg
movs
xchg
loope
mov
mov
or
test
pop
into
cmc
pop
fld
push
mov
cwde
push
ret
jmp
dec
cs
sub
test
imul
stos
rdmsr
mov
push
scas
(bad)
push
mov
inc
data16
into
push
imul
adc
and
xchg
mov
mov
fst
mov
adc
out
and
adc
shr
push
(bad)
into
xor
lahf
inc
les
outs
xor
lods
das
cmp
(bad)
into
je
mov
mov
outs
fcmovnu
aad
jns
jne
mov
int3
movs
lods
push
retf
cmp
pop
dec
pop
jecxz
mov
outs
(bad)
jg
in
dec
dec
outs
xchg
lock
dec
mov
in
scas
mov
xchg
rol
pop
loop
push
in
leave
or
mov
mov
xor
shl
jae
fwait
mov
stos
stos
aad
aas
cmp
call
or
fbld
cmc
mov
xor
pop
int
or
dec
add
xchg
fstp
cli
outs
pop
popa
sbb
sub
gs
fwait
mov
cli
pop
jmp
daa
rcl
or
outs
dec
out
stos
int3
push
sar
dec
jne
push
imul
add
adc
dec
xchg
jle
push
shl
sahf
imul
inc
int
lea
cs
mov
ret
outs
push
dec
arpl
(bad)
or
inc
sbb
adc
fcomp
lock
in
gs
(bad)
add
out
xor
fdiv
jp
dec
inc
and
push
retf
mov
or
call
sbb
xor
push
jmp
jecxz
mov
add
mov
inc
sbb
add
scas
jle
movs
inc
loope
mov
aaa
loopne
pop
sbb
pop
jne
xchg
mov
popa
bound
rol
xchg
iret
ds
aas
cmp
(bad)
test
ins
test
or
fisttp
pushf
fldenv
mov
aas
popa
or
mov
pop
repnz
push
push
mov
imul
mov
add
sbb
cmps
in
mov
lea
mov
data16
cmc
pop
(bad)
cmc
xchg
fidiv
rol
pop
aam
inc
bound
jb
push
add
leave
adc
not
add
push
mov
xor
je
or
repnz
fisttp
add
fiadd
cld
in
push
jl
adc
inc
lds
mov
cmp
sti
mov
(bad)
lock
xchg
mov
mov
or
pop
push
jp
inc
inc
push
sub
fld
or
stc
fcomp
or
rol
xchg
cmp
lock
or
pop
add
pop
lahf
lds
repz
sahf
xbegin
hlt
jge
lods
fistp
jnp
jmp
mov
jnp
push
adc
test
jecxz
or
clc
mov
cmp
sub
out
test
pop
pop
sub
add
out
nop
lds
jg
clc
(bad)
or
call
add
ret
mov
and
lock
jmp
sbb
dec
xchg
sub
mov
inc
or
scas
xchg
mov
outs
xor
pop
add
push
cld
repz
mov
mov
pop
pop
cmc
cmc
(bad)
repz
and
mov
dec
mov
lods
push
loope
ret
mov
jbe
sub
es
xchg
loop
stos
(bad)
jecxz
mov
sub
add
icebp
mov
jl
ds
push
in
je
mov
or
fnstcw
scas
arpl
call
addr16
call
hlt
sahf
push
mov
fcomp
sbb
aam
popf
cmp
cmps
mov
sub
jb
test
cmp
jnp
mov
add
hlt
cmps
jno
in
stos
mov
mov
popf
cld
xchg
add
repz
and
mov
hlt
pop
call
popa
fidiv
push
jl
jle
mov
pop
lods
loope
das
mov
loop
mov
push
jg
int3
mov
mov
in
mov
out
out
lods
inc
adc
daa
hlt
jo
aam
dec
daa
js
(bad)
in
out
shl
iret
stc
leave
movntps
and
push
movs
mov
add
pop
xchg
in
jmp
jg
or
push
jl
inc
outs
sub
call
xor
in
mov
mov
fldln2
mov
fisub
mov
mov
les
addr16
cld
push
hlt
jle
xchg
inc
add
ds
aas
cmc
movs
mov
sahf
jecxz
cmp
mov
scas
mov
jae
push
xchg
adc
adc
movs
mov
dec
sahf
mov
mov
mov
xchg
xor
popf
test
sbb
ror
jo
jo
xchg
stos
daa
lds
fcomp
(bad)
cmp
gs
lods
add
fwait
xor
mov
arpl
mov
xchg
fdivr
loop
cmp
inc
fld
cwde
fwait
retf
shl
pushf
push
sbb
xor
div
adc
popf
push
jle
ror
mov
xchg
pop
out
test
into
test
xor
neg
sbb
shl
xchg
mov
dec
in
sbb
push
push
push
xor
mov
ins
push
imul
mov
hlt
mov
xchg
movs
cmp
movs
mov
je
hlt
pop
cmp
mov
mov
aad
add
cli
out
in
fwait
sub
in
retf
jns
jmp
sbb
jbe
gs
es
(bad)
into
push
adc
xor
dec
pusha
and
(bad)
cmp
fcom
push
push
popa
ret
movs
in
cwde
xlat
mov
lock
inc
or
mov
push
sub
xchg
sbb
mov
in
push
adc
out
or
add
test
(bad)
out
xor
ret
push
ins
outs
mov
in
out
lds
push
test
std
xchg
in
xchg
scas
out
(bad)
xchg
mov
hlt
sub
cli
add
sbb
bound
push
imul
sti
push
(bad)
and
(bad)
repz
dec
dec
inc
lahf
mov
pushf
sub
shl
stos
and
pop
sub
jp
jp
jge
idiv
cmp
out
(bad)
retf
push
mov
fmul
dec
leave
or
shl
(bad)
sti
call
div
ficomp
out
jge
xchg
xor
ds
mov
mov
sub
sub
test
cmp
ins
cmp
jbe
(bad)
bound
pop
and
pop
imul
lods
inc
mov
xor
sbb
or
mov
lods
cli
push
leave
rcr
inc
adc
inc
aad
sub
cwde
xor
shl
sub
cld
int3
xchg
mov
sub
out
jp
(bad)
int
sbb
push
aam
mov
xchg
inc
sbb
test
pop
out
loopne
xsavec
cmp
cmp
repz
xchg
nop
adc
lods
or
push
test
and
fdiv
push
sub
mov
inc
out
(bad)
icebp
mov
or
push
outs
pop
hlt
es
call
test
jge
and
jg
fnstenv
cmps
mov
jno
lock
xor
jmp
and
cmp
out
ret
xchg
jge
cmps
sti
push
fwait
nop
ja
icebp
sbb
push
(bad)
inc
hlt
gs
rol
mov
sub
jmp
jns
or
mov
sbb
pop
outs
les
icebp
call
push
pusha
mov
inc
(bad)
outs
fsubr
pop
xor
leave
sbb
add
shl
movs
cmp
cmp
fpatan
mov
jmp
cmps
or
inc
ss
xchg
inc
(bad)
scas
ss
(bad)
pop
xor
push
outs
xchg
push
adc
mov
hlt
rol
mov
inc
inc
mov
mov
out
je
and
movs
add
xor
test
ds
hlt
fnstcw
int3
jg
jg
hlt
sbb
dec
sub
dec
imul
xchg
cmp
push
and
dec
push
out
out
fld
mov
jne
cmps
push
(bad)
xor
cmps
stc
jne
repz
fwait
adc
popf
xor
rcl
jmp
mov
out
jbe
xchg
frstor
(bad)
sub
in
aad
int
call
push
jg
jae
mov
or
ret
dec
bswap
mov
out
xor
sbb
shl
shl
pop
mov
add
bound
push
xor
inc
push
das
cmp
repz
jne
sahf
sub
sub
nop
popa
mov
out
or
loop
push
fneni(8087
push
mov
xchg
or
movs
adc
std
mov
sbb
in
adc
in
pop
mov
push
xor
pusha
push
mov
pop
cmc
mov
inc
push
inc
dec
ja
sbb
pusha
stos
(bad)
mov
jp
repz
adc
sub
fsub
mov
rcr
mov
mov
fwait
add
and
inc
int
xchg
push
pop
sub
mov
xlat
cwde
push
push
sub
dec
jg
sub
call
(bad)
cmps
pop
cmp
mov
repz
dec
add
xor
call
xchg
retf
mov
jmp
ffreep
loopne
adc
push
retf
jle
adc
fdivr
outs
pop
icebp
fwait
xchg
scas
inc
or
dec
xor
mov
sbb
js
stc
add
stos
cmps
jmp
out
sub
pop
cmp
clc
in
repnz
adc
inc
pop
out
cs
sub
cmps
mov
repz
adc
and
and
jge
and
sub
fwait
push
(bad)
jo
loop
aaa
(bad)
rcl
cli
ss
jg
pop
retf
inc
imul
mov
(bad)
ins
mov
or
dec
cmp
in
inc
repz
loope
mov
jno
push
loop
mov
mov
inc
xchg
and
test
sar
ss
call
popa
call
loop
imul
fdivr
sbb
jecxz
jp
test
and
jns
(bad)
dec
lock
jo
push
mov
hlt
xchg
push
in
stos
adc
jge
and
jb
xchg
dec
jne
sub
mov
xchg
les
rcr
out
jb
adc
je
cmp
or
fdivr
pop
cwde
es
pop
enter
inc
add
adc
mov
sub
cmp
outs
xchg
sub
or
dec
out
pop
lds
add
int3
push
sbb
outs
cmp
fidivr
outs
mov
adc
mov
pop
xor
mov
add
jge
pop
xchg
js
sbb
xor
dec
in
adc
aam
out
aad
inc
xchg
xor
sahf
ret
sbb
pusha
or
add
inc
data16
test
adc
cdq
cmp
xlat
xchg
ja
dec
mov
loopne
leave
push
stos
sar
into
repnz
sbb
fdiv
arpl
pop
fwait
adc
gs
dec
cmp
sti
sub
jle
mov
lds
adc
pop
xor
test
pop
lds
aam
lahf
sub
scas
dec
loopne
push
test
and
add
jmp
or
push
adc
jmp
ins
dec
fisub
mov
push
cld
or
fimul
xlat
call
inc
xlat
or
inc
sub
ins
jge
retf
repz
lock
cmp
pop
out
jge
cmp
pop
push
stos
popf
sbb
pop
or
adc
inc
jne
xchg
dec
dec
mov
(bad)
add
int
push
xchg
xchg
push
out
pop
push
outs
int
inc
mov
sub
xlat
aaa
push
push
fiadd
xor
mov
fistp
and
xchg
jne
and
shr
call
ret
mov
ret
gs
mov
mov
retf
xor
jle
lods
(bad)
push
ficomp
imul
add
sub
das
enter
push
dec
pop
pop
ret
shl
push
call
nop
xchg
nop
pop
dec
sbb
mov
imul
arpl
adc
in
mov
push
mov
inc
popf
dec
cmp
cmp
push
adc
cmps
dec
(bad)
sub
adc
jle
pop
test
push
in
rol
scas
jmp
test
xor
jge
inc
mov
(bad)
jnp
out
pop
sub
sbb
ja
inc
xchg
arpl
or
add
pop
aas
and
mov
nop
dec
cld
lods
pop
fcomp
enter
outs
imul
fistp
cmp
test
cmp
inc
mov
xor
pop
(bad)
adc
push
push
mov
mov
inc
push
jmp
and
adc
ins
inc
jmp
imul
hlt
arpl
mov
int3
xchg
and
aam
sub
aam
test
or
and
sbb
push
aam
mov
rcl
repnz
ror
daa
add
cmps
sbb
lea
std
inc
cwde
xchg
je
out
into
push
dec
sti
fisttp
sub
sbb
pop
mov
adc
aam
xor
adc
clc
mov
or
adc
mov
mov
cmc
jl
lock
or
inc
jns
in
lahf
xor
fdivr
(bad)
mov
leave
mov
mov
and
(bad)
out
sbb
ds
add
das
cli
add
repz
repnz
aam
pop
dec
mov
push
retf
jmp
iret
mov
cmp
neg
xchg
ret
das
std
clc
jb
xchg
or
jnp
pop
or
inc
dec
(bad)
movs
adc
xor
pop
inc
push
or
mov
xchg
inc
fwait
shl
stos
bound
mov
leave
mov
and
add
mov
ds
in
sbb
shr
imul
inc
pusha
shl
xchg
add
lahf
les
xchg
(bad)
data16
or
call
shl
mov
cmc
or
jecxz
xor
test
mov
xchg
or
sbb
xchg
cmps
push
cmp
call
pop
shl
addr16
sub
(bad)
loope
ins
repz
inc
add
sti
sub
cld
cwde
adc
mov
or
adc
xchg
(bad)
pop
and
mov
push
repnz
lds
int
fbld
or
stos
mov
stos
movs
bnd
jg
(bad)
jge
dec
mov
fild
adc
inc
repnz
into
ror
shl
scas
mov
push
int3
push
push
xor
popa
inc
dec
xchg
jge
mov
jmp
xor
xchg
cmp
sbb
in
push
mov
pop
iret
fxtract
loope
fbld
inc
int3
push
mov
pop
xor
mov
scas
popa
movs
retw
aaa
popa
mov
ins
sbb
jg
jae
hlt
and
(bad)
sub
cdq
and
mov
pusha
and
icebp
push
cld
int3
movs
mov
enter
(bad)
sub
jnp
dec
inc
scas
call
rcl
or
xor
cli
retf
jecxz
mov
jbe
jbe
gs
mov
xlat
and
sbb
outs
popa
jl
xchg
daa
fisttp
jle
popa
jge
popa
xchg
mov
or
dec
movs
or
sbb
cmp
jg
or
dec
push
enter
les
repz
mov
jae
inc
sti
and
popa
sub
out
in
pop
retf
or
push
xor
test
clc
jb
stos
xor
(bad)
sub
jl
mov
dec
repnz
cmp
add
xor
idiv
pop
stc
pop
pop
xchg
outs
nop
dec
cld
pop
xchg
push
push
xchg
dec
loop
mov
mov
inc
and
jnp
mov
hlt
lods
dec
pop
xor
adc
std
es
mov
test
push
jne
test
dec
(bad)
xor
pop
adc
jmp
sbb
lea
fs
inc
shl
fdiv
dec
dec
add
jae
dec
xor
in
xchg
shr
(bad)
test
int3
add
inc
xchg
push
jne
(bad)
hlt
ins
scas
or
jae
mul
das
jns
enter
outs
inc
inc
out
jbe
lods
fcomp
or
and
dec
inc
fisttp
sahf
adc
shl
mov
mov
mov
(bad)
lds
int3
and
fidiv
jge
jmp
mov
cld
sahf
gs
jmp
jmp
xor
(bad)
cmp
mov
add
lods
and
add
inc
xlat
push
test
out
ins
sti
ret
aaa
repz
cmps
pop
mov
jmp
dec
lock
scas
test
call
inc
add
or
icebp
add
js
fst
fdivr
or
test
inc
fisttp
add
repnz
dec
icebp
movs
mov
mov
pop
inc
mov
add
ins
sar
jnp
lahf
ror
jl
mov
outs
mov
adc
loop
adc
inc
stos
mov
inc
or
xor
fidiv
jne
data16
out
dec
add
idiv
fcmovbe
aaa
pop
adc
retf
add
push
test
dec
push
frstor
cld
(bad)
mov
jb
loopne
push
or
xchg
pop
cmps
jecxz
mov
sbb
xchg
scas
pop
cmp
mov
push
repz
sti
add
pop
pushf
inc
push
dec
pop
jge
cs
inc
jmp
movs
dec
cmp
bound
sbb
pop
or
std
jg
test
aam
ss
outs
int
fwait
retf
add
push
inc
out
push
adc
pop
push
retf
jns
shl
call
cmp
mov
fimul
cmps
int
dec
sahf
outs
in
sub
push
cli
adc
pop
mov
dec
neg
das
enter
fcomp
movs
fdivr
jmp
loopne
adc
add
rcl
repz
pop
xor
in
mov
sbb
fnsetpm(287
cmp
inc
mov
sub
adc
inc
stos
pop
push
int3
inc
push
fsub
pop
cmp
ds
fs
mov
fld
enter
add
sbb
xchg
xor
cmc
jp
mov
sahf
aas
xchg
mov
jnp
addr16
aaa
add
sub
mov
outs
shl
mov
test
sti
xchg
(bad)
cld
push
cmp
fs
cmp
popa
inc
xlat
sbb
stos
scas
shl
jbe
movs
scas
jle
je
sbb
dec
shl
(bad)
ret
jbe
sbb
sbb
lods
mov
cmp
push
rcl
in
scas
and
add
xchg
ja
or
mov
mov
jge
mov
js
xchg
popf
outs
gs
xchg
pop
sub
sub
add
add
cwde
mov
xor
or
inc
aaa
adc
xchg
pop
(bad)
sbb
lea
daa
mov
xor
outs
popa
dec
bound
test
or
daa
mov
jns
push
(bad)
scas
or
pop
cmps
mov
and
mov
add
lock
stos
les
mov
ss
mov
adc
je
mul
push
outs
pop
pusha
push
or
neg
pop
repz
pop
pop
pop
cmp
inc
pop
mov
adc
mov
xor
int3
mov
pop
push
push
fsin
aas
mov
pop
fsubr
test
and
cmps
mov
jl
movs
mov
inc
cmp
jae
clc
mov
xor
add
mov
or
push
cs
sub
mov
clc
ins
imul
popa
mov
xchg
lods
xchg
push
add
dec
ja
or
aad
fmul
daa
xor
gs
and
sub
xlat
stos
(bad)
aad
pop
xchg
fldenv
js
fadd
into
pop
xlat
sbb
ror
cmp
pop
adc
cmp
je
test
push
cmp
xchg
dec
ret
xchg
xchg
ja
jg
mov
(bad)
cmps
push
aam
push
sub
lods
jnp
mov
mov
mov
mov
outs
imul
std
mov
mov
rol
jge
sub
arpl
pop
stos
out
ret
jbe
push
push
fwait
dec
mov
fdivr
mov
mov
stc
adc
sub
lock
add
(bad)
jmp
imul
cmp
out
cmps
fwait
add
aad
pop
addr16
cli
and
ins
cld
and
sbb
jns
adc
in
and
(bad)
push
jae
das
neg
pop
mov
das
or
fisttp
inc
jge
int
retf
pusha
cmp
les
jg
and
xchg
xor
sbb
jp
in
inc
xor
test
outs
and
(bad)
fs
pop
ins
ss
rol
dec
shr
push
stc
pop
jg
fwait
xchg
sbb
mov
cmps
dec
or
add
(bad)
mov
(bad)
fdiv
ins
aam
cmp
jae
adc
fadd
pop
xor
push
adc
add
pop
rcr
icebp
and
int3
push
jg
push
push
and
ret
jbe
and
mov
pop
hlt
cmps
adc
sub
add
jb
jbe
adc
xor
xchg
retf
xchg
push
xchg
scas
aas
pop
retf
push
inc
pop
mov
es
mov
int
mov
leave
xor
mov
test
ja
inc
loopne
imul
and
dec
aad
jmp
sub
in
or
push
pop
lock
add
loope
bnd
xchg
sahf
sbb
mov
and
sbb
ja
push
sar
xor
jne
sti
mov
push
jnp
pushf
test
sub
sbb
cmp
sbb
pop
or
retf
inc
add
cld
or
dec
push
ja
arpl
icebp
mov
rcr
ins
jo
pop
add
mov
mov
pop
mov
pop
mov
xor
pushf
jae
adc
xchg
add
add
inc
enter
mov
and
(bad)
ja
sti
(bad)
push
jp
add
sbb
cwde
push
dec
adc
push
xchg
js
mov
sti
hlt
or
lea
fisttp
in
add
fcomi
mov
in
push
mov
sub
jbe
or
push
xor
arpl
add
pop
pop
mov
nop
retf
sti
mov
or
and
mov
daa
sbb
pop
ret
pop
ds
cmps
cdq
mov
mov
mov
int
add
and
jecxz
sbb
mov
xchg
jbe
mov
nop
dec
stc
sub
and
mov
dec
inc
push
cmps
jae
cmp
xor
inc
bound
rcl
(bad)
push
hlt
addr16
pop
jp
mov
imul
and
mov
adc
mov
or
test
sti
inc
cli
sbb
lock
jmp
add
mov
inc
cmp
push
pushf
in
fsub
mov
xchg
jns
aaa
cmps
jmp
clc
dec
xchg
xlat
inc
ins
test
add
scas
dec
dec
scas
js
xchg
dec
out
or
jno
or
jbe
xchg
inc
mov
stc
(bad)
out
in
pop
sbb
in
rol
jge
sbb
fnsave
jl
pusha
xor
mov
fst
sbb
arpl
loope
mov
aas
xor
fnsave
(bad)
jne
call
rol
sub
cmp
xor
jne
lds
test
test
fst
popf
or
jne
xchg
cmp
mov
dec
outs
push
push
cmps
scas
iret
aas
(bad)
je
dec
add
xor
out
xor
fsub
xlat
in
mov
cli
pop
push
pop
push
or
sbb
(bad)
jns
fwait
push
daa
mov
jo
ret
and
ficomp
test
pushf
cmp
icebp
(bad)
imul
in
xchg
sbb
push
ss
mov
fldcw
cmps
mov
pop
loope
or
rep
push
dec
enter
dec
lock
das
loopne
repz
xlat
(bad)
loope
push
dec
inc
(bad)
rcr
or
add
cdq
mov
and
arpl
shr
xor
sbb
add
out
add
loop
movs
lds
or
pop
arpl
and
mov
mov
xor
(bad)
movs
adc
mov
sub
scas
jne
or
jne
push
les
outs
mov
mov
mov
nop
jecxz
(bad)
pop
cdq
add
jp
frstor
pushf
sbb
inc
adc
shr
xchg
mov
je
adc
dec
push
dec
dec
movs
fimul
cmp
dec
mov
jmp
ins
cli
test
fstp
pop
aas
pop
test
mov
int3
addr16
adc
inc
mov
xor
mov
push
and
dec
adc
jle
dec
mov
adc
jbe
arpl
push
dec
out
pop
xchg
bound
jb
jp
pop
nop
sahf
or
mov
jo
inc
(bad)
mov
mov
mov
pop
in
xor
xchg
scas
in
in
nop
dec
popw
add
mov
adc
jbe
rol
ins
icebp
dec
cld
sti
mov
jecxz
ss
int
adc
sub
dec
or
add
cmps
pop
xchg
dec
cli
or
mov
inc
aad
adc
mov
outs
scas
mov
adc
cdq
sub
in
mov
cwde
mov
sahf
mov
inc
mov
cli
imul
adc
push
xchg
adc
sub
and
arpl
lods
das
out
cmc
add
call
(bad)
arpl
stos
pop
bound
push
bound
sahf
ins
mov
out
mov
addr16
pop
dec
fcomp
xor
pop
adc
mov
dec
fcmovnu
mov
out
inc
or
dec
sub
dec
clc
jae
xchg
dec
repz
rcl
ror
fnstsw
jae
in
pushf
cmps
mov
inc
das
clc
adc
pop
add
push
cli
shl
cmp
sbb
in
ret
and
or
sbb
and
es
fldlg2
sub
dec
popf
mov
scas
shl
daa
xor
test
cli
rol
inc
adc
jle
inc
pop
push
or
std
pop
pop
pop
sar
and
hlt
test
bound
scas
push
mov
xor
loop
sub
mov
outs
add
xor
add
and
les
dec
add
push
xchg
dec
mov
mov
xchg
leave
das
mov
pop
add
dec
push
push
adc
movs
jecxz
aad
xor
(bad)
dec
in
pop
daa
xchg
popf
dec
xchg
sbb
data16
std
mov
xchg
jno
in
shl
sbb
jl
movs
cmp
mov
dec
cmp
inc
ror
dec
call
add
out
(bad)
aaa
pop
cld
add
xchg
jecxz
lock
popf
imul
or
xchg
popa
and
out
mov
sbb
pop
fiadd
jmp
sti
adc
ds
cmp
cmp
nop
push
and
mov
scas
adc
push
inc
inc
inc
sbb
push
sbb
sub
out
jo
adc
add
and
jae
inc
and
push
fnstcw
ror
mov
add
cmps
lods
and
pop
sbb
pop
divps
sub
cdq
and
and
jno
test
pop
inc
push
out
clc
in
mov
in
jo
movs
or
sbb
movs
cdq
sbb
xchg
or
sub
sti
jmp
mov
adc
xchg
dec
pop
inc
mov
jb
add
lods
and
dec
mov
retf
push
dec
dec
loop
out
test
pop
sub
mov
dec
data16
dec
inc
xchg
and
retf
out
nop
xchg
lds
out
dec
dec
jb
cmp
push
into
dec
or
adc
lea
cli
mov
leave
jl
in
daa
mov
icebp
pushf
push
cli
cmp
ret
jns
dec
push
ss
push
dec
out
jmp
cmc
(bad)
imul
jbe
repz
jge
xchg
out
les
sub
dec
push
add
mov
pop
popf
or
popf
call
out
cmps
into
das
push
sub
scas
pop
jbe
cmp
push
test
cmp
outs
xor
sbb
mov
inc
inc
and
xor
stos
dec
sbb
inc
xchg
and
(bad)
and
add
push
cdq
sbb
popa
push
cld
retf
or
leave
pusha
add
push
cmp
shl
loopne
push
pop
xchg
inc
aaa
push
stc
fwait
push
xchg
pop
xor
xchg
xchg
call
sub
mov
sar
push
lds
and
sub
pushf
mov
inc
and
add
mov
inc
xchg
jb
ins
jle
cmps
push
push
out
stos
sbb
fist
push
iret
ret
(bad)
pop
xchg
mov
inc
hlt
fsubr
dec
or
mov
call
xlat
mov
or
xchg
mov
es
inc
scas
mov
adc
retf
dec
(bad)
loope
add
cmp
rcl
cmc
fisttp
lahf
or
mov
fwait
int3
add
aam
cmp
(bad)
popf
aam
jge
aas
mov
push
cmps
mov
pop
icebp
dec
cmp
adc
mov
cwde
popf
not
fs
div
mov
cmp
inc
mov
in
shl
cmps
mov
out
fisttp
adc
sbb
pop
or
fmul
pop
sub
leave
retf
mov
pop
pop
(bad)
pop
and
lock
fmul
jbe
cmp
dec
stos
add
jb
or
lds
push
sub
jno
and
mov
pop
(bad)
(bad)
loop
lea
inc
fstp
iret
repz
les
outs
jg
(bad)
pop
scas
cli
add
arpl
retf
adc
call
dec
ins
ror
out
mov
cld
ror
mov
push
push
pop
sub
jb
pop
adc
sub
mov
rcl
cmp
call
js
mov
fld
xchg
aam
cwde
and
(bad)
ja
push
shl
xor
psubd
pop
mov
pushf
xor
shr
inc
les
cmp
ins
sub
jne
std
inc
test
popa
mov
js
mov
mov
sbb
lds
sbb
or
gs
or
loopne
inc
call
popf
bound
push
dec
mov
pop
aas
adc
mov
and
aad
dec
push
fs
fcomip
jp
sar
mov
cmp
dec
nop
lea
xchg
aas
fldenv
dec
vsubss
sbb
sbb
aas
mov
dec
push
sub
int3
mov
jae
mov
imul
lock
gs
xchg
mov
out
das
push
out
(bad)
into
dec
jg
jle
call
out
and
lock
xchg
js
stos
pop
std
int
add
aam
pop
xor
out
mov
not
icebp
mov
lds
mov
imul
call
dec
repz
shl
cmc
fs
dec
outs
sbb
icebp
pusha
push
shl
sahf
pop
movs
and
inc
ret
sti
shr
push
push
bnd
xchg
xchg
iret
mov
push
xchg
rcr
jg
in
inc
mov
int3
mov
(bad)
call
test
xor
(bad)
sahf
and
add
push
adc
adc
in
sbb
dec
arpl
fs
add
pop
fcmovnb
inc
in
or
cld
jecxz
(bad)
jge
jne
sahf
pop
mov
pop
inc
sbb
clc
test
mov
or
dec
jecxz
ret
mov
jmp
and
jp
mov
sar
mov
mov
sub
imul
in
fdiv
out
fisub
pushf
or
jp
in
dec
pop
xor
cmp
mov
jae
out
and
adc
(bad)
mov
fdivr
pop
lods
in
cmp
lea
je
imul
pop
lock
dec
mov
call
addr16
jg
pop
mov
jno
jo
std
mov
dec
pop
lea
push
(bad)
(bad)
sbb
mov
push
jmp
cmp
mov
add
sar
cld
das
pop
jno
dec
repz
inc
pop
mov
xlat
and
push
mov
inc
loope
or
(bad)
test
lods
or
sbb
lods
stc
scas
push
jp
mov
mov
movs
jmp
push
push
jmp
or
mov
mov
sar
lods
retf
push
(bad)
add
dec
arpl
pxor
cld
dec
arpl
es
sbb
popf
ret
sub
in
and
mov
adc
les
jge
push
inc
push
jbe
repnz
nop
mov
and
shr
and
dec
out
push
cmp
into
stc
sub
mov
dec
mov
mov
inc
pop
jg
ins
push
jmp
mov
mov
mov
mov
push
cmps
jmp
jmp
jmp
retfw
dec
icebp
xchg
dec
adc
and
pushw
xor
adc
push
scas
xchg
jmp
fdivr
stc
or
pushf
in
sbb
dec
mov
test
mov
movs
lods
jns
imul
adc
mov
mov
push
mov
sub
adc
outs
in
or
enter
iret
xchg
les
or
cmps
jle
jb
rol
mov
not
shl
xlat
and
and
outs
add
jmp
enter
mov
adc
inc
push
enter
push
jmp
and
or
pop
lods
dec
scas
pop
outs
jae
xchg
inc
push
sahf
push
and
or
arpl
fsub
dec
xchg
adc
xchg
and
dec
mov
push
and
out
mov
rcl
pop
adc
pushf
jmp
addr16
mov
pusha
pop
push
mov
scas
push
ins
mov
stos
sar
xchg
fidivr
in
iret
sbb
hlt
dec
retf
mov
xchg
lahf
or
push
sbb
cmp
fist
jo
idiv
mov
out
cmp
sub
sub
xchg
data16
cmps
pop
ins
jmp
ds
jns
mov
add
das
xchg
dec
fs
push
pop
aas
cmp
mov
pop
xchg
push
lea
aam
imul
shl
enter
fs
and
mov
push
inc
aad
shr
and
das
ds
and
repnz
add
jne
jp
imul
stos
clc
jo
ds
xchg
ficom
(bad)
pop
int
lahf
jmp
loopne
mov
jae
cmc
fcompp
fsub
pusha
stos
das
sbb
out
mov
dec
popf
in
xor
fwait
inc
(bad)
cs
mov
push
mov
nop
sub
xor
mov
and
mov
cmps
fadd
push
add
ficom
ins
ins
jge
xchg
int
call
fs
sub
mov
and
add
jl
movs
icebp
(bad)
loope
adc
jbe
(bad)
pop
bound
pop
jmp
ss
sti
jl
sub
rcl
(bad)
fwait
inc
sar
enter
xchg
fwait
dec
push
adc
cdq
dec
mov
sbb
mov
push
mov
inc
or
pusha
add
data16
jmp
cwde
sbb
or
xor
adc
or
inc
xlat
mov
inc
jl
dec
aam
ja
and
pop
cmps
mov
enter
jbe
lock
xchg
mov
jp
xchg
sbb
data16
je
or
fisubr
mov
in
les
push
sbb
adc
(bad)
fimul
(bad)
dec
xchg
sahf
ins
es
lds
rcl
(bad)
xchg
jno
pop
shl
lea
mov
sub
push
jmp
xchg
retf
lock
sub
xor
add
scas
jg
mov
sti
ins
arpl
in
inc
adc
pop
mov
xchg
loopne
daa
mov
mov
lea
jg
(bad)
call
retf
retf
sub
xchg
mov
ss
jp
idiv
cs
test
(bad)
mov
mov
fnstsw
stc
cdq
mov
xchg
sbb
mov
adc
lea
je
test
dec
adc
adc
or
jge
ins
push
(bad)
sub
xchg
movs
cmps
push
xor
or
cmp
scas
inc
rol
and
mov
lds
cmps
mov
das
jo
cli
fwait
inc
inc
ret
push
nop
in
or
in
arpl
(bad)
cmc
sbb
pcmpeqw
inc
(bad)
mov
dec
(bad)
mov
inc
sub
inc
lahf
in
pop
and
call
imul
mov
mov
daa
scas
mov
pop
xchg
inc
imul
mov
sub
xor
addr16
mov
dec
add
enter
inc
adc
sub
or
cmp
jl
je
(bad)
div
jle
mov
(bad)
mov
and
out
in
nop
sbb
xchg
mov
mov
loopne
mov
les
and
mov
add
pop
adc
add
add
sub
push
scas
out
pop
add
stos
retf
or
(bad)
adc
dec
xchg
mov
push
shl
dec
sub
xor
cmp
outs
pop
xchg
punpcklwd
cmps
adc
xchg
jmp
call
cmc
mov
je
push
fld
clc
mov
push
dec
pop
mov
mov
call
sbb
popa
retf
adc
stos
aas
adc
(bad)
pop
stos
setl
(bad)
out
fwait
xor
fucomi
add
cmp
push
add
clc
sub
inc
js
or
call
call
jno
sbb
cmp
mov
std
sub
fcom
mov
mov
test
or
mov
jecxz
lds
hlt
lahf
aaa
sub
outs
fs
fmul
push
in
test
add
pusha
es
outs
test
lock
lahf
jle
and
pop
scas
adc
xor
xor
xor
(bad)
pop
pop
add
pushf
(bad)
adc
retf
lock
xchg
xchg
xchg
mov
mov
jmp
in
retf
xchg
jae
in
mov
dec
pop
daa
cmps
or
je
push
addr16
push
sub
sub
mov
in
mov
in
mov
jge
add
js
pop
imul
loopne
imul
daa
jns
jmp
in
pop
mov
jp
jmp
dec
push
mov
iret
daa
jmp
cld
or
out
push
adc
inc
test
ja
cli
sbb
sub
addr16
xor
clc
out
mov
stc
dec
divps
imul
push
mov
popa
jns
ds
adc
jmp
mov
fnstcw
inc
or
or
jmp
jnp
retf
inc
ret
cmp
or
sub
in
enter
dec
test
xor
in
mov
pop
adc
sar
in
pop
in
fs
xchg
(bad)
sbb
push
or
xchg
mov
xchg
repz
out
jl
scas
push
outs
mov
xlat
in
ja
mov
pop
fidivr
mov
fcmove
stos
cs
nop
into
adc
aas
pop
mov
push
push
lods
pop
sub
push
jp
fstp
and
dec
sti
nop
call
jge
dec
inc
lds
js
fild
ins
out
jge
pop
mov
ror
idiv
test
add
aam
retf
or
pop
xchg
jae
scas
pop
add
push
or
jl
lock
fwait
scas
enter
daa
xor
addr16
cmps
or
(bad)
out
test
jb
bound
rol
sbb
sbb
test
mov
movs
pop
sbb
test
add
push
push
sahf
in
fs
jnp
xchg
fcom
cld
movs
xchg
jno
cmp
sbb
pop
xor
cmp
mov
in
or
lods
daa
mov
mov
lea
push
mov
or
je
scas
dec
jno
mov
pop
shr
lock
add
push
daa
sub
mov
adc
xor
xor
mov
rdpmc
dec
enter
push
mov
into
sub
cmps
mov
pop
neg
sbb
xor
adc
xchg
pushf
enter
lock
pop
push
mov
push
shl
cmp
pop
add
lds
stos
mov
mov
lods
or
jmp
push
cwde
test
icebp
xchg
fucomp
dec
repz
in
call
leave
ins
and
xchg
test
xchg
sbb
scas
out
sbb
repnz
lahf
mov
lahf
sub
pop
scas
(bad)
outs
rol
or
push
or
xor
je
lea
sub
jno
inc
shl
mov
adc
int3
pop
stos
rcr
mov
or
mov
popa
xor
mov
push
into
push
cmc
aad
jg
bound
xor
cld
je
jl
pop
addr16
sbb
cmp
cmc
or
pavgb
out
xchg
jb
inc
mov
fadd
rcr
es
xchg
dec
lock
mov
pop
pop
nop
push
arpl
and
pusha
push
out
inc
cmps
or
leave
push
dec
jne
(bad)
(bad)
daa
mov
and
cdq
std
push
add
mov
in
cld
jns
jg
enter
fnstenv
mov
in
jp
ror
pop
and
xchg
addr16
ret
jno
push
test
stos
clc
imul
pop
xchg
outs
dec
dec
repz
mov
jbe
push
push
lock
iret
mov
test
cmps
fist
jb
je
fwait
xchg
lea
cmp
adc
add
or
aam
and
sbb
je
xchg
mov
es
add
ins
inc
cmps
dec
mov
cs
rol
ror
lods
adc
mov
aaa
jmp
xchg
ins
cmps
lods
dec
ret
and
popf
xchg
dec
mov
jmp
jle
xchg
mov
pop
sbb
test
gs
mov
dec
ins
sbb
or
adc
ret
adc
push
stos
mov
into
nop
mov
cmp
imul
jae
div
ins
scas
sub
fucom
cmp
inc
mov
lock
dec
jns
mov
push
int
mov
pop
pop
pushf
int3
shr
dec
push
sub
retf
mov
xor
shr
cmp
inc
popf
jl
fwait
mov
mov
ret
mov
mov
mov
mov
dec
or
inc
ret
and
jle
push
mov
jns
dec
stos
addr16
pusha
leave
retf
sbb
fild
call
and
mov
loope
into
fiadd
dec
xchg
into
fidivr
push
xlat
jle
push
gs
ins
sbb
loope
jnp
pop
xor
dec
out
scas
outs
pop
hlt
sbb
xchg
js
ss
cmps
xor
inc
(bad)
jb
adc
cs
pop
out
xchg
in
cmps
cmp
test
pop
xchg
cmp
pop
fld
stc
sub
or
mov
mov
(bad)
repnz
sbb
pop
inc
int
sbb
push
cmp
lods
jo
mov
dec
add
mov
bound
xor
dec
cmp
sub
test
dec
xchg
jne
out
movs
mov
add
imul
mov
stos
movs
test
dec
cmp
sub
popf
outs
pushf
push
inc
retf
mov
ret
and
sahf
test
sub
cmp
popf
dec
or
push
fwait
mov
and
adc
scas
fs
adc
adc
jmp
jae
jae
push
jge
xor
leave
cmp
fs
sbb
js
imul
pop
dec
sbb
pop
mov
and
sub
fstp
inc
pop
pop
mov
push
ins
hlt
cmps
jnp
stc
mov
mov
and
loop
inc
add
int
mov
fistp
sub
nop
xor
sub
outs
push
imul
or
xchg
imul
pop
jae
xchg
sbb
add
dec
(bad)
and
dec
mov
sbb
jbe
mov
and
add
cmp
pushf
xchg
mov
cmps
xor
dec
lock
mov
adc
ret
out
cmp
jnp
pop
xchg
jmp
sub
int3
cmps
rcr
jae
mov
pop
adc
(bad)
mov
into
jp
and
jae
out
sub
in
and
jbe
rcl
xor
cmp
mov
inc
aad
mov
pop
push
push
icebp
dec
fnstenv
lahf
test
mov
mov
xor
sub
inc
in
add
jmp
lods
in
adc
mov
dec
and
mov
dec
pop
mov
es
or
pusha
jp
ja
cmp
cmp
fistp
sub
cmps
popa
icebp
mov
jmp
push
mov
add
inc
in
cmps
rcr
retf
scas
adc
jmp
jl
aad
push
push
movs
inc
test
push
hlt
sub
bound
leave
out
sbb
xchg
pop
ret
mov
out
gs
stos
arpl
and
mov
lahf
pusha
and
mov
(bad)
fist
or
sbb
test
(bad)
and
inc
cmc
es
xor
jp
xor
test
(bad)
das
idiv
jl
jge
lock
and
inc
stos
mov
popa
push
sub
xor
mov
aaa
dec
and
pusha
test
popa
dec
add
xor
or
push
push
mov
or
or
mov
cmps
dec
sub
adc
mov
pop
ret
hlt
jmp
movs
ret
mov
jno
push
xlat
sub
lods
push
mov
xchg
mov
icebp
ds
fidivr
fucomi
xor
(bad)
ror
inc
popa
repnz
mov
mov
lock
adc
push
ja
lahf
div
jne
pushf
push
cwde
arpl
mov
mov
int3
dec
and
aaa
mov
fnstcw
mov
adc
push
dec
aaa
(bad)
xor
inc
aam
xor
sub
adc
dec
mov
add
pop
outs
shr
loope
js
es
mov
cmp
(bad)
jb
test
ins
movs
push
mov
or
out
sbb
xchg
nop
pcmpgtw
dec
sahf
cmp
sub
rcr
nop
mov
dec
push
jns
mov
call
mov
js
and
dec
nop
pop
and
add
arpl
cmp
out
imul
aas
dec
test
push
add
in
aam
jno
in
cmp
mov
imul
add
push
popf
ret
mov
outs
popf
loopne
jmp
mov
and
sub
sub
call
and
push
jns
rcl
call
jne
cmc
(bad)
mov
add
pop
cmc
adc
repz
mov
jmp
stos
inc
cmp
mov
addr16
aam
jl
jg
mov
ds
pop
push
lods
in
iret
shl
mov
(bad)
cmovo
cmp
je
xor
dec
ror
fld1
jp
adc
out
retf
push
cmp
dec
xchg
sub
pop
and
mov
or
or
add
adc
scas
pop
(bad)
dec
mov
dec
arpl
mov
xchg
scas
add
lds
push
sbb
mov
mov
adc
or
push
adc
aam
icebp
xor
mov
jg
inc
int
sbb
sub
adc
cmp
scas
push
hlt
cmps
leave
sub
(bad)
in
cmp
cmp
lods
add
xor
frstor
imul
stos
xchg
dec
jmp
and
jne
pop
and
dec
inc
or
dec
jne
loop
int
dec
xor
gs
cmp
jle
fucomp
imul
fnstenv
jne
addr16
ss
dec
and
rcr
and
mov
xor
cmp
sub
or
cmp
std
fnstcw
ret
cmps
(bad)
jge
xor
xchg
scas
repnz
jp
adc
cmp
inc
cmc
(bad)
push
xchg
enter
sbb
jo
ret
mov
out
call
xor
mov
sbb
or
xor
loopne
ins
jmp
cmp
in
(bad)
out
add
adc
pop
out
jmp
mov
sub
pop
clc
retf
and
jmp
(bad)
fcmovnbe
push
and
mov
pusha
sub
push
imul
or
push
jge
je
outs
mov
jle
dec
pop
sbb
dec
int3
sub
xchg
call
add
sbb
data16
adc
fst
js
pop
sub
movs
(bad)
sub
and
pop
scas
sahf
fld
fmul
loope
cld
fnstcw
lods
jo
and
or
adc
in
call
ds
test
cmp
into
outs
add
xchg
pop
test
and
dec
mov
adc
xor
cmps
fdivr
repz
pop
es
sahf
in
mov
in
ret
xchg
in
add
push
and
xlat
int
jae
and
call
aam
jp
push
pop
jecxz
sub
shl
icebp
outs
pop
ret
(bad)
adc
into
movs
and
fwait
std
sahf
pop
mov
enter
ins
icebp
mov
sahf
out
inc
fild
push
ret
cmp
test
test
cmp
fdivr
xor
loop
adc
pop
mov
adc
stos
pop
mov
cmp
mov
xlat
mov
cmc
fwait
bound
inc
imul
xchg
jmp
ror
inc
call
iret
inc
inc
xchg
data16
ret
fild
add
mov
ins
cdq
adc
adc
and
push
data16
jmp
or
addr16
sti
adc
outs
ss
mov
je
pusha
mov
repz
loope
(bad)
idiv
sub
pop
xor
les
int
mov
adc
sbb
(bad)
push
xor
mov
repnz
repz
cmp
and
lds
cmp
push
or
xor
push
mov
mov
into
cmp
ret
mov
movs
leave
test
imul
test
in
test
xor
and
push
adc
jo
jmp
aaa
push
jg
ss
cdq
leave
push
sub
fcmovb
rol
lods
add
jb
aaa
je
daa
stc
push
dec
out
cmc
cmc
scas
pop
mov
sbb
cmp
mov
sbb
sub
sub
arpl
add
rol
js
mov
or
jge
adc
fwait
dec
dec
push
or
leave
sbb
dec
loopne
cmp
jl
dec
dec
or
mov
inc
sti
mov
and
xchg
jg
daa
enter
inc
push
jecxz
in
stc
fsub
or
clc
xlat
xor
mov
adc
adc
(bad)
cmc
pcmpeqw
or
jp
push
sub
jns
and
xchg
dec
mov
mov
mov
mov
cdq
or
xchg
and
cli
and
push
mov
jl
mov
push
test
rcl
and
pushf
pop
inc
fld
retf
jecxz
int3
pop
sbb
sbb
sti
xchg
xchg
xlat
sub
xchg
xchg
xchg
ret
jno
add
jnp
mov
mov
jo
imul
test
sub
jp
or
mov
rcl
push
xor
dec
test
loope
push
sbb
in
in
xchg
sub
or
xchg
imul
sbb
fdiv
xchg
popf
cdq
mov
xchg
je
ja
xchg
mov
mul
cmp
ret
push
xchg
scas
mov
sbb
jmp
sub
movs
cmovs
xor
ins
ja
add
(bad)
xchg
add
add
inc
adc
pushf
push
dec
and
out
inc
movs
mov
jg
inc
xchg
aad
cmps
int3
call
inc
and
inc
pop
outs
pop
jl
iret
mov
retf
mov
cmp
adc
jbe
add
mov
mov
add
xchg
repz
sbb
and
lock
sbb
pusha
sti
mov
scas
inc
sbb
dec
push
je
xor
and
or
in
sbb
push
and
jl
sub
or
inc
test
pushf
out
inc
gs
inc
mov
inc
(bad)
pop
mov
mov
dec
lea
push
inc
arpl
dec
pop
(bad)
sbb
loop
mov
mov
sbb
ins
push
shl
dec
pop
adc
ficom
cmp
popa
mov
fist
test
scas
repnz
xlat
cmp
inc
popa
jle
pop
cmps
scas
cmps
daa
pop
(bad)
sbb
add
mov
out
mov
scas
jmp
mov
rol
push
movs
xchg
ds
pusha
rol
adc
xchg
adc
and
adc
dec
mov
cdq
fdivr
test
in
data16
xor
sbb
or
clc
cmp
push
cmp
ror
out
out
or
or
pop
test
jg
repnz
js
cmp
ret
and
test
mov
xchg
jo
stos
add
adc
shl
(bad)
ja
inc
sub
mov
push
cmp
loope
sbb
dec
jne
and
daa
stc
xor
or
mov
mov
int3
lds
xchg
and
jne
mov
add
daa
pop
lds
sub
aad
inc
hlt
xchg
cli
mov
jmp
aaa
adc
cmp
cmp
inc
imul
aad
ror
xor
ins
fistp
adc
outs
int3
imul
pop
fidivr
cli
mov
test
jmp
popf
popf
inc
(bad)
cmp
mov
pop
jmp
ret
shr
mov
cmps
lds
gs
shl
push
push
scas
ret
call
je
and
mov
dec
fs
in
(bad)
jnp
das
inc
jle
dec
fisttp
sbb
pop
ins
push
pop
jg
lods
fstp
dec
mov
jge
pop
dec
push
test
push
(bad)
rcr
leave
sbb
inc
mov
inc
sub
cmp
cmp
sahf
mov
sub
aam
mov
mov
mov
nop
iret
sbb
push
push
mov
mov
inc
xor
(bad)
push
pslld
out
cmp
jle
or
pop
ret
inc
mov
mov
jns
jmp
and
sub
loopne
shl
xor
je
(bad)
mov
fadd
(bad)
pop
mov
jp
sahf
xchg
sti
push
mov
jecxz
mov
xchg
xor
jo
das
adc
js
in
push
mov
aam
push
xchg
dec
push
ror
pop
fld
jnp
push
xchg
stc
leave
stos
xchg
and
mov
adc
and
aad
gs
sar
sub
dec
push
nop
icebp
and
xor
hlt
repnz
(bad)
cld
mov
cmps
cmp
cmps
jmp
pusha
adc
ins
aaa
outs
add
jl
pop
mov
dec
dec
jae
ins
les
adc
xchg
jle
in
xchg
fcmovnb
int
icebp
lods
lock
idiv
pop
enter
repz
(bad)
xchg
xor
mov
xchg
mov
sti
sub
dec
cmp
mov
gs
xchg
pop
pop
fistp
jmp
xchg
jmp
push
sub
scas
sbb
push
ficomp
mov
pushf
mov
pop
loop
mov
add
mov
ror
xor
or
add
dec
stos
push
xchg
sbb
adc
shr
and
mov
xor
dec
imul
scas
sub
pop
jns
pushf
leave
ficomp
rcl
mov
enter
mov
pop
imul
data16
push
push
mov
and
mov
xor
sub
adc
ret
ss
cmp
dec
outs
mov
lods
clc
push
push
shl
add
xor
jns
fild
imul
dec
xchg
cmp
vmovhpd
push
(bad)
add
ret
add
mov
pop
cli
xlat
aaa
cmps
xor
(bad)
xchg
daa
mov
ins
xchg
fisubr
or
loope
retf
cmp
pop
idiv
inc
adc
xchg
in
jp
push
leave
lahf
xchg
cmps
or
jo
jae
push
mov
and
cmpps
cld
adc
or
or
int
movs
adc
loope
leave
in
push
jo
mov
sbb
cmps
repz
ss
sbb
hlt
das
xchg
sbb
jg
por
aaa
inc
push
xor
pop
xchg
ss
jge
inc
aad
push
stos
add
int3
inc
shl
xlat
dec
fidivr
jnp
call
push
pop
or
cmp
movs
lods
cmps
inc
push
pop
(bad)
sub
inc
mov
int3
add
cmp
sbb
stos
pusha
hlt
or
dec
mov
test
or
movs
sub
call
or
ja
sbb
and
mov
movs
xchg
movs
mov
dec
adc
int3
out
nop
inc
jl
jne
ja
movs
fisubr
cs
mov
dec
jbe
(bad)
arpl
test
retf
cmp
xchg
pushf
cmps
lods
add
pop
shl
sahf
adc
mov
add
aam
shl
mov
aaa
adc
aad
pushf
jecxz
out
in
shr
retf
cmp
xchg
push
mov
push
bound
xchg
cmps
mov
cmp
adc
data16
rcl
jns
mov
or
xor
dec
or
scas
bound
neg
inc
icebp
dec
retf
push
jp
jecxz
lock
inc
add
adc
retf
out
test
xor
xor
ja
cmp
loop
xor
ins
add
pop
iret
fcom
scas
sub
stc
sub
dec
adc
adc
xchg
jns
mov
dec
cli
sbb
jno
in
or
sub
jae
push
test
mov
stos
xchg
mov
pop
adc
xlat
jmp
cmp
int
addr16
adc
inc
adc
mov
ffreep
mov
je
and
inc
nop
mov
iret
cmova
push
fild
push
es
inc
scas
or
pop
outs
jmp
daa
cmp
scas
les
pop
imul
jl
stos
sbb
test
fwait
mov
test
adc
xor
idiv
or
(bad)
out
xchg
mov
inc
xchg
jmp
xlat
(bad)
cdq
dec
bswap
adc
fnstenv
dec
mov
jbe
enter
les
shl
inc
in
loope
test
mov
out
mov
fild
push
dec
mov
add
imul
outs
mov
cmp
xor
mov
sbb
pushf
ret
xchg
or
popf
rcr
data16
pop
out
ret
xchg
dec
xor
(bad)
sar
cli
ret
test
les
mov
mov
jmp
stos
fs
call
stos
mov
ins
fadd
ds
mov
pop
dec
cdq
xor
and
and
fdiv
push
nop
fdiv
repz
movs
mov
sti
jno
jno
addr16
clc
add
(bad)
dec
leave
sub
mov
fwait
mov
jmp
sub
shl
retf
stos
mov
pop
sar
push
xlat
data16
push
pop
pop
call
jno
fs
cmp
dec
shr
jo
test
push
outs
mov
mov
push
das
das
push
inc
adc
mov
loop
test
inc
cmps
out
loop
dec
xchg
or
loopne
sti
add
jp
sub
inc
add
push
fnsave
iret
dec
jecxz
ror
mov
mov
dec
call
in
mov
jno
jb
sbb
in
fsubr
hlt
mov
rep
loopne
(bad)
repnz
and
xor
xor
jg
mov
jb
adc
mov
dec
into
sar
mov
and
and
or
inc
dec
push
or
pop
mov
mov
inc
dec
cmps
loope
push
cmps
fs
(bad)
retf
mov
mov
fistp
jp
jb
aam
xor
sti
sbb
jne
xchg
pop
cmp
outs
cmp
test
stos
pop
pop
in
shl
loopne
inc
push
add
ss
shr
out
not
xchg
fild
cs
icebp
rcr
out
jb
repnz
mov
jg
xchg
cmp
xchg
repnz
sub
xchg
mov
or
pop
dec
mov
bound
ja
sbb
punpcklbw
imul
movntq
shl
(bad)
lock
mov
mov
inc
in
or
retf
mov
loope
pushf
mul
jmp
psraw
scas
int3
fistp
or
dec
sbb
push
repz
popf
jmp
fcom
add
neg
pop
xchg
test
lahf
aad
shl
scas
js
inc
fsubr
adc
imul
scas
push
jmp
arpl
repz
jecxz
xor
mov
xchg
mov
test
mov
push
cmps
nop
fadd
xchg
js
cmps
je
jp
idiv
sti
add
fnsave
int
daa
xchg
stos
mov
pusha
mov
outs
nop
jp
dec
sub
ret
mov
out
jo
jmp
ret
cmp
sub
and
or
(bad)
adc
jno
inc
push
or
je
mov
dec
push
fwait
push
shl
out
cmps
das
pop
jl
sbb
outs
movs
sbb
or
std
(bad)
scas
fs
int
sub
jb
xchg
fs
vmread
and
sbb
nop
fimul
mov
xlat
sbb
pop
jnp
dec
xor
push
add
ins
cmp
sbb
(bad)
xchg
(bad)
fst
inc
retf
xor
jb
xor
sbb
mov
jg
push
leave
sub
mov
xchg
mov
jp
push
fwait
mov
fs
sti
cmp
pop
push
ret
aad
cmps
jle
lahf
or
jg
inc
les
rol
es
add
fimul
mov
daa
(bad)
stc
xchg
retf
(bad)
sbb
cmps
mov
sbb
test
cli
xor
jg
or
cmps
sub
xor
leave
in
mov
inc
les
sub
jnp
js
lods
and
mov
cmc
loopne
xchg
fild
mov
hlt
jb
dec
(bad)
pop
jmp
xchg
dec
sub
hlt
aam
jnp
mov
jg
loopne
ins
mov
nop
pop
and
jbe
xor
hlt
xchg
or
bound
xchg
mov
daa
(bad)
and
loopne
stos
fs
cmp
lods
xor
inc
lock
inc
sub
mov
movs
out
fwait
das
in
gs
xchg
dec
adc
mov
sahf
push
(bad)
add
xchg
mov
jo
lods
(bad)
xor
lea
std
lahf
or
retf
mov
adc
sbb
add
inc
aam
(bad)
gs
mov
jl
and
les
imul
push
mov
bound
das
jge
rcl
fstp
je
xchg
(bad)
xchg
pop
stos
adc
adc
ret
push
ret
or
dec
ror
and
aam
inc
push
frstor
loopne
into
pop
sub
pop
sbb
ret
adc
inc
or
call
cmovb
add
sbb
sbb
nop
adc
mov
rol
lods
jo
movs
push
cmp
jg
jg
idiv
mov
int3
popa
jle
es
and
or
scas
or
gs
sbb
nop
adc
loop
sub
jge
adc
push
add
test
push
mov
loopne
lods
push
mov
mov
icebp
jbe
(bad)
jecxz
dec
sbb
mov
out
mov
cmp
scas
and
and
mov
pop
stos
inc
push
xlat
loopne
mov
(bad)
xchg
sbb
mov
jmp
sbb
jb
(bad)
rcr
push
fisub
and
jo
inc
sub
jg
popa
cld
hlt
add
sti
mov
imul
lock
push
mov
sbb
add
push
hlt
mov
mov
xchg
scas
nop
xor
out
sbb
hlt
push
inc
shr
pop
ss
nop
fbld
mov
push
adc
call
retf
push
adc
(bad)
ret
mov
nop
push
sub
ja
or
cmp
mov
stc
scas
cmps
inc
int3
int3
mov
xor
ret
std
and
push
xlat
inc
push
mov
and
aad
pop
cmp
sti
xor
push
inc
mov
in
xor
stos
mov
xlat
mov
xor
icebp
cwde
or
mov
leave
xor
xor
ds
test
das
pusha
mov
dec
inc
bound
call
xchg
fwait
push
inc
jge
sub
mov
cmp
mov
icebp
pop
pop
js
outs
outs
xor
inc
pop
call
push
das
cwde
(bad)
shr
dec
mov
mov
les
out
cmp
dec
sti
pop
ds
add
cs
ds
push
into
ss
or
adc
jmp
std
call
adc
retf
daa
jle
sub
jne
and
xor
mov
imul
add
mov
pop
aam
mov
add
dec
les
repz
sub
pop
iret
das
ret
les
jne
das
fiadd
adc
mov
adc
aaa
cmc
jmp
push
sub
call
pop
mov
pop
outs
and
es
xchg
mov
dec
sub
inc
sbb
aam
sar
leave
vmovups
adc
aaa
add
sub
retf
xor
fwait
into
je
push
retf
add
sbb
(bad)
xlat
je
sub
cdq
sbb
jecxz
leave
mov
mov
clc
in
jecxz
repz
jle
xor
mov
mov
and
add
jo
pop
movs
and
(bad)
push
pop
inc
and
jb
xchg
jle
int3
cmp
retf
sub
outs
fimul
sbb
push
or
mov
(bad)
std
xor
inc
adc
ins
xchg
pop
mov
and
retf
mov
jb
mov
mov
or
inc
mul
sub
or
sub
call
cmp
mov
fild
mov
rcl
mov
pusha
mov
mov
cmp
pop
mov
repnz
or
and
fwait
adc
mov
ret
inc
in
ror
cmp
stc
dec
(bad)
repz
fimul
xlat
pop
adc
pop
add
mov
dec
ss
jne
sub
psrlw
movs
sbb
pushf
cld
lods
rcl
je
(bad)
movs
sub
pop
and
fcomp
movs
and
fdivrp
movs
aad
nop
jnp
mov
jno
pushf
in
test
idiv
out
mov
pop
pushf
mov
inc
pop
mov
or
lahf
sti
push
add
shr
fiadd
and
data16
popf
mov
inc
test
cs
js
mov
jle
mov
gs
xor
leave
xor
in
cmp
push
jb
pop
test
aam
fcomp
dec
sub
pop
push
cmp
retf
sub
(bad)
ss
fisubr
push
scas
mov
clc
jmp
(bad)
xchg
inc
ds
push
push
mov
push
lods
sbb
aad
mov
mov
xor
addr16
inc
gs
cmc
jns
pop
mov
iret
retf
sub
icebp
inc
inc
sbb
sbb
out
clc
xor
shrd
inc
push
inc
jmp
xor
stc
test
and
push
fnsave
mov
sub
dec
or
pop
cs
(bad)
mov
xchg
inc
adc
rol
and
movs
neg
ins
test
jle
data16
mov
inc
mov
mov
ins
xor
in
or
movs
xchg
call
and
push
mov
adc
stos
popa
add
pop
faddp
cmp
data16
push
fild
sub
das
mov
pop
into
mov
fimul
mov
retf
lahf
mov
xor
in
add
xchg
scas
pusha
add
pop
je
push
cmp
pop
or
xchg
dec
xchg
jno
outs
cs
pop
nop
(bad)
shl
adc
daa
and
imul
lds
dec
dec
jns
loope
xchg
push
xlat
test
adc
or
inc
pop
add
mov
mov
jg
sbb
(bad)
mov
sub
xchg
push
cmp
popa
sbb
inc
xchg
inc
(bad)
push
adc
sub
loop
fmul
loop
sar
cmps
ror
mov
xor
(bad)
jno
mov
and
inc
push
add
pusha
scas
sti
cli
fcom
scas
lods
inc
dec
fwait
das
imul
xor
mov
pop
pop
dec
mov
fld
or
out
stc
jecxz
in
stos
mov
add
ja
shr
sbb
mov
and
lods
(bad)
push
in
pop
jo
lods
mov
sbb
inc
mov
fld
mov
dec
pop
xor
fnstcw
cmps
das
jbe
fs
mov
call
push
push
out
xchg
cmps
aas
adc
xchg
arpl
std
ins
ds
mov
add
xchg
scas
or
(bad)
cmps
cli
fwait
sub
sbb
push
xchg
cmp
rcl
push
ja
int3
in
mov
lea
xchg
hlt
fs
mov
adc
repnz
pop
dec
movs
xor
jle
cmp
cmp
add
or
sbb
adc
call
ss
cld
mov
les
jnp
dec
stc
lahf
push
sbb
rcl
jo
dec
lock
fnsave
add
mov
and
jecxz
jg
adc
out
clc
xlat
xchg
mov
sub
sub
stos
test
xor
push
xlat
adc
cld
out
sbb
(bad)
lods
clc
push
pop
push
ins
fnstenv
fldcw
add
mov
push
lahf
mov
xor
sub
adc
hlt
inc
push
or
push
jl
ret
xchg
inc
or
push
sub
mov
gs
xchg
sub
pop
inc
mov
lahf
push
outs
fistp
cwde
test
and
das
dec
scas
ds
cmp
sbb
and
xchg
aas
aad
add
test
pop
jbe
sub
sti
stos
push
mov
nop
int
or
sbb
(bad)
shl
cmp
jmp
sar
lds
or
jb
xor
push
fcom
mov
mov
imul
lock
lea
(bad)
or
lahf
push
loop
call
mov
lods
sub
push
inc
xor
sar
jno
xchg
dec
sar
cmps
push
stos
les
mov
add
jmp
loopne
sub
lea
jo
clc
adc
loop
pop
pop
dec
jmp
scas
and
push
cwde
scas
ds
xor
iret
or
jmp
dec
rol
sub
enter
aam
xchg
sbb
shl
xor
or
scas
fst
or
fs
rol
mov
mov
xchg
shl
cmp
pop
loop
xchg
or
push
push
add
cmps
ret
rcl
(bad)
adc
mov
sub
ds
mov
into
loop
pop
xchg
cmp
lock
push
pop
in
mov
mov
mov
inc
mov
or
mov
dec
inc
xchg
lods
in
cli
scas
add
sub
rcl
xchg
addr16
gs
ret
cmp
adc
dec
mov
add
movaps
imul
add
pop
fwait
inc
or
arpl
inc
nop
mov
or
cmc
pop
fucom
bound
mov
scas
stos
and
hlt
into
leave
xor
test
and
cmps
test
ret
mov
cs
retf
out
inc
mov
jmp
jl
pusha
rcl
das
fldcw
xchg
mov
adc
mov
add
js
int3
xchg
add
and
jl
add
add
sub
in
dec
mov
out
(bad)
hlt
xlat
push
xchg
add
jle
iret
out
clc
ds
jmp
pop
mov
sub
enter
pop
jno
movs
mov
jp
inc
push
loop
xor
cs
push
pop
les
inc
dec
(bad)
push
xor
fwait
icebp
fsub
in
movs
jnp
xor
loopne
cwde
dec
push
xor
sbb
pop
sub
jge
or
je
aas
push
sbb
cmp
xchg
lods
shl
xchg
cvtps2pd
sub
xor
xchg
cmp
pop
push
and
fisub
sub
mov
xor
lahf
shl
jg
ss
mov
outs
cmps
in
dec
fisttp
(bad)
jge
(bad)
shl
jne
idiv
int3
or
inc
pop
shl
sbb
out
iret
dec
mov
iret
push
inc
pop
push
dec
dec
and
cs
in
adc
arpl
(bad)
in
jne
(bad)
mov
fnstsw
enter
loop
fisubr
jle
jl
clc
add
dec
sahf
push
fs
cmp
push
call
pop
and
push
mov
call
js
out
push
neg
test
push
mov
nop
mov
(bad)
out
pop
popf
std
add
stc
(bad)
stos
iret
stc
jnp
inc
or
hlt
dec
fs
shr
test
jle
call
jmp
push
push
xchg
add
mov
pop
fistp
fild
push
sbb
dec
adc
mov
add
mov
out
das
mov
imul
pop
mov
rcr
pop
inc
iret
aam
xor
cmc
jae
mul
sub
adc
stos
(bad)
ret
jmp
mov
pop
mov
mov
pop
frstor
xchg
ret
pop
pop
es
mov
mov
mov
jo
sbb
mov
sbb
push
nop
pop
adc
pushf
mov
xchg
mov
sti
es
movs
lahf
lahf
cmp
movs
out
test
popf
mov
sub
sub
or
or
retf
cmps
add
(bad)
iret
fist
cmc
test
pop
and
inc
or
sbb
mov
mov
std
data16
out
cmp
mov
inc
scas
mov
or
mov
ss
(bad)
shl
push
pop
push
(bad)
or
jg
dec
adc
rcl
cmps
repnz
adc
pushf
int
js
pop
dec
daa
aas
jnp
inc
iret
fbld
cmps
mov
mov
pop
adc
xor
(bad)
dec
fbld
pop
es
xor
mov
xchg
xor
test
das
into
cmps
imul
or
mov
adc
movs
loop
div
fcmovnb
pop
shr
jg
sub
out
dec
loop
cmp
xchg
pop
push
jnp
ds
xor
rcr
test
movs
mul
cmp
jmp
mov
stc
fisub
or
and
add
popa
call
sbb
call
xor
clc
dec
cmp
mov
inc
sub
repnz
movs
jo
inc
xchg
cmp
shl
div
xchg
inc
bound
out
push
cmp
add
xchg
xchg
ret
rcl
dec
jle
outs
bound
jo
das
sbb
adc
jno
xor
aad
push
out
inc
pop
retf
test
(bad)
fdivr
mov
or
or
dec
in
std
and
ficom
xbegin
fnsave
adc
mov
dec
mov
pop
jge
int
cs
(bad)
js
push
cld
cs
inc
mov
mov
mov
cmp
cli
or
int3
popa
jbe
popf
loop
call
test
or
ja
call
sub
ror
sbb
sti
or
cmp
fwait
mov
sub
out
aaa
sbb
dec
out
stos
xor
inc
mov
add
mov
loope
inc
imul
jns
push
xchg
xchg
imul
jmp
jno
xchg
and
fadd
fistp
and
stos
stos
icebp
cs
ins
daa
push
retf
test
sti
jecxz
clc
cmp
cli
or
(bad)
sti
fdiv
sbb
jge
dec
dec
sub
jne
frstor
pop
(bad)
and
add
sub
mov
cwde
in
pop
(bad)
and
mov
shr
pop
inc
xor
push
loop
mov
or
push
enter
ja
cli
lock
mov
das
out
adc
pop
push
pop
xlat
mov
pop
pop
out
cmp
lods
mov
fs
jmp
jp
mov
mov
or
push
add
rcl
sbb
and
imul
into
jns
(bad)
(bad)
(bad)
sub
sbb
pusha
mov
cwde
dec
es
(bad)
and
fidiv
dec
mov
mov
pop
clc
js
test
jmp
adc
dec
(bad)
cdq
sub
inc
in
add
mov
add
mov
dec
cli
add
call
xlat
add
enter
mov
pop
jno
sub
es
sub
pop
les
cli
daa
stos
mov
adc
sar
ins
sti
fild
or
sub
repz
push
frstor
loope
retf
inc
ss
cmc
ins
add
repz
mov
cmps
push
cld
loope
(bad)
mov
adc
neg
stos
inc
push
mov
cmp
in
and
icebp
pop
repz
add
imul
xlat
ficom
mov
xor
inc
add
cmps
bound
outs
sbb
jo
xchg
ja
adc
(bad)
fistp
or
imul
out
test
push
push
aad
test
loope
or
adc
xlat
jecxz
(bad)
adc
inc
add
mov
sub
dec
or
(bad)
pusha
loopne
lahf
mov
lock
movs
jmp
add
and
les
in
popf
fs
sub
adc
cwde
inc
cwde
pop
jge
mov
push
adc
aad
dec
ds
cmp
cmp
xor
or
or
stos
push
jae
and
lock
mov
(bad)
dec
pop
mov
lock
ret
jecxz
test
mov
adc
xchg
mov
jmp
outs
jbe
pop
or
call
fist
(bad)
out
mov
pusha
hlt
add
call
(bad)
cwde
outs
mov
push
jns
jno
and
jge
add
push
push
sar
sub
jno
push
jbe
mov
jo
adc
push
int
push
popa
dec
aam
xor
jecxz
adc
mov
or
icebp
jg
xor
xchg
shl
or
xlat
outs
jno
nop
rcl
cmp
pop
inc
adc
xchg
add
inc
shl
xchg
inc
cmps
push
int
lds
adc
mov
add
stos
jno
outs
mov
repnz
mov
daa
js
sbb
mov
scas
imul
xchg
inc
enter
ds
loopne
mov
xchg
pop
xchg
dec
and
xchg
jb
(bad)
nop
mov
adc
imul
add
sub
stos
pop
repz
mov
or
inc
(bad)
pop
mov
ins
ror
loop
xchg
retf
sub
in
ret
sbb
jae
pushf
cs
push
adc
pop
push
mov
les
test
xor
loopne
mov
cmp
repnz
retf
sbb
out
mov
jmp
push
jbe
cs
dec
das
push
push
stos
mov
xor
rol
mov
shl
iret
adc
cmp
mov
test
(bad)
mov
jmp
out
xchg
jle
mov
add
stc
aam
mov
add
mov
xchg
push
sbb
daa
xor
jne
cmc
daa
and
xor
and
outs
inc
and
test
push
jecxz
dec
neg
or
repnz
jge
sub
add
lea
pop
mov
mov
adc
xchg
mov
aas
mov
lock
lds
pop
ds
xor
add
aad
std
or
das
pop
ja
out
add
shr
sub
aad
mov
dec
les
shl
push
test
loopne
test
dec
add
lock
(bad)
outs
or
mov
je
ja
stos
or
ret
jge
shr
xor
jp
mov
inc
shl
cmp
daa
sub
les
int
xchg
push
mov
mov
pop
mov
push
xchg
xor
in
dec
icebp
psrlw
retf
inc
mov
sbb
repz
xchg
pop
mov
xlat
clc
cmps
sbb
test
adc
cdq
mov
sub
mov
bound
outs
out
movs
dec
adc
push
mov
or
jbe
fwait
pusha
jmp
arpl
jle
enter
aad
sub
push
addr16
push
mov
xor
retf
popa
repz
jmp
jmp
adc
ins
pushf
jnp
pop
(bad)
and
je
mov
mov
test
gs
pop
or
cmp
push
(bad)
in
push
div
push
clc
cmc
pusha
vunpcklps
inc
xchg
mov
or
cli
dec
hlt
pop
sub
xchg
mov
call
dec
jns
mov
out
out
xchg
adc
adc
enter
leave
jle
xchg
rcr
mov
push
imul
int
retf
cmp
ret
scas
jbe
(bad)
sbb
(bad)
xor
jno
jno
and
sahf
outs
jmp
retf
sbb
sub
cli
rcl
ficom
pushf
jp
fwait
loop
addr16
cli
imul
sbb
ror
mov
push
lea
and
mov
add
inc
xlat
retf
xchg
in
stc
clc
ss
cmp
add
inc
add
mov
(bad)
movs
pop
call
mov
jne
add
fdivp
fcomp
and
or
test
xchg
test
popa
cwde
xor
mov
push
int
test
inc
shl
fmul
add
push
push
add
cmp
jnp
mov
sbb
sbb
mov
xchg
dec
jle
and
jae
les
ins
bound
or
ret
es
pop
sbb
je
fldenv
add
adc
xchg
jmp
or
adc
ss
mov
fistp
je
into
push
mov
pop
sbb
jge
inc
stc
add
mov
out
mov
mov
xor
mov
ds
mov
cmp
outs
or
inc
sub
and
cmp
(bad)
cli
enter
rcl
adc
hlt
call
in
js
scas
add
jno
sti
add
sub
sar
adc
mov
add
mov
call
lds
cmp
jl
dec
jge
leave
inc
fwait
jge
or
xor
adc
xlat
sub
xchg
scas
xchg
mov
js
int3
xchg
div
or
jno
in
pop
in
dec
xchg
retf
movs
stc
stos
mov
outs
fistp
inc
inc
retf
in
xor
outs
mov
sbb
(bad)
repz
aam
shr
loope
imul
lea
cwde
xchg
arpl
mov
ficom
ret
les
xor
xchg
retf
lods
sbb
mov
xor
jmp
pop
ins
dec
test
lods
aad
loope
leave
loop
ins
push
in
(bad)
push
inc
or
mov
fiadd
mov
jae
clc
jno
adc
(bad)
mov
ins
(bad)
(bad)
jle
add
aad
dec
rol
jmp
rcl
or
mov
mov
add
hlt
jbe
jl
xchg
jnp
arpl
out
mov
jns
and
in
dec
iret
dec
inc
sub
shl
int3
cld
leave
inc
test
sub
xchg
bound
repz
retf
mov
jne
out
sar
stos
mov
add
pop
fwait
push
mov
inc
mov
cmps
or
out
jmp
in
js
sti
push
push
push
cmp
jg
fwait
xchg
and
push
sbb
sub
pinsrw
mov
push
or
sbb
jne
mov
cmps
sub
mov
cmp
stc
ins
rcr
dec
retf
jo
movs
pop
cmp
femms
mov
jp
push
mov
jnp
stos
sub
std
jge
adc
les
dec
jae
movq
(bad)
call
daa
mov
pop
push
adc
popf
sbb
xchg
and
inc
call
inc
push
movs
mov
inc
into
or
punpcklwd
nop
jp
test
mov
js
pop
sti
je
fiadd
push
mov
jbe
fdiv
in
and
mov
inc
and
jbe
(bad)
adc
fwait
(bad)
in
lods
sub
dec
bnd
push
inc
retf
or
adc
sub
bnd
cmps
inc
fcmovnbe
push
movs
nop
jp
mov
leave
jno
add
pop
ja
movs
hlt
mov
cmp
jecxz
adc
rol
je
push
shl
add
or
mov
lods
inc
fstp
jecxz
fld
pop
xor
sub
push
xchg
mul
inc
xchg
adc
sub
xchg
int
es
adc
cmps
sub
std
or
push
push
arpl
dec
es
pop
adc
inc
inc
movs
or
outs
out
push
mov
pop
call
dec
sbb
cmp
sar
(bad)
sbb
or
xor
add
cld
stos
mov
adc
push
mov
aaa
repnz
ret
loop
pop
daa
sahf
jns
and
mov
ja
and
cmp
and
mov
enter
je
or
and
sbb
fdivr
fidiv
sti
imul
mov
inc
scas
adc
pop
jo
ret
out
test
movs
sbb
imul
pop
rcl
pop
mov
dec
cmp
dec
jns
sar
adc
mov
fadd
dec
xor
push
xchg
in
(bad)
mov
addr16
cmp
sti
mov
add
and
push
fiadd
cmc
xchg
mov
push
push
cmp
add
in
inc
mov
fs
(bad)
dec
pop
sti
jmp
out
push
movs
ins
mov
out
sbb
mov
lods
addr16
aaa
sbb
adc
xor
sti
push
inc
mov
jnp
sar
jne
jmp
rcl
icebp
dec
or
outs
cmp
data16
stos
dec
pop
mov
loop
xor
icebp
xor
lods
mov
in
sub
pop
xor
aad
pop
or
sub
mov
jp
cmp
pop
jns
loopne
fcomi
inc
dec
mov
(bad)
xor
sahf
xchg
push
shr
sbb
inc
push
or
sub
int
xchg
xchg
mov
mov
(bad)
mov
cmp
adc
and
(bad)
cmps
outs
fisttp
(bad)
in
imul
daa
inc
jnp
lahf
arpl
repz
sbb
xor
inc
sbb
(bad)
jle
or
repz
iret
pop
call
stc
repnz
xor
lods
outs
mov
cmp
push
out
cdq
add
fidivr
fwait
js
pop
sahf
data16
movs
in
or
jae
mov
ja
sbb
aaa
arpl
fsub
retf
xor
sbb
pop
push
lock
xor
jle
jae
xor
(bad)
in
movs
xchg
or
push
lods
cmps
fld
sbb
dec
inc
jl
sub
adc
pop
out
adc
test
push
out
or
ja
cmc
mov
dec
jecxz
lahf
not
inc
adc
pop
pop
ins
dec
or
mov
adc
aas
(bad)
scas
call
stc
push
test
in
test
sbb
fbstp
cmps
scas
pop
mov
cmp
ficomp
or
xlat
xor
dec
cs
push
sbb
data16
aad
adc
mov
lods
lahf
addr16
shl
fimul
gs
pop
dec
push
cmc
mov
pop
sbb
mov
add
scas
arpl
iret
mov
ret
es
jp
pushf
mov
or
mov
inc
or
hlt
mov
jmp
mov
loopne
lea
fsub
cwde
cld
add
push
sub
xor
ret
sbb
cmp
mov
adc
cli
jns
ds
pop
test
pop
loopne
push
fs
mov
inc
pop
sub
mov
ror
mov
jno
out
cmc
jge
and
aam
cli
aas
sti
cld
gs
mov
jnp
stos
mov
jns
shr
popa
movs
call
add
cmps
sub
push
mov
adc
or
or
pop
ins
fs
sub
fisttp
mov
adc
out
or
dec
jo
fidivr
addr16
and
push
sub
xor
add
adc
and
cmc
xchg
jmp
pushf
cld
enter
pop
stc
mov
ins
test
ret
popa
add
mov
inc
loope
cmps
out
dec
loope
loope
push
mov
jb
fs
scas
or
clc
jne
pop
js
dec
or
sbb
dec
adc
fs
dec
scas
mov
mov
(bad)
jge
shl
lods
dec
out
cld
outs
adc
repz
ins
inc
mov
pop
xchg
pop
push
out
xor
scas
jne
sub
cmp
mov
jne
cli
adc
lock
dec
or
jle
aam
jp
sbb
lds
ds
les
fs
xor
mov
out
stos
and
jno
xchg
fiadd
(bad)
cmp
jp
add
cs
sub
inc
push
and
adc
mov
in
xchg
lods
inc
and
inc
sub
dec
inc
dec
inc
push
sub
scas
xor
int3
mov
(bad)
or
cmps
mov
pop
nop
jp
pop
sub
sub
mov
outs
sub
mov
lods
inc
xor
or
mov
pop
int3
dec
pop
xchg
add
jnp
dec
pop
cli
xor
(bad)
fild
rol
ror
call
out
inc
xchg
jge
xlat
in
stos
aad
xchg
dec
out
xchg
imul
jbe
xchg
clc
or
xchg
mov
ror
(bad)
jp
mov
add
rol
adc
add
test
mov
repnz
(bad)
xlat
call
dec
or
ss
push
std
out
(bad)
mov
scas
das
and
cmp
stos
aam
fwait
ins
div
stc
jmp
aad
push
sbb
out
dec
(bad)
inc
add
pushf
cmps
je
rol
mov
mov
cmps
fnstenv
mov
mov
adc
jb
cmp
jmp
cmp
dec
sub
sub
call
adc
push
aas
adc
jnp
repz
imul
sti
ret
xlat
aam
jl
pop
dec
pop
xor
jae
and
jge
pop
test
push
shl
push
mov
in
(bad)
in
clc
adc
test
in
(bad)
push
jle
outs
xor
mov
icebp
mov
pop
addr16
dec
fidivr
fadd
mov
lock
dec
push
cmps
mov
sbb
(bad)
mov
dec
push
clc
cld
or
aas
mov
sbb
dec
retf
or
sbb
lods
push
cmp
movs
outs
pop
div
inc
xor
clc
cmp
stos
mov
jnp
gs
jmp
je
add
sbb
xor
ja
rcr
out
(bad)
out
xor
add
out
adc
pop
dec
push
xor
pop
addr16
and
xchg
nop
cmc
(bad)
fwait
and
arpl
mov
cwde
mov
jmp
sbb
shr
mov
xor
push
mov
sbb
xchg
shl
push
xor
xchg
movs
mov
xchg
rol
dec
fwait
aam
push
int
movs
dec
dec
imul
scas
ja
call
(bad)
outs
or
out
or
(bad)
arpl
cli
xchg
pop
inc
popa
pusha
xchg
ds
jo
(bad)
push
(bad)
lods
mov
fs
rol
call
sbb
push
cwde
popf
in
mov
aaa
test
adc
cmp
adc
lods
into
pusha
gs
mov
pushf
lods
dec
ror
sti
ror
icebp
in
adc
call
inc
push
jp
lock
sub
cld
fsub
or
mov
addr16
fs
xchg
imul
xor
fwait
dec
xor
mov
out
xchg
pop
out
dec
xor
sub
cmp
sahf
aam
cmp
mov
aaa
test
xor
sahf
jo
xchg
push
mov
in
xor
add
mov
sbb
test
call
fld
xor
or
sbb
mov
outs
jle
lods
inc
(bad)
out
in
cmp
(bad)
mov
xchg
and
inc
xor
outs
mov
div
or
inc
push
push
fistp
mov
and
div
xchg
mov
stos
mov
fmul
daa
xchg
cdq
loop
push
push
mov
rcl
movs
mov
xchg
jo
jno
cmps
sbb
(bad)
loop
pop
cmp
xor
mov
push
in
stos
call
sub
pop
arpl
xor
adc
ins
push
fs
fiadd
sub
jecxz
call
out
xchg
cmc
movs
retf
aas
mov
xchg
cmp
out
in
jmp
sub
adc
out
add
mov
adc
fcmovbe
in
lahf
(bad)
stc
push
out
into
sbb
scas
imul
mov
ins
inc
sbb
imul
dec
rcr
jmp
add
mov
sub
xchg
inc
stc
mov
add
loope
cwde
imul
mov
cmp
sbb
mov
cmp
(bad)
push
xor
pop
mov
mov
aas
xor
xchg
fst
es
retf
cmp
imul
call
sbb
jmp
test
test
fdivr
cli
imul
loope
fwait
inc
mov
pushf
dec
into
loop
mov
pop
cmp
enter
push
push
mov
xchg
rcr
sar
aad
lods
dec
ret
icebp
imul
fwait
icebp
jecxz
cdq
ror
push
cwde
fnstsw
retf
repnz
jno
sbb
int3
mov
call
inc
mov
daa
sti
sahf
mov
cmps
int
dec
xor
and
fistp
pop
dec
add
push
lods
xchg
mov
add
xor
popa
ror
dec
ss
xor
sub
pushf
fidivr
sar
movs
(bad)
and
ins
and
mov
cmc
or
fdivr
sub
or
out
fmul
mul
push
mov
cmp
test
mov
mov
scas
stos
in
arpl
test
stc
fimul
inc
and
push
jno
cdq
imul
pop
repnz
mov
and
in
loop
pushf
pop
xchg
xor
into
sbb
fdivr
jecxz
pop
xchg
ss
ror
arpl
push
inc
jmp
inc
jae
jg
adc
leave
push
mov
das
push
cdq
jo
cmp
pushf
retf
mov
aam
pushf
repnz
cmps
pop
popa
sub
sub
lods
xchg
call
xchg
test
imul
inc
pop
dec
or
jle
and
mov
hlt
mov
adc
jle
inc
mov
cmp
mov
jle
and
jns
gs
cmp
sbb
loope
in
add
es
inc
loopne
xchg
out
inc
pop
pop
movs
push
and
aas
pop
mov
jmp
movs
data16
or
inc
jp
mov
push
adc
inc
loop
lahf
xchg
xor
pop
hlt
add
adc
pushf
cmps
mov
sbb
je
push
cdq
in
je
push
inc
xchg
mov
aam
push
push
xchg
push
mov
adc
gs
fst
sbb
ret
in
test
adc
rcr
inc
pop
aaa
inc
int3
retf
gs
pushf
sbb
jp
call
nop
and
outs
push
mov
sbb
jecxz
pop
lahf
add
push
bound
mov
xchg
add
inc
aaa
sub
addr16
sub
dec
dec
mov
scas
jg
push
daa
sbb
stos
dec
sub
cmp
rcl
push
mov
xchg
jl
fisub
pop
inc
mov
jmp
jge
xchg
scas
cdq
cs
aam
jl
fs
pop
cmps
out
xlat
and
push
ror
mov
cmp
adc
jne
xor
retf
aam
pusha
cmp
aam
test
or
push
test
and
retf
push
and
loopne
call
(bad)
adc
loopne
adc
loopne
ins
push
or
mov
mov
(bad)
push
cwde
mov
sbb
hlt
sub
jbe
cmps
mov
cwde
bound
pop
aas
into
(bad)
in
popf
xor
sahf
push
jnp
pop
lahf
xchg
sbb
in
push
and
mov
adc
mov
mov
mov
call
push
xchg
or
and
pop
les
mov
sbb
add
mov
sub
and
test
(bad)
jnp
ins
mov
icebp
push
cli
push
mov
pop
dec
jbe
aam
fs
rol
sti
jl
inc
addr16
sub
cmp
fst
sub
cld
imul
mov
xchg
sbb
cmc
imul
call
mov
cmps
inc
sub
leave
stc
shl
adc
gs
pop
(bad)
leave
hlt
sahf
xlat
sbb
dec
and
mov
and
jge
cmps
and
outs
out
cmps
test
je
xchg
jp
int3
(bad)
into
rcl
adc
or
xchg
sbb
add
adc
sub
sub
inc
push
(bad)
shr
das
stos
adc
mov
nop
jmp
into
retf
ret
fidivr
pop
shl
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
adc
add
push
add
add
inc
in
lods
in
xchg
in
lods
in
mov
mov
in
and
mov
mov
in
(bad)
in
popf
in
movs
in
mov
mov
in
stos
in
mov
mov
in
mov
add
add
outs
in
and
call
in
mov
mov
in
mov
mov
in
fwait
in
mov
mov
in
test
mov
in
lahf
in
sahf
in
mov
mov
in
lods
in
mov
mov
in
mov
mov
in
mov
mov
push
add
add
dec
in
mov
mov
in
popf
in
fwait
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
xchg
mov
in
cmps
in
mov
mov
in
mov
add
in
popf
in
mov
mov
in
(bad)
in
mov
mov
in
(bad)
in
cdq
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
in
lahf
in
test
mov
in
mov
mov
in
mov
mov
in
xchg
in
xchg
in
mov
push
add
add
mov
in
and
cdq
in
lahf
in
mov
mov
in
mov
mov
in
mov
mov
in
cdq
in
mov
mov
in
pushf
in
mov
mov
in
mov
mov
in
mov
mov
in
pushf
in
mov
pop
add
add
mov
in
cmps
in
and
xchg
mov
in
mov
mov
in
movs
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
lods
in
pushf
in
mov
mov
in
xchg
in
mov
mov
in
xchg
in
mov
or
add
push
in
xchg
in
mov
mov
in
(bad)
in
mov
mov
in
stos
in
cwde
in
cdq
in
mov
mov
in
mov
mov
in
fwait
in
mov
mov
in
mov
mov
add
inc
in
mov
mov
in
stos
in
(bad)
in
xchg
in
movs
in
mov
mov
in
and
mov
mov
in
mov
mov
in
test
mov
in
cwde
push
or
add
jb
mov
in
xchg
in
mov
mov
in
mov
mov
in
(bad)
in
test
mov
in
mov
mov
in
xchg
mov
in
xchg
in
xchg
in
mov
mov
in
xchg
in
fwait
in
(bad)
in
mov
mov
in
mov
mov
in
stos
in
and
lods
push
or
add
inc
in
mov
mov
in
test
mov
in
xchg
in
mov
mov
in
mov
mov
in
lahf
in
mov
mov
in
mov
mov
add
push
in
stos
in
cwde
in
xchg
in
mov
mov
in
lahf
in
lahf
in
and
stos
in
mov
mov
in
mov
mov
in
and
mov
mov
in
(bad)
in
mov
mov
in
mov
or
in
mov
mov
in
mov
mov
in
xchg
in
and
mov
mov
in
mov
mov
in
test
mov
in
mov
mov
in
xchg
mov
in
mov
mov
in
lods
in
mov
mov
in
cmps
in
pushf
in
sahf
push
push
add
add
mov
in
mov
mov
in
xchg
in
mov
mov
in
cdq
in
mov
mov
in
stos
in
mov
mov
in
test
mov
in
cdq
in
test
mov
in
mov
mov
in
mov
add
mov
in
test
mov
in
mov
mov
in
mov
mov
in
cmps
in
mov
mov
in
mov
mov
in
movs
in
mov
mov
push
adc
add
imul
popf
in
xchg
in
test
mov
in
test
mov
in
sahf
in
xchg
in
and
mov
mov
in
mov
mov
in
mov
mov
in
movs
in
mov
mov
in
mov
mov
in
lahf
in
xchg
adc
add
imul
mov
mov
in
lods
in
stos
in
and
stos
in
mov
mov
in
xchg
in
test
mov
in
pushf
in
test
mov
in
mov
mov
in
mov
mov
in
sahf
in
cmps
in
sahf
in
mov
mov
in
mov
mov
add
aas
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
xchg
in
and
mov
mov
in
mov
mov
in
xchg
push
adc
add
pop
in
(bad)
in
xchg
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
xchg
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
cwde
in
mov
mov
in
cdq
push
adc
add
jne
mov
in
test
mov
in
xchg
in
fwait
in
popf
in
scas
in
and
mov
mov
in
mov
mov
in
mov
mov
in
xchg
mov
in
cdq
in
and
mov
mov
in
cdq
in
mov
mov
in
pushf
in
mov
mov
in
mov
and
sub
test
ficom
call
(bad)
fsubr
push
push
aas
push
sub
xchg
fidivr
xchg
push
in
jp
lods
int
movs
daa
inc
xchg
aas
stos
cmc
xlat
sub
mov
fidivr
adc
ds
je
cmp
fcomi
enter
push
dec
inc
jmp
xor
adc
imul
movs
and
cli
lahf
add
cmps
xchg
shl
lahf
pop
sub
pop
mov
pop
fwait
hlt
and
or
movs
sub
adc
xchg
in
push
jecxz
mov
test
xchg
pop
push
aam
push
adc
lahf
ficom
dec
cmp
daa
loope
pop
and
in
pop
sub
rcl
sub
div
adc
shl
and
aam
cmp
inc
lea
shr
test
sti
ret
xchg
cmc
jle
arpl
mov
push
in
cmp
and
cmps
push
test
lahf
xchg
out
retf
call
mov
lods
arpl
das
or
aaa
loopne
jne
hlt
push
mov
xchg
popa
ficomp
dec
rol
sbb
jbe
imul
mov
dec
es
pushf
and
es
fsubr
scas
sbb
repz
mov
add
xchg
jns
mov
sbb
iret
push
jns
jne
pop
out
mov
cmp
call
push
stos
popa
xchg
add
outs
mov
(bad)
ins
pop
fcmovu
xor
push
sti
std
and
push
jae
or
dec
addr16
jg
adc
mov
jno
mov
fbld
dec
inc
lahf
rol
push
mov
icebp
lods
cmp
les
cmp
arpl
lods
rep
mov
mov
arpl
mov
mov
and
bndldx
sub
adc
jp
es
cmp
test
mov
push
popf
test
xor
pop
loopne
aas
ja
lahf
int
ror
div
dec
mov
dec
sbb
xchg
xchg
pop
mov
mov
cs
inc
std
sbb
lods
mov
jmp
jl
or
sbb
push
fldenv
sahf
stos
cdq
icebp
fnstenv
push
xor
shl
pop
test
in
dec
ds
jnp
mov
sub
fwait
mov
fisubr
push
jmp
fucomip
fs
xor
mov
push
sbb
xchg
leave
xor
popf
call
in
adc
cmps
adc
and
xchg
mov
xor
rcl
sahf
add
xchg
dec
mov
inc
movs
and
mov
cld
test
mov
test
in
movs
pop
adc
ins
dec
push
rcl
adc
out
dec
inc
inc
fwait
mov
jg
mov
cmp
mov
sbb
jbe
or
aad
xor
scas
xchg
pop
push
fmulp
(bad)
sub
aaa
jnp
ja
mov
pop
sbb
xchg
std
push
push
adc
xchg
adc
subps
adc
cmp
aam
xchg
aad
je
fwait
jecxz
pop
xchg
or
cwde
(bad)
xchg
fldln2
fstp
imul
cs
jmp
scas
push
adc
push
andnps
jnp
sbb
sahf
xchg
mov
sbb
mov
nop
mov
push
into
jbe
fsub
or
imul
cli
je
ja
xor
pop
sub
sub
jno
inc
pop
mov
daa
sub
jb
out
jmp
imul
mov
ds
sub
push
jp
std
mov
xor
fwait
cli
arpl
and
das
sbb
push
xor
mov
jbe
mov
mov
cdq
push
aas
jp
pop
fs
stc
xor
pop
lods
push
dec
push
jne
arpl
popa
cmp
retf
movs
mov
cmp
ret
arpl
mov
and
sbb
mov
ficom
pop
mov
xor
xor
xlat
rol
mov
inc
mov
mov
and
mov
xchg
push
xchg
jne
or
cmp
adc
cmp
repnz
repnz
shl
test
pop
lahf
xchg
mov
add
(bad)
adc
inc
lds
int
lea
arpl
rcr
rdtsc
ss
pop
inc
lahf
fwait
jns
mov
inc
cli
in
aaa
jnp
pop
lahf
lods
xchg
adc
cld
fild
lods
int
mov
cs
jg
jno
stos
mov
jge
pop
lods
(bad)
bound
fiadd
pop
sbb
pop
push
pop
mov
movs
add
movs
cmp
rcl
add
or
and
nop
adc
fcmovu
imul
xchg
dec
cmp
push
jge
fsub
ror
sbb
ret
clflush
into
mov
loopne
nop
push
sub
add
and
test
sbb
sbb
stos
and
xchg
mov
mov
jmp
frstor
js
sub
fsubr
repz
sbb
sbb
leave
rcr
adc
sub
and
jns
xor
out
fistp
push
bswap
clc
sub
inc
scas
xchg
lahf
add
in
dec
clc
mul
bound
mov
jb
clc
add
push
pop
out
mov
int
mov
add
(bad)
dec
pop
push
dec
mov
jl
inc
das
fdivr
jmp
pushf
mov
jnp
pop
mov
push
in
sbb
lock
push
dec
in
cwde
sub
jecxz
push
mov
pop
adc
loopne
adc
sub
inc
sbb
adc
mov
jo
sub
jp
xchg
std
adc
jae
xor
pop
sub
or
push
mov
or
inc
dec
dec
xor
inc
shl
movs
jmp
sar
ss
xor
(bad)
and
sti
jo
push
(bad)
movs
mov
in
xchg
and
adc
pop
cmp
(bad)
xlat
mov
adc
or
cmp
sar
cmp
sti
call
stc
mov
push
call
jb
lds
out
int3
lahf
or
pop
mov
xchg
xor
sar
xor
jecxz
sub
loop
lock
push
sbb
stc
fdivr
xchg
fdiv
fidiv
ret
ss
xor
data16
cmp
sub
mov
jecxz
test
push
add
jg
jmp
je
(bad)
push
xlat
adc
cs
pop
int
cmp
mov
mov
jmp
in
(bad)
sub
adc
jae
nop
mov
push
xchg
xor
mov
pop
test
or
xor
cmp
pop
xchg
fwait
jae
push
pop
mov
fistp
cmp
and
retf
mov
push
sub
dec
add
sbb
push
inc
in
pop
ja
mov
push
sbb
pop
(bad)
in
pushf
outs
push
inc
jp
aam
mov
test
or
mul
in
retf
sub
aas
mov
repz
adc
bnd
data16
sbb
les
fdivr
cmc
add
xor
jle
xor
mov
sub
adc
xchg
cmp
add
mov
lods
in
mov
push
xlat
mov
push
mov
nop
dec
mov
lods
js
pop
dec
loop
sub
cwde
popf
pop
js
xor
push
add
or
retf
mov
ret
or
pop
mov
jg
pushf
cmps
xor
and
vcvtss2si
cld
mov
add
jge
pop
cs
into
gs
push
cmp
fcomp
xchg
sti
aam
fisttp
jb
sbb
cmc
push
and
fdiv
imul
loope
fcomp
ret
sub
jge
jo
jp
mov
test
aas
cdq
out
ror
xchg
pushf
dec
js
int3
outs
mov
popf
adc
out
scas
into
lds
adc
sub
jle
mov
jo
mov
sbb
mov
pop
neg
jno
mov
ret
js
mov
mov
cs
outs
adc
lods
add
sub
(bad)
mov
jecxz
and
lea
(bad)
adc
xchg
call
mov
inc
pop
adc
outs
aam
scas
ja
or
cmc
mov
xor
(bad)
jge
pop
jbe
sub
cs
lea
mov
(bad)
mov
jno
xchg
neg
out
jne
int
out
mov
loopne
inc
dec
das
shl
scas
dec
dec
mov
and
add
cmp
dec
movs
or
fs
add
dec
out
jmp
xchg
in
clc
push
inc
xor
ret
loope
mov
push
js
cdq
dec
push
mov
xchg
push
sub
jae
inc
sub
clc
xchg
mov
fnsave
(bad)
(bad)
rol
inc
ins
fmul
in
xlat
es
in
sbb
call
push
out
aas
mov
adc
push
sbb
push
aad
lods
inc
idiv
retf
iret
or
popf
out
pop
(bad)
cmp
jnp
fild
inc
sbb
loopne
les
scas
cmps
fist
push
dec
fldenv
and
lds
jecxz
rcl
mov
adc
stos
mov
mov
ficomp
loopne
push
xor
fisttp
sbb
push
mov
imul
out
icebp
movs
fcom
pushf
in
cmp
popf
xor
hlt
stc
cmp
jae
movups
enter
inc
add
ret
es
cmp
inc
fnstsw
pop
dec
xchg
sbb
addr16
enter
push
and
add
loope
and
xchg
dec
cmps
data16
retf
inc
mov
mov
cmp
xchg
icebp
sub
inc
cld
jecxz
xchg
mov
in
push
jno
in
cmc
shr
mov
aam
and
sub
(bad)
in
mov
aam
pop
scas
fisttp
dec
pushf
jno
aaa
sub
jl
leave
or
and
push
xor
or
and
and
cmc
int3
mov
popf
xchg
shl
jmp
dec
mov
fst
sbb
das
inc
sub
fadd
dec
mov
jge
add
dec
dec
dec
push
test
mov
in
sbb
lods
mov
pop
pop
rcl
std
nop
sbb
fwait
mov
scas
pusha
and
dec
sub
mov
cwde
jle
sti
inc
or
repnz
jle
loopne
xchg
jp
outs
call
sub
jecxz
xchg
sub
pop
inc
fwait
mov
jecxz
xchg
fldcw
add
mov
aas
popf
jle
jns
stos
xchg
add
add
push
aaa
or
(bad)
and
inc
addr16
and
pop
cmp
call
inc
mov
retf
xchg
rcr
bswap
and
jae
jb
mov
ror
mov
sbb
lds
fist
push
fnstenv
mov
push
add
push
push
inc
xor
int
push
rol
in
push
mov
jnp
push
mov
dec
xchg
test
jp
inc
xchg
icebp
cwde
jo
std
push
test
fdiv
out
cmp
and
fst
inc
jge
aaa
sub
mov
xor
add
sub
shr
and
jae
(bad)
jg
xor
and
loopne
test
int3
mov
cmp
adc
pop
add
xchg
cdq
mov
cmc
push
xor
push
mov
out
icebp
scas
sub
shr
or
ret
(bad)
clc
pop
sbb
data16
stos
aam
jg
fild
sbb
ja
leave
dec
xor
lods
in
dec
ins
mov
dec
adc
mov
cmps
call
cmpps
clc
push
mov
fild
loopne
cmc
or
xchg
into
(bad)
shr
cmps
sbb
xlat
push
and
out
push
xor
dec
xchg
pop
out
mov
or
rcl
inc
addr16
(bad)
repz
inc
popf
jl
pop
sub
and
repnz
xchg
add
push
sbb
icebp
sub
ror
arpl
lea
mov
sub
push
ins
stos
(bad)
xor
shl
cmp
fidivr
xor
xchg
shl
pop
cdq
out
inc
jno
repnz
(bad)
shr
jmp
push
cdq
dec
cmp
enter
add
aas
out
or
adc
add
pop
test
sbb
shl
(bad)
loop
inc
mov
jg
shl
retf
(bad)
ins
push
adc
cmp
mov
(bad)
mov
and
icebp
jnp
(bad)
mov
inc
aad
fs
xchg
cmps
xchg
in
xlat
and
pop
add
mov
je
push
mov
daa
add
imul
ins
mov
and
ret
xchg
push
mov
and
or
mov
loope
aas
or
mov
pop
int
je
leave
into
jl
mov
(bad)
adc
pusha
scas
in
xchg
stos
jecxz
jmp
jns
out
jecxz
sbb
sti
jp
and
fcom
add
sub
and
push
cmp
mov
add
jmp
loop
mov
push
shl
scas
sbb
stos
inc
fdiv
cmp
or
ret
mov
mov
jmp
js
cmp
rcr
shl
fldenv
(bad)
xor
jnp
movs
scas
push
xor
das
jmp
mov
xchg
stc
adc
xlat
fwait
leave
mov
fmulp
mov
fdivp
mov
xlat
pop
(bad)
hlt
into
popf
cmp
sub
cmc
jge
or
call
adc
mov
outs
adc
out
loopne
or
pop
dec
in
outs
lods
dec
adc
test
xchg
and
ret
imul
xor
outs
or
js
push
cmp
sar
mul
pushf
mov
mov
mov
pop
aad
popf
nop
sub
and
cmp
inc
inc
cmps
and
stc
jecxz
mov
test
inc
pusha
fdivr
mov
jnp
xlat
cmps
or
jbe
sbb
mov
push
adc
pushf
and
pop
fild
sbb
clc
sbb
add
aam
and
fisubr
or
fcomp
mov
in
cmp
mov
dec
push
xor
push
sbb
jbe
push
lds
(bad)
pop
inc
arpl
retf
std
fimul
(bad)
push
inc
inc
add
push
pushf
mov
popa
inc
xor
ret
sysret
mov
arpl
pushf
sub
aam
push
mov
ins
out
mov
jne
scas
(bad)
cli
push
arpl
arpl
and
int3
jbe
push
cmps
gs
cmps
mov
xor
pusha
sub
(bad)
in
mov
add
sub
inc
pop
add
sbb
out
mov
xor
dec
rcr
icebp
or
repnz
jnp
push
ds
daa
fcmovnu
into
aas
cmp
jno
addr16
push
popa
cmp
lods
test
out
cmp
cwde
movs
repz
xchg
mov
cmp
adc
adc
fstp
aaa
xchg
jns
adc
push
sub
ret
and
and
aad
std
sbb
scas
lahf
bound
retf
test
iret
div
enter
xor
lods
pop
int
movs
mov
xor
pusha
ss
ss
add
push
xchg
sar
call
or
addr16
imul
cwde
enter
jl
and
rcr
dec
jle
jg
inc
jmp
rol
cmp
pop
adc
movs
push
out
and
mov
push
pop
lds
fcomp
lahf
jecxz
into
sar
les
movs
jmp
cmp
adc
in
mov
pop
push
cdq
add
cmp
inc
bound
lea
aam
dec
jne
jmp
cmp
push
stos
sbb
xor
add
inc
mov
inc
cmp
sbb
xchg
(bad)
in
cmp
xchg
dec
adc
das
xor
in
retf
enter
jp
(bad)
and
or
lods
push
movs
lahf
xchg
js
cmp
das
push
outs
xchg
pop
sbb
mov
stos
push
pop
in
add
cmp
sub
jge
xchg
cmps
les
mov
mov
data16
or
cmps
or
(bad)
in
mov
jmp
sti
xchg
push
inc
mov
and
push
and
das
adc
fld
push
cmps
push
jmp
not
stos
(bad)
loopne
mov
ss
xlat
pop
mov
xchg
mov
jne
and
retf
adc
push
lea
sahf
pop
es
outs
pop
pop
daa
fild
pop
das
mov
push
pop
test
mov
sbb
pop
aam
jb
fwait
pop
fwait
and
push
daa
scas
imul
add
pop
mov
jp
(bad)
inc
pop
mov
(bad)
fild
xor
sbb
sbb
xor
daa
movs
push
repz
adc
out
fldcw
adc
mov
into
mov
or
inc
lods
dec
out
loope
jnp
js
xchg
cld
sub
sbb
leave
add
dec
jge
or
and
dec
sbb
adc
inc
retf
mov
dec
out
popa
je
dec
gs
mov
xor
jle
and
retf
pushf
xor
stc
jno
cmc
jns
cmp
xchg
outs
xor
(bad)
and
and
lock
xchg
fisub
mov
mov
retf
xchg
in
ja
pushf
daa
lods
ins
(bad)
pop
or
jns
xchg
and
push
call
aas
rcl
dec
(bad)
mov
fnstenv
rcl
cs
sub
mov
adc
mov
mov
icebp
aam
pushf
push
jmp
std
or
cmps
jno
mov
fisttp
add
jno
(bad)
clc
dec
ror
and
mov
dec
aas
stos
outs
cmps
or
and
out
cdq
ins
pop
sbb
aad
cmps
ins
jmp
loop
pop
push
int3
int3
xor
pop
mov
test
(bad)
mov
ins
retf
push
in
xchg
ds
cmp
mov
aas
xor
in
aad
rcl
lea
mov
xchg
xchg
jp
or
add
or
and
test
cmc
int
sbb
adc
out
mov
ins
les
pop
push
push
sar
pop
ins
adc
fisub
cmp
fmul
pusha
dec
mov
or
retf
retf
mov
(bad)
cmp
repnz
sub
mov
and
fwait
pop
jns
stos
inc
cmc
and
aaa
stc
pop
cdq
outs
lahf
xchg
fsub
call
add
sbb
xchg
jle
mov
sbb
mov
push
rcr
mov
xchg
inc
mov
ror
movs
adc
mov
out
adc
repnz
shr
int3
sub
(bad)
and
mov
mov
mov
cmp
stos
lahf
cmp
aaa
fnsave
dec
xchg
mov
cmp
xor
cs
in
lds
jp
nop
dec
jno
mov
inc
jg
ror
inc
repz
xchg
jns
xchg
cmp
mov
repnz
add
mov
xor
ds
stos
bound
fwait
sar
lahf
adc
out
fstp
dec
test
cs
mov
in
sub
mov
out
mov
dec
ror
out
pop
aas
dec
cmps
jbe
imul
popa
and
xchg
shr
repz
int
pop
push
in
ds
mov
sub
cwde
fwait
in
jl
cli
cmp
icebp
pop
imul
outs
mov
test
out
pop
jbe
imul
inc
or
das
sub
das
sbb
push
mov
cmp
xor
push
aaa
outs
int
fist
scas
sbb
cwde
jns
or
xchg
jb
dec
pop
mov
sub
jae
mov
dec
movs
rol
mov
adc
jo
add
xor
popf
std
pop
pop
fidiv
mov
jge
lock
mov
ja
xacquire
(bad)
mov
sbb
push
cmps
mov
stos
fiadd
inc
daa
add
les
pop
fisub
ins
jg
or
mov
addr16
jmp
out
int
mov
or
xchg
pop
xchg
mov
push
xor
outs
dec
cmp
xchg
iret
ret
test
enter
sub
push
fnstenv
test
sub
push
out
push
inc
pop
pop
mov
cmp
xchg
rcl
inc
cmp
int
push
in
push
test
cmp
mov
fistp
scas
sub
mov
adc
ins
adc
jae
sar
into
les
les
cdq
adc
idiv
add
xchg
sar
and
push
repnz
out
push
dec
ror
dec
push
loopne
(bad)
addr16
mov
sub
js
ins
mov
ret
xor
inc
repnz
push
mov
jne
jl
loope
sti
xor
inc
fdivr
xor
push
mov
lods
push
xor
fld
dec
add
(bad)
ja
loopne
scas
pop
pop
sbb
mov
into
test
aam
or
stc
addr16
cmp
out
dec
test
inc
retf
push
xchg
xor
push
sbb
cld
test
popf
pop
arpl
cdq
cmp
and
xor
imul
iret
(bad)
test
test
push
pop
mov
pop
lods
mov
in
pop
inc
and
cmp
mov
sahf
icebp
adc
(bad)
cli
mov
rol
aaa
xchg
rol
mov
(bad)
jmp
movs
or
loopne
jmp
int3
mov
mov
out
cs
dec
cmp
push
popa
in
imul
and
or
idiv
xchg
mov
xchg
or
cli
fdivr
mov
les
aam
(bad)
or
les
ja
div
xchg
jecxz
aaa
rol
push
int3
ds
cmp
popf
jae
push
adc
pop
scas
cmp
sub
mov
mov
sub
popf
and
imul
iret
jae
xor
imul
pushf
cs
test
jns
jmp
jb
movs
cli
jb
into
pop
or
xor
push
call
xor
popa
loop
movd
sbb
popf
sbb
test
das
cs
aas
mov
adc
popa
or
bound
cld
fwait
(bad)
mov
test
not
shl
push
out
scas
fild
inc
scas
ins
pop
adc
push
imul
cdq
jae
push
popa
es
cli
push
lock
rcl
arpl
mov
sub
cli
sahf
add
and
daa
inc
sub
xchg
fs
push
pop
xchg
fs
pop
ss
in
test
mov
hlt
mov
(bad)
jmp
dec
pop
imul
or
fcom
xor
add
and
hlt
cmp
daa
mov
sub
cmps
adc
(bad)
imul
mov
dec
cmp
scas
push
or
cld
retf
pop
js
ss
push
jo
mov
cs
popa
pop
xor
xor
or
or
and
mov
mov
push
dec
dec
dec
jg
pop
inc
cli
dec
cmp
mov
gs
add
test
cmp
dec
push
out
sub
sbb
dec
xchg
pop
xchg
pop
rcr
(bad)
test
xchg
sar
gs
test
(bad)
pop
pop
ret
(bad)
fadd
das
aad
stc
adc
js
or
call
in
mov
pop
and
mov
and
sub
jecxz
fldenv
push
je
mov
add
(bad)
mov
rol
cmp
xchg
fld
adc
dec
inc
or
mov
movs
push
cmp
xor
push
repnz
int
(bad)
or
push
cmps
icebp
out
loop
daa
inc
daa
sbb
stos
in
ficomp
dec
xchg
mov
pop
pop
popf
cdq
pop
cmp
mov
lock
sub
jne
push
add
pop
jp
or
or
push
xor
sbb
cwde
and
mul
ins
adc
mov
sahf
movs
mov
sbb
popf
add
call
movs
jle
dec
sbb
sub
jnp
add
int3
cwde
mov
lahf
arpl
dec
aaa
scas
mov
lea
cli
mov
fdiv
dec
fcmovb
stos
pop
movs
cmp
lock
scas
(bad)
or
mov
dec
data16
bnd
out
icebp
sub
sbb
addr16
aaa
add
and
xor
test
add
and
cmps
push
xor
adc
mov
push
popf
mov
shl
or
jne
pop
pop
cli
scas
fcmovnb
dec
adc
int3
mov
or
or
es
push
out
cmp
mov
jnp
pop
shl
jecxz
iret
xchg
jnp
pop
lock
and
pop
stc
jmp
adc
repz
mov
fwait
jmp
push
jmp
rcl
mov
aad
inc
and
pop
in
or
cmp
into
ds
hlt
fs
inc
pop
stos
fstp
mov
sahf
pop
dec
sub
lock
push
mov
retf
mov
inc
addr16
xchg
pushf
inc
pop
inc
test
cwde
and
xchg
add
in
stos
loope
loop
sti
mov
mov
lock
jge
js
sub
and
(bad)
repnz
nop
sbb
add
inc
mov
sbb
sbb
jp
(bad)
pop
sbb
xor
xor
sub
test
mov
xor
jnp
jmp
mov
or
mov
jp
jge
enter
xchg
inc
mov
dec
aam
retf
outs
cmp
mov
mov
js
test
mov
icebp
or
fs
fidivr
push
rcr
les
and
mov
out
mov
adc
int
(bad)
push
pop
mov
mov
jge
adc
iret
mov
out
outs
push
loopne
popf
data16
mov
in
cmps
into
jle
cld
mov
xor
cmp
cmps
adc
dec
call
imul
cs
movs
pop
int3
lds
xor
push
dec
js
repz
xchg
mov
mov
mov
in
out
xchg
jge
mov
pop
push
ja
pop
inc
daa
test
and
push
lock
cmc
lods
nop
(bad)
jge
inc
pop
mov
sar
mov
xor
pop
xchg
stos
push
lods
sti
add
ret
in
ficom
test
ins
stc
lock
repnz
(bad)
int
pop
lock
cmp
mov
pop
arpl
dec
sbb
sub
rcl
enter
mov
data16
loop
movs
lea
and
inc
in
adc
les
sbb
ret
jo
repnz
xchg
and
adc
mov
xchg
cwde
ret
sbb
(bad)
mov
cli
loop
inc
(bad)
int3
fmul
adc
fdiv
icebp
rol
arpl
test
jo
call
mov
and
add
cld
lea
stos
sahf
pop
push
clc
xchg
xchg
jns
jae
ins
mov
loope
loop
test
aam
movs
add
sbb
in
fstp
adc
dec
cmp
pop
xchg
xor
lahf
ficom
retf
icebp
popf
xchg
arpl
or
int
jecxz
mov
(bad)
xor
or
clc
lds
bound
xor
cmp
loopne
test
or
mov
cwde
cld
enter
outs
iret
loop
in
scas
sahf
dec
ret
bound
dec
aaa
cmps
(bad)
das
adc
stos
mov
inc
or
ja
and
xchg
mov
(bad)
xchg
fiadd
cs
jne
xor
ret
int
jbe
or
dec
push
inc
jg
fst
jp
sbb
inc
and
inc
shl
mov
sbb
cmp
das
je
out
push
add
neg
inc
fwait
and
hlt
mov
add
xchg
int
xchg
(bad)
mov
jecxz
out
xchg
ja
pushf
add
das
loop
jcxz
push
iret
mov
xchg
or
test
je
push
fstp
in
cmp
aaa
xlat
and
test
add
cmps
adc
and
sub
mov
mov
or
or
push
cwde
test
cmp
imul
movs
cmp
fidivr
daa
add
mov
(bad)
push
fimul
push
adc
mov
in
xchg
mov
jp
xchg
dec
dec
push
scas
add
add
stos
sbb
test
jmp
pop
sbb
lds
mov
(bad)
sbb
jecxz
sahf
ins
outs
mov
mov
aaa
loopne
mov
adc
mov
leave
and
je
sub
ret
adc
jg
je
xlat
imul
sub
(bad)
loope
out
inc
scas
je
stc
and
shr
repnz
js
sar
addr16
test
js
push
outs
pop
adc
les
movs
xchg
imul
div
cdq
ror
call
mov
enter
cld
in
imul
in
sbb
lahf
jecxz
cmp
lock
retf
add
es
push
dec
mov
cld
xchg
mov
adc
adc
pop
pop
push
push
aad
movs
add
or
xchg
shl
loope
call
(bad)
fsub
mov
or
jns
cmp
ret
cmp
mov
push
adc
repnz
pusha
dec
mov
jp
je
xor
inc
loopne
mov
mov
xchg
adc
dec
lods
cwde
leave
or
punpckldq
jnp
xchg
aas
adc
gs
icebp
sub
pop
and
outs
pop
clc
fdivr
shl
or
movs
mov
aaa
inc
stos
mov
rol
mov
adc
inc
cmps
inc
mov
mov
cmp
movs
cwde
jmp
xchg
icebp
pop
shl
cmp
test
idiv
sti
fs
loope
push
mov
jbe
into
and
cdq
cmps
popf
ja
pop
lds
xlat
xchg
sub
mov
cmp
inc
(bad)
pop
int3
cld
fs
shl
xchg
retf
and
and
pop
sbb
pop
enter
adc
cmp
add
pusha
stos
sahf
retf
cmp
aad
xchg
cdq
add
adc
cmc
inc
xor
cmp
ror
imul
inc
pop
xchg
call
adc
movs
mov
push
sub
or
leave
jl
lahf
mov
stos
fisub
sub
test
stos
retf
jo
nop
cmps
push
xchg
cmp
jnp
and
xor
add
or
xor
fmul
(bad)
sbb
les
ret
add
mov
xchg
xor
imul
(bad)
frstor
jle
jge
mov
nop
or
mov
xlat
in
sbb
sub
cmps
inc
mov
mov
aaa
jo
repnz
pop
or
mov
xchg
inc
ins
ins
ja
ret
push
inc
mov
sbb
loope
push
inc
es
mov
sbb
push
sub
pop
mov
push
adc
sar
out
out
rol
mov
push
cmp
arpl
test
adc
mov
xchg
adc
mov
xor
pop
dec
mov
addr16
lea
in
adc
aas
imul
push
mov
push
mov
cmp
sti
mov
add
shl
xchg
jg
push
(bad)
test
inc
sbb
enter
sub
cmps
(bad)
mov
sub
jmp
xor
add
cmp
sbb
data16
xor
cdq
jge
lock
xor
int3
add
inc
test
pushf
xchg
fs
pop
sahf
fnstcw
push
out
mov
ret
dec
xchg
jae
lea
in
adc
mov
xor
xchg
inc
push
xchg
push
jl
add
(bad)
(bad)
ret
inc
inc
xor
ret
pushf
jmp
out
(bad)
mov
sub
add
retf
push
cmp
js
call
ds
mov
gs
mov
push
aad
call
scas
push
js
dec
daa
les
scas
lods
in
jbe
test
and
sub
xor
push
shl
or
push
(bad)
hlt
push
jno
retf
fwait
inc
pusha
mov
imul
add
stos
arpl
xlat
and
push
(bad)
lods
inc
fwait
mov
mov
jmp
movs
psrlw
movs
or
adc
inc
das
sbb
and
or
mov
sub
into
je
sbb
sbb
and
cmc
pushf
sahf
movs
sbb
or
cmp
lock
in
loope
sbb
push
dec
and
lods
test
out
(bad)
pop
cs
in
cwde
fmul
test
pop
(bad)
cli
mov
dec
push
jns
dec
pop
cs
sbb
jae
lea
inc
aas
addr16
jge
rcl
jb
nop
aas
pop
stc
int
dec
adc
daa
mov
add
rol
xor
add
sahf
aad
or
call
xor
cmp
adc
call
mov
inc
cmp
adc
sub
mov
inc
movs
sbb
imul
push
jb
jmp
pop
das
dec
mov
push
imul
scas
stc
dec
lock
jg
aas
mov
scas
rcl
cmc
and
leave
and
add
jo
push
mov
cmp
inc
adc
mov
lea
cmp
scas
push
inc
push
jns
cmps
push
popa
gs
nop
push
sub
add
cld
int3
outs
dec
cmps
xor
inc
das
add
push
xor
iret
lea
cmc
push
mov
in
fcomp
aad
xor
arpl
jb
inc
inc
jge
mov
push
cmps
xchg
popf
rcr
cs
jmp
outs
push
jns
xchg
jbe
jne
cmp
lods
cld
sub
stos
dec
sbb
out
inc
ret
push
adc
xor
pushf
adc
retf
xchg
scas
pop
fistp
lock
lods
mov
inc
sti
dec
mov
retf
lds
inc
clc
sub
arpl
psllq
adc
cdq
xor
sti
push
xchg
or
jl
pop
mov
and
and
adc
mov
test
pop
fwait
(bad)
rol
sbb
sub
pop
out
out
fdiv
push
fistp
xor
mov
rcl
js
pop
(bad)
mov
jg
sub
push
clc
outs
(bad)
nop
mov
(bad)
pop
xor
or
jno
fisub
jecxz
push
cmp
mov
in
add
nop
jb
mov
jge
out
cmp
jg
es
jne
stos
sbb
add
aam
aad
sbb
xchg
pop
stos
cmp
aas
pop
pop
and
mov
xor
jl
cs
mov
xchg
xchg
dec
xchg
gs
dec
icebp
mov
pop
cmps
dec
and
imul
mov
mov
jmp
add
sbb
xchg
xchg
pop
jnp
(bad)
pop
clc
and
(bad)
in
movs
shl
adc
iret
jge
ins
test
mul
test
sbb
ja
mov
push
and
rcl
push
xchg
jne
aaa
and
adc
xchg
or
sub
cwde
dec
adc
test
sbb
inc
pop
or
xchg
push
add
push
or
std
outs
mov
stos
cmps
sbb
ins
push
mov
scas
ret
lods
add
dec
mov
retf
das
jbe
js
popa
js
movs
jno
icebp
dec
cld
shl
inc
and
fisub
xor
jg
mov
inc
shl
ins
in
int3
pop
sar
pop
adc
dec
call
addr16
pop
add
push
mov
pop
aaa
sbb
adc
cmps
shl
pop
in
je
xacquire
call
sub
sub
aaa
data16
dec
sbb
jl
sbb
xchg
jp
sub
sbb
(bad)
jecxz
(bad)
dec
adc
aas
mov
pop
lahf
xor
les
or
mov
je
push
mov
cs
adc
xchg
xor
iret
ret
mov
outs
aas
pop
jmp
add
or
xor
dec
aam
xchg
cmp
js
outs
dec
pop
aas
test
sbb
xchg
add
fist
and
nop
xchg
popf
in
inc
call
cwde
push
mov
int3
ins
mov
mov
pop
leave
scas
and
(bad)
jnp
lds
xchg
out
xor
and
mov
test
xchg
push
xor
cli
adc
jo
and
cmp
jnp
daa
sbb
jns
or
leave
add
xor
push
bound
retf
scas
gs
xchg
jae
clc
fsub
movs
arpl
push
test
movs
push
xor
adc
xchg
out
packssdw
push
cmps
addr16
push
sbb
leave
and
shl
bound
mov
sar
pop
fisttp
sub
imul
(bad)
pop
inc
stos
lahf
and
pop
add
push
pusha
inc
xchg
ror
lods
ins
xor
inc
in
in
pop
and
jl
pop
xor
sbb
imul
dec
or
mov
and
repnz
mov
push
mov
sbb
add
xchg
dec
xor
neg
mov
clc
jmp
push
(bad)
clc
jle
retf
jg
fadd
add
stc
sbb
push
or
inc
xchg
jmp
mov
arpl
inc
mov
xor
dec
inc
sub
aam
mov
or
mov
clc
or
neg
in
mov
push
fnstenv
mov
cwde
outs
mov
ja
xchg
ins
pop
push
ret
inc
xchg
pop
stos
cmp
add
ds
out
pop
pop
out
dec
cdq
inc
adc
cmp
imul
ja
jae
and
inc
push
adc
dec
jb
push
ror
cld
inc
push
sbb
mov
add
int3
rcr
fstp
sbb
or
adc
mov
or
add
inc
mov
jp
ror
push
popf
out
imul
mov
mov
outs
or
and
jnp
mov
or
or
push
in
add
idiv
mov
cld
pushf
push
ret
fstp
sbb
out
ss
push
lahf
lock
sub
loope
push
push
fld
cmp
adc
bound
adc
sbb
scas
mov
loope
pop
sub
movs
addr16
ret
and
mov
imul
std
rcl
jb
je
loopne
(bad)
push
in
sbb
xchg
jle
cmp
aas
inc
neg
push
loopne
mov
add
ins
jnp
dec
sbb
cs
inc
imul
sub
icebp
sub
lock
lods
pop
jmp
dec
dec
adc
sbb
push
inc
in
mov
push
sub
call
sub
xor
and
sub
inc
cmp
pop
xor
inc
dec
fdiv
inc
sub
mov
push
jle
mov
inc
ja
test
out
push
add
pop
outs
jmp
fdivr
pop
xchg
in
xlat
aas
ja
jl
xchg
mov
sub
xchg
jl
cmp
jns
cwde
aas
ret
loop
xchg
add
fiadd
and
mov
add
in
aad
push
mov
mov
mov
call
xchg
cmps
mov
or
push
sub
sub
lahf
test
cmp
les
rcl
std
mov
pop
lock
ret
xchg
pop
retf
stc
push
inc
mov
fwait
retf
and
sar
lea
add
sub
fimul
xchg
(bad)
movs
push
push
cwde
mov
iret
(bad)
sbb
pop
lods
xchg
(bad)
popf
push
push
push
adc
mov
add
push
ror
loop
fsub
push
and
jg
add
adc
inc
int
bnd
or
test
push
cmps
icebp
scas
jb
add
sbb
xchg
push
addr16
and
adc
adc
sbb
add
out
mov
or
inc
sar
(bad)
(bad)
xor
sub
push
pop
xchg
inc
cmps
jne
vmread
pop
dec
inc
iret
dec
mov
(bad)
icebp
mul
and
jge
add
out
mov
and
push
cli
jp
in
jnp
jnp
jl
sbb
loopne
dec
popa
mov
jbe
cmp
adc
out
and
popf
out
enter
cwde
(bad)
movs
add
(bad)
out
push
cs
add
adc
fiadd
icebp
je
lods
clc
lds
jge
pop
sbb
push
xchg
in
fs
mov
sti
sub
and
mov
ret
cwde
push
lds
pusha
out
imul
pop
in
xchg
test
push
adc
fadd
dec
cmc
and
lock
arpl
or
push
das
adc
shl
inc
sub
test
mov
ret
mov
push
mov
xchg
out
mov
xlat
retf
sbb
test
fild
jnp
lods
add
sbb
pop
adc
add
retf
cwde
out
inc
pop
jbe
int3
les
jmp
outs
jae
cld
jle
xor
and
mov
adc
pop
aam
inc
retf
mov
fimul
push
lock
stos
(bad)
and
cs
stos
dec
and
mov
ret
push
fidiv
js
and
stos
pop
pop
jmp
loope
fs
inc
in
rcl
adc
push
push
push
jmp
mov
stc
inc
ins
pop
inc
pop
xlat
mov
pop
pop
cld
push
loop
mov
retf
ret
pop
daa
fwait
cmp
jne
loop
xor
xor
imul
jge
retf
xlat
lea
es
dec
arpl
pop
(bad)
rep
cmp
add
and
outs
cmps
mov
sbb
(bad)
in
lock
xchg
xor
fistp
adc
cmps
test
test
ss
in
push
stos
sub
icebp
call
les
movs
ss
repz
in
stc
dec
inc
jnp
or
adc
mov
out
ins
iret
mov
sbb
pop
mov
div
mov
xchg
mov
cmps
adc
std
iret
mov
mov
pop
(bad)
adc
push
xchg
jnp
cld
add
rcl
push
cs
push
stos
repz
push
adc
pusha
es
loop
mov
cdq
jecxz
mov
mov
xchg
add
pop
xor
or
std
mov
pop
pop
retf
or
les
test
imul
lods
sub
xchg
ins
daa
dec
or
push
sbb
push
pop
mov
aam
mov
repnz
stc
jnp
test
call
dec
dec
dec
jmp
repz
pusha
sub
das
push
xor
shl
test
dec
in
sahf
push
jmp
pop
jmp
test
mov
pop
loope
cmps
lock
or
in
xchg
lock
inc
dec
mov
out
sub
sbb
into
add
push
stos
xchg
aam
mov
fisttp
ja
out
xchg
shr
mov
test
adc
push
mov
pop
mov
rcr
push
loopne
es
das
sub
sbb
arpl
mov
xchg
aaa
dec
lods
xchg
stc
adc
into
mov
adc
neg
aas
shl
adc
pop
jne
mov
mov
dec
xchg
loope
cdq
test
dec
outs
or
clc
adc
jbe
nop
pop
jo
icebp
mov
ss
push
mov
icebp
jp
lahf
aad
jp
and
stc
or
push
gs
pop
cwde
push
iret
arpl
pop
cmp
add
test
jg
out
cmc
add
push
push
sbb
xor
mov
test
fstp
xchg
stos
mov
jg
pop
inc
jb
cmps
mov
inc
cmp
mov
ret
adc
int
cmps
jle
cdq
sar
bnd
fmul
nop
dec
pop
out
cdq
int3
lock
sub
push
adc
sub
xor
xor
daa
nop/reserved
popa
outs
mov
inc
or
cdq
push
mov
push
sahf
jg
xchg
arpl
pop
mov
shr
sbb
inc
xchg
sahf
sub
pop
cmp
fwait
loopne
and
pop
pop
cdq
arpl
int3
mov
cmp
loop
add
aad
sbb
inc
and
cmps
mov
test
or
cmp
push
xchg
sbb
addr16
cmp
mov
push
jecxz
push
sbb
push
shl
sahf
retf
sbb
gs
pop
inc
push
jp
loopne
push
pop
outs
push
out
cwde
aam
lds
rol
push
and
xor
inc
push
dec
mov
mov
push
inc
mov
push
outs
push
jp
mov
mov
(bad)
ss
js
and
nop
daa
pop
and
mov
xchg
repnz
dec
inc
cmp
push
mov
jl
in
cmp
je
mov
push
ja
dec
cmp
inc
xchg
loopne
xchg
xor
in
xor
pop
out
cmp
adc
sbb
and
xor
inc
cmp
ret
in
push
sar
test
lock
inc
cmc
bnd
jl
jbe
add
xor
pop
ins
nop
sahf
pop
aaa
popa
sbb
xchg
lock
push
mov
add
and
cli
fstp
imul
jne
nop
or
call
addr16
cmps
sub
and
lds
pop
mov
adc
fldenv
mov
cmp
push
cmps
jmp
(bad)
dec
dec
pop
and
mov
dec
sub
iret
pop
movs
adc
stos
xchg
inc
test
xchg
mov
pusha
movs
mov
dec
add
fist
pop
push
jns
add
jl
int
inc
jne
std
cmp
ror
(bad)
mov
lods
mov
inc
aam
rol
jge
jle
sbb
xchg
push
lods
stc
and
push
cmp
jge
xchg
mov
sub
in
adc
mov
scas
xor
mov
or
aas
push
test
mov
les
adc
in
or
pop
mov
(bad)
scas
or
jo
mov
and
mov
mov
test
rcl
repz
jge
cmp
leave
dec
ss
adc
repnz
mov
in
pop
xchg
xchg
mov
xchg
push
push
les
pop
pop
and
inc
sub
sub
fstp
adc
jo
add
aad
inc
xchg
push
adc
ss
mov
xlat
mov
push
inc
dec
and
and
dec
inc
mov
adc
aad
movs
mov
adc
stos
imul
sub
mov
loope
fs
mov
and
push
scas
in
in
inc
sahf
inc
imul
pop
loopne
add
dec
mov
adc
loop
fcomip
cmp
out
aam
sti
jo
mov
sbb
loopne
add
loope
pop
sbb
push
jmp
cmp
frndint
cmp
test
or
jno
hlt
jnp
aad
jg
push
loop
pop
repz
xchg
mov
stos
ret
dec
cmp
xchg
movs
jns
adc
sahf
cmp
dec
int
fistp
sbb
push
mov
sub
pop
inc
sbb
pop
pushf
mov
loop
add
fisubr
in
popf
adc
or
sahf
and
inc
sbb
pop
pushf
pop
add
lods
pop
outs
cmp
int
jns
test
sbb
dec
das
jmp
outs
pushf
mov
mov
sub
daa
sbb
lahf
push
ss
push
retf
and
pop
cmp
cmp
push
(bad)
dec
fild
jecxz
cmp
mov
inc
icebp
sti
jae
out
ror
cmp
pusha
cdq
in
fs
lahf
add
and
sub
cmp
jnp
out
mov
push
jnp
shr
jo
lahf
pop
and
shr
add
test
sahf
mov
pop
fsubr
adc
dec
test
jp
pop
out
cmp
ins
lock
mov
pop
loope
and
fnstenv
loope
hlt
pop
dec
and
iret
cmp
idiv
repz
lds
pop
pop
and
pop
pop
lock
add
mov
aam
ins
fisttp
xchg
add
push
xor
sbb
xchg
(bad)
mov
sub
das
jbe
pop
xchg
cwde
test
adc
jo
call
jle
jb
sar
mov
ror
adc
dec
stos
push
nop
scas
cmps
or
retf
out
repnz
push
dec
push
sbb
dec
pop
cmp
nop
std
pop
or
and
and
pop
clc
cwde
jg
xchg
dec
les
xor
cdq
mov
and
sti
mov
cmp
outs
or
data16
xchg
xchg
or
lahf
pop
or
les
adc
pop
sbb
stos
or
imul
jmp
adc
jne
leave
nop
push
jne
xor
jle
icebp
rol
sbb
popa
out
xlat
jae
faddp
movs
iret
repnz
xor
dec
call
mov
xlat
arpl
shl
loop
cdq
inc
ins
jnp
dec
mov
mov
pop
adc
inc
mov
lock
dec
cmps
pop
inc
xchg
sub
xor
retf
adc
add
or
push
sub
adc
sahf
xchg
inc
jo
loope
cmp
inc
push
aad
outs
adc
jb
popf
or
xor
cmp
lahf
xor
cld
hlt
dec
div
test
and
cld
mov
ins
enter
into
les
ss
xor
test
ror
(bad)
sbb
dec
push
xchg
mov
ja
lea
add
sub
xor
retf
loopne
sbb
push
adc
loopne
mov
repz
jmp
pop
lea
stos
retf
jl
mov
nop
pop
sub
pop
inc
stc
add
(bad)
pop
mov
mov
and
cmp
loopne
imul
push
cmp
pop
test
dec
cwde
ja
jle
pop
aad
jo
xchg
jl
imul
jmp
fisub
dec
mov
scas
stos
inc
jne
xchg
gs
icebp
push
ins
fsubr
dec
push
jl
cmps
imul
mov
adc
addr16
pop
mov
sti
repz
adc
xor
inc
popf
pop
add
jae
rcr
scas
imul
dec
mov
test
inc
fild
push
dec
jecxz
dec
fsub
lods
shl
xchg
movs
cwde
cmps
mov
loop
loopne
pushf
push
pusha
jns
jae
xchg
xchg
not
push
inc
inc
in
push
or
les
xchg
clc
sub
xlat
xchg
hlt
cmp
cmp
arpl
fldcw
fxch
lods
lods
test
mov
dec
sbb
sbb
push
je
div
jnp
and
movs
cli
sahf
mov
sub
ja
inc
pop
les
jno
add
lods
add
and
mov
movs
fadd
jge
ins
jno
or
(bad)
xchg
add
sbb
lods
xchg
fcmovnu
adc
mov
pushf
jb
dec
test
sbb
int3
int3
dec
retf
mov
cwde
xchg
inc
mov
xchg
or
adc
(bad)
dec
xor
mov
add
rcr
pop
scas
out
fwait
das
add
push
loop
lahf
add
shl
jno
and
pop
sub
mov
add
jae
lods
jo
cmp
std
stos
or
xor
add
dec
cmps
push
loope
fisttp
xchg
ja
xor
rcr
mov
xor
aas
iret
imul
call
sar
xlat
sbb
mov
jp
fdiv
arpl
std
loop
lock
add
sub
bound
mov
jnp
push
cld
fisttp
fs
stos
ja
cmp
jb
call
push
push
jae
pop
stos
cmp
adc
or
fistp
cmps
cmp
cmp
xor
leave
rcl
mov
inc
jmp
push
fwait
mov
popf
sbb
mov
dec
or
movs
add
lods
push
stos
shl
(bad)
push
cmp
push
ins
hlt
cld
(bad)
ins
adc
jmp
mov
repnz
loop
adc
fild
mov
daa
xchg
xor
das
rcl
cmps
push
push
jnp
call
fsubr
(bad)
rcl
pop
fwait
ds
pop
ret
mov
xchg
inc
sti
idiv
retf
enter
sbb
ret
mov
in
out
fld
xlat
fadd
fs
fisub
fcomp
sbb
jb
mov
loop
mov
cli
mov
loopne
je
mov
push
mov
sbb
cli
in
push
aas
popw
leave
retf
fst
jmp
cmp
dec
mov
and
stc
add
push
pop
push
xchg
add
dec
or
out
imul
(bad)
jle
pop
std
lahf
aas
cwde
or
shl
mov
mov
mov
add
and
je
cli
aaa
(bad)
loopne
or
lea
addr16
adc
xchg
loope
cmps
fwait
test
hlt
mov
out
ja
sbb
sbb
imul
nop
ins
test
add
pop
or
mov
cmp
movs
fsub
sbb
jecxz
arpl
fdiv
mov
push
int3
mov
ins
add
xlat
int
js
outs
xchg
stos
(bad)
shr
dec
cdq
je
aad
call
hlt
xor
xor
aas
add
and
in
cmp
add
jle
cld
xor
mov
sbb
stos
xchg
movs
imul
cmp
(bad)
and
lea
retf
cwde
add
dec
jbe
or
mov
arpl
and
or
stc
xchg
pop
out
cmp
test
iret
iret
imul
push
shl
mov
inc
jbe
add
ror
out
sub
adc
(bad)
cmp
into
mov
stos
push
shl
je
bound
(bad)
mov
sar
pop
lea
cli
or
enter
dec
mov
imul
mov
scas
sub
inc
sbb
dec
mov
dec
cs
pop
nop
ffree
movs
push
lods
fisub
or
mov
mov
mov
cmps
pop
dec
jge
or
test
outs
jmp
and
inc
xor
movs
jl
push
fwait
add
into
adc
inc
nop
or
data16
sub
inc
jb
jns
in
outs
fwait
pop
test
pop
pushf
pop
inc
dec
aam
sbb
mov
inc
jge
iret
test
xor
pusha
push
xchg
mov
into
xor
popf
mov
xchg
mov
cmp
pop
jb
in
jle
in
neg
fcmove
cmps
repnz
pop
cmps
xchg
ror
icebp
ficomp
push
out
push
xchg
test
and
inc
and
into
xchg
pushf
int3
lods
xchg
xchg
jne
in
stc
mov
jmp
add
sbb
pop
lods
mov
dec
aaa
aam
test
sub
imul
pop
lea
xor
out
xchg
aam
shl
cwde
aas
pop
xchg
in
jb
push
or
rcr
pop
inc
hlt
mov
xchg
(bad)
xor
or
xor
imul
mov
adc
repnz
sbb
loopne
shl
in
retf
push
cmp
test
cwde
call
in
sub
inc
inc
and
jae
or
push
out
test
and
cmc
jbe
daa
nop
scas
jecxz
fcom
into
sub
dec
(bad)
sbb
jnp
stc
jb
mov
sub
xor
out
(bad)
jmp
or
movs
mov
pop
arpl
sub
inc
pmulhuw
xor
sar
xor
sub
inc
jp
pop
add
fldcw
imul
ret
clc
dec
pushf
imul
cwde
xchg
test
mov
xchg
fsincos
add
and
dec
push
popa
aaa
adc
mov
mov
pop
js
jle
mov
(bad)
test
outs
clc
mov
mov
and
sbb
sbb
ins
sub
popw
mov
pop
mov
mov
idiv
mov
(bad)
dec
lds
jns
inc
and
shl
repnz
push
dec
dec
sahf
mov
mov
add
jo
movs
adc
add
adc
stos
test
repz
cs
imul
ds
data16
js
cmc
and
call
sub
push
and
sar
sahf
inc
dec
pop
aam
aam
int
or
lea
iret
pop
jle
cmp
fdivr
mov
xchg
inc
call
rcl
and
mul
test
leave
mov
outs
cmps
outs
arpl
ret
test
mov
leave
fcomp
ds
ret
jne
hlt
push
pop
dec
aaa
sub
popf
jne
je
test
jmp
jno
(bad)
or
adc
adc
cmp
out
ret
add
daa
cmp
mov
xlat
fsubp
inc
jl
cmp
mov
ja
cmp
fnstcw
popf
imul
scas
mov
mov
ret
and
fist
popf
not
cmp
pop
mov
stos
lods
or
jg
pmaddwd
jae
cmp
jp
dec
pop
arpl
fmul
ins
cmps
mov
sbb
stc
xor
jg
sbb
aaa
stos
cmps
hlt
and
mov
imul
inc
push
mov
inc
stc
daa
ins
ds
imul
(bad)
push
add
sbb
into
imul
xchg
test
in
retf
cli
mov
mov
adc
push
adc
pop
push
pushf
gs
mov
cmps
xchg
push
sbb
pushf
add
adc
leave
sbb
ficom
cmp
out
xchg
cmp
(bad)
in
aas
lods
shl
jns
hlt
clc
adc
popa
aas
ret
mov
mov
and
sbb
cmp
xor
xor
mov
(bad)
jnp
in
loop
adc
ins
test
(bad)
pop
stc
sub
fnsave
sbb
mov
lds
rcl
cmp
xor
dec
mov
clc
jb
pop
push
jp
sbb
call
call
rol
rol
popa
aas
push
jne
cmp
dec
xchg
pop
inc
bound
pushf
xchg
push
ret
popf
int3
dec
push
push
rcl
clc
(bad)
xor
stos
enter
arpl
push
sub
fbstp
test
ins
push
in
jo
data16
repnz
add
enter
inc
jecxz
fs
stos
pop
lods
outs
(bad)
jmp
imul
cld
pushf
stc
mov
mov
das
movs
mov
mov
xchg
into
jnp
dec
ins
sbb
stos
and
into
sbb
sbb
arpl
mov
and
fbstp
arpl
xchg
mov
das
lds
aad
mov
or
fadd
add
push
test
(bad)
loopne
retf
inc
pop
sti
inc
sahf
out
xchg
or
add
retf
or
mov
xchg
jo
jae
mov
cs
inc
or
xchg
sub
pop
xchg
mov
xchg
xchg
leave
and
and
ret
mov
test
inc
mov
cmp
(bad)
dec
inc
inc
adc
cwde
jmp
loop
jle
lock
add
pop
sbb
ins
sub
stc
pop
jecxz
jmp
jp
mov
xchg
retf
cmps
fisubr
xor
inc
mov
int
rcr
mov
or
sbb
jmp
sbb
rcl
dec
add
pop
inc
daa
adc
mov
mov
out
mov
sbb
and
mov
pop
pop
jbe
xor
push
sbb
cs
hlt
xchg
ds
call
test
jmp
cld
mov
pop
stc
lea
xchg
sbb
push
sti
in
hlt
nop
xchg
call
aaa
movs
adc
sub
fcomp
ins
daa
and
aas
int3
inc
sbb
movs
pusha
scas
or
inc
fdivr
mov
aaa
add
mov
xchg
xor
das
lods
cmc
mov
aaa
cmp
inc
jl
test
aaa
cmp
xchg
jno
or
push
push
add
adc
and
ret
dec
in
addr16
xor
sub
cmp
jnp
sub
frstor
and
int
mov
pop
and
out
fadd
lahf
lahf
addr16
mov
pop
jne
dec
jne
or
xor
xchg
mov
outs
sub
inc
push
xor
pop
into
mov
test
jle
xchg
outs
in
mov
add
jmp
stos
jmp
inc
push
pop
out
popa
inc
cmps
mov
call
jmp
push
jbe
sbb
inc
cli
dec
stos
xor
cs
repnz
sub
fwait
inc
adc
xchg
arpl
push
or
cmps
pop
retf
nop
pop
xor
and
inc
dec
lahf
sbb
and
pop
test
repz
or
mov
(bad)
xchg
jae
dec
dec
lds
jge
cli
xchg
hlt
xchg
lods
stos
jg
mov
pop
and
cld
push
inc
(bad)
popa
inc
in
xchg
fidivr
mov
fs
(bad)
outs
sub
sbb
push
mov
adc
movs
(bad)
xor
inc
mov
xor
xor
xor
leave
lea
popa
mov
pusha
sar
in
mov
mov
inc
in
jne
shl
mov
and
cmp
push
enter
sbb
lods
mov
mov
mov
add
js
cmp
sub
mov
pushf
out
cmp
cmp
xchg
repz
(bad)
dec
ins
inc
stos
xor
sbb
xchg
test
aad
mul
in
ds
sub
ficomp
call
xor
(bad)
mov
jmp
data16
hlt
add
pop
cmp
add
inc
pop
xlat
adc
dec
mov
xor
cli
arpl
mov
adc
push
in
inc
xor
push
or
pop
test
xchg
push
push
mov
shl
in
adc
xor
ins
push
jnp
cmps
jg
jnp
out
cdq
add
movs
shl
fwait
jae
inc
cmp
fcmovnbe
sbb
cmps
mov
movs
lea
ret
pop
pop
leave
cmc
jno
lahf
and
and
clc
xor
std
out
cmp
aaa
test
or
retf
cdq
or
mov
mov
jmp
dec
sub
and
stos
dec
push
inc
or
and
push
daa
stc
stos
dec
int
push
mov
stos
enter
mov
cld
ds
aam
pop
xor
pop
sub
jo
(bad)
sahf
in
lahf
mov
xor
mov
pop
add
in
mov
popa
xchg
dec
push
dec
xchg
sahf
movs
in
test
test
lahf
sti
dec
pop
inc
daa
movs
js
xor
push
(bad)
outs
dec
and
out
pop
cmp
(bad)
je
inc
mov
inc
pop
and
(bad)
jmp
and
adc
cmp
xchg
jns
sbb
ror
mov
xor
mov
push
test
jb
mov
xchg
push
scas
mov
mov
fcom
jb
sub
leave
pop
mov
sub
jns
add
cmp
pop
jbe
ret
rcl
pop
fldenv
cmp
pop
cmp
cmps
cmp
inc
lods
mul
inc
inc
loopne
jb
(bad)
sar
or
(bad)
out
inc
es
into
(bad)
pop
shl
(bad)
mov
sbb
lds
inc
jae
mov
dec
mov
xor
pop
mov
cli
aad
daa
pop
iret
data16
mov
xlat
neg
and
loop
ret
inc
in
addr16
inc
mov
jle
and
mov
(bad)
std
mov
repz
xchg
popa
xor
cmc
mov
retf
fstp
retf
mov
or
or
and
lds
fiadd
push
sub
cwde
stc
test
mov
outs
outs
repnz
push
jbe
mov
iret
jl
les
dec
mov
inc
xchg
add
jmp
xchg
jecxz
dec
fcom
adc
push
add
jmp
sbb
push
sbb
ins
scas
sub
lahf
out
nop
jle
jle
add
ror
jo
add
mov
xchg
cmp
cmp
adc
lock
sti
aas
enter
aam
dec
out
cmp
mov
fild
retf
(bad)
test
jo
inc
jl
out
cmps
clc
les
adc
sub
pop
cmp
(bad)
cmps
lea
xlat
pushf
dec
shl
push
scas
cmp
or
cmps
imul
or
les
sub
jno
jno
nop
xchg
inc
jae
xchg
add
aaa
iret
inc
pop
adc
dec
test
out
mov
cwde
ret
std
jle
jge
mov
out
adc
dec
test
push
cmp
lds
xchg
mov
fisubr
adc
shl
jl
jg
mov
lock
cmp
jge
das
lds
xchg
mov
icebp
data16
pop
jnp
mov
inc
repz
scas
sbb
pop
pop
loopne
ins
mov
lods
scas
sub
aaa
in
out
imul
push
pop
inc
add
push
sbb
xor
pushf
dec
add
or
loope
xchg
or
test
ins
popf
out
sbb
aas
(bad)
cld
ins
fcmove
xchg
lea
mov
test
shr
jae
nop
call
push
lock
xchg
pop
cmp
fcom
into
push
mov
dec
jbe
jne
jle
sub
jl
lods
xchg
push
mov
das
fadd
out
sbb
unpcklps
mov
push
aam
mov
repz
das
push
sub
ficomp
rcl
xchg
rcl
mov
shl
sbb
cmps
fidivr
jmp
adc
ror
push
scas
push
rol
ins
scas
pop
jp
outs
clc
and
jg
cdq
cdq
cmp
les
lds
dec
in
mov
xchg
int3
dec
(bad)
clc
mov
into
mov
out
push
xor
push
lods
push
sbb
sub
pop
jbe
dec
sbb
mov
shl
xlat
jbe
loop
xor
fs
pop
scas
leave
test
ret
mov
cli
shl
js
sbb
(bad)
iret
cmp
xchg
stos
jb
pop
xor
das
xor
sub
xor
jnp
dec
hlt
ja
loop
sub
push
and
ja
inc
lea
push
xchg
mov
cmp
xchg
clc
inc
push
push
shl
fcomp
in
jp
test
jnp
outs
data16
cmp
push
mov
xchg
fadd
dec
(bad)
jmp
cwde
call
jp
loopne
mov
je
sub
sub
and
jne
scas
and
retf
idiv
push
test
jle
clc
scas
sbb
outs
pop
into
cmp
div
stos
cmps
and
add
mov
pop
xchg
sub
cmovo
ja
or
cmc
push
adc
push
jnp
(bad)
(bad)
gs
or
push
sub
retf
fbstp
mov
into
cwde
test
dec
sub
mov
push
repnz
(bad)
out
(bad)
fbstp
stos
sbb
fstp
sbb
ret
mov
jne
stos
xchg
add
jae
adc
in
mov
mov
inc
aam
jb
cmp
push
(bad)
(bad)
leave
pop
xchg
cmc
ss
dec
lea
fmul
xchg
dec
jecxz
jg
(bad)
jl
out
out
popa
sbb
loopne
bound
repz
icebp
xor
cmp
fwait
fs
xlat
in
retf
sbb
outs
adc
lea
push
xchg
dec
push
hlt
ins
cmp
cdq
fdiv
mov
retf
jb
mov
or
push
pop
lock
xor
in
mov
sahf
inc
ficom
adc
xchg
outs
jp
retf
lods
lock
mov
lock
cs
pop
jnp
data16
xchg
mov
inc
icebp
ja
arpl
jb
or
mov
adc
push
cdq
cmp
cmps
mov
fsub
sbb
inc
cmp
les
cmp
dec
push
stos
pop
jg
and
add
inc
aas
cli
fild
sub
shr
xor
push
xor
movs
ret
xchg
push
mov
nop
mov
aas
daa
push
add
cmp
sbb
cmp
adc
dec
xchg
or
xlat
nop
call
xor
jecxz
sub
movs
outs
fadd
shr
stos
and
cli
and
push
push
push
jo
test
into
mov
dec
add
out
sub
pop
in
sar
in
sbb
jp
retf
das
and
ins
xor
xor
int
pusha
cld
cmc
or
pop
fcmovnb
push
ror
out
cmc
and
xor
inc
sub
bnd
cdq
ret
pop
fistp
(bad)
cmc
cmp
out
test
mov
mov
pop
loop
int
cld
in
and
test
cmp
in
bound
mov
mov
cld
popa
mov
retf
aaa
push
call
push
popf
std
jae
inc
mov
lods
dec
out
hlt
cmps
xor
pop
and
cmp
adc
pop
xchg
ret
cwde
jmp
push
jno
sbb
int
mov
loope
pop
lods
cdq
retf
adc
cmc
clc
add
add
pop
adc
repnz
add
das
ss
or
and
das
icebp
adc
xor
inc
iret
push
inc
jne
out
ret
add
test
sub
add
cmp
jbe
add
in
push
mov
jmp
pop
ja
jns
ss
js
js
sub
stos
sbb
js
fcom
or
pop
fldcw
or
mov
xchg
adc
jae
push
dec
scas
dec
lock
dec
add
sub
test
repnz
push
loope
inc
xor
dec
jle
lock
push
je
jnp
sub
retf
out
enter
and
popa
stos
clc
rcl
pop
xor
lods
dec
adc
and
inc
fistp
fcmovnbe
fidiv
mov
cmp
ret
push
scas
or
enter
stos
repz
cdq
adc
into
inc
jns
pop
sub
mov
push
pusha
inc
sub
or
push
(bad)
sbb
push
imul
add
mov
xchg
mov
test
xchg
push
cwde
mov
(bad)
jle
xchg
push
and
imul
test
fst
pop
inc
ja
shl
imul
push
push
push
adc
das
dec
pusha
push
fldl2t
dec
add
add
imul
add
cmps
xlat
add
jmp
or
add
popa
cli
int3
retf
je
fimul
shr
and
push
or
mov
daa
push
sti
popf
mov
mov
and
add
push
fwait
lods
js
dec
xor
mov
(bad)
leave
repz
movs
add
mov
jb
scas
pop
scas
or
cld
jne
into
jmp
add
adc
push
imul
push
outs
pusha
sub
jnp
jns
xchg
inc
jbe
stc
push
pop
push
leave
pushf
mov
aas
push
call
xchg
idiv
(bad)
lods
scas
fisttp
mov
(bad)
out
sar
ret
xchg
out
pop
pop
pop
mov
sbb
ret
(bad)
jbe
adc
cmps
sub
jge
in
adc
scas
loope
xor
mov
lahf
or
stc
ror
jnp
push
pop
pop
pushf
fsub
call
mov
or
popa
jecxz
push
movs
jbe
icebp
(bad)
pop
mov
in
fild
xchg
mov
ja
pop
inc
(bad)
ret
and
fwait
cmp
jne
or
repnz
in
stos
setns
xchg
pop
scas
mov
adc
mov
int3
shl
out
sub
(bad)
cmp
mov
ja
ror
pop
jno
inc
pop
sub
inc
das
outs
jp
sub
inc
jne
pop
mov
sbb
pusha
sub
pop
push
xor
cmps
adc
in
sub
leave
mov
sub
xchg
ficomp
(bad)
xor
mov
in
pop
cmp
movs
imul
xchg
add
and
pop
and
outs
movs
stc
cmp
out
add
aas
inc
jp
js
mov
add
mov
cmps
mov
adc
jb
mov
add
movs
stc
cmp
mov
sub
add
scas
jno
xchg
dec
ret
mov
inc
cmps
cmp
dec
out
add
(bad)
je
jnp
inc
sahf
ror
jnp
iretw
jle
ret
adc
arpl
add
inc
mov
sub
jecxz
sbb
outs
retf
std
fimul
and
mov
scas
xor
mov
out
xor
or
das
test
(bad)
sar
pop
ja
mov
add
or
int
add
lock
or
gs
repnz
movs
pushf
dec
pmovmskb
jge
xchg
mov
pushf
and
std
lods
(bad)
shr
mov
popf
pop
push
mov
xor
stos
(bad)
adc
cmc
(bad)
icebp
in
bound
popf
push
fisubr
add
popa
or
push
ins
jb
add
sub
xor
jmp
icebp
xor
or
cmps
add
inc
imul
into
in
cmp
and
sbb
jmp
add
cmps
push
pop
imul
mov
jne
sub
xchg
sbb
mov
inc
adc
iret
(bad)
lock
data16
out
int3
(bad)
mov
sub
and
repnz
(bad)
sub
mov
push
jl
ret
div
xor
mov
push
ror
mov
adc
xor
loope
dec
mov
pop
dec
and
sub
lods
adc
mov
or
in
lock
dec
sahf
xchg
mov
icebp
jmp
inc
sub
out
or
test
call
mov
mov
push
sub
gs
fdivr
jae
add
xchg
xlat
in
cmp
xchg
clc
add
push
mov
push
cmp
mov
add
stos
xchg
push
add
(bad)
xor
cmps
mov
push
cmps
mov
mov
retf
cmp
pop
cld
cmps
and
(bad)
dec
adc
outs
mov
(bad)
mov
call
jb
in
mov
test
loope
inc
mov
sub
lds
push
adc
jg
test
mov
mov
loope
test
rol
imul
add
(bad)
icebp
dec
pop
sbb
outs
cmp
push
and
pop
out
mov
jbe
jge
xchg
xor
popa
sbb
scas
pop
into
test
movs
cmps
popa
dec
add
adc
xlat
adc
mov
cld
xchg
cmc
imul
dec
pop
scas
test
stos
push
pop
leave
mov
aaa
push
je
imul
stos
adc
dec
shr
js
test
(bad)
and
fs
fistp
mov
xchg
lods
mov
mov
sar
adc
inc
mov
cs
push
jb
or
scas
hlt
fdiv
jl
sub
mov
xchg
les
pop
mov
adc
test
out
(bad)
iret
test
std
fnstcw
adc
mov
mov
aam
aam
dec
push
adc
(bad)
js
add
fs
cdq
jmp
call
movs
mov
dec
inc
into
xlat
xrelease
shr
fwait
mov
outs
outs
jge
cwde
std
jle
rcr
in
mov
add
pusha
jecxz
ins
inc
ret
mov
ss
push
arpl
js
lods
and
test
or
lock
push
push
(bad)
enter
jns
arpl
push
sbb
and
inc
outs
jnp
in
xchg
sbb
jnp
xor
sub
icebp
aas
mov
repz
jmp
inc
nop
push
sbb
cmp
mov
imul
jns
mov
or
jae
mov
cdq
aam
inc
add
scas
sub
sbb
imul
imul
or
cwde
xchg
add
xor
jns
add
push
dec
cmp
xor
and
sbb
addr16
push
addr16
adc
fcom
mov
mov
cmp
xor
mov
sub
xlat
add
or
imul
sub
push
lds
xchg
in
aad
sub
cmc
movs
pop
je
js
xor
ret
push
aaa
jne
push
ins
adc
bound
fcmovnb
or
sar
fs
sub
xor
cmp
jmp
mov
std
out
cdq
movs
jecxz
push
in
add
(bad)
inc
mov
mov
xor
push
jnp
loope
jo
adc
push
mov
mov
div
div
cmp
addr16
outs
jnp
cwde
mov
call
ja
cmps
out
enter
mov
add
fwait
pop
aad
imul
movs
cmc
inc
or
push
add
pop
jns
sar
and
push
jl
pop
pop
inc
mov
pop
std
mov
mov
ss
mov
xor
sub
xchg
movs
(bad)
movs
jle
xchg
lahf
retf
xchg
add
cmp
mov
popf
add
dec
out
and
not
mov
pop
(bad)
jns
daa
sub
fisubr
ret
cmp
out
mov
dec
nop
pop
loop
mov
fisub
sbb
inc
imul
adc
pop
push
out
push
(bad)
cmp
or
mov
movs
mov
imul
cwde
cmc
lds
mov
aaa
xchg
add
push
fs
call
pushf
xchg
pop
jmp
(bad)
pop
(bad)
imul
aaa
push
inc
lds
inc
inc
iret
sbb
mov
(bad)
mov
fwait
inc
lods
push
(bad)
sub
or
into
fild
stc
scas
sti
dec
aaa
sbb
cmc
xchg
scas
jno
stos
or
adc
scas
jmp
mov
les
shr
cwde
add
push
mov
in
ja
pushf
fiadd
sbb
sbb
push
sub
add
ror
leave
test
les
adc
sbb
push
fsubr
cwde
mov
jae
or
aam
fwait
icebp
mov
outs
push
sbb
iret
(bad)
in
adc
or
in
pop
in
mov
ret
xchg
mov
leave
cmp
mov
(bad)
adc
xlat
shr
sbb
call
fidivr
sub
cmp
jmp
cs
and
mov
mov
xchg
mov
loopne
jmp
mov
fld
loopne
in
xchg
stos
pushf
mov
pop
xchg
and
les
sub
js
and
addr16
cld
add
sbb
mov
lds
inc
mov
call
mov
(bad)
fs
mov
mov
dec
mov
xchg
xchg
in
jge
ret
inc
(bad)
sbb
test
xor
pop
scas
cmp
js
or
mov
dec
mov
pop
jecxz
(bad)
lods
lds
cmp
ins
mov
hlt
in
pop
jge
dec
inc
aaa
lods
neg
fild
std
xchg
popa
scas
sbb
pop
sbb
pop
fst
(bad)
shr
fdiv
or
push
cli
fcomp
adc
mov
add
mov
ds
pop
sbb
adc
lock
retf
sub
push
pushf
ins
and
int
aas
push
arpl
jnp
and
sbb
imul
scas
xor
xchg
clc
(bad)
sar
arpl
xlat
cmp
push
(bad)
and
add
mov
mov
daa
add
mov
xchg
push
cmp
popa
jno
out
fsub
in
in
and
inc
xchg
mov
xlat
inc
call
mov
pop
mov
aam
fsub
inc
mov
imul
cmp
arpl
je
cmc
mov
sar
push
sub
clc
into
push
(bad)
std
adc
div
jp
dec
push
sub
loop
xor
pop
jns
add
push
pop
xor
jbe
fcomp
sar
inc
dec
int3
jp
int3
mov
fwait
sub
addr16
xor
outs
push
push
dec
out
sbb
mov
jmp
xor
(bad)
fwait
cmp
clc
sbb
mov
inc
cdq
cmps
(bad)
mov
aas
jno
mov
stos
nop
jo
pop
pop
dec
jnp
push
or
mov
and
and
push
xchg
and
imul
push
jne
or
sbb
in
sbb
lds
jns
enter
ins
xor
shl
pop
test
jns
jge
jmp
adc
mov
jo
outs
mov
jns
loop
jbe
inc
push
leave
mov
cli
ja
lock
loop
xchg
movs
jo
mov
pop
sub
pop
pop
and
fdivr
hlt
das
leave
(bad)
xor
adc
(bad)
ja
add
add
lock
pop
jmp
push
movs
ret
xchg
cmp
out
movs
mov
dec
mov
popa
fiadd
push
push
xor
test
scas
add
loope
cld
call
jge
jae
cld
test
cmp
(bad)
call
mov
inc
push
pop
inc
xchg
imul
sbb
mov
aam
pushf
pop
adc
xchg
repz
dec
jne
inc
sub
cmp
adc
sbb
int3
clc
(bad)
sbb
cdq
imul
cmp
nop
dec
icebp
nop
shl
ss
ins
push
xchg
mov
nop
out
mov
mov
outs
add
pop
cmp
into
sbb
sbb
xor
cmp
ins
or
xchg
fsubr
das
repnz
(bad)
xor
mov
xchg
or
mov
mov
or
inc
mov
lods
lods
hlt
lahf
mov
xlat
dec
xchg
popa
add
mov
jo
push
add
dec
mov
outs
rol
leave
(bad)
sbb
(bad)
xchg
ins
xchg
call
sub
scas
(bad)
ficomp
xor
fcomp
mov
push
addr16
mov
mov
push
push
mov
fidivr
adc
jle
dec
lods
sbb
repnz
in
cmp
fimul
imul
pop
or
cmp
ret
push
pop
cmps
xchg
mov
sub
and
daa
lock
mov
imul
pop
xchg
mov
sar
pop
loopne
movs
aaa
pop
rcr
out
loop
outs
xchg
sub
sbb
push
repz
or
outs
pop
outs
pop
jp
mov
pop
addr16
hlt
test
add
les
mov
sub
in
hlt
(bad)
push
int3
lods
out
aam
sub
mov
sub
jbe
mov
dec
fisttp
idiv
call
(bad)
int
fnsave
loop
sub
mov
push
icebp
adc
pop
stos
jle
adc
fsub
push
mov
xchg
sbb
in
jno
xchg
out
rep
pop
mov
dec
(bad)
nop
ficomp
or
mov
pop
lds
daa
or
nop
push
stos
xlat
fcom
cmp
add
mov
sbb
and
call
dec
loop
or
imul
arpl
jae
sbb
sub
inc
push
repz
ds
cli
gs
fbstp
pop
mov
lock
mov
pop
aas
sub
pop
add
cmps
sub
jb
daa
mov
mov
mov
jb
js
xor
(bad)
jmp
mov
add
mov
das
jbe
jo
push
mov
jecxz
scas
dec
pop
jo
(bad)
dec
sub
scas
jg
xor
setne
pop
jmp
mov
mov
xor
push
mov
jb
sbb
xchg
or
push
bound
cwde
popf
add
pop
hlt
xor
test
mov
lods
or
retf
mov
dec
pop
pop
mov
in
xor
jecxz
fistp
aad
pop
xor
or
pop
ficom
sub
xchg
jo
pop
dec
xchg
jae
call
ret
cmp
adc
pop
xchg
cmp
and
ret
push
fisttp
je
repnz
cwde
mov
xchg
cld
xchg
push
jbe
xor
inc
loopne
neg
xchg
dec
outs
or
cmp
out
adc
sbb
mov
pop
add
mov
cli
and
fdiv
mov
rcr
xlat
sub
xor
xor
jge
cmc
push
pusha
nop
aad
push
rcr
jno
xor
jae
in
pop
or
scas
mov
push
out
fsubr
out
mov
mov
jbe
shrd
pop
inc
cdq
mov
fmul
add
mov
repz
mov
xchg
and
retf
cmp
out
(bad)
cmps
(bad)
jg
mov
mov
push
jmp
sbb
in
mov
adc
daa
jns
add
fist
jb
leave
lds
into
mov
mov
lds
shl
leave
fcomp
push
call
push
mov
retf
pop
dec
inc
sbb
in
pusha
das
iret
adc
jl
mov
jl
jmp
mov
sbb
or
dec
add
rcr
int3
inc
repnz
sbb
dec
fcomp
xchg
or
in
fsub
aaa
out
jmp
aas
cmp
leave
cs
cmp
dec
shr
(bad)
mov
pop
jbe
xlat
outs
clc
mov
xchg
mov
fld
xchg
scas
jmp
outs
movs
int
mov
dec
aaa
sahf
outs
cmp
and
xchg
and
mov
dec
loopne
or
pushf
(bad)
leave
into
out
mov
fucomp
out
inc
jno
push
sub
or
or
pop
sub
sti
sar
std
fsubr
mov
xchg
in
mov
pop
dec
test
sbb
pop
ins
push
xchg
ins
ficom
lahf
call
int3
fidiv
push
add
inc
jecxz
mov
mov
jecxz
cmp
aas
sbb
in
in
in
inc
mov
ins
test
adc
jnp
or
leave
push
dec
xchg
dec
push
or
dec
mov
cmp
sti
mov
push
mov
push
or
cmc
cmps
test
cmp
sbb
test
(bad)
dec
mov
in
out
gs
frstor
pushf
(bad)
adc
and
cwde
mov
jno
gs
mov
cmps
imul
js
jl
dec
mov
mov
push
lahf
adc
dec
dec
jnp
jno
pusha
(bad)
imul
lock
retf
xor
and
repz
add
jns
fldenv
lds
or
in
mov
test
std
xor
lahf
xor
jge
xchg
pop
jecxz
jns
or
adc
out
movs
inc
xlat
out
fsubr
ins
push
in
pop
retf
aaa
jl
push
and
mov
je
sub
or
out
out
(bad)
sub
inc
adc
add
out
or
xor
mov
push
std
cwde
push
jl
mov
(bad)
retf
out
shr
sbb
mov
inc
jb
outs
cmp
aaa
lock
mov
fld
mov
repnz
sbb
jmp
js
xor
push
rcr
ds
ja
repz
add
xor
add
jle
cmp
mov
in
and
push
mov
test
inc
mov
sub
cmc
dec
and
out
cdq
cmp
outs
xlat
and
and
push
inc
outs
sbb
imul
adc
lock
jg
popa
je
(bad)
rcl
fistp
jg
dec
sbb
outs
bound
sbb
mov
xor
test
outs
clc
jmp
mov
call
icebp
mov
mov
mov
mov
lods
xchg
sbb
jno
bound
lahf
in
jns
test
mov
xchg
es
xchg
sti
(bad)
xor
dec
jle
add
sbb
pop
mov
int
push
(bad)
add
and
mov
jmp
cmp
dec
call
(bad)
jmp
in
sbb
jge
mov
fisttp
test
or
and
sub
gs
(bad)
scas
jecxz
jle
cwde
xor
mov
inc
dec
sbb
xor
push
out
jns
jne
daa
fst
mov
push
(bad)
xor
movs
xchg
into
in
cmp
xor
push
pop
or
inc
(bad)
push
ss
arpl
and
pop
adc
(bad)
mov
iret
push
inc
inc
sub
aad
mov
rol
dec
shl
mov
(bad)
pop
(bad)
pop
scas
pop
call
repz
cwde
and
or
dec
cmps
xchg
out
xor
shl
hlt
push
pop
mov
pushf
les
daa
ds
cmp
fidiv
imul
shl
inc
repnz
pop
lea
xor
add
jmp
dec
push
ds
dec
lock
pop
sti
(bad)
adc
repz
push
and
stos
xchg
mov
or
dec
mov
dec
out
add
outs
dec
ret
in
into
sub
cmp
lods
out
pop
add
mov
add
pushf
cmp
dec
jmp
enter
xchg
push
fs
stc
sti
cmp
mov
sti
enter
mov
jnp
jnp
fimul
push
xor
add
scas
mov
mov
sbb
or
sub
push
jg
shl
dec
pop
ss
fimul
xlat
retf
pop
cmp
mov
addr16
mov
or
aaa
out
adc
arpl
pop
mov
clc
out
imul
lea
sbb
movs
dec
aam
jns
adc
adc
std
jae
test
fs
imul
ret
repz
or
jnp
dec
mov
sub
sbb
out
adc
aad
js
leave
les
mov
sub
mov
outs
cmps
(bad)
push
mov
sub
ja
mov
mov
jecxz
push
dec
adc
and
and
cli
popa
jno
inc
mov
inc
sub
loop
xchg
call
pop
mov
call
adc
sub
and
add
cmp
push
es
fmulp
mov
mov
loopne
add
sub
addr16
ret
adc
out
out
jge
adc
sub
loopne
mov
dec
jnp
sbb
pop
mov
sub
out
pop
dec
fstp
or
daa
in
push
test
ja
int3
call
outs
js
mov
fistp
sti
aaa
mov
imul
pop
leave
pop
ret
mov
or
clc
add
aas
pop
inc
push
or
xchg
ins
std
sub
push
jmp
mov
mov
fs
rcl
jmp
movs
xchg
or
and
xchg
aad
jl
js
jecxz
jge
shl
sub
xchg
(bad)
in
or
int
hlt
mov
les
sub
jno
out
pop
fwait
icebp
jge
xchg
aad
scas
fs
sbb
lock
inc
mov
sub
shl
and
add
dec
jnp
shl
pop
into
loop
imul
daa
jle
xchg
push
sti
and
pop
mov
push
mov
inc
popf
lock
test
push
sbb
xor
sub
imul
xor
dec
or
mov
in
mov
test
mov
sbb
mov
sahf
out
out
pop
bound
lahf
ins
and
mov
sub
push
cmc
jne
xor
in
mov
push
ret
popf
clc
pop
stc
call
(bad)
cmp
add
push
shl
sbb
rol
imul
jbe
cmc
frndint
(bad)
mov
add
lods
xchg
pushf
mov
data16
xchg
add
lock
ins
das
pop
mov
mov
pop
pop
jb
fiadd
xor
add
jb
jmp
pop
sar
push
iret
pop
fdiv
fisubr
xor
mov
jne
in
in
(bad)
cmp
loopne
jp
jne
test
sub
mov
and
test
and
test
lods
push
in
inc
sbb
fcomp
ds
xlat
inc
xchg
and
stos
cmp
sub
add
mov
std
xchg
adc
fxch
mov
push
lods
adc
test
pop
lods
ror
cwde
sar
in
rcl
jmp
je
test
xor
(bad)
idiv
jmp
push
xor
pop
xchg
xor
std
lahf
imul
cld
push
pop
addr16
movs
aam
mov
dec
in
mov
pop
pop
mov
stc
(bad)
test
mov
iret
sahf
sub
loop
imul
and
adc
lea
ins
out
call
xlat
sbb
test
fcom
dec
dec
(bad)
dec
push
in
loope
sahf
lea
mov
in
aaa
mov
and
mov
lock
call
loope
xor
repnz
mov
movs
movs
or
outs
adc
clc
js
mov
ror
lds
aaa
loope
dec
adc
or
cmps
cmc
xor
iret
retf
aas
add
cdq
repnz
jne
push
sub
pop
bound
push
scas
or
out
(bad)
std
hlt
outs
adc
out
and
stc
mov
or
imul
xchg
xor
add
stc
jbe
(bad)
dec
(bad)
jecxz
mov
mov
mov
add
cwde
jge
popf
push
push
mov
stos
iret
fld
xor
fdivr
push
test
out
lds
aaa
lods
mov
pushf
iret
jb
fwait
(bad)
pop
cmp
jnp
iret
pop
sar
xor
stos
dec
(bad)
imul
mov
mov
push
test
jb
sub
xchg
enter
jl
xchg
in
xor
xor
cli
les
icebp
outs
xor
(bad)
cmp
cs
pop
mov
add
pop
jo
loopne
sbb
cmp
arpl
mov
jmp
scas
or
dec
aas
sbb
add
ret
xor
jmp
test
ret
ss
cmps
fnstenv
mov
push
pushf
jmp
js
cmps
sbb
sub
inc
xchg
cmp
ins
nop
inc
push
int3
sub
arpl
arpl
cld
test
cmp
mov
jnp
adc
adc
test
stos
add
inc
dec
and
outs
ret
dec
fstp
aas
add
sbb
xchg
repz
mov
loopne
hlt
jecxz
std
aam
gs
ins
test
pop
sub
push
ins
and
sti
mov
div
pop
out
cmps
inc
movs
jge
rol
dec
pop
adc
movs
cs
cmp
cli
lds
cmps
jns
mov
cwde
nop
test
jl
gs
fnstsw
sahf
mov
sbb
enter
(bad)
pop
or
push
cs
push
out
fmul
push
repnz
movs
dec
xor
clc
ror
(bad)
pop
xor
pop
mov
and
leave
adc
mov
push
cld
(bad)
movs
push
and
xchg
mov
mov
cmp
xor
xchg
mov
push
push
test
sbb
cmps
mov
mov
in
mov
lods
mov
dec
mov
scas
xchg
jl
fiadd
push
arpl
or
loopne
out
pop
aas
mov
and
int3
cmp
jl
inc
xchg
xor
or
(bad)
in
ja
xchg
jnp
lock
(bad)
sub
or
hlt
xor
mov
add
add
sti
aam
fcmovne
mov
lock
or
and
enter
stos
sub
xchg
push
dec
sbb
inc
mov
inc
xchg
mov
sub
lds
ret
push
xchg
ret
inc
sbb
pop
call
add
test
jmp
mov
mov
jmp
dec
dec
xor
cmc
push
jae
xchg
out
imul
cmc
sar
imul
aam
mov
inc
loope
in
in
push
sbb
out
sbb
or
jb
mov
loopne
jb
fadd
cmp
int3
push
(bad)
not
push
and
push
lahf
ins
fisttp
rcl
fs
adc
or
repz
jle
add
xchg
xor
push
rcl
inc
lahf
jb
sub
out
arpl
mov
inc
popf
inc
add
jbe
lahf
xor
fwait
sbb
lock
addr16
lods
pusha
fst
movs
in
mov
call
sahf
shr
cli
fadd
cmp
inc
fild
movs
loope
cmp
jae
add
in
xchg
cdq
int3
cmp
inc
sbb
out
adc
cmp
ss
mov
jecxz
(bad)
mov
or
in
scas
mov
cmps
lds
xchg
cmp
push
inc
jb
out
fcomp
out
push
pop
in
fcmove
pop
inc
jno
fcom
or
mov
xor
jmp
dec
fnstenv
jle
retf
sbb
out
or
(bad)
ins
sbb
icebp
inc
cld
adc
add
test
jne
pop
mov
lods
add
mov
leave
sub
aaa
stc
retf
mov
inc
push
retf
(bad)
mov
mov
cmp
ss
sbb
int
or
mov
pusha
push
jl
cmp
inc
push
xchg
fbstp
test
scas
popf
cld
in
(bad)
sbb
pop
jo
mov
mov
xor
dec
imul
fwait
(bad)
mov
mov
cmps
in
pop
hlt
jg
add
push
jg
dec
mov
push
push
mov
mov
cld
pop
add
in
push
pop
ins
jae
(bad)
(bad)
cwde
scas
aad
mov
(bad)
pop
xchg
mov
and
mov
lea
pop
mov
adc
jmp
cmps
(bad)
pusha
loope
jp
test
push
mov
imul
shl
mov
mov
mov
dec
or
stos
(bad)
into
cmps
mov
(bad)
or
sbb
outs
mov
fcom
shr
inc
dec
in
aad
cmp
hlt
push
xchg
cli
inc
aaa
dec
jnp
inc
loopne
sub
xchg
(bad)
pop
mov
clc
and
xchg
inc
and
lahf
xor
fwait
cmp
sbb
inc
retf
add
mov
ins
dec
xchg
add
mov
push
fst
and
stos
scas
xor
shl
xor
cwde
pop
add
fsub
mov
sar
push
pop
jo
sar
push
hlt
(bad)
lds
movs
out
icebp
ja
(bad)
jo
pop
mov
xchg
repnz
out
loop
in
xor
jno
icebp
gs
scas
dec
das
(bad)
rol
retf
bound
daa
int3
fld
push
cmc
pop
dec
nop
inc
iret
add
clc
push
enter
jne
sub
dec
icebp
sbb
aad
test
repz
pushf
cmp
(bad)
xor
(bad)
pop
mov
popa
inc
cmp
jl
mov
mov
je
(bad)
fistp
pop
leave
fistp
add
sbb
xor
xchg
xlat
test
cmps
push
pop
adc
icebp
mov
cmp
or
mov
mov
fidivr
dec
pop
cmps
fs
mov
enter
xor
sbb
push
push
and
popa
loope
sbb
fist
mov
push
mov
add
or
aad
and
loop
lods
or
cmps
retf
inc
push
mov
rcl
mov
dec
push
xchg
xchg
xchg
mov
jmp
iret
adc
std
add
mov
adc
nop
lods
in
and
(bad)
fdiv
sub
add
jmp
adc
inc
lds
push
push
jb
cdq
sbb
call
(bad)
repnz
mov
sub
stc
jp
ins
imul
sti
push
mov
ret
inc
jecxz
xor
test
loopne
jne
cmp
sbb
adc
pusha
inc
test
lods
loopne
loope
jnp
jecxz
(bad)
cmp
dec
add
and
and
mov
cmp
ror
jmp
sub
mov
jbe
clc
sub
adc
call
pop
mov
out
push
and
icebp
enter
mov
add
out
les
inc
shl
enter
fcom
push
ret
xor
jne
add
clc
(bad)
sub
leave
cmps
loop
sahf
ficomp
xchg
mov
inc
retf
pop
je
stos
jo
fcom
inc
test
icebp
inc
repz
ror
xchg
mov
in
or
not
fcmovbe
jmp
addr16
mov
xor
add
push
push
jns
add
mov
or
mov
jmp
lock
icebp
inc
iret
test
cs
aad
fild
jb
lods
jae
lahf
aad
or
mov
jnp
call
out
inc
add
pop
les
nop
pusha
scas
scas
(bad)
xchg
xchg
ror
jl
lahf
xor
jg
mov
pop
cmps
xor
jmp
inc
xchg
retf
dec
and
mov
xchg
shl
mov
es
lods
jle
adc
js
stc
div
fs
jns
lods
inc
cs
ja
(bad)
loope
clc
nop
shr
mov
cmp
inc
ret
outs
and
xchg
pushf
ds
inc
dec
repz
jmp
mov
fiadd
fistp
cmp
sub
scas
fsub
popf
cmp
add
or
dec
adc
or
shl
scas
aaa
dec
lock
jge
dec
mov
pop
cmp
cmp
cmp
inc
mov
iret
xchg
scas
call
xchg
iret
cld
pop
jmp
or
push
sub
movs
shl
adc
mov
mov
out
loop
cmps
adc
ins
aam
out
adc
stos
out
jnp
call
mov
mov
fstp
call
int
push
ja
test
mov
or
mov
out
lods
cli
jg
lods
fimul
jge
fbstp
loop
in
(bad)
aam
or
jl
ret
inc
inc
pop
dec
dec
aas
aaa
mov
sbb
mov
dec
xor
xchg
movs
inc
cmp
add
ins
fucom
test
sahf
repnz
jb
shr
and
or
inc
aam
mov
or
mov
loop
inc
inc
addr16
ret
int3
and
pop
sbb
jl
sbb
push
popf
xchg
std
cld
inc
push
ss
loopne
je
sub
out
dec
push
ins
cmp
repnz
imul
cmp
in
aaa
lods
rcr
adc
arpl
jb
lahf
jb
and
xchg
pop
gs
xchg
mov
out
fstp
pop
retf
xchg
lods
aaa
mov
jge
pop
test
call
neg
or
sbb
sub
sbb
das
mov
cmc
and
dec
lds
addr16
lds
or
lods
fadd
mov
aad
pushf
mov
and
fld
sahf
out
in
fs
inc
mov
adc
fild
inc
sti
inc
push
push
leave
popa
jbe
psubusb
xor
retf
inc
push
mov
movs
inc
pop
inc
ds
ror
stos
aam
jmp
xor
faddp
dec
pop
jp
cwde
in
aas
mov
aas
jno
adc
and
movs
enter
fdivr
out
dec
dec
repz
mov
add
out
pop
test
push
fwait
mov
repz
out
xchg
into
mov
cld
test
bound
cmc
(bad)
mov
movs
cmp
xor
(bad)
jmp
dec
mov
outs
inc
inc
fmul
mov
inc
inc
mov
div
push
xlat
(bad)
xchg
or
fmul
les
iret
jg
into
cli
cs
imul
inc
pop
xor
inc
sbb
out
vunpcklpd
jns
sbb
push
pop
dec
sbb
pop
jg
scas
jp
push
add
xchg
cli
cmp
or
xor
adc
jl
int
xchg
cmp
fcom
cmp
sub
jns
hlt
sub
pop
fild
aas
mov
or
bound
mov
jns
sub
in
xchg
pop
push
std
cmp
mov
cmp
movs
mov
pushf
jmp
outs
js
pusha
lock
cmc
in
daa
xor
sub
int3
add
push
sub
jg
cmp
jnp
loope
jp
(bad)
mov
inc
arpl
clc
inc
jmp
popf
push
mov
xchg
dec
xchg
inc
pop
iret
repnz
pop
cmp
adc
clc
loopne
shl
lock
bound
lea
xchg
mov
sub
or
xchg
cs
popf
xor
mov
and
mov
jle
lahf
imul
mov
sbb
and
mov
and
pop
cmp
addr16
dec
lea
aad
sub
fnstenv
push
pop
or
cmp
xchg
or
xchg
(bad)
or
push
ins
push
inc
jg
les
sub
ror
push
sub
(bad)
(bad)
mov
adc
fwait
jne
arpl
ds
jmp
int3
add
cmp
dec
adc
sbb
xor
outs
lea
mov
mov
test
push
or
mov
fdiv
enter
xchg
cmp
xor
adc
hlt
xlat
xchg
cmp
call
sbb
dec
pop
jg
mov
pop
and
popa
jbe
xor
sbb
pop
jae
mov
jb
xor
push
add
(bad)
pushf
shr
bound
add
cmps
inc
call
mov
lods
adc
lods
inc
xor
jae
nop
clc
dec
mov
push
jmp
dec
sar
cmp
and
adc
stc
mov
mov
pop
lds
pop
gs
dec
out
mov
cmc
push
xor
add
retf
pop
jb
sub
inc
xchg
xor
sbb
sbb
out
inc
cmp
stos
js
mov
outs
cdq
or
dec
out
cwde
push
inc
shl
arpl
or
pop
dec
cli
pushf
push
mov
sub
data16
mov
div
icebp
loopne
cmp
cmp
rcr
mov
push
mov
push
fmul
popf
aas
test
push
cmp
pop
out
std
stos
scas
sub
add
cwde
add
nop
jmp
outs
pop
enter
xchg
xor
ret
push
sbb
mov
mov
jbe
neg
cli
pop
nop
pop
call
cmps
jmp
push
mov
in
fistp
mov
and
shl
(bad)
mov
in
pop
fisubr
xchg
pop
lods
int3
and
xor
int3
mov
add
sub
je
jae
aad
push
pop
mov
adc
daa
lahf
xor
mov
mov
and
outs
pop
dec
ss
lahf
cmp
test
jle
xor
cmp
pop
retf
jmp
dec
adc
mov
ret
push
std
pop
repnz
and
retf
je
ror
xor
add
and
sub
call
sub
fs
and
jmp
daa
push
xchg
add
test
in
xchg
(bad)
arpl
mov
jns
jp
inc
xlat
inc
sbb
(bad)
fisttp
aas
out
sti
loop
and
dec
outs
aad
jge
inc
or
ins
mov
cmp
or
add
add
sub
sahf
ret
dec
or
es
jg
or
movs
adc
retf
adc
and
jo
mov
fstp
data16
push
cmc
out
rcr
inc
loopne
jo
dec
out
repnz
iret
cmp
sbb
sbb
cli
cmp
jno
das
dec
sti
push
fdiv
lds
nop
repz
mov
xchg
adc
mov
addr16
pop
mov
pusha
inc
mov
push
outs
cmps
enter
jbe
shl
(bad)
jl
mov
and
xchg
mov
hlt
pop
test
jne
pushf
push
popa
les
push
ret
mov
cs
repz
movs
aam
call
(bad)
push
sub
add
jne
dec
mov
mov
sub
push
mov
sbb
xlat
jae
scas
and
(bad)
daa
stos
jge
dec
mov
mov
icebp
(bad)
push
sbb
outs
es
or
ret
pushf
mov
lods
sbb
mov
pop
outs
fcmovnbe
jno
pop
imul
xchg
pop
mov
pop
cmp
dec
and
(bad)
je
ror
vdivps
scas
mov
gs
stos
js
cmp
mov
dec
cld
clc
jns
fisubr
cmp
dec
mov
int
inc
inc
fstp
add
sti
sbb
push
call
cdq
shl
adc
and
pop
daa
pop
das
and
inc
push
cli
and
dec
cmp
or
cmp
jle
aaa
mov
xchg
fnstcw
inc
cmp
jno
jp
rcl
stos
out
mov
cmp
hlt
stos
jmp
arpl
sbb
out
test
pop
aam
pop
inc
adc
cmp
sbb
add
inc
jge
push
jnp
sub
mov
in
inc
mov
xor
clc
and
xlat
sub
ret
imul
lock
adc
nop
xchg
vmovmskps
dec
mov
sar
jp
sti
cmp
jne
loop
push
xchg
(bad)
cmp
or
call
xchg
mov
sbb
stos
add
shr
adc
shl
inc
jmp
inc
outs
out
mov
outs
inc
fistp
xlat
les
es
and
lock
cmp
popf
cld
adc
(bad)
iret
fnstcw
loope
xchg
mov
sbb
dec
push
mov
cs
mov
fs
popf
adc
pop
hlt
lds
enter
mov
xor
xchg
jg
push
inc
popf
scas
js
xor
cmp
das
mov
in
cwde
mov
int3
fwait
push
js
fcom
scas
mov
mov
inc
add
xchg
mov
jle
loopne
cmp
out
adc
lods
es
or
or
test
enter
adc
movs
in
sbb
dec
push
fdivr
cmps
call
jnp
imul
xchg
es
lock
and
div
inc
jmp
das
mov
repz
es
jbe
scas
pop
and
bound
mov
mov
scas
dec
jne
pop
dec
(bad)
mov
fs
push
push
les
inc
xchg
call
or
call
push
sub
jo
popa
icebp
or
movs
mov
div
cmp
cmps
jg
mov
shl
push
mul
add
cmps
ror
xor
inc
loopne
in
movs
clc
test
mov
stos
shl
xor
in
fimul
ins
pop
pushf
lods
mov
addr16
call
xlat
jp
loope
adc
inc
addr16
or
sbb
adc
jecxz
loope
cmps
sbb
arpl
mov
dec
push
jl
dec
popf
push
mov
add
adc
jl
push
test
dec
mov
rcr
jle
xor
ffreep
std
and
inc
fdivr
xchg
cld
sbb
fild
add
adc
mov
adc
mov
sub
and
push
hlt
ret
xchg
mov
retf
popa
adc
sti
jp
sbb
mov
out
fs
cmp
in
adc
xor
xchg
out
mov
mov
jo
jb
push
int
mov
pop
test
inc
push
and
mov
jge
sar
push
sar
fsub
test
mov
jns
mov
aam
jp
sbb
jno
idiv
jo
test
sub
xor
daa
push
jbe
daa
out
lds
cli
and
cmp
enter
fs
or
movs
mov
daa
add
popf
push
nop
pop
mov
dec
cmp
dec
ror
stos
loop
sub
xor
sub
out
(bad)
inc
adc
icebp
mov
cld
sti
xchg
sti
daa
bswap
xchg
adc
jnp
push
(bad)
shr
pop
jle
xchg
jo
cli
sub
(bad)
in
push
in
pop
sub
mov
jne
xor
outs
xor
repnz
inc
fwait
or
sar
add
xor
(bad)
repnz
dec
pop
xchg
inc
push
popf
jns
push
inc
pop
inc
clc
xor
mov
inc
sbb
adc
sbb
ins
sti
xchg
cli
jo
inc
lods
cmp
xor
mov
scas
daa
loope
jmp
pop
int3
test
cwde
mov
mov
sbb
xor
push
(bad)
std
(bad)
std
mov
retf
shr
dec
aaa
out
mov
mov
add
dec
and
dec
popa
aad
call
pop
int
dec
pop
addr16
mov
add
mov
adc
sbb
xchg
push
dec
push
je
pop
(bad)
sub
lds
inc
lods
out
(bad)
inc
add
call
add
xchg
(bad)
jne
lods
jb
xor
jge
push
fisubr
ins
ret
inc
(bad)
sub
xchg
fist
fst
(bad)
ficom
aad
mov
pop
jns
cdq
jecxz
(bad)
addr16
aas
mov
(bad)
lods
sbb
fdivr
pop
sbb
mov
jnp
out
dec
mov
jge
and
loope
push
lods
add
mov
std
mov
ins
xor
fist
pop
mov
fld
dec
cmp
scas
add
inc
imul
mov
clc
scas
clc
cmps
fst
push
test
inc
dec
js
dec
cmps
xchg
jmp
jge
dec
inc
jmp
gs
sbb
or
je
push
add
cmp
imul
test
jo
jp
adc
cwde
test
xchg
test
jp
add
icebp
push
or
mov
sub
mov
mov
addr16
xlat
pop
xchg
jo
mov
loop
mov
jb
pusha
xor
data16
mov
cmp
push
ret
dec
arpl
test
shl
lea
call
(bad)
push
pop
and
fsubr
in
inc
push
push
std
ins
pop
adc
cdq
and
xchg
cmps
jecxz
mov
push
or
iret
cmp
cli
inc
dec
xchg
adc
sbb
pop
inc
imul
inc
retf
pop
adc
push
ret
retf
addr16
aas
call
jmp
xchg
ror
mov
outs
or
add
inc
(bad)
dec
mov
retf
lods
jmp
sub
jl
cmp
lods
xor
int3
jnp
adc
or
loope
cmp
pop
into
aad
fs
stos
sbb
xchg
retf
sbb
mov
scas
mov
inc
cmp
nop
push
stc
add
test
sbb
xchg
loopne
mov
(bad)
xor
js
or
mov
rcl
dec
(bad)
sahf
and
cdq
sbb
or
or
inc
mov
les
cli
call
sub
sub
in
(bad)
and
pop
xor
or
jb
pop
fisttp
call
pop
es
(bad)
cmps
push
ret
mov
add
aaa
pusha
scas
div
fbstp
aad
call
cmp
mov
pop
int
addr16
sti
hlt
out
test
add
xchg
shr
mov
mov
adc
mov
inc
test
iret
in
outs
push
mov
mov
test
daa
ins
adc
scas
ds
or
cmc
pop
sub
scas
adc
(bad)
into
mov
data16
aad
fcmovnb
sbb
push
mov
cs
in
mov
xor
pop
test
cmp
pop
mov
sub
dec
stc
out
cld
fwait
popa
adc
add
dec
mov
and
xchg
std
jle
test
test
sahf
fistp
cmps
dec
ss
sbb
jno
test
(bad)
and
iret
and
neg
add
pop
jge
pop
les
int
daa
imul
and
or
cdq
outs
int
xor
adc
jl
sub
mov
cmps
jb
mov
push
xor
jmp
clc
add
mov
data16
push
sub
mov
jne
mov
mov
jecxz
out
pushf
in
icebp
fistp
inc
mov
xlat
and
test
ins
repz
push
fnstsw
adc
xchg
pop
retf
and
jecxz
shl
nop
imul
sbb
dec
bound
call
jno
ja
cmp
or
sbb
fidiv
sbb
in
pop
nop
add
fisub
inc
mov
mov
and
cmp
nop
add
push
std
pusha
loope
dec
rcl
aad
jno
lds
add
pop
inc
mov
cmp
out
sbb
int
icebp
lahf
adc
mul
inc
mov
xor
mov
int3
fimul
pop
sar
addr16
or
mov
stc
cli
mov
clc
les
push
inc
cmc
cwde
dec
pop
jmp
scas
mov
jb
xor
in
sub
dec
pushf
out
xor
mov
pop
pop
dec
mov
mov
dec
inc
mov
call
add
inc
lods
call
fstp
arpl
retf
xchg
ror
mov
je
sbb
mov
clc
mov
lods
ret
or
add
xor
sbb
in
test
movs
sub
outs
pxor
shr
sbb
ret
cld
imul
sub
rol
daa
js
add
jp
aaa
xor
sbb
add
enter
jns
scas
xchg
xor
and
cmp
xor
xor
adc
and
mov
jp
cdq
pop
sub
lock
pop
das
mov
sbb
push
or
lds
push
sbb
call
in
movs
jl
cdq
push
popa
adc
(bad)
lahf
jp
mov
mov
mov
jb
push
fist
push
xor
mov
sbb
sub
outs
inc
popf
(bad)
call
xor
add
es
pop
sub
daa
sub
cli
dec
daa
sub
lods
jo
jne
sub
popf
outs
les
addr16
retf
mov
mov
aam
sub
icebp
stc
mov
jle
cmp
out
add
nop
jb
imul
jge
push
inc
(bad)
arpl
xchg
xor
jnp
cmp
adc
nop
rcl
out
xor
in
pop
ds
sbb
loopne
aad
addr16
jno
sbb
or
lds
mov
out
pop
pop
push
mov
and
cdq
outs
push
jp
sub
ficomp
jl
or
fwait
ds
repnz
daa
test
(bad)
push
add
xlat
scas
mov
push
stos
inc
xchg
xchg
out
sub
dec
test
sbb
clc
cmp
mov
add
mov
push
cmp
ja
inc
cwde
outs
push
pop
and
loop
ss
push
cdq
or
push
les
sbb
push
outs
mov
fld
xor
pusha
mov
mov
mov
in
mov
and
ret
add
ins
out
popa
push
xlat
mul
push
(bad)
add
js
ja
xor
fisub
jcxz
xchg
imul
dec
pop
mov
mov
dec
movs
mov
scas
xor
nop
mov
sub
rol
dec
xchg
jmp
sub
hlt
and
mov
test
addr16
push
add
aaa
push
push
sbb
sub
inc
or
pop
mov
es
push
jp
ror
sub
outs
push
push
or
in
or
mov
arpl
fnsave
call
xchg
xchg
jo
out
out
mov
mov
add
dec
push
mov
jge
xchg
inc
push
stc
sbb
addr16
adc
fnstsw
enter
lods
add
xchg
jecxz
push
push
inc
bound
jmp
mov
test
sbb
or
xor
mov
push
out
mov
jb
mov
stos
xchg
aam
aas
in
inc
(bad)
sub
cmp
add
mov
int3
test
sub
out
mov
mov
sbb
sub
scas
pop
lods
shl
mov
cmps
mov
and
inc
pop
mov
call
xchg
dec
in
fnsave
data16
add
lahf
std
adc
ret
xor
lods
and
test
mov
inc
into
or
jmp
mov
and
sbb
pop
mov
pop
mov
call
xchg
xchg
or
adc
inc
xor
adc
das
inc
sar
mov
inc
imul
dec
enter
fdivr
(bad)
xchg
xchg
pop
enter
jp
nop
pop
bound
and
ja
in
inc
pusha
int
out
cmp
pop
(bad)
je
jg
clc
mov
cmp
sbb
push
jge
callw
sbb
in
push
ins
es
sahf
dec
inc
and
(bad)
mov
ja
adc
dec
stos
push
mov
dec
fsubr
pop
xchg
pushf
movs
inc
dec
cmps
add
pop
inc
jmp
clc
mov
xchg
aas
vpshuflw
ret
jg
mov
jg
leave
mov
stos
mov
mov
outs
cmp
cld
ja
in
int3
sub
je
cli
cmp
inc
adc
xor
mov
push
mov
or
es
mov
repz
jb
mov
cdq
add
pop
inc
inc
ss
cmp
or
dec
xor
out
inc
pop
dec
test
jg
(bad)
(bad)
xchg
ins
ret
jecxz
sbb
push
test
inc
mov
xchg
xor
lahf
add
gs
xor
or
iret
inc
pop
push
jmp
pop
cmp
and
add
mov
out
ret
or
adc
inc
scas
retf
int
in
add
or
shl
scas
mov
sbb
pusha
or
mov
ror
ss
mov
cmp
in
in
or
pop
mov
cmp
jo
mov
push
and
xlat
push
les
mov
in
js
test
dec
std
sbb
in
cmp
arpl
loop
mov
iret
xlat
mov
xchg
pop
sti
imul
pop
mov
movs
iret
shl
or
(bad)
cmc
lahf
inc
fcomi
test
in
jo
call
leave
pop
fs
mov
data16
js
xor
xchg
xor
inc
sub
iret
or
sub
in
ins
add
ins
xchg
adc
cmps
mov
and
xor
ins
clc
fild
mov
rcl
dec
not
rcr
call
inc
xor
leave
test
(bad)
sbb
sub
inc
mov
fcmovnu
xchg
pop
push
jb
push
loop
xchg
xchg
and
pop
cmp
loopne
mov
push
mov
sbb
imul
xlat
mov
sbb
outs
inc
jle
loop
int3
or
mov
or
mov
push
xchg
mov
test
gs
(bad)
repz
sbb
imul
adc
dec
(bad)
pushf
adc
jb
dec
out
ins
pusha
out
sahf
ins
add
inc
mov
mov
jl
mov
dec
xor
fsubr
add
xchg
push
pop
loop
popa
sbb
retf
mov
xchg
jmp
imul
arpl
xor
fs
dec
out
add
jmp
mov
and
(bad)
out
push
jmp
pop
jge
lahf
out
loope
push
fisubr
pop
mov
lods
lahf
mov
jae
imul
jmp
std
xor
pushf
mov
in
mov
jl
daa
sti
out
popa
pop
sub
mov
pushf
and
xchg
cdq
in
mov
enter
mov
test
xchg
jmp
mov
stos
fidivr
mov
in
xchg
movs
inc
fwait
mov
ds
imul
push
into
ss
int3
add
mov
sub
xchg
sub
jl
jno
lea
pop
push
std
pop
das
and
(bad)
gs
inc
push
add
push
sti
cwde
mov
(bad)
pop
in
add
(bad)
cs
repz
adc
ror
aas
das
in
es
jne
(bad)
stos
out
ins
pusha
xchg
mul
test
test
sub
sub
imul
add
pusha
inc
dec
xchg
xchg
mov
enter
xchg
push
scas
push
out
sub
sbb
add
add
adc
aam
fisttp
dec
sub
mov
enter
rcr
movs
or
cmps
lahf
call
daa
out
jle
pop
cmp
(bad)
out
mov
xchg
mov
sub
int
out
imul
loop
aam
jl
lods
mov
imul
ins
enter
ficom
adc
adc
or
mov
scas
jl
std
fistp
cli
rcr
jl
inc
lock
out
mov
std
nop
inc
in
adc
dec
cmps
out
dec
or
ins
scas
xor
loopne
and
loop
(bad)
fisttp
push
enter
pop
test
dec
adc
xchg
sbb
retf
repz
rcr
add
stc
xchg
stos
add
mov
push
mov
and
out
in
ss
pushf
mov
iret
xlat
and
int
mov
push
movs
inc
fisttp
pop
xor
inc
dec
js
fwait
xchg
js
jne
mov
lahf
cld
sbb
jg
js
fcom
test
repz
bound
mov
xor
push
xrelease
out
repnz
sub
in
test
mov
jl
xchg
dec
mov
mov
inc
bsr
dec
xchg
mov
cmp
mov
pop
cld
cmp
push
js
cdq
fcom
mov
sub
or
and
js
inc
(bad)
cwde
rol
add
jg
pop
ds
aaa
jb
imul
xor
push
lods
xor
sub
push
mov
shl
jns
mov
inc
stos
scas
aaa
mov
cs
or
je
mov
cld
mov
push
xlat
sbb
mul
(bad)
popf
dec
fistp
(bad)
mov
mov
cwde
int3
les
cli
push
std
fwait
cmc
arpl
imul
lds
movs
inc
movs
push
rcr
and
xchg
push
cmp
mov
aam
ret
xor
fs
cmps
(bad)
sub
push
mov
loopne
jbe
sti
push
add
xchg
mov
pop
ds
or
je
and
popf
xor
ss
or
scas
or
jmp
inc
sbb
sahf
jnp
cmp
(bad)
dec
ja
test
dec
scas
(bad)
retf
mov
xchg
xchg
push
xchg
add
pop
inc
sub
push
jecxz
lds
jg
push
sub
cmps
pop
sbb
sbb
(bad)
arpl
ret
fstp
in
inc
ins
mov
iret
ins
or
dec
bound
cwde
jbe
ret
xchg
mov
ins
int3
bound
and
out
dec
jl
adc
sub
cmp
fcmovnu
ret
sbb
mov
xchg
cli
push
pop
push
push
pop
cmp
inc
mov
push
daa
jp
int
scas
das
add
sbb
mov
jmp
and
stos
jp
retf
pop
jp
mov
mov
cmps
retf
loopne
dec
sub
jmp
ins
out
lods
cmp
xchg
and
push
lods
dec
mov
xor
cs
inc
sub
dec
add
dec
loopne
faddp
or
dec
inc
pop
fld
ss
lods
xchg
into
imul
int
push
jnp
adc
add
mov
(bad)
and
hlt
sbb
pop
fcom
add
aaa
xor
inc
mov
popa
jb
jecxz
add
not
mov
jecxz
jmp
adc
fistp
push
ins
mov
mov
push
iret
arpl
mov
cmp
inc
jecxz
mov
jmp
jmp
je
mov
ficomp
sbb
jp
add
scas
xchg
cmp
push
jp
inc
dec
aad
loope
aaa
pop
xor
mov
out
dec
repnz
xchg
test
shr
js
outs
sub
lods
dec
add
addr16
ja
cld
cmovb
xchg
mov
pusha
bswap
sbb
callw
ins
jl
and
cmp
test
adc
pop
mov
jp
push
or
mov
xchg
daa
mov
fdiv
inc
or
adc
inc
jmp
mov
xchg
addr16
and
mul
add
je
xchg
sub
inc
leave
daa
or
sbb
fsubr
cld
adc
jle
imul
jo
mov
mov
mov
mov
cmc
push
sbb
and
pop
add
xchg
out
adc
push
gs
add
fstp
fisttp
movs
pushf
(bad)
cmp
aad
test
repz
mov
je
imul
rcr
xor
mov
dec
mov
push
in
mov
test
inc
icebp
mov
ret
test
test
jns
loopne
push
test
hlt
fistp
dec
jb
pusha
pop
cwde
dec
jbe
in
xor
push
xlat
pop
ret
cld
jb
mov
jmp
pushf
out
jne
into
push
mov
retf
pop
lea
shl
(bad)
jecxz
imul
dec
dec
and
pushf
dec
in
xchg
in
fwait
gs
mov
push
mov
xchg
sub
lds
pop
ficom
mov
and
jle
or
dec
xchg
xchg
imul
dec
cmp
cmp
test
cmp
lea
fsubr
mov
jae
fwait
xchg
inc
cdq
jp
popf
mov
fsubr
inc
push
out
adc
cld
imul
pusha
je
idiv
gs
adc
sahf
imul
dec
sub
popf
push
rcr
adc
in
adc
push
ret
ds
je
dec
rcr
mov
clc
leave
lock
test
xor
rcl
test
jp
pop
cs
mov
add
pop
rcr
push
out
lods
std
test
lds
bound
loope
pop
std
xlat
pop
fild
mov
sub
lahf
aad
adc
dec
fild
or
dec
mov
push
mov
sub
fcom
ja
push
dec
cmovb
push
ss
xchg
les
pop
je
fadd
cld
push
and
cmp
nop
imul
shr
bswap
out
lds
jecxz
push
fldenv
dec
mov
jb
adc
test
cld
mov
mov
or
imul
aam
cmp
aad
cmp
jno
or
fist
jl
test
(bad)
mov
push
retf
mov
test
out
push
lahf
or
das
(bad)
stos
in
mov
shl
cmp
imul
movs
or
xchg
mov
test
mov
test
add
mov
cmp
push
out
fisttp
jg
sub
sub
or
or
(bad)
pop
mov
sub
jle
or
inc
scas
(bad)
stc
cwde
and
jecxz
aaa
fild
iret
test
sub
into
pop
cmp
mov
aaa
cmps
jno
repz
gs
adc
mov
jmp
and
stos
std
push
rcpps
xchg
sub
dec
neg
or
clc
sbb
clc
das
test
mov
popf
lock
mov
sub
mov
cwde
les
inc
fnsave
mov
jnp
dec
jmp
add
jle
pop
inc
mov
jne
popf
pop
pop
cwde
dec
call
out
mov
adc
cli
sub
xor
sti
aad
and
push
jmp
aas
or
icebp
jno
or
jmp
imul
cmp
jmp
cwde
jecxz
(bad)
std
adc
jg
mov
dec
jo
sti
mov
mov
mov
repz
in
repnz
push
std
sub
test
in
cwde
popa
and
fcom
fwait
sub
mov
mov
xor
push
sbb
leave
rol
dec
das
and
inc
cmp
sub
aaa
leave
pop
cld
stos
iret
xchg
cli
jmp
sbb
dec
jmp
mov
mov
shl
inc
daa
int3
das
and
push
pop
cmp
std
cmps
inc
js
sar
xor
cli
jmp
cwde
xchg
imul
xor
xlat
cmp
push
inc
and
and
fadd
pop
not
(bad)
sti
sub
cdq
cmp
add
cdq
or
pop
push
cdq
xor
nop
es
leave
jbe
xchg
int3
test
cmp
mov
mov
stos
sbb
std
dec
inc
xchg
add
xor
dec
stos
xor
and
mov
data16
pop
mov
dec
data16
jmp
add
pop
mov
subps
pop
gs
mov
cmp
in
sahf
cli
xor
mov
jle
sti
push
clc
sbb
ja
mov
jnp
xchg
retf
loope
jbe
lea
js
xchg
inc
push
(bad)
or
ret
stos
rcr
xchg
sbb
jnp
mov
je
xchg
lds
and
cmp
cmc
stos
mov
add
or
push
mov
aad
mov
je
mov
jnp
add
mov
sub
pop
jb
jbe
(bad)
(bad)
ins
arpl
loopne
mov
rol
ins
(bad)
mov
xchg
jno
jns
adc
inc
sbb
rcl
cmp
mov
aad
add
mov
inc
mov
seto
int
add
xor
sbb
ret
add
inc
sahf
lods
sbb
inc
lods
mov
lods
cmp
in
cdq
push
addr16
jno
in
or
jmp
retf
retf
mov
fwait
int3
mov
mov
lea
aam
in
fs
in
stos
mov
dec
out
jecxz
call
ret
(bad)
and
sbb
jl
(bad)
or
pushw
cld
jmp
mov
ds
bswap
sub
mov
push
into
data16
inc
lods
das
inc
aad
jp
sub
mov
cmp
stc
imul
push
scas
sbb
mov
sub
and
mov
aas
iret
or
ret
dec
popf
or
pop
push
pop
mov
call
(bad)
mov
fld
stos
jnp
popf
add
sub
sar
arpl
outs
adc
xchg
push
mov
test
sahf
out
cmp
daa
jmp
daa
(bad)
outs
pop
pop
jbe
xchg
xchg
or
mov
ss
sahf
das
cdq
mov
(bad)
adc
xor
cmps
xor
std
fwait
loopne
out
fisub
int
jbe
fmul
jmp
mov
test
fild
jne
jmp
mov
xor
dec
nop
or
and
inc
jmp
neg
and
jg
cmp
addr16
xor
addr16
mov
out
mov
mov
pop
les
jb
addr16
jp
sub
xor
cmp
gs
stos
(bad)
loop
test
adc
push
inc
fild
adc
int3
inc
lock
cmp
aam
fldenv
je
add
and
daa
sub
mov
sub
and
iret
push
adc
rcl
jp
mov
lock
jo
dec
mov
aam
pop
stos
mov
inc
jno
call
aaa
std
push
bound
xor
test
je
cld
sub
shrd
xor
daa
stos
sub
mov
ins
imul
sub
dec
shl
fild
into
pop
pop
(bad)
mov
out
les
aas
call
adc
inc
cmps
dec
(bad)
ss
mov
or
out
sbb
in
es
and
mov
adc
sub
fnsave
sub
int
icebp
fcomi
cmp
cmp
loopne
aad
jmp
sbb
adc
or
mov
push
imul
jae
pop
mov
push
fcomp
cmp
pop
ret
xchg
cmp
pop
dec
xlat
mov
push
mul
out
int
inc
lock
out
xchg
repnz
aad
dec
jmp
ret
push
jbe
push
xor
repz
jg
cdq
sbb
and
stc
pop
xor
lahf
inc
(bad)
xor
ds
xchg
int3
pop
push
scas
ins
lea
call
dec
pop
mov
xchg
fild
icebp
shl
adc
xchg
aaa
cli
mov
push
sub
in
shr
popf
push
es
jmp
pop
adc
fsub
cmp
mov
rcr
adc
les
or
daa
pop
shrd
imul
pop
adc
xor
fwait
pop
cwde
cmp
or
les
add
sahf
add
(bad)
jecxz
enter
(bad)
vmwrite
ffreep
and
mov
cmps
idiv
dec
int
gs
enter
ror
push
outs
jne
stos
repnz
call
push
cmp
and
mov
xor
addr16
repnz
ja
mov
mov
cli
mov
les
xchg
mov
dec
push
jl
stos
xchg
ret
sub
pop
fs
popf
bound
scas
adc
fs
out
jno
and
push
dec
stc
or
stos
mov
mov
je
enter
adc
test
ret
push
scas
pop
dec
xchg
cmps
inc
push
ret
sub
cld
push
scas
xchg
and
jecxz
sub
call
lock
(bad)
loopne
aaa
movs
and
loop
cmp
daa
adc
stos
daa
jp
xchg
stc
sub
push
les
add
(bad)
daa
movs
cmps
fcmovbe
loopne
mov
int
(bad)
xor
leave
repnz
repnz
jmp
pushf
fbld
xor
xor
cwde
sbb
fdivr
repz
test
and
sub
data16
es
pop
fldcw
xchg
cld
aaa
cdq
jp
and
or
imul
mov
hlt
push
pmaxub
cmp
inc
sub
sbb
xor
movs
and
cmp
xchg
scas
inc
add
and
int3
fimul
stos
pushf
lahf
xor
arpl
rol
mov
xchg
mov
pop
in
lock
shr
cmp
pop
(bad)
push
movs
ret
jecxz
xchg
in
push
ret
and
and
cmp
jp
test
mov
cli
xor
lea
xlat
add
sbb
dec
aaa
xlat
and
mov
push
inc
inc
push
cmp
push
mov
repnz
imul
ficomp
sub
xchg
jl
retf
js
cmp
sti
mov
fiadd
shl
xchg
push
or
xor
loop
dec
test
cmp
jb
lods
or
inc
push
aas
test
imul
aam
arpl
push
pop
jge
jl
inc
sbb
jns
rep
test
jo
adc
cli
and
ror
inc
or
cmp
jno
(bad)
jle
or
pop
arpl
push
push
push
jb
outs
cmc
mov
mov
sub
outs
push
cs
pop
push
pop
push
jae
jno
sub
das
lea
fs
shl
in
mov
adc
xor
(bad)
pop
cmp
sahf
push
(bad)
pop
cmp
dec
and
dec
add
fucomp
or
pop
std
sahf
sub
pop
push
stos
(bad)
mov
fld
xor
ror
cmps
mov
mov
push
jp
add
mov
sub
sbb
xor
add
mov
xlat
pop
xor
inc
dec
dec
stc
ret
ins
jbe
lock
dec
lods
stos
add
cmps
test
gs
repnz
pop
loope
ret
in
inc
lods
aas
sahf
cld
and
cmps
movs
ds
out
dec
sbb
xchg
dec
ss
pop
lahf
mov
mov
ss
lods
xchg
out
adc
pop
sub
cmp
in
pop
sbb
add
mov
mov
xchg
hlt
jae
test
enter
xchg
jmp
cmp
mov
push
xor
dec
aad
jns
addr16
inc
push
loop
push
popf
clc
(bad)
fidiv
loop
out
stc
dec
pop
aaa
push
mov
aaa
(bad)
jns
adc
jmp
pop
inc
xchg
fld
push
not
movs
shl
xor
cmp
inc
out
inc
push
scas
pushf
xor
jb
fwait
inc
adc
add
pusha
sbb
out
mov
or
cmp
mov
loope
xchg
jbe
push
xchg
neg
or
or
xchg
or
xor
sahf
dec
adc
sub
sbb
imul
(bad)
fistp
(bad)
dec
or
in
cs
mov
xchg
xchg
mul
jl
loop
jle
ret
push
adc
or
sub
or
in
cmp
test
pop
popa
ret
pop
adc
jle
fldenv
push
or
mov
fistp
fst
mov
pop
es
pop
mov
sbb
(bad)
pop
xchg
add
push
scas
jno
mov
sbb
cmps
fist
cmps
(bad)
or
inc
pop
inc
int
pop
sub
dec
push
test
jl
ficom
out
pop
outs
mov
or
mov
pop
add
sar
popa
les
dec
dec
cmp
cmp
ja
push
mov
jge
in
dec
mov
jno
mov
add
sahf
rol
push
sbb
sub
std
and
sbb
rcl
aam
pushf
sub
lock
push
enter
mov
add
stos
push
and
sub
sub
mov
xor
in
mov
xlat
test
pop
push
xchg
pop
jmp
adc
out
or
jge
ret
outs
ins
dec
xlat
les
lds
out
jns
and
sbb
dec
fdivr
mov
sub
sbb
aad
sub
pop
and
adc
adc
test
cmp
js
adc
icebp
call
xor
mov
add
xchg
lods
pop
scas
fimul
sar
pop
dec
fisubr
sahf
popa
pop
pop
cli
mov
dec
enter
in
push
(bad)
pop
mov
inc
fnsave
mul
mov
test
dec
xor
vmwrite
push
inc
jbe
push
mov
jmp
movs
jns
call
push
and
in
pop
pushf
mov
push
push
sbb
in
stos
pop
mov
xchg
fadd
xchg
xchg
push
xchg
sbb
call
inc
xchg
mov
mov
iret
xor
adc
jb
add
mov
inc
xchg
mov
ror
fwait
mov
pop
push
imul
clc
fadd
push
push
scas
mov
mov
sub
dec
sbb
cmps
pop
inc
sub
shl
ret
xchg
mov
je
sbb
repz
fild
and
jl
ds
ret
pop
cli
je
loopne
jg
push
lahf
(bad)
fcomp
and
mov
adc
xchg
jle
in
(bad)
mov
push
(bad)
sbb
sbb
not
jl
inc
jnp
xor
xchg
daa
jno
add
xchg
jmp
adc
inc
add
mov
push
(bad)
in
jecxz
in
mov
arpl
adc
add
sub
sub
xchg
mov
loopne
(bad)
adc
jmp
and
push
ja
pop
cmp
dec
jae
das
push
xor
mov
cmp
xor
cmp
clc
enter
xchg
inc
cli
or
pop
icebp
retf
stos
xchg
jecxz
mov
out
test
adc
jl
pushf
xlat
std
sub
(bad)
loope
inc
mov
lahf
fisttp
ins
sub
es
mov
rcr
push
in
or
lahf
(bad)
leave
popf
jne
icebp
loopne
(bad)
adc
test
shl
jecxz
mov
sbb
xor
cmp
jns
cld
pop
xor
outs
mov
sbb
and
jb
pop
xor
add
int
je
test
shl
push
mov
icebp
jl
cwde
pusha
aaa
sahf
scas
xor
(bad)
loope
push
adc
loop
gs
into
(bad)
sub
sbb
mov
jne
cmps
sbb
mov
or
out
xchg
js
scas
fsub
pop
test
mov
(bad)
into
gs
sub
mov
(bad)
fistp
xchg
cmp
mov
imul
and
fldz
in
outs
add
cwde
cli
fstp
fidivr
scas
pushf
adc
pop
or
icebp
inc
hlt
ja
add
xor
pop
pop
adc
shr
inc
js
ins
popa
loop
inc
jns
aaa
mov
sbb
jmp
jg
cmp
mov
(bad)
push
inc
adc
dec
mov
mov
jns
into
push
stos
mov
sub
jle
je
push
push
sbb
cmc
popa
addr16
or
push
jmp
mov
imul
jg
mov
movs
cs
int3
mov
cli
dec
out
inc
mov
push
bound
inc
(bad)
push
push
rol
sbb
jo
call
mov
xchg
mov
imul
stos
xor
mov
data16
imul
(bad)
loop
sbb
push
inc
gs
inc
inc
pop
push
into
mov
in
pop
call
inc
loope
ins
ret
add
inc
ror
inc
jbe
cmp
xchg
push
add
aaa
lock
cmp
jp
(bad)
lock
and
repz
inc
leave
adc
fnstsw
repz
rol
mov
retf
aaa
xchg
sbb
xchg
aas
icebp
shl
pop
mov
jo
icebp
cwde
cmp
mov
sub
clc
cmp
jmp
sahf
shl
sub
pop
mov
pop
adc
ret
mov
test
xor
adc
mov
js
jmp
mov
push
mov
cmp
sti
imul
les
outs
and
dec
loope
sbb
sbb
loope
sub
jnp
add
sbb
inc
push
pushf
jecxz
mov
stc
mov
and
aam
mov
aam
push
repz
add
xor
push
cmp
retf
icebp
add
push
leave
addr16
or
(bad)
aaa
add
add
adc
out
movs
mov
pop
dec
in
mov
adc
mov
push
(bad)
or
into
hlt
(bad)
adc
mov
fsubr
fdivrp
mov
rcr
retf
jo
add
dec
std
data16
je
mov
push
repz
or
out
fisub
add
push
test
mov
jmp
mov
shl
jo
push
dec
jnp
mov
and
and
cmp
iret
out
retf
mov
imul
xlat
dec
xor
(bad)
jmp
add
dec
mov
leave
adc
xlat
push
xchg
retf
pop
call
iret
add
mov
or
xor
test
int3
lea
add
jb
add
outs
inc
or
stos
(bad)
cmps
ret
and
push
cmps
adc
addr16
sar
fimul
scas
imul
or
ins
pop
mov
addr16
mov
inc
jne
or
inc
push
out
dec
lahf
pop
outs
or
xchg
add
jge
xchg
es
call
and
fcom
xchg
cdq
sbb
into
int
aaa
sbb
xor
mov
push
push
mov
fs
jmp
and
mov
xchg
mov
shl
dec
mov
inc
mov
mov
mov
mov
xchg
jb
ja
loopne
das
ins
mov
pop
xchg
push
or
sti
pop
and
repz
dec
push
sub
adc
(bad)
aas
and
xchg
push
cmp
cld
cmps
jnp
pop
aas
in
dec
pop
jns
mov
cmps
mov
or
repnz
dec
cmp
cs
mov
vpsubw
mov
pop
sar
movs
in
cmp
shl
xchg
xchg
and
ins
or
cmps
cmp
(bad)
leave
mov
pop
cmp
xor
scas
pop
cmp
mov
xchg
call
(bad)
pop
pop
mov
mov
inc
outs
aam
or
in
pop
std
gs
or
adc
jnp
test
mov
outs
cld
int3
adc
lea
imul
mov
je
lods
pop
shr
add
shl
or
mov
fiadd
inc
lds
push
push
fs
jnp
int3
jg
mov
mov
push
loopne
jnp
rcl
mov
sub
repnz
nop
add
jns
push
stc
cmp
mov
push
aaa
inc
daa
mov
pop
cwde
bound
cmp
in
mov
test
fwait
lea
xor
jno
sbb
lods
add
pusha
fstp
or
mov
add
mov
inc
stos
mov
repz
cwde
iret
or
int3
shr
sbb
sub
into
cmp
neg
jge
or
pop
out
cmc
dec
or
nop
or
mov
xchg
fstp
cld
push
dec
add
xchg
fdivrp
pop
int
icebp
icebp
mov
mov
xchg
fisub
jno
jmp
in
sbb
rol
push
or
mov
inc
je
mul
push
cli
mov
dec
ins
mov
(bad)
int
mov
jne
iret
loopne
push
(bad)
test
sbb
(bad)
pop
in
jb
pop
push
rcr
aaa
push
cmp
iret
push
inc
(bad)
jns
pop
test
push
ror
in
sub
ins
iret
retf
loopne
dec
push
mov
sbb
leave
cdq
retf
adc
das
fs
mov
lea
stos
xchg
ds
sar
popf
mov
outs
jo
test
ds
mov
scas
nop
push
imul
gs
push
mov
dec
inc
cmps
dec
lods
xor
xor
andps
jbe
in
sub
sbb
rol
lahf
jecxz
into
add
or
push
test
jno
cmp
or
adc
push
pop
call
out
scas
cmps
adc
or
dec
mov
sub
inc
or
(bad)
aad
sub
ror
sbb
iret
in
jecxz
movs
sti
inc
cli
and
sub
add
xchg
fs
pop
inc
xor
imul
xor
sub
adc
xchg
icebp
rol
dec
gs
mov
je
fidivr
call
and
out
mul
xor
mov
dec
dec
or
xchg
hlt
cmp
outs
mov
fwait
mov
movs
xchg
fsubr
jmp
push
loope
adc
mov
daa
movs
xchg
dec
lods
push
jmp
xlat
test
mov
adc
cli
cmp
fstp
push
adc
scas
sbb
or
dec
fcom
mov
and
mov
xor
push
xor
pop
sub
test
mov
push
adc
es
mov
icebp
or
mov
hlt
fmul
hlt
adc
gs
sub
fldl2e
and
pop
jo
cmp
mov
inc
repz
inc
xchg
in
pop
pushf
inc
loop
xchg
ret
mov
pushf
rcl
mov
inc
enter
mov
adc
add
jl
xor
nop
mov
xchg
mov
and
jmp
jmp
dec
jmp
sub
cmp
push
add
das
icebp
fdiv
or
mov
test
jge
or
popf
pusha
jns
mov
pop
inc
add
add
ret
out
pusha
or
enter
fbstp
and
push
sbb
cmp
or
stc
adc
shl
je
sahf
push
xchg
mov
mov
xchg
mov
es
jmp
push
daa
in
test
jno
push
xchg
jg
sbb
and
mov
dec
aaa
sete
cmp
jbe
sub
inc
xchg
hlt
pop
and
in
adc
mov
inc
enter
xor
bound
and
std
idiv
dec
jo
frstor
cmp
push
sbb
das
scas
or
gs
adc
out
mov
out
sub
mov
sub
adc
mov
int
test
or
clc
iret
sbb
daa
push
sahf
sbb
push
cmp
pop
ds
fnstenv
mov
loopne
retf
lods
call
stc
mov
dec
sbb
jmp
jbe
xchg
and
in
jmp
xor
adc
mov
push
repz
push
clc
dec
stc
add
ret
add
ins
in
je
ficomp
(bad)
and
outs
es
repz
fst
cli
add
jae
std
in
repz
cwde
add
jo
fbld
scas
pop
jb
dec
mov
dec
movs
cmp
pop
sbb
sub
push
mov
cs
inc
cmp
mul
cs
mov
inc
fadd
out
imul
rol
gs
sti
jmp
jecxz
mov
(bad)
div
test
xchg
test
mov
sub
add
adc
aam
lock
and
push
jg
cmps
fnstcw
or
jno
pop
cwde
cmp
or
mov
je
test
test
pusha
and
sbb
dec
cs
mov
dec
imul
inc
inc
xor
mov
jp
xor
sbb
inc
in
inc
pop
dec
loopne
mov
fsub
sti
xlat
cmc
int3
mov
sub
inc
push
mov
push
fcom
cld
fmul
js
repz
xor
jmp
(bad)
or
fimul
out
jb
mov
lock
adc
fsub
imul
fcom
xor
inc
out
mov
inc
sub
addr16
lods
inc
pop
xor
cs
int3
xlat
add
jmp
ds
mov
cmp
test
fsubr
daa
jl
push
inc
pusha
sbb
fadd
pop
lods
fdivr
adc
mov
stos
in
dec
ja
mov
sbb
clc
int3
popa
fwait
mov
add
xchg
cs
fist
mov
ins
fldpi
addr16
outs
test
ss
hlt
aas
sahf
jecxz
(bad)
mul
(bad)
(bad)
test
or
pushf
xor
pusha
cmp
mov
adc
in
pop
xlat
imul
sar
in
mul
cmps
pop
loope
mov
imul
push
hlt
mov
into
(bad)
out
stc
pop
sti
push
mov
pop
sbb
and
enter
xchg
jecxz
jnp
jnp
mov
ficomp
adc
or
xchg
inc
ret
icebp
ins
xor
adc
lahf
imul
(bad)
(bad)
std
bnd
ja
out
stos
cld
sbb
fcomip
(bad)
jns
sysenter
jecxz
shl
sbb
mov
pop
clc
inc
push
stos
jo
sub
adc
adc
aas
stos
adc
inc
push
inc
lods
adc
call
int
pop
int
pop
ret
push
rcr
sahf
iret
add
add
push
test
retf
imul
mov
mov
nop
push
add
dec
out
or
jmp
cmps
out
mov
sbb
loope
pop
or
(bad)
mov
mov
mov
push
popa
xor
jbe
cmp
xchg
mov
pop
test
or
add
(bad)
ror
cmp
add
sub
ror
es
push
adc
mov
out
stos
fwait
mov
jno
add
pop
dec
mov
sub
in
cmc
sti
sub
cld
ja
push
das
push
aas
arpl
jae
push
ret
inc
pusha
call
dec
xchg
movs
pop
fldz
rdmsr
and
ja
pause
dec
faddp
adc
push
xlat
aam
cwde
nop
sub
jg
mov
in
sub
out
mov
and
xchg
inc
xor
xchg
dec
mov
xor
int
ficom
fcmovne
dec
and
jbe
(bad)
stos
and
sub
mov
lods
mov
pusha
cmp
fs
psubq
movs
sar
std
inc
adc
xchg
push
jmp
dec
xor
dec
fisttp
ret
movs
xchg
add
fdivr
or
out
and
addr16
add
bound
imul
ins
add
sbb
adc
bnd
aad
mov
or
daa
mov
adc
sub
xchg
xor
mov
mov
scas
test
and
jg
out
js
addr16
test
scas
sub
ret
fisttp
mov
dec
lds
(bad)
call
in
popa
std
retf
lahf
shl
mov
mov
xor
out
in
out
icebp
jp
mov
ds
mov
vpaddusb
pop
or
cwde
in
pop
icebp
adc
inc
out
add
jo
pop
xchg
lods
cdq
push
fwait
outs
dec
pop
xchg
jmp
inc
push
mov
je
add
aam
mov
jbe
dec
push
jge
in
cwde
lods
sub
outs
lahf
or
push
in
sbb
mov
xchg
scas
push
and
je
in
jmp
test
push
movs
mov
es
imul
lahf
mov
cld
loop
cmp
pushf
xchg
pushf
jbe
loope
and
(bad)
xor
and
lock
mov
dec
push
mov
mov
je
in
or
lods
es
push
cmps
lds
or
ins
or
mov
in
mov
sahf
mov
mov
cmp
call
add
pop
fld
jecxz
jg
fidiv
sbb
stos
fisttp
push
jno
test
cwde
dec
mov
xchg
aam
loop
pop
stos
outs
sbb
push
xchg
mov
aad
jp
jo
pop
es
int
out
inc
fcomip
cmp
xchg
fiadd
jo
fstp
outs
dec
xchg
int3
add
lock
xchg
sahf
inc
(bad)
movs
adc
jecxz
jmp
test
push
push
jg
xchg
ror
shl
(bad)
dec
data16
inc
jb
lock
xor
retf
or
dec
dec
lahf
push
ins
pop
push
lea
arpl
push
cld
push
jg
les
shr
dec
mov
mov
out
jecxz
fwait
loopne
(bad)
dec
xchg
and
cmps
xchg
adc
(bad)
les
pop
and
js
js
jmp
clc
fwait
fwait
sub
sbb
popa
lods
hlt
sbb
xor
jecxz
test
pop
stos
mov
jmp
fcom
push
mov
pop
push
repz
jne
xchg
and
mov
cmp
outs
call
(bad)
jae
xor
popa
std
mov
test
sbb
scas
mov
pop
mov
cld
movs
and
int
jbe
mov
shl
adc
(bad)
repz
mov
test
mov
mov
scas
jae
ror
movs
sub
jae
and
sbb
inc
fstp
outs
hlt
stos
mov
inc
sti
jmp
imul
call
ins
clc
scas
jp
push
sbb
ret
test
adc
and
stos
mov
push
addr16
mov
fld
pop
sbb
and
int
outs
fs
push
imul
shl
pop
mov
jns
dec
xchg
outs
inc
jb
jne
xchg
adc
movs
sar
mov
ins
iret
xchg
xchg
popa
call
adc
mov
jns
ins
xor
fs
test
pop
or
mov
jno
mov
push
mov
cld
sbb
pop
and
fs
mov
jg
push
cld
ficomp
das
jge
sbb
and
cmc
sbb
push
imul
movs
xchg
mov
mov
pcmpeqw
leave
jl
repz
cdq
jo
dec
xchg
cwde
sbb
js
push
mov
pop
jmp
adc
adc
sbb
or
lock
pop
mov
cmp
jle
out
mov
arpl
mov
fisttp
lahf
mov
mov
mov
mov
(bad)
movs
jae
ss
jne
push
(bad)
jp
cmp
push
jmp
adc
ror
mov
rcl
mov
mov
or
inc
ins
xchg
pop
push
shl
mov
test
adc
inc
cmp
daa
dec
retf
push
dec
pop
pop
aas
cmp
sar
pminsw
push
add
jno
adc
jne
cdq
movs
dec
lahf
fmul
ins
jecxz
sbb
jno
sbb
push
nop
fwait
and
es
inc
cmps
(bad)
in
inc
scas
(bad)
loop
rcl
test
push
lock
jno
xchg
pop
xor
fcom
mov
nop
jp
aam
xor
retf
jae
ficomp
sbb
mov
nop
pop
xor
sub
jecxz
fmul
mov
ss
sbb
lds
fst
leave
mov
(bad)
mov
mov
mov
jnp
out
inc
jo
cmps
cmovo
cld
test
mov
fdivr
rcl
or
mov
fistp
xchg
shr
mov
cld
mov
mov
mov
outs
ret
sbb
or
out
cmp
and
in
daa
add
movs
and
jns
dec
dec
(bad)
addr16
jbe
or
dec
push
mov
push
ret
push
add
sub
jmp
ror
outs
or
push
inc
in
xlat
jb
push
rcr
mov
push
ret
out
dec
loop
inc
push
inc
jae
or
ficomp
retf
and
xor
pop
or
push
mov
cmc
inc
fs
mov
push
ja
jnp
inc
pop
and
sahf
mov
test
jo
xor
mov
inc
outs
pusha
gs
dec
jmp
dec
mov
repnz
inc
inc
pop
sbb
in
xchg
mov
in
sbb
jbe
xchg
push
popf
rep
cld
xchg
sbb
pop
popa
inc
sub
push
sub
dec
enter
and
call
cmps
lea
in
ins
sahf
lods
add
pop
mov
shr
xchg
int
loop
fwait
inc
je
nop
aam
dec
or
adc
adc
ss
or
repz
cld
inc
stos
add
ret
or
jb
cmp
xor
nop
jecxz
xor
mov
lds
(bad)
out
sub
pushf
int3
dec
sub
popa
xchg
int
mov
adc
outs
stos
cmp
add
mov
arpl
retf
mov
(bad)
and
or
jo
mov
and
js
inc
and
cwde
imul
mov
das
and
sub
inc
mov
pop
mov
cdq
call
pop
cdq
push
cmp
setae
inc
sub
fs
adc
xor
push
dec
(bad)
ja
test
into
xor
xor
sub
bound
cmp
sub
jge
imul
(bad)
sub
and
bound
jecxz
mov
mov
fs
jecxz
adc
loopne
sub
xor
adc
and
repnz
push
aam
call
mov
test
cmp
pop
mov
pop
aad
add
mov
les
jge
test
push
loope
js
enter
das
inc
xchg
or
aas
pop
jno
cmp
cmp
xor
arpl
or
not
test
dec
ins
movs
inc
or
jle
mov
popf
fistp
psrlq
sub
add
jecxz
and
(bad)
adc
mov
jmp
sub
mov
pop
stc
cmps
test
fdiv
and
and
ss
nop
pop
mov
js
adc
jg
or
out
das
stc
mov
enter
sub
lea
cmp
mov
sbb
or
out
mov
fist
mov
leave
dec
test
adc
aas
(bad)
push
stc
mov
repnz
adc
jno
aaa
bound
cmp
outs
sub
xchg
aam
call
test
mov
push
and
adc
dec
cwde
mov
jle
lea
xchg
dec
mov
xor
pusha
pcmpgtw
pop
test
(bad)
out
jp
sahf
fwait
cmc
stos
js
loope
jb
xor
movs
pop
call
adc
fcmovne
enter
inc
and
or
or
push
add
inc
mov
pop
les
cwde
fnstsw
jne
mov
mov
repz
add
imul
rol
imul
inc
std
jae
retf
sbb
jl
pop
mov
(bad)
loopne
call
loop
push
jae
and
add
pop
call
push
(bad)
ret
fcmovne
fstp
dec
add
add
shl
mov
inc
push
mov
xor
ror
push
push
jg
lea
xor
std
push
xchg
fnstenv
sbb
mov
mov
mov
xchg
loop
mov
xchg
out
or
push
imul
adc
ss
fndisi(8087
jp
dec
jmp
or
inc
sti
call
push
push
mov
fcmovu
clc
cdq
lds
int
xlat
pop
cld
pop
pop
sbb
inc
mov
sub
(bad)
cdq
repz
dec
sbb
inc
mov
xor
fild
mov
out
inc
sbb
sub
addr16
cmp
jge
aaa
cs
xchg
(bad)
cdq
sub
fdivr
inc
fdiv
push
cmp
xchg
retf
or
cmps
pop
adc
dec
call
mov
cwde
sub
aam
aaa
mov
mov
xor
cmp
sub
add
mov
enter
clc
in
push
arpl
inc
nop
mov
bnd
add
es
ror
loopne
(bad)
push
xchg
add
or
xchg
pop
mov
push
jb
sbb
pop
retf
cs
add
and
inc
jb
iret
daa
sbb
and
loopne
test
mov
push
dec
add
xor
js
pop
in
cmc
mov
mov
pop
out
push
retf
adc
test
pop
(bad)
leave
call
add
jae
ror
cmp
sbb
dec
out
call
pop
in
test
cmp
push
jb
or
(bad)
mov
scas
sti
pop
test
cmp
faddp
cmp
or
sti
jp
inc
cmp
out
lods
adc
(bad)
repz
shr
pop
loope
loopne
sahf
mov
adc
and
xchg
lods
mov
das
xchg
mov
fisttp
aas
jp
xchg
not
jmp
ds
cmp
dec
daa
push
pop
xor
popa
and
push
jp
loope
mov
dec
pusha
add
add
inc
cmp
stc
fisub
sub
icebp
sbb
ror
popa
push
mov
pop
ds
int
stos
push
jnp
mov
inc
pop
mov
xor
cdq
ja
xchg
xchg
test
sbb
pop
inc
and
xlat
sbb
mov
arpl
loop
jge
push
jb
jmp
daa
jp
xchg
cs
fadd
dec
sbb
sbb
pop
cmp
xchg
fld
rcl
or
ret
mov
push
aas
sbb
je
and
mov
stos
fdivr
mov
movs
inc
or
and
and
sbb
lods
fwait
jmp
adc
sbb
mov
xchg
mov
(bad)
push
aaa
sti
or
sub
lods
push
or
xor
jge
pusha
or
add
nop
std
cld
pop
in
test
adc
scas
push
arpl
lods
pop
(bad)
fisttp
jns
movs
add
imul
push
int
inc
pop
or
fdivp
imul
xchg
std
mov
jp
push
push
and
icebp
cwde
cli
sub
cmps
push
add
(bad)
sbb
xor
iret
dec
lahf
pop
iret
aam
repnz
mov
mov
call
push
les
imul
shr
adc
and
sbb
sbb
jmp
nop
cmp
push
movsx
test
adc
rcr
xlat
add
sbb
mov
hlt
or
or
out
add
jge
xor
scas
arpl
or
jge
cli
ret
adc
jno
sub
rcr
stc
(bad)
ror
xchg
jmp
add
adc
mov
push
inc
dec
aaa
pop
or
imul
rcr
mov
in
les
push
repz
arpl
test
push
pop
shl
in
pushf
push
sti
lea
pop
dec
ficom
xor
dec
mov
add
mov
push
adc
and
mov
fcom
dec
sub
shl
sub
xchg
xchg
jle
pop
or
xor
cmp
adc
push
icebp
cdq
rcr
adc
add
inc
inc
clc
ins
out
lea
xchg
add
fldcw
and
lods
fimul
stos
in
and
ja
jne
bound
test
sahf
sbb
stc
shl
inc
enter
ror
out
out
push
xor
xor
inc
cld
ins
sbb
mov
bound
outs
shr
inc
stc
cmp
mov
adc
push
rol
das
aas
push
call
xchg
mov
mov
or
(bad)
gs
sbb
and
mov
xor
lods
adc
test
push
adc
mov
add
cmp
scas
addr16
sti
adc
retf
mov
add
test
inc
and
pop
xchg
enter
(bad)
es
pop
pop
sbb
arpl
cli
js
add
je
cs
add
cmp
adc
sbb
dec
arpl
jmp
jbe
pop
fld
aas
outs
push
inc
pop
dec
mov
adc
test
xor
adc
add
jnp
cmp
int3
enter
test
adc
fild
xchg
sbb
xor
sub
adc
dec
jne
jg
cmp
repz
sub
rcr
lock
and
nop
xor
cmp
stos
adc
stos
sub
sbb
dec
mov
call
push
inc
add
scas
js
mov
inc
xchg
fstp
fdivr
pop
jmp
mov
pop
pop
shl
rol
jo
ret
jmp
sub
mov
push
jle
adc
paddusb
ins
jmp
sahf
ret
in
pop
push
hlt
aas
jns
push
ds
mov
es
adc
xchg
out
bound
inc
push
pop
fsubr
push
(bad)
cmps
rol
dec
cmp
sub
clc
adc
and
dec
sub
add
(bad)
push
test
repz
jb
push
daa
and
dec
mov
fwait
lds
mov
jge
sti
pusha
or
mov
ja
lock
jno
in
mov
cdq
leave
mov
loope
cmovne
inc
js
pop
dec
jo
repnz
dec
iret
adc
fbld
pop
mov
sub
xor
xor
das
xchg
sbb
jae
xchg
jbe
xchg
lods
inc
push
ret
pop
(bad)
(bad)
mov
mov
loope
pop
test
mov
in
int
or
mov
mov
mov
mov
rcr
and
pop
inc
pop
jae
jmp
jg
mov
out
lar
repz
xor
repz
scas
mov
pop
mov
sbb
mov
not
dec
sub
test
sbb
pop
scas
mov
mov
mov
jne
dec
mov
push
in
movs
daa
cld
rcl
jb
jmp
xor
lock
jg
adc
dec
dec
and
mov
dec
popf
and
add
call
cmc
push
stos
pop
fisttp
imul
push
inc
push
hlt
pop
xchg
cmp
sahf
stos
add
sbb
mov
cmp
jnp
push
mov
dec
cmp
jae
mov
jmp
out
xlat
inc
in
sub
fsub
popf
cmps
pushf
jbe
cli
xor
fwait
pop
xor
or
out
mov
cmp
push
scas
push
xor
repnz
jle
push
ins
(bad)
neg
adc
dec
int3
bound
or
adc
xchg
pop
xor
arpl
and
in
mov
mov
loope
scas
retf
sub
jle
pop
mov
add
push
pop
add
cdq
xor
or
and
adc
rcl
mov
int3
iret
imul
jo
mov
scas
dec
xor
gs
pop
jecxz
mov
push
mov
aad
(bad)
iret
aas
clc
ins
push
call
xor
bound
retf
js
or
dec
or
mov
jge
jle
enter
xchg
sbb
mov
mov
(bad)
int
nop
popa
pop
and
jg
lds
sub
cmp
mov
jg
dec
xor
and
(bad)
fwait
loope
jp
mov
pop
ret
cmc
pop
pusha
fistp
push
stos
mov
retf
xor
cmps
jbe
lods
mov
add
lahf
pop
jo
cmovae
or
lock
mov
push
mov
add
jno
push
mov
dec
or
call
fidiv
sbb
fnsave
std
jp
inc
ins
push
mov
sti
stc
dec
data16
sti
mov
mov
xor
pop
test
sub
push
mov
mov
es
sub
jo
or
xor
and
add
mov
rcr
jg
rol
pop
mov
mov
ja
sbb
push
les
jp
push
push
ins
fwait
cld
sub
loopne
or
xchg
fiadd
jb
sub
mov
in
movs
or
add
(bad)
lock
aaa
cmp
ret
jae
cmps
dec
fst
sbb
xor
mov
mov
or
(bad)
push
lock
cmp
or
jb
push
pop
out
das
add
add
aas
pop
xlat
mov
jmp
test
out
adc
daa
push
ins
repnz
mov
ss
aaa
xor
and
aad
scas
fsubr
icebp
pop
xor
add
mul
(bad)
jns
xchg
std
push
outs
(bad)
sbb
xor
inc
push
mov
test
aaa
nop
int3
inc
dec
pop
and
xor
rsm
clc
mov
sub
ins
pop
pushf
dec
loope
or
add
xchg
xor
sub
ficomp
inc
cmc
push
cmp
jnp
sub
xchg
mov
stos
outs
or
xlat
cmovle
and
jmp
fnstcw
jne
pop
jno
dec
jno
xchg
mov
pushf
mov
adc
pop
mov
xchg
ja
xor
mov
imul
jno
hlt
mov
aad
mov
repnz
inc
in
imul
std
pop
mov
push
adc
mov
jnp
fistp
and
cmp
jl
(bad)
inc
fincstp
aaa
jecxz
mov
add
(bad)
and
fwait
jbe
ja
lds
sub
cmc
jp
inc
push
push
adc
mov
mov
sti
sub
(bad)
jmp
ins
inc
cld
and
out
and
inc
xchg
and
inc
daa
loope
lds
in
xchg
mov
sub
fdivrp
jbe
adc
bound
fld
lods
test
jmp
ss
mov
push
pop
mov
ins
mov
pop
(bad)
dec
jmp
sti
loope
ss
out
pop
out
aas
call
dec
sti
jg
fnstcw
mov
repnz
in
movs
pop
pop
popa
test
inc
fwait
xchg
inc
or
cdq
fistp
ret
data16
test
cld
test
movs
jnp
xor
retf
popf
ja
js
sub
cmp
mov
(bad)
jmp
retf
add
dec
dec
sbb
sbb
jnp
dec
mov
sbb
or
adc
mov
sbb
and
movs
xor
imul
retf
jecxz
push
jo
or
push
lock
jnp
sub
xchg
xchg
pop
adc
pop
add
imul
mov
push
mov
jp
js
cwde
xlat
movs
pop
and
out
and
jmp
push
sar
push
inc
(bad)
push
jp
and
or
add
std
cwde
mov
ret
dec
mov
aam
xchg
mov
fwait
or
aam
push
or
mov
xchg
aas
xlat
pop
test
pop
jmp
xlat
dec
inc
loop
pop
add
in
(bad)
mov
or
or
popa
fist
(bad)
sti
sub
add
mov
enter
push
jmp
loop
aam
mov
call
cmp
adc
adc
pop
and
jecxz
add
out
popf
xor
daa
lods
test
mov
cmp
push
lds
sbb
and
mov
test
out
jnp
pop
jo
retf
xor
clc
bound
pop
ds
push
loop
mov
aas
or
jno
mov
loope
sub
sub
mov
jnp
mov
mov
cmp
(bad)
ficom
imul
ret
add
adc
mov
in
sbb
daa
in
sbb
repz
and
hlt
es
lock
sub
and
jnp
ror
cmp
popa
ror
mov
mov
into
pushf
jo
ss
jmp
sub
jg
jmp
out
mov
push
dec
pop
test
out
jl
jle
in
aad
jbe
sub
or
mov
shl
repz
sbb
cld
jge
dec
push
or
lods
mov
and
nop
ins
enter
fisttp
inc
icebp
imul
mov
in
es
les
shr
mov
push
and
shr
data16
xor
call
jle
add
xchg
ret
mov
dec
jmp
mov
inc
mov
push
xchg
xor
sub
aad
jg
jno
in
js
and
lods
daa
and
enter
call
sbb
scas
adc
loopne
stos
lea
dec
inc
push
mov
adc
sbb
ds
mov
sub
push
jns
xchg
je
popa
call
pop
js
pop
jge
loope
and
xchg
push
mov
push
mov
xchg
cli
push
cs
popf
dec
loop
outs
push
cmp
cli
push
xchg
adc
pop
loop
mov
cmp
leave
es
cld
hlt
stos
pop
mov
xor
mov
pop
rol
ror
call
sar
loope
mov
cmps
mov
cwde
jmp
add
mov
xchg
add
mov
pop
movs
or
push
rcl
test
outs
xor
or
idiv
enter
push
in
hlt
cmp
je
mov
xlat
shl
std
sub
ja
dec
mov
shl
cmp
and
jo
or
inc
jo
pop
cmp
add
sub
retw
push
push
pop
cmp
push
push
pop
shr
push
sbb
push
mov
sbb
push
ins
popa
or
push
lahf
cmps
mov
pop
sbb
cmp
pushf
add
aas
pusha
std
test
stos
mov
or
add
popa
out
mov
sbb
pushf
out
push
add
xchg
in
adc
sbb
pop
sbb
jnp
test
add
pop
pop
sbb
out
(bad)
fwait
not
rcl
(bad)
sbb
std
out
iret
js
adc
inc
adc
loopne
rcr
mov
loopne
gs
fnstenv
daa
retf
in
pop
pop
sub
cmp
nop
out
mov
je
xchg
lods
mov
sbb
jmp
xchg
(bad)
out
in
mov
jmp
mov
xchg
add
mov
sar
push
ins
and
or
cwde
out
ret
mov
inc
fisub
(bad)
fld
inc
mul
lods
push
pop
push
out
mov
mov
in
push
pushf
sahf
mov
adc
xchg
ins
pusha
ins
push
sub
jmp
push
dec
test
out
add
sub
(bad)
ss
je
jg
arpl
sbb
int
pop
fisubr
ss
dec
and
mov
adc
mov
add
xor
call
adc
xchg
scas
xor
jmp
cdq
in
je
and
arpl
cmp
jno
inc
aad
add
pushf
mov
test
shl
clc
add
sahf
push
mov
xor
sbb
pop
daa
test
xchg
and
inc
in
jno
enter
sti
pop
or
add
inc
adc
push
leave
stos
pop
or
adc
mov
xchg
aam
mov
(bad)
fidiv
inc
pop
or
jae
daa
je
test
cmp
xor
les
lea
retf
pop
sub
jmp
arpl
or
in
jns
shr
push
push
daa
mov
ror
imul
sbb
fs
call
call
nop
test
xor
xchg
xchg
loop
(bad)
retf
mov
pop
lods
aam
sub
(bad)
(bad)
adc
pop
clc
add
push
popf
push
xor
daa
sbb
push
out
mov
shl
test
pop
rcr
mov
mov
inc
jl
fstp
inc
lds
mov
jle
and
xor
or
sub
or
(bad)
xchg
cmp
cdq
ror
add
(bad)
jmp
push
xchg
sbb
mov
nop
test
arpl
cs
sub
ret
test
retf
sub
push
cli
enter
fwait
pop
sbb
in
sbb
dec
ins
mov
shl
pop
out
pop
in
xor
xlat
cmp
stos
imul
in
div
sub
or
fldl2e
das
adc
out
cmps
adc
mov
(bad)
mov
and
or
pop
add
xchg
dec
sub
inc
gs
pusha
int3
push
xchg
push
lods
fisub
and
dec
jp
jecxz
jne
mov
dec
popa
inc
sbb
push
xchg
inc
push
movs
lea
mov
imul
arpl
and
call
push
cmps
sbb
mov
fsub
iret
mov
shl
lods
sub
cmp
mov
mov
jp
adc
(bad)
aas
adc
dec
out
bnd
xchg
cmp
test
into
xchg
cdq
push
ins
mov
mov
stc
mov
add
mov
or
jmp
pop
pusha
movs
mov
dec
pop
popa
add
test
or
cwde
cmp
mov
and
sbb
ficom
xchg
pop
mov
or
sub
mov
out
into
mov
xchg
int3
adc
jnp
cdq
add
arpl
inc
div
fild
jg
stos
adc
loop
out
mov
mov
mov
inc
push
sub
outs
mov
fs
or
xchg
mov
pushf
ror
mov
inc
xor
das
mov
cmps
and
repnz
xor
push
and
scas
sbb
xchg
sub
cs
lea
je
xor
movs
cmp
aad
or
inc
mov
add
ret
or
(bad)
loop
lods
cs
lods
sahf
jl
icebp
in
xchg
loop
xchg
(bad)
std
fstp
or
jmp
jge
pop
ins
inc
xchg
xor
popa
retf
dec
fisub
cmc
imul
cwde
cmp
retf
or
or
(bad)
in
cmp
fadd
and
sub
xlat
stc
push
outs
dec
(bad)
aam
ss
in
dec
sbb
shl
hlt
pop
scas
and
aad
(bad)
aam
and
pop
mov
sub
add
mov
push
fadd
pusha
inc
inc
es
aas
pop
in
(bad)
pop
jae
loop
popf
stc
data16
sbb
out
push
inc
pop
fdiv
js
jne
pop
daa
inc
call
aad
aam
cmp
mov
loopne
repz
lea
(bad)
lock
mov
sub
or
ins
int
sahf
(bad)
push
sbb
jge
jbe
enter
add
and
stc
ss
sbb
inc
fcomp
das
out
jecxz
push
popf
cmc
mov
mov
dec
out
sbb
add
out
nop
lock
jns
push
cmp
mov
or
aaa
outs
and
loop
inc
add
cmp
retf
inc
pop
push
icebp
sbb
jg
push
adc
mov
mov
add
push
nop
inc
enter
mov
or
xchg
dec
mov
dec
cmp
xchg
stos
fs
pop
mov
jge
cdq
dec
dec
adc
adc
rcl
(bad)
sub
or
inc
mov
addr16
pop
imul
xchg
inc
push
out
xor
imul
cld
add
or
mov
sub
cwde
imul
test
(bad)
(bad)
and
mov
adc
mov
fsub
ficomp
bound
sti
leave
aas
xor
dec
cmp
inc
pop
push
mov
pop
js
push
push
jg
cmp
fwait
sbb
je
jae
and
xchg
pop
popf
mov
retf
jge
rol
or
call
out
jmp
iret
or
cmp
cld
jl
in
dec
iret
lds
cli
aad
rol
mov
hlt
outs
add
mov
sbb
loope
lea
pop
jge
push
mov
add
xchg
imul
mov
sar
and
add
pop
cmps
cmp
(bad)
aam
in
add
out
mov
jp
rcr
add
test
sbb
aas
ss
nop
or
das
inc
sbb
pop
mov
or
add
xchg
sbb
lods
into
inc
aaa
push
inc
imul
dec
xchg
mov
push
xchg
xor
xor
in
mov
jne
push
clc
dec
mov
out
pop
loop
and
loope
cmps
mov
into
adc
cmp
cs
inc
pop
ja
push
adc
int3
jo
inc
dec
fwait
xor
cmp
mov
jge
jl
sub
mov
sub
xor
mov
scas
out
cmc
pop
cli
adc
hlt
sub
in
mov
jae
fwait
inc
sbb
jle
dec
inc
xchg
in
out
fidivr
ret
xor
in
and
fld
jl
pop
push
(bad)
pusha
push
iret
stos
jnp
push
or
xchg
test
mov
je
cmp
cmps
lds
and
mov
scas
lock
adc
mov
xchg
adc
(bad)
lods
dec
rol
rol
xor
data16
and
ret
mov
pop
jl
imul
dec
addr16
pop
sbb
loop
pop
cmp
lods
sub
data16
in
cvtpi2ps
addr16
cmp
cmc
dec
inc
cdq
pop
call
jns
in
add
scas
pand
xlat
mov
fidiv
and
mov
(bad)
mov
and
mov
or
fdiv
jmp
jo
adc
and
out
pop
shl
pop
jo
test
inc
adc
scas
mov
fcmovnbe
sbb
aam
and
or
jnp
shr
pop
aam
(bad)
pop
in
in
sub
pop
imul
and
mov
out
call
mov
xchg
ja
adc
clc
xchg
adc
push
or
adc
jecxz
hlt
fwait
xor
jecxz
xchg
and
and
add
mov
stc
repnz
daa
psrlw
dec
xchg
sub
inc
fst
add
jne
jnp
cli
pop
mov
jns
add
cli
xchg
adc
adc
dec
push
aad
fst
call
or
fnstsw
mov
adc
xor
pop
ficom
mov
dec
es
imul
cmp
stos
lods
les
push
out
push
cld
test
out
push
mov
or
mov
jmp
(bad)
cmp
dec
pushf
xchg
out
or
lea
cmps
and
punpckhwd
iret
gs
rcr
mov
out
outs
lods
test
mov
in
cmp
mov
mov
pushf
cmp
in
clc
ins
pop
and
pop
mov
mov
xor
ffree
ds
mov
xchg
fwait
dec
mov
push
gs
loopne
(bad)
cmp
test
cmp
jp
pushf
dec
pusha
xor
jbe
cmp
push
ss
rcl
fsub
jmp
inc
or
xchg
cmp
add
cmps
sbb
pop
mov
jg
leave
retf
gs
(bad)
ss
push
dec
retf
and
pop
dec
mov
inc
jns
xchg
xchg
dec
data16
adc
pop
xchg
or
push
mov
add
jge
fistp
in
dec
cs
jle
jg
(bad)
js
sar
retf
jge
cli
jge
jmp
inc
fldcw
adc
mov
aad
jle
push
mov
jmp
out
in
jge
mov
popf
loope
aam
aam
pop
outs
inc
jne
sub
pop
dec
in
mov
xor
fdivrp
mov
pop
mov
(bad)
loope
mov
in
xchg
xor
nop
mov
cmp
sbb
movs
adc
lds
cmps
dec
and
out
outs
sbb
sbb
xchg
sbb
and
dec
imul
cli
sub
leave
fist
add
mov
mov
pop
shr
out
jns
sbb
fwait
icebp
inc
call
adc
push
sar
or
pushf
add
push
cmps
enter
push
in
cvtps2pi
loopne
(bad)
(bad)
js
les
cmp
mov
mov
es
xchg
icebp
repz
nop
push
jne
idiv
add
pop
clc
or
test
call
pop
enter
rcl
sub
pop
mov
movs
aam
retfw
jmp
or
cmp
test
xchg
clc
aas
scas
fwait
int3
push
mov
daa
dec
imul
fisttp
xchg
mov
fdiv
cdq
jbe
mov
sbb
ltr
pop
jne
xchg
cmp
adc
shl
push
push
mov
adc
push
retf
int3
aas
cmp
adc
inc
mov
or
mov
adc
push
inc
push
movlps
pop
repnz
pusha
jae
mov
mov
fld
in
pop
sbb
adc
lods
out
jb
setl
test
(bad)
sti
ficomp
cld
les
mov
add
add
inc
push
jno
push
out
dec
inc
pop
push
imul
sbb
xchg
mov
das
sbb
cdq
pushf
mov
clc
push
pop
mov
adc
xchg
sbb
xor
push
cmps
sub
shr
push
lahf
int
sub
xchg
loopne
mov
jno
and
addr16
mov
hlt
mov
(bad)
jb
or
mov
and
js
cdq
and
inc
ins
(bad)
sub
pop
call
mov
aaa
jge
jae
mov
cdq
pushf
imul
jge
mov
rcr
sahf
pop
leave
xor
add
ret
pop
push
adc
(bad)
cmc
clc
les
mov
push
mov
inc
xchg
pop
cli
add
hlt
(bad)
ficom
stos
loope
mov
jmp
xchg
ins
or
int
dec
push
sub
scas
mov
sar
sbb
and
shl
loop
add
cmp
lock
push
mov
clc
inc
out
test
or
test
dec
repz
ja
inc
add
push
push
inc
shl
jae
inc
aas
xchg
inc
popf
push
fsubp
(bad)
out
mov
cwde
cmp
jne
(bad)
jg
push
xor
inc
outs
stos
stc
and
push
add
ss
int3
lahf
shr
gs
outs
retf
and
xchg
ret
adc
cmp
mov
mov
mov
jae
jl
pop
dec
mov
xabort
cmps
mov
mov
loope
push
push
push
loop
or
cmps
dec
shl
inc
hlt
call
mov
lock
movs
cld
je
dec
fnstsw
aam
fdivr
dec
cmp
adc
cli
loope
add
dec
sbb
dec
and
dec
add
(bad)
mov
ds
and
loop
fwait
mov
jl
ins
ret
mov
add
mov
ins
or
push
rol
or
outs
or
mov
pop
test
int
icebp
rol
stos
cmp
test
fsub
out
imul
sub
stc
mov
mov
and
mov
sti
xrelease
push
inc
cld
pushf
cmp
pop
push
dec
fisttp
fwait
repnz
loop
lea
nop
and
inc
xor
data16
cld
add
stos
jmp
mov
mov
push
ror
xor
pop
into
cmp
cmp
out
inc
jbe
pop
dec
fist
xchg
adc
inc
or
idiv
(bad)
cmp
mov
loop
or
arpl
sbb
push
push
imul
lods
pop
inc
push
or
cmp
neg
xchg
sub
fdiv
mov
cmp
bound
mov
mov
aas
jle
out
push
pop
push
mov
scas
pop
(bad)
cmp
fbstp
and
lock
call
(bad)
pop
adc
mov
sbb
iret
fldcw
mov
cmp
pop
fs
(bad)
inc
and
and
cmps
mov
(bad)
sti
pop
pop
(bad)
push
lahf
cmp
and
add
push
movs
jnp
ds
ror
cmp
pop
or
mov
ffreep
fdivr
mul
add
in
xor
adc
test
push
mov
xchg
lahf
ja
dec
or
and
jne
daa
das
stc
nop
pop
cld
aas
pushf
cli
mov
gs
cs
hlt
jns
mov
mov
and
in
outs
mov
push
loope
push
push
push
or
jg
jge
add
imul
inc
repz
hlt
daa
adc
test
pop
mov
daa
aad
aas
pop
cld
std
shl
push
pop
in
mul
add
adc
push
imul
and
scas
stos
pop
sub
push
mov
cwde
adc
leave
mov
pusha
mov
arpl
lea
xchg
xor
icebp
dec
inc
fidivr
repnz
(bad)
or
(bad)
dec
mov
pop
push
mov
push
adc
jne
or
jns
ins
clc
push
mov
clc
in
fsub
and
jle
out
movs
lods
xchg
retf
mov
adc
dec
addr16
cli
sahf
mov
and
mov
stc
mov
mov
cld
out
fmulp
aad
pop
cmp
aas
mov
push
pushf
jmp
pop
bound
(bad)
test
xchg
adc
and
inc
adc
jne
inc
icebp
int3
adc
xor
adc
aad
and
sub
in
cmc
mov
lock
pushf
in
pop
hlt
adc
or
movs
inc
add
out
jmp
pushf
pop
pop
cmp
jge
or
sbb
stos
push
push
adc
jbe
pop
test
ret
or
cmp
retf
sub
cmp
stos
or
in
dec
add
pushf
arpl
mov
int
push
nop
popa
adc
cwde
fs
sub
jb
fidiv
sub
fisubr
adc
movs
ficom
punpckldq
test
cmps
pop
out
int
aaa
shl
sub
xchg
hlt
les
jo
or
mov
out
xchg
jb
mov
mov
pop
loope
and
xlat
fst
or
jmp
cmp
mov
push
inc
imul
or
and
outs
mov
popf
repnz
pop
sbb
ds
jmp
call
movs
popf
xchg
or
fcmovnu
mov
pop
cmp
mov
xor
mov
xor
test
js
xchg
add
mov
dec
sbb
sbb
gs
pop
aas
fsub
icebp
icebp
xchg
dec
(bad)
mov
(bad)
push
xchg
out
test
mov
movs
movs
sbb
inc
pushf
rol
sbb
mov
ds
pop
fdivr
clc
div
not
ret
stos
jbe
(bad)
jg
(bad)
jmp
or
outs
or
(bad)
outs
sub
cmc
xchg
pop
(bad)
int3
popf
stos
int3
cs
push
fldcw
cld
test
add
inc
call
cmc
lea
ffree
(bad)
pop
ds
and
jmp
addr16
nop
sbb
and
mov
hlt
mov
jmp
and
fidiv
xchg
pop
dec
lahf
movs
push
(bad)
sbb
push
xor
outs
xor
sub
add
mov
jle
retf
dec
into
ds
inc
sbb
jmp
ins
cmp
fsubr
fstp
cmp
cwde
push
pop
add
stos
pusha
jp
push
js
nop
push
jbe
ret
fwait
stos
xchg
hlt
xchg
xchg
lahf
aaa
icebp
test
jno
sub
in
nop
jmp
adc
retf
xchg
pop
xchg
into
outs
xor
aaa
xor
cs
std
pop
and
add
push
and
scas
adc
retf
shl
jg
sub
cmc
loopne
xchg
mov
stos
dec
mov
icebp
out
iret
push
pop
mov
push
xor
cmp
sbb
mov
fwait
lds
lds
jns
mov
ret
les
(bad)
fwait
dec
lds
mov
jl
sub
inc
in
jl
pushf
icebp
cdq
add
push
mov
add
mov
das
int3
ret
inc
sub
cmps
adc
jl
pusha
add
or
dec
mov
and
mov
pop
call
mov
imul
pop
push
mov
fdivr
push
cmps
lahf
dec
fisub
mov
mov
jbe
mov
xchg
call
push
ret
push
cmp
pop
inc
sub
push
fcmovnu
jmp
pushf
dec
imul
xor
and
cmp
add
daa
and
xchg
adc
jns
xor
adc
mov
sbb
dec
in
mov
scas
cmps
mov
cmps
inc
dec
int3
and
popa
int
inc
jle
mov
vorps
dec
sub
bound
and
and
fmul
pop
add
call
xor
cmc
into
outs
neg
fnstenv
imul
pop
into
jp
popa
lea
mov
dec
outs
push
pop
arpl
js
lods
es
inc
js
jle
xchg
push
scas
das
cld
cmp
stos
xor
adc
xor
jmp
pop
movs
popa
push
cmp
cmp
push
ins
push
cmp
jmp
xlat
adc
fdivr
fsubr
lods
std
add
lock
(bad)
out
mov
ret
sbb
add
aam
dec
cmc
xor
lds
test
lds
push
(bad)
and
sub
jae
pushf
push
dec
aaa
cs
jne
mov
dec
adc
add
cmp
out
cli
int
enter
js
idiv
jmp
imul
repz
inc
les
fist
nop
daa
scas
adc
push
cdq
push
push
jp
and
mov
add
fcomp
pushf
cli
not
dec
call
in
cdq
jge
ja
sbb
jmp
test
fldcw
push
cmc
xor
iret
dec
inc
jl
into
or
dec
xor
mov
sbb
jmp
ret
and
scas
fisub
add
mov
dec
jnp
jmp
popa
pop
into
mov
(bad)
fsubp
sbb
or
cmp
repnz
rol
and
cmps
int3
fmul
daa
test
cmp
pusha
sti
or
popf
test
add
xor
add
push
lods
rcr
into
out
(bad)
mov
sbb
in
or
cmp
cwde
call
into
mul
lahf
not
in
jns
ds
jp
xchg
push
das
mov
jnp
inc
(bad)
stc
sbb
leave
(bad)
pop
bound
mov
sti
lods
pop
push
mov
mov
mul
clc
or
fdivr
cmps
jle
(bad)
repnz
mov
adc
repz
xchg
inc
push
(bad)
mov
std
pop
clc
out
add
lods
push
mov
stos
mov
pop
shl
add
cmps
(bad)
cmp
sbb
push
outs
fwait
in
sub
imul
call
xor
dec
and
sbb
test
(bad)
jnp
mov
(bad)
adc
fild
push
je
cs
push
xchg
fist
cmp
push
stos
mov
push
push
add
add
sbb
push
idiv
int3
outs
xchg
pop
cs
mov
jmp
add
pop
sbb
dec
call
inc
pop
cmp
outs
jbe
iret
fcmovb
and
jae
cmp
int3
fmul
mov
dec
sub
mov
or
and
retf
int
xchg
mov
fimul
push
dec
fcmovb
sbb
pusha
retf
and
test
leave
cdq
xor
jmp
out
test
ins
push
mov
xchg
rcr
push
lock
ror
leavew
xchg
fcom
imul
(bad)
stc
retf
aad
mov
mov
dec
xor
dec
mov
aas
shr
mov
int
jge
cmp
sahf
mov
imul
dec
mov
hlt
repz
sbb
mov
push
or
adc
(bad)
ds
or
lds
and
ret
icebp
mov
inc
mov
test
mov
or
call
or
push
arpl
test
in
test
xchg
(bad)
mov
pop
dec
dec
scas
jb
out
sub
addr16
mul
jne
adc
pop
inc
rcl
ins
aad
test
js
sti
in
enter
push
loopne
outs
push
nop
(bad)
retf
xchg
jl
inc
pop
enter
jae
das
pop
xor
cmp
mov
stc
test
(bad)
shr
call
xor
mov
in
in
cdq
in
sbb
fs
cwde
push
and
push
pop
xchg
icebp
mov
iret
jmp
loop
jns
mov
movs
icebp
fst
fadd
sbb
(bad)
(bad)
aaa
cmp
cmp
scas
bound
xor
movs
mov
mov
sub
nop
into
or
bound
pop
retf
mov
ins
pop
loop
push
inc
sbb
rcl
or
out
aas
xchg
or
push
ins
dec
jl
mov
cmps
adc
cld
jae
pop
in
dec
add
jle
jmp
rol
fnsave
add
ret
and
xchg
movs
xlat
mov
or
pop
xchg
adc
mov
or
inc
fdivrp
push
jl
std
push
xor
ss
and
dec
mov
mov
cmp
push
rcl
xor
jle
fstp
mov
cdq
cmp
(bad)
iret
cmps
aaa
cmp
nop
fist
add
adc
in
in
cmp
dec
in
xlat
repz
imul
cwde
popa
xor
mov
or
rcl
or
xor
inc
mov
mov
test
xchg
xchg
(bad)
mov
dec
sbb
(bad)
into
mov
fwait
dec
out
cmp
sub
mov
popf
popf
jne
or
mov
mov
ret
inc
add
push
jge
push
sbb
data16
jmp
rcl
leave
xchg
jp
test
pop
das
and
or
outs
jmp
pop
jns
push
mov
push
add
xchg
push
out
and
inc
xchg
pop
js
dec
add
imul
aam
test
pop
cmp
les
ret
loope
mov
jmp
dec
mul
jmp
mov
sub
fild
es
xor
ja
cs
pop
inc
jo
inc
loope
iret
(bad)
mov
pop
or
jmp
xchg
gs
xor
cmp
cs
mov
push
test
ja
aam
push
popf
jecxz
mov
ror
add
sbb
or
pop
jmp
sbb
sbb
imul
(bad)
push
jmp
scas
test
mov
add
xchg
xor
mov
inc
sub
dec
(bad)
dec
mov
dec
stos
add
sub
xchg
xchg
push
jecxz
outs
sub
ficomp
icebp
rol
ja
xchg
nop
je
jl
fidivr
pop
sar
jnp
mov
sti
mov
imul
sub
mov
ins
out
sbb
add
inc
xchg
lock
out
daa
push
lahf
stc
mov
cmp
cld
xchg
inc
out
add
xchg
inc
fcomip
bound
mov
cld
push
jle
jp
mov
xlat
ror
adc
add
and
add
xor
xor
mov
add
pop
(bad)
repz
sub
shr
adc
cmp
jecxz
sub
mov
add
mov
lods
bound
ins
sbb
or
pop
push
mov
mov
arpl
push
int
les
jl
popa
(bad)
cmp
mov
inc
or
inc
mov
adc
bound
inc
gs
cld
test
sub
cld
fs
pop
js
fs
fsub
sub
cmp
and
popf
sub
test
scas
xor
add
sub
or
or
gs
mov
sub
push
jne
mov
call
call
adc
mov
bound
mov
(bad)
sub
inc
adc
and
fstp
mov
cmc
mov
outs
mov
mov
lock
add
lds
xchg
retf
xchg
sub
jo
xor
clc
add
out
pushf
jge
mov
stos
adc
std
push
loop
iret
mov
jp
mov
test
rcl
sub
icebp
mov
sub
inc
clc
push
fdivrp
jno
pop
push
mov
rcr
out
xchg
enter
cwde
push
pushf
fisub
cmp
shl
sbb
ja
fstp
dec
imul
and
xor
fdivr
enter
pop
rcr
sti
in
mov
mov
nop
addr16
cwde
jge
push
mov
and
cmp
jp
mov
push
adc
idiv
out
out
stos
xchg
cs
xchg
xor
int
and
stc
in
cli
xchg
cmc
cld
and
mov
inc
shl
push
or
pop
sub
lea
loopne
inc
inc
pop
push
ss
scas
out
shl
les
aad
lods
mov
add
dec
mov
sbb
ficom
mov
dec
js
sbb
add
dec
push
mov
call
int3
sub
fdecstp
mov
mov
retf
mov
lods
lds
outs
sbb
test
xlat
push
dec
sbb
aas
aaa
xchg
inc
add
fucompp
sar
jae
mov
ins
neg
pop
mov
movs
test
pusha
fsub
sbb
mov
push
xchg
add
lock
shl
nop
sub
ss
(bad)
movs
and
(bad)
aaa
fbstp
pop
push
das
xchg
dec
mov
mov
es
ficomp
mov
out
push
xlat
or
add
aaa
loop
jbe
sbb
call
ficomp
jge
add
sbb
sub
sub
inc
sti
scas
jne
mov
fmul
(bad)
loopne
inc
lods
int3
push
jmp
mov
and
and
mov
jne
dec
shl
inc
push
xor
add
add
inc
sbb
or
pop
push
push
push
mov
sbb
lods
push
scas
test
sub
mov
into
or
stc
ins
push
adc
iret
cmp
mov
jmp
nop
sub
ds
div
scas
mov
(bad)
mov
ret
ins
or
sub
push
pop
stos
mov
mov
mov
fisubr
ror
test
cli
stos
ins
div
dec
xchg
jbe
inc
sbb
pop
daa
ret
xor
xchg
jl
mov
ss
cdq
je
jp
push
inc
leave
inc
mov
mov
fs
icebp
add
pop
adc
push
cmp
and
mov
loope
mov
in
jno
adc
add
xchg
in
push
dec
cmps
mov
lds
inc
scas
inc
jne
mov
mov
cmps
fcomp
mov
add
sub
mov
aad
iret
pop
xchg
das
lock
cli
jns
inc
xchg
xor
popf
mov
scas
add
aad
inc
cwde
and
add
adc
mul
dec
fisub
shr
push
sbb
ret
pop
lock
xor
pop
cdq
adc
pop
xlat
pop
pusha
jns
cmp
clc
fwait
push
aad
stos
in
cld
cmp
iret
fstp
xchg
ror
inc
(bad)
sub
adc
push
push
jecxz
rcr
popa
mov
inc
repz
ins
jmp
cmp
aas
pop
std
dec
test
or
inc
jl
outs
cmp
sub
enter
sub
jns
inc
inc
or
cmp
jo
mov
stos
in
fist
shr
or
call
stos
and
std
dec
pop
repz
cmps
mov
adc
repnz
aam
sbb
imul
shl
bound
in
pushf
add
inc
pop
mov
in
lods
adc
inc
fcom
data16
mov
xchg
in
push
xchg
push
cmc
enter
call
and
les
das
fild
(bad)
jg
pop
or
xchg
(bad)
std
xor
mov
mov
jg
inc
div
pop
jg
mov
inc
pop
add
and
les
inc
sbb
loopne
push
ret
lods
ja
xchg
cdq
mov
jbe
dec
mov
(bad)
pop
ds
push
inc
fld
jle
mov
test
test
cs
pusha
sub
out
adc
adc
dec
call
cwde
pusha
adc
cs
jg
(bad)
out
test
ins
int
cmp
leave
cmp
and
mov
das
aaa
imul
test
popa
pop
mov
xchg
stos
dec
add
fisttp
hlt
pop
cmp
xchg
push
test
sbb
xor
jmp
push
xchg
add
sti
pushf
fistp
test
cmp
fucomi
jb
fwait
scas
and
push
sub
(bad)
sahf
and
in
clc
mov
mov
jmp
data16
jns
push
push
mov
inc
rcr
dec
sub
shr
mov
nop
mov
addr16
dec
cli
imul
pop
cmp
or
lahf
mov
jmp
inc
(bad)
scas
cld
mov
mov
mov
stos
fdivr
sbb
add
push
mov
add
rol
in
jmp
inc
es
adc
xor
dec
in
and
cld
mov
test
lea
cmp
fwait
add
call
outs
nop
ret
es
pop
daa
lock
sahf
out
push
mov
shl
fchs
pop
or
sbb
stos
push
adc
scas
xor
jmp
pushf
sub
adc
dec
sar
cmp
or
aad
xor
push
xchg
(bad)
push
outs
dec
cmp
add
scas
mov
jle
inc
inc
add
je
mov
into
fistp
test
xchg
add
stos
add
add
mov
addr16
cmp
and
dec
push
rol
or
loop
out
fwait
adc
ror
sub
sbb
fs
movs
jg
into
dec
daa
aas
test
jmp
xchg
(bad)
adc
cli
adc
into
pop
iret
mov
cmp
or
pop
jp
or
pop
or
cs
dec
xlat
and
dec
loope
add
lds
cmps
push
xor
push
fst
sbb
xor
rcpps
pop
push
out
xchg
or
mov
data16
test
xchg
xchg
mov
test
scas
inc
(bad)
in
repnz
rcr
ins
inc
(bad)
mov
lods
mov
fisubr
sub
pushf
sub
rcl
fist
pop
call
mov
cli
mov
mov
push
cmp
std
imul
iret
mov
mov
sbb
add
add
lods
lods
xchg
cdq
leave
shl
out
or
ja
mul
inc
in
pushf
loopne
fsqrt
cmp
mov
jle
popa
neg
mov
add
push
mov
mov
inc
mov
data16
aam
dec
movs
jge
hlt
xchg
cmp
inc
sar
fmul
scas
fs
pop
scas
or
xor
lahf
js
outs
(bad)
jmp
sbb
fild
icebp
sub
mov
pop
add
test
mov
inc
mov
fistp
inc
shl
(bad)
inc
xchg
xchg
out
ret
fild
dec
sub
jmp
jb
jno
xor
mov
and
iret
and
add
div
xor
js
adc
mov
out
add
mov
jb
pop
jmp
arpl
call
sahf
or
mov
fcomp
dec
adc
aad
cmp
inc
daa
push
cmp
xor
or
mov
repz
(bad)
xchg
xor
inc
sbb
mov
outs
cmp
jle
icebp
push
sbb
out
popf
(bad)
ja
xchg
pop
inc
lahf
xchg
dec
xor
addr16
mov
lock
ins
push
mov
mov
loope
and
mov
mov
and
xor
push
call
dec
adc
push
outs
test
adc
shl
push
push
mov
mov
mov
push
cmp
fisub
ja
call
aad
mov
shl
int
xor
ds
inc
and
cmp
cmp
shr
cmc
jns
fwait
dec
movs
sar
icebp
jle
aas
sar
ret
out
lds
dec
xchg
fcom
jle
ins
arpl
repnz
xor
xor
push
(bad)
cmp
cmp
lock
push
(bad)
out
inc
push
cmp
adc
pop
inc
pop
lea
mov
in
push
mov
out
mov
out
push
(bad)
nop
inc
sbb
shr
fidivr
sbb
inc
mov
scas
lahf
sti
jmp
cmp
mov
cmp
ret
in
hlt
retf
into
pop
jl
fimul
xor
sub
inc
xor
jae
sub
add
dec
jp
or
push
adc
pop
in
movs
and
(bad)
cs
test
ins
mov
inc
retf
scas
inc
retf
loope
jge
fisttp
add
nop
mov
pop
sbb
pop
fdiv
imul
dec
not
popa
fldlg2
mov
nop
mov
in
sub
push
add
(bad)
loope
sub
ins
cmp
das
push
into
clc
aad
aas
push
stos
dec
cmp
sub
sbb
out
xchg
retf
mov
xlat
jae
ror
(bad)
lahf
add
xchg
xchg
mov
in
fdiv
sub
adc
dec
sub
xchg
test
icebp
push
push
xchg
cmp
mov
(bad)
div
test
xchg
push
je
mov
or
stc
mul
in
call
pushf
jg
and
sub
test
sbb
inc
addr16
add
repnz
mov
add
xchg
sub
inc
pusha
outs
mov
cmp
inc
aad
dec
push
pop
into
inc
frstor
xchg
loopne
sbb
cmp
and
(bad)
(bad)
push
sbb
(bad)
into
or
aas
imul
jg
fld
lock
mov
movs
ja
cmp
test
add
jbe
sub
repz
xchg
inc
and
ss
sahf
adc
call
jne
sahf
(bad)
cmp
or
push
xchg
pop
es
(bad)
mov
retf
dec
mov
daa
imul
fs
fsubr
mov
fbstp
jae
repnz
cld
sbb
mov
mov
inc
cmp
jns
into
adc
arpl
add
pop
jl
cmp
push
xlat
xor
pop
or
lods
xchg
lea
push
and
jns
sbb
or
or
(bad)
jecxz
adc
push
sbb
fadd
jbe
cmc
xchg
fs
cwde
mov
imul
jl
sub
pusha
cwde
or
stos
add
aam
fldcw
out
hlt
inc
cmps
into
push
xchg
in
(bad)
test
adc
out
push
add
mov
retf
lock
jmp
sub
out
adc
xor
es
adc
cmp
fisubr
cmps
hlt
popf
loopne
mov
jne
xchg
pop
ficom
jle
mov
push
dec
xor
nop
ficom
ret
adc
clc
xor
popa
add
mov
push
inc
push
mov
jmp
jae
jg
aad
mov
prefetch
cmp
sub
out
and
test
rcr
mov
jbe
adc
fdivr
daa
cmc
stos
sbb
addr16
or
ss
add
xor
inc
push
les
int
cmp
out
les
icebp
or
mov
iret
repnz
xchg
mov
test
gs
imul
outs
sbb
or
mov
sub
(bad)
icebp
jle
mov
fnstenv
and
dec
retf
sub
sar
add
hlt
dec
adc
cmp
mov
les
sbb
imul
mov
dec
xchg
fwait
jle
inc
sti
jo
mov
adc
fsubr
jno
pop
fild
jno
repz
and
mov
push
fdiv
ss
js
jne
or
je
ins
sahf
arpl
jl
mov
jmp
std
mov
pop
ins
xchg
in
cmp
push
xchg
mov
leave
jecxz
pop
cmp
pop
xor
cmp
into
add
xlat
mov
mov
sbb
inc
cmc
lods
repz
mov
cmc
cli
loopne
xchg
mov
(bad)
pop
out
xchg
fcom
xchg
iret
push
jp
push
inc
jno
dec
push
sti
inc
push
xchg
jmp
mov
sbb
pop
or
xchg
mov
add
out
mov
dec
sbb
cmp
inc
repnz
or
jnp
cmc
xchg
loop
sub
scas
cmp
loopne
or
xor
pop
push
sbb
sbb
enter
out
cmp
aaa
mov
hlt
mov
je
les
aaa
sub
mov
lock
add
dec
ins
inc
sub
movhps
shl
cmps
or
stos
dec
(bad)
out
out
(bad)
scas
test
aas
xlat
neg
mov
inc
and
mov
into
idiv
push
das
xchg
jnp
xchg
ficom
adc
(bad)
mov
push
sbb
fild
iret
jbe
xchg
rcl
jnp
inc
pop
push
mov
inc
push
cwde
dec
jns
cmp
outs
pop
sti
(bad)
fimul
jle
sub
lahf
push
inc
nop
out
xor
gs
cmps
or
jno
push
sub
aam
jle
push
fucomip
in
ja
inc
pop
or
fimul
lds
fiadd
pop
movs
loope
aas
daa
in
in
stos
lds
loope
push
sbb
or
stos
xor
popa
push
or
out
(bad)
inc
push
mov
out
test
movs
add
and
je
stos
imul
dec
mov
movs
xchg
and
dec
dec
mov
push
cmp
pop
loop
arpl
dec
pop
push
jecxz
and
mov
in
bound
lods
inc
out
repnz
mov
xchg
push
pop
in
mov
leave
adc
xor
ror
std
lods
(bad)
les
cmp
dec
xchg
sbb
push
mov
jbe
cdq
mov
sub
lahf
sbb
ins
icebp
repz
and
test
ror
jg
sar
aas
mov
ret
pop
mov
add
xchg
cmp
imul
(bad)
aaa
das
inc
mov
js
xor
cmps
pop
push
jbe
mov
mov
cli
nop
cdq
in
jl
pop
fdiv
mov
sub
dec
call
stc
nop
sar
addr16
add
loop
bnd
jg
dec
mov
mov
jg
cmp
add
push
sub
shl
adc
pop
movups
enter
outs
or
call
xlat
pop
shl
mov
lods
or
loop
arpl
in
push
push
aaa
stos
or
fisttp
(bad)
cmp
mov
add
mov
inc
jl
mov
arpl
gs
dec
and
aad
enter
ret
lods
(bad)
retf
iret
rcr
adc
movs
mov
pop
mov
or
sub
xchg
ja
std
dec
ins
mov
pop
pusha
push
outs
inc
xlat
add
xor
rcr
dec
fisub
daa
not
push
pop
xchg
and
pushf
call
pop
push
mov
int3
retf
out
call
addr16
fmulp
xor
jns
mov
mov
stos
push
xchg
test
add
into
sbb
jg
inc
pop
sahf
mov
mov
out
(bad)
js
and
(bad)
(bad)
sbb
push
jcxz
pop
mov
jns
arpl
mov
lea
inc
push
inc
push
aad
pop
add
xchg
and
dec
or
popf
in
add
ins
xor
(bad)
(bad)
mov
imul
rcr
shl
imul
adc
sub
frstpm(287
inc
pop
fistp
scas
jae
(bad)
es
jl
sbb
push
ss
les
xchg
jno
add
es
adc
repnz
mov
daa
jbe
pusha
sbb
xchg
ins
stc
push
icebp
out
loope
repz
sbb
dec
pop
mov
pop
sub
leave
rcr
mov
and
iret
dec
push
ret
movs
push
fld
sub
lods
cdq
fdivp
jmp
scas
mov
pop
imul
test
movs
sub
sbb
sub
cwde
xor
sub
xchg
xor
inc
ja
xlat
push
dec
xchg
pop
outs
mov
add
fwait
cmp
gs
inc
fwait
stc
inc
mov
stos
repnz
push
sar
add
lods
ja
dec
les
int
test
mov
outs
ins
and
sti
and
dec
ins
mov
mov
cmp
push
bound
mov
inc
inc
jns
mov
pusha
xor
nop
or
imul
jmp
sub
sti
call
or
(bad)
jl
inc
lods
ret
loopne
fisttp
mov
cmp
pop
sbb
jo
iret
sub
add
sub
imul
mov
xor
lods
inc
mov
ret
movs
push
add
jae
test
adc
dec
cmp
rol
and
or
pop
retf
dec
out
fs
imul
sahf
sbb
je
loop
les
add
out
int3
(bad)
cdq
mov
pop
adc
fsub
imul
dec
pop
mov
jge
xchg
jo
xor
pop
dec
aam
ins
loopne
pop
iret
mov
fst
out
(bad)
pop
adc
popf
add
(bad)
leave
ror
in
jo
xchg
cmp
js
xchg
div
(bad)
int3
dec
cdq
adc
xor
push
ds
jmp
hlt
ror
aas
inc
fwait
shl
adc
es
xchg
mov
mov
inc
in
icebp
(bad)
jmp
int3
mov
in
shr
mov
add
or
(bad)
push
adc
adc
das
ficom
cmp
mov
xchg
es
mov
sbb
fbstp
xchg
fcmovu
loopne
cmp
lods
sti
xchg
xor
xchg
pop
frstor
jl
outs
(bad)
and
cdq
fsubr
es
daa
pop
int3
retf
adc
hlt
sahf
pushf
sar
repnz
scas
cld
stos
frstor
inc
ror
xchg
push
mov
int3
add
cmp
mov
(bad)
in
mov
rol
dec
jmp
and
movs
mov
xlat
ror
push
push
fisubr
enter
inc
lods
in
mov
jns
sbb
inc
aam
xrelease
xor
add
cld
iret
scas
sti
outs
or
retf
arpl
test
leave
js
xchg
stc
cmp
(bad)
ds
retf
mov
cmp
aas
sbb
aam
daa
and
test
rcr
dec
push
cmp
(bad)
xor
sub
cmp
in
test
push
dec
mov
push
pop
add
out
int
scas
add
mov
repnz
sub
adc
jmp
cmps
adc
bound
add
clc
mov
in
inc
bound
mov
pop
repz
sbb
and
jmp
int
clc
sub
dec
cmc
jecxz
xchg
(bad)
mov
(bad)
adc
jns
bound
leave
jmp
repnz
mov
cld
test
sbb
pop
push
addr16
jne
fs
adc
mov
pop
(bad)
adc
das
xchg
enter
retf
repz
cdq
nop
pushf
repnz
test
inc
pop
popa
leave
lods
movs
call
mov
add
dec
ins
test
pusha
jle
les
adc
adc
lock
mov
loopne
xor
fld
pop
sti
mov
aam
clc
mov
adc
push
ds
call
inc
cdq
xor
nop
push
pop
lds
call
inc
adc
jb
sub
enter
jmp
data16
cmp
mov
xlat
iret
xchg
loope
in
outs
(bad)
sti
fld
push
adc
adc
lods
add
jmp
retf
repz
jo
fadd
movs
pusha
jge
rol
dec
push
mov
jge
inc
retf
test
out
gs
dec
and
stos
das
pop
or
or
scas
mov
mov
fidiv
adc
and
sar
mov
fdiv
mov
fld
xor
mov
jmp
enter
or
test
and
sbb
adc
sar
add
push
inc
sbb
or
push
xchg
xor
out
fsubr
std
sbb
sbb
vpavgb
xor
pop
repz
js
movs
stos
in
movs
jo
and
outs
popa
or
icebp
out
mov
push
enter
dec
and
cmp
cmp
hlt
inc
scas
mov
jo
cwde
mov
jmp
test
cmp
add
loop
cmp
ror
hlt
enter
cmp
ret
fnsave
cmc
push
or
jecxz
fstp
xchg
jmp
mov
or
iret
cmp
and
mov
in
int
xchg
sar
arpl
(bad)
dec
cdq
add
fadd
movs
and
std
ret
fld
sub
cmp
into
sbb
adc
xor
or
or
mov
int
mov
inc
imul
mov
inc
ds
jbe
cld
lahf
dec
out
xor
mov
dec
cs
ret
xchg
pop
retf
fild
or
mov
adc
xchg
pop
addr16
inc
mov
fdiv
xchg
cli
cs
(bad)
cmps
sbb
inc
push
scas
call
imul
jb
pop
mov
dec
test
or
sub
sbb
jmp
lea
inc
movs
and
jo
jecxz
push
fdiv
es
ja
cld
or
setle
and
push
call
fs
(bad)
mov
icebp
(bad)
call
jns
cmp
pop
inc
push
mov
pop
into
push
fstp
lods
mov
ret
rcr
pop
stos
jns
and
aaa
pop
aam
imul
jns
sbb
add
call
and
(bad)
mov
sbb
aas
cs
shl
(bad)
div
gs
fisttp
mov
inc
movs
sbb
push
push
stos
push
push
ds
(bad)
repnz
cmp
std
add
and
test
ret
stos
test
xor
scas
mov
repnz
cwde
outs
popa
xchg
inc
js
retf
imul
or
mov
lods
cmc
imul
lahf
pushf
outs
push
enter
jl
xchg
rol
int
jmp
ret
pop
lds
xchg
lods
(bad)
xor
jno
mov
mov
cld
fnsave
cld
xchg
hlt
and
loopne
mov
mov
push
mov
push
mov
(bad)
cmp
push
aam
repz
cdq
pop
push
bound
mov
popf
push
adc
clc
mov
(bad)
std
cmp
fstp
push
call
jmp
fcmovne
cdq
and
mov
and
mov
shl
xchg
mov
sub
das
lea
in
mov
imul
das
pop
fcos
push
mov
(bad)
and
arpl
add
arpl
repz
jg
mov
fist
cmp
adc
gs
mov
mov
xchg
out
jmp
sbb
adc
jnp
(bad)
scas
adc
mov
stos
mov
leave
loopne
pop
sub
hlt
stos
daa
das
test
iret
adc
cmp
add
movs
nop
jns
and
ins
movs
test
jbe
rcr
das
adc
inc
add
or
out
fidiv
pop
mov
inc
mov
cmp
pop
add
jle
bound
(bad)
call
ret
lods
cwde
movs
mov
push
jl
mov
dec
out
add
lds
fbstp
and
sahf
add
mov
jb
xchg
lock
daa
sbb
mov
add
cli
mov
or
popf
movs
xor
or
sub
add
add
xchg
mov
mov
xchg
sub
or
inc
cwde
pop
outs
adc
jg
(bad)
cld
xor
and
scas
xchg
mov
jmp
arpl
push
imul
mov
test
loope
cmps
jmp
jb
test
push
jmp
dec
jg
gs
cmp
inc
repz
in
mov
dec
sbb
pushf
and
pusha
pop
cdq
xor
xchg
dec
ds
dec
(bad)
outs
repnz
cmc
xor
pop
cs
ss
hlt
(bad)
push
int3
push
pop
jns
xchg
arpl
std
paddusw
xchg
jmp
outs
adc
jmp
xchg
fild
leave
mov
scas
cdq
xor
sub
cmp
stos
lahf
sub
into
cmp
dec
aas
adc
sbb
lea
mov
push
cdq
and
inc
push
cmp
fnstcw
cld
jle
(bad)
mov
in
push
xor
int
inc
test
gs
stc
rcl
(bad)
jno
shr
push
push
jb
cld
aas
and
mov
cmp
mov
sahf
and
cwde
cld
dec
cmp
fs
stos
ja
xor
push
mov
daa
ds
ret
and
scas
ss
dec
cmp
adc
lock
xor
sbb
jns
fs
or
add
mov
and
push
lea
inc
cmp
inc
sub
je
or
dec
test
add
(bad)
and
call
fisubr
scas
mov
push
xor
cmc
lock
and
jmp
pop
repnz
mov
pop
setl
fisttp
adc
test
or
sub
xchg
ret
inc
fnstsw
xchg
mov
push
add
repz
ret
std
rcl
xor
js
call
xchg
adc
jg
cli
int
push
sbb
inc
stos
sbb
pop
daa
jbe
add
xor
pop
test
iret
fcomp
js
cmp
jb
inc
icebp
add
dec
imul
or
xchg
xor
fbld
leave
lahf
fdiv
adc
add
and
es
jmp
push
shl
xchg
dec
out
dec
jmp
push
test
dec
adc
inc
pop
mov
push
ret
xor
cmp
ins
fistp
lock
outs
and
jg
lock
adc
iret
cdq
inc
dec
cld
xchg
icebp
mov
aaa
mov
mov
scas
lods
aam
or
and
jl
lea
rol
mov
sti
cmp
mov
pop
hlt
into
loope
mov
inc
or
ror
(bad)
jae
cmp
sub
sbb
pop
neg
jmp
ja
sub
pop
adc
push
lds
into
adc
lods
mov
dec
sbb
inc
mov
mov
jge
cdq
mov
and
mov
xchg
inc
xor
mov
mov
bswap
and
aam
(bad)
jae
fild
pop
or
mov
jge
inc
mov
(bad)
out
movs
test
inc
cmc
aam
and
lock
lahf
dec
cmp
inc
or
xchg
cmp
imul
mov
loopne
mov
push
fwait
shl
and
sahf
mov
push
pop
sbb
das
jno
mov
dec
dec
jmp
lods
fisubr
xchg
mov
fdiv
xchg
pop
addr16
stos
sti
dec
dec
mov
je
inc
sbb
adc
pop
xchg
adc
js
(bad)
scas
xlat
mov
add
and
adc
out
sub
sub
ins
int3
add
cmp
inc
ficom
mov
inc
sbb
mov
ror
add
jmp
pop
jno
faddp
or
scas
jp
mov
cmp
push
dec
fcom
dec
xlat
fst
add
cmps
(bad)
cmp
adc
nop
mov
cli
(bad)
jmp
adc
or
dec
push
test
aad
int
or
(bad)
dec
and
push
sub
out
call
mov
xchg
xchg
sar
jmp
xor
pop
sub
jne
push
repz
lods
outs
mov
data16
xchg
push
or
sti
mov
fisubr
xlat
jecxz
pop
xor
dec
sbb
ja
sbb
ret
sub
test
add
retf
test
aam
(bad)
cmp
inc
mov
and
out
xchg
int
sbb
jo
and
or
loope
mov
daa
nop
dec
mov
add
jb
cdq
xor
mov
data16
rol
sub
stc
and
sub
(bad)
mov
push
lods
scas
lahf
test
adc
jne
cs
or
dec
in
cli
movs
std
xchg
icebp
in
sti
cmps
adc
sbb
and
(bad)
loope
pusha
jg
ret
add
mov
out
dec
shl
cli
scas
int3
rol
jl
nop
hlt
dec
into
call
adc
out
dec
addr16
jl
push
addr16
cmp
xchg
ja
add
xor
rol
into
xchg
mov
and
movs
sub
shr
mov
xchg
mov
mov
test
jnp
pop
adc
adc
mov
int
cwde
shl
stos
and
mov
push
and
in
push
imul
pop
daa
out
inc
std
dec
sahf
movs
rol
repz
and
into
nop
pop
pop
hlt
lea
xchg
adc
dec
adc
pop
popf
out
inc
pop
ins
jecxz
xor
push
loope
pop
test
mov
dec
std
out
jle
jns
aas
imul
retf
mov
out
xchg
add
test
arpl
and
clc
jmp
fs
and
jecxz
scas
pop
mov
adc
test
icebp
and
ret
repz
jg
jl
out
imul
pop
adc
push
jns
add
dec
adc
test
leave
jle
call
sbb
aaa
call
mov
outs
push
stos
cwde
hlt
out
xchg
aad
push
or
addr16
dec
inc
inc
outs
jne
mov
jg
lods
call
stos
mov
popa
xchg
or
hlt
scas
inc
inc
cmp
aad
arpl
cwde
std
sub
fsubr
fst
repnz
inc
adc
push
enter
movs
mov
out
aas
xor
cmp
outs
jl
jg
push
outs
push
push
jmp
mov
jo
(bad)
jne
add
(bad)
(bad)
jnp
pop
dec
loope
jb
mov
sbb
loop
rcr
fild
mov
add
dec
or
fcomi
or
(bad)
xor
movs
jmp
rcr
sub
mov
(bad)
cmps
mov
addr16
add
push
int3
lods
push
or
or
mov
mov
(bad)
jmp
jns
lahf
sbb
pop
mov
div
sub
cmp
push
stc
mov
(bad)
out
retf
inc
mov
inc
cmp
adc
add
mov
xchg
jmp
test
jmp
mov
push
loopne
or
aam
push
icebp
sbb
fmul
rol
cmp
call
inc
push
neg
fistp
daa
cli
xchg
ds
sub
ret
dec
pop
pop
outs
xchg
stc
mov
pop
pop
mov
and
xchg
int
add
or
pop
pop
mov
push
shl
inc
fadd
push
leave
xor
mov
jae
call
xchg
jg
add
rcr
mov
sar
add
mov
sti
and
sbb
push
xchg
icebp
popf
ss
stos
push
call
test
icebp
mov
lods
jmp
mov
adc
dec
push
or
fistp
jmp
push
xchg
sub
adc
or
or
inc
mov
push
xor
int3
or
maxps
icebp
das
fisttp
dec
dec
sahf
std
std
(bad)
dec
dec
ds
pop
or
rol
jge
mov
inc
iret
xor
test
arpl
or
xchg
imul
in
clc
xor
lea
ficom
ja
sub
popf
clc
icebp
dec
inc
out
dec
lods
jne
das
loopne
sbb
imul
inc
cmp
cmps
sub
sbb
pop
std
imul
cmp
pop
mov
test
(bad)
iret
cmp
test
mov
inc
sbb
mov
out
in
(bad)
push
daa
xor
mov
or
mov
xchg
fdivr
movs
cmp
dec
jg
scas
inc
mov
outs
jns
div
add
dec
sti
pop
std
sbb
sbb
(bad)
aad
cmps
pop
dec
outs
jnp
and
xchg
and
ss
xor
fld
in
stos
add
mov
fsubr
ror
fimul
shl
mov
mov
inc
nop
pop
inc
xchg
inc
aam
sub
es
pop
jg
test
and
hlt
movs
or
jae
call
aaa
lds
sub
aam
xor
jmp
repnz
adc
xor
inc
inc
cmp
or
xor
jmp
add
jle
push
ja
push
mov
xor
cli
ds
pushf
or
mov
aam
div
cmp
add
jg
or
push
neg
mov
mov
xor
(bad)
das
test
push
mov
add
and
pop
lahf
mov
xor
or
mov
shl
dec
push
push
push
pop
in
mov
data16
ss
popa
mov
cmp
xor
aad
cmp
les
fistp
mov
xchg
mov
mov
push
(bad)
arpl
jns
daa
and
lods
int3
sub
mov
aad
push
dec
pop
or
stos
pop
mov
sbb
xchg
inc
mov
add
inc
popf
push
or
xchg
std
push
jb
dec
xor
mov
out
dec
push
or
mov
fisttp
aaa
add
jecxz
sub
add
jg
(bad)
mov
pushf
adc
xlat
xor
inc
inc
stos
cmp
inc
inc
scas
dec
retf
jmp
scas
pop
and
mov
mov
fidivr
and
cmp
out
mov
fldenv
shl
test
stos
(bad)
xchg
and
adc
mov
cdq
(bad)
(bad)
ror
adc
inc
popf
into
mov
push
(bad)
push
mov
mov
jo
test
fcmovnb
pop
dec
sub
or
stos
int
enter
fnstsw
jns
dec
lahf
fsub
add
ds
xchg
imul
retf
aad
inc
pop
push
pop
daa
cmps
jbe
dec
gs
push
icebp
inc
push
test
jmp
jae
mov
push
nop
in
cmps
shl
inc
mov
or
or
nop
pop
gs
and
mov
xor
test
xchg
ins
rol
popa
mov
in
test
pop
stos
adc
loope
fisttp
js
push
ins
adc
xor
jl
inc
add
mov
aad
retf
xor
adc
mov
fsubr
xlat
lds
fmulp
out
cmp
ror
jle
or
cmps
(bad)
ins
add
ror
aas
test
mov
retf
lods
fiadd
rol
imul
add
popa
xchg
call
(bad)
inc
stos
jl
ins
mov
aas
fwait
cmp
(bad)
fnstsw
stos
mov
fisubr
mov
push
pop
xor
pop
sbb
sbb
mov
lds
jbe
cwde
(bad)
adc
dec
dec
jae
inc
ret
rol
jns
sub
mov
(bad)
into
outs
into
mov
cmc
loopne
mov
xor
push
jg
adc
retf
dec
push
inc
aam
(bad)
aam
cmp
xor
and
mov
inc
mov
inc
test
and
in
sbb
or
jns
jae
or
mov
fcmovnbe
jmp
icebp
sbb
inc
xchg
dec
xchg
dec
or
fnstenv
hlt
adc
cld
add
in
shl
adc
scas
icebp
fcmovb
call
test
push
int3
jnp
leave
or
adc
ficomp
jp
fild
sbb
inc
xor
xchg
arpl
enter
add
fld
pusha
loop
sbb
ins
jnp
ja
fs
inc
ins
les
cmps
sbb
lods
rcl
ret
dec
mov
pop
je
mov
rep
xor
retf
adc
lock
push
repnz
xor
xchg
add
gs
xchg
ins
(bad)
xlat
enter
jo
jae
cwde
add
xchg
fmul
mov
xchg
or
mov
inc
and
mov
push
lods
mov
iret
mov
lods
sbb
pop
sub
loope
jmp
xlat
mov
jae
scas
lods
and
xchg
mov
cmp
sub
stc
mov
call
std
test
lods
ins
(bad)
mov
mov
inc
mov
pop
jne
les
xchg
in
inc
(bad)
mov
in
push
shr
mov
fidiv
xchg
std
inc
mov
nop
sbb
outs
sbb
jns
mov
clc
out
call
fwait
sub
fwait
mov
hlt
mov
fisubr
mov
(bad)
or
sub
popa
cwde
cmp
push
call
and
fxch
test
aad
dec
not
xchg
and
adc
(bad)
mov
mul
or
jo
test
aad
sti
cdq
jle
xchg
mov
or
jecxz
sbb
mov
dec
std
jmp
push
xchg
pop
cwde
(bad)
mov
mov
cmp
movs
inc
mov
movs
int
or
xchg
push
xor
add
hlt
hlt
outs
jecxz
mul
xchg
mov
push
setno
leave
push
cmp
rcl
push
(bad)
aad
scas
mov
scas
scas
sbb
arpl
xchg
sub
imul
(bad)
loope
mov
inc
dec
popf
jo
(bad)
adc
loope
push
mov
sub
ret
inc
or
jb
mov
out
xor
mov
inc
jle
or
pop
adc
ret
out
loop
outs
and
ret
lea
stos
shl
iret
les
outs
inc
inc
jae
and
sbb
bound
(bad)
(bad)
sahf
xchg
test
enter
jmp
and
cmp
mov
sbb
out
or
or
(bad)
aaa
hlt
cmp
lahf
in
or
xlat
jg
jne
xor
sbb
push
xchg
pop
push
mov
fistp
xlat
in
push
and
ds
into
push
out
push
pushf
(bad)
js
push
mov
mov
ins
inc
mov
push
adc
mov
pop
outs
push
pop
sbb
retf
sbb
jne
mov
rol
xlat
loope
adc
adc
push
and
adc
adc
inc
repnz
sbb
jb
loop
sbb
pop
ds
mov
cld
mov
repnz
mov
xchg
stos
bound
adc
pop
jmp
in
call
scas
adc
xchg
ds
sbb
inc
ret
sub
xor
test
mov
inc
movs
inc
loopne
aam
xor
xchg
sbb
jge
and
mov
mov
push
sbb
jo
ds
cwde
mov
retf
cmps
add
rcr
push
sub
retf
shl
sbb
stos
lds
inc
pop
test
cmps
inc
inc
sbb
lea
mov
pop
pop
scas
loop
and
or
xchg
loopne
inc
jne
mov
rcl
dec
mov
adc
cld
imul
nop
arpl
ins
dec
js
repz
dec
movs
iret
aad
out
sbb
out
shr
icebp
into
jne
and
scas
call
sub
dec
ins
stos
ror
push
loopne
mov
cdq
mov
pop
jmp
dec
pop
fmul
inc
add
les
xchg
clc
inc
fwait
xor
sti
cmps
push
or
xchg
lock
mov
in
ret
sbb
jno
pop
adc
retf
dec
pop
cmp
adc
lods
mov
xor
xor
add
lods
fiadd
and
pop
in
jmp
dec
and
inc
cs
xchg
sbb
xor
xchg
in
jo
mov
cmps
sbb
xchg
xlat
and
cld
ret
shl
scas
xchg
add
add
cmp
test
fmul
(bad)
dec
push
movs
repz
scas
mov
lahf
(bad)
std
data16
jmp
and
test
mov
ret
xchg
(bad)
fucom
pop
aas
test
mov
jns
pop
je
pop
xchg
aam
xor
adc
enter
mov
jle
cmp
std
test
and
stos
jo
inc
sub
and
fwait
mov
cmc
mov
pop
jbe
bnd
dec
bnd
mov
sar
fs
or
mov
push
(bad)
dec
cmp
stos
out
or
ror
retf
push
push
daa
pop
ficomp
outs
jmp
ins
in
and
clc
xchg
repnz
jns
mov
cmp
ds
(bad)
mov
sub
cmc
ret
and
mov
stc
outs
or
fdiv
pmuludq
mov
icebp
(bad)
in
shr
dec
(bad)
div
pop
adc
and
stc
dec
std
or
add
fwait
jge
out
xchg
jne
cli
add
mov
mov
xor
push
data16
inc
fisubr
jno
or
or
pop
add
or
stos
jp
dec
shl
data16
inc
xchg
in
mov
mov
into
jns
loopne
push
xchg
xor
test
aad
cmc
xchg
imul
sbb
mov
cmp
cmps
stos
mov
popf
bound
xor
mov
mov
cmp
jecxz
cmp
or
in
mov
or
mov
popa
fwait
ret
out
mov
pop
fbstp
pop
pop
pop
ret
out
aad
ret
pop
imul
xchg
sahf
mov
xchg
dec
sbb
mov
jmp
call
aad
dec
loopne
sbb
test
fs
xchg
cld
or
cmp
call
frstor
sub
pop
xchg
into
sub
inc
xlat
imul
add
test
loop
cld
jp
fld
test
mov
sbb
mov
cmps
jp
cmp
jmp
jae
(bad)
pop
dec
jp
sahf
loop
xchg
into
lock
aad
fnstenv
dec
ret
sub
call
ins
cdq
in
fisubr
in
xor
outs
fstp
xchg
loopne
cmp
pop
loop
imul
in
(bad)
or
mov
mov
inc
adc
leave
fistp
cli
shl
cmp
fimul
data16
xchg
inc
push
cmp
sub
imul
jno
xchg
gs
and
ficomp
addr16
repnz
dec
(bad)
bound
mov
mov
push
scas
retf
push
outs
mov
push
xchg
test
cdq
mov
xchg
inc
push
dec
dec
in
icebp
jne
repz
jnp
mov
dec
mov
inc
jmp
(bad)
sar
inc
(bad)
push
mov
lock
sar
imul
mov
sbb
cmp
or
sbb
in
mov
call
sub
pop
out
cwde
sub
mov
push
(bad)
cmc
jns
xchg
or
test
push
rcr
sbb
xor
in
xor
lock
pop
lods
shl
pop
dec
xchg
mov
in
shl
ins
mov
dec
jge
cmp
(bad)
cmps
and
idiv
repz
dec
and
mov
sbb
(bad)
(bad)
and
cmp
push
and
scas
and
hlt
inc
movs
in
push
fisttp
clc
push
inc
repz
iret
mov
outs
mov
xor
mov
xlat
and
fs
xchg
adc
dec
cli
fisttp
popa
(bad)
cmc
dec
or
ds
mov
add
push
lds
push
pop
push
retf
inc
jg
lahf
in
ret
or
xor
push
add
cld
retf
sub
jecxz
xchg
jg
push
mov
mov
sbb
pop
fcom
adc
add
xchg
jno
dec
and
adc
jmp
jmp
jmp
mov
jmp
shr
shr
pusha
mov
(bad)
js
xor
popa
jbe
dec
arpl
inc
rol
arpl
shr
icebp
je
imul
jmp
lds
(bad)
jnp
fcmovu
test
jge
call
mov
push
add
and
add
jns
sahf
mov
imul
(bad)
fnstsw
call
retf
(bad)
pop
mov
dec
imul
jmp
fs
movhps
ds
fwait
sub
scas
fs
sub
mov
sbb
inc
fwait
cdq
cmp
xlat
(bad)
pop
out
imul
fdivr
sbb
xchg
pop
cli
xchg
or
jnp
pushf
pop
cmp
jae
outs
adc
or
inc
cmps
push
inc
test
inc
call
in
xor
rol
pop
inc
xchg
fdiv
dec
pop
adc
div
mov
sbb
push
jg
paddsw
cdq
jb
adc
in
pop
fmul
scas
stos
xchg
push
push
inc
js
mov
ins
test
aam
xor
sbb
jno
fwait
jmp
and
addr16
repz
cmc
sbb
mov
clc
mov
(bad)
(bad)
gs
push
mov
xchg
test
xor
xchg
stos
outs
outs
sbb
inc
repnz
and
xchg
sbb
or
pusha
push
jmp
mov
jo
xor
inc
stos
inc
jmp
repnz
mov
jbe
imul
in
or
adc
mov
loop
fdivr
lock
pop
xor
test
cwde
jae
pop
lahf
mul
dec
sub
push
sbb
xor
mov
bnd
and
mov
sub
jno
call
test
push
retf
sbb
cmp
pop
or
or
mov
or
fiadd
adc
sbb
mov
sub
jb
clc
lds
addr16
imul
and
pop
sub
adc
mov
aas
icebp
mov
cmps
je
outs
cld
enter
adc
sahf
cmp
dec
dec
lds
inc
fs
adc
sbb
sub
jg
dec
mov
sub
xchg
pop
ins
jg
stc
pop
add
ror
add
je
fs
out
cmp
into
jg
lods
leave
add
pusha
mov
dec
mov
je
push
addr16
call
mov
inc
aaa
xor
out
or
fmul
pop
jbe
mov
ret
push
pop
pop
sub
shl
mov
cdq
add
or
leave
enter
(bad)
jmp
jl
jae
imul
fsin
dec
call
jno
ret
(bad)
out
sub
lock
in
jnp
not
push
jmp
jns
xchg
xor
or
sub
fidivr
adc
fisub
xchg
cdq
pop
cmp
xor
addr16
ds
daa
inc
(bad)
movs
mov
imul
mov
daa
outs
bound
mov
or
adc
or
mov
push
aam
das
add
mov
adc
scas
jno
fdiv
(bad)
jae
or
rcl
dec
or
add
(bad)
retf
cmp
mov
inc
nop
sbb
rcl
push
bound
cdq
jl
add
rcr
fnsave
hlt
pop
or
lea
pop
es
inc
in
cmp
fldcw
pop
sbb
popf
cli
inc
cmp
outs
xchg
pop
lahf
das
adc
jae
xchg
addr16
cdq
adc
(bad)
aaa
cmp
jno
stos
ins
enter
mov
or
sub
add
push
sbb
xor
and
cli
in
mov
mov
cmp
jle
jle
dec
fst
addr16
pop
call
jl
inc
retf
jmp
mov
jne
scas
fmul
dec
aas
test
test
int3
jmp
js
fnsave
call
sub
in
dec
aas
mov
jl
dec
adc
hlt
inc
loopne
or
lahf
pop
xchg
aad
cmp
shl
sub
retf
nop
icebp
fisubr
push
mov
das
add
dec
outs
add
dec
cmp
sahf
mov
jae
mov
mov
ss
cwde
fnstenv
shl
and
add
xor
pushf
les
out
xor
cmp
jge
jmp
mov
push
into
add
stc
xchg
mov
or
jp
cmp
test
shl
or
fcom
div
pop
gs
and
inc
fld
(bad)
jne
arpl
adc
or
popf
push
shl
int3
xlat
dec
loope
jns
jmp
or
mov
mov
add
in
cld
inc
clc
mov
iret
mov
cmc
lock
ret
(bad)
movs
scas
push
inc
adc
inc
cdq
retf
mov
xor
aas
adc
cmps
outs
dec
mov
xchg
fistp
inc
dec
push
mul
xlat
sub
xchg
jae
pop
arpl
xchg
pop
movs
xor
or
mov
test
xor
movs
sbb
inc
jl
jo
(bad)
adc
arpl
loop
sbb
imul
(bad)
adc
into
enter
inc
aad
stos
int3
add
lds
mov
inc
lods
xor
jl
(bad)
iret
or
ret
lods
add
jmp
jge
xchg
pop
or
popf
movs
push
cmc
or
or
mov
pop
inc
and
in
xchg
xchg
xor
aad
test
mov
dec
or
fdiv
lock
scas
(bad)
pop
xchg
ja
fwait
ret
ss
stos
jns
push
test
mov
loopne
data16
inc
jp
pop
ret
push
sub
push
sbb
adc
(bad)
cmp
add
or
xchg
xchg
scas
xor
or
clc
mov
push
mov
or
jns
sub
leave
fstp
(bad)
sbb
jnp
fnstenv
jmp
add
out
xor
mov
call
add
push
repz
or
and
retf
push
ins
cbw
fwait
push
lock
add
mov
les
fist
push
sti
and
les
imul
sbb
xor
call
mov
mov
cmp
pushf
cmp
sahf
clc
imul
cmc
xor
shl
inc
stc
pop
cld
cld
call
mov
fisttp
sbb
test
out
cmp
test
xchg
outs
repz
cmp
sar
out
xchg
dec
jmp
sub
sbb
jbe
bt
push
int
shl
pop
xchg
mov
loop
push
jg
mov
clc
cwde
test
push
push
push
dec
fs
xchg
mov
xor
sbb
fcomp
ss
test
clc
push
push
shl
aad
out
mov
cmp
neg
add
dec
je
and
jbe
inc
shr
lahf
(bad)
sahf
cmp
dec
mov
pop
push
std
daa
xor
test
inc
outs
icebp
out
popf
mov
cmp
mov
sub
repnz
cwde
pop
pop
(bad)
int
test
jg
xchg
fnstenv
fdiv
sub
inc
je
nop
xor
dec
fdiv
test
pop
mov
pop
scas
out
push
call
int
ja
call
(bad)
dec
iret
xchg
push
adc
sbb
mov
adc
mov
popf
shl
test
mov
mov
xor
cmps
stc
xor
add
add
scas
add
fisubr
add
shr
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
