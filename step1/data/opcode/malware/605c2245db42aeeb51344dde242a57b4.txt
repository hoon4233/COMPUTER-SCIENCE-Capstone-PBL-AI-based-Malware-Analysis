fmul
in
fidiv
push
clc
dec
push
push
ins
xor
cld
add
jmp
mov
loopne
adc
push
mov
xchg
sub
shl
sub
and
adc
sbb
jb
cmp
and
std
xchg
test
mov
mov
push
mov
mov
rcr
xchg
mov
add
xchg
imul
ja
(bad)
je
imul
je
(bad)
sbb
sub
mov
outs
sub
lea
dec
push
out
sbb
pop
jo
mov
pusha
mov
cmc
jno
cmps
sub
cld
jg
jmp
push
hlt
retf
mov
mov
loope
in
dec
adc
and
out
fadd
jmp
fldenv
adc
cmp
adc
jnp
xchg
or
retf
lods
mov
jns
adc
adc
sti
ror
sub
push
movs
push
and
ja
aaa
jg
ins
mov
cmps
inc
jl
pushf
jo
lods
cmp
ficom
pop
movs
and
or
adc
xor
jmp
cli
jnp
mov
retf
sbb
mov
dec
test
dec
psadbw
sti
mov
mov
clc
lds
enter
push
lods
loopne
or
push
mov
xchg
xor
and
jae
int
sahf
cmp
pop
jo
mov
cmp
push
call
pusha
lea
ja
call
mov
lea
call
bt
clc
push
stc
pusha
cmc
mov
push
cmc
call
xchg
call
or
sbb
mov
push
sbb
dec
push
xchg
push
shl
jnp
aaa
add
or
and
mov
pushf
cld
std
inc
add
xchg
pop
pusha
fcomp
sub
pop
or
mov
test
sub
ss
ss
add
pop
dec
and
mov
stc
ja
fiadd
mov
pop
or
lods
push
aam
loop
push
stos
cmp
xchg
mov
mov
test
adc
xor
jg
xlat
shr
jo
pushf
out
call
pop
sub
cdq
sbb
inc
dec
scas
test
cs
int
sub
test
and
jmp
push
xchg
arpl
cs
sub
mov
xor
or
push
ins
cmp
sahf
mov
jne
sbb
mov
or
adc
xchg
sbb
mov
or
test
les
clc
mov
imul
iret
xchg
pop
pushf
jmp
mov
push
push
cwde
mov
inc
inc
push
xlat
adc
mov
test
cmp
pushf
cmp
not
test
cmc
stc
sub
cmc
mov
bt
call
mov
shl
bsf
xchg
btr
mov
shl
movsx
lea
bswap
movsx
mov
mov
rol
mov
sbb
not
dec
dec
add
setbe
pusha
jmp
jmp
je
pusha
pusha
adc
mov
pushf
lea
jae
setbe
pop
movzx
pop
not
adc
cmp
shld
mov
pushf
cmp
not
bswap
mov
lea
jns
mov
jmp
stc
and
and
retf
xchg
add
xchg
jmp
jbe
ret
add
test
adc
(bad)
add
mov
and
fwait
in
dec
lods
pop
idiv
(bad)
repz
loopne
pop
mov
ss
xchg
cmp
addr16
mov
cmp
repnz
jmp
push
push
cmc
ror
jmp
lea
je
clc
cmc
cmp
push
push
pushf
pusha
lea
je
pushf
pushf
lea
jmp
pushf
mov
movsx
pop
push
push
ret
mov
(bad)
dec
sub
xchg
mov
sti
shl
dec
jnp
jnp
pop
push
inc
or
xchg
jmp
int
lods
jo
cmp
fistp
and
mov
mov
xchg
xlat
sub
addr16
and
stos
aad
out
sbb
pop
aaa
sbb
scas
leave
loope
jbe
sub
sbb
inc
jecxz
int3
lods
push
fmul
or
mov
fcom
fldenv
mov
inc
jmp
movzx
mov
setbe
jmp
mov
cwde
jmp
cmp
call
pushf
rep
setnp
lea
push
mov
jmp
mov
cmp
cmp
cmp
add
pushf
mov
stc
call
movzx
bt
btr
clc
mov
pusha
push
clc
test
add
cmc
mov
pushf
cmc
clc
bt
test
jmp
pusha
lea
jb
stc
or
test
inc
mov
stc
push
pusha
sub
pusha
lea
jne
setle
mov
jmp
call
lea
je
cmc
lahf
xor
rcl
mov
pushf
add
shld
inc
mov
dec
btc
bsr
shr
btr
rcl
mov
mov
clc
stc
or
mov
jmp
lea
call
pusha
lea
jp
adc
jmp
call
not
xor
clc
mov
pushf
pusha
test
cmp
call
pushf
pusha
jmp
push
out
jae
pop
stc
jnp
fcomp
add
mov
jecxz
jge
adc
(bad)
mov
repnz
std
jmp
in
jb
pop
loope
cmp
lock
fld
xchg
arpl
sbb
add
jl
pop
aad
out
bound
repnz
dec
into
jns
mov
xlat
lods
gs
aam
in
(bad)
pop
add
lahf
daa
inc
or
mov
sub
cmp
call
mov
push
sbb
pushf
jmp
sub
clc
jmp
imul
push
push
add
mov
push
mov
lea
jmp
mov
push
pop
pushf
push
ret
test
push
pop
mov
cmp
call
call
stc
mov
pushf
cmp
shl
pushf
mov
stc
cmp
add
mov
lea
jmp
lea
jb
test
clc
stc
jmp
mov
lea
je
cmc
pusha
add
pushf
cmc
cmc
cmp
call
bt
mov
setnp
rol
sbb
mov
shl
mov
mov
mov
test
or
mov
jmp
lea
pushf
pushf
pusha
lea
call
call
pushf
stos
pushf
push
pusha
lea
jmp
cwde
sbb
mov
lea
not
setns
lea
setl
pushf
lea
mov
pusha
jmp
call
dec
push
push
inc
push
xor
fs
ins
add
repz
sbb
add
jbe
imul
stos
sub
or
jmp
nop
addr16
pop
push
inc
std
lahf
lahf
lahf
outs
ds
ss
out
or
movs
xor
(bad)
ficom
adc
or
mov
bt
add
test
mov
movsx
btr
and
mov
cmc
cmp
pusha
push
lea
je
jbe
setne
bsr
neg
bt
mov
movsx
add
ror
mov
lea
bsf
shl
add
dec
mov
btc
bsf
mov
jmp
ret
pushf
pop
push
aas
hlt
in
or
push
cmp
push
adc
ja
mov
in
jge
jno
jb
dec
out
push
inc
add
pop
sbb
sub
cmp
lock
pop
sti
(bad)
pop
nop
push
jns
jne
jecxz
test
mov
sbb
nop
sbb
movs
ja
aas
and
popf
into
test
fist
pop
repnz
and
jge
and
psllq
sti
dec
icebp
and
nop
repz
jo
scas
cmp
fld
cmp
or
inc
movzx
lea
lea
pushf
lea
call
jnp
pushf
pushf
lea
jae
pushf
lea
pusha
lea
call
push
mov
lea
jb
neg
or
and
aam
mov
cmp
pushf
cmp
shl
pushf
add
call
bswap
sbb
setp
sets
lea
setl
mov
jmp
cmp
bt
cmp
push
pusha
pusha
cmp
call
mov
adc
call
mov
mov
push
mov
push
push
ret
cmp
cmp
push
mov
jmp
lea
ja
jmp
mov
popa
repnz
repz
movs
cmp
sub
mov
and
jo
add
add
dec
pop
shl
mov
stos
dec
or
test
push
psubsw
cmp
cmp
aam
xor
push
jns
xchg
imul
sub
sub
xor
mov
mov
enter
and
jge
mov
rcr
mov
lea
cs
sahf
xor
retf
das
cmp
adc
mov
shl
jl
and
imul
jle
addr16
sub
adc
or
push
daa
in
rcr
arpl
(bad)
(bad)
je
mov
fcom
fadd
dec
jmp
push
adc
cdq
add
jbe
inc
inc
xchg
cmp
or
sbb
push
sbb
lea
sub
xor
inc
in
push
cmp
test
popf
push
pop
fistp
mov
ins
sub
mov
mov
imul
es
inc
and
mov
lock
mov
adc
outs
adc
call
mov
jmp
jmp
mov
mov
mov
jmp
inc
je
cld
mov
pop
out
dec
enter
iret
int
xchg
mov
outs
push
lea
jae
and
jae
cmp
int3
xchg
sub
sti
add
out
pusha
xchg
mov
sub
pop
movs
stos
xchg
hlt
cdq
add
stos
ret
cmp
sub
sub
int3
outs
jmp
xor
xor
sub
xor
sub
hlt
mov
push
pusha
iret
movs
out
mov
mov
push
ror
xor
lahf
jne
jnp
inc
add
pop
jmp
sub
rol
sbb
push
aas
and
or
int3
(bad)
add
(bad)
inc
lods
xor
push
push
and
mov
int
into
add
or
sbb
call
cmp
mov
dec
clc
jnp
ret
(bad)
int3
cmp
out
rol
push
or
dec
out
xchg
and
xor
push
mov
call
dec
std
retf
mov
fabs
in
jle
ficomp
jns
cmp
jne
sub
jl
aad
test
jmp
addr16
outs
dec
or
and
call
add
rcr
adc
mov
imul
call
adc
(bad)
xor
mov
(bad)
(bad)
mov
lea
pop
xchg
dec
xchg
push
fcom
cmp
les
popa
and
loopne
sbb
jnp
(bad)
stc
das
popa
retf
test
mov
retf
arpl
ret
mov
sub
(bad)
xchg
loopne
inc
daa
or
adc
or
jae
lea
jb
test
cmp
pusha
pusha
call
push
pushf
push
mov
lea
jb
cmp
pushf
pushf
bt
cmp
jmp
lea
jne
xor
mov
stc
push
cmc
add
jmp
movsx
mov
pushf
bswap
lea
pusha
push
mov
mov
lea
jg
pusha
push
mov
mov
pusha
push
ret
bt
cmp
pusha
call
das
sar
mov
xchg
aaa
mov
sub
mov
add
add
push
cli
outs
(bad)
test
fimul
sbb
mov
pop
mov
xchg
or
xchg
in
push
push
(bad)
aad
mov
cs
xchg
loopne
xlat
das
(bad)
sti
sbb
(bad)
aad
xor
test
mov
mov
xor
xchg
mov
sar
add
call
sub
rcl
test
bswap
adc
add
bswap
cmc
mov
neg
rcl
adc
mov
push
repnz
pusha
lea
jne
push
pusha
mov
push
call
mov
shr
mov
stc
pushf
bt
bt
cmp
push
lea
jbe
inc
mov
bswap
add
call
add
clc
test
mov
push
test
mov
lea
je
jmp
call
sbb
jmp
call
call
cdq
pop
sbb
push
mov
pushf
daa
dec
neg
mov
jmp
lea
jmp
sbb
push
repnz
sbb
loope
iret
rol
xlat
loope
sbb
(bad)
pop
mov
fs
je
push
in
out
test
cmc
(bad)
fst
cmp
test
loopne
mov
jp
push
push
mov
popa
add
loopne
fisttp
test
dec
retf
pop
xchg
repnz
les
adc
out
(bad)
push
int3
sbb
push
add
pop
mov
adc
neg
mov
inc
and
out
cld
in
push
pushf
lea
jmp
push
stos
pusha
lea
jmp
lea
jne
cmp
shl
mov
jno
pushf
cmc
add
bt
bt
call
push
pusha
mov
call
call
nop
sub
mov
sti
add
push
popf
dec
mov
stc
xor
fnsave
cmps
push
or
enter
push
imul
sbb
inc
jns
push
fisttp
inc
outs
scas
ins
mov
jl
sbb
push
das
enter
mov
pop
shr
or
leave
inc
sub
ds
and
outs
sub
cmc
mov
repnz
push
test
xor
push
(bad)
ins
push
ja
and
mov
jae
mov
xchg
cmp
jmp
cwde
ins
inc
ja
(bad)
or
div
sub
jmp
push
pushf
mov
jmp
cmc
test
call
lea
je
cmp
test
push
test
or
pusha
call
pushf
pusha
mov
mov
stos
push
pushf
pushf
lea
jmp
mov
push
pusha
lea
ja
rcl
sbb
sub
clc
ror
add
stc
bt
mov
not
neg
neg
mov
stc
pusha
repnz
call
push
lea
ja
shl
call
add
add
cld
and
ret
inc
xchg
(bad)
mov
ret
pop
shr
jge
pusha
cmp
jae
or
in
mov
shl
pop
in
pop
cwde
into
arpl
sbb
xchg
mov
dec
pop
unpcklps
or
xchg
or
add
pusha
clc
jmp
pusha
add
pushf
movzx
rol
bsr
bsf
pushf
mov
stc
mov
add
pushf
bt
mov
pushf
jmp
pop
dec
arpl
jnp
mov
sub
pop
sub
jecxz
ret
sar
int
mov
mov
mov
iret
(bad)
scas
mov
mov
push
ror
es
xchg
inc
inc
lds
jle
and
ss
push
jmp
retf
fistp
mov
pushf
sar
cmp
outs
inc
xor
mov
pop
lahf
inc
test
bound
sub
mov
out
xor
cmps
sub
dec
hlt
mov
pop
imul
mov
test
jge
cmp
or
push
out
lods
outs
inc
(bad)
stos
inc
jnp
mov
jmp
and
in
nop
sub
pop
jle
loop
dec
into
hlt
rcl
mov
mov
int3
ficomp
cmps
dec
mov
add
div
fwait
retf
sbb
add
add
repz
or
mov
(bad)
or
ins
or
jmp
sbb
or
cmps
lea
ja
inc
sub
rcl
clc
add
shr
btc
rcl
btr
mov
call
push
sub
push
mov
pushf
cmp
jmp
push
push
mov
jmp
lea
jne
shl
shrd
seta
sub
sbb
bswap
bswap
xor
mov
sub
call
jmp
jmp
call
sub
clc
call
mov
call
xor
cmc
call
retf
dec
popa
inc
sbb
ror
repnz
(bad)
mov
cdq
and
enter
jl
mov
leave
sub
repz
push
fist
add
cmp
push
push
ss
inc
sar
sbb
inc
bsf
out
dec
adc
cmps
pushf
xor
and
aaa
rcr
ds
push
adc
xchg
retf
cmps
sahf
mov
data16
or
jno
fs
call
call
call
clc
mov
ror
cmc
stc
bt
call
rol
jmp
stc
stc
pushf
lds
push
ret
ror
div
aad
outs
sahf
lea
fbstp
mov
xchg
or
mov
fmul
adc
popa
lahf
mov
dec
pop
mov
adc
je
stos
int3
mov
(bad)
cmp
add
pop
mov
mov
xor
mov
mov
pop
sbb
and
cdq
sub
mov
xchg
pop
ret
push
or
xor
lods
stos
ja
in
dec
sub
lahf
sub
fiadd
retf
add
stos
inc
fs
int
mov
in
idiv
ror
fmul
std
(bad)
add
rol
mov
mov
arpl
out
push
pop
cmp
lods
sub
mov
aam
bound
call
movs
and
call
inc
mov
mov
int
stos
sti
mov
mov
es
xor
shl
sbb
enter
inc
sub
jne
cs
(bad)
stc
push
frstor
repnz
mov
ds
fld
lea
lock
ficom
pusha
add
adc
cmp
cmp
adc
popa
inc
cmp
and
mov
push
pop
and
fwait
iret
push
lahf
jl
jmp
mov
mul
xchg
movzx
test
adc
and
retf
jle
push
fsubr
adc
pop
(bad)
adc
bound
pusha
inc
ret
pop
adc
xor
aam
sahf
fs
lahf
sbb
movs
push
les
sbb
mov
test
jge
jno
cmc
call
cmps
add
mov
xchg
pop
int
add
push
dec
mov
jmp
ret
jbe
jl
fmul
mov
jmp
aas
pop
dec
adc
mov
jmp
xchg
add
ret
mov
jp
and
mov
dec
popf
dec
sbb
(bad)
cmp
ds
ins
add
outs
stc
aas
mov
adc
adc
dec
or
fcomip
sub
pop
xor
ins
adc
mov
pop
outs
and
cmp
xchg
cmp
push
push
out
dec
sub
or
mov
stos
icebp
bound
add
pop
push
adc
cmp
cmc
aam
inc
ficomp
cli
mov
scas
mov
std
aas
pusha
in
add
jnp
out
popf
mov
jmp
sbb
dec
push
or
and
sbb
xor
mov
pop
btr
mov
and
das
or
fstp
(bad)
les
xchg
cwde
xchg
bound
cmp
ficom
sbb
cmps
mov
mov
arpl
sti
loope
aas
xor
xchg
lods
dec
add
jl
cmp
push
out
cs
mov
ja
add
stos
(bad)
ret
popa
mul
arpl
or
arpl
inc
mov
pop
imul
inc
push
mov
sub
dec
inc
push
push
inc
or
cmp
xor
sti
mov
rcr
dec
(bad)
mov
fwait
cwde
scas
xor
sahf
ins
callw
dec
mov
jl
test
fisttp
jmp
stos
mov
pop
repz
popa
retf
arpl
push
mov
push
pushf
adc
pop
jmp
pop
aaa
jl
jmp
test
sub
dec
enter
inc
rcl
add
pop
pop
call
ror
(bad)
scas
push
dec
jnp
lock
pushf
jnp
hlt
jg
cmc
leave
xor
daa
sub
xchg
sbb
and
popf
aas
inc
dec
mov
int
xchg
dec
fisub
push
fyl2x
ja
xor
int3
dec
jae
popf
mov
xchg
arpl
call
add
stos
enter
dec
push
jb
mov
mov
cmp
icebp
push
aas
and
push
out
xchg
cmp
mov
mov
sbb
or
cmps
pop
bound
ret
das
mov
push
mov
xchg
xor
dec
sub
sub
icebp
mov
ret
ins
ror
movs
adc
dec
cmp
adc
shl
mov
adc
(bad)
xchg
int
shr
movs
jle
in
rcr
test
(bad)
and
add
pusha
push
jge
test
lods
imul
retf
mov
pop
outs
sahf
loop
xor
shr
mov
loop
push
mov
scas
hlt
xchg
outs
jno
or
dec
imul
es
in
xor
cmps
xchg
stos
sub
pop
scas
cdq
mov
(bad)
shl
mov
cs
cmp
sbb
les
(bad)
rol
movs
addr16
retf
stos
(bad)
int
sbb
jns
lds
cmps
dec
fadd
mov
mov
push
fisttp
or
inc
pop
retf
mov
jo
xor
in
cmpxchg
jmp
ins
mov
xchg
pop
out
retf
adc
shr
jl
fs
cld
xchg
sub
push
or
ret
(bad)
(bad)
fs
or
and
movs
cmp
out
mov
jae
xor
adc
pop
leave
mov
mov
push
mov
xor
enter
out
pop
and
jmp
inc
aaa
neg
cmc
(bad)
push
cmp
fidivr
rcl
cs
sub
ins
adc
sub
cmc
xor
sub
mov
or
loopne
mov
sbb
sti
push
mov
fsub
mov
and
mov
sub
lds
cmp
adc
es
lock
test
mov
leave
and
dec
adc
scas
sbb
jmp
add
out
sub
arpl
lock
mov
lods
rep
bound
outs
push
pop
dec
stc
popf
sbb
and
lds
lods
cld
mov
dec
pop
push
test
pop
sub
push
jge
loop
sub
cmp
jge
sti
iret
test
mov
je
inc
ret
sbb
cmps
mov
lods
pop
jnp
push
fs
cmp
jne
scas
outs
mov
pushf
hlt
mov
scas
push
mov
jb
aas
pop
adc
xor
mov
and
test
dec
jb
in
clc
adc
xchg
pop
push
xor
clc
adc
ficomp
and
inc
mul
push
or
add
(bad)
bt
cmp
sub
jmp
lea
call
cmc
call
lea
jb
push
jmp
not
mov
pushf
pushf
jmp
jmp
jmp
movs
sbb
div
sahf
cmp
xchg
mov
sahf
rol
out
pop
inc
fneni(8087
xchg
ret
mov
lds
lods
jecxz
xchg
test
sbb
aam
mov
push
popf
mov
dec
shl
popf
outs
xchg
mov
adc
rol
and
add
jp
jnp
add
jecxz
int3
movs
lahf
loope
push
sub
dec
push
sub
outs
add
sar
mov
xchg
outs
xchg
fcomp
mov
not
mov
call
mov
pop
inc
movzx
cmc
xchg
rcr
pushf
push
seto
lea
rcl
movsx
push
shr
mov
push
not
jmp
bts
mov
pushf
add
jmp
pushf
lea
pushf
pusha
mov
pushf
call
push
adc
bt
cmc
sub
bt
shl
clc
cmc
stc
clc
mov
clc
pusha
cmp
call
stos
pushf
pushf
push
pushf
lea
jmp
cmc
pusha
shl
ror
mov
jmp
not
pushf
btc
not
mov
test
bt
and
mov
mov
bt
add
push
lea
jmp
lea
ja
push
pusha
lea
jb
stc
call
clc
pushf
push
cmp
pusha
push
jmp
mov
mov
push
push
ret
pushf
pusha
mov
call
push
pop
test
test
test
test
cmp
push
call
call
lahf
lea
pushf
pusha
pusha
lea
call
pushf
call
setg
mov
shl
add
pushf
call
lea
ja
stc
call
loope
and
popa
loope
mov
xor
aam
push
cmc
xor
popf
in
and
jmp
imul
rcr
mov
mov
arpl
jle
test
sub
push
mov
test
cmp
dec
dec
adc
shl
adc
and
imul
outs
outs
pop
cmc
cmp
jbe
cli
imul
mov
mov
sbb
mov
bswap
mov
call
pusha
pushf
pushf
lea
jb
dec
aaa
mov
push
stc
mov
sub
pusha
mov
push
sets
mov
push
lea
jle
pushf
stos
push
mov
push
lea
jmp
cmp
je
push
pusha
lea
jb
call
add
mov
call
add
pop
ret
lea
jae
not
rol
pop
aas
xadd
shl
pop
btc
cmp
mov
movzx
bsr
sar
cmp
lahf
jmp
lea
pushf
call
sbb
icebp
and
(bad)
cli
or
ins
es
inc
cmps
loop
dec
ins
mov
rcr
push
pop
loopne
lds
mov
mov
add
xchg
mov
mov
cmps
push
fadd
add
das
in
mov
aam
sub
sub
jno
(bad)
cmp
leave
sub
rcr
test
std
pop
stos
pop
mov
aad
add
push
sbb
je
push
mov
push
push
mov
lea
jmp
mov
clc
cmc
add
bt
mov
cmp
call
sti
sub
test
fstp
pop
loop
inc
in
das
xchg
or
pop
and
call
or
mov
sbb
adc
jns
mov
cwde
inc
or
mov
dec
push
out
mov
test
cmp
in
mov
idiv
xchg
iret
in
xchg
jns
scas
mov
adc
leave
jb
iret
cwde
cmp
jmp
out
add
das
jl
mov
ficomp
cmc
adc
mov
es
cld
ret
out
dec
jbe
(bad)
clc
dec
and
adc
xchg
cmps
(bad)
movzx
mov
call
lea
je
stc
cmc
sub
pushf
pushf
cmp
pusha
call
jmp
lea
je
jmp
push
jmp
pushf
lea
ja
jmp
bt
cmp
jmp
xchg
enter
shr
dec
lods
or
scas
iret
loop
push
pop
loopne
add
jne
das
and
or
ds
adc
outs
jl
jge
sub
ficom
in
fmul
and
rcr
pop
push
neg
push
xchg
test
sbb
shl
inc
scas
icebp
fcmovnbe
mov
es
jae
int
mov
add
or
xchg
sub
pushf
pop
mov
pop
or
pop
pop
rcr
xchg
dec
xor
sub
mov
daa
or
ds
cdq
push
push
mov
aas
mov
push
or
pushf
add
cmc
std
out
jg
push
cmps
and
fdiv
jae
popf
lea
mov
xchg
std
adc
mov
dec
mov
cld
sti
neg
out
mov
(bad)
sar
pop
bound
cld
pusha
(bad)
ret
pushf
loope
int
enter
in
es
sar
fisub
dec
dec
pop
mov
mov
inc
mov
imul
and
mov
jmp
pusha
cmp
mov
lea
ja
pusha
xor
call
lea
call
cmp
jmp
bt
sub
jmp
not
mov
test
shr
mov
xor
rol
stc
add
mov
cmc
cmc
cmp
pushf
lea
jb
bt
sub
adc
lahf
mov
bt
not
adc
shr
not
add
test
mov
aas
dec
add
lea
call
clc
repnz
push
pusha
push
lea
jne
xadd
shld
xadd
mov
neg
shld
bswap
jne
sub
btr
rcl
pushf
lea
stc
pusha
cmp
sub
call
lea
call
pusha
mov
call
jmp
out
js
in
pop
inc
mov
push
je
fwait
jno
mov
push
clc
(bad)
jecxz
int
jl
jmp
pushf
hlt
sbb
jnp
adc
out
pop
mov
je
sub
mov
jp
daa
div
aaa
rol
(bad)
add
pop
int
popf
sub
nop
push
outs
jo
mov
repz
(bad)
mov
mov
or
fst
movs
shr
inc
das
sub
rol
js
aas
and
cs
stos
lods
mov
js
ins
fisubr
xchg
sbb
sub
nop
adc
add
sbb
jecxz
pushf
pop
jge
mov
cdq
pop
and
fld
ins
push
or
(bad)
ins
lods
aaa
jge
add
fimul
cmp
dec
and
push
adc
and
dec
popa
cmp
loope
pushf
lock
jge
das
push
jnp
and
or
adc
mov
fcmove
mov
shr
cmp
add
add
fs
je
pusha
add
pusha
test
lea
jb
push
cmp
jmp
fcmovnb
scas
ins
imul
(bad)
leave
xor
jnp
mov
adc
das
jl
jmp
mov
jg
and
cld
xchg
out
ss
sub
lea
xchg
sub
xor
inc
jmp
jmp
in
pop
lea
jnp
mov
xor
sub
adc
xchg
add
cmc
movsx
sub
lea
pushf
mov
mov
bsf
rcr
mov
xadd
call
jmp
lea
jne
seta
mov
jge
push
bswap
bswap
mov
push
lea
ja
lea
call
imul
call
cmp
pop
jle
out
lss
ins
sub
sbb
mov
mov
ja
dec
cmc
lock
jg
pop
xlat
mov
mov
mov
sbb
iret
xor
popa
rol
xor
fwait
mov
and
addr16
and
sub
dec
daa
das
jmp
aaa
ins
mov
jae
dec
retf
int3
mov
push
sub
push
cmp
mov
or
mov
jne
adc
seta
xor
mov
add
sub
cmp
inc
push
pop
mov
pusha
push
sub
pushf
push
push
call
push
xchg
jmp
cmp
push
lea
ja
sbb
ror
mov
or
sub
dec
neg
ror
add
sbb
mov
clc
stc
cmp
sub
mov
jmp
int3
inc
std
pop
add
pop
xor
jb
test
test
rcr
pop
ret
adc
lock
stos
pusha
outs
sub
pushf
bound
push
test
mov
jp
(bad)
sete
adc
sahf
cmp
repz
mov
xchg
jmp
in
fs
dec
inc
sbb
and
mov
mov
adc
js
in
dec
call
sub
xor
sbb
in
add
call
cmp
mov
ret
mov
bt
btc
push
mov
cmc
rcr
lea
mov
adc
shld
movzx
movsx
sub
pushf
pusha
mov
xor
bsr
push
mov
shl
jmp
popa
call
push
cmps
cs
adc
xchg
je
jl
pop
jecxz
stos
jmp
adc
(bad)
sar
loopne
push
pop
and
pop
lahf
jg
adc
aad
jo
jge
nop
inc
or
sti
xor
push
sahf
rcr
popa
pop
adc
jmp
sub
adc
jae
push
imul
push
push
or
pop
lea
call
pusha
pushf
lea
jb
and
bswap
cmp
inc
jmp
sbb
setge
add
stc
shl
shl
sub
sub
not
shr
bts
sar
mov
test
movsx
dec
shr
add
not
pushf
shl
shld
add
shl
cmp
mov
pushf
mov
shr
jmp
sub
push
popf
pop
out
add
sbb
pop
cmp
out
daa
push
lock
push
into
sbb
in
lds
jnp
loope
iret
into
aas
lea
adc
imul
popf
push
nop
jmp
xchg
ficomp
inc
gs
dec
fld
mov
adc
and
or
push
mov
aaa
add
in
jmp
(bad)
retf
inc
mov
out
jne
sub
or
in
not
fldcw
cld
pop
test
jmp
stos
jns
pop
xor
mov
nop
mov
lock
call
pusha
push
in
outs
xor
in
or
fcomp
div
jle
mov
lea
js
push
jmp
ss
xchg
push
adc
ins
mov
xchg
ret
dec
test
fdivr
arpl
addr16
cwde
test
jp
jmp
stos
cmp
adc
jge
test
out
imul
ret
or
stc
shl
movs
dec
fisttp
in
push
jmp
and
mov
inc
sar
loopne
lds
imul
inc
pop
sbb
inc
stos
ss
pop
ds
fsubr
in
inc
push
sub
add
and
(bad)
fwait
cmps
jbe
sbb
cli
fwait
mov
mov
enter
nop
imul
xchg
xor
and
retf
in
call
add
xchg
jmp
lea
ja
push
pushf
jmp
mov
pushf
mov
push
pusha
lea
je
lea
movzx
cwde
lea
push
pusha
jmp
call
pushf
push
pop
mov
cmp
bt
cmp
call
mov
lea
jb
clc
stc
push
pushf
cmp
mov
lea
jae
mov
mov
sbb
or
shrd
bt
mov
add
rcr
movsx
xor
mov
cmp
bt
xor
bt
repnz
pushf
call
mov
push
pushf
lea
jmp
lock
push
lock
ret
cmp
jno
test
xor
dec
and
push
sub
cdq
call
and
retf
test
mov
nop
cmp
je
mov
mov
sub
popa
(bad)
fcom
imul
shl
mov
repz
ds
movs
lea
retf
and
jge
std
call
sub
mov
mov
test
movs
das
or
test
test
sar
sbb
add
sub
adc
fs
xor
sub
xchg
cmps
add
out
data16
cmp
mov
stos
xchg
cmps
dec
pop
dec
and
mov
mov
daa
jp
mov
inc
(bad)
in
cli
and
lahf
cmc
push
dec
aam
jb
hlt
add
cli
(bad)
cmp
push
sbb
add
fidiv
mov
jmp
cmp
mov
dec
pop
add
cmps
xor
sub
cmp
aam
movs
cmp
cwde
inc
not
mov
mov
idiv
or
jp
(bad)
jbe
sbb
rcl
mov
or
int
sahf
adc
mov
push
or
int3
fidiv
sbb
sbb
add
jo
push
cmp
cmp
and
xor
push
mov
retf
dec
loop
mov
mov
not
call
pusha
lea
pusha
lea
call
pusha
pushf
lea
jb
or
sub
movzx
lea
shr
btr
bswap
imul
shr
lea
shrd
inc
movsx
push
call
lea
je
and
ror
mov
bt
movsx
and
add
neg
lea
bsr
mov
cmc
test
call
stc
stc
jl
clc
clc
fidivr
clc
mov
push
int3
dec
adc
rcr
ror
mov
in
jle
es
lahf
dec
add
movs
movs
outs
jle
jno
cld
ret
ficom
shr
repz
add
xor
push
iret
fisubr
sub
int
or
(bad)
ss
mov
and
mov
xlat
(bad)
adc
mov
mov
ins
jmp
js
add
lods
fwait
iret
adc
aaa
push
pop
test
call
sbb
mov
sub
xchg
shl
pop
cmc
enter
mov
adc
mov
retf
xchg
xlat
test
sub
popf
shr
cmp
cdq
or
or
add
adc
xchg
icebp
xchg
in
push
out
out
mov
stos
pop
add
mov
mov
inc
dec
or
retf
cmp
mul
cdq
mov
pushf
cmp
push
xor
mov
pop
(bad)
jo
jae
out
jp
mov
and
std
ror
iret
mov
mov
dec
cmc
xchg
out
add
xchg
(bad)
fsubr
pop
xchg
mov
jmp
imul
sub
repnz
push
xchg
jae
xor
ss
fwait
sub
xchg
lods
pusha
jg
ret
sbb
cmp
test
inc
add
mov
shl
ror
aas
mov
sub
icebp
jg
jg
gs
add
jmp
jne
inc
sti
add
mov
sub
sbb
jecxz
push
ins
push
add
mov
leave
not
pop
ds
jb
lea
inc
cmp
js
in
cmp
sub
call
mov
jle
out
sub
jb
sub
mov
retf
add
les
jns
mov
add
cmp
sub
pop
test
pushf
cmp
mov
pop
pop
test
pushf
push
pop
imul
(bad)
call
dec
repnz
xchg
mov
nop
outs
test
test
cmp
ins
mov
mov
pop
aad
inc
jno
and
pop
rcl
arpl
and
imul
add
enter
xor
stos
gs
jno
out
mov
pop
adc
stos
in
inc
das
dec
test
sar
fwait
mov
inc
fdiv
xor
adc
shl
push
jp
idiv
loopne
daa
cs
stos
mov
jl
sub
fwait
mov
adc
inc
cwde
mov
movs
adc
into
xchg
or
into
mov
clc
rcr
pop
loopne
xor
pusha
xor
ror
outs
ins
sbb
adc
ret
mov
jl
xor
add
cmps
nop
dec
jno
retf
dec
out
xor
neg
mov
rcl
and
call
cmp
adc
fimul
outs
cli
inc
and
fnstcw
jbe
sub
adc
in
or
idiv
mov
sahf
into
sahf
jb
ja
mov
mov
pushf
shl
loope
scas
jmp
shl
xchg
(bad)
aaa
jo
add
or
jmp
loopne
fisub
dec
add
pop
mov
or
call
mov
mov
dec
and
lods
ret
pcmpgtd
mov
dec
hlt
mov
into
div
pop
push
mov
mov
int3
push
iret
inc
xor
mov
jo
icebp
push
sub
add
lods
dec
jmp
enter
test
inc
add
xor
pop
cmp
jmp
mov
iret
enter
dec
dec
sbb
dec
inc
out
inc
sub
int
jns
ss
shr
jl
cmps
outs
inc
stos
lods
fild
pop
mov
xchg
adc
mul
inc
bound
pop
arpl
sar
(bad)
jb
inc
xlat
mov
inc
pop
add
push
push
mov
mov
out
out
inc
xor
adc
add
xchg
mov
inc
sub
arpl
jmp
lods
fs
inc
sbb
inc
jno
xchg
jb
push
lea
mov
and
stc
mov
shl
mov
ror
inc
adc
test
out
mov
mov
pop
loope
push
xchg
enter
push
xchg
sbb
mov
pop
jnp
inc
(bad)
xchg
sub
pop
xor
jmp
std
mov
dec
xchg
lahf
fs
arpl
add
sbb
retf
mov
scas
lods
or
push
push
jae
neg
lods
stos
leave
xchg
aaa
mov
imul
or
(bad)
or
jns
inc
scas
xor
sbb
jno
aam
divps
daa
adc
push
mov
jg
out
loop
into
jns
data16
add
(bad)
sbb
xchg
(bad)
icebp
js
push
cdq
fadd
in
jg
in
retf
and
(bad)
loop
loopne
int
sbb
outs
xchg
xor
sti
inc
dec
inc
not
scas
jb
dec
inc
cld
out
sbb
push
test
dec
jbe
push
sub
sti
or
cdq
or
rcl
or
(bad)
lods
xor
in
in
adc
inc
sub
jb
and
popa
mov
and
loopne
scas
hlt
lods
pushf
xchg
hlt
imul
mov
icebp
loop
sub
vpmacsswd
dec
xchg
aaa
fdiv
call
test
movs
addr16
mov
lock
ror
pop
add
imul
push
jle
add
mov
daa
sub
aaa
ins
addr16
in
push
pushf
and
inc
arpl
mov
sbb
push
mov
push
daa
icebp
bound
pop
push
jl
pop
dec
aam
gs
sbb
jae
adc
push
dec
mov
sbb
mov
adc
inc
mov
inc
xchg
mov
mov
bound
imul
add
mov
shr
xor
icebp
cmc
xchg
sbb
pop
fwait
xor
popf
jl
mov
(bad)
pop
inc
sbb
mov
mov
cmp
sbb
repnz
in
push
retf
xacquire
(bad)
xchg
icebp
cmp
bound
movs
stos
mov
call
in
std
pop
inc
cwde
or
xchg
pop
jae
cmps
data16
cmp
ins
jmp
push
dec
(bad)
in
sbb
inc
mov
adc
imul
cmp
movs
aas
sbb
popf
cli
int3
push
sbb
sbb
mov
sbb
jno
fsubr
sub
xor
dec
pop
nop
jo
cmp
dec
xchg
imul
repnz
lock
stc
mov
mov
jp
xchg
jne
mov
ins
adc
in
nop
aad
pop
imul
rol
arpl
nop
or
fcmove
aad
or
or
lock
push
adc
imul
jo
fild
adc
in
fidivr
xchg
clc
sbb
imul
push
add
pop
fnstsw
popf
jmp
out
(bad)
retf
jns
push
fidivr
mov
mov
out
or
imul
fstp
mov
inc
xor
ins
outs
lods
jbe
lea
pop
pushf
xchg
popa
push
or
scas
(bad)
push
jle
and
pop
stos
leave
and
pop
and
imul
shl
sbb
(bad)
mov
fst
cwde
adc
inc
stos
inc
sbb
wbinvd
(bad)
and
adc
fs
sub
sahf
push
jmp
aaa
mov
enter
out
xchg
xchg
xor
lahf
pop
ins
ret
jne
inc
add
cmp
mov
inc
sub
sti
pop
iret
add
arpl
inc
mov
out
pop
loopne
mov
pop
cmp
jle
xchg
repnz
fs
push
(bad)
dec
out
mov
jmp
cmp
ret
fistp
or
push
push
fsubr
icebp
or
jmp
cs
push
cwde
call
jecxz
jne
xchg
cmps
xchg
(bad)
sbb
ss
test
sub
mov
(bad)
jno
scas
(bad)
adc
sbb
xchg
dec
pop
cld
lea
or
mov
dec
lahf
and
(bad)
daa
(bad)
and
gs
push
adc
and
mov
jns
mov
ret
sbb
js
sti
lods
cmp
icebp
jnp
test
mov
sub
(bad)
jmp
push
fst
inc
mov
pop
push
std
push
push
pusha
rcl
mov
sti
push
mov
xor
rcr
shr
icebp
cmp
sub
push
xchg
push
fadd
sahf
sbb
xchg
jno
xchg
movs
mov
rol
loope
ja
fidiv
cdq
cmp
xor
fbld
sbb
cmp
mov
sub
out
int3
sub
lahf
iret
or
mov
sar
jg
hlt
xchg
data16
outs
pop
sbb
pop
inc
dec
cmp
cmp
push
lods
je
mov
popa
aad
ins
call
sub
and
cmp
jo
dec
in
cmp
xchg
jo
js
fisttp
jecxz
repnz
test
dec
in
push
add
cli
jp
push
jle
scas
neg
nop
cmc
push
xchg
cdq
jbe
(bad)
imul
or
xchg
dec
xchg
fdivr
jbe
lea
aas
jg
pop
push
inc
jle
ror
arpl
mov
test
pushf
jge
cmp
cdq
and
add
mov
addr16
repnz
out
or
shl
stc
mov
shl
fdiv
sbb
ret
js
push
sub
pop
int3
xor
test
in
inc
sbb
sahf
add
bound
fnstenv
movs
icebp
adc
ins
retf
pop
leave
(bad)
cld
mov
fnsave
push
xor
div
pop
out
in
mov
fdiv
mov
jl
sbb
mov
stos
clc
mov
imul
ins
jnp
jo
popa
pop
fild
repz
adc
daa
or
inc
std
or
loope
leave
jae
add
xchg
pop
xchg
shl
addr16
daa
cmps
mov
fdivr
push
call
loop
iret
adc
lea
nop
mov
or
xchg
lahf
iret
cdq
clc
inc
div
cli
mov
test
sub
fnstsw
fiadd
retf
(bad)
icebp
mov
cmp
and
loopne
sub
jmp
or
sti
xor
loop
pop
pop
mov
adc
out
lea
mov
int
repnz
inc
pop
push
inc
daa
lahf
xor
push
ja
sti
je
mov
cmp
hlt
xchg
sbb
outs
test
xor
leave
rcl
fwait
xlat
jo
lea
(bad)
hlt
into
fcmovnu
fwait
cwde
inc
mov
xor
loopne
adc
sbb
pop
inc
fild
inc
stc
sub
jnp
mov
adc
fwait
mov
pop
add
aaa
cli
in
mov
inc
loopne
jno
sbb
pop
retf
aas
aaa
adc
(bad)
in
or
push
bswap
dec
test
sub
sub
cwde
cmp
sahf
test
stc
inc
mov
into
mov
leave
mov
ffreep
pop
sub
leave
pop
test
stos
pop
ds
popa
scas
fdiv
ins
xchg
rcl
xlat
aam
int3
push
and
add
xor
dec
cli
imul
mov
xchg
jmp
add
or
rcr
push
and
push
idiv
cdq
jmp
pop
scas
cmp
pop
cmp
hlt
mov
test
cmp
adc
jmp
bound
scas
mov
mov
or
cwde
addr16
and
dec
arpl
or
and
adc
xor
mov
jb
mov
pop
and
out
xlat
out
mov
dec
popf
mov
mov
sub
sar
sub
dec
push
mov
clc
mov
mov
loop
sub
push
xchg
sbb
jle
xchg
out
nop
adc
inc
hlt
rol
rcl
mov
sub
mov
or
push
out
jge
xor
mov
daa
sub
xchg
dec
nop
cmp
je
adc
mov
scas
jge
or
rcr
(bad)
rol
xchg
xchg
pop
and
fwait
mov
push
xchg
movs
add
icebp
lods
push
sub
imul
ins
call
stos
lahf
sbb
and
or
in
fcomp
cmc
and
clc
sub
(bad)
repz
pop
movq
jmp
adc
or
ja
or
ret
cli
es
push
add
retf
sbb
dec
sub
lea
je
loope
mov
mov
cmpxchg
mov
fistp
cmps
inc
addr16
js
imul
daa
and
xlat
out
pushf
leave
aaa
add
lds
sar
jo
xor
xchg
push
sahf
test
sub
cmp
enter
jno
sbb
idiv
inc
hlt
mov
mov
add
jno
cmp
pop
cmps
cmp
lock
mov
xchg
jmp
mov
cwde
xchg
pop
retf
jle
inc
out
push
dec
popf
(bad)
inc
sub
rol
mov
imul
fs
sbb
inc
push
outs
push
add
jns
stos
dec
rcr
movs
stc
mov
rol
sub
rcr
sbb
push
out
lea
std
mov
aad
cmp
or
popa
push
mov
mov
or
xor
dec
add
inc
cmps
pop
dec
push
or
ins
mov
mov
cmp
or
xchg
mov
dec
push
std
sub
stos
out
sub
mov
push
fcomp
mov
mov
jmp
movs
or
jnp
dec
sub
sbb
pop
mov
aas
daa
sbb
scas
dec
mov
popa
imul
push
xlat
sub
mov
lock
mov
je
and
ja
scas
adc
std
jnp
jg
cdq
add
add
cli
dec
retf
mov
or
loop
add
xchg
and
jp
mov
es
push
fstp
test
add
stos
ss
mov
cmp
xchg
xchg
push
loopne
sub
jae
je
adc
cwde
stos
push
fcom
jmp
dec
cs
(bad)
mov
sub
jecxz
movs
sbb
scas
cmps
inc
ins
mov
push
cmp
sbb
scas
iret
pop
and
fwait
inc
jl
mov
cmps
sar
xchg
jg
sete
and
xchg
sub
out
xchg
push
out
add
sub
mov
gs
loope
and
or
mov
cs
xchg
es
jle
inc
lods
lds
scas
mov
cmp
scas
lock
sbb
mov
mov
lahf
xchg
xor
push
mov
or
dec
pop
mov
shl
fsubr
push
out
cmp
dec
mov
outs
arpl
xor
pop
push
pop
xchg
adc
add
imul
inc
or
xor
inc
in
dec
adc
test
ret
jbe
xchg
stc
das
jnp
sub
adc
call
cli
mov
retf
cmp
xlat
icebp
pop
xchg
loopne
inc
cmp
test
scas
add
aas
pop
sar
cli
aas
repnz
jnp
sbb
scas
mov
sbb
leave
jmp
inc
mov
or
mov
jae
gs
xor
sub
(bad)
jbe
icebp
push
ficomp
aaa
mov
popf
inc
xchg
mov
inc
inc
sbb
mov
xlat
mov
(bad)
shl
call
pusha
mov
sub
ins
repz
in
lods
rcl
imul
(bad)
aas
pop
push
mov
mov
fiadd
jne
push
fadd
jmp
jg
jb
ins
fdiv
call
fidivr
mov
mov
out
mov
sbb
ins
retf
xor
out
fucomi
cwde
cs
sti
in
dec
pop
test
mov
jmp
jmp
retf
ja
cmp
shl
int3
inc
cmp
inc
and
xchg
popa
out
xchg
lock
xchg
jg
ror
xor
sub
inc
jl
neg
pop
mov
(bad)
cmovno
pop
inc
inc
loope
rol
loop
(bad)
adc
mov
xor
dec
je
(bad)
cmp
mov
cdq
xchg
shr
push
jnp
push
mov
iret
(bad)
xchg
enter
nop
mov
sbb
test
loop
push
jns
mov
dec
std
cs
addr16
in
pop
lock
sub
out
jnp
ins
std
sbb
jne
xor
int3
gs
stos
or
outs
in
es
push
xlat
or
movs
pop
mov
jmp
or
or
rol
mov
push
fnstenv
mov
mov
arpl
ficom
pop
mov
or
jae
data16
aam
addr16
test
scas
mov
enter
cmp
push
lods
bound
push
jmp
div
dec
aad
mov
jmp
call
or
mov
xchg
inc
mov
add
mov
loop
sar
inc
mov
mov
in
and
bound
(bad)
out
fidivr
xchg
push
and
xor
jle
push
jecxz
test
pop
xor
clc
test
(bad)
xor
inc
and
mov
mov
mov
aam
pop
fisttp
mov
and
mov
in
or
shl
or
movs
xor
mov
push
pop
add
hlt
out
mov
pop
fisttp
xor
sti
mov
or
xchg
push
xor
enter
jae
ins
(bad)
retf
push
cmp
call
ja
inc
dec
bound
shr
shl
adc
sbb
mov
push
xchg
dec
xchg
pop
aam
packuswb
nop
jns
loopne
(bad)
repz
or
jl
ins
lds
cmp
cmc
pop
out
rcr
inc
test
test
mov
mov
mov
mov
mov
cs
lea
scas
cmp
dec
or
mov
cmp
(bad)
loope
sub
(bad)
or
nop
or
mov
pop
pop
cmp
inc
and
add
pop
inc
mov
add
pop
test
pop
pop
add
or
idiv
pop
dec
je
inc
ds
stos
jae
das
nop
cmp
mov
repnz
dec
xchg
mov
xor
int
jno
mov
ja
test
cmp
aaa
movs
jle
or
jecxz
lods
bound
les
mov
aaa
inc
mov
push
lods
push
stc
pop
neg
cwde
jne
adc
adc
sbb
jmp
pushf
stc
xor
aas
dec
sbb
jbe
sub
xchg
in
lea
xchg
cmc
cmp
mov
pusha
mov
xchg
lods
pop
sbb
fdiv
adc
inc
xor
sbb
retf
dec
in
mov
das
pop
mov
pop
inc
cmp
nop
cwde
fstp
sbb
arpl
repz
leave
jae
dec
dec
sub
xlat
addr16
(bad)
rol
fcomip
aam
movs
xchg
push
dec
fsub
mov
imul
(bad)
jae
fistp
push
inc
(bad)
les
call
jle
bound
idiv
cmps
adc
out
or
and
mov
cmps
hlt
fsubr
mov
jne
(bad)
mov
mov
push
scas
ret
lods
fst
loop
js
push
add
inc
adc
adc
loope
or
mov
(bad)
xor
dec
mov
dec
mov
test
(bad)
pop
xor
push
daa
push
and
dec
pop
(bad)
stc
sub
xor
jge
lock
lock
jno
sbb
pop
shl
xlat
aam
cmps
jmp
pop
dec
fwait
or
jmp
out
or
xlat
iret
add
inc
mov
xchg
scas
sub
push
mov
mov
mov
cli
mov
das
aas
sar
mov
and
out
push
jg
xchg
pop
ficom
(bad)
jae
mov
(bad)
add
(bad)
(bad)
ins
add
push
sbb
repz
push
xchg
push
ficomp
mov
push
movs
inc
cmps
pop
sub
or
ins
lea
cmp
dec
addr16
push
mov
iret
ins
lahf
and
mov
aad
test
push
rcl
jg
push
pop
sti
xor
push
mov
scas
retf
pop
or
shr
(bad)
aad
shr
adc
mov
adc
out
cmp
push
push
and
fwait
inc
inc
add
xchg
mov
xchg
and
lods
xchg
dec
sbb
xor
dec
dec
jae
pop
test
shr
dec
arpl
jnp
int
lahf
sbb
ins
mov
jb
and
hlt
sbb
sbb
fwait
or
dec
std
xor
dec
imul
cmp
add
xchg
test
loop
mov
inc
push
mov
xchg
push
loopne
fs
mov
pop
retf
out
je
xchg
cmp
movs
popf
lds
dec
mov
mov
cli
cmp
(bad)
pop
test
popf
pop
and
push
scas
jae
clc
fist
aam
repz
fcos
clc
inc
xchg
mov
and
jmp
adc
push
cmps
test
fist
dec
fldenv
sub
sbb
jae
call
sub
(bad)
xchg
mov
push
adc
pop
pop
fstp
clc
movs
out
dec
xchg
mov
xchg
out
xor
cmp
pop
add
mov
fld
xor
sbb
sbb
call
jae
cli
mov
adc
pop
out
lock
push
pop
fsub
or
push
mov
mov
dec
sub
sub
loopne
sub
test
push
fadd
mov
xchg
mov
leave
add
rol
movs
sbb
push
push
in
or
loopne
scas
into
dec
or
cs
call
lds
fld
dec
xor
aad
ja
out
mov
or
adc
xchg
cmp
mov
scas
and
cli
jmp
popf
mov
sti
xchg
mov
jbe
lds
xor
fistp
sbb
push
dec
jecxz
mov
sbb
ror
shl
and
dec
add
mov
push
cld
clc
cmp
ss
addr16
jle
icebp
jno
adc
aad
cmp
cmp
sbb
inc
je
hlt
(bad)
sbb
fwait
pop
pop
lahf
mul
in
xor
push
xlat
aad
pop
mov
jle
leave
sbb
add
and
test
sbb
dec
cld
lods
dec
push
and
xor
mov
push
test
inc
jo
and
stc
aad
pop
dec
in
and
retf
loop
shl
(bad)
in
xchg
aas
sbb
adc
iret
das
xchg
enter
sub
rol
inc
lahf
repz
ret
push
or
nop
repnz
data16
scas
mov
and
xchg
cmp
jnp
pop
cli
cwde
rcr
sbb
inc
lea
mov
push
adc
test
xor
adc
jge
out
stos
outs
rol
repnz
std
jbe
cmps
or
cs
jmp
adc
pand
imul
popf
ins
inc
mov
mov
jno
inc
and
xchg
(bad)
in
add
xor
loop
xchg
sti
sbb
scas
aaa
(bad)
sbb
push
cs
and
cmp
pop
fidivr
xchg
bnd
out
and
xchg
add
clc
sbb
sub
adc
cli
inc
aas
lods
sahf
ret
repnz
ror
jmp
dec
push
call
mov
ret
dec
cld
adc
xchg
aaa
pusha
add
mov
in
or
dec
dec
pushf
pop
leave
jmp
mov
jne
mov
dec
and
or
adc
jbe
push
stos
push
xchg
dec
out
(bad)
mov
xor
and
(bad)
mov
fs
push
jecxz
gs
jg
pop
dec
push
jb
shr
mov
out
ins
loop
sbb
stc
mov
or
icebp
mov
hlt
jne
outs
cld
aaa
xor
sti
loope
mov
xor
(bad)
pop
retf
loopne
pop
call
iret
push
xor
xor
dec
pop
lds
ja
mov
mov
sbb
dec
push
mov
push
cs
sub
cmp
sub
lahf
jecxz
push
cmps
xchg
dec
jb
iret
es
mov
sub
inc
lea
repz
retf
mov
push
mov
adc
in
adc
cmp
stos
inc
addr16
pop
jmp
adc
mov
mov
(bad)
inc
adc
mov
lea
jne
lods
push
ds
xor
lock
cli
retf
push
mov
push
mov
sbb
pop
and
cmp
push
clflush
pop
fdivr
sub
adc
mov
in
mov
cs
data16
sbb
pusha
sbb
ror
mov
and
movs
repz
clc
cmp
daa
int
ins
(bad)
stc
pop
repz
test
lods
icebp
push
rcr
push
shl
arpl
mov
mov
xor
mov
mov
jae
ja
jae
data16
sub
add
pop
cs
outs
or
jp
cmp
loopne
pop
rcr
jae
shl
jne
mov
nop
bnd
(bad)
into
repnz
stc
xchg
lods
(bad)
xchg
mov
sub
pop
xor
sub
mov
arpl
popa
test
xor
dec
mov
adc
and
iret
stc
mov
ja
cmp
std
inc
sub
sub
fwait
mov
dec
pop
jo
push
out
cwde
cdq
mov
stos
pop
cmc
jecxz
scas
in
push
inc
fmulp
cmp
enter
and
pop
inc
pop
cmp
clc
or
xor
out
retf
ins
loopne
or
ret
jns
cwde
dec
or
mov
xor
sbb
push
mov
fs
or
adc
call
int3
push
dec
mov
adc
mov
ret
xor
les
cmp
cli
and
call
inc
inc
cmps
icebp
fdivr
dec
pop
je
clc
and
mov
call
push
xchg
fimul
push
loope
jne
dec
pusha
adc
sar
mov
push
pop
jmp
aam
push
dec
inc
inc
cwde
clc
xchg
mov
inc
add
popa
or
push
test
adc
sbb
pop
push
cmps
sub
stos
xor
inc
push
fadd
lds
mov
push
mov
loope
sbb
and
cmp
fimul
cmp
mov
and
mov
je
ss
xchg
cmp
cmp
mov
pop
xchg
jecxz
repnz
sbb
fcom
cmp
aas
adc
retf
sbb
inc
imul
enter
adc
fs
sahf
mov
stos
mov
cmp
xchg
and
dec
and
ds
mov
push
fs
cdq
push
into
mov
adc
test
push
push
out
xchg
ret
cld
test
mov
pop
in
int
or
pop
jbe
stos
mov
test
ss
fist
int3
aad
(bad)
ins
mov
xchg
inc
lods
ins
adc
add
add
lds
mov
cmc
sar
mov
adc
lods
dec
lock
adc
cmp
pop
std
inc
test
sbb
inc
adc
jmp
movs
mov
pop
addr16
out
mov
adc
pop
dec
mov
test
xor
pop
ficomp
sbb
jp
int
add
dec
inc
js
or
in
shl
pushf
mov
jp
pushf
pushf
inc
sub
cmc
test
ja
ins
mov
push
inc
add
gs
adc
outs
iret
ret
aas
sbb
les
cld
cmp
mov
es
sahf
adc
xchg
mov
mov
mov
jmp
push
popa
out
sbb
cmp
ins
test
or
adc
aas
push
or
and
fimul
push
call
sub
jp
mov
jo
sahf
lea
jecxz
xchg
pcmpgtw
pusha
cdq
mov
dec
add
add
test
dec
repz
inc
mov
pop
mov
shl
mov
fwait
push
cmps
std
ds
in
jle
shr
mov
pushf
xor
imul
das
jle
dec
mov
adc
retf
inc
cwde
test
je
or
mov
(bad)
inc
test
xor
inc
enter
cld
add
or
scas
fidiv
cld
(bad)
ds
pop
inc
cwde
(bad)
push
push
push
xor
jge
sub
cdq
in
iret
inc
push
shr
mov
inc
outs
mov
rsm
movs
pop
rcr
mov
inc
jl
mov
mov
or
jp
mov
je
push
inc
push
push
mov
dec
and
xchg
inc
xor
pop
les
(bad)
repz
mov
mov
out
adc
addr16
pop
repnz
movs
xchg
jb
ret
icebp
dec
xor
xchg
ds
adc
or
lock
sbb
mov
add
push
movs
(bad)
ins
mov
fwait
inc
mov
repz
test
lock
(bad)
sahf
xchg
mov
inc
test
adc
fadd
pop
sub
outs
aam
add
scas
push
(bad)
xlat
jnp
les
jno
add
int
jno
(bad)
inc
jns
test
mov
cmps
jl
mov
ss
mov
jp
out
jecxz
jbe
xchg
xor
mov
je
inc
jmp
jo
test
in
and
pop
call
mov
cli
sbb
lea
in
cwde
jecxz
push
inc
sti
lods
xor
pop
mov
outs
aas
jno
mov
add
(bad)
call
ror
adc
mov
cmps
sbb
out
inc
les
sahf
cmp
(bad)
push
sti
cmp
or
mov
or
sub
jecxz
aaa
repnz
add
pop
jmp
ins
mov
mov
or
mov
inc
push
repnz
cmp
cli
push
addr16
test
out
mov
paddq
dec
sbb
jb
xchg
rcl
cs
sbb
gs
cmp
je
cmp
dec
lock
rol
hlt
xchg
outs
cdq
add
xchg
push
mov
sbb
mov
stos
sub
inc
jmp
cdq
out
fptan
and
movs
jb
nop
(bad)
dec
and
inc
jb
or
(bad)
and
mov
adc
sbb
cli
sahf
int3
ret
xor
or
out
repnz
call
(bad)
es
scas
loop
out
push
xor
sbb
sbb
or
pop
mov
clc
lock
xor
stos
mov
aad
add
pop
push
sub
aas
push
rcr
pop
ss
stc
scas
xlat
inc
jno
fcomp
push
push
jns
jecxz
dec
ret
ret
ins
cmps
jno
jg
pop
iret
arpl
fdiv
cmp
push
cmp
mov
outs
cdq
loopne
push
js
push
jae
retf
and
test
out
xchg
dec
or
sbb
ss
pop
cmp
shr
xor
and
jl
icebp
pushf
aas
data16
adc
scas
loopne
dec
jecxz
push
mov
imul
adc
mov
ins
imul
mov
jmp
out
mov
push
mov
outs
or
test
dec
ins
sub
fmul
retf
jb
loope
add
int
stos
sub
mov
push
push
retf
pmulhuw
lods
add
mov
xchg
ins
pop
cmp
pop
test
adc
jle
or
clc
in
push
cmps
fistp
push
and
push
push
xchg
into
or
pop
pop
dec
lea
push
icebp
outs
mov
push
fdivr
or
push
jle
es
mov
aam
popf
or
data16
inc
out
cdq
inc
arpl
pop
icebp
ret
enter
or
pop
call
out
test
mov
mov
or
jg
movs
cmps
imul
fist
pop
pop
jae
arpl
adc
inc
sub
pop
outs
cmps
and
cs
or
push
cmp
sub
addr16
dec
add
leave
cli
sub
mov
sbb
sbb
cs
sub
lock
movs
pop
fsubr
aas
sub
and
mov
inc
cdq
test
pop
inc
xchg
ins
sahf
jmp
div
dec
ds
or
ret
aam
xchg
push
das
ret
cmp
push
jmp
test
cld
sub
mov
inc
loop
js
xchg
popa
test
std
inc
cmp
fwait
lahf
xor
cs
jnp
sbb
xor
cdq
repz
ins
sub
aaa
jmp
imul
cli
dec
adc
pop
call
xlat
(bad)
ss
xchg
pop
mov
daa
inc
cld
dec
dec
outs
div
fnstenv
rcr
push
loope
pop
mov
dec
mov
repnz
jl
jne
and
dec
adc
sub
add
pop
sbb
int
pop
pop
stos
shl
imul
inc
sar
inc
stos
movs
in
in
test
out
dec
ret
dec
sbb
mov
lds
jo
fild
and
sti
or
sub
xlat
xchg
pop
xor
jg
je
sub
inc
loopne
sbb
lods
push
test
in
aaa
or
jle
imul
cmc
pop
sub
mov
and
imul
cmp
jl
sbb
(bad)
(bad)
sbb
cmp
cmp
mov
bound
sub
in
adc
fcom
ret
add
sub
call
dec
add
sub
pop
outs
xchg
scas
inc
gs
(bad)
jo
shr
loop
fs
mov
dec
ret
pop
stc
push
adc
xor
xchg
add
test
stc
add
arpl
xor
jle
ret
mov
ins
and
adc
cld
pop
call
xor
mov
push
loope
xchg
push
and
nop
loopne
clc
cmp
(bad)
xor
adc
mov
pop
xchg
xor
cdq
jo
mov
dec
je
jg
jbe
pop
sti
fnsave
mov
cmps
mov
aam
mov
dec
dec
loopne
inc
mov
clc
mov
lahf
jns
rcr
hlt
push
cmp
cmps
xchg
mov
lea
dec
loop
fisubr
fwait
jmp
inc
jecxz
loop
pop
mov
xor
cwde
mov
xor
ja
rol
ret
daa
add
retf
aam
fiadd
test
icebp
and
sbb
js
push
fistp
or
sub
add
lds
sete
xor
jmp
sbb
adc
pusha
add
loop
cmp
iret
fcomp
test
in
dec
mov
out
push
cmp
(bad)
lods
lods
jmp
dec
(bad)
sti
push
mov
cli
aas
call
out
out
cld
jg
not
xor
das
cmp
mov
outs
rol
fwait
ror
sub
sbb
es
call
mov
cmps
shl
ins
cdq
fs
sti
pop
fmul
xor
add
cmps
in
pop
xchg
add
dec
xor
fiadd
mov
cmp
jl
mov
jge
cmp
dec
xchg
leave
adc
pop
inc
push
mov
mov
sub
loop
mov
jno
mov
aaa
rol
lea
ds
outs
mov
jne
(bad)
mov
cld
loop
pop
add
dec
sbb
xor
adc
push
xchg
and
mov
shl
paddb
mov
cmp
hlt
xor
ss
mov
(bad)
inc
jge
std
rcl
call
outs
cdq
shl
and
stc
call
adc
out
pop
les
(bad)
lahf
jae
push
xchg
out
mov
sub
mov
mov
cmp
adc
jnp
stos
fisub
xor
pop
in
aad
xchg
mov
mov
xchg
adc
ret
dec
inc
addr16
out
pop
or
mov
inc
mov
neg
add
retf
das
lea
mov
fmul
dec
stos
movs
and
retf
dec
pusha
rol
inc
stc
js
shr
jmp
ins
(bad)
push
fcmovnbe
xchg
inc
sar
mov
cmp
jns
jg
xchg
xchg
or
outs
adc
xlat
aam
mov
jp
dec
into
add
mov
jl
push
or
pop
jl
xchg
js
xor
mov
mov
rol
jno
adc
push
popa
mov
add
cli
out
jb
pop
loope
inc
mov
jmp
retf
imul
jp
div
arpl
cmp
xor
rol
xor
and
icebp
xchg
mov
or
call
out
inc
outs
sbb
hlt
inc
sbb
ror
jns
call
mov
xor
jnp
or
push
cmp
movs
sbb
and
sub
adc
aad
add
test
sub
push
bound
adc
add
inc
xor
test
jb
daa
je
jne
fstp
mov
rcr
push
cmps
fcomp
dec
sub
pop
mov
xchg
leave
bound
or
inc
sub
or
jmp
fimul
sbb
sub
daa
fwait
aas
xor
cmp
enter
xchg
leave
or
fcom
jo
mov
cmp
mov
call
jmp
aaa
das
jno
retf
test
jo
pop
dec
jmp
jecxz
sbb
pop
mov
gs
mov
not
data16
in
mov
cmp
cli
daa
out
cdq
sahf
push
scas
stos
aas
js
cwde
jae
data16
xchg
test
jmp
push
rol
rcl
jno
mov
sub
mov
pop
mov
dec
adc
int
sub
clc
in
shl
fistp
cmp
popa
xor
adc
data16
out
or
xchg
daa
ins
pop
stos
popf
dec
xchg
or
fdiv
push
mov
mov
or
dec
test
or
bound
(bad)
out
into
mov
inc
add
icebp
call
push
mov
in
(bad)
adc
jo
aaa
call
pop
je
pop
dec
repnz
ret
bound
je
and
shl
xor
lea
xlat
pop
mov
cli
pushf
jle
test
sbb
add
addr16
or
inc
cwde
adc
inc
test
cmp
lds
jae
push
mov
clc
inc
mov
cmp
xor
or
and
or
adc
sub
push
imul
(bad)
cmp
xor
dec
ror
loop
mov
push
mov
movs
cmp
lds
push
(bad)
fimul
(bad)
mov
mov
mov
(bad)
push
xchg
not
mov
pusha
scas
sbb
movs
mov
in
not
pusha
mov
pop
adc
push
lods
cmp
ins
xchg
mov
in
loopne
(bad)
dec
xor
int3
adc
stc
call
jo
(bad)
mov
loopne
out
or
xchg
popa
xchg
jle
jle
mov
ficom
popa
jp
pop
add
test
idiv
or
(bad)
(bad)
repz
retf
push
nop
mov
pop
dec
outs
xchg
loop
jp
push
push
add
or
retf
adc
mov
add
rol
ds
clc
ja
inc
je
mov
sbb
dec
mov
sub
loope
add
cmp
daa
mov
and
xchg
sub
sub
ret
popf
xor
hlt
iret
mov
aaa
xor
mov
pop
inc
jne
ins
add
jnp
lods
mov
call
dec
dec
or
ds
cli
mov
pusha
mov
xchg
jb
je
add
push
mov
xchg
and
sub
shl
(bad)
xor
xor
inc
or
push
loop
or
sbb
je
cmp
mov
call
es
pop
pop
xchg
iret
in
enter
push
rcl
mov
and
and
scas
ret
cmp
es
inc
ds
jb
and
jns
ins
pop
and
jg
cld
mov
xor
add
fbld
out
mov
(bad)
push
sub
call
pop
dec
mov
or
push
stos
sbb
gs
or
lds
scas
cmps
aaa
(bad)
mov
lods
hlt
push
or
adc
test
xor
call
test
inc
add
sbb
add
and
adc
mov
cdq
arpl
adc
xchg
mov
out
xchg
inc
aas
ja
push
jno
nop
popf
in
adc
mov
jmp
push
push
fistp
ja
sbb
stos
sub
jne
pop
es
or
lahf
cwde
arpl
cmp
mov
rcr
(bad)
loope
in
js
inc
jae
bound
xor
dec
dec
aad
adc
hlt
xchg
(bad)
pop
adc
scas
call
lods
mov
idiv
or
das
jle
in
cmp
pop
(bad)
jmp
shl
cmp
js
jecxz
adc
mov
inc
mov
mov
add
scas
std
(bad)
push
leave
retf
daa
into
cmp
mov
and
xor
cmp
push
jmp
add
push
scas
mov
adc
lea
xor
push
inc
test
jb
fwait
add
inc
mov
and
inc
cmp
and
int
pop
push
ror
lds
xchg
xchg
cwde
lahf
mov
pop
(bad)
pop
push
add
mov
push
dec
into
rcl
mov
ret
ror
mov
pop
cmp
out
adc
and
xchg
les
into
xchg
sbb
fdiv
xor
arpl
xchg
gs
add
or
and
jb
adc
mov
xchg
cmc
popa
dec
out
push
cdq
frstor
(bad)
cdq
outs
iret
add
or
in
aam
out
daa
push
sub
xchg
inc
push
repnz
rol
stos
jl
jg
pop
push
out
cmp
fistp
enter
sahf
outs
dec
push
test
xchg
mov
lods
outs
cs
push
pop
jmp
movs
in
arpl
call
in
pop
mov
sub
sar
mov
loope
mov
push
mov
add
test
cmps
icebp
clc
pop
jp
xor
adc
sub
sbb
pop
js
pop
imul
call
bound
add
rcl
in
mov
pushf
push
out
iret
xchg
push
xor
inc
cwde
inc
pop
pop
lds
sbb
mov
in
mov
sub
jae
xor
popa
in
or
pop
jae
pop
mov
jbe
xchg
dec
fcmovb
mov
pushf
imul
fucomp
adc
jne
retf
jnp
ror
imul
add
pop
inc
(bad)
or
pop
cmp
enter
add
sbb
jecxz
loope
add
pop
mov
ja
adc
cs
es
cmp
mov
and
cmp
ds
add
pop
rol
mov
scas
push
out
loope
frstpm(287
adc
rol
sbb
sub
xchg
sub
rol
scas
enter
cmp
js
or
sub
pop
gs
add
jb
mov
xor
popf
rcl
sahf
jb
jne
retf
xchg
nop
mov
sub
hlt
movs
xchg
test
mov
mov
pusha
dec
dec
fsubr
xlat
jo
push
in
add
jg
lahf
sti
and
add
xor
fwait
loope
in
cs
sub
jmp
add
rol
mov
(bad)
fwait
xchg
pop
cmp
sub
sub
mov
mov
psubd
pusha
jne
mov
retf
shl
call
mov
fisub
mov
bound
jb
mov
mov
outs
ss
push
jno
jns
dec
sub
(bad)
aam
xor
jae
push
push
or
xlat
pop
lahf
clc
iret
sbb
mov
rcl
imul
or
cs
pop
jp
leave
adc
ds
sti
shl
sbb
call
adc
inc
je
xchg
arpl
cmps
dec
and
push
mov
adc
lds
loop
(bad)
aam
shl
fisttp
xchg
fucomp
dec
sbb
mov
mov
sub
(bad)
idiv
xchg
push
cmps
adc
xchg
mov
popf
dec
xchg
push
stc
bound
add
jno
cdq
movs
and
out
aaa
dec
adc
icebp
inc
dec
enter
mov
mov
loope
or
test
leave
add
adc
inc
rcr
pop
loop
push
sbb
jno
outs
mul
dec
call
jl
add
push
clc
fld
scas
frstor
and
(bad)
jnp
sub
je
mov
dec
movs
(bad)
clc
ror
ins
pop
fadd
and
cmp
sub
jb
sti
jae
mov
loop
sbb
nop
sbb
ja
je
mov
add
pop
popf
mov
in
push
fnsave
sub
xor
sbb
add
sub
lods
pop
sub
xchg
pop
retf
out
cmp
push
fwait
sbb
outs
or
or
push
mov
dec
adc
mov
jge
sub
in
dec
fistp
xchg
(bad)
fisub
das
adc
aaa
movs
sbb
ds
ss
jno
cmp
ret
jmp
cmp
enter
frstor
dec
jl
or
or
sbb
sub
xchg
test
aaa
sbb
inc
xchg
jns
call
xchg
lods
pusha
cmps
jmp
ret
lods
fnstsw
jmp
add
lods
pop
inc
test
dec
jmp
std
icebp
cmp
int
gs
and
add
fisttp
cmps
mov
and
jae
cvtpi2ps
xchg
jmp
and
rol
test
inc
adc
push
pop
cwde
movs
adc
cld
sahf
inc
inc
and
cwde
movs
xchg
sbb
mov
mov
pop
sbb
icebp
pop
and
loopne
ud1
cwde
jge
sahf
or
add
pop
imul
sub
int3
popf
ja
inc
add
cmp
fisttp
adc
ret
test
mov
xor
jmp
mov
fld
or
clc
xchg
push
(bad)
mov
(bad)
dec
jg
mov
movs
inc
or
imul
jecxz
in
add
jmp
(bad)
jp
sub
mov
xor
dec
sbb
fbstp
fs
fcmovu
mov
mov
jmp
push
ins
scas
and
shr
xor
shl
xchg
push
mov
sub
fild
call
xor
loopne
imul
mov
dec
or
fst
mov
js
pop
je
movs
dec
imul
inc
mov
xor
jne
mov
and
xchg
ffree
mov
sbb
rcl
test
adc
sbb
fstp
out
add
mov
ins
dec
movs
sbb
mov
(bad)
lea
inc
or
ss
pop
scas
(bad)
shl
sbb
push
(bad)
out
pop
inc
xchg
dec
scas
cmp
mov
cmp
cwde
sub
adc
std
stos
movs
retf
adc
cdq
add
and
(bad)
fidivr
jle
mov
(bad)
sub
push
les
jo
ja
inc
jp
hlt
mov
outs
icebp
push
fadd
cmps
xor
sub
dec
add
inc
inc
add
ja
lods
psubusb
xor
frstor
daa
mov
pop
in
addr16
pop
push
dec
or
dec
gs
pusha
(bad)
outs
jne
les
call
lea
dec
xor
cwd
jg
stos
repnz
mov
pop
sub
xor
sar
fmul
clc
out
dec
ret
cli
mov
add
jl
leave
jp
punpcklbw
popa
mov
dec
adc
pusha
pop
(bad)
sub
fnstcw
pop
mov
sub
out
sbb
pusha
jnp
cmps
mov
mov
xor
adc
xor
ja
cld
xchg
fcomp
into
inc
mov
arpl
ret
lods
add
mov
(bad)
loop
movs
lahf
cmp
cmp
jnp
pop
ds
and
mov
jb
mov
add
test
movs
in
loopne
sahf
test
out
aad
into
ins
inc
or
jmp
das
xchg
pusha
inc
je
shl
hlt
mov
in
aad
ds
mov
mov
push
test
add
les
jl
or
add
in
mov
ds
ja
inc
inc
adc
inc
sbb
in
mov
xchg
lahf
jae
cmp
adc
pushf
adc
fdivr
out
pushf
ret
mov
mov
mov
xor
pop
loopne
mov
pop
adc
cmp
test
inc
sub
adc
cdq
dec
fdivr
sti
dec
adc
into
inc
jg
ret
pop
xor
inc
inc
inc
mov
adc
int3
imul
pop
adc
daa
pop
cmp
add
jg
jns
(bad)
neg
push
or
cmps
fmulp
or
adc
inc
adc
sbb
pop
cwde
mov
inc
jns
addr16
mov
mov
loop
jbe
pop
sub
fwait
add
and
mov
ds
inc
xor
hlt
lds
push
test
mov
or
scas
push
bound
mov
fwait
mov
and
les
mov
adc
cs
and
mov
outs
and
add
(bad)
aaa
shl
retf
mov
xor
mov
icebp
bnd
loop
aas
add
shr
rcl
retf
imul
add
out
and
pop
daa
mov
icebp
ret
pop
les
mov
mov
inc
das
test
mov
nop
iret
cdq
mov
(bad)
imul
fwait
adc
jno
or
lds
lahf
jl
retf
push
xchg
inc
jnp
shl
and
mov
mov
mov
loopne
pop
pop
(bad)
iret
push
and
fstp
add
int3
fisub
je
add
mov
fbstp
in
out
sbb
push
xchg
sbb
out
iret
test
add
arpl
out
mov
mov
add
sbb
push
jle
cmp
jo
adc
cmps
(bad)
push
shl
in
adc
xor
mov
jge
push
mov
jmp
cmps
enter
dec
arpl
add
jmp
push
push
pop
loopne
mov
fs
push
popf
aad
lods
push
or
sub
ins
test
test
xor
ret
cmps
cmp
xlat
lds
cmps
ins
addr16
add
and
mov
sbb
pop
into
mov
mov
mov
dec
std
or
add
sbb
rcl
mov
imul
cmp
push
stos
sub
fadd
test
aam
popa
mov
jg
mov
imul
std
scas
pop
es
xor
(bad)
leave
xchg
cs
push
ror
je
ret
popa
jae
ret
daa
pop
movs
xor
test
and
sbb
pushf
fadd
jmp
jecxz
stc
and
mov
xchg
shr
mov
retf
xlat
xchg
arpl
out
test
sbb
xchg
sti
inc
add
mov
cmps
pop
lahf
lahf
sbb
adc
test
xor
in
jecxz
in
push
mov
fimul
stc
pop
in
mov
sub
mov
ss
mov
xchg
cmc
push
lock
das
jo
out
fwait
adc
add
repz
js
jp
loopne
dec
int
fiadd
mov
xor
and
dec
jle
and
add
fdivr
stc
aaa
fld
inc
shl
jb
hlt
sbb
test
jmp
xor
pop
and
push
inc
imul
cmps
shr
adc
clc
and
add
stos
call
(bad)
retf
(bad)
pop
jno
xchg
mov
inc
jmp
out
jbe
loopne
mul
stos
in
dec
je
or
adc
xchg
ins
pop
inc
push
imul
in
xor
lods
adc
(bad)
jmp
aas
cli
aam
mov
push
stc
movs
add
jl
adc
leave
jns
aam
ret
add
jecxz
cwde
mov
data16
popf
xrelease
jne
repnz
jg
or
ins
push
scas
jle
cmp
xor
xchg
int
pop
dec
adc
cmps
cs
push
lock
cmps
(bad)
adc
or
dec
cdq
mov
dec
in
cmp
jl
scas
mov
dec
call
repz
sar
out
cmp
push
shr
loop
fcmovnb
cmp
push
sub
cli
mov
adc
inc
pusha
stos
int
mov
cwde
ss
sub
into
jle
or
rcl
mov
test
jns
sbb
xchg
adc
and
cdq
mov
pop
scas
ins
xchg
pop
call
test
out
push
xchg
adc
int
adc
inc
sahf
or
push
push
sbb
in
push
sub
jnp
dec
jnp
push
mov
mov
dec
xchg
pop
mov
sub
pop
stos
and
inc
arpl
mov
xchg
mov
lea
sub
ficom
loope
push
repz
cdq
cmp
loope
movs
push
fs
adc
mov
push
mov
test
push
nop
repnz
or
and
dec
out
push
pop
inc
cmp
mov
and
daa
ret
sub
push
lahf
arpl
jbe
dec
movs
xchg
mov
mov
xchg
sub
push
fmul
test
in
jecxz
out
inc
jbe
out
call
imul
sub
jnp
pushf
lock
into
push
fisub
mov
xor
xchg
jnp
mov
out
mov
sbb
jmp
leave
pop
inc
dec
ins
cmp
sbb
dec
in
inc
enter
mov
jno
and
mov
jne
mov
cld
inc
mov
cs
(bad)
repnz
sbb
test
mov
int3
imul
(bad)
mov
xchg
jmp
(bad)
adc
sar
sub
and
out
sub
mov
jmp
stc
or
inc
jl
lods
cmc
fisub
arpl
call
dec
adc
les
in
cdq
repnz
out
imul
xchg
ins
inc
pop
push
adc
daa
movs
call
dec
es
out
retf
sub
jecxz
pop
mov
jnp
sub
adc
add
mov
add
aam
xor
sub
iret
add
mov
push
sbb
push
inc
ins
jl
or
add
push
and
dec
fsub
push
inc
outs
push
mov
cdq
jge
mov
pop
adc
jb
test
mov
cmp
shl
sti
ss
clc
sub
scas
pop
addr16
out
pushf
xchg
inc
mov
nop
stos
out
pusha
lahf
cmp
cmp
push
dec
les
popf
je
in
xchg
frstor
daa
adc
adc
adc
add
cmp
cmp
or
xor
sbb
clc
jnp
cmc
cmp
ds
dec
dec
stos
scas
xchg
(bad)
leave
or
xor
xchg
lods
ja
lods
lea
nop
adc
aam
or
push
lds
jg
ror
push
repnz
(bad)
loopne
dec
fs
popf
or
pop
adc
sub
sbb
add
xor
cmc
movs
aam
pop
sub
inc
mul
cmp
addr16
or
adc
sub
and
sub
xchg
lea
test
fistp
jo
and
or
jo
xor
jge
pop
icebp
xor
adc
mov
add
xchg
and
pop
sub
movs
bt
test
mov
push
rol
stos
or
sti
mov
cld
fdivr
or
cmp
cmp
sahf
dec
or
sub
mov
ja
xlat
iret
ret
mov
stos
retf
cmp
clc
pusha
mov
pop
pusha
push
push
fs
cmp
mov
je
mov
gs
sbb
int
sbb
fimul
sub
or
daa
ins
jmp
int
sub
shl
out
(bad)
dec
arpl
stos
pop
pop
cmps
mov
mov
mov
sti
or
mov
loopne
cmp
mov
and
aaa
jg
mov
xor
repz
mov
inc
(bad)
inc
adc
jecxz
mov
push
cli
mov
push
xor
(bad)
mov
mov
dec
cmp
ret
adc
(bad)
sbb
push
stc
dec
jne
xlat
inc
sbb
ins
cmp
jbe
mov
dec
loope
lock
cmp
cli
out
pop
inc
lea
sub
cwde
xor
sti
(bad)
aam
add
addr16
inc
test
push
ret
dec
sti
push
movs
and
xchg
pop
pusha
int
pop
xlat
adc
pusha
fistp
xchg
gs
mov
stos
jle
ret
jmp
mov
mov
lea
xor
mov
aam
rcl
ja
inc
lock
mov
sub
jb
das
jno
outs
push
or
push
dec
adc
mov
test
lock
ds
shl
xchg
sbb
js
jnp
stos
adc
lods
in
fiadd
xlat
cmps
adc
fild
and
in
sbb
rcr
call
dec
adc
pop
cmp
loopne
pop
mov
sbb
pop
inc
pop
jmp
adc
sbb
aas
fimul
mov
or
loop
nop
into
leave
test
(bad)
mov
test
and
lahf
mov
jl
dec
xchg
or
dec
ss
mov
fnsave
xchg
daa
jp
mov
mov
adc
sti
pop
push
or
or
push
push
push
call
mov
inc
mov
cmps
or
icebp
or
test
inc
or
push
cmc
hlt
(bad)
clc
in
push
into
mov
jp
pusha
fcom
sub
or
out
out
jmp
xor
adc
bsf
out
pop
cmp
rol
mov
std
add
mov
push
retf
mov
and
fld
jns
out
and
dec
inc
inc
adc
xchg
add
pop
cmp
pop
push
enter
fimul
arpl
in
mov
add
jb
stc
and
xor
xor
lock
aad
push
lock
or
shl
push
cmp
xchg
mov
in
lods
retf
clc
jg
stos
inc
and
xor
lahf
jb
xor
push
jmp
xchg
std
or
push
cli
fld
cmc
mov
(bad)
pop
add
adc
sub
into
scas
mov
inc
pop
fcomp
mov
cdq
xchg
iret
pop
dec
cmps
add
cwde
cld
mov
into
pop
pusha
int3
adc
push
inc
fsub
xor
rcl
jnp
cmp
fst
and
mov
sar
sub
icebp
and
dec
(bad)
fcmove
fs
mov
jl
ins
mov
(bad)
adc
test
fwait
(bad)
xor
xchg
test
sbb
fsub
mov
jg
mov
dec
scas
aaa
aas
into
xchg
sbb
jae
xchg
outs
out
nop
push
xchg
cmp
cmp
pushf
cmp
xchg
js
repz
rol
(bad)
int3
or
call
adc
les
xor
rcl
inc
add
xchg
mov
loop
sub
aaa
popa
aas
test
daa
mov
cmp
dec
sti
mov
mov
ins
mov
inc
xchg
mov
icebp
test
fild
pop
jmp
ret
lahf
mov
cmp
add
fsub
cmps
inc
ins
jmp
mov
cmps
jmp
loopne
out
lods
(bad)
(bad)
dec
add
call
push
cmp
xchg
xor
sub
cmp
mov
jae
xchg
out
sahf
nop
shl
mov
pop
push
scas
mov
mov
pop
fs
adc
arpl
push
rcr
push
jecxz
fisubr
mov
in
xchg
pusha
sub
call
retf
xor
adc
and
push
mov
outs
xor
push
popf
(bad)
cmps
inc
nop
xor
scas
imul
jbe
sub
sub
stos
mov
push
clc
jae
(bad)
(bad)
dec
push
and
cmp
inc
(bad)
cmp
mov
sbb
addr16
xchg
jg
retf
pop
mov
fs
mov
or
adc
shl
(bad)
aam
push
repnz
and
jae
not
addr16
xchg
and
outs
in
pop
push
mov
xor
dec
cs
xchg
sbb
pop
jbe
outs
mov
aam
pop
jnp
call
sub
pop
and
and
(bad)
in
in
dec
and
add
cli
dec
mov
ret
ja
js
shr
ret
(bad)
shl
lds
push
xchg
and
mov
mov
lock
or
mov
out
rcr
mov
fadd
or
lahf
pop
inc
xchg
gs
int
xchg
lods
and
imul
push
mov
sub
ss
inc
mov
(bad)
jp
push
fwait
add
dec
jmp
xor
cmc
jo
popf
inc
mov
enter
cld
out
sub
mov
scas
ret
lds
lahf
jle
sub
pushf
jmp
imul
xchg
cmp
add
loop
(bad)
xchg
push
push
fdiv
sub
push
jbe
in
xor
inc
stos
ins
or
mov
cli
push
je
cli
dec
mov
dec
fsub
test
jno
sbb
xchg
inc
jb
inc
iret
outs
les
jmp
shr
cld
add
dec
and
adc
add
adc
mov
test
or
sbb
out
or
jmp
xchg
jle
jae
mov
adc
pop
test
scas
xchg
icebp
repnz
hlt
xchg
mov
out
add
loop
lock
inc
xchg
jbe
push
rol
mov
lods
pop
out
fstp
pop
es
icebp
and
pop
or
loopne
sbb
and
add
rcl
fadd
aas
adc
outs
inc
mov
push
ja
inc
lahf
mov
jb
jmp
mov
ds
pop
inc
jb
pop
jae
sub
xor
mov
cmp
mov
mov
sub
pusha
leave
stos
rcr
add
sub
and
sub
aaa
sbb
add
mov
sahf
inc
jmp
sbb
mov
add
in
lahf
jbe
cld
push
inc
jno
inc
cmp
sbb
adc
inc
inc
sbb
and
add
in
cmps
not
add
ret
add
call
add
dec
sub
push
dec
in
mov
mov
push
adc
push
xchg
or
sbb
push
icebp
call
adc
mov
mov
jge
and
leave
sub
push
push
dec
scas
not
add
inc
or
cmp
xor
vpackuswb
inc
mov
loope
sub
sub
mov
cmc
mov
and
lods
or
jae
xchg
push
sub
fimul
or
fdivr
hlt
mov
ret
and
mov
push
and
cmps
inc
ins
or
jae
test
clc
icebp
and
fadd
ror
cmp
mov
sbb
mov
ins
in
sub
adc
xchg
outs
xor
les
out
mov
xchg
mov
xor
rcl
adc
loopne
push
test
movs
ret
repnz
or
sbb
add
ret
in
pop
xor
ds
jmp
into
pop
scas
sub
icebp
dec
outs
ror
mov
int3
in
js
mov
enter
movs
mov
mov
mov
scas
adc
xchg
in
icebp
lahf
test
lea
cli
jp
mov
mov
inc
imul
mov
mov
mov
inc
inc
push
cmp
lods
ins
cdq
mov
in
sub
xchg
sbb
and
dec
adc
sti
mov
xchg
push
(bad)
add
mov
fcomp
ror
push
adc
add
dec
das
mov
cld
sar
mov
les
ja
or
stc
in
in
aad
sub
addr16
push
ss
inc
xchg
inc
inc
lods
(bad)
pop
loopne
sahf
xchg
loopne
leave
ins
outs
mov
vmovhps
aaa
and
jmp
leave
jo
xchg
push
sub
addr16
in
(bad)
(bad)
dec
lahf
and
shl
sub
dec
push
fwait
mov
sbb
push
aas
dec
cmps
jmp
retf
out
mov
dec
inc
mov
mov
lods
mov
cmp
movs
mov
or
push
dec
mov
push
cs
inc
lods
dec
pop
push
jbe
push
pusha
mov
in
in
aad
pop
(bad)
mov
inc
mov
lds
push
pop
push
shl
add
dec
sbb
push
enter
fsubrp
push
xor
lock
sub
xchg
pop
cmp
jo
pop
cwde
movmskps
dec
dec
dec
gs
rcr
pop
into
js
sbb
cmp
xchg
out
or
mov
inc
fisubr
or
pop
or
adc
pop
pop
xchg
xor
in
dec
hlt
mov
add
and
xchg
dec
fdivr
push
push
jmp
push
loopne
push
push
(bad)
xchg
dec
dec
xchg
test
cli
sahf
sbb
rcr
xor
sub
adc
(bad)
ror
(bad)
pop
pop
out
bound
add
repz
out
ret
fild
mul
and
mov
push
inc
mov
mov
sub
call
sbb
fwait
mov
push
and
or
pop
hlt
fbld
cli
xchg
jae
(bad)
pop
(bad)
dec
add
daa
or
repnz
test
ja
in
int3
pop
sbb
or
loope
and
jnp
int
ror
sar
into
clc
inc
add
jmp
add
shr
and
iret
mov
sbb
aaa
adc
xchg
outs
scas
or
or
mov
lods
or
rcl
mov
and
dec
sbb
and
int3
jp
loopne
cmp
ja
and
jmp
adc
and
shl
and
cli
or
push
ret
and
dec
lods
sbb
lock
aad
xor
adc
xchg
call
int3
fs
xor
xchg
mov
std
and
lock
repz
lods
inc
or
lods
(bad)
std
scas
jne
jmp
cmc
loop
mov
push
mov
adc
mov
stos
shl
cmp
add
lahf
aad
xor
push
repz
pusha
push
adc
inc
xchg
scas
cmp
jo
lahf
popa
sar
aad
stos
mov
ret
inc
pop
aad
mov
out
sbb
cmp
inc
dec
cmp
daa
jp
mov
ss
jo
pop
mov
es
mov
pop
leave
test
aaa
xor
dec
and
pop
pop
adc
enter
neg
loope
xchg
dec
mov
xor
xor
int3
and
repz
(bad)
and
daa
movs
es
pop
push
jecxz
shr
enter
push
cld
popa
xchg
(bad)
push
call
call
mov
dec
stos
ins
scas
jmp
inc
sbb
mov
mov
scas
lahf
(bad)
xchg
cmp
inc
jp
or
(bad)
cmovs
aam
inc
fwait
push
mov
fucomip
outs
retf
fisubr
(bad)
cmp
ja
lods
sub
repnz
ins
add
es
rcl
push
and
add
pop
das
out
cdq
adc
js
out
call
lods
push
inc
pop
arpl
cmps
xor
mov
call
jae
lds
(bad)
sar
pop
dec
dec
pop
push
and
ret
fistp
cmp
add
stos
jge
mov
sub
mov
inc
dec
xor
mul
sub
mov
and
push
inc
jbe
add
mov
movs
or
sub
in
lahf
push
std
test
mov
or
repz
xchg
xchg
in
cmovno
out
cmc
nop
sub
mov
retf
pop
jmp
int
icebp
data16
add
out
leave
call
inc
test
xor
pop
call
comiss
ss
sbb
xchg
push
sbb
cmp
shl
jg
enter
add
dec
pop
bound
sbb
vpunpckhdq
inc
ins
jo
xor
(bad)
hlt
mov
(bad)
mov
ffree
in
(bad)
das
xor
das
inc
xchg
jns
jo
es
jl
jae
sar
in
mov
jns
stos
out
jg
add
adc
and
adc
sub
pop
(bad)
shl
xor
ins
movs
dec
js
ss
repz
xor
jmp
cld
push
aam
or
mov
xlat
pop
into
cmp
mov
pop
repz
inc
adc
test
xor
ret
cld
or
push
sti
sbb
retf
ret
sar
sti
mov
stc
icebp
pusha
add
cmp
jecxz
jg
push
dec
or
ret
pop
pop
clc
mov
mov
mov
mov
push
aam
dec
test
les
cmp
clc
repnz
ds
test
stos
push
dec
jne
(bad)
adc
idiv
rcl
and
xchg
sbb
iret
jg
(bad)
lods
aad
out
xor
(bad)
jo
test
out
jecxz
inc
jl
sbb
adc
and
cwde
jo
aam
sub
push
stc
xchg
int3
test
rcr
sbb
add
xchg
sub
pop
pop
jle
and
std
mov
aas
sbb
ins
sti
xor
bound
push
pop
push
cmp
xchg
call
out
push
hlt
sbb
icebp
sahf
mov
mov
popa
fcmovnbe
test
mov
outs
push
test
pand
(bad)
sub
fs
addr16
cmp
shl
shr
push
pop
pop
cli
cwde
ss
ins
and
lahf
loope
es
xchg
and
cmc
pop
mov
mov
movs
push
adc
xor
mov
or
cdq
mov
neg
es
icebp
shl
jo
(bad)
out
repnz
push
ja
mov
adc
(bad)
and
fchs
jnp
ins
mov
movs
xchg
add
xchg
in
push
out
jne
test
push
adc
outs
shl
push
mov
retf
xchg
mov
lods
push
pushf
pop
ins
leave
mov
xor
test
mov
lock
sahf
inc
lock
or
stc
pop
pop
bound
fisubr
fistp
dec
retf
stos
ret
out
rol
jne
inc
sub
cmp
movs
add
push
out
mov
cmp
repnz
jg
inc
jg
jg
fld
push
sbb
adc
shr
int
jmp
lahf
or
dec
push
bnd
daa
inc
mov
jns
dec
adc
mov
sbb
dec
dec
imul
sub
cmp
inc
cmps
fistp
xlat
and
dec
jb
ret
pop
mov
ss
mov
gs
or
mov
or
and
call
aas
daa
dec
mov
dec
das
mov
adc
sub
add
ret
cmps
mov
repz
pop
dec
cmp
xor
pop
stos
(bad)
out
(bad)
adc
adc
or
xor
test
fldcw
adc
mov
xor
and
in
and
cmp
jb
sub
in
(bad)
add
cmp
pop
add
and
inc
idiv
mov
shl
pop
adc
loop
pop
outs
jg
shr
jnp
jns
mov
cmps
(bad)
mov
outs
movs
das
(bad)
jne
mov
dec
or
cmp
out
cmps
pop
rcr
test
leave
lock
mov
push
shr
xchg
xor
mov
push
fs
shr
pop
push
mov
fistp
add
xchg
rcr
repnz
mov
rol
jge
mov
cs
ds
dec
push
mov
adc
nop
and
ins
clc
inc
xchg
rol
mov
ret
jmp
les
xlat
mov
test
cmps
mov
dec
mov
nop
fst
aaa
jmp
out
pop
sbb
inc
push
adc
cmc
pop
(bad)
inc
in
xchg
in
pop
cdq
push
sub
dec
icebp
out
pop
sub
mov
iret
sub
and
dec
xor
push
test
das
cmp
test
aad
adc
imul
cld
iret
(bad)
(bad)
inc
lods
pop
hlt
mov
gs
test
aaa
(bad)
fist
test
or
cdq
push
and
push
xor
movs
inc
cmp
fs
add
add
mov
sub
cld
icebp
and
test
and
retf
fimul
bound
and
jbe
bound
push
lock
std
enter
in
mov
dec
and
mov
mov
pop
fisub
and
lods
jmp
jno
(bad)
clc
mov
out
dec
test
lea
pusha
rcl
cdq
stc
cmp
jb
sub
dec
sub
or
scas
sub
(bad)
jl
push
(bad)
cld
sbb
dec
pushf
je
out
mov
mov
loop
jns
lock
pop
ins
repz
push
inc
sbb
xor
xor
mov
jne
rol
push
or
sub
inc
adc
inc
enter
mov
and
cwde
mov
out
in
cdq
push
mul
mov
sub
jae
(bad)
icebp
(bad)
test
fwait
xchg
test
lds
mov
ins
pop
push
in
out
out
test
fcomi
rcr
xor
(bad)
xor
ss
xor
mov
jp
out
lds
test
or
fnstenv
xor
sbb
in
mov
loope
mov
xor
cmps
sbb
xor
sar
sub
push
mov
adc
mov
das
leave
aam
popa
mov
or
dec
fwait
pop
xchg
sbb
sbb
rol
jmp
jge
dec
sahf
inc
fdivr
jnp
mov
gs
adc
ins
mov
popw
ins
pop
mov
leave
push
pop
mov
movs
mov
neg
pop
push
pusha
test
fimul
mov
gs
inc
mov
cmp
cmp
ret
ins
ror
call
xor
lds
mov
cmp
or
or
pop
sbb
movs
fnstcw
push
or
xor
mov
repz
in
cli
push
xor
fdiv
xchg
std
fnstenv
jne
mov
ja
dec
ds
std
das
in
inc
ja
sbb
outs
and
adc
or
fidivr
pop
pop
mov
rcl
pusha
outs
fnsave
xor
dec
stc
cmp
arpl
inc
xor
jg
fadd
repnz
jb
mov
add
adc
lods
push
pusha
shl
xchg
rcr
xor
mov
sub
lods
mov
mov
push
mov
or
outs
mov
sbb
ins
pop
fxch
sbb
js
mov
sub
inc
dec
ret
jg
and
cmp
adc
lods
data16
ins
pop
loopne
xchg
mov
retf
and
push
mov
jne
adc
xor
pushw
mov
jns
inc
pushf
lahf
pushf
mov
sub
xor
inc
push
stc
or
add
and
pop
scas
es
pop
sahf
pop
retf
(bad)
in
outs
mov
data16
jne
sar
dec
fisttp
lds
dec
imul
xchg
shl
cwde
push
add
jmp
mov
push
xchg
xchg
cmp
fnstenv
lea
ins
clc
nop
int
mov
ss
push
xchg
inc
or
stc
jecxz
fcmovne
aas
mov
jae
test
inc
jno
fsubr
xlat
mov
sbb
xchg
movs
pop
mov
mov
mov
xchg
(bad)
(bad)
in
dec
neg
cmps
xlat
cmc
(bad)
aam
mov
lea
or
sbb
fidiv
dec
and
cmps
mov
or
jno
jmp
jne
(bad)
retf
sbb
dec
scas
mov
dec
or
enter
out
mov
mov
dec
retf
adc
stos
xchg
or
and
sub
daa
mov
daa
ins
mov
nop
mov
call
das
cmp
call
cmp
sar
mov
or
mov
imul
pop
and
and
xor
xor
jmp
loopne
sub
ret
inc
mov
inc
dec
sbb
jle
in
jl
mov
xchg
leave
xor
inc
or
mov
add
pop
enter
adc
jg
cmps
xchg
stc
inc
repz
dec
ins
(bad)
or
ja
test
fild
or
mov
push
data16
push
dec
push
sti
gs
pop
jecxz
xchg
or
loopne
clc
retf
stos
sar
or
ror
jge
dec
xchg
cs
test
out
int
xchg
sub
cmp
jae
es
movs
(bad)
fdivr
push
sbb
ins
adc
dec
fstp
lods
adc
sbb
nop
sub
outs
sbb
repnz
mov
or
mov
inc
adc
ins
cs
or
movs
fcom
jns
cmp
fisub
ficomp
push
int3
test
sub
enter
jno
stc
push
rcl
std
mov
aas
sbb
(bad)
(bad)
jo
sub
iret
add
icebp
jge
loopne
jbe
xlat
xchg
lock
iret
shr
mov
inc
xchg
scas
or
addr16
mov
mov
pop
mov
push
ret
cbw
jmp
cmp
stos
and
leave
scas
xor
je
adc
dec
js
imul
mov
mov
xchg
cmp
hlt
out
jg
jnp
aam
dec
loope
jmp
ds
and
fimul
mov
sub
fwait
mov
xchg
movs
or
enter
or
out
adc
dec
mov
xchg
ret
mov
into
pop
stos
jmp
inc
(bad)
rcl
lds
sub
push
jge
lods
mov
push
fld
jb
lock
push
xor
cwde
out
xchg
stos
loopne
imul
lahf
shl
(bad)
scas
repnz
pop
cmp
and
xor
mov
(bad)
push
xchg
loope
outs
adc
test
clc
mov
loopne
loop
sbb
inc
leave
leave
(bad)
jle
ins
int
bound
outs
xchg
xchg
xchg
inc
aaa
test
adc
push
xchg
ret
test
(bad)
adc
pusha
mov
cmp
sbb
vpmacsdd
aad
out
add
and
into
mov
jae
and
xchg
adc
lods
inc
adc
sub
fisub
mov
out
sub
in
adc
jno
adc
cs
cli
mov
ja
mov
jle
xchg
dec
stc
in
push
std
jmp
imul
int3
xor
lea
add
mov
das
push
lds
sahf
dec
push
pop
adc
and
pushf
push
or
in
push
or
mov
cmc
push
mov
fmulp
sbb
mov
fmul
mov
into
add
mov
jae
dec
and
sbb
int
cmp
aad
xor
outs
pop
add
mov
adc
in
sub
mov
mov
mov
mov
sub
inc
adc
test
xor
shr
je
adc
repz
movaps
sub
enter
xor
push
ror
retf
xchg
fst
(bad)
aam
sbb
adc
add
mov
aaa
sbb
push
fdiv
daa
and
pop
(bad)
ret
out
lods
mov
mov
lahf
sar
add
std
outs
pop
out
inc
popa
enter
nop
stos
jl
inc
mov
(bad)
addr16
inc
mov
inc
mov
ss
cmc
fwait
je
mov
xchg
mov
into
mov
sub
or
retf
pop
jb
and
push
movs
pop
test
sbb
adc
ins
mov
dec
and
mov
mov
xchg
jne
daa
inc
fist
inc
fsub
sar
fdivr
push
adc
push
sub
aaa
cli
(bad)
mov
mov
bound
sbb
add
xchg
imul
push
cmp
jl
jl
nop
jecxz
in
dec
int
jbe
pushf
jp
les
int
jmp
xchg
cld
loopne
call
dec
imul
or
or
pop
adc
adc
das
sub
pop
vmovsd
mov
in
jmp
ret
mov
arpl
lock
fist
xchg
sub
and
inc
jmp
sub
pop
(bad)
sbb
fsubr
scas
inc
test
sbb
or
aaa
or
mov
xor
sti
sbb
inc
aam
dec
pop
lods
call
pushf
inc
fwait
or
inc
aas
mov
cmp
retf
arpl
jmp
(bad)
xchg
jmp
sub
mov
adc
enter
jns
lock
dec
icebp
shr
fist
loope
cs
or
je
add
jo
cld
int3
addr16
cmp
jne
stos
push
xor
pop
and
mov
inc
xchg
ins
inc
cmp
sbb
ror
cld
pusha
fidivr
pop
inc
jl
mov
and
int3
sub
inc
call
jno
adc
mov
js
jbe
jmp
popf
mov
mov
cmc
repz
std
jo
pop
fld
int
fisttp
cdq
pop
nop
adc
push
adc
arpl
xchg
retfw
aaa
cwde
test
mov
push
jg
xchg
push
push
out
adc
push
shl
fwait
mov
imul
inc
pop
nop
mov
call
and
std
jo
adc
cmp
jae
mov
mov
clc
js
icebp
xchg
dec
fild
imul
add
dec
int3
movs
pop
mov
(bad)
adc
add
out
xchg
pop
iret
lods
mov
jb
inc
pop
aad
jmp
and
fistp
cmp
jae
mov
dec
stos
movs
adc
aas
aad
push
push
jmp
or
sahf
mov
(bad)
rcl
sbb
jecxz
and
cmp
cmp
pop
or
or
push
dec
aam
clc
inc
mov
jno
fnstsw
or
mov
outs
inc
mov
and
fimul
ins
adc
push
mov
fmul
loope
imul
mov
push
imul
pop
das
test
or
sub
pop
cmp
mov
inc
repnz
call
fnsave
(bad)
add
jp
out
ret
sahf
pop
test
sbb
popa
mov
inc
movs
cmps
(bad)
xlat
out
dec
pop
in
cmp
std
loopne
xchg
xlat
imul
(bad)
or
push
xor
scas
and
mov
or
icebp
lds
(bad)
mov
mov
psrld
test
test
add
add
repz
ficomp
addr16
rcr
or
shl
mov
sti
xchg
push
xor
cdq
mov
xchg
push
cdq
bound
repnz
add
mov
inc
sub
adc
cmp
cld
pushf
aam
test
and
xchg
xor
mov
dec
sub
mov
dec
or
sbb
pop
dec
xor
jne
out
jmp
inc
adc
movs
test
mov
mov
outs
jmp
ror
and
scas
adc
and
js
pop
and
pop
out
(bad)
sti
hlt
xchg
cmps
inc
xchg
jg
push
cmc
call
out
(bad)
fiadd
pop
mov
jmp
pop
cmp
test
cmp
sbb
and
add
sti
sub
rcr
cld
mov
rcl
inc
mov
cwde
push
ins
cmps
test
mov
mov
add
or
clc
sbb
scas
fsub
or
test
ret
sbb
pop
mov
inc
xor
out
xchg
jbe
mov
rcr
cmp
lods
pop
mov
sti
dec
(bad)
xchg
jb
and
fstp
or
push
xor
lods
sbb
push
jmp
cli
frstor
inc
inc
shl
dec
jno
out
repnz
xor
mov
and
bt
mov
jmp
pop
xor
jae
clc
jnp
mov
dec
jbe
in
(bad)
in
push
cwde
jmp
fisubr
pop
pop
pop
(bad)
mov
loop
cld
shl
mov
icebp
mov
call
fcomp
(bad)
adc
pop
fld
or
adc
jnp
mov
out
xor
rcr
fidivr
jbe
int
jmp
test
pop
pushf
call
fs
sbb
or
movs
add
add
retf
pop
push
cwde
lea
movs
jg
pop
std
cmc
shr
sbb
xor
call
jmp
gs
je
leave
dec
imul
cmps
inc
into
into
pushf
inc
push
mul
in
(bad)
adc
rcl
lea
leave
sbb
out
es
in
inc
pushf
inc
nop
mov
or
push
xor
xchg
mov
idiv
out
imul
loopne
imul
sahf
mov
sar
fs
js
mov
rol
add
adc
fidivr
icebp
sbb
(bad)
sbb
sahf
ja
pop
cmp
add
push
or
fidivr
mul
ret
inc
add
mov
adc
stc
enter
enter
sub
pop
xchg
cmps
lock
and
setno
and
xchg
loope
(bad)
lds
and
in
push
std
call
and
loope
js
inc
mov
xor
mov
inc
js
mov
jno
bound
mov
sbb
es
pop
aam
pcmpgtd
retf
pop
repz
xchg
in
call
add
push
push
adc
cld
add
je
clc
mov
cmps
mov
sub
jl
mov
adc
imul
mov
std
lds
es
mov
fwait
ss
imul
mov
cs
rcr
and
ds
dec
cmp
mov
(bad)
(bad)
in
retf
imul
lds
sub
arpl
loope
and
retf
sbb
call
stc
or
mov
pop
(bad)
dec
xor
sub
ror
inc
in
xor
sub
ins
test
imul
daa
cmp
inc
movs
idiv
popf
xor
jnp
sbb
pop
and
test
pinsrw
data16
mov
int3
mov
xor
imul
mov
addr16
dec
add
push
pusha
push
xchg
pop
icebp
jp
ja
jno
scas
sbb
and
adc
pop
fistp
lahf
shr
gs
data16
stc
data16
ss
push
int
ret
cmp
jmp
loope
leave
mov
cmp
das
in
sbb
push
pop
les
mov
loope
sti
xchg
jmp
mov
inc
cs
xchg
mov
lock
(bad)
ja
and
gs
mov
(bad)
je
fcom
sub
mov
cmp
add
adc
test
call
jge
ret
and
clc
loopne
push
dec
sbb
fldenv
aam
rcl
repz
sbb
sbb
or
ins
js
xchg
lock
rol
and
adc
and
or
in
in
aad
je
adc
cmp
pop
sub
or
mov
sbb
imul
jb
mov
jmp
fwait
pusha
jl
sbb
inc
in
leave
xchg
in
icebp
frstor
stos
cmp
pop
push
into
xlat
shl
add
mov
xchg
xor
test
test
(bad)
fld
es
cmc
mov
cwde
cmp
mov
dec
add
and
pop
ror
adc
mov
jns
ins
xor
xchg
add
scas
jg
inc
adc
js
sbb
(bad)
retf
popa
xor
icebp
cmp
ret
rcr
dec
data16
jno
test
pop
fxch
sbb
jmp
sub
lods
fwait
xchg
dec
aas
out
outs
dec
sub
inc
xchg
test
mov
ret
fidiv
lea
add
mov
mov
jl
dec
cmp
(bad)
sub
push
icebp
daa
mov
ds
aam
jecxz
jge
xor
cmp
scas
push
fsub
sub
hlt
loop
hlt
xchg
ficom
push
(bad)
push
in
push
iret
iret
adc
inc
fmul
or
xor
or
test
add
dec
dec
(bad)
jne
scas
arpl
push
jno
cmc
pop
cmc
push
xor
sub
icebp
inc
scas
cmp
pop
leave
mov
in
mov
mov
xchg
jl
in
fs
push
ins
shr
cmp
jne
imul
(bad)
xlat
int3
mov
mov
(bad)
mov
sahf
inc
aam
rcl
not
mov
jge
or
and
gs
xchg
push
(bad)
push
call
push
fisttp
jmp
xchg
dec
mov
aaa
cmc
mov
popa
cmp
push
jle
lods
and
pop
scas
pop
stos
mov
cmps
test
adc
dec
sub
ins
or
loope
cli
loop
cmp
in
jmp
jg
popf
cmp
cli
inc
arpl
rol
sub
js
pop
adc
push
mov
cmps
sbb
cmp
cmp
pop
jg
mov
mov
inc
cld
(bad)
gs
call
cwde
inc
pop
pop
in
sub
mov
enter
and
cmp
sub
(bad)
cmc
test
mov
call
jb
sub
mov
add
ss
jns
stc
data16
mov
test
or
cmc
inc
ds
push
dec
xchg
push
cmps
inc
repz
adc
sub
jb
test
pop
sub
je
leave
adc
mov
push
shr
in
test
scas
cmps
xchg
cmp
adc
jl
inc
mov
adc
lea
pop
adc
dec
loope
jg
or
popa
sbb
add
add
sbb
push
fcmovbe
dec
out
sbb
jge
ja
outs
jge
call
int
popf
es
or
adc
mov
cmp
out
cdq
adc
cmp
fucomip
js
dec
sti
adc
dec
adc
mov
or
push
and
aaa
jae
xor
ret
xor
cld
(bad)
dec
xchg
push
dec
jnp
add
sub
add
ret
jnp
adc
mov
push
mov
xchg
movs
jmp
jmp
sub
ror
sbb
sbb
ins
add
iret
add
inc
(bad)
ja
dec
and
pop
(bad)
cmp
xchg
dec
rcr
inc
push
imul
sub
inc
lds
adc
or
xchg
jb
fstp
sub
xor
xor
js
clc
aad
xor
cmc
sub
pop
jmp
xchg
adc
add
mov
xchg
stc
adc
jl
mov
cmp
pop
loopne
test
xchg
lods
pushf
sub
movs
daa
or
pop
and
and
xor
lods
push
rcl
popf
cmps
movs
ds
jae
scas
push
cmp
jl
aas
and
xchg
fld
sbb
xor
shl
(bad)
or
pusha
adc
push
inc
(bad)
retf
out
shr
int3
xchg
mov
mov
sti
push
xchg
sub
adc
jmp
cmp
mov
outs
ds
scas
adc
and
pop
sahf
repnz
mov
popa
in
sbb
pop
or
inc
ja
into
jle
mov
mov
lds
dec
ror
ret
nop/reserved
js
add
in
fs
inc
aam
pop
dec
and
cwde
(bad)
xchg
adc
mov
sub
shl
inc
jmp
in
or
push
dec
aaa
div
xor
ds
or
mov
dec
repz
mov
in
dec
aad
retf
imul
mov
or
bound
call
outs
jecxz
push
mov
jl
jle
sar
or
or
out
or
nop
push
adc
mov
xchg
outs
outs
xchg
mov
push
cli
call
and
xchg
aad
jmp
mov
in
ret
ins
fstp
xchg
xchg
inc
cmp
xor
cmp
ret
(bad)
pusha
sbb
fs
lds
push
cmc
fisub
addr16
jmp
jne
xchg
outs
scas
cs
pop
push
jmp
aas
lods
add
mov
repz
mov
xchg
cmp
jnp
neg
loope
(bad)
iret
dec
xor
dec
xor
push
leave
jns
cmp
std
in
xchg
push
lahf
loopne
mov
js
mov
jmp
cdq
data16
mov
cld
pop
lahf
xor
adc
lods
inc
clc
icebp
dec
mov
pop
mov
sub
cmc
xlat
xchg
pop
xchg
ror
xor
pop
or
std
lds
shr
scas
repz
(bad)
adc
hlt
fnstsw
xor
int
gs
jnp
nop
xor
sar
jno
adc
push
mov
push
jbe
arpl
(bad)
inc
xor
ffree
push
mov
push
push
ss
mov
test
dec
inc
add
js
pop
imul
stos
les
xchg
jp
xchg
cld
jl
pop
aad
push
push
imul
dec
jge
repz
mov
out
iret
aad
shl
jo
enter
dec
mov
adc
enter
mov
loope
dec
fcmovnb
add
imul
mov
mov
inc
jo
adc
popa
mov
mov
push
clc
addr16
jg
les
std
xchg
jle
sub
cmp
pop
movs
push
xor
and
add
mov
push
xor
lds
je
out
mov
fld
jp
fnstsw
or
clc
sbb
pop
aaa
fbld
loopne
add
enter
sbb
pop
xor
mov
xor
push
or
jle
sub
retf
scas
movs
dec
dec
cld
mov
push
shr
adc
lock
call
in
popf
dec
ins
out
lea
stc
adc
shr
rcr
imul
mov
in
push
icebp
sbb
mov
or
fmul
adc
ins
push
fsub
fdiv
repz
aaa
enter
inc
adc
leave
js
ja
sub
pop
jbe
push
out
in
and
leave
clc
jns
mov
ds
jno
push
dec
pop
xchg
pop
inc
jns
shl
cmovb
aaa
mov
xchg
adc
pop
imul
outs
inc
jp
mov
xlat
adc
sub
xor
pop
je
jecxz
pushf
cwde
push
ds
cwde
retf
fisub
pxor
out
jo
mov
sub
inc
and
fistp
cmp
cdq
clc
pushf
loop
sub
mov
enter
imul
sub
and
cld
cmc
and
or
sar
mov
add
jg
ret
inc
cmp
mov
cmps
jp
aaa
adc
lea
mov
sbb
and
arpl
scas
hlt
(bad)
fucomi
jbe
daa
xchg
dec
mov
jmp
loopne
lea
jnp
or
pusha
jl
fiadd
and
add
cmp
(bad)
mov
aaa
jecxz
lahf
jg
mov
mov
sub
retf
call
das
in
sub
es
dec
jmp
(bad)
mov
(bad)
mov
rcr
mov
out
aas
cs
adc
xor
out
aas
jl
sbb
push
add
(bad)
push
mov
dec
es
or
shr
in
sub
clc
ret
dec
add
dec
inc
fisub
fdiv
cmps
sbb
sti
xor
push
outs
push
cwde
inc
or
bound
div
adc
(bad)
mov
in
shr
popf
je
les
mov
gs
cmps
sbb
les
adc
stos
leave
das
movs
or
jl
xchg
into
sub
(bad)
xlat
int3
or
push
ror
sahf
popa
push
mov
mov
ins
inc
xor
test
lock
adc
sar
cmps
(bad)
cli
jle
adc
lahf
lock
in
das
dec
push
(bad)
stos
pop
dec
cli
xor
add
(bad)
ret
arpl
xor
int3
sub
jp
dec
icebp
arpl
ret
aaa
mov
and
xlat
or
fwait
push
(bad)
xor
into
pusha
jmp
mov
(bad)
push
in
adc
rcl
jp
cmp
dec
rcr
mov
mov
or
mov
(bad)
loope
sub
div
pop
ret
loope
das
adc
jbe
xchg
cwde
pop
lahf
fdivr
loopne
in
jmp
cwde
jge
dec
cmps
outs
xor
pop
adc
xlat
mov
add
prefetch
or
ds
pop
xor
sub
out
or
mov
xchg
xchg
bound
or
(bad)
fld
hlt
xor
mov
jmp
loopne
sar
stos
aas
xor
mov
cmps
xchg
mov
out
leave
lock
leave
xchg
adc
mov
(bad)
jecxz
sub
cmp
les
fild
scas
and
ret
fadd
mov
and
ja
xlat
(bad)
stc
sub
(bad)
dec
inc
ret
cmp
and
cwde
dec
ss
test
cs
xor
(bad)
dec
inc
das
fwait
push
pop
mov
jns
call
or
mov
push
inc
dec
inc
sbb
cld
pop
adc
or
xor
sahf
mov
mov
or
mov
or
bound
cmps
popa
xchg
mov
lahf
add
sbb
aas
add
(bad)
call
arpl
xchg
aaa
(bad)
cmp
ret
mov
pop
ja
mov
cs
(bad)
gs
lods
cmp
xchg
cmc
or
add
ins
push
mov
popf
xchg
or
gs
arpl
in
mov
or
mov
mov
fst
mov
and
enter
lds
aad
mov
fadd
or
inc
push
punpckhwd
jae
(bad)
mov
cmp
cmp
fwait
rol
inc
arpl
push
fisttp
ret
sbb
(bad)
and
xlat
addr16
js
xor
xchg
and
lea
lock
jns
and
or
cld
jae
clc
or
push
dec
xchg
cmp
out
cmp
jmp
std
cmp
inc
lahf
call
pop
add
and
shl
lock
xor
push
inc
adc
or
mov
ror
dec
loop
sti
popf
sbb
popf
imul
jle
and
mov
xchg
jae
iret
mov
stos
xor
pushf
test
push
cmc
xor
mov
daa
lock
inc
jnp
adc
mov
mov
inc
or
fldenv
xchg
xchg
shl
mov
sub
lds
xchg
add
jp
je
sbb
mov
scas
sbb
or
stos
pop
add
or
jmp
dec
sbb
dec
daa
(bad)
push
enter
retf
sub
push
out
xor
jb
iret
iret
and
nop
test
mov
mov
fmul
or
ds
int
push
test
rcl
pop
pushw
mov
sub
xor
push
out
add
dec
int3
rcl
sub
xchg
enter
add
stos
cmp
in
add
rol
xor
dec
xor
mov
push
mov
mov
outs
ror
shl
mov
dec
push
(bad)
int
push
jl
mov
cld
in
bound
sbb
mov
es
pusha
jmp
(bad)
icebp
out
sub
add
mov
hlt
in
mov
les
adc
js
mov
fs
ss
into
jecxz
frstor
mov
xor
jge
cmp
ins
sbb
ins
cmp
(bad)
repnz
cmp
adc
xor
popa
cmp
popf
in
inc
push
jmp
and
fild
data16
xchg
dec
test
sub
sub
pop
pop
fisubr
adc
dec
mov
rol
adc
jmp
pop
aaa
cmp
mov
jle
or
cmp
push
mov
cmp
les
jge
aas
and
jg
ret
jmp
or
(bad)
xor
fucomip
mov
movs
arpl
xlat
adc
shl
call
push
and
ror
cmc
mov
kmovw
adc
ret
pop
jmp
jl
sti
mov
dec
dec
ja
xchg
xor
and
(bad)
sub
or
jp
inc
push
mov
std
lea
sub
scas
pop
stc
jbe
std
es
cmp
out
fdiv
jle
fist
push
call
(bad)
test
shr
je
lds
jae
add
pop
add
xchg
(bad)
jl
jle
mov
test
or
mov
lea
test
das
inc
movs
xchg
jno
sar
popa
lods
or
mov
ffree
and
jecxz
les
cld
retf
jmp
iret
fisttp
adc
mov
arpl
mov
xor
sub
inc
or
xchg
mov
out
add
bound
scas
mov
jno
mov
std
push
call
movs
cmp
and
loope
push
jmp
fimul
dec
mov
outs
aas
push
mov
leave
add
jl
mov
iret
pop
add
sub
mov
and
pop
(bad)
xchg
or
jg
sub
inc
push
fist
sub
inc
mov
pop
call
das
das
inc
clc
lea
in
hlt
ficomp
and
xchg
add
pop
fisub
adc
jp
mov
add
xor
and
dec
cmp
or
cs
xchg
jp
cmc
push
arpl
dec
popf
pop
add
dec
fwait
push
mov
pop
push
mov
clc
div
adc
lds
add
sar
xor
stos
popf
add
fcomp
push
retf
(bad)
call
inc
mov
mov
in
hlt
int3
inc
sbb
movs
push
and
outs
les
push
sbb
fsubr
inc
mov
ins
inc
cmp
test
aam
cmps
test
es
retf
or
pop
stos
sbb
or
stos
int3
mov
jmp
gs
test
aam
jle
ins
and
das
rol
push
out
push
addr16
xor
in
sbb
mov
pop
inc
stos
and
push
into
dec
scas
daa
nop
mov
jne
mov
(bad)
pop
(bad)
imul
or
push
shl
div
adc
xor
add
add
arpl
jae
icebp
cs
inc
jae
jb
cmp
in
(bad)
sbb
lock
mov
jno
sbb
push
dec
mov
and
fsubp
jmp
push
div
cmp
daa
xchg
fiadd
adc
stos
test
pop
or
xlat
and
aaa
in
and
fist
dec
dec
test
paddusb
loopne
rcl
mov
ins
cmp
cmps
and
jl
call
jmp
pop
cmp
out
scas
push
add
out
dec
or
pop
outs
loop
jge
xlat
or
push
call
shl
and
lds
mov
jmp
push
jecxz
mov
call
cdq
push
and
xor
sub
push
out
loop
icebp
ret
out
add
ret
cld
aas
sbb
add
jg
or
ffreep
jbe
sbb
out
pop
ins
dec
xor
int3
xor
push
adc
sub
(bad)
ss
sub
call
cli
gs
push
ror
das
push
fs
addr16
push
les
or
and
stc
mov
mov
cmc
inc
mov
jmp
push
outs
jnp
and
in
pop
adc
js
mov
push
das
xor
inc
js
in
out
jmp
pop
retf
retf
and
xchg
fldcw
sub
mov
xor
sub
imul
loope
fcomp
in
sub
inc
push
ins
sub
xchg
pop
adc
stos
mov
bound
pop
mov
mov
fld
fwait
cli
outs
ss
push
pushf
call
cld
mov
dec
cli
lock
fadd
mov
adc
imul
repz
mov
inc
mov
sub
push
(bad)
jle
push
pop
loopne
and
pusha
lea
xchg
lds
out
mov
push
dec
inc
mov
mov
ins
cmps
xor
cmp
sar
(bad)
push
cs
ficomp
inc
fidivr
lods
dec
and
cmp
scas
arpl
inc
or
mov
call
out
es
push
adc
push
xchg
mov
in
int
cmps
lock
cmp
add
dec
mov
mov
gs
and
inc
add
mov
mov
pushf
fs
push
mov
das
shl
repz
mov
sbb
retf
enter
mov
retf
lods
sub
jg
mov
ins
ss
pushf
cli
push
or
and
fmul
lods
shr
mov
shl
sti
pushf
out
inc
inc
inc
jmp
std
repnz
stos
push
cmp
lods
mov
push
mov
in
or
sub
iret
mov
mov
jmp
dec
mov
mov
xlat
xchg
xor
xchg
lods
pop
push
xchg
dec
cli
and
lds
loop
jg
add
cmp
cwde
jl
addr16
mov
sub
(bad)
jbe
push
jge
shr
pop
ss
mov
or
cmp
push
nop
mov
aaa
mov
dec
daa
sub
test
push
xor
aas
ja
mov
ss
jge
mov
xor
movs
shl
pushf
rol
xor
jge
int3
retf
mov
cmc
xor
cld
das
mov
sbb
jp
loopne
sbb
les
add
sbb
into
mov
jns
(bad)
inc
mov
sub
pop
sahf
dec
or
sbb
pusha
cld
mov
mov
lds
movs
jo
les
and
dec
sbb
dec
dec
jmp
add
mov
rcr
xor
xchg
popa
xchg
dec
cmp
jmp
or
outs
stos
jno
imul
leave
push
data16
xchg
xchg
(bad)
es
fsincos
lea
popa
jmp
call
mov
ins
cmp
(bad)
fstp
cmp
mov
std
adc
mul
pop
cdq
ret
and
mov
inc
or
enter
dec
jp
inc
sbb
retf
push
sti
mov
jle
mov
push
push
xchg
shr
mov
lds
fwait
cmp
jo
push
mov
sahf
cmp
hlt
sub
mov
fidivr
cmp
(bad)
fdivr
jmp
imul
mov
xor
cmps
push
mov
popf
les
cdq
test
xlat
adc
stos
ss
mov
lahf
mov
adc
adc
pop
dec
push
adc
mov
adc
xor
mov
es
dec
sub
ds
jp
fdivrp
pop
(bad)
gs
dec
xchg
sbb
jg
mov
fstp
or
das
mov
pop
adc
(bad)
mov
es
lock
stos
and
retf
and
mov
xor
test
popa
dec
test
jnp
enterw
push
or
fmulp
das
inc
jb
in
jecxz
into
mov
push
add
mov
push
sbb
mov
dec
sub
add
loopne
shl
cmp
push
push
call
or
retf
movs
retf
jg
retf
jb
fisttp
xchg
movs
xchg
jp
popa
jp
jns
xchg
sbb
cld
repnz
lock
push
aam
jle
dec
pushf
inc
out
sub
or
jae
mov
jle
push
out
or
xor
sub
sub
xor
mov
pop
jp
pop
cli
inc
dec
inc
les
outs
into
cmps
cld
sbb
mov
cmp
ror
fdivrp
pop
out
and
mov
out
inc
rcl
gs
jecxz
mov
jle
xor
and
inc
retf
add
pop
(bad)
leave
scas
adc
or
pop
mov
aad
cdq
or
pusha
cmp
div
cmps
adc
mov
xor
lea
mov
xchg
mov
mov
fucomi
jno
stc
jmp
andps
ins
dec
(bad)
xlat
mov
jl
xchg
inc
and
add
push
(bad)
fcomp
mov
push
gs
ins
jmp
(bad)
ret
and
add
dec
push
inc
stos
xor
sub
sahf
xor
adc
jge
ja
rcr
mov
je
or
sub
jne
je
mov
cmp
iret
pop
inc
int
imul
fst
sbb
popw
pop
sbb
stc
push
xchg
push
popf
dec
and
push
mov
test
stos
gs
popa
mov
jne
test
test
loope
jl
and
ins
cmp
(bad)
cmp
data16
stos
push
out
xchg
ror
and
add
popa
rcl
push
pop
fnsave
cli
sbb
pinsrw
mov
xchg
out
add
sub
mov
shl
cmp
fist
xchg
dec
inc
xchg
pop
call
imul
jle
push
adc
mov
(bad)
sbb
je
rcl
in
gs
inc
mov
mov
push
in
imul
stos
imul
mov
nop
jle
cmp
mov
jg
into
mov
mov
loopne
cmp
xor
push
inc
popf
cmp
xchg
mov
pop
hlt
push
pop
jmp
out
bound
aas
push
out
pushf
pop
imul
pop
or
ror
es
adc
adc
sub
in
stos
popf
addr16
jge
not
pop
imul
xor
popa
out
mov
sub
out
ins
mov
lock
cmp
pop
dec
fwait
retf
js
push
lds
and
and
push
dec
ret
jp
adc
test
sub
fild
and
mov
xchg
les
gs
fs
stos
dec
popf
leave
out
or
and
cmps
mov
retf
test
mov
nop
popf
mov
imul
lahf
cwde
xlat
in
xchg
jnp
mov
xor
retf
gs
pop
sbb
mov
popa
mov
xor
jl
jmp
add
sahf
pop
dec
push
in
push
xchg
(bad)
jecxz
xor
int3
aaa
repnz
dec
ss
sbb
cmp
leave
adc
std
out
pop
push
push
inc
push
std
pushf
sbb
loope
and
sahf
pop
push
leave
imul
inc
mov
clc
mov
shl
mov
jle
push
add
cmp
sub
mov
push
mov
add
imul
xchg
out
jae
aaa
sub
sbb
mov
dec
test
ins
bound
jbe
mov
(bad)
pop
aad
stos
fnstsw
xor
add
mov
adc
(bad)
rol
mov
fimul
cmp
cmp
stc
pop
fs
lahf
lods
and
into
pop
es
mov
mov
js
mov
cdq
fnsave
cmp
test
sub
pushf
push
mov
sub
add
mov
cmp
out
mov
pop
call
ins
retf
out
test
push
and
jae
xchg
aam
sub
jbe
mov
dec
and
add
lahf
sub
movs
fldcw
cvtps2pd
dec
aam
hlt
xlat
sbb
jle
int3
mov
in
xchg
sar
sahf
popa
push
fs
dec
out
mov
sub
xchg
imul
push
dec
mov
in
mov
cld
cmps
test
push
(bad)
(bad)
sub
jno
aam
ds
stos
and
mov
sub
and
mov
dec
stos
in
pop
call
outs
or
push
xchg
mov
inc
cmps
jmp
jae
add
mov
push
(bad)
scas
jno
mov
xadd
aad
js
repz
push
mov
cmp
push
inc
push
cmp
movs
dec
enter
daa
jnp
lock
popa
fidiv
loop
in
sbb
jmp
fdiv
ret
enter
or
jnp
inc
mov
stc
adc
xor
mov
jmp
push
sbb
mov
dec
das
adc
test
add
ret
mov
and
icebp
ins
sbb
mov
repz
icebp
fsubp
in
rol
inc
arpl
mov
xchg
xchg
inc
loop
adc
jns
cmp
stos
mov
daa
icebp
sahf
(bad)
loop
scas
iret
add
and
outs
nop
and
in
mov
mov
add
sub
mov
cmps
push
enter
mov
not
ret
xchg
pop
fucomip
cwde
stc
lea
inc
(bad)
ds
add
xor
neg
mov
mov
jg
out
out
imul
mov
shr
xor
and
shl
xor
xor
mov
outs
pop
adc
pop
xchg
mov
dec
xor
jae
push
popa
push
(bad)
cdq
push
ror
repnz
arpl
mov
push
lock
idiv
or
pop
adc
sbb
jle
fcomp
in
cs
(bad)
out
push
or
jg
arpl
cs
or
jns
iret
or
push
(bad)
div
imul
rep
aas
aad
jns
out
sbb
repz
dec
push
mov
xor
pusha
dec
cmp
dec
shr
ss
(bad)
cld
or
inc
sahf
mov
sbb
and
add
inc
addr16
hlt
and
xchg
shl
cwde
ret
jmp
jo
mov
sub
stos
bound
movs
aas
outs
push
lods
es
cmp
dec
lods
mov
out
dec
out
stc
movs
sbb
pop
movs
pop
movs
push
test
dec
pop
push
mov
xchg
or
sbb
rcr
pop
into
ins
leave
movs
jbe
enter
adc
lods
cmp
and
pop
movs
xchg
into
into
mov
fwait
inc
xchg
jge
push
clc
sar
cli
sbb
mov
pop
cmc
jmp
mov
dec
sar
loope
ror
lock
adc
jbe
arpl
xor
jb
ror
fsub
xor
fcmovb
into
or
das
cmps
fstp
pop
iret
and
retf
jge
mov
cmp
add
and
mov
retf
pop
in
xchg
mov
xchg
jmp
in
out
inc
and
addr16
rcr
ret
sub
neg
mov
push
mov
ror
mov
test
sub
loop
cld
cmp
fidivr
leave
inc
test
sub
xor
mov
popf
mov
jle
out
es
into
cmps
xor
jnp
std
dec
je
hlt
or
adc
cmps
sbb
xchg
cwde
popf
push
cmp
xor
movs
fwait
mov
or
aas
mov
dec
in
ins
stos
jbe
out
retf
repnz
in
fld
jnp
pop
les
inc
push
retf
pop
adc
sbb
add
int
cli
out
pop
push
mov
fild
(bad)
in
inc
test
cld
in
or
inc
sub
shr
repz
test
sahf
maskmovq
test
inc
jne
loope
adc
ss
add
sar
mov
jmp
jmp
push
dec
and
loopne
call
iret
(bad)
mov
pop
enter
cmc
sbb
cmp
xor
stos
sbb
movs
add
sbb
cmp
mov
sub
mov
push
sub
sub
fstp
shr
cmp
leave
test
movs
pop
xor
mov
push
daa
lods
fcomp
stos
xchg
mov
inc
cs
gs
adc
and
mov
jns
cmp
movs
test
mov
fbstp
out
movs
lds
xchg
int3
dec
fwait
lds
sahf
adc
mov
cld
sbb
in
cld
inc
cmp
ins
aam
adc
std
inc
dec
daa
push
adc
rcl
leave
pop
sub
adc
push
ja
cmp
sub
mov
sti
ss
pushf
popa
push
mov
test
or
mov
sahf
mov
and
dec
enter
jb
sti
adc
fdivr
mov
rol
loope
pusha
cld
loopne
imul
mov
lods
outs
mov
loop
dec
mov
clc
inc
call
jge
push
pop
xchg
(bad)
fs
pop
fadd
rcl
daa
pop
mov
call
jmp
in
dec
jno
cdq
test
out
loopne
(bad)
pop
pop
cmp
jmp
rcl
jns
mov
in
pop
xchg
xor
sbb
cwde
inc
push
hlt
enter
lahf
sbb
jl
push
mov
pop
and
add
xchg
or
pop
push
jno
inc
fcmovnu
in
movs
dec
pop
mov
inc
loop
(bad)
loope
jmp
inc
sub
dec
je
xchg
arpl
pop
shl
int3
fild
add
xchg
dec
test
(bad)
jmp
imul
jecxz
jo
adc
movs
in
fiadd
xchg
jmp
xlat
jle
rcl
push
aad
sbb
retf
or
aam
cmc
push
mov
(bad)
mov
(bad)
test
int3
cmp
addr16
loop
(bad)
cmc
jl
ins
xchg
or
pop
mov
sub
push
push
mov
xchg
jle
in
push
outs
push
stc
add
pop
inc
pop
ror
data16
ror
adc
sub
jno
out
xchg
add
inc
cli
js
mov
lahf
fcmovnu
mov
push
mov
jmp
sbb
movs
jmp
fs
out
fsubr
aaa
and
xlat
or
push
jecxz
xchg
or
repnz
fmul
pop
in
mov
call
and
jo
nop
std
call
stc
scas
adc
neg
aad
add
repz
mov
aas
jb
push
add
mov
out
and
ret
pop
or
push
ins
(bad)
or
shr
xor
int3
push
mov
adc
test
xor
ret
xchg
jmp
retf
clc
in
cmp
je
int
ret
adc
stos
pop
sbb
jo
sbb
inc
or
xor
in
clc
mov
add
mov
cmp
or
jmp
repz
inc
xchg
mov
hlt
aad
and
push
retf
frstor
dec
lods
fistp
call
and
cld
mov
push
fdiv
mov
movs
inc
sbb
and
pop
adc
mov
les
xor
inc
cdq
xor
jmp
loop
push
jmp
pop
ja
ins
retf
inc
fisub
add
icebp
and
movs
xchg
sbb
mov
cmp
pop
popf
sub
popf
inc
mov
cmp
cmp
jae
and
xchg
mov
jbe
ja
xor
test
sbb
movs
jnp
jge
xor
shr
ret
movs
stc
into
dec
dec
test
test
out
sbb
sysexit
loop
xchg
pop
loop
sub
ret
call
inc
pop
aam
jp
retf
cli
mov
mov
(bad)
jnp
xchg
pop
pop
add
icebp
pop
or
stc
xor
adc
cmp
(bad)
jns
xor
mov
sub
retf
(bad)
retf
sub
xor
call
pop
lahf
pop
in
sub
mov
xchg
mov
outs
test
sbb
mov
sub
add
(bad)
movs
mov
icebp
dec
pop
sbb
add
scas
test
(bad)
mov
out
jmp
pop
or
pop
sub
jg
(bad)
lahf
inc
push
push
repnz
int3
popf
jecxz
jne
or
inc
cmps
lock
pusha
(bad)
lea
test
arpl
cmps
sbb
in
mov
fwait
jmp
pop
sub
imul
xor
inc
adc
aas
adc
adc
xchg
enter
adc
test
dec
icebp
lahf
push
jnp
mov
lds
popa
clc
pushf
mov
je
jae
mov
movs
cld
mov
inc
imul
js
xor
add
or
setnp
and
jbe
pop
in
and
push
mov
pop
and
fldenv
cmps
retf
in
stc
rol
mov
shl
shl
retf
add
hlt
js
out
ret
aaa
cld
(bad)
stos
pop
xchg
add
jge
pop
push
add
sahf
dec
jae
pop
xor
ds
arpl
cdq
out
push
pop
cs
out
daa
ror
std
cmp
cmp
(bad)
ja
rcr
movs
and
std
or
push
jne
dec
adc
(bad)
sar
jle
push
neg
adc
add
jge
and
mov
adc
cmps
mov
mov
test
xor
aas
dec
and
push
test
push
and
push
cmp
dec
jbe
sub
jp
fisttp
in
in
daa
mov
jae
push
movs
cmps
data16
scas
dec
ds
div
add
lea
mov
pop
push
arpl
pop
jmp
pop
xchg
ss
dec
and
mov
mov
rcr
into
mov
cmp
repnz
shl
sti
jbe
mov
jb
push
mov
jecxz
xchg
(bad)
imul
loope
push
daa
outs
call
bound
add
fs
mov
sub
imul
scas
ret
pop
retf
cmp
mov
dec
ficomp
jge
call
cmps
mov
popa
dec
and
retf
es
xor
inc
movs
pop
call
ret
jmp
inc
fnsave
or
cmp
sar
xchg
dec
mov
sbb
pop
stos
xlat
lods
push
out
fidiv
jb
xchg
inc
in
push
cld
(bad)
bound
jg
dec
jbe
push
btc
sub
sbb
sub
jne
movs
mov
jg
dec
xchg
add
imul
aad
test
dec
pop
push
mov
in
and
mov
popa
fisub
cs
retf
out
mov
mov
jbe
and
pusha
cmps
movs
and
ins
jle
cli
push
ins
mov
pop
push
cli
ss
inc
jle
mov
or
xor
add
pop
std
xchg
dec
outs
mov
dec
inc
movs
dec
fwait
out
cmp
cmp
push
pop
inc
lock
iret
push
ficom
js
or
cmp
mov
xor
adc
cmp
icebp
std
std
inc
sub
test
outs
sub
push
mov
xchg
sub
mov
pop
mov
and
ret
adc
aas
pop
sbb
add
shr
data16
pop
data16
xchg
pop
jp
cmps
dec
cld
rcl
xchg
sub
inc
mov
sub
popa
test
xor
dec
and
mov
push
into
(bad)
pusha
cmps
add
cmc
inc
fwait
movs
mov
push
mov
xor
mov
cmovnp
jmp
dec
js
jmp
push
mov
jo
push
and
xchg
mov
ins
mov
inc
jmp
push
adc
push
mov
in
dec
pushf
adc
xlat
xchg
and
addr16
adc
test
mov
adc
mov
(bad)
out
enter
popa
sub
add
mov
add
int3
add
push
xor
mov
test
fist
(bad)
or
(bad)
shl
popfw
sar
jecxz
call
and
in
(bad)
int3
mov
pusha
inc
dec
dec
and
fs
xchg
ins
push
mov
cmps
aas
(bad)
inc
es
adc
div
ja
rol
(bad)
adc
sub
cmp
cmps
dec
inc
data16
int3
inc
out
jl
retf
jmp
push
movs
sahf
or
jne
sbb
pop
dec
imul
jbe
and
xchg
inc
enter
ja
imul
out
shr
and
into
and
fwait
and
add
imul
xchg
inc
sub
cwde
test
adc
sub
push
sbb
fwait
cmp
cs
imul
lea
xchg
cmp
jb
fwait
gs
adc
lea
cs
pop
sbb
xor
mov
movs
dec
jge
sub
inc
shl
sbb
iret
lea
or
ds
push
jge
mov
scas
sub
ficomp
cmp
lock
mov
mov
loop
call
push
xlat
pop
mul
dec
mov
push
(bad)
fucomp
out
aas
dec
(bad)
fcom
xchg
jns
outs
fistp
retf
sbb
push
jp
cmp
ins
out
aam
sbb
das
jg
mov
pop
test
add
mov
into
sbb
add
and
gs
scas
cmps
shl
jb
and
mov
pushf
or
mov
or
push
mov
data16
enter
and
xchg
fcmovu
add
dec
movs
lods
ja
or
dec
xchg
pop
pop
ss
or
nop
or
iret
inc
test
push
mov
push
mov
iret
test
cmp
dec
jecxz
jnp
mov
hlt
mov
pop
ja
ret
add
(bad)
pop
inc
sub
adc
mov
sbb
add
mov
pop
and
xlat
xor
fist
aam
xor
hlt
jmp
ins
aaa
adc
push
xor
dec
std
xlat
jno
adc
leave
into
outs
push
mov
inc
mov
movs
and
jnp
push
sbb
push
cmp
xor
cdq
cli
pop
push
test
popf
jmp
jae
mov
mov
and
mov
xchg
add
push
ret
or
sbb
xchg
iret
mov
movs
test
mov
adc
push
and
imul
rcl
or
xchg
dec
xchg
mov
mov
mov
and
in
jmp
retf
les
leave
clc
jecxz
or
jo
xchg
push
jb
int3
sub
and
or
and
repnz
jae
adc
mov
test
in
push
(bad)
cld
xor
call
outs
xchg
mov
jmp
sbb
pop
add
(bad)
jp
inc
pop
push
cmp
push
iret
test
dec
aad
repz
test
test
add
mov
lods
mov
pop
pop
jecxz
cdq
inc
mov
jno
sbb
shr
(bad)
int3
and
dec
xlat
sbb
ret
add
cld
inc
mov
mov
rol
xor
popf
retf
adc
or
mov
retf
pop
cld
fstp
fnstcw
mov
jle
mov
push
(bad)
jno
mov
and
adc
add
fucomp
dec
sub
scas
and
adc
and
mov
push
mov
ds
mov
push
adc
inc
pop
inc
std
dec
xchg
or
cmp
ret
mov
inc
jl
ds
scas
aas
sbb
mov
cs
sub
fs
aam
inc
fwait
js
repnz
add
jle
fisttp
push
jge
outs
mov
mov
xchg
fidivr
mov
retf
mov
sahf
xchg
ficomp
xor
push
std
ss
mov
shl
dec
leave
mov
or
mov
mov
jmp
or
jne
inc
mov
adc
in
js
jl
aad
iret
and
test
mov
cmps
nop
movs
movs
mov
ja
stc
cmp
leave
add
sahf
out
push
ror
pop
mov
outs
fdiv
mov
xor
outs
mov
imul
popf
cli
icebp
movs
push
jnp
push
pushw
pop
or
xchg
je
mov
clc
outs
xchg
dec
xchg
mov
cli
out
sbb
out
loop
xchg
imul
ds
xlat
push
sbb
lahf
and
cmps
lods
jg
inc
inc
fstp
dec
xchg
xor
call
jle
cwde
push
lock
(bad)
xlat
xchg
and
pop
mov
mov
jne
rcr
and
and
inc
mov
loop
mov
rol
retf
push
inc
mov
cwde
push
cmc
mov
(bad)
push
sub
pop
dec
push
scas
pop
push
and
add
and
sbb
inc
test
ss
out
fcmovu
pop
push
mov
jle
loope
cmp
in
sub
in
call
jecxz
shl
dec
ins
mov
mov
retf
pop
xchg
push
sti
push
mov
mov
xlat
sbb
xor
sbb
dec
imul
test
jb
outs
jp
push
arpl
and
mov
lods
ins
mov
push
sbb
adc
ret
sub
repnz
push
arpl
in
pop
data16
stos
adc
dec
mov
fs
stc
jp
das
stc
push
fucomi
sub
ds
addr16
push
and
mov
mov
sbb
xchg
sbb
(bad)
hlt
or
cmp
jg
push
call
mov
sub
sub
mov
lea
std
jecxz
test
dec
in
nop
mov
sbb
stc
adc
(bad)
icebp
aaa
int
rol
into
xor
push
sar
movs
add
sub
shl
push
into
js
dec
das
(bad)
(bad)
fwait
push
cmp
data16
fistp
xor
push
imul
or
shr
(bad)
out
cmp
pop
(bad)
mov
retf
das
sbb
xchg
and
xchg
sbb
mov
push
sub
stos
push
xchg
or
lds
fld
mov
xor
sub
mul
add
xchg
outs
out
dec
push
inc
(bad)
xchg
(bad)
mov
or
daa
mov
clc
pop
add
mov
xchg
fcom
sti
mov
xchg
sbb
test
call
push
(bad)
in
outs
adc
jecxz
lods
inc
shr
push
mov
mov
int
push
push
sub
push
sub
mov
or
lea
mov
cli
int
xor
retf
pop
xchg
test
push
nop
inc
cmp
icebp
push
les
test
xchg
inc
repz
das
jno
push
loop
(bad)
(bad)
sbb
xor
ds
pop
push
pop
dec
mov
sbb
sti
or
jge
jne
scas
dec
pop
xchg
ja
dec
repz
ja
xchg
pop
push
dec
sbb
push
sub
xchg
sbb
jle
inc
pusha
lods
int3
xchg
lea
sub
(bad)
xlat
in
push
push
outs
or
fbld
mov
lods
mov
mov
or
adc
dec
dec
cmp
pop
test
jmp
adc
or
push
jnp
jb
cmps
jecxz
mov
xlat
test
sub
sub
sbb
ret
mov
enter
bound
xchg
std
cmp
jno
je
mov
daa
xchg
les
sub
sub
mov
shr
movs
scas
pop
sahf
cmps
cmps
pop
xchg
mov
shr
add
xor
pop
sub
push
jbe
adc
stos
cmp
fwait
clc
call
jl
aam
xor
sahf
dec
sub
inc
mov
mov
lods
ret
dec
mov
and
push
mov
retf
lock
lea
xchg
xor
fcomp
mov
ror
lds
push
cs
out
daa
cdq
loope
fsubr
lods
xchg
mov
xor
(bad)
not
mov
call
add
lock
xor
scas
pop
pusha
int3
xchg
repnz
xchg
jbe
and
fiadd
or
pusha
nop
mov
jo
enter
fs
dec
pop
adc
cmp
mov
call
scas
or
mov
out
fcomp
retf
stos
fwait
dec
xor
xchg
lods
sbb
ja
add
mov
cmps
sar
stos
je
inc
stc
add
inc
movs
jns
mov
movs
js
dec
sahf
(bad)
adc
or
adc
or
jnp
lock
jge
dec
ss
mov
push
mov
add
jg
movs
fsub
or
jmp
cs
vpackssdw
sub
lods
test
ja
bound
imul
sbb
push
fld
cdq
fadd
jb
punpckhbw
test
scas
pop
mov
adc
mov
mov
in
mov
dec
mov
mov
mov
out
stos
ins
jecxz
fnstcw
adc
scas
mov
sbb
and
in
jo
ret
retf
pop
ss
mov
and
std
cmps
xlat
fucomi
dec
loopne
pop
mov
pop
js
pop
shl
and
iret
pop
pop
es
ret
mov
jo
push
inc
adc
fsubrp
or
clc
stos
(bad)
mov
mov
sub
jp
and
(bad)
bound
fstp
lods
xchg
fdiv
stc
pop
jne
outs
pop
fcom
fdivr
movs
shr
xor
inc
outs
cmps
xlat
cmp
stos
mov
enter
jb
pop
pop
repnz
popf
cli
push
dec
fidivr
xchg
pop
adc
adc
psrlq
jge
dec
dec
add
cmc
je
je
xchg
sub
pop
(bad)
mov
push
sub
stos
pushf
cdq
add
loop
cmp
int
test
(bad)
mov
lock
cwde
outs
imul
sub
pop
mov
call
dec
push
jo
cmps
push
fidivr
outs
xchg
or
cmp
std
loopne
sbb
cmp
lea
out
rcl
push
pop
dec
mov
or
push
jo
sub
sbb
je
xor
adc
in
arpl
jne
xchg
mov
idiv
nop
push
in
jbe
xor
ds
adc
leave
sbb
and
or
(bad)
shl
and
mov
mov
pop
sbb
popf
jb
xchg
(bad)
js
sti
pop
arpl
aaa
mov
fadd
add
shl
mov
lds
push
push
test
xchg
shl
push
mov
push
xor
push
popf
sub
out
outs
sahf
psllq
adc
dec
inc
adc
cdq
call
add
cmp
push
jmp
add
fs
mov
adc
dec
mov
div
inc
mov
and
mov
shl
mov
int3
mul
adc
xor
inc
aaa
jecxz
adc
imul
in
xchg
retf
cmps
jp
push
(bad)
pushw
cmp
sbb
(bad)
fucomi
in
sub
xor
push
or
dec
add
loop
cmp
mov
add
mov
mov
pop
pushf
push
sub
dec
xchg
imul
xchg
mov
lock
sub
and
jl
cmp
jl
ja
push
bound
push
mov
pop
jns
test
mov
push
bound
push
push
pop
xchg
repz
or
dec
test
das
pop
cmp
pop
dec
es
in
es
aaa
test
xor
dec
jge
mov
and
push
(bad)
mov
lea
call
ins
(bad)
adc
pop
mov
fdivr
mov
das
pushf
push
cmps
push
jo
int
int3
mov
ficomp
mov
sbb
cwde
xor
(bad)
sti
inc
jg
in
inc
aad
jo
stos
fild
adc
adc
(bad)
cmp
and
inc
xchg
(bad)
fisttp
fld
and
add
cmps
mov
aam
push
xchg
sub
fwait
pop
jnp
add
into
hlt
loop
fcomp
gs
xor
pusha
pop
popf
push
sti
(bad)
retf
je
or
xchg
adc
push
fwait
rcl
inc
xor
push
inc
sub
fs
ret
push
loopne
mov
push
shr
fs
xor
mov
and
(bad)
push
adc
and
push
addr16
scas
retf
arpl
pop
jg
xchg
fnsave
jge
in
xchg
ret
sub
mov
mov
mov
mov
jmp
pop
fidivr
pop
cmps
leave
xchg
hlt
inc
pop
fs
pushf
push
mov
in
outs
and
retf
push
es
mov
popf
pop
jmp
cmp
push
mov
clc
xor
movs
mov
sub
jmp
jno
adc
add
inc
push
outs
ins
sti
pop
add
pop
into
fisttp
cli
out
cmp
bnd
xchg
add
mov
push
inc
icebp
inc
add
jecxz
stos
push
mov
add
dec
dec
jl
iret
inc
adc
aam
(bad)
or
in
mov
test
pusha
push
or
mov
cld
stc
test
out
mov
dec
cs
jg
popa
test
shr
mov
js
adc
mov
bound
mov
cmp
inc
jmp
adc
xchg
dec
dec
jg
mov
xchg
adc
cld
retf
inc
mov
retf
inc
out
dec
mov
push
jle
cmp
popf
and
and
stos
push
outs
(bad)
repnz
and
leave
adc
rcl
test
sbb
xor
out
mov
les
mov
xchg
sbb
rol
js
dec
cmp
pop
cld
not
stos
jl
into
aam
or
ins
movs
(bad)
pop
mov
push
mov
and
nop
jae
clc
retf
adc
(bad)
iret
jae
ins
inc
(bad)
int3
sbb
(bad)
loopne
fdiv
rcl
jge
ret
push
stos
adc
je
test
pushf
mov
dec
rcr
and
std
jmp
add
ins
jbe
fsub
pop
call
and
jle
sar
fwait
and
inc
mov
cmp
adc
into
lods
js
xor
xchg
ret
fs
lahf
dec
cmp
outs
test
xor
push
inc
mov
jns
and
pop
je
jl
sub
imul
push
rcr
aam
push
pushf
fadd
jp
lahf
cmp
mov
mov
mov
std
dec
repnz
jecxz
xor
imul
fdivr
jne
shl
sub
ins
sbb
pop
or
movs
ret
int3
js
lock
sbb
ss
xchg
jl
xor
xchg
aas
or
rol
icebp
xchg
pop
stos
dec
ja
xor
stos
xchg
jge
adc
xchg
aam
fcom
cmp
mov
mov
jmp
imul
sbb
xchg
jne
and
repz
in
(bad)
test
mov
fdivr
sahf
xchg
iret
popa
outs
shl
fcomip
and
daa
sbb
scas
fsubr
jp
sbb
outs
movs
cmps
jmp
fsub
out
jns
cld
outs
adc
out
inc
pop
iret
push
outs
arpl
cli
mov
pop
mov
or
cwde
push
xchg
lock
adc
scas
lahf
test
inc
mov
push
pop
inc
xor
cdq
aad
or
mov
mov
pop
mov
lds
call
clc
pop
sbb
rcr
ja
repnz
imul
sub
ret
lock
mov
daa
imul
ror
mov
repz
jg
out
js
aam
jmp
xchg
loopne
or
xchg
bound
sbb
sbb
ja
sub
scas
jp
lahf
sahf
retf
dec
dec
outs
aaa
and
sbb
jbe
inc
or
add
adc
mov
mov
add
test
mov
les
jl
inc
dec
cmps
lahf
jno
dec
adc
cmps
lds
test
fisubr
ins
test
stos
gs
out
pop
lock
loope
jg
xchg
xor
out
xchg
ret
imul
dec
(bad)
enter
lahf
mov
pushf
pusha
cli
add
mov
add
inc
jae
mov
jle
sub
push
sub
jnp
div
mov
mov
stc
jg
jge
and
shl
pop
lods
lods
or
lahf
ins
hlt
inc
test
push
dec
jmp
mov
xor
or
outs
or
mov
stos
ds
sub
cmp
int
iret
adc
xchg
call
push
inc
add
pop
xchg
sub
xchg
mov
jle
adc
lods
jl
outs
inc
mov
data16
xchg
mov
jne
jp
sbb
out
adc
push
pop
jp
adc
imul
push
outs
ret
sbb
enter
icebp
add
cmps
push
and
dec
ds
enter
jmp
sti
mov
jno
adc
repz
push
push
(bad)
aam
scas
fcmovbe
mov
xchg
sbb
fisttp
cmp
add
aas
sbb
or
das
pop
dec
jg
loope
fcom
jg
loope
mov
mov
in
ror
adc
mov
out
cs
cmp
sbb
ins
push
xchg
daa
aad
jno
jmp
retf
jae
mov
mov
ja
sbb
test
jnp
jge
adc
jo
rep
(bad)
std
mov
movs
imul
inc
ror
xchg
ret
sbb
outs
fcmovu
(bad)
mov
or
shl
cmp
fs
pop
std
pop
inc
or
adc
imul
xor
ins
jmp
(bad)
fdivr
inc
cld
cmp
test
add
add
adc
mov
and
fisub
mov
(bad)
or
mov
add
mov
xor
and
ret
cmp
scas
cwde
xchg
dec
imul
fisubr
and
test
arpl
mov
lea
pop
sbb
mov
xchg
cwde
inc
add
dec
jne
bswap
mov
add
outs
sub
(bad)
stos
jo
test
xchg
(bad)
jge
(bad)
push
inc
dec
sub
jge
mov
aas
cmps
stos
cdq
adc
fisttp
stos
out
jo
sub
push
outs
cmp
mov
retf
shr
out
xchg
shr
dec
retf
inc
pop
nop
xchg
push
jmp
daa
pop
push
pop
in
fbld
adc
mov
cmp
outs
pop
or
xchg
lea
data16
pop
mov
stos
dec
pop
enter
cmps
or
jge
sbb
mov
xchg
mov
js
and
jecxz
loopne
cld
adc
outs
xchg
mov
mov
test
mov
call
push
rsqrtps
mov
push
sbb
stos
iret
es
mov
lods
retf
cmps
fidivr
or
mov
fstp
inc
and
out
mov
mov
inc
cmps
xchg
nop
(bad)
lahf
push
and
hlt
mov
fsubr
call
fcomp
xor
add
inc
aam
cmc
in
movs
ret
dec
jns
push
xor
mov
xor
inc
jmp
test
cdq
jl
xchg
dec
dec
mov
retf
rol
mov
ror
and
data16
or
iret
ds
test
pusha
inc
and
adc
mov
inc
and
add
shr
repnz
pop
sbb
xor
xor
es
lods
js
inc
(bad)
inc
xor
addr16
retf
rcr
(bad)
jl
fnstenv
cld
or
cs
push
aaa
jno
jns
xor
repnz
pop
or
js
test
mov
xchg
and
out
popa
outs
enter
pop
mov
and
es
xchg
movs
jge
es
ret
stos
sub
jmp
mov
dec
scas
adc
js
jns
movs
mov
mov
fmul
loopne
or
fld
sub
rcr
inc
pop
or
movs
inc
pusha
pop
cmp
bound
test
cwde
call
(bad)
movs
lahf
idiv
adc
cmps
mov
xchg
imul
gs
retf
xchg
jb
jnp
les
fld
pop
jnp
xchg
add
dec
xchg
or
adc
adc
mov
scas
mov
sbb
movs
mov
in
adc
sbb
adc
or
clc
add
cmc
lahf
sub
(bad)
(bad)
gs
pop
popf
push
mov
aas
inc
hlt
inc
mov
xchg
cwde
xchg
out
mov
xor
jo
sbb
sbb
in
jmp
mov
push
cwde
xchg
inc
popf
cli
ins
aaa
jg
mov
(bad)
mov
xchg
pop
push
mov
cmp
loop
pop
add
les
dec
push
sub
fcmove
add
mov
cmp
rcr
inc
mov
jp
cmovno
out
dec
adc
ret
fcomp
cmps
js
sahf
and
push
cmp
dec
(bad)
and
ret
xchg
push
rcr
gs
pop
push
push
fmul
adc
nop
nop
nop
jb
es
mov
aam
es
shl
jmp
cmps
sbb
xchg
stc
inc
adc
imul
pop
jl
call
jmp
(bad)
jle
push
sub
cli
or
adc
and
xchg
adc
enter
(bad)
or
mov
movs
div
adc
inc
mov
jl
push
and
std
xchg
(bad)
ret
xchg
and
pop
ins
mov
jmp
xchg
ds
xchg
lock
(bad)
imul
sbb
test
(bad)
pop
mov
xchg
sbb
push
lea
jl
inc
pop
inc
(bad)
cmp
jno
inc
cmp
xor
jmp
sub
addr16
mov
sbb
addr16
mov
idiv
adc
call
inc
fwait
pop
out
push
sbb
(bad)
sbb
mov
out
(bad)
ds
cmp
popa
fucomi
loop
test
(bad)
mov
loope
jle
pop
addr16
pop
jb
sar
shr
push
imul
mov
repz
cmp
loope
xchg
and
inc
push
and
cmps
and
stc
xor
mov
jl
in
or
dec
mov
lods
test
loopne
xor
repnz
jns
cdq
scas
ds
or
shl
adc
adc
pop
xlat
mov
mov
jmp
loope
push
mov
cdq
sub
cs
xor
fsubr
or
dec
inc
push
mov
nop
mov
mov
jp
xchg
jne
and
aas
and
dec
xor
mov
mov
cdq
(bad)
or
cmp
iret
jns
(bad)
dec
nop
adc
pop
inc
xor
lahf
pusha
mov
bound
or
adc
and
mov
or
mov
(bad)
(bad)
mov
dec
mov
jb
push
sar
push
xchg
in
sbb
ins
mov
xchg
daa
movs
lahf
enter
movs
mov
inc
mov
(bad)
out
sbb
push
out
sbb
mov
mov
in
xor
dec
outs
mov
fnstenv
cmp
xor
mov
mov
mov
repz
not
fiadd
jl
adc
add
loop
dec
aas
nop
fs
jecxz
push
sbb
lods
cdq
mov
pop
(bad)
mov
sub
neg
rcr
stc
add
mov
ss
sub
mov
jae
imul
daa
pop
jnp
mov
sbb
cmpps
sub
xchg
aad
int
push
sahf
dec
or
fs
mov
push
xchg
xsaves
cmp
iret
jg
(bad)
push
int
cwde
sahf
dec
sbb
mov
cdq
cmc
aaa
jno
xlat
rcr
push
mov
scas
add
mov
mov
mov
das
dec
in
pop
jg
cmps
fmul
aam
arpl
add
imul
out
mov
xchg
mov
das
sub
cs
test
dec
ins
xor
xor
xchg
adc
jnp
je
shr
sahf
xor
test
mov
or
fld
out
xor
jo
cmps
jl
out
mov
pop
or
jg
pop
jp
(bad)
xor
and
call
rol
in
mov
mov
pusha
mov
sahf
test
lods
push
and
jne
jmp
and
iret
repz
xchg
imul
cmp
arpl
xor
enter
mov
sbb
movs
js
cmc
(bad)
call
push
loop
scas
nop
imul
stc
fcomp
jo
leave
loopne
outs
cs
mov
and
or
popf
or
std
outs
push
(bad)
movs
pop
mov
int
aaa
and
fwait
or
cmps
iret
jno
dec
jno
dec
jmp
aad
fs
cmp
rcr
mov
aam
(bad)
mov
paddsw
adc
outs
imul
mov
push
outs
test
mov
sbb
(bad)
cmps
call
mov
popf
push
test
xor
inc
mov
push
mov
adc
shl
push
lea
jecxz
mov
push
retf
pop
aad
pop
ret
sar
aaa
jne
push
inc
pop
push
mov
aad
iret
out
sbb
out
mov
mov
add
std
pop
pushf
nop
fs
sahf
xchg
repnz
jg
js
frstor
adc
pop
rcr
xchg
xchg
imul
popf
(bad)
sar
adc
cmp
pusha
les
scas
ja
call
(bad)
and
mov
fcom
frstor
mov
in
in
push
ja
call
mov
cs
ret
cmp
xchg
jns
mov
scas
xchg
push
and
nop
mov
push
call
dec
sbb
mov
adc
jne
shl
stc
test
and
mov
or
or
mul
mov
jmp
push
iret
add
int
sbb
sub
jmp
jns
iret
movs
xchg
fisubr
ror
sub
aas
mov
sti
popf
cmp
cmc
xor
dec
outs
rcr
and
(bad)
out
inc
jge
ins
xor
add
xchg
mov
fwait
adc
jge
mov
xchg
lahf
fcomp
stos
test
push
sbb
repnz
fwait
stos
mov
mov
xchg
test
inc
ds
fadd
jecxz
outs
sub
add
push
fiadd
nop
not
gs
adc
inc
mov
mov
lock
dec
sbb
push
and
add
cs
(bad)
enter
push
ss
unpckhps
add
sub
push
jl
das
or
push
pop
dec
stos
retf
addr16
jecxz
cmps
int3
pop
aas
cmps
je
jnp
hlt
enter
les
imul
stc
psrlw
les
cmc
dec
add
jecxz
or
and
cdq
add
loope
data16
fbstp
es
aad
je
in
push
mov
stos
les
sub
outs
push
scas
mov
xchg
mov
ror
mov
arpl
fidiv
leave
and
push
jbe
sti
mov
jle
adc
icebp
stos
lock
hlt
es
push
fadd
pop
es
add
call
repnz
sahf
push
in
in
jae
inc
jle
add
aas
data16
outs
rcl
mov
xchg
je
xor
ss
test
cld
out
push
sub
mov
outs
push
pop
pop
cmp
popf
push
jno
sub
sub
mov
rol
or
in
(bad)
mov
inc
fist
scas
pushf
mov
add
pusha
icebp
imul
test
mov
pop
xor
fcomp
sub
push
loopne
and
aaa
push
lods
pop
ins
pop
pop
leave
aam
aam
cmc
mov
inc
in
inc
add
rcl
pusha
repnz
sub
cmp
outs
push
mov
mov
aaa
mov
addr16
mov
xor
adc
ins
mov
mov
cmps
cs
xchg
(bad)
call
mov
repz
cmovno
push
lds
adc
xor
cmc
lock
push
fcomp
lea
ror
test
cmp
mov
mov
dec
jg
mov
ins
sub
ss
adc
cmp
in
stos
repz
inc
xor
jo
ret
push
add
fistp
xor
inc
push
js
mov
mov
cmp
mov
mov
push
out
(bad)
loopne
call
fwait
imul
xchg
push
pushf
cmps
cmps
jg
push
push
mov
push
sbb
(bad)
imul
fidiv
into
js
mov
fadd
shl
xor
inc
enter
cmp
or
add
or
(bad)
adc
dec
fimul
es
adc
popa
or
dec
jl
jp
stos
js
pop
push
leave
inc
rcr
in
pusha
jne
bswap
push
jp
cmp
ins
xor
ins
fdiv
pop
stos
iret
pushf
mov
icebp
nop
or
xchg
neg
(bad)
cmc
jmp
pop
or
data16
(bad)
fdivr
xchg
dec
mov
(bad)
fldcw
push
pop
cmps
mov
or
pop
pop
sti
mov
imul
out
pop
pop
pop
(bad)
pop
jne
inc
adc
mov
dec
pushf
xor
into
mov
push
push
sub
es
fwait
or
fst
lds
(bad)
ficom
cmp
dec
fcmovb
test
ja
sub
dec
add
dec
dec
jnp
cmp
mov
retf
cmps
mov
out
jp
push
shr
mov
push
xor
dec
push
jno
or
jbe
jp
jne
mov
repz
add
jo
(bad)
iret
sysret
pop
mov
push
pmulhw
loope
nop
cmp
cmc
inc
xor
xchg
dec
push
call
add
ror
push
in
leave
repnz
ret
addr16
sbb
fdivp
inc
arpl
sbb
mov
mov
in
pushf
inc
inc
test
or
mov
and
retf
xchg
adc
and
rcl
sbb
test
movs
sbb
pop
add
mov
adc
push
push
fidiv
fsubp
pop
loope
or
inc
(bad)
cmps
jbe
pop
pushf
rol
xchg
cmp
sub
ficomp
push
test
loop
jb
push
in
and
adc
retf
adc
pop
in
pop
imul
arpl
xchg
mov
sbb
sbb
jmp
clc
ss
(bad)
(bad)
mov
aad
or
loopne
mov
inc
inc
fst
inc
popa
xor
xor
add
jg
fmul
(bad)
lahf
fcom
mov
xchg
cmp
repz
push
aad
aaa
imul
jbe
xor
mov
adc
sbb
nop
and
jle
pop
ror
ror
pop
pop
stos
inc
pop
push
jmp
xchg
xor
mov
xchg
jb
inc
and
cmps
pusha
sahf
pop
pop
mov
scas
sti
int3
ret
fist
pop
jbe
ror
or
dec
popa
out
mov
add
xchg
and
jae
movs
sbb
mov
loope
push
in
pop
imul
mov
test
cld
sbb
leave
add
test
lahf
les
repnz
push
(bad)
out
(bad)
dec
push
out
ins
jns
ret
push
inc
dec
std
stos
sbb
dec
mov
mov
leave
push
fsubp
pop
add
cmp
inc
dec
paddusb
lods
inc
outs
fisubr
inc
and
cli
movs
push
jmp
add
test
jp
in
jne
pop
out
ins
push
bound
pushf
aam
cmp
test
dec
cmp
mov
sbb
xor
outs
fild
imul
cmp
test
scas
and
test
push
inc
movs
mov
das
cmc
xor
cmps
xor
pop
fstp
rcl
and
hlt
mov
mov
arpl
add
adc
neg
or
pop
push
fdivrp
cmp
mov
test
mov
cmp
inc
and
push
stos
push
mov
sbb
xchg
repz
cmps
cdq
ficom
xchg
loop
into
aam
bound
sub
pop
xchg
jo
retf
push
hlt
push
xchg
repz
inc
inc
fiadd
push
dec
mov
repnz
mov
mov
xchg
dec
dec
cmp
in
jg
loope
sub
pop
xchg
and
sbb
mov
rcl
and
jge
mov
jns
xor
das
cwde
fld
jbe
fnstcw
adc
mov
sbb
or
sub
repz
xor
sbb
mov
fstp
shl
sub
pop
dec
sub
or
das
scas
ins
sbb
lea
cmp
mov
push
(bad)
mov
sub
clc
ins
iret
aas
frstor
mov
out
fmul
sahf
mov
outs
or
push
out
dec
pop
mov
dec
mov
rol
outs
inc
cmps
mov
mov
aaa
loope
jb
mov
cmp
dec
aad
push
mov
lds
out
jo
in
js
mov
jnp
sub
jb
push
ds
retf
popf
sbb
outs
xchg
in
cwde
cmps
jle
cwde
and
scas
lods
scas
mov
jg
inc
daa
add
not
cmp
mov
test
es
dec
paddsw
loopne
mov
mov
hlt
loopne
fbstp
dec
(bad)
push
scas
out
push
dec
test
cmp
adc
and
inc
or
in
retf
jns
pop
mov
pop
pusha
div
mov
ss
push
shl
frstor
pushf
adc
loope
stos
mov
into
rol
(bad)
fs
mov
jmp
fnstcw
mov
repz
sub
out
pop
(bad)
and
icebp
jl
iret
xchg
dec
test
sahf
or
push
ins
bnd
fadd
dec
sti
push
cmc
popf
xor
lds
cwde
aas
sub
sbb
mov
inc
into
pop
jp
(bad)
xchg
pop
jno
ror
mov
mov
xlat
jle
mov
adc
test
(bad)
adc
and
add
add
(bad)
or
xchg
movs
lahf
add
hlt
push
add
pop
rcl
cmp
xor
inc
mov
mov
push
pop
dec
ret
sub
dec
adc
push
daa
xor
xchg
jnp
adc
mov
js
xlat
sub
mov
xchg
stos
daa
pop
es
enter
scas
cmps
add
adc
lods
xchg
outs
sbb
std
and
sbb
mov
add
adc
rcl
ds
stc
stos
repz
mov
xchg
ds
enter
mov
gs
mov
pop
sub
jmp
adc
test
mov
pop
or
mov
mov
jge
mov
add
mov
inc
add
sub
jbe
inc
inc
cmp
mov
pop
pop
jge
inc
mov
cli
mov
test
rcr
lea
imul
sub
and
push
xor
xchg
cmp
and
add
xchg
mov
fadd
imul
rol
jmp
sahf
mov
push
pop
stos
push
mov
iret
dec
test
jae
sbb
xchg
add
lock
fist
jg
out
inc
sbb
not
push
or
jne
nop
pop
fsub
or
call
fnstsw
sbb
sbb
pop
imul
push
xchg
test
aam
xchg
pushf
jns
sbb
imul
lea
jl
aam
aas
retf
ret
mov
fistp
shr
clc
(bad)
call
fstp
adc
mov
sub
pop
icebp
xor
in
das
ret
add
jns
sub
(bad)
mov
aas
xchg
iret
cmp
and
sub
int3
push
loopne
or
fwait
mov
jno
add
mov
xchg
pusha
mov
int3
enter
lods
test
mov
sbb
ret
xor
xchg
jo
jo
add
cmps
nop
add
xor
push
pusha
jae
cmp
lea
dec
push
jnp
imul
fwait
dec
arpl
xchg
push
pop
fcomi
(bad)
hlt
dec
or
repnz
cld
ror
push
imul
shl
push
cwde
xchg
jae
aaa
and
outs
gs
cs
or
out
fst
ja
inc
mov
xchg
je
adc
mov
xchg
inc
sti
outs
mov
add
inc
lock
inc
pop
and
xchg
and
mov
and
ss
xor
sbb
adc
rcr
mov
cld
xchg
sub
iret
adc
push
sbb
das
and
fild
rol
sbb
fsub
push
retf
mov
mov
mov
cmp
sbb
sub
movs
push
push
mul
(bad)
(bad)
aad
mov
jne
or
in
in
and
fisttp
jne
data16
out
cmp
pop
out
inc
add
push
sub
push
jb
stos
mov
pop
cmps
rcl
xor
sub
adc
mov
inc
mov
sbb
pop
loopne
xor
mov
push
test
mov
not
(bad)
stc
enter
les
mov
ror
push
xchg
leave
push
dec
or
shl
ins
and
into
repz
and
into
push
xor
sbb
inc
xchg
mov
mov
ins
cmps
xchg
add
push
ret
in
jle
xor
(bad)
or
xchg
ins
mov
pop
xchg
jmp
sbb
repz
sub
and
pop
into
in
(bad)
out
rcr
in
xchg
cmp
ins
div
and
pop
neg
mov
ja
add
leave
jecxz
lods
cwde
jbe
xchg
push
scas
xchg
push
inc
jecxz
movs
sub
adc
and
adc
sub
and
push
sahf
ds
ja
jb
fimul
mov
lock
sub
xchg
adc
(bad)
jl
xor
mov
push
lock
sbb
mov
mov
leave
add
fsub
iret
es
outs
jecxz
push
sbb
aaa
jle
mov
push
add
ror
nop
lods
cwde
cmp
xchg
lds
mov
xlat
(bad)
pop
adc
imul
dec
pushf
stc
pop
push
shl
xchg
dec
jns
(bad)
mov
inc
neg
cmc
or
int3
repz
btc
shr
(bad)
int3
sub
je
xchg
sub
cmc
fs
inc
movs
addr16
inc
std
retf
out
jmp
cmps
shl
dec
push
xchg
push
add
pop
repz
mov
test
lods
(bad)
jg
xchg
sub
(bad)
lds
nop
fistp
inc
in
sbb
inc
leave
enter
xor
xor
outs
xor
lds
jmp
dec
out
hlt
xchg
ds
mov
les
adc
sbb
xchg
jmp
mov
sub
mov
sbb
mov
sub
push
xchg
test
fisttp
pop
or
test
jns
push
mov
test
xor
mov
or
xchg
lods
call
loopne
cmps
sahf
ds
adc
(bad)
cmp
sub
sbb
sbb
pop
fucomip
inc
jae
int3
dec
test
stos
rol
jno
loope
mov
cwde
xor
mov
adc
outs
pushf
mov
lock
mov
fldlg2
xchg
data16
out
sti
test
fimul
pop
movs
mov
sbb
outs
mov
div
loope
pop
cmp
jne
push
and
icebp
clc
nop
bound
rol
cwde
dec
xor
popf
shl
push
add
clc
(bad)
pop
int3
ret
int3
jns
cmp
dec
push
xor
shl
xchg
mov
pop
mov
bound
aaa
aad
repz
rcl
and
xchg
adc
mov
(bad)
push
icebp
sbb
mov
xchg
dec
rcl
in
aam
sbb
or
mov
xchg
xchg
pop
push
(bad)
pop
and
dec
ds
cmp
fild
loope
pushf
jmp
push
lahf
(bad)
pop
sti
cs
cdq
jle
sub
jle
inc
jp
sar
mov
push
(bad)
xor
into
bsf
push
mov
pop
repz
(bad)
sbb
aad
and
rcr
push
push
push
cmps
icebp
repnz
mov
popf
stos
data16
loopne
cmp
xor
xor
xchg
neg
push
loope
mov
(bad)
std
or
not
cmc
and
jl
call
dec
cmps
sbb
(bad)
sbb
and
mov
mov
out
add
(bad)
into
imul
or
cs
sbb
out
ds
lock
sub
in
jne
popa
nop
cmovno
pop
test
jmp
(bad)
rol
cmp
in
sbb
psubsw
jl
cmp
mov
int3
or
mov
out
sbb
loope
xor
and
inc
cmps
add
sbb
dec
aaa
cmp
cmc
jl
fimul
and
jmp
sub
mov
sbb
xor
repnz
mov
push
pop
rcl
cs
sbb
mov
cli
loop
ret
gs
pop
jnp
sub
sar
sub
push
pop
imul
std
repnz
push
lods
daa
ins
in
inc
xor
out
or
inc
ds
dec
mov
bound
add
cmps
mov
mov
ja
mov
xchg
mov
call
sbb
mov
inc
mov
push
mov
pop
adc
lods
push
shl
adc
in
lea
push
sbb
jbe
xor
lods
ret
dec
jbe
out
inc
pop
movs
aas
and
mov
and
lock
or
mov
loope
or
shl
push
dec
cli
add
dec
and
shl
cld
inc
fcmovb
sahf
jae
mov
adc
imul
cmp
mov
rol
mov
test
(bad)
retf
into
imul
cmp
adc
loope
and
sub
mov
test
fcomp
push
xchg
aad
mov
icebp
inc
sub
xchg
daa
add
pushf
or
and
out
pop
sub
or
lea
ficom
sbb
adc
dec
jp
inc
adc
mov
das
loop
cwde
fimul
cmp
hlt
add
sub
stc
pusha
enter
retf
ss
jge
adc
ins
inc
aam
inc
fs
fwait
mov
xor
imul
enter
xchg
and
popa
push
mov
scas
rcl
xor
mov
(bad)
mov
ss
invd
and
mov
leave
and
dec
push
adc
adc
movs
jns
dec
fwait
pop
shl
mov
or
pusha
enter
cmp
das
sti
in
inc
and
jle
xchg
add
mov
xchg
xchg
test
mov
mov
and
scas
adc
mov
ja
adc
or
cmps
push
mov
xor
dec
stos
push
jmp
repz
xchg
js
ret
jecxz
push
mov
aas
xlat
into
jl
jmp
je
pop
test
rcr
and
js
push
in
sub
rcr
not
fild
mov
div
pmaxub
push
pop
fcomp
jg
dec
and
aad
or
shl
jg
xchg
inc
mov
popf
pushf
outs
adc
ja
(bad)
iret
fcomp
loopne
in
inc
repz
push
push
jg
adc
jmp
jg
adc
pop
xchg
jmp
(bad)
movs
mov
cdq
retf
loope
pop
ins
jg
out
retf
cmp
addr16
not
pushf
pusha
adc
je
adc
retf
rcr
xor
imul
inc
ret
cwde
or
jle
mov
dec
fistp
das
lds
out
mov
aam
add
jns
imul
in
push
sub
ficom
push
jmp
iret
dec
inc
xchg
sub
ret
outs
outs
mov
inc
sub
or
xchg
out
adc
add
in
nop
ss
ins
xor
jne
adc
aad
repz
call
cs
mov
fst
stos
xchg
push
mov
repz
sub
pop
dec
sub
loop
inc
add
mov
pop
or
daa
cmc
sahf
add
cmp
rcl
or
xchg
pusha
pop
cmps
mov
cmp
jecxz
jg
outs
nop
and
not
aaa
sahf
icebp
mov
xchg
xchg
popf
(bad)
rcr
mov
les
mov
pop
pushf
movs
push
xor
mov
pop
mov
adc
cmp
cmp
fiadd
repz
(bad)
pusha
shl
add
pop
popf
jno
fsubr
fwait
shl
es
cmp
dec
addr16
push
pusha
inc
(bad)
pop
(bad)
ss
jge
or
pop
jecxz
mov
popf
and
ret
fst
cmp
sub
inc
ret
rcr
int
enter
jl
int
rcr
dec
xor
add
outs
into
ret
sub
push
jns
jb
xchg
adc
push
and
mov
data16
dec
sbb
pop
sub
(bad)
push
int3
vunpcklps
test
and
lahf
lock
mov
iret
xchg
mov
call
and
mov
lahf
push
and
mov
dec
mov
nop
inc
pop
xor
cmps
mov
(bad)
aam
sub
mov
mul
into
call
or
xchg
sar
jge
imul
xlat
aaa
mov
daa
bound
xchg
shl
pop
add
into
add
daa
jo
test
loopne
not
xchg
cs
out
cmp
lods
jl
repz
xor
pop
dec
stos
cmp
xchg
push
in
daa
jbe
mov
xchg
ins
mov
and
shl
mov
inc
jnp
jbe
sub
dec
retf
fsubr
mov
call
jecxz
in
test
shr
test
fwait
sahf
mov
fs
cmp
jae
mov
pusha
test
mov
adc
fs
sub
addr16
rcr
jg
retf
add
push
and
push
push
or
jle
test
cmps
adc
(bad)
repnz
ret
inc
repnz
ja
out
mov
sbb
mov
std
stos
stos
pop
fcom
js
inc
sbb
sub
jecxz
sub
out
fsubr
icebp
cmc
or
xor
enter
test
retf
fstp
mov
xor
mov
lahf
pusha
mov
jno
and
pop
or
mov
mov
ins
mov
mov
jae
adc
add
rol
push
mov
das
mov
arpl
in
in
cli
or
inc
mov
call
mov
jne
inc
mov
push
sbb
mov
push
lea
adc
mov
daa
sahf
dec
add
call
call
bound
xor
enter
je
in
adc
cmp
lods
popa
cmp
jne
mov
mov
cmp
mov
into
in
xchg
mov
(bad)
jmp
nop
sbb
sbb
les
fmul
mov
jmp
call
jns
lods
cmps
jno
add
cmp
in
add
mov
(bad)
test
jo
or
mov
into
xlat
xor
push
daa
gs
mov
nop
add
xchg
fcmovnb
fwait
ror
and
xchg
sahf
push
inc
ja
pop
addr16
jmp
mov
push
sbb
lods
(bad)
into
push
cmp
aas
data16
adc
xor
and
int
and
xchg
or
fnstcw
xlat
mov
or
not
shl
aam
xchg
mov
or
ret
mov
mov
xor
push
cld
imul
xor
mov
jmp
pop
test
out
inc
xor
ficomp
test
call
add
outs
pushf
jmp
(bad)
sub
pop
rcr
jg
rcr
scas
push
(bad)
dec
sub
out
imul
rcr
pop
xor
mov
das
cmp
repz
mov
out
icebp
or
xor
mov
pop
scas
push
sbb
into
retf
data16
sbb
and
push
xor
test
sbb
fstp
sbb
sti
es
or
aaa
pop
aad
retf
data16
sbb
lock
xor
dec
push
and
pop
mov
dec
cmp
retf
fimul
push
lea
xor
mov
mov
or
and
mov
push
sbb
and
fbld
loope
scas
pop
jg
sub
jecxz
pop
inc
xor
jae
call
aaa
shl
jno
scas
(bad)
(bad)
stos
movs
dec
xchg
push
xor
push
xchg
sbb
rol
int
daa
cmps
jge
arpl
jns
cld
pop
push
popf
mov
and
sbb
pop
pop
aaa
xchg
out
test
mov
inc
sbb
xor
and
iret
mov
ss
bound
push
out
and
fisub
mov
jb
xchg
iret
aam
mov
imul
int
dec
mov
sub
out
push
sub
push
cmp
xchg
mov
cmp
dec
stc
ficom
cmp
cmp
sbb
sub
dec
jmp
outs
ja
sub
adc
fild
jl
fmul
mov
xchg
rcr
dec
vandps
push
mov
rcr
sub
dec
rcl
(bad)
jmp
das
xchg
cli
mov
in
push
les
mov
mov
(bad)
dec
mov
add
add
dec
fs
mov
inc
pop
or
fs
fistp
ds
mov
call
(bad)
sub
jl
imul
mov
hlt
inc
call
call
sahf
dec
ins
add
add
daa
ins
fdivr
outs
popf
ins
shl
retf
cld
icebp
fnstsw
lea
addr16
repz
ss
test
pop
xchg
jle
or
rcr
adc
bound
mov
xlat
ss
jmp
jne
test
je
mov
loop
rol
test
jg
test
gs
inc
ins
sar
inc
int3
mov
mov
adc
sub
adc
scas
popa
jg
into
icebp
adc
inc
push
dec
leave
retf
cmp
xchg
or
sti
pop
and
loop
sbb
add
push
push
jecxz
mov
das
addr16
loope
jns
or
sbb
mov
leave
stos
leave
inc
(bad)
out
ins
jnp
mov
jl
nop
push
and
div
pusha
mov
repz
cwde
mov
js
int
mov
adc
(bad)
iret
dec
push
cli
stos
inc
pop
mov
jp
aam
neg
mov
xor
xchg
jecxz
mov
push
mov
out
xlat
and
sahf
fwait
shl
out
jnp
sub
sub
dec
bound
lds
or
mov
(bad)
in
repz
mov
xchg
pusha
rol
mov
push
xchg
popf
das
adc
ja
daa
jg
adc
or
xor
pop
lahf
out
jmp
mov
xchg
pop
and
add
and
jnp
movs
repnz
add
cdq
push
dec
add
cmp
add
stos
pop
mov
nop
xchg
jecxz
jmp
or
add
int
test
adc
inc
sub
jnp
pushf
gs
call
mov
ds
fs
dec
clc
or
mov
inc
test
sub
shr
sub
sub
xchg
inc
rcl
sub
jl
adc
pop
add
jbe
inc
jmp
repz
mov
hlt
mov
test
movs
mov
frstor
sub
bound
inc
jae
or
adc
xor
ret
xchg
sub
sub
cmc
aaa
sbb
and
jbe
and
and
imul
dec
adc
mov
out
jb
out
xor
xchg
jle
pop
sbb
and
dec
popf
mov
add
retf
mov
adc
jns
adc
test
pop
scas
adc
sbb
jo
xchg
test
test
pop
inc
mov
inc
or
stos
test
and
jl
sub
int
stos
add
cs
test
and
xchg
leave
enter
add
mov
xor
xor
stos
les
inc
xchg
mov
lahf
add
cmp
push
add
or
mov
ret
jb
cmc
and
sti
add
mov
call
or
pop
mov
inc
popf
sbb
cmc
std
int
(bad)
ss
mov
fmul
lahf
movs
dec
ja
retf
cs
outs
bound
jmp
pop
outs
xchg
add
mov
aad
cmp
(bad)
jecxz
int
add
loope
cmps
add
mov
mov
aam
and
dec
push
cld
pop
das
mov
ds
jae
jmp
inc
lods
xchg
stos
pop
cwde
fimul
pusha
imul
push
push
std
push
shl
pop
adc
xchg
dec
push
pop
test
movs
aaa
inc
mov
mov
icebp
cmps
push
cmps
or
pop
rcl
jecxz
(bad)
pop
mov
mov
lahf
xchg
push
adc
adc
sbb
sbb
adc
leave
call
call
push
lods
in
push
js
jle
jl
popf
jp
adc
cld
mov
into
adc
dec
sbb
in
scas
rol
xor
fdiv
popf
xchg
cmp
mov
mov
movs
adc
xor
clc
add
sub
xor
sbb
sub
int3
std
dec
repz
jge
ds
gs
mov
mov
stc
les
sbb
xchg
adc
mov
pop
xchg
fdiv
rol
mov
imul
cmp
pop
popa
add
xor
push
(bad)
jecxz
and
dec
xchg
sub
loope
mov
mov
xchg
outs
call
mov
imul
mov
xor
xor
fdiv
ret
test
mov
call
enter
jb
xchg
scas
fmul
cdq
xor
jb
clc
cdq
and
sti
mov
fst
jmp
inc
dec
retf
pop
dec
push
popa
xor
stos
dec
lods
push
xor
inc
adc
les
mov
inc
fild
push
imul
shl
jb
push
mov
fldenv
cmp
inc
push
mov
in
dec
inc
add
jg
idiv
add
test
xor
xchg
imul
imul
jecxz
fcomp
test
mov
xchg
fld
jne
push
cmp
mov
jp
pop
dec
pushf
pop
dec
pop
cld
les
bound
out
pop
jns
int
push
fwait
add
pop
cmps
sub
repz
(bad)
xchg
add
xor
cs
sbb
mov
push
jmp
cmp
out
add
jp
idiv
jbe
mov
and
ds
sbb
cmp
shl
in
cdq
add
dec
loope
cmp
jbe
push
shl
push
stc
jmp
stos
sti
rcl
xchg
pushw
shr
nop
sub
sahf
mov
or
cdq
stos
sti
sahf
add
les
xchg
loope
mov
mov
mov
int3
or
test
imul
data16
mov
fldcw
mov
jmp
mov
and
out
and
and
fsub
aas
adc
mov
pop
and
mov
jae
jns
mov
scas
push
jg
out
push
leave
pusha
push
pop
xor
bound
jno
xor
shl
sbb
mov
push
mov
mov
inc
ret
sti
sbb
out
sub
xor
jb
test
or
xor
sahf
pop
and
pushf
fld
popf
sbb
jae
mov
push
mov
mov
in
aaa
xor
data16
popa
aas
in
jns
cmp
shr
sub
icebp
das
loop
jmp
ret
pop
stos
xchg
je
(bad)
mov
mov
call
jb
cli
jae
sub
cmp
das
xchg
cld
movs
into
imul
data16
stos
jno
mov
aad
cmp
push
mov
mov
jns
out
adc
sbb
inc
stos
push
mov
rcr
imul
jb
and
es
jo
(bad)
pop
fidivr
pop
mov
mov
popa
mov
fsub
jo
out
sbb
aas
inc
fld
ja
out
xchg
pop
pop
mov
mov
xchg
inc
xchg
(bad)
xor
xor
mov
loop
pusha
push
in
jne
fdivr
cdq
out
push
or
mov
sbb
add
add
mov
push
std
xchg
xor
mov
cmp
rcl
sub
push
aad
ror
xchg
push
add
loope
xor
lahf
(bad)
repnz
pop
or
xor
pusha
jmp
jmp
les
movs
jp
lock
inc
(bad)
int
jno
fcom
dec
xor
adc
add
push
aas
pop
call
retf
pop
stc
mov
or
dec
fisttp
sub
enter
fs
jo
push
jns
loopne
mov
inc
loope
ficomp
sub
sbb
add
mov
dec
lods
mov
js
mov
sub
inc
ss
iret
dec
test
jle
out
hlt
popf
imul
in
push
xchg
push
pop
mov
jnp
dec
je
test
icebp
retf
sbb
mov
test
call
push
dec
cmp
xor
cmp
push
mov
aas
or
cs
sbb
or
fdivp
mov
aad
int
pop
and
xchg
xor
adc
push
lea
mov
or
imul
bound
test
add
int3
mov
fistp
inc
xor
or
in
pop
inc
mov
cli
inc
inc
and
lods
cmp
rcl
mov
xchg
pop
mov
inc
add
dec
aam
push
nop
mov
in
movs
(bad)
sar
iret
cld
cmps
xor
movs
mov
jns
and
pop
mov
or
aas
dec
jmp
add
pop
mov
and
repnz
xchg
sub
mov
leave
aad
fcomp
pop
outs
ja
cmp
jne
xchg
mov
or
fadd
test
test
aaa
ins
push
popa
loopne
aad
ja
test
repnz
sar
sub
mov
sub
xor
loope
(bad)
mov
daa
jp
addr16
cmp
jbe
inc
mov
mov
ins
lea
enter
cmp
fcom
cdq
sub
scas
cmp
out
fsub
pop
addr16
cmps
jbe
icebp
adc
movs
jp
cmps
aaa
pop
push
mul
fdivr
pop
fbstp
test
test
mov
aam
aam
icebp
lods
cmp
xchg
leave
fild
scas
jb
mov
pop
sub
pop
push
xchg
sbb
pop
in
push
(bad)
mov
jp
stos
mov
and
sahf
inc
or
jns
in
push
popf
loop
les
dec
mov
repz
push
push
lods
xor
push
pop
cmps
(bad)
jmp
out
out
movs
inc
xchg
imul
mov
cli
mov
cld
in
int3
(bad)
push
jecxz
adc
lea
mov
(bad)
push
dec
fwait
and
arpl
inc
sub
int
pop
mov
adc
jle
imul
cmp
jg
cwde
adc
into
sbb
fldenv
jge
xor
mov
pop
xor
fld
add
mov
xor
xchg
in
dec
adc
sub
pop
jb
jg
or
in
mov
scas
pop
into
jb
xchg
out
hlt
cmp
pop
shr
loop
jle
loope
dec
pop
jo
sar
mov
test
inc
cmps
sub
push
retf
xor
aam
aas
rcl
inc
push
push
pop
mov
out
xchg
add
and
outs
mov
rcl
cmp
clc
daa
test
sub
scas
loopne
outs
sub
fdiv
or
ins
sub
pop
ins
pop
add
xlat
lds
cs
mov
jg
(bad)
in
ja
jg
mov
clc
loope
cmp
(bad)
int
adc
stos
gs
int
sub
sbb
std
sub
shr
mov
adc
jle
cwde
add
mov
mov
mov
out
xlat
fwait
das
cmc
xor
std
push
movs
jno
sahf
sub
leave
mov
xchg
sbb
clc
(bad)
rcl
sub
mov
fidivr
mov
or
popa
in
or
push
fild
dec
cmp
(bad)
cmp
mov
bound
dec
jne
or
jne
dec
jno
bound
outs
(bad)
shr
mov
hlt
mov
mov
push
shl
and
push
int
loopne
js
(bad)
add
cmp
jne
sar
mov
xchg
jl
sbb
xor
jb
inc
pop
test
mov
les
(bad)
fwait
(bad)
add
popa
dec
xchg
stos
mov
jle
das
add
icebp
outs
xchg
inc
(bad)
je
and
mov
mov
hlt
fdivrp
inc
jp
cmc
sbb
cdq
sub
adc
xchg
out
cmp
pop
cmps
pop
(bad)
ret
push
jo
out
inc
pop
jbe
inc
je
inc
xchg
stos
fdivrp
jmp
shr
cwde
popf
in
int3
mov
pop
xor
xor
icebp
cmp
jg
test
lea
jno
or
inc
mov
les
dec
lock
imul
pushf
jnp
jns
pop
aas
addr16
cmp
test
stos
mov
loope
daa
out
popf
inc
pop
pop
stc
mov
loop
xchg
mov
retf
fwait
mov
inc
sub
popf
mov
xlat
fstp
(bad)
and
in
add
xchg
cld
arpl
mov
xchg
test
into
sub
dec
and
sti
adc
call
enter
call
xchg
mov
jmp
popf
mov
je
lea
or
dec
mov
mov
mov
fwait
cmp
int3
inc
imul
inc
js
add
shl
cmp
mov
mov
and
xchg
sub
push
repz
mov
(bad)
jbe
jbe
pop
jae
loope
icebp
and
or
in
xchg
outs
or
sub
pop
sub
add
rcl
push
cmp
in
ins
sub
loopne
pop
and
(bad)
bound
bound
cmc
popf
fnstsw
mov
pop
push
mov
adc
pop
(bad)
push
out
aam
ins
out
dec
adc
sub
pushf
cs
mul
jmp
imul
mov
jne
test
mov
adc
add
clc
xlat
arpl
pop
mov
stos
mov
mov
xchg
jmp
fld
jae
sbb
inc
icebp
sar
call
scas
and
jge
movs
dec
(bad)
sub
xor
sahf
fstp
aad
test
shl
jmp
call
aad
jno
ins
(bad)
movs
mov
dec
bswap
in
dec
lods
pop
jmp
lods
call
movs
mul
ret
xor
das
daa
call
mov
in
bound
pop
push
ja
xor
jg
pushf
mov
pop
cmp
inc
push
jnp
push
js
shl
sahf
and
and
out
push
dec
xchg
mov
je
xchg
loop
ret
and
jmp
retf
jae
mov
ror
jp
ret
mov
mov
add
ror
ret
adc
stos
or
mov
xchg
(bad)
mov
ds
jo
shl
push
push
cmp
cmp
lea
jle
add
aas
imul
sbb
das
int3
fcmovnbe
push
xchg
outs
icebp
mov
mov
ja
inc
xchg
mov
in
shl
adc
push
lods
pop
movs
cwde
sbb
pop
sbb
(bad)
xchg
ss
adc
shr
or
and
(bad)
in
cmp
jmp
jge
mov
das
(bad)
mov
leave
call
ficom
psubusb
mov
mov
ss
fisubr
and
cs
sbb
push
cs
stos
popa
into
fidiv
jae
popa
mov
push
pusha
ret
adc
stos
sub
inc
popf
adc
add
mov
mov
cmc
pop
out
stc
or
outs
cmps
ret
cs
push
inc
js
inc
dec
(bad)
sbb
shr
dec
sub
shr
mov
sub
pop
jbe
jae
fucomi
movmskps
sbb
or
or
mov
fs
out
jnp
dec
ror
cwde
enter
dec
pop
inc
addr16
daa
add
push
sbb
cli
les
xor
cmp
shr
(bad)
popf
std
pop
stos
lock
out
xchg
aam
scas
into
jecxz
dec
add
icebp
adc
pop
sbb
cmps
cwde
(bad)
jp
sub
imul
arpl
and
xor
push
push
fldenv
ds
arpl
pop
cmp
(bad)
pop
inc
jne
int3
xchg
adc
jbe
test
xor
cmp
fiadd
cmp
jne
or
mov
adc
mov
pop
lods
das
inc
fs
add
cli
jg
dec
sub
jl
sbb
nop
aaa
add
bound
xchg
in
out
repz
jp
push
int3
pushf
shl
jmp
xor
popa
mov
out
nop
test
jmp
pop
out
push
iret
pop
and
into
inc
fisubr
dec
and
shl
sub
int3
jae
ins
test
ror
out
sbb
mov
out
fld
addr16
(bad)
mov
mov
(bad)
loope
pushf
dec
test
inc
std
inc
push
cwde
pop
arpl
mov
cmp
(bad)
pop
mov
(bad)
mov
push
add
nop
jmp
jnp
popa
sub
push
repnz
xchg
add
les
sbb
sti
fld
mov
mov
cmp
fdiv
(bad)
mov
sbb
fs
mov
adc
rol
call
mov
dec
mov
and
(bad)
out
int3
ror
mov
pop
addr16
data16
fimul
push
leave
cs
xor
add
ja
fnstsw
dec
sbb
jle
jbe
cmp
or
ss
scas
popf
aam
paddusw
inc
lods
jb
xchg
push
jae
xor
jl
add
xchg
popa
mov
cmps
enter
sbb
rcr
cmp
fldenv
icebp
adc
adc
nop
das
and
imul
sbb
sub
stc
jb
and
fisttp
jns
jae
loopne
xchg
fnsave
scas
call
and
push
mov
aad
mov
or
mov
ins
scas
je
in
daa
or
sbb
pop
xchg
fldcw
fisub
fwait
dec
dec
pop
outs
scas
inc
push
ins
or
mov
push
xor
into
jl
js
xchg
fiadd
push
cmp
add
sbb
cmps
jmp
outs
test
sbb
stos
xchg
mov
jg
out
pop
addr16
cwde
cmp
pushf
fwait
scas
jae
ins
ret
addr16
jl
outs
int3
sub
out
add
(bad)
adc
cmc
mov
std
add
movs
call
mov
aas
mov
mov
daa
jns
pop
jmp
inc
pop
dec
or
push
(bad)
pop
stos
dec
xor
xchg
dec
xchg
push
sbb
adc
mov
dec
lea
fild
inc
ins
aas
stos
iret
loop
ins
cmp
xchg
inc
lds
fild
mov
mov
lods
into
push
aaa
(bad)
jmp
dec
xchg
inc
shl
sbb
fcomp
push
or
cmc
fild
mov
sub
shr
shl
pop
xchg
pop
jbe
movs
pop
test
and
stos
mov
pusha
in
sbb
aaa
shl
dec
test
jecxz
push
ficomp
jmp
jnp
fsubrp
push
push
push
or
inc
mov
sub
inc
repnz
int
repz
test
ret
push
test
adc
and
xor
sbb
lods
mov
cmp
loop
verr
mov
dec
cmp
test
adc
mov
add
out
sub
ins
jns
jns
xor
xchg
adc
aas
loope
xchg
sbb
js
xor
jmp
mov
loope
imul
sub
adc
push
into
repnz
(bad)
sbb
(bad)
sub
hlt
and
(bad)
jnp
dec
(bad)
test
out
mov
outs
(bad)
pop
sahf
dec
fisub
cld
out
lds
sbb
push
loope
ret
sub
pop
ins
in
fdiv
stos
and
jmp
sbb
pop
ds
das
push
jns
push
mov
jecxz
push
inc
mov
sub
mov
inc
and
jl
mov
mov
pop
call
inc
or
jg
bound
ret
imul
(bad)
xor
pop
inc
push
push
out
mov
test
test
mov
or
not
shr
adc
push
mov
sub
fstp
sar
imul
xor
mov
push
jnp
pop
repz
jp
shl
add
fs
xchg
std
xor
fild
inc
fs
aas
into
lock
(bad)
mov
push
or
xlat
push
daa
loop
sub
xchg
push
(bad)
xor
adc
cmp
sbb
fsubr
sub
sbb
stc
mov
push
lldt
and
in
scas
and
call
movs
push
fild
and
pop
jg
jo
or
dec
stc
(bad)
push
pop
ror
jle
rcr
dec
call
iret
dec
push
pop
push
dec
ret
cmps
addr16
cmovbe
mov
cs
imul
in
call
jp
cmp
sub
cli
mov
rol
rcl
mov
inc
scas
rcr
rcr
bnd
pop
jle
and
adc
pusha
cwde
das
test
mov
mov
cmp
sub
jo
cmp
xchg
jp
sbb
ret
ror
iret
push
arpl
adc
add
add
call
pop
add
icebp
or
adc
fnstcw
mov
ror
mov
ror
mov
rcr
stos
rol
in
psllq
bound
sub
shr
add
mov
xor
inc
jecxz
les
inc
or
outs
and
sahf
push
sbb
lds
jle
(bad)
xor
sub
fdivr
stos
cmps
inc
mov
pop
fwait
mov
lds
push
int3
mov
dec
out
shr
test
mov
sbb
clc
mov
cwde
lahf
imul
fiadd
test
sbb
inc
and
(bad)
fistp
xor
in
call
inc
push
and
pop
shl
cmps
movs
test
sbb
cwde
jbe
stc
sub
enter
jge
xor
adc
dec
es
add
pop
mov
into
cwde
lock
pop
lahf
cmps
cmp
je
inc
in
outs
mov
push
mov
or
xchg
or
and
xor
repz
pushf
cmp
jbe
cmp
push
sbb
dec
dec
push
in
cmps
test
mov
or
mov
int3
mov
(bad)
iret
push
(bad)
and
clc
adc
inc
shl
dec
or
adc
jo
fs
jle
mov
add
mov
sub
mov
mov
sti
into
sub
pop
pop
mov
push
out
jb
shl
xlat
popf
push
and
inc
add
loop
sub
xor
pop
ins
and
mov
mov
xlat
xchg
daa
enter
mov
shl
(bad)
hlt
fdivr
and
enter
xor
lahf
pop
shl
or
repz
nop
adc
call
call
push
mul
or
sbb
(bad)
add
jg
cmp
movs
and
rol
dec
les
test
fld
xor
cmps
call
push
jmp
and
add
loope
stos
sub
js
sub
adc
test
ins
mov
push
test
push
jecxz
jle
xor
xchg
or
sbb
sub
mov
push
daa
mov
sbb
inc
jle
jae
les
(bad)
cmc
je
iret
mov
ret
movs
lods
daa
push
icebp
int3
jl
add
cmp
cmp
and
in
inc
xchg
pop
pop
dec
ja
ins
fwait
or
jge
clc
pop
adc
lods
pop
scas
sub
fwait
mov
or
jnp
pop
add
adc
dec
dec
jb
sti
xchg
mov
dec
sbb
cwde
repz
js
push
ds
mov
fsubr
mov
imul
loope
sbb
adc
test
lods
push
pop
cmps
adc
adc
cmp
(bad)
retf
int3
stos
inc
enter
push
dec
pop
dec
cdq
fidiv
fcomp
sbb
(bad)
loopne
mov
mov
mov
cmp
test
imul
(bad)
push
leave
jg
jne
dec
ss
not
sub
inc
pop
xlat
push
and
xor
mov
mov
aam
shl
cmp
mov
lods
out
jno
pop
int
shl
cmp
lds
mov
loopne
sub
push
popa
add
push
adc
popa
inc
mov
add
icebp
imul
inc
add
mov
or
inc
mov
pusha
retf
mov
xor
and
push
dec
movs
jmp
jne
jg
adc
daa
jg
lods
add
lea
inc
gs
scas
push
xchg
inc
xchg
into
push
jecxz
cdq
dec
je
shr
int
jge
inc
and
cwde
push
js
lea
xor
test
movs
mov
adc
ds
not
push
nop
mov
adc
gs
mov
pop
(bad)
icebp
out
cmp
int3
mov
ins
aad
arpl
push
or
mov
mov
fwait
cmp
add
mov
(bad)
test
or
movs
popf
call
inc
xor
xchg
test
mov
sub
scas
inc
cmp
jl
cwde
leave
jmp
addr16
push
jecxz
sub
mov
sub
jmp
cmp
inc
mov
and
inc
mov
cmp
sub
imul
fld
xchg
ror
mov
in
retf
xor
xchg
mov
outs
xchg
or
ret
cmps
dec
jmp
outs
adc
xor
push
scas
lea
cdq
pop
dec
test
shl
inc
pop
adc
ja
sbb
(bad)
jno
lds
push
ror
shl
xor
add
xlat
test
sbb
pop
inc
mov
in
or
out
fs
xlat
shl
clc
fs
pop
mov
dec
ret
cli
jge
xchg
call
test
les
pop
and
cmc
out
jle
xchg
push
cmp
lock
adc
sahf
or
sar
lods
sahf
dec
test
lods
add
std
fidivr
(bad)
push
cmc
push
and
lds
call
jge
mov
les
(bad)
cwde
xchg
out
js
xchg
cmp
repnz
xchg
and
aad
dec
adc
mov
jl
mov
sbb
jns
leave
dec
and
mov
push
push
(bad)
and
mov
pop
mov
jnp
sbb
ins
and
and
adc
inc
cld
dec
lds
mov
fisub
mov
mov
jne
dec
and
push
das
push
fs
jns
xor
pop
or
sub
mov
mov
imul
addr16
bound
mov
push
adc
fstp
clc
jae
add
jo
add
pop
es
inc
inc
out
aam
sub
mov
add
movs
mov
ret
inc
xchg
(bad)
fadd
repz
je
std
mov
xor
test
cmps
in
sub
movs
or
mov
adc
push
inc
add
ins
test
aad
lea
cs
loop
nop
outs
and
add
inc
adc
ja
and
xor
mov
aam
mov
fisttp
in
mov
outs
mov
(bad)
in
or
cmp
lea
push
repnz
jbe
sub
popf
xor
jns
arpl
push
push
loop
out
les
push
hlt
aam
or
gs
sbb
lds
imul
test
sub
(bad)
mov
test
gs
or
aam
test
cwde
cmp
jbe
ss
jle
lea
into
mov
movaps
int
loope
jl
cmps
xchg
ror
aam
lahf
mov
mov
imul
inc
in
fdiv
in
mov
pushf
imul
xor
dec
sbb
movs
cmps
imul
mov
lock
stc
shl
dec
cmc
xor
jl
out
sahf
jne
ins
adc
call
dec
mov
data16
fisubr
xchg
aaa
ins
cmp
das
inc
sbb
sbb
stc
pop
xchg
dec
addr16
dec
dec
dec
test
clc
aad
and
jmp
cld
dec
jl
call
test
sti
xor
popa
push
cmc
imul
cmc
cmp
jns
push
push
test
retf
pusha
movs
add
or
pushf
mov
and
push
push
inc
pop
js
lahf
repnz
cmc
add
leave
xchg
mov
add
xor
or
fs
mov
pop
push
iret
cmps
mov
mov
dec
jmp
pop
sub
inc
(bad)
clc
leave
rcr
inc
mov
loop
inc
repz
cmp
push
adc
leave
sbb
sbb
sti
adc
mov
push
sub
sub
and
(bad)
jbe
stos
aas
or
sub
jae
(bad)
cdq
das
push
push
into
lahf
mov
pop
pop
inc
xchg
retf
les
std
neg
sbb
leave
lock
mov
mov
mov
inc
test
movs
mov
fs
loopne
inc
les
add
adc
inc
in
mov
out
inc
out
ss
add
bound
inc
mov
mov
xor
or
sbb
mov
push
mov
sbb
mov
mov
in
jno
fcom
pop
mov
inc
call
xor
xor
fnsave
jmp
inc
icebp
mov
sahf
enter
repz
jne
xchg
sub
fisttp
dec
ja
and
inc
fmul
sbb
pop
out
(bad)
das
mov
jecxz
sub
inc
icebp
mov
out
rcl
inc
mov
jno
loope
cmp
xor
cmp
pop
sahf
mov
sub
outs
ficom
ja
retf
out
dec
(bad)
hlt
push
aad
sbb
ins
mov
push
imul
mov
aas
sub
and
hlt
dec
adc
pop
mov
mov
push
mov
sbb
outs
in
jl
ja
dec
daa
into
cld
sbb
fisub
cmp
fcom
add
gs
adc
mov
or
mov
xchg
in
pop
pop
ficom
jmp
pop
out
xchg
push
jne
inc
(bad)
popf
cmp
iret
loop
inc
call
in
test
(bad)
or
sahf
dec
inc
add
ss
test
ins
fld
cmp
ret
sbb
bound
xor
std
mov
mov
pop
inc
test
xchg
je
je
jmp
pop
fs
inc
or
ss
(bad)
shr
cmps
sahf
pushf
dec
das
jmp
dec
adc
or
push
movs
dec
or
or
add
pop
xor
movs
push
repnz
sub
dec
xor
mov
mov
and
pavgb
mov
out
add
(bad)
mov
std
push
push
les
movs
nop
mov
adc
test
or
(bad)
dec
dec
(bad)
ins
pop
frstor
jns
es
pusha
imul
xchg
enter
push
pop
xor
fwait
or
repz
xchg
and
lahf
or
fndisi(8087
movs
bound
inc
mov
loopne
jmp
in
lea
xlat
daa
ss
push
dec
scas
jae
in
pop
mov
repnz
xchg
push
sub
cmp
outs
jmp
pop
scas
test
(bad)
ret
mov
push
jg
shr
sub
loope
add
into
(bad)
sti
jb
aad
pop
inc
div
arpl
mov
scas
xchg
fistp
add
mov
mov
das
pop
fnsave
jnp
stc
test
xor
lahf
ds
or
and
cdq
test
or
je
aaa
dec
rcr
xor
sti
test
iret
int
sub
or
out
ja
lds
or
jmp
fisubr
pop
adc
cmp
sar
scas
inc
mov
pop
dec
jle
shr
jo
jne
fstp
rcr
imul
xor
add
jl
mov
sub
loopne
cmp
loop
mov
pop
cmps
lods
fld
or
pop
enter
ins
jecxz
test
pop
(bad)
retf
jnp
push
lods
out
or
cmp
inc
iret
cmp
pop
out
add
sahf
aam
pop
jmp
shl
icebp
lds
jb
bound
retf
jnp
mov
sbb
int
jbe
or
and
inc
pop
sar
lods
sub
cdq
xchg
mov
push
aas
jno
(bad)
leave
jno
xor
outs
inc
fcomp
adc
xchg
test
adc
shl
inc
pop
inc
adc
push
(bad)
outs
out
mov
(bad)
ffreep
outs
mov
mov
and
out
loopne
mov
or
sub
sub
push
test
cs
sbb
outs
loopne
xor
jecxz
call
mov
iret
jmp
(bad)
rcl
jl
push
jno
scas
jnp
xchg
retf
or
mov
test
add
jne
push
push
lea
ret
movs
fdivr
repnz
jmp
mov
ds
call
jne
jmp
stos
sub
les
push
xchg
inc
mov
retfw
sub
dec
xchg
push
(bad)
fstp
stos
ja
add
mov
les
xor
stos
push
(bad)
stc
sar
pop
xor
int3
fwait
retf
push
adc
movs
and
dec
(bad)
sub
pop
xor
sub
inc
cmp
test
cwde
jo
imul
push
inc
sbb
test
mov
emms
xchg
push
pop
outs
das
add
test
mov
jle
enter
mov
cmc
jp
add
shl
pop
pushf
fbld
jbe
or
dec
xor
add
mov
inc
loop
mov
cld
addr16
or
rcr
add
jbe
jne
cld
ja
pop
pop
dec
pop
add
pop
and
(bad)
pop
cmp
dec
test
aaa
pusha
mov
pop
xchg
int
inc
arpl
sub
and
cmp
inc
loop
loopne
arpl
fs
ss
push
pop
push
mov
punpcklwd
and
scas
out
pusha
cs
push
sub
sbb
dec
mov
pop
adc
fs
jmp
sub
add
adc
cwde
sbb
fst
(bad)
lods
jge
dec
loope
test
retf
inc
mov
jo
xor
xchg
add
xchg
icebp
aas
ins
mov
nop
cmp
mov
push
xchg
inc
scas
pop
in
fs
call
mov
popa
push
inc
ss
cmp
adc
fimul
pop
test
imul
es
fnstenv
sub
(bad)
push
push
adc
imul
mov
mov
xchg
xchg
stos
int
out
clc
push
xor
and
gs
xor
mov
and
push
push
sar
(bad)
mov
lods
data16
inc
sar
std
push
pop
or
add
inc
cmps
jno
sar
jge
ret
sbb
inc
or
mov
cld
or
popf
or
loop
pop
daa
mov
jg
cmc
sahf
push
sub
out
add
mov
jmp
jb
cmp
stc
out
add
mov
sbb
and
jns
sbb
mov
popf
sar
pop
int
cmp
xchg
out
lea
std
mov
dec
popf
nop
and
fld
lods
call
(bad)
and
cwde
xchg
int3
mov
faddp
fwait
xor
test
sahf
xlat
lock
daa
retf
cld
div
gs
(bad)
push
jg
call
lds
xchg
mov
call
shl
iret
lds
ret
les
mov
xchg
std
pop
and
ret
lods
cmp
ins
pop
test
in
(bad)
out
repz
mov
js
mov
xchg
mov
mov
rcl
retf
movs
jl
addr16
addr16
hlt
stos
movs
les
add
mov
add
lds
add
inc
pop
sbb
fdivr
pop
sbb
fcomp
test
(bad)
push
fcomip
int
in
dec
jle
push
dec
mov
and
cld
(bad)
icebp
scas
imul
in
hlt
adc
inc
jae
mov
push
sbb
cdq
pop
xor
mov
outs
jmp
stc
push
stos
jmp
leave
cmp
ret
mov
mov
sub
stc
test
sub
stc
mov
pop
jmp
jl
cli
movs
sbb
jnp
jl
repnz
jno
das
leave
sbb
leave
call
fnstcw
sub
cmp
out
into
int3
xor
mov
repz
fwait
(bad)
clc
in
outs
leave
cmp
jns
or
or
mov
mov
sbb
jmp
cmc
loop
xchg
xor
movs
jbe
xchg
mov
es
ins
mov
mov
stos
adc
repnz
ss
leave
sub
dec
mov
xlat
js
pop
in
fisubr
add
sti
pop
mov
mov
and
jmp
test
jns
jecxz
and
jmp
xor
push
(bad)
jl
out
jno
pop
xchg
rcr
adc
lds
repz
dec
add
in
jecxz
cmp
inc
jne
jne
pop
dec
sahf
lock
stos
data16
inc
(bad)
nop
ins
or
(bad)
(bad)
jo
fs
mov
je
add
(bad)
xchg
movs
jnp
mov
cwde
cmp
jecxz
push
adc
retf
mov
push
sub
xor
rcl
mov
dec
or
in
jbe
(bad)
aad
rcr
into
inc
pushf
or
in
cmp
mov
add
inc
and
xchg
scas
in
mov
scas
cmp
shr
push
lea
in
and
xor
in
sub
or
cwde
pusha
mov
aam
inc
mov
addr16
add
mov
push
xchg
xor
adc
shl
jp
movs
les
ins
daa
bt
xor
jne
into
xor
ffreep
ror
xchg
push
and
icebp
js
push
cmps
mov
dec
in
xchg
push
retf
fdivr
lea
pushf
pushf
in
gs
ret
addr16
bound
cmova
pop
aaa
dec
push
sub
pushf
adc
and
push
push
cmp
inc
jl
outs
stos
inc
jge
adc
iret
iret
ins
or
(bad)
fadd
popa
pop
mov
xchg
retf
popa
ds
clc
inc
(bad)
lds
sub
sub
pop
xchg
(bad)
cmc
sbb
sbb
inc
dec
inc
cmps
sti
nop
xchg
push
ss
xor
cli
and
icebp
mov
cmc
xlat
dec
push
xor
dec
jmp
pop
jb
mov
pop
ins
enter
movs
and
xchg
repnz
jmp
lea
jmp
jns
icebp
les
in
jae
sbb
bound
nop
cmc
jmp
sub
pop
pop
neg
daa
js
(bad)
lahf
sahf
push
and
mov
cmp
cwde
pop
jle
lock
mov
fcomp
jo
add
mov
mov
lods
in
cdq
dec
enter
cmp
dec
jge
psubd
sbb
add
cmp
xchg
out
bound
nop
pop
out
movs
push
lahf
test
nop
fdiv
push
enter
jmp
jno
mov
pop
pop
ja
sti
loop
push
(bad)
mov
arpl
fdivr
in
fst
pop
and
stc
pop
jl
mov
retf
shl
scas
les
mov
and
in
jmp
sbb
shl
hlt
stos
push
and
push
jae
ror
adc
mov
out
imul
ja
les
cs
scas
pop
pop
(bad)
cmp
lods
push
stos
dec
stc
in
test
fistp
leave
lods
sub
test
call
or
add
les
cmp
repnz
jl
leave
xor
pop
jp
pushf
les
jno
add
out
push
mov
mov
mov
(bad)
cmp
ret
loop
jb
imul
mov
xor
sti
pop
jnp
pushf
dec
fwait
inc
out
aas
xlat
push
mov
pop
popf
addr16
and
packsswb
dec
fst
fistp
add
dec
jbe
inc
sbb
cmp
das
ficom
fs
popf
cmps
(bad)
aas
into
inc
pop
jno
fdiv
jmp
pop
jae
ja
rcr
inc
sub
dec
jl
ret
in
pop
xor
adc
data16
dec
sahf
int
mov
gs
cwde
or
mov
call
cwde
pop
push
jle
pop
ja
and
icebp
lock
or
fidiv
enter
test
jbe
cmc
(bad)
jmp
sub
addr16
ins
(bad)
retf
add
shr
adc
inc
and
jnp
dec
xor
sub
add
pusha
adc
adc
mov
fst
int
fsub
retf
(bad)
sbb
movs
cwde
mov
pop
push
lock
cwde
retf
push
push
push
setl
push
rol
mov
cdq
enter
fist
(bad)
jg
push
push
rcl
(bad)
rol
mov
xchg
pop
cmp
test
test
push
adc
and
pop
inc
test
fwait
scas
data16
lock
imul
cmp
mov
mov
pop
add
bound
rcl
jne
pop
mov
jne
loopne
je
sbb
mov
(bad)
xchg
retf
test
movs
ins
or
out
popf
mov
int3
arpl
fcom
sbb
cmp
mov
sbb
sti
sub
push
cmp
ror
int
and
cli
push
mov
inc
sti
call
or
cli
jge
call
push
(bad)
cmps
push
add
cld
les
cmps
jbe
icebp
shl
shr
dec
loopne
pop
or
and
mov
fild
jecxz
jae
cmp
stc
xchg
mov
and
or
mov
or
adc
add
xchg
pop
lock
cmc
mov
es
call
(bad)
clc
popf
imul
(bad)
jnp
push
sbb
mov
xor
and
stos
cwde
jle
outs
(bad)
hlt
dec
pop
(bad)
xor
push
inc
ins
inc
fs
cmps
mov
loopne
jle
pop
in
xor
sbb
push
push
repnz
xchg
add
adc
pop
sti
das
and
inc
rcr
in
pop
(bad)
test
xlat
push
mov
out
xchg
movs
int3
xlat
push
add
outs
leave
mov
lock
jmp
mov
cli
loopne
gs
addr16
aaa
pop
mov
pop
or
bswap
push
jbe
mov
mov
stos
sub
mov
stos
out
and
hlt
and
dec
pop
data16
ss
and
pop
cmp
xor
sti
pusha
imul
fucom
fld
jmp
test
mov
sbb
sub
(bad)
cdq
fadd
and
fiadd
arpl
cmps
adc
aas
mov
jno
pop
movs
xchg
dec
(bad)
push
cwde
or
push
clc
es
and
cmps
or
pop
call
pop
adc
cmp
add
gs
cmp
mov
cmp
xor
or
and
ss
lock
push
outs
stos
mov
leave
fld
mov
icebp
int
ins
mov
xchg
push
imul
bound
loope
ins
push
sub
jmp
xchg
retf
sar
shr
pop
xor
pop
cmp
pop
jg
pop
inc
push
in
pop
test
mov
pop
shl
or
mov
or
inc
jb
fcomp
movs
sbb
sbb
mov
adc
sub
aad
xor
or
xor
dec
nop
pop
fdiv
out
and
mov
add
jns
out
es
push
loopne
mov
es
push
xchg
add
add
mov
mov
cli
arpl
lods
pop
(bad)
xlat
fisttp
and
inc
pop
fmul
int3
std
push
jmp
lock
jge
pop
push
mov
out
and
xchg
psubw
add
push
sbb
and
(bad)
add
mov
out
jnp
and
sahf
stos
inc
jbe
scas
sbb
dec
outs
add
test
add
jl
(bad)
ins
pop
(bad)
in
adc
or
lods
lahf
add
adc
das
mov
popf
inc
push
test
in
sbb
add
jp
mov
ja
inc
(bad)
clc
inc
inc
mov
scas
cmps
jmp
and
dec
je
sub
mov
pop
pop
out
jo
adc
mov
pop
les
push
sbb
cmc
dec
in
adc
int3
movs
call
sub
(bad)
mov
sbb
es
mov
or
and
mov
retf
push
xor
adc
push
call
in
fs
(bad)
imul
push
(bad)
cmp
pop
mov
into
or
(bad)
xor
std
mov
inc
jb
push
call
daa
int
mov
popa
or
(bad)
dec
push
push
xor
ret
mov
enter
repnz
cmp
ret
sbb
add
pop
sbb
mov
repz
ret
clc
xor
hlt
cmp
jg
inc
adc
adc
sub
and
cld
xlat
cmp
retf
fwait
stos
fstp
fs
pop
je
mov
fdiv
test
lock
push
jg
ss
loop
ror
adc
fsubr
aam
lds
and
pop
lock
scas
pop
jmp
add
iret
call
inc
inc
or
jns
inc
sbb
xor
div
xchg
dec
dec
add
cli
cli
add
pushf
fadd
jo
adc
adc
dec
outs
cmps
xchg
and
xor
dec
int
push
das
cmp
cmp
mov
das
clc
cmp
iret
mov
stos
mov
int
mov
ret
and
(bad)
icebp
pop
data16
cmp
mov
dec
retf
fisub
inc
inc
aad
xor
mov
cmp
arpl
mov
in
xchg
fsub
popf
xchg
lock
push
jmp
sbb
sub
pushf
add
icebp
pop
push
add
and
jecxz
mov
sbb
daa
inc
pop
inc
out
dec
cli
popa
pop
pop
mov
mov
cmp
stc
push
cmp
pop
mov
loop
hlt
inc
cdq
jp
stc
mov
adc
push
jns
mov
jl
mov
fdiv
in
dec
mov
xchg
lods
push
xchg
dec
in
dec
or
in
xchg
fdiv
sub
jne
(bad)
daa
daa
jne
and
mov
cmps
cmc
mov
jg
fdiv
pop
pop
aad
mov
inc
stc
jno
mov
mov
mov
add
fdiv
test
mov
jge
fpatan
fadd
and
in
adc
add
cmp
add
ins
(bad)
arpl
xchg
pop
cmps
xor
pop
lods
imul
clc
sar
imul
push
retf
movs
and
les
es
shr
mov
imul
adc
mov
ins
hlt
or
add
or
(bad)
push
retf
jo
adc
mov
in
sti
cmps
mov
xor
push
fisub
xchg
icebp
cmp
push
out
sub
neg
xchg
fdiv
test
push
std
xchg
or
push
dec
fistp
sbb
dec
sub
(bad)
imul
hlt
push
and
sbb
fucom
jae
call
retf
add
sub
imul
jne
push
in
repz
mov
cdq
pop
cmp
in
pop
mov
test
sub
inc
mov
dec
cwde
ret
push
mov
daa
sbb
xchg
and
and
fnstsw
jnp
cmp
es
inc
push
mov
jecxz
cs
stos
cmc
dec
or
pop
fldenv
cmp
arpl
sbb
cmp
out
ss
jp
cmps
xor
jnp
jp
lea
add
dec
inc
dec
std
push
lods
dec
imul
mov
add
(bad)
jb
pop
pushf
popa
call
fisubr
xchg
inc
fst
add
les
loope
retf
jecxz
inc
xor
pop
add
pop
fidiv
into
push
xor
inc
sub
aas
(bad)
call
xchg
pop
push
xor
dec
leave
adc
movs
in
pop
sbb
rol
mov
fist
xor
push
xchg
jle
sub
adc
mov
sti
add
and
or
dec
dec
pop
xor
jo
mov
pop
xchg
in
mov
lahf
mov
pop
mov
ret
sub
int3
xchg
int3
add
cwde
jne
fcom
pop
mov
or
popf
mov
test
aad
outs
inc
sub
push
inc
jns
cmps
push
xchg
outs
nop
pop
xchg
mov
(bad)
call
repz
repnz
dec
xchg
hlt
push
or
cmp
jp
sub
fwait
dec
out
dec
mov
mov
aad
push
inc
lahf
fs
push
xchg
cmp
enter
adc
pop
lods
xor
push
jl
sub
imul
xchg
xchg
jecxz
(bad)
(bad)
mov
mov
inc
cmp
(bad)
ror
push
push
popf
mov
mov
jmp
cli
pop
sbb
lods
mov
adc
hlt
gs
data16
dec
sti
inc
icebp
loop
ss
adc
retf
sar
fistp
push
pop
repz
stos
mov
xor
mov
les
dec
push
push
pushf
push
cmps
cwde
icebp
or
and
sbb
push
pop
mov
push
add
dec
adc
sub
in
cmp
inc
mov
push
cwde
xor
inc
repnz
mov
pop
packsswb
xor
dec
bound
xchg
mov
aas
pop
lods
push
mov
loope
nop
and
(bad)
inc
aaa
or
cs
mov
ret
imul
cmp
ins
test
icebp
retf
fbstp
xor
out
mov
imul
or
into
dec
fidivr
pop
fcmovb
or
push
inc
mov
sti
rcr
hlt
jge
sbb
or
in
inc
cmps
push
adc
adc
movs
pop
add
ja
pop
add
adc
dec
and
fild
xchg
repz
loopne
mov
(bad)
pop
add
xchg
mov
pop
call
jle
scas
loope
loopne
mov
jmp
push
data16
mul
fist
adc
mov
fwait
xor
mov
(bad)
test
sub
ret
out
add
inc
adc
and
sub
pop
dec
loopne
cmp
(bad)
test
fimul
cmp
sub
adc
pop
and
jmp
pusha
mov
(bad)
jbe
dec
arpl
xchg
sbb
sub
cmc
pop
xchg
mov
fadd
and
icebp
(bad)
jne
jb
inc
fwait
dec
test
push
ja
inc
rcr
in
in
jnp
inc
in
mov
jae
and
les
dec
hlt
inc
jno
leave
cli
inc
and
add
mov
push
mov
jle
inc
dec
add
ss
pop
pop
call
sub
lock
arpl
inc
adc
cwde
push
pushf
cmp
jne
and
dec
rcl
sbb
outs
and
test
mov
out
daa
sub
mov
fnstcw
cmps
xor
les
cmp
adc
pop
sbb
test
idiv
pop
jb
es
test
test
sub
jg
cmp
and
add
fsub
inc
xor
mov
jge
sbb
pop
pusha
inc
pop
mov
or
xchg
inc
popf
cmp
add
sbb
(bad)
sub
pop
repnz
addr16
jne
scas
loop
emms
xchg
sbb
test
or
inc
push
lea
ins
fnsave
(bad)
rcr
lahf
mov
dec
xchg
mov
or
xorps
sub
mov
mov
jns
jmp
(bad)
(bad)
xchg
jbe
gs
inc
push
mov
dec
fs
adc
jb
jecxz
out
add
mov
jle
stos
cmp
xchg
loope
addr16
cli
sub
mov
movs
push
xor
inc
imul
cmp
call
cmp
in
iret
stc
pop
ja
pop
fst
in
xor
mov
inc
xor
shr
ja
push
and
lods
mov
jge
aaa
and
leave
or
mov
and
jbe
pushaw
fs
sub
inc
stos
sbb
or
inc
mov
ins
shr
lods
jle
mov
pushf
inc
movs
cmp
out
inc
cmp
fs
sub
jmp
jae
aad
cmps
ins
sbb
add
data16
ficomp
cmp
jg
pop
dec
inc
imul
jns
in
dec
push
add
and
pop
ffree
iret
jl
xor
pushf
scas
daa
cmps
shr
stos
rcl
sub
test
test
mov
(bad)
(bad)
enter
dec
xchg
int
(bad)
adc
jecxz
dec
jns
jmp
jo
mov
adc
cmps
inc
in
(bad)
inc
frstor
xor
inc
add
add
in
xor
add
add
xchg
and
clc
aas
arpl
push
mov
cmp
mov
stc
jl
mov
sub
cmp
jae
xlat
adc
mov
cmp
mov
rol
shl
dec
jge
dec
pop
mov
cld
adc
scas
inc
pop
jb
xchg
mov
xchg
push
cmc
fiadd
xchg
mov
inc
sbb
push
sub
xlat
fdiv
jl
(bad)
mov
cmps
loopne
mov
imul
outs
mov
jg
fcomp
neg
add
out
data16
inc
adc
pop
inc
mov
je
mov
push
push
(bad)
mov
sbb
nop
mov
inc
pop
mov
sbb
(bad)
mov
or
es
jge
out
dec
dec
fdivr
in
icebp
mov
cmps
popa
dec
jle
dec
lods
in
xchg
mov
dec
add
fsub
push
mov
dec
inc
ja
stos
mov
jp
aaa
push
add
xor
mov
xchg
xchg
mov
popf
xchg
ret
mov
xchg
scas
sub
xor
scas
xor
arpl
ds
sbb
pop
or
xor
loopne
fist
in
sbb
jns
ins
cmps
mov
push
jmp
popa
push
sbb
ins
je
add
nop
dec
push
jle
mov
pop
lods
add
xor
cld
jg
jmp
scas
ins
xchg
div
push
mov
lock
imul
xor
xchg
stc
popf
repnz
rcr
clc
pop
xor
and
(bad)
dec
inc
scas
daa
pop
adc
and
dec
mov
push
sar
sub
fldcw
xor
lods
(bad)
sti
lahf
jp
xchg
ficom
int
sbb
das
dec
push
enter
(bad)
adc
jl
xchg
cmp
je
or
addr16
fwait
jb
stos
pop
(bad)
xchg
(bad)
mov
jle
jmp
xor
scas
pop
jl
sub
lahf
ins
fsub
lods
jmp
popa
push
in
ins
dec
ins
xor
dec
or
pop
sub
mov
repz
lahf
stos
pop
and
jns
xor
jmp
jno
or
out
(bad)
inc
fsub
xchg
stc
sbb
in
fstp
js
cli
inc
bound
inc
ss
cli
shl
xor
test
je
dec
push
mov
xchg
fbld
push
jp
test
cdq
xor
and
pop
rcr
mov
scas
add
jecxz
cmp
loopne
lods
leave
aad
mov
inc
ret
pop
and
ss
je
arpl
inc
addr16
and
js
jle
mov
lea
sar
mov
jmp
fst
aas
pusha
mov
pusha
jnp
jg
fdivp
dec
aaa
push
cmp
(bad)
jl
icebp
fnstsw
test
rcl
push
mov
arpl
mov
mov
mov
imul
loop
sub
sbb
mov
cli
jle
dec
mov
add
mov
cmp
adc
pop
es
int
ins
push
push
mov
push
sbb
bound
mov
fisub
lahf
test
cmp
jns
adc
push
dec
pop
pop
pop
out
cmc
pop
pop
xchg
sbb
stos
(bad)
fisubr
lea
mov
inc
inc
pop
push
cmp
mov
add
mov
and
dec
ja
dec
leave
ins
adc
cmp
daa
inc
dec
xchg
sti
sbb
push
push
add
test
cmp
xor
push
or
bound
scas
daa
(bad)
std
jle
(bad)
sub
data16
and
sub
jb
jns
enter
lds
loope
fsubr
sbb
jmp
push
mov
push
fdiv
scas
(bad)
adc
and
ds
jnp
dec
scas
fiadd
dec
lods
test
xlat
push
mov
sub
or
ret
ret
add
ss
cmp
movs
mov
cwde
in
test
add
and
pushf
push
imul
retf
or
ret
adc
mov
popa
push
pushf
mov
retf
sub
sub
push
mov
adc
(bad)
dec
loopne
mov
xchg
sbb
cmp
pushf
int3
loope
popa
aam
ror
sbb
push
icebp
inc
ds
xchg
stos
aad
jecxz
mov
stc
or
sbb
mov
out
pop
mov
push
adc
or
and
outs
cmc
rcr
inc
les
stos
ja
es
out
push
aas
fidiv
je
loope
inc
and
add
popa
into
cdq
cmp
jg
xor
and
(bad)
jl
adc
adc
or
push
mov
pop
mov
sub
mov
lock
adc
inc
into
aaa
pushf
jns
sbb
cmp
pop
(bad)
dec
mov
or
sti
cmps
leave
xor
mov
jbe
push
ret
sbb
shl
xor
imul
cmp
mov
cdq
add
scas
xor
jns
in
xchg
inc
and
(bad)
div
les
out
fdiv
data16
or
aas
clc
(bad)
push
jge
mov
popa
push
outs
cmp
sub
lods
sbb
leave
jmp
mul
repnz
loope
push
and
outs
mov
xchg
fcomp
inc
sub
stos
inc
pop
(bad)
(bad)
jmp
mov
and
(bad)
or
and
nop
adc
and
mov
cmps
cdq
add
leave
mov
rol
lods
retf
sbb
and
daa
sahf
dec
mov
pop
shl
cmp
pop
jbe
mov
push
pop
inc
cmp
or
ja
cmps
pop
fadd
sbb
xchg
jo
adc
retf
cmp
xor
dec
cmps
jle
pop
jo
(bad)
or
cmp
xchg
or
out
fidivr
push
sub
lods
sub
(bad)
jne
xchg
lock
lea
mov
int3
and
repnz
inc
dec
das
scas
mov
mov
pop
dec
mov
inc
mov
adc
jnp
adc
cdq
jnp
out
clc
xchg
cwde
xchg
adc
sbb
pop
push
outs
lahf
pop
dec
clc
(bad)
sub
sub
jo
push
xchg
inc
jle
or
cs
mov
mov
out
out
cld
push
ret
xchg
jg
xchg
push
xor
test
call
bnd
push
push
pusha
mov
push
sub
xchg
sahf
xchg
(bad)
iret
jmp
jp
fst
jecxz
enter
push
and
add
xchg
out
cdq
loopne
test
and
pop
loopne
push
mov
jo
jmp
xchg
dec
cmp
push
mov
arpl
mov
pop
pop
arpl
mov
dec
mov
out
inc
aas
dec
sub
in
mov
ficom
daa
pop
lods
in
mov
cdq
push
cmps
pop
cmp
cs
mov
push
ins
push
mov
stc
pop
pop
xacquire
pop
mov
daa
fs
stos
adc
dec
movs
jno
ret
data16
(bad)
jl
pop
(bad)
arpl
add
jecxz
int3
(bad)
out
push
adc
push
mov
or
mov
xchg
mov
xchg
sub
cmps
clc
cmps
les
shr
imul
cmc
movs
fwait
leave
movs
lods
jno
inc
out
push
mov
out
cmp
sbb
push
retf
pop
imul
dec
push
sub
jmp
rcl
sub
mov
push
adc
fwait
loopne
mov
outs
lock
jecxz
fadd
adc
int3
xchg
mov
xchg
test
xor
mov
std
or
enter
adc
xchg
sub
pop
mov
xchg
dec
push
sub
cmp
xor
cmp
xor
mov
test
mov
test
jns
(bad)
imul
ret
xchg
test
in
inc
fcom
sub
fwait
ror
fdiv
sbb
aaa
imul
fsubp
sbb
sbb
push
rcr
hlt
add
out
loope
in
and
bound
out
mov
jge
push
or
loope
cmp
push
js
loopne
mov
shr
nop
push
sub
jns
data16
inc
inc
test
bsf
push
out
retf
xchg
inc
aaa
xor
ficom
inc
shl
fistp
shr
cmp
or
push
jmp
push
cdq
aaa
sete
lds
retf
jmp
fcom
fnstsw
lds
test
cli
inc
inc
mov
push
cmp
and
call
push
sbb
dec
das
in
ret
mov
int3
(bad)
lods
cmp
and
inc
jno
imul
cmc
das
imul
push
dec
jle
(bad)
mov
dec
retf
adc
jmp
(bad)
pop
jmp
push
mov
(bad)
nop
cmp
jp
sbb
repz
push
movs
or
je
dec
int3
in
mov
adc
loope
es
dec
add
imul
dec
cmp
pop
cmp
mov
jo
or
icebp
pushf
rol
mov
loop
push
movs
fadd
jg
add
stos
jg
adc
popa
pop
hlt
int3
xchg
hlt
xchg
mov
mov
xchg
jmp
or
xchg
mov
cmp
mov
lods
nop
sbb
out
dec
xchg
ret
fdiv
jno
in
lock
jae
jecxz
loopne
mov
cli
sbb
mov
mov
repnz
std
push
add
push
xchg
out
hlt
inc
mov
shr
sar
popf
jb
(bad)
shl
inc
std
xor
lea
rcr
xor
xchg
and
test
lock
fimul
movs
xchg
xor
jg
je
cmps
xchg
or
rcl
mov
nop
mov
in
push
pop
retf
lds
cmp
dec
push
cmp
(bad)
sub
sti
push
cwde
xor
stos
jo
mov
xlat
and
retf
fsubr
ja
add
cli
scas
mov
popa
sub
cli
inc
sub
fcomp
xchg
jne
mov
loopne
popf
in
sub
stos
mov
mov
pop
jo
retf
dec
sbb
cmp
add
sbb
or
call
sbb
inc
xlat
inc
mov
in
cmp
nop
pusha
outs
push
push
mov
xchg
sub
loop
and
gs
xlat
cmp
adc
cmc
cwde
pop
sub
and
sub
fnstcw
mov
jnp
ins
jbe
test
out
mov
(bad)
jns
inc
adc
in
xchg
jg
xor
pop
xchg
pop
les
daa
ja
push
fdivr
lds
pop
pop
cmp
(bad)
ror
lds
jmp
xor
mov
jmp
cmps
test
mov
jle
mov
test
lods
push
stos
arpl
fcmovnu
push
iret
cmp
sub
stos
mov
mov
frstor
adc
stos
call
inc
xchg
dec
out
call
(bad)
fincstp
mov
sub
adc
into
inc
jns
pop
ds
cmp
sti
shl
xor
loope
add
cmps
push
outs
je
cmp
cmps
imul
pop
cmp
mov
in
dec
test
xor
jecxz
jmp
mov
push
or
or
icebp
jae
adc
movs
adc
sbb
jl
lahf
dec
arpl
mov
pop
mov
fidiv
dec
jbe
jp
add
pop
sbb
push
leave
mov
sub
call
in
push
mov
cmp
jnp
or
stc
int
lock
rcl
clc
cmp
stc
int3
xor
out
iret
fwait
pop
ret
(bad)
daa
jecxz
mov
test
stc
push
or
repnz
xchg
and
in
shl
or
inc
inc
and
aaa
test
dec
(bad)
mov
gs
push
mov
or
adc
shl
xor
mov
push
cmps
daa
mov
mov
rcl
sbb
push
cdq
in
inc
or
jnp
loop
mov
outs
push
inc
pop
push
mov
xchg
test
(bad)
mov
add
aaa
and
clc
jmp
add
lods
aaa
cmps
add
nop
pop
hlt
add
xor
and
scas
pop
xchg
in
add
sar
jge
sub
sbb
mov
pusha
inc
aad
icebp
cmps
(bad)
fadd
cmp
add
xor
test
jne
dec
shr
mov
xchg
add
mov
add
inc
push
dec
cs
cmp
xchg
(bad)
jge
clc
jnp
or
push
aam
sti
mov
and
test
in
in
xchg
adc
aad
fsubr
cmc
sahf
mov
test
pmulhw
ins
push
jle
div
xlat
pop
inc
xchg
inc
sti
gs
out
jmp
inc
mov
aas
or
or
jo
and
add
xor
stos
mov
cmp
pop
xor
call
dec
inc
mov
push
repnz
push
sahf
jmp
sub
push
in
jp
sbb
inc
and
push
ins
mov
and
dec
xchg
pop
or
xchg
jle
push
(bad)
push
ins
ret
loope
push
ror
pusha
data16
mov
iret
dec
pop
scas
adc
push
(bad)
fmul
fcom
sbb
jg
pop
movs
ret
push
(bad)
adc
add
and
popa
in
test
ret
je
shl
dec
mov
add
xchg
jae
pop
shl
mov
xchg
pop
mov
outs
add
js
pop
mov
pop
pop
je
stos
adc
or
sub
ss
xchg
out
int3
daa
xchg
aam
mov
out
push
daa
ds
mov
popa
mov
push
xchg
mov
in
in
fmul
clc
stc
adc
movs
popa
rcl
sbb
push
cmp
mov
push
add
bound
fisub
out
push
mov
popf
pushf
in
push
xchg
lods
fsubr
outs
ins
lea
pop
pusha
adc
push
dec
adc
inc
sbb
fcom
cmps
leave
test
inc
mov
test
jae
test
or
push
repnz
test
push
mov
jg
jp
cmps
out
sar
pop
sahf
ins
inc
gs
push
pop
push
stc
out
mov
in
cmc
or
loope
adc
add
outs
retf
pop
jle
jp
fld
pop
fild
sbb
fnstcw
mov
repnz
popf
outs
in
outs
mov
sbb
or
dec
enter
push
es
inc
stc
scas
or
ficomp
ja
in
(bad)
cli
jo
or
cmp
das
jmp
enter
sub
adc
mov
scas
aam
sets
js
inc
mov
fs
add
cmp
stos
inc
aaa
mov
mov
aas
adc
shl
popa
call
jmp
stc
lock
mov
pop
jno
pusha
lds
push
cmps
xor
sahf
in
out
jp
in
xor
sub
push
int3
sbb
push
std
jns
(bad)
iret
rcr
xchg
sub
adc
add
add
inc
js
iret
push
das
scas
sub
jge
test
dec
enter
or
aad
test
iret
retf
in
test
xor
add
mov
mov
shr
les
in
ds
std
fistp
pop
rcr
xor
sub
mov
fisttp
mov
dec
sub
and
jecxz
cli
dec
pop
iret
mov
mov
mov
pop
jg
jo
out
fist
push
inc
scas
imul
xchg
mov
mov
mov
push
adc
div
inc
nop
lods
popf
cmp
ss
js
fidivr
add
and
mov
cmc
movs
cld
xchg
jge
or
xor
dec
cmps
xor
vcvtdq2pd
push
dec
sbb
popa
cmp
dec
ret
sub
pop
loope
fisubr
push
fidiv
jo
sar
inc
adc
retf
adc
retf
jns
(bad)
ss
adc
sbb
xlat
xchg
fdiv
jnp
mov
fcomp
inc
inc
fist
xor
xchg
lods
adc
or
mov
fsub
int3
pusha
push
mov
mov
rcr
out
imul
sbb
sub
in
or
jb
in
jns
cmp
mov
(bad)
aam
test
mov
bound
loope
rcl
jnp
ja
fcmovu
add
fisttp
into
push
pushf
jecxz
xor
add
xchg
jo
fild
ret
jo
and
popa
loopne
xlat
scas
push
leave
sub
sub
fstp
inc
cld
fistp
mov
sub
sub
loopne
es
cmp
jb
sbb
retf
les
mov
imul
in
push
xchg
rol
jns
movs
adc
sbb
(bad)
fcomp
sbb
int
mov
movs
sbb
xor
fisubr
ins
and
xor
sbb
sbb
jae
push
icebp
dec
popa
outs
sti
or
xor
inc
inc
test
xor
dec
xchg
aaa
mov
adc
imul
cwde
xlat
aaa
dec
pop
mov
mov
(bad)
cld
mov
lea
fst
cmovle
sbb
jp
rdtsc
jecxz
add
ss
xchg
cli
or
mov
xchg
sahf
cmp
enter
aaa
mov
add
lock
out
cmps
stc
(bad)
pop
sti
sbb
xchg
adc
sbb
pop
inc
ror
mov
retf
xchg
pusha
push
xchg
ins
retf
pop
pop
aas
rol
dec
cmp
ss
outs
add
and
inc
sbb
cmp
adc
jmp
xchg
mov
fimul
loope
aas
mov
add
clc
stc
jb
mov
xlat
adc
pop
mov
sti
les
sub
xchg
aaa
rcl
sbb
fiadd
mov
imul
in
inc
xchg
in
push
jmp
pusha
jle
inc
pop
movs
jnp
push
inc
mov
and
jp
es
add
les
in
lods
arpl
push
(bad)
mov
mov
mov
(bad)
std
arpl
jg
sbb
jns
push
xchg
das
sbb
sahf
or
test
dec
inc
jo
mov
pushf
ret
push
push
test
sti
cmc
xor
push
mov
jmp
push
jecxz
pop
dec
lahf
fiadd
scas
stos
sar
test
push
and
cmc
inc
add
int3
arpl
xchg
add
or
xchg
dec
push
xor
pop
test
arpl
or
ds
xor
add
push
ins
xchg
test
push
out
push
push
or
jp
je
or
xchg
and
mov
mov
dec
ret
pop
adc
out
cli
imul
mov
test
mov
and
loopne
jp
jae
popa
fisub
xor
in
jge
hlt
ret
into
pusha
mov
test
jns
inc
mov
adc
ja
call
fidivr
loop
lds
jecxz
adc
clc
jl
xchg
cs
call
sub
cmc
jae
push
add
and
sbb
daa
jnp
cwde
lea
xor
ja
xchg
inc
fstp
imul
aam
mov
or
xor
xchg
pop
aad
pusha
mov
mov
sar
sbb
dec
add
cmp
pcmpeqb
retf
adc
push
sub
mov
ficomp
push
cmps
out
mov
xor
pop
punpcklbw
call
cdq
mov
retf
xchg
test
cli
or
xor
jecxz
adc
dec
movs
into
push
dec
gs
dec
in
sub
cdq
cmp
ins
or
shl
xchg
std
cli
fwait
jo
cdq
add
jle
xor
pusha
mov
fidivr
sahf
pop
cmp
adc
jne
mov
movs
cs
mov
or
sbb
inc
pop
das
xor
test
lock
mov
pop
and
pop
in
pop
and
xchg
lahf
sbb
inc
fidiv
xchg
cli
int
pop
jmp
lahf
jb
sub
xchg
cmp
mov
pusha
cli
setp
xor
jne
pusha
sbb
pop
xchg
sub
pop
test
mov
in
cld
jmp
and
fiadd
je
repnz
in
aam
mov
and
jmp
or
and
das
call
fdivr
mov
lods
mov
outs
rcl
and
mov
push
jnp
repnz
jg
push
dec
stos
addr16
jmp
ja
(bad)
aam
sub
stos
(bad)
mov
push
adc
fnstcw
stos
mov
jecxz
pop
outs
sub
mov
movs
lods
shl
fwait
js
cdq
mov
inc
inc
mov
ret
or
inc
nop
fiadd
test
(bad)
outs
(bad)
mov
lds
int3
adc
or
jl
xchg
stos
in
fisub
lds
or
push
jge
pop
mov
movs
in
repnz
add
dec
mov
or
daa
movs
pop
ds
xor
lods
add
repz
sub
cmp
pushf
arpl
and
mov
shl
mov
mov
in
popa
sbb
(bad)
sbb
dec
dec
cmp
add
xor
jp
hlt
cmp
push
popa
push
jmp
xlat
dec
mov
add
adc
xchg
jmp
arpl
pop
mov
vprotw
add
shr
in
jle
scas
mov
repnz
sahf
aas
inc
pop
adc
sar
jge
add
out
xchg
jg
fist
data16
jns
cmp
and
repz
sub
repnz
popa
pusha
jo
push
mov
xchg
jne
rol
or
js
adc
lea
fst
jmp
pop
popa
mov
mov
fdiv
aas
sbb
(bad)
jo
mov
fs
xchg
and
aaa
sbb
sub
mov
ja
cld
add
inc
outs
jns
jne
push
xchg
mov
pop
cmp
push
scas
(bad)
cmc
xor
stc
(bad)
adc
jbe
mov
ins
addr16
or
or
loope
sbb
push
(bad)
mov
or
jo
xor
out
cmps
int3
xchg
(bad)
movs
out
and
jmp
test
shl
mov
push
jns
(bad)
popf
mov
dec
arpl
mov
movs
sbb
mov
mov
cmp
in
sahf
test
into
jl
xor
sub
imul
or
push
push
aaa
fdivr
clc
mov
xchg
mov
mov
out
shl
(bad)
and
in
xchg
rcl
call
xchg
xor
dec
in
dec
push
int3
pusha
stc
adc
jb
xlat
pushf
xor
bound
dec
pop
lods
rcl
pop
or
xchg
call
fisubr
cmc
or
ret
sub
xchg
sub
outs
cmps
scas
clc
cmp
(bad)
cwde
out
(bad)
scas
nop
stos
loope
pusha
dec
enter
dec
inc
addr16
fist
mov
dec
and
cld
pop
repz
and
xchg
push
pop
ins
lock
iret
mov
cwde
mov
inc
xchg
or
cmp
xchg
scas
loop
rol
retf
std
jl
jnp
adc
push
or
in
sub
ins
fldcw
jnp
mov
jae
sbb
(bad)
sub
das
retf
fwait
movs
push
mov
movs
rcr
inc
pop
pop
dec
sub
mov
pop
jns
sub
inc
(bad)
mov
out
pop
setg
mov
mov
jecxz
dec
xor
outs
jmp
mov
jle
test
inc
adc
daa
cld
inc
psubusb
jo
enter
inc
push
mov
inc
or
mov
cli
pop
sar
dec
fwait
stos
adc
push
fstp
add
fisttp
push
mov
je
fild
mov
push
mov
sub
jge
(bad)
cmp
sbb
rcr
std
and
adc
and
(bad)
dec
(bad)
jns
ja
sti
sub
cmp
fild
popa
push
xchg
fstp
call
cmp
(bad)
fild
jb
mov
call
push
adc
imul
leave
cwde
ret
int
jne
or
rol
push
ficom
sub
retf
icebp
dec
sub
mov
rol
aas
sub
mov
push
lock
xchg
loopne
aad
test
adc
je
sbb
jp
cmp
bound
fcomp
(bad)
ins
scas
xor
inc
pop
xchg
add
push
jmp
fcom
inc
mov
test
gs
inc
ret
xchg
jg
mov
xchg
test
test
cs
rol
pusha
adc
cmp
xor
or
jns
mov
repnz
mov
jmp
sbb
outs
mov
jge
push
sahf
xchg
mov
test
xor
dec
movs
out
push
and
bound
data16
clc
(bad)
pusha
push
ins
and
push
xchg
jo
imul
mov
push
sub
out
fcomp
retf
mov
mov
cmp
das
adc
mov
sub
pop
dec
adc
mov
test
mov
xchg
cwde
mov
stos
cli
das
cbw
les
mov
jae
push
push
mov
mov
loop
pop
xor
mov
jmp
fcomi
sub
movs
pop
js
inc
iret
ss
pop
ret
rol
outs
rcl
add
jl
mov
pop
mov
mov
mov
sahf
inc
pop
mov
xor
int
sahf
add
sahf
jae
mov
lods
inc
dec
pop
das
and
xchg
mov
clc
push
sub
loope
imul
xor
sar
cmp
mov
iret
ret
cmps
stos
mov
xchg
aad
adc
dec
push
push
add
enter
jmp
or
test
pop
stos
popf
stc
in
mov
cwde
pop
cmp
dec
(bad)
xchg
cld
loopne
add
jae
or
mov
adc
jo
mov
test
in
push
pushf
fist
adc
mov
mov
inc
inc
test
mov
jmp
aas
or
repnz
jns
push
fdivp
and
cwde
cmp
inc
pop
inc
push
pop
fld
xor
push
mov
stos
jmp
das
fidivr
repnz
xchg
mov
and
shl
push
neg
neg
cmp
pop
xor
shl
push
xchg
lds
dec
xchg
sbb
es
mov
ror
push
les
sub
in
push
jb
loop
retf
(bad)
sub
mov
sub
or
mov
(bad)
sar
xor
or
mov
mov
push
mov
in
popa
jmp
push
push
or
adc
mov
xor
ins
popa
movs
pop
jb
adc
popf
sub
mov
push
and
push
cli
sub
inc
out
iret
(bad)
cmp
xor
popf
(bad)
and
shr
dec
or
outs
lea
icebp
jge
push
jo
pop
cmps
sti
int
sar
pop
mov
adc
dec
ja
xchg
repnz
bound
pop
in
out
jnp
sbb
mov
cld
sbb
or
in
ins
retf
jnp
cmp
dec
cmps
cmc
lods
dec
aad
mov
in
jmp
(bad)
fwait
daa
xchg
lahf
out
inc
lahf
enter
outs
mov
dec
inc
ficom
or
out
daa
pusha
jno
cmp
jge
mov
jmp
mov
fcmove
xabort
iret
pop
pusha
fwait
mov
push
jb
dec
dec
loopne
jl
jnp
in
retf
mov
jmp
mov
stc
xchg
call
adc
xchg
sub
nop
mov
sbb
js
movs
sbb
inc
test
in
and
push
pop
fwait
and
xchg
sbb
adc
gs
pop
sub
arpl
nop
fist
shl
add
pop
(bad)
or
adc
push
sub
mov
(bad)
jns
xlat
stos
jno
test
xor
js
dec
out
(bad)
mov
pop
and
in
push
mov
rol
mov
inc
push
dec
popf
adc
sti
xlat
and
mov
cli
cdq
sbb
sbb
(bad)
jg
enter
fdivr
in
arpl
pop
icebp
jns
mov
scas
test
push
(bad)
shl
mov
int
ds
cmps
adc
dec
(bad)
mov
push
sar
pop
sub
ret
mov
lods
and
scas
cs
xchg
pop
mov
inc
mov
fst
mov
xor
sbb
jnp
outs
outs
hlt
cmc
or
jo
xchg
in
and
xchg
repnz
push
cld
mov
add
sub
lds
mov
arpl
xor
rol
pop
xchg
pop
pop
add
cmps
mov
aam
shl
fist
mov
xchg
cli
jl
es
out
popf
xor
(bad)
mov
adc
and
ins
push
push
push
fwait
dec
(bad)
jge
or
shl
push
mov
fwait
aad
pop
add
and
inc
push
iret
fidivr
jb
movs
jne
push
jae
movs
xchg
pop
mov
popf
inc
mov
inc
mov
leave
std
and
mov
or
aam
loop
add
stos
popa
dec
ret
sub
mov
retf
cmp
push
cmps
mov
push
jo
sar
cli
sub
stc
cmp
adc
outs
in
sar
ret
cmp
sub
add
inc
mov
and
cmp
movs
fs
push
fs
jl
adc
repnz
pop
ret
call
dec
fistp
mov
and
and
sbb
retf
sbb
pop
mov
cmp
pop
or
js
push
push
movs
int3
mov
sti
std
xor
cmp
xor
push
mov
(bad)
jns
push
jno
rol
dec
sbb
mov
inc
aad
pop
xchg
xor
in
mov
inc
adc
add
cmp
pop
pop
push
rol
movs
fcomp
cmps
push
aaa
sbb
out
cmp
sub
cmc
cmc
stos
add
mov
bound
sub
xor
mov
adc
out
mov
pop
ins
rcr
je
mov
mov
movsx
jns
cmp
jmp
xor
and
cli
push
pop
lods
push
push
aad
ja
mov
repnz
pusha
add
cpuid
(bad)
or
ds
sahf
sbb
(bad)
ins
sub
mov
push
cli
cmp
(bad)
mov
xchg
mov
adc
mov
or
jl
mov
adc
and
retf
cmp
mov
push
cmp
xor
fnstcw
push
pop
(bad)
mov
or
xor
or
xchg
lods
ds
mov
sbb
ds
sbb
out
adc
cmp
bound
push
outs
pusha
repz
jae
(bad)
stc
mov
je
ss
out
fild
ret
sbb
stos
jmp
jnp
and
ret
pop
mov
loope
and
retf
jmp
push
xor
imul
adc
jo
xor
enter
sub
fbstp
and
sbb
adc
xchg
mov
mov
hlt
sub
addr16
cdq
push
mov
sbb
adc
push
aas
cmc
push
shl
mov
xchg
mov
leave
cmp
and
(bad)
cs
jmp
cmp
adc
pop
mov
out
push
jmp
jmp
or
sti
ret
mov
cmp
aam
push
sbb
xchg
push
push
push
cmc
inc
ds
xchg
fsub
dec
imul
pop
pop
ret
inc
aam
cmps
jne
sub
and
ror
int
xor
push
(bad)
mov
xor
jno
mov
inc
push
fwait
mov
cmp
ror
sar
les
pop
inc
sbb
out
mov
mov
lock
pop
mov
mov
jle
mov
jno
xchg
test
call
int3
pusha
pop
mov
adc
sti
cs
or
mov
or
inc
pop
scas
mov
aaa
adc
push
sar
pop
ret
dec
(bad)
bound
cwde
mov
and
out
inc
popa
retf
retf
add
call
xor
mov
jge
sbb
cmps
pop
or
mov
fcom
mov
(bad)
cdq
mov
mov
pshufw
jge
cmovp
fdivrp
jnp
in
dec
enter
psubq
fsubr
cs
mov
jl
les
mov
shl
adc
int3
mul
mov
jbe
add
sbb
xchg
pusha
je
lea
jecxz
mov
cmc
cmp
xor
xchg
sahf
in
jp
mov
push
sar
arpl
es
test
push
pop
(bad)
adc
cmp
ret
push
and
lods
adc
in
ret
mov
clc
mov
stc
aam
hlt
mov
loope
je
or
push
inc
push
mov
adc
je
mov
pop
cwde
xchg
inc
ror
nop
cmp
pop
jae
mov
dec
xchg
mov
adc
scas
mov
es
ret
outs
das
push
jmp
mov
(bad)
push
xchg
push
outs
lods
and
sbb
jmp
repz
mov
outs
shl
mov
arpl
xchg
shr
or
leave
out
jg
jns
adc
loopne
adc
ja
scas
fisubr
popf
mov
bndldx
mov
sar
mov
out
or
test
loope
cmc
dec
jns
mov
stos
push
dec
sub
push
movs
adc
or
hlt
mov
inc
into
imul
ficomp
mov
push
pop
or
sbb
pop
fwait
mov
jb
add
imul
clc
inc
pusha
sub
push
sub
xor
aas
enter
jnp
jmp
inc
leave
je
movs
xor
cmp
mov
or
pop
sub
loope
add
shl
cmp
pop
pop
inc
and
push
fmul
mov
lds
movnti
or
out
adc
sbb
scas
into
loope
hlt
mov
aad
icebp
xor
dec
enter
mov
imul
mov
xlat
add
in
cmp
repnz
movs
mov
sbb
inc
or
repnz
adc
mov
mov
inc
inc
rcl
mov
shr
pop
lahf
mov
jge
xchg
fs
nop
dec
outs
aam
cmp
cmp
inc
inc
popa
mov
int3
call
int
jmp
addr16
sub
jne
mov
jmp
mov
sub
mov
mov
je
call
ins
(bad)
popf
mov
sbb
(bad)
xchg
pop
sti
jle
mov
mov
mov
adc
add
nop
(bad)
mov
jg
movs
pop
mov
dec
and
shr
xlat
arpl
leave
xor
data16
test
add
sbb
ror
jmp
mov
daa
pop
jo
repz
mov
xlat
test
(bad)
call
xchg
lock
rcr
mov
rep
test
dec
pop
repz
jg
ds
out
or
xor
adc
add
rcl
out
and
xchg
aad
cmps
ja
or
ins
adc
lods
pcmpeqb
push
mov
idiv
push
ins
fnsave
ds
std
add
add
cmc
in
push
(bad)
mov
push
cld
mov
cmps
outs
lods
ss
fwait
and
fucomip
jae
call
add
xchg
push
ret
shl
lock
jbe
jo
(bad)
jns
in
int
mov
inc
xor
in
push
mov
mov
gs
int3
cli
or
mov
and
fcom
inc
dec
xchg
mov
mov
pop
jbe
xor
loope
dec
pop
mov
outs
iret
adc
loope
pop
pop
inc
js
adc
mov
lock
dec
push
jo
xor
cmp
fadd
cdq
sbb
imul
test
fcmovnb
mov
xchg
add
getsec
add
sbb
mov
sbb
push
add
or
adc
jbe
std
(bad)
rcr
scas
mov
jae
mov
retf
movlps
xchg
repz
and
cli
stc
ror
lahf
push
mov
mov
mov
pop
xor
call
pop
sub
xor
mov
js
pop
sub
ss
(bad)
jno
mov
jbe
sbb
sbb
(bad)
retf
lods
popa
sbb
popf
scas
push
push
mov
idiv
pop
out
pop
mov
cld
push
int
jecxz
inc
and
cmc
pop
sahf
ror
or
push
mov
inc
(bad)
adc
jp
hlt
int3
sub
push
mov
cmp
jne
mov
jmp
ja
pop
les
jle
sbb
or
mov
adc
xchg
div
sub
loop
mov
jmp
cmp
or
into
cs
cmps
xchg
pop
sbb
xor
leave
call
hlt
(bad)
mov
xchg
or
jl
push
cwde
hlt
add
sub
dec
dec
(bad)
xchg
div
sahf
arpl
mov
push
sbb
mov
inc
loopne
int
push
movs
or
mov
sub
adc
call
in
or
addr16
mov
mov
ja
popa
out
cs
in
mov
sub
mov
popf
xor
and
xor
out
leave
mov
nop
(bad)
ds
inc
and
pop
sbb
retf
daa
mov
lds
leave
ins
push
and
hlt
pusha
cdq
dec
fnstcw
js
jmp
push
add
xchg
or
dec
cld
fs
rcl
in
sbb
push
xchg
sub
or
std
sbb
dec
or
push
xchg
cmp
mov
lea
mov
mov
push
sbb
sti
or
cmp
mov
outs
mov
movs
ins
cli
lahf
xchg
fist
sbb
push
pop
add
repz
push
jp
add
inc
add
fsubr
pop
sti
jle
fcom
pusha
add
retf
(bad)
push
outs
jl
mov
bound
dec
xor
ja
dec
icebp
jns
repz
scas
fs
adc
mov
stos
rcl
(bad)
push
mov
cwde
lock
jecxz
out
int
dec
(bad)
ss
xor
sbb
std
fbstp
mul
cmp
jecxz
sub
stos
add
fs
ret
jns
loop
arpl
push
out
adc
sub
lods
test
dec
(bad)
jl
mov
mul
mov
xchg
lahf
or
(bad)
call
dec
pop
ja
test
retf
loope
cmp
cdq
xchg
stos
xor
and
mov
pop
pop
lds
cmp
xor
loopne
lods
jp
sti
sub
dec
daa
jmp
cmp
jbe
ss
mov
pop
fisubr
and
push
and
xor
shl
push
int
add
cmp
fcomi
jle
fidiv
fucomp
add
ins
add
mov
jns
fs
xchg
dec
lahf
mov
pop
jns
in
ror
pop
add
fcomp
jg
jmp
(bad)
jnp
es
data16
(bad)
jnp
lahf
sub
push
aam
mov
cmps
aad
ror
jnp
adc
enter
ds
pop
loop
pop
nop
cli
cmp
jl
push
xchg
lods
movs
lock
out
jle
dec
adc
loop
mov
movs
adc
push
push
sar
enter
out
sub
inc
inc
sahf
cmp
sub
push
jnp
into
fstp
loopne
scas
in
mov
adc
cmps
xor
les
push
or
loopne
mov
jmp
cmp
inc
out
loopne
dec
dec
or
test
jae
sbb
sbb
mov
inc
(bad)
ret
(bad)
xlat
dec
in
cmp
loop
cmps
jg
mov
jle
and
mov
cwde
xor
add
jl
je
mov
mov
fincstp
jmp
sbb
and
mov
mov
retf
test
shr
inc
inc
inc
ss
pop
pop
xlat
stos
stc
jnp
stc
inc
mov
dec
(bad)
repz
cmp
xchg
pop
bound
inc
or
cmp
mov
dec
aad
cmp
add
cmp
pop
mov
retf
cmp
mov
inc
mov
mov
or
mul
inc
fadd
xor
rcr
jae
add
mov
xor
loop
cli
xchg
push
mov
scas
jmp
add
ror
mov
dec
sub
xor
pop
push
out
ss
xchg
ja
add
mov
lahf
outs
push
mov
adc
popf
inc
jmp
js
push
and
cmp
mov
out
hlt
sbb
(bad)
jmp
push
push
sbb
jns
pop
ds
jmp
jle
fmul
inc
sti
jmp
push
ss
out
in
cmps
shr
and
push
xchg
ss
sbb
cmp
xchg
sub
imul
xchg
mov
xchg
xor
jnp
fmul
cwde
xor
mov
mov
mov
mov
mov
iret
sar
cmp
or
mov
test
pop
(bad)
fsub
and
ins
leave
jo
or
call
fiadd
cmc
repz
(bad)
das
pop
and
loope
sar
mov
rcr
jnp
cmp
clc
lahf
jnp
shl
or
xlat
es
lea
mov
ret
test
mov
push
aad
data16
push
scas
lds
jp
pop
dec
repnz
sub
and
fbstp
add
dec
pop
stos
cli
leave
mov
daa
and
jbe
cld
arpl
push
call
mov
cmp
shl
jg
jne
test
xor
sti
lods
rep
mov
lds
sbb
adc
addr16
jnp
xchg
push
repnz
add
mov
aad
(bad)
stos
mov
push
adc
inc
out
mov
xchg
xchg
outs
vmread
sub
mov
or
mov
mov
cmps
imul
jmp
inc
cmp
mov
push
jno
and
jb
add
xchg
or
mov
shl
add
or
les
fmul
cs
inc
and
bound
cmp
xor
sti
das
ds
jne
mov
jno
test
stos
stos
stos
or
mov
scas
xor
les
push
shl
lahf
inc
xchg
pusha
xchg
push
hlt
and
cdq
mov
div
jno
pop
jp
xchg
inc
and
ror
fiadd
jp
mov
enter
add
fisub
push
div
into
mov
mov
cdq
shl
mov
fild
add
push
ds
pop
add
mov
xor
pop
test
xchg
imul
sbb
xor
daa
fstp
ins
pop
jb
jae
fcomp
jmp
pop
pop
mov
mov
sbb
int
jno
jmp
nop
outs
test
js
jbe
jb
add
push
in
add
stos
scas
sub
rcl
sbb
pop
pop
icebp
jb
and
test
push
retf
mov
mov
and
xor
cmp
mov
dec
addr16
sub
and
dec
cmc
(bad)
push
push
xor
or
cmp
leave
in
xchg
or
dec
push
sbb
add
stos
mov
cmp
retf
add
ficom
push
nop
mov
dec
shr
push
or
xchg
mov
data16
jl
jmp
add
inc
gs
les
push
rcl
jp
adc
jge
and
push
mov
(bad)
cmc
clc
inc
test
mov
xor
(bad)
inc
push
ror
push
cdq
cmp
rcl
and
xchg
enter
ret
ret
push
in
push
fidiv
(bad)
jo
inc
in
cmp
call
int3
adc
stc
pop
pushf
inc
cmp
add
js
(bad)
hlt
mov
jge
xchg
mov
ins
push
mov
stc
lods
mov
xchg
cld
mov
iret
dec
mov
cmp
dec
xor
xor
jmp
stos
stos
xor
push
pop
inc
jl
inc
in
lods
das
repnz
inc
mov
dec
aad
fistp
dec
push
mov
test
icebp
mov
mov
clc
pop
nop
ret
jbe
frstor
or
mov
cmp
test
jo
lods
das
mov
retf
lods
rcr
inc
xor
fdiv
mov
mov
js
xchg
push
mov
xor
ins
in
xchg
addr16
pop
nop
nop
int
and
stc
mov
push
xchg
rol
dec
stos
sbb
fstp
addr16
rcr
fist
jmp
mov
ds
sub
xlat
and
sbb
test
pusha
lea
and
pop
cdq
cmp
push
pushf
les
pop
sti
mov
jp
stos
cmp
mov
popf
out
inc
movs
call
cmps
mov
imul
movs
jmp
sub
ss
mov
mov
and
push
pop
pop
(bad)
xchg
pop
mov
ss
push
inc
push
out
adc
mov
push
dec
push
scas
jp
push
add
mov
repz
add
mov
leave
xchg
fistp
and
mov
xor
pop
mov
bnd
dec
mov
fdivr
stos
xor
xchg
jae
aas
call
inc
pop
into
inc
outs
sbb
xchg
cld
mov
pushf
jmp
or
push
add
push
retf
add
dec
xchg
icebp
and
(bad)
jne
popa
xchg
data16
pop
fsin
cmovg
cmps
rol
sar
xor
adc
movs
or
cmp
add
sbb
sbb
int3
mov
sbb
pushf
push
sbb
cwde
sbb
cmp
loop
aad
and
mov
mov
das
pop
adc
add
bound
in
mov
out
outs
fwait
or
out
test
ds
je
sub
or
(bad)
mov
shr
pushf
cli
(bad)
fmul
or
es
cld
repz
xchg
mov
int3
idiv
das
icebp
loop
sbb
push
cld
ss
(bad)
in
xlat
push
xor
xchg
or
ret
outs
daa
les
(bad)
aaa
js
aas
xchg
lods
cmc
push
jmp
fcmove
and
stos
shr
ror
xchg
inc
push
jg
sti
lock
in
pushf
dec
mov
lea
add
push
enter
sub
lods
or
sub
loope
xor
iret
jge
fadd
movs
iret
sub
loopne
mov
sahf
lea
jg
mov
dec
(bad)
xlat
jo
(bad)
dec
fidiv
cdq
push
jmp
sbb
adc
aas
xchg
lods
ret
int3
mov
jae
jp
xchg
fist
aad
aas
adc
fnstsw
inc
cmp
aad
je
clc
jnp
ja
addr16
dec
es
push
(bad)
(bad)
cmp
movs
inc
jae
data16
jnp
mov
mov
sub
out
push
push
fcomp
jle
into
inc
push
push
pop
add
out
add
jg
mov
ja
lods
mov
jmp
aaa
jne
xchg
sub
xor
jecxz
push
jge
inc
aam
jno
and
inc
push
dec
mov
mov
scas
mov
mov
mov
jnp
dec
mov
cmp
or
dec
jge
shl
(bad)
sbb
lods
(bad)
push
fbstp
repz
jns
in
stos
cmc
mov
leave
dec
cs
jge
and
aaa
ror
fld
mov
cmp
jl
cwde
mov
and
ret
in
retf
or
add
or
call
arpl
jmp
dec
and
rol
sahf
sbb
repz
(bad)
mov
sbb
cmp
push
cld
(bad)
jmp
icebp
ror
jmp
in
cmps
in
(bad)
mov
cmp
push
jnp
fcom
push
(bad)
add
(bad)
lds
ja
add
test
xchg
outs
xchg
imul
dec
xor
push
(bad)
pusha
adc
sbb
mov
xchg
cmp
fwait
cs
or
scas
lods
je
ficom
jg
popf
(bad)
outs
movs
add
(bad)
outs
add
cmps
adc
mov
add
loopne
call
sub
fwait
mov
pop
nop
fld
ret
push
popf
mov
(bad)
sub
or
rol
mov
imul
and
repz
sbb
and
rcl
outs
cmp
mov
mov
sahf
xor
nop
mov
scas
sub
fdiv
xchg
push
jle
xor
jecxz
ret
xchg
inc
mov
hlt
sar
int
pushf
in
pop
add
push
pop
push
xchg
jns
(bad)
iret
fnstenv
ins
ret
out
inc
movq
ja
xor
ja
mov
leave
pop
hlt
sub
xchg
mov
adc
pop
lods
and
int3
and
jnp
or
sbb
and
add
sbb
xor
push
in
add
repnz
adc
shr
dec
imul
jo
or
dec
ror
clc
cmps
xchg
mov
je
inc
daa
add
jo
scas
inc
push
and
sub
cdq
stc
enter
mov
mov
mov
add
arpl
sub
adc
enter
sahf
mov
sbb
cmp
imul
cmp
mov
ja
fs
cld
hlt
aas
mov
bound
pop
ret
adc
adc
cdq
xchg
or
or
sbb
jbe
out
out
cmp
(bad)
mov
dec
push
ja
adc
jno
mov
and
pop
inc
xchg
fld
(bad)
xor
and
(bad)
jns
inc
out
outs
xchg
jg
sbb
mov
fwait
lock
pusha
mov
cmp
test
or
dec
xlat
xor
loop
jo
call
adc
lods
adc
loope
dec
ror
test
dec
in
test
sub
sbb
call
cmp
cwde
lea
rcr
cmp
daa
mov
fisubr
cmp
dec
shl
push
xor
push
cmp
inc
pop
add
inc
es
iret
and
daa
inc
push
sub
repz
cmp
add
push
(bad)
fimul
ret
xor
daa
pusha
jp
frstor
mov
pop
jl
add
xchg
push
add
mov
imul
shl
xor
pop
aaa
adc
sub
lods
add
dec
in
push
cld
add
shl
dec
jecxz
bsr
or
mov
cmp
imul
fisub
out
add
mov
or
mov
es
enter
cmp
pushf
mov
sub
movs
into
loope
outs
mov
pop
stc
les
test
fist
dec
lahf
xchg
push
lods
inc
shl
mov
pop
jo
call
aad
aaa
aas
or
inc
sti
push
ins
data16
dec
aam
rcl
cmp
out
scas
adc
popf
adc
sar
mov
jns
js
shl
and
sub
ds
ds
and
xchg
gs
fist
test
cmp
sub
int3
mov
jo
je
cmc
adc
cmp
mov
cmp
inc
inc
sbb
mov
movs
mov
retf
lea
call
fnsave
jg
lods
sar
adc
inc
jge
(bad)
repnz
mov
fwait
lods
jb
sub
dec
je
jmp
jne
adc
stc
(bad)
fnsave
lea
inc
jae
std
fcmovu
es
cmp
pop
cmps
int
inc
xchg
jb
lods
cmc
xchg
push
scas
mov
arpl
inc
enter
inc
jge
sbb
mov
fwait
inc
fsubr
fwait
inc
pusha
test
(bad)
pop
test
stos
adc
movs
push
push
bound
or
adc
lds
mov
int3
and
push
test
push
cmp
and
cs
aas
leave
mov
lds
iret
stc
xchg
push
jecxz
or
push
mov
inc
lock
sub
xchg
mov
jnp
stc
mov
sbb
aas
test
sbb
repnz
fincstp
push
call
mov
cld
inc
xchg
push
not
sub
sbb
add
xchg
clc
mov
outs
pop
xor
adc
mov
inc
pop
imul
jmp
mov
push
sub
hlt
pop
fcomp
out
push
gs
ins
(bad)
div
loope
data16
cmps
test
jno
and
mov
or
adc
and
test
add
(bad)
cmp
ds
lods
pop
jmp
leave
inc
out
movs
xlat
pop
dec
xchg
and
cwde
cmps
add
and
mov
and
sti
outs
and
cmp
test
lea
add
ror
retf
lods
mov
push
mov
and
je
xor
ficomp
add
inc
push
sbb
(bad)
cmps
mov
or
sar
std
mov
adc
inc
ds
pop
or
inc
scas
sar
outs
cmp
push
inc
push
sub
pop
mov
jae
rep
ins
inc
xor
inc
in
retf
loope
inc
sub
enter
lea
icebp
mov
loope
shr
scas
fnstenv
rcr
mov
sbb
inc
inc
xor
daa
std
data16
das
mov
fwait
and
jecxz
add
mov
stos
jp
xor
test
mov
cmp
hlt
stos
jecxz
(bad)
pop
xor
cmps
adc
jg
imul
add
into
inc
adc
pop
xchg
je
fcom
shl
loope
iret
sub
cmovs
dec
sub
dec
test
popf
jmp
jg
aam
les
movs
cmps
in
mov
in
out
and
jl
or
cmp
cmp
xor
xchg
je
(bad)
stc
out
scas
imul
jmp
push
test
pop
ds
(bad)
xchg
leave
or
xchg
fnstcw
pop
pop
dec
jo
xchg
sbb
inc
les
sub
cmps
mov
loope
pop
sub
mov
repz
sbb
add
mov
icebp
mov
jle
out
rcr
adc
dec
sbb
ins
and
fidiv
mov
inc
sub
out
inc
cmps
ds
push
rcr
mov
push
test
mov
and
and
pushf
cmps
(bad)
sbb
mov
dec
ret
cdq
repnz
scas
add
je
or
pop
out
scas
jl
mov
mov
push
ins
fs
js
in
test
adc
mov
mov
jmp
fs
and
jp
jl
xchg
hlt
push
mov
clc
or
or
mov
mul
cmp
enter
imul
cdq
mov
xchg
fadd
scas
mov
repnz
mov
aas
mov
and
dec
stos
in
nop
and
jl
gs
cs
pop
mov
sbb
adc
idiv
fldenv
scas
div
mov
mov
fnsetpm(287
scas
mov
pop
js
fnstenv
dec
mov
pop
fs
pusha
sub
adc
jl
xor
xlat
jecxz
clc
sub
daa
int3
cdq
out
pushf
div
adc
mov
push
dec
sbb
stos
aas
fild
mov
(bad)
call
push
jmp
leave
es
cmovge
aam
pop
in
jne
push
pop
xchg
push
xchg
mov
and
mov
sub
cmp
mov
xor
xchg
js
ss
sbb
push
mov
mov
fist
xor
stc
fidiv
and
jge
jmp
ins
push
xchg
cmp
adc
cmps
(bad)
cs
cs
dec
push
and
xor
aaa
cmps
mov
jns
aam
or
pushf
lock
ins
mov
sbb
dec
lods
data16
cvtps2pi
imul
lods
inc
and
mov
jg
(bad)
mov
adc
xor
xchg
xor
xlat
cmps
xchg
inc
rcr
push
jmp
movs
(bad)
ret
jne
inc
push
xchg
sbb
cmp
je
movs
inc
(bad)
retf
pop
push
mov
xchg
sbb
add
or
stc
adc
add
cmps
cmps
mov
aaa
jns
cmps
call
mov
fstp
lods
sbb
stos
call
xlat
adc
in
cmp
out
(bad)
push
add
test
mov
mov
(bad)
jmp
iret
repnz
mov
(bad)
mov
sub
mov
or
jb
lock
mov
push
add
pushf
and
cmp
loopne
aaa
jbe
shr
retf
mov
test
push
mov
aad
xchg
push
loopne
popf
push
sub
mov
sub
js
ret
mov
xchg
inc
and
in
push
in
fs
in
adc
mov
scas
xor
mov
mov
sbb
hlt
inc
dec
outs
sbb
retf
pop
xor
aaa
stos
add
inc
or
inc
in
or
pop
xchg
out
(bad)
push
adc
jo
xchg
mov
in
call
mov
daa
out
sbb
add
fwait
inc
cs
cmps
sub
test
cmps
sub
out
mov
int3
ret
ds
jne
mov
pop
push
jmp
add
mov
shr
sub
adc
cmps
sbb
retf
jo
push
pop
scas
push
in
lds
push
mov
loop
or
pop
inc
sbb
loop
or
sbb
fucomp
es
pop
pop
add
adc
pop
fucom
adc
nop
popf
leave
test
stc
push
pop
jmp
out
icebp
xchg
idiv
std
pushf
hlt
pop
or
push
pop
xchg
imul
scas
xchg
shr
mov
dec
cmps
mov
mov
pop
pushf
sbb
push
sub
out
push
cwde
cld
cmps
push
fimul
clc
les
sbb
add
daa
jnp
push
dec
aam
xor
movs
sub
dec
push
push
mov
pop
pusha
(bad)
out
clc
ds
pop
mov
xchg
xlat
xchg
daa
fidiv
sti
jnp
aas
int
add
mov
(bad)
mov
mov
repnz
shr
scas
or
or
jmp
mov
and
mov
and
lahf
lods
cmp
push
xchg
ror
test
pop
inc
in
fwait
es
inc
adc
sbb
mov
jmp
fs
jmp
sahf
hlt
in
popf
or
int
retf
dec
rcr
repz
pop
pop
jbe
test
retf
nop
dec
push
push
lea
inc
leave
sub
or
add
in
mov
in
jmp
adc
cmps
loope
mov
dec
mov
imul
popf
or
jmp
jns
sahf
imul
and
aam
xchg
and
enter
pushf
fadd
loop
popa
daa
fdivr
je
jg
cwde
jae
fwait
sub
mov
ret
std
ja
push
cmovle
les
popa
cmp
pop
adc
test
fisub
in
shl
lods
jmp
sbb
mov
and
sti
adc
mov
outs
or
push
(bad)
neg
hlt
push
pop
push
stc
ins
cmp
and
fild
xchg
dec
test
aaa
sub
jae
xor
jl
mov
xchg
(bad)
enter
pop
xlat
xor
std
and
jbe
sbb
shl
mov
inc
mov
add
cmps
int
ret
mov
js
xor
add
aas
cli
sbb
loope
push
push
fs
ror
retf
popa
shr
cmp
cmps
fisub
mov
xchg
cmc
lock
pop
popf
or
push
mov
fld
loope
or
popa
pop
mov
cs
ret
cmp
imul
xor
jns
jmp
xor
xor
and
jnp
je
je
cmps
sub
addr16
stos
ins
jne
bnd
jmp
dec
pushf
retf
std
fstp
and
outs
enter
in
push
fbld
rol
imul
mov
inc
and
pusha
xor
dec
out
(bad)
mov
call
and
test
cmp
(bad)
(bad)
shl
xor
adc
nop
pslld
popf
leave
add
push
fistp
mov
pop
inc
or
dec
jge
jge
and
fdivr
bound
lahf
inc
loopne
and
adc
jnp
xor
inc
retf
add
push
adc
lahf
je
jne
or
mov
pusha
shr
jle
call
in
adc
int3
and
scas
pop
mov
inc
ja
clc
or
mov
ret
mov
sbb
das
sub
pushf
inc
push
arpl
inc
mov
lock
fwait
jmp
scas
popa
sbb
jb
push
mov
dec
pusha
ret
jo
div
fiadd
adc
mov
sbb
pop
lock
xchg
push
jle
jo
ins
cmps
push
xlat
shl
das
mov
pop
jne
cmp
das
or
bound
inc
pop
test
lods
mov
or
inc
pop
cdq
das
test
sti
(bad)
dec
dec
(bad)
add
sub
jbe
loopne
inc
cmps
fs
ins
sti
stc
add
cmp
mov
in
sub
xor
add
mov
sbb
mov
popa
jp
pop
cmp
sar
xor
xchg
nop
and
cmp
mov
(bad)
outs
imul
pushf
mov
sub
dec
ror
inc
popf
nop
sar
ja
scas
push
rol
pop
jp
addr16
int3
daa
popa
xor
jbe
jbe
(bad)
and
push
in
xor
outs
pop
jnp
dec
out
push
xor
pop
jg
scas
add
cmp
mov
inc
xor
dec
and
pop
mov
mov
cmp
adc
test
jbe
add
jnp
outs
in
shl
aas
test
pop
cmp
dec
or
adc
jb
rcl
push
aad
or
shr
sub
cmp
movs
fwait
or
fistp
retf
ins
and
jle
jne
mov
(bad)
pusha
add
push
ret
ss
adc
jae
in
jnp
ror
cdq
repnz
jmp
inc
pop
fimul
mov
into
lods
and
ret
loop
jne
sub
bound
cmp
xor
push
(bad)
jns
sub
je
fwait
pop
cld
ins
mov
jmp
xchg
shr
movs
fwait
push
cmc
aas
inc
mov
mov
jnp
dec
add
xor
ret
(bad)
xor
pop
pushf
out
je
cmc
les
shl
nop
cmc
and
lods
cwde
cmp
or
or
leave
xchg
lds
movs
push
imul
in
(bad)
mov
popf
out
(bad)
mov
pop
lea
in
cdq
cs
nop
iret
or
push
inc
xor
movs
stos
pop
push
ficom
sub
int3
ss
push
or
call
aas
les
movntps
daa
xchg
push
fs
aam
jbe
mov
mov
sbb
jmp
adc
mov
shr
fnstenv
in
dec
(bad)
div
adc
xor
cmc
sbb
xchg
mov
pop
inc
enter
push
jge
imul
fisttp
sbb
cwde
dec
mov
add
jae
mov
ret
mov
sub
push
fwait
jmp
inc
push
dec
jp
imul
stos
data16
loope
pop
retf
ret
iret
arpl
xor
add
cmp
imul
or
dec
cmps
dec
fidiv
fnstsw
mov
jae
dec
fnsetpm(287
xchg
dec
xchg
(bad)
cmp
addr16
movs
pop
pop
mov
lea
mov
push
outs
fdiv
mov
enter
test
mov
cmp
clc
or
jno
stos
mul
cli
mov
push
and
in
fimul
sti
enter
xlat
test
shl
hlt
sbb
push
push
mov
dec
mov
hlt
mov
sar
xchg
cdq
jae
ins
pusha
mov
loop
cmp
xor
inc
lods
movs
or
dec
fnstsw
push
fiadd
int
or
sbb
neg
pop
scas
rcl
push
cmps
cmp
dec
bound
adc
bound
cld
mov
jl
movs
adc
lods
mov
into
push
dec
push
sub
fcmovnb
movs
adc
and
inc
push
xchg
sub
push
(bad)
gs
icebp
daa
xchg
sbb
shl
cmp
jmp
imul
push
dec
sbb
daa
jmp
jle
shl
loope
push
call
dec
imul
pop
sbb
and
mov
mul
dec
xchg
inc
(bad)
and
shl
jb
fwait
mov
xlat
mov
les
add
adc
pop
cld
out
and
(bad)
jno
pmullw
jb
test
sti
jg
outs
test
sub
add
dec
cli
ins
mov
cmp
call
sbb
mov
cld
retf
je
cdq
xchg
cld
shl
xchg
sub
(bad)
clc
xor
xor
xchg
mov
pop
jne
repnz
cmc
fist
mov
cdq
data16
in
xor
int3
fist
fwait
add
push
out
(bad)
jmp
adc
add
jne
and
xchg
adc
sbb
cmp
add
xor
call
clc
jns
inc
xchg
sbb
in
mov
out
inc
test
arpl
jb
inc
(bad)
loop
inc
mov
push
mov
mov
cmps
ins
xor
jg
pop
stos
xor
lea
add
or
or
mov
shrd
sub
cmp
jge
mov
mov
hlt
cmps
mov
jle
out
out
mov
push
movs
pop
and
sbb
enter
xchg
or
xchg
jge
cmps
inc
mov
and
mov
lods
ja
mov
pop
lahf
push
mov
imul
sbb
push
dec
or
lods
scas
sub
repnz
fimul
test
push
mov
sbb
xchg
inc
outs
cwde
dec
add
movs
adc
out
mov
inc
aas
sub
stos
push
add
inc
jbe
icebp
mov
aas
cs
push
cmp
jmp
stc
dec
mov
pop
jecxz
add
inc
dec
gs
jle
xchg
inc
cmp
scas
pop
xchg
cs
movs
jns
xlat
jl
or
fwait
retf
fidivr
dec
jmp
adc
rol
dec
xchg
dec
popf
fld
mov
fcomip
pop
scas
aad
inc
xchg
mov
sub
daa
dec
inc
xchg
cmc
das
push
mov
scas
cld
jle
int
repz
add
cli
cmp
jge
or
int3
(bad)
jmp
loop
stc
push
or
scas
add
sbb
or
xchg
dec
inc
inc
dec
lods
mov
in
outs
icebp
push
mov
fidivr
dec
mov
lds
jno
jo
and
add
rol
inc
pop
jmp
sbb
(bad)
and
cmp
pushf
lods
jle
pop
adc
mov
jp
pop
dec
sahf
mov
call
inc
sar
xchg
stc
pop
popf
cmps
cdq
hlt
xchg
in
dec
sbb
mov
sbb
movs
pop
or
jmp
push
dec
aas
sahf
jg
mov
movs
pop
in
mov
mov
test
fcom
jo
into
sub
jbe
iret
out
push
jge
mov
push
fst
xor
sar
inc
add
push
repnz
fs
subps
fdivrp
jno
rcr
mov
das
fwait
loop
das
outs
movs
mov
and
push
mov
xor
repnz
push
lds
add
leave
enter
jbe
inc
pop
dec
lods
pop
pop
mov
fadd
add
pop
sub
mov
daa
jg
dec
mov
je
jge
push
dec
ins
and
xor
shr
sub
add
push
adc
xor
mov
lods
pop
add
(bad)
data16
fld
jle
cmp
xlat
retf
shr
fistp
call
popa
add
push
data16
sar
xchg
dec
cmps
xor
pushf
xchg
mov
push
in
push
add
cld
arpl
add
xor
xchg
mov
jge
xchg
mov
mov
das
scas
sbb
iret
daa
xchg
js
push
imul
ret
xor
add
dec
icebp
shr
pop
push
in
shl
jbe
dec
jae
sub
push
xor
mov
push
mov
jl
inc
adc
inc
push
push
stc
(bad)
jecxz
cmp
lds
pop
dec
inc
jge
int
mov
add
daa
push
sub
fcomip
push
out
mov
(bad)
mov
and
imul
dec
(bad)
call
scas
mov
and
dec
mov
sub
or
shl
fwait
dec
es
xor
in
xor
test
test
dec
pop
pop
into
fs
sahf
jp
jo
jmp
adc
mov
imul
cmp
loope
fiadd
and
inc
ficomp
push
loope
cmp
fdivr
out
ja
mov
sub
(bad)
leave
push
jl
fcom
(bad)
cmps
mov
ja
shr
xor
nop
inc
mov
out
sub
mov
lods
sbb
mov
xchg
out
and
mov
sbb
cmc
enter
xchg
sbb
sub
mov
fwait
shr
imul
or
mov
gs
shr
and
cmp
(bad)
mov
and
int3
add
stos
in
mov
aam
dec
cmps
sbb
ror
adc
pop
imul
aam
mov
data16
in
cwde
mov
sbb
pusha
sub
out
gs
or
pushf
mov
push
mov
adc
mov
data16
imul
pop
ss
inc
mov
or
xchg
out
inc
ss
(bad)
push
xor
xchg
cwde
sub
imul
hlt
sti
nop
repz
lds
cmp
push
add
femms
cmp
dec
xor
ficom
jno
nop
xlat
les
jecxz
scas
icebp
sar
aas
fwait
sbb
les
adc
mov
xchg
or
les
jmp
jmp
popf
push
xchg
sub
and
or
retf
xor
add
xchg
arpl
mov
bswap
mov
les
inc
push
xchg
icebp
jne
jecxz
int3
add
in
dec
mov
pop
push
push
jb
pop
mov
xchg
js
and
or
jae
rol
mov
mov
popa
jmp
add
jns
sub
push
mov
dec
loope
out
das
dec
nop
sub
mov
mov
dec
(bad)
enter
pop
mov
test
inc
mov
mov
test
mov
popa
mov
lds
retf
ror
inc
popa
iret
xor
cmp
jge
sar
pop
adc
mov
jns
add
dec
and
dec
scas
sar
inc
in
sbb
mov
sub
out
cwde
js
adc
fisttp
push
push
mov
jb
jmp
or
leave
pop
(bad)
mov
cmp
cmp
sbb
mov
dec
push
movs
dec
ja
es
mov
sbb
dec
or
sub
mov
add
sbb
jae
push
mov
inc
in
push
or
xor
(bad)
mov
mov
mov
jecxz
xchg
dec
jae
mov
lea
dec
xor
add
mov
push
adc
sbb
mov
nop
in
nop
mov
daa
sub
mov
mov
leave
movs
call
mov
or
loopne
into
cmp
stos
pop
sbb
std
(bad)
xchg
ins
dec
dec
push
push
or
int
ins
dec
ret
imul
aas
ret
adc
sbb
movs
cmps
inc
xor
or
xchg
mov
dec
outs
aad
pop
cmp
push
test
xchg
mov
repz
sbb
aas
(bad)
(bad)
mov
mov
sub
pop
ins
and
sub
cmc
or
stc
pop
shl
adc
mov
push
ss
inc
xor
aad
scas
pop
(bad)
(bad)
cmps
mov
enter
cli
add
sbb
push
std
push
cmc
xchg
xlat
scas
clc
shl
jmp
div
stos
in
or
je
outs
cmp
inc
out
mov
out
jbe
sahf
enter
mov
test
sbb
lds
xlat
loop
and
popf
test
xchg
push
cmp
pop
rol
push
call
xchg
popf
sub
mov
cdq
jecxz
(bad)
and
sbb
fidiv
fmul
mov
dec
dec
retf
js
cmc
mov
shl
mov
repz
xor
mov
mov
pop
inc
(bad)
and
scas
in
push
xchg
jbe
inc
pushf
jbe
dec
(bad)
aaa
jne
mov
mov
jb
pop
data16
xor
stc
jb
adc
pop
sbb
js
push
ss
ins
mov
jmp
idiv
jae
push
and
mov
jne
aad
sub
sub
shl
fisubr
in
pop
and
retf
cwde
cli
mov
outs
pop
mov
and
or
std
nop
clc
sub
outs
jp
and
mov
sbb
dec
ja
movs
xchg
xlat
fisubr
fs
mov
sbb
out
adc
mov
push
and
mov
pop
jmp
jbe
push
loopne
mov
mov
test
dec
sub
add
ins
jae
mov
xlat
sub
push
fidiv
test
cld
loop
and
jge
sbb
outs
popf
je
xchg
maskmovq
neg
add
test
pop
jne
inc
dec
out
sub
push
mov
mov
jge
mov
ret
lahf
mov
sbb
ds
mov
xchg
test
adc
pop
sbb
div
stos
jbe
or
in
idiv
push
jmp
cmps
pop
leave
jecxz
jge
icebp
repnz
mov
cdq
push
xor
call
dec
std
add
jbe
pop
in
bound
mov
aad
shl
xor
xlat
imul
jbe
push
mov
and
inc
movs
sahf
xchg
adc
push
push
push
test
or
outs
xor
jno
or
sub
dec
xchg
mov
jb
inc
push
fidiv
mov
sub
(bad)
shl
jne
ins
mov
push
pop
adc
out
and
push
jmp
jo
push
retf
rcr
sbb
cli
mov
ficomp
push
mov
mov
lods
mov
lahf
das
aaa
sub
add
lds
mov
or
cmc
push
ret
push
sbb
fbld
nop
push
jno
mov
pop
xor
push
(bad)
cmps
repz
jae
std
mov
jbe
add
sub
je
fmul
aam
mov
mov
xchg
pop
inc
pop
jecxz
cmp
popa
add
dec
adc
test
sbb
lods
push
mov
sub
mov
lahf
inc
sub
push
sahf
cmp
xor
pusha
(bad)
out
xor
mov
ins
movs
dec
and
cmp
adc
in
sti
sbb
pop
sbb
push
push
test
adc
pop
loopne
push
movs
sbb
lds
pop
pop
mov
mov
push
cs
mov
add
in
aaa
test
push
mov
push
clc
adc
fucomi
fmul
jo
in
ins
das
inc
leave
sti
and
mov
cmps
int
inc
jle
pop
pop
and
and
mov
jns
jmp
push
sub
leave
aas
add
pop
frstor
fwait
pop
mov
mov
sbb
fmul
in
add
mov
push
jne
retf
js
ror
xor
sbb
pop
les
shl
xchg
pop
ds
lahf
ins
mov
push
mov
sbb
loope
(bad)
and
stos
test
add
add
pop
xor
jg
dec
les
call
xchg
loope
push
mov
inc
hlt
push
outs
adc
sbb
dec
mov
xchg
rcl
fld
and
cmp
jae
mov
outs
aam
cmp
stos
and
into
dec
push
stos
shl
push
add
shl
xchg
in
retf
imul
cmp
retf
sbb
into
add
loopne
and
ss
jb
retf
scas
test
mov
pop
cmp
fnsave
mov
or
inc
out
(bad)
retf
das
xor
inc
es
iret
sub
lds
dec
dec
fsubr
fwait
jb
sub
xlat
out
mov
pusha
mov
jmp
pop
or
mov
xchg
repz
retf
jno
shl
movs
repz
lds
sub
fwait
jno
jge
add
in
mov
out
jmp
sbb
ret
jg
mov
mov
add
cmp
ficomp
inc
lahf
inc
sub
or
pop
mov
xchg
sbb
test
inc
ins
test
mov
shl
rcl
cmp
xor
movs
inc
repz
cmp
ds
sub
aad
test
test
iret
(bad)
and
ret
(bad)
inc
(bad)
jmp
push
aad
mov
loope
int3
jg
iret
jmp
scas
stos
gs
mov
mov
outs
push
ss
xchg
sub
cmps
or
js
in
aas
sub
cli
mov
add
add
cli
push
rol
cld
adc
adc
scas
cmp
jmp
pop
dec
lea
std
mov
inc
push
cdq
xchg
push
mov
adc
push
sbb
jp
iret
packuswb
dec
stos
in
xor
inc
fstp
fwait
sbb
mov
and
dec
jmp
repz
jns
jb
cmp
pop
add
(bad)
neg
pop
loop
or
sub
daa
mov
ins
retf
add
mov
in
in
xlat
adc
fcomp
sub
sti
and
cmp
sub
out
dec
ret
hlt
push
mov
and
jne
xor
lods
xor
outs
retf
arpl
mov
ins
out
jbe
adc
cmps
into
mov
leave
arpl
ins
stc
add
dec
pop
sbb
and
push
sahf
inc
data16
lahf
push
cmp
arpl
xor
sub
add
pop
sub
data16
xchg
xor
xchg
fcomp
adc
iret
inc
mov
mov
bound
cdq
xor
movs
repnz
cs
dec
aad
gs
cdq
shl
push
mov
cmc
int
scas
pop
es
scas
add
mov
test
mov
(bad)
std
test
ja
add
int3
mov
jle
pop
fxch
or
or
call
sbb
(bad)
sbb
or
adc
add
pop
dec
mov
pop
jl
test
and
out
test
ficomp
push
xor
icebp
inc
(bad)
fnsave
popf
push
ins
mov
cmp
shl
inc
jb
dec
push
shl
leave
add
mov
lahf
mov
test
retf
pop
push
(bad)
(bad)
inc
pop
rcr
xlat
cmp
mov
clc
push
fimul
dec
pusha
mov
xor
(bad)
pop
mov
nop
mov
in
inc
dec
and
imul
loopne
xchg
push
rol
imul
adc
test
fidiv
retf
xchg
jne
and
cld
gs
push
cmps
mov
jb
shl
fstp
gs
lods
dec
or
dec
int
shr
sub
(bad)
or
fdivp
sar
rcl
xchg
ins
cmps
pusha
push
daa
and
fcmovnu
out
jle
retf
scas
mov
add
sbb
ins
les
js
mov
mov
stc
inc
call
lahf
and
jg
cmps
mov
in
push
sbb
les
pusha
sub
stc
test
xchg
push
xchg
repnz
aad
shl
add
(bad)
test
cs
sub
push
out
dec
pusha
enter
mov
mov
mov
div
das
push
mov
addr16
icebp
sbb
rcl
movs
loopne
inc
movs
cwde
inc
xrelease
out
jbe
scas
fist
push
sub
les
test
(bad)
cmps
adc
loop
(bad)
inc
xor
mov
rol
movs
sub
adc
hlt
mov
xlat
jmp
stos
mov
jnp
push
sub
fsub
(bad)
(bad)
and
lods
mov
dec
int3
rol
adc
(bad)
aaa
pop
cmp
mov
sub
adc
dec
mov
cwde
les
sbb
fcom
jle
pop
(bad)
xor
(bad)
mov
clc
adc
test
cmp
ficomp
pop
xchg
aaa
dec
cmp
retf
movs
pop
jbe
jns
out
mov
mov
das
push
push
push
push
ja
mov
jo
imul
push
adc
dec
or
out
xor
repnz
pop
mov
retf
rol
popf
adc
cs
in
into
arpl
lock
mov
pop
xor
imul
jae
in
xor
sub
sub
sar
jmp
adc
mov
dec
xchg
fidiv
fist
sub
int3
dec
push
add
push
push
mov
sub
ds
jge
pop
push
add
fnstenv
jecxz
pop
xor
mov
ss
test
or
pop
outs
pushf
repz
sub
or
cld
call
push
ret
jmp
jmp
(bad)
xor
lods
inc
push
sbb
sbb
cmp
je
loopne
pop
out
inc
mov
in
cmp
xor
mov
mov
adc
ins
mov
add
inc
mov
adc
add
jns
movs
sub
sbb
or
mov
es
push
daa
dec
ss
sbb
leave
into
sbb
mov
push
iret
pop
mov
lods
mov
call
cmp
sar
push
mov
and
or
push
cdq
inc
cmp
and
in
pop
xchg
mov
dec
and
test
or
ds
pop
in
es
sti
sbb
pop
fstp
lea
push
into
mov
jmp
jl
retf
fidiv
pop
dec
adc
xor
repnz
push
movs
sub
and
mov
pop
mov
loopne
call
sbb
dec
pop
fld
xor
cmp
fwait
lods
pusha
pop
mov
jmp
jae
cmp
adc
and
aas
ins
xchg
out
adc
dec
repz
lock
and
gs
pop
(bad)
sbb
popa
ret
fdivr
adc
stc
sub
clc
(bad)
cs
rcr
fwait
js
out
cwde
pop
inc
dec
fisub
fnsave
push
push
aaa
push
add
pop
aaa
push
idiv
inc
stos
ss
stc
inc
into
push
jbe
fwait
push
sbb
sub
push
repz
or
mov
pop
ja
mov
xchg
mov
test
sbb
push
das
out
jp
mov
jns
aad
or
call
mov
jne
inc
inc
mov
and
hlt
add
add
cmp
push
rol
test
leave
movs
into
adc
pushf
cdq
mov
shl
das
call
mov
sbb
add
push
je
mov
push
push
dec
(bad)
fsubr
push
lods
xchg
mov
sbb
lds
or
cld
xor
jne
jo
sub
je
cmp
daa
inc
push
in
pushf
add
sbb
xchg
push
sti
iret
stos
cmp
sbb
in
dec
mov
dec
mov
cmp
retf
jmp
mov
movs
(bad)
fistp
ficom
data16
push
jno
jl
xchg
mov
push
sahf
frstor
xchg
mov
add
and
scas
jp
std
push
arpl
mov
sub
push
std
js
and
mov
jmp
pop
ins
xor
loope
and
cmps
ret
enter
xor
lds
cld
and
jne
hlt
test
fmul
cwde
(bad)
outs
fnstenv
mov
xor
mov
pop
not
std
or
dec
jne
rcr
pop
lds
leave
aas
mov
bound
retf
and
xchg
sbb
je
cdq
ret
pop
jnp
jp
add
jbe
lahf
push
or
cmp
mov
enter
xchg
xchg
imul
mov
push
cmp
fldenv
rcr
ins
add
cmp
fsubr
lds
sbb
pusha
adc
or
mov
jl
mov
(bad)
jne
pop
(bad)
aas
fwait
push
or
and
dec
push
movs
mov
adc
sub
arpl
fsub
loop
inc
mov
jp
stos
add
(bad)
cs
dec
dec
xor
sub
les
addr16
inc
or
dec
in
push
lock
lds
ret
xchg
stos
jnp
sbb
mov
stos
gs
pop
cdq
inc
xchg
push
je
jl
mov
jge
and
jb
pop
sub
push
mov
sbb
(bad)
mov
(bad)
pshufw
stos
mov
stos
or
popf
lods
add
into
enter
cwde
in
mov
pop
cwde
shr
into
dec
push
ffree
mov
aas
push
and
fcomp
iret
mov
or
add
mov
icebp
jmp
sbb
mov
push
add
(bad)
loope
cwde
aaa
inc
imul
stos
mov
fadd
icebp
jo
jl
pushf
je
sbb
jbe
push
jbe
lods
sbb
xor
nop
sbb
mov
jge
cdq
aad
je
xor
mov
call
test
cmp
loope
push
sbb
mov
jmp
xchg
ins
inc
jbe
adc
daa
das
stos
mov
cmp
loopne
sub
adc
mov
add
jbe
pusha
push
xchg
lds
mov
aaa
sbb
cwde
push
fucomp
add
xor
popa
rcl
retf
add
push
in
cld
leave
mov
enter
(bad)
or
sub
repnz
jnp
dec
adc
es
rcr
jle
cmp
jle
sti
cmp
call
lods
fst
ret
repnz
pusha
(bad)
xlat
jae
sahf
or
test
nop
lods
stos
xchg
imul
mov
adc
jmp
lahf
fld
mov
push
call
add
das
mov
cmp
push
push
(bad)
stos
mov
iret
leave
jnp
push
out
cmp
inc
push
add
lahf
int
xchg
cmp
js
rcl
inc
jno
retf
add
jno
in
xchg
jl
scas
cs
cmp
jl
cmps
push
adc
dec
es
xchg
clc
repz
in
mov
pop
mov
je
xchg
fst
dec
mov
mov
or
inc
push
dec
mov
xchg
imul
sub
push
xchg
aaa
jmp
int3
in
jl
out
daa
pop
clc
adc
test
or
xchg
test
or
loopne
inc
popf
sub
es
inc
(bad)
cdq
push
loop
retf
or
ret
out
jo
xor
adc
dec
aaa
call
(bad)
in
push
sbb
test
repnz
push
fsubr
shr
mov
cmp
sahf
lds
cmp
call
sub
add
out
cli
ins
push
xchg
mov
popa
ds
cmp
inc
jg
adc
es
out
sar
adc
push
pop
push
push
cmp
fiadd
inc
inc
or
or
(bad)
fwait
xlat
jmp
push
outs
jae
mov
xchg
mov
ds
fidiv
xchg
adc
cmps
stc
pop
(bad)
cld
test
pop
mov
xchg
pushf
aas
es
call
ret
dec
mov
in
fwait
jmp
mov
lds
mov
(bad)
and
pusha
(bad)
inc
out
pop
leave
adc
in
fdivr
xor
add
push
jne
aad
je
and
out
jmp
push
(bad)
mov
sbb
cmps
in
hlt
inc
push
cmp
xchg
pop
jnp
movs
bound
outs
push
mov
das
sbb
mov
cmps
repnz
or
xlat
cmp
add
pop
inc
std
jno
(bad)
lods
inc
and
lods
test
xchg
jmp
adc
push
das
jae
inc
xor
dec
mov
mov
adc
mov
out
nop
jle
push
loope
pusha
dec
mov
movs
leave
jecxz
sub
xor
dec
iret
iret
xchg
and
retf
mov
xchg
sbb
adc
pop
xor
shl
adc
dec
inc
movs
inc
or
mov
jl
out
pop
push
inc
or
je
fistp
jns
test
dec
mov
inc
pop
das
jae
test
ins
ret
jmp
dec
jno
loope
sbb
adc
pop
xchg
popa
jnp
repnz
mov
in
inc
int
movs
xor
mov
jl
mov
ret
ds
aaa
iret
fsubr
mov
ret
or
ret
data16
xchg
ins
adc
repz
sbb
xor
(bad)
ffree
cdq
mov
push
fwait
sbb
mov
jae
imul
or
outs
sub
outs
dec
xlat
je
pop
ja
mov
loopne
jle
div
and
sbb
add
fsub
cmp
gs
ins
imul
mov
jnp
fld
jne
push
cmp
add
and
fidiv
jb
int
hlt
adc
dec
popf
inc
mov
sahf
push
popa
cs
xchg
sbb
add
pop
adc
ja
pop
mov
xchg
loopne
jecxz
std
(bad)
in
loop
xlat
pusha
sub
int3
(bad)
iret
ins
inc
in
add
aad
out
fcomp
cmp
fcom
pop
sub
out
mov
call
xchg
out
lahf
push
cs
inc
mov
stc
in
mov
and
fstp
ret
pop
xlat
scas
in
call
call
inc
add
inc
pop
out
cmp
adc
sub
cwde
add
stc
lds
mov
mov
inc
(bad)
pusha
arpl
out
movs
cmp
hlt
aas
add
push
movups
cmp
fwait
outs
cs
into
mov
hlt
mov
out
cli
aad
dec
movs
mov
push
out
and
lahf
retf
lock
add
mov
fiadd
push
pop
dec
jmp
inc
and
out
adc
lds
and
jne
jmp
sbb
pop
lea
js
std
movs
push
dec
(bad)
mov
fistp
movs
ins
adc
mov
(bad)
or
test
cmps
rcr
cmp
into
repnz
dec
inc
push
adc
inc
dec
mov
fbld
or
or
push
push
clc
add
mov
(bad)
sub
shl
fwait
ja
mov
xchg
push
in
adc
xor
mov
push
add
dec
and
test
mov
gs
pop
inc
scas
mov
(bad)
movs
dec
lahf
and
ss
inc
imul
stos
mov
cmps
and
push
adc
cmp
add
pop
fsubr
sub
or
movs
sar
mov
test
ror
dec
lods
scas
lahf
add
scas
sub
in
aas
adc
outs
xchg
push
sub
data16
mov
jae
push
sub
iret
jns
mov
imul
inc
jg
dec
jecxz
lock
retf
dec
jg
adc
or
nop
adc
xchg
mov
inc
sbb
repnz
fdivr
mov
cmp
in
adc
jb
add
not
mov
mov
mov
loop
sbb
jle
outs
xor
fst
inc
mov
mov
jg
jmp
retf
cmp
cdq
mov
mov
fst
leave
cmp
cmp
push
push
push
in
iret
mov
push
call
lea
mov
scas
adc
mov
in
dec
or
mov
mov
cld
daa
shr
sar
pushf
jnp
xor
mov
stc
out
sbb
sbb
je
sub
fisubr
add
data16
xor
loopne
cmp
mov
add
lods
out
sbb
std
dec
int
div
jmp
sbb
imul
adc
or
out
call
push
es
xchg
mov
push
aaa
mov
mov
pop
xor
fs
inc
mov
adc
add
jmp
or
xlat
out
and
or
xchg
ds
mov
mov
inc
je
and
jle
rcr
sub
pop
out
scas
sbb
out
das
xlat
fst
stos
push
pop
mov
jae
test
xlat
imul
push
je
sub
jge
pop
dec
adc
test
stc
dec
(bad)
in
shl
mov
adc
pop
mov
add
push
inc
clc
push
mov
inc
jmp
jmp
mov
out
mov
xchg
out
sbb
in
mov
dec
enter
or
stos
in
outs
je
xchg
ja
in
jmp
js
add
sub
inc
js
into
xlat
popf
ret
int
loopne
sub
fisubr
inc
jge
add
lahf
xchg
dec
scas
outs
pop
or
mov
lods
jnp
jo
pop
mov
pop
(bad)
mov
test
mov
in
dec
loop
mov
or
ins
pushf
inc
out
std
mov
out
pop
scas
cwde
cs
jecxz
and
clc
sub
push
xlat
mov
mov
movs
in
bound
mov
inc
in
add
fstp
shr
mov
xchg
or
movs
je
icebp
and
inc
xchg
pop
pop
fst
sbb
pusha
sti
hlt
dec
jecxz
pop
lods
xchg
xchg
int
xor
mov
cmps
add
and
and
push
std
aad
pushf
cld
sbb
comiss
aaa
cdq
sub
ret
sbb
sbb
rol
sub
and
bound
sub
pop
rol
xchg
inc
std
stc
xchg
aaa
pop
add
jae
dec
mov
aas
or
outs
inc
into
pushf
add
retf
jp
xchg
xor
jbe
rol
pusha
or
mov
jl
add
or
push
xchg
adc
sti
aas
mov
nop
(bad)
mov
xor
inc
push
mov
js
fimul
retf
mov
jmp
pop
xor
mov
push
sbb
stos
or
std
xchg
cmp
and
mov
push
mov
inc
cmp
mov
les
mov
push
fnstsw
pop
daa
imul
inc
adc
stos
push
jecxz
test
jb
mov
sub
cmps
add
sbb
inc
push
inc
mov
jecxz
pop
and
les
int
ins
(bad)
aad
hlt
int
fsub
push
ja
in
ret
cld
out
rol
adc
sub
inc
popa
mov
or
push
and
cmc
pop
ins
pop
push
test
cmp
add
das
inc
jge
ins
xor
in
sub
lea
not
cwde
xchg
iret
test
aaa
jge
add
fs
repz
xchg
push
add
mov
xor
cdq
retf
fadd
scas
push
gs
push
rcr
push
or
sbb
cdq
cmps
add
out
add
int3
adc
dec
test
jge
shl
pop
cmp
imul
ret
mov
lods
and
and
jge
fcomp
pop
cmc
pop
lods
(bad)
or
sub
fnstcw
(bad)
(bad)
or
add
(bad)
pop
dec
es
ins
test
jl
sub
sub
inc
cmc
test
lds
hlt
xlat
xchg
mov
fistp
jmp
mov
aad
lods
mov
in
sub
sub
pop
sahf
mov
(bad)
stc
std
jle
mov
das
cdq
call
outs
imul
pop
hlt
xor
jmp
int
loopne
sbb
pop
dec
xor
inc
mov
das
lds
and
or
arpl
outs
or
and
inc
xor
pop
shr
push
ret
sar
and
fs
cmps
fnstsw
das
or
ins
jno
xor
retf
repnz
push
xchg
mov
idiv
push
add
mov
cmp
add
mov
or
inc
iret
cdq
mov
stos
enter
xchg
push
movs
stc
mul
add
cmps
cmc
ret
pop
jbe
aad
jl
push
bound
lea
add
jmp
stos
aam
call
push
add
mov
xor
aas
push
pop
ja
cmc
add
loope
(bad)
adc
sub
jg
and
ret
push
or
imul
sar
cwde
inc
fsubr
fwait
xor
xor
pop
xor
mov
push
cmp
bound
dec
aam
test
mov
push
and
add
(bad)
sbb
sbb
mov
sbb
push
mov
jo
jnp
jo
nop
test
pop
mov
int3
movs
nop
fld
mov
cmp
xor
xor
ss
pop
cli
div
out
jmp
fmulp
or
lock
xchg
mov
(bad)
retf
xor
ds
xchg
in
add
mov
(bad)
xor
inc
mov
xor
icebp
and
cmp
std
pop
into
icebp
scas
add
ficomp
ins
loope
test
test
test
adc
in
sahf
or
pop
sbb
inc
inc
aad
xor
mov
outs
sbb
xor
push
dec
stos
inc
dec
push
xor
(bad)
fsubr
in
push
fs
scas
stc
adc
mov
mov
dec
adc
aas
fldcw
mov
xlat
pop
sub
mov
(bad)
adc
mov
push
inc
xchg
ins
cmp
mov
pop
mov
(bad)
je
aad
out
sbb
jmp
repz
in
(bad)
mov
loop
push
sti
fsubr
ss
sbb
cmp
dec
scas
aam
sub
or
mov
das
push
sub
lahf
cmp
test
cli
xlat
xchg
daa
and
or
dec
dec
gs
jge
dec
rcl
nop
mov
pop
ret
rcl
mov
push
jecxz
inc
inc
xchg
lahf
sub
add
jo
dec
or
pop
das
int
call
mov
sbb
fs
sbb
fwait
push
jecxz
dec
sti
push
jmp
sub
mov
or
scas
pop
(bad)
ss
(bad)
loop
xchg
sub
fldenv
xor
mov
ja
in
sbb
loop
enter
aaa
jecxz
adc
add
xchg
mov
ret
dec
jl
mov
mov
xlat
pop
add
fld
mov
adc
lods
neg
retf
add
xor
cli
push
jo
ins
ins
in
cmps
shl
xor
or
sub
push
xchg
pop
imul
lahf
(bad)
ds
aam
mov
in
mov
push
jno
ds
or
or
lock
add
jmp
shl
aad
popf
ss
xor
push
jno
cs
push
or
xchg
or
adc
inc
test
mov
pop
out
lods
xor
movs
leave
int3
lds
pop
or
dec
xchg
loopne
fs
mov
test
jmp
cmp
jo
out
push
jl
xlat
push
xchg
inc
pop
jmp
mov
sahf
pushf
shr
(bad)
aam
or
push
imul
jge
mov
or
xchg
cmp
sbb
cmc
sub
scas
leave
add
xchg
ins
dec
movs
mov
jg
mov
xor
push
jns
push
push
dec
outs
mov
cwde
add
fsubr
pusha
sar
mov
cli
mov
jbe
add
cmp
mov
aam
cmc
mov
scas
ja
jmp
sahf
xor
jae
mov
and
mov
imul
cld
das
(bad)
aam
in
shl
pop
cmps
iret
mov
je
jmp
test
daa
dec
aas
movs
out
or
repz
leave
cmp
stos
lea
mov
mov
das
fs
push
jae
jno
cmp
dec
(bad)
push
and
shl
xchg
xor
dec
mov
in
pusha
in
cmp
xchg
inc
sub
sub
mov
stos
sbb
cmp
shl
aad
retf
js
fst
fistp
shl
pop
xchg
xlat
fcomp
aam
mov
in
stc
iret
bt
out
imul
daa
test
int3
add
iret
lock
mov
repz
je
xor
aaa
mov
pop
xor
xchg
inc
cmp
js
pop
fs
inc
test
sub
sub
out
inc
out
mov
adc
mov
fldl2e
push
jge
in
jp
xchg
mov
push
rcl
add
push
xor
sbb
or
inc
gs
push
mov
hlt
xor
fisubr
pushf
cmp
in
mov
test
jnp
and
clc
mov
mov
int
add
shl
mov
aad
jecxz
push
into
sub
stos
imul
retf
cmp
in
xor
pushf
add
das
fisubr
stos
adc
push
sbb
rol
in
shl
sub
jecxz
xchg
daa
(bad)
jp
stos
sub
push
xchg
(bad)
test
pop
or
or
mov
and
mov
pop
stos
(bad)
and
dec
sub
inc
dec
lods
rcl
xchg
repnz
sbb
cmp
fcomp
dec
sti
cs
mov
shl
sub
retf
retf
rcl
cmp
xchg
sbb
aad
xchg
mov
jns
xchg
jno
cli
in
sbb
jge
repnz
and
int
xchg
sbb
in
cld
or
jnp
xor
pop
ret
hlt
mov
imul
je
clc
mov
(bad)
ret
mov
arpl
inc
adc
add
in
pop
xor
push
adc
add
mov
jg
shr
xchg
sar
sbb
xor
xor
lods
aaa
pop
pop
fdivr
int3
xchg
dec
or
loop
xchg
mov
xchg
aas
add
bswap
sar
movs
out
lock
jge
cli
jmp
fadd
je
shl
xor
xchg
mov
inc
cdq
xor
ret
push
test
mov
(bad)
jle
call
fwait
dec
popa
xchg
mov
adc
dec
icebp
out
mov
sbb
pop
and
xchg
das
xor
(bad)
(bad)
cli
fdiv
out
cmp
adc
les
js
(bad)
outs
dec
fistp
jle
push
ret
in
push
add
xlat
test
mov
jne
dec
push
fwait
dec
adc
fild
pop
mov
cmp
or
outs
inc
jp
and
mov
in
sbb
ret
jmp
jnp
xor
icebp
xchg
jmp
sbb
xor
dec
cmps
test
xchg
adc
int
mov
push
cmp
sti
add
dec
loop
(bad)
jge
test
ja
mov
push
imul
add
push
mov
ja
fsubr
retf
mov
mov
mov
or
mov
stos
hlt
mov
and
popa
jnp
mov
(bad)
pop
data16
es
shl
fcom
push
add
lock
mov
rcr
mov
cmps
push
mov
jle
and
icebp
jmp
popa
xor
pop
xor
jb
adc
ret
out
sub
inc
call
(bad)
adc
sub
jecxz
dec
arpl
sub
and
lds
loopne
fs
dec
test
pop
pop
mov
mov
jmp
pop
scas
out
aaa
setbe
hlt
jns
sar
out
add
aas
cmps
lods
lock
inc
push
fld
iret
dec
int3
pop
push
ja
call
into
out
fcom
popf
sbb
pop
push
dec
fld
movs
cmps
shr
or
jle
inc
pop
mov
ss
inc
outs
popa
int3
das
hlt
int
mov
test
adc
lock
aad
cwde
push
dec
dec
leave
add
cmc
mov
stos
rcr
mov
and
dec
ds
xchg
pop
push
mov
adc
sub
outs
popf
imul
add
push
sub
jbe
pusha
(bad)
mov
jne
rcr
outs
push
mov
adc
jecxz
int3
addr16
pop
xor
arpl
and
daa
pop
test
mov
test
jge
or
mov
outs
inc
jae
es
mov
es
push
adc
pop
mov
jle
jbe
pushf
jns
inc
mov
cmp
pmulhuw
push
call
pop
dec
add
add
test
jl
lods
outs
cmp
das
in
mov
sub
push
stos
outs
xor
mov
sahf
cwde
(bad)
cmp
dec
addr16
or
cmp
rcr
js
adc
test
(bad)
mov
ret
call
(bad)
nop
(bad)
retf
xchg
cmps
pop
scas
xchg
mov
inc
adc
mov
test
imul
xchg
sti
dec
inc
jmp
mov
mov
das
jp
inc
js
ja
dec
ins
sbb
pop
mov
pop
fdivrp
cmp
test
inc
sub
push
aas
sbb
loopne
sar
pop
xor
stc
dec
loopne
cmp
adc
retf
mov
adc
ss
leave
cs
test
push
nop
lahf
ss
in
mov
xchg
cmp
or
stos
xlat
ficomp
lods
das
pop
adc
test
scas
out
fbstp
fwait
pop
mov
push
mov
dec
mov
and
or
dec
adc
ss
dec
fdiv
sti
mov
cwde
adc
push
inc
mov
sbb
push
inc
(bad)
ds
add
movs
inc
push
in
pop
test
or
int3
lock
inc
ja
fsub
imul
nop
fild
push
data16
(bad)
sbb
pop
jae
xchg
rol
mov
and
cmc
pop
push
fucomip
jnp
inc
pop
or
out
retf
cld
jno
ds
xor
cmp
hlt
jp
dec
loopne
add
sbb
in
fsubr
and
sub
scas
or
xor
cmp
call
cmp
jmp
fld
dec
retf
xchg
xlat
(bad)
fbstp
fsub
int3
or
ror
clc
rol
jp
jle
inc
outs
fxch
add
mov
sbb
mov
cld
cmps
sub
mov
inc
jnp
ja
test
or
std
adc
jmp
push
(bad)
stc
jp
sub
add
mov
into
sbb
inc
adc
push
push
sahf
xchg
ds
sbb
xlat
loope
inc
scas
sub
sbb
loope
dec
sub
and
or
arpl
pop
rcr
cwde
mov
and
cdq
cs
pop
dec
and
inc
ret
rcl
mov
(bad)
icebp
xchg
stc
jno
xchg
inc
sbb
xchg
mov
push
fwait
lods
xchg
(bad)
push
mov
mov
push
push
div
push
adc
and
xchg
in
and
and
outs
sub
jmp
lds
adc
xor
or
fs
movs
ja
cmp
xor
scas
inc
test
adc
popa
lahf
adc
add
adc
cs
pop
add
xchg
pop
inc
pop
js
repnz
enter
pop
(bad)
mov
in
push
inc
ds
cmp
or
dec
pop
loopne
jp
scas
shl
mov
std
xor
cmps
mov
mov
(bad)
sub
es
mov
mov
add
inc
das
jge
cli
in
inc
cmp
inc
or
rcl
xchg
arpl
sbb
and
rol
xor
sub
sub
shr
cmp
pop
arpl
jmp
pop
jae
jmp
jmp
pop
cmp
jno
imul
lods
aam
nop
fmul
jae
jne
enter
jb
mov
push
aaa
inc
in
add
mov
je
adc
repz
or
cmp
fld
dec
sbb
sub
movs
lock
lock
jb
xor
call
scas
mov
rcr
fwait
leave
sub
shl
inc
push
xor
or
es
xchg
pop
sub
je
cmp
xor
inc
std
dec
sbb
xor
pop
add
and
mov
sub
ret
pop
popf
test
leave
in
popf
push
mov
cwde
stc
fcmovnu
cmc
mov
aam
test
jecxz
dec
js
popf
les
call
repnz
repz
push
sar
das
mov
fisttp
repnz
int3
into
ds
(bad)
add
xlat
rol
js
div
xor
jb
jmp
es
ins
jne
nop
jl
xchg
sub
pop
and
(bad)
mov
jb
add
xchg
jne
hlt
fld
add
movs
jnp
xchg
popf
lods
es
cmc
sbb
mov
mov
cdq
xor
es
lea
and
jns
sub
jge
in
xor
rcl
sub
call
shl
aad
inc
mov
out
push
adc
daa
in
or
mov
dec
not
ins
cli
mul
sub
and
outs
push
test
dec
call
pop
cmp
pusha
and
lods
inc
in
mov
push
and
push
neg
fsub
pop
fcomp
sub
xchg
sar
jbe
mov
jmp
inc
gs
ret
mov
cmp
adc
sbb
jnp
inc
mov
les
ret
js
or
pop
movs
shr
cmp
jmp
scas
fdiv
fs
mov
xchg
in
mov
jp
xchg
cdq
push
mov
fcmovnu
dec
cmps
mov
test
dec
retf
ror
retf
add
xchg
inc
clc
jge
mov
sbb
xchg
call
ret
mov
mov
shr
push
stos
cwde
jecxz
in
push
inc
sbb
gs
bound
test
fisttp
test
jg
cmp
xchg
xchg
pop
pop
pop
rcl
mov
mov
sbb
dec
outs
mov
sbb
mov
xchg
retf
xchg
out
mov
sub
lods
stos
sub
add
xchg
lock
in
jno
push
icebp
aad
cwde
fwait
sar
mov
fisttp
push
leave
sub
enter
adc
mov
mov
jno
dec
lea
sub
ret
sbb
dec
jmp
add
or
fistp
mov
pop
das
xor
add
mov
mov
xor
iret
add
popa
cdq
mov
adc
outs
xlat
imul
test
xchg
sub
adc
sub
mov
js
lock
out
push
test
xor
daa
(bad)
das
cwde
lods
cmps
ret
xor
dec
mov
ins
arpl
ds
mov
in
movs
and
in
mov
mov
dec
push
addr16
sar
mov
test
add
or
fst
xchg
pusha
jae
stos
xchg
iret
xchg
bound
out
or
sub
popa
xlat
loope
mov
sbb
or
pop
xor
xchg
mov
stc
dec
dec
imul
pop
add
(bad)
jmp
ja
xor
jmp
mov
cld
(bad)
je
pop
shl
xchg
xor
mov
xchg
arpl
jg
jbe
shl
int3
jg
ja
inc
scas
mov
cmp
outs
popf
push
xor
cmp
test
sbb
cs
adc
retf
mov
fbstp
imul
or
js
retf
cld
mov
mov
dec
ja
sub
jg
or
fild
in
inc
fwait
cdq
(bad)
fnstsw
ret
dec
xor
jbe
cwde
test
cmc
push
or
and
xor
mov
cmp
in
dec
shl
out
dec
mov
xor
jmp
js
mov
push
in
out
mov
jp
or
loopne
imul
out
jl
sub
push
jo
pusha
call
(bad)
out
jle
add
daa
push
add
jmp
fadd
cmp
iret
adc
dec
cmps
into
lods
std
les
jae
xchg
mov
and
es
mov
test
fcom
dec
and
jmp
lods
push
repz
mov
pop
ffreep
and
sbb
mov
cmp
in
(bad)
jne
and
dec
add
scas
lds
mov
xchg
shr
inc
add
add
push
cdq
pop
shl
jl
xor
loope
pop
out
nop
cld
jne
cmp
outs
adc
xchg
sbb
test
cmc
pop
aas
dec
mov
xchg
xchg
adc
xor
nop
pushf
das
sbb
inc
shr
fs
sbb
pop
xchg
ds
adc
std
mov
data16
or
fcmovne
dec
xor
mov
push
outs
lahf
mov
(bad)
leave
out
xor
sbb
dec
sub
das
adc
mov
mov
xor
mov
ret
or
test
mov
mov
dec
imul
pop
inc
add
push
push
gs
cmp
adc
loope
cmp
mov
push
hlt
cdq
pop
mov
popa
test
(bad)
push
mov
push
cwde
pop
mov
(bad)
(bad)
movs
push
sar
dec
cmp
mov
icebp
mov
push
in
sub
icebp
push
cdq
xchg
in
sub
cmp
call
sbb
push
dec
pop
mov
mov
jge
push
repz
mov
push
aaa
dec
or
repnz
mov
add
daa
xchg
cwde
pop
dec
xor
les
mov
call
adc
test
mov
and
or
and
bound
pop
sbb
xlat
pop
xchg
cmp
imul
cdq
sub
cmp
lods
inc
adc
and
jl
or
lods
jno
stos
inc
divps
das
jmp
retf
sbb
fld
ds
push
js
lods
mov
movs
push
rcl
inc
gs
cmp
lods
push
fcomp
push
or
fwait
xbegin
ins
mov
lea
xchg
or
and
stos
sbb
iret
shr
mov
std
push
push
jecxz
or
test
or
jmp
sbb
movs
(bad)
jnp
fwait
outs
mov
xchg
icebp
mov
push
pop
or
test
scas
sub
jmp
enter
in
fwait
enter
leave
cmp
test
push
add
mov
stc
mov
ret
sbb
(bad)
hlt
daa
push
ja
mov
cdq
cmp
mov
in
inc
xor
xchg
ret
and
sar
sar
push
pop
(bad)
fmul
js
and
jns
lock
add
jb
ret
(bad)
es
dec
jns
stc
sub
retf
rol
xchg
push
pusha
pop
cs
mov
adc
sub
(bad)
jecxz
xor
mov
mov
ret
or
mov
cmp
jge
sub
es
scas
les
mov
sub
clc
in
imul
fisub
add
loopne
push
mov
push
push
jge
adc
xor
add
test
xchg
imul
fcomp
jb
(bad)
popa
or
cdq
jg
push
inc
sbb
call
inc
pop
adc
jae
gs
cmp
rcl
add
ds
stc
fdivr
js
xor
fild
out
loopne
dec
push
push
test
xchg
mov
pusha
(bad)
and
ds
cmc
rcl
or
pop
(bad)
leave
mov
sbb
adc
dec
sub
ficom
pop
push
push
(bad)
repz
add
xor
mov
imul
add
test
adc
sar
mul
js
and
jle
cld
pop
stos
adc
xor
mov
jns
repz
les
jmp
repz
dec
inc
loopne
inc
or
mov
pop
add
mov
popa
mov
mov
out
movs
loop
out
and
fisub
sub
jle
inc
in
or
es
repnz
pop
test
mov
call
test
mov
inc
sbb
js
mov
adc
jecxz
sti
mov
ins
xchg
call
jmp
or
sub
push
mov
jb
jbe
sub
or
pop
xor
sbb
in
add
cs
stc
fcomp
mov
mov
sbb
stos
pusha
out
push
fdivr
cmp
sbb
das
inc
ds
hlt
jbe
mov
mov
aaa
jg
clc
mov
mov
add
cs
into
lea
add
fimul
jmp
lods
in
loope
add
inc
stos
mov
xchg
lea
(bad)
jnp
sub
das
jno
mov
into
or
adc
xor
fstp
mov
push
pop
dec
xchg
outs
dec
xchg
pop
jecxz
jge
mov
outs
jl
jae
xlat
mov
sub
in
jmp
jg
pop
ins
js
inc
fst
into
aas
cmp
adc
adc
cmps
add
push
mov
sub
jno
xor
mov
push
adc
xchg
repnz
push
xchg
fisub
fwait
movs
and
pop
sub
or
or
dec
or
adc
inc
daa
outs
fild
dec
aaa
pop
cmp
xchg
pop
sub
and
neg
in
aas
in
mov
mov
in
mov
push
push
push
movs
dec
mov
cdq
(bad)
ss
cmp
int3
mov
pop
jae
clc
lods
sbb
xor
jno
sub
sbb
inc
dec
and
iret
loop
push
jl
jmp
mov
pop
mov
sub
repz
xchg
dec
jmp
push
ins
mov
add
pushf
mov
push
lea
cs
jle
add
gs
push
arpl
movs
pusha
mov
pop
mov
(bad)
jnp
push
sti
mov
xchg
ficomp
mov
mov
and
(bad)
sub
dec
stos
rcr
push
shr
fsub
repz
jecxz
out
test
push
and
dec
push
sub
loop
int
mov
das
mov
sbb
dec
inc
loop
aas
retf
clc
sbb
es
cmps
pop
cmp
mov
in
int
iret
in
movq
ins
cmp
inc
vmread
shr
inc
addr16
pop
push
jmp
outs
sbb
aad
cdq
mov
sub
iret
test
sub
adc
aam
icebp
sbb
push
mov
outs
jae
add
xchg
stos
dec
mov
or
ss
pop
jg
and
dec
jmp
inc
aad
leave
outs
sbb
sub
jge
loope
mov
aam
inc
mov
lea
cld
jae
int
jo
movs
adc
out
test
mov
pop
mov
jne
not
loope
loop
mov
aam
sub
push
sub
stos
push
outs
rcl
mov
jg
(bad)
fisub
cld
inc
fucomp
(bad)
jns
movs
jp
sub
bnd
mov
lahf
ss
ss
sbb
daa
das
cmp
xchg
xlat
scas
lahf
stos
cli
mov
xlat
dec
push
cmps
jnp
fistp
not
nop
shl
test
(bad)
inc
sub
pop
sub
leave
inc
stos
mov
mov
in
ds
aaa
gs
sub
add
cmp
movs
pusha
pop
xor
ret
mov
xchg
pop
mov
ins
stc
pop
outs
shl
xor
add
inc
cli
jp
jmp
repnz
(bad)
outs
jp
inc
mov
adc
pop
cmc
arpl
inc
dec
mov
xchg
js
push
pop
inc
sbb
cmps
pop
or
scas
mov
in
(bad)
or
std
pusha
push
jbe
lea
sub
jne
sub
cmp
mov
test
shl
cmp
(bad)
fisttp
inc
sahf
mov
ds
out
je
push
dec
mov
cmc
mov
lea
jno
mov
add
movs
repnz
pop
lea
stos
lahf
push
jecxz
out
(bad)
cld
sbb
js
adc
(bad)
inc
push
jne
adc
jno
xor
sahf
pop
cmc
les
cmps
xchg
pop
jno
cmp
aas
xchg
dec
fcom
jno
xlat
fnsave
jne
jecxz
mov
stc
int3
inc
loope
xchg
pop
mov
xchg
fiadd
icebp
mov
aam
repz
dec
add
aaa
fs
mov
jecxz
movs
dec
xor
mov
mov
daa
loope
ficomp
mov
(bad)
(bad)
and
mov
mov
or
(bad)
in
ss
js
lea
shl
and
data16
sbb
and
push
(bad)
ins
dec
jecxz
adc
cmp
pop
and
stos
cdq
mov
xchg
mul
mov
mov
lock
outs
loop
push
inc
(bad)
sub
outs
sub
inc
ret
popf
or
pop
shr
jp
xchg
rcl
stc
and
mov
ror
scas
cmps
inc
pop
fbld
mov
xchg
out
retf
xor
mov
out
out
mov
sbb
test
mov
call
je
ret
jno
inc
cmp
out
lods
push
push
jg
push
pop
lock
cmp
mov
mov
cmps
(bad)
mov
fiadd
xchg
(bad)
aad
cmp
inc
cmp
adc
push
mov
sbb
sti
sub
jne
add
fistp
jg
adc
clc
jno
fdiv
gs
cmc
sub
add
xchg
ret
(bad)
adc
ret
adc
pushf
push
adc
fldenv
add
lahf
mov
sahf
das
repz
mov
test
retf
xor
jmp
test
mov
out
mov
mov
add
or
std
and
cmc
cwde
mov
jge
call
mov
scas
hlt
push
fwait
ins
jecxz
cs
jge
arpl
cwde
out
add
sti
outs
xor
shr
out
imul
popf
cmps
(bad)
cmp
dec
xchg
arpl
les
into
les
mov
outs
inc
icebp
fld
pop
aam
imul
ins
dec
loope
movs
jmp
cli
adc
and
mov
xchg
push
jl
loope
test
mov
xchg
out
jge
jge
ret
test
sub
les
and
adc
std
pop
std
stc
in
sbb
adc
enter
rcl
sbb
mov
ja
cmc
sbb
ret
mov
ins
(bad)
(bad)
push
stc
jg
xchg
pop
push
pop
jb
lock
shl
fdivrp
loop
cmp
scas
das
mov
xor
cmc
add
push
out
loop
mov
jnp
int
xchg
loope
pop
mov
jecxz
jmp
adc
ds
call
icebp
jo
adc
ja
pusha
mov
fdivr
mov
mov
fcmovu
int3
retf
jg
mov
ss
or
in
push
pop
push
cwde
aad
(bad)
push
movs
or
sub
dec
push
inc
rcr
ret
fnstcw
(bad)
hlt
hlt
and
and
push
push
cmp
xchg
addr16
jae
sub
and
pop
std
cdq
sbb
aam
leave
out
pop
call
ret
xor
retf
adc
sti
add
jae
cmp
cwde
xchg
and
pop
movs
shl
sbb
mov
push
jmp
cld
int
fdivr
push
mov
jg
or
out
sub
xor
jge
mov
add
test
inc
mov
inc
popa
xchg
fcom
neg
rcl
scas
sub
mov
nop
cdq
(bad)
dec
imul
ins
jbe
call
mov
aad
iret
ins
gs
mov
rcl
cmp
xor
sti
adc
add
dec
int3
sbb
fnstsw
in
dec
pop
retf
xchg
adc
std
xchg
loop
nop
push
int3
or
loop
jbe
ret
mov
shl
ret
jnp
mov
pushf
push
ret
mov
adc
enter
xchg
popf
aaa
mov
and
ins
inc
out
icebp
test
shl
xchg
pop
int3
cmp
xchg
aad
xchg
sbb
cmp
xor
mov
dec
fmul
sub
mov
and
arpl
pop
mov
stos
lods
jne
(bad)
out
inc
test
mov
in
push
out
sbb
es
nop
popa
sti
fdivr
mov
hlt
sub
inc
scas
mov
jl
out
std
jl
mov
fdivr
fxch
dec
and
repz
push
cs
cmp
fmul
xchg
jne
sbb
pop
push
or
scas
jl
shr
add
stos
sti
jp
cmc
imul
and
jp
fcom
adc
xlat
fisub
mov
loope
dec
cmps
shr
sbb
mov
dec
neg
jno
jnp
fdiv
xor
bound
into
pushf
mov
(bad)
mov
jl
repz
xor
xor
xchg
out
dec
sbb
out
pushf
(bad)
xlat
mov
out
sbb
jbe
adc
pushf
sub
push
push
mov
repz
popa
add
ret
jbe
ja
push
jb
jle
add
xor
imul
test
push
push
xchg
xor
es
call
adc
mov
das
dec
data16
cmp
int3
imul
psllq
jnp
cmc
fild
lock
sub
loope
icebp
js
leave
inc
push
out
mov
jmp
mov
sbb
sbb
mul
in
nop
into
lods
test
mov
loopne
push
pop
mov
addr16
in
xor
int3
outs
(bad)
ds
mov
pop
mov
sub
and
jmp
pop
enter
pusha
push
ficom
and
mov
call
iret
out
sbb
push
movs
mov
sub
mov
mov
jl
xchg
daa
push
movs
sub
add
out
lds
loopne
ret
in
mov
xchg
cmp
jnp
mov
out
lods
leave
rcr
popa
rcr
xor
pop
lds
mov
xchg
mov
lea
in
adc
or
popf
pop
dec
cmp
jno
out
sbb
cdq
push
jecxz
icebp
mov
enter
pop
jnp
fst
pusha
mov
in
cmp
or
repz
pop
dec
fidivr
push
dec
pop
mov
sub
jbe
xchg
cld
mov
cmps
ret
and
xchg
mov
js
xchg
sahf
add
aad
sbb
dec
push
and
(bad)
repz
mov
mov
(bad)
rcl
in
add
(bad)
mov
(bad)
adc
xchg
sbb
sub
push
pop
sti
cdq
dec
cmps
fs
daa
pop
sub
call
pushf
push
mov
popa
clc
scas
arpl
mov
push
xchg
mov
cld
into
mov
aas
loop
out
dec
mov
mov
jmp
jne
inc
jmp
inc
adc
jmp
data16
data16
ds
add
mul
add
jno
hlt
sti
sub
lock
and
jmp
popf
les
mov
cmp
and
or
inc
push
mov
or
retf
jg
mov
mov
out
out
push
dec
sbb
fnstsw
out
pop
and
movs
xor
push
push
push
pop
sub
cdq
mov
in
xchg
test
je
bound
cdq
mov
cmp
push
test
mov
scas
lods
fcmovbe
and
add
out
leave
loop
sbb
xchg
or
ret
xlat
jecxz
sub
mov
call
jo
push
loop
call
add
mov
mov
or
dec
jp
data16
push
popf
inc
inc
fiadd
bndldx
dec
fistp
xor
scas
pop
mov
test
adc
xor
adc
sti
mov
inc
imul
bound
int
pop
lods
out
mov
mov
pop
sub
test
mov
dec
push
pop
or
or
jmp
and
lds
mov
xchg
jecxz
push
frstor
mov
shr
loop
hlt
adc
pop
popf
(bad)
lods
(bad)
das
pusha
rcr
xchg
mov
xor
ja
icebp
cdq
push
push
mov
xchg
hlt
sub
and
or
lods
in
dec
rcl
int
xchg
inc
outs
inc
hlt
push
push
cmp
leave
mov
adc
cmp
int
cdq
outs
test
mov
push
sbb
daa
stos
xchg
cmps
jo
xchg
adc
or
dec
gs
daa
mul
cwde
pop
ss
gs
mov
dec
adc
xor
icebp
cs
jns
das
mov
adc
xchg
(bad)
jb
jns
int3
mov
sub
pop
jp
clc
(bad)
stc
call
cmp
repnz
rcr
pop
sbb
cmp
mov
cmps
out
inc
dec
mov
xchg
std
cmps
out
inc
push
cmps
gs
jg
pop
rcr
test
sub
jecxz
dec
pop
mov
mov
loope
mov
call
xchg
cli
push
cmp
cwde
out
mov
sbb
hlt
xchg
mov
sbb
mov
dec
lock
lods
sbb
or
ins
sbb
sar
mov
(bad)
cdq
(bad)
xchg
or
mov
xor
dec
ins
loop
mov
cmps
sbb
xchg
ins
xchg
add
cld
ffree
adc
fadd
(bad)
popf
cmps
sbb
dec
mov
repnz
aaa
es
sub
ja
xor
add
pop
mov
retf
imul
rcr
lods
imul
aas
jns
jb
test
fiadd
mov
push
push
jae
mov
in
and
adc
bswap
jne
add
and
inc
in
inc
pop
cmp
hlt
cs
inc
sbb
(bad)
aaa
(bad)
fldln2
popw
xor
dec
in
pop
mulps
(bad)
iret
test
in
xchg
xchg
dec
(bad)
and
xor
jge
mov
adc
loopne
sbb
and
xchg
pop
in
(bad)
jne
xor
pop
in
mov
lea
and
ret
mov
lea
mov
out
inc
fs
(bad)
hlt
(bad)
push
inc
sbb
push
outs
lahf
push
or
in
xchg
in
dec
in
fstp
mov
cmp
outs
scas
les
out
das
mov
and
fst
aaa
cwde
push
pop
sti
jb
pop
lods
sub
xchg
ds
dec
in
push
in
jb
lock
sub
adc
sub
jb
test
iret
nop
dec
xor
add
lea
mov
adc
js
adc
imul
dec
call
inc
xor
sub
imul
scas
push
pop
sar
inc
dec
ret
popf
cwde
pop
sub
mov
jle
in
mov
mov
je
test
enter
js
in
imul
test
sub
pusha
xchg
xor
mov
inc
pop
movs
dec
or
and
inc
cmp
jae
scas
jmp
mov
sti
sbb
xor
push
je
iret
xchg
loop
cmp
rol
outs
repnz
mov
js
scas
mov
sub
mov
push
jl
popa
add
cmps
or
movs
fcmovnbe
dec
fisub
sbb
mov
adc
fiadd
jle
mov
(bad)
pop
sahf
ret
test
cmc
enter
fiadd
mov
adc
mov
jnp
in
rcr
stos
ret
inc
std
cwde
mov
and
add
sub
call
cld
fidivr
mov
test
adc
repnz
gs
and
shl
add
(bad)
shr
cmp
xchg
int3
push
aaa
dec
(bad)
lods
pop
mov
add
adc
popa
sbb
test
bound
lock
clc
hlt
iret
gs
outs
xchg
jp
adc
dec
in
out
dec
xor
xchg
aaa
lds
dec
and
fwait
add
push
leave
pop
js
jg
mov
int
mov
(bad)
sub
xor
popf
fs
lods
fwait
or
loop
rol
outs
daa
dec
jns
mov
xor
sbb
outs
xchg
push
dec
pop
jne
adc
cmp
into
or
je
xor
rcr
call
cli
mov
test
mov
shl
pop
inc
or
push
js
frstor
push
fwait
cli
fwait
jmp
jmp
push
add
cdq
retf
inc
stos
push
mov
in
les
rcl
dec
dec
mov
fld
dec
mov
jge
jbe
mov
mov
xchg
sbb
sar
mov
xor
test
mov
jge
push
lock
or
inc
ret
clc
stos
repz
xchg
lea
shl
mov
stos
sar
cdq
js
mov
stos
out
sub
jbe
in
push
icebp
inc
out
push
jb
jns
xchg
xchg
mov
stc
dec
cmp
push
jbe
ret
addr16
push
sbb
and
mov
sub
jns
push
pop
str
or
out
mov
and
push
hlt
xor
or
sti
dec
pop
aam
data16
setns
sahf
les
and
push
outs
sub
mov
mov
arpl
lock
dec
mov
push
jnp
pop
loope
jp
out
fist
mov
iret
xor
nop
xlat
or
jne
or
xchg
retf
fdiv
xor
mov
sbb
push
push
lods
xchg
pop
xor
sbb
sbb
(bad)
pop
xchg
shr
enter
out
hlt
ficomp
jmp
not
push
xchg
adc
mov
or
in
xor
adc
cmps
enter
jge
outs
fild
ins
xchg
aad
(bad)
and
outs
sahf
sub
mov
cmps
daa
pop
xchg
cld
mov
push
dec
pop
aam
mov
scas
xchg
jp
scas
mov
clc
cmp
dec
les
movs
xor
sbb
jg
push
test
icebp
popf
ins
scas
repnz
lahf
mov
adc
addr16
int3
push
daa
xchg
(bad)
xor
add
inc
pop
mov
jl
rcl
movsx
pcmpeqw
push
rcl
fist
push
jmp
pop
sbb
jg
sbb
push
ds
std
sar
inc
fadd
adc
popf
mov
dec
and
or
loopne
outs
in
or
pop
mov
inc
div
mov
adc
sub
daa
shl
fwait
in
repnz
aaa
mov
mov
leave
es
fisttp
hlt
out
xlat
pushf
inc
iret
cmp
mov
dec
imul
inc
add
mov
sub
repz
pop
(bad)
ins
loop
add
stos
mov
push
push
push
push
lds
cmp
dec
scas
xor
retf
mov
mov
pop
mov
sub
jl
out
dec
scas
push
add
ds
aad
lods
mov
enter
jg
mov
test
mov
aad
sub
pop
inc
in
out
jmp
aas
cmp
(bad)
cmp
out
stos
iret
dec
mov
sbb
out
mov
mov
bound
js
scas
dec
ds
sbb
cli
pop
cmc
sar
(bad)
test
inc
adc
(bad)
and
(bad)
sub
sub
lock
out
push
sbb
push
sub
scas
adc
test
push
popa
mov
addr16
(bad)
adc
lock
jmp
std
cwde
mov
mov
jns
movs
mov
adc
mov
push
aam
push
sbb
inc
ds
push
mov
loopne
mov
mov
and
jle
cmp
and
mov
imul
sbb
mov
movs
mov
arpl
push
lahf
shl
fiadd
stos
stc
jge
xchg
push
mov
xchg
out
dec
push
ss
xchg
mov
loope
fidivr
stos
jns
mov
xchg
pop
jl
xchg
push
cmp
lock
add
cli
in
ins
mov
dec
xchg
outs
adc
cdq
nop
cli
or
aas
sahf
sbb
cmp
adc
mov
clc
clc
mov
fsubr
shl
pop
mov
loope
adc
clc
and
fcomip
push
xchg
push
xchg
pop
repnz
retfw
add
or
and
jmp
pop
ins
ins
mov
pushf
call
xor
sub
adc
adc
push
mov
pop
arpl
xchg
mov
jnp
fmul
mov
cwde
pop
jbe
mov
mov
adc
retf
nop
inc
add
fisubr
lods
cs
fcomp
and
mov
out
xchg
sbb
dec
fld
adc
push
push
adc
sub
and
mov
aas
inc
cmc
cld
sbb
add
es
dec
rcl
mov
out
ror
ins
inc
call
jmp
jb
and
popa
int3
(bad)
shl
xchg
add
test
xchg
addr16
es
stc
and
loopne
shr
(bad)
into
shl
movs
mov
fwait
and
retf
mov
inc
xor
add
sub
dec
cmps
xor
(bad)
xor
ja
sbb
cdq
and
sbb
leave
pop
stc
icebp
inc
mov
and
clc
mov
cmp
cmp
ficomp
or
jmp
mov
adc
cld
xor
test
xchg
test
(bad)
mov
ins
lock
xchg
xor
jns
push
pop
cld
sahf
adc
or
mov
mov
xor
fst
repnz
inc
in
fnstcw
addr16
add
(bad)
and
pop
mov
ret
adc
sbb
mov
mov
movs
es
fild
cmp
(bad)
cdq
inc
pop
dec
outs
gs
les
cmovg
dec
push
cmps
cmps
inc
aad
in
inc
jmp
bnd
sub
xor
add
ret
sbb
inc
adc
(bad)
bound
imul
prefetchwt1
bound
xor
cmp
cmps
cdq
lods
and
(bad)
xor
pop
les
pop
out
mov
outs
xor
or
js
enter
mov
sbb
hlt
jecxz
test
rcl
lea
inc
call
mov
fcomi
mov
out
xor
inc
xchg
shr
leave
sbb
sub
mov
lock
mov
scas
mov
mov
mov
or
shr
rcl
sub
daa
pop
sti
mov
retf
jno
push
lea
push
push
repnz
adc
sub
stc
(bad)
jbe
mov
xor
jnp
push
scas
xor
push
sbb
or
inc
fld
nop
adc
fist
clc
mov
mov
mov
mov
mov
arpl
fisttp
cmp
adc
movs
mov
inc
xchg
sbb
ud0
int3
adc
mov
push
mov
add
mov
in
lods
in
xor
mov
ficomp
fist
mov
xor
inc
clc
or
pushf
mov
xor
pop
lahf
pusha
in
mov
jmp
jae
pushf
nop
and
fwait
sbb
jbe
push
adc
mov
mov
adc
and
cmp
pusha
jmp
fbstp
mov
xor
repnz
inc
mov
cmp
stos
ds
or
fcom
xchg
jno
lock
test
add
daa
xchg
sbb
mov
push
cmp
jbe
inc
jo
pop
bnd
jmp
pop
jnp
mov
mov
cmp
shr
cli
js
or
mov
mov
in
and
push
xor
cmp
jb
jmp
push
aas
mov
xchg
cmp
lods
ffreep
push
dec
add
in
pop
test
pop
push
jmpw
cmp
cdq
in
inc
es
push
pusha
xchg
retf
(bad)
sbb
or
in
hlt
mov
aaa
call
pop
fwait
inc
jb
arpl
adc
jle
sub
push
popf
jge
popf
retf
shr
cmps
jmp
arpl
pushf
pusha
add
xor
mov
sti
neg
pop
xor
into
add
(bad)
pop
xor
es
fst
xor
jnp
or
mov
jne
and
dec
into
mov
push
rcl
mov
sbb
pop
push
xchg
adc
inc
addr16
div
adc
mov
stc
popf
jo
dec
push
xor
enter
sbb
arpl
jns
inc
mov
push
es
sub
cmps
xor
sub
movs
in
ret
jne
sbb
push
cmp
sub
dec
into
cmp
xchg
iret
xor
iret
mov
sbb
pop
sbb
push
xchg
pop
int3
dec
and
shl
push
cmc
iret
lods
icebp
mov
mov
jecxz
add
inc
sub
mov
cmp
outs
jo
cmp
inc
bound
xor
or
fld
adc
outs
mov
shl
iret
push
or
mov
lods
pop
ret
mov
sbb
pop
fwait
cmp
scas
pop
cmp
ja
jnp
cld
test
aas
sub
(bad)
in
test
inc
nop
mov
sub
xchg
in
repnz
mov
xchg
pop
inc
mov
inc
aam
mov
or
repnz
test
push
loope
and
cmc
fiadd
jge
jl
dec
push
(bad)
test
or
cli
test
add
jg
pop
rol
cmps
dec
ins
cdq
push
inc
and
and
ficomp
mov
dec
jns
sbb
mov
aas
scas
ret
jge
sub
test
dec
sub
cs
or
pushf
dec
pop
xor
(bad)
mov
push
push
adc
cs
repz
scas
push
imul
vpmaddwd
dec
add
jmp
dec
repz
sti
mov
and
jno
into
lods
aaa
dec
dec
push
jnp
jo
mov
pushf
mov
lock
popa
xchg
stos
inc
leave
mov
add
movs
push
pop
and
clc
add
cmp
sub
lock
cmp
mov
jecxz
cmp
leave
jg
cld
cmps
and
pop
jmp
in
jmp
je
add
test
mov
lds
and
outs
and
push
sbb
push
xchg
out
scas
and
aam
sbb
int3
icebp
test
test
fsubr
push
add
push
jp
adc
(bad)
div
fiadd
mov
rcl
cmps
pop
or
(bad)
pop
jae
std
cmc
addr16
mov
adc
sbb
fs
lea
nop
dec
into
ds
(bad)
fidiv
push
es
fiadd
cdq
pop
je
xor
add
pop
dec
xor
adc
jmp
and
daa
add
and
(bad)
adc
retf
mov
es
stos
sbb
mov
lods
jmp
jmp
imul
pop
call
imul
pushf
stc
cmp
or
fucomip
pop
call
adc
jge
xor
test
or
or
in
jae
xor
xchg
clc
test
sbb
jns
mov
neg
movs
mov
jnp
and
mov
dec
shr
cmp
jmp
mov
pushf
es
cmp
imul
sahf
fisttp
sbb
shl
aam
clc
cmp
retf
jg
lods
or
xor
enter
sbb
movs
mov
stos
mov
jo
je
daa
lahf
xchg
sbb
shr
jno
cmp
mov
cmp
cwde
lahf
es
stos
add
shl
mov
rcr
neg
jmp
jbe
aaa
retf
xor
and
repnz
jns
jmp
std
loop
fisttp
inc
call
jb
rol
adc
mov
xchg
xchg
xor
xchg
das
push
(bad)
jp
pop
div
retf
out
or
xchg
fsubr
loope
retf
imul
stos
push
loop
inc
js
mov
inc
cs
cld
fidivr
pop
imul
fnsave
dec
jmp
cmp
cld
stos
and
(bad)
in
mov
dec
test
cdq
fxch
leave
or
xor
test
sub
dec
neg
inc
cld
fcomp
cvtps2pd
sub
nop
mov
and
ret
in
xor
jo
mov
sub
rol
rol
call
loopne
sub
lahf
jae
(bad)
mov
mov
push
ret
pop
aas
adc
mov
mov
jecxz
fisubr
adc
das
aaa
dec
dec
retf
pop
std
shl
xchg
(bad)
out
inc
pop
xor
mov
xchg
fcomp
pop
das
leave
aam
in
push
hlt
(bad)
call
xchg
pop
ja
xchg
test
rcl
mov
xchg
lea
rol
scas
repz
loop
(bad)
jns
loopne
fld
popf
sub
cmc
jmp
loope
adc
xlat
fwait
pushf
repz
ret
lea
inc
and
dec
dec
sbb
in
mov
cwde
stos
xchg
xor
mov
into
lock
mov
mov
je
dec
fmul
je
push
popf
fisub
adc
inc
dec
rcr
fidivr
inc
sbb
call
sub
jno
sbb
lea
ret
rcr
cmp
cmp
and
mov
add
cmp
xchg
ret
out
cs
lds
mov
ss
adc
fcmovnu
test
jnp
in
sbb
pusha
daa
xor
xor
ins
mov
in
dec
mov
inc
inc
mov
retf
xor
loop
shr
mov
mov
ret
pop
in
shr
push
mov
lea
mov
push
mov
rcl
rol
adc
movs
pop
and
clc
jnp
mov
sub
(bad)
ins
mov
sbb
mov
movs
inc
push
cmps
std
sub
cmps
movs
test
mov
and
imul
pop
mov
das
cli
icebp
jle
mov
inc
loopne
jns
pop
popa
or
xor
fidiv
jb
xchg
pop
loopne
fsubrp
jno
mov
pop
jb
fimul
(bad)
enter
pop
rcl
int3
std
mov
mov
sti
cmc
cmp
push
add
push
adc
aam
dec
je
jb
imul
sbb
imul
retf
stos
jbe
cmps
push
mov
inc
mov
fidiv
sub
jmp
movs
sub
mov
out
ss
mov
sbb
jg
shr
nop
and
es
movs
and
mov
mov
dec
mov
pop
leave
dec
xor
pop
push
scas
or
cmp
imul
xchg
pop
and
dec
das
and
ret
cmps
out
int3
test
(bad)
sub
ror
inc
pop
push
repz
or
movs
sub
add
inc
(bad)
add
daa
push
popa
mov
div
push
xor
jle
push
test
cmp
cmp
daa
sbb
sbb
sbb
and
loopne
rcl
sub
cwde
movzx
les
test
or
or
arpl
es
inc
xchg
mov
cmp
mov
hlt
lds
ja
mov
hlt
mov
jg
xor
pusha
pop
movs
lea
push
outs
mov
outs
(bad)
arpl
dec
(bad)
scas
outs
or
ret
popf
stos
loope
and
jb
movs
data16
int
arpl
sbb
fwait
push
mov
push
scas
push
lock
dec
push
loope
imul
lds
pop
dec
pusha
out
xlat
std
mov
dec
loope
dec
les
lea
xor
stos
mov
rcl
cmp
mov
data16
sahf
jo
ja
movs
inc
jmp
lea
mov
push
imul
xchg
not
cmp
mov
cmp
test
(bad)
and
mov
test
mov
sbb
icebp
adc
and
mov
pop
fmul
mov
push
out
out
mov
mov
sub
and
sub
push
mov
loopne
push
out
sub
lods
nop
into
push
shl
mov
in
mov
pop
scas
xchg
mov
inc
outs
xchg
adc
sbb
retf
iret
jle
inc
iret
daa
jge
push
mov
scas
test
and
mov
add
into
repnz
imul
add
dec
adc
lahf
out
mov
loop
test
stos
and
int
xchg
sbb
nop
sbb
mov
xchg
add
or
mov
movs
ret
sbb
(bad)
mov
mov
loope
and
outs
or
xor
sub
push
mov
push
ins
lods
pop
xor
pop
inc
repz
bound
add
sbb
shl
and
cmp
adc
mov
mov
sub
jge
fild
add
lods
push
jb
addr16
or
scas
fadd
(bad)
scas
jno
sub
cld
nop
aaa
packsswb
cmp
push
or
add
je
xchg
(bad)
jmp
rcr
mov
inc
sar
push
push
sbb
jge
shl
outs
inc
ret
mov
ins
jne
or
jb
mov
sub
sbb
pop
xor
test
xchg
ror
xchg
inc
push
push
ss
dec
(bad)
aaa
cwde
ins
cmps
fisubr
or
and
data16
and
pop
arpl
mov
fdiv
sbb
dec
sbb
adc
mov
scas
inc
outs
push
xchg
stc
sub
in
lea
stos
add
or
pop
or
mov
popf
mov
lods
or
mov
mov
enter
push
sbb
xor
push
jg
dec
ror
adc
aaa
sbb
scas
int3
sti
int3
jns
pop
xlat
sub
mov
adc
push
mov
jbe
mul
pop
pusha
test
jnp
sub
rcl
xlat
shl
jmp
loope
mov
and
scas
shr
pop
sti
test
jg
ja
cdq
sbb
loope
bound
pop
and
cmp
fcomip
outs
(bad)
pop
imul
pop
cld
cmp
mov
movs
pop
int3
test
scas
hlt
push
push
jmp
stos
dec
dec
pop
mov
sub
pop
test
lea
mov
shl
xchg
sbb
in
fisttp
push
inc
ficom
cs
pusha
mov
inc
in
int
int
ins
frstor
inc
imul
rcl
dec
shr
add
dec
and
pop
dec
out
retf
lods
gs
rcr
je
mov
aad
xchg
movs
pusha
adc
push
(bad)
retf
test
into
in
fwait
adc
mov
jne
mov
or
jne
iret
mov
cmp
inc
and
mov
sub
fist
push
popa
inc
mov
std
pop
add
rol
mov
enter
gs
mov
(bad)
cli
jmp
iret
mov
es
ja
mov
and
(bad)
sbb
cmp
adc
test
jge
add
rcr
push
in
mov
rcl
jnp
adc
outs
fwait
cmp
xor
rol
aaa
inc
mov
std
(bad)
cmp
(bad)
dec
mov
mov
push
or
icebp
stc
mov
bswap
cmp
movs
xor
push
xchg
cld
push
mov
adc
sar
adc
ins
and
sbb
or
mov
jl
call
mov
daa
fs
and
xchg
and
and
(bad)
aad
push
ja
xor
int3
popf
mov
nop
vmovapd
pop
das
mov
aam
push
fsubr
stos
das
test
mov
inc
mov
push
push
leave
push
iret
xchg
mov
add
add
mov
jmp
shl
jl
pop
sbb
icebp
pop
in
pop
pop
les
or
scas
inc
pop
(bad)
adc
ficomp
div
jbe
jle
xor
push
mov
or
dec
mov
push
mov
out
shl
repnz
jne
outs
jp
fld
xor
and
mov
cmp
shl
out
and
cmp
add
jb
pop
mov
xor
dec
je
adc
push
imul
iret
jns
vrsqrtps
push
mov
daa
lods
scas
mov
fist
mov
jge
aaa
pop
xchg
inc
pop
test
ss
ret
add
mov
mov
dec
inc
cmp
pop
sbb
aad
sbb
jmp
dec
cmp
adc
sti
or
and
or
xor
ins
xor
mov
int
cmp
or
in
addr16
adc
adc
pop
push
inc
or
jo
into
enter
lds
fdiv
and
(bad)
push
outs
fsub
jmp
or
sub
(bad)
push
aas
jmp
pop
hlt
scas
call
les
inc
int
xchg
pop
jge
inc
add
(bad)
mov
les
adc
jp
and
inc
ret
push
fmulp
lods
(bad)
in
or
jg
addr16
or
push
cmp
idiv
ss
and
xchg
and
popf
les
loope
xlat
jbe
push
(bad)
call
(bad)
fcomi
fidivr
lahf
pop
and
mov
call
pop
push
les
cmp
push
xchg
cmps
dec
add
cmp
lods
rcl
sbb
hlt
test
jno
pop
mov
icebp
jecxz
shl
cmp
test
push
pushf
test
cs
jbe
fcmovb
mov
stos
jne
add
pusha
cmp
add
fild
cmps
dec
xchg
jge
imul
retf
in
je
xor
cmp
adc
dec
fstp
pushf
pop
xor
xor
sti
add
imul
daa
sbb
mov
push
mov
pop
xchg
cmp
cdq
in
jg
mov
cmps
xlat
scas
shr
pop
xor
test
adc
lahf
push
mov
shr
push
mov
lahf
addr16
mov
sbb
xchg
mov
pop
cmp
xchg
popf
push
inc
fstp
loopne
inc
mov
adc
cmp
dec
movs
add
and
test
repnz
mov
add
dec
cmp
mov
push
sub
xchg
scas
xor
xchg
ins
addr16
aaa
mov
mov
jo
jns
add
ss
sub
jmp
dec
lds
xor
jbe
ret
mov
lahf
in
and
idiv
hlt
adc
fld
pop
fwait
and
sub
cmp
ins
mov
lahf
sub
(bad)
movs
loopne
pop
aaa
scas
scas
pusha
cmp
jmp
clc
sbb
sub
mov
cs
je
jbe
popa
dec
push
inc
enter
ss
pop
aas
pop
ror
xchg
add
ds
xchg
cmp
aas
jb
imul
fsubp
ror
mov
daa
pop
sar
dec
push
fldcw
ret
mov
sub
cmp
mov
fnsave
push
cmp
xor
jae
inc
ret
outs
cmps
sbb
addr16
jmp
add
mov
mov
jno
mov
push
and
hlt
mov
pop
mov
cmp
gs
fcomp
pop
sahf
in
pop
push
test
(bad)
call
xor
ds
daa
rcr
inc
sub
dec
clc
(bad)
sub
ss
sub
js
popf
jge
mov
jbe
popf
in
aad
jge
fist
retf
mov
cdq
add
mov
in
mov
and
mov
imul
bndstx
add
mov
push
sub
ins
or
shr
jmp
jns
jne
xchg
jmp
ins
or
nop
ins
scas
(bad)
out
ds
dec
fstp
mov
push
and
sahf
(bad)
cli
in
dec
arpl
xchg
mov
inc
xchg
popa
retf
(bad)
xchg
fadd
xchg
je
or
out
mov
xchg
loop
out
inc
dec
push
xchg
retf
xor
aaa
mov
stos
div
das
leave
js
loop
pop
pop
in
hlt
or
or
inc
and
add
sub
cmc
mov
inc
pop
mov
mov
popf
adc
push
inc
xchg
stos
cmc
add
add
int3
cmp
adc
ret
jo
cmps
ds
or
iret
and
cmp
aas
sar
hlt
mov
cmp
adc
jg
dec
xor
xlat
cli
push
imul
gs
add
add
ror
(bad)
fistp
dec
push
sbb
pop
push
out
into
ret
iret
xchg
jns
push
cld
fild
movs
sbb
pop
ret
sub
push
cmps
cmp
xchg
test
push
je
mov
cmp
cmovbe
ret
(bad)
shl
js
push
int
jns
mov
aad
jae
inc
imul
sub
and
jecxz
push
pusha
push
call
nop
inc
fs
xchg
jo
push
push
es
adc
pop
and
lds
sub
push
jns
pop
daa
adc
mov
dec
adc
call
inc
sub
out
add
sub
and
fnsave
inc
ins
pop
sub
neg
pop
aad
fxtract
pop
add
pop
adc
push
or
xor
mov
push
(bad)
icebp
xor
sub
or
xor
and
push
daa
sub
push
adc
lahf
cmp
pop
bound
(bad)
adc
inc
xor
mov
cld
ins
sub
lods
stos
ffreep
in
les
(bad)
mov
loop
push
pop
adc
add
jle
rcl
(bad)
retf
je
sub
cmp
test
test
ins
scas
les
stc
sub
test
imul
adc
pop
retf
xchg
or
pop
jmp
or
push
add
neg
and
mov
stos
and
fs
mov
outs
cmp
nop
dec
pop
push
(bad)
mov
xchg
loope
movs
mov
sub
retf
ins
dec
shl
jp
leave
int
pop
movs
jmp
xchg
das
push
call
cmps
cld
in
aad
or
jnp
(bad)
cwde
test
mov
inc
mov
mov
ss
aas
pop
mov
jb
jmp
dec
loopne
cmp
mov
cmp
fdivr
leave
inc
sub
out
js
push
jne
dec
push
cmp
inc
and
sbb
mov
sub
cmp
add
movs
test
sub
xor
xor
ja
xchg
test
into
push
jmp
cmps
sbb
pop
cmp
mov
xchg
mov
dec
ficom
dec
les
cld
xchg
retf
mov
sbb
psubusw
xchg
loopne
jo
dec
imul
bound
xchg
inc
nop
xchg
test
sahf
pop
arpl
inc
dec
imul
movs
pop
test
lock
jbe
ss
push
mov
imul
cmp
out
lds
ja
mov
clc
sub
jg
pop
push
and
in
adc
inc
rcr
mov
retf
sub
sbb
mov
rcl
imul
mov
pop
dec
sub
(bad)
jnp
mov
les
xchg
fwait
lea
sub
add
mov
sub
pop
pop
push
jae
in
sbb
lea
add
xor
sbb
dec
dec
and
add
movs
pop
stos
in
repnz
xor
outs
adc
pop
ret
cmp
pusha
push
add
(bad)
jmp
sahf
outs
jmp
ss
and
add
sbb
inc
mov
lock
stos
rcr
(bad)
push
cdq
aad
mov
and
push
popa
fcomp
mov
loop
cmc
in
outs
jo
pop
cld
ret
stos
imul
mov
stc
aad
and
dec
test
and
rcr
push
xor
in
aaa
cmp
fsubr
stos
xor
and
push
(bad)
sub
xchg
and
push
sbb
fs
pop
jle
out
cmp
or
in
jl
aad
dec
or
inc
push
mov
cmp
scas
sbb
cmp
sbb
xchg
xor
adc
scas
mov
fdivrp
jle
fsubr
lahf
jecxz
xor
jmp
jae
cmc
xchg
xchg
jl
mov
mov
fnstenv
mov
and
gs
outs
pop
jmp
cmps
cmps
cmc
xor
ins
mov
dec
lahf
xor
add
in
sahf
or
(bad)
repnz
mov
dec
and
sahf
and
mov
pop
push
sbb
mov
aad
call
jae
cwde
pop
add
out
icebp
outs
(bad)
into
(bad)
pop
mov
sub
(bad)
cmp
sbb
retf
les
popf
scas
test
push
repnz
popa
or
sti
dec
inc
fucomi
cdq
cmp
mov
movs
pusha
mov
mov
enter
jne
and
xor
loope
mov
lods
daa
outs
xor
xor
fist
sbb
sub
js
mov
and
lea
xchg
repz
fmul
popa
adc
in
mov
push
mov
rcl
jbe
lods
ret
and
push
retf
mov
outs
repnz
pop
sbb
push
iret
addr16
jno
push
mov
and
in
mov
retf
pop
mov
ins
xor
or
(bad)
cmp
or
xor
imul
xchg
addr16
xchg
retf
fld
nop
adc
jmp
or
pop
dec
pop
cmp
pop
push
and
push
adc
and
push
and
pop
cmp
stos
imul
shl
jmp
(bad)
cmps
add
sub
xor
and
and
sahf
or
pop
(bad)
jge
js
jb
mov
pop
neg
dec
(bad)
clc
call
repnz
sub
iret
retf
loopne
rcl
lahf
jae
xor
sbb
ds
leave
daa
aas
mov
add
adc
cld
aad
ficom
imul
adc
xor
(bad)
int
mov
cli
rcr
in
sub
sbb
cmp
movs
cmc
or
cmps
sbb
and
xchg
lods
sub
or
les
js
cmp
ins
stos
int
into
xchg
out
scas
(bad)
outs
movs
mov
aas
sub
dec
ss
cs
jmp
fs
fmul
xchg
pop
sbb
or
imul
in
mov
jmp
mov
cmp
and
cmp
pushf
push
cmp
jns
push
call
fucom
out
xchg
mov
xor
retf
repnz
or
inc
addr16
xchg
pop
aad
xchg
fdiv
cmp
repnz
jno
xchg
mov
sti
pop
sbb
jle
rcr
push
sub
cli
pop
push
push
sbb
add
sti
and
pop
or
jmp
mov
fild
imul
ss
jb
out
push
adc
sbb
sar
movs
sub
retf
mov
stc
daa
cmp
rcr
gs
mov
(bad)
xor
stos
scas
push
jnp
fnstenv
mov
(bad)
scas
cwde
dec
stos
jle
jae
das
(bad)
ss
popf
or
lahf
ror
inc
leave
inc
loop
or
in
xchg
repz
loopne
sub
sub
sbb
movs
js
mov
(bad)
movs
aaa
mov
mov
(bad)
sub
shl
jno
ds
add
shl
ret
or
int3
push
call
data16
sar
aam
aad
mov
movs
pusha
aam
xchg
dec
inc
dec
movs
and
push
ins
mov
das
push
je
fucomp
sub
mov
cmp
call
ror
dec
push
cmovbe
scas
scas
push
int3
or
fs
loop
mov
xchg
in
loope
pop
ds
lea
(bad)
dec
stc
push
jb
sbb
out
pop
sahf
lahf
sbb
bnd
mov
dec
jbe
or
stos
adc
(bad)
(bad)
cmc
dec
mov
lock
loopne
stos
enter
sub
lock
xchg
sbb
add
push
(bad)
test
or
outs
push
inc
dec
out
xchg
fild
or
lock
add
cmp
mov
lea
int3
leave
sahf
sbb
xor
sbb
(bad)
push
cs
jp
cmp
or
add
mov
popa
repz
sub
dec
dec
imul
mov
cwde
ja
adc
dec
stos
in
or
js
fsubr
sti
(bad)
out
in
dec
push
int3
dec
mov
pop
xchg
ret
cmp
movs
outs
add
ret
mov
mov
or
data16
xchg
aam
repnz
mov
mov
cwde
je
nop
mov
pop
sbb
and
in
cmps
add
stc
hlt
icebp
call
sub
(bad)
mov
dec
cmp
add
or
sti
in
daa
icebp
add
adc
js
add
pop
cli
push
mov
push
add
es
jmp
jmp
and
sub
cmp
cwde
adc
push
out
xchg
dec
fld
scas
jmp
fcmovbe
pushf
and
mov
js
sti
sar
shr
cdq
or
push
pop
or
sbb
les
jne
cmps
imul
mov
adc
or
cli
in
sbb
retf
xor
dec
jle
mov
mov
fwait
stos
call
xor
in
inc
pushf
jno
and
push
icebp
inc
mov
sahf
mov
sub
bound
fstp
cwde
xor
mov
out
sbb
sbb
outs
sar
mov
stc
shl
inc
jmp
jno
cli
out
inc
cli
add
rcr
mov
jo
and
sub
jge
repnz
mov
fiadd
js
adc
sub
add
pop
cld
sbb
mov
or
jle
pop
sub
cmp
push
xchg
daa
mov
cmp
popf
neg
sbb
inc
pop
adc
movs
add
inc
mov
push
dec
ffree
in
dec
loop
(bad)
xchg
rcl
or
ins
daa
lea
xchg
into
pop
popa
xchg
imul
xchg
ds
mov
mov
loope
sub
in
xchg
push
imul
xor
shl
pushf
xchg
fst
xor
mov
mov
and
xchg
fsub
dec
rcl
pushf
cmp
xor
adc
and
(bad)
jle
(bad)
and
mov
fisttp
adc
loop
(bad)
lahf
ins
out
popf
mov
sbb
(bad)
jns
mov
jmp
retf
nop
ds
mov
sub
mov
jp
push
sbb
jns
lahf
pusha
mov
add
es
sub
dec
dec
or
ror
push
and
xchg
xor
mov
sub
sub
xor
mov
mov
lahf
daa
jb
in
outs
dec
push
push
dec
and
nop
sbb
test
out
mov
idiv
adc
pop
(bad)
push
add
xchg
(bad)
mov
cli
in
add
mov
lock
or
hlt
ret
and
sahf
or
movs
dec
mov
pop
inc
sub
pop
push
push
mov
popa
ins
dec
mov
pop
pusha
test
test
dec
xchg
movs
xor
cmp
xchg
add
in
sti
imul
sbb
xchg
inc
inc
jb
mov
leave
and
add
sub
pop
ret
push
sub
or
js
(bad)
mov
mov
inc
mov
(bad)
cmp
outs
test
push
sub
lock
fcmovnb
push
mov
jle
das
cmp
loope
cmc
daa
imul
mov
push
mov
add
inc
jno
mov
das
sub
retf
push
or
xchg
stos
les
mov
aad
jo
add
enter
je
and
(bad)
mov
pop
addr16
shl
push
inc
out
mov
hlt
daa
imul
mov
int
(bad)
(bad)
repnz
aas
cmovnp
jne
inc
mov
jg
ins
pop
aas
adc
lods
sti
hlt
sbb
inc
rcl
fcom
test
out
inc
or
adc
pop
pop
push
dec
cwde
push
popf
test
stc
scas
ins
or
cdq
ficom
pop
retf
out
cmc
sub
into
aas
sbb
mov
add
sub
push
fistp
push
push
test
idiv
int3
sub
hlt
lock
aas
cmp
fcmovnb
jae
pop
sub
inc
jbe
jno
inc
pop
fmulp
arpl
dec
out
inc
dec
hlt
(bad)
mov
loop
rcl
pop
sub
sti
xchg
lds
test
test
clc
or
test
inc
sbb
in
dec
cmp
lock
push
push
in
mov
sbb
inc
pop
adc
adc
das
mov
sub
mov
sar
aas
ret
test
mov
and
leavew
es
mov
ss
out
adc
nop
fcmovu
or
cmp
cli
xlat
shr
sbb
test
popa
or
or
sahf
lods
(bad)
int3
xor
enter
push
pop
fistp
sub
push
mov
shl
push
mov
or
sbb
xor
data16
fnstenv
data16
pop
mov
(bad)
das
mov
sub
sub
mov
pop
jecxz
stos
ja
stc
fbstp
xor
mov
jb
push
push
or
mov
lods
and
movs
jnp
test
sbb
jmp
popf
(bad)
mov
cld
add
xchg
xchg
fsubr
sub
mov
xchg
call
add
ret
dec
push
sbb
xor
cmp
jmp
dec
pop
ss
lods
sub
jp
xlat
xchg
test
cmp
je
sbb
pop
rcr
adc
dec
fwait
mov
sub
inc
dec
jg
test
leave
jbe
adc
push
jmp
sbb
inc
iret
aam
xchg
aas
imul
xor
pop
js
fisub
sub
jo
add
cld
push
(bad)
xor
in
stc
int
mov
retf
xchg
pushf
leave
shl
and
xchg
push
popf
cs
int3
and
lock
je
test
mov
test
nop
and
xor
frstor
push
bound
cs
pop
dec
and
sub
xor
mov
addr16
fnstenv
std
imul
(bad)
hlt
rcl
sbb
sub
outs
hlt
xor
popf
scas
mov
pop
mov
jp
cmc
mov
cmps
outs
pusha
in
aad
sub
cmc
mov
imul
iret
aam
cli
imul
or
or
(bad)
sbb
xchg
mov
mov
mov
or
pusha
add
dec
shl
xchg
aam
in
and
cmp
jae
outs
inc
add
mov
pop
fcomp
add
(bad)
dec
lods
or
stc
(bad)
mul
in
sti
je
call
retf
aad
xchg
into
inc
loopne
ret
mov
in
retf
int
sub
or
dec
sar
lods
xchg
loop
mov
cs
loop
push
hlt
jmp
inc
mov
in
aaa
out
(bad)
push
fsubp
ins
dec
jmp
cld
out
dec
cli
repz
popf
add
adc
and
ror
sbb
test
add
add
mov
aad
das
sahf
dec
and
into
mov
arpl
dec
je
test
pop
in
lds
pushf
jmp
mov
cmps
inc
mov
cwde
ins
cmps
mov
sbb
(bad)
and
sahf
jmp
mov
push
xchg
dec
outs
arpl
sub
aad
add
xchg
sub
inc
mov
adc
aas
test
xor
sub
das
push
nop
pop
je
imul
mov
cmc
test
adc
mov
mov
push
cmc
(bad)
ror
mov
test
in
pushf
inc
out
push
pop
pop
add
cmp
jno
xchg
mov
fisttp
sar
or
xor
lods
cli
scas
fs
sti
lods
sub
mov
lods
xchg
mov
mov
shl
sub
mov
sub
xchg
rol
ret
push
ror
xchg
push
jecxz
inc
scas
pop
lock
test
jo
xchg
lea
clc
or
xchg
iret
and
pushf
pop
adc
rol
pop
pop
popa
data16
fild
cmps
mov
ss
shr
jp
jmp
ins
jns
and
mov
xchg
lods
push
out
imul
mov
inc
iret
add
mov
in
bound
push
mov
mov
cmp
retf
movs
call
mul
leave
pop
loopne
enter
call
inc
push
xchg
scas
pop
adc
test
pop
ss
inc
test
inc
xor
push
test
(bad)
loopne
and
inc
push
mov
ins
xchg
fs
sbb
ins
mov
ja
sahf
push
sti
cmp
scas
xor
lea
lods
sub
sub
icebp
sub
dec
add
in
adc
sti
mov
pop
imul
fcom
adc
in
mov
retf
sub
cmp
jne
dec
into
jle
jns
rcl
mov
outs
or
xlat
cli
movs
cli
cli
rcr
lods
mov
mov
pop
jae
les
fsub
pop
pop
das
cli
adc
jp
ficom
sbb
cmp
adc
stos
retf
(bad)
jecxz
sub
jge
inc
pop
ins
adc
clc
adc
sbb
data16
jo
sub
ins
in
nop
push
mov
xor
sub
fnstenv
add
int3
ss
adc
test
mov
and
jecxz
push
jge
adc
rcr
popa
cmp
out
loope
cmps
jmp
pop
xchg
push
shr
mov
mov
icebp
cwde
xchg
ret
sub
push
mov
xchg
push
sahf
xchg
xlat
xor
mov
bound
daa
stos
and
into
(bad)
shl
mov
jle
pop
retf
dec
sub
and
adc
bound
aad
sub
scas
lods
jbe
rol
cmp
call
jg
dec
mov
sub
mov
mov
mov
push
loopne
sub
push
inc
mov
scas
adc
push
pop
or
xchg
test
cmp
inc
mov
jno
inc
fidivr
in
jbe
inc
adc
fsub
scas
les
mov
(bad)
dec
sub
jg
push
loop
dec
inc
xlat
sbb
in
xchg
into
fldcw
fadd
or
mov
push
jp
cmp
jle
jle
outs
cwde
lods
xlat
and
sbb
push
clc
sti
test
aad
fcomp
sub
scas
push
inc
and
(bad)
pop
push
adc
sub
and
xlat
push
mov
pushf
fwait
pop
add
ret
adc
fst
cmp
mov
shl
sub
inc
in
and
aad
sbb
loop
shr
xchg
fld
enter
xor
ins
aam
add
in
push
lock
sbb
mov
fisubr
mov
mov
mov
stos
imul
pop
dec
std
sub
inc
mov
push
cmps
cmp
jge
jb
lods
dec
xchg
mov
aam
sbb
std
leave
push
div
out
aas
popf
xor
stos
rol
mov
aad
stos
mov
outs
les
mov
cmp
fld
ret
inc
sub
push
push
cmp
xor
xor
nop
adc
sar
into
and
sti
cdq
dec
mov
pop
arpl
lock
lock
popf
and
cmp
imul
movs
jmp
jb
mov
dec
mov
in
jmp
cmc
call
jae
cmp
mov
mov
aas
jb
dec
or
popf
retf
mov
push
popf
stos
push
sbb
adc
lahf
mov
mov
jne
sbb
pop
and
jle
cli
es
adc
fcomp
jmp
xchg
add
cmp
push
mov
mov
cmp
sbb
hlt
stos
and
dec
pushf
(bad)
aam
fcom
mov
dec
repz
fisub
stos
pop
arpl
and
push
mov
and
and
adc
mov
dec
mov
dec
inc
outs
loop
pop
lods
test
fild
(bad)
cmp
dec
push
into
lds
mov
inc
dec
and
pushf
mov
and
int
(bad)
rol
and
ds
in
fisubr
xchg
dec
mov
(bad)
shr
mov
mov
ret
xlat
enter
lock
adc
add
fldcw
xchg
inc
jmp
jle
jge
mov
and
pop
fsub
push
jmp
pop
lods
xor
and
cmps
cmps
mov
js
cmp
popa
push
stc
adc
sub
push
sub
jae
jmp
mov
scas
mov
js
stc
out
out
or
adc
xchg
add
out
mov
jne
div
mov
adc
cmc
inc
xchg
pusha
push
pushf
mov
rol
aaa
movs
retf
in
hlt
add
mov
xchg
rol
stos
adc
pop
mov
adc
inc
aam
shl
or
push
xor
fidiv
mov
icebp
fwait
in
jl
repz
and
xchg
nop
add
call
or
fmul
data16
call
dec
and
jmp
cmp
cmp
lds
loope
and
ins
xor
and
aaa
mov
dec
add
cmp
jns
xchg
xchg
es
cli
cmp
neg
int
fcom
and
xchg
mov
pop
or
into
dec
ds
shr
sbb
es
jge
pop
or
sbb
adc
test
xchg
outs
cld
dec
sbb
aaa
push
test
imul
adc
movs
mov
sbb
scas
out
xor
cli
xchg
jbe
das
lahf
hlt
call
sbb
or
idiv
xchg
xor
outs
sbb
out
es
xchg
add
lock
mov
add
test
push
iret
loop
ins
out
aad
cmc
in
rcr
push
xchg
into
outs
push
inc
inc
add
push
sbb
lock
loop
xchg
pop
daa
call
pop
shr
xor
adc
popa
mov
xchg
(bad)
mov
dec
movs
add
mov
sbb
cmp
pop
lods
xchg
xor
dec
in
xchg
out
out
imul
add
pop
jp
cld
mov
sbb
xchg
repz
mov
addr16
inc
iret
ins
dec
jns
movs
loop
xchg
mov
xor
pop
cmp
mul
je
sub
and
xchg
mov
xchg
push
dec
iret
cmc
sbb
in
movs
push
test
add
repz
xor
push
sti
add
xor
or
aaa
iret
fbstp
adc
xchg
outs
sbb
mov
inc
dec
(bad)
clc
adc
ficom
sbb
movs
test
fmul
adc
xor
jmp
or
rcl
push
(bad)
mov
stos
xchg
mov
jmp
mov
lea
repnz
mov
jmp
xchg
lock
jns
xor
leave
in
cwde
push
rcl
and
push
mov
aas
inc
and
and
and
mov
out
push
push
pop
cmp
(bad)
adc
sbb
jnp
lds
jl
mov
fisubr
push
mov
aam
aam
push
push
cwde
(bad)
xchg
or
push
lea
pop
xchg
test
add
push
out
les
pop
mov
fidiv
and
jle
ret
push
inc
push
and
fld
fs
fcmovu
dec
lods
adc
cmp
push
mov
adc
push
sub
fsubr
mov
movs
inc
sahf
jmp
inc
(bad)
mov
mov
jns
mov
dec
call
ficom
mov
pop
xor
mov
xchg
fwait
sti
add
xor
mov
mov
cli
pop
xor
pop
movs
sub
cmc
or
mov
ret
mov
jle
test
mov
scas
sub
ds
sahf
lods
(bad)
mov
rcr
pop
jae
lock
pushf
enter
enter
or
add
repz
xor
fld
inc
arpl
push
inc
mov
and
cmc
xchg
inc
lock
mov
aam
pushf
repnz
sahf
mov
popa
jge
fcom
jnp
clc
push
and
xchg
gs
sti
and
repz
(bad)
loop
xor
adc
pop
sub
hlt
pop
dec
pop
scas
ret
push
icebp
xor
stos
xlat
lods
add
out
and
jmp
movs
icebp
cmps
and
sub
dec
mov
in
jns
loopne
out
jnp
cmp
inc
cmp
mov
jo
lea
inc
dec
jne
inc
jge
adc
lods
mov
rcl
loopne
mov
xlat
iret
pop
and
add
add
cmps
xchg
(bad)
adc
dec
test
dec
add
dec
adc
test
pop
push
inc
fdiv
mov
mov
sub
sub
gs
ja
aas
lods
xor
mov
mov
mov
jne
push
rcr
sbb
and
fldenv
test
sbb
cdq
xchg
jle
sahf
mul
aam
xchg
cmps
and
stos
mov
ror
outs
aam
neg
outs
add
dec
(bad)
xchg
mov
xchg
mov
cdq
xor
mov
jne
dec
and
je
(bad)
or
sbb
mov
push
sbb
jns
mov
dec
xor
mov
mov
pop
(bad)
dec
jbe
into
test
nop
mov
dec
not
xchg
xor
jge
cmp
ins
pop
push
nop
pop
xor
and
ss
(bad)
pop
lods
mov
add
je
popf
and
mov
mov
scas
jne
or
pop
pop
in
mov
push
cwde
pop
inc
ret
ffreep
ret
xor
ins
add
push
int
ror
in
rol
inc
inc
in
push
jbe
lods
stos
stc
push
cld
sbb
ds
jo
sti
(bad)
add
pop
repnz
inc
(bad)
dec
xor
lea
fsincos
ficomp
pop
test
or
popa
push
(bad)
mov
ret
inc
xor
adc
fsub
jg
into
stos
adc
xor
std
xchg
mov
cmps
push
adc
pop
leave
jns
in
test
jbe
ror
rcl
xchg
mov
sbb
and
lods
repz
clc
mov
dec
adc
rcl
outs
mov
and
lods
dec
jmp
and
jl
sbb
retf
jbe
jle
cmp
push
mul
(bad)
pushf
retf
hlt
mov
or
mov
scas
retf
sub
mov
ss
push
aas
add
fdiv
fs
arpl
clc
gs
pop
(bad)
fild
arpl
cld
adc
xor
pop
pop
call
nop
test
out
push
mov
sbb
ss
inc
sub
cmp
cmps
jle
mov
add
ja
sbb
jp
cmp
outs
lea
repz
jmp
cli
push
cld
cs
pusha
or
in
jmp
arpl
sub
adc
jge
pop
push
cmp
loop
jg
cdq
rcr
loope
mov
inc
leave
pop
jo
test
jae
add
scas
sub
jns
jp
jg
adc
sbb
retf
jl
push
dec
push
push
pop
outs
push
clc
out
xor
sub
outs
cmp
test
es
xor
cli
xor
clc
jecxz
in
lock
adc
mov
cmp
push
in
xor
xor
fsubr
add
inc
scas
adc
push
lock
xor
dec
push
pop
loope
jbe
ja
xor
jge
xor
inc
(bad)
mov
and
out
sbb
mov
xchg
pop
(bad)
lds
jge
out
stos
xchg
mov
mov
dec
pushf
mov
icebp
sub
pop
xor
sub
movs
pop
adc
mov
cmp
xor
and
pop
sbb
lods
cli
dec
mov
fiadd
lea
xor
ss
mov
add
loop
inc
fcmovnu
pop
cmc
fistp
adc
loope
jns
jmp
xor
jae
ror
sbb
mov
out
lahf
sbb
add
popa
jne
fs
test
xchg
stc
xchg
and
loopne
push
rol
aad
std
popa
shl
and
push
jg
mov
ja
xchg
xlat
fdiv
cmp
test
hlt
clc
inc
jo
sub
test
dec
add
mov
cdq
mov
mov
adc
shl
retf
js
test
add
outs
push
add
jo
adc
outs
pop
jmp
adc
js
or
or
mov
(bad)
jmp
adc
rol
dec
jno
fnstenv
iret
dec
data16
jp
pop
fstp
push
push
aaa
and
inc
out
sbb
xchg
adc
popf
repnz
push
sbb
xlat
mov
or
shr
inc
pop
ja
mov
pop
loop
fld
cld
lock
(bad)
jmp
aaa
or
xlat
dec
hlt
xor
add
add
aam
jbe
mov
inc
rcr
mov
pop
mov
or
or
jle
jle
in
ins
(bad)
out
cmp
in
test
enter
sbb
enter
or
ret
call
lods
bound
nop
jmp
or
mov
sbb
popf
outs
test
test
inc
stc
xor
and
add
stos
emms
adc
mov
pop
jmp
adc
inc
mov
repz
and
mov
scas
pop
mov
imul
ja
je
jg
xchg
mov
cmc
popf
push
retf
jns
cmps
mov
sbb
mov
pop
push
mov
mov
and
jno
je
cdq
and
int
retf
adc
repz
lds
ins
and
les
push
stc
inc
pop
adc
xchg
rcr
inc
mov
xor
or
clts
sub
in
and
xor
mov
in
pop
mov
outs
dec
or
movs
test
pop
stos
sbb
mov
mov
cli
retf
xchg
dec
mov
das
adc
xor
cs
jle
clc
xor
xor
push
test
movs
lahf
mov
mov
jne
pusha
outs
scas
adc
in
mov
ret
cmp
or
retf
push
xor
leave
adc
mov
(bad)
dec
jne
imul
shl
mov
jae
cli
or
movs
es
push
and
jmp
aam
cmps
mov
addr16
mov
xchg
mov
dec
and
dec
xor
sub
stos
or
leave
test
mov
jno
sub
clc
and
dec
in
sbb
leave
popf
dec
imul
and
rcr
ficom
jl
add
cmc
aas
out
jmp
dec
popf
push
pop
test
or
out
inc
push
fdiv
xlat
mov
fadd
xchg
add
jge
jp
lds
inc
jle
fiadd
jecxz
in
push
loope
repnz
xchg
aaa
dec
(bad)
int
repnz
dec
xchg
stos
and
mov
lods
shl
pop
sbb
int
jns
sbb
inc
ftst
mov
aam
mov
mov
mov
repz
push
out
sub
xor
xchg
dec
add
xchg
in
cli
mov
popa
int
push
test
and
adc
mov
pop
and
sbb
cmp
ds
mov
mov
imul
sbb
rcr
lods
xchg
cmps
out
fptan
neg
cmp
pop
mov
push
mov
push
push
ror
movs
pop
add
sahf
xor
mov
sbb
ja
pusha
mov
add
addr16
push
push
jmp
cmc
daa
sbb
jle
push
xchg
sbb
ins
aad
inc
or
addr16
jbe
imul
push
loope
inc
jp
mov
jp
pop
sbb
push
data16
lea
dec
inc
xchg
retf
ins
sub
jns
call
push
aam
scas
and
enter
jle
pop
nop
not
imul
sbb
xchg
push
and
iret
xor
push
or
add
js
pop
xchg
fs
jmp
gs
push
jmp
ffree
imul
sub
sub
dec
sbb
fwait
mov
jb
jmp
add
loopne
jp
sub
dec
push
push
sbb
push
loope
movs
mov
mov
mov
rol
mov
sbb
je
pop
leave
repz
add
daa
fild
enter
or
jo
mov
push
ins
pop
add
popa
mov
clc
mov
xchg
mov
fisub
or
dec
fnsave
pop
loope
sar
shl
rcl
outs
out
leave
dec
ret
sbb
jo
jmp
push
rcr
loopne
jge
dec
jbe
xor
test
loop
loopne
push
inc
mov
jp
cmp
add
mov
sub
outs
inc
pop
mov
sub
jmp
pop
sti
cmp
mov
xor
xchg
enter
mov
jno
jae
stos
loop
dec
pop
icebp
pop
and
int
pop
in
out
sbb
adc
cmps
mov
mov
mov
(bad)
pop
cdq
inc
fucomip
idiv
out
fdivr
ins
sub
and
popf
das
loope
int3
sbb
push
in
push
cmc
mov
push
cmps
scas
rcr
sub
jne
test
loopne
push
lock
shl
xchg
outs
cmp
sbb
xchg
jb
lock
dec
shl
into
mov
or
sbb
push
or
lods
mov
sub
xor
or
mov
(bad)
cmps
das
xchg
fnstsw
push
dec
mov
push
arpl
outs
in
and
ficomp
outs
push
and
push
pop
xchg
sub
pop
mov
and
and
cmc
(bad)
pop
jl
clc
push
lods
xchg
inc
or
push
add
mov
mov
cli
out
shl
and
repnz
clc
sub
push
sub
fsub
mov
hlt
inc
mov
sub
cwde
test
in
arpl
shl
jecxz
sub
cmps
int3
add
cld
div
pop
(bad)
cmp
stos
mov
out
xor
outs
cmp
pop
and
ja
adc
adc
lds
hlt
push
ja
push
adc
inc
mov
lea
push
cld
in
xchg
sub
jl
mov
or
sbb
lahf
push
pop
push
and
inc
mov
pushf
daa
jns
dec
mov
sbb
push
ins
arpl
adc
mov
adc
cld
arpl
in
(bad)
pusha
repnz
xchg
cld
mov
sbb
lahf
(bad)
idiv
and
jmp
test
popa
(bad)
mov
shl
out
inc
test
fmul
mov
and
push
outs
adc
xchg
or
add
dec
es
sbb
dec
pop
pop
sub
push
pusha
je
jns
nop
cld
jo
xchg
push
or
inc
xchg
dec
jo
hlt
fpatan
stos
inc
ja
into
(bad)
aam
aaa
push
data16
cmps
push
scas
lahf
icebp
xor
cmp
clc
push
sub
(bad)
jge
lahf
pop
inc
xchg
dec
xor
xor
mov
inc
push
mov
sub
(bad)
rol
jmp
mov
mov
mov
aas
in
mov
cmp
bswap
mov
fstp
stos
adc
fistp
add
pop
or
push
sub
push
jg
fwait
in
cwde
jb
nop
ret
pop
out
pop
xchg
and
push
rcr
cli
xlat
mov
mov
push
xlat
dec
pop
lds
sub
add
push
inc
mov
inc
(bad)
fisttp
das
fstp
scas
mov
mov
aad
sbb
add
add
fild
imul
sar
pop
dec
xor
jo
mov
sub
out
xor
adc
stos
ins
stos
sar
mov
cmp
and
sub
rcr
and
(bad)
pop
or
dec
not
popf
hlt
jge
shl
xchg
dec
sub
call
rcr
repnz
gs
pushf
xor
mov
arpl
jns
das
lds
arpl
add
out
movs
add
retf
mov
xchg
and
aad
sar
out
and
popf
lods
xchg
dec
pushf
xchg
fld
add
sbb
test
mov
dec
xor
mov
loope
rcr
mov
dec
cld
sbb
stos
sbb
or
popf
inc
pop
push
(bad)
fidivr
cmp
cs
fidiv
xchg
mov
push
cs
jb
add
mov
stos
rcl
xor
por
cmp
xor
out
test
bswap
dec
in
mov
nop
cmp
(bad)
fadd
mov
call
retf
in
call
xor
out
shl
es
dec
cmp
imul
inc
dec
jno
repz
lods
fxch
std
mov
cmp
jbe
fist
inc
fnstenv
jl
cmp
mov
mov
mov
fimul
outs
xor
sbb
or
pop
mov
xor
xchg
int
add
lock
clc
lock
jo
dec
and
setb
push
not
push
mov
call
call
jmp
test
pushf
mov
bt
cmc
cmp
cmp
pusha
pusha
mov
mov
lea
jb
bswap
mov
bsf
mov
test
shr
jmp
mov
pusha
stc
add
push
pushf
test
push
call
jmp
mov
lea
jae
btc
mov
bt
shr
shl
bt
mov
rcl
clc
movsx
mov
bt
cmc
sub
pusha
cmc
push
repnz
pusha
push
lea
jne
btr
rcr
pusha
mov
shld
sub
jmp
shl
(bad)
sub
xor
(bad)
mov
mov
inc
in
mov
adc
xchg
inc
movs
lds
clc
push
outs
adc
int3
push
mov
add
sti
rcl
push
push
push
dec
pop
retf
in
jnp
cwde
mov
outs
pushf
jmp
sbb
imul
jp
adc
sub
loope
inc
repz
xor
(bad)
out
pop
repnz
sub
sub
aaa
xchg
dec
in
sub
dec
int3
dec
sbb
xor
cmp
inc
in
shr
push
mov
test
adc
adc
pop
(bad)
adc
in
pop
imul
sbb
mov
jo
repnz
out
pop
sti
enter
call
in
loope
js
mul
pop
(bad)
lods
int
mov
in
pushf
sbb
jp
pop
xor
cmc
inc
lods
mov
popf
out
out
int
xor
shl
scas
int3
pop
repz
mov
inc
je
mov
add
mov
xchg
mov
inc
inc
cmp
sti
xor
lock
sti
out
out
dec
jmp
fist
hlt
aad
push
pusha
(bad)
out
sub
cmps
in
xor
out
pusha
ss
mov
int
into
inc
pushf
pop
dec
dec
cdq
or
pop
(bad)
loope
push
inc
imul
lds
or
cdq
sbb
push
pop
push
inc
ror
xor
push
push
lea
mov
lods
lea
bound
adc
xchg
into
jmp
ret
inc
into
pop
mov
inc
sets
and
nop
lea
clc
clc
xchg
bsf
cmp
movsx
mov
clc
pop
bt
pop
lea
pop
pop
mov
setle
rcl
not
cmc
test
add
mov
setl
not
rep
bswap
pusha
mov
jmp
sbb
mov
cmp
pusha
test
and
pusha
push
add
jns
cmc
add
bt
add
pushf
call
pushf
cmp
add
pushf
bt
cmp
stc
add
pushf
call
jmp
in
sbb
push
jbe
xchg
cmp
push
fwait
pop
fsub
mov
test
popa
jns
jne
jbe
ss
sar
es
arpl
shl
mov
fcmovnu
test
nop
xchg
and
jmp
sub
mov
cmp
jle
out
xchg
push
popf
clc
imul
and
jge
mov
sbb
inc
xor
xchg
dec
xchg
push
xchg
jbe
push
pop
(bad)
lods
cdq
pop
add
fcomp
or
mov
sahf
mov
inc
xchg
shl
pushf
pushf
lea
jmp
movsx
pop
xchg
pop
movsx
pusha
pusha
mov
movsx
mov
jmp
xor
stc
jmp
sbb
clc
cmp
bt
clc
lea
jmp
pushf
mov
mov
jmp
lea
jb
push
pusha
mov
push
pusha
pushf
mov
push
ret
stc
bts
sub
jmp
push
pushf
mov
mov
call
jbe
jbe
pop
jno
ins
mov
pop
arpl
arpl
cmps
add
xchg
pop
jge
mov
sbb
add
loopne
(bad)
leave
iret
stos
mov
mov
push
ret
cmp
shr
push
cmp
pushf
cmp
xchg
xchg
jmp
or
lahf
lahf
mul
jge
aas
sub
sbb
jb
cli
xlat
push
inc
fst
pushf
push
add
ds
imul
popf
xchg
loope
dec
push
fisubr
cmp
and
jb
fs
jg
add
je
(bad)
(bad)
(bad)
mov
and
add
or
add
lods
jmp
cmp
jl
push
pusha
lea
ja
push
pop
lea
setg
pop
movsx
call
push
pushf
lea
ja
push
call
mov
mov
mov
push
ret
push
mov
pushf
push
ret
lea
call
call
adc
mov
call
pushf
pusha
jmp
(bad)
std
call
push
xchg
and
bound
rcr
sub
dec
ins
(bad)
js
jnp
loopne
cdq
mov
lods
call
or
and
popf
pop
inc
inc
in
push
out
sti
lahf
cmp
test
push
sar
xchg
cmp
lods
fild
movs
xor
loopne
lods
dec
fild
in
add
sub
ins
cmp
adc
mov
scas
add
mov
lods
call
push
call
jae
add
call
jb
mov
shl
lea
call
add
pop
ret
push
push
mov
mov
mov
shl
lea
call
adc
sub
jne
mov
sub
pop
pop
ret
mov
push
pusha
lea
jne
jmp
pushf
lea
je
test
pushf
clc
add
shl
bsr
cmc
sub
pop
stc
shr
shr
not
pushf
mov
mov
shl
add
call
pusha
lea
lea
mov
mov
mov
jmp
mov
lea
ja
movzx
bswap
movzx
mov
pop
pusha
setle
pusha
movzx
mov
lea
call
mov
push
movzx
pushf
mov
pusha
mov
mov
call
sub
sub
mov
shr
sub
call
stc
pop
ret
cmp
mov
push
lea
jne
rol
sub
shr
shr
mov
sar
cmp
rcr
and
add
call
mov
jmp
lea
je
bt
stc
pusha
cmp
jmp
stc
imul
test
cmp
add
pusha
pushf
pushf
lea
jmp
jmp
push
pusha
lea
je
cwde
movzx
movzx
jmp
mov
push
push
mov
mov
pusha
mov
lea
jmp
mov
mov
sbb
xchg
jp
rol
push
dec
sub
nop
jmp
ret
(bad)
daa
int
or
add
mov
jns
adc
push
jl
bound
dec
test
stc
jb
mov
mov
add
adc
sub
push
xor
(bad)
jle
shr
mov
mov
call
cs
jge
push
mov
sub
arpl
push
sbb
hlt
lea
pop
lods
loop
leave
inc
fwait
push
jle
mov
xor
mov
and
pusha
push
pushf
push
ret
sub
call
pushf
clc
cmp
sub
cmc
cmc
xor
jmp
pushf
pushf
mov
pushf
pusha
mov
push
push
ret
not
pushf
mov
pushf
call
repnz
pushf
push
pushf
lea
jne
bsr
pusha
add
xor
mov
bsr
btc
sub
test
btc
rcl
lea
clc
cmp
pusha
mov
sub
stc
stc
push
cmc
push
pop
call
stc
test
pushf
mov
lea
je
pushf
pusha
pusha
clc
sub
stc
mov
cmc
stc
cmp
pushf
push
pushf
lea
jmp
call
jmp
mov
push
lea
jae
xchg
mov
sub
movsx
mov
push
add
sub
bsf
mov
pop
sub
xor
mov
pushf
call
mov
mov
push
lea
jmp
mov
lea
je
movzx
lea
not
mov
lea
push
lea
call
pusha
adc
pusha
mov
push
lea
jae
stc
and
push
bt
mov
pop
aad
mov
mov
rcr
or
shr
mov
shl
shld
btc
cmp
pusha
mov
mov
call
add
inc
ins
outs
bound
inc
jb
add
add
add
cmp
sets
push
sets
jmp
pop
cmp
movs
fmulp
push
dec
push
retf
fidiv
pop
adc
inc
or
imul
shl
test
lods
push
sbb
outs
adc
push
std
pop
in
div
add
mov
inc
nop
(bad)
push
lods
sub
inc
mov
xor
popa
mov
fsub
retf
js
lahf
in
push
cmp
popf
cld
in
push
mov
lahf
sahf
repz
mov
rol
bt
pushf
shl
cmc
add
call
call
jmp
cmc
jmp
mov
loopne
mov
rcl
dec
xor
mov
test
int
dec
gs
imul
in
push
mov
sar
call
adc
cmp
aad
cmp
lods
jo
or
xor
nop
cmps
ins
mov
movs
cmp
jbe
jnp
push
xor
xor
add
daa
clc
clc
cmp
test
push
mov
or
cmp
test
je
pop
mov
ins
pushf
cli
xchg
jp
xchg
jle
push
test
mov
dec
rcr
rol
cmp
add
sete
rep
not
movzx
movzx
pushf
mov
bswap
movzx
lea
movzx
mov
pusha
mov
call
cmp
ss
outs
push
jle
(bad)
and
shl
lea
call
pop
ret
xor
test
call
call
stos
mov
mov
pushf
lea
jmp
pushf
push
lea
jae
inc
pusha
cmp
lea
mov
dec
lea
setbe
adc
mov
and
bts
lea
add
mov
clc
jmp
call
fs
icebp
repz
cs
push
outs
sbb
pushf
popa
das
ficom
mov
mov
int3
pop
inc
jae
cmps
ins
std
fdiv
icebp
adc
or
shr
sbb
sar
pop
fisttp
rcr
push
stos
dec
sbb
sbb
out
xor
mov
fistp
jno
sbb
cmp
ins
xchg
ret
movs
outs
dec
jmp
cmps
ror
and
or
push
call
pusha
xor
rcr
call
dec
inc
inc
xor
cs
dec
dec
add
test
or
add
(bad)
or
ret
rol
clc
mov
cmc
cmp
jl
clc
add
stc
jmp
jmp
sub
das
inc
mov
shr
shr
shl
mov
add
add
push
mov
bt
jmp
jmp
movsx
push
movzx
bswap
lea
push
mov
pushf
pushf
jmp
retf
pop
push
sbb
cmp
loop
push
push
daa
jle
xchg
in
call
mov
mov
ret
push
mov
ficomp
xchg
jmp
and
in
dec
xchg
cmp
jl
push
jns
shl
in
mov
stc
pop
out
xor
xor
ins
or
jne
(bad)
cmp
jmp
lea
jns
je
cmp
movsx
daa
xor
mov
mov
pushf
mov
cmc
sar
add
shr
lea
push
mov
stc
test
or
pusha
call
and
fldcw
gs
jns
add
ret
ror
(bad)
lahf
ins
cmp
jae
mov
popf
cdq
retf
dec
test
and
ss
iret
fidivr
pop
hlt
jae
inc
shl
xor
pop
data16
fucom
or
add
aad
movs
mov
xor
test
or
jno
pop
add
cmps
inc
rep
std
(bad)
loope
or
retf
out
in
aam
dec
or
jae
mov
or
gs
add
jmp
mov
jmp
bsr
movzx
mov
pushf
mov
cmp
pushf
pushf
pusha
jmp
cmp
push
push
pushf
lea
call
lea
jae
lea
adc
neg
stc
pop
shld
xor
pop
seto
mov
ror
rcl
cmp
lea
lea
lea
mov
call
lea
jne
aas
setns
xor
inc
shld
cmc
or
mov
pusha
sbb
adc
add
call
lea
jb
aam
cmp
setl
lea
lea
mov
call
setle
mov
pushf
pushf
mov
mov
push
lea
jmp
mov
lea
ja
push
lea
jge
pushf
pushf
lea
jb
push
cmp
push
jmp
mov
ins
cmps
popf
push
xchg
dec
ltr
mov
add
std
and
mov
jae
jnp
and
mov
ja
sub
xchg
push
push
pop
lahf
add
inc
sub
xchg
add
pop
xchg
and
sti
pop
add
outs
mov
daa
loop
test
in
outs
cmp
lds
jne
outs
add
pop
je
or
fimul
xchg
add
clc
imul
push
call
mov
arpl
xchg
dec
xor
cld
(bad)
fbstp
cmps
arpl
shl
mov
jp
inc
mov
adc
retf
repz
jns
pop
mov
loope
out
inc
xchg
jmp
std
test
ins
fnstsw
pop
hlt
popf
imul
lds
lahf
popa
xchg
mov
push
adc
sub
or
push
push
pusha
clc
add
add
inc
fwait
mov
lahf
popf
xchg
jae
cmps
pop
sub
jge
and
in
je
cmp
arpl
lds
scas
xor
dec
mov
lods
dec
gs
dec
add
push
jmp
adc
jne
inc
int3
imul
sar
pop
or
fsub
add
addr16
out
sub
gs
icebp
jae
mov
repnz
movs
sbb
and
sti
cmp
sti
loope
lods
dec
inc
cmps
idiv
sbb
add
jmp
xor
pop
stos
nop
iret
jmp
aaa
in
mov
out
dec
out
lock
sti
fwait
inc
daa
xor
mov
jge
(bad)
and
call
movs
cmps
jecxz
in
retf
in
mov
in
mov
jl
test
pop
cmc
mov
pop
adc
in
add
xchg
mov
std
cmps
jb
out
test
add
fld
stos
retf
and
loopne
inc
ja
ret
in
sti
inc
(bad)
fcom
mov
ds
ins
call
test
jp
ret
sbb
xor
mov
stc
xlat
and
adc
pop
sbb
pop
mov
ror
pushf
jp
mov
inc
mov
lods
dec
pop
jo
jbe
cs
jge
enter
mov
push
dec
xchg
rcl
scas
add
std
aaa
inc
mov
sbb
jns
mov
lahf
push
fpatan
loope
sbb
jb
and
(bad)
push
or
ins
xor
pop
shr
pop
hlt
jmp
mov
xor
iret
xchg
mov
bound
cmps
jle
add
push
test
retf
lahf
enter
pop
iret
pop
pusha
lock
fiadd
mov
push
cli
pop
ds
loope
ret
gs
gs
fst
fs
jg
aam
test
sbb
sub
fstp
jmp
mov
add
mov
pusha
loopne
dec
add
pushf
push
and
or
pop
out
cmp
hlt
and
dec
dec
gs
dec
cmp
enter
sbb
jns
mov
pop
(bad)
std
test
sbb
mov
loop
dec
sub
jg
jb
or
mov
(bad)
jl
dec
(bad)
mov
cmps
pop
mov
pop
lds
xchg
bound
movs
mov
jp
sub
lods
lds
add
imul
push
or
mov
test
xor
(bad)
(bad)
out
hlt
daa
out
sub
dec
into
mov
mov
rol
sub
mov
ss
xor
test
loop
xchg
sub
mov
leave
ror
cmp
push
mov
ret
in
lods
mov
jae
shr
rol
scas
cmp
lods
cli
and
push
hlt
cmp
stos
bnd
sbb
sbb
imul
pop
mov
push
mov
or
and
outs
add
fnstcw
mov
(bad)
aad
adc
es
retf
pop
(bad)
fcom
push
das
pop
xor
(bad)
in
and
jns
ss
mov
jle
dec
repnz
pusha
or
jg
push
or
mov
adc
out
add
mov
sub
push
xor
xor
pop
adc
inc
mov
xor
ret
xchg
vpmuludq
push
mov
sub
dec
xchg
inc
jbe
xchg
fsubr
das
xor
sbb
mov
cmp
or
les
call
repnz
mov
int3
hlt
jecxz
imul
mov
pop
enter
mov
sbb
call
xor
fild
xbegin
ret
or
add
and
bound
adc
loope
push
xchg
ins
cmp
sub
sub
mov
(bad)
sbb
in
lods
(bad)
sub
adc
inc
sub
int3
sub
lods
push
push
or
test
popa
jge
rol
add
push
jl
scas
fisttp
sbb
mov
(bad)
pop
sub
(bad)
and
pop
xchg
cdq
push
hlt
pop
daa
fcomp
retf
pop
xchg
mov
push
dec
xchg
jnp
shr
cmc
std
out
jp
push
jno
es
mov
movs
out
cmc
xlat
out
neg
xchg
sahf
cmp
pop
or
dec
mov
stos
mov
push
mov
daa
dec
psrld
add
int3
jecxz
mov
iret
arpl
and
pop
jbe
cmp
inc
das
jg
and
sbb
push
retf
xor
dec
sbb
or
mov
jl
je
leave
out
dec
lahf
aad
push
xchg
adc
jle
mov
inc
(bad)
popa
jo
test
inc
and
(bad)
daa
(bad)
pusha
(bad)
not
sbb
jnp
loop
xchg
cmp
test
dec
fs
pusha
mov
test
cmp
jl
sub
fcomip
inc
imul
push
test
dec
enter
mov
add
dec
pop
push
xchg
inc
add
push
call
lock
xor
leave
cmp
loop
add
test
repnz
stos
mov
(bad)
dec
into
fld
scas
dec
push
pushf
pop
ss
sub
lock
arpl
adc
cmc
shl
cdq
cmps
push
int
jge
shr
jg
ds
mov
mov
jno
push
loop
ds
aam
js
xor
or
inc
add
push
xor
adc
cld
push
adc
outs
sbb
lahf
ins
and
push
mov
daa
and
xchg
sub
daa
adc
stc
fldenv
and
sub
push
cdq
adc
aaa
dec
cmp
lods
and
imul
shr
les
cmps
jl
adc
jno
mov
data16
lea
ja
fwait
xor
mov
jg
bound
xlat
sub
or
in
mov
add
add
mov
dec
imul
xor
cmp
xchg
imul
lahf
rcl
mov
adc
add
mov
sub
inc
fstp
retf
retf
imul
adc
cmp
cmc
xor
arpl
adc
pop
out
sub
cdq
mov
add
test
dec
test
inc
aad
add
xchg
jmp
cmp
adc
jmp
ret
push
not
popa
xor
jnp
rcl
aam
mov
shl
ins
aam
xchg
gs
std
call
xor
sub
adc
push
lock
cmp
inc
shl
mov
inc
aaa
xchg
and
fwait
pop
outs
cs
fldenv
imul
or
aad
adc
gs
or
xchg
mov
adc
jmp
mov
outs
movs
mov
push
ins
and
pusha
lds
xor
adc
adc
jp
in
cdq
cmovo
cwde
retf
scas
cmp
sbb
push
sbb
lea
dec
movs
out
xchg
imul
xchg
mov
inc
mov
enter
or
xchg
je
mov
loope
ins
cdq
(bad)
sub
mov
and
in
jmp
daa
call
les
inc
mov
xor
pop
aam
mov
ins
cmps
icebp
mov
call
mov
pop
ret
mov
mov
cmps
cmc
mov
dec
add
test
mov
mov
cmc
jg
xchg
icebp
jnp
push
pop
out
fist
cld
xor
push
mov
sub
test
jb
mov
loopne
pop
xor
mov
gs
xchg
add
and
inc
mov
lea
fisub
cld
jb
mov
jo
lods
sub
repnz
(bad)
push
test
sti
dec
push
sbb
mov
mov
stos
daa
cld
fs
push
ror
shr
mov
dec
jmp
jno
dec
lods
repnz
pop
push
and
not
pop
mov
and
dec
jno
push
push
out
add
push
daa
xor
mov
mov
(bad)
stos
es
es
add
test
mov
aaa
add
cs
(bad)
stos
mov
cmp
xor
jle
sbb
mov
dec
cmp
jmp
or
call
jmp
cmps
mov
pusha
call
push
xor
out
adc
ja
fdivp
aaa
cmps
cmp
jno
cmps
movs
retf
and
scas
sub
mov
cmp
dec
mov
sub
and
or
jns
push
mov
loopne
fild
retf
sbb
cmps
xchg
ret
leave
test
(bad)
(bad)
movs
jo
dec
test
add
mov
cmp
mov
cmp
je
adc
ret
pop
out
dec
jge
call
test
fwait
shr
jle
fadd
sub
mov
and
outs
inc
push
lea
inc
jnp
(bad)
jmp
(bad)
mov
pop
in
add
mov
lods
cmp
repz
jle
pop
rcr
mov
call
and
ret
xchg
sbb
dec
dec
jae
cmp
test
ins
js
lds
test
arpl
sbb
not
push
sbb
cmps
rcl
outs
push
jbe
sbb
pop
dec
iret
in
push
add
ds
push
sub
lea
adc
mov
xchg
add
push
call
mov
stos
dec
call
sub
jns
pop
and
dec
mov
push
or
idiv
push
jge
in
es
push
in
rcr
fiadd
ss
cmp
mov
jle
lods
mov
xchg
loopne
and
jns
sub
stc
movs
dec
lods
add
std
out
inc
dec
fcomp
cmc
jg
inc
arpl
sub
xchg
loop
mov
(bad)
cmp
push
mov
sub
mov
xchg
jbe
or
sti
and
sbb
xor
push
dec
call
nop
xchg
inc
sbb
xchg
stc
sahf
leave
call
sub
aam
dec
loope
push
mov
push
cmp
(bad)
jmp
or
inc
xchg
sbb
mov
shl
bound
cmp
jns
mov
dec
mov
xchg
mov
or
cld
cmps
sbb
out
outs
bswap
or
jmp
or
daa
and
mov
daa
pop
icebp
repnz
hlt
icebp
outs
stos
leave
push
shl
xor
and
fistp
loopne
ret
add
pop
int3
fwait
test
and
scas
push
shr
push
mov
lock
mov
jmp
push
scas
in
jnp
pop
repnz
movs
mov
loop
jne
ret
mov
repz
and
(bad)
std
in
and
popa
jmp
retf
or
mov
rcl
mov
ja
push
add
jmp
cmp
out
fimul
sahf
mov
retf
stos
or
pop
icebp
pop
pop
out
xchg
sti
cmp
les
xor
xchg
cld
mov
push
ret
push
dec
push
pushf
add
sti
je
loope
stos
(bad)
jge
int3
push
retf
lds
xchg
loop
dec
lahf
pop
arpl
call
and
repnz
je
dec
and
test
(bad)
xchg
mov
repz
push
mov
or
or
xchg
adc
dec
call
leave
js
pop
add
or
adc
mov
add
test
stc
out
and
jg
inc
xchg
iret
mov
scas
sbb
pop
sbb
fnsave
shr
push
loope
popf
jg
mov
sub
sti
aaa
out
fsub
and
inc
cvtpi2ps
int
xchg
sub
aam
xchg
jns
xchg
dec
dec
sub
ins
xor
push
adc
mov
mov
or
repz
iret
fnstenv
push
adc
mov
cmp
jne
or
sub
mov
pop
out
cmps
xor
jg
test
cmp
inc
fwait
or
ins
shr
movs
(bad)
pop
das
icebp
mov
push
mov
jp
repz
dec
(bad)
mov
mov
fs
jle
aas
int
pop
add
cmc
or
inc
push
(bad)
loopne
xchg
repnz
repz
or
dec
ficomp
inc
push
mov
sub
iret
jmp
xor
mov
mov
and
add
(bad)
jg
enter
push
dec
sub
sbb
xchg
(bad)
call
adc
mov
jge
xchg
xchg
test
jle
xor
(bad)
call
into
fsubr
push
xchg
es
sbb
xor
mov
adc
fnstenv
aaa
mov
or
test
mov
and
jne
sbb
and
pop
inc
jno
in
sbb
aam
in
sbb
pop
sub
mov
(bad)
adc
out
ror
inc
gs
loopne
xchg
rol
cwde
jp
dec
push
push
push
inc
sub
sbb
push
popa
sets
jae
(bad)
repnz
cdq
mov
jno
aad
push
xchg
outs
xchg
pop
js
mov
movs
cld
cmp
clc
mov
mov
(bad)
scas
sub
dec
push
push
sub
fiadd
movntps
leave
push
push
or
sub
lahf
fist
jl
jno
out
test
push
aas
dec
loop
push
mov
in
dec
out
in
in
xchg
and
fsub
data16
not
mov
(bad)
pop
fcomp
mov
out
fs
mov
shr
adc
pusha
shr
inc
pop
(bad)
test
push
(bad)
or
iret
push
mov
imul
dec
dec
or
clc
stos
js
mov
mov
pop
(bad)
lods
cmps
add
inc
call
push
div
sbb
(bad)
in
fldcw
aam
jnp
push
fdiv
xchg
movs
dec
jp
add
pop
int3
mov
sub
inc
imul
xchg
cwde
cmp
(bad)
scas
dec
mov
rcl
in
shl
xchg
mov
(bad)
call
enter
idiv
mov
xor
int
out
cdq
jl
cmp
cmp
adc
jg
xchg
add
mov
int3
cmp
ret
pop
mov
jbe
rcr
fistp
inc
sub
(bad)
call
rcr
pop
iret
and
push
jp
push
les
add
mov
mov
or
xchg
nop
cmp
mov
fisubr
jnp
popf
mov
(bad)
adc
jne
jge
inc
inc
cmp
inc
or
por
(bad)
leave
int
pop
icebp
sbb
cmps
dec
mov
push
daa
xchg
mov
in
sahf
fistp
dec
jo
sbb
aad
fs
jl
push
mov
mov
shl
lahf
not
cwde
xor
in
push
adc
in
lock
sar
push
test
movs
mov
xor
sub
lods
out
js
jns
pop
scas
adc
ja
shl
pop
cmps
jb
push
mov
xchg
jae
sbb
dec
push
or
movs
out
jno
mov
xchg
scas
js
mov
js
rcl
sbb
xchg
adc
not
psubb
push
sub
mov
sbb
scas
fwait
jnp
mov
and
and
out
mov
push
push
push
shl
pop
mov
sbb
aaa
outs
or
sbb
loopne
int
xor
ja
push
pusha
test
or
adc
push
inc
hlt
ins
jl
ins
leave
gs
sti
sahf
fdiv
fs
cmp
rcl
ret
popa
rol
pop
out
hlt
adc
jecxz
or
pop
retf
out
repnz
(bad)
out
or
dec
jnp
loope
nop
pop
jmp
nop
mov
jge
push
shl
mov
pop
add
mov
jmp
jo
mov
call
mov
ret
mov
inc
and
cmp
(bad)
mov
pop
mov
xor
addr16
mov
mov
cmp
repnz
mov
sub
sub
inc
add
fsubr
es
sub
dec
cmp
cmps
mov
enter
call
pop
leave
or
into
add
dec
aam
cmp
jmp
shl
imul
push
cmps
jnp
mov
mulps
rcl
test
movs
or
inc
mov
mov
mov
cmp
fdivp
fcomp
clc
mov
fcom
push
std
mov
dec
or
loope
(bad)
pusha
aam
cmp
retf
fst
mov
xchg
or
and
loopne
std
lods
jge
sub
xor
xor
out
fistp
mov
loope
cli
push
test
popa
retf
in
or
das
xchg
cmc
dec
jnp
pop
xchg
(bad)
cli
idiv
jb
sub
xchg
shl
into
movs
pop
jl
or
pop
hlt
lods
mov
or
sub
mul
popf
or
push
mov
or
mov
mov
adc
ret
xchg
ret
cvtpi2ps
ret
xor
cmp
dec
es
aas
push
push
sahf
int
adc
inc
or
dec
enter
xor
fs
mov
dec
idiv
pop
jae
hlt
retf
dec
aaa
sub
xchg
lds
fstp
inc
ud1
inc
push
stos
arpl
mov
ss
stos
mov
jge
dec
stos
mov
cli
sub
fwait
adc
nop
cmps
add
jno
ins
aad
rcl
fidiv
imul
daa
jmp
popa
push
cmp
loop
mov
jae
mov
pop
ds
stos
pop
rol
dec
movs
retf
pop
scas
fcmovbe
xchg
add
test
xchg
mov
push
mov
fs
xchg
inc
inc
ins
popa
aam
movs
mov
adc
stc
aad
pop
mov
je
retf
jmp
fdiv
gs
rcr
les
dec
cdq
ret
and
cmp
(bad)
in
sub
repz
lock
ss
in
pop
mov
push
popf
leave
add
mov
in
push
cwde
call
(bad)
mov
repz
inc
dec
xor
add
fs
xchg
clc
dec
test
lods
mov
inc
adc
mov
loopne
cmp
mov
fbld
fsubrp
cmps
ins
iret
(bad)
imul
stos
rcr
arpl
ret
into
cwde
std
pop
adc
adc
inc
or
clc
mov
cmp
xchg
push
cmps
or
pushf
cvtpi2ps
sar
lods
or
dec
jns
shr
jge
leave
mov
mov
cmc
nop
xor
mov
outs
sbb
or
jl
fwait
xor
and
iret
(bad)
cmc
inc
lea
mov
imul
call
std
in
jle
sub
cmp
jp
mov
imul
inc
pop
jle
add
out
inc
sbb
jle
mov
outs
repnz
pop
and
(bad)
mov
pop
ss
xchg
cdq
dec
rol
fwait
lea
mov
sar
sub
mov
mov
imul
packuswb
or
push
sbb
xor
jp
jo
push
fs
ds
outs
push
test
cmp
pop
add
mov
pop
mov
adc
pop
fiadd
ss
std
lods
or
ret
adc
ds
fnstenv
mov
int3
(bad)
lock
inc
fs
imul
xchg
stos
add
jbe
dec
bound
add
into
jecxz
mov
gs
adc
xchg
inc
mov
popa
retf
in
adc
mov
mov
push
push
mov
cmp
out
lods
jg
into
jl
bound
sti
inc
in
xchg
sbb
stos
shr
push
jnp
or
aas
jo
mov
cmp
sub
cmps
das
sahf
das
out
(bad)
bound
mov
adc
xor
icebp
arpl
sub
xlat
mov
imul
scas
mov
hlt
adc
bound
sub
or
lea
rol
cwde
pop
sbb
test
rcr
xor
and
mov
movs
jecxz
and
retf
retf
ret
retf
in
movs
retf
popa
and
hlt
mov
push
inc
xor
pushf
xchg
dec
cld
and
bound
inc
aam
jns
xchg
and
dec
dec
ja
mov
push
test
stc
adc
shl
loopne
sti
rcr
pop
rcr
mov
sti
inc
push
push
xor
push
shr
sbb
rcr
movs
fistp
push
mov
(bad)
js
jbe
out
sub
ds
mov
add
add
sbb
aas
jmp
mov
lock
pop
ja
loopne
or
mov
xchg
ret
sub
rol
std
inc
sti
add
pop
imul
jbe
int
cmp
mov
xchg
imul
test
arpl
xchg
mov
mov
push
pop
clc
add
sub
loop
push
pop
cmp
sahf
sbb
xor
sbb
fsubr
test
icebp
mov
xor
push
dec
lods
or
bound
xchg
add
cld
mov
in
and
loop
pop
and
scas
scas
fbld
dec
nop
lock
daa
add
in
lahf
out
fwait
hlt
inc
cdq
add
cmps
inc
mov
fwait
ins
add
in
mov
xchg
in
popa
sub
lock
xor
ret
pop
int3
ss
cmp
mov
out
test
dec
mov
and
mov
ret
icebp
(bad)
sub
inc
pop
es
or
out
jae
clc
shl
movs
loop
xchg
call
shl
inc
mov
add
push
jae
jl
xchg
push
test
(bad)
xor
mov
sub
int3
add
add
cmc
xor
mov
xlat
mov
mov
lods
int3
fnstsw
retf
jl
mov
mov
cmp
mov
mov
sbb
(bad)
mov
data16
sbb
pop
jge
aad
clc
push
jecxz
pop
inc
aad
cs
jge
fcom
icebp
and
inc
ins
arpl
mov
sar
mov
cmp
xchg
pop
sbb
rcl
leave
mov
inc
mov
mov
jae
xor
sub
into
mov
pop
or
scas
add
mov
outs
and
loop
jge
xlat
pop
repz
rol
js
test
cli
mov
pop
and
rcl
out
mov
add
es
cld
loope
(bad)
imul
pop
mov
dec
adc
or
les
cwde
cmp
sbb
xchg
inc
int
aaa
lods
shr
leave
inc
xor
popf
(bad)
int3
jmp
sti
loopne
push
shr
das
cmp
push
xor
xchg
and
sub
into
movs
and
hlt
mov
fs
repnz
jbe
mov
xchg
inc
mov
push
je
outs
das
mov
xor
mov
iret
sub
shl
retf
cmp
fsub
and
inc
push
mov
mov
mov
mov
mov
jbe
daa
imul
stos
aaa
adc
jp
mov
test
cmp
aam
iret
xchg
jmp
mov
pop
mov
push
js
ror
adc
repnz
inc
cmp
and
pop
inc
mov
retf
(bad)
mov
mov
mov
sub
cmp
xchg
int3
sub
jno
cmps
add
(bad)
push
push
adc
mov
mov
mov
sbb
push
mov
loope
jmp
fs
data16
or
jecxz
call
fistp
scas
dec
jmp
add
in
cmc
hlt
stos
in
lods
cli
in
add
int3
pop
into
dec
push
cmc
and
xor
fild
mov
sbb
mov
movs
jge
and
mov
push
or
mov
(bad)
fld
dec
and
shr
test
daa
xchg
cmp
icebp
call
aaa
xor
mov
inc
xor
jb
sbb
(bad)
dec
inc
test
out
cmp
and
hlt
and
xchg
pop
cmp
not
pop
lods
mov
pop
dec
push
jecxz
dec
sbb
clc
ja
loop
loope
jno
ret
dec
(bad)
in
(bad)
fdivr
retf
test
xchg
adc
add
ins
imul
mov
mov
leave
sub
jmp
pop
mov
lock
fnstsw
dec
fstp
cmp
rcl
shr
popa
loope
mov
mov
retf
ins
ins
jecxz
mov
adc
jo
stos
mov
shl
je
jns
xchg
std
xchg
xor
ins
loopne
mov
call
pop
adc
repz
jge
inc
bound
mov
push
call
inc
clc
nop
(bad)
sub
mov
adc
aam
cld
pop
mov
mov
mov
out
into
jmp
out
mov
mov
pop
pop
jne
sbb
je
jp
mov
push
push
cmp
addr16
shl
mov
ss
ins
push
add
lahf
cmp
popa
inc
fwait
inc
test
loopne
test
add
dec
add
cmps
push
sbb
jge
xor
jne
dec
into
mov
xchg
sbb
pop
mul
enter
inc
retf
jle
and
mov
jecxz
xor
in
or
test
or
cmps
iret
pop
iret
ins
mov
idiv
shl
sub
ins
add
inc
add
ret
in
or
shl
mov
sub
ret
mov
push
rcr
lods
xor
pop
and
test
(bad)
inc
add
dec
adc
dec
mov
xchg
aad
push
sbb
mov
cwde
mov
cmps
sbb
ret
dec
fiadd
cmps
fistp
(bad)
and
pop
jmp
imul
fisttp
(bad)
retf
jmp
test
dec
push
ret
mov
imul
(bad)
add
and
lock
ins
shr
enter
xor
pop
lock
xchg
sahf
pop
hlt
mov
sub
(bad)
jle
imul
lods
loope
out
imul
es
adc
maskmovq
test
jg
add
cmp
mov
std
mov
adc
and
inc
dec
pop
xchg
pop
in
xor
and
jle
fwait
sti
adc
sbb
imul
pop
scas
sub
mov
mov
pushf
lds
xchg
jmp
aad
lahf
fmul
mov
inc
add
ss
jmp
xbegin
jecxz
mov
cmp
xor
jmp
or
(bad)
xchg
mov
fstp
(bad)
and
xchg
ret
adc
adc
iret
int
add
mov
inc
aas
cli
dec
cs
je
pushf
pop
aas
dec
sbb
pushf
mov
pop
mov
es
leave
scas
fwait
mov
gs
mov
xchg
jecxz
dec
imul
jmp
movs
xchg
pop
inc
lock
ds
pop
sbb
sub
sub
jecxz
rep
jecxz
out
xchg
imul
mov
mov
xor
mov
inc
push
in
jne
test
pop
test
xchg
lods
sahf
adc
cdq
mov
loop
xchg
sbb
cmp
jmp
sub
std
jno
outs
fmul
or
sub
out
push
mov
xchg
sti
cmp
xchg
popf
mov
aad
ficomp
jae
jle
inc
call
sub
mov
bound
leave
mov
push
in
xchg
jo
loop
nop
adc
jle
jl
js
std
add
push
pop
sbb
lock
push
rcl
mov
jo
sbb
mov
sbb
dec
test
aas
xor
int3
or
inc
xchg
xlat
or
adc
hlt
mov
jmp
mov
clc
into
jp
mov
pop
ror
xchg
movs
xchg
aam
xor
ds
adc
mov
xchg
ret
and
hlt
int
xchg
retf
(bad)
push
jne
and
xlat
mov
ins
out
or
addr16
xor
jno
xlat
imul
mov
fwait
mov
imul
push
bound
or
(bad)
retf
pop
retf
lss
push
into
xor
or
fdiv
loop
fcmove
jge
xchg
in
pop
pushf
push
adc
cmp
fldenv
test
inc
popa
adc
jb
inc
push
mov
pop
pop
retf
dec
fsub
or
push
aaa
push
ins
push
mov
pop
test
xchg
sti
movs
gs
outs
sahf
icebp
inc
outs
cdq
pusha
sbb
pop
ds
shr
xor
push
mov
mov
repz
(bad)
adc
fucom
fwait
dec
mov
rcl
nop
lods
jnp
sub
or
add
rcr
rol
cmp
fs
dec
cmp
dec
pop
xchg
shl
push
in
cmp
and
dec
ficom
inc
dec
cli
xchg
out
sub
jnp
pop
sbb
dec
movs
inc
jbe
add
lea
pusha
(bad)
repz
xor
xor
mov
retf
ins
xor
neg
in
sbb
fs
repnz
xor
push
repz
stos
or
aaa
dec
sti
fcom
and
hlt
mov
retf
mov
inc
in
int3
fimul
outs
mov
ss
out
aas
fist
icebp
hlt
jnp
xor
pcmpeqd
lea
push
dec
test
and
outs
js
shl
push
push
sbb
pop
and
or
mov
sbb
std
data16
ins
mov
aaa
mov
push
sbb
into
je
push
stos
out
(bad)
fstp
or
jge
push
out
xlat
bound
jbe
mov
mov
(bad)
sub
or
scas
or
out
push
cmps
cmps
rcr
sbb
push
fwait
add
lock
ficomp
push
mov
add
push
or
mov
pop
arpl
sub
(bad)
stos
out
or
js
loop
shl
jl
cmp
xor
sbb
bswap
sub
inc
aad
mov
call
std
out
gs
int3
xchg
jmp
xor
stos
and
jns
xor
icebp
sbb
cmp
js
jo
jbe
or
test
sahf
cwde
jnp
cdq
xlat
mov
imul
cmps
pop
out
pushf
add
push
dec
cmp
sahf
mov
jl
fucom
mov
lods
in
push
mov
fstp
ror
in
xor
mov
retf
pop
or
js
inc
mov
sbb
scas
sets
mov
popf
push
or
adc
(bad)
adc
ja
cmp
add
loop
out
lods
rcl
xchg
dec
jne
jecxz
les
out
cmp
leave
dec
shr
inc
adc
push
test
arpl
add
inc
and
push
jmp
mov
inc
enter
mov
mov
mov
(bad)
int
jbe
es
inc
mov
imul
mov
xchg
xchg
unpcklps
xchg
(bad)
jbe
(bad)
in
rcl
inc
push
add
iret
mov
dec
imul
mov
loopne
push
int
cs
mov
or
das
inc
push
shl
je
sbb
ret
adc
outs
ja
and
addr16
pop
popf
jb
popa
lea
scas
mov
cmc
dec
xor
sbb
sub
push
test
cmp
loop
xor
jbe
mov
cvttps2pi
(bad)
mov
test
xor
push
cmp
loope
pop
bound
cmp
inc
stos
loop
sti
leave
cmp
aad
imul
adc
cmp
and
call
mov
test
mov
mov
jmp
ror
cs
pop
(bad)
mov
int3
test
fcomp
rol
sub
test
inc
les
pop
fadd
push
inc
sub
mov
call
les
(bad)
pop
sub
dec
jmp
movs
fst
push
or
aam
fdiv
xchg
cmp
fwait
cmps
add
mov
les
addr16
ret
adc
adc
(bad)
mov
jg
mov
mov
aad
fadd
leave
into
sbb
leave
arpl
cmps
bound
xor
(bad)
push
movs
mov
mov
nop
or
popf
push
jl
fwait
push
addr16
(bad)
adc
vpmulhuw
or
and
xor
rol
pusha
dec
dec
shl
aaa
add
xchg
fnstcw
enter
lods
vpavgw
mov
(bad)
call
fs
shl
add
sbb
shl
push
cmp
repz
cld
xor
push
(bad)
repz
and
mov
pop
and
call
pushf
push
jl
mov
movs
add
add
pop
pop
cmp
jle
sbb
cmp
stc
mov
push
fild
pop
repz
imul
and
std
xlat
sbb
sub
mov
adc
sub
notrack
addr16
call
sub
add
push
push
adc
xchg
pop
push
dec
test
or
push
movs
pusha
scas
cmp
mov
mov
xor
rcl
or
neg
adc
clc
mov
push
ja
dec
mov
dec
and
dec
jp
mov
mov
inc
inc
ror
in
add
mov
xor
xlat
sbb
mov
cwde
aaa
stos
push
pop
ja
pop
push
cmp
mov
and
loopne
pop
jnp
fwait
jnp
pop
nop
fisttp
xchg
and
leave
imul
repnz
sahf
cmp
fwait
inc
stos
xchg
and
xchg
adc
sbb
pop
out
jecxz
call
cmp
cmps
push
out
ins
cmp
outs
loop
push
call
and
pop
xchg
fst
hlt
sbb
out
loopne
aam
nop
cmp
pop
loope
dec
xor
ror
loope
mov
sbb
repz
call
(bad)
mov
sti
cs
fnstsw
mov
and
inc
gs
sbb
int
inc
sub
sub
jbe
jge
pop
mov
adc
or
cmc
retf
test
xor
cmps
sbb
das
mov
mov
dec
mov
imul
push
repz
mov
stos
mov
shr
rcr
cmps
adc
xchg
scas
mov
movs
pop
xchg
dec
enter
add
pop
xchg
xchg
addr16
xor
fisubr
pop
mov
sub
ss
in
push
dec
pop
enter
sub
and
jb
push
jbe
stos
div
add
xor
jns
les
lahf
popf
ja
xchg
xchg
cld
test
pop
mov
icebp
inc
ss
cld
sar
fistp
cmp
stos
arpl
pusha
and
cdq
sub
jne
pop
aaa
(bad)
call
sub
movs
or
pop
xchg
ror
inc
fcom
cmps
clc
dec
adc
jns
ja
movs
(bad)
or
mov
repz
inc
jb
xchg
sti
pop
mov
popa
in
push
or
pop
pop
xchg
xor
sar
push
out
repnz
mov
iret
sub
out
js
sbb
fidiv
movs
(bad)
mov
inc
rcl
sar
mov
adc
fwait
dec
dec
sub
jne
mov
inc
int
in
adc
jns
jg
js
sahf
lds
icebp
cmp
(bad)
scas
and
not
ficomp
dec
mov
xor
cli
add
or
ins
lea
add
xor
addr16
add
inc
js
fisttp
push
sub
fwait
je
push
jnp
imul
jle
ror
sub
int
xor
dec
bound
(bad)
cmc
push
mov
(bad)
loope
stos
aas
dec
js
sahf
sahf
xchg
jbe
nop
fwait
(bad)
fimul
sbb
or
mov
sub
or
xchg
pusha
(bad)
out
jge
das
push
mov
mov
loope
test
popf
leave
out
neg
retf
fsubrp
gs
ins
inc
stc
sti
mov
mov
bnd
test
popf
or
cmp
inc
jo
stos
loopne
std
push
repz
mov
mov
retf
mov
jmp
outs
jo
push
repz
out
(bad)
xadd
adc
aad
ins
ds
fwait
out
aad
xlat
test
out
mov
int
mov
pushf
sub
pop
leave
icebp
sbb
mov
push
lods
icebp
enter
and
pushf
jge
xchg
std
jle
mov
mov
xor
mov
popf
movs
cmp
sar
fwait
retf
test
xor
mov
jecxz
test
lea
icebp
cmp
repnz
and
and
imul
ds
mov
jge
mov
test
pop
cmp
mov
sbb
sub
movs
ins
loope
aas
jo
mov
shr
loopne
or
xchg
das
xor
xlat
or
add
cli
dec
movs
scas
movs
les
cmp
push
sbb
fwait
nop
pop
in
dec
adc
dec
(bad)
pop
aaa
pop
aad
rcr
lds
test
in
jp
fdiv
fbld
sbb
cli
xor
pop
mov
mov
lea
sbb
call
test
or
xchg
mov
xor
aas
jae
dec
mov
add
mov
test
add
cmps
pop
sbb
lods
aad
cs
cmc
sbb
mov
dec
adc
aas
jne
push
pop
and
or
push
retf
inc
leave
or
add
call
jo
pop
ret
(bad)
fisttp
not
in
adc
xchg
push
add
push
jno
mov
div
mov
outs
fdiv
adc
repz
inc
je
pop
and
mov
jns
test
cld
stos
daa
loope
(bad)
je
and
nop
jbe
cli
(bad)
ror
stc
and
or
ja
cmp
stos
cs
mov
mov
movs
mov
ins
mov
sti
pop
adc
mov
aam
and
test
push
fadd
test
lds
add
aaa
das
sub
xchg
inc
push
enter
dec
and
or
in
dec
clc
stc
rcr
jmp
aaa
das
push
pop
popf
std
outs
rol
pop
mov
loop
ins
dec
icebp
imul
sbb
fsubp
cmc
std
(bad)
sub
sbb
dec
lock
test
mov
ret
push
div
ret
ss
mov
in
or
div
jbe
(bad)
push
mov
mov
add
test
adc
fwait
push
in
mov
inc
push
popa
out
retf
cmp
pop
je
jmp
jle
or
fwait
adc
or
ror
xor
int
push
fisttp
jmp
retf
fimul
push
mov
and
movs
mov
or
cmp
or
and
and
push
repnz
frstor
pop
and
neg
mov
pop
sub
cs
dec
movs
or
ja
xchg
cli
test
xlat
cdq
cmps
and
scas
ret
sub
adc
mov
push
jle
jns
test
fs
pushf
call
shl
dec
inc
rcl
mul
xchg
pop
xor
add
scas
dec
push
adc
movs
pop
stos
jmp
and
std
mov
xchg
sub
sbb
stos
jge
adc
add
les
xor
sbb
icebp
aaa
and
sbb
imul
jno
or
inc
mov
imul
dec
inc
cmps
lock
inc
sub
xlat
sub
inc
adc
mov
and
out
xchg
ja
pop
icebp
xor
rcr
jmp
sbb
xchg
js
dec
out
iret
or
out
nop
scas
and
push
add
push
push
outs
inc
dec
mov
out
popf
pop
mov
fist
shl
push
in
xchg
cmps
mov
loop
out
sbb
add
mov
and
int3
(bad)
ficomp
cld
fidivr
xor
xor
jo
mov
jle
ins
(bad)
loope
cmps
stc
lock
repnz
fnstenv
dec
int
xchg
(bad)
mov
mov
(bad)
mov
or
inc
mov
ror
fadd
jl
into
loopne
mov
enter
jl
(bad)
jmp
push
std
mov
push
fsub
imul
pop
enter
into
pop
jbe
adc
adc
std
sub
jae
(bad)
pop
adc
jns
imul
popa
xlat
or
push
les
cmp
cwde
dec
mov
add
in
mov
ret
test
mov
inc
xor
scas
sbb
xchg
cmps
jns
(bad)
mov
push
add
cmp
loop
cmp
pop
mov
shl
lea
mov
xchg
or
iret
(bad)
imul
push
(bad)
and
(bad)
jp
sbb
jb
bound
and
add
jne
(bad)
mov
cmp
add
mov
cvttps2pi
adc
cmps
pusha
jbe
gs
inc
imul
jae
mov
jmp
es
pop
mov
sbb
test
mov
stos
adc
shr
nop
sub
jge
push
sti
and
sbb
fldenv
jle
jmp
inc
jae
imul
clc
repnz
mov
push
outs
(bad)
cmp
hlt
adc
inc
jae
jno
mov
jmp
loopne
sbb
jns
or
add
js
add
loopne
xor
cmc
cmp
jae
push
or
mov
mov
mov
push
retf
rol
(bad)
sti
mov
mov
out
fninit
rcr
mov
loop
and
ss
and
jge
cli
push
jbe
lahf
cmp
lds
add
cmp
cmps
test
inc
test
cmp
add
mov
int
dec
fst
clc
dec
dec
adc
aas
adc
les
adc
cmc
jno
mov
cmp
ins
mov
cdq
sbb
sahf
pushf
stc
xor
dec
daa
xchg
push
pusha
lahf
dec
or
call
test
mov
pop
aaa
pushf
or
jo
and
fwait
jne
mov
push
les
mov
sbb
inc
or
add
xchg
test
inc
rcr
stos
aas
sbb
dec
lods
scas
mov
push
cmp
dec
ror
mov
sub
out
lahf
dec
das
test
mov
xchg
mov
cs
xor
add
pop
ja
movs
imul
popa
fild
and
rcr
sahf
add
push
scas
jbe
mov
jbe
out
jne
mov
cmps
sti
jo
shl
push
das
dec
sub
lods
int
out
mov
dec
dec
sahf
mov
adc
jmp
mov
xchg
xchg
int
jmp
inc
push
mov
push
mov
cli
push
movs
push
(bad)
repz
dec
push
add
xlat
ds
jecxz
jp
ds
data16
or
sub
adc
lock
and
sub
jg
mov
adc
xor
shr
dec
cmp
push
mov
(bad)
sbb
inc
fbstp
or
mov
in
nop
(bad)
pop
int
lock
aas
push
push
jle
jge
addr16
adc
pushf
ret
mov
pop
xchg
xchg
jb
pop
(bad)
lods
sbb
xchg
xchg
add
mov
xor
mov
call
cmp
or
cdq
xor
adc
jmp
ror
nop
dec
fucom
arpl
dec
(bad)
and
dec
addr16
push
sbb
retf
mov
mov
jmp
adc
sbb
mov
aaa
push
jo
sub
dec
cmp
outs
or
jae
(bad)
aaa
imul
dec
cs
int
sbb
push
mov
dec
test
fidiv
(bad)
ja
jle
jmp
mov
add
cmps
cmp
pusha
cmp
sub
sahf
mov
lock
push
jne
push
jmp
xchg
(bad)
dec
and
sti
sahf
add
sbb
test
sub
or
out
inc
mul
mov
jb
(bad)
xor
fwait
sti
fsub
or
xlat
mov
jne
jmp
and
sbb
test
jmp
xchg
cmp
imul
lods
div
shl
and
add
push
jle
sub
ret
pop
fs
mov
dec
fisttp
test
inc
test
pop
popf
xchg
setb
xor
or
cmp
add
pop
out
outs
call
adc
pusha
mov
aaa
mov
neg
mov
push
cmp
loopne
mov
dec
std
(bad)
mov
inc
out
in
and
inc
repnz
or
add
mov
mov
leave
sahf
leave
mov
dec
xor
leave
(bad)
out
mov
pop
repnz
popf
mov
cmps
stos
mov
int3
cmp
cmp
pop
push
dec
dec
imul
ss
mov
jbe
inc
lock
cli
lods
pop
or
add
sub
pop
cmps
fild
rcl
sbb
inc
shl
ret
cmps
xchg
mov
cmp
lock
sbb
mov
icebp
mov
stc
enter
daa
in
div
push
dec
sbb
xor
aaa
xor
push
fwait
jb
(bad)
scas
not
sub
sub
mov
sub
jno
loopne
sub
push
leave
jns
outs
frstor
add
sbb
jns
out
inc
imul
lahf
mov
or
add
cmp
lock
es
loop
mov
push
pop
rcr
sbb
sub
jecxz
and
dec
lahf
add
ja
pop
mov
daa
add
pusha
sub
cmp
hlt
sub
repnz
in
cmp
add
sar
lock
sahf
sbb
and
retf
jbe
test
and
mov
jmp
adc
repnz
add
xchg
aas
repnz
lahf
popf
xor
popf
retf
jae
test
aaa
adc
or
enter
push
aam
add
repnz
mov
jne
stos
xchg
dec
daa
jge
fs
or
pop
and
jecxz
add
imul
sub
xchg
je
mov
shl
leave
xor
jae
imul
daa
call
lea
imul
iret
dec
push
iret
cwde
fiadd
jge
inc
in
scas
movs
ror
mov
call
xchg
sub
adc
jmp
inc
pop
add
add
inc
jmp
enter
bound
jp
sti
jmp
add
das
sbb
cmps
std
in
in
scas
inc
xchg
sbb
(bad)
sbb
lds
rcl
stos
add
mov
jle
stc
lds
scas
dec
mov
and
(bad)
push
loope
mov
inc
(bad)
sar
psubd
imul
sbb
push
xchg
loopne
cmp
add
loop
cli
dec
cmp
imul
or
mov
dec
xchg
lods
sbb
cld
add
xchg
xor
loop
jbe
mov
jmp
adc
push
popf
call
movs
push
mov
mov
(bad)
arpl
sub
fist
add
xchg
jle
inc
(bad)
sbb
add
dec
ds
pushf
adc
das
xchg
stos
sahf
adc
mov
sar
cmp
daa
scas
jbe
in
das
or
dec
inc
es
mov
jae
or
cmps
fnstcw
cdq
sub
call
cmp
aaa
jmp
push
pushf
inc
fisttp
mov
paddsw
add
std
cld
sub
adc
or
pop
xor
ins
pop
push
stc
push
adc
mov
jmp
adc
lock
lock
fwait
jle
xlat
and
mov
pop
dec
mov
retf
outs
jo
ja
shr
mov
in
mov
retf
ins
pop
fiadd
pusha
movs
int
sub
adc
add
loop
cwde
mov
sahf
mov
dec
shrd
inc
mov
dec
test
gs
inc
inc
inc
mov
inc
pop
adc
adc
aam
jo
and
jg
sar
mov
inc
cs
and
lds
jecxz
(bad)
in
dec
jp
test
loope
xchg
setns
add
ror
push
cdq
and
pop
mov
out
mov
jno
nop
in
jne
pop
mov
fwait
push
xchg
sub
test
stos
cmp
pusha
cmp
jecxz
pop
adc
or
xchg
call
nop
or
dec
outs
jnp
pop
inc
out
sub
test
repnz
popf
and
xlat
fdiv
cdq
(bad)
lock
sar
cmp
mov
and
cwde
jnp
out
shr
idiv
adc
mov
sub
xchg
pop
inc
imul
lahf
xor
inc
fcomp
xchg
inc
out
dec
fucomip
repnz
push
(bad)
test
gs
adc
cmp
sti
and
jno
(bad)
outs
clc
repz
jne
xor
xchg
pop
push
and
push
sbb
std
ss
mov
mov
idiv
repz
fidivr
stos
fsubr
push
imul
imul
ins
xor
rcr
(bad)
jle
mov
pop
adc
sub
imul
rcl
cmp
je
ins
add
push
and
arpl
jmp
jge
xchg
sbb
loopne
mov
push
cli
jle
scas
cli
mov
fiadd
sbb
and
xor
sub
ja
mov
loopne
data16
into
mov
mov
jmp
dec
idiv
nop
add
fild
xchg
mov
xor
xor
mov
test
daa
dec
inc
adc
cmp
out
fbld
dec
dec
inc
pop
add
ficom
xor
ins
mov
inc
sub
adc
iret
sar
sbb
inc
rol
mov
outs
popa
test
add
test
daa
pushf
push
adc
cmp
sahf
pop
add
cdq
and
arpl
out
popa
and
stos
jno
(bad)
shl
aaa
fcomp
jp
fmul
movs
dec
es
xchg
add
loop
inc
sub
jns
add
pop
int3
add
test
enter
shr
cmps
hlt
(bad)
and
xor
(bad)
xchg
mov
sub
dec
shl
mov
cmp
xor
mov
sahf
add
adc
push
outs
adc
fcomip
adc
leave
stos
xor
outs
gs
or
xchg
jl
jnp
push
xchg
fs
ret
adc
xchg
mov
inc
mov
push
stos
xor
adc
cmp
test
jmp
inc
ret
(bad)
call
lahf
mov
mov
push
mov
test
sahf
add
cmps
aad
gs
jmp
lods
push
ret
sub
xor
inc
jmp
stos
push
xchg
inc
repnz
repnz
ds
rol
mov
mov
add
daa
xchg
es
and
in
sub
adc
dec
pop
jmp
jg
mov
fiadd
xrelease
jns
test
mov
sti
ret
jl
out
mov
sbb
sub
push
adc
cmp
loopne
pop
sti
push
xor
sahf
xchg
cli
xor
jns
xor
sub
sti
sub
sub
repz
dec
lea
into
cmp
test
mov
icebp
popa
xchg
adc
adc
ins
in
outs
sti
(bad)
cmps
mov
pusha
xor
pushf
mov
and
enter
punpckldq
push
stc
push
pop
mov
mov
cwde
das
nop
adc
mov
mov
aaa
mov
push
ds
cli
push
jne
mov
fwait
in
xchg
jmp
mov
ret
mov
into
add
mov
into
xchg
daa
mov
cmp
mov
push
aad
jmp
imul
push
test
retf
inc
dec
loopne
jmp
sar
cmp
pusha
sbb
cwde
xor
mov
mov
test
and
jno
add
dec
push
loope
jg
sbb
fs
fs
ins
add
push
mov
aaa
cmp
sti
fist
out
ss
push
push
hlt
inc
ret
cld
push
sbb
pop
ins
pop
aad
scas
and
loope
xchg
jb
push
sub
into
int
sub
dec
icebp
(bad)
(bad)
icebp
mov
call
scas
cmps
ins
leave
xchg
add
mov
ror
test
es
add
inc
xor
stos
fild
sahf
test
sub
test
sbb
fucomp
push
jbe
mov
sbb
data16
pop
test
pusha
gs
inc
jbe
jns
into
pushf
gs
jmp
jmp
or
mul
pop
sub
(bad)
cli
or
and
(bad)
scas
jecxz
fs
sti
rol
adc
fist
int3
pop
sar
shr
xchg
push
inc
(bad)
mov
mov
xor
mov
jl
rcr
shr
repz
dec
and
sbb
in
push
clc
jle
cmp
lahf
jne
mov
into
jns
dec
mov
mov
add
ror
cmp
mov
adc
das
cmc
inc
jnp
int3
sub
popf
fdivr
neg
ins
mov
push
mov
xchg
shl
or
cmp
adc
fwait
outs
movs
das
cmp
retf
fucomp
dec
dec
push
xor
push
push
call
cmp
lock
xor
out
or
iret
pop
jl
outs
xor
pop
jmp
adc
adc
adc
lahf
into
cmp
stc
stos
(bad)
ins
adc
je
(bad)
jecxz
pop
fistp
(bad)
fdivr
jg
push
test
jecxz
nop
loop
jecxz
jns
push
adc
aaa
mov
scas
or
test
ret
pop
pop
inc
popf
into
(bad)
jmp
push
inc
mov
ret
mov
dec
push
les
cmp
aaa
fisubr
bound
(bad)
outs
cmp
cmp
out
adc
sbb
clc
sbb
xchg
add
pop
loop
lahf
sub
or
(bad)
fsubr
lods
popa
call
dec
and
push
xlat
repz
cmp
ret
mov
or
enter
iret
push
ds
jne
std
nop
mov
jmp
jecxz
pop
jae
out
xchg
xor
(bad)
sbb
mov
mov
mov
(bad)
or
push
pop
dec
inc
add
bound
cwde
and
out
cwde
call
(bad)
jb
jb
imul
call
mov
stos
xor
repz
hlt
adc
cmp
jnp
sbb
push
mov
sub
mov
lds
jg
loope
jo
cmp
ins
xor
or
adc
jb
mov
mov
stc
dec
adc
aad
cmps
xchg
leave
(bad)
pop
jge
sahf
mov
scas
outs
loope
ror
add
sbb
and
inc
rep
fwait
out
sti
loopne
in
inc
mov
imul
pop
or
sbb
(bad)
cmp
out
int3
sbb
sub
fmulp
movs
and
shl
add
out
sti
rcl
sub
psrad
add
sub
adc
call
fwait
and
add
cmp
xor
shl
popf
fist
outs
push
pop
sub
rol
ins
mov
movs
scas
push
lods
and
xchg
stc
icebp
out
ins
outs
lods
xchg
push
rcr
and
addr16
push
sbb
or
out
imul
cmp
jle
dec
dec
bnd
mov
add
data16
dec
cmp
stos
mov
mov
dec
pop
nop
jbe
add
sti
fdivr
stc
cld
add
enter
cmp
jl
test
push
cmc
push
cmp
popf
cmp
shr
xor
pop
inc
call
sbb
pop
add
mov
push
mov
cmp
dec
inc
push
lea
pop
or
sar
loop
pop
popa
jge
imul
mov
fxtract
sub
mov
sub
out
call
push
mov
or
dec
xchg
ja
les
aam
jle
push
mov
(bad)
mov
dec
adc
pushf
sub
imul
pop
dec
test
dec
push
jbe
xlat
dec
push
sbb
jmp
bswap
cld
das
ins
mov
in
jmp
or
call
push
add
xchg
or
lock
xor
cmc
lock
jg
leave
out
shr
sbb
push
inc
jmp
test
pop
mov
inc
retf
jmp
(bad)
(bad)
sahf
mov
inc
scas
sub
mov
cmp
xor
aam
out
fsub
js
retf
(bad)
sub
push
and
ret
cmp
xor
mov
sbb
push
adc
(bad)
cld
loop
dec
and
and
jge
pop
leave
or
loop
aaa
inc
cli
jmp
push
xchg
lea
pop
nop
nop
fidivr
cmp
movs
das
cwde
dec
sbb
lods
mov
(bad)
enter
xlat
sub
call
jle
shl
fsub
shl
or
fs
jbe
pop
aas
jno
sub
dec
(bad)
icebp
jle
clc
xor
dec
or
sar
and
and
imul
loop
test
loop
sub
or
and
sbb
cmp
call
rcr
mov
fdivp
fs
inc
jne
sub
pop
out
pop
outs
aas
xor
in
data16
mov
(bad)
fsub
mov
aaa
div
or
or
int3
inc
movs
aaa
pushf
inc
add
mov
repnz
cs
mov
loope
ins
xor
fisubr
push
es
cwde
cmc
mov
push
in
cli
(bad)
cmp
stos
add
inc
scas
or
jmp
add
push
and
in
push
or
jmp
sbb
out
lds
test
pop
daa
mov
add
(bad)
jmp
lods
ja
ja
sub
push
mov
(bad)
js
mov
xor
push
adc
pop
sar
xor
int
jg
mov
inc
push
add
xor
jge
lock
cmp
ss
sub
aaa
test
jo
sbb
(bad)
jmp
mov
push
cmp
pop
jmp
xchg
jae
sbb
ss
fwait
(bad)
ja
fcmovu
jns
imul
mov
fild
inc
cli
aam
push
cld
push
fdivr
ins
dec
pop
dec
rol
stos
push
jg
xor
push
cmp
nop
dec
inc
repz
lods
neg
and
xchg
dec
mov
pushf
xor
mov
loopne
mov
jge
xchg
(bad)
outs
hlt
stc
mov
xchg
in
mov
aaa
lds
cmp
xchg
out
pop
enter
and
scas
ss
es
idiv
repz
leave
ss
adc
sub
fadd
les
and
inc
sub
jne
xor
jb
imul
inc
mov
cdq
mov
mov
stos
push
out
fs
push
pop
shl
jg
adc
movs
outs
movs
pop
aas
ins
pop
test
das
mov
ja
push
aad
push
mov
or
jnp
in
lods
sbb
add
mov
push
mov
ficomp
jge
int3
iret
jecxz
push
les
test
fsubr
push
lea
dec
dec
inc
push
sar
lods
fs
call
xor
sti
or
outs
xlat
adc
cwde
inc
pop
addr16
fld
or
mov
aam
jmp
and
dec
test
mov
pusha
xor
mov
xchg
(bad)
xor
retf
jmp
ficomp
jmp
pop
ins
and
sbb
add
adc
dec
cmp
and
cwde
or
pop
dec
jb
sbb
retf
adc
and
and
cmp
ret
xchg
pop
push
mov
loope
stos
jge
pop
add
pop
jno
ins
or
push
jle
test
popa
add
mov
xchg
mov
ret
xchg
vpsrlw
xchg
adc
(bad)
xor
sub
mov
ja
adc
dec
fs
cmp
retf
bound
add
retf
mov
rcr
and
je
xor
dec
inc
ss
or
popa
xchg
jb
test
aaa
push
mov
xor
(bad)
in
retf
cld
test
das
out
mov
fucomi
inc
(bad)
arpl
test
mov
sub
ficom
or
cmps
scas
js
icebp
lods
loop
add
inc
sbb
out
rcl
and
jbe
cli
and
inc
call
mov
dec
push
and
push
xchg
out
add
dec
(bad)
xchg
in
fwait
je
cmps
jae
ins
mov
mov
test
mov
mov
inc
call
mov
dec
sub
cs
test
in
ds
pop
add
js
mov
add
lds
sar
sub
(bad)
or
jp
pushf
ss
retf
xlat
dec
or
std
adc
jns
adc
test
xor
rol
push
adc
xchg
add
sbb
push
sbb
mov
inc
lods
loope
adc
mov
xchg
sub
(bad)
and
data16
(bad)
cmps
test
pop
push
retf
jp
pop
ret
(bad)
sbb
add
xor
ins
loope
jp
jnp
ror
jl
sbb
stos
mov
adc
ret
push
pusha
mov
arpl
pop
dec
mov
(bad)
bound
fdivr
cmps
mov
in
jmp
xlat
scas
or
add
pop
call
dec
or
lods
and
cmp
jecxz
dec
sub
dec
icebp
sbb
mov
push
fwait
xor
xor
jg
inc
push
xlat
inc
cmp
pop
in
mov
add
aad
push
and
cmps
es
clc
dec
cwde
in
stc
mov
psllw
mov
inc
sar
cmp
hlt
in
icebp
xchg
dec
sub
mov
or
adc
fcomp
imul
jb
jl
pop
daa
cmps
pop
hlt
mov
fldenv
xchg
jg
imul
add
test
fisubr
int3
in
imul
and
in
xor
mov
and
cmp
aas
js
in
ds
mov
std
mov
sub
dec
xchg
addr16
cwde
shl
push
test
ds
aaa
jb
jecxz
out
in
sub
add
inc
lods
pop
mov
mov
jno
adc
retf
xchg
loop
jle
shl
jns
aad
xor
inc
lods
add
add
jno
mov
leave
jle
loopne
sti
push
in
fs
jb
pop
xchg
lock
lea
cld
enter
test
adc
sbb
and
sbb
and
push
cmc
out
or
sbb
pop
(bad)
mov
jmp
add
out
mov
mov
sub
mov
jg
gs
ret
or
xchg
and
ins
les
ror
xor
add
xor
adc
push
es
scas
and
jb
xor
outs
mul
pop
inc
mov
xor
loope
out
dec
mov
(bad)
stos
mov
mov
or
out
push
mov
(bad)
jnp
ret
mov
aad
xor
(bad)
add
loop
jns
dec
sahf
adc
and
(bad)
dec
cmp
push
pop
popf
cmp
sub
out
retf
lods
popf
and
cmp
add
mov
dec
push
and
dec
xchg
es
test
je
xor
jge
push
push
pop
loop
test
call
mov
je
push
ss
mov
dec
cmp
sbb
aas
inc
aas
pusha
mov
lods
in
jp
lahf
cmc
nop
cmp
dec
retf
inc
mov
mov
sbb
iret
push
xchg
and
push
push
in
sti
jb
and
xor
das
(bad)
fs
bound
mov
pop
push
dec
repz
movs
scas
jg
inc
xchg
mov
mov
add
push
mov
vmovdqu
ss
adc
mov
xor
jecxz
les
jmp
(bad)
sbb
pushf
cmp
xchg
cmp
xchg
add
xor
into
lods
mov
jmp
addr16
(bad)
lods
ret
cmp
daa
(bad)
mov
std
cmp
iret
mov
lahf
jg
into
pop
loop
outs
test
into
push
mov
xlat
rcr
fmul
sub
sbb
sbb
sbb
leave
mov
arpl
fwait
cmps
in
popa
xchg
pushf
retf
enter
js
sbb
cmc
push
rcr
or
jns
call
push
cmc
mov
sbb
shr
cdq
cmps
enter
shr
retf
fild
adc
(bad)
or
ins
adc
mov
ss
cdq
popa
inc
daa
das
sbb
cmp
gs
mov
pop
aam
fs
pop
call
mul
jg
push
xor
xor
push
fs
loop
xor
mov
pop
push
(bad)
pop
mov
ficomp
std
add
shr
test
lods
jo
or
inc
rcl
cmps
cmp
mov
push
cmp
sbb
hlt
(bad)
adc
jne
cmp
adc
and
inc
push
sub
jae
sub
cmp
add
mov
mov
retf
loop
std
sub
daa
push
scas
call
pop
xlat
aas
jb
int
cmp
addr16
cld
dec
loop
popa
and
push
or
xchg
push
push
idiv
sbb
xchg
pop
jo
xchg
or
jmp
adc
sub
or
loopne
in
out
xchg
push
or
adc
mov
repz
push
mov
push
sub
imul
push
loopne
jp
popf
retf
adc
scas
stos
lahf
mov
ja
aaa
enter
(bad)
pushf
xchg
xchg
loopne
sub
(bad)
fadd
mov
(bad)
movs
je
jle
in
ins
call
jns
sub
test
mov
into
in
lock
xor
and
dec
and
lahf
hlt
outs
popf
dec
ret
sub
push
add
jbe
stc
stos
mov
or
ins
retf
adc
and
sbb
clc
(bad)
imul
daa
call
lahf
add
cmp
cwde
out
in
push
push
mov
rcr
and
add
test
cmc
fwait
push
not
xchg
ficom
xchg
adc
stos
cmps
jmp
mov
daa
xchg
mov
mov
test
add
mov
mov
shl
das
adc
in
sbb
sbb
fidivr
cmp
pop
js
add
pop
push
imul
xchg
sahf
aam
dec
lahf
fiadd
into
cmp
(bad)
stos
stos
retf
jge
mov
(bad)
and
movs
xchg
out
dec
or
add
mov
addr16
mov
dec
pop
cdq
jmp
jo
mov
dec
dec
sbb
xor
daa
cmc
popf
dec
mov
pop
add
shl
(bad)
add
repz
int3
jmp
xor
(bad)
stc
cmps
pusha
cmps
or
jnp
mov
movsx
dec
sbb
call
mov
inc
pop
clc
jmp
xchg
rcr
xor
mov
mov
mov
lahf
mov
jbe
pop
inc
pop
outs
lock
retf
add
(bad)
das
sub
jbe
fs
push
sahf
(bad)
cmp
lds
es
mov
rol
mov
and
sbb
xchg
or
push
out
ret
gs
adc
cld
or
cs
enter
pop
xchg
int
inc
cld
sub
inc
ins
mov
xchg
cmc
std
ds
hlt
sub
mov
xchg
sar
xchg
out
arpl
push
jg
movs
dec
mov
scas
pusha
je
out
loop
pop
push
xor
xchg
mov
es
rcl
push
dec
shr
sbb
jns
pop
xor
mov
dec
fld
xchg
jno
jmp
pusha
sbb
shl
pop
jecxz
neg
adc
fsub
aam
js
jecxz
call
movs
or
pusha
pusha
xlat
out
mov
pushf
mov
mov
push
cmp
and
loope
int
and
je
mov
ja
pop
popf
ret
mov
ror
ins
or
stc
shl
cmp
cmps
aam
mov
mov
(bad)
movs
pop
cli
sbb
test
ja
popf
or
cs
cmp
loope
sbb
jge
lock
ins
sbb
mov
mov
mov
inc
std
sub
cmp
loopne
mov
fnsave
sbb
lea
jecxz
leave
add
inc
lods
cwde
dec
sti
(bad)
out
or
jge
mov
push
mov
in
and
mov
jae
pushf
icebp
(bad)
lods
aaa
xchg
arpl
pop
rcl
fistp
scas
and
jmp
scas
into
sub
fmul
jmp
icebp
(bad)
out
jg
xor
xchg
rcr
aam
retf
mov
retf
lods
push
shr
scas
bound
out
popf
mov
jnp
pusha
lds
cmp
dec
mov
and
fsub
mov
xlat
xchg
cmps
pop
xchg
jg
cdq
icebp
or
out
xchg
pop
add
fs
arpl
sbb
adc
movs
loopne
inc
scas
push
cmp
jno
loop
jmp
sbb
in
mov
cmp
fs
add
cmc
add
call
bound
pop
test
popa
sbb
sar
xor
sub
stos
in
lods
aad
lock
(bad)
mov
dec
gs
(bad)
xchg
cmp
inc
add
cld
mov
mov
inc
sbb
add
out
leave
pop
out
jo
push
cli
pop
icebp
xchg
or
mov
data16
inc
mov
mov
dec
js
ss
cmp
popf
pop
sbb
mov
jno
inc
scas
js
add
hlt
fs
lahf
push
loop
pop
dec
jp
pop
rcl
add
arpl
jecxz
hlt
mov
push
hlt
in
ss
cmc
inc
sub
mov
dec
fist
fsubp
adc
test
shr
jno
(bad)
cmp
jbe
pop
jb
in
mov
fwait
push
popa
mov
adc
jmp
neg
int3
push
frstor
pushf
(bad)
pop
ins
inc
pop
inc
mov
pop
ret
mov
(bad)
pop
xlat
jg
jne
sbb
mov
test
jecxz
in
ins
jmp
fucomi
and
cs
dec
xor
adc
xchg
std
cmp
dec
mov
inc
bound
sbb
inc
call
ins
shl
or
cwde
jb
stos
jge
fdiv
int
in
in
sbb
sti
(bad)
pusha
movs
(bad)
xchg
les
test
into
or
leave
pushf
sbb
add
int
retf
jne
sahf
stos
mov
mov
jnp
sahf
adc
outs
cdq
in
scas
imul
or
mov
push
push
test
cmp
imul
add
add
pop
mov
push
loop
jmp
lahf
popa
inc
call
sti
xchg
dec
mov
xchg
hlt
mov
xor
stos
push
out
aam
loop
in
dec
add
loopne
jle
push
sahf
mov
int
sbb
call
ja
sub
jge
inc
ds
adc
and
jnp
mov
pop
jge
jle
xor
jecxz
dec
lahf
mov
push
mov
sub
mov
sbb
fidiv
pop
fnsave
outs
mov
in
fcom
and
mov
loope
loop
stc
mov
mov
xchg
or
dec
xchg
xor
inc
mov
sub
inc
push
out
cmp
xor
(bad)
cld
jbe
jmp
ds
jo
push
push
lods
out
xor
and
pushf
cmp
mov
mov
dec
repz
cmps
cmc
jae
aam
jle
fiadd
sub
outs
mov
adc
cmp
push
adc
shr
loopne
sub
scas
jmp
jo
cdq
fwait
xchg
hlt
cmp
fcomi
sub
scas
sbb
icebp
or
jmp
cli
sbb
rcl
or
ins
repnz
dec
in
xchg
push
dec
retf
mov
fild
mov
or
fadd
in
fdivr
test
lods
xor
sar
xlat
mov
ins
dec
jmp
imul
push
not
jmp
cmps
sub
data16
jb
and
jno
and
ret
inc
mov
xchg
mov
sub
pop
add
cmc
mov
sub
xor
add
shl
jo
or
aaa
cmp
pop
(bad)
int3
or
enter
mov
sub
into
int3
out
ret
mov
push
fdiv
stos
xchg
fcomp
mov
(bad)
fnsave
bound
mov
retf
jp
leave
shr
cmps
call
repz
jg
add
sbb
sahf
xor
sbb
add
lods
pushf
in
mov
cmps
iret
adc
cmp
ficomp
(bad)
push
inc
call
(bad)
mov
cmps
into
(bad)
popf
mov
sub
mov
or
loop
in
sahf
cmc
or
outs
push
test
push
mov
mov
adc
pop
adc
les
test
ds
ja
retf
scas
pop
mov
xchg
sub
pop
xor
pop
outs
aam
push
sbb
in
mov
call
ss
(bad)
adc
sbb
out
aad
aas
ret
jb
in
popa
mov
xchg
jnp
les
jp
xchg
sbb
ror
jle
sbb
and
aad
push
add
mov
daa
or
fld
gs
out
cld
sbb
jns
repz
cmp
aad
loopne
mov
jae
and
jno
cdq
and
pop
xchg
stos
inc
in
rcr
xor
inc
jecxz
jecxz
sub
add
inc
stos
sbb
or
inc
cmp
cmps
jl
inc
je
js
push
or
inc
ins
in
cmp
mov
or
add
ins
mov
lds
aas
addr16
or
xor
hlt
push
or
sbb
add
fcomi
out
xor
stc
or
iret
aaa
js
aaa
add
lahf
cmp
repnz
psllw
dec
mov
daa
mov
jno
dec
push
and
repz
arpl
sub
xor
sub
add
rcr
or
pop
fcomp
inc
daa
pop
imul
jo
dec
lahf
lods
sbb
fadd
int
test
push
stc
and
sbb
test
jnp
pop
ds
pop
inc
dec
ss
ret
jo
dec
mov
(bad)
jno
inc
xchg
ret
cdq
mov
inc
jl
in
jb
out
iret
leave
and
sub
dec
aas
pusha
mov
xchg
retf
adc
jecxz
cmps
aad
inc
iret
mov
cs
mov
es
add
call
imul
pop
push
inc
inc
mov
popa
mov
mov
dec
mov
movs
int3
mov
xor
outs
jle
jle
fld
inc
cli
daa
ret
jmp
(bad)
mov
fs
fsubp
loopne
int3
stos
shr
cmp
adc
sti
cmps
cmps
push
sub
mov
retf
mov
js
call
call
sub
jne
xchg
push
mov
sbb
fiadd
shl
and
call
sub
retf
loope
mov
in
dec
loope
cmp
sbb
mov
xchg
aas
sub
int3
cmp
push
mov
cmps
xchg
movs
push
pop
in
xchg
call
stc
fmul
push
sbb
add
mov
lock
mov
jno
pusha
add
data16
call
jb
mov
inc
cmc
dec
xlat
add
xor
sbb
and
into
xor
in
cmp
jmp
sar
mov
and
mov
pop
pop
sti
fdiv
push
aam
or
imul
sub
xor
pop
ins
mov
sbb
pushf
adc
in
lock
into
and
jle
cmp
push
jge
xor
mov
inc
jle
ret
popa
inc
cli
fstp
sub
test
ins
inc
push
and
inc
adc
sub
test
arpl
push
ss
lds
or
fwait
add
mov
xchg
cmps
les
sub
fstp
mov
add
das
or
mov
push
enter
pop
clc
jg
mov
pop
xchg
jo
outs
stos
xchg
jecxz
pop
jns
push
sbb
sub
dec
pop
mov
mov
imul
dec
stos
outs
retf
push
ja
dec
ja
pop
inc
adc
cli
add
hlt
mov
add
dec
test
adc
mov
cmp
js
xchg
cmps
add
sbb
mov
mov
xor
jecxz
pop
bnd
cmps
dec
sub
arpl
test
adc
inc
jae
jmp
ficom
cmp
imul
enter
adc
sar
ins
gs
imul
out
adc
fisubr
outs
mov
push
loope
popf
mov
add
loope
dec
add
xchg
js
repz
shl
dec
xchg
ds
ret
icebp
xchg
cmp
mov
mov
std
sub
sbb
fwait
push
push
les
int3
xchg
scas
nop
pusha
jmp
lea
div
xchg
mov
fld
call
ss
xchg
hlt
or
retf
rcl
sti
enter
aad
add
mul
(bad)
call
jmp
ins
mov
dec
jle
pop
or
cmp
add
cli
stos
pop
inc
retf
mov
les
popa
sar
xor
jmp
nop
add
inc
out
(bad)
mov
cmp
dec
outs
ror
mov
push
jnp
mov
jo
out
out
pop
mov
fsubr
pop
or
enter
dec
push
adc
shl
sysret
outs
iret
mov
adc
enter
xchg
add
push
pop
pop
cmp
stc
add
inc
iret
sub
cmp
jae
ror
in
adc
ror
push
clc
cmps
sub
dec
adc
mov
dec
lahf
xor
jmp
(bad)
jne
xlat
pop
inc
xchg
inc
shl
add
and
and
or
call
clc
or
test
push
cwde
test
test
jg
jle
inc
pop
sbb
lods
ret
les
push
cmp
and
sub
xor
push
pop
jne
mov
xor
leave
int3
pop
fld
push
pop
cmp
xchg
or
push
mov
or
inc
jmp
mov
add
out
cmp
sub
mov
(bad)
jno
sti
jmp
fcmovb
xchg
in
ds
sahf
imul
retf
(bad)
dec
push
addr16
mov
shl
jmp
jbe
pushf
fs
mov
ret
loopne
pop
and
call
imul
jae
adc
mov
call
out
aaa
(bad)
push
and
mov
and
sbb
mov
sbb
outs
retf
pushf
sbb
bound
std
nop
movs
sbb
inc
and
and
sbb
inc
push
icebp
or
push
sbb
ss
enter
test
mov
add
outs
imul
inc
xchg
and
fiadd
xor
mov
pusha
cwde
rsm
xor
dec
test
retf
mov
mov
sbb
jecxz
push
enter
or
push
not
fimul
out
jb
xchg
mov
dec
cmp
jmp
pop
scas
jne
sub
fidivr
mov
shl
mov
(bad)
push
xor
aas
jo
setg
stc
adc
mov
fwait
push
push
nop
or
pop
dec
cdq
fucomi
cmp
in
dec
push
adc
mov
lock
or
out
call
add
jmp
clc
mov
add
(bad)
mov
dec
jmp
nop
jo
jmp
sub
sub
push
jae
pop
or
retf
xchg
in
(bad)
pop
fisubr
sti
inc
jmp
aam
and
lahf
push
push
jns
cmc
leave
xchg
cli
or
add
jecxz
pushf
mov
xor
popa
cmps
jnp
jno
adc
fwait
xchg
movs
nop
mov
lock
cmp
scas
add
cli
lds
push
outs
(bad)
daa
scas
adc
add
imul
push
mov
test
and
sbb
xor
jnp
mov
jns
aaa
ins
bound
rep
jecxz
push
inc
sub
jge
jmp
out
iret
inc
and
add
jbe
adc
inc
and
(bad)
cli
int
call
jp
shl
mov
cmp
ret
sub
int
cmp
adc
bound
pop
xor
xor
enter
mov
jle
outs
push
sbb
fdivr
mov
jp
mov
addr16
adc
jp
daa
xor
adc
stos
hlt
add
adc
add
jne
std
ins
bound
sub
mov
lds
out
sbb
push
sar
sub
pop
jb
add
das
shl
sti
xchg
or
xor
loop
or
adc
outs
clc
(bad)
enter
pop
xor
cld
or
xchg
out
(bad)
mov
nop
xchg
mov
repnz
xor
repz
mov
mov
es
mov
jae
sahf
div
xchg
jo
xchg
mov
and
add
lods
shl
shr
push
pop
sbb
adc
enter
int
sub
or
xchg
xor
shr
dec
push
in
add
test
inc
aam
lds
into
xor
dec
aad
ins
mov
in
mov
pop
cmp
mov
inc
jno
js
mov
mov
pop
push
mov
push
xchg
push
jle
sub
push
sub
push
jge
(bad)
retf
aaa
jp
sub
fbld
pop
dec
loop
jcxz
xor
mov
add
div
ret
lahf
stc
push
mov
in
icebp
mov
push
vmwrite
pop
push
hlt
rcl
jle
cmp
sbb
ret
sub
or
addr16
push
pusha
mov
push
push
nop
pop
add
ja
adc
sbb
dec
inc
adc
sbb
fist
jmp
xchg
dec
mov
xlat
pop
and
mov
leave
mov
xchg
sub
bound
fwait
pop
lods
in
lods
jge
push
fist
test
in
adc
inc
sub
adc
mov
inc
les
inc
mov
and
mov
aad
adc
inc
dec
jmp
pushf
mov
pop
mov
add
sti
push
ss
rcr
out
test
pop
cmps
pop
mov
cld
push
sbb
test
push
idiv
push
ss
movs
adc
or
pop
adc
mov
int
push
rcl
gs
fwait
mov
adc
movs
ins
adc
cmps
scas
movs
imul
aas
cmp
cmp
xchg
pop
cwde
pop
mov
daa
jmp
mov
inc
jl
add
cmc
push
cdq
jmp
jl
add
jmp
aad
mov
mov
jmp
pop
pop
cli
add
enter
mov
ret
add
push
out
pop
mov
cmp
inc
xchg
sbb
jl
dec
cdq
fcom
arpl
xor
push
lods
adc
inc
pop
pop
dec
and
inc
jmp
or
push
addr16
ja
xchg
mov
je
aas
mov
push
pop
xchg
or
mov
aas
xchg
repnz
push
cmps
sbb
cs
xor
aam
pop
out
adc
xor
add
dec
int3
int3
mov
mov
jnp
test
push
pusha
pop
pop
in
dec
mov
sbb
(bad)
loope
(bad)
out
sbb
repz
iret
dec
pop
stos
loope
inc
adc
jnp
or
test
popf
jnp
int3
aaa
call
shl
sbb
ins
lahf
nop
add
pop
sbb
stos
aam
xor
nop
out
cmps
and
mov
repz
pusha
adc
or
in
mov
inc
mov
cwde
push
out
dec
fld
or
ja
adc
pop
add
aam
fwait
out
mov
data16
mov
mov
out
pop
or
inc
mov
jbe
lea
gs
dec
lahf
xchg
xor
imul
xchg
adc
lds
mov
outs
xchg
pop
adc
mov
sub
ret
sti
xor
(bad)
and
lahf
adc
mov
sub
(bad)
cmp
dec
pop
pop
scas
jb
mov
mov
leave
mov
add
ret
push
mov
xchg
lahf
inc
into
ins
lods
xor
or
pop
sbb
aaa
scas
add
out
mov
or
in
cmc
lods
inc
push
lods
mov
push
lock
arpl
icebp
jnp
in
pop
(bad)
cmp
aas
out
jp
out
ins
int3
gs
sbb
mov
(bad)
or
imul
push
nop
out
enter
mov
inc
data16
xchg
sahf
ror
mov
jb
ror
inc
es
xor
mov
(bad)
je
outs
cmps
jg
push
je
(bad)
push
enter
test
loopne
lods
sti
fdivr
cmps
pop
out
out
push
lahf
fisttp
jmp
mov
xchg
les
jno
xor
xor
lds
and
nop
daa
pop
cmps
lea
out
repz
mov
test
push
xchg
sub
inc
aam
or
mov
xchg
call
dec
mov
or
pop
mov
inc
sbb
mov
das
shl
mov
adc
or
mov
dec
stc
xchg
fsubr
ret
ficom
daa
stos
xchg
fcomp
mov
fwait
rol
mov
pushf
sub
imul
sti
push
pop
dec
test
pop
dec
adc
add
cmps
daa
inc
sbb
add
fsub
test
mov
jge
std
clc
or
fcomp
inc
mov
or
add
sbb
mov
call
dec
xchg
loope
es
add
add
gs
loop
pop
jo
xor
pop
pop
xor
cmc
push
mov
aam
inc
jge
std
sbb
xchg
adc
clc
mov
je
inc
sub
out
jmp
ror
popf
add
fcom
dec
and
inc
lahf
shr
xchg
add
xchg
sahf
sbb
xchg
xchg
inc
xor
lods
mov
nop
xchg
jns
jg
sub
in
aas
loope
stos
ja
bound
pop
push
sub
jecxz
loope
(bad)
cmp
push
sbb
pop
fwait
mov
fucomp
inc
cmp
mov
jo
(bad)
and
out
cmps
adc
fidiv
adc
daa
retf
adc
je
outs
cdq
iret
int3
inc
inc
call
call
scas
or
ja
dec
(bad)
ss
push
aad
fld
std
dec
inc
jne
out
loopne
add
inc
dec
mov
push
sbb
repnz
fisub
jbe
mov
mov
int
xor
fimul
mov
test
bound
and
data16
stos
adc
loopne
mov
xor
mov
jnp
pop
dec
fisttp
mov
jo
inc
mov
mov
push
lea
xchg
inc
cwde
loop
aaa
mov
std
(bad)
mov
fwait
mov
aad
mov
pop
mov
ja
xor
xor
scas
and
mov
dec
mov
dec
xchg
sar
jmp
in
mov
adc
fadd
loop
pop
(bad)
fimul
dec
in
mov
dec
jae
es
jmp
addr16
push
cmp
cli
mov
mov
or
mov
dec
mov
xchg
dec
pop
jmp
int3
pop
rol
ror
push
inc
fsubr
sub
mov
sbb
mov
or
test
adc
mov
sahf
adc
lods
das
mov
in
cli
jl
sbb
mov
pusha
jl
loop
xor
retf
pop
fisubr
fsub
sbb
jnp
push
jb
popa
mov
lock
or
jne
jp
and
es
pop
(bad)
push
stos
xchg
adc
jno
jno
arpl
sub
idiv
jmp
pushw
xor
or
sar
pushf
ja
sbb
sbb
xchg
sub
arpl
fwait
(bad)
cmp
test
pop
pop
repz
add
pop
ficom
sbb
fsubr
push
adc
jp
fild
ficomp
mov
add
sub
pop
out
pop
or
lods
icebp
popa
fild
test
fstp
iret
enter
ret
outs
push
pop
dec
mov
popf
in
ror
xor
sbb
jne
pop
loope
fadd
fs
mov
loopne
popf
daa
ds
jg
cmc
sbb
add
and
fcmove
push
sub
mov
pushf
scas
into
sub
cli
cmps
retf
xlat
lock
sub
jmp
(bad)
ins
add
retf
xor
add
movs
mov
popa
inc
cmp
pop
clc
push
mov
jmp
in
xor
aas
es
pmaxsw
iret
inc
ror
cmps
shl
push
dec
push
lods
push
retf
stos
outs
cmp
lahf
int3
pop
std
inc
xor
jmp
enter
or
add
mov
jb
pop
add
push
imul
sbb
push
das
rcl
cld
imul
sub
(bad)
stc
ins
lea
jmp
cmp
inc
mov
test
nop
pop
in
loopne
push
mov
(bad)
popa
dec
pusha
test
addr16
int3
mov
push
add
xchg
mov
ins
(bad)
retf
adc
das
adc
cdq
imul
ins
sbb
nop
or
fild
jns
push
adc
mov
push
or
nop
jecxz
mov
jecxz
xor
cs
push
ins
pop
fldenv
test
aam
inc
fild
(bad)
xchg
dec
inc
cmc
sbb
pop
shl
inc
cmps
sub
outs
sub
cmp
mov
dec
sub
push
rol
fnstcw
xchg
cmp
and
mov
lea
leave
adc
loope
pusha
(bad)
xchg
inc
jg
jo
dec
in
(bad)
xor
mov
icebp
dec
aam
fucomp
dec
add
push
or
inc
xor
sbb
mov
mov
jnp
xchg
lods
movs
cmp
out
inc
push
ja
gs
jae
mov
add
or
mov
mov
inc
cli
rcr
inc
les
jo
scas
mov
inc
xor
mov
fsubr
dec
imul
js
and
imul
out
hlt
sbb
and
adc
adc
cmc
sub
xchg
fisttp
xor
sub
mov
mov
fsubr
in
adc
das
loopne
mov
fadd
ds
int
add
add
jae
jecxz
aad
fucomp
xor
out
push
in
jmp
push
pop
xor
ret
daa
sahf
outs
jge
icebp
cs
iret
(bad)
adc
fbld
or
adc
sub
ret
adc
mov
call
in
xchg
(bad)
push
xchg
mov
fisttp
fild
add
in
mov
out
in
ret
jne
cs
mov
mov
repnz
cld
push
fld
mov
pop
ret
loopne
jo
or
cli
dec
mov
(bad)
pop
jle
xor
adc
add
mov
imul
cmp
(bad)
daa
(bad)
cmp
ror
in
jge
lea
xchg
scas
adc
dec
ins
rcr
push
mov
stc
(bad)
and
mov
pop
sbb
push
jae
xchg
cmps
xchg
add
push
retf
daa
push
leave
loop
pushf
xor
cld
xchg
or
dec
nop
adc
sbb
cmp
dec
xchg
sub
fwait
dec
push
inc
lods
jae
xor
pushf
adc
jbe
cdq
sti
std
adc
aam
xor
das
jge
xchg
mov
pop
sbb
mov
in
push
mov
jo
xchg
popf
jae
test
lahf
test
aad
pop
outs
scas
fsubr
jmp
add
jge
and
push
mov
popa
mov
adc
daa
jg
je
jae
call
inc
mov
scas
leave
jg
daa
inc
or
mov
and
std
push
pop
lahf
or
sub
pop
dec
or
rcr
in
fwait
nop
cmp
lea
das
mov
dec
arpl
mov
push
pop
mov
xchg
icebp
jle
jge
fwait
js
jbe
adc
retf
cwde
adc
push
push
(bad)
aad
fild
outs
add
in
sbb
(bad)
xor
lock
add
retf
stc
cld
cmp
cmps
inc
mov
inc
pop
push
movs
lods
xlat
push
and
xor
jns
cmc
nop
xchg
call
sete
jno
in
jp
push
cmp
sub
push
push
cmp
or
lea
test
repz
sub
repz
dec
sub
stos
xchg
fcom
dec
fstp
push
xchg
pop
jmp
loopne
lods
cmp
mov
mov
and
aad
vmwrite
mov
xchg
add
and
push
push
outs
repz
add
jmp
fst
retf
or
push
mov
in
mov
dec
sub
pop
lods
aam
popa
fcomp
xchg
test
js
outs
pop
inc
test
jg
retf
imul
mov
jmp
out
xor
(bad)
out
fcmovnu
arpl
pop
jle
sub
jns
fwait
retf
or
inc
imul
jle
sbb
and
int3
push
fstp
sbb
mov
jns
arpl
push
test
pop
pop
xchg
mov
fsubr
je
aam
sub
pop
bswap
jg
or
sub
out
cmp
mov
mov
cmps
or
rcl
cmp
fidiv
(bad)
inc
outs
cmp
jmp
mov
clc
push
mov
daa
test
nop
jno
jp
ds
add
mov
scas
xchg
cdq
xchg
sbb
sahf
sti
xchg
xchg
fwait
sub
and
adc
adc
ret
pop
and
int3
push
and
not
mov
xor
outs
cdq
cmp
and
arpl
mov
sub
sbb
not
and
and
pop
mov
out
in
jnp
jnp
dec
mov
in
and
sub
push
jbe
mov
jl
push
or
aas
cmps
or
daa
pop
fdivr
fdivr
pop
add
cmps
ins
iret
js
xchg
outs
sti
or
sbb
pop
in
xchg
jmp
mov
jb
aaa
fldenv
loope
ret
dec
lods
test
mov
adc
add
imul
test
adc
mov
cwde
dec
into
sbb
call
cmp
mov
pop
jo
clc
mov
or
pop
and
(bad)
push
leave
sub
and
xchg
pushf
stos
adc
sub
sub
clc
ss
out
enter
cmp
outs
or
push
xor
pop
dec
rcr
adc
pop
loopne
or
jg
in
out
arpl
(bad)
mov
stos
movs
xadd
cmps
test
jns
mov
lock
adc
push
cmp
f2xm1
cmp
pop
xchg
retf
nop
cmp
scas
adc
jg
test
dec
mov
cmp
ins
int3
test
pop
inc
test
mov
sahf
shufps
inc
adc
lahf
pop
push
pop
adc
push
mov
(bad)
out
cmp
push
cmp
int
mov
pop
add
mov
jae
mov
push
lock
jp
inc
mov
xor
and
mov
fisubr
and
fcmovnbe
imul
xor
test
(bad)
mov
fist
daa
jno
fs
mov
call
scas
sbb
ror
dec
push
mov
outs
(bad)
push
and
sub
inc
or
or
push
jg
sbb
mov
imul
jmp
std
push
test
and
(bad)
dec
sbb
push
inc
pop
cmp
mov
mov
pop
mov
adc
cmps
fwait
push
push
or
adc
dec
sbb
mov
rol
jb
imul
or
sbb
or
xor
into
lea
push
adc
or
mov
xor
push
cmp
pop
dec
fdivr
into
fiadd
movs
mov
sub
jecxz
jle
jnp
retf
push
std
push
adc
xchg
inc
adc
or
add
into
push
jl
loope
and
mov
adc
or
jge
sub
lock
mov
mov
shl
ja
out
in
xlat
(bad)
mov
fmul
add
mov
mov
inc
adc
sahf
inc
push
pop
xchg
push
loop
out
nop
jge
(bad)
aad
mov
gs
(bad)
mov
mov
adc
push
dec
pop
aas
icebp
xchg
mov
shr
mov
adc
pop
xor
mov
jns
and
push
gs
ficom
cld
(bad)
mov
daa
cmp
mov
cwde
push
iret
inc
call
adc
call
sub
ins
pop
shr
cmp
xchg
mov
add
into
add
sti
or
stc
mov
or
and
cmp
ret
clc
outs
shl
add
clc
xor
stos
mov
in
inc
fiadd
lea
xchg
fwait
push
and
adc
mov
out
or
mov
out
sahf
dec
xchg
pop
(bad)
nop
addps
and
push
sub
push
push
xor
lods
mov
sub
mov
add
add
inc
xor
inc
shr
xor
stc
or
jmp
repz
jno
repz
stos
data16
popa
bound
lds
cwde
(bad)
xchg
int3
mov
inc
addr16
sbb
jecxz
adc
ins
ds
scas
cld
push
fidiv
lahf
rcr
frstor
ret
pop
movs
sub
enter
inc
(bad)
pop
and
push
(bad)
adc
in
mov
icebp
pop
loopne
int3
aad
rcr
push
pop
sbb
add
inc
fadd
popf
xchg
lea
xchg
into
cmp
stc
dec
jbe
(bad)
mov
jmp
imul
sbb
repz
clc
or
jne
pop
fild
cmc
jmp
and
cmp
ret
sbb
cld
les
jae
cmps
imul
push
(bad)
arpl
xchg
inc
push
aad
pop
push
call
jns
dec
or
enter
fild
cmc
in
push
xor
dec
hlt
adc
pushf
js
push
jl
mov
movs
ins
mov
and
sub
pop
mov
test
fisttp
aaa
mov
xor
mov
xor
sub
mov
sbb
pop
aas
jp
cmp
and
ficom
mov
jp
int3
in
pop
movs
cmp
push
xchg
xchg
jp
out
popa
push
add
aad
shl
out
inc
mov
leave
enter
xchg
add
xor
add
es
sub
xchg
jo
pop
out
mov
mov
repz
or
pusha
push
mov
arpl
dec
mov
cli
ss
xor
mov
int3
pop
and
ret
mov
dec
test
push
cmp
mov
movs
or
mov
dec
xchg
xlat
int3
jb
into
mov
out
cli
xor
les
lds
mov
cld
xchg
jmp
inc
mov
sub
(bad)
sbb
mov
cmp
pop
out
(bad)
jg
jmp
(bad)
pop
mov
jno
xchg
sbb
pop
sub
inc
add
push
ret
test
cs
and
jge
jge
repz
sahf
or
or
aam
out
xchg
mov
jne
xchg
(bad)
stos
or
xchg
es
xchg
call
or
xor
add
fwait
sahf
imul
repnz
mov
pop
out
add
xor
dec
sbb
stc
push
cmps
pop
adc
popa
nop
dec
enter
mov
jbe
in
or
mov
jnp
mov
dec
and
sar
pop
or
mov
xor
sbb
pop
mov
cmp
addr16
into
imul
enter
push
fisttp
jne
add
ret
in
repz
xchg
xor
mov
sbb
ja
clc
aas
xor
out
adc
sbb
push
stc
rcl
push
lods
push
push
xor
mov
mov
test
dec
into
mov
retf
out
jge
add
cmps
dec
or
jae
imul
sub
fisubr
xor
cmp
jnp
cli
arpl
test
mov
xor
inc
xor
and
cdq
shr
pushf
mov
pop
jne
out
and
sub
in
sbb
xchg
inc
jge
xchg
in
scas
and
scas
adc
lods
jne
ror
cmp
adc
cmp
and
ret
mov
cmc
sti
mov
popf
loope
pop
outs
(bad)
fwait
add
in
inc
mov
stos
xor
(bad)
mov
add
test
cmc
movs
rcl
retf
push
push
out
adc
(bad)
lea
loopne
sbb
mov
sub
cmp
push
lods
xor
nop
sub
dec
fst
cmp
and
jp
pop
and
in
xor
pop
ins
icebp
push
movs
test
or
push
shl
dec
sbb
(bad)
cmp
cmp
out
jmp
retf
(bad)
xchg
pop
ds
mov
and
jae
mov
cmps
lock
sbb
into
push
dec
imul
dec
jmp
or
dec
iret
sub
sub
outs
mov
xchg
sbb
and
sbb
in
cld
std
push
ror
push
test
leave
jmp
xor
mov
in
fs
mov
fiadd
mov
pop
aam
call
push
pop
repnz
je
loopne
add
or
mul
dec
mov
imul
sar
sbb
lods
adc
xchg
inc
mov
jl
popa
mov
cs
stc
cmp
(bad)
push
sub
mov
inc
push
sub
mov
xchg
pusha
shl
push
push
jns
cmc
enter
sub
mov
(bad)
fwait
ror
mov
push
scas
push
jl
repz
lods
test
xchg
nop
sbb
sbb
inc
add
ret
mov
es
movs
jnp
lods
cwde
jl
fisttp
lea
arpl
cdq
ss
lock
cld
(bad)
sub
cmp
push
adc
nop
mov
dec
mov
dec
test
mov
rcr
mov
xor
cld
mov
or
xor
add
das
adc
jb
inc
cmp
push
cmps
push
mov
ror
loop
ja
cli
sub
dec
mov
push
ds
and
xchg
pop
sub
dec
sbb
xchg
(bad)
or
stos
lods
fsubrp
addr16
mov
rol
(bad)
ins
mov
adc
ds
mov
push
cmp
daa
sahf
mov
ret
dec
imul
ficomp
pushf
push
aad
out
test
repz
leave
inc
int
in
sbb
in
mov
into
shr
retf
pop
imul
shl
int3
cmp
js
pop
fisttp
fs
lods
test
pop
push
loopne
popf
shl
and
mov
daa
xchg
or
mov
int3
test
(bad)
cmp
push
xor
cmp
and
dec
jg
mov
sbb
test
call
bound
(bad)
push
or
jge
in
(bad)
or
fistp
ja
imul
pushf
dec
xor
dec
hlt
xchg
sbb
mov
sub
push
inc
cmp
cmp
xchg
and
dec
sbb
xchg
mov
pop
cld
mov
sbb
mov
int
push
jl
push
out
(bad)
repnz
dec
(bad)
scas
and
mov
sub
imul
jo
jno
fcmovu
stos
jbe
inc
(bad)
fldenv
xchg
mov
jg
out
cli
xor
mov
add
mov
fcomp
adc
aaa
push
cwde
div
(bad)
fnstcw
in
jmp
data16
add
aaa
fmul
icebp
adc
setb
mov
mov
call
lahf
setns
jmp
pusha
clc
bt
jmp
lea
je
test
test
sub
push
cmc
cmc
pusha
cmp
push
lea
jmp
clc
cmp
call
mov
push
xchg
jmp
lea
jno
jb
pusha
bswap
shr
cmp
pushf
mov
mov
pushf
push
lea
jb
pusha
aam
mov
lea
pusha
sub
jmp
add
stc
pusha
cmp
push
lea
jb
pusha
cmp
call
pushf
call
mov
mov
push
ret
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
bt
cmp
call
lea
jae
pushf
lea
jmp
mov
mov
push
ret
jmp
mov
stc
jmp
xlat
imul
and
in
xchg
xchg
dec
mov
imul
imul
cwde
aas
jge
cs
jmp
sahf
mov
lea
adc
dec
add
pop
sub
sub
loope
mov
imul
gs
ror
call
or
faddp
imul
push
or
sub
jle
movs
fcmove
push
je
xor
scas
dec
xchg
mov
std
retf
mov
outs
xchg
adc
jecxz
fnstsw
mov
bt
test
jmp
mov
rdtsc
pop
pusha
lea
jmp
jmp
test
mov
pushf
jmp
jmp
lea
ja
jmp
pusha
mov
lea
je
bt
pusha
add
bt
stc
cmp
pushf
jmp
pushf
stos
push
lea
jmp
ds
aam
mov
mov
push
push
jmp
pop
out
mov
fcom
scas
jbe
xor
mov
and
jbe
(bad)
retf
and
cli
adc
mov
sub
and
into
push
ja
push
push
jns
es
pop
mov
jb
(bad)
out
bound
sub
retf
mov
das
mov
push
inc
inc
sbb
mov
ds
cdq
pop
xor
mov
mov
xor
addr16
or
sub
adc
push
push
xchg
add
js
rcr
fsubr
pop
pop
in
mov
or
and
mov
and
add
test
lea
add
pop
mov
add
sub
pop
shr
dec
jp
test
push
ret
mul
xchg
add
jmp
sub
xchg
cdq
ins
sub
bound
(bad)
pop
pop
jle
leave
aad
push
sub
inc
push
inc
in
mov
and
outs
push
movs
cmp
mov
inc
lods
or
push
cmp
leave
xor
call
fisubr
mov
adc
lea
jns
or
(bad)
cmps
dec
or
xchg
push
dec
pop
sub
mov
lods
lea
dec
or
mov
ret
inc
inc
(bad)
mov
sub
ds
mov
pop
sub
repz
cmps
out
push
mov
mov
out
rol
adc
pop
out
inc
ficom
(bad)
ins
inc
ss
loopne
in
rol
scas
les
jmp
or
mov
int3
add
push
add
out
push
cdq
mov
mov
int
std
add
sbb
movs
or
push
out
lahf
pop
loope
xchg
dec
or
rol
aad
lds
add
push
jmp
xchg
add
inc
push
and
lds
ja
aam
out
or
aam
arpl
gs
je
mov
xor
push
or
sub
movups
mov
and
or
push
daa
call
out
outs
adc
add
and
cli
fisub
inc
mov
adc
push
add
(bad)
(bad)
test
idiv
jo
sbb
dec
cwde
push
mov
mul
ins
into
daa
call
add
mov
jmp
stc
pusha
movzx
sar
add
lea
mov
jmp
lea
jne
pushf
mov
pusha
pushf
mov
pusha
push
mov
call
call
jmp
push
jmp
imul
pusha
pushf
mov
add
mov
lea
jmp
cmp
call
test
add
call
stos
pushf
mov
mov
lea
jmp
mov
lea
jmp
sub
pushf
pushf
lea
jne
mov
bswap
mov
shrd
mov
pusha
xor
not
sub
mov
movzx
shr
movzx
mov
rcl
sub
mov
shl
adc
bsr
dec
mov
sbb
inc
clc
mov
dec
mov
sub
sub
setle
mov
lea
stc
mov
stc
sub
aaa
and
movsx
mov
stc
shl
cmp
add
ja
pusha
lea
jmp
mov
pushf
mov
pushf
pushf
mov
push
lea
jmp
stc
test
call
mov
pusha
pusha
push
push
ret
pusha
lea
jb
pushf
call
cmc
sub
mov
mov
mov
pushf
pushf
jmp
cmp
pusha
jmp
lea
jb
pushf
pusha
cmc
cmp
cmp
call
mov
push
lea
jmp
out
pop
push
movs
cli
push
dec
xor
les
push
xchg
scas
adc
pop
cmps
jle
jmp
ret
push
aad
mov
pop
push
xchg
lea
pop
mov
aas
addr16
test
lods
xor
mov
jmp
inc
pop
scas
cmp
sub
xor
lock
fs
jae
dec
add
jae
popa
ds
inc
mov
(bad)
mov
stos
add
jl
fldcw
or
sbb
aad
das
or
lahf
lock
fstp
movs
out
fwait
pop
adc
xor
loopne
lock
mov
push
mov
sar
and
fidiv
dec
pop
or
nop
in
add
lods
mov
dec
retf
and
jmp
pop
push
push
ret
fistp
xchg
jns
pop
lahf
les
pop
cwde
mov
(bad)
arpl
mov
cmp
vpsubd
popa
or
pusha
jbe
(bad)
sub
inc
arpl
jne
std
sahf
in
mov
ror
jns
inc
retf
jmp
aas
aas
adc
inc
mov
push
push
sar
es
inc
add
xchg
pop
mov
push
in
dec
jnp
sub
cmp
cli
and
in
mov
cmp
movzx
stc
jmp
stos
imul
mov
mov
or
mov
push
dec
imul
pop
loopne
inc
jecxz
(bad)
iret
cmp
into
mov
xor
cmps
jb
push
addr16
and
lahf
fistp
cmps
int
cmps
xchg
mov
popa
int
mov
lahf
cmp
ret
mov
stos
mov
sbb
add
call
dec
enter
mov
mov
xchg
push
mov
mov
stc
sahf
pop
jmp
pop
xchg
loope
mov
sub
mov
in
bound
fistp
outs
stos
rol
ret
xlat
cli
dec
mov
sbb
outs
and
dec
std
pop
repz
outs
sub
hlt
mov
mov
cmp
retf
push
jne
cmps
aad
or
add
xchg
sub
pop
clc
rcl
test
cmp
js
popf
stc
cmp
cmp
push
sub
in
fmul
mov
xchg
movs
xor
push
pop
ins
sub
jle
mov
push
mov
adc
adc
jo
shr
add
and
fisubr
or
(bad)
push
add
jp
push
scas
jp
adc
push
stc
les
xchg
sahf
es
dec
mov
xchg
inc
sbb
and
lds
pop
cmp
cmps
cld
jmp
sbb
adc
sub
arpl
jp
jb
popw
or
cmp
gs
repz
in
mov
sbb
pop
(bad)
je
(bad)
cmps
push
pop
cmp
mov
int
es
push
mov
mov
cdq
movs
hlt
cmp
(bad)
loopne
loopne
cmp
test
test
dec
das
cmps
stos
(bad)
pop
push
sbb
jns
inc
mov
xor
inc
nop
addr16
lds
loop
pop
in
dec
fist
cmp
fadd
imul
sub
dec
push
xor
inc
xor
jae
or
sbb
lock
fistp
jmp
push
jge
adc
jbe
sub
into
xchg
jecxz
xor
mov
push
mov
jne
or
hlt
ins
xchg
xor
sahf
repz
retf
outs
ss
add
sti
outs
dec
dec
xor
mov
inc
jae
fstp
dec
ror
mov
mov
das
(bad)
pusha
aaa
sub
cmps
sbb
mov
fcomp
mov
fcmovnu
dec
int
inc
sub
push
in
pop
jge
rol
(bad)
inc
jns
in
std
es
mov
cmp
pushf
test
hlt
mov
mov
(bad)
fcom
sub
popa
lock
and
mov
js
leave
sar
mov
jg
inc
add
mov
rcr
xor
xor
iret
adc
loope
arpl
inc
test
add
push
in
into
call
std
xor
push
mov
fisttp
mov
pop
jb
paddusb
iret
test
test
push
dec
inc
(bad)
sbb
dec
mov
aas
cld
pop
dec
push
stc
ins
cs
fcmovne
popf
mov
mov
mov
and
pop
inc
fdivr
ins
add
les
mov
mov
add
sti
les
in
jl
mov
pop
into
dec
sub
stos
dec
mov
dec
popf
das
sbb
pusha
in
pop
pop
nop
cdq
add
xor
pop
std
sub
jmp
cmps
xor
ret
in
int
mov
mov
outs
sahf
xchg
pop
pop
dec
loope
pop
out
dec
movs
fild
ret
sbb
adc
mov
jno
call
inc
scas
or
dec
mov
mov
mov
fild
dec
in
pusha
sahf
not
icebp
sbb
inc
mov
lods
push
out
aas
loop
loop
mov
movs
repnz
or
cmps
(bad)
push
fcomp
mov
cmps
ja
cmp
ds
iret
or
push
retf
das
dec
or
cmps
jge
(bad)
aaa
out
jmp
mov
test
clc
and
push
popf
dec
mov
sub
inc
sub
fisubr
xor
push
cmps
pop
lods
aad
lods
jl
in
xchg
repnz
or
push
div
ret
addr16
jnp
nop
or
clc
mov
mov
xor
and
sbb
mov
fcmovnbe
jl
push
mov
adc
das
adc
sub
cmp
push
fbld
jg
xor
(bad)
inc
dec
(bad)
mov
scas
and
sub
sbb
mov
test
jmp
push
xor
cmp
push
pop
add
jl
es
xchg
push
iret
push
dec
push
lods
xchg
gs
sbb
ss
mov
push
js
sbb
nop
or
and
lahf
test
mov
or
cmp
jnp
xchg
jle
push
push
jecxz
aad
pop
retf
ds
clc
out
add
push
addr16
or
retf
jle
(bad)
in
xchg
sbb
mov
ret
test
in
jmp
js
jns
push
pop
mov
test
imul
int
or
retf
cmps
nop
ins
std
fdiv
les
cs
inc
out
xchg
xchg
or
xor
push
mov
pop
jg
mov
cmps
dec
adc
retf
mov
mov
in
es
and
mov
js
dec
push
add
js
test
sub
(bad)
mov
or
ins
loop
ret
cli
or
jmp
mov
(bad)
and
sti
mov
int
xchg
idiv
dec
inc
sbb
arpl
fdivrp
shr
pushf
scas
repz
push
or
jnp
std
mov
mov
aad
adc
pusha
adc
jl
in
push
repnz
pop
push
xor
sbb
adc
lods
call
xor
mov
add
inc
jmp
(bad)
shl
sar
cmps
adc
mov
jg
out
outs
aad
std
sub
dec
(bad)
int3
loopne
mov
rcr
rcl
popa
in
dec
out
xchg
pop
loopne
xlat
(bad)
push
nop
add
lods
fstp
es
or
ret
mov
add
mov
adc
or
mov
cmp
in
push
imul
jg
and
push
mov
inc
(bad)
push
test
sbb
fdiv
lods
cwde
dec
fimul
dec
sbb
jo
in
pop
retf
xor
or
and
inc
mov
rep
(bad)
(bad)
loopne
or
add
ja
pop
idiv
fldenv
mov
idiv
sub
mov
out
psubq
dec
enter
stos
(bad)
out
jns
stos
mov
and
lods
mov
inc
jnp
jnp
mov
scas
test
cld
push
je
arpl
xor
push
stc
jp
mov
add
icebp
xor
sbb
call
sbb
push
pop
rol
lods
repz
rol
dec
jnp
imul
std
jae
dec
pop
mov
aas
cmp
fidivr
push
lods
dec
js
fwait
(bad)
repnz
mov
movs
mov
xchg
adc
ins
test
add
rol
aaa
fdiv
inc
sahf
jns
loop
arpl
out
mov
jns
jo
aam
fnstsw
push
nop
jnp
sbb
pop
sbb
push
fbstp
int3
out
mov
call
fadd
mov
jno
cs
xor
shl
call
test
or
jmp
sbb
pop
jae
inc
xchg
bswap
into
ror
mov
xor
fadd
push
stc
(bad)
dec
shr
ror
test
sar
rol
jp
xor
mov
push
jmp
lea
sbb
pop
jnp
cmp
scas
mov
scas
loop
xchg
or
push
mov
mov
mov
ror
nop
dec
leave
jmp
popa
loop
xor
jne
cmc
mov
call
outs
mov
mov
or
fisttp
mov
mov
aas
mov
add
jno
xchg
(bad)
cli
jle
push
(bad)
xlat
fsubrp
mov
and
sti
fld
cmc
mov
adc
or
ins
or
and
sub
fisttp
cs
(bad)
retf
lds
xchg
ss
mov
or
and
xor
psubsb
jo
sbb
cs
and
out
mov
mov
test
sbb
ret
hlt
sub
mov
popf
outs
mov
sub
fisttp
outs
inc
add
add
icebp
pop
es
inc
xor
sbb
bnd
dec
fdiv
sub
jle
dec
loope
push
mov
xchg
add
leave
inc
out
adc
gs
xlat
ret
(bad)
mov
adc
bound
mov
repnz
mov
jmp
adc
movs
test
test
mov
popa
aam
(bad)
sahf
inc
add
cmc
mov
sub
mov
jp
cmp
ret
xchg
cdq
mov
mov
mov
jns
imul
jbe
fsubr
je
mov
xlat
aas
mov
mov
repz
inc
inc
out
sbb
mov
inc
loopne
(bad)
aad
mov
mov
popa
fld
aas
mov
cmps
mov
popa
retf
in
jg
inc
rcl
pop
lahf
sti
mov
xchg
add
mov
movs
arpl
adc
push
jecxz
mov
pop
cs
adc
loop
sar
ret
xchg
(bad)
sbb
sbb
gs
adc
das
xor
adc
mov
mov
push
fsub
adc
adc
push
push
mov
fst
fist
mov
fisub
sub
push
retf
sub
cmp
fwait
sbb
jne
jmp
jmp
jae
adc
cmp
pop
add
mov
mov
adc
push
jo
ret
lea
mov
aaa
dec
xchg
push
cmps
sbb
pop
jmp
ja
xlat
ret
add
shr
add
inc
xlat
add
stos
mov
movs
popf
adc
pop
pop
(bad)
cmp
test
xchg
or
fwait
addr16
in
adc
mov
cs
ja
and
or
test
mov
les
test
lahf
cmps
and
or
ret
neg
js
pop
jl
mov
xchg
cmp
fldcw
lds
dec
mov
fld
(bad)
outs
sbb
aaa
test
mov
cs
xchg
and
adc
mov
push
ds
ss
mov
mov
xchg
aaa
mov
(bad)
jmp
ins
pslld
pop
push
and
scas
mov
outs
dec
add
dec
or
and
scas
xor
cmp
jp
xor
nop
cli
dec
lods
mov
(bad)
(bad)
repnz
push
and
mov
or
dec
or
mov
aam
pop
push
or
xchg
jnp
inc
pop
or
scas
popf
xchg
addr16
cdq
cmc
pop
pop
jmp
pop
inc
mov
sti
mov
push
jl
add
or
inc
inc
adc
mov
push
jne
xchg
dec
pop
mov
or
loopne
jmp
xchg
shl
cmp
popa
dec
cmp
inc
mov
mov
cmp
imul
imul
push
xor
shl
dec
adc
push
fs
neg
and
iret
jae
mov
push
add
daa
jb
and
or
adc
shl
and
in
fild
data16
xchg
cmp
pop
inc
clc
stos
inc
cmp
call
add
mov
clc
mov
or
jns
retf
inc
(bad)
jnp
les
mov
test
ret
add
test
ret
adc
lds
mov
repnz
popf
je
fs
or
add
call
mov
and
pop
not
ins
int3
sbb
mov
sbb
pop
std
xor
clc
(bad)
stos
adc
enter
cmps
mov
push
pop
hlt
dec
test
rcr
mov
cmp
sub
sbb
sahf
dec
xor
aad
sub
sbb
xlat
push
cmps
into
fbstp
mov
aaa
hlt
or
mov
cmp
shr
inc
xchg
pop
push
icebp
mov
ds
movs
and
inc
push
out
idiv
pop
pop
sbb
enter
cmp
mov
imul
push
scas
outs
outs
imul
bound
inc
sbb
ret
loopne
addr16
jno
sub
sub
test
cli
pop
mov
xor
aaa
(bad)
sbb
aam
out
rcl
enter
mov
pop
and
aam
jmp
pop
mov
ss
(bad)
pop
in
xor
cmc
xchg
test
popf
mov
xchg
dec
mov
jae
mov
sub
dec
shr
xchg
sub
cmps
fisub
or
mov
xor
or
xchg
mov
add
(bad)
fisub
scas
pop
adc
les
pop
xchg
add
pop
les
adc
nop
loope
(bad)
ficomp
jmp
add
mov
in
jecxz
lea
sub
cmp
xchg
cwde
ins
push
or
add
sub
ins
xor
push
inc
mov
push
xchg
or
or
es
ret
ja
fist
mov
retf
out
out
imul
test
push
clc
lea
mov
dec
adc
sti
or
mov
fwait
xchg
daa
shl
retf
clc
pop
xchg
ja
fwait
mov
add
imul
mov
fist
stc
movs
aad
xor
mov
loopne
mov
outs
mov
push
cdq
es
push
cmp
into
cmp
xor
adc
add
int3
scas
ror
jecxz
shl
lock
mov
mov
lea
bound
push
sub
mov
dec
sbb
pop
add
ficomp
add
push
mov
stc
lds
loope
pop
mov
sub
stos
pop
lds
ja
into
cwde
shl
fisubr
adc
sahf
pop
mov
and
dec
shl
test
sbb
jo
(bad)
jae
mov
push
and
aas
lods
adc
dec
sub
fnstsw
mov
xor
inc
inc
addr16
sub
mov
pop
xlat
mov
leave
lock
jmp
cmp
inc
pop
mov
imul
fistp
xchg
lods
mov
inc
jmp
aas
idiv
rcr
xchg
dec
test
sbb
imul
jae
mov
pop
cdq
ror
and
mov
dec
cmc
xchg
xchg
(bad)
cmp
or
jle
movs
stc
out
mov
jnp
add
dec
hlt
fdivr
or
xchg
arpl
inc
mov
or
pop
ret
xlat
mov
mov
in
lock
lods
mov
int3
loope
adc
adc
push
aas
mov
dec
mov
mov
push
sbb
push
shr
sub
imul
rol
test
lds
(bad)
ja
ins
push
and
sub
hlt
and
dec
ja
lock
imul
and
aaa
sub
sar
sbb
pop
imul
sar
pusha
ret
or
sbb
adc
jl
ret
pop
push
mov
in
sti
scas
fdivr
imul
cmp
aad
cmp
jg
inc
push
sub
cmp
dec
stc
mov
std
stos
adc
xor
jo
xor
add
jns
nop
je
pop
rcl
out
pusha
std
dec
int3
xor
dec
dec
mov
int3
test
lahf
int
xor
mov
mov
test
movs
xchg
loope
xor
or
mov
mov
jne
dec
adc
sbb
or
mov
mov
iret
sub
daa
loopne
dec
enter
xchg
push
lock
pusha
or
sahf
mov
(bad)
lods
push
ins
hlt
dec
gs
ret
es
xchg
imul
jnp
xchg
mov
push
and
push
jg
loope
outs
xchg
adc
movs
and
add
push
lods
xor
and
or
sbb
shl
es
mov
mov
pop
xchg
aas
fisttp
pop
cs
in
das
repz
push
mov
bound
or
test
mov
sub
mov
(bad)
cmp
icebp
hlt
jae
ins
dec
(bad)
lds
xor
ja
jnp
aam
mov
inc
imul
and
pop
xor
ja
adc
or
fsubr
pop
sub
and
aam
je
call
mov
loopne
sub
push
xor
mov
(bad)
jg
aas
xchg
enter
imul
mov
in
cmp
loopne
cmc
lgs
adc
push
mov
stos
das
test
outs
sub
shr
call
int3
xchg
inc
xor
mov
repnz
lds
push
in
or
cmc
cmps
lods
jp
pop
mov
lods
inc
jge
or
ficom
xchg
fucomip
pop
(bad)
jmp
jp
push
mov
add
enter
out
xor
jmp
into
or
ins
bound
fisub
sub
dec
out
xor
mov
fst
test
(bad)
mov
xlat
hlt
jne
jg
sbb
pop
xchg
mov
add
xchg
adc
or
xor
leave
(bad)
(bad)
aaa
dec
lahf
adc
fcmovnb
outs
sbb
jp
xor
and
in
sub
leave
in
add
popf
pushf
outs
retf
fs
shl
lock
pusha
or
ins
fsub
mov
gs
inc
push
add
jbe
mov
cli
mov
fs
pop
sbb
adc
pop
dec
ja
mov
stc
mov
retf
inc
adc
fstp
add
xchg
and
pop
mov
xchg
jle
das
call
inc
pop
sbb
ins
fisub
cmp
and
jno
cs
sub
aas
mov
mov
push
adc
mov
inc
mov
ret
inc
pop
lds
xchg
mov
pusha
mov
bound
mov
sub
in
adc
pop
(bad)
sbb
jle
xor
jg
(bad)
mov
dec
rcr
inc
cmp
imul
pop
clc
jmp
pop
aad
ficomp
in
sbb
mov
cmp
cmps
mov
mov
inc
ins
hlt
jp
mov
in
arpl
and
bound
jg
adc
test
inc
and
push
rcl
cwde
push
add
pushf
xor
pop
jle
rol
imul
inc
push
sub
ds
test
jmp
sub
cwde
lock
mov
outs
outs
out
push
(bad)
jl
dec
sbb
dec
in
pop
fwait
mov
add
aad
mov
leave
ja
jne
mov
mov
sbb
ud0
and
je
cwde
(bad)
rcr
jg
and
add
mov
sub
jg
lahf
jmp
ficomp
(bad)
cld
xor
inc
push
sub
out
fist
mov
es
jnp
jae
addr16
ins
call
pop
or
not
and
ja
shr
and
ror
test
je
and
xchg
mov
sbb
xor
adc
call
mov
or
movs
jge
scas
or
jmp
nop
mov
jmp
sbb
push
test
and
xor
bound
fst
push
fmulp
rcr
fucomi
mov
mov
cs
cwde
test
mov
repnz
jne
out
and
out
mov
movs
pop
jp
mov
pop
mov
sub
into
mov
arpl
je
scas
sub
movs
mov
shl
bound
jb
add
movs
mov
addr16
call
xchg
inc
cwde
cmp
push
lea
int3
mov
pop
xor
or
fild
mov
fstp
push
jns
ret
lods
jb
sub
dec
pop
jns
imul
sar
pop
stos
pop
or
mov
outs
(bad)
dec
fld
ja
pop
fisttp
dec
retf
fsub
cmps
or
cmps
xor
ja
std
adc
mov
push
cmps
movs
mov
div
or
movs
push
test
sti
cli
push
sbb
sbb
adc
push
cmp
pusha
lock
in
jno
int3
test
jecxz
ret
jecxz
cs
sub
and
sub
dec
lahf
and
push
sbb
movs
pop
mov
cmps
popa
cmp
iret
stos
sti
cmp
test
and
shl
movs
fimul
ja
out
cmp
pop
xchg
and
popf
cs
mov
and
mov
call
sbb
push
jg
cmp
fimul
fwait
dec
loopne
js
in
stos
inc
cmc
inc
scas
mov
push
xor
popa
aas
xor
sahf
pop
test
mov
repnz
fsubr
out
ret
jb
and
push
mov
mov
cmp
jno
mov
mov
mov
mov
dec
fmul
push
xor
sub
leave
push
xor
retf
inc
cld
or
mov
stc
lea
je
call
jmp
clc
test
mov
pushf
lea
je
clc
sub
pushf
cmp
jmp
jmp
imul
clc
clc
add
pushf
mov
lea
jmp
mov
push
lea
call
call
lea
mov
mov
pusha
mov
push
push
ret
cmp
test
test
jmp
pushf
pushf
lea
jne
test
stc
bt
xor
aam
mov
and
setle
clc
sar
add
cmc
rol
mov
call
mov
push
call
xor
shr
add
mov
sub
jb
mov
add
call
sub
jne
ret
pop
call
dec
xor
cwde
in
in
mov
cmp
xlat
xor
mov
xlat
das
inc
in
push
adc
mov
jnp
fdiv
jae
movs
repnz
es
lods
adc
xchg
not
xor
jo
xchg
nop
inc
inc
add
loopne
mov
movs
sub
pop
loop
retf
pop
push
pop
je
hlt
sbb
and
sub
jmp
cmp
js
cmp
sbb
outs
cmp
fld
out
test
or
mov
inc
sbb
sbb
hlt
call
call
and
stc
dec
mov
pop
mov
push
or
in
mov
mov
cmc
cmc
cmc
add
pushf
pushf
jmp
add
inc
js
je
jb
arpl
jae
mov
mov
lea
jne
setne
or
neg
mov
cmp
cmc
cmp
call
mov
pusha
push
mov
push
ret
hlt
push
jle
inc
pop
xor
xchg
pop
mov
push
sbb
and
es
jb
inc
test
fcmovbe
mov
pop
aad
rcl
out
mov
xchg
adc
cdq
xor
push
mov
mov
dec
pop
dec
dec
pop
and
out
rcr
dec
inc
mov
sub
lods
inc
push
mov
sub
cli
or
call
adc
call
sub
push
xchg
xor
(bad)
xchg
lds
imul
(bad)
jns
mov
pushf
call
bsr
rcl
add
movzx
pushf
pop
mov
mov
pusha
jmp
lea
jne
pushf
mov
call
push
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
call
clc
pop
ret
bt
test
mov
push
jmp
cs
pop
scas
and
fsub
pop
fist
mov
fs
scas
sbb
les
cdq
gs
push
ret
(bad)
dec
test
xor
rcr
mov
jl
outs
sub
sbb
adc
mov
rcl
cmps
ficom
fdiv
cwde
xchg
aam
or
xchg
outs
ror
loope
dec
fidivr
in
rol
out
stos
scas
ss
mov
(bad)
pop
js
adc
aad
(bad)
or
in
mov
lea
jb
cwde
mov
das
aas
cmp
jmp
call
add
dec
outs
arpl
inc
jb
add
mov
mov
movzx
rep
bswap
mov
mov
xchg
lea
not
lods
shl
or
sar
sub
shl
bt
call
bswap
push
sar
mov
add
and
bsf
push
btr
shr
inc
push
shrd
rcr
bt
push
shld
bt
rol
xor
push
or
xadd
sar
push
mov
rcl
call
shrd
mov
cmp
cmp
push
pusha
lea
jne
aas
xor
cmc
bsr
inc
movsx
mov
adc
jmp
movsx
cwde
cwde
lahf
lea
jmp
cmc
not
stc
call
pushf
sub
stc
pushf
xor
pushf
pushf
cmc
lea
jle
ror
pusha
clc
cmp
lahf
lahf
jmp
jmp
lea
jb
movzx
sar
cmp
bswap
mov
push
lea
jb
aaa
mov
cmp
bt
stc
sub
call
call
mov
pushf
mov
pusha
mov
lea
jl
pushf
push
push
xchg
push
pushf
jmp
push
mov
lea
je
cmc
cmp
call
add
jmp
push
push
imul
pop
or
jle
js
not
mov
lahf
aam
pusha
push
enter
repnz
mov
xchg
jns
movs
sub
push
xchg
mov
ins
push
mov
cdq
(bad)
aaa
pusha
push
or
out
jb
cmp
xor
push
xor
sbb
repz
ins
jmp
aaa
pop
fldcw
or
hlt
ds
sub
test
fwait
pop
rol
aaa
fs
popa
dec
and
inc
lds
mov
aad
lock
aaa
fst
pop
pop
jo
adc
js
push
mov
arpl
sub
in
mov
or
inc
cmp
test
pushf
pushf
jmp
add
sub
je
bt
bt
not
bt
bt
call
leave
fsubrp
jbe
cmp
sbb
das
fs
loope
pop
pop
dec
and
ja
in
mov
jb
mov
repnz
sbb
data16
hlt
xor
fbld
mov
loop
(bad)
in
mov
xchg
popa
std
retf
scas
dec
sub
add
sub
mov
jno
imul
lea
es
leave
out
inc
(bad)
in
mov
mov
jmp
sub
js
loop
mov
push
sar
adc
call
dec
adc
sbb
(bad)
xchg
inc
addr16
push
jo
jmp
mov
retf
add
sub
jmp
dec
call
jle
mov
cmp
test
adc
sbb
mov
cli
sub
xchg
out
push
es
jne
scas
jmp
jg
sbb
fidivr
pop
stos
xchg
repnz
xchg
pop
or
sti
in
inc
xor
push
push
adc
cdq
inc
mov
adc
xor
pop
fcomp
nop
addr16
mov
xchg
sar
inc
jbe
xchg
jne
cmp
into
cmp
sbb
popf
jmp
add
xchg
lods
test
ror
lods
in
loop
mov
push
ficomp
mov
mov
sub
lds
aaa
hlt
push
mov
mov
add
adc
loopne
push
cmc
popa
repnz
shr
jns
sub
push
xchg
sahf
mov
aad
fldenv
sbb
jns
jmp
out
iret
ja
mov
jae
test
jl
xchg
cdq
or
sbb
pop
test
fcmovnbe
loopne
and
adc
cmp
and
mov
xchg
or
or
js
adc
cld
cmp
cld
mov
mov
out
shr
icebp
in
jl
fild
and
cli
icebp
in
push
jns
pop
outs
jp
out
mov
jae
and
je
mov
xlat
in
out
dec
sahf
mov
mov
call
jmp
cmc
cmp
pusha
mov
lea
je
cmp
push
push
cmp
pusha
pushf
lea
je
clc
cmp
jmp
xchg
out
out
push
fnstsw
jle
scas
lods
cli
cli
xchg
shl
shl
xchg
addr16
xor
test
mov
imul
cmp
mov
test
lea
lss
inc
mov
movs
mov
out
in
test
mov
sbb
cmc
mov
stos
mov
in
jns
xor
pop
cmp
mov
xor
xlat
mov
test
mov
jbe
ins
and
add
xor
mov
call
arpl
arpl
and
and
ins
outs
xchg
scas
loop
in
push
xchg
mov
stos
fs
sub
out
not
add
and
sub
js
sub
add
imul
in
xchg
adc
test
jg
mov
ds
jno
or
outs
and
repnz
xchg
push
push
jnp
enter
xor
mov
mov
scas
dec
outs
sbb
fcomp
push
add
test
mov
outs
int3
mov
les
dec
lea
add
xor
ins
add
mov
push
inc
add
mov
add
mov
pushf
mov
lea
call
jmp
shl
rcl
stc
adc
and
pusha
mov
push
jge
clc
sbb
fist
xchg
push
push
sub
int
and
jns
iret
fist
mov
sub
sub
into
ror
cld
cmp
sub
inc
push
ins
add
mov
(bad)
and
or
fwait
push
push
push
mov
mov
xor
lea
call
lahf
adc
sahf
rcr
sub
jne
mov
pop
rol
pop
pop
ret
cmp
mov
mov
push
pushf
lea
jae
pushf
sub
lahf
mov
pop
lea
pusha
pusha
mov
lea
call
lea
add
cwde
pop
sbb
bsf
shl
lahf
pop
bt
pushf
cmp
pusha
call
push
mov
lea
jne
pusha
mov
mov
mov
lea
jmp
mov
pushf
movsx
mov
pusha
pushf
call
or
mov
call
sahf
xor
xchg
pop
aaa
sti
mov
cmp
sub
fld
ret
push
jno
shl
cld
push
push
xor
out
ret
jmp
inc
out
pop
mov
jno
ror
or
retf
dec
dec
adc
fstp
and
xor
mov
test
cdq
sub
out
mov
jp
mov
movs
pushf
ss
aad
cdq
lods
or
inc
dec
jl
movs
jp
push
or
(bad)
sub
bt
cmp
call
push
pushf
mov
push
mov
pushf
push
lea
jmp
mov
push
mov
push
aad
fcom
push
aam
mov
push
xlat
push
adc
push
ret
push
ret
push
ret
push
adc
push
rcl
icebp
push
(bad)
stos
ficomp
fbstp
daa
rcl
daa
out
inc
jmp
pop
sbb
inc
xchg
inc
int3
das
mov
xlat
jbe
and
scas
sbb
mov
adc
mov
push
or
fist
mov
cli
mov
cwde
bts
mov
bsr
shrd
shld
push
mov
clc
pushf
cmp
test
jmp
sub
movzx
setne
push
lea
add
lea
lea
sub
and
mov
add
mov
call
pushf
lahf
mov
mov
pusha
call
jmp
cmp
add
push
mov
mov
push
lea
jmp
call
bt
cmp
pusha
jmp
mov
popa
sbb
js
in
outs
and
out
shl
fwait
cmc
sar
sahf
out
sub
sti
jns
outs
adc
ja
gs
int
scas
inc
lea
push
jmp
js
xchg
mov
mov
es
sbb
cwde
push
pushf
push
mov
sub
inc
cdq
sbb
pop
shl
in
jg
and
push
ret
mov
mov
(bad)
gs
pop
push
mov
pop
loope
xor
dec
or
data16
call
mov
lea
ja
call
stc
and
mov
or
xchg
fcom
or
(bad)
inc
pop
xor
inc
adc
add
pop
add
jge
pop
inc
mov
jmp
add
jns
push
push
and
ret
mov
and
xor
mov
jno
add
fsubr
fstp
(bad)
pushf
push
pop
pushf
out
imul
stos
or
sub
cmc
push
clc
pusha
rol
jmp
ror
pushf
xor
jmp
pusha
sbb
stc
lea
sub
pusha
mov
jmp
call
pushf
pusha
lea
ja
clc
pusha
call
jmp
lea
pusha
jmp
mov
call
and
bts
shrd
shrd
sub
shr
mov
call
push
lea
jae
sbb
mov
mov
not
mov
shl
clc
mov
pushf
test
pushf
mov
sub
cmp
repnz
push
lea
jne
push
mov
pushf
sub
shl
not
clc
lea
mov
pushf
sub
pushf
cmc
push
pop
cmp
cmp
lea
je
push
pushf
pusha
lea
ja
inc
stc
sub
neg
pushf
dec
sub
lea
add
sbb
not
rcr
mov
ror
mov
cmc
cmp
pushf
repnz
mov
push
pushf
lea
jne
pushf
mov
movzx
mov
pushf
cwde
pop
pushf
lea
call
lea
pushf
mov
not
jmp
shrd
add
add
dec
btr
sbb
lea
mov
stc
mov
cmp
repnz
call
sbb
add
stos
mov
add
ror
push
add
add
add
cwde
pop
add
add
add
add
and
add
xchg
pop
add
outs
pop
add
ins
pop
add
add
add
cld
aaa
ins
pushf
cmp
push
lea
push
pushf
mov
pushf
push
push
lea
ja
pushf
lea
jb
cmp
cmp
push
jmp
xchg
pop
pop
sub
dec
xchg
in
or
repnz
pushf
mov
add
xchg
movs
shl
das
cld
push
ror
scas
dec
sti
retf
rol
jbe
clc
xor
pop
ins
jb
aad
push
adc
fdiv
into
pop
mov
imul
test
movs
cmp
dec
std
outs
pop
cmp
add
cmp
ret
add
sub
sbb
rcr
jne
and
or
push
std
inc
inc
and
enter
(bad)
dec
pushf
shl
repnz
pop
call
lea
je
call
lea
jne
btr
and
shrd
pushf
mov
cmp
add
sub
jbe
movzx
jmp
loop
dec
inc
add
nop
call
aas
pop
push
rol
push
and
cmp
ror
push
or
dec
push
jmp
fsub
mov
inc
sbb
dec
push
pop
lock
add
fwait
pusha
mov
lods
(bad)
lea
or
inc
pop
sbb
cmp
arpl
or
fld
call
(bad)
ja
dec
inc
pop
fadd
(bad)
cmps
cli
mov
push
jmp
stos
or
pop
outs
dec
bound
stc
jbe
in
mov
pop
jbe
jmp
jmp
jge
into
fs
dec
div
jno
arpl
ret
ins
shl
inc
loope
push
aas
push
(bad)
iret
cld
mov
enter
jle
and
fild
xlat
jne
adc
or
nop
lahf
leave
cdq
shl
mov
repnz
out
jo
imul
or
adc
push
arpl
pop
sbb
sub
into
adc
lods
pop
nop
cli
and
mov
daa
inc
adc
leave
arpl
inc
mov
xor
sub
or
jne
cmp
not
pushf
sub
clc
clc
rol
stc
stc
cmp
sub
mov
stc
xor
push
ror
call
gs
push
xchg
dec
xor
gs
and
jmp
(bad)
fstp
out
or
and
push
pop
or
movs
sub
mov
std
and
out
pop
mov
inc
mov
scas
scas
hlt
jg
push
movs
or
call
adc
adc
data16
xlat
aad
lock
mov
sti
cli
ret
(bad)
fcomip
stc
and
cli
les
xchg
pop
add
pop
fistp
dec
in
xchg
sbb
lock
xchg
rcr
mov
mov
jmp
jmp
jno
or
push
imul
cmp
cmps
inc
ret
xor
push
xchg
mov
mov
push
push
in
ja
cmc
ins
imul
cmc
shl
push
dec
or
xchg
pop
add
xchg
cmps
inc
xor
mov
aas
inc
enter
xchg
arpl
or
add
bt
cmp
stc
push
pushf
clc
mov
jmp
jmp
add
push
pusha
lea
jmp
shld
mov
bt
cmp
jmp
lea
jae
clc
shrd
shr
shld
mov
bswap
bts
mov
bsr
not
shl
btr
mov
cmp
pusha
test
stc
sub
cmp
clc
call
lea
jae
push
pusha
mov
lea
jmp
inc
xchg
inc
std
repz
mov
movs
or
pop
jmp
xchg
cmps
xor
inc
test
push
loopne
shl
(bad)
mov
mov
inc
stos
arpl
stos
imul
dec
popf
(bad)
fcomp
push
jp
jmp
and
cwde
push
out
aam
mov
push
movs
sub
adc
inc
jne
mov
cmp
std
or
and
xchg
(bad)
movsx
movzx
mov
movzx
lea
jmp
not
pop
not
lea
jle
pushf
push
mov
lea
call
jmp
sub
cmp
push
cmc
cmp
push
jmp
pushf
not
jmp
jmp
call
stc
push
push
cmp
pusha
jmp
mov
pushf
lea
je
test
cmc
add
push
push
cmp
push
call
jmp
jne
gs
xor
fs
ins
add
ja
std
dec
xchg
add
pushf
push
pusha
imul
cmc
call
not
stc
clc
xor
mov
rol
cmp
jmp
enter
xor
aaa
cmp
fdiv
les
mov
fnsave
xchg
adc
aas
pop
push
scas
inc
inc
adc
(bad)
(bad)
lea
mov
jne
cmp
in
inc
push
pop
movs
xchg
test
sahf
mov
xlat
and
pop
mov
pop
inc
cmp
mov
mov
ins
shr
hlt
push
sbb
jno
and
cmp
adc
mov
sbb
aam
push
call
mov
nop
adc
outs
imul
jp
stos
or
mov
in
cld
jae
xor
call
jmp
ja
add
popf
lods
dec
push
fdiv
push
bound
pop
jecxz
push
mov
dec
je
pop
fwait
ret
jecxz
mov
(bad)
pushf
out
jns
idiv
repz
call
or
mov
fs
call
call
xor
stc
arpl
imul
jnp
xor
sahf
pop
es
dec
adc
jae
pop
ret
(bad)
aam
leave
xor
jle
mov
push
dec
pop
ins
ret
(bad)
push
mov
cmps
mov
test
arpl
cmp
std
shl
xor
cs
shr
test
push
retf
imul
je
rol
adc
lock
mov
sahf
in
xor
dec
dec
test
lock
lods
dec
jnp
(bad)
addr16
mov
ja
adc
aad
imul
cmp
stos
inc
sbb
pop
mov
and
lods
and
xchg
sub
lods
lea
push
fnstsw
push
pop
ja
les
pop
xor
pop
jb
jbe
push
sub
sbb
mov
pop
or
clc
push
adc
pop
jmp
xrelease
push
mov
push
out
xor
cmp
xchg
popf
add
sahf
adc
out
or
mov
out
(bad)
jmp
ja
or
adc
mov
sbb
sahf
mov
lea
bound
imul
nop
pusha
test
sbb
repz
iret
cli
das
icebp
jns
and
jno
adc
pop
lea
and
mov
adc
fnstsw
pop
(bad)
test
das
xchg
neg
push
leave
dec
adc
out
dec
mov
je
mov
stc
sar
mov
fcom
dec
popf
fs
mov
das
xor
aad
push
jp
adc
jle
(bad)
sbb
mov
(bad)
or
xlat
cmp
call
add
dec
outs
arpl
inc
ins
ins
outs
arpl
pushf
cwde
lea
mov
pusha
pushf
jmp
aad
or
xchg
pop
fbld
sbb
cdq
ins
xchg
int
ret
xor
loope
std
sbb
shl
shr
inc
or
pop
sub
pop
data16
mul
lahf
stos
outs
or
loopne
cmp
adc
into
pop
in
fs
cmp
enter
fist
sbb
inc
push
jo
fbld
sub
test
pushf
inc
sub
pop
(bad)
jge
mov
cdq
das
or
cmpxchg
fnstcw
push
dec
or
test
pop
inc
sub
aaa
sbb
and
pop
ja
push
repnz
inc
int3
adc
jle
ja
jmp
inc
mov
lods
pop
pop
dec
adc
ds
cs
out
mov
sbb
int
xchg
xor
fucomp
jmp
adc
lds
adc
adc
pusha
jmp
mov
(bad)
mov
cwde
scas
test
push
ins
or
inc
cmp
mov
and
inc
inc
enter
jmp
xchg
xchg
ret
cmp
in
lahf
mov
(bad)
aam
ret
sbb
xor
call
dec
sub
outs
add
pusha
or
push
rcl
ror
ret
mov
mul
imul
in
mov
movs
pop
fbld
sub
mov
lds
pop
sbb
sbb
xor
or
cmp
ins
das
mov
icebp
loopne
lods
jg
or
jle
jge
(bad)
sti
mov
sbb
add
jns
lods
in
inc
cmp
test
xlat
test
pop
dec
pop
cmp
jns
xor
mov
dec
jp
sbb
test
repz
cmp
xor
pop
outs
push
inc
push
xor
inc
cmps
mov
pop
mov
sub
xor
sbb
pop
xor
ins
nop
retf
inc
dec
repz
cmp
jp
clc
mov
jmp
in
mov
sub
lahf
sub
mov
or
sub
enter
add
adc
(bad)
dec
pop
push
lea
ja
cwde
not
lea
pusha
jmp
lea
ja
sbb
clc
call
mov
lea
jae
movsx
lea
pusha
pushf
push
lea
call
pusha
pusha
pushf
xchg
pushf
push
lea
jae
cwde
mov
call
push
jmp
lea
ja
clc
sar
sub
cmp
push
call
bt
clc
imul
test
test
cmc
cmp
add
pushf
mov
lea
jmp
mul
je
ins
sub
or
aam
inc
les
mul
xchg
add
in
jecxz
mov
and
fmul
aas
test
add
jne
scas
in
mov
jae
repz
imul
dec
in
push
mov
xchg
dec
dec
ins
pop
in
or
or
pop
sbb
(bad)
daa
jge
ficomp
retf
sub
out
mov
(bad)
pop
ss
add
push
push
pop
jno
mov
jmp
cmp
jae
pusha
lea
jmp
rol
bsf
ror
add
sub
or
rol
shr
mov
test
pusha
shr
cmc
bt
cmp
mov
jmp
daa
(bad)
repz
jmp
inc
call
jmp
mov
cld
jb
test
imul
jge
jmp
mov
dec
add
mov
mov
push
mov
xor
mov
push
push
pop
or
xor
mov
inc
pop
and
add
jmp
pop
pop
inc
jne
data16
add
stos
or
outs
add
mov
push
pushf
pushf
lea
jmp
imul
call
sbb
pop
ss
aas
shl
ins
ss
ins
sbb
retf
arpl
or
pop
ins
aam
stos
jp
push
test
mov
icebp
(bad)
push
adc
sahf
jae
sar
es
loop
or
repz
mov
dec
push
repnz
xchg
das
mov
movs
movs
sbb
or
in
push
fs
inc
push
jb
aam
mov
and
mov
sub
inc
mov
enter
pop
outs
push
push
mov
not
lea
jmp
je
and
hlt
lahf
add
or
inc
inc
sti
mov
(bad)
jmp
sub
add
and
pop
inc
imul
dec
xchg
add
cli
jmp
outs
jmp
fsub
xor
popf
dec
loopne
gs
adc
or
mov
dec
sbb
test
pushf
sbb
movs
movs
rol
call
fcomp
sub
xor
cmc
popa
test
lods
mov
or
int
xchg
jmp
cs
or
imul
lea
jo
cmp
pusha
lea
jae
push
pushf
lea
jmp
shl
clc
mov
pusha
test
pushf
add
clc
mov
cmp
clc
push
test
push
lea
jb
je
test
test
bt
pusha
add
pushf
push
cmp
mov
push
lea
jb
jmp
push
jmp
call
mov
pusha
lea
jb
rcr
shl
stc
rcl
cmp
lea
mov
pusha
lea
jb
bswap
or
mov
stc
sub
push
pusha
call
jge
mov
pop
inc
cmps
iret
das
cmp
sub
xchg
mov
icebp
fisub
stos
out
add
aam
int3
inc
jbe
rcr
mov
pop
int3
xor
jge
jne
movs
fild
mov
xor
sbb
es
dec
cmc
loope
sub
das
mov
push
xchg
xlat
and
mov
inc
stos
or
in
inc
sub
pop
jp
ret
dec
mov
inc
mov
and
jle
sub
ficomp
mov
mov
xor
in
cdq
in
stos
dec
xor
mov
dec
stos
retf
test
daa
or
mov
sbb
rcr
sub
jns
xor
shr
in
add
mov
push
loope
lahf
mov
sti
mov
pop
adc
(bad)
test
pop
pushf
mov
mov
push
ret
stos
pushf
push
push
push
lea
jmp
lea
jb
das
rcl
cwde
mov
bt
sub
mov
call
push
add
or
fxrstor
inc
shr
cmc
nop
outs
(bad)
es
pop
mov
sub
pop
fwait
icebp
lock
dec
jmp
dec
jno
retf
cmp
nop
imul
imul
out
adc
fwait
mov
push
lods
adc
mov
jno
cli
or
pop
loopne
repz
adc
call
hlt
jle
mov
(bad)
pop
xor
mov
mov
js
and
pop
sub
movs
imul
fcom
add
adc
scas
or
loopne
cs
lock
fistp
jb
adc
cmc
and
aam
aaa
cwde
shl
sbb
repz
mov
cmp
sub
clc
push
xor
cmp
mov
call
cmc
jmp
lea
jne
cwde
jmp
cmc
pusha
pushf
mov
sub
add
mov
not
xchg
lea
bsf
mov
mov
not
adc
sar
test
push
add
jmp
jmp
cmp
push
aaa
xchg
adc
push
clc
sbb
iret
aad
or
push
mov
fs
pop
jb
test
inc
push
mov
popf
push
xchg
sar
icebp
inc
out
(bad)
cmc
pop
fadd
mov
sahf
pop
push
cdq
(bad)
sbb
fdiv
mov
ret
mov
add
mov
adc
repnz
scas
inc
xor
push
(bad)
popf
dec
adc
push
lods
sbb
jb
and
repnz
test
lods
mov
shr
in
sbb
in
popa
inc
or
jmp
cld
mov
mov
cmp
push
call
fbstp
loopne
dec
lds
jmp
repnz
(bad)
ficom
popa
fwait
retf
cs
test
lea
sbb
ror
out
xor
(bad)
or
retf
test
and
retf
cmp
bound
sbb
and
mov
test
pop
cmps
mov
daa
or
cmp
mov
add
cmps
aaa
cld
into
pop
pop
inc
and
nop
sbb
fisttp
stc
mov
cld
imul
xor
add
jle
sub
ja
test
mov
sub
cmp
and
shr
add
inc
adc
pop
call
lock
aas
sub
iret
repz
lods
lds
jae
sar
movs
(bad)
mov
dec
cmp
adc
call
dec
adc
jmp
repnz
sub
and
dec
mov
adc
mov
or
ror
popa
xor
add
aas
imul
not
movsx
mov
movsx
pusha
mov
mov
mov
jmp
rol
call
shl
stc
pusha
and
mov
jmp
shr
cmp
cmps
ret
jnp
mov
pop
add
inc
mov
mov
test
ss
mov
mov
xor
pop
adc
sbb
sub
fsubr
ror
shl
pusha
sub
xchg
or
fiadd
fild
dec
push
gs
(bad)
call
or
lock
xor
je
jmp
mov
(bad)
ja
jecxz
sbb
icebp
imul
out
or
loopne
fs
jae
mov
lea
pushf
jmp
pop
aam
xor
popa
stos
fcmovnu
cmp
enter
test
inc
mov
push
je
test
and
inc
xchg
popa
int
ret
adc
daa
pop
xor
mov
mov
fidiv
inc
push
adc
cmc
pusha
jle
enter
aam
push
enter
test
pop
jg
retf
aam
adc
(bad)
inc
out
add
ins
aam
lods
xlat
adc
push
loope
cli
addr16
ret
jp
mov
push
lea
jb
setnp
test
ror
movzx
clc
shr
not
not
imul
rcr
lea
ror
sar
and
push
shl
sar
bswap
push
rcr
mov
lea
cmc
jmp
pop
mov
adc
rcr
shr
mov
bswap
aam
mov
or
rcr
sar
sar
add
pusha
not
mov
pusha
push
ret
mov
push
jmp
mov
bswap
push
lahf
setge
lea
mov
pushf
jmp
sub
bt
bt
cmp
pushf
jmp
or
sbb
lods
out
xchg
inc
add
outs
push
xor
sbb
mov
aad
and
add
leave
ror
inc
out
sub
pusha
int3
push
add
rcr
mov
add
into
and
nop
push
mov
hlt
movs
xchg
test
cmp
xchg
add
inc
gs
outs
fs
gs
imul
add
icebp
stos
add
mov
xor
sar
stc
rcr
test
cmp
idiv
push
outs
bound
add
inc
or
cmp
ret
push
ins
ret
cs
std
fld
test
mov
push
adc
cmps
and
xchg
ss
(bad)
in
mov
mov
inc
ret
ins
cmps
dec
mov
ret
or
push
pop
pop
pop
pandn
cmps
adc
movs
pop
mov
add
dec
xchg
adc
inc
sbb
or
pusha
jno
ins
in
or
or
jae
jecxz
mov
adc
add
loopne
adc
fst
rcr
xchg
mov
cli
(bad)
dec
xchg
xor
in
xchg
push
add
xor
ds
mov
mov
leave
and
push
sbb
or
mov
retf
ja
add
sahf
cmp
mov
add
sub
mov
dec
cmps
mov
sar
test
jl
std
aam
dec
sub
mov
add
mov
imul
stos
(bad)
fbld
dec
jbe
sbb
sub
mov
jl
xchg
dec
and
mov
mov
out
add
jo
cmp
xlat
mov
sbb
jb
popf
adc
sbb
fild
pop
xor
scas
(bad)
adc
mov
xchg
add
cmp
push
mov
lea
je
pusha
pushf
jmp
lea
jne
cwde
lea
mov
push
not
cwde
push
mov
mov
call
cmp
mov
lea
ja
pushf
bt
imul
pusha
lea
jmp
cmp
pusha
call
add
dec
outs
popa
fs
imul
add
lods
inc
add
daa
sub
cld
into
fsub
jecxz
mov
stos
es
scas
or
lods
sbb
fcom
fisttp
dec
(bad)
adc
fsub
xchg
dec
in
sbb
into
xor
into
lahf
leave
or
dec
movs
mul
std
imul
jmp
pop
push
mov
movlps
sti
adc
mov
call
cwde
xchg
dec
and
imul
rol
and
ja
call
push
sbb
mov
aad
icebp
ins
imul
push
test
mov
pop
mov
cmp
dec
pop
inc
adc
mov
pop
out
cmp
cmp
xor
jnp
push
dec
mov
jno
mov
cdq
inc
lahf
(bad)
sahf
mov
and
std
imul
movs
sbb
int3
push
mov
jbe
fdivr
shl
loope
dec
mov
dec
add
xor
mov
push
push
pusha
push
ret
pushf
lea
call
test
bt
cmp
pushf
push
mov
pusha
sbb
bt
mov
cmc
stc
lea
test
test
mov
pop
movzx
xor
neg
xchg
pushf
neg
lea
bsr
bsr
sub
mov
cmp
sbb
dec
stc
not
add
sbb
rcr
add
pushf
setle
rep
mov
xchg
not
not
mov
lea
mov
xchg
jmp
inc
sbb
xchg
push
repnz
popf
cmc
sub
mov
add
outs
loope
jo
jle
xchg
dec
or
push
retf
or
pop
inc
jg
sub
jmp
and
mov
sar
aas
aam
mov
sti
cmps
loope
fwait
push
imul
push
or
lea
jne
das
mov
shld
lahf
xor
movzx
rcl
mov
sbb
add
shr
mov
stc
test
test
push
mov
pushf
lea
je
call
jmp
bt
cmc
sub
test
cmp
push
pusha
pushf
lea
jmp
lea
mov
mov
movzx
bswap
lea
pushf
mov
mov
jmp
push
mov
jmp
pushf
mov
pusha
call
mov
call
pushf
lea
jae
jmp
xchg
cwde
lahf
lahf
cwde
mov
movzx
pusha
lea
jmp
stos
pushf
lea
jmp
bswap
mov
push
bswap
setns
jmp
lea
jb
push
stc
mov
call
stos
mov
push
mov
mov
push
pushf
pushf
push
lea
jmp
cmc
test
pushf
lea
je
push
call
inc
rol
sub
or
clc
mov
stc
push
call
jg
aas
lds
popa
mov
shl
mov
inc
inc
outs
push
popf
adc
int3
icebp
je
dec
fimul
mov
and
push
push
add
stos
xor
sbb
test
mov
pop
test
aas
push
loope
movs
or
out
mov
xchg
ins
or
mov
sub
jnp
adc
imul
lahf
jo
gs
adc
add
xor
sti
mov
bt
push
stc
cmp
cmp
push
jmp
jmp
btr
push
cmp
mov
cmp
cmp
push
pusha
mov
pushf
lea
jne
bsf
push
sbb
xor
daa
mov
test
dec
add
rcr
mov
call
call
add
sub
xchg
add
push
mov
(bad)
sub
jmp
inc
or
pop
iret
dec
push
jmp
jp
xchg
jmp
int3
xchg
sti
daa
int3
sahf
pop
stos
push
jno
int3
xor
sbb
mov
repz
mov
jl
sub
xchg
das
aam
cs
cmp
push
pusha
mov
rcl
sbb
aas
mov
imul
hlt
icebp
fstp
fimul
test
add
imul
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
ins
ins
outs
arpl
outs
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
dec
push
inc
inc
dec
dec
inc
pop
add
or
add
jmp
dec
or
adc
add
mov
dec
cmp
in
xor
mov
push
adc
je
mov
mov
nop
dec
dec
push
xchg
xor
xor
adc
ds
fld
cdq
pop
xor
mov
test
popa
dec
pop
iret
retf
dec
shl
dec
add
sbb
or
enter
mov
mov
xchg
pushf
mov
setns
mov
call
mov
lea
jne
lea
setnp
pusha
movsx
mov
movzx
cwde
mov
setns
jmp
je
and
inc
jns
int3
out
into
sbb
ins
and
add
jo
sbb
push
dec
fadd
hlt
loopne
sti
leave
in
sbb
mov
(bad)
lea
adc
cmp
outs
mov
popf
xchg
sbb
xchg
jmp
and
mov
xor
mov
inc
jl
jmp
div
out
pop
addr16
inc
add
mov
xor
mov
test
sub
das
sbb
stc
cmp
cdq
icebp
dec
ret
shr
dec
stos
sbb
xlat
jecxz
movs
xchg
js
sbb
jmp
in
int3
and
push
dec
dec
retf
mov
and
bound
mov
aam
shl
mov
sbb
pop
push
sub
int
xlat
and
mov
mov
mov
jg
add
add
jg
jge
pop
mov
adc
lods
dec
sbb
out
mov
fwait
jge
and
stos
and
sar
pop
mov
mov
inc
and
scas
sbb
sub
inc
and
mov
call
ret
pop
cmp
pop
push
iret
mov
or
jne
imul
add
enter
xor
inc
and
lea
jp
pushf
jmp
call
ins
repz
mov
xchg
mov
pop
aaa
push
pop
jnp
xor
cmc
sub
jb
call
ss
add
into
inc
sub
mov
cmp
cwde
adc
cmp
mov
mov
loopne
pop
sub
push
ja
pop
xchg
mov
outs
mov
mov
movs
mov
or
push
nop
jnp
lods
sbb
add
lods
sbb
cmp
xchg
ds
xor
mov
xchg
or
xor
jle
jnp
sub
or
jmp
ret
test
call
(bad)
ja
xchg
sahf
stos
(bad)
test
push
mov
bound
ins
mov
inc
pop
cwde
mov
cs
and
(bad)
xchg
fwait
rol
mov
into
cld
jo
mov
hlt
nop
pop
(bad)
sbb
test
cld
adc
pop
add
es
xor
sub
lahf
shr
push
sub
add
mov
ds
mov
iret
sbb
test
(bad)
cmp
pop
sub
scas
movs
aad
push
sub
bnd
inc
div
fs
push
push
push
(bad)
dec
cmp
sbb
push
mov
and
mov
jl
pop
ja
fdiv
fimul
dec
mov
or
loop
mov
sbb
sbb
mov
mov
xor
pop
jne
test
push
retf
cmp
or
mov
add
cs
(bad)
idiv
movs
popa
jb
cmp
idiv
inc
xchg
das
adc
pop
fidiv
dec
dec
test
fisubr
gs
imul
and
push
sub
lods
mov
leave
adc
push
popf
fdiv
inc
pop
mov
popa
ins
sbb
sub
rcl
cmps
pop
inc
stos
xor
ss
xchg
pop
paddq
inc
push
mov
ss
dec
leave
stc
xor
or
out
inc
in
inc
add
movs
or
xchg
xor
cdq
mov
mov
out
call
and
mov
jmp
mov
pusha
pusha
jmp
ins
sbb
xor
imul
pop
xor
and
outs
add
sbb
xchg
push
shl
and
jo
cmc
mov
(bad)
or
enter
repnz
call
call
mov
inc
sub
ret
jge
mov
mov
popf
push
fst
push
adc
push
ret
push
int
fcom
push
aam
aad
adc
push
rcl
into
push
ret
push
aad
int
adc
push
ret
push
adc
push
rcl
push
aad
ret
push
aam
mov
push
adc
push
xlat
push
adc
push
fst
push
adc
push
int3
push
xlat
push
aam
fcom
push
into
push
adc
push
fcom
push
(bad)
push
adc
push
fcom
push
ret
push
aam
ret
push
int3
push
adc
push
mov
fs
call
pusha
call
mov
pushf
push
jmp
mov
mov
jmp
pusha
pusha
mov
call
jge
pop
pop
xchg
psubusw
inc
and
fst
lea
pop
inc
jns
int
ret
out
pop
ret
les
fwait
outs
push
clc
rcl
xchg
mov
test
and
xor
pop
add
sub
sbb
pop
test
pop
test
jecxz
mov
cli
rcl
cld
iret
stos
or
arpl
adc
mov
mov
mov
bt
jmp
add
inc
gs
outs
fs
gs
imul
add
outs
icebp
ja
aam
dec
pop
pop
mov
cmp
dec
enter
add
jge
inc
cli
xchg
fld
xor
jp
mov
(bad)
icebp
call
pop
(bad)
ficom
inc
bnd
ins
cs
xchg
pusha
and
pop
fwait
cs
cmp
aaa
push
adc
cdq
and
ret
add
les
sub
jmp
pavgw
or
pop
es
gs
mov
and
jb
ins
not
mov
int3
xchg
push
rcl
pusha
iret
jmp
and
scas
lock
or
adc
xor
outs
mov
xchg
mov
cli
data16
fcom
ds
mov
add
add
fs
jne
btr
neg
shr
sub
adc
pusha
lea
mov
test
add
rcl
test
mov
jmp
cmp
cmp
jmp
mov
pushf
jmp
pushf
call
pushf
pushf
adc
jmp
or
dec
add
pushf
rep
jmp
pop
sar
not
lea
pushf
pushf
pushf
bt
sub
bt
push
jmp
cmc
mov
push
pusha
push
test
repnz
jmp
jmp
pusha
sub
rol
add
add
lea
sbb
lea
mov
and
rol
mov
stc
cmp
cmp
repnz
pushf
lea
jne
seto
mov
movzx
pusha
setne
setne
mov
push
cwde
pusha
lea
jmp
mov
jmp
call
mov
pushf
lea
je
sete
lea
push
call
lea
mov
not
movzx
mov
lea
setle
lods
call
jmp
mov
call
mov
ror
bsf
bt
add
push
shr
shrd
mov
clc
lea
rcr
mov
push
stc
pushf
cmp
call
fs
pop
push
fldenv
sub
into
es
inc
seta
cmc
or
dec
inc
aaa
add
inc
mov
jecxz
loope
jno
mov
shl
sbb
imul
adc
mov
mov
mov
sbb
js
stos
jae
mov
gs
sbb
mov
push
adc
mov
(bad)
out
sub
jno
sbb
mov
call
fnstsw
push
rol
add
arpl
data16
enter
and
xchg
out
jne
stc
test
stc
cmp
push
lea
lea
pop
movzx
movsx
not
mov
push
mov
call
xor
push
push
push
pushf
test
jmp
inc
jae
iret
mov
outs
and
jmp
gs
(bad)
hlt
loop
loopne
mov
out
arpl
inc
shl
shl
in
sbb
cmp
dec
add
pop
mov
push
sbb
jp
jmp
gs
js
ret
test
stos
sub
retf
adc
mov
push
cmp
mov
sub
inc
xchg
js
imul
retf
(bad)
jmp
and
je
push
cwde
push
cmc
xchg
clc
mov
pop
les
and
test
pop
push
clc
sub
push
bt
stc
cmp
lea
jmp
mov
mov
shl
mov
btr
inc
stc
lea
lea
mov
test
not
or
adc
adc
sub
jbe
add
not
push
rep
call
push
call
loope
pop
xchg
in
movs
repz
mov
cld
int
movs
pop
jmp
in
loopne
addr16
std
pop
mov
jns
sbb
mov
and
xlat
jae
movs
shl
lock
out
or
imul
mov
jmp
fld
dec
arpl
call
sbb
jae
inc
add
fnstenv
imul
or
or
shr
xchg
sub
icebp
push
sti
pop
mov
mov
ret
imul
mov
pop
ret
sti
out
scas
ds
mov
jae
lods
jmp
or
gs
push
sub
jecxz
loopne
push
mov
out
and
popa
das
xlat
pop
xor
bound
ins
dec
xor
or
outs
push
lea
je
stc
clc
call
cmp
pusha
call
ja
sbb
jnp
jecxz
jge
sub
sub
shl
or
outs
sub
mov
data16
mov
pop
xlat
mov
push
sub
jg
adc
sbb
jne
mov
or
sub
pop
(bad)
sub
idiv
cmps
into
sub
idiv
mov
enter
xor
aaa
add
sbb
mov
js
dec
call
cmp
push
sub
mov
(bad)
lds
sahf
enter
or
cmp
hlt
dec
clc
mov
jne
cs
shr
xchg
jmp
mov
test
(bad)
sub
addr16
stc
inc
nop
adc
or
dec
lea
call
call
push
jmp
lea
jne
shl
btc
rol
adc
mov
push
push
cmc
clc
add
bt
movzx
bsf
jmp
jmp
xchg
pop
rcr
cdq
popa
and
fisubr
dec
xchg
inc
out
dec
jl
cmp
mov
and
loopne
push
cmp
mov
dec
adc
sbb
inc
pop
mov
jo
adc
mov
daa
mov
mov
ror
ret
fiadd
add
ret
or
shl
addr16
rcr
lea
inc
lea
pusha
xchg
mov
stos
mov
xchg
add
outs
mov
mov
xchg
cmp
das
and
sti
jecxz
mov
les
stos
jle
sti
mov
push
sub
das
(bad)
loop
adc
test
mov
rol
add
xchg
out
stc
mov
cdq
ja
push
int3
mov
add
cmp
jnp
lods
ret
push
mov
mov
pushf
jmp
pop
repz
push
mov
stc
add
imul
push
dec
mov
and
sub
shl
sbb
push
es
adc
dec
retf
jg
or
loopne
mov
push
add
ret
mov
imul
cmpxchg
add
cmp
mov
loop
dec
mov
pop
in
cmp
jns
(bad)
sbb
cli
int3
outs
xchg
fdivr
xchg
lock
push
les
or
jmp
call
xlat
lahf
(bad)
or
sub
dec
push
jl
mov
nop
clc
xchg
cmp
or
cmp
ja
jl
jmp
mul
pop
bound
mov
pop
mov
pop
xor
aas
mov
mov
xchg
stos
out
ins
jne
dec
popf
in
fidivr
xlat
mov
ror
scas
mov
retf
dec
ficom
rcr
inc
push
pop
cmova
sub
or
or
jg
and
and
ja
call
cmp
pusha
call
call
setbe
call
call
test
repnz
mov
call
jb
pusha
bt
pusha
cmp
push
pushf
call
test
cmp
pusha
push
jmp
push
sub
jp
cmc
push
clc
push
call
bt
cmp
movzx
sar
mov
stc
test
test
pusha
add
push
cmp
bt
mov
stc
test
pushf
mov
lea
je
jmp
mov
cmp
retf
es
invd
mov
test
dec
sbb
cdq
les
dec
retf
out
shl
jnp
test
aaa
mov
lahf
mov
outs
imul
add
lea
ja
ror
sub
shrd
rcl
cmc
shl
add
setge
mov
or
mov
stc
mov
pusha
pusha
call
mov
mov
pusha
push
pushf
lea
jmp
jmp
call
call
xor
mov
pusha
pushf
test
call
lea
jbe
adc
mov
bsr
btr
sub
bsr
mov
bswap
pushf
shl
rol
mov
and
shrd
add
pusha
shr
shrd
dec
stc
sbb
mov
neg
stc
add
lea
mov
pushf
mov
call
stc
add
pushf
jmp
test
mov
mov
lea
ja
pushf
mov
lea
jo
pusha
lea
je
bswap
mov
lea
pushf
mov
jmp
add
add
pop
add
les
add
pop
add
(bad)
pop
add
les
add
add
mov
pop
add
add
mov
pop
add
add
mov
pop
add
add
mov
pop
add
xor
(bad)
jmp
ret
rcr
adc
sub
mov
pushf
stc
bt
cmp
jmp
push
jmp
mov
xchg
pop
dec
cdq
xchg
cmp
fs
xchg
stos
cmp
aam
jg
inc
and
fdivr
mov
js
test
fs
dec
xor
adc
sbb
retf
repz
jb
fiadd
or
mov
loope
pop
cmps
retf
xor
clc
pop
mov
iret
jo
std
mov
mov
xchg
out
dec
pop
push
xor
fiadd
cmps
fcomp
pop
ins
sub
inc
sbb
jp
cmps
mov
aas
push
mov
jmp
popa
shl
outs
sti
jecxz
and
inc
sahf
icebp
jns
rcl
adc
lds
jmp
sbb
mov
add
jae
out
jbe
or
jb
jbe
popf
pop
push
push
sbb
das
and
sub
push
div
aad
pop
call
mov
stc
jl
xchg
inc
sbb
pop
xchg
outs
stos
mov
test
in
lods
ss
lock
sar
and
jae
cwde
pop
bswap
aam
bsf
pop
call
pop
cmp
fidivr
call
daa
push
test
pop
and
jae
inc
xchg
sahf
es
and
jmp
repnz
dec
and
in
out
lock
dec
(bad)
cli
cmps
or
push
xor
jno
aad
xchg
mov
aam
out
jecxz
outs
sub
jge
(bad)
call
xchg
push
addr16
push
mov
cmp
mov
lea
jae
cwde
bt
pop
cmc
aad
shrd
or
pop
neg
bsf
shld
mov
cmp
setb
sar
stc
cmp
call
add
sbb
mov
and
sub
or
cwde
mov
mov
sbb
xchg
mov
lea
inc
xor
pop
inc
test
sbb
xor
lahf
mov
imul
daa
mov
pop
das
push
jle
call
scas
lds
jl
outs
cmp
jb
(bad)
and
sti
push
add
push
lahf
jl
xchg
cmp
in
div
sbb
cmp
shl
inc
jmp
call
jecxz
xlat
or
xor
out
dec
or
jmp
xor
jo
jb
in
push
inc
pop
pop
nop
mov
mov
pop
(bad)
fiadd
push
loopne
out
sbb
mov
sub
mov
daa
mov
sar
jg
jmp
and
jo
sub
mov
adc
dec
retf
call
fmul
imul
stc
dec
cmp
jb
aas
pop
stos
sbb
loopne
popa
dec
xchg
sbb
mov
arpl
or
mov
mov
fsubr
mov
push
mov
jb
pop
popa
lock
push
inc
ins
iret
or
jns
aas
mov
pop
in
fcom
fisubr
xchg
ins
in
mov
mov
cmp
dec
(bad)
adc
daa
or
push
pushfw
fwait
sbb
xor
fisubr
inc
xor
adc
sub
xchg
imul
pop
mov
aam
push
sub
jae
call
mov
pop
xchg
add
icebp
jmp
adc
or
xchg
es
mov
mov
jb
in
dec
add
stc
arpl
jbe
jmp
cmp
shl
mov
jo
jbe
push
dec
dec
lods
adc
pop
dec
mov
dec
add
ins
sub
mov
imul
ins
iret
cmc
pop
loop
jns
push
iret
leave
enter
lea
jne
in
bswap
mov
mov
or
int
leave
dec
fnstsw
in
aad
in
jo
rcr
es
cld
popa
in
add
test
inc
dec
pop
into
in
sub
dec
jmp
outs
mov
popa
ins
das
pusha
mov
lea
jb
adc
bt
sub
cmp
movsx
mov
call
mov
lea
je
push
sub
clc
pusha
cmp
call
push
call
xor
aad
mov
mov
and
mov
sbb
arpl
add
inc
cmp
ficom
adc
xor
mov
adc
test
data16
aas
jmp
jno
push
mov
cs
jl
ja
mov
add
adc
push
mov
mov
inc
dec
push
lds
inc
jl
(bad)
mov
cs
fisttp
xor
inc
adc
lock
dec
push
and
add
mov
sbb
mov
push
add
xchg
jmp
xlat
in
cmp
loope
xchg
jmp
lea
out
inc
inc
or
sbb
inc
jne
mov
dec
mov
(bad)
sbb
jo
fwait
int3
imul
pop
sub
fld
mov
add
mov
mov
outs
loop
cmp
cmp
lock
in
movs
mov
push
(bad)
aas
and
cmp
ss
or
push
call
or
jmp
stc
mov
imul
out
xchg
push
mov
mov
pop
sbb
sbb
cmp
pop
outs
push
movs
mov
mov
ja
mov
idiv
push
mov
push
dec
rcl
cmp
mov
test
xor
mov
adc
push
pushf
xlat
pushf
prefetch
pusha
push
pushf
mov
pushf
pusha
lea
jmp
call
sub
call
pushf
push
mov
mov
call
pusha
mov
push
mov
push
lea
jmp
test
fwait
pop
jle
fcmovnu
dec
cmps
xor
arpl
jp
icebp
fs
or
adc
imul
pop
jecxz
lahf
(bad)
mov
xor
or
into
sahf
xlat
mov
mov
lods
pop
mov
dec
and
daa
stos
push
jae
std
pop
cli
xchg
cmps
das
pop
dec
out
aas
retf
add
pop
push
xchg
mov
loop
sub
(bad)
repnz
dec
daa
or
mov
es
out
inc
sbb
jno
adc
arpl
mov
add
clc
mov
dec
and
test
cmc
loop
mov
mov
jmp
lea
jb
add
aam
aad
mov
test
test
sub
not
mov
pushf
mov
pusha
stos
push
push
mov
lea
jmp
pop
(bad)
mov
jecxz
mov
mov
and
stc
mov
push
(bad)
xor
test
and
and
push
enter
or
jp
jg
das
adc
loope
or
mov
dec
sub
xor
adc
(bad)
aad
sbb
push
or
pop
sbb
in
jg
pop
pop
sub
stc
sbb
and
cmp
sub
int
stos
test
jne
cs
stos
aaa
jge
add
retf
or
fwait
xchg
shl
aad
inc
js
aam
jae
inc
sbb
test
xchg
js
mov
retf
lods
les
dec
xor
xor
and
jge
imul
and
cmps
add
ins
adc
mov
aad
fisubr
ins
stc
(bad)
dec
inc
xchg
daa
xchg
mov
(bad)
out
fcmovne
push
in
pop
inc
add
dec
cmp
xchg
and
dec
cwde
je
ja
cmps
imul
xchg
inc
and
push
sahf
xor
enter
aaa
ins
das
mov
xchg
cmp
scas
cmp
or
pop
push
xor
daa
call
jmp
pushf
mov
pushf
bt
pushf
test
jmp
pusha
push
call
mov
push
pushf
jmp
or
pushf
seto
mov
test
jmp
pushf
lea
je
pushf
add
push
cmp
cmp
cmp
push
pusha
push
lea
jl
jb
test
cmp
cmp
push
mov
push
pushf
lea
jae
cmp
pusha
bts
mov
test
mov
adc
inc
btc
mov
cmp
clc
call
push
ror
jmp
add
add
add
add
add
cdq
mov
add
add
add
add
add
add
add
mov
add
add
add
xchg
mov
add
je
outs
add
mov
push
push
jmp
lea
je
cmp
call
lea
jb
daa
adc
movsx
mov
stc
clc
cmc
sub
pushf
mov
mov
pushf
pusha
stos
mov
pushf
pushf
lea
jmp
call
push
imul
call
pushf
mov
test
add
stc
pushf
jmp
adc
sub
xor
sub
add
lock
adc
je
call
outs
addr16
mov
dec
ds
mov
mov
imul
add
inc
xchg
or
xchg
sbb
into
test
or
cmp
add
(bad)
pop
xor
sti
jl
jl
scas
and
addr16
push
adc
push
fsub
dec
add
mov
or
cmps
aas
mov
clc
sub
xchg
jmp
and
out
dec
idiv
hlt
stos
or
(bad)
xchg
jbe
cwde
push
jmp
lea
xchg
fisttp
neg
mov
xor
xchg
sub
mov
dec
xchg
cwde
(bad)
mov
out
push
(bad)
or
clc
inc
iret
jne
ss
adc
inc
push
pushf
sbb
pop
(bad)
xchg
pop
int3
ins
js
lods
js
daa
pop
(bad)
repz
jle
or
retf
aas
mov
in
jno
pop
popf
mov
sbb
ins
inc
in
or
enter
mov
aaa
sar
stos
fcomp
jge
mov
in
push
std
push
mov
fild
xchg
fimul
out
sahf
pop
push
xor
(bad)
mov
outs
xchg
push
xchg
cli
or
stc
daa
mov
cmp
lahf
dec
fwait
jl
cs
mov
mov
mov
or
clc
or
sub
push
adc
dec
xor
inc
pusha
les
ins
rcr
add
test
sbb
rol
pop
aam
sub
scas
pop
(bad)
in
cmp
mov
loope
(bad)
sub
xor
cmc
adc
(bad)
ficomp
adc
pop
inc
jno
neg
movs
jns
sbb
push
push
mov
add
loop
xchg
div
xchg
leave
mov
xchg
ja
fninit
adc
cmp
dec
xchg
movs
loop
mov
jg
daa
or
jae
push
sbb
xor
fst
mov
sbb
aas
adc
mov
push
push
pop
cmc
and
ror
adc
rcl
add
pusha
mov
arpl
mov
mov
or
mov
pop
popa
inc
fs
push
adc
cmps
outs
push
adc
cli
xlat
push
cmp
popf
add
fstp
stc
cmp
sbb
fst
xchg
cld
adc
sahf
adc
stc
(bad)
mov
call
push
or
ins
push
pop
xchg
ja
add
or
add
rol
jmp
or
or
mov
mov
pop
xchg
outs
mov
dec
cmps
or
shl
orps
xlat
(bad)
sahf
test
in
and
test
lock
and
mov
dec
imul
outs
or
fild
aaa
lds
rol
and
add
psubb
(bad)
rcr
pop
adc
fmul
rcl
sub
cld
push
movs
and
pusha
lods
das
sbb
les
cwde
and
cmp
xchg
(bad)
cld
or
sub
cld
loope
sbb
movs
mov
loope
dec
test
push
adc
push
das
retf
gs
int
sub
mov
call
loopne
adc
push
jo
sub
test
pop
pop
jbe
xchg
rol
push
mov
lods
mov
fadd
cmp
cmps
out
inc
jne
or
mov
add
scas
lea
jae
pusha
pusha
push
lea
jmp
bt
stc
xor
test
mov
bt
repnz
mov
pushf
pushf
lea
jne
neg
and
mov
jmp
lea
jne
not
lea
mov
jbe
push
pusha
pop
lea
mov
pushf
mov
jmp
and
pushf
add
mov
lea
jmp
(bad)
in
add
jnp
pop
fwait
pop
popf
(bad)
pop
ret
iret
ja
adc
or
cmc
bound
and
icebp
pop
cwde
push
loop
lock
fwait
sahf
unpckhps
mov
cmps
sbb
fs
in
xor
fisttp
out
mov
inc
es
dec
imul
dec
and
scas
jecxz
pusha
sub
jp
mov
xor
jbe
mov
out
stos
out
outs
into
fbstp
mov
out
adc
push
rol
cld
clc
push
xor
leave
gs
pop
sub
cmps
test
pop
lods
dec
out
jbe
mov
jno
neg
in
scas
xchg
in
in
bound
clc
mov
lds
stos
pusha
loopne
dec
in
sbb
cmc
mov
and
jne
jbe
sub
or
shl
call
out
xor
outs
mov
xchg
popa
out
adc
jp
sbb
ins
lods
push
fadd
mov
lock
sub
mov
lods
test
int3
inc
fisubr
inc
or
jl
loope
js
enter
add
arpl
not
loop
div
mov
shr
shrd
add
or
mov
inc
shr
mov
add
cmc
pushf
cmp
push
mov
lea
jbe
and
shl
sub
add
mov
lea
bsr
xadd
mov
xor
btc
sar
not
add
rcl
rcl
shr
test
stc
cmc
sub
mov
jmp
mov
lea
ja
dec
add
sub
add
sub
or
movzx
btr
add
cmp
btc
rcl
mov
and
dec
dec
pushf
mov
mov
mov
clc
repnz
call
je
pusha
push
pusha
lea
jmp
test
jle
jo
cwde
pusha
out
(bad)
dec
rcl
(bad)
addr16
idiv
lods
dec
pop
fst
cdq
mov
xor
(bad)
cmp
fistp
sub
mov
test
mov
aaa
(bad)
in
pop
stc
inc
push
sub
jbe
loope
push
sub
mov
je
cld
pop
nop
push
sbb
jnp
jns
sbb
mov
cmp
lds
aas
xchg
ret
in
pop
repnz
nop
add
jmp
mov
sub
mov
call
lea
ja
jmp
jl
inc
inc
adc
add
jb
fistp
xor
mov
pusha
cmps
inc
fdiv
sar
ins
sbb
movs
ret
retf
dec
sub
sbb
(bad)
lods
xchg
je
adc
jo
ror
sub
(bad)
xchg
fwait
bound
(bad)
sahf
sub
adc
inc
jl
or
push
lods
add
pop
dec
sbb
dec
add
arpl
leave
shrd
xor
sbb
je
cmp
pop
or
adc
and
jae
pushf
push
lea
jmp
pusha
mov
pusha
lea
jmp
push
lea
jne
cmp
sar
xor
bswap
btr
dec
bts
mov
or
and
shl
stc
add
cmp
mov
test
bt
push
bt
test
pusha
pusha
jmp
imul
dec
mov
xchg
cmps
aaa
inc
jmp
shl
(bad)
pop
xchg
syscall
jb
into
push
out
and
(bad)
out
mov
daa
fwait
jbe
(bad)
in
push
(bad)
mov
cmp
sub
movs
xor
cmp
inc
sbb
inc
xchg
push
mov
test
cmp
pop
popa
in
add
outs
inc
xchg
ins
jmp
(bad)
and
add
mov
dec
lock
mov
jg
mov
mov
int
enter
jnp
adc
and
mov
jae
push
mul
jns
mov
lds
dec
loope
cmp
jb
(bad)
out
ss
popa
inc
ret
not
(bad)
mov
add
sbb
xor
loope
out
(bad)
mov
cwde
or
jle
sub
(bad)
in
pop
sti
cmp
aas
dec
repnz
pop
cld
xor
push
mov
sbb
add
mov
rol
je
sub
jp
mov
cs
or
movs
movzx
pusha
bswap
mov
push
pusha
jmp
and
xchg
push
sbb
scas
das
mov
pushf
clc
add
add
ins
call
cmp
lahf
xor
mov
imul
sub
(bad)
fsubr
jecxz
call
scas
aas
(bad)
js
test
dec
xor
jb
icebp
std
fwait
xlat
rol
and
jo
iret
stos
daa
loopne
mov
mov
popf
in
push
cmp
imul
aas
mov
and
(bad)
imul
push
mov
loopne
or
cmp
adc
add
shr
cli
add
add
imul
push
dec
inc
dec
xor
cs
ins
add
hlt
inc
rcr
(bad)
fadd
test
push
iret
das
cmp
js
jno
jno
adc
fcom
mov
test
dec
mov
pop
sub
pop
pop
add
pushf
int
stc
mov
inc
aad
lock
pop
into
popa
mov
jo
jns
arpl
out
out
sub
cmp
retf
arpl
jg
out
inc
cmp
jns
movs
inc
and
bound
pop
xchg
push
jnp
mov
push
adc
std
cmp
xchg
(bad)
mov
out
mov
into
xchg
std
inc
pushaw
lea
pop
mov
les
and
add
aad
imul
pusha
lahf
shr
retf
mov
clc
xchg
push
iret
stos
adc
push
mov
mov
imul
jb
xor
adc
aaa
test
mov
xor
je
movs
add
add
(bad)
sbb
xchg
rol
idiv
add
jbe
mov
repz
stos
in
pop
loopne
cmps
or
scas
dec
mov
mov
leave
popa
aaa
fcomp
inc
mov
test
jb
out
mov
jmp
cmp
jmp
sete
adc
adc
mov
stc
cmp
push
pusha
pushf
push
lea
jne
rol
add
xor
bswap
mov
cmp
rol
sar
sar
add
seta
pushf
mov
jmp
pushf
lea
je
clc
sub
clc
push
cmp
jmp
js
mov
mov
and
in
jge
add
mov
cmps
cmps
mov
loope
jp
in
arpl
andps
adc
and
imul
lods
rcl
scas
add
sti
int3
mov
ficom
pushf
call
inc
or
js
retf
push
aaa
call
or
popf
test
cmp
cmp
pushf
call
mov
call
push
lock
std
std
adc
outs
ss
ret
jp
mov
mov
sub
mov
pop
xchg
ss
or
sbb
rcr
dec
in
push
aam
push
mov
(bad)
and
test
mov
sbb
cmps
fsub
mov
in
xchg
push
ss
and
or
jge
or
stos
bound
sbb
inc
pushf
setae
setbe
mov
cmc
cmp
mov
pusha
call
movzx
rcl
test
mov
bt
clc
cmc
jmp
call
lea
jb
bt
bt
test
cmp
push
jmp
imul
in
push
arpl
lods
and
clc
xor
fldcw
clc
sub
or
mov
test
or
jnp
pop
fnstsw
(bad)
inc
xchg
and
mov
scas
rcl
xchg
and
jo
or
xchg
loope
and
outs
pop
jl
ret
and
cmp
add
inc
sahf
scas
mov
push
pusha
cmp
out
xchg
pop
or
inc
mov
or
push
pusha
pushf
cmc
test
pushf
call
lea
or
mov
jmp
call
popf
push
fst
push
adc
push
ret
push
ret
push
rcl
push
rcl
rcl
push
rcl
push
mov
push
adc
push
ret
push
xlat
push
mov
push
into
push
adc
push
ret
push
aad
int
adc
push
ret
push
adc
push
rcl
push
aad
ret
push
aam
mov
push
adc
push
xlat
push
adc
push
fst
push
adc
push
int3
push
xlat
push
aam
fcom
push
into
push
adc
push
fcom
push
(bad)
push
adc
push
fcom
push
ret
push
aam
ret
push
int3
push
adc
push
mov
add
pusha
call
mov
movzx
pop
push
pushf
push
ret
imul
mov
xor
push
out
or
mov
addr16
int3
movs
not
or
xchg
fstp
inc
inc
pop
ja
jg
mov
adc
cs
sub
xchg
bnd
outs
xchg
je
lock
pop
retf
ror
pusha
jle
sbb
lea
jnp
mov
bnd
mov
mov
and
daa
push
sahf
fst
or
push
bswap
mov
call
lea
jne
pusha
lahf
cwde
jmp
jae
push
push
jmp
leave
test
push
ds
mov
jns
xchg
lds
and
pop
add
rol
and
jo
ds
dec
xchg
pusha
sti
bound
mov
jns
xor
push
(bad)
lock
mov
pop
test
pushf
les
enter
test
mov
and
xor
outs
test
call
mov
jl
or
push
pop
ins
and
loope
dec
stc
mov
dec
repz
push
or
mov
test
pusha
jmp
pusha
mov
pushf
pusha
mov
lea
jmp
call
pushf
mov
pusha
lea
jmp
sbb
add
stos
mov
add
ror
push
add
add
add
cwde
pop
add
add
add
add
and
add
xchg
pop
add
outs
pop
add
ins
pop
lea
jmp
pusha
pushf
call
call
push
cmp
pushf
mov
mov
pusha
sbb
stc
test
lea
mov
mov
cmp
call
lea
ja
push
lea
jb
jmp
mov
lea
jne
and
ror
call
iret
ret
rol
nop
push
xor
into
jbe
mov
test
push
test
sub
daa
and
jmp
mov
jo
and
add
repnz
in
push
std
das
xor
iret
call
inc
cdq
inc
jl
cwde
sub
inc
mov
rep
dec
sbb
hlt
(bad)
(bad)
mov
aas
call
ror
jmp
and
push
xchg
repz
aam
sub
test
push
aad
loopne
test
ds
aam
lods
mov
sbb
sar
or
imul
call
push
mov
push
push
ret
jmp
lea
jge
pop
push
push
mov
pushf
mov
not
lea
mov
push
pusha
push
ret
mov
pushf
push
push
ret
lea
jb
clc
pushf
cmp
mov
pushf
lea
jne
test
bsf
shld
mov
stc
add
jmp
push
imul
inc
repz
call
jno
cmps
mov
mov
pusha
jbe
dec
repnz
fadd
mov
mov
xchg
jbe
sub
xchg
push
mov
jo
xor
mov
ins
push
xchg
nop
push
cmp
or
xchg
sub
or
int
inc
and
scas
adc
pushf
call
nop
mov
push
adc
inc
jp
jl
push
popa
inc
ret
dec
test
addr16
jmp
es
ins
jmp
mov
je
je
out
xchg
xlat
pop
fld
mov
icebp
mov
icebp
mov
jmp
(bad)
jns
ja
pop
frstor
std
mov
in
xchg
popa
xchg
stos
xchg
mov
dec
cmp
pop
repnz
ja
aas
int
ror
mov
mov
dec
add
mov
loope
mov
xchg
pop
or
or
jbe
lods
ret
dec
dec
int3
cmp
mov
jle
cs
cmps
(bad)
adc
adc
push
and
add
cvtpi2ps
cmp
repz
lahf
in
or
sub
repz
jecxz
pop
push
rcl
xchg
xchg
cmp
dec
and
lahf
(bad)
leave
add
fld
ds
(bad)
iret
inc
sbb
cmp
mov
or
rol
mov
push
rol
or
std
jge
fldenv
adc
xchg
xchg
jmp
icebp
outs
xor
movs
or
rol
push
ins
stos
fwait
in
adc
sbb
push
jne
test
cmp
inc
ffreep
mov
(bad)
out
adc
into
les
mov
mov
js
sbb
push
jno
jecxz
lock
ja
sbb
xchg
mov
pusha
not
call
imul
add
jmp
mov
xor
(bad)
mov
shr
add
imul
push
push
pop
out
les
icebp
(bad)
std
jecxz
adc
jne
jp
xchg
xchg
retf
test
lahf
mov
jle
adc
movs
dec
lds
movs
push
inc
inc
scas
push
cmp
pop
ins
inc
and
and
jb
mov
lea
call
push
jmp
xor
jmp
xor
mov
or
jnp
call
mov
cmp
cmp
fisttp
lods
les
mov
lods
sbb
mov
xchg
fwait
add
mov
ins
pushf
mov
nop
cmp
cmps
sub
jne
jmp
lds
sti
(bad)
pop
call
cmp
ret
imul
fmul
scas
pop
xchg
or
in
push
jo
std
arpl
test
mov
icebp
pusha
pushf
mov
cwde
mov
sete
mov
lea
jmp
lea
mov
pusha
pushf
pushf
lea
call
jmp
call
pusha
dec
jmp
cmp
jne
shl
shl
push
lods
sub
xor
neg
rol
mov
pop
ret
jmp
pusha
mov
lea
ja
bswap
pusha
push
mov
not
mov
mov
pushf
push
mov
not
mov
movsx
pushf
mov
push
mov
mov
bswap
pop
pusha
push
ret
pusha
jmp
pop
xchg
cmc
push
jmp
push
pop
jp
(bad)
icebp
dec
loop
xor
mov
xor
mov
and
xor
mov
arpl
fstp
fild
jp
sahf
adc
or
or
push
test
jle
jg
mov
xor
push
inc
sahf
js
or
mov
push
std
sub
lea
jmp
mov
lea
jb
sub
shrd
mov
call
lea
jae
push
xchg
lea
not
mov
jmp
pusha
bswap
pop
mov
mov
not
movzx
mov
jmp
push
mov
push
mov
pushf
pushf
lea
jmp
pusha
lea
jne
shl
test
bsr
neg
xor
movzx
clc
xor
shl
mov
or
add
add
mov
push
and
mov
stc
clc
test
jmp
mov
pushf
lea
jne
and
stc
rol
jmp
jnp
sub
add
jp
add
add
sar
pop
or
(bad)
pop
pop
icebp
nop
cmps
pop
daa
jo
(bad)
fsubr
mov
in
xchg
lahf
sti
and
or
xor
ss
repz
clc
mov
lds
or
push
pop
movs
xchg
(bad)
cdq
add
xchg
add
sar
leave
ins
sbb
jge
fsincos
push
mov
in
loopne
ss
lock
jmp
mov
dec
lea
jl
call
test
pushf
cmp
push
sbb
cmp
lea
call
pushf
call
rep
xchg
mov
movzx
mov
jmp
push
lea
jbe
call
call
pusha
pushf
pushf
cmp
push
bswap
call
dec
jmp
bt
test
jmp
repnz
push
call
push
lock
std
std
test
xchg
pusha
loopne
test
fwait
xchg
(bad)
iret
dec
int
imul
adc
movs
ss
adc
pop
in
jge
jmp
dec
push
and
aam
pop
mov
fisub
adc
test
cmps
int
and
sahf
ja
lds
je
(bad)
mov
mov
push
fld
leave
xor
jmp
sbb
inc
clc
shr
xor
cli
dec
xor
test
xor
aam
jns
xor
pop
outs
jno
mov
outs
xchg
mov
adc
sub
xor
sub
mov
(bad)
push
rol
dec
(bad)
cli
pop
jp
mov
xchg
push
sub
iret
aaa
push
fistp
push
movs
retf
clc
dec
pop
push
sbb
jne
adc
mov
add
sbb
mov
cmp
sub
mov
cmp
xor
mov
test
addr16
push
mov
mov
cwde
rcr
(bad)
fwait
sub
cmp
jg
sar
js
gs
fs
lods
aad
push
push
pop
and
or
fwait
in
xchg
pusha
mov
fisub
dec
inc
pop
loope
loopne
das
icebp
in
add
pop
movhps
add
lock
push
idiv
add
sub
and
lahf
and
fst
fstp
cmp
or
(bad)
push
icebp
mov
loopne
test
js
ss
in
mov
repz
test
arpl
and
call
je
bound
push
out
and
dec
sbb
jecxz
jp
xlat
jp
sar
je
cli
movs
pop
push
adc
or
cmps
lock
push
(bad)
dec
adc
pop
arpl
je
inc
ret
pushf
mov
xchg
movzx
pushf
pushf
not
mov
movzx
bswap
mov
mov
push
lahf
not
push
call
push
push
mov
mov
lea
jmp
pusha
adc
pushf
lea
jae
lea
bsr
and
pop
bsf
lahf
sar
ror
pop
rol
mov
neg
cmp
lea
mov
pushf
pusha
mov
pusha
lea
jb
movzx
inc
sets
aam
cmp
push
push
seto
lahf
mov
pusha
push
call
pushf
or
outs
iret
pop
xor
icebp
sub
paddq
xchg
adc
or
dec
jge
inc
stos
out
scas
retf
push
sti
arpl
pop
jle
adc
add
int
lods
or
aad
call
xchg
ja
int
fld
lods
xchg
retf
aad
jp
scas
or
addr16
dec
mov
jnp
jecxz
adc
movs
inc
fcom
push
clc
xor
push
call
xchg
imul
jge
or
movs
popf
jge
mov
lea
jne
bswap
cmp
sub
neg
mov
rcr
das
mov
bt
push
add
shl
cmc
ror
mov
jmp
push
jmp
push
mov
pusha
lea
jb
cmp
xor
push
test
clc
test
mov
call
pushf
call
mov
mov
call
inc
mov
cmp
test
add
mov
mov
movzx
test
shrd
call
jmp
pusha
call
jp
(bad)
rcl
pop
mov
fimul
mov
sbb
mov
jo
dec
arpl
jns
mov
pop
jp
es
adc
in
cmc
jno
cmc
cld
mov
ror
cwde
lahf
int3
jbe
pop
and
pop
mov
leave
pop
cs
in
icebp
fimul
pushf
icebp
xchg
iret
(bad)
stos
iret
nop
repnz
mov
cdq
push
and
(bad)
pop
mov
aaa
mov
cwde
pop
mov
sar
mov
cld
inc
test
sbb
(bad)
cmp
and
jb
ror
shrd
rcl
aad
mov
push
cmc
mov
jmp
bt
rol
push
sub
test
cmp
pushf
xor
mov
clc
cmc
jmp
jmp
and
es
or
and
std
add
mov
cs
(bad)
(bad)
fs
arpl
inc
outs
arpl
add
xchg
push
scas
div
adc
hlt
adc
outs
or
ins
sbb
dec
mov
push
loop
or
int3
mov
je
xor
pusha
arpl
inc
outs
arpl
mov
jmp
push
test
adc
cmp
retf
mov
mov
imul
sysexit
mov
cmps
mov
push
(bad)
pop
idiv
add
add
retf
or
daa
push
push
out
mov
push
aad
mov
jo
jmp
pop
fdiv
adc
mov
pop
inc
retf
ror
mov
sbb
cmc
imul
fmul
out
jb
pushf
add
enter
sub
jmp
mov
sub
call
mov
push
call
fwait
test
sub
mov
xor
or
call
inc
inc
(bad)
jl
ins
out
sub
iret
push
call
mov
push
das
and
fst
outs
sbb
cmp
or
dec
mov
mov
adc
xchg
ja
movs
adc
and
push
mov
or
(bad)
lock
ret
jbe
retf
adc
and
mov
stc
cmp
xchg
and
repz
sar
cld
repnz
jmp
jecxz
mov
shr
and
outs
fsubr
jmp
jle
push
cmc
mov
sbb
jp
shl
(bad)
sar
outs
in
stc
imul
push
mov
add
ins
xor
mov
lea
das
mov
aad
lods
sub
and
adc
aam
shr
das
cmc
(bad)
call
dec
dec
or
inc
and
or
and
lea
jmp
pushf
lea
jb
test
cmp
cmp
pushf
push
call
stos
push
sbb
repz
sub
pop
mov
data16
adc
or
(bad)
aam
sahf
fsubrp
mov
xor
mov
loopne
sub
aad
mov
loopne
lods
fucom
push
int
call
push
xchg
mov
je
add
into
hlt
stos
inc
fwait
jl
xchg
add
xchg
jbe
outs
popa
push
or
pushf
cmp
test
cmp
push
lea
jae
bsr
btc
bsf
mov
bsf
pushf
shl
mov
inc
neg
mov
test
sub
clc
push
pushf
repnz
mov
lea
jne
bt
clc
add
mov
and
sub
cmc
btr
mov
push
sub
test
cmc
test
stc
push
pop
cmp
call
stc
add
mov
mov
pushf
lea
jmp
setae
cmc
bsf
mov
push
pushf
cmp
pusha
jmp
lahf
push
not
lea
pusha
mov
call
jmp
pushf
call
test
sbb
cmp
cmp
data16
in
mov
add
sbb
test
sbb
xchg
cmp
mov
popf
je
inc
sub
or
or
pop
push
sbb
daa
and
cmp
and
mov
jno
or
data16
mov
jmp
push
adc
push
inc
mov
call
mov
add
inc
shl
fcom
inc
xchg
imul
xchg
jle
bound
mov
shl
inc
add
ins
pusha
add
or
cmp
jmp
jmp
jmp
dec
jg
(bad)
ficomp
sub
mov
dec
add
mov
gs
mov
or
mov
push
pop
pop
in
mov
aam
mov
or
mov
neg
jle
adc
out
jg
lea
xlat
dec
in
pop
popaw
sub
movs
pop
and
fwait
and
jno
or
pop
out
std
iret
stos
cld
sub
out
lods
adc
cwde
ror
or
movs
dec
push
push
inc
push
push
cs
ins
add
fdivp
(bad)
(bad)
jmp
jns
jp
popa
inc
sub
dec
push
cwde
lods
inc
xor
jecxz
ret
rcr
ds
div
je
jmp
add
xchg
rol
not
jle
(bad)
push
sahf
sub
int3
es
out
push
loopne
push
shl
movs
repz
sbb
movs
lock
in
shl
adc
lods
xor
into
xor
jne
aaa
mov
je
ja
push
xlat
pop
sbb
push
loop
sub
add
and
cmc
fs
or
pop
pop
xchg
or
xchg
sete
call
pusha
cmp
mov
pushf
bt
test
push
pushf
lea
je
push
bt
mov
pushf
add
bt
pusha
mov
cmp
mov
jmp
pusha
pushf
pushf
lea
jb
bswap
cmp
pushf
pop
lea
mov
pusha
jmp
sub
push
push
pop
mov
cmc
bt
test
cmp
pusha
call
mov
call
jmp
lea
call
call
test
sub
jmp
pusha
adc
add
pushf
xor
neg
mov
push
test
push
push
push
lea
je
pusha
pusha
sub
call
lea
call
stc
stc
add
cmc
cmp
cmp
jmp
push
pusha
clc
cmp
jmp
lods
call
jmp
frstor
cdq
iret
jl
pop
aaa
adc
and
dec
gs
sbb
in
sub
retf
inc
(bad)
popw
out
xchg
lds
cmp
repnz
mov
and
push
nop
push
fimul
mov
in
stos
call
and
bound
sub
jp
sahf
or
or
sahf
adc
adc
aaa
inc
pop
ds
div
loopne
jbe
inc
shl
bound
or
addr16
cli
xlat
(bad)
pop
fld
shl
push
or
mov
jne
mov
mov
jp
(bad)
lea
jmp
cmp
ror
not
rol
shr
mov
sub
movzx
shld
xor
shld
add
sets
setb
pusha
cwde
bswap
lahf
lea
push
lea
jp
call
pushf
call
pusha
lea
jae
push
lea
jmp
inc
sub
(bad)
pop
popa
lock
adc
iret
inc
addr16
mov
add
xchg
xchg
pop
outs
in
cmp
popf
mov
repz
imul
xlat
push
push
dec
outs
push
repnz
leave
push
sub
retf
fnstcw
cmp
div
cmps
pushf
in
(bad)
mov
into
ja
je
sbb
jne
ins
xor
cmp
sahf
mov
iret
or
sub
icebp
(bad)
inc
stc
push
bt
mov
clc
pusha
pushf
mov
clc
cmc
push
rol
bt
test
test
cmc
xor
clc
add
push
push
ror
call
shr
bswap
add
xor
xchg
jg
pop
jmp
push
mov
mov
mov
mov
lea
jmp
jmp
repz
aas
xor
sti
inc
repz
das
xchg
push
xlat
hlt
push
xor
xor
mov
mov
outs
and
sbb
pop
clc
push
push
cmp
xor
mov
outs
push
iret
gs
into
test
popa
and
rcl
popa
in
popa
pop
or
adc
imul
in
push
les
sar
iret
pop
xor
or
adc
jmp
stc
push
dec
mov
cmp
(bad)
push
sub
clc
adc
test
jg
adc
out
add
pop
imul
add
pop
in
outs
pop
jmp
iret
imul
sub
icebp
cmp
mov
dec
or
jbe
push
push
pop
pushf
mov
push
ret
pushf
lea
jb
stc
bt
call
mov
pushf
lea
jb
pushf
cmp
lea
bswap
not
pop
mov
call
lea
pushf
mov
mov
call
add
daa
xchg
mov
and
jmp
pop
cmps
lock
mov
jecxz
shufps
push
shl
push
and
js
push
mov
clc
out
in
mov
push
cmp
outs
push
jmp
pop
call
add
in
push
jg
sub
jge
int
mov
push
cmp
cmp
in
push
mov
das
add
cs
jmp
pusha
jmp
bswap
jmp
cmc
cmp
pushf
pushf
lea
jne
rol
call
lea
jmp
or
jae
mov
jmp
scas
push
add
sub
popa
adc
jg
sbb
xchg
stc
mov
retf
jecxz
and
jno
cmps
out
mov
clc
mov
into
cmp
xor
out
cmps
ret
fimul
adc
mov
dec
xchg
out
sub
scas
xor
jo
mov
scas
(bad)
and
sbb
and
mov
stos
icebp
mov
arpl
xor
or
mov
or
mov
dec
dec
adc
pop
retf
stos
aas
int
push
js
iret
das
rcr
mov
shl
cmps
(bad)
imul
jle
mov
ja
mov
mov
sbb
clc
xchg
push
cmp
sbb
and
cmp
loop
adc
inc
add
out
push
and
in
pop
mov
pop
(bad)
jmp
or
mov
or
xchg
and
push
mov
fstp
mov
add
mov
lods
pushf
clc
stc
ror
mov
xor
pushf
not
jmp
pushf
push
pushf
lea
jae
push
stc
stc
add
push
push
pusha
jmp
test
pusha
add
mov
lea
jmp
call
jmp
daa
mov
xor
push
mov
jmp
js
xor
mov
js
adc
fbld
movs
jg
stos
scas
fisubr
mov
mov
dec
ret
dec
ins
inc
push
mov
fucomip
mov
aad
inc
ret
(bad)
or
movs
xchg
inc
xor
aad
test
scas
adc
shl
push
adc
frstor
aaa
add
push
or
mov
mov
jp
call
pop
cmp
cmp
js
into
pop
mov
aam
or
jno
ror
and
mov
call
mov
inc
bound
xchg
jmp
addr16
xchg
mov
inc
mov
loope
xchg
clc
(bad)
ss
std
xlat
sub
fsubr
pop
out
mov
aam
push
xchg
jp
imul
inc
lea
test
jmp
fwait
(bad)
leave
ret
inc
fs
mov
out
fild
push
pop
fistp
jl
pop
shl
and
inc
fidiv
mov
jo
dec
jmp
jge
int3
jbe
les
ds
mov
gs
lds
push
add
mov
loop
jecxz
mov
dec
mov
repz
cwde
sbb
pop
test
pop
inc
push
push
xchg
retf
add
xchg
ror
(bad)
sbb
int
fwait
and
xchg
das
ja
sbb
cmp
sub
mov
cmc
in
dec
adc
xchg
push
push
pop
call
xchg
(bad)
jmp
sub
or
sub
add
bswap
mov
neg
sar
mov
cmp
repnz
push
lea
jne
pusha
pop
mov
mov
movzx
mov
lea
jmp
lea
jne
mov
setg
movsx
mov
not
push
call
lea
call
pusha
lea
jb
rol
bts
mov
cmp
cmc
clc
cmp
shl
push
pusha
cmc
add
call
jno
pop
adc
xchg
mov
xchg
jecxz
lea
bnd
fs
jno
mov
retf
lods
gs
mov
enter
enter
pop
aas
jl
mov
add
add
dec
add
xor
mov
ds
sub
pop
ror
(bad)
ret
dec
int3
or
pop
stc
stc
xchg
movs
aam
xor
in
push
in
ret
jne
or
add
push
sub
pop
or
retf
push
cmp
popa
xchg
rol
shr
jmp
nop
aas
bound
daa
stc
stc
test
jne
mov
push
and
push
xor
push
popa
repnz
mov
dec
in
jbe
xor
aam
add
enter
stos
inc
fisub
or
mov
sbb
mov
mov
adc
cdq
bnd
sbb
adc
cmp
clc
adc
pop
out
sbb
pop
(bad)
pop
shl
lds
test
xchg
jbe
test
in
sbb
adc
cmp
pop
lds
jne
add
hlt
shl
das
enter
out
mov
jno
ins
mov
enter
and
add
fdivr
cmc
jle
in
or
jno
imul
dec
leave
inc
adc
cmp
and
xchg
dec
jl
push
xor
jo
cmc
dec
xor
icebp
xchg
mov
mov
xchg
mov
pusha
cmp
(bad)
mov
jg
xor
jge
clc
dec
cwde
sbb
jbe
test
jle
or
jecxz
add
cmp
adc
and
inc
bound
popf
push
add
mov
xor
std
pop
adc
daa
(bad)
fnsave
mov
jmp
cld
test
add
xor
scas
push
outs
or
popf
or
lock
and
pop
xor
ret
dec
jo
mul
fnstsw
xor
addr16
mov
lea
adc
stc
push
sahf
add
mov
sbb
jmp
add
dec
mov
test
fincstp
pop
push
mov
ds
cmp
cmp
retf
out
retf
popf
lods
jg
scas
rcr
push
fimul
mov
aaa
ins
add
xchg
clc
lods
adc
add
or
xchg
jmp
mov
imul
dec
push
movs
xor
mul
mov
(bad)
jns
push
push
sbb
inc
test
jmp
mov
push
enter
lods
push
xor
xor
lock
arpl
es
push
or
hlt
cmp
data16
push
dec
stc
add
cmc
mov
jl
hlt
call
popf
dec
or
or
cdq
dec
sub
push
push
mov
and
xchg
scas
aas
test
pop
inc
pop
ret
ins
fnstsw
pop
and
mov
into
adc
jno
iret
pushf
(bad)
rcr
out
sar
in
xor
jmp
jae
pop
mov
in
push
push
pop
xlat
ja
lods
pop
dec
(bad)
mov
clc
es
or
adc
xor
scas
call
ret
outs
cmps
push
push
mov
(bad)
mov
xlat
pop
mov
cmc
lock
out
mov
sub
dec
cmp
cmp
inc
std
cmps
sbb
enter
push
vpmaxsw
out
lahf
mov
or
addr16
push
mov
repnz
nop
mov
sbb
ins
xchg
(bad)
aaa
dec
sbb
cwde
dec
fild
aam
adc
mov
imul
movs
shl
pop
and
cld
data16
cmps
popa
cs
stos
ror
pop
mov
push
aaa
pop
(bad)
int3
push
loopne
test
push
ja
mov
fadd
and
inc
push
outs
sti
cmp
sbb
mov
arpl
add
stc
or
cmp
xor
sub
mov
sub
(bad)
pop
retf
mov
outs
adc
xchg
inc
inc
aas
inc
xchg
loopne
or
xchg
ret
inc
inc
arpl
mov
cwde
imul
(bad)
lds
xor
sahf
and
ret
mov
cmp
or
arpl
fbstp
nop
mov
dec
ss
outs
mov
cmps
adc
mov
sbb
mov
add
iret
sub
pop
add
mov
les
rol
lods
sbb
pop
loope
sbb
mov
and
mov
jae
and
jl
xchg
push
add
data16
das
je
pop
in
sbb
mov
lods
jnp
pop
inc
inc
xchg
dec
sbb
pop
xor
cmp
loope
mov
inc
adc
sub
add
test
movs
pop
pushf
pop
push
dec
imul
mov
cdq
pop
popf
rcr
cmp
mov
jp
gs
repnz
ret
data16
pop
iret
repz
nop
push
in
push
cmc
sbb
dec
loope
mov
popf
cmc
push
xchg
test
outs
test
rcl
cmp
in
loop
push
cmp
enter
mov
popf
jmp
rcl
ror
cmp
ja
push
loopne
mov
pop
fimul
jl
(bad)
adc
scas
mov
jbe
push
push
mov
mov
mov
mov
mov
sub
sbb
das
add
fisttp
jge
test
div
shl
arpl
outs
push
popa
xor
inc
ins
adc
cmp
adc
and
(bad)
push
lahf
icebp
ret
jbe
adc
fisttp
loop
retf
add
(bad)
jns
cli
pusha
hlt
imul
cmp
or
xchg
jo
cs
icebp
stc
pusha
xor
inc
lea
xchg
test
jno
push
outs
mov
mul
mov
imul
jns
push
daa
push
ins
sbb
repnz
cmp
xor
lds
popf
(bad)
out
fisub
inc
neg
fdiv
mov
scas
lock
sub
icebp
push
int3
pop
pusha
jmp
cld
add
push
sbb
push
loope
xchg
cs
daa
test
jecxz
out
cld
inc
sbb
pop
mov
bound
cmp
jo
adc
inc
cmp
xchg
int3
sub
pop
lock
inc
es
mov
dec
repnz
sbb
xor
adc
fldz
inc
add
pop
xor
jcxz
dec
int
retf
adc
dec
mov
popa
pop
loop
out
sub
jecxz
sbb
movs
(bad)
cmp
dec
mov
sub
(bad)
and
jo
(bad)
(bad)
fiadd
xchg
pushf
into
cmp
dec
add
push
test
or
dec
rcr
not
es
mov
iret
aaa
bound
pop
sar
or
icebp
inc
push
loopne
pop
or
bound
shr
push
test
mov
dec
fsubr
sub
repz
not
xchg
dec
mov
jne
clc
jns
xor
ficom
dec
pop
jge
or
push
cmp
xchg
cwde
retf
popa
adc
and
stos
jge
mov
cmp
adc
xor
jg
sti
sbb
gs
mov
pop
cs
mov
adc
push
push
dec
xchg
or
ret
pushf
xchg
jge
jb
nop
jl
adc
jp
(bad)
mov
push
test
pop
iret
sub
imul
ret
(bad)
test
(bad)
sti
sub
inc
push
dec
and
xchg
(bad)
loope
add
xor
inc
or
jnp
enter
in
mov
arpl
pop
icebp
pop
pop
sbb
and
sbb
jo
int3
inc
adc
sub
sbb
pop
loop
ret
loop
ds
xor
stos
inc
and
fidiv
(bad)
fld
loop
xchg
enter
mov
sbb
call
sbb
rol
or
mov
mov
fdivr
or
adc
jmp
sti
xchg
mov
jmp
stos
pushf
(bad)
idiv
out
jo
xchg
cmp
jnp
pop
shl
aad
jne
fdivr
pop
inc
mov
mov
pop
mov
dec
dec
out
ficom
repnz
or
cwde
mov
jecxz
mov
call
mov
mov
js
adc
test
pushf
adc
mov
sbb
mov
push
push
popf
xchg
mov
sub
dec
xchg
imul
xor
mov
jg
add
fs
icebp
js
and
rol
imul
stos
icebp
gs
out
test
xchg
xchg
mov
popa
jns
push
xchg
(bad)
scas
test
movs
ins
fneni(8087
pop
cmp
fisub
test
inc
leave
mov
push
or
repnz
aad
icebp
ja
jmp
cmp
pop
pop
dec
mov
int
fstp
lds
icebp
nop
pop
(bad)
ja
push
push
mov
ja
dec
sahf
jle
jb
mov
sub
mov
sub
mov
add
or
jmp
icebp
(bad)
bound
mov
and
pop
pop
repz
stos
dec
clc
pop
lahf
stos
push
xchg
ror
sub
out
pusha
or
fst
mov
test
cld
jne
lea
mov
mov
not
test
and
cmp
cmps
and
push
clc
add
sub
xor
mov
push
xchg
pusha
mov
scas
in
ins
pop
add
mov
ja
rol
pusha
bound
jmp
das
out
push
dec
outs
push
xchg
or
cmp
mul
push
xor
sub
cdq
push
or
pop
jg
and
mov
idiv
mov
xchg
xchg
pop
retf
test
mov
call
or
in
repnz
push
push
pop
cmp
add
ins
(bad)
in
xor
mov
call
movs
jne
xchg
cmc
inc
popa
dec
cmps
mov
jge
aad
outs
movs
sbb
mov
lds
call
iret
mov
pop
jne
popf
in
mov
mov
iret
test
xlat
stos
ins
outs
ficom
sbb
(bad)
cmps
inc
icebp
hlt
shl
outs
jl
and
dec
loopne
pop
enter
lahf
mov
nop
jmp
in
mov
push
daa
xchg
and
xor
stc
inc
cmp
inc
push
push
push
fild
inc
in
adc
inc
sahf
sub
jp
repz
sbb
adc
(bad)
cmp
retf
ret
push
in
and
jp
je
push
stc
clc
pop
inc
ret
lds
inc
sub
xchg
cs
mov
xchg
adc
outs
enter
ins
sbb
mov
pop
aad
cmc
push
and
push
jmp
fwait
push
movsx
sbb
adc
push
mov
inc
scas
sbb
xchg
not
mov
repz
ret
out
jmp
pop
push
xlat
sub
fild
jl
ss
addr16
or
and
test
cmp
(bad)
imul
mov
data16
push
mov
jne
lods
scas
cmp
mov
in
push
mov
and
jecxz
out
pop
mov
push
cmp
aad
or
clc
cmps
sbb
lods
inc
dec
adc
clc
xor
sub
daa
fimul
repnz
dec
xchg
inc
or
mov
js
fcmovu
pop
xchg
frstor
shl
xchg
call
test
ss
inc
xbegin
xor
adc
mov
loope
mov
jl
test
imul
fwait
(bad)
out
or
out
push
or
bound
or
lds
aam
push
icebp
and
pop
rcr
je
shl
and
xchg
(bad)
and
retf
inc
inc
in
mov
iret
mov
inc
fld
pop
lock
pop
dec
ss
in
inc
xlat
out
outs
je
fld
lea
xlat
daa
pop
pop
mov
je
(bad)
outs
aas
sar
sub
stos
xor
movs
dec
je
aam
out
push
adc
cli
dec
push
(bad)
or
and
pop
clc
rep
lods
retf
add
fcmovnb
sub
pop
cld
call
mov
sub
dec
push
(bad)
cwde
inc
or
push
hlt
(bad)
xor
cmp
xchg
ss
stos
mov
fild
leave
fs
adc
enter
cmps
pop
je
mov
gs
jnp
dec
daa
rcr
test
jo
aad
in
add
in
mov
bound
shl
das
mov
imul
jbe
pop
xor
cdq
repnz
push
retf
push
pop
test
in
stos
xchg
gs
lock
aam
sub
fwait
inc
out
fwait
jp
inc
loope
add
sub
pop
loopne
and
mov
mov
std
fistp
or
add
in
outs
cli
call
add
test
dec
mov
mov
repz
(bad)
jns
in
jo
lock
sar
test
mov
psubusb
movs
gs
(bad)
and
dec
(bad)
or
mov
and
outs
mov
lods
xor
mov
mov
or
or
(bad)
(bad)
test
rcr
and
mov
dec
(bad)
mov
je
cmp
stc
rcl
mov
(bad)
ret
and
cmc
loop
inc
xchg
retf
xor
pop
clc
sbb
pop
cld
push
fld
cwde
push
push
jo
mov
inc
repnz
js
mov
pop
mov
xor
push
(bad)
fldcw
iret
dec
icebp
dec
rol
or
int
push
movs
mov
jl
or
std
and
int3
xor
and
mov
jmp
aad
pop
sbb
ror
mov
retf
jmp
in
push
mov
xor
adc
adc
idiv
jns
cmps
iret
jo
idiv
dec
adc
ror
or
cmp
mov
mov
test
pop
inc
pop
mov
ficom
mov
jo
sub
icebp
and
cmp
jp
test
add
rol
jge
sbb
movs
loop
mov
aam
sub
cmp
mov
fs
sbb
outs
jmp
(bad)
daa
xchg
jg
sti
inc
mov
pusha
movs
cmp
pop
mov
dec
test
push
push
in
push
addr16
cmp
stc
lock
fcmovu
jle
pop
mov
pop
out
push
div
shl
dec
mov
arpl
mov
loopne
addr16
imul
cmps
call
jecxz
pushf
sub
scas
ror
adc
xor
pop
add
jne
sub
push
ja
aaa
inc
jb
or
cmp
jge
es
repnz
xor
int
je
push
push
adc
pop
inc
or
mov
mov
(bad)
mov
sti
out
push
and
bound
jne
jne
cld
pop
aaa
cli
aas
loope
movs
adc
jno
push
mov
jge
inc
mov
jg
popa
retf
sar
inc
inc
inc
(bad)
js
sub
test
sub
xchg
xor
sbb
add
xchg
cmc
dec
sbb
test
mov
pop
jmp
call
add
cs
repz
or
xor
ror
and
jg
inc
xlat
outs
cdq
pop
jl
(bad)
sti
ins
dec
inc
loope
hlt
and
ret
and
cmp
push
pop
int
push
sbb
jecxz
or
jle
test
jnp
jmp
loope
sub
push
add
jb
cmp
xor
rcr
xor
mov
cwde
mov
xchg
sbb
lahf
or
nop
sub
and
sbb
xchg
scas
push
jae
cwde
jb
push
mov
jle
es
adc
test
inc
lds
push
and
bound
popa
sub
sub
sbb
sbb
cld
test
jnp
sbb
jp
add
fwait
xor
ins
test
imul
xlat
pusha
mov
push
push
ds
push
aas
popa
sar
and
inc
mov
popf
hlt
dec
jmp
inc
xor
cmc
fldenv
xchg
je
icebp
push
je
dec
inc
ds
loope
inc
jno
mov
add
pop
inc
mov
fcmovbe
arpl
std
sub
ds
mov
into
mov
mov
cmc
std
(bad)
xor
push
(bad)
jecxz
dec
jae
pop
and
inc
mov
dec
ins
test
dec
fwait
cmp
(bad)
ds
out
fucomip
mov
in
jnp
sub
xchg
xor
or
pop
adc
push
push
jle
pop
aam
jle
add
iret
xor
bound
jne
loope
pusha
das
jnp
mov
and
stos
fmul
lods
lods
in
inc
jns
jns
jbe
sub
jge
clc
arpl
jecxz
ins
nop
aam
std
pop
mov
or
pop
aas
iret
call
jne
jl
fstp
mov
mov
inc
stos
ds
fst
sbb
sub
cs
adc
mov
push
test
push
sbb
dec
pop
ds
hlt
fdiv
sbb
jns
jo
test
pop
mov
mov
inc
nop
mov
das
xchg
stos
stos
loope
mov
fs
jno
inc
mov
mov
mov
ja
pop
or
jmp
(bad)
adc
add
jbe
xchg
adc
mov
(bad)
int3
mov
mov
aad
bound
inc
fcom
shl
div
mov
lahf
mov
stos
dec
adc
arpl
mov
test
jp
jmp
cwde
call
ins
inc
retf
in
pop
ss
dec
xchg
xor
arpl
fs
outs
nop
ins
cmp
pop
sub
add
rol
cmc
xor
cdq
add
rcr
std
add
pop
loope
mov
das
in
xchg
xchg
push
jmp
fstp
pushf
or
cmp
fnsave
cmp
inc
mov
and
scas
cli
retf
fst
adc
xor
pop
inc
sbb
dec
pop
push
jle
pop
cmp
stos
scas
(bad)
xchg
and
fucom
inc
jg
sbb
out
je
push
pop
and
ss
lods
jne
scas
mov
lods
aad
loop
xor
cmp
mov
sbb
add
mov
jb
repz
or
loopne
repz
push
jnp
xchg
inc
out
mov
jno
ds
das
xchg
add
les
stos
rep
retf
ror
jae
scas
sahf
xchg
mov
imul
xor
push
cmps
add
aas
push
and
cmp
pop
mov
ret
rol
xor
sub
outs
mov
jns
adc
pop
push
add
inc
test
xor
in
xchg
ss
jo
and
mov
fucomi
icebp
mov
adc
dec
pop
push
or
mov
adc
mov
ffree
fs
in
iret
sbb
int
mov
dec
retf
les
movs
jo
inc
mul
mov
in
sbb
call
adc
(bad)
daa
aad
mov
fimul
pop
lods
adc
pop
or
nop
cmps
jecxz
jecxz
movs
or
imul
add
push
xchg
inc
dec
cwde
shl
cmps
sub
mov
(bad)
jmp
push
in
xor
adc
pop
mov
aad
push
fbstp
(bad)
(bad)
out
push
test
dec
pushf
mov
call
call
jmp
push
lea
jne
shrd
rcr
and
mov
xor
cmp
shrd
mov
sbb
add
cmc
bt
sar
mov
stc
push
test
test
lea
jne
pusha
lea
je
stc
bt
sub
cmp
cmp
pusha
jmp
jne
setae
pusha
movsx
mov
mov
pusha
movsx
lahf
mov
seta
call
pushf
pop
mov
mov
call
lea
jb
daa
das
sar
mov
pusha
call
arpl
arpl
and
and
ins
outs
cmp
fdivr
femms
or
xchg
shl
(bad)
sbb
inc
xchg
nop
dec
mov
mov
or
loope
push
scas
pushf
mov
add
and
mov
inc
(bad)
mov
pushf
stos
in
cmp
and
xchg
ror
ret
addr16
xchg
mov
mov
cmps
shl
in
jmp
adc
xchg
jnp
stos
mov
sbb
loope
int
xchg
jo
mov
cmc
push
fcmovnb
push
retf
sbb
push
fwait
int
push
jae
cmp
mov
out
call
xor
clc
cmp
call
call
pusha
pushf
mov
mov
jmp
push
mov
pusha
push
mov
pusha
lea
jmp
or
push
call
cli
and
mov
add
push
dec
clc
jbe
sub
repz
lea
dec
jno
dec
pop
in
or
hlt
jnp
mov
(bad)
xor
mov
jmp
bound
pop
and
sahf
adc
pop
mov
sub
pop
sub
je
sbb
adc
ja
lods
mov
sub
rcl
mov
dec
and
cmp
adc
inc
test
mov
stc
cmp
cmps
mov
mov
fmul
push
inc
data16
in
scas
pop
cmc
stos
(bad)
sbb
push
aad
iret
add
jg
or
xor
(bad)
cld
inc
inc
and
js
push
adc
cmp
(bad)
jmp
mov
jmp
adc
cmp
add
ror
add
shr
shl
bts
shrd
mov
bts
jmp
lea
ja
bt
pusha
imul
clc
stc
add
mov
push
mov
pusha
lea
jmp
mov
pusha
mov
push
push
push
mov
lea
jmp
lea
mov
call
pushf
mov
mov
pushf
lea
jmp
push
jmp
not
mov
jmp
stc
cmc
or
pushf
lea
je
pusha
xor
test
push
xchg
cmp
mov
clc
cmp
pushf
stc
sub
mov
lea
jne
bt
push
call
add
add
mov
not
cmc
push
jmp
pushf
mov
mov
jmp
jmp
adc
shr
mov
bt
xor
pusha
push
bt
ror
push
push
pushf
call
test
test
push
popf
mov
mov
lea
jmp
mov
push
push
pushf
pusha
lea
jmp
jmp
mov
bswap
bswap
shr
pushf
add
bsf
clc
lea
xadd
or
shr
shld
sub
cmp
mov
shr
mov
rol
push
sub
and
add
cmc
mov
xor
add
rcr
bts
shl
add
setge
push
rol
pop
xor
add
mov
pop
sub
cmp
inc
bsr
add
rcr
inc
movzx
bsr
mov
clc
clc
xor
clc
test
pushf
cmc
add
push
jmp
movsx
pushf
mov
clc
push
ror
neg
mov
pushf
not
pushf
jmp
mov
cmp
sub
bt
sub
call
mov
pushf
push
mov
lea
jnp
push
push
mov
mov
push
lea
jmp
jmp
mov
mov
call
push
mov
jmp
call
pushf
mov
mov
push
pushf
mov
lea
jmp
push
mov
pushf
pushf
mov
jmp
mov
mov
push
pushf
lea
jmp
call
mov
pushf
mov
pusha
sub
stc
call
mov
jmp
push
or
mov
call
sub
bt
call
call
push
cmc
cbw
bt
mov
cwde
mov
mov
clc
jmp
stc
mov
add
push
call
push
mov
mov
mov
jmp
mov
push
mov
jmp
test
movzx
cmc
xchg
test
test
cmc
add
jmp
mov
pushf
mov
call
mov
stc
rcr
mov
call
bt
cmp
sub
push
dec
push
jmp
btr
xor
pushf
pusha
mov
bt
bt
stc
bt
add
call
pushf
pop
pusha
pushf
lea
je
pushf
push
pop
push
mov
push
pusha
lea
jmp
lea
jne
sar
sub
xor
lea
seto
setb
pop
push
lea
jmp
sar
sar
stc
mov
clc
setp
mov
mov
bt
jmp
pushf
push
push
pop
pushf
push
mov
push
lea
jmp
clc
sub
mov
test
stc
jmp
cmc
inc
or
inc
mov
jmp
test
sub
clc
jmp
pushf
pusha
jmp
mov
bt
add
push
pushf
pushf
shld
call
push
mov
pushf
mov
push
lea
jmp
lea
jno
pusha
mov
pushf
push
push
pushf
pop
jmp
rcl
mov
shr
shl
xor
jmp
sub
test
jmp
dec
add
call
jmp
pushf
shl
jmp
pushf
mov
lea
jo
pusha
mov
pusha
dec
push
mov
lea
jmp
add
pusha
call
mov
pushf
push
lea
jmp
jmp
je
mov
ror
rol
shl
mov
cmp
bt
stc
cmc
add
pusha
mov
mov
pushf
pusha
mov
lea
jmp
jmp
mov
jmp
lea
jne
shrd
push
inc
stc
xor
lea
lea
pushf
mov
pusha
mov
mov
lea
jmp
pushf
call
pushf
pushf
mov
push
pushf
lea
jmp
sub
call
push
bswap
repz
pop
inc
push
pusha
mov
movsx
mov
bswap
call
bts
add
bsf
ror
btc
rcr
add
stc
movzx
rcl
mov
rol
rcl
sar
cmp
test
xor
xor
or
sub
mov
bts
cmc
add
add
movzx
neg
mov
jmp
mov
pusha
lea
jmp
rol
rol
bswap
pusha
test
sub
btr
rol
mov
mov
test
add
pusha
call
pop
mov
pop
push
pushf
mov
jmp
push
jmp
push
mov
pushf
pop
call
repz
pop
mov
call
mov
call
mov
jmp
test
add
mov
mov
push
lea
jmp
jmp
jmp
sub
pusha
push
call
bsr
add
lahf
mov
sar
sub
mov
pushf
pushf
add
pushf
mov
call
pushf
mov
pusha
push
mov
pushf
lea
jmp
shld
xadd
push
popf
lea
jmp
jmp
repz
pop
call
mov
mov
pusha
pushf
call
pusha
xchg
pusha
mov
cld
jmp
xor
mov
bt
clc
add
test
pusha
cwde
stc
test
test
mov
sub
bt
add
pushf
push
mov
push
pushf
lea
jmp
mov
push
clc
add
call
mov
pusha
mov
pushf
mov
lea
jmp
pusha
push
pop
pushf
push
mov
lea
jmp
bts
sub
rcl
mov
shr
btr
and
sub
bt
xor
not
inc
sub
call
cld
call
mov
mov
pusha
lea
jmp
push
pop
pushf
push
push
lea
jmp
not
push
inc
push
xchg
mov
bswap
movsx
push
movzx
mov
pop
lea
movzx
dec
movsx
shr
test
bswap
shr
neg
mov
add
pushf
cmp
stc
btr
lea
ror
rcl
sub
movsx
rcr
mov
setae
mov
shr
add
and
mov
setnp
rol
call
jmp
call
push
pop
mov
mov
mov
lea
jmp
pushf
mov
pushf
push
mov
pusha
mov
lea
jmp
jmp
mov
mov
pushf
pushf
repz
pop
call
mov
pushf
lea
jne
bsf
and
cmp
mov
bt
cmp
cmp
and
jmp
lea
adc
mov
clc
pusha
cmc
add
jmp
pusha
push
pushf
pop
jmp
jmp
call
push
mov
push
mov
pushf
pushf
mov
lea
jmp
cmp
xor
mov
push
jmp
and
stc
pushf
stc
cmp
jmp
pushf
repz
pop
push
mov
pushf
mov
call
push
call
mov
mov
pusha
pusha
mov
pushf
push
jmp
jmp
jmp
pushf
pushf
pushf
dec
pushf
lea
jmp
setnp
mov
pusha
mov
mov
pushf
mov
push
lea
jmp
pushf
mov
mov
jmp
call
mov
jmp
jmp
sub
call
sub
mov
test
cmp
bt
sub
test
clc
cmp
pushf
shr
pusha
pushf
call
shl
cmc
bt
adc
mov
cmc
cmc
clc
clc
add
pusha
mov
push
lea
jmp
pushf
lea
jbe
pop
pushf
lea
jmp
mov
pusha
mov
pushf
pop
jmp
mov
mov
mov
lea
jmp
mov
jmp
stc
pushf
shl
call
push
bt
and
jmp
pusha
call
mov
pushf
pushf
pushf
lea
jmp
cmp
pusha
lea
jne
bsr
test
push
pop
xor
mov
mov
jmp
push
pushf
mov
pusha
mov
call
jmp
rcl
mov
cmp
test
push
xor
jmp
jmp
pusha
movzx
jmp
push
mov
push
lea
cpuid
push
clc
sub
cmp
jmp
mov
pusha
mov
mov
call
mov
mov
mov
pushf
call
mov
call
mov
mov
push
lea
jmp
mov
push
pusha
mov
mov
mov
jmp
bt
call
cmc
push
mov
ror
pusha
push
push
jmp
call
call
adc
mov
cmc
push
cmp
sub
clc
pushf
add
push
not
pushf
pusha
push
xor
jmp
mov
bt
bswap
mov
inc
not
shl
sbb
mov
pusha
call
pushf
mov
push
pusha
mov
call
inc
mov
push
bt
sub
jmp
inc
test
mov
pusha
bt
call
std
mov
push
popf
mov
lea
jmp
pushf
push
repz
pop
jmp
pushf
mov
jmp
aas
rdtsc
call
sub
mov
aam
shr
call
sar
mov
pushf
add
pushf
mov
jmp
lea
jne
mov
pusha
pusha
mov
lea
jmp
pushf
push
push
pop
mov
lea
jmp
mov
pushf
push
mov
push
pushf
mov
pushf
pop
call
mov
jmp
aad
sbb
xadd
btc
rdtsc
bt
jmp
push
pop
push
lea
jmp
pushf
pop
push
call
pushf
mov
mov
push
lea
jmp
pushf
cmp
stc
mov
bsr
cmp
bswap
mov
test
shl
jmp
call
mov
lea
jg
pusha
push
mov
mov
pushf
lea
jne
shr
mov
clc
cmp
and
push
cmp
mov
jmp
pushf
pop
mov
mov
jmp
mov
call
cmp
jmp
mov
push
pushf
mov
mov
mov
call
pusha
call
jmp
jmp
stc
cmp
sub
bt
cmp
pusha
pushf
mov
lea
jb
push
mov
push
jmp
mov
mov
bt
bt
add
mov
jmp
and
mov
push
sub
push
test
add
call
lea
jno
pusha
mov
mov
lea
jmp
mov
call
mov
lea
jne
sar
bsf
mov
clc
stc
jmp
mov
pushf
pushf
push
mov
push
mov
repz
pop
mov
mov
mov
call
mov
jmp
call
mov
mov
mov
lea
jmp
shl
clc
movzx
bt
pusha
mov
stc
sub
call
pop
mov
movsx
mov
mov
jmp
mov
mov
push
push
lea
jmp
call
mov
pushf
lea
jmp
mov
mov
mov
pusha
lea
jmp
mov
mov
pushf
pop
push
jmp
lea
ja
pusha
pushf
pop
pusha
push
pop
mov
push
mov
lea
jmp
push
pusha
jmp
pusha
push
pop
pushf
lea
jmp
call
rcl
stc
movzx
pusha
dec
sub
neg
push
dec
add
clc
not
bswap
bt
push
xor
rcl
btc
sub
call
stc
stc
not
cmc
not
test
cmc
cmp
stc
and
pusha
mov
pusha
mov
jmp
push
mov
pushf
mov
call
mov
jmp
pushf
pushf
push
mov
call
jmp
push
call
shr
mov
jmp
inc
mov
cmc
xor
push
dec
cmc
cmc
xor
call
mov
pushf
mov
lea
jmp
pushf
call
pusha
rol
cmp
mov
sub
jmp
clc
cmc
lea
mov
adc
setns
call
push
dec
stc
cmc
test
pushf
sub
bt
bt
pushf
mov
stc
test
bt
sub
jmp
push
mov
mov
push
jmp
call
lea
movsx
movzx
setg
inc
pushf
sub
shrd
sub
xor
movzx
ror
lea
pushf
xor
rol
shl
xor
bswap
movzx
cmp
mov
call
call
clc
clc
bt
mov
shr
ror
add
call
pusha
push
mov
push
jmp
pushf
push
push
pop
push
lea
jmp
cmp
xor
pusha
add
pusha
ror
mov
bt
sub
cmc
clc
bt
xor
test
call
mov
push
pop
mov
push
lea
jmp
setne
call
jmp
pushf
jmp
call
mov
add
mov
xor
lea
lea
ror
inc
jmp
cld
pusha
pusha
rep
sbb
rol
shr
ror
mov
sub
call
mov
push
pop
mov
pushf
pushf
lea
jmp
cwde
push
pushf
pusha
mov
lea
jbe
push
pusha
lea
cpuid
jmp
pusha
mov
push
mov
pusha
mov
jmp
add
push
lea
jle
pushf
mov
mov
pusha
pushf
pushf
mov
lea
jmp
mov
mov
mov
mov
mov
lea
jmp
pusha
pushf
mov
jmp
xchg
not
movsx
movzx
pushf
xchg
pusha
pop
lea
ja
pushf
repz
pop
inc
call
not
push
jmp
call
mov
pushf
mov
call
repz
pop
pushf
jmp
xadd
mov
aad
std
mov
stc
movsx
stc
mov
ror
mov
test
mov
ror
shrd
push
mov
movsx
call
mov
mov
push
lea
jmp
repz
pop
mov
jmp
neg
movsx
xor
neg
sar
shrd
add
sbb
xor
shl
not
bt
and
cmc
not
sub
mov
cmp
clc
sub
jmp
push
pushf
pushf
pop
mov
push
push
pop
pushf
pushf
pushf
pushf
lea
jmp
clc
cmc
test
xor
cmc
pusha
add
clc
cmp
bt
pushf
sub
push
pushf
call
lea
ja
bt
clc
inc
mov
cmp
inc
lea
btc
clc
shr
stc
sub
not
shl
sets
lea
lea
and
btc
bsf
shld
sub
pushf
pusha
mov
movzx
mov
pusha
pushf
pushf
pop
bswap
pusha
call
pusha
mov
call
pushf
lea
jne
bsr
call
cdq
mov
pushf
sbb
mov
jmp
inc
bt
cmc
jmp
mov
push
push
push
lea
jmp
pushf
pop
jmp
pushf
call
lea
bt
jmp
jmp
test
cmp
mov
pusha
pushf
push
mov
mov
mov
mov
mov
push
pushf
mov
pushf
push
mov
jmp
pushf
push
push
mov
push
jmp
mov
pushf
mov
mov
pushf
lea
jmp
mov
push
mov
lea
jmp
mov
jmp
cmp
bt
cmc
add
jmp
mov
call
call
sub
or
and
icebp
(bad)
and
std
(bad)
and
cld
(bad)
and
in
(bad)
and
loopne
and
clc
(bad)
and
out
(bad)
and
(bad)
and
in
(bad)
and
in
(bad)
and
(bad)
and
loopne
and
icebp
(bad)
and
or
and
loopne
and
std
(bad)
and
and
(bad)
and
out
(bad)
and
in
(bad)
and
and
out
(bad)
and
icebp
(bad)
and
out
(bad)
and
hlt
(bad)
and
or
and
loopne
and
repz
and
icebp
(bad)
and
icebp
(bad)
and
icebp
(bad)
and
and
in
(bad)
and
icebp
(bad)
and
(bad)
and
(bad)
and
and
in
(bad)
and
in
(bad)
and
and
icebp
(bad)
and
out
(bad)
and
repz
and
icebp
(bad)
and
cld
(bad)
and
in
(bad)
and
and
cli
(bad)
and
stc
(bad)
and
cld
(bad)
and
icebp
(bad)
and
out
(bad)
and
cld
(bad)
and
out
(bad)
and
out
(bad)
and
in
(bad)
and
out
(bad)
and
(bad)
and
(bad)
and
out
(bad)
and
and
or
and
out
(bad)
and
repz
and
or
and
dec
and
loopne
and
(bad)
and
sti
(bad)
and
or
and
loopne
and
and
in
(bad)
and
test
and
(bad)
and
cli
(bad)
and
(bad)
and
test
and
in
(bad)
and
or
and
(bad)
and
in
(bad)
and
cli
(bad)
and
(bad)
and
cld
(bad)
and
icebp
(bad)
and
cli
(bad)
and
(bad)
and
out
(bad)
and
cli
(bad)
and
(bad)
and
cld
(bad)
and
cli
(bad)
and
(bad)
and
dec
and
cli
(bad)
and
(bad)
and
or
and
cli
(bad)
and
(bad)
and
in
(bad)
and
cli
(bad)
and
(bad)
and
icebp
(bad)
and
and
cli
(bad)
and
(bad)
and
dec
and
(bad)
and
stc
(bad)
and
(bad)
and
cli
(bad)
and
(bad)
and
test
pusha
out
(bad)
and
out
(bad)
and
cli
(bad)
and
(bad)
and
in
(bad)
and
cli
(bad)
and
(bad)
and
or
and
in
(bad)
and
out
(bad)
and
(bad)
and
in
(bad)
and
icebp
(bad)
and
icebp
(bad)
and
icebp
(bad)
and
(bad)
and
lock
and
or
and
in
(bad)
and
dec
and
cld
(bad)
and
in
(bad)
and
(bad)
and
and
dec
and
out
(bad)
and
and
repz
and
loopne
and
out
(bad)
and
(bad)
and
loopne
and
(bad)
and
and
icebp
(bad)
and
loopne
and
cld
(bad)
and
repz
and
(bad)
and
or
and
stc
(bad)
and
out
(bad)
and
or
and
dec
and
std
(bad)
and
cld
(bad)
and
out
(bad)
and
or
and
repz
and
or
and
in
(bad)
and
in
(bad)
and
or
and
repz
and
cli
(bad)
and
in
(bad)
and
in
(bad)
and
stc
(bad)
and
loopne
and
loopne
and
and
lock
and
out
(bad)
and
icebp
(bad)
and
icebp
(bad)
and
loopne
and
in
(bad)
and
cld
(bad)
and
arpl
jmp
mov
jmp
mov
push
call
jmp
push
push
pop
pushf
lea
jmp
repz
pop
mov
mov
pushf
pushf
mov
push
mov
jmp
mov
pusha
call
and
shld
mov
shr
neg
mov
pushf
test
add
pushf
push
pushf
call
clc
pushf
clc
not
stc
ror
pushf
mov
xor
mov
add
pushf
pusha
cwde
mov
sub
mov
cmp
cmc
mov
add
jmp
push
mov
mov
pushf
mov
mov
lea
jmp
push
push
pop
mov
mov
mov
mov
lea
jmp
pusha
mov
call
push
pop
mov
mov
pushf
lea
jmp
pushf
push
pop
push
lea
jmp
mov
not
mov
pushf
push
pushf
push
ret
setp
mov
pushf
call
mov
mov
push
mov
call
mov
call
cmc
inc
lea
cmp
jmp
mov
mov
mov
push
push
jmp
push
pushf
mov
push
jmp
xor
bt
pushf
cmc
push
add
pushf
pushf
pusha
mov
mov
mov
mov
pushf
push
push
ret
call
jmp
mov
pushf
call
sets
aas
lahf
btc
mov
test
mov
jmp
jmp
mov
call
push
mov
mov
call
mov
jmp
div
call
push
mov
mov
push
call
push
mov
push
mov
lea
jmp
pusha
mov
pusha
push
lea
jne
sub
rol
movzx
mov
cmc
pusha
and
cmp
stc
stc
cmp
call
call
push
repz
pop
pushf
call
not
mov
push
stc
ror
call
add
mov
jmp
test
cmc
pushf
shl
call
pushf
pop
call
lea
call
jmp
std
mov
call
call
mov
pushf
pushf
mov
push
ret
sub
call
jmp
jmp
call
neg
not
cmc
mov
shrd
or
xor
mov
jg
test
cmp
add
push
mov
push
pushf
pusha
lea
jmp
pushf
push
lea
jbe
push
mov
push
pusha
mov
lea
jmp
pushf
mov
pusha
push
mov
pusha
pushf
call
push
call
mov
jmp
jmp
call
push
mov
push
jmp
call
xor
mov
not
mov
pushf
pusha
lea
jmp
pusha
call
pusha
push
mov
pushf
pushf
push
mov
mov
push
mov
call
shl
bts
call
mov
jmp
mov
pushf
pusha
cmp
add
mov
pusha
pushf
mov
mov
pushf
pushf
mov
lea
jmp
mov
mov
pushf
mov
pushf
call
mov
push
lea
jmp
mov
pushf
mov
push
mov
repz
pop
mov
pushf
push
mov
mov
call
mov
pusha
mov
push
mov
mov
mov
pushf
pushf
push
push
ret
and
test
mov
push
bswap
jmp
mov
mov
lea
jmp
or
lahf
das
dec
mov
cmc
mov
pushf
add
push
jmp
push
pushf
mov
call
shld
pushf
bswap
add
mov
and
setns
mov
lea
jl
mov
jmp
mov
jmp
mov
not
mov
not
call
call
jmp
lea
jp
bt
bt
not
pushf
clc
ror
stc
test
call
rep
inc
call
pushf
pushf
mov
pushf
lea
jmp
jmp
pushf
jmp
mov
pushf
pushf
mov
mov
mov
push
mov
jmp
shl
aam
cdq
shrd
mov
sar
shl
bsf
push
mov
pushf
call
mov
mov
lea
jmp
mov
mov
push
push
lea
jmp
mov
push
jmp
aam
mov
test
pusha
sub
jmp
and
push
jmp
jmp
sub
je
shl
call
push
mov
push
jmp
bts
test
neg
rcr
cmc
add
bts
xor
inc
cmc
sub
and
sbb
mov
pusha
mov
add
jmp
push
call
stc
xor
jmp
mov
push
pusha
mov
pushf
pusha
mov
pushf
mov
jmp
call
rcl
mov
pusha
rcr
cmc
add
push
not
mov
jmp
mov
push
pushf
call
rdtsc
cdq
mov
lea
lahf
mov
pusha
mov
jmp
bsf
not
mov
rol
mov
jmp
clc
mov
cmc
stc
add
pusha
pushf
push
pushf
lea
jmp
jmp
mov
push
lea
jmp
mov
push
pushf
pushf
push
lea
jmp
rcl
rcr
add
push
mov
call
call
pushf
mov
push
mov
push
push
lea
jmp
pushf
repz
pop
jmp
xor
test
sub
jmp
mov
mov
mov
mov
mov
pusha
pushf
pop
pushf
call
mov
jmp
not
pop
pusha
mov
push
lea
jmp
bsf
not
ror
call
cmc
push
add
push
mov
pushf
mov
push
pusha
lea
jmp
call
pushf
pop
mov
push
pop
pushf
pusha
lea
jmp
xchg
call
aad
movzx
call
xchg
movsx
movsx
lea
mov
not
pop
lea
pushf
lea
jle
push
lea
lea
mov
cld
call
pushf
pop
mov
mov
push
pop
pushf
lea
jmp
mov
push
push
push
mov
pushf
mov
mov
pushf
lea
jmp
cmp
stc
push
pop
test
bt
cmp
add
push
cld
pusha
push
popf
pushf
mov
pushf
push
lea
jmp
push
repz
pop
pushf
mov
mov
jmp
cmc
sub
mov
xchg
call
mov
mov
mov
jmp
sub
jmp
bsr
test
mov
dec
mov
test
add
call
mov
mov
lea
jmp
pushf
push
mov
pushf
call
cmc
clc
cmp
sub
push
mov
call
mov
push
pushf
mov
call
bt
neg
aas
mov
sub
and
mov
bt
pushf
pusha
cmp
sub
jmp
mov
pushf
lea
pushf
mov
not
mov
dec
lea
push
push
pop
movsx
pusha
jmp
pushf
call
bswap
dec
call
pusha
mov
setbe
dec
inc
mov
dec
pusha
dec
bswap
mov
lea
not
xchg
push
jmp
mov
mov
mov
lea
jmp
mov
cmp
add
pusha
shrd
pushf
call
call
mov
push
pushf
push
mov
lea
jmp
test
cmc
add
call
pusha
mov
jmp
jmp
pushf
pushf
pop
push
jmp
mov
bt
call
call
cmp
shr
mov
mov
push
mov
mov
pushf
push
pushf
pop
push
jmp
pushf
jmp
push
push
jmp
mov
pushf
pushf
lea
jmp
