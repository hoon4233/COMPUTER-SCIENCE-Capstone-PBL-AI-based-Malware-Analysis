nop
jo
cmp
inc
push
call
push
mov
push
jle
(bad)
sbb
sbb
jae
mov
stos
les
or
mov
mov
mov
and
cld
add
fbstp
je
and
sbb
add
push
nop
mov
xor
sub
shl
mov
mov
push
adc
loope
add
sbb
inc
cmp
jne
aaa
and
int3
sub
add
jecxz
ss
adc
adc
js
sbb
popf
call
cmp
movs
ficomp
jns
nop
mov
cmp
stc
push
mov
std
loope
jmp
push
add
pop
add
sub
pop
in
cmp
test
cdq
push
aas
inc
test
xchg
sub
test
push
sbb
inc
dec
sbb
mov
push
cdq
dec
call
add
call
adc
in
xchg
xchg
sbb
xor
inc
xor
push
rol
adc
je
push
xchg
or
jmp
ja
jl
ret
dec
mov
mov
dec
mov
jmp
imul
xor
jecxz
ins
sbb
mov
pop
adc
push
test
sub
cdq
dec
inc
fist
add
xor
add
push
inc
add
dec
(bad)
frstor
jg
dec
dec
cli
or
push
inc
and
adc
jae
inc
add
jg
add
nop
or
inc
cmp
movs
xchg
and
pop
sbb
or
and
pop
call
pop
xchg
lea
mov
bound
test
mov
sub
ret
test
sbb
add
cmps
and
fwait
lods
mov
and
add
push
or
or
adc
xchg
and
sub
sub
xor
xor
cmp
xchg
or
xchg
and
add
fist
in
sbb
adc
or
and
inc
sub
mov
push
and
dec
jg
xchg
and
rcl
in
icebp
inc
pop
and
adc
movs
or
jge
xor
cmp
jl
iret
in
out
stos
mov
jae
dec
popa
outs
fs
push
pop
jb
mov
sbb
push
push
in
outs
jg
jno
mov
xor
and
inc
js
imul
pop
jge
jl
out
dec
inc
addr16
sbb
mov
je
rcr
dec
outs
loop
ins
mov
mov
clc
fs
jle
xor
push
push
fdivr
adc
push
mov
cmp
out
arpl
cmp
dec
mov
shl
adc
mov
mov
dec
adc
push
aam
jo
adc
je
popa
cli
inc
inc
arpl
jb
fs
fs
leave
dec
retf
ins
inc
mov
repnz
sub
push
dec
inc
push
dec
pusha
dec
xor
cs
adc
xchg
jne
je
stc
dec
mov
fistp
ja
bound
gs
les
jbe
push
fdivr
and
sbb
aas
hlt
test
outs
jo
outs
shr
mov
mov
xchg
mov
cmp
dec
dec
adc
and
push
les
lods
loop
addr16
push
ss
cdq
adc
push
fs
shl
jge
jne
sbb
fst
ins
inc
pmuludq
out
jge
std
loopne
das
loop
push
xor
cmp
or
jg
sub
mov
sbb
xor
clc
jae
je
jb
push
jecxz
arpl
aas
pop
ss
sbb
gs
movs
cmp
jmp
push
pop
add
jmp
add
std
mov
add
nop
je
add
add
add
adc
add
add
inc
add
add
add
add
add
jge
add
inc
add
add
fadd
inc
add
add
pop
adc
call
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
