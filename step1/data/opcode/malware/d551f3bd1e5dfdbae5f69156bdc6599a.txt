test
push
add
add
add
sub
mov
out
cmp
cli
add
ds
mov
outs
dec
mov
(bad)
popf
test
(bad)
mov
std
addr16
hlt
rol
arpl
aad
lds
test
sub
and
lods
add
and
addr16
test
movs
sar
jae
sti
push
test
(bad)
mov
fldcw
lock
inc
aaa
cmp
adc
mov
cli
nop
sbb
push
xchg
xchg
scas
outs
mov
(bad)
ds
cdq
add
outs
aaa
push
cli
or
mov
xor
adc
fidivr
imul
repnz
cmc
add
aam
dec
es
dec
mov
push
pop
gs
sbb
xchg
add
pop
mov
and
add
cmp
clc
cmps
pop
in
jnp
into
and
int
cdq
jmp
xchg
mov
push
(bad)
test
outs
mov
div
movs
dec
div
cdq
mov
fistp
nop
xor
or
xchg
in
repz
ret
movs
mov
push
dec
add
xchg
movs
fs
inc
sbb
sub
jge
mov
hlt
pop
aam
sar
call
mov
push
cs
pop
ret
scas
popa
cmp
mov
iret
cli
repnz
mov
(bad)
jp
xchg
lods
(bad)
jae
dec
cs
mov
addr16
mov
ins
or
retf
out
je
out
call
and
xor
xor
(bad)
jmp
mov
inc
outs
lods
sbb
cmp
sub
xor
push
bound
xor
popf
imul
pop
call
push
cs
push
stos
sti
repnz
mov
adc
or
add
add
push
inc
pop
inc
pop
adc
xchg
pop
dec
rcr
adc
mov
xchg
sbb
idiv
xchg
mov
dec
and
nop
jmp
xor
in
cmp
mov
retf
mov
add
pop
sbb
pushf
clc
clc
scas
or
adc
sbb
sbb
(bad)
push
cmps
jmp
mov
sbb
fdiv
int3
loopne
cmc
push
push
sub
enter
mov
cmp
cmp
xchg
mov
adc
outs
aas
or
test
or
cdq
enter
into
mov
mov
bound
in
fsub
in
pop
xor
pop
add
xchg
push
fisubr
xchg
sbb
adc
xchg
loope
cli
in
push
mov
lahf
cmp
call
jno
add
imul
cmp
fild
or
out
sar
pushf
(bad)
pop
sub
sub
cmps
stos
div
sbb
pushf
push
push
aad
out
lock
(bad)
call
imul
bound
movs
add
hlt
call
xchg
or
add
ds
pushw
fisub
push
mov
adc
cdq
dec
lods
push
cmp
mov
mov
jne
and
push
daa
xchg
push
mov
fild
sub
add
push
push
and
add
sbb
test
mov
mov
outs
ret
(bad)
cld
or
add
pop
pop
scas
mov
sbb
aam
or
dec
jecxz
data16
stos
fist
ds
call
imul
mov
fiadd
inc
add
and
jmp
mov
push
loope
retf
mov
add
cmp
popa
fwait
lods
ins
pop
xor
mov
aas
mov
dec
mov
sahf
mov
cwde
push
dec
and
pop
mov
fist
inc
daa
mov
(bad)
pusha
and
mov
jg
sub
mov
test
jno
cld
outs
xor
adc
rcl
ins
ss
into
aaa
jmp
xchg
pop
jmp
neg
shr
pop
(bad)
push
sub
push
bound
cmps
adc
lahf
push
bound
data16
xor
loopne
nop
xchg
xlat
fcomp
jl
adc
push
fsub
mov
loope
dec
push
sub
imul
jbe
lahf
aam
mov
jns
mul
xchg
push
mov
sbb
xchg
les
cmp
adc
jmp
imul
aas
mov
ret
outs
ror
push
pop
test
mov
call
mov
jns
jnp
into
xchg
cli
xchg
xchg
and
mov
jbe
lods
(bad)
dec
(bad)
pop
cwde
add
mov
ja
je
push
pop
pop
pop
push
xchg
mov
test
fcom
fucomp
js
cmps
xchg
lods
ret
mov
add
dec
in
mov
ins
fldpi
sub
dec
repnz
lock
cmp
cdq
loop
mov
(bad)
xor
rcl
sbb
mov
inc
aaa
(bad)
push
cmp
pop
cmps
add
dec
adc
add
in
or
xor
movs
pop
or
outs
push
sbb
xor
dec
lds
or
mov
stos
outs
mov
sub
leave
adc
fmul
ds
and
cli
enter
sbb
mov
adc
out
mov
mov
lods
xchg
inc
int3
loope
xor
cli
cdq
scas
cmp
ret
jo
icebp
pushf
add
jmp
dec
xchg
(bad)
test
popf
jne
stc
push
xor
xor
cmp
dec
xchg
popf
jns
repnz
out
cmps
or
add
push
lock
xchg
adc
das
dec
ret
pop
aaa
popf
fmul
mov
mov
loop
test
inc
mov
jo
push
test
adc
xor
jmp
adc
fimul
shl
and
loopne
and
fistp
pop
mul
mov
mov
test
push
jne
push
sbb
xor
lea
in
ins
inc
push
mov
fisttp
push
aaa
sbb
mov
inc
sbb
push
mov
js
out
add
fidiv
mov
rcl
fsubr
test
sub
sub
pop
pop
cdq
mov
out
out
addr16
sub
fstp
and
pop
jmp
pop
sar
jp
sub
sub
xor
sub
mov
int3
or
and
in
aam
aad
aas
dec
or
int3
adc
pop
push
jle
jle
cmp
sbb
dec
std
pop
neg
movs
loopne
xchg
cld
shr
inc
xor
xchg
retf
jp
mov
and
not
cmp
adc
mov
or
pop
pop
arpl
push
push
sbb
daa
cmps
cmps
mov
ins
dec
cdq
xor
push
xchg
pusha
inc
test
ss
push
adc
push
push
ds
stc
sub
call
test
outs
sbb
jae
sbb
push
pop
fwait
xchg
arpl
rol
ins
jecxz
cmp
sbb
in
jecxz
mov
fistp
jne
dec
mov
push
adc
dec
inc
mov
push
xor
(bad)
dec
xor
push
clc
dec
es
retf
aas
shl
aas
jnp
cmps
outs
pop
lods
add
push
xor
and
mov
pop
aad
sub
sar
mov
jge
enter
lock
cmp
mov
pop
out
dec
push
lahf
push
xchg
jmp
xchg
icebp
push
lea
mov
cwde
shr
stos
pop
sbb
xchg
and
adc
sub
push
test
(bad)
mov
test
std
lea
mov
cmps
push
sbb
push
es
dec
iret
pushf
adc
cmps
mov
(bad)
call
dec
dec
fist
fsubr
and
out
add
stos
mov
popa
cmp
js
pushf
test
test
jg
sbb
pop
dec
push
int3
sar
jge
jecxz
xor
mov
in
mov
inc
pop
mov
pop
xchg
jmp
inc
xchg
adc
scas
xchg
sub
xlat
dec
ins
fsub
fwait
leave
and
cmp
jae
ins
cmps
retf
ret
daa
xchg
xchg
packuswb
sub
jmp
fistp
out
loope
pop
(bad)
or
mov
fimul
out
(bad)
out
repz
cmp
jle
outs
and
xlat
sahf
and
sub
rcr
inc
leave
jle
jo
retf
js
cmp
adc
jno
inc
sub
xchg
adc
je
in
(bad)
xchg
and
xor
inc
inc
jl
test
sbb
imul
cmp
inc
(bad)
cmp
in
and
(bad)
xor
fld
jg
fistp
loopne
lods
xor
sbb
dec
push
ret
and
sbb
test
call
pushf
mov
pop
mov
les
jne
lods
mov
jo
pop
jae
shr
lock
add
je
test
mov
shl
aaa
pop
cdq
jecxz
mov
fistp
dec
jmp
xor
cmp
sub
outs
mov
out
ret
or
hlt
imul
gs
and
sub
adc
adc
xchg
fist
cmp
push
cmp
push
mov
(bad)
fild
cld
mov
ror
enter
popf
rcl
sub
mov
call
pop
scas
pusha
test
(bad)
gs
sub
mov
cmp
dec
mov
jmp
adc
sti
ror
mov
add
cmps
pop
push
outs
mov
mov
dec
pusha
mov
lea
aaa
sub
mov
sar
or
retf
push
lahf
push
int
and
fucomip
dec
and
xor
mov
pop
adc
sti
jecxz
ss
cmc
adc
mov
neg
xchg
and
mov
pop
sahf
ins
inc
ret
mov
cmp
adc
pop
add
mov
retf
movs
inc
aas
cmc
pop
paddsb
popf
(bad)
mov
push
mov
mov
fldenv
jge
xlat
popf
and
add
(bad)
loop
(bad)
or
cwde
aas
test
sbb
shl
shr
mov
dec
or
xor
enter
test
lds
sbb
and
clc
lds
(bad)
fst
xlat
es
ret
cdq
and
pusha
or
adc
add
pop
add
pop
xor
mov
jg
rcl
dec
add
jmp
es
bound
in
mov
xchg
or
fsubr
fstp
push
shl
ror
repz
loope
movs
movs
push
xchg
push
mov
sub
in
fld
test
(bad)
cli
pushf
push
lods
arpl
add
or
popa
push
dec
test
xchg
or
ret
mov
daa
and
ds
fwait
and
(bad)
lods
xchg
ins
mov
jns
fist
xchg
arpl
add
cmp
stos
xchg
je
or
pop
and
push
adc
pop
stos
ret
or
mov
lods
bound
mov
fadd
xchg
cmps
mov
mov
mov
lock
pop
push
inc
aad
mov
scas
sub
outs
adc
inc
and
or
and
aaa
test
sti
movs
mov
dec
xchg
mov
mov
addr16
mov
test
cmp
xor
adc
rol
mov
xor
mov
jecxz
cmp
mov
or
cmp
mov
dec
or
sti
add
scas
mov
and
jg
aas
call
cmc
test
lds
lods
jmp
out
mov
inc
mov
(bad)
xchg
dec
hlt
pop
sbb
retf
repz
ss
data16
cmp
adc
dec
push
mov
dec
(bad)
push
xor
fsub
ja
ins
test
mov
inc
or
mov
xchg
hlt
ror
xrelease
ds
sti
inc
push
xchg
mov
(bad)
jno
jb
loop
inc
cmp
addr16
push
movs
lahf
mov
cmp
inc
xor
cmp
mov
sub
lea
xchg
daa
and
clc
not
and
add
xchg
mov
mov
pop
iret
xchg
fdiv
xchg
or
pop
and
addr16
xor
pop
adc
repz
mov
cmp
sbb
pop
inc
sub
fwait
xor
lock
test
outs
sbb
cmovs
inc
inc
inc
loopne
dec
sbb
mov
in
push
pop
mov
arpl
lea
fisubr
lea
scas
repz
inc
lods
stos
inc
gs
into
and
int
call
cli
loop
addr16
ret
imul
ja
dec
scas
outs
adc
retf
fsub
imul
pop
addr16
loop
bswap
retf
outs
imul
add
cmp
xchg
loop
ss
shl
dec
adc
xchg
call
and
add
push
cmp
adc
(bad)
add
mov
push
movs
mov
xchg
xchg
dec
mov
pusha
test
mov
xor
clc
icebp
and
pop
push
enter
(bad)
or
inc
(bad)
pop
mov
test
les
or
retf
push
neg
dec
and
pop
cmp
push
movs
push
add
xor
sar
push
jne
imul
cmp
fsub
push
inc
inc
dec
add
dec
icebp
inc
sub
add
movs
pop
dec
ds
loop
add
inc
mov
xchg
pop
inc
jne
ja
inc
pushf
or
inc
std
jg
or
popa
pop
mov
loope
out
push
into
nop
xor
fs
mov
xor
fisubr
mov
ret
xor
and
mov
shl
jns
sub
add
xchg
push
inc
fistp
dec
and
mov
xor
popa
xchg
dec
xchg
sub
xor
hlt
outs
push
mov
stos
mov
(bad)
and
adc
movs
imul
adc
xor
cld
mov
push
cld
add
enter
rcl
jl
add
retf
retf
sbb
mov
mul
fmul
sub
sbb
pop
lods
aaa
cmp
(bad)
pop
and
sahf
call
aam
cmps
clc
add
in
push
ss
jmp
shl
popa
mov
pop
mov
mov
jb
ret
sahf
ret
xor
mov
mov
xor
sub
mov
xlat
or
pop
inc
enter
imul
aad
add
add
push
mov
xor
jle
jg
and
pop
sub
and
hlt
loope
push
mov
dec
pop
cmp
test
pop
mov
or
inc
xchg
jnp
cld
and
enter
jno
into
pusha
cld
jp
sub
jmp
int3
sbb
popa
in
es
cs
clc
hlt
aam
and
mov
repnz
push
and
sti
repz
test
inc
dec
ss
rcr
push
in
xor
neg
push
cli
popa
pushf
(bad)
stos
lds
fdiv
inc
dec
cli
cld
arpl
mov
xchg
cdq
imul
icebp
inc
arpl
sbb
packsswb
adc
pop
or
xor
imul
jb
ins
ret
pop
jno
jmp
outs
push
pop
imul
pop
(bad)
paddw
sbb
add
pop
mov
mov
inc
ss
jne
in
(bad)
push
mov
sbb
shr
inc
call
js
in
test
dec
push
out
lock
sbb
lock
add
sub
or
pop
dec
cmc
cmp
jb
sbb
mov
popw
imul
adc
lea
not
mov
cld
or
sbb
xor
inc
push
hlt
(bad)
mov
test
repnz
jne
adc
xchg
jp
inc
(bad)
cmp
out
popf
xchg
outs
adc
ret
rcr
ja
lahf
push
or
fmul
xchg
add
push
in
pop
inc
add
sub
in
scas
in
mov
or
xchg
fdivr
jmp
push
push
xchg
mov
or
inc
sub
rcl
test
fidiv
pop
mov
push
jo
js
loop
add
adc
fs
mov
push
(bad)
iret
int
gs
and
mov
loopne
mov
push
dec
idiv
and
pop
xcrypt-ecb
dec
mov
fcomp
mov
sbb
test
sub
jno
inc
sbb
mov
pop
mov
cmp
jecxz
sub
mul
mov
rol
sbb
das
and
sahf
shl
sub
inc
or
in
xor
movs
mov
jbe
mov
out
jbe
fwait
sub
cmps
and
pop
fld
mov
sub
mov
pop
mov
mov
cmps
jns
(bad)
pop
(bad)
mov
mov
mov
cmp
jo
push
jmp
and
pop
or
cmp
mov
jnp
outs
(bad)
mov
jo
int3
xchg
jg
jo
enter
push
mov
dec
into
cld
mov
mov
dec
lea
or
leave
movs
sbb
mul
fnstenv
neg
add
and
movs
push
xchg
mov
scas
pop
shr
dec
mov
in
fimul
out
imul
mov
adc
or
aas
dec
cmps
dec
mov
hlt
mov
out
data16
sbb
in
add
jo
fldcw
mov
jle
xchg
shr
adc
in
jb
adc
rcl
push
(bad)
scas
iret
gs
sbb
int3
rol
neg
and
pop
loop
xor
push
sub
fistp
cdq
ja
sahf
mov
cwde
out
sub
mov
or
js
mov
mov
add
cmp
pushf
inc
out
jmp
jmp
aam
cmp
out
add
(bad)
cmc
mov
pop
cmp
(bad)
xchg
sub
call
aaa
icebp
xor
mov
jae
jns
dec
dec
dec
arpl
sub
fcom
lahf
push
push
jno
adc
add
xchg
ins
xchg
sbb
xchg
mov
loop
ret
test
mov
mov
scas
mov
es
mov
cmp
aaa
outs
sbb
call
dec
dec
sbb
jo
imul
dec
push
(bad)
and
xchg
add
aad
xor
aas
fstp
and
lock
mov
sar
icebp
loope
push
movs
cmps
cmps
adc
cmps
fs
fstp
xchg
in
sub
xchg
retf
push
movs
mov
jecxz
dec
ins
add
das
cmps
stos
adc
inc
cmp
out
mov
mov
and
scas
sar
stc
movs
(bad)
mov
lods
pop
(bad)
ror
sbb
test
adc
loope
push
xor
call
sub
hlt
scas
jns
ins
fst
je
(bad)
fcomp
jno
cmp
dec
or
or
test
call
loopne
xor
loop
sar
test
enter
sub
pop
lea
cmp
pop
repnz
imul
mov
rcr
and
retf
and
xchg
ror
xor
repnz
cmp
jecxz
cmp
and
test
movs
mov
ficomp
xor
xchg
ficom
cwde
mov
addr16
mov
imul
inc
add
inc
sahf
cmp
shr
pop
jmp
outs
mov
push
sbb
retf
sbb
sbb
dec
jb
jbe
xchg
pop
arpl
bound
pop
shl
(bad)
cmp
repz
ficom
push
pop
and
jmp
pop
or
push
stos
xchg
scas
jne
sub
ins
mov
jae
pop
pop
xchg
xchg
add
retf
aaa
jb
add
or
stc
adc
dec
and
ja
jecxz
mov
scas
dec
pop
push
fadd
imul
aaa
inc
mov
xchg
js
in
sar
push
icebp
jg
add
outs
push
cmps
inc
xor
pop
sub
xor
icebp
ds
cmp
pop
and
push
jae
or
jmp
stos
mov
aas
mov
xor
jnp
imul
jl
into
in
xchg
lds
add
xchg
push
stos
rol
jbe
imul
pop
xchg
mov
imul
or
cmps
enter
daa
es
jae
(bad)
pusha
xor
mov
out
mov
jns
ror
pop
xchg
ins
test
sub
push
shl
ins
mov
scas
jl
or
mov
je
aas
adc
jno
cvttps2pi
mov
cmp
adc
pop
sbb
add
retf
lods
jmp
test
iret
xor
dec
sti
and
test
and
cwde
lods
stc
adc
jge
das
mov
mov
jnp
mov
stos
add
push
xor
mov
dec
imul
cdq
dec
mov
sbb
inc
std
pop
aam
fs
pusha
fcomp
lock
pop
in
inc
xor
and
das
mov
or
clc
pop
sbb
inc
out
stos
pop
(bad)
mov
es
aas
or
pop
adc
fwait
out
pusha
sti
pop
xchg
push
dec
cdq
aad
loopne
pushf
test
cmps
xor
sahf
push
cmp
std
mov
inc
jmp
ror
call
push
sub
adc
pop
aam
fsubr
cmp
das
adc
data16
gs
jmp
popf
xchg
fbld
pop
lock
fldln2
je
ins
adc
jno
jl
and
cmps
fidiv
enter
xor
ins
shl
js
cdq
mov
mov
xor
pop
dec
call
inc
inc
sahf
pusha
dec
mov
sub
mov
stc
lds
fimul
jmp
jns
push
int3
jbe
pusha
push
push
xor
add
pop
out
in
sub
aad
fwait
lahf
mov
ins
sbb
or
imul
mov
and
rcr
push
pop
mov
rcr
sub
rcl
retf
int
pop
pop
(bad)
cmp
int3
fwait
arpl
mov
test
shl
les
mov
retf
(bad)
cmp
jge
dec
xchg
sub
adc
sbb
xchg
hlt
outs
int
retf
arpl
adc
dec
daa
cdq
pop
add
cmp
sbb
fwait
sahf
gs
push
jmp
mov
sahf
jge
push
cmp
popf
mov
loopne
mov
loopne
pop
cmps
dec
sbb
aad
je
adc
pop
inc
gs
cmp
out
add
xchg
cmp
out
push
xchg
push
jo
in
adc
sub
fsub
cdq
pop
fwait
mov
jbe
stos
fwait
cli
retf
sub
mov
in
retf
sbb
loopne
pushf
mov
mov
jecxz
xchg
scas
(bad)
adc
scas
cmps
sub
lods
cli
and
shl
gs
xor
loope
scas
lahf
call
lea
loope
mov
dec
mov
(bad)
bound
adc
jmp
fst
inc
sbb
jmp
outs
mov
dec
xor
ror
xchg
adc
sbb
stos
out
and
cdq
and
ret
lds
and
push
push
dec
scas
lock
push
or
xchg
lods
lahf
out
test
int
mov
pop
(bad)
mov
div
pop
jl
mov
int
mov
das
sub
jne
mov
aad
and
dec
jno
inc
mov
daa
adc
push
enter
pop
add
pop
sbb
test
push
fbld
and
rcr
pusha
jge
stc
retf
out
js
cld
inc
test
add
aam
mov
pop
jns
push
retf
xchg
rcr
mov
inc
inc
add
xor
push
aad
pop
pusha
jecxz
enter
xchg
mov
sub
inc
lock
push
adc
xor
inc
clc
push
pop
inc
jp
retf
mov
fist
adc
ret
(bad)
mov
outs
push
les
test
ds
add
add
inc
push
jmp
inc
out
pop
enter
push
data16
int
push
mov
out
sbb
mov
ss
sub
xrelease
movs
adc
mov
sbb
pop
mov
or
fiadd
int
mov
out
iret
imul
pop
or
or
pusha
repnz
jae
xchg
outs
sbb
test
mov
pop
mov
mov
fsubr
popf
outs
jmp
stos
enter
loopne
jg
push
or
(bad)
jmp
pop
int
sbb
out
add
inc
cmp
cld
sub
outs
aam
aad
out
cmps
and
sbb
inc
mov
inc
adc
or
jno
clc
jg
jnp
sbb
jge
shr
or
or
fcmovnu
push
aad
mov
mov
lods
into
pop
push
fs
jg
mov
cmp
jl
pop
pop
(bad)
enter
loop
aam
ds
jmp
mov
mov
pop
mov
mov
sbb
fadd
push
retf
ffree
(bad)
rol
push
sub
js
lock
pop
sbb
lods
arpl
adc
js
pop
cmp
out
je
retf
pushf
jbe
ja
jb
out
push
ret
mov
clc
and
adc
mov
mov
jge
ins
dec
and
or
pop
stos
mov
fld
jae
and
cmc
cdq
mov
jae
add
push
fnstcw
mov
sub
mov
xor
mov
cmps
mov
scas
arpl
data16
jo
xchg
sub
mov
dec
inc
imul
(bad)
add
sub
lods
cs
pop
jge
loope
lahf
pop
test
jns
xchg
or
leave
das
test
popa
jmp
cmc
push
mov
xlat
call
(bad)
cmc
mov
std
dec
mov
jle
je
dec
or
cmps
outs
sbb
call
push
fwait
cld
in
and
dec
out
cli
jb
iret
ss
movs
stc
mov
aaa
push
xchg
cmps
shl
jge
inc
and
inc
or
(bad)
ss
inc
push
imul
mov
std
cdq
ret
cmps
pop
jns
push
mov
push
xchg
jb
fimul
sub
push
into
cmp
fidiv
cmp
sub
push
mov
mov
ret
lods
xchg
repz
test
xchg
mov
adc
pop
push
icebp
mov
fld
js
xchg
xchg
(bad)
push
pop
and
ja
repnz
sub
ins
and
(bad)
ss
dec
(bad)
ja
and
sub
mov
rcl
in
add
movnti
shr
cmp
or
cmp
adc
add
dec
es
fsubr
inc
xchg
(bad)
out
add
lods
and
scas
sub
sbb
add
outs
inc
imul
or
je
adc
shr
ss
add
xabort
cmp
cmp
repnz
cmc
inc
cs
loopne
xchg
xor
push
in
fisubr
test
and
sub
cmps
in
mov
sar
add
outs
ja
cmp
dec
and
int
pop
jmp
int
daa
scas
daa
jmp
inc
mov
inc
jne
push
scas
jae
push
daa
call
stc
mov
call
shr
data16
enter
xor
push
mov
pop
pop
stc
and
push
inc
jmp
sbb
shl
ror
inc
(bad)
shr
pop
mov
xor
idiv
dec
add
out
mov
sub
sub
arpl
push
mov
call
or
fnstcw
mov
mov
jle
sub
int3
or
(bad)
ret
loop
call
push
fs
pop
push
xchg
scas
push
or
cld
pop
xchg
pop
mov
cmp
aas
mov
(bad)
jnp
mov
sub
(bad)
data16
stos
test
call
loopne
push
enter
int3
popf
adc
sub
and
retf
mov
sub
cmp
jbe
jecxz
push
scas
cli
adc
fsub
xchg
pop
mov
out
xchg
(bad)
ror
mov
mov
cmc
sbb
jmp
adc
repz
lods
fnsave
mov
iret
mov
dec
mov
add
jmp
and
dec
dec
pop
scas
rol
and
push
scas
mov
cmp
jg
lods
dec
in
mov
push
cmc
push
mov
pop
lea
and
fwait
sub
mov
(bad)
cmps
mov
cli
or
inc
into
ss
out
test
pop
jmp
aam
cmp
movs
aad
adc
rol
movs
jmp
pushf
dec
cmp
in
inc
data16
fimul
mov
or
and
push
scas
mov
ja
or
sub
daa
push
cmp
ret
xor
push
push
shl
fisubr
mov
pop
ja
mov
add
dec
xchg
push
mul
add
or
inc
sub
movs
push
lea
shr
loop
pop
idiv
jb
ins
push
or
mov
mov
pushw
jp
adc
mov
enter
stos
int3
mov
add
mov
sbb
adc
iret
inc
sub
(bad)
jg
add
cmp
dec
imul
scas
mov
push
out
push
cmc
mov
rcl
fsubr
push
mov
xor
jae
pop
lock
aas
push
cwde
enter
mov
les
(bad)
rcr
cmp
test
xlat
stos
arpl
xor
and
jno
(bad)
add
enter
push
cmp
push
or
push
stos
icebp
pusha
lds
push
test
pusha
lahf
out
add
test
ret
cs
scas
sbb
mov
std
and
je
movs
cld
jp
fisubr
in
push
sbb
loop
repnz
cmc
lods
jecxz
fcomi
div
inc
adc
retf
into
sbb
or
mov
outs
xchg
xchg
cmp
lahf
iret
es
dec
push
mov
mov
xchg
jp
repnz
inc
nop
dec
cmps
and
in
mov
in
je
ins
jb
jb
cmps
sub
jmp
test
and
int3
jne
jo
jns
icebp
cmp
test
jmp
in
out
push
xchg
(bad)
xor
xor
call
(bad)
inc
inc
fdivr
sbb
lods
push
mov
loope
push
push
mov
test
test
sub
cld
dec
adc
sub
ret
sti
jmp
push
sti
adc
dec
int3
rcr
ret
loop
jnp
mov
lods
bound
(bad)
push
movs
(bad)
out
dec
sub
or
and
push
jae
mov
arpl
mov
add
inc
dec
xor
ja
lods
and
jns
je
mov
movs
jp
fucomip
mov
lods
fsub
das
sbb
jno
retf
dec
(bad)
xchg
xor
xor
sbb
dec
movs
push
and
das
mov
(bad)
repz
xlat
mov
mov
rcl
push
in
sbb
shr
and
pop
sbb
mov
xor
dec
sahf
jne
leave
xchg
fwait
dec
lea
(bad)
loop
mov
mov
outs
cld
cmc
jae
cmp
push
pop
mov
imul
pop
fiadd
jmp
les
retf
sbb
sub
rcl
out
fidivr
inc
les
das
lods
shl
(bad)
sub
xchg
and
inc
ss
mov
sbb
cdq
add
lock
mov
and
jo
jo
sbb
pop
and
popa
enter
mov
mov
ins
xor
les
jae
aam
push
push
fst
push
(bad)
sbb
sbb
leave
lock
jnp
pop
push
es
jb
lea
jg
adc
shr
mov
jl
push
mov
call
js
ja
loopne
mov
add
xlat
jp
out
push
mov
shl
xor
inc
pusha
xchg
mov
shl
les
cld
pop
ss
adc
(bad)
pop
pop
adc
adc
outs
gs
xlat
xchg
add
mov
rol
xchg
(bad)
cld
and
jge
icebp
lods
jae
add
cmp
call
jg
inc
fdivr
call
dec
jns
xor
iret
ss
gs
aam
adc
enter
cdq
jb
nop
sub
shl
jmp
std
repnz
mov
aam
int3
shl
jle
cwde
repz
sub
xchg
out
shl
jmp
cmp
mov
add
mov
cli
popf
iret
ds
inc
call
js
push
das
jns
sub
out
icebp
outs
mov
jmp
adc
jns
sub
pop
dec
test
mov
xchg
inc
dec
cdq
hlt
(bad)
fwait
push
push
pop
ins
in
stos
pop
or
fimul
inc
in
ins
mov
aad
lahf
ret
lahf
adc
clc
and
pushf
add
lahf
add
retf
pop
jge
sbb
hlt
aam
xchg
pushf
lods
int3
xchg
shr
cmc
xchg
cmp
ins
mov
int3
add
lods
clc
and
sbb
ja
das
aaa
cdq
cdq
xchg
push
or
mov
jnp
add
mov
mov
jg
add
test
lea
dec
mov
cmp
arpl
mov
std
stc
nop
fisub
in
cmps
pop
cs
or
mov
into
mov
mov
movs
push
and
cmps
loopne
jle
or
jp
je
pusha
and
jnp
mov
mov
sub
shr
sub
nop
rcr
outs
push
mov
rcl
sub
call
loop
mov
pusha
jno
jle
push
mov
mov
dec
add
outs
(bad)
sahf
sbb
out
xchg
bnd
ret
repz
dec
push
call
jnp
(bad)
pop
fld
stos
fcomp
fisttp
pop
push
shl
cmps
inc
rol
and
push
daa
hlt
icebp
adc
jns
arpl
js
popa
or
nop
std
or
xor
ins
stos
mov
xor
popf
aas
movs
mov
xor
lods
jmp
mov
sbb
fisub
mov
clc
dec
hlt
pop
fwait
or
repnz
and
rol
mov
jae
jb
and
sbb
lmsw
repz
stos
cmp
pop
js
mov
addr16
inc
loopne
fsubr
add
stos
inc
mov
test
scas
dec
ret
jno
fcom
js
sti
xchg
inc
xchg
jl
enter
sub
cmps
nop
retf
movs
adc
pop
xchg
or
add
or
shl
adc
js
mov
mov
mov
out
push
add
movs
dec
bound
mov
fld
jp
scas
div
ins
ja
retf
imul
cmp
xor
pop
retf
mov
xchg
loop
lds
pop
sar
stos
cs
aas
mov
gs
and
mov
stos
xor
sub
adc
pop
cmp
fbld
xor
dec
jbe
push
xor
push
and
retf
cmp
lods
and
stos
xchg
sti
fsubr
rol
dec
clc
xchg
iret
iret
outs
cmp
inc
stc
das
mov
dec
call
shl
jno
add
mov
adc
fld
dec
jecxz
aam
xchg
mov
(bad)
out
pop
adc
lods
xlat
mov
sahf
sbb
mov
sbb
pop
mov
jle
cmps
push
dec
ret
pop
mov
mov
test
inc
scas
xor
rcl
aaa
ins
cmp
fsubp
ret
out
and
mov
ror
pop
enter
mov
xchg
call
rol
jnp
lds
retf
dec
pop
test
jno
adc
adc
repnz
push
int
xchg
test
lock
mov
dec
xchg
aad
cwde
xor
repnz
leave
imul
push
push
adc
and
push
fs
cmps
push
mul
mov
(bad)
sahf
ins
adc
sbb
mov
add
push
sub
push
dec
add
inc
mov
ja
add
call
fsub
xor
sbb
push
sub
(bad)
sbb
shl
inc
cdq
pop
enter
call
outs
dec
xor
fidivr
xchg
mov
xchg
inc
xchg
fadd
pop
imul
out
xor
mov
ret
(bad)
cmp
stos
clc
sbb
push
in
cmp
rol
push
push
pop
call
dec
dec
sbb
ins
outs
push
loope
add
stos
retf
sar
lds
lock
bound
out
jl
lods
(bad)
movs
(bad)
aad
jmp
or
(bad)
gs
inc
sub
jne
ja
or
mov
stos
xchg
shr
dec
test
sub
enter
(bad)
out
sub
les
mov
cmp
xchg
inc
add
sbb
rcl
cmps
fcom
mov
mov
xor
ss
dec
jecxz
xor
into
mov
pop
inc
lods
(bad)
popa
cmp
sbb
jmp
jb
cwde
cs
mov
outs
das
cmp
(bad)
xor
or
scas
dec
or
mov
add
sub
popa
mov
jbe
push
mov
mov
shl
dec
or
outs
aam
sub
cmps
push
jecxz
inc
pop
sbb
push
ins
cmps
sub
pop
add
push
xor
loop
adc
mov
daa
icebp
sub
xchg
mov
pop
xchg
out
imul
fisttp
dec
jb
jno
lahf
pop
fisttp
xor
push
ins
mov
xchg
cmc
jns
jp
ret
popa
inc
mov
es
data16
inc
xchg
mov
rcl
fld
pop
jle
jae
lahf
adc
inc
sbb
inc
push
scas
add
test
cld
push
shl
(bad)
mov
js
jl
push
inc
(bad)
daa
jmp
nop
jnp
xor
pop
pop
stos
dec
rcl
xchg
cmp
mov
sbb
push
mov
push
xor
hlt
popa
gs
clc
imul
pop
sub
ds
std
jp
pop
xchg
lods
leave
nop
je
outs
call
add
jb
sub
les
pusha
add
pop
jne
xchg
jle
shrd
mov
fadd
mov
pop
cmp
inc
lock
jns
les
inc
xor
and
das
mov
icebp
jnp
cmps
pop
jae
aam
and
ins
mov
enter
imul
in
sub
pop
xor
mov
bnd
xchg
or
xor
pop
aas
imul
inc
popa
mov
into
(bad)
pop
mov
aad
cmps
inc
sar
addr16
iret
push
and
push
mov
test
jge
xchg
jno
ins
nop
inc
test
cmp
inc
lods
imul
rol
call
inc
and
out
jmp
loope
push
(bad)
(bad)
pop
out
(bad)
stc
push
xor
mov
fadd
and
cmp
sub
cmp
and
mov
pop
retf
add
and
sbb
(bad)
aad
fimul
push
push
xchg
lfs
leave
rcr
cmp
cmp
leave
cld
pop
pop
aaa
iret
loop
shl
adc
lea
dec
dec
cmp
pop
fiadd
imul
push
cmps
ret
cmps
or
pop
fistp
xchg
inc
pop
cmp
into
loop
or
lods
push
push
cmp
xor
push
or
jmp
in
out
pop
inc
shl
pop
cmp
jbe
cs
pop
imul
mov
inc
jp
jne
out
outs
std
(bad)
sbb
and
jmp
cmps
ror
adc
cmp
fdiv
(bad)
nop
or
dec
dec
ficomp
adc
mov
inc
pop
lods
into
clc
lahf
xchg
outs
inc
pop
xchg
mov
mov
fidiv
sub
inc
push
cmps
mov
syscall
jl
gs
xchg
test
or
sbb
repz
xor
pop
cli
xlat
fcomip
cmc
pop
fisubr
ins
dec
inc
push
mov
shl
in
cmp
pop
daa
rcl
or
sub
bound
adc
xlat
sub
cmp
iret
jb
or
push
cmp
pop
fistp
es
daa
push
add
(bad)
xor
out
add
popf
and
test
mov
mov
or
add
push
mov
xor
ss
outs
in
push
lock
rep
hlt
add
pushf
sahf
cmp
ret
inc
mov
add
fldcw
fnstsw
cmps
fisttp
aam
add
push
mov
cmp
mov
adc
into
es
xchg
cmp
mov
out
dec
(bad)
call
ret
dec
sub
pop
icebp
jecxz
(bad)
leave
jg
sub
popa
pushf
test
ret
ins
ja
add
inc
mov
add
test
push
ins
out
add
pop
cmp
xchg
loop
or
and
(bad)
mov
popf
call
rcl
push
data16
xor
rcr
rol
xor
xchg
mov
sub
mov
rcr
stos
xchg
add
add
mov
test
test
(bad)
movs
pop
fwait
scas
inc
cmp
es
mov
mov
xchg
scas
dec
adc
xchg
stc
mov
fld
cmps
pushf
push
mov
shr
enter
ja
bound
frndint
int
push
and
adc
pop
stos
inc
daa
mov
sub
adc
and
imul
or
jecxz
cld
dec
shl
ss
popf
mov
stc
icebp
or
js
aas
jns
mov
xor
ja
int3
push
jno
push
push
popa
or
jge
inc
aam
sbb
adc
iret
icebp
pop
adc
inc
xchg
add
shl
jle
push
lahf
push
mov
inc
inc
ins
lahf
test
push
cmp
push
jb
mov
lea
js
fld
mov
sbb
std
pop
inc
sub
xchg
add
cmps
adc
out
stc
fmul
int
and
dec
imul
test
and
sub
xchg
aas
test
push
sar
mov
test
aam
sbb
jl
adc
sbb
retf
sahf
loopne
adc
jmp
dec
(bad)
bound
pop
jl
out
imul
lods
sub
test
sub
loope
push
and
push
mov
aad
pop
jae
out
cmp
std
lldt
fisub
pusha
mov
fbstp
imul
push
jge
in
pop
push
popf
dec
dec
jae
dec
and
es
ror
outs
push
and
hlt
inc
sub
xchg
sub
mov
fldenv
pop
call
fstp
push
mov
and
jle
cmp
push
jbe
jecxz
jno
(bad)
ja
jmp
jo
out
popf
add
stos
jp
pop
xor
inc
push
adc
pushf
in
addr16
aam
mov
and
cwde
out
jle
pop
loopne
push
int3
repnz
(bad)
jge
pop
hlt
mov
fidiv
xor
pop
or
jge
pop
mov
mov
mov
mov
and
popf
inc
jle
rcr
mov
jae
mov
dec
mov
imul
scas
sar
xchg
sbb
jmp
gs
pop
add
push
dec
sbb
sub
shl
cmp
cdq
gs
mov
jmp
(bad)
mov
ret
mov
sbb
cli
fs
add
retf
mov
dec
dec
(bad)
adc
push
push
addr16
test
adc
sub
pop
mov
test
outs
sti
inc
fsub
call
cwde
inc
mov
fdiv
cmps
sub
push
clc
rcl
adc
ins
sar
in
out
or
out
out
xchg
outs
push
movs
js
lods
xchg
mov
pop
lahf
push
sub
nop
cld
adc
jns
fist
mov
cmp
cwde
inc
popa
pop
out
data16
sar
push
dec
sti
cmp
hlt
push
repz
neg
cld
add
stos
popf
inc
mul
adc
nop
outs
sbb
out
mov
pop
add
stos
sub
movs
sub
push
rol
xchg
leave
enter
jmp
and
ds
sub
data16
shr
(bad)
arpl
push
ja
call
pop
cmp
mov
aad
xor
stos
push
stos
movs
inc
mov
cld
and
in
mov
xchg
jle
rep
adc
pusha
aad
inc
test
mov
outs
ins
ja
sbb
ins
xor
or
add
adc
les
add
push
adc
pop
ss
mov
stc
add
stos
cmps
xor
nop
adc
mov
mov
push
fsub
lahf
call
les
pop
push
lods
pushf
fs
lock
or
inc
push
xchg
cmps
sbb
xchg
scas
retf
mov
leave
lods
(bad)
xor
mov
test
and
inc
xchg
dec
or
das
movs
sub
lock
(bad)
mov
call
sub
ror
aaa
(bad)
adc
xlat
hlt
mov
pop
stc
jo
xchg
mov
bound
mov
repz
pop
psraw
pause
repnz
ss
dec
mov
jle
or
ds
ds
cmp
mov
dec
mov
jbe
cmps
nop
sahf
fisttp
outs
mov
xor
adc
cmc
out
test
sbb
or
jg
adc
in
movs
push
aam
cmp
std
aam
jg
inc
mov
adc
cwde
retf
jmp
adc
(bad)
(bad)
mov
daa
add
push
scas
jo
mov
sub
push
xor
fsub
mov
test
scas
mov
std
jmp
mov
(bad)
cli
daa
mov
test
fcmovbe
ror
push
into
xchg
pop
sub
add
and
and
jecxz
pop
and
pop
pusha
xor
add
jp
jne
movs
jmp
test
xor
sbb
push
adc
pusha
pop
lods
mov
js
jns
sbb
test
mov
sbb
jne
push
pop
mov
xchg
pop
rcl
jmp
stc
gs
sub
xchg
retf
enter
loope
movs
jmp
sbb
xchg
movs
push
stos
pop
sub
movs
scas
add
xchg
out
mov
hlt
loop
push
stos
enter
dec
inc
fmul
sub
lods
cli
das
call
sahf
inc
xchg
and
ins
xchg
loopne
jbe
dec
add
stc
ss
xchg
sbb
ins
dec
repz
je
loope
jae
push
mov
sbb
popa
(bad)
pusha
bound
shr
(bad)
outs
test
repnz
fst
ins
adc
jbe
and
into
sub
pop
add
lds
sbb
mov
dec
loopne
cwde
jb
mov
jge
call
add
aam
cmp
aas
dec
std
fs
pushf
pop
dec
push
xchg
jge
lods
fisubr
push
pop
sub
push
dec
mov
cmc
cli
ds
push
inc
or
sub
cld
fldenv
cli
mov
and
cwde
cmp
jp
push
(bad)
and
popa
jmp
dec
sub
das
es
in
jae
dec
xchg
dec
in
cmp
ds
xor
inc
or
push
arpl
dec
adc
and
push
mov
ja
cmove
add
pop
cs
mov
mov
adc
imul
cmp
sbb
in
retfw
or
std
hlt
cmp
xlat
push
push
or
pushf
push
xchg
adc
and
ins
test
dec
sub
mov
test
mov
daa
xchg
push
sub
pop
aaa
(bad)
xchg
jecxz
ds
inc
les
push
icebp
out
outs
dec
fisttp
(bad)
pop
jno
dec
xchg
sub
push
iret
movs
adc
icebp
mov
outs
sbb
push
jmp
cmp
jmp
xor
adc
out
pop
out
mov
push
dec
shr
(bad)
cdq
add
loope
inc
inc
mov
jp
or
adc
and
xchg
imul
push
jnp
fwait
ins
call
mov
movs
push
scas
or
mov
test
retf
jns
xchg
jle
push
dec
loop
dec
call
jno
adc
inc
aas
jl
scas
push
pop
jle
out
(bad)
test
repnz
xchg
loopne
js
inc
xchg
jae
sahf
(bad)
fisttp
popf
xchg
dec
(bad)
mov
push
in
rcr
push
push
shl
imul
dec
test
int
fnstsw
sub
sbb
cmps
nop
push
adc
sar
xchg
in
mov
pop
test
sbb
xchg
fisubr
xchg
mov
mov
mov
shr
or
into
movs
xchg
jle
int3
adc
test
les
sahf
or
ins
add
sahf
sbb
jne
jmp
cmc
mov
test
cdq
in
adc
lea
addr16
inc
xlat
test
push
push
add
sub
pop
cli
cmps
push
xchg
inc
dec
sub
outs
jle
mov
stos
jge
mov
sub
imul
sub
cld
mov
es
and
adc
inc
push
scas
cmp
adc
inc
mov
inc
outs
dec
jns
pop
scas
ret
or
loope
sub
push
cmp
popf
daa
add
push
sti
sbb
hlt
dec
(bad)
pop
or
xchg
data16
pop
add
jmp
inc
or
sub
jbe
into
pusha
jge
or
stc
and
and
lahf
ja
mov
pop
sub
or
pop
mov
pusha
je
pop
enter
popa
outs
stos
xor
xchg
mov
inc
pop
jp
ds
mov
into
lods
fs
and
sbb
enter
mov
mov
frstor
je
inc
sti
mov
mov
mov
movs
adc
sub
test
jge
push
pop
fild
xchg
in
call
xor
xor
das
(bad)
loopne
movs
jb
(bad)
daa
les
lahf
(bad)
xor
(bad)
mov
cmp
arpl
sbb
sub
add
out
loope
test
push
cmp
cmps
in
mov
pop
fucomi
js
cmp
call
push
mov
push
(bad)
std
ficomp
jg
xor
sahf
push
in
adc
pushf
fwait
cmp
xor
add
mov
movs
pusha
gs
ret
sbb
or
xchg
out
xor
pushf
push
jbe
sbb
ins
repnz
adc
mov
push
xchg
les
push
adc
jo
add
(bad)
xor
fisttp
dec
push
push
in
nop
repz
mov
dec
lahf
xor
xor
(bad)
sahf
fwait
or
mov
dec
into
mov
xlat
sbb
mov
mov
bound
scas
clc
mov
int
out
ds
mov
fsub
loop
call
cmp
leave
and
add
inc
mov
pop
push
push
sub
in
sub
lea
jb
rol
sub
inc
push
jmp
ins
jmp
into
ud1
outs
mov
dec
and
push
push
mov
sbb
push
aas
scas
xor
push
jbe
call
cmp
les
fistp
bound
bound
jge
and
xchg
mov
inc
mov
aas
add
sub
fwait
enter
add
(bad)
cdq
pop
add
cld
xchg
stos
mov
push
push
mov
sub
mov
sub
stos
sbb
les
test
jmp
xor
ficomp
inc
add
jecxz
push
jge
jge
inc
xchg
arpl
ror
inc
and
int3
pop
mov
adc
imul
clc
cmps
cmp
add
pop
out
popa
int3
mov
sbb
xor
ins
jl
fist
imul
mov
fild
in
push
movs
dec
push
mov
movs
pop
fwait
sbb
or
xchg
leave
push
xchg
mov
mov
mov
push
fsubrp
jne
sub
sub
sbb
cmp
mov
jle
stos
cmp
cmp
pop
ins
repz
sub
dec
cwde
mov
outs
imul
rcl
pop
(bad)
or
ss
ins
in
xor
loope
pusha
arpl
sbb
mov
push
xor
test
sub
repnz
cwde
push
dec
cmps
xchg
stos
into
mov
mov
retf
sti
add
push
call
aas
cld
mov
lods
push
fdiv
push
nop
ret
(bad)
ficomp
inc
int3
inc
jg
aaa
jge
push
shl
rcl
lock
mov
cdq
(bad)
aas
cmps
push
es
push
cmc
out
cli
call
xchg
out
jbe
xor
xchg
fsub
loopne
rcl
push
xchg
or
jge
data16
nop
cmp
add
or
fcom
hlt
mov
mov
sbb
jne
xchg
stos
int3
mov
and
fadd
sub
arpl
cmp
xchg
xchg
out
ins
shr
adc
dec
cmp
rcl
cmp
aaa
mov
mov
ds
mov
lods
lods
test
add
and
pavgb
jno
jg
lea
ret
outs
fstp
call
pop
pminsw
push
mov
pop
dec
gs
icebp
xlat
rol
test
dec
xchg
sub
and
pop
out
add
xchg
pop
inc
xlat
aas
data16
mov
aam
lods
stos
or
jge
mov
jecxz
mov
lods
ss
hlt
mov
or
movs
pop
mov
jbe
aam
mov
sahf
jle
push
dec
ret
sub
lods
mov
adc
add
jo
xchg
xor
push
ss
push
mov
or
(bad)
xchg
into
shl
jmp
add
pop
sub
repz
stos
inc
cmp
adc
in
mov
(bad)
pop
rol
add
fwait
rcr
cmp
fnsave
out
repz
frstor
enter
iret
mov
pushf
and
mov
ins
xor
jmp
addr16
sbb
sbb
dec
pop
pop
fisttp
xlat
and
cmps
xor
(bad)
and
stc
in
stos
(bad)
xor
sub
fwait
movs
sahf
xchg
mov
retf
pop
loopne
aam
pop
nop
(bad)
push
test
xor
stc
fst
sub
cmp
arpl
push
lods
lock
sbb
pop
mov
xchg
hlt
dec
fldpi
jno
test
lds
xor
aaa
or
push
iret
inc
daa
stos
pop
push
sti
push
mov
mov
xor
adc
movs
aad
jbe
inc
dec
mov
lods
pop
leave
sahf
je
mov
aaa
ins
dec
or
inc
addr16
cmps
mov
and
or
rep
cld
mov
sub
fstp
cwde
nop
inc
push
std
scas
loop
add
repnz
das
dec
imul
cmps
pop
mov
and
not
xor
xchg
out
jge
and
(bad)
push
stos
jecxz
sub
jmp
cdq
iret
mov
aam
push
fcmovb
pop
in
and
inc
fild
cmp
sbb
jecxz
in
cmps
mov
push
nop
addr16
push
sbb
dec
inc
jno
inc
cmps
xor
(bad)
push
lods
loop
lea
in
dec
xlat
iret
ret
iret
aaa
test
jnp
loope
sub
lds
push
cmp
or
inc
push
repnz
(bad)
dec
les
lea
into
xchg
xor
add
bound
add
jmp
xor
sbb
cmp
daa
dec
repz
cmp
sub
jp
fist
mov
jns
sub
inc
out
push
jl
test
mov
aas
loop
sbb
scas
sti
cmp
lods
hlt
xchg
mov
add
xchg
sbb
jne
retf
cmp
(bad)
(bad)
cmp
cmps
dec
pop
lods
lahf
scas
fisubr
les
das
mov
je
cmps
in
push
(bad)
sub
jns
stos
inc
dec
push
xchg
xor
fcmovnbe
xchg
and
or
retf
mov
cmp
jecxz
dec
(bad)
and
mov
sbb
jns
mov
cmp
mov
pop
je
sub
xor
adc
fwait
stos
inc
and
add
retf
or
inc
mov
imul
xchg
ins
adc
fs
mov
jl
xor
movs
cmp
jp
xchg
pop
(bad)
shl
inc
jmp
fs
add
dec
fxsave
xor
sbb
adc
sub
push
jno
fidivr
ror
mov
adc
push
mov
ret
pop
popf
adc
mov
add
mov
dec
inc
push
ja
cli
sub
(bad)
lods
and
jl
push
xlat
jp
pop
cwde
iret
mov
pop
cmp
scas
and
and
jle
aas
jmp
int
inc
sbb
jne
push
ss
dec
inc
or
adc
xor
jne
inc
pop
jmp
in
fdivr
ret
hlt
in
pop
mov
neg
fnstenv
retf
jae
xor
sub
fs
mov
xchg
sub
in
pop
lock
jg
test
mov
pusha
mov
xchg
out
loope
leave
icebp
push
icebp
dec
push
cmp
sub
and
call
movs
mov
cmp
inc
in
and
xor
dec
sti
xlat
loopne
aas
call
push
push
icebp
hlt
push
fldenv
(bad)
stc
outs
pop
lds
(bad)
jbe
xor
mov
push
cmc
and
(bad)
mov
cdq
mov
mov
jbe
mov
(bad)
not
mov
inc
cdq
fs
cmp
pushf
outs
add
inc
push
call
or
cdq
aam
push
stc
push
mov
mov
xchg
sbb
adc
jo
xor
rol
adc
mov
mov
ins
jecxz
(bad)
mov
sti
pop
xor
add
sub
mov
ins
add
mov
push
mov
xor
inc
push
mov
dec
std
lock
sbb
jp
xlat
add
fs
in
xchg
and
pop
mov
imul
fistp
out
pop
stc
outs
or
movs
sub
outs
std
mov
ins
jle
xlat
push
ins
or
push
loop
adc
jae
cld
imul
jnp
push
adc
sbb
pop
loope
(bad)
dec
das
xor
sti
inc
push
adc
adc
push
dec
cdq
enter
call
ins
mov
dec
dec
leave
xlat
and
xlat
cdq
idiv
push
pop
ja
rol
mov
mov
cmps
pop
aam
cwde
pop
out
popf
or
lds
xchg
test
pop
mov
in
push
ins
and
outs
loope
push
mov
aam
mul
aaa
je
scas
sbb
addr16
mov
mov
call
adc
test
mov
paddsb
dec
in
mov
fidiv
or
data16
fimul
hlt
push
stc
and
add
rcl
mov
std
and
mov
cmc
inc
fcomp
clc
sahf
pop
fidivr
sub
imul
jb
dec
add
inc
mul
inc
jmp
outs
(bad)
xchg
jle
mov
sub
jnp
retf
xor
cmp
nop
clc
and
gs
scas
fidivr
ss
je
mov
je
xchg
setle
fist
arpl
pop
jmp
idiv
or
jns
add
mov
mov
cdq
mov
sub
and
arpl
fild
sbb
push
test
sub
add
add
outs
mov
adc
iret
adc
int3
inc
cmp
or
mov
pop
add
sahf
mov
movs
jmp
call
inc
dec
xchg
in
shl
push
and
arpl
or
xor
mov
icebp
sbb
xchg
imul
aaa
aas
cdq
pop
dec
push
add
sar
xchg
movs
add
push
jbe
in
xor
stos
push
lds
sub
retf
inc
cmp
clc
and
push
scas
push
stos
repnz
pop
mov
into
in
in
sar
add
scas
cmp
xchg
jae
data16
pop
mov
popa
std
jno
jnp
add
pop
test
mov
xchg
popf
mov
rcl
or
(bad)
or
cmc
push
fadd
push
pop
and
aam
jle
cmc
dec
idiv
pop
dec
push
rol
pop
pop
ror
dec
and
dec
pop
jle
fst
mov
xor
fist
push
mov
int
mov
add
mov
push
arpl
cli
inc
int3
dec
(bad)
call
mov
push
push
jnp
ror
and
nop
les
inc
push
shl
push
es
jno
mov
movs
pop
cld
jns
outs
and
iret
mov
jne
dec
ins
xchg
into
cld
adc
or
pop
push
es
imul
std
movs
rol
sub
xchg
int
xchg
aam
mov
and
aas
test
inc
repz
cs
aaa
mov
data16
jp
xchg
add
lods
idiv
fisttp
iret
mov
mov
in
push
mov
pop
xchg
movs
pop
add
push
adc
shl
or
cwde
sub
sub
aas
cmps
pop
sbb
rcl
fisub
cs
fnstcw
add
jb
and
push
fbld
outs
ss
sbb
adc
mov
enter
rcr
sbb
cdq
lods
dec
mov
addr16
dec
mov
pop
loopne
ins
aam
fistp
jecxz
mov
add
repz
sbb
ss
call
mov
mov
daa
mov
pop
outs
jb
dec
call
inc
std
xor
sahf
mov
cmps
cmp
dec
shl
mov
dec
pop
push
or
sub
(bad)
aam
outs
add
mov
push
push
sub
out
or
lds
inc
lods
mov
pusha
das
imul
mov
sar
adc
fcomp
jmp
out
and
cmp
jmp
mov
addr16
clc
inc
std
loopne
mov
dec
fisubr
pushf
clc
xchg
pop
inc
sub
push
jmp
inc
daa
and
shr
imul
stos
arpl
mov
jp
jp
icebp
and
es
rcr
push
js
cs
inc
in
sub
in
jne
push
add
mov
shl
jae
mov
cwde
cmc
push
push
(bad)
retf
xchg
xchg
aad
pop
cmp
adc
pop
sub
add
mov
repnz
inc
call
fistp
inc
pop
js
xor
xchg
push
pop
add
xchg
(bad)
repnz
gs
fsub
push
aam
xchg
cmp
sahf
clc
cmps
(bad)
mov
xchg
scas
ret
sbb
loopne
add
add
arpl
push
jge
nop
repnz
jecxz
mov
mov
fwait
ins
push
cs
test
pop
sub
fldcw
mul
mov
mov
jg
sti
int
enter
push
pushf
js
in
sbb
fs
fbstp
les
imul
adc
push
call
popa
cmp
lods
inc
jbe
aaa
inc
jmp
addr16
inc
xchg
xor
ins
iret
pop
mov
repnz
mov
fwait
shr
jbe
mov
jb
in
dec
or
repz
xchg
and
ja
jns
jo
sti
and
jl
fs
movs
aas
pop
mov
cs
lods
mov
iret
cdq
mov
mov
pop
repnz
mov
ins
scas
mov
pop
add
leave
ror
xor
and
mov
aam
in
jmp
inc
cmp
sub
jae
std
fstp
mov
jle
mov
lods
pop
loopne
retf
int
ret
adc
int
int3
sbb
cmp
call
scas
sahf
out
rcl
xchg
popa
xor
test
es
lds
jo
in
mov
add
mov
ja
or
stc
sbb
popf
jge
fcmovbe
js
xchg
pusha
enter
rcr
pushf
retf
jmp
iret
out
inc
aas
mov
xchg
push
aad
add
sub
in
call
lea
add
xor
sub
xor
mov
ja
pop
outs
sbb
int3
push
out
les
mov
mov
jo
xchg
push
jl
loopne
sbb
(bad)
rcr
cmps
push
sub
mov
ret
fld
hlt
sub
sar
stos
lahf
cmp
sti
adc
xchg
push
jb
adc
add
nop
(bad)
(bad)
into
jmp
lds
cmp
fld
sub
adc
inc
dec
jl
daa
and
shl
mov
mov
out
nop
pushf
and
mov
and
pushf
nop
iret
iret
mov
arpl
pop
scas
lods
sti
or
mov
cmp
das
jo
rcl
out
sub
xchg
(bad)
mov
cmp
inc
pop
xchg
xchg
or
std
mov
inc
ror
sub
rol
sub
xor
or
std
inc
faddp
xor
stos
out
xor
in
cdq
jmp
sbb
push
repnz
mov
dec
aaa
mov
xor
cs
ret
mov
sub
mov
mov
popf
inc
dec
add
aam
in
pop
jl
dec
jo
mov
jmp
inc
leave
neg
adc
ins
bound
mov
add
mov
repnz
mov
leave
outs
sahf
ins
aad
and
add
xchg
pop
mov
pushf
das
adc
sbb
test
and
mov
sub
cwde
or
xor
jp
jno
out
push
ins
jecxz
xchg
or
pop
add
lds
xchg
(bad)
add
(bad)
outs
je
mov
sti
shl
lods
pop
push
xchg
sub
scas
call
loope
adc
cmps
mov
loope
jo
fidivr
(bad)
fidiv
xchg
mov
mov
mov
xor
mov
(bad)
aam
sub
lods
pop
es
sti
dec
movs
push
mov
scas
sub
or
dec
xchg
jmp
cmp
pop
stc
shl
aaa
call
mov
jo
mov
xchg
cmp
call
fcmovne
inc
add
xlat
mov
pop
jge
jnp
mov
pop
pushf
ffree
mov
add
lds
dec
push
inc
mov
int3
cs
aad
fisubr
mov
xor
fcom
adc
pop
pop
mov
ins
ror
push
push
and
or
popa
or
repz
or
rcr
adc
repnz
div
leave
lahf
jp
sub
iret
add
mov
ret
out
fsubr
push
aam
sub
dec
pop
add
or
cmc
and
push
ror
in
mov
mov
mov
push
sahf
mov
loope
mov
add
sub
pushf
(bad)
daa
mov
xor
xchg
xor
dec
jns
scas
jae
cmp
arpl
arpl
in
jno
bswap
sbb
jnp
call
jecxz
movs
clc
xor
pop
pushf
push
push
cmps
adc
ins
cmp
(bad)
fwait
cli
adc
retf
pop
pop
sub
and
in
ins
movs
pop
xchg
popa
fidivr
adc
hlt
ret
jnp
mov
and
pop
xor
mov
mov
shl
(bad)
dec
imul
xor
dec
xchg
jle
rcr
out
call
popf
dec
jne
xor
(bad)
enter
repz
xchg
adc
lea
push
js
(bad)
pop
pop
shr
ins
cmp
es
aam
cs
ins
fnsave
fs
cmp
imul
xchg
xchg
ins
mov
fbld
dec
retf
inc
push
(bad)
test
cmps
push
rol
or
mov
pop
or
push
pop
pop
mov
es
adc
ds
inc
adc
movs
jmp
pop
cmp
cmc
push
mov
adc
scas
imul
inc
xor
jne
xlat
adc
ja
outs
pop
mov
pop
aaa
cmp
mov
dec
fs
out
shl
ins
shl
hlt
outs
inc
or
sbb
jae
jl
push
dec
in
je
fwait
(bad)
sbb
and
xchg
add
adc
into
test
mov
jp
arpl
push
into
mov
dec
mov
jmp
aad
jp
cmps
push
push
inc
hlt
xchg
leave
out
int
cmp
test
repz
cld
pop
aad
mov
test
xor
xchg
or
mov
push
adc
ds
cmp
inc
xlat
aas
pop
fdiv
jmp
sbb
mov
ins
(bad)
(bad)
mov
push
hlt
addr16
jl
inc
add
pop
xchg
xchg
sub
test
ins
cmps
dec
mov
pop
ret
dec
les
push
int
stos
inc
cli
xor
and
xchg
ins
xchg
pop
nop
repnz
test
lock
adc
cmp
sbb
xor
lds
in
mov
pop
inc
cmc
mov
dec
fld
inc
rol
add
pop
stos
add
ja
into
mov
loop
xor
mov
ret
fist
ficomp
or
dec
cli
fs
mov
lds
rcl
mov
inc
cwde
in
push
mov
push
les
lock
aad
loop
stos
ret
jmp
mov
aaa
xor
fist
mov
push
leave
hlt
and
scas
dec
ins
mov
pusha
pop
mov
sbb
or
xchg
adc
push
add
arpl
les
push
pop
dec
pop
jne
lock
or
retf
or
and
mov
not
lahf
or
(bad)
fst
cmp
pop
pop
xor
sbb
mov
mov
nop
mov
jbe
mov
mov
jb
(bad)
idiv
aad
push
jns
lock
sbb
mov
pop
or
ficom
push
xchg
or
and
leave
movs
test
cmps
call
jns
mov
sub
jmp
and
pop
hlt
sbb
jmp
dec
int3
scas
nop
xchg
xor
jmp
outs
xchg
mov
jmp
jae
sub
pop
pop
push
xchg
ds
(bad)
push
fs
mov
stos
pop
fdiv
dec
cmp
push
push
lods
jno
mov
fist
lock
fidiv
std
pop
(bad)
imul
jno
pop
mov
mov
in
mov
dec
mov
je
sbb
cmp
nop
sbb
arpl
hlt
test
test
clc
fisub
mov
fs
sbb
push
dec
cli
cmc
fmul
mov
add
inc
push
xchg
and
push
leave
mov
sbb
cwde
sub
call
test
stc
jmp
jl
cmp
sub
scas
xlat
or
pop
aaa
adc
mov
scas
data16
pop
xor
and
jecxz
scas
das
mov
aad
in
xchg
out
jo
(bad)
xor
popf
xchg
mov
mov
fs
push
sar
mov
xchg
add
lods
fcomp
jl
dec
rcl
out
inc
pop
lahf
data16
jl
cs
xor
enter
inc
test
jbe
or
adc
call
movups
out
cs
sbb
push
lea
dec
daa
in
je
into
push
jg
cmc
icebp
push
sbb
in
fwait
test
mov
push
pop
or
push
or
xor
or
mov
cmp
push
xchg
adc
nop
push
imul
cmc
rcr
jne
pushf
add
aam
jo
sbb
int
pop
jns
push
adc
mov
xchg
fwait
xor
pop
sub
mul
inc
push
mov
or
fcom
sbb
inc
jno
inc
sbb
dec
iret
aad
cmc
xor
or
dec
jb
xor
pop
(bad)
push
xor
mov
xchg
sbb
imul
lds
xchg
jbe
(bad)
(bad)
shr
dec
sti
out
dec
ret
pop
xchg
into
cli
add
mov
fwait
push
xlat
adc
sbb
or
mov
ficomp
xchg
adc
adc
pcmpgtw
loopne
mov
sub
push
je
movs
sub
jbe
mov
fadd
fnstcw
push
sub
leave
in
aad
cmps
fistp
push
adc
enter
daa
loopne
sbb
push
pop
test
mov
iret
lds
lods
rcr
(bad)
xchg
lods
aas
sbb
ret
rol
ret
ja
mov
fsub
out
jnp
mov
sub
jo
mov
mov
test
nop
out
(bad)
clc
repz
pop
lock
push
cwde
mov
pop
sbb
xchg
outs
imul
xor
xor
xor
cmpps
outs
gs
xchg
jnp
dec
fisub
cmp
mov
dec
call
in
fimul
sub
jle
push
add
mov
cmp
sbb
pop
(bad)
out
shl
mov
shl
das
dec
sub
mov
jbe
xchg
adc
xor
fisttp
jge
push
iret
es
push
movs
xchg
push
fst
idiv
adc
cmps
and
inc
cmps
mov
test
out
bnd
or
ja
inc
out
paddw
(bad)
into
pop
fidivr
xchg
idiv
inc
pop
mov
int
movs
adc
int
xchg
test
mov
or
ret
rol
xor
cmp
fidivr
enter
xor
or
in
and
cmp
data16
dec
(bad)
call
mov
mov
int
push
inc
cmp
adc
hlt
inc
je
dec
mov
fidiv
xchg
dec
clc
mov
fs
or
inc
sti
dec
ds
mov
aam
mov
add
add
jnp
jg
cmc
mov
ins
mov
inc
iret
pop
cld
iret
push
jo
or
cmps
mov
add
in
dec
(bad)
mov
push
rol
ror
aad
mov
repz
mov
mov
in
cmp
sub
(bad)
pop
out
iret
add
mov
gs
lock
inc
stc
retf
mov
inc
push
adc
pop
cmp
sbb
dec
jmp
adc
lea
ja
out
hlt
sub
ja
fsub
inc
nop
mov
shr
call
mov
stos
sahf
add
out
sbb
and
inc
xchg
dec
js
test
adc
loop
idiv
fbstp
xchg
scas
out
jo
test
or
mov
push
sbb
sub
ss
and
add
and
mov
inc
retf
push
ins
ins
ret
imul
scas
sbb
jp
cmp
call
xor
aam
stos
ds
lods
sbb
loope
inc
(bad)
ret
or
mov
push
add
mov
pop
fs
fistp
retf
adc
nop
(bad)
jmp
outs
push
jae
ins
mov
aad
pop
sahf
inc
mov
in
fnsave
btr
rol
add
inc
sahf
ja
add
neg
inc
mov
jp
out
inc
dec
push
enter
mov
jl
add
mov
enter
inc
mov
pop
in
mov
(bad)
movs
outs
jmp
push
inc
popa
inc
repnz
jae
jecxz
dec
sub
leave
std
mov
push
stos
rcl
pop
fisttp
dec
push
dec
outs
retf
sahf
(bad)
cmp
pop
cwde
mov
sub
movs
es
cld
(bad)
adc
jge
repz
(bad)
xchg
jmp
clc
mov
inc
sbb
(bad)
mov
jecxz
pop
xchg
fsubr
cld
pushf
movs
or
mov
cdq
add
cmc
lods
xor
mov
jmp
sub
clc
or
in
es
movs
push
adc
xchg
adc
stos
jnp
pushf
(bad)
xlat
dec
xchg
sub
in
stos
sbb
mov
mov
mov
add
adc
imul
xor
or
pop
push
inc
mov
pop
jnp
in
and
stos
repz
(bad)
inc
mov
or
adc
ret
mov
dec
test
xchg
bound
retfw
loopne
mov
jno
xor
inc
in
xor
out
int
jg
arpl
stos
(bad)
mov
ja
adc
xor
fiadd
push
loop
in
cmp
int
(bad)
jo
loop
lahf
test
jb
push
ds
push
sar
push
outs
adc
jl
xlat
and
ja
cmp
scas
cli
sub
xchg
cmp
pushf
bnd
(bad)
fmulp
jecxz
add
aam
mov
ret
lock
les
mov
imul
retf
and
(bad)
xor
mov
inc
push
lds
mov
add
out
in
je
jmp
hlt
push
mov
mov
add
shl
mov
cdq
pop
popa
test
mov
sub
call
xchg
sub
pop
xchg
xor
mov
dec
xchg
(bad)
repnz
pop
pop
add
repz
scas
shr
mov
xor
xchg
stos
(bad)
sub
push
push
sub
lods
fldcw
xor
jmp
push
sub
cdq
jmp
and
jp
je
or
sahf
pushf
ins
push
sub
call
jns
push
cmp
xor
xchg
dec
mov
leave
jno
aaa
mov
cld
push
sbb
sbb
dec
inc
retf
adc
pop
sub
(bad)
ins
inc
add
xor
(bad)
push
pop
push
mov
jnp
ins
dec
les
fmul
icebp
pop
out
adc
ja
outs
je
clc
jmp
clc
add
cmp
sbb
xor
sub
jmp
ror
popf
in
out
sbb
mov
cmps
pop
rcr
icebp
data16
or
lea
lods
fwait
popf
push
xor
and
add
inc
xchg
sbb
fmul
movs
inc
lods
jo
push
ret
(bad)
xlat
jmp
cld
and
mov
mov
(bad)
into
jp
jecxz
or
sub
sbb
fs
sub
xor
add
repnz
inc
lods
and
movs
aam
retf
fisub
sbb
jae
inc
pop
retf
(bad)
aad
(bad)
pop
cmp
idiv
cmp
dec
repz
cmp
je
das
outs
and
xchg
push
dec
lods
shr
shl
outs
(bad)
cli
sub
ret
pop
ins
jb
sbb
mov
xor
clc
pop
mov
test
mov
lods
mov
and
mov
lods
add
sub
test
pop
pop
clc
xor
sbb
mov
shl
mov
xor
call
outs
pop
inc
pusha
in
lods
xchg
in
mov
js
cmp
pop
dec
shr
xor
xor
xlat
popa
push
popf
into
jns
retf
repz
bound
mov
dec
add
imul
add
cmps
popa
sub
mov
xchg
ret
pop
and
sar
leave
mov
in
mov
clc
mov
inc
push
es
sbb
mov
fs
pop
push
mov
push
sub
and
jno
test
test
pop
movs
popa
imul
call
sub
mov
test
in
inc
and
sub
sub
adc
(bad)
pushf
(bad)
sub
hlt
add
inc
lahf
push
sub
sbb
into
repz
xchg
test
sbb
mov
pusha
inc
scas
xchg
adc
mov
sahf
retf
push
jbe
clc
cs
cmp
shl
mov
mov
sbb
aad
push
std
nop
daa
lods
outs
or
js
sub
jo
push
xchg
and
mov
(bad)
xchg
sbb
sbb
mov
push
cwde
add
xchg
mov
cmps
ja
adc
adc
dec
lods
int
ret
adc
push
stos
jae
jl
or
mov
ds
dec
clc
dec
dec
adc
ds
stos
pop
(bad)
adc
dec
or
add
pop
sub
pop
imul
xchg
xchg
dec
jbe
(bad)
clc
mov
movs
mov
xchg
xchg
retf
(bad)
fucomi
popa
or
sbb
mov
arpl
xchg
in
push
and
mov
test
out
dec
xor
push
xchg
inc
sub
lods
push
out
fstp
sub
aaa
and
enter
repnz
mov
push
cld
cmc
ror
mov
sbb
dec
adc
mov
add
and
jle
dec
out
pop
jae
movs
jle
(bad)
mov
cwde
loopne
mov
jae
mov
lods
rcr
or
pop
leave
jnp
lods
pop
movs
xchg
popa
push
outs
cmp
pop
imul
add
cmp
sub
xchg
add
inc
mov
ror
xor
push
hlt
cld
pop
(bad)
in
call
sti
mov
pop
sub
scas
int3
cmp
cmp
nop
mov
or
sub
fstp
xchg
shl
mov
cmp
or
cmp
call
icebp
push
push
retf
xchg
aam
cs
sbb
xor
dec
(bad)
jge
inc
jle
mov
fwait
jo
adc
xchg
fiadd
jmp
(bad)
sbb
ss
inc
fidivr
data16
add
xchg
retf
aas
push
retf
cmc
sbb
lock
xchg
retf
ins
std
dec
jge
sbb
push
or
jmp
mov
and
jmp
fnstcw
push
xor
stos
aad
imul
int
inc
mov
add
ret
(bad)
std
adc
xlat
jmp
mov
addr16
cwde
stos
lahf
hlt
imul
imul
inc
gs
ret
iret
ret
ret
mov
out
sti
div
in
xchg
mov
imul
aad
jne
push
in
stos
leave
cmp
mov
sub
sbb
(bad)
jmp
ret
dec
test
xor
push
lahf
push
not
out
stos
push
out
test
inc
jle
scas
js
lods
test
cdq
imul
in
push
xor
addr16
mov
cmps
addr16
fcomi
ret
inc
stos
cmp
inc
inc
retf
call
cmp
mov
les
cmps
pop
shl
push
aad
jnp
jns
fs
call
out
es
sub
jl
lock
or
push
xchg
xchg
jge
xchg
stos
adc
sub
popf
xor
xor
xor
push
mov
pop
xchg
mov
les
and
inc
jle
sub
pop
sbb
mov
mov
loop
add
rdseed
jl
mov
jno
sbb
repnz
outs
stos
push
in
leave
push
into
(bad)
push
inc
xchg
mov
mov
jmp
dec
enter
jnp
cmp
mov
or
outs
push
jmp
lods
jg
mov
fnstenv
enter
or
lahf
jmp
retf
xchg
jg
outs
pop
sub
out
sub
sbb
jp
push
fistp
aad
xchg
nop
lods
add
adc
sub
lea
call
jnp
dec
out
push
push
popa
adc
xchg
mov
add
add
shl
arpl
mov
cmp
imul
dec
retf
cmc
xor
stos
les
mov
pop
or
jp
les
imul
mov
sub
out
pop
int3
pop
and
fsubr
ficom
stos
jb
shr
rcl
scas
or
xor
add
mov
cmps
retf
ficom
fmul
push
out
xchg
shl
outs
ins
inc
loop
pop
int
inc
and
lods
jmp
inc
or
xchg
hlt
stc
jbe
ror
js
cli
jg
ror
dec
jb
shr
push
mov
jmp
mov
dec
dec
and
push
mov
sbb
js
xlat
jb
mov
pusha
adc
push
cmp
and
fnstcw
xor
out
jnp
or
retf
inc
test
jae
cmp
fcom
lock
sbb
rcl
sub
(bad)
aam
xchg
inc
mov
push
mov
push
mov
sub
lock
ficomp
dec
push
fincstp
or
dec
push
les
cld
mov
in
push
cld
sti
lock
mov
inc
sahf
mov
xchg
jns
int3
xor
movs
mov
or
out
retf
jne
rcl
(bad)
pop
lods
pushf
adc
cmp
and
and
nop
mov
or
mov
std
add
dec
dec
imul
out
std
pushf
push
ret
mov
sub
push
and
iret
jae
or
dec
mov
daa
call
hlt
es
xchg
mov
mov
mov
push
int
rdmsr
sbb
clc
and
dec
xor
cwde
or
xor
mov
sbb
adc
in
push
lods
jb
fimul
rol
sub
adc
sahf
mov
or
test
inc
ret
fist
jl
mov
sub
jge
and
push
out
in
aad
xchg
ret
outs
aam
push
and
retf
push
out
mov
movs
add
cli
adc
adc
ss
xchg
int
movs
es
or
call
ja
mov
cdq
(bad)
sbb
sub
test
clc
out
je
data16
pop
mov
mov
mov
mov
push
push
(bad)
lods
sahf
push
cmps
jmpw
stc
sahf
cmps
xchg
sbb
pop
adc
push
xchg
sub
ficomp
mov
cmp
jl
mov
and
mov
popa
daa
mov
cwde
or
and
cmp
or
push
scas
es
into
pop
jl
push
scas
sbb
sub
push
fwait
(bad)
pop
mov
out
sub
loopne
add
test
and
cmp
mov
push
(bad)
loope
mov
in
jno
shr
(bad)
je
adc
aas
cmp
ss
ss
xchg
jmp
ror
xor
dec
pop
sub
outs
xor
pop
adc
loopne
retf
sub
xor
imul
or
or
dec
call
(bad)
push
push
sbb
xchg
iret
bnd
xchg
imul
lock
or
fcmovnu
sub
pop
mov
mov
lock
mov
rep
in
(bad)
jb
sbb
adc
jns
dec
imul
cmp
mov
xchg
jne
mov
pop
sahf
sub
leave
inc
sbb
sub
mov
fadd
xchg
arpl
inc
mov
mov
out
gs
mov
test
ds
in
cmp
adc
sbb
out
fwait
xchg
(bad)
jbe
aad
mov
popf
inc
das
adc
int3
push
xchg
cmp
dec
popf
adc
mov
xor
xor
std
xor
sbb
dec
xchg
das
dec
sar
sbb
push
add
jno
xchg
into
scas
mov
ins
std
or
fimul
mov
add
imul
dec
adc
or
ja
xchg
bound
cwde
fild
cwde
iret
arpl
dec
pop
bound
or
sar
mov
jno
and
lahf
call
ins
push
cmp
sbb
stos
jns
sahf
imul
and
xchg
sbb
loopne
and
aaa
push
jae
pop
jns
movs
mov
push
ret
push
sub
in
inc
jno
leave
rcr
sub
test
cs
mov
mov
sbb
add
cmc
sub
(bad)
movs
or
sbb
cmps
xor
mov
jge
lods
adc
push
ins
sub
dec
mov
ror
iret
lods
enter
lods
ja
es
pop
or
sub
push
or
fstp
cmps
repnz
xchg
stos
add
mov
les
cmp
lods
mov
adc
fwait
(bad)
sbb
dec
popa
lds
jb
(bad)
inc
clc
add
mov
mov
stc
xchg
fild
pop
mov
inc
(bad)
iret
scas
xchg
sub
test
test
inc
dec
call
scas
fsubr
pop
dec
ds
inc
xchg
(bad)
and
out
mov
and
sub
push
outs
adc
push
push
mov
jge
jb
in
(bad)
inc
rcl
jmp
pusha
jno
push
mov
mov
mov
(bad)
loop
out
cld
loope
mov
icebp
stc
aas
pminub
mov
ss
jmp
fnstenv
push
out
or
icebp
das
jp
int3
xor
(bad)
scas
adc
and
movs
mov
dec
imul
mov
or
mov
mov
adc
mov
fstp
mov
mov
sbb
pop
stc
inc
dec
adc
and
cmp
add
ret
and
out
mov
dec
aad
or
mov
test
xchg
call
fs
lods
inc
dec
sub
jno
cmps
jp
jg
jnp
in
sub
into
leave
lock
cmp
das
retf
and
cs
adc
xor
mov
mov
cli
adc
mov
dec
xchg
push
add
push
imul
mov
or
push
ror
jne
ins
fiadd
cmp
adc
ins
xchg
ret
ror
test
in
loop
(bad)
popf
xchg
out
cmp
adc
lods
push
adc
lahf
out
and
enter
ja
outs
test
cli
cmps
dec
cli
test
stos
dec
fiadd
ret
in
ret
xor
push
push
adc
pusha
je
pop
push
loopne
cli
cli
fadd
je
mul
fdivr
bound
jmp
addr16
jmp
mov
xor
test
inc
xor
mov
and
jns
rcr
fstp
fcomp
push
inc
shl
push
sbb
mov
test
int
stc
and
inc
repnz
arpl
aad
daa
fldenv
add
jno
test
(bad)
fadd
iret
mov
pop
movs
sahf
or
fidivr
in
mov
fcom
adc
add
adc
push
(bad)
cmc
icebp
leave
add
add
std
jp
xchg
mov
loope
lods
mov
push
cli
mov
lock
lods
add
xor
adc
push
pop
jne
xor
clc
mov
xchg
gs
aad
sbb
loope
call
sar
sbb
or
sub
mov
ja
sbb
out
push
inc
xor
xchg
mov
inc
(bad)
cmc
fwait
jae
pop
adc
and
jnp
cmp
mov
mov
xor
mov
dec
int
dec
and
mov
cmc
xor
inc
daa
mov
mov
inc
stos
popa
sub
and
test
ret
and
(bad)
popf
dec
or
add
adc
push
adc
fimul
in
adc
mov
push
push
xor
movs
es
jecxz
and
cmp
aas
icebp
dec
sbb
cdq
xchg
jnp
jl
shr
jecxz
sbb
(bad)
lock
mov
fs
ret
es
leave
das
xlat
pop
and
xchg
xchg
xchg
xlat
adc
mov
std
push
mov
xchg
jne
jp
retf
jg
and
or
xor
dec
rcr
cmp
arpl
(bad)
retf
pop
inc
xchg
adc
cmp
(bad)
popf
fdiv
out
(bad)
fucomp
ss
test
imul
(bad)
hlt
out
push
test
dec
hlt
(bad)
xchg
stos
or
fdivr
mov
cmp
int
rcl
ret
add
out
(bad)
ss
and
or
push
sub
xchg
ja
outs
pop
ins
sbb
jmp
mov
daa
lahf
imul
es
cmp
aad
ret
nop
pusha
out
inc
sbb
adc
fcom
ds
sub
xchg
ss
jmp
rcr
psraw
mov
sbb
fwait
jns
lods
stos
adc
xor
(bad)
mov
inc
sub
int
cmc
lahf
cdq
push
sub
stos
out
pusha
dec
data16
test
xor
lods
sbb
inc
iret
mov
xchg
std
int3
mov
sahf
adc
test
clc
and
scas
mov
jno
jp
push
push
dec
xor
jge
dec
mov
mov
nop
daa
mov
daa
push
in
mov
pop
xchg
add
sbb
data16
test
cld
in
push
xchg
xor
mov
clc
mov
jg
mov
mov
cmps
shr
cmps
inc
(bad)
fwait
xlat
adc
xchg
mov
sbb
test
setno
mov
mov
xchg
popf
inc
or
dec
push
mov
and
nop
jae
in
xchg
adc
push
jge
sbb
mov
mov
in
pushf
lock
lock
sbb
inc
and
mov
inc
jns
mov
ss
pusha
mov
mov
add
sbb
icebp
retf
inc
xbegin
mov
xchg
adc
mov
push
lock
test
iret
mov
pop
xlat
jge
mov
and
ja
mov
push
scas
into
ja
add
adc
fimul
outs
mov
(bad)
pop
cmp
ret
arpl
imul
mov
add
ror
cwde
out
sbb
popa
lahf
pop
mov
sub
stos
xchg
rcl
push
fidiv
add
fcmovnu
add
rcl
out
jmp
jl
add
stos
iret
pop
setne
jne
ja
sub
add
xchg
ror
shl
pop
push
popw
xor
dec
vshufps
imul
inc
int
cmp
and
ins
inc
test
jno
inc
cld
call
jno
and
xor
fcmovu
int
add
mov
(bad)
jl
mov
inc
popa
inc
sbb
inc
add
stos
cdq
loop
aad
xchg
into
daa
xor
ds
mov
mov
inc
add
lock
or
sub
dec
out
jmp
and
inc
cmp
jg
xchg
push
fisubr
xlat
scas
or
ja
adc
push
(bad)
faddp
stos
scas
das
adc
adc
js
mov
or
jno
out
in
add
cmp
retf
sub
rol
xchg
dec
xor
icebp
les
sub
(bad)
stc
add
out
mov
jl
xchg
(bad)
iret
(bad)
mov
and
retf
arpl
ror
shl
in
inc
repz
and
and
ds
jne
xor
sub
ret
adc
rcl
fisub
test
sub
mov
(bad)
cdq
or
xlat
int3
jge
cmp
popf
ins
arpl
inc
and
shl
loop
dec
retf
xchg
retf
enterw
(bad)
aam
retf
lahf
mov
or
push
addr16
stos
xor
jno
mov
xor
shl
arpl
add
std
jns
fstp
aad
add
fnstsw
mov
int
outs
div
xchg
xor
pop
pop
adc
ret
outs
cmp
xor
(bad)
cmp
(bad)
mov
cmp
sub
xchg
and
sbb
into
push
in
scas
pop
in
mov
mov
dec
imul
call
mov
adc
enter
dec
xchg
call
rcl
xor
lds
push
push
pop
test
test
shr
push
leave
cld
mov
out
test
fild
pop
push
push
xchg
xchg
cmp
xchg
retf
cmps
loope
ins
inc
mov
(bad)
jmp
movs
pop
call
pop
stos
dec
fadd
(bad)
in
sbb
lds
add
repnz
cmp
out
fwait
push
je
icebp
popf
and
inc
nop
sub
into
or
mov
pop
xchg
out
xchg
loope
xlat
std
jmp
xchg
and
sub
or
pop
mov
sbb
ds
push
pusha
out
mov
pop
in
or
cmp
retf
or
repz
mov
daa
ds
pop
nop
adc
push
shl
push
push
imul
jne
scas
mov
pop
and
xchg
jg
in
and
xchg
sub
rol
or
cmp
jmp
fsub
jmp
(bad)
popa
xor
or
loopne
jp
inc
out
fldenv
or
cdq
pop
xchg
cmps
into
adc
lods
pop
sbb
not
sti
dec
fdivr
mov
rol
or
sar
sahf
or
xchg
sar
sahf
es
xchg
ffreep
mov
mov
and
lods
test
cdq
pushf
adc
push
jns
movs
jp
ffree
popf
add
xor
jl
cmp
pop
and
rcl
cmc
dec
loop
leave
in
lds
out
das
adc
movs
cli
dec
dec
cmp
in
movs
sbb
in
fprem
les
inc
inc
cmp
sub
enter
and
push
mov
or
xchg
cld
jnp
cld
icebp
jb
push
jbe
adc
push
xchg
ds
pop
nop
adc
inc
shl
add
retf
bound
mov
pop
shl
mov
adc
pop
sub
mov
test
add
mov
aam
in
inc
push
and
mov
fsubp
inc
(bad)
arpl
mov
sbb
sub
sbb
mov
outs
ret
jae
push
jmp
xchg
int
push
test
jmp
mov
hlt
add
shl
fwait
cmp
xchg
ins
js
and
rcr
in
loope
mov
add
adc
fiadd
sub
xlat
and
xchg
(bad)
rcr
ret
xchg
jl
add
sbb
js
add
aas
and
xor
pop
sti
les
fwait
loope
push
addr16
jmp
fdiv
cmc
les
mov
imul
mov
fwait
push
push
xor
jbe
mov
fs
push
sub
jge
(bad)
retf
pusha
sub
push
cli
push
pop
dec
(bad)
movs
js
push
inc
clc
adc
retf
(bad)
mov
jno
retf
into
in
loopne
adc
gs
repz
dec
jge
retf
out
push
out
dec
add
gs
inc
sub
inc
cmps
dec
xchg
push
adc
and
or
scas
jecxz
stos
ins
pop
push
inc
add
and
out
jno
adc
mov
lahf
fs
mov
test
shl
jo
(bad)
jmp
pop
in
jnp
stos
(bad)
ret
ins
pop
hlt
jno
and
ret
inc
mov
fisub
std
retf
jmp
in
cmp
jns
xchg
add
cld
and
retf
adc
xor
(bad)
adc
dec
rcr
cmp
adc
mov
stos
test
movs
movs
mov
mov
mov
xchg
inc
xchg
lods
aam
inc
enter
ja
mov
test
enter
push
sbb
or
jmp
cli
push
sub
pop
mov
js
mul
(bad)
jmp
ins
cld
dec
mov
or
sub
adc
mov
cmp
inc
sti
ror
call
ins
cmp
in
mov
add
or
cs
add
mov
aaa
fwait
jmp
add
(bad)
mov
mov
into
test
jl
ret
clc
cmp
cmp
or
or
and
and
sub
loopne
jmp
xor
enter
mov
sub
mov
(bad)
popf
repnz
in
out
ret
leave
ins
test
and
dec
mov
test
or
dec
jnp
movs
rol
sub
push
inc
cmp
push
or
jle
cmp
out
inc
pop
push
sbb
push
aaa
push
sub
sub
sub
hlt
dec
sbb
repnz
xlat
mov
movs
xchg
les
enter
or
jge
add
adc
mov
xchg
and
mov
jmp
dec
sub
scas
fdivr
fwait
xor
jno
inc
(bad)
not
and
pop
repnz
popa
popa
jl
dec
and
fsubrp
mov
imul
daa
mov
dec
out
clc
dec
inc
pop
or
mov
das
push
and
and
dec
lea
and
sti
sbb
mov
and
(bad)
or
aaa
jnp
imul
pop
mov
mov
imul
mov
dec
mov
movs
pop
lock
inc
stos
xor
xor
(bad)
fwait
xchg
jns
mov
sbb
cmp
outs
cwde
call
es
test
imul
lahf
fstp
pop
inc
dec
xor
lahf
pop
or
popf
jle
mov
imul
pop
push
add
rol
mov
movs
scas
and
sub
inc
adc
loop
xchg
das
mov
loop
cmp
adc
cld
jp
sbb
fisttp
mov
inc
(bad)
cmp
jnp
jl
jne
scas
mov
jge
popf
pop
add
popf
mov
jbe
je
mov
push
push
imul
icebp
in
cs
fwait
or
mov
loope
pop
js
cmc
test
cmp
cld
mov
rcr
push
fidiv
or
jp
xchg
xchg
push
pop
jle
f2xm1
popa
sahf
jo
adc
adc
nop
ja
(bad)
div
cmps
and
iret
scas
mov
xchg
jnp
mov
sti
mov
mov
setg
mov
movs
sbb
cdq
dec
push
mov
mov
mov
lock
sbb
(bad)
cmp
stc
ret
sub
xor
mov
div
inc
adc
xor
scas
dec
fisttp
mov
inc
mov
cmp
loop
ins
jb
dec
inc
push
dec
push
addr16
int
sub
(bad)
jnp
or
dec
jle
cmp
nop
mov
push
cmps
in
arpl
lods
int3
inc
shr
xchg
out
(bad)
retf
cdq
mov
dec
sti
mov
adc
int
mov
sbb
mov
ret
xlat
in
cmp
push
cmp
cmc
mov
fild
xchg
or
popa
inc
xchg
mov
mov
stc
sub
jnp
cmps
lods
cld
mov
das
imul
mov
or
xor
mov
mov
mov
(bad)
ror
adc
cmp
mov
lahf
xchg
loop
imul
rcr
xchg
rcr
in
add
and
mov
fist
(bad)
push
add
and
aas
stos
sbb
sub
ror
dec
imul
xchg
aaa
js
shl
xor
and
rcr
scas
out
(bad)
cs
pop
xchg
bound
or
sub
xchg
sbb
int3
mov
fcomp
push
cmp
mov
pop
mov
pop
mov
paddd
sar
stos
clc
pop
sub
or
movs
pop
sub
push
lods
jge
push
shl
mov
inc
imul
adc
iret
aam
loop
(bad)
push
into
test
push
push
loop
mov
data16
out
fwait
inc
xor
inc
mov
mov
lock
das
shl
sub
shl
loope
fwait
sub
xor
jae
mov
push
stc
or
and
inc
popa
repz
or
lahf
(bad)
dec
pop
outs
mov
adc
mov
mov
mov
and
push
dec
bsf
xor
xor
jp
sub
inc
pop
bound
pusha
jae
je
pop
adc
les
jp
jl
cmps
xchg
pop
or
jge
push
fwait
ror
dec
cli
int3
ss
inc
popa
cmps
cld
cmp
sbb
push
mov
test
mov
sbb
mov
dec
xor
sbb
pop
ins
mov
or
xlat
mov
div
imul
xchg
pop
ss
or
ret
outs
fwait
sub
push
xchg
(bad)
dec
retf
js
fsubr
aam
dec
sub
jg
xchg
pusha
(bad)
sub
xchg
shl
jno
sbb
into
mov
pop
movs
neg
mov
cmp
in
push
mov
push
dec
inc
pop
push
push
ss
and
mov
retf
repz
dec
fwait
stc
xor
mov
push
loopne
mov
rcl
dec
add
dec
clc
mov
adc
or
sbb
rcr
add
sbb
test
xchg
sbb
mov
rol
cmp
lds
js
(bad)
cmp
dec
jbe
fsub
ins
xor
push
jl
jne
sbb
mov
loopne
out
mov
cs
pop
out
adc
je
lods
cmps
sar
ds
mov
xor
pop
fbstp
jnp
adc
shl
sub
repz
popa
mov
movs
sar
or
lea
sbb
jbe
das
test
adc
pop
dec
(bad)
nop
dec
or
mov
jo
inc
pop
stos
dec
(bad)
dec
fsubr
int3
js
(bad)
movs
pop
mov
jns
pop
aam
jbe
aas
in
sub
and
and
fsub
sub
loopne
loopne
mov
push
mov
mov
cmp
and
cmp
ds
jmp
cli
fisub
jo
sbb
aaa
lea
das
mov
out
movlps
xchg
hlt
xor
push
ja
out
out
ss
popf
xchg
xor
dec
xor
inc
inc
jno
push
xor
imul
mov
jno
pop
pop
ror
mov
fadd
xchg
push
inc
dec
mov
test
push
inc
xchg
jl
lods
push
mov
pusha
cli
not
int3
(bad)
sbb
sbb
pop
int
mov
lock
and
dec
sahf
fcmovb
scas
or
lahf
or
iret
sbb
(bad)
pop
(bad)
icebp
scas
dec
push
out
adc
sub
and
pushf
bound
stos
adc
inc
jns
call
rol
push
into
retf
ins
add
(bad)
or
xor
mov
adc
add
sbb
push
mov
xchg
in
sub
(bad)
mov
ret
call
leave
adc
imul
(bad)
add
sub
outs
sub
lea
loopne
and
jp
shr
xor
nop
mov
test
cmp
push
or
mov
cmp
mov
arpl
rcr
inc
mov
mov
sub
pop
adc
jo
retf
mov
inc
jge
call
popf
xor
mov
jp
out
dec
(bad)
push
adc
cli
pop
mov
push
add
into
cmc
lods
leave
(bad)
ds
call
(bad)
fucomi
adc
cmp
mov
cwde
hlt
xchg
sar
add
fmul
ret
fbld
mov
dec
(bad)
cld
jecxz
jbe
add
push
ja
out
inc
jnp
stos
mov
and
fadd
dec
cmp
mov
(bad)
movs
fistp
nop/reserved
mov
add
add
(bad)
out
int3
in
(bad)
pop
inc
push
cmp
nop
jo
je
mov
sub
lea
push
test
jle
push
add
push
inc
sbb
outs
(bad)
movs
push
outs
jb
mov
aam
in
mov
jbe
adc
sub
adc
hlt
lea
rcr
popf
inc
or
cmovns
shr
inc
push
test
retf
ret
inc
xchg
push
sub
jle
cmp
lds
daa
and
psubusb
rep
cmp
xchg
jbe
dec
sub
inc
bound
not
jmp
mov
or
sbb
daa
add
mov
iret
in
je
int3
clc
and
xchg
popa
sbb
das
xchg
stc
popa
fiadd
xchg
pusha
popf
jle
xor
les
push
repz
inc
adc
mov
js
aas
repz
dec
mov
sub
test
aad
push
mov
cmps
test
aas
in
rcl
mov
test
je
loopne
jmp
pop
fcmove
jl
ret
scas
test
mov
sub
xchg
jle
jnp
enter
xchg
and
add
sub
lods
inc
pop
push
ss
scas
mov
jmp
or
outs
shl
test
cmp
inc
xchg
ja
add
scas
pop
movs
inc
fistp
mov
repnz
(bad)
call
ins
cmp
fwait
jp
scas
outs
push
fadd
push
test
mov
jo
mov
adc
int
pop
lea
and
push
add
mov
inc
das
push
cld
push
icebp
in
mov
or
or
sbb
fdivrp
pop
shl
ja
adc
xor
aaa
sbb
xor
dec
dec
or
fsubr
mov
or
pop
and
into
xchg
mov
aaa
ja
mov
pop
or
sbb
jecxz
call
outs
inc
fwait
or
ss
imul
and
icebp
out
adc
pop
xchg
mov
pusha
inc
int3
test
and
ret
imul
ret
dec
cmp
test
out
das
sub
or
dec
adc
add
pop
mov
adc
mov
call
fnstenv
mov
dec
push
aam
jp
or
out
mov
mov
(bad)
aas
inc
push
push
mov
jmp
and
adc
jb
cmp
or
mov
shl
cmps
pop
lds
jmp
out
das
dec
and
mov
cli
push
inc
enter
dec
jge
dec
sub
pop
or
mov
add
loop
push
jp
add
and
(bad)
xchg
xchg
xchg
push
loope
push
rol
(bad)
ret
(bad)
push
out
sub
pop
ror
ja
rol
scas
xor
fxam
cmps
push
or
and
adc
stos
pop
push
dec
adc
(bad)
fbstp
fmul
(bad)
out
push
pop
sar
stc
dec
jno
test
mov
ds
lea
pusha
shr
add
pop
mov
js
(bad)
retf
aaa
addr16
aad
hlt
fdiv
cmp
xchg
aaa
sahf
or
xor
fldenv
inc
xor
pop
stc
les
cmp
sbb
push
dec
pop
dec
pusha
(bad)
repz
and
xchg
mov
(bad)
cmps
pop
inc
jmp
xchg
popf
in
sti
xor
movs
xchg
pop
adc
add
stos
xor
hlt
sub
inc
aaa
jno
pusha
pop
mov
repz
push
sub
mov
xor
(bad)
fnstcw
daa
xor
jns
pusha
js
sbb
frstor
add
jle
mov
xchg
bound
inc
neg
clc
loope
sbb
sub
stos
mov
std
leave
in
or
popf
fmulp
push
lahf
js
pushf
stos
mov
mov
jg
sar
stos
push
mov
mov
retf
jb
cmc
adc
inc
sub
mov
(bad)
pop
pop
rcl
cmp
lea
imul
ins
push
sbb
add
cmp
outs
adc
pop
mov
pop
sti
repz
fcmovnbe
xor
push
and
into
sahf
aad
jp
and
sub
cmps
xor
clc
ret
xchg
pusha
mov
gs
cwde
xor
jp
lds
idiv
sti
mov
inc
xchg
jno
nop
(bad)
sub
and
dec
data16
jb
xor
paddd
imul
pop
enter
inc
(bad)
and
js
pusha
pop
mov
or
(bad)
cli
add
pop
fbld
sub
push
ret
cdq
mov
and
test
or
cmps
cmp
inc
and
pop
shl
dec
outs
fld
sahf
ret
int3
scas
mov
dec
jmp
in
int3
inc
ret
popf
shr
fld
dec
push
(bad)
or
push
aaa
fisubr
sti
lock
and
pop
mov
rcr
cmp
scas
ins
push
stc
popf
out
ds
sub
enter
test
pop
jg
mov
call
mov
test
mov
(bad)
fidivr
lds
in
(bad)
fnstcw
cmp
enter
je
adc
cmp
xchg
pop
cmp
jnp
call
and
jmp
dec
dec
ins
or
jl
xor
push
jns
xchg
dec
mov
and
push
fs
mov
leave
mov
lock
cdq
dec
or
xor
inc
push
js
mov
jecxz
int3
sub
and
rol
or
nop
jecxz
ins
and
fisub
retw
mov
inc
push
test
jb
pmulhw
mov
mul
daa
js
push
fistp
push
push
call
push
out
sbb
sbb
sub
outs
pop
les
xor
bound
cmps
cwde
shl
sti
jb
xor
or
stc
in
shr
ret
fisub
or
jp
mov
sub
jle
dec
or
jns
inc
out
setp
outs
test
cld
dec
test
add
mov
in
hlt
aas
leave
mov
add
rcr
fnstenv
ins
xchg
ret
adc
daa
inc
add
sub
xchg
sbb
aam
xor
repz
mov
retf
inc
popa
add
imul
xor
inc
cli
mov
shl
loope
ja
repnz
and
and
sub
and
push
sub
test
daa
pushf
fidiv
mov
mov
div
test
sar
pop
stos
adc
mov
in
xor
inc
fdiv
sub
packsswb
cli
(bad)
dec
hlt
mov
pop
jp
jnp
xchg
inc
in
clc
cwde
jae
ficom
aas
idiv
add
jecxz
dec
dec
jl
je
xchg
adc
mov
int3
xchg
mov
sbb
stos
daa
lods
xchg
and
cmc
jno
mov
push
js
pop
sahf
or
mov
mov
ins
data16
into
or
or
dec
mov
xor
imul
adc
(bad)
jg
addr16
and
repz
ror
pop
iret
sbb
push
aaa
arpl
nop
add
inc
fst
push
cmp
mov
xchg
mov
xchg
push
sbb
mov
in
js
dec
or
sbb
outs
lods
(bad)
xchg
stos
ja
push
repz
lahf
hlt
aaa
(bad)
push
cmp
popa
call
rcl
mov
xchg
jo
fs
sub
fadd
shr
(bad)
in
aas
mov
pop
xor
push
movs
or
shl
test
or
arpl
cmp
push
sar
outs
into
inc
sar
add
sbb
les
outs
xor
jno
hlt
or
mov
mov
or
cmp
addr16
cmp
cwde
mov
inc
dec
inc
neg
enter
cmp
int
test
xchg
ss
int3
xor
ret
and
adc
and
fistp
pop
push
mov
mov
mov
stc
push
shl
inc
mov
push
loopne
loopne
push
fst
mov
das
jmp
cmp
js
mov
vmovq
push
add
jecxz
outs
and
push
ret
mov
std
and
out
mov
sub
test
repnz
sub
(bad)
fstp
sbb
and
outs
sbb
je
inc
idiv
idiv
mov
lds
sub
in
mov
mov
mov
ror
dec
fs
nop
jae
sbb
mov
cmp
fs
sar
or
pop
(bad)
lods
push
cld
pop
call
sbb
jmp
pop
dec
xlat
mov
or
push
inc
jo
sbb
push
int3
lods
dec
sar
(bad)
jecxz
mov
xchg
add
xor
fild
fistp
adc
fs
adc
add
add
iret
push
xchg
rcr
sbb
inc
neg
ins
and
fisttp
pop
mov
cmps
repz
retf
inc
mov
in
xchg
jo
imul
call
mov
in
fwait
mov
xor
jecxz
or
push
and
mov
sub
adc
cmps
add
mov
inc
jae
mov
je
loop
and
fs
arpl
inc
ds
sbb
ret
repz
movs
call
inc
xor
pop
popf
pop
or
nop
sbb
dec
cmp
xchg
cs
mov
popf
push
les
ret
or
sti
nop
idiv
loop
in
pop
xor
cmp
shr
jbe
hlt
ins
xchg
lods
loopne
call
ins
mov
nop
pmulhuw
pop
push
jmp
sbb
aas
fucomp
into
fbstp
pop
mov
mov
mov
inc
test
nop
jp
repz
aam
out
xor
inc
dec
dec
xchg
out
push
mov
pop
and
call
jle
add
jnp
mov
dec
or
cmp
xchg
xor
daa
nop
mov
test
push
cmp
adc
and
push
fwait
adc
or
ss
fistp
mov
mov
scas
movs
cmp
and
inc
inc
sbb
loopne
mov
jp
loop
xchg
inc
ins
in
xchg
les
int3
fsubr
sub
hlt
sar
retf
fidivr
stos
and
retf
xlat
xchg
mov
xchg
cmp
push
pop
mov
dec
popa
repnz
lods
enter
imul
sbb
jle
and
jnp
stc
sbb
pop
jns
inc
aad
cmp
cmp
(bad)
fnstenv
aaa
mov
lods
out
cmp
ins
jecxz
fsub
or
loop
or
mov
pop
in
jl
inc
movs
inc
inc
daa
cmps
dec
in
aam
push
out
add
cli
jle
inc
dec
fbld
xchg
daa
inc
test
jmp
mov
cmp
jo
ret
xchg
repnz
pop
jb
pop
sti
mov
pop
repz
jo
sbb
pop
aaa
outs
sbb
ds
mov
sub
xor
mov
out
ret
cwde
jmp
push
adc
(bad)
xchg
fmul
das
xor
aam
push
cmp
(bad)
cwde
lock
lea
sti
xor
mov
fld
mov
push
addr16
ins
jnp
lods
scas
std
aaa
push
dec
push
and
cmp
jp
adc
nop
pop
jge
or
addr16
scas
jg
fistp
test
jae
xchg
fmul
jae
nop
scas
add
mov
fwait
sub
into
(bad)
xor
cwde
mov
leave
add
sar
aam
dec
pushf
sub
push
or
mov
nop
in
jmp
(bad)
jns
mov
je
inc
repz
jp
mov
xchg
or
call
sahf
mov
aaa
rcl
push
repz
in
shr
mov
cmp
rcr
pop
addr16
xchg
adc
imul
sub
ins
js
jp
sub
cli
call
mov
pop
add
out
mov
push
sbb
dec
aas
jns
test
loope
push
cmc
mov
jmp
outs
retf
ins
mov
jo
mov
scas
pop
and
push
sahf
push
call
or
lods
mov
inc
lds
jp
jg
repnz
dec
mov
jmp
test
loop
out
push
and
or
jo
and
aad
sbb
pop
cdq
xchg
mov
das
push
aaa
push
pusha
adc
push
and
imul
out
jmp
and
movs
out
in
icebp
jne
adc
sysexit
push
jnp
mov
xchg
cmp
mov
cmc
test
fidiv
ss
cmp
xor
fidiv
bound
fnstenv
mov
(bad)
mov
int3
inc
aam
rol
ret
cwde
lea
xchg
jbe
inc
(bad)
xor
jo
sbb
mov
jp
(bad)
sub
sub
cmps
lahf
mov
aas
adc
outs
shr
je
cwde
mov
ins
pop
leave
push
jmp
sub
pop
(bad)
lods
in
fwait
xchg
movs
push
jbe
push
push
fist
mov
dec
add
jl
and
in
pop
mov
loop
mov
push
mov
imul
mov
stc
and
call
add
mov
pusha
cmp
pop
cdq
lds
int3
and
sar
xor
inc
shr
jns
lods
addr16
jmp
test
push
mov
cmc
ins
jne
sar
mov
ret
push
movs
pop
cli
push
jp
xchg
in
pop
adc
xchg
or
push
pop
add
or
ins
push
adc
into
jge
xchg
cmp
fild
nop
jmp
jns
inc
mov
pop
push
ins
imul
jp
scas
bnd
icebp
in
pop
mov
or
add
mov
inc
adc
es
ja
mov
popa
pop
sub
xor
mov
xchg
mov
push
jge
leave
outs
push
push
ins
jmp
or
lahf
out
mov
and
add
xchg
xchg
cmp
fucom
test
xor
adc
xchg
loop
mov
ror
pop
mov
into
dec
gs
adc
fucomi
movs
or
mov
or
dec
mov
int
test
mov
xor
mov
fwait
repnz
imul
shl
neg
cmc
gs
and
aad
mov
test
sbb
sti
popa
shl
cmp
popf
int3
lock
jmp
icebp
xchg
lea
loope
cdq
inc
ins
pop
and
call
pop
adc
ret
(bad)
imul
adc
ds
mov
jmp
jecxz
(bad)
fwait
pusha
enter
xor
aas
mov
xor
jae
dec
sti
rcl
add
cdq
in
adc
ins
mov
lock
sar
cmps
jecxz
loope
inc
je
fcmovu
retf
gs
leave
pop
xchg
add
and
push
push
rcr
dec
cmp
jecxz
sar
shl
xor
sahf
test
mov
fisttp
mov
push
repz
adc
into
data16
shl
xlat
sti
fst
mov
fistp
add
dec
fiadd
daa
xchg
sbb
adc
and
(bad)
imul
aaa
push
int
push
mov
clc
rcr
add
inc
js
jno
je
out
sbb
mov
mov
lods
fadd
dec
or
in
mov
cmps
pop
jge
mov
or
mov
or
mov
out
shl
je
add
push
pop
xchg
in
sbb
stos
add
jne
mov
nop
pop
iret
sub
mov
dec
xor
ficom
pop
inc
pop
sub
nop
popa
mov
ret
aam
jl
(bad)
jnp
lahf
inc
loop
out
mov
popa
pop
outs
adc
das
mov
push
popa
int
xor
lds
push
(bad)
fxch
sbb
rol
or
mov
ret
es
inc
es
jo
icebp
mov
ins
int3
(bad)
in
cmp
pop
imul
and
shr
xchg
js
ds
imul
and
mov
adc
mov
cmc
push
out
test
movs
mov
scas
es
xchg
icebp
mov
ins
cmp
xchg
and
jle
popf
cli
and
arpl
jmp
test
mov
cmp
sti
cmp
push
pop
loope
es
xor
dec
push
lahf
push
push
mov
imul
fldenv
xchg
mov
fmul
pop
imul
xchg
pop
out
les
jmp
cli
add
loope
jecxz
cmc
mov
inc
out
jle
(bad)
ins
pop
aas
loope
(bad)
cld
jp
mov
adc
loopne
(bad)
shr
jne
(bad)
shl
fcmovnu
mov
xor
pop
in
addr16
mov
mov
cwde
and
(bad)
clc
add
mov
jbe
inc
inc
mov
in
adc
scas
jle
cmc
in
scas
xor
jno
and
push
fs
(bad)
adc
jae
sbb
mov
push
call
inc
call
jmp
aad
scas
and
or
jns
cmps
push
sbb
lahf
push
sahf
mov
test
sbb
imul
adc
pop
jno
lods
jbe
int3
sbb
pop
int3
repz
cld
inc
mov
xchg
test
jne
clc
icebp
inc
fisubr
adc
dec
mov
hlt
lds
int3
xchg
mov
and
sbb
inc
out
repz
test
push
dec
jmp
mov
jns
and
or
test
add
in
cmc
sahf
iret
jnp
mov
sub
js
aad
movs
mov
inc
push
and
ins
xor
push
shl
sar
fisttp
arpl
sbb
out
int
push
fistp
(bad)
fld
add
xchg
nop
arpl
sub
ss
inc
jo
aam
stc
mov
loop
sub
dec
sbb
popf
mov
pop
mov
jle
sbb
jp
pop
out
in
mov
call
and
iret
lds
mov
or
out
(bad)
cli
repz
stos
jae
cmp
pop
and
arpl
xchg
fistp
xchg
je
xchg
dec
push
out
mov
push
mov
outs
mov
adc
leave
xchg
xor
enter
adc
xlat
pop
sub
mov
mov
les
imul
inc
or
jmp
(bad)
cmc
in
push
inc
movs
je
sub
jae
sub
in
aam
repz
in
hlt
xchg
pop
popa
mov
dec
pop
inc
cmps
shr
mov
pushf
je
mov
(bad)
loopne
cmp
and
fwait
cmp
jne
xchg
lds
aas
sahf
das
push
cli
and
movs
fcomp
cli
lods
aaa
std
mov
in
jmp
pusha
sar
or
cwde
das
or
dec
cdq
push
std
inc
sbb
repz
mov
sub
jmp
and
mov
dec
(bad)
xlat
pop
xchg
retf
mov
adc
cmp
arpl
xchg
int
jp
mov
test
fstp
sub
push
mov
(bad)
pop
cs
fld
add
btr
aam
pop
aas
inc
or
rcr
xchg
js
repz
pop
inc
shl
jns
jle
pop
data16
aaa
xchg
je
mov
retf
mov
outs
scas
sbb
push
ds
mov
(bad)
psrlq
sbb
pop
loopne
stos
pop
inc
sub
push
add
dec
js
fnclex
call
dec
jns
sbb
dec
les
jmp
xchg
gs
pusha
and
pop
jo
lods
xchg
sbb
pop
push
mov
dec
loop
(bad)
sub
or
sbb
fs
daa
cmps
lods
(bad)
pop
push
sbb
out
adc
and
xor
cli
shl
sbb
stc
je
xchg
sub
cmp
(bad)
into
jbe
mov
stc
cdq
jg
mov
js
cmp
add
or
pop
cli
jg
mov
mov
xchg
pop
out
mov
push
pop
or
dec
lock
shl
lea
mov
adc
ficom
push
hlt
mov
or
frstor
lock
pop
or
lahf
fstp
in
cli
repnz
jecxz
mov
ds
std
les
inc
or
movs
scas
fcomp
dec
add
sbb
dec
dec
and
push
in
inc
xlat
pop
addr16
sbb
cmp
jl
or
mov
mov
repnz
aas
repz
jp
std
jns
dec
test
adc
pop
arpl
fisttp
add
movd
repnz
pop
pop
xor
inc
push
jmp
mov
dec
aad
ins
pop
and
enter
cmc
lock
(bad)
mov
pusha
pop
cld
aam
daa
xor
xor
inc
lea
pop
sub
inc
sar
dec
xor
mov
cmp
or
mov
fild
sub
jge
movs
xor
enter
shr
inc
js
push
cmp
jne
mov
and
fs
jnp
repnz
and
cld
mov
push
push
iret
push
(bad)
ins
add
(bad)
jp
shl
and
dec
inc
mov
adc
inc
mov
and
clc
mov
scas
pop
sahf
mov
xchg
fist
pop
int
push
sahf
ss
jmp
jl
fxch
mov
push
mov
test
ror
clc
adc
mov
sub
sbb
movs
xchg
mov
icebp
popf
out
sbb
xor
call
mov
push
jmp
(bad)
rol
cli
(bad)
in
add
cmp
pop
fucomp
ins
hlt
cmps
xor
ss
jnp
sbb
pop
add
add
mov
sar
jbe
inc
rcl
in
aas
pop
mov
jo
lods
or
into
test
popa
icebp
popa
cld
out
imul
push
jb
inc
inc
stos
jmp
adc
mov
cmp
cwde
test
pop
shl
xlat
hlt
inc
in
adc
retf
imul
outs
ja
call
inc
adc
and
sbb
es
popf
rcl
cmp
repz
aaa
xchg
mov
xchg
jo
int
xor
jmp
xchg
mov
add
jge
(bad)
loopne
js
aam
mov
bound
movs
or
neg
sbb
dec
mov
mov
out
call
dec
shl
aaa
sbb
es
pop
stos
scas
mov
bound
cmp
push
xor
cmp
aad
ret
mov
push
inc
xchg
(bad)
push
xlat
sub
inc
pop
mov
add
fwait
sbb
sti
fs
es
mov
add
fisubr
cmp
in
mov
and
mov
xor
jp
pop
mov
adc
add
pop
mov
dec
jnp
cmp
adc
jmp
xchg
jmp
mov
sub
sti
adc
push
push
push
xor
xchg
(bad)
imul
mov
and
and
xor
push
push
jmp
cli
ficomp
clc
mov
cmp
or
pop
ret
jg
je
mov
adc
add
and
jecxz
dec
mov
lds
sbb
out
mov
(bad)
pop
ins
call
xchg
mov
fisub
mov
jecxz
pop
pop
mov
xchg
pop
loope
jbe
repz
dec
dec
mov
les
mov
fstp
int
imul
adc
(bad)
mov
cmps
pop
shr
lods
loopne
out
add
sbb
mov
fidiv
call
sbb
cmp
inc
push
xchg
add
mov
sub
push
jmp
ret
sub
sub
and
adc
xor
push
cmp
ds
jnp
dec
mov
push
movs
mov
imul
aas
outs
in
dec
out
lods
(bad)
mov
xchg
inc
(bad)
cli
xchg
sbb
push
and
fwait
pop
push
bnd
or
call
sub
clc
in
ss
ret
push
jmp
jmp
dec
in
sbb
mov
xor
int3
inc
outs
or
lods
(bad)
fdiv
stos
repz
sbb
cwde
arpl
in
dec
les
shl
jl
pop
bnd
cmp
cmc
lahf
pop
add
xchg
(bad)
(bad)
push
aam
movs
les
jecxz
sbb
outs
gs
sbb
js
fdivr
adc
xchg
cmp
pop
mov
add
dec
xchg
aaa
ja
push
pop
daa
lods
dec
pop
jne
loopne
movs
(bad)
xlat
mov
sub
(bad)
repz
or
cmp
and
shl
push
mov
test
call
data16
js
mov
nop
mov
or
mov
movs
popa
push
adc
test
jmp
aam
call
test
inc
add
and
test
push
je
sti
or
xchg
inc
xchg
and
add
call
mov
dec
adc
fs
cmp
stos
ins
jmp
call
repz
test
ret
mov
outs
dec
sbb
jmp
xor
or
push
loopne
hlt
dec
mov
cmp
jg
ja
jno
pop
jnp
xlat
int
adc
jmp
and
push
xor
dec
adc
in
lods
sbb
sbb
int
and
adc
rcl
xchg
test
xchg
repnz
cmp
daa
fsubr
sub
fstp
neg
les
push
cmp
loop
mov
in
sbb
mov
jno
pop
cmps
xchg
sub
(bad)
and
mov
jno
push
sub
push
mov
imul
idiv
inc
mov
pusha
jmp
in
mov
xor
test
out
jg
call
add
cmp
test
ds
or
push
xchg
adc
cli
mov
mov
add
inc
leave
pop
jns
or
nop
cmps
jnp
(bad)
dec
cmc
pmaxsw
leave
jno
pop
ret
aam
popa
mov
and
or
push
fisttp
in
mov
loop
add
xchg
inc
cs
repz
xor
adc
cmps
mov
mov
pop
aam
mov
mov
jae
stc
lahf
es
dec
mov
pop
pop
push
cmp
sbb
add
movs
mov
in
add
push
ret
push
inc
cs
jecxz
(bad)
xlat
push
jne
retf
in
shl
adc
mov
(bad)
sub
dec
cmp
fisttp
stos
or
cmps
xchg
sbb
jae
or
test
shl
addr16
gs
repnz
sub
sahf
fs
adc
test
xor
lods
(bad)
push
retf
ins
sub
imul
fwait
or
retf
sbb
(bad)
je
mov
mov
outs
xor
add
das
aam
jne
(bad)
mov
push
ins
and
or
and
mov
in
sub
loopne
call
scas
push
test
xor
sbb
mov
ds
scas
sti
and
popf
xchg
sub
cwde
aas
jae
scas
shr
leave
lock
pop
fisub
pop
dec
sbb
push
loope
jnp
imul
adc
xchg
jb
xor
jnp
scas
cdq
mul
(bad)
mov
cmp
pushf
mov
xchg
pop
dec
mov
xchg
inc
sbb
iret
bound
push
int
cmp
ret
push
arpl
call
cmp
push
and
pop
mul
dec
repz
clc
out
add
ror
xchg
jbe
fild
pop
movs
and
aad
aas
mov
movs
push
shr
repnz
jne
add
mov
cmps
je
js
add
push
xchg
ret
add
jmp
mov
fwait
xor
sub
loop
add
mov
or
(bad)
iret
je
cmp
jmp
sbb
pop
push
mov
clc
iret
xlat
cmp
sbb
movs
push
jp
stos
pop
lock
sub
ds
je
ret
ja
sbb
shl
pop
out
stos
dec
mov
mov
xor
or
or
cwde
dec
inc
into
cwde
retf
icebp
jno
xchg
clc
daa
inc
and
sar
ja
out
pop
cmp
pop
inc
dec
gs
lods
scas
ins
mov
call
stc
psrlq
ja
dec
popa
and
cmp
iret
idiv
daa
adc
xor
and
lds
mov
mov
adc
sub
test
inc
scas
ror
mov
push
lds
ret
jnp
mov
std
fwait
push
xor
addr16
lds
add
ds
cmps
xor
inc
pop
add
aad
fsubr
fdivr
aad
jmp
int
mov
jbe
xor
lods
fxch
mov
pop
sti
xchg
retf
pop
ds
add
fsubrp
bound
xchg
inc
or
push
xchg
add
ret
sti
rcr
sahf
sub
lea
movs
iret
hlt
sbb
xchg
(bad)
mov
es
pop
add
or
in
imul
pop
add
mov
(bad)
mov
scas
or
sub
pop
mov
stos
scas
sbb
loop
ds
dec
div
jge
mov
icebp
sub
mov
pop
setb
movs
push
push
test
jg
push
xlat
lea
cdq
xor
jb
push
pop
nop
lock
push
adc
adc
(bad)
jmp
outs
jmp
cmp
and
or
fidivr
pop
mov
outs
jmp
jmp
sbb
push
stos
js
aaa
retf
dec
div
ds
push
push
cmp
inc
dec
scas
sbb
lea
add
call
fs
outs
cmp
test
shr
fs
xor
sti
xor
rol
ret
push
mov
jge
js
test
mov
push
sbb
xchg
sahf
(bad)
mov
mov
ss
sbb
jl
cmp
iret
mov
retf
(bad)
clc
dec
ret
add
or
movs
repnz
into
cmp
ins
and
cld
push
xchg
inc
adc
dec
gs
test
mov
fs
and
jl
aad
int
push
adc
pop
mov
cli
hlt
push
mov
lds
stos
mov
xor
mov
div
leave
call
add
in
xchg
stos
sub
ins
fmul
jmp
cwde
nop
sub
add
jb
(bad)
jg
inc
push
clc
stos
push
mov
and
add
std
add
fstp
pop
dec
jmp
dec
adc
inc
push
xor
sbb
adc
test
cli
jne
pop
add
jo
xchg
test
int
sub
repnz
dec
adc
jl
mov
mov
sub
adc
out
test
cmc
xor
or
push
mov
and
push
in
and
pop
push
sub
mov
adc
arpl
and
dec
leave
jg
pop
data16
sahf
js
fs
jbe
shl
pop
rcr
jg
les
cmp
cmp
mov
cld
out
(bad)
fstp
push
cwde
fcmovne
jmp
in
push
mov
push
bound
stc
mov
sbb
cmps
call
push
cli
add
mov
icebp
or
mov
cdq
mov
out
into
add
push
mov
movs
fwait
xchg
cmp
pop
adc
cmp
push
push
xchg
cmc
xor
mov
mov
popa
xor
cld
push
sub
jae
xor
enter
or
and
jge
sbb
in
mov
and
movs
inc
inc
inc
mov
jnp
xchg
jmp
jae
pop
cmp
bound
mov
les
outs
or
pop
inc
mov
retf
fs
xor
mov
pop
clc
sahf
pop
aam
out
mov
pop
jns
int3
fst
push
cmp
xchg
dec
mov
jns
out
into
xchg
inc
mov
std
scas
pop
icebp
ins
jecxz
adc
mov
out
push
mov
out
adc
test
sub
outs
rcr
fisub
ins
dec
pop
out
mov
sub
ds
xor
aaa
retf
dec
push
push
in
rol
ficom
add
xlat
xchg
movs
pop
sbb
test
and
xchg
cmp
ret
dec
xor
push
mov
adc
dec
fstp
test
inc
int3
mov
lds
mov
xchg
lods
gs
xor
pop
mov
sub
push
mov
pop
js
jo
mov
sub
int
mov
out
cmp
sar
mov
ss
sbb
jnp
push
sub
jo
mov
pop
mov
adc
sub
(bad)
dec
and
sub
cmp
fld
pop
fbld
push
push
xor
fistp
and
jmp
jo
int
and
add
cmc
mov
fiadd
add
es
lds
repnz
aaa
loop
test
cvttps2pi
jecxz
repnz
inc
not
fiadd
repnz
mov
mov
bound
jle
push
sahf
xchg
lods
sbb
mov
call
jno
push
ret
fst
iret
aam
(bad)
sub
cmp
add
jge
daa
mov
fcmove
shr
mov
push
nop
pop
ja
and
or
sbb
(bad)
(bad)
xchg
cmps
mov
stos
pop
xor
sub
ficom
jo
adc
int
mov
pusha
ficom
cmps
sub
add
je
ret
xchg
pop
pop
push
or
cs
sub
push
mov
dec
ror
clc
les
out
inc
dec
test
icebp
pushf
jecxz
cli
push
enter
sub
dec
dec
fld
int
sub
and
jbe
mov
call
inc
in
or
pusha
mov
retf
mov
cmps
push
xchg
cmp
xor
retf
out
xor
xchg
dec
jb
fstp
xlat
fwait
leave
sbb
xchg
xchg
mov
pop
enter
ret
(bad)
and
mov
(bad)
mov
and
fistp
nop
fist
xchg
inc
adc
dec
lods
ins
gs
inc
(bad)
fidivr
jge
(bad)
repz
or
test
cmp
jns
adc
pop
arpl
js
sbb
je
fwait
cmps
xor
add
push
sub
add
push
push
ds
loop
or
ins
add
jmp
inc
fcmovbe
mov
imul
jns
sbb
ja
pop
mov
cmps
jp
mov
dec
sti
enter
pop
idiv
stc
test
push
(bad)
mov
push
mov
daa
imul
cmps
adc
jno
pop
into
mov
jl
mov
mov
repnz
retf
ins
scas
mov
stc
es
mov
sub
cmp
dec
push
jns
(bad)
jmp
fisub
lea
cld
push
sbb
in
xchg
lea
cmp
test
popf
inc
inc
ins
pushf
shr
adc
mov
mul
pop
and
nop
(bad)
inc
test
dec
rcl
jbe
nop
cmp
mov
xchg
mov
pop
mov
repz
jo
ins
(bad)
dec
inc
jmp
mov
xchg
push
xchg
mov
mov
int
aas
loope
ins
jne
enter
out
shl
cmps
aaa
sbb
mov
cld
mov
cmc
loop
jne
lahf
jbe
cwde
push
sub
xor
jb
xchg
js
cmp
and
int3
mov
mov
mov
div
sbb
fist
ret
add
repnz
movs
mov
imul
sahf
xchg
jmp
dec
adc
aaa
sub
and
pop
sahf
or
inc
mov
(bad)
fcom
or
adc
mov
out
cmp
adc
or
sub
mov
cmp
or
add
push
mov
test
repz
test
test
fwait
out
out
push
arpl
jecxz
jb
ror
inc
and
sub
call
or
xchg
iret
fist
and
cmp
out
out
cmp
adc
imul
test
bound
dec
test
xchg
push
int3
rol
pop
jecxz
mov
in
pop
mov
lahf
lahf
pop
mov
ss
dec
dec
stos
push
jnp
mov
push
enter
and
loop
xchg
jbe
stos
imul
or
pop
ss
or
sub
or
mov
jnp
jns
stos
add
or
and
or
inc
jbe
dec
icebp
ds
lods
inc
in
stc
or
pop
mov
imul
dec
jg
mov
cmp
lds
je
push
sbb
sub
aaa
or
in
inc
mov
cmp
leave
(bad)
mov
gs
les
push
lds
push
adc
hlt
jae
in
jp
push
fdivr
scas
jo
aaa
inc
call
mov
aas
pop
out
xchg
mov
sub
push
aaa
rcr
ds
mul
cli
(bad)
aas
sbb
ja
addr16
int3
mov
int3
adc
test
mov
repnz
popf
lock
pop
pop
dec
xchg
test
wrmsr
ins
xlat
or
cmc
je
js
and
in
(bad)
pop
icebp
mov
cmps
out
sbb
shl
pop
mov
outs
imul
lods
add
lods
jl
les
push
dec
jb
mov
xchg
call
pop
adc
(bad)
mov
out
out
fimul
xor
and
adc
scas
cmp
mov
cmps
in
fiadd
pop
pop
sub
(bad)
sub
jbe
and
cmp
out
cmp
xchg
mov
dec
lea
xchg
fsub
gs
cmp
push
sub
movs
add
lea
sti
sbb
xchg
xor
mov
mov
and
les
mov
mov
popf
mov
dec
out
fiadd
lock
dec
cmp
dec
mov
dec
clc
(bad)
stc
das
in
push
mov
(bad)
rol
and
jg
sbb
push
daa
sub
or
sbb
out
pusha
sub
test
mov
mov
inc
dec
not
(bad)
rol
(bad)
jle
neg
xor
mov
pop
cmp
fcomp
dec
xchg
cmp
jnp
jb
push
test
loop
mov
sbb
mov
sbb
and
cmps
fwait
push
daa
push
sbb
dec
pop
sub
js
(bad)
fstp
pop
adc
mov
icebp
adc
shl
pop
add
imul
stos
call
xchg
add
lds
sub
test
test
push
movs
or
mov
cdq
cmp
mov
sbb
shl
dec
scas
mov
cmp
(bad)
mov
push
loopne
and
inc
sbb
sahf
imul
adc
adc
xlat
sub
ds
bound
in
jmp
enter
jmp
or
das
mov
clc
inc
rcr
arpl
fisub
nop
dec
fs
pop
(bad)
iret
fcom
cs
cmps
int
addr16
(bad)
stos
push
pusha
and
xor
push
push
pop
fwait
and
inc
xchg
mov
mov
sbb
test
test
div
es
popf
in
inc
or
xchg
sbb
imul
ds
push
add
iret
jae
sub
(bad)
je
gs
inc
pop
icebp
mov
inc
cmp
loopne
xchg
imul
adc
push
xchg
pop
push
(bad)
daa
(bad)
or
xor
inc
mov
pop
repz
pop
push
cmp
pop
or
(bad)
push
js
popf
sbb
lock
mov
into
test
jne
inc
and
cmp
xor
in
fist
xchg
xor
mov
push
(bad)
call
aaa
leave
and
sub
aaa
inc
jo
imul
xor
and
push
push
and
ret
jle
or
scas
sbb
in
imul
aas
shl
dec
es
in
fucom
jge
scas
(bad)
sar
cmp
xor
xchg
cld
cdq
inc
jne
sbb
sbb
test
adc
push
and
sbb
call
jbe
adc
pop
cmc
pushf
rcl
cdq
jnp
fs
iret
pop
pop
icebp
jns
sub
push
cmp
push
mov
adc
push
mov
cdq
in
fistp
movs
test
add
mov
and
mov
jmp
push
shl
xchg
test
mov
pop
push
sar
xchg
mov
adc
xor
fwait
and
xchg
mov
cwde
pop
lds
or
push
outs
push
push
js
in
push
loopne
in
pop
loop
cld
jecxz
fs
loopne
mov
call
dec
adc
es
sub
sbb
pop
in
dec
pop
fld
jnp
aam
loop
mov
sub
sbb
inc
adc
xchg
sbb
sbb
inc
fcos
lds
pop
stos
mov
lods
and
jnp
test
test
fild
cmps
repnz
iret
fisttp
xor
jns
inc
fwait
repnz
xchg
aaa
add
xor
xlat
je
int3
mov
sbb
xchg
and
call
jl
lock
sub
xor
(bad)
leave
push
into
ror
jp
cmp
movs
(bad)
jg
enter
pop
dec
movs
jmp
in
scas
test
inc
lock
inc
dec
cmp
sub
cmp
mov
rcl
sub
int
inc
push
xchg
mov
dec
xor
pushf
cmp
xor
ja
ja
dec
fs
sbb
dec
pop
mov
popa
fild
inc
out
xchg
scas
push
in
and
pusha
jns
ins
pusha
test
int3
lods
sub
int
jge
mov
jmp
xor
adc
jl
stos
cmp
cmp
out
jmp
jle
and
popf
mov
sbb
xchg
pop
xchg
jb
inc
jl
jge
or
mov
inc
test
dec
jl
pop
jle
mov
cmp
xchg
psubsw
nop
xchg
lock
pop
mov
into
fidiv
push
sbb
dec
es
retf
adc
adc
shl
icebp
sub
hlt
pop
mov
xchg
(bad)
jo
sbb
sbb
mov
and
jg
sub
retf
sub
mul
fld
fisttp
cli
aam
or
cmp
sbb
inc
push
and
call
loopne
jmp
jo
cmp
xchg
and
test
popf
xor
aad
mov
pop
(bad)
leave
mov
cmc
push
mov
cmc
repz
sub
pop
cmps
dec
ds
cmps
outs
add
ss
jmp
jg
push
cmp
ins
mov
mov
in
out
lahf
jmp
push
jle
pop
clc
inc
pop
ja
adc
lods
jae
arpl
xor
xor
je
dec
loopne
sub
xchg
dec
bound
mov
rcr
and
push
cmp
xor
dec
jp
(bad)
push
outs
lds
add
mov
and
js
iret
(bad)
pop
jns
cmp
xchg
mov
sub
add
xchg
arpl
int3
or
jle
mov
data16
mov
out
jnp
adc
leave
fidivr
mov
sbb
ins
mov
push
adc
push
pop
push
inc
in
mov
sub
adc
mov
pushf
test
add
call
mov
mov
xor
out
lock
jo
mov
mov
ins
sahf
sahf
adc
and
dec
push
int3
sub
int
or
fsubr
or
mov
loope
gs
mov
push
dec
pop
sbb
imul
cmp
fst
shl
xchg
loopne
xchg
inc
jmp
test
and
outs
sti
add
les
fs
mov
(bad)
xchg
sub
stos
call
inc
pop
pop
adc
dec
(bad)
sub
inc
adc
and
imul
mov
add
jno
adc
loope
or
scas
popa
aas
out
loop
enter
mov
out
mov
xchg
sub
fst
dec
push
jnp
xchg
sti
dec
sar
inc
ret
push
push
xor
push
xchg
mov
inc
ss
push
rcr
xchg
jb
hlt
pop
sar
test
push
push
inc
fsubr
and
ss
movs
add
dec
fild
add
es
pusha
push
pop
sbb
xor
add
pop
inc
loop
inc
repz
pop
test
stos
lahf
or
dec
jl
inc
or
dec
int3
in
pop
popa
call
mov
fild
push
cmp
es
add
mov
and
lods
xchg
pushf
add
mov
xor
and
mov
cpuid
mov
std
mov
jg
pop
cwde
jne
nop
ror
nop
in
jno
stos
lds
retf
data16
stc
jl
shr
dec
or
or
mov
retf
xchg
jg
dec
add
xor
mov
cmp
add
popa
mov
movs
mov
and
fmul
gs
adc
shl
mov
cwde
mov
int
adc
in
jbe
jne
daa
icebp
mov
inc
ret
cmp
inc
into
rcr
jecxz
sbb
iret
test
pop
outs
pop
mov
outs
mov
inc
xchg
dec
inc
pop
pushf
xchg
les
adc
aas
jmp
push
jns
in
push
mov
mov
pop
lods
or
or
inc
je
add
mov
sub
add
aas
xor
repnz
aam
arpl
and
leave
pusha
dec
(bad)
mov
adc
aam
shl
(bad)
mov
jmp
lods
cmps
movs
jbe
push
xor
push
kmovw
jp
(bad)
int
pop
inc
jg
mov
aam
ret
or
dec
iret
loop
test
dec
ret
mov
cmp
das
sbb
add
push
push
xchg
or
ins
add
iret
aam
imul
ins
mov
sub
call
out
pusha
inc
mov
mov
imul
pop
dec
retf
jle
out
push
mov
mov
ins
push
xchg
pop
jnp
jo
leave
cli
imul
add
imul
rcl
dec
or
outs
sbb
mov
loope
dec
push
pop
cli
fdiv
aaa
push
pop
aam
and
movs
jge
es
pop
sahf
xor
test
cmp
xchg
out
out
ins
inc
xchg
jo
in
inc
or
ins
inc
push
xor
pop
imul
sub
leave
aas
add
adc
scas
popf
pushf
imul
xchg
je
or
sbb
cwde
lods
sahf
aaa
pushf
(bad)
in
out
jmp
pusha
dec
in
push
test
dec
mov
add
outs
cli
pop
jmp
out
or
mov
sbb
xchg
cmps
mov
mov
(bad)
fcom
sub
and
push
jne
pop
jmp
mov
cdq
out
push
add
aam
movs
push
rcl
sahf
pop
jnp
pop
call
clc
adc
cmps
ret
mov
mov
rcr
movs
sbb
lahf
inc
cdq
repz
js
cdq
dec
dec
jp
sbb
mov
adc
in
xchg
pop
aas
or
shl
ins
push
sub
inc
sub
mov
fs
je
and
cli
lea
nop
aaa
mul
add
aas
sub
ret
call
xor
push
inc
cmc
xor
test
outs
pop
ja
movs
ror
xor
cmp
sub
cmp
movs
jns
loop
xchg
adc
outs
push
adc
fnstsw
stos
scas
mov
stos
repz
enter
cmc
pop
shl
scas
je
(bad)
mov
jp
stos
icebp
(bad)
mov
jnp
push
jbe
fcomp
push
repz
(bad)
je
fs
xadd
sbb
lahf
inc
pop
or
pop
cmp
mov
jnp
or
aam
pop
push
mov
aam
loope
mov
imul
cmps
stos
and
push
and
icebp
loope
scas
push
aas
iret
sti
jo
mov
leave
cmp
loop
js
push
idiv
or
hlt
and
and
add
pop
shr
push
enter
icebp
fcmovnb
sbb
rcl
mov
stos
lea
sbb
clc
pusha
fs
(bad)
ins
cwde
mov
dec
mov
ds
xor
pop
sahf
xor
inc
inc
push
and
lock
cmp
(bad)
fbstp
dec
fdiv
mov
dec
loope
mov
inc
dec
cs
rcl
sbb
out
and
adc
rol
pop
nop
dec
mov
adc
int
repnz
and
mov
shl
xchg
or
imul
mov
xchg
sbb
call
div
cmp
sub
pusha
out
dec
std
jmp
dec
(bad)
aad
aad
imul
jne
add
stos
clc
mov
inc
push
out
(bad)
cli
pop
test
out
aam
repz
ret
in
imul
mov
les
pop
imul
arpl
mov
cmp
jbe
pop
xchg
mov
add
push
add
fmul
mov
(bad)
out
sahf
in
push
shl
and
in
pop
in
inc
xchg
fidivr
pushf
mov
in
mov
test
adc
test
lods
test
push
inc
retf
scas
add
in
nop
add
pop
cmp
adc
bound
lods
popf
lahf
dec
mov
mov
mov
and
pop
inc
pusha
push
xchg
cwde
dec
retf
lods
in
sbb
mov
sahf
sub
pop
jno
mov
mov
jp
sbb
mov
hlt
sub
add
dec
int3
test
dec
das
sbb
and
mov
add
aad
pusha
and
imul
mov
fs
scas
js
hlt
fsubr
test
add
pop
rol
mov
mov
push
adc
neg
mov
pop
rol
ror
clc
lods
inc
fst
aad
sub
int3
jle
(bad)
aas
adc
xor
mov
ins
out
test
(bad)
out
loop
adc
jnp
jne
into
mov
sbb
sbb
sbb
mov
fidiv
xchg
xor
push
push
jns
mov
mov
jns
mov
lds
(bad)
add
inc
stc
cwde
pusha
ja
cmps
xor
rcr
jg
fimul
(bad)
sbb
ds
mov
cmps
mov
pop
mov
aam
in
(bad)
int
cmp
std
inc
addr16
xchg
xchg
jge
and
jmp
cmp
xor
xchg
and
pop
leave
data16
(bad)
xlat
xchg
adc
pop
xchg
jmp
mov
fabs
push
jmp
and
rcl
mul
test
outs
pop
mov
mov
cmps
jbe
std
std
lea
lds
(bad)
pop
and
mov
dec
mov
xor
cmp
pop
loopne
and
push
pop
sub
sbb
mov
mov
or
fwait
or
jns
jl
sbb
and
xchg
add
sub
mov
cmp
xchg
out
fidivr
in
mov
fiadd
mov
add
mul
data16
iret
mov
xchg
pop
leave
test
fnstenv
cmp
fistp
and
inc
adc
push
pushf
xor
retf
or
dec
jp
sub
sub
jnp
jmp
loop
fs
or
push
imul
daa
test
push
inc
imul
sbb
call
xchg
ins
add
cmps
sub
jg
add
mov
addr16
ret
and
add
aaa
ins
mov
or
inc
mov
jne
call
and
xor
mov
std
stos
jmp
inc
cmp
push
push
loop
add
repnz
(bad)
xor
xchg
popa
popa
pop
enter
lahf
dec
imul
xor
pause
sub
nop
inc
les
push
std
and
xchg
test
pop
mov
outs
data16
(bad)
ficomp
loopne
sar
cmp
ret
shl
sub
and
shr
xor
cmp
sub
ins
(bad)
push
inc
pop
or
mov
add
test
push
sti
jno
mov
cs
data16
in
mov
mov
or
cmp
cmc
jbe
iret
cmp
in
in
jno
add
aaa
aas
jae
pop
test
jb
stos
mov
cmp
mov
cmp
hlt
dec
mov
movs
jp
push
xor
push
mov
mov
dec
sbb
(bad)
xlat
sbb
jbe
ins
outs
cmp
xchg
mov
inc
cwde
push
leave
add
xor
push
aad
jb
and
cmps
mov
mov
mov
push
mov
popa
test
lds
xchg
outs
mov
addr16
or
sbb
and
inc
ss
adc
pop
and
out
dec
dec
in
(bad)
xchg
push
fdiv
(bad)
mov
and
xchg
fsub
or
and
lods
shl
leave
fidiv
pushf
mov
int3
xchg
loop
jl
arpl
mov
mov
mov
loopne
push
sbb
std
scas
icebp
cmp
dec
ds
lea
pop
mov
int
icebp
push
mov
mov
xchg
adc
loopne
mov
gs
sub
inc
aaa
dec
cwde
mov
push
cmp
push
dec
add
add
arpl
inc
pop
jmp
mov
dec
jl
jns
out
mov
cmps
pop
dec
outs
cs
mov
push
add
mov
hlt
mov
popa
(bad)
out
adc
mov
ja
mov
popa
retf
shl
sub
mov
jp
push
cmp
xchg
movs
xor
cmp
and
shl
push
or
xchg
cmp
mov
xchg
sub
jno
and
iret
sub
mov
sbb
xchg
and
sub
cmc
jmp
scas
out
jmp
cmps
es
sbb
rcl
jp
out
test
sbb
not
mov
into
(bad)
mov
jo
add
out
dec
scas
pop
cmp
into
out
sub
jmp
jno
out
xor
jne
dec
es
cmp
mov
loope
repz
inc
and
test
ror
inc
dec
(bad)
mov
xchg
pop
lods
push
iret
lods
dec
push
movs
fld
scas
pop
add
add
push
in
add
xlat
and
jb
xchg
std
and
aaa
xchg
inc
pop
int
mov
test
mov
nop
sub
movs
shr
or
push
xchg
inc
(bad)
fmul
inc
outs
mov
sti
pop
dec
add
xor
xchg
pop
test
aas
daa
lds
mov
pop
push
ret
movs
out
mov
test
sbb
pop
and
mov
in
jp
lahf
stos
fnstcw
adc
in
adc
lahf
dec
push
push
push
aaa
btr
add
jl
and
xchg
xor
neg
gs
mov
fldcw
into
mov
iret
pop
push
cwde
aas
retf
inc
cmc
jmp
call
outs
loop
pop
pop
xchg
call
int3
nop
pop
jb
and
fprem
xchg
sbb
adc
test
sbb
jecxz
mov
fidivr
ret
jo
(bad)
out
je
mov
(bad)
aas
mov
mov
call
push
(bad)
popa
lock
pop
repz
test
int3
hlt
aad
test
mov
ja
hlt
sbb
leave
ss
lods
leave
cmp
cmps
sub
cmp
inc
xchg
arpl
int3
rep
(bad)
cli
mov
push
push
mov
xor
mov
data16
jae
bound
push
or
stos
ja
pop
loop
cwde
jmp
dec
add
movs
adc
mov
fild
repnz
je
jp
ds
add
jns
pop
cmps
cld
mov
fsubr
push
mov
or
dec
ja
xchg
das
stos
loopne
aam
not
and
xor
retf
inc
push
repz
test
jne
mov
add
jmp
sub
outs
imul
cli
and
fcom
mov
arpl
fisttp
jns
adc
aas
mov
mov
adc
cli
bswap
xor
sahf
xor
(bad)
inc
pop
into
adc
test
mov
fldenv
push
je
sbb
sar
xor
(bad)
nop
pop
movs
fsub
dec
scas
call
adc
mov
sbb
and
fbstp
mov
int
xor
jae
xor
mov
push
and
mov
and
and
pop
xchg
(bad)
lahf
adc
cdq
sub
add
sbb
cmps
xchg
sahf
(bad)
int
inc
mov
lds
mov
pop
std
pop
pop
sub
xchg
pop
xor
call
arpl
loopne
mov
lods
pushaw
mov
pop
or
jmp
mov
xor
sbb
rcl
adc
rcl
jns
or
inc
or
in
jmp
jb
cwde
and
shl
cmps
dec
rol
and
and
mov
and
adc
sub
xlat
cmp
add
xchg
shl
mov
sar
loope
dec
leave
dec
mov
test
lods
scas
xchg
aad
arpl
(bad)
fimul
mov
(bad)
jmp
sti
mov
rol
mov
out
jle
mov
add
mov
sub
pusha
sbb
or
sar
(bad)
pop
push
mov
xchg
fisubr
icebp
sub
out
stc
lahf
or
bnd
jmp
push
outs
pop
div
and
cli
mov
sbb
inc
sub
add
mov
xchg
aas
cmps
ins
lahf
or
push
out
jne
pushf
cmp
and
pop
loope
(bad)
fmul
lods
xchg
mov
shr
mov
sub
mov
pop
dec
mov
mov
stc
push
out
dec
xchg
add
cmp
fiadd
daa
out
mov
cli
dec
(bad)
dec
inc
movs
jg
xor
retf
inc
mov
jbe
rcl
ret
mov
sbb
ins
push
scas
dec
jno
cmp
fsub
ficomp
push
jae
repnz
sub
ins
(bad)
mov
(bad)
mov
mov
push
mov
pop
scas
(bad)
lock
mov
(bad)
adc
inc
fstp
pop
mov
push
xchg
nop
movs
repz
test
(bad)
push
adc
es
es
ds
push
and
dec
and
dec
inc
ss
lds
pop
test
loop
add
nop
mov
ds
push
dec
das
int3
js
jle
scas
addr16
sub
out
inc
jp
icebp
sbb
xchg
(bad)
stos
jnp
lock
data16
add
aad
loop
mov
das
shl
mov
or
xlat
out
lahf
mov
into
sbb
jne
stos
(bad)
adc
iret
add
sbb
cmp
mov
stc
sub
out
inc
adc
jmp
(bad)
pop
ret
xor
(bad)
movs
cmp
cmc
or
or
mov
add
fistp
fnsave
enter
fwait
jns
movs
or
pusha
imul
ja
cmp
(bad)
pop
lea
dec
ret
mov
je
xchg
push
(bad)
xchg
call
push
dec
adc
sahf
test
mov
mov
push
add
cmps
or
das
add
fcom
(bad)
fld
sti
push
icebp
call
stos
pop
aam
stc
sbb
push
arpl
and
imul
movs
scas
(bad)
js
add
jmp
movs
sub
ret
mov
outs
fist
test
inc
aaa
push
jo
into
pop
pop
jne
mov
dec
cdq
repnz
or
mov
rcl
int3
mov
stos
or
mov
ss
push
mov
call
inc
dec
jmp
fiadd
and
call
cs
adc
scas
fbld
sar
adc
inc
aad
dec
(bad)
dec
fcmovne
(bad)
pop
into
mov
pop
retf
mov
xor
sub
mov
xchg
xor
xchg
stc
rcr
mov
inc
movs
test
push
xchg
fsubr
cmps
fadd
test
pop
lods
fsub
push
loop
jns
sbb
xchg
cmp
mov
adc
sbb
mov
and
jae
pop
movs
cli
pop
loop
pop
push
sar
inc
fistp
dec
out
fst
mov
mov
sub
push
mov
popa
fwait
and
jbe
xchg
sub
pop
mov
mov
mov
out
outs
xchg
lea
cli
es
jbe
xchg
mov
pop
or
push
(bad)
xor
in
(bad)
iret
xchg
inc
fldenv
inc
(bad)
cmps
mov
adc
add
pop
loopne
test
mov
std
bound
xor
xchg
mov
sbb
(bad)
enter
add
sbb
mul
inc
mov
neg
cmps
dec
mov
mov
add
adc
mov
pop
sub
pop
(bad)
xor
pop
test
sub
lea
dec
popf
lods
inc
mov
push
stos
jno
mov
shl
mov
cwde
dec
mov
test
jns
dec
lods
out
jmp
push
mov
xor
jno
test
jns
mov
out
inc
dec
(bad)
(bad)
leave
pop
fcomp
and
sbb
ret
pop
aaa
sub
popf
jp
cwde
or
leave
mov
xchg
jmp
mov
sub
scas
add
loopne
dec
jl
inc
repnz
movs
(bad)
xor
mov
xchg
(bad)
and
pop
iret
push
(bad)
jmp
(bad)
pop
push
mov
pop
jl
mov
int
mov
jno
pop
cdq
push
addr16
outs
retf
es
dec
aad
jge
mov
pop
leave
or
xchg
mov
inc
pop
and
cwde
mov
sbb
sar
cmp
sar
or
fsub
mov
(bad)
scas
or
cmp
mov
mov
ret
cdq
in
fistp
cmps
dec
sub
test
scas
cld
push
xchg
sbb
das
xchg
hlt
push
sub
bound
sar
icebp
lods
pop
inc
test
cmc
imul
mov
test
rcl
pop
or
xor
inc
arpl
out
and
nop
push
leave
lods
test
inc
and
pushf
jmp
loopne
ss
mov
fcmovbe
mov
fs
cld
mov
xor
test
dec
cdq
fs
cmps
retf
aaa
shr
pop
mov
xchg
adc
ins
leave
movs
sub
add
loop
xchg
mov
sub
iret
dec
shr
adc
shl
cmp
in
mov
adc
push
adc
rol
jle
les
jbe
inc
mov
and
fadd
mov
pop
sbb
cmp
and
add
cmp
arpl
imul
push
rol
enter
movs
pop
out
ror
jmp
xor
pop
ss
jmp
mov
test
rcr
int
dec
pop
jno
sub
rol
inc
jno
stos
(bad)
or
add
push
push
and
cmc
mov
add
rcl
mov
jmp
sbb
inc
stos
cld
movs
pop
adc
sub
xchg
cmps
icebp
arpl
and
dec
adc
lods
pop
cmp
push
stc
cmp
in
lock
cwde
add
rcr
cwde
(bad)
pop
out
(bad)
(bad)
out
sbb
cmp
cdq
cmps
adc
mov
jg
cmp
inc
jbe
xor
sub
jbe
das
adc
mov
pushf
test
xchg
and
dec
(bad)
adc
dec
shrd
xchg
js
xor
mov
(bad)
push
xchg
popf
inc
pusha
push
popf
bound
mov
xchg
pop
or
(bad)
fstp
stc
or
ret
pop
aad
add
les
loopne
dec
cmp
jp
movs
shl
mov
xchg
test
(bad)
mov
sbb
hlt
jp
int
in
test
jne
adc
mov
cmps
mov
mov
(bad)
sbb
lahf
mov
jmp
push
in
popf
sbb
mov
push
jne
stos
int
push
push
scas
mov
rep
stc
in
jle
mov
jnp
sbb
leave
jno
es
(bad)
into
rol
adc
fdivr
inc
xchg
retf
loope
jg
mov
out
mov
xchg
test
repnz
(bad)
retf
inc
adc
fadd
xchg
fld
data16
ins
pop
cmp
das
ret
and
adc
xor
push
pop
mov
cmc
jbe
mov
pop
aaa
jbe
paddusw
cmps
sub
inc
mov
scas
pushf
dec
aad
push
and
test
and
xchg
movs
cmps
jno
loopne
ret
sbb
addr16
out
sti
lock
mov
mov
push
pusha
push
sbb
and
or
stos
jne
retf
pop
cmp
sbb
push
js
add
dec
in
test
or
and
pop
nop
mov
mov
pop
push
lods
sti
sti
scas
adc
cli
dec
mov
(bad)
fucom
jl
test
push
push
pop
out
adc
cmp
xor
mov
mov
inc
jge
dec
xor
jae
pop
push
lods
xor
inc
jo
pop
xor
dec
loope
dec
pop
xor
repnz
in
mov
mov
sbb
imul
ret
daa
rcr
loop
mov
mov
and
cmp
mov
sub
pushf
push
out
mov
call
mov
adc
or
popa
push
cld
stos
repz
mov
or
pop
cmps
in
add
aad
push
pop
sub
repnz
or
mov
push
jmp
in
leave
pop
das
dec
fdivr
into
test
mov
cmps
fmul
(bad)
int3
mov
lods
out
paddsw
sbb
cmps
std
(bad)
mov
pop
out
into
sti
cmp
shl
or
cmp
in
test
mov
add
mov
scas
dec
retf
les
call
sub
mov
out
repnz
das
ret
lods
jmp
jno
hlt
icebp
(bad)
not
clc
gs
hlt
fwait
data16
sub
jnp
mov
shr
ss
mov
mov
ja
lock
mov
pop
and
push
in
into
into
inc
cmp
cmps
pop
xor
xchg
xchg
test
icebp
cwde
fwait
mov
or
jmp
pop
mov
jno
jb
ss
ds
cmp
jp
or
jb
enter
jo
retf
push
mov
sahf
(bad)
jle
imul
imul
add
popf
or
imul
in
(bad)
jle
sbb
sti
xor
sbb
xor
int3
mov
fadd
dec
jns
adc
icebp
cmp
mov
mov
mov
shl
cmc
hlt
sub
xor
scas
or
mov
fsubr
xlat
out
mov
add
jp
fst
int
push
es
push
ror
js
test
jge
mov
fcom
(bad)
push
push
repz
mov
push
mov
rcl
push
and
push
js
sbb
mov
inc
and
xchg
adc
add
es
add
aas
pop
and
push
push
dec
addr16
aas
stos
jo
sbb
pop
push
or
jg
pop
mov
adc
or
and
pop
cmp
mov
ret
sbb
sub
push
mov
xchg
mov
add
mov
or
mov
push
ror
aaa
call
push
dec
test
jecxz
mov
jmp
aam
jmp
mov
fadd
add
test
push
xchg
movs
cs
popa
xlat
jns
pop
int3
ret
in
(bad)
mov
add
loop
cwde
xor
ror
in
mov
les
sub
hlt
mov
daa
popf
pop
inc
test
jl
sbb
enter
add
xor
inc
repnz
or
jge
(bad)
cmp
shl
rcl
in
or
mov
cmp
cmp
or
or
adc
fnsetpm(287
fild
sub
sub
adc
xor
in
in
inc
cwde
in
xor
out
es
(bad)
in
sub
adc
scas
cmp
or
int
or
fiadd
ja
test
sub
loop
push
xor
data16
es
inc
mov
sub
retf
xchg
lea
test
adc
retf
out
cmp
call
cwde
push
xchg
je
retf
sbb
wrmsr
pop
cdq
push
movs
test
jmp
mov
and
add
stos
fs
std
loope
or
ret
repnz
pop
hlt
and
add
(bad)
(bad)
mov
fsubr
loopne
das
loop
ror
sub
das
repz
clc
mov
mov
loope
xchg
fwait
jle
call
int3
pop
mov
xor
sbb
push
mov
test
ror
fld
or
jle
ret
xchg
test
in
das
jbe
in
pushf
shl
(bad)
hlt
(bad)
push
mov
stc
mov
(bad)
mov
div
mov
ins
cmp
vmread
push
dec
xor
mov
or
add
cmp
ja
lock
nop
outs
inc
mov
cli
(bad)
jmp
rol
rcl
ss
enter
cmovl
sbb
js
mov
and
adc
add
ins
cmps
xlat
add
mov
ret
ja
dec
sub
cmp
xor
and
ret
ror
push
imul
mov
cdq
adc
hlt
pop
repnz
inc
mov
xor
test
add
pop
cmp
(bad)
repz
sub
clc
xchg
lods
sar
add
inc
outs
jb
cmp
inc
dec
dec
lock
adc
data16
loop
cli
mov
(bad)
int
clc
shr
(bad)
retf
mov
dec
push
inc
repnz
test
(bad)
mov
cli
sbb
sbb
xchg
adc
ins
stos
(bad)
xor
clc
and
mov
daa
int
and
or
test
mov
enter
sbb
mov
movs
loop
pushf
dec
sub
rol
xchg
xor
inc
inc
(bad)
lods
or
sbb
adc
mov
enter
loope
jno
mov
mov
clc
xor
pop
out
pop
mov
outs
fs
retf
pop
sbb
into
sub
cmp
cs
call
push
xchg
ror
pop
outs
ret
int3
adc
scas
outs
sbb
add
mov
dec
sub
push
pop
add
jno
clc
inc
les
add
mov
sub
jg
mov
in
jno
mov
jg
movs
shr
(bad)
leave
xor
aas
add
mov
aad
inc
lods
and
shl
aad
sub
mov
add
fstp
mov
stos
fsubr
rol
jbe
cmp
sub
sbb
lahf
cmp
adc
sbb
lods
ins
adc
in
rcl
xchg
js
call
jle
fwait
stos
daa
add
adc
test
jno
jg
fucomp
sti
mov
fwait
sti
adc
je
cmp
dec
xor
test
lea
iret
stc
mov
sbb
add
daa
cli
out
cmps
mov
push
repz
sub
clc
in
imul
add
mov
in
shl
mov
out
in
inc
cmps
ffree
push
dec
xchg
add
mov
push
std
dec
pop
sbb
or
cmp
shl
ins
out
(bad)
dec
push
rep
xchg
pop
cld
pop
call
inc
stos
pop
repnz
jns
ins
cmp
rcl
test
pushf
xor
rcr
jno
outs
call
sub
mov
pop
or
not
sar
das
sub
leave
inc
or
dec
mov
pushf
(bad)
adc
mov
xor
mov
lock
clc
cs
jo
sbb
cmovp
push
push
jecxz
cmp
div
and
icebp
out
nop
lds
ds
sbb
xor
dec
and
push
xor
ret
movs
gs
add
sbb
cld
stos
pop
into
dec
cmp
repnz
out
push
add
je
test
xchg
and
sub
jl
xchg
adc
fnstsw
sub
outs
ss
jo
dec
xchg
ror
lea
test
lods
leave
lahf
push
push
push
leave
fcom
jmp
ret
push
(bad)
sub
(bad)
in
sub
jg
cli
cmps
xor
adc
xchg
fbstp
sub
push
popa
sbb
fild
jne
movs
nop
lock
jmp
cmc
ins
sbb
xlat
push
xchg
loopne
daa
loop
xlat
jl
mov
test
mov
cmp
jb
(bad)
sahf
loope
mov
mov
cmps
mov
mov
push
push
leave
mov
fs
sub
imul
out
das
push
out
jecxz
xchg
fldenv
mov
lods
jb
arpl
mov
pop
fcmovnbe
jmp
pop
jecxz
sub
push
mov
out
push
cmps
cmovne
or
xor
cdq
imul
aaa
xchg
sbb
xchg
enter
out
fadd
pop
test
push
repnz
or
movs
or
pop
or
aam
ds
neg
xchg
cdq
mov
push
(bad)
cmp
shl
out
movs
das
push
xlat
fiadd
push
pop
sbb
mov
xor
je
enter
add
or
and
clc
data16
and
stc
test
lea
mov
dec
sub
shl
rcr
es
call
and
out
xor
sbb
pusha
popf
clc
jae
test
mov
out
jge
dec
sub
shl
test
mov
push
nop
mov
int
movs
jbe
cmp
cmp
sar
repz
push
fstp
add
or
int
call
retf
jne
js
sub
dec
push
pop
sbb
adc
test
jge
ss
mov
pop
hlt
mov
push
pusha
xchg
dec
add
mov
ret
jns
sub
enter
and
out
ror
xor
sub
or
mov
push
adc
jg
out
pop
fstp
adc
inc
inc
push
sbb
retf
(bad)
xchg
xchg
es
jg
mov
sbb
add
sub
sub
bswap
leave
lea
(bad)
sub
out
sub
or
leave
pushf
inc
sbb
popf
enter
cmp
or
cdq
aaa
gs
sbb
mov
dec
cmp
stos
lock
shl
cmp
pop
out
lock
jecxz
lock
lods
mov
sbb
xchg
push
int
int
add
into
xor
jae
mov
dec
js
pop
dec
adc
mov
popf
rcl
inc
or
mov
jge
fsub
cmp
add
fs
ret
aam
test
dec
out
lahf
ds
sub
(bad)
scas
retf
sbb
and
inc
sub
inc
and
dec
fadd
daa
fs
mov
mov
mov
stos
aad
aas
mov
into
fcomp
or
sbb
add
jno
or
icebp
push
(bad)
test
in
push
mov
jmp
ins
in
leave
inc
push
add
stos
mov
jmp
repz
retf
sbb
retf
loop
inc
push
cld
pop
pop
int3
sub
in
ds
stos
rcl
adc
sub
xchg
push
repz
adc
mov
pop
cmp
jp
lods
xchg
xor
test
and
adc
jo
std
sti
dec
xor
jmp
sbb
leave
inc
std
dec
aam
or
dec
shr
arpl
imul
push
ror
pop
inc
in
aam
jmp
icebp
mov
lds
jp
test
enter
push
xchg
les
cmps
xchg
cmp
add
bound
add
scas
push
movs
pop
mov
or
inc
mov
out
sbb
jle
cmps
cs
iret
dec
movs
xor
xchg
loopne
push
test
(bad)
jb
mov
or
out
ins
mov
mov
inc
sub
mov
jmp
dec
imul
inc
out
rcl
cdq
jl
fs
inc
sti
and
xchg
stos
add
outs
pop
sub
pop
aad
cs
xchg
cli
mov
mov
or
out
jno
push
out
push
lahf
add
add
mov
cld
shr
ins
popa
sub
xlat
jno
(bad)
(bad)
fadd
test
ret
in
test
cmps
ins
out
fidivr
sbb
movs
icebp
and
jns
sub
push
(bad)
lds
push
push
mov
shl
add
inc
pop
adc
xor
test
sub
imul
or
push
call
sbb
jl
xor
mov
mov
and
adc
adc
mov
pop
xor
out
jmp
jge
cmps
mov
out
fst
sub
ins
out
mov
call
mov
push
add
push
cmp
inc
dec
stc
cmp
inc
inc
mov
cmc
cmp
lock
push
mov
xor
mov
(bad)
cli
pushf
(bad)
(bad)
jmp
cmc
imul
stos
sub
add
xchg
adc
cmps
inc
or
stc
fcomp
fiadd
mov
ins
outs
push
add
gs
popf
scas
stc
adc
int
ins
(bad)
loop
xchg
mov
aad
xor
mov
jbe
icebp
int3
inc
add
adc
ret
xchg
stos
push
div
pop
jmp
ja
ins
iret
fnstsw
push
ins
push
mov
add
retf
mov
ror
pop
retf
daa
outs
movs
stos
inc
sar
xor
lods
add
pusha
loop
imul
test
stos
fmul
add
call
or
xchg
out
jmp
add
ja
lods
mov
cmps
xor
fscale
push
loope
xchg
dec
push
inc
rcr
in
mov
pop
imul
ins
mov
mov
dec
ja
inc
loopne
retf
xchg
xchg
int3
xchg
xlat
jp
fst
cmp
cmp
push
in
loop
push
clc
xchg
adc
push
in
or
sub
(bad)
in
in
push
jle
mov
sub
adc
popf
(bad)
jmp
in
mov
loop
mov
sub
popa
(bad)
xchg
aad
pop
sub
in
lahf
dec
dec
into
fsub
pop
or
bound
aad
das
lods
and
pop
aas
mov
pop
shl
fdivr
cmps
call
call
dec
inc
loope
mov
and
mov
rcr
cdq
mov
adc
adc
push
push
cld
(bad)
lahf
jae
sbb
loop
fisttp
xor
(bad)
(bad)
outs
stos
out
adc
mov
js
cmp
cmp
loope
pushf
fwait
or
cs
ins
es
pop
icebp
jp
push
dec
retf
vpavgw
cdq
xor
fisubr
inc
xor
bound
int3
(bad)
push
cmp
repnz
lods
cmp
out
sbb
je
pop
mov
nop
call
neg
cld
mov
sub
jg
xlat
sti
mov
cmp
lea
popf
clc
retf
clc
adc
push
jmp
aam
(bad)
push
pop
dec
jecxz
std
sub
icebp
pop
adc
mov
mov
xchg
pop
imul
ja
xor
mov
sub
mov
adc
dec
dec
in
push
xchg
pop
fldenv
and
and
xor
pop
scas
inc
into
push
outs
sub
sbb
fst
fistp
jmp
sub
dec
dec
cwde
add
rcl
aaa
and
loopne
(bad)
js
pop
mov
xchg
inc
in
adc
cmp
xor
(bad)
gs
in
jecxz
stc
mov
inc
pusha
sub
dec
jp
xchg
es
sub
cmp
scas
out
lea
(bad)
or
ins
xchg
jl
jl
xor
inc
mov
in
push
jmp
aaa
rol
ins
outs
(bad)
mov
xor
imul
in
mov
rcr
or
hlt
fwait
jbe
popa
loope
(bad)
movs
dec
cmps
popa
sub
stc
test
jno
push
das
imul
pop
lds
push
mov
jmp
sub
mov
ror
sbb
mov
test
pop
jne
shl
bound
and
in
jns
lock
mul
jno
(bad)
xor
cmp
jbe
cmp
add
lea
and
mov
mov
jge
aaa
out
jecxz
and
add
pushf
dec
retf
ins
mov
pop
jp
pusha
rol
(bad)
and
loopne
stos
fucom
inc
pushf
dec
arpl
aaa
push
mov
jmp
and
mov
fcom
icebp
or
retf
xchg
in
mov
dec
fwait
sub
shr
movs
ja
movntq
mov
je
movs
data16
jns
jmp
sub
or
sub
(bad)
cld
sbb
shl
push
es
jge
dec
test
sti
sbb
push
adc
jl
xchg
loope
sbb
fs
sbb
je
mov
mov
mov
enter
nop
fisubr
out
push
jmp
dec
dec
pop
push
popf
(bad)
int
pop
pusha
sbb
outs
push
pop
outs
mov
cmc
std
movs
mov
jmp
add
add
aad
aaa
adc
bound
dec
stc
ffree
into
stos
popf
pop
mov
cmp
ins
mov
push
xchg
outs
popa
sub
std
and
dec
sbb
imul
not
mov
jne
jo
clc
or
addr16
ror
leave
in
fcomp
(bad)
adc
mov
aas
xor
movs
adc
in
adc
dec
inc
clc
not
call
repnz
xor
div
inc
mov
call
nop
sbb
cmc
and
je
pop
jb
mov
push
inc
dec
push
adc
outs
and
sub
xlat
pop
xor
movs
stc
mov
jae
cmp
sbb
xchg
inc
test
xor
mov
ja
cmp
repz
scas
xor
cmp
out
fistp
out
or
mov
jle
push
push
vxorps
add
cmp
or
and
les
cmp
cli
ret
mov
(bad)
cli
int3
lock
sub
fmulp
xor
in
in
or
pop
xchg
jmp
ret
fs
lds
pusha
sbb
xchg
cli
pop
(bad)
sbb
pop
movs
pop
movs
push
mov
into
bound
ja
ins
xor
mov
lds
or
fdivr
add
loop
mov
mov
cmp
scas
sub
pop
jns
fiadd
lahf
int3
fistp
or
ins
mov
clc
cld
mov
inc
(bad)
or
cwde
or
push
cld
outs
mov
ss
clc
daa
cmp
dec
movs
mov
imul
lods
popa
scas
and
and
rcl
pop
shr
and
out
popf
xchg
inc
pop
rol
add
jp
shl
daa
retf
mov
mov
cmp
push
test
les
pop
es
outs
and
movs
cli
lods
pop
mov
js
jg
cwde
xchg
addr16
leave
into
xchg
mov
mov
cmp
(bad)
dec
aas
mov
dec
sub
jae
or
shl
sbb
sub
adc
fldenv
sub
lds
stos
dec
cmp
mov
cmp
lods
mov
sbb
and
mov
mov
and
mov
sahf
cmp
mov
pop
movs
push
pushw
adc
je
or
pop
cli
jmp
xchg
(bad)
sbb
dec
sub
int3
call
mov
or
cmp
jnp
sub
ja
or
mov
mov
and
stos
fild
xor
push
cmp
cmp
icebp
ss
or
or
jmp
mov
(bad)
inc
mov
sub
retf
int3
cmp
shl
xor
mov
ja
fisttp
retf
sub
retf
pop
das
(bad)
mov
fbld
enter
inc
sub
(bad)
xor
or
rcr
nop
call
xchg
sub
jo
nop
test
cdq
fmul
dec
or
pusha
pop
cmp
bound
fcomp
cmp
or
popf
dec
cmps
test
sbb
push
push
sub
jb
adc
or
dec
sub
ja
dec
ret
outs
hlt
loop
ror
loop
inc
sub
pop
fst
les
xor
jmp
mov
dec
cmp
outs
sbb
lds
dec
int3
sub
dec
mov
imul
mov
sbb
mov
in
in
push
cmp
(bad)
dec
fadd
cmps
cmp
pop
pop
sbb
mov
sbb
call
or
xchg
and
sbb
cmp
mov
in
fnstsw
inc
mov
push
js
and
cmp
movs
mov
xor
mov
mov
add
test
cmps
adc
dec
bnd
xchg
mov
and
clc
and
imul
neg
jmp
in
ret
jbe
popf
ret
stos
inc
dec
aas
pusha
(bad)
xchg
push
mov
stos
mov
inc
or
loopne
sbb
push
lock
xor
xor
aas
lods
aaa
fisttp
xlat
dec
sahf
cmp
sbb
sub
inc
das
adc
and
mov
add
sub
mov
xchg
xor
jns
movs
stos
shl
lahf
das
imul
pop
out
mov
jb
loope
icebp
push
arpl
pop
shl
adc
ret
test
mov
mov
cmp
mov
inc
mov
or
fwait
ret
test
lahf
js
dec
push
es
mov
or
bound
loope
imul
repz
mov
and
jo
daa
add
loope
dec
add
sub
mov
lea
clc
rcl
cmps
sub
or
mov
mov
inc
rcr
pusha
ror
pop
mov
inc
fdiv
sahf
call
mov
lds
jns
inc
clc
adc
jge
jecxz
leave
lds
retf
adc
push
jnp
xchg
sub
pushf
daa
and
or
sub
mov
mov
enter
jb
add
mov
stos
and
(bad)
xor
aaa
call
ins
loop
imul
int3
pop
ins
lods
pop
dec
jno
ficomp
pop
lahf
mov
frstor
xchg
ins
dec
cdq
out
bound
mov
adc
dec
jmp
int3
inc
jno
inc
and
cwde
sbb
pop
fsub
pop
cmps
(bad)
js
iret
jp
push
mov
lock
lea
adc
aam
cmp
aad
jmp
lds
(bad)
dec
cmp
xor
pop
dec
js
ret
sar
repnz
aas
movs
pop
hlt
jb
call
aas
add
mov
mov
std
jb
(bad)
fst
sbb
lods
dec
dec
xchg
mov
ss
(bad)
hlt
jmp
js
div
add
(bad)
sub
push
and
popaw
pop
test
jge
push
inc
sahf
cmp
add
(bad)
(bad)
stos
push
dec
test
call
fstp
ins
inc
jge
and
(bad)
(bad)
fadd
adc
xchg
loop
es
lahf
mov
push
mov
test
xor
(bad)
neg
pop
mov
outs
movs
xchg
push
outs
adc
mov
xor
pop
daa
aad
pop
sub
es
stos
das
adc
sub
mov
dec
(bad)
fs
xor
dec
add
repz
das
push
rcr
mov
call
ss
add
int3
xchg
arpl
and
and
es
out
mov
outs
add
stos
add
or
aam
mov
test
inc
mov
ja
scas
es
or
mov
mov
and
(bad)
sbb
push
jge
test
(bad)
mov
lods
popf
loopne
add
push
fsub
in
ficom
xchg
xor
(bad)
cmp
sbb
cwde
dec
stc
xchg
lds
adc
daa
mov
xor
and
jne
inc
inc
loopne
fstp
pop
dec
jo
pop
pop
fimul
out
loop
jecxz
retf
ins
push
mov
xor
jne
loope
push
push
sub
ror
or
and
push
add
push
xchg
mov
mov
jbe
jnp
inc
vpperm
fcom
test
pop
(bad)
push
xchg
sahf
jb
pop
ins
movq
push
xchg
(bad)
arpl
xchg
cmp
cdq
hlt
imul
bound
pop
test
mov
imul
shl
sbb
xchg
add
inc
xchg
xlat
mov
shl
mov
push
jmp
xchg
(bad)
sub
ficomp
mov
in
inc
pop
imul
or
test
aam
pop
int3
popf
ins
xchg
xchg
ret
add
ret
(bad)
xor
ins
rol
mov
inc
es
pop
cmp
test
imul
and
addr16
loope
out
sbb
sub
add
sbb
fdiv
scas
jge
adc
in
xchg
retf
cli
aad
jae
and
imul
push
mov
cwde
pop
fcomp
cmp
pop
sbb
sub
xchg
sbb
and
xchg
lds
pop
je
aam
add
jne
inc
cmp
mov
ja
push
pop
jno
pop
ins
sbb
jle
std
sahf
adc
data16
sbb
test
mov
scas
pop
mov
adc
push
push
cld
fs
repz
sar
pop
pop
test
sub
cs
pusha
xor
add
jge
ds
shr
cmp
shl
ins
les
sahf
popa
xchg
cmc
icebp
in
sbb
test
pop
lods
mov
xor
xchg
stos
loopne
aad
mov
sbb
mov
adc
popf
mov
sub
adc
fstp
cmp
psubusw
test
mov
nop
das
inc
lea
sti
test
cdq
sbb
or
mov
shl
out
stc
pushf
scas
xchg
adc
push
xchg
lods
add
stos
jp
test
gs
push
adc
push
or
(bad)
adc
mov
nop
xor
gs
pop
imul
in
test
mov
(bad)
jmp
rol
jmp
fldenv
dec
(bad)
in
cld
adc
push
rcr
imul
xor
cmc
and
rol
jge
cmp
push
je
jbe
dec
mul
cmp
inc
stos
add
sub
in
xchg
int
mov
dec
sbb
sti
addr16
es
and
push
leave
xchg
hlt
xchg
out
sub
dec
mov
loopne
mov
lea
jmp
dec
mov
jge
pop
xchg
xlat
mov
mov
aad
mov
add
cld
add
(bad)
push
sbb
rcl
push
dec
ss
fwait
inc
jle
pushf
out
push
syscall
fst
rol
in
pusha
inc
sbb
mov
mov
ret
imul
dec
cmp
lods
fld
cmp
push
pop
adc
adc
cdq
(bad)
dec
inc
movs
or
out
out
mov
sar
add
cmp
enter
mov
cmp
aaa
jg
mov
es
wrmsr
(bad)
mov
sti
push
ins
pop
mov
fcom
pop
fs
add
pop
fbstp
fadd
sub
mov
ja
lea
scas
jl
pop
inc
loop
cmp
outs
loopne
test
mov
inc
je
dec
xchg
cmp
jmp
cli
int3
or
dec
int
ja
inc
jge
rcr
jle
out
js
ins
push
test
call
add
cmc
xor
pop
in
pop
ror
arpl
shl
imul
or
fdivr
mov
(bad)
sbb
in
aad
es
(bad)
jl
push
ins
jo
icebp
push
mov
cmp
es
pusha
pop
aam
sub
(bad)
punpckhwd
out
dec
addr16
pop
gs
mov
pop
ins
leave
xchg
adc
jp
mov
(bad)
(bad)
fdiv
mov
shr
jnp
pop
fmul
sbb
lds
add
pop
xor
sti
repnz
je
xor
jne
ins
imul
rol
dec
loope
bsf
or
ret
pushf
xchg
mov
repz
mov
mov
mov
js
mov
push
frstor
dec
mov
rcl
fiadd
jbe
je
and
push
push
iret
xor
cli
test
push
jns
sub
scas
cmp
out
mov
cmps
popa
xor
shl
in
jb
aad
(bad)
les
aad
jmp
int
mov
into
outs
jecxz
dec
xchg
sar
push
arpl
repz
push
arpl
cdq
inc
dec
sub
out
pop
int3
(bad)
jge
cs
pop
dec
sbb
enter
adc
pop
xor
mov
mov
or
push
dec
inc
jecxz
mov
pop
jnp
add
push
xchg
sahf
fnsave
xchg
iret
out
sbb
mov
imul
iret
cmc
xchg
mov
cwde
and
sub
js
adc
ja
loopne
inc
jecxz
arpl
retf
out
mov
fcom
or
in
xchg
enter
not
int3
mov
fstp
test
int
lods
les
push
sub
imul
xchg
sub
pop
leave
sub
adc
cmp
test
pop
cdq
push
push
pop
cmp
mov
nop
xchg
dec
lock
cdq
xor
jecxz
fcomp
push
fst
ret
out
mov
out
leave
mov
xchg
shl
mov
jmp
call
enter
mov
and
(bad)
mov
cmp
ins
push
call
in
inc
or
mov
xor
inc
ins
add
in
(bad)
fnstcw
sub
in
mov
in
(bad)
push
iret
add
ror
test
addr16
hlt
mov
push
cwde
addr16
push
push
xor
pop
aas
nop
daa
ficom
aas
xchg
inc
(bad)
cmp
cmp
and
push
push
fstp
fild
pop
inc
nop
out
and
push
int
or
lea
jl
pop
mov
lock
add
scas
pop
or
cmp
movs
mov
cli
add
push
ror
lea
jl
movs
pop
imul
mov
jg
enter
gs
cwde
sbb
push
es
rcr
sbb
mov
stos
inc
cmp
inc
sti
push
loopne
jge
rcl
xchg
out
pop
lea
push
repz
mov
test
rcl
mov
jmp
stos
add
aam
xlat
std
and
push
inc
xor
imul
jno
cdq
jle
adc
add
mov
sahf
jno
cmps
inc
(bad)
push
aam
pop
and
scas
mov
std
jnp
xlat
mov
lock
xor
cmps
pop
(bad)
aad
add
data16
ret
ret
push
and
mov
fs
add
bound
(bad)
aam
cmp
imul
leave
inc
movs
dec
movs
xor
fwait
mov
push
mov
xor
in
push
cmc
retf
mov
out
sub
sti
xchg
pop
mov
dec
mov
popa
loop
mov
ins
sub
pop
add
mov
lods
cmps
sti
gs
dec
imul
fild
pop
and
arpl
lea
es
xchg
and
sbb
cli
dec
jnp
sub
pusha
adc
xor
push
(bad)
imul
dec
xchg
imul
sub
inc
hlt
sub
hlt
push
fisub
(bad)
stc
daa
inc
shl
mov
mov
mov
daa
rcr
push
push
idiv
idiv
into
mov
inc
pop
ret
aam
mov
xchg
or
mov
mov
addr16
pop
pop
cmps
and
jno
xor
or
sbb
xchg
enter
sbb
cs
pop
cmp
popa
mov
sahf
sahf
es
push
jns
aam
call
clc
mov
inc
out
aas
add
mov
xlat
scas
in
push
xchg
xor
pop
shr
dec
aas
jg
fsub
dec
loope
xor
push
leave
cwde
scas
movs
ins
and
sbb
in
mov
xchg
dec
add
aam
popa
push
mov
jmp
push
xor
jp
inc
ror
out
ja
sbb
stos
mov
push
shr
test
jnp
or
test
pop
ret
or
pop
mov
call
mov
sahf
add
imul
dec
arpl
mov
ss
cmc
mov
sbb
push
movs
js
test
stos
dec
daa
sbb
je
ficomp
mov
xchg
push
xor
mov
in
(bad)
call
pop
stos
fidivr
mov
xchg
or
std
stos
ja
adc
mov
call
jle
retf
adc
call
dec
push
mov
mov
inc
stos
movs
dec
sbb
sbb
pop
arpl
lea
pop
mov
adc
scas
in
adc
sbb
pusha
cli
adc
fbstp
xchg
mov
mov
aad
mov
mov
add
rcr
lock
sar
test
(bad)
add
call
pusha
sahf
sub
(bad)
mov
pop
mov
data16
sbb
repnz
pop
icebp
fsub
sub
fs
daa
(bad)
add
xchg
xchg
arpl
or
fiadd
gs
inc
sub
pop
je
add
dec
fnstcw
arpl
jge
push
and
loop
out
mov
fisttp
(bad)
mov
loop
push
jae
dec
aaa
inc
jmp
jno
ins
cdq
aas
xchg
mov
mov
(bad)
sub
and
mov
in
aaa
dec
adc
sub
mov
nop
inc
in
outs
xchg
mov
xor
cmps
pop
pop
dec
and
jb
stos
inc
push
sub
jbe
cmc
pushf
popf
cs
stos
xchg
sahf
xor
pop
push
loop
cs
int3
xor
jecxz
adc
jo
retf
aad
add
sub
add
xchg
enter
add
sbb
lea
pop
push
push
in
mov
or
iret
or
and
pushf
cmp
add
and
std
jbe
xchg
aas
jp
cmp
fwait
mov
out
aam
loope
fcomip
clc
mov
leave
test
push
cmp
out
(bad)
(bad)
gs
xchg
sbb
adc
test
dec
inc
and
ins
mov
push
pop
scas
clc
adc
jns
xor
xchg
sub
clc
inc
imul
ficomp
sbb
je
add
inc
mov
outs
scas
test
adc
int3
push
(bad)
repz
mov
mov
jno
mov
pop
sbb
push
cmp
fidivr
outs
xor
pop
dec
cwde
and
out
jge
jg
call
pop
pop
test
(bad)
and
dec
mov
ror
repnz
xchg
(bad)
jecxz
(bad)
mov
bnd
jb
cmp
or
push
sbb
lds
mov
add
or
rcr
pop
test
adc
(bad)
fidivr
xchg
sbb
retf
outs
xlat
xor
sti
repnz
les
lods
in
sub
or
test
cmp
cld
mov
mov
hlt
jo
movs
pop
retf
loop
xor
jp
repnz
add
jno
ror
cmp
xor
scas
jbe
aam
test
mov
mov
jno
mov
aas
mov
mov
(bad)
mov
loopne
inc
cmps
add
int
cmp
loop
loopne
fisttp
adc
mov
mov
push
hlt
dec
and
sbb
loopne
fadd
fcompp
mov
xor
push
jge
lea
or
jmp
pop
daa
mov
xlat
mov
inc
mov
test
jnp
repnz
mov
or
aad
dec
xor
xor
xor
movs
push
dec
sub
rol
push
in
out
or
rcr
(bad)
fwait
sub
scas
inc
cmp
fidiv
xor
add
ror
lahf
pop
rcl
sbb
icebp
cmp
ficomp
xchg
mov
jns
xchg
mov
inc
mov
jg
sbb
cmp
jnp
push
xchg
imul
mov
fimul
int3
sub
mov
aad
xchg
shr
fdivr
inc
push
adc
sub
cmps
add
and
repnz
xor
hlt
xchg
in
jo
push
stos
aaa
push
adc
or
test
or
jne
or
push
xor
ja
push
cmc
push
sub
test
jmp
test
mov
das
sti
xchg
mov
xor
or
nop
xor
lea
aaa
and
inc
jge
mov
shl
or
sub
ret
cmp
mov
out
inc
sahf
push
cwde
sub
aam
loop
int
jbe
mov
inc
jbe
inc
test
pop
popa
mov
sbb
ret
das
push
out
leave
iret
retf
jo
mov
add
(bad)
std
sub
out
add
xchg
jle
lods
call
xor
fucomip
cmp
mov
dec
dec
(bad)
call
lock
mov
cli
xchg
inc
mov
addr16
jne
ficom
loope
(bad)
adc
cmp
inc
mov
gs
xor
mov
xor
xchg
cmp
imul
in
adc
iret
js
les
mov
lock
push
in
repnz
inc
fst
pop
adc
jno
jb
cmps
xchg
xchg
xchg
loope
adc
bound
in
jg
enter
cmps
and
inc
xchg
mov
jb
ja
jl
lods
mov
or
pop
push
ret
fcom
xchg
lds
out
cmp
jae
or
mov
lods
adc
in
push
add
pop
loope
dec
cmp
imul
sub
es
pop
(bad)
mov
xor
aad
mov
cmp
shl
cmps
repnz
addr16
add
inc
xor
or
xchg
xor
stos
nop
sub
fld
ins
dec
iret
iret
xor
push
dec
(bad)
pop
and
daa
jo
int3
dec
xchg
inc
ins
ror
data16
test
sub
test
mov
daa
icebp
and
mov
or
test
xchg
int
xor
scas
add
dec
jmp
lods
sub
or
pushf
adc
jnp
mov
fiadd
pop
and
jp
sbb
in
mov
xchg
ds
in
xchg
cmc
pop
dec
jmp
jg
sbb
jns
mov
pop
cli
mov
inc
sbb
mov
adc
xor
xor
ins
or
mov
movs
pusha
xchg
fcom
mov
ja
mov
shr
js
jp
pshufw
pop
lock
sub
jo
adc
in
in
(bad)
cmps
ja
enter
iret
out
fst
inc
adc
adc
into
loopne
inc
mov
sub
mov
mov
outs
mov
out
sub
es
or
stc
pop
fcom
aaa
pop
sub
out
sbb
cmp
inc
out
jb
shr
data16
in
ret
ret
clc
push
mov
in
sbb
aam
sar
cmp
enter
sti
arpl
(bad)
(bad)
ror
push
outs
inc
outs
mov
sbb
sub
pop
sub
lea
lods
and
inc
leave
fdiv
dec
fidivr
in
pusha
xor
pop
(bad)
xchg
and
pop
stos
push
sbb
adc
lods
mov
cmps
xchg
fistp
jl
dec
push
sbb
leave
pop
mov
adc
clc
xchg
shl
andps
jmp
lahf
jns
xchg
imul
fldenv
aam
nop
jae
(bad)
and
scas
gs
jg
sub
imul
fnstsw
rcr
cmps
sub
pop
loop
push
scas
pop
jno
mov
push
dec
scas
pushf
inc
test
cs
mov
out
adc
dec
xchg
js
mov
mov
and
pop
mov
push
stc
out
push
sahf
mov
sbb
inc
sub
test
xchg
jmp
dec
lods
mov
or
and
add
inc
aam
(bad)
ins
pop
push
mov
ins
rcl
lds
daa
mov
imul
test
and
lea
mov
jae
imul
shl
mov
pop
pop
and
in
aam
hlt
mov
add
inc
fsubr
aaa
cwde
push
sub
pushf
add
std
adc
pop
push
pusha
lahf
jns
sub
xor
mov
iret
adc
jb
int3
jg
daa
push
frstor
ficomp
xchg
and
loopne
xchg
outs
cmps
pop
in
jne
xor
shl
and
stc
xor
mov
adc
sub
add
pop
mov
inc
in
sahf
xchg
daa
out
push
push
pushf
cwde
jb
cli
gs
sahf
mov
add
jp
mov
sub
aas
loopne
into
mov
mov
push
aad
add
mov
int
lahf
fwait
iret
push
les
cs
jo
mov
xchg
inc
jo
daa
and
push
cdq
inc
mov
loopne
add
and
fisub
shl
jae
cwde
adc
aam
xlat
xchg
pusha
loope
loope
test
jmp
aad
sbb
sbb
xchg
dec
push
adc
test
div
jmp
loop
arpl
sub
add
dec
ret
inc
mov
dec
xor
pushf
stos
dec
xor
xor
inc
adc
mov
dec
retf
mov
fs
pop
pop
aaa
adc
xor
loop
cmps
inc
rol
push
cmp
lock
(bad)
imul
repnz
sbb
add
or
data16
pop
stos
push
sub
jl
or
(bad)
icebp
sbb
push
xchg
(bad)
xlat
inc
fidivr
mov
pop
cld
fadd
je
popa
lds
and
std
push
pop
or
inc
dec
in
mov
push
out
sbb
jmp
pop
int
loopne
sti
push
test
mov
rcr
inc
inc
int3
add
fist
ret
cli
repnz
and
mov
retf
xor
test
inc
jo
lock
xor
sbb
or
jo
loop
adc
cmps
lods
stc
sar
shr
test
push
cmp
in
out
dec
movs
fs
pusha
jae
inc
mov
iret
mov
or
sbb
(bad)
cmp
push
lods
rcr
add
mov
(bad)
(bad)
pop
cdq
repnz
lea
rcr
inc
xchg
call
cmp
pop
inc
cmp
cmc
push
push
pop
stos
daa
push
mov
cld
loopne
mov
ror
inc
inc
jmp
dec
xor
mov
imul
push
mov
pop
pop
cmp
adc
inc
fisub
add
pushf
(bad)
cmp
mov
ins
and
jmp
aam
pop
loopne
mov
ss
sub
je
mov
jno
cs
leave
xchg
sub
std
sbb
mov
sar
cmp
pop
mov
sbb
daa
outs
xchg
jb
rcr
adc
mov
cmp
(bad)
bound
fwait
ja
popa
fwait
sar
mov
push
push
jo
das
(bad)
sti
xchg
dec
pop
daa
mov
jmp
pop
jge
movs
nop
cmps
cdq
ret
add
inc
sar
add
cdq
in
sbb
sar
mov
pop
div
mov
cmc
(bad)
xor
jl
cmp
xchg
outs
jne
mov
xor
arpl
jno
xchg
popf
xchg
add
loopne
daa
jne
push
cmp
mov
xchg
retf
iret
scas
aad
and
sub
cmc
test
in
pushf
loop
rcr
nop
pop
mov
pusha
mov
jp
pop
inc
dec
mov
ret
push
push
arpl
inc
dec
stos
rcr
or
xchg
or
xlat
daa
mov
pop
mov
test
xchg
hlt
outs
mov
inc
daa
and
push
dec
dec
cmp
gs
in
sub
mov
bsf
mov
jecxz
mov
call
push
test
sbb
mov
jnp
jle
cmp
(bad)
push
out
sbb
das
fistp
inc
xor
pushf
dec
mov
mov
js
retf
(bad)
sar
popf
movs
scas
fs
add
ficom
push
cli
outs
lock
lods
lea
test
dec
mov
sub
mov
ins
and
repnz
jge
cdq
push
(bad)
mov
call
inc
sbb
pop
nop
out
fbld
imul
(bad)
repz
mov
cs
pop
and
xor
xchg
xor
sub
mov
ins
addr16
xchg
inc
aam
jnp
pop
call
sbb
jl
jo
cmp
add
xor
push
retf
cmp
mov
call
sar
ins
ror
xchg
fisttp
jnp
push
sub
jno
shr
jae
mov
xchg
and
mov
mov
cmc
in
jo
or
stos
push
mov
pop
jle
rol
mov
mov
into
js
xor
and
xchg
mov
out
imul
push
ja
dec
and
lock
xchg
je
push
aad
sub
cmp
lds
jle
in
mov
dec
(bad)
mov
sub
pop
js
adc
and
sub
jae
mov
fstp
cmp
ror
cli
es
dec
sub
adc
push
fwait
jo
js
sub
outs
mov
xchg
int3
mov
inc
fmul
test
fwait
jo
arpl
arpl
jle
sar
jo
outs
pop
push
sub
mov
inc
test
test
dec
(bad)
movs
cmps
push
aam
mov
retf
sbb
aad
or
mov
pusha
rcl
ret
xor
seta
fcmovnbe
cmp
sbb
pop
adc
(bad)
cmp
mov
mov
cmp
movs
inc
xchg
mov
cli
std
jmp
jp
in
jp
or
test
add
shl
out
cdq
pusha
push
inc
ins
sub
cli
outs
into
shr
ins
xor
inc
or
aad
addr16
outs
ret
mov
jnp
fyl2xp1
mov
jb
inc
and
jnp
xchg
pop
test
pop
jecxz
dec
not
and
jb
push
sar
out
push
lods
xor
mov
lock
push
mov
lea
out
mov
jg
cmp
aam
push
inc
sbb
fcom
hlt
or
lock
jo
sahf
push
fsub
loope
and
or
iret
out
stc
inc
add
repnz
mov
fidivr
jmp
or
mov
stos
pop
xchg
int3
je
data16
outs
movs
mov
sbb
mov
xchg
pop
inc
adc
std
push
inc
adc
push
push
jmp
and
jo
or
xlat
outs
(bad)
pop
inc
pop
out
cmps
xor
jo
mov
mov
lods
mov
mov
mov
fdivr
movs
and
or
rcl
add
gs
loop
shl
inc
out
mov
pop
mov
in
pushf
jne
sub
stos
mov
pop
mov
(bad)
cli
sub
inc
fmul
cmps
je
out
mov
xchg
add
les
mov
sti
sbb
rcr
test
pop
push
neg
push
ret
test
je
in
rol
rcl
or
popf
mov
mov
test
mov
outs
addr16
inc
cwde
pop
fiadd
repnz
xor
or
pop
or
leave
iret
sbb
and
inc
jmp
adc
fsubr
push
cmp
in
shl
mov
mov
mov
sbb
jmp
sub
mov
mov
mov
and
push
rcl
sub
enter
mov
loop
scas
dec
inc
pop
aad
not
or
mov
daa
mov
scas
and
jno
sub
jo
cmp
cmp
arpl
ins
dec
mov
pop
xchg
shl
dec
adc
imul
outs
out
and
and
mov
mov
(bad)
scas
pop
test
push
dec
leave
and
cmps
lods
mov
call
cli
adc
or
ret
mov
mov
shld
pop
add
test
mov
cmp
jns
sub
shl
scas
nop
push
test
add
adc
in
sbb
or
add
mov
lods
scas
pop
in
mov
in
rcl
rol
push
stc
push
dec
movs
aaa
callw
leave
out
pop
mov
faddp
add
mov
mov
adc
lahf
mov
test
mov
mov
and
mov
inc
mov
inc
pop
dec
add
lahf
jmp
(bad)
adc
sbb
jecxz
lods
or
jb
cli
ret
das
push
fs
out
pop
in
outs
fsubrp
dec
mov
xchg
jno
outs
ret
cmp
out
movs
mov
fs
cdq
inc
mov
loop
sub
mov
stos
push
push
mov
sbb
das
or
sub
inc
sbb
sbb
pop
xor
jno
sub
lea
dec
mov
push
cmp
stos
js
add
add
inc
add
rcr
xchg
es
rcr
and
fldcw
in
mov
pop
call
jnp
test
cdq
push
fcom
lock
add
call
or
pop
mov
mov
sti
jecxz
jmp
sahf
int
in
jl
or
sbb
out
or
loopne
ret
pop
sti
movs
addr16
loop
iret
jl
out
ret
push
jmp
scas
push
and
xchg
mov
dec
cli
ror
add
shl
lods
fnstcw
pop
cs
scas
pop
stos
out
mov
call
mov
dec
xchg
sbb
fild
rol
lea
xchg
jl
(bad)
inc
xchg
hlt
dec
mov
pop
sbb
mov
in
stc
xchg
mov
lods
jne
rol
out
loop
(bad)
popf
cmp
shl
std
jmp
call
not
sar
fwait
ret
jno
and
and
push
dec
adc
daa
mov
and
into
and
push
dec
je
daa
das
mov
(bad)
aas
push
sub
xchg
add
test
adc
mov
mov
dec
xor
inc
pop
adc
pop
outs
scas
or
adc
pop
(bad)
xor
enter
xchg
sbb
xlat
rcl
in
push
je
xor
add
repz
mov
loopne
sbb
xor
add
jmp
sub
sbb
sub
pop
cmpxchg
aam
pop
mov
cmp
xor
je
adc
mov
or
adc
ins
cmp
lahf
pop
arpl
std
mov
rol
stos
retf
inc
add
xchg
in
sub
dec
fst
int3
ret
fstp
loopne
aam
inc
cmp
cld
or
enter
mov
fisub
pop
clc
repnz
cmc
pop
pop
push
inc
dec
(bad)
fst
(bad)
loopne
push
dec
inc
std
lahf
daa
xchg
xlat
sti
xor
mov
xor
mov
aas
fsubr
bound
push
fdivr
int3
dec
jo
or
ins
mov
mov
out
add
cmp
sub
fstp
mov
dec
(bad)
adc
pop
pushf
pop
dec
lock
cld
mov
sahf
andps
pop
(bad)
repnz
mov
xchg
iret
pusha
and
out
jmp
call
xor
call
cdq
test
mov
add
inc
lods
(bad)
pop
push
outs
jb
jmp
jb
xchg
mov
mov
stc
clc
repz
mov
jo
imul
adc
and
xchg
push
xchg
pop
clc
cmp
adc
xor
xor
lock
std
inc
sub
xchg
sub
xor
(bad)
mov
mov
mov
xor
loopne
(bad)
lds
cmp
mov
sub
dec
jmp
imul
or
and
(bad)
arpl
mov
mov
jne
daa
retf
mov
into
fcom
stc
sbb
xor
out
or
dec
not
mov
mov
adc
inc
ficomp
movs
xor
mov
jae
jno
xor
mov
arpl
mov
jp
aad
mov
mov
cmp
cmps
lahf
stos
in
je
xor
sahf
dec
stos
jnp
xchg
jnp
cmps
cmp
push
(bad)
cdq
pop
out
dec
add
sti
cs
pop
imul
add
mov
dec
cmp
cmps
xchg
dec
mov
adc
cmps
xchg
out
repz
cmp
shl
jnp
cld
cwde
inc
mov
int
int3
mov
push
and
push
enter
dec
out
adc
std
dec
mov
mov
sbb
add
xchg
ror
mov
push
adc
push
outs
dec
fucomp
call
cmp
in
ret
mov
xor
retf
lock
aam
ret
ret
imul
call
push
mov
mov
test
fstp
test
daa
lea
jno
xor
lahf
sub
scas
adc
dec
jo
xchg
test
fwait
ins
push
mov
xchg
xor
jo
das
add
es
xchg
loop
sbb
push
shr
inc
scas
cs
stos
sub
ja
pop
jne
sbb
out
sbb
dec
xchg
fwait
arpl
mov
jle
dec
xor
sti
test
pop
daa
mov
jge
loopne
cwde
into
(bad)
enter
xor
mov
(bad)
cmp
stos
mov
or
popf
fisttp
(bad)
push
push
cwde
push
outs
call
mov
lahf
jo
test
aaa
arpl
test
cmps
retf
ja
jnp
or
xchg
fadd
js
xchg
mov
adc
sbb
push
(bad)
leave
test
addr16
push
ds
fidivr
int
mov
xchg
xchg
xor
mov
inc
stos
imul
jle
call
xchg
(bad)
outs
jg
sbb
(bad)
pop
inc
unpcklps
aam
jmp
jae
inc
mov
inc
fsubr
sbb
inc
int3
in
sbb
xor
lock
push
rcr
or
add
jmp
shl
jp
loopne
enter
std
out
jb
inc
call
aas
cmps
repnz
mov
inc
in
cwde
adc
jl
jo
add
xor
data16
sbb
sub
sahf
inc
lahf
nop
xor
pushf
test
stc
enter
cwde
mov
js
mov
mov
mov
mov
ret
ins
xchg
push
outs
in
leave
jmp
sahf
pop
push
cmp
inc
outs
nop
xchg
das
sub
shl
aam
add
in
adc
xchg
push
push
scas
xor
jmp
imul
add
fadd
fdivrp
jo
jns
mov
pop
shl
adc
sbb
frstor
or
mov
pushf
jmp
cs
iret
adc
int
xchg
or
rcl
inc
xchg
out
push
dec
cmp
inc
dec
sar
xor
cmp
jo
daa
add
mov
dec
inc
jb
jne
aam
or
and
mov
adc
dec
aam
fiadd
fbstp
xlat
sar
scas
mov
push
das
or
sti
mov
or
out
push
mov
or
mov
add
(bad)
das
jge
push
jne
mov
jne
xlat
shr
cmp
sub
mov
dec
and
out
sbb
jp
xchg
(bad)
lock
fwait
xchg
pop
in
aam
xor
cmc
mov
movs
cmp
sub
fnstsw
fstp
lahf
cmp
lock
test
les
ins
sar
pop
mov
mov
enter
or
cmc
shl
repz
jns
test
pop
je
mov
lds
xchg
xlat
mov
pop
sub
push
push
or
test
ins
jmp
jg
cdq
popf
es
inc
mov
or
push
push
xor
fs
xchg
outs
inc
and
pusha
xchg
out
jb
inc
mov
sbb
and
mov
and
leave
pop
cmovp
outs
mov
dec
jne
stos
cwde
cmp
clc
sbb
add
mov
dec
js
arpl
add
sbb
loop
and
xchg
jg
jecxz
xor
xlat
ud1
aam
mov
fiadd
daa
dec
or
(bad)
call
and
mov
das
arpl
adc
(bad)
push
pop
cmps
pop
outs
leave
push
and
pop
pop
loop
and
scas
push
cdq
ret
cwde
inc
adc
and
xchg
lods
dec
sbb
sub
adc
xchg
inc
jbe
lahf
ror
add
sub
mov
push
das
add
stc
push
in
jne
sub
push
(bad)
jno
das
in
pop
add
lahf
fwait
and
mov
fs
dec
push
rol
cmps
cmps
sbb
popf
jns
jecxz
mov
mov
jmp
push
into
es
enter
xchg
inc
dec
sahf
retf
in
pop
inc
cli
mov
jne
mov
dec
ins
inc
call
ja
push
frstor
and
jmp
jp
out
fdivrp
xor
xchg
mov
rol
cmp
aas
dec
add
(bad)
test
pop
mov
pop
mov
cwde
retf
xchg
push
push
push
(bad)
xor
lods
lds
std
lea
movs
mov
pop
pusha
inc
stos
data16
mov
xchg
dec
inc
mov
jbe
ret
ret
jl
add
xchg
pop
dec
lds
test
xchg
xor
push
adc
addr16
ins
in
cmp
rol
cmp
add
pusha
jno
inc
scas
shl
dec
mov
out
sub
scas
cmc
stos
push
mov
adc
push
addr16
call
pop
sar
retf
fadd
push
ds
pop
xchg
xchg
fs
inc
jo
jmp
loopne
addr16
sub
jge
ins
push
sti
mov
sub
stos
out
(bad)
or
ja
(bad)
loop
in
std
shl
jecxz
dec
je
fwait
or
jne
icebp
lea
dec
xchg
add
mov
xchg
mov
dec
shl
push
aaa
lea
(bad)
pop
aas
and
pop
mov
push
cmp
push
jecxz
and
push
in
outs
and
cmp
mov
adc
sahf
sar
mov
cmp
adc
repz
mov
jmp
pop
pop
fst
jns
mov
sbb
lahf
mov
inc
mov
ficom
xor
mov
(bad)
cmp
lods
clc
stos
sub
pop
sar
imul
sahf
mov
xchg
xchg
sub
sar
cli
lds
jmp
pop
lock
push
sbb
loope
pop
pop
mov
xchg
retf
jae
cwde
out
pop
and
in
int3
pop
sub
and
and
xchg
xor
fldcw
adc
adc
mov
mov
pusha
xchg
sub
sbb
ret
mov
push
adc
inc
movs
or
jge
call
lds
and
jne
fistp
mov
jnp
xor
imul
xor
pop
stos
pop
mov
enter
movs
pop
adc
sahf
daa
aaa
call
push
(bad)
or
pmaxsw
out
cli
inc
mov
jecxz
add
outs
aas
rol
outs
xchg
imul
and
mov
xchg
dec
xchg
popa
mov
or
ret
shr
in
cld
or
mov
cmp
js
pop
mov
aam
retf
mov
fwait
movs
dec
sbb
mov
adc
xchg
test
jle
xor
push
jp
push
push
ret
dec
out
xchg
out
mov
xchg
shr
mov
xor
daa
outs
fcomp
or
jp
rcr
sub
jmp
mov
lods
retf
pushf
scas
inc
xchg
mov
jo
out
mov
ja
sahf
mov
in
jmp
mov
int3
mov
sbb
dec
movs
movs
sti
iret
push
movs
dec
arpl
stos
sub
out
mov
xchg
dec
push
in
nop
or
lds
hlt
sahf
mov
mov
push
pop
mov
pop
and
add
cmp
call
div
stc
(bad)
jns
sbb
js
icebp
adc
in
cmp
mov
ins
and
mov
and
push
stos
imul
(bad)
sub
repz
ficomp
push
adc
mov
or
ror
std
jge
je
adc
pop
cmps
popf
pop
adc
hlt
mov
push
dec
cmp
add
and
mov
cmp
imul
ret
jmp
xchg
cmp
stos
mov
out
fisttp
lds
or
inc
and
loopne
xor
xor
and
stos
inc
jecxz
cmps
mov
sub
adc
into
mov
ret
(bad)
test
pop
sahf
addr16
stos
and
inc
shl
jo
int3
outs
dec
ins
pop
xchg
es
repz
aas
les
arpl
xlat
sub
arpl
stc
lds
dec
mov
daa
bnd
loop
les
or
jp
mov
cmps
and
fwait
loop
mov
cdq
adc
cdq
add
mov
movs
mov
add
shr
mov
or
sub
sahf
and
push
pushf
lahf
xchg
pop
aaa
lods
punpckhdq
mov
push
push
pusha
push
mov
pop
jmp
sub
jne
or
sub
sub
push
inc
fcom
mov
cmps
and
jmp
mov
int3
mov
pop
mov
adc
dec
or
and
cdq
out
(bad)
in
dec
and
adc
out
div
stos
cmp
stc
pop
mov
xor
jg
jecxz
jecxz
xor
dec
loopne
xor
ss
lock
pop
and
sub
jmp
ror
add
into
shr
or
mov
pop
lods
sar
mov
jmp
leave
(bad)
js
sahf
nop
jbe
mov
retf
sti
pop
and
gs
push
int3
push
shl
add
(bad)
cmps
scas
push
rol
dec
cmc
adc
in
xor
lds
out
ror
jp
sti
mov
sbb
jbe
add
jno
shl
adc
mov
add
lds
mov
stos
push
lock
push
frstor
loope
aad
loopne
add
lods
mov
add
fbld
enter
mov
(bad)
cmp
bound
sahf
(bad)
xchg
lods
in
or
or
jae
rcr
call
pop
cdq
lahf
xchg
sbb
jmp
cwde
cmp
adc
fisttp
jb
cmp
sbb
jbe
loope
into
or
int
and
test
pop
mov
sub
out
adc
inc
enter
cmp
and
jl
ins
(bad)
fs
ret
jns
cmp
rol
leave
pop
sub
push
lea
loope
fcomi
nop
mov
push
pop
cld
int3
mov
ja
sub
xchg
jmp
aaa
fild
add
leave
sub
out
js
push
test
jg
aad
das
imul
xchg
and
jmp
xor
outs
xor
in
and
ins
les
cdq
add
or
pop
arpl
inc
inc
aaa
jle
xlat
mov
ins
(bad)
sti
fld
inc
xchg
mov
cmp
aad
cs
call
sahf
sbb
jno
dec
mov
adc
fsub
and
sbb
stos
jne
xor
shl
sub
je
dec
sub
adc
call
push
add
(bad)
push
sub
push
push
mov
leave
aad
mov
neg
adc
imul
(bad)
in
dec
push
js
in
cwde
cs
in
push
lahf
sub
data16
test
ret
sub
out
fadd
inc
mov
std
fwait
push
(bad)
(bad)
cmp
fistp
add
movs
fs
sub
test
xchg
scas
ret
jae
xchg
cmp
gs
stc
jns
gs
aam
dec
inc
pushf
sbb
inc
cdq
(bad)
cmp
push
iret
movs
std
and
ins
xchg
push
mov
fsubr
mov
mov
mov
inc
xor
jp
test
sub
pop
jecxz
(bad)
aas
es
loop
mov
push
dec
dec
(bad)
jg
sbb
cdq
jmp
popf
xchg
xor
push
mov
std
js
fdiv
jnp
xchg
jmp
sub
loop
ins
push
sbb
sbb
cmp
mov
ret
cvttpd2pi
sahf
pop
loop
inc
mov
lods
adc
test
scas
test
ja
fs
leave
inc
lods
pop
(bad)
pop
clc
adc
and
sbb
pushf
leave
and
call
xor
mov
mov
push
retf
lds
xor
movs
call
movs
inc
jo
jae
inc
add
cwde
stos
pusha
dec
sub
inc
xchg
(bad)
cmc
sbb
xchg
inc
(bad)
dec
movs
clc
daa
lock
sbb
xor
sbb
cmp
clc
ja
iret
or
out
fisubr
gs
ret
dec
dec
repz
popa
mov
fist
pop
xchg
or
jle
and
cmps
mov
pop
sbb
pop
adc
push
inc
stos
es
stos
inc
adc
ja
adc
mov
(bad)
cdq
add
inc
or
arpl
mov
add
adc
cld
jo
xchg
sub
int
sub
cld
shl
adc
pop
outs
lahf
cmp
retf
sahf
adc
mov
cmps
mov
loopne
push
inc
out
sub
(bad)
ins
sbb
sbb
mov
outs
sbb
jnp
mov
or
push
(bad)
loopne
xor
ret
push
pusha
imul
sub
fiadd
mov
out
cmps
xor
cmp
dec
loopne
(bad)
inc
cmp
(bad)
ret
call
push
push
mov
xchg
mov
adc
mov
add
scas
in
cmp
dec
sbb
jo
fdivp
cs
(bad)
ss
hlt
(bad)
push
or
loopne
xchg
mov
push
mov
pop
push
pop
pop
pop
push
call
in
movs
inc
or
cdq
inc
adc
outs
imul
jmp
icebp
sti
cli
mov
(bad)
mov
pop
add
xchg
aas
fcmovnb
and
xchg
into
aad
stos
ror
push
add
push
mov
sub
rol
mov
jns
popf
ret
mov
mov
mov
sbb
loope
sub
repnz
sbb
(bad)
out
popf
or
xor
pop
push
add
aam
dec
pop
fldcw
jmp
leave
in
push
xchg
sub
inc
cmp
push
movs
mov
cmp
retf
mov
xchg
inc
sti
pop
adc
push
mov
ror
pop
and
xlat
push
xor
push
aaa
sub
cmp
mov
out
sbb
loopne
outs
adc
ret
in
fnstenv
pop
bound
fistp
push
push
out
sbb
fldln2
icebp
cmp
mov
(bad)
adc
sahf
mov
cmp
popf
adc
fs
call
dec
(bad)
xor
lods
icebp
sbb
inc
xor
adc
dec
inc
adc
mov
dec
jnp
push
push
cmp
sub
inc
je
ins
out
lea
or
xor
in
ins
mov
inc
push
aam
jmp
pop
into
int
dec
xchg
imul
mov
sub
mov
adc
mov
adc
repnz
cmps
scas
push
and
or
fldcw
sub
fiadd
jnp
or
add
hlt
aas
jne
inc
xchg
das
std
ins
aas
jns
inc
pop
call
(bad)
pusha
lods
in
cdq
push
in
repnz
movs
popa
data16
pop
jge
stos
cmp
test
mov
fcom
sbb
fsub
std
adc
jne
mov
xor
das
or
and
inc
add
idiv
nop
jmp
pushf
add
mov
dec
test
retf
outs
mov
push
cmps
ffreep
ins
stc
out
sub
sbb
add
jg
push
in
or
into
push
sub
call
out
add
test
xor
inc
daa
xor
sub
xchg
or
and
cmc
mov
rcr
and
mov
in
cmp
cmc
enter
popa
sub
pop
rol
and
cmp
(bad)
in
loope
cs
bound
and
pushf
bound
jecxz
sbb
sbb
addr16
inc
addr16
es
leave
and
mov
cld
gs
pop
or
in
add
or
sub
dec
xchg
outs
cld
(bad)
or
fs
sbb
aad
sar
or
pusha
cmp
test
pop
(bad)
xor
mov
mov
or
xor
(bad)
data16
mov
xor
pop
push
cmp
jb
push
(bad)
out
sbb
sbb
jmp
stos
js
or
ja
scas
out
add
nop
sbb
movs
out
nop
neg
mov
fadd
sti
push
pop
fnstsw
dec
iret
enter
push
sub
and
mov
cmps
push
neg
cmc
adc
in
fstp
add
add
ret
hlt
ss
xor
mov
adc
sbb
cmp
sub
int
bound
pop
imul
cld
inc
stos
imul
mov
mov
pop
add
fldenv
inc
jmp
mov
lds
add
in
lea
jne
jae
sbb
inc
lods
cmp
shl
cmp
pop
add
(bad)
xor
xchg
and
mov
or
and
shl
mov
cs
lea
stc
enter
stc
rol
xchg
mov
(bad)
call
mov
mov
dec
xchg
or
stc
popa
mov
pusha
jno
or
adc
out
fbld
dec
sub
out
push
test
lods
mov
repz
sub
enter
adc
mov
shr
jae
imul
xchg
imul
push
jns
cmp
xchg
fcomp
sahf
mov
mov
mov
mov
fs
or
lock
ror
add
xchg
push
dec
and
mov
stc
mov
test
(bad)
out
sbb
pop
out
test
imul
add
and
pushf
ret
mov
dec
adc
push
inc
add
repz
cs
xchg
mov
cmp
and
sar
cli
sbb
add
in
sub
leave
sub
cmp
mov
mov
mov
or
mov
loop
pop
cwde
xchg
lods
pop
mov
push
pop
jecxz
inc
in
sbb
cmp
xor
xchg
cli
cmp
lods
cmp
xchg
fnstsw
fdivr
sahf
lea
cmp
xchg
rcr
cvtps2pd
xchg
sub
(bad)
or
xchg
cmps
sar
sahf
jns
(bad)
cld
mov
int
sub
lds
inc
push
push
add
sub
ins
mov
hlt
pusha
out
fdiv
in
adc
jae
mov
mov
test
arpl
xchg
jecxz
sbb
or
out
mov
xchg
ror
dec
mov
hlt
rcr
les
push
mov
push
or
shl
push
mov
lock
cdq
xchg
mov
inc
cmps
loopne
iret
sbb
jg
jl
and
adc
aaa
xchg
ret
pop
cmps
mov
dec
retf
adc
xchg
cmp
jecxz
stos
hlt
rol
adc
xchg
mov
icebp
pop
jp
popf
test
movs
out
push
xor
jae
test
push
(bad)
pop
and
retf
lock
push
push
and
jmp
fbld
fistp
fcom
fisttp
push
retf
push
push
fisttp
rcr
cwde
(bad)
popf
lahf
xchg
inc
into
sub
inc
pop
fdivr
add
hlt
cmp
call
arpl
mov
mov
(bad)
out
xlat
xor
sbb
cmovg
add
push
shr
inc
js
pop
xchg
sub
in
stos
inc
cmp
mov
inc
and
jg
add
stos
inc
fwait
out
add
cbw
push
es
imul
adc
jmp
dec
xchg
cmp
sub
push
push
jp
bound
inc
shl
outs
jne
pop
adc
and
jno
shr
das
les
idiv
aaa
mov
mov
je
xor
cld
mov
adc
add
iret
xchg
xchg
inc
sub
jo
jecxz
test
retf
repnz
adc
std
sbb
shl
xchg
jmp
push
adc
mov
ret
mov
ins
cmps
movs
mov
add
mov
jo
mov
pop
xchg
fsub
repz
mov
jno
jle
adc
cdq
ds
and
add
cmp
(bad)
inc
retf
dec
clc
sbb
xchg
adc
dec
pop
std
sbb
fisub
jmp
mov
iret
loope
pop
lock
repz
js
pop
add
out
mov
es
aam
jns
jmp
xlat
out
cdq
lods
jb
(bad)
lds
cwde
shl
sub
sub
push
icebp
test
adc
sbb
jmp
add
shl
jmp
sub
enter
rol
daa
and
adc
imul
sti
mov
or
fwait
push
and
xchg
dec
sbb
neg
pop
fwait
gs
push
retf
add
dec
fcom
repnz
jnp
repnz
(bad)
std
in
nop
fwait
fs
idiv
jne
and
xor
loope
and
cmp
add
xor
or
sub
xor
aas
inc
lds
hlt
ror
in
aas
mov
pushf
sub
out
gs
je
xchg
adc
mov
clc
add
dec
lock
aas
(bad)
jmp
cs
push
in
inc
cmp
push
adc
stos
int
sbb
add
ins
in
stc
test
xor
dec
fsub
xchg
add
(bad)
cmc
mov
sar
stos
cmps
fchs
popf
dec
mov
ins
sub
out
enter
xor
lock
es
mov
mov
aaa
outs
mov
adc
jne
dec
aaa
into
test
cmp
scas
fwait
iret
cld
pop
push
(bad)
and
sbb
sub
imul
enter
mov
cmc
out
(bad)
jns
imul
call
cwde
pop
fsubr
inc
push
(bad)
sub
xchg
repz
in
jbe
jno
std
ss
dec
imul
and
les
adc
mov
rcr
and
adc
in
test
push
ds
ret
sti
std
dec
loopne
mov
sub
sbb
out
push
pop
push
jbe
mov
inc
cmp
jns
(bad)
xlat
ins
fwait
dec
test
data16
cmps
mov
mov
aas
pop
ror
cld
and
sbb
mov
dec
ficom
sbb
stos
movs
xor
or
lea
pop
retf
dec
adc
or
clc
xor
cwde
mov
punpckhbw
push
out
inc
mov
jmp
xor
jmp
clc
add
adc
cmp
out
(bad)
inc
pop
aaa
gs
arpl
cld
jecxz
test
fs
dec
scas
push
ins
jle
sti
cmp
and
sub
cdq
imul
retf
mov
xor
std
(bad)
dec
mov
pop
xchg
jl
pop
inc
imul
fsub
test
cmp
outs
sub
int
retf
jae
es
dec
dec
jl
add
retfw
push
push
call
cmp
out
or
jno
mov
xor
pushf
(bad)
pop
outs
outs
push
pop
adc
xchg
aad
lock
in
push
pop
jecxz
rol
call
dec
movs
xchg
out
cmp
inc
cs
into
jbe
popf
mov
inc
hlt
js
add
jmp
out
or
aam
mov
call
popf
pop
hlt
stc
pop
mov
pushf
je
pop
sub
cmc
mov
lods
push
aad
movs
mul
inc
jle
cli
jp
push
push
pop
xchg
jge
sbb
ja
fimul
lahf
repnz
lahf
ds
pop
inc
sar
js
dec
data16
in
psadbw
jge
xchg
test
popf
push
aam
call
test
(bad)
or
push
(bad)
or
and
sar
mov
int3
cmp
cmc
mov
mov
cmp
fucom
adc
jmp
jmp
sub
dec
adc
gs
ret
ins
push
fst
loope
pop
in
mov
mov
and
inc
sub
xchg
sar
xchg
leave
int3
nop
cmp
inc
xchg
repnz
out
sti
pop
call
sub
int3
sub
jl
cli
pushf
lods
pop
xor
inc
stos
icebp
shl
mov
jle
cmp
lds
pop
inc
or
or
inc
pushf
nop
cli
xchg
scas
mov
sub
in
fdiv
pop
xchg
(bad)
(bad)
and
pop
sub
push
fidiv
add
mov
mov
xchg
pop
xchg
mov
or
clc
shl
xor
imul
sbb
pop
rcl
fs
jbe
push
clc
sbb
mov
sub
push
xchg
shr
push
or
sub
call
or
inc
les
sbb
push
fwait
test
push
leave
mov
fild
loope
popa
aaa
mov
dec
inc
xchg
jnp
jle
mov
into
std
inc
and
popf
test
cmp
ds
gs
cmp
adc
test
enter
dec
cmp
(bad)
jmp
add
jp
and
(bad)
cld
jl
aas
jle
push
shl
cmc
movs
push
lods
push
push
repnz
frstor
out
cmps
test
xchg
cmp
add
into
scas
stos
xor
xchg
iret
add
into
jp
(bad)
imul
aam
movs
std
les
dec
movs
mov
test
out
sbb
popa
adc
push
jl
or
pop
dec
movs
add
leave
ja
outs
aaa
outs
mov
inc
adc
and
inc
and
mov
xchg
adc
xor
aas
mov
xchg
das
mov
imul
cmp
xor
sub
xchg
sub
shl
lahf
iret
fnstsw
pop
mov
sub
call
int
gs
call
xchg
fwait
out
jecxz
or
fild
pop
inc
aaa
xchg
push
rcl
cmps
adc
out
fdiv
addr16
and
inc
and
jle
mov
aam
or
add
sti
and
push
aas
test
out
gs
retf
icebp
mov
push
dec
jg
test
mov
mov
dec
cmp
pinsrw
js
ret
loopne
add
and
sub
inc
scas
inc
es
pop
mov
iret
jle
sbb
ss
les
push
stc
or
icebp
call
cwde
jnp
sbb
mov
xchg
dec
sub
or
dec
lock
cdq
push
(bad)
inc
jg
nop
fs
xlat
cmp
sbb
jecxz
xor
push
and
sbb
jl
sbb
(bad)
stos
jmp
sbb
mov
into
cwde
out
mov
pop
cmp
jmp
inc
mov
shl
sbb
jnp
xchg
and
out
jo
jno
push
or
mov
add
cmp
in
adc
or
push
and
xor
jno
sub
scas
data16
push
pop
pop
nop
sbb
out
pop
adc
rcl
mov
loopne
dec
sbb
mov
fdivr
push
xchg
fld
and
and
(bad)
aam
bound
cmps
scas
imul
mov
popa
not
mov
(bad)
push
add
add
jno
test
push
fs
(bad)
call
and
mov
jae
xchg
dec
test
push
fcmovnu
xchg
out
test
data16
add
rcr
pop
mov
and
fnstcw
pop
mov
je
xor
jo
hlt
(bad)
fist
jno
gs
jecxz
idiv
iret
fiadd
hlt
mov
mov
out
add
movs
lea
add
jmp
mov
in
enter
punpckhwd
xchg
mov
bndldx
lahf
ins
sub
fcmovnbe
mov
fsub
outs
pop
cmp
in
ret
call
imul
adc
mov
mov
rcr
xchg
aas
mov
hlt
mov
cmp
hlt
mov
mov
pop
int
jp
fsubr
pop
jmp
mov
popf
dec
xchg
inc
mov
clc
ror
dec
ss
dec
adc
xor
call
and
hlt
jns
push
adc
movlps
inc
movs
fnstenv
retf
stos
mov
cmps
lds
fistp
xchg
out
push
aaa
fs
(bad)
and
(bad)
fcom
sub
and
sar
enter
pop
scas
add
fimul
sbb
xchg
in
cmc
adc
(bad)
psllw
add
loopne
xlat
iret
push
cmp
sub
ret
adc
xor
inc
push
sahf
sub
js
push
lock
inc
xchg
xchg
and
retf
xchg
inc
inc
adc
mov
test
adc
jmp
inc
das
push
aam
test
jmp
stos
and
jne
scas
jno
jl
(bad)
and
inc
cmc
arpl
jmp
pop
cmp
xchg
add
dec
lahf
jnp
jmp
test
retf
cs
call
adc
jno
xacquire
push
push
mov
(bad)
popa
(bad)
adc
pop
xor
jmp
bound
inc
or
and
fld
jmp
ja
(bad)
cmc
mov
mov
sar
cwde
push
mov
pusha
sub
xor
js
fisttp
mov
mov
rol
loopne
push
je
movs
(bad)
je
imul
or
or
repnz
rol
mov
ds
or
movs
repz
loopne
fadd
jl
in
mov
ins
pushf
xchg
mov
imul
stc
out
mov
call
or
jge
mov
jmp
in
enter
pop
hlt
inc
push
imul
push
aad
inc
mov
fsubr
aas
add
xor
call
aaa
cmps
rcl
sbb
jae
call
and
pop
rcr
fdiv
aad
pop
jp
les
pop
neg
test
adc
sbb
stc
sbb
outs
and
rcl
dec
popa
ror
mov
mov
xchg
jno
push
cmp
adc
jecxz
aas
hlt
aas
or
call
aas
pop
pop
aaa
or
fldenv
mov
jb
xor
leave
test
vpxor
outs
ins
pop
ret
in
push
div
je
and
fild
mov
dec
push
jb
mov
and
(bad)
mov
ja
sar
xchg
mov
sbb
mov
pusha
mov
int3
mov
movs
call
fist
leave
clc
mov
fcmovnb
rcr
jno
test
mov
jne
inc
aaa
ja
pusha
pop
mov
call
dec
repz
(bad)
cdq
push
fadd
in
adc
loope
mov
aam
inc
(bad)
inc
in
in
js
inc
xchg
add
int
adc
lock
arpl
xor
outs
cmp
nop
mov
xor
(bad)
jmp
das
inc
into
call
lds
cmps
mov
sub
xchg
and
jo
add
pop
(bad)
into
push
mov
mov
mov
neg
pop
and
inc
or
call
mov
outs
mov
aas
mov
ret
mov
in
pop
mov
ds
inc
cwde
and
add
add
adc
repnz
inc
mov
addr16
cmc
gs
dec
cmp
out
mov
or
push
mov
(bad)
int3
xchg
loope
(bad)
popf
daa
jb
bound
out
repnz
mov
xlat
pop
xchg
adc
ins
clc
mov
mov
test
inc
and
mov
mov
push
aad
mov
jnp
fadd
rcr
in
adc
imul
dec
push
repnz
in
scas
fwait
sub
(bad)
aad
test
cmp
lods
sahf
scas
cwde
and
arpl
retf
sbb
xor
xchg
sbb
xchg
or
pop
pop
and
dec
(bad)
outs
cmp
shl
pop
ja
sahf
movs
mov
in
scas
call
loopne
loope
and
xor
dec
stos
sbb
fistp
lods
mov
sti
cmp
add
dec
mov
iret
mov
push
int
and
jge
cmp
and
push
cld
cmc
push
js
add
sbb
arpl
popa
sub
lds
mov
jns
xor
dec
cmp
cmc
and
mov
mov
lahf
lods
xchg
scas
jno
iret
jmp
inc
add
and
adc
cmc
inc
xor
out
push
into
aam
mov
sub
fcomp
cs
fs
in
adc
mov
cmp
jl
and
inc
int3
(bad)
pop
push
mov
dec
mov
cwde
icebp
jmp
adc
jo
scas
xchg
js
sub
enter
or
cdq
xor
rol
push
data16
mov
ss
push
in
or
and
inc
mov
xchg
test
add
hlt
cld
lds
push
mov
mov
rcl
mov
push
push
mov
cmps
cmp
ret
or
dec
sar
pop
clc
in
movs
aaa
retf
loope
xchg
aaa
jae
jbe
(bad)
in
int3
dec
adc
out
in
repnz
cmp
or
(bad)
aas
jg
inc
mov
cli
cwde
xchg
adc
adc
push
pop
fimul
xchg
sar
repnz
xchg
adc
or
ret
hlt
int
mov
cmps
jmp
sti
enter
retf
mov
mov
ja
ss
repz
cld
or
jmp
in
popa
pop
mov
fwait
outs
mov
ins
adc
inc
outs
cmp
scas
or
jnp
mov
inc
jne
mov
mov
js
xchg
loope
loop
adc
mov
imul
int3
call
or
aaa
or
jnp
cmps
ss
rol
jp
jmp
mov
stc
(bad)
lods
pop
scas
jmp
sbb
cli
iret
xchg
jne
xchg
rcr
mov
push
fs
mov
pop
mov
inc
xlat
dec
adc
mov
out
xor
jmp
and
cmps
ret
pop
fnstsw
pop
mov
loopne
je
shl
jbe
and
arpl
cdq
cdq
mov
xor
cmp
ss
outs
inc
mov
lahf
nop
mov
jno
test
jecxz
dec
dec
pop
clc
scas
cmp
movs
aas
fs
ret
xchg
xchg
xor
xchg
cdq
cmps
push
add
sahf
fmul
xchg
not
ins
xchg
jbe
push
dec
loop
dec
fucom
cmps
(bad)
cld
loope
movs
outs
aad
or
cli
(bad)
mul
jmp
xchg
(bad)
out
mov
push
xchg
or
sti
and
ins
sbb
pop
push
xchg
jle
std
push
xor
das
mov
xchg
daa
and
xchg
cmp
and
jp
push
das
pop
xchg
add
es
daa
lock
push
cmp
out
movs
int
adc
inc
pop
cmp
div
jl
(bad)
xchg
jnp
jb
lea
mov
out
push
dec
pop
jle
xchg
sub
adc
test
push
xchg
cmp
mov
fst
inc
clc
sbb
push
xor
jmp
push
je
add
arpl
stos
or
out
push
cmp
cwde
mov
xor
test
push
loop
fwait
das
push
mov
dec
and
xor
movs
sub
jmp
xor
mov
int3
pop
(bad)
icebp
mov
jg
cli
call
cli
cmp
ins
outs
hlt
jle
dec
mov
xor
xor
mov
mov
jbe
jecxz
nop
rcl
sub
jne
sbb
das
int
adc
mov
fwait
xchg
sbb
mov
dec
xchg
loope
pop
fsubr
nop
add
sbb
push
cmp
sbb
imul
arpl
stc
inc
neg
inc
retf
shr
shl
loope
inc
ret
cmp
ss
push
in
sub
call
fstp
mov
pop
or
retf
mov
inc
pandn
mov
mov
(bad)
movs
imul
movs
std
push
pop
aad
ins
push
mov
icebp
pop
fsubp
xor
sar
or
sbb
aas
cmp
lods
call
test
xor
pushf
mov
push
(bad)
cmp
or
sbb
pop
shl
mov
inc
ds
jo
sbb
and
arpl
fldpi
sbb
mov
outs
in
cs
pushf
dec
push
or
out
dec
and
das
scas
gs
or
push
(bad)
xlat
inc
jmp
xor
mov
je
(bad)
inc
dec
aam
js
cmps
sti
sbb
sub
dec
pop
fsubr
dec
xchg
cmps
mov
adc
push
neg
aas
mov
pusha
fsubrp
adc
xchg
cmc
test
sti
iret
or
adc
jle
dec
pushf
lock
xchg
repnz
sbb
(bad)
mov
out
ret
push
jmp
push
stc
jae
mov
dec
neg
and
shl
nop
adc
jns
xor
sbb
mov
pop
xchg
daa
test
push
xor
xchg
scas
mov
inc
movs
aas
mov
sub
cmp
inc
xor
rcl
add
daa
push
call
movs
adc
pop
call
cmps
or
cmp
or
dec
test
sub
jbe
cs
gs
pop
(bad)
imul
jne
enter
mov
(bad)
jb
in
shl
push
dec
ins
sub
xor
inc
adc
sti
cmc
fcmove
fninit
mov
sbb
and
lea
test
and
jmp
mov
add
add
in
push
les
xchg
inc
sub
inc
ror
cdq
xor
inc
adc
test
test
sub
mov
cs
mov
mov
addr16
push
mov
mov
sahf
xor
jae
fisttp
add
arpl
cmp
retf
fiadd
jmp
mov
fnstcw
mov
push
aam
jg
sbb
(bad)
and
lock
mov
inc
mov
fisubr
pop
mov
shl
in
pop
stos
std
and
push
test
xor
lea
nop
in
sub
out
and
call
push
lods
lods
jno
pushf
mov
pop
movs
std
sub
ror
hlt
pop
rol
hlt
div
sub
ror
(bad)
and
mul
jl
jae
cmp
addr16
loope
push
inc
syscall
cmp
cli
or
es
sub
sbb
fisub
mov
add
popa
(bad)
out
and
mov
xor
outs
jne
adc
into
pop
jl
and
add
sahf
scas
mov
test
mov
jb
and
int3
aad
ret
loopne
add
fistp
call
(bad)
jno
push
call
mov
sub
mov
cdq
test
loopne
es
dec
out
cmp
and
jp
dec
shl
xor
daa
(bad)
clc
int3
jae
mov
lahf
clc
mov
and
mov
repnz
or
iret
(bad)
lods
test
dec
aas
in
cmovg
hlt
test
and
jle
pushf
mov
jle
sbb
xchg
repz
push
aas
cmp
popf
sub
mov
fistp
imul
sub
mov
jno
xchg
lahf
pop
inc
cdq
lods
or
mov
lods
jp
imul
mov
and
jbe
nop
movs
sub
test
fwait
mov
pop
(bad)
cmps
sub
iret
jmp
pop
xchg
mul
cwde
in
scas
mov
(bad)
icebp
push
push
inc
call
dec
or
stos
(bad)
jae
add
xchg
inc
jo
pop
add
dec
push
jbe
sbb
cmp
adc
popf
inc
pusha
inc
sub
icebp
fidivr
push
icebp
mov
ret
int3
(bad)
mov
cmp
repz
lea
xlat
fxch
sub
jb
sbb
and
ret
lods
xchg
jle
fiadd
adc
jbe
pop
cdq
enter
push
test
lods
or
scas
outs
adc
cli
lds
inc
(bad)
cwd
mov
les
jnp
mov
lahf
push
outs
and
mov
mov
std
and
adc
and
mov
outs
sub
add
inc
int3
cmp
sbb
loopne
(bad)
test
dec
mov
outs
mov
lods
sbb
fwait
test
and
mov
fcomip
jbe
jbe
inc
add
call
inc
pop
xor
icebp
sub
out
js
xor
pop
mov
(bad)
xchg
adc
ss
add
fidiv
dec
mov
mov
cwde
pop
cmc
fsubr
shl
add
inc
jmp
inc
jl
loop
xlat
test
cmp
pusha
jnp
cdq
adc
lods
icebp
bound
cdq
mov
sub
sbb
or
xchg
push
fs
dec
cld
loop
xchg
loop
lods
xlat
jb
xlat
xlat
mov
fistp
stos
outs
arpl
or
jp
sbb
bndstx
shl
retf
vrndscalesd
push
pop
sub
aaa
pop
jae
or
daa
test
addr16
mov
pop
repz
push
cwde
mov
dec
fidivr
mov
sbb
mov
rcl
xor
jnp
fist
imul
in
inc
mov
xor
popf
ins
xor
jmp
adc
dec
pop
push
out
dec
inc
add
lods
jo
popa
xchg
faddp
fwait
push
nop
pop
adc
in
mov
sbb
in
pop
imul
sbb
(bad)
and
and
lahf
add
cmps
xor
out
push
mov
sub
jo
and
stc
push
cmc
fdiv
cmp
or
sub
xchg
xchg
mov
sub
and
sub
mov
ins
imul
ret
shl
add
jmp
dec
push
mov
dec
mov
xor
pop
jns
pop
xor
sub
stc
in
sti
sbb
imul
dec
sbb
adc
pusha
lock
pop
pop
lea
stos
jbe
repz
pop
push
mov
leave
mov
cs
add
xchg
cs
mov
xchg
fstp
jno
out
inc
loope
shl
and
test
sub
jle
jmp
add
mov
sahf
in
aaa
jecxz
into
xchg
sub
stos
in
pop
ins
xchg
pop
jbe
inc
aad
aas
pop
pop
popa
icebp
lods
sub
jbe
mov
mov
mov
push
xchg
ret
shl
fadd
and
mov
and
stos
pop
pop
aam
xor
inc
pop
fs
jmp
outs
shr
sti
in
aas
call
aam
inc
jb
and
loope
cld
rcl
jb
into
xor
retf
mov
xchg
int
std
neg
jg
and
xor
jge
stc
xchg
sub
imul
or
loope
stos
rcl
mov
stos
sub
inc
aas
mov
jnp
clc
lods
cmps
scas
xchg
idiv
test
js
jno
fmulp
je
div
ret
mov
mov
xor
int
add
rcr
leave
mov
cdq
adc
adc
fdivr
sbb
dec
xor
xchg
cmps
pusha
loop
les
scas
outs
lods
xchg
push
xor
inc
scas
fld
sub
xchg
je
adc
mov
xchg
fldcw
cmps
or
imul
mov
ret
and
cdq
xchg
mov
sub
lock
scas
or
add
outs
imul
std
or
xchg
and
sbb
ins
xchg
or
sbb
add
ins
mov
inc
popf
ins
xor
fs
and
ins
xchg
adc
neg
pop
inc
pop
and
pop
jno
add
cmp
add
dec
mov
or
mov
mov
mov
mov
jg
xchg
arpl
das
(bad)
repnz
xchg
loopne
pop
mov
ret
je
out
imul
sub
mov
nop
xchg
push
fadd
popf
add
adc
xchg
sub
cli
adc
retf
out
call
pop
mov
clc
push
jp
xchg
xchg
test
mov
ss
mov
retf
outs
lods
sbb
outs
xlat
nop
nop
xor
ret
inc
mov
std
mov
enter
loop
sbb
mov
aas
cld
pushf
push
lods
cdq
push
jns
mov
xchg
fdivrp
xlat
fsub
test
cmp
and
dec
(bad)
xor
ja
shl
pop
xor
xor
xor
int3
test
xchg
adc
popa
imul
out
inc
cs
jg
mov
push
sbb
mov
xchg
ins
xchg
inc
(bad)
and
outs
dec
popf
fisub
fbstp
and
pusha
or
mov
ds
stos
(bad)
loop
pop
add
lds
iret
mov
fidiv
or
(bad)
sti
aaa
sub
cmps
push
sbb
call
aas
std
int3
pushf
mov
rcr
mov
(bad)
mov
outs
mov
shr
int
sti
and
jnp
popa
test
movs
stos
push
nop
repz
call
(bad)
data16
inc
pusha
mov
call
push
xor
shr
loop
cli
stos
mov
xchg
lea
lea
pop
dec
mov
mov
inc
mov
(bad)
popf
cmp
stc
stos
rcr
out
mov
imul
add
pop
dec
shl
mul
mov
sub
push
(bad)
sahf
jl
pop
std
sub
jo
jle
mov
test
sub
clc
in
popa
(bad)
jl
xchg
fild
add
aad
mov
mov
test
sbb
fldcw
cli
aas
movs
sbb
dec
(bad)
push
sub
add
sub
dec
push
and
and
retf
(bad)
in
or
je
retf
jbe
mov
push
add
mov
cli
pop
or
rcr
ja
inc
rcl
call
dec
jge
rcr
adc
mov
clc
bnd
cmp
(bad)
push
js
mov
(bad)
mov
mov
xchg
or
test
les
cmovp
mov
std
iret
dec
xchg
addr16
in
repnz
mov
jno
movs
pop
jmp
je
or
sbb
jo
sub
add
adc
sbb
cmp
sar
push
sbb
xchg
retf
mov
push
mov
and
add
jecxz
sub
push
arpl
popf
adc
mov
sub
mov
and
mov
nop
outs
mov
push
xchg
jo
jmp
cmp
(bad)
loopne
push
mov
rcl
test
lods
adc
mov
stos
xchg
nop/reserved
dec
jns
add
cld
inc
push
adc
and
(bad)
ds
or
outs
xchg
sbb
push
adc
adc
pop
mov
and
loope
pop
aas
or
cdq
lock
jecxz
pusha
jne
pop
sbb
mov
push
mov
lods
sahf
in
adc
or
pushf
mov
xchg
sbb
or
xor
test
fist
pop
mov
inc
les
sub
sub
lods
mov
adc
out
dec
scas
jge
inc
or
push
into
sub
sub
std
dec
mov
(bad)
fdivr
shl
dec
lahf
int3
cmps
pop
and
movs
in
(bad)
adc
jne
stos
ret
pop
into
xchg
(bad)
stc
cmps
xchg
jmp
ds
ja
cmp
mov
xchg
stos
ret
mov
jmp
nop
(bad)
out
add
pop
pop
ins
or
xlat
sar
scas
pop
pop
adc
adc
jns
imul
mov
inc
xchg
push
ds
iret
dec
jmp
sub
dec
xchg
test
dec
push
lahf
loop
xor
dec
sbb
rol
ins
aas
jmp
add
int
(bad)
retf
(bad)
and
loope
mov
dec
not
cmp
dec
ins
fdiv
stos
dec
push
inc
push
cmc
in
pop
xchg
cld
mov
push
mov
mov
cmp
xchg
xor
stos
mov
sub
fadd
or
pop
imul
call
fwait
ss
adc
popf
call
inc
nop
xchg
xor
lock
in
cdq
mov
jns
xor
in
push
test
push
jmp
shl
popf
mov
test
or
sub
ja
cmp
xchg
push
sbb
ss
jecxz
rsqrtps
into
mov
sbb
pop
(bad)
xor
jnp
mov
outs
dec
test
(bad)
cmp
add
mov
stos
repz
jae
leave
ror
sbb
das
mov
sar
clc
ret
stos
fisubr
repz
scas
pop
and
mov
sbb
push
in
inc
jno
jl
push
ficomp
push
pop
inc
pop
rcr
push
adc
add
mov
dec
lahf
fcmovne
mov
ret
loopne
inc
sub
xchg
or
jge
jnp
sbb
rcl
rol
aaa
shr
pop
push
mov
iret
cli
add
pushf
adc
sbb
sub
cld
dec
das
dec
adc
mov
adc
call
hlt
fwait
addr16
xor
add
sbb
inc
push
push
ror
jp
or
push
aaa
dec
cmp
sub
aad
fisubr
lock
xchg
pop
add
mov
aad
cmp
aaa
push
fcomp
int
dec
aad
jns
push
sahf
push
fmulp
ins
add
ins
mov
shr
cmp
sbb
int
sahf
mov
in
aad
sub
or
out
pop
cmc
fistp
arpl
add
mov
and
dec
jno
cld
scas
(bad)
int
ja
std
jbe
push
(bad)
lods
push
cld
sar
lods
rcl
shr
test
cmc
rol
dec
pop
into
add
mov
sbb
out
pop
pop
push
sub
(bad)
and
test
xor
mov
test
push
ret
push
xchg
pop
adc
inc
test
call
movs
in
fidiv
mov
or
mov
ins
popf
adc
jno
fwait
mov
or
mov
mov
adc
hlt
inc
cmc
pop
mov
cmp
or
aas
ins
fisub
pop
push
adc
enter
(bad)
mov
ds
stos
(bad)
fild
fsubr
jge
adc
mov
(bad)
or
pop
lock
adc
xor
xlat
dec
and
pop
je
xchg
mov
ja
pop
fsubr
pop
jle
cdq
inc
sbb
inc
popf
mov
pop
dec
and
or
mov
mov
outs
js
add
mov
fcomip
imul
pop
and
sbb
jl
adc
fnstsw
xchg
stos
pop
dec
mov
sub
xchg
cmp
std
sti
cmp
mov
cdq
sbb
cwde
es
jnp
sbb
js
and
xor
sti
jae
mov
jbe
lock
repnz
call
jle
lea
mov
test
xchg
xchg
cmp
pop
mov
ficom
inc
inc
cmps
in
and
pcmpeqd
repz
xor
mov
loop
pop
out
sub
dec
sti
mov
not
mov
mov
inc
cmp
(bad)
xchg
sahf
add
stc
pop
inc
pop
(bad)
mov
ficomp
imul
hlt
test
adc
hlt
rol
sbb
(bad)
in
xchg
mov
int
(bad)
cmc
jle
push
fstp
pop
outs
cmp
adc
push
sub
mov
mov
and
adc
and
(bad)
retf
ret
sub
xchg
adc
stc
mov
(bad)
jl
push
mov
out
cli
sbb
inc
into
daa
adc
cmp
mov
mov
add
mov
stos
imul
(bad)
mov
sbb
push
out
xchg
pop
int3
stos
cdq
scas
test
retf
mov
arpl
sub
aad
or
paddd
mov
fs
mov
lea
ss
cmps
pop
out
mov
xor
repnz
ds
push
jb
fidivr
hlt
inc
aas
cmp
(bad)
pop
ss
test
fmul
sbb
push
out
mov
in
iret
adc
js
je
cmp
dec
pusha
inc
pop
adc
cmp
sbb
das
mov
je
aaa
cmp
jge
pop
int3
add
xchg
int3
cmp
jno
arpl
xor
popa
cld
lea
into
xchg
rcl
mov
jno
cmps
cwde
cmc
push
push
pop
outs
adc
jo
jp
sub
js
jmp
push
shl
nop
rcl
mov
jmp
hlt
inc
cli
in
fwait
sub
(bad)
sub
fwait
sbb
arpl
int
outs
mov
jnp
cmp
inc
ja
arpl
leave
test
or
sbb
imul
jnp
jmp
inc
mov
mov
mov
xor
(bad)
mov
sbb
retf
es
repnz
jns
xchg
or
(bad)
mov
out
mov
or
sub
sub
ins
xor
mov
jg
ret
mov
xlat
call
push
imul
xchg
mov
ins
arpl
pop
xor
mov
in
sub
dec
nop
arpl
push
inc
mov
(bad)
(bad)
mov
pop
push
inc
push
sub
or
dec
cli
out
les
stc
or
mov
jnp
adc
shr
and
sub
adc
sub
ret
xchg
pop
xor
xor
pop
arpl
lds
adc
or
(bad)
push
xor
sbb
pop
add
lock
fisttp
cld
test
inc
ds
sub
jno
mov
leave
xor
sub
inc
mov
fwait
sub
jae
adc
adc
cmp
mov
dec
(bad)
gs
xchg
fisttp
inc
mov
cmps
sub
and
out
and
rcr
test
mov
and
es
pop
mov
jle
bound
sbb
and
pop
jmp
xchg
adc
dec
or
das
push
mov
cmp
inc
call
xchg
sbb
retf
dec
sti
pop
movs
(bad)
push
jmp
jne
push
lods
xchg
in
adc
mov
repnz
cmp
cmps
xchg
push
cmps
ret
push
out
and
and
shr
xor
in
push
cmps
loopne
icebp
cmp
imul
inc
inc
dec
lahf
xor
imul
pop
in
push
jb
retf
add
adc
mov
sbb
dec
dec
push
scas
retf
and
mov
mov
adc
lods
fwait
dec
cmp
lods
popa
shl
mov
imul
loop
movs
dec
pop
sub
gs
mov
sbb
push
inc
mov
fs
test
repnz
outs
mov
ins
aam
xor
inc
(bad)
pop
(bad)
jp
jae
pusha
arpl
mov
int
dec
add
and
sub
or
repnz
(bad)
sbb
xchg
or
or
data16
mov
pop
call
into
push
pop
jg
push
inc
cli
cmp
(bad)
arpl
push
xchg
pop
outs
ins
inc
daa
fs
leave
(bad)
hlt
ret
inc
sbb
rep
cmp
(bad)
xor
in
push
into
ret
leave
adc
imul
mov
push
dec
adc
fsubr
xchg
jne
pop
rcr
fiadd
inc
aad
jge
shl
call
pusha
sub
mov
jbe
pop
or
or
and
stos
rol
in
pop
xchg
adc
lods
pusha
jne
and
rcr
xor
adc
stc
mov
mov
scas
fucomi
imul
bound
add
mov
adc
xor
popa
add
fs
loope
mov
sar
add
mov
(bad)
(bad)
aaa
dec
pushf
jle
out
pop
jge
les
sbb
mov
push
pop
icebp
imul
mov
mov
ficomp
(bad)
es
jl
xchg
pop
gs
leave
in
dec
pop
sub
mov
jnp
int
push
adc
mov
cmp
mov
mov
adc
popf
aad
jmp
xlat
xchg
dec
mov
bound
icebp
xchg
test
and
cmp
adc
ss
fbld
dec
cmp
dec
inc
bound
add
in
fnstenv
mov
bound
std
in
mov
das
mov
dec
mov
faddp
mov
fild
add
repnz
retf
scas
jb
pop
test
cmps
inc
mov
add
(bad)
sahf
add
add
js
fmul
lods
test
pop
movs
ror
adc
in
lahf
mov
or
sub
xor
fs
lea
jo
cmp
aad
push
mov
scas
pop
inc
sahf
xor
movs
inc
and
stos
and
pop
(bad)
sbb
add
jg
popa
mov
(bad)
fstp
pop
into
ins
shr
pusha
push
adc
adc
call
or
test
dec
pop
xor
push
fisttp
xchg
scas
repnz
mov
(bad)
adc
stos
push
jo
mov
mov
outs
adc
in
push
cmp
test
test
(bad)
or
or
xchg
add
sub
aam
aas
push
cdq
shr
xor
aas
jmp
add
jne
in
(bad)
loope
inc
mov
dec
push
aas
ror
ja
(bad)
and
and
sbb
dec
test
add
xchg
sbb
mov
adc
dec
jbe
movs
sub
mov
fwait
(bad)
mov
lods
cs
and
and
clc
idiv
lods
sahf
add
mov
(bad)
jo
jae
mov
add
sbb
leave
cld
shl
add
shr
inc
jo
fsub
xor
pusha
or
mov
and
add
mov
sub
mov
jnp
scas
fld
push
cmp
xchg
mov
lahf
xor
sbb
out
inc
xchg
xor
jp
inc
sub
mov
or
(bad)
push
(bad)
idiv
mov
xlat
movs
fwait
ret
mov
mov
xor
imul
adc
mov
lea
sub
out
or
pop
addr16
fs
push
mov
mov
scas
pop
stos
xor
adc
into
hlt
(bad)
ds
push
jle
(bad)
loopne
xchg
retf
push
sbb
loope
cmp
push
mov
add
and
add
into
mov
ret
test
mov
mov
movs
mov
cmp
pop
sub
test
xor
adc
lahf
jg
xchg
adc
loop
popa
ficom
jecxz
or
xor
mov
enter
add
call
mov
sar
leave
ret
lods
cwde
popf
icebp
std
aad
xchg
or
sbb
sub
or
retf
bound
js
jl
imul
std
mov
jl
ins
setl
xchg
(bad)
mov
les
or
pop
fidiv
inc
dec
cwde
lds
mov
or
and
pop
les
leave
adc
imul
jl
push
mov
sub
xlat
xor
push
data16
mov
and
imul
sahf
jmp
xchg
mov
mov
or
or
push
sub
adc
in
xchg
push
jg
sub
clc
je
dec
movs
xor
mov
jge
jg
mov
xchg
xor
ret
ret
not
loope
cmp
iret
int3
mov
repnz
add
push
cmp
xchg
(bad)
push
pop
fucom
cmp
jb
test
sub
stos
dec
test
icebp
popf
fdiv
xor
test
in
std
sbb
rcr
pushf
fdivr
xor
retf
and
inc
jle
test
pop
les
mov
scas
pop
jo
scas
push
(bad)
mov
mov
adc
dec
xchg
daa
ja
out
jo
adc
inc
push
ret
repnz
(bad)
xor
aaa
popf
push
outs
bound
idiv
sti
aam
cwde
jmp
adc
stos
push
out
mov
dec
and
or
sbb
inc
rol
cld
lods
adc
lahf
jmp
jecxz
js
shr
(bad)
js
ins
(bad)
fcmovnu
mov
mov
push
ret
call
fild
inc
jge
xchg
pmulhuw
sar
pusha
dec
dec
sub
nop
add
pop
pop
xchg
imul
mov
pop
jg
sbb
mov
jno
or
mov
mov
test
iret
test
cmps
xor
jae
mov
lods
mov
xlat
mov
push
mov
inc
loope
sbb
jecxz
ins
xor
jecxz
nop
imul
(bad)
ds
jb
pop
jbe
adc
les
pop
ret
fild
jmp
in
jmp
aas
jno
(bad)
sti
dec
in
sbb
push
bound
les
aas
call
pusha
lods
jmp
mov
js
stc
dec
sub
int
cmp
lods
ja
pop
mov
lea
pop
clc
std
stos
push
jle
jno
aad
ds
(bad)
in
pop
cmp
gs
fwait
mov
or
or
xchg
les
and
retf
mov
fbld
lea
mov
xor
inc
push
leave
test
ds
pop
cmp
add
cdq
jae
mov
sahf
jmp
addr16
xchg
pusha
movs
xchg
cmps
fs
mov
scas
jg
or
jmp
xor
sbb
test
rcr
inc
in
jl
xor
push
mov
or
enter
dec
pop
out
fwait
retf
mov
cli
pop
aam
add
jns
or
cmp
sub
jno
cmps
push
ret
test
out
daa
xchg
outs
not
cs
jmp
mov
sbb
test
cmps
jno
and
and
lea
xchg
adc
adc
dec
pop
mov
dec
xchg
dec
data16
pop
rol
neg
pop
mov
pmuludq
xchg
sar
dec
xchg
or
pop
popf
je
xor
cs
mov
mov
retf
aam
sub
jmp
fild
fmul
test
ret
aaa
ds
pop
outs
sub
out
lods
xchg
jmp
cmps
aas
xchg
adc
addr16
out
(bad)
or
jae
mov
cmps
into
add
mov
mov
dec
jno
outs
mov
aas
retf
dec
(bad)
aaa
pop
pusha
pop
push
imul
stos
jne
pop
jns
and
call
pop
pop
mov
dec
dec
sub
dec
fs
movs
(bad)
sub
xchg
or
mov
rol
lahf
jns
mov
xchg
push
(bad)
xchg
cmc
cmp
sub
(bad)
mov
retf
out
dec
pushf
mov
movs
mov
bound
jmp
or
pop
in
mov
hlt
pushf
and
dec
(bad)
aad
adc
cmps
adc
(bad)
mov
pop
cs
dec
in
pop
or
sbb
test
mov
push
pop
mov
and
out
in
add
xadd
arpl
cmps
xchg
push
imul
xchg
mov
sub
add
call
mov
xchg
sbb
mov
sbb
fst
les
cmp
loope
xor
movs
inc
jb
adc
mov
inc
dec
push
pop
js
stc
out
and
jmp
pop
in
inc
sbb
movs
lahf
rcr
aad
outs
xor
mov
xchg
gs
jle
fild
scas
mov
repnz
fcomp
pushf
psraw
and
js
rcr
cmp
js
xchg
imul
je
loopne
inc
mov
inc
jns
mov
mov
sub
inc
repz
es
scas
aad
mov
sbb
fcmovne
ss
fcomp
popf
cdq
jg
mov
jns
imul
fwait
aad
test
sbb
inc
rcr
mov
or
cmp
fwait
mov
sub
das
sub
or
sbb
pusha
(bad)
sub
pushf
push
jp
test
sub
or
xchg
jne
out
push
fs
ret
enter
rcr
std
push
shl
xchg
nop
mov
ds
mov
dec
mov
jbe
loop
lock
(bad)
jmp
scas
and
mov
adc
push
mov
add
push
push
pop
mov
jl
(bad)
mov
nop
mov
push
adc
jmp
push
mov
test
and
or
cmp
(bad)
push
pusha
sti
movs
push
sbb
lods
sub
fdiv
rcl
shl
dec
xlat
retf
adc
jmp
mov
ds
ja
pop
mov
jmp
mov
dec
ss
scas
fcomp
or
(bad)
sar
lds
cmps
fidivr
nop
mov
mov
cmp
dec
jle
(bad)
(bad)
sub
outs
mov
and
scas
fimul
arpl
xchg
and
retf
sbb
mov
jge
mov
out
push
cwde
push
cs
shr
pusha
rcr
jb
sub
xor
add
pop
retf
(bad)
dec
add
sub
ficomp
xchg
and
int3
cmp
or
sti
out
aas
cli
leave
jb
adc
inc
jbe
(bad)
xor
nop
arpl
rcl
mov
and
pop
jp
pop
clc
inc
or
sahf
mov
aad
or
stos
movs
js
inc
out
call
pushf
ja
gs
mov
push
cwde
pop
push
ss
xor
sahf
rol
xor
pop
mov
cld
mov
and
jecxz
xor
xchg
mov
xchg
outs
pop
inc
cli
dec
add
lahf
and
jle
fwait
mov
jae
out
jae
cdq
out
lds
cmp
jae
xchg
out
xchg
dec
dec
push
(bad)
stc
sub
das
push
addr16
cmp
xchg
out
mov
(bad)
retf
hlt
xor
cwde
test
inc
push
push
adc
inc
adc
adc
add
pop
cld
clc
lea
push
sub
mov
mov
inc
dec
inc
pop
out
or
xor
fiadd
jp
popa
fldenv
mov
rcr
inc
fisttp
out
ja
mov
pusha
daa
lock
mov
clc
enter
inc
outs
jmp
mov
sub
add
cld
mov
add
dec
sar
mov
rcl
push
mov
daa
iret
sub
lds
stc
push
movs
sbb
inc
inc
xchg
push
lods
cmp
mov
mov
in
mov
in
mov
mov
dec
push
div
sub
ins
mov
dec
pop
mov
sbb
or
icebp
xchg
push
sbb
arpl
cmp
enter
hlt
fbstp
push
(bad)
inc
cmps
mov
jns
mov
(bad)
cmp
adc
test
ret
or
test
stos
jne
jbe
(bad)
cmp
jecxz
imul
sub
cmp
push
es
mov
dec
or
xchg
sub
xor
jb
clc
ror
push
hlt
xor
mov
mov
cmps
in
push
cmp
repz
sbb
addr16
xor
std
jmp
(bad)
cli
repz
fsubr
shl
gs
and
(bad)
loopne
cmp
xchg
loope
rcr
imul
lods
ret
mov
xchg
sub
outs
or
mov
jmp
js
mov
jo
cmp
call
xchg
lods
or
jb
mov
test
aam
mov
mov
enter
add
pop
adc
sahf
out
sar
dec
push
sbb
inc
ins
mov
cmp
jns
repz
jae
pop
inc
pushf
or
cdq
rol
or
jo
jp
jbe
mov
daa
ret
ja
sub
fistp
enter
fs
mov
cmp
and
iret
push
and
mov
jnp
push
test
fldenv
mov
sbb
addr16
dec
cld
outs
jmp
js
dec
mov
test
sti
mov
dec
and
ret
popf
adc
adc
adc
mov
std
mov
or
sti
cwde
movs
sub
mul
daa
mov
lods
fsubr
push
sbb
in
or
dec
inc
repz
loopne
and
xor
cmp
addr16
mov
gs
jl
and
adc
ja
(bad)
adc
(bad)
bound
out
test
mov
into
xchg
pop
outs
ficom
sub
test
scas
xor
cdq
frstor
push
sub
dec
mov
pop
popf
cmps
hlt
pop
or
in
(bad)
ins
mov
test
stos
adc
scas
inc
retf
push
jge
sbb
in
jns
scas
xchg
gs
ror
jge
retf
(bad)
dec
mov
sbb
sub
shl
add
out
scas
in
stos
mov
sbb
pop
int3
adc
sub
mov
(bad)
imul
fsub
frstor
das
mov
stos
push
(bad)
mov
in
inc
add
imul
into
lock
shl
jns
movs
pop
jg
(bad)
(bad)
in
xchg
fcomp
(bad)
and
jne
mov
mov
scas
or
iret
mov
inc
cmp
outs
mov
and
jecxz
adc
and
jge
imul
call
xor
hlt
jg
cmp
jns
call
pop
push
das
movs
or
sti
mov
xchg
xor
mov
or
enter
xor
mov
or
out
push
scas
bound
cwde
add
jb
jmp
repz
or
xchg
test
retf
pusha
es
out
mov
(bad)
push
shl
sar
dec
stos
jecxz
dec
ds
stos
fisub
jp
cli
jmp
pusha
pop
pop
out
mov
add
fcom
sub
in
fistp
in
inc
ret
push
leave
add
or
add
add
and
jae
jge
hlt
mov
movs
in
xchg
or
push
outs
push
les
adc
sti
imul
jp
xchg
mov
jg
or
pop
adc
xor
sub
out
jmp
fadd
cli
shl
fcom
jnp
in
jecxz
iret
popf
loope
cmc
sahf
xchg
repnz
mov
sub
ror
jmp
jle
shl
inc
mov
test
mov
pop
jmp
outs
pop
(bad)
test
fs
stc
jno
inc
dec
enter
xchg
call
in
cmp
sub
jge
mov
retf
movs
add
ins
aaa
mov
jmp
sbb
inc
sub
dec
add
mov
inc
repnz
test
and
loop
daa
rol
stos
es
xchg
pop
sahf
mov
daa
iret
daa
(bad)
pop
test
inc
sub
xchg
arpl
loope
pop
cdq
inc
fwait
pop
cmp
sub
add
mov
push
hlt
paddd
les
dec
xchg
out
mov
stos
mov
push
mul
push
sbb
cmp
call
mov
out
es
mov
xchg
jmp
out
cmp
jmp
les
neg
retf
cmps
aad
(bad)
pop
push
pop
mov
repnz
adc
mov
sar
xor
or
(bad)
sbb
call
mov
repnz
sar
loope
push
hlt
or
int3
add
popf
sbb
adc
mov
cmp
mov
ftst
sbb
mov
and
adc
xchg
inc
daa
scas
inc
inc
mov
jge
jbe
cld
sub
out
mov
mov
lods
les
fld
xchg
inc
jb
sti
mov
outs
not
xchg
add
lock
pop
dec
clc
jmp
inc
(bad)
mov
test
xor
les
lods
xor
sbb
aam
pushf
aaa
mov
leave
fisub
lds
inc
jae
arpl
push
sbb
in
dec
add
or
jg
into
hlt
or
mov
les
xchg
jmp
nop
stc
stc
inc
or
jl
xchg
adc
adc
ret
call
repnz
cli
stc
mov
outs
jne
dec
add
loop
cdq
and
mov
xchg
cs
aad
adc
test
mov
ret
push
stc
and
sti
lahf
mov
je
pop
mov
jmp
(bad)
adc
mov
imul
in
cmp
sub
mov
and
icebp
les
lds
jbe
pop
lods
les
es
gs
jno
sbb
out
test
xor
aad
clc
adc
pop
jns
lock
bound
jb
(bad)
movs
sub
jge
fild
fcmovne
mov
iret
xchg
dec
sbb
mov
xchg
and
scas
and
pop
in
jmp
add
retf
xor
jno
or
pop
dec
cwde
jmp
xor
outs
jbe
fdivr
arpl
xor
and
(bad)
shl
lahf
fiadd
jp
fadd
(bad)
inc
mov
mov
test
pop
shl
pop
adc
inc
rol
(bad)
imul
jge
pop
push
ror
int3
dec
movs
ja
cmc
cld
stos
jb
xlat
jae
or
(bad)
mov
cs
and
xor
mov
hlt
add
dec
jle
adc
repz
xor
sub
jae
add
push
out
outs
dec
jp
pop
push
repnz
pop
stc
mov
inc
jnp
lea
gs
or
popa
pop
and
pop
enter
sbb
push
jmp
jl
call
xchg
lds
add
leave
int
jecxz
in
aam
into
(bad)
cmc
cdq
pop
test
jae
ins
inc
jne
pushf
div
fst
inc
sbb
and
lea
ss
xchg
rcl
(bad)
jbe
les
nop
jecxz
or
sub
fs
out
adc
sub
repz
es
aad
call
aam
(bad)
cs
jnp
pop
jmp
xchg
mov
mov
jle
imul
fld
ret
nop
mov
test
mov
arpl
push
mov
dec
jge
pop
push
mov
sahf
(bad)
xor
push
gs
or
outs
not
fistp
stc
pop
or
lods
inc
jo
loope
mov
cld
fnstcw
xchg
fidiv
lds
std
lods
fnsave
daa
adc
mov
adc
dec
mov
or
in
fist
mov
sar
and
mov
push
fisttp
outs
test
cli
jg
sub
fcomip
gs
scas
loop
test
sahf
sub
inc
push
or
add
xor
jo
ret
pop
cdq
dec
test
dec
jg
inc
js
test
cmp
cmp
xor
(bad)
jb
pop
add
stc
xchg
push
(bad)
jp
ja
clc
and
fsubr
lahf
and
sbb
sub
shr
je
aad
imul
in
or
cmc
(bad)
xchg
or
or
mov
push
out
dec
ds
and
fist
pop
retf
scas
jbe
inc
pop
fsubp
sbb
aaa
mov
lods
cmp
xchg
inc
xchg
xchg
cmp
icebp
mov
movs
fs
cmp
inc
call
pop
xchg
cld
sub
movs
adc
jns
adc
inc
jae
data16
sbb
push
cmp
pop
ins
xchg
adc
xor
pop
stc
aas
xchg
push
(bad)
jge
hlt
ja
add
addr16
(bad)
fisub
sbb
bound
jg
(bad)
ret
lea
xchg
mov
js
xchg
je
inc
mov
push
pop
jmp
mov
push
scas
in
xchg
pop
pop
cli
or
pop
ret
sub
adc
push
pop
in
imul
jmp
dec
mov
imul
cmp
data16
mov
loop
movs
pop
add
sti
adc
rcl
mov
nop
add
dec
ficom
cwde
cwde
sbb
xchg
jge
inc
sbb
jmp
and
add
test
mov
jmp
and
out
clc
or
stc
sub
scas
ds
pop
jge
mov
popf
adc
mov
repz
sar
push
jge
stc
and
je
mov
clc
mov
mov
into
mov
cmp
dec
fwait
xor
cld
push
loope
inc
je
jmp
cmc
mov
mov
xchg
scas
jno
cmp
mov
ret
stc
push
stc
scas
or
cmp
add
repz
cli
call
rcl
inc
mov
lock
aas
adc
dec
mov
cdq
test
cmp
xchg
and
fcomip
out
sub
in
pop
hlt
sbb
xchg
lock
loop
bound
push
movd
sub
xor
jno
adc
sbb
pop
aas
imul
sbb
leave
fild
push
jmp
nop
fldcw
push
xchg
fld
mov
cmps
pop
add
(bad)
idiv
xchg
loop
push
jg
sub
sar
jmp
add
cld
sbb
and
mov
dec
mov
mov
cli
jo
cmps
hlt
dec
mov
loopne
dec
cmc
in
jbe
inc
jns
and
movs
add
pop
test
dec
sub
pop
dec
sub
test
hlt
jl
push
shr
xor
call
mov
jp
rol
xor
shr
jne
add
outs
test
iret
lock
je
push
leave
xor
xchg
adc
sti
dec
inc
or
leave
fs
push
cmp
int3
mov
adc
mov
xor
repnz
std
mov
lods
aad
xor
aas
mov
xchg
sti
jae
aad
mov
pop
mov
neg
sbb
test
push
out
popf
sub
retf
scas
stos
shl
ror
iret
in
jg
je
or
mov
(bad)
in
jg
add
xor
and
int3
and
mov
aam
iret
daa
test
push
aaa
mov
and
addr16
mov
add
xchg
adc
mov
xchg
xchg
test
mov
or
xlat
jmp
cmps
or
mov
sbb
iret
inc
fptan
fwait
cld
dec
sub
pop
add
push
mov
mov
aad
fcmove
adc
aad
sar
inc
sub
dec
pusha
xchg
add
dec
mov
mov
fldenv
ja
retf
sti
mov
dec
leave
cmp
sbb
lahf
mov
sbb
(bad)
mov
mov
outs
cmp
(bad)
(bad)
dec
(bad)
stc
and
mov
mov
test
out
inc
pop
les
fisub
or
loopne
jecxz
mov
les
sbb
in
adc
sbb
sbb
popf
pop
imul
test
les
push
fs
mov
ss
push
aad
dec
jo
mov
add
cmps
mov
imul
and
cmp
xchg
push
repz
mov
jg
or
cmp
cmp
dec
xchg
out
xor
sbb
cld
mov
outs
jg
out
enter
jp
rol
mov
bnd
(bad)
pushf
cmp
fld
rol
jns
jne
call
mov
adc
mov
mov
pushf
scas
repz
jae
in
(bad)
lods
arpl
cld
iret
adc
sub
pop
or
mov
pop
sbb
mov
jecxz
cmp
icebp
out
cdq
inc
add
push
adc
jnp
push
push
ret
test
frstor
fs
fdivr
jge
in
bnd
int3
inc
mov
xchg
cld
jo
inc
ret
cdq
aad
sub
cld
bnd
mov
daa
inc
aas
xor
mov
inc
mov
cmps
sub
cwde
cli
sbb
out
xchg
push
retf
add
data16
cld
push
in
stc
lock
enter
inc
push
mov
inc
mov
dec
(bad)
pushf
iret
inc
ins
stos
nop
jg
sbb
les
gs
mov
out
jmp
or
add
cmp
fist
cmc
lods
icebp
sbb
jo
adc
shr
push
mov
jno
inc
nop
inc
xchg
or
fild
mov
jo
pop
sbb
stos
jg
js
inc
mov
repz
mov
lods
retf
inc
dec
add
fisttp
sub
sub
loope
mov
pop
or
test
and
mov
retf
sahf
jne
enter
add
cli
pop
in
mov
push
popa
lods
pop
push
cli
sti
(bad)
mov
adc
xchg
ins
push
ja
cmp
fwait
ror
leave
jmp
inc
push
or
inc
inc
jnp
cmp
add
fnstenv
fidiv
in
enter
in
xchg
or
test
xor
lds
sub
je
retf
push
sub
loopne
jbe
test
rcl
pop
leave
dec
pusha
outs
mov
add
mov
mov
outs
fwait
add
movs
push
and
hlt
jp
mov
push
popa
sub
pop
fimul
cmp
fadd
rcr
retf
gs
or
repz
punpckldq
dec
push
jns
clc
rol
pop
(bad)
cmp
cmp
adc
mov
or
and
iret
mov
shl
shl
xchg
sub
push
jmp
test
iret
dec
mov
xchg
xor
test
cwde
adc
pop
faddp
in
bound
jg
ret
xor
sub
sub
push
ficom
or
aam
pop
dec
mov
cmp
mov
popf
cmc
pop
inc
ins
inc
inc
(bad)
cwde
retf
cmps
mov
xor
fsubr
cmp
xor
push
mov
ss
push
sub
add
enter
xor
mov
xor
adc
xchg
sahf
or
xor
mov
loope
jb
mul
int
std
std
jl
add
dec
std
cmp
xchg
in
call
mov
jo
ret
ret
dec
xlat
dec
push
das
mov
adc
cs
popf
jne
cmc
jnp
push
imul
mov
cmp
rcr
dec
push
fucomip
stc
mov
in
out
pop
clc
push
mov
mov
mov
or
jle
aaa
mov
pushf
inc
cs
sbb
mov
in
push
fcomp
push
pop
pop
jge
jbe
gs
sub
push
xor
pop
pop
or
aas
cmps
jo
push
add
call
std
xor
add
mov
sbb
mov
(bad)
and
das
and
sbb
sbb
add
jecxz
xlat
pop
push
mov
std
mov
push
ret
data16
mov
push
add
adc
push
xor
push
cmp
jg
mov
scas
loope
pop
push
fcmovnb
loope
sbb
push
push
sub
xor
cmp
adc
lahf
inc
mov
cmp
mov
repnz
loope
cdq
xchg
xchg
popf
cmp
(bad)
(bad)
repz
nop
mov
fbstp
and
xchg
dec
or
fs
pop
int
test
mov
inc
push
lahf
cmp
fimul
or
ror
sqrtps
in
scas
push
dec
pop
loope
test
inc
jl
xor
xlat
pushf
in
lahf
xchg
sbb
xor
push
push
out
daa
mov
sbb
(bad)
xchg
mov
inc
adc
dec
cli
sub
mov
popa
jb
sub
stc
sub
or
or
outs
popa
or
mov
(bad)
cmp
xchg
sbb
xchg
dec
inc
jnp
inc
mov
(bad)
cmp
mov
dec
mov
loopne
xchg
dec
mov
rol
pop
adc
leave
xlat
in
ins
les
cmps
call
add
jmp
xchg
sti
fist
cmc
mov
mov
push
leave
push
pushf
mov
xchg
push
add
mov
cmp
sahf
(bad)
xor
dec
pushf
int
js
inc
xchg
push
stos
cmp
add
push
add
or
push
push
xchg
call
imul
ss
loop
mov
mov
test
lds
mov
sahf
xor
pop
in
imul
retf
sub
or
mov
mov
ins
test
push
dec
dec
mov
loope
ret
xchg
push
inc
dec
arpl
das
es
loope
sbb
icebp
fiadd
clc
fsub
xor
inc
hlt
jge
lea
or
test
jmp
and
int3
and
pop
in
daa
retf
cdq
push
adc
stc
sub
mov
jmp
jbe
mov
sti
jnp
xchg
outs
test
ret
neg
mov
pushw
adc
mov
mov
lods
jne
push
inc
pop
aaa
test
jae
and
xchg
push
in
in
adc
pop
sub
jmp
mov
xor
or
shl
lods
rcl
ins
mov
nop
cld
xchg
sti
xor
cmp
lods
test
mov
and
xor
mov
xchg
sub
iret
shl
add
mov
add
dec
test
test
dec
xor
shr
ror
test
mov
jbe
sub
in
fidivr
dec
sub
mov
in
add
cli
add
ja
mov
cld
ss
mov
sbb
sbb
cmp
dec
xchg
xor
cmp
scas
push
movs
retf
and
out
mov
call
shl
lahf
ja
cmp
cld
mov
cli
hlt
fs
jle
push
jle
clc
test
sub
(bad)
pushf
mov
daa
cmp
lahf
push
dec
ret
mov
inc
cmps
jmp
inc
sub
jne
js
out
leave
jbe
or
mov
sub
popf
fs
jecxz
mov
test
aas
idiv
or
cmp
lds
cmc
mov
adc
ret
loope
xor
jno
aam
fld
xor
dec
rcl
mov
xchg
arpl
inc
pop
add
jmp
and
les
mov
cmp
mov
mov
cmp
stos
pushf
or
int3
sbb
iret
jg
or
inc
loope
xlat
aaa
outs
sbb
jge
pop
add
aam
out
mov
lods
loop
mov
ror
sbb
jne
test
push
xor
ffree
and
xor
leave
adc
cld
movs
mov
loopne
inc
cmp
adc
loop
or
xor
repz
pop
test
or
adc
loope
sbb
cmp
ins
shl
adc
popf
mov
push
dec
pop
or
cmp
mov
fadd
cmp
fsubr
popf
jae
rol
pop
mov
or
xchg
(bad)
repnz
dec
cmps
cmp
mov
jnp
inc
mov
xlat
in
icebp
and
cld
and
ret
xchg
mov
(bad)
mov
loop
ja
pushf
arpl
repz
loop
cmp
xor
in
cmc
popa
add
ja
mov
push
icebp
fst
ret
push
mov
mov
pop
pushf
adc
adc
dec
aas
push
dec
enter
(bad)
xor
in
mul
iret
jmp
test
add
pop
mov
pop
nop
stos
ds
pop
xchg
sub
or
test
add
mov
repnz
ret
cmc
(bad)
ror
adc
pop
dec
sbb
shr
aad
dec
and
mov
(bad)
in
outs
dec
stos
inc
mov
sahf
fcomp
mov
mov
out
pop
sub
sub
xchg
lods
ret
xchg
add
add
les
jb
lods
lods
jmp
imul
in
adc
mov
in
inc
mov
adc
jo
xor
cmp
enter
cmps
mov
and
arpl
(bad)
mov
cwde
mov
mov
cmp
or
sbb
sub
pop
ret
scas
push
inc
push
or
mov
jge
mov
ds
lods
pop
loopne
dec
or
jb
std
int
cdq
add
inc
sub
jno
cmp
lock
int3
cli
jmp
loop
sbb
fist
dec
xchg
imul
std
lock
sub
lods
mov
mov
sbb
cs
cdq
repz
into
jb
mov
std
std
outs
pop
std
add
xchg
dec
nop
sub
aaa
sahf
dec
jmp
or
xor
popf
dec
inc
xor
cmps
scas
fwait
mov
mov
inc
and
or
sbb
cmp
sbb
add
in
push
loop
fmul
hlt
inc
or
sbb
rol
xchg
rol
adc
inc
in
test
mov
xchg
xlat
out
test
rcr
addr16
pop
out
or
(bad)
cmps
fcompp
mov
icebp
pop
lock
out
or
mov
inc
lds
sub
mov
fcmovu
cmp
xchg
adc
inc
scas
cmps
jo
aad
jecxz
mov
add
jns
mov
movs
mov
cli
mov
sbb
outs
out
fsub
pushf
xor
cdq
cli
push
imul
outs
mov
pop
push
or
scas
jge
adc
xchg
ret
mov
inc
fcomp
or
out
sub
mov
inc
loop
mov
and
mov
add
sbb
pop
in
mov
pusha
jmp
mov
cwde
push
mov
sub
movs
shl
xchg
mov
stc
cmc
sbb
stos
mov
jnp
cmp
jno
xchg
mov
pop
stos
push
pop
cdq
push
cmp
(bad)
dec
or
push
mov
es
div
scas
and
cmps
cmp
inc
cmp
or
(bad)
pop
cmps
mov
sbb
cmp
mov
mov
push
add
mov
int3
jl
jmp
cmp
and
inc
nop
jecxz
not
xchg
cmp
mov
movs
dec
adc
pop
pop
pop
movs
repnz
xchg
mov
jmp
mov
retf
in
cmp
jmp
inc
push
push
aam
cmp
jne
shl
jmp
adc
and
mov
push
cmp
(bad)
cwde
ds
sahf
jne
add
xor
mov
icebp
hlt
dec
call
in
pop
repnz
mov
cmps
dec
in
pop
dec
icebp
adc
popa
inc
ss
test
sar
repnz
popa
popa
movs
jecxz
test
lock
cld
icebp
dec
inc
outs
inc
addr16
pop
xchg
dec
adc
or
cmp
ds
test
shl
sub
in
(bad)
jnp
jae
and
mov
add
(bad)
ins
adc
ins
cli
les
pop
cs
xchg
sub
and
into
sbb
int3
fucomip
(bad)
(bad)
mov
iret
les
cwde
fbstp
shr
mov
cmp
xor
inc
mov
fiadd
stos
sbb
outs
jmp
(bad)
lock
and
sbb
mov
and
ss
loop
pop
hlt
(bad)
xor
bound
sbb
add
pop
jmp
(bad)
adc
test
ret
dec
outs
imul
sti
stos
rcr
dec
and
lods
idiv
cmp
dec
jp
jae
jmp
or
(bad)
jmp
cmp
retf
dec
repnz
and
out
adc
jmp
arpl
inc
stos
or
pusha
xchg
or
xchg
and
xchg
add
dec
jo
jge
fisttp
xchg
jne
mov
xor
pop
daa
cmps
sub
ficomp
neg
xor
in
hlt
pop
jg
bound
gs
cli
pop
daa
or
nop
add
iret
push
sub
jo
add
inc
mov
cs
jbe
clc
mov
sbb
hlt
jbe
arpl
sub
jb
psadbw
movs
ret
dec
sbb
mov
cmps
fs
dec
sub
or
push
(bad)
stos
ds
mov
cmp
test
cmp
sbb
adc
sub
sahf
push
mov
je
add
outs
cmp
mov
ret
cmp
test
jmp
jle
dec
and
jp
xchg
mov
mov
xor
scas
gs
add
gs
sub
xchg
cmp
dec
and
nop
pop
inc
out
push
aad
fisttp
mov
iret
jne
cli
xchg
ror
add
and
xor
jmp
bound
ret
shl
shl
ret
xor
and
es
in
nop
dec
jne
(bad)
adc
cld
adc
xchg
es
ror
out
ret
outs
sar
les
xor
fidivr
gs
push
aaa
adc
mov
push
lock
or
daa
int
cmc
xchg
stos
loop
call
jmp
jmp
(bad)
popf
out
add
xchg
into
ret
fld
mov
mul
enter
jmp
dec
mov
mov
jno
fs
sub
push
cmp
dec
je
cmp
out
jno
xor
mov
out
pop
shl
push
pop
fist
add
xor
mov
rcl
sbb
retf
stc
mov
inc
cwde
xchg
adc
out
dec
(bad)
ficomp
loope
mov
sbb
fiadd
test
add
mov
add
outs
int3
or
push
jg
iret
jo
pop
mov
cs
pop
and
fmul
push
adc
js
icebp
retf
es
mov
or
ror
mov
mov
shl
sbb
les
xor
xlat
sbb
pop
fstp
(bad)
fdivr
enter
jnp
neg
mov
out
mov
repz
loopne
scas
pop
mov
add
shr
sar
adc
movs
pushf
dec
sub
(bad)
pop
std
xchg
ret
xlat
js
xchg
jecxz
mov
push
xor
sbb
xchg
outs
cmp
nop
les
fidivr
xchg
cli
rcl
push
popa
add
shl
jne
inc
add
pushf
jmp
movs
sub
inc
push
outs
mov
xor
movs
xor
fld
xchg
cmps
mov
imul
mov
ins
pop
ret
push
mov
jns
push
push
push
xchg
and
pop
out
sub
lds
in
mov
cli
les
fsub
mov
imul
fstp
add
inc
mov
mov
shr
sub
(bad)
jge
jmp
xchg
jmp
or
jb
popf
shr
addr16
push
or
arpl
xor
dec
jbe
js
cwde
mov
xchg
jo
out
test
jmp
dec
call
adc
mov
ins
cmp
ins
shr
pop
dec
ins
(bad)
inc
std
sar
push
lods
add
shl
shl
sbb
rol
mov
jb
xchg
fadd
jg
pop
add
imul
cmps
bound
cmp
mov
loop
lds
pop
movs
mov
pop
das
aad
mov
mov
(bad)
jo
sbb
sub
hlt
mov
xchg
or
out
in
sub
ja
outs
xchg
cwde
inc
inc
xchg
mov
adc
and
cmps
push
enter
jmp
lods
repz
std
ss
jmp
jno
int3
cmp
stos
jmp
sbb
mov
push
les
sub
or
fst
out
push
xchg
sub
sbb
xchg
inc
push
mov
adc
mov
(bad)
mov
div
outs
retf
and
mov
hlt
movs
dec
mov
sbb
inc
popf
call
inc
xlat
push
push
sub
ror
loopne
aas
push
add
fsubr
xchg
pop
ins
inc
sub
and
pop
cli
lods
repnz
cmps
push
scas
dec
mov
iret
outs
cmp
fisttp
imul
sub
pop
and
push
push
pop
and
or
sub
jle
cmp
std
es
in
and
add
pop
jecxz
das
shl
or
xor
or
jle
push
in
xor
cmps
push
fwait
pusha
push
enter
cdq
or
push
(bad)
xor
push
pop
stos
cmp
pushf
(bad)
mov
popf
icebp
ja
mov
sbb
js
loopne
rol
fsub
pop
mov
mov
cld
ret
fild
inc
shr
into
sahf
fsubrp
popf
sahf
push
(bad)
and
pusha
(bad)
pop
loope
ss
pop
scas
not
mov
dec
rcl
clc
addr16
xor
mov
(bad)
aam
and
mov
xchg
daa
call
call
adc
push
and
push
push
in
sub
imul
ret
jmp
inc
ss
loopne
pop
sbb
lds
aam
jbe
not
std
cli
dec
pop
inc
pop
or
xor
pop
xor
out
aad
cmp
cmps
mov
(bad)
(bad)
ss
sub
js
cmps
call
ss
xchg
cmp
pop
sub
stos
mov
les
xchg
dec
mov
fnsave
movs
clc
sbb
lahf
jae
ret
adc
cmp
pop
sar
xor
cmp
pop
(bad)
not
scas
push
lods
leave
mov
ss
cmp
rol
inc
push
(bad)
mov
(bad)
fld
repz
bound
out
jmp
in
xchg
or
mov
dec
rcr
fiadd
rcr
lods
jns
jecxz
mov
inc
icebp
aas
mov
jp
or
(bad)
cmp
mov
repz
sbb
vpsraw
jnp
or
sbb
jo
iret
inc
or
cmp
pop
ss
pop
stc
adc
ror
xchg
shl
dec
sbb
mov
in
cmp
ins
into
push
jae
sar
fwait
jb
les
out
into
push
adc
imul
sbb
scas
sub
into
mov
pop
out
std
outs
repnz
mov
sar
pop
fidiv
or
xlat
and
adc
cdq
lods
sub
xchg
inc
dec
xchg
mov
ror
add
loope
mov
xchg
(bad)
fmul
ins
nop
inc
sbb
imul
dec
mov
xchg
mov
mov
mov
pop
jmp
push
mov
push
mov
jecxz
and
movs
cwde
sub
xchg
sub
or
adc
(bad)
add
test
pop
out
xchg
sbb
popa
mov
je
and
in
inc
shl
sbb
pop
mov
cmp
shl
lods
fild
xchg
mov
enter
lock
sbb
add
cmp
sahf
sbb
and
out
mov
(bad)
sub
push
loop
cmc
xor
in
jl
mov
jle
outs
pop
adc
jge
int3
rcr
inc
pop
or
sbb
xchg
jg
loope
hlt
or
cdq
rcr
sub
sub
dec
leave
imul
mov
push
mov
sbb
inc
or
fnstcw
adc
sbb
clc
push
sbb
retf
adc
or
scas
and
xlat
iret
shl
dec
pop
sbb
push
shr
mov
retf
and
jae
out
fdivr
outs
xor
fsub
(bad)
out
retf
add
add
ss
pop
stc
(bad)
jg
mov
xchg
xor
pop
and
pop
mov
and
and
and
(bad)
in
xchg
inc
sub
dec
inc
out
mov
int
push
sub
shl
mov
scas
imul
adc
(bad)
pextrw
jns
add
imul
jno
inc
or
dec
xchg
push
mov
xor
stc
movs
xor
push
cmp
ja
sti
jo
adc
inc
mov
fild
dec
popa
call
lea
fs
xchg
and
add
sahf
ds
sub
mov
mov
mov
clc
and
scas
or
cdq
jne
cmp
ds
gs
dec
outs
mov
mov
clc
cmp
xor
dec
lods
or
sbb
test
leave
push
push
ja
push
lods
sbb
scas
test
loopne
mov
call
lea
fld
iret
xchg
cdq
dec
dec
cmc
adc
in
test
inc
test
mov
pop
dec
data16
mov
les
lds
xor
or
data16
aad
arpl
mov
imul
shr
(bad)
xchg
sub
push
mov
xor
ds
pop
jne
jecxz
loope
adc
push
fucom
mov
in
push
dec
push
(bad)
int3
iret
scas
ret
mov
cmp
cs
aaa
bnd
fwait
cmps
loopne
ret
stos
nop
or
das
and
push
push
dec
xor
mov
add
mov
cwde
fsubrp
shl
sbb
xchg
or
jno
cwde
xor
pop
je
add
add
inc
jb
inc
push
nop
rol
sbb
add
jne
adc
ret
cmp
mov
dec
icebp
xor
in
test
push
push
sbb
mov
lods
js
adc
xlat
stos
in
or
push
add
or
outs
sbb
sbb
jmp
js
ins
call
fistp
daa
fistp
add
and
pop
jmp
idiv
enter
outs
jb
push
(bad)
jmp
and
xor
push
loope
stos
jle
xchg
jecxz
xor
and
loope
lods
cmp
push
push
les
fwait
cmp
(bad)
in
call
add
pop
jnp
push
stos
lods
adc
aas
in
outs
test
xor
mov
loopne
sub
fcom
es
retf
add
test
std
pop
ss
pop
idiv
sbb
push
sub
xchg
push
movs
sub
adc
and
fstp
aaa
dec
les
shl
or
or
pop
nop
sub
shr
mov
add
in
sbb
mov
jo
jmp
test
cmc
je
call
pop
lods
stc
pop
pop
enter
push
ss
fdiv
jmp
in
push
xchg
in
jmp
outs
push
lods
icebp
ret
fmul
mov
inc
xlat
jge
and
push
dec
ins
les
inc
adc
gs
xor
fisubr
inc
call
fimul
clc
jmp
cmc
rol
iret
into
addr16
popa
adc
repz
mov
xchg
jns
sbb
sub
mov
inc
cmps
daa
pusha
stos
mov
and
add
and
mov
std
jecxz
jb
push
sbb
push
push
call
cmp
jbe
cmp
aam
stos
xchg
int3
das
loopne
stos
mov
pop
or
aam
dec
xchg
icebp
add
lods
movs
add
cmps
fdivr
dec
test
fistp
push
mov
sub
mov
(bad)
in
adc
ins
shl
xchg
jge
retf
pop
sti
test
scas
sti
sbb
dec
push
rol
xchg
inc
adc
mov
lea
push
test
out
xor
push
jo
(bad)
or
pop
popa
xchg
mov
push
sbb
mov
sar
jle
retf
jmp
and
imul
aas
xor
repz
sbb
retf
retf
cmp
cmp
fnsave
(bad)
pop
add
add
push
arpl
xor
movs
xchg
(bad)
rcl
int3
sar
or
and
pop
cmc
fbld
fistp
pop
and
pop
dec
in
pop
adc
dec
loope
sub
pop
jns
icebp
xlat
jmp
fld
aaa
pop
jae
loopne
(bad)
mov
cs
push
xchg
je
mov
les
movs
pusha
dec
sbb
aas
gs
pop
clc
(bad)
or
add
stos
aas
fwait
cmp
mov
adc
loopne
cs
mov
jb
idiv
retf
clc
pop
lods
xchg
jmp
dec
cli
popf
mov
add
push
loopne
cmps
repz
cmc
hlt
aas
pusha
mov
mov
xchg
push
mov
inc
cmp
add
ins
inc
push
inc
daa
push
xchg
xor
hlt
hlt
rol
int
dec
repnz
jo
add
sbb
dec
xchg
mov
xchg
(bad)
imul
fidivr
cmp
or
inc
fst
push
mov
mov
xchg
jb
test
mov
mov
sbb
push
inc
idiv
pop
adc
fcmovne
pop
leave
push
cs
xchg
loop
dec
pop
pusha
cmps
gs
clc
mov
inc
sbb
stc
out
mov
add
jae
mov
mov
mov
add
test
xor
mov
cli
xchg
shr
test
xchg
inc
mov
ss
jecxz
fs
push
jp
ja
(bad)
out
cli
clc
or
mov
je
push
adc
pop
pop
adc
add
xor
push
je
inc
inc
fwait
xor
test
into
sub
out
rol
pop
inc
mov
jg
pop
arpl
mov
imul
mov
aad
mov
icebp
call
not
or
cld
sub
popa
mov
sub
(bad)
push
das
push
sti
cmp
fstp
test
int3
mov
mov
jg
sbb
mov
pop
sbb
push
rcr
test
les
or
outs
sub
add
pop
addr16
sti
repz
retf
push
clc
mov
scas
fsub
mov
cmp
xor
sub
add
and
adc
mov
shl
inc
push
dec
fdiv
xchg
ins
push
sub
jne
push
(bad)
sti
int3
dec
xchg
rcl
out
(bad)
cmps
pushf
pop
mov
lock
mov
push
xor
dec
ret
xchg
cmps
xor
in
rcr
adc
jle
int
rcr
scas
push
pop
adc
loope
data16
jbe
push
mov
push
mov
jge
pop
cmps
mov
push
push
mov
fucomip
outs
loopne
je
jb
dec
data16
xchg
cld
pop
loopne
adc
clc
xor
ins
or
sbb
adc
pop
push
xchg
xchg
jo
mov
or
xchg
add
fldcw
sub
fcmovnu
xchg
jne
div
pushf
fs
add
xchg
test
mov
js
inc
test
mov
fcomi
mov
cs
sub
mov
sub
pop
call
test
int3
dec
mov
jle
add
push
iret
rol
inc
add
push
sbb
or
outs
pop
lds
call
cmp
xor
icebp
ficomp
mov
sahf
movs
(bad)
test
cmp
xchg
ja
inc
pop
xchg
push
push
scas
arpl
stos
das
or
loopne
sub
in
pop
dec
cmp
mov
addr16
add
push
pop
pop
dec
push
xor
pop
jmp
inc
cli
sub
and
mov
stos
pop
mov
jle
rcr
xchg
rcr
push
fisub
and
add
rol
jb
(bad)
clc
and
cmp
cwde
pop
sbb
push
out
mov
in
fbstp
inc
shr
ins
pop
mov
pop
pop
nop
jns
pop
push
leave
add
pop
cld
test
call
test
(bad)
ficom
adc
xchg
push
pop
xchg
pushf
mov
ins
cmp
pop
xchg
sti
push
mov
jne
xor
out
cs
or
ss
vpsubd
xchg
(bad)
jge
xchg
add
aas
lock
cmps
pushf
push
out
add
fs
dec
push
popf
inc
clc
cld
enter
xlat
cmp
es
dec
cmps
rcr
ret
mov
pushf
jmp
sub
adc
cmp
add
mov
loopne
add
fsubp
pop
cmp
shr
or
cs
std
add
mov
jg
push
xor
adc
mov
stc
jb
cmc
aas
or
loopne
(bad)
in
sbb
jp
idiv
mov
js
push
lock
push
jne
jne
stos
mov
scas
bound
js
push
mov
stos
lods
inc
mov
mov
dec
int3
sub
sub
push
in
pop
add
sbb
(bad)
mov
xchg
or
jae
out
mov
repz
cmp
test
icebp
pop
je
out
loopne
sub
mov
jne
aas
idiv
mov
or
scas
sbb
mov
jns
mov
mov
xchg
pusha
in
xor
fbstp
or
scas
or
mov
sub
dec
(bad)
fidiv
mov
test
iret
inc
inc
fcom
xor
fs
dec
jmp
cmps
(bad)
adc
std
xor
ins
test
cmp
inc
sub
std
pop
add
inc
test
xor
mov
push
push
movs
mov
sub
adc
xor
sub
jmp
jecxz
mov
xchg
fisub
scas
mov
outs
movs
stc
fwait
sub
jl
dec
cmp
mov
dec
mov
xchg
arpl
cmp
xchg
mov
movs
or
inc
and
ins
dec
addr16
ss
call
dec
jb
retf
jbe
mov
add
test
mov
pop
ja
mov
rol
retf
sub
inc
clc
and
xchg
pop
sub
je
dec
int3
inc
push
mov
(bad)
test
loopne
sbb
cmps
or
sub
gs
adc
dec
cmp
jge
cmp
xor
or
and
js
push
sti
jecxz
sub
and
es
(bad)
or
ret
push
mov
fs
inc
imul
pop
test
sub
adc
mov
mov
lahf
xchg
ds
adc
outs
jg
scas
dec
(bad)
sbb
sahf
pop
push
sbb
push
mov
and
and
pop
icebp
arpl
mov
cli
sbb
xlat
dec
pop
push
les
pusha
stc
jmp
in
(bad)
and
je
push
xchg
into
out
xchg
jno
mov
jmp
sti
outs
mov
cdq
lea
imul
mov
mov
sti
xchg
in
mov
pop
inc
push
loope
cwde
out
xlat
and
test
inc
pop
out
outs
xchg
jecxz
push
fbld
cmp
mov
sub
mov
in
jp
dec
(bad)
sub
fnstcw
fsubp
dec
test
xor
jbe
call
sub
stos
imul
jae
hlt
inc
pop
mov
mov
sti
pop
adc
ret
dec
pop
sbb
lods
cld
or
mov
push
pop
add
pushf
lds
pop
ja
xchg
sbb
leave
inc
cwde
dec
mov
outs
push
mov
out
shl
push
xlat
add
xchg
test
or
shl
repz
jae
dec
stc
sbb
pop
pop
dec
pop
jg
push
loop
inc
or
out
cmc
outs
repnz
jae
stos
inc
cs
add
mov
repz
mov
imul
xor
jle
imul
ja
mov
dec
out
mov
pop
sub
stos
fisubr
adc
jne
lock
push
fs
xchg
mov
sbb
popa
(bad)
xor
lahf
push
cmp
movs
xor
fsubr
mov
sbb
(bad)
push
rcr
lahf
(bad)
cmps
mov
jmp
shl
sti
or
xchg
out
outs
add
mov
pushf
add
or
sub
mov
xor
arpl
sbb
pop
(bad)
lock
or
lock
mov
(bad)
out
cmp
shr
daa
jae
jmp
std
addr16
call
bound
mov
movs
popa
ds
pop
push
inc
xchg
ffree
leave
sbb
inc
jle
dec
jmp
adc
and
pop
test
xor
ins
outs
adc
or
sub
push
sbb
loopne
pop
imul
retf
xor
jg
lods
xor
ror
xor
lods
jg
push
jle
fisttp
movs
lahf
mov
sub
mov
shr
jbe
bound
sub
add
call
xor
iret
imul
fcmovu
jb
in
and
mov
popa
scas
cmp
xor
xor
or
stc
dec
call
push
inc
add
int3
es
pop
call
xchg
loop
add
mov
sub
(bad)
push
jle
cmps
jp
inc
cmps
xlat
sbb
das
xchg
cld
mov
nop
(bad)
jbe
cmp
adc
outs
push
js
loop
fmul
retf
addr16
push
inc
or
pop
(bad)
movs
je
shr
and
cmp
aas
and
inc
imul
ins
adc
mov
xor
mov
jmp
add
shr
int3
sbb
and
ja
xchg
or
(bad)
rol
ret
cli
lods
bound
push
mov
add
test
jle
xlat
xchg
inc
push
stos
add
mov
xor
sahf
int3
push
pop
enterw
fs
std
or
jae
dec
stc
fistp
or
jne
out
dec
or
and
sahf
or
sub
retf
mov
ror
sub
cmp
dec
cs
pop
pop
dec
call
add
or
jb
(bad)
hlt
adc
sub
aad
mov
arpl
ror
and
lea
mov
and
cdq
test
jnp
call
jge
xor
shr
gs
movs
xchg
daa
xchg
lock
movs
dec
pushw
sub
repz
adc
push
mov
loop
cmp
pop
xchg
inc
or
push
add
or
xchg
mov
repz
push
les
dec
jl
mov
mov
pop
sub
je
xchg
mov
ds
loope
fsubr
sub
(bad)
in
sti
cld
nop
ret
push
sub
bound
xor
push
int
adc
mov
sbb
xchg
mov
jnp
rcl
push
repz
je
out
push
xor
pop
pop
jo
daa
dec
mov
pop
sbb
xchg
loope
lahf
pop
mov
sar
mov
std
out
shl
stc
sahf
jo
std
stos
test
sub
xor
pop
mov
ret
mov
xchg
cwde
iret
jge
mov
out
aad
dec
dec
add
adc
leave
jmp
fldcw
stos
mov
aas
add
scas
jp
dec
sbb
dec
test
jb
daa
movs
fwait
clc
mov
sbb
mov
pushf
ds
(bad)
ror
jo
mov
inc
cmp
pop
or
inc
shl
stos
cmps
and
call
dec
pop
shl
enter
pop
mov
ds
inc
popf
addr16
xor
jo
das
jmp
add
jns
xor
cmp
xchg
sub
repz
pop
test
xlat
xor
or
push
(bad)
test
out
adc
add
nop
hlt
and
out
mul
xor
jmp
std
cmp
sub
and
dec
jae
fisub
sbb
mov
push
fwait
push
push
mov
ss
push
jmp
pop
jno
fucomp
jae
xchg
xchg
test
cwde
adc
sbb
push
sbb
jp
outs
loop
pushf
cmp
rcl
in
jecxz
lea
xchg
or
jmp
popa
aaa
adc
(bad)
cmps
xor
mov
rcl
xchg
mov
sbb
call
fcmove
ret
lock
(bad)
clc
push
pop
mov
push
nop
(bad)
mov
nop
(bad)
xchg
sub
mov
fucomi
or
cmp
pusha
test
xor
mov
pop
adc
jo
movs
pop
gs
xor
icebp
dec
in
aas
mov
jb
cmp
push
scas
xlat
inc
sub
xor
dec
lahf
in
hlt
and
and
sub
arpl
and
pop
ror
lahf
inc
in
(bad)
or
push
add
inc
sti
out
sub
(bad)
addr16
scas
sti
or
nop
pop
outs
xchg
sub
bsf
call
js
jno
shl
aas
retf
pop
sub
adc
xlat
call
ret
int3
xor
jmp
jle
(bad)
test
icebp
mov
or
jmp
push
loop
bound
jmp
cmp
pop
add
dec
add
or
jg
dec
xor
gs
push
add
sbb
sub
cmps
inc
fdivr
out
push
daa
ffree
xor
iret
cmp
sysexit
adc
pop
repz
xlat
div
pop
xchg
xchg
iret
gs
mov
fst
enter
test
repnz
adc
pop
jae
and
push
stos
movs
arpl
test
out
mov
mov
test
cmp
adc
push
sti
imul
loopne
test
push
stos
movs
test
push
mov
dec
int
mov
repnz
jg
ss
push
call
in
jl
ret
sbb
retf
pop
xchg
mov
xor
outs
jge
and
inc
and
test
ds
inc
retf
out
rcl
sub
lock
rcr
jns
mov
(bad)
nop
data16
cmp
retf
mov
ds
pop
adc
aam
(bad)
jmp
int
jl
adc
xchg
daa
js
cmp
outs
fldenv
mov
mov
jmp
mov
or
mov
in
pop
push
inc
inc
call
sar
cld
call
cmp
jmp
mov
(bad)
lahf
sub
jns
mov
or
push
loope
aad
mov
push
jp
int3
stos
mov
inc
jecxz
push
adc
shl
sbb
enter
loopne
xchg
add
cmp
cld
push
and
sbb
std
ret
xor
push
xchg
daa
loopne
retf
inc
retf
pop
cmp
sbb
aaa
aad
movs
pop
mov
das
xchg
xchg
scas
imul
out
jnp
ja
cmp
lahf
imul
cmp
lods
leave
dec
test
push
adc
xchg
sti
ins
sbb
movs
adc
fmul
pop
xchg
(bad)
adc
dec
jl
sbb
cdq
mov
cmc
retf
jo
inc
inc
js
cwde
je
shl
push
test
sbb
leave
je
inc
cmc
push
mov
pop
popf
arpl
adc
dec
sub
ds
repz
daa
addr16
pop
lods
call
repz
or
sub
push
inc
inc
(bad)
xchg
ror
call
out
and
loop
fisttp
mov
cmp
adc
fwait
int
gs
clc
sub
fdivr
jmp
inc
jne
jns
xchg
cmp
pop
mov
in
mov
pop
loope
and
xor
cli
jmp
mov
mov
adc
retf
push
mov
mov
stos
sbb
ds
imul
pop
(bad)
int3
or
rcr
mov
outs
hlt
inc
or
dec
rcl
mov
cmp
sub
and
and
clc
pop
xor
add
xchg
add
mov
adc
frstor
xchg
loop
outs
shl
aas
cdq
push
iret
ja
call
fucompp
repz
sub
fistp
or
mov
out
mov
cwde
mov
mov
push
mov
cmp
sub
adc
mov
add
int
(bad)
(bad)
hlt
icebp
inc
dec
mov
mov
push
fwait
pop
arpl
sbb
mov
cmp
add
mov
sub
push
retf
sahf
pop
cdq
out
cmp
nop
sbb
mov
gs
push
fwait
(bad)
out
or
mov
ret
imul
sbb
dec
cs
pop
call
test
sbb
xchg
leave
mov
and
mov
(bad)
mov
repnz
popf
loope
cmp
fstp
mov
inc
in
or
mov
out
xchg
fidivr
rol
inc
mov
mov
add
adc
fidivr
xor
mov
or
fst
adc
imul
test
ret
xchg
pop
mov
mov
mov
call
or
ins
adc
mov
and
xadd
cmp
add
fdiv
repz
fs
dec
fist
mov
mov
sub
sbb
and
cdq
cwde
jmp
(bad)
and
inc
lahf
fldcw
out
mov
hlt
adc
test
inc
jo
add
bnd
movq
mov
jg
mov
cmps
sbb
hlt
push
jge
scas
into
push
in
dec
sub
mov
das
sub
popf
add
jb
das
mov
pop
les
lahf
loope
popf
pop
nop
sub
mov
jns
add
cmp
push
das
fiadd
mov
sbb
ror
and
(bad)
cwde
push
inc
mov
gs
(bad)
scas
jle
or
adc
mov
dec
mov
stos
sbb
xchg
lods
stc
out
xchg
(bad)
pop
mov
or
inc
sbb
cld
push
dec
mov
pushf
int
dec
or
aas
(bad)
jg
inc
aaa
push
leave
push
out
out
iret
dec
repnz
movs
sbb
sbb
daa
lds
fadd
add
mov
sbb
sub
sahf
jp
xchg
mov
loop
jno
popa
in
in
stos
fnstsw
sub
lahf
and
mov
popf
adc
xchg
xlat
sbb
inc
out
ret
fwait
pop
xor
mov
stos
test
cmp
ficomp
mov
inc
in
aas
mov
push
stos
dec
push
add
mov
lock
mov
dec
sub
movs
and
std
cmps
and
cwde
xchg
pop
jb
aad
mov
in
cdq
int3
and
ins
xor
dec
sub
outs
(bad)
xor
push
aad
mov
iret
dec
mov
cmp
adc
mov
std
gs
mov
mov
lock
jo
mov
sbb
xor
sub
mov
mov
dec
push
popf
adc
mov
ins
rdmsr
push
jmp
and
fstp
popa
push
pusha
mov
nop
fist
icebp
fist
aaa
int3
sub
enter
xor
ins
sbb
mov
arpl
inc
add
pop
pop
sbb
mov
dec
xor
jnp
ret
jne
rcr
adc
mov
jmp
cmp
cld
cmp
inc
test
push
jge
pop
xchg
loope
xchg
sub
mov
dec
pop
jmp
xor
stos
add
push
mul
inc
pop
add
xor
inc
dec
clc
sub
jno
push
adc
and
sbb
xchg
movs
cmp
mov
mov
shl
pop
ret
cmp
cli
mov
rcr
sbb
mov
xor
and
cs
xchg
and
into
jae
pop
mov
mov
aaa
jecxz
sar
and
jp
das
mov
aad
fnstsw
mov
jo
push
in
xchg
pop
jbe
jp
(bad)
jmp
sub
mov
and
push
imul
das
imul
mov
pop
dec
pop
pushf
ss
das
xchg
dec
test
inc
xchg
xchg
pusha
mov
mov
rcl
and
aaa
xchg
cmp
dec
gs
pop
mov
xor
xchg
pop
sbb
mov
pop
dec
add
shr
(bad)
jg
ja
in
in
sbb
int
das
(bad)
addps
jle
mov
call
ret
cmp
cld
test
or
les
cs
nop
inc
ins
into
frstor
jmp
sub
popf
stos
aaa
(bad)
cmps
scas
sbb
test
push
mov
pop
js
cdq
add
jmp
cmp
push
push
adc
fsubr
les
icebp
sahf
scas
jl
test
ror
add
jmp
mov
(bad)
jmp
mov
adc
adc
nop
sub
pop
cld
lods
popf
add
cmp
mov
(bad)
xor
dec
aas
cmp
scas
xchg
add
mov
cwde
cmps
cmps
mov
rcl
mov
xchg
movs
mov
xor
mov
xchg
ins
rol
inc
xlat
rol
mov
add
nop
pusha
pop
jmp
pop
xchg
or
and
push
bound
mov
and
dec
inc
test
push
fimul
nop
sbb
adc
push
xchg
shr
push
bound
cdq
es
sbb
add
fist
test
test
neg
sub
fsubr
add
jmp
dec
push
jg
push
cmps
push
retf
xor
mov
dec
mov
pushf
push
xchg
or
add
out
stos
test
sub
scas
cmp
push
xchg
adc
loope
icebp
mov
call
je
aaa
or
adc
jle
fwait
hlt
xchg
push
cmc
mov
fdiv
add
(bad)
xchg
inc
out
inc
adc
sbb
fadd
and
das
push
pop
fcom
push
dec
mov
pop
(bad)
dec
fsub
test
cmp
retf
sub
mov
movq
pop
iret
mov
outs
cwde
dec
jecxz
add
popa
jmp
cmps
adc
aas
pop
jl
test
rcr
jle
loop
pop
imul
jb
push
adc
and
jb
leave
cdq
sub
ins
rcl
pop
xchg
mov
xor
and
(bad)
loopne
xchg
pop
fwait
inc
fld
mov
retf
div
inc
rol
dec
and
and
lahf
pop
daa
xlat
in
pop
or
xor
loopne
call
jne
jmp
and
cmps
repz
aas
xchg
fwait
pop
shr
test
mov
cdq
inc
in
jbe
jae
loopne
fsub
mov
dec
cli
cmps
pop
(bad)
pop
loopne
ror
arpl
cmc
js
in
stc
daa
in
das
mov
loope
pop
(bad)
(bad)
xchg
pop
and
rcr
aas
jg
call
pop
out
test
inc
inc
push
rcr
ins
adc
xor
sub
repnz
repz
pop
jmp
(bad)
ror
or
jle
mov
repz
push
mov
mov
dec
jbe
inc
jecxz
sub
stos
int3
jecxz
retf
jne
in
sbb
outs
adc
retf
mov
outs
push
inc
mov
push
popa
int
mov
mov
stos
rcr
pop
cmps
fs
push
int
es
push
in
and
pop
mov
das
xchg
retf
or
xchg
jbe
fadd
test
add
or
sub
jns
sub
mov
shr
mov
fcom
icebp
jl
out
jbe
dec
out
popf
xor
nop
jno
rol
xchg
mov
pusha
pop
rcl
mov
pop
in
adc
clc
push
add
adc
loop
ror
pop
jmp
ins
jns
int3
mov
push
mov
cmps
push
mov
fild
add
popf
xchg
mov
push
das
and
adc
adc
adc
std
outs
cmps
rol
ror
test
xor
je
add
retf
mov
hlt
aas
loop
mov
mov
lock
sbb
mov
push
aaa
popa
ret
inc
out
mov
jmp
repz
xor
int3
cwde
fistp
dec
adc
rcr
je
jg
mov
out
push
push
sub
pushf
dec
cmps
(bad)
mov
pushf
cmp
in
movs
clc
sbb
sub
or
mov
xchg
in
sbb
popf
iret
rcl
dec
add
fsub
dec
pusha
stc
sub
outs
mov
outs
fucomp
jnp
div
jae
mov
cdq
xor
(bad)
mov
mov
test
(bad)
div
repnz
jg
mov
into
cmp
int
pop
xchg
push
je
inc
sub
or
dec
adc
mov
cmp
cld
sbb
gs
jmp
or
add
mov
lock
(bad)
icebp
bound
xchg
neg
xor
loope
xchg
jnp
add
out
pop
mov
push
aad
cmp
mov
cmps
xor
dec
into
adc
jge
icebp
mov
inc
sub
(bad)
cld
xor
not
in
sbb
cmps
out
stos
lea
icebp
in
inc
test
adc
sar
xchg
mov
imul
aaa
inc
xchg
inc
push
daa
ud2
sub
push
and
(bad)
pop
ins
adc
and
xchg
sbb
mov
loop
and
daa
xor
push
add
test
add
bound
jb
add
and
sbb
inc
xchg
lds
sub
mov
(bad)
and
inc
push
(bad)
pop
xchg
push
icebp
cmp
ja
dec
inc
movs
inc
add
mov
ins
test
mov
add
pop
pop
cmp
imul
movs
sbb
imul
cwde
mov
sbb
cmp
cmps
mov
out
inc
mov
ss
aas
push
or
fcmovu
dec
pop
jg
scas
out
jmp
into
xchg
pop
adc
inc
repz
jo
stos
adc
jmp
inc
pop
add
data16
js
test
outs
call
pushfw
retf
daa
inc
cmp
inc
inc
out
and
mov
cld
mov
jae
pop
mov
fdivr
inc
cwde
mov
cdq
movs
xor
push
xchg
retf
in
push
call
js
leave
add
ds
jecxz
xor
cmps
or
mov
ins
(bad)
push
stc
ret
ds
or
mov
push
test
adc
push
leave
js
inc
out
sub
inc
sub
test
jo
pop
icebp
jo
add
outs
sbb
xor
mov
das
cmp
shl
pop
jbe
xor
mov
loop
clc
inc
xchg
sbb
cdq
das
aam
sbb
sti
push
sbb
neg
loope
sti
icebp
ja
mov
mov
cmp
inc
or
jg
ja
xchg
xchg
sub
mov
or
or
pusha
xor
sar
cli
sbb
call
imul
push
das
add
pop
fisub
xchg
pop
push
test
leave
rcl
pop
das
icebp
fst
cld
dec
inc
adc
mov
cwde
or
cld
mov
mov
pushf
shl
mov
arpl
mov
mov
sbb
retf
mov
add
mov
hlt
test
lock
mov
and
push
xor
sub
cmps
(bad)
(bad)
mov
cmp
(bad)
mov
ret
push
push
pop
fdiv
xchg
cmp
sub
jb
adc
div
adc
sbb
int3
jne
mov
daa
pop
sahf
(bad)
stc
mov
clc
add
xor
jge
dec
jns
retf
add
ins
(bad)
push
adc
mov
pop
call
je
leave
mov
pop
cmp
push
xchg
ds
test
jmp
mul
imul
scas
jl
or
add
in
lea
xor
ja
mov
mov
popa
daa
sbb
dec
dec
mov
cmps
leave
push
lock
pop
sahf
sbb
push
jecxz
push
mov
loope
out
in
mov
enter
int
add
inc
leave
cmps
bt
lock
cmps
and
push
fld
cmp
scas
shr
stos
jge
jecxz
push
jl
aaa
jecxz
fst
cmp
pushf
xchg
sub
pop
cmp
daa
xlat
leave
mov
loopne
add
or
scas
enter
pushf
xchg
sub
subps
sahf
cwde
pop
mov
xor
rcr
pop
addr16
test
jb
cmps
(bad)
xor
mov
pop
lods
pop
pushf
cmp
(bad)
mov
repz
mov
jb
loope
daa
lods
fdiv
dec
outs
sbb
adc
pushf
pop
jg
pop
cmps
adc
xchg
cs
adc
aaa
xchg
jae
ror
imul
mov
fwait
sbb
icebp
or
cli
sub
inc
cwde
fld
movs
pop
test
sbb
sbb
in
mov
xlat
xor
test
adc
(bad)
inc
sbb
cdq
mov
ret
test
fldenv
pushf
daa
jle
int
inc
sbb
loop
mov
lea
push
scas
fisttp
outs
sub
pop
fidivr
dec
stos
loop
cmps
sbb
dec
or
push
inc
pop
(bad)
fisub
mov
lea
int3
fld
cmc
pop
cdq
add
dec
mov
push
inc
out
ss
xlat
outs
retf
sbb
dec
lea
out
sub
dec
adc
mov
jp
push
(bad)
div
dec
das
icebp
jl
stc
ja
sbb
sti
cmc
xor
pop
xor
rcl
pop
das
je
mov
xlat
addr16
xor
add
xor
aad
lock
loop
xchg
(bad)
loopne
outs
adc
pop
or
loop
in
cmps
push
jg
shr
or
test
mov
dec
pusha
(bad)
cmc
sbb
xchg
int3
clc
data16
add
jge
fwait
in
fild
or
pop
xchg
and
cmp
and
popf
inc
hlt
inc
mov
call
icebp
xchg
pop
dec
adc
jmp
ja
sub
xchg
mov
sti
mov
sbb
shl
rol
popf
lods
fcom
and
movsx
jbe
dec
(bad)
adc
jns
mov
(bad)
fsubr
and
xor
bound
dec
sbb
jae
fwait
mov
xor
lahf
add
sub
nop
(bad)
push
popf
sbb
adc
cmp
adc
nop
cmps
mov
ffreep
xchg
xchg
mov
out
sbb
das
rcl
sbb
adc
mov
mov
sub
sub
pop
cmps
and
in
gs
pop
dec
mov
push
jns
loop
xor
mov
adc
mov
jle
cmp
lea
aam
mov
fmulp
sub
loope
mov
dec
lods
add
xor
outs
sbb
call
add
sub
or
cld
adc
mov
stos
xchg
in
push
(bad)
movs
mul
dec
jnp
(bad)
or
mov
aad
test
nop
pop
ds
push
loope
rol
jno
push
repnz
sub
mov
mov
retf
mov
fs
lea
lock
or
stos
cwde
sbb
shld
add
push
mov
aas
mov
pop
loopne
pop
addr16
sbb
jle
inc
hlt
adc
push
mov
jp
add
xor
out
or
jne
out
mov
or
xchg
ficom
imul
adc
mov
mov
pusha
pusha
icebp
lods
cs
dec
aam
cmp
sbb
(bad)
call
jae
pop
mov
pop
dec
push
mov
(bad)
lock
call
push
sahf
dec
mov
mov
mov
xor
sbb
mov
sub
mov
pop
inc
or
inc
fs
(bad)
and
xchg
and
arpl
data16
cmp
xchg
jle
iret
push
mov
and
push
out
xor
xlat
ror
and
pop
add
mov
cmc
mov
or
out
(bad)
leave
xchg
into
jno
lock
ret
and
iret
mov
xor
sub
cmp
(bad)
in
imul
dec
push
(bad)
xchg
sub
xor
inc
or
mov
test
ins
lods
mov
repnz
scas
mov
inc
aas
out
das
in
cmp
(bad)
fild
mov
div
lock
jmp
movs
mov
and
add
cmp
mov
(bad)
int3
(bad)
(bad)
adc
push
xor
fs
out
xor
pop
and
pop
xchg
push
pushf
(bad)
push
retf
test
xchg
xchg
xor
jecxz
idiv
sub
fsubr
pop
clc
bound
lods
fsubrp
mov
xor
out
adc
bound
xchg
cmp
xor
cmp
inc
mov
in
popa
fs
outs
cmp
loopne
aam
pop
dec
and
cmp
add
sub
test
(bad)
inc
xor
gs
mov
sub
xchg
jge
sub
out
add
add
pusha
stos
int3
bound
or
mov
cmp
cmp
and
xchg
cmc
icebp
lea
jmp
pop
mov
push
mov
test
or
aaa
jno
(bad)
pop
mov
std
std
mov
xchg
xchg
jmp
les
pop
jg
nop
test
sbb
mov
mov
gs
loop
dec
or
and
leave
push
cli
pop
mov
mov
jbe
add
mov
in
jnp
movs
xlat
lods
pop
add
test
rcr
xchg
cmp
push
mov
jmp
or
pop
adc
jg
or
mov
sub
pop
xor
ins
mov
push
test
xchg
or
mov
pop
cmp
jns
ja
mov
adc
pushf
repz
hlt
and
cmp
jae
xor
pop
aam
adc
inc
outs
test
mov
pop
lds
or
cs
push
cmp
cmp
into
es
imul
js
sub
mov
pop
mov
adc
cs
icebp
inc
das
mov
xchg
dec
pop
loope
mov
pop
daa
add
ins
push
repnz
jno
hlt
xchg
sbb
sub
and
ficom
into
movs
sub
inc
jecxz
pop
sar
(bad)
push
dec
jbe
dec
int3
cdq
(bad)
push
add
pushf
(bad)
fimul
jne
mov
outs
mov
out
cwde
stos
enter
test
shr
add
cmp
or
and
jbe
sub
sub
push
arpl
pushf
jb
adc
inc
inc
aaa
das
shl
fcom
mov
repz
and
fstp
and
sub
push
dec
xchg
adc
adc
out
push
movs
(bad)
jmp
mov
push
aaa
mov
jbe
mov
stc
jae
pop
test
dec
inc
clc
cmc
out
xor
test
sti
in
cwde
pop
jae
and
and
jg
cwde
mul
movs
adc
pop
add
mov
xlat
out
jge
pop
neg
adc
repz
icebp
adc
sub
fs
out
(bad)
push
xchg
push
aam
pop
mov
sbb
xchg
mov
sub
xor
lea
mov
xchg
mov
mov
dec
pop
sbb
adc
daa
leave
ret
mov
fst
push
iret
inc
xchg
cmp
cmp
(bad)
jae
(bad)
pop
pop
ret
cmovs
sub
lds
add
mov
stos
sar
jl
xor
cli
mov
loop
jae
clc
fisubr
inc
iret
xor
call
(bad)
neg
pop
inc
or
mov
add
fiadd
push
push
inc
nop
scas
outs
icebp
push
mov
mov
xor
fcomp
js
mov
scas
push
adc
cmc
test
mov
iret
rcr
aaa
xchg
dec
adc
test
sub
push
mov
pop
xchg
test
mov
pop
xor
int3
cmps
or
and
mov
dec
xor
mov
pop
push
outs
jmp
(bad)
in
js
push
pop
(bad)
fbstp
cmc
ds
xlat
mov
ret
mov
dec
push
je
jb
sbb
pop
call
mov
sbb
mov
add
les
adc
call
out
imul
repz
cld
clc
js
mov
lds
pusha
lahf
sub
mov
popf
mov
ins
pop
push
sbb
(bad)
sar
dec
mov
pslld
(bad)
xchg
inc
xlat
jb
hlt
add
push
xchg
fwait
ds
sbb
cld
or
xchg
dec
or
sub
xor
ss
in
hlt
es
dec
or
xlat
ins
adc
scas
jecxz
mov
xchg
pusha
std
or
jge
sbb
lahf
ins
and
mov
ss
jmp
(bad)
outs
and
stos
mov
rol
in
mov
leave
cmp
xor
or
cmp
(bad)
cli
mov
sbb
neg
outs
mov
rcr
shr
bound
mov
neg
mov
mov
aad
imul
pop
or
jbe
int3
add
sub
out
stos
push
push
imul
movs
aad
push
pmaddwd
hlt
fnstenv
dec
gs
ja
xchg
xchg
(bad)
adc
push
sub
inc
mov
fmul
out
adc
pop
xchg
loop
mov
nop
movs
retf
jae
fs
cli
pop
or
fcom
sub
jnp
mov
jge
push
stos
jp
imul
retf
aaa
xor
ficom
xlat
xchg
jle
mov
ja
sbb
js
pop
aad
mov
xchg
outs
imul
sbb
pop
bound
adc
std
inc
pop
jg
data16
jmp
(bad)
mov
xlat
inc
and
jmp
mov
sub
loop
aaa
pop
pop
push
imul
or
push
and
cmps
aad
xchg
jbe
fwait
xlat
mov
movs
xor
add
shl
cmps
pop
push
mov
outs
jne
xor
cs
test
pop
mov
jno
and
jnp
sub
cmps
mov
dec
imul
pop
repz
inc
xor
ins
sub
cmps
cdq
scas
arpl
pop
outs
imul
fwait
cmp
lock
add
std
cs
xor
sub
and
adc
jno
add
and
and
mov
pop
popf
test
popa
sub
add
mov
and
test
clc
lods
push
stos
xor
jne
lods
fdecstp
enter
loop
xor
jmp
sbb
inc
mov
jnp
aaa
adc
pop
dec
hlt
test
ds
int3
add
sub
imul
and
stc
mov
movs
push
push
retf
test
push
cmc
ret
adc
and
mov
jl
ror
inc
fs
(bad)
jns
mov
cmp
cmp
push
(bad)
push
mov
out
push
jmp
shl
addr16
adc
lahf
sub
gs
mov
inc
mov
arpl
popf
ret
call
sahf
mov
mov
adc
cli
imul
cmp
sub
add
push
scas
cwde
cmp
adc
addr16
out
or
repnz
cmp
(bad)
test
or
cwde
fisubr
jae
mov
int
clc
add
xor
ins
fwait
adc
push
not
jo
in
push
sub
aas
lods
rol
or
dec
push
int3
js
dec
cli
ficom
(bad)
test
xlat
jae
popa
pop
sub
jmp
stc
pop
pop
adc
std
jmp
and
adc
(bad)
add
sub
jmp
loope
sub
and
push
cdq
das
or
out
movs
jmp
xchg
idiv
in
mov
inc
xor
clc
or
dec
call
pop
es
jg
aad
fist
push
lds
xchg
lods
imul
xchg
cmp
jp
fcom
cld
push
fld
jl
cmp
test
dec
repz
dec
rcr
jno
test
dec
inc
imul
or
pop
dec
pop
ret
stc
cmps
or
xchg
add
add
popf
sub
repz
call
dec
dec
jae
adc
xor
or
loop
inc
or
pop
mov
push
and
mov
(bad)
in
push
add
nop
mov
pushf
shl
sub
sub
adc
repz
xlat
cmp
out
arpl
test
mov
scas
cdq
inc
add
mov
test
push
jp
popa
cli
dec
mov
sub
xor
jg
mov
(bad)
pop
call
sub
jmp
cli
fst
xchg
into
or
mov
mov
cli
nop
test
lods
mov
push
or
or
mov
mov
fidiv
add
cmp
stc
inc
lods
(bad)
mov
mov
mov
jno
paddq
sti
push
sub
jne
jns
stos
shl
js
test
data16
in
add
or
pop
xchg
and
leave
adc
xchg
xlat
push
cmp
test
sbb
movs
(bad)
mov
(bad)
out
outs
push
out
test
js
sub
xor
fdiv
dec
les
in
je
and
mov
xchg
jae
xchg
cmp
loop
std
ror
sub
jns
call
jno
jns
push
lock
xor
push
call
scas
adc
test
ins
cmc
mov
repnz
daa
mov
in
js
shr
lods
cmc
adc
adc
ss
pop
mov
repz
je
adc
push
jmp
mov
iret
shl
inc
mov
rcr
sub
test
test
lods
ss
scas
inc
cmp
js
dec
cli
test
loop
adc
(bad)
stos
mov
not
mov
sub
inc
adc
pop
in
xchg
push
sbb
jae
push
movs
cs
call
mov
mov
lds
in
outs
cmps
pop
add
xor
push
div
jno
cdq
mov
mov
pop
call
mov
pop
jmp
push
push
pusha
dec
(bad)
adc
add
inc
stos
inc
xchg
outs
mov
xor
cmp
stos
inc
push
daa
sbb
pop
and
(bad)
bound
or
or
push
pop
adc
ds
xor
das
xor
std
fmul
pop
mov
pop
sti
or
inc
inc
mov
add
data16
mov
dec
test
adc
or
xor
scas
jbe
xor
les
xchg
sbb
lahf
(bad)
ins
sub
push
fs
push
in
push
retf
xchg
xlat
retf
in
mov
mov
in
jecxz
sbb
push
repnz
nop
or
xor
imul
mov
cwde
dec
mov
mov
sbb
arpl
or
mov
mov
cs
inc
pop
ret
xlat
pop
out
dec
icebp
adc
cdq
push
mov
xchg
jo
out
push
push
push
imul
and
mov
jge
inc
leave
and
(bad)
in
jmp
stc
push
sub
jo
inc
mov
pop
cmp
lods
xchg
mov
ss
(bad)
mov
in
pop
push
jmp
loope
add
pop
pop
lahf
fistp
sbb
adc
add
mov
ss
je
rcr
add
xor
mov
rol
cmps
xchg
sbb
push
jo
sar
jl
test
fcomp
mov
rcl
mov
cmp
fcom
(bad)
std
mov
push
push
adc
sbb
mov
jnp
aaa
outs
bound
pop
jo
cmps
bound
out
(bad)
lahf
cmp
jge
ja
std
and
xor
xor
inc
dec
xchg
add
fld
iret
sti
fistp
fimul
sbb
sub
data16
cmp
adc
dec
mul
(bad)
mov
fs
lea
cmc
mov
ss
jl
sbb
mov
jns
add
test
repnz
popa
fst
mov
xchg
idiv
push
push
cmp
push
(bad)
pushf
mov
push
sbb
mov
xlat
fidiv
inc
add
mov
xchg
jg
sbb
call
dec
test
inc
adc
nop
xchg
ins
xchg
fs
fmul
(bad)
out
jmp
xlat
nop
push
into
mov
xchg
add
dec
daa
mov
sub
add
jns
dec
addr16
sar
push
iret
cli
sbb
sahf
arpl
add
add
inc
mov
pop
jmp
retf
repz
int3
imul
popf
cmc
mov
mov
cs
add
dec
pop
test
xchg
push
fucom
add
sbb
ins
(bad)
mov
pop
ins
daa
aam
hlt
leave
cmp
test
jp
movs
xchg
or
imul
mov
inc
push
dec
cmp
mov
jecxz
xor
and
adc
inc
out
test
mov
jnp
inc
daa
pop
cwde
or
add
je
aam
shl
out
or
nop
loop
fcomp
je
dec
int
rol
pop
push
pop
mov
aas
popf
mov
and
js
pop
mov
out
and
cs
sub
loope
cwde
repz
pop
ins
dec
mov
inc
(bad)
rol
dec
shr
dec
push
out
test
adc
jnp
(bad)
xor
test
retf
sbb
mov
adc
mov
inc
iret
mov
int
or
xor
mov
mov
sbb
cmc
and
cmps
add
scas
mov
imul
push
ss
add
(bad)
call
xchg
xlat
(bad)
out
xlat
xchg
push
leave
imul
dec
cdq
mov
add
pop
loopne
clc
sti
nop
scas
mov
xchg
retf
outs
adc
xchg
push
das
shufps
mov
and
mov
and
mov
lds
inc
jl
aaa
es
add
or
pop
and
loop
xchg
xor
cmp
or
push
lea
xor
movs
sbb
repnz
gs
dec
sub
or
scas
mov
and
fdiv
fld
or
mov
in
lock
inc
or
push
add
enter
fimul
inc
push
aaa
ret
or
sbb
loop
mov
scas
mov
jl
mov
jmp
jle
loope
xchg
xor
daa
pop
daa
mov
jmp
cmp
fldenv
adc
pop
push
mul
neg
push
mov
cmp
mov
outs
loope
cdq
call
or
out
retf
scas
into
xlat
ret
sub
aaa
clc
lock
inc
not
push
les
rol
addr16
pushf
mov
jle
retf
cmp
xor
dec
or
sbb
cmp
xor
xchg
sbb
imul
jg
pop
adc
imul
clc
xor
dec
adc
stc
mov
rol
jne
aas
lahf
adc
test
test
sub
cmc
jmp
fistp
pop
mov
imul
jge
(bad)
in
add
test
out
pop
lds
lock
mov
adc
sbb
xchg
iret
or
cld
sahf
cwde
push
inc
enter
inc
rep
sbb
push
mov
shr
pop
dec
push
outs
mov
pop
(bad)
sub
and
add
mov
push
xlat
daa
cmp
cmp
imul
int3
or
aam
hlt
(bad)
push
pop
cld
or
jmp
loope
jl
inc
inc
fst
daa
mov
and
into
je
and
mov
push
pop
ins
std
fild
sti
adc
add
xlat
sub
jg
lock
mov
pop
in
cmps
or
pop
push
pop
test
push
cmp
mov
jae
cs
jmp
into
sahf
scas
aam
setge
mov
fadd
pusha
pop
push
adc
lods
loop
jbe
jb
jecxz
popa
outs
xor
fwait
adc
xchg
stc
sub
retf
lods
dec
shr
aas
mov
mov
xchg
sar
dec
jecxz
sub
push
cmps
lds
xchg
xchg
repnz
hlt
xor
(bad)
and
fcom
stos
add
mov
pop
cmps
mov
icebp
xchg
mov
pop
lds
xchg
push
and
mov
aas
ds
in
cwde
dec
or
mov
inc
xchg
aad
loopne
dec
lahf
mov
mov
mov
jecxz
das
adc
(bad)
cmp
inc
mov
test
xchg
stc
ret
repnz
mov
mov
inc
dec
test
xor
out
rcr
cld
mov
adc
or
push
mov
leave
sbb
loopne
dec
mov
iret
pop
inc
leave
test
mov
gs
(bad)
jmp
rol
mov
dec
sbb
test
int
sub
aaa
imul
int3
push
inc
movs
js
jmp
mov
cmp
mov
push
xor
sub
call
sub
xchg
dec
mov
mov
xor
push
ins
mov
push
push
test
add
fcom
and
adc
mov
loop
iret
fmulp
es
cmp
inc
scas
dec
mov
xor
sbb
test
mov
loopne
sub
es
jecxz
add
stc
fidiv
scas
jle
xchg
xor
mov
loope
pop
xor
jle
pop
lea
mov
adc
stos
je
push
mov
sub
test
inc
sbb
cmc
cld
dec
jge
shr
xor
xor
scas
xor
sub
popa
scas
(bad)
cmp
call
movs
faddp
xchg
(bad)
js
cmc
fmulp
cmps
out
xchg
and
(bad)
retf
xchg
sar
inc
cld
lds
mov
inc
shl
(bad)
cmp
xor
jmp
push
xchg
mov
jbe
jp
jmp
cmps
out
into
push
and
cld
and
dec
jns
cmp
mov
sub
in
or
int
inc
sti
inc
xchg
(bad)
int3
xchg
push
cmp
ins
lods
in
jmp
mov
push
out
icebp
push
dec
push
jmp
dec
(bad)
mov
movs
fsubr
retf
hlt
test
cmps
(bad)
imul
push
std
fdivr
sub
mov
std
and
and
imul
pop
mov
out
shl
cmp
sbb
jne
dec
leave
jo
mov
fmul
xor
adc
lahf
sbb
ins
aam
pop
xchg
cmc
fld
jmp
inc
in
jg
sbb
enter
inc
std
or
(bad)
jmp
and
pop
sbb
pop
xchg
jle
sbb
add
mov
(bad)
aas
sahf
pop
sbb
or
cwde
pop
test
mov
push
push
add
jg
sub
or
ins
dec
jge
cdq
push
lea
enter
dec
popa
adc
or
adc
in
icebp
sbb
nop
jno
cmp
xlat
in
push
push
push
sbb
nop
inc
jns
fldenv
add
pushf
rcl
push
lds
ja
mov
xlat
inc
enter
sar
add
scas
hlt
not
push
sub
and
ins
ror
aas
or
lods
and
pop
xchg
shl
mov
adc
pop
push
mov
hlt
pop
pop
shr
push
(bad)
dec
xchg
inc
shl
add
fbstp
mov
inc
xchg
and
mov
mov
fwait
jg
lods
mov
push
jne
ficom
jp
les
mov
rcr
stc
aas
retf
pop
push
fdivr
dec
cmp
push
ja
cmp
stos
xchg
push
inc
(bad)
in
dec
repz
iret
sahf
lods
sub
jmp
xlat
sub
je
les
pop
cdq
bound
jne
mov
je
add
pop
pop
repnz
stos
mov
mov
cli
push
push
(bad)
xor
mov
popf
scas
(bad)
ss
dec
fs
dec
mov
mov
pop
jb
mov
dec
pop
fst
mov
push
mov
(bad)
nop
dec
aaa
and
icebp
movs
or
cmp
mov
mov
addr16
int
xchg
push
les
fadd
or
add
pop
mov
(bad)
repnz
test
cmp
sub
add
rcl
jbe
dec
adc
push
cmp
push
ss
add
popa
mov
(bad)
loope
jnp
cmp
add
test
ret
pop
and
inc
mov
jns
aad
int3
in
test
dec
mov
push
rcl
xchg
stc
iret
lea
mov
xor
pusha
pop
push
sub
sar
loopne
inc
stos
loopne
imul
loop
rcr
in
or
mov
lahf
adc
or
pop
adc
push
outs
pusha
or
and
pop
sbb
retf
das
ja
fincstp
stos
ds
lea
push
dec
cmps
loop
dec
xor
js
push
das
or
jge
movs
and
sbb
(bad)
inc
pop
sub
test
fbstp
nop
out
mov
and
cdq
sar
sub
dec
add
mov
into
or
movs
enter
xor
mov
xchg
jmp
aam
dec
iret
and
inc
(bad)
mov
in
mov
jbe
stc
adc
cld
inc
mov
ds
sub
adc
pop
xlat
jno
loope
es
add
xor
mov
xor
jg
jns
lds
or
xchg
xor
jp
hlt
std
stos
cwde
out
fwait
inc
xchg
test
jno
fst
movs
inc
lds
stos
jp
out
mov
into
jae
sub
fsubp
adc
call
push
mov
stc
nop
mov
pop
inc
fdiv
retf
dec
pop
lds
test
je
add
xchg
ret
jnp
mov
mov
int
mov
int3
fcomp
push
xor
jp
je
xchg
cmc
sbb
fwait
jecxz
dec
mov
sbb
stos
(bad)
das
rcl
xor
mov
or
sub
ss
pushf
pop
ds
mov
pop
jns
aad
adc
sar
sbb
mov
retf
add
xlat
sub
and
adc
xor
(bad)
cmp
int
mov
ror
clc
shr
mov
xor
cmp
repz
cwde
ja
jmp
dec
or
aas
cmp
xor
repnz
imul
hlt
les
sub
pop
pusha
ins
mov
cmp
mov
mov
sbb
cmp
dec
xlat
les
push
bound
into
ds
lods
push
loope
adc
mov
mov
push
popa
aad
inc
repnz
lds
mov
add
push
pop
ret
jne
retf
in
lds
lds
push
cs
movs
aaa
xchg
in
in
mov
or
(bad)
mov
add
adc
and
std
jmp
push
cmps
xlat
mov
shl
mov
and
mov
pop
(bad)
lahf
cwde
test
dec
cmp
fdivr
into
shr
push
cmps
mov
in
div
std
push
inc
and
xchg
inc
add
retf
sub
popf
test
lahf
or
mov
int3
push
jae
out
lods
cmps
imul
xor
pop
cs
mov
jge
adc
xor
out
dec
sbb
push
pushf
push
sub
add
adc
mov
add
mov
cmp
push
sbb
dec
jmp
rcr
jmp
sub
dec
loope
in
mov
add
xchg
leave
xchg
(bad)
jmp
iret
js
push
shr
hlt
fdiv
and
ret
(bad)
mov
sub
leave
retf
je
outs
push
call
or
mov
cmp
mov
mov
mov
mov
sbb
push
jmp
mov
mov
pop
cmp
add
leave
jbe
sbb
(bad)
ja
or
dec
inc
(bad)
xchg
test
mov
rcr
imul
lea
mov
repnz
lds
mov
in
ffreep
mov
cdq
dec
inc
push
inc
pop
and
enter
push
mov
dec
mov
jae
icebp
inc
push
mov
loop
mov
fisub
mov
in
xchg
pop
test
or
add
cs
or
(bad)
iret
lea
pop
enter
test
mov
aaa
jmp
adc
push
mov
neg
call
adc
mov
stos
mov
popf
cmps
mov
push
pop
(bad)
ins
add
jl
inc
sub
out
int3
pop
popf
loop
xchg
add
(bad)
fcom
xchg
aad
or
or
mov
mov
or
adc
sub
adc
imul
call
mov
in
jl
(bad)
std
popa
mov
ins
mov
les
ins
add
shl
push
mov
jecxz
lock
fsubr
iret
push
cmps
lods
sub
daa
and
loope
jb
mov
sbb
mov
pop
jmp
sbb
push
xchg
les
dec
add
pushf
pop
mov
or
mov
shr
xor
push
cmp
adc
xor
push
sub
or
sub
ss
addr16
xor
sti
pop
int
lea
inc
cmp
test
ret
mov
sub
fisttp
data16
inc
cmps
jp
xor
jg
dec
cmps
popa
dec
sub
dec
push
lods
inc
cli
arpl
sub
lahf
mov
mov
cmp
cmps
adc
mov
loop
fild
ret
mov
pop
and
gs
icebp
and
cdq
dec
scas
mov
jge
outs
mov
cwde
mov
in
and
rol
aad
cmp
jne
ret
push
sub
cmc
mov
or
stos
stc
push
push
cld
inc
or
jecxz
out
es
shl
dec
movs
outs
call
mov
inc
adc
jae
lahf
push
bound
mov
jae
call
pop
push
xor
loopne
dec
and
or
test
inc
bound
jo
call
mov
xor
inc
mov
lea
repz
test
(bad)
adc
push
test
pop
push
aad
jbe
cwde
push
jae
fstp
sbb
mov
mov
mov
dec
pop
push
mov
and
out
or
add
sahf
add
push
ins
sub
adc
push
lods
xor
xor
dec
mov
push
stos
out
jns
push
shr
and
mov
fcmove
push
or
push
adc
dec
adc
cmp
sahf
cli
cmc
cmp
push
pop
imul
(bad)
cmp
push
adc
cmps
in
cmps
mov
rol
rcr
retf
jnp
and
je
dec
pushf
mov
xor
xchg
mov
fist
cld
gs
push
xchg
pop
pop
retf
jns
jb
cmp
rcl
jbe
fstp
sub
(bad)
scas
cs
xor
nop
mov
inc
push
inc
pop
je
add
and
loopne
in
dec
dec
and
jg
icebp
inc
out
popa
sub
(bad)
dec
xor
sbb
popa
fwait
ds
lds
mov
pushf
or
and
ret
clc
xlat
and
jae
jmp
repz
sub
pop
in
xchg
ret
push
aas
ss
sbb
shl
scas
jmp
ins
sbb
sub
mov
cmc
mov
test
cmps
and
call
nop
out
lahf
or
mov
aaa
addr16
inc
fisttp
mov
sub
adc
cmc
sbb
jbe
inc
ficomp
cwde
mov
rol
mov
fwait
mov
ret
xor
push
and
mov
fsub
call
sti
mov
mov
lds
sub
dec
imul
(bad)
neg
push
adc
mov
inc
out
xchg
aas
adc
push
jno
xchg
ins
ror
dec
sub
xchg
xor
xchg
fwait
xchg
sbb
fst
test
dec
int
mov
test
add
mov
mov
fsubr
cld
into
cdq
stos
inc
pop
jl
icebp
pop
add
inc
in
sbb
sbb
fst
xchg
enter
ror
dec
(bad)
test
int
cld
pop
popf
cmp
sar
sbb
out
pushw
jg
xlat
in
push
imul
mov
bound
sahf
sub
or
frstpm(287
dec
data16
add
test
mov
stos
and
sti
scas
inc
xchg
sub
mov
add
imul
lea
pshufw
daa
xor
xor
std
and
arpl
ss
out
cld
in
push
sti
jae
fadd
pop
rcr
popa
sbb
mov
(bad)
loop
pushf
fild
or
add
popa
mov
jnp
pop
push
sbb
jae
mov
outs
push
mov
mov
stc
mov
push
pop
aam
nop
out
or
inc
mov
adc
dec
loopne
jo
sti
mov
pop
adc
adc
outs
mov
mov
pop
xchg
cmp
cmps
aad
ds
jbe
icebp
or
out
mov
push
pushf
and
stos
lods
inc
out
xor
repnz
clc
cmp
shr
cmp
in
sbb
int
and
pop
add
xor
pop
fs
pop
pop
aas
in
fidivr
inc
fwait
out
xchg
sub
movs
cmp
xchg
imul
cmp
push
sbb
pop
and
add
pop
pop
inc
shl
test
fldcw
xor
je
mov
(bad)
jmp
dec
pop
ja
mov
div
push
pop
inc
ja
ins
ret
mov
mov
shr
pop
pop
in
popa
xlat
jbe
xor
repz
jp
sub
mov
js
or
hlt
push
jecxz
push
ss
sub
(bad)
or
sub
push
call
or
ret
xlat
pop
scas
or
and
cmp
lods
xchg
into
lods
pop
lea
popf
int3
dec
rol
push
pop
mov
cs
cli
mov
fiadd
lods
or
das
jle
xchg
lock
sbb
adc
sub
int
pop
ret
dec
sub
out
fistp
nop
mov
lahf
(bad)
loop
out
or
out
dec
stos
enter
sub
dec
pop
lods
adc
push
pushf
xor
cli
neg
sub
retf
retf
jl
mov
ror
aam
mov
bound
xchg
xchg
out
adc
popf
and
scas
mov
out
daa
mov
push
jecxz
mov
xchg
jns
mov
popa
jg
mov
push
fisttp
idiv
not
ja
arpl
btr
stos
imul
adc
bound
mov
adc
jnp
stos
in
add
adc
sub
fdivr
std
hlt
aad
cmp
ins
repnz
shld
(bad)
sti
pop
mov
inc
push
mov
xor
mov
pusha
ret
jne
dec
idiv
mov
mov
inc
fsubr
lds
loope
stc
and
mov
dec
push
(bad)
mov
inc
xor
fsincos
mov
jnp
xchg
std
cmc
xchg
xor
test
stos
lock
movs
push
adc
jmp
sbb
cmp
jmp
push
ins
outs
ficom
ja
imul
xchg
or
xchg
pop
mov
adc
test
adc
cmp
sahf
call
and
jge
push
clc
mov
mov
mov
xlat
test
inc
add
in
sub
xchg
add
out
xchg
mov
or
fnstenv
fsin
add
ret
rcl
add
mov
dec
inc
add
fisttp
popa
inc
mov
adc
jecxz
mov
sbb
je
call
sub
mov
nop
dec
retf
push
in
out
mov
mov
sar
popf
pop
in
adc
push
sbb
jns
and
pop
ins
push
jnp
stc
mov
cs
sahf
movs
in
push
push
mov
mov
xchg
mov
pop
jne
sbb
push
or
lods
cmp
cs
cmp
xor
xor
mov
xor
scas
movs
inc
jmp
add
mov
int
xor
push
cmps
stos
xchg
dec
jmp
push
imul
pop
xchg
clc
fld
scas
xor
jle
inc
pop
and
sbb
aas
xchg
xor
lahf
or
int3
dec
add
jp
sbb
mov
ins
push
ret
retf
inc
jbe
out
cmp
pop
fiadd
mov
ret
mov
jg
fsubr
dec
jp
sub
adc
dec
mov
mov
sub
pusha
add
test
(bad)
or
or
aas
bound
cli
retf
ror
ins
jle
cmp
xchg
in
cmp
xor
push
scas
pop
in
test
in
xlat
dec
js
xlat
jno
ret
push
adc
(bad)
push
jbe
movzx
jns
push
mul
push
mov
inc
cmps
mov
mov
into
movs
pop
cmc
fadd
outs
mov
out
fldenv
dec
popa
ret
inc
xchg
mov
xchg
mov
mov
inc
sar
mov
imul
pusha
or
dec
ret
pop
mov
in
stos
pop
jmp
int
dec
adc
xlat
ret
in
lahf
mov
int
mov
pop
dec
fwait
dec
int
mov
jecxz
and
xchg
jp
sub
fcom
pop
inc
sti
movs
jb
fst
xor
(bad)
dec
and
pop
xchg
add
cli
fadd
neg
repz
repz
push
jmp
hlt
imul
(bad)
imul
repnz
in
repz
and
mov
ss
clc
outs
aad
jmp
lock
retf
push
imul
jle
xor
sbb
push
pop
int3
(bad)
push
cmp
adc
ins
rcl
lahf
push
out
popa
or
adc
mov
lahf
jge
sbb
inc
sub
ret
xchg
(bad)
loopne
in
fwait
push
scas
pusha
imul
das
xchg
cmp
clc
push
rcl
sbb
push
and
in
outs
fisttp
mov
push
mov
stos
popa
mov
add
stos
icebp
(bad)
jno
inc
arpl
sbb
jbe
pop
retf
jecxz
or
and
push
and
lea
fist
imul
shl
push
stos
mov
or
push
fs
test
mov
pushf
dec
mov
bnd
aad
(bad)
lds
jns
clc
pusha
mov
dec
mov
sbb
clc
pop
or
dec
dec
adc
pop
inc
cli
mov
xchg
enter
jno
xchg
imul
add
add
outs
test
mov
call
jb
call
aad
cmps
in
push
ins
cwde
push
mov
mov
cdq
nop
push
dec
and
iret
push
cmp
pop
in
add
and
and
es
lahf
pop
dec
fs
lea
in
pop
sahf
adc
in
not
mov
fwait
xor
pop
mov
mov
leave
jl
call
jmp
data16
mov
push
lds
adc
cwde
scas
int
in
hlt
es
pop
jo
das
imul
cmp
loope
jnp
imul
push
and
or
fst
repz
popf
xchg
cld
xchg
xchg
pop
mov
hlt
sub
fstp
aam
push
cmps
xor
cld
mov
movs
push
div
fnsave
test
xchg
adc
xor
pop
xlat
clc
cmp
jle
fild
push
or
jmp
sbb
mov
gs
push
push
dec
mov
inc
iret
mov
mov
add
retf
mov
clc
sti
(bad)
xlat
les
bound
je
dec
push
fwait
xchg
mov
xchg
fs
(bad)
icebp
out
test
mov
lods
push
jb
adc
in
or
mov
in
push
inc
jg
cmp
xchg
in
mov
sub
je
adc
cs
call
mov
scas
mov
(bad)
stc
xchg
mov
ins
cmp
ror
int
movs
mov
xchg
sub
sub
add
cmp
stos
pop
and
cmp
ja
in
mov
out
fidiv
mov
jmp
daa
scas
hlt
scas
js
ins
add
xchg
inc
cmp
gs
stos
xchg
cdq
and
jmp
jbe
iret
sub
jbe
sbb
popa
icebp
mov
or
pop
mov
lea
call
scas
lea
in
pop
pop
sub
loop
mov
xchg
cmps
outs
test
pop
pop
pop
es
neg
lahf
leave
fild
mov
sar
test
mov
pop
outs
dec
dec
out
push
cmp
add
dec
cmp
outs
or
test
lds
aas
retf
scas
sub
sti
int3
movs
lods
or
mov
shl
xchg
mov
jb
enter
test
fdivr
mov
cmp
stos
and
jl
mov
int3
enter
xchg
jno
jle
sbb
mov
mov
bound
repnz
or
mov
adc
adc
ds
imul
dec
inc
adc
cmp
int
not
lds
popa
and
xchg
xor
pushf
icebp
into
jae
inc
pushf
jno
pop
or
in
xchg
add
inc
bound
iret
sbb
dec
aas
int
stc
ja
or
loop
cmps
outs
xchg
push
add
add
sub
enter
push
add
rol
test
mov
sar
stc
mov
mov
je
add
retf
mov
retf
and
clc
test
xlat
pop
(bad)
outs
stc
jne
dec
jbe
xor
xor
into
sub
fwait
pusha
pop
cmps
or
adc
imul
arpl
div
(bad)
in
dec
mov
cmc
cmp
adc
or
ss
jmp
xchg
sub
and
mov
sub
bnd
std
add
and
push
movs
xchg
and
sti
popa
pop
dec
pop
aam
jmp
pop
adc
lea
push
jbe
pop
dec
(bad)
rcr
sub
push
leave
adc
lock
fisttp
lods
add
sbb
leave
js
mov
lods
inc
cmp
rol
and
mov
add
fstp
dec
dec
dec
or
fdivr
addr16
sbb
loop
fcomp
inc
sub
out
jecxz
jo
xchg
enter
and
lock
iret
push
mov
xchg
or
cmp
lock
fisttp
mov
call
(bad)
je
je
xchg
rol
in
and
jnp
(bad)
sub
aam
jle
adc
rcr
xor
imul
mov
scas
iret
rol
loope
fcomp
dec
ret
out
jmp
mov
xchg
fsub
mov
adc
fstp
push
jle
shl
(bad)
and
sbb
scas
mov
sbb
repnz
(bad)
xor
add
pop
movs
iret
mov
aaa
les
test
les
sbb
fdiv
dec
fild
lods
push
jmp
or
data16
iret
pop
icebp
inc
adc
mov
mov
fs
xor
and
adc
and
call
and
adc
lods
int3
int
mov
retf
fld
pop
in
xchg
sti
add
ins
ins
adc
mov
ds
xchg
xchg
ja
adc
cli
(bad)
mov
xchg
rcr
xchg
and
outs
inc
mov
mov
cmp
sub
ret
in
aas
inc
(bad)
cmc
jecxz
std
mov
pop
jmp
adc
mov
inc
cmp
in
adc
cmp
mov
lds
and
xlat
cmp
mov
icebp
and
icebp
call
xor
stos
dec
(bad)
fistp
dec
mov
mov
jno
addr16
ret
rol
xor
shl
dec
ss
xor
mov
sub
sar
or
jnp
mov
int3
cmc
leave
(bad)
int
xor
mov
pop
pop
adc
and
bound
bound
loope
sbb
(bad)
adc
and
jl
mov
stos
sub
or
aas
pushf
adc
sub
mov
push
mov
mov
sub
ret
shl
in
and
fidivr
jmp
and
retf
fucomip
mov
push
or
adc
mov
mov
push
pmaxub
cs
into
add
shl
jne
cmp
test
popf
outs
loope
or
ja
mov
xor
cmp
iret
popa
(bad)
jb
mov
fcom
scas
fmul
mov
mov
xor
aad
imul
jle
loopne
sub
idiv
ror
xor
cdq
sbb
outs
adc
jge
outs
xchg
fpatan
imul
js
(bad)
int3
repz
movs
inc
mov
pushf
sbb
(bad)
in
outs
cmp
cwde
scas
(bad)
jge
sbb
inc
das
jl
stc
inc
cli
sti
mov
ret
cmp
out
cli
aam
aad
lea
add
movs
inc
and
int
push
imul
dec
shl
mov
gs
lock
mov
push
cmps
(bad)
int
xor
and
inc
xor
inc
and
div
in
and
push
aaa
jg
mov
sbb
mov
xchg
adc
mov
xor
jecxz
aam
adc
fsub
scas
mov
mov
pop
lods
pop
imul
fimul
inc
pop
sub
rcl
retf
movs
xor
push
xlat
rcr
daa
nop
fdivr
repnz
fnstsw
xchg
jns
inc
mov
rcr
jmp
mov
lods
sbb
cmp
test
pop
pop
retf
enter
push
jae
add
and
adc
das
in
lahf
in
call
movs
clc
shl
push
es
and
jnp
icebp
xchg
ror
stc
mov
sub
xchg
jl
adc
add
int3
mov
sti
mov
sbb
sti
fild
movs
bound
push
leave
inc
stc
inc
iret
inc
fisubr
daa
sub
mov
xchg
mov
mov
push
adc
cs
loopne
add
sub
push
aaa
add
lods
out
xor
repz
in
test
imul
cwde
adc
in
add
leave
imul
shr
dec
in
fist
xor
stos
enter
xor
cmp
cmps
sbb
mov
inc
pop
cmp
das
jbe
les
jecxz
jbe
fs
iret
loopne
jmp
out
cmps
fld
int3
lock
mov
inc
pop
inc
inc
icebp
mov
and
test
mov
jmp
les
imul
or
and
(bad)
and
xchg
fimul
push
jno
sub
cmp
je
mov
xchg
lods
mov
shl
push
cmps
les
int3
and
(bad)
addr16
loope
inc
stc
or
jmp
xor
popa
dec
movs
stos
test
inc
in
ds
lds
or
clc
cmp
dec
xor
rol
sahf
repz
enter
data16
cmps
xchg
in
shl
inc
ds
in
retf
cmp
nop
mov
(bad)
push
pop
and
jle
cmp
fisttp
mov
add
outs
sbb
mov
mov
pop
ins
pop
call
or
fcmovnu
mov
cmc
pop
add
mov
mov
repz
test
aad
imul
cs
(bad)
aaa
push
clc
(bad)
mov
jae
xchg
cmc
xchg
dec
retf
das
jae
push
out
dec
repnz
stos
cwde
or
adc
fistp
pop
std
sbb
dec
sti
enter
outs
push
mov
repz
mov
ret
sbb
pop
loop
cld
push
dec
int
sahf
dec
gs
ins
push
and
or
and
loope
mov
xor
mov
cmp
jg
and
(bad)
sub
and
setbe
xor
and
loop
aad
call
ja
pop
and
jnp
sub
cs
sub
test
adc
fisubr
mov
pushf
retf
mov
xor
cs
and
pop
das
test
popf
inc
mov
push
or
xor
in
out
(bad)
(bad)
jmp
xchg
push
mov
push
pop
push
sub
adc
mov
aad
aas
adc
cmovl
xchg
pusha
cli
call
cdq
jns
cdq
fisub
sbb
xchg
and
pop
test
or
sti
retf
daa
fwait
inc
gs
aad
xlat
js
fadd
retf
fld
mov
sub
(bad)
daa
sbb
xor
and
ss
mov
jo
xchg
xor
stos
xchg
enter
mov
mov
dec
inc
jg
(bad)
sbb
xchg
fadd
pop
dec
jl
adc
jle
outs
lods
stc
loopne
sub
adc
or
adc
and
inc
(bad)
sbb
inc
inc
push
jp
gs
sub
popa
imul
repz
or
std
xor
sar
xchg
(bad)
jg
lods
add
jo
ror
nop
sbb
fistp
mov
jo
imul
sbb
jl
cmc
pop
xchg
fidiv
loop
outs
mov
mov
or
(bad)
fstp
fs
ds
jo
pop
push
stos
aad
imul
and
mov
dec
xor
push
dec
arpl
div
test
(bad)
mov
or
mov
xchg
daa
cmp
xlat
mov
daa
stc
shr
lea
clc
pop
add
inc
add
adc
sbb
fwait
sub
adc
jecxz
inc
movs
inc
ins
xchg
ins
push
call
cmp
aas
jl
cmps
mov
repnz
(bad)
lds
cmp
pop
jmp
mov
int3
xchg
mov
mov
addr16
xor
mov
cld
dec
or
ins
or
xchg
or
(bad)
mov
int
cli
retf
pop
xchg
sub
arpl
test
push
mov
mov
mov
xchg
add
mov
ret
xchg
fcmovb
mov
mov
mov
pop
mov
mov
cwde
movs
xor
(bad)
repnz
adc
(bad)
in
inc
gs
mov
popf
iret
or
test
or
imul
ins
mov
inc
pop
xchg
inc
sbb
mov
rcl
push
popa
push
test
imul
(bad)
jl
cmp
jns
neg
sbb
das
sar
fs
mov
test
fwait
imul
cmc
dec
push
fstp
fwait
jno
in
test
pop
xchg
push
mov
ror
cmp
in
pushf
aas
cwde
sar
mov
out
out
or
inc
lods
pop
pop
lods
aad
and
dec
loope
inc
push
out
(bad)
pop
movs
pop
test
sbb
cmp
ds
cmp
test
inc
sbb
pop
ror
cdq
mov
or
loopne
and
bound
(bad)
dec
mov
sti
fist
push
fld
cmp
(bad)
cmc
out
pop
fild
and
xchg
mov
mov
call
addr16
mov
call
sbb
enter
addr16
mov
sahf
mov
pushf
xor
jnp
les
jmp
ret
cmp
and
sbb
mov
leave
addr16
and
xor
cmp
mov
test
in
mov
outs
(bad)
and
jp
or
add
loop
or
ins
inc
pop
mov
ja
fs
jmp
jae
jg
retf
sbb
xchg
adc
loopne
and
jbe
dec
mov
push
mov
arpl
xor
jge
pop
out
dec
and
push
in
sbb
(bad)
sahf
sub
push
je
js
jecxz
pop
sar
call
fdiv
mov
pop
leave
mov
mov
aaa
cld
mov
adc
icebp
add
push
movs
add
pop
adc
stc
add
and
lahf
out
and
sub
fiadd
sbb
out
ins
xchg
jle
pop
clc
cmp
lods
adc
lods
jno
or
push
inc
cmp
pop
shl
push
neg
jmp
scas
mov
jnp
add
and
cs
or
gs
sub
cmp
bound
mov
test
pop
sti
fiadd
and
inc
adc
por
or
movs
lds
add
push
mov
and
cmp
test
iret
dec
cli
dec
mov
test
stos
ret
sub
fs
mov
inc
into
fiadd
jl
add
adc
ja
sub
je
sub
mul
adc
js
fcom
psubusb
mov
loop
push
daa
scas
and
mov
push
xchg
dec
xchg
xor
inc
adc
fsubr
data16
jl
dec
mul
popa
rol
fistp
add
test
jo
xor
aaa
mov
pop
inc
cwde
lods
cmp
cmp
iret
dec
jnp
jmp
mov
push
mov
ds
mov
adc
sbb
aaa
jae
xchg
dec
or
cs
jno
jmp
jne
xchg
xchg
js
mov
mov
cmps
leave
xor
retf
clc
cmp
mov
mov
imul
mov
sbb
add
dec
aaa
or
sub
inc
xchg
xchg
mov
jmp
inc
movs
add
pop
in
and
stc
(bad)
out
add
lods
(bad)
ja
cmp
push
mov
fcom
mov
mov
in
mov
mov
dec
sbb
push
and
adc
stos
sub
arpl
repnz
jl
mov
je
popf
fstp
add
push
das
sar
lock
test
retf
ficomp
fist
push
sbb
jae
sub
(bad)
loop
mov
(bad)
iret
xor
sbb
repnz
push
cmps
aas
mov
dec
cmc
int3
popa
retf
rol
je
fld
in
lock
sub
jge
(bad)
movs
add
out
hlt
movs
out
(bad)
imul
jmp
jns
out
sub
pop
stos
mov
lahf
push
jmp
inc
push
popf
or
pop
push
in
pushf
dec
sub
out
aad
ret
outs
push
push
sub
clc
stc
cli
xchg
push
jmp
scas
inc
loopne
int3
or
pop
adc
mov
js
mov
dec
fild
cmp
sbb
pop
jmp
(bad)
ror
xchg
scas
add
xchg
hlt
and
pop
test
adc
mov
xor
push
js
loope
jl
ret
inc
std
push
pop
sbb
xor
outs
xchg
lds
mov
pop
inc
dec
int3
jl
mov
popf
adc
pop
adc
mov
cmp
add
add
mov
dec
mov
inc
pop
pop
imul
sub
and
ins
pop
aam
mov
xchg
inc
and
push
enter
or
adc
pop
jb
xor
pop
imul
iret
push
loope
lods
enter
adc
dec
pop
push
add
div
cmp
stos
sbb
fs
xor
mov
inc
rol
ret
add
mov
jnp
pop
dec
ret
aam
pop
lds
rcr
add
das
test
jecxz
mov
sahf
call
lods
loopne
fmul
inc
lods
mov
mov
fld
sbb
sub
or
mov
test
out
loop
and
pop
pop
jecxz
stos
das
loope
dec
jle
sub
xchg
ret
imul
rcr
mov
aas
xchg
into
mov
cmp
neg
cmc
ins
(bad)
nop
xor
movs
or
xor
push
push
je
hlt
cmps
test
xor
mov
mov
dec
sahf
push
shl
mov
rcr
mov
sub
cmp
dec
call
cli
jb
(bad)
cwde
daa
icebp
jns
mov
hlt
push
loopne
sub
jbe
hlt
fsubr
dec
push
jne
retf
mov
test
mov
dec
push
dec
movs
sub
scas
adc
jno
pusha
fisttp
add
pop
ins
or
in
fdivr
arpl
mov
ins
arpl
inc
sar
mov
loopne
in
popf
inc
add
pushf
jg
push
add
pop
(bad)
sbb
add
cdq
mov
jns
sub
mov
or
xor
nop
outs
(bad)
jge
pop
movs
retf
test
dec
retf
mov
sbb
sar
jnp
xor
jbe
push
xor
lahf
ja
retf
dec
dec
jbe
push
lock
div
push
add
mov
js
mov
shl
scas
mov
jmp
mov
dec
jp
ja
add
test
mov
jnp
mov
ret
mov
mov
lahf
loopne
and
jmp
je
mov
mov
clc
fld
daa
sub
stc
fcom
push
jb
xchg
sbb
in
xor
shl
push
pop
hlt
les
push
outs
(bad)
add
dec
or
imul
push
std
jp
rcl
dec
and
shr
and
outs
sub
dec
xchg
xchg
ins
adc
and
inc
and
xchg
jmp
aam
and
mov
mov
out
gs
pop
fadd
outs
sub
mov
mov
(bad)
pop
shl
pop
add
mov
fsubr
nop
(bad)
iret
mov
push
fcomp
aam
movs
cmps
test
and
(bad)
mov
sbb
fidivr
adc
jl
cdq
sub
loop
push
aad
pop
ficomp
mov
xor
aam
rcr
lods
int3
movs
jg
dec
scas
loope
lea
mov
cmps
ja
retf
dec
sub
bound
dec
popa
xor
mov
(bad)
mov
push
rcl
(bad)
aaa
dec
mov
mov
push
xor
cmp
mov
stos
pop
aam
cmps
push
or
loopne
jo
sahf
mov
dec
cmps
test
mov
retf
push
dec
aad
inc
mov
ds
jg
inc
idiv
test
stos
pop
sbb
jle
xor
inc
xor
push
jge
lahf
mov
test
gs
cmp
imul
fisttp
jg
jecxz
imul
stos
push
mov
loop
leave
cmp
leave
jbe
outs
ficom
add
pop
test
aas
into
data16
pop
sbb
ror
pop
jns
js
or
(bad)
xchg
stos
mov
sbb
jmp
mov
jmp
ss
fs
dec
push
fwait
ret
jae
mov
or
cmc
lods
cmps
stos
or
and
jns
xor
or
and
mov
mov
mov
fist
sub
mov
inc
fcomip
ss
mov
rol
xor
adc
gs
mov
mov
je
rol
aas
ss
and
xchg
sub
stos
adc
test
push
lds
inc
or
rol
fwait
call
push
add
or
xchg
ds
std
jl
cmp
shl
frstor
cmp
jmp
inc
xor
xchg
lds
fnstenv
mov
jnp
out
ins
fimul
adc
mov
add
rcl
call
xor
or
cmps
stos
inc
adc
jp
mov
inc
ins
jmp
jecxz
rcr
shl
fldenv
enter
sub
inc
lock
adc
mov
mov
xor
movs
repnz
push
loopne
xor
mov
xor
add
shl
mov
push
pop
jl
inc
cmp
xchg
shl
dec
or
adc
test
or
add
leave
mov
pusha
jno
ds
test
jnp
xchg
sbb
jb
push
cmp
ret
out
bnd
mov
lea
dec
push
sub
jae
inc
hlt
dec
stos
repz
ret
out
not
mov
xchg
out
and
jl
rol
cli
enter
pop
lock
push
fidiv
imul
adc
or
adc
mov
mov
(bad)
retf
fild
cmps
icebp
and
arpl
ss
loop
nop
cmp
mov
cwde
(bad)
mov
xchg
add
lahf
inc
jl
mov
sbb
push
and
test
push
mov
or
icebp
lahf
xchg
dec
int3
sub
jmp
or
inc
xor
or
mov
enter
(bad)
aam
mov
mov
mov
ds
dec
push
xor
cld
push
mov
iret
mov
rcl
fadd
jnp
in
scas
xor
mov
inc
jns
sbb
sbb
call
sub
pop
jle
dec
repz
xchg
adc
mov
test
test
in
pop
fdiv
add
loop
mov
lea
push
loopne
mov
in
push
lahf
aam
jg
xchg
sbb
test
push
fs
mov
jle
and
mov
xchg
in
retf
int3
test
pop
lahf
add
in
sub
int
stos
or
fimul
cmps
popf
shl
dec
aas
xor
scas
out
jbe
mov
mov
push
das
sahf
add
loopne
movs
cli
mov
inc
push
mov
dec
sub
mov
xor
sbb
jle
add
test
ins
stc
push
dec
in
mov
mul
mov
dec
stc
dec
or
imul
cmps
mov
pop
dec
outs
adc
cmp
adc
cmp
cmp
pop
push
push
and
cmps
addr16
sub
inc
mov
lock
out
fwait
rcl
push
lods
ror
push
mov
adc
cmp
jg
sbb
sbb
repz
iret
cmp
add
adc
loopne
mul
movs
ficom
sub
jns
xchg
sub
mov
inc
xor
popa
shl
nop
scas
test
mov
inc
ins
pop
mov
cmps
daa
mov
retf
mov
mov
movups
sub
xor
iret
lock
sahf
sti
les
stos
ins
lea
arpl
addr16
in
movs
fcomp
dec
mov
scas
fdiv
add
mov
stc
cli
sbb
dec
sub
pop
jle
call
mov
imul
mov
fimul
jmp
mov
adc
mov
mov
push
jmp
dec
jno
pop
mov
push
stc
mov
xor
rcr
cld
mov
test
in
stc
fild
shr
(bad)
(bad)
daa
bound
push
out
fisubr
jbe
in
cmp
sub
cli
nop
and
xchg
pop
imul
or
jae
cmc
hlt
hlt
adc
cmp
inc
add
imul
sub
int3
test
out
and
jmp
(bad)
stc
ins
in
sub
and
mov
inc
imul
mov
lock
pop
cmp
jle
push
(bad)
hlt
aaa
test
xor
aaa
(bad)
cmp
dec
(bad)
test
mov
leave
lds
push
push
inc
aas
sbb
dec
ror
cdq
jb
xchg
cmp
jb
mov
mov
(bad)
mov
pop
das
imul
pop
fstp
pop
jae
sbb
xor
and
jnp
out
xor
ja
pop
cdq
dec
cld
jno
add
mov
jne
(bad)
add
cld
push
test
(bad)
mov
and
shr
dec
das
cmp
fist
push
sbb
cmp
cdq
jno
xor
lods
xchg
fst
cmc
add
inc
jae
daa
sbb
jno
mov
mov
imul
jnp
mov
cli
lods
out
dec
jecxz
inc
pop
out
repz
xor
cmp
(bad)
jne
sub
cmp
icebp
dec
fcomp
imul
add
mov
sbb
sbb
nop/reserved
add
sbb
ja
aaa
add
or
mov
std
pusha
sbb
mov
mov
repz
add
mov
fdiv
jp
psllw
push
into
pop
cmp
sub
sub
xchg
xor
ret
das
xor
call
out
stc
xchg
xor
jbe
jb
xchg
pop
fwait
je
cmp
adc
adc
sub
sub
arpl
mov
ror
enter
mov
imul
into
add
repz
fimul
or
adc
in
in
pop
dec
std
outs
xor
imul
fs
inc
add
aas
push
lea
sahf
cmp
mov
xor
fwait
mov
test
inc
aas
mov
and
xor
(bad)
mov
test
dec
pop
mov
cmc
push
mov
dec
(bad)
outs
sub
pop
sbb
mov
mov
mov
adc
xor
fwait
inc
scas
adc
cmp
cmc
fsub
test
out
(bad)
out
sub
jo
int
(bad)
hlt
rol
arpl
inc
dec
mov
and
xchg
aas
dec
sbb
pop
mov
jbe
ss
lods
inc
lock
lds
push
sahf
ss
fcomp
mov
sub
mov
adc
push
push
adc
mov
sbb
sub
sub
daa
icebp
pop
sbb
(bad)
inc
or
sysenter
or
in
xchg
in
jge
aaa
test
icebp
mov
in
loopne
add
sub
mul
push
stos
sbb
sbb
inc
cmp
std
std
scas
jg
imul
scas
pop
or
out
outs
and
adc
sub
leave
ror
mov
test
fdivr
adc
add
xor
sub
data16
stc
pop
scas
push
aaa
bound
mov
cmp
push
hlt
scas
push
jno
lods
test
pop
dec
push
arpl
bound
loop
mov
ins
popa
loopne
push
and
or
sar
and
cmp
sar
xchg
and
popa
mov
fisub
(bad)
inc
adc
dec
cmp
lahf
cmp
stos
and
push
mov
lods
into
pusha
sbb
cmc
scas
(bad)
sahf
mov
pop
cdq
jne
movs
mov
cwde
call
push
push
in
pop
push
loope
cmps
cwde
arpl
jecxz
mov
js
xchg
mov
pusha
mov
inc
xchg
sbb
jge
mov
dec
icebp
mov
sub
mov
mov
xor
outs
add
add
and
out
ja
push
mov
pop
cmp
mov
pop
loope
mov
push
movs
xchg
(bad)
out
loopne
xor
and
fstp
sbb
add
jb
fistp
icebp
push
es
rcr
fcom
mov
wrmsr
test
add
mov
retf
inc
add
adc
sbb
sar
scas
int3
je
or
jno
(bad)
aaa
ja
out
int
mov
lds
cwde
inc
pop
loope
xchg
addr16
aas
rcl
xor
jp
add
std
(bad)
jae
sub
aas
sub
sbb
enter
out
nop
add
ins
cwde
dec
and
adc
shl
ins
imul
in
and
inc
or
aad
pop
in
fisub
and
push
mov
gs
dec
sahf
adc
fmul
jo
rcl
adc
mov
hlt
inc
xor
dec
sahf
sub
add
add
addr16
xchg
(bad)
clc
popf
jge
in
and
mov
or
jmp
and
sahf
repz
mov
push
inc
dec
in
and
and
jge
mov
imul
daa
das
dec
mov
adc
xchg
adc
cli
sbb
imul
sbb
iret
add
pop
(bad)
fimul
pop
xor
dec
jnp
into
jbe
mov
mov
jmp
scas
loope
arpl
push
les
pushf
push
lea
(bad)
shr
jmp
mov
rol
jmp
(bad)
retf
lock
or
ins
inc
adc
pop
pop
mov
fs
shl
jns
fst
sar
(bad)
std
push
mul
push
and
jl
add
adc
jno
xor
jnp
pop
shl
add
leave
mov
jmp
aad
sahf
xchg
xchg
add
inc
enter
cli
cmp
ds
mov
jbe
jmp
jne
in
jl
push
ja
lock
out
sub
or
pusha
and
xchg
neg
leave
xor
jo
xchg
jmp
das
jecxz
pop
das
loop
lods
mov
cli
and
scas
add
retf
jecxz
cld
pop
cmp
jbe
mov
jb
or
xchg
arpl
inc
or
inc
mov
int3
pop
inc
dec
scas
pop
mov
jno
ins
cmp
ret
movs
in
int3
sbb
div
leave
and
not
pop
push
into
fimul
fucompp
nop
xor
and
popa
cmp
sub
push
jno
fidiv
xor
(bad)
pop
ret
aad
nop
aas
mov
sbb
cmp
int
push
pop
dec
(bad)
mov
outs
dec
jo
mov
jg
(bad)
sub
ins
daa
cmp
lds
call
pop
inc
imul
icebp
jecxz
sub
adc
fistp
push
and
xlat
adc
mov
cld
loop
stos
sti
push
ffreep
hlt
xchg
test
cmp
dec
add
mov
sbb
jbe
jbe
js
out
inc
loop
inc
nop
das
aas
stos
sbb
ja
xchg
inc
jecxz
adc
repz
rcl
int3
test
pop
push
push
and
jmp
outs
and
es
push
push
jp
dec
lods
out
jmp
dec
add
leave
inc
pusha
mov
aas
ja
pusha
cmps
rcl
jmp
pop
addr16
jecxz
mov
jns
test
or
call
and
dec
test
fmulp
ds
mov
dec
inc
retf
mov
fs
or
dec
cmp
(bad)
lahf
adc
ret
clc
jb
dec
ret
daa
in
mov
inc
test
adc
call
sti
push
inc
cli
and
xor
or
test
(bad)
scas
push
sub
aam
cmp
je
xchg
clc
xor
ins
jnp
xchg
mov
sti
std
dec
ins
pop
ja
lds
pop
shl
retf
repnz
mov
loopne
sbb
in
sbb
data16
ins
or
pop
outs
fwait
daa
cmp
enter
retf
xchg
mov
sub
mov
cs
sti
dec
loop
scas
rcr
(bad)
test
jne
pushf
aam
and
movs
and
les
or
cmp
scas
mov
test
add
pop
mov
and
sbb
xlat
jle
mov
pop
push
mov
sub
fdivr
mov
(bad)
scas
sub
jle
dec
or
ficomp
int3
(bad)
xchg
das
int
pusha
addr16
fwait
push
sbb
dec
ins
cld
inc
ret
enter
aam
es
fiadd
mov
and
call
lods
xor
sbb
les
aam
sbb
mov
mov
ficomp
cdq
dec
add
(bad)
in
xor
inc
and
or
sti
hlt
scas
loopne
mov
add
lds
mov
cmp
pusha
mov
jb
clc
mov
fst
ret
stc
retf
or
ror
pop
mov
pop
aaa
fwait
push
popf
scas
mov
lahf
sbb
ret
adc
ins
mov
add
jecxz
nop
jno
add
jo
jp
jo
pop
jecxz
out
jl
stos
and
push
cmps
mov
lahf
adc
xor
push
jne
xlat
dec
jge
retf
xor
jmp
es
iret
inc
pop
loopne
cmp
popf
pusha
mov
mov
xchg
adc
push
icebp
and
jns
push
jmp
xchg
push
scas
ror
repnz
adc
je
or
repnz
pop
and
je
pop
adc
sti
inc
and
and
cld
lds
out
mov
cmp
pop
sahf
pop
dec
dec
cmp
icebp
xchg
inc
push
jg
push
inc
mov
push
into
stc
ret
or
inc
inc
jmp
in
xchg
xlat
cmps
ins
mov
sub
or
xchg
mov
nop
lock
cmp
or
add
popf
cmp
in
imul
outs
aaa
retf
test
fwait
inc
lahf
les
jne
push
inc
and
cmps
ret
pop
jmp
inc
hlt
and
call
ror
je
and
repz
js
rol
jns
or
in
cdq
push
popa
cmp
sti
dec
adc
test
jnp
add
movs
jno
mov
pop
arpl
push
fmul
jmp
stos
sbb
add
mov
xchg
mov
addr16
je
popa
rcr
mov
pop
fstp
(bad)
ret
jl
pop
and
sub
cmps
add
ret
mov
loopne
bound
push
cmp
cmp
sbb
fadd
dec
mov
inc
sbb
cmp
std
mov
ins
data16
xor
xchg
xor
and
cmp
rol
jmp
adc
push
(bad)
das
jg
addr16
push
adc
and
and
popf
sbb
fadd
xchg
inc
sbb
mov
sub
mov
repz
adc
mov
mov
jbe
sub
(bad)
nop
dec
test
mov
mov
retf
(bad)
nop
fcom
jb
push
sub
addr16
xor
movs
sbb
push
pop
xchg
stos
dec
iret
add
mov
(bad)
pop
fild
in
jg
push
repz
pop
shr
repnz
sbb
add
push
ss
inc
es
idiv
or
xor
cld
ror
loop
das
outs
in
fldl2t
stos
and
ins
inc
mov
mov
push
int3
xchg
out
push
iret
hlt
ja
push
les
mov
push
lock
movs
ss
xchg
rol
jp
ss
test
sub
std
mov
icebp
lods
and
pop
fisub
cmp
inc
cmps
pop
adc
ret
add
xor
xchg
daa
xchg
dec
mov
mov
jle
ja
jae
adc
adc
enter
mov
push
stos
push
and
test
ins
or
push
mov
inc
ins
push
nop
push
push
and
clc
pop
adc
ror
aad
bound
push
rep
inc
pop
cmp
inc
pop
mov
jo
in
pop
imul
adc
push
jl
dec
pushf
sub
xor
inc
mov
mov
xchg
popf
call
in
not
jmp
cmp
mov
add
pop
(bad)
div
ds
sbb
or
mul
pop
pop
and
ins
fidivr
lods
and
stos
or
imul
fmul
call
mov
not
adc
and
cmp
movs
(bad)
sbb
mov
mov
loop
cmp
(bad)
cli
cmc
out
mov
mov
push
add
outs
mov
xchg
aas
movs
push
pop
xchg
xchg
dec
and
add
lock
mov
loopne
xor
inc
lods
cli
sub
icebp
xor
add
mov
ret
adc
add
test
lahf
mov
sbb
test
add
pop
movs
xchg
mov
inc
xlat
ss
cmc
test
mov
popf
jmp
xrelease
dec
test
(bad)
push
mov
xor
dec
and
popa
mov
into
fidiv
iret
ror
jno
inc
sbb
in
test
arpl
fwait
xor
scas
push
mov
sbb
jo
imul
adc
cmp
xor
(bad)
push
xchg
jp
retf
bts
cdq
or
mov
xor
cmp
xchg
add
or
fild
nop
and
or
inc
pop
or
or
dec
cmp
mov
mov
inc
ja
call
jnp
aam
lods
(bad)
mov
test
xchg
sub
sti
es
nop
or
or
test
xor
call
test
mov
out
add
scas
aas
jecxz
shr
sbb
mov
jo
mov
cdq
mov
stos
or
rol
mov
popa
mov
push
outs
push
clc
jge
push
xchg
pop
aad
push
imul
mov
loopne
loopne
outs
dec
dec
pop
push
pushf
lahf
and
nop
cmp
mov
pop
mov
cmps
or
loop
adc
gs
(bad)
js
sbb
mov
into
cmps
and
dec
jmp
adc
scas
mov
push
outs
fimul
mov
movs
jbe
lock
arpl
add
daa
jo
das
jae
pop
dec
outs
in
and
dec
retf
into
lods
pop
ret
mov
movs
xor
jb
sub
xlat
nop
div
stos
push
jno
aam
cwde
pop
jno
js
ins
ins
mov
xchg
popa
jle
lock
xor
hlt
xlat
cmp
sbb
ins
jo
ret
cmps
pop
(bad)
rcl
mov
cmp
jecxz
adc
mov
mov
cmc
scas
mov
cld
add
and
or
or
pop
jbe
jne
sbb
retf
call
push
and
ficom
mov
inc
shl
inc
add
(bad)
push
ret
xor
ins
aaa
js
add
ja
dec
mov
mov
xchg
dec
cmp
cmp
sbb
cmp
xchg
mov
stc
test
fisttp
jl
clc
push
ds
pop
push
add
cmc
sti
jge
out
enter
retf
addr16
jmp
mov
dec
int
jne
out
sbb
add
or
or
cs
ds
xor
cmp
addr16
add
not
jmp
out
loope
sub
jae
xchg
stos
mov
inc
ret
(bad)
into
add
inc
mov
sbb
adc
pop
ins
pop
pop
in
dec
and
std
xchg
outs
mov
aas
in
out
adc
mov
dec
test
retf
dec
and
cmps
fwait
(bad)
cdq
repnz
aam
xlat
push
mov
xor
jne
pushf
dec
(bad)
into
jecxz
aas
cmc
in
cld
sbb
cmp
test
outs
ss
mov
sub
popf
mov
sub
dec
and
sub
inc
les
and
out
lea
scas
out
sbb
sbb
sub
mov
ins
adc
sbb
sub
into
out
(bad)
pop
lods
inc
js
test
and
sub
pop
jmp
inc
in
cli
sub
mov
loop
rcr
add
icebp
xlat
out
out
aaa
xor
xchg
cmp
in
xor
sub
pop
cmp
pop
retf
popa
adc
dec
loop
out
test
mov
aam
sbb
dec
outs
mov
inc
jnp
jae
pop
lods
arpl
out
lea
in
cmp
sbb
xchg
jl
jnp
sbb
dec
sub
pop
je
loop
mov
mov
xchg
pop
ficomp
call
mov
inc
dec
bound
add
mov
in
nop
pop
fcos
sub
stos
add
out
and
mov
lods
fidivr
fist
fidivr
sub
jmp
fisttp
loopne
mov
stos
repz
inc
inc
jg
mov
or
cmp
sbb
xchg
mov
push
mov
adc
call
test
in
js
adc
mov
rol
mov
add
cli
sub
sbb
enter
jns
mov
popa
xor
in
rol
cmps
fstp
jg
jbe
mov
or
(bad)
jg
jmp
fisubr
fmulp
mov
pop
sahf
push
retf
xor
loop
inc
jmp
aad
mov
lahf
pop
jmp
pop
and
(bad)
ret
mov
loop
iret
in
imul
jle
dec
push
inc
push
call
rol
jnp
xchg
and
dec
mov
inc
retf
(bad)
inc
lock
pcmpgtb
cdq
sti
and
xor
and
cvtpi2ps
or
hlt
dec
cmp
push
pop
mov
pop
and
repnz
xor
or
push
outs
retf
xor
cdq
sbb
sub
pop
inc
sub
or
ins
sar
sbb
addr16
(bad)
lock
push
xlat
lahf
mov
dec
and
or
fwait
cmovle
jmp
in
dec
fs
scas
mov
movs
out
pop
gs
iret
pop
aad
cld
mov
cdq
add
sbb
(bad)
add
xor
loope
mov
retf
and
inc
dec
test
div
push
xchg
pop
push
cmps
or
cs
cmp
inc
ficomp
inc
mov
test
push
fcmovnbe
jns
jge
mul
or
loope
cmp
sbb
loopne
mov
xor
ret
test
pop
popf
fmul
sub
fwait
mov
(bad)
dec
push
pop
(bad)
fcmovnb
popf
les
push
pop
xchg
cmp
pop
pop
enter
push
adc
add
call
push
and
movs
movs
inc
lods
movs
ret
push
movs
sub
inc
out
sbb
push
jecxz
mov
mov
xchg
pop
invd
add
add
popf
ss
xchg
test
adc
add
or
sahf
rcr
ds
adc
es
jo
inc
jae
and
movs
push
movups
ret
fs
ror
push
mov
lods
lods
enter
repz
xor
xchg
nop
inc
aaa
push
outs
out
gs
retf
adc
lods
xchg
sahf
(bad)
lock
mov
cmps
stos
fs
adc
dec
pop
push
cli
and
es
cmp
dec
aas
mov
push
push
imul
mov
add
into
icebp
aad
adc
out
(bad)
xor
mov
dec
sbb
sbb
test
add
cmp
aaa
cmp
mov
sbb
add
push
iret
lods
movs
pop
sbb
add
loopne
test
adc
cmp
frstor
bound
ins
js
(bad)
cmp
daa
xchg
pop
xor
cli
movs
sbb
jmp
imul
ret
mov
jbe
scas
xchg
sbb
push
mov
sbb
mov
xor
jge
aaa
sub
movs
inc
push
adc
movs
jmp
nop
leave
cmp
adc
ds
fcomp
jo
cmp
stos
sub
mov
pop
iret
inc
mov
xor
std
js
cwde
lea
adc
lea
or
sbb
xchg
inc
mov
pop
(bad)
sub
add
test
popa
sbb
xlat
add
das
xchg
xor
mov
addr16
(bad)
div
enterw
pop
or
inc
push
stos
adc
xchg
jmp
pusha
fsubr
add
test
inc
mul
retf
(bad)
pop
jne
(bad)
xchg
mov
adc
add
out
cld
(bad)
adc
add
movs
fdivp
mov
push
xor
jno
mov
dec
mov
pop
dec
(bad)
xor
mov
cmp
push
cmp
stos
movs
bound
push
mov
pusha
lahf
das
loop
jmp
sub
sub
sbb
push
inc
mov
and
inc
mov
cmp
fild
cwde
fmul
rcr
and
das
in
aam
repnz
jb
and
icebp
mov
sub
imul
pop
pusha
or
cmp
aam
das
fiadd
push
cmp
lahf
jae
imul
xchg
xchg
add
xchg
(bad)
xchg
push
add
jnp
jp
stc
mov
in
aaa
lods
or
repz
jo
add
mov
inc
lods
(bad)
xor
popf
test
lock
mov
or
sar
jecxz
adc
movs
cmps
inc
sub
mov
daa
sar
fwait
xor
inc
lods
add
mov
cmps
int
es
jg
or
mov
dec
sub
inc
shr
dec
add
push
cmc
pop
jmp
mov
and
cmps
adc
jnp
in
stos
mov
jb
jle
cwde
fst
add
mov
sub
enter
mov
mov
into
leave
shr
mov
pop
inc
test
dec
xor
(bad)
ss
shr
xchg
stos
cmp
adc
(bad)
mov
cmp
xchg
icebp
cmc
adc
popa
adc
jb
das
leave
add
ins
call
loope
cdq
ret
pop
or
jae
js
push
movs
shl
jo
repz
xchg
cmp
cmc
bound
jl
mov
loopne
mov
jns
fisubr
(bad)
pop
retf
scas
retf
xor
sbb
push
inc
mov
add
xor
push
das
or
mov
push
adc
mov
mov
cli
push
cli
call
retf
xlat
in
sbb
(bad)
jge
(bad)
dec
call
mov
mov
mov
mov
test
push
mov
cmp
stos
xchg
and
adc
inc
mov
pop
jns
pop
je
outs
rcl
ret
(bad)
jmp
fwait
ss
sbb
mov
add
aam
ret
hlt
stos
sbb
xchg
cmp
jle
push
push
ficom
loope
test
aas
jmp
xor
mov
push
push
fisttp
jns
shl
sub
jmp
mov
mov
shl
mov
push
or
or
dec
test
mov
sbb
aaa
mov
daa
add
add
(bad)
fisubr
fsubr
jne
lock
mov
add
rol
and
xor
adc
pop
out
scas
mov
test
mov
ss
push
aad
xchg
cmps
push
test
dec
lods
jge
inc
mov
dec
sub
jnp
in
jne
adc
aad
cmp
xchg
dec
ins
add
push
(bad)
mov
fadd
ret
push
cmp
idiv
(bad)
fnstsw
data16
in
push
push
dec
and
cmps
mov
stos
lea
jmp
mov
inc
dec
hlt
stos
jecxz
mov
shl
std
js
jmp
nop
mov
adc
sub
fldcw
cdq
or
imul
cmc
jnp
mov
bound
sbb
or
jecxz
ins
xor
push
push
jecxz
(bad)
call
cmp
xor
in
mov
jmp
mov
ds
jo
push
sahf
(bad)
loope
xor
dec
movs
jnp
movs
jbe
popa
jne
cmps
icebp
in
cli
push
push
js
in
mov
call
hlt
sbb
out
ss
mov
xchg
aas
lahf
fld
pop
retf
(bad)
js
or
fstp
je
shr
push
adc
neg
xchg
add
pop
push
inc
jne
inc
out
cmp
adc
pop
sub
jecxz
dec
mov
(bad)
pop
pop
xor
jb
pusha
sbb
xchg
jge
loop
or
pop
xchg
xchg
and
in
out
and
movs
leave
test
loop
jle
xchg
sub
ror
dec
or
imul
mov
shr
sbb
jns
aam
xchg
(bad)
dec
mov
sub
jnp
daa
inc
sub
pop
jne
pop
adc
inc
push
and
cdq
sahf
fcmovnb
pushf
cmps
dec
cmps
mov
mov
ins
mov
cmp
test
fbstp
ja
xlat
iret
jbe
aaa
sbb
xor
add
pop
or
cdq
jnp
add
iret
jge
imul
fcom
inc
fistp
les
pop
cmp
mov
(bad)
repz
fisttp
adc
ds
daa
pop
cwde
mov
mov
test
mov
push
mov
xor
mov
push
fnstsw
jbe
mov
adc
popf
fadd
loope
shl
mov
sbb
int
or
push
das
jge
jo
(bad)
xor
jle
test
inc
xchg
lods
data16
pop
mov
mov
xchg
sub
aas
aam
sbb
xor
rcl
and
mov
ss
add
sbb
push
test
cld
(bad)
adc
add
xchg
data16
daa
cmps
pop
loope
jns
cmc
push
out
pushf
inc
test
jne
mov
test
or
add
ds
loop
loope
xchg
jmp
rol
or
push
xlat
fsubr
fsubr
xchg
(bad)
mov
pop
cmp
pushf
push
das
xchg
cmp
movs
mov
mov
ss
dec
clc
inc
and
popf
ret
rcl
xchg
xchg
call
dec
jmp
es
les
jnp
ja
jns
pop
cmps
pop
fsubr
dec
repnz
mov
or
call
cmp
add
dec
retf
fadd
enter
dec
adc
ja
mov
ret
mov
adc
inc
cmp
outs
sub
mov
in
xor
mov
xchg
mov
loop
imul
and
gs
adc
clc
jp
pop
loope
jns
push
add
pop
out
push
mov
sub
ret
cmps
inc
adc
outs
fsubrp
out
int3
ret
gs
adc
add
popf
xlat
add
push
or
retf
inc
out
add
fwait
sbb
mov
in
add
out
loopne
inc
jns
lods
inc
rol
push
sub
or
stos
sbb
pop
cmps
sbb
sbb
fadd
imul
dec
das
push
cwde
mov
xor
fsubr
loopne
stos
jp
mov
mov
(bad)
xchg
test
adc
and
arpl
fcmovb
mov
cmps
bound
mov
add
sahf
adc
dec
cwde
dec
mov
dec
and
ins
call
pop
mov
lds
repz
mov
mov
sbb
xorps
arpl
(bad)
in
jbe
retf
xor
or
sahf
sahf
xor
sbb
mov
mov
sbb
rcr
inc
sub
ins
inc
icebp
fild
jp
fld
sub
sbb
ss
mov
sub
xor
out
mov
das
xor
xchg
hlt
add
ins
jbe
lds
rol
dec
iret
popa
loop
rcr
adc
lods
add
leave
xor
call
jle
daa
mov
(bad)
ds
ret
mov
cmps
stc
and
or
movs
iret
dec
cmps
mov
mov
jge
sti
cmp
ret
inc
dec
mov
cmp
mov
pop
xchg
jne
dec
leave
xor
repnz
dec
xor
jl
bnd
pop
push
pop
int3
mov
(bad)
mov
shl
sbb
sbb
(bad)
out
jb
jnp
shl
sub
fdivrp
push
cmp
xor
push
mov
ja
adc
sub
push
xor
mov
add
fidivr
scas
mov
je
mov
and
jo
es
pop
sbb
nop
loopne
xor
xchg
mov
aas
jnp
jne
mov
and
ins
mov
imul
sar
xchg
sub
lea
cwde
in
or
xchg
ds
cmc
mov
call
(bad)
xchg
inc
(bad)
mov
fiadd
inc
add
scas
push
add
mov
mov
popf
rcl
fcmovne
push
cld
call
push
lea
sbb
es
adc
mov
pause
push
je
push
xor
movs
pmaxsw
cmps
jmp
mov
loope
(bad)
scas
aam
push
cmp
or
add
mov
sbb
(bad)
(bad)
(bad)
lods
int
push
pop
test
test
mov
xchg
pop
mov
ret
shr
adc
cmps
leave
neg
pop
pushf
jl
mov
(bad)
ds
dec
pop
popa
(bad)
cmp
cld
mov
mov
xchg
call
inc
aaa
imul
sub
pushf
adc
mov
add
jno
leave
cdq
sbb
cld
add
fs
cmc
retf
aas
sbb
xor
adc
adc
cmp
mov
mov
js
(bad)
xchg
mov
mov
jae
rcr
popa
dec
push
das
xor
push
retf
jle
shl
cmp
adc
pop
mov
popf
lods
(bad)
xchg
push
pop
shr
or
lods
jecxz
rcl
xchg
jno
shl
fadd
std
add
outs
jne
(bad)
js
sub
jns
pop
shl
jo
pop
loop
popf
inc
daa
ss
or
retf
cli
(bad)
call
inc
daa
sub
xor
dec
mov
gs
sbb
pop
scas
nop
and
push
sbb
pop
jmp
xor
sub
dec
dec
stos
mov
call
ins
aas
jne
imul
into
push
sbb
mov
pop
mov
xor
pop
imul
test
out
addr16
out
gs
xchg
movs
mov
xchg
sar
or
cmp
and
idiv
enter
cmp
sbb
push
ret
retf
and
test
in
int
adc
or
push
gs
daa
(bad)
dec
repnz
cdq
jo
push
add
fwait
cmp
add
cmc
dec
and
mov
add
inc
inc
in
push
sahf
bound
and
add
repz
inc
pop
mov
lea
sbb
inc
ins
dec
xchg
and
push
adc
cmp
and
pop
or
mov
pop
(bad)
push
arpl
test
xor
cmp
and
stc
arpl
lock
mov
loop
aas
fwait
pop
loop
imul
bound
(bad)
out
cmp
iret
shl
or
add
add
adc
in
adc
jo
mov
popa
and
imul
loop
mov
jp
or
ins
mov
cmps
leave
cmc
dec
movs
imul
fbld
shl
loopne
xchg
and
sub
mov
(bad)
dec
add
loop
shl
xchg
jecxz
xor
(bad)
cmp
enter
stc
adc
xchg
test
mov
(bad)
cmp
adc
jnp
xchg
maxps
and
or
lods
cmps
movs
adc
xor
retf
lds
xchg
xchg
(bad)
mov
int
xor
cli
les
add
adc
mov
fst
sar
aaa
jp
lea
pop
je
push
ficomp
sbb
lock
pop
jp
mov
push
test
fimul
lods
mov
mov
sub
pop
pop
xchg
jle
mov
sbb
iret
adc
pop
xor
cdq
mov
xchg
sub
cdq
inc
pop
inc
and
dec
sahf
ds
ret
push
popa
in
stos
push
mov
fist
pop
xlat
sub
loope
xchg
hlt
dec
dec
cdq
daa
repz
fild
xchg
push
sar
out
pop
sub
cmp
inc
fwait
push
fisub
mov
stos
inc
xor
test
aas
and
fwait
push
retf
mov
xchg
pop
inc
das
sti
xchg
sub
push
fist
or
mov
adc
pop
xor
push
scas
(bad)
sbb
pop
je
xlat
xchg
(bad)
jge
lods
loop
aas
sbb
push
jmp
stc
inc
mov
push
jle
push
aas
loope
pop
push
jmp
xchg
xchg
push
dec
sbb
pop
imul
cwde
xchg
js
sbb
mov
mov
mov
ret
sbb
mov
add
fs
outs
jno
xchg
mov
fist
add
scas
cld
fwait
stos
and
add
xchg
clc
and
xchg
(bad)
ss
xlat
out
mov
add
and
xor
aam
cmp
and
or
push
into
jl
mov
lods
dec
add
cmp
adc
add
iret
hlt
retf
xchg
and
mov
or
enter
inc
mov
mov
(bad)
test
das
retf
(bad)
add
out
int3
ret
ja
jnp
xchg
mov
jne
iret
(bad)
jo
push
pop
add
sub
dec
push
push
and
lahf
push
cmc
ficom
adc
data16
push
xchg
mov
mov
push
js
pop
inc
or
xchg
cmp
cmp
inc
cmc
js
pop
movs
adc
cld
lods
or
push
cli
movs
mov
inc
call
cld
call
data16
mov
add
pop
std
cmp
or
push
sbb
(bad)
jecxz
dec
and
iret
push
je
xchg
add
mov
daa
mov
jnp
mov
mul
adc
and
out
sbb
sbb
lahf
stos
sub
pushf
retf
mov
sbb
pop
mov
stc
mov
fmul
xchg
mov
pop
cmp
ds
or
ja
cmc
rol
cmp
mov
loopne
cmc
es
mov
(bad)
fidiv
sub
mov
in
dec
pop
jb
cwde
dec
nop
add
test
stos
clc
les
cmp
jmp
adc
sub
pop
mov
mov
or
mov
cmp
call
mov
mov
jbe
add
sub
add
add
cs
sar
repnz
iret
cmp
icebp
pusha
mov
jb
pop
faddp
ja
fs
fcomp
adc
test
stos
fist
jl
mov
or
sub
jecxz
mov
std
push
inc
jl
add
dec
enter
pop
in
mov
outs
in
movs
scas
lea
mov
mov
push
lods
fild
int
add
jl
sub
popf
mov
xchg
popa
mov
mov
xchg
stc
inc
test
jns
jle
jecxz
in
lahf
and
gs
or
lahf
jl
jne
pop
dec
pop
pop
xchg
mov
or
inc
sbb
xchg
pop
sar
aad
mov
dec
sub
jecxz
mov
mov
addr16
or
mov
push
and
mov
in
cmps
jmp
jle
inc
cmps
test
xlat
imul
push
dec
fst
or
imul
xor
xchg
mov
mov
bound
sbb
pop
hlt
test
in
retf
mov
cmp
sbb
push
add
and
add
std
jo
inc
jle
adc
add
call
lods
int3
mov
pop
or
pmaddwd
call
scas
(bad)
fadd
mov
rcl
in
mov
sub
call
mov
fnsave
addr16
or
ds
push
dec
inc
das
repz
pop
xor
cli
test
pop
lods
int3
jbe
cld
push
pop
push
fcmovnb
jmp
jnp
movs
xor
andnps
inc
inc
dec
mov
mov
xor
xlat
ja
mov
mov
data16
jne
in
jg
xor
int3
inc
pop
sub
scas
jb
lahf
dec
inc
out
adc
mov
outs
adc
ficom
jae
imul
jnp
and
sbb
sbb
dec
adc
cmp
je
cli
pop
ror
ins
cli
lock
call
das
out
ja
sbb
inc
lods
dec
add
mov
fwait
mov
jmp
ret
sub
mov
push
out
cmp
cmp
repnz
xchg
je
ror
push
xor
jmp
arpl
inc
push
retf
push
xchg
data16
ins
adc
fmul
outs
int3
loopne
iret
fiadd
jb
xor
into
aam
xchg
rcr
sub
fsub
push
mov
xor
aam
sub
xchg
in
xlat
jp
std
aas
dec
push
out
xchg
push
jno
or
adc
xlat
mov
xchg
dec
out
jl
mov
ins
jo
push
clc
xchg
cwde
pop
push
fistp
int
adc
jmp
out
mov
loope
outs
add
and
fisubr
lods
pop
push
test
mov
cmp
jnp
int
in
(bad)
mov
test
loopne
dec
xchg
imul
dec
jbe
sub
and
pushf
mov
ins
cmp
mov
inc
push
mov
lock
fwait
jb
jecxz
inc
pop
sub
dec
push
xor
dec
lods
xor
fwait
mov
mov
sbb
aad
xor
adc
popf
xor
out
mov
jb
sbb
es
xchg
and
aas
ins
rcl
loope
add
loopne
pop
ins
call
sbb
retf
add
xchg
and
sub
pop
in
in
lds
movs
cld
test
xchg
inc
dec
shr
ss
rcl
mov
dec
lods
pop
mov
xor
mov
mov
cs
xchg
enter
pop
sub
stc
imul
mov
mov
cmp
inc
loope
push
dec
mov
adc
stos
pop
push
imul
lahf
cwde
push
mov
cld
cdq
mov
psubsw
jmp
pop
pop
jle
jno
icebp
add
sub
gs
fwait
cmps
sbb
mov
sbb
mov
jo
mov
rol
ror
test
jnp
ficom
mov
iret
xor
and
ins
rcr
push
ror
sub
cmps
jmp
sbb
ds
loope
pop
out
mov
xor
xchg
imul
clc
xchg
jns
mov
cmp
imul
test
imul
shl
jnp
out
inc
(bad)
sub
in
push
stos
jp
mov
test
dec
mov
adc
into
std
lods
mov
icebp
mov
repz
inc
imul
loope
sub
scas
dec
test
cs
(bad)
pop
daa
nop
jge
mov
stos
enter
adc
xchg
mov
jecxz
and
pop
pop
add
popa
mov
xor
xadd
pop
xchg
adc
jg
xchg
push
imul
imul
daa
mov
xchg
out
(bad)
mov
cdq
out
xor
mov
mov
leave
push
push
in
daa
push
mov
pop
sbb
inc
in
sub
push
(bad)
js
aas
ja
pop
cdq
jno
lods
sbb
cmp
inc
ffreep
stc
push
or
push
mov
ins
lea
push
scas
jae
rcr
add
sbb
and
adc
cmps
jmp
in
pop
(bad)
imul
dec
mov
mov
call
mov
dec
retf
or
xor
pop
aaa
jmp
ret
jnp
(bad)
clc
in
add
mov
xchg
pop
outs
repnz
xchg
out
(bad)
(bad)
sub
ror
mov
test
add
fs
jle
xchg
lds
sbb
ja
and
movs
jo
cld
cmp
icebp
cmps
or
cwde
xor
jp
ss
mov
iret
sub
cmps
retf
mov
ret
mov
cwde
stc
jno
outs
stos
and
ror
aas
movs
sub
arpl
popa
stos
xor
cmp
and
add
outs
stos
in
iret
mov
aaa
add
jne
out
push
and
mov
int
jo
jecxz
loopne
cmc
dec
mov
inc
and
test
push
iret
fwait
fs
popa
jne
aaa
add
cdq
push
sbb
pop
and
int3
ror
loope
and
gs
mov
jo
xor
movs
adc
rcr
inc
mov
cmp
mov
sub
ja
sub
pop
xchg
addr16
scas
jle
inc
ret
add
bound
loopne
in
leave
fdivr
inc
jp
dec
test
in
pop
adc
mov
sbb
aam
push
mov
sahf
cmp
inc
adc
aad
mov
(bad)
cs
bound
push
dec
sub
dec
gs
mov
idiv
push
dec
jbe
jmp
adc
test
out
lock
sti
push
sbb
sub
push
adc
cmp
add
pushf
in
mov
mov
add
fisttp
test
popa
ror
pop
imul
dec
push
push
out
and
jg
mov
push
mov
jb
movs
pop
scas
sub
jno
jbe
or
adc
jecxz
add
cmp
lods
or
xchg
cmp
push
cmp
or
addr16
sahf
jle
dec
mov
outs
leave
js
jns
loop
dec
cmps
and
push
mov
inc
jno
in
mov
push
out
adc
loop
jae
lahf
cmps
cdq
shr
mov
jge
sbb
sar
mov
mov
mov
fsub
pop
push
enter
dec
push
and
test
sbb
or
(bad)
test
mov
and
(bad)
ins
cmc
cmp
lods
jle
outs
jae
pop
outs
and
jnp
mov
cld
enter
mov
addr16
add
xchg
addr16
sub
je
mov
bound
lods
ds
mov
cmp
loop
pop
pop
in
hlt
cld
dec
jns
sub
adc
fdivp
sub
pop
xchg
pop
inc
jmp
mov
lds
loop
mov
ins
xchg
cmp
push
dec
mov
jmp
xor
out
mov
pop
mov
cmps
xor
scas
xor
and
imul
rol
push
jae
jmp
repz
aam
in
cmp
out
enter
mov
test
jle
and
cmps
or
inc
mov
inc
and
mov
dec
or
pop
cmp
xor
and
jno
xchg
push
rcr
adc
mov
and
jb
inc
jg
push
jns
scas
xor
add
push
jp
adc
int
aas
push
inc
sub
sub
pop
xchg
aam
(bad)
aad
xor
fimul
mov
movs
pop
adc
jne
jne
test
nop
cli
sub
mov
mov
push
push
xor
jecxz
inc
jmp
out
inc
sbb
mov
fsub
movs
xchg
dec
and
fwait
popf
ja
add
jo
stos
mov
test
cwde
cmp
jae
sbb
add
inc
repnz
xchg
jae
inc
mov
call
and
movs
inc
mov
adc
fcmovnb
pop
cld
cmp
or
jmp
(bad)
iret
data16
stc
ror
xchg
mov
(bad)
movs
(bad)
mov
push
sbb
lahf
sbb
shl
sub
jb
retf
jge
push
lods
shr
add
cmp
mov
push
add
rcr
pusha
xor
rcl
adc
sahf
daa
xor
and
mov
or
push
adc
cld
daa
cmp
ret
repz
sbb
aad
xchg
fdivr
rcl
cli
cmp
mov
lods
std
xlat
or
jo
inc
daa
sub
rol
cs
inc
mov
lahf
mov
jp
inc
pusha
or
mov
fs
ja
mov
stos
push
mov
sbb
sti
iret
imul
rcr
ja
repnz
pop
fild
test
push
sbb
test
(bad)
aam
pop
cld
ret
(bad)
cmc
test
adc
inc
and
cmps
js
xchg
out
ja
out
sbb
(bad)
jmp
pushf
pop
mov
inc
and
cld
push
bnd
sub
fmul
sub
dec
dec
je
outs
push
add
cs
std
push
xchg
lahf
(bad)
mov
sub
ret
or
sbb
ficom
pop
test
jnp
out
mov
mov
or
sub
loop
sub
int
pop
add
nop
(bad)
mov
int
push
pop
ins
adc
out
jl
lea
fisub
ror
or
push
pop
inc
cwde
sbb
jl
sahf
(bad)
xor
adc
scas
sti
pop
dec
xchg
xchg
(bad)
cmp
sbb
test
pop
out
pop
fistp
mov
xchg
fidiv
and
in
in
or
mov
retf
mov
mov
xchg
push
call
jmp
ror
cmp
imul
bound
jg
sti
popf
mov
push
push
mov
mov
push
stc
repnz
cmc
pushf
add
mov
popa
fist
adc
jp
push
loope
retf
jmp
scas
cmp
cli
jns
retf
adc
mov
push
neg
lock
sbb
loope
push
xchg
sub
pop
mov
xor
jg
outs
not
lods
test
es
ins
pop
sbb
jb
addr16
adc
nop
cmp
mov
aad
xor
cmp
ja
push
jmp
outs
xchg
stc
fs
jl
rol
test
test
out
mov
cdq
inc
mov
and
int3
xchg
fucomip
loope
pop
ret
lahf
lahf
inc
adc
fdivr
loopne
icebp
fdivp
inc
jle
(bad)
push
out
nop
mov
(bad)
das
pop
mov
lock
add
xor
fbstp
pop
je
call
ins
jge
fmul
nop
adc
dec
lds
cmp
das
sub
sub
sar
or
dec
xchg
and
cmp
dec
fs
ins
mov
xlat
movs
or
cmp
xchg
or
sbb
add
dec
ficom
dec
ds
fisttp
push
and
dec
lods
iret
jo
pop
add
pop
jne
cmp
sub
jge
sub
push
fisubr
push
je
jmp
xor
push
or
aas
xor
jmp
ja
pushw
push
fwait
jg
cmc
iret
in
movs
cmovbe
mov
xlat
clc
push
xor
jge
mov
or
or
xchg
ins
pop
daa
repz
jle
xchg
jp
fbstp
cmp
or
fwait
cs
lock
sub
ffreep
shl
aas
mov
in
xor
outs
mov
fidivr
push
ret
int3
cs
les
ds
mov
cli
jmp
bound
fcom
sti
daa
mov
das
pop
in
gs
pop
lods
mov
int3
iret
mov
push
jge
retf
ins
pop
adc
or
and
jp
mov
ja
loopne
xchg
xchg
(bad)
sbb
movs
imul
push
test
lock
cs
fisttp
dec
or
jae
jl
inc
cmc
xchg
mov
sti
(bad)
dec
cmps
test
or
push
das
jp
pusha
hlt
inc
add
es
sub
dec
repz
cmp
sbb
pop
ret
adc
test
or
test
or
pushf
jmp
cdq
mov
mov
push
lock
(bad)
clc
push
xor
stos
outs
pop
mov
or
inc
loopne
xor
retf
push
mov
(bad)
stos
fcom
into
jnp
fsub
inc
out
mov
ret
jae
inc
push
cmp
jae
xchg
inc
sub
dec
or
pop
sbb
pop
mov
inc
retf
jmp
cmp
add
dec
mov
cld
cmp
in
adc
sbb
retf
aad
mov
xchg
call
sbb
push
arpl
test
repnz
mov
rcl
add
inc
cdq
out
cmp
int3
pop
inc
xchg
je
dec
push
pop
(bad)
dec
mov
pusha
or
in
sbb
fnstcw
arpl
mov
add
inc
les
call
add
fbld
test
pushf
jecxz
cs
ja
rcr
sar
adc
idiv
xchg
or
ds
(bad)
stc
retf
test
add
and
sub
push
aam
cmc
bound
and
arpl
mov
and
shr
jno
pop
jb
add
imul
inc
sub
lock
(bad)
call
or
or
rol
mov
mov
ret
dec
pop
mov
and
cld
mov
jmp
stos
add
call
sub
pop
dec
lea
lds
pop
loopne
xchg
jo
or
aas
jbe
pop
hlt
dec
es
xor
inc
cmp
adc
add
sub
mov
pop
push
stos
jnp
int3
push
std
idiv
test
xchg
mov
and
jmp
cdq
sti
sub
mov
inc
push
sbb
jle
and
int
cmps
in
imul
shr
jge
xor
dec
in
add
fst
xor
jmp
sbb
xor
sbb
add
sub
mov
dec
popf
dec
push
fadd
std
ucomiss
and
and
pushf
sub
mov
jmp
push
movs
jnp
loopne
adc
test
dec
daa
retf
mov
xchg
and
jo
(bad)
mov
in
repnz
or
mov
adc
shr
aad
call
rcl
inc
or
push
cwde
add
enter
jecxz
or
and
cmc
jne
ret
push
in
and
repnz
into
aaa
push
aas
push
sar
popa
movs
cmps
push
imul
xchg
retf
test
fcmovu
test
mov
ins
enter
clc
cmps
movs
or
mov
xor
in
jle
aaa
dec
pop
mov
cmc
fidivr
xchg
ins
adc
mov
fiadd
cmp
sub
and
xor
js
adc
shl
dec
mov
mov
xchg
inc
sub
mov
mov
xchg
sbb
scas
aas
loope
cmc
xchg
pop
push
lahf
outs
popa
push
adc
xor
je
mov
push
ja
inc
push
aaa
adc
imul
mov
jp
push
inc
push
sar
iret
cmp
inc
mov
xchg
and
mov
pop
mov
sar
aas
jno
and
scas
sub
add
repnz
shl
adc
lods
add
mov
dec
ins
ja
sahf
dec
pop
mov
mov
cmp
(bad)
in
fsub
mov
ret
lahf
cmp
test
(bad)
ffreep
test
jl
(bad)
scas
repnz
sub
out
ins
or
mul
or
jecxz
sahf
pushf
test
out
sbb
(bad)
ds
xor
jns
outs
cmp
jg
gs
mov
inc
popa
loope
sahf
loopne
mov
jmp
cmp
std
mov
std
(bad)
sbb
or
jnp
jmp
push
xor
rcr
xchg
cmc
scas
in
mov
ror
or
mov
stos
inc
data16
mov
call
fimul
imul
xchg
scas
add
pop
mov
adc
shl
loopne
psubd
mov
mov
in
aad
pop
data16
nop
xchg
(bad)
xor
pop
mov
mov
mov
aam
push
jbe
shr
repz
das
ficomp
sbb
push
std
and
push
iret
pop
inc
jae
test
jo
sbb
jbe
(bad)
adc
lods
aaa
pop
push
adc
xchg
or
sub
js
rol
push
ficomp
in
or
sbb
(bad)
ficomp
sbb
mov
pop
ret
in
dec
mov
xor
sbb
test
ret
xor
xor
mov
mov
jne
stc
jmp
mov
cli
dec
mov
fnstsw
pusha
pop
les
or
(bad)
repnz
aam
arpl
cmp
dec
fst
jno
sbb
push
dec
mov
das
popf
std
mov
adc
ja
and
pop
fld
mov
and
add
sbb
into
in
and
sub
ss
dec
dec
pop
mov
shr
mov
fdivr
(bad)
dec
pusha
dec
int
and
adc
dec
add
out
cs
cs
pusha
or
ja
jmp
call
fwait
shl
cs
and
and
cmp
mov
rcl
scas
repz
or
dec
adc
push
jmp
fcomip
repnz
lods
je
out
dec
fnsave
mov
cmc
das
mov
pop
or
xlat
mov
lahf
sbb
pop
push
xchg
clc
pop
fstp
mov
mov
cmps
xor
scas
(bad)
jb
outs
xor
cdq
(bad)
ds
cmp
or
into
ret
sar
cmc
call
mov
mov
test
sub
adc
mov
jp
mov
add
adc
movs
mov
dec
add
lahf
lds
mov
fisub
jmp
add
cmc
pop
and
mov
in
aam
aad
scas
push
adc
and
scas
lock
jecxz
ret
sub
ins
inc
int
pop
add
mov
sbb
repz
dec
ins
sar
mov
mov
pop
aaa
pop
int
add
es
movs
mov
mov
pop
mov
cli
xchg
hlt
int3
fwait
ja
jp
pop
mov
ins
adc
out
in
fwait
or
test
fcom
ret
inc
fs
fcom
(bad)
sbb
ret
mov
cld
mov
out
test
sbb
cmp
mov
lea
loope
mov
lds
cmp
or
adc
iret
add
jmp
not
pop
fbld
adc
inc
lods
imul
pop
retf
into
outs
scas
sub
not
outs
stc
inc
addr16
or
data16
fisttp
adc
inc
inc
sub
push
sub
bound
pop
pushf
cld
jb
sbb
retf
push
les
mov
jl
or
into
cmps
fstp
pop
jb
cli
sbb
mov
mov
test
cmps
imul
dec
mov
mov
sbb
xor
arpl
inc
dec
std
out
xchg
jmp
iret
sub
dec
loope
retf
or
sbb
cmp
xor
sbb
inc
jle
sbb
push
mov
mov
lds
mov
pop
movs
std
jmp
stos
lods
cmps
dec
pop
outs
shl
sbb
lods
mov
ja
mov
xor
or
in
outs
jg
outs
xchg
cdq
std
xor
jae
popa
pop
shl
in
out
push
xor
and
dec
inc
jae
mov
movs
ret
pop
bound
cmps
sub
int
lahf
out
adc
mov
push
push
out
jno
inc
imul
push
leave
leave
rol
push
fistp
outs
dec
cli
pop
adc
mov
mov
(bad)
cdq
or
adc
xor
cli
loopne
aam
sbb
imul
cwde
aaa
xchg
jp
aaa
sub
lea
mov
pop
fist
(bad)
mov
jno
inc
sub
test
inc
lods
int3
popf
or
xlat
mov
arpl
fisub
mov
inc
pop
mov
movs
stos
push
ret
out
sbb
adc
pushf
sbb
aad
(bad)
sub
nop
aad
push
test
cwde
pmaxsw
jmp
call
pushf
in
mov
jno
xchg
cmc
test
xchg
cmc
fisttp
mov
add
xchg
ins
in
hlt
mov
imul
inc
pop
pusha
clc
lock
push
mov
(bad)
push
xchg
push
fild
call
xor
fcompp
jnp
dec
push
pop
sar
cld
pop
or
lods
mov
xor
inc
xchg
xor
cmp
sbb
push
push
mov
scas
jge
enter
xor
cmp
jne
out
sub
scas
mov
call
pusha
jb
push
xchg
push
mov
sbb
lods
xor
nop
xor
xor
sbb
jnp
ins
ret
outs
lock
shl
or
arpl
ret
sub
jb
ds
sbb
lea
sub
dec
pop
xchg
and
mov
fisttp
lea
cmp
pop
xchg
shr
in
push
xchg
fs
or
xor
add
lock
out
dec
mov
pop
cmp
(bad)
cli
adc
mov
pop
dec
jmp
push
leave
imul
std
fidivr
shl
add
add
add
in
cld
aaa
sbb
mul
push
ror
adc
or
jge
add
(bad)
pop
jmp
xlat
adc
test
push
jle
or
dec
mov
jns
xchg
jecxz
hlt
ds
cmc
shl
test
lea
iret
das
int
dec
fstp
jns
or
stos
jns
sbb
dec
cmp
int3
js
leave
jg
imul
push
xchg
ins
lahf
inc
(bad)
dec
pusha
mov
loopne
xor
cmp
sub
fistp
sbb
jge
xlat
movs
retf
inc
fwait
scas
sbb
cli
and
mov
das
cmc
repz
inc
addr16
enter
pop
dec
loop
xor
cli
push
cwde
leave
cmp
in
mov
adc
cli
mov
xlat
or
pop
push
mov
mov
repnz
loopne
pop
adc
xchg
mov
das
push
jle
mov
call
ret
add
add
and
out
fisttp
mov
adc
or
icebp
jo
sbb
rcr
pop
sub
adc
sbb
push
push
or
or
movs
in
ss
mov
fcomp
cwde
jp
xor
cmp
cs
mul
push
push
jne
mov
mov
push
pop
xchg
sub
mov
mov
sub
add
sub
lods
jnp
retf
call
push
sbb
mov
mov
not
popa
dec
and
xor
dec
add
addr16
and
inc
fistp
add
mov
(bad)
sbb
push
adc
lds
add
xlat
or
push
mov
loop
and
cmps
sub
aam
push
enter
std
inc
dec
outs
or
clc
cld
arpl
data16
inc
(bad)
mov
js
mov
sub
(bad)
adc
test
or
stos
pop
and
jp
test
mov
inc
mov
js
dec
rol
repnz
jg
je
ds
cmp
ror
repz
shr
adc
xor
lea
push
imul
mov
ja
fistp
loop
xchg
pusha
add
sub
push
pop
sub
inc
mov
xchg
(bad)
pop
sbb
data16
cmp
mov
ins
repz
test
sub
jno
sub
and
cld
mov
inc
mov
dec
mov
add
xor
(bad)
jmp
sbb
retf
test
cwde
push
data16
mov
lods
imul
jnp
push
pop
adc
test
xchg
add
xchg
sahf
mov
ret
cmp
pop
iret
jno
mov
add
lock
jb
cmp
jle
icebp
sub
ins
and
adc
and
or
or
xchg
sbb
and
retf
mov
in
xor
mov
cmp
pop
push
and
fimul
sbb
jecxz
ret
outs
call
outs
addr16
out
test
pop
jle
jecxz
pop
sbb
fucomi
mov
mov
ins
shl
xor
pop
xchg
push
sbb
and
sbb
jnp
sbb
cmps
mov
and
int
dec
adc
test
je
mov
pop
inc
mov
shl
push
repz
pop
std
mov
dec
or
dec
int
or
das
jmp
popf
mov
test
stc
sub
retf
xor
mov
int
mov
sub
ja
in
mov
mov
mov
mov
hlt
inc
cmp
out
shl
add
stc
jp
in
mov
retf
cwde
ja
mov
scas
xchg
rcr
loopne
pop
stc
sbb
pop
mov
lea
into
lods
fs
lods
jmp
imul
aam
(bad)
mov
inc
scas
xchg
js
cld
xchg
int
xor
das
mov
fs
adc
clc
and
mov
sbb
scas
pop
pop
lods
push
and
mov
adc
pop
mov
(bad)
push
mov
push
fdivr
outs
add
mov
outs
lods
mov
fdivr
inc
inc
jecxz
loope
xor
or
lods
in
movs
pushf
pushf
in
add
and
popf
mov
shr
stos
sub
test
in
cmp
scas
les
push
mov
mov
sbb
loope
mov
test
stc
mov
adc
ins
test
ret
cld
push
mov
test
xchg
std
(bad)
aas
pop
icebp
dec
mov
xchg
lea
xor
mov
scas
nop
lahf
jnp
aaa
push
ret
xor
test
enter
fbstp
fisttp
mov
aam
mov
inc
(bad)
add
and
pop
clc
aas
stc
ficom
nop
mov
dec
loopne
test
mov
das
pop
pop
jmp
mov
and
mov
daa
xor
rol
lods
js
mov
pop
push
add
add
ret
jb
(bad)
xchg
pushf
sti
xchg
fldenv
xchg
sbb
add
fimul
and
jecxz
and
int
add
or
mov
xchg
(bad)
mov
arpl
mov
mov
into
popf
rcl
and
pop
dec
sub
jo
mov
mov
sti
mov
ror
adc
shl
mov
xchg
fst
mov
std
cmc
out
and
je
mov
push
inc
push
in
movs
jge
cmp
sub
mov
fcom
mov
cmp
faddp
push
std
loopne
ins
in
fstp
out
mov
cli
jbe
sbb
sti
das
fs
jmp
sub
(bad)
in
test
mov
and
aas
retf
daa
lahf
dec
(bad)
lods
or
xchg
cmc
popa
add
fyl2xp1
int
mov
mov
push
adc
ss
gs
fwait
mov
sbb
push
adc
fbld
mov
mov
inc
xor
imul
push
sbb
sbb
sub
push
or
pop
pop
pop
jnp
dec
loope
inc
ss
(bad)
jnp
sahf
mov
test
adc
lea
pop
mov
rol
cmc
xor
push
or
pop
sbb
(bad)
jns
sub
mov
rcl
in
iret
loopne
fsub
cmp
inc
(bad)
clc
(bad)
rcl
sbb
inc
and
cmc
pushf
cs
iret
push
mov
fimul
mov
dec
leave
or
add
and
inc
push
js
mov
aas
inc
xchg
mov
fild
lahf
pop
pop
xchg
sbb
(bad)
pop
mov
mov
aaa
sub
fiadd
sbb
in
inc
push
lods
loopne
mov
daa
sbb
fst
ds
clc
jmp
cld
push
cmps
inc
(bad)
aas
mov
inc
jb
ss
xchg
and
and
lds
jle
inc
inc
mul
push
push
sub
ja
mov
pop
jmp
mov
test
ins
ds
cmp
sub
cmp
stos
scas
dec
mov
jg
loope
xor
ins
dec
mov
ror
into
loope
aas
xchg
pusha
dec
stos
je
rol
adc
aad
stos
or
xchg
cmps
lahf
ja
nop
cmc
and
mov
cmp
xchg
sbb
adc
ins
ja
dec
inc
sbb
push
dec
ret
dec
enter
sub
add
xor
jns
mov
scas
leave
bound
stos
sbb
out
(bad)
xchg
cld
or
fild
sub
sbb
aam
scas
inc
outs
repz
push
fsubr
jg
mov
loope
div
hlt
inc
mov
lock
jp
or
pop
lods
enter
sbb
call
inc
lock
loop
pushf
or
(bad)
push
sahf
push
cmp
sub
loopne
or
das
mov
pop
adc
shl
(bad)
sub
push
call
ins
or
ja
test
push
xchg
cwde
xlat
xor
fdivr
or
fsubrp
sbb
jbe
inc
push
(bad)
or
dec
cmps
mov
out
dec
lea
push
scas
aad
adc
mov
in
pop
pop
outs
mov
icebp
mov
dec
mov
call
sub
pop
xor
cmps
sbb
pop
sbb
sbb
pop
sbb
test
adc
adc
dec
bound
cmps
xchg
inc
dec
je
in
or
lods
push
ret
mov
icebp
xlat
mov
mov
mov
mov
cmp
cmp
xor
ds
xchg
mov
dec
adc
or
cld
mov
outs
leave
cmp
push
movs
cmp
js
jo
or
and
rcl
test
mov
in
ja
and
xchg
sbb
test
enter
in
xlat
imul
cmp
(bad)
shr
arpl
mov
(bad)
cld
cmp
(bad)
movs
adc
ins
int3
fcomp
push
xor
rcl
mov
js
pushf
mov
punpckhbw
cdq
movs
jl
rol
daa
xchg
or
mov
ds
pop
lock
lock
mov
jp
cmp
mov
push
mov
mov
test
call
pop
lea
mov
add
retf
cmps
shr
stc
arpl
xchg
sbb
push
xchg
int3
mov
dec
outs
arpl
sub
stos
mov
inc
pop
test
enter
pop
mov
mov
jns
test
mov
ss
inc
test
adc
push
pop
and
lock
xchg
inc
pop
aad
cmovge
inc
fcmovu
sub
mov
mov
pshufw
lock
mov
outs
and
clc
sbb
lahf
pop
mov
jns
mov
nop
rol
pushf
sar
inc
fs
in
and
loope
mov
and
and
add
rep
adc
cmp
or
mov
cmp
daa
ficomp
(bad)
mov
es
sub
push
sbb
jmp
adc
test
mov
pop
das
jnp
fild
jecxz
sbb
out
xor
cmp
sbb
cmp
aaa
out
js
(bad)
fcomp
xchg
stos
jnp
lea
rcr
inc
sub
pop
mov
scas
outs
push
cmp
rol
xor
or
xchg
inc
rcr
sbb
pop
ror
ficomp
push
test
repz
lock
data16
pop
push
aam
mov
enter
add
retf
and
(bad)
add
xor
inc
push
call
push
mov
jmp
call
jne
jg
in
imul
call
daa
xchg
xchg
jge
mov
mov
pop
or
repnz
ret
cmp
fadd
aad
mov
or
rcl
dec
ror
out
push
movs
push
pop
xor
scas
in
xchg
sbb
xor
fucomip
xor
sub
cmp
icebp
(bad)
imul
hlt
pop
fbstp
ret
mov
xlat
pusha
lods
add
imul
jmp
aas
addr16
(bad)
lods
or
jl
fwait
cli
pop
pop
push
add
xchg
xchg
jmp
lahf
hlt
ret
adc
cmp
rcl
add
xchg
test
outs
pop
vmovlps
inc
cmp
lock
lock
mov
lahf
ins
nop
push
pop
arpl
imul
mov
jb
shl
in
adc
add
clc
push
add
cs
adc
(bad)
scas
xlat
cmps
ret
cdq
ror
test
stos
call
pop
iret
sub
loopne
das
(bad)
or
push
sub
enter
movs
xlat
fbld
mov
jp
int3
inc
sub
adc
xchg
pop
dec
or
mov
cmps
loope
stos
xchg
mov
idiv
dec
cmp
mov
adc
jmp
xor
stos
mov
mov
popa
mov
xchg
fs
push
mov
push
gs
adc
inc
retf
call
aam
out
cmp
scas
aam
add
jg
push
test
ret
out
sub
loop
daa
arpl
mov
push
lea
mov
and
pop
adc
inc
dec
mov
clc
std
ror
push
pop
push
push
adc
and
ficom
pushf
jl
xchg
out
leave
ficom
pop
call
cdq
fcomp
scas
mov
mov
dec
pop
vandnpd
retf
inc
enter
mov
push
data16
mov
cmp
jmp
pop
out
cmp
or
push
inc
test
jecxz
shr
inc
movs
ret
test
mov
mov
dec
jmp
test
mov
scas
mov
scas
data16
xor
popf
arpl
adc
cli
dec
push
push
xor
and
xchg
add
das
dec
mov
cmp
cli
cmp
aad
retf
stos
stc
cmp
mov
fimul
and
jmp
pop
inc
xchg
test
or
push
cmp
fsincos
sub
call
sub
and
test
inc
fwait
jnp
mov
int
lahf
fbstp
dec
dec
ss
mov
test
sbb
mov
lods
loope
pop
scas
mov
pop
xchg
cmps
sbb
pop
pop
sub
ja
mov
mov
outs
sahf
add
cmp
sbb
push
retf
aam
jno
xor
mov
sbb
add
mov
sub
xor
jl
adc
ret
aam
or
mov
imul
or
mov
or
jbe
cmc
(bad)
and
and
(bad)
pop
es
bound
data16
cmps
cmp
push
jne
test
cdq
mov
cld
in
movs
ds
sbb
loop
sub
jl
nop
data16
adc
fst
fst
mov
mov
cmps
aaa
xchg
mov
cwde
loopne
or
and
loop
repnz
leave
push
shl
add
cmp
mov
shl
add
mov
jae
ins
nop
xor
lahf
sub
lods
jns
push
das
aas
repz
fwait
cmp
arpl
mov
enter
xchg
lea
faddp
scas
mov
add
es
ins
out
dec
add
pop
call
icebp
and
cmp
push
std
cmc
pop
sub
push
mov
outs
popa
aam
jle
push
arpl
loop
loop
nop
lods
inc
pop
cmp
xchg
pop
jmp
mov
xlat
xchg
enter
das
and
mov
inc
in
pop
cli
das
xchg
shl
int
jae
int3
push
ins
add
sbb
push
call
ror
mov
in
sub
push
sti
ret
jmp
mov
inc
loopne
sub
out
mov
and
out
mov
sub
sar
xlat
adc
cmp
fmul
push
inc
fs
lock
aad
push
mov
sbb
jns
push
pop
fist
ret
inc
pop
loope
pop
dec
add
cmp
retf
sub
mov
and
jl
sub
pop
jno
cmc
add
mov
jmp
out
push
fiadd
retf
fnstenv
pusha
(bad)
xchg
adc
or
ja
sub
mov
jmp
xlat
jo
out
xor
mov
leave
ja
(bad)
and
xchg
and
aas
sub
repz
jno
mov
call
movs
push
popf
pop
pushf
jmp
shl
repz
jbe
pop
xchg
adc
fstp
mov
add
arpl
fild
pushf
pop
mov
retf
mov
je
data16
fcmove
in
sti
shr
mov
pop
ror
mov
cdq
sbb
jnp
es
or
cmps
cmp
addr16
jge
sbb
dec
jl
sbb
cmps
xor
jp
iret
cmps
aas
fs
mov
jnp
dec
mov
mov
xor
imul
adc
push
shl
es
scas
push
xor
test
jb
mov
jb
sbb
int3
in
jmp
mov
(bad)
(bad)
pusha
and
aad
loop
mov
sbb
sub
push
sahf
xlat
sbb
and
outs
shl
fadd
mov
stos
les
clc
push
cmps
in
pusha
dec
push
pop
jg
rcl
mov
repz
mov
push
cmp
jecxz
rcr
imul
cmp
gs
pop
mov
mov
add
mov
or
xor
pop
fs
adc
test
ins
cmp
mov
test
(bad)
xchg
xlat
lods
push
xor
pushf
or
mov
shl
or
aas
loop
fdiv
pop
pop
data16
inc
jo
pop
sbb
cmp
imul
iret
sar
mov
into
lock
mov
in
lods
ror
ins
ins
cwde
mov
xchg
enter
jbe
mov
jns
aaa
mov
leave
out
ja
inc
out
mov
outs
mov
daa
lods
sbb
out
xlat
dec
in
mov
xchg
(bad)
js
cmp
shl
pop
sti
inc
adc
inc
sub
add
sub
(bad)
call
inc
es
cmp
push
(bad)
arpl
popa
outs
mov
and
mov
(bad)
shl
fwait
xchg
add
mov
fwait
(bad)
je
and
adc
xor
pop
adc
mov
call
gs
dec
adc
lods
sub
push
pushf
cmp
push
xor
mov
inc
pop
and
rcr
push
xchg
add
add
repz
fiadd
pop
lea
out
mov
test
jge
repz
shr
add
cmps
adc
dec
mov
push
cmp
rcr
mov
jg
mov
xchg
xor
lods
push
adc
mov
pop
jnp
arpl
jge
dec
adc
fcomp
adc
mov
aad
jb
ret
clc
je
mov
fisub
push
(bad)
ja
dec
into
out
cwde
adc
dec
adc
jno
jecxz
fimul
cmps
mov
push
xor
cmovl
scas
in
leave
sub
pop
xlat
pop
pop
mov
jb
bnd
sub
jecxz
jns
adc
push
sti
call
xor
jecxz
cmps
mov
int3
mov
in
pushf
out
and
div
adc
or
(bad)
sbb
xchg
sbb
mov
stos
add
bound
retf
sub
mov
xor
nop
cmovge
jmp
jne
int3
mov
loope
(bad)
sbb
lds
jle
or
and
add
mov
aam
cmps
ficom
int
pop
fsubr
loop
ret
test
aad
cdq
xlat
push
dec
cmp
adc
out
sti
cmp
mov
push
cmps
dec
les
adc
cmp
shl
pop
hlt
lock
fwait
pop
rcr
cmp
xor
mov
dec
sti
rcl
into
jnp
stos
shr
sbb
xor
pop
jb
call
cmp
dec
movs
mov
mov
in
outs
mov
jnp
imul
jge
jnp
(bad)
mov
mov
inc
enter
or
adc
stos
adc
cwde
or
fisub
sbb
cld
mov
pop
inc
ins
push
lds
xchg
int
jge
xchg
dec
ss
lods
mov
mov
mov
push
je
jmp
adc
xchg
push
add
ror
clc
mov
test
(bad)
into
jae
scas
push
jle
je
jae
les
mov
xlat
into
lods
out
xchg
jge
mov
pushf
adc
cmps
ja
es
mov
push
scas
mov
jmp
or
fistp
jb
push
popf
jnp
loop
and
retf
xor
inc
call
sbb
icebp
(bad)
jl
int
stos
jmp
aaa
fld
pop
xor
les
inc
xchg
mov
(bad)
in
xor
pop
xor
add
test
imul
cdq
pop
xchg
jmp
dec
sti
inc
daa
add
jbe
push
lods
jg
in
sti
sar
mov
pop
scas
icebp
enter
inc
mov
test
not
dec
popa
and
fwait
mov
add
fmulp
add
mov
stos
mov
cmp
cwde
adc
in
jnp
push
hlt
(bad)
in
clc
or
ss
jge
jne
fbld
(bad)
popa
test
push
jmp
imul
test
test
ja
and
bnd
adc
adc
and
mov
jmp
mov
(bad)
xor
jecxz
adc
mov
rcr
(bad)
mov
adc
pop
std
lods
lods
popf
js
push
pop
arpl
cmp
popa
in
mov
scas
xor
aas
mov
sbb
cli
jne
sbb
mov
xchg
dec
cld
psubq
or
rcl
pop
push
pop
push
in
daa
shr
int
xchg
dec
jmp
mov
xor
mov
fiadd
cmp
mov
das
outs
jns
dec
cmc
or
hlt
clc
jle
ins
cmp
je
jmp
add
fs
pop
sahf
dec
cmc
cs
mov
jle
daa
lods
jo
jecxz
out
push
jno
out
sbb
mov
fcmovnu
into
test
xchg
cli
or
loop
mov
out
jb
push
add
xor
and
pop
cmps
jb
popf
aad
sti
bound
ins
add
adc
into
and
mov
in
inc
or
std
stos
push
(bad)
rcpps
sbb
mov
mov
push
fwait
out
lods
shr
jmp
mov
ror
sbb
or
mov
xor
dec
loop
imul
jo
mov
cs
loop
mov
ret
or
inc
xchg
dec
sti
out
cwde
dec
mov
cmc
pushf
ret
xor
sbb
mov
(bad)
dec
call
gs
(bad)
das
outs
xchg
jnp
mov
sbb
shr
adc
test
push
out
lahf
int3
mov
pop
cmp
inc
js
jnp
sub
adc
hlt
dec
jl
pusha
jmp
sub
in
or
adc
sbb
push
pop
mov
mov
std
sbb
outs
mov
sbb
sbb
dec
test
pop
pop
pushw
jge
mov
cmp
lods
push
inc
xor
ins
icebp
jge
pop
mov
jo
jmp
ror
imul
test
jns
das
xor
adc
pushw
xchg
inc
jo
jmp
in
and
xlat
jbe
push
mov
mov
dec
jle
push
fnstenv
inc
pop
mov
jmp
(bad)
push
fld
mov
imul
ret
inc
shr
adc
mov
mov
shl
pop
icebp
and
retf
adc
inc
pop
loop
dec
aam
ds
push
adc
pushf
cmp
(bad)
int3
xlat
inc
inc
fiadd
scas
lods
cwde
fisub
mov
push
push
and
daa
push
in
cld
arpl
add
cwde
(bad)
out
adc
mov
loop
loop
xchg
in
cmp
mov
jne
dec
fadd
movs
popf
jmp
fs
push
out
popf
jmp
jno
cmps
lahf
add
test
fistp
jge
or
xor
jo
sahf
jne
pop
jmp
hlt
jo
inc
pop
cld
sbb
push
xchg
int
mov
xor
repnz
cmp
clc
jbe
jge
mov
push
addr16
sbb
shl
sub
jge
xchg
in
xor
and
je
adc
pop
push
dec
fwait
iret
pop
stos
xchg
(bad)
mov
mov
ds
es
repz
loop
enter
lds
pushf
aaa
cmp
cmps
out
xchg
(bad)
(bad)
pop
clc
pop
add
mov
cmps
leave
aas
lea
lock
dec
add
(bad)
outs
rcl
inc
or
inc
pusha
cmc
aas
jo
xchg
push
xchg
dec
cmps
icebp
shl
imul
nop
cs
xchg
cmc
mov
push
daa
mov
test
adc
out
mov
ins
mul
sub
or
xchg
int3
sbb
repz
and
out
outs
mov
xchg
sahf
sub
fwait
pop
sbb
in
push
mov
imul
sub
adc
in
out
sahf
jae
shl
pop
les
sub
pop
jb
stos
rcl
into
sub
mov
pop
sub
jl
sub
lods
in
mov
push
or
iret
ins
fbstp
pop
ds
mov
xchg
jmp
pop
or
mov
jl
push
push
mov
or
jmp
jnp
pop
dec
cmp
mov
sbb
xchg
bound
ds
pop
out
mov
imul
lods
call
out
mov
xor
pop
test
mov
enter
mov
pop
cld
mov
aas
es
aam
pop
pusha
cmps
pop
cmps
fbld
retf
adc
repnz
imul
jmp
fisubr
adc
es
ret
sub
add
jae
addr16
add
mov
fdivr
mov
sbb
clc
test
jg
ror
repz
dec
pop
cdq
ins
fistp
retf
or
pushf
add
and
push
out
jns
mov
call
adc
xchg
fild
in
adc
dec
bound
sbb
(bad)
jbe
mov
enter
ins
cwde
bound
lods
lock
daa
jl
mov
nop
int3
jns
mov
pusha
retf
adc
sar
pushf
jg
cmp
cmp
out
mov
mov
mov
xchg
sti
xchg
xchg
scas
mov
mov
or
add
mov
or
cs
xchg
in
stos
test
xchg
repz
dec
hlt
ins
mov
aad
popf
pop
xchg
fs
dec
test
ds
sub
not
push
int3
mov
pop
ret
ins
pop
xor
push
icebp
lds
or
jmp
sbb
cli
sub
jae
mov
ficom
out
mov
loope
popa
retf
push
and
dec
inc
test
xchg
jne
or
sub
cmp
clc
ins
fs
stos
cmp
sti
or
xchg
xor
or
dec
add
pop
repnz
(bad)
call
sbb
adc
sbb
sbb
jle
inc
push
jp
mov
xchg
sti
(bad)
mov
jns
sub
je
pop
cmp
in
pop
icebp
mov
mov
jecxz
mov
cmps
jnp
and
pop
sub
mov
mov
add
call
or
clc
out
(bad)
retf
loope
mov
movs
adc
push
dec
imul
ins
sub
int3
pop
cmp
mov
gs
dec
pop
jne
mov
out
fidivr
mov
pusha
and
xchg
add
mov
mov
mov
dec
ucomiss
inc
xor
xor
xchg
jo
pop
js
inc
sbb
jae
int3
sub
(bad)
(bad)
fcom
and
mov
stos
loop
adc
xor
xor
jmp
push
push
out
fild
lods
and
cmp
sbb
inc
(bad)
test
or
(bad)
push
inc
in
ins
add
mov
fst
data16
enter
test
daa
dec
aaa
jae
call
lods
fwait
or
cmps
push
mov
mov
pop
push
adc
stos
sbb
inc
les
retf
push
mov
push
stos
stos
jle
test
xchg
adc
add
push
imul
hlt
jmp
and
jno
push
popa
mov
out
adc
pusha
and
jns
test
adc
jo
or
xor
pop
cmp
popf
out
out
call
cli
push
in
aam
lock
dec
mov
pop
inc
inc
loope
xor
jl
mov
mov
ins
sub
jnp
xchg
ror
loopne
cdq
js
push
cmc
or
fnstenv
jae
mov
and
test
pop
sbb
popf
popf
mov
stos
jmp
shl
out
mov
pop
jmp
jmp
push
pop
adc
sub
cmp
aas
mov
(bad)
je
inc
dec
gs
sub
enter
stos
mov
xchg
pop
ss
mov
sbb
sbb
enter
mov
jmp
sub
icebp
or
or
sub
es
pop
mov
mov
cld
mov
jg
mov
les
nop
adc
jae
cmp
(bad)
out
lods
rcr
loop
fnstcw
or
adc
shl
rcr
mov
daa
sub
mov
mov
sbb
xor
lock
mov
or
or
xor
ret
scas
fidiv
fdivr
add
scas
xchg
mov
push
imul
fst
push
inc
js
push
jmp
pop
jno
jne
stos
xchg
ret
add
jecxz
and
mov
jmp
adc
dec
dec
mov
mov
in
sahf
movs
in
dec
add
sub
mov
cmps
mov
mov
xchg
pop
es
push
and
ds
pop
adc
mov
ja
mov
out
data16
fisttp
std
iret
push
inc
push
dec
sub
shl
push
or
in
sbb
push
pop
les
sbb
inc
jne
bound
sahf
mov
xchg
mov
cli
fist
or
ficom
ins
popa
cmp
xor
sub
int
mov
adc
idiv
ret
push
mov
inc
bound
shr
mov
xbegin
jl
fsubr
cmps
jp
mov
jnp
pop
mov
retf
jg
out
pop
mov
cli
movs
sub
pop
lahf
ret
sub
mov
xchg
fwait
jmp
or
lds
mov
mov
das
call
add
mov
fwait
loopne
jge
loopne
and
and
push
daa
push
inc
sbb
pop
in
dec
gs
fdiv
cmps
bound
mov
and
cmp
popa
inc
cmp
sar
jp
dec
pop
or
pop
cmp
xchg
xchg
sbb
add
jne
sub
xlat
xchg
xchg
push
pop
mov
sbb
push
mov
push
test
outs
cdq
(bad)
push
test
mov
fsub
loop
push
das
inc
cmps
or
arpl
lods
mov
and
loop
adc
push
ins
nop
inc
dec
mov
cmp
add
mov
mov
movs
fistp
stc
mov
and
push
push
pop
dec
add
sbb
ins
adc
sbb
rol
sar
lods
jno
mov
sub
xchg
and
inc
in
jbe
scas
push
rol
pop
pop
inc
pop
fwait
sbb
scas
jmp
out
cmp
pusha
pusha
add
lds
shl
or
mov
mov
push
rcr
jg
shr
cmp
and
inc
mov
mov
sbb
mov
mov
push
xor
push
adc
das
stos
jb
cmps
add
loop
mov
in
mov
mov
es
push
cmps
ins
xor
ss
fadd
xor
mov
or
cmps
cwde
push
push
in
xchg
add
imul
push
sahf
push
rcr
add
cli
pop
inc
movs
cdq
and
es
clc
cdq
popf
scas
retf
sbb
loopne
aad
fwait
std
outs
and
xchg
cmp
mov
pop
xor
cwde
inc
daa
(bad)
stc
leave
into
and
mov
sub
shl
repz
fadd
sub
fiadd
pushf
scas
scas
shl
test
sub
sahf
repz
test
lahf
(bad)
push
mov
push
cmps
sub
adc
xor
and
cwde
sbb
mov
sar
jmp
lock
nop
retf
adc
lods
or
adc
in
dec
in
adc
dec
push
fwait
outs
and
xchg
stos
sbb
ret
(bad)
ja
js
dec
(bad)
cs
sbb
xor
outs
and
cmp
pop
aam
dec
mov
call
daa
sbb
cwde
mov
outs
std
jno
inc
cmps
fisttp
sub
shr
and
ss
pop
push
mov
mov
hlt
xchg
mov
not
or
mov
xchg
(bad)
in
xchg
leave
pusha
jb
push
in
pop
into
pushf
adc
push
clc
enter
mov
cmp
add
lds
push
in
mov
loopne
mov
sub
fwait
push
hlt
bound
pop
mov
into
mov
cmps
mov
mov
cdq
in
lahf
mov
clc
movd
mov
and
cs
imul
data16
loop
mov
bound
cdq
push
movs
xor
(bad)
mov
les
aad
pop
mov
cs
pop
add
cmp
test
out
sub
jge
dec
cwde
(bad)
test
(bad)
push
mov
inc
cwde
call
pop
fdivr
dec
xchg
xchg
adc
iret
adc
icebp
aaa
cmp
pop
idiv
and
add
in
push
ins
pusha
ret
or
ficom
ins
pop
popa
and
push
std
leave
adc
imul
in
or
and
es
adc
rcl
mov
mov
push
repz
xchg
sub
loopne
push
cdq
and
gs
fs
mov
xor
push
and
(bad)
sub
xchg
lods
shl
jl
outs
ss
je
mov
jg
xor
and
into
jb
inc
adc
mov
lahf
and
pop
fisttp
push
int
xor
and
and
push
rcl
cmp
popf
icebp
xchg
xchg
ja
out
inc
sub
mov
loope
loope
rcr
js
in
push
aas
hlt
pop
int
inc
test
push
cmc
jle
imul
(bad)
pop
je
sub
jb
mov
mov
inc
xor
dec
aad
inc
imul
mov
scas
leave
lods
pushf
lds
hlt
add
inc
les
or
xor
fidivr
mov
iret
or
aaa
and
sbb
xor
sbb
pop
jnp
aam
arpl
dec
and
ss
mov
ret
ret
mov
pop
pop
sub
mov
icebp
xor
fadd
mov
(bad)
xor
retf
in
lods
ss
xor
and
das
jmp
inc
xor
add
cmps
mov
ins
(bad)
dec
(bad)
mov
lea
cs
jecxz
stc
rcr
iret
or
pop
add
xchg
cmps
and
iret
mov
inc
test
fild
int
lds
cmp
mov
rcl
pop
ret
fadd
sub
add
aaa
les
mov
adc
repz
into
sahf
mov
sti
in
pop
repnz
add
pop
in
jno
mov
mov
sahf
ds
retf
fmul
sub
add
scas
out
mov
popa
mov
pop
jp
lahf
ja
lods
test
mov
test
dec
cmp
jae
repz
stc
fld
add
mov
fild
lahf
mov
mov
in
sar
mov
aas
imul
push
je
push
jne
stc
sti
adc
fistp
jecxz
aas
(bad)
sub
cmp
ret
push
or
cdq
imul
das
popf
cli
push
movs
cmp
pop
mov
int
sbb
loop
cmp
push
mov
push
shl
lea
pushf
inc
ret
call
imul
mov
cmp
fstp
push
mov
adc
or
xchg
leave
mov
nop
aam
hlt
and
xchg
mov
jb
lea
hlt
push
rcr
push
xor
mov
ds
push
imul
pop
dec
pop
std
sbb
push
push
push
jmp
jne
shl
cmp
jae
adc
imul
lods
(bad)
rol
mov
or
stos
mov
inc
dec
cmp
ror
ds
inc
jae
sbb
jno
pop
mov
mov
inc
sbb
and
mov
xchg
idiv
jns
stos
pop
mov
dec
mov
mov
(bad)
stc
js
stos
jns
les
sub
push
lods
pop
dec
adc
jecxz
fbld
xor
mov
mov
stc
add
outs
cld
sub
add
ror
pop
adc
out
xchg
loopne
inc
nop
mov
lds
xchg
ins
add
xor
push
or
call
repnz
ret
sbb
imul
popa
popf
sahf
in
inc
sbb
pop
inc
or
cmp
dec
lods
clc
add
jmp
sub
jno
dec
repz
pop
jmp
dec
push
pop
adc
ja
test
cmps
xchg
xchg
jmp
jecxz
jg
out
cs
push
adc
xor
jb
mov
movs
in
out
sbb
xchg
sub
dec
stos
cdq
mov
push
xor
jmp
xor
add
int3
jmp
shl
xchg
out
jns
sti
aad
mov
pop
pxor
push
pop
add
jmp
push
sahf
sub
pop
cs
std
les
mov
dec
xchg
enter
cli
outs
pop
push
fcmovb
pusha
mov
sub
mov
cs
pop
adc
add
(bad)
mov
daa
jne
test
push
jecxz
stc
es
test
enter
or
mov
xchg
dec
icebp
popf
jg
sbb
push
ds
push
xchg
jns
mov
add
push
inc
sub
sar
push
cld
push
loop
out
adc
ffree
in
or
hlt
(bad)
push
jns
hlt
fmul
out
addr16
sahf
jno
ror
or
retf
or
retf
std
ins
xlat
sbb
add
stc
pop
cmp
mov
pop
push
ja
in
mov
jmp
dec
(bad)
add
pop
out
dec
out
jnp
xor
test
dec
lods
sbb
ret
scas
out
push
and
xchg
adc
stc
(bad)
stos
fsubp
je
mov
cmp
ja
xchg
fistp
cli
rcl
loop
adc
push
(bad)
js
mov
jp
das
enter
rcr
mov
call
(bad)
and
lock
ficom
fistp
xchg
dec
popa
add
sub
mov
fldcw
int
repnz
cmps
mov
imul
(bad)
data16
shr
js
out
adc
scas
mov
pop
pop
gs
xchg
or
fidivr
imul
push
xor
in
push
scas
push
mov
aad
je
pop
les
ret
and
pop
addr16
pop
lods
push
je
pop
imul
push
mov
retf
mov
mov
fidivr
sbb
mov
popf
out
jmp
rol
jo
xor
lds
pop
imul
pop
mov
adc
cmp
imul
cld
or
sub
cmp
inc
mov
repnz
pop
jae
add
mov
pop
dec
mov
push
retf
or
adc
outs
jmp
xor
push
bound
pop
in
repnz
ss
xor
add
aam
cwde
int
dec
sub
in
adc
imul
dec
in
add
xor
aas
sahf
test
mov
mov
rcl
imul
popa
xchg
xor
xor
add
adc
mov
jbe
jb
repz
xor
jl
imul
mov
ficomp
arpl
stc
jg
xor
or
xor
idiv
inc
ret
and
inc
jecxz
pop
inc
shl
jb
(bad)
sbb
imul
add
call
sub
mov
mov
push
add
(bad)
mov
cs
test
or
inc
jmp
lds
or
mov
push
dec
pop
mov
mov
in
pop
xor
inc
rol
scas
shl
fcmove
cmp
and
xor
cs
out
sahf
xor
sbb
pushf
cwde
cmp
mov
push
gs
push
ror
dec
movs
scas
add
rol
je
add
in
adc
sar
sahf
dec
mov
adc
push
stos
inc
xchg
push
cmps
mov
mov
pop
hlt
sub
and
cmp
or
jp
daa
cmps
aaa
and
sbb
or
mov
fsubr
add
add
ins
lods
ret
mov
fcmovu
out
push
clc
pop
cpuid
sub
clc
adc
sar
ss
loope
pop
adc
out
fsubr
in
arpl
pop
pusha
cmps
jge
fnstenv
mov
leave
cs
xor
std
cmp
push
cmp
push
or
int
pop
inc
xor
adc
cmp
xchg
and
int3
jge
or
mov
pop
jbe
cmc
pop
clc
das
adc
cdq
pop
dec
shl
sub
enter
add
jo
sub
inc
jle
imul
add
cmp
(bad)
popa
ss
push
sbb
add
das
inc
jg
fs
or
sub
pop
rol
ins
fild
mov
sub
inc
das
xchg
inc
int3
dec
daa
mov
out
(bad)
push
scas
push
int3
rcr
pop
je
push
mov
sub
mov
nop
cs
daa
xchg
inc
mov
inc
mov
fild
fnsave
or
setae
fdiv
dec
mov
inc
sbb
test
rcr
std
dec
mov
mov
lea
lds
or
sahf
xor
pop
ss
(bad)
dec
inc
inc
push
imul
es
sbb
js
adc
das
push
push
shl
add
mov
fld
sbb
xor
adc
out
sbb
retf
mov
js
popf
mov
xchg
loope
cs
iret
jno
xchg
repnz
jle
into
ins
pop
sub
dec
cmp
stos
enter
aad
xchg
lea
lock
xchg
jae
xchg
scas
push
cmp
fs
mov
ins
cmps
js
js
loope
ret
ror
push
mov
test
pop
cwde
mov
int3
out
mov
adc
sbb
aaa
pop
or
(bad)
ins
movs
mov
mov
fmul
inc
into
or
mov
sub
sbb
sub
sub
sbb
cld
scas
and
and
je
and
cmps
mov
in
fnstenv
mov
pushf
jp
cmp
pop
pop
jno
sub
add
ins
or
lods
pop
dec
or
in
sub
adc
test
dec
xor
cld
imul
xchg
(bad)
jo
jne
mov
jge
pop
jbe
mul
aaa
push
inc
in
in
xchg
out
sahf
push
das
imul
sti
fs
test
scas
xchg
gs
pop
add
mov
aad
cdq
je
movs
(bad)
call
cmp
lock
ins
dec
jbe
fdivr
(bad)
xchg
fwait
xor
nop
pop
out
(bad)
cmp
push
jae
mov
fnstenv
icebp
movs
push
mov
mov
adc
xor
mov
push
xchg
cs
rol
or
jns
out
stos
retf
cwde
cmps
cs
cmp
cmps
cmps
pop
push
nop
mov
mov
aad
stos
in
pop
out
sti
pop
cwde
pop
das
or
pop
and
mov
dec
call
cmp
clc
add
sub
jmp
dec
or
ja
inc
jae
rcl
out
cld
icebp
clc
jns
cld
in
jnp
iret
jns
jne
pop
xchg
jmp
mov
dec
add
call
adc
jl
fs
jae
or
mov
scas
lods
mov
push
lock
loop
pop
leave
loop
call
jnp
cmp
jae
add
jmp
fs
outs
dec
(bad)
xor
pop
sub
and
xor
std
test
mov
inc
pushf
cmc
jmp
out
mov
outs
mov
loopne
(bad)
adc
jo
push
sub
(bad)
stc
sahf
ds
sbb
scas
mov
fiadd
sub
adc
jae
dec
xchg
imul
add
cmp
inc
cwde
jmp
pop
sub
cmp
xor
adc
mov
mov
sub
mov
push
movs
mov
push
stos
jne
mov
pop
cmp
outs
inc
je
test
mov
cli
div
(bad)
push
call
sti
push
sbb
cmps
(bad)
xchg
push
test
jnp
fdiv
push
sub
(bad)
out
mov
sahf
and
test
xor
push
test
imul
daa
and
inc
out
mov
int
fiadd
stos
nop
jle
aas
sub
je
cli
ret
pop
adc
or
retf
push
fld
cwde
out
jb
fsub
test
aam
mov
call
popf
fstp
scas
adc
mov
loopne
fstp
xchg
stos
xchg
scas
leave
(bad)
leave
cmp
mov
xor
clc
jmp
dec
sub
cmp
rol
mov
dec
scas
jmp
pushf
out
test
fild
rcr
mul
xchg
pop
outs
jl
mov
mov
scas
jecxz
sbb
or
sahf
inc
mul
inc
loope
lock
dec
or
ja
in
adc
jae
std
loopne
jo
adc
push
movs
es
mov
scas
mov
jnp
jecxz
adc
into
rcr
stos
stos
sbb
add
xor
pop
callw
ss
fwait
push
adc
push
sbb
add
pop
pop
xor
sub
scas
push
xlat
cmc
xchg
sbb
into
mov
fincstp
and
cli
out
stos
pop
push
cs
mov
or
lods
and
mov
jmp
sar
dec
jb
aaa
lahf
add
xor
repz
cmp
loopne
or
in
popa
sahf
int
mov
leave
lods
test
push
scas
mov
int3
push
xchg
cdq
movs
adc
push
cmp
xchg
sub
retf
or
jbe
loop
dec
pop
push
cmp
mov
push
and
mov
push
xor
or
inc
ret
and
mov
inc
inc
fwait
cmp
dec
fisub
xor
aam
(bad)
std
sbb
jg
sbb
das
std
push
aam
xchg
sub
out
inc
sub
stc
iret
ja
xor
add
or
js
jmp
jnp
sub
and
cmps
sahf
adc
jnp
jnp
inc
or
xchg
adc
cmps
inc
jne
cmp
in
je
sbb
pop
imul
mov
je
data16
add
xor
mov
out
push
adc
mov
mov
rol
xor
xchg
mov
and
inc
adc
sub
xchg
ins
jbe
in
xchg
pop
xrelease
xor
cmp
(bad)
scas
in
inc
cmp
in
dec
fiadd
sub
mov
push
rcr
sti
js
cmps
pop
bound
pop
pop
and
dec
mov
fwait
stos
cmp
and
(bad)
(bad)
jnp
rcr
aas
push
test
arpl
xor
out
out
jo
rcl
or
cmc
gs
mov
bound
mov
inc
mov
push
xacquire
shr
cmc
out
fwait
test
xchg
jmp
push
sub
sub
shl
int
jno
movs
mov
or
push
fcomip
pop
cmp
xor
mov
adc
push
inc
sbb
xchg
mov
ds
out
daa
ja
or
jecxz
pop
pop
jne
lock
test
fcmove
push
push
sub
mov
test
add
movs
add
int3
out
mov
adc
icebp
add
mov
cwde
xlat
add
jmp
push
and
out
mov
push
sbb
cmp
fisttp
xor
(bad)
dec
mov
sbb
dec
jne
push
retf
xor
aaa
fsub
dec
repnz
or
or
clc
shl
inc
clc
dec
or
cmp
std
clc
outs
inc
cmc
push
loopne
cli
push
mov
out
sar
xor
aaa
test
shl
push
cld
(bad)
xor
mov
push
push
cwde
call
push
add
ds
dec
scas
sub
cmp
push
aad
test
retf
mov
jo
out
push
scas
loop
push
xchg
push
pusha
jb
mov
xor
inc
(bad)
stc
mov
inc
rol
arpl
pop
nop
in
ja
cmp
movs
cwde
mov
add
loope
jge
push
aad
test
add
int
adc
mov
inc
jae
push
fnstsw
push
imul
jmp
cmps
push
xchg
cmp
mov
scas
xchg
outs
pop
sub
or
rcr
int
xor
gs
lods
fist
xchg
mov
shr
cdq
add
push
test
imul
push
jns
sub
xor
into
not
cmp
scas
xchg
push
xchg
pop
mov
mov
pop
xor
inc
in
fnstenv
jl
sti
and
(bad)
fidivr
mov
daa
lods
out
cmp
pop
arpl
(bad)
mov
push
outs
int
call
cmp
jp
mov
mov
es
loop
push
js
inc
jnp
and
sbb
inc
xor
mov
aad
scas
sahf
jg
stc
loop
mov
xor
push
xor
test
ret
jl
outs
call
jne
inc
das
int
pusha
cmc
loop
rcl
jmp
lock
sbb
loop
xchg
dec
add
call
sbb
and
scas
rol
nop
mov
inc
pop
daa
into
fcomp
or
dec
sub
and
in
xchg
je
mov
stc
jle
jne
or
and
inc
scas
inc
pop
add
call
pop
sbb
rcl
jp
xchg
clc
bound
push
and
dec
pop
movs
cld
(bad)
cs
push
daa
out
das
and
jmp
add
inc
inc
fxch
adc
push
fwait
inc
xchg
xchg
push
add
scas
jecxz
ds
push
inc
push
arpl
jge
test
popf
pop
mov
sbb
test
sbb
cmp
ret
cmc
adc
in
push
xor
mov
sbb
in
or
out
je
(bad)
inc
int3
and
push
bound
push
add
and
fisub
ret
jmp
sahf
repnz
or
hlt
scas
jecxz
mov
out
cmp
inc
nop
iret
cmc
cmp
fucom
ja
comiss
xchg
scas
test
jno
xchg
out
mov
(bad)
or
mov
outs
pushf
jle
rcr
pop
mov
sahf
or
inc
out
adc
iret
popa
dec
(bad)
xchg
sbb
pop
pop
fidiv
jns
lock
mul
out
test
into
mov
movs
mov
enter
sbb
repz
or
inc
mov
mov
out
mov
enter
jecxz
dec
cmp
xchg
add
test
jmp
outs
test
pop
push
mov
jne
and
cli
sbb
add
sub
dec
call
sbb
pop
push
stos
icebp
adc
retf
es
cld
xor
xor
push
ins
adc
out
adc
mov
add
adc
ret
call
mov
outs
(bad)
pop
push
sbb
cmovl
adc
ror
xchg
xchg
and
mov
in
popa
pop
inc
gs
aad
push
aam
imul
sbb
cmps
add
(bad)
sub
mov
lea
sub
xor
mov
dec
sar
sti
mov
jo
iret
mov
push
or
loopne
inc
loopne
repnz
mov
dec
call
sbb
neg
push
pop
add
loope
mov
mov
jae
ficom
adc
push
mov
fsubr
mov
push
iret
fsub
jmp
sub
fwait
dec
scas
mov
push
(bad)
cld
(bad)
mov
fs
test
pop
push
xor
mov
scas
add
xchg
jmp
pop
outs
rcl
push
xor
aas
adc
hlt
lods
fxch
sbb
cwde
sbb
movs
scas
add
mov
sahf
xor
inc
inc
repnz
xchg
lods
push
cmp
jne
test
pop
sub
sub
or
or
bound
int
rcr
sbb
mov
iret
push
stc
and
int
pop
sbb
xchg
add
movs
xor
jo
leave
jg
mov
mov
test
sbb
popf
loop
adc
mov
dec
stos
out
in
xlat
sub
in
das
inc
jae
lea
sub
rcr
fistp
ror
fsub
xor
in
cld
cli
jmp
pop
push
fnstenv
cmps
out
adc
sub
jge
push
mov
clc
cmp
jmp
or
rol
inc
mov
repz
lahf
sbb
sbb
mov
push
cmp
mov
mov
inc
aas
lahf
(bad)
movs
mov
push
pop
sbb
pop
retf
(bad)
adc
xor
fidiv
adc
ins
mov
lea
arpl
neg
jnp
call
outs
jl
int
jo
lods
or
mov
mov
push
std
sub
pushf
shl
repnz
xchg
add
js
(bad)
call
push
sbb
scas
vmread
stc
pop
lahf
sub
popa
mov
sbb
and
rol
cli
test
repz
adc
pop
pop
xchg
jmp
dec
bound
cld
imul
cmp
jns
dec
inc
mov
and
(bad)
push
sub
hlt
push
adc
add
ret
scas
push
in
cs
cmp
xor
aad
(bad)
and
pop
sti
cld
mov
jmp
jo
dec
mov
mov
or
in
cmp
std
mov
fst
daa
das
retf
and
loope
cdq
cmc
or
add
scas
jp
(bad)
xchg
inc
cdq
mov
ins
adc
dec
retf
cmps
dec
jo
xchg
add
xchg
repnz
xchg
fld
push
sub
sub
mov
dec
pop
sbb
xor
int
sub
repnz
jmp
repnz
xchg
loope
loope
mov
mov
jo
lea
mov
lods
(bad)
sub
shr
xor
inc
les
dec
mov
lods
bound
adc
mov
lds
aad
dec
popa
jno
ret
(bad)
fwait
xor
data16
loope
sar
push
sbb
sub
rol
cmp
stos
in
push
cmp
xchg
retf
inc
mov
jg
sbb
pop
cmps
idiv
out
lods
jmp
arpl
dec
fbld
jnp
ds
xchg
scas
mov
(bad)
in
xlat
pop
pop
pop
(bad)
ficomp
enter
sbb
pop
in
popf
scas
and
repz
sub
out
jbe
std
xor
xchg
push
inc
aam
adc
ins
imul
xchg
push
test
push
push
shr
fadd
repnz
daa
mov
adc
scas
and
popw
cmps
sbb
call
adc
out
icebp
push
daa
jns
lea
mov
lods
mov
shl
jmp
(bad)
rcl
sub
push
and
je
shr
or
adc
mov
xchg
sub
push
cmp
cmps
xor
hlt
cmp
in
in
into
je
cdq
gs
jae
sbb
and
arpl
push
gs
inc
push
popf
loopne
push
imul
enter
adc
mov
stos
std
into
inc
int
ins
jae
jno
or
jbe
and
int
ret
mov
push
cmp
aad
rol
dec
or
jle
sub
repnz
je
(bad)
xchg
and
pop
xor
stos
mov
mov
mov
mov
scas
xor
clc
sbb
xor
pop
mov
sbb
sahf
push
lahf
(bad)
popf
jp
pop
inc
out
ins
mov
daa
int3
rol
jae
sub
push
retf
stos
mov
sar
(bad)
cmps
mov
dec
cli
adc
dec
inc
and
xchg
inc
scas
into
ret
jp
push
imul
sub
jmp
sub
mov
inc
push
push
fcmove
mov
(bad)
push
mov
ja
mov
jg
lods
lods
add
sar
pusha
cld
es
xchg
(bad)
stos
pop
das
repnz
iret
or
and
retf
pop
stc
fcompp
mov
(bad)
sub
pop
scas
cs
mov
cmc
popf
xor
adc
sti
and
in
fnstenv
(bad)
stc
push
xor
lods
pop
xor
mov
lock
sub
sbb
popf
and
mov
dec
xor
xor
sub
and
jmp
daa
call
popa
xchg
xchg
enter
cmc
sahf
movs
adc
mov
aas
test
xor
(bad)
jg
add
xor
aam
jns
lea
fisubr
ret
mov
or
call
dec
jbe
ret
arpl
pushf
push
cli
nop
popf
std
inc
dec
dec
sbb
(bad)
ins
inc
js
(bad)
je
ja
cmp
and
imul
inc
sub
cmps
fdecstp
mov
adc
xchg
xchg
popf
pop
shl
mov
sub
mov
adc
dec
xor
mov
xor
mov
jo
sub
mov
jns
or
sub
push
(bad)
jp
push
movs
inc
mov
and
dec
and
test
bound
dec
jg
dec
sub
test
arpl
add
mov
xchg
movs
xor
add
in
ja
lea
inc
pushf
lods
ins
add
(bad)
ss
ror
xchg
lds
dec
pop
imul
mov
adc
push
lahf
and
sub
loope
mov
sbb
call
repnz
mov
retf
cwde
jns
loopne
cmp
(bad)
nop
mov
shl
xchg
and
or
add
les
scas
mov
add
lahf
pushf
xchg
movs
push
pop
fadd
shl
(bad)
or
iret
xor
mov
imul
add
out
push
fs
or
les
call
popf
fs
sub
fisubr
pop
ss
mov
push
imul
sbb
clc
repnz
mov
iret
dec
int3
mov
or
movs
cmp
call
mov
inc
mov
rcl
int3
lahf
xchg
push
push
cmc
jmp
cmps
(bad)
fptan
dec
mov
xlat
(bad)
adc
push
mov
sub
sub
mov
sbb
add
inc
xchg
push
aad
mov
dec
xchg
call
jp
pop
pop
cwde
xor
adc
push
mov
dec
add
sub
xor
mov
pop
movs
sbb
adc
pusha
shl
(bad)
sbb
push
xor
cs
arpl
outs
jecxz
dec
and
xchg
js
mov
push
push
mov
or
loope
fisttp
das
int
mov
jmp
stos
pop
mov
jl
rcl
or
not
shl
pop
shr
mov
repnz
(bad)
cs
xchg
dec
mov
stos
push
pop
mov
scas
jnp
jle
push
push
mov
dec
mov
out
push
push
jne
pop
mov
out
adc
inc
ret
aad
jnp
add
and
and
lea
lea
add
sbb
sub
in
push
xchg
push
dec
pop
fsub
out
shl
int3
and
inc
and
jge
stos
jno
aas
retf
and
add
mov
add
ja
stc
outs
add
adc
and
sbb
adc
ins
xchg
imul
mov
adc
xchg
ins
cmp
sbb
mov
pop
pop
aaa
or
std
dec
jo
push
aam
jmp
sbb
adc
jne
and
pop
inc
int3
dec
mov
je
mov
inc
fadd
mov
(bad)
pushf
addr16
call
loop
cdq
push
xchg
movs
into
aad
and
and
mov
test
xchg
cdq
outs
test
ins
popf
xor
dec
loopne
loope
mov
adc
test
iret
inc
jmp
scas
add
xor
(bad)
outs
pop
movs
jmp
popa
mov
movs
in
fbld
adc
in
retf
into
lea
imul
jmp
sti
lods
jb
gs
mov
retf
fld
test
fwait
pop
jl
xchg
cmp
cmps
sub
sbb
int3
js
js
iret
and
dec
mov
dec
cs
jnp
out
pop
jp
xchg
push
out
mov
es
ss
ins
push
push
cmps
and
addr16
mov
sub
push
and
(bad)
test
mov
jbe
mov
pop
sbb
ja
cdq
mov
popa
mov
loope
(bad)
sub
adc
mov
mov
ins
lods
es
pop
adc
push
out
test
icebp
addr16
adc
cmps
mov
mov
sub
repz
aaa
push
inc
jno
aas
sbb
adc
and
les
lock
outs
inc
popa
pop
xchg
sbb
cmp
mov
mov
data16
jg
in
ret
outs
cmc
adc
ret
cs
imul
mov
ret
mov
movs
or
imul
adc
push
and
rol
pop
pop
mov
cdq
jmp
and
push
sahf
xor
push
add
push
imul
xor
cmc
call
add
mov
fcom
xchg
enter
inc
pop
cmp
ins
repz
inc
inc
iret
wrmsr
push
and
adc
dec
push
mov
(bad)
ja
pop
inc
mov
push
iret
fld
sub
xlat
fld
cmp
faddp
adc
jae
mov
add
mov
or
(bad)
fwait
push
sbb
xchg
sbb
mov
mov
ror
sbb
mov
mov
jnp
ins
pop
mov
inc
mov
adc
lock
(bad)
retf
mov
(bad)
scas
int
adc
mov
sub
adc
js
stos
mov
inc
xor
test
lods
icebp
retf
rcr
dec
push
pop
fiadd
cmps
retf
jg
(bad)
test
cs
int
dec
lods
pop
cmc
cdq
mov
pop
jnp
jp
cs
mov
mov
ror
pop
dec
sbb
call
test
mov
(bad)
popa
adc
adc
rcr
jle
sub
jp
push
mov
dec
aam
mov
cmp
push
pop
mul
pop
and
cmp
pushf
xor
ss
pop
mov
mov
cmp
or
xor
lods
cld
mov
mov
sub
pop
sbb
pop
mov
xchg
sbb
or
and
push
adc
cmp
xor
popf
repnz
dec
mov
mov
pop
xlat
xchg
jmp
xchg
xor
or
push
fucom
ffree
test
rol
dec
mov
cld
cmp
call
push
cmp
adc
add
and
mov
mov
jmp
pop
xchg
push
jne
pop
scas
out
xchg
mov
test
sahf
pop
ret
icebp
in
repz
(bad)
jmp
sbb
fisub
(bad)
(bad)
push
dec
jae
jmp
aad
clc
aam
or
sub
(bad)
push
popf
dec
push
(bad)
jmp
add
retf
push
loop
jp
and
pop
fst
outs
sbb
pop
push
outs
and
icebp
ja
(bad)
cmp
dec
fsub
add
pop
cmps
or
loope
mov
movs
loop
fst
jns
adc
xchg
bound
pop
movs
shl
repnz
in
aas
or
dec
mov
shl
adc
adc
sar
shr
loop
aad
cmp
xor
xchg
(bad)
inc
jbe
bound
xor
icebp
cmps
xlat
or
repz
ins
adc
push
push
push
push
mov
popf
jmp
das
fnop
aaa
xor
xchg
xchg
int
mov
data16
dec
and
shl
add
add
push
lahf
mov
push
scas
jbe
push
or
sbb
pop
aad
and
pop
add
xchg
lea
cmp
shr
adc
pop
sbb
inc
or
dec
stos
(bad)
cmps
jecxz
cwde
cmc
mov
into
hlt
inc
ret
dec
test
mov
add
push
repz
mov
idiv
inc
scas
and
mov
aaa
daa
and
ficom
mov
out
sbb
jo
xchg
cld
dec
nop
jbe
jmp
cs
(bad)
jb
add
cmps
pop
dec
call
sti
add
push
inc
cmp
icebp
add
repz
iret
mov
es
stc
pop
imul
cmp
or
rol
aaa
popa
sub
mov
and
imul
hlt
push
ret
or
test
adc
mov
inc
js
pop
mov
cmp
fidiv
shl
pop
movs
cmp
dec
adc
les
stos
js
aam
lds
push
jl
inc
cmovne
es
popf
mov
loopne
rcl
frstor
sub
mov
div
sub
push
addr16
inc
inc
pop
push
mov
mov
mov
cmps
inc
ss
add
out
lock
mov
je
retf
sbb
(bad)
arpl
scas
repz
imul
inc
aaa
pusha
pop
pushf
outs
dec
jmp
data16
out
ret
lock
jp
mov
push
adc
or
mov
mov
test
pop
xchg
lea
xchg
pop
cwde
out
mov
add
and
aas
mov
push
shl
sub
inc
xlat
fsub
lods
ficom
add
enter
adc
jecxz
lea
pop
inc
or
outs
pop
ret
push
jg
push
outs
jne
stc
jmp
sub
add
cmps
xchg
add
fsubrp
call
out
mov
movs
loopne
bound
cmc
outs
mov
leave
out
sar
mov
outs
imul
xor
jp
repz
xchg
js
(bad)
sahf
sar
pop
aaa
iret
in
add
push
jb
ins
iret
mov
mov
pop
or
arpl
inc
mov
jno
cmp
mov
lods
mov
dec
cld
pop
hlt
scas
repz
mov
cmp
aad
push
add
jbe
mov
mov
inc
in
ror
scas
xchg
push
mov
lea
xchg
jno
or
test
dec
jne
lahf
dec
fisttp
push
fmul
xchg
shr
aam
fdiv
mov
adc
fcmovnb
repnz
cmp
add
jno
jb
dec
and
shr
jno
and
adc
or
es
in
(bad)
cs
mov
pushf
mov
mov
xor
pop
iret
add
popa
sub
dec
xchg
(bad)
cli
popf
fs
jge
aas
test
popa
pop
push
jge
dec
cs
hlt
fldenv
inc
mov
popa
(bad)
neg
xchg
jecxz
sti
mov
int3
xlat
lds
sub
and
addr16
cdq
xor
mov
and
outs
shl
lahf
sbb
adc
jmp
mov
xor
(bad)
xor
out
push
sub
inc
sbb
neg
jg
adc
lahf
rcr
add
inc
jmp
xchg
lods
ret
nop
fsubr
outs
jmp
xor
cwde
mov
adc
adc
pop
lahf
jecxz
lods
ins
les
stc
(bad)
gs
sbb
mov
dec
pop
cmps
and
pop
adc
(bad)
loop
retf
cs
jp
mov
retf
ja
push
xchg
test
popa
retf
mov
or
enter
push
sub
mov
int
jo
(bad)
sbb
xchg
(bad)
int
jae
or
imul
in
(bad)
test
adc
sahf
gs
mov
js
cwde
add
push
push
push
imul
add
lock
xchg
stos
mov
ss
jb
clc
js
movs
pop
int3
cmc
cmps
movs
mov
test
in
clc
sub
sub
cmp
clc
pop
mov
ret
aas
test
and
pop
jmp
mov
shr
popf
nop
stos
pushf
sub
ror
mov
inc
sbb
xor
lea
mov
nop
mov
mov
add
sbb
jo
out
xchg
push
in
pop
sbb
movs
mov
add
cmp
cmps
fld
in
cmp
xchg
bswap
dec
int3
cs
pop
stos
hlt
pop
mov
cmps
push
aad
pop
loop
and
(bad)
mov
ins
jae
pushf
icebp
cmp
jle
jne
sub
pop
cmp
ja
dec
dec
push
adc
push
mov
pop
mov
jg
fnop
imul
int
mov
mov
clc
sbb
icebp
(bad)
hlt
or
xchg
adc
mov
add
fcom
in
es
xchg
std
nop
inc
gs
push
fidivr
fsubr
push
or
mov
push
sub
lea
(bad)
lods
daa
fmulp
leave
adc
test
cmp
rol
add
lea
movs
adc
push
sti
mov
xchg
arpl
sub
sbb
mov
(bad)
jmp
cmc
pop
inc
dec
iret
mov
popa
or
xchg
iret
add
repz
cmp
and
pop
push
dec
ds
movs
nop
and
ins
xchg
rcl
repz
mov
xchg
cmc
stos
jno
jae
fwait
(bad)
adc
jno
add
xor
cwde
fiadd
or
iret
jns
gs
sub
sbb
add
push
(bad)
sub
sti
push
pop
aaa
repz
in
repnz
inc
cli
int3
fnsave
or
sbb
(bad)
and
jecxz
sahf
popf
xor
scas
lds
xchg
clc
out
mov
nop
out
inc
pusha
call
push
cwde
and
lods
jmp
faddp
xchg
fimul
enter
jnp
add
call
call
test
les
ds
jae
arpl
mov
fsubr
out
mov
(bad)
js
jecxz
inc
mov
movs
push
xor
fmul
test
sar
push
ins
sbb
pop
jecxz
add
jb
xor
pushf
xor
into
fwait
and
jle
aaa
in
into
xor
pop
adc
xchg
lea
mov
rol
xchg
lock
gs
dec
ret
idiv
or
mov
scas
xchg
retf
in
cs
inc
rcr
pop
ja
xchg
inc
pop
imul
out
sbb
int
fld
movs
fsub
mov
(bad)
mov
data16
(bad)
gs
aas
int3
data16
inc
cs
inc
in
or
mov
outs
aam
inc
push
inc
aad
frstor
aad
push
mov
stos
lds
add
fwait
arpl
jmp
out
pop
outs
(bad)
fisubr
xchg
fild
push
fsub
cmp
cmp
sbb
xor
xor
inc
iret
and
jle
push
mov
mov
outs
cs
add
dec
xchg
mov
sahf
xor
add
mov
pop
bnd
fld
cmps
pushf
add
inc
aad
dec
(bad)
cmp
loop
mov
std
lahf
jbe
call
and
or
and
sub
fild
lock
(bad)
mov
in
adc
fld
mov
or
fild
imul
adc
xchg
add
or
mov
xor
shl
mov
mov
(bad)
push
pop
push
arpl
test
sahf
pop
addr16
jg
pushf
out
jl
cmp
(bad)
imul
dec
add
pop
sub
push
dec
enter
and
and
sbb
cmps
jbe
adc
sbb
sbb
retf
call
cwde
retf
sbb
cmp
out
push
fstp
jl
std
xor
add
popa
pop
mov
xchg
mov
stos
mov
ja
fld
push
std
pop
stc
sub
sahf
js
mov
sbb
or
jo
in
pop
dec
mov
mov
in
xchg
ja
test
and
mov
ror
push
dec
pop
(bad)
shl
pop
push
leave
lahf
loope
pop
stos
hlt
(bad)
xlat
hlt
mov
mov
int
cld
sub
push
icebp
(bad)
jl
addr16
mov
fcmovb
aam
add
int
add
ss
xchg
push
xchg
dec
xor
sub
out
fmul
pop
or
push
(bad)
mov
arpl
(bad)
test
adc
jb
mov
popa
ret
sar
repz
and
iret
xchg
mov
ror
pop
mov
addr16
test
inc
mov
pop
cmp
dec
add
outs
push
xor
dec
or
addr16
bound
xchg
bound
(bad)
mov
lock
mov
sbb
adc
mov
(bad)
test
adc
add
ror
rcl
adc
enter
test
mov
jg
jge
arpl
(bad)
ins
stc
cmp
and
xor
xor
dec
call
or
(bad)
mov
jae
in
outs
pop
sti
push
or
dec
jo
push
dec
or
inc
jecxz
add
test
xor
xor
clc
dec
xchg
push
int
lahf
sub
push
push
mov
mov
into
stos
iret
or
mov
ja
and
sbb
push
outs
icebp
fs
mov
fiadd
aaa
bound
mov
sbb
stc
push
and
cmps
or
dec
inc
push
nop
clc
xchg
ins
mov
scas
push
ins
jne
jecxz
or
xchg
lds
fcmovne
shl
int3
mov
call
jecxz
addr16
add
sub
adc
scas
mov
sbb
jae
in
jb
add
push
mov
retf
push
in
xor
arpl
mov
jo
add
pop
adc
mov
fs
fild
inc
cdq
or
mov
jmp
sti
ss
arpl
mov
lahf
mov
retf
add
ins
dec
pop
push
push
das
lds
xchg
xor
test
inc
cld
and
fimul
sub
es
ror
adc
xor
dec
inc
repz
push
test
fdivr
cmc
sub
int3
push
repnz
pop
xchg
(bad)
scas
xlat
mov
mov
mov
sahf
pusha
xchg
and
shl
dec
lock
jl
mov
cmps
pop
rcr
push
bnd
rol
es
lds
(bad)
cmp
sub
or
cmp
mov
aaa
ficom
jg
mov
fcom
pop
push
dec
sub
xchg
adc
es
sbb
outs
mov
mov
(bad)
cld
movs
xor
push
add
or
aam
push
mov
cmc
jmp
lds
outs
inc
jle
aaa
mov
mov
into
mov
mov
or
aam
mov
dec
pop
lods
aam
hlt
jecxz
sbb
(bad)
jmp
mov
inc
std
ins
(bad)
jecxz
cwde
push
cmp
pop
mov
cmp
es
cmp
inc
pop
call
push
data16
enter
push
aad
inc
pop
jg
xor
neg
aad
inc
outs
inc
out
adc
xchg
cmps
in
popf
scas
arpl
fst
push
in
mov
std
jg
cld
sub
jecxz
sahf
cmp
lods
enter
mov
xchg
inc
daa
and
stos
add
mov
lock
and
and
push
in
mov
outs
loopne
jg
addr16
cmp
scas
sbb
xchg
add
daa
(bad)
aaa
lds
es
cvtpi2ps
nop
mov
in
test
or
shr
ror
dec
(bad)
in
adc
daa
cld
adc
stc
and
(bad)
and
push
das
mov
mov
in
cmp
mov
mov
popf
mov
mov
sub
retf
mov
and
sub
pop
add
add
inc
sub
dec
or
mov
shl
xor
jecxz
popa
retf
pop
pop
cmps
or
rol
mov
mov
pushf
add
inc
inc
and
movs
and
dec
test
(bad)
sub
push
mov
loop
xchg
dec
data16
mov
or
aaa
mov
xor
mov
jbe
mov
movs
scas
add
or
neg
and
test
dec
xlat
outs
and
push
pop
loop
adc
mov
leave
(bad)
data16
and
add
and
leave
dec
xchg
push
sbb
sub
mov
inc
jp
pop
pop
out
xchg
cld
jne
add
mov
pop
fisubr
xchg
stos
dec
jbe
dec
push
push
mov
push
jl
scas
adc
aam
out
shl
pop
mov
xlat
out
mov
mov
bound
arpl
xchg
scas
push
outs
data16
or
std
stc
jg
out
outs
movs
outs
add
retf
cmc
jle
sbb
aam
out
mov
dec
xor
aas
xor
dec
mov
jae
ret
fisub
and
(bad)
add
iret
test
imul
pop
push
pop
arpl
sbb
outs
iret
adc
inc
mov
call
jmp
(bad)
test
adc
pop
data16
sti
inc
jne
xor
fistp
xor
fist
sbb
xchg
push
out
daa
adc
and
sub
mov
imul
scas
push
cld
jl
xor
ret
dec
retf
rol
je
adc
dec
pop
inc
jae
mov
fistp
sar
aaa
std
lods
bound
(bad)
mov
xor
inc
adc
mov
inc
mov
push
and
pop
and
sbb
xchg
mov
adc
jae
ret
dec
ficomp
push
mov
mov
iretw
sbb
imul
test
inc
shl
cwde
jl
call
xchg
call
les
or
jl
retf
test
call
icebp
popa
paddq
aam
jge
imul
and
cmc
push
sbb
mov
mov
mov
sub
repnz
sar
ret
call
xor
mov
push
jle
es
mov
loop
inc
or
out
ins
test
xchg
je
mov
mov
mov
scas
lock
loop
xchg
mov
jb
or
push
fcom
int
fistp
popa
psrlw
adc
int
jmp
call
add
xor
cmc
pop
daa
mov
mov
ins
push
jge
imul
leave
in
jno
xor
jge
out
sahf
stos
pusha
jge
adc
fist
call
cmps
cmp
fidiv
or
mov
mov
xor
jg
add
repz
ret
int
push
ds
xor
cmp
stos
push
movs
and
push
rol
loope
imul
ins
push
mov
dec
fcom
mov
and
xchg
xchg
and
mov
mov
pop
jno
and
sbb
out
or
fdiv
push
push
push
adc
xchg
in
add
adc
fisubr
rcr
sub
xlat
popf
imul
mov
push
cdq
xchg
add
(bad)
dec
adc
outs
push
mov
sbb
and
pop
jns
sub
xchg
arpl
pop
push
add
sbb
and
push
mov
fsubr
in
mov
outs
mov
inc
mov
mov
pop
mov
repnz
push
dec
jb
arpl
loop
xchg
test
or
jns
push
pop
call
mov
xor
jnp
icebp
(bad)
dec
ret
mov
mov
mov
sahf
jno
cmc
and
popf
sub
std
mov
mov
or
push
(bad)
call
imul
fwait
movs
stos
pop
pop
into
add
mov
xchg
sar
leave
push
mov
and
shl
push
push
pop
mov
pop
push
rcl
mov
mov
aaa
or
ja
jae
lahf
cmp
push
test
dec
loope
retf
inc
test
adc
mov
xchg
gs
jg
stc
lahf
fisttp
xor
cli
in
xchg
scas
loop
push
das
cmps
or
push
ja
pop
xchg
addr16
fcmovb
mov
rcl
ret
cmp
cmc
mov
jns
pop
cmps
xchg
fstp
scas
add
xor
outs
test
ret
mov
add
xor
lock
and
es
push
imul
repnz
xor
xchg
cmps
leave
clc
sub
lds
sbb
jl
cmp
push
test
cli
out
iret
push
popa
sub
aas
or
jae
mov
sbb
mov
sub
mov
cli
ins
inc
iret
int3
loop
mov
and
adc
dec
sub
cmp
mov
fs
adc
pop
test
movs
jecxz
adc
rcr
stos
shl
jno
sbb
lods
sbb
mov
(bad)
in
repz
es
cmp
mov
addr16
sub
call
mov
xchg
fiadd
push
xchg
pushf
jo
pusha
les
and
sub
stc
jmp
cmp
ins
clc
jg
push
add
in
jbe
not
cmp
loop
adc
je
pop
in
pop
and
jno
add
dec
fs
mov
sahf
pusha
scas
push
repz
cwde
push
inc
push
aam
test
in
mov
stos
loopne
jne
and
mov
call
(bad)
fisttp
fistp
fdivr
retf
test
in
inc
cs
clc
cwde
out
shl
dec
jbe
ror
inc
sub
mov
jp
dec
xchg
cld
cmp
adc
das
jae
adc
sbb
mov
xchg
sub
scas
popa
inc
cld
jmp
push
mov
jnp
mov
cld
out
jecxz
mov
rcr
push
imul
out
xchg
push
add
jbe
xlat
push
mov
add
jg
mov
stc
(bad)
or
pop
mov
xchg
arpl
pushw
jg
shl
fstp
rsqrtps
test
mov
popa
push
retw
out
dec
(bad)
mov
fs
jno
hlt
aam
push
mov
jmp
std
inc
xchg
sahf
out
jmp
mov
(bad)
lods
add
adc
sbb
test
jle
rol
lods
xlat
cs
sbb
popf
and
xchg
push
add
jp
shl
inc
mov
xchg
sti
mov
xor
mul
or
test
test
(bad)
faddp
fistp
sub
add
loopne
xor
and
or
push
(bad)
das
adc
sub
lahf
cmc
aad
js
cmps
adc
dec
and
xor
sub
xor
das
and
scas
jg
fcomi
jp
test
leave
pushf
(bad)
(bad)
fidivr
mov
mov
mov
adc
icebp
ins
(bad)
jl
inc
or
pusha
ds
in
mov
ret
pop
mov
pusha
fwait
or
data16
sbb
xor
dec
ror
mov
rcl
arpl
inc
aas
ds
jb
xchg
inc
adc
hlt
call
jnp
jmp
stc
xchg
loop
bound
mov
dec
xchg
cmp
mov
lock
(bad)
sub
(bad)
mov
retf
mov
push
inc
inc
inc
stos
enter
jg
lock
mov
(bad)
push
out
pop
add
inc
jg
std
call
pop
stos
inc
ffree
mov
(bad)
pop
mov
inc
xchg
dec
mov
shl
cmps
xor
cmp
mov
(bad)
mov
sub
mov
ja
js
aas
pop
jecxz
xor
sbb
out
inc
sbb
jmp
js
cmp
pop
bound
adc
in
jnp
dec
and
dec
adc
mov
movs
pusha
shl
or
or
and
mov
repz
dec
sub
mov
pushf
jmp
xor
xor
and
inc
mov
xor
sub
jns
mov
xchg
or
jp
fld
mov
lea
sub
out
mov
test
push
in
cmp
xchg
or
les
push
mov
xchg
adc
jb
dec
xchg
movs
mov
(bad)
enter
fist
or
cmps
ds
dec
ins
stos
cmc
in
movs
les
fild
xor
stc
jno
mov
xchg
push
mov
(bad)
xor
jno
movs
jns
and
sub
outs
xchg
mov
ins
ja
mov
jae
or
or
mov
xor
mov
pop
mov
test
gs
xor
inc
or
inc
aam
out
stos
stos
mov
retf
clc
call
lahf
imul
adc
sub
mov
sbb
sbb
scas
jno
jg
pusha
inc
retf
xchg
scas
in
arpl
(bad)
sahf
sbb
mov
ficom
cmp
mov
add
sub
mov
pop
std
dec
dec
fdivr
sub
jb
out
in
or
mov
lods
scas
pushf
mov
xchg
push
jecxz
out
pop
mov
gs
pop
adc
mov
into
ret
mov
(bad)
sbb
repz
in
ss
pop
push
xor
mov
pop
(bad)
push
call
shr
pop
aas
xchg
popf
(bad)
lahf
pop
add
lods
fmul
xchg
mul
test
sub
cs
add
mov
adc
aas
stc
repz
xchg
shl
cmc
add
xor
inc
je
leave
push
cmps
dec
fst
rcl
lods
lea
mov
stos
inc
xchg
cs
inc
jno
sti
aaa
or
mov
(bad)
push
sbb
(bad)
pop
or
xchg
imul
repz
imul
dec
sbb
iret
popa
in
fstp
fcmovnu
addr16
test
fbld
ror
inc
push
test
sahf
pop
gs
mov
mov
pop
mov
enter
imul
aad
fisttp
repnz
(bad)
add
call
dec
test
test
adc
mov
int
inc
adc
jno
sti
mov
loopne
daa
clc
jb
jl
in
pop
repnz
div
inc
mov
mov
xchg
mov
in
or
mov
and
add
jg
push
cmp
sbb
gs
mov
mov
(bad)
shl
pop
jg
sub
push
cmp
inc
sub
popa
or
cmc
int
cmps
jge
test
xchg
pop
adc
jb
pop
cmps
add
popf
jecxz
cmps
push
pop
aam
lea
bound
or
push
aas
pop
leave
pop
cld
push
xchg
imul
sub
(bad)
xchg
cs
push
out
mov
lds
inc
bound
cs
jmp
sbb
inc
jg
ja
and
aad
repnz
mov
dec
js
test
addr16
cmp
sub
jecxz
jp
or
pop
lahf
pop
mov
ja
sbb
adc
arpl
das
pop
into
inc
cmps
cmps
adc
push
(bad)
xchg
cdq
cmp
rcr
sub
test
sub
adc
xor
sbb
adc
or
jecxz
sar
stos
int3
xor
(bad)
cmp
loop
cmc
call
xor
into
inc
jp
pop
push
test
pusha
sub
(bad)
faddp
cdq
(bad)
lea
(bad)
xchg
lahf
and
ret
imul
movs
shl
cdq
mov
add
push
adc
retf
movs
mov
repnz
data16
not
mov
aas
sub
inc
retf
test
in
cs
pop
aas
adc
outs
mov
sti
inc
fldenv
jno
push
es
jl
mov
jecxz
cmp
imul
adc
aaa
movs
pop
jbe
mov
mov
js
cmp
cmp
in
fwait
mov
mov
cmc
push
or
mov
pop
cdq
xor
add
mov
mov
ss
dec
mov
not
add
sbb
cdq
cmc
add
or
call
cmp
sbb
sti
add
jge
stos
inc
dec
sbb
or
push
imul
mov
addr16
lea
mov
test
aad
ins
(bad)
mov
cmp
cmp
repz
(bad)
cwde
jno
cwde
dec
pop
cmp
adc
in
test
loopne
cmp
inc
or
jnp
fidiv
out
mov
push
icebp
or
jne
xor
xchg
fs
fcomp
int
test
retf
ins
adc
dec
adc
ins
popa
cmp
mov
pusha
neg
jmp
ss
dec
cmp
jne
mov
mov
aaa
dec
outs
rcl
inc
mov
je
std
popa
xchg
inc
and
loope
mov
or
adc
cmp
shl
pop
in
push
loop
sub
retf
mov
push
ror
pop
shl
adc
push
jmp
xor
and
push
in
pusha
hlt
cmp
lods
adc
nop
loope
xor
adc
inc
fild
cwde
pop
mov
or
inc
adc
adc
mov
push
push
ret
out
sbb
pop
push
outs
and
jmp
sub
fbld
adc
xor
mov
adc
daa
mov
pop
push
fistp
pop
mov
(bad)
mov
inc
mov
xchg
jmp
sub
sbb
lods
mov
loope
fst
js
jo
and
out
inc
call
inc
add
in
push
je
mul
or
inc
push
(bad)
fiadd
cmp
sti
das
or
mov
push
jbe
pop
xchg
inc
mov
xchg
fstp
icebp
inc
pop
shr
retf
jl
pushf
jmp
or
sbb
cmp
lods
imul
and
add
bound
(bad)
js
sub
call
shl
or
or
inc
push
scas
inc
adc
setae
pop
fwait
leave
inc
mov
call
daa
mov
loop
aaa
or
outs
ret
shl
lods
and
cmp
gs
ror
and
ins
pop
sti
mov
test
or
mov
cmc
out
sbb
lods
inc
mov
std
mov
leave
fs
mov
mov
or
push
cmc
retf
adc
inc
bound
sahf
and
mov
mov
out
pop
sub
jbe
fstp
pinsrw
mov
mov
cdq
adc
or
lds
arpl
pusha
js
adc
(bad)
cmp
sahf
pop
out
pop
cwde
in
and
test
xchg
wbinvd
mov
sbb
lods
leave
mov
retf
xlat
fdiv
and
inc
pop
pop
mov
fisubr
add
pop
psllq
mov
mov
inc
aas
push
ret
pop
sahf
cmc
hlt
aad
data16
test
scas
stos
retf
push
mov
dec
je
push
mov
mov
mov
and
inc
fnstcw
xchg
clc
in
cmc
data16
sub
clc
push
rol
mov
or
dec
jns
in
movs
xchg
mov
outs
(bad)
mov
mov
mov
lock
shr
cwde
add
pop
arpl
imul
ror
out
mov
addr16
add
sbb
mov
push
cld
(bad)
jae
loopne
hlt
pop
in
std
cli
jecxz
mov
pop
les
xchg
mov
imul
icebp
ins
ja
and
mov
hlt
xor
or
and
jl
(bad)
retf
movs
retf
sbb
push
adc
mov
ret
dec
lock
jle
addr16
add
(bad)
pop
aad
leave
pop
std
out
lea
mov
cmp
mov
pop
nop
pop
sbb
inc
das
(bad)
cli
fist
and
imul
imul
mov
out
pop
stos
aam
jle
xchg
add
out
pop
mov
jno
mov
mov
sub
stos
adc
hlt
test
jmp
cmps
xchg
retf
jecxz
(bad)
or
into
int3
add
lock
cmp
cmp
ins
out
rcl
js
stc
add
push
inc
mov
loopne
push
sub
xor
jae
jp
aas
(bad)
call
jbe
cmc
inc
mov
sbb
mov
mov
ficom
lea
lds
pushf
fwait
xchg
inc
(bad)
repnz
xor
xchg
pop
cmp
xchg
adc
cmp
xor
cld
popf
push
stos
repnz
add
dec
repnz
cmp
lods
fsub
loopne
mov
leave
adc
retw
lahf
cwde
jb
mov
adc
call
fnstsw
xor
inc
ss
faddp
(bad)
mov
dec
adc
jg
xlat
jae
dec
cld
pop
mov
in
xchg
adc
dec
push
repz
sahf
dec
aad
mov
adc
or
in
add
xchg
sti
adc
jle
bound
inc
mov
icebp
or
jmp
mov
ss
xor
jbe
sti
test
(bad)
stc
fidivr
mov
jno
in
sub
div
in
iret
icebp
scas
add
fst
mov
ss
adc
jns
lods
into
push
inc
fs
ret
push
mov
xor
sbb
(bad)
pop
mov
mov
push
and
out
xor
cmp
sub
hlt
es
add
xchg
or
and
(bad)
xchg
dec
mov
(bad)
mov
add
shr
clc
test
sub
inc
inc
push
or
cmps
inc
mov
cli
dec
jmp
cmps
or
bound
in
out
dec
add
sub
and
jg
mov
or
retf
aam
ffree
mov
adc
pop
in
movs
cwde
lock
xor
or
es
jge
xor
pop
or
mov
jg
jl
sub
mov
test
xchg
in
pop
ja
mov
int
push
out
jnp
jmp
pop
aam
sbb
out
in
int
adc
sbb
sbb
xor
shl
fsubr
inc
xor
cs
lahf
test
jno
sbb
std
adc
sbb
and
adc
jmp
sti
int
inc
int
fmul
mov
arpl
cld
in
call
dec
sbb
add
cmp
or
scas
in
xor
icebp
jns
popa
mov
(bad)
sub
stos
out
add
cmps
hlt
xchg
in
shl
jb
sahf
push
sub
fist
mov
mov
push
shr
mov
sbb
outs
and
or
in
sbb
pop
fimul
fwait
inc
popf
lds
ror
(bad)
push
mov
mov
loope
(bad)
out
mov
mov
fistp
adc
data16
leave
int
mov
and
mov
test
mov
inc
push
jns
ficomp
dec
mov
pop
repz
loope
add
or
rcl
paddusb
loop
imul
xchg
or
and
dec
mov
sbb
outs
popf
jge
out
dec
sbb
cmps
cmps
adc
shr
adc
push
push
push
mov
rcr
adc
add
test
xchg
xchg
push
xor
pop
cmps
lahf
cmp
daa
xor
cmp
push
je
dec
aas
adc
fldcw
sti
cmp
mov
sub
int
pop
pop
push
(bad)
pop
fwait
jg
xchg
inc
fld
push
xchg
rol
or
and
test
pop
mov
mov
movs
add
sti
and
sub
sub
mov
cwde
pop
inc
test
cmp
fldenv
mov
add
das
mov
ficom
add
push
rcl
xchg
pop
push
dec
ja
jecxz
mov
xor
cmp
cmp
jl
jg
cwde
ins
jns
lods
test
or
imul
cwde
dec
retf
mov
out
mov
dec
inc
xchg
iret
dec
dec
fistp
pop
(bad)
cmc
push
dec
mov
xor
mov
ins
or
cmp
or
out
pop
mov
or
call
les
mov
fdivr
sahf
int
cli
push
cmp
movs
stos
int
xchg
pop
ja
ja
mov
cmp
sub
cli
mov
pop
(bad)
cmp
add
and
or
cmp
adc
pop
and
push
mul
(bad)
out
addr16
fs
stos
lock
jae
and
xchg
cmps
push
out
cmp
mov
xchg
into
cli
movs
push
std
pop
aaa
pop
ficom
add
inc
cmp
cwde
push
sbb
mov
mov
fst
inc
mov
jae
pop
dec
mov
lock
call
dec
add
(bad)
xchg
rcl
inc
movs
pop
jp
bound
daa
mov
and
or
sub
adc
sub
pusha
lock
xchg
adc
add
dec
das
inc
dec
adc
sar
mov
inc
rcl
dec
bound
mov
inc
mov
mov
xchg
rol
test
mov
cli
sub
fistp
faddp
mov
cli
out
and
push
mov
test
xchg
and
sbb
push
imul
mul
popa
ror
outs
std
sahf
adc
jle
pop
mov
in
jl
mov
cmp
sti
gs
in
out
test
add
cli
aam
rcl
mov
push
jnp
ret
sub
cmp
sbb
push
hlt
mov
cmps
fild
xchg
mov
and
xchg
cmp
pop
mov
add
das
pop
lods
cmp
aad
das
xchg
rcr
shr
leave
sbb
(bad)
repz
repz
scas
out
out
lock
retf
popa
sahf
mov
ret
dec
jmp
mov
sbb
dec
dec
iret
retf
mov
inc
lock
add
sbb
jmp
xchg
bnd
mov
jnp
sub
mov
pop
pop
pop
(bad)
shl
fwait
jno
in
cmp
adc
and
dec
or
dec
stc
jnp
mov
aad
inc
test
pop
es
mov
inc
imul
(bad)
popf
ins
dec
xlat
pusha
and
add
sbb
pop
adc
(bad)
dec
cmp
sti
outs
or
mov
daa
dec
or
lahf
mov
into
dec
or
(bad)
popa
xor
gs
add
xchg
scas
sub
scas
xor
jmp
sbb
pop
stos
pop
lock
test
sbb
outs
shl
push
div
call
arpl
das
sbb
jae
sub
je
push
daa
out
ds
fild
(bad)
mov
adc
cmp
shl
add
jno
inc
iret
sahf
ja
or
adc
aad
xchg
js
or
stos
ds
std
cmps
nop
or
test
popa
arpl
int
inc
out
int
es
stos
pushf
cwde
jns
jb
lods
xor
fisub
ror
leave
or
cmp
sahf
jmp
pop
push
push
mov
xchg
mov
push
fs
sbb
stos
xchg
pop
xor
loope
or
movs
or
inc
cmc
repz
out
pop
in
mov
aad
sar
int3
das
mov
icebp
(bad)
repnz
pop
push
ins
ins
mov
sbb
jb
cmps
test
jl
jmp
inc
xchg
loopne
pushw
and
xchg
js
(bad)
in
fsub
or
jbe
fs
into
pop
stos
add
inc
aaa
cmp
imul
enter
dec
push
sub
xchg
pop
inc
ins
loopne
sub
into
sti
stc
call
xor
sbb
data16
mov
add
aam
movs
push
pop
out
mov
aad
fstp
push
ret
clc
pop
in
scas
jne
xchg
(bad)
jmp
ret
jmp
cmp
adc
pop
jo
mov
icebp
cmp
fstp
or
pop
push
ror
stos
pop
dec
mov
sti
cmp
mov
(bad)
jmp
js
gs
mov
aad
sbb
mov
cmp
add
jnp
(bad)
in
pop
nop
pop
sbb
imul
test
fidivr
and
outs
xchg
dec
rol
clc
jns
int3
xchg
adc
xchg
xchg
int3
cmp
aam
sub
ja
ins
jle
jle
ja
jp
mov
call
and
stos
test
mov
mov
test
cs
jae
mov
or
(bad)
inc
movs
inc
cli
xor
cdq
faddp
xchg
or
mov
mov
push
fiadd
jne
jge
cli
mov
mov
arpl
jg
enter
out
add
test
push
mov
add
mov
inc
pop
xchg
or
rol
aas
xor
and
hlt
pop
dec
jle
xchg
jl
mov
call
arpl
dec
shl
add
cli
pop
dec
adc
scas
jae
out
idiv
lods
loope
adc
jno
push
into
repnz
test
cwde
add
inc
stos
les
fsubr
push
lods
pop
nop
dec
das
jle
inc
jmp
and
pop
jmp
in
dec
push
fucomi
stos
xor
repnz
out
or
ret
add
or
mov
movs
dec
sbb
sbb
mov
push
pop
add
jno
sbb
retf
push
adc
fmul
jnp
cmp
js
ds
xchg
mov
pop
cmp
sbb
(bad)
sar
aaa
and
int
inc
pop
cmp
ja
inc
lds
fistp
les
add
mov
sub
call
and
push
stos
sbb
mov
mov
xor
jl
dec
push
sub
in
cmp
(bad)
jecxz
test
xchg
xor
movs
test
jns
movaps
daa
mov
sub
xor
mov
aam
cmp
or
mov
js
jmp
jecxz
inc
sub
loope
pop
jge
push
add
mov
and
and
mov
pop
push
fild
in
in
(bad)
fdiv
xor
jmp
or
add
push
mov
repz
adc
les
aam
inc
hlt
loopne
retf
jl
aas
movs
mov
nop
dec
mov
dec
jmp
jecxz
int3
sub
xchg
rol
sti
sub
inc
or
cmp
(bad)
push
mov
int
lods
xor
(bad)
cmps
add
sub
out
ins
push
jge
shl
sbb
pop
nop
jge
sbb
jecxz
pop
(bad)
fcomp
jmp
lock
push
loope
retf
jb
pushf
pop
les
rcr
js
inc
sti
jp
lods
jae
mul
push
xor
ror
mov
xchg
das
mov
cmp
cli
mov
xchg
rcr
or
js
push
out
das
sbb
or
repz
shl
dec
data16
and
or
int
js
jle
mov
rol
data16
aaa
(bad)
imul
inc
inc
jp
call
jle
xlat
xor
es
repnz
retf
(bad)
ins
mov
mov
pop
and
push
jmp
push
jno
and
dec
push
or
mov
shl
adc
(bad)
lods
and
test
add
lods
mov
xchg
mov
mov
jb
call
mov
(bad)
(bad)
ins
inc
(bad)
sbb
stos
iret
mov
jbe
nop
push
jnp
push
dec
outs
xchg
pop
ins
xchg
push
or
xor
rol
mov
add
jns
sbb
shl
push
stos
popf
pop
adc
or
dec
sub
fldenv
cdq
push
jnp
pop
push
fimul
xchg
ret
ret
(bad)
pop
push
mov
adc
add
pop
mov
inc
repz
push
xchg
cmp
les
sub
ins
mov
and
pop
push
sbb
or
test
gs
mov
sub
sbb
pop
lea
sar
or
jmpw
or
shr
mov
dec
pop
test
daa
xchg
dec
aas
mov
push
cdq
dec
sti
jb
aas
loop
xchg
test
cwde
push
movs
mov
sar
inc
push
pop
retf
xor
ret
shl
adc
mov
xlat
pop
test
jmp
adc
pop
movs
imul
sub
jl
jg
movs
sbb
outs
cli
jle
jno
inc
shl
xor
addr16
fs
xchg
and
pop
xchg
pop
sbb
je
div
or
or
sbb
and
rcr
pop
je
inc
ror
call
fdivr
fdivr
adc
adc
mov
test
shl
loop
jmp
les
push
out
out
inc
das
stos
js
mov
in
cmp
inc
lods
add
push
sbb
inc
pushf
sbb
dec
adc
adc
iret
cmp
in
das
cmp
adc
pop
push
dec
outs
pop
sahf
dec
mov
(bad)
ja
stos
pop
xor
mov
in
out
loop
test
mov
dec
xor
cli
popf
add
daa
dec
mov
pop
dec
dec
fcom
cmp
jg
lds
mov
ficomp
cmp
xor
dec
jmp
sbb
cmp
xchg
push
jmp
dec
adc
and
jo
push
pop
ins
or
xor
jecxz
lods
loopne
add
pop
push
test
fist
ins
fstp
rcl
xor
fiadd
stc
addr16
cmc
pop
and
out
or
mov
inc
sbb
sbb
imul
push
cwde
cli
rcl
mov
jmp
ror
repnz
in
ja
and
js
mov
add
dec
sbb
pop
mov
shl
jg
xchg
cwde
retf
sti
rol
adc
addr16
(bad)
gs
xor
or
(bad)
jbe
mov
jp
add
or
mov
dec
xchg
dec
pop
pop
sub
ret
mov
lahf
ror
(bad)
and
inc
or
mov
lods
mov
popf
jb
pop
cwde
loop
(bad)
cwde
movs
stos
into
inc
xor
sub
imul
mov
iret
scas
and
add
movs
pop
or
mov
loopne
loope
inc
clc
cmps
sbb
into
jle
pop
sbb
add
scas
inc
adc
push
aad
pop
jnp
jns
pop
jb
ja
mov
sbb
xor
add
xor
rol
pop
xor
dec
bound
fild
fwait
pop
add
scas
iret
hlt
ja
stos
xchg
daa
into
xor
add
out
outs
mov
sbb
sbb
mov
inc
pop
sub
(bad)
pop
jo
popf
xor
ret
jge
ror
aam
loope
xor
push
lods
mov
mov
sub
repz
add
pop
stc
cmc
push
sbb
jnp
mov
das
inc
lods
(bad)
out
fist
popa
push
xchg
sub
cmps
dec
mov
inc
xchg
mov
imul
test
pusha
popf
inc
out
push
outs
inc
dec
test
cli
add
ret
inc
iret
(bad)
leave
leave
(bad)
fwait
pop
popa
scas
push
scas
dec
add
xor
adc
lahf
or
jb
push
imul
cmp
mov
push
mov
or
(bad)
jge
int3
cmp
in
dec
sbb
into
push
js
data16
lock
je
dec
ja
dec
pop
addr16
mov
aam
push
mov
mov
push
mov
pop
jo
xchg
pop
dec
sbb
and
in
xor
jo
(bad)
jbe
push
scas
mov
pop
in
or
gs
sti
sub
cmps
and
dec
mov
dec
add
mov
inc
mov
sbb
test
sub
loopne
add
out
xor
and
xchg
and
dec
loope
jnp
fucomp
ficom
repz
out
mov
cmc
in
and
dec
dec
ret
adc
cmc
pop
aaa
(bad)
(bad)
iret
fld
adc
xchg
iret
(bad)
js
or
add
sub
stc
push
pop
(bad)
jge
sub
push
sbb
cs
or
sbb
popa
cmps
or
cdq
daa
inc
out
test
jns
dec
xor
movs
or
cmc
in
jae
push
scas
xchg
jl
push
adc
stos
lods
cmp
sbb
jnp
pop
jne
mov
mov
or
call
pop
xor
retf
inc
fistp
mov
xchg
scas
add
aad
xchg
xor
int3
xchg
pop
test
ins
dec
adc
adc
dec
les
add
inc
push
(bad)
pop
in
adc
inc
inc
jle
sbb
push
pop
les
test
dec
jecxz
je
push
xchg
retf
mov
in
sub
std
xchg
arpl
add
adc
ss
mov
inc
aas
add
add
sbb
and
mov
inc
fdivr
xor
xchg
jne
in
lahf
inc
sbb
jge
ss
test
mov
inc
sbb
dec
mov
movs
jno
mov
mov
and
cmp
sbb
lds
rol
(bad)
pop
cwde
push
in
and
cmp
mov
in
es
test
xchg
xor
jns
jne
xchg
fidivr
or
mov
loopne
push
pusha
xchg
pop
clc
jno
cmp
push
lahf
ds
pop
cwde
mov
pop
cmp
pushf
and
pop
mov
sbb
pop
push
jmp
add
jo
retfw
inc
cs
inc
cmp
lods
sahf
sub
or
and
jns
sub
sahf
mov
retf
(bad)
int
mov
adc
cmp
jecxz
loope
aad
repz
and
jae
jecxz
push
retf
cmp
(bad)
sub
cmps
mov
(bad)
sbb
ins
pop
inc
movs
add
mov
and
sub
sub
mov
daa
jne
shr
imul
lea
sbb
aaa
js
daa
xchg
inc
jmp
outs
jnp
(bad)
xor
outs
div
cwde
jbe
movs
mov
cmp
loopne
xor
mov
(bad)
ja
mov
retf
test
loop
adc
mov
(bad)
in
fild
pushf
pop
add
cmp
lods
dec
add
stos
je
imul
inc
dec
dec
addr16
cwde
sbb
dec
call
popa
or
push
clc
and
mov
and
popf
das
and
mov
sub
cs
xchg
lods
imul
mov
jne
into
sti
lods
jmp
jmp
mov
or
push
jnp
(bad)
inc
jl
cld
fcom
int3
or
or
mov
add
or
cmp
jnp
mov
inc
sbb
ins
sub
dec
test
push
nop
mov
mov
sbb
ret
fsub
aam
stos
xor
push
add
std
or
test
xchg
jae
stos
pop
(bad)
out
shl
sbb
ins
mov
cmp
sub
int3
add
pop
ins
adc
jne
cmp
ret
je
mov
into
xchg
lahf
add
and
add
mov
sub
fwait
dec
push
call
dec
jb
iret
mov
pop
popf
ins
inc
cwde
xor
sti
idiv
sar
(bad)
and
push
or
push
loope
jnp
fld
xor
loope
mov
into
outs
jb
pop
push
and
shr
inc
ins
pushf
adc
cli
ins
cld
pop
xor
icebp
lods
movs
mov
cmp
sbb
dec
popf
cmps
inc
test
scas
jb
in
out
sub
and
jmp
and
mov
cmp
push
xor
pop
sti
ins
mov
inc
neg
push
pushf
jne
ss
lods
inc
inc
cmp
lock
frstor
xor
sahf
sbb
cmp
std
fwait
adc
sub
dec
cld
and
inc
adc
xor
ja
cdq
lock
pop
iret
lds
push
cmp
sbb
rcr
cmp
(bad)
inc
sbb
out
inc
mov
fild
mov
stos
mov
mov
mov
sti
out
xor
and
loopne
div
scas
retf
cmp
movs
sahf
cmps
pop
sbb
mov
inc
jno
mov
sbb
test
repz
ror
cmp
pop
xor
(bad)
xlat
push
add
xor
push
(bad)
jge
inc
fstp
mov
add
and
addr16
cmc
xchg
rcl
xchg
loop
aas
mov
pop
movs
scas
loopne
popa
inc
xor
retf
and
cmp
or
fs
repz
sub
adc
loopne
call
or
out
cmps
sar
scas
scas
rcr
into
push
(bad)
in
jnp
ficom
mov
pop
call
call
into
xor
pop
fld1
xor
and
loopne
call
loopne
aad
aad
sbb
add
dec
mov
jmp
out
adc
cmp
out
cdq
push
pushf
mov
int3
inc
push
ja
dec
gs
xchg
stos
or
jge
jb
(bad)
bsr
call
stos
jne
sbb
(bad)
xchg
or
dec
dec
xor
es
jle
or
retf
mov
xchg
popf
stos
dec
pop
or
sbb
test
mov
js
adc
(bad)
pusha
mov
mov
das
jmp
gs
sbb
imul
das
cli
jbe
push
jo
les
sar
or
mov
push
add
pop
call
ds
mov
pop
cmp
cmp
push
jle
stos
mov
sbb
and
inc
leave
call
mov
imul
fst
fadd
cdq
lods
pop
icebp
xchg
loopne
test
(bad)
fnstsw
xor
(bad)
loopne
les
rcl
stos
es
push
xlat
adc
xor
pop
test
xchg
add
mov
bound
pop
or
arpl
xor
or
xor
mov
stos
dec
es
shl
inc
pop
jle
add
popa
out
and
push
ins
cmp
ss
xor
or
lock
mov
mov
push
fdiv
(bad)
mov
out
(bad)
cmp
xchg
sbb
xchg
xor
cli
(bad)
test
(bad)
cld
mov
lods
rep
icebp
cmp
jmp
cmp
bound
or
adc
push
ret
mov
aaa
mov
sahf
xchg
jne
cmp
ror
or
push
and
or
add
lods
mul
jnp
mov
in
clc
cmps
or
and
push
enter
push
mov
push
mov
daa
dec
int
push
xor
sbb
lods
xchg
nop
mov
aas
pop
ficom
pop
lea
and
mov
imul
or
mov
or
clc
pop
(bad)
jbe
dec
jmp
and
fdivrp
or
call
mov
faddp
mov
daa
sub
dec
test
mov
rol
neg
and
dec
loope
dec
cs
dec
outs
add
jo
rcl
mov
je
out
gs
push
(bad)
adc
jno
clc
push
xchg
ss
inc
ficom
stos
shl
(bad)
in
imul
int
repnz
adc
inc
mov
out
cld
adc
shr
leave
xor
pop
in
fcom
adc
int3
inc
pop
cld
fadd
cmp
adc
sbb
nop
xchg
mov
dec
cmp
in
arpl
xor
inc
xor
sub
jge
int3
add
adc
sbb
retf
push
mov
add
outs
or
out
add
sub
inc
call
dec
int3
adc
or
std
add
(bad)
(bad)
popa
retf
dec
push
pop
sbb
in
scas
xchg
push
es
mov
ins
outs
or
out
mov
inc
mov
pop
jnp
mov
mov
mov
pop
jge
fdivr
shl
pop
add
hlt
popa
inc
sbb
add
fisttp
sub
in
data16
call
sbb
add
movs
xchg
inc
popf
test
sahf
movs
bnd
xor
lock
stos
fs
mov
scas
xchg
mov
fisubr
mov
mov
pop
clc
or
retf
cmp
and
das
cmp
loope
mov
xchg
sbb
adc
pop
or
lds
inc
mov
and
imul
sbb
pop
in
sbb
popf
shl
cmp
sbb
mov
lds
cwde
leave
(bad)
push
dec
popf
adc
(bad)
out
xchg
xor
pop
mov
bound
movs
mov
fdiv
mov
nop
push
sahf
iret
int
pop
adc
cmp
adc
repnz
repnz
cli
adc
into
imul
add
dec
ss
inc
inc
sub
pop
cmp
inc
lods
popf
loopne
inc
add
cmp
imul
test
push
dec
sub
jge
mov
pop
leave
cmp
stc
and
stc
popf
mov
mov
push
(bad)
sbb
stos
push
mov
stos
xchg
sar
fwait
add
fcmovnu
outs
xchg
into
sti
push
mov
push
push
inc
repnz
jnp
and
(bad)
jmp
cmps
dec
sbb
jl
in
xchg
dec
ss
mov
mov
stos
jmp
nop
int3
mov
int
mov
rcr
inc
pop
mov
or
lahf
dec
shl
ja
out
enter
sub
and
xor
les
xlat
xchg
fisttp
mov
in
cmp
xor
xor
pop
jp
pop
pop
cmp
xchg
jbe
inc
(bad)
adc
jnp
dec
int
test
adc
adc
(bad)
repnz
idiv
adc
adc
pop
(bad)
daa
or
cmp
xchg
enter
outs
popf
mov
pop
test
iret
std
xchg
neg
and
das
(bad)
in
aaa
gs
push
xlat
loop
stos
sbb
mov
pop
fist
(bad)
test
(bad)
jge
js
int3
repz
adc
gs
dec
pop
int
call
daa
pop
pusha
dec
push
ret
xor
sbb
jnp
das
xchg
fmul
add
packssdw
dec
test
ja
adc
out
adc
jnp
push
mov
dec
jo
sti
cmc
or
add
mov
cmp
call
movs
dec
xchg
jp
fwait
jge
dec
dec
(bad)
add
jp
mov
mov
outs
xchg
mul
jmp
hlt
sar
loope
jmp
sar
clc
leave
outs
pop
jge
jecxz
in
lds
sti
psllq
jnp
jg
(bad)
cmp
xchg
and
mov
outs
lahf
hlt
sbb
(bad)
mov
fst
dec
lea
xchg
scas
outs
mov
dec
xchg
adc
shl
adc
mov
sub
mov
out
lock
out
pop
imul
int3
cmp
mov
mov
jle
and
push
sub
or
ret
cmp
mov
pop
mov
sub
les
cmp
jecxz
dec
and
add
mov
sub
sahf
imul
dec
scas
dec
xlat
(bad)
(bad)
jl
sub
fld
dec
pusha
and
bound
xchg
cmps
lods
inc
jecxz
sbb
jnp
and
(bad)
pop
dec
arpl
sbb
psllq
ret
js
loope
inc
imul
sub
xor
sub
add
push
xchg
(bad)
stos
inc
xor
inc
jo
mov
jae
or
cmps
adc
scas
out
adc
scas
mov
sbb
push
into
loop
sub
movs
xchg
cmp
mov
int
jmp
imul
in
inc
xor
aam
sub
xchg
(bad)
push
jns
cmps
pop
push
dec
adc
or
xchg
arpl
movs
jbe
iret
aaa
sub
and
add
fisttp
jns
cmp
pop
and
jno
movs
adc
jnp
retf
ss
outs
pop
sub
jbe
sbb
mov
pop
adc
fild
dec
mov
fdiv
div
aaa
jg
icebp
(bad)
(bad)
fmul
sub
pop
xor
dec
sub
shl
adc
xchg
jp
sub
lods
xchg
out
fidivr
inc
jb
movs
add
fisub
aaa
or
clc
sti
push
mov
xchg
jb
imul
xchg
imul
jns
push
ins
mov
shr
inc
scas
cmc
sbb
and
pop
cld
scas
les
ins
in
mov
dec
pop
or
mov
pop
mov
mov
sub
adc
fidiv
jne
xor
and
fdiv
repz
adc
push
add
push
leave
fimul
lods
inc
iret
sbb
test
xor
and
test
repz
fisub
inc
in
cli
and
repz
ror
out
push
pushf
adc
cmc
out
cmp
mov
xchg
call
push
popf
sub
imul
rcl
xchg
stc
pop
int3
jl
push
adc
mov
mov
xor
sbb
sbb
sbb
mov
fst
das
cmp
push
ret
sub
pop
dec
mov
(bad)
mov
shl
or
fs
movs
push
icebp
pop
in
sbb
adc
sbb
jmp
cmps
jae
cmps
ret
adc
outs
(bad)
or
jbe
pop
arpl
aad
js
sub
sbb
test
das
(bad)
sbb
sbb
cld
pop
mov
inc
(bad)
lock
or
scas
xchg
pushf
std
xchg
sbb
mov
outs
mov
lahf
mov
ficom
add
ret
in
pop
rcl
jo
cli
jle
mov
mov
je
js
pop
and
xchg
mov
rcr
mov
aam
(bad)
pushf
push
and
inc
push
daa
or
sbb
pop
inc
adc
scas
je
jle
jge
push
aaa
sbb
ds
shr
cs
jl
cmp
rol
fs
ins
mov
fdivp
or
jb
call
pmovmskb
lahf
(bad)
in
mov
sbb
jp
cmp
(bad)
outs
push
sbb
cmp
aas
sub
xchg
mov
data16
sub
pop
cmp
int
mov
add
xor
pusha
cmp
call
cli
xor
pop
add
push
push
ins
and
addr16
in
in
mov
jl
jmp
call
and
xor
(bad)
test
lahf
xchg
inc
outs
clc
jmp
dec
movs
cmps
inc
dec
pop
rcr
retf
std
test
mov
xchg
test
jb
or
pop
push
add
inc
fnstcw
sbb
dec
fcmovu
or
pop
add
adc
mov
movs
inc
sbb
dec
out
adc
icebp
jbe
dec
repz
add
sub
cmp
pop
adc
sub
lahf
pop
pop
push
mov
sub
mov
(bad)
sub
jae
push
mov
inc
into
cmc
movs
mov
xchg
and
int
ret
(bad)
iret
jle
inc
pop
out
jno
in
push
js
rcr
mov
cmps
mov
in
test
std
mov
neg
xor
pop
pop
aam
xchg
xor
jne
iret
movs
xchg
movs
aam
mov
mov
adc
pushf
or
push
popf
sbb
mov
cmp
jg
out
and
xchg
dec
inc
pop
ds
ror
lock
pop
ffreep
test
xor
jns
inc
lods
fcom
cmps
(bad)
int
mov
push
call
inc
xchg
shl
pop
dec
loop
add
scas
mov
mov
ss
inc
dec
jp
ds
icebp
retf
inc
popf
or
pushf
stc
arpl
push
test
xchg
das
cmp
retf
das
pop
int3
sbb
cmp
mov
xor
retf
adc
sbb
dec
sbb
cmp
adc
movs
and
adc
mov
dec
cmp
repnz
adc
fwait
add
add
sbb
rcr
jmp
adc
daa
ror
add
or
add
mov
adc
int
mov
cmp
shr
add
xchg
rol
mov
sub
jmp
xlat
stos
enter
mov
int3
xor
jbe
test
or
aas
inc
pop
or
sbb
fsubr
in
scas
dec
mov
cmc
mov
clc
or
je
repz
mul
sbb
popf
test
mov
int3
inc
jmp
bnd
mov
sbb
push
fldenv
test
dec
and
jns
pop
sub
pop
icebp
test
sub
scas
popa
aaa
movs
pushf
imul
sub
mov
jbe
scas
cs
lods
ret
jb
push
sub
mov
popa
mov
pop
in
out
dec
push
cmps
mov
add
mov
cmp
mov
cmps
sbb
sub
sbb
cmp
inc
loop
cmp
in
pop
loopne
sbb
test
ds
jg
jmp
jo
add
sti
pop
stos
and
adc
iret
mov
or
push
pop
into
(bad)
sub
enter
js
out
ret
mov
and
out
mov
dec
pop
sub
push
stc
xchg
cmp
sti
cmps
in
je
call
push
pop
test
cmp
pop
cmp
out
adc
shl
mov
adc
cmp
add
sub
jns
out
and
popa
cs
push
cmp
mov
lahf
and
fld
push
or
call
adc
loopne
sahf
ficomp
pop
nop
pop
sub
call
mov
aam
fmul
pmulhw
pop
adc
aad
jne
pop
hlt
div
mov
cmps
xor
pop
(bad)
add
fbstp
or
ret
fnstsw
in
mov
jle
repnz
in
xor
stos
shl
jno
int3
sbb
push
jge
retf
shr
das
mov
cld
mov
mov
mov
mov
rcr
(bad)
jl
cwde
jmp
in
retf
not
push
nop
aad
cmp
inc
sti
cmps
sub
aam
jge
jmp
hlt
or
cmps
mov
lods
std
xchg
(bad)
xchg
out
iret
test
cmp
adc
arpl
pop
inc
push
and
hlt
aam
or
loope
out
add
pusha
ror
(bad)
xor
outs
inc
movs
ret
xchg
xor
sahf
push
out
stos
stos
jmp
or
cmp
add
mov
in
jle
call
out
mov
inc
ret
fstp
lahf
dec
imul
repnz
inc
les
dec
jo
adc
fwait
(bad)
push
add
push
in
repz
xor
test
scas
mov
popa
pop
jns
test
or
or
sbb
add
pop
enter
or
std
dec
rcl
adc
sub
xchg
dec
leave
and
push
in
push
sbb
sbb
fs
cmp
les
stos
pop
and
sub
jnp
aam
or
imul
icebp
scas
out
mov
mov
(bad)
fldenv
adc
inc
lock
push
rol
rol
fst
lds
fwait
or
cwde
das
xchg
mov
add
in
arpl
loop
icebp
pop
jmp
int3
or
outs
mov
imul
mov
popf
in
lgs
jg
add
retf
add
cmp
loope
scas
ja
cmps
cdq
inc
nop
adc
add
add
je
into
jno
and
test
sub
dec
adc
jg
rol
push
push
sub
popa
xor
outs
or
ds
daa
xlat
inc
pusha
and
cwde
in
cmps
imul
cmp
adc
jae
test
jbe
nop
je
xchg
inc
(bad)
sbb
inc
adc
mov
jge
and
add
xlat
sbb
out
fisub
pop
or
pop
push
push
ret
(bad)
mov
out
enter
scas
xchg
mov
mov
iret
push
test
mov
mov
xchg
push
inc
out
inc
jno
dec
les
push
inc
xor
xor
in
and
in
mov
je
jno
push
inc
xor
jp
ja
ret
or
fbld
mov
mov
(bad)
leave
add
rcr
mov
icebp
ins
inc
aad
push
xchg
push
inc
and
dec
sbb
inc
retw
and
test
retf
push
iret
cmp
sar
adc
add
xor
(bad)
sub
aaa
repz
repnz
stos
imul
ret
mov
je
ror
outs
cmps
loop
cmps
cwde
cs
jae
aas
xlat
aam
in
mov
cmp
adc
retf
dec
xchg
inc
pop
jl
add
inc
movs
je
in
lods
retf
xor
and
push
inc
add
sbb
sbb
mov
jnp
or
ret
pop
imul
mov
mov
out
sahf
and
scas
push
push
(bad)
sbb
xchg
jb
push
dec
pop
hlt
mov
cmp
(bad)
push
fdiv
xchg
cmp
mov
std
push
test
mov
cmp
inc
dec
pop
jo
push
outs
xor
lods
mov
out
lods
stc
jbe
das
pushf
mov
outs
or
ja
mov
pop
and
arpl
or
pop
into
outs
lock
push
xchg
std
and
mov
lahf
jb
adc
pop
cdq
and
jmp
push
jmp
outs
call
es
push
cmp
div
ja
cmc
or
movs
mov
into
retf
mov
xchg
jbe
sti
push
pusha
in
inc
add
es
fidiv
push
mov
icebp
xor
jno
sub
push
jnp
add
jl
push
(bad)
jl
add
push
xor
cmp
push
sbb
jno
inc
or
js
lahf
fnstenv
int3
jno
add
stos
out
cmp
inc
cmp
aam
or
fdiv
and
in
dec
and
aam
xchg
cs
adc
add
adc
and
mov
lahf
js
lods
jno
cmc
mov
jg
xor
int
sub
xchg
fwait
xor
enter
cwde
xchg
js
jle
jnp
mov
mov
push
or
pusha
sbb
mov
xchg
dec
pop
repnz
rcr
jecxz
ret
test
(bad)
lahf
mov
or
jns
stos
out
cmps
clc
push
mov
add
(bad)
jl
sub
lahf
loope
ins
scas
adc
mov
and
xor
stos
idiv
push
std
or
push
inc
jmp
mov
out
inc
inc
add
xchg
loope
xor
jg
inc
int3
(bad)
jle
sbb
inc
pop
mov
test
gs
push
in
sub
pop
movs
int
xchg
mov
pop
and
cmp
pop
cli
and
xor
add
js
sub
mov
fdivrp
xchg
dec
add
call
dec
hlt
lods
xor
push
repnz
je
push
pusha
mov
xchg
dec
fwait
jne
sbb
sbb
clc
in
fsub
push
mov
mov
jle
clc
mov
data16
mov
(bad)
das
fmul
push
jmp
jns
jl
dec
gs
mov
ins
je
sub
and
popf
jmp
call
stc
pop
out
fisubr
(bad)
fild
fs
mov
mov
out
or
dec
imul
mov
xor
xchg
mov
dec
in
mov
jns
adc
out
imul
push
loopne
cmp
jmp
push
xor
and
mov
mov
(bad)
mov
xor
jl
stc
in
js
daa
repz
out
fist
aam
dec
imul
sar
scas
pop
clc
dec
push
int
lea
push
icebp
cmc
imul
es
sar
mov
dec
inc
jge
(bad)
cli
lods
or
jns
mov
mov
cmp
add
out
and
xor
sbb
mov
(bad)
dec
js
cwde
xchg
xor
xor
call
lods
scas
fld
push
sbb
je
pusha
add
mov
jae
rol
out
lea
ret
or
xor
iret
push
mov
js
pop
cmp
sti
pop
mov
cmp
sub
out
lods
(bad)
fiadd
lods
dec
dec
rol
iret
es
imul
in
pop
dec
or
cmp
sub
mov
cwde
shl
push
leave
lds
lock
push
xchg
xor
lods
lock
loop
push
cmc
cld
retf
xchg
(bad)
out
retf
movs
(bad)
lods
or
xor
inc
dec
xchg
lods
mov
ins
mov
inc
jmp
addr16
out
push
mov
je
jge
gs
loope
mov
not
mov
repz
and
inc
xchg
push
jae
jne
out
mov
leave
(bad)
mov
std
icebp
ja
jae
or
jle
shl
aam
retf
or
test
adc
mov
repz
mov
sbb
mov
mov
sub
pop
aam
cmc
mov
retf
mov
jae
(bad)
test
les
inc
in
mov
int3
fs
dec
pop
shl
xchg
fwait
xchg
jae
repz
xchg
cmp
xchg
in
xor
imul
mov
sti
xor
add
push
retw
jnp
cmp
adc
push
add
sub
mov
aad
mov
cmp
fadd
add
retf
or
rcl
and
popa
std
xor
ret
pop
scas
imul
adc
inc
repnz
add
xchg
int
imul
ficom
fld
hlt
fistp
sub
sti
das
out
pop
push
rol
jp
jnp
aam
addr16
mov
lods
add
mov
in
je
dec
cmp
sbb
dec
lea
(bad)
push
push
sbb
mov
aam
daa
inc
push
dec
push
loopne
add
call
xchg
xor
call
out
shr
mov
loope
pop
dec
cmc
pop
in
arpl
repz
push
pop
loope
and
fwait
leave
fild
mov
fcomp
push
ficom
or
out
inc
mov
mov
pop
push
fsub
cmp
aad
mov
retf
pop
aaa
jg
hlt
mov
cdq
xchg
test
mov
retf
dec
mov
jb
jbe
loopne
inc
xchg
mov
jg
jnp
data16
add
loop
dec
repz
xlat
mov
ds
mov
das
mov
or
dec
leave
mov
fsqrt
adc
(bad)
clc
cmp
inc
mov
pop
or
inc
push
das
pusha
mov
mov
sbb
sub
sub
jno
mov
and
test
or
fst
mov
arpl
lea
sub
in
xor
xor
mov
dec
adc
jl
and
lock
mov
cmp
ret
jl
dec
mov
sub
cli
and
js
jle
cli
in
xchg
push
xchg
addr16
jnp
int
cmp
add
jne
cwde
xor
psubb
and
jb
aas
shr
pop
push
int
add
ret
mov
jl
adc
call
add
sub
pop
jle
sbb
xor
in
dec
mov
mov
lea
pop
mov
lea
and
push
jecxz
pop
cmps
addr16
outs
popf
push
or
mov
daa
xor
pop
ret
or
cli
pop
mov
pop
and
cli
jp
aam
(bad)
xchg
jmp
(bad)
into
mov
in
dec
sub
loopne
clc
call
shr
dec
mov
aad
mov
and
pop
pop
(bad)
sub
int3
sbb
aam
not
jge
adc
lahf
push
in
sub
jge
lds
jae
aas
imul
sub
cmp
test
stos
and
ror
add
js
out
mov
lea
push
cmp
mov
sar
repnz
pop
pushf
xchg
cdq
fisub
in
cmc
xlat
mov
cmp
sar
add
xlat
add
mov
xor
push
xchg
shl
inc
(bad)
in
data16
out
test
movs
xchg
inc
out
jp
shr
aaa
mov
rep
leave
mov
jmp
addr16
add
fmul
bound
retf
aas
in
mov
js
push
cmp
aaa
das
sti
cmps
ins
mov
fcmovbe
push
jg
or
mov
push
aam
outs
lods
retf
push
jg
aas
mov
cmp
je
xchg
addr16
in
adc
cmp
retf
xchg
fmul
stos
and
jmp
mov
loope
or
dec
in
lods
std
push
jge
es
dec
data16
sbb
xchg
and
dec
dec
mov
mov
xchg
ror
push
jae
aas
sub
imul
sti
stos
fisub
cmc
push
pop
cmp
shr
sar
mov
mov
fwait
adc
xchg
add
cmc
mov
or
push
cwde
int
imul
aad
add
adc
jae
shr
iret
std
and
sbb
inc
mov
and
scas
adc
clc
xchg
xor
inc
xchg
arpl
inc
out
and
test
pusha
and
add
ss
fst
mov
repnz
popf
(bad)
cmp
repz
or
ja
dec
push
add
popf
movhps
iret
ret
xlat
xor
into
ror
test
cwde
repz
sbb
hlt
xchg
mov
or
or
dec
daa
inc
or
fadd
mov
ds
shl
push
push
shr
cdq
js
clc
ret
push
push
es
jb
sti
mov
sub
push
mov
rcr
dec
int
shl
cmc
aad
jno
sub
mov
push
and
sub
imul
ror
xchg
nop
pmulhw
or
jmp
xor
icebp
test
xchg
mov
pop
int
sbb
(bad)
mov
movs
test
in
cmps
mov
xchg
sbb
xchg
jmp
pop
cs
mov
pop
dec
jae
xchg
sbb
in
xchg
in
jg
push
jbe
call
retf
out
jmp
addr16
cmp
loopne
push
enter
int3
ret
clc
mov
jb
mov
mov
faddp
test
sub
add
aaa
repnz
movs
mov
ret
in
ja
lahf
aam
push
push
pop
std
lods
add
cmp
shl
loop
dec
fidiv
sbb
iret
movs
pop
or
xor
fwait
cs
sbb
mov
fs
or
xchg
sub
adc
add
xchg
cwde
push
hlt
adc
mov
mov
and
cwde
mov
outs
fstp
xor
or
imul
in
push
ss
test
jmp
mov
and
std
adc
add
test
mov
daa
push
je
jle
push
xchg
into
jo
out
jo
sub
stos
stos
add
cmps
(bad)
daa
not
xor
mov
rol
push
retf
push
cmp
mov
jp
sar
jmp
out
dec
xchg
fdivp
out
and
inc
outs
fwait
pop
add
lods
jnp
pop
and
test
adc
(bad)
imul
mov
call
(bad)
fs
jg
jae
and
outs
cmps
int
jae
mov
or
pushf
cs
std
mov
loop
mov
fstp
adc
or
xor
inc
jmp
jae
cli
xlat
jb
jp
loope
aad
inc
push
pop
dec
hlt
lock
xchg
jns
cld
test
adc
ret
mov
mov
jno
jg
and
(bad)
das
fisubr
jp
xor
sub
scas
inc
add
out
mov
jp
dec
lahf
out
jbe
pop
out
loopne
out
cld
sahf
sbb
rol
fdivr
ins
dec
clc
inc
mov
rcr
ror
dec
jns
fcomp
pusha
retf
shl
jne
(bad)
fcomp
mov
add
push
mov
aaa
push
adc
ins
(bad)
xlat
les
mov
pop
cmp
jo
std
div
pop
retf
cmp
add
repnz
mov
push
sbb
int
mov
sub
mov
sar
or
aas
leave
lods
scas
mov
mov
mov
cmps
mov
jl
cmp
dec
rcr
icebp
(bad)
shl
mov
fnsave
outs
hlt
pop
sbb
inc
push
push
fisttp
aas
mov
dec
xor
adc
mov
inc
mov
es
in
cmp
lahf
mov
ret
lock
add
push
out
sbb
jb
push
and
xchg
and
xchg
or
inc
fisttp
daa
mov
es
data16
stc
xchg
lahf
jmp
addr16
fst
daa
(bad)
pop
or
jl
test
pusha
bound
lock
sub
out
(bad)
sahf
iret
adc
push
lahf
lds
das
je
enter
ss
int3
mov
add
js
arpl
movs
in
scas
cmp
lds
outs
icebp
jne
mov
or
jl
mov
mov
leave
pop
and
add
mov
pop
stos
sti
stos
call
call
int3
inc
pop
ret
push
scas
imul
(bad)
mov
mov
(bad)
sub
mov
lods
sub
dec
dec
add
cdq
aam
(bad)
enter
outs
xor
cmp
mov
sub
dec
ja
icebp
loop
mov
fs
scas
dec
cmc
xchg
jno
ins
lds
cwde
push
mov
sti
jbe
mov
inc
add
sub
ret
and
jl
push
push
(bad)
jbe
xchg
ins
add
push
inc
cmp
xor
push
cmp
jnp
fbstp
leave
stos
div
mov
adc
adc
aam
ret
not
addr16
fld
mov
retf
test
xchg
xor
loopne
int
pop
std
into
lods
sbb
pop
dec
xor
mov
add
lock
shr
sub
sbb
ret
push
xchg
mov
sub
fdiv
inc
jecxz
sub
mov
mov
sbb
fadd
inc
sahf
outs
out
and
jnp
dec
jae
pushf
(bad)
or
cmc
fdiv
pop
inc
(bad)
push
inc
adc
(bad)
mov
and
(bad)
xchg
push
sahf
adc
xor
or
inc
pop
addr16
mov
cwde
test
retf
in
fist
sar
mov
pop
jae
pop
(bad)
ins
sbb
imul
pusha
or
mov
inc
loope
stos
lock
pop
xor
cmp
ds
add
fimul
dec
sar
bound
and
leave
jbe
mov
(bad)
aad
stos
out
mov
adc
pop
aam
mov
mov
and
js
cmp
loopne
(bad)
jp
inc
in
mov
jne
es
cmp
push
repz
fst
test
add
push
sbb
aaa
pop
sub
cmp
test
mov
ss
stos
ds
scas
add
pop
dec
and
jmp
add
cmps
push
pop
mov
(bad)
ja
sbb
mov
jo
in
or
mov
into
xor
pop
ja
in
outs
leave
ret
loope
dec
mov
aam
idiv
aaa
mov
push
jmp
dec
mov
fadd
lods
ss
or
pop
dec
push
lahf
mov
sbb
or
add
retf
cli
jno
dec
mov
or
lea
movs
popf
repz
mov
mov
js
adc
outs
sub
gs
sbb
mov
mov
cmp
iret
sar
mov
xchg
add
add
xchg
stos
imul
push
icebp
shl
mov
jne
dec
mov
ja
(bad)
(bad)
jae
ins
adc
div
es
(bad)
mov
out
xor
inc
pop
jne
daa
retf
ins
retf
in
mov
pop
inc
or
popf
push
jle
mov
or
xor
ins
nop
jae
daa
sbb
dec
(bad)
(bad)
mov
xor
mov
mov
cmps
call
push
inc
dec
mov
push
sbb
mov
sar
adc
cld
cs
mov
dec
lods
test
jge
fs
adc
sub
lock
push
cmps
test
in
mov
push
xor
retf
inc
ret
into
push
add
fstp
addr16
dec
xor
imul
leave
sbb
mov
(bad)
cmp
std
and
mov
pop
sbb
retf
adc
js
inc
adc
cwde
aas
or
test
into
or
ror
pop
push
sbb
fcomi
jl
sbb
inc
sub
ror
add
pop
fcom
mov
inc
and
xor
sub
or
sub
ds
xchg
add
and
adc
cdq
jne
test
jno
and
stc
gs
ds
out
mov
arpl
cli
fld
jne
out
popf
dec
retf
mov
jno
popf
pusha
in
lods
aad
call
adc
jmp
mov
inc
cmp
outs
mov
sub
add
adc
pop
or
mov
sbb
ja
shl
sbb
popf
fst
in
dec
jg
cmp
xchg
mov
shr
call
xor
aad
leave
jmp
ins
pushf
dec
lods
and
fisub
push
cdq
test
out
aad
das
jge
addr16
jl
ins
xchg
rol
ror
dec
jge
jno
aaa
imul
sbb
xor
mov
sub
les
jne
fadd
lods
adc
lds
retf
cmp
out
cmp
(bad)
push
lea
das
dec
int3
jecxz
fcom
gs
test
ret
lods
mov
mov
outs
mov
cld
std
or
dec
add
pop
mov
les
in
cmps
cdq
rcl
mov
xchg
call
cmp
(bad)
into
xchg
dec
xor
push
mov
push
xlat
pop
and
push
mov
jecxz
iret
daa
mov
inc
aad
push
fnstsw
fild
call
and
or
cmps
xlat
dec
push
retf
and
into
popa
in
leave
lods
enter
stos
xor
call
sub
sar
sar
cld
dec
out
js
mov
ret
inc
xchg
push
xor
add
sub
es
outs
mov
call
inc
in
push
cli
push
adc
jnp
in
jmp
mov
into
callw
pop
bnd
jb
xor
das
xchg
repz
xor
sub
test
add
pop
out
mov
xor
pop
in
jns
addr16
cld
bnd
stos
bound
sbb
lods
jae
test
mov
xor
jge
adc
pop
ins
adc
xor
inc
dec
ja
js
xor
push
add
cvtps2pd
push
loope
cld
cld
scas
ja
xchg
add
push
jnp
dec
pop
div
loope
pop
pop
adc
and
lds
mov
jl
dec
or
pop
adc
lds
or
imul
mov
or
cmp
and
mov
mov
cdq
fmul
inc
pop
inc
lahf
mov
cmp
mov
gs
int3
dec
(bad)
mov
add
ds
cs
nop
cmp
mov
jne
and
xor
das
pop
inc
and
in
jmp
ss
dec
aad
pusha
psubusb
pop
push
outs
adc
pop
in
or
jno
hlt
cmp
(bad)
daa
sbb
mov
jno
push
mov
es
sahf
lds
sbb
test
xor
jmpw
add
sub
out
shl
(bad)
lock
mov
jns
and
ror
jnp
push
fistp
push
cld
(bad)
dec
into
push
pop
mov
(bad)
pop
inc
scas
sar
iret
jns
arpl
aas
mov
jo
shr
test
movs
mov
inc
mov
sub
loop
inc
pop
in
inc
ins
arpl
shl
and
jns
push
or
push
xor
jo
sub
and
push
fidiv
and
(bad)
cmp
scas
jno
mov
pop
enter
xchg
fisubr
arpl
mov
inc
not
shl
je
cmp
pop
lea
xchg
push
xchg
or
or
loopne
inc
pop
icebp
out
imul
das
jle
sub
cmc
cmp
add
jae
sbb
sub
jp
cmps
pop
sbb
shr
xchg
cld
ins
sar
scas
xchg
mov
pop
rol
stos
jl
sub
ss
sub
dec
dec
mul
pop
add
xchg
inc
stos
pop
jge
mov
push
aas
ins
fwait
nop
lods
push
and
lds
jmp
or
sbb
test
ror
jge
jae
fist
aas
mov
mov
fcom
jl
iret
enter
aad
cmp
xor
ror
cmp
sub
pop
out
lock
les
mov
les
loope
jns
mov
xchg
out
sti
mov
or
pslld
dec
in
repnz
adc
cdq
jo
mov
or
rcl
xchg
xchg
xor
cmp
or
sti
or
and
ja
imul
stc
mov
push
or
js
nop
out
xlat
mov
xor
jb
adc
pop
adc
pop
sub
shl
movs
ins
xor
mov
xor
(bad)
xchg
cmps
add
sbb
sbb
inc
popa
push
xchg
xor
in
nop
nop
loope
loop
inc
test
imul
dec
add
dec
ficom
xchg
push
sar
push
leave
iret
jmp
lahf
mov
loop
int
repnz
out
mov
ins
gs
lock
loope
inc
mov
fcmovb
fisub
mov
mov
cmp
add
jns
sbb
adc
outs
mov
out
jp
sbb
cdq
repnz
outs
and
xchg
mov
repnz
(bad)
mov
lds
jmp
sar
sbb
idiv
scas
movs
pop
dec
sti
and
push
pop
push
aaa
cli
xor
(bad)
loopne
rcl
out
pop
(bad)
xlat
mov
mov
daa
inc
adc
add
push
cmps
push
rcl
in
mov
xchg
mov
in
dec
stos
frstor
dec
push
je
sbb
mov
in
stos
cmp
cmp
fisttp
gs
cs
rol
sbb
mov
dec
adc
push
shr
mov
retf
inc
pusha
cmps
shl
aas
jbe
mov
ja
mov
adc
jnp
fsubr
ss
mov
jno
popa
fs
in
shl
movs
adc
adc
repnz
fprem1
faddp
cmp
push
jl
or
push
mov
sub
xchg
or
stos
jge
xor
pop
push
mov
adc
int
sahf
cmp
js
out
bound
mov
add
test
mov
sub
out
dec
loope
dec
mov
mov
int3
scas
setae
and
adc
retf
adc
cld
fcom
mov
ret
fisub
sbb
popf
adc
fdivr
int
cdq
clc
mov
(bad)
jae
inc
rol
cwde
repz
(bad)
mov
jb
jnp
mov
(bad)
lahf
and
cmovo
int
adc
out
add
xor
push
cmc
jb
inc
lahf
out
ror
adc
inc
out
xor
out
xchg
into
daa
fwait
push
xchg
test
or
mov
into
iret
push
jo
arpl
int3
fwait
adc
iret
jle
test
or
pushf
shr
clc
mov
stos
sbb
mov
jmp
(bad)
cmp
stos
and
aam
fcmove
xchg
lods
out
mov
test
fidivr
cmps
movs
sti
ficomp
sbb
mov
pop
test
test
fs
sub
mov
(bad)
lods
inc
addr16
dec
mov
xchg
iret
inc
cdq
xor
stos
cld
xchg
push
push
inc
sbb
xor
out
loopne
lock
outs
outs
iret
push
mov
mov
scas
rcl
mov
shl
xchg
push
jno
iret
lea
mov
jg
jl
inc
in
push
imul
xor
imul
stc
adc
out
movs
ret
mov
add
xor
jno
popa
fsub
out
test
test
les
mov
jae
or
mov
adc
repnz
lds
mov
jecxz
and
cmp
push
call
dec
dec
mov
mov
xor
mov
imul
sbb
sub
xor
scas
xor
ins
lods
fnclex
fmul
mov
and
mov
call
fbstp
fbstp
and
pop
or
xchg
jl
xor
cwde
inc
sbb
or
and
(bad)
push
(bad)
aaa
xchg
mov
jmp
sbb
cmps
adc
xchg
lea
fs
add
xor
stc
movlps
sub
add
sub
push
leave
xchg
add
in
add
push
cmps
adc
cmp
lock
jge
mov
int3
sbb
in
out
int3
sub
scas
popa
lock
jle
inc
xchg
dec
or
sub
xor
aad
sar
sbb
aas
or
ret
mov
mov
xchg
adc
add
push
fdivr
aaa
push
adc
or
popa
pop
sbb
xchg
jle
pop
adc
jmp
push
sbb
cmp
in
pop
dec
sub
xor
dec
fadd
mov
test
pop
pop
(bad)
xlat
push
dec
xor
outs
rol
mov
xchg
inc
aam
cmp
and
arpl
stc
loope
push
sbb
or
cdq
mov
call
mov
repnz
mov
or
or
xchg
jle
or
sub
adc
cmp
retf
mov
fwait
daa
aam
mov
dec
inc
imul
shr
outs
enter
retf
mov
call
jns
in
outs
scas
outs
or
jle
imul
fwait
jb
les
jge
out
movs
ins
mov
sahf
aas
jmp
loope
cdq
hlt
(bad)
pop
cwde
sub
fld
mov
xchg
xor
(bad)
(bad)
and
inc
mov
fstp
cld
push
xchg
aas
mov
cmps
cmp
pop
ja
bound
mov
adc
mov
dec
add
or
out
js
mov
int
xor
push
add
mov
jl
or
jno
push
or
sub
lahf
and
ss
mov
out
aas
(bad)
pop
dec
(bad)
pusha
fs
(bad)
repnz
cmp
retf
mov
inc
mov
push
mov
pushw
hlt
pusha
push
adc
mov
mov
push
mov
push
or
(bad)
sub
jmp
adc
jne
rcr
mov
xchg
fadd
dec
repnz
add
mov
scas
dec
fadd
jmp
daa
maskmovq
imul
mov
mov
shl
push
adc
imul
repnz
push
sub
xor
sbb
lahf
adc
or
ret
pop
xor
or
movs
and
inc
xor
xchg
cli
test
push
xchg
xchg
dec
push
xchg
mov
push
adc
or
out
lock
jno
shl
frstor
scas
loopne
fild
mov
loope
lahf
jmp
mov
lods
pop
mov
jmp
fdivr
sbb
cmp
inc
loope
cmp
(bad)
and
mov
mov
sub
sbb
add
(bad)
out
mov
sbb
xchg
cmp
sti
cmp
adc
pusha
inc
movs
aam
outs
cmp
iret
jno
adc
adc
loope
inc
aam
mov
in
test
jns
push
push
sub
int3
hlt
dec
cmp
xlat
xchg
or
and
lds
lahf
ret
retf
mov
fldenv
mov
mov
popw
inc
inc
out
sub
hlt
stc
pushf
icebp
cdq
sbb
ret
out
mov
jae
mov
cli
aad
(bad)
mov
mov
mov
fnstcw
xor
nop
out
xchg
(bad)
adc
icebp
mov
push
cmp
dec
outs
stos
push
add
test
js
shl
lods
int3
jl
jmp
les
jmp
push
jne
mov
(bad)
mov
lea
daa
xlat
jg
push
movs
add
mov
fidivr
std
frstor
in
fistp
in
or
mov
add
cmp
xor
fwait
ja
test
in
pop
je
test
sbb
fsubr
les
pop
loope
xchg
movs
test
sub
xor
cmc
jnp
lds
and
xchg
cli
and
jno
mov
cmp
sbb
fldenv
pusha
jmp
jae
push
sub
pop
push
pop
leave
std
adc
dec
mov
xchg
adc
jle
test
hlt
and
and
mov
push
jae
mov
jmp
add
push
clc
iret
fimul
adc
xchg
adc
dec
call
test
push
mov
sub
(bad)
scas
mov
or
dec
xor
fisubr
je
xor
jmp
stos
js
or
stc
mov
inc
stos
scas
out
stos
jno
cld
outs
push
or
jbe
pop
sub
lods
jo
fiadd
push
loopne
xor
jae
adc
jle
jp
xchg
jns
mov
stos
stos
test
mov
mov
daa
(bad)
and
ret
jmp
xchg
stos
test
mov
pushf
xchg
mov
or
and
dec
inc
enter
lea
adc
fld
adc
and
arpl
pop
ja
and
test
sub
sahf
cli
stos
adc
pop
std
fsub
aam
imul
(bad)
xchg
cmp
(bad)
cmp
ins
enter
shl
jecxz
sbb
jmp
fldcw
or
adc
in
gs
dec
sub
call
dec
jmp
lods
sbb
jecxz
sub
jae
dec
repnz
js
jp
mov
popf
mov
popa
imul
inc
pop
jbe
(bad)
jns
gs
sub
mov
loop
pop
fiadd
mov
test
dec
jmp
jnp
add
add
int
cli
push
mov
pop
movs
sub
out
mov
push
jb
(bad)
mul
pushf
jg
test
cmp
sahf
loop
sbb
retf
into
xor
cmp
pop
adc
jno
push
call
repz
fistp
and
adc
xor
call
mov
or
out
inc
hlt
pop
dec
dec
fwait
loope
cmp
sub
movs
jb
or
lahf
lahf
pop
dec
xor
and
and
cs
jbe
dec
push
cmp
adc
arpl
xchg
sub
adc
fmul
nop
adc
or
xchg
cdq
lfs
dec
fs
retf
mov
jmp
mov
sti
dec
and
call
aad
push
mov
test
add
add
mov
bound
or
jbe
outs
sbb
(bad)
cmp
stos
push
mov
push
dec
adc
sbb
ror
push
sti
mov
scas
or
sub
je
mov
adc
stc
mov
jecxz
int
jnp
cmps
adc
addr16
pop
shl
cmps
and
mov
fst
xchg
pop
push
cdq
mov
cmp
mov
sar
ins
inc
sar
xchg
fcomp
mov
sub
fiadd
jmp
ret
aas
shl
jne
adc
push
push
pop
movs
inc
ja
(bad)
call
jle
dec
cdq
clc
lds
xlat
push
ja
inc
retf
fsub
xor
inc
jno
fild
gs
arpl
sbb
adc
cmp
dec
or
gs
out
mov
sbb
test
jp
sbb
or
mov
mov
xchg
pop
xor
mov
ret
sub
xor
jno
popf
mov
int3
cwde
jae
cmp
add
and
and
add
or
push
outs
scas
(bad)
fs
int
sub
aaa
dec
xor
adc
ss
jae
push
fld
or
sbb
pop
or
lock
sbb
fiadd
xor
push
les
mov
sub
jbe
jo
and
cmps
in
cmp
pushf
dec
loopne
mov
aam
loop
jg
cmp
mov
push
xor
xchg
lahf
std
gs
into
xchg
mov
call
or
ret
aaa
hlt
(bad)
je
popf
or
fist
jl
mov
push
sub
cmovb
and
jns
sub
in
xor
ins
xchg
and
or
fisttp
fdivrp
lods
inc
pop
loope
cmps
das
pop
aad
mov
dec
jbe
jb
nop
or
std
movs
cmc
(bad)
xchg
sub
std
jge
mov
jo
aad
mov
loop
inc
sbb
or
mov
out
fadd
icebp
push
xor
sbb
js
cld
lds
out
jp
add
add
enter
jmp
les
or
shr
imul
movs
pushf
cdq
ja
fisubr
mov
mov
add
hlt
hlt
les
mul
jle
fidivr
movs
popf
mov
(bad)
mov
hlt
mov
fsubr
call
call
jge
mov
sub
pop
mov
movs
add
out
sub
mov
sbb
sub
cwde
cmps
pop
xor
(bad)
xchg
inc
push
add
(bad)
xor
jle
push
(bad)
dec
inc
ja
mov
mov
lods
adc
inc
mov
or
movs
repz
dec
jmp
xor
cmp
fidivr
ss
and
outs
sbb
adc
jmp
jle
adc
stc
mov
mov
add
imul
jp
cmp
mov
jp
inc
test
jb
nop
movs
out
mov
mov
xor
sbb
inc
int
jle
cmp
imul
xlat
stc
mov
mov
adc
mov
movs
repnz
rcl
mov
fisttp
cmp
add
or
cmps
dec
mov
mov
pop
gs
cmp
stc
push
es
mov
mov
fidivr
mov
and
xchg
scas
inc
aaa
mov
add
(bad)
mov
rep
adc
xchg
adc
jl
ret
jle
outs
jno
xchg
push
or
or
push
sbb
das
out
ins
aam
shl
push
gs
cld
in
or
pushw
and
scas
cmps
out
mov
mov
(bad)
mov
aad
stos
pop
imul
or
mov
xchg
pop
or
test
mov
inc
or
int
retf
js
sti
shl
or
inc
cwde
call
mov
mov
mov
push
hlt
cmp
jne
jecxz
aaa
ret
cmp
fs
out
cmp
clc
test
mov
sub
push
jmp
jb
push
sbb
mov
mov
jno
mov
push
pushf
mov
adc
inc
mov
xchg
popa
push
adc
or
add
push
clc
rol
test
ret
mov
adc
aaa
(bad)
(bad)
loope
xor
sbb
std
mov
imul
xor
pop
push
popf
rcr
iret
retf
daa
jg
xchg
add
sub
cmps
push
popf
cmp
sub
mov
sbb
hlt
xchg
mov
imul
arpl
inc
movs
pop
mov
dec
xchg
imul
mov
ins
push
test
ss
jb
loopne
mov
call
pop
clc
mov
pop
fwait
and
push
jo
out
outs
push
aaa
cmp
fild
imul
aaa
loope
xchg
fs
shr
fist
lock
sbb
(bad)
xchg
adc
int
enter
adc
mov
lods
push
fcmovne
sub
das
lock
mov
mov
inc
cmp
mov
fld
hlt
nop
xchg
call
ds
and
pop
mov
jb
push
mov
out
fnstenv
sub
dec
mov
(bad)
cmp
adc
(bad)
lds
cli
and
hlt
ins
cmp
and
popa
mov
clc
adc
mov
call
adc
pop
shl
outs
add
mov
out
sub
shl
inc
pusha
sahf
div
in
out
cmp
test
bound
pop
push
scas
outs
test
mov
rol
cmps
adc
cmps
xor
jl
push
mov
dec
jecxz
fld
adc
add
out
test
lock
cwde
stos
sti
ins
das
icebp
ins
pop
fxch
push
mov
xor
sub
xchg
mov
fs
sbb
ds
push
(bad)
cmp
clc
ja
add
sub
ds
and
jae
cmps
jmp
pop
sub
and
pushf
dec
call
mov
and
dec
xchg
xchg
shr
mov
arpl
inc
fst
lahf
dec
leave
pop
sub
stos
jnp
cwde
xchg
arpl
lea
hlt
mov
fiadd
mov
rcl
push
clc
pop
popf
adc
adc
jg
xchg
pop
jne
mov
push
lea
shr
jecxz
cmp
push
pop
sub
xchg
mov
test
loope
mov
pop
or
pop
shr
es
dec
outs
push
ja
aam
lods
or
(bad)
int
cmps
xchg
push
mov
or
pop
jge
cmps
cdq
fistp
sub
pushf
enter
adc
popf
mov
fst
movs
pushf
and
je
loope
pop
test
popa
sub
push
mov
popf
inc
imul
mov
adc
sti
xchg
mov
rol
xchg
cmp
enter
xor
push
in
add
add
pop
popf
jmp
dec
stos
push
dec
inc
mov
jno
inc
(bad)
xchg
leave
(bad)
mov
je
push
call
pop
leave
and
mov
das
and
push
sub
scas
dec
call
call
aam
cmc
sbb
pushf
adc
popa
enter
fldenv
or
pop
rol
adc
stos
adc
outs
aas
lods
int
cmp
sbb
mov
xor
add
xchg
stos
lock
mov
pushf
mov
dec
jno
sbb
mov
loopne
sbb
loop
mov
inc
(bad)
add
cmp
sbb
jne
(bad)
xchg
stos
test
push
sub
out
jmp
movs
cmps
sub
in
ja
and
imul
je
test
mov
inc
and
movups
lds
retf
mov
xor
cdq
xchg
fldcw
xchg
sahf
ret
xchg
rcl
cmp
retf
push
fmul
push
and
xor
push
je
mov
xchg
jne
add
sub
pushf
pushf
mov
mov
inc
in
aaa
cld
xor
iret
ret
cmps
jmp
jp
mov
cs
pxor
shl
mov
sub
pop
dec
push
test
lock
add
aaa
fisub
sahf
aam
sti
xor
add
mov
das
std
test
jecxz
std
jle
out
jae
or
add
fbstp
fild
leave
push
sti
sbb
dec
jbe
data16
jmp
cdq
aam
inc
enter
rcr
mov
mov
push
push
mov
push
mov
and
dec
pop
(bad)
cmp
xchg
inc
add
or
push
pop
in
dec
lahf
xchg
test
adc
aaa
aas
aas
inc
jge
(bad)
and
inc
rcl
xlat
pop
mov
in
cdq
cmp
push
repnz
outs
lods
rcl
xchg
add
leave
fimul
mov
je
dec
stos
cmp
mov
sahf
ja
ret
int
bound
and
and
scas
push
adc
mov
lds
jno
cmc
imul
adc
mov
fisub
adc
cmp
jecxz
faddp
scas
lods
xchg
mov
stos
xchg
popf
js
jnp
outs
adc
add
jae
test
mov
out
(bad)
mov
dec
mov
mov
jg
daa
(bad)
mov
out
xchg
imul
dec
pushf
nop
mov
mov
push
(bad)
push
push
pushf
das
xor
mov
sbb
or
adc
rcl
lahf
pop
push
adc
mov
adc
outs
cld
or
push
and
dec
outs
pop
pop
cdq
test
and
stos
sahf
mov
jmp
icebp
push
adc
addr16
test
(bad)
pushf
cwde
cmps
das
jo
pop
mov
adc
lds
pop
mov
mov
aad
mov
(bad)
shr
or
retf
stos
enter
mov
mov
fisubr
dec
dec
push
repnz
push
adc
cdq
sub
mov
push
mov
ss
jne
cmp
and
mov
stos
dec
out
bound
aam
fbld
xor
imul
retf
outs
push
popf
pop
xchg
jg
outs
and
rol
or
mov
push
pop
jle
ret
aam
aam
(bad)
dec
mov
out
dec
adc
and
add
mov
lods
sbb
xchg
shr
push
test
sub
repnz
push
pop
repz
in
outs
scas
or
xor
(bad)
hlt
xor
(bad)
stos
adc
mov
loope
jmp
icebp
in
shr
mov
scas
cmps
cmp
push
jle
movs
push
ja
jne
inc
shr
cs
out
push
mov
and
cli
aam
aaa
ss
and
and
add
cmps
stos
mov
sub
mov
jne
fwait
shr
ret
ret
adc
cs
in
inc
xor
loope
shl
push
aas
sbb
xchg
jmp
adc
jns
gs
adc
xchg
add
inc
or
fs
push
sub
xchg
loopne
dec
sbb
inc
xchg
(bad)
pop
inc
int3
cmc
or
jno
and
out
or
leave
call
mov
xchg
mov
(bad)
xchg
cmp
out
shr
hlt
xchg
adc
lods
and
adc
into
push
cmp
jl
and
pop
or
lods
les
inc
xchg
lock
das
inc
jbe
sbb
mov
jo
sub
sbb
xchg
jb
jne
push
add
or
xor
mov
push
sub
pop
jge
pop
ja
pop
lods
add
bound
sahf
fcomp
cwde
dec
mov
dec
push
out
mov
and
ror
outs
cmps
arpl
inc
into
sub
xchg
and
loopne
lahf
and
pop
call
inc
lods
jmp
cmp
dec
mov
clc
(bad)
fisub
fwait
push
lods
sbb
and
add
cli
int3
mov
je
int
pop
or
pop
aad
aam
mov
jb
dec
loope
ret
fwait
mov
lods
sbb
cmp
push
xchg
loope
test
push
(bad)
in
add
sub
and
iret
xor
(bad)
mov
stos
enter
addr16
mov
dec
out
push
cmp
push
jmp
test
std
jne
xchg
test
in
pushf
mov
sub
inc
lock
test
cwde
sub
imul
in
cld
dec
loope
outs
das
or
mov
and
add
fld
lods
popf
xlat
sbb
arpl
mov
xor
xor
shl
and
fld
add
imul
pop
cmp
out
jae
out
xor
add
xchg
push
cmc
or
mov
stos
cli
cwde
jl
call
sbb
jnp
fcom
jge
xchg
add
jg
cdq
fld
cmp
les
std
push
retf
lahf
enter
adc
pop
mov
cdq
call
ins
fs
scas
xchg
ins
mov
jp
jmp
or
sbb
adc
in
sub
arpl
sahf
push
dec
jg
mul
pop
pusha
loope
stc
or
jo
lock
xor
dec
inc
shl
add
imul
repnz
int
pop
sub
add
je
jle
sbb
into
loop
fidivr
and
jns
sbb
mov
push
dec
nop
int
mul
mov
das
cdq
sbb
sbb
mov
dec
imul
dec
loope
rol
or
daa
mov
push
adc
cmp
repz
mov
or
test
sahf
jp
inc
jle
push
push
jl
cmp
push
push
mov
push
lods
xchg
inc
jnp
mov
lahf
xor
mov
int3
mov
int
out
rol
enter
shl
and
sbb
(bad)
push
fld
cmp
lods
add
leave
pop
mov
in
into
lods
cmp
in
cmp
jmp
cdq
loopne
mov
les
sti
xchg
cmp
or
scas
cmp
repnz
(bad)
mov
mov
cmp
stos
loopne
aas
sbb
mov
test
xor
imul
test
add
jns
pop
test
lea
fiadd
adc
lods
ret
cmp
sbb
cmp
rcl
fcom
adc
dec
or
aad
mov
dec
xchg
aad
fsub
dec
aad
aas
add
sub
mov
cdq
cmp
mov
pop
adc
popf
sbb
retf
popf
ret
adc
and
jl
dec
mov
pop
xchg
mov
xor
xchg
adc
mov
push
push
pop
xor
adc
pop
push
ror
jl
or
test
push
ficom
shl
inc
sbb
and
push
jnp
mov
loope
sbb
inc
cmp
pop
enter
mov
push
xor
push
push
xchg
and
pop
in
push
dec
xchg
add
not
(bad)
mov
mov
(bad)
call
dec
adc
iret
hlt
push
and
fucomip
loope
pop
mov
in
push
movs
out
in
popa
gs
mov
inc
movs
cmps
or
dec
xlat
loope
mov
pop
sbb
inc
fsub
repz
xchg
jl
xchg
test
xor
(bad)
into
mov
(bad)
shl
lock
push
push
in
inc
loopne
or
(bad)
repz
shr
sbb
call
retf
push
idiv
inc
rcl
sbb
cdq
jb
popf
fisub
bnd
dec
mov
ins
sbb
sub
cmp
mov
(bad)
sub
cmp
mov
sub
push
xor
aas
push
inc
mov
ret
xor
fadd
clc
push
cmps
sahf
pop
cld
aaa
cs
in
jno
and
pop
push
pop
test
pop
mov
xchg
aad
mov
clc
pop
sub
arpl
movs
scas
fcomp
test
das
aad
or
xlat
adc
mov
jmp
push
mov
mov
xor
jo
cmp
in
push
add
jle
jg
inc
and
ret
test
xor
rcl
(bad)
enter
push
mov
inc
push
in
pushf
xor
sub
push
adc
int
dec
fdiv
or
jcxz
or
gs
adc
and
adc
mov
add
cmp
mov
jns
int3
lds
aaa
cmp
push
mov
mov
test
pusha
adc
pop
sbb
popa
fwait
(bad)
cwde
sbb
rol
adc
mov
mov
cmp
xor
call
inc
add
pop
push
push
ja
or
pop
or
out
and
push
mov
cmp
fdiv
gs
aaa
sbb
ret
outs
jp
mov
mov
pop
or
pushf
fnstcw
push
int3
or
sahf
or
rcl
sbb
fisttp
sti
cld
outs
pushf
loopne
cs
imul
or
jb
xor
sub
in
clc
sub
cli
ins
cmc
lock
rcl
or
and
xlat
dec
popf
xchg
arpl
hlt
adc
inc
dec
mov
loope
or
inc
mov
or
in
stc
inc
fwait
sub
sbb
mov
call
imul
jnp
(bad)
jmp
xchg
ins
and
pop
mov
mov
dec
(bad)
cmp
mov
sub
or
lahf
adc
add
dec
xchg
fdiv
pusha
loopne
pop
jmp
cmp
or
sbb
(bad)
clc
sbb
aas
mov
push
sbb
shl
sub
imul
jg
xchg
xor
sahf
adc
cmp
dec
mov
loope
ds
pop
ss
out
stos
add
stos
cmp
(bad)
out
or
and
and
jle
in
mov
mov
(bad)
and
sub
into
inc
jle
fimul
pop
test
jmp
arpl
sti
xor
cmp
iret
ds
test
mov
or
stos
enter
rol
dec
and
enter
out
(bad)
sub
sbb
addr16
outs
cmp
loop
inc
outs
ins
mov
pop
pop
pushf
adc
cld
xchg
dec
out
jmp
imul
pop
xchg
(bad)
je
inc
ins
pushf
mov
je
out
test
pop
pop
lahf
sbb
add
mov
mov
dec
xchg
pop
sbb
aas
adc
pop
fsub
or
xor
jmp
ins
movs
into
jle
mov
jge
push
or
xchg
and
loop
loop
(bad)
cmp
pusha
int
mov
leave
pop
je
es
mov
aam
xchg
dec
push
arpl
(bad)
int3
cmp
ja
sbb
cmps
or
push
dec
adc
adc
mov
pop
scas
fucomp
mov
fsubr
xor
out
retf
pop
cmc
out
xchg
outs
lds
dec
test
fsubr
adc
cdq
sbb
and
xchg
loopne
jns
mov
cmp
(bad)
std
xchg
push
pop
pusha
ds
les
mov
in
out
dec
xchg
test
xchg
movs
jnp
xchg
(bad)
pop
or
cmps
push
js
cmp
xchg
fist
or
bound
clc
cwde
jns
mov
ss
cmp
sbb
dec
inc
push
je
out
push
hlt
lock
(bad)
dec
and
fadd
(bad)
js
outs
mov
movs
adc
jle
pop
imul
aaa
pop
mov
push
movs
fmul
ins
mov
adc
ds
sbb
retf
(bad)
stos
repnz
push
(bad)
jmp
aas
cmp
jge
inc
sbb
jp
and
mov
int3
lods
pop
scas
leave
sub
pop
mov
dec
xacquire
or
out
sbb
icebp
add
retf
cmp
mov
fs
cmps
jge
fsubr
hlt
xor
fild
ds
cmp
stos
ins
adc
mov
rcl
dec
adc
imul
xor
call
jp
jo
mov
out
sbb
mov
out
inc
inc
add
cmp
jae
and
cld
test
mov
cmp
cmp
dec
cmp
ret
(bad)
sbb
stos
push
push
ror
stos
cdq
inc
push
shl
fcmovnb
lods
test
movups
lahf
add
idiv
or
sbb
(bad)
jge
hlt
mov
es
movs
dec
jp
mov
or
push
ja
xchg
cmp
adc
mov
sub
int3
fwait
push
cmps
repnz
jbe
repz
pop
xor
sbb
mov
add
ss
push
imul
mov
jns
sub
leave
jl
push
pushf
ret
nop
and
mov
ficomp
mov
fstp
dec
bound
lods
dec
ret
mov
fistp
dec
(bad)
jnp
jno
shr
popa
pop
jno
inc
ds
inc
xchg
ds
jbe
jbe
in
mov
adc
rcr
pop
stos
xchg
xor
mov
(bad)
cwde
push
xchg
dec
add
jp
adc
mov
pushf
sub
mov
cmp
cmp
xor
or
into
(bad)
test
rcr
repz
aas
int3
push
push
fs
add
loope
and
out
pop
ins
bound
dec
push
enter
out
stc
sub
scas
ret
ror
or
push
cld
inc
push
or
xchg
in
scas
push
jmp
(bad)
daa
sub
jns
xor
stos
movs
movs
test
mov
adc
imul
xor
mov
dec
loop
and
jnp
xchg
cmp
cwde
adc
std
cmp
das
imul
cmp
sbb
pop
neg
adc
push
xor
pop
dec
and
inc
enter
sbb
cld
jmp
or
push
mov
mul
or
les
cmps
in
inc
mov
mov
cs
test
stos
(bad)
(bad)
add
mov
pop
jmp
mov
dec
fs
mov
xchg
(bad)
(bad)
ficom
inc
sbb
(bad)
neg
out
leave
fimul
inc
dec
jns
sub
lock
test
sahf
mov
popf
adc
xchg
dec
jle
test
inc
(bad)
add
fiadd
in
(bad)
sbb
ins
pop
cmp
mov
ret
mov
xor
lods
sbb
test
inc
mov
mov
jno
pop
xor
mov
aam
scas
scas
jne
in
push
jo
neg
dec
sub
inc
int3
push
mov
arpl
xor
cmps
in
pop
sub
cmp
in
aaa
push
out
sub
out
mov
cld
fsubr
push
mov
(bad)
jne
mov
sbb
sub
stc
cdq
add
in
inc
push
or
push
jge
dec
je
jbe
push
out
rcl
jge
or
test
clc
stos
and
sub
imul
test
push
hlt
loopne
gs
bswap
repz
mov
jo
outs
ja
adc
push
out
add
addr16
adc
es
(bad)
in
and
mov
cmp
jne
push
jecxz
int3
mov
rcr
shr
and
xchg
pusha
jb
shl
mov
(bad)
(bad)
xchg
mov
pop
inc
fld
xor
dec
dec
xor
pop
mov
mov
loope
int
into
adc
and
jbe
cs
fcmovb
mov
repnz
not
or
pop
mov
lods
les
push
adc
test
cmps
push
inc
lods
mov
inc
jo
pop
cmp
lea
add
cmp
(bad)
(bad)
jns
retf
rcr
adc
cld
jno
add
call
and
push
ss
das
cdq
dec
or
pop
jmp
repz
les
push
push
test
sub
pop
cmp
dec
icebp
jp
je
pop
loopne
dec
mov
out
mov
pop
fisttp
les
sbb
sub
sbb
outs
aam
mov
movs
cmp
cwde
xor
dec
and
in
fcom
push
xor
inc
cmps
mul
pop
ficom
mov
rcl
xchg
lock
or
lds
sub
pop
sar
iret
inc
pop
int3
ret
les
pop
(bad)
stc
jmp
lds
call
or
pop
shr
popf
pop
out
pop
mov
out
mov
push
fiadd
xchg
call
dec
ror
cdq
cld
sub
cmc
pusha
or
cmps
pop
sbb
and
repz
ror
dec
lahf
daa
stc
dec
aam
xor
repnz
inc
jmp
rcr
dec
add
aad
movntps
hlt
or
daa
mov
mov
mov
std
mov
loope
xor
mov
out
push
(bad)
fcomp
add
ins
hlt
in
pop
scas
xchg
loope
adc
push
sub
call
and
outs
and
jnp
adc
inc
sbb
sub
bound
adc
ficom
in
stos
jnp
std
mov
mov
mov
stos
fdiv
mov
sbb
(bad)
sub
jg
ficomp
and
or
pop
nop
outs
push
xchg
lahf
xchg
mov
cmp
push
pushf
dec
popa
dec
ret
cmps
xchg
sbb
sub
cwde
cmp
inc
jb
pop
mov
ror
cmp
fcomi
dec
int3
test
jns
dec
div
or
mov
or
or
hlt
inc
in
xor
mov
pop
fadd
add
push
ins
into
dec
je
ja
outs
fmul
pop
adc
xchg
sahf
shr
sti
push
lock
retf
ja
xchg
and
add
fmul
mov
pop
cwde
daa
jae
and
loope
add
out
neg
xor
or
stos
add
test
add
(bad)
and
out
push
and
jle
push
ret
std
adc
xchg
add
cmp
mov
clc
test
push
pop
mov
jno
jo
mov
rcr
mov
lods
outs
(bad)
test
push
shl
jmp
jge
imul
clc
pop
ss
lods
add
cs
call
dec
jle
pop
fmul
sub
les
xchg
jbe
das
jo
rcl
scas
pop
cmp
scas
or
mov
cmps
push
retf
sub
add
inc
cmp
push
repz
nop
leave
nop
rcr
pop
jns
jno
adc
or
call
sti
hlt
gs
mov
sub
aas
pusha
out
stc
add
daa
add
(bad)
std
retf
imul
fidivr
mov
jae
adc
fdiv
shl
dec
pop
nop
xchg
inc
mov
retf
mov
dec
loop
and
and
pop
(bad)
daa
inc
test
loope
and
dec
jne
jno
inc
jl
cld
mov
fwait
stc
bnd
push
or
xchg
stos
jp
mov
sahf
pop
test
add
stos
jl
stc
push
daa
pop
and
mov
dec
(bad)
in
cld
rcl
and
fadd
jge
test
aaa
in
mov
pop
shl
cmp
adc
fimul
dec
xor
aas
xchg
js
pusha
add
sahf
test
jne
adc
(bad)
jno
and
into
adc
pushf
push
inc
mov
rcl
jno
bndstx
cdq
or
adc
cmp
das
inc
in
std
or
popf
mov
mov
iret
cmp
or
arpl
xchg
inc
jbe
call
out
fwait
movs
dec
push
jg
es
jno
inc
stos
sbb
imul
cmp
adc
jne
or
mov
scas
and
push
dec
dec
cdq
mov
xor
add
inc
mov
icebp
and
dec
enter
xor
jno
mov
adc
sbb
pushf
xchg
add
mov
or
jl
in
fadd
cli
adc
cmp
inc
test
sbb
xchg
fs
mov
cmp
jmp
test
fwait
jmp
outs
inc
dec
mov
les
mov
xchg
jecxz
daa
inc
pop
push
gs
outs
ds
dec
mov
arpl
pop
fstp
inc
add
adc
jno
loop
pop
adc
mov
xor
fbstp
adc
push
jns
sbb
jecxz
sbb
or
arpl
mov
cmps
dec
scas
into
cmp
and
push
stc
ss
jns
aad
mov
and
idiv
dec
mov
rol
fist
cs
jae
aam
pop
leave
xchg
push
and
inc
into
rcl
in
and
popa
aad
and
imul
cmp
jne
push
xchg
xchg
retf
icebp
or
mov
in
add
arpl
sahf
xchg
es
scas
and
div
sbb
shl
pop
fmul
mov
fs
arpl
mov
pop
adc
into
sti
int
add
out
lds
(bad)
fidiv
out
sbb
xlat
or
pushf
sti
test
loopne
imul
cli
scas
ins
imul
add
in
addr16
xchg
push
ins
dec
jl
xchg
test
xchg
loopne
mov
test
sub
pop
mov
cmp
addr16
fist
popf
xchg
repz
out
sbb
mov
mov
imul
mov
adc
ja
lahf
push
pop
push
ret
sub
pop
xor
or
iret
je
xor
out
xor
adc
aas
adc
jmp
and
outs
xor
add
ror
std
mov
lds
pop
test
xor
push
stos
and
call
mov
mov
imul
xchg
sbb
mov
cmp
xchg
das
test
push
inc
or
inc
imul
movd
pop
mov
cmp
push
pusha
pop
movs
(bad)
pop
fimul
cs
mov
(bad)
mov
add
jmp
test
xor
ret
shl
mov
popa
xor
or
js
mov
xchg
push
adc
inc
lods
add
xor
inc
fisub
cmp
pop
rol
mov
sub
inc
xchg
(bad)
fisttp
push
ss
mov
movs
jle
cmps
mov
loope
mov
xchg
cmp
nop
push
clc
icebp
push
xor
mov
adc
icebp
les
fisub
adc
and
aam
lods
ss
lods
hlt
stc
xchg
(bad)
xchg
mov
ret
scas
cmp
xchg
enter
test
add
sub
jo
inc
ret
sub
das
icebp
sub
cmp
imul
fwait
adc
test
xor
mov
pop
jb
sub
retf
movs
aaa
adc
pop
add
dec
mov
inc
or
cmps
inc
sbb
dec
arpl
mov
sbb
push
mov
fidivr
adc
sti
rol
adc
adc
dec
pop
retf
sub
pop
push
(bad)
add
(bad)
xchg
mov
je
cmp
xchg
cmc
loope
add
sbb
bound
fdiv
mov
into
push
jp
repz
mov
bswap
repz
inc
fnstenv
xor
push
int
popa
les
cs
std
jl
(bad)
and
mov
test
scas
or
mov
pop
push
ss
dec
xor
adc
(bad)
bnd
mov
movs
jmp
jl
in
popf
cmps
sub
jno
xchg
les
movs
adc
push
lods
push
enter
inc
loop
mov
ret
dec
(bad)
pop
xor
inc
fwait
sub
inc
nop
sbb
shr
adc
cmp
rol
int3
cmps
dec
lods
pop
je
pushf
mov
xor
cmp
dec
outs
push
or
dec
and
adc
sub
repz
sti
sti
mov
ret
xchg
pop
mov
mov
call
sub
inc
sbb
out
cmp
shr
dec
push
fisttp
scas
mov
fcomp
cs
cmp
inc
imul
add
loope
div
stos
retf
test
cdq
push
outs
movs
loopne
scas
(bad)
int
xor
mov
jnp
dec
push
sbb
push
cli
and
jmp
cmps
outs
outs
mov
fsubp
fs
inc
leave
out
out
fdivr
or
mov
push
ins
sbb
pop
call
je
jbe
xchg
jge
push
aam
jmp
mov
es
neg
add
add
dec
xchg
cmp
add
jo
aaa
scas
xchg
lods
test
ret
jl
sbb
jmp
test
cmp
out
adc
sbb
add
mov
dec
in
in
mov
imul
push
cmp
and
or
imul
adc
pop
data16
sub
adc
push
or
push
cmps
ror
mov
daa
movs
mov
xor
dec
int3
push
shl
mov
iret
or
aas
pop
fcmovbe
mov
jge
inc
push
fs
dec
imul
stos
sbb
fadd
pop
push
cmp
mov
outs
mov
mov
xchg
xchg
rol
scas
jb
ret
sbb
shr
bound
int3
retf
or
sbb
mov
scas
out
movs
dec
scas
dec
lods
aam
ret
adc
inc
pop
jbe
xchg
out
arpl
mov
popf
ins
rcl
js
dec
mov
div
jae
retf
inc
add
ins
mov
fild
push
fsub
or
(bad)
xchg
add
add
xor
popf
pop
mov
jbe
adc
push
int3
jnp
and
and
cs
fs
call
clc
sub
imul
jg
stos
mov
mov
neg
pop
out
(bad)
push
sub
push
mov
or
call
fist
pop
popf
clc
xor
jl
shl
jge
inc
cli
es
inc
xor
jp
xor
loopne
arpl
adc
xor
cdq
adc
icebp
push
popa
add
popa
stos
mov
xchg
jp
popa
outs
in
into
icebp
jbe
stc
les
cmp
or
push
div
or
imul
pusha
movs
leave
and
xchg
pop
ja
sub
mov
imul
mov
nop
mov
sti
push
mov
xor
int
mov
and
jns
pop
(bad)
mov
mov
iret
cmps
xchg
adc
sbb
mov
scas
into
mov
or
mov
sahf
dec
inc
enter
repz
test
(bad)
ins
sbb
mov
jl
mov
and
or
leave
inc
cdq
imul
inc
xchg
pop
cli
mov
(bad)
movs
fs
loopne
dec
repnz
mov
and
dec
mov
push
scas
sbb
cmps
retf
(bad)
(bad)
in
xor
fs
xchg
push
lock
or
and
mov
cmovbe
test
cmp
outs
daa
sbb
mov
ficom
xor
cmp
jle
mov
jmp
push
pop
nop
push
add
fld
mov
(bad)
ja
daa
icebp
jbe
mov
mov
test
ja
ins
sbb
sti
mov
or
(bad)
mov
dec
leave
aaa
fdiv
dec
inc
cmps
push
mov
shr
push
cdq
and
pop
adc
pop
push
pop
push
jmp
push
loope
aam
lea
lea
out
rcl
cmp
sbb
inc
lods
xlat
fild
and
cmp
in
clc
xor
mov
dec
cmps
inc
(bad)
mov
add
adc
fwait
sbb
rcl
cmp
fst
xchg
xchg
xor
pop
dec
cmp
sbb
in
and
adc
mov
xchg
dec
mov
sub
ins
cmc
nop
imul
outs
je
push
loop
aas
push
fwait
or
(bad)
stc
cmp
dec
xor
sbb
sbb
inc
xchg
dec
lods
and
aad
nop
cld
adc
inc
or
inc
add
adc
mov
and
push
adc
cdq
mov
mov
pop
pop
movs
jmp
mov
jne
enter
push
ss
cwde
push
mov
clc
test
and
dec
sbb
cwde
xchg
movs
push
mov
(bad)
ins
(bad)
adc
push
rcl
je
jg
pop
or
call
xor
and
shr
mov
pop
mov
push
sar
fsincos
and
repz
js
popf
xchg
out
dec
fst
sbb
mov
lods
sub
fld
cmp
std
cli
retf
ja
sub
loope
repnz
call
adc
es
cli
fwait
or
sbb
and
rcr
mov
inc
add
jb
repz
xor
shr
pop
mov
cld
cmp
or
push
(bad)
push
mov
xor
data16
loop
mov
mov
push
xor
je
loopne
jo
cli
std
adc
inc
dec
xor
pop
jg
jno
repnz
fwait
jg
pushf
jmp
inc
dec
repnz
rcl
fist
sub
popa
xchg
mov
popf
pop
sahf
pop
add
aad
xchg
cld
push
sub
adc
(bad)
push
pushf
call
movs
icebp
mov
pop
out
xchg
cmps
or
scas
pop
mov
cmp
cmps
repz
push
jecxz
mov
mov
sub
jp
rcr
jne
mov
loope
pop
ss
pop
fucomp
int
pop
lea
mov
scas
sbb
and
push
neg
bound
ins
(bad)
sub
dec
jnp
lods
inc
mov
pop
mov
push
dec
(bad)
mov
inc
and
mov
pop
push
loop
nop
and
outs
dec
out
inc
call
sub
xor
test
in
rol
jb
pop
push
mov
or
cli
ja
push
add
scas
dec
xchg
dec
jae
clc
test
adc
jmp
out
and
cmp
call
pop
cmps
mov
in
jle
jge
test
cmps
daa
pop
retf
add
push
rcl
(bad)
test
mov
lock
addr16
or
outs
xor
ror
sbb
dec
test
mov
inc
test
or
bound
stos
push
and
push
sub
xlat
xchg
pop
xor
xor
ret
pushf
add
ins
dec
jmp
add
cld
iret
dec
mov
pop
lds
in
retf
xchg
outs
das
and
cdq
cmp
cwde
or
mov
repnz
mov
pop
pop
lock
inc
mov
mul
fs
inc
mov
dec
inc
in
and
push
test
cmp
loopne
shl
pop
xor
mov
fnstcw
clc
repz
xor
sbb
xchg
lea
in
repz
shl
pop
add
(bad)
retf
fiadd
jb
xlat
inc
call
push
call
mov
rol
xor
cmp
fwait
pushf
xchg
out
push
cmp
not
and
xlat
sub
add
sbb
ins
pop
aas
fsub
jbe
js
fcom
fbstp
popa
jb
jno
jle
push
aas
(bad)
aas
fbstp
rol
adc
sbb
rcl
push
mov
sbb
dec
retf
ins
ficom
sub
or
fwait
inc
cmps
jmp
sub
icebp
in
push
xchg
int3
xor
js
sti
cmps
mov
pushf
pop
dec
inc
jl
rol
js
rcpps
xchg
fadd
cmp
mov
int
xor
fcom
nop
call
push
adc
adc
mov
adc
lods
inc
inc
push
jmp
sub
outs
mov
test
aam
mov
fisub
retf
jbe
iret
lods
sar
adc
daa
xchg
push
push
dec
and
mov
popa
addr16
push
loop
jmp
pusha
and
in
or
xchg
lods
pushf
call
push
fld
xchg
xor
mov
imul
popa
dec
ds
xchg
jmp
cmp
xor
pop
inc
imul
xchg
mov
xchg
mov
bound
sub
lods
push
je
push
or
(bad)
in
fincstp
jae
imul
mov
test
sar
iret
js
pusha
movs
cmc
int3
xor
cmp
xchg
(bad)
out
cmp
dec
xchg
(bad)
push
mov
mov
mul
adc
dec
mov
and
sar
and
xchg
sub
pushf
ret
jmp
scas
mov
test
dec
push
cs
outs
sub
and
popf
cmp
xchg
nop
cld
inc
add
mov
movs
dec
push
scas
pop
lahf
pop
mov
mov
in
sbb
fs
ret
jle
dec
adc
push
cmp
pop
icebp
pop
scas
pop
std
xchg
je
jl
call
mov
stos
cmc
mov
movs
mov
(bad)
mov
hlt
add
fs
sahf
loope
mov
or
inc
pushf
jbe
mov
fwait
cmp
in
sub
jnp
fs
call
mov
lahf
sub
and
jmp
lahf
loop
enter
out
stos
jl
test
dec
pop
xchg
mov
scas
ins
dec
and
sbb
or
adc
inc
push
mov
clc
in
dec
sahf
sbb
rcr
fisttp
jecxz
push
cmps
dec
das
shl
dec
and
outs
lods
push
cmc
frstor
jne
xchg
push
dec
out
pushf
fnstenv
(bad)
push
mov
mov
shl
scas
mov
loop
loope
pusha
lods
push
sub
xor
popf
retf
mov
movs
pop
pop
scas
loope
(bad)
ds
in
pop
mov
pop
cmc
jl
cld
repz
mov
neg
pusha
xor
test
sar
pop
fwait
and
pushf
add
outs
xchg
inc
pop
dec
sbb
xor
xchg
add
fidiv
mov
sbb
idiv
pop
inc
jns
cmc
fbstp
shl
push
sbb
push
lods
test
test
ss
fist
mov
push
fnstcw
or
xor
mov
gs
pop
add
aaa
dec
ja
mov
out
inc
add
pusha
sub
cmp
rol
inc
or
cmp
or
es
fisub
mov
sbb
ret
lods
mov
mov
sbb
sbb
push
fidivr
push
cmp
cmp
fwait
mov
pop
sub
shl
sub
mov
add
movs
aam
jnp
mov
cmp
mov
jge
add
int
in
add
aam
xchg
mov
adc
js
mov
inc
daa
js
inc
shl
or
xor
jns
outs
or
xor
int
jae
mov
adc
sub
loope
lea
ins
cmps
cmp
mov
ds
xchg
int
(bad)
xchg
sti
dec
mov
jae
aaa
xor
sub
outs
dec
pop
test
fistp
movs
xor
push
cmp
and
js
adc
pusha
jae
mov
push
outs
ins
cmp
outs
fwait
dec
inc
enter
push
dec
jl
iret
jl
or
rol
and
mov
js
jg
adc
das
icebp
inc
test
cmps
retf
mov
aad
sub
xor
(bad)
mul
mov
dec
or
lods
addr16
in
jg
je
aam
lock
jae
jae
icebp
js
mov
stos
push
mov
dec
push
xchg
mov
scas
jno
(bad)
loop
shl
push
fst
outs
xchg
jmp
in
sti
outs
test
xchg
shl
(bad)
nop
jno
sbb
xchg
sbb
clc
out
and
in
xor
adc
add
cmp
daa
adc
js
mov
mov
mov
arpl
test
dec
adc
mov
mov
aam
ins
retf
and
push
jmp
pop
jecxz
sbb
mov
cmps
movs
aam
int3
je
test
add
fld
pop
xor
add
mov
jno
fstp
inc
jmp
dec
pop
and
pusha
out
loop
fimul
mov
fnsave
and
or
mov
rcl
sub
jl
es
sbb
sbb
repnz
mov
fcom
loop
sub
push
retf
fdivr
daa
sub
push
sub
cmovg
mov
mov
inc
jb
arpl
push
ja
test
pop
xchg
and
(bad)
fld
xchg
mov
sub
sub
xchg
popf
adc
test
jl
adc
xchg
cmps
repz
int
inc
push
jns
outs
das
jne
jle
jl
jmp
jnp
rol
mov
jo
fstp
(bad)
mov
bound
jb
rol
iret
std
push
dec
stos
sbb
sbb
pop
shl
fild
fbld
cmp
sahf
arpl
sbb
pop
push
xchg
movs
adc
mov
pop
sti
stc
mov
mov
fwait
in
xor
out
jo
or
jnp
pop
mov
imul
fadd
shr
xchg
xor
xor
cld
lea
js
sbb
push
push
add
movs
jne
xchg
or
jmp
and
pop
test
icebp
dec
retf
push
imul
xchg
or
push
mov
stos
hlt
sub
fsub
sub
out
sbb
addr16
imul
mov
cmp
jns
sbb
sti
jmp
fs
xor
jae
xchg
mov
jmp
and
inc
mov
je
stc
in
inc
retf
fwait
xchg
xchg
mov
fldenv
sbb
movs
test
repz
std
repnz
sbb
adc
or
sub
test
push
retf
retf
cmps
adc
dec
cmp
pop
test
xchg
mov
xor
xchg
movs
sub
adc
scas
into
ret
push
sub
rcr
shl
push
mov
add
popa
cld
pop
fbld
lods
xchg
clc
mov
xor
imul
jnp
stos
iret
dec
stc
scas
jp
hlt
les
hlt
enter
leave
sbb
leave
mov
inc
call
xchg
fucomip
push
jg
or
or
sti
push
xchg
lahf
(bad)
jo
or
(bad)
fwait
xchg
in
or
jns
push
pop
xchg
popf
dec
aam
imul
ret
push
push
sbb
call
aaa
mov
pop
push
(bad)
jl
shl
dec
retf
push
outs
adc
fld
pop
loop
movs
xor
mov
pop
into
sbb
mov
mov
cmp
div
pop
dec
shr
add
xchg
push
hlt
xchg
scas
cmp
int3
or
adc
sbb
popf
pop
jns
ror
cmp
dec
push
push
(bad)
pusha
jl
jle
sti
cld
add
push
push
mov
test
into
inc
sbb
fnstcw
out
adc
fdiv
adc
test
jmp
mov
sub
xchg
addr16
ret
adc
sahf
call
cli
or
pushf
js
daa
les
(bad)
jae
pusha
loopne
not
adc
call
push
mov
jle
or
mov
inc
scas
mov
popf
clc
jns
push
mov
adc
inc
neg
mov
xchg
dec
cmp
aas
pop
mov
test
pop
aas
rcl
cmp
sbb
dec
and
in
test
add
sti
push
jmp
sub
mov
popf
adc
aaa
cmps
mov
inc
es
bound
add
mov
movs
icebp
loopne
xor
xor
and
inc
or
and
fst
(bad)
(bad)
ret
add
mov
pusha
pusha
fild
outs
enter
sbb
lea
leave
loope
xor
outs
dec
out
sahf
jb
mov
mov
cs
(bad)
test
xchg
or
cmc
pop
fwait
pop
jne
mov
call
cmps
jb
cmp
or
dec
jno
mov
sub
cmp
jbe
jo
mov
sbb
fadd
popf
lds
cdq
mov
clc
jbe
pop
test
xor
push
xchg
cli
mov
sti
cmp
cmp
jae
in
sbb
sub
pop
imul
push
mov
js
pop
(bad)
in
xor
popa
lods
jge
in
cs
sbb
out
dec
fbld
jae
das
out
xor
mov
ficomp
das
mov
jno
outs
sar
xchg
mov
stos
test
lahf
or
or
mul
fwait
(bad)
repnz
and
or
(bad)
mov
retf
or
pop
inc
dec
mov
or
inc
iret
sub
ret
dec
dec
pusha
adc
jno
movs
mov
in
jmp
cld
shl
cmp
mov
movs
out
test
lods
retf
pushf
jg
pop
lock
sbb
call
add
ror
mov
(bad)
sti
jb
xchg
test
and
clc
enter
pop
bound
fidiv
jb
aas
mov
sbb
inc
lahf
cdq
jno
push
movs
outs
mov
inc
cdq
mov
add
jns
rcr
(bad)
pop
push
shl
(bad)
mov
mov
aas
sub
fwait
aas
(bad)
call
repnz
mov
adc
mov
mov
xchg
je
or
mov
mov
or
scas
mov
and
mov
movs
xor
sbb
inc
imul
pop
and
rcl
mov
imul
data16
and
fsub
sbb
fs
mov
gs
les
ds
cmc
ins
cmp
leave
mov
inc
and
jne
push
movs
fiadd
hlt
add
mov
sti
pop
mov
rcl
leave
xor
out
cmc
push
jge
jecxz
std
mov
mov
aaa
xor
xor
pop
idiv
jo
stos
pop
or
outs
pop
dec
cmc
push
adc
shl
jb
loope
cmp
jg
mov
pusha
mov
daa
retf
dec
das
dec
outs
mov
or
in
push
dec
aaa
rol
dec
pop
sub
mov
movs
imul
mov
or
add
inc
sub
sub
inc
jns
mov
lods
xor
lahf
ror
sub
cmp
xor
dec
cmp
clc
jge
leave
or
dec
sub
pop
mov
pop
fs
(bad)
fbld
dec
ret
add
into
fcmovne
adc
movs
lds
lods
adc
pop
xlat
and
inc
sub
test
fwait
jge
jnp
inc
sbb
add
or
or
mov
sbb
es
pop
ret
daa
addr16
cmp
rcr
arpl
mov
mov
sub
imul
aad
add
pop
pop
xchg
cwde
xchg
or
adc
mov
(bad)
pop
xor
mov
outs
rcl
xchg
popf
push
cmp
pusha
xchg
jo
push
out
out
shl
bound
cmp
mov
mov
loop
add
rcl
(bad)
test
xchg
pop
imul
xor
inc
scas
mov
inc
pop
lahf
push
sub
(bad)
dec
dec
mov
(bad)
sbb
ret
fimul
push
je
fwait
gs
fisttp
jge
sub
ucomiss
sbb
pop
dec
sbb
test
push
ja
pusha
and
push
enter
pop
pop
inc
cmp
repnz
push
lock
push
lock
int3
push
xor
pop
outs
nop
pushf
jbe
ins
cmp
nop
fcomp
(bad)
mov
(bad)
cmp
sub
fidiv
cmp
(bad)
sbb
push
aas
outs
fmul
and
xor
pushf
mov
cld
loop
mov
or
sub
scas
dec
adc
and
adc
mov
mov
retf
fmul
fdiv
xchg
mov
xlat
adc
inc
sbb
out
retf
popa
idiv
(bad)
mov
inc
mov
xor
add
and
mov
jl
add
jno
clc
lock
(bad)
in
jne
push
rcl
or
int3
push
xchg
sbb
leave
out
pop
jle
div
mov
mov
jnp
les
inc
or
btc
dec
pop
pop
inc
jl
jae
add
push
pop
or
scas
(bad)
fwait
mov
xchg
sbb
pop
pop
dec
sub
(bad)
popa
cmp
jns
mov
jo
bound
nop
cmp
fisttp
or
setbe
push
data16
push
repz
jp
mov
ror
cli
xchg
fwait
push
jne
inc
mov
jg
fwait
mov
sti
or
leave
add
push
jb
dec
add
cmp
pushf
test
push
inc
cli
xor
out
mov
ins
add
aad
jno
xor
repnz
call
out
mov
mov
lahf
(bad)
fsub
inc
ss
fbld
sar
sbb
sbb
xchg
xor
xchg
xchg
mov
xchg
mov
pop
jnp
sbb
sub
jb
inc
xchg
(bad)
ret
inc
(bad)
jge
popf
fld
mov
add
dec
push
add
push
gs
ja
inc
leave
hlt
adc
ret
sbb
mov
test
xor
push
inc
in
inc
and
int3
fild
mov
sbb
pop
cmp
xchg
test
sbb
pusha
sbb
(bad)
cmp
cmc
or
pushf
add
test
sub
xor
cli
add
cwde
pop
icebp
jp
push
adc
test
lea
ds
xor
ret
jmp
(bad)
sbb
jno
add
cmp
sbb
mov
lock
sub
jo
rcl
out
and
sahf
cld
sbb
rcl
mov
clc
aaa
aad
stos
mov
rol
mov
inc
fsub
js
data16
sbb
outs
xchg
lods
push
xchg
sbb
pop
push
icebp
pop
mov
push
int3
xchg
es
xor
in
pop
stc
int
sbb
mov
out
cmp
jne
push
mov
cli
or
hlt
or
sbb
mov
jb
or
movs
mov
fldcw
xor
test
paddw
jns
inc
aam
icebp
mov
push
or
xor
ss
mov
adc
sub
fs
pop
jb
mov
repz
cmp
jns
rcl
shl
cmp
push
inc
mov
sub
out
ret
loop
sbb
push
or
jle
push
inc
call
neg
xchg
adc
clc
mov
mov
stos
mov
ins
js
cmp
pusha
or
jb
xrelease
in
sbb
stc
cli
fcom
fbstp
(bad)
imul
cmp
lock
push
push
cld
ins
jmp
mov
into
jecxz
sub
clc
stos
hlt
pop
sub
cmc
fs
xchg
mov
add
pop
retf
fsub
sub
pusha
(bad)
loope
push
cmp
inc
or
out
pop
lods
mov
cmp
retf
cmp
imul
mov
fsub
mov
cmp
shl
xor
cmps
iret
neg
out
xor
dec
ins
enter
lds
lahf
jbe
(bad)
inc
outs
call
add
pop
(bad)
inc
in
int
sbb
sub
jne
pop
jg
jg
or
imul
jb
push
xchg
or
mov
adc
jb
ja
sub
inc
aaa
scas
ds
jno
add
pusha
pop
cdq
sub
jmp
xor
push
mov
inc
cld
xchg
adc
mov
mov
(bad)
ins
xchg
jmp
mov
cmp
adc
int
ss
sub
or
sub
adc
cmp
in
mov
int3
rol
mov
mov
fiadd
pop
and
mov
loopne
fcom
push
jno
xor
fstp
inc
mov
stos
enter
adc
iret
stc
sub
popa
mov
div
pop
fnstcw
pop
cmps
fbld
cwde
dec
mov
pop
jle
scas
addr16
add
out
mov
mov
xadd
cmp
test
jmp
lea
add
pop
adc
popf
push
mov
push
pushf
adc
dec
jmp
pop
sub
bound
adc
into
sbb
cmp
fld
imul
mov
xor
xor
or
jnp
sub
push
loop
call
push
xchg
push
jmp
rep
in
or
adc
loopne
xchg
out
jge
loopne
sahf
arpl
loope
and
fxch
mov
rcl
push
out
test
adc
push
xchg
jae
ror
in
mov
int3
pushf
jg
and
inc
mov
push
jno
mov
loope
and
fs
mov
data16
push
dec
add
push
mov
pop
rol
jnp
or
add
movs
retf
mov
adc
adc
out
(bad)
movs
sub
(bad)
jmp
sub
push
push
fmul
or
add
jno
lods
loop
or
pop
in
lds
sbb
adc
test
pop
sub
das
mov
mov
push
rol
push
xchg
in
shr
mov
pushf
fnstenv
icebp
sbb
cmp
jmp
sar
test
frndint
xchg
xchg
mov
cld
jae
in
mov
inc
fwait
xchg
lods
jnp
mov
cld
dec
ficom
fadd
jbe
push
sub
data16
jae
mov
mov
sti
add
cmc
clc
and
int
and
jle
daa
pop
hlt
and
mov
cmp
or
cdq
into
sbb
inc
aaa
clc
and
sub
push
(bad)
push
out
ja
and
dec
or
dec
sub
pop
mov
push
lods
(bad)
mov
hlt
mov
into
es
data16
mov
push
or
popf
jg
jae
inc
movs
lods
mov
jae
das
jnp
jmp
jmp
push
adc
mul
push
add
test
cs
ret
inc
push
pop
pop
loop
jle
sbb
iret
inc
mov
loopne
js
(bad)
sbb
xlat
cs
cmp
dec
xchg
jle
inc
sub
in
inc
push
leave
and
movs
movs
pusha
adc
and
xchg
xor
xchg
sub
test
or
repz
mov
mov
dec
xchg
inc
jbe
mov
mov
mov
cdq
call
movs
ins
stc
mov
adc
push
leave
sub
cmp
xor
ds
jmp
jno
mov
mov
jmp
or
jmp
imul
mov
jns
xor
ss
gs
ds
inc
sub
mov
das
push
or
inc
repz
cmps
dec
cmps
dec
xchg
sub
jecxz
inc
push
mov
adc
xlat
dec
lock
inc
xchg
test
sub
push
jmp
push
jle
xchg
mov
cmp
push
cmp
or
push
in
int3
aas
lods
adc
mov
inc
jb
xchg
dec
mov
in
mov
aas
push
mov
add
dec
sbb
sub
ror
dec
repz
mov
jmp
rcr
test
test
int
jae
adc
loopne
dec
push
sbb
pop
iret
popa
adc
test
test
push
sub
and
pushf
and
mov
(bad)
jns
jge
cmp
sub
push
push
popa
xchg
and
mov
xchg
into
lea
adc
cmp
add
pop
pop
mov
dec
fst
inc
cwde
inc
mov
neg
lahf
lock
in
cmp
int
test
sub
in
bound
aam
cmp
mov
inc
or
sbb
and
mov
stos
xor
scas
nop
mov
jp
cmp
and
aam
and
xchg
out
pusha
cld
mov
push
or
inc
xchg
add
jbe
sub
push
cdq
ds
fwait
sbb
mov
(bad)
mov
test
stos
int3
cmp
sbb
push
ficomp
ins
(bad)
push
push
repnz
sub
inc
mov
sahf
lea
out
add
mov
fs
mov
test
sahf
pushf
inc
cs
xchg
or
inc
cmc
rcl
jecxz
sbb
rcr
sbb
adc
jl
inc
loope
or
xchg
mov
shr
jnp
fst
or
dec
and
jl
inc
xor
popa
in
cmp
jmp
jbe
xchg
mov
jmp
sti
sub
mov
scas
loopne
cs
push
jo
adc
adc
in
es
retf
lods
adc
xchg
in
aas
sbb
icebp
pop
sbb
not
mov
(bad)
add
pop
xchg
imul
test
stos
not
inc
mov
movs
inc
push
out
test
xor
mov
ret
cmp
or
bound
sbb
ficom
xchg
push
ret
mov
(bad)
jmp
(bad)
out
push
pusha
push
jecxz
in
push
iret
icebp
addr16
inc
and
(bad)
ds
or
(bad)
dec
mov
pop
jne
ss
arpl
retf
and
outs
(bad)
shl
mov
test
xchg
(bad)
ins
cmp
mov
shl
outs
xchg
les
xchg
sbb
clc
stos
sbb
add
fld
retf
jno
adc
dec
cmps
js
stc
loope
mov
(bad)
in
push
adc
add
jp
sub
xlat
in
jmp
mov
xlat
lock
and
dec
jns
xchg
push
das
jne
pop
push
call
retf
pop
or
or
jg
inc
in
push
and
cmp
jle
setne
(bad)
lea
add
inc
(bad)
and
imul
xchg
push
mov
jo
lahf
jl
(bad)
push
xchg
sub
setb
imul
xchg
mov
call
add
cmp
mov
movzx
shr
fldenv
cmps
lds
dec
cwde
sbb
xor
sbb
jmp
push
xlat
in
test
add
mov
add
mov
(bad)
movs
loopne
fwait
lds
add
in
pop
call
add
push
inc
out
mov
jmp
jmp
cmps
stc
(bad)
enter
pusha
test
xchg
mov
jmp
push
push
stos
xchg
movs
aaa
dec
dec
mov
push
sbb
xchg
jne
jae
sub
mov
scas
rep
scas
lock
lock
push
pop
mov
or
lock
mov
adc
adc
(bad)
push
inc
data16
stos
mov
imul
jmp
in
scas
xor
fcomp
fwait
and
lahf
xor
push
loope
jae
pop
mov
mov
ins
jmp
out
shl
loop
xor
ret
test
jbe
jae
sub
jecxz
mov
cmp
shl
dec
mov
push
in
ja
movs
sub
pop
push
call
xchg
push
pop
xor
dec
arpl
add
aas
sub
and
test
test
(bad)
ss
hlt
and
loop
sahf
sahf
mov
imul
test
jg
push
sbb
fnstenv
mov
jmp
popa
push
inc
(bad)
fxch
sbb
fwait
xchg
or
xor
xchg
scas
pusha
jnp
sti
mov
sub
vfrczsd
xchg
xor
cmp
adc
mov
adc
mov
lods
rol
scas
mov
pop
push
pushf
(bad)
ffreep
dec
cmp
cmc
fst
outs
jo
jmp
push
ins
int
icebp
jle
loope
xor
xchg
ins
cld
imul
xchg
or
fistp
test
mov
arpl
adc
in
jp
clc
sub
movs
shl
and
dec
mov
clc
add
data16
ror
pop
xlat
adc
xor
inc
jo
pop
aad
adc
dec
inc
mov
pop
setle
ins
mov
(bad)
mov
push
repz
cdq
ss
movs
jl
addr16
(bad)
test
cmp
and
or
inc
mov
cmp
mov
adc
mov
imul
or
movs
sub
xlat
popa
push
adc
push
ins
dec
mov
or
cmp
cmc
inc
cmp
mov
push
sub
jge
sub
mov
fstp
adc
inc
ins
shl
push
mov
movs
movs
adc
push
push
cdq
adc
adc
(bad)
(bad)
sbb
in
loopne
cs
fwait
pusha
inc
ficom
push
test
mov
in
loopne
mov
popa
xlat
xchg
(bad)
ret
out
arpl
sbb
mov
hlt
xor
jbe
sbb
test
jno
mov
pop
jg
mov
sar
fs
pusha
mov
mov
jo
push
sahf
sbb
inc
mov
and
xchg
ror
pop
sbb
cld
fwait
les
retf
call
push
bound
ret
pop
jl
jno
test
inc
jmp
ret
iret
jl
mov
into
jmp
mov
fidiv
jb
das
jae
icebp
std
mov
sub
sub
mov
ja
ins
scas
inc
fdivr
adc
nop
movs
xchg
lea
and
mov
stos
push
xchg
ror
cmps
push
and
mov
mov
ins
loop
(bad)
pop
and
xchg
jmp
mov
(bad)
or
enter
mov
dec
bound
push
inc
dec
jl
cs
into
ins
mov
mov
out
sar
leave
mov
mov
cs
cmps
gs
ret
mov
or
jge
xor
iret
inc
dec
jecxz
jb
add
inc
cmp
je
rcl
nop
and
mov
cld
mov
inc
adc
or
push
xchg
mov
loopne
mov
jb
push
mov
in
push
push
mov
movs
adc
retf
mov
clc
fldcw
xor
test
je
push
sbb
js
jne
mov
aad
leave
xor
pop
iret
cmps
std
sbb
sti
fdiv
and
dec
mov
or
arpl
adc
repnz
test
jg
mov
out
movs
mov
push
push
xlat
lods
jecxz
dec
test
call
and
out
ret
fsub
mov
int3
test
mov
loop
mov
int
sub
dec
or
add
lods
xor
xchg
jecxz
xor
(bad)
outs
loop
mov
push
mov
out
mov
test
push
out
out
pop
rcr
std
pop
ds
loopne
dec
fimul
push
jecxz
fdiv
xlat
jle
dec
push
push
cmps
lahf
cwde
daa
pushf
loope
mov
stos
ret
mov
push
scas
sti
cmp
out
cdq
mov
(bad)
pop
fnstsw
outs
(bad)
mov
stc
call
push
les
mov
jg
cmp
fxch
outs
into
in
popf
aaa
fsubrp
fmul
xlat
ror
clc
sub
fisubr
lock
sbb
loope
aas
cs
inc
repz
loope
cs
lock
pop
fndisi(8087
popa
imul
loope
mov
sub
bswap
mov
add
cld
arpl
sahf
(bad)
outs
js
push
je
sub
add
jo
pop
push
mov
das
xchg
jno
jmp
ss
shl
inc
push
xchg
mov
inc
ror
mov
out
adc
out
ins
fist
icebp
mov
enter
retf
scas
jns
xor
lahf
add
out
cs
push
and
test
test
fmul
or
jge
inc
stc
xor
push
movs
lods
retf
and
inc
push
xor
es
adc
sub
mul
pop
mov
jg
adc
xor
lods
sub
(bad)
test
out
repnz
mov
xor
mov
jmp
fisttp
loopne
jbe
int3
cwde
dec
lock
jmp
and
inc
das
cli
pop
jmp
xlat
hlt
jl
out
cmp
and
add
cdq
dec
jmp
or
(bad)
je
xlat
push
fsubrp
xchg
cmps
xor
add
push
push
xchg
xor
sub
xchg
or
stos
mov
mov
sti
rcr
push
out
mov
lds
cmps
lods
cmp
or
loop
gs
loop
dec
dec
les
mov
pop
push
call
cmps
dec
push
stos
daa
add
push
in
(bad)
push
repnz
add
xor
fistp
mov
je
inc
mov
loop
scas
les
fcomp
fimul
xor
out
sub
out
mov
mov
sbb
pop
fild
in
test
add
shr
jne
or
inc
mov
pushf
sti
xor
xchg
(bad)
ins
sbb
xchg
dec
mov
sub
add
and
pop
in
stos
mov
mov
fcomip
call
sub
sub
pop
jmp
call
sbb
pop
repz
ins
mov
jo
mov
hlt
fisubr
sbb
xor
push
ins
ss
test
push
pop
mov
ret
push
fmul
call
es
mov
test
fist
add
xchg
mov
xchg
pushf
pop
and
aam
push
outs
xchg
sub
mov
push
int3
das
mul
data16
push
xchg
sbb
xor
retf
dec
jne
sbb
jnp
ja
scas
daa
push
jp
lock
xor
iret
and
push
push
or
and
loope
cs
and
out
xor
push
dec
pop
ds
inc
out
out
pop
mov
jmp
push
call
or
sbb
jmp
mov
call
movs
push
mov
and
out
xchg
ss
(bad)
adc
mov
out
movs
mov
xor
add
and
loope
sti
shl
pusha
xchg
mov
retf
(bad)
(bad)
sub
add
retf
jnp
popf
mov
test
xchg
dec
and
cmp
jp
test
or
push
cmp
push
pop
mov
mov
pop
push
push
xor
mov
sub
imul
mov
adc
cmps
outs
xor
into
psrad
idiv
adc
cld
add
jmp
(bad)
pop
push
mov
(bad)
cs
xchg
movs
mov
pop
xchg
lahf
aam
std
push
xchg
pop
jl
jae
mov
jle
test
sub
jle
outs
cmp
icebp
mov
or
add
mov
fcomp
ficom
mul
mov
adc
cmps
mov
enter
adc
ror
(bad)
pop
pushf
repnz
add
dec
inc
int
data16
sub
inc
enter
int3
int
es
fst
jno
push
jg
cwde
shl
cmp
adc
loop
xor
test
das
xor
mov
mov
pop
ror
or
mov
mov
inc
mov
or
mov
aam
arpl
push
movs
sub
jmp
imul
adc
arpl
pop
movs
ret
cld
lahf
jg
push
loopne
xchg
pop
iret
aas
mov
call
mov
mov
adc
scas
mov
cmp
sbb
xor
enter
lods
jmp
push
pop
adc
pmaxsw
ret
clc
xchg
arpl
xor
xor
imul
and
pop
imul
xchg
dec
repnz
shr
mov
adc
ins
mov
push
(bad)
jns
adc
and
and
mov
jns
into
inc
sub
das
xor
inc
es
inc
xchg
fisttp
jge
sar
mov
outs
popa
push
loope
imul
mov
pop
shr
mov
mov
inc
ficomp
xor
ret
call
out
loope
push
mov
(bad)
loope
fstp
cmp
push
popf
repz
aas
leave
push
cmps
aaa
cmc
push
add
sub
popf
mov
sbb
std
push
inc
xchg
dec
daa
sar
adc
fild
in
stc
(bad)
jl
mov
in
(bad)
push
add
adc
cdq
out
lock
and
and
vandps
fild
lods
mov
nop
mov
out
outs
shr
mov
cs
mov
jmp
xchg
pop
push
sub
and
pop
dec
rol
outs
jmp
cmc
cld
scas
stc
bnd
cmps
cmp
dec
bound
je
pusha
adc
pop
arpl
aas
adc
push
mov
call
(bad)
push
lea
(bad)
or
test
jnp
ret
dec
cmp
iret
sbb
(bad)
adc
pop
push
rol
mov
mov
aaa
cmp
(bad)
ins
outs
or
outs
mov
push
ins
dec
cmp
sar
mov
shl
lds
sbb
pop
xchg
daa
inc
mov
test
push
pop
push
jb
(bad)
ror
int3
add
dec
into
xchg
ret
jecxz
sar
mov
ret
mov
movs
push
mov
and
(bad)
xor
cmp
push
in
int
cwde
sub
adc
push
adc
mov
xchg
mov
adc
and
mov
stc
cmp
mov
xlat
cmp
(bad)
xchg
push
ins
mov
inc
es
mov
arpl
in
and
hlt
push
inc
xchg
out
(bad)
in
add
imul
loop
pop
mov
test
sahf
adc
fnstenv
push
in
je
mov
and
pop
(bad)
mul
cli
xchg
repz
sbb
(bad)
retf
adc
push
test
cmp
(bad)
fsubr
test
(bad)
data16
in
jbe
sub
inc
ins
stos
push
cmp
or
pop
retf
fs
test
hlt
or
adc
xchg
push
xchg
cmc
and
(bad)
test
mov
push
mov
daa
pop
and
mov
loopne
out
ror
es
add
in
popa
inc
fsub
ins
jmp
sbb
(bad)
xor
stos
mov
inc
outs
out
jne
jp
retf
mov
or
lock
mov
add
popa
out
pop
jp
dec
aaa
jb
push
jp
mov
mov
sbb
push
in
shr
jl
dec
test
adc
push
mov
loop
repnz
ja
cmps
in
dec
jmp
sbb
jae
dec
in
mov
int
pop
jae
mov
adc
jl
popa
jge
ins
mov
jae
jno
cmp
mov
js
lods
ja
cmp
mov
(bad)
in
retf
outs
push
mov
push
retf
push
pusha
cwde
mov
outs
adc
xlat
dec
ror
dec
dec
outs
outs
xlat
ret
and
push
mov
je
repnz
inc
ror
push
fdiv
aad
aam
cmp
or
add
scas
pop
jp
xor
icebp
add
push
inc
sub
ss
push
mov
push
shl
daa
sbb
mov
add
lock
mov
xchg
scas
mov
adc
inc
dec
cmp
sub
or
sub
push
fs
xor
addr16
fdivr
dec
xchg
mov
sahf
cmp
add
lock
sar
ret
mov
aaa
pop
scas
jb
sub
or
outs
pop
sub
lds
and
ins
aas
fcmovnb
retf
inc
iret
scas
loop
mov
xor
stos
push
int3
clc
sub
mov
mov
dec
jmp
sub
xor
or
jle
sub
dec
repnz
dec
xchg
cld
les
(bad)
test
lahf
fsub
std
rcr
inc
in
stos
jle
arpl
and
inc
sub
xchg
pop
jmp
stc
lods
iret
jl
ins
pop
dec
idiv
dec
inc
(bad)
fucomi
fwait
pmulhw
and
(bad)
lea
das
or
cmp
mov
push
shl
stos
out
cwde
js
fimul
push
test
ror
xor
dec
std
imul
pushf
pop
aaa
ds
fmul
(bad)
fstp
loopne
aaa
stos
dec
ss
stos
mov
ins
mov
cmp
jae
xchg
pop
jnp
xor
movs
jo
bound
daa
push
sbb
mov
pusha
fdivr
pop
inc
pusha
mov
jecxz
loop
in
sti
in
rol
xor
cli
inc
scas
shl
cmps
push
dec
into
push
jae
xor
lea
mov
gs
xchg
test
adc
jmp
(bad)
iret
jge
cmp
clc
xor
inc
iret
sbb
xchg
push
or
retf
aaa
nop
call
push
jmp
dec
or
sbb
dec
adc
and
imul
sbb
adc
ja
push
in
imul
lahf
stc
outs
and
inc
in
test
jmp
(bad)
cli
mov
sub
jae
ss
sbb
sbb
jo
(bad)
(bad)
popf
push
sub
sub
fcmovb
xchg
aas
popf
or
sbb
jmp
lds
dec
jmp
mov
mov
retf
cdq
mov
out
dec
(bad)
(bad)
es
mov
or
cmp
push
(bad)
sbb
jbe
inc
test
sbb
clc
push
jnp
ins
das
call
int
xchg
stos
(bad)
fs
mov
cmp
enter
xchg
inc
cld
push
sar
dec
fdivr
stc
xor
jmp
or
or
and
hlt
inc
mov
les
outs
or
and
sti
pop
sub
jo
jecxz
movs
mov
shr
aas
(bad)
dec
les
cli
fdivr
retf
lahf
add
mov
sub
cmp
push
xor
cld
add
test
fnsave
dec
pop
add
xor
sub
in
pop
test
xchg
sub
inc
mov
pop
jnp
into
pop
test
cdq
or
in
push
jmp
stos
mov
(bad)
pop
in
inc
or
sub
sbb
or
addr16
jns
and
xchg
dec
fnsave
addr16
mov
imul
fwait
or
cmps
out
dec
sub
ror
mov
mov
das
push
ss
cmp
xor
sub
ins
push
cmps
pushf
scas
inc
push
out
jns
pop
enter
scas
cli
loopne
inc
call
mov
pop
cmp
cli
pusha
jns
cmc
loop
inc
jg
cs
fisub
scas
cli
adc
sbb
cmp
icebp
int
(bad)
mov
and
repz
sbb
das
mov
adc
stc
ret
jo
ja
(bad)
mov
xchg
push
sub
je
jbe
cs
cli
mov
test
or
mov
push
aaa
(bad)
dec
and
(bad)
fmul
dec
xor
cmp
mov
push
out
push
fisub
sub
repnz
xchg
mov
in
loop
dec
rcr
daa
nop
jns
les
movs
ss
js
mov
inc
and
pop
or
jno
xor
xchg
into
sbb
xor
pop
mov
bound
pop
cdq
std
gs
mov
movs
enter
cmps
out
out
shl
xor
lea
sub
push
adc
mov
jmp
das
adc
(bad)
lods
and
stc
in
cmps
jne
stos
cdq
test
pop
outs
out
pop
sub
or
aas
dec
fs
dec
aaa
xchg
jmp
enter
mov
sub
cmp
push
push
pop
push
xchg
mov
push
cmp
fild
pop
mov
test
ss
and
sub
stc
fisubr
shl
cs
lock
mov
in
or
ins
retf
push
and
shl
or
jg
in
fwait
sub
sub
xor
std
pop
pop
mov
dec
retf
dec
or
hlt
push
fisubr
inc
mov
neg
out
(bad)
push
sbb
push
add
in
mov
mov
inc
inc
ins
ret
imul
cmp
pop
and
mov
les
xor
loopne
int3
movs
test
out
and
and
jmp
push
mov
and
mov
or
loop
mov
cmp
and
pushf
mov
jmp
cmp
neg
mov
pandn
gs
xchg
sub
bound
pop
fist
add
xor
test
jecxz
inc
dec
push
jecxz
fisubr
shl
mov
and
(bad)
popa
cmc
sbb
enter
ins
sbb
add
ret
hlt
out
pop
std
mov
push
mov
mov
or
and
pop
cmc
jle
dec
inc
(bad)
(bad)
or
mov
call
cmp
hlt
mov
leave
psrad
repnz
add
push
and
or
int3
into
icebp
jne
das
fs
jle
fild
retf
pushf
xchg
mov
inc
cwde
mov
pop
call
pop
ja
lea
in
mov
adc
out
mov
fsub
in
retf
xor
pop
jbe
lods
ror
test
into
jle
xchg
cmp
pusha
pop
jmp
jmp
ficom
mov
push
xor
test
fcomp
or
xor
int3
inc
xchg
add
pop
and
mov
adc
cmps
addr16
jae
cs
movs
jmp
cmc
xchg
mov
pop
cmc
push
test
add
mov
inc
hlt
sbb
mov
xchg
jb
bound
imul
pop
bound
pop
and
sbb
dec
(bad)
nop
movs
shr
test
add
mov
push
sbb
imul
cmc
mov
icebp
rol
or
pop
fwait
pop
jbe
call
cld
xchg
xor
ja
inc
das
iret
pop
cmp
out
sub
dec
out
lods
aad
mov
adc
aas
test
xlat
inc
inc
in
push
jecxz
loope
adc
stc
mov
mov
mov
sar
add
sahf
xor
fdiv
test
and
lods
jns
out
add
push
jmp
jl
jle
push
and
dec
lahf
xchg
jp
jo
jnp
dec
adc
sbb
sti
mov
jle
aas
xchg
xor
ja
inc
xor
xchg
push
mov
aam
movs
rol
dec
cmp
lahf
pusha
lock
jae
(bad)
and
std
mov
push
cmp
xlat
mov
adc
nop
lds
in
pop
xor
inc
adc
push
jp
test
sar
shl
push
scas
les
into
stos
shl
adc
push
ds
sbb
mov
sub
test
add
mov
xchg
mov
out
ret
repnz
js
add
shl
mov
sub
(bad)
inc
cmp
mov
push
adc
scas
mov
and
and
test
ror
out
mov
out
jo
xchg
lea
scas
jecxz
inc
xor
pop
pushf
in
loopne
jno
lods
sub
pop
retf
jge
scas
sub
adc
(bad)
icebp
and
stos
sbb
inc
mov
in
mov
sub
and
movs
add
sub
mov
pusha
cwde
push
xlat
enter
mov
pop
leave
stc
rol
xchg
(bad)
sbb
jecxz
push
or
adc
stos
inc
add
push
and
in
outs
jnp
cmp
sti
adc
daa
xor
mov
cmp
cwde
or
xchg
or
push
addr16
jmp
mov
sbb
rcr
movs
pop
xor
rcl
mov
mov
(bad)
pop
rol
jmp
pop
scas
loope
sub
dec
aas
scas
dec
ss
mov
or
mov
(bad)
popf
xor
(bad)
rol
add
push
addr16
repz
aas
mov
and
mov
fs
lahf
xor
test
push
add
pusha
or
loop
cli
jae
adc
repnz
outs
push
arpl
xor
mov
call
inc
mov
sub
cwde
mov
adc
rcl
push
jmp
ins
fwait
adc
push
into
push
fcomip
adc
ins
dec
(bad)
(bad)
mov
fild
popf
shr
inc
mov
pop
or
add
push
xor
sub
(bad)
idiv
sbb
into
sub
push
ins
mov
lods
(bad)
popf
idiv
mov
pop
imul
out
cmps
popa
cmc
mov
cs
and
fld
xchg
pop
pop
lods
stos
jno
je
pusha
(bad)
loop
div
jne
push
cmp
test
sbb
fmul
retf
in
sub
cld
fcom
aaa
xchg
scas
jo
es
loope
push
push
adc
movs
fucomip
add
data16
push
cwde
mov
cli
(bad)
mov
mov
push
(bad)
loope
inc
stc
jne
cmp
fiadd
push
pop
mov
inc
and
and
imul
xchg
ret
sbb
mov
xor
xchg
and
or
loop
add
and
jmp
retf
movs
iret
enter
push
lds
push
pop
ins
xor
inc
jmp
pop
out
add
maskmovq
neg
retf
mov
aas
retf
jno
cmp
xchg
mov
dec
jb
cwde
les
push
js
push
lock
sahf
bound
ins
and
push
push
les
and
out
mov
rol
push
sub
cmp
pop
movs
stc
xchg
in
ins
jnp
jnp
retf
sbb
jmp
or
and
jg
stos
shr
cli
xchg
xor
mov
pop
pop
sub
(bad)
mov
repnz
pop
int3
fstp
ficom
cmp
lods
xor
in
cmp
stos
cmp
(bad)
jle
sbb
pusha
pusha
sbb
dec
adc
jns
mov
scas
mov
outs
mov
jecxz
in
cmp
dec
add
icebp
sar
sbb
push
(bad)
xor
fbstp
adc
aas
enter
fstp
pop
push
pop
mov
cmp
or
movs
lds
or
loop
inc
jns
dec
inc
pop
mov
les
retf
aas
lahf
jge
pop
sbb
sbb
cmp
leave
sbb
ret
vcvtdq2pd
mov
sub
and
inc
jp
fstp
test
push
sbb
je
adc
pop
cwde
cmp
jl
rcl
dec
pushf
inc
sub
push
in
mov
mov
dec
push
sbb
pop
cmp
mov
push
fndisi(8087
xor
add
into
push
sbb
mov
cmc
cld
or
ja
rcr
push
inc
fistp
cwde
mov
rcl
shr
mov
stos
mov
in
jo
jmp
ds
shl
push
es
inc
fimul
outs
sub
pushf
xchg
inc
fisubr
cmps
mov
loope
and
inc
add
ds
mul
das
icebp
push
push
push
sbb
sbb
enter
iret
dec
sub
aam
(bad)
aaa
add
add
lahf
sub
xlat
mov
cld
sub
mov
loop
es
and
dec
mov
arpl
stc
inc
push
sub
loope
jb
sub
movs
sti
add
lock
cs
jnp
adc
push
lds
ja
stc
jmp
dec
jl
sbb
xor
call
call
adc
xchg
mov
and
movs
cmps
add
mov
push
push
fdivp
cld
push
imul
cwde
pop
and
xchg
mov
repnz
mov
(bad)
xchg
mov
jmp
cli
mov
ror
outs
stos
dec
int
adc
cmp
inc
mov
pop
mov
daa
jnp
mov
das
pop
mov
jae
hlt
push
add
xor
outs
dec
cmp
mov
fcomp
xor
xchg
jle
retf
pop
xchg
pop
mov
fs
arpl
sbb
adc
cdq
stos
data16
out
stos
jae
cmps
ins
or
fucomi
jno
pop
mov
mov
pushf
mov
jl
sbb
or
jge
aaa
out
xor
retf
adc
sub
inc
(bad)
(bad)
sbb
or
out
ja
shl
jmp
jnp
adc
or
xor
xor
div
lods
xchg
loope
or
pop
and
cmp
sub
mov
fwait
mov
pop
jb
js
aad
mov
imul
loopne
shl
hlt
out
rcl
fiadd
cwde
ins
pop
push
mov
cs
mov
sbb
aad
dec
lods
mov
rcl
and
out
je
mov
jb
jns
movs
or
ret
xor
add
pop
shl
pop
gs
push
cmp
or
xchg
add
pop
dec
popf
pop
pop
jmp
inc
clc
adc
dec
mov
leave
clc
add
mov
retf
xlat
xchg
hlt
and
inc
pusha
mov
inc
outs
sbb
xchg
dec
in
add
outs
jmp
jp
and
loope
jbe
jno
sbb
out
or
clc
(bad)
sti
ds
and
daa
test
inc
push
push
push
sti
inc
sub
jl
popa
xchg
fmulp
out
inc
neg
(bad)
xchg
add
fsub
mov
mov
lock
(bad)
in
out
ret
ror
arpl
sti
std
xchg
cmps
mov
pop
xchg
push
punpcklwd
or
push
sar
sti
mov
mov
push
mov
cli
jmp
fwait
lods
clc
arpl
jg
sub
jnp
push
ret
sbb
idiv
add
xlat
out
dec
sbb
xchg
cdq
mov
das
push
movs
jns
dec
out
out
sub
push
les
call
mov
imul
rcl
or
std
xchg
dec
dec
adc
cmp
in
popf
stos
or
cwde
pop
sub
cmp
ss
and
dec
stos
xchg
jmp
sub
in
pop
sti
stos
xchg
pop
fisub
mov
add
mov
xor
stc
movs
cmp
sbb
rep
pop
in
jp
and
retf
lock
mov
adc
scas
sbb
repnz
mov
or
sbb
daa
leave
stc
xor
addr16
les
dec
out
push
cmp
inc
cmp
es
(bad)
dec
xchg
call
cmps
xor
dec
add
mov
test
fcom
fdivr
push
sbb
and
repnz
out
daa
cmp
clc
hlt
ret
and
mov
ins
sbb
ret
ss
mov
fnstcw
(bad)
push
jno
pop
mov
mov
test
popf
retf
jp
das
and
jmp
stos
jmp
addr16
dec
outs
cmp
std
cli
leave
dec
xor
mov
adc
call
faddp
fs
mov
push
js
clc
cmps
mov
movs
arpl
repnz
jbe
xchg
fptan
(bad)
in
adc
mov
ret
je
shl
cmp
pop
sbb
xchg
jp
and
fstp
mov
leave
cmp
xchg
cmps
adc
mov
push
ret
pop
xlat
add
cmp
or
cdq
daa
inc
xlat
popf
pop
sbb
das
mov
aad
mov
cld
clc
jp
call
xor
(bad)
into
jbe
(bad)
xchg
jg
scas
in
das
mov
fadd
fwait
and
cmps
scas
fild
sub
mov
retf
mov
cli
add
xchg
gs
mov
mov
cmp
jns
or
mov
mov
jae
cdq
imul
pop
jne
add
adc
mov
add
rcl
int
inc
fstp
rcr
inc
jno
sbb
fwait
mov
cmp
pop
xchg
push
mov
xor
outs
jns
movs
sub
jp
dec
leave
push
aas
push
adc
mov
ins
ds
xor
rcr
jl
mov
aas
adc
test
ins
fs
(bad)
or
gs
out
inc
ret
dec
pop
sub
mov
or
sbb
test
imul
ss
jbe
mov
stos
(bad)
jmp
inc
add
ficom
add
pop
cmc
mul
xor
lds
scas
jns
inc
out
or
xchg
mov
mov
out
sbb
mov
and
inc
aam
push
cmc
cdq
nop
sbb
or
loopne
adc
xchg
inc
dec
push
clc
mov
mov
repnz
cli
lahf
mov
adc
pop
adc
or
jmp
inc
fs
pop
mov
mov
mov
fld
cdq
push
mov
fidiv
add
sbb
push
mov
push
mov
and
add
fsubr
pop
fwait
dec
xchg
push
push
cmp
pop
push
(bad)
dec
xchg
mov
scas
out
ror
mov
je
imul
repz
cmp
sub
cmps
mov
mov
aad
jmp
jecxz
xchg
xchg
pushf
adc
pop
push
cmp
and
xchg
movs
mov
adc
dec
leave
push
xor
cmp
mov
sub
or
xchg
mov
aam
xor
movs
inc
sti
sar
lods
dec
xlat
mov
aas
imul
cmp
inc
mov
xor
cld
and
mov
pop
xor
js
ins
add
ins
sahf
ret
mov
xchg
nop
mov
lods
add
(bad)
jp
jmp
outs
add
cmp
adc
rol
pusha
enter
inc
jecxz
test
and
jmp
and
in
mov
mov
mov
jae
leave
fldcw
fiadd
adc
outs
mov
sub
mov
cmp
sub
xchg
test
sbb
push
inc
jmp
cli
or
and
add
mov
mov
mov
leave
jns
pop
sti
les
sub
mov
imul
out
jo
ds
shr
fsubp
cli
mov
(bad)
xor
push
mov
push
jne
mov
or
movs
cmp
sub
cmp
loopne
xchg
inc
and
stc
mov
or
outs
es
cmp
sti
test
clc
jge
lds
mov
mov
fchs
pop
pop
xchg
sub
adc
pop
in
add
pop
xchg
stc
and
pop
adc
sub
xchg
pop
bound
jl
mov
fdivr
out
xchg
add
and
out
jmp
pop
adc
sbb
pop
ins
cwde
sbb
push
dec
clc
fistp
pop
lds
enter
pop
pop
imul
cmp
in
xor
pop
dec
adc
xchg
hlt
ret
add
rol
retf
mov
out
dec
adc
push
pop
mov
mov
xor
lea
add
lock
mov
jbe
pusha
cmps
and
dec
aad
mov
data16
aam
outs
and
jns
xchg
push
imul
enter
push
push
sub
test
adc
repz
lods
inc
inc
aas
loop
and
lods
repz
cmps
lea
pop
cmps
dec
icebp
dec
and
push
cmps
sbb
fimul
dec
xor
das
cmp
sub
sti
sbb
cmove
(bad)
loop
clc
ds
pop
lods
mov
ret
bound
lods
mov
test
or
cmp
outs
mov
inc
jp
sbb
sub
mov
out
aaa
dec
xchg
xchg
xor
mov
add
imul
mov
push
xchg
retf
popa
push
aam
(bad)
pop
repnz
movs
sbb
jle
sub
sub
jge
repnz
test
pop
sbb
inc
mov
push
movs
push
xchg
xor
dec
aas
sbb
lds
imul
scas
push
mov
ja
pop
jb
fiadd
add
enter
inc
mov
ja
jmp
sub
movs
mov
adc
and
adc
jno
push
inc
jmp
jecxz
xlat
add
inc
test
pusha
and
xor
out
mov
cmps
xor
mul
pop
cmp
inc
mov
pop
scas
sbb
jmp
adc
mov
and
movs
sub
push
mov
and
jle
jmp
inc
push
in
jbe
in
rol
sbb
pop
in
addr16
xchg
(bad)
ins
and
popf
jecxz
adc
jno
idiv
repnz
adc
movs
cwde
sbb
lods
jge
shr
push
mov
mov
pop
ret
jmp
(bad)
push
xchg
imul
push
das
sbb
pop
cmp
pop
sbb
or
mov
ins
pusha
fisttp
leave
sub
popf
mov
adc
int
aad
pop
mov
or
cmc
leave
into
ds
sbb
jmp
cmps
sbb
cmp
test
mov
jo
pop
push
out
mov
mov
or
pop
int3
pause
pop
pop
cwde
retf
or
xor
mov
pop
push
out
dec
retf
cmp
xor
pop
ds
cwde
rcr
call
or
jo
lahf
cmp
sub
sub
(bad)
ins
(bad)
xchg
jno
outs
adc
call
js
pop
and
mov
(bad)
jp
std
outs
sbb
cmp
sbb
push
je
das
ja
add
movs
mov
fsub
fstp
imul
rol
xchg
dec
cmp
leave
jne
jb
lea
fcom
cmp
ficomp
scas
push
xchg
jne
xchg
ret
push
and
jmp
inc
xchg
add
mov
or
mov
pop
xor
hlt
pop
inc
rdtsc
enter
retf
scas
daa
sub
call
gs
xor
cmp
inc
and
xor
and
cmp
out
push
mov
call
ss
add
dec
jo
stos
mov
jae
xchg
(bad)
push
inc
sbb
mov
cmp
push
outs
out
fwait
jecxz
mov
and
sar
adc
jg
movs
inc
push
sub
retf
dec
cmp
in
imul
sub
xchg
scas
fmul
cmp
popa
fs
xor
cli
jecxz
pop
and
add
test
inc
cmp
lods
inc
mov
or
add
out
xlat
xchg
and
mov
dec
mov
pop
retf
popf
xchg
jno
hlt
(bad)
pop
push
cmps
xchg
lods
bound
not
stos
in
cli
mov
inc
out
fsub
dec
push
dec
dec
pop
pop
(bad)
jbe
mov
pop
in
ret
fisub
inc
jge
jae
call
push
inc
xor
jo
or
mov
or
cmp
push
xor
xor
jmp
jb
in
or
ss
aad
ds
mov
gs
imul
dec
push
xchg
lods
sub
ret
push
cmp
cmp
adc
rol
loope
mov
inc
loope
cli
dec
mov
rcr
pusha
pop
mov
dec
lds
fwait
jno
sti
mov
jg
(bad)
fmul
or
adc
xor
(bad)
imul
xchg
loopne
pop
mov
popf
push
aas
cwde
inc
sti
and
jno
movs
jb
mov
cwde
mov
mov
lds
mov
jae
js
fnstcw
out
xchg
fnstcw
or
jle
loop
xor
adc
inc
popa
inc
cld
mov
or
cld
adc
dec
push
call
loopne
pop
ins
cwde
div
and
loop
test
cld
(bad)
pop
inc
jl
jae
ret
loop
inc
or
mov
or
call
fcmovnb
test
test
nop
inc
(bad)
(bad)
adc
pop
xor
cli
imul
add
dec
in
test
jg
inc
mov
xchg
xchg
pop
xchg
mov
out
push
mov
pop
clc
sbb
test
xchg
mov
or
add
test
iret
int
and
sti
lea
data16
pop
cs
mov
(bad)
in
pop
mov
mov
fs
or
jne
dec
add
dec
fistp
pop
add
xchg
or
add
mov
in
sbb
(bad)
in
sub
xchg
cmp
fwait
scas
cmc
std
inc
add
mov
in
ror
or
retf
push
push
(bad)
pop
mov
std
(bad)
mov
mov
lds
bound
and
cmps
xchg
lds
ins
inc
lods
dec
mov
mov
js
ror
or
push
aaa
test
jg
or
sahf
xchg
(bad)
movs
xor
cdq
cmp
out
js
stos
iret
hlt
xchg
outs
(bad)
adc
mov
sub
push
xchg
xor
pop
xor
cmp
push
test
les
ret
add
call
scas
movs
mov
add
cs
in
imul
inc
fistp
xor
aad
sbb
hlt
pop
cld
mov
xchg
cli
repnz
dec
mov
inc
clc
pop
mov
add
lahf
sub
jge
cwde
ins
cmp
jmp
sub
inc
push
xor
xor
dec
(bad)
cmp
in
jmp
shr
into
pop
scas
ins
enter
in
and
cmps
inc
aam
mov
iret
inc
push
leave
scas
stc
and
jb
xchg
pop
jo
ror
shr
or
int3
add
test
and
test
inc
stc
loope
sbb
dec
popf
or
mov
sub
mov
in
clc
imul
sub
xor
clc
nop
add
cmp
loopne
movs
sar
in
nop
dec
sbb
inc
sub
out
neg
(bad)
xor
scas
xlat
or
push
std
(bad)
scas
or
enter
pop
jmp
dec
add
lahf
mov
(bad)
xor
push
and
sahf
int
stc
mov
xchg
rcl
repnz
xor
and
inc
call
inc
cmp
nop
fwait
and
add
adc
jp
jbe
hlt
jecxz
(bad)
into
outs
xchg
sub
retf
dec
test
mov
scas
(bad)
in
retf
cmps
movs
and
xor
test
jmp
in
or
mov
sub
mov
mov
adc
sub
jae
adc
stos
sub
sbb
fimul
sub
inc
cld
mov
add
xchg
inc
sub
pop
jb
inc
loope
jne
retf
mov
dec
and
pop
pusha
popf
retf
jo
enter
movs
das
xchg
sub
outs
xor
cmps
sub
pop
jo
or
inc
mov
inc
iret
mov
push
mov
mov
jno
mov
test
jo
cwde
fnstsw
std
add
mov
ja
add
repnz
lods
mov
jmp
inc
jb
adc
add
fist
xchg
dec
cmc
jmp
inc
adc
lods
loopne
rol
stos
pop
push
mov
rcr
scas
leave
vmwrite
cld
sub
jb
mov
jb
push
mov
inc
aaa
(bad)
pop
scas
out
(bad)
ss
ins
test
jno
shl
(bad)
cmps
mov
sub
xchg
jmp
mov
out
aad
and
movs
pop
mov
dec
addr16
out
imul
jne
sub
sbb
xor
mov
pop
gs
cmp
scas
sti
jmp
scas
adc
sbb
int
jb
xchg
sbb
ficom
jae
and
repz
sub
nop
aas
sar
mov
cmp
je
mov
sbb
add
ins
inc
pop
popf
mov
jmp
adc
mov
stc
movs
fs
dec
sbb
cmp
sub
scas
test
stos
jecxz
inc
mov
in
outs
cli
pop
add
sbb
cmps
enter
push
xor
xor
push
adc
cdq
pop
mov
movs
retf
xor
mov
jne
(bad)
jecxz
test
in
xlat
sub
push
lds
addr16
and
cwde
jle
jbe
call
faddp
call
dec
mov
or
in
push
fnstenv
add
xchg
outs
pop
ror
pop
push
inc
sub
ret
and
mov
sub
xchg
xor
ret
mov
call
out
adc
sbb
mov
cmp
es
clc
ins
(bad)
mov
bound
mov
mov
push
push
movs
fsubr
and
adc
cmp
cmp
jp
ret
or
mov
fcompp
(bad)
rcr
stc
movs
popa
shl
push
xor
in
mov
adc
mov
pop
iret
clc
aam
repz
xchg
lds
and
test
add
inc
into
cmp
and
add
and
mov
cmps
fstp
jecxz
out
fisttp
mov
ins
cmp
or
mov
hlt
das
push
or
mov
test
loope
mov
add
lods
fimul
cmp
aad
ds
sub
iret
inc
pop
lea
mov
cmp
jl
das
inc
jl
ja
jmp
cli
xlat
push
mov
sbb
inc
ins
arpl
xor
fnstsw
popf
retf
nop
inc
dec
aaa
sar
mov
and
aas
mov
imul
or
dec
scas
jmp
icebp
lods
xor
cmps
jbe
fst
push
jbe
push
repz
sub
dec
add
mov
push
test
xor
loopne
stos
pop
leave
pop
dec
push
adc
movaps
neg
sbb
add
cld
or
(bad)
xchg
cld
fadd
dec
adc
hlt
cdq
mov
ficom
mov
in
dec
sub
out
nop
mov
pop
fst
fsub
aad
adc
jmp
dec
cs
int
popf
lea
shr
aad
sbb
out
mov
pushf
xchg
mov
dec
xchg
mov
push
xchg
cmp
or
mov
sbb
xchg
mov
mov
leave
mov
xor
add
sbb
add
stc
ret
mov
enter
inc
jl
cmp
imul
out
pop
sub
pop
in
in
dec
or
test
sbb
xchg
or
pop
enter
sub
add
leave
inc
pop
enter
nop
clc
cdq
jmp
mov
loop
loope
sbb
push
ja
les
fidivr
dec
push
imul
xor
jmp
loopne
xchg
call
cmp
jle
ja
xor
bound
inc
(bad)
mov
or
sub
test
inc
pushf
ds
xor
mov
mov
dec
daa
and
jl
add
mov
inc
jno
add
or
jbe
mov
(bad)
and
out
in
and
inc
fnstsw
jge
test
sub
dec
out
and
add
js
pop
jle
dec
cmp
rcl
dec
sub
or
(bad)
push
xchg
pop
les
cmps
jecxz
pop
movs
pop
jle
inc
outs
push
out
sbb
test
cwde
sub
outs
call
sub
push
mov
dec
adc
mov
cmp
scas
dec
aad
repnz
fstp
push
inc
hlt
mov
push
fcmovnbe
sahf
xchg
mov
mov
push
push
fmul
xlat
lods
aad
cmp
mov
jno
movs
lods
mov
in
out
inc
jmp
xor
sahf
push
test
out
push
mov
in
rol
stos
and
sar
int3
xor
icebp
adc
ret
cli
jb
jp
scas
sbb
xchg
movs
mov
jbe
and
xchg
in
jo
ins
jae
xchg
je
pop
jno
mov
xchg
mov
xchg
adc
sub
sbb
ficomp
sbb
dec
stc
mov
mov
sbb
xchg
dec
repnz
jbe
lea
cld
fbstp
repnz
sbb
repz
int3
jb
dec
scas
mov
rcl
daa
pop
cmp
clc
mov
dec
je
dec
dec
or
dec
jmp
dec
mov
jg
mov
loopne
mov
idiv
inc
int3
jp
cmps
mov
retf
cmps
cwde
int
aad
lods
fcomp
mov
shl
dec
dec
xor
test
mov
add
mov
fsubr
aam
(bad)
test
in
pop
les
stos
int3
nop
rol
pop
adc
mov
popa
jnp
jne
ret
pop
repnz
sub
lahf
push
loope
push
inc
(bad)
fdivr
outs
mov
mov
stc
adc
(bad)
(bad)
gs
rcl
inc
rol
add
mov
xor
clc
cli
(bad)
cs
lahf
jo
daa
scas
(bad)
out
mov
push
pushf
fbstp
scas
push
psrlw
push
(bad)
add
mov
mov
dec
add
cmp
push
xor
mov
loop
jae
retf
fld
(bad)
out
nop
push
xchg
repz
jecxz
jb
cmp
retf
dec
fmulp
sbb
xlat
push
fnstcw
movs
push
inc
(bad)
cmps
repnz
lods
pusha
shl
push
addr16
cli
mov
and
ins
scas
inc
and
add
sbb
pop
sub
outs
or
inc
ja
fstp
push
mov
out
jg
fld
cmp
scas
xor
call
xor
outs
jge
inc
int3
add
outs
ss
or
pushf
dec
jmp
add
jp
and
aaa
cdq
outs
add
gs
test
in
std
shl
mov
test
popf
imul
push
jmp
rcl
mov
xor
aad
mov
outs
push
shr
pop
rcr
jnp
jmp
jne
mov
sub
js
imul
sub
call
xor
mov
sbb
(bad)
leavew
call
fst
jg
mov
dec
mov
adc
sub
fisub
mov
xchg
cmp
mov
enter
dec
fiadd
push
mul
xchg
js
punpcklwd
or
adc
outs
je
icebp
pop
mov
int3
arpl
pmullw
inc
popf
imul
adc
xor
mov
loopne
aas
jp
xchg
jg
sahf
and
in
in
and
inc
xchg
repnz
sti
xor
push
call
popa
xor
adc
xchg
jne
int
aam
test
sbb
xor
inc
xor
fst
push
jecxz
lea
or
push
cmp
mov
je
clc
jbe
jge
es
int
dec
inc
pushf
fwait
mov
pop
or
retf
adc
dec
inc
aad
fst
(bad)
ror
scas
adc
xor
into
stc
mov
pop
dec
xchg
xchg
shr
add
mov
xchg
adc
rol
scas
fxch
cmp
or
mov
adc
or
scas
xchg
or
sub
daa
inc
push
mov
retf
in
shl
in
mov
fadd
loopne
neg
aam
jecxz
movs
js
je
jg
mov
fiadd
stos
inc
sahf
outs
add
fld
xor
test
or
cmps
dec
mov
cmps
cdq
in
outs
dec
mov
cwde
mov
inc
aaa
mov
mov
and
aad
iret
mov
mov
bswap
push
dec
cmp
arpl
into
mov
mov
pushf
(bad)
int3
lds
repnz
sub
jo
mov
in
xchg
adc
out
jl
stos
add
inc
and
pop
xchg
adc
outs
jbe
mov
test
add
call
cli
rcl
fdivr
sahf
call
popf
push
mov
das
xchg
ja
push
sub
adc
out
aas
aaa
(bad)
retf
adc
inc
add
sbb
stos
popa
(bad)
std
arpl
shl
xchg
icebp
ins
fdivr
push
outs
jecxz
ja
inc
inc
nop
ficom
lds
inc
mov
inc
or
enter
out
test
adc
mov
xor
rcr
outs
test
std
jne
bound
xor
push
cmps
fistp
rol
out
aaa
(bad)
idiv
xchg
adc
leave
clc
in
outs
cwde
rcl
push
push
retf
or
jge
into
inc
(bad)
(bad)
aaa
add
sub
or
inc
jnp
add
mov
mov
stos
test
mov
imul
shr
mov
xor
dec
push
arpl
fistp
mov
and
pop
movs
aas
data16
idiv
pop
sbb
xor
clc
pop
jp
cmp
iret
mov
movs
loopne
fsub
cmp
jns
dec
mov
lock
or
inc
sbb
rol
or
cvttps2pi
mov
xchg
sub
jg
lea
adc
cmp
push
shl
cmp
dec
out
in
je
mov
dec
sub
xor
dec
push
adc
xchg
mov
xchg
(bad)
push
gs
xchg
movs
adc
cwde
xchg
xor
mov
shl
pop
cli
lock
push
mov
das
arpl
xor
out
sbb
sahf
cs
test
rcr
pop
imul
sahf
cmp
or
stos
jo
sbb
aas
sbb
in
fst
div
add
jmp
inc
mov
loopne
data16
bound
lock
inc
mov
inc
es
stc
sub
(bad)
sbb
inc
stos
ret
clc
(bad)
sahf
(bad)
sub
push
aaa
aaa
push
xchg
fbld
jmp
aaa
shr
mov
lock
sub
or
and
loope
xor
daa
push
xchg
pushf
or
sub
and
pop
or
or
xor
xchg
pop
stc
and
jge
out
jge
loopne
xchg
sti
test
pop
push
pop
fisubr
mov
rcr
das
xchg
imul
mov
mov
add
(bad)
mov
push
mov
xchg
jg
inc
and
mov
push
push
add
fstp
cmp
push
pop
mov
inc
xor
fs
mov
rcr
into
xor
fnstsw
cs
clc
repz
push
jmp
push
mov
adc
adc
pop
pop
cmc
lahf
push
sub
fld
pop
inc
sbb
jne
mov
dec
pop
push
mov
fistp
lds
jle
dec
dec
mov
mov
je
jge
(bad)
and
js
mov
icebp
je
and
pop
inc
mov
or
add
sahf
sub
ja
cmp
push
imul
mov
or
call
add
or
mov
inc
cmp
cs
mov
mov
mov
stc
xchg
mov
xor
icebp
jl
out
cmp
test
es
jl
out
xchg
outs
add
mov
push
call
cmp
inc
int3
xchg
sbb
push
xor
cmp
mov
xor
and
xor
lds
and
add
dec
and
mov
fisubr
mov
das
or
cdq
fisttp
out
sbb
ds
mul
sub
and
sbb
sub
rol
ret
fbld
mov
sbb
cmp
adc
mov
fabs
cmp
scas
jb
inc
add
fild
or
enter
les
icebp
fndisi(8087
mov
push
adc
xchg
add
adc
dec
sub
inc
mov
inc
fidivr
test
nop
in
or
sbb
mov
div
sti
dec
add
(bad)
rcr
jno
in
xor
gs
or
push
dec
test
arpl
shl
push
mov
ss
cmp
push
sbb
cld
shl
icebp
(bad)
mov
adc
cwde
enter
xor
in
mov
mov
xchg
dec
clc
lds
out
mov
stos
mov
cli
es
push
jb
mov
ds
mov
mov
mov
dec
push
jno
(bad)
or
mov
push
dec
xor
mov
jmp
cmp
cs
scas
lods
dec
sbb
cmps
int
mov
test
sahf
shl
cmp
add
mov
mov
aam
stos
pop
outs
jl
push
pop
inc
fild
jp
in
sahf
cmp
xor
cmp
lahf
int3
and
and
cwde
mov
xchg
bound
or
pop
pusha
add
xchg
mov
cli
clc
scas
pop
pop
jge
nop
test
retf
mov
aam
ins
aad
lds
push
xchg
out
jae
inc
inc
mov
rcl
call
push
push
stos
pop
cmc
push
dec
pop
inc
adc
stos
add
rol
mov
imul
push
pop
movs
fisub
fdivr
adc
mov
imul
rcl
scas
sbb
mov
mov
mov
sahf
movs
mov
out
cs
call
retf
ins
cmp
sbb
inc
jb
dec
xor
jmp
fs
or
jne
adc
in
mov
shr
ret
stc
dec
jmp
lds
rcl
and
cmps
loop
ret
xlat
mov
in
pop
repnz
jns
add
call
inc
pop
mov
popa
jle
cmp
xchg
dec
out
in
jne
inc
iret
mov
mov
cmp
retf
ds
xchg
mov
mov
inc
shl
inc
cmp
das
cmc
jae
stos
sub
popf
mov
and
or
mov
xlat
inc
pop
mov
sbb
(bad)
das
iret
adc
leave
fsub
or
jmp
inc
pusha
arpl
inc
xchg
xor
out
sti
jb
push
stos
bound
loopne
cmp
push
int
scas
mov
xlat
ret
cmps
fs
aas
add
stos
inc
and
(bad)
cmc
lds
add
mov
out
inc
pop
pop
mov
(bad)
dec
xchg
xchg
iretw
out
rol
fs
adc
adc
sub
retf
adc
jge
dec
cmps
sahf
pop
cld
cld
jmp
inc
adc
iret
jl
jecxz
dec
sub
fwait
mov
sub
sbb
aad
mov
and
jo
dec
dec
inc
xor
push
mov
or
dec
push
mov
sub
loop
adc
jns
mov
xchg
xor
pop
jge
ret
movs
sub
jmp
ins
inc
or
ror
pop
mov
fs
sub
add
ss
xchg
lds
xchg
xchg
pop
pop
push
cmp
jne
jmp
push
pop
js
dec
addr16
pop
cdq
jle
cwde
and
sub
and
arpl
gs
add
adc
imul
cld
lds
ror
cmp
pop
test
push
loop
inc
retf
call
ja
jecxz
xor
std
mov
inc
in
push
in
jnp
cwde
mov
jp
repz
mov
mov
and
retf
stos
(bad)
cli
fwait
lods
pop
jg
enter
in
js
out
pop
sub
lock
sbb
scas
ss
cld
pop
ins
stc
out
outs
sub
ret
dec
cs
lods
or
stos
ret
and
(bad)
mov
and
push
push
shr
mov
cmp
lock
arpl
mov
fsubr
adc
dec
(bad)
ins
imul
sub
pop
xchg
xchg
(bad)
(bad)
mov
daa
ret
sub
xchg
hlt
test
and
in
cmp
mov
xor
sbb
int
dec
int
dec
pop
sub
inc
cmps
add
mov
mov
and
in
adc
ret
int3
xchg
and
jl
js
test
arpl
ins
int3
sbb
das
pop
outs
ret
int3
hlt
cmp
jmp
in
iret
data16
outs
or
push
fisttp
xchg
icebp
dec
ficomp
dec
pop
mov
arpl
imul
xchg
(bad)
std
mov
jecxz
cmc
sub
ds
loopne
(bad)
shl
inc
pop
xor
shl
(bad)
in
mov
or
pusha
mov
mov
call
push
mov
fldcw
movs
cmp
stos
lea
jo
push
test
cmps
inc
and
inc
mov
ror
stc
clc
xchg
xchg
je
dec
or
xchg
iret
cmp
inc
int3
movs
and
shl
pop
adc
mov
jne
push
push
xor
out
gs
fsubr
lock
ret
test
adc
(bad)
scas
and
std
(bad)
add
xchg
stos
rol
xor
out
cdq
test
mov
push
outs
and
(bad)
bound
sbb
xchg
retf
cmp
and
add
or
cmps
lds
pop
popa
leave
(bad)
test
(bad)
jae
pushf
test
mov
xchg
jno
jg
sub
enter
(bad)
mov
sbb
out
xchg
ins
sbb
push
mov
mov
(bad)
mov
xchg
pop
cmp
mov
mov
cs
lock
mov
fld
mov
call
jne
std
push
popf
call
ins
mov
jg
hlt
mov
test
push
rcl
sub
push
sub
pop
add
aaa
or
loop
in
xchg
push
repz
and
push
(bad)
jb
movs
mov
pushf
mov
sbb
loope
lahf
jno
test
xchg
clc
push
movs
mov
loope
rcr
and
xor
push
dec
pop
fidivr
xchg
sti
into
or
push
and
loope
mov
or
push
xchg
stc
fld
arpl
add
jnp
repz
sbb
dec
(bad)
sti
cmp
adc
dec
and
jecxz
je
fisttp
mov
lea
mov
push
cmps
sub
icebp
and
push
inc
adc
inc
xchg
ds
sbb
jo
hlt
test
or
(bad)
xor
and
cmps
push
push
xchg
out
add
lods
xchg
push
cdq
xchg
mov
pop
jg
sar
mov
add
fild
jmp
xchg
sub
out
push
(bad)
and
dec
mov
hlt
inc
mov
fcomp
sbb
out
pusha
jb
cdq
int3
call
hlt
inc
pop
pop
fild
sub
mov
pop
mov
inc
sbb
or
test
stc
movs
push
repz
and
inc
mov
jmp
cmc
mov
mov
movs
xor
sbb
int
and
neg
jb
fwait
shr
imul
sbb
lds
jl
mov
mov
xchg
jo
cmp
icebp
sahf
js
ret
mov
imul
lahf
jns
inc
mov
test
rcl
push
retf
call
mov
push
adc
push
add
test
xor
ins
enter
adc
shl
mov
sub
sub
inc
mov
sbb
retf
inc
jo
(bad)
dec
movs
add
or
sar
pop
sub
mov
ret
in
mov
hlt
cmp
sub
and
retf
mov
ror
lahf
popa
loope
dec
mov
sbb
pop
jmp
ins
and
add
mov
or
sbb
cmp
adc
out
inc
cli
pop
inc
repnz
movs
es
fild
in
and
rcr
(bad)
clc
or
or
cdq
jns
inc
int3
ins
jne
and
pop
cld
fistp
cli
inc
ret
aad
nop
inc
push
retf
push
hlt
mov
xchg
test
cmc
or
cmp
sbb
popf
repnz
push
push
in
push
popa
sub
mov
xchg
out
aaa
mov
inc
pop
test
ja
call
js
test
(bad)
neg
mov
adc
pop
shl
cmp
xor
daa
test
aas
out
inc
cmp
retf
or
ja
(bad)
push
mov
cld
out
adc
jbe
jmp
sbb
int3
cmps
test
xor
fstp
jp
shl
inc
femms
sub
push
pusha
push
pushf
aaa
jb
jne
jmp
push
loope
ins
adc
fcom
mov
mov
lahf
mov
nop
stos
stos
push
xlat
cwde
fidivr
sub
movs
xor
push
jg
test
rcl
pop
in
mov
jnp
jmp
xchg
rol
bound
jmp
sub
out
imul
add
aam
std
and
pop
xchg
arpl
inc
pop
lahf
adc
xor
lods
push
adc
call
xchg
das
mov
retf
mov
pop
ins
in
dec
mov
sbb
xor
pop
add
and
and
add
ins
push
repz
mov
fwait
loopne
aas
cs
and
ja
mov
pop
ret
xchg
adc
add
sub
call
jnp
(bad)
addr16
test
(bad)
or
mov
mov
add
aas
cs
and
inc
xchg
das
lea
xchg
xchg
or
mov
push
popa
(bad)
out
and
push
inc
dec
xchg
movs
loop
rcl
iret
shr
push
mov
xchg
add
dec
out
rol
addr16
fcmovnbe
push
add
std
xchg
jno
lods
add
cmp
sbb
lahf
lods
cs
pusha
jmp
xchg
dec
mov
fld
xchg
adc
cmp
imul
mov
sub
call
cmp
dec
xchg
adc
inc
pop
(bad)
jecxz
mov
add
mov
jb
inc
cmp
fyl2x
(bad)
in
(bad)
ficomp
mov
cwde
mov
pop
or
adc
jno
jge
cmp
and
(bad)
fld
imul
hlt
dec
add
aaa
inc
inc
sub
pop
jb
dec
mov
stos
aaa
ret
pushf
push
xlat
stos
loop
sbb
mov
mov
retf
jns
jmp
test
lods
scas
sub
fcom
imul
push
push
sbb
sub
sbb
shl
int3
mov
mov
into
in
pop
cmps
test
sbb
push
xchg
mov
sti
enter
xchg
jo
sub
ret
stc
adc
js
mov
mov
int3
xor
sub
jne
jne
pop
loopne
fs
xchg
pop
pop
out
stc
stos
mov
and
pop
xchg
cmp
xchg
and
addr16
push
cmp
hlt
push
je
or
pushf
cmp
dec
test
sub
sbb
mov
std
sub
lods
stc
mov
jle
mov
cmps
dec
dec
lahf
jno
mov
jmp
mov
ins
mov
jg
push
pop
fisub
mov
jb
in
fucomip
shr
mov
mov
test
fcomp
xchg
ret
or
sahf
mov
sbb
push
push
adc
xchg
xchg
mov
mov
mov
lock
jmp
ja
(bad)
mov
stos
push
dec
mov
pop
jmp
int3
repz
fist
mov
int3
cs
gs
inc
add
jg
cmp
jno
or
add
int
(bad)
fs
mov
xchg
pop
pop
adc
xor
iret
jg
movs
inc
out
dec
adc
cdq
mov
push
xor
(bad)
or
mov
pusha
push
xchg
ss
fdivr
cmps
not
ficom
fscale
punpcklbw
push
outs
mov
xor
inc
cmc
in
inc
call
dec
sbb
(bad)
inc
inc
fistp
pushf
fadd
clc
mov
or
xor
int3
daa
or
je
or
mov
sub
mov
outs
js
aaa
adc
(bad)
inc
fnstcw
add
shr
xor
and
mov
jle
iret
push
cwde
mov
dec
dec
jge
pusha
stos
imul
ja
jne
mov
loope
iret
or
stos
lahf
(bad)
mov
lea
xlat
lock
out
xchg
push
xchg
fwait
mov
pop
ret
mov
push
inc
inc
cmp
mov
gs
test
js
xchg
xchg
fistp
and
(bad)
daa
push
dec
call
jp
or
rcl
mov
fld
mov
jns
jecxz
mov
bound
xchg
outs
and
push
cmc
mov
pextrw
cs
sar
add
push
mov
popa
xchg
push
call
xchg
xchg
cmp
fild
fidiv
jge
out
push
shl
xchg
mov
mov
pop
movs
(bad)
dec
(bad)
stc
cld
stc
out
shl
sbb
mov
into
xor
cmp
lock
xchg
mov
ss
jge
dec
call
fs
sub
add
ins
jns
scas
cld
cmp
pop
arpl
adc
jge
retf
push
adc
pop
in
jg
imul
add
xchg
jp
aam
aas
xor
call
sbb
ret
(bad)
mov
bound
xor
adc
push
out
dec
sub
retf
aam
xchg
jp
mov
cmp
test
call
push
cmp
inc
ja
fistp
cmp
xor
mov
pop
fucomp
shl
outs
(bad)
fcom
push
push
ret
mov
adc
arpl
pminub
xchg
sub
(bad)
fiadd
arpl
sahf
clc
ficomp
or
fwait
cli
pop
cmp
out
cli
shl
(bad)
push
nop
scas
push
and
adc
mov
js
(bad)
iret
retf
pop
rol
sbb
test
pop
sub
(bad)
out
bsf
mov
cmp
pushf
xor
std
sub
xchg
and
and
repnz
cmp
pop
adc
sbb
or
outs
jo
add
add
push
mov
mov
push
sbb
js
or
sahf
call
mov
js
fstp
ror
pop
outs
retf
adc
mov
or
jns
adc
test
push
adc
outs
sbb
mov
sahf
cmp
int3
call
adc
lds
push
cwde
mov
pusha
pop
push
push
xor
push
das
pop
inc
push
cld
jge
test
jb
retf
add
and
adc
jp
cmps
(bad)
xchg
scas
mov
imul
cdq
sub
mov
sub
dec
pusha
aad
pusha
jecxz
push
sbb
jbe
adc
aad
(bad)
test
xor
jmp
movs
jecxz
jg
(bad)
ds
lock
ret
inc
(bad)
jmp
push
mov
xchg
and
jo
mov
addr16
mov
je
popf
jle
push
mov
icebp
int3
lods
jb
dec
jl
inc
cmp
xchg
adc
leave
adc
mov
loop
jg
jb
shl
fcomp
xor
and
xchg
into
xchg
or
lahf
sbb
xor
(bad)
mov
out
sbb
push
fcom
cmp
mov
push
rol
mov
jne
stc
mov
nop
dec
std
jns
dec
xor
rol
ret
sub
push
ss
push
and
sbb
or
lahf
cld
outs
cmp
pop
mov
adc
mov
pop
(bad)
pop
daa
shr
inc
jmp
cmovo
js
or
cmp
sub
(bad)
dec
jmp
inc
jp
lods
dec
(bad)
outs
stc
fucomip
push
mov
jmp
loopne
push
outs
lar
mov
fs
stos
push
and
shr
lahf
fldcw
sbb
movs
and
sti
mov
sbb
sub
mov
add
xlat
cmp
pushf
push
inc
inc
sbb
inc
repz
or
xchg
xchg
xchg
or
push
in
stos
sub
adc
sbb
popf
loope
ret
lock
xor
push
add
jmp
and
call
outs
daa
popa
pop
inc
cmps
aas
mov
inc
jns
cmc
add
dec
ins
shl
dec
adc
ss
daa
test
shl
mov
xchg
fld
shl
pop
pop
adc
push
movs
iret
imul
add
loop
mov
xlat
or
dec
sub
cmc
daa
jl
fucom
push
xchg
mov
outs
sbb
mov
js
das
mov
add
sbb
mov
sti
(bad)
mov
cmp
ins
push
or
and
jae
add
std
jno
(bad)
in
pop
sbb
mov
push
mov
fist
add
test
mov
call
js
repz
mov
mov
das
shr
sub
fistp
js
int
push
out
jge
jo
sub
pop
mov
pop
sbb
adc
nop
xchg
test
cmp
xor
xchg
pusha
adc
adc
mov
loop
xchg
mov
(bad)
out
pcmpgtb
fsub
imul
ja
pop
clc
aas
clc
aaa
test
or
cld
(bad)
popa
idiv
retf
add
pop
sub
shl
push
sbb
lock
mov
aam
test
jle
mov
mov
ror
xor
sub
dec
ror
dec
test
ins
(bad)
ror
push
cmp
pop
pop
jmp
or
ins
jmp
xchg
xchg
cmp
loop
adc
cmp
add
jo
xchg
data16
ins
scas
mov
xlat
lock
dec
imul
dec
pop
mov
test
shl
into
adc
lock
mov
xchg
sbb
or
adc
jge
scas
fnstsw
iret
leave
std
sti
sub
or
enter
cmp
cwde
clc
aas
jo
cvtps2pi
dec
aam
mov
jmp
lahf
outs
fsubr
push
push
push
pusha
lock
bound
jecxz
cmp
cli
mov
dec
mov
xchg
cmp
pop
mov
(bad)
mov
jb
mov
rol
retf
mov
adc
sbb
adc
dec
repnz
add
or
pop
mov
adc
xor
and
mov
mov
rol
mov
pop
pop
mov
jle
imul
fmul
mov
retf
aad
in
(bad)
imul
cmp
sbb
fisttp
adc
jae
rcr
enter
imul
(bad)
ins
in
pop
ins
lea
or
in
fwait
mov
pop
int
xchg
hlt
dec
add
sbb
xor
mov
scas
sub
fld
je
mov
push
popf
stc
sub
inc
fsubr
mov
outs
push
ret
or
pop
dec
pop
dec
dec
les
dec
or
push
cld
sbb
sar
daa
pop
shr
fcom
sbb
into
push
fdiv
popa
xor
dec
mov
loope
add
test
jg
mov
popa
imul
dec
fild
push
xor
outs
aaa
xchg
fdiv
mov
mov
add
xchg
test
add
and
ret
cmp
(bad)
cmc
lods
push
add
jg
movs
and
push
mov
cmp
xchg
lods
xchg
push
cli
inc
gs
enter
cs
sbb
cmc
mov
add
call
xchg
mov
movs
mov
and
jb
and
hlt
pop
mov
sahf
jmp
inc
push
cwde
pop
and
push
push
out
jns
adc
and
push
ins
mov
cmps
push
call
mov
or
repz
xchg
jecxz
inc
lds
adc
jae
push
repz
xor
fnstsw
fidivr
dec
pop
cld
arpl
gs
dec
or
pop
aam
movs
in
pop
daa
xor
inc
stos
xchg
mov
scas
sbb
mov
jmp
fsubr
jno
shr
jg
test
sub
and
pop
inc
sub
lods
dec
aas
rol
repz
gs
(bad)
std
pop
cmp
inc
mov
test
xchg
(bad)
xchg
or
push
scas
add
xchg
xchg
fs
or
xor
or
js
mov
rcr
push
ds
sti
pop
mov
jmp
push
aad
nop
push
test
retf
test
stos
push
mov
push
aam
dec
or
bound
hlt
add
add
dec
int3
push
pushf
imul
jecxz
aas
lea
inc
mov
gs
cdq
std
pop
retf
dec
jo
mov
(bad)
jl
ds
aaa
xchg
clc
mov
or
dec
jle
jnp
push
add
call
or
push
pop
jge
jae
mov
rcr
adc
adc
push
xchg
cmp
push
jmp
rcr
call
nop
pop
shl
out
jae
pop
outs
xor
jp
es
nop
mov
mov
sbb
xchg
retf
cmp
paddsw
dec
xor
stos
aam
ins
das
inc
mov
std
cdq
inc
push
lods
(bad)
and
sbb
cmp
xor
cdq
xor
outs
loop
jns
ins
bound
cld
rcl
hlt
jb
int3
or
jle
cmp
xlat
or
mov
cmp
pop
dec
jp
xchg
enter
es
movs
fsubr
jns
ret
push
add
gs
call
fild
pop
fadd
dec
fbstp
dec
pop
cmps
ss
mov
adc
or
cmc
and
xor
push
sbb
out
out
inc
inc
in
inc
add
ss
push
lock
pop
in
movs
dec
lock
je
loopne
pop
out
div
dec
ins
daa
test
clc
cmps
aas
xor
test
xchg
sub
mov
cmps
inc
cdq
xor
jbe
xor
mov
clc
(bad)
pop
xchg
mov
dec
mov
cli
jmp
aaa
lods
in
and
cld
xchg
jmp
mov
cmp
inc
rol
mov
pop
inc
xor
xchg
bound
in
dec
stos
jge
lock
pop
mov
pop
mov
ja
dec
lea
pop
scas
cmps
push
or
in
lods
fisttp
push
mov
pop
aaa
cmp
jno
imul
xor
mov
(bad)
add
push
arpl
pop
jb
push
push
in
fbstp
jns
call
dec
jmp
and
arpl
cli
test
dec
jne
(bad)
popf
adc
gs
das
dec
cs
cmc
adc
loopne
mov
pop
pop
int3
xchg
out
nop
cmp
and
inc
pop
add
push
pop
add
cmp
cmc
cmp
lods
bnd
out
ins
mov
push
push
hlt
popf
fadd
and
call
mov
and
int3
(bad)
push
sbb
sub
clc
aaa
test
mov
retf
cmp
sub
or
jbe
test
sub
jno
push
je
bound
enter
push
scas
hlt
cdq
(bad)
mov
inc
in
hlt
ins
xor
jmp
mov
push
aas
or
cmps
and
cmps
xchg
dec
sbb
(bad)
xor
cwde
mov
rcr
mov
out
inc
mov
fisub
push
retfw
jns
into
adc
pusha
inc
push
xchg
ret
pop
scas
mov
inc
int
jle
sbb
stc
xor
push
ret
jns
cmc
fnstsw
mov
int3
mov
out
or
mov
push
pop
out
loopne
jp
sub
(bad)
cld
push
stc
lahf
aas
dec
xor
in
repnz
push
or
cli
ss
jmp
xchg
int
cmp
rcr
shl
push
mov
adc
pusha
les
pop
test
jnp
aam
pop
or
xor
rcr
enter
rcl
jbe
cdq
adc
mov
cmp
cmp
mov
in
movs
iret
mov
mov
and
(bad)
adc
movs
es
mov
or
call
js
aam
mov
pop
or
ja
loopne
jecxz
pop
jl
pop
or
shl
repnz
jecxz
or
(bad)
std
out
ja
movs
adc
jae
mov
out
ja
jp
inc
cmp
dec
(bad)
sub
icebp
cmp
rol
(bad)
stos
pop
sbb
or
cmps
mov
shr
clc
(bad)
arpl
(bad)
(bad)
adc
add
arpl
mov
fdivr
dec
jecxz
push
call
push
loope
and
xlat
fwait
mov
repz
add
lds
push
aaa
iret
(bad)
loopne
push
fwait
ja
cli
icebp
mov
xchg
cmps
sbb
pop
xlat
and
lock
push
mov
or
xchg
push
push
aad
pop
adc
lahf
(bad)
mov
ins
cdq
xchg
aad
loope
and
and
cwde
jge
sub
push
scas
sbb
xchg
mov
push
push
int3
sub
loop
data16
adc
xor
xchg
ja
pop
sbb
inc
dec
pop
fwait
aad
inc
in
scas
scas
iret
xchg
mov
xchg
mov
popa
xchg
jb
sub
aad
xor
mov
push
adc
cmps
sub
cmps
nop
nop
cmp
and
sbb
dec
stos
jmp
call
jo
(bad)
lods
test
mov
sbb
mov
push
jecxz
not
mov
pop
(bad)
out
dec
data16
mov
jo
test
ss
mov
fbld
call
movs
push
aam
pusha
dec
push
ror
sub
inc
ror
xchg
xchg
xchg
pop
shl
and
ret
in
jge
in
push
pop
mov
push
dec
int3
les
mov
cdq
out
mov
in
shl
or
int3
or
cmp
sbb
shl
inc
adc
mov
cs
out
inc
mov
popf
adc
inc
arpl
es
ja
add
pop
imul
push
mov
jmp
pop
xchg
fnstsw
xor
add
inc
pop
not
or
dec
add
mov
mov
dec
lock
out
jno
sub
and
rol
xchg
and
jmp
xchg
(bad)
pop
jns
push
add
sbb
or
xchg
bound
push
sbb
inc
or
in
es
mov
ins
mov
test
ss
mov
mov
push
inc
pop
xchg
scas
nop
or
test
add
pop
push
adc
out
js
xchg
rcl
aas
(bad)
sbb
cmps
arpl
mov
cmp
inc
rcr
outs
ss
shr
mov
pop
push
ja
(bad)
dec
push
div
(bad)
(bad)
es
xlat
and
cmp
mov
dec
(bad)
dec
aad
gs
clc
adc
(bad)
scas
test
shl
and
clc
bound
and
js
fimul
cdq
std
aas
xor
(bad)
clc
lods
sahf
jmp
mov
lock
xchg
xchg
fcom
ret
mov
mov
dec
jle
fidiv
ficomp
scas
jnp
in
dec
scas
les
rcr
mov
daa
cmp
mov
ror
mov
xchg
push
test
dec
outs
lea
cwde
rcr
rcl
out
jnp
out
cwde
retf
lahf
cmp
add
mov
xlat
or
jp
jb
les
add
cmp
out
mov
jo
ja
daa
test
xor
jmp
outs
or
add
shl
or
or
inc
out
gs
or
xchg
jo
jns
mov
lods
sti
inc
call
sub
dec
ret
mov
je
fs
add
out
dec
mov
jnp
dec
dec
jb
ror
sbb
pop
cmp
xchg
mov
jmp
inc
cmps
xchg
rcr
cdq
rcl
enter
and
add
leave
scas
in
push
jne
cmp
inc
das
push
fs
xchg
popa
stos
addr16
add
jmp
retf
dec
fimul
sbb
push
test
adc
leave
jb
push
ja
ins
dec
scas
mov
and
in
jecxz
xchg
add
cdq
ret
outs
mov
(bad)
push
dec
mov
sub
push
mov
call
(bad)
test
dec
or
or
fcomp
retf
loope
popa
inc
dec
mov
sbb
jl
jl
(bad)
nop
xor
xor
pop
push
push
std
lea
cmp
lods
xchg
fist
jnp
out
lock
pop
inc
mov
in
and
xchg
jbe
or
icebp
add
cwde
mov
inc
or
dec
sub
xchg
cmp
call
(bad)
cmp
aam
sub
clc
sub
ja
push
retf
ret
test
je
or
scas
icebp
jmp
push
cmp
cmp
outs
xor
sub
sbb
repnz
mov
fldz
addr16
xlat
ret
scas
adc
pusha
mov
pop
movs
cmp
xchg
lods
jp
idiv
pusha
cmps
leave
jp
push
ins
push
jmp
jmp
imul
jno
jnp
and
ret
ror
adc
test
mov
repz
test
imul
ret
(bad)
adc
gs
dec
and
fwait
(bad)
dec
pop
xor
dec
mov
es
xadd
push
cld
mov
pop
and
push
add
scas
push
xchg
inc
or
es
sahf
popa
cmp
ficomp
pusha
pop
mov
and
xchg
scas
cmp
mov
cmp
xor
in
jl
xor
in
loopne
sub
sub
loop
or
stos
xchg
mov
(bad)
out
push
ss
cmps
adc
bound
ins
and
lods
mov
pop
ds
adc
ins
pop
dec
mov
xchg
xchg
push
sub
into
outs
xor
cwde
pop
in
mov
lahf
jns
cli
xchg
imul
aas
or
pop
mov
add
neg
mov
cmc
mov
adc
pop
cmp
loop
adc
mov
test
ret
(bad)
mov
ret
sub
lock
cwde
pop
movs
push
retf
test
pop
push
clc
xchg
inc
je
push
inc
mov
or
stos
enter
pop
inc
mov
popf
ins
sti
cmp
(bad)
jnp
ins
jmp
(bad)
fcomp
outs
rcl
or
imul
mov
jne
xchg
call
or
shl
xor
std
inc
dec
enter
inc
cmp
adc
sbb
outs
out
cmovne
adc
(bad)
dec
cmps
mov
inc
jne
aas
iret
or
cs
adc
mov
(bad)
xor
push
std
jmp
mov
push
and
and
loopne
fdiv
je
aad
push
or
sbb
jns
retf
push
mov
mov
test
pushf
or
stc
pop
(bad)
call
frstor
and
daa
xor
add
mov
push
test
addr16
nop
fbstp
inc
ins
cmps
xchg
aad
push
in
jns
mov
push
jnp
mov
dec
cmp
rcr
repz
es
(bad)
lock
push
mov
inc
xor
popf
shl
(bad)
adc
pop
adc
xor
iret
or
xchg
iret
call
push
adc
mov
out
adc
leave
inc
icebp
xlat
sub
mov
mov
lea
ret
shr
adc
add
pop
(bad)
cmp
adc
outs
mov
xchg
sub
inc
sti
cmp
dec
cwde
xor
or
aad
sub
cld
mov
enter
push
cmp
mov
fsubr
dec
adc
arpl
and
pop
xchg
sub
xor
mov
adc
sbb
jp
push
out
in
add
call
cdq
popf
mov
je
or
and
or
inc
out
mov
loopne
mov
scas
shr
les
dec
repnz
sbb
cmp
mov
pop
inc
xor
jo
xor
or
sub
mov
test
sti
mov
out
ret
mov
fisubr
fisttp
(bad)
dec
pop
(bad)
ror
cmps
fisttp
push
mov
cmp
shl
jg
stos
fdiv
mov
iret
es
jbe
into
ficomp
jo
in
(bad)
ss
les
daa
fs
outs
inc
int3
pushf
pop
and
loop
popf
add
push
ss
mov
mov
scas
(bad)
inc
rol
push
sbb
es
add
push
shl
hlt
add
mov
je
push
icebp
sub
sub
mov
dec
pop
js
in
mov
in
cmp
sub
sbb
in
sbb
push
shr
(bad)
lahf
lahf
pop
add
sub
retf
push
dec
aad
(bad)
adc
or
mov
cs
jno
out
outs
sbb
push
jge
xchg
mov
mov
in
jg
fdivr
inc
xchg
xchg
aaa
mov
hlt
or
dec
mov
mov
inc
test
xchg
fsub
inc
jae
(bad)
cmp
fsub
and
adc
je
in
icebp
jo
sti
push
xor
adc
stos
and
sti
nop
les
nop
add
(bad)
aam
(bad)
dec
push
jns
stc
cwde
inc
stos
pushf
mov
cmp
icebp
and
inc
bound
ins
mov
lods
sti
jbe
js
adc
fdivr
cmc
mov
test
mov
jmp
adc
mov
mov
adc
repz
push
mov
jp
dec
ins
or
or
je
cmp
xchg
(bad)
mov
es
sbb
jmp
xchg
pusha
repnz
int3
enter
xor
outs
loop
(bad)
out
or
test
shr
ja
fild
std
pop
mov
or
pop
lock
test
mov
test
enter
daa
inc
out
scas
enterw
or
je
fst
dec
xchg
mov
jne
(bad)
test
daa
mov
fisub
ins
iret
sub
push
aam
in
jmp
inc
push
fmul
cmp
hlt
dec
pop
stos
test
xchg
lock
mov
push
add
mov
and
mov
(bad)
and
xchg
mov
das
addr16
fisubr
jle
jmp
adc
scas
mov
std
add
lea
fild
mov
push
dec
mov
adc
and
out
pushf
push
adc
mov
mov
das
pop
sub
push
enter
dec
mov
stc
cdq
mov
pop
or
imul
mov
(bad)
jecxz
in
adc
outs
jg
pop
add
xchg
pop
inc
mov
xchg
xor
or
movs
(bad)
movs
push
sub
inc
jnp
jbe
aaa
leave
call
cmp
or
popf
(bad)
std
jp
jmp
sub
mov
cmps
push
ss
in
mov
daa
jg
das
cmps
push
dec
mov
in
out
jnp
int
fs
adc
dec
int
addr16
cli
int3
sbb
enter
jmp
sahf
jmp
mov
in
shr
mov
or
xchg
lds
add
test
xor
inc
fist
pop
sub
cmp
daa
cmp
push
mov
test
mov
add
fidiv
sub
dec
jmp
mov
sub
xchg
fimul
adc
pop
push
(bad)
ficomp
xchg
sbb
popa
cs
fs
sub
cmps
movs
add
sub
in
sub
inc
arpl
mov
or
cld
add
imul
mov
fcom
cmp
jne
adc
repz
mov
in
cmp
outs
or
add
pop
mov
repz
pop
xchg
pop
or
pop
xchg
cld
adc
sub
call
std
arpl
cdq
mov
and
enter
loope
adc
add
mov
dec
fwait
test
addr16
mov
mov
and
dec
xlat
xor
sub
(bad)
xchg
ins
stos
mov
sbb
add
imul
cmp
lods
jmp
inc
ja
mov
stc
in
xchg
aaa
pop
push
lea
or
call
jp
adc
inc
pushf
scas
sbb
pop
xchg
jno
inc
mov
cdq
sbb
dec
out
push
pop
push
xchg
fcmovnbe
adc
mov
cmc
(bad)
and
movs
out
push
jo
fs
cmp
imul
push
iret
in
and
jne
(bad)
js
add
das
popa
call
or
dec
in
mov
jb
lods
xchg
jno
mov
mov
jmp
inc
shr
jmp
inc
mov
outs
xchg
sbb
jns
or
jno
sbb
mov
dec
aaa
sbb
ficom
and
outs
std
mov
pop
pop
fwait
push
dec
scas
nop/reserved
pop
jno
jb
mov
jmp
pop
scas
xchg
mov
enter
ficomp
loop
cmps
arpl
adc
mov
pop
out
and
add
pop
sbb
jmp
repz
jmp
test
xlat
pop
cdq
inc
jmp
stos
fadd
movs
rcl
jmp
fs
pop
inc
iret
out
mov
scas
push
push
in
test
mov
inc
push
sbb
push
call
xchg
jnp
dec
dec
pop
mov
imul
and
in
cdq
shr
adc
jmp
fcomp
pop
add
push
mov
std
mov
mov
rcl
xor
inc
push
mov
mov
(bad)
in
and
push
xor
dec
cmp
cmp
xchg
inc
stos
mov
int3
or
mov
xchg
mov
inc
sbb
cmp
push
xchg
aad
div
mov
aad
loopne
retf
jb
cdq
pusha
mov
push
mov
clc
dec
jmp
mov
cmp
data16
mov
pop
hlt
imul
ficomp
push
jae
xor
dec
mov
sub
lahf
imul
cs
je
clc
fmulp
fs
jo
cmp
aam
outs
inc
xchg
test
mov
inc
mov
out
scas
mov
mov
and
js
inc
cmc
pop
sub
xchg
mov
retf
or
xchg
adc
adc
sub
push
cmp
fsub
adc
aaa
fcomp
xlat
push
dec
sub
or
pop
pop
cmp
push
sbb
jb
aad
jbe
rcl
mov
je
push
lods
or
and
and
inc
je
cmp
add
adc
fwait
leave
ins
jmp
in
enter
popa
iret
sbb
mov
cld
scas
or
repnz
imul
stos
or
arpl
lahf
fwait
dec
bound
ja
add
retf
fld
and
xor
imul
mov
xor
inc
mov
mov
pushf
adc
or
inc
arpl
aam
xor
sub
push
xchg
es
test
adc
mov
das
mov
xor
pop
inc
mov
jmp
sbb
adc
gs
pop
imul
(bad)
lock
add
pusha
cmp
rol
xor
int3
daa
ret
ret
sbb
ins
call
xchg
fnstcw
ja
fdivr
gs
mov
sbb
rcr
jns
or
retf
shl
mov
pop
arpl
push
add
sti
sub
jp
lods
gs
dec
add
in
dec
mov
sub
je
add
or
push
dec
popa
xchg
cmp
movs
ins
leave
push
xchg
mov
outs
adc
xor
lds
in
push
inc
mov
push
xor
jecxz
lock
inc
adc
sub
jo
test
sti
push
(bad)
(bad)
adc
inc
ds
mov
dec
cmp
inc
scas
movs
pop
mov
dec
push
outs
add
jecxz
es
inc
dec
ret
xchg
div
push
ja
dec
xchg
jo
jmp
mov
gs
sbb
adc
and
sahf
dec
loopne
inc
adc
aaa
jno
xchg
cmp
ret
lods
sar
mov
test
push
fdivr
push
sub
je
dec
sti
gs
dec
push
repnz
push
(bad)
stos
fild
push
or
add
sub
jp
fstp
mov
(bad)
cmc
icebp
cmp
outs
jecxz
fucom
push
out
in
push
cs
pushf
jne
or
cmp
and
imul
mov
mov
outs
retf
inc
repnz
test
scas
loope
dec
test
push
mov
call
loope
mov
aad
xchg
dec
pop
call
adc
jno
scas
jbe
in
cmp
lods
sar
xchg
(bad)
cld
mov
(bad)
inc
ror
mov
mov
cmp
in
jge
or
ins
outs
repnz
mov
xchg
scas
lock
jle
sub
in
add
mov
cmp
mov
icebp
jmp
mov
and
cmp
cmp
shl
test
mov
fbld
mov
in
sbb
std
cmp
aad
addr16
pop
cmps
repz
cld
jae
fsub
mov
inc
mov
ficom
(bad)
mov
lock
mov
and
cmps
shl
push
lds
jmp
(bad)
cmp
rcl
push
cdq
retf
shl
inc
mov
xchg
cld
lods
retf
cdq
xchg
cdq
dec
leave
inc
cmp
push
fstp
cld
add
hlt
sti
pop
mov
push
sbb
mov
not
outs
pop
test
std
outs
lods
inc
mov
push
mov
dec
mov
dec
fs
cdq
push
daa
push
mov
pop
fisttp
mov
jb
jne
mov
out
pop
inc
cld
and
sbb
mov
pop
pop
rol
mov
push
ret
add
lock
dec
jmp
xor
in
inc
xchg
mov
cwde
imul
push
push
ins
loopne
pop
cmps
out
sub
hlt
mov
xor
jne
out
and
mov
cs
test
jmp
mov
lods
pop
cmp
sbb
xor
pop
inc
mov
mov
pop
lea
adc
jb
cmp
mov
sbb
int3
lods
pop
or
mov
adc
sbb
in
das
es
jge
inc
lahf
ins
loop
daa
shl
mov
xor
pop
push
sbb
or
ficom
push
add
jo
push
add
test
pop
sbb
fnstsw
sub
dec
jmp
push
push
xor
mov
mov
(bad)
pop
or
int3
icebp
fnsave
inc
adc
cmp
stc
callw
scas
or
scas
fstp
jecxz
xor
jg
bound
pop
dec
outs
sbb
cmp
add
ds
add
shr
sbb
cli
(bad)
fldenv
mov
add
and
movzx
repnz
adc
push
dec
neg
popf
inc
ds
(bad)
jo
sub
ret
dec
outs
cdq
jne
mov
imul
stos
cmp
in
test
adc
mov
jle
mov
cmp
mov
aad
add
in
outs
adc
or
lahf
mov
jne
dec
xchg
xor
and
xchg
ffreep
scas
inc
imul
cli
aaa
sub
std
lds
mov
int
sbb
loopne
(bad)
mov
lods
jecxz
bound
pop
nop
jge
mov
into
inc
push
cs
out
ror
mov
mov
pop
cdq
xchg
(bad)
stos
mov
add
xor
mov
add
mov
imul
xchg
inc
sbb
mov
cmp
sbb
push
fcomp
inc
inc
js
xchg
mov
jge
imul
lock
jmp
cli
mov
test
movs
push
push
adc
jbe
mov
iret
shr
je
push
jb
aas
sar
imul
fnstenv
inc
xor
push
mov
jecxz
cwde
bound
les
int3
add
inc
iret
cdq
fwait
ret
and
jno
xchg
sub
dec
push
adc
adc
pop
mov
pop
sub
daa
jp
pop
(bad)
cdq
add
in
out
(bad)
pop
xor
pushf
pop
pop
sbb
adc
pop
lds
sub
and
pop
sub
stc
dec
test
ins
sti
int
mov
mov
shr
and
push
sbb
fdiv
and
movs
popa
outs
es
aam
sub
xlat
cwde
cmp
cwde
aas
jge
(bad)
push
mov
jns
push
jecxz
pop
dec
jb
(bad)
xlat
mov
sub
or
jnp
lods
mov
hlt
inc
mov
aas
mov
adc
nop
enter
adc
xor
add
mov
out
add
fwait
jg
inc
jno
xchg
cmc
shr
cmps
xchg
sub
repnz
je
les
clc
inc
pop
and
imul
inc
loop
shr
imul
adc
sbb
pop
push
or
pop
movs
mov
and
std
ja
mov
or
stos
rcr
repnz
ror
stc
jae
sub
mov
mov
cmp
pop
push
fisub
push
inc
retf
int3
movzx
ins
sbb
add
xchg
in
scas
push
add
pop
inc
push
inc
(bad)
mov
dec
enter
aas
xchg
ja
xchg
loopne
xor
ja
fldenv
shr
int3
adc
aam
scas
push
into
int3
inc
cmp
inc
and
call
imul
push
scas
mov
sbb
fwait
aaa
repnz
stos
cmp
mov
cmp
data16
cmp
mov
and
mov
push
dec
adc
sub
sub
pop
or
int3
es
add
sbb
int
pop
ret
or
test
scas
sub
jnp
inc
pop
lods
inc
dec
adc
and
ins
or
fstp
and
add
sub
dec
rcl
je
popf
mov
cmp
es
mov
push
sub
fisttp
dec
in
push
cmp
(bad)
push
in
sub
mov
xchg
(bad)
push
out
cmps
and
mov
inc
inc
xchg
outs
movs
rcr
xchg
sar
jmp
cmps
imul
adc
adc
or
add
cmp
int3
in
xchg
stc
mov
push
sub
pop
imul
pop
enter
(bad)
sar
adc
scas
and
cmp
mov
retf
sahf
pushf
jne
xor
adc
pushf
pop
inc
in
mov
movs
mov
pop
inc
push
xlat
or
retf
in
jge
mov
popa
xchg
fmul
loop
and
inc
cmp
push
and
xchg
push
(bad)
sbb
sub
int
sub
adc
int3
js
mov
js
clc
mov
cmp
shl
push
jae
ja
mov
push
bound
dec
(bad)
xchg
mov
mov
sbb
or
scas
sub
push
push
es
and
stc
pushf
cmp
xlat
(bad)
cmps
daa
adc
mov
xor
jl
addr16
xchg
fild
sub
pop
jns
jecxz
adc
adc
push
xor
sub
xchg
mov
out
pop
clc
in
jae
fcomp
xchg
popa
mov
or
jmp
add
in
or
xchg
add
dec
lea
sub
fcmovnbe
or
repz
add
adc
push
cmp
icebp
inc
loope
sbb
and
push
jge
and
jo
cwde
leave
mov
or
repnz
jne
cld
outs
repz
add
add
jbe
mov
xchg
add
dec
ss
std
popa
mov
push
jnp
or
fist
push
pushf
jnp
mov
pushf
cmp
mov
fsubrp
test
aam
cmp
jo
inc
call
loopne
xor
pop
mov
and
add
push
cmovns
fsub
mov
push
test
ds
xchg
adc
iret
xlat
or
leave
pop
hlt
js
mov
fwait
adc
xchg
ds
ds
fisttp
in
inc
popf
or
push
ins
ret
repnz
shl
jae
ret
cmp
fdiv
mov
scas
imul
ret
mov
add
enter
jb
xchg
and
sahf
inc
fisttp
xchg
fist
xor
inc
pop
js
xchg
xor
retf
sar
pop
cmp
in
aas
enter
(bad)
rcl
mov
pop
call
dec
shl
scas
pusha
mov
rol
xchg
(bad)
(bad)
push
cli
rol
jns
mov
cmp
mov
adc
inc
and
hlt
dec
pop
or
push
cmps
div
xchg
push
(bad)
push
scas
dec
retf
and
stos
dec
xrelease
jecxz
ret
or
movs
sbb
cwde
and
or
xchg
mov
and
int
hlt
retf
sub
and
lahf
sbb
rcr
or
sub
jno
sbb
mov
xor
mul
sub
sub
mov
in
xchg
int3
mov
sub
fdivp
or
les
aad
or
cmp
adc
icebp
stos
sub
sbb
and
fwait
mov
std
into
test
sub
imul
(bad)
shl
mov
int
pop
add
jnp
inc
pop
mov
pop
lea
dec
stos
cs
pop
mov
push
and
data16
(bad)
cli
inc
shr
and
not
ins
ud0
jp
dec
(bad)
sbb
adc
sub
scas
sub
cmp
sbb
xor
ins
imul
and
inc
rep
and
jns
jmp
inc
mov
xchg
outs
push
pop
inc
xor
push
adc
push
mov
popa
lds
(bad)
xor
or
mov
xchg
jne
mov
imul
push
fiadd
hlt
ins
ins
cmc
arpl
cmp
std
icebp
inc
sub
imul
ror
retf
icebp
mov
push
imul
mov
hlt
jns
loopne
xor
aam
sbb
mov
sub
or
dec
clc
fwait
les
jge
xor
in
pop
rcr
dec
or
lods
inc
movs
inc
mov
jle
sub
cmc
cmp
and
cmps
dec
xchg
push
cld
fs
icebp
into
adc
cdq
inc
lahf
fild
adc
xchg
fbstp
(bad)
xchg
lods
scas
or
or
stos
ins
push
dec
(bad)
dec
aaa
inc
sbb
sbb
push
push
xchg
add
mov
jb
mov
or
aaa
pop
cmp
xchg
adc
gs
jno
mov
xor
push
xlat
dec
cmp
arpl
data16
mov
xchg
mov
sub
ror
test
je
(bad)
lods
(bad)
retf
loop
sub
iret
adc
in
and
out
call
add
push
mov
std
ffreep
adc
lock
or
push
shl
fst
lods
rcl
rcl
xchg
push
sbb
push
push
pop
lds
(bad)
adc
pushf
les
ss
iret
add
(bad)
pop
sub
adc
dec
imul
stos
mov
sub
scas
ja
mov
sbb
repz
pop
sbb
jp
sbb
ds
jmp
sub
mov
test
adc
mov
ds
ja
es
cmp
jbe
div
or
mov
bound
test
adc
jl
aas
push
push
push
sbb
or
fs
or
sbb
ror
sti
mul
aas
or
push
fnstcw
jo
popf
pop
js
add
inc
mov
cmp
imul
test
sti
loop
das
add
retf
cmp
das
add
add
and
xchg
rol
adc
repz
and
xor
xor
add
stos
out
jl
or
inc
loop
sti
sbb
cmp
fisubr
movs
fmul
fisttp
out
jge
mov
adc
xlat
xchg
sar
pop
jo
jae
adc
pop
nop
iret
or
inc
jbe
mov
sbb
fdiv
pushf
ja
sbb
shl
jmp
jge
ret
xor
nop
push
adc
das
nop
cmp
cld
xor
sub
in
imul
iret
and
xchg
outs
(bad)
(bad)
hlt
sub
stos
or
loop
and
jns
stc
loope
les
mov
(bad)
jmp
sub
push
fldcw
fs
mov
cwde
int3
push
mov
loop
imul
xor
cmp
movs
push
mov
pop
(bad)
in
or
out
or
mov
pop
bound
sub
pushf
leave
cmp
jp
popf
(bad)
push
repz
mov
inc
push
xlat
fnsave
adc
and
pop
jg
sbb
idiv
xor
lods
or
jae
xor
add
sar
mov
arpl
leave
inc
bound
xchg
popa
rol
sbb
pop
adc
out
pop
cdq
daa
push
mov
mov
(bad)
adc
mul
in
mov
(bad)
pop
xor
sbb
shl
push
mov
lea
ret
lods
stos
test
rol
fiadd
cmp
sti
xor
mov
neg
jecxz
aas
inc
mov
imul
(bad)
jbe
sub
fnclex
ror
jmp
icebp
add
jnp
stos
add
inc
cmp
movs
call
and
stc
pop
out
mov
cld
pop
add
stos
jbe
mov
mov
test
inc
sbb
leave
add
jne
push
jns
or
cli
dec
fsub
push
or
xchg
push
cmp
and
inc
mov
pop
xor
dec
xchg
(bad)
jne
sbb
in
pop
test
xchg
sbb
pop
js
out
ins
mov
js
pop
xchg
mov
pop
shl
cwde
std
and
or
mov
rcl
rcl
data16
add
(bad)
jmp
retf
or
sar
jb
repnz
add
in
add
mov
mov
mov
cmp
ds
fstp
pop
pop
retf
daa
dec
mov
inc
mov
lds
push
idiv
mov
into
mov
or
xlat
or
sbb
jnp
out
imul
repz
fidiv
not
mov
into
jge
xor
cmp
fisubr
xchg
mov
fwait
pop
ins
mov
lahf
test
or
push
sar
or
dec
xchg
aad
push
in
cmp
push
sbb
and
sbb
test
mov
stos
mov
ins
add
sahf
jbe
mov
pop
xchg
fsub
add
test
mov
fcmovb
dec
shl
add
cmps
in
test
std
fiadd
sub
dec
jbe
add
pop
inc
loopne
sti
imul
push
pusha
inc
inc
xchg
jbe
sbb
pop
sub
sbb
retf
sbb
popf
lods
jns
adc
sub
js
test
mov
cmp
mov
imul
sbb
push
in
mov
push
scas
iret
cmps
or
mov
xor
or
dec
and
imul
dec
push
pop
and
push
add
fstp
imul
cmp
ja
stc
mov
data16
sub
jno
stos
mov
xchg
fidiv
inc
mov
std
add
clc
daa
je
popf
mov
mov
repz
mov
test
mov
cmp
xchg
lods
sti
or
push
adc
out
imul
xor
arpl
jo
loopne
push
aas
jp
mov
mov
push
push
xor
adc
stos
call
adc
jmp
fwait
push
iret
ja
lds
jg
dec
ror
popf
xchg
or
nop
out
mov
mov
into
loopne
xchg
mov
dec
int
or
(bad)
das
xor
mov
out
sub
pop
add
cwde
outs
or
or
pop
xchg
or
inc
pop
lds
cdq
mov
adc
mov
fild
and
sbb
test
call
add
loope
xchg
scas
mov
push
inc
cmp
in
daa
xchg
cdq
push
jg
mov
mov
mov
aam
fld
cmps
jg
in
test
bound
push
and
repnz
or
sti
push
out
mov
xor
std
mov
les
push
jno
dec
cmp
imul
mov
fcom
int3
pop
cmps
out
fcmove
das
in
xchg
dec
push
push
and
(bad)
sbb
mov
mov
add
lods
inc
and
xor
add
out
gs
fld
mov
les
sbb
xchg
loopne
outs
add
sbb
inc
(bad)
sub
dec
xchg
and
sbb
cmps
pusha
add
mov
sbb
mov
repnz
cdq
sbb
cs
sub
ja
call
aaa
(bad)
int
test
vpsubusb
ret
adc
clc
xor
mov
ins
inc
jnp
mov
sar
stc
jno
lea
jne
push
pop
jecxz
addr16
sahf
shl
fcom
(bad)
xor
mov
popf
sub
test
push
jmp
cld
daa
fst
cmps
out
call
sbb
sti
or
inc
clc
add
push
cs
nop
push
rcl
shr
jnp
out
fwait
shr
xor
or
inc
gs
loop
sbb
sbb
xchg
dec
fild
outs
mov
mov
movs
xor
sar
pop
cmc
cli
inc
jnp
xchg
(bad)
fs
dec
jae
in
xor
inc
out
pop
sbb
or
out
mov
test
loope
dec
jl
arpl
dec
sbb
shl
icebp
mov
sub
sub
fwait
xchg
cdq
test
scas
adc
dec
leave
mov
xor
pop
jmp
es
adc
loopne
data16
clc
xor
shl
(bad)
imul
bnd
push
dec
dec
loop
or
pop
out
and
in
jg
ret
loope
jb
jne
pop
repz
fbstp
ror
inc
xor
faddp
mov
and
pushf
sti
dec
mov
adc
sbb
sub
sahf
test
jno
dec
xchg
or
mov
sub
sbb
or
out
jl
aad
lods
imul
adc
imul
les
retf
adc
inc
je
mov
clc
xor
push
rol
mov
dec
push
pop
xchg
add
in
or
push
mov
and
arpl
cmps
js
repnz
ja
movs
scas
mov
sub
mov
daa
imul
jnp
aam
xchg
pop
ror
cmp
and
jmp
pop
nop
adc
pop
rol
xor
les
arpl
nop
test
sbb
ror
push
outs
stc
les
jge
jg
jmp
enter
loope
(bad)
iret
aas
and
popf
cmc
dec
movs
inc
sahf
and
ds
das
lods
hlt
sbb
js
ins
xchg
xchg
aas
(bad)
sbb
ror
shl
sub
mov
jmp
fwait
inc
ins
push
outs
std
add
inc
call
cmps
mov
dec
push
cld
jno
push
cmps
adc
neg
mov
cmc
ror
std
sub
pop
dec
mov
fnstsw
adc
adc
sub
xor
pop
push
(bad)
dec
jno
push
fwait
in
inc
dec
jno
mov
leave
ret
xchg
pop
lods
or
jb
xchg
and
xlat
jae
jnp
dec
out
(bad)
mov
push
jecxz
cmp
dec
test
sub
sahf
adc
jge
and
out
mov
adc
adc
imul
fisub
sub
loope
push
aas
inc
mov
cdq
(bad)
sbb
inc
lea
cdq
cmps
mov
hlt
sub
inc
xor
fmul
cmp
aad
mov
repnz
cs
aaa
jecxz
and
cmp
jg
sbb
cmp
add
adc
xor
clc
xchg
std
add
int
and
jbe
les
xchg
mov
icebp
retf
pop
mov
sbb
(bad)
outs
in
push
imul
lods
(bad)
adc
cmp
jns
outs
mov
cmp
or
cmps
sub
mov
pusha
add
(bad)
jmp
ins
lock
and
mov
mov
add
jp
sub
mov
and
cli
add
sub
nop
pop
sbb
inc
fiadd
mov
movs
pop
xchg
pop
sub
add
sub
inc
mov
xchg
xchg
shr
push
mov
sub
lahf
jp
imul
jmp
call
add
or
es
xchg
mov
mov
icebp
or
aad
jnp
(bad)
int3
aam
dec
jo
mov
cld
cmps
push
test
leave
mov
stos
cwde
aaa
xor
cli
in
fistp
inc
(bad)
pop
push
es
out
xchg
bound
neg
in
scas
js
jecxz
jns
sti
adc
push
mov
mov
mov
scas
(bad)
sub
jp
cld
repnz
call
js
ret
lea
(bad)
adc
sub
xor
and
adc
or
jbe
test
xor
jbe
in
mov
ret
retf
icebp
dec
(bad)
int3
sub
popa
out
dec
leave
sbb
sub
pop
icebp
jbe
push
cmp
xor
jnp
sbb
sbb
shl
sub
dec
pop
aaa
inc
int
add
mov
push
pop
sbb
sbb
sub
enter
and
cld
sti
xor
adc
sbb
gs
out
aas
ins
cli
shr
add
cmp
lods
cmc
xchg
dec
mov
dec
ins
cld
out
mov
lods
adc
fwait
sub
add
inc
test
(bad)
call
push
xchg
ds
add
inc
jnp
in
rol
and
jmp
mov
lahf
sub
xor
cdq
call
in
add
aas
jmp
xor
pop
inc
ja
rol
and
cmp
sub
out
(bad)
mul
xor
xchg
mov
mov
movs
aas
lock
pop
stc
or
cmc
cli
retf
leave
ja
in
add
jne
add
mov
or
sub
cld
push
fdivr
adc
bound
adc
je
mov
mov
int3
daa
inc
cmp
retf
jne
cs
frstor
push
pop
fstp
cwde
add
mov
xor
xor
std
jns
call
test
pop
movs
sub
mov
mov
push
jecxz
push
(bad)
daa
test
dec
pop
sti
inc
xchg
stos
mov
jae
mov
mov
cld
ins
les
sbb
jle
lods
add
les
pop
bound
jmp
push
cmps
jo
js
fwait
push
pop
je
xor
xchg
clc
dec
pop
add
xchg
jl
sub
ror
shl
jne
xchg
pop
adc
stos
cdq
adc
sbb
pusha
in
sar
out
xor
or
inc
ins
xchg
clc
pop
out
pop
ins
(bad)
fld
into
and
jg
test
in
mov
leave
pushaw
out
mov
call
pop
push
lock
repnz
dec
ins
mov
cli
lds
sti
fwait
jg
nop
sbb
mov
push
(bad)
jns
mov
jmp
push
aam
pop
pop
and
mov
adc
in
adc
inc
adc
cmp
movs
lds
loopne
es
jmp
cmp
sbb
addr16
jl
push
sbb
fcmovnb
je
cmp
imul
mov
push
mov
out
jp
inc
aam
mov
jmp
adc
stos
mov
stos
inc
les
push
stos
pop
test
in
and
mov
push
inc
mov
inc
lea
mov
iret
push
sub
hlt
inc
mov
add
dec
push
push
pop
sub
ror
push
lock
fidiv
xchg
jle
xor
cmp
repz
xchg
cmp
call
cwde
mov
loope
cs
into
fbld
xor
cmps
xchg
(bad)
fiadd
sub
test
cmc
in
mov
ret
mov
pusha
jmp
rcl
jl
push
and
popa
jl
inc
push
mov
mov
xor
jge
gs
mov
idiv
adc
daa
repz
scas
lock
repnz
fwait
dec
aam
aam
xor
fbstp
adc
lods
cmp
adc
dec
sbb
shr
leave
lds
int3
clc
fidivr
push
cmp
push
lods
add
arpl
adc
mov
stos
or
fld
or
sub
mov
mov
pop
cmp
mov
push
test
out
push
xor
lods
rep
adc
push
pushf
(bad)
popf
or
loopne
and
sub
xchg
fstp
xchg
inc
xor
mov
pop
add
mov
iret
jmp
int3
out
and
sub
add
(bad)
shl
xor
push
inc
das
rcl
cmp
or
imul
arpl
sbb
test
ffree
jmp
xchg
add
cmp
fnstcw
xchg
push
fiadd
sbb
sbb
push
imul
or
and
int3
dec
mov
ja
xchg
(bad)
lds
xor
push
out
(bad)
push
push
enter
pop
jno
lahf
inc
mov
sub
sbb
fist
(bad)
sar
jbe
or
mov
inc
scas
ins
mov
mov
call
retf
fcomp
jne
js
hlt
scas
mov
mov
adc
push
bnd
pop
mov
repz
pop
js
cli
nop
or
aam
xor
outs
xor
xor
call
jge
movups
fwait
not
dec
mov
aam
xor
dec
or
cmp
pop
mov
cmp
dec
fs
mov
pop
call
sub
ror
pop
hlt
cmovle
ret
mov
cmp
push
cmps
jl
mov
rol
std
add
adc
xchg
pop
aad
sbb
pop
mov
das
xor
xor
inc
jnp
jne
ret
push
mov
sti
loope
pop
mov
mov
stos
cmp
push
push
hlt
nop
sub
(bad)
call
xor
xchg
cmp
(bad)
xlat
mov
sbb
xor
imul
cmps
sub
xchg
int3
pop
out
shl
xchg
inc
mov
fisttp
xchg
call
pop
or
test
mov
or
add
pop
add
mov
rcr
mov
cwde
loope
adc
add
jno
mov
push
test
xor
scas
pop
jne
cdq
mov
sbb
jmp
or
or
or
jecxz
fwait
not
fwait
xchg
sar
dec
std
xchg
cmp
adc
lods
movs
mov
das
(bad)
scas
jge
jb
pop
ja
popa
jge
(bad)
aam
pop
rol
or
jbe
add
and
pop
in
xor
xchg
cld
mov
push
neg
rcr
aad
test
iret
rol
sbb
les
jno
loope
(bad)
fidiv
dec
sub
and
xchg
mov
hlt
xlat
jns
mov
and
xlat
fstp
add
lods
arpl
cmp
jns
cmp
shr
lock
scas
test
xor
test
cmp
test
dec
jns
cwde
xor
clc
sub
dec
fld
push
jne
clc
sub
push
pop
inc
pop
cwde
mov
adc
sahf
(bad)
fisubr
pop
(bad)
(bad)
loopne
mov
enterw
xor
jo
and
add
or
xchg
outs
ror
pop
and
stos
sahf
(bad)
in
xor
sahf
mov
je
cli
adc
lahf
popf
fs
sahf
jecxz
and
imul
(bad)
sub
mov
test
sub
add
mov
xchg
data16
mov
aam
cmps
ja
mov
jmp
rcl
inc
and
jg
mov
add
shl
arpl
ror
and
sbb
dec
movs
repnz
loope
mov
sar
das
and
mov
pop
(bad)
retf
push
push
lods
mov
lds
setne
movs
out
mov
loop
(bad)
movs
fstp
push
aaa
mov
xor
push
popf
lods
es
sar
jne
sbb
test
dec
loop
mov
jp
pop
mov
mov
stos
jb
dec
xchg
mov
mov
xchg
outs
arpl
jb
mov
xor
outs
fs
mov
add
or
in
in
repnz
cmp
repz
ja
mov
repz
leave
enterw
xchg
push
jg
rdpmc
adc
movs
inc
push
mov
arpl
call
add
or
lods
xor
inc
fsubr
pop
fisub
fiadd
je
sub
sbb
ss
mov
or
test
inc
repz
jnp
leave
push
cmp
xlat
push
xchg
sub
ror
mov
and
push
or
add
inc
inc
adc
and
xchg
out
adc
and
mov
add
js
push
cmp
popa
add
pop
es
cmp
outs
es
sub
(bad)
outs
mov
call
mov
shl
push
lods
add
pop
and
dec
nop
dec
ja
div
mov
jae
jg
mov
mov
and
clc
jnp
inc
ror
retf
dec
xlat
imul
in
ins
cmp
retf
xchg
movs
int
sbb
jne
pop
cmps
jle
or
xchg
mov
sub
xchg
push
nop
repnz
and
call
or
push
gs
in
cli
adc
test
pop
pop
aaa
out
retf
mov
cmc
jmp
mov
push
ficom
sbb
jecxz
movs
xchg
jl
loop
sub
fistp
cld
test
in
sbb
mov
aas
addr16
xor
pop
pop
jbe
pop
xor
add
xchg
mov
jns
loope
push
mov
not
jb
fdivr
sub
call
inc
into
mov
push
js
push
fs
rcl
outs
(bad)
dec
jl
add
cmps
mov
pop
lahf
jg
(bad)
sar
retf
ins
or
(bad)
enter
add
mov
or
jbe
jmp
inc
add
cmps
push
ins
stos
mov
fcmovb
add
rcl
sub
adc
dec
and
dec
inc
adc
jnp
arpl
retf
out
icebp
add
ds
repz
push
sti
sub
xor
test
or
fcmovnbe
inc
lds
rol
or
and
sub
mov
adc
out
mov
movs
cmp
enter
and
mov
stc
in
sar
jmp
pop
add
ins
pop
daa
(bad)
(bad)
push
sbb
push
out
into
mov
fnstsw
fistp
add
gs
or
int
scas
mov
mov
xchg
inc
test
popa
aas
outs
call
inc
add
ret
nop
ins
loope
jmp
push
(bad)
stos
xor
cli
inc
pusha
(bad)
call
repz
sbb
inc
ins
imul
cmp
movs
ins
das
sub
mov
popa
in
mov
stc
movs
push
mov
into
test
add
cmp
or
imul
fcomp
sub
call
loope
das
enter
scas
(bad)
push
adc
add
sub
add
or
dec
sbb
pop
loope
sahf
add
push
imul
cmp
pop
and
pop
mov
(bad)
sub
out
pop
loop
stos
das
push
les
out
cmps
fnsave
sub
sar
mov
add
cmps
aad
push
jo
pop
icebp
pop
push
add
dec
adc
icebp
dec
mov
ja
ja
cmp
gs
data16
retf
mov
clc
popa
adc
daa
xchg
loope
pop
aaa
retf
int
(bad)
dec
push
sub
loopne
iret
mov
lods
inc
xor
rcr
lods
js
jae
stc
lock
pop
adc
in
sbb
push
cmc
je
jbe
pusha
sbb
inc
fiadd
test
xchg
inc
mov
popf
cdq
push
push
inc
shl
call
adc
dec
dec
mov
(bad)
and
imul
pop
ror
lds
inc
ja
addr16
loop
aas
xor
(bad)
cmp
or
jecxz
sub
xlat
scas
out
out
pop
mov
int3
sub
fisttp
add
(bad)
call
cmp
rep
in
jae
lahf
pop
loopne
mov
hlt
dec
(bad)
icebp
mov
push
mov
imul
mov
pop
arpl
xor
inc
cdq
pop
ins
jmp
pop
stos
jmp
idiv
fadd
jmp
mov
out
and
add
fwait
xor
push
in
jg
dec
adc
inc
cmp
scas
lods
fist
cmps
mov
std
retf
or
cmp
xor
leave
imul
inc
mov
jp
shr
mov
jle
sbb
xchg
xchg
cmc
repnz
iret
(bad)
hlt
xchg
retf
data16
pop
mov
mov
rcr
stc
pop
loope
mov
jns
imul
mov
(bad)
in
adc
in
idiv
ret
mov
push
xlat
and
es
mov
inc
sahf
add
add
jl
enter
inc
xchg
loope
loopne
shl
cmc
repnz
mov
int
test
sub
ret
inc
jbe
jne
(bad)
(bad)
push
mov
pop
test
add
sub
loopne
mov
mul
stc
sahf
mov
and
ror
aaa
(bad)
int3
add
sub
nop
sbb
sti
test
mov
jno
xor
pop
inc
fcomip
jl
int3
adc
jne
mov
mov
adc
mov
mov
push
pop
adc
nop
mov
dec
jb
(bad)
in
or
mov
or
and
scas
call
cmps
mov
and
stc
fs
addr16
gs
dec
and
loopne
xchg
sub
dec
jmp
jno
in
iret
fisttp
sbb
test
loopne
adc
and
rcl
push
call
out
dec
pop
cmp
cwde
inc
test
outs
fdiv
jb
mov
xchg
or
push
cmp
ds
jle
adc
loope
add
pop
xchg
inc
cmps
aas
push
sbb
push
push
scas
mov
add
int
adc
fstp
aas
loope
or
lahf
fiadd
cdq
retf
outs
or
sub
mov
inc
jmp
pop
mov
cmps
xor
push
sbb
cld
pop
fs
sub
and
test
out
jl
add
or
jmp
test
fisttp
cmp
shr
push
ja
inc
sub
cmp
add
(bad)
mov
push
nop
mov
out
js
cmps
popa
popf
and
mov
idiv
cmp
outs
loop
or
lods
(bad)
pusha
cmp
jmp
cmp
xchg
and
in
call
pop
xchg
xchg
xchg
pop
fcom
xchg
pop
rcl
xor
pop
cli
mov
mov
in
lds
mov
adc
iret
retf
or
dec
xlat
mov
add
hlt
popf
pop
cmps
xor
cmp
adc
imul
jmp
jmp
fimul
movs
add
cmp
or
sahf
inc
inc
test
inc
outs
cmp
ror
mov
mov
rcr
and
fild
mov
fadd
jne
xlat
push
sahf
test
or
push
mov
cmp
fcomp
add
call
test
jb
jo
sti
push
bound
inc
add
and
test
hlt
and
cmps
dec
out
out
in
repz
xor
dec
mov
add
nop
inc
or
sbb
in
pop
mov
sbb
jnp
rcr
mov
jg
mov
cmps
loope
xor
fwait
mov
xor
pop
pushf
xor
add
mov
pop
inc
mov
mov
stc
adc
push
pop
daa
fadd
add
scas
in
out
lds
movs
xor
into
das
fild
jg
sbb
xor
out
std
push
dec
jno
xor
mov
retf
loopne
ret
(bad)
sqrtps
or
lahf
push
xor
(bad)
cdq
or
mov
cmps
scas
jne
mov
push
test
adc
enter
ror
mov
add
mov
int3
not
pop
mov
jne
not
dec
or
add
fist
dec
stos
(bad)
cmc
or
cmp
pop
dec
cmps
mov
cmp
in
cs
jb
jmp
fild
(bad)
bound
fwait
jle
(bad)
jp
mov
cmps
inc
clc
fwait
retf
pop
push
out
sbb
mov
fnstcw
dec
mov
pop
add
or
and
jb
inc
arpl
push
psraw
sbb
inc
icebp
test
dec
push
push
add
xlat
rcl
lds
add
ja
sub
adc
push
and
lahf
mov
fst
scas
jnp
push
mov
cmp
popa
loopne
push
xor
xor
jns
out
inc
xchg
push
enter
or
adc
fild
call
sbb
or
jne
js
adc
cmc
push
int
cmp
lods
xchg
sub
adc
jge
icebp
shl
icebp
cmp
adc
add
jge
mov
push
imul
aam
mov
or
test
sbb
ror
bound
mov
jge
repz
and
inc
jge
cmps
fidiv
cmps
pop
jns
jbe
mov
stc
or
(bad)
dec
fcomp
mov
sub
xchg
dec
jne
or
mov
inc
rol
pop
mov
jle
cdq
mov
and
pop
inc
mov
push
mov
and
adc
leave
mov
jmp
ret
arpl
mov
ficomp
jle
mov
js
lds
aad
rep
jb
push
xor
popw
fadd
fcomip
xchg
lock
push
jo
and
hlt
mov
jnp
(bad)
jmp
xchg
cmc
ror
pop
iret
pusha
ss
(bad)
js
mov
inc
clc
loop
cmp
ds
aas
mov
addr16
dec
add
ret
dec
outs
adc
ins
cmps
neg
xchg
outs
xor
xor
inc
ss
out
pop
pop
ret
xchg
js
pop
icebp
xor
shr
jns
jg
stc
shl
mov
ins
xchg
jo
retf
into
and
adc
aaa
call
inc
xor
jg
push
add
call
(bad)
pop
inc
out
push
out
int3
ds
iret
push
inc
xchg
and
pop
jo
dec
daa
mov
xlat
mov
inc
loope
fcomi
inc
jbe
lea
mov
addr16
mov
shl
lea
and
adc
and
and
je
pop
mov
push
sub
mov
loopne
stc
iret
test
inc
stc
lods
(bad)
repz
add
add
adc
sub
das
(bad)
in
mov
ins
dec
cdq
jae
call
out
pop
rcl
data16
sbb
pop
mov
les
lock
(bad)
movs
pop
ins
jae
jb
stc
and
mov
test
adc
mov
and
pop
js
xor
loopne
pusha
ss
jmp
arpl
mov
dec
je
popf
cmp
repz
jmp
xor
stos
and
leave
fiadd
(bad)
movs
jns
ds
fs
sahf
cmp
rcr
add
adc
ret
xchg
jo
mov
mov
sete
sub
sub
jne
mul
push
add
(bad)
cmp
xor
or
aad
rol
ins
xchg
add
pop
(bad)
cdq
in
aaa
es
mov
int
push
mov
sub
sub
(bad)
pop
shl
repz
add
cmp
mov
sbb
push
xor
mov
push
adc
mov
pop
add
movs
call
jmp
mov
jno
pushf
jecxz
repnz
jne
jl
fcom
xor
cwde
je
mov
in
inc
dec
(bad)
pop
sti
jb
mov
ins
int3
lahf
push
dec
sar
(bad)
cli
mov
sub
ds
ret
dec
jns
mov
jno
daa
lahf
aaa
xchg
jl
imul
ds
sbb
lahf
dec
xchg
in
pop
(bad)
adc
push
mov
or
pop
dec
repz
sub
lock
sbb
loope
sub
out
mov
jns
pop
and
cdq
icebp
int
ins
adc
or
cmp
pop
mov
fistp
repz
mov
fisttp
dec
jg
sbb
(bad)
repnz
mov
push
out
mov
mov
(bad)
jmp
in
mov
sub
inc
stos
xchg
mov
rcl
mov
popa
stos
inc
cmps
cdq
mov
icebp
xchg
ds
outs
js
mov
lods
and
xor
cmp
iret
arpl
jmp
or
and
xchg
xchg
jecxz
add
push
pushf
lds
and
cmp
add
lds
jne
iret
fldcw
dec
nop
shl
retf
loope
test
jne
and
fsubr
and
movs
inc
jb
cmp
movs
and
fs
pop
inc
outs
mov
fld
pusha
loope
inc
sub
pop
inc
jno
stos
gs
mov
xor
retf
sbb
xchg
mov
inc
(bad)
dec
mov
sbb
int3
call
mov
stos
fwait
popa
sub
mov
pop
jne
inc
(bad)
mul
mov
push
inc
pop
mov
jp
stos
shr
cmp
mov
(bad)
(bad)
adc
mov
xchg
data16
adc
gs
cmps
jmp
pop
sbb
xor
test
repz
dec
add
pop
cmp
pop
jge
inc
and
adc
out
out
dec
push
rcr
mov
in
sar
(bad)
jle
loopne
lds
and
mov
loope
in
push
loope
ret
mov
xchg
lock
xchg
cdq
mov
retf
mov
js
out
inc
xor
jmp
fwait
data16
push
adc
xchg
(bad)
mov
repnz
adc
je
popf
add
xlat
jbe
cmp
stos
in
(bad)
jno
cmp
mov
inc
pop
call
icebp
imul
inc
mov
jbe
pusha
inc
mov
jmp
add
std
rol
jmp
mov
ins
mov
or
fcom
inc
das
xor
test
or
outs
mov
shl
mov
inc
or
mov
cs
mov
int3
das
shr
and
nop
loop
stc
data16
cmc
mov
mov
inc
fdivr
daa
sbb
stos
xchg
jmp
in
add
es
int3
sbb
sbb
push
repnz
jbe
test
movs
mov
inc
dec
sub
push
push
jae
sbb
jae
push
xchg
loopne
sub
adc
mov
fs
mov
scas
fmul
sti
and
mov
xor
jne
test
jbe
bound
mov
jmp
or
sti
call
mov
nop
add
cli
inc
pop
in
and
pop
or
xchg
sub
push
sar
clc
mov
cmp
enter
xchg
push
push
or
push
inc
rcl
fsubr
into
add
jne
not
fs
cmp
push
cs
outs
ins
mov
pusha
fmul
repnz
push
ins
sbb
mov
test
push
sbb
retf
or
xchg
adc
push
imul
popa
mov
adc
xlat
daa
aaa
mov
ds
sbb
and
push
mov
mov
out
jo
xchg
mov
sub
test
pop
int
test
push
rcl
xchg
jmp
(bad)
outs
cmp
retf
dec
sub
inc
repz
imul
(bad)
xor
pop
jns
push
jb
lock
mov
sub
test
js
inc
fnstsw
push
or
rcl
jmp
dec
sub
xchg
jb
mov
mov
and
push
mov
arpl
or
add
inc
adc
adc
mov
pop
daa
sub
and
movs
pop
xor
ret
sti
fnstcw
aaa
inc
es
add
stos
fcmove
pop
aas
movs
sub
mov
dec
imul
inc
push
adc
mov
movs
adc
sbb
(bad)
stc
push
stos
jno
and
sub
sbb
loopne
or
xchg
repnz
cs
sub
sub
and
aad
call
pushf
jno
push
fs
(bad)
(bad)
stos
dec
or
das
adc
mov
mov
pop
and
sahf
mov
loope
movs
rol
mov
or
push
stos
mov
jecxz
push
lahf
adc
scas
add
inc
mov
or
xchg
popf
std
mov
pop
in
in
ficom
dec
xor
mov
jmp
inc
sbb
inc
cmps
dec
mov
jecxz
call
mov
mov
es
scas
fsubr
mov
inc
or
adc
mov
movs
(bad)
pop
xlat
push
jo
pop
inc
mov
cmp
adc
xchg
pop
out
es
pop
test
popa
js
pushf
mov
xchg
cmps
in
push
pop
ret
push
test
aaa
test
jp
in
inc
ror
add
pop
mov
rol
xchg
or
jnp
mov
mov
rcr
lahf
out
mov
lods
stos
push
in
mov
rcr
pop
push
push
mov
aas
push
aad
mov
cli
cmp
icebp
and
stos
rol
ret
inc
lds
xor
push
dec
sub
sbb
xor
mov
inc
addr16
xor
and
pop
push
and
out
xchg
psubb
and
jg
lods
xchg
mov
mov
xchg
adc
mov
cmp
sub
fnstenv
or
cmps
jg
rcr
call
sbb
aam
sub
lods
fs
hlt
cmp
scas
mov
xchg
cld
lods
add
clc
add
inc
cmp
or
or
xchg
sub
aaa
xchg
xor
fisubr
lods
inc
in
cmp
pop
push
mov
mov
stc
xor
inc
push
jne
neg
xchg
movs
popa
(bad)
clc
das
pop
xchg
jne
jns
push
call
lods
out
inc
stos
ror
push
mov
lea
gs
div
mov
jb
popf
sbb
mov
loopne
mov
(bad)
mov
adc
cmps
add
scas
jns
(bad)
rcr
pop
inc
fisttp
mov
enter
push
ficomp
imul
dec
fwait
adc
sbb
lds
adc
pusha
(bad)
cmp
mov
loopne
jbe
push
sbb
push
push
add
mov
mov
push
mov
lock
pop
sti
cs
inc
mov
dec
(bad)
fwait
movs
loopne
jnp
call
adc
mul
mov
jp
mov
inc
dec
retf
push
data16
addr16
pop
fdiv
(bad)
ss
loop
xor
dec
or
or
cmp
sbb
lods
mov
cmp
mov
int3
mov
xchg
aam
ret
mov
jecxz
bound
adc
jp
and
arpl
push
push
dec
mov
mov
xchg
pop
into
xor
shr
cmps
loop
lock
in
jecxz
jmp
jle
movs
cmp
pop
movs
dec
loopne
push
push
push
push
test
hlt
sub
or
inc
out
sub
stos
jl
inc
mov
out
das
and
adc
sbb
push
in
pop
stc
data16
sub
scas
mov
adc
xchg
sar
sbb
and
xchg
mov
ins
cmps
xor
movs
adc
add
push
xchg
push
adc
mov
stos
std
pop
ds
adc
sub
cs
ja
ret
xchg
adc
push
mov
dec
mov
imul
push
xchg
icebp
dec
or
je
mov
cmc
sub
daa
dec
and
push
out
push
jne
mov
loopne
lock
ss
dec
or
sbb
xor
repz
cmc
sbb
loopne
test
adc
xchg
add
daa
push
pop
aas
add
cmp
jge
lahf
mov
push
fisttp
mov
push
fisttp
mov
rol
sbb
sbb
ja
fdivr
cli
lock
mov
outs
sahf
pushf
std
or
sub
hlt
or
pop
jecxz
adc
enter
(bad)
jge
xchg
ds
iret
mov
push
lea
scas
aas
sub
mov
mov
rol
mov
lods
pop
mov
mov
sbb
cmps
loope
xor
dec
push
test
xor
xor
retf
sar
and
lds
xchg
rol
sbb
or
fdivr
out
sub
adc
test
add
cmp
jmp
mov
in
pop
mov
test
(bad)
xchg
imul
loopne
in
movs
aaa
popa
pusha
inc
call
enter
fmul
jbe
pop
test
test
into
jne
lods
test
mov
pop
loop
lods
cs
inc
inc
out
pop
sub
movs
xor
add
lea
sub
inc
enter
outs
add
jbe
lahf
pop
in
fiadd
test
les
aaa
xchg
ss
push
mov
mov
retf
pop
xchg
mov
mov
arpl
ficom
hlt
fs
(bad)
mov
sub
rcr
in
pop
aam
sub
pop
arpl
(bad)
fstp
icebp
addr16
cmp
xchg
and
sbb
mov
xchg
mov
lahf
nop
shr
call
xor
jo
sbb
xor
sbb
pop
jle
sub
idiv
mov
not
xchg
sub
(bad)
mov
js
mov
or
xchg
inc
jle
sbb
push
jbe
or
(bad)
mov
retf
(bad)
out
lods
adc
enter
es
or
push
add
cs
or
rcl
in
sub
or
pusha
(bad)
mov
les
xchg
cmc
imul
mov
sti
outs
movs
xchg
mov
mov
lds
push
fild
pop
jmp
add
xchg
icebp
jp
mov
adc
or
dec
aas
cmp
lds
mov
sar
fistp
mov
jbe
test
or
jb
sub
add
jne
pop
xchg
push
je
loope
loop
push
(bad)
scas
pop
push
mov
add
or
mov
push
or
add
mov
fs
aad
out
imul
dec
pop
mov
or
or
popf
xchg
js
mov
or
inc
cmp
jno
mov
repz
cmp
imul
inc
sub
jae
ret
add
aas
xor
shl
aas
dec
push
mov
sbb
and
adc
outs
into
jp
(bad)
(bad)
lock
mov
test
jle
jbe
mov
stc
mov
inc
push
inc
lods
dec
cmp
(bad)
jp
cmp
icebp
dec
test
out
mov
mov
test
or
fsubr
in
and
and
aad
(bad)
cli
mov
in
sbb
jnp
push
iret
hlt
pop
or
and
sub
(bad)
or
xchg
cmp
sbb
push
into
or
clc
xchg
mov
sbb
push
push
imul
dec
sbb
aas
jno
dec
loope
sub
sbb
mov
adc
(bad)
sbb
cmp
arpl
or
jne
nop
pusha
loope
xchg
lahf
lahf
dec
dec
xor
neg
mov
in
sbb
xchg
jecxz
pop
push
xor
fnstenv
and
pop
test
call
jb
adc
xor
retf
adc
and
xchg
add
cmp
inc
aad
call
inc
push
mov
call
cld
aaa
lods
je
addr16
lods
mov
enter
imul
shr
daa
pop
rol
mov
push
push
adc
packuswb
movnti
out
mov
add
imul
dec
inc
mov
sbb
mov
and
mov
sub
popf
std
inc
(bad)
and
lahf
adc
xor
pop
(bad)
adc
leave
inc
nop
inc
shr
xchg
push
test
(bad)
(bad)
ins
xchg
pop
add
nop
and
cmps
or
inc
leave
in
in
or
jmp
sbb
fidivr
jo
inc
pop
adc
test
mov
shl
mov
aaa
data16
sub
mov
mov
test
fisub
mov
xchg
rcr
jo
jno
push
outs
mov
ret
inc
iret
mov
dec
add
popf
int
and
cmps
add
cmps
movs
jb
movs
adc
cdq
mov
cmp
popa
mov
cmc
movs
dec
adc
or
sub
mov
movs
or
fsub
or
push
cmp
or
jg
pop
mov
dec
sbb
xchg
xchg
stos
not
rcr
inc
add
sti
jmp
sahf
xchg
scas
stos
rcl
mov
lds
lods
adc
(bad)
movs
cmp
pop
sub
add
sbb
xchg
mov
cmps
xor
add
cmp
loope
mov
sub
add
lea
mov
js
sbb
fcmovnu
fist
cmp
nop
inc
sub
addr16
add
repz
add
repz
inc
ror
lods
fild
mov
addr16
push
cdq
std
push
pop
dec
mov
pop
or
test
inc
out
mov
cmp
mov
cmp
mov
mov
cdq
dec
std
xchg
loopne
push
jg
and
div
adc
fwait
mov
in
cwde
adc
ja
cmps
add
sahf
mov
repz
mov
ins
push
jno
aaa
cmps
lock
imul
(bad)
or
push
jmp
loopne
popf
addps
push
notrack
add
shl
and
lock
mov
pop
loop
or
lods
dec
hlt
mov
push
mov
mov
outs
xor
or
or
xchg
lock
sbb
scas
stos
push
out
(bad)
jmp
xchg
inc
jne
adc
(bad)
pusha
inc
push
dec
sbb
mov
test
jae
iret
mov
cmp
mov
outs
hlt
xchg
adc
int
mov
iret
push
dec
sbb
add
ins
test
arpl
outs
jb
jno
jmp
data16
imul
sti
fcomip
in
pop
pop
psllq
lock
jle
shr
dec
push
(bad)
adc
std
pop
jp
fisub
jne
sbb
jb
sub
aam
jl
scas
sbb
push
dec
push
and
adc
jo
mov
ss
cs
adc
or
adc
fistp
dec
pop
test
mov
sub
xchg
scas
and
push
add
lds
push
cwde
loop
jno
jecxz
idiv
push
sti
mov
gs
ffree
sub
call
jmp
mov
pop
shr
int
adc
cmps
dec
inc
loope
push
scas
test
dec
loope
pop
push
jecxz
cmp
(bad)
sub
push
lods
push
lahf
ror
aas
xlat
adc
lahf
add
rcl
das
xchg
pop
retf
mov
aaa
or
inc
dec
dec
cli
mov
adc
ss
sub
pop
cmp
and
xor
(bad)
cmp
sti
daa
test
push
test
retf
loope
(bad)
xchg
and
jns
out
or
cmp
or
xchg
cli
repnz
loope
mov
cs
in
or
add
adc
dec
jae
fisttp
cmc
lock
dec
loope
pop
mov
jbe
mov
mov
ror
popa
sbb
shl
push
mov
xor
push
adc
dec
xchg
(bad)
sbb
outs
inc
ficomp
mov
push
mov
mov
push
das
xor
iret
fldcw
xchg
cmps
test
addr16
fadd
rcl
fs
scas
push
cmps
sbb
mov
hlt
xor
jae
adc
(bad)
call
loope
movs
in
test
adc
or
in
leave
add
shl
fwait
dec
call
mov
sub
xlat
rol
push
mov
and
fmul
ret
aas
push
(bad)
int3
inc
out
rol
inc
dec
cmp
sub
rep
jl
nop
lods
or
cdq
mov
loope
bound
ja
inc
mov
lock
sub
xchg
call
mov
sbb
enter
hlt
jl
daa
add
mov
std
push
pop
jg
lock
pusha
in
mov
adc
mov
mov
pop
out
cdq
cmp
sar
xchg
xor
inc
(bad)
sub
outs
sbb
pushf
fadd
retf
pushf
cmps
cmp
mov
hlt
cmps
sub
mov
jnp
mov
mov
rol
xchg
fwait
adc
cmp
test
mov
jne
and
imul
jge
and
sub
inc
repz
call
xor
add
mov
icebp
lods
rcr
(bad)
mov
aaa
aas
mov
and
pop
push
pop
mov
push
adc
inc
loopne
sar
push
sub
mov
js
push
adc
std
fsub
or
adc
mov
mov
and
and
mov
xchg
push
into
or
add
hlt
jge
cmc
cs
(bad)
adc
mov
lahf
sbb
xchg
cmps
mov
pop
ins
jbe
and
or
(bad)
aaa
rcl
in
xchg
dec
lea
push
test
and
(bad)
stos
xchg
sub
lahf
jne
and
out
clc
pushf
jmp
fsub
loop
add
pop
pop
and
jecxz
push
loopne
movs
(bad)
inc
std
ins
pop
sub
fst
movs
mov
and
fcom
repnz
push
js
xor
and
addr16
ficomp
fwait
or
jbe
mov
push
fisttp
mov
loope
sub
ficomp
movs
dec
jo
pop
push
je
push
stc
and
mov
fs
push
addr16
sbb
lea
sub
mov
mov
call
cmp
imul
nop
push
xchg
xchg
mov
or
fwait
nop
mov
sub
mov
dec
out
sar
adc
cmp
aad
sbb
cld
jb
outs
sbb
and
gs
mov
cmp
in
jnp
or
out
sbb
test
xor
rcl
dec
dec
call
adc
adc
cmp
push
outs
lods
jp
loopne
int3
ins
jmp
sub
leave
(bad)
popa
pop
inc
(bad)
leave
sbb
shl
cmp
sub
cmp
and
int
cmp
fldcw
and
sahf
push
cmp
mov
jg
and
jecxz
mov
jno
or
jg
sbb
(bad)
dec
xchg
xchg
and
mov
loope
daa
mov
push
add
push
xchg
vpsubusw
jecxz
mov
jle
loope
int3
gs
out
mov
or
out
imul
sub
cli
out
cmp
pop
and
(bad)
ret
out
ja
ds
js
inc
xchg
fucomp
fnstenv
test
dec
sbb
fidivr
leave
push
jg
adc
push
xlat
inc
pusha
(bad)
test
dec
adc
into
and
add
mov
pop
repz
pop
stos
or
push
mov
xor
sub
outs
int3
loop
sub
cmc
fild
push
das
dec
jl
ss
xor
jns
jle
jno
cmps
add
pop
rcr
xor
stc
mov
and
sub
xchg
mov
push
(bad)
bnd
ret
and
lahf
adc
dec
in
shr
scas
leave
pop
sub
cmp
out
pop
fwait
pop
stc
push
dec
(bad)
pop
aam
stos
ror
test
sti
and
pop
gs
mov
xor
cmp
ja
and
retf
ret
iret
push
add
daa
adc
imul
inc
xchg
jle
sub
pop
imul
sbb
push
or
enter
pop
dec
cmp
add
or
clc
js
sbb
add
dec
pop
fcmovnbe
sub
pop
cli
pop
mov
gs
pop
aaa
dec
and
lea
sub
cdq
mov
and
rcr
or
pop
pop
out
push
fst
aas
sbb
in
repz
inc
and
fstp
mov
movs
out
sub
icebp
push
test
shr
xor
jge
or
push
je
ins
mov
mov
lahf
pop
sub
nop
imul
and
sub
add
leave
mov
pop
in
fcom
add
jns
popa
sbb
sbb
xchg
(bad)
nop
adc
int
cmp
shl
push
lods
shl
inc
lods
mov
add
lds
test
xchg
cmps
mov
pop
adc
imul
shl
mov
cmps
shl
mov
pop
dec
jge
in
pushf
or
sub
xlat
dec
add
mov
out
arpl
data16
loope
(bad)
lahf
sbb
adc
sbb
inc
das
dec
sub
mov
jge
not
mov
add
sar
xor
imul
xchg
push
int3
jb
scas
cmp
imul
cmp
out
popa
hlt
(bad)
lea
xlat
stos
add
sbb
xchg
dec
xchg
add
sbb
push
sub
or
cmp
add
mov
test
out
jl
loop
imul
sub
cmp
cmp
and
dec
sbb
jecxz
adc
mov
sbb
inc
test
jg
call
adc
mov
nop
mov
sub
mov
mov
popa
mov
jle
pop
inc
cmp
inc
ja
cld
hlt
cs
xor
inc
aaa
outs
hlt
push
aad
xor
pop
sti
mov
fist
in
and
ret
loopne
js
test
mov
push
sbb
(bad)
into
mov
xchg
pop
test
hlt
or
jg
ret
je
test
jmp
jmp
mul
clc
mov
std
leave
test
xchg
lods
or
aam
mov
fs
je
push
inc
cmp
and
ror
fwait
jp
mov
loope
dec
std
ror
xchg
push
xchg
push
sbb
cmps
or
sub
in
pop
ret
or
and
push
movs
(bad)
in
cmp
lahf
sub
test
(bad)
cmp
ret
jo
pop
sub
sub
or
mov
sbb
sbb
repz
mov
jmp
stos
sbb
mov
call
xlat
outs
pop
iret
and
arpl
das
inc
ins
cmps
or
or
ret
inc
xor
dec
jno
icebp
aas
ins
and
dec
lods
(bad)
nop
jmp
mov
sbb
imul
inc
stos
popf
mov
fdiv
je
call
pop
xchg
adc
jp
ins
sub
mov
dec
js
shl
shr
rcr
mov
xchg
fidivr
sub
cmp
lods
adc
sub
xchg
adc
pop
mov
mov
pop
cmc
pop
movs
xchg
loop
inc
out
ss
lock
into
adc
cwde
pusha
out
and
fistp
movs
jge
in
mov
fnstcw
int3
popf
adc
xchg
in
lahf
jno
pushw
jo
std
xchg
jecxz
gs
dec
mov
adc
pop
mov
xor
add
jnp
push
das
or
xor
mov
lock
xor
sub
xchg
es
retf
push
cdq
sub
(bad)
lods
cmps
retf
aaa
pop
rcr
mov
ins
push
dec
mov
in
xchg
mov
push
dec
scas
mov
fst
xor
fs
out
icebp
xchg
push
pushf
or
xchg
add
repnz
retf
sti
clc
or
cmc
adc
cmc
xchg
or
lock
pop
xchg
adc
in
jb
push
lea
sbb
fstp
mov
mov
mov
into
add
xlat
xchg
push
xchg
inc
pop
xchg
mov
dec
mov
jno
pop
fsubr
inc
xor
fadd
push
ret
mov
inc
imul
ds
jmp
xor
add
scas
cmp
or
call
fdiv
dec
adc
data16
shl
imul
add
jge
imul
push
cdq
dec
or
sub
ja
pop
push
push
in
retf
mov
mov
out
xor
push
fistp
imul
adc
sub
sbb
iret
inc
push
fs
(bad)
jmp
mov
or
hlt
push
cwde
aad
les
(bad)
lods
aas
sbb
mov
pop
push
out
jnp
(bad)
and
ret
shl
xchg
inc
push
in
cwde
xchg
lods
xchg
sti
ds
pop
inc
xchg
adc
or
adc
inc
and
stos
adc
out
pop
(bad)
bound
inc
inc
push
ret
push
mov
data16
ror
lods
cmp
mov
aam
ds
mov
retf
int3
stc
daa
cmps
xlat
jmp
pop
std
jmp
div
cmps
test
or
and
jo
scas
ror
xchg
call
jmp
cli
inc
iret
cmps
cmc
addr16
ins
je
nop
movs
and
cmp
popa
(bad)
int
call
jecxz
retf
jmp
test
sti
xchg
jge
add
adc
repz
call
les
test
ficom
test
scas
fbld
push
inc
stos
mul
test
cmp
call
inc
test
cmps
ja
sbb
popf
enter
outs
mov
mov
outs
in
popa
inc
mov
adc
sti
cli
mov
jmp
aaa
or
or
(bad)
mov
inc
sar
in
sub
aam
sbb
adc
mov
out
jno
pop
mov
idiv
in
cmp
dec
jecxz
aaa
cmc
sub
shr
or
aas
ret
daa
jnp
fild
push
into
(bad)
mov
fsubr
mov
mov
jge
das
(bad)
daa
sub
xchg
out
push
leave
and
push
mov
dec
outs
jne
icebp
cmpxchg
in
hlt
jmp
mov
inc
add
popf
out
jns
not
mov
push
jbe
mov
sub
jb
mov
and
jle
mov
mov
out
addr16
sbb
gs
push
inc
(bad)
jg
jmp
dec
ins
rcr
into
jns
clc
xor
aas
lahf
inc
pusha
adc
add
mov
inc
push
xor
ficomp
std
jo
or
rcr
ret
lea
inc
(bad)
lea
mov
(bad)
rcr
dec
push
adc
jns
mov
adc
xor
lds
out
pop
pop
leave
xlat
xor
cmp
adc
dec
popa
mov
(bad)
lock
sti
and
out
int
mov
sub
in
dec
add
stc
mov
mov
out
popf
fst
retf
adc
imul
fisub
cmp
scas
in
push
ins
jle
addr16
imul
and
std
test
cdq
push
adc
add
pop
mov
pop
sub
in
xchg
adc
push
in
jge
push
push
bound
xor
scas
inc
call
sub
call
push
ret
push
mov
rcl
dec
scas
out
scas
out
push
adc
jecxz
mov
jb
adc
aam
jmp
mov
cdq
cs
jno
test
test
and
cmps
jns
(bad)
jle
stc
and
inc
xlat
ins
mov
add
dec
loop
jmp
jae
and
dec
lock
rol
xchg
mov
push
iret
mov
mov
shr
pop
add
xchg
cmove
xchg
aam
iret
xchg
inc
pop
int3
popf
mov
jne
pop
cmp
add
ins
mov
push
pop
and
pop
xchg
sub
clc
shl
push
(bad)
jb
outs
or
adc
cli
pop
push
addr16
add
call
or
lods
leave
mov
mov
(bad)
xchg
mov
nop
jb
dec
mov
daa
xchg
dec
add
sti
xchg
dec
cmp
mov
jl
xlat
adc
cmp
xchg
mov
add
mov
and
sub
(bad)
xor
adc
popa
or
sahf
push
sbb
sub
out
jg
repz
sub
or
dec
dec
test
mov
adc
pop
fbstp
jecxz
jb
or
and
or
jg
inc
test
sahf
test
loope
and
xor
mov
xchg
mov
xchg
nop
outs
aam
out
add
daa
push
mov
not
dec
push
push
sbb
lods
movs
pop
imul
and
adc
pop
iret
inc
ja
lea
mov
out
or
cmp
rol
mov
sar
ror
retf
pop
push
in
mov
leave
or
jmp
ret
lds
pop
lods
sbb
daa
add
push
scas
(bad)
das
ss
inc
lahf
sbb
ins
out
cmp
jns
mov
mov
dec
adc
push
jno
dec
gs
pushf
in
push
sbb
ficomp
sahf
pop
xchg
mov
int3
jns
xchg
fnsave
xor
aas
cmp
rcl
out
or
retf
fwait
inc
push
or
mov
nop/reserved
xchg
xchg
rcl
sbb
jns
stc
bound
retf
popa
jae
jecxz
mov
jne
jp
mov
mov
jecxz
std
ins
rcl
pop
lods
add
add
mov
adc
imul
dec
sbb
cmp
xor
dec
cld
adc
inc
cmp
mov
pusha
inc
popf
pop
xchg
or
xor
push
xchg
loope
xchg
dec
js
je
inc
cs
in
jecxz
push
outs
jbe
mov
sub
neg
js
jmp
jo
pop
inc
into
ins
jl
or
ja
lods
fld
sbb
push
and
sbb
xchg
aaa
out
out
cmp
xor
shl
lock
adc
(bad)
popa
mov
in
(bad)
and
pushf
sbb
jo
xchg
mov
adc
jmp
push
test
jmp
cmc
push
nop
in
loope
sub
mov
jne
test
add
xchg
jae
and
add
outs
jae
mov
(bad)
jmp
ja
lea
fcmovnb
xchg
sub
idiv
push
push
inc
jle
push
inc
call
mov
inc
fdivp
ins
mov
or
test
pusha
dec
add
es
aam
xor
cli
sub
and
pop
scas
add
sub
add
mov
inc
or
xchg
daa
test
pop
lock
ss
push
or
push
push
rol
pop
mov
fmul
cdq
xchg
cmp
cmc
fistp
or
aam
mov
(bad)
shr
mov
mov
pushf
jmp
xor
dec
outs
test
(bad)
out
adc
sbb
daa
jns
dec
or
pop
add
lods
push
push
xchg
pop
add
add
jae
sub
in
loopne
test
pop
imul
cmp
sbb
imul
daa
pop
pop
mov
(bad)
push
imul
fbld
xchg
dec
add
push
das
mov
paddusb
mov
pusha
adc
ret
mov
fild
test
(bad)
pop
push
(bad)
(bad)
movs
pusha
pop
out
mov
adc
mov
add
adc
jl
mov
adc
mov
and
fadd
int
mov
nop
xchg
in
mov
fsubr
fist
sub
retf
adc
scas
jne
or
xchg
adc
sbb
pop
fidivr
stc
js
test
in
shl
mov
icebp
sti
aaa
xchg
mov
mov
icebp
mov
mov
xor
hlt
inc
dec
mov
sar
mov
sahf
jecxz
jnp
sbb
xchg
adc
cmp
popf
pop
xor
inc
mov
or
fdivp
fst
loop
js
adc
cmc
fsub
ds
popf
call
popa
ret
popf
mov
arpl
cdq
add
adc
xor
je
mul
fwait
adc
jae
jno
loop
sub
cdq
cmc
retf
mov
xlat
mov
xchg
lods
push
xchg
mov
cmp
int3
repz
ss
leave
add
in
(bad)
(bad)
sbb
aas
loop
dec
jle
sbb
jnp
(bad)
ficomp
je
xchg
lods
push
frstpm(287
stos
cmps
sahf
icebp
dec
test
dec
daa
popf
sbb
in
les
inc
ins
mov
fwait
adc
push
xchg
jnp
int3
sbb
imul
pop
mov
loop
mov
or
sbb
mov
sbb
sbb
movs
cs
mov
push
call
dec
mov
mov
cmp
jecxz
mov
sar
ins
sar
xchg
addr16
add
repz
and
stos
in
enter
in
data16
sbb
mov
or
push
(bad)
out
mov
shl
mov
jnp
jmp
(bad)
sahf
loop
aas
sbb
call
pop
sbb
inc
lods
sahf
dec
inc
or
jl
scas
mov
cmovge
mov
sub
adc
in
mov
pusha
iret
mov
fcomp
hlt
add
lea
scas
push
data16
push
xor
sbb
(bad)
cmp
sub
jg
aad
call
sbb
inc
push
loop
sub
adc
(bad)
in
rol
fldcw
je
enter
cs
mov
stc
shr
cmps
aam
outs
sahf
pop
es
mov
xchg
cmp
in
add
dec
pop
push
xchg
mul
pop
jo
dec
call
mov
ins
shr
sub
pusha
ficomp
jae
(bad)
pop
(bad)
push
ss
rol
dec
mov
cmp
xor
adc
rol
dec
pop
and
mov
mov
xchg
(bad)
jo
repz
lods
jo
gs
and
push
ins
mov
out
adc
mov
sahf
dec
adc
into
repnz
sub
out
or
adc
pop
push
mov
mov
aam
add
pop
ja
mov
ret
popf
retf
push
jae
sbb
mov
int
xchg
dec
xor
ret
inc
xchg
sbb
cld
jl
pop
add
(bad)
stos
getsec
mov
push
dec
sbb
mov
and
adc
and
push
mov
ror
mov
std
aaa
cdq
out
stos
push
ret
aad
sbb
arpl
or
xchg
lea
daa
jns
aaa
fst
inc
jb
xchg
jl
dec
test
retf
xchg
into
xchg
leave
fisttp
ds
dec
sbb
out
movs
pusha
paddusw
call
mov
push
mov
lods
frstor
push
and
push
xchg
pop
dec
mov
ret
jecxz
push
in
addr16
daa
adc
cld
in
fs
dec
adc
or
fdivr
je
sbb
xchg
sar
jp
sbb
dec
xchg
call
pop
jecxz
fst
out
bound
inc
xor
call
daa
jecxz
adc
ss
pushf
jb
ja
into
idiv
push
inc
push
pop
sub
ret
or
je
or
lods
cdq
jl
cmc
retf
popf
jmp
pop
add
xor
stc
cmp
dec
imul
sahf
add
shr
out
movs
mov
push
push
addr16
sbb
sti
aam
xor
cmp
scas
fcomp
push
movs
jnp
adc
sub
mov
mov
sbb
inc
shl
jno
xor
lods
repz
add
sub
dec
retf
adc
cmps
pop
pop
rcr
mov
cld
inc
in
xlat
daa
xor
and
sub
cwde
pop
adc
aas
in
mov
dec
push
mov
xchg
cmps
mov
push
dec
dec
jb
repz
push
dec
shl
and
rcl
inc
mov
stc
inc
pusha
lods
push
or
push
xchg
mov
(bad)
sbb
and
sti
mov
and
in
bound
shl
ror
jb
ss
aam
ins
test
pop
jnp
dec
jl
and
mov
and
ret
xchg
lea
inc
(bad)
push
neg
mov
push
jl
daa
cmp
push
cmps
ds
clc
rcl
dec
loope
jecxz
sbb
push
dec
inc
inc
iret
(bad)
enter
(bad)
fdiv
inc
(bad)
std
imul
test
icebp
jle
mov
and
jb
ja
push
xor
cmp
or
movs
push
lock
mov
xchg
dec
jo
gs
pusha
pop
adc
jecxz
dec
push
pop
scas
push
scas
nop
sub
into
stos
stos
enter
cmc
js
pop
movs
repz
pop
sbb
mov
jmp
sbb
(bad)
cmp
xchg
sbb
push
ins
daa
cld
lods
mov
mov
sub
gs
mov
ret
imul
pop
int3
fucomip
call
mov
sahf
out
or
cdq
cdq
adc
les
mul
int3
lds
in
(bad)
jmp
gs
sub
sbb
adc
mov
cmp
fs
sub
(bad)
test
js
jmp
xor
adc
mov
test
movs
aaa
mov
cmps
test
adc
(bad)
jmp
dec
inc
scas
int3
mov
pop
rcl
sahf
outs
dec
mov
data16
aad
jmp
and
jle
sub
xchg
mov
mov
cmp
mov
mov
push
inc
add
pop
jb
and
out
sbb
ss
push
pop
(bad)
les
push
xchg
rcr
push
ins
retf
outs
push
fwait
lods
stos
(bad)
pusha
in
push
sub
sbb
xchg
push
cwde
jmp
adc
xor
pop
and
cmp
mov
adc
dec
push
xor
enter
hlt
mov
pop
xor
jg
dec
or
aaa
int3
mov
rol
push
push
jns
xchg
inc
or
or
ds
sbb
xchg
add
cmp
lea
gs
jae
sub
pop
cli
mov
scas
fmul
push
les
ins
mov
cmps
inc
movs
xchg
or
sbb
in
jae
cmp
cli
dec
retf
and
push
sbb
xor
xchg
ins
sar
mov
cs
inc
daa
popa
sar
and
push
rep
and
or
and
xor
xor
ret
shr
jl
mov
sahf
mov
aaa
int3
fidiv
scas
ins
movs
pop
cmp
add
jmp
jbe
adc
je
xor
adc
pusha
sub
xor
adc
imul
(bad)
pop
adc
gs
movs
push
movs
ins
(bad)
add
pop
sub
jl
dec
add
sub
push
les
je
jmp
ret
xchg
fst
setg
mov
jo
imul
outs
mov
add
xor
fdivr
pop
mov
out
in
and
aas
xor
xchg
mov
imul
mov
mov
popa
and
pop
movs
rol
scas
(bad)
scas
test
(bad)
popa
cmp
or
or
push
mov
jae
lods
jnp
mov
mov
cwde
pop
pop
ss
sbb
je
test
push
jp
imul
dec
ins
test
div
retf
rol
hlt
or
imul
cwde
in
je
cmps
cs
out
mov
dec
mov
ror
pop
ret
les
xchg
inc
sub
pusha
push
xchg
popa
int3
dec
or
ins
add
jns
mov
repnz
xchg
repz
out
mov
cmp
mov
mov
add
or
fdivr
or
daa
loope
ret
shl
and
pop
jbe
xor
push
jns
in
rcr
add
pop
cwde
cld
pop
cmp
stos
cmps
out
fs
gs
and
or
push
push
jl
out
sbb
das
jmp
repz
or
mov
push
out
(bad)
jb
jmp
cs
jl
repz
pop
movs
lea
iret
scas
jae
cmc
cmp
mov
inc
cli
adc
leave
shl
pop
mov
pop
mov
dec
mov
jbe
outs
aam
fwait
mov
in
xor
les
push
pusha
fsubr
pusha
push
inc
into
jg
fidiv
pop
je
leave
sti
scas
lea
push
call
pop
or
shr
in
pop
ins
sahf
ror
xlat
in
or
leave
repz
and
or
loop
(bad)
sti
aas
call
xor
xchg
imul
test
es
inc
xchg
xchg
mov
dec
je
or
adc
dec
ds
sbb
xchg
and
ficom
cli
mov
aas
jnp
or
xor
sub
inc
inc
in
dec
mov
and
fsubr
add
xchg
dec
stc
stos
test
and
sbb
inc
mov
xlat
test
movs
mov
(bad)
cmp
push
jge
mov
(bad)
mov
jo
sub
ja
stc
xchg
inc
fld
cmc
int3
fwait
scas
fisttp
jle
mov
xor
shl
(bad)
lock
mov
scas
dec
std
pop
sbb
xor
mov
fadd
adc
mov
push
xchg
inc
lds
sar
mov
mov
imul
es
push
or
inc
loopne
data16
pop
adc
mov
push
fidiv
sbb
sbb
imul
jns
xchg
pop
mov
icebp
cmp
xchg
enter
movs
adc
xchg
mov
std
xlat
push
inc
add
inc
sub
jg
outs
std
pop
xlat
jp
fst
(bad)
loop
cmp
cmps
lea
scas
repnz
jne
ss
or
push
cs
jns
add
jnp
movs
cmp
dec
test
mov
xchg
xchg
and
fst
xlat
loope
and
in
mov
sub
in
add
inc
xchg
gs
aam
xor
push
inc
add
mov
pop
dec
jge
scas
or
pop
jnp
jnp
loope
jnp
xchg
fs
xor
jnp
cmp
pop
or
xor
fdiv
jo
xor
scas
cmp
(bad)
fadd
inc
nop
and
fcomp
and
push
cli
repnz
cwde
leave
pop
pusha
aam
out
jbe
jmp
iret
loopne
ds
inc
jbe
mov
loope
mov
adc
jp
inc
bound
or
movs
sub
dec
scas
fs
cmp
or
mov
es
inc
sahf
je
or
arpl
xchg
cmps
repnz
stc
xchg
loope
adc
out
call
cmp
lea
cmp
jo
xchg
out
mov
cmp
pop
adc
sti
dec
sbb
jmp
in
cmp
ret
cvtpi2ps
fs
adc
cwde
sbb
out
or
fist
fbld
mov
dec
or
icebp
push
popf
adc
daa
shl
cmp
inc
sbb
jb
dec
ret
sbb
out
sti
xlat
mov
repz
in
mul
pop
aad
xor
and
push
ss
rcr
inc
fldln2
fadd
stc
push
mov
pop
cs
inc
jmp
xor
pop
sbb
xor
iret
pop
je
ds
les
mov
xrelease
or
sbb
jle
nop
(bad)
push
xchg
lea
imul
add
push
mov
cmc
cld
in
xchg
iret
xchg
xchg
push
mov
or
xchg
dec
mov
push
fiadd
xchg
gs
addr16
retf
cmp
jae
dec
leave
mov
into
ret
loope
cmp
(bad)
and
rcl
pop
push
stos
xchg
iret
push
mov
ja
pop
dec
pop
cmps
lods
nop
es
cmp
or
mov
add
test
sub
add
adc
inc
pop
idiv
std
cmp
sbb
pop
das
xor
dec
ds
jl
lock
mov
inc
mov
in
cmp
cli
in
or
pushf
shr
xor
mov
fs
push
adc
cmp
xchg
and
cmc
fst
xchg
or
push
jmp
lahf
imul
popf
xchg
mov
mov
add
sub
das
ret
addr16
xor
push
and
fucomp
sar
mov
je
ror
cmp
test
adc
std
popa
les
adc
xchg
cli
mov
sub
pop
mov
loope
imul
and
es
dec
cmp
or
lods
shl
stos
enter
retf
retf
inc
sbb
mov
std
fnstenv
jmp
cli
(bad)
mov
cmp
jns
loop
xchg
fbld
jno
hlt
test
outs
in
dec
shr
inc
into
ret
jnp
shr
add
dec
retf
sub
inc
ja
xor
fisubr
(bad)
lds
jns
ss
pop
(bad)
adc
add
and
dec
cmc
jo
shl
and
or
inc
gs
mov
mov
or
aas
arpl
mov
js
cmp
sbb
aam
fsub
mov
sub
test
lods
jae
xchg
dec
pop
inc
push
iret
int3
imul
and
gs
mov
mov
and
mov
repnz
imul
mov
push
fstp
mov
push
sub
and
lods
mov
jae
fst
cmps
enter
pushf
xchg
mov
mov
jge
jo
popa
in
mov
pop
stos
lods
xor
mov
aaa
jp
lods
add
pop
pop
cwde
(bad)
adc
push
pushf
(bad)
lds
sub
mov
jmp
and
inc
ret
and
lahf
(bad)
repnz
dec
sti
pop
xchg
push
lock
ds
ror
jle
cmp
mov
push
loop
outs
add
mov
mov
aas
inc
clc
pop
mov
push
adc
and
lahf
loop
and
shr
retf
out
out
stc
push
xchg
dec
dec
xor
inc
mov
sti
cmp
in
lea
push
cmp
jno
out
push
and
push
call
jns
cli
popf
or
iret
fstp
jge
xchg
leave
adc
push
xchg
pop
mov
mov
xchg
mov
push
cld
adc
icebp
pop
data16
jl
mov
add
inc
test
jns
outs
add
adc
cmps
inc
(bad)
xchg
pop
push
mov
retf
lods
int3
stos
ret
inc
imul
aaa
jmp
add
and
dec
retf
shl
rol
xchg
jno
aad
mov
cmp
and
push
push
cmps
stos
jne
enter
ud0
push
lods
sbb
test
inc
ret
daa
je
lods
sub
aam
or
mul
or
mov
mov
add
sub
es
pop
ja
ins
add
ja
test
adc
in
out
mov
inc
xor
inc
stc
mov
sub
jecxz
push
xor
gs
mov
bound
xlat
aaa
inc
sub
push
sub
xor
dec
sti
shl
fstp
lods
push
popf
xchg
out
push
scas
js
cmc
ds
sbb
adc
inc
sbb
aad
or
sub
fadd
pop
dec
ds
mov
pop
mov
inc
add
test
inc
sbb
cmps
xchg
jle
or
imul
add
movs
(bad)
sti
daa
adc
pushf
and
cs
ret
mov
frstor
add
les
imul
xor
out
dec
mov
and
lods
jae
sub
mov
xor
mov
xor
inc
fs
inc
mov
ficomp
sub
jl
repz
dec
mov
fs
or
jmp
movs
cmp
xchg
push
mov
mov
cmps
dec
out
or
in
inc
jo
jecxz
loope
pop
jge
push
dec
sti
enter
fsub
pop
cmp
and
xchg
scas
js
test
push
lds
pop
(bad)
mov
loop
(bad)
in
pop
lea
icebp
sbb
push
dec
cdq
lods
sub
mov
scas
xor
aaa
cwde
loop
enter
inc
mov
mov
xchg
lds
mov
ror
mov
nop/reserved
sub
ret
imul
mov
cmp
rcr
jl
mov
div
mov
out
test
jle
fcmovnb
mov
pop
es
test
popf
std
enter
in
pop
inc
sbb
adc
jbe
(bad)
mov
add
int
sar
jmp
movs
js
fs
jge
retf
fdiv
dec
mov
jae
inc
retf
sbb
ret
xchg
push
or
mov
mov
jb
ds
mov
in
adc
aad
mov
cmc
sub
cmp
or
dec
pop
cmps
adc
int3
mov
push
xor
les
loop
aas
cmp
int3
retf
cmc
imul
(bad)
adc
shl
mov
test
movs
fwait
mov
imul
into
imul
xor
xor
js
retf
daa
loope
add
in
(bad)
out
sahf
cmp
ja
test
hlt
inc
(bad)
(bad)
ret
mov
xor
dec
cmp
and
lods
inc
out
loop
outs
cmc
test
(bad)
push
int3
inc
in
sti
test
outs
imul
lods
les
mov
cld
std
cld
jmp
lods
fcom
out
xlat
outs
sub
cdq
out
cli
arpl
cmp
push
pop
dec
and
pop
fist
rcr
inc
ret
xchg
pop
jb
or
add
add
test
test
jmp
ins
sub
(bad)
cmp
lods
(bad)
sahf
and
pop
cmp
mov
sbb
xchg
sti
pop
mov
pop
(bad)
xchg
pop
xchg
dec
xor
jb
push
ins
xchg
outs
add
rcr
inc
add
sbb
aas
sbb
jne
pop
add
xchg
jg
mov
arpl
cmp
jnp
lea
in
mov
jmp
sub
or
adc
pop
jle
(bad)
addr16
push
retf
in
stos
pop
add
push
cs
xlat
or
pop
jmp
loop
stc
push
or
icebp
pop
jp
lock
ja
push
cs
cs
repz
xchg
(bad)
outs
and
jmp
adc
xor
lock
pop
stos
or
push
ins
adc
call
addr16
mov
adc
jb
fucom
loop
xor
jnp
movs
outs
mov
adc
dec
sub
and
sub
pop
jae
call
xor
lods
inc
push
ins
cdq
add
movs
fnstenv
mov
pop
fist
neg
inc
dec
out
mov
or
cmp
fwait
inc
in
add
jo
push
mov
adc
stos
xchg
fcom
imul
xchg
lea
jmp
cmp
push
mov
mov
sbb
mov
das
push
mov
adc
lods
lock
pop
lea
add
sub
cwde
push
push
popf
(bad)
dec
jno
sbb
int
xchg
mov
or
(bad)
std
pushf
das
mov
jno
out
adc
add
and
mov
aad
sti
xchg
cmp
in
adc
cs
neg
adc
fs
test
xor
imul
test
gs
push
loope
mov
outs
cmp
mov
imul
cmps
jns
jae
jmp
les
loopne
xchg
retf
aas
mov
mov
test
xchg
dec
in
or
dec
into
add
mov
xchg
jle
jmp
inc
fstp
aaa
push
dec
sbb
int3
inc
nop
shl
mov
movs
cs
int3
bound
jp
cmp
(bad)
ins
(bad)
mov
inc
push
clc
cmc
lods
in
cmps
test
cld
lods
pop
mov
cmp
push
fldcw
inc
mov
fadd
jge
test
imul
jb
cmp
pop
stc
push
pop
sub
je
(bad)
pop
mov
add
adc
cwde
adc
or
js
test
xor
das
jecxz
ror
push
xor
sub
mov
jmp
lahf
inc
cs
shr
adc
push
and
cmc
pop
xor
jmp
fwait
pushf
loope
mov
cdq
cmp
cmps
dec
mov
jp
in
cmps
iret
xor
(bad)
nop
mov
jle
je
sub
jp
pop
aad
cwde
hlt
jns
loope
push
or
sahf
lods
stos
xchg
mov
shl
out
fstp
xlat
pop
mov
sbb
popa
mov
repnz
lock
mov
dec
xchg
dec
sbb
daa
and
jae
bound
cmc
fnstsw
push
nop
fidiv
inc
imul
sti
xchg
hlt
fs
loop
outs
cdq
je
int3
pusha
push
and
mov
js
aam
cwde
add
cmp
xchg
dec
repnz
sbb
cmp
sub
out
mov
dec
xchg
push
sub
cmp
dec
and
lahf
pop
adc
cdq
mov
dec
js
and
jnp
shl
push
idiv
ror
nop
xchg
cmc
ss
sbb
jnp
in
jge
sbb
dec
push
sub
add
add
nop
mov
jbe
jge
fisub
add
daa
add
mov
mov
add
mov
stc
jnp
dec
sahf
pop
ret
mov
iret
int
retf
add
pop
inc
test
push
scas
xchg
pop
inc
mov
sub
mov
pop
stos
aas
mov
mov
or
ds
mov
push
inc
loop
or
jecxz
mov
mov
push
add
xchg
lods
(bad)
cli
addr16
scas
sbb
fwait
jle
mov
pop
in
cdq
popa
addr16
rcr
xchg
jnp
mov
adc
not
sar
mov
add
out
imul
push
scas
or
adc
fld
cmp
cli
outs
and
or
inc
xor
clc
inc
xchg
les
push
push
sbb
adc
sar
pop
retf
in
punpckhwd
aas
mov
sub
xchg
shr
rol
cmp
(bad)
sbb
or
pop
bound
aas
push
inc
xor
in
mov
dec
ds
jmp
repz
push
sbb
mov
fisub
xchg
xor
or
ins
mov
dec
and
push
or
ss
std
mov
sub
call
jg
imul
adc
mov
push
(bad)
popa
ins
xor
or
les
fcom
fisttp
out
sbb
es
test
stos
xor
inc
outs
mov
les
sub
test
xchg
adc
mov
lahf
inc
outs
dec
mov
sbb
arpl
cmp
sub
lds
ret
ficom
dec
and
dec
push
cmp
xchg
(bad)
cwde
jl
int
stos
xchg
dec
retf
cli
out
mov
mov
aas
or
dec
gs
push
push
ror
call
gs
sub
and
fmul
inc
mov
dec
ret
push
(bad)
and
movs
cmc
popa
or
das
push
int3
push
or
pop
lds
jo
dec
dec
xor
mov
xor
add
fst
sub
cmp
out
aaa
add
(bad)
call
stos
adc
cmp
(bad)
in
out
or
or
sub
test
or
mov
(bad)
mov
out
cmc
int
fist
push
push
ficomp
xchg
(bad)
int
retw
push
jmp
xor
mov
adc
lea
(bad)
repnz
shr
xchg
les
cmp
lock
and
or
pop
cmc
mov
test
add
xchg
cmps
add
add
andps
dec
pop
pusha
xchg
xlat
pop
sbb
imul
test
lea
aam
xchg
xor
lods
lods
in
sub
repnz
scas
xchg
or
retf
jmp
rcr
mov
out
mov
sbb
sbb
mov
loop
lock
mov
xor
movs
inc
(bad)
(bad)
prefetchnta
mov
add
fnstsw
sahf
lods
cmp
repnz
add
cmp
mov
xor
mov
fstp
adc
stos
add
leave
sahf
icebp
mov
add
nop
fsubrp
mov
les
adc
mov
sub
test
fidiv
xchg
bswap
xchg
mov
push
outs
mov
in
and
fisubr
sub
or
loopne
dec
cli
gs
mov
movs
xchg
neg
ja
jg
(bad)
xor
pop
mov
addr16
outs
sub
xchg
push
or
pop
add
add
gs
or
les
or
loopne
mov
or
in
mov
cmp
imul
test
and
sub
imul
not
ss
and
out
pusha
addr16
stc
sti
std
je
push
repz
sub
sbb
xor
repnz
arpl
lock
(bad)
inc
fcmovnu
sar
enter
xor
xchg
push
js
cmp
jno
cmp
mov
adc
cmp
(bad)
fistp
lds
(bad)
stos
dec
mov
inc
and
in
xchg
stos
pushf
mov
pop
int3
fcomi
adc
stc
xor
enter
pop
mov
retf
xchg
ret
xor
inc
or
mov
inc
mov
jge
idiv
push
test
jo
ins
mov
shl
outs
jge
mov
int
lods
or
repz
out
in
(bad)
cmp
xchg
pop
ja
(bad)
mov
jecxz
dec
add
dec
int3
jbe
pop
(bad)
icebp
push
call
adc
in
std
loope
aam
xchg
xor
popf
test
xor
jnp
sub
mov
imul
cmps
and
es
scas
cs
mov
arpl
scas
xor
mov
test
cdq
enter
push
lea
pop
add
push
rcr
out
test
pop
gs
js
repz
call
pop
mov
test
mov
mov
sbb
inc
lods
iret
and
push
gs
add
pusha
and
in
mov
stos
cli
cmps
jmp
or
loopne
mul
ror
loopne
inc
push
shl
cmp
out
daa
into
add
and
adc
adc
mov
inc
leave
sub
lea
pop
fdiv
popa
xchg
(bad)
fistp
fabs
sti
call
fcmovnbe
or
in
push
ja
aas
push
and
in
aas
dec
push
cmc
inc
and
adc
add
push
aas
out
test
dec
jb
stc
daa
enter
retf
mov
fild
neg
rcr
mov
xchg
xor
jb
daa
(bad)
fld
int3
jmp
cmp
in
rcr
mov
mov
jne
mov
dec
rcl
sti
stc
dec
cmp
sub
xor
sbb
(bad)
adc
test
aas
mov
(bad)
leave
sahf
push
loopne
ret
mov
repz
scas
adc
push
add
jg
jp
and
std
or
arpl
mov
cmps
mov
and
add
stc
clc
stos
xchg
loop
cmp
pusha
xor
data16
inc
pop
or
aad
cmc
scas
outs
dec
push
or
(bad)
rcl
dec
out
sbb
jecxz
mov
(bad)
mov
repz
jnp
(bad)
push
dec
mov
mov
fs
(bad)
push
les
and
cmps
xchg
les
cld
int3
call
stos
push
mov
add
fnstenv
retf
inc
lock
adc
pop
pushf
icebp
pop
pop
xlat
dec
gs
sub
lea
jl
cmp
jno
dec
test
cmp
cmp
retf
sub
jns
(bad)
jbe
(bad)
add
mov
cmp
sub
mov
or
es
fsub
mov
cmp
xchg
mov
pop
(bad)
xchg
sub
movs
mov
pusha
push
pop
add
mul
(bad)
cmp
aam
pop
jb
mov
loop
aam
jmp
ror
push
and
call
fistp
jno
xor
ss
sbb
mov
mov
movs
shl
std
mov
mov
cmps
mov
xchg
push
aam
movs
xchg
pop
pop
movs
jp
out
iret
call
in
(bad)
sub
mov
das
mov
jbe
push
clc
sub
sub
push
xlat
shr
arpl
sbb
cmp
aad
mov
xchg
dec
scas
stos
push
xchg
aas
add
adc
ins
scas
mov
sub
out
push
pop
sub
mov
mov
daa
inc
or
mov
out
rol
call
lock
xchg
jmp
imul
ret
jmp
add
xchg
out
jle
lahf
and
fld
(bad)
xor
xlat
sub
xchg
jne
and
mov
or
and
cwde
add
jp
mov
(bad)
xchg
dec
ret
sub
mov
add
dec
mov
mov
outs
add
dec
cmc
out
cmc
sbb
das
cmp
repnz
adc
icebp
jnp
inc
lods
add
fdivp
lods
cmp
adc
sbb
int
lea
add
pop
mov
and
mov
(bad)
shr
and
int
dec
test
out
or
arpl
ja
xor
ja
and
adc
fistp
inc
or
das
loope
sbb
call
add
dec
fidivr
sub
int3
imul
jnp
dec
fldcw
add
ror
jae
jbe
movs
sbb
xor
adc
xor
adc
jae
stos
shr
dec
test
out
and
das
nop
(bad)
lods
not
sbb
dec
jmp
stc
loop
and
pop
xor
fsub
cmc
jmp
test
test
dec
pop
mov
lock
loopne
sti
xchg
xchg
fidivr
mov
cvtps2pi
xchg
ins
in
sub
sub
loop
movs
add
xor
and
cmp
outs
mov
ret
jno
xor
or
and
es
push
xchg
inc
in
jl
arpl
out
cmp
jmp
lods
dec
push
mov
fisubr
fs
lea
push
mov
mov
into
pop
rcr
pop
cmp
rol
inc
rcl
test
push
mov
jge
xchg
fisubr
cmp
bnd
xchg
out
imul
xchg
jno
fistp
or
xchg
adc
call
push
xchg
mov
mov
aaa
xor
push
xchg
stos
in
mov
lods
mov
int
cmp
or
jmp
popa
aad
call
sti
in
ins
fstp
loope
leave
dec
(bad)
hlt
mov
jmp
ss
fs
outs
adc
sbb
ins
pop
fld
dec
cld
call
fwait
push
fnstenv
icebp
scas
movs
inc
retf
shl
inc
inc
mov
inc
adc
inc
nop
sar
pop
icebp
(bad)
jb
in
mov
jecxz
ds
dec
cmp
cld
(bad)
cmc
enter
leave
xchg
cmp
mov
jnp
popf
lods
pop
pusha
cmp
sbb
cmc
mov
std
inc
int3
in
mov
pop
fdiv
psubq
stc
jle
rol
push
lods
xor
or
jns
jno
dec
sbb
pusha
daa
sbb
fistp
dec
pop
pop
jno
jl
sbb
dec
and
pop
jl
loope
cmp
or
push
sub
or
in
movs
sub
inc
dec
scas
hlt
jmp
inc
adc
leave
mov
fnstenv
in
mov
(bad)
arpl
and
icebp
and
pop
and
sub
mov
push
pop
adc
add
xchg
shr
inc
sub
js
or
inc
ffree
rcr
fidiv
jp
jge
xor
test
jmp
pop
int3
loopne
xchg
call
add
or
jae
or
dec
inc
arpl
xchg
add
adc
sar
xlat
jb
inc
mov
enter
out
int
mov
(bad)
cld
std
mov
sub
inc
mov
adc
(bad)
std
add
inc
lods
or
icebp
sbb
mov
stc
out
mov
stos
out
int3
mov
pop
jg
or
adc
daa
push
jg
lods
test
inc
or
push
jle
add
xchg
ins
sbb
mov
cli
xchg
out
mov
xor
ja
pusha
pop
ret
rcr
les
test
xchg
sbb
arpl
push
sub
mov
in
adc
stos
cdq
inc
stc
hlt
fistp
xor
xchg
out
mov
add
aas
int3
lods
sbb
ret
mov
or
sub
sbb
or
dec
xor
adc
pop
popa
xor
pop
xor
push
jae
repnz
cdq
movs
in
(bad)
out
and
addr16
jne
dec
cmp
ins
stc
mov
fld
mov
int
mov
push
out
(bad)
outs
add
rol
dec
out
sub
xchg
add
pop
loope
mov
pusha
ins
pop
xchg
inc
mov
hlt
retf
test
sti
add
mov
test
fsubr
lods
mov
std
fs
fwait
ret
test
pushf
adc
ins
imul
scas
out
or
mov
sub
sbb
call
(bad)
fld
xor
push
mov
mov
aaa
ds
lock
call
pop
stc
ja
inc
mov
mov
inc
mov
pushf
xor
jmp
sub
js
xcrypt-cbc
cmps
aad
in
jmp
mov
out
outs
cmp
mov
push
aam
add
imul
xchg
sahf
lds
or
fild
fmul
movs
lods
or
and
jecxz
rol
pop
mov
call
fisub
jle
rcr
retf
add
fcomi
sbb
mov
test
mov
and
outs
ins
in
xor
scas
into
shl
lds
sar
fcomp
or
in
pop
xchg
or
hlt
aad
pop
or
adc
pop
cmc
(bad)
stc
xchg
push
call
pop
rol
cmp
or
mov
adc
mov
mov
dec
stc
jl
rol
and
sub
or
mov
pusha
inc
call
movs
add
scas
inc
ret
retf
mov
mov
add
(bad)
fistp
xchg
pop
xchg
lods
jns
and
imul
mov
outs
outs
cmp
push
sahf
hlt
adc
test
xchg
sub
leave
in
or
and
push
xlat
scas
jnp
sub
xor
popf
int3
jg
js
jne
dec
mov
out
mov
mov
inc
scas
jg
ds
pop
vmread
scas
sbb
or
ja
xor
jg
test
cmp
call
lds
cmc
or
cmc
pop
dec
or
cmp
push
nop
loopne
jb
cli
push
fdivr
jmp
mov
enter
je
dec
pop
push
xor
jp
xor
push
jmp
jnp
ror
fwait
neg
mov
mov
fist
add
movs
sub
xchg
cmps
ror
iret
js
ror
or
addr16
pop
mov
mov
lods
xor
mov
pushf
and
das
sbb
xchg
lea
cmp
arpl
xor
cmp
(bad)
pop
inc
push
push
jge
out
pop
jb
popa
sbb
leave
fdivr
sub
and
cmp
(bad)
outs
adc
mov
fadd
sar
cmp
es
mov
mov
mov
push
outs
dec
push
movs
inc
inc
stc
jmp
call
(bad)
sbb
push
pop
stc
pusha
xchg
call
xlat
lods
call
and
pop
retf
add
sbb
jbe
mov
out
repnz
mov
mov
fld
jge
sti
inc
mov
adc
jg
test
rol
cwde
cmc
iret
dec
mov
push
data16
add
call
cmps
rcl
add
push
(bad)
fimul
inc
cmp
pop
dec
call
mov
or
ja
and
jp
call
stos
dec
push
std
je
mov
aas
out
jno
retf
push
cmp
xchg
ror
fucomip
ins
mov
dec
fist
fist
xchg
lods
leave
mov
pop
sti
adc
xchg
dec
push
sbb
pop
inc
das
mov
shr
inc
int3
xor
dec
test
xchg
stos
test
arpl
call
pop
jp
sbb
inc
pop
les
sub
in
sub
mov
sub
push
in
inc
cmp
inc
test
out
or
fisub
cld
cdq
sbb
setno
es
sbb
pop
push
xor
scas
sub
jge
ret
dec
cmc
repz
mov
icebp
cmps
or
inc
xor
loopne
mov
clc
scas
sub
aaa
add
push
sar
sahf
inc
repnz
test
adc
cmp
fdivr
mov
lods
add
in
sar
jmp
icebp
or
pop
neg
(bad)
repz
mov
xchg
dec
cli
push
jecxz
lock
xor
push
pop
sub
add
daa
mov
dec
out
retf
xor
popf
ja
test
stos
inc
sub
add
push
jne
jl
addr16
into
jo
bound
rol
(bad)
jns
out
sub
mov
icebp
inc
mov
test
dec
sahf
mov
mov
sub
das
mov
ja
jge
fsubr
imul
or
xchg
push
into
ins
xchg
ret
out
jle
sbb
mov
pop
ret
add
xchg
test
push
sahf
xchg
adc
shl
ds
lahf
out
pop
leave
sbb
cmp
lods
xor
icebp
add
movs
mov
inc
or
or
sahf
jno
dec
push
xchg
fs
pop
lods
div
mov
outs
int3
les
loop
push
imul
and
mov
jns
(bad)
and
mov
pop
mov
add
neg
sub
xor
sub
stos
add
mov
dec
or
fisttp
data16
push
out
test
ret
cmp
cwde
push
xor
sub
jns
sahf
sbb
and
arpl
xor
ins
cwde
cmp
inc
dec
sbb
sub
call
and
mov
ror
repz
out
dec
mov
sbb
pop
or
add
sbb
dec
push
jbe
lea
xor
jbe
addr16
jmp
sbb
jmp
icebp
sbb
mov
push
jg
sub
sbb
jo
mov
lds
and
inc
cmp
clc
jge
fisubr
(bad)
jo
(bad)
cld
jns
popf
pop
push
or
cdq
in
inc
pop
gs
mov
cdq
cmp
or
cmp
mov
fs
add
jnp
movs
repnz
or
sti
inc
push
mov
push
push
cmps
(bad)
into
pop
xchg
fistp
popa
or
aaa
mov
dec
in
daa
push
dec
xor
sbb
xchg
cmps
or
jge
xchg
push
push
mov
call
(bad)
daa
in
jge
int
jmp
ins
mov
adc
push
and
bound
(bad)
ror
mov
or
(bad)
jp
mov
xchg
call
ror
cmp
push
sbb
push
xchg
xor
pop
add
test
mov
xchg
imul
inc
xchg
jae
pop
cmps
mov
xor
stos
xchg
pushf
push
inc
repz
test
cmp
pop
cmps
pop
(bad)
not
loope
or
add
stos
test
fst
mov
add
mov
int3
jl
fnsave
sub
ds
pop
ficomp
sbb
jmp
test
dec
jl
or
stc
lods
retf
jle
adc
mov
sub
por
jmp
loope
jbe
imul
sahf
add
cmps
(bad)
xchg
test
call
das
mov
cwde
pop
inc
(bad)
fstp
retf
cld
mov
pop
jb
ds
pop
arpl
add
loopne
sub
in
mov
out
lods
push
das
call
mov
mov
pop
enter
lahf
sbb
mov
ins
inc
pop
jo
adc
fldcw
leave
push
(bad)
and
call
sbb
sub
mov
out
stc
test
and
iret
out
jbe
mov
fistp
fs
pop
add
push
pop
daa
inc
mov
aam
push
and
mov
fisttp
xor
sub
add
call
stc
xchg
hlt
sbb
sahf
cmp
retf
int
add
in
add
mov
xchg
xchg
push
inc
daa
pop
not
pop
ins
add
mov
add
inc
add
es
out
jmp
and
jns
xor
ss
cmps
mov
out
xchg
or
icebp
shl
push
sbb
fcom
cmp
mov
and
ss
daa
mov
out
xchg
fs
ficom
xchg
mov
add
call
mov
pop
and
lea
loope
sub
or
pop
mov
xlat
repnz
out
(bad)
pop
sbb
je
mov
ret
pop
inc
mov
ret
jne
mov
bound
movs
push
inc
(bad)
fnstsw
xor
in
push
mov
pushf
add
lds
cmp
retf
jb
xor
fst
lods
mov
cmp
lock
movs
pop
or
scas
sub
test
je
dec
iret
mov
mov
rol
inc
cmps
push
es
add
xchg
adc
shl
lock
rol
and
fwait
(bad)
stos
or
add
outs
stos
xor
ds
cmc
fninit
mov
inc
mov
sub
sar
dec
add
sbb
das
xchg
adc
inc
cmps
jmp
bound
rcl
fild
test
inc
adc
ficom
or
lods
mov
and
push
mov
jmp
lock
jmp
push
add
push
adc
push
xchg
cmp
fisub
in
aad
xchg
js
mov
js
inc
sahf
dec
pop
mov
cld
mov
dec
imul
data16
cmp
adc
lds
shl
(bad)
dec
mov
test
dec
pushf
cmp
pop
aaa
gs
push
sbb
(bad)
xchg
pop
fcomp
lds
out
push
cmp
pop
pushf
mov
scas
aam
cs
jle
lahf
xchg
icebp
ror
not
sti
jmp
push
add
mov
xor
mov
pushf
mov
fcmovb
push
outs
and
fisttp
mov
xor
pop
lds
cs
iret
jle
pop
gs
mov
aam
and
js
test
leave
fidivr
push
add
cli
adc
add
outs
dec
and
sub
iret
dec
add
popf
stos
inc
shl
jnp
outs
scas
mov
movs
call
call
hlt
(bad)
out
sub
int
ins
and
out
inc
imul
arpl
adc
inc
out
push
lahf
pop
dec
dec
ds
std
push
iret
mov
in
test
das
fld
out
outs
mov
cmps
popa
sub
in
adc
fstp
shl
fmul
jg
mov
mov
cmp
mov
pop
mov
cmp
mov
shl
outs
lahf
imul
in
leave
lahf
add
enter
mov
xor
sub
es
inc
inc
or
(bad)
cld
inc
push
gs
ins
inc
lock
push
repz
adc
pop
out
fcomi
mov
sub
es
pop
inc
outs
clc
les
dec
call
and
ret
pop
pop
out
movs
dec
imul
pop
sbb
and
cdq
cmp
push
cmp
push
lods
sbb
rcr
dec
hlt
out
ret
mov
test
xchg
add
mov
jmp
cli
scas
retf
adc
mov
inc
movs
push
inc
(bad)
push
leave
or
test
add
lods
jl
aaa
add
fisub
or
and
fist
bound
adc
pop
dec
out
repz
or
fstp
push
sub
cmp
shr
xchg
sahf
idiv
(bad)
arpl
leave
repz
retf
and
call
xor
jo
out
mov
lea
(bad)
in
clc
dec
rol
stc
dec
pop
inc
ret
or
popa
inc
pop
pop
in
ret
inc
enter
jne
xor
lds
and
test
cmp
xlat
xlat
and
(bad)
fist
sub
sahf
in
xor
call
popa
pop
jmp
push
push
call
sbb
add
xchg
fcom
pop
mov
xchg
xchg
inc
out
mov
pop
(bad)
sub
xchg
pop
push
push
fadd
fmul
daa
pusha
push
in
mov
xchg
xor
sbb
aaa
mov
add
xchg
push
ret
jg
mov
xor
movs
retf
mov
mov
push
pop
sar
fwait
jmp
push
sbb
xchg
rcr
mov
cmps
cmp
jnp
lahf
push
repnz
in
xor
sub
dec
in
adc
mov
sar
dec
inc
inc
cmp
adc
dec
sbb
or
nop
loop
mov
push
fild
je
jecxz
call
dec
ins
add
aas
inc
add
es
stos
(bad)
jp
movs
jo
and
pop
int3
pusha
jg
sub
cli
adc
sbb
sub
cmps
std
or
pop
jmp
xchg
mov
inc
call
repz
dec
jge
add
xchg
addr16
and
cmp
add
mov
(bad)
repnz
sbb
mov
add
pop
adc
sub
rcr
adc
daa
dec
jns
sub
push
add
fucomp
and
jno
daa
jbe
ficom
mov
inc
inc
mov
cdq
mov
rcr
nop
inc
jno
call
jns
repz
sub
shl
pushf
jo
and
cmp
jns
cdq
mov
mov
in
ins
lock
or
shl
sar
js
jge
dec
jg
retf
jbe
jmp
jbe
fidiv
jae
cmps
cwde
mov
pop
sbb
pop
or
jae
clc
fld
pop
mov
cwde
movs
jbe
dec
lahf
jg
pop
push
test
movs
xchg
push
out
mov
cmp
movs
mov
add
or
mov
test
mov
cmp
dec
mov
je
out
xchg
shr
xchg
bound
sbb
jnp
jmp
jmp
xchg
pop
mov
arpl
repz
and
int3
mov
xor
jle
sbb
scas
call
cmp
adc
leave
mov
xlat
xchg
xchg
push
mov
dec
xor
adc
jae
push
push
mov
jl
std
mov
sub
inc
div
movs
fidivr
jne
push
movs
xor
sti
jne
jmp
pop
xor
and
pusha
cmp
inc
das
lock
push
sub
or
inc
stos
addr16
call
and
into
mov
iret
xchg
iret
dec
das
xchg
pushf
shl
add
aad
xchg
mov
xor
xchg
arpl
mov
repnz
inc
out
dec
stos
outs
jp
jge
int
pop
push
ret
mov
in
xlat
dec
push
out
call
out
mov
adc
sar
cmp
jno
in
mov
push
adc
jl
and
pop
test
cmp
push
or
xlat
xor
xchg
pop
outs
mov
test
inc
(bad)
call
pop
hlt
mov
rcl
jp
xchg
movs
call
adc
adc
mov
adc
in
push
les
pop
icebp
sbb
add
sub
pop
jmp
bound
je
mov
mov
imul
sbb
cmc
dec
sub
mov
nop
bound
cmp
sti
ss
in
fwait
bound
aad
pop
add
jge
fcmovnu
sti
rcl
jecxz
cmp
xchg
cmp
push
(bad)
mov
jl
mov
test
loop
ins
fs
dec
in
jge
iret
cmp
pop
and
mov
(bad)
jecxz
pop
ror
rol
push
out
in
pop
fisttp
sub
xchg
cmps
push
dec
idiv
adc
jmp
jmp
lahf
mov
push
cmp
lahf
dec
enter
in
adc
cmc
and
lods
push
push
gs
pop
mov
imul
xor
jl
dec
(bad)
push
out
sbb
aam
sbb
je
mov
jb
adc
bound
rcl
jae
cmp
arpl
shl
dec
adc
and
stos
lods
mov
or
push
pop
sbb
adc
mov
call
fisubr
fdivr
mov
mov
leave
mov
movs
pushf
(bad)
rcl
inc
retf
int3
dec
int
xor
cmp
dec
out
mov
cli
cs
das
xchg
mov
cmps
sbb
inc
data16
xor
jle
mov
mov
push
sti
es
pop
mov
fldenv
ss
sbb
leave
loopne
add
retf
xchg
push
sbb
mov
nop
ins
div
nop
dec
inc
jb
sar
mov
xchg
jg
pop
mov
xor
mov
repnz
push
mov
sub
jns
aad
cmc
xchg
scas
push
retf
inc
movs
mov
fcom
mov
adc
cwde
test
cmp
dec
push
xlat
inc
aam
repz
repnz
popa
movs
push
jmp
cmp
fadd
in
std
or
xor
and
inc
cmp
out
les
loopne
scas
mov
ret
ins
push
mov
(bad)
sbb
xchg
cli
fsub
mov
jmp
xor
mov
call
imul
div
(bad)
(bad)
cmps
dec
pusha
imul
stos
add
fsubr
out
popf
ins
ds
cmp
or
inc
jb
cmps
cmp
mov
jnp
lea
mov
inc
pop
fcomp
imul
push
mov
outs
mov
imul
scas
out
xor
icebp
mov
pop
and
jl
adc
out
outs
scas
and
cmc
aaa
and
(bad)
cmc
bound
shl
icebp
fisub
or
sub
mov
in
dec
push
adc
or
dec
push
(bad)
in
ins
mov
and
inc
cmp
leave
dec
movs
rcl
ins
and
pop
(bad)
div
xor
sti
addr16
inc
add
imul
gs
aad
nop
(bad)
out
add
sbb
lds
cmc
aas
call
mov
sub
sub
push
in
adc
call
inc
stos
repz
or
pop
xchg
data16
rol
pop
sti
jmp
cmps
sbb
rol
dec
repnz
addr16
push
add
push
and
in
arpl
sti
loopne
scas
retf
(bad)
clc
fs
iret
mov
add
int3
adc
(bad)
adc
sahf
pop
jne
cmp
add
dec
inc
mov
out
mov
and
push
cmp
cmp
or
rcl
rol
outs
fst
adc
sub
jno
xchg
test
cmc
fsub
xchg
repz
push
jo
loopne
(bad)
jp
(bad)
call
mov
fsubr
xor
mov
shr
call
loopne
dec
dec
inc
mov
jge
cmps
shr
jl
push
div
and
dec
cli
je
mov
je
cdq
outs
ret
inc
dec
outs
xlat
or
xchg
and
outs
fsub
ret
inc
cmp
setne
xchg
push
xchg
or
xor
ja
pop
les
ja
inc
adc
jo
popf
push
mov
mov
mov
call
and
xor
in
out
(bad)
ds
test
test
jb
or
aam
mov
xchg
retf
xchg
push
mov
stos
jbe
jecxz
movs
push
mov
arpl
scas
and
inc
cmp
mov
xor
out
xchg
pushf
std
xor
pushf
dec
xchg
data16
mov
and
ds
cwde
out
ins
cmp
push
mov
(bad)
cs
mov
push
xchg
stos
in
sub
lahf
rol
and
mov
loop
push
fld
mov
inc
mov
mov
dec
xlat
and
std
rcr
icebp
cmp
mov
call
ret
cwde
jle
xor
or
xchg
jmp
aad
dec
mov
xchg
in
test
pushf
f2xm1
mov
push
fisttp
movs
pop
mov
fwait
cmps
sahf
(bad)
cmp
mov
arpl
repnz
mov
mov
pushf
adc
mov
repz
test
mov
arpl
pop
jbe
test
(bad)
fnstcw
into
cmp
test
mov
aam
dec
jns
mov
sahf
out
data16
call
jp
fdiv
sahf
out
popf
mov
inc
lds
jle
or
sub
xor
xor
cmps
(bad)
mov
sub
pop
dec
cs
adc
je
fcomp
xchg
test
push
out
leave
cmp
sbb
push
shl
add
nop
pusha
sbb
in
and
adc
adc
jns
lods
mov
test
stos
repnz
or
sbb
mov
pop
xor
pop
inc
jae
ret
mov
push
idiv
push
das
mov
cmp
cmp
jmp
test
push
cmps
fild
mov
cmp
popf
inc
push
int3
(bad)
sti
(bad)
int3
shr
jecxz
retf
rcl
cwde
cld
sahf
fs
jb
or
jg
mov
xchg
fisttp
cmp
ins
(bad)
in
sbb
in
push
rcl
into
add
xchg
sub
pop
push
test
and
fdiv
call
(bad)
xlat
adc
jmp
jo
icebp
lock
mov
adc
scas
mov
pop
retf
cmps
stc
jb
iret
cmc
pop
stc
pop
mov
jnp
mov
mov
sbb
lods
imul
pop
pop
push
mov
in
dec
inc
scas
dec
adc
jbe
les
(bad)
cmc
clc
leave
lea
dec
ins
pushf
xor
(bad)
repnz
popf
dec
jle
(bad)
mov
xchg
jmp
cmp
mov
pop
gs
shr
stos
(bad)
dec
sbb
imul
cmp
inc
arpl
pop
ins
pop
inc
push
sub
mov
sub
test
mov
lock
mov
dec
and
lock
sbb
push
fcmovnu
scas
inc
div
js
fsub
rol
sub
xor
push
xchg
sbb
pop
enter
jne
push
push
jmp
scas
pusha
cmps
ins
inc
aaa
add
jmp
xchg
push
add
ins
fidivr
movs
and
es
mov
test
push
clc
retf
mov
push
xchg
in
cld
jg
mov
xchg
or
cmp
cs
mov
dec
sbb
cs
cmp
mov
lds
ss
adc
pop
dec
jl
scas
pusha
(bad)
xchg
cmp
hlt
mov
inc
add
jge
jo
dec
and
sbb
cmp
cmp
rcl
js
xor
sahf
ja
mov
pushf
cmc
mov
cmp
(bad)
mov
adc
xchg
pandn
ins
out
(bad)
(bad)
mov
(bad)
nop
inc
repz
ret
inc
sub
or
loop
pop
jbe
addr16
cs
retf
fdivp
fnstcw
pop
adc
pop
lods
xchg
sub
push
jb
int
out
push
sub
and
xchg
cs
inc
add
loopne
xchg
xchg
add
cwde
push
jbe
inc
jle
ds
jmp
fs
sbb
xor
jne
xor
ss
loopne
sub
push
fidivr
add
xlat
arpl
fyl2x
pop
xor
xor
rcr
mov
or
push
loopne
add
xchg
push
fisttp
pusha
ror
or
sbb
mov
dec
and
std
sub
imul
lds
cmc
mov
cmp
mov
sub
xor
(bad)
jbe
and
out
xor
xchg
rol
sbb
popf
cmp
xor
inc
data16
mov
sub
aas
push
outs
retf
sub
dec
mov
dec
mov
dec
cmp
daa
cmc
dec
mov
mov
test
mov
jp
mov
cmps
lea
call
inc
jae
dec
jp
pop
loopne
add
sub
out
mov
dec
inc
add
dec
outs
neg
mov
das
fnsave
sbb
out
xchg
cmp
data16
jns
and
ficom
add
retf
ror
add
push
sub
test
fnstcw
push
mov
add
mov
pop
dec
fdivp
je
inc
mov
jmp
(bad)
or
inc
repnz
retf
inc
(bad)
xor
xor
imul
mov
sub
aas
arpl
std
or
cdq
ins
jge
sbb
sti
ja
jb
sbb
loop
mov
and
stos
aad
pop
push
mov
aas
mov
test
sahf
in
retf
int
das
mov
xor
test
test
push
add
or
push
retf
jb
xlat
ret
lods
mov
jmp
outs
ficom
daa
call
jo
xchg
sub
je
cmp
push
dec
not
fisubr
repz
xchg
jmp
(bad)
push
sbb
mov
sub
arpl
std
retf
scas
or
arpl
ins
imul
imul
imul
push
iret
mov
xchg
and
cmc
jmp
out
mov
inc
repz
jecxz
ficomp
movs
daa
dec
or
pop
cld
sbb
mov
cli
xchg
out
jno
sbb
sbb
retf
or
es
in
out
retf
shl
loop
fisub
fcomp
cmp
cmp
int
sub
mov
lahf
inc
mov
pop
hlt
inc
scas
xlat
xor
sub
mov
retf
ins
(bad)
fld
and
stos
xlat
inc
div
in
push
imul
pop
xor
xchg
mov
or
mov
lea
(bad)
cmps
sub
lea
pop
les
mov
and
test
add
inc
movaps
(bad)
in
sar
inc
ins
loopne
(bad)
pop
popa
fs
aam
push
mov
add
imul
jb
movs
and
mov
lea
pop
icebp
ds
rcl
ins
mov
sub
mov
lds
imul
mov
int
mov
data16
xor
test
scas
and
mov
push
push
dec
bound
ror
sbb
pop
add
push
fcomp
adc
stos
jne
sub
mov
sub
dec
arpl
mov
cli
sbb
jmp
fwait
in
mov
mov
popa
dec
inc
sub
cli
add
inc
out
cmp
(bad)
and
push
ror
inc
xor
fld
inc
mov
popa
inc
add
ss
fbld
mov
or
pop
mov
xchg
fisub
cmp
cmc
repnz
fiadd
cmp
dec
jo
inc
data16
mov
div
aad
push
jl
ret
or
inc
stos
or
mov
cmp
mov
xchg
sbb
inc
inc
adc
ret
sbb
aas
adc
xchg
scas
lock
dec
das
and
or
add
add
xchg
aas
xchg
inc
stos
arpl
mov
push
(bad)
lahf
pop
or
cmps
mov
shl
push
ret
cmp
rol
cs
sbb
data16
addr16
xor
es
mov
mov
jmp
inc
in
sbb
push
mov
xor
xchg
data16
lods
push
hlt
addr16
lea
es
shl
mov
aam
rcl
xor
jg
les
out
out
jb
dec
int
adc
or
sahf
push
inc
inc
push
out
adc
out
cdq
mov
cwde
jnp
push
sbb
jbe
push
or
addr16
xor
call
adc
mov
mov
aas
test
loopne
out
cmp
mov
xor
pusha
std
test
cdq
fnsave
stc
pop
in
pop
jmp
cmc
jecxz
data16
jbe
outs
push
xchg
add
sbb
lea
sbb
inc
xor
mov
mov
imul
(bad)
outs
clc
sub
mov
jg
xor
div
push
fs
push
jle
pop
stos
mov
shl
bound
lahf
xchg
xor
or
daa
push
jae
add
inc
and
and
int
inc
arpl
icebp
fwait
sbb
stc
mov
mov
pop
add
outs
sub
lds
ds
jne
or
or
adc
jne
pop
jae
fnstcw
mov
fisttp
das
lock
pop
call
xchg
sti
push
jnp
push
ja
outs
loopne
push
jg
ret
mov
or
lock
scas
cmp
and
jmp
retf
dec
inc
pop
mov
mov
xchg
jmp
nop
pop
out
outs
scas
inc
mov
jmp
ret
xor
addr16
jnp
mov
out
push
inc
fsub
mov
mov
xchg
sbb
(bad)
mov
and
fbld
and
call
or
sub
fwait
rol
adc
dec
push
inc
fisubr
cmp
mov
les
inc
stc
imul
cld
fiadd
cmc
jl
mov
mov
mov
pop
retf
ins
lahf
adc
push
xchg
icebp
mov
retf
push
call
repnz
push
sub
sub
dec
sbb
pop
iret
imul
into
mov
iret
adc
add
daa
mov
xor
in
sub
adc
cmps
(bad)
fistp
(bad)
mov
sahf
pop
in
jge
cmp
fisttp
ja
aaa
call
movs
or
gs
arpl
dec
or
jecxz
xchg
mov
adc
fs
xlat
dec
in
test
bound
fistp
cwde
push
dec
fs
xchg
aad
adc
lods
scas
jno
test
mov
cmc
push
sub
mov
and
jge
jmp
inc
add
daa
sbb
mov
rcl
lea
pop
push
dec
lods
pop
ror
pop
cmps
stos
inc
pushf
loopne
jg
jnp
jns
je
jmp
test
shr
add
sbb
nop
fimul
mov
aas
ds
(bad)
mov
outs
sub
pop
xchg
(bad)
sbb
mov
lods
inc
jo
sub
mov
mov
sub
xor
ss
sti
cmps
stc
fst
int3
dec
or
push
outs
mov
jmp
jnp
lods
les
or
jae
aaa
xchg
sub
xor
loopne
add
das
outs
loop
loopne
test
psrad
mov
push
imul
loope
xchg
dec
adc
(bad)
je
popa
in
not
in
jp
or
push
popa
xor
test
iret
sbb
push
out
les
push
pushf
cmp
xor
sbb
mov
push
or
pop
cmp
pop
and
xchg
jae
inc
xor
sbb
sbb
cdq
mov
sub
cmp
mov
xchg
pop
xor
ss
out
ret
mov
ds
icebp
mov
outs
shr
je
or
dec
(bad)
jl
sahf
out
mov
popa
jns
sub
fwait
sub
(bad)
sbb
xor
lods
mov
and
int3
add
xchg
jae
mov
test
je
push
mov
mov
sub
fwait
xor
push
aas
adc
pop
out
call
sub
cwde
fs
dec
mov
(bad)
fst
add
aam
pop
call
sahf
push
es
xchg
aam
data16
adc
dec
jecxz
jl
adc
inc
dec
movs
jg
daa
nop
imul
fidiv
stc
aad
(bad)
xchg
aas
int3
xchg
xchg
call
add
push
dec
sbb
rol
push
push
mov
idiv
mov
shl
or
shl
inc
pop
stc
sub
lods
dec
mov
cmp
xchg
adc
xor
rol
dec
sub
and
mov
mov
dec
add
ins
fidiv
or
add
sub
ds
sbb
and
mov
pop
enter
add
fdiv
cmp
mov
fcomp
jp
js
cmp
stos
cmp
rol
shl
jmp
xor
sub
jp
xor
out
icebp
enter
pushf
mov
dec
aas
ficomp
push
and
daa
sbb
push
(bad)
lock
sub
cs
jmp
mov
scas
sub
call
ret
std
and
mov
xchg
cld
cmp
data16
imul
out
mov
out
xor
xlat
xchg
int3
sbb
lods
es
push
add
jne
lock
cli
push
mov
inc
idiv
sbb
push
mov
pushf
sbb
imul
cmp
call
xlat
jmp
fwait
mov
idiv
ins
and
dec
enter
push
cmps
lods
bound
mov
and
or
dec
shl
je
sub
shl
dec
aad
pop
(bad)
push
cli
jae
fistp
ins
(bad)
cmp
push
stos
mov
test
popf
sar
repnz
mov
push
jb
lods
push
test
sbb
int3
std
cdq
sub
scas
jmp
and
cs
lahf
pushf
adc
addr16
(bad)
ja
sbb
outs
and
iret
repz
cmp
hlt
inc
divps
outs
cmp
ja
je
ja
sahf
dec
sub
ja
arpl
cmp
push
out
adc
loopne
jne
push
lods
jg
sub
out
ror
mov
mov
(bad)
pop
jo
mov
or
pop
ret
into
xchg
popf
jbe
sub
pop
xchg
inc
movs
mov
or
rcl
clc
mov
imul
xchg
pop
push
jns
jns
xchg
retf
fisttp
inc
sub
sub
inc
push
xor
push
adc
mov
in
cmps
mov
pop
dec
ins
cmc
mov
fmul
out
and
xchg
int
ror
pop
push
dec
daa
cld
cmp
loope
xor
adc
sbb
mov
jg
pop
nop
inc
fmul
fs
aam
outs
push
out
imul
sbb
jae
xchg
push
cmp
cmps
sub
mov
repz
inc
std
in
and
aam
arpl
mov
fbstp
popf
xchg
gs
inc
sub
jnp
sahf
sahf
lds
pop
cs
dec
xchg
xchg
ja
stc
sub
out
popf
xchg
mov
mov
stos
dec
cmp
pop
xor
(bad)
and
mov
mov
nop
inc
(bad)
dec
add
mov
popa
ret
lahf
movs
dec
xchg
aam
and
jl
pop
sbb
sub
push
fwait
nop
pop
rep
mov
push
lock
call
bound
aaa
out
pop
mov
into
fstp
jns
and
(bad)
mov
mov
push
xchg
inc
jl
jg
mov
or
pop
retf
mov
popa
mov
in
hlt
mov
dec
dec
call
mov
idiv
mov
jbe
jno
xchg
test
test
lods
fldcw
adc
dec
(bad)
or
in
mov
(bad)
jmp
imul
or
jge
stos
cmp
test
(bad)
push
cwde
rcl
sub
aas
sub
xor
les
ficomp
loop
popa
stc
cwde
ret
push
mul
dec
mov
fidivr
int3
shr
addr16
imul
ret
or
mov
mov
cmp
stos
xor
adc
(bad)
mov
xor
inc
fwait
inc
jle
inc
xchg
dec
std
daa
aas
inc
inc
add
fimul
xchg
jae
ror
loop
cmp
xor
jo
not
inc
push
add
pop
fist
gs
mov
mov
push
xor
movs
stos
test
pop
jb
(bad)
(bad)
out
cmp
cmp
loope
lods
cmp
inc
inc
push
add
leave
(bad)
push
cli
aaa
test
pop
mov
mov
imul
fsubp
fbld
out
xlat
jg
push
inc
leave
xlat
xchg
jb
sub
mov
je
dec
mov
call
sahf
scas
aam
(bad)
push
add
loop
fdiv
push
stos
jmp
jb
push
pop
fbstp
inc
aam
pop
div
sti
and
cmps
cmps
daa
jmp
adc
mov
cdq
in
jle
dec
stc
push
leave
cwde
add
push
jno
je
test
jns
add
jmp
aam
movs
fcmovbe
inc
mov
imul
popa
test
sub
(bad)
cs
dec
jns
(bad)
lods
outs
cmp
push
xchg
inc
pop
push
pop
add
stos
fimul
add
adc
vrcpss
or
dec
mov
cs
call
and
add
lock
inc
inc
mov
xor
push
in
adc
xor
pop
dec
adc
loop
dec
jle
fcom
cmp
inc
adc
cs
in
addr16
sub
inc
or
push
pop
rcl
inc
fcmovb
jge
arpl
mov
xor
mov
xor
xchg
mov
adc
sub
pop
movs
data16
inc
push
cli
nop
xor
dec
bound
mov
jle
fnstcw
push
pusha
push
cmp
arpl
sub
(bad)
jo
in
cmp
and
add
iret
movs
fimul
xchg
out
xor
movs
cmc
mov
xchg
pop
xchg
add
loope
mov
retf
les
(bad)
mov
les
adc
enter
xchg
mov
into
iret
gs
xchg
fsubr
je
inc
arpl
and
addr16
adc
push
loopne
add
shrd
inc
adc
ret
div
cli
cmps
out
lock
(bad)
push
cmp
pop
add
es
ficomp
push
or
mov
cmp
data16
pop
clc
in
sub
loope
ficom
pop
lea
lock
push
aad
mov
js
mov
cmc
jmp
call
or
movs
sub
jno
and
push
mov
cmc
cmp
in
in
fisttp
outs
mov
sub
mov
sti
sbb
mov
stos
jl
movs
jle
bsr
mov
(bad)
lods
test
shr
shr
pop
test
data16
inc
sub
jb
shl
gs
clc
std
cwde
xchg
and
mov
cli
mov
xchg
push
gs
jp
(bad)
lods
push
(bad)
mov
in
add
lahf
aad
fadd
and
ret
ss
adc
leave
mov
inc
xor
mov
cmc
cdq
push
mov
and
jno
inc
mov
sbb
stc
jmp
cdq
lods
cld
mov
loop
imul
adc
out
aaa
cmp
into
outs
mov
hlt
retf
ss
xchg
fucom
dec
xchg
into
es
leave
push
xlat
push
mov
mov
xor
inc
xchg
out
inc
pushf
scas
mov
stos
or
es
push
and
mov
fisub
rol
inc
loop
js
ror
mov
sub
aad
cwde
cmp
jl
call
cmp
in
sti
nop
data16
mov
aam
ror
pop
push
add
sbb
outs
jmp
push
pop
retf
in
add
stos
push
mov
pop
xchg
std
push
xor
push
jp
jo
ret
xchg
mov
sub
into
cwde
test
jmp
mov
aam
cwde
lock
pop
and
sti
fwait
sub
cs
add
fidivr
in
cmp
mov
and
lea
aam
call
cmc
(bad)
cld
je
push
jg
mov
(bad)
fstp
call
push
xchg
retf
lods
mov
xchg
aas
adc
arpl
jg
sub
and
in
cmp
mov
lods
stos
sub
mov
mov
xor
dec
mov
ret
and
and
enter
std
add
out
movq
ja
mov
push
pop
push
and
pop
frstor
sbb
out
fild
test
and
rcr
js
js
test
dec
jmp
lods
jle
(bad)
clc
sbb
or
sbb
retf
out
xchg
jp
push
jo
sbb
xor
pop
mov
xor
or
test
adc
and
jecxz
mov
fcom
lds
jb
sub
push
aas
jp
xchg
out
ins
je
test
mov
movs
dec
inc
stos
pop
mov
mov
xchg
popf
xchg
jno
inc
xchg
gs
add
xchg
xchg
cmp
pop
xchg
push
jb
jns
jo
cs
js
xchg
jg
pop
arpl
lock
out
push
gs
xchg
aam
mov
xlat
mov
ss
mov
repz
fsubr
icebp
mov
pop
outs
retf
jl
or
mov
inc
arpl
cli
retf
mov
jecxz
adc
mov
ret
and
(bad)
repz
and
push
ja
cld
add
retf
(bad)
cmps
jp
inc
jbe
iret
xchg
les
mov
sahf
call
int3
cmp
push
mov
jg
movs
int
dec
jle
imul
sub
mov
add
popf
test
sub
outs
pop
cmp
jns
xor
cld
adc
icebp
mov
mov
test
repz
add
scas
mov
dec
fucomp
xor
aam
fs
adc
xchg
push
loope
xchg
call
ds
loopne
adc
or
add
pop
mov
inc
cmp
cmp
cs
add
add
fcom
fist
add
push
inc
pop
mov
stos
adc
aam
lock
adc
push
stc
add
in
cmp
xor
push
add
jbe
js
xchg
data16
pop
push
push
jmp
push
pop
dec
cs
out
inc
ret
icebp
fcomp
fsub
leave
fmul
call
lods
fisttp
shl
mov
ss
sbb
mov
out
push
xchg
outs
jns
adc
sub
push
add
push
sti
dec
aad
or
inc
loope
sub
test
icebp
push
nop
movs
cwde
dec
imul
loopne
jns
mov
cmp
mov
imul
daa
pop
inc
fisttp
test
push
test
inc
into
mov
xchg
mov
push
aad
or
fild
inc
jmp
xchg
add
shr
stc
test
inc
pop
jl
call
mov
out
js
pop
mov
mov
rol
retf
inc
nop
div
std
rcr
and
adc
in
div
xchg
aas
add
push
retf
push
pop
les
cld
sub
stc
imul
jge
cdq
setns
inc
adc
addr16
sbb
pop
adc
cli
mov
lods
and
shr
add
fwait
push
(bad)
call
mov
aaa
aas
jg
in
aad
sbb
(bad)
add
out
jmp
je
lods
jb
adc
fidiv
sub
xlat
stc
jle
mov
adc
and
dec
rcr
push
xor
push
xor
test
(bad)
(bad)
repz
pushf
xchg
pop
dec
cmp
sub
popa
adc
add
cmp
or
mov
xlat
pop
ror
fisttp
into
jmp
ins
scas
push
or
add
push
mov
gs
or
cli
fadd
jp
rcl
fmul
imul
clc
inc
mov
out
dec
pop
sbb
xchg
pop
xchg
in
nop
xor
call
pop
push
loope
movs
and
sbb
pop
es
mov
pop
jbe
add
sar
push
leave
dec
addr16
mov
je
int
daa
idiv
xchg
push
lock
sar
mov
test
push
add
into
and
loopne
div
loopne
movs
sub
pop
movs
cmps
mov
pop
int3
(bad)
push
outs
ja
hlt
add
test
and
repz
cmp
sar
(bad)
(bad)
inc
pop
cmp
add
and
dec
loopne
mov
inc
les
cmps
cmp
sbb
dec
mov
loopne
ds
xchg
jns
push
and
sbb
pop
jae
out
sub
jns
sub
int
mov
dec
xor
xchg
mov
xor
fimul
pop
mov
popa
jns
pop
ja
mov
pop
in
mov
cmp
push
adc
cld
out
out
stos
loop
imul
lahf
pushf
add
cmp
xchg
cmp
and
add
js
std
mov
add
mov
aam
jnp
push
sub
adc
lods
push
mov
adc
iret
xlat
and
test
bt
fadd
mov
shr
inc
fild
icebp
mov
xor
shl
aam
cmp
and
push
bound
cmpps
jae
out
push
cmps
rcr
cli
mov
sub
loopne
lods
scas
cmp
xchg
mov
pushf
retf
out
out
jne
inc
cmc
adc
gs
add
sbb
adc
sub
enter
lods
fs
or
stos
pop
jns
or
pusha
cli
(bad)
jmp
mov
mov
out
xchg
adc
mov
pusha
xchg
je
dec
mov
cwde
dec
sub
xor
ret
push
out
cmp
lahf
gs
jle
jbe
and
adc
das
aaa
inc
sub
shl
outs
or
pusha
pop
adc
mov
ret
jmp
aam
sub
pop
jbe
inc
xchg
or
lahf
(bad)
movs
fnstenv
or
(bad)
rol
shrd
sbb
inc
dec
les
test
(bad)
aam
push
cld
pop
mov
sar
mov
imul
shr
pushw
lea
push
js
sahf
mov
loope
repz
clc
mov
and
or
frstor
lods
out
mov
shl
enter
cmp
inc
mov
xor
mov
imul
adc
ja
pop
sahf
pop
shl
(bad)
sbb
sbb
stos
mov
pop
in
and
add
out
imul
adc
push
sub
mov
ror
xlat
and
(bad)
dec
jl
inc
sub
lds
adc
cmp
enter
adc
dec
test
cdq
cmp
adc
lods
jns
into
shr
sub
loop
adc
fs
(bad)
clc
sbb
pushf
mov
mov
iret
das
dec
pop
mov
cmc
dec
push
daa
inc
xchg
test
sub
jge
pop
retf
rcr
pushf
sub
xor
xchg
cs
jge
or
ins
outs
mov
cli
leave
dec
mov
inc
imul
push
mov
ret
pop
(bad)
aad
add
xlat
in
loopne
xchg
js
inc
and
jmp
addr16
pop
jns
call
test
loopne
ja
into
mov
bound
cmps
out
loopne
push
dec
dec
cmp
les
movs
mov
sub
dec
mov
mov
xor
cmp
sar
loope
sbb
mov
xchg
jg
jnp
xor
jecxz
cmp
xor
jmp
aad
push
add
sti
inc
movs
jg
sub
jecxz
pop
xchg
mov
xlat
js
and
into
shl
shl
dec
mov
mov
icebp
jecxz
inc
test
into
inc
sti
pop
(bad)
aas
lock
jmp
jmp
ss
test
sub
mov
out
out
popf
addr16
pop
ins
js
arpl
pop
enter
inc
fcmove
loop
pop
sti
inc
xor
or
mov
inc
add
ficomp
fbstp
cmp
mov
test
push
mov
inc
int
lock
fsub
fadd
add
xchg
fidivr
add
add
mov
jo
inc
fisub
push
add
push
hlt
jmp
mov
add
call
sbb
sub
fld
retf
out
ins
outs
jb
int
std
bound
mov
outs
inc
mov
add
mov
xor
jmp
retf
adc
or
push
test
sahf
addr16
mov
xchg
mov
xchg
mov
pop
lock
jo
rol
jo
mov
les
(bad)
jmp
mov
mov
adc
dec
sbb
cmp
mov
std
sahf
sahf
(bad)
ins
mov
out
push
inc
pop
mov
sar
adc
xchg
or
out
hlt
xor
es
ins
cmp
and
(bad)
jp
int
call
(bad)
xlat
scas
fist
xor
jle
inc
lea
loope
not
ins
mov
test
fs
dec
sub
jmp
inc
mov
add
mov
lock
push
movs
mov
jmp
xchg
lahf
adc
push
les
jmp
pop
sbb
daa
cmp
dec
fmul
inc
mov
nop
fwait
daa
enter
hlt
mov
lods
mov
imul
stos
xchg
xor
(bad)
in
xor
shl
movs
jp
pmaxub
mov
lock
xor
cmp
dec
add
sub
jnp
icebp
inc
stos
mov
fsubr
push
lock
adc
(bad)
or
enter
shr
xchg
jb
test
out
(bad)
(bad)
lods
popa
jbe
sbb
and
ja
sbb
ja
out
pop
and
pop
push
and
or
ror
sub
push
repnz
std
sti
shl
(bad)
mov
cs
jp
(bad)
mov
push
mov
popa
add
outs
rol
inc
cmp
mov
lds
cmp
aas
adc
jl
sbb
fwait
sub
fistp
xchg
call
stos
leave
iret
ss
lea
cmp
mov
inc
into
ins
push
daa
in
das
cmp
sub
movs
jle
jmp
mov
int3
sahf
cdq
lea
or
int
sub
ins
pop
pushf
xor
adc
jnp
nop
push
push
jbe
aas
(bad)
xchg
lea
and
or
adc
inc
jmp
addr16
inc
ins
rcr
push
jg
jle
scas
clc
lods
aas
push
rcr
or
inc
lahf
inc
repnz
iret
lea
test
bound
scas
outs
xchg
jg
pushf
or
add
mov
test
push
fsub
sbb
mov
add
sub
push
cmps
ss
lods
cmps
sbb
lock
mov
and
push
stos
clc
xchg
cmps
mov
(bad)
fldenv
cs
jecxz
(bad)
ja
pop
inc
dec
jmp
xchg
pusha
and
push
int
das
in
fist
add
daa
xor
jp
data16
iret
mov
movs
jge
jp
fucomp
aaa
scas
or
test
hlt
sahf
imul
dec
cs
xor
cmps
jmp
jmp
push
pop
pop
inc
test
or
mov
jl
push
mov
outs
jmp
(bad)
mov
push
jns
xor
mov
sbb
aaa
in
std
sub
push
xor
sub
push
std
imul
iret
jne
repz
pop
pop
mov
cli
push
lea
in
xchg
hlt
lods
push
lds
pop
jno
add
mov
loopne
adc
test
mov
fiadd
jnp
sbb
ss
repz
dec
xlat
jge
outs
ficomp
inc
xchg
add
arpl
push
retf
xchg
stos
enter
jne
jmp
std
shr
retf
sub
es
(bad)
imul
mov
or
jae
cld
enter
jecxz
mov
test
mov
xor
out
add
and
push
idiv
mov
push
test
(bad)
rol
jb
dec
mov
xor
jp
mov
fxch
mov
idiv
jmp
xchg
stc
jnp
imul
popa
sbb
js
push
outs
sbb
call
cmps
call
sbb
icebp
jmp
ins
les
fidiv
add
dec
push
sti
test
jbe
dec
rcr
xchg
mov
jbe
mov
(bad)
or
mov
mov
add
js
mov
cmps
pop
and
lea
jne
push
retf
pop
add
jp
mov
mov
ja
fidivr
jno
fbstp
lods
jae
inc
ret
rcl
xchg
(bad)
sahf
into
inc
imul
jecxz
ret
xor
cmp
dec
inc
lds
xchg
aas
lea
nop
push
dec
push
xor
mov
pop
idiv
pop
jle
pop
xchg
inc
in
mov
inc
movs
js
ror
icebp
or
rol
xchg
out
sbb
jge
lods
test
lea
xor
out
int3
xchg
xlat
cdq
aaa
xchg
and
adc
pusha
cmp
or
inc
xchg
pop
popf
out
pop
shr
push
jb
dec
xchg
aas
push
outs
lds
add
lock
loop
mov
adc
adc
(bad)
shl
jle
lock
aaa
pop
loope
imul
out
not
out
and
fcom
pop
icebp
sub
jge
inc
rcl
aaa
jmp
fnsave
cmps
ja
retf
mov
ins
and
jnp
mov
pushf
pop
repnz
inc
loope
rcl
add
(bad)
adc
mov
push
push
push
movntq
shr
in
jge
sub
mov
push
rcl
enter
lahf
inc
pop
int
xchg
fisttp
(bad)
jne
popa
adc
aas
pop
outs
out
in
sbb
sub
fcom
mov
cmp
or
xor
push
popa
repnz
loope
lods
sti
push
(bad)
loopne
pop
(bad)
mov
add
jle
leave
aam
push
pop
scas
xchg
popf
sub
cmp
mov
call
or
push
mov
punpcklbw
push
xor
push
inc
mov
or
into
or
push
(bad)
js
push
loopne
adc
les
scas
test
leave
pop
mov
mov
popf
jle
cs
or
adc
lods
mov
int
cmp
loop
(bad)
(bad)
cwde
push
push
inc
popa
push
jecxz
es
cli
das
nop
xor
fs
sti
or
repz
dec
pop
jns
dec
test
jmp
or
push
dec
fild
adc
add
push
pusha
and
mov
repnz
retf
xor
cmp
outs
push
adc
cdq
arpl
xchg
jnp
in
fdivr
in
scas
rcr
inc
sar
push
mov
sub
mov
inc
xlat
out
xchg
in
mov
repz
mov
jnp
push
sti
hlt
test
mov
out
in
lods
dec
push
in
jb
call
lds
enter
push
popf
movs
addr16
popf
jns
xchg
inc
ins
movs
mov
rcl
ins
shl
sbb
push
js
lock
inc
jb
rcl
add
dec
mov
scas
not
and
outs
movs
mov
daa
je
sub
imul
test
outs
xchg
mov
pop
data16
sbb
xchg
loopne
call
aas
mov
sub
int
sub
pop
sbb
mov
test
add
mov
dec
add
mov
(bad)
sbb
pop
repz
mov
mov
push
mov
pop
xor
cmp
xor
push
aam
int
pop
xchg
ror
out
arpl
and
icebp
dec
mov
int
dec
push
mov
sbb
shl
and
push
nop
mov
jmp
mov
or
and
push
daa
xchg
scas
test
pusha
fs
mov
inc
mov
test
ja
push
pushf
fisttp
jge
popf
test
sub
and
xor
mov
loope
out
add
xchg
add
add
hlt
into
not
shl
cld
aas
aas
iret
pop
ret
lea
inc
mov
jae
cmp
rol
push
fsubr
jp
and
dec
xor
sub
popa
enter
xlat
dec
pushf
dec
mov
adc
loopne
add
test
or
shl
adc
push
mov
cmps
retf
inc
shr
or
sub
dec
add
jo
lods
add
test
xor
fdiv
pop
jge
or
jl
fcmovu
cmp
fstp
mov
int
outs
mov
push
xor
pop
ss
push
jb
and
jo
push
cmp
into
out
loop
push
lods
or
leave
adc
or
push
pop
(bad)
out
sub
mov
xchg
sub
test
cmp
mov
dec
sti
mov
ja
xchg
es
add
sbb
(bad)
mov
paddsw
cmp
js
cmps
jne
inc
(bad)
push
ds
inc
shl
test
inc
jmp
xchg
push
cdq
(bad)
jmp
stos
out
fucomi
cmps
mov
xchg
ins
inc
movs
aam
add
ins
shr
adc
xchg
bound
pop
or
adc
mov
add
push
pop
sub
mov
(bad)
and
inc
or
stos
(bad)
daa
cmp
pop
push
ds
and
mov
mov
mov
dec
adc
inc
lods
jmp
or
mov
(bad)
fst
mov
aam
out
or
push
push
mov
imul
dec
mov
(bad)
rol
xchg
movs
inc
test
ja
call
push
into
xlat
jno
sbb
sbb
jnp
daa
pop
std
mov
stos
sbb
pop
cs
je
jmp
pop
jle
psadbw
sub
inc
and
cmp
jle
mov
xchg
mov
icebp
sahf
mov
add
in
pop
sti
push
ret
jl
cmp
mov
xor
ins
jp
sbb
add
jmp
inc
ds
sti
jmp
mov
xor
pop
inc
or
out
fdivr
xor
js
mov
data16
and
pop
je
sbb
out
aaa
sbb
xor
xchg
mov
push
sar
sbb
(bad)
cld
cmps
ds
popf
ror
xchg
sub
or
bound
shr
jb
push
cs
inc
shl
push
xor
ja
push
sbb
pop
pop
fcmovu
ret
cmps
xchg
push
cdq
jb
clc
cwde
and
(bad)
and
jmp
imul
mov
xor
cmp
xor
mov
push
adc
ins
(bad)
jmp
xchg
daa
dec
pop
add
in
adc
push
inc
lods
mov
mov
and
sbb
jb
xchg
jmp
pop
jg
(bad)
test
push
xchg
gs
pop
ins
push
cmp
(bad)
ror
adc
in
sbb
gs
cmp
push
(bad)
mov
in
mov
xchg
jb
inc
and
push
push
push
loop
and
das
jmp
and
xor
add
jbe
out
out
lock
mov
sar
gs
aam
adc
cmp
test
in
aas
sub
pusha
aam
push
jmp
(bad)
mov
add
inc
mov
test
jo
adc
sub
nop
aam
inc
ins
in
dec
aaa
fucomp
push
add
leave
xchg
fcomp
jge
out
xor
js
push
nop
leave
sbb
in
jne
arpl
fwait
pop
sub
and
test
rcr
and
or
loopne
dec
iret
icebp
push
cmp
adc
cmp
jge
or
test
jb
mov
sahf
mov
sub
mov
outs
out
xchg
mov
cdq
data16
sbb
loopne
add
push
cli
test
jae
jg
sub
pop
add
test
cmp
pop
dec
cmc
add
fcmovu
pop
cmp
dec
pop
test
pop
sub
pop
clc
xor
xchg
pop
mov
ret
adc
pop
dec
mov
xor
fmul
and
mov
xchg
add
sahf
xchg
aaa
pop
xor
dec
or
int
mov
push
or
mov
adc
sahf
pop
cmp
or
jbe
aas
add
sub
test
jg
mov
call
icebp
push
inc
xor
(bad)
mov
aas
xchg
pop
sbb
pop
push
push
das
call
jp
movs
hlt
fadd
and
sub
outs
xchg
sar
call
jmp
inc
ins
aaa
and
in
xor
ffree
loopne
mov
xchg
movs
jg
dec
cmps
bnd
inc
jae
adc
xchg
ficom
pop
inc
inc
pop
jo
ins
pop
push
aam
dec
in
jmp
ins
mov
shl
iret
sub
pop
mov
sar
fwait
lahf
mov
mov
pop
clc
add
jge
jg
xchg
imul
retf
int
pop
jmp
sbb
and
cmp
fwait
sub
mov
push
xchg
xor
mov
scas
daa
adc
cmps
inc
pop
xchg
and
ss
in
push
adc
dec
bound
mov
sub
xchg
call
stos
mov
jbe
movs
adc
rcl
and
mov
jecxz
add
inc
jnp
xchg
xchg
int3
xchg
mov
jno
add
lds
sub
mov
push
out
icebp
into
cmp
inc
enter
test
xchg
mov
fnstenv
fwait
pop
pop
test
xlat
leave
call
cmp
lods
mov
push
(bad)
imul
aam
(bad)
shr
retf
arpl
and
daa
mov
xor
bound
sub
xchg
push
retf
jne
hlt
arpl
imul
inc
outs
jmp
in
(bad)
sti
sub
sti
inc
std
lahf
pop
nop
add
call
and
ja
cmp
and
shr
xor
mov
retf
js
mov
push
imul
mov
xchg
and
inc
push
aam
mov
leave
inc
rcl
push
jne
mov
arpl
fdivr
out
icebp
leave
je
sub
clc
cs
sbb
xchg
add
push
pop
xchg
xchg
cld
jge
sub
sub
ins
inc
inc
sbb
out
ins
sti
icebp
xor
xor
(bad)
ins
mov
jae
out
push
fsin
pop
pop
test
jle
pop
out
dec
(bad)
add
sbb
fisub
neg
fsubr
pop
xchg
cmp
jg
stos
mov
push
xchg
aas
or
or
js
out
sar
mov
adc
ins
or
icebp
cmp
jecxz
push
pop
inc
ret
mov
add
jecxz
cmp
xchg
sbb
sub
dec
sysexit
push
icebp
ja
push
push
sbb
cmp
sti
lods
mov
out
addr16
ret
push
test
inc
xor
sets
mov
xchg
lea
mov
push
jg
int3
outs
mov
and
sub
arpl
ins
test
dec
push
jae
adc
rol
mov
cmc
(bad)
aam
mov
cs
rcr
mov
es
je
ja
sbb
shr
or
stc
icebp
in
daa
test
popf
pop
adc
add
in
aam
xlat
jne
pop
mov
xor
adc
stos
fdiv
out
out
pop
cmp
out
xor
sbb
in
inc
add
jnp
rol
dec
test
stos
cmc
cmp
jg
hlt
push
icebp
adc
jg
jb
pop
daa
in
push
fsubp
nop
test
jns
xor
cmp
mov
pop
sub
scas
mov
add
xchg
mov
cs
(bad)
shl
xor
in
sbb
add
ja
pop
adc
in
mov
fisttp
xor
xor
stos
xor
push
cmp
movs
stc
cmp
cld
sti
jp
jge
sub
mov
adc
jmp
fs
int3
add
xor
push
lds
mov
int3
push
xchg
adc
ja
dec
scas
sti
push
cmps
dec
pop
ret
out
push
jne
fst
fdivr
cmps
inc
retf
aad
adc
inc
cmp
test
mov
jge
cmc
push
movs
mov
sub
mov
push
enter
or
fwait
dec
mov
cmps
lods
pop
pop
dec
fsubr
loope
mov
sbb
jg
pop
or
jo
in
inc
inc
pop
mov
fisubr
je
scas
adc
lock
ins
adc
adc
shl
mov
scas
mov
push
mov
sbb
(bad)
mov
dec
sbb
inc
stos
bound
pop
stc
cmc
inc
retf
ret
movs
test
adc
retf
hlt
test
mov
push
mov
icebp
movs
xor
cmp
pop
cmps
push
out
mov
sbb
jecxz
gs
cli
inc
and
(bad)
cld
or
jle
(bad)
movs
shl
scas
int
fstp
jmp
push
imul
stos
xor
mov
ja
xchg
mov
inc
ret
clc
cmps
jne
dec
dec
arpl
cmp
retf
stc
mov
xchg
popf
jmp
cmps
cld
dec
lea
and
std
(bad)
js
lods
adc
test
adc
add
mov
pop
inc
mov
lock
mov
sbb
stos
je
imul
ficomp
ja
jo
sbb
aaa
xchg
mov
rcr
push
fsubr
shl
test
pop
cli
xor
mov
clc
dec
fadd
dec
sbb
mov
pop
mov
push
imul
mov
jg
xor
aas
cmp
fmul
pop
mov
in
fdivr
fsub
or
cmp
movs
xor
pop
xchg
cmps
enter
in
mov
xchg
xchg
xchg
mov
loopne
xchg
sbb
pop
inc
push
xchg
adc
stc
nop
push
mov
push
jmp
mov
cmp
retf
movs
push
pop
xor
dec
test
movs
xor
aas
xor
mov
int
xor
mov
mov
retf
inc
in
not
mov
pop
jge
fisubr
or
add
sub
xchg
or
(bad)
je
pop
leave
fwait
adc
cmc
(bad)
mov
ss
push
jae
inc
lds
inc
in
jae
aam
pop
or
cdq
aas
(bad)
xlat
out
dec
pop
dec
stos
test
pusha
stc
shl
cdq
fwait
or
cdq
add
xor
cmc
mov
int3
push
cs
mov
mov
cs
add
mov
pop
rcl
in
or
int
pop
retf
out
jp
test
neg
call
cmp
jbe
sti
jmp
xchg
mov
pop
push
cs
ror
mov
stc
dec
movhps
repz
(bad)
fstp
(bad)
sbb
fmul
ds
inc
push
jnp
inc
call
test
adc
jmp
mov
and
data16
and
push
or
scas
lahf
scas
(bad)
bound
popa
mov
jnp
pushf
sub
mov
push
pop
test
jle
scas
stc
mov
stos
into
mov
aad
into
jl
sub
lea
pop
scas
jmp
out
retf
sbb
div
paddsb
imul
sbb
xchg
add
ds
arpl
inc
icebp
jo
movs
xor
pop
push
jnp
test
call
retf
(bad)
popa
ins
mov
and
movs
inc
ret
outs
jnp
(bad)
ret
mov
or
(bad)
(bad)
das
cmc
gs
ret
push
mov
mov
das
lock
sub
adc
dec
loope
das
imul
cdq
clc
xor
jbe
push
add
jp
pop
ss
lds
adc
and
scas
mov
sub
push
mov
mov
cli
outs
fcmovu
mov
push
movs
outs
pop
retf
add
add
int
jne
pusha
mov
cmps
dec
test
adc
and
sub
adc
iret
ss
ja
ins
sub
pusha
fs
out
aas
mov
add
fcmovnbe
sar
(bad)
sub
pop
mov
ret
pusha
repz
adc
add
mov
mov
call
xor
jne
mov
jns
ins
xchg
icebp
ret
and
cli
pop
sbb
or
ret
test
mov
pop
mov
in
mov
outs
adc
push
mov
sub
aam
sbb
ret
je
dec
jb
mov
cmp
aas
int
pushf
shl
and
dec
cmp
jae
jno
je
shl
adc
scas
mov
ret
lds
mov
xlat
adc
push
cmp
mov
cmp
lahf
sahf
sbb
mov
daa
cmps
sbb
jae
inc
je
mov
fstp
imul
repnz
iret
ds
add
fsubp
sub
mov
or
iret
daa
(bad)
in
jns
sahf
xor
aad
pop
mov
shr
push
cmps
xchg
sbb
test
movs
rol
fdiv
dec
and
xor
sahf
cmp
jmp
aaa
jae
dec
outs
dec
imul
cmc
fdivr
add
jp
cs
daa
(bad)
int
push
retf
mov
jle
add
je
popf
inc
xchg
das
ins
mov
jno
jg
ss
jne
retf
ret
sbb
xor
cs
and
add
mov
outs
push
lods
aad
loop
mov
out
mov
adc
mov
adc
pop
mov
push
lds
push
mov
dec
sub
cmp
addr16
adc
xor
add
sub
dec
xor
cmp
(bad)
(bad)
in
in
inc
mov
mov
scas
cld
pop
iret
fstcw
fwait
(bad)
jl
mov
add
es
ret
and
imul
xchg
ins
jge
aad
cmp
push
and
xlat
or
hlt
or
push
popf
(bad)
mov
hlt
mov
pushf
iret
in
pop
add
jle
mov
jp
cs
out
jmp
pop
ja
or
xchg
cmp
adc
lds
cmp
add
mov
in
call
sub
inc
or
scas
out
mov
dec
in
aaa
movs
mov
fdivr
push
mov
push
pop
test
imul
ffreep
mov
lock
dec
pop
ds
imul
mov
push
and
jecxz
sub
jl
or
sbb
bound
gs
adc
inc
sti
jp
cmp
popaw
les
push
stc
jo
adc
and
fisubr
stos
sub
mov
popa
and
loop
push
sbb
cdq
scas
inc
mov
mov
mov
pop
sbb
js
push
(bad)
jmp
mov
sub
sar
inc
inc
retf
cmp
pop
into
jne
fld
nop
rol
jge
addr16
pop
adc
outs
jp
ins
mov
cmp
pop
pop
pusha
mov
fcomp
data16
cwde
add
cmp
pop
cwde
fnsave
push
dec
push
dec
push
repnz
pushf
rol
jmp
cs
iret
pop
dec
js
mov
and
mov
out
outs
int
inc
push
out
daa
and
mov
inc
sbb
loopne
and
fwait
mov
mov
dec
xor
ds
push
push
xor
in
movs
jmp
jmp
xchg
pop
cmp
pop
gs
cmps
pop
inc
push
cmc
xlat
push
pushf
inc
sbb
out
fimul
fist
dec
leave
lods
sbb
xor
cmps
int
ror
repnz
aam
clc
stos
out
fwait
stos
push
movs
add
pop
mov
inc
push
adc
daa
sahf
or
pop
cmp
ror
jmp
xchg
in
mov
lock
sar
jmp
(bad)
test
ds
mov
dec
add
sub
ror
sub
or
xchg
inc
repz
pop
scas
popa
mov
jmp
adc
pop
mov
lods
fdivr
lods
add
push
aaa
mov
xchg
jnp
add
mov
je
jnp
mov
pop
pushf
xor
push
pop
enter
add
fstp
mov
jl
adc
sahf
(bad)
das
leave
retf
jle
sbb
sub
inc
je
mov
cmps
and
enter
imul
cmps
xor
cwde
push
inc
jl
js
mov
inc
retf
pop
or
loope
sub
or
sbb
ja
inc
mov
mov
rcr
jmp
ss
inc
xchg
xor
fdiv
les
sti
lock
jno
imul
xchg
mov
sbb
rcl
pop
adc
xchg
push
fwait
sbb
stc
popa
popa
(bad)
aad
aaa
dec
and
rol
sahf
add
xor
fcmovnu
ret
jb
int
push
sbb
jne
pushf
sbb
out
test
call
imul
pop
fs
ss
fabs
mov
dec
sub
int3
pop
(bad)
mov
add
xchg
dec
and
iret
movs
lods
rol
(bad)
aas
lods
jo
mov
(bad)
(bad)
retf
fdivr
sti
inc
xchg
std
rcl
and
or
mov
dec
jbe
stc
sar
jo
outs
dec
dec
loope
adc
fwait
mov
and
adc
mov
sbb
jle
aad
sub
pop
mov
(bad)
movs
sbb
jle
out
mov
inc
jmp
push
ror
pop
jp
jbe
mov
stos
xor
test
pop
sbb
rep
pop
xor
jge
movs
movs
fs
sub
sbb
lahf
jbe
fistp
add
sub
xor
push
sbb
jle
fstp
mov
scas
sbb
xor
lock
pushf
jecxz
repz
int
arpl
(bad)
and
hlt
xor
cmp
into
test
or
xchg
xchg
jge
and
jbe
and
adc
sub
add
push
jb
mov
add
add
inc
adc
pop
outs
aas
inc
ret
loopne
out
psraw
dec
in
cmc
popf
dec
pop
mov
add
jge
ins
cmp
xor
mov
repz
add
adc
arpl
mov
stos
xchg
jp
sub
lods
cmp
push
add
fld
pop
outs
mul
in
sub
popa
adc
outs
ins
add
mov
fsub
xchg
pop
and
mov
popa
clc
mov
scas
retf
xchg
push
add
mov
test
push
daa
lds
push
sbb
leave
sti
fcomi
push
pop
cmp
xchg
(bad)
sahf
enter
xlat
cmp
cmp
sbb
dec
cmp
aaa
cmp
sub
leave
jmp
jmp
wbinvd
sbb
les
mov
sub
add
inc
retf
(bad)
hlt
or
(bad)
pop
test
or
jnp
jg
push
sbb
movs
mov
lods
add
inc
mov
xchg
lods
xor
push
jge
pop
adc
xchg
lods
mov
jno
and
push
mov
pop
pop
into
lods
outs
cbw
fimul
lods
dec
and
mov
or
ins
lods
fidivr
cmp
or
mov
mov
inc
push
jae
sub
mov
inc
stos
adc
or
pop
pop
jmp
inc
fld
loope
jb
test
popf
mov
xor
popa
mov
sub
(bad)
push
nop
sbb
xchg
mov
jnp
jne
lock
repz
pop
ficom
add
mov
out
cmp
test
movs
add
mov
pop
repz
fstp
jge
cmp
push
mov
fsubr
inc
sub
inc
cmp
dec
call
xchg
inc
pop
pushf
mov
(bad)
daa
mov
stos
mov
test
xchg
sub
mov
inc
jmp
sbb
push
mov
jae
dec
mov
jmp
sub
fimul
dec
xchg
ret
push
mov
or
jne
outs
cld
dec
scas
jmp
push
xchg
call
pop
movs
call
rcl
out
fist
clc
inc
xchg
in
call
cdq
js
adc
fistp
call
rcl
push
bound
mov
fwait
jmp
ins
vhaddps
lock
jmp
cmp
sub
fiadd
ret
inc
(bad)
in
sub
xchg
sbb
mov
rol
cmp
fsubrp
add
(bad)
cli
xor
cmp
add
test
mov
sbb
shr
imul
push
(bad)
stos
inc
cmp
jo
or
sbb
in
(bad)
mov
mov
fcomp
out
cs
popf
lods
int
dec
mov
mov
pop
loopne
mov
dec
jae
mov
sbb
mov
push
mov
mov
add
hlt
ja
fcmovbe
hlt
stos
dec
int3
aaa
fs
push
push
sub
js
mov
data16
shl
jge
pop
mov
test
in
jb
sbb
or
pusha
ret
stos
invlpg
loope
push
idiv
fldcw
pop
dec
inc
cwde
pop
test
leave
test
adc
test
inc
push
push
push
neg
inc
pushf
std
repz
xlat
data16
xchg
repz
push
cmps
pop
push
pop
mov
outs
test
xor
pushf
mov
fiadd
add
jecxz
shl
inc
bound
dec
mov
out
mov
ins
loopne
xchg
loop
js
push
in
jb
(bad)
mov
and
xor
jne
mov
retf
repnz
int3
mov
es
test
es
icebp
(bad)
fisttp
popf
mov
jle
xchg
icebp
hlt
aas
lock
sahf
adc
mov
stos
fisub
fild
pop
popa
addr16
js
(bad)
jno
stc
mov
mov
mov
inc
dec
and
cmp
mov
out
pop
sub
std
scas
pushf
scas
test
cmc
or
int3
jmp
mov
cli
push
sbb
daa
fnstsw
es
jp
in
aam
cmp
sbb
xchg
fwait
mov
je
test
mov
cmp
mov
adc
xchg
xor
scas
pop
mov
div
nop
add
cmp
scas
cmp
inc
cmp
cdq
(bad)
push
fisub
stos
in
cld
mul
rol
adc
es
lods
xchg
out
mov
ficomp
and
sub
or
xchg
sar
sbb
ins
leave
retf
jb
pop
xchg
xchg
pushf
inc
lods
or
adc
es
xchg
in
retf
cwde
push
inc
sub
ins
iret
dec
sub
repnz
out
cmp
imul
inc
sub
add
shl
cmp
rcr
xor
jbe
sahf
inc
dec
fs
jge
dec
jbe
mov
ret
dec
mov
outs
mov
ret
add
add
mov
xor
in
sbb
lods
adc
imul
mov
xchg
push
(bad)
(bad)
out
jo
pmaddwd
add
xchg
rcr
sub
xchg
xchg
out
stos
mov
cmc
push
inc
outs
(bad)
aam
xor
pop
jno
in
sub
scas
push
adc
sbb
and
shl
mov
dec
pop
add
(bad)
pop
dec
out
arpl
inc
ror
fs
fwait
xor
into
pop
ss
mov
lods
ins
sbb
mov
sbb
jb
or
(bad)
mov
jns
sub
inc
(bad)
dec
loopne
add
in
push
or
pop
ss
jbe
dec
xchg
mov
int3
retf
test
call
inc
xchg
add
movs
pusha
ret
sbb
mov
pop
aad
jbe
push
xchg
sbb
mov
sbb
cmp
int
and
bound
test
sbb
cmps
sub
stos
scas
push
push
mov
push
das
pop
mov
dec
mov
sub
lea
xchg
cmp
sbb
add
jg
sub
daa
xlat
retf
push
ds
add
(bad)
arpl
movs
xchg
sub
inc
xchg
jns
arpl
loope
repnz
test
neg
in
jp
jno
mov
xchg
mov
pop
dec
mov
aad
pop
mov
(bad)
add
dec
or
mov
mov
push
retf
mov
sub
call
and
gs
int
in
(bad)
sub
js
cmp
ds
jmp
enter
cwde
retf
and
cld
push
adc
cmp
dec
add
pop
bound
fs
rcl
pop
sub
in
cmps
dec
hlt
pusha
mov
xor
dec
mov
(bad)
clc
sbb
in
icebp
add
das
or
cmp
std
inc
leave
lods
aas
jl
mov
frstor
dec
in
sbb
fucom
xchg
push
jecxz
xor
xor
call
call
test
mov
les
sbb
sub
dec
mov
xor
imul
or
sub
sub
jbe
mov
or
cmps
inc
push
popa
dec
dec
je
aad
mov
xchg
pusha
cmp
repz
mov
ret
sub
adc
sbb
pop
gs
jp
int
mov
xchg
cmp
sahf
cmps
sbb
jns
ds
out
dec
repnz
xor
add
out
pop
lock
cmp
cmp
cs
lahf
mov
xor
dec
sahf
xor
aas
cmc
inc
jo
call
push
clc
ds
pop
inc
mov
cmovg
xchg
je
lods
xor
sbb
inc
ss
pop
add
in
xlat
jbe
jae
mov
sahf
scas
test
daa
mov
psubsw
scas
in
scas
(bad)
dec
js
mov
cdq
push
ficom
xchg
or
pop
xchg
je
inc
aad
mov
jmp
and
mov
dec
mov
std
cmp
xchg
push
xor
enter
in
xor
les
cmc
xchg
gs
and
and
push
pop
bound
push
push
cmp
fild
mov
les
dec
sub
adc
fstp
xor
pop
cwde
mov
imul
aam
fisub
xchg
adc
ret
mov
int
pop
xchg
dec
inc
bnd
inc
icebp
outs
imul
aas
mov
mov
adc
in
jno
mov
sbb
mov
xor
cwde
inc
add
jo
dec
xchg
in
mov
adc
outs
or
dec
cdq
dec
ins
jbe
dec
pop
pop
and
push
nop
js
in
jb
gs
lahf
xor
sub
(bad)
fst
test
lds
ror
add
sbb
out
xchg
pop
and
es
push
out
jo
sbb
sbb
push
repnz
fild
shl
fcom
cmps
lahf
std
xchg
add
jp
adc
loope
xchg
ret
scas
rol
jle
scas
mov
popf
add
sbb
xchg
xor
daa
add
rol
mov
outs
push
(bad)
aam
sbb
sub
mov
fldenv
rcl
scas
addr16
xchg
add
add
aam
out
or
inc
mov
mov
rcr
scas
mov
into
out
xchg
jle
jb
mov
mov
dec
sahf
mov
or
cmp
outs
inc
mul
and
nop
pop
push
clc
mov
ret
push
sahf
sti
int
or
adc
dec
out
inc
mov
mov
popf
(bad)
(bad)
enter
sbb
sbb
fiadd
(bad)
mov
repnz
retf
cmp
call
push
(bad)
scas
inc
xlat
loop
(bad)
push
cmps
int3
pushf
sub
lods
pusha
adc
(bad)
adc
rol
mov
add
outs
sub
fwait
or
sub
xchg
mov
inc
scas
div
leave
mov
jb
push
popa
mov
movs
std
or
(bad)
popf
cmps
adc
fst
shl
stos
mov
pop
xor
das
sub
xchg
add
sar
mov
jp
cmp
pop
xor
add
xchg
lods
pop
mov
inc
ffreep
aas
mov
push
popf
sbb
fwait
push
test
fsubrp
retf
das
mov
rcl
adc
mov
pavgw
mov
into
mov
into
sub
push
xchg
adc
lock
les
push
mov
xchg
sbb
adc
out
inc
iret
bound
arpl
int
lock
and
outs
popa
sub
ins
aaa
xchg
xor
int3
sub
mov
imul
xor
lods
test
icebp
mov
push
xchg
dec
fs
or
js
std
sahf
or
push
jmp
sbb
xchg
jmp
cmp
ins
fidiv
outs
sub
add
mov
call
pop
push
pop
inc
add
out
cs
ins
scas
cld
cmp
sub
pop
ins
gs
dec
mov
clc
adc
popf
test
mov
inc
pop
mov
nop
pop
(bad)
push
mov
icebp
push
sbb
mov
pop
cmps
ret
call
sub
jmp
inc
fld
mov
fs
sar
ret
xor
sbb
call
pop
cmp
pushf
jb
ds
fsub
add
daa
pusha
dec
mov
fisubr
mov
and
lea
rcl
sub
daa
loop
mov
dec
cmp
mov
push
sub
inc
sti
inc
inc
std
in
jns
inc
into
mov
rdtsc
jmp
stos
inc
push
cwde
mov
pop
(bad)
stc
clc
jmp
jne
fdivr
(bad)
imul
push
sbb
sub
repz
inc
jb
sahf
jb
test
scas
in
xchg
test
(bad)
je
popf
outs
fiadd
push
jecxz
(bad)
out
mov
push
aaa
xor
int
jmp
cld
mov
repz
push
int
xlat
mov
sbb
fs
xchg
mov
and
mov
push
dec
movs
inc
(bad)
lods
ds
int3
dec
sahf
dec
dec
hlt
pop
in
call
dec
cmp
stos
lods
gs
xchg
test
cwde
sub
xlat
dec
inc
aad
retf
loope
ud0
into
xor
movs
jno
ret
push
aad
lahf
imul
push
inc
jbe
inc
rol
jmp
in
adc
and
push
pusha
int3
inc
repz
popf
xchg
xlat
jecxz
jp
push
out
push
jae
mov
push
or
aaa
(bad)
pusha
push
cmp
js
sub
sbb
sbb
retf
outs
or
nop
leave
sub
pop
daa
dec
mov
stos
mov
push
std
sar
or
(bad)
imul
xchg
push
add
ret
ds
pop
pop
(bad)
cli
popf
stos
xchg
sbb
retf
sar
call
lea
cmp
stc
cli
xrstors
push
mov
ffreep
inc
jle
or
(bad)
or
push
test
inc
(bad)
cmp
(bad)
(bad)
push
add
pop
test
cmp
ss
inc
cld
enter
mov
mov
mov
test
xchg
bound
movs
add
pop
int
mul
dec
(bad)
push
addr16
hlt
jo
add
xchg
xor
je
nop
addr16
ins
pop
cmp
xchg
mov
cmp
int
data16
test
cdq
push
cmp
sub
xor
aaa
jecxz
sub
sub
mov
imul
and
jle
cmp
gs
xor
int
sub
jae
mov
pushf
mov
adc
mov
mov
aaa
jp
cld
cmp
dec
retf
ss
movs
sub
popf
stc
adc
inc
iret
dec
cdq
ror
call
es
jnp
and
xchg
push
mov
mov
push
test
ret
add
call
mov
adc
sahf
and
icebp
dec
inc
out
or
call
mov
nop
sbb
repz
jecxz
call
or
mov
fcmovbe
gs
(bad)
mov
push
popa
adc
push
retf
loop
or
xor
outs
cvttps2pi
mov
dec
dec
test
fidiv
jmp
xchg
and
test
int
sbb
rcr
pop
cmp
jne
std
(bad)
jg
adc
daa
lea
mov
adc
push
add
stos
mov
call
test
jnp
dec
test
jle
(bad)
popa
adc
cmp
push
xchg
pop
cmp
xchg
mov
call
or
mov
xor
mov
jno
repz
mov
cs
adc
xor
cmps
test
or
pop
mov
adc
or
fnstsw
sbb
adc
addr16
xchg
pop
cdq
xchg
icebp
cmp
push
mov
sbb
and
mov
adc
ficom
lds
hlt
fucomip
inc
pusha
popf
xor
aaa
fisttp
fcom
cmps
movs
scas
cwde
gs
imul
sub
ret
xchg
in
mov
dec
xchg
movs
popf
pop
mov
mov
pop
xor
mov
aaa
fdiv
push
inc
aaa
and
xchg
addr16
aaa
xchg
sub
scas
add
dec
sub
js
pop
(bad)
mov
cmp
adc
shr
loope
adc
or
or
or
or
add
ret
mov
mov
fist
mov
sub
or
sbb
popf
daa
ret
retf
test
adc
sbb
sbb
cmps
sahf
push
into
cdq
sub
shr
push
jp
cmp
jmp
sbb
push
ficom
inc
mov
cmp
shl
add
test
cmp
sbb
jmp
je
test
and
arpl
or
scas
cmp
add
add
dec
sub
mov
ror
loop
repnz
loope
test
push
stc
push
xchg
pop
cmp
mov
popa
mov
adc
push
inc
pop
aam
cmp
mov
inc
in
stos
sbb
loop
lahf
mov
sub
pop
(bad)
out
test
sbb
lock
cli
xchg
sbb
call
repz
cld
sub
jae
loop
rcl
jb
dec
mov
(bad)
jo
dec
cwde
not
retf
bound
inc
lahf
jp
popf
and
js
or
cmp
int3
dec
sbb
mov
cmp
cmp
jmp
dec
imul
pop
data16
mov
cmp
fbstp
add
fcmovne
and
enter
jp
movs
bound
push
lea
ret
in
adc
pop
std
and
xchg
pushf
addr16
repnz
rcl
sub
cmp
dec
mov
fucomi
xchg
ficomp
pop
jp
cmp
jno
push
stos
add
or
imul
loope
jno
fisub
jb
jmp
(bad)
sbb
iret
loop
cmp
imul
ss
or
je
inc
enter
jne
cmp
mov
mov
xchg
aad
xor
mov
mov
clc
pusha
sbb
addr16
cld
push
lods
sub
push
and
jp
and
and
shl
jecxz
jb
add
mov
popf
xchg
(bad)
les
stos
mov
mov
popa
loopne
jo
mov
mov
xchg
xchg
jnp
(bad)
cmp
cmp
mov
(bad)
out
sbb
cli
cmp
sti
cmp
out
mov
stos
out
xchg
retf
or
(bad)
push
fmul
pop
and
test
xor
sbb
dec
(bad)
xchg
fst
xor
pusha
les
jo
jmp
and
xor
or
in
push
sar
pushf
jb
cmp
sbb
shr
mov
inc
shr
add
push
popa
pushf
daa
ret
mul
mov
lds
mov
sbb
stc
je
cmp
and
cld
pop
pop
jmp
stos
jmp
scas
jg
fwait
bnd
cmps
add
mov
xor
mov
push
push
fisub
lods
adc
pushf
aaa
iret
inc
pop
aas
fnstcw
mov
sub
jno
push
jmp
shr
lea
retf
int
pop
jecxz
aaa
push
sti
sub
jbe
xchg
loopne
cld
test
or
aas
movs
jbe
mov
xor
hlt
jb
addr16
ins
push
pop
sub
cmp
out
imul
imul
lock
mov
movs
jle
jb
adc
cli
xchg
retf
imul
pop
push
cwde
mov
dec
cmps
or
mov
pop
fldcw
in
cmps
outs
jmp
cmp
mov
jns
push
ja
mov
jmp
js
jno
or
pusha
out
stos
rcl
xchg
jl
mov
jle
aaa
cmps
inc
push
pop
or
test
sub
mov
pop
jmp
ja
das
into
daa
xchg
cmp
outs
aam
sbb
or
inc
xor
push
xchg
mov
pavgw
and
iret
sub
jo
mov
(bad)
(bad)
loope
push
fst
ja
or
dec
xlat
xor
(bad)
adc
test
cmp
ja
lds
jle
sub
and
sbb
fwait
dec
jbe
lods
adc
jne
mov
and
push
sub
(bad)
not
mov
inc
ja
repnz
jl
adc
jl
mov
jl
popa
popf
inc
fld
daa
or
lahf
cdq
pushf
mov
cmp
or
das
shl
mov
cmps
jb
jg
inc
push
mov
fidivr
dec
mov
push
ja
popa
and
cmp
mov
mov
stos
mov
xlat
dec
cs
mov
cli
ins
xor
push
adc
dec
xchg
pop
xchg
mov
lds
add
mov
test
mov
mov
mov
mov
mov
sbb
imul
cmp
jae
adc
ss
jmp
rol
and
dec
clc
sbb
scas
js
pop
xor
arpl
push
into
rol
movs
mov
pop
stos
mov
stos
add
sahf
dec
cmp
inc
psrld
fld
daa
push
test
je
xor
test
adc
add
and
xchg
cmc
or
pop
pop
movs
sbb
lock
xchg
jg
or
repz
inc
xchg
xchg
push
xor
sbb
dec
and
pop
mov
repz
stc
push
cmp
mov
sbb
out
or
or
stos
mov
sbb
cdq
enter
push
sbb
jle
ss
loope
push
inc
retf
adc
jns
adc
dec
pop
xor
inc
cwde
xor
ret
js
push
js
and
in
jp
push
jbe
dec
pop
jg
sbb
dec
imul
std
imul
add
jecxz
(bad)
cmc
push
sub
pushf
mov
shl
out
out
fwait
push
popa
and
hlt
loop
mov
rol
mov
lods
add
jnp
mov
jp
xchg
cld
dec
mov
test
pop
mov
sbb
neg
int3
mov
pop
jae
push
idiv
pop
mov
inc
add
fisttp
sub
xchg
stos
xor
push
mov
sti
mov
dec
dec
sub
xchg
lods
push
cmp
mov
in
jo
pop
dec
cdq
push
cmp
mov
cmc
jne
mov
in
push
ss
mov
push
and
aas
imul
sbb
adc
ret
ins
jo
clc
test
dec
mov
arpl
rol
mov
or
stc
xlat
aaa
push
inc
hlt
cld
mov
enter
xor
sbb
loop
cld
(bad)
and
adc
ins
daa
inc
ins
scas
jl
sub
test
lea
jno
(bad)
xor
into
pop
xchg
add
or
pop
adc
push
retf
popa
ds
addr16
mov
xor
mov
js
push
sub
je
mov
pop
out
popf
xchg
ins
mov
test
mov
adc
dec
aad
call
dec
test
repz
cmp
mov
loopne
js
test
cmp
addr16
fimul
sub
mov
xchg
mov
loopne
mov
sub
cli
shl
(bad)
addr16
popa
xlat
jo
popf
sar
scas
adc
and
mov
fild
jle
rcr
imul
adc
jecxz
out
push
pop
dec
xchg
pop
repz
or
mov
stc
xchg
pop
lahf
mov
push
out
fnstsw
out
test
or
jo
sub
adc
push
and
imul
imul
mov
sub
jno
popf
fistp
test
mov
jecxz
and
add
xor
mov
outs
pop
test
jb
ret
sbb
adc
in
push
sbb
add
stos
push
push
inc
jnp
pop
fsubr
addr16
daa
arpl
je
sub
js
lea
pop
in
pop
mov
rol
cmps
xchg
ds
cmp
test
mov
out
mov
lods
nop
retf
rcr
and
mov
adc
stos
sbb
mov
mov
dec
jno
xchg
(bad)
sub
repnz
or
inc
pop
xor
mov
pop
mov
jmp
jecxz
cmp
adc
push
fsubr
adc
aam
mov
repz
psubd
je
xchg
sub
push
mov
and
out
or
fnstcw
dec
aaa
sbb
push
mov
sub
xor
ret
(bad)
cmps
in
ret
pop
movs
xor
dec
fidivr
retf
movs
xchg
scas
lahf
(bad)
cmps
cmp
and
shr
inc
sti
popa
rcl
out
in
sahf
pop
ret
lahf
jmp
and
cld
test
(bad)
push
lahf
sbb
add
sti
loope
mov
retf
fdivp
adc
mov
inc
dec
cmc
mov
int3
fadd
mov
mov
mov
cmp
xchg
jae
mov
outs
jnp
push
jo
ret
cmps
loopne
xchg
ret
fdiv
inc
mov
pop
repnz
mov
cmp
dec
data16
sub
push
iret
push
pop
pop
dec
or
imul
xchg
inc
xor
or
mov
(bad)
jp
aas
icebp
xor
mov
add
jno
adc
arpl
fs
push
push
push
and
inc
and
mov
ret
cmp
jnp
(bad)
mov
push
into
(bad)
xor
jp
jg
addr16
jecxz
into
mov
mov
ins
mov
(bad)
sub
xchg
xchg
retf
xor
es
dec
dec
adc
sbb
(bad)
fistp
fld
nop
test
(bad)
lock
push
jg
je
js
push
inc
pop
cld
call
sbb
mov
call
fadd
mov
cmp
sbb
das
dec
(bad)
leave
lods
dec
pushf
cmp
in
call
mul
jb
imul
call
jmp
retf
adc
cmp
mov
push
dec
inc
xchg
in
pop
mov
sub
jmp
cmps
inc
ds
repnz
rcr
shl
or
pop
add
retf
je
or
ror
mov
fs
fidivr
jp
mov
(bad)
int
rcl
ins
int3
add
jae
push
(bad)
or
inc
xor
cmp
pop
and
or
and
(bad)
sti
pop
xchg
test
retf
mov
cmp
ins
sub
cmp
jmp
pop
leave
enter
mov
mov
(bad)
xchg
push
or
sahf
cld
jmp
and
jmp
cmps
sahf
jp
mov
pop
sub
mov
div
add
cmp
dec
repz
scas
cmps
fistp
mov
dec
add
add
in
frstor
push
mul
xor
mov
xor
inc
xor
push
ds
jl
xchg
dec
scas
dec
movs
dec
push
and
push
in
nop
pop
retf
out
pop
stc
ret
push
sub
push
sub
push
mov
ret
jns
aam
in
adc
fisttp
(bad)
fnstsw
cmp
jbe
fstp
stos
sbb
jae
pop
cmps
push
movs
push
scas
adc
jno
xor
dec
test
not
mov
cmp
adc
fisubr
mov
sbb
push
in
push
sub
xor
out
inc
out
test
add
and
ja
jb
xchg
stc
aad
inc
adc
lahf
push
fnstsw
cmp
dec
add
js
out
retf
aad
aam
dec
push
test
sub
mov
push
xor
loope
lock
pop
mov
push
cli
js
or
repz
popf
inc
push
or
pop
popa
push
sti
call
dec
add
fisttp
push
push
sub
push
jae
addr16
sub
in
aam
and
xor
outs
hlt
dec
push
fild
(bad)
frstor
aas
xchg
push
pop
sbb
inc
inc
jne
ins
dec
xchg
jae
mov
inc
sahf
sbb
xchg
rol
sar
or
sub
add
lock
sub
bound
mov
sub
mov
and
inc
fimul
push
xchg
dec
fsubr
pop
loope
mov
nop
fist
movs
imul
std
push
cmp
push
stos
call
fst
inc
mov
fwait
xchg
xchg
push
cmp
rcr
sbb
fisub
es
mov
sti
cmps
cmp
mov
int
sub
and
and
into
iret
daa
fwait
inc
push
cdq
scas
pop
xor
sar
sub
lods
retf
pop
or
pop
mov
xor
iret
jecxz
ret
lods
sbb
mov
fldcw
jo
repnz
sub
pop
(bad)
mov
jmp
pop
xchg
add
jl
mov
sub
cs
rol
int3
pop
mov
fisub
retf
inc
pop
movs
xor
jge
or
push
fnstenv
clc
out
out
and
lods
popa
xchg
xor
es
inc
fist
icebp
popa
jnp
(bad)
test
mov
out
xchg
pop
test
imul
test
js
inc
shr
lahf
sbb
rcr
jnp
sub
xchg
cmps
mov
xchg
inc
clc
fcomp
push
enter
je
jns
mov
adc
cdq
jae
mov
push
mov
push
cmp
jnp
dec
push
mov
ficomp
mov
cmp
mov
mov
pop
ret
jmp
xor
jge
adc
(bad)
and
in
dec
(bad)
ror
aas
fdivr
pop
dec
fimul
mov
add
pop
mov
mov
(bad)
retf
adc
(bad)
push
xchg
and
icebp
mov
(bad)
fimul
das
mov
call
or
add
int
dec
push
push
sub
xor
sbb
imul
mov
dec
js
add
cli
sar
and
mov
ss
in
inc
cmp
push
repnz
fdivr
push
mov
adc
adc
movs
xchg
sti
mov
xchg
push
jnp
and
dec
out
sbb
test
sbb
lock
vpcmpgtw
loopne
sbb
mov
mov
jb
fsub
and
inc
or
mov
outs
cmp
stos
xlat
stc
add
xchg
jmp
pop
(bad)
sub
lds
in
sbb
cmp
outs
inc
inc
xor
pushf
xchg
dec
cli
xchg
mov
cmp
fld
mov
mov
inc
stos
mov
repz
pop
xlat
sub
retf
sub
mov
dec
mov
add
sub
ret
mov
ret
xor
shr
int
outs
xor
inc
jp
repz
push
inc
cmp
popa
stc
add
test
sti
fstp
jbe
and
cmps
fucom
or
push
test
push
xlat
xchg
(bad)
adc
in
in
jle
aas
inc
lea
jns
or
xchg
cs
inc
add
pushf
and
xlat
aas
push
mov
lods
push
loop
je
or
retf
repnz
xchg
call
pop
aad
pop
ins
mov
daa
sub
or
imul
mov
jne
int
imul
add
idiv
mov
call
ficom
ret
in
add
ja
out
cmp
push
push
aaa
fcmovbe
mov
js
test
outs
jle
or
clc
ins
pop
xlat
jg
hlt
arpl
imul
mov
push
aas
ret
mov
mov
xor
push
push
int
sub
lds
gs
jb
pop
hlt
sar
mov
shr
push
aad
cdq
fidiv
pop
int
jge
mov
cmp
outs
shl
call
cmp
dec
push
mov
sahf
adc
out
sub
fst
inc
ja
and
faddp
cmps
add
pop
cs
sub
push
push
jb
push
cmps
mov
dec
nop
pop
cld
mov
fistp
xchg
daa
cld
jo
in
sahf
mov
dec
call
ret
mov
sbb
push
prefetchwt1
adc
or
dec
ret
fs
mov
das
push
push
pop
fsubr
retf
retf
mov
stos
ss
pop
cli
pop
xchg
iret
fsubrp
int3
mov
cmp
lods
out
stos
or
push
aaa
repz
mov
inc
repnz
mov
mov
test
outs
lods
test
mov
les
popf
or
int
hlt
sub
icebp
test
imul
push
push
inc
jmp
mov
mov
mov
mov
push
in
leave
cmp
sbb
clc
movs
lds
lahf
jbe
xchg
sbb
fdiv
pop
cwde
outs
pop
mov
fwait
add
jg
cli
shl
rcl
push
js
sub
push
xlat
arpl
fdiv
xor
jge
add
cld
jmp
push
push
mov
or
scas
dec
cmp
jnp
std
mov
sbb
xchg
shl
xor
xchg
add
pop
leave
dec
cmp
pop
adc
std
arpl
mov
mov
pusha
or
stc
cs
test
sub
or
mov
dec
gs
xchg
out
mov
jns
popa
repnz
adc
xchg
sub
adc
ds
push
xchg
aas
in
lea
and
fist
or
gs
sub
dec
and
dec
sahf
add
adc
pop
mov
fnstsw
or
jns
xchg
or
jns
xor
test
add
psubsb
jno
and
inc
icebp
push
aad
xor
fs
inc
pop
hlt
call
adc
pushf
pop
in
adc
aas
and
xor
nop
int3
adc
mov
push
mov
ror
pop
jl
push
push
ror
call
jns
push
mov
mov
xchg
cld
ins
push
xor
lds
not
clc
mov
pop
xlat
lar
and
add
ja
sbb
test
popa
sti
test
shl
xchg
fcmovnu
rep
popa
test
jg
jle
mov
cli
mov
in
imul
ror
loopne
in
xor
movs
fcmovne
jge
rol
inc
mov
add
pusha
cmp
mov
in
fdiv
inc
outs
inc
mov
xchg
jmp
ror
scas
jbe
xor
cmps
ss
dec
pusha
jge
cdq
inc
mov
stc
xchg
daa
test
aas
sbb
mov
mov
fstp
lfs
mov
xchg
outs
lods
imul
sar
int
push
jg
cdq
ror
dec
scas
fsub
mov
lods
pop
jno
or
in
or
xor
fmul
inc
mov
mov
repz
inc
inc
adc
out
xor
aaa
or
adc
xchg
enter
scas
outs
arpl
add
scas
nop
cmc
cwde
cmps
inc
stos
mov
gs
jae
or
call
inc
mov
mov
(bad)
xchg
push
push
sahf
call
mov
loopne
or
arpl
lds
jmp
xchg
int
je
xor
sbb
pusha
mov
sub
or
and
ja
call
xor
into
push
out
jo
icebp
adc
pop
push
je
ja
add
jg
arpl
lods
push
arpl
popf
push
mov
ret
aad
clc
leave
push
sar
or
in
lea
pushf
enter
xchg
imul
adc
bound
cmp
inc
dec
pop
fs
cmp
jmp
mov
and
out
cmp
cmp
cmp
adc
pushf
inc
inc
movups
stos
fwait
push
cmp
icebp
pop
aas
and
inc
icebp
jns
push
fld
add
out
inc
pop
adc
adc
outs
sbb
jno
jns
repnz
hlt
sub
and
and
es
pop
xlat
mov
jo
xor
inc
dec
xchg
push
fsubr
retf
ins
xchg
or
or
or
(bad)
sbb
in
pop
or
arpl
cmp
cs
movs
mov
into
adc
jg
dec
xor
mov
fldcw
les
mov
jne
pusha
(bad)
mov
cld
fcomp
(bad)
push
push
stos
sbb
ins
sub
mov
xchg
outs
jno
out
jae
stos
mov
(bad)
sub
(bad)
sbb
shr
rol
pop
imul
dec
jb
and
jne
dec
xchg
or
dec
sti
nop
out
pop
mov
repnz
sub
in
(bad)
push
jmp
sbb
outs
push
sub
dec
mov
push
add
inc
and
push
dec
fistp
cli
cmp
retf
retf
xor
mov
outs
sahf
call
stc
ret
in
aam
sbb
bound
loope
in
lods
inc
pusha
popa
test
arpl
enter
jbe
fsub
sub
cmps
(bad)
sub
mov
or
sbb
ja
xchg
out
fs
adc
inc
loope
(bad)
push
ret
push
adc
cmps
retf
jb
xchg
adc
call
in
sub
test
mov
jns
cmps
mov
push
jb
repz
jle
(bad)
pop
(bad)
std
ret
js
(bad)
outs
icebp
xchg
(bad)
in
mov
fisub
ja
mov
lock
outs
push
ja
fadd
sbb
add
ss
ss
or
jo
scas
push
cmp
push
dec
hlt
adc
dec
cmps
popa
imul
sbb
cld
fwait
jne
aad
add
mov
sub
in
adc
data16
sub
in
sbb
mov
mov
jmp
push
lea
js
xchg
ret
fdivr
adc
xchg
pop
dec
aas
js
data16
mov
pop
frstor
in
xor
lds
pop
ffreep
cmp
cli
xchg
ins
jp
cmp
push
movs
and
loopne
sub
inc
dec
sub
ins
scas
xchg
enter
or
scas
pop
addr16
mul
mov
retf
jno
mov
sti
js
rol
ins
fisttp
adc
jge
or
dec
sbb
dec
dec
outs
ins
jg
jne
add
add
sub
ins
or
lock
mov
aad
inc
pushf
mov
int3
out
sub
in
lahf
xor
aam
sub
rcr
aad
es
mov
cs
xlat
pop
cmp
sbb
js
(bad)
mov
aaa
shl
(bad)
jmp
cmps
repnz
retf
sub
push
cwde
mov
jg
nop
pop
(bad)
jmp
jl
test
adc
jmp
push
cmps
imul
inc
test
test
in
pop
outs
lahf
inc
cmps
adc
dec
cwde
mov
pop
inc
jb
ds
retf
pop
dec
cmp
je
cmps
ret
mov
(bad)
push
add
adc
repz
sbb
cdq
dec
cmp
cmp
inc
mov
mov
adc
pop
and
mov
push
fcmovnbe
cmp
mov
shl
sar
ret
imul
int
sbb
outs
test
pop
pushf
movs
xchg
cmp
bound
es
lods
aam
mov
std
mov
fiadd
lods
cdq
or
idiv
mov
push
push
stos
bound
mov
out
fisubr
fdiv
daa
sbb
xchg
out
es
pop
mov
add
aas
loop
xlat
sbb
jecxz
int3
push
mov
and
jbe
xlat
cmp
xlat
nop
scas
inc
inc
xor
or
push
(bad)
pop
movs
outs
xor
jmp
add
iret
mov
imul
xor
test
jnp
hlt
pop
ror
leave
out
or
push
sbb
xor
out
movs
idiv
(bad)
mov
cmc
es
call
xchg
inc
aas
mov
push
push
test
mov
push
mov
mov
mov
xchg
xor
xchg
jno
ja
(bad)
ins
sub
mov
sbb
pop
fistp
inc
outs
mov
sub
push
cmp
jge
fwait
aad
pop
add
sub
clc
jns
cmc
dec
mov
arpl
pop
imul
xor
xor
add
xor
hlt
or
xchg
mov
xor
mov
mov
mov
sar
pop
pop
or
push
data16
aam
xchg
(bad)
and
in
sub
pushf
rep
imul
mov
test
and
push
or
retf
aas
addr16
dec
fsub
fcom
mov
add
cdq
lods
xor
(bad)
outs
or
xchg
jge
cmp
leave
lea
adc
cwde
jo
mov
loopne
cld
js
pop
and
es
test
cwde
dec
call
sti
jo
call
xchg
push
xchg
and
movs
jo
mov
shr
xor
fs
je
hlt
xor
jo
ja
inc
mov
(bad)
clc
(bad)
dec
cmc
sbb
(bad)
or
out
mov
mov
push
loopne
cmp
fwait
out
cdq
pusha
sub
pop
xchg
(bad)
fxch
push
clc
or
pop
cdq
call
sbb
repnz
mov
ins
cmp
imul
in
xchg
pop
cmp
adc
nop
and
cli
dec
repnz
(bad)
pop
sbb
mov
sbb
inc
xor
sub
enter
aam
push
and
or
stos
dec
jge
(bad)
aam
xor
mov
call
mov
adc
or
xchg
inc
sub
or
ins
inc
cld
je
mov
sub
js
push
dec
stos
data16
jae
push
je
xor
dec
test
ss
cmp
nop
rcr
add
cwde
cmps
add
and
popa
or
lahf
sbb
loop
mov
and
(bad)
sbb
les
adc
mov
xchg
pushf
push
pop
mov
add
cmp
shl
mov
adc
xor
pop
fistp
jb
xchg
arpl
cmp
inc
(bad)
sub
xor
ret
sub
xchg
retf
pop
fdiv
pushw
pop
mov
scas
lods
xchg
mov
push
cld
or
xor
jg
add
icebp
mov
sub
mov
rcl
mov
pop
push
sbb
rcl
jbe
pop
pop
jne
addr16
push
aad
and
inc
xchg
mov
scas
daa
xchg
cmp
inc
xor
scas
mov
vpextrw
lds
sub
out
pop
jecxz
popa
jge
nop
jnp
idiv
mov
and
xlat
ins
push
pop
int3
shl
xor
loopne
pushf
inc
dec
add
cdq
fiadd
out
enter
jne
jmp
add
jno
(bad)
mov
lds
sbb
sub
movs
cmp
cld
repnz
nop
mov
mov
in
dec
popf
push
push
jnp
push
sti
in
pop
ret
inc
or
mov
jmp
ror
or
adc
inc
sti
test
les
xchg
adc
mov
pop
mov
cmp
mov
popa
inc
inc
or
inc
sti
fmulp
popa
dec
xchg
idiv
jg
retf
pop
(bad)
sub
ins
outs
hlt
mov
jecxz
xchg
rcr
cli
shr
pop
retf
cmps
sbb
xchg
enter
gs
adc
ret
push
aad
mov
inc
pop
xchg
mov
pushf
aas
(bad)
adc
mov
push
or
bnd
dec
ret
cwde
std
aad
(bad)
fld
and
or
out
dec
pop
jmp
pop
lock
mov
add
fnstcw
divps
ins
dec
lods
test
(bad)
mov
nop
shl
ja
xchg
cmp
adc
cmp
movs
leave
loope
adc
rcl
mov
lahf
mov
stc
xchg
mov
fs
lahf
mov
xchg
and
jp
sub
cmp
(bad)
je
mov
fs
daa
outs
rol
ins
data16
adc
out
jl
js
inc
pop
sbb
clc
mov
ret
imul
pusha
out
or
cmps
jno
stos
pop
cmp
(bad)
xor
cmp
cmps
push
sahf
(bad)
sub
pop
xor
scas
kmovw
das
sub
inc
ss
mov
mov
out
lods
ja
cmp
dec
and
test
sti
jo
inc
jp
inc
data16
or
fbld
jnp
sbb
retf
adc
pop
nop
xchg
dec
shr
mov
push
cld
fmul
and
daa
inc
mov
mov
dec
push
xchg
xlat
mov
sahf
das
add
push
add
or
(bad)
in
sub
xor
daa
test
or
and
(bad)
fwait
les
test
imul
retf
pop
aad
add
and
push
arpl
xchg
jp
pop
dec
mov
into
jl
js
(bad)
dec
inc
in
das
jle
mov
dec
mov
out
test
pushf
pop
sub
jp
test
xchg
aas
xchg
rol
imul
or
inc
sbb
sub
mov
jne
mov
jle
mov
sbb
adc
or
test
stos
jg
(bad)
mov
or
push
jecxz
cmp
dec
jmp
cld
adc
dec
jge
enter
dec
cmp
mov
retf
or
push
dec
ret
push
and
dec
cld
jecxz
outs
fsubr
test
fs
cmp
shl
jo
adc
and
xor
xor
outs
pop
xor
inc
adc
into
jmp
dec
leave
push
lahf
leave
jge
ds
pop
retf
ds
lds
ret
mov
mov
call
or
shl
in
adc
(bad)
mov
enter
sub
pop
stos
jno
es
xor
adc
test
loope
jl
shl
xor
std
xchg
lock
push
sbb
jmp
sbb
fisubr
rcl
push
sub
shr
lods
mov
dec
addr16
jmp
mov
xchg
push
add
clc
leave
sbb
mov
add
cmps
dec
inc
sub
fmul
shl
mov
bound
and
jns
dec
arpl
push
lea
mov
xchg
inc
jnp
(bad)
repnz
int
out
ins
loop
lock
inc
fmul
adc
cmc
out
outs
pop
push
and
ins
nop
mov
mov
mov
jbe
cld
nop
mov
xor
jmp
lds
xchg
pop
add
shl
jb
jecxz
mov
xchg
mov
jl
test
mov
iret
jo
daa
nop
sahf
push
dec
lds
xchg
pop
adc
out
cmps
mov
inc
sub
not
into
sub
(bad)
pushf
in
inc
scas
xor
jle
adc
neg
mov
dec
or
and
loope
and
jb
sub
pop
into
adc
cs
cmp
imul
fisubr
inc
push
fild
call
cmp
lds
sbb
test
in
imul
and
daa
or
dec
(bad)
aaa
dec
mov
jb
int
mov
cwde
dec
mov
stc
test
pop
je
push
out
adc
jl
aad
lea
and
push
sti
add
cmp
rol
jo
sbb
inc
xchg
xor
inc
test
retf
mov
cld
jno
repz
jno
inc
cmp
lods
pop
int3
stc
jmp
stos
pop
push
add
xchg
bound
sub
cld
adc
xchg
adc
int3
push
add
cmp
or
pop
ror
and
pop
xchg
fadd
push
push
xor
xchg
xchg
call
in
mov
enter
or
(bad)
out
(bad)
push
pop
les
mov
cdq
or
sbb
push
in
xchg
mov
outs
mov
push
sub
mov
sub
push
push
cmp
jp
xor
cmp
iret
or
mov
rcl
js
aad
and
outs
mov
retf
inc
fist
sub
pop
cmps
dec
jle
clc
sub
dec
pop
jno
(bad)
adc
mov
shl
mov
loop
inc
leave
inc
or
xchg
pop
sub
push
ins
dec
lods
movs
mov
das
sub
lea
mov
mov
sbb
push
rcr
add
ficom
popa
sub
cmp
fimul
push
and
adc
in
and
dec
mov
bound
jns
ror
loope
add
jl
lds
sub
pop
cmps
cmc
push
(bad)
out
jno
leave
mov
pop
cmp
(bad)
jecxz
dec
dec
xor
push
push
sub
push
popa
push
and
xchg
fcomip
cld
dec
stc
cmc
and
fidivr
fnstcw
jb
cld
and
lahf
push
movs
jo
jecxz
lods
imul
add
push
push
repnz
mov
sbb
or
xor
pop
sbb
or
js
pop
out
xlat
daa
outs
mov
loope
or
dec
addr16
call
adc
fcmovb
dec
ja
add
sub
dec
mov
cli
fild
xchg
cwde
pop
cmp
iret
ret
stos
daa
(bad)
std
sbb
jns
push
pop
add
hlt
cmp
retf
mov
out
adc
mov
dec
repnz
jns
test
or
mov
fbstp
(bad)
clc
push
imul
add
rol
inc
adc
aam
dec
mov
test
into
pop
call
dec
add
and
ins
push
sub
sar
or
aad
and
shr
jg
mov
cwde
xchg
push
ret
xor
ret
xchg
jle
fcom
mov
adc
out
mov
push
push
and
dec
popf
and
movs
movs
(bad)
scas
aaa
pop
in
and
es
cdq
sub
xor
fimul
xor
mov
(bad)
pop
mov
adc
out
nop
mov
ficom
mov
add
xchg
mov
and
mov
jmp
push
jle
sub
pop
cmp
test
sub
cli
add
es
mov
ret
mov
cdq
enter
xchg
dec
fs
sahf
pop
stos
je
pop
jae
jae
xchg
call
jg
arpl
int
(bad)
cmp
arpl
dec
push
lahf
fcom
mov
sub
aaa
jns
out
push
ficom
daa
push
cmp
or
xchg
cmp
aam
push
jnp
sbb
mov
lods
addr16
(bad)
pop
in
mov
or
push
xor
cmc
call
cmp
bound
lods
dec
mov
js
pop
icebp
push
stos
out
test
rcr
iret
mov
dec
out
gs
add
imul
fdivr
inc
jp
mov
imul
jne
inc
xchg
clc
sbb
push
or
push
fsub
cdq
xchg
cmp
sub
push
xchg
pop
adc
mov
stos
lods
mov
jno
hlt
or
retf
add
adc
leave
data16
sbb
xor
in
(bad)
push
and
jne
push
test
ss
dec
ss
and
dec
jo
dec
retf
pop
fbld
leave
mov
das
int3
push
mov
push
dec
mov
mov
jl
outs
and
bound
loop
imul
adc
sbb
mov
mov
(bad)
movs
sub
xor
sub
mov
mov
das
aas
mov
scas
out
lahf
mov
shr
lods
xor
jl
mov
fwait
mov
je
je
mov
add
xlat
int3
leave
sti
sub
ret
mov
ins
repnz
add
aaa
dec
shl
sar
or
push
or
inc
xchg
movs
stos
outs
mov
xchg
adc
or
outs
xchg
shr
xchg
cmp
jae
inc
mov
test
mov
and
in
fiadd
inc
jae
cwde
(bad)
fistp
mov
sub
jbe
inc
es
call
int3
mov
inc
mov
test
xchg
je
dec
inc
ss
aad
xchg
mov
sub
xor
les
push
clc
dec
jmp
push
nop
in
enter
jmp
mov
(bad)
xchg
sub
mov
test
jmp
shr
cld
push
mov
xchg
lods
fldenv
mov
in
(bad)
pop
fmul
add
xchg
lods
push
and
sbb
push
or
mov
(bad)
push
xchg
cwde
jle
xchg
push
das
fild
iret
into
mov
xchg
mov
pop
jo
mov
mov
pop
aad
sbb
mov
mov
test
push
cmps
push
xchg
(bad)
mov
pusha
xrelease
cmps
fstp
jns
mov
mov
jb
adc
xchg
ss
mov
push
sbb
sub
std
jp
das
sti
(bad)
scas
gs
or
dec
popa
mov
pop
ja
mov
jne
test
mov
jne
fsub
inc
(bad)
mov
mov
jecxz
lahf
push
mov
int
aad
call
cmp
test
in
and
dec
inc
mov
xor
or
(bad)
xchg
test
add
pop
mov
gs
and
adc
dec
pop
mov
imul
cld
dec
push
push
and
sub
and
ret
(bad)
cmp
or
mov
xor
fwait
adc
mov
xchg
cmp
shr
sbb
xchg
push
dec
ret
pop
add
mov
inc
sbb
fmul
ss
hlt
inc
add
jecxz
mov
enter
out
jmp
or
scas
pusha
push
sbb
add
xchg
dec
sbb
jp
xor
xlat
mov
fs
cs
jmp
mov
mov
mov
jmp
adc
mov
push
fcmovu
dec
jns
push
push
hlt
fs
retf
mov
sub
dec
or
je
sbb
fist
stc
pop
fiadd
es
popf
fs
mov
imul
stc
mov
dec
or
popf
jo
test
data16
ror
icebp
test
fsubr
jmp
movs
hlt
inc
xor
dec
xchg
mov
out
jge
jns
sbb
and
mov
aas
call
int3
dec
and
sbb
fiadd
xor
in
mov
jmpw
push
sub
sbb
scas
(bad)
imul
lahf
cmp
xchg
cld
add
hlt
ffree
dec
aam
leave
push
(bad)
mov
test
push
(bad)
ja
shl
mov
add
fcomi
xchg
les
pop
test
stc
imul
hlt
call
pop
in
push
mov
dec
push
mov
scas
nop
arpl
leave
and
add
aas
rep
push
jg
cmp
xchg
sub
loop
test
mov
test
ficomp
sbb
mov
in
sbb
mov
jge
rol
xchg
jp
aaa
(bad)
dec
lea
or
push
ret
sti
xchg
jno
cdq
ror
cmp
xor
(bad)
mov
sti
setg
mov
bound
inc
push
cmps
test
cmc
sbb
inc
int
stos
xchg
push
std
sbb
(bad)
jmp
sbb
test
test
and
ja
xchg
xchg
jecxz
outs
fs
pop
and
pop
outs
fstp
mov
arpl
ret
and
gs
jae
in
test
mov
(bad)
jmp
fisttp
mov
mov
das
cmp
ss
shl
pusha
fsubrp
enter
cli
cmps
lods
and
out
pop
inc
add
loope
jp
je
dec
jp
nop
mov
shl
hlt
jmp
cmps
and
inc
sub
fbstp
fwait
sbb
movs
sti
(bad)
mov
test
xor
sub
or
test
rcl
push
sbb
add
and
sti
or
mov
jb
jle
and
(bad)
aas
add
cdq
lods
fistp
sub
cli
xor
pop
jge
pop
test
outs
out
in
lds
adc
add
lock
sub
stos
ja
dec
pop
lods
mov
jecxz
jo
jne
out
sub
hlt
(bad)
xor
inc
fld
pop
jmp
sbb
scas
mov
xor
das
jnp
mov
push
sbb
cs
pop
mov
mov
push
xchg
jbe
xchg
rcl
xchg
inc
sbb
jbe
pop
outs
ret
or
sub
mov
cli
mov
movs
inc
push
shl
mov
popa
push
mov
xchg
mov
inc
sbb
movs
aad
add
test
repnz
test
and
jle
sbb
pop
cmps
(bad)
clc
or
xchg
clc
push
inc
jbe
scas
xor
adc
cmps
lods
ins
push
sub
mov
push
add
inc
lods
dec
xor
xchg
xchg
cmp
mov
int
dec
lock
or
outs
pop
ja
xor
clc
xchg
outs
push
les
pop
ds
dec
dec
retf
dec
jmp
mov
xchg
repz
fmul
clc
sahf
mov
mov
dec
cmc
mov
cmps
mov
adc
cmps
ja
ins
sub
ftst
pop
scas
and
call
pusha
repnz
std
ret
mov
test
pop
cmp
call
jmp
sbb
mov
aas
mov
test
ja
in
and
push
add
xchg
pop
sti
sar
pop
test
int
sub
or
mov
jae
cli
push
mov
xor
add
cmp
leave
(bad)
call
push
adc
jo
xor
lock
sub
push
pop
ins
sti
ret
je
int3
fucomip
dec
push
xchg
ret
call
inc
fs
mov
mov
sbb
add
sbb
sbb
enter
fs
adc
imul
enter
jl
shl
add
(bad)
sar
add
out
pop
jne
dec
cmc
fwait
xor
mov
xchg
lahf
js
call
xor
shl
inc
push
mov
sbb
je
sub
dec
shl
push
bound
(bad)
jbe
in
dec
movs
xor
and
nop
pop
(bad)
out
jbe
lock
enter
inc
mov
mov
rcr
pop
loop
cmp
jl
xor
and
call
repz
push
xchg
mov
(bad)
mov
lea
nop
test
addr16
push
test
cmp
dec
ss
ficomp
sbb
stos
dec
inc
adc
ret
pop
clc
xor
xor
outs
cwde
xor
mov
mov
sub
xor
xchg
sub
lock
in
fimul
mov
bound
xor
xchg
sub
xor
pusha
dec
and
push
clc
call
(bad)
cmp
mov
cdq
sub
jne
pusha
mov
cld
popa
mov
adc
repnz
jae
xchg
inc
fcom
sbb
cwde
xchg
inc
lahf
jno
pop
inc
jbe
mov
dec
and
sbb
adc
pusha
call
stc
cmc
push
sahf
and
hlt
test
add
sbb
xor
test
pop
es
pop
xchg
xor
jbe
and
add
ds
mov
loopne
(bad)
cmc
mov
xor
jb
add
adc
inc
ins
pop
cld
pavgb
pop
and
js
sub
out
mov
push
cmps
lahf
in
scas
sub
sti
sub
xchg
push
jnp
ret
or
daa
push
(bad)
std
mov
mov
mov
retf
popf
out
fstp
loop
push
repz
fistp
mov
jg
pop
add
lea
jbe
hlt
cmp
xor
or
adc
push
int
sahf
cwde
fld
ret
or
or
mov
adc
hlt
ror
cwde
xor
xchg
and
bts
xor
enter
sar
iret
mov
inc
or
pop
xchg
xchg
lods
cmp
retf
sahf
pop
sbb
ret
lods
mov
mov
pop
mov
int3
std
inc
mov
(bad)
xchg
adc
lds
es
add
mov
sbb
jno
outs
sub
xchg
mov
sahf
in
popa
pop
movs
cwde
and
inc
(bad)
loop
push
ds
ret
mov
retf
xor
or
lods
ficomp
or
hlt
scas
inc
and
test
xor
push
test
lea
jne
dec
pushf
mov
sti
jne
adc
dec
adc
cmc
xlat
retf
jbe
cli
rol
cli
js
shl
cmp
ds
imul
idiv
mov
mov
and
jno
mov
dec
bound
mov
xlat
std
sbb
dec
cmp
sub
je
pop
out
jg
fs
and
xor
popf
cmp
mov
sub
dec
dec
jp
and
repz
adc
repnz
int3
(bad)
inc
dec
and
pop
mov
out
ret
ss
mov
in
xchg
push
xchg
jmp
movs
sbb
idiv
xchg
jle
adc
mov
mov
dec
push
xchg
adc
sbb
adc
cmp
cmp
nop
cmp
dec
pop
lds
hlt
cmp
scas
mov
scas
jns
ret
(bad)
into
mov
lods
fcos
xchg
jae
fst
dec
push
es
cli
xor
pop
das
pop
jecxz
cli
adc
ds
scas
mov
outs
pop
add
and
push
xchg
jnp
(bad)
adc
sbb
inc
jae
out
sbb
enter
add
pop
arpl
test
daa
xor
loop
jecxz
mov
mov
dec
(bad)
fs
lods
or
(bad)
add
xor
test
(bad)
mov
mov
sahf
pushw
fsub
jge
sbb
sub
mov
repz
mov
(bad)
jecxz
pop
test
pushf
aaa
scas
shl
xchg
fdivp
pop
sub
dec
(bad)
push
push
or
pop
imul
loopne
dec
lea
int3
push
std
ret
xchg
in
and
and
in
(bad)
ja
xchg
(bad)
sahf
cmp
repz
add
dec
and
pop
out
nop
sub
sub
lock
or
das
loop
jge
enter
pop
dec
test
pushf
test
xchg
adc
or
dec
jnp
and
xlat
mov
pop
or
or
pop
stos
ficom
in
xchg
hlt
mov
movs
mov
adc
inc
in
sbb
(bad)
fwait
pop
in
pop
cmps
imul
mov
push
test
loope
loop
(bad)
jge
cmps
mov
adc
popa
dec
loope
pop
mov
in
cdq
xchg
sbb
test
adc
fdiv
hlt
adc
and
repnz
and
mov
xchg
jnp
movs
or
shl
add
jnp
pop
aad
pop
push
push
fcompp
or
jl
fistp
jae
add
test
pushf
out
pop
ror
fucomip
mov
out
ficomp
mov
into
fcomp
div
int3
pop
or
ficom
sahf
and
nop
inc
stos
cli
add
popf
mov
fst
out
imul
pop
rcl
pop
xchg
icebp
lock
sbb
lods
xor
mov
retf
jo
test
test
ins
imul
pop
data16
call
sbb
test
push
sub
gs
add
aas
ss
js
mov
gs
jb
xchg
pop
cmps
mov
movs
retf
ins
pop
add
mov
sub
inc
sub
sub
call
arpl
jg
(bad)
fadd
pushf
fisub
in
icebp
sub
mov
fdiv
ret
inc
lods
ja
ss
leave
push
push
pop
jno
(bad)
jmp
adc
xor
pop
pop
jns
stc
std
(bad)
fldenv
retf
loop
stos
push
fwait
sahf
inc
retf
mov
xor
lods
lods
das
ins
int
add
in
mov
jmp
or
and
ins
pop
sbb
jmp
sbb
ror
fwait
push
sub
inc
sti
je
(bad)
cmp
jl
jmp
mov
imul
add
fcom
outs
(bad)
cld
out
push
inc
jns
push
push
jp
mov
and
bound
sub
shl
pop
add
aad
cmps
fild
ret
jns
ficom
adc
stos
pop
cmp
test
mov
ja
add
stos
movs
inc
and
popf
or
dec
dec
lods
fs
mov
arpl
rcl
jb
outs
ins
les
jecxz
cmps
or
mov
gs
fsub
outs
sbb
ret
leave
psrlw
in
retf
(bad)
stc
fist
mov
push
mov
and
sbb
mov
adc
push
xchg
cs
xchg
cmp
in
and
mov
push
push
sbb
fimul
lods
mov
(bad)
and
sbb
cmp
dec
out
and
aad
mov
dec
mov
dec
out
xor
stos
ja
jno
and
add
out
jnp
mov
mov
fistp
movs
test
mov
dec
enter
mov
jle
or
dec
jmp
sbb
jne
inc
xor
std
aas
ror
popf
mov
or
cmps
idiv
in
retf
(bad)
jmp
xchg
add
dec
in
(bad)
enter
sub
dec
jo
fcomp
mov
scas
adc
(bad)
pop
inc
mov
mov
data16
out
ltr
add
mov
call
jbe
add
in
test
nop
mul
in
test
call
push
aad
int3
xor
into
dec
adc
inc
lea
xchg
xor
scas
sbb
or
leave
es
push
scas
dec
xor
fyl2x
sub
into
imul
pop
pop
jl
in
mov
ds
pop
inc
scas
repz
loope
aad
and
jnp
test
adc
sar
sub
push
mov
dec
cmp
xor
test
sbb
mov
(bad)
xchg
and
mov
popa
nop
mov
inc
add
out
in
nop
je
out
jle
xor
fdivr
jo
push
lock
lahf
sar
icebp
sbb
jnp
mov
enter
xchg
fs
inc
rol
and
scas
in
leave
popa
call
hlt
cwde
leave
into
xor
dec
iret
loope
in
les
mov
(bad)
fsub
mov
leave
dec
data16
int3
popa
jp
lods
pushf
mov
lea
in
mov
inc
jae
cwde
hlt
mov
loope
jo
jge
inc
xchg
xor
push
or
in
stos
cmp
xchg
dec
and
dec
sahf
push
hlt
shr
and
sub
(bad)
adc
lods
adc
inc
jl
pop
cdq
test
dec
xor
push
and
adc
mov
jbe
xor
(bad)
adc
rcr
and
pop
pop
shl
rol
stc
inc
or
sti
jmp
ss
mov
pop
sti
dec
sub
cmps
cmp
push
in
aad
loopne
mov
cmp
sub
leave
repnz
jmp
movs
add
test
hlt
jno
adc
lea
cmp
sbb
lds
and
into
idiv
mov
inc
int
ss
pusha
xor
pop
out
clc
outs
test
enter
in
mov
lods
xchg
fld
ins
retf
mov
push
xchg
or
push
jo
ja
and
outs
bound
xchg
call
in
cmps
or
and
(bad)
ffree
mov
fwait
mov
mov
call
rcl
test
xchg
fcom
aam
not
mov
add
xor
or
shl
mov
aad
aad
mov
fld
out
test
jnp
in
jnp
stos
and
jle
enter
aaa
repnz
int3
fcmovnb
xchg
sbb
ds
inc
adc
push
cmp
fst
inc
mov
loopne
clc
mov
int3
mov
pop
arpl
stc
bound
jnp
sti
mov
mov
jmp
call
std
jo
mov
push
stc
push
jne
ins
cmp
or
add
fs
lds
test
outs
ret
or
icebp
lods
or
ss
pop
movs
add
mov
adc
or
das
sar
push
aas
ret
retf
mov
or
rcr
adc
lds
jmp
xor
and
and
xor
nop
xchg
or
pop
add
cmp
frndint
cmps
aam
and
(bad)
outs
fwait
repnz
bound
push
push
push
je
mov
mov
mov
dec
and
push
fild
xchg
fmul
xor
jne
push
push
popa
cmp
inc
mov
int3
movs
(bad)
in
or
mov
push
scas
mov
sbb
cmps
popa
sahf
lock
cmp
in
xchg
gs
sti
and
inc
and
loopne
cmp
mov
mov
stos
(bad)
(bad)
pop
lahf
movs
outs
mov
or
inc
pusha
xor
mov
xchg
shr
mov
and
push
cmp
or
xchg
cmps
loopne
ja
mov
pop
push
sub
pop
add
dec
lea
int
or
jg
pop
pop
push
cmps
or
mov
add
sbb
dec
cmc
mov
iret
ficomp
sub
sbb
inc
das
loop
jle
cmc
pop
mov
push
imul
dec
jbe
int
imul
sub
push
outs
sahf
not
lea
dec
shr
cwde
adc
sar
lods
enter
cmp
mov
lock
mov
add
sbb
jo
ret
dec
inc
lea
cmp
retf
dec
mov
cmp
fimul
jne
shld
adc
imul
fsub
mov
jecxz
dec
cld
cmp
cmp
jbe
sbb
mov
loop
inc
ror
sbb
dec
fsubr
sbb
and
xsaves
aad
cmc
jmp
rcl
(bad)
fdivr
loopne
mov
xchg
push
mov
repz
inc
xor
and
and
inc
js
frstor
cld
jae
cmc
inc
lods
lea
retf
in
mov
pop
mov
sub
dec
add
into
into
jae
pusha
sub
or
ror
xor
cmp
fwait
stos
ins
and
(bad)
mov
xlat
or
rol
cmp
xchg
xchg
and
cmp
outs
xor
std
xchg
into
push
sub
push
add
cs
mov
clts
adc
call
pop
outs
adc
ret
retf
jecxz
(bad)
in
iret
ss
fist
stos
push
test
xchg
call
popa
inc
addr16
popa
(bad)
stc
popf
test
shl
leave
ja
adc
frstor
mov
(bad)
cmp
dec
add
mov
hlt
lods
and
ret
cmp
push
ret
fld
ret
cdq
dec
clc
iret
inc
sub
cmps
push
mov
xlat
bound
(bad)
in
stc
cmps
or
xchg
stos
pop
add
fwait
aas
(bad)
push
push
mov
push
iret
(bad)
retf
adc
cdq
or
inc
mov
xchg
xchg
call
cmps
lods
jmp
in
mov
(bad)
rol
popa
sbb
inc
loopne
int3
and
jp
shl
arpl
xchg
jne
sub
sub
inc
cld
(bad)
sub
adc
lahf
add
sbb
shl
mov
paddusb
daa
lods
fsubr
dec
or
dec
shr
add
mov
jns
pop
and
gs
adc
push
dec
xor
daa
shl
pop
test
cs
push
neg
loop
sbb
xor
mov
pop
fsubr
lea
jno
cli
add
mov
imul
cmp
outs
pushf
jg
dec
pop
jns
clc
pop
and
pop
cli
(bad)
(bad)
out
cmp
mov
outs
imul
adc
push
push
jb
fs
leave
idiv
mov
rol
mov
jmp
nop
aas
pop
mov
push
arpl
xchg
fcmovnu
in
jecxz
add
sbb
and
test
dec
push
mov
mov
scas
cmc
iret
(bad)
cmc
inc
jge
jg
out
pop
dec
scas
sub
movs
cmps
dec
ins
xchg
inc
adc
neg
jne
test
outs
imul
test
repz
mov
push
stc
push
shl
jp
mov
imul
pop
sub
sub
jbe
xchg
xor
mov
sub
jl
bound
mov
icebp
xchg
push
xchg
scas
pop
or
mov
jne
inc
jg
(bad)
addr16
ss
or
mov
inc
pop
jae
xlat
adc
popf
push
jne
and
out
(bad)
and
inc
push
sub
inc
sahf
jle
mov
iret
lods
xor
sub
cmp
lock
call
adc
push
retf
jmp
fs
mov
push
xchg
(bad)
jbe
shr
loope
ins
out
push
inc
scas
or
ret
ror
dec
loope
fld
test
enter
sub
out
jmp
cmps
stc
fidiv
push
inc
mov
ror
mov
sub
daa
cmc
jns
int3
cwde
sbb
test
jp
xor
cmp
lods
int
psrad
jg
fwait
or
pavgb
xchg
scas
pop
ffreep
fisubr
xchg
pop
jns
retf
mov
jl
lea
aam
jmp
jg
inc
and
dec
sub
add
int
cmp
stos
inc
sub
mov
xchg
mov
mov
xchg
inc
jae
(bad)
fistp
pop
cli
(bad)
jbe
es
adc
mov
ins
ins
(bad)
jbe
lock
call
stos
inc
xor
test
repz
jns
xor
(bad)
outs
fdivr
fsub
shl
xor
mov
mov
inc
lds
sub
daa
jnp
push
jge
jb
mov
jae
loopne
sub
sbb
add
jecxz
push
pop
ins
ja
inc
add
sub
sbb
movs
mov
repz
loopne
pop
pop
jbe
push
out
jae
out
gs
adc
xlat
les
sub
and
inc
les
xor
xor
and
out
mov
int
pop
xchg
xchg
test
in
(bad)
arpl
int3
imul
int
fs
(bad)
mov
cmc
aaa
out
dec
and
cmp
movs
mov
jae
pop
movs
mov
ret
mov
cdq
call
mov
xchg
cs
jns
sub
fld
adc
jmp
cmps
rol
cmps
call
mov
lds
cmp
or
repz
out
add
push
ja
mov
retf
in
(bad)
cmp
mov
add
sub
(bad)
lods
sbb
call
push
out
dec
aad
dec
mov
(bad)
xor
mov
(bad)
(bad)
movs
mov
sub
pop
mov
jno
test
fistp
les
lods
lods
and
xchg
jp
mov
adc
lahf
and
xchg
jb
call
inc
(bad)
and
iret
inc
popf
adc
test
clc
dec
jp
inc
xchg
dec
data16
std
loope
fcom
das
inc
adc
out
jae
pop
int3
mov
sub
lea
retf
movs
test
in
dec
std
out
aas
fmul
xchg
les
mov
sbb
leave
jnp
pop
out
xchg
sbb
loopne
or
cs
fsub
ret
imul
adc
pop
jbe
imul
jo
pushf
(bad)
pop
inc
mov
fisttp
mov
loopne
pop
dec
dec
pusha
(bad)
xchg
push
cmps
push
inc
pusha
aaa
mov
out
sub
hlt
pop
sbb
out
mov
jle
xlat
mov
jo
js
cmp
retf
data16
and
adc
gs
and
(bad)
repz
out
dec
jmp
cld
mov
or
mov
dec
enter
jmp
loope
xchg
dec
add
imul
xor
xchg
popa
mov
pop
sbb
imul
jmp
stc
and
pop
popf
jae
cmp
xchg
push
nop
pop
pop
test
shl
call
dec
in
lahf
ins
rcl
call
fcmove
xor
call
jl
or
imul
aad
ins
mul
cmc
cmc
sbb
mov
sahf
loope
mov
and
fcomip
jp
xchg
int3
mov
sti
mov
pop
adc
cmps
das
ret
hlt
icebp
fiadd
dec
mov
xor
pop
rcl
(bad)
lahf
sub
push
shl
xchg
xor
xchg
fcomip
xchg
push
pusha
int
je
xchg
dec
and
xor
and
pop
cdq
add
fcmovnbe
jge
shl
xchg
push
push
rol
xchg
sub
dec
and
out
enter
and
fsubr
mov
test
fisubr
jg
xchg
outs
retf
test
and
xchg
and
jmp
adc
scas
cdq
inc
cmp
sub
les
shl
std
cmp
mov
jp
ins
jge
hlt
scas
xor
mov
push
mov
stos
inc
add
cmp
dec
ds
pop
add
scas
fnstenv
jns
(bad)
adc
mov
popf
cmp
loopne
ret
push
repnz
and
icebp
xchg
jno
dec
pusha
repnz
mov
loopne
dec
cdq
in
(bad)
and
mov
push
movs
stc
test
pop
aam
cs
cmps
push
adc
test
add
(bad)
stc
and
xchg
imul
rol
push
sub
jp
test
fstp
xchg
repnz
popf
xor
sub
aas
ins
mov
mov
pop
stos
push
xchg
scas
icebp
pop
mov
arpl
mov
scas
popa
fimul
ja
cmp
dec
jl
cmp
int3
jl
cmp
gs
push
mov
jg
lods
pop
sub
add
sahf
or
in
in
aaa
(bad)
outs
pmulhuw
and
sub
in
fiadd
and
pop
mov
jne
jecxz
xchg
inc
xor
hlt
lahf
cmc
retf
std
jmp
adc
xor
jnp
pop
add
cmp
push
sub
leave
sbb
add
and
push
in
or
pushf
jno
ret
ins
jb
(bad)
mov
xchg
dec
aas
xchg
push
mov
imul
xchg
pop
stos
mov
mov
rol
or
or
outs
inc
xor
mov
push
push
arpl
cmp
and
jmp
mov
popf
pop
push
stos
mov
rcr
lahf
ins
sbb
enter
jnp
or
add
fst
pop
or
stc
test
pop
and
out
jae
mov
mul
jmp
adc
das
sub
adc
sub
popf
mov
(bad)
mov
pop
inc
inc
fwait
xor
test
je
push
daa
add
inc
jne
mov
mov
and
inc
mov
sub
sbb
jb
in
mov
jge
stc
and
inc
call
and
push
iret
add
(bad)
sbb
jge
cdq
add
xchg
or
mov
dec
jns
bswap
repnz
dec
xchg
bound
icebp
dec
pop
mov
add
outs
push
neg
clc
sar
lds
sbb
mov
and
mov
imul
test
pop
cmp
add
ficom
mov
es
lds
hlt
je
mov
sub
stc
mov
aaa
lock
jno
pop
nop
push
mov
in
adc
(bad)
lahf
inc
jmp
xchg
jecxz
cmps
retf
iret
xor
fistp
test
enter
inc
mov
inc
gs
or
xchg
pop
sti
xchg
jne
or
mov
lahf
clc
loope
mov
outs
movs
adc
in
jge
in
mov
adc
mov
inc
retf
dec
mov
mov
or
int
or
xlat
(bad)
std
fidivr
scas
jl
test
pop
mov
cmp
jns
fwait
push
pop
inc
mov
and
loope
sti
push
je
and
daa
add
dec
xor
out
scas
pop
inc
sahf
mov
pop
and
push
movs
mov
ror
mov
fs
sub
stos
out
cwde
pop
cmp
pop
sbb
jge
test
test
retf
mov
repnz
inc
push
jae
enter
jge
cmp
inc
movs
pop
int3
fdivp
arpl
adc
ss
cmp
mov
(bad)
(bad)
out
add
aas
leave
sar
jno
cmp
test
repnz
and
jl
xchg
inc
and
add
xor
fcomp
jmp
jb
fistp
imul
test
mov
mov
popa
jge
imul
cmp
jle
repz
add
mov
int
sbb
dec
adc
popf
mov
cmp
lahf
test
and
out
sub
dec
pop
push
test
cmp
mov
aaa
outs
cwde
outs
sbb
stos
mov
push
out
ror
icebp
leave
mov
mul
cwde
cmp
or
xchg
aad
fnstenv
jle
test
push
mov
cmp
fincstp
pop
in
adc
(bad)
cmp
in
adc
out
cmp
fstp
mov
lock
push
cld
push
xor
push
add
out
push
pop
or
sahf
push
lock
inc
xor
sbb
mov
adc
fcmovne
mov
sub
imul
and
dec
sub
mov
into
in
jnp
add
ja
loopne
sti
push
iret
ret
int3
jl
cmp
inc
stc
fwait
neg
cmp
cmp
jo
push
mov
popf
inc
xchg
inc
ds
(bad)
cmc
mov
aas
sti
xor
push
inc
add
pop
movs
xchg
mov
jle
movs
xor
movs
add
jne
mov
sbb
xor
cmp
cdq
or
inc
js
mov
sahf
test
mov
cwde
push
(bad)
cmc
mov
sub
xor
js
adc
jmp
jmp
ror
mov
xor
inc
pop
cmp
ins
cmc
fdiv
mov
movs
add
push
xchg
loopne
shr
mov
add
std
loopne
outs
aam
xchg
push
iret
fmul
inc
push
push
test
jmp
cmp
enter
call
inc
bound
sub
std
loop
dec
out
test
retf
int3
(bad)
mov
stos
out
jg
add
ins
sti
test
sbb
stc
and
mov
les
cmp
push
sbb
mov
ja
movs
mov
scas
adc
lds
inc
push
pop
mov
sbb
jg
adc
and
xor
cld
xor
adc
stos
gs
adc
(bad)
repnz
mov
(bad)
in
dec
sahf
xchg
mov
sbb
leave
mov
ds
js
retf
dec
(bad)
push
(bad)
xor
std
aas
out
aad
in
call
loop
adc
inc
xchg
ds
adc
sub
(bad)
xor
push
dec
push
ins
sbb
or
(bad)
or
xor
add
dec
pop
push
mov
push
mov
std
push
mov
or
loop
(bad)
int
test
dec
mov
popa
in
push
mov
cmp
push
mov
mov
xchg
nop
inc
test
stos
shl
jne
stos
aas
data16
and
shl
out
lods
mov
mov
jge
xor
lea
or
sar
in
out
sbb
dec
sub
adc
and
stos
sbb
cmp
and
popf
popf
outs
cdq
shl
mov
sub
add
jns
retf
cmp
push
in
call
adc
push
jno
stc
add
es
pop
jge
or
scas
xor
les
push
mov
mov
pop
cmp
xor
jge
out
in
add
jl
add
sub
inc
je
jnp
xor
xchg
push
xchg
test
icebp
or
shr
mov
jecxz
not
sub
aas
out
sbb
cld
mov
in
in
mov
lods
jl
out
icebp
cmp
jg
ret
mov
das
sub
mov
cld
aas
xchg
inc
jg
fist
pop
xchg
xchg
xor
call
cld
push
outs
dec
(bad)
cld
jnp
inc
mov
push
test
mov
inc
sbb
pushf
pop
js
cmc
stos
loopne
call
pop
rcl
mov
push
outs
lds
fcmovu
mov
imul
outs
icebp
xor
fdiv
lock
adc
imul
inc
mov
sahf
mov
es
fldenv
ror
arpl
ficomp
mov
cmps
xchg
cwde
mov
pop
mov
lods
stos
cmp
sbb
jmp
out
jecxz
and
pop
xchg
mov
sub
mov
add
retf
xor
cmc
mov
sbb
xor
cmps
orps
in
ret
shl
aam
or
lods
and
in
pop
push
or
add
in
mov
jne
fs
cmp
mov
popa
shr
cmps
adc
xor
push
push
std
xchg
pushf
nop
lods
rol
or
ret
xor
(bad)
into
repz
and
and
stos
mov
pusha
jmp
inc
or
cmc
sbb
in
and
mov
(bad)
lods
aam
stc
jae
cmp
repz
sti
sbb
pop
(bad)
in
lea
xor
das
popf
aaa
push
dec
push
pop
cmp
sar
not
dec
inc
movs
jp
xchg
mov
jns
stc
and
arpl
inc
push
dec
arpl
sub
adc
in
push
test
gs
mov
lods
xchg
call
push
jo
xchg
popf
mul
sar
(bad)
leave
pop
xchg
(bad)
sbb
add
pop
adc
lods
dec
test
dec
adc
inc
mov
mov
data16
xchg
outs
push
(bad)
ins
lahf
shl
mov
mov
push
dec
mov
fsubr
imul
mov
sub
es
sbb
xchg
adc
mov
jo
cld
or
imul
add
or
add
in
leave
cs
mov
and
mov
outs
or
mov
rcr
sbb
leave
mov
loope
pop
pop
fcmovne
movs
jle
int3
cmp
fneni(8087
not
add
sahf
xor
pop
hlt
lahf
mov
in
addr16
or
sub
iret
xor
into
lea
mov
pop
outs
add
cmp
jmp
cmp
loope
adc
xor
mov
popa
or
xor
enter
and
imul
repnz
fiadd
je
pop
inc
mov
xchg
retf
loop
cmp
call
(bad)
mov
imul
fadd
std
call
imul
fcomip
sub
cdq
xor
test
data16
pop
mov
sub
push
std
shl
adc
push
cmp
cmp
pop
or
mov
pushf
jmp
daa
es
pmulhuw
jmp
repz
fwait
dec
test
inc
outs
xor
dec
pop
ins
shr
jbe
shl
rol
jp
sbb
aas
je
jb
sbb
mov
xchg
imul
es
jbe
pop
lds
mov
pop
les
cdq
xchg
or
(bad)
ss
mov
jge
fcmovbe
scas
mov
pop
lock
sbb
cmp
pop
pop
mov
mov
pop
xlat
call
(bad)
cmp
sbb
in
cmp
ds
into
stos
xor
cmp
repnz
call
rcl
inc
pop
adc
mov
pop
popa
sbb
xlat
push
xchg
(bad)
retf
pusha
(bad)
xchg
jl
push
and
cs
mov
leave
push
xor
xor
push
lds
ret
dec
movs
lods
jle
ja
scas
je
mov
aas
add
popa
add
idiv
pop
int3
popa
and
mov
imul
fldcw
test
lock
lahf
inc
jmp
mov
shl
scas
xor
jnp
lds
jl
mov
and
cmp
not
ret
mov
in
jnp
(bad)
add
mov
inc
int3
pop
(bad)
loopne
mov
out
fsubr
jb
xor
(bad)
sti
pop
adc
mov
js
fisttp
xor
ins
iret
or
sub
mov
xchg
sub
cmp
addr16
or
pop
mov
retf
or
and
inc
mov
cmp
pop
adc
ins
leave
ds
retf
into
cmp
hlt
dec
repnz
sub
std
push
xor
and
mov
stos
inc
mov
add
and
xor
jbe
pop
repnz
fwait
sbb
mov
mov
gs
call
mov
sti
sbb
ficomp
fist
inc
in
in
outs
pop
leave
fdiv
xor
pop
xchg
lods
sub
call
mov
add
ror
or
enter
movs
jae
lea
mov
push
or
adc
(bad)
dec
push
call
xchg
and
push
mov
sbb
push
dec
outs
rcl
ja
adc
cmps
repz
std
(bad)
ins
shl
iret
xchg
inc
adc
idiv
test
ffreep
aaa
or
psubusw
cmps
stos
push
add
ss
adc
xor
ror
mov
inc
out
arpl
push
add
jmp
dec
jmp
dec
les
test
enter
cli
mov
retf
cmps
arpl
push
mov
xlat
stc
in
loopne
and
test
cwde
leave
adc
test
xor
jno
mov
sub
mov
test
cdq
pop
xchg
push
icebp
aad
dec
lahf
sbb
add
and
dec
sbb
cmp
out
popa
jmp
pop
push
clc
and
mov
push
seta
cmp
cmp
icebp
sub
dec
fcomp
cmp
stc
push
dec
repnz
in
add
xchg
stc
xchg
mov
jbe
fwait
xor
xchg
cwde
or
(bad)
xchg
sub
cs
xor
push
lahf
mov
repz
pop
add
push
call
leave
cmp
movzx
(bad)
pop
ins
into
jae
jne
pop
cs
bound
mov
mov
sbb
jmp
in
push
xlat
loop
mov
(bad)
es
push
lea
outs
imul
add
sbb
or
cld
mov
out
sar
out
pop
gs
aas
xor
test
push
xchg
add
movs
ret
in
pop
and
rol
pop
in
daa
sti
(bad)
into
je
mov
mov
adc
test
int3
dec
stos
push
jnp
outs
fisub
push
pop
mov
stos
jl
xchg
dec
ss
mov
stc
fist
sbb
mov
int
gs
cs
or
dec
lods
popf
adc
mov
stos
lock
mov
xchg
ins
bound
(bad)
push
retf
imul
mov
fiadd
shl
inc
dec
test
sti
xchg
cmp
add
xor
push
imul
test
xchg
inc
sahf
adc
test
mov
rol
push
aas
cmps
mov
stos
movs
ja
fs
scas
outs
mov
int3
add
mov
je
mov
xchg
cmps
sub
jae
fwait
sub
sub
fidivr
add
sbb
aam
loopne
js
cmovg
xor
sbb
icebp
(bad)
int
loopne
push
(bad)
movs
and
jne
repnz
daa
cmp
jb
sbb
push
scas
lea
imul
adc
das
adc
ret
call
stc
push
xchg
mov
and
adc
push
ret
pusha
bound
push
adc
aaa
stos
sub
mov
mov
loop
test
pushf
dec
jp
mov
pop
cmps
and
xchg
add
push
iret
mov
sub
aaa
in
push
iret
popa
adc
cmps
push
std
fiadd
inc
(bad)
fwait
cmps
jle
push
test
push
push
retf
xchg
mov
push
add
mov
jl
outs
dec
xor
mov
pushf
adc
(bad)
jbe
cmp
adc
fsubr
jmp
cld
and
xor
mov
adc
pop
pop
mov
lahf
xchg
push
mov
jmp
cwde
xor
leave
repz
jns
push
pop
movs
scas
test
inc
jl
dec
xchg
jae
mov
push
lods
mov
inc
sub
and
or
ror
xchg
bnd
inc
mov
cmps
pop
mov
jg
(bad)
outs
repnz
or
outs
adc
sbb
push
xchg
inc
ret
(bad)
fisttp
mov
pop
fld
lahf
sti
mov
mov
dec
dec
aas
gs
and
cmp
xor
call
mov
and
push
xchg
icebp
enter
movs
adc
inc
popf
out
and
int
xchg
push
xor
jns
in
add
test
sub
mov
or
cmc
in
(bad)
jno
cmp
pushf
dec
retf
jbe
scas
inc
outs
js
inc
jmp
fcomp
hlt
and
ds
ret
scas
retf
cli
pop
mov
mov
add
fld
shl
fsub
lods
push
sub
jmp
inc
sub
clc
mov
fnsave
adc
adc
xchg
dec
xor
and
add
push
mov
es
nop
mov
push
xchg
aad
push
ds
push
and
pop
hlt
movs
fld
lahf
sahf
out
out
mov
leave
jo
inc
int3
dec
pop
xchg
sahf
nop
loope
stc
icebp
push
loop
adc
idiv
xor
test
cvttps2pi
xchg
push
or
popf
shl
fidivr
test
sub
and
pop
leave
pusha
enter
add
imul
pop
js
mov
cli
test
inc
jmp
or
call
in
outs
in
xlat
adc
call
dec
sar
sub
pop
loope
paddw
jle
push
cmp
aas
stos
test
call
pop
scas
pop
and
pop
pop
std
pop
fiadd
out
jnp
xchg
xchg
pop
mov
mov
out
(bad)
pushf
xlat
cmp
or
sti
xchg
push
movs
inc
dec
lea
(bad)
imul
out
and
add
(bad)
retf
xchg
jne
pop
cs
les
lods
mov
and
aam
sub
(bad)
sti
pop
mov
pop
cmp
push
mov
dec
or
push
mov
inc
dec
xlat
aas
push
jle
loopne
cdq
fiadd
movs
xchg
sub
adc
pusha
pushf
mov
sub
iret
jmp
pop
inc
aas
mov
push
jmp
ret
fsubr
div
jmp
cmp
ja
xor
xchg
rcr
cwde
cmp
imul
in
mov
mov
add
rcl
sti
cmps
adc
daa
stc
xchg
cmp
xor
int
retf
or
or
cs
ins
pop
adc
rcr
lods
stos
leave
es
dec
cmc
pop
inc
cmp
pop
push
push
loopne
call
adc
aad
hlt
outs
lea
sbb
pop
lods
sti
outs
pushf
dec
adc
mov
sahf
or
repz
ss
jns
scas
leave
mov
mov
or
xchg
sbb
mov
frstor
addr16
in
mov
outs
mov
sti
fmul
aad
pop
push
inc
cmp
inc
add
dec
add
cvttps2pi
jg
push
sar
jo
mov
hlt
mov
and
test
(bad)
or
stos
shr
adc
push
adc
adc
out
or
jl
js
jle
outs
ror
dec
pop
test
xchg
or
add
xor
fmul
dec
mov
(bad)
div
out
mov
(bad)
mov
loope
pop
xchg
aaa
xchg
mov
cmp
xor
adc
add
retf
push
retf
fs
pshufw
data16
icebp
cmp
sub
jbe
jae
(bad)
repnz
sbb
or
mov
in
(bad)
loope
and
and
mov
jg
int3
int
push
ins
jmp
test
retf
lds
adc
int3
jne
mov
sti
movs
push
or
nop
push
lds
outs
std
add
into
out
adc
pop
cmp
ss
addr16
out
cld
push
push
(bad)
mov
adc
mov
ja
jle
je
xor
ror
les
or
aam
xchg
xchg
sahf
pop
(bad)
jne
scas
sbb
xchg
pop
mov
and
pop
cmps
(bad)
aaa
shl
adc
add
stos
mov
cmp
(bad)
sub
into
stc
call
es
inc
out
bound
loope
push
push
into
jp
lods
mov
es
aad
or
aaa
cmps
sub
sbb
pop
mov
sahf
loopne
or
sbb
movs
pop
dec
xchg
shl
mov
into
call
cmp
add
ja
mov
int
popfw
pushf
(bad)
and
sbb
movs
fmul
add
fistp
(bad)
outs
imul
add
sbb
or
sbb
data16
scas
cmp
or
push
push
mov
(bad)
scas
xchg
loopne
and
pusha
(bad)
jecxz
out
rol
pop
ins
loope
sub
cld
fdivr
(bad)
sbb
push
fisub
mov
lods
xchg
push
ret
or
imul
push
mov
ss
popa
lahf
push
mov
cmps
int3
popa
aaa
dec
fdiv
or
xchg
push
aad
rol
mov
retf
leave
addr16
je
adc
ror
popf
mov
mov
sbb
out
xor
xchg
out
bnd
call
sub
add
lahf
dec
jnp
retf
test
rcl
aam
add
ja
sahf
gs
lods
mov
push
(bad)
test
jmp
sbb
jo
xchg
pushf
or
jno
test
dec
cs
ja
sub
mov
ins
pushf
stc
out
xchg
movs
inc
sbb
pop
jbe
add
aas
ds
mov
pop
fs
repz
cld
div
scas
mov
rcr
push
jmp
or
sbb
jg
or
xchg
repz
jecxz
popf
inc
xchg
jp
mov
inc
adc
mov
shl
bswap
neg
(bad)
xchg
dec
dec
mov
push
mov
jmp
cwde
bound
xor
mov
ins
cmp
cmp
adc
cmp
dec
mov
mov
rcl
lods
pop
xor
sub
test
fst
cmp
or
in
sub
out
mov
push
cld
push
xchg
sub
xor
adc
xor
outs
mov
cmp
mov
ret
add
ficomp
aam
fbstp
xchg
icebp
call
inc
push
pop
dec
xlat
pop
loopne
(bad)
add
cmps
dec
test
mov
inc
lea
jb
cmp
and
aam
mov
(bad)
fldenv
push
push
inc
pushf
dec
and
idiv
jg
cmp
stc
mov
retf
add
inc
or
call
cmp
outs
ins
addr16
inc
mov
sub
test
ja
stc
in
cmp
jmp
loope
outs
jmp
shl
fcomp
into
retf
sbb
ret
hlt
pop
or
sbb
dec
cmp
xor
mov
xlat
mov
push
ins
shl
mov
mov
cmp
inc
pop
es
sub
ins
fmul
sub
cmp
mov
xor
sbb
rol
daa
mov
test
mov
dec
push
ja
and
push
js
arpl
xor
stos
inc
(bad)
inc
mov
aaa
shr
and
inc
test
fistp
push
mov
push
ss
retf
dec
dec
popf
int
jle
adc
and
(bad)
loopne
add
mov
fimul
test
and
clc
sbb
dec
loop
vfmsubaddpd
adc
dec
mov
inc
sub
push
pushf
mov
es
inc
sub
not
pushf
dec
jp
pop
adc
add
test
dec
dec
sub
fidiv
cmp
mov
scas
dec
lds
push
(bad)
ror
into
or
iret
sub
sahf
sar
cmps
or
iret
cwde
data16
es
jmp
jmp
sbb
jge
push
cmc
loope
push
fwait
push
add
mov
cmc
mov
push
jb
gs
inc
stc
(bad)
mov
xor
sbb
jmp
xor
sbb
pop
and
loopne
in
xchg
cwde
outs
jp
push
pop
jp
mov
add
fistp
clc
and
out
daa
aam
dec
(bad)
clc
push
fptan
pop
pop
pop
dec
pop
inc
cmps
jb
into
in
sub
jle
cld
mov
js
add
scas
(bad)
out
outs
cmps
push
daa
add
out
scas
imul
add
adc
sbb
add
jmp
and
je
mov
es
(bad)
data16
dec
das
es
gs
in
dec
addr16
movs
xchg
or
into
mov
out
add
leave
into
add
add
or
inc
or
loopne
pusha
call
jp
mov
popf
and
push
xchg
sbb
push
dec
cmc
xchg
push
popf
push
xchg
scas
aad
mov
call
or
sahf
pop
inc
fisub
xor
dec
xor
and
cmp
sbb
sub
sub
jne
int3
xchg
ins
xchg
adc
cmp
movs
rol
aas
mov
mov
mov
cmp
in
dec
pop
xchg
mov
fist
icebp
mov
test
arpl
jae
push
imul
or
popa
add
jl
pop
mov
inc
pop
and
cli
or
test
imul
and
(bad)
jmp
dec
loope
jno
xchg
mov
(bad)
ins
mov
mov
inc
lahf
ins
mov
in
xchg
adc
mov
movs
cwde
scas
scas
inc
fwait
dec
jge
adc
int
pop
push
and
ins
sub
pop
inc
rcl
add
popf
mov
stc
or
mov
popf
js
inc
gs
out
shl
pop
mov
pop
cmp
adc
(bad)
mov
push
mov
sbb
adc
cmp
dec
xchg
mov
xchg
sbb
xchg
jl
aad
push
in
(bad)
mov
ss
cmps
out
test
repnz
xchg
cli
cwde
cld
test
popa
push
fld
and
mov
and
xchg
in
fld
push
adc
add
mov
sub
add
out
dec
mov
(bad)
jb
jecxz
xor
loope
ja
movs
scas
push
add
fsub
pop
and
xchg
pop
add
cs
jmp
fs
addr16
dec
jns
cmp
xchg
xor
mov
into
stos
jecxz
addr16
fnstenv
inc
pop
pushf
sahf
mov
pop
hlt
pushf
fistp
mov
lahf
push
cmp
push
push
dec
sti
adc
pop
sub
and
adc
ss
cmps
push
adc
jbe
mov
icebp
sbb
clc
sbb
cld
lods
xchg
ds
and
pop
cwde
cmp
jmp
loop
pop
cld
mov
mov
push
xor
rol
(bad)
retf
xor
inc
jp
movs
sub
(bad)
add
ret
jbe
sub
mov
movs
test
push
dec
pop
inc
and
push
neg
hlt
lea
push
push
mov
lds
pop
jb
mov
inc
lods
stos
aas
cmps
push
xchg
cmp
dec
scas
mov
lea
add
retf
or
mov
(bad)
xor
mov
adc
push
loopne
out
and
shl
pop
lods
add
push
das
add
jb
into
pop
stc
scas
and
jl
mov
imul
jmp
and
pop
movs
inc
dec
dec
mov
pop
in
ins
enter
xlat
inc
jl
loop
cmp
cld
mov
cmp
cmc
cmp
push
xchg
sub
popf
sub
out
call
ret
sub
xor
sbb
out
adc
sbb
in
xchg
mov
jp
inc
retf
jns
add
out
mov
ds
fcmovne
neg
(bad)
int3
hlt
aad
ss
jns
call
jmp
popf
(bad)
or
jb
sbb
xchg
pop
int
lahf
xchg
xor
jecxz
xor
jmp
xor
rcr
adc
aas
outs
mov
lahf
lods
mov
dec
xchg
sub
les
retf
push
mov
mov
fucomp
aad
loop
fcom
(bad)
int
aad
(bad)
ds
shr
push
aaa
sub
mov
ds
and
jg
and
das
adc
dec
fs
add
jno
mov
std
mov
and
and
retf
push
shl
pop
gs
popf
xchg
test
or
aaa
jg
in
push
cld
jne
mul
arpl
repz
mov
js
jb
inc
mov
jp
lock
xchg
or
lods
test
aad
out
cmp
mov
or
mov
aad
cmp
ret
sub
pop
(bad)
fisubr
adc
mov
jp
mov
sub
mov
mov
or
dec
stc
ins
sub
test
rcl
add
arpl
push
test
sub
iret
xchg
outs
sahf
rol
pop
cmp
into
push
mov
or
test
in
mul
pop
das
sar
and
dec
mov
dec
mov
jne
into
xchg
mov
dec
lods
imul
(bad)
fistp
cmp
fstp
or
sbb
push
cs
inc
adc
fdivr
(bad)
jle
mov
or
dec
and
fidivr
mov
addr16
test
dec
cmps
mov
sti
aaa
push
test
mov
pushf
xchg
jb
in
dec
inc
shl
push
shl
mov
push
jns
jecxz
(bad)
scas
pop
sbb
and
aam
and
popa
fwait
mov
mov
ds
cmp
std
mov
add
mov
ss
(bad)
movs
aaa
cmp
cmp
icebp
sub
mov
mov
nop
mov
fnstenv
in
pop
push
mov
adc
scas
lods
cmp
sbb
addr16
lea
xchg
inc
dec
sub
push
les
and
cs
scas
cdq
cmp
xchg
and
xlat
inc
clc
push
fcomp
loop
and
enter
xor
jmp
pop
push
das
mov
int
jg
ss
fs
ins
xor
mov
cmps
adc
pop
inc
or
add
out
push
scas
aad
jno
adc
cmps
mov
xor
jge
in
push
or
cmps
sub
sbb
xchg
pxor
or
xchg
(bad)
sbb
pop
dec
push
aas
xor
std
ror
(bad)
cmp
and
jl
mov
adc
imul
add
cmp
dec
fwait
out
test
es
inc
rol
sahf
sub
xchg
mov
(bad)
pop
int3
and
cmps
xor
jae
mov
jb
xchg
xchg
mov
mov
dec
xor
jb
xchg
lea
sti
shl
inc
mov
sub
xor
fcomp
popf
jl
in
jge
dec
mov
xor
push
sahf
jmp
push
mov
fcmovnu
cmp
mov
outs
popa
push
data16
pop
jge
add
ss
inc
mov
push
stc
test
xlat
mov
mov
fdivr
mov
xor
dec
idiv
adc
add
push
out
ss
fcom
jecxz
jecxz
into
jae
lds
loop
loope
xor
retf
rcl
imul
push
fidiv
popa
mov
xchg
jmp
es
mov
add
shl
mov
adc
into
jl
iret
in
xor
fcmovnb
enter
movs
add
inc
push
mov
aam
cmps
or
sbb
add
sbb
mov
jmp
retf
xor
lods
neg
push
fadd
data16
mov
(bad)
(bad)
daa
mov
(bad)
dec
inc
pop
call
and
mov
pop
adc
out
cmp
enter
fwait
sahf
imul
jns
ror
in
movs
and
retf
dec
imul
push
pop
push
bnd
icebp
sub
(bad)
cld
enter
retf
outs
or
(bad)
mov
data16
leave
sub
imul
(bad)
sbb
pop
xor
pop
(bad)
or
ss
and
xchg
in
idiv
inc
mov
mov
mov
mov
int
(bad)
inc
loopne
xor
retf
jne
pop
out
imul
pop
add
int
int3
fldenv
sub
in
dec
xor
jl
es
sub
xor
inc
pop
fidiv
add
es
push
or
push
jge
and
rol
aas
(bad)
ds
xor
sbb
sub
push
cmp
outs
test
cwde
test
daa
outs
mov
retf
dec
xor
popa
jno
xor
jp
dec
add
inc
pop
fisubr
xor
and
mov
outs
pop
and
ror
jmp
and
push
or
pop
jo
fwait
dec
pop
shl
shr
mov
ret
mov
sub
mov
shl
inc
xchg
ret
mov
jmp
cmovp
mov
repnz
push
int
sbb
imul
push
mov
inc
stc
call
xor
test
push
cli
call
xor
js
dec
jb
addr16
rol
pop
add
cmova
mov
sahf
cld
dec
mov
adc
lods
inc
xchg
pop
fwait
call
loope
popf
movs
push
mov
fsub
stc
ins
inc
push
cld
push
retf
repnz
mov
pop
mov
sbb
in
inc
call
mov
cmp
cmp
test
dec
xchg
jge
xchg
daa
push
pop
cdq
mov
cmp
push
sub
ins
xor
fwait
mov
shl
cmp
je
mov
fsub
inc
adc
cs
pop
mov
mov
fimul
or
enter
and
mov
aaa
dec
lods
es
imul
cmp
je
push
nop
xor
cmps
sub
into
les
xchg
movs
jmp
adc
pop
(bad)
js
xor
fisub
mov
xor
add
in
pop
rcl
pop
sbb
add
fwait
mov
out
cld
mov
repnz
(bad)
lods
adc
fldenv
loope
and
pop
je
mov
sub
and
xchg
out
retf
test
jge
in
pushf
xchg
and
dec
mov
call
pusha
jmp
or
test
mov
jns
xchg
push
and
fadd
fnstcw
xor
mov
xchg
sub
pop
add
cwde
fadd
add
lahf
mov
(bad)
iret
push
into
push
call
push
sub
pop
xor
cmp
mov
pop
sbb
ror
mov
stos
pop
mov
or
loopne
ins
dec
(bad)
sbb
inc
fs
pop
outs
hlt
loope
nop
mov
pop
out
dec
mov
dec
push
stc
(bad)
int
push
scas
cmc
sbb
aad
cmp
stos
pop
jge
push
out
mov
js
mov
or
mov
mov
les
cmp
dec
ror
scas
repz
sbb
imul
(bad)
shl
mov
dec
out
push
xchg
push
add
cmp
lahf
fisubr
mov
xor
jmp
fnstsw
add
jecxz
repnz
ins
in
(bad)
mov
xchg
cmp
mov
cmp
popa
cmp
clc
push
xchg
mov
mov
sub
pop
pop
das
retf
fidivr
das
sahf
push
sbb
(bad)
sbb
sti
popf
jns
dec
cmp
shr
adc
shr
jecxz
(bad)
lods
mov
ins
scas
sbb
into
outs
pop
sub
ja
jg
mov
in
jnp
jo
stc
repz
cli
jecxz
aas
sbb
mov
stc
loope
stos
lock
or
out
inc
mov
mov
add
xchg
fnstsw
add
dec
(bad)
push
push
les
mov
sar
test
and
lods
adc
jne
xchg
mul
sti
dec
lahf
loop
test
cmp
sti
out
jbe
mov
xor
add
sub
mov
xor
jae
aas
add
adc
arpl
test
xchg
test
mov
outs
pop
aad
(bad)
ja
xchg
imul
nop
and
iret
retf
mov
adc
mov
xchg
lods
sti
push
retf
mov
rcl
pushf
es
fistp
push
push
lock
call
mov
daa
pop
xchg
mov
adc
dec
ins
repnz
ja
cmps
pop
ret
into
adc
lods
cld
clc
sahf
in
inc
cmc
ja
push
jge
cmp
pushf
fisttp
pop
call
shr
not
push
pop
ret
jp
leave
inc
mov
mov
pop
pusha
cmp
pop
push
call
mov
jae
(bad)
popf
mul
mov
adc
out
scas
(bad)
fcomp
cmp
cdq
sub
jne
sti
cmps
stos
popf
jno
shl
sbb
mov
les
mov
xchg
cmps
std
sub
popa
inc
mov
das
cwde
push
dec
jle
inc
aas
pushf
repz
add
int
add
cld
pusha
inc
rol
das
sahf
and
ror
stos
js
outs
gs
test
movs
fnstsw
data16
mov
pop
repz
push
popf
pop
mov
mov
test
stos
or
aam
mov
inc
jmp
push
inc
out
scas
jnp
sbb
jle
push
add
xor
fisub
out
(bad)
sbb
icebp
dec
sar
dec
fdivr
jmp
rol
sub
add
int
mov
and
add
and
rcr
retf
mov
addr16
popf
cli
mov
rcr
loope
jg
call
adc
push
ins
xchg
adc
or
adc
inc
arpl
inc
les
cdq
icebp
test
mov
mov
data16
mov
bound
ins
arpl
adc
mov
lea
mov
hlt
add
stc
cmp
ins
xor
idiv
cmps
dec
rcl
jmp
test
pusha
xor
sub
iret
retf
adc
and
retf
sbb
fst
or
jge
sub
jns
out
retf
sbb
push
mov
js
(bad)
(bad)
out
push
fidiv
xchg
call
dec
mov
xchg
aas
pop
sbb
std
push
jbe
mov
xchg
and
fistp
dec
test
jmp
mov
ss
pop
and
imul
pop
loope
push
jne
push
cmc
xchg
cwde
cld
fidiv
test
or
or
pop
(bad)
adc
loop
pushf
call
pop
dec
and
mov
mov
push
pop
pop
and
push
and
dec
rcr
loop
dec
repnz
xor
addr16
dec
loopne
retf
mov
fdiv
ins
mov
shr
mov
adc
cmc
pop
pop
ficom
mul
enter
cmp
sahf
out
std
loopne
das
jp
outs
xor
mov
jge
mov
call
inc
xor
mov
mov
xor
frstor
cmps
mov
mov
sub
fisttp
call
mov
add
add
cmps
adc
movs
mov
rcl
or
ins
xchg
pushf
cmp
pop
mov
adc
outs
(bad)
mov
dec
pushf
and
xor
loope
in
sar
mov
sti
xor
adc
mov
push
(bad)
retf
cs
shr
(bad)
fcmovb
cmp
dec
mov
in
jecxz
xchg
(bad)
sbb
mov
neg
push
in
sub
xor
mov
mov
ins
iret
mov
test
out
inc
movs
jg
or
leave
test
(bad)
cmp
xchg
mov
cwde
add
mov
pop
sti
(bad)
enter
cwde
in
dec
fxch
mov
push
fild
sub
add
and
(bad)
jb
dec
outs
out
inc
ret
pop
add
lods
adc
mov
fsubr
(bad)
fdiv
mov
or
push
mov
stos
out
pop
iret
adc
(bad)
(bad)
std
dec
cdq
pop
xchg
call
mov
cdq
and
pop
jbe
cmps
xchg
jg
bound
repnz
adc
and
scas
clc
xchg
stc
jmp
sbb
add
addr16
push
test
(bad)
test
(bad)
ret
adc
cmp
pusha
sbb
xchg
adc
cmp
or
pusha
xor
cmp
mul
test
nop
pop
pop
test
cmp
and
mov
adc
push
mov
xor
jle
cmc
fnstsw
call
pop
or
jp
mov
push
jae
add
mov
push
lods
repz
stos
mov
pop
icebp
vunpcklpd
fidiv
or
repz
in
sbb
test
lds
bound
das
push
fmulp
push
imul
mov
push
add
jae
push
lahf
lds
or
mov
iretw
jecxz
sbb
mov
jns
hlt
push
mov
outs
mov
lock
mov
pop
inc
dec
dec
test
aad
rol
push
jo
adc
arpl
dec
arpl
jbe
rcl
mov
movs
dec
pop
add
jmp
rol
fidivr
out
stc
xor
fdivr
jns
xchg
and
jne
(bad)
mov
push
xor
inc
retf
cwde
aas
ror
mov
or
xchg
fsub
jns
xlat
out
cs
ins
sbb
cld
call
out
add
jbe
fs
cli
or
or
ss
cmp
lods
not
push
addr16
or
dec
arpl
gs
rcl
call
into
lahf
sar
fwait
and
repz
push
ja
adc
add
cmp
pop
std
(bad)
mov
sub
adc
and
xchg
cmps
mov
or
cli
mov
xor
sar
push
cmp
or
inc
inc
cwde
push
pop
(bad)
hlt
aam
dec
repnz
pop
cmc
scas
jne
pop
loopne
shl
out
cmc
fdivp
sti
ja
call
clc
push
jae
inc
or
pop
lock
jnp
or
je
mov
shl
out
jmp
jno
out
sub
adc
sub
adc
push
dec
inc
scas
adc
xor
(bad)
lods
dec
fs
imul
lea
xor
icebp
or
sahf
stc
imul
adc
and
fst
bound
push
cwde
xlat
fdiv
loop
cs
loopne
movs
cmp
aad
or
sub
cmp
dec
test
clc
loopne
add
cmp
das
rol
inc
jle
inc
(bad)
loope
mov
jg
lds
mov
and
jecxz
dec
pop
sbb
xor
mov
outs
icebp
xor
push
jnp
fwait
stos
jp
push
int
loop
imul
in
retf
sbb
in
dec
out
iret
clc
jmp
lods
pop
nop
ror
mov
cli
push
sub
dec
retf
add
mov
push
mov
lock
jp
sar
popf
mov
pop
mov
or
pop
jmp
in
fbstp
xchg
popa
mov
push
es
push
cmp
(bad)
movs
pop
xor
cmp
lods
sbb
std
mov
out
add
adc
sub
and
pop
mov
aad
xchg
push
push
inc
lods
stos
sbb
push
pop
adc
into
into
xchg
cmp
mov
je
mov
inc
adc
xor
and
imul
jns
(bad)
jns
inc
call
sahf
out
cmps
sbb
lods
in
add
pop
jge
mov
jge
ins
push
mov
jmp
adc
out
test
ret
lahf
int
(bad)
pop
xchg
les
in
lahf
mov
and
div
sbb
cs
sbb
ins
jbe
call
ins
mul
sar
repz
mov
mov
cmp
test
or
cmp
lds
xor
scas
ret
in
mov
gs
mov
mov
ret
movs
cmc
bound
(bad)
xor
sub
push
jle
cmp
adc
loope
sub
ja
add
pop
icebp
mov
xor
add
sub
stos
ja
icebp
rcl
jl
rcr
cmps
in
add
sub
jno
jle
aam
mov
ficom
out
imul
lods
int3
je
sahf
sub
psrlw
or
mov
pop
add
jns
(bad)
jmp
arpl
movs
test
fnstcw
les
adc
push
(bad)
and
aad
fild
mov
push
test
add
pushf
retf
adc
cmp
mov
js
mov
daa
cwde
in
loop
mov
add
xor
mov
sbb
mov
imul
mov
bound
jge
sub
push
outs
cmps
ins
daa
ror
pop
scas
cmp
xor
retf
mov
sbb
inc
mov
loopne
or
nop
mov
retf
or
add
push
or
and
jo
adc
mov
cwde
pop
ins
pop
adc
(bad)
push
in
ret
push
cmp
out
nop
out
cmp
add
hlt
pop
or
jns
mov
and
pop
add
je
in
jmp
aaa
das
jo
xchg
lahf
dec
mov
or
stc
repz
retf
ins
add
xchg
push
cmp
mov
(bad)
pop
(bad)
ret
dec
imul
retf
xlat
outs
mov
and
fs
mov
(bad)
int
dec
cdq
pushf
outs
test
ds
dec
jle
js
mov
mov
call
dec
pop
sub
into
mov
mov
mov
aaa
or
sbb
out
pop
add
sahf
fneni(8087
jge
push
jbe
aaa
adc
jnp
fs
pop
fisubr
lods
pop
inc
enter
jnp
xchg
xchg
lods
les
es
imul
pop
push
sbb
xchg
inc
add
or
cli
popf
mov
jmp
pop
mov
fwait
push
dec
jno
cmp
pop
inc
stos
(bad)
push
jge
aam
stos
mov
sar
inc
sbb
adc
adc
jmp
mov
ins
push
cmp
pop
gs
shl
or
es
adc
aaa
push
ret
jge
xor
stos
add
pop
jne
push
inc
xor
icebp
test
sar
pop
rcr
pop
addr16
jmp
mov
push
outs
add
rcr
jle
xchg
inc
push
jmp
stos
xchg
jo
fidiv
std
ret
bound
mov
cmp
retf
sbb
inc
cmp
sysenter
xor
pop
jmp
or
dec
sti
jp
cmc
hlt
repz
and
out
shl
aaa
push
ja
sti
jmp
inc
xchg
sbb
vpunpckldq
imul
shl
mov
jmp
lds
ins
push
add
cmp
fistp
scas
shr
out
pusha
sbb
cmp
rcl
and
gs
test
repnz
jns
imul
cmc
mov
mov
in
xor
iret
xchg
mov
mov
adc
int3
xchg
pop
xchg
add
or
ds
fs
scas
in
xor
(bad)
sahf
dec
mov
push
repnz
je
sbb
call
mov
mov
pop
sub
mov
sub
push
div
ret
jge
cmc
xor
push
jp
push
cld
jnp
aad
fild
mov
les
das
pop
sbb
je
daa
or
repz
push
movs
jmp
xor
popa
ret
aas
sbb
jmp
cmp
shr
sbb
repz
call
sar
jle
aad
fwait
mov
and
pop
ins
push
cli
stos
scas
xor
xchg
cmp
and
cmp
pop
sub
aaa
mov
push
pop
clc
js
xor
repz
lods
xor
iret
jb
shr
cmp
mov
jg
int3
xor
retf
retf
mov
aaa
rol
inc
addr16
retf
iret
xchg
das
loop
test
pop
or
xchg
hlt
xchg
cmc
ret
mov
nop
sub
xchg
cmps
pop
pop
xor
add
aas
ins
aaa
hlt
inc
int
test
bound
jmp
pop
inc
mov
xchg
psrlw
sbb
arpl
pop
cmp
sbb
xor
push
mov
cmp
mov
pop
mov
mov
sub
out
inc
stos
mov
pop
aaa
push
mov
jmp
xchg
into
mov
in
sub
dec
and
inc
out
sbb
loope
or
test
pop
rol
std
mov
into
jmp
scas
shl
fwait
cmp
repz
fwait
arpl
popa
push
mov
add
(bad)
and
dec
xor
(bad)
xor
jmp
dec
sub
aas
mov
and
push
pop
jp
lahf
das
jb
hlt
xchg
mov
mov
fadd
add
mov
jmp
jp
mov
retf
and
and
retf
pop
nop
rol
das
test
fcom
xchg
fdivr
bound
ins
mov
dec
inc
add
aas
mov
sbb
sbb
xchg
xchg
je
pop
add
loope
pop
sbb
add
test
jbe
idiv
das
push
jg
mov
and
sbb
xchg
push
div
js
and
iret
fwait
gs
pushf
lods
sub
adc
pop
xchg
push
fcmovne
xchg
out
mov
inc
pop
xchg
and
out
cmp
mov
outs
push
inc
sbb
scas
cmp
ja
or
dec
push
in
mov
shr
push
xchg
loope
xchg
jae
int
js
or
fbstp
jl
iret
sub
mov
ret
and
cmps
inc
lahf
and
call
or
ret
ret
and
mov
mov
ss
sub
pop
xchg
int
mov
lods
mov
mov
xchg
push
adc
cmp
mov
cdq
pop
in
adc
push
push
mov
hlt
sub
push
movs
push
mov
mov
sub
adc
cmp
lock
cmp
mov
iret
rcr
cmps
std
adc
adc
or
mov
js
or
imul
xor
movs
inc
ins
add
scas
xor
inc
pop
xor
sahf
scas
inc
pop
and
push
hlt
lea
stos
jns
inc
adc
mov
push
mov
inc
adc
mov
push
outs
in
or
lods
shl
inc
loopne
mov
retf
in
inc
mov
xchg
dec
dec
sar
cmp
scas
and
(bad)
arpl
into
lds
cmp
push
inc
aad
mov
push
bound
or
stc
pop
mov
fsubr
test
sbb
inc
add
xchg
mov
xchg
fmul
adc
(bad)
jmp
cli
sbb
(bad)
in
mov
fisttp
cmc
(bad)
dec
not
movs
mov
xchg
add
(bad)
sub
test
add
cmc
dec
xor
test
push
jg
and
xor
sbb
hlt
dec
xor
jns
or
xor
mov
xchg
sub
inc
mov
popa
jmp
mov
sub
dec
inc
mov
cdq
add
ins
ins
or
dec
add
das
xchg
cwde
jbe
repnz
imul
push
mov
into
jnp
pop
xchg
test
and
push
movs
nop
cmp
dec
fisubr
push
dec
leave
xor
test
cmp
add
ror
les
or
or
mov
bound
mov
pop
fwait
arpl
ficom
test
daa
xor
ins
xor
out
idiv
mov
add
and
mov
adc
or
dec
jb
movs
inc
shl
(bad)
stos
int
add
jmp
pop
mov
jb
cmp
outs
test
cmp
dec
sbb
inc
adc
mov
xor
shl
sbb
push
adc
add
into
loop
cmp
cwde
test
movs
ins
cmp
outs
cmps
mov
mov
push
repnz
aad
(bad)
sbb
mov
out
jg
aaa
jbe
std
data16
loopne
fstp
or
sbb
jb
and
jmp
push
inc
mov
div
mov
ret
outs
loope
dec
cld
hlt
push
push
add
out
mov
mov
hlt
imul
mov
push
movs
push
clc
sub
lock
cmp
add
out
jl
add
jl
dec
mov
dec
push
aaa
shl
pop
ficom
test
cmp
ss
stos
and
idiv
icebp
jnp
dec
out
pop
add
aaa
imul
ins
xchg
mov
rol
adc
cdq
sbb
dec
jmp
fmul
xchg
cdq
ja
es
adc
mov
push
(bad)
xor
push
call
jb
add
or
jne
mov
add
popf
mov
mov
xchg
arpl
adc
sbb
cmp
cmpxchg
std
test
mov
rcl
test
(bad)
mov
add
push
imul
push
inc
cmp
into
cmp
dec
fbstp
inc
stc
xor
js
add
dec
test
cmp
mov
mov
lods
sub
mov
adc
or
mov
inc
loopne
into
test
pop
ror
rol
stos
sbb
dec
dec
js
xchg
leave
iret
mov
xor
or
fcom
jle
(bad)
movs
and
pop
jg
js
(bad)
hlt
xor
sti
mov
push
push
out
clc
into
pop
xor
das
sub
xchg
jo
adc
or
stc
in
fwait
neg
jecxz
mul
xchg
ins
jle
inc
sub
call
dec
xor
in
mov
adc
xor
out
ret
mov
(bad)
jb
fdiv
clc
push
mov
cs
cmp
(bad)
cld
cmps
cs
adc
mov
cmp
push
fcom
xchg
addr16
repz
gs
sub
(bad)
pop
mov
ret
enter
hlt
ins
retf
jno
lock
cs
test
inc
mov
(bad)
lods
add
cld
push
push
rol
aas
cdq
pop
cli
int
add
mov
test
dec
loop
adc
cmps
xor
sbb
xor
into
loope
stos
cmp
fldenv
stos
mov
or
add
cmp
xchg
call
fld
mov
lods
out
leave
sub
into
xchg
and
pop
mov
movs
sti
pop
push
iret
repnz
ss
jecxz
loope
cmp
aad
mov
or
xor
push
pop
mov
xlat
in
out
not
test
add
rol
stos
mov
pop
retf
or
call
ror
jl
lahf
or
lods
stc
jmp
addr16
xchg
jg
out
or
jbe
out
sbb
mov
aaa
(bad)
fmul
sbb
stc
adc
adc
xor
push
(bad)
out
push
out
mov
out
out
fcmovnu
cmps
xor
ins
imul
or
movs
ret
out
sbb
push
iret
ret
mov
push
das
pop
jne
mov
inc
xabort
or
xchg
and
lock
retf
out
rcl
imul
sar
pusha
push
jecxz
stos
push
cmps
or
cdq
pop
jmp
cmp
sbb
push
adc
mov
jo
and
stos
nop
sub
xor
test
mov
dec
scas
outs
inc
push
movs
jle
push
shr
fimul
call
cmp
clc
cld
mov
movs
stc
leave
ror
xchg
lahf
mov
pop
imul
xchg
mul
mov
add
fwait
pop
leave
in
mov
ret
fwait
jle
(bad)
jo
retf
loopne
fdiv
dec
ret
(bad)
call
mov
mov
push
test
pop
mov
mov
pop
push
inc
inc
repz
jecxz
inc
mov
fst
xor
(bad)
cld
cli
dec
push
mov
push
jg
mov
cmp
mov
test
movs
lahf
inc
pop
in
cmps
mov
cmp
mov
add
mov
sbb
or
shr
hlt
loope
inc
add
cdq
in
mov
xor
pusha
shl
or
ret
sub
mov
cdq
sbb
mov
adc
ss
fnstenv
push
jge
adc
xor
mov
mov
inc
dec
mov
add
xchg
js
cmp
repnz
mov
sbb
mov
mov
imul
or
mov
outs
xor
cwde
pusha
retf
popa
xlat
sahf
sti
jp
ror
adc
in
ret
jmp
add
ror
dec
les
ficomp
xchg
sbb
xchg
cli
dec
sub
test
ds
or
inc
jmp
mov
or
loope
je
or
xchg
call
push
nop
and
xchg
inc
cs
in
jo
mov
and
outs
shl
xchg
inc
test
ror
adc
aam
push
outs
retf
call
jmp
jecxz
mov
or
neg
cmp
cmp
stos
cmp
retf
mov
dec
ins
mov
ins
or
and
xor
mov
mov
test
clc
and
mov
pop
lds
adc
or
adc
into
push
sub
and
lock
jle
adc
cmp
js
inc
cmp
inc
loope
lods
cld
mov
ror
jo
cmps
push
vpsubsb
ds
cmps
inc
sub
cmp
mov
lea
test
add
add
out
sbb
leave
sti
ror
idiv
mov
adc
xchg
and
pop
not
pop
push
test
and
jae
pop
movs
xchg
dec
ja
js
nop
out
fdivr
sub
popa
push
repz
mov
xchg
aaa
loopne
jb
outs
add
jb
fild
pushf
mov
sbb
pop
popfw
mov
fwait
daa
lahf
std
adc
xchg
scas
and
movs
mov
test
call
mov
sbb
int
in
and
pop
fcmovb
outs
int
inc
arpl
pushf
test
pop
add
bound
ins
add
aaa
(bad)
fisttp
fwait
sbb
sbb
arpl
movs
stos
bnd
add
pop
(bad)
xchg
xor
or
in
in
sbb
jge
jmp
xchg
adc
cmp
(bad)
jbe
lods
mov
mov
mov
fldlg2
(bad)
push
or
out
xbegin
rcl
retf
push
mov
or
pop
inc
and
repnz
fiadd
push
icebp
retf
lods
xor
add
adc
or
call
in
push
cli
xor
in
sub
rcl
repz
push
into
sbb
and
fdiv
mov
push
mov
mov
addr16
sub
mov
xlat
inc
leave
cmp
add
xor
outs
or
idiv
lods
sbb
mov
mov
xchg
xchg
mov
pop
mov
(bad)
push
out
jae
pop
xchg
xor
pop
xor
jbe
pop
pop
xor
jmp
fmul
add
mov
sub
rcr
push
gs
xor
ret
loop
daa
ins
sbb
(bad)
pop
push
clc
js
jg
jg
clc
lea
jge
mov
imul
or
ins
(bad)
js
and
out
mov
pop
pop
sahf
cli
addr16
sbb
shl
mov
pop
scas
mov
or
pop
xchg
sbb
out
sub
pop
sahf
jb
or
mov
fmul
or
inc
mov
add
mov
add
push
cli
or
push
xchg
test
test
idiv
ins
mov
sbb
rcr
into
aad
ss
sbb
test
mov
in
in
stc
mov
pop
gs
xchg
arpl
xchg
add
xor
sub
sbb
cmc
and
shl
inc
cli
dec
fstp
jge
jp
cmp
dec
push
jb
sti
stc
ins
push
bound
pop
mov
scas
cmp
sub
loopne
stc
aad
test
or
and
cld
ret
xor
in
les
fxch
ds
sub
mov
jmp
jb
dec
movs
push
ret
aad
jge
stos
push
inc
mov
aas
sbb
mov
dec
adc
rol
xor
push
dec
jno
out
jge
nop
scas
push
setno
(bad)
(bad)
mov
dec
mov
div
xor
sar
icebp
dec
test
add
test
das
or
and
sbb
lahf
and
ss
jae
mov
inc
(bad)
cld
inc
icebp
in
sbb
dec
jnp
repnz
fisttp
aas
clc
ins
(bad)
(bad)
(bad)
clc
fld
push
ins
inc
and
ins
lahf
xor
mov
jbe
add
mov
pop
cmp
div
movs
inc
adc
mov
retf
ins
cmp
and
das
xchg
mov
or
sub
int3
fist
outs
sti
scas
push
jecxz
ins
leave
xchg
fadd
stc
(bad)
inc
push
push
cmps
arpl
(bad)
push
icebp
aas
shr
gs
jo
fmul
(bad)
gs
lock
pusha
push
push
cwde
xor
sbb
inc
test
stc
(bad)
scas
in
js
enter
pop
pop
or
push
call
loop
mov
xor
neg
add
and
mov
ds
(bad)
ds
aam
xor
sti
xor
adc
int
cdq
lods
cs
int
jae
sahf
add
ja
sbb
test
pavgw
lds
fistp
sbb
daa
aad
pop
dec
aas
cmp
aad
movs
fistp
inc
mov
jl
add
pop
pop
dec
sahf
sub
fucomip
mov
lods
jle
and
jo
mov
in
jmp
cmp
hlt
xor
mov
fadd
add
mov
ins
shr
mov
js
jl
jb
cmc
neg
pop
stc
mov
scas
add
mov
xlat
sub
push
int
sbb
mov
repnz
dec
xor
mov
nop
and
gs
xchg
xchg
jmp
mul
cmp
xchg
sub
mov
dec
xchg
test
aad
mov
outs
ins
pop
xor
imul
loop
mov
fdivrp
mov
cmp
nop
les
lods
xor
push
jbe
fldl2e
jmp
data16
stos
xchg
cmc
jne
mov
dec
imul
sub
push
mov
aaa
fs
sti
addr16
out
inc
cmp
mov
imul
sub
mov
js
mov
lods
popf
or
addr16
mov
rol
adc
loop
xchg
fstp
pop
pop
pop
jne
jae
or
lods
dec
mov
in
in
cld
pop
imul
mov
adc
mov
xchg
loopne
es
into
sbb
mov
icebp
js
mov
leave
sbb
cld
dec
pusha
sub
mov
repnz
jp
ret
pusha
and
das
inc
and
add
fsubr
push
push
sub
sub
cmp
adc
test
mov
jge
or
xchg
lea
jmp
loop
push
push
xchg
jl
nop
cmp
retf
shr
aam
dec
xlat
mov
lods
xchg
push
mov
loop
mov
test
mov
stos
adc
xchg
pushf
retf
sub
push
fldenv
add
mov
pushf
adc
mov
sbb
int3
pop
mov
cmp
aas
repz
cdq
cmp
xchg
dec
xchg
loop
sub
cdq
jg
xchg
xor
pusha
enter
push
mov
jle
inc
daa
cli
xor
out
inc
xor
and
popa
or
in
in
jnp
or
mov
ffreep
mov
popf
ins
adc
fidivr
adc
aas
xor
inc
adc
sub
mov
push
jge
add
xchg
in
mov
jp
push
sti
and
mov
mov
movs
lock
fwait
scas
repnz
mov
add
mov
mov
pop
mov
cmp
mov
ror
and
cmp
jle
mov
ja
fucomi
jmp
pop
pop
xchg
rcl
push
jne
test
xor
push
repnz
in
aas
or
sub
shl
ins
popa
dec
stc
pop
push
shl
pop
cmp
(bad)
pushf
push
retf
leave
ror
or
inc
xor
lock
fisttp
(bad)
aas
sub
icebp
adc
lock
stos
in
pop
cmp
iret
or
loope
cmc
jle
fidivr
push
hlt
int3
jmp
xchg
jns
mov
mov
aad
xchg
arpl
add
jo
push
and
xchg
test
push
fcomp
je
jmp
cmps
dec
ins
mov
jg
nop
sub
cdq
sbb
loope
ss
xor
sbb
sub
sub
pop
faddp
repnz
test
daa
push
scas
outs
push
push
adc
push
retf
clc
mov
stos
jbe
out
and
push
repnz
repz
push
loopne
mov
adc
test
addr16
and
cvtps2pi
fbstp
push
outs
jg
inc
inc
xor
push
or
call
jmp
inc
sahf
sub
(bad)
jbe
sar
out
push
dec
enter
aas
pop
cli
test
arpl
dec
cmc
int
mov
test
xchg
(bad)
rcr
jns
mov
out
imul
(bad)
push
jmp
sbb
xlat
out
push
js
jb
add
dec
pop
and
out
dec
adc
or
pop
stos
cmp
dec
ret
xor
cmp
or
and
out
jmp
in
pushf
into
(bad)
jge
loope
xchg
lds
inc
jae
jne
adc
ret
xchg
into
enter
adc
jnp
mov
out
repz
add
add
jbe
push
addr16
neg
cmp
or
repnz
pop
shl
jo
test
data16
popf
xchg
sbb
es
xchg
push
rcr
xchg
leave
in
ret
sti
fs
pop
ins
sbb
adc
xchg
mov
aas
leave
mov
stos
fidiv
xor
dec
xchg
enterw
fimul
mov
mov
out
adc
fsubp
mov
cmps
out
scas
out
nop
adc
icebp
mov
push
scas
mov
cmp
ins
cmp
pop
cmp
jl
xor
jae
adc
jecxz
loope
pusha
not
dec
xor
and
addr16
add
and
mov
out
dec
loopne
mov
xor
inc
and
and
inc
repz
stos
sub
xchg
aad
and
and
inc
neg
xchg
xchg
mov
fistp
leave
sub
dec
rol
xor
dec
cmp
scas
movs
push
lods
test
adc
add
adc
ret
push
call
fstp
mul
push
mov
mov
jg
test
std
pop
(bad)
adc
mov
test
and
inc
dec
add
or
je
pop
push
sbb
rcr
jo
cwde
pop
xchg
not
int3
jg
mov
xor
out
inc
pop
stos
push
adc
xchg
bound
mov
cld
jge
fsubr
fisubr
adc
sub
ins
dec
sti
test
lods
xchg
aam
call
jp
retf
jns
cmps
int
adc
lea
in
add
push
xchg
arpl
(bad)
pop
in
sti
push
pop
pop
fild
movs
(bad)
xchg
test
xor
inc
fmul
fld
cmp
xchg
sub
add
stc
sbb
out
fs
or
into
imul
leave
mov
in
maskmovq
test
push
ret
dec
out
fs
push
sbb
out
ja
xchg
(bad)
int3
out
xchg
shl
(bad)
pusha
mov
adc
jecxz
xchg
xor
sahf
pop
bound
call
in
mov
mov
aad
sub
inc
hlt
repz
popa
(bad)
stos
dec
jo
jne
jo
fistp
pop
imul
dec
stos
lahf
mov
(bad)
lea
repnz
or
bound
and
cli
dec
push
ror
bound
cmps
icebp
loope
sbb
mov
xor
add
test
in
int
sbb
xchg
sbb
ret
jae
inc
cmps
inc
inc
jnp
push
stos
adc
and
out
test
add
lods
sbb
shl
inc
xchg
repnz
pusha
xchg
shr
int
lahf
xor
sub
inc
cmps
xchg
fidivr
mov
jo
dec
mov
jb
xchg
mov
out
lds
pop
pop
loop
jmp
mov
fdivr
xor
mov
shl
test
push
or
bswap
sub
(bad)
xor
jp
jb
int3
adc
xor
cmp
neg
xchg
xchg
adc
sbb
aad
jae
repz
js
test
popa
inc
je
popf
jnp
ss
les
or
jnp
jge
mov
xor
fsub
push
enter
sbb
dec
dec
loop
jg
pop
xchg
clc
ror
cmp
xchg
jnp
mov
jns
mov
sbb
shl
mov
mov
jnp
popa
(bad)
out
outs
stos
test
jne
je
shl
xchg
into
xchg
or
js
cld
iret
push
pop
jns
retf
shr
pop
xor
sbb
xlat
push
xchg
(bad)
retf
inc
dec
jo
sets
jg
or
bound
pop
cmps
lahf
dec
fdiv
mov
mov
loop
mov
fild
or
outs
shl
aam
add
iret
xor
pusha
pop
lea
icebp
in
in
enter
mov
mov
push
or
pop
lds
std
push
or
repz
scas
mov
divps
add
adc
mov
nop
jmp
mov
adc
and
xor
icebp
in
push
leave
js
stos
aas
neg
shr
sub
add
aad
lods
jmp
outs
les
outs
imul
rcl
or
(bad)
call
jb
xor
add
jns
push
movs
fs
aas
mov
outs
sub
pushf
jmp
daa
mov
xchg
ss
push
and
dec
mov
mov
int3
retf
xlat
in
xchg
and
inc
data16
push
jmp
out
out
mov
sbb
cmp
cld
mov
ror
ret
aad
mov
mov
in
push
lock
in
xchg
cmp
xor
cmps
lods
sahf
mov
xchg
or
les
push
scas
cmp
or
das
and
sar
pop
into
icebp
jmp
or
jo
lea
or
icebp
add
add
(bad)
jno
je
cld
add
lock
mov
jnp
dec
push
in
je
div
dec
push
ds
push
jb
sbb
fcmove
mul
cmp
cs
aad
jmp
jae
in
add
pop
mov
xor
mov
(bad)
or
jecxz
jnp
ret
jmp
mov
mul
adc
movs
aad
mov
shl
mov
mov
and
fcmovbe
mov
test
out
fisttp
ss
push
mov
jo
xchg
or
mov
and
fwait
and
mov
jae
add
jnp
leave
xchg
and
adc
stc
out
(bad)
and
jbe
push
stc
xor
pop
sar
push
aad
lods
imul
xor
sub
int
enter
sar
cmp
stc
jo
pop
retf
and
mov
fimul
cmp
scas
enter
shl
xchg
ja
mov
push
fadd
sbb
xchg
ss
xchg
rol
mov
cwde
movs
xlat
sti
inc
fyl2x
jmp
add
cmp
mov
cmp
and
sbb
scas
icebp
pop
movs
aad
cmp
jmp
(bad)
jecxz
inc
or
mov
pop
shl
enter
test
cmp
add
add
rcr
fwait
push
lods
mov
retf
cmc
mov
nop
inc
rol
xchg
xor
xchg
mov
aas
imul
arpl
inc
ret
scas
fxch
call
xchg
and
int
ret
imul
jo
lods
cmps
cmp
dec
mov
inc
rcl
mov
sub
or
mov
dec
jae
dec
add
cmp
ror
push
int3
cwde
es
jo
inc
inc
dec
cmc
std
xchg
cmc
or
xchg
adc
ss
in
jmp
jne
fsub
repz
or
or
mov
pushf
dec
rcr
jmp
imul
leave
push
aas
pop
xor
test
xor
mov
lods
mov
cmp
sbb
xchg
cli
mov
out
imul
and
ja
in
mov
jle
fisubr
or
dec
and
ret
jl
out
and
test
xchg
(bad)
push
adc
leave
repz
sbb
mov
or
mov
pop
and
call
fwait
pushf
jbe
add
mov
hlt
inc
hlt
and
sub
ret
pop
pushf
pop
dec
and
and
movs
movs
repz
out
test
imul
add
dec
cli
nop
push
aaa
jae
scas
adc
adc
mov
gs
das
lds
jp
mov
mov
int
dec
sti
lds
and
or
sbb
call
cmp
daa
in
test
adc
mov
lock
jp
and
int3
cld
push
gs
ror
outs
or
(bad)
push
jo
mov
and
jecxz
sbb
adc
mov
int3
pop
call
jns
mov
pop
das
lahf
dec
xchg
push
push
and
and
push
dec
pop
mov
mov
hlt
scas
push
sub
(bad)
int
sti
std
es
mov
jo
push
mov
test
ret
test
scas
xchg
dec
les
xor
push
push
mov
and
ret
in
ss
stc
inc
pop
test
xor
aaa
sub
shl
mov
xor
das
int
arpl
xchg
adc
dec
mov
daa
or
mov
jmp
aaa
test
test
jge
pop
bound
lds
mov
jne
adc
push
xor
pop
xchg
adc
adc
push
mov
add
pop
pop
int3
sbb
enter
mov
lods
popa
push
or
xor
pop
scas
or
outs
loopne
(bad)
xchg
mov
scas
lods
and
sub
stc
xchg
cmp
pop
jl
pop
dec
shl
loopne
cwde
jo
icebp
mov
int3
or
in
in
sbb
repz
add
test
xor
aam
ror
in
pusha
inc
ja
es
data16
shr
mov
inc
and
adc
or
(bad)
sbb
cs
out
and
sub
xchg
cmp
mov
imul
aaa
aad
mov
jmp
out
lea
mov
ret
cwde
xchg
and
lods
out
sahf
add
jb
sahf
or
repz
ret
in
push
push
mov
pop
push
out
imul
in
push
sub
mov
push
sub
out
js
jae
pop
pop
push
stc
(bad)
cli
(bad)
js
sbb
jns
lock
or
movs
sbb
fdiv
in
movs
mov
adc
js
fbld
jle
inc
adc
in
pop
add
enter
pop
fwait
mov
fistp
xor
ror
addr16
rcl
and
mov
sub
movs
xchg
inc
daa
les
and
rcl
or
leave
push
sub
fbstp
aas
aam
leave
xchg
adc
test
or
mul
rcl
jne
dec
xchg
repnz
pop
xor
xchg
push
push
pushf
bound
mov
mov
cmps
into
shr
and
mov
inc
xor
xor
fist
int
fild
data16
(bad)
ficom
inc
shr
test
xor
dec
outs
scas
loope
sub
jae
daa
or
stos
adc
cmc
sub
or
aaa
mov
sbb
sub
loope
push
js
pop
fdivr
or
fcomp
inc
and
loope
mov
mov
dec
mov
jecxz
ret
mov
icebp
sbb
cmp
fidiv
and
push
daa
out
jmp
push
fnstsw
cmps
inc
pop
mov
push
cmps
jge
iret
js
les
scas
dec
clc
mov
shl
(bad)
movs
ds
pop
int3
into
sub
ficom
int
xchg
mov
adc
push
je
mov
and
nop
sbb
xor
mov
push
or
or
in
jmp
in
and
clc
cmp
push
in
inc
stc
int3
xor
int3
test
(bad)
ret
loope
loopne
pop
xchg
enter
or
mov
sbb
bound
push
push
aam
test
pop
pop
scas
int3
or
jmp
sbb
mov
jecxz
sbb
xchg
sub
adc
adc
mov
jo
imul
mov
pop
les
push
test
pop
or
mov
sub
and
mov
add
dec
and
mov
push
sbb
rcr
mov
add
mov
cmp
fs
jp
sub
mov
xchg
mov
pop
ins
mov
pop
push
lods
or
dec
mov
dec
adc
jmp
inc
test
stc
movs
pop
xchg
pop
push
cmps
out
mov
jp
or
cmp
mov
jp
sbb
das
and
mov
cmps
ret
and
sub
dec
(bad)
jbe
push
aam
inc
and
mov
arpl
fs
xor
ror
mov
mov
jbe
mov
sbb
xor
dec
stc
daa
dec
shl
xchg
rol
xchg
cli
pop
(bad)
icebp
mov
fld
lea
shr
jo
pop
mov
pop
loope
add
and
jp
cwde
pop
xchg
mov
inc
loop
imul
imul
fincstp
xchg
mov
test
xchg
mov
ja
dec
dec
outs
pop
inc
fcmovu
shl
push
sub
mov
sbb
leave
or
fnclex
adc
es
jae
sub
or
push
pop
push
xchg
push
mov
sub
push
xchg
or
(bad)
xlat
push
in
ss
xchg
lds
push
fcom
and
mov
mov
repz
jecxz
or
out
call
add
sub
mov
xchg
mov
xor
in
cwde
pushf
outs
hlt
lods
clc
mov
(bad)
inc
cdq
call
bound
int3
cmc
xchg
cmp
ds
jo
jmp
rcl
out
push
jmp
pop
rcr
imul
ss
or
inc
jmp
jb
jb
sub
pop
mov
(bad)
and
mov
aam
into
mov
mov
fisttp
mov
punpckhdq
test
in
push
je
icebp
add
pusha
mov
pop
jle
sbb
jns
sub
mov
stos
mov
or
mov
jnp
xchg
add
inc
cmps
add
fcom
inc
sub
jb
in
xchg
dec
cmc
sub
fcmovnb
aas
jmp
in
and
mov
fcmovne
nop
and
nop
mov
jmp
xor
push
loopne
or
movs
ds
jmp
(bad)
jmp
fdivr
(bad)
fsub
fst
pop
sbb
push
ret
jg
push
das
sahf
int
xchg
cld
into
ins
or
and
or
add
sti
arpl
cmp
nop
or
loope
call
iret
in
xchg
mov
out
jmp
add
shr
sub
push
in
repz
ror
fwait
jae
mov
inc
out
inc
jbe
mov
loopne
cmp
inc
inc
ins
mov
popf
scas
cmp
jo
or
mov
lea
icebp
out
xchg
push
push
mov
jp
xchg
mov
cmp
dec
inc
jmp
and
int
out
enter
mov
sahf
dec
mov
push
jno
pop
dec
in
(bad)
jp
xor
or
inc
xor
aad
jle
outs
adc
out
test
push
xchg
jp
into
xchg
(bad)
retf
popf
aam
int3
inc
out
arpl
ret
xor
mov
push
bound
outs
mov
je
in
imul
out
or
(bad)
dec
sub
lea
neg
jo
mov
xchg
add
movs
outs
imul
adc
imul
xchg
test
fstp
shl
mov
pop
adc
rcr
jle
sub
into
cld
int3
jmp
mov
lahf
mov
jnp
retf
sub
jge
jbe
add
jne
imul
sub
lds
out
(bad)
in
sub
dec
sbb
daa
sbb
les
bound
test
out
inc
jmp
mov
mov
dec
xor
adc
inc
xor
imul
(bad)
and
pop
loopne
xchg
sub
jp
movs
push
imul
cli
pop
mov
fcom
hlt
cmc
sbb
inc
repnz
sbb
adc
mov
out
add
mov
pop
pop
mov
lock
shr
add
mov
or
and
jmp
dec
mov
(bad)
out
add
pop
sbb
pop
xor
fld
shl
inc
push
lock
mov
or
(bad)
mov
inc
(bad)
(bad)
fs
xor
jno
push
sbb
and
sbb
inc
pusha
push
dec
retf
pushf
mov
(bad)
jnp
lods
fsub
mov
fdiv
iret
loope
inc
mov
pop
std
xor
add
dec
or
push
dec
mov
add
inc
inc
les
sub
ds
xor
sbb
es
scas
outs
hlt
sbb
int3
pop
jp
mov
lds
pop
in
test
cwde
es
xor
in
sti
mov
outs
(bad)
in
cs
lock
push
pop
xor
mov
mov
xor
lods
dec
jmp
aad
mov
aas
and
mov
ins
pop
test
imul
push
dec
(bad)
add
or
pop
jno
sbb
mov
outs
test
or
out
in
leave
mov
jmp
push
cwde
mov
and
jno
pop
mov
jnp
jno
(bad)
rcr
sbb
cwde
outs
popf
cmp
inc
push
cmps
sub
adc
xchg
movs
sbb
sar
inc
mov
add
push
cmp
sub
call
pop
adc
in
imul
or
int
sub
arpl
pop
popa
lahf
or
sbb
loope
jb
lahf
cmps
loope
arpl
and
int
push
xlat
pop
hlt
xchg
movs
lods
or
push
cmp
push
stc
loopne
or
xchg
adc
icebp
jmp
push
popf
cld
(bad)
lods
push
leave
out
ja
add
jecxz
pop
xor
test
and
pushf
outs
lea
xchg
idiv
dec
inc
or
scas
leave
xor
mov
and
cmp
adc
cmps
jbe
fs
ss
jae
xor
sahf
dec
icebp
(bad)
jbe
jmp
mov
mov
mov
jbe
add
fsubr
test
mov
in
inc
dec
inc
pop
fcmovnu
ins
test
sbb
shl
ficom
dec
cmc
clc
jb
dec
aam
cdq
cmp
bound
mov
mov
push
sub
pop
out
not
xchg
enter
inc
add
fist
aas
retf
cmp
int3
fisttp
addr16
loop
mov
jo
cmc
xor
rcl
and
inc
inc
pop
cmp
test
mov
ret
sbb
hlt
sahf
ret
add
pop
jecxz
sub
xor
add
cwde
sahf
in
pusha
(bad)
das
pop
fiadd
lds
scas
jne
xor
cmp
xchg
scas
sti
leave
jae
fdiv
mov
ds
stc
movs
mov
jl
mov
lahf
dec
add
(bad)
aaa
js
inc
ds
add
jnp
pop
loope
pop
xchg
pop
jmp
add
pop
push
shl
push
int3
add
xchg
jo
outs
jmp
jnp
pop
jmp
scas
lock
xchg
cld
mov
ins
xor
sbb
push
cwde
mov
sahf
aad
aam
mov
jmp
imul
(bad)
sbb
push
daa
outs
mov
sbb
add
or
pop
add
push
(bad)
push
addr16
rol
stc
in
outs
arpl
jg
fs
sbb
js
jmp
mov
mov
sti
inc
mov
cmp
pop
retf
and
mov
test
aam
(bad)
mov
movs
test
test
adc
outs
out
inc
sbb
add
jno
or
pop
jmp
frstor
scas
mov
xchg
neg
push
cmp
xchg
xor
retf
in
int
sahf
push
(bad)
in
outs
movs
add
xor
jge
stc
mov
ins
push
mov
out
mov
sahf
rol
mov
dec
in
(bad)
or
inc
lock
pop
and
test
jne
add
sbb
pusha
scas
gs
mov
fisubr
lock
mov
pop
mov
inc
add
int3
mov
aas
lods
pop
mov
loop
int3
mov
push
sbb
mov
daa
jbe
addr16
shl
push
(bad)
aam
jne
push
pop
call
shr
inc
sub
shl
inc
push
pop
pop
pop
mov
arpl
xchg
out
(bad)
cdq
cmp
sub
popf
leave
jl
call
jmp
mov
jbe
jle
pop
jmp
test
mov
inc
js
pop
xor
or
addr16
test
jl
add
xchg
fs
inc
aam
cwde
and
pop
or
xor
xor
aas
inc
sbb
loope
loope
outs
aam
(bad)
push
rol
out
xchg
pop
adc
(bad)
xchg
dec
mov
push
nop
push
adc
pop
shl
mov
test
jnp
jle
loopne
cli
mov
cmp
dec
int3
jne
js
sbb
shr
adc
test
aad
sbb
out
mov
aaa
enter
aas
adc
cmp
xor
push
clc
test
lds
or
sbb
mov
popa
push
iret
or
test
adc
and
xor
imul
pop
sub
add
iret
mov
xchg
mov
cmp
psraw
sahf
(bad)
aam
or
mov
cmps
and
jne
(bad)
sti
(bad)
pop
pop
imul
mov
mov
in
stc
inc
add
retf
cmps
inc
sti
call
(bad)
daa
mov
les
inc
lods
popf
adc
movs
imul
pop
popa
xlat
and
icebp
push
pop
pusha
push
mov
mov
jmp
sbb
jmp
out
nop
sbb
enter
out
sbb
(bad)
push
push
out
sbb
pop
pop
call
add
iret
xor
ss
scas
mov
inc
leave
ror
sar
in
xchg
jno
arpl
arpl
sbb
shl
pushf
(bad)
js
inc
push
jne
inc
jae
je
out
jae
mov
pop
pusha
cmp
adc
repz
sbb
lock
(bad)
popa
jge
scas
dec
sub
cs
sti
jne
or
and
xchg
and
mov
mov
(bad)
cmc
cmp
xchg
or
pop
add
sub
jb
jmp
mov
or
add
shl
cmps
out
in
xchg
jmp
scas
jbe
repz
mov
fisubr
movs
push
test
(bad)
std
sbb
(bad)
sbb
out
in
js
sub
mov
in
scas
imul
in
xlat
stos
ja
jmp
(bad)
cmc
jl
xchg
(bad)
sahf
je
jae
lahf
scas
es
lds
xor
cmp
pop
xor
cmc
inc
loope
push
xchg
(bad)
sub
push
(bad)
adc
and
add
ror
in
mov
call
sub
int
lock
push
and
mov
loope
inc
pop
adc
add
addr16
inc
ins
mov
xchg
and
xchg
xor
mov
cmp
and
pusha
daa
dec
stos
loop
in
(bad)
pushf
stos
fldz
push
push
mov
mov
pop
mov
lods
pop
and
popa
jne
inc
fcom
pop
clc
dec
out
xlat
shl
ficom
shl
xor
cmc
clc
xchg
int3
mov
jp
or
stc
mov
sbb
inc
sti
aad
or
outs
test
idiv
mov
sbb
or
sbb
jae
sbb
mov
leave
lods
sbb
xor
cmc
push
jp
push
jne
pop
movs
cmp
xchg
mov
shl
shl
sbb
and
mov
loopne
add
lods
dec
jns
test
fcom
js
adc
pushf
inc
jns
call
fwait
rol
mov
(bad)
cld
inc
es
sub
sbb
xchg
out
in
fist
lods
fist
or
dec
out
(bad)
mov
int3
push
leave
lods
adc
cmp
gs
xchg
jns
fnstcw
sbb
rcl
cld
popf
push
clc
mov
cmp
cdq
mov
mov
icebp
pop
pop
dec
adc
adc
loop
mov
js
int
pop
jl
lea
pushf
enter
add
retf
shr
or
push
jne
retf
pushf
adc
mov
add
stos
sahf
dec
inc
sbb
push
ret
pop
push
loope
xchg
sub
jmp
mov
mov
xor
bound
jp
mov
fwait
sar
in
sbb
xchg
imul
mov
inc
inc
pop
(bad)
sbb
cmp
sti
movs
adc
cmp
stos
pushf
adc
(bad)
pop
clc
sbb
(bad)
xchg
cmp
and
pop
inc
fs
out
push
test
xor
dec
xor
nop
push
cld
mov
pop
(bad)
call
es
inc
hlt
pop
(bad)
jecxz
out
add
adc
(bad)
cmp
mov
mov
pop
push
xor
mov
xchg
mov
es
in
fsubr
sbb
test
cmc
jle
dec
outs
jle
cld
jmp
std
out
ins
rcl
movs
loope
inc
or
push
clc
xchg
inc
(bad)
adc
xor
aas
sbb
test
cdq
imul
fimul
add
das
cmp
mov
fs
pop
mov
or
sbb
xor
lahf
adc
lea
adc
cmp
adc
pop
jbe
mov
repz
mov
mov
mov
scas
pop
xchg
das
out
fs
cmc
sub
out
xchg
push
mov
mov
cmp
loopne
loope
inc
repnz
movs
fld
je
xchg
mov
xor
or
jl
test
pop
push
fild
repz
adc
inc
sub
add
adc
push
add
dec
(bad)
retf
(bad)
fisubr
out
dec
ja
data16
cmp
call
jp
cmp
jmp
retf
out
retf
mov
sbb
retf
mov
ins
aam
cmp
adc
out
xor
fs
jl
icebp
inc
push
inc
jle
push
xchg
pop
sar
adc
adc
mov
fwait
loope
repnz
fnsave
data16
jae
adc
call
addr16
pop
mov
sub
loope
rol
sbb
ss
sub
pop
cmp
nop
add
das
sbb
xchg
int3
mov
and
pop
jnp
mov
out
(bad)
sti
(bad)
xchg
popf
sahf
or
jbe
add
daa
in
jns
movs
mov
es
xchg
in
add
es
push
adc
jno
ret
(bad)
jbe
mov
dec
repz
les
jbe
or
cmp
adc
jg
mov
mov
mov
mov
stos
stc
xor
jo
or
popa
mov
xadd
cmp
clc
jg
data16
gs
lahf
mov
mov
jno
or
and
dec
mov
and
add
addr16
xchg
fdivp
bound
jmp
mov
mov
jp
je
jnp
movs
ror
sbb
inc
xchg
lods
add
retf
xchg
jmp
js
inc
inc
adc
pop
mov
cmp
jb
ja
cmp
xchg
adc
cwde
icebp
add
pop
repnz
dec
sbb
inc
mov
jp
inc
fidiv
lds
loop
push
retf
cmovle
int
jp
xlat
jp
mov
mov
scas
pusha
add
mov
mov
daa
jge
jg
add
ror
ret
xchg
stc
push
ret
push
es
push
cdq
dec
test
xchg
mov
inc
xchg
out
cdq
xor
inc
xor
inc
jne
pop
adc
mov
xor
aaa
cld
and
mul
push
jmp
in
imul
xchg
pop
loopne
push
test
mov
lds
retf
leave
mov
push
movs
lds
nop
sub
int3
cli
cmp
ffree
and
js
imul
pop
xchg
mov
(bad)
imul
retf
fs
hlt
lahf
call
loope
pusha
jl
xchg
outs
adc
jmp
jg
or
mov
ret
cmp
std
movs
or
sub
lea
cdq
sahf
xchg
aas
cs
xchg
sbb
adc
mov
and
add
and
cmps
mov
push
popf
ss
cmps
(bad)
pop
pop
or
dec
ret
xlat
add
repnz
call
jb
mov
and
push
push
sub
scas
lods
stos
sets
and
test
test
loopne
adc
xchg
(bad)
sahf
mov
movs
cmp
cli
repz
jg
addr16
(bad)
(bad)
pop
lea
imul
data16
popf
pusha
out
popa
aaa
or
push
sub
xchg
bndldx
pop
addr16
push
repz
outs
lods
mov
xchg
sbb
scas
clc
daa
or
stos
pop
mov
pop
bswap
cmp
(bad)
cmc
int
(bad)
cmp
(bad)
mov
loop
add
(bad)
(bad)
out
loope
push
xchg
imul
jge
out
arpl
mov
mov
pusha
in
test
mov
add
sbb
xor
pop
pop
fistp
ja
fisub
pop
push
push
leave
jge
je
cwde
int
nop
test
add
loope
call
dec
xor
mov
data16
retf
sbb
jbe
inc
es
(bad)
es
sbb
dec
mov
pop
test
mov
sub
loopne
mov
inc
mov
mov
jne
xchg
dec
pop
cmp
xchg
mov
lods
xor
out
jecxz
icebp
ja
mov
and
fsub
mov
xor
jae
cmp
leave
ins
mov
ror
adc
std
jb
(bad)
movs
(bad)
call
and
xchg
icebp
push
dec
push
push
mov
mov
cld
cmp
enter
sub
(bad)
xchg
add
das
ds
xor
aad
inc
sub
aad
cwde
movs
cs
cmp
dec
push
mov
add
pop
jle
inc
je
or
movs
nop
aas
mov
arpl
out
data16
cmp
std
mov
std
mov
and
inc
mov
arpl
fsubrp
add
bound
mov
sub
popa
dec
or
cmps
lods
arpl
push
leave
jle
pop
std
cmp
and
pop
fld
cmp
sub
lods
or
xor
sub
sub
jmp
cmp
(bad)
loop
cmp
add
mov
das
nop
or
test
scas
fwait
imul
cmp
ret
stos
add
cdq
mov
cmp
ds
cmp
xor
mov
(bad)
pop
ds
in
stos
cmps
sbb
fdivrp
arpl
mov
sar
and
inc
fidiv
jp
and
pop
lahf
fcomp
iret
cmps
push
lods
adc
ss
sub
mov
dec
mov
xor
lods
arpl
loopne
sub
xchg
xor
jecxz
push
or
pop
(bad)
cmp
or
fdivr
cmc
das
push
not
dec
pop
aad
test
mov
sub
xchg
sub
popa
add
les
aad
and
js
sbb
in
leave
cmc
(bad)
pushf
mov
mov
enter
sub
push
in
sti
ja
or
sbb
(bad)
mov
add
pop
or
fcomip
aas
leave
cli
pushf
idiv
repnz
cmps
pop
call
xor
mov
xor
push
xchg
pop
xchg
jle
inc
mov
ret
fcomp
push
push
or
pop
mov
cmp
cmp
mov
jmp
rcl
cmp
test
mov
mov
scas
adc
loop
ret
and
xor
sbb
(bad)
sub
xor
inc
and
and
fild
pusha
xchg
mov
pop
and
cmp
jb
jg
xor
pop
cmp
sti
test
xor
jo
sahf
or
mov
cmp
cli
das
test
cdq
sub
not
sbb
jp
ret
cmc
neg
xor
dec
pop
out
mov
out
fild
ss
pop
movs
in
push
dec
shl
mov
jp
push
lods
dec
nop
add
addr16
xor
leave
cmp
xchg
pop
(bad)
out
movs
xor
or
xchg
in
pop
xchg
ins
pop
xchg
or
popa
cmp
push
mov
push
int3
scas
lea
lock
push
add
xchg
into
rol
or
aaa
sbb
sub
aas
pop
or
clc
lods
fist
ficomp
mov
sbb
mov
imul
dec
jp
dec
xchg
mov
push
mov
and
popa
or
xchg
lea
aas
fistp
mov
fild
int3
(bad)
in
add
les
sti
dec
sbb
stos
fwait
outs
out
or
loopne
and
sub
adc
xchg
fsub
neg
xchg
enter
popw
fwait
and
sub
mov
test
stos
cli
mov
pushf
pop
imul
in
cmp
inc
ins
pop
cli
mov
mov
sbb
out
xchg
pop
out
out
or
push
push
test
sub
push
inc
aam
lahf
dec
sub
sub
enter
call
push
mov
mov
nop
mov
jp
jge
cmp
push
loope
adc
lds
or
ret
mov
sahf
add
jmp
movs
and
push
sub
sahf
and
stc
sub
sub
mov
jl
xchg
daa
mov
mov
jle
xor
push
and
xor
pusha
(bad)
into
popf
nop
daa
popa
mov
xchg
add
int3
idiv
mov
xchg
or
stc
sub
outs
mov
retfw
push
sub
repz
adc
ins
lods
arpl
(bad)
fsqrt
push
cmps
and
outs
jg
popa
jmp
aaa
xlat
pop
xchg
adc
sar
pusha
push
jle
iret
jle
or
(bad)
iret
scas
jmp
xchg
adc
int3
inc
push
mov
inc
push
fneni(8087
aas
dec
addr16
add
sbb
cmc
cwde
pop
add
pop
xor
push
and
push
lahf
sbb
xor
popa
push
and
xchg
cmc
in
fmulp
push
nop
jecxz
mov
hlt
or
mov
mov
cmp
and
mov
mov
mov
or
inc
add
arpl
mov
repnz
fldl2e
rcr
cmp
or
ja
xor
dec
pop
inc
sub
or
push
js
lock
sar
mov
loop
add
aas
add
and
cs
stc
test
enter
in
cld
fbld
movs
arpl
ret
daa
ficom
dec
psubd
sahf
add
push
lea
pop
rcr
aas
ins
adc
adc
jne
imul
ss
jmp
loopne
sub
outs
adc
cwde
add
idiv
jle
loop
mov
shl
mov
sti
push
and
aaa
(bad)
sub
mov
mov
mov
frstor
xor
das
popa
and
lea
out
aaa
out
jle
or
in
inc
movs
mov
mov
cli
adc
add
jae
xchg
fs
sub
retf
and
cmp
fdivr
(bad)
imul
imul
not
add
sbb
aam
jo
jae
mov
add
mov
xor
das
sti
mov
pop
lds
(bad)
xchg
push
inc
aaa
shl
pop
ja
rol
pop
push
(bad)
mov
sub
xor
adc
rcr
fwait
das
inc
lahf
push
lahf
pop
cmp
sbb
dec
pop
nop
movs
popf
pop
push
mov
add
push
leave
pop
jl
je
aas
push
xor
cmps
sub
pop
push
jle
inc
mov
enter
nop
ins
push
or
mov
sub
adc
test
call
fcom
add
xor
stos
jp
xchg
nop
(bad)
pop
cmp
xchg
or
ret
xchg
(bad)
cmp
push
cmp
adc
jae
cmp
mov
in
sub
cmps
or
mov
jbe
popf
jo
loop
pop
mov
cs
xor
daa
cmp
sti
or
inc
sti
in
and
(bad)
xor
cmp
pop
stos
mov
xor
cmp
add
test
je
inc
fadd
add
in
or
inc
jbe
add
pop
das
loope
push
pop
push
xor
pop
sahf
xor
mov
adc
inc
repz
call
jnp
mov
xor
jnp
dec
and
and
push
or
mov
cmps
or
loope
xor
xor
scas
xchg
rcr
fldenv
les
pop
mov
fcomp
das
test
adc
mov
mov
in
mov
sti
imul
xchg
mov
pop
jmp
pusha
test
xchg
sbb
xchg
xor
dec
bound
mov
jg
arpl
xchg
cmp
sub
mov
jg
push
jns
std
mov
fcom
popf
lods
push
lock
fcom
addr16
xchg
inc
in
mov
jmp
push
mov
out
in
stos
xchg
inc
and
ret
cmp
adc
and
icebp
aaa
add
jnp
inc
scas
mov
retf
sub
ret
push
mov
outs
adc
fisubr
sub
std
arpl
shl
and
cmps
dec
add
ret
es
jo
dec
pop
(bad)
push
enter
stos
push
push
movs
jg
jae
jno
inc
inc
mov
arpl
xchg
ds
jmp
sub
cmp
dec
neg
add
xor
test
(bad)
movs
cmps
int3
jmp
mov
and
pop
pop
ins
es
mov
adc
aad
sti
mov
sahf
aas
add
cld
dec
jp
mov
iret
mov
(bad)
js
das
das
(bad)
call
sub
jmp
lods
xor
mov
mov
(bad)
outs
(bad)
jbe
aas
mov
add
or
(bad)
add
out
pop
test
or
fs
and
mov
dec
mov
and
jecxz
popa
inc
mov
sbb
pop
xlat
(bad)
sbb
jl
fdivr
sub
jnp
movs
sbb
test
pushf
repnz
and
(bad)
xchg
dec
jl
dec
xchg
fs
(bad)
ins
adc
rcl
push
imul
out
xchg
mov
mov
sbb
das
xchg
xchg
daa
cmp
loope
add
das
ror
sub
cmps
add
ret
jp
push
or
or
scas
mov
push
adc
jg
xor
ss
inc
leave
push
cmps
pop
clc
in
push
and
xchg
jns
mov
mov
jns
test
sub
add
test
sahf
pop
jl
fimul
popa
push
or
cli
in
fs
xchg
js
js
adc
(bad)
in
pop
out
ins
jle
dec
add
pushf
mov
ins
jne
push
rcl
mov
fcomp
mov
or
outs
pop
or
mov
adc
cs
add
pusha
sub
daa
push
push
add
or
les
push
shr
mov
dec
push
fild
aad
or
push
add
push
fsubr
sub
adc
das
out
cmp
icebp
inc
pushf
mov
push
in
lea
(bad)
aas
cmp
(bad)
jno
mov
cmps
(bad)
fistp
pop
jo
jno
rcr
das
inc
add
dec
sub
scas
pop
aam
adc
cld
cmc
and
add
int
stos
xchg
les
jnp
leave
push
in
dec
xlat
(bad)
mov
test
dec
ins
jp
mov
imul
sub
xor
xchg
test
loope
inc
scas
jge
in
xor
div
push
cs
inc
jo
loop
rol
ss
dec
in
(bad)
xchg
cdq
fistp
in
cmp
add
(bad)
mov
aad
movs
in
mov
inc
mov
push
inc
arpl
sub
aas
test
ds
arpl
out
out
jle
dec
mov
push
das
jge
into
cmc
aam
cmc
xchg
sub
das
or
popa
fistp
jb
repnz
and
rcr
adc
cmp
mov
lahf
or
mov
add
leave
pop
ss
pop
sbb
mov
cld
outs
sbb
out
in
ja
push
out
retf
in
test
jl
and
mov
call
stc
in
cmc
cmp
out
jmp
movs
stos
sub
push
out
fisub
aam
scas
jl
fstp
xchg
ds
inc
lods
mov
imul
sbb
(bad)
div
jle
sti
xchg
push
repnz
loopne
(bad)
imul
jp
loope
lahf
push
dec
mov
xchg
and
je
ja
mov
and
enter
out
in
mov
add
test
cdq
(bad)
rcr
sar
mov
cmps
cmp
inc
mov
das
dec
lea
dec
mov
jge
mov
and
aam
test
mov
ds
cmp
jb
pusha
je
jae
je
or
je
xlat
cmps
pushf
inc
sbb
adc
xor
int
push
xchg
je
mov
out
(bad)
xchg
mov
in
das
mov
je
pop
inc
test
icebp
enter
out
mov
aam
xor
dec
out
mov
xchg
sub
(bad)
jecxz
ds
lock
movs
or
jb
mov
and
add
mov
popf
lock
mov
lahf
cmp
fld
jg
jp
mov
shl
xor
bound
in
xchg
pop
shl
ror
add
in
daa
and
or
(bad)
jle
into
movs
mov
aam
cmp
or
mov
repnz
sub
pop
jmp
lds
sub
mov
xlat
jo
retf
inc
and
mov
pop
xchg
into
(bad)
mov
in
daa
add
xchg
inc
sbb
jnp
sbb
iret
sbb
ja
adc
(bad)
inc
sub
(bad)
sbb
nop
loopne
and
addr16
test
inc
and
xchg
cmc
xchg
dec
inc
push
mov
add
sub
jl
xchg
pusha
cmp
aas
fidiv
or
mov
xlat
jmp
leave
aad
movs
cmp
jbe
cmp
imul
std
push
add
or
(bad)
jecxz
pop
ds
cmp
jmp
adc
jge
not
out
mov
xchg
jle
or
out
xchg
ficom
pop
enter
jl
push
mov
arpl
(bad)
jmp
repz
jae
aas
retf
sbb
xchg
and
fstp
push
lock
ins
hlt
fbld
out
sub
js
or
mov
push
pop
mov
cli
cmp
ins
pop
mov
mov
in
push
xchg
outs
and
js
dec
cmp
dec
xchg
cmc
or
xor
daa
out
in
jo
jmp
popa
stos
(bad)
push
icebp
nop
popf
xchg
sti
fbld
mov
dec
mov
(bad)
nop
scas
jge
inc
xor
mov
adc
mov
in
and
or
fldenv
fdiv
fwait
adc
push
mov
xchg
mov
fild
mov
dec
mov
cs
icebp
jp
or
dec
stos
xor
xchg
into
dec
sub
fnstcw
rcr
ins
cwde
pop
pop
lds
arpl
push
inc
nop
dec
jae
xchg
inc
pop
dec
sbb
(bad)
sub
jbe
xchg
pop
xor
ja
popf
js
fist
jbe
jl
and
imul
mov
icebp
test
add
int
imul
xchg
pop
sbb
out
sbb
push
adc
adc
daa
pop
xchg
ret
daa
rcr
inc
sti
stc
lea
sti
pop
add
push
and
pushf
dec
call
rcpps
pop
repz
mov
out
loop
mov
mov
jecxz
adc
dec
push
xchg
jp
sub
stos
pop
push
jo
fcom
pop
loope
sbb
repnz
neg
inc
cmp
mov
repz
pop
pop
fs
or
inc
rcl
(bad)
inc
push
inc
fmul
lds
test
jl
jne
sub
add
dec
inc
dec
cmps
adc
enter
(bad)
jbe
clc
test
jae
and
ds
add
push
xchg
(bad)
push
dec
pushf
aaa
scas
call
or
test
mov
dec
ins
lods
cli
pop
sub
outs
add
mov
dec
jge
ret
xchg
add
sbb
add
and
pop
mov
out
mov
jmp
ins
mov
sbb
adc
xor
aaa
shr
jmp
sub
lock
ins
and
adc
dec
or
or
hlt
push
cld
fdiv
push
xchg
sub
jle
push
scas
int3
sub
cmps
push
cmp
cmps
cld
popf
mov
pop
mov
call
inc
jne
jp
jecxz
dec
inc
daa
sbb
out
data16
xchg
mov
imul
and
retf
scas
or
test
mov
jbe
adc
pushf
push
sti
rcl
cmp
adc
outs
es
cmps
push
dec
arpl
sbb
jb
cmps
pop
mov
fstp
in
into
sub
push
xchg
aam
(bad)
mov
xchg
scas
adc
or
addr16
jecxz
adc
and
pop
and
mov
nop
lods
and
pop
ins
jge
(bad)
call
mov
mov
xor
mov
jmp
adc
inc
jns
pop
out
mov
inc
ret
cmps
jmp
mov
inc
fwait
adc
mov
dec
add
nop
push
std
inc
jo
addr16
stc
mov
mov
xor
test
jno
leave
fnstsw
dec
stos
sub
mov
stc
cmp
jns
clc
scas
test
jnp
fist
mov
arpl
jae
dec
(bad)
call
das
lods
pop
add
jle
pop
ins
sar
aas
in
loope
inc
call
loop
jle
or
mov
sbb
xor
adc
ins
fidiv
xor
rcl
add
mov
popf
pop
push
lock
jns
mov
pop
movs
xlat
pop
test
mov
mov
mov
fmul
retf
and
in
jne
and
fidivr
leave
xchg
aad
pop
leave
xlat
enter
push
jae
inc
mov
mov
pop
shr
xchg
scas
sub
mov
jmp
mov
cmps
add
pop
daa
gs
cmp
jne
inc
sub
xor
xor
jns
jle
rcr
xchg
push
and
mov
mov
jmp
dec
lods
leave
pop
mov
jge
or
mov
fisttp
mov
and
sbb
es
pop
xchg
xchg
dec
sti
mov
push
lods
aad
mov
mov
(bad)
xor
fsubr
out
pop
in
sub
stos
xchg
shl
(bad)
enter
js
cmp
mov
add
je
add
xor
cld
imul
or
int3
mov
loop
cmp
xor
mov
retf
fucom
leave
inc
addr16
adc
xchg
ret
fisttp
and
retf
cmp
mov
mov
movs
sub
jbe
add
lahf
and
sub
arpl
add
je
mov
mov
and
pop
cwde
gs
imul
sar
xchg
repz
mov
mov
pop
pop
pop
mov
and
inc
leave
sub
pop
pop
jle
call
ror
scas
and
shr
jne
add
ret
fwait
sar
sbb
inc
xchg
mov
mov
shl
test
xor
cmp
test
mov
or
add
mov
push
jp
ja
test
stc
inc
movs
pop
sbb
pop
push
bnd
sbb
leave
sbb
push
sbb
ror
cmp
xor
jge
cs
retf
ret
lds
mov
or
lahf
fwait
mov
xor
adc
fmul
out
fadd
add
or
scas
int
mov
(bad)
jne
xchg
push
rol
inc
jmp
sahf
retf
pop
shl
cpuid
hlt
mov
and
rep
das
scas
ds
push
jo
aas
inc
ja
adc
imul
or
pop
push
push
cdq
mov
xchg
mov
sub
push
adc
test
fild
daa
adc
fistp
inc
add
out
push
aad
xor
cld
repz
inc
sbb
xchg
and
lea
pop
xor
dec
idiv
out
push
lods
dec
mov
int3
retf
cli
dec
inc
sbb
add
pop
lahf
ret
ret
adc
jo
mov
sub
xchg
inc
sbb
mov
mov
inc
mov
rcl
cs
mov
mov
lahf
retf
jnp
push
ss
mov
clc
pop
cmp
je
movs
ret
cmp
sub
mov
inc
sub
sbb
test
(bad)
popf
mov
jmp
jmp
int
(bad)
cmp
fsub
jge
std
inc
aad
repz
add
pushf
inc
mov
call
sub
fs
rcl
mov
daa
daa
lock
xor
inc
sbb
cmp
ins
cli
dec
xor
(bad)
xlat
repnz
inc
or
cs
sbb
cmp
lea
(bad)
fadd
jmp
stos
jmp
pop
pop
test
mov
or
jmp
or
push
add
sti
loopne
int
imul
xchg
xchg
mov
and
scas
jne
inc
push
and
rol
xchg
mov
push
dec
push
jle
pop
(bad)
xor
or
inc
stos
es
mov
add
cmp
add
lahf
enter
add
push
stos
sub
pusha
fwait
ret
nop
inc
jg
sub
fisub
idiv
push
aam
mov
sbb
sti
xor
mov
mul
repnz
and
loop
mov
rcr
aas
stos
imul
xchg
aad
inc
xchg
pop
ins
imul
dec
and
mov
popa
dec
pop
out
adc
out
push
mov
mov
mov
push
stos
cmp
xlat
jmp
inc
mov
dec
xchg
pop
pushf
inc
addr16
(bad)
loopne
mov
push
dec
xor
retf
cli
sub
stos
dec
xchg
mov
fisubr
in
jno
and
ins
dec
test
push
ins
and
jae
push
imul
fldcw
icebp
mov
mov
push
inc
aad
add
pop
mov
xor
add
gs
in
xor
outs
mov
inc
and
aam
pop
mov
stos
addr16
je
pop
mov
loop
cmc
scas
or
pop
and
ins
push
inc
aam
out
lahf
xor
jb
jl
dec
gs
add
xchg
jmp
ret
mov
mov
inc
aad
sub
push
lds
mov
(bad)
imul
jmp
sbb
pop
add
pop
mov
pop
and
rol
enter
into
xor
and
scas
mov
pop
jnp
mov
lock
das
mov
test
adc
sbb
imul
dec
push
stc
inc
add
mov
jne
dec
lss
inc
rcl
(bad)
xlat
and
clc
popf
or
mov
lahf
xchg
and
sbb
(bad)
lds
jmp
xchg
mov
add
pop
push
jecxz
mov
jge
not
push
mov
lods
jb
jbe
push
xchg
sub
dec
or
gs
inc
(bad)
sub
cmp
mov
or
inc
mov
sub
cld
inc
xor
jle
push
fmulp
pop
nop
icebp
cmp
pop
push
idiv
jmp
push
fld
repnz
sub
in
sub
inc
cs
jg
xor
aam
fnsave
xor
test
fimul
sub
mov
hlt
push
mov
and
les
js
enter
xlat
ja
sbb
xor
and
inc
xchg
cwde
test
(bad)
push
cmp
and
xchg
pop
ss
jg
sub
adc
pop
cld
xchg
out
push
lds
mov
fcomp
pushf
inc
mov
mov
jne
sbb
aam
push
test
mov
sbb
out
add
das
aam
cmps
cmp
pop
pop
xor
push
cwde
jb
bound
inc
ret
pop
rcl
rol
mov
clc
idiv
in
add
aaa
cld
ja
imul
cwde
jo
xor
xor
mov
out
adc
or
fistp
push
sub
jne
adc
imul
jecxz
jne
dec
and
sub
(bad)
cwde
jns
stos
icebp
mov
mov
push
add
test
dec
mov
xchg
data16
adc
inc
shl
(bad)
loop
adc
dec
sbb
cwde
cmc
xlat
cs
data16
aaa
sbb
adc
jmp
out
sbb
push
pop
aas
pop
idiv
jg
test
test
and
es
jmp
pushf
jl
fst
pusha
aas
add
cmc
into
adc
shl
cmp
sbb
sahf
outs
push
cmpps
inc
(bad)
stos
dec
jg
outs
rol
xlat
cmps
mov
rcr
cmp
enter
inc
adc
outs
out
arpl
dec
ins
movs
(bad)
test
inc
add
stos
or
push
mov
aaa
jle
adc
call
scas
out
sub
xlat
xor
in
fild
in
jg
ins
sub
movs
lock
outs
or
paddusb
inc
dec
mov
cmp
out
fcomp
push
(bad)
call
loope
bound
cmp
dec
adc
sub
pop
mov
cmp
clc
stc
fadd
xchg
cmp
jno
inc
mov
scas
jmp
push
push
(bad)
cs
sbb
scas
xchg
ins
data16
push
test
in
in
push
inc
mov
cld
xor
neg
(bad)
dec
and
adc
mov
popf
setb
mov
add
mov
mov
fsub
sbb
add
das
test
out
add
test
pop
(bad)
mov
cmps
and
push
dec
adc
shr
mov
cmp
aad
dec
mov
xor
xor
loop
or
(bad)
fisttp
shr
icebp
sub
outs
call
cmp
cmps
dec
mov
xchg
inc
test
adc
push
mov
sub
mov
or
add
imul
(bad)
rol
bound
mov
dec
pop
mov
jecxz
sbb
movs
std
jl
addr16
mov
cmp
pop
into
lods
fstp
cvtpi2ps
lea
loope
sbb
mov
jne
movs
jecxz
pusha
adc
pop
out
pop
xchg
or
rcl
push
mov
and
and
test
retf
jo
in
je
in
mov
cmp
adc
sahf
clc
pop
pop
lahf
gs
fst
push
adc
loop
and
add
sub
push
add
mov
lea
enter
or
push
jge
mov
xor
xchg
xor
cmc
adc
xchg
sbb
dec
pop
push
cwde
stc
test
jl
pop
or
test
or
and
cli
jmp
add
lea
xchg
cmps
mov
shl
pop
dec
mov
pop
push
jbe
imul
cwde
and
jle
mov
loop
add
or
sub
packsswb
into
adc
scas
ret
mov
fild
pop
jne
dec
(bad)
sub
out
in
(bad)
mov
popa
js
jecxz
cld
push
aas
pop
shl
mov
cs
iret
data16
dec
push
dec
push
mov
aaa
movs
adc
pop
dec
enter
sub
push
test
dec
ins
push
jp
fadd
stc
gs
imul
aad
mul
jl
adc
sar
dec
cs
add
bnd
mov
inc
stos
adc
or
sti
call
jl
sti
dec
push
mov
fs
mov
popf
and
adc
test
call
and
stos
push
cmp
imul
mov
nop
fwait
imul
or
and
in
push
inc
adc
popa
loopne
add
sub
push
mov
data16
add
fwait
js
stc
fst
sbb
fdivrp
loopne
sub
mov
test
pop
mov
aaa
cli
pushf
xchg
push
outs
fmul
xlat
jns
push
or
mov
add
cmp
add
popa
fstp
lods
jge
inc
pop
xor
jmp
inc
je
cld
leave
mov
jo
xchg
daa
push
arpl
mov
repnz
cmps
inc
es
push
mov
mov
jb
jecxz
cmp
stos
and
cwde
ins
push
pusha
mov
nop
xlat
dec
movs
adc
xor
std
pop
into
add
sti
repnz
sbb
sub
push
inc
jns
retf
mov
std
mov
out
and
out
jmp
push
xor
fmul
or
xlat
bound
fcomip
(bad)
hlt
sub
adc
or
dec
cs
mov
stc
or
xor
inc
adc
test
lds
es
mov
lods
cmp
out
xchg
mov
adc
icebp
mov
push
push
test
int
cmp
not
adc
jae
adc
scas
mov
cdq
xchg
leave
in
cmps
frstor
jle
call
push
jmp
xlat
std
lods
js
f2xm1
ins
nop
push
in
pop
lock
loopne
inc
mov
mov
js
sbb
sar
xor
out
fwait
in
adc
shr
ficomp
lods
xchg
inc
ds
leave
cli
push
push
ins
inc
(bad)
push
ins
stc
into
(bad)
(bad)
enter
dec
mov
sahf
ins
xchg
not
cmp
addr16
lods
push
rol
std
jae
js
mov
sbb
xor
sahf
push
pop
sub
jno
outs
jmp
mov
imul
leave
mov
cmp
jp
test
in
mov
pop
mov
stc
cdq
or
dec
add
and
add
mov
test
xchg
cmp
bound
adc
aad
jle
sbb
sbb
dec
rol
lea
sub
adc
and
cmp
cld
cmps
push
sbb
push
inc
pop
mov
xchg
jnp
push
mov
or
cwde
js
gs
and
mov
in
sahf
addr16
dec
dec
sbb
xor
dec
xor
inc
(bad)
sub
es
mov
push
outs
push
mov
ds
out
mov
clc
into
add
dec
(bad)
and
call
pop
pop
pop
retf
rcl
add
cmp
mov
fimul
jmp
stc
shr
push
popa
and
xchg
test
mov
ins
sbb
jbe
iret
(bad)
jmp
test
ja
mov
ret
mov
out
xchg
adc
xchg
shl
jo
mov
jb
cmps
mov
repz
inc
mov
rcl
cmc
push
ucomisd
icebp
shl
repz
xchg
mov
pop
shl
jmp
aad
or
and
mov
cs
sub
(bad)
mov
and
retf
cld
sub
or
aam
xchg
jb
ja
loopne
jo
fmulp
iret
and
fisttp
sbb
fs
ins
imul
jl
cdq
mov
cwde
mov
movs
and
mov
aaa
pop
cmp
fmul
jns
outs
mov
rcl
sub
mov
xchg
mov
out
arpl
mov
imul
and
aad
push
mov
mov
test
push
iret
test
adc
cmp
int3
cmp
jae
add
jmp
mov
int3
pop
adc
cdq
jbe
mov
cdq
pusha
repz
mov
(bad)
fiadd
mov
sbb
fcomp
mov
int
inc
aam
xor
sbb
les
ds
std
pop
add
or
jne
cmp
inc
xlat
call
in
imul
pop
ins
test
repnz
push
jb
rcr
lods
movs
xor
repnz
xchg
or
add
mov
mov
jb
or
dec
inc
jl
dec
mov
pop
cmp
test
cmp
cmps
into
adc
jne
out
test
movs
js
retf
pop
movs
xor
das
imul
jnp
or
icebp
xchg
and
xchg
xor
push
adc
and
cmc
shr
sbb
jmp
lods
cmp
sub
mov
jle
das
pop
jmp
xor
mov
sbb
sub
sub
inc
pop
mov
mov
call
push
aam
(bad)
int
(bad)
daa
jecxz
test
jp
sub
mov
add
pusha
cmp
pop
or
fcmovne
in
or
rcl
sub
mov
test
fcomp
xchg
cmp
or
repnz
and
or
jl
int
outs
call
sub
retf
fistp
cmp
push
cld
aas
jecxz
out
or
out
retf
lahf
lods
cmp
outs
movs
cmp
pop
retf
(bad)
retf
xlat
sbb
xchg
sub
div
inc
or
test
mov
cmps
inc
jmp
jno
jb
je
sar
cmp
inc
mov
rol
ficom
add
aam
ins
frstor
jne
movups
test
fcomp
dec
sub
xchg
mov
popf
cmp
mov
movs
dec
lock
shr
aad
leave
pop
test
sub
sub
das
out
stos
mov
mov
push
add
loope
pop
(bad)
mov
pop
jb
mov
pushf
add
cmp
jle
adc
sbb
mov
push
push
popf
out
fiadd
test
adc
xchg
lds
push
retf
xchg
(bad)
ficomp
ret
scas
pop
sub
sub
push
xchg
xchg
add
nop
cmp
fwait
cmp
sbb
dec
or
xor
bound
mov
push
jmp
ret
push
or
jne
sub
pop
jmp
cmp
fild
push
sbb
enter
sub
in
(bad)
js
dec
sub
sub
fsub
push
push
cdq
xor
mov
xchg
lahf
cmp
jp
aam
push
push
fwait
arpl
mov
pop
pop
xchg
xor
ror
pop
cmp
push
jo
jl
dec
out
dec
sub
popa
adc
cmc
sar
sbb
iret
jg
test
ret
jmp
sub
gs
repnz
sbb
xor
inc
jge
outs
(bad)
mul
fiadd
cmp
lea
xchg
nop
jmp
adc
dec
mov
loope
mov
xor
hlt
iret
test
icebp
mov
push
in
shl
xchg
loopne
pop
stc
into
cmps
or
jmp
sub
icebp
daa
icebp
xchg
push
cmc
push
popf
stos
sbb
cs
in
mov
outs
leave
scas
push
xor
ficom
or
sti
xor
test
sbb
add
daa
jmp
mov
pop
pop
stc
adc
sub
cdq
daa
push
push
adc
jmp
cdq
jno
sbb
int
imul
cmps
ret
ins
adc
lods
dec
dec
push
arpl
jge
test
adc
sbb
outs
mov
dec
cmp
push
pop
stc
cmp
pop
mov
scas
clc
(bad)
xchg
lea
and
cld
fidivr
jge
mov
cmp
fs
hlt
test
in
cmp
cmp
inc
ds
movs
xchg
push
mov
xchg
leave
mov
fwait
test
shl
fcmovnb
ins
pushf
pop
pusha
add
mov
repz
cwde
sub
sbb
or
sbb
push
add
xor
mov
add
push
cmp
sbb
lock
push
add
clc
jmp
xor
jb
inc
cmp
jno
jge
popf
(bad)
stos
pop
fisub
cmp
jnp
outs
stos
sub
mov
push
cmp
jnp
jno
sbb
inc
push
pop
pop
sti
add
arpl
cmp
cdq
call
pop
cmp
test
mov
adc
xchg
scas
pop
pop
inc
cmp
or
push
ror
scas
add
and
ret
movs
and
sbb
fdiv
retf
cmp
cmc
jnp
ds
fiadd
mov
in
out
pop
xchg
aaa
retf
sbb
cmp
into
mov
adc
dec
pop
mov
mov
es
out
xor
mov
xchg
inc
jmp
in
pop
movs
fadd
jns
cmp
pop
sbb
dec
test
sbb
call
call
fwait
xor
loop
dec
hlt
bound
adc
test
icebp
mov
call
call
mov
nop
js
in
std
aad
cld
cmp
out
in
in
xor
aaa
lock
inc
xchg
stos
inc
mov
or
enter
push
call
cmp
and
xor
and
mov
xchg
mov
in
repz
clc
mov
pop
push
mov
repz
adc
jb
aaa
enter
mov
mov
gs
cmc
sbb
test
xchg
leave
pop
aam
jnp
stc
inc
and
jmp
jae
fdivr
add
icebp
adc
mov
xor
out
mov
adc
mov
out
pop
cmc
xchg
cmp
frstor
stos
out
xchg
inc
test
cwde
cmc
repz
(bad)
dec
xor
mov
ja
mov
mov
cmp
ins
jmp
push
fistp
sub
shr
xor
cld
mov
cmp
push
scas
(bad)
loop
fistp
inc
push
mov
cs
pop
dec
push
mov
mov
mov
adc
out
test
loope
into
cmp
sbb
mov
xchg
in
xchg
sub
mov
dec
jo
cmp
je
pop
mov
stos
leave
(bad)
call
pusha
sahf
scas
iret
xor
fild
ins
sub
jae
or
aam
push
cmp
jecxz
imul
jbe
push
push
das
inc
in
lea
fstp
or
(bad)
xchg
add
retf
push
loopne
xchg
scas
cmp
add
mov
sbb
loope
sub
(bad)
ror
xor
mov
js
push
cmps
imul
dec
ins
mov
loopne
pop
dec
sub
inc
leave
not
hlt
outs
cs
dec
pusha
test
sbb
aaa
stc
out
(bad)
sub
inc
test
push
pop
cld
adc
mov
addr16
dec
lds
mov
aaa
sub
mov
inc
pushf
push
aaa
jo
mov
mov
jae
scas
aaa
fimul
sub
cli
inc
or
dec
and
sub
jge
add
sub
cs
cdq
or
loope
(bad)
nop
dec
push
push
mov
pusha
iret
and
xchg
mov
les
inc
pop
mov
pop
push
mov
movs
in
or
inc
leave
or
sub
dec
push
jae
rol
(bad)
push
sub
cld
aaa
lods
sbb
popf
sar
aas
mov
int
pop
jmp
pop
je
or
dec
xchg
movs
jle
and
lock
mov
xor
cmps
pop
xor
std
xor
icebp
(bad)
in
sub
lods
stos
mov
out
push
jle
cmc
jb
xor
fidivr
sahf
ja
es
shl
cmc
cmp
inc
sahf
test
jo
test
outs
in
call
cmc
mov
mov
mov
xchg
lods
adc
pop
pushf
mov
enter
fucomp
sub
adc
mov
inc
out
jbe
push
rcr
fadd
xchg
mov
dec
pusha
inc
push
mov
dec
mov
popf
out
and
iret
add
fistp
ins
out
sub
test
out
sbb
mov
in
stos
call
daa
in
xchg
pop
popa
scas
repz
dec
sbb
(bad)
mov
outs
ja
sar
out
xlat
cli
sbb
mov
rcr
(bad)
scas
idiv
jp
bound
or
mov
test
jno
sbb
cmp
sub
data16
out
fisub
repz
imul
mov
cmp
push
or
xor
pop
pop
push
dec
aaa
jmp
cld
xchg
dec
add
add
push
mov
stos
scas
cmps
leave
mov
xchg
cmp
rol
push
jbe
mov
inc
xchg
adc
adc
sbb
dec
cmc
inc
movs
inc
scas
or
arpl
shl
xchg
into
dec
into
cmp
inc
cmc
lods
loop
pop
hlt
add
add
fucompp
mov
cmp
ins
push
jmp
loope
mov
cmc
dec
push
inc
mov
(bad)
das
std
mov
sbb
fild
cld
shl
inc
in
leave
leave
mov
jns
pop
mov
or
inc
int3
add
les
pop
int3
imul
mov
xor
aaa
sbb
xor
cmps
pop
or
jbe
xor
aad
rcr
push
sub
cmps
sbb
out
push
ds
mov
sbb
push
(bad)
sbb
pop
xor
(bad)
pop
int3
sbb
adc
mov
xchg
aad
xor
fsubrp
push
test
mov
addr16
call
sbb
popa
and
pop
pop
popf
in
lods
add
shr
jle
sbb
jmp
or
stc
out
mov
sbb
cmps
leave
in
outs
popa
cmp
es
push
call
fwait
push
and
call
push
enter
adc
loop
dec
int
mov
not
jle
cmp
or
mov
adc
idiv
imul
and
dec
jl
cmp
aad
ja
push
lock
pop
push
lds
cmp
cmc
or
inc
push
pop
(bad)
out
ror
call
fcmovnb
xor
inc
cdq
jmp
jne
std
cmp
in
xchg
out
ret
mov
adc
pop
adc
jp
sub
test
mov
movs
add
in
sub
or
movs
mov
sub
dec
lock
test
mov
push
mov
cli
js
xor
repz
inc
daa
sub
cmp
sar
inc
mov
fdiv
lea
jne
mov
pop
out
ja
ret
sbb
push
or
jle
cld
mov
mov
js
sti
int3
iret
mov
mov
jne
in
ja
push
inc
add
enter
xor
in
cmp
push
or
(bad)
rcl
lds
hlt
adc
pop
fwait
and
inc
xor
or
and
dec
pop
mov
push
nop
jg
cmp
popa
mov
mov
mov
push
icebp
adc
cwde
sub
jns
mov
in
add
sub
test
adc
mov
mov
jmp
or
adc
fs
(bad)
push
shl
jae
data16
call
ds
aaa
shr
inc
mov
jmp
arpl
arpl
jne
jno
sub
cmp
out
inc
loop
add
lock
xor
inc
mov
jge
(bad)
sbb
clc
or
jnp
ret
addr16
jbe
movs
test
std
adc
scas
or
iret
inc
and
or
(bad)
and
jbe
clc
push
bound
iret
inc
cmp
inc
retf
sbb
fs
stc
or
adc
and
aam
fld
pop
mov
mov
(bad)
cld
xchg
mov
out
xor
add
std
push
jnp
shl
call
adc
test
xchg
ja
daa
add
enter
push
repz
sub
mov
pop
push
fs
and
in
push
add
jecxz
mov
sub
test
lods
int
push
test
sub
loope
push
adc
dec
and
test
and
mov
sub
add
dec
xchg
mov
jno
jb
fst
xchg
push
aaa
fxam
sbb
mov
ins
popf
aas
mov
dec
xchg
aam
jge
ins
xlat
jmp
call
jne
mov
pop
or
std
lock
mov
sbb
xchg
push
shr
xchg
adc
or
mov
push
pop
cmp
mov
jmp
or
cmc
(bad)
dec
push
pop
je
adc
sbb
int
(bad)
lock
jg
mov
or
mul
shl
adc
dec
xor
pushf
sbb
mov
push
xchg
push
fld
lock
or
push
or
adc
lahf
xchg
push
cmp
push
mov
mov
pop
jbe
popa
xor
mov
fwait
aaa
jo
(bad)
push
xchg
loope
loopne
pop
jge
cmps
popa
inc
out
or
mov
push
dec
test
mov
loopne
jae
mov
push
pop
xchg
imul
out
je
(bad)
test
loop
and
arpl
sbb
inc
arpl
add
pop
arpl
mov
mov
sti
jb
xor
adc
inc
bnd
cmps
int
cmp
out
pop
imul
xor
pop
pop
aas
and
fild
out
dec
jecxz
dec
inc
aaa
jmp
(bad)
stc
mov
andnps
mov
test
inc
cli
sbb
pop
enter
push
mov
shl
mov
jg
pop
or
jns
mov
sbb
test
lods
inc
mov
rol
push
pop
aaa
pop
loop
xor
add
push
mov
pop
ja
mov
mov
mov
jns
repz
sti
mov
sub
out
xor
aad
dec
ret
in
jbe
gs
loopne
mov
mov
cdq
movs
jae
cld
popa
fmul
mov
mov
out
aad
push
mov
repz
push
inc
shl
push
iret
push
adc
mov
aad
jecxz
pop
mov
sub
stc
jb
sbb
dec
ins
xchg
push
xchg
xor
push
mov
repz
cdq
mov
das
mov
mov
(bad)
lock
sub
xchg
call
sbb
dec
shl
inc
lods
pop
jno
shl
and
mov
sbb
lods
or
adc
jecxz
sub
xchg
data16
push
(bad)
cmp
and
call
inc
push
inc
or
into
ret
arpl
push
mov
sbb
xlat
fucomp
cmp
fstp
mov
sub
nop
inc
jnp
rcr
ja
arpl
js
mov
aas
out
xchg
jecxz
shl
cld
dec
stos
lods
movs
outs
loopne
iret
ins
cmp
out
and
aas
xchg
or
mov
sub
xchg
pop
push
pop
jno
je
dec
mov
ins
inc
pop
mov
pop
pushf
fimul
jl
scas
push
or
push
mov
ss
and
das
ret
outs
jo
retf
pop
popa
adc
and
xor
lea
add
div
div
xlat
or
popf
or
or
xchg
xchg
xchg
test
xor
sub
cwde
in
inc
cmc
into
mov
xor
lods
adc
dec
mov
ret
jno
out
mov
mov
or
sbb
mov
stc
ds
mov
loopne
add
lods
mov
bound
push
mov
(bad)
cmp
sub
fcmovu
xchg
and
sbb
xchg
cs
mov
movs
mov
jo
mov
sub
iret
pop
outs
or
pop
cmps
sbb
sbb
pop
xor
jle
leave
cmp
pop
sub
xor
push
jg
xchg
pop
aas
push
fmul
xchg
xchg
outs
inc
xchg
add
stos
test
or
add
call
pop
sbb
xchg
xchg
adc
mov
movs
jmp
icebp
jbe
clc
sbb
loope
inc
mov
ds
shr
dec
dec
or
xor
xchg
pop
fwait
push
or
sub
les
(bad)
adc
shl
jecxz
mov
inc
cmp
pop
push
mov
mov
popf
hlt
xchg
push
push
sbb
dec
test
push
enter
clc
loopne
sub
pusha
mov
jl
or
adc
sbb
mov
mov
mov
jge
cdq
mov
into
or
xchg
fmul
sbb
mov
stos
imul
movs
cmp
addr16
rcl
aad
fcom
movs
cwde
and
aad
test
int
fild
mov
lahf
mov
cmps
sahf
cmp
and
push
pop
scas
inc
push
add
fdivr
fcomp
shr
push
adc
sar
in
dec
add
inc
dec
cmp
(bad)
sbb
nop
jo
push
jb
jae
cmc
cmps
lods
cmp
mov
and
xor
xchg
loop
xor
not
xor
jne
pop
lock
and
xor
xchg
pop
les
cmp
lahf
add
add
mov
dec
xchg
cmps
addr16
pop
into
jnp
add
sub
(bad)
std
xor
mov
and
in
enter
pusha
or
test
mov
mov
jno
ret
enter
fdivr
mov
and
or
call
mov
loope
add
mov
int
mov
mov
push
mov
(bad)
pop
dec
jge
sbb
cmps
mov
sub
mov
sub
dec
stos
sbb
ss
sbb
sbb
cmp
xchg
std
jp
add
push
jl
adc
pop
in
es
xchg
pop
fwait
xor
cli
popa
in
aas
nop
lods
imul
mov
adc
fdiv
test
or
mov
out
icebp
in
cmp
add
stc
mov
mov
cmp
icebp
stc
test
cmps
sub
fistp
rcl
dec
jne
daa
jg
mov
jl
shl
or
ss
stos
(bad)
retf
cs
imul
mov
xchg
mov
jne
ror
inc
popa
es
not
out
xor
adc
imul
dec
jo
cmps
test
out
imul
cmp
xor
xor
xchg
pop
data16
jne
xchg
mov
xchg
push
adc
popf
leave
popf
sub
mov
repnz
jb
pop
sub
mov
ds
sbb
push
dec
lods
dec
(bad)
lock
mov
sub
xchg
int
pop
jns
jl
mov
repnz
popf
stos
mov
sbb
sbb
cld
mov
jne
add
mov
mov
mov
(bad)
in
sbb
mov
mov
push
push
bound
not
push
mov
xchg
mov
stos
pop
inc
call
imul
ins
ins
cld
jbe
and
and
call
(bad)
sbb
leave
adc
icebp
mov
nop
xchg
pop
mov
nop
imul
(bad)
and
mov
je
sub
pop
jge
jnp
add
push
jns
add
jb
pop
std
xor
sbb
ins
pop
sqrtps
into
iret
movs
out
pop
cmp
push
fisttp
sahf
sub
bound
add
mov
adc
test
adc
les
pop
add
jnp
iret
aaa
mov
ds
pop
mov
ins
jecxz
outs
aad
nop
jo
mov
add
mov
mov
inc
ret
hlt
and
jge
pop
jg
aaa
repnz
hlt
fild
sbb
mov
mov
or
xchg
pushw
adc
jle
and
xor
sbb
faddp
sub
xchg
jecxz
sbb
das
and
jnp
cmp
sbb
jp
loop
sbb
icebp
int3
sbb
mov
arpl
popa
ror
and
cs
loop
(bad)
mov
push
inc
mov
mov
mov
scas
jecxz
jb
pop
mov
fnstsw
sti
ret
add
(bad)
cmp
enter
jne
arpl
xlat
test
into
push
inc
push
mov
(bad)
scas
imul
dec
test
loopne
xor
inc
push
xchg
shl
cmp
fcom
jae
and
aad
loopne
mov
int
std
inc
adc
xor
loop
sub
jnp
mov
sub
and
and
les
bound
les
inc
cmp
out
mov
addr16
out
push
inc
lea
into
outs
aas
jmp
imul
ficomp
pop
in
outs
cdq
dec
call
aam
ss
dec
std
inc
adc
push
inc
dec
mov
leave
lods
inc
inc
loop
jp
popf
xchg
(bad)
mov
cmps
dec
push
sub
icebp
into
cmp
ds
aam
pop
rol
ficom
or
pop
mov
scas
sbb
bound
aam
xchg
dec
xchg
in
mov
emms
nop
aas
ds
xor
mov
cmp
mov
mov
sub
mov
pop
dec
test
inc
pop
(bad)
leave
jmp
hlt
(bad)
movs
ss
int3
inc
xor
rol
jbe
fwait
cmps
inc
les
push
(bad)
lods
cvtps2pd
pushf
retf
(bad)
jecxz
(bad)
hlt
push
push
mov
push
in
dec
stc
fstp
adc
xlat
cmps
and
inc
movs
pusha
sub
movs
in
mov
not
jp
adc
push
dec
imul
arpl
lods
imul
hlt
mov
movs
ud2
and
loopne
popa
cdq
aam
push
hlt
add
or
fimul
outs
or
mov
xor
add
fisttp
loopne
out
fcomp
adc
push
mov
rcr
arpl
fstp
sbb
mov
dec
add
xor
push
mov
scas
std
sti
sbb
imul
xor
mov
(bad)
aaa
xor
jnp
jbe
repz
push
sbb
inc
scas
pop
push
push
ja
fsubr
mov
int3
pop
mov
or
and
adc
pop
sub
mov
fdivr
pop
adc
or
adc
ins
mov
addr16
or
retf
jg
adc
mov
xor
mov
mov
lds
int3
or
adc
push
sub
test
and
ficomp
fwait
rol
or
ret
and
xchg
mov
adc
movs
push
retf
repnz
jae
scas
cmps
push
cdq
loopne
push
adc
mov
mov
inc
inc
rcl
dec
inc
rcr
(bad)
jne
or
adc
pop
aaa
shl
mov
test
sahf
inc
repnz
fadd
inc
data16
cmp
xor
retf
pop
xchg
adc
repnz
pusha
es
pop
or
hlt
stos
xchg
sbb
mov
out
test
pop
rcr
push
repz
sbb
mov
or
dec
pop
xchg
sbb
(bad)
mov
or
mov
sbb
aam
call
rsm
adc
jne
adc
xor
outs
inc
sub
ret
and
lahf
mov
cs
push
push
call
adc
cmp
ds
cmovae
or
fsubrp
ficom
mov
fwait
sub
jmp
les
scas
dec
push
xchg
pop
add
daa
xor
push
push
push
sbb
mov
sub
jae
pop
cmp
(bad)
mov
ins
(bad)
xor
cmp
test
mov
nop
xor
add
push
jge
pop
arpl
daa
fwait
es
or
outs
jmp
xor
retf
adc
jmp
mov
mov
push
shr
mov
xor
cmp
stc
mov
xchg
sbb
mov
cmp
mov
retf
lods
sbb
inc
mov
mov
xlat
and
mov
adc
jbe
jno
bound
push
sub
xchg
fdiv
sub
xchg
sub
jne
lds
inc
dec
jl
adc
push
cmc
dec
mov
push
ss
jl
je
xor
out
inc
pop
scas
cmps
div
clc
cmps
loopne
cdq
(bad)
ds
inc
mov
lea
movs
inc
jnp
nop
dec
test
pop
(bad)
rol
test
dec
inc
or
cmp
push
iret
les
mov
test
inc
sbb
fbld
lgs
jge
fidiv
mov
inc
add
cmc
repnz
pop
ss
in
into
xchg
test
mov
sub
call
xchg
call
ffreep
fldenv
int
test
dec
inc
or
mov
mov
xor
mov
pop
cmp
fidivr
rol
jmp
call
pushf
fnstcw
call
(bad)
xlat
or
ror
push
mov
jns
push
in
push
and
or
test
jecxz
jg
cld
call
std
pop
jae
mov
movs
or
inc
cdq
xor
pop
enter
xchg
cmp
push
jno
fadd
adc
(bad)
sbb
push
int
jecxz
loope
leave
dec
mov
gs
mov
popa
inc
jne
repnz
rcr
mov
mov
aas
jae
dec
sbb
in
fnsetpm(287
fs
fucomip
jnp
ficomp
das
shr
push
mov
cmp
xchg
rcr
sbb
repnz
lahf
(bad)
cmp
int
push
mov
addr16
push
into
mov
(bad)
sub
enter
lock
imul
jmp
jle
test
push
sub
cmp
sub
xchg
fwait
sub
call
xchg
sahf
mov
gs
aam
fwait
clc
adc
loop
jbe
jae
cmp
or
shr
xchg
je
pushf
hlt
adc
ror
inc
retf
in
ror
stos
out
stc
ret
mov
dec
jnp
sti
rol
cmps
scas
adc
and
jl
loope
inc
sub
and
dec
xchg
outs
out
out
cld
fdivr
sbb
fstp
sbb
cmp
sbb
jae
and
sub
adc
mov
mov
out
xchg
enter
mov
push
mov
ins
shl
shl
call
cmp
lods
int3
loope
mov
into
mov
mov
dec
xor
int
mov
fistp
out
scas
and
xchg
pushf
pop
push
repnz
push
scas
pop
shr
and
and
pop
jmp
xchg
mul
push
xchg
mov
shr
arpl
test
int
imul
lock
popf
sbb
and
inc
(bad)
in
movs
mov
js
xchg
mov
mov
or
call
add
push
push
fstp
out
or
cmp
sub
push
cmp
sub
loopne
dec
aam
mov
stc
stc
mov
mov
loope
xchg
pushf
dec
sbb
test
jo
xor
push
mov
xchg
arpl
shl
mov
xor
inc
and
sti
xchg
and
push
add
xchg
sub
pusha
pop
cdq
pop
mov
push
test
(bad)
aas
or
mov
int3
sbb
sbb
icebp
cmp
cdq
xor
es
aaa
jo
mov
jb
inc
outs
imul
movs
(bad)
fild
sbb
pop
shl
imul
adc
xor
outs
js
sub
sahf
adc
lahf
mov
mov
mov
jg
pop
icebp
or
and
mov
or
inc
xor
push
xor
stos
fistp
fsubrp
mov
and
(bad)
jns
out
(bad)
mov
xchg
call
out
in
cmp
xchg
and
xchg
cmps
shl
mov
xchg
xchg
cmc
push
es
cmp
popa
and
jno
cwde
sahf
xchg
out
jmp
mov
test
cwde
aas
outs
loopne
or
out
dec
dec
outs
or
jp
in
inc
fwait
jnp
fdiv
fwait
mov
pop
loopne
js
or
cwde
mov
inc
and
push
adc
sahf
add
or
ror
test
dec
mov
(bad)
clc
mov
std
sub
ret
cs
cmps
(bad)
jbe
mov
cmp
je
js
or
lods
sbb
movs
push
pop
add
neg
in
push
out
jl
add
sub
call
outs
cmp
(bad)
lock
sahf
jae
dec
movs
pop
test
dec
ja
or
stc
iret
or
xor
mov
test
dec
xor
je
gs
push
mov
dec
aam
mov
jmp
call
outs
in
(bad)
xor
sub
mov
cmp
pusha
xor
aad
sub
mov
pop
xchg
or
cmp
fnstsw
xchg
lds
bound
(bad)
ficomp
(bad)
and
mov
imul
jmp
inc
pusha
cli
mul
pop
xor
mov
popa
test
and
sbb
sub
clc
cld
test
sti
pop
mov
xor
xchg
aam
inc
aam
inc
lods
mov
cmp
dec
mov
inc
mov
scas
and
outs
jp
popf
loopne
xor
out
mov
jecxz
and
dec
xor
mov
daa
cmps
(bad)
enter
ret
ficom
and
adc
(bad)
dec
cmp
pop
bound
aam
(bad)
jp
xor
adc
mov
sahf
dec
xchg
sbb
out
sbb
pop
pop
aad
dec
push
mov
adc
cmp
xor
movs
push
add
stos
xchg
push
adc
and
lods
retf
xor
add
dec
or
or
cmps
rcr
inc
pop
fld
and
inc
(bad)
loope
nop
call
int
mov
retf
dec
or
pop
cmp
xchg
sbb
push
mov
dec
(bad)
sti
dec
or
sbb
js
scas
aad
pop
aas
cmp
es
sub
mov
inc
push
inc
push
mov
repnz
push
fdiv
fisubr
data16
or
call
fldpi
mov
and
mov
jmp
push
sbb
dec
stc
jmp
inc
xchg
ins
jno
push
xchg
fidivr
or
mov
hlt
mov
push
dec
test
jne
ins
add
aad
or
add
xor
sbb
into
rol
inc
add
lods
stc
cmpxchg
hlt
fcom
pop
js
ds
lea
adc
dec
jb
jnp
sbb
test
add
xor
in
xor
stos
jle
adc
out
mov
adc
sbb
and
push
stos
or
jmp
aam
or
retf
jb
or
pop
and
xchg
add
pop
jp
addr16
pop
stc
jb
into
pand
not
sbb
jbe
add
mov
inc
lahf
aad
(bad)
out
mov
pop
ret
pusha
inc
adc
cdq
dec
(bad)
xor
push
in
push
mov
pop
xchg
sahf
inc
inc
sbb
int3
and
cmc
push
retf
not
push
cld
and
inc
sbb
leave
rcr
loop
inc
inc
lea
xor
push
adc
out
adc
push
inc
fwait
pop
xchg
call
mov
fwait
xchg
(bad)
cmps
jnp
movs
cli
imul
mov
pop
cmp
(bad)
ja
test
or
sbb
mov
in
jae
mov
outs
loopne
and
sbb
cmp
mov
cmp
push
cli
push
sbb
rol
jl
cld
rol
lds
push
cli
aam
repnz
push
xor
(bad)
pop
fnstcw
pushf
xchg
cmp
add
pop
mov
cld
sub
xor
push
repnz
jmp
test
push
adc
xchg
cld
cmp
mov
enter
and
in
xchg
ret
xchg
mov
pop
pop
dec
jmp
jnp
sahf
adc
adc
and
xor
jne
xchg
fild
push
ins
loope
ror
in
cli
adc
aam
in
push
fnstsw
sbb
std
in
cdq
add
test
outs
ficom
push
mov
sti
xchg
jmp
and
jge
push
sahf
lock
push
pop
sahf
movs
sbb
dec
and
mov
addr16
jl
jge
hlt
retf
push
(bad)
into
je
jbe
(bad)
call
call
mov
repnz
mov
jb
push
sub
jae
pop
pop
scas
xchg
cs
aam
pusha
jmp
and
and
hlt
js
fdivr
mov
xchg
sahf
mov
pop
xor
scas
jecxz
rcr
push
repz
test
leave
mov
dec
mov
repnz
stos
mov
sbb
movs
std
aaa
mov
ins
jno
cmps
xchg
fwait
lahf
in
push
cmp
shl
ins
fsubr
(bad)
adc
xor
ja
pop
inc
inc
ins
ins
sbb
sbb
jg
popa
call
les
pop
jl
jb
int
sbb
dec
mov
jae
jb
xor
in
test
mov
push
jnp
mov
pop
and
and
rcl
mov
aas
cmps
jns
mov
retf
push
movs
shl
jmp
mov
retf
stos
je
push
sbb
add
aam
fiadd
or
cmp
int3
iret
gs
xor
mov
ds
push
mov
xchg
clc
adc
add
in
mov
xchg
shl
or
mov
call
push
mov
mov
pop
and
xor
jmp
add
mov
fucom
push
or
push
mov
push
sbb
inc
fstp
sub
ins
stos
scas
cmp
dec
push
mov
mov
sbb
mov
call
or
lea
mov
test
mov
js
jmp
jl
pop
shl
and
cmp
inc
aaa
rcr
mov
pop
sub
push
dec
sub
neg
call
mov
pop
push
jo
push
jnp
push
pop
jnp
jmp
dec
adc
xor
pushf
mov
ret
dec
es
jle
mov
imul
ja
out
add
ins
sbb
mov
jno
fiadd
scas
cmp
mov
ret
pop
cmp
xchg
sbb
arpl
leave
cmp
mov
or
cwde
(bad)
jo
xor
jmp
retf
cli
icebp
lea
rol
ret
in
outs
mov
in
and
dec
mov
mov
inc
retf
push
lock
mov
inc
in
adc
enter
call
cmp
shl
dec
add
imul
sub
popf
mov
jns
pop
retf
dec
mov
sbb
sahf
cmp
sub
mov
lds
xchg
out
ins
xchg
dec
int
loopne
lea
fs
or
mov
add
je
sbb
rol
pop
sbb
jo
inc
(bad)
jo
cmc
xor
add
outs
sbb
hlt
jg
cdq
in
test
in
mov
push
push
mov
or
sbb
jmp
jmp
push
fsub
and
fcomip
outs
fisttp
jns
dec
mov
adc
enter
out
xor
push
gs
(bad)
mov
(bad)
jmp
lods
pop
je
rcr
cli
adc
push
imul
xor
mov
or
mov
or
or
inc
in
xchg
clc
add
xchg
cs
es
jmp
add
(bad)
scas
ss
and
ins
inc
jb
mov
inc
dec
sub
outs
push
cmp
add
mov
daa
jg
dec
sar
into
xchg
push
push
mov
pop
aaa
mov
adc
jmp
mov
pop
pop
jo
test
and
sbb
mov
pop
xchg
mov
mov
xchg
adc
sti
rcl
mov
nop
dec
frstor
pushf
fisttp
mov
jge
ret
and
mov
cmp
mov
mov
pusha
outs
movs
xchg
xor
bound
in
popa
push
(bad)
xchg
adc
clc
push
sbb
push
(bad)
add
add
fdivr
add
jne
enter
aam
cli
adc
outs
xor
mov
(bad)
sub
pop
fisttp
stos
fcom
repnz
iret
sbb
dec
pop
jae
inc
jg
or
call
inc
inc
mov
shl
stc
ds
push
icebp
ja
dec
add
(bad)
xor
add
shl
push
push
push
clc
vpcmpgtw
sbb
push
cdq
jno
mov
cli
ja
jmp
adc
push
push
mov
outs
neg
xchg
add
and
lea
cld
dec
mov
(bad)
aam
shr
dec
push
pop
push
or
popf
and
jo
dec
and
fwait
sub
inc
lea
in
mov
add
scas
jne
push
sub
div
jmp
mov
pushf
lea
shl
xor
dec
jnp
arpl
push
dec
or
inc
xlat
mov
popf
add
or
mov
xor
sbb
mov
mov
hlt
xor
xor
xchg
cmp
push
setge
inc
add
cld
jns
mov
mov
mov
push
jp
cmp
sbb
int
adc
test
cmp
popf
add
stos
sbb
xor
int3
test
test
out
and
mov
sub
neg
or
cmps
out
mov
mov
dec
inc
sub
mov
cmc
xchg
in
loop
pop
gs
(bad)
cmps
push
scas
std
sub
mov
xchg
xchg
pop
push
cli
sbb
(bad)
into
imul
add
dec
xor
xchg
adc
pop
jne
pop
push
retf
pop
push
mov
mov
inc
ret
das
sub
inc
mov
(bad)
call
je
aaa
mov
stos
jae
test
retf
cmp
out
push
inc
and
xor
and
xchg
jg
lds
push
and
pop
mov
mov
pop
(bad)
pushf
jmp
pop
jbe
cmc
mov
cwde
ror
out
movs
xor
int3
and
pop
cld
dec
dec
cli
add
push
lea
iret
shl
test
and
add
shl
cli
dec
xchg
movs
or
dec
xlat
iret
and
push
sub
retf
aam
je
xor
jae
cld
mov
jns
mov
xchg
ret
into
jae
stos
xchg
dec
push
dec
add
in
or
out
jge
mov
clc
sbb
pop
cmp
push
popf
pushf
rcl
mov
aaa
aaa
je
das
mov
cmc
mov
dec
pop
mov
leave
or
xchg
clc
adc
out
bound
mov
xchg
retf
push
push
or
pop
hlt
push
xor
ss
outs
jle
mov
xor
mov
mov
dec
and
push
jp
test
fisttp
push
and
leave
mov
pop
sbb
call
mov
or
icebp
test
(bad)
bound
dec
adc
inc
pop
(bad)
loopne
inc
add
push
xchg
pushf
jnp
ins
and
stos
jae
jecxz
aas
add
adc
inc
in
vcvtdq2pd
int
or
and
xor
mov
mov
mov
gs
push
arpl
shl
sbb
sbb
imul
mov
mov
inc
out
sub
sbb
xor
mov
(bad)
mov
fwait
std
pop
pop
mov
mov
mov
dec
rol
out
and
repz
mov
movs
pop
(bad)
in
retf
stos
sbb
or
and
imul
and
shl
cmp
ret
or
bound
js
fsubr
xor
jmp
mov
ror
pushf
repz
cli
mov
gs
cmp
int3
cdq
push
movs
xchg
mov
xor
pop
imul
test
jecxz
das
jb
push
jmp
and
in
(bad)
jno
add
inc
dec
loope
jne
fldcw
(bad)
sub
in
pop
inc
add
mov
dec
cmp
adc
outs
sbb
sbb
xor
cdq
in
stos
push
pop
inc
cmp
sbb
dec
fldcw
not
pop
sub
sbb
cmp
adc
and
mov
ins
or
loopne
dec
cmps
dec
dec
mov
mov
stos
sbb
push
aam
pop
leave
sbb
aas
cmp
jnp
jge
sar
dec
cdq
xor
ret
fs
dec
mov
inc
push
push
fnstsw
mov
unpcklps
xor
sbb
mov
inc
pop
mov
popa
push
fld
test
sub
xchg
mov
jmp
jne
ja
and
add
mov
inc
test
sub
addr16
sub
mov
and
mov
jns
(bad)
fild
pop
inc
or
call
imul
popf
pushf
in
and
adc
clc
popf
(bad)
les
(bad)
or
aad
xlat
js
push
lods
adc
xor
cmps
into
sbb
mov
add
pop
xchg
gs
cmps
nop
mov
in
xchg
mov
mov
push
imul
repnz
in
out
(bad)
(bad)
into
test
add
imul
(bad)
mov
xchg
cmc
pop
repz
and
push
dec
xor
outs
adc
scas
jg
add
retf
retf
jmp
popf
outs
sahf
pop
lods
enter
and
or
xchg
push
fst
pusha
or
fistp
rcl
jecxz
nop
repnz
xor
fidivr
inc
and
shl
add
push
pushf
push
or
mov
push
fild
(bad)
cs
mov
(bad)
lods
xor
sub
xor
iret
push
lds
fild
div
adc
or
dec
imul
imul
(bad)
gs
call
xchg
adc
fstp
jns
mov
jl
xchg
popa
cmp
mov
sub
mov
xchg
mov
or
sub
xor
ds
es
or
sub
jno
dec
gs
icebp
sbb
pop
jbe
mov
jns
sub
sbb
pushf
bound
mov
adc
(bad)
dec
inc
in
xchg
and
or
xchg
(bad)
mov
rol
mov
repz
(bad)
pop
mov
movs
fcom
lea
stos
data16
jl
and
cmp
dec
xchg
into
fucomi
mov
loop
mov
xor
push
sub
dec
xchg
adc
cmps
sar
das
mov
dec
pop
repnz
jae
rcr
test
xchg
daa
mov
sbb
push
or
scas
fmul
mov
movs
pusha
out
xor
repz
stos
push
or
mov
push
mov
ins
out
mov
popa
mov
pop
dec
in
mov
jmp
(bad)
call
sbb
addr16
cli
scas
cmp
pop
lahf
and
xor
cmp
cmp
mov
retf
inc
add
adc
xchg
and
jp
outs
jg
pop
or
jmp
jnp
fnstsw
cmps
call
mov
int3
icebp
fisubr
pop
mov
mov
out
stos
cld
in
sub
jl
jp
ins
(bad)
mov
pop
out
adc
mov
enter
dec
cld
fist
mov
push
xor
pop
cmp
sbb
lods
div
call
(bad)
lahf
test
push
mov
jmp
sbb
pop
sub
mov
mov
xchg
lods
jbe
test
loop
xchg
stos
sahf
push
mov
das
and
and
push
xor
ret
sub
fcom
bound
aaa
fwait
push
rol
mov
(bad)
arpl
rol
(bad)
xor
fcom
cmps
push
or
jmp
in
add
cld
mov
fldenv
sbb
mov
sub
push
in
add
pop
into
or
push
mov
push
jmp
jbe
rcl
add
gs
mov
fistp
push
inc
lods
cld
xchg
jp
js
sti
jns
jno
ins
mov
sub
mov
lock
add
std
push
mov
push
les
dec
adc
add
popa
mov
mov
or
fsubr
dec
sub
icebp
es
cmps
push
pop
or
addr16
loopne
je
jecxz
mov
jmp
outs
inc
mov
sbb
mov
sbb
jns
cmp
les
ds
xlat
shl
xor
xchg
pushf
or
fild
loop
jae
jns
in
iret
sbb
in
es
in
sar
rol
add
addr16
mov
cmps
iret
ret
push
add
mov
push
call
xchg
sbb
js
dec
or
xor
push
sar
pop
imul
mov
and
jne
fldcw
dec
or
pop
out
push
lods
popa
mov
ret
leave
mov
xchg
sahf
lods
clc
jo
sar
lahf
enter
xchg
xchg
loopne
imul
pop
test
cmp
jbe
and
call
cs
leave
ins
out
ins
out
xor
sar
stc
stc
mov
push
pop
out
jb
adc
sub
xchg
jmp
cmp
out
pop
and
cmc
pusha
push
int
je
(bad)
mov
push
lahf
cld
cmp
loope
in
mov
xchg
mov
pusha
pushf
adc
jg
and
sub
lods
das
cmp
pop
push
inc
or
mov
ds
retf
out
and
cmp
add
lods
adc
lahf
mov
add
cld
dec
stos
pop
xor
sbb
(bad)
add
and
dec
test
(bad)
cmc
bound
neg
sbb
adc
ins
cmps
mov
mov
adc
movs
push
jns
jo
push
sahf
cli
out
adc
cli
popa
adc
push
xor
sti
lds
mov
or
and
xchg
jo
inc
in
push
mov
bound
jp
xor
daa
mov
jge
pop
stos
sub
mov
(bad)
dec
mov
lods
ficom
popf
pop
mov
push
ins
sub
div
xor
cwde
dec
push
movs
fwait
mov
jl
into
inc
mov
sub
rcr
lahf
out
inc
fild
jne
outs
pop
xor
arpl
and
xchg
xor
mov
fsubp
aaa
sahf
pop
hlt
and
or
dec
mov
inc
mov
out
and
aaa
ja
movs
rcl
sub
dec
repz
add
cwde
sub
les
dec
in
sbb
dec
scas
jmp
sbb
push
inc
jp
das
jns
aad
jae
fist
dec
or
jo
mov
and
ins
ret
or
mov
mov
xor
xor
(bad)
sub
rol
mov
pop
(bad)
cmp
(bad)
out
xor
mov
arpl
mov
test
pop
outs
push
shl
add
stos
or
jecxz
sbb
pop
shl
pop
push
bound
fcom
cdq
inc
loope
cmp
test
(bad)
push
sbb
ficom
jne
pop
add
xchg
jmp
cwde
jne
shl
loopne
lock
(bad)
daa
and
sbb
sahf
cdq
pop
imul
push
test
push
rol
push
or
mov
push
push
push
mov
xchg
test
xor
fnstcw
repnz
xchg
rol
sahf
or
sbb
or
xchg
mov
cmp
jo
and
cdq
pop
cmc
push
out
or
sub
popa
je
and
cmp
out
ds
out
inc
mov
xlat
je
cwde
retf
mov
pop
push
xlat
aaa
add
sahf
cli
cmps
aam
push
mov
les
push
sbb
jbe
ret
xor
push
jne
or
xlat
hlt
sbb
ja
lock
leave
(bad)
int3
sub
jmp
in
or
jge
mov
cmps
cwde
push
mov
(bad)
cmc
dec
imul
fs
pop
fwait
aas
and
mov
xchg
lock
push
aad
shl
test
xchg
push
cmp
sub
ret
test
inc
and
std
call
imul
sbb
scas
mov
fmul
test
jle
ret
and
shl
pop
dec
pop
push
cmp
movs
push
sub
pushf
les
shl
cli
aaa
pop
bound
out
and
sbb
out
out
sub
jbe
sub
inc
pop
popa
pop
add
push
aas
test
xchg
mov
mov
lea
jg
sar
pushf
mov
call
retf
imul
jge
sar
call
mov
inc
inc
lods
arpl
das
(bad)
ins
jg
sbb
mov
mov
inc
les
dec
mov
dec
sub
aaa
mov
mov
dec
mul
jb
mov
push
inc
and
mov
mov
mov
inc
fwait
dec
add
test
aam
inc
scas
int
inc
adc
loope
sbb
push
push
jo
and
push
push
pop
mov
aas
daa
ror
call
jae
sbb
mov
dec
push
cld
je
in
sbb
jb
xchg
push
fcom
ja
fist
adc
sbb
sub
aas
dec
scas
clc
push
mov
cmps
pop
xchg
icebp
mov
adc
add
pop
adc
inc
mov
jmp
push
jns
jmp
push
bound
sbb
jmp
hlt
psllq
jo
(bad)
xchg
xor
dec
dec
cmps
and
sar
lods
push
push
or
add
les
ds
repnz
out
inc
xchg
aam
or
mov
out
mov
xor
fsub
inc
pusha
dec
cmp
repz
clc
fistp
fs
aas
jmp
movs
test
cwde
jge
xor
mov
mov
mov
xlat
scas
push
inc
mov
icebp
push
push
inc
or
and
popf
mov
leave
loopne
aam
mov
lahf
adc
sbb
ror
cli
clc
retf
in
inc
adc
out
pop
push
gs
jae
out
or
adc
(bad)
scas
in
mov
adc
addr16
add
jg
dec
sbb
and
popf
xlat
mov
(bad)
jnp
pop
cmp
pop
sbb
stos
push
ins
mov
popa
movs
adc
xor
call
mov
push
sar
adc
mov
adc
inc
sub
pop
push
addr16
mov
cdq
(bad)
cmp
shl
dec
loopne
and
sti
ins
stos
fsub
addr16
xchg
jno
push
cmp
lahf
daa
pusha
test
pop
mov
lods
mov
jl
into
or
mov
aaa
mov
in
inc
push
rcl
mov
mov
mov
out
or
(bad)
jle
mov
fldcw
sub
ja
mov
outs
and
mov
inc
fisub
or
adc
add
xchg
push
cvttps2pi
mov
lock
sub
(bad)
in
sbb
fldenv
dec
out
cmp
cwde
retf
jo
ja
pop
cmp
pusha
fs
dec
loopne
fsubr
int3
outs
sub
test
nop
nop
mov
sbb
cmp
sub
jg
sar
test
int
jge
mov
arpl
arpl
or
adc
or
mov
xchg
pop
jae
pop
out
loope
xchg
mov
retf
in
fnstsw
and
fs
jo
setge
cmps
sti
ins
sub
std
aaa
push
push
cmp
inc
shl
cmp
mov
ficomp
mov
scas
mov
push
fwait
jno
dec
push
cli
xchg
sub
jecxz
cmp
(bad)
jg
mov
or
imul
pop
jmp
mov
cmp
movs
inc
test
dec
ins
jae
(bad)
push
inc
out
push
pop
jnp
mov
mov
into
in
pop
sbb
xchg
add
jno
sbb
into
cld
sbb
out
push
mov
mov
cmp
jno
test
pop
ret
call
in
xor
cmp
mov
pushf
arpl
dec
call
je
mov
dec
cmp
xlat
mov
ret
imul
or
data16
ror
pop
mov
push
mov
jae
lahf
in
mov
xor
dec
mov
outs
sar
repnz
lock
iret
mov
jmp
dec
xchg
aas
retf
ja
mov
test
mov
adc
push
xor
cmp
mov
dec
jl
cmc
ror
ret
aas
jae
stc
jne
xor
push
inc
aad
pop
adc
mov
jge
lds
pop
lods
lds
lods
push
fs
dec
jle
pop
cwde
or
cmp
xchg
add
leave
jmp
aas
test
nop
aaa
sbb
stos
ins
add
(bad)
test
clc
outs
(bad)
pusha
mov
imul
test
inc
pop
mov
sbb
cmp
mov
shl
(bad)
test
push
int3
or
pop
in
loopne
(bad)
adc
sub
sub
sub
loopne
call
jns
xor
test
cli
lods
mov
sub
inc
push
or
loopne
jmp
popf
push
sub
add
adc
jb
pop
jae
ror
shr
sahf
cmps
mov
inc
sub
push
lods
and
sub
scas
or
push
test
aam
sbb
sub
push
loopne
dec
ret
mov
pop
push
mov
inc
mov
mov
pop
jmp
inc
adc
xor
(bad)
fldcw
sub
retf
mov
out
mov
arpl
jmp
gs
mov
pop
add
sbb
inc
push
jecxz
daa
lea
fdivr
test
scas
add
dec
xchg
out
adc
mov
pop
ret
(bad)
(bad)
cld
jns
mov
addr16
mov
arpl
pusha
xor
test
cmp
dec
push
inc
jg
push
xchg
lock
in
in
mov
cmp
jg
add
repz
lods
pushf
jno
mov
adc
or
loop
xor
pop
rcr
fiadd
cli
sbb
inc
or
aaa
sub
div
clc
and
cld
and
ss
fisttp
add
es
outs
add
inc
ja
jno
add
sub
jbe
and
push
mov
jg
dec
mov
mov
hlt
movs
dec
jae
xor
sub
imul
inc
xlat
push
lods
add
pusha
and
xchg
cmps
xchg
and
fcomp
push
in
pop
js
js
dec
push
xor
add
inc
dec
and
shr
test
loop
cmp
mov
call
jl
pop
mov
out
sbb
push
jno
sbb
sbb
cmp
iret
sub
ret
fbld
pop
mov
mov
inc
sar
pusha
pop
mov
pop
sbb
les
jns
push
jg
ja
and
mov
xor
jecxz
mov
push
jmp
scas
lds
xor
pop
cli
jnp
push
mov
mov
push
pop
retf
(bad)
adc
push
int3
and
pop
jp
mov
stos
mov
sbb
ret
(bad)
arpl
push
ins
call
pusha
leave
sub
std
rcl
je
mul
je
xchg
ret
mov
pop
dec
mov
popf
enter
jno
mov
push
xor
xchg
cmp
cdq
add
in
into
in
test
ficomp
fdiv
pop
or
fstp
mov
sub
dec
fdiv
imul
push
add
call
iret
or
fmulp
jns
loopne
cli
cmps
in
sbb
dec
inc
loop
(bad)
cmc
test
arpl
mov
(bad)
mov
shr
xchg
mov
in
cmp
or
push
loope
and
pop
sub
scas
fnstenv
(bad)
xor
nop
in
mov
aam
retf
push
test
dec
jle
or
out
xor
xchg
setns
aaa
sub
fs
or
mov
push
je
(bad)
mov
icebp
aad
xchg
retf
sbb
call
test
js
jae
icebp
shl
xor
or
mov
icebp
adc
mov
out
stc
mov
jns
enter
out
ins
jmp
cs
push
outs
xor
mov
(bad)
scas
sub
push
daa
stos
les
push
pop
mov
call
repnz
xlat
cdq
in
outs
or
mov
pushf
xchg
mov
imul
fidivr
or
and
cld
xor
sub
leave
mov
(bad)
sti
scas
daa
lods
(bad)
xlat
sub
adc
sbb
nop
ja
stos
xlat
xchg
clc
movs
das
ss
int3
add
push
cli
sar
inc
xchg
pop
add
sub
cmps
fcomi
out
adc
xor
lock
cmps
(bad)
not
add
mov
pop
or
bound
jne
inc
push
lods
xchg
ins
dec
or
mov
test
pop
sahf
pop
inc
out
or
shr
hlt
and
adc
(bad)
sub
and
aas
and
jne
or
mov
hlt
lds
inc
(bad)
das
inc
test
ss
call
mov
imul
xchg
add
jbe
push
push
add
mov
or
adc
je
pop
(bad)
jo
ds
jmp
mov
xor
aas
(bad)
and
inc
sti
sbb
pushf
or
and
mov
ret
or
sti
and
jmp
jo
sbb
mov
sbb
xor
loop
mov
stos
adc
scas
jle
sti
xchg
xchg
add
repnz
sbb
mov
out
imul
mov
push
xchg
leave
ins
mov
pop
lahf
lods
ret
xchg
or
out
sub
sub
mov
fdiv
cmp
fs
in
out
or
cs
aam
out
and
iret
pushf
mov
mov
test
mov
call
outs
cmp
shl
push
sub
pop
ins
cs
in
inc
push
xor
pop
stc
or
out
lahf
lock
jmp
sbb
cwde
bnd
add
out
dec
adc
add
sti
pop
out
jbe
mov
ror
add
adc
call
movs
cs
cmps
mov
and
push
mov
test
movs
repnz
xchg
dec
pop
inc
xchg
xchg
cmp
fsub
cmp
add
bound
nop
jmp
cmp
aas
das
add
mov
lahf
mov
lds
in
xlat
movs
sub
xchg
es
add
and
add
test
mov
pop
jmp
inc
pop
or
fstp
xchg
inc
sbb
sub
rcl
xchg
(bad)
(bad)
lods
fdiv
cwde
ins
mov
and
repnz
fsubr
mov
fmul
fnstcw
into
retf
dec
xor
xchg
ret
fiadd
add
repnz
fldcw
mov
scas
push
nop
repnz
cmc
jb
mov
rol
xchg
sbb
ins
pushf
in
out
inc
icebp
jle
test
aas
sahf
cmp
rol
imul
add
pop
aad
clc
not
xor
inc
hlt
xchg
sbb
sub
(bad)
mov
push
add
inc
mov
adc
cli
mov
loopne
inc
or
or
xchg
ret
addr16
out
push
xor
push
cmp
gs
ins
mov
add
rcr
ds
int
or
mov
jo
movs
cmp
inc
mov
push
fiadd
daa
lods
mov
mov
aad
jecxz
imul
movs
xchg
pop
(bad)
xor
sub
inc
push
das
mov
neg
sub
or
repz
mov
push
(bad)
fstp
lahf
std
vpopcntq
push
and
div
xchg
cwde
push
sbb
call
(bad)
int
dec
jno
lods
dec
adc
aam
das
sub
xor
mov
jl
aam
dec
push
lds
icebp
fldenv
push
xor
push
fldenv
mov
lock
cs
outs
sub
jae
adc
inc
fs
push
pop
or
lahf
mov
(bad)
std
jae
pushf
mov
shl
mov
dec
dec
adc
popf
outs
push
xchg
cmps
outs
and
jge
jae
dec
sub
push
push
int
mov
add
js
mov
cs
dec
imul
das
jg
int3
rol
int
fldcw
sbb
inc
sub
outs
and
jl
jno
pushf
jmp
jmp
sbb
and
hlt
jnp
cmp
(bad)
sub
lock
adc
in
pusha
inc
ins
nop
shl
add
sbb
bound
sub
repz
(bad)
loope
push
xchg
fidiv
gs
pop
add
les
repnz
xchg
test
or
jae
stos
or
push
gs
push
inc
inc
lods
jns
and
mov
js
sub
lods
jne
int
push
jg
push
mul
mov
ror
imul
inc
pop
test
pop
add
or
movs
ins
ds
adc
ss
push
popa
mov
and
dec
add
mov
push
ret
add
pop
int
sbb
(bad)
sar
inc
test
(bad)
sahf
mov
es
data16
pop
lea
mov
imul
aam
mov
out
or
add
and
xchg
(bad)
ret
addr16
jmp
mov
dec
and
repz
aad
pop
cld
push
jne
fmul
frstor
add
fadd
mov
inc
mov
push
shl
test
pop
aad
popa
mov
imul
bound
cs
inc
test
add
dec
(bad)
push
adc
rol
push
lahf
cmp
add
push
mov
push
mov
lock
cmps
xchg
add
popa
xor
mov
jae
mov
and
jb
ss
nop
(bad)
pop
pop
push
pop
add
sbb
jle
call
loopne
stos
fcomp
jne
inc
repz
pop
mov
dec
popa
ds
test
pop
and
adc
fadd
jp
jns
div
dec
es
sbb
adc
ja
jns
repz
mov
mov
push
lds
outs
test
jmp
aas
cwde
rol
js
jb
add
test
les
in
call
pop
mov
and
mov
or
dec
mov
pop
xchg
mov
or
mov
push
cmp
lods
repnz
mov
push
mov
pop
js
mov
(bad)
nop
xchg
sub
pop
sbb
and
pcmpgtd
ja
jne
loope
pop
push
lahf
movs
xor
stos
mov
ins
mov
scas
mov
shl
mov
sbb
add
sub
or
push
movs
mov
push
icebp
out
lods
(bad)
bound
ins
jge
in
dec
xlat
sbb
push
lods
stos
jb
adc
sbb
xor
or
mov
int3
mov
pop
and
dec
xchg
mov
(bad)
outs
call
nop
repnz
cmp
jp
pop
inc
(bad)
jmp
out
fisubr
mov
out
aam
xchg
pop
cs
into
push
sbb
stc
cmps
aas
dec
das
add
adc
pop
fidivr
jbe
shr
jmp
stos
jg
sti
mov
int
fwait
xchg
fild
dec
out
mov
push
out
mov
out
mov
and
fsub
in
mov
dec
cmp
mov
add
je
cld
mov
add
retf
and
aas
jb
mov
cmp
adc
movs
mov
arpl
dec
sti
in
xchg
movs
frstor
shr
lahf
pop
adc
pushf
jmp
fcmovb
cmp
push
rcl
hlt
in
test
jmp
daa
jecxz
xor
ja
jno
mov
ins
scas
adc
test
xchg
jmp
jo
inc
mov
push
inc
cs
fisub
or
ret
test
enter
mov
xor
movs
lock
(bad)
aad
iret
test
out
call
scas
or
mov
cmp
fldenv
fs
jge
into
or
dec
push
loopne
mov
mov
jp
and
rol
hlt
mov
inc
sbb
mov
sar
inc
mov
pushf
adc
fiadd
maskmovq
imul
dec
movs
mov
xchg
outs
movs
les
push
adc
pop
and
pop
mov
repnz
and
xchg
lods
mov
ds
leave
adc
loope
cmp
imul
lea
in
pop
test
iret
gs
jle
nop
pop
repnz
jno
push
test
iret
mov
ds
in
sahf
push
dec
dec
jmp
iret
scas
add
mov
xchg
test
ds
mov
cmp
adc
in
and
mov
je
leave
ins
jbe
mov
sub
sub
pop
sar
and
imul
mov
lahf
cmps
aad
das
shr
add
push
sub
sbb
xchg
push
mov
push
add
clc
lock
jnp
js
std
cmp
jl
(bad)
jmp
cmp
cli
and
jp
ret
jl
cmp
fucom
mov
sub
jne
mov
push
dec
out
test
sub
xor
mov
adc
mov
adc
jmp
add
popf
and
stos
dec
pop
(bad)
fnstsw
clc
addr16
mov
lods
scas
repnz
cmp
repnz
cmp
out
popf
aas
cmp
sbb
aam
pop
cli
and
outs
daa
xchg
inc
and
in
cmp
pop
jo
repnz
loopne
xor
mov
xchg
push
sti
mov
lds
pop
mov
fist
push
mov
push
out
push
adc
add
shl
cmps
jle
nop
fild
add
jne
out
xchg
or
pop
sub
cmp
int
or
and
cmp
cs
cmp
mov
cmp
add
mov
enter
sahf
mov
adc
jecxz
push
pusha
cmp
clc
sbb
xchg
ror
cmp
lods
sbb
add
sbb
hlt
out
arpl
das
addr16
mov
mov
ss
mov
scas
mov
test
cdq
sahf
and
mov
xor
pushf
xor
xchg
into
gs
ins
sbb
adc
(bad)
loopne
add
sbb
dec
jno
cmp
je
pop
es
jecxz
xor
push
bound
popa
movs
pusha
hlt
push
jg
pushf
sti
xor
jmp
dec
dec
iret
xor
dec
cmp
aam
(bad)
int3
loop
inc
push
sbb
fidivr
std
aaa
lahf
sbb
test
test
sbb
sti
fidiv
and
add
retf
jne
cmp
shl
call
sbb
shr
test
(bad)
scas
faddp
pushf
inc
pop
sbb
dec
xor
sub
pop
fist
sahf
das
icebp
gs
bnd
ds
lods
call
call
sbb
cmp
rcl
(bad)
rcl
sti
aad
out
in
inc
or
dec
mov
jo
dec
xchg
mov
jmp
in
rcr
mov
xor
and
push
cmp
adc
fild
popf
push
push
lds
cmps
jg
xchg
add
ret
mov
cmp
or
data16
inc
stc
pop
loope
xchg
mov
lea
sbb
jo
pcmpeqd
daa
out
adc
add
push
call
fnsave
mov
sub
mov
movs
or
out
inc
mov
leave
cmp
pop
retf
(bad)
adc
mov
xchg
or
mov
(bad)
adc
pusha
push
mov
(bad)
pop
sub
fist
repz
popf
xchg
sahf
jmp
cmp
es
fidiv
and
cld
jmp
mov
and
sub
xchg
clc
lea
in
xor
outs
mov
mov
popf
les
repnz
sub
inc
call
imul
xchg
mov
icebp
jecxz
mov
(bad)
pop
pop
movs
les
(bad)
ins
or
xor
cmc
jge
in
push
pop
mov
stos
fsub
mov
fild
imul
call
xor
jp
pushf
or
repz
fwait
cmp
imul
push
pop
fmul
pop
mov
inc
pop
test
nop
rol
outs
stos
adc
sahf
cmc
fwait
iret
scas
dec
lods
outs
dec
pushf
push
dec
xor
fcom
(bad)
mov
jecxz
(bad)
clc
mov
mov
push
mov
push
scas
jae
sub
rcr
fisub
dec
js
stc
bnd
ffree
or
push
xchg
pop
jmp
fstp
movs
cmps
(bad)
sbb
ins
ja
ret
lahf
mov
push
in
(bad)
sbb
mov
mov
test
push
cs
call
ds
sub
push
pop
mov
or
fimul
pop
and
add
es
ror
ja
inc
xor
sub
push
push
adc
push
cmps
aam
cdq
cmps
add
jae
enter
cmp
in
mov
retf
les
out
mov
dec
lea
std
add
xchg
sub
cmp
pop
cmp
xor
mov
push
cmc
adc
pop
sub
movs
dec
mov
dec
retf
outs
sahf
test
mov
sbb
inc
jp
mov
jae
xchg
rcl
or
clc
mov
jmp
push
lock
pop
mov
cmc
ficomp
in
inc
cmc
jmp
jae
les
or
(bad)
(bad)
into
ret
hlt
out
xor
out
aad
div
and
stos
out
cmp
movs
imul
sub
xor
mov
inc
sbb
int3
or
adc
outs
test
pop
and
sbb
enter
mov
out
sub
mov
cwde
enter
into
mov
mov
adc
mov
ficom
rcl
dec
push
cmps
mov
mov
in
mov
outs
or
jg
neg
cli
call
ins
mov
xor
pop
xor
cmp
out
push
push
call
cmp
cwde
out
add
cmps
sub
sbb
pop
enter
outs
xor
aad
sbb
data16
mov
push
mov
mov
push
pop
mov
cli
adc
mov
test
and
inc
mov
cmp
addr16
pop
lods
pop
inc
ret
mov
mov
leave
push
adc
out
sbb
clc
inc
cmp
int
out
cmps
push
add
ja
mov
aas
or
pop
outs
mul
and
cli
push
xor
sub
pushf
test
dec
std
adc
inc
out
push
and
cmp
jae
sbb
xlat
out
pop
outs
sbb
aaa
mov
lahf
inc
jg
push
xchg
xor
out
daa
cmps
imul
aas
and
(bad)
iret
sbb
jno
(bad)
out
pop
(bad)
in
ret
icebp
hlt
fsub
sub
pusha
mov
test
mov
rol
and
repz
aad
lea
stos
mov
or
and
sbb
(bad)
jb
test
leave
mov
pop
xlat
imul
or
jge
mov
pop
sbb
xchg
xor
in
pop
inc
dec
pop
test
dec
mov
mov
rcl
retf
jmp
ds
out
pop
movs
cwde
aad
out
push
daa
lea
loopne
sub
mov
mul
fmulp
sub
rol
in
fdiv
in
xor
lds
and
fmul
bound
arpl
sbb
in
dec
adc
outs
mov
dec
mov
movs
adc
or
sub
cmp
loopne
nop
adc
push
cmps
mov
popa
(bad)
cmp
or
(bad)
shr
mov
idiv
call
(bad)
dec
or
jp
mov
(bad)
out
mov
(bad)
cwde
ret
jmp
jecxz
popf
fisub
popa
fld
adc
lds
out
dec
push
cmp
or
mov
jg
inc
pop
jmp
into
movs
xor
dec
fnsetpm(287
addr16
inc
icebp
movs
ins
es
or
retf
xor
test
dec
pop
jo
lahf
pop
and
mov
call
mov
jb
call
fild
pop
xchg
rol
sbb
sub
outs
ror
ret
xor
pop
inc
cwde
adc
repnz
push
sbb
cmp
dec
jb
push
pop
fld
fdiv
xor
xor
mov
mov
inc
call
cmp
ins
add
cmps
pusha
mov
mov
xchg
cmp
pop
pop
aam
xchg
cdq
stc
dec
pop
xchg
xor
cli
mov
jbe
das
jge
mov
xor
pop
out
adc
and
sub
push
rcl
mov
or
or
and
push
add
xor
xchg
icebp
call
adc
mov
into
arpl
push
pushf
loope
jecxz
xor
inc
dec
fadd
pop
jecxz
ficomp
add
sbb
jg
add
je
jp
pop
pop
pop
adc
and
je
mov
int3
jnp
out
lahf
cmps
jecxz
(bad)
sbb
ficom
ret
sbb
sahf
ins
jmp
js
add
sahf
lds
aad
out
mov
inc
stc
sub
xchg
icebp
inc
sbb
sub
sbb
or
(bad)
mov
jle
adc
jecxz
or
inc
and
push
jo
cmp
aaa
mov
mov
inc
mov
es
call
lahf
inc
cmp
xchg
neg
sub
mov
jo
mov
mov
push
jbe
push
lock
push
sahf
push
pop
and
cmc
ret
or
imul
adc
scas
or
jle
pop
push
xchg
mov
push
or
mov
test
xchg
or
mov
xchg
sbb
outs
push
mov
inc
add
call
push
sbb
pop
jp
jle
div
cwde
pop
sub
aad
mov
xchg
movs
inc
fisttp
loop
dec
inc
(bad)
rol
mov
call
xor
and
sub
fstp
in
out
jo
jle
and
inc
xchg
sub
sub
aaa
daa
mov
or
cs
add
mov
pop
jmp
loope
cld
mov
pusha
mov
sbb
call
sbb
pop
sub
js
xchg
jmp
mov
xchg
pop
mov
lods
or
enter
xlat
pop
ss
hlt
add
ss
pop
add
retf
mov
cdq
daa
stos
enter
xchg
ds
retf
std
xchg
and
pop
fiadd
es
jbe
aad
mov
call
lock
adc
fucomp
mov
jp
mov
inc
mov
movs
pop
addr16
add
mov
(bad)
mov
cdq
dec
cmp
fist
pop
imul
into
mov
add
push
dec
pop
jp
sar
ja
jle
or
(bad)
shr
fisttp
sub
aam
fidiv
stos
cmp
xchg
lahf
and
ror
lea
mov
loop
mov
add
dec
pop
cmp
mov
idiv
jmp
lock
loope
pop
aaa
pop
pop
jns
jnp
jg
fsubr
push
mov
scas
mov
(bad)
ins
push
dec
pop
fbstp
mov
js
cmc
inc
rcr
mov
jle
push
cmps
shr
sbb
sub
cld
out
das
pop
ds
sbb
jmp
fbld
pop
lods
mov
or
fnsave
mov
mov
pushf
rcr
push
xor
xor
sub
push
mov
stos
aas
lahf
or
sub
je
xor
mov
imul
pop
cwde
mov
sbb
sti
sbb
jle
sub
push
test
cmps
jp
push
and
les
dec
mov
inc
jae
imul
mov
xchg
mov
cmp
mov
loope
mov
test
push
inc
push
sbb
or
retf
add
scas
xchg
loop
jmp
shl
das
(bad)
cmp
(bad)
enter
loopne
clc
test
jge
enter
mov
mov
xchg
inc
inc
or
push
cmps
test
sti
(bad)
jns
xor
xchg
repz
add
les
or
push
leave
pop
and
inc
and
retf
repz
scas
popf
and
sti
(bad)
sahf
lds
fcmovbe
pushf
or
ds
add
std
mov
add
cmp
xchg
push
push
sub
push
push
inc
into
pop
rcr
dec
jg
cli
je
ja
dec
retf
push
jb
mov
mov
iret
pop
test
rol
int3
cmps
push
outs
or
jmp
pop
xchg
(bad)
cs
mov
inc
cmp
fild
sbb
jno
les
aad
and
mov
jge
mov
or
jecxz
jp
mov
(bad)
call
xor
push
rcr
pop
outs
mov
out
stc
enter
mov
hlt
shr
ja
(bad)
fs
fdivr
mov
ret
jp
inc
sbb
sahf
stos
ins
mov
pop
test
daa
xor
and
mov
outs
test
popa
sub
xchg
add
sbb
mov
sub
add
sub
pop
bound
cmp
popf
mov
push
shr
push
pop
movs
es
jmp
cmp
dec
sbb
stos
mov
daa
pop
clc
inc
into
xor
scas
sar
sbb
fxam
jle
imul
lock
push
or
add
rcl
in
ds
outs
add
mov
dec
dec
dec
addr16
jns
cmp
clc
or
out
outs
jecxz
xchg
test
pop
inc
add
loope
dec
call
add
add
(bad)
sbb
int3
cmp
bnd
jb
addr16
and
xor
sub
in
xchg
out
neg
prefetch
or
les
jae
cs
mov
mov
ret
push
mov
cs
adc
int
mov
outs
cmp
inc
bound
lods
cdq
ja
sbb
inc
mov
and
sbb
leave
ins
cmp
mov
sub
jmp
inc
pop
dec
adc
xchg
addr16
xchg
mov
or
fsubrp
(bad)
pop
int
arpl
mov
dec
pop
push
fwait
loop
imul
sub
sbb
fist
and
aas
cmp
mov
dec
sbb
mov
(bad)
ds
lods
dec
call
jp
pop
and
scas
xor
outs
jecxz
cmps
(bad)
and
inc
pop
fist
iret
pushf
cmp
mov
(bad)
jo
inc
sbb
mov
mov
mov
mov
mov
mov
jl
or
add
out
call
aam
mov
icebp
mov
bound
aaa
push
push
dec
inc
xchg
push
aaa
repz
sti
pop
sub
mov
repnz
(bad)
cmp
into
jecxz
shl
add
hlt
push
xchg
sbb
or
rcr
dec
xchg
or
sbb
dec
mov
popf
mov
ror
ret
dec
pop
test
pop
jno
add
leave
cli
xchg
test
test
iret
xor
fisub
jb
nop
out
enter
ds
xchg
(bad)
cmp
cwde
scas
pop
jnp
shl
(bad)
push
leave
xchg
cdq
inc
stos
js
cwde
(bad)
retf
in
ja
pop
popa
mov
push
in
xchg
inc
hlt
jle
mov
dec
cmp
gs
in
iret
retf
in
ss
imul
pop
call
cmp
cmps
ret
xchg
lahf
push
dec
bound
enter
outs
xlat
aaa
mov
cmp
add
das
mov
sti
jecxz
jecxz
data16
cmovp
ins
popa
cli
mov
jbe
sbb
ins
add
sbb
mov
push
jnp
jb
repz
pop
rcl
mov
inc
mov
call
mov
adc
add
test
popa
jne
and
sub
shr
sbb
es
retf
xor
pop
add
out
and
retf
jmp
fdivr
movs
repnz
dec
mov
inc
xor
gs
stos
std
jns
xor
jb
outs
jb
inc
push
dec
mov
mov
imul
ds
add
or
jge
mov
lods
sahf
jne
test
cmp
adc
adc
push
std
ret
cmps
loop
repz
push
jne
and
ds
mov
or
in
cmp
mov
repnz
sub
add
shl
ret
mov
jbe
call
jg
or
sti
xchg
sbb
cwde
fisttp
sbb
into
fs
push
jge
scas
push
and
and
shr
jne
out
xor
jo
or
dec
cdq
push
pusha
mov
sti
xchg
cmp
mov
jno
popa
xor
push
cmp
xchg
dec
mov
cmp
jno
adc
retf
(bad)
in
popf
mov
aaa
or
lods
push
pop
push
sti
jo
data16
movs
xchg
inc
movs
jmp
push
pop
cmp
mov
out
pop
sub
mov
push
jns
enter
rcr
add
aaa
jle
mov
ds
or
adc
mov
jg
and
shr
or
dec
stos
cli
neg
addr16
xor
test
or
mov
out
and
mov
and
mov
mov
push
inc
icebp
or
dec
add
mov
aas
movs
sbb
and
cmps
les
test
pop
pop
cmc
retf
dec
jmp
or
iret
popa
je
pop
fild
and
cmp
adc
stos
retf
clc
test
inc
mov
shl
cmp
inc
jmp
cmp
cli
retf
gs
ficomp
leave
cmp
push
dec
scas
pop
movs
pop
retf
sub
inc
(bad)
fcom
inc
dec
loope
sbb
std
inc
retf
adc
je
jmp
add
xlat
mov
test
pop
sub
in
outs
jge
cdq
iret
mov
div
mov
jb
stc
xlat
sar
xchg
push
xlat
cli
into
outs
dec
pop
out
movs
cmps
push
mov
inc
cdq
or
xchg
add
xchg
xor
mov
mov
les
jmp
sahf
push
xchg
repz
mov
pop
sbb
adc
mov
iret
sti
arpl
sub
leave
retf
je
fxch
and
xchg
loopne
jge
and
stos
repnz
test
clc
cvtdq2ps
add
fdivr
call
jecxz
out
bound
pushf
bound
cmps
sub
and
mov
(bad)
(bad)
sub
jne
pop
pop
cli
push
xor
cmc
ror
sahf
mov
mov
pop
mul
aaa
or
sar
outs
pop
push
sbb
test
xchg
inc
xor
push
ss
leave
push
or
jo
jmp
inc
xor
sub
push
imul
jecxz
or
addr16
std
outs
mov
imul
shl
push
fidivr
cmps
xor
nop
jecxz
pop
(bad)
adc
(bad)
and
mov
pop
or
popa
call
jnp
mov
xchg
push
sub
ss
push
xchg
xor
cmp
into
push
adc
(bad)
call
in
addr16
push
and
xor
or
mov
xchg
xor
xchg
pop
sti
scas
aad
scas
push
dec
arpl
adc
inc
push
xchg
adc
inc
jnp
daa
jmp
jg
ja
cs
(bad)
add
js
mov
fsubr
or
jne
sbb
repz
test
ins
push
jnp
inc
add
test
mov
and
adc
rcl
ror
pop
scas
sub
(bad)
(bad)
mul
xchg
xor
mov
mov
cmc
cs
cmp
sub
jle
sbb
call
xor
nop
push
(bad)
hlt
je
jbe
pop
stos
and
retf
jnp
out
jb
sar
dec
aaa
dec
fisubr
sbb
push
add
aam
push
jae
leave
outs
adc
adc
sub
jecxz
jo
in
mov
icebp
cld
inc
cmp
clc
icebp
pop
fiadd
mov
daa
mov
repz
dec
into
pop
shl
xchg
cmps
dec
arpl
add
shl
and
ss
dec
cmp
xchg
mov
cmp
pop
ret
cmp
or
push
out
cs
add
or
jg
xbegin
cmp
icebp
inc
xchg
push
fld
jg
in
and
pop
test
div
mov
jle
js
push
lods
jle
jbe
push
hlt
mov
or
leave
push
jg
mov
or
aam
out
outs
out
sub
sbb
jg
ret
stos
pop
mov
inc
jmp
dec
add
mov
jmp
outs
pop
aad
pop
test
mov
scas
out
pop
fild
loopne
lods
lds
sbb
dec
xlat
pop
int
inc
dec
mov
ss
out
ins
lods
mov
aaa
cmp
add
xor
dec
ret
not
push
jl
adc
ins
test
dec
sbb
setle
cmp
push
cmp
aam
loope
mov
scas
xchg
cmp
pop
dec
mov
dec
out
inc
call
push
pop
adc
fbld
std
jmp
call
or
in
mov
xchg
dec
repnz
mov
ja
add
dec
mov
adc
adc
in
in
(bad)
arpl
(bad)
outs
mov
dec
movs
dec
sahf
js
cmp
dec
xlat
mov
jnp
xor
jl
idiv
fisub
cmp
mov
inc
jb
cmp
mul
pop
mov
mov
and
call
pop
je
in
mov
fsub
icebp
mov
push
xchg
lods
adc
ja
lods
xor
sbb
inc
dec
into
fsub
jno
add
adc
pop
or
or
jae
jno
inc
sbb
inc
fldenv
data16
retf
push
icebp
jnp
dec
sub
add
mov
mov
mov
iret
pop
jo
sahf
in
mov
dec
mov
in
dec
push
inc
sub
dec
iret
sar
or
or
xor
les
nop
mov
pop
mov
loopne
xchg
out
jl
dec
mov
stos
push
push
or
inc
add
pop
push
pop
popa
xchg
or
ds
arpl
dec
ror
jno
xchg
xchg
fdivr
leave
movs
add
push
scas
adc
fld
rol
cmp
sub
fidivr
test
xchg
ins
bound
push
jle
retf
dec
fistp
and
xchg
xchg
mov
jne
mov
sub
xchg
scas
pop
scas
dec
sti
add
es
ja
loop
bound
and
jns
jp
jae
enter
push
aas
je
ja
mov
jns
fstp
(bad)
xlat
jae
and
retf
loop
push
out
in
test
clc
mov
dec
mov
dec
add
sbb
call
or
sbb
loope
xor
fwait
out
inc
movs
ret
dec
dec
adc
push
stos
or
lock
sub
xchg
push
jmp
in
jle
in
(bad)
jg
and
jmp
sbb
daa
test
out
mov
push
xor
dec
mov
fld1
dec
addr16
push
pop
adc
fwait
dec
test
inc
pop
cmp
fiadd
xchg
mov
jecxz
daa
dec
push
out
adc
inc
shl
stc
fcmove
(bad)
in
adc
sub
jmp
pushf
lods
rcl
mov
and
or
(bad)
fnstenv
outs
iret
sub
cmp
push
scas
xchg
sbb
add
shr
rcl
pop
sub
ins
scas
jo
cwde
cmp
jecxz
pop
adc
fst
or
xor
fwait
and
aas
jp
mov
push
mov
add
sahf
xchg
adc
dec
hlt
mov
xlat
(bad)
loopne
lods
inc
mov
loope
aad
mov
push
lods
xchg
arpl
inc
cmp
jb
pop
cmp
dec
jns
and
sub
or
add
std
mov
popa
fst
jp
outs
xchg
xchg
mov
sub
jne
sahf
loopne
or
(bad)
jge
xor
cs
test
pushf
mov
push
mov
push
lods
sbb
aad
xor
dec
adc
std
jns
and
cld
leave
dec
fisubr
add
jmp
or
shl
ds
jne
jg
ret
in
scas
out
jbe
inc
mov
fisub
jmp
je
idiv
adc
ror
cld
cmc
mov
jmp
pop
fucomi
jmp
out
xor
adc
dec
jno
fiadd
inc
imul
xchg
addr16
call
repnz
or
jno
inc
repz
sub
cmp
int
loopne
push
and
sti
jnp
pusha
test
cmp
cmp
mov
hlt
jo
push
icebp
jno
in
xchg
daa
mov
pop
(bad)
in
aaa
out
fwait
or
xchg
fs
xchg
sbb
adc
js
gs
pop
ja
push
add
xor
fsqrt
and
jmp
push
stc
jmp
add
sbb
sti
mov
inc
mov
pop
stos
push
push
les
xchg
sbb
pop
in
fsubr
mov
add
sub
sub
jbe
ss
push
dec
es
and
push
inc
xchg
nop
dec
loop
lds
imul
inc
xchg
cmp
mov
pop
sub
push
push
sbb
sar
and
cmp
call
repnz
sub
popf
out
imul
mov
hlt
loop
std
dec
push
cmc
cmp
mov
test
pop
inc
pop
int3
fld
ret
mov
jae
adc
(bad)
sbb
mov
test
mov
push
sbb
popf
sbb
or
clc
jp
sub
stc
pusha
lods
inc
xchg
dec
cs
xor
fdivr
(bad)
mov
es
call
and
mov
popa
sbb
fild
inc
sub
hlt
inc
mov
mov
mov
out
mov
call
cdq
jg
arpl
or
dec
pop
imul
aam
sub
ins
mov
inc
xchg
mov
sbb
fist
(bad)
cmp
push
push
scas
repnz
sbb
cmps
imul
jo
xchg
in
pop
retf
cli
lea
aaa
es
retf
add
sahf
sub
dec
xchg
pop
cwde
pop
pusha
jnp
pop
cmp
cmp
mov
xchg
sbb
push
stos
out
movs
fs
sub
fidiv
aad
cmps
mov
sbb
xchg
and
and
hlt
jg
out
mov
push
mov
imul
gs
lods
adc
scas
repz
popa
arpl
movs
lods
jge
js
enter
jp
pop
rcr
add
rcr
loop
pushf
pusha
xor
pop
out
lock
into
sub
mov
mov
cmps
loop
and
cld
retf
std
sbb
stc
cmp
jbe
jno
or
cli
dec
pop
push
repz
scas
and
or
fwait
mov
jmp
or
(bad)
sar
js
mov
or
xchg
cmp
or
mov
test
adc
js
xchg
jb
mov
stos
cmps
int3
push
mov
pop
or
fisubr
mov
fist
add
and
or
sti
push
mov
leave
pop
or
mov
popa
mov
xchg
les
add
mov
ret
ja
std
xchg
push
test
mov
cs
or
neg
or
out
cmps
dec
scas
lea
sbb
add
loop
mov
inc
xchg
mov
pusha
mov
aaa
jle
dec
cld
out
(bad)
mov
sbb
dec
cmp
inc
test
movs
rcl
pop
add
jae
xchg
in
mov
imul
cli
push
stos
xor
std
cdq
pop
int3
xor
xor
and
dec
or
js
in
add
mov
pop
pop
adc
pop
xchg
cmp
mov
adc
jle
jle
int
add
imul
cwde
mov
rcr
dec
add
cwde
(bad)
pop
jge
pop
cmp
cmp
pop
out
(bad)
push
pop
adc
mov
into
cmp
out
cdq
js
push
and
fnstsw
ss
jnp
daa
cmps
mov
mov
and
cmps
mov
rcl
icebp
cmc
inc
dec
mov
neg
add
ins
pop
jb
inc
or
pop
adc
inc
push
inc
iret
scas
inc
xor
cwde
xor
jmp
jg
lds
and
and
retf
daa
inc
push
stc
lahf
dec
xor
ja
lahf
and
(bad)
popf
pop
xchg
mov
nop
mov
mov
mov
add
jle
push
cmp
mov
(bad)
xchg
neg
sahf
ss
sub
into
add
pop
lock
mov
xchg
test
jmp
in
and
add
loope
das
sub
addr16
ins
imul
add
retf
pop
js
sub
pusha
cmp
jp
aas
xlat
popf
js
inc
push
and
cs
das
jcxz
or
(bad)
adc
push
lock
cdq
jmp
retf
or
mov
les
(bad)
in
lock
jns
push
or
adc
std
ins
push
push
mov
cs
sub
xchg
mov
push
cmp
mov
and
jmp
popa
dec
push
loope
mov
shr
lods
mov
ss
pop
xor
fwait
dec
sbb
add
add
and
xchg
mov
and
leave
cld
push
jmp
into
test
stos
xor
stc
xchg
pop
js
pop
sbb
outs
div
call
cmps
fwait
sub
xchg
inc
mov
jg
mov
lock
shr
lds
scas
mov
jns
sub
mov
stos
jno
or
cmp
sbb
div
or
rol
shr
or
(bad)
(bad)
cmp
dec
sahf
mov
xchg
xor
cmp
push
mov
push
les
sti
and
test
nop
sub
xchg
js
(bad)
sar
aas
nop
push
call
xchg
push
xchg
(bad)
fimul
push
hlt
cdq
ret
call
jp
jg
mov
jno
adc
fnsave
(bad)
fsubr
call
out
pop
cmp
cmp
pop
sbb
cmps
movs
test
xchg
mov
fisubr
fimul
pop
int
mov
or
fnstsw
cmp
jbe
data16
cmc
mov
adc
(bad)
cld
jmp
mov
push
cmps
push
repz
popf
xchg
ins
shl
add
std
sbb
mul
fcmovnbe
fdiv
mov
das
aaa
out
jle
cmps
inc
and
pop
jp
pop
stc
fs
mov
push
or
cmps
pop
inc
pusha
mov
push
and
add
ins
imul
inc
je
sbb
mov
shl
(bad)
cmp
mov
cmp
shl
leave
fs
push
movs
test
mov
fcomp
dec
pop
or
mov
clc
mov
mov
mov
(bad)
dec
jmp
inc
mov
ror
mov
dec
jle
shl
sahf
xchg
pushf
imul
in
rcr
movs
xor
adc
in
adc
ror
out
icebp
or
out
enter
call
jg
pop
ss
adc
cld
push
dec
sahf
cmp
add
add
(bad)
sub
mov
sub
mov
sbb
adc
or
rcl
cmp
mov
mov
scas
mov
scas
mov
outs
mov
outs
adc
ins
aam
add
aas
xchg
fs
jge
jmp
inc
ins
push
cmps
or
test
adc
push
movs
fs
inc
sqrtps
sub
add
sbb
test
lods
repnz
(bad)
or
shl
ret
mov
nop
mov
jg
mov
movs
retf
call
lods
xchg
shl
test
sar
retf
pop
in
dec
push
ins
addr16
xchg
pop
adc
lahf
arpl
in
dec
xor
fwait
jbe
fld
clc
es
imul
sbb
ds
mov
inc
cdq
cdq
dec
pusha
into
fdiv
cmp
mov
pop
xor
sar
pop
sub
ja
bound
arpl
(bad)
cmp
adc
bound
ror
lds
push
jmp
pop
jecxz
mov
xchg
repnz
gs
jno
xor
movs
adc
cmp
xchg
lods
sti
mov
push
mov
bound
outs
ins
pusha
jae
adc
lods
cmc
sbb
xor
es
sbb
call
cmp
mov
stos
dec
call
in
pop
jp
or
mov
into
rol
mov
int
iret
mov
int
or
into
pushf
icebp
pop
mov
dec
ds
out
xor
retf
dec
fwait
scas
not
aam
pop
mov
xchg
inc
push
leave
sbb
(bad)
cdq
das
or
out
mov
cli
jno
mov
imul
dec
aas
ret
jge
sbb
retf
xor
sahf
pop
ret
xchg
push
xor
inc
(bad)
mov
push
jnp
adc
xor
cmp
dec
inc
dec
neg
push
xchg
dec
jne
mov
xor
sbb
rol
xor
jo
dec
push
sbb
cmps
sub
jecxz
sub
stos
stc
cdq
xchg
arpl
pop
outs
fwait
sbb
add
add
ins
cmp
mov
xchg
nop
inc
shl
scas
pop
xchg
sar
adc
pop
sub
in
(bad)
ret
cmps
movs
pop
outs
mov
mov
jb
inc
test
in
mov
and
adc
xor
fs
cmp
or
inc
inc
scas
retf
push
cmps
ss
int3
mov
(bad)
and
xchg
pushf
enter
leave
or
sbb
pop
push
arpl
cmp
inc
cmp
and
jmp
mov
pop
test
ret
jmp
(bad)
xor
jbe
push
push
inc
sbb
jp
into
retf
and
fld
xchg
adc
(bad)
(bad)
iret
mov
dec
dec
(bad)
sbb
fidivr
mov
in
out
ret
call
cmps
hlt
jecxz
addr16
adc
dec
jbe
in
fldenv
test
mov
fwait
std
cmp
pop
cmps
lds
mov
xchg
or
push
enter
sbb
or
jns
(bad)
ins
xchg
jno
fdiv
push
(bad)
imul
mov
jnp
enter
push
mov
xchg
cmps
adc
xchg
imul
mov
add
push
jecxz
or
inc
imul
pop
je
mov
and
mov
mov
and
loop
xchg
cmp
fsub
mov
popa
(bad)
fbstp
inc
cmc
js
in
adc
test
das
push
es
jmp
xor
test
dec
(bad)
fistp
add
sbb
addr16
popf
xor
fisttp
idiv
xlat
fst
pop
pop
mov
in
jmp
cwde
sti
enter
cmp
jnp
sahf
or
ds
jp
stc
push
sti
sub
xor
dec
aas
add
das
lock
movs
in
imul
xor
popa
sar
dec
cmp
pop
mov
daa
sub
inc
cs
jo
pop
xlat
into
wbinvd
mov
mov
dec
adc
sbb
aad
xor
scas
jne
icebp
test
jmp
mov
mov
lods
adc
cdq
movs
rol
pop
test
mul
mov
loopne
xor
mov
loop
hlt
or
mov
scas
mov
sahf
into
push
cmp
fsub
outs
dec
push
jmp
in
mov
dec
mov
pop
pop
pop
or
dec
ret
test
dec
jae
out
fmul
push
cmp
ins
(bad)
aas
sub
mov
fistp
scas
sbb
jbe
pushf
into
xor
jmp
and
xor
loope
cwde
data16
aad
scas
push
and
adc
ds
aaa
test
ja
pop
jne
pop
sbb
dec
xchg
dec
hlt
mov
in
or
xor
adc
adc
pop
cmp
sbb
jb
xchg
xor
lds
push
cmps
shl
outs
popf
cmp
jae
jnp
sbb
add
mov
mov
cdq
aam
fs
dec
sub
fdivr
push
adc
leave
or
mov
and
adc
bound
scas
aad
mov
arpl
and
adc
mov
movs
jmp
outs
loop
out
mov
cwde
fs
mov
adc
push
out
jns
std
ret
inc
loop
mov
out
aas
dec
data16
fsubr
fild
leave
and
(bad)
or
cmp
jnp
ret
xchg
outs
call
cmp
sub
(bad)
xor
sub
std
fwait
xchg
sahf
mov
je
jl
sub
out
mov
sbb
and
cmp
mov
lds
mov
or
add
cmp
xor
sbb
aaa
inc
loopne
push
mov
jae
cld
jmp
mov
data16
arpl
repnz
pop
inc
push
ficom
(bad)
sbb
cmp
pop
dec
xchg
jae
aas
mov
outs
lahf
xor
out
mov
push
push
out
imul
movs
fs
stos
fwait
or
xor
movs
xchg
mov
mov
lods
dec
ret
dec
sbb
call
cmps
leave
(bad)
cmps
arpl
inc
ja
inc
push
xor
mov
dec
ret
xchg
je
loopne
movs
movs
sub
arpl
push
cmp
popa
pop
jae
and
and
mov
adc
test
dec
stc
cmp
cmp
jg
sub
icebp
fcmove
xor
in
push
pop
arpl
dec
daa
pop
mov
cmps
adc
xchg
cdq
push
scas
add
fnsave
cmc
jle
fs
push
shl
aaa
call
call
and
out
mov
addr16
prefetch
inc
and
ficomp
adc
dec
aaa
ret
xchg
push
fbld
xlat
not
movs
sub
(bad)
out
(bad)
fwait
jl
popf
mov
adc
mov
jno
or
sub
dec
out
xor
int
push
jmp
add
xchg
jl
push
movs
mov
mov
add
cmp
inc
pop
adc
sub
push
shr
xchg
inc
adc
loope
out
and
cmc
test
push
(bad)
cs
push
jnp
imul
daa
inc
outs
add
xor
sub
ja
pushf
or
jge
xor
daa
dec
jmp
push
repnz
or
jo
je
sbb
mov
popf
push
xchg
mov
xor
sbb
inc
jmp
test
imul
pop
jbe
cmp
sbb
fdiv
in
jle
xor
mov
gs
popa
fidiv
cdq
xchg
or
fild
arpl
or
xor
(bad)
fdivr
(bad)
in
retf
shl
in
fisubr
mov
mov
inc
push
or
fnstcw
inc
fdivr
retf
outs
cmp
in
cmp
icebp
sbb
in
sub
jmp
pop
mov
pop
inc
sub
inc
repz
ret
aam
aad
in
mov
setl
cmp
mov
mov
xor
xchg
and
mov
mov
xor
xchg
leave
push
sub
adc
jb
xor
or
sub
outs
mov
ins
push
loope
mov
jmp
ss
call
aas
dec
out
gs
or
jle
ror
(bad)
call
adc
ror
sbb
mov
movs
arpl
adc
push
leave
ret
cmp
sbb
bound
sub
stos
sub
mov
cmp
aad
stc
jmp
lahf
sub
adc
xor
jge
in
xchg
aad
repz
daa
shl
jge
and
call
fcmovbe
pop
sub
test
dec
pop
xor
mov
rol
fld
xchg
or
sbb
mov
fisttp
and
jl
rcr
cmps
pop
pop
sub
jno
cdq
dec
mov
inc
and
mov
push
(bad)
lea
cmp
test
sti
cmps
dec
bound
lods
(bad)
push
dec
xchg
mov
es
ss
mov
int
mov
fwait
aam
lahf
xchg
or
adc
pop
mov
imul
inc
mov
xchg
add
mov
mov
sbb
jle
addr16
and
cmps
out
inc
mov
loope
mov
dec
loop
ret
mov
pop
mov
int3
aam
mov
call
xor
rcr
xor
out
retf
sbb
sbb
lods
and
sbb
cmps
inc
xchg
mov
lods
adc
sti
enter
pop
cwde
int
jno
push
sbb
inc
mov
pop
sub
or
shr
mov
xchg
mov
retf
sti
mov
imul
adc
sub
jns
lods
and
fisttp
cmc
ins
add
and
push
cwde
mov
loopne
fptan
in
addr16
rcr
mov
add
enter
adc
daa
jo
inc
push
adc
inc
or
inc
xor
sub
sub
pushf
rcr
jg
push
sub
loopne
mov
call
or
fidiv
(bad)
jl
hlt
fs
stos
mov
sub
and
cmp
jmp
mov
sbb
into
lods
push
jecxz
sbb
icebp
and
repz
nop
dec
(bad)
mov
xchg
mov
mov
sti
loopne
out
sbb
iret
sub
js
rol
inc
ret
inc
aas
inc
pop
stc
add
pusha
add
stos
xchg
mov
pop
sbb
pop
and
imul
adc
adc
(bad)
inc
or
fst
cmp
cld
jb
sbb
add
push
ins
push
add
loop
loopne
lods
xchg
cmps
(bad)
pop
sub
sub
xchg
and
mov
push
add
in
mov
mov
inc
pop
cmps
mov
ins
out
(bad)
sub
push
mov
test
(bad)
mov
mov
scas
push
cli
inc
scas
dec
sbb
adc
mov
xor
cwde
call
lods
inc
cmc
adc
xchg
(bad)
test
(bad)
repnz
fcmovne
das
aad
loopne
jge
push
cmp
push
lods
push
fcom
aam
int3
les
imul
push
ins
sub
je
ds
jae
mov
dec
iret
mov
dec
pop
mov
xor
add
xor
scas
jmp
mov
push
or
les
push
mov
jbe
scas
mov
jo
lock
lock
jp
imul
les
enter
sbb
add
inc
inc
movs
mov
imul
test
sti
jle
jge
test
push
add
sbb
pushf
les
or
pop
es
loopne
pop
outs
lods
push
dec
push
fbld
or
mov
add
sub
sub
int3
cmp
mov
and
out
je
cvttps2pi
jno
sbb
push
cmp
leave
(bad)
fidivr
shr
sub
xor
mov
rol
(bad)
cmc
cmp
fstp
gs
shr
add
(bad)
pop
iret
ret
jg
sbb
test
or
pushw
aas
js
cmp
addr16
lds
add
jl
jbe
js
rcr
cmc
xchg
test
ins
rol
add
gs
out
jmp
lods
jge
dec
inc
lods
xchg
push
bound
dec
imul
data16
jecxz
stos
out
mov
push
or
ret
pop
xor
arpl
and
jmp
inc
ds
aas
(bad)
push
jae
cmp
sbb
inc
stos
repz
sub
jg
into
add
xor
sub
xchg
fimul
std
sub
dec
inc
push
push
es
dec
cmps
lock
adc
mov
mov
ds
in
xor
push
cld
or
mov
mov
(bad)
loope
pushf
inc
and
test
test
pop
jmp
rol
fcmovne
jno
mov
repnz
inc
sub
stc
jmp
mov
mov
int3
rdpmc
xchg
data16
repz
lock
add
daa
loope
rol
lock
cs
push
sbb
pop
iret
adc
add
pop
stos
fdiv
inc
outs
cmp
in
jmp
pop
loop
sbb
(bad)
jne
in
mov
cmp
aad
pop
cmp
repz
mov
inc
movs
dec
into
jnp
xor
out
pop
dec
int3
adc
add
int
inc
xlat
cld
cld
cmp
pop
lds
fadd
jecxz
cmp
xchg
clc
cmp
lahf
out
in
out
mov
dec
sub
int3
es
jb
jnp
adc
in
stc
sbb
xor
inc
aam
add
cmp
cwde
lods
jbe
in
addr16
es
push
loop
inc
mov
movs
sbb
add
out
hlt
sub
xchg
or
sub
adc
arpl
in
test
shr
dec
sbb
xchg
popf
inc
dec
loop
cmp
cmp
jae
mov
pop
loop
hlt
or
int
fldenv
xchg
lods
inc
pop
jns
cdq
fwait
add
out
inc
ret
mov
(bad)
loopne
sbb
jbe
rol
and
adc
mov
stc
jne
fsub
jge
xor
mov
xchg
fsub
xchg
push
sub
pop
loop
add
push
lods
lods
mov
sub
mov
aam
jno
in
sahf
pop
aaa
imul
rcr
(bad)
inc
shl
cmps
sub
or
fwait
add
jnp
repnz
pop
push
push
or
push
push
aad
cwde
jns
push
ds
jno
lock
jmp
vmovhps
call
xor
je
daa
cli
js
retf
mov
cmp
lock
pop
jmp
sbb
lods
(bad)
jmp
arpl
cmp
mov
mov
cmps
add
pop
xchg
aaa
and
clc
xor
xor
sbb
fs
mov
out
shl
out
daa
clc
cs
dec
jle
add
lea
scas
popa
stos
mov
pop
xchg
pushf
push
mov
sub
add
xor
lahf
pop
push
mov
sub
add
mov
and
sbb
lock
in
or
test
std
shl
test
sub
add
add
mov
sbb
stos
ret
inc
es
add
or
aaa
mov
aas
push
pop
mov
mov
push
push
ret
jne
or
int
and
fadd
into
cmp
cmp
icebp
outs
add
sub
std
jbe
(bad)
cmp
xchg
ret
and
in
iret
xchg
aad
mov
fnstcw
ss
mov
fmul
add
sub
cs
dec
out
(bad)
push
test
retf
mov
mov
or
jae
add
inc
pusha
lds
cli
mov
loope
inc
or
mov
cmp
loope
sub
(bad)
mul
in
inc
mov
in
mov
sub
mov
inc
fnstenv
inc
cmp
mov
sti
rsm
sub
fistp
and
mov
repz
sub
lods
mov
rcr
mov
cmp
je
ins
push
hlt
xlat
popf
xchg
xor
loope
cmps
in
jmp
fcmovnb
pop
arpl
stc
js
(bad)
jmp
sahf
div
stos
sub
jne
mov
mov
hlt
mov
cwde
cld
and
pop
ds
out
mov
daa
fstp
dec
jg
add
dec
mov
out
pop
mov
out
imul
pop
pop
loop
call
sub
xor
or
adc
in
inc
imul
pop
cmp
loop
movs
int3
pop
and
mov
inc
cmp
push
mov
into
data16
cmp
adc
stos
jbe
int3
push
adc
dec
pusha
enter
mov
jmp
fcomp
pop
sbb
sbb
sar
sub
pusha
arpl
xchg
or
sbb
inc
xchg
cli
inc
icebp
mov
push
push
xchg
stos
sbb
cmp
repz
dec
bound
or
mov
jmp
adc
int3
mov
pop
les
pop
out
shr
mov
jo
inc
xor
jne
mov
jmp
int
add
sahf
(bad)
mov
xchg
shl
jnp
inc
sub
fcmovu
pop
fucomp
js
sti
sub
and
movs
adc
xchg
enter
mov
fcmove
(bad)
sbb
or
or
sub
popa
ds
sbb
or
lods
data16
cmp
outs
push
sti
mov
les
or
sbb
xor
cmp
xor
shr
lods
adc
shr
push
scas
sti
xor
xor
cmp
inc
enter
out
mov
arpl
fild
xchg
dec
outs
mov
sbb
jecxz
test
adc
pop
icebp
jnp
mov
call
adc
or
repz
xchg
daa
mov
aad
aaa
add
sti
enter
aad
add
xchg
call
popf
pop
jb
push
jge
adc
mov
mov
nop
push
jns
pop
aaa
fbld
rcl
clc
addr16
aas
fwait
add
fwait
test
jmp
sub
pop
cmp
pushf
push
fidiv
push
loopne
xor
push
dec
sbb
test
in
xchg
fnstenv
sbb
mov
xchg
or
ja
out
in
test
push
shl
or
call
cmc
sub
mov
rcl
stos
pop
xor
cmp
inc
cmps
xchg
pop
mov
gs
pop
mov
(bad)
mov
call
cwde
inc
popf
mov
pop
sub
test
emms
pop
into
push
pusha
cmc
dec
pop
ins
jbe
jmp
loopne
adc
pop
cmp
das
xor
xor
int3
xor
daa
iret
jno
stos
mov
shl
pop
adc
inc
mov
sub
mov
mov
test
adc
push
scas
jle
loop
xchg
std
push
mov
ss
cmp
or
jge
pop
push
push
cli
ret
(bad)
inc
mov
es
sbb
rcl
jge
push
imul
or
lahf
pusha
xor
test
xor
and
stc
adc
jmp
xor
bound
pop
jmp
mov
push
and
jne
add
in
popa
inc
xor
adc
js
mov
dec
cmp
lds
sbb
leave
and
pop
outs
outs
mov
fs
shl
push
sub
dec
jp
xor
hlt
inc
push
add
adc
addr16
xchg
nop
daa
mov
test
call
test
adc
inc
jg
repnz
ficom
pop
loopne
pop
repz
push
fsub
jae
out
push
cmps
xor
add
out
into
sub
pop
mov
call
mov
imul
sub
(bad)
cld
(bad)
mov
mov
or
fs
arpl
xchg
xchg
setno
shl
push
mov
pop
clc
cmp
fisubr
aaa
jmp
aas
dec
lods
cwde
loope
push
jbe
pop
and
adc
fwait
pop
mov
daa
jne
lock
test
int3
scas
icebp
dec
mov
add
mov
into
jmp
fnstcw
sar
aad
aaa
sbb
pop
adc
xchg
es
daa
xchg
mov
shr
mov
ds
jae
inc
stos
mov
sub
push
mov
or
jp
sbb
xor
push
out
dec
js
and
sub
pop
mov
mov
lds
pop
fs
xor
ret
jo
clc
popf
dec
test
jns
retf
and
push
xchg
and
inc
push
adc
or
pop
jp
cmp
jg
mov
xchg
addr16
push
sbb
sub
push
pop
(bad)
cmps
int3
cmp
xchg
mov
and
sbb
mov
div
int
xor
cmp
adc
ins
push
call
imul
imul
and
loop
int
wrmsr
pop
out
fmul
pop
jo
inc
fst
and
jg
jne
jmp
push
fnstenv
gs
jno
rcl
push
stos
cwde
ficom
jnp
lods
les
mov
jb
sbb
jbe
(bad)
out
lods
cli
pop
aaa
pushf
icebp
xor
sub
shr
in
fsub
in
ins
sub
sbb
mov
adc
and
xchg
shl
pop
bound
and
mov
jl
push
or
xchg
and
or
xchg
dec
addr16
inc
mov
and
push
scas
push
sar
iret
pop
xor
and
std
out
xchg
xchg
fwait
dec
(bad)
arpl
fist
(bad)
mov
jb
sub
mov
add
inc
add
outs
push
and
fisub
xor
xchg
dec
aaa
imul
cmp
dec
(bad)
xor
mov
js
sbb
inc
xor
les
jb
jae
xor
push
dec
sbb
push
xor
dec
shr
cmc
(bad)
scas
lock
aaa
pop
xchg
jae
push
icebp
lods
xor
fcmovnu
jmp
call
dec
pop
pop
jp
div
pop
adc
mov
loope
pop
add
dec
pop
js
push
cmp
outs
out
mov
mov
shl
mov
mov
cmps
sub
repnz
movs
lock
jecxz
nop
imul
adc
and
icebp
cmps
jmp
mov
push
xlat
add
or
push
ins
cmp
lods
pushf
push
inc
jmp
(bad)
ror
(bad)
sbb
sbb
xor
(bad)
mov
xor
movs
mov
in
inc
add
sbb
push
pop
jbe
mov
ins
sbb
stos
movs
push
into
ja
repnz
sub
out
lea
dec
jmp
(bad)
mov
out
dec
xor
pop
and
pop
fcmovb
sub
pusha
cmp
lea
jbe
into
sbb
pop
popf
scas
dec
in
push
fsubr
jg
fwait
push
dec
pop
xor
mov
jno
and
pop
dec
into
xchg
jnp
sbb
stc
and
std
loop
psubb
fdivr
pop
and
ss
fcmovne
push
push
lods
inc
jmp
jno
xchg
cmp
int
mov
xor
dec
outs
test
xchg
inc
gs
adc
gs
xchg
retf
jbe
fdivp
pop
mov
mov
mov
out
cdq
inc
add
test
xor
xlat
std
fsubr
xor
scas
ficom
outs
mul
pop
out
push
sbb
dec
retf
(bad)
add
mov
xchg
dec
mov
xchg
xor
xor
(bad)
idiv
test
cmp
sub
jne
mov
cdq
inc
popa
xchg
pusha
mov
xchg
push
test
add
mov
sti
jle
add
rcl
enter
scas
push
dec
outs
cmps
mov
(bad)
aam
rcr
xor
(bad)
idiv
scas
or
movs
adc
sahf
aad
jae
clc
shl
fwait
push
sbb
(bad)
sub
and
xchg
ja
mov
sbb
jecxz
push
dec
adc
sbb
aas
and
les
xor
dec
inc
xchg
out
and
nop
jb
je
mov
scas
not
(bad)
aad
test
out
bound
pop
clc
(bad)
test
mov
push
bound
test
icebp
(bad)
cmp
popa
mov
rcr
dec
(bad)
lock
mov
into
sub
test
aam
cli
ja
jno
pop
mov
inc
test
add
jl
jae
(bad)
mov
inc
inc
adc
inc
(bad)
lea
test
push
dec
jp
dec
cmp
ret
(bad)
cmc
jmp
add
cwde
std
out
jno
inc
ffreep
into
out
cmp
test
aam
fld
and
xor
stos
out
lahf
jno
mov
and
int
add
fstp
jne
xor
test
imul
ss
ds
add
sbb
jl
xchg
mov
imul
cmp
mov
or
mul
imul
lods
jae
mov
jl
aas
push
pop
fucomip
hlt
daa
push
call
ret
pop
push
cmp
ins
fs
jmp
push
mov
inc
scas
rcl
adc
or
and
jbe
dec
push
pushf
sub
add
out
mov
and
into
adc
xor
fdiv
push
movs
mov
das
and
hlt
loopne
cdq
and
ja
test
jae
xchg
push
jno
or
cmps
jge
jp
(bad)
data16
es
mov
ror
xlat
and
pop
jl
mov
pop
les
mov
cmp
add
mov
mov
inc
fwait
sbb
mov
movs
inc
lods
mov
xor
stc
pmulhw
outs
loopne
sbb
int
mov
nop
jmp
popf
push
out
dec
add
pop
xor
dec
jl
(bad)
add
sub
inc
push
push
int
shr
outs
and
cmp
xchg
xor
mov
mov
ss
fmul
dec
jno
repz
or
data16
add
js
cmp
or
clc
(bad)
fmul
mov
fsubp
mov
arpl
inc
aad
mov
mov
add
mov
push
cmp
imul
movs
pusha
sahf
fucomp
and
add
jo
(bad)
mov
out
aad
in
dec
ret
cmp
call
mov
fld
aad
inc
pop
aad
cmp
add
and
xchg
jno
fld
sub
je
mov
inc
ret
fld
loopne
(bad)
fwait
loopne
inc
cmp
xor
imul
pop
cmp
dec
add
iret
push
pop
jecxz
pop
or
xor
jb
cs
aad
ja
mov
fsubr
test
and
cld
or
fs
jnp
jle
xchg
adc
xchg
fs
pop
mov
cwde
or
sbb
call
loope
neg
ret
jbe
mov
cmp
lea
je
lods
shl
cli
cwde
mov
sti
pop
and
mov
jmp
leave
pusha
cld
xchg
js
push
sub
mov
dec
jnp
jmp
xor
in
lods
xchg
stos
(bad)
mov
pop
cmp
push
inc
mov
dec
jne
and
mov
dec
push
aam
call
arpl
cmp
adc
add
add
push
cmp
call
dec
xor
stc
mov
mov
dec
mov
mov
and
loopne
ins
loop
adc
cmp
in
ret
push
cmp
ret
xchg
fs
addr16
add
mov
in
jae
das
loope
stos
int
dec
jecxz
or
or
imul
jae
inc
add
stos
les
sub
sahf
lock
mov
mov
(bad)
jmp
sbb
sbb
scas
add
je
ins
mov
or
cld
test
inc
std
ret
outs
rol
in
ins
aad
(bad)
xchg
add
shl
or
inc
scas
out
pop
sbb
sar
xchg
test
sbb
mov
stos
cmp
dec
pop
pop
and
inc
dec
sub
fcom
aad
xchg
mov
fiadd
add
aas
(bad)
out
add
and
aaa
inc
inc
sbb
scas
aas
and
sbb
movs
je
mov
repz
mov
shl
jle
jbe
fisubr
arpl
in
popf
sbb
mov
jle
ret
scas
inc
les
add
jecxz
push
jle
xor
daa
(bad)
mov
sub
sbb
dec
xlat
ja
fist
mov
cmp
fld
icebp
mov
icebp
and
push
mov
pop
adc
je
push
stos
push
shr
scas
mov
mov
dec
mov
mov
adc
or
xchg
push
dec
lods
mov
loop
ss
xor
inc
mov
cmc
loopne
inc
mov
test
pusha
je
movs
cmp
xchg
test
jg
sub
xor
jae
aaa
or
mov
bound
in
jl
cmp
ins
push
push
mov
xor
cmp
add
in
mov
push
inc
stc
ins
add
add
sub
inc
mov
sub
xchg
retf
cmp
mov
jp
bound
xor
stos
ss
leave
int3
xlat
je
(bad)
sbb
or
leave
fistp
push
mov
mov
scas
xchg
pop
loopne
xchg
into
aam
loop
ret
test
int3
xchg
aaa
imul
jbe
mov
rcr
jp
or
dec
in
dec
pop
ficom
hlt
and
lds
(bad)
xchg
adc
fisub
xor
test
jecxz
dec
mov
sbb
int3
cmps
cmp
seta
mov
inc
aad
out
out
and
loopne
sub
push
lea
xchg
dec
cdq
ret
or
mov
sbb
push
adc
jge
leave
mov
jg
stos
aam
call
in
ret
adc
repnz
mov
aas
pop
out
sub
or
and
mov
or
ins
(bad)
aaa
(bad)
ins
jne
loopne
daa
and
sahf
(bad)
retf
mov
fidiv
aas
(bad)
repz
xchg
adc
jne
es
jmp
call
rcl
push
cmp
and
sbb
xlat
rcr
ficomp
out
add
and
iret
test
sbb
inc
mov
in
in
fdivr
mov
pop
jae
xchg
xor
cli
sbb
jg
xchg
ds
mov
aam
mov
in
xchg
mov
dec
dec
dec
add
(bad)
push
adc
loopne
inc
push
outs
int
mov
test
push
inc
pop
mov
movs
cmp
cs
jo
mov
adc
mov
mov
pusha
stos
mov
jae
jecxz
mov
outs
or
call
inc
cmp
test
int
sbb
add
aas
sub
add
ss
jo
stos
je
cli
cmps
scas
es
add
mov
mov
jge
adc
loopne
rcr
stos
cmp
movs
rcr
ficom
xchg
sbb
mov
mov
dec
cmp
pop
xor
aaa
fdiv
dec
out
push
pop
(bad)
jno
add
repnz
dec
and
jmp
cli
adc
or
arpl
into
outs
xchg
imul
out
mov
movs
xchg
sti
push
push
lock
aad
rol
addr16
sub
add
das
push
lock
scas
lock
cs
and
push
fist
in
push
pusha
data16
jns
adc
jecxz
addr16
mov
push
inc
js
ror
ss
call
sbb
mov
movs
in
lahf
add
stos
int3
cs
cmp
sbb
xor
pop
jle
rcr
sti
in
mov
stc
ror
scas
xor
addr16
ins
push
icebp
imul
nop
cli
jmp
cdq
(bad)
mov
inc
mov
adc
cli
es
mov
das
call
pusha
loope
retf
fwait
shr
and
cs
imul
xor
sbb
cmc
retf
xor
xor
not
or
in
cmps
push
mov
scas
sub
outs
js
mov
fucomip
push
(bad)
or
pop
in
and
(bad)
or
rdtsc
(bad)
cmp
pop
repz
hlt
jp
cli
push
loope
push
pop
inc
or
inc
in
and
dec
cdq
jbe
(bad)
arpl
pop
xchg
shl
mov
push
add
in
int
xchg
shl
push
sub
xor
add
sub
jge
mov
pop
(bad)
aad
pop
loope
push
dec
icebp
movs
popf
out
pop
sbb
aad
or
loop
lods
sbb
in
in
outs
daa
jb
pop
cs
enterw
leave
cmc
fld
xor
jno
cli
rcl
(bad)
out
inc
(bad)
je
inc
inc
mov
fidiv
fnstcw
inc
(bad)
adc
lock
repz
cmp
rcl
popf
or
adc
inc
neg
inc
loopne
xor
leave
js
(bad)
lock
dec
(bad)
jmp
pusha
stos
idiv
mov
mov
adc
lods
xchg
pop
cmc
add
pop
(bad)
out
fimul
jp
stc
retf
mov
pop
ins
nop
movs
gs
and
inc
mov
shl
movs
pop
dec
sbb
mov
adc
aam
addr16
or
scas
out
fdivp
lods
xor
movs
dec
pop
add
lods
daa
and
mov
test
add
fisttp
mov
jecxz
pop
xchg
sbb
and
xchg
mov
cmps
loope
test
pop
push
fsub
nop
xchg
repnz
pop
xor
jmp
stos
ja
lea
dec
mov
pop
xchg
mov
sar
pop
xchg
pop
fsincos
fild
xor
test
jp
adc
or
dec
inc
sbb
das
push
and
and
inc
imul
int
sbb
scas
cmp
xchg
rcr
add
sahf
ja
mov
test
push
mov
movs
call
push
fbld
shl
stos
push
jecxz
adc
or
iret
adc
mov
inc
sub
xchg
mov
adc
pop
popf
xor
sub
outs
push
mov
adc
push
(bad)
inc
pop
and
ins
mov
stos
mov
(bad)
aaa
push
icebp
mov
mov
pop
imul
adc
add
pop
xchg
sub
push
push
pop
lods
or
mov
sbb
add
sahf
fistp
repnz
sbb
cmps
pop
lahf
int3
inc
xlat
mov
inc
and
pusha
push
mulps
test
pop
test
inc
inc
cmp
ret
adc
add
enter
inc
ret
mov
std
xor
inc
sbb
pop
xchg
outs
mov
test
cmps
mov
push
test
es
inc
popf
add
in
inc
push
fld
push
(bad)
test
loope
je
push
jg
ins
mov
ret
xchg
daa
(bad)
loope
mov
or
mov
jl
xor
mov
jmp
mov
cdq
sti
mov
xchg
push
cmp
lahf
mov
pop
neg
jo
sub
push
dec
mov
sbb
jb
(bad)
test
scas
adc
adc
dec
or
push
xor
addr16
sub
dec
push
sbb
xor
and
sahf
push
cli
dec
xor
pextrw
sbb
pop
push
js
or
clc
xchg
sub
imul
sti
mov
mov
loop
cli
movs
and
jle
pop
add
es
push
fcomp
jmp
mov
bnd
add
mov
add
int3
inc
jle
xor
jp
in
sub
xor
jecxz
push
mov
fst
mov
or
sub
sbb
add
(bad)
jnp
(bad)
jecxz
adc
out
jl
push
retf
in
xchg
hlt
sti
iret
shr
xor
pop
sbb
push
pop
loop
adc
cmp
loopne
pop
sbb
outs
icebp
sbb
add
sub
sbb
jbe
push
fs
jl
ds
and
jne
jle
dec
hlt
aas
dec
or
inc
fsubr
inc
dec
(bad)
push
arpl
cmp
mov
inc
retf
inc
mov
mov
push
ret
rcr
dec
mov
hlt
sbb
mov
(bad)
mov
xor
popf
cdq
and
xor
inc
sar
cmp
xlat
mov
add
repnz
cmp
jbe
stos
shl
push
mov
mov
int
adc
or
xor
ds
aaa
popfw
leave
ficomp
fcom
mov
dec
dec
enter
into
nop
fisubr
repz
mov
mov
xchg
xchg
mov
stc
je
mov
adc
push
pop
sbb
add
into
and
sub
sub
aam
ret
gs
jne
test
leave
aad
or
jnp
(bad)
out
ss
cld
jo
scas
ret
paddusw
fdivr
and
dec
stos
push
pop
cmp
or
xor
sub
or
ficom
push
cli
cmp
ror
stos
mov
outs
cmps
inc
adc
dec
outs
jp
and
sub
mov
mov
int3
and
mov
arpl
daa
movs
and
mov
add
xchg
sub
xchg
or
fdiv
retf
in
nop
mov
cld
std
ret
fist
mov
mov
push
jmp
in
pop
dec
adc
fdiv
fbstp
ins
xor
loopne
xchg
sti
out
mov
test
jle
xor
or
sbb
sbb
test
dec
jae
or
data16
or
inc
pop
sbb
and
fcmovnu
mov
xchg
pusha
xlat
xchg
std
add
inc
cmp
pop
lea
sub
imul
popf
sbb
cmp
and
(bad)
rcl
xchg
in
popf
push
fwait
add
xchg
sbb
sbb
dec
adc
iret
mov
mov
cmp
or
sub
jl
out
xor
ja
or
lds
inc
retf
xchg
and
inc
test
idiv
loopne
sbb
mov
mul
outs
test
and
lods
fisub
into
adc
out
sti
mov
loop
mov
retf
fcomp
scas
mov
mov
push
xchg
arpl
fwait
cdq
repz
aaa
jecxz
jne
jmp
mov
sub
mov
retf
or
mov
or
out
mov
add
push
fild
ins
sbb
jo
icebp
cmp
add
sbb
dec
push
dec
pop
jmp
mov
xchg
repz
push
push
xor
outs
fwait
mov
es
jb
lock
dec
bound
xor
cs
adc
leave
jo
mov
nop
jne
pop
xchg
pop
jge
ror
mov
pop
jne
or
repnz
(bad)
lea
mov
test
stos
fdivp
les
cmp
fidivr
or
call
int
addr16
sub
mov
in
jp
jp
rcl
push
shl
(bad)
jmp
push
and
push
aaa
dec
jae
(bad)
retf
mov
pop
sub
das
sub
pushf
enter
adc
in
loope
shl
jnp
stos
xchg
xchg
sti
cmp
mov
mov
mov
and
cmp
cmp
push
and
xchg
movs
imul
mov
cmp
fadd
cmc
aaa
mov
lods
sbb
push
retf
shl
inc
shl
cmps
outs
les
jp
xchg
dec
loop
repz
dec
out
in
ins
jmp
mov
jp
stos
(bad)
push
in
mov
cdq
arpl
mov
mov
jno
pop
jmp
call
outs
mov
sar
jns
fcmovnu
ret
mov
dec
jo
fwait
mov
dec
jmp
pop
aaa
pop
fcomp
shr
sbb
add
enter
sbb
xor
xchg
in
addr16
and
push
fs
adc
sub
xor
mov
shr
fiadd
jecxz
adc
mov
(bad)
sti
scas
fstp
add
pop
xlat
into
test
pop
(bad)
jb
cld
lahf
mov
mov
int3
fild
adc
or
xor
out
mov
mov
sbb
in
and
pop
and
push
push
lock
xor
movs
stos
add
rcr
movs
movs
addr16
lahf
push
mov
pop
xor
fwait
nop
jp
call
xchg
mov
out
lds
clc
inc
sub
pop
ds
add
fimul
sbb
cli
addr16
mov
arpl
add
sahf
outs
repnz
cs
retf
movnti
dec
add
test
stc
js
pusha
test
push
inc
pop
add
mov
sbb
loopne
mov
aam
shr
and
push
movs
mov
sar
sti
or
test
ds
movs
cli
shl
arpl
add
mov
jne
mov
lods
jge
in
in
jbe
es
inc
cdq
in
in
data16
mov
and
fidiv
fs
pop
(bad)
dec
mov
mov
pusha
in
xor
adc
xchg
adc
mov
cmp
into
in
fist
jl
mov
push
push
popa
add
xlat
xchg
push
push
aaa
mov
push
push
sbb
cli
pusha
cmp
adc
std
retf
scas
mov
mov
test
pop
sbb
mov
mov
arpl
xchg
or
vaddsd
dec
inc
push
neg
fucomip
(bad)
sub
cs
and
nop
lock
push
adc
inc
cmp
leave
adc
and
out
jge
and
int
cmps
fstp
add
aas
pop
adc
mov
pop
jne
mov
cmps
push
mov
push
call
and
add
mov
fnsave
test
xchg
aad
xchg
mov
mov
arpl
icebp
mov
mov
lds
call
(bad)
mov
mov
out
jbe
inc
push
mov
adc
mov
ds
sub
pop
dec
sbb
jg
fstp
cmp
nop
add
dec
imul
push
jo
dec
push
jl
or
mov
sub
push
mov
das
loopne
xor
add
loop
add
lock
aas
lods
cwde
loope
(bad)
jbe
mov
in
xchg
xor
jbe
pop
add
shr
out
jno
push
and
xchg
movs
ja
push
jge
push
popa
push
fs
rol
stos
pop
mov
enter
lods
inc
and
data16
call
pop
dec
scas
push
in
xchg
ins
(bad)
jne
dec
jecxz
mov
lock
aaa
std
fnstenv
data16
mov
adc
xchg
(bad)
loopne
sub
jmp
jmp
xchg
xchg
pop
out
sti
sbb
mov
sti
jmp
jb
lods
outs
mov
ins
rol
scas
cmp
dec
fild
push
fsubr
pop
lock
jb
mov
out
mov
inc
mov
pusha
mov
dec
add
xchg
pushf
sti
imul
lock
mov
xor
(bad)
jmp
in
xor
fs
or
mov
js
(bad)
sbb
pop
xor
fnsave
sub
cmovno
dec
out
or
or
inc
sbb
shl
sbb
xlat
mov
popa
mov
and
inc
out
add
test
mov
dec
idiv
pop
std
data16
aaa
push
test
fld
bound
pop
sbb
ja
sub
(bad)
fstp
lods
cmp
inc
dec
add
ror
lods
hlt
pusha
fimul
aaa
aad
sub
inc
and
hlt
jge
loop
adc
mov
test
adc
push
ret
(bad)
adc
dec
push
pop
mov
loop
movs
xchg
pop
adc
push
icebp
(bad)
mov
dec
(bad)
fisub
ror
dec
add
mov
mov
mov
shl
call
mov
mov
fld
and
in
mov
sbb
sbb
cvtpi2ps
push
mov
add
xor
xor
mov
add
lahf
add
cmp
cmp
add
mov
shr
mov
push
pushf
xor
xlat
add
gs
pop
imul
jns
pop
daa
mov
cmps
out
stc
lds
stos
dec
or
mov
sub
cmc
cwde
sub
mov
(bad)
push
or
dec
cmc
repnz
mov
jecxz
inc
outs
(bad)
mov
inc
les
sbb
out
test
loop
cdq
movs
mov
adc
add
dec
enter
in
push
mov
jne
mov
mov
xchg
mov
nop
lods
repz
or
cmps
div
mov
adc
bound
adc
mov
push
push
ret
fisttp
pop
pop
dec
dec
sub
cmp
mov
clc
fadd
jmp
dec
adc
call
inc
js
fwait
mov
xchg
mov
iret
cdq
mov
mov
add
mov
add
fistp
cmc
xchg
ja
ins
pushf
or
xchg
mov
pop
sub
sub
test
ins
int3
sbb
hlt
and
popf
scas
xchg
mov
push
cmp
mov
call
sahf
cwde
shl
loop
js
scas
dec
aas
fcmovu
mov
pop
nop
sub
and
and
pop
repnz
adc
call
mov
dec
neg
and
jns
mov
sbb
cmc
pusha
jns
inc
inc
xor
call
cmp
jns
mov
xor
add
pop
pop
test
sahf
add
cmp
add
f2xm1
jnp
push
adc
xchg
aaa
push
arpl
pusha
int3
arpl
mov
dec
clc
mov
sbb
push
push
xchg
sbb
lods
push
fcom
mov
dec
movs
je
cmps
inc
hlt
push
test
mov
loopne
or
push
push
mov
call
sbb
or
pusha
clc
call
ror
fnsave
jb
mov
cwde
stos
jns
out
jo
test
pop
adc
lods
loope
or
mov
sti
pop
in
sbb
test
cmp
les
movs
inc
sbb
cmp
pop
imul
(bad)
fidiv
add
add
xor
stos
cwde
cld
mov
and
inc
jb
add
sar
test
frstor
enter
mov
dec
dec
pop
aas
leave
cli
(bad)
cdq
imul
retf
cmp
pop
inc
(bad)
jmp
ror
stos
les
cld
sbb
mov
scas
out
(bad)
xchg
inc
neg
push
loop
cmp
jo
xchg
sub
dec
push
inc
ja
mov
fcos
jb
cdq
xlat
cmc
mov
jge
push
in
jns
jnp
pusha
push
mov
adc
inc
cmp
bnd
pop
rep
inc
push
jge
in
pop
push
movs
iret
mov
xor
cmp
hlt
out
inc
out
out
mov
ins
lahf
ror
sub
mov
(bad)
push
mov
lds
les
ins
inc
jg
inc
inc
mov
cdq
xchg
ins
xlat
sbb
mov
jg
outs
xchg
in
(bad)
out
add
stos
pop
test
jb
jbe
movs
pusha
jb
sub
mov
sbb
mov
sub
push
sub
icebp
cmpps
mov
leave
add
les
push
lahf
mov
mov
fwait
retf
leave
sbb
or
mov
cmps
repz
push
test
addr16
iret
iret
sub
dec
out
inc
mov
and
icebp
xor
mov
ds
sbb
cmps
loopne
fsubr
push
dec
ret
mov
scas
movs
dec
gs
lahf
adc
ds
and
sbb
mov
retf
add
cli
inc
sti
fld
xchg
sub
sub
je
dec
and
hlt
repz
xor
pop
aaa
nop
mov
rol
std
pop
mov
jmp
test
dec
test
movs
adc
jae
mov
sbb
jecxz
and
mov
and
sub
sub
or
stos
push
add
xchg
div
sub
js
les
and
fprem1
lock
les
cld
mov
jnp
imul
stc
jmp
pop
inc
shl
or
xor
fdiv
popa
cmp
leave
xlat
icebp
aad
sub
dec
(bad)
outs
xchg
xchg
xchg
push
adc
cld
pop
and
mov
ins
std
sbb
xlat
push
jmp
int3
pop
inc
mov
pop
xchg
dec
jp
cld
inc
outs
push
sti
push
out
cwde
(bad)
aad
sub
sub
push
std
inc
cs
or
sub
adc
pop
cmp
fst
inc
or
int
inc
sub
pop
and
das
sub
xlat
xchg
dec
mov
scas
adc
ins
(bad)
mov
cmc
int3
mov
dec
xchg
add
loope
lods
mov
push
cli
repz
cmpps
sub
inc
sub
push
gs
arpl
xor
fcom
pop
(bad)
fist
pop
or
dec
pop
mov
xchg
dec
mov
mov
jecxz
jno
or
pop
sbb
or
jle
jne
not
in
mov
mov
mov
ja
xchg
adc
clc
gs
pop
into
mov
jnp
and
mov
ror
test
js
push
xchg
mov
inc
jns
xchg
fmul
inc
shr
out
sbb
inc
push
(bad)
in
sbb
enter
cmp
in
mov
pop
shl
pop
xchg
aam
dec
dec
sub
jmp
pop
xor
fadd
aam
xchg
data16
js
fisttp
mov
push
push
xor
rcl
out
into
inc
pop
fadd
add
mov
mov
jbe
(bad)
jns
dec
das
mov
div
push
push
fcomp
adc
(bad)
mov
adc
out
movs
sub
mov
test
sar
dec
in
rcr
xor
into
or
ins
adc
sahf
mov
mov
sahf
add
sbb
add
adc
imul
and
mov
add
loope
cmp
mov
mov
(bad)
pop
clc
repz
sbb
cmps
popf
sti
call
jl
das
xchg
push
sar
cmp
mov
and
cmp
dec
stos
rol
xor
mov
adc
sahf
fistp
pop
sbb
push
(bad)
sub
iret
lock
(bad)
cmps
mov
shl
add
ror
and
data16
adc
and
xchg
mov
add
jb
ret
jns
sbb
sti
cmps
lea
repz
mov
enter
push
retf
ja
ret
cmps
pop
inc
mov
outs
(bad)
sbb
cwde
push
dec
shl
lahf
and
aam
sbb
sub
push
stos
or
(bad)
mov
nop
dec
test
pop
jnp
xchg
stc
lds
stos
adc
inc
add
imul
test
in
cmp
int
xchg
inc
into
stos
jno
jnp
adc
test
xchg
push
nop
stos
adc
hlt
hlt
xchg
mov
jge
mov
imul
je
push
out
data16
sub
mov
fisubr
(bad)
xchg
and
psraw
xor
test
retf
and
cwde
movs
cmp
jle
push
stc
shl
adc
inc
add
dec
jo
cli
inc
or
cld
jl
iret
mov
fcomp
mov
adc
xchg
adc
mov
dec
outs
das
loope
inc
cld
mov
mov
retf
(bad)
and
adc
xor
je
loope
iret
loopne
pop
dec
cs
cmp
test
push
out
jecxz
rcr
std
sbb
fcmovnu
pop
mov
idiv
push
fucomip
xchg
cmp
ds
mov
dec
xor
enter
mov
push
push
xchg
mov
cmc
mov
(bad)
std
pop
jecxz
sub
das
test
add
cmp
(bad)
sub
cli
mov
pop
sbb
dec
cwde
mov
mov
(bad)
dec
seta
ret
fsub
lods
jbe
jl
push
das
xor
pop
push
xchg
pop
mov
stc
test
mov
adc
test
in
cs
xchg
pusha
daa
cwde
dec
out
mov
push
xchg
fdivrp
mov
mov
pushf
dec
out
mov
mov
cmps
nop
pop
adc
push
fcmovnb
aad
push
pop
pop
mov
sti
jae
mov
cmps
sbb
test
mov
sbb
cmp
out
jl
(bad)
sbb
sub
fdiv
mov
test
inc
inc
push
adc
mov
push
jmp
fwait
push
sti
dec
adc
or
jl
out
xor
fiadd
daa
shr
or
sbb
popf
sahf
repnz
mov
in
(bad)
mov
lods
mov
push
mov
mov
push
mov
dec
pop
add
sub
mov
lock
sar
(bad)
lahf
enter
pop
dec
out
test
jns
fisubr
push
jp
xchg
ss
dec
int3
scas
(bad)
mov
pop
loope
icebp
aam
(bad)
push
retf
jmp
pop
(bad)
in
inc
scas
or
add
scas
test
adc
adc
scas
dec
push
mov
mov
xchg
(bad)
out
mov
movs
cli
fwait
in
pop
pop
retf
xor
add
leave
xor
or
pop
rcl
shr
js
sbb
pop
mov
clc
jecxz
mov
cmp
xor
(bad)
cld
xor
ja
jmp
test
mov
retf
ja
xor
pop
arpl
cmp
jp
lahf
adc
add
stos
add
xchg
xchg
inc
and
cld
mov
jnp
mov
das
inc
xchg
or
iret
jl
nop
sub
mov
gs
pop
cmp
push
adc
iret
nop
addr16
lahf
or
call
in
pop
test
lds
(bad)
dec
dec
lods
stos
add
mov
add
cld
loopne
jmp
jmp
ror
xor
xor
std
inc
push
xchg
or
fnstsw
cmp
push
mov
fcomp
mov
sub
mov
in
sub
ret
xchg
lock
xor
xchg
xor
in
outs
out
push
pop
mov
or
inc
pop
cmps
sbb
cwde
mov
(bad)
jmp
leave
jne
fbstp
jg
jno
test
bound
test
popa
adc
adc
sub
sbb
jle
jecxz
dec
lock
fst
jbe
sub
inc
ds
shl
in
out
lods
ins
sub
fisubr
or
jbe
adc
mov
cmp
adc
cmp
clc
push
retf
loope
pop
pop
js
aam
or
ja
cmp
test
in
iret
add
cs
sbb
repnz
xchg
bnd
jecxz
inc
cmp
pop
jno
push
rol
ds
pop
inc
mov
fist
outs
jo
adc
call
loope
push
test
and
lds
test
(bad)
pop
clc
iret
mov
sub
or
jl
retf
dec
cmc
aaa
and
popa
dec
add
repnz
jno
or
jns
add
sar
inc
jl
mov
retf
dec
sub
cld
xor
ror
jle
gs
cs
mov
ins
inc
push
xor
cmp
cli
lea
adc
loopne
rcl
enter
dec
pop
jl
mov
ss
(bad)
and
xlat
imul
adc
xor
icebp
inc
dec
pop
mov
pop
aaa
xchg
aam
inc
and
mov
pop
aam
mov
push
pop
mov
ficom
push
or
pop
not
mov
add
dec
fxch
lods
fstp
sbb
mov
xor
ss
mov
and
ror
push
in
fsub
push
mov
hlt
jge
pop
fisubr
iret
mov
(bad)
je
push
or
ja
inc
push
ret
adc
pop
mov
test
leave
inc
xor
jle
ret
pusha
mov
ins
mov
push
pop
pop
dec
jo
mov
sub
mov
cmp
xchg
das
sbb
mov
push
mov
and
jb
leave
inc
jbe
imul
cmp
jmp
gs
mov
xchg
clc
mov
mov
inc
scas
mov
xchg
pcmpeqw
sub
mov
movs
(bad)
mov
sbb
adc
or
int
(bad)
sahf
dec
(bad)
and
out
popa
jne
mov
scas
push
das
imul
adc
cmp
jle
out
push
lods
dec
mov
jnp
not
adc
lods
shl
sahf
int
mov
jmp
test
inc
je
dec
jbe
scas
das
cmp
daa
and
cdq
test
sbb
mov
sbb
dec
dec
cmp
xlat
(bad)
and
mov
cmp
(bad)
leave
call
sbb
or
div
out
jecxz
jp
dec
js
test
(bad)
sbb
(bad)
pop
jl
or
mov
mov
cmps
sub
repz
add
jb
sbb
faddp
mov
mov
and
and
xchg
mov
jl
mov
pop
mov
fistp
mov
mov
lods
jo
push
test
cmp
adc
or
sbb
xchg
mov
ret
idiv
jl
addr16
adc
(bad)
mov
add
call
pop
imul
adc
call
retf
sub
sahf
addr16
mov
or
mov
repz
pop
cmp
or
ficom
jnp
xor
dec
jmp
dec
fbstp
jecxz
and
adc
sbb
sub
mov
(bad)
push
test
jae
sbb
jge
and
mov
push
push
ins
leave
sbb
ret
xor
mov
out
dec
rcr
xor
mov
dec
jp
js
push
pop
dec
push
xor
mov
sub
sbb
cld
mov
pop
pushf
cmps
adc
es
movs
mov
mov
adc
dec
out
sti
inc
mov
clc
imul
mov
loope
xor
cmp
jmp
popf
jne
and
rcl
scas
jo
mov
in
xor
cli
push
aam
call
mov
push
in
mov
shr
jne
ins
icebp
jmp
or
push
shl
stc
stc
int3
ret
bound
inc
mov
and
add
jb
ds
ss
call
imul
mov
jl
sbb
es
cmp
adc
fimul
pop
and
pop
in
cwde
(bad)
sahf
sbb
add
push
jecxz
xor
mov
mov
mov
out
xor
std
cmp
fucomi
jp
jl
call
in
int3
and
mov
stos
in
push
aam
ins
adc
bound
cmp
fstp
in
pop
(bad)
add
shr
adc
xchg
outs
dec
imul
gs
mov
xchg
std
pop
and
mov
add
pusha
(bad)
stos
jecxz
ret
lods
adc
outs
xchg
mov
das
fs
outs
sub
scas
repnz
out
xchg
jne
sbb
jle
xor
movs
addr16
dec
adc
nop
mov
data16
inc
jle
xor
add
and
sub
mov
push
ds
mov
mov
push
pop
mov
mov
mov
fs
popf
or
popf
jg
push
xor
push
and
lock
cmp
sbb
out
outs
mul
mov
xor
adc
scas
sub
aam
sub
add
ror
sub
jmp
sahf
fidiv
(bad)
mov
addr16
retf
pusha
cwde
or
push
sub
and
cmp
ficomp
mov
test
xor
mov
into
(bad)
sbb
or
pop
std
in
or
and
stos
jns
jg
mov
lea
js
adc
scas
pop
add
aas
push
xor
cs
out
push
mov
sub
cmp
push
adc
and
cs
stos
push
sbb
sti
inc
arpl
movs
bound
inc
pop
repnz
cs
add
inc
call
cwde
mov
popa
int3
pop
jnp
rcr
mov
mov
push
aaa
inc
fadd
cmps
mov
enter
mov
add
mov
mov
rol
movs
sbb
push
int
inc
popf
iret
iret
jo
in
jge
inc
pop
adc
(bad)
in
dec
pop
stos
mov
std
sbb
cmp
movs
mov
cmp
mov
cmps
inc
push
pop
ss
push
mov
fcmove
or
jae
sti
sub
ret
popf
dec
aaa
mov
std
cmc
in
fstp
cmp
test
lds
js
inc
dec
pop
shl
xchg
cmp
xchg
xchg
push
mov
stos
mov
(bad)
lods
add
jno
into
sub
(bad)
rcr
jp
iret
xchg
cdq
popf
ror
push
cmps
stos
cli
cdq
das
jb
sbb
push
inc
out
jmp
addr16
(bad)
pop
ins
icebp
mov
mov
add
jns
sti
call
xchg
sbb
mov
retf
sub
xchg
dec
sbb
inc
adc
pushf
or
stc
jae
dec
mov
add
inc
and
mov
aam
stos
rol
cwde
sub
addr16
push
pop
jne
test
loopne
sahf
mov
les
xor
add
scas
repnz
lea
call
push
js
dec
jg
xor
pop
leave
push
loope
test
mov
or
add
int
push
in
or
xor
fnstsw
dec
mov
mov
and
sub
div
dec
adc
in
cmp
leave
cwde
adc
dec
mov
int
jbe
xchg
xor
mov
lock
adc
mov
aaa
pop
lds
mov
retf
add
pop
inc
or
aam
and
and
rcr
cdq
je
sahf
shl
mov
(bad)
dec
cwde
cmp
movs
jecxz
je
xchg
int
(bad)
jmp
xchg
jmp
cmp
xor
adc
aaa
stos
inc
adc
add
xor
push
add
or
pop
ret
call
mov
and
mov
(bad)
or
aad
je
jb
inc
dec
jle
test
pop
push
jmp
push
ficomp
loop
lods
nop
int3
daa
mov
les
add
icebp
mov
xlat
mov
adc
loope
ins
sbb
loopne
mov
bswap
mov
or
dec
outs
jecxz
fst
sub
pop
xchg
xor
mov
adc
xor
pop
test
je
mov
inc
(bad)
scas
jbe
mov
in
push
dec
xor
jl
sahf
icebp
cld
mov
ja
mov
dec
mov
(bad)
mov
call
add
daa
cmp
inc
xor
jae
and
adc
dec
dec
cmp
div
fistp
repnz
pop
mov
imul
icebp
test
push
ins
nop
xchg
(bad)
sbb
daa
shr
fs
sahf
(bad)
enter
test
pop
lods
addr16
loopne
pop
mov
mov
xor
cld
push
pusha
jmp
addr16
ret
and
or
mov
xor
lahf
xchg
jnp
mov
ins
shr
mov
movs
fcomp
push
push
add
fxch
inc
mov
fsub
xor
retf
mov
test
add
stos
add
sar
cmp
dec
dec
lahf
inc
jp
mov
or
pop
ret
and
sbb
lods
cld
leave
sub
xor
jmp
stos
fdivr
cmp
push
loope
add
test
push
fiadd
mov
int
jae
pop
mov
movs
cmc
stos
leave
or
mov
jg
scas
cmps
cmp
stc
or
sti
add
add
cmps
push
mov
je
cmp
or
adc
jg
bound
xor
fwait
pop
sub
pop
shl
out
nop
push
xchg
sbb
push
clc
or
sbb
push
aas
in
pop
mov
adc
mov
mov
inc
jno
mov
add
jne
and
adc
leave
lock
ds
or
stos
mov
out
xchg
movs
xchg
les
test
(bad)
jno
xchg
xchg
je
out
loopne
mov
lahf
adc
mov
lea
mov
xchg
jne
dec
jnp
js
inc
inc
pop
cmp
jle
inc
test
jb
dec
mov
jge
mov
xchg
push
xchg
iret
mov
adc
or
mov
push
fwait
push
adc
outs
jno
and
adc
mov
dec
mov
lea
cmp
inc
jbe
xor
mov
inc
sbb
xchg
cbw
(bad)
jmp
(bad)
xchg
pusha
nop
mov
mul
(bad)
aam
sbb
xlat
loop
jbe
cs
cmps
sub
push
shl
int
mov
mov
cmp
lahf
aaa
jecxz
scas
das
ds
cld
jle
aam
pop
sbb
jo
sub
repz
nop
xlat
pop
sbb
(bad)
pop
fcmovnbe
repnz
xor
pushf
in
test
aam
cmps
movs
out
fbstp
push
shl
push
push
idiv
test
fistp
jp
sub
fs
std
in
adc
cs
mov
mov
lods
jnp
ficomp
cli
ins
cmps
(bad)
js
pop
pop
pushf
inc
xchg
mov
mov
ss
inc
or
fs
out
push
jle
in
mov
fmul
push
xor
jb
jmp
(bad)
ss
imul
shl
adc
xchg
sbb
or
in
lods
shl
hlt
mov
inc
je
call
in
inc
prefetcht2
mov
add
adc
iret
mov
jbe
mov
pop
cmp
or
jmp
lea
fcom
(bad)
and
dec
adc
push
jle
adc
into
mov
or
into
(bad)
push
(bad)
and
mov
push
test
aad
adc
cmp
in
int3
ror
or
loopne
fidiv
clc
test
xchg
or
or
enter
pop
test
pop
stos
xor
repnz
out
sub
pop
mov
in
add
das
shl
ret
push
or
sti
xchg
cmc
mov
xchg
bound
xor
lock
inc
or
cmp
xor
dec
(bad)
pushf
ja
mov
iret
int3
add
clc
xor
cwde
fiadd
hlt
dec
pop
movs
arpl
xchg
ds
in
scas
add
imul
sbb
adc
jecxz
mov
jbe
mov
(bad)
fldenv
dec
aam
mov
pop
adc
dec
pop
enter
add
popa
or
push
mov
pop
or
pop
pop
mov
mov
cwde
aam
sub
mov
cs
ins
pop
lock
fcom
stos
mov
(bad)
jbe
sti
icebp
push
enter
jecxz
xor
cs
xchg
jo
lods
push
shr
sbb
ror
fstp
sub
dec
mov
add
add
cs
xor
mov
xor
lea
fwait
rol
pop
xchg
xchg
sub
lds
sbb
movs
into
(bad)
cmp
sbb
div
jecxz
xchg
push
test
mov
(bad)
repnz
xor
jmp
xlat
push
mov
je
mov
cmp
mov
mov
inc
sbb
lods
stos
pop
mov
jno
fisubr
or
ret
inc
mov
(bad)
and
jl
push
dec
retf
retf
dec
loop
xor
ins
lods
jo
test
mov
push
jle
pusha
icebp
lods
inc
mov
pushf
call
icebp
xchg
into
push
fst
cmp
inc
nop
pop
add
jnp
mov
xor
jae
rol
inc
add
sub
lds
outs
or
hlt
cmp
cmps
mov
and
and
adc
jmp
shr
mov
stc
test
inc
fs
xlat
pop
inc
ss
cmps
jg
mov
dec
imul
push
or
mov
mov
jae
mov
es
xchg
xor
mov
div
pusha
retf
xchg
jns
pop
sbb
jo
pop
xor
outs
add
jle
mov
retf
pop
mov
sub
ret
jno
or
sub
inc
aas
test
pcmpeqw
adc
int3
movs
aaa
push
push
test
in
inc
bound
push
add
sub
pop
pop
cdq
gs
dec
inc
cmp
adc
leave
call
pusha
xor
js
sbb
xor
icebp
lods
enter
push
std
inc
xchg
sbb
mov
sbb
ds
fs
add
mov
ss
mov
lds
outs
repz
ret
inc
hlt
std
adc
mov
ficom
es
pop
ror
dec
sub
mov
leave
in
test
fmulp
arpl
and
xor
leave
pushf
sub
ins
not
shl
and
adc
ficom
into
ja
jmp
ret
shl
cmp
xchg
mov
xor
inc
fld
xchg
jbe
pushf
(bad)
fsubr
popf
in
sbb
ret
aaa
jne
aam
mov
mov
imul
pop
(bad)
retf
pop
in
clc
ror
mov
mov
xlat
dec
lods
lea
loopne
cmc
cs
mov
fidivr
dec
mov
nop
adc
xchg
cmp
gs
shl
cmps
neg
add
xor
(bad)
push
je
clc
test
fbstp
loop
mov
out
out
or
sbb
mov
leave
or
fldenv
add
xchg
cld
cwde
xchg
pop
push
repnz
les
in
push
pop
popa
xchg
repnz
scas
jnp
mov
daa
sub
and
addr16
dec
xchg
inc
movs
push
mov
cmp
pop
and
pop
mul
adc
cmp
sub
ror
popa
pop
aam
dec
adc
std
mov
test
mov
popa
add
shl
or
sub
mov
je
mov
out
ins
loop
cmp
or
cld
dec
ret
sub
xor
dec
mov
add
clc
push
cmp
sbb
loopne
je
add
dec
icebp
and
pop
daa
mov
frstor
mov
xchg
jo
(bad)
fistp
call
sbb
mov
jmp
cdq
sub
jp
mov
sbb
and
loope
mov
mov
mov
xor
add
mov
bnd
clc
sub
js
fadd
movs
sbb
popa
rol
ret
repz
add
and
ja
in
mov
sbb
mov
mov
dec
cmc
int3
inc
scas
pmovmskb
and
pop
inc
ret
jmp
cmp
jp
call
xlat
lods
rol
test
dec
ins
retf
adc
std
aad
call
jl
push
pop
mov
dec
jmp
outs
cmc
xchg
cmps
sbb
jecxz
test
dec
cdq
in
and
xchg
retf
dec
jg
xor
pop
mov
idiv
lods
inc
jnp
or
inc
push
xchg
jg
mov
les
push
fs
call
fadd
pop
inc
ss
mov
mov
mov
jmp
inc
fwait
sti
fcom
adc
stos
mov
lahf
sbb
test
pop
cli
dec
sbb
sbb
mov
xor
mov
and
popa
xlat
sbb
mov
(bad)
cmp
push
push
cld
or
mov
in
(bad)
or
and
inc
pop
fisttp
addr16
mov
mov
repnz
jmp
imul
loopne
cmp
xor
push
iret
inc
jmp
fild
jle
cmps
stc
sar
mov
pop
jne
cmc
jns
mov
add
push
adc
jmp
push
test
cmp
dec
fsubrp
ja
sbb
ds
repz
cdq
xor
lods
iret
fild
mov
mov
iret
mov
test
push
push
jg
xchg
xlat
sub
adc
mov
fwait
mov
es
hlt
cmp
push
leave
inc
jbe
test
sub
lock
cld
test
out
fld
call
xchg
cmp
add
gs
(bad)
int
mov
pop
cmp
mov
scas
mov
sub
(bad)
aaa
aam
fisubr
cmp
push
jbe
imul
xchg
mov
outs
xchg
pop
add
mov
mov
mul
scas
je
mov
dec
xchg
outs
repz
mov
clc
ja
fwait
lods
stos
lds
retf
mov
mov
out
rcl
fdiv
sub
and
jo
fsin
loopne
enter
push
rcl
xor
jl
js
sbb
pop
out
fldenv
ja
call
jbe
cwde
les
out
cmp
mov
or
xor
jae
bound
push
mov
inc
std
lods
sub
xor
xchg
jl
mov
sti
scas
gs
adc
aas
sub
pop
jo
int3
ret
adc
xlat
dec
cli
loopne
stc
ja
outs
mov
or
push
test
push
call
push
cmc
xchg
sti
(bad)
into
mov
lock
pop
outs
sbb
arpl
dec
lock
(bad)
call
mov
fbld
cli
add
shl
int
mov
jb
fsubp
(bad)
mov
xchg
cmp
loopne
lock
mov
mov
bound
hlt
mov
pushf
inc
and
ret
imul
dec
mov
in
add
pop
inc
shr
ret
xchg
or
loope
call
mov
sbb
lds
push
sti
pop
adc
lahf
sti
(bad)
(bad)
dec
dec
xchg
inc
sbb
int
mov
inc
ficomp
pop
cmp
push
(bad)
xchg
jge
in
stos
cmp
fidiv
cmps
nop
scas
sbb
sar
xor
in
(bad)
imul
dec
and
jmp
in
cmp
icebp
in
pop
pop
inc
push
(bad)
sub
jae
fldenv
or
adc
pop
sub
test
sbb
jecxz
les
shr
idiv
ret
fsub
fistp
mov
or
mov
shr
cmp
add
pop
jns
(bad)
and
sub
ret
cmps
mov
xor
cli
retf
adc
adc
bound
or
popa
push
das
push
lea
mov
push
outs
cmp
or
jl
ficom
or
cmp
pop
push
push
xor
(bad)
fst
adc
and
out
hlt
xchg
mov
inc
xchg
push
cld
pop
inc
jmp
std
pop
call
sahf
push
xor
xchg
jp
adc
sbb
mov
jmp
rol
idiv
pop
inc
sub
int
das
mov
and
and
sbb
retf
mov
out
jge
stos
stos
inc
mov
clc
hlt
mov
mov
inc
add
fisttp
and
and
mov
and
jmp
pop
push
push
clc
mov
mov
adc
dec
pusha
cli
lods
div
push
or
repnz
add
fmul
cmp
xor
icebp
arpl
sbb
mov
xor
cld
pop
lods
push
test
pop
sti
hlt
jno
cli
mov
sub
popf
inc
sbb
dec
mov
frstpm(287
mov
mov
clc
(bad)
pop
sbb
fwait
dec
adc
push
sub
hlt
adc
jge
and
add
push
xchg
call
loope
adc
jne
push
mov
or
sar
mov
movzx
ja
shl
mov
rcl
adc
cmc
(bad)
in
adc
jle
cmp
cmc
dec
sbb
nop
mov
mov
in
mov
inc
rcr
sbb
cmps
stos
dec
push
loope
push
push
xor
movs
std
fs
or
jmp
aas
inc
xor
mov
cmp
outs
addr16
pop
dec
cld
cmp
and
pushaw
movs
aad
daa
mov
add
dec
xor
in
push
retf
push
lahf
jg
pop
jnp
je
and
add
stos
loope
pop
loope
inc
call
push
mov
mov
jae
jne
cmp
jo
xchg
pushf
mov
inc
pop
dec
xor
cs
jbe
outs
inc
pop
imul
adc
mov
icebp
aaa
scas
add
stc
mov
mov
or
sti
or
push
jle
dec
popa
ret
inc
call
fnsave
push
xchg
fs
pop
add
jp
(bad)
sbb
push
int
iret
sti
push
or
cmps
or
mov
inc
fist
ds
push
sub
mov
frstor
cmp
int3
test
fwait
repnz
arpl
out
retf
inc
xchg
sub
loope
jae
ins
or
cmp
sbb
add
jmp
pop
scas
fldcw
retf
jge
sbb
scas
aam
mov
push
mov
pop
jno
push
stc
or
xchg
pop
adc
inc
jg
retf
jg
pop
or
iret
push
xor
push
dec
pushf
mov
xchg
retf
in
lds
pop
(bad)
outs
enter
ds
rcr
mov
mov
inc
adc
pop
pop
cld
inc
jge
sahf
adc
ficomp
jne
inc
or
push
mov
pop
out
es
cmp
push
test
and
sbb
aad
add
(bad)
aad
push
in
mov
push
dec
repz
xor
xlat
pop
adc
push
mov
mov
sbb
push
jmp
outs
es
jae
inc
jbe
cs
adc
sbb
jae
jl
inc
lods
and
ror
sub
add
je
stc
loopne
in
adc
stos
outs
push
iret
enter
mov
cmp
out
mov
sub
pop
mov
push
adc
fs
aam
pop
pop
dec
xlat
mov
or
sbb
mov
jnp
sub
into
mov
gs
sub
shl
or
call
es
cmp
fld
outs
dec
cmps
adc
sbb
inc
in
add
cmps
fcom
pop
jle
lock
push
mov
arpl
mov
retf
mov
out
test
test
mov
js
add
stos
aam
inc
cdq
aad
mov
sar
push
pop
mov
pop
sti
push
cmp
add
pop
sbb
jb
jo
dec
scas
pushf
psraw
repz
div
dec
je
push
inc
ret
dec
push
lds
outs
pop
push
das
fs
mov
pop
sub
cmp
mov
jp
inc
(bad)
mov
sub
adc
mov
xchg
enter
jmp
outs
sti
test
dec
jbe
and
pop
repz
adc
pop
mov
mov
rcl
(bad)
ds
mov
jge
pop
shl
(bad)
repz
cwde
aad
pusha
in
jge
dec
not
arpl
cmc
cmp
repnz
leave
cli
push
pusha
ins
test
mov
dec
stc
test
ins
sbb
cld
sub
in
clc
push
pop
cli
and
mov
xor
sahf
pop
cmp
bound
add
lods
add
mov
or
cmp
push
mov
or
lahf
popf
ja
int
outs
mov
jo
adc
xchg
jecxz
scas
sub
or
or
call
jnp
dec
inc
movs
push
leave
mov
fs
scas
inc
shl
adc
imul
aad
(bad)
mov
dec
adc
scas
fcmovu
dec
add
mov
loopne
fld
xor
rol
and
mov
sbb
xchg
fldenv
mov
mov
jo
and
mov
xchg
pop
cmp
push
retf
push
jmp
adc
mov
jmp
mov
inc
bound
mov
cli
sub
sar
ins
inc
les
xor
pop
dec
sbb
in
xlat
inc
in
out
js
in
mov
inc
imul
xor
shr
dec
repnz
(bad)
or
(bad)
dec
or
xchg
(bad)
jo
pop
fcmovnu
xchg
mov
bound
push
push
leave
fwait
in
aas
mov
adc
sub
test
pushf
not
or
push
cmp
out
jae
mov
add
jns
(bad)
mov
cwde
and
mov
retf
xchg
jnp
push
fld
icebp
jmp
xchg
xlat
in
cmc
pop
sahf
inc
xor
mov
and
or
cmp
fadd
and
fwait
push
pop
mov
dec
push
cmp
repnz
lea
add
fmul
ret
cmps
or
pop
or
adc
ret
push
or
pop
and
in
ss
push
fs
pop
cmp
and
(bad)
dec
lods
mov
aaa
in
out
retf
das
inc
in
in
push
in
adc
js
les
dec
retf
mov
dec
in
xchg
jmp
jl
xchg
add
pop
pop
sub
mov
les
aam
fcomp
retf
jl
cs
retf
or
popf
dec
pop
mov
test
dec
dec
cmp
outs
mov
pop
cmp
sub
popa
or
in
and
mov
fimul
je
or
data16
cwde
icebp
out
fild
mov
mov
test
mov
jno
cli
jmp
out
aas
pop
sbb
adc
cwde
sbb
nop
inc
mov
jmp
mov
cmp
mov
out
xor
adc
out
rol
pop
int
xchg
(bad)
je
outs
xlat
xchg
aam
mov
das
and
hlt
xor
jb
mul
call
dec
fistp
jp
or
stos
push
xchg
sub
cmp
xchg
ss
mov
xchg
sub
sbb
outs
jnp
call
pushf
(bad)
adc
xor
int
mov
sar
or
test
jnp
or
xchg
test
dec
scas
xor
push
je
cmp
mov
mov
jbe
dec
or
repz
push
or
mov
pop
mov
(bad)
and
fistp
mov
pop
test
cmp
leave
gs
scas
pop
repnz
imul
pop
mov
mov
inc
ficom
mov
xchg
sub
dec
imul
hlt
lods
push
pop
lea
xor
cwde
add
aam
test
iret
pop
mov
pop
push
pop
or
xchg
jle
mov
inc
or
pop
fwait
(bad)
mov
(bad)
daa
iret
dec
(bad)
sahf
cmps
imul
mov
call
aad
test
cmp
mov
push
dec
and
xchg
daa
jge
pop
pop
dec
cmp
mov
and
imul
xor
and
inc
jns
icebp
xchg
pushf
jae
or
adc
fidiv
mov
shl
rol
call
xor
pop
mov
repnz
daa
push
jl
adc
mov
jmp
pop
dec
pop
xchg
retf
cwde
mov
xchg
mov
icebp
mul
call
jns
xchg
mov
and
sub
popa
mov
and
(bad)
sahf
call
cmps
jle
jbe
ins
movs
fcom
mov
cmp
sub
adc
or
jne
mov
push
leave
mov
call
push
mov
cmps
add
(bad)
fadd
sbb
sub
jl
fild
cmp
popf
adc
stc
jo
cmps
psrld
int
xlat
retf
xor
cmp
or
jmp
rol
jge
inc
and
shr
mov
xchg
dec
sti
mov
rcl
cmp
dec
mov
push
mov
cld
sar
push
es
les
adc
fidivr
mov
data16
das
lock
adc
sub
inc
inc
call
lds
dec
cmc
push
js
test
ja
lock
dec
jae
push
(bad)
pop
mov
jmp
push
rcr
jo
xor
mov
cmps
jmp
add
rcr
rol
and
xchg
pop
sbb
mov
imul
xor
or
xchg
add
push
xchg
(bad)
fnstsw
gs
test
push
loope
movs
(bad)
cmc
dec
and
cmp
cli
pop
lods
in
mov
cmps
das
add
gs
movs
and
out
add
cs
push
fst
mov
xchg
jne
ftst
mov
xchg
jecxz
xor
retf
jmp
mov
jno
pop
fmul
and
add
xchg
outs
xchg
pop
idiv
jg
movs
ins
adc
movs
cmp
in
int
dec
mov
(bad)
mov
and
inc
pushf
idiv
cmp
jle
xor
mov
xchg
jle
cmc
mov
push
mov
jns
or
or
ret
mov
pop
std
sub
gs
fpatan
mov
xchg
rcr
add
call
retf
int3
sub
arpl
stc
inc
std
not
push
enter
in
lds
sub
clc
add
push
sub
dec
mov
mov
fdiv
ss
jge
pop
clc
push
push
nop
sbb
sbb
cmp
jmp
pop
mov
cwde
clc
pop
cmp
push
push
scas
fcomp
mov
cwde
mov
xchg
jbe
mov
lods
or
mov
nop
popa
es
sbb
sbb
or
into
xor
ret
in
enter
stos
mov
(bad)
test
jo
loope
(bad)
jge
popf
movs
cmp
pop
cmps
stos
rcr
mov
mov
xor
shl
dec
push
xlat
dec
push
sub
adc
enter
(bad)
std
or
ds
les
imul
cmp
sub
or
xor
or
mov
mov
mov
jne
sti
xchg
dec
xor
sahf
sti
test
or
fwait
xchg
push
push
fadd
inc
out
test
pusha
add
dec
jno
icebp
scas
test
mov
ja
dec
movs
jmp
adc
cmc
lea
into
add
sub
ins
test
xchg
mov
loopne
lds
pop
lods
cdq
jl
xor
pop
(bad)
sub
cli
fnstsw
xchg
cmp
jae
adc
pop
inc
sbb
daa
adc
xchg
sahf
retf
iret
add
inc
ret
(bad)
sbb
xchg
inc
int
xor
sbb
xchg
jl
mov
lods
movs
das
pop
cmp
es
ds
ja
xchg
imul
xor
and
jmp
inc
and
pop
xor
rol
pop
xchg
or
sub
call
dec
test
pop
push
push
loop
out
repz
mov
fwait
inc
loope
call
and
fs
and
pop
jp
loopne
rcl
dec
fs
mov
ja
xchg
sub
xchg
rep
mov
xlat
adc
hlt
ss
add
std
jnp
jae
(bad)
dec
adc
dec
hlt
xchg
cmp
les
cli
xor
inc
das
inc
xchg
adc
inc
stos
pop
dec
fbstp
retf
mov
xor
mov
adc
in
xchg
out
dec
mov
push
mov
clc
movs
or
repz
add
dec
lock
mov
pop
lods
loopne
mov
pop
xchg
pop
jge
fcom
js
dec
cmp
mov
mov
in
cwde
push
lea
jle
bound
push
inc
or
or
aad
stos
clc
out
sub
mov
dec
(bad)
cmps
stos
xchg
mov
loop
ins
jle
adc
xor
lea
push
cmp
cdq
fiadd
jmp
mov
cmp
inc
lods
adc
and
fxam
fsubp
loopne
and
mov
sbb
xor
in
fsubr
mov
and
xchg
dec
jae
push
xchg
call
jp
mov
mov
ret
ins
rol
mov
pop
pop
in
jnp
pop
stos
sub
add
cmp
mov
adc
xor
dec
sub
adc
hlt
mov
fcmove
sbb
vmovaps
mov
xchg
inc
mov
lods
call
out
test
xlat
sti
fild
out
jg
sbb
dec
push
mov
or
jo
ins
sub
or
and
jo
pushf
mov
adc
ins
push
cwde
add
pop
int
mov
mov
js
nop
call
lahf
adc
mov
jge
loope
jmp
lods
dec
mov
aad
test
mov
pop
add
push
mov
clc
push
das
mov
mov
xor
neg
cmps
dec
movs
mov
pop
popa
pushf
adc
sahf
pop
clc
pop
enter
ret
test
xchg
push
mov
add
sub
ins
sar
arpl
xchg
test
in
inc
adc
daa
jno
mov
inc
imul
dec
adc
adc
fdiv
mov
enter
out
lea
cld
call
sbb
mov
xchg
ins
sbb
fs
retf
outs
sub
mov
(bad)
test
cmps
xchg
sbb
std
(bad)
pop
mov
pusha
inc
push
pop
dec
or
push
leave
or
aam
into
call
add
mov
xchg
repnz
out
lahf
repnz
sbb
adc
movs
outs
inc
sbb
xlat
or
pushf
rol
and
lock
mov
scas
(bad)
mov
inc
lods
in
leave
add
and
int
into
lods
fsub
scas
sub
stos
xor
sbb
ds
mov
test
push
scas
adc
mov
add
popf
mov
mov
ss
repnz
add
adc
inc
mov
lahf
test
add
add
mov
mov
push
mov
imul
hlt
(bad)
push
imul
mov
pop
in
clc
lods
inc
movs
add
cwde
adc
sti
mov
add
and
sti
jge
xchg
xchg
int3
and
into
sbb
stos
xor
movs
jge
pop
push
xchg
psubq
aas
jecxz
dec
std
dec
rol
out
mov
jge
outs
xchg
pop
xchg
jl
sub
(bad)
push
lea
aas
int3
dec
xchg
hlt
inc
mov
aaa
cmp
jne
jns
imul
or
inc
cwde
mov
pop
mov
cmps
pop
sub
mov
dec
shr
mov
inc
push
hlt
rcr
inc
jb
add
pop
out
gs
mov
cmp
cmp
add
ret
imul
jbe
xchg
mov
sub
pop
(bad)
pop
mov
rcl
(bad)
jns
out
or
std
push
jnp
xor
imul
inc
adc
or
lods
xchg
fdivr
aaa
dec
add
leave
lock
dec
inc
shr
lahf
ins
and
fld
or
movs
push
mov
push
movs
pop
aam
inc
pop
jmp
mov
sub
push
ret
sbb
jmp
loopne
add
loopne
or
mov
mov
in
daa
in
or
add
cmp
fwait
mov
add
(bad)
sti
fidivr
push
xor
in
pop
cmp
mov
out
lods
js
dec
and
mov
es
jno
push
push
(bad)
clc
(bad)
iret
fmul
lock
les
lds
push
or
cmps
xlat
or
scas
pop
xchg
push
xor
mov
dec
push
xor
cmp
jb
movs
inc
jg
loopne
iret
(bad)
mov
in
add
sbb
iret
and
sub
ins
add
sub
dec
ret
jg
or
aam
and
(bad)
jo
mov
mov
mov
cli
xchg
dec
sub
jno
push
fcomp
outs
adc
stos
pop
mov
loopne
ret
cli
pop
loopne
cmp
(bad)
stos
push
push
and
popa
sahf
xor
push
mov
jmp
pop
mov
inc
sbb
fs
iret
sub
push
jno
mov
adc
xchg
xchg
mov
pop
add
push
jecxz
push
xchg
sbb
adc
(bad)
mov
mov
dec
repz
pop
bound
sbb
dec
push
add
adc
and
(bad)
ror
lods
push
jmp
fnstsw
pop
dec
xchg
lds
mov
and
push
pop
adc
test
dec
retf
jnp
mov
mul
add
(bad)
xor
mov
retf
pop
sbb
test
lock
mov
out
shl
clc
pop
add
in
or
les
popf
mov
je
mov
dec
mov
cmp
enter
fcomp
xchg
mov
jae
pop
out
shl
add
push
pop
push
jge
cmp
inc
adc
and
mov
lods
ins
mov
jne
test
xor
sub
sub
pop
ret
cmps
mov
retf
out
js
jbe
jmp
pop
ja
(bad)
sub
sub
jae
pop
fnstcw
repz
jno
mov
arpl
sbb
in
(bad)
in
inc
jmp
and
mov
es
jmp
fist
pop
mov
pusha
shr
inc
mov
out
mov
mov
outs
sub
pop
stos
push
cdq
pop
mov
xchg
mov
in
xor
cmp
jo
ror
ins
add
repz
xchg
mov
imul
mov
jne
mov
ins
out
stos
mov
jo
ret
into
add
ss
cmovle
je
push
inc
mov
or
mov
cmps
sub
sbb
ja
pop
(bad)
lahf
out
jo
push
ret
jnp
sbb
shl
xor
aas
leave
push
mov
cmp
call
adc
jg
push
sub
mov
jmp
inc
jbe
ret
popa
cmp
(bad)
ins
push
sbb
mov
ins
rol
jbe
fild
ror
push
jns
pop
jbe
xor
push
ds
mov
stc
lahf
push
les
stos
or
pushf
loopne
fadd
adc
dec
push
dec
enter
aas
cmp
pop
or
or
out
call
aad
lock
call
xchg
and
in
pop
cmp
dec
push
adc
sbb
sbb
adc
cs
sahf
xor
xor
add
push
ficomp
sub
mov
mov
dec
rol
dec
cmp
js
lds
jmp
add
in
push
sub
jmp
bound
sub
mov
sti
jmp
add
leave
stos
mov
mov
xor
mov
and
fist
dec
xor
call
pop
ins
inc
dec
cld
cmp
xor
sar
jmp
jl
fs
retf
mov
stos
frstor
bound
sti
in
js
push
lahf
rcr
mov
in
movs
xor
adc
push
add
lea
jae
outs
test
pop
ds
pop
dec
stos
neg
jle
and
movs
stos
jmp
ret
cmp
push
xchg
xchg
ins
xchg
xlat
dec
retf
xchg
in
gs
dec
mov
inc
jb
hlt
or
cmps
sub
(bad)
mov
cmp
push
hlt
lahf
ds
int
and
and
fnsave
mov
adc
mov
jge
add
js
xchg
mov
(bad)
dec
sub
shl
out
cmp
clc
jp
ret
pushf
inc
adc
and
movs
and
dec
jns
mov
mov
test
aas
fadd
cmps
in
cmp
inc
adc
add
inc
xor
cmps
in
sbb
pop
in
mov
std
scas
add
outs
mov
loop
push
outs
std
and
mov
ret
dec
pop
xlat
stos
outs
inc
adc
and
jmp
into
jae
dec
jmp
rcl
ret
rcl
test
addr16
shl
loope
sub
xchg
nop
mov
(bad)
int3
dec
les
dec
adc
aam
(bad)
adc
enter
mov
push
retf
and
repnz
adc
hlt
int
cdq
sbb
jmp
xchg
adc
cwde
push
inc
push
mov
sbb
and
cdq
inc
cmp
jmp
stos
xor
mov
ins
dec
and
sbb
inc
cli
inc
mov
mov
outs
xchg
or
cmp
mov
dec
aas
mov
cmps
arpl
inc
aam
jo
stos
jl
imul
mov
mov
adc
adc
outs
stos
hlt
pop
push
shl
adc
mov
sbb
push
pop
add
(bad)
sub
or
fstp
xor
sbb
std
jae
mov
in
cmp
mov
retf
stos
aad
xchg
pop
stos
xchg
mov
lea
inc
test
stc
xchg
inc
outs
fisubr
inc
imul
adc
sbb
ret
sbb
pop
xor
lock
xor
dec
sub
clc
dec
sbb
push
xor
lea
pop
sbb
(bad)
or
push
mov
push
lds
xor
dec
movs
jnp
dec
or
stc
scas
cmp
inc
or
fucomp
jo
sbb
cmp
imul
std
inc
dec
inc
aas
mov
sbb
mov
call
data16
aam
imul
out
ret
sar
push
add
sar
ja
stos
(bad)
sub
mov
test
in
imul
sar
xchg
(bad)
mov
inc
inc
sub
popf
xchg
mov
jmp
mov
mov
push
(bad)
dec
cmp
push
cmp
sub
dec
sub
add
out
into
std
fist
cmp
(bad)
and
and
xor
inc
pop
push
push
jg
stos
xor
pop
jne
in
(bad)
sbb
add
and
sub
in
es
inc
xor
jbe
mov
mov
mov
sub
(bad)
jl
jmp
mov
cdq
daa
push
outs
pop
mov
mov
(bad)
and
sub
out
cmp
cmps
mov
mov
xor
out
pushf
mov
add
mov
test
mov
test
movs
jmp
cmp
push
jg
sbb
ins
sub
pop
imul
jb
ins
iret
leave
mov
mov
sahf
loope
and
mov
dec
inc
fldcw
test
clc
xor
or
retf
adc
mov
pop
dec
lea
xlat
sbb
pop
dec
inc
push
lods
dec
jae
or
adc
out
dec
test
mov
or
pop
cli
ficom
out
jmp
in
mov
mov
inc
in
adc
xlat
cmp
inc
and
mul
pop
(bad)
retf
sbb
mul
push
das
sahf
icebp
add
mov
xchg
xor
dec
ret
hlt
je
out
dec
ins
adc
xchg
cli
xchg
ins
sub
je
ds
sbb
movs
test
cmc
std
xor
call
in
stc
lds
push
fmul
or
mov
out
xchg
jmp
test
pusha
sahf
test
add
ja
jecxz
mov
xchg
repnz
(bad)
shr
cmp
das
imul
pop
leave
jnp
test
cmp
test
(bad)
(bad)
js
stc
adc
push
xor
mov
jl
out
cld
into
pop
fisttp
lea
(bad)
fstp
fwait
mov
imul
inc
test
aad
gs
retf
fcom
and
jmp
inc
mov
cmp
into
daa
popf
addr16
pop
add
(bad)
mov
or
xchg
mov
or
jae
pop
inc
add
movs
cdq
inc
nop
mov
dec
inc
imul
cmp
mul
dec
jmp
and
pop
popa
daa
or
inc
sbb
or
out
ror
cmps
inc
or
es
(bad)
ficomp
and
jbe
mov
push
sahf
icebp
xor
jmp
ds
movs
cmp
pop
cmp
cdq
fcomp
ins
xchg
rol
mov
or
outs
call
rcr
push
sti
xchg
les
sar
inc
mov
push
mov
sub
jp
push
add
xchg
jns
data16
push
mov
mov
pop
popa
fnstcw
adc
nop
pushf
retf
sub
nop
fwait
bound
nop
inc
lods
arpl
fldcw
xor
imul
or
jle
icebp
es
mov
dec
xor
cdq
pop
pop
add
std
adc
mov
jp
pushf
pop
(bad)
icebp
popf
lahf
adc
sub
mul
and
lea
mov
lods
neg
inc
mov
icebp
and
jp
dec
shl
call
shr
pop
pop
(bad)
int3
mov
inc
cwde
mov
call
xor
jbe
pop
shr
adc
adc
pop
in
in
test
pop
repz
ror
loop
pushf
dec
(bad)
dec
dec
lds
sub
or
cmp
xchg
jl
mov
in
test
sbb
in
rol
push
add
into
jno
idiv
mov
jmp
nop
adc
sbb
push
sub
xchg
add
cmc
sti
push
shl
mov
sub
or
retf
pusha
inc
popa
data16
and
dec
test
mov
leave
mov
pushf
lahf
test
xor
hlt
mov
outs
jae
mov
(bad)
sub
mov
cli
arpl
inc
sbb
add
bound
sub
gs
or
push
addr16
mov
js
leave
imul
sbb
popa
arpl
imul
arpl
aas
nop
mov
int
out
loop
repnz
pop
inc
sti
and
ficomp
dec
sbb
aam
inc
pop
das
xor
test
push
cld
xor
sub
jmp
adc
stos
ret
mov
xchg
cld
lock
dec
xor
dec
icebp
fbstp
scas
pshufw
aad
mov
xlat
mov
mov
call
call
push
push
lods
inc
pop
fisub
or
jbe
rol
xor
push
jbe
out
sbb
shl
mov
cmps
je
popa
ret
jge
sahf
cdq
clc
or
mov
jmp
add
xchg
mov
daa
push
pop
cmp
jnp
in
call
scas
cmc
mov
adc
cwde
movs
jge
or
in
adc
jmp
xchg
fstp
xchg
jl
rcr
xchg
stc
jns
and
adc
jg
or
adc
mov
imul
mov
cld
cld
leave
pop
inc
mov
cmps
loope
(bad)
imul
sub
push
jb
stos
lock
retf
jbe
jecxz
js
and
ins
test
fs
test
rol
retf
xchg
inc
xor
les
xchg
jo
gs
leave
mov
mov
pushf
add
sbb
adc
inc
fs
cmp
and
pop
rcl
push
xchg
jecxz
fwait
ja
jge
repz
sub
cmp
cmp
cmp
(bad)
nop
outs
jge
addr16
popf
and
lods
test
add
mov
jne
push
in
sub
call
and
sub
test
cmps
mov
in
sub
test
and
lods
jno
out
cmp
in
movs
dec
ds
cmc
jl
stos
cmp
fisttp
or
jg
adc
mov
out
repz
inc
rcr
mov
or
dec
cmp
icebp
movs
js
and
pop
sub
rep
(bad)
retf
dec
push
lea
or
les
cmc
sbb
cld
movs
and
addr16
xor
mov
ror
push
sar
rcl
stos
stos
mov
pop
scas
dec
xchg
popa
xchg
xchg
or
push
int
retf
pusha
pop
pusha
mov
lea
mov
mov
inc
ins
sub
cmps
push
ins
and
sbb
(bad)
xchg
sahf
mov
(bad)
retf
sbb
adc
mov
ja
mov
aam
call
jmp
call
xchg
add
inc
push
adc
inc
mov
repz
nop
or
and
int3
mov
pop
push
pop
jg
cmp
sub
xchg
sti
sbb
xchg
icebp
aam
rol
adc
sbb
sti
pop
push
test
scas
lods
cmps
inc
arpl
dec
or
mov
ret
jns
adc
ror
ja
mov
dec
mov
xchg
daa
jb
adc
movs
jo
add
ret
xchg
in
loop
out
jp
jno
div
lock
and
adc
pop
cwde
fild
pusha
add
jg
test
sub
inc
ds
outs
out
cmps
add
mov
sbb
add
and
inc
mov
jno
aas
mov
test
(bad)
push
push
mov
adc
push
pop
out
shl
pop
pusha
xchg
sub
scas
loop
add
retf
test
ins
fnstsw
xor
inc
mov
es
xlat
scas
lahf
mov
pop
cmps
push
mov
inc
inc
addr16
lea
fs
rol
mov
lods
pushf
sub
fsub
xchg
(bad)
sbb
ret
out
sub
fidiv
inc
popa
push
mov
xchg
xchg
fisttp
outs
arpl
mov
xchg
cmp
push
sub
jge
inc
ja
jae
xor
or
repnz
xchg
mov
out
or
fimul
call
jmp
lods
rol
outs
cwde
bnd
arpl
push
(bad)
push
dec
and
pop
mov
and
outs
mov
mov
jns
push
cmps
dec
mov
mov
dec
jle
xor
mov
mov
push
arpl
ds
pop
(bad)
fs
mov
dec
or
scas
cmp
inc
sbb
jo
arpl
xor
int3
push
cmp
jno
mov
cmp
rcl
adc
cmp
imul
inc
icebp
jmp
mov
inc
adc
jecxz
daa
out
or
push
cmps
(bad)
int
inc
mov
dec
cmp
jl
ins
outs
ror
sbb
repz
or
clc
inc
xchg
mov
call
mov
adc
data16
mov
push
sub
outs
ffree
inc
outs
jge
mov
daa
push
push
sub
push
out
inc
xchg
retf
sub
pop
xchg
push
xor
cmp
(bad)
jbe
lea
(bad)
dec
fbld
dec
or
jo
cdq
cld
sbb
jb
and
xor
sbb
adc
or
(bad)
loopne
in
(bad)
adc
push
(bad)
cmps
inc
ins
add
dec
pop
in
fadd
cmp
inc
sub
out
jo
stos
mov
add
inc
dec
inc
dec
in
je
mov
add
call
jo
(bad)
scas
aam
mov
jb
lods
pop
adc
bound
ficom
cdq
adc
cli
adc
jnp
rcr
jb
(bad)
mov
push
icebp
mov
ja
inc
lods
fistp
sub
loope
adc
icebp
pop
sub
cwde
movs
stc
fcomp
inc
imul
sub
sub
xlat
or
xor
xchg
adc
dec
jg
in
sbb
jae
cwde
cs
sbb
push
repz
mov
adc
loop
stos
add
push
and
mov
xchg
fcmovbe
lahf
scas
into
jbe
push
adc
push
push
cs
lods
fwait
add
outs
(bad)
xlat
cmps
xchg
dec
aaa
div
cmc
pop
(bad)
movs
cmp
add
mov
xchg
jle
mov
jb
cdq
fldcw
inc
aad
and
sub
ror
cmp
xchg
iret
ficomp
inc
mov
mov
fdivp
sahf
jo
mov
jl
cmp
sub
cmp
iret
add
mov
mov
add
pop
jmp
push
cmp
clc
adc
mov
lds
sbb
xor
mov
ss
out
or
jecxz
cmp
xchg
xchg
xor
sub
cmp
push
addr16
mov
jge
lods
scas
xor
iret
icebp
das
(bad)
call
sbb
cdq
and
inc
(bad)
lods
jge
sar
inc
adc
mov
ret
cs
stos
pop
mov
jne
in
ins
lahf
dec
dec
outs
cli
(bad)
jb
pop
sbb
sbb
stos
enter
mov
xchg
or
(bad)
out
data16
test
mov
orps
les
(bad)
stc
pop
aam
cmp
mov
dec
scas
dec
icebp
daa
imul
mov
push
pop
jecxz
out
xchg
scas
scas
add
jmp
adc
cs
mov
push
sbb
jno
call
xchg
xor
mov
add
add
push
ret
or
inc
mov
mov
add
std
or
and
ss
loop
lds
jg
clc
xor
xchg
add
mov
and
cmp
xchg
rcr
pop
push
ss
dec
idiv
sub
psubw
xchg
gs
dec
fcomp
or
adc
shl
rcr
jecxz
leave
cs
sti
pop
rcr
fstp
or
in
adc
outs
rcr
retf
jle
push
mov
dec
mov
arpl
imul
and
lods
ds
push
add
adc
pop
or
(bad)
iret
jmp
lds
push
push
dec
jns
mov
mov
mov
jo
xor
jmp
loop
shr
or
fidiv
dec
mov
mov
sub
push
in
push
push
ja
retf
lods
push
movs
inc
mov
ss
xchg
jmp
fstp
inc
xor
or
hlt
lea
mov
(bad)
jbe
fs
and
clc
popf
stos
(bad)
push
enter
sar
dec
mov
aad
mov
inc
lock
and
cbw
aaa
test
push
test
jb
fsub
mov
out
test
pop
mov
(bad)
jecxz
xor
loop
mov
in
adc
add
sub
fmul
stos
test
repnz
sub
xor
ret
add
out
xchg
push
ins
mov
inc
add
fwait
movs
and
mov
or
iret
bound
dec
or
imul
hlt
aaa
and
cmc
in
rcr
dec
aaa
test
outs
jo
das
leave
jmp
dec
int
sub
movs
push
mov
lahf
stos
xor
mov
push
mov
jo
mov
stc
sub
popf
pop
inc
sti
scas
popa
cmps
jp
jmp
retf
inc
mov
icebp
adc
sahf
imul
cmps
sbb
jne
adc
sbb
inc
push
pop
adc
popf
cli
add
mov
jns
or
jb
stc
mov
pop
test
inc
cmp
dec
in
jo
stos
or
and
div
movs
mov
cmp
rcl
cld
mov
bound
push
inc
dec
pop
sti
add
mov
jle
dec
xchg
movs
inc
xchg
sub
aaa
inc
mov
cli
jecxz
shr
mov
repnz
sbb
fsubr
xchg
(bad)
loopne
call
mov
outs
stos
icebp
inc
and
xchg
inc
sahf
les
jge
aaa
push
mov
pop
fbld
cdq
push
cmp
lods
fistp
into
jae
pusha
add
popf
sbb
dec
in
dec
mov
lahf
icebp
mov
fsub
jl
fisub
mov
mov
ret
sbb
mov
std
pushf
imul
test
cdq
adc
mov
xchg
jbe
cdq
into
push
add
aaa
xchg
mov
ror
sbb
ja
mov
mov
adc
sbb
sar
test
add
ja
pop
xor
scas
push
and
jno
scas
or
mov
arpl
retf
cmp
ret
dec
jo
xor
jp
iret
xchg
mov
loop
jno
std
mov
fidivr
movs
pusha
call
out
lea
fadd
test
push
xor
push
fstp
add
fsubr
les
dec
rcr
stc
cmp
ss
cmp
fdivr
pop
mov
in
cmp
popa
mov
out
adc
jmp
mul
jle
pop
mov
(bad)
inc
dec
or
loopne
lahf
retf
xchg
sbb
fistp
jp
dec
pop
aas
cmp
xchg
call
or
and
dec
xchg
(bad)
sbb
pop
sub
adc
jmp
push
ret
mov
aad
xor
lods
ds
jmp
mov
out
adc
std
mov
punpckldq
aam
fwait
mov
and
push
adc
js
icebp
dec
jecxz
dec
and
pop
movs
adc
in
test
leave
das
add
shl
in
(bad)
push
inc
cs
dec
cmp
push
push
and
xchg
dec
ss
jge
enter
sete
scas
jae
imul
xchg
jl
push
sub
jl
xor
in
and
sar
aad
(bad)
cdq
lahf
repnz
pop
(bad)
jp
int3
xchg
inc
jnp
inc
arpl
(bad)
cmp
jae
mov
cs
lods
sti
cmp
call
adc
mov
sub
jo
mov
cmp
test
push
dec
test
jne
cmps
dec
jge
push
pop
gs
and
daa
syscall
jnp
lock
lahf
stc
mov
push
sbb
lds
mov
(bad)
cmc
mov
jecxz
cmp
bound
sti
adc
xchg
sar
push
dec
loopne
ins
ss
movs
cli
in
xchg
or
dec
rol
test
cmp
(bad)
fcmovbe
bound
pop
inc
mov
movs
mov
xchg
movs
pusha
jb
xchg
mov
inc
jecxz
inc
aam
int
mov
movs
inc
fs
adc
outs
xlat
jg
or
int
mov
(bad)
dec
dec
xchg
push
jo
ror
sub
mov
mov
inc
lods
push
sbb
dec
jge
cmp
inc
leave
push
xchg
cld
jl
sub
jb
sbb
enter
repnz
fs
fstp
and
retf
sbb
(bad)
adc
push
inc
add
dec
dec
rep
mov
sub
and
cld
fidivr
pusha
mov
lea
xchg
mov
sub
sbb
jns
fbld
sahf
adc
adc
movs
movs
lock
out
adc
and
mov
jmp
repnz
and
sub
cwde
add
lods
and
icebp
ins
push
(bad)
stc
sahf
xor
es
xchg
fcos
push
pop
sar
cmp
jmp
jl
(bad)
retf
push
xchg
loopne
push
push
stos
test
(bad)
int3
and
or
out
pop
retf
jnp
push
jg
in
push
pop
inc
icebp
xchg
scas
sub
(bad)
lea
ret
adc
push
pop
adc
or
inc
sahf
leave
outs
leave
sbb
cli
out
mov
retf
xlat
mov
pop
cld
cli
repz
jne
jecxz
jge
sub
mov
ret
xchg
dec
jnp
add
psraw
rcr
fiadd
es
add
adc
fwait
jge
pop
mov
cli
inc
or
xchg
nop
int
jb
in
clc
out
xchg
fbld
xor
jbe
mov
mov
sub
xchg
adc
sub
and
jecxz
pop
push
pop
dec
xchg
sub
cmp
cdq
or
hlt
mov
jne
lock
mov
and
and
adc
outs
xor
dec
push
ds
push
in
push
iret
hlt
(bad)
outs
jl
(bad)
mov
jno
sahf
pop
idiv
in
mov
fimul
sar
loopne
mov
rcr
ja
jg
dec
dec
dec
jle
mov
frstor
ja
pop
or
pop
xor
dec
(bad)
or
gs
mov
dec
gs
loopne
jmp
dec
push
pop
fcomp
or
sub
bound
in
lods
mov
mov
mov
sbb
lods
push
fisubr
imul
popf
xchg
iret
lea
test
cmp
aad
cmp
out
or
dec
add
call
dec
out
bound
fistp
pop
push
(bad)
ror
and
sub
lods
lds
cld
mov
fbstp
push
and
in
dec
and
fstp
lock
sbb
dec
test
out
loop
movs
jne
pusha
inc
xchg
push
iret
adc
inc
mov
xchg
add
jge
push
cmp
fwait
out
pushw
pop
pop
lods
(bad)
(bad)
jecxz
push
fild
sbb
push
cmc
push
cmp
mov
sub
cmp
(bad)
js
neg
cmp
sbb
xor
loopne
stos
xor
int3
(bad)
jnp
loop
stos
push
xchg
cmc
aam
add
xor
cmps
adc
rol
and
icebp
mov
adc
call
dec
xchg
daa
jecxz
mov
out
and
jae
(bad)
mov
add
aad
xchg
loop
enter
dec
(bad)
dec
sub
sub
sbb
xchg
sbb
dec
jns
pop
xchg
or
jmp
add
jno
ss
icebp
mov
mov
jo
xor
test
int
adc
outs
in
dec
mov
and
mov
push
push
gs
mov
lahf
shr
push
mov
fadd
ins
repz
xchg
push
mov
out
inc
push
(bad)
xchg
add
ins
ins
lea
sub
mov
outs
add
adc
jo
scas
inc
test
mov
push
imul
ins
push
xor
jns
adc
cmps
pop
jmp
and
inc
xor
jno
je
rcl
in
ds
ds
jge
mov
fisub
add
js
pop
in
sub
inc
mov
das
(bad)
cmc
shl
push
sub
sbb
addr16
(bad)
repz
mov
xchg
push
cmps
jb
imul
pop
jae
and
call
mov
mov
lds
mov
ins
xchg
lock
mov
test
adc
and
lods
cmp
xchg
push
inc
sub
call
mov
push
mov
mov
add
jmp
mov
mov
push
inc
rol
scas
repnz
adc
repz
and
dec
xchg
sub
or
mov
cld
pusha
add
ins
pop
pop
adc
fcmovnu
rcr
mov
stos
jmp
cmc
sub
adc
adc
popf
les
push
push
or
mov
in
mov
cwde
ins
adc
cmp
sub
imul
js
dec
jge
ja
mov
jp
xor
and
(bad)
into
xor
enter
(bad)
xor
push
mov
and
popf
cli
add
(bad)
or
jmp
or
xor
xor
mov
inc
and
cmp
and
aad
sar
xlat
ja
inc
jbe
xlat
push
push
inc
push
mov
loope
inc
fstp
dec
stc
cmp
add
xor
mov
xor
add
add
dec
out
xchg
cmp
xchg
cmp
and
inc
xchg
jge
std
pop
nop
mov
mov
ins
add
jg
mov
mov
loope
std
xlat
retf
lods
mov
hlt
ins
add
cs
mov
push
lods
ins
ror
nop
push
(bad)
ss
fst
das
pushf
add
sub
in
les
inc
ss
(bad)
scas
and
mov
sub
dec
repz
pop
mov
or
push
jmp
jecxz
jp
mov
adc
pop
jmp
fucompp
pop
loopne
idiv
jns
retf
mov
jne
imul
pop
mov
pop
movs
in
lods
sub
sahf
mov
sub
cmps
jno
sbb
jg
les
pusha
fwait
rcr
movs
cmps
arpl
sub
jmp
(bad)
iret
adc
fwait
push
xor
fwait
push
jns
cmp
stos
leave
xor
dec
xchg
clc
addr16
sbb
push
rol
jecxz
loope
adc
jle
push
test
fs
pushw
je
stc
xchg
inc
inc
add
inc
mov
mov
pop
dec
mov
cmps
mov
cmps
push
push
pop
bound
jbe
cld
pop
inc
jmp
and
inc
rcl
pushf
xor
mov
xchg
adc
shl
jne
inc
(bad)
jne
jbe
iret
mov
dec
icebp
lods
jbe
sahf
int
or
js
mov
jle
jnp
pop
jmp
inc
inc
cli
pop
sbb
mov
adc
rcr
sbb
stos
shl
in
sbb
mov
in
mov
and
mov
add
mov
push
loop
loop
test
std
imul
nop
popa
and
sar
push
repz
mov
and
repz
popa
jmp
mov
push
inc
mov
cwde
ja
mov
push
jg
iret
popf
pop
mov
fwait
sbb
ret
(bad)
fidivr
mov
xor
mov
jl
sub
xchg
leave
outs
into
repnz
mov
mov
mov
inc
in
or
js
xchg
mov
xchg
imul
jge
into
aam
fwait
and
js
(bad)
dec
xchg
mov
movs
pop
nop
ror
jb
and
adc
inc
shl
add
dec
sbb
xchg
test
and
push
sbb
les
stos
xchg
int
lds
sbb
jo
data16
sar
xchg
movs
dec
mov
dec
cmp
js
ja
sti
mov
cli
(bad)
or
mov
mov
shr
xor
int
mov
xchg
mov
push
imul
ror
int
aaa
popf
jp
cmps
popa
mov
lock
ins
mov
sahf
jmp
mov
test
add
popf
fcomp
mov
push
lds
clc
mov
or
sub
xlat
lods
and
ror
hlt
mul
cmp
jb
dec
dec
fiadd
xor
cmp
ror
out
dec
pop
or
leave
cmc
inc
xor
ficom
xor
sub
lea
xchg
das
and
xchg
inc
mov
out
jne
jp
dec
xlat
add
xchg
add
jne
push
call
rol
xor
cmc
scas
xchg
or
pop
pop
xchg
mov
repnz
lock
or
sbb
dec
ss
and
fild
inc
xor
adc
sbb
pop
mov
imul
mov
adc
mov
fmul
fcmove
mov
aam
jne
sbb
sbb
inc
dec
cmp
xor
jl
and
push
jmp
mov
dec
movs
mov
fldenv
jl
out
fsubr
xchg
jnp
jecxz
pop
jg
jp
inc
(bad)
shr
push
leave
inc
push
xchg
sbb
pop
fs
add
xchg
inc
inc
retf
dec
adc
mov
scas
enter
mov
out
ja
dec
fwait
cs
xchg
stos
dec
dec
fadd
dec
mov
ret
int3
inc
and
inc
in
mov
sbb
add
movs
cmps
pop
out
movs
mov
mov
sahf
mov
rcl
fdivr
shr
cmp
xchg
cmp
mov
jg
cs
jne
cmps
mov
not
bound
adc
adc
mov
jl
dec
cmc
dec
mov
adc
sub
outs
out
push
div
mov
xlat
mov
cmp
out
cmp
xchg
lock
out
ss
out
(bad)
pop
xchg
fld
push
and
ficomp
and
into
shl
stos
push
add
cdq
jne
pop
aad
cmp
int3
add
adc
pop
pop
out
aam
ret
jo
mov
in
repnz
jns
pushf
inc
xchg
mov
inc
imul
rcr
je
add
shl
inc
das
fimul
mov
popf
dec
lea
dec
cmp
sbb
adc
imul
lds
dec
scas
mov
and
cmp
das
jb
call
stos
cs
adc
xchg
shl
clc
enter
mov
xchg
cs
pushf
sbb
in
ror
call
pop
scas
(bad)
enter
cmp
mov
xor
adc
mov
pop
dec
pop
clc
xchg
ret
add
inc
and
loope
fwait
data16
push
daa
xor
daa
retf
and
js
or
xor
cs
in
xor
inc
fidivr
cld
imul
mov
imul
pop
mov
arpl
mov
add
scas
add
sbb
inc
xchg
cld
loop
dec
jge
ins
popa
arpl
jb
add
fadd
mov
movs
test
in
clc
jp
out
push
in
icebp
sti
(bad)
fcom
imul
retf
cdq
inc
nop
push
push
push
dec
mov
out
push
(bad)
jne
daa
sahf
mov
jecxz
ja
sbb
enter
iret
fxch
dec
pop
mov
push
cmp
test
or
test
mov
test
mov
in
leave
xor
jg
cmp
xchg
jl
inc
mov
push
test
mov
xor
pop
cwde
inc
sar
popaw
push
adc
ins
(bad)
sub
mov
adc
lahf
ret
mov
cmp
xchg
push
pop
fsub
pushf
xor
movs
cli
lahf
xor
or
mov
inc
addr16
cmp
mov
pop
cmp
sbb
mov
jp
fist
dec
and
mov
pop
je
gs
ret
xor
sbb
jns
jmp
leave
cs
inc
iret
push
aam
sub
sub
dec
sbb
outs
gs
in
xchg
dec
mov
add
push
call
test
mov
imul
mov
and
movs
(bad)
xor
mov
mov
pop
mov
out
imul
sbb
stos
inc
and
xchg
sbb
pop
shr
bound
and
cld
(bad)
ja
sbb
enter
xor
or
jmp
add
aas
xchg
dec
xchg
mov
cmps
jne
faddp
add
lods
xchg
cmp
and
add
xchg
sub
mov
enter
(bad)
dec
shl
scas
mov
(bad)
dec
xor
and
repnz
add
(bad)
je
and
mov
in
and
iret
xlat
leave
lods
push
dec
add
ins
dec
outs
mov
xchg
jne
pop
enter
aas
mov
ret
push
cmp
aas
pop
dec
cwde
push
xchg
scas
push
inc
jns
aad
and
sub
sub
(bad)
jmp
sbb
call
and
sti
sbb
jbe
cli
adc
jmp
lds
cwde
icebp
scas
or
mov
retf
xor
push
in
inc
ja
aad
dec
ins
xchg
inc
dec
sbb
je
aas
push
ror
(bad)
mov
iret
push
xchg
adc
out
aam
inc
inc
in
lods
xchg
popf
xchg
data16
fwait
int3
jne
mov
ret
and
jb
outs
jecxz
jg
jge
jno
iret
fcomp
mov
fimul
jmp
cmp
aad
pusha
sti
lods
add
xor
jo
aad
adc
pop
mov
mov
int3
mov
popf
mov
aad
pop
mul
mov
xor
stos
mov
enter
loope
pop
adc
push
xchg
mov
jg
inc
cmp
mov
nop
stc
arpl
lea
pop
xor
add
dec
adc
or
jge
adc
(bad)
out
repnz
add
imul
(bad)
mov
jecxz
mov
xchg
fnstenv
aaa
pop
fdivr
and
push
fild
mov
adc
and
push
push
cmc
mov
dec
fadd
fiadd
fs
retf
in
in
jmp
ror
rcl
rol
push
(bad)
in
jg
sub
call
movs
inc
sub
out
mov
dec
cs
fld
inc
ja
mov
into
fidiv
adc
pop
and
inc
dec
or
add
and
sbb
cwde
jl
fs
lahf
icebp
into
fisubr
loope
int
ja
push
adc
mov
fidiv
pop
sbb
pop
aaa
xchg
jp
call
int3
pop
push
push
leave
or
cmps
cwde
jb
xchg
cli
add
add
rcr
inc
jo
cmp
repnz
imul
sub
mov
xchg
aaa
cmp
xchg
fs
pop
dec
inc
and
pop
jge
sbb
outs
pushf
out
mov
jnp
sub
scas
ret
dec
xchg
jo
imul
sub
mov
xor
int
and
rcr
ds
js
inc
jo
shl
lods
push
mov
mov
pop
ins
out
pop
add
std
imul
add
scas
fnstcw
mov
fldcw
or
mov
jecxz
cmp
dec
lds
loopne
das
push
out
cli
call
ret
sub
sub
je
add
scas
cmp
rcl
jbe
daa
pop
mov
sbb
mov
adc
pusha
bound
mov
adc
stos
mov
sub
lods
test
je
pop
fwait
retf
iret
fnstcw
lods
ss
pop
and
jmp
sar
mov
fs
jg
and
(bad)
loop
(bad)
adc
scas
xlat
bound
repz
pop
out
sbb
jns
int3
add
adc
cmp
pop
sti
cmc
fdivrp
in
ror
cmp
shl
push
out
out
jno
push
sbb
mov
dec
cld
cmp
mov
or
std
sbb
(bad)
pop
call
push
push
mov
dec
ins
(bad)
clc
jmp
pop
mov
loope
les
fimul
stc
je
stos
add
add
aaa
adc
jnp
cmp
sub
jle
mov
dec
xor
sar
or
xchg
cmps
mov
rcr
aaa
mov
and
dec
inc
retf
outs
jbe
jb
add
push
inc
push
pushf
ins
fild
mov
and
in
les
adc
sbb
xchg
xor
ds
sub
std
mov
leave
mov
push
sub
add
cmp
sbb
iret
jno
xchg
add
mov
pop
mov
cmp
or
mov
dec
pop
sahf
retf
or
jp
sbb
jg
shl
jno
pop
mov
test
jbe
les
lock
dec
push
movs
jno
test
mov
dec
ret
arpl
pop
clc
fwait
push
xor
sbb
ss
jo
push
(bad)
scas
repz
xchg
pushfw
loop
popa
(bad)
fs
cmps
fist
mov
mov
(bad)
or
sub
aas
dec
mov
push
icebp
popf
icebp
add
sbb
pop
fmul
inc
ins
jmp
add
lds
push
lock
ds
add
cmp
cmovg
xor
in
cmp
adc
push
xor
cmp
ins
fdivr
js
inc
add
xor
pop
lea
test
jge
loope
es
xor
aaa
sbb
shl
loop
rcl
add
test
pop
jmp
out
mov
cmp
scas
cmp
pop
jmp
call
add
test
xchg
scas
iret
jg
scas
fldenv
sahf
ja
push
(bad)
cdq
hlt
call
scas
mov
adc
mov
je
fidivr
dec
(bad)
mov
jl
je
sti
dec
test
hlt
adc
fcmovnbe
call
and
outs
jmp
data16
mov
or
xor
mov
xchg
dec
pushf
adc
into
nop
les
xor
xchg
aas
jmp
xor
pushf
add
sbb
sub
push
and
push
out
fimul
inc
shl
movs
mov
shr
sub
add
js
in
cmp
xchg
adc
push
int3
dec
add
add
push
xor
bound
lods
and
sti
mov
cmp
mov
pop
inc
lds
pop
mov
cdq
lock
mov
push
outs
xchg
call
scas
pop
outs
paddb
fstp
xor
cli
sbb
sbb
push
mov
fadd
loopne
xchg
addr16
dec
sub
jne
cld
(bad)
xchg
lock
pop
dec
mov
cmp
mov
inc
xlat
addr16
rcr
inc
movs
or
xchg
xor
stos
dec
ret
and
mov
push
rol
jmp
add
imul
ja
imul
mov
add
push
inc
jnp
xchg
cmc
mov
sahf
xor
(bad)
or
pushf
cs
cmps
lods
add
cmp
xor
push
or
push
adc
fs
movs
loopne
imul
dec
jb
jl
mov
dec
pop
loop
(bad)
jnp
sub
dec
scas
xlat
rol
vmovapd
and
cmps
jmp
loope
adc
mov
retf
inc
push
in
int3
inc
and
das
mov
into
pop
mov
add
push
dec
loop
leave
lock
ret
(bad)
bound
inc
lock
pop
ss
(bad)
popf
cmp
test
xor
pop
test
(bad)
rol
jmp
push
jp
aaa
fcom
popa
(bad)
push
int
aam
sbb
jecxz
push
mov
test
(bad)
repz
xchg
es
mov
stos
cli
adc
gs
push
sub
scas
nop
cwde
sti
adc
ret
retf
repnz
fsubp
pop
fldcw
out
mov
loop
push
call
cmp
cmc
cs
scas
je
addr16
dec
loope
(bad)
dec
pop
pop
(bad)
mov
jnp
mov
jno
int3
enter
push
lahf
mov
jmp
mov
repz
jmp
jnp
sahf
xor
stc
repz
xchg
mov
cmp
jl
mov
sbb
ret
fsubr
adc
mov
jmp
not
cdq
mov
fdiv
and
mov
sbb
(bad)
data16
aad
xchg
std
xchg
or
or
inc
xlat
fidiv
mov
or
in
loope
retf
push
xor
add
mov
addr16
icebp
and
fcmovne
iret
ins
inc
mov
dec
add
push
rol
pop
sub
pop
push
dec
push
mov
mov
cmc
movs
test
push
call
pop
add
mov
(bad)
mov
shr
nop
popf
je
push
call
xchg
mov
jg
test
inc
shl
in
jb
add
ja
xchg
into
xchg
jb
jge
jne
lock
pushf
or
cmp
adc
call
pop
cmp
in
(bad)
mov
xchg
enter
mov
lds
in
cmps
rol
sar
in
push
leave
test
jae
pop
repnz
(bad)
or
sub
movs
mov
repnz
mov
cmp
push
out
push
sub
mov
jle
dec
loope
mov
imul
neg
aam
aad
adc
and
jl
(bad)
jg
frstor
sar
sbb
(bad)
daa
rcr
push
mov
sub
das
xchg
fsubr
loope
(bad)
js
clc
and
leave
cld
and
call
xor
mov
pop
add
mov
mov
pop
inc
(bad)
ss
xor
push
cli
mov
test
(bad)
jnp
out
push
push
cmp
mov
mov
pop
jns
stos
mov
(bad)
call
xchg
sbb
outs
mov
cmp
pop
push
adc
push
cs
clc
jno
pop
hlt
mov
mov
arpl
out
jb
adc
sbb
lods
loope
pop
pop
or
xor
xchg
or
es
std
or
pop
dec
loopne
push
fild
cli
xor
retf
cmp
in
(bad)
in
push
inc
arpl
in
adc
mov
cmp
adc
pop
push
jge
add
int
int
push
mov
int
and
aad
out
mov
outs
imul
ja
push
push
add
ds
pop
idiv
dec
addr16
jle
adc
(bad)
mov
sbb
cld
stos
and
ret
jae
add
test
mov
add
sub
dec
imul
or
stos
ins
nop
repnz
clc
in
fidiv
hlt
in
sar
cs
xchg
sub
xor
jmp
cmovl
cs
aam
fist
xor
jp
and
rcr
xor
lock
xor
sti
xchg
stos
mov
in
jb
and
xor
mov
shr
ret
sbb
mov
shr
sbb
test
sbb
(bad)
xchg
mov
ret
mov
pop
cmc
cmc
cwde
xchg
mov
gs
adc
pusha
mov
dec
jecxz
out
lea
jge
rol
pop
push
jo
mov
inc
adc
mov
lods
jecxz
aas
lock
dec
push
push
retf
jae
mov
cld
pusha
(bad)
mov
outs
icebp
jbe
cli
or
mov
or
dec
repz
xchg
mov
pop
mov
xorps
mov
clc
loope
fisubr
xlat
jmp
push
or
dec
xchg
js
pushf
push
push
and
inc
bound
add
test
ss
xor
jmp
jno
sub
popf
xor
xchg
xor
movs
leave
call
add
mov
and
shr
lds
inc
test
pop
stc
iret
out
mov
test
pop
test
mov
ins
jmp
xor
and
xlat
jle
mov
imul
add
mov
mov
or
xchg
adc
jmp
push
ret
mov
mov
aam
push
push
mov
sar
or
enter
sbb
xor
fadd
aad
loope
jmp
jno
into
(bad)
mov
jl
pop
(bad)
xor
add
adc
fmul
add
push
fs
cmp
cmp
push
push
test
mov
or
mov
ret
jg
enter
in
and
pop
idiv
lahf
sbb
int
out
out
je
push
loop
lods
in
ja
packuswb
sub
imul
sub
cld
jge
adc
pop
lock
sub
ret
sub
cli
xlat
sbb
dec
push
add
push
jae
or
mov
lock
dec
(bad)
xchg
ss
xchg
in
xor
sbb
and
popf
mov
pop
push
adc
push
(bad)
test
out
mov
add
sar
cmp
cmovnp
addr16
dec
aas
xor
jbe
clc
ret
(bad)
xor
out
mov
es
pop
and
mov
xor
mov
inc
dec
pop
mov
les
mov
mov
scas
cmps
push
repnz
cmc
sti
icebp
xor
xor
das
push
inc
pop
jge
call
dec
movs
sti
out
mov
imul
je
mov
pop
lahf
mov
ret
shr
sar
dec
dec
clc
imul
sbb
jno
(bad)
adc
das
repz
adc
stc
lods
mov
cmp
inc
(bad)
clc
repz
add
jmp
pop
xor
push
outs
fsub
and
inc
push
or
mov
mov
push
je
sub
jmp
(bad)
aam
cmc
aam
inc
sbb
push
in
mov
push
loop
xor
retf
or
dec
mov
leave
mov
mov
test
daa
test
pop
mov
es
and
bound
aas
loope
lea
inc
mov
mov
xchg
scas
aam
inc
jmp
ss
cmp
add
push
fsubr
test
out
cmp
pop
pop
jl
push
jns
inc
or
and
xor
je
sar
cmp
clc
push
ds
ss
test
shr
pop
mov
add
lock
paddq
push
jp
daa
sub
sub
add
mov
push
dec
in
repnz
add
push
fsincos
in
lock
aas
neg
pop
out
leave
addr16
or
fs
adc
xchg
ret
cdq
push
ds
mov
sub
mov
sub
test
jmp
push
aad
pop
mov
aad
and
mov
cmps
sub
pop
movs
mov
mov
mov
mov
test
(bad)
call
jae
inc
xor
mov
ret
mov
cli
into
das
out
mov
into
xchg
les
ins
test
dec
adc
stos
push
xor
mov
bound
das
fst
xchg
jmp
js
sbb
ret
and
(bad)
cmp
pop
xor
xor
xor
js
popa
cmps
sahf
icebp
fwait
scas
retf
dec
dec
call
push
cs
ret
jae
jae
and
sbb
ja
add
shl
cmps
mov
and
adc
and
adc
test
int3
hlt
daa
cld
les
fdiv
adc
mov
ins
leave
movs
sahf
push
inc
pushf
mov
cmp
test
ror
jno
sub
jnp
mov
adc
out
inc
ins
pusha
or
mov
cmp
mov
push
mov
aad
pop
dec
xor
dec
leave
mov
jnp
cmp
bound
add
sub
inc
out
mov
mov
je
lea
popf
enter
ret
mov
jge
add
out
xchg
mov
scas
leave
ret
lds
adc
sbb
imul
aas
fldcw
les
mov
out
stos
inc
mov
imul
es
adc
loop
gs
push
pusha
shl
mov
out
loope
test
(bad)
jmp
ret
scas
dec
pop
or
xchg
loop
sti
inc
adc
jnp
pop
int
aas
stos
scas
mov
lods
retf
and
xor
inc
dec
adc
jp
sti
xchg
cmp
dec
sub
daa
inc
xchg
or
jb
es
inc
adc
xor
pop
(bad)
push
lds
movs
loopne
jecxz
pop
push
adc
les
loope
xchg
iret
call
push
ins
aaa
(bad)
mov
call
push
mov
pop
xchg
cmp
shl
push
call
pop
inc
pop
xchg
jmp
js
mov
push
add
xor
dec
es
mov
cld
jge
jnp
cmps
mov
mov
lods
lds
pop
int
push
scas
in
push
xchg
add
mov
data16
out
outs
mov
out
in
push
dec
inc
shl
in
cmp
or
movs
sbb
imul
sti
test
leave
push
jmp
lea
adc
je
repz
iret
call
and
mov
loope
pop
aam
test
mov
and
imul
cdq
push
mov
dec
ror
mov
das
pop
sbb
sub
je
sbb
pop
mov
mov
add
dec
mov
dec
out
xor
push
mov
jb
pop
push
ja
fistp
jl
call
xchg
or
xor
test
dec
imul
adc
data16
(bad)
jmp
imul
mov
jbe
cmps
addr16
sub
lea
lock
aad
mov
dec
lahf
ret
add
ja
jmp
lods
xor
sub
sub
xor
dec
(bad)
in
jmp
inc
out
dec
pop
fs
jb
inc
std
pop
scas
add
mov
jg
lods
cmps
xchg
shr
fistp
cdq
mov
mov
sub
mov
stc
cdq
adc
mov
jmp
cmp
(bad)
adc
stos
or
cmc
mov
test
call
out
sahf
dec
in
cwde
rcl
retf
ins
es
retf
sub
or
sub
jns
ror
aam
outs
cmp
fdiv
cdq
test
xchg
btc
lods
dec
or
mul
stc
std
fbld
sbb
test
test
push
xchg
pusha
adc
inc
rcl
das
sub
dec
xor
xor
jmp
fsub
push
add
mov
pusha
dec
fidivr
movs
xor
mov
push
or
stc
div
xor
test
mov
mov
stc
aad
xor
push
mov
daa
jae
xchg
mov
cmp
sub
pop
popf
and
into
jecxz
(bad)
jmp
jmp
sbb
dec
mov
aam
out
push
cmps
out
loope
inc
jae
cmp
jp
int3
out
add
pushf
scas
lock
xor
cmps
in
xchg
jp
cwde
test
push
xchg
(bad)
nop
dec
and
jnp
jbe
faddp
in
stos
test
sbb
sar
stc
pusha
sbb
push
sbb
inc
jb
bsf
ins
or
push
lods
and
in
fwait
loopne
mov
push
ins
fdiv
jmp
sbb
lods
nop
or
hlt
pop
jnp
retf
mov
icebp
dec
cld
movs
cwde
pop
neg
mov
mov
jl
xor
and
scas
(bad)
test
jbe
cmc
add
mov
sbb
push
iret
push
cmp
xlat
and
dec
out
pop
cmps
je
arpl
xor
clc
ja
mov
pop
je
add
leave
mov
loop
loopne
aaa
out
test
push
add
stos
sub
sub
mov
or
push
leave
xlat
and
hlt
mov
cmps
xlat
ins
pop
rcl
mov
sbb
sub
pop
popf
cdq
pop
movs
dec
jno
dec
out
dec
sub
nop
outs
and
push
pushf
dec
(bad)
std
inc
movs
(bad)
pop
mov
inc
push
sbb
xor
mov
mov
xchg
jl
ret
enter
std
jmp
dec
xchg
outs
stos
sbb
(bad)
pop
or
lahf
push
dec
dec
lds
cs
mov
cmp
dec
cmps
dec
fild
loopne
cmps
out
call
jg
pop
and
cmp
(bad)
in
mov
mov
and
movs
fsubr
push
ss
jg
pop
dec
popf
dec
in
xchg
cmps
into
jle
test
nop
adc
sub
sbb
scas
repz
lock
add
pop
sbb
sub
addr16
mov
fcomp
jmp
mov
mov
sub
ror
jge
pop
ins
jae
(bad)
jmp
push
jmp
loope
jge
push
xchg
gs
or
cld
jp
ja
mul
repz
sbb
or
jle
mov
cmc
fs
pop
outs
sbb
xor
xchg
ss
fmul
bound
inc
scas
mov
ret
lds
rol
retf
dec
jl
lock
imul
pop
cmp
dec
xor
aad
fs
push
rol
test
or
lods
xchg
stc
repnz
push
int
adc
mov
push
xlat
ss
arpl
mov
addr16
jge
repz
arpl
inc
mov
fcmovbe
retf
dec
repnz
call
sub
repz
into
lds
lds
push
mov
and
push
lods
in
pop
mov
mov
xor
pop
push
inc
fisttp
lea
clc
daa
std
frstor
(bad)
mov
rcr
ins
push
jge
cwde
in
cdq
adc
ror
(bad)
and
shr
jmp
pop
movs
aad
and
or
pop
sahf
cmc
jmp
outs
popf
pop
(bad)
adc
mov
ret
adc
inc
aaa
sub
arpl
pop
push
int
push
push
mov
mov
daa
out
xor
and
pusha
in
mov
pushf
jnp
setae
call
adc
test
les
xlat
add
mov
dec
lods
and
or
mov
sub
outs
and
push
ins
add
icebp
push
sub
inc
sahf
not
cli
pushf
xchg
clc
xchg
or
inc
dec
loope
dec
fmul
and
cli
dec
inc
xchg
or
mov
push
mov
stos
jmp
xchg
add
neg
add
sbb
pop
xchg
(bad)
stc
push
and
jg
aaa
and
fbld
xchg
in
fwait
sub
mov
les
xlat
mov
pusha
push
fisub
mov
mov
xor
and
(bad)
jle
mov
je
aam
inc
jg
cmc
or
outs
aaa
mov
xchg
or
stc
fsubr
in
lea
push
loop
xchg
cld
mov
cmc
scas
scas
gs
cwde
add
loop
mov
push
idiv
int3
sbb
ins
loope
push
sbb
fdiv
test
jecxz
aad
push
scas
mov
in
out
aaa
xchg
cmp
imul
shl
mov
sti
push
adc
lahf
mov
sub
je
bound
movs
cs
scas
(bad)
arpl
into
into
sbb
push
sti
or
cmp
aaa
mov
rcr
add
add
popa
popf
mov
adc
push
js
in
xor
adc
push
dec
jnp
mul
jmp
in
pop
sar
mov
and
stc
xchg
test
mov
cmp
cmp
jo
dec
pop
inc
or
bound
test
sbb
jl
popf
jns
ja
add
retf
or
dec
push
push
je
mov
jo
repz
(bad)
ss
in
jmp
xlat
iret
sbb
cmps
stos
leave
fwait
in
push
jns
cmps
mov
das
js
(bad)
inc
aad
pop
aaa
ins
in
xchg
xor
push
and
out
xchg
loope
hlt
test
dec
adc
jns
xor
int
repnz
(bad)
out
iret
lods
imul
test
ret
push
stos
sub
cmp
les
xchg
jge
(bad)
and
mov
cmps
inc
retf
stos
out
iret
inc
shl
retf
dec
add
dec
lahf
test
add
rol
mov
pop
push
cmps
fs
inc
lods
xchg
out
outs
fst
mov
dec
arpl
adc
dec
cwde
jb
clc
xor
es
ror
inc
shr
dec
pushf
cs
clc
add
aaa
ds
dec
imul
ins
add
stc
jmp
xchg
bound
shr
mov
xchg
add
outs
test
pusha
pop
out
xlat
push
and
xchg
fstp
lock
ret
pusha
add
outs
(bad)
mov
call
jge
jmp
jl
nop
clc
cmp
or
add
mov
cmps
pusha
sub
fimul
(bad)
fwait
mov
push
ins
pop
xchg
cmps
mov
mov
adc
ss
nop
aaa
loopne
mov
jns
and
inc
test
scas
mov
rcr
add
pop
retf
test
xchg
(bad)
adc
adc
sub
jne
clc
mov
loope
mov
inc
dec
lahf
sub
inc
inc
loope
push
mov
hlt
pop
fsub
cmc
jae
sbb
test
fiadd
test
clc
call
pusha
nop
jnp
out
add
adc
ret
sbb
stc
rol
jne
(bad)
(bad)
retf
gs
call
mov
movs
pop
dec
xchg
or
xchg
test
scas
movs
test
xlat
mov
mov
(bad)
fstp
scas
fnstcw
cmps
push
aaa
imul
dec
repz
(bad)
stos
rcr
inc
xlat
xor
push
cmp
mov
push
xchg
xchg
in
mov
add
cmp
add
mov
or
push
add
test
test
iret
outs
(bad)
dec
and
jle
adc
cmc
scas
sub
sbb
sbb
mov
cmp
and
inc
or
xchg
xchg
sub
les
jge
int
mov
mov
add
or
call
in
jecxz
mov
xchg
cs
mov
and
cmp
cmp
cld
inc
sbb
jmp
shl
xor
and
es
dec
(bad)
inc
or
in
pop
mov
shr
nop
adc
js
aam
sub
adc
enter
mov
jo
xchg
ins
stos
out
sub
mov
daa
sbb
xchg
dec
cmp
test
adc
or
pop
(bad)
fld
jg
mov
jae
cmp
pusha
jle
setp
mov
mov
(bad)
adc
mov
jecxz
sbb
mov
(bad)
fidiv
fistp
cs
pop
push
xchg
jle
jecxz
lahf
push
mov
xor
test
lock
mov
push
pop
inc
and
xor
sub
je
pop
loop
shl
popa
pop
add
and
sub
scas
les
jo
cmc
pushf
loopne
fwait
add
inc
jae
add
cdq
bound
ret
jne
jmp
out
mov
jb
cmp
fwait
div
rcl
pop
shl
jge
cld
into
hlt
push
hlt
nop
cmp
mov
cld
test
jg
call
jb
jns
lds
dec
inc
(bad)
jmp
adc
cmp
in
popa
fucomp
xor
add
ins
dec
sub
nop
test
mov
retf
and
(bad)
shr
mov
mov
in
movs
out
rcl
sbb
mov
mov
jmp
sbb
cmc
cmp
js
repz
cmp
jnp
aas
call
dec
xor
mov
cld
lods
in
or
inc
xor
dec
xor
sub
lods
bound
enter
outs
sahf
dec
push
or
mov
xor
mov
aam
fldenv
mov
aaa
and
fs
mov
add
repnz
mov
inc
mov
or
mov
in
jnp
inc
inc
push
push
dec
xchg
ret
xchg
sbb
loopne
fisub
inc
cmp
mov
push
ja
xlat
shl
and
loop
jae
std
jo
shl
retf
sbb
inc
pop
mov
mov
addr16
les
imul
sub
cmp
gs
pop
loope
inc
adc
fbstp
push
pop
mov
cmc
stos
push
jle
sti
add
pop
pop
fnsave
mov
and
pop
out
rcr
jb
fsub
lods
nop
jno
stc
mov
mov
mov
jnp
imul
add
xchg
xchg
ret
and
int3
inc
icebp
sbb
xchg
push
imul
push
mov
in
cmp
mov
ins
ret
int3
push
pop
add
(bad)
sub
not
lea
mov
mov
sbb
mov
or
pop
jmp
fidiv
ss
jle
ficomp
push
repnz
xchg
in
les
das
jno
dec
(bad)
cli
rcr
hlt
sub
lods
(bad)
movs
push
jnp
ja
and
mov
test
fdivr
push
sub
aam
lods
gs
out
sub
test
mov
inc
push
inc
bound
adc
(bad)
cmp
daa
mov
repz
aam
aad
hlt
scas
fstp
push
sbb
adc
stc
jae
ds
in
cmp
(bad)
imul
in
and
stc
leave
hlt
jl
hlt
(bad)
mov
cmc
xlat
inc
jmp
and
scas
into
inc
cmps
or
lods
fs
mov
loopne
cld
test
or
call
xchg
into
loopne
xchg
jecxz
scas
or
add
mov
add
shl
shl
ins
and
sub
mov
repnz
ret
sahf
push
jl
add
add
(bad)
and
test
pop
adc
inc
loope
add
adc
xor
icebp
mov
fwait
(bad)
pusha
mov
pop
cmp
test
lods
inc
cmps
jnp
xchg
std
fmul
push
sbb
jg
ret
dec
addr16
out
loop
inc
fld
imul
mov
mov
mov
rol
jb
sbb
icebp
mov
push
popf
adc
push
mov
outs
jge
rol
mov
mov
sbb
push
sub
pop
xchg
jle
iret
add
leave
lock
jb
fs
test
jno
movs
xor
enter
or
pop
(bad)
in
adc
mov
jmp
mov
div
jmp
mov
(bad)
cwde
(bad)
mov
ins
sub
mov
(bad)
mov
lods
xor
ss
jbe
stc
dec
sbb
loope
cmp
sub
cmp
mov
mov
dec
(bad)
adc
jmp
cld
jns
dec
mov
push
test
mov
jo
scas
enter
pop
and
test
push
dec
jl
adc
pop
mov
dec
adc
cmp
dec
pop
mov
ret
(bad)
push
outs
addr16
stos
adc
aaa
pop
adc
and
push
nop
in
or
sti
sbb
ja
into
rol
das
ins
jecxz
cmp
jmp
(bad)
fcomp
outs
(bad)
(bad)
lock
or
iret
frstor
mov
add
cmp
and
dec
mov
fist
mov
and
in
sub
or
sbb
fwait
pop
jmp
sub
popa
jnp
std
pop
cmp
mov
push
inc
gs
jns
mov
mov
call
daa
popf
pop
cli
add
push
fild
mov
fdiv
aas
je
sbb
fild
dec
mov
jmp
and
cli
enter
cld
out
icebp
fsubp
adc
add
adc
int3
loop
ins
test
stos
mov
add
test
pop
inc
repz
push
call
paddusb
jle
int
jge
cwde
es
inc
jecxz
out
jmp
mov
(bad)
jmp
in
and
jmp
mov
xchg
out
hlt
xor
rol
jne
jge
outs
inc
cmp
int
ins
(bad)
pop
addr16
lock
popf
xor
jbe
pop
adc
sub
cdq
sbb
jg
(bad)
mov
fld
inc
rol
sub
rcr
add
leave
mov
jmp
jmp
xchg
push
mov
adc
mov
daa
inc
cmp
ror
jg
xchg
adc
rol
cmovne
movntps
imul
gs
and
stos
or
jo
stos
xchg
int
push
adc
out
pop
jne
scas
ret
jecxz
in
jle
mov
in
mov
add
push
test
cmps
dec
dec
mov
retf
shl
(bad)
les
cwde
mul
inc
push
cmp
jge
sub
arpl
jbe
sub
mov
out
mov
loopne
sub
ja
and
fistp
cs
(bad)
scas
scas
lods
cmp
dec
inc
retf
or
adc
or
sub
pop
push
xor
les
out
push
jnp
scas
mov
movs
sbb
stos
sub
call
push
test
in
mov
mov
sti
sti
rcl
es
mov
les
sbb
sub
push
pushf
stos
push
cwde
je
push
dec
jb
rol
cmp
mov
pop
imul
jo
mov
(bad)
fstp
test
sub
sbb
lods
cmp
out
mov
mov
cmp
add
rcl
cs
call
mov
ja
mov
jmp
push
das
shl
cmp
les
jg
mov
pop
fwait
pop
cmp
scas
std
inc
sbb
loopne
or
jp
push
xlat
mov
mov
fsubr
dec
shr
mov
fdiv
stc
(bad)
adc
jbe
xchg
rcr
add
dec
call
xchg
dec
shl
or
push
sub
lds
xchg
pop
popf
cdq
xor
iret
sbb
xchg
cmps
not
int3
xchg
lods
in
daa
xor
pop
push
mov
in
sbb
lock
push
mov
outs
in
xor
hlt
cli
push
mov
xor
imul
mov
mov
push
leave
outs
aad
fs
push
rcl
inc
dec
cmp
fcomp
inc
push
popa
jp
sbb
xor
or
pusha
sbb
push
xchg
mov
call
push
neg
jbe
dec
inc
inc
data16
push
bound
(bad)
inc
pop
rep
xchg
and
rcr
dec
inc
xchg
dec
fld
and
ret
fisttp
sahf
ret
test
mov
push
jmp
jbe
mov
push
lea
retf
clc
jmp
sub
push
mov
fild
icebp
jne
cmps
pop
shl
fild
inc
mov
mov
jnp
pop
push
jmp
or
pusha
jmp
fistp
dec
cmp
jbe
mov
shr
pop
jb
jne
in
add
mov
out
cmp
sar
jb
js
pop
cdq
mov
fadd
add
movs
fadd
fisttp
int3
bound
push
sbb
pop
je
retf
bnd
fs
(bad)
push
xor
fcomp
pop
sub
stos
dec
sar
enter
or
in
or
jb
aam
mov
loope
xchg
ret
les
ja
push
leave
jo
pop
aad
rol
shld
sahf
movs
and
xlat
shl
dec
inc
nop
addr16
jecxz
adc
mov
sbb
sbb
pop
out
pop
ret
xchg
and
and
fimul
fdivrp
or
mov
sbb
add
int3
loop
push
retf
jo
cwde
dec
mov
loopne
adc
test
mov
or
ins
jb
jge
xchg
(bad)
push
pop
mov
push
push
xor
leave
retf
add
and
push
out
scas
ret
repnz
ins
lahf
xchg
adc
add
xchg
mov
(bad)
sub
ins
out
or
dec
inc
lea
jns
cmps
push
push
scas
(bad)
xor
dec
shl
fcom
arpl
icebp
adc
aam
test
mov
cmp
mov
(bad)
inc
clc
das
fisub
inc
std
fisttp
(bad)
jl
fdiv
frstor
push
xchg
ret
daa
nop
pop
ja
pusha
inc
ins
cmp
dec
or
outs
pushf
pop
fwait
sub
pop
retf
adc
fs
shr
and
inc
fld1
loop
daa
add
das
jge
or
imul
push
mov
push
inc
sbb
cmp
cmp
cmps
sbb
cs
addr16
(bad)
mov
cmp
cmp
jecxz
cmp
stos
add
outs
inc
in
shl
adc
daa
call
sbb
mov
shr
rcr
es
retf
adc
(bad)
xor
cli
sbb
lahf
add
aam
or
inc
mov
mov
xor
sbb
lea
or
xchg
les
inc
cmp
xor
mov
push
adc
loopne
sbb
aas
loope
cli
xchg
lds
sub
cld
mov
adc
inc
mov
dec
dec
lods
cmps
mov
sub
loop
sub
xor
ret
cmps
ds
(bad)
lock
mov
sti
mov
add
add
adc
shr
mov
daa
xchg
int3
sbb
jb
sar
inc
sahf
jmpw
pop
cmp
frstor
scas
jp
pop
stc
pusha
sbb
lock
mov
mov
out
jno
pusha
movs
in
es
int
test
sub
int3
xor
mov
(bad)
push
ins
ficomp
clc
pop
pop
adc
jmp
and
or
fidivr
fimul
push
pop
mov
repnz
out
stc
jle
sub
cmp
retf
xchg
test
sti
add
das
push
mov
push
dec
cmps
in
ret
adc
cmp
jmp
out
mov
or
imul
sbb
xor
push
dec
clc
xchg
add
adc
and
retf
sub
jge
mov
jmp
leave
and
xchg
ins
out
stc
aam
or
ss
adc
icebp
hlt
xchg
popf
outs
out
adc
retf
(bad)
loop
jmp
fstp
xor
pop
xchg
mov
cmp
mov
mov
in
arpl
xor
xchg
or
rol
inc
imul
add
cmc
icebp
push
xchg
sbb
aaa
mov
adc
(bad)
push
add
push
outs
jo
xor
xchg
lea
(bad)
or
(bad)
mov
mov
repnz
lea
sbb
ja
adc
cld
xchg
push
xor
(bad)
push
sbb
jp
and
das
mov
sahf
outs
pop
fcmovb
inc
sbb
call
mov
test
pushf
sbb
inc
pop
clc
ds
jne
jg
cld
cmp
mov
mov
out
sub
hlt
xchg
int
idiv
repnz
clc
inc
inc
ds
xor
(bad)
fstp
fstp
push
(bad)
mov
push
not
or
and
out
jl
ja
sahf
imul
rcl
inc
(bad)
sar
sub
(bad)
mov
dec
mov
movs
xchg
mov
push
into
sbb
int
imul
ss
jle
xchg
hlt
inc
test
adc
xchg
bound
stc
pop
sub
xchg
gs
out
sub
jae
mov
ror
push
(bad)
sar
push
jae
mov
mov
int
cmp
aaa
ret
out
jp
mov
push
mov
mov
icebp
sbb
cmps
das
inc
lahf
mov
push
cmp
(bad)
rcr
rol
nop
out
and
in
cmp
cmc
popa
mov
sub
jl
mov
ror
aam
dec
js
lock
mov
inc
mov
loop
and
inc
dec
pusha
pop
retf
repz
in
xor
mov
inc
push
cmp
test
push
test
in
mov
ja
xchg
repz
mov
std
das
ficomp
lods
ror
mov
ficomp
lods
mov
pusha
fild
push
fldenv
rol
or
bnd
mov
inc
loopne
call
int
pop
rol
xchg
ins
sti
sahf
xchg
cmp
adc
jae
xlat
mov
jo
ins
cmp
pop
int3
(bad)
nop
in
aaa
push
push
nop
dec
jbe
int
jb
mov
or
add
mov
sub
loopne
repnz
cmp
std
test
and
adc
ins
sub
int
sub
scas
stc
cmp
and
pusha
and
jmp
in
xchg
in
add
imul
icebp
mov
and
dec
stos
inc
jmp
pop
xor
and
jmp
pop
rol
jno
test
in
xchg
sbb
iret
ja
inc
xor
lock
or
cmps
adc
mov
xchg
adc
stc
fwait
jp
xor
call
mov
mov
push
pop
fimul
stos
stos
and
loop
push
or
xchg
imul
imul
jo
dec
xor
aas
sbb
lods
or
lea
xor
mov
xchg
mov
xchg
xchg
inc
into
and
(bad)
pop
cdq
je
sub
fild
dec
lods
and
imul
dec
mov
dec
or
jb
fwait
inc
xchg
adc
pop
inc
idiv
les
and
xchg
dec
int
fidiv
imul
lahf
mov
mov
pusha
or
aaa
pop
jmp
loop
mov
dec
sar
pop
popf
jns
pop
sbb
cmp
iret
xor
mov
cmps
adc
jno
add
pop
clc
fld
(bad)
push
jmp
jmp
sbb
cmp
sbb
push
lods
mov
push
push
jg
jle
jmp
or
adc
cs
gs
sub
sbb
cmps
add
inc
sub
ss
out
repz
jb
mov
adc
outs
cwde
je
dec
fisubr
daa
xor
jb
mov
fstp
test
sbb
adc
loop
mov
adc
rol
push
aaa
add
mov
mov
jo
mov
clc
loope
mov
adc
addr16
push
ins
into
sbb
shl
aam
sub
add
push
aaa
fwait
cmps
adc
inc
fldenv
sub
cs
repnz
ds
test
scas
stos
mov
popf
cwde
mov
shr
cmp
pop
les
or
or
ins
xchg
stmxcsr
xchg
inc
test
dec
loope
jp
ins
jb
sub
into
jp
adc
xchg
daa
xchg
scas
mov
sub
push
push
inc
sbb
loopne
jl
mov
sub
daa
movs
jno
jp
or
iret
not
mov
push
cmp
prefetch
adc
call
pop
je
enter
shl
ret
xor
dec
mov
pop
sar
mov
stc
or
xlat
cmp
add
shl
dec
inc
sar
xor
movs
rol
inc
ds
pop
dec
mov
movs
xchg
int
push
cmp
inc
fwait
pop
les
ds
ins
and
xchg
iret
xor
dec
dec
jge
xchg
inc
jmp
test
jmp
mov
cmps
adc
lahf
dec
add
adc
shl
or
jg
(bad)
mov
out
mov
nop
or
cmp
mov
xchg
ds
fild
sub
fnstcw
cld
mov
or
mov
fwait
mov
(bad)
pop
jne
or
xlat
push
xchg
sub
cmp
push
pop
lds
int
outs
hlt
jo
jecxz
test
mov
daa
dec
(bad)
out
xchg
mov
in
stc
and
lock
and
xchg
mov
sub
push
cmp
jg
sti
sbb
rcl
std
(bad)
jle
mov
in
ins
sbb
xchg
mov
cld
nop
movs
(bad)
fscale
addr16
sbb
push
pushf
sbb
push
xchg
adc
sub
jnp
aam
mov
jmp
and
and
add
ss
or
push
mov
sbb
pop
stos
loop
xor
mov
xchg
pop
inc
jmp
sbb
dec
or
loopne
mov
outs
test
pop
mov
pop
ds
(bad)
pop
stos
stos
pop
int
inc
xor
scas
mov
fucomip
xchg
cmp
gs
lods
cmc
out
into
push
adc
std
nop
xchg
jp
std
test
ds
pop
js
jl
lods
adc
xchg
sub
gs
mov
mov
push
mov
pusha
sub
or
push
cmp
je
dec
stos
pusha
mov
add
fdiv
xchg
inc
fisub
jp
les
js
or
fs
aas
setnp
mov
outs
and
adc
inc
outs
adc
xlat
aas
xlat
(bad)
arpl
add
data16
mov
dec
mov
cmps
adc
adc
dec
pop
mov
push
repnz
sbb
xor
mov
mov
mov
sahf
push
mov
ins
push
pop
push
sbb
imul
aaa
dec
or
cmp
(bad)
mov
inc
add
jl
push
inc
jo
mov
ss
pop
sub
mov
fwait
push
adc
and
cld
cmps
lds
int
repnz
retf
or
add
daa
inc
and
mov
inc
cmc
jmp
icebp
mov
loopne
shr
push
retf
push
mov
xor
inc
and
mov
dec
movs
inc
jge
sahf
or
push
(bad)
call
mov
and
stos
xchg
ret
adc
call
das
ins
push
in
cmp
(bad)
ins
and
(bad)
xchg
push
sbb
stc
dec
movs
shl
inc
aas
dec
mov
(bad)
pop
inc
xchg
popa
(bad)
push
pop
pop
ja
fnstcw
in
lds
inc
cld
jmp
fadd
sbb
lock
mov
inc
cmps
icebp
pop
inc
inc
rol
pop
leave
sbb
popa
mov
sbb
add
xor
mov
outs
adc
lds
dec
dec
mov
jecxz
dec
cmp
jp
fld1
call
mov
ss
and
pop
xchg
repnz
ins
mov
loopne
imul
cmp
jle
or
dec
adc
das
sub
jo
shl
inc
imul
push
vmovaps
pusha
fdivr
push
push
sub
cmp
into
sub
sbb
lods
aad
es
cmps
cli
push
jne
jbe
cmps
retf
outs
aad
stos
aam
mov
enter
pop
jge
push
sub
sub
fld
xchg
push
pop
js
jns
push
jecxz
(bad)
pop
and
popa
mov
xchg
das
sbb
xchg
movs
xchg
imul
dec
addr16
sub
lods
jge
movs
mov
push
jb
and
test
out
es
cmp
mov
ror
imul
adc
adc
in
xor
push
mov
js
adc
lds
add
jg
clc
pop
mov
mov
pop
scas
pusha
dec
addr16
icebp
fadd
jno
push
sbb
sbb
je
or
jne
adc
lods
int
xor
fistp
pusha
inc
push
pop
(bad)
jnp
cmp
std
pop
lahf
jg
ret
scas
sbb
dec
iret
loope
mov
rol
inc
or
nop
je
cdq
daa
jmp
inc
cmp
das
aam
mov
mov
int3
add
sbb
ret
mov
add
mov
push
cmp
ja
fst
imul
sub
(bad)
fucom
shr
mov
jns
pusha
(bad)
dec
test
push
mov
push
jle
sub
in
lea
adc
push
mov
fbld
cmp
or
out
cmps
sub
cmp
aas
in
or
mov
hlt
fstp
or
pop
mov
(bad)
jg
ins
mov
push
push
(bad)
repz
stc
(bad)
mov
ins
or
jne
dec
fdiv
arpl
jmp
test
inc
jno
stc
inc
jo
fadd
jo
(bad)
cs
es
push
mov
add
xchg
in
aas
pop
sti
dec
stc
sub
out
xchg
and
sar
aam
jge
jmp
mul
rcr
sbb
mov
mov
mov
jae
cmp
adc
mov
out
lahf
shl
mov
add
call
fnstcw
adc
arpl
cli
in
push
stos
mov
adc
dec
inc
and
test
inc
jl
out
loopne
nop
mov
jge
mov
dec
nop
xor
lods
dec
fsub
rol
inc
sbb
mov
or
ins
loopne
mov
push
leave
je
mov
sub
cld
sbb
movs
ds
icebp
mov
jmp
inc
mov
pop
mov
lds
adc
fucomi
pop
jmp
adc
cmp
std
push
cmp
stc
(bad)
int3
rcl
jecxz
cmp
or
cmps
jmp
xchg
(bad)
aas
bnd
dec
pushf
popf
rol
xor
out
adc
fimul
mov
push
aad
sbb
and
cld
mov
stc
mov
data16
int
in
jge
xlat
or
bound
dec
ja
mov
(bad)
(bad)
adc
cmp
into
jnp
adc
jns
div
jle
add
and
scas
outs
jl
sbb
jge
sbb
test
xchg
and
mov
(bad)
outs
sbb
inc
loopne
fldln2
adc
mov
bound
cmp
imul
sbb
cli
sub
jmp
pop
imul
lock
aas
jmp
in
cs
retf
(bad)
mov
test
push
mov
shl
mov
xor
or
mov
add
push
and
jmp
inc
daa
out
sub
adc
and
ja
mov
jb
scas
adc
mov
cmp
ror
daa
es
es
cmp
ficomp
xlat
icebp
inc
mov
push
cmp
jmp
nop
push
int3
test
wrmsr
mov
xlat
cmp
neg
std
test
sub
test
dec
cmc
jle
imul
imul
mov
data16
sub
pop
fxam
mov
push
mov
push
push
mov
inc
mov
div
imul
mov
add
iret
push
push
loope
mov
push
inc
xor
int
out
lods
pop
mov
call
repnz
js
leave
fwait
push
fidiv
mov
imul
gs
and
xchg
mov
aaa
inc
or
add
inc
jmp
sar
xchg
mov
retf
je
push
ss
cmp
aad
sbb
retf
mov
push
mov
push
ret
and
(bad)
push
div
xchg
add
into
sbb
std
test
sbb
push
inc
out
jecxz
add
cmp
ss
in
jnp
push
or
ret
sbb
mov
inc
pop
lock
pop
and
mov
or
pop
in
push
(bad)
cmps
lods
ins
inc
aam
or
xchg
retf
aas
call
cli
mov
cdq
mov
(bad)
icebp
mov
repz
hlt
sbb
jb
pop
cmc
mov
pop
push
dec
fnop
mov
push
inc
sahf
jb
push
inc
rcl
cmp
repz
jb
cmps
loopne
icebp
mov
in
push
push
stos
jo
out
cmp
add
jne
mov
mov
pop
paddusb
sub
add
(bad)
and
imul
aam
out
xor
push
adc
mov
in
sub
cli
push
je
cld
scas
int
test
cmp
jp
xor
data16
out
cmps
mov
xchg
into
das
stos
and
sbb
hlt
js
xchg
(bad)
xchg
mov
mov
das
into
mov
leave
test
aam
jo
cmp
xor
dec
cmp
sar
push
or
sbb
xchg
jb
cmps
push
dec
je
in
adc
out
mul
js
xor
movs
mov
inc
adc
sar
loop
ins
dec
mov
jno
cmp
mov
(bad)
hlt
xlat
adc
jbe
or
cwde
mov
and
and
leave
sbb
or
push
loop
lahf
sbb
or
lods
inc
push
inc
mov
mov
cld
mov
iret
bound
inc
dec
stos
mov
xlat
xlat
jnp
in
inc
add
call
jbe
jmp
jbe
sub
retf
mov
scas
jmp
retf
popa
xchg
scas
sti
mov
mov
dec
imul
jb
ds
dec
add
iret
xchg
sbb
(bad)
push
pop
sub
movs
pop
scas
push
and
jno
xor
xchg
int
loop
dec
jb
mov
call
mov
pop
sub
push
mov
je
push
test
mov
inc
fbld
popf
in
sub
clc
retf
ins
dec
lods
jmp
adc
(bad)
mov
gs
adc
test
jb
sub
pop
jmp
outs
cmp
mov
mov
and
jle
loop
(bad)
aad
xor
lods
xchg
ins
lods
dec
(bad)
mov
enter
sbb
jl
jecxz
push
imul
pop
lock
sbb
arpl
push
jecxz
leave
pusha
mov
or
add
and
clc
mov
fld
into
sbb
and
ret
mov
mov
jno
adc
out
fstp
xchg
xchg
jmp
sbb
inc
int
sbb
mov
leave
dec
dec
push
jl
ins
dec
dec
movs
jecxz
dec
mov
call
test
shl
popf
test
loopne
in
mov
xchg
or
dec
xchg
jne
jnp
rcl
dec
js
mov
jg
and
fsubr
sub
nop
inc
mov
or
test
aas
push
and
and
repz
fcomp
cmp
out
sti
and
dec
(bad)
jne
inc
leave
push
xor
adc
leave
ror
mov
mov
or
dec
sub
icebp
mov
ja
packssdw
repnz
or
pop
dec
dec
addr16
dec
mov
and
cs
pop
les
cmps
jl
dec
pop
or
jg
push
ds
lea
aas
mov
ins
cdq
adc
mov
mov
clc
xor
jmp
and
jo
push
cs
std
mov
xchg
aam
mov
cmp
(bad)
out
call
scas
xchg
retf
sub
add
mov
addr16
int
xchg
xor
cdq
mov
mov
ror
ret
sti
jmp
xchg
push
mov
xor
mov
add
(bad)
or
lods
(bad)
not
test
mov
(bad)
mov
ja
stc
sbb
or
mov
nop
div
xor
jl
jp
cmp
xor
ret
sub
mov
mov
test
inc
sub
iret
stos
test
mov
mov
pushf
adc
or
in
xchg
mov
mov
(bad)
fsubr
cwde
aas
pop
ja
push
jne
xor
call
mov
pushf
daa
sub
lds
les
retf
loop
dec
push
mov
push
inc
xlat
xchg
rol
retf
outs
nop
retf
sub
mov
mov
shl
in
out
into
aas
mov
enter
dec
cdq
ds
mov
aad
arpl
lods
mov
pop
mov
inc
repnz
stos
fisub
or
fneni(8087
scas
dec
cmp
mov
mov
jno
jmp
mov
sbb
cmps
test
add
pop
in
push
out
or
xchg
jmp
jb
test
outs
test
push
xor
add
and
jp
popa
inc
cmp
mov
inc
and
call
push
add
ret
lock
dec
pop
mov
cmp
jmp
dec
in
add
xor
xchg
je
mov
mov
jge
mov
shl
or
or
outs
sub
(bad)
pushf
cli
jno
(bad)
xchg
stos
add
je
out
sbb
adc
push
sub
out
fcmovnb
(bad)
or
or
adc
add
push
sbb
gs
out
dec
bound
mov
dec
push
cmp
xchg
jl
jae
mov
stos
retf
mov
stc
dec
test
call
inc
sbb
js
jmp
mov
xor
adc
(bad)
mov
mov
push
jle
into
pop
int3
scas
mov
xor
add
out
push
sub
add
in
mov
fwait
out
fwait
lea
movs
jmp
imul
fs
loop
call
cmp
dec
ret
cmp
mov
mov
cmp
movs
push
fadd
xchg
into
lea
or
inc
jb
or
jbe
out
xchg
or
push
sbb
mov
daa
or
push
add
aas
retf
dec
(bad)
es
ret
lds
ret
out
fwait
bound
fstp
mov
xor
jae
dec
sub
nop
sahf
stc
cmp
fs
mov
and
fdecstp
sub
(bad)
mov
out
mov
stc
cs
sbb
pop
sbb
jnp
test
adc
stc
hlt
bound
imul
mov
(bad)
in
bound
cdq
les
icebp
inc
mov
push
dec
pop
sahf
xor
add
bound
add
cmc
ins
and
xchg
in
enter
lds
popa
jno
or
je
ret
add
inc
in
fdiv
int3
repz
test
push
sbb
pop
add
and
pop
jp
sub
dec
cmp
mov
add
sbb
push
cdq
fcom
in
mov
xchg
cmp
and
popf
and
mov
or
mov
sbb
add
shl
xor
pop
retf
xchg
lds
call
jns
mov
dec
jecxz
mov
lea
(bad)
sti
mov
dec
sahf
hlt
ins
dec
test
sbb
test
sbb
into
into
inc
and
pop
rcl
inc
add
adc
in
daa
shl
push
jl
cmp
xchg
jecxz
pop
enter
retf
sub
lahf
test
nop
inc
or
dec
push
dec
cmps
and
inc
out
nop
mov
jle
mov
sub
or
idiv
jg
clc
ja
xor
enter
pop
xchg
dec
jmp
mov
lds
stos
repz
test
test
xchg
loopne
jl
dec
shr
xchg
clc
dec
inc
dec
dec
out
clc
sub
cli
xchg
pop
dec
dec
aad
xchg
(bad)
mov
mov
mov
cld
mov
inc
pop
adc
ins
xor
mul
add
sub
inc
xor
mov
jmp
jb
jle
add
(bad)
fistp
fist
sahf
push
cmp
lea
push
fwait
das
mov
cmp
ror
stos
rcr
push
das
cmp
fcomp
out
jmp
and
enter
jo
add
cli
ss
sbb
xchg
out
mov
push
adc
sub
add
dec
sub
inc
jne
inc
inc
fist
rcr
pop
jae
sub
stc
mov
and
lds
lea
mov
and
test
adc
or
stos
xor
outs
out
out
mov
jbe
and
xor
or
stc
in
xchg
fadd
imul
mov
test
lods
mov
mov
lds
rol
inc
dec
sbb
ds
cld
sbb
sub
je
bound
and
add
inc
or
pop
lods
jmp
leave
mov
fnsave
out
mov
inc
jne
ret
and
and
adc
ds
rcr
in
xchg
inc
inc
and
cmps
mov
pop
idiv
sub
pop
je
dec
add
xchg
pop
sbb
(bad)
rcr
fsubr
and
mov
xor
lock
mov
cmps
fwait
(bad)
(bad)
ins
mov
(bad)
xlat
pop
cmc
(bad)
pop
and
idiv
outs
into
test
lods
inc
xor
mov
cmp
fsub
clc
push
in
jno
ja
stos
dec
outs
scas
adc
das
or
xor
or
xor
movs
cmp
lods
ret
fstp
sbb
cwde
sub
ror
out
test
(bad)
mov
xchg
sub
push
out
add
mov
cmp
imul
mov
push
mov
push
repz
and
sbb
movs
aad
mov
pusha
(bad)
test
pop
and
push
mov
cmps
dec
add
and
dec
sub
aas
mov
sub
mov
jg
push
inc
cld
mov
xor
int3
mov
cmp
stos
lods
aas
loope
(bad)
ffree
jb
into
mov
in
setl
inc
cmps
push
cmp
ss
mov
cmp
retf
xor
je
mov
js
in
cmps
ror
mov
pop
inc
inc
adc
jnp
cmps
xor
clc
cmp
pusha
repz
retf
and
retf
lock
jmp
lods
jmp
cld
and
(bad)
std
in
movs
ror
imul
and
call
hlt
arpl
cmovs
pop
mov
ja
cmp
dec
adc
(bad)
cli
sbb
fstp
sbb
inc
ror
add
fst
pushf
inc
mov
mov
aas
xrstor
rcr
jp
movs
stos
push
push
xor
push
fidiv
add
ret
xchg
jecxz
mov
cmp
(bad)
push
pop
fdiv
xchg
mov
xchg
fs
scas
pop
repz
data16
inc
mov
and
imul
stos
js
adc
loopne
mov
int
pusha
mov
call
add
out
(bad)
imul
and
mov
rol
(bad)
or
mov
mov
pop
add
mov
(bad)
std
xor
(bad)
nop
lea
je
test
inc
and
dec
xor
scas
into
fcomp
xchg
mov
sbb
adc
mov
stc
mov
adc
inc
movs
add
or
psrlq
std
add
or
aam
sub
or
int
and
and
mov
push
loope
dec
xor
cmp
inc
scas
mov
clc
sbb
loope
hlt
push
fs
push
sub
dec
xchg
rcr
pop
pop
add
out
je
repz
cmp
and
sub
cmp
das
test
stos
push
into
push
jnp
push
mov
lock
push
mov
icebp
mov
jbe
aam
push
mov
add
ret
push
pop
shr
or
sub
lods
jge
sbb
rcr
push
test
or
enter
inc
sbb
mov
jo
mov
xchg
mov
shr
shl
das
sub
mov
cmp
or
push
xor
addr16
xor
call
jnp
jno
call
sti
sub
inc
inc
adc
icebp
mov
mov
in
push
xor
lahf
dec
ins
dec
div
loope
ror
inc
sbb
mov
sbb
push
stc
lds
int
pop
test
push
add
sbb
sbb
add
jmp
sub
and
aad
adc
(bad)
in
rol
outs
ins
mov
or
retf
xchg
adc
dec
ss
jns
sub
jno
scas
mov
mov
cmps
jg
dec
nop
(bad)
sar
in
cmp
pop
fwait
ret
inc
lods
imul
dec
dec
loopne
stos
test
stc
adc
std
icebp
jmp
out
jecxz
test
adc
pop
pop
icebp
mov
or
dec
sbb
jne
jp
sbb
inc
shr
push
add
cmp
ds
pusha
or
add
push
icebp
pusha
jmp
arpl
cmps
ss
pop
xor
adc
dec
enter
sbb
jg
jmp
loope
data16
adc
cmp
adc
inc
xor
add
and
in
test
bound
into
cmps
push
pop
repnz
inc
sub
in
mov
xchg
gs
mov
xor
imul
pop
jecxz
inc
aas
cdq
mov
out
aas
inc
sar
xchg
in
inc
push
and
mov
xchg
cmp
or
mov
fldcw
xor
(bad)
imul
shl
add
push
fmul
(bad)
push
pop
pusha
inc
inc
data16
aad
(bad)
iret
leave
pop
mov
sbb
cmp
movs
mov
cmp
jge
mov
cmp
jg
movs
cmps
cli
js
dec
inc
inc
or
mov
lahf
or
lea
in
into
sbb
fcom
cmp
outs
adc
fs
xor
cmp
inc
(bad)
retf
ficom
dec
add
cs
outs
mov
ins
mov
mul
lock
xor
int3
call
sub
call
dec
mov
lock
neg
push
cld
push
push
push
and
sub
xor
repz
loop
jne
inc
test
in
repnz
pop
add
ins
add
sub
lea
inc
jle
add
xchg
enter
pop
xor
in
push
jmp
pop
pop
dec
int3
pop
push
iret
xchg
dec
jne
pop
clc
dec
icebp
xor
lock
adc
mov
sbb
cmp
dec
movs
mov
inc
cwde
js
cli
jg
and
push
pop
and
clc
sbb
sub
ret
sahf
sub
retf
mov
xor
pop
daa
bound
stc
not
iret
dec
les
je
sar
push
sub
push
add
and
loope
push
fist
or
test
sbb
ins
pop
fsubrp
scas
add
xchg
jg
in
xor
fnstcw
sub
inc
cmp
and
in
sbb
fld1
jno
je
imul
jp
imul
and
add
outs
movs
cmp
push
and
mov
mov
aas
jp
imul
jae
iret
xlat
sbb
outs
or
imul
xor
dec
xchg
mov
mov
movs
or
nop
mov
or
and
sti
add
xchg
daa
mov
jae
pop
cdq
jne
fistp
pusha
cmps
cmp
add
xchg
hlt
ss
sub
lods
icebp
pushfw
fs
gs
mov
mov
sub
mov
cld
add
lahf
cmp
test
dec
std
sar
mov
fs
arpl
pop
out
rcl
outs
rcl
xor
or
xchg
adc
mov
inc
je
inc
retf
adc
mov
es
dec
pusha
test
out
jge
into
adc
add
sbb
loopne
inc
dec
push
mov
fwait
mov
pop
icebp
stc
mov
ret
xchg
dec
popf
inc
adc
pop
lock
pop
xchg
scas
dec
add
ret
(bad)
mov
movs
mov
lods
clc
(bad)
lods
rol
mov
sbb
fadd
mov
or
stos
dec
pop
cld
pop
mov
stos
mul
dec
adc
scas
add
push
mov
scas
cmp
push
cmp
fisubr
inc
out
inc
or
pop
xor
mov
cmp
cmps
rsm
cwde
jns
push
jo
sbb
enter
divps
mov
jmp
push
or
push
dec
xchg
ret
add
ins
xchg
or
add
pop
iret
xor
jle
fld
(bad)
pushf
jecxz
scas
push
dec
xchg
dec
int3
leave
stos
js
push
jecxz
cld
xor
jbe
inc
inc
and
adc
sbb
mov
or
push
mov
jne
push
dec
pop
aad
pop
fcomp
loope
push
sub
mov
scas
jno
aam
or
cmp
pop
xchg
cmps
pop
mov
inc
arpl
push
inc
bound
fadd
sub
ja
ror
jns
into
jnp
cmp
vmread
in
xlat
dec
push
mov
enter
xor
mov
adc
add
not
in
pop
jl
add
dec
scas
sub
mov
xor
jnp
sub
(bad)
test
aaa
fisttp
imul
add
or
cmp
dec
lahf
lods
and
mov
or
push
pop
int
mov
imul
mov
lods
xchg
and
push
dec
nop
pop
sub
pop
pop
in
or
in
xor
faddp
push
mov
shr
out
jle
adc
cs
and
retf
dec
pop
dec
clc
sub
clc
stc
push
and
arpl
into
mov
je
sti
mov
(bad)
stc
sub
mov
inc
pop
fcmove
scas
aad
add
popf
pop
jle
sbb
cmp
jne
rol
mov
xlat
xchg
jae
ret
js
ret
bound
scas
push
(bad)
jg
das
jp
xchg
cmp
loope
js
jo
fidiv
test
movq
xor
sti
dec
jns
dec
ja
and
add
or
mov
aam
cdq
inc
push
add
push
imul
push
push
xor
push
sub
fcmove
mov
in
fwait
and
cmp
ret
or
or
add
add
cld
or
and
shl
ss
inc
jg
push
push
stos
or
xchg
ins
loop
ret
or
and
imul
mov
stos
imul
int
cmp
cmp
mov
cli
ds
out
imul
mov
popf
mov
scas
mov
push
cmc
out
pop
jo
rcr
imul
and
pop
les
push
leave
(bad)
out
inc
add
xor
das
sub
iret
add
push
cwde
nop
call
inc
or
repz
cmp
xor
pushf
inc
push
cmp
aam
repz
mov
jo
dec
rcl
mov
fpatan
mov
dec
and
push
xchg
inc
sbb
or
fiadd
mov
mov
mov
push
leave
sub
mov
xchg
test
cld
leave
sbb
into
jno
out
out
dec
in
data16
xor
je
xchg
push
dec
cmp
push
cmovno
jb
popf
ins
xchg
mov
inc
imul
mov
test
cmp
les
push
mov
inc
sub
or
sub
sbb
cmc
pop
jno
icebp
retf
and
clc
scas
xor
sub
jae
xchg
outs
mov
out
or
xchg
mov
retf
in
xor
mov
mov
in
xor
inc
jo
jne
and
shl
lahf
pop
add
pushf
pusha
(bad)
add
and
mov
mov
pop
popa
das
lahf
mov
sbb
stc
(bad)
shr
call
ja
mov
inc
mov
nop
fidiv
inc
pop
xchg
scas
test
sub
xor
mov
or
jae
xor
sub
add
adc
std
popa
fidivr
add
je
(bad)
outs
inc
fimul
cmp
stc
push
inc
xchg
push
fild
pop
das
stos
mov
inc
ja
mov
add
imul
imul
outs
imul
mov
nop
or
push
dec
test
xchg
xchg
ds
(bad)
cwde
mov
cmp
jle
in
loop
and
call
mov
imul
or
sbb
frstor
sub
add
mov
cdq
repz
add
(bad)
fdivr
mov
push
test
jmp
add
in
les
mov
xor
dec
push
(bad)
or
lock
call
jo
mov
add
jb
idiv
push
push
imul
mov
ficom
(bad)
xchg
xor
ds
je
xor
out
adc
jl
fadd
loopne
cmp
test
sbb
sbb
arpl
gs
imul
outs
fild
mov
adc
mov
mov
xor
pop
rcr
outs
sub
jb
xchg
mov
xchg
lods
mov
inc
jns
jbe
test
xor
pop
(bad)
hlt
test
ja
mov
loope
(bad)
fdiv
jecxz
outs
imul
xor
inc
jnp
ret
push
mov
mov
mov
imul
pushf
mov
stos
repz
sti
loop
imul
push
dec
scas
adc
cmps
jmp
push
adc
dec
arpl
mov
neg
outs
lea
jmp
test
xchg
int
shl
push
xor
push
popa
inc
adc
movs
dec
in
mov
and
inc
sbb
sub
cdq
cmp
cwde
rol
ja
or
sti
adc
dec
sahf
popf
es
sbb
jp
mov
add
cdq
push
movs
mul
call
cmp
xchg
jmp
lock
pop
lds
clc
xlat
pop
retf
mov
add
sbb
jae
jae
retf
je
inc
ficomp
retf
aas
ins
jnp
jo
lods
and
mov
imul
sar
in
xchg
adc
lahf
rol
pop
mov
in
in
jle
push
iret
or
push
aaa
stos
jecxz
push
call
pop
sbb
adc
repnz
or
leave
outs
sub
or
bound
jecxz
inc
sbb
mov
xchg
ret
sub
clc
movs
int
out
aas
dec
mov
das
mov
and
ret
push
ins
ja
loop
pop
cld
jg
repz
lods
fwait
movs
fdiv
dec
jl
mov
dec
pop
mov
or
dec
mov
fsub
rcl
leave
sub
mov
adc
and
hlt
fisubr
dec
push
test
or
int
adc
xchg
icebp
daa
add
neg
xchg
sbb
out
pop
xor
lahf
shr
(bad)
sbb
call
mov
xchg
dec
in
mov
sub
pop
mov
push
jecxz
jmp
sbb
mov
push
shl
push
arpl
dec
cmps
mov
shl
ret
mov
push
and
pop
pop
xor
xchg
mov
pop
and
push
arpl
out
dec
xor
and
or
xor
jg
cmc
int
mov
and
xor
test
hlt
jno
ss
push
jno
and
cli
xchg
movs
jae
mul
pop
xchg
mov
in
xchg
es
mov
icebp
call
inc
add
not
or
(bad)
movs
div
inc
sbb
xor
dec
jmp
inc
pop
push
xchg
dec
xor
pop
xor
in
stos
f2xm1
xor
fwait
mul
push
or
add
xlat
xor
xchg
or
call
or
in
xchg
xor
inc
fisubr
aaa
and
pop
sub
push
inc
cmc
sub
popa
retf
dec
jns
mov
fwait
cld
dec
ds
loop
hlt
daa
sbb
xor
cmps
xchg
jne
cmp
cmp
test
mov
cmps
cli
adc
cdq
sub
in
cmp
xchg
jge
push
call
retf
pop
cli
retf
jo
movs
cmp
add
dec
cmp
mov
push
daa
jne
ror
cs
js
jl
ds
jl
sbb
xchg
shl
jg
sbb
xchg
xlat
xchg
fst
dec
push
stc
mov
test
test
cld
cld
popa
dec
bound
cmp
shl
cmp
add
ja
xlat
mov
leave
jne
dec
out
sahf
push
daa
movs
cmp
test
mov
cmp
inc
or
and
lods
mov
mov
shl
inc
idiv
mov
mov
enter
idiv
mov
ja
imul
mov
(bad)
push
adc
std
or
loop
and
jl
or
xor
popa
shl
mov
repz
xchg
cmp
popf
push
mov
mov
sbb
mov
mov
cmp
lea
fmul
xchg
ds
icebp
adc
jle
xchg
pop
lods
cmps
(bad)
or
mov
ins
dec
cmp
xchg
mov
inc
cmp
scas
das
or
inc
mov
jae
adc
xor
retf
inc
xchg
aas
mov
mov
(bad)
cmps
ret
or
aad
ret
mov
(bad)
icebp
arpl
outs
jge
test
push
data16
addr16
jmp
pop
xor
sub
dec
inc
mov
cmp
adc
mov
push
push
xor
fisub
lock
pop
bound
and
push
jae
xor
push
jnp
sbb
enter
fst
push
and
lods
inc
stc
test
push
cmp
addr16
cmps
stc
out
mov
adc
or
adc
jmp
pop
fisttp
aam
jnp
int3
sahf
fwait
xchg
or
(bad)
fild
sbb
(bad)
popa
in
push
sub
and
push
test
inc
adc
lods
cld
jb
adc
or
cli
dec
es
fdivr
out
and
retf
int3
gs
test
loop
(bad)
gs
repz
cmps
nop
mov
xchg
fiadd
call
adc
daa
arpl
dec
mov
jg
mov
add
push
jmp
xor
jp
jg
jns
outs
test
jb
add
retf
push
inc
call
sbb
cmp
sbb
stc
aas
lahf
rol
repnz
xor
pop
das
movs
fsub
mov
movs
fdiv
add
scas
sbb
mov
retf
cmp
sbb
arpl
adc
or
or
xor
and
test
in
arpl
call
in
xchg
or
fmul
mov
leave
xor
out
jo
push
adc
in
inc
fild
jae
or
fwait
pop
pop
imul
jb
loop
push
cwde
push
loope
xor
add
mov
mov
or
cdq
pop
fnsave
out
jns
outs
popf
data16
cmp
es
mov
add
inc
cmps
mov
out
cmp
cwde
fs
fwait
xlat
pop
popa
(bad)
clc
scas
call
xchg
aam
xchg
mov
inc
cmp
fisubr
mov
loope
pop
cmp
adc
xlat
mov
ds
movs
adc
inc
stos
es
push
cmp
mov
mov
test
out
retf
mov
add
(bad)
cld
pop
xchg
sahf
and
mov
pop
test
adc
shr
xchg
ds
cs
popa
push
xor
in
and
movs
inc
push
js
inc
retf
(bad)
sub
test
sub
add
or
pop
adc
jge
mov
pop
ret
add
addr16
xchg
or
jb
dec
add
add
xchg
je
jno
mov
or
adc
mov
push
(bad)
aam
fcmove
ins
ficomp
(bad)
out
cmp
outs
std
scas
sbb
dec
outs
(bad)
stc
scas
jns
xor
xchg
popf
xor
mov
and
add
stos
fnstsw
dec
mov
xchg
bound
pop
call
jp
lea
push
add
daa
mov
sub
pop
out
sar
and
pushf
cmp
mov
jns
cmp
ins
and
push
stc
jne
(bad)
loope
adc
ins
dec
retf
adc
test
lock
sub
dec
dec
jno
xchg
dec
inc
cdq
push
dec
jbe
jae
in
dec
dec
scas
jne
push
in
mov
outs
mov
icebp
and
push
popa
ret
fmul
xor
inc
sti
add
(bad)
out
scas
out
je
dec
jmp
lahf
jg
hlt
xchg
adc
daa
(bad)
or
aaa
jge
call
jecxz
in
mov
inc
lea
test
nop
or
ret
sbb
mov
(bad)
adc
mov
push
in
into
add
lea
cmp
xchg
push
pop
xchg
shl
mov
loope
jmp
loopne
jp
dec
in
add
(bad)
mov
mov
inc
push
int
pusha
in
adc
cmp
loope
xchg
pop
xor
pop
sbb
shl
push
call
pop
mov
mov
inc
adc
mov
push
xchg
sub
pop
or
inc
jmp
ja
push
jae
cmp
xchg
xor
xchg
xlat
not
in
inc
jmp
mov
mov
cwde
cmp
leave
xchg
push
inc
ins
fbstp
fs
imul
jmp
push
mov
leave
popf
adc
adc
out
mov
pop
fistp
mov
dec
stos
push
or
inc
mov
adc
push
xchg
out
clc
pop
dec
sub
or
dec
adc
xor
(bad)
sbb
mov
loop
lea
push
out
shl
push
fs
test
arpl
mov
repz
push
jl
or
pop
out
cli
inc
push
mov
pop
sbb
mov
adc
xor
xchg
(bad)
cmp
cmp
jp
push
pusha
jmp
mov
ss
shr
rcr
mov
repnz
popa
dec
out
inc
outs
mov
add
shr
into
sbb
mov
mov
movs
cmps
or
fisubr
push
add
sbb
hlt
lea
cmps
pop
adc
out
fmul
scas
scas
test
cdq
push
sbb
add
je
and
mov
jne
jns
push
push
and
cmps
jo
aam
enter
leave
jmp
retf
mov
or
shl
repz
mov
mov
in
adc
inc
movs
inc
cs
and
sti
xchg
scas
data16
sub
stc
push
mov
enter
loop
xor
sbb
leave
push
out
adc
dec
mov
push
loop
jae
scas
mov
popa
iret
std
mov
(bad)
inc
(bad)
cmp
push
dec
add
inc
sbb
cdq
push
xchg
xchg
addr16
xchg
(bad)
lods
int
sti
in
jecxz
or
aad
rep
sbb
or
call
lock
lea
dec
inc
jl
ffree
pop
cmp
and
retf
pop
es
ss
or
or
stc
test
lahf
or
iret
cmp
gs
pop
lods
std
sub
jae
add
iret
cmc
aaa
call
sub
or
stc
add
(bad)
repz
mov
cmp
test
repz
and
add
(bad)
push
fisub
cmp
and
push
mov
or
sub
iret
mov
jg
mov
pop
icebp
dec
jo
call
test
dec
sti
sbb
jnp
sbb
ret
ss
lock
push
ret
push
idiv
out
jno
addr16
out
fisttp
and
mov
dec
mov
push
repz
test
or
pop
ret
test
add
jne
pushf
leave
test
xor
and
jge
push
dec
mov
jp
dec
mov
mov
int3
dec
sbb
nop
xchg
jmp
push
(bad)
cmp
push
or
outs
ja
arpl
dec
pop
fld
and
jae
xor
out
add
and
pop
mov
rcl
div
dec
mov
jmp
cmp
loop
jnp
and
movs
cmp
mov
retf
sbb
jno
inc
pop
or
aaa
mov
xor
out
out
mov
je
xor
not
lods
xor
daa
xchg
rol
out
adc
xor
sahf
push
nop
jb
mov
into
xchg
mov
stc
aaa
imul
xor
add
fs
xor
jg
test
jne
xor
cmps
fisttp
jno
inc
or
inc
inc
adc
imul
mov
xchg
(bad)
int3
cvtdq2ps
push
fcmovnb
cwde
sbb
push
sub
jle
add
dec
lea
loopne
cdq
mov
pop
xor
mov
xor
mov
push
push
cmp
std
movzx
movs
sub
lods
inc
and
sbb
xchg
xchg
inc
repnz
adc
mov
jge
pop
cmp
xchg
pop
jns
icebp
repz
mov
int3
mov
popf
push
shr
mov
xchg
or
jmp
pop
sub
lods
or
dec
xchg
sti
push
push
mov
jmp
and
fs
imul
add
adc
dec
gs
jnp
ss
cmp
push
pusha
add
frstor
test
mov
mov
cmps
jbe
mov
outs
mov
repz
and
loop
sub
repnz
add
ret
gs
cmp
xor
mov
mov
sub
repz
and
or
mov
addr16
cmp
rcl
cs
adc
imul
xchg
in
sub
mov
dec
cmp
pop
mov
outs
popa
pop
or
pop
std
loopne
add
and
imul
sahf
lea
xor
outs
das
mov
test
fadd
mov
stos
jns
jo
and
cwde
jge
fnstcw
mov
ftst
aam
xor
into
pop
fnstsw
and
inc
dec
sub
mov
sbb
out
pop
loope
popa
xor
js
jae
or
shl
cmp
pusha
pop
sti
mov
ss
ins
or
jae
pop
aad
movs
mov
lds
gs
jnp
cld
or
mov
rcr
pusha
imul
mov
xchg
adc
aad
cmps
dec
inc
push
adc
adc
xchg
push
inc
fnstcw
xor
sub
in
loop
mov
enter
lea
out
icebp
pop
icebp
cmp
popf
jmp
test
shr
movs
push
movs
jne
mov
cmp
mov
(bad)
movs
xor
add
push
movs
or
ins
test
pop
cmp
mov
mov
dec
push
push
xchg
icebp
ret
bound
mov
jb
sub
ficom
in
push
aam
outs
shl
hlt
in
nop
mov
cs
push
add
rol
in
ss
mov
cmp
add
add
rcl
hlt
popf
dec
mov
inc
in
mov
inc
ja
pusha
fwait
or
sar
jo
call
pop
popf
jmp
(bad)
dec
mov
dec
ins
ins
and
adc
ret
mov
ficomp
les
cmp
pop
and
cmp
add
stos
stos
cmp
mov
push
popa
inc
add
jb
not
nop
into
and
sub
xchg
push
(bad)
xor
and
jnp
(bad)
xchg
jne
jne
shr
sub
dec
mov
cmc
dec
pop
mov
movs
shl
mov
dec
pusha
popa
js
xchg
adc
(bad)
(bad)
mov
mov
ret
xor
cdq
lods
jg
movs
arpl
dec
es
pop
inc
add
call
jb
lahf
loopne
inc
add
out
fnstsw
inc
sub
pop
mov
fdivr
mov
aam
daa
jg
add
fidivr
or
pop
movs
imul
adc
sub
sbb
iret
add
(bad)
hlt
iret
dec
scas
jmp
inc
push
jmp
stc
xchg
add
inc
xchg
dec
fild
shl
imul
shr
imul
cmps
dec
clc
and
retf
ins
ficom
xlat
inc
inc
in
mov
out
cmp
out
stos
cli
ja
dec
inc
cmp
inc
out
dec
loope
jmp
mov
je
lahf
test
sub
jge
shr
in
xchg
into
enter
dec
jmp
jo
jmp
mov
nop
cld
mov
sub
or
fmul
hlt
fsubp
inc
xchg
stos
add
pop
and
dec
add
pop
int
jb
xor
push
dec
cmp
cwde
cwde
fimul
or
lods
mov
ins
xor
push
iret
sahf
xchg
pop
mov
push
je
inc
xchg
cmp
mov
dec
data16
ror
hlt
sbb
dec
and
dec
stc
enter
shl
ds
lea
popa
pop
into
or
jge
push
scas
mov
in
cmp
cmps
aad
jl
and
xor
pop
rcl
jmp
adc
cmp
dec
mov
ret
mov
pop
ja
mov
(bad)
pop
in
fisttp
dec
adc
xchg
fisub
mov
int3
adc
ss
shl
add
jp
or
mov
imul
or
sub
dec
sub
outs
jb
stc
sub
add
ins
mov
lods
dec
ret
in
popa
je
test
fs
cmp
frstor
scas
shl
ins
xchg
out
ins
out
mov
cmp
mov
xchg
adc
stos
rcl
ret
repnz
mov
jne
movs
cli
outs
add
push
sbb
dec
jmp
into
stos
mov
jge
mov
ret
dec
adc
aam
mov
adc
push
jp
cmps
dec
fimul
mov
xchg
and
sub
or
aaa
clc
fisttp
add
jns
and
xor
aam
fwait
pop
sub
(bad)
out
add
jle
popf
(bad)
jns
movs
fild
dec
cmc
and
ret
xchg
(bad)
pop
adc
jmp
jmp
and
hlt
rol
ins
mov
in
lahf
test
xor
repnz
or
pop
cmps
sbb
popa
jb
sbb
dec
icebp
icebp
add
xchg
xor
mov
daa
pop
sbb
mov
sbb
inc
or
loope
arpl
pop
and
sub
lahf
fldcw
mov
xchg
test
adc
in
shl
pop
sbb
test
icebp
cmps
cmp
sahf
jmp
out
jns
(bad)
aam
inc
aad
jo
pop
push
iret
vmovups
dec
into
add
call
das
xchg
fmul
(bad)
cmc
(bad)
adc
dec
xor
inc
int
cmp
das
cs
icebp
push
je
or
fwait
mov
les
repz
jmp
outs
test
or
xchg
adc
stos
mov
adc
or
ins
popa
sbb
jl
fdiv
jns
les
xor
push
sbb
xchg
xchg
ss
daa
dec
mov
imul
adc
inc
mov
aaa
lods
dec
call
or
pop
and
xchg
jmp
dec
jne
(bad)
mov
jbe
inc
out
aad
mov
mov
fs
cli
dec
clc
push
inc
out
retf
jmp
cmp
outs
lods
data16
out
lahf
call
out
bound
push
inc
inc
dec
mov
inc
mov
shr
mov
test
mov
aad
push
test
int3
cwde
inc
xor
repnz
sbb
push
lahf
sbb
test
and
stos
xchg
adc
iret
inc
or
mov
push
inc
jp
rcl
fs
bound
add
xchg
jae
xchg
lea
rcr
stos
outs
or
jno
fidiv
mov
xchg
(bad)
jmp
mov
sub
sbb
mov
pop
arpl
jo
cmp
add
xchg
cmps
sbb
loope
ret
sub
jo
nop
lahf
or
pop
sahf
data16
aad
jg
repnz
xchg
push
pop
jp
mov
dec
dec
mov
stos
sti
inc
je
das
sar
or
into
xor
das
nop
inc
daa
jp
movs
xchg
pop
dec
mov
ror
and
and
dec
mov
test
pop
mov
les
retf
ror
aas
aaa
jnp
lea
add
test
dec
fwait
jae
push
inc
retf
mov
jp
mov
inc
aas
jno
data16
test
push
cmp
mov
and
ja
jg
(bad)
push
test
(bad)
jl
add
push
jmp
xchg
fwait
imul
pop
pushf
mov
mov
dec
push
mov
std
leave
cmp
sub
mov
push
pop
mov
mov
and
jecxz
je
xchg
add
mov
push
xor
push
add
inc
pop
call
xchg
sub
jmp
adc
nop
jg
inc
dec
sbb
out
call
adc
inc
nop
adc
or
std
stos
rol
push
ss
imul
jmp
ins
cli
icebp
test
mov
mov
cmp
mov
pop
xchg
jmp
cmp
stos
clc
xchg
outs
shr
push
adc
adc
icebp
jno
int3
popf
mov
das
(bad)
lea
cmc
dec
test
jmp
leave
arpl
je
aaa
cwde
inc
popa
jne
not
cmps
pusha
out
xchg
aaa
int
cdq
inc
mov
fldcw
add
iret
outs
test
fldenv
push
dec
jge
sub
out
jne
ss
ins
xor
mov
sub
out
jmp
xchg
test
scas
xor
test
push
xchg
gs
clc
mov
dec
fmul
(bad)
ficomp
cmp
pop
sub
int3
inc
imul
add
scas
mov
jbe
push
in
mov
cmp
loopne
imul
ret
adc
lods
xor
and
mov
out
or
mov
(bad)
in
leave
ins
lea
sbb
dec
call
call
aas
mov
bound
jp
ss
int3
jmp
xchg
nop
les
test
not
out
iret
xchg
out
int3
pop
popa
outs
jp
cmp
add
stos
dec
int
ins
add
bound
call
jle
jmp
cmps
scas
retf
ss
mov
fimul
aam
das
push
sub
lods
bound
inc
mov
fdivr
push
dec
pop
cmp
call
push
jmp
das
pop
ja
sub
nop
or
fadd
sbb
mov
ret
aas
add
pop
add
ficomp
cmp
popf
fldcw
arpl
xchg
aaa
fs
outs
outs
push
movzx
or
loopne
jbe
call
call
aas
pop
sbb
jno
test
inc
out
test
clc
shr
cwde
les
test
addr16
fcomp
cmp
mov
fidiv
lds
push
adc
call
xor
add
xchg
mov
push
pop
loop
sub
inc
dec
sti
fild
ss
test
sbb
sbb
fld
cmp
mov
aas
mov
cmc
sub
pop
ret
je
inc
ret
test
aad
pop
(bad)
retf
jl
fild
jge
call
mov
icebp
(bad)
pop
push
ss
out
repz
jns
loopne
adc
test
bt
mov
repnz
adc
sub
xchg
mov
xchg
(bad)
sub
aad
gs
fcmovne
push
dec
lock
imul
fstp
sub
mov
fadd
retf
test
outs
out
xchg
stc
or
js
jo
jne
dec
lock
sub
je
sub
test
pop
dec
mov
xor
push
xchg
fld
test
packssdw
mov
idiv
push
outs
ins
push
sub
jmp
xlat
push
mov
cdq
cdq
retf
ret
xor
cmp
sbb
ret
jnp
std
repnz
stos
loop
and
or
pop
lea
imul
inc
(bad)
dec
stos
mov
mov
jnp
(bad)
in
and
(bad)
fdivr
sbb
mov
cs
jne
out
aad
push
inc
icebp
mov
cmc
adc
pop
mov
sbb
mov
push
pop
adc
mov
not
push
std
jg
dec
push
pop
aam
cmps
int3
ins
daa
popa
lea
enter
in
sub
loopne
sub
and
push
cmp
fidivr
dec
es
rol
retf
jo
sbb
mov
icebp
int3
movs
sub
mov
pop
ror
push
ins
pop
mov
pop
push
cli
xor
and
sti
pop
cs
mov
test
cmp
cmp
sub
push
mov
mov
xor
jo
inc
js
in
dec
inc
not
loope
push
mov
xchg
jle
scas
jmp
movs
add
push
pop
stos
outs
and
or
xor
pop
mov
jns
mov
sub
sub
int
pop
inc
cmps
inc
test
push
mov
out
jo
mov
dec
push
pop
add
jo
mov
(bad)
pop
sub
mov
inc
enter
add
push
push
repnz
mov
jge
mov
mov
adc
or
push
out
push
aas
fwait
cwde
mov
cwde
rcr
xchg
adc
call
push
and
mov
sbb
inc
test
push
daa
pusha
inc
not
test
xchg
xchg
sbb
imul
xor
dec
mov
pop
dec
ss
imul
stos
ficom
ds
retf
hlt
pop
and
dec
push
push
or
xchg
mov
dec
cli
arpl
jae
rcl
adc
mov
jb
jg
loopne
mov
sbb
pusha
jg
outs
cld
mov
cs
mov
add
cmp
push
in
jle
gs
xchg
push
add
xchg
cmp
stos
retf
mov
inc
shl
sbb
fbld
pop
mov
fst
jb
sbb
xor
in
xor
fist
std
add
pusha
cmps
dec
in
cvtdq2ps
xchg
popf
std
jmp
repnz
xor
rol
(bad)
lock
int3
loope
xor
lahf
mov
push
xor
jno
mov
loope
adc
sub
icebp
adc
mov
mov
sub
mov
ins
jmp
cmp
or
inc
sub
mov
loop
test
out
mov
adc
int
or
mov
(bad)
pop
out
pop
ins
pop
js
leave
cmps
jmp
push
std
and
inc
ret
retf
arpl
ss
xchg
push
pop
cmp
fld
stos
sbb
mov
cmc
icebp
and
bnd
jnp
jne
loop
pop
xor
push
in
aaa
mov
(bad)
int3
dec
pop
jl
push
adc
jg
push
or
jmp
push
mov
dec
ja
cmp
movs
push
pop
lods
aaa
add
in
mov
jle
push
in
mov
inc
mov
loop
add
pop
jl
mov
mov
(bad)
adc
push
shl
sti
dec
std
push
add
pop
(bad)
aad
shr
hlt
jbe
sub
adc
imul
call
mov
std
sbb
in
fbld
fwait
cmp
mov
loopne
xchg
push
xchg
popa
mov
rcl
add
(bad)
sub
or
sub
ins
ins
sub
movs
pop
inc
xor
stos
jbe
push
xchg
pop
ds
aas
mov
(bad)
fmul
and
shr
shr
push
jnp
in
call
stos
fisub
out
mov
push
ja
dec
arpl
in
adc
cli
jmp
(bad)
inc
ja
inc
daa
test
jecxz
and
mov
loop
push
xchg
pop
sub
sbb
in
cmc
push
fdiv
outs
or
jno
jl
lock
dec
add
int3
add
popa
sub
xor
push
push
mov
ins
push
fistp
out
jns
retf
enter
mov
out
push
push
mov
mov
rol
pop
dec
cmp
retf
aaa
ins
stos
ret
das
jge
pop
xchg
add
ret
js
nop
xchg
sbb
mov
ds
push
test
push
add
xor
cmc
mov
mov
jae
inc
popw
loopne
push
nop
mov
retf
jmp
retf
jnp
fcomp
(bad)
hlt
es
cmps
test
(bad)
dec
scas
jecxz
pop
fstp
test
and
aas
mov
ds
ins
pusha
add
fcom
mov
sbb
pop
in
or
js
inc
cmps
int
(bad)
int3
shl
retf
cmp
out
mov
and
pop
add
pop
sbb
dec
int
inc
adc
fdiv
mov
test
inc
or
outs
ins
jp
cmp
call
stos
(bad)
push
xadd
stos
cmp
out
dec
(bad)
ja
out
cmp
sub
mov
xchg
ret
stc
pop
loope
retf
push
mov
add
adc
outs
(bad)
aas
adc
push
mov
inc
int3
test
push
xchg
pop
push
xor
lds
and
fwait
out
xchg
inc
in
les
add
(bad)
lahf
shl
js
je
in
push
and
scas
stos
mov
shl
push
aam
cmp
ret
repnz
imul
pop
leave
scas
lahf
add
loop
adc
pop
push
mov
lahf
in
cwde
(bad)
js
inc
aas
cdq
sahf
mov
dec
pusha
(bad)
hlt
mov
out
dec
push
mov
xor
dec
ret
and
xor
mov
std
cli
jns
adc
in
sahf
cdq
inc
fmul
push
lods
xchg
adc
test
aam
mov
mov
push
cmps
mul
mov
push
fstp
pop
and
shl
loop
dec
les
bound
push
sbb
xchg
adc
pop
pop
aas
inc
inc
sub
pop
lahf
jp
lods
je
sahf
pop
pop
xchg
mov
xchg
fdiv
test
pop
mov
or
mov
aaa
ins
sub
imul
lahf
adc
sub
xchg
ret
and
jge
stos
or
popa
cld
mov
sar
(bad)
fmul
in
pop
shl
pop
pop
pop
cmps
xor
mov
(bad)
ret
push
sub
mov
ret
call
ins
movs
daa
jo
inc
inc
aad
into
add
xchg
setne
jecxz
rol
jl
nop
lods
mov
add
and
lods
pop
add
pop
out
mov
fsub
lock
pop
pop
movs
pop
loopne
repnz
ja
arpl
dec
das
sbb
sahf
test
cdq
mov
mov
mov
dec
inc
push
fs
cmp
es
adc
adc
sub
push
cwde
repnz
call
fadd
out
dec
clc
xchg
mov
jo
or
mov
and
add
mov
cmp
movs
cmps
retf
ret
out
mov
test
inc
cmp
push
sub
gs
sub
nop
ins
scas
jp
jp
(bad)
fimul
mov
sbb
add
pop
push
jmp
sbb
inc
ja
movs
and
loop
dec
ins
pop
leave
sub
leave
adc
inc
xchg
sbb
mov
push
xor
dec
test
xchg
das
cmp
jno
sbb
jecxz
mov
popf
out
and
call
clc
xor
xchg
xor
daa
sub
test
lods
cld
mov
sub
call
in
cmp
cld
rcl
outs
adc
sbb
addr16
cld
retf
sub
pop
mov
mov
xchg
popa
xor
in
mov
mov
dec
test
vpminsw
cld
xchg
xlat
out
(bad)
xchg
in
jns
jge
mov
cmp
jne
lea
enter
pop
je
jo
push
es
cdq
add
in
mov
mov
stos
cmp
add
and
dec
push
popf
stos
fcom
jo
scas
jmp
ds
and
daa
mov
jnp
adc
in
push
lea
inc
repz
ret
mov
adc
dec
mov
adc
xchg
stc
jbe
addr16
call
shl
ficom
pusha
lock
cmc
ror
jae
aad
jge
and
mov
push
inc
clc
adc
dec
xor
(bad)
and
push
xor
lock
xor
jmp
sub
jns
mov
out
call
mov
mov
cmp
mov
sub
popf
aad
aaa
nop
sub
sub
dec
call
xor
mov
mov
pushf
retf
jmp
adc
xor
xchg
jmp
out
mov
fdivr
fisub
jp
shl
xor
ins
sbb
in
mov
xor
mov
inc
lahf
add
in
(bad)
pusha
cwde
sub
mov
je
sbb
daa
inc
in
and
lds
jle
push
jb
sub
test
jno
pop
pop
je
fnsave
sbb
shr
dec
idiv
sbb
stc
jno
loopne
mov
loopne
push
xchg
pop
fs
dec
mov
and
sbb
jne
fwait
aam
jns
or
mov
daa
shl
push
inc
mov
and
iret
dec
sub
aam
push
cld
and
push
into
test
fnsave
jne
adc
gs
dec
pop
mov
sbb
inc
pusha
jmp
cmc
dec
adc
adc
fcomp
mov
ret
jns
push
add
repnz
jg
bound
out
jge
jo
pop
jo
xchg
aam
retf
mov
sub
add
jmp
sbb
jae
in
ja
rcr
push
or
call
je
mov
ret
mov
cmps
inc
mov
cmps
mov
sub
push
scas
xchg
ds
mov
dec
sub
fwait
stc
lahf
sbb
arpl
cmc
mov
popa
mov
ror
xchg
pop
push
imul
dec
or
jno
movs
arpl
push
ficomp
inc
push
xchg
rcl
std
jge
sub
leave
sbb
rol
hlt
push
add
nop
ins
add
in
pop
push
sub
popa
cmps
cmps
bsr
xrelease
aaa
out
and
ror
mov
icebp
aam
inc
mov
dec
jge
js
jmp
test
xchg
mov
rcl
callw
mov
and
jnp
hlt
dec
add
sbb
xchg
mov
fld
xor
inc
xchg
adc
cwde
cld
inc
or
mov
ret
cmps
es
jb
fld
xchg
push
xchg
cli
sbb
push
and
int3
inc
xchg
hlt
mov
test
cmp
push
pop
fprem
cs
or
xchg
mov
mov
das
and
xchg
or
adc
pop
adc
fcmovnu
movs
and
loopne
xchg
das
lods
div
mov
sbb
xor
mov
inc
add
cwde
or
mov
jl
inc
lahf
dec
std
out
xor
and
jmp
movs
aad
xchg
or
ror
mov
pushf
mov
inc
jo
cmps
cmps
push
nop
and
repnz
jl
dec
cdq
push
icebp
sbb
test
push
adc
fisubr
mov
ins
imul
xchg
sbb
cdq
xchg
or
push
fcomp
ret
adc
enter
xor
add
cmps
aad
and
fs
in
add
fcom
(bad)
xor
fucom
scas
aaa
jne
xchg
pop
and
pop
dec
inc
cmp
test
xchg
stos
pusha
push
mov
mov
cmps
sbb
push
cmps
and
das
jmp
add
out
mov
xor
test
stos
adc
push
push
push
inc
xchg
ss
ret
adc
hlt
inc
sub
pusha
dec
fbld
inc
or
fwait
mov
xchg
jle
stos
pop
pop
cmp
cld
ss
cmp
rcr
push
mov
test
cwde
push
outs
dec
mov
es
data16
adc
xor
add
cmc
xchg
xchg
(bad)
pop
int
adc
in
dec
push
(bad)
jno
jb
lea
xlat
xchg
and
add
add
jnp
fstp
daa
xchg
jle
push
stos
sub
cld
scas
mov
aam
stos
call
jl
add
adc
mov
jbe
mov
or
push
xchg
lea
jb
fld
retf
xor
cld
cmps
and
push
cmc
sub
pop
push
retf
hlt
push
pop
js
outs
mov
push
mov
jg
inc
daa
dec
xchg
sub
js
push
push
cmp
pop
int3
fist
xchg
push
stc
xor
jae
inc
fs
test
mov
cld
adc
stc
mov
xchg
mov
sub
retf
loope
jmp
sub
(bad)
fidiv
inc
xchg
call
call
movs
(bad)
fcomp
aam
das
ins
xchg
jle
lods
xor
addr16
out
test
(bad)
pusha
fld
dec
in
pushf
push
test
test
pop
fild
sub
mov
xor
pop
or
retf
pop
retf
pop
scas
sub
scas
clc
adc
jo
test
stos
or
loope
cmps
cmp
and
cld
mov
fmul
bound
push
and
sub
pusha
call
jb
sbb
sbb
test
mul
mov
mov
fs
stos
mov
xor
ss
ficomp
outs
push
loopne
enter
cmp
push
movs
rcl
push
int
mov
sbb
and
or
sbb
adc
inc
or
mov
cmp
fmul
fwait
xor
pop
loop
lds
(bad)
fdivr
or
fs
dec
mov
lods
mov
mov
sub
sub
cmp
add
xchg
ret
sar
call
sahf
retf
and
cmp
dec
mov
mov
cli
lea
jl
and
cmp
jb
fidiv
repz
(bad)
popa
add
xchg
stos
adc
add
push
mul
rcr
jmp
out
xchg
stos
and
mov
mov
sahf
into
jmp
pop
rcl
inc
sub
sub
aam
xor
jecxz
stc
ins
adc
push
popf
mov
xor
iret
push
mov
mov
fs
fs
push
ret
es
pop
jno
scas
push
mov
and
or
loopne
pop
sbb
push
mov
sbb
ret
cdq
add
pop
les
out
jo
fadd
sbb
inc
cmps
dec
pop
shl
lds
adc
push
in
xor
mov
aam
inc
or
pop
std
bound
outs
test
ds
add
push
fdivr
out
or
sub
outs
adc
sub
pop
loope
jp
enter
cwde
jnp
push
or
lahf
dec
xlat
sahf
jecxz
mov
cmp
xor
stos
add
(bad)
and
cmp
xor
add
mov
fwait
pop
xor
adc
lds
nop
push
lock
outs
pop
cmp
inc
(bad)
ror
sbb
mov
std
pop
adc
push
cdq
add
cmp
pop
in
add
pop
es
push
(bad)
sub
repz
mov
mov
jle
loop
cmp
loopne
inc
hlt
xor
fwait
sti
aaa
cmp
pop
sar
out
clc
in
scas
dec
xlat
adc
adc
sub
in
fwait
sub
not
fs
std
mov
push
sbb
fs
pushf
xchg
jmp
push
push
maskmovq
repnz
cmp
push
ret
movs
or
push
adc
mov
add
or
cmc
jg
pop
in
and
inc
shr
dec
mov
and
sub
add
mov
aaa
jb
adc
jp
arpl
push
fbstp
xchg
mov
stos
mov
out
mov
jae
cmp
jb
cwde
pop
add
mov
sahf
xor
xor
mov
fwait
add
rcl
loopne
or
in
cmp
aad
inc
pop
and
sub
popf
sub
fdiv
imul
out
outs
dec
in
fsubr
sbb
add
and
into
push
aaa
mov
imul
mov
std
xlat
shl
xor
aas
ret
pop
pop
adc
bound
inc
data16
fld
mov
es
mov
ja
add
fnstcw
xor
js
pop
(bad)
rol
aaa
enter
push
popa
jne
sahf
xor
dec
out
dec
jns
jl
adc
and
xchg
sbb
sbb
and
scas
bound
in
pop
jmp
mov
retf
or
es
cmp
add
xchg
imul
sar
mov
cmps
rol
iret
mov
mov
iret
pop
mov
push
lea
aad
paddq
push
sbb
cs
pop
dec
aas
popf
xlat
gs
sahf
int
ror
mov
sub
shr
lds
icebp
sub
push
int3
xchg
cmp
adc
dec
sub
mov
jp
mul
push
scas
ret
xchg
inc
mov
jg
inc
jo
mov
add
(bad)
out
jbe
(bad)
mov
retf
adc
fadd
mov
jnp
xor
mov
jl
inc
dec
cwde
lahf
cmps
or
sti
shr
mov
jnp
mov
ret
xchg
adc
adc
mov
mov
(bad)
push
mov
pop
mul
loope
push
arpl
add
mov
out
mov
sbb
ins
mov
aas
lods
aad
or
adc
adc
cli
push
arpl
sub
push
dec
popf
pop
fnstcw
stos
das
dec
ficomp
out
leave
sub
push
clc
je
jb
adc
loopne
add
addr16
push
shr
out
movs
rcr
rcr
daa
and
call
idiv
in
add
outs
pop
ja
and
out
jge
lods
lea
movs
push
mov
retf
out
pop
push
mov
pop
and
add
dec
cmp
call
push
cs
or
fist
scas
mov
ret
sbb
dec
mov
and
(bad)
scas
in
data16
cli
sub
gs
inc
or
jne
(bad)
aad
inc
es
xchg
repz
xchg
ret
(bad)
push
push
adc
cmps
or
mov
(bad)
cmp
add
test
jle
jo
fstp
cmps
mov
icebp
jae
dec
or
dec
xchg
mov
push
psrld
xchg
out
sub
xor
inc
mov
out
mov
aaa
aad
mov
dec
pop
loope
scas
adc
push
add
or
fucomp
nop
jo
pop
mov
and
movs
lods
cmp
mov
mov
push
cmps
xchg
or
xor
cdq
repnz
pusha
ss
inc
bound
jmp
inc
push
test
adc
push
stc
push
xor
xor
test
shr
je
(bad)
hlt
cmp
cmps
(bad)
push
pop
ja
stos
lods
sbb
enter
jecxz
inc
cmp
test
add
sub
jo
inc
(bad)
outs
adc
imul
inc
out
and
mov
shl
dec
jne
cwde
push
push
js
ds
mov
inc
xchg
retf
adc
neg
ins
sub
fistp
or
xor
cmp
sub
movs
jp
int
fwait
cmc
pop
dec
adc
mov
test
cmp
daa
sar
mov
dec
dec
jbe
push
popa
fisttp
icebp
movs
bound
dec
js
sub
(bad)
out
stos
jno
fimul
mov
mov
mov
pop
cmp
pop
hlt
inc
movs
add
inc
jle
dec
es
jbe
shr
cmp
jbe
iret
retf
scas
cmp
scas
push
in
mov
ja
or
cdq
jmp
jg
pop
push
lahf
mov
pop
fcomp
fnstenv
cmps
(bad)
in
pop
pop
xor
mov
inc
ret
movs
iret
fmul
aam
out
jae
xchg
xchg
sub
stc
fdiv
pop
shr
sub
dec
push
jmp
addr16
in
cli
and
sahf
in
pop
es
sub
dec
retf
xchg
mov
jb
mov
pop
call
jp
sbb
loop
xor
inc
int
retf
and
sti
add
sbb
enter
les
clc
mov
ret
data16
adc
(bad)
mov
jmp
fist
ins
test
std
lahf
xlat
(bad)
shl
or
pop
ror
aad
adc
push
dec
sar
mov
xor
and
imul
daa
mov
dec
mov
cld
push
cmc
jno
ins
mov
mov
jmp
out
mov
mov
(bad)
fidivr
sbb
cmp
repnz
pop
xor
int
lods
or
lock
lds
aaa
push
and
test
xor
in
lea
dec
pop
div
(bad)
movs
outs
into
ret
ins
add
sbb
aam
mov
or
pop
mov
cwde
cmc
push
loope
out
pop
pop
and
sub
shl
sar
push
inc
addr16
sar
stc
push
adc
sub
addr16
xor
mov
sbb
mov
inc
movs
cmp
adc
or
sub
adc
jno
and
sub
and
addr16
imul
(bad)
cmp
sbb
and
rcl
pop
dec
sub
or
jo
xchg
pop
push
mov
and
(bad)
(bad)
pop
sub
sub
inc
lock
ins
out
pop
icebp
xor
pop
test
outs
aad
mov
pushf
adc
and
inc
stc
out
aaa
mov
fwait
adc
jnp
xchg
or
aaa
push
add
cmp
imul
retf
sub
or
push
pop
in
test
fisttp
nop
mov
sbb
inc
xchg
out
add
mov
ins
stos
mov
jmp
jmp
mov
mov
push
mov
mov
jmp
(bad)
lahf
pop
repnz
out
int3
jge
and
or
dec
aam
imul
or
retf
popa
add
in
jno
icebp
jb
(bad)
aas
add
jp
cwde
pop
and
std
push
(bad)
push
shr
les
jl
call
mov
leave
mov
pop
mov
pushf
lahf
loope
movs
fidiv
sar
ret
adc
sub
cmp
mov
ret
int3
jb
lds
dec
ds
jnp
ror
retf
or
xor
cdq
sahf
pop
scas
push
mov
scas
repnz
and
das
in
test
cmp
push
pop
push
test
fild
cmps
sbb
mov
lock
loopne
and
repz
retf
inc
lds
mov
fmul
ins
mov
les
adc
adc
ins
sti
cmp
fs
mov
data16
hlt
out
test
xor
scas
aaa
and
sbb
ficom
sbb
int
idiv
cmp
adc
cmp
ss
loope
shl
pop
cdq
mov
xchg
inc
sub
cmp
ret
loope
out
xor
addr16
aas
fdivr
dec
add
xchg
jnp
test
call
retf
nop
test
lea
push
hlt
retf
(bad)
adc
dec
xchg
xchg
ret
stos
test
pop
ficomp
retf
mov
or
mov
sar
jg
retf
add
in
(bad)
int3
dec
push
dec
pop
sub
and
clc
jbe
inc
aad
jmp
loop
xor
cmc
adc
xor
xchg
movs
jmp
fld
sbb
push
inc
cmp
es
xor
push
rcl
je
rol
jmp
pop
cdq
jb
pusha
popa
push
jge
add
mov
outs
fs
adc
rcr
dec
add
mul
js
sti
test
pusha
xchg
sbb
inc
fnstcw
call
aas
xor
data16
cmp
and
inc
pop
mov
jecxz
stos
xor
add
test
inc
push
(bad)
mov
mov
xor
cmp
aam
das
stos
lds
dec
aaa
pop
test
mov
call
push
jno
imul
mov
push
mov
mov
mov
inc
aad
les
adc
dec
mov
and
bound
cdq
cmp
dec
nop
ror
fcmovb
in
(bad)
test
mov
lods
xor
pop
(bad)
(bad)
les
int
call
int
or
cmp
adc
out
add
lods
movs
pop
xchg
jns
je
or
out
and
fcmovb
sti
dec
sbb
jne
dec
or
sahf
lock
js
mov
shl
fstp
pushf
repz
mov
(bad)
mov
mov
stos
xor
adc
inc
pop
pop
xor
mov
fmul
imul
mov
stos
ds
test
mov
rol
xchg
arpl
ret
leave
mov
fist
xor
push
test
sub
in
fisub
ds
mov
push
jle
mov
sbb
fwait
cs
scas
or
imul
mov
and
mov
mov
push
jbe
stos
(bad)
enter
add
(bad)
pop
dec
mov
das
or
stc
sbb
outs
jae
add
ds
or
lahf
loopne
lods
sub
add
fld
xchg
adc
retf
sub
mov
push
push
jb
and
fmul
in
or
fistp
dec
push
xchg
cmc
dec
rdmsr
inc
mov
imul
int3
mov
jmp
ja
imul
iret
dec
jl
mov
jne
pop
xchg
pusha
leave
ins
sbb
jmp
clc
push
aas
cmp
sbb
daa
add
jmp
or
outs
xchg
aad
out
cmp
push
cmp
mov
dec
push
mov
int
mov
into
pop
jo
mov
jnp
cdq
jg
mov
add
data16
popf
data16
push
test
loop
test
cli
mov
cmp
rcr
sbb
jne
jnp
es
push
push
mov
jbe
mov
jmp
inc
and
mov
sahf
dec
rcr
in
xor
out
cwde
aas
adc
dec
and
out
xchg
mov
xchg
aam
xchg
mov
sbb
jg
ret
movs
add
shr
fwait
mov
jns
fucom
pop
repz
test
pop
rol
movs
xchg
pop
mov
inc
mov
ins
mov
icebp
xor
iret
(bad)
jne
cmps
push
ss
dec
mov
push
test
pop
iret
cmp
loope
gs
repz
xchg
call
mov
pop
out
xlat
mov
mov
data16
(bad)
pusha
mov
mov
imul
mov
push
arpl
jnp
jbe
xor
push
bound
icebp
mov
std
ficom
add
mov
sahf
mov
add
rcr
cwde
or
and
push
or
mov
pop
sub
enter
shl
mov
jne
sbb
mov
sbb
sti
fst
or
push
mov
pushf
adc
repnz
inc
pop
jge
adc
sbb
into
pusha
push
dec
xchg
inc
mov
mov
int3
push
adc
pop
mov
inc
or
xor
mov
fcomip
jae
sub
call
cmps
in
inc
sbb
psllw
ds
push
or
out
imul
sbb
cmp
lods
inc
data16
add
xchg
xlat
lods
lods
jno
out
inc
adc
push
inc
xor
jbe
retf
div
pop
mov
add
jp
xchg
stc
mov
test
add
int
das
vmaxsd
test
mov
mov
out
sar
fisttp
fs
mov
inc
push
arpl
mov
cmp
aad
sti
jno
cwde
cmp
push
pop
inc
inc
(bad)
mov
loopne
sub
adc
mov
in
pop
pop
in
jl
pop
add
xchg
jne
call
mov
adc
mov
out
daa
cmps
xchg
lods
push
push
test
push
test
fld
popf
je
sbb
adc
xor
inc
ficom
add
cmps
xor
mov
repnz
jecxz
or
sahf
add
aam
or
sub
ss
mov
or
cmp
mov
sbb
pushf
jl
jnp
pop
push
aad
vphadduwq
clc
add
push
mov
cmp
nop
sbb
add
test
sub
mov
mov
int3
jmp
and
imul
mov
and
sbb
aad
sbb
(bad)
es
adc
mov
loopne
cmps
pop
jp
xchg
dec
dec
push
mov
cli
nop
das
cld
jmp
lea
outs
lods
int
mov
push
int
and
adc
dec
(bad)
adc
loope
rol
xchg
mov
xchg
loopne
jnp
imul
mov
ret
shl
je
paddd
and
fld
jne
lds
in
lods
mov
mov
jp
lods
lds
dec
sub
fstp
inc
icebp
and
loop
and
stos
or
movs
dec
test
push
cs
stc
pushf
push
es
xchg
fisubr
mov
(bad)
fwait
mov
jo
cmp
or
lds
jge
xchg
adc
loope
iret
das
int
lods
fisttp
popf
sub
(bad)
(bad)
stos
mov
xor
in
xor
mov
adc
xor
sbb
pop
mov
pop
dec
cmp
movs
xchg
loopne
sbb
enter
jns
imul
test
dec
cdq
repnz
add
ss
(bad)
lock
test
and
fdivr
daa
cli
sbb
stos
lods
cdq
pushw
shl
jge
mov
nop
stc
cmp
call
dec
adc
mov
outs
push
cwde
int
add
cli
pop
lods
mov
jmp
mov
pop
call
imul
push
cmp
dec
je
mov
fs
dec
daa
jae
fistp
mov
pop
cmp
jns
xor
mov
sub
push
test
jns
add
test
cmp
mov
icebp
cld
inc
stos
sbb
imul
int3
in
xchg
cdq
fiadd
mov
and
(bad)
xchg
fmul
scas
mov
(bad)
pop
push
or
outs
(bad)
test
test
in
jmp
or
inc
mov
xor
cmps
dec
push
mov
push
es
jecxz
or
arpl
addr16
cmc
push
adc
jg
stc
es
mov
mov
mov
mov
pushf
aam
jge
in
jo
cvtpi2ps
xor
add
mov
data16
push
adc
mov
dec
pop
adc
jns
mov
hlt
mov
mov
syscall
nop
xor
adc
ret
mov
pusha
mov
(bad)
mov
mov
stos
cmovg
add
mov
push
mov
aaa
imul
out
mov
scas
mov
rcr
cmp
test
sbb
cdq
jp
cdq
xcrypt-cfb
cmps
addr16
sar
gs
hlt
jmp
bound
fs
lahf
sub
imul
mov
stc
lods
mov
cmp
push
dec
fst
xor
inc
nop
or
sbb
outs
sub
stos
pop
out
(bad)
sbb
call
pusha
push
loope
es
xchg
jns
ins
pusha
add
sbb
loope
jae
sub
jne
mov
xor
ins
mov
mov
shl
cmps
stc
sbb
dec
adc
dec
mov
adc
test
and
popf
sub
pop
mov
pop
ds
fisttp
into
sbb
out
dec
ss
je
pop
daa
dec
sub
push
ret
mov
cmp
loopne
fwait
call
push
sar
pop
sub
adc
fild
mov
push
mov
pop
mov
jnp
dec
outs
cmp
nop
scas
push
push
jge
xor
cmps
jo
or
ins
ret
mov
(bad)
sbb
lds
pop
push
jne
cmp
mov
add
fdivr
cmp
(bad)
sti
paddusw
sub
or
das
rcr
add
stos
stos
add
xchg
inc
push
nop
ja
mov
pop
dec
adc
sub
jg
imul
jbe
arpl
jb
push
mov
push
mov
imul
add
aad
pop
mov
or
clc
aas
xchg
loopne
inc
or
mov
mov
int3
pop
mov
inc
dec
test
xchg
fwait
rol
push
xchg
ffree
nop
das
ja
mov
test
pop
int3
enter
xchg
fcomp
push
icebp
fisubr
out
dec
or
cmc
fwait
arpl
pushf
sub
fsubr
push
fild
sbb
aaa
push
in
movs
inc
push
mov
xlat
mov
pop
(bad)
popf
pop
mov
das
push
jg
mov
pop
pop
mov
addr16
stos
mov
sbb
fcom
fcmovu
push
out
push
fcomp
or
adc
das
jge
cdq
dec
xsaves
out
mov
stos
repnz
fidivr
stos
test
je
(bad)
and
test
ds
jne
sub
adc
stos
pop
dec
push
xor
dec
mov
jbe
or
or
out
pop
sub
and
mov
cli
loopne
dec
shl
pushf
jge
cdq
jns
mov
jbe
adc
or
mov
fld
shr
or
inc
and
not
sub
test
add
shr
xchg
cmp
dec
in
pop
adc
sti
imul
lods
dec
push
rep
jle
xchg
in
jno
bound
add
add
pop
stos
mov
and
and
mov
adc
rcr
sbb
test
mov
xchg
pop
lds
test
cmc
mov
inc
add
aaa
in
pop
mov
popf
fidiv
cs
hlt
xchg
leave
and
out
movs
dec
xchg
(bad)
or
bound
sbb
pop
push
test
gs
fadd
pop
inc
inc
bound
jbe
sbb
out
lahf
bnd
aad
je
ss
or
push
mov
xchg
cmps
nop
sar
xor
sub
cmp
ja
test
mov
pop
mov
hlt
xchg
pop
push
ret
dec
pop
aas
scas
mov
int
and
and
retf
js
jmp
sbb
(bad)
popf
jge
test
mov
mov
mov
mov
shl
cs
cmps
aad
adc
shl
adc
sub
sbb
cld
sti
bound
mov
mov
pop
xchg
push
inc
aaa
mov
repz
mov
cmp
leave
sbb
movs
mov
pop
sbb
push
std
mov
lock
push
fld
cmc
inc
inc
fbld
sub
and
sar
mov
cmp
arpl
mov
and
fld
xlat
cli
inc
out
or
jg
adc
in
fild
fwait
test
add
xor
and
aaa
out
shl
pushf
std
imul
xor
shr
sub
cwde
xor
fcom
and
movs
iret
dec
jecxz
sbb
and
popa
leave
add
inc
mov
cli
push
or
jl
jmp
xchg
stos
adc
pop
bound
int
cmp
lahf
ins
sbb
ret
and
fsub
sub
jmp
mov
nop
or
inc
add
inc
mov
popf
in
mov
jecxz
jge
(bad)
cmp
push
mov
test
iret
outs
jae
call
mov
pop
adc
shr
inc
dec
loop
mov
call
cmp
repnz
aaa
in
fadd
outs
push
out
inc
sbb
test
cmc
mov
add
or
cli
ss
cwde
in
mov
cmp
les
or
push
push
in
stc
clc
mov
mov
enter
dec
mov
pop
(bad)
es
arpl
leave
inc
sbb
lds
cmc
xchg
sbb
(bad)
jl
push
mov
in
aas
enter
(bad)
cli
fnstsw
mov
repz
int3
fidivr
(bad)
push
repz
test
add
add
in
add
dec
out
daa
and
sar
(bad)
mov
icebp
inc
lahf
xlat
pop
(bad)
call
mov
scas
xor
jo
mov
add
mov
cmp
jle
sub
xchg
daa
arpl
xchg
retf
ss
pop
sbb
push
and
lods
pop
pop
jg
in
ins
scas
mov
popf
lds
mov
mov
neg
ret
and
push
cmp
xor
inc
ret
pop
sub
pop
and
xchg
mov
mov
out
dec
cmp
jae
push
xor
int
dec
mov
cmp
jnp
and
test
(bad)
repz
addr16
movs
mov
(bad)
neg
inc
jp
push
and
and
cs
dec
mov
push
mov
mov
addr16
dec
xor
and
retf
push
mov
dec
sbb
sub
je
shl
inc
add
mov
mov
adc
sub
cwde
xchg
out
call
fdiv
inc
rcl
push
jo
jo
pop
fcmovnbe
(bad)
inc
mov
mov
shl
xchg
aas
lahf
cmp
or
sti
sbb
mov
pop
int3
sbb
sbb
jne
test
mov
or
or
pop
int
ds
test
inc
and
sbb
(bad)
mov
cmp
xchg
dec
shl
shl
pop
(bad)
fs
mov
pop
icebp
dec
and
int3
imul
out
repnz
repz
mov
cs
inc
out
pop
cmp
adc
mov
cmps
jo
add
add
rcr
aad
or
ss
adc
loop
mov
push
jl
loope
mov
clc
repz
shl
int3
getsec
xchg
aaa
inc
mov
sbb
sbb
mov
dec
aad
cld
mov
push
adc
dec
gs
mov
enter
repz
call
int3
push
cmp
pop
inc
cmp
xchg
outs
rep
add
ins
fsubr
xchg
enter
ret
les
call
add
es
xor
shr
dec
inc
aam
push
(bad)
rol
call
mov
aas
scas
mov
jge
fadd
jmp
ret
jo
daa
xchg
sbb
pop
arpl
or
call
pop
(bad)
cmc
call
cwde
cli
xchg
cmps
dec
xchg
sahf
push
and
ret
in
nop
jle
inc
mov
cli
add
fs
cli
std
sub
jmp
xor
fnstenv
int
retf
dec
sbb
imul
gs
dec
inc
pop
mov
call
xchg
pop
mov
jmp
xor
out
push
ins
or
mov
retf
add
outs
nop
movs
xchg
outs
dec
add
aaa
sub
sbb
icebp
mov
loope
mov
inc
xchg
test
add
cwde
cdq
push
xor
push
mov
add
aaa
out
loope
lods
inc
push
adc
cs
ins
or
test
stos
push
retf
add
add
sbb
xor
or
repnz
test
mov
out
jecxz
inc
out
call
mov
adc
add
ror
dec
pop
mov
(bad)
adc
add
rcl
sub
fsubr
mov
xchg
mov
sar
push
mov
jo
daa
pop
outs
jge
test
scas
fisttp
mov
add
dec
dec
push
fild
out
inc
mov
adc
mov
aas
or
ins
add
mov
rol
(bad)
pop
inc
nop
cwde
out
fsub
jle
add
ins
lds
lods
pushf
cmps
ins
nop
rol
imul
dec
in
or
ror
icebp
add
js
(bad)
and
mov
es
adc
cdq
and
xor
jo
or
aaa
xchg
fwait
cs
sti
mov
out
ficom
sub
cmp
dec
mov
push
jecxz
cmp
arpl
mov
add
cmps
jbe
adc
jbe
or
jnp
pop
ja
pop
or
lods
sub
fimul
fisubr
sbb
bound
enter
jmp
lods
pop
ins
xchg
(bad)
out
jg
outs
dec
push
aaa
imul
daa
pop
sub
jecxz
cmp
fild
lock
pop
xchg
mov
jmp
dec
ret
xchg
out
std
in
or
xchg
scas
leave
sbb
inc
data16
push
inc
dec
push
std
mov
mov
push
retf
push
jno
cld
jae
int
mov
cmc
adc
test
mov
sub
dec
cmps
imul
lods
lods
loopne
es
dec
inc
add
jge
dec
and
aas
mov
jle
xchg
jge
out
sub
mov
mov
adc
ss
cmp
and
cdq
hlt
lods
jmp
jnp
cdq
aam
jb
mov
fldcw
jns
sub
pushf
daa
jge
sbb
mov
inc
(bad)
out
sub
(bad)
mov
jae
les
jmp
popa
sahf
fisttp
das
sub
and
jmp
xlat
pop
adc
int
lahf
xchg
sbb
add
(bad)
mov
aaa
lock
enter
lock
add
mov
xchg
cmp
jnp
movs
add
lds
cmps
mov
icebp
mov
cmps
(bad)
jmp
jb
int3
cmp
pop
(bad)
sbb
mov
icebp
fwait
lea
mov
aad
jne
add
lea
mov
or
(bad)
movs
jp
bound
cld
push
cmp
retf
jo
xor
lods
inc
and
xchg
cmps
fst
sbb
cs
xchg
(bad)
mov
inc
dec
pop
rol
mov
ins
jl
add
xor
lds
cld
cmp
xor
or
or
(bad)
js
imul
cdq
jns
pop
adc
repz
ins
jle
mov
adc
fadd
inc
xor
jo
call
pop
and
dec
xor
push
or
pop
leave
mov
cmc
or
test
sahf
inc
out
cmps
ins
sti
arpl
adc
loope
clc
stos
mov
dec
jne
cmp
inc
fild
xor
mov
out
mov
bound
sub
sbb
jmp
pop
push
mov
out
mov
jge
jge
adc
pop
dec
scas
(bad)
pop
pop
dec
out
jle
jne
ds
inc
jl
lods
rol
and
(bad)
stc
xchg
fnstcw
push
or
pop
cdq
call
adc
fidivr
lods
pushf
inc
add
pop
repz
dec
shr
mov
(bad)
repz
stc
xchg
ror
ror
cmp
ss
jg
pop
lods
lea
mov
aaa
adc
cdq
pop
dec
sub
inc
dec
inc
jae
mov
out
mov
cmp
popa
in
cmp
and
push
jl
push
push
mov
pop
cmp
mov
xchg
(bad)
jmp
sub
stc
cmp
cmp
mov
push
jg
test
fwait
call
lahf
dec
pop
cmp
mov
daa
ret
or
and
cmp
inc
cmp
out
mov
scas
aaa
fisttp
or
repz
call
mov
ficom
xchg
inc
mov
jp
fimul
jne
or
scas
mov
jnp
jne
push
stos
not
jb
xor
jg
xor
mov
push
add
(bad)
or
pop
ret
sub
pop
in
ret
ret
dec
jle
or
outs
(bad)
push
mov
dec
pop
mov
mov
mov
mov
mov
fisttp
ins
jae
ins
and
mov
jnp
rol
cmp
lea
dec
dec
daa
rcr
in
inc
and
xchg
popf
add
xchg
repnz
ret
addr16
test
lods
sti
int
dec
pop
push
xchg
repnz
mov
xor
sub
fwait
mov
(bad)
push
inc
sbb
ins
pop
shl
(bad)
fdivr
xlat
push
rcl
(bad)
(bad)
push
xor
(bad)
xchg
or
xchg
add
aad
aad
in
mov
test
pop
dec
push
repz
jnp
mov
mov
mov
sti
cmp
cmp
aam
mov
xchg
out
ror
data16
cmp
sub
fs
push
sbb
loope
cmps
daa
stos
std
dec
fldenv
cli
xor
mov
adc
loopne
sub
xor
add
ja
xchg
ins
int3
mov
lods
mov
jl
cwde
pop
popf
or
xchg
xor
pusha
xor
fld
add
int
sbb
js
arpl
dec
adc
and
xor
fs
je
xor
ficomp
(bad)
out
or
push
xchg
data16
rcr
adc
mov
lds
cld
aaa
aas
out
fwait
push
js
movs
cmp
gs
outs
repz
xor
jp
mov
mov
int3
dec
jo
xchg
ins
out
dec
sub
pop
pushf
and
ror
dec
xor
mov
loopne
dec
movs
data16
push
dec
sub
and
sbb
les
aaa
les
loop
daa
sub
or
out
outs
mov
aaa
xor
fild
popa
jmp
sbb
test
cmp
mov
xchg
jg
cwde
repz
shr
inc
and
mov
xchg
mov
adc
movs
mov
(bad)
and
aas
sbb
popa
mov
dec
inc
jns
test
(bad)
iret
push
xchg
dec
add
movs
or
icebp
jmp
mov
mov
call
ins
mov
hlt
in
imul
or
aam
jl
call
sahf
or
cmps
xcrypt-cbc
cmps
push
pop
out
pop
push
aam
sahf
dec
lea
jmp
dec
and
dec
das
mov
cmc
adc
mov
jno
cmp
mov
imul
in
push
outs
nop
push
xor
loope
and
add
dec
jno
sahf
mov
cs
add
jg
xchg
fsub
push
xlat
div
das
cmp
inc
cmp
mov
sub
jmp
addr16
inc
cmp
jns
sbb
pop
dec
je
mov
cmc
mov
repnz
dec
pop
sub
retf
stos
xchg
pushf
lds
das
call
je
sub
outs
xchg
xchg
iret
push
mov
(bad)
call
adc
adc
in
dec
xor
dec
std
js
dec
mov
mov
push
pop
jmp
cmps
dec
jne
or
jnp
jbe
and
sbb
jmp
jmp
std
xor
pop
out
xor
xchg
pop
je
adc
xor
inc
in
cli
jnp
mov
sar
mov
xchg
dec
ret
les
stos
xlat
push
cmc
jb
bound
ins
inc
sbb
cld
loop
mov
rcl
aas
(bad)
adc
add
push
sbb
mov
int
sbb
aam
lock
je
mov
retf
cmp
mov
sub
jl
sub
push
out
or
mov
mov
mov
xchg
mov
lds
xor
pushf
jns
mov
add
xor
dec
(bad)
xchg
or
jno
mov
jge
rcl
push
loop
or
mov
jmp
dec
lea
add
or
cmp
shl
cmp
dec
mov
fucomp
arpl
adc
ror
sub
mov
or
xor
das
push
stc
ror
or
dec
aad
inc
out
outs
fimul
ins
dec
int3
(bad)
jmp
cmp
(bad)
in
mov
xor
jmp
or
jbe
xchg
jmp
sub
mov
js
xor
pop
rcr
mov
rol
add
mov
lds
(bad)
fsub
sub
sub
xchg
ret
ficomp
add
ins
(bad)
in
sub
les
in
pop
imul
addr16
mov
pop
jmp
int
push
in
jecxz
push
je
pop
loop
dec
push
in
repnz
rol
mov
iret
cs
push
mov
mov
int
gs
loop
jp
pop
loop
popaw
push
lock
cli
and
add
stos
or
jns
cmc
sub
xlat
sub
ins
push
stos
mov
and
nop
in
and
or
jmp
xor
add
cmp
fiadd
jl
test
(bad)
aam
mov
sub
fs
mov
pop
mov
std
fimul
test
adc
add
or
xor
clc
(bad)
and
sub
jbe
push
push
mov
jns
pop
sti
lahf
jle
cmp
retf
pusha
and
cdq
add
mov
stos
cdq
push
mov
jno
jb
dec
cli
adc
cmps
fld
jns
inc
inc
cmp
in
repnz
fs
(bad)
pop
imul
lods
call
scas
push
in
jmp
mov
rcl
and
(bad)
add
pop
xchg
cmp
mov
sbb
and
mov
xchg
mov
adc
out
adc
adc
cmp
jae
fisubr
aad
mov
aas
lahf
sti
or
retf
sbb
loopne
fdivr
imul
popa
stc
add
xchg
push
and
add
jg
in
sub
add
adc
stos
jbe
inc
loop
repz
pop
int3
mov
int3
or
jge
mov
xlat
scas
ins
xchg
retf
sub
enter
cmps
outs
pop
cmc
dec
mov
shl
inc
jge
xchg
xchg
popf
ja
add
add
test
push
pop
call
sbb
sub
sbb
pop
jno
lds
std
cmp
lods
retf
cmps
jnp
imul
shl
cmp
push
dec
clc
sahf
fs
jl
popf
pop
aam
cmp
add
rol
cmps
sbb
iret
jecxz
cwde
mov
jne
test
lds
fld
rcr
push
ins
repz
lds
push
pop
sub
push
repnz
je
jno
cdq
pop
cmp
dec
cdq
clc
pop
and
inc
iret
fdiv
adc
mov
lock
cmps
aas
mov
xlat
inc
(bad)
add
inc
lods
(bad)
aam
in
sar
sar
ja
movs
dec
mov
inc
shrd
jge
cli
idiv
xor
dec
out
jecxz
push
mov
ror
xor
cmp
leave
ins
dec
and
stos
lock
or
inc
or
sbb
xor
jnp
pop
sub
push
mov
rol
inc
mov
xchg
shl
sub
lea
lock
shr
retf
sbb
std
jmp
pop
jb
cdq
pop
int
daa
inc
and
sub
mov
mov
retf
loopne
sbb
xor
fstp
mov
fwait
es
jnp
xor
jmp
out
push
imul
test
jb
xchg
sbb
dec
cmp
jbe
mov
xchg
fimul
mov
pop
mov
fcom
adc
mov
leave
loop
pop
sub
adc
ins
pop
adc
cdq
movs
outs
adc
pop
idiv
push
dec
cmp
inc
je
movs
daa
mov
sbb
mov
ret
(bad)
and
dec
imul
mov
loop
popf
out
pop
jge
mov
mov
(bad)
mov
lods
push
sbb
sbb
scas
inc
jge
dec
ss
jmp
out
repnz
lahf
test
jg
std
sub
mov
test
(bad)
mov
sub
gs
inc
out
dec
call
adc
bound
(bad)
push
cmp
aam
movs
pop
jge
adc
int3
pop
adc
add
inc
sbb
xchg
fmul
push
test
mov
pop
seta
add
sbb
add
xlat
clc
pop
pop
(bad)
or
and
and
jecxz
iret
or
cmp
mov
inc
xlat
jge
push
retf
pop
aaa
fsubr
int3
outs
push
sbb
jno
test
xchg
inc
loop
ret
maskmovq
idiv
xchg
popa
call
mov
adc
adc
cdq
test
pop
adc
lds
xor
mov
inc
imul
rol
jmp
adc
shl
cmp
cmp
test
fimul
push
sub
inc
mov
inc
mov
inc
mov
lock
lds
nop
jne
inc
pushf
into
inc
sub
jo
cmp
je
push
add
(bad)
scas
mov
inc
sar
xchg
or
sub
rol
loop
sbb
sub
cmp
and
sub
mov
sti
xlat
add
lds
addr16
mov
jmp
imul
xchg
imul
cs
out
cmp
and
add
mov
mov
mov
mov
push
push
xchg
pcmpeqd
hlt
pop
mov
stos
lods
cwde
fmul
daa
push
aaa
(bad)
mov
sbb
sbb
push
adc
aas
add
xor
sbb
push
jns
mov
mov
movs
aaa
clc
push
retf
aam
addr16
fsub
mov
data16
jmp
dec
fisttp
sbb
mov
jle
fcom
vmread
cmps
int
pop
inc
mov
or
and
lods
repz
mov
lods
xlat
outs
cmp
sbb
mov
mov
sub
xchg
sbb
ins
pop
in
dec
adc
fcmovbe
loope
jl
ror
addr16
mov
pop
cmp
clc
mov
dec
add
mov
or
lds
xchg
loopne
cwde
es
ror
cwde
sbb
pop
js
jo
mov
lds
push
outs
dec
(bad)
pop
xor
movs
call
outs
int
movs
mov
lods
pop
push
fs
scas
jg
stc
jecxz
(bad)
sar
sub
mov
dec
adc
xchg
sbb
scas
mov
pop
imul
xor
ret
push
lods
and
mov
mov
fdiv
sub
mov
add
fstp
xlat
fsubr
es
pop
inc
sub
add
mov
mov
jne
movs
sbb
push
fdivp
jg
(bad)
out
ror
pop
cmp
cs
pusha
dec
call
popa
mov
sti
mov
lds
repz
or
sbb
xor
sbb
scas
xchg
fdivr
mov
mov
lods
mov
jg
repnz
sbb
jo
mov
test
adc
jle
mov
xor
add
push
jecxz
mov
mov
adc
pusha
pop
(bad)
in
push
popf
xor
sub
xchg
mov
mov
jno
out
inc
sub
and
sbb
les
(bad)
jmp
or
and
add
cmp
fisttp
test
jno
aam
jo
xchg
loope
adc
retf
adc
adc
adc
add
in
mov
(bad)
hlt
jno
lahf
and
shrd
dec
sbb
mov
push
and
jae
nop
rcr
pop
aam
rcr
popa
mov
ja
mov
mov
jle
leave
popf
mov
push
inc
or
fldenv
pop
dec
mov
xor
ret
in
loop
in
out
cmp
cld
test
std
add
pushf
add
xchg
dec
jp
retf
in
xor
xor
fiadd
popf
jg
aam
jno
data16
dec
mov
add
or
iret
int3
or
rol
pop
push
jmp
pushf
movs
push
xchg
push
pop
rol
push
mov
test
or
dec
(bad)
dec
imul
mov
push
adc
inc
and
jb
je
push
sbb
enter
adc
outs
dec
test
push
test
das
jo
out
(bad)
ins
mov
jp
out
cmp
push
mov
dec
cli
push
jl
sbb
fadd
cmp
nop
sysexit
ret
push
gs
jle
push
jae
push
sbb
pusha
call
scas
out
mov
sbb
or
ja
loope
jmp
shl
jbe
pop
ret
xchg
fs
dec
cmp
inc
in
dec
add
sub
sar
int3
or
adc
hlt
popa
mov
cdq
add
or
scas
xor
inc
fldenv
(bad)
push
dec
mov
pop
and
xchg
pop
ins
adc
popa
in
push
sbb
cdq
lahf
(bad)
jmp
jmp
jge
add
adc
push
sub
out
lods
fxch
ja
jmp
push
xor
popa
or
in
mov
dec
xchg
jl
mov
mov
rcl
retf
pop
and
gs
jns
in
push
cmp
jg
sbb
daa
sub
int3
outs
sbb
sub
aas
inc
repz
jmp
or
cdq
pop
in
and
retf
test
arpl
sub
sub
sbb
inc
pop
adc
rol
push
sub
arpl
out
lods
iret
cli
push
sbb
lea
cmp
adc
imul
jecxz
dec
call
dec
je
mov
sbb
fidiv
clc
inc
mov
shl
mov
add
enter
adc
xor
dec
and
mov
scas
mov
pop
cdq
push
int3
cmovge
xchg
rcr
inc
dec
out
mov
mov
xor
inc
(bad)
aad
mov
inc
aam
cmp
not
dec
xlat
daa
es
and
xor
jge
mov
lods
pop
xor
gs
push
lods
sub
sti
pop
aaa
stc
cdq
jl
dec
adc
mov
je
inc
xor
sub
pop
lods
xchg
ret
mov
mov
dec
xchg
sbb
shl
xchg
add
mov
jmp
imul
call
or
call
mov
es
dec
mov
cdq
jo
inc
xor
add
popa
lods
fwait
mov
sbb
jbe
pop
imul
ins
pushf
mov
cmp
mov
ret
mov
cdq
and
xchg
push
mov
sub
scas
cmp
xchg
fwait
ins
out
mul
xchg
cmps
jmp
test
outs
pop
dec
pop
add
lock
mul
cmp
xchg
stc
dec
daa
test
int3
rol
and
cwde
mov
adc
movs
jecxz
std
push
cmp
inc
(bad)
fs
repz
cli
sti
sub
pop
call
mov
xchg
dec
cdq
adc
pop
je
lahf
jne
sahf
jge
jae
add
hlt
rcr
fdiv
sbb
mov
lods
xchg
imul
js
fdiv
inc
cmp
clc
je
stc
push
shr
jecxz
(bad)
mov
add
mov
cmp
fldpi
repz
pop
cmp
dec
imul
lea
and
dec
mov
xchg
aaa
test
and
push
or
ss
jmp
sbb
pusha
imul
xchg
xchg
sub
dec
adc
adc
fcmovu
jb
lods
sub
enter
push
cmp
das
nop
popa
or
int3
fwait
xor
sub
adc
(bad)
aad
in
jbe
test
(bad)
xor
lock
adc
sbb
jp
xchg
and
test
jbe
push
pop
aas
sbb
jmp
retf
pushf
ins
mov
popf
mov
dec
jo
inc
xor
xchg
dec
cmc
addr16
adc
mov
lock
cmp
mov
leave
add
in
test
pop
cmps
imul
or
ret
xchg
in
cmp
mov
aad
stos
xor
cwde
scas
fisttp
retf
mov
call
and
clc
and
jle
push
stc
xor
xchg
gs
data16
jge
inc
mov
sbb
movs
scas
mov
or
test
inc
in
dec
add
mov
xchg
std
daa
ret
mov
sbb
addr16
mov
call
adc
mov
jle
in
mov
stos
retf
ret
lahf
and
or
and
out
cmc
cmp
cmp
mov
lds
mov
movs
dec
mov
loopne
cmps
sub
stos
ret
dec
push
aad
loop
mov
jb
mov
in
daa
or
or
lods
xchg
fld
mov
adc
inc
sti
add
loopne
xor
inc
sub
xlat
mov
pop
cld
ret
xor
push
out
test
mov
mov
stos
imul
or
fidivr
dec
cmp
fs
sbb
adc
or
pop
enter
lods
mov
or
jge
aaa
mov
sbb
adc
mov
iret
test
addr16
add
pop
mov
mov
sub
ja
aad
xor
jecxz
stos
data16
inc
in
cmp
mov
sets
(bad)
adc
sbb
std
mov
pop
movs
push
fdiv
adc
sahf
and
das
mov
jp
fld
push
in
cli
push
push
mov
add
mov
mov
adc
out
lea
mov
jp
lss
xchg
inc
xchg
sub
dec
jns
pop
xor
enter
fsubp
sub
jnp
mov
inc
(bad)
mov
rol
out
jns
inc
clc
mov
mov
mov
sub
sar
fisttp
ss
aaa
adc
les
loopne
cmp
inc
shl
fild
movs
and
mov
hlt
fsubp
jo
cmps
stc
jno
sar
(bad)
push
dec
jbe
inc
jle
fnsave
add
imul
sbb
inc
mov
pop
push
pusha
test
inc
sub
dec
test
mov
xchg
fucomip
data16
jae
idiv
rcl
push
push
inc
and
jge
or
and
jae
xor
add
pop
sbb
xchg
push
retf
lods
lea
ficomp
rcr
and
mov
std
mov
push
iret
xchg
mov
and
int3
out
outs
xlat
stc
fwait
outs
push
lock
or
cmp
sub
xor
pop
(bad)
loopne
fldenv
in
ins
rcl
add
and
inc
jns
or
or
popf
std
xor
mov
push
sub
clc
cwde
or
add
psubw
movs
push
inc
adc
sti
sub
ror
out
mov
in
mov
push
and
pop
sub
fsub
jno
jge
pop
jb
dec
jae
sbb
test
shl
push
jp
fmul
ror
ss
add
push
xor
cmp
xchg
jns
pushf
ffree
adc
jbe
test
mov
adc
aam
pop
test
mov
movs
dec
push
xor
mov
out
mov
es
inc
push
push
push
xchg
sahf
js
(bad)
mov
lods
jge
pop
cmp
pop
sub
xor
shr
sub
add
rcr
loope
sbb
shl
xor
shl
or
(bad)
dec
adc
mov
jo
data16
(bad)
clc
jle
fsubr
mov
push
mov
ret
nop
xchg
movs
dec
mov
and
xor
push
sbb
(bad)
fidivr
mov
dec
mov
jp
pushf
xchg
ror
cmp
inc
xor
xor
jecxz
fmul
ficomp
add
mov
(bad)
mov
adc
out
or
repz
add
or
aad
push
push
lahf
adc
pop
jne
xor
xor
in
jecxz
sbb
dec
push
call
dec
daa
retf
call
mov
jnp
ret
popf
push
test
cmp
mov
cmp
sti
in
hlt
jbe
push
pop
out
inc
mov
cmp
jl
jnp
fs
in
and
xor
rol
xchg
mov
mov
out
dec
mov
(bad)
xor
push
in
popa
pop
jne
pop
dec
(bad)
jb
call
and
mov
movs
es
pop
push
add
sbb
pop
sbb
dec
xor
repz
hlt
cmp
xor
cld
mov
or
xchg
dec
xor
cmps
outs
dec
aas
shl
push
push
fs
jb
mov
pop
movsx
pop
inc
jp
out
gs
sub
js
adc
fld
push
push
mov
int
ss
fwait
in
jmp
inc
(bad)
loop
or
mov
scas
mov
sahf
push
icebp
xchg
loopne
psubw
pop
js
jl
sbb
mov
aad
repz
int3
adc
cdq
das
sar
sub
mov
jecxz
mov
adc
xor
stos
mov
mov
add
pop
xor
mov
xor
call
jg
ins
jmp
ss
stos
pusha
add
dec
enter
call
inc
mov
test
inc
repnz
dec
jmp
ss
mov
out
int
lahf
add
loope
sti
pop
pop
adc
jbe
in
stos
xor
outs
dec
outs
fwait
(bad)
mov
mov
dec
push
pop
out
(bad)
pop
mov
mov
popf
add
pusha
xor
jmp
adc
fsubr
outs
or
pop
or
fs
cmp
scas
pusha
(bad)
push
xchg
mov
popf
push
cmps
or
mov
sub
outs
out
jb
and
es
inc
mov
pop
mov
mov
jle
addr16
push
dec
(bad)
scas
mov
jl
clc
test
pop
out
dec
and
mov
mov
in
leave
push
aam
arpl
outs
fs
pop
xlat
mov
enter
cli
or
cli
retf
test
add
and
adc
mov
xor
sbb
or
cmp
jno
arpl
ror
(bad)
out
(bad)
repnz
and
das
cmp
gs
jp
cmps
dec
mov
cmp
pop
push
lea
test
scas
mov
mov
test
inc
ret
add
mov
into
cmp
pop
mov
addr16
inc
mov
cmps
push
dec
mov
fiadd
add
stos
ds
mov
test
sub
(bad)
adc
cmp
push
sub
test
dec
mov
add
push
ss
test
push
push
sbb
jg
movs
stc
cmps
mov
xchg
fisubr
lahf
mov
inc
repnz
xchg
jl
rcl
dec
lea
clc
sahf
xchg
repz
push
test
jmp
jge
in
call
push
ins
(bad)
std
or
push
rol
fsubr
movs
ror
mov
int
pop
lods
jno
mov
mov
stc
retf
xchg
ret
stc
mov
pusha
popf
sub
popf
cmp
jno
aad
imul
(bad)
push
add
in
sub
push
movs
ins
ficomp
xor
mov
es
mov
jl
sub
inc
xlat
fild
add
ss
pop
popa
sub
out
mov
xor
cmc
pop
(bad)
nop
jl
inc
and
jno
(bad)
inc
cli
xor
jo
sub
repnz
cmp
loope
(bad)
adc
mov
dec
pop
jae
(bad)
mov
xchg
sbb
lahf
scas
adc
ja
mul
pop
pop
in
sub
push
xchg
adc
push
cmp
jl
int3
aam
les
jne
das
pushf
push
dec
rcr
pop
enter
dec
(bad)
mov
bnd
stos
xchg
xchg
sbb
pop
(bad)
out
sahf
jbe
bound
retf
sbb
or
pop
rol
leave
dec
mov
pop
mov
arpl
and
dec
aad
ror
or
or
arpl
in
pop
out
(bad)
add
xchg
jp
aam
mov
ror
sbb
jns
and
ficom
dec
cmps
ret
jmp
test
pop
repnz
pop
cmp
mov
pop
xor
pop
xor
sbb
sub
adc
push
pusha
add
inc
bound
mov
ss
pusha
mov
stc
test
xlat
pushf
mov
xchg
repz
sub
adc
add
fwait
out
jbe
jmp
jne
fs
ins
fwait
xor
pop
das
movs
fst
xor
mov
out
aam
adc
out
scas
jle
cli
popf
and
call
out
pop
aaa
ret
push
add
sbb
ja
out
and
lahf
mov
sbb
das
retf
xor
mov
mov
(bad)
push
xchg
and
pop
dec
mov
cmp
xchg
lahf
adc
inc
xchg
jp
neg
cli
mov
xor
adc
mov
push
rol
push
inc
out
and
lods
mov
jmp
add
ins
ss
(bad)
sbb
lea
xor
cmp
inc
jo
es
popf
data16
ja
int3
mov
js
push
clc
pop
push
repz
cmc
inc
mov
inc
sar
xor
sub
test
iret
sub
in
je
fnstenv
dec
das
mov
jns
cmps
stc
adc
mov
pop
js
fs
and
or
xor
xchg
pop
cmc
aam
add
mov
inc
mov
jg
loope
xlat
or
jb
lock
sub
cld
xor
sahf
repnz
retf
retf
jns
or
std
outs
pop
xlat
cdq
pop
arpl
cmp
ffree
shl
xchg
shl
dec
mov
js
rol
ror
pusha
loopne
jmp
inc
dec
inc
cmp
cmp
xchg
mov
loop
fadd
add
test
(bad)
cli
out
xor
inc
mov
and
retf
inc
push
pop
jae
adc
xchg
test
dec
out
jno
adc
inc
shl
xchg
inc
inc
movd
inc
out
stos
loop
dec
jle
paddb
fbld
movs
sub
xor
lods
mov
test
ja
cdq
lea
arpl
adc
sbb
rol
xchg
clc
adc
loopne
imul
add
popa
xor
sbb
mov
sbb
jg
add
sub
lods
cmps
add
test
and
jmp
dec
popf
cmp
sbb
jmp
test
cli
test
add
loopne
repz
xchg
and
add
int3
sub
hlt
in
dec
jne
xor
and
hlt
inc
pop
rcr
sub
daa
push
stos
sub
imul
mov
cwde
mov
test
jmp
fist
ror
or
lock
add
loop
fmul
push
dec
xor
push
add
dec
fisubr
not
jmp
out
sti
cli
sub
jmp
jg
fnstcw
mov
lods
push
test
adc
cmp
pop
pop
fisub
clc
test
jo
das
in
xchg
adc
mov
(bad)
dec
clc
pop
adc
cmp
dec
sbb
(bad)
hlt
or
add
adc
adc
mov
call
fisub
xor
lock
push
sub
push
dec
xchg
and
cmps
sbb
fadd
int
imul
ins
lods
xchg
enter
(bad)
push
pop
xchg
sbb
(bad)
cli
jg
mov
mov
fadd
mov
push
xchg
je
and
cdq
mov
xchg
rcl
pop
add
pop
mov
call
cli
clc
out
jnp
cmc
test
fisub
cli
aas
outs
mov
xchg
cdq
mov
loop
sub
xor
out
pusha
pop
or
jge
fnsave
(bad)
mov
daa
fbstp
cdq
mov
sub
or
(bad)
ret
aas
dec
inc
in
pop
imul
clc
int
std
call
loop
mov
jge
mov
inc
stos
jp
jmp
jge
xor
(bad)
dec
pop
ins
and
out
sub
mov
stos
cdq
shr
rcl
loopne
fsub
out
push
outs
and
or
cmp
sahf
repz
adc
xor
ret
repnz
jmp
jb
add
xchg
inc
mov
xor
test
xchg
push
xchg
xchg
ss
call
rol
push
mov
sbb
mov
sbb
out
lods
sub
cli
call
mov
pushf
div
cli
repnz
sti
add
sbb
arpl
repnz
sbb
xchg
ins
inc
xlat
jmp
and
or
lock
ror
cmp
dec
sahf
push
sub
or
mov
or
adc
iret
ja
push
mov
sar
pop
mov
mov
xchg
push
push
test
mov
and
ret
mov
clc
cmps
in
retf
mov
in
pop
sar
add
mov
mov
scas
push
push
daa
cmc
loop
or
cdq
cdq
in
sbb
sahf
int
movs
leave
(bad)
ror
xchg
ret
mov
sub
cmc
fs
push
and
out
dec
mov
pop
xchg
pop
ror
in
cmps
ins
inc
or
sbb
neg
cmp
call
dec
dec
and
aam
adc
sbb
pop
out
scas
clc
(bad)
out
adc
int
jb
rol
std
hlt
mov
mov
repz
mov
cmps
in
lock
stos
mov
in
jae
out
aaa
mov
mov
imul
arpl
dec
test
add
fldenv
xor
add
out
push
(bad)
jg
outs
retf
out
and
jae
inc
fwait
jecxz
pusha
aam
push
mov
cmc
or
fs
fadd
or
in
stc
(bad)
dec
je
sub
mov
in
sub
das
fucomip
sbb
mov
jg
or
xchg
rcl
inc
fnstenv
push
mov
arpl
pushf
push
popa
clc
pop
fimul
lds
loopne
mov
aaa
add
outs
push
pop
stos
push
ret
push
push
add
cs
(bad)
sbb
addr16
jns
push
icebp
xchg
popa
in
mov
jecxz
or
xor
cmps
inc
div
adc
pop
mov
arpl
lds
icebp
inc
mov
dec
shr
dec
add
scas
adc
push
popf
xchg
hlt
mov
repnz
sbb
pop
dec
ds
mov
and
inc
dec
pusha
jge
push
fmul
lahf
arpl
movs
lock
sti
ins
xor
inc
(bad)
in
test
cmps
adc
daa
push
add
je
cs
fidiv
fidivr
pop
stos
add
xor
fwait
or
mov
jge
cmps
aaa
das
lods
es
sub
sbb
cmp
lods
xchg
test
sub
mov
push
cdq
ins
sub
not
sub
and
jp
lock
add
rcl
(bad)
into
xor
inc
ror
inc
mov
add
retf
jp
mov
rol
popf
mov
or
adc
stos
xlat
sti
adc
fadd
fcom
inc
(bad)
adc
mov
mov
jg
fistp
xchg
add
mov
push
sub
pop
mov
jmp
loop
push
push
int3
loope
jns
push
inc
imul
icebp
jg
call
sub
mov
stos
xor
mov
enter
imul
lods
(bad)
mov
mov
sbb
icebp
movs
adc
inc
adc
sub
jp
fsub
mov
hlt
in
retf
push
in
inc
pop
fs
stos
or
mov
push
jbe
cmp
call
ins
rol
mov
and
adc
pop
sbb
movs
cmp
push
cmp
add
jmp
jbe
jae
std
mov
arpl
push
rcr
cs
retf
xchg
cmp
sbb
sub
mul
adc
sub
movs
loop
ret
or
sub
jbe
inc
push
add
fsub
cmp
pop
pop
sbb
and
add
(bad)
cmc
rcl
dec
cmc
movs
push
and
js
retf
rcl
inc
lods
xor
xchg
push
pop
call
push
ja
ins
inc
into
iret
daa
stc
xchg
jp
mov
mov
adc
(bad)
sbb
pop
mov
cld
lds
cmp
pop
xor
pop
and
neg
(bad)
out
scas
lahf
dec
loopne
arpl
xchg
dec
daa
mov
jne
mov
inc
adc
int3
xchg
add
aam
push
mov
in
mov
and
xchg
js
sub
mov
sahf
out
loope
sti
pop
aas
lods
jmp
nop
add
hlt
enter
dec
mov
shl
and
sub
pop
(bad)
outs
pop
sub
in
std
pushf
and
cmp
test
js
mov
pop
jl
pusha
sti
(bad)
jmp
pop
gs
outs
lods
clc
popa
mov
mov
jp
mov
inc
pop
in
test
pushf
mov
cs
retf
pop
dec
and
or
das
pop
outs
sub
push
lea
in
pop
pop
out
sbb
out
mov
dec
xor
cmp
rcr
mov
push
call
xchg
sbb
dec
xchg
push
(bad)
call
rol
inc
xchg
ret
inc
jge
mov
call
movs
fsub
inc
inc
and
mov
dec
pop
xor
test
call
or
or
pop
and
pop
cmps
jno
jl
xchg
add
nop
arpl
retf
push
adc
fisttp
inc
mov
pop
loope
jnp
rol
jl
xchg
shl
fsub
cwde
shl
and
lods
call
xchg
in
inc
retf
aaa
push
lock
sahf
or
pop
and
sub
pop
mov
or
jnp
hlt
(bad)
outs
test
retf
in
imul
push
push
push
push
sub
outs
inc
in
mov
jns
jo
loope
mov
pop
adc
push
inc
dec
out
hlt
(bad)
gs
dec
cmps
xchg
add
mov
mov
lods
or
xor
mov
push
shr
inc
movs
push
push
sub
push
fnstsw
out
jb
mov
gs
or
repz
cmps
popf
imul
lods
in
dec
sub
fisubr
dec
jmp
je
cli
int
loop
xor
mov
mov
mov
out
shl
sub
sar
dec
xor
ins
add
dec
add
pop
mov
ficomp
mov
xor
out
sbb
cmp
arpl
loopne
dec
mov
push
shr
movs
and
mov
mov
shl
ins
push
or
data16
pop
inc
mov
repz
fucom
jl
add
cmp
fst
in
pop
dec
and
int3
in
mov
pop
push
xchg
mov
or
add
dec
cmps
leave
adc
pop
ret
xchg
pop
out
(bad)
dec
stos
inc
mov
cmp
idiv
inc
ficomp
sbb
fisub
sub
leave
ret
test
push
xor
and
xor
mov
adc
adc
out
mov
fdivr
dec
icebp
push
jecxz
or
jge
movs
pop
jge
push
adc
dec
(bad)
pusha
or
cmp
sub
loop
mov
into
(bad)
data16
outs
call
jmp
enter
adc
dec
jmp
sub
in
cmp
mul
sbb
or
jnp
cmp
sbb
mov
or
int3
or
not
movs
pop
xor
inc
int3
ja
fbld
shr
jne
test
in
jmp
xor
mov
xchg
jmp
imul
not
dec
jl
push
and
pop
fadd
sub
pop
out
mov
sbb
and
dec
dec
push
dec
jmp
inc
je
inc
faddp
sub
push
xor
mov
push
test
fldenv
arpl
ins
xor
mov
loop
retf
sbb
out
ins
jl
movs
pop
fdivr
jne
mov
imul
xchg
mov
dec
mov
inc
aas
inc
jmp
xchg
jns
add
js
popf
add
dec
xlat
fldenv
loopne
int3
xor
push
lods
jns
dec
imul
je
sti
(bad)
stc
aam
cs
cmc
fwait
pop
(bad)
leave
cmp
ins
ret
push
and
pop
cmp
xchg
ins
addr16
cmp
std
mov
dec
pop
adc
dec
or
jl
jmp
or
(bad)
ds
test
sbb
aas
mov
out
fstp
sahf
jno
dec
adc
pop
cmp
loope
scas
lock
out
or
lods
test
cli
inc
dec
sbb
les
fisttp
dec
dec
fmul
mov
scas
stc
push
aam
cmp
(bad)
sahf
outs
pop
cmps
imul
in
push
add
pop
cli
or
popf
dec
not
iret
enter
cmovp
test
jp
sub
xchg
add
into
repnz
enter
loop
jne
push
mov
push
add
or
loopne
mov
out
mov
fisubr
(bad)
xchg
mov
js
cld
inc
and
xor
movups
dec
sbb
adc
jmp
pop
pop
(bad)
or
jge
adc
(bad)
(bad)
arpl
sub
lahf
xchg
xchg
push
(bad)
call
xlat
int3
mov
es
xchg
cwde
or
inc
sub
pushf
mov
push
pop
bound
ins
xor
pop
in
mov
push
push
pop
mul
(bad)
cdq
xlat
inc
sub
jb
dec
adc
xor
in
cmp
popa
sub
jg
loopne
and
push
sub
int
jl
scas
xor
ret
test
xlat
jae
ss
js
jge
jne
jecxz
xchg
mov
and
jb
inc
std
push
dec
dec
xor
push
in
inc
push
stos
call
out
cmp
push
ret
(bad)
rol
mov
push
pushw
imul
and
xchg
les
out
jbe
mov
dec
cmp
aaa
ins
push
call
hlt
repnz
cmc
bound
inc
push
movs
sbb
lods
ret
clc
xchg
and
retf
(bad)
jmp
test
adc
les
pop
repz
pop
dec
mov
test
retf
xchg
test
cmps
in
fs
sbb
aas
lea
push
push
xchg
dec
add
inc
mov
int
sub
cmp
mov
lods
adc
cmp
xor
adc
shl
mov
lea
movs
adc
pop
inc
xor
cmp
pop
jae
sbb
cmp
xchg
int3
ins
or
jb
(bad)
pop
mov
mov
ins
or
lea
xor
movs
mov
sbb
dec
mov
push
sbb
sbb
inc
mov
jne
add
xchg
(bad)
aam
pop
xor
add
jo
dec
test
cmp
cli
sti
loope
mov
leave
cwde
(bad)
fwait
mov
rcl
loop
xchg
jp
inc
sub
into
push
or
or
mov
cmps
popf
adc
ret
sbb
dec
cld
lahf
jmp
inc
jecxz
mov
push
and
add
push
ror
xor
push
mov
adc
dec
pop
push
std
rcl
adc
pop
cli
or
adc
enter
sbb
add
push
add
loopne
cmps
pushf
xchg
add
or
mov
mov
xor
test
out
cmp
loopne
repnz
pop
dec
sbb
aam
les
fwait
(bad)
mov
and
and
retf
js
(bad)
(bad)
dec
std
sbb
lock
mov
es
cdq
pushf
pusha
pop
loopne
sub
mov
rol
adc
pushf
dec
sub
loopne
aam
popa
stc
shl
test
push
jne
adc
jno
push
cmc
mov
imul
ret
xor
je
fwait
out
jge
aad
outs
jo
aam
mov
scas
or
mov
call
xor
sbb
push
rol
inc
in
dec
fdiv
ret
xor
pop
jle
out
or
or
pop
add
test
into
adc
ins
les
and
pop
xor
mov
fistp
test
jecxz
out
mov
sub
out
sub
or
inc
or
(bad)
test
mov
xlat
cmp
out
cld
(bad)
mov
mov
and
sar
scas
ffree
push
ss
jne
retf
mov
dec
jmp
adc
or
(bad)
in
pop
mov
push
sub
adc
sbb
sbb
js
in
mov
(bad)
or
div
pop
dec
mov
push
mov
push
inc
sbb
in
(bad)
icebp
cmps
jo
fidiv
fdiv
inc
sahf
sbb
adc
xchg
aad
pop
dec
mov
lds
test
push
mov
jg
div
popf
mov
adc
dec
fldenv
sbb
ja
sub
stos
mov
retf
scas
and
aas
add
enter
xchg
pop
es
fsubr
push
aam
and
push
push
stc
out
add
ins
inc
push
addr16
adc
pop
sub
les
dec
cmp
int
mov
mov
dec
xor
test
ins
cmps
mov
ja
xor
imul
pop
cmp
mov
gs
fisub
mov
mov
sahf
sahf
pop
shl
jmp
imul
pop
inc
mov
sbb
sub
mov
dec
adc
retf
sbb
jno
jae
cmp
push
fisub
sbb
push
xor
leave
mov
icebp
sbb
fucomi
jo
mov
jg
pop
(bad)
sub
imul
daa
xor
popf
add
fist
test
and
mov
loopne
pop
(bad)
cmp
push
in
dec
sti
xor
lahf
pop
je
jae
sub
(bad)
push
or
data16
cld
mov
or
push
sbb
leave
add
and
and
dec
pusha
shl
fidiv
or
push
jno
xchg
aas
cmp
mov
rol
mov
xchg
mov
repnz
adc
outs
dec
mov
push
inc
mov
popa
mov
push
add
mov
dec
fbld
sbb
xchg
sbb
mov
shl
inc
xchg
cwde
push
cdq
xchg
sub
add
push
std
push
retf
adc
jo
out
test
in
push
jns
out
xor
add
enter
std
stc
xchg
jge
js
or
sub
xor
cmc
xchg
scas
inc
pusha
adc
sbb
sub
pop
sbb
adc
sbb
xor
ds
jle
pop
popf
ror
mov
mov
mov
int
inc
test
je
push
cmp
outs
mov
mov
cmp
add
gs
add
add
pop
iret
icebp
ret
fidiv
mov
xor
into
jns
xor
call
pop
or
repnz
lea
cmp
fidivr
mov
xor
in
adc
outs
cdq
lods
gs
mov
cmc
sbb
sbb
and
ficom
mov
loop
pop
leave
aam
out
ret
sbb
push
repz
jmp
cmps
pop
in
in
mov
pop
jbe
mov
inc
mov
mov
fs
aaa
add
aaa
std
les
xor
out
out
or
sti
add
ins
retf
jnp
jecxz
xchg
or
add
imul
xchg
push
fisub
and
int3
ins
gs
mov
push
dec
addr16
inc
stc
les
ss
or
push
out
inc
dec
ss
cmc
sub
sbb
jns
into
mov
pop
out
fwait
jnp
fwait
lock
push
test
ror
xor
mov
push
pop
cli
rcr
adc
(bad)
push
mov
les
mov
cmc
fist
lahf
repz
or
stos
jmp
and
movhps
movs
and
out
xchg
jge
inc
push
shl
xlat
pop
test
push
xchg
shl
ds
xchg
in
xchg
ja
sub
pushf
retf
les
adc
mov
fsub
sar
hlt
lods
je
stos
xor
mov
das
outs
scas
and
(bad)
jge
cmp
ret
aaa
lds
aad
mov
mov
jne
inc
ret
adc
mov
mov
mov
cmp
hlt
jnp
pop
lock
push
sub
test
dec
push
sbb
mov
into
sbb
sbb
push
ror
mov
clc
ret
xor
ror
push
sets
xor
mov
lods
jp
mov
ror
fadd
lahf
mov
shl
div
popa
rol
dec
pop
pop
retf
dec
pavgb
(bad)
mov
fst
inc
adc
jmp
neg
cmp
out
pop
add
fs
ror
mov
mov
xchg
sub
rol
mov
sbb
cmp
mov
sub
cwde
sub
pop
jmp
sbb
mov
adc
cmp
sahf
(bad)
retf
jno
mov
cmps
pushf
xor
xor
scas
jg
inc
mov
pop
adc
inc
loope
ret
daa
xchg
mov
aas
(bad)
cmc
push
ins
fbld
enter
xchg
jne
pop
cmpps
adc
xchg
inc
(bad)
loop
mov
jge
mov
jne
fistp
push
not
into
gs
xchg
lea
jg
lea
cdq
outs
mov
(bad)
mov
and
retf
sub
int3
shr
cld
adc
add
push
mov
push
mov
jge
and
outs
dec
pop
sbb
adc
push
adc
push
daa
scas
sbb
sub
pop
mov
in
sahf
push
inc
lock
dec
and
or
sbb
sbb
inc
int3
mov
imul
cmp
mov
ret
movs
cmp
(bad)
fstp
cld
mov
fnstsw
sar
jns
aad
mov
out
mov
sub
sbb
jp
sbb
retf
loop
retf
xchg
aaa
popf
xlat
push
nop
cdq
pushf
inc
in
loopne
cmp
jb
daa
nop
es
ss
mov
(bad)
retf
ret
inc
sub
mov
mov
or
add
les
and
pop
xchg
xchg
fs
scas
rep
sbb
dec
in
int
or
les
ror
push
scas
and
jae
xlat
adc
pop
pop
pop
xlat
loop
sbb
out
data16
stos
mov
sub
cmp
sbb
and
push
std
in
sub
mov
aam
pop
adc
mov
xchg
hlt
adc
retf
rol
push
pop
xchg
ss
mov
jne
rol
push
retf
pushf
nop
jg
add
mov
cmps
adc
or
add
lods
inc
pop
add
test
jo
addr16
and
dec
movs
add
cmc
xor
sti
and
shr
ret
mov
imul
ret
mov
mov
in
jnp
rcr
fwait
mov
fisubr
jecxz
(bad)
cmp
outs
adc
push
(bad)
mov
mov
mov
add
or
sar
jno
enter
icebp
fcom
jo
adc
mov
dec
push
call
lds
cmps
inc
inc
push
mov
push
mov
add
(bad)
pop
test
xchg
outs
fld
xor
test
push
fst
sbb
and
pop
loope
movs
out
sbb
mov
mov
xchg
aad
arpl
xchg
mov
sub
pop
fimul
jmp
mov
dec
xor
or
sub
loopne
inc
adc
jmp
repz
mov
xor
push
(bad)
dec
(bad)
jge
inc
add
jns
mov
repz
jmp
mov
mov
arpl
push
cmps
cmp
ret
add
pop
add
aaa
jle
cmp
movs
ins
jnp
(bad)
retf
xor
retf
not
(bad)
sub
fwait
aaa
xchg
mov
adc
or
pop
adc
cli
and
cmp
ins
adc
loopne
popf
mov
outs
mov
cs
xor
pop
pushf
mov
adc
push
cmp
cmc
mov
mov
mov
xor
lock
rol
pushf
mov
dec
hlt
daa
gs
fadd
in
mov
pop
test
xchg
lods
mov
daa
pop
inc
out
ret
mov
in
or
inc
ret
inc
(bad)
js
sbb
stos
and
(bad)
mov
dec
jg
pop
int
add
mov
test
dec
fcom
mov
push
mov
mov
sbb
mov
xchg
jbe
popf
fsub
inc
xchg
fs
fstp
out
test
sbb
inc
shl
sub
(bad)
dec
inc
jae
in
xchg
test
dec
mov
mov
dec
cwde
movs
xor
mov
sbb
sbb
pop
mov
add
jp
sub
test
xor
movs
or
scas
movs
or
or
xor
cmps
push
cld
iret
fsub
test
stos
inc
cmp
call
sub
lock
xchg
in
inc
in
adc
daa
sbb
xor
add
(bad)
fxch
inc
sbb
xchg
cmp
sbb
lea
es
cmp
pop
lods
xchg
ds
aas
test
ja
xlat
test
stos
movs
jne
dec
push
imul
ret
adc
clc
sbb
add
adc
stc
lods
mov
jle
pop
mov
dec
inc
adc
mov
inc
dec
(bad)
add
fadd
dec
fs
rcl
imul
mov
dec
in
hlt
js
jns
pop
xchg
xor
jo
and
gs
cmp
lods
imul
inc
jbe
pop
mov
inc
in
sub
sub
pop
mov
xor
adc
xor
push
push
push
(bad)
ficom
push
or
test
xchg
xor
lods
pop
mov
sub
mov
jl
retf
fidiv
jmp
cdq
mov
stos
sti
stos
(bad)
jns
jns
dec
inc
sbb
push
mov
dec
add
mov
xor
arpl
xchg
inc
arpl
pop
mov
adc
mov
mov
mov
xor
cld
test
aaa
(bad)
in
lea
jae
sbb
mov
adc
mov
repz
retf
pop
imul
mov
add
adc
(bad)
push
sub
out
fwait
loopne
and
push
(bad)
pop
push
test
in
adc
in
pop
retf
push
dec
and
jo
cdq
push
jae
cdq
sub
arpl
or
adc
adc
mov
outs
xor
enter
or
scas
retf
xlat
js
xor
cmp
mov
jns
and
fstp
inc
mov
out
xchg
xor
out
mov
js
cmps
shr
sub
je
fldcw
cmp
je
cwde
mov
xor
mov
test
cmps
bound
dec
sbb
std
add
jne
add
and
cmps
movs
mov
jle
sub
mov
aad
(bad)
in
push
mov
test
lods
test
gs
std
push
sub
push
pop
adc
jmp
add
mov
mov
mov
xor
popf
sbb
lahf
imul
movs
xchg
test
popf
push
stos
jbe
std
mov
mov
sub
cmp
adc
cld
shr
or
pusha
gs
arpl
inc
addr16
dec
or
mov
pop
mov
vunpcklpd
sub
jo
ror
ja
stc
xchg
clc
nop
into
xchg
daa
adc
mov
xchg
fnsave
stc
scas
leave
scas
cdq
dec
or
pushf
mov
jmp
mov
mov
inc
sbb
ficom
xchg
mov
xor
clc
push
scas
out
xor
ret
or
dec
and
ror
call
mov
ror
add
int
scas
test
mov
sbb
cwde
sbb
in
cmp
cld
fld
cmp
repnz
int
pop
jno
aad
les
push
loop
and
xor
pop
ds
ds
vrsqrtss
jnp
in
dec
sub
sub
jnp
sub
pop
mov
inc
call
test
fwait
retf
sti
(bad)
pop
int3
xchg
and
dec
idiv
(bad)
mov
out
in
repnz
push
xor
xor
lods
(bad)
mov
pop
pop
push
push
fwait
and
xor
icebp
mov
dec
sbb
fisttp
xor
lods
sbb
sub
cmp
and
sbb
push
les
add
leave
xchg
fsubr
push
xor
loop
mov
std
jmp
imul
or
fs
fnstcw
jnp
in
out
pop
movs
cwde
add
mov
nop
cli
int3
je
data16
in
dec
xchg
sub
jbe
gs
mov
sar
(bad)
stc
add
add
test
xlat
jno
dec
push
stos
loop
xlat
arpl
loope
cwde
in
dec
cmc
cmc
mov
adc
push
js
add
adc
scas
and
mov
sub
mov
jne
test
sub
ret
enter
ret
and
je
cli
(bad)
ins
int3
or
cmps
jg
mov
imul
add
dec
cdq
je
jl
dec
sub
ja
div
mov
pushf
cwde
pop
mov
mov
in
arpl
inc
inc
out
sbb
cdq
cmps
xor
into
shl
adc
pop
adc
adc
sbb
imul
out
mov
(bad)
pop
pxor
jg
sahf
into
jno
sub
or
jnp
mov
adc
push
retf
ss
les
jbe
jl
sahf
(bad)
popa
cmp
mov
shr
mov
pop
sbb
jae
sahf
and
xor
es
mul
addr16
cmp
push
mov
mov
jb
scas
add
aas
xor
iret
sbb
lods
leave
xlat
inc
mov
loopne
adc
(bad)
out
cli
es
stos
push
aaa
cli
clc
xchg
repz
clc
pop
pop
test
sbb
push
jo
retf
loopne
(bad)
pop
mov
int3
xor
int3
test
ret
popf
(bad)
sub
xlat
cs
mov
adc
aad
mov
sar
aaa
add
jmp
fidiv
cwde
sbb
and
mov
loope
xlat
mov
arpl
imul
jp
(bad)
div
ja
lds
jle
push
xlat
leave
and
and
inc
test
xchg
push
pop
fild
mov
pop
movs
in
enter
out
mov
leave
jecxz
sar
mov
sar
lds
xchg
jge
inc
xor
xchg
stos
inc
sahf
test
stos
fmul
js
retf
repnz
jns
mov
mov
(bad)
sub
mov
add
ret
jge
dec
sahf
(bad)
jo
jmp
neg
add
xor
movs
mov
inc
scas
sahf
jo
push
mov
dec
jno
cmps
cmps
call
pop
sbb
sbb
data16
xor
int3
repz
jo
int3
call
scas
sub
pop
fld
jbe
aaa
retf
das
xchg
inc
or
push
mov
inc
mov
or
mov
js
dec
inc
movs
jecxz
inc
cdq
cmc
ja
and
adc
add
ins
mov
push
aaa
adc
hlt
inc
cld
sub
cs
add
sbb
popa
xor
and
jl
call
pop
ret
daa
lods
in
adc
inc
cmps
sub
dec
retf
xchg
jle
inc
push
xchg
(bad)
int3
cmc
outs
shl
xchg
push
cmps
std
mov
inc
int
or
in
jno
icebp
leave
pop
pop
sub
pop
in
add
loop
stos
mov
imul
(bad)
sub
mov
dec
std
pop
call
out
lods
lahf
mov
pop
inc
sbb
rcl
test
adc
sub
or
xchg
fidiv
imul
retf
clc
les
shl
pop
in
jnp
mov
out
out
enter
mov
movs
mov
add
jmp
jno
mov
(bad)
mov
jp
and
or
mov
mov
xchg
or
sub
and
ins
push
fcmove
stos
(bad)
cmp
dec
cmp
shl
or
jecxz
rol
test
or
cmc
repz
movs
jg
out
out
(bad)
arpl
pushf
inc
stc
test
dec
ret
retf
cmps
jl
push
icebp
jo
test
push
test
jmp
mov
sbb
adc
and
pop
jmp
inc
push
sahf
add
movs
push
pusha
or
mov
data16
shr
push
in
sbb
push
sbb
push
loope
aad
int3
and
popa
pop
add
xchg
js
shl
cmp
cmp
fmul
jmp
sbb
imul
and
aam
out
lock
push
out
test
sbb
jo
ja
nop
movs
cmp
push
idiv
mov
mov
stc
lea
in
shl
je
shl
(bad)
fiadd
or
adc
push
pop
pop
bound
mov
shr
push
xor
cli
and
jl
mov
cld
aam
std
loope
or
cmp
repnz
outs
push
push
out
sbb
lock
repnz
sbb
jle
idiv
sub
inc
push
imul
out
cmp
cwde
retf
nop
add
xlat
jae
pusha
ret
jecxz
jl
je
cmp
loopne
mov
fist
imul
push
clc
lea
push
push
shl
ins
lods
frstorw
ja
mov
sbb
jno
aaa
mov
jne
fisubr
hlt
call
push
stc
push
xchg
scas
and
inc
cs
call
popa
cs
in
cmps
and
dec
cmc
mov
daa
cwde
cdq
ss
mov
std
cli
fcomp
jne
pop
pop
cmp
sbb
cwde
aaa
dec
dec
shl
or
or
ja
xlat
stos
sub
xlat
xchg
lahf
cwde
ret
and
or
ds
sar
cmp
push
xchg
or
jge
fidivr
stc
xlat
(bad)
int3
rcl
xchg
mov
xchg
push
js
mov
imul
stos
xchg
les
cmp
popa
add
ins
scas
nop
in
adc
xor
movs
push
mov
jmp
(bad)
imul
mov
fcom
bound
sub
arpl
inc
push
scas
or
js
sbb
sahf
add
movs
arpl
push
push
push
imul
mov
xchg
in
cmc
lds
sbb
or
scas
hlt
xlat
mov
dec
push
ret
loope
test
pop
mov
jb
and
jp
mov
ds
pop
cdq
sub
mov
mov
mov
xor
out
loop
retf
add
jmp
inc
dec
cmp
lea
xchg
sub
cld
(bad)
sub
(bad)
arpl
push
mov
out
fwait
dec
mov
push
bound
sbb
out
sub
mov
push
pusha
js
es
jbe
fidivr
add
and
push
mov
out
or
or
out
pop
push
add
and
jmp
adc
jl
inc
xor
loope
das
test
jecxz
and
adc
loop
xor
adc
xchg
mov
sub
in
jnp
push
xor
mul
xor
call
daa
mov
ss
and
sub
mov
jno
jg
jns
mov
mov
and
(bad)
cmps
clc
adc
push
into
hlt
inc
sub
and
stos
sub
loopne
xchg
and
test
xor
push
stc
cli
mov
or
nop
lods
lea
in
arpl
fild
mov
jo
fisub
mov
inc
mov
push
jb
fimul
fdivr
jp
cmp
and
pop
loopne
imul
sub
add
fistp
(bad)
dec
add
sbb
mov
int
pop
mov
lds
mov
cmp
fmul
icebp
lods
sbb
dec
int3
jae
mov
inc
popf
or
pop
enter
pop
outs
sub
pusha
push
outs
sub
mov
or
sub
xor
jnp
and
daa
outs
jmp
(bad)
pop
fcom
dec
ret
jns
les
inc
sar
movs
mov
adc
sub
pop
cmp
push
cmp
jnp
mov
xlat
push
icebp
cdq
mov
lds
fisub
inc
pusha
mov
mov
dec
arpl
test
mov
int3
add
imul
add
sbb
fmul
cmp
iret
adc
sub
popf
jb
or
pop
push
mov
repnz
test
push
fsubr
test
pop
inc
imul
(bad)
repz
pusha
fs
mov
mov
arpl
lea
clc
and
cwde
or
push
xlat
mov
jne
xchg
loope
out
xchg
mov
mov
jmp
mov
jno
das
fdivrp
test
cwde
jle
push
sub
sub
adc
ins
xchg
movs
fld
xchg
aad
jnp
movs
ret
test
push
push
sbb
and
repnz
in
call
fisttp
lods
sub
push
iret
add
cmp
dec
or
ins
and
mov
arpl
cmp
call
popf
in
dec
adc
add
data16
iret
push
xchg
shr
inc
movs
imul
retf
aam
push
jge
mov
or
neg
cmp
ret
sub
movnti
jno
inc
sbb
retf
jne
in
pushf
ret
sub
repz
jne
loop
nop
dec
mov
loope
mov
cvtps2pi
and
rol
mov
mov
push
gs
xlat
and
sbb
es
cmp
test
aaa
int3
push
mov
add
(bad)
fild
sbb
shl
movs
fwait
add
pop
mov
pop
jae
cwde
xchg
sbb
(bad)
and
adc
ds
sub
sbb
cld
imul
pop
mov
pop
aad
jnp
int
jecxz
popa
push
stos
imul
test
sbb
stos
(bad)
adc
(bad)
sbb
retf
cmp
lods
ja
mov
adc
repz
add
ins
fdivr
aad
push
push
push
push
fcmovnbe
retf
pusha
shl
repz
adc
pushf
cmp
sti
cdq
out
ret
pushf
outs
sub
mov
pop
shl
adc
xchg
jno
mov
mov
sbb
jb
sbb
outs
push
adc
dec
das
xchg
scas
adc
mov
jnp
int
retf
nop
enter
int
int3
mov
fistp
lock
outs
sub
lahf
ja
xchg
mov
jge
push
ficomp
xchg
cdq
push
cwde
mov
test
add
jno
cmp
inc
out
enter
retf
mov
shl
mov
mov
pop
in
mov
cld
popf
adc
mov
or
jmp
ins
retf
sub
fldcw
jb
fwait
push
mov
sbb
and
jno
test
push
imul
pop
or
into
pop
(bad)
ror
aam
xchg
retf
outs
cmp
in
scas
sbb
leave
xchg
and
add
cs
(bad)
loopne
movs
add
(bad)
faddp
cmp
mov
int3
jne
push
push
pusha
addr16
outs
pop
dec
push
test
and
shl
jno
test
push
pusha
retf
les
mov
sub
adc
das
test
fcmovnbe
sub
arpl
add
adc
mov
mov
dec
repnz
and
pop
xor
outs
rcl
imul
mov
jmp
pop
mov
outs
adc
hlt
mov
inc
fs
cmp
int3
repnz
cmp
in
pop
push
outs
or
sbb
ss
mov
imul
xchg
sbb
pop
pop
popa
mov
aas
scas
out
sub
fucomip
cmp
(bad)
lods
jge
mov
int
or
pop
push
xor
sti
ret
nop
and
push
mov
(bad)
xchg
xlat
stos
sbb
dec
or
loope
cmp
loop
out
stos
pop
loope
inc
inc
push
cmp
cdq
fistp
adc
mov
or
loope
movs
mov
lods
rcr
jg
lea
unpcklps
push
add
xor
test
inc
ret
adc
fs
xor
out
fs
scas
xchg
mov
and
movs
vmovd
test
or
push
loop
xor
loopne
jge
mov
adc
mov
push
cmc
ret
stos
int
jle
adc
mov
jno
jp
cld
test
jo
pop
scas
push
or
stos
xlat
out
cmp
jp
dec
adc
sub
ins
rcl
cmc
mov
sub
xchg
mov
add
xor
inc
lods
sbb
ins
mov
cdq
in
jg
and
sahf
ror
pop
or
xchg
popf
bound
sbb
mov
inc
and
loop
loope
sub
lods
inc
mov
daa
mov
outs
out
popf
fisttp
loop
test
mov
sti
es
mov
mov
hlt
jae
and
sub
jg
(bad)
mov
sub
inc
enter
stos
xlat
sub
nop
fcmovnb
mov
xor
aas
mov
xchg
loopne
xor
jge
and
cmp
jbe
and
jae
or
(bad)
sub
es
les
retf
out
and
add
mov
xchg
push
arpl
bnd
sar
imul
or
adc
sub
add
stos
pop
jmp
jbe
and
(bad)
jp
loop
in
sahf
into
orps
repnz
sar
dec
or
cmc
dec
ins
xor
das
sub
jmp
jnp
lods
and
sbb
xchg
jno
cmp
add
xchg
cld
mov
xlat
mul
mov
test
int3
and
stos
push
sub
call
iret
sbb
fadd
bound
jge
mov
add
mov
and
adc
sbb
push
(bad)
movs
mov
xchg
(bad)
push
add
mov
jecxz
clc
mov
test
sub
gs
les
fwait
scas
sub
and
push
and
sub
test
mov
mov
(bad)
cmp
add
sub
cmp
mov
mov
sbb
dec
out
stc
dec
(bad)
out
stos
push
adc
mov
push
xchg
adc
std
add
loope
mov
jo
sub
fbld
aad
dec
mov
imul
adc
movs
add
mov
gs
push
nop
call
mov
adc
cmc
dec
mov
ds
pop
in
sbb
jecxz
aad
lea
aas
and
xor
fnsave
fs
cs
xor
popa
cs
cs
fld
std
pop
call
mov
and
mov
ror
inc
je
mov
addr16
mov
nop
arpl
lods
xor
ret
ficom
jge
sbb
sub
dec
jbe
daa
xor
xor
stos
ror
push
adc
xchg
dec
aad
cli
es
xor
lods
cmps
push
jae
dec
data16
jno
dec
pop
and
in
sub
mov
stos
or
add
adc
cld
mov
and
jge
mul
inc
fisubr
rcl
jbe
test
hlt
pushf
adc
sub
out
test
std
pop
arpl
call
pop
je
ja
push
sub
sbb
xchg
(bad)
jmp
mov
or
cmp
mov
mov
push
popa
syscall
mov
push
aas
bound
lea
(bad)
or
cmp
fist
push
mov
jmp
pop
pusha
xor
movs
daa
int
sbb
pushf
bnd
jnp
mov
sub
daa
mov
cmp
xchg
push
out
ss
jns
mov
arpl
xchg
ret
imul
dec
cld
pop
repnz
rcr
retf
jmp
mov
in
int3
jb
add
sub
adc
push
aam
call
mov
mov
dec
mov
adc
jp
loope
aam
rcr
imul
and
inc
int3
xchg
fwait
inc
leave
mov
iret
jle
adc
enter
bswap
xchg
cdq
push
inc
adc
fld
leave
pusha
call
enter
push
popf
rcl
int3
fdivp
jno
(bad)
cmps
xchg
int
into
nop
mov
adc
xor
int
xor
cmps
(bad)
out
stos
pop
and
sbb
sbb
adc
add
lahf
adc
adc
mov
mov
inc
mov
dec
cmp
clc
jnp
sbb
das
pop
imul
les
sub
push
adc
ficom
or
xor
test
std
mov
push
mov
icebp
imul
addr16
movs
fs
pop
aad
sub
jo
pop
mov
pop
adc
(bad)
dec
cmp
nop
hlt
and
mov
or
mov
adc
lods
loopne
adc
dec
or
xchg
jae
jns
sub
add
add
pmaxsw
es
sbb
xchg
scas
in
mov
jbe
xchg
cmps
push
movs
cmp
mov
pop
inc
(bad)
push
mov
sbb
outs
push
inc
loop
pop
adc
mov
xchg
sub
outs
push
mov
adc
xlat
push
and
pop
inc
loop
pop
push
(bad)
(bad)
mov
(bad)
cmp
bound
outs
pop
paddusw
jae
(bad)
(bad)
lock
mov
jmp
outs
mov
cmp
sti
repz
jmp
out
call
xchg
jne
aad
(bad)
push
or
push
pop
daa
lds
scas
leave
push
dec
inc
mov
sti
pop
cmp
ds
inc
jle
dec
clc
mov
shr
mov
xchg
mov
xchg
ds
and
popf
cmp
xor
or
xchg
xchg
sti
cmp
cmp
popf
or
and
jb
ja
movs
js
mov
iret
mov
jecxz
bnd
stos
push
cwde
inc
(bad)
mov
ficom
jmp
inc
adc
pop
push
iret
movs
sub
cmp
into
xchg
outs
cdq
jbe
sahf
jg
mov
push
jne
mov
mov
jns
sar
cmp
cmovne
fidivr
pand
pop
xchg
pop
ins
test
push
jnp
popf
sbb
lea
jmp
fiadd
xchg
dec
test
pop
pop
push
cwde
mov
scas
shl
lods
cmp
sub
dec
jmp
and
mov
outs
and
stc
pop
cmp
xchg
es
cmp
fsub
js
jecxz
sbb
and
sbb
mov
cmp
mov
xlat
jecxz
adc
inc
aad
inc
sbb
dec
push
(bad)
adc
inc
adc
jmp
add
add
jo
fwait
les
fdivr
out
loope
push
add
dec
xchg
jmp
outs
sbb
jo
push
popf
nop
fld
push
emms
pop
aad
adc
mov
jns
inc
jo
and
in
mov
aam
enter
test
inc
fistp
pop
stos
sbb
loop
cmps
pop
enter
(bad)
mov
in
mov
inc
mov
or
mov
inc
neg
or
and
dec
outs
(bad)
push
sbb
pop
(bad)
mov
in
nop
lahf
xor
ror
mov
pop
pop
push
add
ins
mov
mov
cmps
repnz
cmps
stos
(bad)
and
out
jmp
pop
test
ins
rol
pop
mov
gs
inc
mov
or
add
aas
loope
rol
inc
xchg
das
mov
ret
xor
mov
fadd
push
push
xchg
mov
test
push
test
add
dec
stos
cli
adc
daa
pushf
or
xchg
fwait
inc
mov
push
or
jno
push
test
jne
cwde
sbb
jb
mov
pop
cmp
and
pop
daa
and
cdq
in
das
xchg
ins
adc
or
and
aas
mov
and
imul
outs
xor
hlt
adc
shl
lods
popf
push
lods
push
out
or
daa
xor
adc
leave
or
push
and
adc
leave
stc
test
cmp
xor
xchg
or
xlat
sub
add
dec
jmp
sbb
mov
xchg
mov
loopne
mov
imul
cmp
ja
push
or
sub
add
dec
fadd
retf
adc
sbb
popa
push
call
jns
push
not
mov
int3
or
int3
pusha
fs
idiv
mov
aaa
cmp
or
cmp
cmc
push
fcmovb
sbb
outs
mov
inc
scas
inc
xchg
xor
lods
addr16
dec
das
cmps
pop
test
std
mov
loope
imul
adc
inc
xchg
sti
dec
popf
test
sbb
or
adc
add
loop
mov
enter
and
aad
pop
add
dec
add
stos
leave
or
xor
jno
loope
sahf
cwde
jbe
jecxz
ins
test
or
push
cdq
push
xchg
mov
movs
dec
inc
pop
sbb
in
mov
or
inc
stc
aam
adc
push
jle
or
adc
aad
addr16
push
xor
sub
sub
out
mov
in
imul
cs
int
and
inc
cmps
idiv
das
(bad)
daa
ins
xchg
data16
xchg
popf
imul
and
adc
sub
int
mov
mov
(bad)
cli
(bad)
cwde
ds
clc
aas
mov
pop
sub
dec
jmp
test
xor
jecxz
push
test
and
xor
adc
mov
fidiv
pushf
push
xor
jle
cmp
or
dec
dec
xor
(bad)
mov
sbb
mov
das
sub
push
pop
das
push
adc
jbe
jp
add
les
and
pop
or
xchg
jg
and
mov
aas
pop
add
dec
les
cwde
sub
xor
loopne
sub
sbb
(bad)
fiadd
fimul
jecxz
mov
repnz
inc
and
push
xchg
stos
xor
fisttp
mov
int
sahf
dec
xchg
popa
adc
and
mov
pop
retf
popf
sub
movntq
mov
cld
or
imul
nop
inc
aad
push
out
aas
mov
sbb
mov
aam
pushf
into
fbld
mov
cmp
pop
lods
lahf
jo
ror
shl
jne
dec
rol
sub
sbb
lea
je
mov
out
mov
out
xchg
jl
xchg
movs
adc
loop
inc
aas
dec
pop
and
js
jmp
outs
push
jmp
push
adc
clc
mov
adc
inc
out
mov
jecxz
push
mov
jg
shl
pop
dec
pushf
cmps
pushf
dec
es
mov
es
sub
pop
and
sar
xchg
mov
popf
mov
lods
call
push
sbb
dec
out
xlat
retf
cmp
call
jge
sub
sti
cmc
sbb
cmps
adc
cmc
rcl
rcl
pop
adc
jae
cdq
outs
lods
push
test
loop
mov
mov
or
stos
xor
sub
out
clc
aam
scas
adc
cmp
jne
sbb
inc
sub
dec
(bad)
pop
loop
es
sbb
rcr
outs
cmps
xchg
sub
in
pop
sar
or
(bad)
cld
jo
stos
and
and
rcl
pop
mov
dec
ret
fld
loopne
xchg
inc
int
pushf
aaa
mov
inc
add
jge
mov
sar
sub
sub
(bad)
jg
sbb
sti
add
aas
inc
ins
scas
iret
cmp
sbb
xchg
stos
movs
pushf
int
and
fwait
aad
popa
arpl
in
ror
dec
mov
push
push
mov
pop
add
pop
cs
fsubrp
add
xchg
xchg
jne
arpl
push
inc
mov
jns
pop
xor
aam
sti
fwait
jle
mov
mov
outs
xchg
fucomip
xor
pop
sub
mov
sti
inc
jnp
cmps
(bad)
(bad)
arpl
mov
scas
mov
pop
jecxz
popa
inc
in
sub
add
sbb
imul
test
aam
sub
je
repz
data16
inc
and
xor
mov
psllw
mov
jle
and
xor
call
mov
(bad)
jle
cmps
add
or
push
imul
call
ror
sub
mov
inc
out
and
push
mov
shl
dec
int
cmc
dec
xor
inc
adc
or
pop
imul
mov
jp
imul
(bad)
(bad)
push
xchg
cmc
jle
cmp
add
hlt
fsincos
sub
popf
jno
test
test
dec
mov
in
pop
arpl
dec
pop
mov
addr16
push
inc
and
sar
mov
xchg
js
pop
inc
mov
add
loope
adc
mov
and
test
cld
test
imul
pop
push
mov
and
call
in
idiv
sub
mov
sbb
ss
dec
mov
sar
jecxz
push
sahf
xchg
xor
sub
adc
test
dec
or
push
jno
or
mov
ja
int3
fstp
push
fst
cdq
int3
jecxz
and
lock
sbb
movs
out
jge
mov
loope
iret
loopne
sub
ret
mov
jns
mov
mov
cwde
xor
cs
and
retf
test
lock
sti
push
push
jle
std
out
mov
inc
and
dec
push
mov
loopne
cs
inc
inc
xor
xchg
or
test
sub
rcl
loop
adc
sbb
sub
test
add
jns
into
or
test
add
ins
ss
cdq
das
lods
push
and
movs
mov
add
loope
mov
test
imul
movs
ja
inc
xor
sbb
ret
jecxz
aam
hlt
jbe
cld
mov
xor
cmp
lea
push
fnstcw
xor
mov
or
mov
cmps
call
push
rcr
fadd
and
jl
outs
out
push
(bad)
icebp
dec
ss
mov
shl
lods
in
js
dec
dec
fistp
xor
lock
mov
not
pop
(bad)
mov
adc
sar
fcom
outs
xor
mov
ret
xchg
jmp
push
fidiv
cld
cmp
cld
mov
mov
fcom
and
mov
xchg
pushf
sub
cmps
pusha
or
test
arpl
push
retf
jbe
cli
inc
mov
lea
popa
sub
or
jne
je
out
mov
lods
jmp
pop
pop
push
mov
push
mov
test
in
and
and
and
gs
mov
inc
outs
lock
enter
dec
mov
xchg
sub
pushf
sub
fcomp
(bad)
movs
out
repnz
sbb
movs
fdiv
jle
push
mov
sbb
fst
aad
mov
sbb
aas
dec
loope
sti
dec
jo
cmps
xchg
xchg
test
and
pop
enter
lods
push
xlat
jnp
xchg
cld
mov
pop
push
cmp
loope
and
cmp
pop
add
push
popa
mov
xor
push
stos
or
popa
sub
mov
cwde
fdivr
push
dec
test
push
jmp
jmp
jge
mov
(bad)
ss
(bad)
dec
xor
pop
js
out
std
and
iret
pop
inc
xchg
sbb
sbb
xchg
int
pop
stos
loopne
mov
nop
rcr
inc
cs
inc
push
pop
out
add
inc
xor
xchg
out
sub
xchg
cmc
xchg
cli
icebp
cdq
clc
and
test
lock
add
jns
loope
repz
jmp
out
jmp
fwait
push
cld
jl
shr
ss
push
push
test
jae
(bad)
rcr
cmp
cmp
daa
(bad)
(bad)
(bad)
mov
imul
ror
int3
sbb
cmp
cdq
ins
outs
adc
fbstp
sbb
and
shl
jo
jb
jno
mov
dec
or
or
cmps
push
aad
jns
fdivp
mov
add
cwde
stc
imul
retf
call
in
jp
out
std
loop
push
jno
sub
scas
mov
test
cmp
mov
imul
je
daa
push
loop
jmp
fwait
popa
add
jg
add
mov
lahf
loope
fdiv
retf
push
outs
mov
(bad)
cld
hlt
(bad)
out
(bad)
ja
sub
popf
sbb
adc
jae
or
adc
jns
je
xor
bound
inc
push
adc
fmul
adc
and
jbe
dec
call
cmps
push
dec
jg
jno
push
int
mov
mov
fmul
or
sbb
bound
mov
sbb
adc
lea
movs
mov
mov
inc
mov
stos
iret
test
pop
iret
or
pop
dec
push
(bad)
lods
mov
xchg
jbe
sbb
repnz
add
mov
stos
out
clc
xor
add
inc
inc
(bad)
xlat
xor
(bad)
push
std
mov
loop
repz
lods
daa
sub
in
repz
dec
mov
sbb
dec
pop
mov
mov
jmp
repnz
fld
cwde
add
smsw
fadd
adc
imul
mov
sbb
(bad)
sbb
inc
lds
leave
mov
xlat
popa
xor
movs
sti
lods
push
rcl
dec
daa
xchg
push
mov
adc
xor
mov
repz
xchg
inc
fcomp
inc
loope
xchg
jns
lock
lock
xchg
lock
es
mul
cld
mov
(bad)
aaa
mov
sahf
int3
jae
movs
sub
dec
int
(bad)
pop
mov
sub
add
mov
mov
sar
pop
stos
cmps
add
and
fld
and
xor
xchg
(bad)
scas
push
(bad)
inc
ins
or
fdiv
test
pushf
sub
cmps
(bad)
xchg
fcmovnb
push
jecxz
dec
adc
add
push
mov
mov
rep
jp
in
call
xchg
cmps
and
pop
and
sbb
out
or
mov
lahf
push
jne
jmp
fldenv
das
sti
xor
adc
scas
cmc
iret
xlat
sbb
jmp
lahf
sbb
adc
lds
cmp
loope
fld
(bad)
adc
std
sbb
bound
push
fst
xchg
pop
mov
xchg
pop
fwait
cli
int3
arpl
rol
inc
ret
sub
int
pop
inc
enter
jecxz
call
push
lods
jl
push
stos
inc
lods
mov
stc
(bad)
(bad)
loope
xchg
jae
arpl
xlat
(bad)
pushf
push
into
sbb
jmp
jle
js
nop
in
adc
pop
add
cmps
and
test
or
call
sbb
push
mov
rcl
and
xor
mov
cwde
xchg
fmul
sub
sub
push
cdq
enter
jg
or
xor
mov
(bad)
lock
ror
jbe
cs
adc
fwait
pop
dec
outs
xor
loop
out
ss
push
inc
mov
pop
jl
pusha
out
pushf
add
pop
mov
inc
out
push
add
xlat
cdq
pop
xor
push
in
pop
mov
ins
xchg
iret
xor
dec
pop
inc
cmp
scas
adc
sub
inc
ret
mov
mov
xchg
or
xlat
xlat
mov
and
loop
imul
arpl
sbb
jb
inc
pop
xchg
mov
int
test
pop
js
fmul
loop
xor
es
retf
mov
mov
es
cld
inc
mov
push
xlat
(bad)
mov
in
mov
xor
addr16
dec
mov
cmp
sti
(bad)
cmp
mov
or
lock
inc
jg
daa
sub
add
sub
lods
and
iret
push
pop
aad
push
xchg
sub
jno
popa
aad
jge
xlat
jne
mul
gs
jns
out
dec
in
push
sub
adc
(bad)
dec
data16
dec
push
jge
jmp
and
and
cld
popa
or
pop
(bad)
cmps
fs
push
imul
jl
mov
stos
sub
lea
jmp
fisub
xlat
pop
add
ins
and
es
fwait
das
lock
mov
cmc
adc
repz
sbb
xchg
jmp
mov
sti
mov
xchg
les
pop
(bad)
push
sub
fild
retf
push
push
and
lods
or
ds
push
dec
mov
mov
shl
sahf
lods
jge
and
fwait
cli
push
aam
inc
jmp
add
xchg
dec
mov
mov
pushf
jbe
into
adc
std
iret
jae
shr
lahf
dec
inc
cld
jbe
jne
(bad)
lds
mov
mov
sbb
iret
leave
mov
mov
push
inc
pop
int
push
cmp
or
ret
hlt
xchg
cmp
inc
inc
dec
pop
jno
loope
fs
jae
jns
sbb
sbb
cdq
mov
or
int
jmp
mov
jmp
cld
aas
int3
outs
add
outs
aaa
jo
pop
(bad)
jg
mov
not
fstp
outs
lods
sbb
cli
jecxz
cmp
aas
fwait
sahf
leave
call
fnstcw
and
dec
or
ds
lock
sbb
out
mov
bound
mov
mov
icebp
pop
rcr
outs
xchg
push
in
js
mov
mov
push
or
stc
push
sti
push
shl
in
ss
aad
test
cdq
jbe
and
in
inc
scas
add
pop
mov
cmps
push
sub
jne
xor
dec
pop
push
xor
push
inc
jbe
dec
adc
sub
mov
inc
jecxz
dec
fnstenv
xchg
iret
fsubrp
inc
sub
sub
pop
mov
xor
data16
or
dec
mov
jg
enter
dec
adc
inc
inc
jbe
imul
jns
sub
je
mov
xor
push
cmp
mov
inc
es
popw
add
call
or
ror
lods
fistp
test
xor
and
push
mov
enter
int3
cmp
jne
push
pop
outs
lahf
ss
push
xor
add
les
(bad)
mov
inc
sub
(bad)
jbe
sar
out
pcmpeqd
ret
inc
lds
xor
inc
mov
dec
fimul
nop
push
hlt
inc
xlat
lock
leave
out
mov
cmp
in
and
je
xchg
gs
data16
or
repz
adc
out
and
lods
fwait
out
daa
cmp
in
test
inc
inc
out
out
cmp
and
push
jge
(bad)
imul
mov
xor
(bad)
jmp
pop
loope
sbb
adc
scas
mov
rcr
enter
inc
mov
add
jmp
mov
and
in
fcom
jp
jle
xchg
push
fadd
mov
outs
sbb
push
cwde
(bad)
in
int3
cmp
push
sbb
xchg
and
mov
mov
push
mov
loop
loopne
pusha
mov
push
(bad)
(bad)
bound
js
jl
rcr
xchg
push
xor
les
mov
arpl
jg
mov
mov
jmp
jns
call
xlat
cmps
cmp
repnz
pop
outs
push
inc
push
mov
aas
(bad)
dec
idiv
ret
repnz
sar
and
(bad)
sub
sahf
xlat
mov
data16
push
push
mov
mov
add
mov
sahf
push
test
pop
loopne
pop
repnz
add
mov
jmp
inc
inc
mov
sar
dec
inc
outs
pop
frstor
mov
pop
sbb
cmp
lods
sbb
mov
pop
mov
push
out
test
adc
js
fwait
xor
dec
call
sub
inc
or
mov
or
sbb
aam
nop
mov
adc
pop
jmp
sbb
fisttp
lods
mov
out
mov
in
pop
dec
cmp
ficom
lods
sbb
in
leave
add
lods
adc
test
(bad)
push
mov
dec
popf
stc
cmp
sbb
gs
add
imul
div
cwde
sub
sbb
mov
aad
ret
jge
mov
mov
gs
mov
add
add
and
add
sub
pop
dec
adc
and
xor
dec
div
ficomp
and
xchg
push
in
or
sbb
mov
adc
iret
stos
add
push
xchg
pop
and
sti
ret
cld
pop
adc
aad
lods
idiv
stos
xchg
jno
and
inc
mov
inc
dec
jmp
rcl
inc
(bad)
mov
pop
and
retf
sti
lock
push
loopne
cwde
je
(bad)
aaa
jge
mov
inc
stos
gs
xchg
push
ins
ins
cmp
xchg
add
xor
jae
ds
retf
and
inc
sbb
xor
inc
test
mov
(bad)
pop
(bad)
and
xor
sbb
in
adc
ret
(bad)
jmp
pop
int
push
jae
xor
push
clc
push
scas
jo
and
hlt
leave
out
das
(bad)
inc
int3
cmc
push
mov
dec
inc
jl
repz
mov
and
push
xor
add
add
mov
lea
popf
in
ror
aam
in
xor
dec
icebp
xchg
jle
lahf
sbb
and
iret
xor
sub
sti
das
or
into
int
stos
xchg
shl
add
ret
inc
cmp
out
pop
shl
sub
les
cdq
cmc
das
imul
push
add
or
mov
pop
cmp
(bad)
dec
clc
sub
cmp
sbb
gs
or
pop
xchg
mov
shr
mov
shr
push
xor
inc
retf
mov
dec
daa
je
fstp
arpl
pop
mov
fsubr
stc
cmc
jne
(bad)
ss
test
fdivr
xchg
sbb
ret
mov
jb
aas
add
cs
rcl
mov
inc
lahf
cli
xchg
retf
xchg
pop
xchg
adc
push
xor
imul
dec
push
or
add
cmovno
sbb
or
mov
push
mov
add
xor
xor
xor
and
mov
(bad)
push
pop
popa
dec
aam
(bad)
dec
test
mov
and
cmp
das
rcl
push
daa
sub
addr16
loope
jmp
xchg
mov
xchg
mov
retf
mov
xor
mov
popa
and
push
dec
in
mov
push
inc
sub
sub
adc
sub
into
dec
dec
dec
xchg
fucomp
jne
mov
xlat
imul
jmp
pop
sbb
(bad)
push
xor
add
inc
mov
mov
cmp
push
(bad)
mov
xchg
retf
repz
jmp
mov
leave
fistp
ds
mov
jo
sbb
ret
xor
into
cmp
push
sbb
int
adc
jmp
ins
dec
out
sub
inc
pop
push
fucom
jno
sbb
scas
mov
mov
lahf
jecxz
test
pushf
int
cmp
jmp
jge
adc
fisub
dec
stos
stc
and
les
nop
aam
hlt
add
fwait
cmp
xor
mov
push
cmp
fnstsw
loop
sbb
imul
inc
bound
retf
mov
dec
sbb
cmps
shrd
inc
frstor
arpl
jne
pop
iret
xchg
mov
test
pop
adc
xchg
xor
data16
push
call
push
or
retf
ja
sbb
stos
inc
fstp
xlat
add
lahf
and
repnz
repnz
sub
addr16
sub
push
retf
adc
xchg
adc
adc
in
inc
add
or
sub
pop
aad
inc
add
mov
sub
jns
xor
adc
dec
sub
mov
rcr
test
lods
dec
pop
push
aam
mov
aaa
fucom
cmp
cmp
xor
sbb
jl
ret
add
pusha
dec
cmps
or
inc
lea
ror
xchg
push
adc
jmp
scas
dec
movs
sbb
pop
sub
push
add
mov
push
jge
pop
or
leave
sbb
inc
pop
test
xchg
mov
jg
mov
imul
stos
push
stos
adc
mov
je
ds
jecxz
dec
dec
mov
test
dec
ja
pop
xor
jle
gs
je
push
mov
xchg
aaa
lea
ins
(bad)
not
xor
das
ror
jmp
mov
test
(bad)
out
xchg
mov
loop
push
stos
pop
jae
mov
div
std
enter
mov
(bad)
sahf
and
xor
push
gs
inc
loopne
jnp
cli
xchg
or
fsub
dec
out
(bad)
repnz
adc
sub
test
cli
jp
ss
jbe
rcl
mov
jo
int
push
pop
pusha
inc
xor
pop
loopne
out
shl
add
repnz
inc
or
enter
je
clc
adc
mov
and
sti
mov
les
inc
inc
xor
mov
aam
and
mov
leave
mov
ins
jbe
js
pushf
fist
and
test
fld
pop
pusha
(bad)
test
pop
mov
fnstcw
jnp
(bad)
clc
or
pop
stc
push
cmp
xlat
xchg
xchg
shl
or
mov
jmp
out
mov
mov
adc
push
xor
dec
rcr
cmp
out
test
out
jbe
pop
pop
mov
fnsave
push
mov
lock
xchg
iret
test
fdiv
imul
aam
push
inc
pop
inc
inc
jne
daa
and
or
stc
pop
ja
cmp
nop
sar
sbb
out
adc
pop
mov
cmps
mov
push
ins
movs
in
(bad)
retf
bound
or
jg
or
mov
imul
aad
mov
mov
inc
fbld
jo
sub
mov
(bad)
sbb
inc
inc
lahf
dec
xor
mov
push
fsubr
fsub
mov
jo
pop
sub
movs
pop
or
xor
imul
mov
dec
addr16
fsub
or
in
lea
jbe
xchg
pushf
dec
jae
adc
mov
scas
mov
cmp
shl
out
push
mov
ror
xchg
neg
aaa
aas
sub
ror
adc
pop
mov
lds
mov
mov
mov
pushf
cmp
inc
leave
sbb
inc
xor
add
test
fbstp
pop
dec
leave
mov
pop
jmp
jmp
push
ds
or
xor
mov
push
cmps
dec
sub
rcl
jl
mov
jno
mov
je
xor
retf
iret
fsubrp
(bad)
xor
inc
and
and
in
and
test
lock
push
in
push
and
mov
ja
fwait
into
movs
and
jp
dec
inc
cmp
adc
stos
fmul
push
xchg
int3
sub
and
dec
jae
push
mov
or
rcr
ins
lods
push
mov
jo
inc
inc
adc
xchg
ss
push
sub
sub
and
xchg
pushf
add
out
pop
ds
jle
inc
jle
mov
pop
(bad)
jne
rol
es
fcmovnbe
gs
sub
inc
cmp
lds
or
arpl
arpl
cmp
mov
jnp
stos
jno
outs
mov
mov
or
push
test
gs
xor
add
pop
shr
jae
add
outs
jo
mov
aam
ficom
mov
sbb
stc
aaa
jae
in
sub
call
xlat
mov
out
xor
retf
icebp
or
ja
fadd
jae
jns
inc
push
icebp
jmp
in
pusha
sub
jo
repnz
dec
aam
or
data16
iret
mov
(bad)
inc
movs
mov
aam
sub
outs
icebp
inc
jge
jle
or
xchg
dec
in
fild
jae
mov
loopne
mov
cwde
sahf
ret
sub
pop
mov
cmp
dec
or
jle
ror
pop
and
adc
push
pop
clc
inc
push
in
sub
push
push
adc
xlat
cmp
lds
jmp
bound
fisttp
cs
and
xor
dec
or
test
or
push
repz
or
push
pop
xor
fmul
sub
and
xchg
mov
test
pop
mov
cwde
adc
xor
fwait
rcl
neg
mov
les
call
jns
sbb
xor
cmp
push
lahf
aas
push
repnz
loope
mov
scas
movs
xlat
push
mov
loope
pop
fisttp
add
cmc
out
and
ds
inc
jno
inc
cwde
pop
mov
rcr
fistp
mul
mov
inc
adc
dec
cmp
inc
lods
mov
aas
jle
xor
mov
add
call
pop
imul
jo
scas
cmp
xchg
stos
movs
xchg
add
pop
jg
push
sbb
cwde
int3
mov
into
cmps
pop
retf
cmc
inc
addr16
bound
cmp
dec
cmp
inc
and
pop
sahf
jno
enter
jae
mov
stos
ror
ficomp
(bad)
add
sub
div
mov
and
outs
mov
lea
enter
bound
ret
cmp
clc
jle
int3
repnz
add
or
xchg
dec
xchg
cmp
mov
pop
daa
add
xor
mov
ret
mov
mov
jno
xor
lock
dec
dec
mov
push
add
push
sahf
arpl
out
pop
aad
mov
mov
xchg
les
loop
add
and
push
adc
adc
and
loope
fimul
push
mov
dec
lods
cmc
and
icebp
push
sub
add
loope
adc
out
add
call
(bad)
ficomp
loop
or
jae
dec
in
xchg
adc
sbb
retf
mov
xchg
lock
adc
addr16
pop
and
(bad)
in
add
cli
mov
dec
dec
jmp
lea
ins
adc
mov
xor
xor
mov
mov
ins
add
adc
mov
inc
lahf
cmp
addr16
stos
jbe
push
xchg
add
mov
xchg
inc
js
scas
push
int
sbb
add
lahf
xchg
and
cdq
cmp
add
ja
add
int
jns
ficom
scas
inc
sbb
ror
or
cmp
add
pop
out
xor
ret
xor
cmp
in
(bad)
retf
dec
enter
mov
je
adc
jnp
aam
in
outs
rcl
push
adc
jno
cmps
jmp
rol
dec
pop
inc
cvtdq2ps
movs
push
cdq
and
pushf
mov
test
les
shr
and
dec
data16
adc
dec
fnstenv
sub
sub
hlt
sub
enter
inc
xor
rcl
mov
div
mov
adc
aam
in
in
fidivr
ficomp
sbb
or
mov
dec
mov
mov
dec
pop
sub
mov
lods
xor
pop
retf
scas
lods
pop
mov
push
jns
pop
cmps
lahf
loope
(bad)
adc
inc
lea
mov
shr
sti
jae
rcl
cdq
push
mov
add
shl
jmp
cmp
fs
ds
xchg
nop
ins
add
dec
sbb
sbb
push
retf
or
dec
xchg
icebp
clc
jmp
ret
aam
daa
js
jmp
add
push
sub
push
dec
popa
lahf
cmps
not
shl
adc
js
jmp
stos
push
daa
mov
out
ror
out
jp
gs
jno
sub
icebp
retf
mov
dec
mov
int3
pop
sub
jne
cmovno
dec
xchg
sub
cmp
cmps
or
push
into
(bad)
leave
jge
xor
out
mov
adc
pop
and
dec
dec
mov
movs
in
sti
mov
sbb
or
mov
shl
sub
fst
shl
jecxz
in
enter
fnstsw
jge
jp
sub
adc
ficom
out
dec
loop
int3
std
mov
int3
retf
mov
lock
mov
scas
xchg
js
push
and
daa
pop
xchg
inc
mov
imul
xlat
cli
pop
aad
test
dec
call
mov
test
rol
lea
pop
test
jno
xchg
nop
adc
push
or
cli
outs
repz
shl
xchg
sbb
mov
xchg
icebp
cmps
lahf
sub
mov
nop
add
mov
retf
xlat
out
inc
retf
mov
in
loop
repz
add
jo
sbb
and
dec
or
in
mov
std
(bad)
inc
and
cs
mov
dec
cmp
jle
stos
adc
or
sbb
xchg
jl
fnstenv
in
data16
mov
mov
out
test
popf
add
sbb
or
mov
pop
ret
out
sub
pop
jp
mov
nop
test
and
mov
pop
jp
cmp
xchg
mov
outs
add
and
mov
pusha
xor
jle
or
mov
mov
repnz
fiadd
cmp
ror
cmp
sbb
cwde
imul
cmps
jmp
mov
xor
call
dec
ret
leave
adc
out
pop
inc
lahf
jmp
(bad)
in
dec
push
fld
mov
or
or
add
and
lds
leave
or
fwait
xor
pop
int
std
fldz
repz
retf
inc
sahf
push
cmp
push
jmp
mov
in
mov
and
sub
xor
xchg
mov
push
popa
into
mov
adc
pop
leave
inc
xchg
mov
xor
mov
(bad)
cli
js
sub
pop
sub
lea
lea
jmp
jg
xchg
xchg
mov
cmp
mov
cmp
dec
lods
js
mov
lods
pop
addr16
lock
stc
jns
xchg
mov
push
aam
jne
pop
mov
adc
fptan
icebp
ins
loope
mov
sbb
push
out
or
push
les
div
stos
out
xor
cmps
fnstsw
push
push
movs
in
cmps
das
and
jns
sbb
shl
xchg
dec
and
push
mov
mov
jb
add
mov
pop
xchg
cwde
add
xchg
pop
mov
push
cwde
push
lea
ss
stos
jle
jne
or
lahf
lea
in
stc
(bad)
and
stos
push
or
int3
jb
or
sbb
addr16
lahf
js
ret
push
or
push
mov
scas
test
cmps
fstp
mov
xchg
mov
pop
adc
pusha
(bad)
test
mov
lds
cmp
fnstenv
add
jmp
cmps
scas
push
add
pop
push
xchg
push
shr
cwde
mov
sar
add
fwait
cld
pop
pop
fidiv
and
sahf
sub
cmc
hlt
arpl
je
fld
lea
mov
jno
int3
not
dec
mov
mov
imul
aad
mov
bound
xor
retf
adc
dec
fisttp
popa
rcl
and
pushf
hlt
or
push
loope
stos
xchg
adc
cmps
aas
dec
pop
jl
sbb
jecxz
xlat
nop
xchg
xchg
mov
ins
xchg
loopne
loop
cwde
in
cli
xlat
scas
sbb
(bad)
dec
sub
ret
mov
and
xchg
jge
mov
arpl
std
das
movs
dec
jmp
gs
mov
push
mov
mov
or
imul
and
cmc
push
shr
jecxz
cmc
sbb
xchg
and
(bad)
pop
dec
fiadd
fcom
jmp
sub
jmp
ss
push
mov
pop
fisubr
and
jae
adc
ja
or
mov
sbb
pop
cmp
ja
ss
mov
adc
add
push
leave
xor
xchg
mov
add
loope
int3
or
sub
cmc
popf
sbb
sbb
fiadd
ret
js
test
test
push
jb
mov
dec
pop
in
adc
arpl
inc
in
(bad)
test
jp
(bad)
cwde
sub
jle
mov
lea
xchg
mov
jns
test
cwde
ret
sub
sbb
(bad)
(bad)
pop
pop
inc
dec
jae
xchg
repz
inc
jecxz
mov
out
stc
cmps
push
and
in
or
cmp
cmp
in
jmp
jbe
pop
jo
adc
out
sub
and
lds
fild
pop
xchg
clc
pusha
jbe
js
adc
test
lods
jae
mov
xor
mov
add
add
in
rcr
or
cmp
mov
or
mov
cmp
ss
loopne
push
inc
mov
sub
icebp
add
in
jnp
xor
stc
mov
popf
nop
dec
dec
popaw
jmp
sub
in
hlt
call
sbb
jp
ja
mov
jp
jae
add
inc
jmp
xchg
jb
ror
in
loop
and
mov
out
mov
mov
lods
repz
mov
(bad)
jmp
gs
(bad)
cdq
jbe
lods
ins
fwait
aas
std
ds
ret
out
pushf
and
sahf
neg
jbe
scas
adc
xchg
jp
xchg
das
push
dec
xchg
mov
(bad)
pushf
mov
push
push
mov
arpl
adc
ds
adc
fstp
sti
push
mov
leave
jle
std
push
fldl2e
das
adc
addr16
push
jmp
or
aaa
push
das
jb
dec
in
cdq
in
mov
test
stos
push
mov
dec
bswap
mov
or
sahf
dec
cmp
ds
push
mov
or
jae
out
mov
mov
jg
mov
mov
mov
jmp
ret
mov
shl
fdivr
fmul
imul
jge
jl
xchg
sbb
pusha
add
xchg
push
aad
cmp
jne
xbegin
push
inc
aas
jb
rcl
sbb
imul
add
les
inc
fnstenv
leave
cwde
jle
jbe
or
pop
cmc
fisubr
xor
out
pop
xor
sub
hlt
cmp
jle
popf
mov
dec
fs
leave
mov
fidivr
cmp
rcl
lea
stos
cmc
adc
outs
xchg
stos
test
and
add
ds
mov
aam
out
cwde
cmp
outs
cli
call
mov
out
push
mov
or
or
sub
adc
bound
or
fiadd
aas
cmp
push
jnp
mov
adc
ficomp
pushf
repnz
mov
add
rcr
pop
ja
(bad)
push
inc
ror
sbb
fcomip
mov
mov
cli
(bad)
aam
daa
add
and
push
test
dec
cwde
xor
mov
or
mov
add
jl
jb
ins
iret
lods
call
jbe
mov
leave
outs
cmp
out
inc
jbe
cmp
jge
dec
and
inc
xor
sub
inc
ret
sbb
inc
mov
fs
and
in
mov
jmp
pushf
ins
lea
adc
or
repz
add
and
cdq
in
or
js
(bad)
(bad)
mov
dec
je
jge
jg
or
repnz
xor
adc
loopne
dec
test
cmps
sub
stos
sub
add
mov
leave
retf
push
(bad)
js
xchg
jne
fcmovnbe
ret
ja
mov
aad
sbb
jmp
ins
cmp
sti
mov
pop
dec
jmp
mov
inc
test
(bad)
call
in
xchg
inc
jecxz
int
je
push
pop
jo
mov
xchg
xor
mov
dec
fnsave
cmp
pop
lea
jle
cmps
in
cmp
(bad)
xchg
call
into
sub
fidiv
sbb
sub
(bad)
addr16
fstp
sub
test
adc
ds
xlat
adc
repnz
jl
rcl
adc
popa
dec
ret
je
adc
mov
sbb
push
jnp
jle
out
jne
mov
push
dec
and
call
jnp
pop
(bad)
mov
or
out
loop
mov
ret
jns
xor
addr16
cmp
popf
jg
inc
(bad)
mov
imul
mov
aaa
jecxz
fdecstp
addr16
test
clc
mov
or
popa
jb
ret
repnz
xchg
int
sbb
loop
sti
sbb
and
or
pushf
xcrypt-ctr
cmps
fstp
fcmovnu
xchg
fdivr
xchg
pop
neg
jecxz
sbb
push
xchg
cli
adc
mov
fadd
cmp
sbb
fdivr
adc
xchg
cmp
sub
fdivr
add
sbb
cli
out
in
and
sub
loop
sti
je
dec
add
push
(bad)
adc
or
sbb
iret
inc
dec
cmp
mov
mov
push
fcomip
inc
sbb
loopne
jae
inc
xchg
or
mov
xchg
cdq
adc
pop
sub
sbb
fs
sbb
shl
xchg
pop
pop
fisttp
sub
sub
pusha
dec
or
mov
leave
out
dec
pop
jle
retf
jbe
pusha
(bad)
hlt
icebp
mov
cwde
xor
mov
or
sub
repnz
mov
fsub
and
leave
test
das
jno
cmp
sar
xor
stos
push
jb
mov
jg
retf
(bad)
hlt
pop
jmp
aam
int
pop
push
or
mov
(bad)
fiadd
ds
jle
aad
push
jns
xor
rcl
adc
and
or
stos
mov
das
mov
(bad)
enter
sub
cmp
(bad)
jge
imul
out
fld
inc
movs
jmp
div
scas
scas
and
push
inc
imul
in
lahf
cdq
push
jnp
cmp
pop
nop
push
and
cmp
mov
sar
push
cmps
out
push
pop
jmp
mov
popa
xchg
fs
lahf
push
repz
cmp
div
jno
aam
(bad)
jle
mov
xlat
dec
(bad)
and
xchg
xlat
xchg
cmps
(bad)
and
(bad)
rcr
add
(bad)
retf
add
jmp
jno
out
cmps
outs
xor
jmp
and
call
jo
push
cmp
call
or
addr16
pop
in
imul
rol
(bad)
pop
jmp
xor
mov
mov
jns
repnz
(bad)
xor
ds
or
inc
or
and
ja
xlat
lods
add
push
(bad)
hlt
mov
pop
jl
test
loope
jmp
pushf
mov
outs
retf
outs
or
jp
fwait
and
cmc
data16
stos
ret
enter
ror
mov
imul
rcr
call
jne
dec
scas
stos
mov
and
outs
and
jg
std
mov
add
rcl
fsubr
jb
mov
arpl
out
sbb
mov
jmp
mov
mov
frstor
stos
sub
into
pop
pop
test
pop
pop
repnz
mov
jle
je
mov
fidiv
sahf
punpcklbw
sub
xlat
in
idiv
(bad)
(bad)
das
push
movs
add
out
pushf
dec
xor
or
int
push
adc
aad
fmul
(bad)
pop
push
or
mov
ret
xor
jle
ret
push
iret
and
xchg
scas
xor
loop
addr16
and
outs
cmp
cmp
xchg
mov
mov
sub
adc
or
out
cmp
iret
or
or
(bad)
outs
jns
cld
scas
pop
cs
(bad)
jae
xchg
dec
mov
xor
inc
dec
pop
dec
loope
out
scas
xchg
mov
pop
push
pushf
out
ins
mov
pop
adc
cmp
test
imul
mov
cmc
mov
shr
mov
ja
cmp
ja
push
imul
pop
data16
dec
xlat
out
jle
sub
cli
sub
jno
mov
retf
ds
imul
imul
int
jmp
mov
sub
jecxz
(bad)
mov
hlt
xor
xchg
inc
dec
mov
rcr
cmp
(bad)
cwde
push
jg
mov
pusha
xchg
mov
inc
cmc
test
rcl
mov
repz
out
in
jno
inc
xchg
mov
mov
ret
mov
jbe
dec
outs
xchg
pop
das
dec
mov
jecxz
xchg
sub
icebp
imul
pop
mov
loope
push
dec
aad
xor
mov
push
cmp
push
push
ins
cmp
inc
mov
repz
inc
lods
repnz
loop
out
adc
xor
retf
adc
inc
loopne
mov
div
(bad)
sbb
mov
sbb
jmp
sub
or
repz
xchg
cmp
ins
mov
push
pop
and
dec
mov
mov
movs
xchg
push
lahf
pop
cmp
pop
div
(bad)
or
(bad)
js
xor
jae
mov
fisttp
mov
lds
lock
int3
(bad)
mov
data16
dec
xor
sbb
cdq
(bad)
std
mov
arpl
int3
adc
push
inc
push
push
fxch
mov
shr
enter
iret
rcl
or
es
cmp
dec
push
adc
iret
js
sbb
into
mov
mov
fcmove
xchg
mov
ret
push
jge
(bad)
cwde
mov
pusha
scas
popa
mov
call
jns
and
add
popf
std
mov
jo
pushf
fistp
lods
push
enter
sbb
(bad)
push
das
shl
fldcw
mov
loop
pop
and
jno
je
clc
mov
jnp
mov
(bad)
push
mov
std
jno
test
shl
test
call
jg
cwde
pop
mov
xor
fld
leave
pop
dec
mov
mov
cld
test
jg
sbb
sbb
mov
pop
shl
dec
ficom
fwait
sbb
fwait
jmp
repnz
mov
popa
xchg
imul
and
daa
je
mov
pushf
out
cmp
push
sub
dec
xchg
repnz
add
stc
imul
push
std
pop
sbb
idiv
pop
mov
or
jne
outs
sub
repz
ja
fld
jmp
lock
out
mov
mov
jmp
arpl
xchg
ret
mov
stos
or
cwde
xchg
push
inc
mov
aas
bnd
cmp
jge
xor
outs
std
in
scas
jl
not
jb
push
push
xor
ret
mov
dec
fnstcw
data16
xchg
ins
int3
popa
push
xlat
es
mov
or
call
jns
(bad)
mov
pop
sbb
aad
aas
jge
sub
movs
clc
cmp
add
stos
or
sbb
pushf
ins
loop
outs
inc
mov
(bad)
(bad)
xchg
add
mov
sub
dec
sbb
ja
sub
fcom
add
dec
ins
push
fsubrp
pusha
adc
mov
in
ins
and
mov
les
lea
jno
loopne
xchg
test
ret
push
test
jae
mov
test
jl
mov
sub
push
test
iret
sbb
out
rol
out
add
push
stos
inc
adc
lock
jnp
nop
inc
dec
fild
cmps
sti
jl
daa
std
in
mov
pop
cli
popf
jg
test
lahf
js
pop
test
sbb
xor
mov
jno
fmul
lds
or
mov
in
test
test
ret
dec
sub
mov
sub
fdivr
inc
lock
imul
pusha
xor
dec
imul
jecxz
sbb
loope
push
lock
mov
repz
aam
inc
loop
push
pusha
xor
cmp
fbld
mov
push
ja
mov
pop
cmp
adc
or
pop
es
stos
or
adc
xchg
idiv
stos
cwde
jge
call
sub
pop
fldz
popa
push
mov
jno
mov
out
loopne
rcl
sti
fwait
stc
aad
into
xchg
mov
mov
stos
je
pop
mov
xlat
test
nop
mov
inc
inc
int3
loope
popa
repz
or
xchg
xchg
sbb
adc
outs
fiadd
xor
xchg
out
mov
ds
cdq
pushf
pushf
out
jne
xlat
dec
xchg
ret
(bad)
cdq
push
jmp
mov
sub
xchg
test
fwait
pop
sar
je
lods
data16
cmp
mov
std
sar
mov
mov
pusha
fwait
loopne
mov
or
jno
hlt
lods
jmp
retf
popa
xchg
sbb
retf
sub
mov
push
xor
scas
dec
lea
inc
or
push
addr16
pop
popa
xor
into
inc
jns
or
fisttp
imul
mul
pop
je
aad
lock
fistp
xchg
addr16
mul
arpl
rcr
mov
xchg
dec
and
fst
fist
fdiv
mov
dec
iret
xor
xlat
cmp
test
pop
ror
pop
dec
scas
pop
scas
lods
sub
sub
call
jae
movs
mov
cmp
shr
inc
(bad)
loopne
aaa
inc
addr16
ss
mov
push
mov
scas
and
adc
pop
scas
movs
dec
sub
rcl
xchg
or
rcr
jp
jbe
sbb
aam
sub
dec
mov
jmp
mov
push
cmp
jle
jge
pop
mov
pop
adc
out
and
jmp
push
pop
aam
fld
push
or
xchg
dec
xor
(bad)
int
mov
jno
ret
or
(bad)
mov
mov
pop
loopne
lods
xchg
sti
mov
ds
adc
out
push
into
or
mov
mov
xchg
add
ret
mov
xchg
push
cmps
cld
mov
call
and
mov
popa
push
lds
idiv
and
adc
add
inc
(bad)
pop
cmps
sbb
test
clc
or
push
mov
sub
adc
jecxz
int
or
int3
xchg
jmp
dec
fiadd
mov
icebp
(bad)
xor
movs
aam
sbb
xor
xchg
rol
(bad)
push
repz
dec
jns
mov
popf
dec
int3
sub
mov
lea
sub
cdq
es
push
mov
jne
mov
cdq
xchg
test
test
daa
(bad)
ror
or
and
sub
push
enter
fmul
cli
rcr
popf
lea
push
cwde
sti
fs
daa
push
fistp
aad
ror
mov
call
push
xchg
ror
mov
and
sub
in
xchg
mov
mov
inc
push
in
sti
sbb
dec
cmp
jg
xlat
shr
push
adc
xchg
fadd
inc
jo
mov
xor
cmc
inc
clc
loop
jne
push
(bad)
std
shl
nop
stos
adc
push
stos
fbld
movs
mov
mov
push
inc
dec
sbb
and
bnd
add
jae
sub
add
test
lds
cmps
lahf
jb
in
dec
sbb
fld
mov
push
adc
mov
into
aaa
mov
loope
js
dec
add
loop
jb
mov
in
adc
and
xchg
(bad)
sbb
fisttp
int3
sti
shr
jp
hlt
scas
xor
fwait
popa
mov
int3
adc
push
cmp
push
and
sub
js
gs
xor
jo
icebp
out
mov
mov
adc
lock
out
rcr
das
retf
xchg
xor
(bad)
pop
pop
adc
mov
in
pop
add
sbb
dec
add
in
add
loope
shl
xchg
jg
outs
inc
cmps
mov
stos
adc
div
ds
mov
cmp
or
dec
mov
push
cmp
ror
adc
js
push
xchg
inc
lahf
dec
sahf
or
lock
test
jp
lock
test
dec
pushf
xchg
jecxz
movs
adc
jmp
rcl
scas
dec
(bad)
pop
loopne
mov
cdq
mov
pop
add
push
mov
ror
pop
fstp
pop
leave
jns
shl
mov
nop
sbb
pop
leave
or
pop
pop
test
and
cmps
xchg
cmp
xchg
xchg
push
pop
adc
rcl
jo
cld
pop
loop
movs
test
dec
sar
sub
es
or
jle
xlat
shr
xchg
int3
mov
mov
xlat
fnstsw
pusha
sti
cld
not
fs
loopne
call
dec
lock
push
pop
jle
pop
inc
retf
sub
sbb
mov
mov
jmp
inc
jbe
xlat
sbb
call
sahf
(bad)
sub
adc
xor
mul
(bad)
imul
add
sbb
adc
adc
jge
xor
xchg
inc
repz
into
jmp
mov
fs
(bad)
jmp
mov
mov
and
(bad)
repnz
lds
xchg
jo
jg
mov
mov
cmp
inc
xchg
and
or
mov
pop
cmps
sbb
scas
test
xchg
push
push
add
pop
mov
enter
clc
test
jp
adc
std
add
mov
mov
sbb
and
xchg
dec
xor
mov
(bad)
cli
xor
stos
push
and
sbb
adc
les
xchg
or
ss
pop
xor
cmp
cmp
jb
and
ds
loope
stos
stos
mov
aas
lahf
cld
inc
push
fcom
int3
add
sub
or
test
(bad)
sbb
jmp
test
pop
or
jl
add
jl
jmp
or
add
fcom
xor
push
cmp
or
lods
popf
aaa
push
mov
(bad)
jmp
enter
or
ds
imul
or
mov
cmp
addr16
scas
cmps
das
cmp
pop
das
das
or
stos
je
in
rcl
rcr
dec
inc
mov
push
mov
stc
ins
not
inc
dec
and
popf
ret
pop
or
xchg
das
jecxz
xor
mov
lock
enter
ins
repz
rcl
and
jbe
ins
adc
ins
cmp
int3
outs
outs
movs
out
add
std
fisttp
mov
cmp
pop
enter
sub
div
mov
cmp
pop
push
sbb
push
or
mov
lock
xlat
test
xchg
or
mov
popa
mov
mov
popa
fiadd
sub
leave
and
mov
(bad)
push
mov
push
rcl
addr16
lds
dec
lock
xchg
fild
ret
pop
retf
xor
adc
inc
mov
pushf
push
das
xor
cli
enter
loope
enter
or
into
mov
dec
add
pop
repz
push
xchg
gs
pop
adc
add
imul
dec
push
ds
dec
mov
dec
inc
sti
rcl
daa
mov
dec
clc
push
mov
push
inc
ror
inc
mov
inc
sbb
dec
fidivr
jle
int3
retf
pop
into
mov
sbb
call
inc
daa
ret
aad
cmps
cdq
sahf
mov
sbb
inc
inc
call
fidiv
xchg
jp
add
mov
movs
sbb
sub
test
or
push
pop
push
mov
push
dec
sub
(bad)
pushf
ret
(bad)
pop
push
xchg
mov
sub
imul
push
xchg
jmp
jecxz
in
add
pushf
arpl
jae
imul
ins
mov
inc
(bad)
out
popa
jnp
inc
cli
jo
sbb
mov
mov
fst
and
push
cwde
sub
cmc
es
jg
dec
mul
push
retf
dec
test
mov
and
iret
sti
in
rep
adc
jne
leave
adc
xchg
fcomp
call
or
stos
movs
xchg
mov
mov
add
xchg
call
mov
sbb
(bad)
(bad)
jle
xor
call
and
js
dec
aam
call
aam
hlt
add
jne
mov
dec
call
jnp
iret
int3
ror
cmp
sbb
and
xchg
outs
lahf
mov
rcr
bound
(bad)
out
add
arpl
outs
mov
lds
mov
inc
fst
push
bound
rcr
sti
or
enter
pop
arpl
jo
cwde
aam
aas
test
(bad)
mov
pop
lods
lahf
dec
sub
adc
xor
cmp
ret
out
inc
fcomip
mov
adc
mov
dec
imul
jo
inc
pop
and
sub
push
push
test
inc
lahf
mov
dec
sub
std
lds
push
outs
push
and
(bad)
lock
mov
loop
cmp
cmps
push
lods
outs
test
data16
pop
das
jmp
jnp
xchg
xor
sahf
int3
sbb
outs
test
mul
aas
sahf
adc
pop
lahf
or
test
or
lods
es
repnz
(bad)
into
getsec
mov
mov
(bad)
jno
cmp
(bad)
sub
cmc
ins
cmps
mov
aas
mov
mov
vprotw
rcl
test
leave
scas
push
fimul
(bad)
jae
push
jmp
leave
push
and
mov
sbb
pop
and
aad
sahf
xor
push
imul
bound
iret
minps
pop
es
or
leave
cld
push
dec
(bad)
int
or
mov
data16
test
add
vmovshdup
repz
jne
mov
popf
adc
jmp
and
add
mov
sbb
add
push
test
sub
jle
mov
jbe
jl
sti
fs
ins
jmp
out
icebp
mov
inc
(bad)
neg
mov
sbb
fisttp
std
(bad)
mov
into
inc
add
inc
xor
cmp
in
cmps
jle
mov
int3
xor
mov
inc
dec
fiadd
xlat
pushf
adc
test
fst
data16
bound
int3
test
mov
test
sub
mov
popa
adc
push
hlt
arpl
mov
mov
pusha
ins
(bad)
sbb
cwde
test
cmps
out
jg
xchg
ret
jns
mov
mov
shl
icebp
mov
xchg
xchg
test
push
or
shr
mov
cmps
(bad)
(bad)
nop
add
push
ds
iret
cmp
xchg
shr
dec
data16
pop
and
pop
(bad)
jmp
add
pop
xchg
scas
lock
bound
push
add
mov
dec
pusha
sbb
stos
sbb
dec
ins
(bad)
leave
xchg
fstp
fimul
cmp
push
stos
fdiv
mov
imul
pop
mov
push
fadd
mov
in
retf
xchg
sub
push
cmp
mov
cwde
sub
popf
dec
jmp
cmp
loope
lock
(bad)
xlat
push
push
sub
les
test
pop
xor
xor
xchg
push
and
lahf
jg
mov
outs
push
ins
push
rcl
adc
sub
and
movs
dec
mov
cs
icebp
rcr
pop
ret
(bad)
cmp
sbb
ss
std
daa
dec
sub
pop
jmp
xchg
add
movs
out
xlat
push
pop
jmp
adc
mov
dec
icebp
pop
stos
mov
lock
les
pushf
push
cwde
hlt
jecxz
call
cmp
mov
dec
clc
cmps
sbb
cmp
mov
(bad)
stc
sbb
pop
movs
inc
cli
mov
fld
sub
hlt
aam
xor
mov
dec
iret
scas
ret
sbb
mov
cmp
cli
mov
pop
mov
xor
loopne
xchg
rol
push
push
adc
jg
or
lods
sub
nop
jg
fist
mov
xchg
push
jb
mov
and
push
retf
aas
cmps
mov
pop
sbb
mov
cwde
fldcw
jmp
inc
dec
dec
and
adc
push
popa
fistp
mov
push
cmp
dec
leave
pop
sub
fwait
mov
cmc
test
push
js
mov
icebp
dec
mov
jmp
mov
ins
je
xchg
ret
push
mov
ror
or
out
dec
mov
shr
inc
in
sti
push
cmp
inc
sub
or
mov
sbb
scas
push
popf
push
push
sbb
mov
inc
std
inc
dec
jmp
sbb
cld
inc
lods
add
mov
mov
scas
jle
fistp
bound
mov
mov
push
rcr
(bad)
(bad)
mov
jmp
adc
(bad)
rcl
(bad)
div
icebp
retf
stc
xlat
jmp
outs
mov
jmp
out
jmp
dec
ret
inc
dec
repz
mov
xor
movd
adc
pop
or
and
dec
fcomp
cmp
lods
dec
pop
mov
mov
dec
imul
rcl
call
retf
adc
push
outs
xor
mov
mov
pop
push
adc
aaa
test
popa
loope
fs
call
mov
arpl
repnz
or
mov
cmp
add
adc
mov
daa
xor
jecxz
in
add
push
icebp
iret
mov
(bad)
int
addr16
sub
xchg
arpl
jne
fiadd
mov
and
test
dec
je
cmc
mov
inc
ret
rol
adc
adc
xchg
jmp
inc
mov
xor
cmps
and
inc
hlt
inc
mov
sub
push
push
test
sub
push
sub
xchg
aaa
ins
lahf
xchg
idiv
aam
ds
repnz
frstor
sub
es
std
inc
pop
(bad)
out
into
mov
pop
mov
mov
or
clc
outs
mov
jno
out
repnz
stos
pop
(bad)
leave
mov
or
sub
or
jmp
and
das
(bad)
pop
jo
cs
mov
mov
dec
sbb
mov
cld
mov
sub
test
cmp
gs
shl
mov
(bad)
cmp
ds
lds
cwde
fadd
jbe
cmp
mov
sub
bnd
jb
out
push
imul
(bad)
lods
jno
inc
in
dec
clc
movs
pushf
add
push
adc
ror
frstor
out
inc
icebp
xchg
lods
push
movs
xchg
xchg
pop
dec
ins
inc
(bad)
call
out
pusha
xchg
out
cld
sbb
(bad)
std
mov
cmp
aas
mov
out
scas
popf
mov
fcomp
xchg
into
jo
mov
cmc
ds
ret
mov
push
stos
or
mov
jecxz
sub
push
mov
xor
mov
fld
xchg
lock
mov
outs
sbb
mov
out
repnz
jns
popf
mov
add
mov
mov
push
(bad)
pop
push
or
xchg
sbb
jno
outs
popa
pop
pop
push
mov
sub
pop
push
pop
jg
jns
icebp
inc
pop
fnstenv
cdq
push
cmp
cmp
xor
or
or
xchg
hlt
int3
loop
add
push
mov
loope
ins
inc
push
gs
jecxz
cmp
mov
or
adc
test
shl
and
cmc
push
mov
sub
pop
mov
hlt
mov
mov
push
xor
inc
inc
xor
jle
pop
scas
lods
cmp
ficom
enter
dec
cli
add
sbb
mov
sub
mov
cmp
xor
adc
xchg
outs
mov
nop
jno
loopne
dec
clc
push
mov
mov
push
or
sub
je
lahf
jecxz
cmp
sahf
rcr
(bad)
push
fdiv
hlt
mov
imul
inc
jmp
or
or
jmp
sub
cmps
inc
pop
sbb
fwait
mov
jo
cdq
add
shl
in
jmp
xchg
in
sahf
sbb
jbe
pop
retf
pop
aas
aaa
xchg
sub
push
add
fcom
(bad)
mov
loope
xlat
adc
gs
pop
iret
fwait
jge
adc
in
adc
xchg
test
jg
out
pop
cmps
or
sub
mov
fs
pushf
jns
mov
rcr
mov
jg
not
adc
fwait
mov
retf
cwde
push
jecxz
(bad)
sbb
cmp
push
add
adc
push
push
fstp
out
add
fs
data16
jnp
jl
(bad)
adc
push
and
push
dec
in
imul
cmp
inc
push
rol
fisttp
aad
dec
repz
jmp
cmp
adc
clc
push
adc
add
xor
add
hlt
inc
cmp
dec
pop
inc
loop
xor
cld
fwait
cmp
inc
stos
jb
mov
fild
(bad)
jle
popf
xor
add
dec
(bad)
pop
and
sub
cmp
cmp
iret
pop
pop
popf
pop
xchg
lds
ja
lds
jno
ret
pop
iret
nop
jmp
push
push
sbb
jns
fadd
mov
add
dec
loope
or
aaa
mov
mov
add
sub
inc
adc
adc
retf
sbb
out
sbb
sbb
push
gs
sub
call
fdivr
jmp
add
or
arpl
pop
popf
(bad)
sub
ror
js
pop
jg
dec
and
adc
leave
push
retf
sbb
es
jnp
sbb
shl
jmp
xor
jbe
call
loop
out
into
cmp
mov
hlt
mov
xchg
ret
mov
mov
or
sub
jne
jno
dec
mov
or
adc
dec
jle
fsub
jmp
dec
mov
xchg
les
inc
xor
stc
mov
jae
xor
repnz
pop
rcr
push
les
and
mov
fnstsw
cmp
inc
cld
mov
outs
pop
xor
push
push
pop
xchg
sbb
adc
jg
add
xchg
sub
ja
sbb
addr16
ss
adc
aad
ficom
or
clc
mov
sub
jae
push
mov
inc
rep
std
outs
cmp
jns
push
sub
xor
cmp
retf
call
jns
inc
push
retf
jo
sub
fs
cmp
pusha
or
cld
dec
cmps
out
mov
mov
(bad)
sub
cmps
repnz
jne
pop
es
fistp
arpl
(bad)
hlt
dec
(bad)
sbb
push
and
outs
je
cmp
fsub
(bad)
mov
cmp
das
test
sub
outs
add
inc
push
cli
test
lea
int3
hlt
push
stos
sub
push
retf
lods
inc
and
push
jp
lahf
push
xor
cdq
mov
es
jbe
lds
jp
ret
or
call
push
pop
cmp
pushf
dec
jne
sub
mov
pop
in
(bad)
enter
dec
mov
push
stos
in
or
int
scas
ins
xor
pop
add
mov
ins
xchg
or
xchg
nop
or
aad
popa
sub
xchg
pop
or
arpl
mov
pop
push
push
(bad)
ja
ds
movs
shr
outs
test
mov
ret
xchg
fadd
(bad)
fmul
pop
es
or
ret
jp
fadd
sub
(bad)
sahf
or
jns
cmc
rcr
push
or
in
(bad)
xchg
imul
popa
jmp
push
test
hlt
adc
popa
push
jo
retf
(bad)
(bad)
aas
cdq
out
xchg
fdivr
pushf
mov
stos
into
mov
pop
xlat
jns
(bad)
cli
mov
adc
xchg
xor
fbstp
add
cdq
loopne
jnp
pop
push
cmp
cmp
sub
fadd
inc
xor
outs
enter
sub
call
push
cmps
sbb
or
ret
pop
pop
sub
retf
add
outs
mov
xchg
xchg
jg
push
cmp
fisubr
rol
les
dec
pop
inc
sbb
dec
enter
push
in
and
maskmovq
dec
mov
ret
jecxz
les
and
test
xor
dec
cmp
gs
jo
cmp
mov
jmp
aad
jnp
mov
js
xchg
mov
jo
cmc
aas
or
ds
popf
(bad)
sub
cmp
xchg
xchg
repz
add
jle
sbb
popa
aas
and
cld
outs
repz
lock
int3
add
stc
add
scas
jo
sahf
sbb
pop
push
test
and
sub
mov
jmp
ficom
(bad)
aaa
outs
call
pop
push
jg
leave
ss
sti
jmp
sub
dec
sar
pop
xchg
dec
mov
pop
sub
(bad)
mov
push
mov
push
ret
ror
mov
test
adc
call
repnz
jp
xchg
imul
jmp
sub
sub
lea
test
popa
cld
out
jge
nop
inc
xor
rcl
fld
das
adc
jmp
out
cld
push
mov
ins
xor
cmp
xor
cmp
cs
or
cmp
repz
cs
mov
loop
jae
dec
sub
mov
xchg
aas
or
inc
bound
push
outs
add
mov
cmp
jae
mov
(bad)
xchg
cmp
pop
pop
aad
fimul
fs
pop
sub
jae
dec
in
xchg
stos
jo
fistp
push
sub
dec
jne
push
(bad)
jno
stc
push
je
ret
iret
adc
mov
(bad)
popf
xchg
and
jbe
xchg
ret
sbb
in
push
push
arpl
jl
fist
bound
pop
je
mov
aad
cmp
mov
mov
in
mov
xor
loop
out
(bad)
or
mov
outs
in
jb
inc
dec
imul
inc
push
mov
repz
cmp
test
jle
dec
dec
xchg
push
iret
sbb
in
mov
mov
retf
inc
dec
mov
ss
rol
(bad)
sub
not
sbb
outs
push
add
popa
in
scas
dec
xor
inc
mov
inc
pop
xor
lods
dec
icebp
and
sub
mov
out
adc
leave
daa
push
lock
das
and
dec
mov
jg
mov
and
enter
mov
mov
popa
jne
xchg
cld
cmp
mov
add
mov
cmp
pushf
inc
mov
bound
repz
mov
or
xchg
mov
push
dec
lds
mov
mov
je
shr
rcr
std
lods
data16
mov
call
or
or
jl
pop
into
cs
xchg
cmp
(bad)
rcl
cmps
sbb
mov
idiv
mov
push
push
sahf
xchg
cmps
inc
retf
add
push
rol
test
add
lds
jl
adc
jbe
into
sar
cwde
adc
push
gs
inc
cmc
jl
jo
std
add
(bad)
enter
daa
xor
pop
xor
inc
cmp
and
in
std
mov
out
pop
int
gs
xor
outs
mov
test
adc
or
pop
aas
sbb
fisttp
aam
add
mov
add
test
cmc
jmp
or
sbb
fidivr
scas
and
outs
jecxz
out
jne
xchg
dec
lock
sub
pushf
loope
add
and
test
lahf
jnp
jmp
out
and
pop
add
xorps
es
xor
pop
mov
sub
sbb
mov
pop
bound
idiv
mov
push
mov
xor
jmp
(bad)
hlt
adc
sbb
and
mov
push
mov
sbb
inc
push
or
stos
push
lods
jmp
cmp
jae
jmp
cmp
fisub
sub
push
xchg
push
lea
push
int
fldcw
popa
or
aaa
bound
mov
rcl
dec
loope
add
add
cmps
xchg
mov
fldenv
xchg
int
xchg
sbb
jae
cmp
mov
into
or
dec
shl
ins
iret
sbb
into
nop
mov
call
jbe
fidiv
mov
push
retf
pop
shr
ja
(bad)
shl
jge
xor
loope
xlat
jae
fwait
sbb
push
(bad)
jno
mov
inc
clc
loop
sub
mov
(bad)
mov
mov
pop
sti
jnp
xor
mov
cwde
cmp
(bad)
ror
mov
jnp
add
push
imul
test
or
jne
sbb
mov
cmps
pop
out
stc
mov
fild
cmp
in
retf
push
div
(bad)
jmp
repz
inc
mov
addr16
icebp
or
aas
push
shl
jnp
out
fisubr
mov
sti
mov
lahf
scas
rol
add
lods
add
scas
daa
movs
rcl
or
sti
or
adc
sti
jae
aas
mov
(bad)
test
js
mov
jno
sti
or
aad
mov
ss
push
and
movs
out
inc
add
inc
dec
sub
and
mov
stos
test
mov
xor
sbb
das
pop
pusha
lock
pop
jo
or
mov
mov
and
int3
dec
sub
xchg
loopne
inc
scas
enter
and
js
adc
add
inc
jbe
rol
pop
and
cmp
jne
in
push
xchg
mov
cmps
enter
dec
pop
iret
xchg
mov
sbb
cmps
mov
movs
pop
fmul
out
add
iret
fadd
fdivr
repnz
cmc
in
xor
std
jo
push
aas
retf
jo
sub
shr
jmp
ins
add
sub
dec
jmp
xor
and
and
or
xlat
pop
mov
addr16
xor
sar
cmps
jp
push
jne
inc
jns
push
xchg
dec
into
mov
repz
xchg
sbb
xor
std
push
clc
stos
loopne
data16
imul
xchg
mov
inc
inc
jmp
movs
sub
mov
js
mov
test
shl
sbb
dec
mov
jge
cmp
fdivr
cwde
or
cdq
fwait
out
lds
cli
and
mov
in
fs
mov
mov
pop
scas
jmp
xor
xchg
jecxz
xor
sbb
clc
xchg
jg
add
cmp
mov
aad
push
shl
pusha
mov
mov
punpckldq
(bad)
sbb
cmp
push
je
sub
mov
fwait
pop
retf
in
push
cmp
outs
loop
cmp
fcmovne
pop
inc
sbb
popf
adc
push
lods
cli
jnp
lods
push
and
pusha
imul
ror
inc
jp
mov
adc
addr16
xchg
push
jns
sub
sbb
inc
mov
retf
(bad)
outs
out
lods
pop
call
mov
pop
jmp
arpl
fidivr
mov
call
popa
inc
repnz
daa
mov
xor
lahf
fistp
mov
aad
mov
xlat
inc
loopne
test
mov
imul
or
jg
in
and
scas
(bad)
dec
mov
pop
lods
clc
pusha
add
add
pop
xchg
xchg
dec
in
out
das
jmp
xchg
sub
xor
cmp
lahf
push
scas
jns
xchg
mov
mov
je
hlt
cdq
add
gs
ss
xchg
arpl
push
dec
adc
add
stos
test
dec
jnp
nop
sbb
and
repnz
ds
into
dec
call
inc
in
aam
adc
shr
out
test
mov
xchg
movs
fsubr
jmp
add
cdq
sbb
cmp
sub
shl
iret
push
jno
shr
and
std
fsubr
mov
pop
mov
(bad)
jge
jno
ret
icebp
cdq
mov
jmp
fmul
push
or
adc
push
mov
ins
or
inc
test
pop
js
and
jle
xchg
lea
sbb
sbb
add
or
pop
or
or
adc
retf
loope
scas
or
or
push
mov
(bad)
std
jg
cmp
mov
pop
push
addr16
rcr
daa
test
fimul
(bad)
sbb
(bad)
nop
lahf
xchg
sub
cld
adc
or
and
cmp
retf
mov
mov
inc
push
mov
aam
ret
add
rcr
mov
adc
or
test
mov
in
mov
hlt
test
imul
mov
pop
mov
jnp
rol
daa
inc
fwait
add
sub
mov
div
mov
fnstsw
shr
shl
jle
sar
stc
xor
rol
xor
add
mov
inc
pop
sub
xchg
cmps
adc
add
xor
jecxz
mov
and
jl
(bad)
sti
push
gs
shl
push
xchg
xor
imul
nop
stos
or
fs
sub
inc
(bad)
xor
std
cmps
movs
clc
int
test
jae
scas
or
test
fst
test
es
dec
in
arpl
push
fwait
or
sbb
and
outs
cmp
cmp
mov
or
(bad)
into
xchg
out
push
fdiv
sahf
cli
scas
call
bound
inc
lea
add
les
cmp
daa
push
pop
stos
xchg
push
mov
and
xlat
and
sub
mov
mov
xchg
not
dec
das
push
ja
pop
inc
repnz
mov
popa
lods
jb
adc
fdivr
adc
inc
xlat
mov
xor
mov
stc
pop
and
mov
stos
scas
mov
aaa
xchg
enter
imul
jle
jns
(bad)
rol
int
jp
jp
imul
push
dec
(bad)
movs
adc
inc
sbb
cmp
cmps
add
and
dec
ret
dec
into
jbe
mov
mov
test
scas
or
lea
push
inc
lods
enter
xchg
div
or
mov
mov
in
and
ss
push
and
inc
aad
mov
push
mov
aad
adc
dec
mov
cmp
mov
push
mov
xchg
fiadd
or
xchg
ret
cmps
and
add
bound
enter
ins
add
div
dec
scas
push
sbb
das
ss
les
shr
push
adc
pop
dec
movs
add
leave
push
cmp
pop
out
loope
cdq
sti
xor
in
add
and
stos
imul
sub
ds
dec
movs
div
add
das
push
push
in
sub
shr
cdq
mov
or
push
test
xor
sub
gs
repz
ins
aam
sub
jmp
aas
sub
mov
push
mov
imul
sub
sti
xlat
in
mov
cli
in
jne
out
and
and
lds
or
mov
int3
sub
aad
fwait
out
push
fsubr
push
ins
aas
cmp
pop
imul
add
pop
add
stos
cmc
(bad)
int
sbb
out
imul
inc
call
push
ins
scas
aam
cli
inc
imul
or
sahf
or
xor
xlat
(bad)
imul
dec
rol
fdivrp
stos
inc
xor
push
pop
adc
fs
das
mov
out
mov
cmp
sub
xlat
xor
in
stos
ins
sbb
call
(bad)
idiv
lock
iret
push
inc
dec
jecxz
mov
or
push
xor
jns
add
imul
push
loopne
jle
adc
cs
imul
jo
aas
or
aas
jmp
cmp
int3
loopne
adc
sbb
fistp
add
xor
inc
mov
jo
retf
pop
clc
adc
xchg
ror
sub
cmp
pop
cwde
cmps
jecxz
mov
(bad)
movs
cmp
(bad)
xchg
and
inc
jmp
xor
repz
cmp
or
inc
loopne
add
sbb
rcr
mov
ins
adc
fild
inc
lds
(bad)
adc
rol
mov
mov
popa
mov
sub
push
jmp
int3
(bad)
fdiv
fwait
xlat
ror
xchg
and
mov
ins
sbb
enter
sub
arpl
sub
clc
ret
pushf
adc
arpl
(bad)
mov
es
xchg
loope
ins
dec
jae
phsubsw
cmps
mov
sbb
cmp
into
and
and
pop
pop
aad
popa
(bad)
jne
popa
bound
lods
bndstx
mov
scas
or
movs
mov
cmp
sub
xchg
cmp
ror
fisttp
xor
sub
scas
dec
dec
or
mov
jns
aaa
std
(bad)
fld
adc
xor
push
les
daa
mov
or
or
sbb
or
sbb
mov
push
or
cmp
pop
aas
icebp
mov
ror
push
add
xabort
sbb
lds
out
sar
xchg
in
xor
jnp
mov
sti
gs
xchg
jb
mov
rol
pop
sub
cmps
retf
xlat
dec
imul
fild
push
mov
iret
in
hlt
push
adc
out
xchg
lahf
xchg
(bad)
sbb
xchg
push
ins
or
(bad)
lods
pop
aaa
or
dec
fsubr
push
mov
mov
movs
dec
(bad)
icebp
movs
and
call
and
jmp
push
out
stos
mov
sbb
fnstenv
ret
lods
(bad)
mov
pop
les
mov
and
inc
jno
lock
pop
mov
sbb
cmps
in
dec
sub
xor
sbb
inc
jne
retf
js
sub
fwait
inc
pop
dec
inc
call
in
test
lock
dec
xchg
push
not
adc
push
outs
xor
mov
jg
stos
nop
addr16
dec
aas
aam
mov
std
aaa
test
sub
adc
out
jne
or
ret
push
sub
inc
loopne
pop
leave
movs
std
push
movs
cmps
push
jge
pop
movs
(bad)
cmp
xor
adc
pop
retf
jmp
gs
mov
sub
sbb
movs
add
pop
xor
add
sbb
ds
mov
or
xlat
mov
pop
push
bound
add
xchg
xor
dec
jns
mov
imul
sbb
lock
jno
pop
and
push
xor
adc
call
loope
mov
push
push
test
pcmpeqb
sub
mov
fldcw
push
ja
push
jnp
push
div
lds
es
mov
call
pop
imul
sub
xchg
les
xor
cmp
icebp
ret
mov
and
lahf
add
push
dec
data16
nop
lock
jecxz
pop
xor
mov
jmp
dec
xchg
pop
mov
sub
add
je
mov
lock
cmp
sahf
cmp
xlat
and
add
outs
mov
jge
ins
movs
xchg
ds
test
loop
push
(bad)
adc
jmp
lock
mov
lock
push
(bad)
push
xor
or
aaa
push
test
pop
das
aaa
cmc
scas
cmc
mov
mov
sub
or
push
bound
bnd
xchg
(bad)
inc
push
pushf
nop
mov
retf
sub
sub
popa
mov
sub
pushf
jmp
sub
xor
in
inc
or
lds
push
shl
cmp
jmp
outs
mov
sbb
dec
pop
test
xor
sbb
mov
ret
shr
rcl
icebp
pop
je
scas
sbb
push
mov
sub
cmp
hlt
leave
push
mov
(bad)
mov
test
in
pop
lods
jecxz
in
addr16
adc
jecxz
sub
fnstsw
daa
aaa
mov
ds
lea
das
mov
push
sbb
xchg
fucomp
adc
ss
lds
or
jnp
cmps
jb
jbe
or
pop
cwde
ins
push
cli
jae
iret
jbe
clc
xchg
xor
and
out
add
lds
sbb
in
pop
or
les
les
add
pop
ficom
mov
jb
pop
mov
push
aam
popa
mov
ret
movs
adc
sub
or
add
ror
push
jle
xchg
mov
(bad)
sti
sbb
xor
(bad)
and
sbb
scas
xchg
icebp
and
out
push
push
cmps
fsub
ret
or
aas
cmps
mov
ret
mov
jl
and
lahf
xor
inc
out
faddp
loopne
into
push
or
adc
jp
dec
xor
movs
mov
adc
test
cmp
sbb
mov
sbb
mov
mov
in
dec
jg
arpl
jb
add
jge
xchg
lock
lods
mov
jnp
mov
shl
in
fwait
out
imul
push
imul
test
daa
ins
mov
rcr
movs
cdq
fcmove
int
movs
fmul
dec
repnz
std
out
(bad)
xchg
popa
sub
dec
outs
dec
or
mov
cmp
(bad)
icebp
push
scas
jmp
test
shl
mov
push
jnp
rcr
jl
pushf
push
mov
pop
lds
sub
adc
dec
mov
clc
sbb
sbb
xor
adc
pop
in
int3
ins
or
pop
mov
std
sbb
or
push
in
xchg
jnp
lods
imul
ret
jge
les
push
aad
sub
mov
rol
into
iret
fbld
loop
adc
(bad)
(bad)
imul
mov
fidivr
push
adc
dec
in
ret
mov
stos
stos
push
xchg
jb
rcl
adc
mov
out
ficomp
xchg
xchg
movs
jne
push
loopne
xor
xor
sub
in
lahf
cmp
aad
jmp
sub
jmp
ins
mov
mov
aaa
arpl
hlt
inc
mov
aas
jge
and
jmp
jl
and
pop
xlat
inc
push
nop
mov
lds
data16
scas
mov
dec
pop
js
pop
xchg
test
jmp
push
mov
jle
add
movs
or
mov
(bad)
cmc
pop
add
fmul
xchg
mov
(bad)
jecxz
jb
popa
ret
sbb
fst
cmc
js
int3
sar
push
out
add
imul
push
jle
jne
push
sar
mov
test
cmp
xchg
mov
pop
ja
shr
std
icebp
add
outs
mov
loope
mov
jl
rcl
mov
fadd
scas
stos
(bad)
fld
mov
xor
xchg
sbb
mov
out
das
sbb
ret
test
jmp
leave
pop
dec
aad
ins
adc
test
scas
retf
stos
or
popa
dec
fcom
lahf
cmc
int3
and
movs
gs
dec
cmp
cmp
(bad)
mov
or
loope
adc
outs
(bad)
outs
(bad)
(bad)
sub
imul
cdq
fcom
sbb
retf
mov
inc
iret
add
stos
or
mov
mov
cli
inc
mov
xor
rcr
inc
inc
push
sub
test
or
repz
idiv
mov
jbe
imul
ds
sbb
mov
std
mov
xchg
adc
repnz
clc
gs
test
mov
jbe
sub
stos
cmps
sbb
jmp
fwait
push
cli
jae
out
jns
lods
pop
retf
jo
jns
pusha
jno
ret
out
jae
adc
xor
pop
popa
adc
adc
cli
push
pop
leave
jnp
cmps
push
in
dec
(bad)
mov
test
call
nop
imul
sar
jg
mov
sbb
xchg
mov
scas
jbe
aam
cmp
cmp
jns
and
ins
or
sbb
mov
sub
repz
(bad)
pop
pushf
cmps
xchg
faddp
leave
xor
popa
sbb
popa
cmps
out
mov
jecxz
sbb
and
in
ds
jge
in
sbb
ror
in
aam
cs
ja
add
pop
lock
ret
test
xchg
xchg
(bad)
sub
cmp
fwait
xor
cmps
int3
in
in
fsub
out
xchg
(bad)
mov
adc
shl
es
cmp
cmp
xor
frstor
xchg
push
imul
fiadd
(bad)
adc
push
test
and
and
adc
inc
add
push
and
jns
enter
add
jmp
(bad)
ds
xor
addr16
icebp
mov
xchg
int
xor
iret
mov
pop
ret
dec
push
in
shl
xor
mov
xlat
mov
outs
jno
or
sub
je
add
push
retf
stos
mov
jmp
fistp
add
idiv
jbe
cmp
mov
sahf
xor
sti
cmp
xchg
mov
pop
cmp
fidivr
not
fwait
ins
cdq
rol
pop
and
or
sti
div
dec
call
scas
fwait
and
mov
aaa
in
mov
push
cmp
mov
fld
stos
jb
cmps
aaa
mov
rol
adc
fadd
and
jp
xor
outs
and
or
inc
fbstp
dec
mov
adc
scas
movs
mov
and
mov
loope
leave
cmp
nop
movs
mov
leave
push
rol
ret
cmp
arpl
cmp
cmc
dec
pushf
push
mov
cmp
mov
data16
pop
sub
rcr
or
jp
sub
sub
dec
ins
add
mov
inc
outs
retf
xchg
iret
xchg
mov
cdq
js
shl
aad
sub
add
(bad)
(bad)
data16
push
test
stos
xor
leave
mov
ss
cmp
dec
lods
inc
mov
stos
imul
adc
cmc
jnp
mov
vpackuswb
xchg
sti
push
sbb
jb
pop
mov
stc
imul
sub
test
fwait
int3
mov
mov
add
cs
jns
add
lock
cmp
and
jl
aaa
(bad)
in
pop
mov
add
out
inc
and
or
xchg
test
dec
push
scas
mov
mov
rcl
pop
mov
jle
jmp
in
enter
mov
cmp
pop
aad
dec
clc
and
xor
pop
sbb
push
cmp
cmp
repz
inc
pop
ja
xor
repz
fs
adc
clc
iret
xchg
cmp
xchg
jmp
sbb
(bad)
pop
jmp
scas
cmp
pop
hlt
fiadd
xchg
fbld
push
loopne
les
push
js
mov
lahf
pusha
out
mov
xchg
jg
dec
call
inc
(bad)
and
repz
ja
into
jecxz
imul
or
(bad)
or
jle
and
dec
test
sbb
lods
enter
popf
sub
sbb
data16
cmp
into
or
push
sub
xor
mov
(bad)
in
pop
ins
mov
sub
test
scas
xchg
fcomi
repnz
imul
(bad)
mov
stc
div
jmp
xchg
sbb
add
pop
sub
icebp
xchg
popa
adc
fwait
movs
dec
mov
fcmove
jae
fnsave
outs
add
bound
push
daa
(bad)
sub
mov
mov
jbe
arpl
sub
(bad)
cmp
fidiv
sub
pop
in
iret
cld
loop
cli
jge
mov
pop
adc
inc
xor
dec
mov
movs
rol
push
jmp
jmp
repz
mov
cdq
jmp
mov
inc
sbb
pop
inc
js
mov
mov
fld
cld
xor
mov
bound
jp
jmp
fincstp
mov
inc
dec
ret
xchg
pop
cs
mov
or
xlat
xor
and
imul
cmp
xor
mov
xor
push
or
jo
ins
dec
test
dec
lods
mov
cmc
in
(bad)
repz
lods
adc
jp
arpl
xchg
cmp
fsubr
xchg
pop
inc
mov
call
or
and
test
js
push
inc
adc
ret
fsubr
inc
scas
mov
test
hlt
inc
xchg
ffreep
out
jae
or
and
cdq
cmp
scas
jg
adc
stos
loop
mov
mov
fldenv
push
shr
ins
test
les
out
xor
loopne
push
and
mov
test
sbb
cs
inc
in
and
cmp
loop
add
jg
test
ror
mul
push
popf
sahf
enter
jo
stos
cmp
ret
xor
fistp
mov
add
ins
mov
sbb
and
and
cs
cmp
rcl
mov
pop
leave
mov
pop
adc
xchg
jle
ds
pop
push
xchg
adc
push
enter
add
test
mov
and
mov
cld
stos
mov
dec
sbb
push
mov
shr
repnz
dec
mov
lock
aaa
mov
and
aaa
push
jne
cmp
mov
cmp
mov
pop
cmps
jl
rcr
push
dec
(bad)
xor
add
into
jb
push
or
les
sahf
dec
lahf
outs
lods
pop
jmp
jmp
adc
push
jnp
out
ja
retf
icebp
fadd
xchg
fld
sar
enterw
cmp
push
pop
aad
test
or
and
ror
push
jle
(bad)
sar
in
push
cmps
icebp
mov
jl
cmp
(bad)
cmp
dec
int3
sbb
popf
test
jbe
mov
sbb
add
out
lods
sbb
inc
xor
movs
fdiv
pop
and
cwde
cmp
or
icebp
scas
push
jb
ja
pop
retf
sub
xchg
push
(bad)
movs
add
jmp
inc
sub
mov
(bad)
std
lods
or
inc
xchg
push
js
ret
cld
cmc
mov
xchg
test
outs
mov
sahf
mov
xor
xchg
enter
adc
mov
enter
push
out
idiv
imul
aam
sub
ins
cmc
in
dec
pop
out
aaa
or
xchg
call
sbb
out
jb
sub
push
gs
repz
popf
mov
pop
aam
retf
jge
shr
xor
push
push
mov
cvtps2pi
sub
in
xor
call
inc
mov
rol
xchg
add
stos
xor
xor
in
sahf
out
jecxz
and
cmp
retf
loopne
push
cmp
cli
js
cwde
sub
xchg
sar
xchg
repnz
push
(bad)
pop
and
or
and
pop
int
mov
popf
imul
fmul
mov
pop
pop
rcr
dec
mov
retf
lea
inc
or
das
xchg
or
sub
fdivr
out
fild
mov
or
dec
push
jmp
int3
outs
(bad)
out
inc
rol
sub
ds
mov
xchg
sub
mov
push
xor
jp
mov
icebp
mov
xchg
ret
push
sbb
inc
pop
out
xchg
mov
cli
cli
idiv
push
loope
ret
hlt
xor
sbb
lahf
popa
and
inc
out
jmp
repz
mov
enter
lahf
aad
mov
xor
pop
or
test
push
push
aaa
xor
imul
push
push
inc
jmp
pushf
idiv
fldenv
pop
nop
xchg
nop
or
push
mov
fnsetpm(287
push
inc
imul
xor
mov
enter
div
mov
(bad)
je
add
call
jb
xchg
or
imul
fsubrp
push
mov
xor
xor
test
fnstcw
mov
and
outs
adc
mov
retf
stos
test
lods
pop
push
push
test
or
mov
add
or
sbb
jle
mov
cmp
cmps
ret
mov
sub
ret
adc
dec
cli
adc
lods
out
scas
imul
pop
pop
idiv
int
inc
fild
pop
mov
xchg
xchg
mov
xchg
int3
mov
cmp
icebp
loopne
and
xor
xchg
cmp
neg
inc
jae
mov
retf
sbb
mov
aaa
arpl
mov
sub
fistp
lods
mov
sbb
cmps
jmp
fwait
cmps
cdq
into
adc
pop
cld
mov
js
sub
popa
icebp
xor
les
mul
(bad)
and
jl
aaa
pop
mov
into
loop
or
cmps
nop
cmp
xor
iret
sbb
rcr
hlt
add
and
mov
popa
loopne
sub
sub
jo
xchg
and
ror
test
jno
fimul
pop
dec
pop
xchg
push
mov
outs
adc
addr16
lods
test
push
sbb
and
(bad)
xchg
test
cwde
add
cdq
adc
test
adc
or
pop
jmp
sbb
mov
jmp
ret
inc
or
jmp
inc
ja
cmp
dec
sbb
and
xchg
int3
sub
iret
inc
jne
imul
cmp
jns
fcom
inc
mov
shr
sbb
retf
fld
into
addr16
movs
adc
repz
pop
mov
jnp
movs
mov
int3
out
jle
cld
cmp
les
mov
mov
sbb
or
cld
sub
call
inc
enter
add
jns
sbb
lds
sbb
inc
lods
jp
fcom
sbb
xchg
scas
in
ret
push
mov
lods
not
loopne
int3
clc
pop
(bad)
sub
dec
push
ret
(bad)
out
imul
popf
jg
imul
and
mov
ds
idiv
mov
ret
push
jp
and
jbe
pop
mov
ins
lods
fst
xchg
mov
rol
popf
jo
lods
in
(bad)
sbb
push
int
int
stos
movs
retf
pop
jnp
push
lds
frstor
out
popf
inc
dec
xchg
test
push
pop
outs
clc
mov
inc
cmp
dec
adc
cmps
ds
cmp
sub
or
pop
pop
xor
jecxz
retf
test
xlat
rep
pop
in
(bad)
and
iret
movs
jg
movs
mov
fbstp
retf
nop
sub
push
rcr
test
mov
push
aas
jns
mov
mov
mov
mov
jae
inc
adc
mov
cmp
push
lods
pop
mov
cld
cmp
outs
(bad)
adc
aas
mov
jmp
jmp
retf
cs
repnz
aam
xor
je
retf
idiv
(bad)
fiadd
add
je
push
addr16
ins
lods
jecxz
loope
push
dec
cli
(bad)
adc
loope
mov
icebp
xchg
adc
xor
fcomip
(bad)
and
mov
sub
cmc
leave
jmp
ret
adc
lods
lods
inc
jns
inc
xor
jb
fwait
bound
outs
push
xchg
xor
pusha
out
pop
mov
adc
(bad)
das
cmp
mov
jl
in
push
sahf
push
jge
mov
enter
scas
jp
mov
mov
sbb
dec
pop
push
jb
cli
mov
sub
xor
sbb
add
lods
in
in
outs
cwde
jp
lds
adc
add
and
xor
sub
mov
sbb
xchg
push
lds
add
mov
dec
in
call
hlt
sti
or
cmp
lahf
adc
sti
rol
cdq
jne
imul
div
add
xor
lahf
or
retf
jno
imul
inc
jle
ss
or
iret
mov
sbb
mov
cmp
cmp
and
ret
pop
mov
int3
mov
mov
cmps
in
lods
push
mov
ret
inc
inc
icebp
cwde
shl
shl
pop
mov
imul
shl
inc
mov
std
leave
jae
stos
dec
ins
xlat
in
sbb
sbb
jmp
jp
xchg
loop
arpl
inc
sbb
sub
gs
test
and
mov
call
pop
int3
sar
jbe
ins
xchg
xor
adc
inc
enter
out
jae
loopne
inc
xor
sti
jnp
out
mov
add
leave
and
gs
xchg
add
jle
ret
repnz
jle
cmc
jbe
loope
jb
(bad)
adc
stos
shr
cmp
cdq
(bad)
vprotd
nop
fsubr
popf
dec
xor
lock
mov
xor
cmp
int
lock
cmp
dec
mov
xchg
or
sub
cdq
mov
sub
call
cmp
jne
xor
cmc
sbb
push
sub
fnsave
aam
cdq
ja
fidiv
sub
mov
push
and
je
or
push
repz
fdivr
inc
addr16
neg
sahf
in
bound
sub
mov
cwde
sub
clc
cmps
add
jp
div
cmp
sub
xor
test
aaa
stc
jne
aas
or
add
(bad)
std
(bad)
xor
rcr
and
addr16
call
mov
mov
mov
test
out
push
cmp
arpl
js
shl
fst
jmp
lods
jbe
jno
xlat
sar
xor
mov
sbb
bound
ja
or
fld
pushf
pop
lahf
xchg
mov
pop
cmps
mov
call
jl
(bad)
and
and
and
jo
(bad)
fisub
inc
pop
pop
add
jne
iret
inc
scas
cli
aam
xor
xchg
in
stos
cdq
in
push
cld
pop
push
xchg
mov
(bad)
int3
mov
pop
es
aas
test
dec
inc
dec
les
xor
jmp
shl
pop
xor
dec
enter
(bad)
mov
fsubr
je
es
mov
sbb
ja
or
mov
aaa
cld
fstp
outs
out
not
xlat
mov
pusha
mov
inc
rcl
and
icebp
mov
adc
mov
inc
in
sbb
push
mov
xor
inc
mov
out
and
sbb
int
and
jmp
add
cmp
xchg
loopne
mov
mov
scas
adc
xor
imul
leave
ret
(bad)
cmps
out
bound
popa
push
xor
enter
jge
daa
popa
icebp
sbb
or
ficom
(bad)
push
add
sti
sub
daa
add
and
jo
ficomp
mov
mov
movs
and
pushf
pop
pop
mov
lods
test
out
ret
dec
jbe
imul
inc
daa
jno
repz
sbb
cs
in
and
cwde
dec
sub
jo
data16
cdq
sbb
push
call
mov
in
(bad)
jmp
add
pop
push
test
test
fimul
iret
cwde
cmc
loop
(bad)
sbb
popf
(bad)
stc
jbe
fistp
adc
mov
adc
or
push
pop
push
adc
pop
mov
xor
(bad)
inc
or
stos
cmp
test
pop
sbb
shr
aaa
(bad)
mov
in
xor
pushf
xchg
ds
es
jge
push
add
xchg
outs
fbstp
imul
ret
push
mov
imul
fwait
or
add
adc
push
out
and
push
xchg
inc
xchg
test
data16
aam
stos
push
(bad)
clc
icebp
(bad)
hlt
retf
adc
mov
in
pop
pop
stos
jg
push
pop
movs
or
inc
mov
adc
add
in
sbb
add
mov
cwde
test
push
cmp
mov
jo
and
and
pop
pop
out
pop
sahf
ins
pop
cmps
mov
scas
aad
jb
xor
cmc
pop
mul
mov
iret
mov
and
cli
jae
or
jg
inc
and
imul
inc
adc
stos
cmp
fidivr
out
jecxz
outs
add
sbb
rol
mov
clc
ins
out
mov
sub
in
not
ror
adc
lods
in
pushf
push
aas
mov
sub
icebp
aam
(bad)
iret
scas
cmovno
test
xchg
sub
sub
push
in
(bad)
jmp
leave
cdq
outs
sbb
inc
daa
xor
mov
aam
sub
shl
jne
hlt
xlat
xchg
ret
xor
test
adc
adc
push
or
pop
cdq
jbe
shr
in
sub
push
test
push
lock
cs
stc
call
(bad)
daa
test
jae
adc
mov
fisttp
(bad)
out
fst
in
cmp
test
xchg
mov
arpl
shl
das
push
push
dec
adc
scas
scas
stc
cwde
mov
out
(bad)
xchg
nop
cmp
test
inc
movs
nop
std
out
inc
repz
or
sub
js
mov
in
imul
test
jbe
fsubr
jbe
clc
shl
aad
(bad)
sbb
xchg
paddsw
ror
in
mov
and
mov
sub
aas
lock
jmp
mov
(bad)
les
mov
jae
(bad)
mov
sbb
cmps
pushf
jbe
jnp
repnz
out
mov
les
out
test
in
rcl
xchg
lods
outs
(bad)
mov
jnp
(bad)
std
jmp
jne
(bad)
lods
(bad)
cmc
or
loopne
and
pop
jmp
bound
inc
push
pop
add
fisttp
xor
mov
adc
ss
mov
mov
inc
fnstsw
cmp
scas
aas
lods
mov
inc
ds
dec
jmp
and
mov
call
ss
lods
adc
xchg
sub
scas
scas
cs
xchg
mov
cld
mov
cld
xlat
cli
add
pushf
fcomp
xchg
xchg
mov
push
jmp
iret
inc
call
test
cmp
lds
pop
int
loopne
add
(bad)
xchg
pand
dec
jo
pop
pop
jmp
leave
push
es
mov
push
and
outs
stos
shl
sete
cli
adc
in
push
jb
adc
cmp
and
shr
inc
mov
test
cmp
aas
(bad)
fmul
or
dec
and
into
cmc
adc
es
dec
dec
sub
nop
sbb
enter
mov
in
outs
jnp
mov
rol
aam
test
xor
xor
mov
out
pop
in
pop
int
mov
xchg
ja
jmp
cmp
jbe
mov
inc
arpl
pop
pushf
(bad)
mov
ins
pop
jecxz
in
aas
push
jb
rcl
dec
retf
iret
xchg
retf
mov
stos
and
adc
jmp
xchg
out
fst
pop
(bad)
fbld
sbb
mov
jo
push
inc
cmp
xchg
lods
mov
inc
lahf
ins
arpl
and
dec
in
retf
dec
lods
out
jb
stos
adc
jmp
or
sbb
aad
bndldx
call
lods
add
sub
mov
jb
call
xor
xchg
push
div
and
mov
push
and
jae
mov
jbe
cld
les
aam
fld
fcmovb
lock
pop
mov
pop
push
sbb
or
sub
(bad)
mov
out
mov
cld
sbb
fdiv
mov
mov
mov
xor
repnz
dec
jp
adc
in
mov
out
push
sbb
cmp
sbb
xor
out
mov
mov
dec
jno
in
push
pop
outs
sub
and
mov
push
or
fmulp
imul
pusha
sbb
ret
inc
imul
mov
(bad)
bound
mov
fld
call
nop
aam
ins
cli
lods
push
loopne
sub
sub
xchg
mov
ret
inc
mul
test
shl
cwde
cs
cmps
lods
push
dec
sbb
cmp
je
jo
out
xchg
ret
ja
sub
in
push
inc
add
inc
fstp
mov
loopne
push
push
fs
es
jp
cs
adc
shl
dec
jle
(bad)
add
inc
test
adc
jp
push
mov
call
xor
xchg
les
fwait
jmp
aam
stos
leave
mov
mov
pop
setl
ret
dec
outs
mov
jnp
fs
add
adc
outs
push
add
mov
stc
or
lea
(bad)
fld
lods
aas
in
mov
sub
sbb
adc
loopne
fdiv
rol
lock
pop
jbe
push
out
es
sub
call
les
ror
ret
pop
xchg
loop
popf
mov
jle
leave
and
mov
es
push
xchg
mov
fs
cmp
xor
cmp
pop
cmp
fcmovu
cmp
mov
and
shr
mov
(bad)
jne
ins
test
mov
mov
adc
or
popa
mov
push
ror
test
push
pop
jecxz
aaa
dec
mov
test
xchg
dec
jne
jb
movs
ins
push
pop
pop
inc
or
into
out
jp
cmps
push
xchg
frstor
into
push
cmps
ins
imul
or
bound
mov
jecxz
(bad)
fisttp
es
aad
xlat
sbb
mov
inc
pop
xchg
je
pop
arpl
dec
fnstsw
arpl
pop
(bad)
int3
lock
xchg
iret
jo
aad
sub
(bad)
jl
out
adc
popf
xchg
or
mov
sbb
jl
dec
imul
mov
dec
pop
gs
mov
(bad)
xor
dec
in
out
and
push
sbb
movs
jp
add
cmp
scas
push
xchg
aas
aaa
inc
ret
mov
sahf
(bad)
lds
dec
aad
nop
repz
sub
jno
pop
jmp
fist
cmp
jmp
push
ret
xchg
hlt
dec
sahf
xchg
or
scas
xchg
jno
leave
xchg
ror
std
pop
mov
sbb
sbb
push
(bad)
mov
inc
or
imul
int3
and
mov
cmp
sbb
(bad)
(bad)
in
pop
cs
mov
or
sbb
add
fwait
jne
mov
jne
call
std
inc
imul
iret
add
push
inc
xchg
aaa
xchg
clc
stc
cld
push
or
mov
(bad)
enter
out
mov
inc
ret
outs
mov
lock
jns
lea
pusha
mov
inc
retf
call
ja
mov
sar
pop
pop
out
(bad)
fwait
add
loope
add
xchg
mov
mov
inc
push
das
pop
icebp
jg
mov
out
jp
fdivr
mov
fld
mov
cs
(bad)
or
ss
or
addr16
fs
mov
inc
setnp
add
add
loopne
xor
adc
inc
and
jo
call
inc
ins
outs
mov
xchg
push
and
mov
rcr
cmp
mov
jbe
js
aam
push
sbb
mov
outs
(bad)
mov
sti
or
in
mov
jmp
pop
add
xor
pop
in
ds
(bad)
fist
xchg
dec
clc
sbb
adc
fwait
test
inc
sbb
fsubp
mov
mov
push
jl
outs
or
xor
and
in
stc
inc
das
mov
mov
sbb
jmp
or
les
enter
(bad)
(bad)
dec
lea
in
add
xor
in
shr
hlt
cmp
daa
pusha
shl
inc
sbb
ret
and
aas
imul
adc
repnz
or
mov
push
les
inc
retf
add
fadd
enter
and
xchg
addr16
imul
jmp
or
fcom
sbb
sub
jmp
xchg
and
adc
fwait
xlat
scas
ret
repnz
mov
nop
mov
cmps
mov
fsubr
xor
sub
cmp
dec
dec
lds
pop
out
outs
xor
daa
adc
stc
js
jg
mov
aad
push
repz
mov
xor
gs
ret
dec
jno
repnz
jbe
push
xchg
jnp
scas
xchg
mov
mov
jb
mov
pop
cli
mov
idiv
rol
sahf
xor
cmps
cmp
pop
push
and
out
mov
adc
pop
xchg
adc
lods
pushf
sbb
mov
and
inc
std
fld
cmp
push
or
or
jo
rcl
xchg
xchg
inc
lahf
mov
clc
xor
popa
js
jnp
xchg
and
push
mov
add
js
retf
inc
aaa
add
adc
xchg
outs
mov
int
stc
movs
mov
into
add
jmp
test
sub
test
inc
sub
jbe
fmul
pop
(bad)
cmp
call
sar
add
adc
xchg
jns
inc
sub
inc
cs
retf
mov
lods
and
daa
not
ficomp
jno
sbb
adc
or
jae
cmps
inc
pop
mov
jmp
ds
jmp
pop
pop
sbb
and
cmps
mov
out
pop
inc
or
mov
cmp
dec
out
xor
pop
sbb
aad
sub
sub
popf
push
pop
xor
adc
pop
xchg
imul
fdiv
jbe
lods
(bad)
push
inc
movs
or
mov
out
pop
shr
sub
adc
inc
push
out
fld
or
cmps
in
stos
loopne
pop
aam
jbe
ja
(bad)
ffree
ins
loop
lds
repz
cld
add
push
add
cmps
jns
mov
fwait
in
cwde
or
je
loopne
aas
inc
xchg
pop
sti
or
lds
add
push
push
pop
or
pop
lahf
add
jp
push
out
xor
fdivrp
cmp
sub
or
add
pop
inc
xlat
test
mov
inc
std
shl
ds
and
das
fs
daa
or
xor
jnp
fidiv
loopne
cmps
xor
ret
inc
mov
inc
lods
fwait
mov
inc
sbb
mov
xor
adc
or
arpl
out
addr16
cmp
inc
in
fdiv
xor
ins
pop
inc
retf
retf
movs
dec
sub
fisttp
dec
or
scas
pop
cld
add
iret
cld
cmc
shl
xchg
shr
sub
popf
pop
fcom
jmp
test
retf
mov
popaw
imul
and
mov
pop
out
cmc
fisubr
aas
(bad)
rcr
xor
sub
popf
test
stos
pop
pop
xcrypt-cbc
cmps
shl
(bad)
cmp
xchg
iret
movs
das
sub
sbb
mov
aas
add
fst
std
loope
push
push
xlat
jecxz
cdq
movs
fmul
mov
push
aad
inc
cmp
push
test
mov
jge
jb
popa
inc
push
cwde
push
xchg
and
dec
stos
mov
jl
xchg
mov
sahf
pusha
movs
int3
and
repnz
sbb
sahf
push
mov
xchg
pop
mov
and
popf
inc
int
mov
push
dec
pop
mov
imul
(bad)
(bad)
mov
pushf
pop
and
adc
mov
sub
mov
sbb
out
xchg
jnp
daa
adc
inc
into
repnz
mov
cmc
push
push
jno
push
inc
cdq
adc
mov
mov
stc
adc
mov
jbe
pop
inc
mov
xor
mul
jo
xor
movs
pop
push
test
lods
xor
add
inc
cmp
or
ret
pop
outs
pushf
mov
dec
and
movs
in
pushf
pop
out
xor
fwait
mov
jns
test
push
add
stc
popf
ja
std
sub
push
xchg
cmp
ja
call
div
adc
fcmovnu
xor
jo
(bad)
stos
mov
mov
jg
dec
xchg
adc
test
sub
push
mov
adc
mov
leave
std
adc
test
pusha
mov
push
loop
inc
cmps
and
dec
sbb
sbb
jae
dec
(bad)
sar
dec
xor
sub
xchg
repnz
icebp
jl
jb
scas
repnz
push
or
or
jb
into
jns
mov
or
dec
push
test
in
jmp
je
inc
aad
and
fbstp
popf
or
lock
pop
and
jbe
retf
mov
neg
pop
push
lahf
mov
xchg
out
xchg
std
stos
call
xor
inc
dec
je
outs
fbstp
rcr
outs
mov
dec
jge
popf
xchg
or
rol
mov
pop
mov
fisub
cli
fs
xor
clc
bound
push
sar
cmp
loope
inc
jl
aad
push
fwait
(bad)
scas
repnz
ds
dec
add
push
movs
cmc
jp
stc
dec
retf
mov
bound
das
xor
xchg
jne
scas
test
aam
jmp
push
ds
mov
sub
inc
push
(bad)
sbb
(bad)
sub
mov
cmc
pusha
xor
retf
sub
sbb
imul
(bad)
das
fcmove
not
lock
sub
or
jns
add
push
(bad)
hlt
(bad)
xlat
push
test
outs
cs
pop
call
or
retf
mov
in
mov
js
ins
ret
outs
xlat
(bad)
cmp
jae
movs
jmp
repnz
stc
mov
pop
test
lods
mov
or
mov
xchg
ret
jnp
js
shl
loope
or
or
xor
or
pop
add
mov
ret
push
fld
cdq
mov
sti
mov
mov
adc
xchg
loope
mov
stos
jbe
pusha
sbb
outs
dec
jnp
and
inc
dec
jg
pop
(bad)
mov
pop
fwait
add
frstor
call
xchg
cli
xor
pop
stc
retf
add
cli
adc
xor
loopne
(bad)
loope
xor
cmp
mov
dec
or
and
xchg
mov
fs
ss
adc
mov
enter
inc
xor
xor
leave
jmp
scas
add
lea
dec
mov
sbb
out
mov
cwde
mov
lds
loope
ins
rol
loop
xchg
push
mov
jg
jp
aam
mov
das
pop
and
das
mov
cmp
loop
mov
push
mov
in
popa
fs
cmp
adc
ret
jno
and
lods
mov
or
mov
dec
xor
mov
jmp
shl
test
call
lahf
(bad)
xor
mov
fild
loope
test
inc
sahf
add
call
cmp
mov
or
std
xchg
mov
or
and
out
popf
pop
iret
div
fcom
xlat
adc
ja
adc
lock
sahf
or
sbb
out
cmp
inc
inc
add
stos
cmps
fmul
mov
ret
bound
lods
adc
mov
hlt
pop
lds
(bad)
jns
push
rcr
jnp
cmp
add
sub
movs
(bad)
aas
dec
in
out
cdq
and
test
(bad)
fidivr
adc
fnop
push
movs
inc
aad
imul
xlat
aas
add
retf
je
fs
xchg
fs
mov
xchg
repnz
rol
add
cdq
pop
outs
pop
dec
push
out
dec
enter
scas
lods
jae
test
sbb
ficomp
mov
add
mov
fisubr
aam
ds
push
cmp
dec
(bad)
(bad)
add
or
push
das
adc
push
cwde
lods
add
push
mov
dec
lds
cmp
xchg
mov
sbb
adc
inc
push
daa
pop
enter
and
or
add
mov
and
cmp
or
sub
xor
mov
mov
mov
sbb
fstp
ins
shr
into
pushf
(bad)
dec
xlat
maskmovq
mul
xchg
ds
add
into
retf
test
sub
bound
jmp
mov
jecxz
mov
loope
add
xchg
sub
xor
adc
stos
jne
hlt
add
mov
adc
or
add
pop
cmc
pop
inc
mov
loopne
jp
fdiv
mov
push
sub
popa
mov
mov
mov
mov
mov
popa
xchg
cdq
iret
(bad)
mov
std
fwait
outs
jnp
xchg
inc
bound
and
xor
mov
and
pop
hlt
jmp
leave
mov
jnp
shr
sbb
jnp
adc
cmp
out
sbb
in
fist
out
es
mov
lods
out
dec
ss
add
and
enter
imul
or
test
ins
cmp
lods
pop
and
js
sar
fisttp
cmp
out
adc
sbb
in
add
leave
push
xor
ss
retf
iret
push
push
rcr
jecxz
jl
xchg
aas
and
(bad)
add
out
(bad)
ficom
sbb
fsubp
pusha
jbe
sbb
dec
ins
lods
add
jns
mov
jecxz
add
das
jb
inc
xor
dec
pop
add
cmp
inc
dec
out
repz
mov
ins
int
stos
movs
cdq
mov
pop
jle
xchg
fnstenv
fld
jae
pop
jg
or
les
and
cmps
and
mov
dec
cmp
pop
call
outs
repz
pop
fldenv
paddsw
mov
xchg
test
xor
jmp
xor
out
add
pop
idiv
out
fst
call
leave
mov
cli
jns
xchg
outs
mov
mov
call
or
push
pop
and
iret
mov
jle
jge
or
(bad)
jb
fs
cs
mov
out
dec
push
cmps
xor
mov
cmp
imul
pop
fsubr
int
push
icebp
call
dec
xor
or
fidiv
pop
mov
popf
cmps
cmp
inc
cmp
jne
dec
jle
mov
ins
jl
int3
leave
mov
aas
sar
mov
mov
inc
and
adc
xchg
xlat
ret
jge
into
inc
add
(bad)
sbb
test
imul
pop
push
pop
xchg
xor
loop
shl
sbb
js
cld
sub
and
add
xchg
pop
jb
pushf
cmp
push
ja
sbb
mov
xchg
in
push
pop
mov
jle
xchg
adc
scas
mov
mov
in
loopne
cmps
sub
mov
je
mov
cdq
xchg
pop
fadd
cmp
sub
pop
data16
cmps
bound
pop
push
pop
dec
pop
fld
mov
adc
add
ins
ins
scas
ja
cld
push
aas
mov
add
loopne
loop
(bad)
sbb
aaa
add
pop
add
or
(bad)
div
and
xor
mov
ret
ja
in
lods
inc
jo
mov
ins
fs
mov
mov
mov
or
dec
mov
leave
pop
mov
retf
cmp
xor
mov
add
add
mov
jmp
and
mov
(bad)
outs
lea
mov
les
int
test
fadd
inc
ss
pop
lods
sbb
sbb
add
jmp
or
cmp
loop
test
pop
aam
jmp
cmp
cli
lock
cwde
add
xor
mov
sti
rep
mov
(bad)
mov
jno
or
sbb
(bad)
or
jmp
test
mov
lds
(bad)
push
adc
nop
fidiv
xchg
cmp
mov
xor
adc
out
inc
fbld
cmp
inc
out
aaa
jns
rcr
dec
pop
and
or
lds
mov
cdq
adc
stos
gs
pop
ins
out
jmp
mov
cmc
xchg
shl
popf
jge
loopne
cmp
sahf
rcr
leave
mov
push
in
lods
push
add
das
test
(bad)
mov
outs
es
push
mov
fbld
(bad)
sbb
clc
xchg
outs
mov
fiadd
fld
cwde
aad
rcl
push
sub
jmp
hlt
mov
outs
fwait
sahf
xchg
(bad)
cmps
stos
mov
jp
cmp
into
mov
add
xor
mov
or
cmp
mov
cmp
inc
loopne
out
sbb
jecxz
pop
sbb
sbb
les
mov
cdq
sahf
aas
jl
leave
mov
sub
mov
cmp
ds
mov
push
dec
outs
cmp
push
fidivr
lods
movs
imul
cmp
out
sbb
popa
pop
popf
jns
aas
aam
fwait
xchg
addr16
mov
popa
sahf
pop
aas
push
adc
add
shl
mov
jo
push
(bad)
push
pop
in
xor
xchg
mov
mov
fnsave
cli
mul
loop
mov
arpl
out
xchg
js
test
adc
in
test
mov
daa
jo
or
xor
xlat
movs
cmp
retf
fsubp
dec
cmp
jmp
mov
jmp
and
test
or
fld
push
fild
mov
sub
call
cmps
imul
imul
jne
cmp
cs
in
mov
(bad)
pop
sub
add
nop
jmp
les
outs
xlat
push
dec
arpl
mov
xor
sbb
nop
push
std
mov
jmp
sub
inc
stos
cmp
movs
inc
add
fistp
jmp
mov
stos
and
lahf
gs
push
add
sub
das
fild
stc
push
cmc
inc
es
sar
test
inc
mov
push
xor
push
mov
and
cwde
imul
arpl
adc
push
bound
enter
sbb
xor
mov
int3
xor
(bad)
lods
repnz
jp
xor
adc
ret
xlat
test
lock
outs
fcomip
out
out
sub
jbe
repnz
adc
ficomp
retf
repz
fidivr
fsubp
sbb
adc
jmp
addr16
out
dec
and
ins
xor
dec
dec
pop
dec
ss
push
leave
pusha
mov
ss
out
pop
jmp
or
mov
iret
cmp
aas
and
dec
sub
cmp
mov
cmp
outs
xchg
imul
mov
rcr
adc
cmp
jl
add
fs
pop
pop
cmps
fld
ror
out
sub
enter
enter
pop
out
int
add
sub
clc
dec
mov
mov
push
and
push
ins
add
jmp
and
in
pop
cmc
or
dec
push
cmp
or
sti
test
inc
xor
cmps
(bad)
es
or
fdiv
mov
mov
cld
mov
jnp
clc
cwde
mov
cmp
int
les
ins
xchg
mov
mov
cdq
cld
cwde
cmp
rcl
sub
inc
inc
daa
mov
xchg
dec
ror
or
imul
push
xor
xchg
mov
retf
fnstcw
sub
mov
xor
imul
push
aaa
xor
dec
ret
lds
arpl
cmp
inc
mov
in
cmc
or
loop
cmp
xchg
gs
dec
sbb
int
add
leave
imul
les
jmp
cmp
cdq
inc
jo
jb
and
imul
push
jecxz
sar
xchg
mov
jbe
aam
mov
push
stos
nop
sub
xlat
(bad)
shl
scas
inc
add
sbb
hlt
jne
into
ret
loop
dec
fs
dec
outs
fwait
xlat
push
mov
imul
xchg
cmp
pop
mov
push
loop
cmc
cmps
into
sar
(bad)
xor
adc
cmp
pop
aaa
cmp
imul
mov
mov
mov
xchg
in
and
sub
pop
lea
sub
pushf
push
inc
mov
adc
mov
shl
push
mov
adc
xchg
add
retf
and
sub
mov
xchg
pusha
in
idiv
mov
repz
mov
ins
in
xchg
std
push
dec
je
loop
add
xor
xchg
in
das
xlat
push
push
cmc
inc
in
inc
div
rcl
cmp
daa
xchg
mov
mov
and
stc
mov
arpl
cmp
and
frstor
pop
out
or
sti
pop
arpl
das
xchg
dec
pop
test
test
hlt
cmps
je
sub
jl
test
dec
xor
aaa
and
icebp
jmp
push
push
jns
sbb
popf
sti
or
loop
mov
dec
outs
imul
push
popf
dec
ins
out
cwde
cmps
push
stos
sub
cmp
clc
inc
xchg
ffree
call
rcr
jmp
out
pop
std
aas
pop
repz
add
jmp
add
adc
sti
ins
jg
add
add
in
push
sbb
(bad)
outs
xor
ins
bound
adc
mov
xchg
mov
ret
ret
push
push
aam
loope
ss
mov
inc
inc
ins
sbb
mov
(bad)
inc
test
dec
ds
ret
into
inc
in
pop
or
imul
out
inc
pop
jae
mov
(bad)
push
int3
push
inc
movs
js
add
xchg
adc
cdq
jg
shl
jg
cmp
repz
(bad)
movs
stc
in
mov
mov
movs
jmp
dec
cmp
std
xchg
jns
jmp
mov
(bad)
imul
pop
in
cld
xchg
pop
inc
shl
rcl
xor
adc
mov
int3
das
dec
jnp
mul
push
ret
out
outs
xchg
call
or
push
mov
jl
xchg
add
sar
fimul
xchg
push
inc
jb
xchg
and
mov
jl
fwait
pop
ret
test
sbb
loopne
or
sar
xor
loope
pop
push
xchg
call
xor
(bad)
mov
and
jno
dec
popw
xor
stc
sub
shr
jmp
and
repz
jle
xlat
adc
push
inc
pop
mov
sbb
adc
clc
shr
sub
xor
pusha
shr
adc
push
mov
fstp
jbe
mov
addr16
mov
and
mov
mov
aad
mov
repnz
cmp
es
sti
les
iret
inc
(bad)
pop
and
xor
lea
mov
das
(bad)
jne
jae
add
sub
pop
mov
pusha
mov
aaa
or
js
jmp
sub
mov
icebp
xor
mov
mov
xor
or
sub
mov
mov
mov
arpl
hlt
lock
retf
mov
rol
jl
loopne
xchg
jg
pop
xor
loop
pshufw
sar
xchg
in
pushf
lds
dec
jge
inc
push
(bad)
push
(bad)
pop
sbb
adc
cli
pop
mov
push
xor
pop
jg
sbb
pop
movs
push
test
cwde
and
push
es
mov
push
inc
(bad)
push
cdq
pusha
pusha
ret
jg
es
std
inc
or
iret
jle
sahf
dec
cmp
cmc
and
pop
pandn
sbb
repnz
sbb
imul
and
movaps
test
sbb
xchg
test
xchg
ins
jb
movs
sti
loope
mov
jecxz
cmp
mov
call
jge
aaa
sub
aam
inc
jne
sahf
retf
pushf
mov
aad
mov
cmps
mov
mov
daa
adc
jecxz
icebp
push
out
outs
imul
mov
jge
shr
pusha
jecxz
cmp
leave
int3
mov
push
int
repz
scas
cdq
(bad)
fisttp
xchg
and
ud0
in
xor
jns
sbb
cmp
sbb
mov
xor
adc
stos
and
jae
push
xchg
sbb
(bad)
fcom
or
inc
inc
mov
int
aaa
fst
(bad)
sub
adc
aad
dec
or
(bad)
sub
cli
aad
cmp
lds
outs
mov
push
shl
cmp
mov
(bad)
mov
sti
movs
fsubr
inc
es
popa
add
(bad)
aaa
mov
jl
inc
data16
gs
jmp
sti
movs
out
and
xchg
test
rol
mov
std
mov
adc
add
xchg
das
(bad)
fidiv
aas
adc
and
push
jle
add
add
add
jle
dec
cmp
fwait
push
cs
pusha
in
out
arpl
in
pop
add
loope
xchg
popf
imul
cli
fisttp
push
stos
jne
push
cmp
or
push
dec
(bad)
xlat
cwde
scas
into
leave
fdivr
push
push
call
pop
inc
jmp
and
and
aas
add
aaa
sbb
adc
gs
push
xchg
cld
in
data16
adc
mov
rcl
jg
inc
in
es
nop
sub
adc
in
std
add
lea
test
imul
sub
sbb
test
jp
(bad)
jae
xchg
push
add
rcr
add
fisub
fwait
jecxz
mov
cmp
jae
mov
jl
push
jne
cwde
and
push
or
stc
out
jecxz
jnp
jg
xchg
in
retf
dec
test
dec
pop
ror
stos
stos
or
fisub
push
mov
push
cmp
jbe
movs
add
cld
fistp
call
push
addr16
ja
adc
or
add
and
ret
movs
aam
push
scas
and
mov
cmc
and
or
adc
xor
mov
imul
in
jg
sub
adc
stos
xchg
loopne
mov
(bad)
cmps
loope
inc
xlat
ja
mov
(bad)
sub
nop
pop
les
mov
sub
aad
inc
xor
enter
xchg
jne
push
(bad)
into
adc
jmp
inc
sbb
outs
pop
lds
dec
nop
sbb
ja
mov
call
icebp
lds
ret
cdq
mov
loop
dec
popf
jno
daa
icebp
inc
outs
repz
ins
fbstp
sub
es
push
xchg
leave
adc
in
jmp
xchg
or
out
sub
lods
cmps
sub
stc
int
repnz
sub
(bad)
retf
fiadd
call
xor
sbb
mov
call
repz
xor
retf
fld
out
sti
jecxz
lea
(bad)
les
pop
push
pop
push
out
xchg
stos
inc
pop
hlt
pushf
data16
mov
movs
(bad)
xchg
repz
dec
daa
icebp
nop
dec
xor
mov
push
mov
inc
push
in
xor
mov
or
aad
inc
jb
xlat
or
sub
fisubr
jae
dec
push
mov
and
pop
sbb
mov
sub
mov
scas
mov
fdivr
lods
lahf
sub
jnp
popa
dec
cmp
mov
push
sub
mov
les
iret
pop
sub
push
inc
sub
or
pop
mov
mov
test
pop
xchg
(bad)
not
inc
popa
cmp
cmp
mov
xchg
ss
enter
cmc
pushf
sub
add
outs
aas
pcmpeqd
cmp
lock
loope
lods
ret
and
bound
cmp
or
movs
adc
pop
lock
cmp
mov
es
xchg
ja
mov
cli
fs
rcr
push
rcr
aad
sahf
push
xchg
ficom
loop
inc
lds
out
lods
or
dec
inc
fnstenv
je
pop
or
jo
pop
mov
in
gs
out
int
lds
or
popa
cs
push
jb
cli
pop
push
ins
mov
cmp
mov
sub
sahf
adc
popf
in
jns
int
in
sbb
jp
mov
adc
and
inc
in
xor
addr16
call
test
test
xchg
repnz
and
retf
pop
and
test
push
repz
xchg
add
and
inc
mov
mov
imul
jno
clc
pop
or
mov
in
xor
mov
mov
in
stos
outs
outs
in
cld
jb
adc
cmps
sub
cmp
out
mov
push
adc
daa
adc
fcmovnbe
or
push
fild
fs
jg
mov
pop
div
add
ret
pop
dec
jle
jb
ror
sbb
push
sub
dec
ror
in
and
and
aaa
jmp
ja
push
daa
es
ds
cmps
imul
(bad)
pop
lods
and
dec
inc
jmp
dec
sbb
xchg
xchg
lock
hlt
mov
adc
inc
pop
push
xor
jae
cmp
fnsave
add
add
xchg
inc
std
es
popf
retf
inc
pop
sbb
jmp
addr16
mov
xchg
stc
xchg
push
(bad)
rcr
cdq
jl
das
mov
push
ficom
stos
or
iret
or
mov
xchg
enter
dec
push
les
jl
lahf
arpl
or
jne
push
add
aas
xchg
xchg
xchg
or
xor
cmps
mov
ss
add
cs
popa
aam
xor
or
push
xor
lods
mov
mov
arpl
push
sub
int3
adc
mov
xor
std
call
jmp
pusha
inc
dec
and
jne
or
jmp
movs
rcl
sti
mov
movs
jno
adc
cmp
enter
dec
cld
lahf
xor
addr16
std
xchg
push
push
into
jle
or
hlt
test
adc
fsub
clc
test
jmp
mov
loope
test
cmp
popf
popf
cmc
in
inc
out
lds
push
(bad)
pop
dec
add
or
or
sub
add
adc
cmp
addr16
loopne
lahf
enter
push
cmp
xchg
jb
out
(bad)
cmps
out
mov
xor
mov
xchg
nop
stc
jns
jno
scas
dec
jbe
dec
data16
jmp
ret
es
mov
neg
nop
pop
das
cmp
cmp
mov
mov
or
js
adc
das
add
outs
jo
adc
jecxz
ror
ret
cmps
mov
add
mov
dec
push
aas
iret
xor
inc
inc
fiadd
sbb
and
cli
add
call
je
jae
mov
pusha
push
jns
pusha
outs
and
fadd
and
jp
sub
adc
push
or
inc
and
xchg
mov
inc
mov
and
jne
std
in
pop
jne
mov
or
xor
js
lock
addr16
movs
ins
push
popf
cld
jb
cmc
das
dec
dec
(bad)
out
repz
inc
jl
push
jb
pushf
nop
jg
retf
scas
add
rol
test
xchg
cmps
arpl
test
out
mov
inc
(bad)
xor
int
xor
push
jge
std
mov
cmc
pop
(bad)
(bad)
mov
loope
enter
mov
or
sbb
das
out
inc
xor
xchg
(bad)
push
jo
dec
cmp
sub
or
stos
in
cld
dec
push
push
lds
sti
mov
mov
mov
stos
call
sbb
out
int
fisttp
imul
hlt
aad
jmp
pushf
test
add
xchg
push
xchg
push
jbe
dec
stos
dec
leave
rol
or
enter
sub
arpl
mov
jp
jmp
neg
push
lds
xor
icebp
cmps
cmc
mov
jg
data16
in
sub
inc
mov
and
sbb
mov
mov
jno
lds
mov
ins
push
mov
fs
sti
pop
pop
(bad)
dec
pop
call
out
jge
cwde
nop
sub
jo
cmp
mov
add
pop
into
push
adc
lods
out
jge
cmc
cmovbe
sbb
sub
xchg
jecxz
popa
cmps
repnz
jge
loop
mov
fs
adc
pop
add
and
or
pslld
sbb
mov
sbb
loope
(bad)
nop
inc
sti
pushf
shl
push
xor
xor
mov
daa
mov
outs
mov
sbb
inc
stc
test
xchg
xchg
jmp
add
test
cmp
pop
sub
out
popa
jg
mov
jns
jmp
mov
sub
in
push
pop
sub
push
aad
push
das
push
lds
jmp
dec
xchg
sub
or
sbb
icebp
loope
pop
inc
ins
push
fs
jno
retf
or
es
add
loopne
(bad)
push
nop
lock
jns
xchg
ror
out
jno
shl
mov
aam
fwait
test
mov
test
repnz
sahf
jge
jmp
shr
cmps
scas
(bad)
rcr
fiadd
mov
gs
setle
adc
loope
test
mov
dec
lock
pusha
addr16
xchg
rcl
or
(bad)
jle
or
je
lods
bound
xlat
add
cmp
pop
(bad)
cli
cmp
out
lds
jne
xlat
dec
jmp
sahf
push
cmps
xchg
xchg
cdq
sbb
inc
push
arpl
jo
jno
shl
mov
mov
push
jge
fdivr
sub
or
sti
mov
loopne
jp
(bad)
out
and
xchg
mov
push
xor
mov
stos
call
add
xchg
shl
pusha
jl
nop
pop
mov
xchg
add
xchg
fidiv
call
ret
add
lock
inc
loop
or
jmp
rol
sbb
pop
scas
cli
dec
scas
mov
mov
pop
into
out
aas
jle
mul
(bad)
ins
ss
mov
xchg
xor
(bad)
cli
cmc
xchg
cmp
mov
sub
xchg
inc
mov
xchg
cmps
dec
not
int
pusha
add
jl
and
in
cmp
sub
std
dec
in
out
test
push
jle
lock
mov
fisub
enter
out
imul
mov
ss
cmp
aas
xchg
pop
retf
inc
icebp
mov
xor
mov
rcr
clc
cmp
mov
fs
push
stos
(bad)
pop
ds
bound
push
dec
jne
mov
xchg
push
push
pop
xchg
dec
pop
ja
jmp
in
enter
ret
jb
dec
fs
mov
mov
and
mov
sahf
or
jno
xchg
sbb
retf
jbe
fwait
pop
sahf
or
dec
in
dec
imul
sub
sbb
in
fcom
mov
mov
jne
pop
lahf
rol
xor
add
loop
mov
fsubr
imul
loopne
xor
rcr
(bad)
pop
mov
jle
sub
lds
fmul
mov
pop
iret
daa
and
xor
jmp
into
or
push
cmp
in
mov
in
in
nop
fcomi
(bad)
sub
jae
sub
mov
and
add
ret
or
mov
adc
ss
fcomip
ret
mov
cmp
lds
and
stos
dec
pushf
inc
pop
lock
in
push
lahf
adc
out
sub
push
aas
pop
cs
cli
push
push
cvtps2pi
retf
ds
cmc
je
jb
fsub
pop
jno
daa
(bad)
ss
pop
sub
mov
(bad)
aad
sub
enter
pop
imul
inc
xor
mov
movs
(bad)
push
push
add
mov
jmp
pop
xchg
mov
xlat
add
(bad)
std
xor
addr16
in
pusha
push
sbb
xchg
xchg
jo
xchg
jp
sbb
xchg
sbb
mov
or
sub
mov
fcomp
xchg
adc
nop
mov
sub
xlat
push
inc
loopne
std
call
dec
add
jge
add
pop
jnp
cmp
sub
sub
push
xchg
mov
sbb
jmp
pop
pusha
sbb
icebp
sbb
popf
stos
cmp
(bad)
ja
ret
mov
retf
dec
cwde
jno
pushf
dec
dec
(bad)
cmc
add
xor
movs
or
sbb
inc
lods
add
mov
les
(bad)
repnz
xlat
fcom
je
fist
fisub
lea
or
fucomp
test
inc
pushf
sub
stc
call
pusha
fimul
call
adc
adc
jae
(bad)
mov
xchg
enter
lods
adc
inc
pop
sahf
add
cdq
pop
push
xor
dec
retf
es
aam
ins
push
or
inc
mov
jbe
cmp
and
mov
shl
(bad)
out
inc
dec
mov
pop
retf
test
bound
icebp
loop
gs
fwait
sar
(bad)
or
js
ret
bound
gs
cmps
movs
div
jb
ins
daa
not
rcr
push
test
imul
mov
call
xchg
sbb
out
jmp
fnstsw
mov
mov
add
push
pop
lods
sti
loopne
shr
(bad)
xchg
dec
xchg
hlt
shl
jns
jmp
or
imul
std
ins
lea
aad
sar
xor
dec
sti
sbb
push
xor
inc
jo
cli
dec
dec
test
sti
dec
cmp
cmp
hlt
or
cwde
adc
cmp
aad
jecxz
mov
sub
cmp
inc
stos
jo
repz
mov
mov
pop
inc
clc
in
add
das
loope
pop
mov
loope
xor
adc
fst
leave
jge
mov
or
stos
ja
imul
pop
adc
mov
std
rep
jp
push
test
xor
and
push
out
adc
aam
(bad)
dec
sub
popf
jae
std
arpl
mov
sbb
xlat
xor
sub
adc
ret
dec
pusha
ss
int3
xor
sahf
inc
ja
je
dec
jne
or
push
pop
fsub
jge
sbb
ds
xchg
mov
scas
dec
sub
cmp
sub
adc
rol
push
xor
push
xchg
cmp
add
adc
sbb
and
mov
mov
test
scas
addr16
sbb
cmp
mov
add
cmps
inc
sub
repz
sbb
pop
jmp
jb
pop
ret
or
scas
dec
jae
test
jo
adc
das
xor
pusha
xchg
cmps
icebp
in
les
or
fs
xchg
loopne
jmp
movs
test
xor
xchg
jmp
add
sbb
int
jns
aad
dec
arpl
xchg
jle
inc
imul
cli
push
cmp
fs
adc
imul
les
or
mov
gs
sub
cmp
mov
mov
mov
jns
add
lods
cmps
(bad)
outs
shl
pop
dec
jmp
std
add
ss
fild
sbb
and
xchg
cmps
test
cmc
xchg
and
mov
xchg
nop
inc
pop
fadd
shl
push
pop
pusha
popa
pop
mov
dec
inc
mov
or
jge
xchg
sub
xchg
adc
test
out
and
cmps
xor
into
sub
(bad)
fwait
iret
shr
das
xchg
add
movs
inc
cmp
jae
stos
adc
add
or
push
pusha
inc
sti
xchg
shl
xlat
xchg
pop
sub
mov
dec
int
fwait
dec
scas
mov
fs
jle
inc
cmp
sub
push
push
ret
push
(bad)
mov
int
push
mov
stos
pop
shl
(bad)
mov
sub
inc
bound
pusha
jne
dec
xchg
in
icebp
xchg
or
xchg
push
pop
stos
or
push
fld
jecxz
sahf
int3
out
arpl
dec
mov
into
mov
stc
or
or
test
in
(bad)
mov
pop
jle
pop
mov
stc
imul
dec
add
xchg
(bad)
and
stos
xchg
cmp
lahf
les
rol
ins
int3
and
adc
mov
mov
int
mov
shl
pop
lock
lods
addr16
xor
jmp
or
stos
movs
sub
jmp
jge
or
cmp
sbb
enter
mov
test
ins
jecxz
cs
cmpxchg
mov
int3
(bad)
(bad)
mov
inc
jb
jg
retf
or
movs
cmps
xor
or
stc
xchg
push
sub
call
out
neg
popf
jo
and
inc
lds
lods
cli
cmp
enter
xchg
loopne
jae
push
cmp
sahf
out
sub
push
sub
push
jmp
adc
sub
push
adc
repnz
lahf
sub
dec
mov
fsub
xchg
jmp
cmp
cmc
inc
sti
jle
ds
dec
mov
add
fsubr
cli
sub
icebp
push
shr
cmp
dec
pop
mov
in
sub
xlat
push
pusha
jbe
test
in
fist
movs
or
dec
shr
es
push
dec
cmps
jge
add
int3
(bad)
fdivr
hlt
fwait
and
push
sub
cdq
jg
(bad)
sub
(bad)
loopne
sbb
shr
fdiv
mov
dec
in
jecxz
dec
push
xchg
shl
add
xor
iret
mov
in
out
mov
rcr
push
loop
js
scas
fld
lock
jg
or
mov
sbb
jns
jne
sti
pop
jae
call
test
cmc
adc
fidiv
pop
aas
out
lds
mov
dec
cmp
mov
aaa
mov
mov
jb
int
inc
ja
loope
sub
cmp
mov
lahf
call
dec
ds
rol
in
das
(bad)
bound
into
outs
xor
sbb
or
loope
imul
xor
adc
cwde
dec
xchg
rcr
outs
pop
das
in
aad
mov
(bad)
push
iret
popf
inc
xor
in
xchg
or
mov
sbb
dec
sub
mov
inc
addr16
daa
jp
or
repz
dec
clc
push
cmps
(bad)
inc
sbb
inc
pushf
rol
and
xchg
aad
call
mov
aas
jle
shl
pushf
call
movs
movs
imul
xlat
mov
ror
test
mov
scas
fst
jp
xlat
cmp
mov
retf
lock
lods
jbe
std
push
popf
shl
sti
cwde
xchg
inc
sub
sbb
or
and
add
jns
lods
loope
mov
pop
dec
pop
das
in
lahf
imul
dec
arpl
fwait
mov
outs
push
dec
sbb
je
mov
leave
lea
push
sbb
(bad)
nop
std
xor
push
xlat
test
cmp
mov
sbb
cmp
and
pop
push
jno
pop
movq
inc
jge
and
push
daa
aas
in
pop
out
fs
scas
lea
dec
nop
aam
scas
test
cmp
push
test
not
inc
(bad)
nop
stc
(bad)
cmp
mov
jo
mov
jmp
cmp
ficom
hlt
and
es
je
test
xchg
mov
stos
cld
data16
push
ins
loopne
out
inc
cmp
and
xchg
pushf
into
(bad)
sub
clc
cmp
cmps
daa
xchg
dec
cmp
popf
sbb
cmp
jnp
pop
test
xchg
push
lock
sbb
(bad)
jnp
test
jno
ds
push
push
inc
pop
gs
cli
cs
leave
in
mov
aad
jmp
cld
mov
jg
lea
(bad)
push
leave
dec
nop
push
scas
mov
jns
popa
inc
pop
addr16
jnp
dec
sbb
adc
stos
jmp
loop
mov
jecxz
inc
jnp
mov
add
daa
imul
pop
lods
scas
push
ins
or
stos
aam
dec
xchg
data16
mov
iret
stos
jb
in
lea
fadd
lea
bnd
push
es
scas
sbb
gs
fisubr
pushf
mov
sub
xchg
and
cwde
or
push
shr
push
popf
mov
mov
or
or
or
out
mov
or
jne
add
ss
sti
pop
cmp
push
cwde
aam
clc
jnp
and
mov
stos
outs
and
loopne
cs
and
dec
jbe
dec
cmp
xchg
idiv
inc
xchg
adc
or
pop
mov
(bad)
sbb
test
movs
and
lock
loope
pop
fadd
out
iret
jno
ja
xchg
ja
inc
repnz
data16
xchg
pop
out
into
scas
cmps
frstor
jecxz
test
jne
dec
test
cmc
xor
jp
xlat
sbb
fidiv
jbe
jge
popa
push
cmp
jns
test
adc
and
xchg
or
icebp
pushf
xchg
icebp
mov
jmp
add
pop
and
add
and
scas
pop
jne
add
push
push
xor
cmps
mov
int
cli
loopne
mov
sub
aaa
cmp
int3
popa
fcomp
inc
popf
cmp
jo
xlat
or
jecxz
lods
inc
hlt
push
inc
scas
xchg
push
cdq
dec
jns
test
fsubr
xchg
(bad)
xor
test
adc
and
adc
fnsave
push
sbb
dec
cmp
leave
test
cmc
repnz
mov
stos
sbb
and
clc
mov
push
jbe
loopne
loope
cmp
stos
(bad)
mov
jp
in
adc
je
mov
lds
outs
lock
or
sub
xchg
outs
jmp
jno
xchg
jg
clc
ins
mov
scas
dec
fcomi
(bad)
sar
jmp
rcr
out
fadd
adc
scas
dec
xor
xor
into
ret
retf
fs
(bad)
jl
out
cmp
hlt
(bad)
or
xchg
bound
push
in
sbb
fild
shr
pop
shl
sub
rcl
ret
ja
jp
adc
mov
fstp
outs
cdq
idiv
xor
shl
pop
jmp
hlt
bound
cmp
jb
and
xchg
mul
int3
dec
ds
adc
dec
into
div
dec
(bad)
adc
push
add
ss
mov
cmp
push
mov
rcr
xchg
pop
daa
xchg
test
and
(bad)
aam
js
jbe
aad
dec
adc
retf
movs
aaa
mov
inc
inc
js
call
jmp
cmc
dec
je
inc
outs
inc
add
jg
iret
call
inc
in
out
mov
retf
aaa
push
and
fsubp
push
jmp
icebp
xchg
repz
adc
cwde
xchg
sbb
js
mov
fwait
movs
aas
xor
inc
jne
pop
or
jp
pop
aaa
mov
pushf
pop
inc
xor
jmp
dec
dec
shr
test
mov
retf
or
lods
hlt
loop
xchg
cmp
nop
push
cmps
dec
je
dec
pop
enter
cli
lock
and
leave
out
inc
jge
adc
stos
daa
adc
in
push
ja
sub
adc
rol
pop
push
hlt
sar
mov
mov
mov
fstp
mov
out
mov
je
test
nop
mov
bound
xchg
stos
sbb
lahf
add
jnp
add
pop
push
push
mov
arpl
push
inc
pop
or
push
inc
repz
inc
pop
pop
cmp
push
arpl
inc
cmps
inc
xlat
hlt
test
mov
pushf
in
jnp
push
ins
jmp
rcr
add
outs
and
xlat
cmp
sbb
mov
mov
test
mov
adc
push
sbb
clc
rcr
xlat
xchg
loopne
push
push
mov
mov
fsubr
and
inc
xor
dec
rcl
mov
mov
add
fistp
(bad)
xchg
lahf
cmp
push
mov
lds
scas
out
ficom
or
jmp
sbb
test
cmps
(bad)
pop
sub
aad
cld
mov
out
dec
lock
push
sub
sub
dec
repz
cmp
in
imul
lds
and
and
add
or
call
cmp
mov
cli
inc
in
xchg
enter
jp
test
lock
pop
mov
jge
push
fisubr
xchg
inc
or
ins
sbb
dec
sbb
out
mov
movs
mov
jmp
lods
mov
mov
push
push
xlat
dec
push
sub
ins
inc
repz
xchg
imul
fwait
jns
cmp
std
pop
dec
mov
out
(bad)
mov
push
mov
sub
pop
leave
ret
jno
or
jl
pop
call
lock
repz
jmp
in
imul
stos
cmc
push
fldcw
dec
mov
push
pop
cmps
out
push
retf
sbb
jb
push
pop
fsubr
in
bound
adc
sahf
pop
and
adc
cmps
ds
cs
shr
jbe
jle
mov
cmp
mov
jno
es
sub
addr16
out
add
stos
test
jmp
push
inc
sub
sub
(bad)
nop
in
outs
jnp
out
sahf
inc
bswap
inc
out
mov
test
or
std
cmps
sub
dec
frstpm(287
inc
cmp
cmp
stos
or
sahf
cmp
mov
xor
cmp
push
ss
xchg
fidiv
mov
sub
mov
or
repnz
inc
or
hlt
cmc
cwde
neg
pop
jmp
and
jmp
or
rcl
mov
outs
mov
xchg
ins
dec
cmps
jle
retf
test
std
xchg
cld
or
cmps
in
sbb
xchg
or
and
inc
mov
std
add
fbld
adc
sub
enter
mov
pushf
jmp
push
pusha
leave
mov
inc
jb
add
das
nop
xchg
iret
sbb
xchg
ret
adc
add
add
inc
popf
sub
sub
push
sub
js
and
nop
(bad)
jnp
sub
mov
(bad)
sub
hlt
push
xchg
lods
out
stos
mov
jnp
inc
mov
popf
dec
xchg
adc
ins
sub
lahf
rcl
inc
hlt
out
hlt
mov
cdq
daa
call
push
mov
mov
or
mov
call
mov
wrmsr
mov
push
(bad)
adc
xchg
aas
mov
out
xor
push
js
stc
mov
arpl
push
idiv
pop
call
mov
mov
and
pushf
dec
fs
push
scas
sub
and
xchg
test
lds
xchg
jecxz
movs
xchg
ret
mov
mov
push
jmp
add
out
mov
push
pop
inc
jmp
sbb
or
mov
pop
mov
mov
adc
and
mov
cwde
or
cmp
jmp
dec
mov
retf
lods
lock
lods
xchg
mov
xchg
xor
dec
sbb
or
scas
ins
inc
scas
cmc
fdivr
mov
inc
add
sbb
test
xor
mov
outs
sbb
inc
(bad)
pusha
call
dec
mov
jle
add
inc
sub
pushf
ins
jmp
imul
jmp
xchg
push
push
mov
cmp
gs
cmc
xchg
out
jle
retf
test
arpl
cdq
fmulp
ja
jp
push
dec
call
cmp
test
je
dec
inc
pop
mov
xchg
cwde
dec
imul
add
not
test
mov
repz
out
leave
inc
cmps
xor
sbb
pop
or
lods
out
and
ja
mov
mov
or
and
nop
retf
(bad)
jns
jl
mov
dec
jg
sub
sbb
mov
push
retf
pusha
dec
mov
xchg
cmp
and
and
sub
and
loop
or
pusha
add
sbb
(bad)
fwait
popa
bound
mov
jg
(bad)
jno
sbb
inc
shr
push
adc
fild
and
scas
mov
lods
in
arpl
fsubrp
test
lods
add
sub
out
icebp
aam
inc
push
out
jecxz
icebp
inc
fidivr
and
or
mov
(bad)
shr
lahf
popa
xchg
inc
inc
mov
jb
and
xor
mov
xor
lods
xchg
dec
(bad)
mov
sub
enter
cmp
mov
inc
inc
data16
sub
mov
(bad)
mov
(bad)
xchg
arpl
mov
sbb
cmp
lea
ins
jb
call
cmp
cmps
mov
cmp
and
mov
inc
pop
dec
cmp
ins
or
cli
loopne
mov
scas
jb
mov
mov
(bad)
jmp
jns
cmp
jp
loop
movs
add
dec
adc
mov
cdq
pop
xor
pushw
lods
xchg
cmc
ss
fsubr
mov
repz
test
ficom
cld
pop
or
sbb
fstp
fld
push
cmps
mov
enter
jmp
sar
jb
cmp
(bad)
xor
outs
pusha
arpl
nop
cmps
mov
xchg
xchg
imul
ins
sub
ds
hlt
sar
add
stc
mov
iret
sti
sub
das
add
mov
sub
sub
jmp
mov
nop
sub
es
fdiv
enter
cmp
cli
aad
cwde
adc
not
repnz
aaa
adc
and
sub
pop
mov
jne
mov
fsub
jb
icebp
clc
scas
aaa
pop
xchg
jne
add
jecxz
int
mov
ja
inc
and
dec
scas
xchg
outs
iret
mov
das
rcr
sbb
mov
sub
add
test
mov
test
stos
(bad)
adc
loop
mov
xor
and
mov
test
mov
pop
cwde
adc
pop
xchg
cli
scas
mov
jmp
sbb
movsx
lods
mov
pop
arpl
outs
push
add
or
int
ss
stos
ltr
add
movs
mov
sub
add
pop
xor
mov
mov
xchg
inc
adc
adc
xor
jo
outs
imul
mov
(bad)
test
scas
jnp
jmp
pop
jae
sahf
lock
shr
mov
jnp
push
sub
stos
jb
loop
or
xor
loop
xchg
dec
dec
and
mov
popa
popf
push
nop
popf
cmp
jnp
fs
xchg
and
push
sbb
sbb
not
into
push
jle
int
repz
(bad)
pop
outs
pushf
sbb
sar
rcl
fisttp
adc
jge
inc
mov
(bad)
ds
mov
movs
xchg
dec
jns
mov
mov
fdivr
sub
lods
ret
(bad)
adc
push
cs
add
push
enter
xor
mov
add
jae
stos
ins
movs
mov
or
pop
fadd
push
mov
push
ret
add
shl
ins
xchg
jnp
fistp
(bad)
daa
lods
sub
sar
out
les
ins
jmp
dec
dec
inc
(bad)
iret
outs
std
dec
push
nop
or
or
inc
pop
cld
jmp
xchg
cdq
and
sbb
out
(bad)
mov
push
pusha
out
call
push
fs
imul
adc
jns
(bad)
or
repz
jmp
iret
sar
mov
xchg
jno
inc
or
mov
ds
pop
out
mov
or
cmp
inc
dec
xor
or
idiv
inc
cmp
test
jmp
(bad)
dec
add
mov
stc
pusha
and
mov
(bad)
push
int3
aam
jl
outs
jle
in
cmp
fdivr
lock
mov
adc
or
mov
cli
mov
jnp
pop
jbe
sub
push
mov
inc
into
push
jecxz
fwait
or
push
pop
iret
repnz
push
cmps
adc
mov
xchg
mov
cmc
add
pusha
mov
cdq
mov
popa
retf
sbb
mov
sahf
or
xchg
loop
mov
jnp
dec
push
test
shl
or
adc
adc
lahf
pop
add
inc
scas
and
cmp
mov
xchg
dec
lods
shl
mov
inc
scas
and
jbe
cmps
je
jge
test
sub
cmp
push
dec
pop
push
frstor
les
fcomp
fidiv
test
ret
test
mov
dec
xchg
and
xchg
scas
xor
movs
(bad)
dec
add
daa
cmp
(bad)
lock
mov
sub
fisub
push
(bad)
pop
push
(bad)
xlat
mov
jbe
and
sbb
test
mov
xchg
xor
fmul
pop
or
push
push
or
jge
mov
pop
xchg
(bad)
js
outs
adc
cmp
ret
mov
popa
(bad)
ss
mov
(bad)
(bad)
repnz
pop
xor
into
imul
enter
pop
idiv
cmps
add
cmp
adc
jmp
lods
dec
jge
add
and
jno
sub
push
jnp
sbb
push
sbb
or
sbb
jl
imul
pop
les
and
mov
inc
xor
mov
test
movs
cli
jno
inc
shl
cmp
xor
mov
xor
xor
movs
or
mov
neg
fcmovb
push
sbb
pop
pop
loop
inc
push
jmp
push
push
lods
cmp
ins
je
xor
mov
dec
xchg
iret
fimul
dec
xor
js
adc
add
(bad)
into
push
push
mov
mov
cli
ret
xor
cmps
in
or
add
lahf
into
mov
cmps
in
out
xor
mov
sub
ret
(bad)
neg
xchg
sti
or
fnsave
sbb
out
test
dec
rcr
or
popf
test
into
out
jns
add
cmps
adc
jns
sbb
ins
not
or
scas
mov
or
mov
popa
icebp
jnp
push
aas
loop
rcr
cdq
cmps
hlt
mov
push
mov
xchg
iret
pushf
ja
sbb
mov
enter
test
sub
pop
adc
inc
aam
mov
cmc
fld
ror
ret
repz
adc
jae
ins
xor
mov
ror
repnz
pop
sub
push
les
stc
mov
int3
je
sbb
jo
sahf
loope
push
jne
dec
add
movups
pop
enter
or
imul
nop
push
mov
or
cli
scas
ins
cdq
mov
fisub
iret
pop
mov
repz
(bad)
xchg
enter
hlt
push
psrld
inc
push
jae
cmp
sbb
cmp
(bad)
jg
jnp
add
inc
movs
repnz
pop
int3
dec
mov
sub
sahf
aaa
shr
xchg
jmp
test
ss
scas
mov
pop
pushf
lods
xor
dec
and
es
inc
and
hlt
das
dec
std
lahf
push
ss
fcmovnu
in
es
push
sbb
aad
shl
mov
les
mov
inc
in
pop
adc
ins
les
jne
jb
jge
sub
call
jg
jno
mov
mov
nop
out
dec
push
xchg
inc
mov
mov
and
pop
stos
mov
inc
push
adc
xor
mov
jl
mov
dec
inc
xor
push
cld
shr
stc
ja
ret
(bad)
repnz
mov
pushf
mov
popf
mov
sbb
movs
push
sbb
xchg
push
pop
cmps
or
call
sbb
pop
cmc
mov
stos
adc
out
pop
lock
jp
add
jno
pop
aad
ror
xchg
push
xor
sub
in
movs
add
jno
sub
fdivrp
retf
and
mov
arpl
push
or
mov
ja
push
push
pop
mov
mov
or
scas
mov
daa
loopne
or
aaa
clc
test
xchg
adc
pop
jg
mov
jb
pop
icebp
sbb
fnsave
cdq
pop
pop
movs
xchg
fild
add
or
mov
sbb
dec
cwde
pop
cmp
cmps
sti
sub
out
mov
int3
cs
jle
xchg
ins
loop
ins
mov
xchg
in
jecxz
lahf
jbe
mov
add
or
retf
pop
xchg
xchg
in
jae
call
in
mov
or
aam
enter
rcl
out
or
cmps
mov
sbb
stos
pop
xchg
shl
dec
test
les
sbb
arpl
rcr
xlat
jo
sbb
das
movs
xlat
arpl
clc
adc
fstp
rcr
adc
adc
leave
imul
sub
add
adc
lods
add
push
xor
add
test
test
mov
stos
sbb
xchg
ss
fcmovnbe
mov
stos
sbb
je
pop
sub
mov
xor
mov
push
sub
stos
cmp
fcmovb
push
es
push
push
add
mov
sub
jno
add
pop
xchg
push
es
lods
xchg
push
add
jg
out
bound
out
(bad)
rol
add
pushf
mov
jmp
inc
(bad)
jg
jae
cmps
mul
scas
sub
push
shr
retf
push
mov
cmp
xchg
lahf
loope
ret
ror
mov
(bad)
mov
pop
inc
jmp
push
jne
in
in
sbb
fld
call
cbw
adc
and
add
jmp
je
mov
fwait
pop
or
inc
fcom
gs
test
ret
(bad)
scas
in
sub
or
sbb
and
inc
mov
jmp
mov
repnz
mov
icebp
adc
loop
cdq
dec
mov
stos
mov
dec
mov
lds
mov
mov
imul
add
repnz
test
cwde
pop
lea
stc
stos
and
lods
icebp
(bad)
mov
pop
push
pop
jp
shl
mov
or
or
fldcw
mov
pop
xor
jp
adc
(bad)
cmp
rol
jbe
lods
ja
sbb
xor
or
leave
pushf
or
adc
into
jle
and
xor
xor
stc
int
aas
mov
movs
out
xor
loope
loopne
jnp
fcmove
popa
pop
jp
pushf
jg
enter
frstor
push
mov
mov
jns
div
dec
sub
mov
mov
(bad)
dec
dec
lods
(bad)
bound
and
aam
jmp
les
shr
and
test
dec
ja
into
das
push
or
and
push
xlat
out
and
adc
out
pop
pushf
inc
jno
inc
cwde
cmp
mov
iret
mov
mov
mov
ins
shr
mov
sbb
ror
out
pop
sbb
add
inc
(bad)
pop
mov
or
push
test
and
(bad)
fsubr
test
pop
mov
push
xchg
jno
and
add
sbb
repnz
aas
into
out
(bad)
arpl
ret
mov
ja
in
int3
loopne
mov
fild
loop
cmp
or
test
jb
gs
push
or
mov
and
jns
bound
pop
and
cwde
xchg
mov
xor
out
popf
sbb
shl
mov
xchg
and
add
outs
sti
sti
xchg
sar
push
les
std
into
ror
add
stc
jae
(bad)
(bad)
out
xor
sahf
push
cs
dec
fldenv
mov
loopne
cs
push
fist
dec
adc
inc
(bad)
pop
inc
mov
leave
mov
inc
not
add
in
or
out
jne
sti
ss
jns
xchg
pop
xor
out
popa
sub
sub
sub
dec
sub
jmp
repnz
mov
loop
or
dec
push
adc
xchg
outs
inc
out
inc
loopne
fwait
or
adc
pusha
mov
lahf
xchg
mov
mov
cli
fprem1
icebp
jle
push
movs
ja
inc
sbb
push
cld
mov
sbb
sahf
shl
pop
xor
into
test
icebp
dec
mov
outs
imul
int3
mov
cmp
loope
sub
iret
fiadd
sub
in
and
cmp
mov
xor
mov
loop
pop
into
push
mov
xor
loope
adc
int
jecxz
addr16
not
xchg
outs
jne
sbb
sbb
shl
mov
pushf
or
xor
fs
scas
pop
or
inc
neg
jmp
aad
adc
add
test
test
pusha
loop
mov
in
loopne
clc
dec
(bad)
imul
push
cmps
sub
mov
jmp
test
or
mov
fucomp
imul
lods
mov
adc
cmp
mov
(bad)
mov
js
lods
mov
cvtpi2ps
popa
push
cmp
ins
push
sbb
xchg
movs
mov
sub
test
mov
lahf
loop
inc
sub
icebp
pop
in
sti
fcom
pop
pop
les
das
sub
xor
pop
xchg
out
ds
cmp
loope
in
js
jno
jmp
cmps
or
or
inc
mov
sub
mov
out
cwde
je
inc
rol
and
out
mov
jmp
repz
stc
push
fnstsw
not
mov
mov
fnstenv
xchg
icebp
cmp
mov
test
sub
(bad)
call
push
(bad)
daa
jb
lahf
into
mov
(bad)
pop
dec
pusha
aad
mov
dec
stos
idiv
je
jmp
aad
dec
or
ret
push
push
clc
fiadd
add
jle
call
test
adc
orps
clc
and
shr
jecxz
into
jmp
mov
sub
ja
ret
pop
jo
loop
add
inc
stos
push
inc
repnz
pop
pop
rcr
cdq
retf
xor
es
jecxz
(bad)
gs
push
in
mov
stos
cmps
cmp
adc
push
imul
sbb
mov
mov
mov
lock
add
loope
sbb
imul
gs
sbb
push
je
test
jb
sub
sub
fbld
xchg
fdivr
stos
and
mov
sub
adc
add
fild
stos
outs
or
sub
(bad)
xor
es
movs
and
pusha
push
lock
jp
sub
or
frstor
cld
mov
cmp
addr16
lods
inc
mov
es
or
jg
neg
or
dec
or
cld
sbb
xor
sar
inc
jns
cs
jecxz
cmps
add
and
mov
jecxz
popf
mov
dec
out
std
test
cwde
or
xchg
pusha
mov
push
dec
(bad)
shl
mov
popa
cli
adc
(bad)
lods
mov
xchg
je
push
stos
idiv
add
stos
jge
inc
xlat
add
cwde
adc
sbb
or
and
test
retf
inc
ret
frstor
movs
nop
and
dec
retf
xchg
xor
jl
xlat
outs
inc
jae
test
push
mul
jbe
daa
pop
and
mov
adc
cdq
lock
pop
jno
inc
arpl
cmps
pop
daa
cwde
and
(bad)
stos
and
cmp
leave
or
lahf
cli
pop
push
mov
sub
ja
imul
es
jno
sbb
xor
inc
push
dec
mov
xchg
xchg
int
int3
fidivr
lock
cmp
xlat
sbb
jne
sahf
xchg
in
add
scas
cmp
in
dec
mov
mov
pop
push
iret
sbb
xchg
adc
mov
push
mov
sbb
(bad)
dec
pop
jne
push
sub
lock
mov
or
scas
mov
jp
call
sbb
int3
add
imul
push
cli
dec
test
xor
in
in
and
mov
(bad)
shl
pop
jmp
movs
lds
shl
mov
sti
loope
mov
pop
cmps
(bad)
lea
mov
jb
retf
dec
popf
(bad)
cdq
cmp
or
or
mov
push
or
cmp
(bad)
dec
pop
(bad)
fistp
pop
cs
lea
scas
jne
mov
cmc
push
xor
jae
fwait
push
pop
inc
xor
pop
mov
mov
jecxz
ror
xchg
add
pusha
adc
int
push
shr
dec
popa
aaa
adc
and
mov
cmp
mov
lahf
push
jnp
aaa
xlat
(bad)
repnz
pop
ins
aas
aad
leave
lahf
add
xor
stos
xor
das
jmp
sub
cs
in
pop
daa
ja
or
xor
and
ss
jo
sub
out
push
test
sub
and
xlat
cmp
xor
popa
inc
cmps
loope
add
ror
mov
or
bound
lea
dec
sbb
sbb
call
adc
adc
out
push
add
(bad)
mov
mov
push
xor
icebp
dec
mov
pop
repz
inc
push
js
scas
jmp
shl
adc
nop
test
cmc
mov
xor
out
mov
sbb
scas
gs
loop
ins
and
dec
mov
add
mov
mov
push
inc
push
sub
xor
push
je
mov
les
jne
out
es
in
retf
dec
jne
ret
dec
inc
inc
sub
mov
rcr
sbb
mov
adc
neg
pop
mov
jle
mov
mov
cmp
je
xchg
in
cmp
jne
pop
clc
jnp
xchg
inc
mov
adc
lock
or
add
jno
jmp
mov
test
out
test
xor
ds
aaa
mov
adc
jmp
push
ficomp
push
mov
adc
es
(bad)
pushf
mov
push
mov
outs
or
clc
add
les
and
ja
shl
and
fs
mov
ret
imul
or
sbb
pop
xchg
scas
clc
and
test
cdq
pop
mov
adc
jecxz
les
movs
mov
call
pusha
xchg
mov
or
lods
add
imul
xchg
hlt
sbb
neg
pop
xchg
cmps
pop
retf
movs
rdpmc
add
ret
or
and
stos
mov
gs
fistp
scas
jne
or
(bad)
sbb
jo
jle
popf
mov
aad
jne
jb
and
test
jge
(bad)
data16
(bad)
xor
gs
adc
ja
cmp
jno
test
adc
scas
gs
cmp
and
mov
xchg
mov
push
jb
ds
stos
gs
pop
in
jns
call
push
push
cmc
test
add
jbe
xchg
lock
push
lahf
or
sbb
rol
leave
xor
add
mov
les
ret
clc
cmp
iret
dec
fist
pop
mov
jp
and
pop
dec
pop
stos
push
jle
cmp
xlat
inc
push
jp
imul
mov
popa
jecxz
xchg
sub
xor
xchg
mov
jb
fcmovnb
jmp
jns
or
cmps
push
dec
scas
add
call
push
hlt
mov
adc
pop
(bad)
int3
daa
push
enter
jae
adc
fstp
or
inc
test
mov
add
pop
push
mov
lods
imul
hlt
inc
sub
xchg
pop
sbb
add
mov
sub
xchg
ret
ja
fisttp
dec
add
mov
jl
cmp
inc
adc
shl
int3
sub
nop
xchg
ror
mov
cmc
loop
jl
pushf
(bad)
jo
add
xor
jno
icebp
cld
sbb
(bad)
leave
pop
test
mov
pushf
cmp
jns
outs
scas
fsub
imul
ja
push
xor
jecxz
ja
jns
aas
jb
sub
sub
mov
cmp
adc
inc
push
outs
jp
retf
enter
pop
cwde
jae
mov
test
mov
xor
xchg
iret
mov
pop
mov
(bad)
pop
fisubr
inc
(bad)
cmp
ror
xor
inc
scas
call
sub
xchg
fs
lds
scas
shr
cmc
retf
sub
fnsave
bound
sub
leave
sbb
cmp
add
pop
jge
inc
imul
or
in
cwde
mov
jl
sbb
push
sub
push
mov
out
and
out
aam
jl
pop
push
pop
xor
lea
adc
mov
lds
adc
retf
sbb
dec
cld
inc
sti
dec
lock
jl
cmps
pop
push
aas
and
fs
cld
shr
xchg
(bad)
icebp
icebp
push
xor
push
xor
lods
iret
cld
lods
inc
clc
stos
cdq
cmp
cmp
cmp
(bad)
pop
inc
cmp
cmc
ret
je
mov
les
in
push
aam
pushf
sar
imul
outs
not
sbb
dec
xchg
cmp
pop
je
out
adc
sbb
mov
inc
test
mov
out
cli
fsubr
(bad)
add
jno
not
out
xchg
scas
pop
xchg
out
(bad)
push
outs
cmps
bound
fnstcw
and
mov
in
aad
push
push
lahf
in
ins
inc
out
imul
or
es
sub
(bad)
mov
(bad)
push
xchg
adc
ins
test
pop
fisttp
js
add
loop
mov
lds
jmp
xor
outs
push
lds
mov
pop
in
les
inc
bound
scas
inc
jmp
jae
add
dec
add
adc
adc
push
gs
sub
add
out
fwait
and
inc
and
fcomp
cmp
fstp
mov
sub
xchg
int
add
rol
aaa
stos
int3
clc
ins
icebp
jl
call
add
cmp
mov
rdpmc
inc
cld
inc
push
je
xor
sub
(bad)
das
or
retf
or
xor
mov
inc
loop
jns
push
inc
add
push
leave
(bad)
aad
loopne
xchg
stc
sahf
das
dec
es
jmp
add
cmp
cmc
test
cmc
fsub
and
mov
mov
mov
or
sub
movs
nop
mov
mov
popa
das
cmps
frstor
cmp
cmp
sbb
fisub
sub
sbb
dec
adc
cs
push
and
sbb
jge
and
sbb
sti
adc
in
cs
or
pop
cli
push
jp
inc
sbb
sbb
fwait
mov
lods
jnp
mov
inc
mov
out
cmp
pop
shl
in
fstp
in
(bad)
(bad)
imul
mov
mov
inc
ret
jp
cmc
cmp
inc
hlt
pop
or
jmp
push
pop
fsub
add
cmp
push
clc
(bad)
ja
inc
add
fcomp
stos
or
sbb
xchg
jno
nop
outs
sbb
xor
cli
jp
aad
pop
add
or
mov
sub
cdq
push
cli
pop
jl
loop
dec
out
rol
test
pop
xor
cmp
push
cmp
std
jecxz
xchg
sbb
out
xchg
jb
or
ret
dec
es
mov
aas
dec
mov
in
and
shr
and
push
cmp
test
aaa
sbb
mov
jle
lds
dec
or
add
cwde
leave
(bad)
test
jecxz
icebp
mov
add
lahf
out
and
or
mov
cdq
cmp
xor
jmp
cli
dec
in
and
ss
shl
es
sar
fimul
in
int
stos
call
add
aas
or
mov
cmp
cwde
mov
not
stc
mov
or
movs
adc
aaa
sar
fbld
pop
or
aad
or
push
fmul
and
test
imul
mov
out
lock
enter
pusha
dec
mov
cs
and
es
imul
fs
repnz
or
movs
(bad)
lock
xor
jnp
fimul
dec
mov
enter
dec
leave
mov
fwait
xchg
pop
lock
xchg
adc
dec
inc
sbb
(bad)
fbld
xchg
push
test
sahf
scas
iret
jnp
sub
cdq
std
mov
jbe
sar
inc
js
cmp
hlt
cwde
pop
clc
aam
(bad)
xor
xchg
mov
jo
mov
mov
repnz
mov
inc
(bad)
je
fdivr
push
nop
mov
repnz
and
sar
mov
scas
pop
fild
add
(bad)
sbb
scas
fisubr
pop
cmp
pop
in
cmp
adc
clc
rol
clc
out
and
jae
mov
retf
mov
das
sbb
lea
data16
rcl
xchg
aas
mov
out
jmp
pmulhw
in
cmp
adc
test
retf
cmps
das
jle
sub
ror
enter
mov
push
ja
stc
add
sbb
mov
fistp
hlt
mov
jne
loope
mov
jns
xchg
fnstenv
aaa
cmp
pop
jmp
ss
fs
cmp
(bad)
inc
push
inc
xchg
pop
sbb
imul
jnp
xlat
(bad)
fdiv
enter
xor
mov
stos
call
add
sub
cmps
pop
or
fidiv
call
sbb
bound
(bad)
adc
sub
daa
mov
cmp
xchg
popa
push
scas
setno
xlat
inc
jae
add
scas
xchg
ss
ret
outs
pop
retf
and
pop
jns
das
lock
or
mov
sbb
test
movs
xor
movs
inc
pop
mov
sar
mov
in
in
rol
mov
scas
adc
fild
inc
adc
push
outs
and
(bad)
and
test
lods
or
loope
inc
xchg
and
mov
mov
dec
adc
fadd
xchg
inc
icebp
add
cdq
out
(bad)
shl
mov
fst
dec
pop
int3
xor
push
sbb
mov
mov
in
imul
gs
daa
repnz
mov
pop
jge
or
xchg
xchg
push
jp
repz
jp
les
sub
sub
movs
jae
out
je
inc
lds
adc
fadd
neg
icebp
xchg
sub
in
xor
or
xor
in
cwde
fisub
push
scas
jno
sbb
repz
sbb
movs
mov
mov
and
push
ja
push
int
sbb
(bad)
addr16
lds
adc
aad
ins
outs
retf
push
inc
pop
dec
das
inc
(bad)
add
int3
inc
test
(bad)
div
(bad)
adc
lea
ror
jns
push
and
lods
and
pop
xchg
lock
setns
icebp
out
ror
mov
stos
push
lock
push
jl
movs
inc
out
lods
jecxz
xor
fwait
int3
or
mov
inc
xchg
imul
call
leave
iret
lds
retf
xor
fdiv
or
add
iret
gs
neg
mov
cmp
xchg
mov
push
or
and
xchg
daa
lea
repz
jl
test
les
out
ror
jnp
bndstx
cmc
gs
xor
xchg
stos
mov
stc
call
imul
ror
ins
jmp
xchg
jo
sar
daa
push
mov
ins
(bad)
aam
out
jnp
add
aad
cwde
pop
in
or
pop
jo
sub
sbb
push
(bad)
mov
xchg
cmp
add
(bad)
fisubr
mov
leave
stos
fsub
lea
jp
lods
jl
into
test
sbb
xchg
dec
jge
inc
xlat
call
xchg
jo
test
loopne
loop
mov
xor
ds
in
mov
mov
cmc
inc
ins
xchg
stos
(bad)
xchg
and
clc
jns
mov
inc
je
sub
je
int
and
lock
sub
mov
mov
xchg
mov
popa
(bad)
fwait
push
ror
add
and
dec
mov
xor
enter
loopne
lds
mov
adc
or
jb
lahf
arpl
pushf
inc
jne
jno
cmp
pop
mov
mov
and
pop
adc
pop
inc
(bad)
mov
ja
xchg
ja
cmp
fs
dec
test
cmps
push
xchg
mov
push
sahf
adc
add
push
rol
sub
iret
push
int
lea
scas
jge
out
mov
imul
add
icebp
mov
jmp
stos
das
cld
repnz
call
mov
sbb
sbb
imul
mov
(bad)
das
mov
outs
imul
imul
scas
(bad)
cmp
push
bnd
and
jb
add
and
mov
ss
jg
xor
dec
and
xchg
into
cmp
add
dec
(bad)
fistp
movs
cmp
mov
mov
and
out
in
and
add
loop
mov
fstp
out
mov
pop
into
xor
mov
pop
in
jnp
adc
out
(bad)
mov
mov
adc
mov
inc
cmc
jno
mov
add
xor
lds
cmps
test
xchg
mov
or
popa
imul
out
int3
inc
pushf
sbb
xchg
fstp
xchg
in
or
cmp
dec
jno
and
movs
add
test
cmp
iret
add
(bad)
fild
out
jne
xchg
sub
ins
aaa
xchg
(bad)
mov
(bad)
mov
dec
mov
lods
(bad)
out
mov
mov
mov
(bad)
sub
das
pop
leave
fisub
jp
xchg
cmp
ror
and
fwait
mov
or
jg
or
inc
shl
add
sub
jbe
mov
or
bound
jmp
aas
(bad)
fst
mov
cmps
cdq
outs
cld
(bad)
or
inc
outs
dec
fcom
sub
ds
cmp
bound
dec
push
call
jmp
jae
jno
inc
fwait
ror
adc
xor
pusha
mov
mov
mov
nop
jmp
cmp
retf
test
push
pop
aas
imul
sbb
adc
in
stc
xor
movs
push
cmp
push
and
xchg
mov
sbb
cmp
std
mov
xchg
jnp
jmp
ds
cs
mov
mov
fsub
mov
xchg
inc
hlt
xor
aas
sub
and
idiv
dec
into
int3
xor
inc
push
dec
push
(bad)
xchg
int3
jle
sar
and
movs
clc
jge
inc
in
sbb
stos
xor
dec
lods
es
loop
sahf
sbb
push
loopne
cmp
cmp
sub
mov
rcl
test
adc
mov
push
jg
sti
(bad)
inc
dec
jp
ins
add
push
into
cmp
push
pushf
dec
mov
cmp
sub
add
and
sbb
pop
adc
lods
pop
inc
scas
and
ret
in
in
lock
push
jo
cli
xor
cmp
call
mov
mul
push
jmp
jb
ds
xor
adc
or
mov
push
aam
xchg
iret
pop
sbb
dec
mov
sub
into
sub
sahf
jbe
cmps
mov
fistp
sbb
lahf
xor
jo
in
dec
clc
add
pop
loopne
and
mov
mov
lds
sar
xchg
stos
popf
mov
cmp
fmul
sub
jg
mov
aam
xchg
lahf
lds
or
sbb
cmp
(bad)
mov
mov
pop
jp
retf
push
jle
shl
hlt
enter
mov
retf
mov
push
cmp
inc
dec
push
outs
cmp
into
push
jl
popf
sbb
pop
mov
and
jnp
pop
mov
sbb
mov
cmps
pop
mov
dec
stos
in
pop
mov
or
adc
imul
push
push
cs
repz
bound
xchg
xor
push
jmp
mov
pop
push
sub
aas
or
mov
das
mov
stc
pusha
cld
cdq
cmp
rol
adc
bound
stos
mov
pop
mov
ds
popf
mov
retf
xor
mov
mov
fisttp
push
or
in
push
mov
(bad)
into
fiadd
adc
into
mov
mov
out
mov
fwait
dec
sub
aaa
dec
les
in
adc
jnp
daa
cmp
xchg
test
jae
pop
adc
in
pop
je
jo
jle
lds
adc
repz
pop
sub
(bad)
(bad)
shl
(bad)
retf
mov
xchg
test
out
outs
ds
rsqrtps
push
jge
adc
adc
imul
gs
add
sbb
lea
xor
jno
imul
(bad)
fucomi
xor
mov
stos
and
push
mov
retf
fimul
xor
(bad)
les
(bad)
(bad)
mov
in
popf
mov
xchg
push
ins
jg
inc
rol
(bad)
daa
sti
add
push
mov
pop
cmp
popa
retf
in
jl
sbb
test
aaa
pop
stos
imul
or
call
sar
aaa
jg
(bad)
and
mov
ret
test
fld
in
cmp
or
outs
push
cmp
add
cld
cmps
fsubr
mov
mov
test
cdq
dec
mov
movs
jecxz
pop
int3
or
test
scas
jle
clc
(bad)
mov
in
shl
es
icebp
inc
retf
mov
rcr
je
mov
stos
pop
inc
jge
loope
in
and
aam
cmp
inc
(bad)
jbe
fmul
dec
lods
shr
sub
into
or
jno
mov
inc
aaa
or
aaa
xor
mov
pop
pop
sub
cmps
inc
cld
adc
mov
data16
push
add
cmps
xchg
es
push
mov
out
in
jnp
push
dec
cmp
ret
ss
jo
xchg
adc
jmp
repnz
retf
and
add
scas
(bad)
lock
clc
imul
sub
scas
and
dec
ret
pushf
loopne
pop
(bad)
icebp
push
pop
jne
add
sbb
push
mov
idiv
or
sub
leave
jb
dec
pop
sbb
fld
mov
jl
xor
ficom
ror
adc
imul
jno
sub
cmp
fs
fcom
adc
push
cmp
popa
sahf
and
cwde
fsub
out
add
cmp
ds
push
xor
jne
aaa
lods
bound
and
aaa
inc
rcr
mov
hlt
jl
xor
xchg
inc
xchg
add
cmp
inc
repz
ja
mov
cmp
lahf
jge
sbb
inc
ret
addr16
add
jecxz
jne
out
mov
xchg
sbb
iret
cmpxchg8b
and
bnd
inc
cmp
jp
or
popf
mov
aas
pop
ins
inc
cmps
add
jbe
adc
adc
div
call
mov
fs
ret
enter
dec
inc
call
retf
ffreep
nop
movs
imul
(bad)
jns
loopne
cmp
adc
push
or
arpl
jmp
sbb
pop
cmp
pusha
mov
cmps
sbb
xor
dec
mov
push
fcmove
je
cmps
sbb
add
maskmovq
imul
mov
and
add
fidivr
mov
jp
mov
into
cwde
adc
xchg
mov
dec
out
popa
xchg
push
pop
inc
js
sbb
jecxz
push
ds
call
jp
xchg
stos
mov
dec
gs
in
ins
pop
hlt
sub
push
push
frstor
sbb
xchg
or
sbb
add
pop
add
rol
daa
xchg
dec
cmc
sub
mov
repz
push
mov
inc
aas
jge
jae
aaa
popf
xor
fldenv
data16
aam
int3
test
jb
adc
jns
sbb
in
xlat
lods
fidivr
in
or
out
out
adc
imul
mov
and
arpl
xchg
dec
mov
push
out
stos
cs
fwait
aaa
(bad)
(bad)
mov
cmp
je
addr16
push
and
loopne
xchg
mov
std
popa
cmp
or
mov
scas
fdivrp
test
pop
and
sub
sti
or
xor
or
jnp
clc
je
sub
retf
cld
enter
stos
xor
sbb
in
(bad)
fsubr
ds
ficom
cdq
or
inc
cmp
fs
aaa
cwde
imul
shr
sbb
jge
mov
xchg
inc
aam
sbb
push
scas
push
jnp
adc
jle
es
enter
and
es
push
and
jae
(bad)
out
int3
fdiv
cmp
xor
cmp
ret
mov
test
les
rcr
xor
sub
ror
clc
xchg
xchg
mov
push
fisubr
jbe
ficomp
jmp
push
aas
mov
cmp
daa
sbb
jne
mov
add
call
add
scas
xor
mov
push
and
jp
cmps
fldln2
push
xchg
popa
jns
jbe
(bad)
retf
pop
pop
mov
push
mov
inc
std
enter
inc
pop
outs
scas
lods
xchg
dec
out
std
pushf
loop
dec
adc
out
test
aaa
into
jno
iret
mov
jae
mov
inc
mov
and
inc
retf
xchg
jne
xchg
ins
rol
cmp
lock
cli
xchg
jecxz
out
or
(bad)
jle
xchg
mul
test
xchg
js
(bad)
iret
add
push
pop
xchg
sub
jle
mov
xchg
or
push
popa
xchg
push
ret
icebp
(bad)
repz
xor
out
ffree
lahf
ja
and
pop
and
push
and
aad
lds
sbb
pop
hlt
aaa
clc
outs
fnstenv
repnz
jmp
js
dec
push
pop
cli
xlat
or
ja
(bad)
and
outs
ret
fiadd
or
lds
outs
int
cmp
movs
jmp
mov
pusha
add
nop
cwde
test
jne
ins
mov
inc
xchg
imul
or
adc
cmp
sub
or
rcr
aaa
cmp
ret
out
out
or
and
dec
sub
adc
ss
shl
pop
adc
sub
dec
sbb
inc
dec
jmp
call
xor
jp
adc
mov
cmps
lahf
add
pusha
dec
mov
push
mov
into
add
je
jg
stos
jp
dec
inc
add
popf
and
pop
mov
cmps
xchg
cmp
adc
adc
jnp
(bad)
add
mov
loope
or
add
(bad)
xor
jne
sbb
cmps
stos
jg
cmps
out
cmc
inc
dec
test
sar
or
sbb
mov
ret
data16
sbb
cld
aas
mov
push
fidivr
fnstenv
(bad)
repnz
xchg
jmp
xor
js
cmp
cmps
sub
mov
xchg
fxch
inc
jbe
retf
pusha
and
dec
fidivr
inc
add
add
sub
jns
popa
lds
push
aaa
imul
retf
mov
ftst
sbb
iret
shr
dec
ins
lahf
mov
les
clc
sahf
cmp
sub
xchg
jno
push
retf
push
xchg
or
daa
push
arpl
push
xchg
inc
movs
xor
cmp
cli
ja
and
mov
ss
mov
(bad)
hlt
mov
div
cmp
outs
gs
loop
and
pushf
mov
movs
dec
push
push
mov
test
jno
fnstenv
mov
in
lods
out
rol
jns
scas
retf
cmp
mov
dec
mov
pop
out
xchg
mov
call
or
add
or
cmp
call
int
hlt
push
fst
les
popf
dec
push
sub
daa
xchg
stos
and
test
dec
sub
std
std
mov
int3
cmp
push
scas
push
sbb
pop
push
jno
jne
(bad)
lahf
xor
ret
sbb
lea
popa
pusha
dec
movs
xor
pushf
pop
add
or
idiv
out
inc
(bad)
jb
mov
xchg
and
jge
adc
xchg
fcmove
sub
movs
imul
push
cmp
loop
outs
pop
stc
and
lds
arpl
aaa
mov
xor
inc
sub
cmp
jns
cdq
add
xchg
or
test
aad
and
cmp
cs
iret
test
xchg
adc
jb
fistp
(bad)
aaa
add
xchg
jp
and
push
sbb
ret
(bad)
(bad)
jmp
idiv
fwait
aad
jo
stc
pop
mov
int3
fld
xchg
mov
cmp
xchg
push
shl
sbb
test
xor
test
in
jnp
pop
sub
fmul
inc
leave
fs
(bad)
loope
mov
out
lods
sub
cmp
mov
mov
push
jp
pop
cmc
out
sbb
add
cmp
repz
bound
scas
dec
mov
xor
adc
mul
rol
call
xchg
mov
xchg
jmp
imul
fld
in
popf
sbb
mov
stos
mov
add
int
xchg
mov
in
or
inc
or
xor
dec
scas
std
in
or
push
sbb
mov
leave
loop
out
mov
and
cmp
jmp
rcr
cmc
jmp
daa
jns
call
shr
jmp
cld
inc
fwait
outs
dec
and
mov
fwait
or
sahf
cmp
fisub
mov
inc
es
retf
cmps
pop
pop
(bad)
jmp
inc
aam
adc
mov
test
dec
dec
and
out
pop
out
mov
and
xchg
xchg
adc
scas
daa
sahf
adc
cmp
shl
push
stc
cs
bound
xor
dec
scas
pop
pushf
and
mov
xor
repnz
mov
adc
cmc
mov
repnz
das
jne
mov
cmp
rcl
push
mov
dec
push
pop
inc
out
lea
movs
xchg
pusha
push
sub
pop
jmp
mov
cmps
inc
dec
fnstsw
mov
xchg
in
sbb
out
sahf
fldcw
jecxz
pop
mov
sar
(bad)
jp
jne
mov
mov
retf
add
das
add
xchg
xchg
inc
xchg
xchg
push
adc
push
xor
jge
hlt
daa
clc
pop
in
jle
pop
mov
cld
push
dec
add
sub
xchg
into
mov
sub
icebp
xor
(bad)
cmc
jg
sti
mov
xchg
xchg
jne
aad
out
pop
mov
mov
pop
mov
loopne
pop
test
int3
cmp
pop
rcl
scas
fbld
adc
inc
inc
xchg
lds
sbb
outs
das
loopne
push
fimul
jae
out
cmps
and
(bad)
cmp
idiv
fidiv
dec
inc
push
je
stos
aaa
add
outs
scas
(bad)
adc
jmp
ds
leave
cmp
add
mov
mov
push
xor
jp
jmp
pop
sbb
jmp
inc
adc
sahf
sti
loope
(bad)
sahf
imul
lock
mov
pusha
rcl
sub
xchg
add
int3
stc
inc
or
in
std
fcomi
into
pop
rcl
arpl
inc
cmp
jp
stc
pusha
lock
xor
(bad)
arpl
out
push
daa
sub
sub
ret
jmp
movs
mul
pop
add
jbe
jo
scas
loopne
ds
push
in
fsubr
adc
pusha
jns
dec
jmp
(bad)
cmp
push
sbb
cmc
cmp
jge
xchg
jmp
clc
outs
in
cmp
and
(bad)
stos
dec
xchg
inc
repz
xor
mov
repz
aam
stc
and
mov
(bad)
imul
lods
vcvttss2si
fidivr
xchg
push
mov
mov
gs
je
dec
inc
outs
xor
cdq
out
and
cmps
out
jle
push
inc
mov
(bad)
push
mov
(bad)
cmp
mov
shl
xchg
and
(bad)
aam
mul
rol
adc
or
ror
mov
mov
and
in
test
in
ret
rcr
jle
adc
push
pop
call
xchg
dec
sahf
inc
das
jp
pop
imul
mov
push
jge
dec
nop
adc
ror
inc
shl
xchg
pop
mov
nop
or
arpl
sub
popf
mov
cld
xor
adc
int3
ror
mov
fst
int
inc
test
add
cmp
cld
in
add
and
add
mov
pushf
jg
xor
sub
xor
mov
retf
push
xchg
cmc
lods
pop
cli
or
mov
clc
cmps
fbld
and
imul
out
pop
outs
daa
mov
retf
out
loope
and
test
fsub
(bad)
push
push
mov
push
sub
hlt
aas
add
pop
mov
jo
popf
and
mov
xor
mov
dec
cmp
pop
retf
pop
mul
fild
cmps
pop
movs
inc
lods
scas
xchg
pop
lea
loopne
xor
scas
sub
sbb
(bad)
fbld
cs
jp
xchg
cmp
xchg
fnstsw
(bad)
sub
shl
or
adc
sbb
shl
loope
mov
mov
out
popa
stos
or
movs
pop
ins
hlt
jne
jp
(bad)
or
ss
rol
test
or
mov
or
retf
lock
inc
lock
and
leave
push
mov
dec
outs
dec
leave
test
pop
outs
xor
vmwrite
push
mov
push
cmp
xchg
or
int
xchg
call
enter
adc
in
lods
jo
rcr
adc
scas
push
sub
mov
pop
adc
stc
fld
xchg
pop
mov
ins
js
out
or
inc
or
cmps
xchg
in
or
push
mov
popf
add
jle
daa
jmp
aad
xchg
loopne
xor
mov
pop
pop
pop
rol
lods
fwait
push
retf
xchg
cmps
xchg
sar
sti
lea
adc
cmc
scas
and
lock
aas
mov
cmp
ja
test
xchg
ins
stos
movs
jo
dec
mov
ret
daa
int3
jmp
add
test
jns
pop
ins
mov
retf
xor
test
dec
adc
daa
inc
(bad)
pushf
xor
cmps
add
add
aad
iret
fadd
mov
shr
xor
dec
enter
pop
add
inc
push
cmps
jbe
add
mov
adc
cmc
cwde
mov
sub
jmp
sbb
pop
ss
push
mov
test
bound
mov
pop
into
js
stc
jns
dec
jmp
and
xor
out
fld
sub
or
push
aad
xchg
sub
or
mov
addr16
dec
mov
dec
pop
lds
cmp
scas
ins
or
push
int
push
fwait
addr16
ja
or
repz
outs
inc
cwde
cs
push
rcl
cmp
inc
icebp
out
lea
jns
cmp
push
mov
xchg
and
push
dec
add
test
pop
mov
in
(bad)
xchg
dec
mov
jp
(bad)
xlat
out
jge
pop
and
or
xlat
shl
lock
xchg
xchg
call
push
rcr
inc
sbb
into
(bad)
mov
xchg
ret
cmc
jno
ret
jg
loope
mov
inc
push
mov
pop
pop
jbe
shl
push
push
sbb
leave
and
sub
push
or
push
adc
mov
mov
clc
loope
into
fs
icebp
xor
div
mov
dec
and
imul
out
(bad)
inc
icebp
and
ins
clc
cs
xor
or
inc
jb
out
and
sbb
adc
push
xchg
mov
call
aaa
pop
lahf
fwait
add
es
xor
adc
jge
aas
and
fwait
xor
cmp
jbe
mov
push
sbb
pop
jo
xlat
and
outs
mov
test
push
adc
cmp
fistp
mov
cmp
fwait
cmp
inc
mov
xor
mov
arpl
mov
ror
in
sub
imul
fld
ss
in
inc
jns
xor
xor
dec
sbb
inc
add
pop
test
mov
add
fidivr
jge
test
dec
mov
dec
push
stos
rcl
jp
data16
mov
scas
test
and
pusha
mov
test
stc
fld
fcom
(bad)
(bad)
and
jno
int3
mov
push
test
(bad)
jle
or
iret
or
scas
xor
lahf
ret
pushf
add
test
xor
xor
call
push
and
or
inc
xchg
or
(bad)
int
mov
pop
movs
out
imul
push
test
xchg
jge
retf
and
jecxz
mov
mov
mov
clc
stc
jmp
jnp
retf
sahf
sub
jae
mov
(bad)
loop
js
xchg
and
dec
in
(bad)
mov
jge
arpl
movs
(bad)
out
cmps
sbb
movhlps
pop
xlat
shl
inc
mov
call
sbb
hlt
pop
mov
xchg
jecxz
(bad)
enter
inc
sub
lds
jg
mov
mov
test
imul
int
pop
cmps
imul
stos
ja
cs
cdq
pop
js
(bad)
dec
les
in
imul
add
pop
nop
repnz
fs
ret
mov
pop
pop
add
adc
add
mov
adc
sar
jno
not
cmp
adc
fsubr
mov
cmc
pop
in
cmp
and
or
pop
cmp
pop
jle
mov
jb
adc
retf
push
and
and
or
add
xchg
adc
ficomp
mov
movs
in
or
mov
fdivp
repnz
les
pop
rcr
dec
mov
fld
fisubr
into
aaa
daa
aad
lods
jne
dec
leave
jo
sub
mov
fist
retf
pop
mov
mov
push
in
cmp
scas
cmp
inc
shl
or
test
sub
jle
bound
push
loopne
ret
fcmovnb
ret
dec
add
jp
shl
stos
xor
movs
mov
lods
dec
pushf
and
adc
push
jmp
test
push
(bad)
jbe
cmc
adc
test
ret
outs
jae
add
push
mov
idiv
(bad)
aad
arpl
in
xchg
mov
movs
(bad)
cmps
dec
inc
or
push
outs
cmp
mov
sub
jae
sub
add
pop
sbb
mov
in
xor
hlt
jp
loopne
cwde
cli
and
adc
pop
test
cli
pop
lods
jb
cmp
jmp
xor
es
xchg
movs
shl
ds
imul
push
dec
push
in
(bad)
mov
shl
fsubr
xchg
lock
fcmove
or
push
daa
repz
xlat
push
fidivr
cwde
leave
iret
pop
push
sbb
push
aaa
mov
cmp
add
jns
sbb
shl
and
xchg
mov
dec
stc
sbb
inc
rol
fisub
sub
es
dec
adc
sub
xor
push
and
popf
adc
lods
dec
adc
cmc
into
xor
cli
xchg
ror
aas
xchg
hlt
push
dec
mov
int3
(bad)
xlat
push
movs
inc
push
ins
and
xchg
or
cli
fucom
adc
(bad)
in
xchg
jl
stc
mov
mov
ds
aam
sbb
nop
mov
push
mov
xor
add
popa
pop
fsubr
test
cwde
push
sbb
sub
push
push
add
cmp
sbb
pop
fld
cs
sub
push
or
mov
jmp
cmp
xor
(bad)
push
cmc
retf
test
add
out
nop
cwde
fidiv
aam
ins
xchg
sub
loopne
shl
fst
(bad)
movs
fwait
jns
adc
mov
pop
stc
call
adc
cmc
rol
hlt
push
sbb
adc
sub
(bad)
aam
mov
adc
jb
xchg
push
xchg
mov
out
repnz
movs
popa
fs
cmp
xchg
adc
nop
(bad)
jg
(bad)
jmp
call
les
adc
jle
rcr
xor
jp
in
les
fwait
das
repnz
jno
xchg
(bad)
push
mov
rcr
dec
mov
jg
jmp
pop
sbb
neg
jle
in
or
cmc
and
lods
push
sbb
dec
loop
pop
or
cmp
pop
dec
jp
push
icebp
dec
sar
or
mov
push
push
call
rcr
pop
inc
scas
sahf
cmp
add
xchg
das
js
dec
nop
movs
sbb
test
mov
or
ror
add
bsf
sbb
es
push
cwde
loopne
je
(bad)
leave
mov
hlt
jge
fs
mov
call
inc
std
imul
cli
int
(bad)
cld
mov
jp
push
iret
mov
sbb
cmp
dec
iret
cmp
stos
dec
sbb
cmp
and
push
xchg
dec
mov
data16
dec
cmp
mov
mov
cmp
and
cmc
fld
leave
loopne
mov
dec
push
pusha
adc
add
jo
sbb
mov
or
ja
(bad)
mov
cdq
hlt
sbb
dec
outs
js
sbb
in
loope
lds
pop
rol
les
and
adc
mov
fsubr
in
fwait
mov
inc
and
jae
add
xrelease
xor
push
imul
daa
(bad)
jmp
cmps
cld
fadd
call
push
jecxz
out
mov
xlat
rcr
popf
add
psubsw
mov
cmps
push
addr16
in
mov
jae
inc
loope
outs
call
push
pop
jecxz
jo
sub
cmp
mov
mov
into
mov
clc
jg
sbb
push
cwde
sub
sub
ss
inc
or
popf
sub
xchg
not
mov
xchg
cmp
sti
push
push
inc
hlt
stc
pop
or
cmp
int3
or
add
inc
push
dec
jmp
mov
push
pop
sbb
shr
xor
ins
xor
fbstp
in
and
outs
and
mov
sbb
retf
imul
nop
cmp
sbb
in
sbb
or
(bad)
das
div
xor
mov
lea
add
aad
lock
div
aas
iret
push
lods
pop
arpl
push
xor
xor
xchg
jg
sbb
dec
loop
leave
(bad)
fisttp
ja
test
sbb
sub
push
daa
jmp
add
push
je
cwde
lock
or
sub
xor
popf
and
iret
js
or
jmp
or
jmp
mov
outs
adc
sti
or
ins
push
jnp
(bad)
jmp
mov
(bad)
loopne
push
cwde
popa
dec
cmp
jmp
xor
cmp
mov
(bad)
cmps
ss
mov
sub
div
pop
in
out
xchg
jmp
and
scas
xchg
repz
and
out
(bad)
std
mov
stos
les
inc
out
push
outs
ss
adc
or
jmp
scas
retf
jne
and
ror
ss
imul
ja
stos
inc
rcl
aas
xchg
push
cmp
imul
inc
jae
retf
pop
enter
lods
or
aam
and
inc
jae
and
rcr
push
mov
sbb
inc
inc
ror
jmp
mov
jg
cmps
pop
unpckhps
repz
loopne
mov
add
imul
add
inc
cmp
fdivr
push
ss
imul
ins
lds
repnz
cmp
jne
push
pop
call
sahf
jb
mov
xchg
mov
pop
outs
push
imul
cmps
and
jle
cmp
dec
cmp
adc
cmp
and
out
adc
xor
mov
outs
mov
cwde
adc
xchg
or
hlt
pop
cmp
mov
xor
into
das
stos
test
retf
scas
gs
iret
fcomp
lahf
or
push
xlat
mov
dec
mov
xlat
pop
push
mov
push
call
xchg
jp
add
cld
sub
or
test
push
jo
fiadd
sbb
pop
mov
adc
mov
cmp
in
or
ror
ins
adc
push
xor
movs
add
inc
jp
dec
movs
cmps
mov
dec
inc
mov
shr
into
sbb
mov
adc
cmp
inc
xor
xor
ret
pop
adc
jl
fdiv
icebp
xor
sar
sub
xor
push
push
mov
jp
cwde
call
inc
push
pushf
int3
pop
inc
mov
fldenv
jo
add
adc
adc
inc
shr
outs
push
mov
sub
lock
fdiv
call
ins
add
out
icebp
scas
inc
mov
ret
pop
fs
(bad)
mov
scas
jbe
ret
jle
xchg
xor
std
cmc
or
js
ror
scas
sub
push
imul
ret
stos
sbb
fsubr
xchg
lahf
mov
outs
cmp
pop
retf
stc
mov
retf
imul
cmp
arpl
add
or
push
in
cmp
cld
imul
enter
sub
mov
cmp
sub
test
js
or
mov
pop
xlat
dec
mov
sbb
jmp
cmps
cmp
fwait
dec
imul
sbb
pop
std
scas
aas
call
test
jb
in
and
repz
loop
popf
push
test
jbe
push
ror
xchg
retf
mov
mov
nop
sbb
iret
fmul
test
mov
jmp
data16
in
add
loope
jg
fist
aas
and
fisub
ror
add
repnz
leave
fdivr
and
test
jne
jb
int
js
adc
mov
push
xchg
ins
call
(bad)
pop
push
push
jl
or
inc
adc
pop
xor
dec
xor
sub
mov
pop
out
pop
jl
lea
push
push
retf
leave
push
popa
iret
inc
outs
push
cld
ja
(bad)
pop
ins
addr16
jnp
leave
pop
adc
adc
je
aad
pop
adc
jp
call
lea
adc
xchg
or
(bad)
fadd
jo
jg
inc
int3
stc
push
mov
sub
xchg
int
push
sub
cld
sub
(bad)
rcl
mov
jmp
push
jo
jmp
pushf
cwde
sbb
push
push
pop
inc
mov
mov
fnstsw
pop
push
call
mov
scas
int
xor
dec
pop
mov
dec
leave
push
jmp
sub
in
stos
clc
push
lock
jns
aaa
mov
into
cs
mov
sub
pop
ins
test
or
imul
loopne
push
loopne
sahf
add
dec
retf
inc
pushf
shr
mov
aad
xchg
xchg
out
xor
int
push
bound
add
retf
imul
inc
popa
movs
arpl
std
aaa
sbb
sbb
into
xor
inc
add
mov
ja
push
xor
pushf
xor
popa
shr
sti
iret
mov
out
(bad)
mov
xchg
jle
loope
stc
ss
sub
jge
sub
sub
sub
mov
inc
dec
pop
outs
or
dec
movs
clc
fld
sub
out
jmp
test
lock
repnz
test
xor
dec
jbe
outs
xchg
add
or
cmp
push
sub
arpl
jge
sti
stos
repz
push
and
(bad)
clc
sub
popa
mov
xchg
or
sub
cli
xor
popf
cli
push
imul
fstp
mov
mov
js
xlat
xor
add
cld
(bad)
jbe
jmp
sbb
cmp
push
loope
stos
retf
add
fsubp
xor
cwde
dec
xor
mov
dec
rcr
xor
jl
js
push
sub
pop
xchg
mov
push
addr16
xor
dec
xchg
and
lock
or
fild
in
mov
sbb
mov
jo
sub
and
adc
or
out
out
and
sub
mov
out
rcr
push
dec
call
rcl
and
sub
sub
loop
push
stc
mov
je
les
cmp
out
mov
cdq
mov
xor
cld
jp
cdq
jg
sub
or
sub
aas
les
ins
mov
movs
cmpxchg
int
xor
cdq
rcr
cwde
aad
popa
pop
xor
dec
sbb
dec
lea
sub
add
jb
cmp
xchg
mov
(bad)
repnz
sub
fstp
and
pop
sti
add
int3
fisttp
jb
sub
retf
adc
sbb
jbe
lock
pop
xchg
inc
mov
dec
pop
and
cwde
sub
jo
stc
out
mov
into
push
lds
bound
test
cmps
fs
inc
xor
(bad)
loop
lds
stos
into
test
cmp
xchg
or
jp
loope
loop
push
(bad)
xor
scas
imul
jne
cmps
cli
or
cmp
fdivr
test
jecxz
lods
aaa
int
sti
mov
ja
rcl
jmp
mov
cmps
jne
push
leave
push
pop
scas
sub
mov
stc
fistp
dec
push
bound
jne
sub
pop
js
push
mov
hlt
xchg
push
mov
sbb
cwde
cdq
fmul
adc
(bad)
out
les
inc
mov
cmp
test
inc
data16
ret
inc
popa
fs
mov
cmp
in
daa
cmps
loope
xor
scas
inc
mov
out
mov
ins
sbb
ins
mul
ror
inc
dec
or
pushf
pop
addr16
sar
aaa
loopne
les
cdq
mov
add
enter
pusha
fst
mov
movs
push
cmc
push
jg
out
lods
stc
jecxz
push
dec
test
rcl
outs
sbb
sbb
loopne
mov
mov
mov
out
dec
aaa
cld
adc
cmp
ins
push
sub
add
add
jno
mov
or
sub
daa
ins
or
add
test
lods
mov
ret
shr
fst
sti
inc
aad
loop
cdq
cmps
fwait
aas
jae
repnz
sbb
aam
mov
jno
scas
push
jb
jle
adc
ret
ins
jle
or
mov
or
pop
cmc
fyl2xp1
jmp
mov
or
push
or
je
(bad)
scas
push
push
and
adc
mov
mov
cs
pop
mov
out
movs
movs
and
scas
sub
mov
and
adc
rol
mov
rcr
add
mov
dec
dec
jbe
std
inc
fmul
mov
das
mov
or
sbb
(bad)
jge
idiv
test
outs
inc
sub
mov
sbb
xlat
push
out
or
jl
add
lds
icebp
repnz
test
stos
dec
xchg
cmp
imul
jmp
sbb
mov
outs
(bad)
add
repz
scas
arpl
(bad)
aam
fisubr
stos
test
mov
(bad)
xchg
or
xchg
inc
and
cmp
aaa
movs
mov
inc
adc
out
pop
in
and
xchg
fdivp
sub
icebp
pushf
cmp
xchg
sti
dec
movs
in
jae
mov
popf
sbb
out
nop
neg
push
mov
mov
pop
(bad)
in
pop
mov
mov
cld
fldcw
cmp
cdq
cwde
fidivr
cwde
add
not
jl
sbb
and
fwait
shl
mov
xchg
cli
test
daa
pop
jg
push
and
jecxz
jmp
jno
mov
mov
push
xor
inc
pusha
push
adc
das
hlt
nop
mov
in
jmp
retf
xor
mov
push
lock
adc
repnz
jnp
and
xchg
(bad)
jmp
pusha
dec
ins
(bad)
fucom
mov
mov
aam
(bad)
dec
mov
and
cmp
cmps
jmp
adc
aam
scas
pop
or
(bad)
mov
mov
mov
push
push
mov
or
jbe
or
loope
push
jnp
dec
leave
jmp
ret
push
push
icebp
inc
and
mov
push
sub
loope
and
mov
inc
sbb
clc
inc
push
js
inc
clc
or
push
pop
pop
es
push
hlt
cmps
pop
into
std
fcom
pop
lea
sub
sbb
cmp
xchg
xchg
push
rcl
es
js
or
in
in
call
test
lfence
pop
fisttp
ror
and
scas
xor
movs
xor
cmps
in
mov
dec
jnp
std
jo
test
jnp
dec
jge
dec
push
addr16
in
stos
lods
inc
dec
jmp
xor
pusha
jg
push
std
mov
or
xchg
jnp
xlat
xchg
in
sbb
bound
mov
and
scas
sti
push
(bad)
imul
jp
sahf
aam
xchg
dec
into
mov
idiv
les
pop
ins
cld
dec
cmp
mov
cs
lods
mov
mov
or
mov
loope
jbe
stos
rol
jmp
cmc
gs
sbb
xor
mov
add
out
nop
xchg
mov
and
jae
jp
mov
jecxz
xchg
xchg
retf
test
or
div
mov
cmc
sub
(bad)
cmp
out
xor
mov
pop
lock
mov
add
inc
ror
sbb
(bad)
sti
cs
enter
test
out
in
data16
jg
inc
inc
xor
enter
(bad)
jnp
mov
stos
outs
sbb
shl
push
pop
sub
imul
add
jle
cmp
sbb
test
out
cmp
lods
aaa
(bad)
push
mov
xchg
sbb
push
int
cmp
xor
sbb
lods
fcomp
and
pop
stos
mov
loop
shl
adc
(bad)
aad
addr16
push
jl
repz
cmp
jge
fwait
sar
inc
(bad)
es
xchg
push
adc
xor
out
repz
out
call
push
scas
pop
push
jae
xor
repz
fwait
leave
push
adc
data16
xor
dec
dec
test
xor
pop
dec
ficomp
les
enter
xor
pop
adc
test
sub
xor
or
add
xchg
sahf
xchg
add
out
loope
inc
and
rcl
sub
jb
or
ss
xor
dec
out
mov
sub
cwde
ds
fwait
cmc
popf
adc
shl
push
btr
add
sbb
dec
mov
push
xor
fstp
stos
add
dec
add
mov
sub
push
dec
sub
jnp
outs
jns
sub
pop
repnz
shl
mov
call
loop
lea
jle
sbb
xchg
repnz
fcom
fnstcw
fnstsw
test
dec
aam
jp
(bad)
cli
dec
loop
in
push
pop
sbb
data16
call
cli
add
aas
fs
jb
iret
in
inc
mov
push
cld
out
push
dec
adc
fwait
push
inc
mov
in
pop
xchg
inc
sbb
(bad)
pop
ss
es
dec
retf
push
cmps
sar
stc
jmp
xchg
mov
xchg
mov
sub
loopne
inc
ret
movs
fwait
pusha
push
xchg
(bad)
test
sub
sbb
test
mov
xor
jnp
aas
stc
push
(bad)
xchg
repz
gs
in
pop
or
xchg
mov
pop
scas
popf
dec
xchg
jle
ds
or
dec
ret
fnstcw
test
and
loope
lods
stc
and
and
addr16
arpl
xchg
addr16
jmp
sub
mov
push
imul
sbb
pop
xor
fild
mov
xchg
ins
push
cvtps2pi
push
xlat
jmp
pusha
dec
xor
adc
inc
(bad)
icebp
cmps
or
(bad)
adc
push
jnp
sti
mov
mov
jno
lock
mov
shl
mov
je
mov
jne
mov
sbb
cmp
scas
(bad)
js
cmp
pop
mov
add
das
mov
mov
bound
ja
cmp
clc
xchg
out
inc
not
sbb
cmp
hlt
or
or
pop
inc
xor
repnz
pop
repnz
lds
fadd
dec
outs
and
lea
mov
cwde
push
mov
hlt
dec
leave
sbb
xor
sub
mov
inc
call
rcl
call
sbb
fucomi
rcl
addr16
bound
jge
dec
out
addr16
call
gs
xchg
int3
imul
out
xchg
sub
mov
data16
mov
and
rol
cmps
add
shl
push
cmp
pop
pushf
mov
push
sbb
sbb
fwait
mov
mov
rcl
jp
not
stos
or
ds
frstor
hlt
gs
dec
int
mov
aad
pop
add
in
ret
ret
mov
or
(bad)
mov
mov
inc
dec
xlat
out
push
or
inc
xchg
or
xchg
xchg
les
and
ja
inc
jb
xchg
dec
popf
lods
mov
lock
fwait
inc
and
or
inc
sbb
sbb
xchg
cld
cmp
inc
mov
pop
lods
push
pop
mov
outs
int3
in
je
ds
dec
or
(bad)
ror
xchg
(bad)
cld
dec
inc
mov
cmp
popa
jmp
jo
cmp
das
loopne
retf
mov
mov
test
cmp
out
aad
mov
hlt
xor
out
sbb
aas
ss
ret
and
addr16
js
rol
addr16
(bad)
ja
(bad)
shl
adc
enter
or
push
into
fs
dec
jae
cmp
adc
push
aam
in
call
retf
in
cmps
mov
ss
add
dec
jmp
jo
fwait
xlat
lods
add
enter
pop
mov
xor
rcl
dec
mov
std
mov
adc
cwde
(bad)
je
gs
pop
jg
clc
cld
or
cmps
xor
add
jno
inc
dec
mov
ret
or
jge
repnz
jo
and
and
es
popf
sar
ja
jg
enter
xchg
scas
cdq
ret
sar
xchg
jle
inc
in
push
cmp
pop
mov
and
aad
mov
jmp
in
pop
sbb
pop
test
and
das
in
stc
jp
daa
push
push
xchg
push
xor
test
or
ret
outs
and
imul
pop
cmp
inc
sbb
retf
adc
xchg
scas
mov
rcl
repnz
push
dec
and
mov
inc
sti
sti
(bad)
mov
cwde
mov
add
ja
std
sbb
mov
adc
push
dec
xlat
pop
dec
nop
mov
mov
(bad)
not
adc
ja
sbb
enter
and
in
push
mov
xor
lods
retf
pop
stos
pop
je
les
xchg
sbb
xchg
sbb
ror
jp
push
bound
cmp
jns
dec
dec
out
les
outs
mov
shr
pushf
xchg
in
fistp
sbb
inc
pop
inc
arpl
or
xchg
scas
mov
pop
lahf
outs
inc
bound
and
jg
and
mov
jo
shl
ins
xchg
cmp
repnz
ror
or
mov
div
jno
fdiv
xchg
daa
test
fimul
mov
cmc
sbb
(bad)
popf
mov
in
and
fisubr
addr16
xchg
adc
mov
xor
adc
xor
xchg
shr
int
adc
ins
push
je
(bad)
icebp
mov
das
push
mov
int
jg
stos
loopne
dec
(bad)
and
aaa
adc
lahf
push
push
leave
mov
pop
pop
adc
iret
mov
mov
inc
dec
mov
push
data16
mov
popf
scas
(bad)
mov
mov
jmp
add
nop
pop
aad
outs
fs
jo
movs
ret
repnz
rol
lahf
or
xchg
pop
out
jno
ss
or
dec
aas
retf
inc
clc
mov
cmps
in
loopne
outs
jo
dec
mov
add
xor
loop
cmps
cmc
sub
sub
mov
jnp
sbb
xchg
js
lock
bound
stc
xchg
mov
pop
call
int3
mov
loop
and
mov
fidiv
popa
cmp
cmp
and
outs
(bad)
xlat
arpl
outs
mul
outs
in
xchg
call
call
shl
jae
outs
jg
sub
sbb
add
mov
cmp
adc
inc
cmp
enter
inc
xchg
mov
push
ss
(bad)
ret
repnz
ret
test
push
or
and
pop
js
(bad)
popf
inc
push
jg
ins
dec
and
pop
or
lock
dec
mov
pop
idiv
sub
cli
mov
push
data16
jecxz
cvtps2pd
sar
dec
sub
ds
and
inc
pop
xor
fwait
mov
xchg
dec
sub
ror
pop
mov
lds
pop
cmp
jmp
push
nop
mov
fimul
pop
fld
add
dec
iret
cmps
inc
adc
repnz
inc
(bad)
adc
popf
pusha
xor
je
mov
das
jbe
mov
fnsave
mov
dec
fild
mov
xor
(bad)
fld
pop
out
shr
call
fldcw
ret
push
mov
push
imul
stos
mov
cmp
imul
daa
outs
xor
dec
pop
mov
retf
sbb
cmc
int
int
sbb
and
mov
inc
dec
jne
and
add
and
jo
cmp
scas
ret
xchg
sbb
pushf
jge
shr
sub
mov
jo
mov
je
sbb
ds
rol
std
shl
ja
mov
aaa
movs
pushf
mov
add
add
lea
jle
sbb
push
(bad)
sbb
test
lods
es
sub
neg
xchg
mov
call
pop
sbb
pop
sahf
ret
imul
pusha
pop
push
jge
cmp
adc
ins
ja
and
jbe
ss
xor
jo
scas
xchg
pop
push
scas
frstor
push
dec
cmp
push
fadd
enter
lahf
mov
mov
or
movs
pop
outs
xor
pop
imul
rol
test
or
enter
fst
dec
popf
imul
and
lods
popf
cmps
add
test
dec
adc
inc
mov
adc
dec
dec
and
leave
out
or
push
add
(bad)
jmp
mov
dec
in
push
xchg
sbb
push
and
je
push
pusha
pop
pop
pop
pop
push
xchg
mov
jp
pop
mov
stos
loop
mov
leave
mov
std
in
and
fisub
sub
jmp
jbe
xor
pop
clc
ds
enter
mov
mov
ja
in
int
mov
nop
js
dec
add
adc
and
inc
cld
cmps
mov
retf
int
fwait
inc
ret
bound
ficomp
mov
sub
aas
or
(bad)
fadd
or
pop
xor
retf
in
jb
xchg
outs
mov
push
jbe
ins
mov
xlat
jo
ret
cmp
imul
imul
ss
rcl
xchg
dec
mov
or
test
mov
js
fwait
sbb
cmp
mov
test
lock
mov
push
sub
inc
idiv
in
jmp
dec
push
sar
call
in
retf
gs
lea
jae
lds
adc
call
pop
and
(bad)
cld
repnz
loopne
dec
(bad)
sahf
aas
leave
scas
jne
xor
out
cmp
es
push
xchg
iret
leave
pop
aaa
jmp
in
jmp
cmp
movs
jl
inc
or
dec
leave
inc
sub
iret
ficomp
repz
repnz
jl
adc
push
dec
xchg
ins
dec
inc
aad
and
sbb
arpl
dec
mov
jns
add
push
and
mov
add
xchg
push
outs
leave
retf
ins
adc
(bad)
call
movaps
mov
cmc
or
mov
or
sub
sub
mov
scas
mov
mov
fist
mov
das
push
jl
push
add
rcl
cmps
imul
movs
mov
jns
adc
repz
(bad)
xchg
enter
std
lds
jmp
jmp
adc
xor
ja
fild
popf
js
xchg
leave
xchg
adc
xchg
in
outs
fist
or
jmp
mov
inc
add
jno
pop
sti
xor
mov
popf
jle
js
test
jbe
xchg
dec
adc
push
or
(bad)
movs
adc
les
dec
pusha
pop
dec
aaa
and
add
or
sbb
imul
nop
mov
aad
dec
ret
mov
loopne
adc
jbe
scas
in
sub
loop
sbb
push
iret
les
nop
movs
and
add
mov
pushf
addr16
lds
mov
retf
or
loopne
cmp
xchg
jo
imul
cmp
std
push
sbb
int3
test
and
cwde
xchg
mov
imul
jecxz
jns
jle
idiv
(bad)
sub
(bad)
clc
shl
out
xchg
daa
test
mov
xchg
adc
push
iret
xchg
xlat
xor
jl
mov
jb
int
ins
or
mov
out
int
or
mov
into
sub
mov
sub
or
fstp
in
dec
fist
ret
sbb
sbb
in
int
mov
adc
pop
out
dec
lea
ss
out
shr
aaa
inc
add
inc
(bad)
(bad)
hlt
mov
fldcw
stos
sub
inc
mov
sbb
dec
stos
fld
into
inc
daa
add
lahf
test
rol
xchg
mov
fdiv
loop
pop
sub
mov
sbb
inc
daa
jecxz
ins
jg
pop
adc
push
inc
adc
arpl
aas
push
xor
jno
ror
add
loopne
outs
(bad)
sub
add
sub
(bad)
test
pop
popf
mov
stos
test
jp
and
rcr
pop
dec
imul
bound
jns
lds
cld
lods
cli
mov
mov
xlat
xor
ret
push
mov
push
stc
or
inc
in
jmp
not
push
inc
bextr
aas
ja
mov
push
pop
push
leave
sbb
mov
pushf
sti
jns
xor
sub
or
or
push
data16
sub
loop
jecxz
test
ss
scas
iret
dec
add
push
cmps
ds
in
adc
shl
xor
sub
lea
sub
popa
push
dec
(bad)
fcomi
popf
jle
mov
push
inc
out
div
mov
and
imul
push
fst
mov
xchg
lahf
sub
cmc
sti
adc
add
inc
cmp
pop
loopne
and
mov
cmp
out
imul
vpsrlvd
sbb
aas
pusha
movs
sbb
jo
xor
sub
sbb
loop
jg
pop
icebp
adc
loopne
dec
sub
(bad)
dec
dec
cs
aaa
loopne
sbb
adc
cmp
inc
jl
push
xchg
dec
add
jge
xchg
(bad)
adc
repz
push
aad
(bad)
mov
mov
jbe
out
rcl
adc
(bad)
loopne
imul
ss
mov
lods
pop
scas
mov
(bad)
jb
xchg
rol
push
fnstsw
enter
mov
and
rol
out
icebp
xor
daa
ds
push
out
add
mov
sar
or
fldcw
mov
add
dec
loop
cli
dec
jae
cmp
in
(bad)
stos
cmp
cmp
add
repz
nop
outs
jecxz
sub
bound
jmp
movs
repz
mov
mov
movs
push
xor
repz
mov
hlt
xor
ins
out
jb
add
pop
lahf
cld
xchg
inc
sbb
repnz
out
cwde
push
out
adc
das
mov
in
ret
gs
lods
ds
push
push
xor
jae
ds
mov
sub
arpl
pop
pop
push
ds
push
retf
adc
in
jmp
mov
push
dec
hlt
dec
fnstsw
js
scas
or
ret
sub
hlt
adc
fcmovbe
(bad)
mov
inc
add
test
jns
adc
(bad)
shl
pop
cmps
dec
rcr
xchg
leave
fucom
jae
lock
cwde
dec
clc
out
aaa
ins
arpl
(bad)
fnsave
push
mov
push
and
inc
ret
(bad)
cmp
pop
bswap
jns
xor
fisubr
add
cwde
int3
int3
cdq
cmp
dec
mov
je
rcr
jge
dec
call
xchg
push
scas
fisttp
mov
fs
push
mov
mov
ja
scas
mov
ss
push
inc
inc
out
and
cdq
jnp
jno
sub
test
arpl
xchg
popa
or
pop
or
mov
imul
icebp
fmul
in
mov
dec
popa
mov
xchg
mov
fimul
lea
ror
jge
sub
xchg
inc
loope
sub
les
lahf
popf
push
pushf
push
sbb
adc
fbstp
std
retf
push
add
data16
inc
sbb
fs
add
and
mov
popa
adc
loopne
add
push
popf
stos
cmp
sar
pop
dec
out
sub
push
lock
data16
jmp
outs
mov
adc
cs
adc
pop
das
xor
jbe
xor
adc
inc
cli
mov
aam
imul
popf
dec
call
jnp
push
mov
push
(bad)
enter
and
aas
aad
stos
cmps
jp
pop
je
mov
xchg
imul
call
xor
dec
leave
bound
jne
mov
adc
or
pop
xchg
pop
sub
dec
fcmovb
out
push
stos
push
or
add
mov
adc
dec
loopne
add
cmps
pop
dec
xchg
pop
mov
push
pop
mov
adc
add
add
pop
movs
retf
(bad)
scas
in
in
test
push
push
cwde
div
xchg
lea
pop
adc
dec
(bad)
jo
inc
and
push
add
push
jecxz
test
inc
sub
neg
or
push
lods
sbb
out
mov
vpunpcklwd
adc
retf
xor
aas
cmp
call
push
mov
neg
fld
(bad)
imul
xchg
(bad)
adc
bound
popa
pusha
add
sbb
mov
aam
and
jo
inc
int
or
test
dec
xchg
cli
dec
fisubr
push
inc
and
push
jbe
test
adc
dec
mov
and
mov
js
(bad)
in
cdq
xor
jo
or
repz
and
xor
xchg
ror
in
dec
or
out
dec
xor
mov
mov
xor
std
cmp
loope
mov
sbb
push
fistp
inc
cmp
cld
pop
inc
mov
mov
clc
sahf
mov
cmp
pop
repnz
packuswb
(bad)
fs
or
rcl
mov
mov
dec
lahf
je
xlat
mov
iret
(bad)
aas
xor
(bad)
mov
lods
in
ror
mov
in
xchg
sub
jle
shl
call
jge
xchg
lahf
sub
push
lea
loope
jg
push
push
jns
retf
sahf
test
pop
(bad)
cli
mov
ja
pop
xchg
push
xchg
cdq
arpl
sub
push
mov
cmp
(bad)
mov
adc
mov
jnp
repz
dec
mov
call
sub
jns
jnp
sbb
add
aas
pushf
xor
add
mov
nop
mov
repnz
mov
xor
mov
in
loopne
push
jne
sar
jbe
call
loope
add
push
pop
dec
ret
sbb
sub
cmp
add
jno
test
out
pusha
push
lods
cmp
enter
lock
sub
fisub
test
fidivr
dec
lods
retf
cmc
adc
not
fisubr
repnz
ret
lahf
sub
sar
cmp
xchg
or
test
xchg
mov
mov
or
jl
mov
mov
cmps
jl
dec
lods
in
dec
jmp
loop
xor
rol
aad
paddb
mov
inc
push
push
enter
into
xor
jge
cld
outs
enter
dec
cli
xchg
sub
scas
lds
jno
rcl
xor
test
movs
cmp
pop
cwde
pop
pop
dec
push
repnz
retf
pop
sub
or
inc
or
or
shl
dec
fwait
pop
xchg
enter
dec
add
jl
test
int
fisub
and
mov
out
jg
sahf
and
adc
dec
or
outs
and
inc
xlat
mov
dec
cli
loope
mov
mov
or
jecxz
inc
mov
push
inc
retf
popf
mov
jl
sbb
sbb
bound
fst
xor
hlt
jmp
sub
dec
aad
xor
xor
movs
or
je
rcr
cdq
sub
push
mov
mov
cs
cdq
nop
and
sbb
in
fstp
int
jmp
(bad)
dec
sbb
and
mov
push
cmp
push
clts
mov
jp
pop
fmul
das
add
mov
dec
pop
pop
xor
scas
xor
aas
jno
retf
inc
mov
mov
enter
pushf
mov
pop
push
adc
out
add
mov
ss
push
inc
xchg
jl
push
sbb
sub
push
bound
inc
je
cwde
cmps
outs
es
adc
clc
inc
pop
sbb
out
xor
and
pop
jge
repnz
test
xor
aas
cmp
pop
test
cs
jge
ret
bound
cmp
jmp
mov
sub
das
add
test
and
sub
je
(bad)
mov
outs
fld
cmps
xchg
mov
push
(bad)
shr
mov
pop
imul
stos
fsubr
js
adc
jecxz
mov
fs
dec
jmp
clflush
(bad)
cmps
or
mov
and
aaa
mov
mov
xchg
add
sbb
mov
out
out
aaa
xchg
xor
aas
mov
pop
sub
fcmovbe
cld
add
sbb
push
mov
dec
inc
stos
ret
jo
add
dec
aas
or
mov
loope
adc
add
xor
out
xchg
inc
int
mov
xor
sub
push
inc
lea
mov
pop
push
sub
xchg
psrlw
mov
iret
adc
jb
in
aas
imul
push
jns
imul
adc
and
sti
inc
push
popa
adc
push
dec
add
mov
mov
hlt
push
in
push
or
or
mov
lds
xor
push
jg
ja
add
push
popa
ins
or
out
xor
sub
cwde
mov
inc
in
out
pusha
loop
cwde
pop
fdiv
and
mov
cwde
pop
dec
mov
cld
add
push
je
push
adc
ret
outs
pop
sub
(bad)
mov
jb
iret
dec
or
je
pop
dec
dec
scas
add
sbb
pop
adc
sbb
mov
clc
neg
pop
mov
mov
(bad)
loope
repz
xchg
jo
sti
mov
add
push
(bad)
stc
mov
out
retf
add
leave
mov
mov
popf
push
jle
mul
(bad)
mov
loop
adc
mov
adc
lahf
in
mov
adc
scas
dec
outs
or
cdq
ja
stc
outs
push
stc
mov
mov
ror
ret
push
dec
inc
stc
xor
hlt
sbb
xchg
push
jecxz
or
scas
xchg
dec
push
cld
push
stos
inc
or
push
cdq
test
ins
in
push
pop
sub
aas
add
mov
add
fldcw
loopne
mov
fdiv
in
ror
ins
dec
(bad)
sti
and
jl
mov
inc
and
mov
xor
xchg
out
xchg
dec
imul
(bad)
or
fimul
jmp
arpl
sar
les
adc
fimul
mov
shl
jno
lods
cmp
mov
cli
stos
mov
ins
loope
or
adc
mov
push
lods
mov
neg
sub
or
daa
out
mov
popf
lea
fstp
and
xchg
mov
mov
stos
xchg
pop
fwait
(bad)
dec
imul
inc
outs
pop
shl
out
inc
xchg
ret
movs
imul
nop
ins
mov
sub
lsl
and
stos
and
xchg
lahf
sbb
mov
je
xchg
das
xor
pusha
stos
imul
xchg
call
icebp
gs
test
dec
jp
pop
iret
mov
ret
scas
mov
aaa
popa
aas
pop
imul
repz
(bad)
push
daa
(bad)
pop
sub
jne
pop
lea
mov
ret
mov
and
fist
push
rcr
aad
cmp
test
jecxz
out
jne
mov
test
cmc
fcomi
mov
mov
jl
cwde
mov
adc
cmc
xor
arpl
jo
or
scas
imul
pop
test
or
data16
scas
mov
cmp
push
jb
call
fcomp
stc
pop
hlt
fucomip
fimul
data16
mov
jmp
cmp
jae
inc
fs
or
sub
mov
jne
call
outs
push
int
fdivr
jecxz
loope
pop
out
add
inc
movs
cmp
mov
cmp
push
aas
sub
inc
ins
push
les
xchg
push
call
push
xor
mov
lods
popa
popa
sub
lds
xchg
sbb
add
xchg
and
loopne
xor
adc
aaa
cmc
mov
clc
cmps
xchg
leave
das
jmp
xchg
xchg
add
mov
ret
movs
pop
jecxz
in
sbb
dec
add
jp
jmp
sub
pop
xor
or
add
add
jb
inc
mov
mov
sbb
sub
jmp
xor
mov
mov
das
pop
fwait
sbb
push
(bad)
cdq
jne
nop
xor
(bad)
fs
leave
add
fldcw
xchg
sub
(bad)
lea
fisttp
rcr
int3
jmp
fistp
popf
xor
es
mov
mov
mov
outs
int3
lods
or
ds
pop
fmul
push
pop
cmp
cwde
mov
jmp
mov
enter
outs
loope
mov
cmp
out
sub
push
inc
(bad)
lahf
dec
xlat
cmps
imul
adc
mov
div
ret
xor
test
mov
(bad)
mov
pushf
mov
mov
mov
ins
or
xor
fadd
ds
push
imul
and
ds
add
lock
test
out
clc
mov
or
sbb
or
xchg
and
push
mov
adc
xor
mov
sub
xchg
cmp
cmp
fsubr
in
icebp
push
cmp
sub
scas
popf
xchg
scas
movs
pop
xor
push
adc
jle
lea
xchg
aas
adc
push
ret
cmp
sbb
in
sbb
mov
adc
jnp
sub
adc
in
ins
in
popf
ret
fnsave
jg
push
js
ret
pop
add
arpl
lods
ins
fld
outs
inc
js
xchg
push
loope
stc
rcr
(bad)
fidiv
or
jmp
xchg
push
and
fcmovne
jg
stos
lea
nop
push
jnp
cdq
sub
bound
and
xor
pop
jae
jge
cli
or
or
xchg
pop
inc
int
icebp
cli
cmp
mov
(bad)
dec
cmps
mov
pop
pop
or
jo
adc
jbe
mov
or
sbb
push
dec
fyl2x
daa
xor
and
xchg
stos
add
and
ror
sti
jecxz
xchg
pop
pop
add
pop
mov
(bad)
fnstsw
pushf
mov
ins
inc
adc
aas
leave
sbb
aad
jecxz
fs
ret
jbe
mov
and
fisub
ret
call
out
mov
ret
cmps
sbb
std
ret
pop
sub
adc
cld
in
sub
loop
in
cmps
data16
ficomp
data16
or
stos
mul
jge
sar
test
mov
movs
pusha
jns
out
sar
xchg
push
dec
xor
pop
push
jle
add
fisttp
pop
(bad)
call
inc
into
jmp
ret
lds
(bad)
retf
in
or
add
push
std
dec
xchg
pop
loopne
pop
cmc
dec
jl
jbe
push
aaa
stos
sub
pop
dec
jbe
jmp
fisttp
add
and
ins
jnp
jmp
cmp
scas
pop
in
mul
cmp
lods
push
or
and
into
and
jns
mov
sbb
mov
dec
inc
mov
add
iret
pop
inc
es
enter
cmp
or
sub
sub
dec
mov
push
dec
mov
mov
das
push
and
pop
xchg
imul
fst
or
add
mov
mov
rcl
dec
mov
inc
mov
fld
push
dec
cmp
xor
xor
inc
push
inc
or
push
xchg
lods
and
or
imul
xchg
sti
(bad)
(bad)
inc
repnz
out
call
mov
inc
xchg
jne
or
adc
jmp
mov
xchg
or
adc
jne
push
mov
ins
mov
test
push
arpl
push
in
jl
mov
pop
int
pop
(bad)
cmp
push
test
xor
movs
dec
fs
pop
fcmovbe
inc
xor
clc
sub
push
icebp
push
add
inc
add
leave
cmps
sar
mov
cmps
int3
sub
or
or
jne
(bad)
(bad)
jmp
pop
add
lock
shl
imul
outs
hlt
sub
adc
adc
fs
adc
ins
fbld
and
loop
xlat
push
data16
hlt
iret
in
pusha
sti
fdiv
popa
and
push
pop
mov
pop
cld
mov
xchg
cmc
cmp
push
inc
pop
mov
adc
xor
das
sub
outs
mov
jl
lds
xor
jns
xor
mov
mov
loopne
cmp
pop
xchg
ins
adc
imul
cmp
std
jecxz
jmp
leave
enter
int3
popa
push
or
mov
std
push
cld
(bad)
mov
sbb
xchg
mov
(bad)
aad
cmp
sbb
or
sub
cmp
jae
test
test
mov
sub
jle
icebp
fxch
mov
retf
mov
loop
fsubr
xchg
shl
push
mov
mov
jge
jo
out
mov
(bad)
fistp
mov
push
inc
pop
push
cmp
ror
sub
ds
mov
outs
mov
mov
sbb
xchg
loope
loope
btc
arpl
mov
mov
and
int3
mov
xchg
push
mov
call
xchg
sub
mov
imul
mov
loope
in
adc
in
lock
sbb
jnp
jmp
xor
test
int3
es
popa
mov
adc
ror
rcr
and
xchg
inc
push
mov
sbb
or
mov
inc
jecxz
mov
ins
cdq
(bad)
cwde
imul
sahf
in
jne
adc
pop
andnps
push
mov
and
push
add
mov
cmp
hlt
jns
xor
ins
lods
in
xchg
cli
xchg
mov
cwde
rol
add
xchg
add
into
pop
in
mov
mov
sub
outs
(bad)
(bad)
jge
repz
dec
aad
jmp
xchg
mov
add
dec
fisubr
inc
aam
repnz
sub
sbb
jge
ficomp
call
imul
sbb
push
div
lahf
scas
mov
inc
cmp
cs
add
mov
retf
sar
xchg
(bad)
(bad)
out
and
addr16
pop
fstp
jae
ror
push
mov
sti
adc
loopne
addr16
fdivr
push
arpl
icebp
call
ins
sub
add
jo
sub
add
and
loope
not
div
pop
add
push
retf
add
mov
or
ficom
sub
movs
mov
inc
mov
sbb
jecxz
adc
mov
mov
in
enter
daa
mov
sbb
xchg
sub
aad
xor
dec
test
xchg
jne
stos
bound
adc
mov
push
popa
std
cmp
fwait
rcr
jge
dec
sbb
push
adc
inc
cwde
push
fdivr
out
pop
jb
mov
retf
jp
or
sahf
cmp
push
pop
bnd
(bad)
leave
push
jb
add
cmp
das
addr16
sbb
iret
mov
out
xchg
sub
xor
mov
add
push
fdivrp
inc
add
xlat
ins
add
pusha
mov
lods
aad
jg
imul
ret
icebp
jae
(bad)
(bad)
stos
std
mov
mov
adc
and
jmp
mov
cmp
cmp
test
dec
pop
loopne
xor
sbb
outs
pop
out
xchg
cmp
and
xor
dec
inc
pusha
icebp
bound
adc
jp
pop
jl
xor
and
push
sbb
add
je
in
add
push
mov
int
mov
in
fnstenv
jb
cmp
mov
adc
(bad)
and
adc
push
cli
cld
mov
jne
or
xchg
xchg
rcl
sub
je
jo
xchg
mov
sbb
xchg
or
pop
les
sub
push
out
addr16
jae
jge
fidivr
jecxz
pop
sbb
mov
fdivr
cmp
fdiv
je
push
sahf
fiadd
leave
loop
or
fstp
cli
stos
ja
ror
imul
fistp
add
or
pop
hlt
add
and
scas
mov
dec
sar
and
jb
hlt
xor
xor
xor
and
lods
lea
inc
sbb
or
shl
scas
fiadd
or
cmp
push
es
push
jae
and
lea
idiv
lahf
or
ds
jne
inc
or
sbb
jmp
cmp
or
push
in
jno
xor
loop
pop
in
out
cld
mov
mov
push
jne
jg
test
inc
sub
imul
and
fiadd
add
pop
aaa
das
mov
add
ror
movs
xchg
mov
xchg
ds
mov
dec
sbb
mov
mov
int
retf
or
nop
push
ret
lahf
std
push
sbb
cmp
xor
cmp
lods
(bad)
adc
fs
ss
mov
shl
xor
and
push
clc
push
mov
or
mov
dec
push
pop
pushf
sbb
or
mov
and
pop
mov
and
lods
repz
push
ficom
mov
adc
mov
(bad)
ja
adc
mov
adc
jno
pop
mov
adc
adc
xchg
xor
jl
adc
xor
imul
test
sbb
mov
push
aad
cwde
adc
dec
pushf
(bad)
pop
jg
adc
adc
(bad)
fst
xchg
mov
std
adc
arpl
lea
(bad)
mov
fstp
int3
or
loopne
ja
push
in
push
outs
int3
push
jae
out
cmp
xchg
loope
retf
inc
leave
(bad)
jp
cld
mov
retf
or
mov
xor
jb
and
imul
enter
cdq
dec
mov
mov
(bad)
jge
mov
fldenv
imul
sar
dec
inc
inc
jb
movs
mov
xchg
add
aad
mov
push
dec
stos
in
mov
xor
pusha
retf
mov
sbb
lods
out
movs
xlat
mov
bound
sub
pop
movs
sar
loop
mov
mov
imul
mov
or
test
mov
mov
add
call
gs
xor
sbb
daa
dec
call
(bad)
push
inc
nop
out
in
(bad)
enter
and
xor
xor
jne
inc
fs
arpl
(bad)
in
(bad)
call
push
ss
std
mov
push
pop
mov
cmp
mov
fistp
dec
xor
(bad)
push
shl
jg
aas
jo
fnstenv
stos
call
dec
(bad)
push
or
stos
pop
mov
stc
fmul
push
fld
add
leave
(bad)
sti
dec
add
xor
cld
add
jmp
arpl
out
inc
inc
dec
or
cmps
lock
lods
cmp
jmp
push
pop
mov
xor
jecxz
mov
cli
in
aaa
in
mov
ins
ins
mov
shl
iret
aaa
sub
pop
shl
ret
sbb
jecxz
jae
fistp
jle
pop
pop
arpl
push
enter
sbb
neg
addr16
push
jl
push
retf
mov
sti
mov
dec
aaa
and
adc
mov
jecxz
cmc
movs
icebp
pop
ins
sbb
repnz
or
inc
mov
xor
jmp
add
mov
sbb
sbb
mov
int3
in
add
bts
fadd
outs
jbe
enter
mov
cdq
rol
cli
pop
leave
or
cmp
fstp
ja
sub
pop
stos
or
ficomp
loope
sbb
jp
int
mov
xchg
sar
pop
repnz
ret
outs
seta
adc
enter
stc
das
(bad)
xchg
pop
fcomi
jge
mov
mov
pop
xchg
jl
ficom
retf
mov
jb
dec
sub
mov
adc
pop
das
(bad)
movs
inc
js
adc
icebp
and
xchg
jp
inc
adc
push
xchg
outs
addr16
adc
xchg
ds
stos
mov
jge
jge
push
(bad)
ficom
cs
outs
mov
add
pusha
mov
shr
pop
cmp
hlt
sub
xor
jg
fdiv
mov
cmc
push
jmp
aaa
(bad)
ins
or
shl
inc
repnz
mov
imul
xchg
arpl
mov
jg
or
repnz
retf
pop
test
lock
call
adc
xchg
sub
clc
jb
js
mov
dec
xchg
adc
sbb
xchg
out
imul
sbb
nop
lods
jb
mov
mov
add
pop
ret
popa
jae
push
das
in
mov
cmp
mov
ja
jbe
fild
adc
setnp
out
in
outs
xchg
pop
xor
mov
jecxz
cmp
or
in
retf
mov
loope
xor
out
or
idiv
sub
or
or
mov
ror
push
imul
xlat
test
test
add
push
xor
mov
enter
jae
xor
add
int3
(bad)
leave
loope
fidiv
inc
jno
or
adc
or
test
mov
push
retf
fwait
sbb
add
or
loope
sahf
inc
movs
jno
fisubr
or
xchg
dec
cwde
cmp
xchg
stos
adc
test
cmps
scas
or
xchg
xchg
and
push
mov
and
imul
cmp
cmp
xor
jae
sti
dec
lea
pusha
dec
dec
ja
push
retf
sub
pop
pop
ins
push
jecxz
bswap
call
mov
xchg
sbb
cmp
pextrw
inc
dec
lods
clc
mov
push
inc
add
out
xchg
jb
fsubr
leave
mov
pop
aam
xlat
popa
push
dec
pop
cmc
aaa
fnstenv
xchg
or
leave
ja
jne
mov
dec
push
out
cmps
mov
sub
sub
sub
jle
pop
push
movs
sti
js
pop
or
aam
sub
test
mov
add
or
mov
scas
sbb
and
bound
mov
stos
pop
and
sbb
icebp
jle
pop
push
sbb
dec
enter
ins
stos
loope
fs
add
lds
inc
scas
mov
ins
es
xchg
lea
les
mov
push
imul
iret
in
je
cmp
mov
aas
cmps
out
mov
sbb
cli
cli
add
push
shr
jns
and
scas
js
mov
jmp
fwait
dec
movs
inc
jne
mov
xchg
stos
adc
pop
mov
dec
mov
gs
xlat
shl
mov
mov
mov
fstp
mov
cdq
scas
pop
xchg
cdq
or
(bad)
xchg
pop
cmp
xchg
out
fldenv
add
clc
mov
call
pop
adc
cmp
(bad)
shl
ds
out
imul
sti
inc
mov
out
sbb
ror
mov
outs
lea
dec
mov
mov
adc
in
pop
or
cmp
sub
jo
mov
sub
jno
cwde
stos
mov
fisubr
(bad)
sbb
or
add
cmp
fdivr
aas
adc
(bad)
aam
gs
sahf
inc
pushf
jge
mov
inc
inc
mov
ffreep
or
test
nop
shl
or
cwde
div
cmp
jg
and
add
mov
out
push
cmp
push
bnd
test
cmp
neg
lds
mov
xor
in
out
data16
pop
add
pop
jo
fdivr
push
mov
mov
jbe
dec
mov
or
daa
gs
leave
std
push
xchg
ja
mov
sbb
xchg
and
repnz
jbe
push
sar
inc
mov
jbe
jae
sbb
loope
add
into
xchg
dec
pusha
xor
dec
xchg
mov
or
shr
dec
dec
lahf
pop
push
adc
xchg
mov
stc
mov
xor
dec
mov
ds
cmp
jmp
cld
smsw
loopne
adc
mov
fstp
cli
add
shl
inc
(bad)
sbb
mov
adc
(bad)
(bad)
popf
mov
jb
mov
dec
clc
fild
lods
xchg
jle
mov
and
arpl
std
cmp
(bad)
into
outs
(bad)
sbb
fdiv
mov
push
dec
xor
ret
test
jmp
cld
sub
xchg
cmp
or
add
mov
cwde
xchg
xor
mov
or
loopne
push
mov
jecxz
jnp
sbb
outs
je
js
(bad)
pop
cmp
call
call
je
mov
call
xor
js
in
popf
test
(bad)
sbb
adc
xchg
mov
sub
lds
or
ds
mov
mov
mov
das
pusha
cmp
call
sub
jp
mov
mov
add
out
jmp
mov
pusha
cwde
mov
mov
push
ds
fadd
aad
xor
(bad)
adc
or
sub
mov
fdivr
cmp
pop
mov
aaa
lahf
and
mov
sbb
and
add
inc
in
and
add
pop
rcr
sub
std
push
aam
push
or
and
add
data16
fstp
mov
enter
pop
jae
fild
xchg
sub
das
inc
repnz
js
bound
aas
(bad)
pop
clc
data16
mov
sub
pop
cmc
shl
push
ins
inc
push
pop
fst
fmul
(bad)
mov
loop
sbb
xor
out
pop
es
jmp
sgdtd
and
inc
lea
pop
inc
in
hlt
or
xacquire
scas
mov
jle
add
aas
adc
push
inc
adc
lods
jbe
ds
pop
xor
push
or
call
retf
and
sbb
dec
imul
jnp
mov
dec
inc
mov
mov
xor
xor
mov
and
dec
loopne
daa
inc
mov
cmp
outs
push
ficom
mov
mov
out
jo
push
pop
jge
xor
add
pop
xchg
outs
imul
or
push
pop
adc
aam
dec
mov
ss
inc
ficomp
mov
cmc
int
shr
clc
pop
mov
sub
dec
xor
fst
mov
outs
dec
adc
push
inc
rcr
cmp
jne
cmp
or
mov
call
adc
pop
xchg
sbb
dec
ss
fstp
push
in
dec
pop
movs
mov
in
mov
leave
call
cmps
xor
pop
in
push
xchg
popf
mov
cmps
and
jnp
pop
add
mov
inc
dec
outs
pusha
data16
mov
je
aas
add
pop
call
lods
push
jne
dec
sbb
push
inc
jmp
xchg
cmp
fmulp
mov
pusha
jg
pop
das
pop
and
movs
xor
or
cmp
inc
in
add
add
das
xor
pusha
bound
xor
push
jle
int
pop
dec
bound
or
lods
jl
sub
or
(bad)
dec
ret
aaa
es
dec
inc
sbb
out
inc
movs
xchg
int3
call
xchg
add
inc
push
push
iret
stc
enter
ja
or
add
dec
lahf
xor
cmp
retf
int
mov
daa
sbb
pusha
mov
cdq
retf
repnz
push
cs
add
mov
inc
test
rcr
push
ficomp
or
std
test
inc
add
pop
add
push
or
inc
cmp
in
inc
cmp
test
sbb
pop
movs
and
test
inc
imul
loop
addr16
cs
pop
cmp
ret
add
ret
(bad)
dec
cmp
jg
fsub
imul
inc
xchg
inc
jo
repz
sahf
dec
les
push
aad
dec
mov
mov
mov
ret
sbb
fs
jl
fwait
xor
sub
pop
fsub
xchg
mov
sub
mov
add
cmp
sahf
jnp
fwait
sbb
int3
ficom
pop
aas
loopne
das
jno
scas
out
fst
mov
push
ret
inc
(bad)
(bad)
jmp
add
adc
imul
sbb
mov
lods
movs
fcmovnu
and
not
in
dec
jno
jmp
xchg
mov
call
push
jle
jecxz
xchg
fistp
mov
cmp
sti
ja
aas
xor
and
inc
movs
sbb
clc
cmp
cmps
lods
mov
push
jmp
inc
and
les
dec
fisttp
hlt
push
xchg
sbb
loop
mov
sbb
(bad)
jmp
scas
add
ja
pop
les
mov
or
and
sub
fcom
jb
mov
xchg
pop
mov
mov
push
sub
in
mov
adc
adc
rol
out
push
cmp
adc
inc
pop
cwde
add
pusha
or
fwait
cmp
lods
in
add
push
inc
je
mov
jp
ja
fisttp
push
loop
adc
pop
add
hlt
clc
(bad)
mov
mov
stc
pushf
fs
pop
sub
out
into
cld
xchg
push
xor
movs
mov
add
xchg
push
jge
jg
loope
jns
bound
sub
shl
jg
lds
mov
es
xor
adc
int
popf
mov
sbb
je
lds
popa
ins
mov
xor
clc
dec
xlat
cmp
dec
iret
mov
dec
jne
retf
dec
push
push
bound
xchg
sahf
pop
mov
cld
xchg
lods
dec
out
add
and
dec
fcom
mov
xor
loopne
test
aaa
mov
dec
das
dec
jge
mov
(bad)
imul
imul
jo
inc
addr16
and
dec
test
xor
(bad)
scas
mov
mov
cmp
adc
adc
mov
adc
fadd
out
push
jbe
pop
movs
ins
es
cmps
mov
add
test
adc
mov
out
jns
ins
gs
das
sub
jg
pop
test
push
or
push
inc
sbb
sub
inc
push
xchg
push
cdq
and
in
es
dec
aas
mov
loop
or
mov
xor
cmp
retf
adc
push
mov
push
rcl
pusha
inc
mov
add
inc
iret
cli
mov
push
inc
movs
into
ret
or
out
shr
inc
push
movs
imul
daa
mov
call
pop
cmp
jbe
add
push
sbb
test
test
repz
inc
cmp
sub
test
cmp
adc
stos
xchg
jo
out
ins
movs
and
out
sbb
xor
sub
sbb
push
pop
mov
cld
sub
jbe
shl
ds
std
ret
jb
cld
inc
ret
pushf
xchg
in
movs
data16
pop
lods
ret
jmp
fnstcw
aas
or
ins
sub
clc
jbe
inc
push
dec
mov
xchg
call
out
js
pop
imul
sbb
xchg
sub
sub
scas
fstp
imul
fwait
(bad)
jns
clc
xor
repnz
inc
dec
ret
test
inc
sbb
push
jmp
test
push
sbb
cmp
inc
(bad)
int3
inc
(bad)
loopne
mov
push
inc
dec
pushf
adc
jmp
fidivr
cdq
push
loopne
mov
pop
mov
xor
and
mov
dec
push
rol
mov
aas
inc
loopne
mov
(bad)
pushf
dec
push
sbb
or
test
fs
push
mov
and
or
es
loop
jmp
ja
test
adc
sahf
leave
mov
inc
aad
adc
jecxz
jns
into
shr
cmp
pushf
repnz
push
dec
xor
jnp
push
daa
mov
and
or
es
pop
lahf
xchg
lahf
xchg
mov
je
rcl
jle
fsubr
add
(bad)
mov
mov
sub
dec
mov
in
xchg
lods
test
dec
das
mov
sar
call
add
inc
adc
jae
fld
test
fwait
adc
fild
mov
cmps
cmp
sbb
dec
pop
xchg
ror
stc
test
ret
dec
push
jle
imul
sub
xlat
outs
dec
lods
out
test
inc
fnstenv
pushf
add
xchg
mov
mov
scas
mov
mov
and
dec
sbb
pop
xchg
popf
pop
stos
or
sbb
mov
xlat
sbb
adc
jno
push
rol
sub
out
daa
adc
xchg
mov
ror
ss
or
dec
adc
push
sbb
std
das
sub
(bad)
call
pop
inc
ss
les
sub
pop
push
das
ret
xor
xchg
jae
mov
push
push
stos
xchg
sbb
call
leave
in
data16
pushf
dec
or
movs
xor
fcom
inc
sub
mov
es
and
inc
pop
jp
sbb
mov
(bad)
adc
dec
arpl
sbb
(bad)
dec
push
xchg
inc
sbb
jge
cmp
repnz
or
imul
mov
pop
pop
jbe
in
aaa
mov
push
xchg
sti
mov
cmps
imul
adc
jbe
shl
sbb
or
xchg
jecxz
jns
jb
cmp
push
ds
mov
movs
push
xchg
add
(bad)
inc
ficom
(bad)
jo
les
mov
or
outs
push
(bad)
push
mov
and
repz
sahf
call
mov
or
push
and
mov
imul
call
push
pcmpgtw
idiv
test
(bad)
stos
adc
je
sub
jne
pop
add
aam
jl
enter
pop
mov
adc
stos
paddsb
in
xor
mov
pop
arpl
(bad)
sbb
inc
xchg
jecxz
retf
mov
iret
mov
mov
out
cmp
xchg
int3
repz
dec
or
fcos
or
inc
ret
sub
mov
xchg
xchg
rcr
stos
push
cmp
js
add
sti
jle
lock
xor
xchg
fcom
sub
push
sub
fwait
enter
cmp
sub
in
les
sub
arpl
fist
gs
ss
icebp
fdivr
cwde
cmp
stos
xor
pop
out
xchg
pop
lods
sbb
add
nop
xor
out
retf
not
sub
dec
cmc
xlat
mov
inc
adc
pop
inc
daa
xor
retf
(bad)
in
lods
call
mov
je
or
xchg
ret
pop
out
lahf
ficom
jle
ja
dec
sbb
(bad)
out
aad
pop
lock
arpl
dec
xchg
mov
mov
out
and
push
and
ds
sub
in
jmp
out
aad
addr16
and
add
enter
xchg
stos
cmps
inc
sbb
call
xor
cmps
push
jnp
movs
mov
dec
sbb
dec
lea
pop
and
in
sahf
arpl
popa
cmps
data16
shl
add
inc
out
jno
sub
cmc
js
cmp
sub
in
(bad)
lods
push
sar
ud0
xchg
ins
jp
pop
mov
pushf
xlat
mov
scas
xchg
dec
and
push
inc
cdq
and
lea
jbe
and
repnz
outs
(bad)
cmp
inc
sub
hlt
jnp
sub
into
jmp
movs
data16
inc
xchg
ret
sbb
retf
mov
fs
sub
les
cmc
inc
sub
pop
adc
jge
les
sub
xchg
out
sbb
push
push
aad
pop
hlt
xor
push
dec
and
dec
xchg
pop
fld
popf
sub
nop
inc
(bad)
call
add
jmp
pushf
xchg
popf
rol
jmp
push
xchg
enter
inc
xor
jecxz
or
xor
cwde
pop
call
push
inc
cli
dec
mov
add
mov
xor
movs
lahf
popa
xor
and
inc
fidiv
call
in
ds
mov
push
(bad)
sti
fldcw
adc
pop
dec
cmc
(bad)
sar
cdq
cwde
add
or
pop
stos
or
push
jg
jb
std
repnz
(bad)
adc
icebp
and
mov
and
add
data16
sbb
xlat
(bad)
loope
and
gs
lock
push
les
mov
jmp
aad
stc
js
loop
jnp
pop
gs
loop
sbb
dec
ds
cmp
cmp
mov
cld
test
cmp
test
push
ja
dec
sub
(bad)
(bad)
mov
jb
loopne
mov
call
mov
cmp
or
sub
cs
adc
mov
std
push
ins
movs
lods
inc
cld
popa
out
cmp
mov
push
adc
and
push
add
push
es
dec
test
stc
leave
mov
sbb
adc
sbb
pop
in
ja
adc
mov
bound
jo
inc
sbb
paddd
js
xchg
test
and
or
add
mov
mov
or
sub
add
pop
mov
mov
aaa
inc
jnp
xchg
(bad)
int3
pop
shl
(bad)
mov
imul
(bad)
aas
outs
stc
call
sbb
inc
push
cmp
sbb
test
dec
lock
ret
(bad)
(bad)
xchg
stc
aaa
inc
or
sbb
sub
cmp
ss
jmp
jge
mov
mov
add
pop
push
out
movs
pop
mov
aaa
jmp
popa
data16
cmp
push
ror
(bad)
mov
sbb
mov
push
fadd
ja
aam
jp
fdiv
rol
sub
stos
sbb
adc
pop
xor
ds
lods
mov
adc
ret
add
sub
push
lods
lods
mov
out
mov
aas
lar
and
std
in
adc
push
inc
cmp
cdq
xchg
inc
loope
aas
add
and
bound
mov
xor
and
gs
pop
cmp
out
ror
pusha
xlat
mov
sti
cmp
loope
jo
lock
inc
pop
fidiv
in
retf
call
imul
outs
retf
adc
jge
fmulp
inc
and
add
or
pushf
sbb
(bad)
aas
mov
mov
xor
icebp
pop
data16
push
in
ficom
fs
stc
clc
fnstcw
cmp
cld
hlt
jnp
imul
ret
xor
xchg
rol
out
push
(bad)
mov
xchg
cwde
jle
push
cmp
aad
xor
outs
data16
fwait
push
dec
dec
stc
inc
dec
inc
fcom
imul
and
movs
push
jl
push
push
sub
in
sbb
xor
sahf
pop
dec
fst
and
dec
or
inc
adc
sbb
dec
mov
jg
push
addr16
inc
popf
dec
inc
push
les
movs
inc
scas
mov
cmp
mov
mov
cmc
repz
push
mov
popa
test
lds
into
sub
pop
cmps
int3
push
jmp
sti
xchg
or
mov
inc
xchg
push
outs
jmp
ss
loop
adc
push
pop
pop
ins
psubsw
sbb
sbb
add
ss
test
xlat
fbld
(bad)
(bad)
fsubr
das
nop
inc
jae
jns
iret
hlt
(bad)
or
mov
scas
pop
(bad)
mov
xchg
xor
jae
inc
arpl
aad
iret
shr
pop
xchg
sbb
mov
xchg
or
mov
rol
xlat
jp
dec
test
adc
xchg
outs
xor
fist
push
ins
loope
add
movs
mov
popa
popa
lea
mov
dec
push
mov
in
sar
ins
cmp
sub
mov
das
push
dec
daa
add
or
(bad)
in
adc
inc
out
sbb
cmp
adc
rcl
or
mov
sti
or
addr16
lds
mov
sbb
xchg
loope
loop
rol
add
fstp
add
mov
inc
iret
xor
inc
add
mov
outs
mov
not
ja
aaa
cmp
ja
clc
push
and
push
push
fldcw
movs
ror
push
jge
imul
fcmovu
inc
pop
xor
push
pop
or
sbb
mov
popf
mov
jl
add
(bad)
adc
mov
cld
xor
push
std
into
ja
pop
repz
mov
dec
fwait
lahf
pushf
mov
cmp
inc
inc
dec
pusha
stc
(bad)
dec
pop
stc
fist
out
sbb
mov
and
pop
mov
xchg
ds
push
ret
sbb
and
or
sti
or
add
push
or
pop
in
sub
cmp
and
pusha
push
loop
xlat
xchg
jo
xor
adc
xor
lahf
mov
outs
cmps
pop
mov
scas
inc
or
in
out
sahf
ja
jbe
dec
xchg
adc
push
hlt
sbb
sub
push
sti
xor
retf
aas
cdq
jp
xor
inc
scas
retf
pop
je
push
mov
add
clc
inc
fild
fwait
adc
mov
cmc
div
ret
les
sbb
daa
jbe
xlat
stos
pushf
push
(bad)
arpl
movs
aaa
or
sar
xor
jge
loop
pop
scas
or
sbb
lahf
add
push
mov
jbe
js
and
cmps
cmp
scas
mov
mov
das
sub
or
inc
call
xchg
mov
mov
pop
daa
call
inc
cmp
mov
fs
inc
fwait
adc
inc
imul
fs
out
test
push
mov
xor
dec
in
ins
add
mov
pusha
sub
fisub
push
add
lds
stos
sbb
adc
jp
mov
xor
rcr
xlat
jne
jae
jge
add
lds
pushf
sahf
movs
mov
jb
or
jbe
and
dec
sbb
push
sub
pop
cdq
jno
enter
mov
cmc
aas
xchg
das
mov
fisttp
movs
retf
or
and
push
pusha
mov
(bad)
adc
fisub
jns
mov
repz
pop
ja
push
jmp
inc
jg
imul
das
xor
fnstsw
cmps
fsubr
mov
lock
pop
inc
clc
imul
ss
idiv
clc
xor
cmc
jnp
push
and
cmp
cmc
aaa
je
jno
mov
dec
mov
or
call
leave
lock
dec
xor
pop
outs
cmp
jmp
mov
push
xchg
imul
loope
sahf
xchg
loop
stos
mov
in
daa
idiv
xchg
inc
lock
adc
stos
add
sar
gs
mov
mov
dec
xchg
das
stc
xchg
push
adc
out
outs
xchg
dec
prefetch
mov
push
push
inc
cmc
xor
sub
push
in
cmp
fldenv
sar
cmp
int
retf
repz
shl
jns
loop
loope
and
gs
out
dec
xchg
mov
adc
jmp
and
(bad)
in
shl
jg
(bad)
fld
mov
push
test
jge
pop
mov
jmp
xchg
leave
xor
jmp
repz
jl
cmp
or
xchg
sub
bound
or
or
sub
pushf
inc
dec
lahf
mov
pop
jo
lods
cmps
push
pop
fadd
ret
or
rcr
(bad)
(bad)
jmp
xchg
jmp
jl
enter
adc
fmul
adc
sar
lock
mov
jmp
mov
in
push
ja
sub
mov
fistp
adc
ins
jo
push
xlat
push
shr
jnp
add
pop
(bad)
lods
push
gs
dec
ja
dec
mov
call
fistp
push
and
out
mov
repnz
push
add
push
pop
scas
std
jl
aad
enter
pop
es
jmp
jb
setl
mov
(bad)
in
aas
mov
adc
push
xchg
dec
jmp
cld
mov
xlat
mov
dec
add
sahf
inc
sbb
jmp
push
and
mov
aas
cmp
sub
push
int
ss
adc
sbb
imul
xchg
fidiv
in
sar
sbb
out
das
mov
push
fisub
dec
mov
push
out
push
jp
jp
inc
aas
jnp
ds
mov
sbb
retf
bnd
jecxz
addr16
cmc
mov
mov
jno
sub
jl
cld
in
(bad)
in
xchg
lahf
fdivr
pop
xor
cli
xchg
jmp
pusha
push
push
sbb
fisttp
pop
jnp
js
popf
sub
xor
fdiv
mov
pop
or
mov
mov
or
push
xor
adc
div
sbb
push
sbb
push
test
retf
rol
push
in
loope
popf
jg
mov
jp
daa
fst
fcomp
pmulhuw
arpl
int3
sbb
cmp
lods
mov
call
aad
int
sub
dec
stc
dec
or
inc
adc
xchg
mov
xchg
xchg
mov
and
jo
enter
fstp
jmp
test
fist
jno
popa
pop
jl
aas
xchg
xor
and
jmp
adc
mov
mov
mov
jle
add
je
int
fidivr
jmp
clc
or
loope
jecxz
xor
add
es
je
out
mov
push
nop
outs
daa
cmc
aas
mov
adc
and
mov
mov
in
sub
pop
xchg
addr16
xor
in
inc
aas
int
mov
mov
jb
cld
and
inc
mov
es
xor
xchg
cdq
adc
push
mov
out
iret
and
inc
rcl
popa
inc
out
jl
out
sahf
xchg
mov
(bad)
sbb
sub
xchg
cwde
in
cli
js
mov
inc
aad
(bad)
clc
(bad)
pop
and
sbb
fscale
mov
and
sub
push
pop
inc
push
repnz
outs
arpl
jmp
bnd
fst
ror
out
push
lods
mov
cmc
xchg
pop
mov
mov
ret
mov
dec
(bad)
xchg
jl
cmps
push
sbb
imul
stos
test
gs
xor
std
jl
xlat
jle
cmp
cmp
call
cmp
inc
push
aaa
push
loop
imul
mov
inc
aad
int3
push
jle
les
jmp
dec
sbb
(bad)
enter
pop
(bad)
out
lahf
test
sbb
test
mov
in
dec
jo
ds
push
push
mov
pop
mov
pusha
cld
neg
lahf
pop
push
mov
sahf
adc
mov
arpl
and
push
ret
bound
nop
add
dec
nop
and
call
lds
add
sub
cli
fwait
arpl
stos
fidiv
movs
fistp
mov
push
fcmovne
scas
aaa
div
cmp
xor
mov
dec
in
imul
inc
fld
sub
adc
cdq
add
mov
pop
sub
ret
add
or
lods
dec
jmp
sbb
imul
rol
in
lock
repz
gs
iret
sbb
push
dec
(bad)
ss
xchg
lock
dec
or
sub
push
fcom
and
push
and
jmp
sub
adc
mov
mov
push
jno
mov
scas
out
mov
int
mov
or
pusha
mov
push
fcom
dec
sbb
fwait
je
xor
pop
push
nop
jecxz
and
(bad)
pop
cmps
inc
hlt
mov
lock
add
test
inc
push
nop
sti
sahf
xchg
movs
cmp
out
cmc
mov
imul
retf
and
enter
test
jl
nop
into
cmp
xor
mov
int
aas
mov
dec
jg
hlt
mov
aam
lods
popf
arpl
sbb
mov
xor
es
xlat
cli
arpl
std
or
and
loopne
out
mov
dec
push
push
pop
jno
mov
cwde
int
or
add
inc
fst
ins
int
(bad)
nop
enter
inc
jecxz
test
out
cmc
vmread
xchg
xlat
clc
mov
cmp
mov
xchg
ror
xchg
xor
(bad)
adc
and
inc
sbb
mov
lods
test
inc
jg
add
add
sub
pop
and
xchg
les
sahf
sbb
test
push
xchg
idiv
push
fsubrp
in
xchg
mov
sar
neg
or
loopne
dec
inc
mov
sub
fldcw
retf
retf
gs
jmp
xchg
mov
cs
pushw
pop
loopne
push
adc
cmp
mov
or
jns
push
in
popa
gs
pop
jo
or
cmp
rcl
or
(bad)
mov
outs
std
fs
push
add
sbb
xchg
jle
dec
add
ja
adc
sbb
out
cwde
lea
(bad)
xchg
mov
and
jmp
or
inc
test
mov
xchg
mov
add
adc
dec
jecxz
mov
jg
cli
icebp
imul
mov
mov
cmc
(bad)
pop
jl
pop
adc
push
add
fsub
test
dec
inc
inc
inc
adc
outs
xchg
mov
cli
pop
or
ds
inc
push
jl
das
xchg
mov
xchg
sbb
into
and
dec
mov
js
jmp
outs
shl
ja
sub
test
(bad)
sbb
jnp
jbe
aad
js
js
add
push
pop
add
test
arpl
pop
xchg
cmp
adc
jp
xchg
fcom
push
sbb
(bad)
push
ficomp
stos
int3
int3
(bad)
sbb
adc
jge
test
mov
std
sub
loopne
stos
mov
sub
sbb
jg
sub
sbb
icebp
(bad)
mov
push
in
push
cmp
ds
sub
sbb
mov
xchg
jbe
or
into
or
add
cld
inc
adc
pusha
sub
jmp
pop
cld
pusha
leave
push
icebp
jbe
pusha
fidivr
fidiv
and
(bad)
in
or
xor
(bad)
call
push
inc
jle
adc
ds
and
call
std
cwde
sbb
xchg
mov
dec
ja
cmps
fmulp
jecxz
adc
push
add
mov
out
iret
jb
cmp
imul
out
fnsave
out
push
xchg
movs
mov
int3
dec
(bad)
nop
inc
or
mov
xor
(bad)
mov
sbb
fnstenv
gs
cmp
sub
adc
jnp
das
or
inc
inc
and
out
aas
call
lahf
aad
cmp
xchg
ds
sti
sbb
fs
add
or
mov
push
rol
adc
or
retf
dec
cld
inc
jb
xchg
popa
inc
ss
sub
inc
jne
jmp
cmp
lds
test
mov
(bad)
sti
mov
mov
scas
jno
sbb
int3
int
mov
stos
mov
sbb
int
js
ins
cmp
call
and
pop
add
jb
cli
push
(bad)
push
enter
sbb
sub
mov
gs
shl
scas
ss
and
sar
cmp
pop
cmc
int3
push
js
jbe
(bad)
cmp
mov
sub
popf
iret
retf
xchg
xor
clc
sbb
dec
mov
hlt
call
fucom
iret
mov
in
in
in
(bad)
mov
sub
cmp
(bad)
mov
dec
outs
inc
ja
jg
repz
sub
ret
outs
or
aaa
shl
sub
popf
pop
loopne
or
add
jle
push
scas
mov
int
iret
pop
mov
mov
test
mov
in
add
retf
loope
dec
mov
in
(bad)
in
fld
fdivr
mov
and
and
test
xor
add
mov
pop
into
mov
hlt
enter
mov
mov
cdq
repnz
jo
test
push
ja
outs
push
mov
inc
sbb
inc
or
pushf
mov
das
pop
dec
aaa
jl
dec
inc
scas
inc
pushw
pop
mov
lods
shr
adc
jmp
and
sub
icebp
lds
jno
retf
loopne
sahf
xor
mov
dec
or
sbb
dec
jmp
sub
push
add
mov
jecxz
stos
aad
lods
push
cli
rol
inc
retf
mov
inc
outs
adc
rcl
adc
(bad)
(bad)
mov
add
popf
(bad)
hlt
push
aam
cmp
mov
push
data16
cmps
sbb
cmp
js
gs
bound
mov
(bad)
(bad)
dec
jle
sbb
arpl
cmc
sub
ins
mov
mov
or
in
jl
loope
mov
nop
rcr
mov
mov
or
push
mov
adc
add
mov
sub
pop
sti
loope
add
fild
jno
call
ins
xor
mov
jno
lock
pop
ret
rcr
or
ss
(bad)
(bad)
jae
leave
adc
cmp
cli
cwde
push
inc
mov
sub
sub
jl
popf
enter
call
scas
adc
push
lods
fisubr
cdq
mov
js
mov
sbb
ins
mov
fcom
popa
gs
mov
int
or
movs
mov
outs
mov
enter
add
inc
push
sub
adc
or
and
add
adc
scas
(bad)
call
jecxz
xchg
clc
inc
sahf
das
cmc
fild
xchg
and
dec
ja
lods
sbb
mov
shl
or
retf
stos
inc
adc
repz
mov
rol
mov
xchg
js
or
xchg
xchg
push
jo
addr16
jg
push
test
stos
repz
push
cmps
das
adc
daa
(bad)
mov
mul
pop
and
dec
cmp
mov
adc
push
sub
test
hlt
or
push
inc
cmp
inc
fnstcw
add
mov
pushf
and
push
pop
or
movs
aam
cmp
scas
mov
and
cmp
or
jae
test
inc
gs
daa
(bad)
outs
lods
shr
and
cwde
sub
sbb
lods
jnp
inc
pop
out
or
xor
jg
into
repz
mov
dec
xor
daa
mov
dec
jecxz
xor
sub
outs
jmp
jnp
mov
sahf
ror
push
pop
push
or
push
xor
popf
cdq
mov
(bad)
jge
sub
xor
mov
movs
push
repz
(bad)
enter
inc
mov
add
xchg
es
push
jg
adc
push
and
fbld
fs
mov
mov
(bad)
cs
gs
inc
push
adc
mov
shr
push
pop
lahf
clc
push
mov
add
adc
pop
pusha
cmp
and
pop
(bad)
in
or
sbb
mov
gs
(bad)
adc
jg
jnp
jb
jnp
retf
sub
push
stos
in
icebp
and
adc
lahf
xchg
dec
(bad)
cli
cmp
adc
int3
mov
in
sub
pop
mov
or
sub
adc
mov
nop
popa
push
(bad)
mov
pop
cmp
fstp
in
push
gs
dec
mul
sbb
int
gs
ja
movs
or
sub
jle
mov
mov
fld
or
push
retf
mov
or
push
and
(bad)
pop
ret
test
add
ret
test
adc
push
shl
ins
sar
add
adc
sbb
xchg
inc
cmc
hlt
lock
test
mov
ret
mov
movs
scas
xchg
and
retf
jne
sub
sar
inc
add
test
test
into
in
pop
stos
cld
cdq
popf
push
sbb
xchg
movs
dec
push
in
xor
pop
cmp
and
lea
mov
cmp
push
adc
test
ins
add
xor
lahf
mov
or
lahf
js
enter
jle
mov
out
out
stc
inc
xchg
and
ss
cmp
enter
xchg
push
cmps
push
(bad)
and
ja
out
aam
mov
push
dec
mov
call
mov
lods
ror
cld
xchg
jp
inc
sbb
xor
jb
std
push
adc
in
dec
cs
or
or
rcl
fistp
xchg
out
inc
pavgw
push
mov
adc
pop
ss
ins
and
or
or
repz
or
adc
test
cmp
mov
mov
sub
repnz
bound
jmp
stc
sub
retf
test
lods
repz
(bad)
mov
cwde
xchg
sub
hlt
aam
xchg
xchg
xor
jge
cdq
sub
pop
imul
or
xchg
clc
inc
xchg
push
fdivr
dec
jl
adc
jo
jecxz
rcl
pop
push
adc
sub
xor
es
xor
aad
int
retf
cmc
retf
stc
pop
sahf
lock
mov
repz
cmp
test
adc
test
push
sbb
sbb
mov
dec
ror
cmp
pop
fidiv
ss
mov
adc
dec
cmps
es
jge
call
cld
fsubr
rcl
xor
dec
mov
(bad)
loop
mov
xchg
cmps
add
daa
pop
add
aaa
pop
jnp
lock
clc
mov
leave
xchg
test
or
jle
sub
adc
xchg
and
test
jle
mov
rsqrtps
imul
jns
push
mov
mov
jecxz
outs
enter
push
retf
push
jp
mov
mov
mov
into
dec
pop
inc
nop
inc
fild
cdq
mov
mov
xchg
xor
sahf
pop
jnp
or
xchg
dec
sar
(bad)
ds
les
push
bound
adc
imul
mov
loop
test
mov
loopne
xor
jmp
(bad)
jmp
cmp
xor
xor
jae
push
rcr
ja
movaps
leave
lea
cmp
std
in
dec
icebp
test
retf
rcr
jecxz
pop
xor
out
mov
ret
(bad)
adc
xlat
cmp
jne
inc
in
mov
jecxz
mov
shl
cmp
enter
scas
adc
sar
add
es
out
dec
jmp
movs
fbld
stos
repz
pop
mov
cmp
xor
in
inc
mov
jo
loopne
cmp
cmp
mov
(bad)
into
xor
repnz
or
cli
(bad)
pop
push
shl
in
popa
pop
push
push
shl
rol
imul
ret
in
mov
(bad)
cld
dec
mov
das
lock
out
adc
emms
aaa
(bad)
sbb
retf
pop
dec
mov
inc
sbb
inc
test
sti
mov
and
mov
ins
mov
xchg
addr16
inc
pop
mov
bound
std
(bad)
mov
sub
sahf
je
dec
lahf
jnp
lea
sbb
aas
lahf
(bad)
mov
mov
repnz
dec
add
xchg
cmp
mov
inc
push
imul
push
inc
mov
rcr
mov
add
and
rcr
sub
fdivp
dec
cs
(bad)
mov
dec
loop
xor
xor
jnp
sbb
and
inc
adc
aas
out
xchg
mov
mov
loop
gs
cmp
les
dec
call
sub
mov
xchg
arpl
pop
js
stos
xchg
imul
call
jecxz
push
mov
mov
outs
inc
cs
scas
xchg
hlt
pushf
retf
pop
or
in
test
jb
xchg
push
sbb
mov
nop
mov
test
es
ins
mov
fistp
sub
stc
mov
xchg
cmp
retf
jae
pop
js
sbb
xor
daa
adc
fs
test
and
jnp
sub
ds
bound
mov
jne
xor
cmp
nop
(bad)
fcom
mov
or
call
mov
mov
jmp
dec
nop
pop
(bad)
push
adc
dec
inc
fsubrp
jne
and
stos
sub
xor
xor
xor
xchg
push
addr16
sub
int
adc
fs
lahf
or
dec
cld
jmp
call
test
sbb
mov
or
mov
(bad)
aad
dec
cmp
call
loop
js
pop
sub
cwde
sbb
outs
stc
mul
cld
xor
shrd
sub
icebp
ins
test
dec
or
pop
test
sub
sbb
pop
or
jb
mov
mov
gs
mov
push
xchg
(bad)
mov
or
and
(bad)
jns
sub
sub
ins
ret
test
add
loope
pop
mov
inc
adc
xor
iret
and
xlat
pop
loopne
jge
cwde
cmp
push
xor
aas
pop
xlat
pop
call
pop
shl
iret
pop
scas
pop
(bad)
cmp
gs
dec
test
lods
sub
fisttp
repnz
mov
ins
and
pop
out
sub
nop
pop
jle
xchg
inc
ins
dec
aaa
mov
mov
and
or
dec
jne
xor
add
sub
dec
mov
mov
sahf
fucomp
ins
xchg
out
add
and
xchg
push
cmps
in
cmp
sbb
sub
les
add
(bad)
jecxz
repz
xchg
clc
mov
jns
and
test
sar
repz
cdq
mov
test
cwde
shr
xor
push
loopne
sbb
out
xor
xor
jmp
xchg
push
dec
or
jp
mov
test
and
or
mov
call
fs
fisub
arpl
das
data16
xor
xlat
adc
pop
add
adc
lea
cmps
sbb
and
pop
fwait
xchg
(bad)
mov
pushf
push
or
cmps
mov
push
add
adc
and
or
pop
ds
jge
cs
push
adc
xor
outs
sub
lock
sub
jmp
cmps
xor
and
sbb
jne
mov
test
cdq
push
aad
sub
add
movs
sbb
jmp
pop
(bad)
lock
ja
adc
push
and
pushf
nop
loope
mov
mov
loop
adc
test
sub
push
sub
bound
adc
loope
lahf
clc
fstp
cmp
xchg
int
push
fsubr
sub
hlt
ins
push
mov
popa
push
addr16
lods
sub
push
call
dec
out
in
xchg
lahf
inc
add
cmp
inc
and
daa
mov
pusha
adc
sar
jge
fimul
pop
pop
xchg
fild
das
push
test
fmul
pushf
or
inc
aas
xchg
mov
mov
dec
pop
jecxz
lahf
jl
xchg
xor
out
mov
mov
inc
ins
outs
cmp
mov
mov
dec
cmp
movs
xchg
ret
lods
mov
xor
mov
or
lods
aaa
push
mov
add
(bad)
retf
adc
xor
cmps
push
shr
int3
or
scas
int
scas
popa
mov
in
cmp
leave
push
lahf
push
xor
xor
cdq
mov
cmp
nop
jmp
add
inc
aas
lods
hlt
(bad)
mov
ja
jle
adc
inc
mov
xor
cmps
mov
jae
add
adc
cwde
push
jae
movs
xor
outs
mov
mov
retf
aas
cdq
xor
hlt
movs
out
push
mov
popf
inc
mov
cmp
ins
adc
cdq
jg
(bad)
pop
inc
mov
inc
leave
and
addr16
fs
imul
outs
sub
jnp
jge
cdq
mov
loopne
hlt
cmp
call
cmp
in
lods
add
jne
mov
sub
pop
pop
jbe
adc
jb
repnz
stos
mov
fild
adc
mov
dec
js
sbb
aaa
adc
pop
gs
scas
jmp
int3
sub
ret
stos
adc
mov
leave
fisubr
in
pop
pop
js
fcmovnbe
test
pop
xchg
jle
mov
test
(bad)
jle
aas
push
jecxz
aaa
xchg
jecxz
xor
mov
mov
std
pushaw
mov
jle
dec
xchg
icebp
aam
sub
dec
fidiv
cs
xor
mov
ret
mov
cmps
xor
mov
pop
loopne
mov
scas
pop
call
mov
mov
xchg
test
adc
into
aaa
push
daa
or
ja
shl
std
aam
out
xlat
aaa
push
xor
and
fs
mov
cmp
inc
(bad)
mov
push
mov
sbb
(bad)
pushf
mov
xchg
inc
ja
aaa
cmp
add
mov
sub
xchg
xor
retf
mov
dec
shr
mov
fwait
or
inc
(bad)
(bad)
mov
add
jl
pop
jae
out
or
or
mov
pushf
int
popa
sar
pop
pop
dec
cmc
bound
mov
fisubr
das
loop
out
iret
xor
push
sub
dec
aam
push
add
test
lods
jp
jecxz
repnz
mov
jb
fld
and
mov
mov
adc
xchg
xor
pop
sub
repz
jl
pop
pop
push
sti
adc
or
sub
repnz
aad
or
cmps
sbb
retf
sbb
scas
loopne
dec
dec
call
or
adc
imul
sahf
mov
jl
leave
(bad)
call
scas
dec
jnp
loop
push
outs
pop
pushf
push
cmp
test
cdq
pop
jecxz
dec
enter
sub
fimul
mov
outs
dec
js
sub
dec
mov
pop
sahf
lock
fld
xchg
mov
push
dec
adc
mov
das
repnz
mov
fs
xchg
test
mov
mov
fnstcw
sbb
movs
je
xchg
dec
mov
gs
pop
pop
xor
aas
pop
pop
jle
rcr
aam
dec
jp
jp
dec
js
or
add
imul
mov
out
mov
mov
shl
mov
cli
and
and
cmps
out
inc
mov
iret
clc
sar
jg
inc
into
ja
jmp
popa
push
mov
lods
cmp
mov
enter
lods
mov
add
and
jmp
ds
ins
mov
cmps
inc
dec
cmp
xor
dec
(bad)
retf
fist
(bad)
mov
pushf
addr16
frstor
and
pushf
js
xor
lds
jle
outs
inc
inc
sbb
xor
jne
and
xchg
push
push
cmp
scas
pop
xchg
lds
test
sbb
mov
jae
loope
adc
push
mov
js
or
cmps
xor
sub
fs
and
je
lahf
cmp
push
pop
data16
aam
dec
cmc
dec
add
aaa
and
add
mov
jg
(bad)
(bad)
out
mov
xchg
mov
outs
dec
or
popa
popa
pop
sbb
stos
fwait
(bad)
mov
pop
popf
adc
mov
sti
mov
mov
je
inc
cmp
mov
mov
xchg
lahf
bound
fcom
mov
mov
cmp
ret
(bad)
pop
jne
jb
cmc
das
fidivr
jbe
pop
stos
push
adc
in
adc
mov
call
cmc
dec
dec
push
or
pop
int3
push
push
gs
jecxz
out
push
or
(bad)
xchg
mov
mov
sbb
cmc
movs
out
repz
lods
jb
repz
ret
mov
mov
in
mov
inc
jmp
jp
stos
out
shl
jp
push
xchg
aas
jb
xchg
xchg
xor
mov
pop
stc
fdivr
mov
mov
ret
jle
jbe
jmp
and
mov
arpl
mov
sub
inc
xor
leave
adc
jbe
sub
rcl
out
jecxz
icebp
mov
xor
pop
call
call
xchg
hlt
dec
popa
fstp
inc
xchg
dec
or
fistp
and
movs
iret
adc
dec
push
sub
push
push
adc
int
and
loop
icebp
push
retf
dec
sub
push
fisubr
cdq
bound
pop
test
cwde
lods
mov
ret
adc
iret
clc
mov
jno
add
fld
dec
out
sahf
jne
call
push
sub
mov
dec
jno
out
dec
mov
ins
fnstsw
jmp
nop
dec
inc
into
pop
(bad)
pop
dec
xchg
(bad)
fsubp
inc
jb
and
inc
fucomp
ds
nop
cmp
push
fs
inc
das
cdq
(bad)
and
pop
mov
stos
cmp
lods
sbb
push
in
je
test
jns
lods
jecxz
loopne
pop
sbb
xchg
and
ins
iret
sbb
sub
int3
lods
push
inc
outs
push
or
in
mov
pop
inc
stc
jg
das
sub
jns
aad
mov
jne
sbb
ret
xor
cmp
cmp
cmc
mov
popa
sub
lods
cdq
pushf
je
shl
outs
pop
fstp
dec
ins
mov
cld
ret
push
int3
stos
xor
popf
add
mov
shl
adc
cwde
es
retf
scas
out
fsubr
add
loope
in
cmp
popf
mov
push
mov
ficom
pop
mov
out
or
push
jmp
jnp
scas
jl
lods
(bad)
aad
xchg
add
push
mov
add
fs
mov
sub
xchg
and
and
adc
add
push
mov
and
cwde
addr16
retf
pop
pop
xchg
cmp
sbb
cwde
sahf
and
pop
in
lahf
xchg
pop
ins
int
pop
sbb
je
(bad)
nop
test
push
imul
dec
xor
push
hlt
int3
lods
test
push
fistp
push
scas
shr
mov
jnp
mov
mov
mov
xor
cmp
icebp
mov
cmps
xor
ror
ins
and
push
add
imul
sbb
leave
fst
adc
sbb
adc
test
mov
cmp
stos
lahf
xchg
xor
fwait
adc
push
scas
push
cmp
xchg
push
mov
cs
movs
push
sub
adc
ret
in
jns
out
(bad)
sub
mov
pop
lods
and
das
xor
into
or
mov
inc
popf
scas
pop
jecxz
outs
gs
fs
jmp
pop
bound
ja
mov
jmp
call
not
sahf
inc
std
scas
mov
shr
push
mov
inc
popf
out
xchg
mov
mov
pop
test
(bad)
cmc
xchg
xlat
(bad)
mov
aad
dec
xchg
mov
test
inc
jnp
movs
iret
repnz
ficomp
popf
mov
xchg
push
dec
out
hlt
mov
inc
xor
mov
lods
gs
mov
clc
cwde
(bad)
jmp
out
ret
sbb
mov
(bad)
mov
leave
dec
dec
ret
mov
xchg
sub
mov
inc
push
and
lods
jne
out
sbb
dec
cmc
adc
into
or
mov
out
in
jmp
or
pop
xor
jo
stc
push
jp
adc
cmp
and
frstor
stc
in
stc
shl
mov
mov
ds
dec
adc
adc
cmc
data16
in
mov
sub
scas
fisub
adc
stc
or
inc
add
inc
int3
adc
or
imul
(bad)
jno
mov
pop
and
adc
shl
nop
iret
mov
daa
inc
stos
or
cwde
jne
pop
xor
add
out
inc
(bad)
(bad)
add
cmc
lods
call
mov
cwde
dec
or
pop
or
add
adc
outs
(bad)
cwde
and
aas
leave
jmp
out
daa
adc
mov
or
pop
mov
push
imul
test
cmp
in
(bad)
repnz
xchg
lahf
cmp
mov
pop
xor
in
jg
test
or
xor
mov
mov
imul
push
ss
xor
pop
in
jl
mov
xor
icebp
lods
in
popa
test
bound
mov
mov
jmp
jp
rol
loope
clc
addr16
adc
ds
mov
lods
mov
ja
mov
adc
mov
xchg
lods
js
stos
rol
sar
call
cmps
cmp
jp
adc
xchg
adc
add
arpl
in
inc
aad
inc
repz
pushf
pop
leave
or
add
push
jo
das
inc
jp
or
jbe
arpl
jne
out
(bad)
jbe
jle
or
imul
aaa
ss
dec
xchg
dec
pusha
xchg
sub
pop
das
dec
rcr
ja
jmp
pop
push
sub
ja
outs
adc
or
inc
test
sub
(bad)
fmul
(bad)
test
push
jnp
sbb
fwait
cmc
popf
std
xchg
test
stos
jmp
xchg
ss
movs
mov
xchg
push
jp
push
fs
out
outs
(bad)
int
jnp
add
out
mov
pop
push
jmp
add
movs
push
or
sub
movs
loopne
inc
sti
mov
jp
adc
nop
imul
pop
mov
mov
dec
jae
ret
mov
cmp
popa
ret
cmps
out
inc
mov
jae
inc
rcr
inc
and
jl
int
inc
adc
dec
xor
(bad)
test
loope
dec
jge
and
mov
cmp
in
cmp
jnp
popa
dec
rol
mov
sbb
xor
xchg
cwde
scas
xchg
xor
add
pusha
jne
and
aaa
popa
pusha
ds
push
imul
pop
pushf
loope
xor
mov
push
and
mov
sbb
je
jno
les
ja
sbb
push
imul
mov
mov
cmp
fist
retf
mov
dec
lea
clc
pop
and
jbe
jp
and
and
mov
and
inc
add
adc
xlat
and
sub
xor
cs
mov
cli
sbb
xchg
and
and
and
jo
jmp
jno
sti
sahf
aas
ret
mov
or
mov
loope
arpl
jmp
mov
mov
int
ret
xchg
retf
mov
fwait
(bad)
(bad)
dec
fnstenv
std
add
mov
sub
gs
les
jle
inc
xlat
call
pop
sahf
rcl
xchg
pop
ret
(bad)
in
jecxz
jo
push
jge
mov
push
mov
ret
sahf
or
xor
adc
cli
pusha
sbb
iret
pop
clc
mov
movs
or
add
ficomp
mov
sub
and
mov
sbb
shr
test
jnp
mov
adc
loop
add
inc
int3
pop
pop
enter
loop
cmp
jle
bound
popa
inc
xchg
or
xor
(bad)
arpl
jp
cld
stc
sub
xchg
push
stos
mov
dec
dec
mov
xchg
mov
cld
pop
sub
idiv
test
outs
push
cli
xor
ins
sbb
cli
xlat
pop
add
mov
cmp
ret
dec
mov
outs
adc
cdq
sbb
into
mov
mov
popf
cld
out
dec
mov
and
rcr
gs
sti
stc
add
call
push
adc
je
cmps
pop
push
pop
loope
leave
cmp
mov
fldenv
sub
pop
test
imul
fnstcw
cmp
outs
int
dec
cmp
dec
mov
fld
adc
pop
add
push
paddusb
dec
cmp
pop
add
(bad)
cdq
retf
push
stos
(bad)
out
sbb
loope
cld
push
lds
aad
dec
jge
or
mov
dec
into
xor
lods
push
out
mov
rcl
pop
cwde
jne
add
cmps
jmp
mov
mov
cmps
test
cmp
cli
int3
pop
sar
jns
adc
scas
jecxz
xchg
fs
stc
cmps
push
xlat
push
movs
ret
int
adc
pop
out
jge
in
sub
push
sub
pop
div
cli
jb
jno
pusha
adc
sti
(bad)
mov
dec
std
mov
mov
ret
inc
mov
leave
mov
and
dec
cmps
push
xor
enter
xchg
ss
ds
mov
jle
adc
and
arpl
pop
add
or
ins
sbb
lea
sub
das
std
stc
imul
aad
dec
movs
xor
movs
mov
loopne
mov
jmp
pop
jno
test
push
jmp
imul
scas
out
fcom
mov
dec
jp
mov
in
addr16
gs
sti
inc
inc
xlat
push
mov
mov
ror
clc
movs
out
dec
add
add
mov
adc
ja
pusha
pop
sbb
dec
mov
je
xlat
hlt
sbb
pop
out
sbb
scas
push
mov
lock
repnz
dec
ja
popf
dec
mov
mov
mov
push
je
icebp
sub
into
adc
popf
loop
pop
mov
inc
int3
arpl
retf
cmp
fsubp
mov
adc
cmp
jl
xchg
int
adc
add
mov
repz
lock
stc
gs
repz
adc
sahf
mov
mov
popf
add
mov
dec
dec
adc
push
push
and
lock
and
mov
mov
cmp
cmp
mov
mov
mov
test
clc
jmp
mov
pop
bound
sub
add
mov
jge
inc
loope
scas
xor
test
cmp
sub
fst
test
lods
stc
lds
imul
loope
movs
pop
mov
aaa
xchg
or
ja
dec
dec
push
add
repz
mov
rol
and
imul
setns
sbb
add
push
fmul
pop
sahf
rcr
addr16
cwde
(bad)
jl
out
(bad)
adc
jno
sbb
popa
sbb
mov
cwde
adc
call
or
xchg
bound
push
sub
dec
jbe
push
lods
iret
push
jae
fild
(bad)
cld
test
lods
in
pop
push
loopne
and
mov
or
sbb
test
xor
mov
sahf
dec
xor
(bad)
out
les
loop
xchg
repz
mov
jl
test
stos
inc
mov
sbb
imul
mov
jb
loop
xor
sti
sbb
jae
jnp
sub
sub
fwait
adc
xor
aad
pop
mov
not
xor
mov
adc
jnp
dec
sbb
loop
ss
dec
add
retf
dec
mov
iret
stos
jno
inc
adc
or
pop
sub
out
repz
mov
cld
inc
daa
xlat
in
daa
pop
repnz
bound
dec
fnsave
repz
das
test
and
push
loope
clc
(bad)
sub
stc
mov
cdq
lahf
xchg
stos
mov
push
loop
jp
pop
(bad)
adc
dec
dec
daa
popf
jb
sub
int3
out
lahf
jo
(bad)
nop
mov
stos
cmps
call
das
or
pop
mov
movs
sti
dec
lahf
mov
mov
lock
not
das
out
and
daa
rdtsc
das
push
mov
mov
xor
mov
loop
aaa
fbstp
jnp
movs
jge
and
or
mov
test
or
pop
push
(bad)
mov
sar
mov
outs
sti
dec
add
or
push
loope
pusha
dec
loopne
test
sbb
test
adc
sbb
xchg
add
imul
add
pop
cmc
ins
push
cmc
fnstenv
and
stos
rcr
ja
xlat
ins
mov
fisub
xor
lea
aad
lds
in
fstp
out
sbb
mov
cmp
out
out
in
cmps
repnz
fcom
inc
mov
dec
xor
xchg
out
add
xchg
pop
or
adc
sub
cwde
add
(bad)
imul
push
fidivr
pop
dec
sub
push
jns
inc
push
aaa
cmc
adc
outs
push
ds
ficom
fcom
and
icebp
cwde
xor
cmc
jecxz
add
in
inc
push
shl
dec
nop
jmp
xor
repz
in
cmp
bound
and
aas
mov
push
pop
(bad)
lock
in
or
addr16
xor
pop
in
stos
(bad)
fld
jmp
and
mov
cld
xchg
push
sbb
pop
jg
aad
pusha
pop
out
iret
fidiv
int
jl
mov
mov
hlt
sbb
cmps
dec
sbb
iret
repz
hlt
retf
loope
mov
sub
xor
xor
jo
std
pop
ret
fimul
mov
sub
dec
iret
xor
sbb
inc
call
out
lods
inc
call
shl
adc
movs
jnp
icebp
mov
adc
test
aaa
das
loope
sub
sbb
add
cmp
mov
in
sub
or
mov
jg
sbb
cli
pop
inc
mov
frstor
pop
jno
jle
adc
adc
stos
pop
jmp
or
add
fcomp
sahf
jne
mov
(bad)
jnp
mov
fcom
inc
out
xor
cmps
add
jne
pop
or
jecxz
push
mov
xchg
xchg
imul
cmp
popf
lds
mov
push
repz
pop
sbb
push
cmp
sbb
aaa
sub
xlat
sbb
or
bndldx
pusha
mov
push
fsubr
(bad)
sub
pop
xchg
rcl
rcl
push
hlt
xor
jns
inc
push
cmp
bound
xchg
or
xchg
in
out
test
int3
and
and
xchg
pop
loope
mov
fcom
inc
outs
sub
pop
jg
pusha
imul
pop
(bad)
push
pop
(bad)
mov
test
xor
shr
stc
inc
xchg
sub
pop
jb
call
add
fist
std
mov
popa
out
scas
mov
hlt
out
scas
seto
and
ins
xchg
lock
lock
push
mov
push
xor
int3
ds
ss
(bad)
and
inc
cmc
dec
mov
and
in
clc
push
outs
out
sbb
jae
nop
adc
(bad)
jbe
sti
push
inc
pop
lds
sbb
jmp
sbb
sbb
push
nop
pop
sub
xor
adc
push
iret
gs
inc
imul
repnz
push
aas
loop
add
not
lea
xor
sub
stos
retf
mov
sbb
jge
mov
(bad)
outs
push
mov
cmp
xor
or
or
or
cmp
mov
push
and
jae
add
leave
inc
xchg
mov
dec
sbb
stos
stos
ret
call
or
outs
arpl
clc
sbb
fwait
shufps
outs
ins
inc
pop
jno
lock
inc
dec
out
xchg
(bad)
push
or
mov
and
dec
aad
or
idiv
inc
pop
cmp
int
mov
fisttp
mov
sar
or
jnp
jp
lods
dec
and
push
or
int
mov
rcl
rcr
add
jno
imul
xor
push
in
lea
pop
lahf
dec
sar
cwde
jl
xchg
push
inc
jmp
mov
or
xor
cmc
das
shr
push
lods
daa
and
jmp
out
adc
loope
dec
or
mov
add
loopne
out
sub
or
mov
lock
lods
sbb
mov
repz
mov
gs
cmp
scas
ja
fs
mov
lds
and
mov
and
add
push
pushf
pop
lods
pop
jb
xor
fcom
retf
es
mov
gs
mov
push
sti
sbb
or
dec
in
pop
dec
retf
mov
fcomp
mov
sbb
mov
xor
repz
xchg
jl
call
dec
push
outs
les
xchg
scas
jmp
mov
fisubr
adc
sbb
push
inc
addr16
dec
loopne
jge
adc
xchg
ja
fimul
neg
fsub
inc
loop
shr
mov
cmp
(bad)
xor
mov
dec
inc
pop
outs
dec
push
lods
lahf
dec
xchg
dec
cs
test
jnp
mov
xlat
into
(bad)
dec
call
aaa
pop
or
outs
movs
push
sub
xor
inc
adc
in
shl
cmp
and
inc
or
jns
pop
and
mov
pop
xchg
or
div
jne
mov
test
dec
sbb
mov
ss
inc
rol
pop
les
xchg
push
cmp
adc
aad
lods
(bad)
div
dec
inc
jno
xchg
inc
dec
lds
xlat
outs
xor
pop
out
sbb
pushf
jmp
out
movs
jo
mov
inc
dec
shr
push
ins
sbb
cwde
js
add
scas
ror
pop
addr16
sar
push
inc
ret
(bad)
in
mov
out
test
jp
jp
shr
jg
mov
push
adc
inc
das
cwde
out
dec
mov
je
les
fld
xchg
pushf
aaa
push
fwait
push
retf
fwait
dec
sbb
or
repnz
jne
scas
scas
fadd
les
add
pop
(bad)
loopne
mov
das
push
add
mov
repz
jno
cwde
test
jp
popf
aas
pop
shl
and
call
loope
test
loopne
test
or
inc
xchg
outs
repz
js
pusha
mov
push
push
jge
xchg
arpl
dec
lods
adc
repz
aaa
dec
enter
xor
(bad)
mov
xor
jne
mov
in
jb
jp
sbb
xchg
das
jmp
or
cmps
stc
dec
mov
mov
mov
aam
shl
jge
icebp
sahf
jmp
inc
sar
lods
test
(bad)
jmp
xor
dec
(bad)
into
xlat
xor
cmp
fistp
inc
cmp
xchg
cli
repnz
mov
cmp
imul
icebp
jns
sbb
iret
fcomp
aad
or
cmc
mov
ja
out
push
jo
jmp
lea
pop
arpl
jl
and
pushf
mov
mov
loopne
push
into
ror
test
dec
jmp
xchg
xchg
movs
fs
dec
sub
dec
mov
imul
inc
inc
push
je
push
fucomp
int
jno
scas
mov
sar
adc
jne
out
sub
push
fild
ret
outs
mov
imul
inc
nop
mov
fild
test
inc
inc
dec
push
jge
mov
lock
loop
aad
dec
add
mul
or
int
call
push
mov
and
fisub
push
(bad)
mov
js
mov
es
shl
push
xor
stc
fnstsw
cmp
rcl
inc
xchg
xchg
mov
inc
ficom
xchg
inc
pop
fadd
inc
xchg
das
push
ins
je
dec
cmp
shl
and
adc
fisttp
in
cmp
div
shl
outs
add
cmps
lods
dec
jmp
jb
mov
push
adc
add
into
cdq
rcr
xchg
mov
dec
mov
outs
mov
xor
sub
ja
sahf
in
lods
xchg
adc
xchg
dec
sbb
push
scas
inc
inc
mov
pop
das
enter
xchg
push
sar
enter
mov
data16
mov
mov
inc
or
pop
jle
pop
in
and
loope
hlt
repnz
lods
out
xor
cmc
mov
and
(bad)
fsubr
inc
mov
test
mov
dec
add
clc
jb
jb
fimul
sub
mov
xor
push
push
(bad)
push
add
or
retf
xchg
fwait
pop
gs
repz
push
sahf
sbb
push
sbb
loopne
aaa
mov
sahf
cmp
cdq
jnp
dec
adc
xor
jb
cmp
xchg
ja
mov
fistp
inc
fst
retf
xchg
js
cmp
pushf
lods
push
mov
inc
xor
jbe
je
pop
out
imul
jle
inc
cmp
or
inc
pop
jg
dec
cmp
sar
movs
jo
retf
ss
xchg
ret
fstp
aaa
imul
jge
call
repz
mov
movs
outs
ins
push
scas
cwde
shl
and
addr16
scas
mov
push
inc
push
out
xor
xchg
or
icebp
jbe
pop
push
loopne
mov
inc
ds
push
(bad)
je
jp
shl
sar
dec
inc
outs
mov
stos
stos
loope
das
cmc
sub
(bad)
or
adc
pop
cmps
sub
inc
pusha
sub
sbb
fist
movs
mov
cmp
in
jmp
into
xchg
adc
loop
or
mov
hlt
dec
fcmove
int
test
stos
push
xor
inc
sub
adc
mov
loopne
sub
pushf
jae
xchg
leave
repz
std
sti
push
cmp
jge
push
jns
repnz
inc
pop
bound
std
sub
add
aad
ins
xlat
cmp
lods
push
adc
adc
mov
fstp
xor
popa
add
cwde
mov
jne
sar
cmps
jge
rcr
jno
jl
movs
cmp
loopne
or
out
mov
add
pushf
lock
into
inc
adc
pop
outs
inc
add
and
inc
cmp
mov
ja
enter
jg
add
push
mov
ror
int
xchg
inc
inc
stos
or
or
push
leave
pushf
(bad)
aaa
fnstsw
jne
out
loopne
mov
push
sub
into
xlat
jo
add
sub
repz
xor
xchg
xchg
dec
inc
mov
std
fnstsw
int3
inc
outs
sbb
popf
lahf
sub
mov
inc
pop
pop
jno
push
inc
pop
cmovs
(bad)
repnz
add
cmc
out
clc
repz
mov
outs
sub
mov
scas
out
int3
xchg
adc
lea
jbe
out
fild
(bad)
mov
fisub
clc
inc
cld
inc
mov
mov
jnp
rol
in
call
ja
addr16
dec
mov
or
jecxz
clc
shr
(bad)
xchg
mov
in
mov
mul
movs
js
inc
gs
mov
jecxz
and
ret
nop
or
scas
push
ds
inc
sbb
push
add
mov
ret
imul
int3
js
mov
mov
add
fisttp
(bad)
sub
xchg
cli
xchg
jae
dec
sbb
jmp
adc
cmc
inc
leave
xor
mov
fdivr
je
lods
sbb
into
mov
mov
pop
push
xor
xchg
dec
ins
sbb
push
jl
sbb
mov
les
mov
xor
mov
fsubr
xlat
adc
inc
out
sahf
stos
pop
out
mov
jbe
jle
aaa
push
ret
xchg
stos
pop
jo
loop
cmp
dec
sbb
sub
bound
call
cdq
xchg
xchg
and
sub
test
pop
das
fsub
mov
cmp
(bad)
imul
hlt
(bad)
push
iret
sbb
sha256msg2
push
and
test
mov
aam
cmp
mov
movs
imul
test
loopne
sub
pop
nop
cdq
xor
cmp
add
xor
xchg
popa
imul
leave
hlt
cmp
rcl
in
lods
jp
jg
in
sbb
fcomp
inc
cli
das
je
cdq
mov
adc
call
scas
ror
dec
ins
cmp
mov
push
xchg
jns
sbb
repz
push
call
ret
xor
add
cmp
dec
stos
pushf
test
fild
mov
pmaddwd
xchg
jae
nop
add
dec
sub
fst
pop
mov
shl
dec
stos
cmc
adc
gs
(bad)
jmp
stc
jns
das
fs
pop
out
mov
push
or
inc
dec
sbb
add
mov
jnp
cld
mov
cwde
mov
add
push
jae
cmp
sub
(bad)
lds
or
cmps
sub
(bad)
sbb
xchg
pop
out
inc
xchg
stc
mov
dec
popf
mov
sbb
shl
mov
jecxz
in
pusha
or
dec
movs
aad
data16
jbe
jns
dec
pop
pop
call
cmp
cli
clc
mov
push
rcl
dec
shl
or
pop
xor
or
mov
pop
leave
in
repz
in
jg
adc
test
pop
xor
in
call
bound
addr16
out
mov
push
sub
js
adc
dec
jbe
cmp
call
or
pop
xor
xchg
jl
fcmovb
repnz
mov
inc
jecxz
cmps
std
stos
or
push
mov
sbb
enter
fld
xor
jnp
out
std
and
ret
jle
popa
mov
gs
xor
and
xchg
inc
mov
cmp
push
shl
in
das
add
mov
jl
xchg
dec
(bad)
mov
xor
dec
and
repnz
push
rol
cwde
icebp
and
leave
inc
lds
imul
pop
mov
int
les
aas
xchg
out
lock
call
mov
or
inc
ds
imul
call
xor
ins
mov
js
xchg
jle
push
xchg
mov
add
lock
cld
bnd
dec
jbe
fld
adc
jp
mov
jae
or
jmp
sahf
sbb
mov
fwait
ret
mov
push
or
dec
inc
cmp
arpl
ins
rcr
fucomip
sub
rcr
inc
xchg
ret
xchg
add
inc
pop
repz
xor
mov
inc
rcr
mov
sub
fidivr
ja
jp
push
lahf
adc
(bad)
push
push
movs
xchg
xchg
mov
aas
ins
mov
cmp
ror
aaa
je
mov
pop
pop
arpl
nop
es
sti
cmc
movs
sub
and
aaa
(bad)
(bad)
sub
fadd
sbb
mov
cmc
mov
loope
mov
dec
pop
cmp
cmp
xchg
jno
leave
adc
int
popf
xchg
jle
fs
out
xor
std
lea
dec
arpl
mov
add
add
dec
dec
dec
cmp
test
pop
leave
and
inc
sub
sbb
and
mov
xor
retf
lods
push
pop
in
dec
adc
or
call
fldenv
popa
into
(bad)
aas
sub
cmp
inc
ins
cmp
std
xchg
and
(bad)
mov
push
mov
cmp
aas
sbb
xlat
adc
outs
dec
rcr
xchg
dec
enter
add
mov
and
xor
push
and
(bad)
arpl
ret
call
xchg
daa
cmp
sbb
shl
push
gs
push
repz
dec
push
test
aaa
jae
les
mov
xchg
outs
push
mov
add
push
and
xchg
mov
mov
cs
push
jp
(bad)
and
leave
push
inc
call
mov
pushf
jbe
(bad)
scas
ins
bnd
inc
lods
fisttp
pop
and
pop
(bad)
push
jae
xchg
in
mov
inc
mov
mov
addr16
adc
fstp
(bad)
ds
leave
cmp
xchg
std
or
retf
mov
inc
push
cmp
cmp
mov
jno
cmc
mov
sbb
xor
jl
cli
xchg
push
adc
adc
cmc
xchg
or
cdq
in
stos
mov
fadd
xchg
loope
lods
(bad)
pop
pop
stos
pop
or
cwde
ret
xor
rol
xchg
iret
add
popf
ret
fnstcw
inc
mov
cmps
call
and
xor
ret
jmp
push
fs
dec
cmp
test
iret
in
mov
dec
mov
or
and
inc
xor
cmp
call
(bad)
es
xchg
das
jle
or
mov
push
fabs
dec
stc
mov
pop
aaa
and
inc
push
imul
out
dec
push
cld
xor
out
adc
pop
daa
enter
inc
xor
inc
adc
xor
movs
daa
fisub
mov
into
js
cli
enter
outs
(bad)
sub
adc
mov
aad
call
cmp
adc
test
mov
call
xchg
xlat
sar
movs
fcmovu
mov
push
rcl
push
xchg
retf
pop
sbb
dec
pop
xchg
mov
mov
clc
push
cwde
mov
imul
ins
movs
shl
add
xlat
aas
mov
adc
mov
mov
mov
mov
add
mov
fist
jle
jo
mov
sub
cmps
out
(bad)
jl
(bad)
sub
int
xchg
ret
add
push
xor
lock
clc
std
add
jo
lahf
fstp
xchg
cmp
int3
test
stc
mov
data16
sub
pop
in
push
or
fcmovnu
fisttp
pop
dec
in
adc
call
aas
not
repz
inc
jl
adc
out
xchg
sbb
lock
inc
jns
loopne
(bad)
pop
or
mov
pop
xchg
xchg
push
or
sbb
xchg
mov
stos
retf
add
jne
xchg
push
mov
add
ret
mov
push
cdq
add
cmp
out
adc
stc
mov
push
push
outs
add
sub
add
cmps
pusha
inc
mov
xchg
mov
(bad)
jbe
cmp
test
xchg
cmp
mov
mov
cmps
inc
inc
pusha
stos
popa
jl
lea
push
inc
xchg
ror
adc
div
jle
add
mov
jmp
pop
dec
movs
mov
add
repz
rcl
sub
popa
or
adc
and
pop
ret
jl
jp
outs
pop
pop
out
sar
mov
mov
fbld
movs
mov
adc
sub
outs
bound
mov
in
cmp
mov
jl
xchg
xchg
ins
xor
dec
fmul
loopne
movs
push
movs
int3
inc
cli
js
outs
into
jb
(bad)
mov
jae
call
jge
pop
sar
hlt
inc
ins
dec
mov
aaa
mov
fcomip
(bad)
out
jne
daa
mov
sbb
dec
pop
add
jecxz
xor
sbb
xor
das
das
jo
nop
pop
push
lds
mov
in
aad
or
rcl
jmp
popa
mov
mov
aad
xchg
mov
(bad)
outs
or
adc
mov
dec
fsubr
retf
lods
test
mov
in
jg
push
pop
movs
mov
pop
sub
sub
scas
bound
sub
arpl
inc
mov
js
icebp
jmp
mov
or
lahf
jmp
jle
out
icebp
inc
lods
lahf
mov
sbb
xor
mov
jae
int3
cmp
call
mov
jg
mov
jmp
pop
jae
xor
mov
ret
mov
sbb
mov
xchg
repnz
pop
popa
lods
out
sbb
fwait
dec
outs
stc
cmp
inc
jl
push
xchg
inc
ret
mov
mov
inc
repz
cli
add
mov
addr16
fimul
repz
mov
mov
clc
retf
test
aam
sub
cmp
jne
and
xor
mov
clc
mov
xor
mov
cmp
jne
and
gs
popa
fcmovnbe
ja
into
jg
sub
mov
push
add
cmp
das
lahf
add
stos
xor
lods
(bad)
fmul
pop
ja
xchg
int
out
sub
clc
ins
xor
mov
push
push
repnz
ret
push
xor
ja
pop
stc
cld
jmp
cmp
push
ror
popf
retf
jmp
ins
add
(bad)
inc
mov
pop
pop
shl
ss
fimul
adc
stos
add
sub
xchg
xchg
imul
enter
mov
xchg
imul
add
add
test
add
(bad)
retf
in
sub
cmp
inc
xchg
icebp
xchg
movs
mov
xor
cmp
sbb
mov
xor
jp
cdq
popa
push
enter
pop
xchg
jmp
lock
cld
gs
jo
rcr
test
sub
push
js
adc
add
sbb
fist
inc
das
mov
(bad)
iret
sahf
add
mov
mov
mov
xchg
sar
and
mov
mov
ret
jno
fwait
and
repnz
icebp
(bad)
cmps
pop
pop
inc
mov
loopne
sub
mul
fsub
pusha
sub
retf
cmc
repz
or
mov
add
stc
loop
mov
(bad)
push
and
repz
sub
fmul
mov
fmul
sbb
pop
adc
repnz
gs
push
sub
and
int
pop
popa
fcmovnu
mov
jecxz
ja
ss
fmul
pop
add
jb
xor
inc
jp
fst
add
push
stc
sbb
jl
sub
int
int3
mov
mov
aas
cmp
xchg
dec
ds
cmp
and
or
inc
push
and
pop
movs
mov
cmp
inc
xchg
aaa
sbb
adc
mov
das
mov
or
or
pushf
push
mov
jmp
and
pop
xor
xor
push
push
loop
lea
popa
mov
xchg
pop
cmps
int
ret
jmp
pop
das
cmp
popf
and
movs
mov
jmp
gs
mov
cdq
or
(bad)
fcom
outs
pop
adc
pop
rcr
es
int
int3
scas
ret
lds
(bad)
mov
pop
dec
xchg
out
mov
loopne
mov
leave
ins
pop
ficom
cmp
mov
xor
imul
add
push
push
jl
mov
iret
lea
add
popa
inc
or
pop
xor
hlt
call
(bad)
inc
movs
mov
ret
or
fmul
cli
push
jnp
mov
imul
imul
popf
movs
mov
mov
mov
and
cmc
jg
mov
add
ret
out
inc
mov
(bad)
jle
loope
inc
push
push
pop
mov
dec
clc
dec
cs
shl
mov
dec
loop
test
lds
pop
jae
xor
push
(bad)
stc
xor
push
add
outs
mul
mov
add
cmps
out
int
push
push
lods
push
add
jmp
adc
pop
cmp
movs
cmc
movs
fild
imul
int3
pop
std
movs
jo
call
mov
call
test
xchg
aas
cmp
push
xor
mov
in
push
les
fldcw
lea
mov
(bad)
pop
das
sub
sbb
sub
jae
jecxz
pop
(bad)
and
dec
cmc
xchg
ja
cwde
popa
sbb
inc
mov
sub
loope
jno
inc
fisttp
mov
cli
leave
mov
dec
call
(bad)
mov
push
and
dec
rcr
aad
jmp
enter
aad
sub
cmps
scas
add
mov
push
(bad)
in
sub
push
lods
and
cmp
inc
aad
adc
dec
xchg
in
pop
push
retf
sbb
inc
cmp
adc
jle
push
cmps
icebp
hlt
pop
xor
add
ins
gs
cwde
popf
and
and
inc
dec
sub
int
jb
add
icebp
xor
sub
aas
ror
shr
pop
sti
xchg
fdivrp
je
aas
or
mov
(bad)
sub
lods
pushf
cmp
pop
popa
repz
lock
pop
fcmovnb
add
mov
xor
ins
jmp
or
into
push
lods
jmp
push
nop
int
scas
shl
cwde
sub
jnp
loope
mov
inc
inc
loopne
and
mov
into
in
out
gs
pop
mov
dec
rcr
jmp
adc
(bad)
push
call
mov
test
jo
dec
add
jge
fisttp
xchg
out
pop
xchg
mov
mov
cli
in
xchg
cmp
mov
mov
loopne
mov
add
stos
xchg
ss
jae
std
inc
jmp
cld
(bad)
jo
xchg
mov
jne
call
mov
cmps
inc
dec
cmps
out
sub
mov
mov
es
loope
cmc
scas
jmp
adc
int3
sbb
push
out
ja
push
sub
test
dec
pop
push
jl
push
aad
ins
dec
mov
pushf
or
or
dec
push
imul
sbb
std
sbb
cmp
in
movs
into
into
xor
add
or
mov
in
pop
retf
out
add
push
in
int3
hlt
in
add
(bad)
lahf
or
mov
pop
fsub
push
mov
and
cwde
pop
in
xor
cwde
fbstp
jecxz
pop
retf
mov
mov
inc
mov
jb
add
loope
pop
mov
in
cmp
push
mov
pop
mov
retf
sbb
and
jecxz
pop
mov
ret
rcl
mov
leave
dec
leave
adc
sti
jecxz
and
data16
push
rcl
push
cmp
fisub
stc
scas
in
xor
push
ror
int3
dec
movs
mov
mov
cmp
popf
add
mov
mov
sbb
xlat
sub
pusha
(bad)
sub
push
popf
ffree
dec
adc
xlat
pop
div
jns
lea
sub
pop
aas
outs
mov
out
xor
das
push
icebp
or
jae
imul
test
movups
pop
dec
addr16
mov
adc
stos
mov
retf
mov
mov
aas
aas
imul
stos
inc
mov
lods
into
fmulp
iret
outs
jg
pop
hlt
xor
sti
sbb
dec
cmp
(bad)
mov
loope
fs
ja
mov
dec
das
push
inc
rcr
jle
fwait
mov
mov
and
jnp
push
push
in
cmp
fiadd
adc
pop
scas
out
xor
sub
jbe
push
sbb
nop
sahf
adc
repz
dec
stos
cmp
pop
push
retf
pop
int
pop
sbb
cmc
loop
imul
jp
mov
(bad)
dec
cmp
dec
xlat
out
inc
add
cwde
addr16
mov
dec
pusha
xchg
ret
pop
ins
and
cmps
mov
sbb
ja
jle
xor
fs
or
add
aaa
and
stos
retf
xchg
cwde
retf
push
dec
into
push
xlat
stos
xchg
sub
outs
loop
fsub
push
jb
nop
daa
cdq
sub
out
sub
jo
icebp
or
cld
inc
cmp
xor
xchg
xchg
push
ret
addr16
push
push
mov
sbb
lea
adc
fnstcw
sbb
xchg
add
mov
fld
dec
push
push
adc
retf
push
das
dec
in
icebp
addr16
push
mov
sbb
popa
adc
xor
mov
or
mov
test
enter
dec
adc
and
loop
mov
jnp
push
data16
sbb
push
fstp
xor
cld
out
mov
xchg
add
xchg
bnd
mov
fimul
xchg
clc
inc
movs
arpl
fdiv
ds
sub
pusha
cmps
sbb
xchg
add
fidivr
fisubr
loope
scas
sub
lock
ins
cmc
mov
jae
cmc
movs
sbb
aas
ins
enter
xchg
repnz
gs
push
mov
jmp
push
push
pop
xchg
pop
xchg
pusha
adc
pop
pop
mov
dec
les
daa
mov
mov
sbb
sub
cs
jmp
dec
aaa
loop
mov
jnp
ds
jmp
pop
outs
lahf
pop
inc
sbb
cmp
push
cdq
add
xor
pop
mov
inc
pop
jg
adc
mov
stc
and
or
test
(bad)
mov
sub
pop
out
mov
in
xor
sub
and
dec
pop
jnp
push
cmps
out
std
fdiv
call
movs
adc
xor
fcom
call
inc
cmp
and
mov
cmp
add
jl
mov
les
bnd
cmp
out
inc
cdq
(bad)
adc
xor
xlat
or
(bad)
pop
retf
test
adc
dec
in
ss
add
pushf
ss
mov
daa
and
cmp
mul
ret
mov
mov
in
cmp
das
xor
sub
fistp
mov
xor
addr16
xchg
cs
mov
inc
cmps
xchg
pop
push
les
shl
mov
sub
and
sub
(bad)
int3
xchg
mov
ja
xor
pop
out
pinsrw
paddb
test
mov
sti
sub
sub
retf
(bad)
cli
stc
repz
jno
ror
sar
or
xlat
mov
pop
push
mov
jmp
add
or
shl
mov
lods
lods
push
std
bound
add
pop
dec
out
dec
out
inc
cwde
daa
pop
sub
mov
adc
sbb
xor
(bad)
sbb
sbb
push
dec
xor
jb
inc
fimul
and
idiv
fwait
xchg
fwait
les
in
fnsave
mov
sbb
jne
push
sub
mov
cmc
mov
xchg
add
(bad)
xchg
adc
push
push
mov
stos
pop
or
push
mov
ret
push
jp
pop
fisttp
jo
inc
clc
arpl
cmc
push
jmp
mov
fbstp
popf
cs
lods
enter
jl
das
inc
imul
in
jnp
out
sub
rcl
inc
add
push
les
icebp
fstp
xchg
out
lods
sbb
pushf
xor
dec
movs
(bad)
and
mov
loopne
sbb
test
adc
pop
cmc
cmp
sbb
scas
add
and
shl
jp
sbb
or
pusha
xor
popa
out
mov
and
cmp
fcmovbe
movs
outs
jp
ret
(bad)
out
cmp
mov
mov
fwait
xchg
arpl
sti
push
pop
jl
and
fucomp
xchg
add
pop
cmc
xchg
and
sbb
sub
in
jg
jecxz
fsub
idiv
xchg
jge
dec
adc
cmp
sbb
scas
jmp
mov
pop
(bad)
jecxz
(bad)
xor
jge
mov
cli
xlat
ret
pop
aam
test
ret
cmps
fdivrp
sub
mov
fidivr
not
test
sub
sahf
push
ror
hlt
jp
pop
pop
jnp
rcr
xchg
(bad)
xchg
dec
jmp
das
test
popf
jg
sub
jnp
push
scas
jb
inc
addr16
mov
inc
aaa
push
add
enter
loopne
jb
cli
xor
mov
daa
xor
lock
(bad)
xor
sub
sbb
mov
(bad)
mov
dec
clc
fcmovbe
mov
jns
push
dec
in
mov
scas
xchg
sbb
outs
pop
push
ss
jmp
jmp
or
test
mov
daa
inc
jb
add
and
pop
in
mov
aad
xor
sti
fwait
(bad)
(bad)
fcomip
sbb
adc
ins
push
lods
jne
stos
ffree
fwait
inc
cmps
push
inc
push
mov
iret
test
or
int3
pop
cdq
aad
sbb
mov
fnstsw
jmp
fcmovb
mov
sahf
cmp
mov
das
loope
pop
loop
and
dec
outs
cli
push
sar
popa
call
loop
add
cli
mov
ins
fadd
test
in
jmp
adc
xchg
sbb
nop
(bad)
andps
push
inc
add
or
je
test
cli
aaa
fldz
xchg
fdiv
fisub
pop
inc
movs
mov
rcl
jb
sub
shl
and
les
test
jge
pop
cmp
sbb
aad
mov
lods
pop
pop
mov
pop
cmp
jecxz
(bad)
call
fldlg2
cmp
fcomp
mov
jp
pushf
jmp
mov
inc
pop
pop
dec
call
imul
mov
ror
cld
movs
push
push
xor
fst
cmp
and
lea
mov
push
cmps
rcl
out
xor
push
stos
pop
dec
scas
sub
xor
mov
sbb
inc
pop
aad
jge
call
sub
or
outs
(bad)
call
jle
js
das
sbb
xor
lods
cmps
adc
push
pop
add
fdivr
cmps
sbb
mov
fmul
rep
iret
jmp
jmp
add
sub
shr
jb
pop
or
jnp
jo
xchg
mov
sub
add
xor
cwde
retf
add
or
imul
mov
adc
cmp
xchg
sbb
fwait
(bad)
mov
mov
loop
aaa
daa
loop
xor
jne
leave
dec
lea
sub
pop
lock
sub
popa
pop
adc
mov
cdq
test
bound
(bad)
loop
mov
cmp
mov
shl
xchg
adc
pushf
cmp
in
into
fldcw
popf
mov
xor
ret
enter
jne
(bad)
jl
icebp
bound
test
cmp
pop
outs
mov
sub
adc
add
push
xor
pop
or
test
or
xor
call
cmps
dec
dec
mov
outs
push
push
bound
lea
leave
and
push
out
xchg
xchg
sbb
sub
dec
es
adc
mov
icebp
lods
pop
xchg
add
(bad)
add
sub
push
rcl
int
xchg
pop
leave
das
je
in
in
cli
mov
ror
push
or
or
mov
(bad)
xchg
mov
jb
xor
pop
or
ins
cdq
mov
dec
add
cmp
fadd
push
inc
or
out
adc
nop
and
xchg
retf
cli
(bad)
cwde
repz
or
cmp
out
sub
and
lock
xchg
add
rol
inc
add
cs
xchg
(bad)
fist
mov
leave
inc
jns
test
leave
lods
dec
ror
or
inc
into
pop
clc
xchg
dec
clc
push
add
ds
push
xor
sub
stos
pop
movs
sar
mov
pop
(bad)
pop
inc
js
and
outs
mov
adc
pop
outs
mov
mov
fcomi
sbb
and
ret
sbb
sbb
sbb
test
inc
jmp
inc
push
lds
push
inc
add
lea
xchg
mov
(bad)
mov
test
cli
dec
mov
pusha
dec
mov
cmps
aad
movs
into
test
dec
mov
ins
inc
stc
outs
sbb
push
xor
pop
fdiv
mov
push
mov
inc
loopne
xchg
mov
jne
call
leave
xlat
jno
out
pop
ins
jle
adc
sub
fsubrp
sub
sbb
into
jno
not
fisttp
ret
retf
add
adc
and
xor
test
ja
cmp
fcom
fwait
ret
jmp
xor
adc
lods
in
lea
cmp
adc
mov
ds
jmp
inc
fidivr
mov
je
aad
js
push
jl
mov
sar
test
in
aaa
jae
mov
and
mov
and
adc
jnp
les
cmps
and
sbb
out
xor
cmp
sub
(bad)
xchg
arpl
push
packssdw
test
mov
cdq
and
sbb
repnz
pop
gs
sub
neg
adc
pop
push
xor
aaa
dec
cmps
jp
ss
out
es
push
and
cmp
fwait
inc
jmp
xchg
scas
cmp
xor
movs
leave
jecxz
popf
int
sar
sub
cli
fnstcw
das
sti
pusha
sar
push
or
xchg
(bad)
xor
dec
jo
dec
in
inc
pop
push
shr
pop
ins
(bad)
in
jae
adc
lds
and
in
les
jno
outs
aaa
aaa
jmp
mov
imul
adc
xchg
inc
pop
mov
dec
sub
les
rol
adc
inc
lods
sub
and
dec
sbb
jae
dec
dec
cmps
pop
sbb
dec
jnp
mov
xchg
pop
push
xor
xchg
lods
aas
jecxz
arpl
addr16
mov
inc
jg
lahf
movs
or
sbb
cwde
not
jp
pop
test
mov
mov
in
sbb
sub
ret
push
mov
int
pop
loope
scas
push
outs
test
inc
push
sbb
(bad)
enter
pop
jb
and
add
movs
iret
lahf
pop
sub
ins
pop
inc
out
(bad)
aas
fiadd
inc
or
rcl
jne
xchg
dec
in
and
push
add
dec
retf
cld
or
sbb
mov
cmps
sbb
lods
xor
or
pop
add
test
(bad)
sbb
dec
imul
mov
nop
push
or
push
pop
jle
inc
(bad)
push
das
in
nop
dec
and
mov
xor
add
movs
dec
mov
xchg
ja
ja
mov
retf
test
std
sar
pop
nop
mov
retfw
stos
mov
stos
dec
dec
jnp
dec
sub
mov
inc
add
ss
ds
inc
ins
mov
mov
pop
mov
xlat
ret
add
jg
push
loop
xchg
mov
add
pop
and
imul
add
call
repz
scas
ret
icebp
shl
add
call
pop
mov
inc
imul
fidiv
inc
cmc
pop
push
or
jne
xchg
fimul
mov
mov
jle
push
repz
push
push
out
fist
sub
in
adc
sbb
in
fwait
imul
sbb
sbb
xchg
mov
das
stc
pusha
bound
pop
mov
test
fld
in
pop
push
push
sub
xchg
cmps
inc
sahf
(bad)
cwde
mov
mov
xchg
test
lods
mov
ret
(bad)
(bad)
dec
in
mov
aas
shr
(bad)
or
mov
ja
pop
ins
add
push
ret
aad
xor
in
or
stos
out
ret
jecxz
jo
not
in
xor
ret
iret
lods
push
je
push
xchg
pop
jg
cmps
pop
mov
pop
call
rol
(bad)
in
fsubr
repz
sbb
push
pop
mov
mov
test
push
xchg
test
xchg
push
lds
das
pushf
clc
add
aaa
mov
sahf
outs
sub
dec
dec
jle
mov
mov
lahf
dec
mov
test
int
lods
(bad)
pop
mov
(bad)
out
xchg
add
popf
movs
mov
push
mov
loop
ins
and
imul
pop
mov
outs
clc
mov
sahf
out
out
(bad)
mov
jmp
aaa
adc
cmps
adc
xlat
mov
cld
mov
jmp
int
leave
cli
in
jp
pop
les
add
or
retf
mov
push
es
in
lea
add
cmp
ss
in
sbb
retf
out
std
pop
jne
xchg
int3
adc
sti
jne
scas
or
shl
sub
jnp
(bad)
std
push
adc
outs
mov
mov
pop
cmp
sbb
imul
adc
mov
enter
mov
xor
cmp
inc
sbb
call
push
outs
lods
je
xchg
loopne
add
xchg
loopne
or
imul
dec
dec
sbb
mov
in
pcmpgtw
jmp
inc
mov
sbb
pop
jae
xchg
or
mov
pop
fwait
hlt
pop
lea
sbb
mov
adc
dec
int3
adc
mov
xchg
or
sar
sub
enter
stc
frstpm(287
(bad)
ret
movq
adc
stc
repz
mov
ret
jecxz
jbe
cmc
and
xchg
addr16
mov
rcl
data16
sti
sub
arpl
xor
int3
jl
aas
out
aas
(bad)
mov
xchg
in
pop
fisttp
lahf
call
sbb
mov
adc
jmp
mov
cmps
data16
push
xlat
int
and
in
push
xchg
jmp
mov
test
pop
push
scas
jo
ss
mov
div
int
retf
aas
call
pop
shl
mov
inc
aaa
mov
mov
sub
stc
sub
xor
xchg
icebp
jns
cmp
cmps
push
(bad)
fcmovu
xor
les
lar
mov
xchg
mov
mov
pushf
test
mov
mov
cmp
mov
ins
mov
jae
in
cs
jle
xor
add
in
lds
hlt
aas
scas
sub
sbb
out
rcl
mov
rol
or
xor
je
and
in
mov
add
jp
call
xchg
sbb
in
loope
pop
les
out
fcomip
and
ficomp
cmp
sbb
icebp
stc
or
inc
(bad)
cmc
lods
into
(bad)
scas
push
int
hlt
cmc
test
xchg
rol
push
sahf
push
loop
retf
fcomp
test
pop
add
mov
mov
rcr
imul
out
and
in
mov
push
stc
lods
pop
xchg
mov
xchg
pusha
in
or
(bad)
sub
retf
sbb
cmp
mov
xchg
into
or
mov
sahf
fsubr
adc
xchg
scas
(bad)
jno
xchg
gs
loop
sbb
cli
cmc
xlat
pcmpgtb
mov
je
aam
cdq
mov
xor
popf
sbb
aam
fdiv
or
in
inc
sbb
add
push
mov
sbb
popf
cdq
test
push
sub
sbb
add
loop
mov
push
push
cmp
neg
test
jge
das
xor
pop
jecxz
sar
clc
(bad)
nop
dec
loop
inc
sbb
cmp
push
retf
pusha
inc
mov
(bad)
xchg
mov
pop
repz
mov
adc
cmp
jmp
add
jb
adc
sub
xor
cmp
jae
sbb
xor
data16
jnp
push
outs
mov
pop
or
popf
(bad)
bound
or
enter
add
push
jg
jno
jbe
sub
scas
push
cmp
loope
inc
(bad)
jb
pop
scas
shl
imul
fwait
sbb
int
sbb
cwde
inc
or
xor
in
add
xchg
in
cdq
jmp
cmp
js
jmp
push
adc
ins
in
aaa
rcl
push
jns
in
cmp
cld
fidiv
push
pop
jnp
sbb
adc
xchg
bound
and
ret
lods
jecxz
or
and
sub
aaa
cwde
test
xchg
cdq
in
mov
mov
xlat
inc
dec
cmps
pushf
push
mov
lahf
push
test
fucomp
adc
mov
in
dec
cld
jmp
aam
jg
push
(bad)
out
mov
pop
out
xchg
aam
lods
jbe
lds
fbstp
rcl
je
xor
push
call
push
mov
dec
int3
cdq
daa
push
scas
ret
or
adc
aas
int3
aam
xchg
xchg
loopne
adc
cmp
ins
or
fild
mov
xchg
outs
(bad)
enter
sbb
cmp
popa
xchg
mov
cmp
xor
loop
sti
jnp
shl
cmp
cs
(bad)
gs
sar
xor
fisttp
xlat
jno
not
sbb
pop
into
cvtdq2ps
lea
scas
jl
popf
daa
xchg
push
push
pop
sub
xor
push
aaa
sub
cli
dec
xor
xor
gs
sub
and
rol
add
mov
(bad)
jp
dec
cmps
and
pop
fwait
jecxz
hlt
cmp
pop
pop
xchg
add
pop
sbb
cwde
or
jge
ja
ja
pusha
xor
data16
out
inc
imul
icebp
add
imul
mov
adc
xchg
adc
clc
pop
out
js
xchg
inc
mov
(bad)
sub
jg
mov
adc
and
mov
jbe
call
test
scas
sahf
scas
cmp
ret
outs
stos
xchg
sbb
xchg
mov
nop
popa
cmps
fidivr
and
fild
add
xchg
sub
pop
ret
mov
imul
ret
add
lahf
mov
in
lea
ss
out
push
jno
dec
mov
aad
cmp
xchg
cld
push
cmps
sahf
imul
inc
mov
add
aam
ds
xchg
aam
jns
mov
iret
popa
adc
pusha
push
mov
lahf
test
sub
int
mov
jmp
lods
push
es
add
pop
imul
mov
lea
xlat
or
out
xor
addr16
add
dec
(bad)
fiadd
aaa
xor
(bad)
retf
jge
in
out
sub
dec
add
mov
imul
push
sbb
and
scas
push
sub
push
daa
clc
out
lock
popa
stos
cmps
mov
loope
call
cdq
lds
pop
fidivr
push
inc
jmp
pop
fadd
adc
movs
mov
pop
test
jnp
ror
xchg
mov
pop
retf
pop
jecxz
cs
inc
fistp
push
cs
aas
inc
loop
pusha
sub
shl
(bad)
and
imul
scas
int3
cdq
out
mov
lea
sub
push
aam
inc
mov
push
lea
and
mov
jnp
inc
sti
sub
cdq
ficom
jmp
nop
xchg
jmp
enter
mov
inc
push
pop
sbb
out
xor
jmp
cmc
cmps
dec
cmp
mov
push
daa
xor
jb
push
dec
loop
cmp
jmp
imul
test
retf
aaa
in
and
daa
adc
and
sbb
outs
aaa
inc
xchg
xor
and
pop
jl
push
jp
inc
fld
add
rcl
pop
pop
sbb
mov
mov
sbb
pop
xor
or
(bad)
inc
iret
mov
mov
neg
cli
fmul
jmp
rol
std
scas
pop
ins
cmp
jno
es
jb
test
ficom
mov
ins
scas
fidiv
push
shr
jb
mov
lea
ss
or
jno
ss
icebp
test
push
adc
fst
xlat
mov
scas
jl
and
mov
push
sti
dec
pop
(bad)
sub
mov
dec
inc
fnstsw
jmp
pop
test
push
shl
mov
in
mov
sbb
push
bound
cmps
add
push
mov
movs
stc
lock
call
add
lods
popf
xchg
mov
shl
lods
mov
lods
cld
cmps
lahf
cmp
mov
call
(bad)
mov
jecxz
xor
test
(bad)
cld
push
(bad)
in
ret
sti
aas
(bad)
aas
mov
adc
mov
es
scas
pop
test
add
jp
mov
cwde
ror
pop
jbe
cmp
lds
pop
add
aam
cs
inc
ret
(bad)
out
cdq
push
mov
mov
or
jge
fdivr
or
cmp
int3
out
sub
mov
add
cmps
in
mov
stos
icebp
pop
xchg
dec
pop
shr
fdivr
cdq
mov
stc
jbe
cmc
in
adc
ss
dec
mov
add
rcr
push
ins
les
popa
mov
jg
jne
sahf
out
rol
xchg
mov
fadd
sub
pusha
push
push
or
(bad)
ds
stc
aaa
mov
inc
mov
retf
or
adc
or
adc
shl
sti
inc
fwait
dec
jp
fist
and
ss
sub
mov
or
xchg
daa
push
or
push
cmps
push
jno
inc
pop
loope
in
mov
lods
nop
inc
xor
jp
sbb
pop
inc
mov
enter
data16
aaa
add
mov
pop
pushf
mov
pop
mov
popa
cmps
scas
jmp
outs
adc
mov
add
ss
aas
das
aam
or
fisubr
mov
add
js
mov
push
pop
gs
stos
or
and
lods
imul
and
iret
iret
jg
cs
and
mov
fidivr
gs
xor
pop
push
and
sbb
sub
(bad)
xor
jb
cmp
cmp
or
jecxz
in
adc
jg
mov
mov
bswap
jecxz
cmp
dec
(bad)
push
cmps
(bad)
loopne
addr16
je
jbe
inc
jmp
pop
mov
shl
sbb
mov
cmp
dec
inc
movs
jp
loop
and
push
into
pop
xor
enter
xchg
push
hlt
movs
lods
sbb
jp
imul
or
pushf
xlat
cmps
cmc
jmp
pop
fsub
xchg
ret
movs
je
rcl
iret
adc
jns
dec
jo
jmp
pop
punpckhwd
xor
call
cli
out
xor
mov
push
cdq
fs
sub
test
or
xlat
pushf
xor
in
out
movhps
inc
stos
jge
xor
test
retf
call
mov
ins
mov
inc
jns
fdivr
sbb
and
push
outs
popf
stos
lock
xchg
mov
mov
push
imul
sub
loope
push
mov
jle
mov
jl
fimul
lea
push
(bad)
push
mov
dec
mov
mov
mov
inc
push
mov
sub
bound
inc
add
dec
mov
sbb
lods
sub
shl
jge
in
out
xor
push
scas
in
xchg
cwde
mov
lds
retf
idiv
pusha
pop
pop
movs
hlt
test
sub
inc
push
jno
fadd
out
out
das
dec
sub
jmp
inc
inc
loop
pop
ds
int
cmp
dec
cmp
outs
movs
rcl
or
call
pop
and
xchg
dec
mul
adc
xor
jnp
loop
scas
in
jae
push
add
and
scas
adc
out
repnz
out
pop
xor
fs
xor
xchg
cmp
mov
cdq
mov
dec
and
push
rcl
dec
(bad)
or
aad
jb
pop
jmp
sbb
mov
out
or
cmp
jne
outs
cmp
mov
push
mov
out
push
inc
sub
jp
mov
gs
aas
push
test
adc
scas
push
fmul
or
fwait
data16
fcomp
rol
jns
inc
(bad)
add
loop
outs
retf
dec
mov
test
std
sub
adc
jp
loope
std
xor
or
sbb
mov
stc
js
xor
mov
jge
xor
ins
test
dec
or
aaa
outs
inc
push
rcl
addr16
mov
and
loopne
jae
ss
jb
fidivr
xor
adc
(bad)
lds
mov
les
or
aas
mov
(bad)
call
sbb
adc
ret
pushf
mov
lods
cmps
shr
les
sub
xchg
ret
or
and
lds
mov
jmp
mov
shr
xchg
pop
mov
push
(bad)
fucomp
dec
mov
jmp
ins
jns
adc
div
out
div
mov
pop
jle
jge
pop
xor
sub
inc
popf
clc
(bad)
jl
arpl
adc
or
cmps
jmp
int
frstor
test
imul
xor
cli
mov
loope
(bad)
push
cmps
loop
inc
(bad)
and
rcr
movs
call
mov
jmp
mov
or
int
adc
push
stos
pusha
cmps
popf
add
push
hlt
inc
out
rcr
sub
out
or
xor
xor
ret
add
sbb
push
aaa
cmp
cli
xchg
mov
aas
les
pop
pop
loopne
push
pop
adc
add
js
(bad)
cs
fs
pop
push
dec
pop
unpckhps
mov
cdq
retf
jo
xor
out
sub
cmp
mov
pop
cmp
fwait
int
mov
adc
push
loop
icebp
ret
pop
stos
es
fwait
or
pop
ss
(bad)
mov
(bad)
in
rol
mov
in
push
push
pop
hlt
mov
push
lahf
add
mov
push
rcr
sbb
mov
jmp
jmp
xchg
inc
in
mov
mov
mov
jmp
addr16
or
cld
or
retf
fsubr
sbb
aas
lds
fwait
call
pop
icebp
dec
lock
ret
pusha
xchg
inc
test
lock
xchg
je
mov
loop
pop
xchg
push
push
pop
js
stos
mov
aad
and
int3
fsub
push
add
aas
les
aad
xor
in
stc
sbb
xor
push
cmp
test
or
sub
into
sbb
int
cmps
push
sbb
sub
mov
push
idiv
dec
in
pop
xchg
inc
adc
jb
cmp
jl
cld
pop
cwde
cli
nop
fisttp
xchg
fidivr
dec
xor
dec
mov
cwde
adc
xchg
jb
cmp
dec
arpl
(bad)
mov
jo
xor
xchg
push
ins
es
jecxz
cmp
shr
aaa
repz
mov
or
je
lahf
and
xchg
or
pop
and
cli
bound
push
pop
sub
ja
mov
jge
xor
xor
adc
or
(bad)
in
add
scas
das
sub
nop
jecxz
je
out
mov
out
sbb
or
xor
cmc
jmp
cmp
xchg
fimul
scas
jecxz
sbb
stc
sbb
test
in
push
inc
xor
add
bound
add
lahf
pop
fwait
aaa
test
push
add
call
and
mov
pop
cmps
mov
das
data16
(bad)
pop
adc
and
das
mov
lea
jg
shl
xchg
push
stos
xor
jmp
jne
enter
es
clc
shl
lock
call
sbb
xor
mov
aam
mov
das
pop
inc
adc
in
imul
inc
inc
popf
xor
fwait
loop
or
mov
and
inc
cld
cwde
jg
scas
jnp
or
pop
cmp
adc
shr
pop
mov
mov
mov
arpl
or
push
jae
rcl
or
mov
cmp
call
pushf
xor
mov
xchg
pop
(bad)
mov
rol
push
hlt
in
daa
adc
mov
enter
push
xchg
mov
xchg
add
clc
pushf
adc
ficom
and
rol
sub
cmp
xlat
les
ins
xor
lods
xchg
arpl
sub
push
pop
push
xor
mov
xor
inc
xor
mov
jns
outs
jne
mov
icebp
xchg
jb
ja
popf
mov
and
jecxz
aad
fnstenv
cld
push
inc
push
movs
sub
sub
inc
xchg
rcl
test
pop
add
repz
sbb
cmps
loope
push
or
ror
inc
call
xchg
gs
push
sub
ss
mov
aam
jnp
lds
cmps
sub
gs
and
clc
das
into
push
aad
test
aas
fwait
and
sub
xor
mov
adc
inc
mov
and
ins
push
in
lock
xchg
loope
xchg
mov
loope
out
dec
into
scas
lock
sub
ja
fistp
pop
jnp
cmp
fstp
fcmovu
cmps
outs
movs
sub
ss
lods
adc
in
mov
sbb
dec
and
add
imul
mov
outs
aam
cmps
cmp
jb
sbb
cli
adc
stos
shl
je
js
out
sbb
inc
inc
stos
fiadd
or
or
add
imul
sbb
xlat
(bad)
cld
or
mov
(bad)
inc
push
add
sar
inc
jge
mov
and
sub
pop
stos
and
and
xlat
into
mov
daa
dec
xlat
out
int
cmp
enter
daa
and
cld
add
repnz
loopne
mov
xchg
scas
shr
retf
fwait
jns
and
mov
mov
sbb
push
fwait
cmc
sbb
pop
fcomp
xchg
dec
jnp
cmp
and
sub
cld
mov
imul
gs
and
add
sbb
xor
inc
jl
pop
sbb
or
xchg
sbb
(bad)
retf
or
cmc
mov
scas
ins
and
out
inc
(bad)
jns
test
cdq
jge
mov
(bad)
cld
fist
adc
mov
jmp
enter
sbb
sbb
fidiv
cld
adc
jp
outs
out
push
out
sub
(bad)
(bad)
xor
mov
jae
push
in
aad
(bad)
adc
sbb
pop
mov
mov
mov
ins
dec
cmp
cmps
add
mov
push
ror
jmp
call
mov
iret
dec
xchg
dec
adc
out
fild
shr
dec
scas
pop
and
push
in
ins
push
mov
and
fmul
loopne
inc
repz
mov
add
inc
inc
and
mov
xor
es
push
daa
out
outs
jb
in
mov
retf
outs
daa
adc
inc
jno
jmp
iret
fisubr
ret
dec
loop
push
bound
fwait
rcl
cmp
retf
mov
adc
fs
sbb
(bad)
cmp
nop
push
cmps
test
xor
sub
lods
imul
add
fs
sahf
in
data16
cmp
or
cmp
into
xchg
xor
lock
xchg
lds
or
cwde
adc
lahf
scas
addr16
loope
pop
daa
(bad)
repz
repz
je
stc
pop
inc
lock
and
adc
fst
xchg
repz
cmp
sahf
mov
and
push
jge
aam
out
hlt
mov
cld
xor
or
push
adc
loopne
out
fwait
outs
sub
cmps
jne
cmp
or
test
xchg
or
push
shl
aaa
mov
ss
xchg
mov
outs
sub
imul
mov
call
jg
ret
aas
cmove
dec
imul
test
inc
je
jmp
and
mov
push
clc
sub
dec
add
sbb
xor
(bad)
loopne
mov
gs
mov
hlt
pop
ds
cld
bound
dec
mov
stos
ins
int3
push
inc
data16
stc
and
xor
and
int3
(bad)
rcl
sub
sub
xlat
bound
adc
inc
adc
cs
adc
scas
out
pop
arpl
(bad)
aad
xlat
fnstenv
ins
pushf
lock
into
cmp
into
xchg
stos
or
jo
in
fadd
(bad)
or
test
sub
sbb
adc
and
fsubr
xchg
ins
jne
rcl
bound
jne
out
xchg
pusha
addr16
mov
mov
outs
push
stos
call
mov
lods
retf
cmps
adc
fstp
in
rcr
adc
adc
movs
call
dec
pop
sbb
lods
dec
imul
xchg
pop
rol
ins
push
movs
add
adc
call
jge
sub
jae
jmp
int3
push
fs
aas
mov
or
mov
cs
dec
sti
aad
mov
lock
fs
in
pusha
imul
jno
ret
sub
aad
cli
push
jge
mul
movs
cli
pop
ror
push
sbb
(bad)
cld
push
ret
cs
ins
enter
pop
pop
call
in
adc
inc
push
cld
mov
or
dec
cmp
adc
(bad)
sbb
mov
dec
push
test
jbe
not
out
or
push
add
in
push
enter
cdq
outs
lds
or
cmp
mov
adc
out
adc
pop
sub
dec
jmp
out
jns
ins
mov
inc
xor
sub
mov
xchg
ret
xlat
inc
xlat
inc
je
clc
jmp
sbb
adc
mov
adc
gs
jg
(bad)
inc
fist
cld
cmp
lods
repz
stc
fs
sub
rcl
inc
and
retf
pop
out
push
inc
test
rcr
arpl
sbb
(bad)
pop
pop
mov
cmp
scas
(bad)
mov
add
loope
push
dec
adc
pop
loop
aam
sbb
fnstenv
add
jge
sbb
stos
push
cld
sub
sbb
int
mov
dec
imul
fadd
out
xchg
jne
bound
xchg
adc
dec
mul
dec
ins
xor
fs
ret
data16
shl
pop
xchg
cmp
es
inc
fcom
adc
xchg
test
push
mov
jp
pop
iret
cmp
scas
idiv
dec
mov
jb
int
retf
aas
and
jns
cwde
push
bound
cdq
jmp
mov
mov
mov
loope
sets
inc
in
imul
idiv
mov
popf
dec
call
lods
push
(bad)
rcl
xchg
xor
out
and
shr
push
mov
(bad)
sub
addr16
mov
jmp
inc
cli
aam
sub
ret
retf
not
xor
imul
sub
std
in
lea
sahf
fbstp
test
nop
(bad)
je
mov
dec
dec
jb
jo
cli
jbe
jns
ins
cmp
in
aas
lea
shl
push
and
fmul
not
jb
in
rol
ss
add
and
rep
pop
fcomp
push
aam
mov
(bad)
push
xchg
scas
xchg
iret
push
add
push
push
dec
xchg
xor
ffreep
(bad)
sub
ja
dec
mov
inc
popf
ins
xor
dec
fiadd
or
cs
fmul
cmc
mov
mov
and
in
dec
cmp
movs
je
jb
sbb
jae
or
xchg
cmp
jl
repz
(bad)
repz
jmp
ja
and
jb
fs
inc
gs
xchg
test
aas
cmp
adc
jne
lods
imul
cdq
mov
pop
sbb
out
jnp
or
xchg
lea
fucomi
pop
inc
les
mov
mov
jle
xor
in
daa
inc
icebp
std
outs
outs
add
push
cmp
or
fwait
out
sbb
xor
shl
mov
mov
xor
fsub
xchg
ret
mov
pop
add
add
mov
add
cwde
loope
adc
cmc
inc
mov
scas
or
sbb
dec
loop
in
xchg
inc
fidivr
cmps
js
in
and
dec
das
push
(bad)
mov
jecxz
mov
cwde
xor
and
mov
dec
scas
js
(bad)
lahf
adc
adc
out
jnp
add
jmp
movs
adc
add
fstp
imul
fistp
jle
(bad)
sbb
icebp
ret
xchg
push
cld
leave
(bad)
fidivr
push
pop
fdivr
cmp
call
(bad)
push
push
in
cmp
push
or
pop
inc
stos
aaa
jl
lds
outs
sahf
xchg
dec
scas
sub
and
cmp
mov
pop
or
test
sub
and
xchg
sti
scas
push
push
mov
stos
pop
sbb
int
pop
xlat
retf
sub
sub
add
add
jbe
retf
jmp
js
push
call
cs
mov
imul
jbe
shl
ss
add
inc
test
es
cmp
jle
push
sahf
ins
cmp
bound
stc
push
xchg
call
repz
inc
push
sbb
push
jno
xor
jo
push
pop
out
mov
pop
mov
and
loop
jns
dec
repnz
adc
xor
daa
jmp
lods
inc
add
xchg
(bad)
enter
jmp
pop
retf
icebp
adc
cmp
jmp
jle
ja
out
xor
rol
in
gs
push
jno
mov
jne
repnz
popa
sub
and
xor
(bad)
pop
dec
aaa
adc
push
rcr
jl
mov
mov
or
xor
mov
mov
bound
and
and
jb
cmp
loope
imul
lock
mov
js
xor
cld
lds
jp
add
pop
add
mov
cmps
add
(bad)
lods
lahf
xor
pop
add
movs
pushf
xchg
sbb
movs
xor
mov
and
jo
or
add
mov
fimul
ja
retf
xor
icebp
sbb
les
mov
sbb
rol
scas
adc
jge
sub
inc
sbb
fmul
inc
adc
sbb
or
ds
or
pusha
out
lods
test
jle
js
and
xor
mov
inc
push
xchg
stc
mov
inc
jno
mov
lahf
adc
xchg
jp
jno
xchg
sbb
gs
dec
pusha
pop
cmp
jl
sbb
mov
xor
jecxz
out
add
cmc
ret
sub
clc
(bad)
jae
lock
cli
xchg
ds
loopne
sub
fnstenv
mov
mov
mov
jle
jge
fcmovb
ja
pop
repz
pop
mov
ret
call
ins
bound
adc
inc
adc
lock
sub
push
loop
std
and
cmp
pop
stc
scas
repnz
test
push
bswap
pop
inc
sbb
sahf
cmps
inc
pop
xor
(bad)
cld
arpl
shr
movs
les
mov
dec
mov
xor
push
scas
xchg
mov
mov
cmps
gs
jne
and
push
push
dec
pop
cs
and
mov
fsubr
cmp
addr16
das
popf
movs
js
xchg
nop
bound
dec
iret
test
xchg
pop
(bad)
cld
pop
enter
ror
loope
push
add
inc
out
pop
sub
scas
jne
dec
(bad)
arpl
add
dec
mov
adc
jns
cmp
pushf
dec
sub
sbb
jne
xor
clc
lahf
mov
bound
int
pop
push
and
or
xor
jae
cmps
pop
ja
pinsrw
add
in
push
fldcw
mov
(bad)
in
cmps
mov
xor
xor
sbb
lods
dec
fld
adc
out
loop
dec
xchg
dec
outs
xchg
test
mov
(bad)
imul
xchg
and
lods
aas
repz
sub
test
xor
inc
push
add
dec
in
xor
jo
clc
enter
scas
or
adc
inc
shr
or
in
cmp
rcr
movs
fsub
je
call
out
sub
sub
call
out
mov
sub
jno
mov
fwait
mov
sub
pusha
ss
pushf
xchg
imul
inc
dec
movs
push
jge
fs
adc
mov
mov
(bad)
jg
aas
add
jnp
int3
jae
mov
xor
repnz
iret
lahf
dec
and
xor
mov
add
xor
mov
leave
rcr
rcr
inc
or
fmul
fist
lock
shl
in
mov
scas
and
ret
ins
iret
inc
jmp
scas
fistp
mov
lods
mov
cmp
bound
(bad)
xchg
push
push
jp
push
pop
jo
cmp
test
int
(bad)
fstp
or
out
fimul
call
cmps
lahf
(bad)
and
mov
mov
push
(bad)
jae
out
adc
fcmovnu
lds
enter
popa
and
adc
stos
(bad)
leave
add
xchg
dec
in
jo
es
mov
addr16
mov
lods
xchg
gs
add
je
fisubr
mov
xchg
shr
nop
test
stos
aas
outs
and
aaa
fisub
jno
mov
xor
mov
fmul
xchg
das
sub
pushf
loop
pop
sub
sbb
std
sub
icebp
out
inc
xor
jg
popa
(bad)
pop
lea
ja
adc
jmp
push
xchg
out
jbe
(bad)
ins
gs
fmul
adc
add
add
mov
mov
add
rcl
push
mov
mov
add
sbb
dec
sbb
jp
push
fmul
sub
aas
sbb
inc
jle
cmps
(bad)
sbb
xor
movzx
lock
push
rcr
xor
mov
into
out
es
out
or
test
cmp
xor
mov
jo
(bad)
hlt
cld
mul
fdiv
mov
fs
outs
ror
jle
cdq
pop
sahf
sti
xchg
xor
movs
adc
jmp
scas
jno
sub
push
push
adc
xchg
and
add
sub
ficom
aam
mov
mov
jo
push
jge
jae
retf
pop
cmp
xor
add
mov
ret
mov
ss
stos
sbb
mov
movs
push
out
sar
jne
xor
mov
dec
addr16
leave
mov
mov
(bad)
push
xor
xor
cli
ins
dec
iret
sub
clc
xchg
sbb
push
ja
rcr
mov
dec
outs
mov
lock
movs
and
movs
jb
pop
js
shl
mov
fld
ror
xchg
aad
mov
(bad)
dec
pop
sbb
daa
(bad)
fmulp
jae
push
(bad)
lds
push
test
lods
test
std
mov
xlat
adc
loop
push
or
scas
ins
sub
daa
mov
xor
pop
out
daa
call
fstp
iret
jmp
adc
aam
cs
cmc
xchg
sbb
and
push
mov
lods
ds
mov
push
mov
stos
cwde
mov
icebp
inc
cmp
sub
dec
pushf
pop
xor
sub
hlt
mov
pushw
inc
aam
push
enter
add
jb
popa
push
data16
aas
xchg
sahf
(bad)
inc
fnstenv
and
mov
into
es
fsubr
xlat
push
mov
adc
cdq
sub
adc
xlat
in
rcl
cmp
adc
add
mov
in
hlt
add
call
jge
mov
scas
jecxz
xchg
mov
lods
mov
icebp
inc
int3
pop
pop
mov
fxch
mov
mov
sub
xchg
dec
inc
rcr
daa
popa
call
mov
cli
(bad)
in
ds
shl
push
sar
fmul
iret
aas
adc
inc
pushf
jg
push
cli
lock
ffreep
jmp
aas
sub
gs
sbb
mov
or
pop
jge
or
mov
(bad)
(bad)
adc
mov
ror
mul
scas
jae
cmps
popa
stc
inc
push
in
add
sbb
arpl
mov
lods
lahf
in
sub
mov
xchg
xchg
sub
ja
mov
je
mov
jle
fdiv
cmp
sbb
jecxz
test
aad
cmp
iret
or
inc
jg
(bad)
pop
sub
push
add
outs
out
add
retf
fdiv
movq
xor
pop
test
sub
clc
lods
test
es
les
(bad)
in
imul
frstor
jns
xor
push
xchg
arpl
sub
xor
aad
aad
movs
push
js
bound
jecxz
adc
or
sub
add
or
xchg
pushf
into
cli
fbstp
dec
ins
fs
popf
adc
push
mov
enter
add
ror
xchg
aas
sbb
mov
ret
test
jb
sbb
into
cmps
stc
imul
xlat
lods
ds
ret
lds
pusha
xchg
sbb
dec
(bad)
dec
inc
jb
aaa
imul
cli
mov
sbb
scas
pop
lock
jle
inc
outs
fild
jno
lods
push
add
pop
mov
mov
mov
fcmovbe
(bad)
mov
cmc
out
mov
mov
adc
mov
add
and
jmp
mov
test
sbb
mov
test
jns
xchg
adc
xchg
xchg
push
and
jnp
sbb
icebp
push
lock
pop
or
outs
mov
repz
pop
addr16
dec
inc
sbb
push
pop
push
inc
xor
pop
addr16
and
pop
and
nop
inc
stos
aad
mov
or
add
fwait
popa
dec
xor
ja
jge
mov
aad
bound
mov
js
pop
mov
or
je
repz
sti
dec
inc
mov
movs
mov
or
jae
xor
aas
enter
mov
loope
pop
and
and
or
jmp
retf
lahf
inc
int
mov
imul
lea
mov
leave
mov
push
es
cmp
and
clc
pusha
jmp
dec
sbb
pop
xchg
or
test
inc
push
jbe
mov
into
push
pop
mov
xor
loope
fsub
mov
mov
ins
in
pop
fimul
div
daa
push
xor
mov
sub
daa
enter
push
clc
cli
xor
daa
mov
and
push
ficomp
adc
sbb
cmps
sub
movs
call
pusha
push
xor
add
add
outs
mov
adc
add
aad
(bad)
jecxz
mov
imul
add
scas
jl
fs
in
or
add
xor
push
inc
(bad)
out
sbb
add
add
or
ret
mov
daa
cmp
shl
dec
sbb
push
pop
shl
ret
sbb
mov
test
cmp
data16
fistp
and
jno
push
cmps
lock
mov
(bad)
fadd
or
dec
cmp
dec
sub
call
rep
push
xchg
or
xchg
mov
inc
mov
movs
aas
in
inc
push
dec
mov
xor
add
pop
test
adc
inc
out
or
push
dec
or
loop
fwait
pop
mov
in
push
push
ja
dec
je
xchg
mov
pop
adc
in
imul
jmp
xlat
xchg
or
xor
push
jmp
lods
fcomp
inc
pop
adc
test
sbb
in
popf
scas
mov
add
stc
shl
mov
sbb
ss
fiadd
mov
pop
(bad)
mov
or
mov
mov
repnz
jge
sar
inc
pop
call
push
add
int3
mov
xor
jg
or
(bad)
retf
std
hlt
ins
and
push
xchg
stos
pop
xchg
mov
dec
dec
xlat
and
cli
adc
adc
jl
sahf
sub
add
ret
mov
gs
cmps
imul
fild
sub
ja
ret
lea
jmpw
mov
popf
std
adc
out
dec
popa
push
call
jb
adc
sbb
jnp
inc
bound
inc
cmps
jge
add
pop
sbb
push
lds
sti
pusha
fld
je
stos
inc
push
jbe
fisttp
pop
jge
mov
cdq
or
mov
lods
rcr
mov
inc
adc
inc
push
jge
mov
in
nop
adc
fincstp
adc
(bad)
fisttp
mov
push
lods
add
shr
pop
imul
mov
in
jb
or
aaa
xor
mov
jmp
or
sub
mov
shl
adc
rol
out
int
hlt
add
dec
push
lods
cmp
retf
cmp
mov
jp
in
or
sbb
add
cwde
mov
pop
lods
icebp
xor
add
shr
xor
sub
sahf
sti
and
ret
mov
ror
pop
and
push
xor
stc
test
out
in
sbb
inc
xor
or
mov
test
push
fs
test
lock
mov
jnp
pop
imul
ficom
cmc
je
adc
fwait
xlat
xor
clc
adc
dec
inc
mov
ja
leave
cli
cs
jo
in
outs
pop
inc
jmp
movs
cmp
add
sbb
cwde
jl
popa
fwait
aas
(bad)
mov
imul
popf
adc
sbb
or
push
jmp
fsub
xchg
fst
jmp
or
xor
xchg
cmc
xlat
mov
fsubr
mov
pop
out
add
cmp
push
mov
push
sub
repnz
fwait
xchg
xor
ins
ss
aas
push
jmp
push
mov
sub
jnp
pop
cld
jne
int3
pop
add
icebp
imul
rep
sbb
cmp
out
sub
sbb
clc
shl
es
sbb
test
or
sub
jo
shr
pushf
cmp
mov
inc
popf
arpl
out
adc
mov
jnp
push
(bad)
mov
cmp
jecxz
xor
fcom
mov
jle
(bad)
sbb
cmps
sbb
(bad)
cli
popf
mov
xor
mov
dec
jmp
mov
dec
cmp
mov
dec
push
int
sbb
imul
sub
movs
lods
sub
ja
mov
ss
xchg
(bad)
std
cmp
xchg
popf
mov
(bad)
loopne
push
into
add
sbb
repnz
mov
push
imul
dec
mov
scas
push
xchg
(bad)
or
jle
test
loope
push
nop
loopne
push
push
cmp
cmp
jns
jp
ja
cmp
in
or
xchg
mov
xchg
ins
pop
sub
xchg
add
icebp
cmp
add
cmp
or
fcomp
adc
dec
jb
sub
sbb
lods
shl
jnp
test
call
xor
(bad)
pusha
adc
mov
add
mov
div
and
(bad)
adc
popa
jns
xor
xchg
fdivr
sbb
push
xor
movmskps
add
js
mov
out
and
call
cdq
rcr
shl
mul
sbb
movs
stos
mov
mov
scas
loopne
movs
test
adc
sbb
inc
jl
jns
jbe
pop
shl
leave
mov
sub
or
jecxz
lea
test
icebp
add
cmc
sbb
cmc
jns
push
adc
sub
stos
mov
js
in
arpl
mul
into
sar
inc
sbb
hlt
int3
push
mov
fs
mov
sub
scas
sub
sti
popa
(bad)
out
mov
adc
mov
inc
jle
mov
mov
xchg
pop
and
mov
imul
xchg
test
fstp
xchg
or
xchg
arpl
std
mov
sub
mov
test
in
add
xchg
sub
scas
inc
dec
sbb
and
cwde
inc
cli
jae
dec
call
dec
sub
in
arpl
pop
push
mov
adc
dec
push
enter
add
movs
rol
or
cmp
(bad)
sbb
xor
jl
ja
dec
not
iret
pushw
cmp
jmp
dec
rcl
dec
std
sar
es
add
add
push
push
mov
ja
movs
ds
out
in
ror
mov
mov
clc
out
push
cmp
inc
dec
jp
lods
dec
jae
imul
cmp
jmp
pop
xchg
mov
hlt
int
adc
mov
cmp
scas
loopne
jbe
add
sub
inc
push
sti
dec
cmp
hlt
mov
call
mov
repz
outs
int
xor
in
mov
(bad)
in
icebp
push
in
jb
xchg
jb
mov
fdiv
and
ret
imul
(bad)
ins
adc
fidivr
or
add
xlat
sahf
cdq
lahf
push
sub
dec
test
or
and
or
mov
mov
inc
pushf
adc
xor
add
sub
mov
mov
out
dec
in
repnz
jp
in
jmp
in
pop
hlt
nop
retf
mov
jle
sub
in
(bad)
sbb
lea
xchg
pop
push
push
mov
and
mov
test
aas
(bad)
shl
test
sub
gs
(bad)
push
cmps
cwde
ins
ret
xchg
pop
or
or
or
scas
ret
fisub
xchg
clc
(bad)
adc
dec
push
fucomp
or
xor
xor
and
mov
inc
jbe
stc
push
leave
dec
scas
push
enter
and
mov
jle
outs
daa
xchg
mov
xor
or
repnz
ds
jmp
push
jl
fcmovu
xchg
or
fld
mov
pop
xchg
inc
cld
loop
add
xor
jae
lds
and
inc
sar
(bad)
jecxz
lea
mov
pmaddwd
push
in
arpl
das
pcmpgtd
sbb
ror
or
push
out
cli
mov
cmp
sbb
pop
jnp
jmp
int3
test
dec
push
or
sub
sbb
mov
ja
xor
shr
fcom
sbb
neg
fistp
(bad)
retf
push
adc
jmp
sub
sub
sub
ret
loopne
dec
fmul
imul
inc
sub
cmp
push
mov
cli
mov
xlat
jmp
mov
(bad)
out
add
mov
cmp
adc
sub
nop
mov
mov
int3
pop
int
fucom
data16
retf
cmps
pushf
cld
push
jecxz
cs
mov
mov
sbb
xchg
push
add
push
inc
movs
mov
and
inc
xchg
lahf
mov
test
fnsave
fmul
sub
add
(bad)
sti
sbb
(bad)
test
jecxz
mov
test
jmp
push
mov
scas
arpl
jl
adc
xchg
add
ds
add
sub
repz
push
out
cmp
push
retf
mov
imul
mov
call
add
mov
mov
sub
push
(bad)
hlt
mov
ss
pop
adc
add
sbb
xchg
adc
dec
test
dec
out
pop
push
jns
cwde
xchg
js
push
jmp
out
iret
pop
out
sbb
das
icebp
dec
pop
es
cmc
sbb
xchg
sub
pop
fld
mov
cmp
pop
dec
sahf
inc
push
repz
sbb
sbb
mov
mov
ror
jnp
enter
jecxz
inc
xor
xchg
(bad)
pop
mov
daa
push
les
add
into
sbb
je
push
into
aaa
ret
mov
loope
outs
fwait
mov
sub
pop
inc
(bad)
sbb
mov
xlat
sbb
mov
ja
push
mov
or
movs
cmp
ins
shr
loope
xchg
retf
inc
popf
aad
fmul
push
int3
fsub
jge
aaa
jno
mov
dec
popf
xchg
or
inc
mov
out
dec
push
add
ja
or
adc
sti
fld
movs
test
gs
stc
adc
xchg
jg
sti
call
mov
mov
cmps
leave
jns
dec
int
cmp
push
cmps
lods
aaa
aas
cmp
ror
stos
je
test
ins
mov
out
loopne
outs
dec
adc
mov
mov
in
xor
jo
or
sub
or
lock
pop
in
test
and
xchg
and
call
or
push
mov
fbstp
aas
sbb
mov
es
jmp
loop
or
in
ins
and
pop
xchg
mov
mov
loope
xchg
mov
or
dec
mov
repz
mov
pop
out
fs
cli
fcomp
inc
jbe
fdivr
fsub
sub
dec
je
aaa
ins
repz
data16
int
sbb
repnz
adc
and
mov
imul
rcr
cli
popa
jp
enter
lds
sbb
arpl
inc
aam
adc
mov
daa
jne
pop
cs
leave
and
adc
xor
mov
aam
in
inc
ss
add
cs
lods
int
inc
lock
lds
inc
cmp
xchg
scas
ins
xchg
arpl
inc
imul
stos
fistp
push
xchg
cwde
outs
push
int
jo
out
add
cld
dec
or
inc
shr
cmps
cli
mov
nop
sub
out
outs
retf
or
fcmovnbe
add
and
mov
imul
sbb
hlt
or
mov
dec
push
mov
jne
fwait
jbe
jg
movs
add
(bad)
sti
test
call
mov
pushf
das
and
cmp
lds
cmp
push
mov
mov
loop
push
xchg
test
xor
push
sbb
movs
rcr
inc
add
hlt
jp
pop
icebp
lds
test
push
xor
fwait
dec
int3
jp
popf
dec
mov
cmps
or
in
or
cmp
scas
mov
and
push
jne
aad
cmp
sub
jl
mov
cld
jno
ins
cmp
jns
cs
dec
imul
dec
pop
pop
push
test
sub
xchg
jg
in
scas
or
xor
je
(bad)
mov
mov
pop
imul
push
mov
gs
cmp
call
xchg
fnsave
pop
or
jge
cmps
hlt
(bad)
cmc
imul
ss
out
pop
dec
(bad)
mov
dec
dec
mov
test
jge
jne
xchg
aaa
outs
cld
stc
stos
mov
push
scas
add
jb
jns
mov
dec
xor
mov
neg
cld
dec
add
and
(bad)
sub
mov
dec
mov
pop
add
ss
test
lock
int3
sub
ins
ins
loop
xor
stc
scas
jne
daa
pusha
ficomp
adc
push
repz
mov
mov
mov
aam
pop
repz
pop
xlat
cmps
sbb
jbe
and
test
jno
js
addr16
mov
dec
xor
push
ret
jae
add
sub
or
jne
xchg
dec
inc
mov
imul
inc
xor
imul
call
int3
jge
add
rcr
fst
mov
jge
leave
std
les
lock
xor
mov
xchg
movs
sub
add
movs
xchg
neg
sbb
in
ds
lods
pop
dec
sbb
jmp
inc
push
mov
add
into
pop
mov
in
xor
inc
(bad)
out
(bad)
(bad)
repnz
in
retf
mov
push
inc
sub
(bad)
inc
ins
cli
mov
pop
adc
mov
xchg
cmps
push
xor
or
push
mov
fcmovb
jns
outs
xor
movs
xchg
mov
and
cmps
xchg
adc
popa
sbb
mov
push
pop
mov
es
cmp
shl
xor
pop
mov
jno
xchg
jns
mov
(bad)
sbb
pushf
or
ror
jnp
pop
div
and
imul
daa
mov
push
add
xchg
push
outs
scas
inc
cwde
iret
aad
add
movs
popa
push
pop
arpl
add
cmp
movs
add
adc
loopne
cmps
push
or
jno
jmp
or
std
leave
mov
mov
arpl
or
int3
stc
or
and
mov
test
mov
loopne
sahf
jp
pop
in
xchg
xor
xor
dec
sar
xor
or
ret
int3
mov
sbb
not
fsub
xor
push
popf
xchg
out
cmp
xchg
stc
cmp
sbb
outs
ds
mov
out
fsin
mov
repz
sub
or
fsub
stos
sti
ret
pusha
cmp
out
daa
inc
retf
xchg
jg
pop
out
pop
outs
or
(bad)
ret
push
jno
xchg
lock
and
gs
jge
and
in
jg
push
nop
and
lds
loope
stos
out
xor
hlt
pop
push
jnp
cmp
aas
xchg
rol
xchg
or
aaa
js
mov
adc
sbb
mov
pop
mov
hlt
mov
out
sbb
mov
mov
push
mov
loop
fstp
ins
arpl
xor
ds
ins
pop
cmp
lds
(bad)
cmc
jns
inc
and
pop
mov
xor
xchg
push
cli
push
and
into
mov
jl
xor
mov
jge
scas
add
call
mul
icebp
push
(bad)
cmp
pop
jmp
mov
xchg
cmps
rol
push
mov
pop
push
sub
push
jp
cmps
dec
push
dec
jmp
std
(bad)
test
mov
mov
aad
cmps
dec
cmovne
mov
or
push
js
cmps
mov
xchg
popa
adc
loope
add
pop
xchg
inc
je
and
xor
stos
mov
rol
sub
mov
ror
sbb
addr16
daa
cmp
jge
add
aas
jno
aaa
in
add
(bad)
mov
iret
hlt
adc
cwde
stos
clc
(bad)
popf
pop
aad
std
xlat
mov
retf
xchg
push
dec
sbb
std
ret
test
(bad)
mov
int
jns
lahf
dec
xchg
cmp
mov
pop
jmp
and
outs
push
mov
movs
mov
and
jl
enter
dec
mov
sub
dec
aas
jmp
in
cmpxchg
add
or
addr16
and
cs
shl
imul
sbb
test
jo
fistp
adc
jle
sbb
ss
and
mov
shl
pop
clc
pop
cmp
cmp
mov
outs
ret
mov
cmp
hlt
sbb
test
inc
ficom
mov
add
aad
push
and
add
mov
jae
movs
data16
fcmovnu
inc
daa
jle
pop
into
xor
jne
sbb
pop
inc
outs
popf
sbb
push
iret
mov
scas
xor
cmp
mov
(bad)
(bad)
xor
push
adc
pop
mov
(bad)
cmp
popf
push
(bad)
mov
sbb
ficomp
mov
rcl
adc
sbb
clc
jecxz
xor
xchg
test
fstp
ss
mov
push
lahf
jne
sub
gs
mov
repz
pop
je
pop
or
imul
pop
mov
fwait
lods
push
pop
xor
mov
ret
arpl
fdiv
or
jns
xchg
inc
out
sub
shr
jns
retf
inc
adc
aam
mov
jo
ds
jl
fdivp
mov
adc
dec
jg
inc
add
out
(bad)
aas
pop
mov
cmps
(bad)
jmp
mov
pop
jp
inc
fisttp
xor
int3
pop
dec
lea
fs
add
cmc
sub
push
mov
xor
gs
jo
retf
xchg
mov
mov
ret
daa
push
push
iret
pop
rcr
in
leave
das
push
ja
and
retf
mov
es
je
mov
test
fld
icebp
or
xchg
repz
sbb
mov
pop
scas
retf
ror
sub
push
push
addr16
mov
push
sub
pop
sub
jb
add
mov
sbb
jo
sub
xor
mov
pop
fld
fwait
xor
int3
sbb
pop
fdivr
clc
icebp
movs
call
mov
aad
neg
cmp
xor
push
shl
mov
xchg
xchg
inc
out
mov
enter
mov
cmp
pushf
cdq
daa
es
adc
lock
repz
arpl
jmp
popf
xchg
xchg
add
adc
mov
aad
mov
and
cmp
fistp
or
adc
sbb
sbb
sub
int
lock
lods
leave
rol
lock
repnz
pop
int3
dec
xchg
call
scas
retf
xor
mov
scas
inc
test
push
mov
sar
jmp
adc
jge
inc
ds
out
or
into
push
and
jle
ins
sahf
push
pop
sbb
sbb
sti
aam
adc
push
addr16
(bad)
lods
mov
(bad)
sub
sahf
pop
adc
jo
push
std
rep
js
fadd
pop
ja
lds
jb
pop
jbe
lahf
nop
out
push
arpl
mov
xchg
mov
add
outs
out
sbb
jne
aaa
(bad)
jmp
add
lods
adc
lahf
mov
aas
enter
and
jl
imul
data16
call
cmp
js
inc
cmp
aaa
cmps
hlt
and
bound
int
jecxz
sbb
outs
sub
fs
test
pop
inc
test
jecxz
mov
mov
pop
and
xchg
or
std
cmp
sahf
call
(bad)
cmp
push
retf
jo
mov
cli
cmp
(bad)
dec
ret
outs
push
lds
stc
inc
ud1
sbb
stc
retf
add
push
mov
add
inc
out
jmp
jg
test
adc
test
aam
test
ret
pop
push
xor
push
out
xchg
out
pop
dec
ret
shr
repz
add
test
(bad)
fist
jge
dec
js
push
xchg
xchg
xor
mov
push
and
(bad)
and
bswap
xchg
ds
(bad)
out
bound
stc
stos
adc
mov
mov
jb
inc
ret
cmp
arpl
xchg
dec
shl
jp
mov
push
cmp
lea
mov
stc
in
mov
in
dec
adc
xor
arpl
lods
and
mov
jne
pusha
and
adc
push
cmps
pushf
xor
int
xlat
add
cmps
and
shl
push
ds
out
push
xor
add
mov
enter
arpl
int
pop
jns
aas
call
or
call
pop
cmp
stc
sbb
je
mov
push
jae
sbb
fwait
mov
(bad)
xchg
add
push
mov
and
into
jmp
or
rol
fcomi
fisttp
xor
add
add
leave
stc
or
adc
int3
shr
cmps
aaa
(bad)
int
cli
jb
shl
mov
sbb
les
mov
sbb
imul
jnp
dec
mov
push
add
addr16
cmps
ja
mov
jns
test
mov
scas
push
scas
dec
dec
push
push
xchg
pop
mov
mov
scas
cs
mov
ins
jne
pop
outs
(bad)
into
enter
pop
into
or
rol
es
out
fsub
loop
jmp
(bad)
ds
cli
and
call
std
xchg
dec
jno
mov
xor
fld
mov
push
mov
dec
or
jb
adc
and
mov
loop
xchg
ss
enter
jo
icebp
addr16
jmp
sbb
xchg
dec
adc
(bad)
and
div
sub
stos
imul
out
cmp
sub
jo
daa
pop
test
fwait
or
pop
push
aad
movs
or
inc
mov
icebp
xor
ret
add
mov
nop
scas
push
inc
aaa
adc
loop
movs
fstp
sti
push
fsubr
pushf
xor
ds
dec
pop
in
jno
jle
ja
mov
mov
dec
mov
inc
push
add
adc
pop
out
mov
push
(bad)
jno
and
xor
shr
pop
mov
pop
xchg
xor
push
jl
pop
sub
adc
jg
cmp
mov
inc
and
pop
fisub
lahf
inc
into
movs
fiadd
ins
xor
leave
and
push
fdivp
and
jmp
cmp
mov
mov
shl
sub
(bad)
cwde
mov
adc
das
cmp
aam
rol
in
pop
push
push
cs
cmp
add
retf
or
mov
int3
ja
icebp
stc
push
lods
int3
jecxz
jmp
ins
push
cli
lea
xor
imul
test
into
cmps
xchg
jge
adc
xchg
pop
lahf
inc
add
fld
out
push
ds
jle
xchg
std
and
inc
jmp
mov
and
punpcklbw
adc
xchg
sahf
test
sbb
add
imul
test
or
js
pop
inc
mov
test
or
add
sbb
adc
imul
test
ins
jmp
mov
in
push
cmp
pop
jbe
popa
xor
repz
fld
arpl
cmp
mov
or
mov
aas
mov
and
inc
fld
std
push
add
push
out
inc
pop
push
pop
sub
ins
or
dec
jns
xchg
sbb
adc
fldenv
pop
cmps
jb
jnp
fldenv
jecxz
dec
pop
popf
repz
aad
and
sbb
clc
rol
jno
mov
sbb
mov
aas
into
cmc
adc
hlt
out
add
das
into
jbe
add
xchg
cmp
xchg
cwde
jmp
in
xor
mov
scas
pushf
inc
mov
xor
fsubr
mov
shl
pop
sbb
jl
jae
sahf
loop
sti
imul
and
pusha
add
loopne
mov
mov
or
fstp
xor
push
jno
jmp
mov
leave
xor
repz
mov
arpl
fwait
jl
xchg
jmp
aad
das
inc
push
call
xchg
arpl
jbe
jle
ret
fsubr
arpl
mov
dec
iret
subps
fnstcw
adc
sub
jae
mov
(bad)
movs
test
sbb
dec
push
fst
and
xor
(bad)
mov
cmp
push
call
fdivr
lods
outs
xchg
adc
dec
leave
aad
sbb
pop
mov
test
fdiv
mov
push
out
add
bound
xor
out
pop
imul
sbb
push
(bad)
pop
les
pop
mov
adc
mov
jb
mov
jo
sbb
lods
xor
inc
iret
ins
inc
movs
lahf
adc
clc
lea
inc
mov
je
call
outs
(bad)
jno
cs
push
fst
test
cmps
adc
dec
sbb
out
cmp
mov
jp
adc
inc
mov
cmp
test
in
push
mov
adc
push
push
push
jae
adc
push
add
push
dec
(bad)
cmp
cmps
jnp
add
mov
(bad)
jecxz
cwde
pop
sbb
xchg
(bad)
and
shr
sbb
cmps
and
fnstenv
mov
push
jno
inc
lds
mov
xor
push
ret
test
stos
cli
int3
clc
mov
into
test
lock
lock
xchg
data16
jge
enter
inc
fcomp
cmp
popa
cmc
adc
jecxz
push
inc
cmps
xor
mov
test
imul
pop
lea
dec
inc
dec
sbb
mov
cmp
xor
dec
and
stos
jle
push
dec
sub
adc
and
movs
pop
movs
ret
addr16
jmp
aad
mov
repnz
push
inc
in
jge
pop
jo
inc
cmp
sbb
cs
ror
mov
xor
add
retf
fisttp
mov
in
ins
xchg
lods
sbb
iret
cld
icebp
xor
fdivr
jmp
jecxz
test
addr16
repz
fst
test
and
les
sbb
xchg
imul
jns
inc
and
inc
mov
in
stc
push
mov
dec
aas
and
mov
cmp
inc
bound
les
xchg
leave
mov
daa
mov
sub
aam
or
jmp
jo
xor
pop
mov
adc
xor
in
call
cld
mov
adc
sub
inc
add
je
fwait
pop
cmp
mov
jne
(bad)
imul
sub
std
cmp
call
mov
cli
loop
out
dec
dec
cmp
sub
test
jle
retf
repnz
test
push
jge
inc
mov
xlat
sahf
imul
popf
jbe
adc
std
jp
push
mov
and
mov
cmp
ja
push
les
jnp
add
movs
and
into
mov
loop
sub
ins
mov
adc
outs
ficomp
inc
pop
xor
ret
xchg
fsub
inc
jle
pusha
push
push
scas
adc
pushf
stc
aam
mov
fdivr
or
pop
mov
or
loopne
mov
stc
ror
(bad)
xor
fistp
popa
pop
fwait
sahf
dec
test
xchg
cmc
jecxz
movs
test
sub
stc
movs
jae
leave
repnz
jae
add
sub
dec
xchg
or
pop
lea
sub
enter
mov
mov
pop
gs
mov
adc
mov
out
mov
addr16
mov
inc
cmp
xchg
(bad)
in
dec
jb
popa
add
movs
aas
mov
jne
jbe
fs
test
mov
data16
pop
(bad)
rcr
std
pop
cli
ret
xchg
and
fwait
test
jbe
jns
add
sub
inc
clc
mov
jl
add
or
mov
js
mov
int3
les
cwde
dec
mov
push
mov
rcr
pop
dec
adc
or
gs
xchg
nop
dec
jg
push
arpl
dec
push
test
mov
lahf
les
xlat
in
call
jo
sub
cmc
in
mul
ins
inc
mov
ja
adc
inc
mov
fs
(bad)
es
add
adc
rcr
call
ss
and
addr16
cwde
icebp
pop
test
outs
fsub
fnsave
lods
sbb
in
cdq
fcom
cmp
and
fmulp
retf
or
xor
pop
out
or
mov
sbb
jnp
push
dec
sbb
jge
xchg
push
xchg
adc
ret
test
xchg
inc
pushf
lock
push
leave
icebp
mov
test
std
mov
scas
cmp
push
jne
jnp
aad
ja
mov
movs
add
ins
and
add
jae
xchg
fsubr
xchg
cmp
ss
adc
movs
xchg
fsub
add
scas
mov
mov
clc
adc
(bad)
push
mov
or
jg
dec
cmp
dec
push
sub
mov
rol
or
push
add
mov
sti
sub
add
and
mov
ins
adc
rol
mov
mov
jnp
das
stos
sbb
push
jle
dec
rol
dec
mov
push
fistp
mov
ins
mov
mov
cmp
xor
call
aaa
push
dec
push
adc
rol
aad
mov
jmp
mov
pop
mov
ins
std
cmp
inc
in
xchg
xchg
mov
jp
mov
add
xor
outs
jbe
xor
and
jmp
add
ror
and
lods
nop
xchg
jne
aaa
mov
retf
ins
ins
dec
iret
fcom
popf
push
outs
imul
pop
jae
push
test
and
cmp
adc
dec
or
dec
sbb
dec
icebp
in
imul
dec
in
cmp
popa
jmp
out
or
jp
xchg
jns
cmp
scas
mov
adc
sub
(bad)
hlt
jne
int3
fcmove
data16
lods
sbb
inc
arpl
jns
ja
ins
push
xor
scas
gs
shl
ret
pop
jne
or
out
xchg
adc
sbb
and
push
(bad)
out
jae
sbb
inc
dec
addr16
mov
or
dec
jmp
iret
push
sbb
stos
add
test
sub
xor
popf
ja
sti
mov
retf
jbe
bound
inc
aad
je
sahf
ret
xchg
mov
xchg
mov
out
out
sbb
xor
shr
movs
lea
ret
aam
cmp
mov
pop
push
call
adc
jmp
xlat
add
sub
out
mov
cmc
mov
fmul
or
lds
sbb
dec
mov
lods
stos
repnz
popa
sahf
pop
jg
out
std
pop
inc
scas
iret
call
retf
mov
mov
mov
inc
js
and
mov
add
or
sub
retf
aad
(bad)
adc
dec
xchg
cmps
and
int
cmp
jge
push
mov
pop
out
cmp
clc
addr16
stos
cli
add
cmp
xor
loope
sar
out
pop
scas
xchg
repz
cmp
dec
sub
jl
sbb
ja
dec
iret
xlat
fsubr
push
subps
xlat
jno
xchg
push
adc
inc
imul
popa
inc
das
inc
mov
mov
push
addr16
cmp
or
int
mov
mov
dec
and
enter
adc
pop
jge
add
pushf
dec
cmp
mov
retf
mov
shl
sbb
test
addr16
lahf
pop
adc
lock
out
repz
ficomp
fistp
ficomp
ret
cmp
iret
movs
lods
xlat
lahf
mov
cmp
lock
les
add
call
or
ss
mov
lea
std
sub
sub
mov
fs
xchg
lods
mov
adc
cdq
xor
push
sbb
push
pop
or
mov
push
push
or
fdivp
lea
dec
lea
push
push
and
adc
fwait
or
sub
dec
fidiv
pop
mov
mov
push
arpl
int
push
(bad)
and
jns
add
arpl
push
or
fsubr
cmc
mov
mov
sbb
(bad)
xchg
xchg
dec
mov
stc
rol
lods
push
push
call
push
ja
mov
lds
fisubr
jg
pop
inc
adc
outs
out
sar
jg
inc
pop
add
dec
pop
jg
jp
test
push
leave
xor
ficomp
bound
sub
mov
xor
dec
jmp
sbb
jb
xchg
mov
and
jo
xor
cmp
movntq
retf
xchg
add
mov
in
pop
mov
cwde
mov
and
push
mov
retf
jmp
cmp
icebp
inc
dec
fs
jmp
lods
inc
xor
xchg
xchg
retf
jns
xchg
ror
test
or
imul
push
xchg
cmp
adc
call
dec
imul
xchg
into
and
(bad)
cmp
add
push
repz
mov
call
mov
ret
test
pop
mov
adc
aam
inc
(bad)
lock
push
not
jnp
xor
inc
loopne
adc
adc
pop
pop
adc
in
pop
neg
mov
sub
pop
jns
js
xor
push
mov
mov
rcr
fs
(bad)
push
sbb
adc
and
sti
rcr
stos
jmp
or
mov
jecxz
mov
adc
pushf
fimul
retf
sbb
fldenv
sti
push
dec
popf
icebp
and
iret
mov
push
mov
lock
inc
ss
ret
(bad)
stc
cmp
mov
push
xchg
aas
adc
movs
mov
mov
push
out
ins
adc
call
push
and
imul
and
mov
dec
dec
xchg
(bad)
and
(bad)
fist
je
ret
cmps
ins
jnp
jp
je
fs
(bad)
hlt
mov
and
shl
movs
repz
xchg
(bad)
push
setle
mov
cmc
or
sbb
mov
ds
scas
call
fsub
push
cdq
jns
inc
sub
push
shl
jnp
lods
jae
shl
scas
dec
mov
or
mov
add
pushf
leave
push
mov
pop
pop
adc
(bad)
sub
and
add
shl
fs
bound
sets
jmp
fnstenv
jno
ror
jge
arpl
in
test
cmp
inc
mov
inc
xor
push
or
into
icebp
cmp
mov
in
aaa
int
pop
out
call
xchg
sahf
gs
aaa
xchg
pop
(bad)
ficomp
add
xor
mov
arpl
in
lods
push
mov
sbb
mov
sub
cmps
xor
shr
xchg
lods
cmps
adc
mov
mov
push
mov
jecxz
add
push
push
push
adc
sbb
push
sbb
inc
rol
lea
mov
sbb
outs
ds
lods
mov
fild
movs
test
sti
in
xchg
mov
fs
jge
sar
movs
scas
xor
jge
aas
mov
popa
fnstsw
xor
and
cwde
out
xlat
movs
inc
repnz
inc
push
push
jb
sub
aaa
jb
push
xor
retf
(bad)
int3
push
xor
dec
leave
xor
cmc
fnstenv
mov
popf
sub
or
push
int
mov
adc
mov
add
fwait
movs
retf
loope
sub
int
cdq
push
dec
xor
and
dec
fiadd
xchg
mov
(bad)
jne
nop
mov
pop
and
cwde
or
(bad)
mov
or
mul
bound
loopne
int3
(bad)
cmc
mov
adc
fld
cmp
sbb
adc
mov
pop
ret
movs
push
and
mov
jg
or
hlt
jg
mov
add
jns
adc
dec
mov
xchg
aaa
out
clc
(bad)
cmp
test
mov
add
dec
dec
inc
fild
add
imul
scas
std
or
inc
(bad)
push
pop
mov
sub
test
movs
xchg
pop
and
adc
imul
mov
xchg
ja
lahf
sar
(bad)
mov
repz
xchg
mov
mov
xlat
add
loop
imul
xchg
xchg
(bad)
push
ins
rcr
inc
or
sub
adc
repz
jnp
mov
out
jle
cmp
aas
dec
pop
dec
xor
daa
stc
dec
nop
ins
imul
pop
fnstsw
sub
or
stos
test
and
mov
mov
pop
popa
sbb
adc
ror
dec
loope
enter
push
retf
call
mov
dec
jp
lock
lahf
nop
dec
pop
xlat
and
leave
lea
and
pop
cld
sahf
or
in
scas
pop
lods
aas
add
add
dec
rcr
add
retf
mov
sub
mov
pusha
cmp
call
cmps
rcr
loope
das
fld
call
mov
cwde
mov
jo
mov
cmp
mov
lahf
(bad)
shr
cwde
(bad)
or
sub
sub
in
sub
cwde
sbb
int
cmp
xor
fbld
mov
push
arpl
push
dec
push
pop
loop
dec
xor
pop
inc
(bad)
xchg
in
cwde
inc
adc
pop
sub
pop
(bad)
nop
mov
out
aaa
pop
out
xor
aad
pop
sbb
(bad)
xor
rcr
stc
push
mov
test
pop
sub
cli
adc
hlt
mov
in
sbb
mov
popf
sub
pushf
mov
movnti
jmp
jb
mov
adc
cs
iret
loope
adc
inc
xor
fisubr
mov
mov
inc
fcomp
and
push
cmps
std
mov
jp
call
mov
mov
nop
sbb
fsub
fwait
int
push
jne
cmps
xchg
stc
fwait
inc
repnz
and
sbb
call
sub
cwde
sbb
xchg
xor
(bad)
(bad)
sbb
ja
jae
test
adc
mov
leave
loop
or
ds
aaa
sbb
and
cs
or
ror
bound
out
jb
repnz
mov
pop
mov
mov
cmp
adc
push
test
js
adc
cmp
or
mov
pushf
fstp
loopne
outs
mov
push
fisubr
sbb
mul
fst
xor
lods
out
jns
push
xlat
std
sbb
movs
mov
jge
(bad)
adc
mov
in
ja
sbb
push
adc
call
call
push
call
xor
mov
daa
xchg
and
add
mov
inc
enter
outs
cmp
jo
xchg
cmp
xchg
add
lock
dec
mov
mov
movs
hlt
cmp
mov
movs
xchg
idiv
stc
push
sahf
and
push
or
fiadd
pop
push
mov
je
adc
push
dec
ins
stc
jno
dec
imul
pop
adc
clc
pop
je
push
call
cmp
sub
jp
jne
mov
xchg
push
call
fcmovb
inc
dec
stos
iret
in
xchg
xor
pop
xor
mov
lods
ins
ss
or
stos
mov
retf
(bad)
inc
push
inc
add
inc
mov
enter
cs
leave
ins
ss
pushf
call
clc
stos
loopne
in
test
les
jne
mov
int
cmp
(bad)
(bad)
adc
pop
call
adc
jne
shl
sqrtps
(bad)
call
iret
dec
or
mov
dec
mov
into
mov
dec
sbb
sub
mul
int3
jb
sub
dec
ds
pop
and
push
out
pop
ja
mov
loope
mov
xlat
pop
inc
stos
sub
jno
sti
xchg
sub
sbb
add
push
dec
dec
jecxz
jno
jbe
pop
sub
hlt
cmps
mov
lds
cmp
and
jecxz
jns
cmps
inc
cmps
mov
pop
pop
fsub
loope
adc
cmp
push
cmp
dec
adc
mov
adc
inc
inc
sahf
add
xchg
shl
push
inc
xor
daa
cmp
push
into
sbb
inc
and
jae
je
jb
imul
jmp
jmp
aas
xchg
sahf
xor
nop
je
cmps
sti
push
dec
aaa
popa
push
xor
push
mov
mov
xchg
jnp
or
cli
addr16
cmp
sub
fstp
xor
inc
mov
stos
cdq
xchg
xor
sbb
or
int3
lods
test
pop
in
jp
inc
pop
pop
inc
xor
push
test
(bad)
lock
lahf
je
fdivr
pop
test
cmp
scas
sbb
(bad)
hlt
cmp
hlt
xchg
xor
scas
dec
jo
in
mov
arpl
ins
mov
add
dec
mov
push
arpl
cld
pop
mov
sub
shr
jl
pop
sbb
fdivr
jle
retf
push
iret
cmp
ins
or
sub
cwde
loopne
cmps
dec
add
inc
inc
and
xor
sub
lock
mov
pushf
inc
xchg
inc
sbb
aaa
jmp
adc
sub
mov
mov
pop
std
jge
loopne
vphsubbw
xor
xlat
sub
dec
mov
jae
push
sbb
inc
adc
inc
add
push
sbb
imul
mov
pop
sahf
inc
push
frstor
fdivp
mov
pop
mov
inc
add
ins
es
adc
out
adc
bound
mov
xchg
jo
clc
scas
lds
push
xchg
or
inc
mov
repz
sub
or
jmp
sub
and
mov
scas
push
jge
(bad)
adc
out
or
or
mov
pop
inc
push
jns
leave
xor
add
mov
lds
cmp
mov
add
push
hlt
mov
inc
mov
popa
js
push
mov
bound
pop
mov
ds
int3
sbb
pop
push
and
fisttp
sub
xor
and
fcom
add
pop
icebp
pop
xchg
dec
les
mov
xor
cmp
loop
and
inc
xchg
es
xchg
pop
fnstenv
out
and
push
ja
push
test
jl
int3
xor
and
push
int
dec
dec
div
adc
cmp
dec
mov
sub
dec
les
dec
jae
std
jg
add
xchg
jb
or
add
lock
mul
dec
pop
enter
shl
lock
fsub
aas
into
mov
sub
mov
clc
sti
add
pushf
(bad)
dec
sbb
add
cmc
sbb
sbb
push
add
ret
add
sub
mov
fsub
jp
aaa
sub
push
pusha
jecxz
push
into
xchg
bound
jmp
dec
(bad)
aad
clc
xchg
mov
das
jmp
inc
xor
sub
add
les
and
movs
mov
jp
aaa
popa
in
and
cmps
pop
xchg
movs
pop
ds
sub
and
ins
jmp
jle
inc
retf
dec
hlt
pop
(bad)
push
mov
add
push
mov
jmp
aaa
fprem
or
adc
xor
push
lahf
pop
lods
fcmovnbe
fwait
adc
arpl
pop
cdq
fnstsw
call
mov
retf
pop
nop
test
jmp
lahf
cmp
pop
loopne
pop
cmps
mov
inc
sbb
outs
mov
dec
arpl
or
xor
xlat
pop
sbb
cmp
pop
mov
out
adc
pop
dec
pop
push
mov
ret
jne
shl
retf
movs
in
enter
inc
mov
sbb
test
xlat
out
mov
mov
and
xchg
out
fst
fiadd
jne
add
fidiv
ror
cdq
push
in
loop
cmp
mov
ficomp
imul
mov
jbe
leave
mov
cmp
sbb
lods
mov
pop
xchg
push
stos
(bad)
xchg
jp
mov
fsincos
jae
pop
sbb
rcr
les
clc
outs
aas
sub
pop
push
das
das
shl
cld
mov
xor
lea
enter
sub
inc
sbb
ins
aad
pop
xchg
mul
jnp
ins
xlat
dec
inc
enter
(bad)
imul
popa
sbb
pop
js
retf
push
arpl
je
enter
jg
fimul
cld
jmp
jne
add
xor
mov
xchg
repnz
cmp
push
sbb
dec
adc
les
and
cmp
cdq
(bad)
aam
xchg
inc
jnp
lods
cmp
aad
stc
ret
leave
dec
ret
push
push
aad
cmp
call
cmps
jle
inc
mov
popf
or
shl
cmp
nop
inc
sbb
dec
push
sub
aaa
push
or
int3
mov
push
movs
je
ja
enter
xchg
pop
lea
sub
xchg
push
mov
addr16
je
add
stc
jle
jmp
leave
pop
fistp
pop
mov
retf
push
push
adc
fcmovnb
lods
leave
sub
bound
cmps
addr16
movs
cdq
cmp
gs
dec
int3
(bad)
loope
lods
add
dec
stos
push
jns
mov
jbe
push
dec
fmul
icebp
push
and
push
fisub
fcomp
ret
push
sbb
sub
retf
xchg
xchg
push
mov
aad
and
or
and
stos
ins
mov
arpl
mov
or
fwait
out
ret
pop
dec
inc
jo
add
scas
cs
cwde
and
shl
es
push
xor
pop
pop
out
mov
jl
iret
dec
shr
add
inc
jns
inc
pop
sbb
push
mov
cwde
into
mov
cmp
leave
inc
xchg
inc
cmps
push
je
retf
sti
adc
cmp
jb
xchg
push
nop
cdq
hlt
pop
outs
sub
std
movs
xlat
and
movs
pop
in
mov
jb
dec
push
fsubp
lock
push
xor
and
and
inc
fild
lods
dec
loop
cmp
dec
inc
mov
stos
test
rcl
pop
inc
cwde
cmps
rcr
ja
pop
xlat
mov
cs
adc
mov
pop
jmp
sbb
imul
(bad)
fisub
test
xchg
jno
les
loope
sbb
sub
test
out
jnp
push
xor
mov
adc
jo
mov
inc
pop
sub
test
push
mov
cmp
rcr
in
imul
xchg
hlt
sub
adc
dec
or
cmps
call
ror
mov
push
fdivr
sbb
cmp
aas
jb
ficom
adc
sahf
mov
in
add
xchg
sbb
(bad)
std
ss
ins
std
xchg
dec
lea
and
repnz
xchg
cmps
cwde
jg
and
jmp
retf
mov
lahf
sti
cli
mov
in
ds
pop
xchg
mov
dec
cmp
gs
ror
test
and
jno
fisttp
mov
cmp
inc
outs
add
aaa
or
and
fnstcw
ja
adc
test
adc
hlt
xor
mov
jg
mov
sar
and
(bad)
push
fnstcw
push
mov
or
imul
imul
in
adc
mov
push
jl
xchg
pop
ss
mov
fcmovu
pop
jns
lods
mov
add
push
in
add
daa
add
sbb
mov
shl
inc
sub
icebp
push
push
mov
push
and
je
shl
mov
push
or
xchg
and
sub
out
retf
jo
(bad)
stos
pop
mov
enter
sar
dec
in
repz
int3
cmp
mov
repz
mov
mov
adc
sbb
in
cwde
dec
and
mov
dec
sub
int3
cmp
loopne
jl
xchg
xor
xor
test
cmps
addr16
mov
loop
mov
loopne
leave
ins
iret
xchg
(bad)
and
dec
fcmovbe
dec
mov
shr
rcl
mov
lock
je
mov
inc
scas
mov
std
push
mov
push
fild
in
nop
jne
add
rcl
sar
out
inc
(bad)
cli
aaa
and
data16
scas
push
cli
jbe
mov
lods
push
int3
or
imul
sbb
jecxz
lahf
mov
out
mov
inc
add
fimul
push
js
cmps
sbb
dec
or
cwde
push
pop
cmp
mov
jecxz
sub
xchg
fbld
mov
call
retf
mov
outs
sub
ret
cdq
cmp
or
or
outs
fistp
xchg
sub
add
cmp
rcl
fdiv
mov
clc
mov
mov
les
add
in
inc
adc
push
pop
sbb
sub
inc
inc
xchg
mov
cs
outs
test
pop
(bad)
and
inc
call
jns
(bad)
cmp
mov
gs
mov
pushf
add
repz
enter
(bad)
ja
add
xor
and
push
call
xor
jo
clc
fcomp
xchg
popa
mov
clc
jmp
int
fnstcw
shl
pop
jnp
and
sub
add
add
sub
xor
test
ds
cld
hlt
push
dec
xor
inc
pop
ret
lock
imul
mov
out
jbe
jg
or
fcomip
pop
jp
mov
(bad)
push
xchg
test
xor
adc
ss
mov
sbb
in
adc
jp
adc
mov
sbb
(bad)
neg
push
out
mov
stos
and
xor
sbb
rcl
and
mov
mov
xlat
pop
shl
dec
xlat
and
nop
xchg
mov
in
ror
icebp
pop
shl
and
ret
xchg
xor
push
push
push
pop
hlt
mov
push
xchg
add
push
ja
js
jb
dec
stos
push
jo
les
mov
fdivr
ds
mov
retf
jbe
aaa
nop
cmps
aaa
iret
mov
sar
lods
mov
cwde
and
pushf
jp
lods
lock
pop
in
mov
jne
xor
gs
pop
adc
cmp
cmp
(bad)
mov
out
cmp
ins
neg
add
and
ret
imul
dec
cs
cmp
and
retf
aam
mov
cmp
mov
cld
add
pop
ficom
push
nop
sbb
inc
loopne
jno
push
lods
cmp
lahf
call
sbb
js
push
retf
pop
out
ret
aaa
or
daa
test
sub
sub
loop
idiv
(bad)
out
das
popf
out
repnz
aas
and
and
jge
imul
in
data16
push
lock
xchg
les
xchg
sub
aam
cmp
mov
jle
out
(bad)
aam
clc
mov
pop
(bad)
mov
pcmpeqd
les
fbld
and
lea
cmp
(bad)
xor
jp
out
je
pop
push
mov
push
sub
mov
mov
mov
cmp
adc
jp
xchg
cmp
sub
xlat
psrlq
inc
or
(bad)
pop
loope
jmp
in
mov
loopne
(bad)
sbb
push
cmps
or
out
leave
int3
clc
jne
es
sti
cmp
sbb
js
mov
(bad)
icebp
push
jmp
outs
in
push
aaa
mov
call
mov
ins
ret
ret
or
jg
cli
retf
dec
nop
mov
aam
fst
xchg
out
mov
push
sub
add
inc
mov
stc
push
mov
and
jo
ds
(bad)
cmps
scas
(bad)
adc
arpl
xchg
idiv
push
(bad)
cli
or
push
aaa
idiv
mov
(bad)
dec
sub
ficom
test
mov
repnz
mov
jge
pop
pusha
xchg
sar
jle
dec
dec
int
sbb
nop
ds
je
js
gs
add
push
adc
sub
aas
sbb
scas
daa
addr16
fild
fsub
adc
ds
(bad)
push
sbb
pushf
aam
jb
rcl
outs
retf
push
xor
adc
arpl
iret
add
in
(bad)
mov
push
shr
outs
pop
add
mov
nop
stos
mov
push
mov
pop
arpl
mov
callw
test
(bad)
loopne
ret
aam
pop
scas
sbb
pop
and
das
push
dec
jbe
jmp
sbb
add
fs
test
sti
in
clc
outs
fwait
cmps
js
mov
push
sbb
inc
sub
xor
cmp
jp
jge
cld
inc
dec
xor
push
push
ins
ret
vandnpd
adc
cs
aam
inc
push
and
js
inc
jg
imul
ja
cmp
(bad)
aas
les
jne
rcr
sub
xchg
mov
fcmovnu
cs
ret
inc
sub
inc
jmp
mov
xchg
pop
sahf
enter
dec
icebp
test
mov
mov
add
cs
in
daa
pop
push
shl
adc
pop
sub
popa
(bad)
dec
inc
ins
mov
ret
jae
adc
sbb
dec
inc
ficom
jmp
sbb
push
jmp
outs
test
xchg
push
fs
push
xchg
sti
mov
aas
in
push
pop
leave
add
leave
adc
das
je
pusha
jmp
and
gs
push
shr
clc
jmp
mov
stos
adc
mov
lods
cdq
and
pop
inc
jae
fisttp
ja
push
loope
mov
fisub
hlt
jmp
adc
and
lea
add
into
aad
(bad)
aad
mov
adc
dec
ror
and
rcr
sti
xor
bound
jbe
pop
ret
or
int3
addr16
pop
fsub
jle
xor
test
and
and
push
clc
xor
jae
je
lods
add
jmp
adc
xchg
mov
inc
jnp
xor
out
sub
mov
push
push
aad
arpl
retf
int
das
repnz
push
lds
repz
enter
arpl
in
lods
and
repz
cwde
cmp
xor
xchg
push
cmp
xor
popa
sub
and
popa
mov
mov
mov
(bad)
mov
pop
call
jecxz
(bad)
lahf
sub
cs
movs
ja
sbb
xchg
es
xchg
xchg
inc
xchg
push
sub
ss
scas
icebp
push
es
std
sub
stos
sbb
movs
daa
sbb
and
jno
or
shl
leave
imul
lods
pop
dec
adc
pop
sbb
ja
aas
sbb
or
test
hlt
leave
mov
push
mov
pop
movs
shr
retf
ins
sar
mov
mov
in
jl
ds
lds
(bad)
push
mov
shl
jne
jb
dec
test
xchg
les
mov
mov
das
xor
shl
adc
gs
nop
inc
add
ja
nop
xlat
loop
imul
arpl
cmp
dec
outs
xor
dec
repz
lods
jl
push
loopne
mov
repz
xchg
push
or
cld
nop
int3
xchg
lock
div
stc
add
mov
push
daa
adc
out
lea
push
pop
pop
outs
ret
jge
dec
loopne
imul
xchg
mov
pop
ins
dec
pop
sbb
ss
into
add
inc
ror
sub
push
mov
xchg
or
adc
(bad)
cs
into
and
push
out
dec
pop
popf
sub
scas
xlat
ficom
xchg
jmp
pop
(bad)
fld
add
sbb
(bad)
and
and
fsub
ja
mov
jae
loopne
pop
mov
aam
fdiv
loopne
xlat
xchg
xor
div
xadd
sub
xlat
movs
sbb
push
outs
test
dec
push
das
sub
push
ja
sub
dec
and
push
mov
and
test
(bad)
sub
sub
stc
add
add
fidivr
call
add
ins
or
addr16
dec
mov
or
xchg
jmp
mov
jp
in
cdq
dec
dec
out
xchg
mov
lds
iret
pop
pop
data16
in
scas
dec
loope
jo
push
jp
mov
iret
mov
inc
xchg
dec
mov
xlat
cs
push
fs
dec
outs
js
cwde
hlt
rol
sar
jle
or
dec
ffree
xlat
inc
mov
dec
adc
cs
adc
sub
add
jmp
adc
jge
xchg
repnz
sar
mov
mov
push
inc
popf
xchg
xchg
mov
dec
adc
add
xlat
inc
ins
aad
daa
lds
cmps
mov
mov
pushf
movs
xchg
sub
in
dec
inc
mov
ss
aas
xor
sbb
sbb
int3
mov
mov
mov
cmp
loopne
push
sbb
dec
xchg
pop
shl
ss
pop
sub
out
ret
repnz
inc
and
rcr
enter
mov
push
inc
popf
ins
out
dec
xchg
adc
hlt
mov
dec
arpl
adc
loope
sub
sub
mov
test
sbb
cmps
or
pop
push
xor
or
push
ficom
rcl
cmp
dec
cmp
or
jg
outs
cld
daa
test
loope
cmp
inc
push
adc
cmps
pop
adc
mov
movs
outs
retf
imul
scas
call
jge
lds
push
jns
pop
and
push
and
and
call
shr
push
cmp
add
movs
(bad)
xchg
sub
jecxz
adc
clc
adc
loopne
jecxz
dec
cmp
xor
out
dec
in
push
pop
jno
mov
jo
and
or
cld
call
xor
aaa
dec
add
mov
xchg
aad
xchg
shl
ins
dec
xor
loop
loope
int
inc
movs
push
shr
mov
sub
std
pop
fstp
push
fild
inc
jns
sub
inc
push
jnp
xchg
fisubr
mov
in
pushf
pop
repnz
or
jb
in
jp
(bad)
(bad)
or
xchg
ror
mov
adc
push
sub
sti
mov
pop
and
shr
xchg
or
cmp
repz
jmp
jp
je
jo
das
shr
stos
xor
push
jmp
inc
outs
inc
cmps
cmps
xchg
push
cmp
add
fcomp
iret
repnz
push
scas
pop
fcmovb
ret
xor
adc
loope
scas
lods
arpl
out
jmp
inc
inc
aas
xor
inc
cmps
mov
xchg
jecxz
and
add
and
mov
aam
cdq
inc
add
cmp
push
or
xchg
iret
push
or
call
fs
out
mov
jbe
pop
and
in
mov
ins
es
adc
and
xchg
mov
int3
xlat
push
push
adc
repnz
sub
jmp
pushf
pop
and
jbe
and
push
hlt
push
jno
mov
dec
scas
mov
icebp
call
ficomp
(bad)
xor
test
mov
loopne
fcom
add
sub
sbb
fsubr
inc
jmp
or
xchg
sti
daa
push
push
xor
mov
cwde
xchg
lods
ins
aas
icebp
sbb
int3
lods
rol
js
cmp
arpl
ret
or
or
push
mov
mov
out
sbb
sbb
sar
xchg
les
mov
mov
mov
mov
push
push
inc
cmp
test
test
arpl
(bad)
pop
jl
popf
ins
cmp
ins
xchg
mov
pushf
loope
push
mov
jp
pop
das
or
movs
mov
mov
jmp
mov
xor
jo
pop
ja
loope
mov
mov
int3
loop
mov
lahf
mov
movs
and
pop
(bad)
pop
inc
or
push
outs
fisub
fiadd
xor
push
sbb
out
dec
adc
adc
adc
push
enter
aad
sbb
dec
ficomp
pusha
movs
loope
jge
fadd
retf
xchg
cs
inc
int
cmps
(bad)
jge
mov
dec
adc
call
fs
jg
push
mov
ins
xchg
mov
lock
xor
pushf
fcomp
push
and
pop
mov
dec
dec
push
mov
das
sbb
pushf
jge
jne
push
mov
add
ds
retf
dec
dec
sub
adc
pop
stos
sti
mov
pop
shr
xor
cli
pushf
bswap
test
clc
mov
aad
popa
outs
cmps
aas
add
dec
cli
xchg
adc
sub
js
jbe
(bad)
stos
shr
xchg
push
fistp
mov
cmps
cld
pusha
mov
jo
(bad)
clc
mov
push
push
jmp
cmps
add
fptan
lods
and
push
mov
fwait
mov
add
arpl
(bad)
dec
push
jmp
pop
test
stos
fdivr
ss
xor
cmc
(bad)
cli
(bad)
popa
fcomp
xor
push
ficom
sbb
fcom
xor
(bad)
frstor
push
fbld
daa
adc
call
shr
sbb
sahf
movs
inc
fwait
stc
add
add
sbb
test
enter
les
sub
jne
cmp
mov
fisubr
mov
sub
cmp
les
adc
mov
mov
imul
sbb
loopne
mov
ja
xor
lock
jno
dec
mov
jmp
and
push
js
mov
mov
inc
fisub
cld
daa
mov
ins
xchg
mov
bound
ret
gs
jne
xor
jo
mov
adc
jno
xor
dec
mov
iret
and
repz
mov
dec
cmp
out
jbe
out
xor
jbe
cmp
lock
ins
es
adc
mov
mov
lahf
inc
mov
imul
(bad)
in
xor
cmc
pop
add
mov
push
popf
mov
mov
adc
cmp
outs
add
scas
fcmovne
sbb
out
xchg
and
or
pusha
ds
aaa
xchg
cmp
inc
daa
aas
mov
sbb
out
aam
test
dec
push
jge
gs
xchg
add
bound
mov
(bad)
(bad)
cmp
jl
xchg
mov
xor
mov
leave
lahf
cmp
and
and
cmp
mov
adc
jbe
(bad)
call
aad
mov
dec
mov
cld
mov
pop
xor
in
fwait
mov
jp
scas
pop
mov
jmp
das
cmp
sub
mov
rol
popa
fwait
fs
xor
pop
lds
push
and
add
movs
or
dec
and
cmps
cmps
outs
inc
inc
aaa
out
cmp
push
stos
outs
mov
inc
in
in
push
outs
cmc
cmps
mov
inc
pop
lods
std
sub
push
push
or
inc
dec
leave
push
sbb
sar
in
and
daa
inc
scas
(bad)
push
out
ficomp
pop
mov
mov
ret
pop
sub
xchg
inc
dec
or
mul
or
or
mov
jmp
add
jb
sbb
xchg
push
mov
add
(bad)
aad
adc
div
mov
and
hlt
jge
or
and
out
sbb
jns
lds
test
xchg
into
inc
iret
stos
or
pusha
cdq
movs
lahf
jae
daa
out
repz
jo
sub
sub
retf
jl
popa
add
jge
pop
jg
sbb
or
shr
jle
inc
and
push
mov
aam
xor
rcl
stos
push
lahf
mov
mov
jmp
sub
and
or
adc
mov
push
cwde
cmp
mov
push
dec
pusha
test
int
outs
fmul
jno
ss
pop
sbb
mov
jl
jl
or
inc
add
xor
lods
jmp
xlat
out
push
pop
add
fdivr
xor
xchg
xchg
sahf
repnz
in
push
fwait
daa
retf
cmp
dec
stos
mov
fcomp
mov
and
mov
mov
dec
addr16
lahf
dec
test
mov
xchg
add
cdq
cmp
daa
dec
pop
add
jg
cmp
(bad)
cmps
lods
test
inc
ins
xchg
mov
jo
sub
into
rcr
lods
outs
mov
add
pop
jge
push
add
mov
sbb
aad
dec
ffreep
dec
hlt
push
loop
push
icebp
daa
int
cmp
cmp
dec
cmp
adc
(bad)
in
inc
mov
leave
repnz
adc
pop
push
xor
and
xor
mov
dec
jmp
cmp
adc
jl
inc
mov
jecxz
push
(bad)
adc
xor
lods
repnz
gs
call
repz
pop
pop
sbb
jle
xchg
out
loope
sti
retf
mov
jno
rcr
cmp
pop
jg
cmovne
mov
pop
pop
ret
and
(bad)
xor
nop
fldenv
mov
jbe
mov
xchg
pop
retf
out
sbb
pop
jo
pop
call
mov
ss
movs
cmp
pushf
fsubr
mov
xor
sbb
repnz
add
je
pop
mov
stos
inc
dec
imul
mov
jno
jne
bound
jmp
jecxz
pop
les
jg
sbb
add
pmovmskb
push
ja
xchg
sti
dec
add
aam
ja
push
inc
sbb
stc
sbb
xor
xor
nop
inc
enter
add
mov
sub
and
xchg
cmp
loop
inc
pop
sbb
push
jg
xor
xor
popf
and
cdq
sti
out
sbb
adc
jo
jae
pusha
mov
in
sbb
cmp
loope
std
mov
sub
cmp
fidivr
fisttp
mov
pushf
mov
pop
sti
mov
push
add
push
fld
add
mov
sub
andnps
loope
sbb
inc
lock
ret
mov
xchg
scas
inc
lds
jnp
mov
add
enter
dec
or
inc
aam
push
pop
out
mov
push
cmc
jmp
jp
add
cmps
dec
mov
iret
(bad)
jmp
call
mov
and
pop
lods
out
sbb
pop
mov
nop
data16
test
mov
sub
ret
jl
sub
dec
sbb
and
xchg
sub
xor
movs
int3
mov
cdq
add
or
adc
cs
es
mov
pop
mov
loop
xchg
mov
mov
mov
adc
lods
push
bound
mov
cmc
push
mov
stos
push
dec
shl
rcr
not
das
fwait
xlat
mov
jns
popf
xchg
lds
scas
test
push
pop
cdq
fmul
aaa
and
sbb
cmp
xchg
dec
loop
jmp
iret
lods
ins
(bad)
ja
loopne
int3
inc
jmp
movs
dec
into
jge
cmp
jmp
adc
sub
mov
pushaw
or
jb
push
pop
or
or
or
sub
fcom
xor
imul
and
xor
ret
jno
xor
push
sbb
inc
nop
imul
loop
(bad)
aad
imul
mov
jb
xor
movs
or
les
lea
pop
push
push
repz
cs
mov
lock
out
hlt
inc
jbe
aad
sbb
sub
jbe
mov
adc
push
add
repz
aas
cmp
outs
dec
pop
shl
pop
jl
or
jg
push
shr
mov
iret
cmps
es
xor
loopne
(bad)
leave
sub
outs
pop
pusha
mov
pop
stos
(bad)
in
jbe
adc
pushf
fnstcw
mov
pop
popf
dec
imul
cmc
and
cwde
cmp
dec
xchg
jmp
in
jge
ror
cmps
push
jae
rol
mov
sub
jno
xchg
stc
fistp
mov
pushf
je
stos
cdq
add
movs
test
and
xor
mov
arpl
xchg
loope
fld
cmps
cmc
in
das
je
ret
int3
xchg
xor
rcr
mul
jmp
scas
lods
fnstsw
push
adc
mov
clc
mov
stc
jae
test
adc
mov
mov
push
int3
out
inc
mov
and
adc
rcr
pop
call
adc
sbb
push
jmp
push
sub
repnz
rep
je
inc
or
jo
fwait
add
mul
mov
test
scas
fisubr
jp
xor
clc
bound
mov
scas
adc
imul
fisttp
pop
ror
(bad)
mov
push
adc
popa
push
add
jl
imul
fdivr
ins
mov
outs
mov
cmp
mov
int3
pop
inc
jno
lods
bswap
mov
mov
ins
dec
adc
std
out
xor
mov
into
mov
and
shl
jl
les
cmp
hlt
inc
in
cdq
pop
mov
mov
pop
repz
push
retf
movs
add
imul
test
aas
aad
lea
out
mov
cmp
mov
dec
int3
scas
or
xchg
mov
imul
mov
add
pop
es
sbb
xchg
aad
xchg
nop
mov
arpl
leave
js
jmp
test
mov
pop
pop
sbb
or
xchg
mov
ds
push
push
mul
cwde
out
sbb
test
mov
stos
outs
xor
sub
dec
pop
loop
out
inc
mov
sbb
retf
test
adc
jae
retf
idiv
adc
xchg
stos
and
mov
aas
cwde
in
(bad)
adc
sub
cld
pop
mov
hlt
jle
cmp
leave
movs
nop
fst
pop
leave
iret
and
adc
ja
loope
mov
int
mov
inc
push
shr
sahf
rcl
inc
push
jno
pop
adc
inc
or
and
fidivr
test
call
movs
ret
aas
sub
xlat
enter
pop
scas
add
(bad)
cdq
imul
stos
sbb
data16
sahf
ret
jmp
into
or
xor
cwde
inc
xlat
mov
pop
push
jnp
dec
sahf
mov
xor
stos
jp
std
sbb
in
push
nop
lock
out
shl
mov
or
nop
(bad)
out
jo
jle
pop
ins
imul
add
loop
jb
call
imul
in
ss
fadd
push
push
arpl
cmp
test
push
popf
push
ins
jae
jl
cmp
xor
cmp
mov
mov
stos
ret
repnz
cld
cli
loope
sub
addr16
mov
aam
ins
push
push
jnp
and
push
std
xor
std
or
jnp
jnp
sar
mov
adc
je
push
mov
test
jge
dec
ret
ds
and
mov
retf
sub
and
adc
div
mov
cmp
dec
in
not
push
lock
fs
(bad)
rcl
inc
xchg
(bad)
jb
push
pop
jg
mov
jae
(bad)
xor
pop
mov
movs
nop
addr16
into
lahf
test
add
pop
xchg
xor
mov
inc
pop
mov
jmp
jo
xchg
mov
xor
hlt
sub
stos
sub
out
xor
cdq
jne
(bad)
test
jmp
popf
xchg
(bad)
sbb
mov
xchg
mov
push
mov
cmp
dec
cs
js
cmp
out
js
pop
adc
icebp
mov
ds
pop
and
push
add
stos
inc
inc
xchg
int
or
xlat
dec
imul
int
sub
mov
push
jo
push
inc
or
adc
sub
mov
addr16
jle
xchg
shl
cdq
inc
push
sbb
mov
jmp
pop
les
xchg
fmul
ret
or
and
imul
or
outs
(bad)
out
(bad)
mov
(bad)
aaa
xor
cli
(bad)
and
jp
mov
or
mov
mov
and
shl
in
out
mov
das
fsubr
jg
fdivrp
das
push
pop
fstp
cld
into
sahf
or
popa
popa
xchg
mov
loope
xchg
int3
mov
cmp
jae
test
and
xor
xor
aam
das
outs
push
mov
push
jns
pop
sbb
add
scas
mov
dec
in
mov
and
clc
add
add
cmc
jle
std
mul
push
mov
push
push
lea
pop
out
cdq
mov
adc
adc
test
imul
int
mov
mov
push
idiv
cmc
mov
mul
adc
push
inc
subps
xchg
out
pop
loop
mov
outs
mov
xor
push
sub
mov
outs
aaa
inc
sbb
mov
ss
push
cdq
and
popf
imul
scas
cmc
hlt
lock
lods
aad
int
cmp
not
fisttp
inc
jns
out
push
(bad)
sahf
repz
and
nop
dec
leave
out
pop
ret
rep
xchg
test
popf
(bad)
(bad)
repz
xor
push
ret
mov
and
icebp
or
mov
jmp
(bad)
mov
outs
retf
scas
mov
jp
pop
into
cmc
je
cli
mov
xchg
inc
(bad)
call
inc
cmp
xchg
adc
dec
or
sahf
cmp
das
or
xor
xor
sbb
jp
stc
and
out
mov
and
and
sub
xchg
xchg
(bad)
mov
push
adc
mov
pop
mov
sti
pop
mov
cli
push
dec
lahf
aad
cmc
pop
inc
jae
(bad)
fimul
stc
push
cmps
popa
sbb
lahf
(bad)
test
adc
dec
mov
mov
inc
adc
mov
pop
mov
cmc
(bad)
and
xchg
jae
or
xchg
pop
xchg
cmps
mov
repz
fst
add
jecxz
add
in
xor
out
or
adc
sub
pop
je
inc
repz
je
mov
(bad)
dec
xor
push
mov
arpl
adc
pop
movs
inc
(bad)
int
jg
loope
int3
mov
dec
jecxz
stos
out
xchg
sbb
jl
mov
jns
aaa
mov
ror
xchg
pop
push
fucomip
movs
(bad)
leave
repz
mov
shl
cld
mov
jne
sub
ret
ret
mov
mov
loope
add
in
movsx
pop
xor
mov
mov
das
jmp
dec
mov
repnz
cmp
inc
adc
add
in
push
inc
cs
shl
mov
xlat
test
imul
add
mov
jno
add
mov
and
inc
inc
je
sbb
mov
out
pop
aam
repz
stc
loop
or
imul
adc
movs
retf
push
xor
cmp
mov
cmp
ins
movs
cmc
jmp
jo
fs
mov
jns
outs
cmp
pop
out
sub
mov
sbb
inc
pop
pop
xchg
test
ins
or
mov
ret
adc
push
jmp
mov
push
hlt
nop
pop
sbb
push
jmp
sbb
out
out
(bad)
adc
mov
nop
push
nop
scas
add
dec
(bad)
jg
xor
jle
int
pop
aaa
out
dec
and
xchg
mov
lods
adc
in
sub
jnp
pop
lods
xor
stos
and
les
add
int3
das
xchg
(bad)
cmps
pop
add
jns
xchg
push
out
mov
sbb
jmp
jmp
jo
jnp
scas
pushf
dec
in
mov
pop
data16
fmul
cmps
adc
adc
or
popf
push
inc
push
jp
mov
data16
push
mov
stos
shl
cmp
jo
add
or
int3
push
clc
pop
sub
loope
jmp
nop
es
xor
xlat
jle
adc
ss
lods
repz
enter
sbb
push
adc
xchg
pop
mov
sub
sub
dec
mov
cmp
call
call
adc
imul
jmp
xchg
loop
call
retf
in
cmp
and
mov
ficomp
pop
popa
sub
pushf
imul
je
pop
(bad)
pop
out
mov
popf
rcr
scas
xor
mov
je
loope
cli
mov
(bad)
pop
cmp
dec
mul
dec
sbb
mov
pushf
dec
dec
jl
ja
cmp
je
sbb
push
mov
in
pop
fnsave
fs
sahf
sbb
pusha
cli
mov
pop
into
cmps
xchg
test
(bad)
aas
retf
adc
and
fstp
ss
cmp
push
inc
sub
inc
push
adc
mov
xchg
push
xor
rcl
adc
js
sub
cld
test
cmp
(bad)
in
imul
das
aad
fstp
scas
je
dec
bound
mov
push
or
cmp
mov
enter
inc
cmp
stos
in
add
pushf
pop
nop
ins
or
adc
loopne
(bad)
jo
rep
sub
ret
loope
push
fistp
push
daa
in
add
push
and
adc
outs
jecxz
xchg
pop
int
ret
and
cmp
push
(bad)
fcom
call
mov
push
and
fisub
rcl
cmp
arpl
xchg
out
push
les
(bad)
popa
pop
xor
pop
mov
std
or
xor
xchg
cmp
sar
pop
int
shr
sbb
mov
or
out
inc
aam
not
daa
fistp
popf
push
xor
imul
add
mov
ins
je
mov
lahf
add
lds
out
xchg
int
mov
scas
fild
mov
icebp
shr
or
push
call
imul
(bad)
outs
adc
popa
jg
push
not
cld
jge
mov
inc
jle
mov
sbb
mov
loopne
jae
inc
mov
jo
cli
into
ja
out
repnz
sub
inc
icebp
cs
mov
es
jo
push
shr
sub
or
mov
stos
or
xor
jmp
jge
sbb
sbb
dec
inc
jmp
pop
dec
jb
inc
fild
adc
idiv
push
popw
xchg
rcr
mul
mov
icebp
fwait
call
push
stos
cmp
or
push
sbb
cli
pop
iret
push
mov
dec
hlt
popf
mov
je
mov
int3
popf
cld
test
aam
test
out
mov
add
mov
hlt
xchg
arpl
sub
xchg
dec
hlt
add
jnp
fwait
cli
repz
pop
dec
rol
sysret
push
add
outs
jge
and
adc
bnd
cmps
pop
inc
shr
mov
dec
jle
hlt
call
xchg
popa
sub
and
adc
mov
adc
sbb
imul
mov
pop
hlt
inc
cwde
pop
jg
popa
fisubr
std
sbb
inc
mov
push
iret
push
ficom
shl
fxch
and
je
repz
cmp
xor
sbb
xor
daa
mov
adc
dec
test
pop
mov
pop
adc
xor
fisubr
js
fwait
sub
mov
pushf
fwait
dec
shr
xor
pop
inc
push
or
data16
sub
clc
sub
shl
add
xchg
scas
stc
fisttp
popf
inc
xchg
std
sbb
jbe
(bad)
int
xlat
imul
xchg
int
or
or
push
jg
test
stos
not
outs
adc
fs
cmp
jl
xchg
(bad)
popf
out
loope
add
out
or
sub
push
gs
bsr
and
and
repz
mov
fwait
pop
cmp
sub
inc
jle
push
jno
xor
enter
popf
jle
add
inc
cli
jbe
jp
mov
je
cld
jb
data16
jmp
xor
hlt
pushf
dec
enter
pop
fdiv
mov
add
xor
jno
jae
push
push
add
mov
aas
jle
sbb
or
mov
lea
mov
cmp
out
lea
leave
lods
adc
imul
ja
mov
fidiv
add
out
bound
fisttp
cmp
ss
sub
hlt
mov
xchg
push
jno
cmp
push
ins
fsub
push
fstp
cmp
test
xchg
jp
and
jo
adc
add
shl
lds
jmp
mov
das
push
add
pop
leave
imul
inc
sub
sbb
jno
add
shl
retf
in
ss
fist
stos
in
sbb
xor
std
xchg
jmp
sub
jb
mov
xchg
mov
or
xchg
mov
sbb
int3
push
sar
fwait
leave
stos
or
pop
mov
pop
fbstp
mov
icebp
xor
int
arpl
iret
enter
xor
inc
fs
in
inc
out
xor
xor
repz
cmc
cmp
mov
pop
stos
cmps
fcmovnb
jmp
push
inc
dec
and
sub
iret
adc
dec
inc
push
btr
and
ins
push
lods
rcr
fsub
sbb
(bad)
enter
adc
adc
xlat
cs
retf
mov
idiv
sbb
jno
mov
adc
xchg
sbb
fld
cmp
add
mov
sbb
jns
mov
xchg
xor
or
imul
int3
ss
rcl
pushf
ret
or
jecxz
mov
leave
punpckldq
mov
add
pop
ret
push
pop
test
xor
(bad)
sbb
cs
das
or
push
das
jp
push
xor
int
pop
outs
or
in
push
push
icebp
(bad)
stc
cs
ja
mov
pop
into
cmps
addr16
nop
scas
inc
cmp
inc
mov
std
push
loope
iret
xor
mov
inc
adc
scas
jge
push
and
outs
ret
jne
hlt
add
stos
xor
fnstenv
jmp
icebp
mov
add
(bad)
jb
pop
push
sub
stc
jle
shl
push
mov
jmp
push
mov
aaa
lahf
fsubr
je
mov
inc
ret
cmp
popf
pop
dec
ret
gs
and
mov
mov
daa
cmp
jne
add
in
shl
sub
bound
mov
dec
loopne
jbe
pop
imul
mov
inc
icebp
int3
popf
aam
shr
adc
aad
sbb
fcmovnu
or
and
sbb
sub
(bad)
fbld
mov
xchg
retf
cdq
inc
in
test
jbe
aam
pop
cmp
sbb
cmps
loopne
sti
dec
mov
ins
jo
sub
adc
ficom
cmp
adc
mov
movs
in
jmp
cmp
pop
lea
in
xor
or
shr
xchg
hlt
mov
sub
xor
pop
and
xlat
and
add
cmps
retf
adc
mov
loopne
imul
scas
pop
xor
(bad)
and
jge
add
and
or
xchg
loope
sar
enter
mov
cmc
dec
mov
or
popa
mov
ficom
adc
cmps
nop
fsubr
test
mov
pop
movs
into
call
jbe
jl
xchg
dec
adc
mov
fdiv
test
aad
dec
pop
das
xor
call
hlt
push
add
scas
mov
div
xchg
hlt
push
jmp
xor
popa
imul
jmp
mov
idiv
jnp
mov
ret
pop
(bad)
fst
in
sub
popa
test
(bad)
jae
push
and
or
rcr
test
mov
stc
sub
outs
mov
sub
add
xor
and
scas
imul
push
xor
jae
xchg
mul
mov
ret
sub
mov
dec
fst
mov
call
in
je
and
add
cmp
rol
jnp
pop
pop
mov
daa
and
and
dec
out
mov
retf
les
push
div
in
sar
jecxz
sbb
push
cmp
cmp
int3
repz
jno
adc
cld
xlat
and
mov
sbb
fmul
jae
cs
sahf
and
test
cmc
mov
add
repnz
dec
xor
xor
xchg
mov
int
sub
das
dec
lock
mov
pop
jne
int3
or
mov
outs
xor
clc
fst
push
xor
push
sbb
cmp
popa
outs
cmp
fild
dec
inc
and
pop
arpl
aaa
pop
or
or
inc
push
in
stc
stos
ret
pop
stc
movs
xchg
jmp
les
pop
mov
pop
data16
mov
test
(bad)
enter
push
lahf
ret
mov
out
sbb
mov
adc
adc
xchg
fiadd
arpl
popa
xchg
cwde
mov
cmp
ret
shl
push
lock
lods
inc
addr16
scas
cmp
pop
sub
popa
test
sub
sbb
add
and
dec
xor
or
mov
outs
mov
mov
mov
int3
xor
or
push
pop
sub
or
clc
js
xchg
loope
jg
loope
xchg
xchg
mov
dec
push
jge
mov
aad
xchg
cmp
mov
in
jle
retf
or
shl
pop
ret
cs
dec
mov
addr16
mov
xlat
loop
cmp
dec
sbb
stos
daa
xchg
mov
xchg
ret
daa
test
mov
xor
ret
aas
and
adc
jecxz
in
sub
push
out
or
and
push
movs
jmp
(bad)
pop
test
test
loop
cdq
dec
addr16
cmp
xor
loopne
test
cmps
inc
add
popf
sbb
ss
push
pop
ds
test
fnstcw
sub
jl
mov
xchg
cli
lahf
sbb
hlt
nop
fisttp
mov
or
xor
sbb
pop
(bad)
jmp
mov
mov
jmp
mov
jle
inc
fidiv
aaa
adc
fimul
jnp
push
jle
mov
lock
cwde
add
inc
add
repnz
add
inc
mov
sar
lahf
xor
pop
xor
inc
std
js
or
add
jmp
pop
adc
fst
xchg
cmovns
add
fild
dec
mov
cmp
cmp
adc
fisubr
lods
aad
push
fnstenv
loop
rcl
fwait
push
mov
and
outs
mov
std
sub
add
ja
xchg
test
adc
out
repz
adc
ret
loop
lds
imul
mov
outs
pop
push
jmp
fild
(bad)
jg
add
nop
xor
ins
xchg
out
and
sub
pop
adc
popf
pop
ins
mov
jbe
out
mov
loopne
out
imul
test
test
xchg
adc
loopne
jl
lock
retf
and
stos
ror
xor
or
xor
mov
jmp
retf
xor
adc
fisttp
pop
ja
dec
push
leave
jle
sbb
lods
or
(bad)
jno
lds
mov
loop
fisubr
movs
fs
mov
mov
(bad)
mov
mov
aaa
aad
or
mov
mov
mov
repz
push
es
xlat
jl
leave
fsubrp
xor
jb
add
lock
rol
sbb
nop
cmp
mov
or
dec
push
xor
or
out
loope
pop
std
cmc
mov
sub
inc
test
jecxz
mov
sahf
es
ret
mov
ret
fld
aaa
aad
sub
or
adc
cmp
and
push
xchg
xor
mov
leave
aam
cmp
push
aas
jmp
rcl
ins
ins
mov
xor
xchg
cld
mov
jge
aaa
inc
sub
fs
in
cli
cmps
pop
mov
xchg
mov
push
cmp
fdiv
push
xor
fild
cmp
pop
popa
fs
inc
mov
mov
push
dec
mov
sub
mov
dec
imul
mov
int3
add
fsubr
out
sub
jmp
xchg
nop
lods
mov
fs
fwait
push
std
inc
gs
ror
fidivr
jae
leave
lock
repz
jb
cmp
jmp
cmp
xchg
retf
adc
sar
dec
sbb
arpl
call
dec
stos
stos
mov
cwde
out
aas
fbstp
pop
and
out
pusha
ins
cli
addr16
xchg
scas
shr
daa
in
pop
xchg
adc
or
sub
pop
das
inc
jl
scas
or
mov
push
ds
jmp
xor
fimul
test
xchg
les
test
mov
rcr
icebp
and
adc
aaa
leave
jae
mov
(bad)
stc
ret
clc
jge
test
xchg
add
pop
ins
mov
(bad)
(bad)
out
mov
jg
cwde
test
jmp
jae
pusha
and
aad
push
in
not
lahf
ret
stos
aad
call
sub
lods
mov
mov
push
pushf
lods
inc
(bad)
jmp
jb
fcmovbe
push
imul
mov
dec
inc
cmp
call
icebp
stos
inc
(bad)
int3
std
lds
push
mov
sub
mov
pushf
outs
and
(bad)
jo
loop
das
les
sti
repnz
mov
ret
fimul
sbb
cwde
sbb
mov
sub
cmp
stos
leave
mov
pop
ret
and
nop
inc
pop
xchg
push
mov
fsubr
xor
xchg
inc
push
mov
jbe
lahf
pop
movs
pop
cmps
lods
sub
pop
mov
mov
shl
imul
ins
and
mov
fst
or
out
stos
pop
and
cmp
jmp
sub
jmp
inc
xchg
sub
cli
jmp
adc
xor
fistp
movs
push
jle
inc
mov
inc
fild
xchg
test
jle
ret
xor
mov
popa
fcmovne
fdivr
ins
or
xor
inc
sub
pop
inc
or
jl
scas
div
cwde
and
inc
inc
fiadd
pop
sahf
ss
loopne
call
out
pop
sahf
mov
fiadd
test
loopne
addr16
sbb
icebp
mov
pop
sbb
ins
pop
sbb
int3
(bad)
div
fld
rol
mov
outs
fptan
push
scas
mov
icebp
add
xchg
lods
enter
icebp
sub
aad
mov
push
mov
retf
push
pop
adc
jecxz
leave
mov
in
(bad)
(bad)
fnstcw
xchg
xor
addr16
push
mov
push
pop
fs
mov
jae
mov
in
or
aad
dec
shr
cmp
xor
mov
xchg
inc
cmp
(bad)
mov
mov
jge
int
in
jge
pop
in
mov
jne
xor
mov
stos
out
sbb
(bad)
sbb
jae
xchg
mov
mov
and
cs
sbb
or
rcl
jge
mov
iret
mov
fs
sahf
ffree
mov
mov
out
sbb
mov
aas
mov
jns
cmp
cld
pop
shl
pop
xor
arpl
xchg
or
femms
cmp
fmul
sbb
pop
(bad)
lds
clc
test
mov
fadd
je
scas
(bad)
jb
scas
outs
test
adc
shl
add
push
adc
or
or
or
mov
mov
loopne
(bad)
fnstcw
inc
ret
std
popf
loope
movs
ins
adc
pop
loope
pop
sub
hlt
repnz
icebp
loope
pop
sub
data16
fs
push
cmp
mov
or
pop
xor
leave
dec
pop
aad
push
fmul
and
sbb
popf
cmp
fist
jle
(bad)
and
pop
mov
out
xchg
test
mov
mov
lods
aam
repz
sti
gs
inc
mov
daa
jns
fcmovb
xchg
push
fucomip
movs
nop
mov
arpl
sub
out
ret
add
sub
sbb
xor
enter
fld
cwde
sbb
lds
push
jns
addr16
sahf
cmc
shl
sub
push
imul
cmp
das
call
add
xchg
mov
bound
cld
repz
ds
in
xor
call
stos
xor
js
test
inc
and
inc
pop
in
mov
std
cmp
xchg
jno
repnz
movs
ret
xchg
push
jmp
jae
int3
ficomp
cmp
(bad)
and
jge
pop
push
test
test
ret
or
nop
lahf
fst
xchg
sbb
mov
xor
xor
or
movs
add
outs
sti
dec
rcl
int3
sub
movs
lock
mov
enter
test
fild
jmp
pop
lock
int3
xchg
mov
adc
ror
jo
mov
push
add
sbb
pop
int3
jae
mov
stos
dec
imul
push
popa
adc
lods
es
inc
lods
in
(bad)
arpl
adc
sub
add
bound
pop
jb
add
or
bound
psadbw
pop
pushf
adc
pop
rcl
repnz
sub
fwait
enter
pushf
mov
xchg
sub
pop
or
scas
mov
test
pop
aas
in
test
imul
stc
daa
dec
inc
or
mov
scas
and
sar
xchg
std
inc
test
call
add
push
jb
cld
jnp
enter
lock
(bad)
shr
adc
or
push
jmp
and
mov
shl
pop
dec
jg
mov
test
jns
mov
pop
cli
adc
or
call
and
jmp
xor
es
fiadd
cmp
call
bound
xchg
xor
cwde
hlt
pop
imul
mov
xor
mov
adc
adc
xlat
inc
hlt
pop
xchg
xchg
pop
pop
dec
and
shr
std
repz
xchg
mov
adc
shr
dec
and
mov
cmp
push
pop
lods
inc
out
xor
jl
cmovg
out
jmp
and
shr
out
adc
push
lock
push
lea
ret
mov
xor
mov
cmps
mov
mov
stc
pop
ror
cmp
cmp
jg
adc
jns
add
jl
ins
retf
push
xor
pop
test
imul
pop
scas
fwait
xor
out
xchg
sub
fcom
xlat
rcr
jge
mov
loopne
mov
leave
xor
mov
mov
scas
(bad)
addr16
inc
test
push
rcr
fcomp
add
jns
mov
call
popf
in
inc
mov
push
into
mul
std
mov
into
lea
pop
ins
dec
xchg
cdq
inc
lahf
(bad)
jbe
mov
mov
cs
cmp
xchg
or
rol
xor
test
adc
aas
outs
aas
add
jmp
inc
inc
or
les
add
dec
pop
fs
dec
mov
les
xor
(bad)
jb
mov
aad
mov
mov
xor
shl
xor
sar
pop
xlat
add
mov
es
jle
or
and
and
adc
leave
mov
lea
mov
lods
or
cmp
and
in
xor
pop
sub
fisubr
jae
iret
jo
sar
cwde
imul
pop
or
jno
adc
xor
fiadd
inc
cmps
enter
imul
sub
sbb
sub
adc
f2xm1
jne
push
out
push
xchg
mov
pop
jp
sar
pop
mov
lea
sub
xchg
cli
das
jp
mov
scas
jle
pop
dec
int
mov
ins
jecxz
in
ja
shl
fs
pop
xor
jmp
jno
leave
mov
xchg
push
sahf
scas
(bad)
push
xor
imul
mov
adc
inc
mov
jp
jmp
inc
les
test
scas
push
pop
out
jg
nop
jno
stos
(bad)
mov
test
dec
popa
dec
dec
cmps
leave
fsub
dec
ror
push
movs
iret
inc
in
jmp
adc
repz
not
xchg
imul
sbb
lock
rol
ret
pop
sub
aaa
mov
jno
pusha
xor
fistp
sub
(bad)
icebp
rcr
add
cmps
sub
jbe
pop
adc
xor
nop
mov
jno
sar
int3
les
adc
pop
xchg
jb
cmp
loopne
arpl
cmp
neg
imul
dec
stc
addr16
test
cmp
xlat
fldcw
iret
sbb
push
sahf
or
daa
push
fidivr
mov
sub
add
or
pop
in
out
enter
xchg
cmc
not
pop
push
bound
aad
mov
jae
push
mov
pop
fstp
mov
xchg
adc
sbb
jns
mov
pop
sub
jne
mov
pop
sub
xchg
lock
and
cmps
jl
(bad)
push
push
aas
ror
ret
stc
xor
(bad)
sahf
les
jmp
out
dec
js
stc
fadd
mov
pop
and
std
jns
push
fnstsw
cmp
lea
pop
shr
jp
push
mov
jl
pop
inc
test
outs
(bad)
push
cmp
out
push
mov
sub
fimul
push
ss
enter
xor
fild
out
lods
ror
out
pop
(bad)
fdivr
jmp
cmp
(bad)
loop
xor
scas
xchg
je
add
pop
mov
test
cdq
mov
daa
js
mov
xchg
push
mov
mov
xor
in
vfnmsub213ss
cmp
ds
in
das
cli
push
cmps
jne
sub
and
mov
movs
dec
stos
cmp
repz
sbb
hlt
retf
out
mov
pop
gs
jnp
outs
jmp
pop
push
mov
sub
sub
xor
and
(bad)
lahf
sbb
mov
inc
mov
(bad)
into
cmps
fidivr
pop
jo
ds
ins
lds
and
mov
(bad)
mov
cli
fs
push
aas
push
xchg
push
push
(bad)
cld
scas
test
cmp
pop
jle
pop
jmp
xchg
imul
ja
cmc
xor
pusha
scas
sahf
frstor
and
neg
pop
jnp
popf
test
cmp
sar
fdivr
shl
sub
lahf
imul
int
ja
adc
int
push
pop
xchg
pop
and
test
jmp
movs
(bad)
int3
ret
ins
or
retf
or
ins
daa
pop
or
mov
shl
(bad)
jp
ret
bound
push
mov
dec
stos
and
add
enter
add
push
out
mov
inc
jo
sub
fnstsw
aaa
adc
test
pop
xchg
or
xchg
push
shl
fiadd
mov
icebp
stos
adc
lods
(bad)
fistp
test
lock
mov
cmp
aaa
stos
mov
lods
lods
stc
pop
int3
push
addr16
xlat
pop
sub
push
jns
and
xchg
inc
cmp
movs
mov
repnz
jmp
jns
add
add
jge
mov
mov
pop
scas
mov
xchg
jg
dec
in
js
jecxz
sbb
cmp
mov
add
xchg
cmp
call
jmp
push
mov
loope
call
int
inc
inc
std
push
call
mov
cli
mov
pop
ds
movs
jmp
sub
or
sub
les
push
movs
pop
mov
lods
inc
xor
enter
int3
ja
pop
dec
into
fistp
ds
push
test
pop
setns
pop
out
int3
stc
aas
jge
jge
(bad)
cld
add
adc
xor
ins
or
fimul
push
mov
stos
mov
fwait
imul
shl
or
add
js
cdq
stos
das
stos
pop
addr16
or
mul
push
inc
push
mov
out
or
cmp
mov
ds
push
jge
stos
mov
popf
mov
cmps
add
mov
push
or
rcl
mov
loop
xchg
pop
call
jge
loop
and
jp
pop
jo
(bad)
mov
pop
gs
(bad)
(bad)
(bad)
es
popa
jbe
pop
xor
loope
mov
inc
ret
jl
mov
push
inc
cmp
add
dec
aad
xchg
fldenv
out
into
das
lahf
sti
push
cmp
jp
repz
(bad)
adc
adc
je
aas
xchg
pusha
dec
cmp
mov
addr16
adc
out
je
xchg
and
fld
neg
jp
push
mov
adc
div
fisubr
jo
jnp
sbb
aad
test
test
xchg
hlt
into
add
jae
cmp
sbb
shl
dec
jl
sbb
mov
mov
xchg
xor
dec
sar
or
sbb
and
stos
mov
jl
and
ss
test
sbb
fld
dec
inc
jae
push
(bad)
push
(bad)
mov
mov
ja
inc
jbe
pop
movs
call
cmp
adc
je
jns
sbb
push
enter
sbb
xor
lods
sahf
xor
mov
test
inc
(bad)
mov
pop
adc
das
(bad)
jecxz
mov
mul
aaa
lock
mov
push
xchg
push
call
xor
pop
pop
mov
mov
fnstsw
outs
mov
fidiv
pop
dec
inc
jmp
outs
xchg
mov
cmps
xlat
mov
outs
scas
cmp
xchg
(bad)
jbe
push
jl
fs
out
adc
outs
mov
add
mul
loopne
pop
call
xor
xor
and
push
ror
xor
jg
push
push
scas
inc
adc
ins
ds
push
mov
mov
mov
aaa
sbb
or
fucomp
fcomp
sub
xchg
or
leave
je
xchg
push
fldenv
jbe
cmc
push
aas
out
pop
adc
aaa
sub
xchg
and
push
xor
cmps
hlt
push
lods
sar
xchg
repz
add
pop
pop
xor
jecxz
fwait
jb
jecxz
fst
ret
jb
in
bound
or
(bad)
xor
jmp
jo
pop
loopne
adc
popf
je
loopne
add
dec
in
adc
cmp
loop
jge
mov
or
or
adc
or
push
(bad)
retf
stc
xor
call
jmp
stos
dec
adc
rcr
icebp
sbb
retf
push
(bad)
retf
lahf
inc
pusha
push
jns
scas
sbb
dec
mov
jne
fmul
adc
scas
dec
push
rol
mov
mov
mov
fsubr
inc
mov
sub
or
pop
push
lea
fdivr
mov
sub
push
jecxz
neg
lods
stos
pusha
push
gs
fadd
fucom
adc
mov
sub
aad
fs
mov
addr16
inc
add
pushf
jno
mov
mov
cmp
(bad)
pop
repnz
pop
das
mov
test
push
mov
push
mov
test
std
xor
push
pop
mov
xor
pop
(bad)
jno
ins
pusha
mov
or
jl
sbb
adc
pop
outs
ins
fcom
movs
mov
jmp
dec
rol
mov
add
jp
push
rcl
(bad)
ins
pusha
mov
add
add
cmp
nop
in
(bad)
les
adc
repz
push
add
gs
(bad)
mov
cld
push
leave
push
sbb
adc
je
or
movs
sti
jno
fsub
sub
movs
cmp
or
fidiv
loop
(bad)
stc
popf
adc
mov
jmp
xor
dec
test
pop
mov
dec
push
(bad)
repnz
sub
inc
(bad)
inc
xor
popa
jl
mov
lock
cdq
ins
xchg
sub
pop
inc
pop
pushf
push
and
mov
xor
popf
scas
cmp
pop
lods
or
push
xor
into
stc
popa
into
cmp
out
mov
test
inc
sub
and
pop
aam
das
imul
call
les
clc
mov
test
xchg
fisttp
pcmpeqb
loop
fs
cmps
clc
cmp
lods
xchg
add
int
ret
ret
jae
cmps
cs
xchg
push
sbb
in
enter
sub
mov
sbb
pop
adc
pop
mov
mov
cmp
dec
mov
push
(bad)
loope
outs
lods
movs
cmps
push
or
add
xchg
pop
call
dec
pop
jge
add
sbb
xlat
lea
and
push
jae
stos
paddusb
icebp
push
mov
es
inc
pop
fbstp
inc
out
retf
(bad)
jecxz
push
lock
in
retf
inc
xchg
rep
jmp
mov
push
fwait
push
and
ficom
stos
mov
and
ss
jne
pop
jge
lahf
and
iret
sub
fist
fsubr
jno
push
sahf
xor
adc
out
fwait
push
cwde
call
pusha
stos
pop
rcr
int3
repnz
mov
push
xchg
cmp
fldcw
sub
pop
in
xchg
fs
fnstenv
aam
pusha
fild
addr16
push
retf
xchg
dec
lods
enter
xlat
inc
loop
pop
jo
pop
outs
stc
test
jp
test
sbb
push
cmp
mov
adc
sbb
(bad)
push
lahf
push
or
popf
jb
in
aaa
jecxz
cmps
gs
mov
mov
std
inc
xor
mov
mov
inc
push
mov
cli
xor
int3
stc
fld
mov
and
inc
(bad)
dec
dec
std
inc
or
test
xor
not
cmp
and
scas
jecxz
sahf
in
cld
cmp
scas
outs
shr
imul
bound
jbe
leave
arpl
test
test
pop
stc
cmps
and
mov
push
pop
add
inc
mov
dec
cmp
in
mov
ficomp
jne
xchg
(bad)
mov
loope
aam
xchg
or
out
cld
mov
xchg
lods
or
sbb
inc
(bad)
cmp
stos
add
sbb
mov
inc
or
mov
pop
(bad)
out
or
fdivr
cmp
(bad)
out
jne
xchg
or
lea
test
dec
les
imul
fisubr
jb
inc
shl
push
(bad)
sub
sbb
xlat
(bad)
movs
rol
in
dec
(bad)
push
fistp
lds
mov
repnz
mov
into
popa
push
daa
mov
ja
out
shl
fwait
pop
loop
cwde
stos
cmp
ss
xchg
push
mov
frstor
jbe
xchg
(bad)
cmp
and
jge
cs
lea
inc
clc
fimul
rol
call
addr16
leave
pushf
cmp
retf
mov
mov
(bad)
pop
scas
add
aad
out
pop
xchg
cwde
add
or
mov
es
out
jg
xchg
sub
data16
mov
shr
push
mov
stos
xchg
ret
rol
out
xor
ror
mov
inc
mov
mov
mov
loopne
mov
push
cmps
lea
stos
into
loopne
dec
mov
cmc
ds
daa
mov
xor
nop
in
add
xlat
ficom
and
and
sbb
push
rcl
jmp
xchg
jbe
test
aam
fucomp
shr
and
clc
and
mov
adc
cs
jl
pop
mov
retf
punpcklwd
jle
dec
mov
retfw
shl
mov
sub
dec
jae
cmp
mov
aam
movs
iret
sbb
cmp
fdivr
hlt
aad
out
mul
scas
jmp
xlat
pop
lea
mov
cli
repz
scas
arpl
add
mwaitx
add
lahf
std
mov
jge
dec
xor
pop
mov
in
push
lods
mov
shl
sbb
push
(bad)
clc
cwde
loope
out
(bad)
sahf
arpl
pushf
test
imul
cmp
(bad)
arpl
jmp
stos
js
pop
jno
in
mov
rcr
push
fs
cdq
mov
mov
fbld
xchg
sbb
sub
push
out
inc
cmc
mul
dec
xor
xlat
call
mov
neg
ss
and
sbb
sar
pop
pop
xchg
call
cmp
in
call
(bad)
js
in
sar
fdivr
push
push
or
push
inc
adc
fistp
ins
ja
and
mov
add
bnd
enter
int
mov
scas
retf
cmp
mov
sbb
lods
mov
adc
pop
scas
mov
movs
aad
into
or
fwait
mov
ins
outs
pop
pop
mov
jne
ja
pusha
mov
repz
and
push
pushf
xchg
lds
sbb
hlt
adc
push
test
in
not
mov
xlat
test
les
mov
adc
xor
sbb
ret
pop
(bad)
int
adc
repnz
mov
push
jmp
add
sti
dec
int3
imul
test
pop
jmp
mov
push
sub
retf
mov
nop
push
(bad)
js
ss
movs
and
(bad)
pop
fdiv
test
push
sub
mov
mov
out
and
xlat
mov
out
aad
imul
std
daa
sbb
sub
jmp
sub
jo
mov
xor
mov
sub
ret
into
sbb
and
mov
in
stos
ja
shl
and
cmp
mov
(bad)
xlat
nop
test
popa
jmp
add
aam
or
mov
push
mov
mov
add
aam
call
mov
(bad)
fs
out
xchg
or
dec
or
add
inc
jo
mov
jp
repnz
jno
jno
inc
cwde
pop
push
sub
sbb
inc
jns
push
cmp
inc
jmp
add
int
in
and
movs
jmp
sub
xchg
cwde
sbb
into
or
dec
xchg
imul
(bad)
fdiv
or
adc
jb
(bad)
loop
xchg
pop
jl
cwde
or
enter
cmp
shr
inc
mov
ins
js
xor
mov
outs
jno
fidivr
cld
dec
movs
loopne
daa
(bad)
int
and
push
push
sar
(bad)
into
mov
mov
cmp
cld
jle
or
arpl
lods
ins
or
jo
push
pop
mov
adc
es
test
xchg
movs
lods
adc
in
or
push
or
pop
in
fnstsw
loop
adc
imul
or
movs
jmp
(bad)
xor
stos
mov
adc
xor
iret
sub
sub
aam
mov
ds
lods
lgs
xchg
or
xchg
(bad)
jns
or
cmp
ror
jge
mov
cs
(bad)
scas
ins
cmp
(bad)
in
mov
inc
sub
xchg
xlat
retf
nop
sbb
pop
jo
dec
xor
sbb
loop
mov
cmp
dec
stos
movs
and
(bad)
mov
sar
sub
mov
and
inc
ret
inc
sbb
xor
inc
cld
out
dec
call
in
(bad)
mov
pop
mov
scas
inc
nop
push
fimul
mov
test
and
and
push
dec
fs
(bad)
call
in
lds
jae
add
add
les
mov
cmc
mov
jae
jge
loope
xchg
(bad)
mov
xchg
jp
movs
mov
loopne
pop
push
and
cmc
xor
leave
arpl
pop
cmps
mov
lahf
pop
imul
fucomi
ins
js
(bad)
lods
push
or
jmp
cld
dec
fst
gs
dec
cwde
push
idiv
sub
sbb
and
and
icebp
ret
mov
xor
stos
ins
dec
ins
hlt
add
mov
icebp
sub
cmp
dec
rcl
jmp
cmps
inc
outs
nop
xor
ja
loope
mov
inc
popf
test
pop
cmp
imul
pop
jge
adc
int3
in
jmp
outs
mov
fsubrp
mov
lods
inc
call
test
retf
div
jno
outs
jns
add
sar
add
out
loope
push
jo
xchg
gs
push
dec
mov
jmp
jge
push
loope
xor
sbb
in
adc
loope
push
mov
test
inc
mov
jnp
mov
inc
pop
enter
xchg
fld
jo
xor
inc
pushf
bound
jo
fcom
dec
xor
jg
out
or
push
fisub
pop
cmc
add
call
cmps
jno
lods
inc
mov
aam
(bad)
hlt
hlt
popf
fnstsw
pop
ds
cmp
pop
pop
in
scas
loop
das
(bad)
sub
inc
dec
stos
(bad)
jno
nop
or
push
inc
enter
mov
scas
sub
(bad)
sti
jg
mov
les
add
or
aad
repz
mov
nop
push
popa
mov
fld
pop
add
mov
and
or
inc
ins
mov
jno
das
stc
cmp
push
sahf
sub
jb
sbb
test
dec
inc
loope
hlt
out
movs
pushf
hlt
push
into
stos
subps
(bad)
xor
adc
push
ret
jmp
cmp
or
dec
dec
shl
es
cmp
test
mov
sub
mov
xor
push
rep
and
dec
inc
sub
addr16
sub
dec
sahf
sbb
fdiv
sbb
mov
xlat
outs
mov
dec
loopne
cld
adc
adc
xchg
ja
fbld
leave
shr
out
jbe
dec
sbb
cmp
test
mov
mov
lock
mov
scas
(bad)
push
mov
sbb
push
sub
nop
cs
ins
(bad)
mov
out
lods
cli
push
neg
xchg
out
retf
cmc
in
ins
jmp
cmp
scas
adc
pop
je
ja
std
out
or
add
retf
xor
cld
gs
(bad)
fcmovb
inc
inc
push
arpl
mov
psubb
test
xor
lods
repnz
xchg
cwde
mov
cmp
test
xchg
mov
sbb
cmp
push
mov
gs
popa
add
and
push
or
and
int3
push
pop
push
inc
pop
stc
fidiv
and
mov
cmp
rcr
add
push
and
or
fstp
inc
sub
mov
scas
movs
js
mov
int3
and
push
mov
test
jnp
stos
pop
call
stc
jae
in
cmp
sti
dec
cmp
add
xor
jae
cmc
je
jecxz
mov
sar
inc
mov
mov
int
add
mov
bound
and
and
lods
hlt
(bad)
pop
div
xor
repnz
popf
repnz
mov
leave
add
xchg
xchg
jecxz
mov
and
mov
push
sub
sti
adc
cld
xchg
xor
cmps
sub
movs
push
mov
aas
inc
call
jmp
ss
test
and
cmp
jle
cmp
or
loopne
cmps
pop
div
mov
cmc
or
fld
mov
mov
or
cwde
push
cmp
jbe
test
mov
xor
shl
fistp
pop
or
popf
or
xchg
sub
ins
mov
mov
sbb
adc
daa
aaa
aad
cmps
jecxz
add
add
shl
xor
lds
scas
jecxz
cmp
push
xchg
mov
shl
mov
(bad)
aam
add
mov
loopne
ror
repnz
aaa
xor
mov
stos
mov
movs
in
bound
loop
je
xlat
(bad)
xchg
sub
xchg
sti
push
jae
mov
fcomp
es
cli
out
add
xor
aas
enter
lods
mov
jno
ss
in
pop
cmps
ds
adc
iret
push
inc
jmp
mov
dec
dec
sub
and
mov
test
add
push
jmp
push
cmp
push
into
xlat
mov
call
jae
test
mov
daa
stos
aam
outs
pushf
inc
sub
inc
jne
nop
push
xchg
loop
imul
mov
mov
and
aaa
pusha
push
ins
xchg
fbld
adc
sub
cmp
sub
jo
add
nop
out
in
gs
jno
or
mov
mov
and
mov
push
sbb
test
rol
leave
jno
mov
pushf
sub
or
xchg
mov
leave
mov
(bad)
jne
mov
adc
inc
aam
sbb
jb
adc
mov
pop
jns
cmps
dec
(bad)
and
pop
adc
shl
or
ds
dec
test
ret
jg
mov
les
add
test
jns
jno
pop
pop
les
inc
xchg
in
movs
arpl
call
mov
add
mov
in
sub
fsubr
jmp
and
fcomp
movaps
lahf
lea
mov
pop
xor
in
iret
aaa
push
or
jge
mov
test
mov
push
xchg
inc
je
(bad)
xor
(bad)
repnz
rol
repz
pop
sub
gs
xchg
adc
out
sbb
nop
fmul
add
lods
add
and
and
sub
ds
jno
inc
jge
aaa
xchg
xor
loopne
add
jne
std
enter
loop
jl
fisubr
mov
lahf
arpl
or
fst
test
popf
pop
pop
xor
jl
fs
ja
ficom
pop
pusha
inc
movs
push
jbe
sti
mov
enter
int
jge
outs
imul
fiadd
jne
jp
fnstenv
push
loopne
mov
add
xor
mov
sub
lods
fidiv
lock
ror
pop
fs
jmp
out
jnp
cmps
mov
xchg
dec
out
and
xchg
sub
aam
out
inc
sahf
test
out
popf
fwait
xchg
(bad)
pop
jmp
fstp
jb
dec
bound
sbb
adc
xchg
ret
cmps
(bad)
pop
cmp
jp
pop
jmp
mov
xor
dec
out
gs
in
(bad)
rcr
scas
lods
rcl
bound
int
xor
inc
scas
fwait
add
icebp
jge
jge
inc
lods
jnp
es
(bad)
fnstenv
pushf
das
sar
in
into
sub
xlat
mov
inc
push
mov
and
test
pop
fwait
xchg
pop
bound
cmp
push
mov
in
fstp
cmp
pop
jnp
(bad)
stos
lods
nop/reserved
addr16
or
lea
test
xlat
push
xlat
pushf
mov
and
xchg
cwde
icebp
mov
bound
pop
push
jmp
mov
push
pop
pop
jb
sub
dec
inc
test
test
or
loope
add
adc
jae
mov
mov
std
sbb
imul
inc
aam
mov
or
in
inc
dec
cwde
or
fsub
pop
imul
retf
je
jl
mov
or
les
sbb
inc
pushf
pop
mov
or
xchg
jecxz
pushf
push
xchg
sub
xchg
cmp
mov
lock
mov
lahf
outs
lods
scas
and
inc
int3
add
cmps
dec
imul
inc
scas
es
call
sub
or
cdq
cmp
les
mov
arpl
lea
or
nop
retf
xor
mov
pusha
adc
dec
sbb
sar
sub
mov
mov
jbe
popf
xor
and
ret
adc
ftst
pop
push
clc
call
jo
sub
and
cmps
test
addr16
or
mov
cld
mov
push
mov
mov
jno
mov
mov
shl
fstp
push
ja
sbb
icebp
push
push
icebp
xchg
adc
dec
aad
fs
xchg
aam
mov
imul
push
xchg
dec
repnz
mov
(bad)
dec
or
aam
lods
sub
dec
jae
imul
cmp
pop
and
jns
sbb
stos
lahf
push
hlt
ins
repnz
ret
icebp
mov
aad
cmp
cmp
sub
test
sbb
xchg
and
push
cmp
out
push
push
sahf
test
daa
jnp
lds
cmps
ret
adc
and
out
cmp
mov
arpl
test
cmps
sar
in
dec
add
or
push
sbb
mov
xchg
push
adc
jmp
adc
call
rcr
push
jnp
stos
mov
clc
nop
xor
pop
in
mov
push
add
push
int
xor
ret
in
hlt
jmp
inc
or
cli
sbb
inc
(bad)
loope
outs
inc
jecxz
push
aas
cmp
scas
ins
inc
fwait
push
mov
inc
(bad)
push
gs
add
into
push
leave
pop
dec
scas
rcl
sbb
sub
pop
les
stos
pusha
pusha
sub
out
push
jns
fistp
push
mov
push
sub
jg
xchg
repnz
add
xchg
sub
not
call
call
adc
adc
push
inc
inc
xor
mov
sbb
and
aas
dec
pop
add
push
shr
(bad)
jmp
jl
sahf
push
(bad)
pop
jmp
outs
mov
sub
jmp
aad
inc
jnp
cdq
push
fadd
push
xchg
repz
cwde
out
add
jp
dec
enter
inc
sbb
pop
sub
xor
mov
mov
cdq
mov
iret
dec
js
scas
loope
mov
ins
inc
fdiv
adc
mov
sub
dec
scas
test
mov
pop
out
dec
mov
jb
cmps
cmp
inc
inc
test
mov
pop
(bad)
dec
fist
inc
popa
pop
inc
loope
sbb
fwait
push
lock
xor
and
test
pop
das
jmp
xchg
adc
add
scas
adc
push
mov
int
push
adc
mov
sub
xor
into
adc
push
and
xor
ss
out
out
mov
xchg
or
hlt
stos
je
jp
pop
sbb
pop
scas
test
dec
scas
jno
jl
pop
or
sar
clc
test
test
cs
pushf
movs
lods
jmp
inc
pusha
cmp
jnp
push
sub
cwde
cli
pop
mov
dec
jmp
dec
dec
mov
inc
loop
push
sti
das
mov
call
mov
mov
mov
mov
js
repz
outs
ror
jae
push
jle
in
mov
inc
cwde
test
test
idiv
sub
jle
inc
shl
sar
daa
sahf
sub
cli
std
sar
jbe
cli
cmps
dec
add
xchg
add
sub
mov
mov
and
xchg
xor
loop
mov
and
mov
dec
mov
pop
cli
fwait
adc
in
ret
out
push
(bad)
jl
fbstp
(bad)
jg
adc
pop
or
fnstenv
shr
or
jno
pop
call
add
pop
fdivr
int3
icebp
pop
fdivr
mov
pop
jmp
daa
inc
push
adc
ja
mov
mov
sbb
in
jl
adc
icebp
jno
jb
shl
adc
lahf
es
xchg
xor
cwde
(bad)
xlat
lea
xor
xchg
fprem
push
icebp
mov
mov
add
push
mov
pop
aaa
sahf
leave
jns
and
(bad)
mov
push
sub
mov
repz
imul
jmp
dec
icebp
loope
push
pop
cmp
ins
cmps
mov
out
aad
call
sub
fsub
cmp
or
mov
gs
cmc
(bad)
in
mov
test
push
sbb
cmp
sub
sub
sahf
xchg
mov
push
mov
xor
sub
lock
mov
je
mov
push
push
test
push
dec
xchg
nop
add
je
rcr
in
(bad)
in
(bad)
aas
mov
cwde
xor
and
pop
adc
js
(bad)
inc
add
sahf
mov
sbb
mov
lock
adc
lea
xor
aas
aam
pop
ins
aas
test
and
pushf
cmps
sbb
into
xor
cs
ret
inc
fwait
xor
push
and
xor
out
inc
lds
fistp
sbb
dec
icebp
mov
fnstenv
inc
xchg
out
fldenv
jl
ins
mov
mov
clc
pop
lea
xchg
add
scas
out
in
jno
aam
xor
mov
jmp
test
mov
clc
push
jb
js
lea
cmp
jmp
push
cmp
aam
xor
adc
(bad)
rcl
cmp
lahf
rcr
push
sub
sbb
enter
pop
(bad)
inc
shr
fs
xchg
fwait
ror
xor
enter
push
cmp
and
inc
(bad)
mov
daa
cli
outs
fiadd
jmp
je
mov
ins
sbb
xchg
mov
mov
dec
sbb
pop
sbb
nop
shl
repz
cmps
adc
fadd
xchg
not
rol
test
jne
push
add
adc
fs
sub
lea
loopne
or
cmp
add
fs
and
push
xchg
pop
daa
mov
push
cmp
js
cwde
sub
out
sub
jle
sub
mov
cmps
stc
test
xor
mov
cli
mov
dec
add
mov
in
(bad)
cli
mov
mov
ins
sub
push
dec
jge
aaa
mov
pop
pusha
pusha
xor
cmp
lods
pop
movs
add
mov
push
adc
cld
push
jg
sar
scas
fld
mov
mov
sbb
neg
mov
sti
retf
lea
jge
dec
cmp
dec
clc
push
mov
add
retf
test
sub
cwde
imul
call
ret
pop
(bad)
pop
dec
inc
ins
iret
lods
dec
pop
xor
dec
movs
inc
dec
xor
xchg
movzx
mov
inc
out
loope
mov
cld
sbb
push
loopne
push
imul
(bad)
clc
xor
mov
or
sub
inc
pushw
dec
sub
push
loop
loop
inc
xchg
pop
sub
mov
neg
or
daa
pop
mov
gs
aaa
retf
nop
test
lds
pop
adc
push
test
rcr
adc
shl
pop
lock
cmp
cmp
xor
add
ins
cmp
dec
add
ins
push
sbb
and
(bad)
test
and
dec
mov
mov
call
movs
hlt
sbb
jns
and
arpl
ins
pop
adc
jge
in
xchg
std
dec
push
outs
push
jno
(bad)
cmp
ror
push
shl
dec
pusha
aas
test
jp
mov
stc
and
sbb
popa
jo
mov
xlat
cdq
xchg
dec
and
les
hlt
repnz
in
xchg
add
loop
cmp
push
jb
cmp
lods
(bad)
enter
loop
out
fiadd
push
es
(bad)
mul
fwait
sub
lods
cmp
inc
rcl
inc
mov
not
ins
xchg
sub
fsub
ins
mov
rep
test
jae
cmps
loop
jecxz
icebp
xlat
call
cmp
mov
icebp
dec
cld
inc
and
test
xor
cld
adc
and
or
dec
dec
pop
xor
cmp
sub
pop
xor
sub
out
and
dec
pslld
inc
sar
mov
jp
divps
je
sub
push
adc
push
mov
rol
sbb
in
push
mov
pop
retf
scas
test
mov
add
int
stc
call
(bad)
sbb
jmp
add
in
popf
cld
inc
jmp
rcl
repnz
sahf
lods
push
test
mov
ret
cmp
or
cld
pop
add
inc
dec
fld
push
je
cmp
fist
or
add
data16
sbb
sub
jne
mul
outs
adc
test
outs
cdq
leave
xchg
ficom
push
popf
adc
adc
xchg
push
push
(bad)
les
sub
std
aaa
jno
jle
lea
cmc
cld
jo
enter
mov
sbb
or
outs
sbb
js
stos
sbb
popa
movs
adc
ja
sti
xchg
cli
xchg
mov
mov
movaps
sub
mov
cs
cmp
jecxz
push
cmp
and
popa
pop
into
out
push
cli
xchg
adc
out
sub
ja
inc
in
inc
cmp
dec
cs
sti
les
fldenv
outs
pop
xor
cli
fidiv
mov
mov
int
fsub
sub
fcmovnb
cs
add
ss
pop
inc
jbe
test
and
push
(bad)
(bad)
test
xor
or
retf
push
out
(bad)
and
mov
inc
push
pop
inc
and
aad
out
in
or
mov
mov
and
sub
cmp
cmp
add
jno
mov
push
addr16
mov
popa
pop
xor
jnp
pop
(bad)
jp
rol
mov
push
stc
inc
add
div
aad
xchg
add
inc
in
test
sub
jg
jmp
inc
dec
ja
jae
or
adc
fist
test
xchg
push
bound
es
bnd
and
push
inc
dec
inc
push
std
or
mov
inc
into
jno
jns
xchg
stos
outs
and
add
cmp
mov
push
add
jl
sub
xor
xlat
mov
dec
xchg
movs
mov
into
movs
adc
push
arpl
adc
movs
add
mov
call
inc
pop
add
out
aam
leave
sub
dec
inc
jmp
add
push
enter
xor
inc
jnp
xchg
add
aad
jmp
xlat
call
scas
scas
mov
push
cmp
push
add
inc
cdq
(bad)
retf
jne
push
out
xchg
mov
or
int3
scas
adc
xlat
mov
lahf
pop
cmp
retf
leave
jno
clc
mov
add
aas
je
out
(bad)
jmp
test
push
push
pop
xor
dec
mov
jl
add
mov
adc
add
mov
push
cmp
clc
add
push
inc
xchg
mov
dec
xchg
js
pop
das
cs
pop
jle
pop
jle
lods
inc
and
mov
ja
fdivr
ds
jp
lock
popf
sbb
retf
sbb
mov
and
adc
cdq
mov
pop
mov
out
sti
sub
inc
push
or
out
mov
dec
xchg
mov
retf
sub
pop
movs
mov
xchg
push
(bad)
icebp
lea
mov
pop
push
rol
xor
arpl
pop
jnp
fist
repnz
movs
jp
or
es
ret
or
inc
(bad)
(bad)
mov
iret
jle
mov
fcom
jno
jmp
retf
sbb
inc
fwait
xlat
cli
repz
sti
add
add
ja
push
popf
jle
les
jbe
data16
xchg
cli
rol
mov
cdq
test
xchg
retf
dec
or
inc
in
(bad)
outs
test
fwait
ror
dec
dec
dec
mov
aas
adc
add
xor
pop
dec
xchg
inc
hlt
add
popa
push
pop
inc
dec
add
mov
popa
enter
inc
dec
(bad)
fisubr
push
imul
cmps
jnp
or
(bad)
mov
push
pop
mov
gs
lea
(bad)
jno
cmp
push
dec
dec
inc
ret
clc
mov
je
js
mov
and
loope
aaa
mov
std
sbb
xchg
xchg
mov
cli
push
mov
mov
adc
push
lods
test
cmp
mov
test
inc
lods
stos
jbe
xchg
jmp
xchg
sbb
pop
mov
cmps
jb
xor
je
cli
lahf
lock
lods
cld
pop
mov
cwde
inc
clc
pusha
xchg
jmp
adc
dec
and
fst
add
loopne
pop
pop
es
dec
and
(bad)
jmp
jb
fs
jns
imul
in
sbb
adc
std
xchg
movs
pushf
hlt
and
cmps
gs
popa
outs
push
cmp
inc
dec
mov
push
pop
je
mov
loop
ss
icebp
outs
inc
ds
mov
hlt
inc
xchg
jno
adc
xchg
repnz
frstor
mov
pop
mov
push
adc
pop
loop
into
ins
addr16
and
mov
dec
int3
out
mov
int
add
xor
add
stos
iret
outs
out
gs
mov
cmp
and
fld
inc
idiv
jmp
dec
mov
ret
mov
jmp
test
pushf
adc
repz
lods
and
push
push
mov
(bad)
lods
sub
(bad)
dec
push
stc
test
and
xchg
stos
mov
dec
inc
sbb
jge
into
out
dec
or
sub
or
push
ins
fbld
xor
icebp
test
or
sbb
in
popa
and
shl
push
and
xchg
(bad)
adc
mov
pop
xchg
punpckldq
cmp
cmps
mov
push
call
dec
test
rcr
sub
mov
cmps
xchg
xor
cmp
je
jg
gs
repnz
cli
fidiv
pop
inc
push
nop
stos
sub
pop
xchg
xchg
daa
sub
cld
xchg
cmps
je
sub
fidiv
pushf
rcr
cmp
aad
out
imul
movs
jb
jmp
mov
cs
pop
push
test
aaa
adc
push
mov
mov
mov
push
daa
shl
cmp
cs
clc
imul
jno
add
or
dec
out
es
cmp
out
test
or
adc
sub
jg
(bad)
push
fnstcw
rcl
daa
mov
mov
inc
mov
cli
sahf
sbb
inc
std
das
int
dec
shr
xor
cmp
jne
xchg
(bad)
stc
outs
add
cdq
int
jg
mov
and
add
scas
pop
jns
dec
into
jmp
adc
sub
ja
out
rcl
or
inc
clc
xlat
push
sub
adc
pop
jno
popa
cld
mov
mov
xor
repz
inc
ins
scas
retf
mov
xor
cwde
mov
daa
pextrw
shl
mov
push
ins
mov
ror
outs
sbb
jb
push
out
popf
jns
cmp
and
fsubrp
and
loopne
gs
aas
mov
aas
mov
pop
cld
xlat
mov
jmp
xor
fist
stos
sbb
sbb
inc
lea
add
pusha
sub
fst
or
xchg
sub
cmp
mov
out
push
aam
test
mov
mov
cmp
add
enter
pop
lods
es
push
sahf
push
push
mov
lea
jmp
arpl
int
inc
sbb
iret
mov
mov
das
cmp
xchg
mov
movs
cmps
loopne
mov
lea
mov
sbb
test
inc
pop
cmps
and
pop
bound
rol
mov
(bad)
aaa
cmp
pop
jbe
movs
pop
xchg
add
jbe
mov
test
push
aaa
aad
adc
in
ret
aad
xlat
ret
sub
sbb
stos
jae
push
add
xor
sbb
loope
sbb
rcr
std
sbb
xor
aas
rcr
mov
push
sahf
scas
sub
sti
hlt
mov
or
dec
mov
retf
xchg
adc
mov
mov
(bad)
cld
rcr
cmp
cli
adc
jg
dec
inc
fmul
and
popa
(bad)
cmp
dec
imul
(bad)
push
dec
pop
jecxz
test
scas
pushf
fsubr
bound
dec
cmp
fmul
pop
aaa
fiadd
sbb
mov
cli
or
sbb
je
in
int3
stos
sub
lahf
in
push
call
cs
popf
data16
sub
dec
mov
dec
rol
arpl
pop
into
mov
inc
and
dec
push
push
shr
or
sar
leave
std
cmp
out
out
(bad)
push
add
push
adc
out
cmp
add
(bad)
push
pop
(bad)
jae
and
outs
in
pop
cmc
xchg
in
mov
cmp
or
cmps
in
call
loope
ds
push
fsubr
pop
add
pop
xchg
mov
mov
retf
or
xchg
enter
gs
popf
mov
and
jg
outs
sar
and
mov
and
rol
mov
push
inc
xchg
pop
add
iret
and
push
repz
stc
iret
mov
lock
mov
cmps
int
loopne
cvtps2pi
ins
pop
adc
xchg
fwait
push
call
or
xor
and
je
loopne
lock
and
xor
push
jno
fnstcw
in
sar
out
mov
jne
mov
sbb
pop
not
push
add
dec
in
push
arpl
push
adc
stos
ins
(bad)
cmps
out
mov
mov
repz
cld
adc
mov
out
xor
jg
stc
mov
add
mov
sub
jp
lahf
adc
outs
pop
sbb
dec
aaa
and
add
mov
loopne
mov
xlat
and
inc
(bad)
jge
sub
mov
shl
or
loop
pop
icebp
sub
loopne
arpl
icebp
sbb
push
popf
lds
sbb
xchg
clc
push
data16
(bad)
add
imul
inc
fld
outs
stos
jb
pop
pop
js
pusha
ins
pop
lock
(bad)
adc
mov
(bad)
ins
xor
add
xchg
inc
sub
add
push
adc
repz
and
inc
mov
or
out
pop
push
xor
popf
sbb
push
sub
dec
rcl
mov
shl
xor
adc
mov
push
ret
lock
mov
fsubrp
popf
pop
cwde
jo
add
(bad)
ret
dec
das
mov
aad
mov
mov
scas
ficomp
push
dec
adc
(bad)
rcl
mov
es
stc
sti
sbb
fistp
fucomi
xor
mov
(bad)
mov
pusha
xchg
pusha
ins
int3
fwait
scas
pop
(bad)
xchg
mov
f2xm1
mov
xor
pop
pop
mov
(bad)
mov
call
cmp
lock
mov
pop
dec
jb
pushf
mov
aaa
xor
mov
int3
mov
ficom
fdiv
cdq
or
pop
mov
mov
retf
out
or
cmps
pushf
fst
mov
jl
mov
jg
jmp
push
pusha
sbb
and
sub
imul
xchg
cli
icebp
je
arpl
test
mov
inc
sahf
shl
mov
into
sub
ret
enter
adc
mov
push
pop
loopne
cli
cmp
(bad)
xchg
inc
sbb
inc
pop
cmps
lds
mov
lahf
mov
imul
jl
shr
mov
rcr
(bad)
repnz
xchg
mov
sub
mov
out
(bad)
mov
imul
aam
inc
pop
mov
dec
mov
sbb
add
gs
out
xor
pcmpeqd
cdq
mov
cmp
mov
test
xchg
cmp
push
fisub
repnz
push
cmp
les
fisttp
fistp
add
push
xchg
nop
push
inc
pop
js
jp
and
dec
repz
mov
data16
ds
(bad)
fld
(bad)
out
or
movs
jle
jae
pop
add
imul
xchg
cmp
mov
jl
fsubr
shr
mov
icebp
cmp
mov
cmp
inc
pop
jbe
stos
mov
or
and
mov
rcl
push
push
xchg
mov
nop
pusha
xchg
xor
mov
mov
adc
jmp
test
xor
call
add
lock
xchg
out
gs
in
daa
dec
inc
shl
cmp
cmp
push
out
sub
mov
mov
inc
addr16
int3
jne
xlat
add
jecxz
lock
movs
mov
fidivr
cmp
pop
out
inc
pop
push
out
repz
jne
out
adc
mov
pop
dec
lock
ret
in
push
sbb
adc
(bad)
jo
pop
retf
adc
sbb
js
jb
std
mov
fidivr
imul
fisttp
dec
(bad)
lods
stos
or
pusha
push
sub
ins
ds
add
cld
jbe
leave
loop
mov
(bad)
dec
jo
xchg
and
mov
lds
mov
pop
sub
cmps
cmp
bound
std
dec
and
push
rcl
jbe
mov
push
mov
pop
loop
xchg
cmps
loopne
pusha
and
xor
xor
adc
adc
mov
stc
jae
(bad)
aam
jp
xchg
push
ss
aad
sbb
retf
cmp
mov
fwait
dec
push
adc
cs
leave
cmc
and
popa
enter
mov
retf
ffree
cmp
lods
add
gs
call
adc
fldenv
sbb
lock
fadd
pop
sbb
fcomi
call
nop
out
pop
cmp
cmps
jg
lock
aas
and
pusha
sbb
stos
rcr
pop
cmps
inc
fs
clc
and
sub
repz
in
xor
fneni(8087
clc
retf
or
fwait
pop
das
dec
ret
sub
in
nop
add
jnp
cmp
ror
test
cmp
enter
out
and
adc
shl
jae
mov
mov
loope
sub
xlat
test
test
leave
fisub
cld
jge
xchg
lods
sbb
aam
stos
add
pop
xchg
mov
loopne
movs
push
add
cdq
push
popa
xchg
in
fsub
sub
das
idiv
out
outs
int3
movs
mov
add
ins
int
popf
mov
jne
leave
xchg
jl
iret
jg
sbb
fsub
jmp
in
sahf
or
cmp
lock
jge
mov
pop
daa
mov
jl
test
dec
pop
ret
lock
(bad)
mov
fs
dec
imul
jg
mov
cmp
mov
dec
sahf
mov
mov
push
adc
call
xor
scas
cli
shl
inc
mov
retf
adc
push
add
outs
repnz
stos
sbb
(bad)
pop
ss
ret
(bad)
ror
not
cmp
adc
fwait
(bad)
data16
ret
(bad)
mov
mov
mov
pushf
mov
inc
stc
loop
outs
data16
out
fcomp
cld
mov
or
or
scas
or
mov
ins
push
mov
gs
ss
icebp
mov
(bad)
retf
and
inc
ret
fld
scas
mov
dec
test
stos
jmp
cmps
sbb
fidiv
dec
mov
test
icebp
jmp
iret
(bad)
inc
and
test
dec
mov
mov
fnstcw
das
ror
or
test
adc
std
popa
mov
cmp
movs
fs
push
inc
pop
jmp
ret
jo
and
fstp
leave
stos
lds
ret
stos
sub
pop
sbb
mov
pushf
cmc
in
outs
jle
neg
jb
sbb
pop
pop
add
fild
fcmovnb
cmc
cli
pop
int
add
cmp
jge
jne
and
dec
mov
xchg
aad
add
outs
call
dec
inc
mov
xor
ret
and
dec
push
inc
dec
jg
push
adc
and
retf
jle
mov
je
push
xor
into
sbb
mov
into
out
push
fdivr
jmp
shl
and
inc
or
hlt
xchg
push
aas
hlt
sbb
inc
bound
xchg
sar
pushf
(bad)
(bad)
push
pop
cmp
jo
cdq
shl
fsubr
push
dec
sete
add
push
movs
cmps
addr16
cmp
int3
dec
test
mov
lods
inc
loope
loope
pop
movs
and
dec
cmp
cmp
mov
and
push
aas
out
repz
loop
jb
hlt
nop
int3
dec
mov
mov
(bad)
rcl
mov
sub
fsubr
dec
aad
and
mov
mov
push
in
scas
and
sub
pop
pop
jnp
or
data16
(bad)
xor
xchg
inc
add
sbb
mov
les
sbb
call
push
test
shl
nop
push
stos
stos
sbb
and
cmp
mov
mov
jmp
outs
ficomp
daa
mov
cmp
or
popa
pop
pop
inc
aaa
jo
inc
jbe
data16
pop
or
retf
jl
mov
xor
sti
jmp
mov
scas
clc
mov
lock
sub
and
mov
dec
add
adc
inc
mov
hlt
pusha
addr16
cmps
iret
inc
push
push
retf
jmp
or
je
and
adc
test
jle
xchg
push
pushw
(bad)
mov
adc
add
(bad)
dec
cwde
adc
xchg
sbb
inc
fdivp
push
(bad)
(bad)
addr16
inc
and
les
cmp
and
out
xor
add
sbb
mov
inc
enter
xchg
test
addr16
dec
mov
mov
inc
mov
sub
pop
adc
in
leave
dec
xor
loop
push
sti
ins
clc
xchg
adc
sub
bound
sahf
call
dec
xlat
push
fld
add
test
push
mov
fs
lods
mov
call
into
push
lds
jae
xor
in
sub
rcl
dec
lea
add
lock
add
(bad)
fisubr
hlt
dec
or
push
pop
adc
mov
(bad)
or
xchg
sbb
scas
in
dec
cmps
js
inc
test
sub
leave
out
jae
retf
ficom
sub
dec
std
lds
std
jne
dec
out
mov
lods
jl
fadd
adc
add
mov
dec
push
int
pushf
add
inc
mov
fcomp
lods
ss
fnstsw
rcr
jb
mov
dec
arpl
mov
test
adc
in
outs
adc
bound
xor
push
test
shl
and
retf
mov
hlt
jmp
or
jno
push
add
jmp
in
mov
fcom
inc
push
ficomp
xchg
sar
cmps
xor
mov
cmp
cmps
mov
sub
fdiv
mov
add
mov
mov
push
inc
push
mov
push
frstor
fistp
sbb
(bad)
aam
out
call
cs
loopne
aad
je
push
leave
mov
mov
or
push
outs
inc
sti
test
xor
inc
fidivr
mov
jns
movs
sbb
jmp
lods
mov
sahf
inc
or
(bad)
addr16
aas
push
cli
sti
push
sti
test
lock
out
adc
retf
aaa
in
sbb
adc
nop
or
loope
lods
pop
dec
push
pop
push
(bad)
in
scas
sbb
pop
sbb
cmps
push
imul
clc
movs
movs
xchg
scas
cmp
loope
fucomp
mov
pop
dec
jle
fs
pop
inc
into
enter
dec
mov
das
sub
stos
ins
xchg
push
jge
dec
and
nop
mov
jb
pop
mov
addr16
into
cld
jnp
aas
lods
xor
shl
mov
jae
mov
sub
xchg
and
ror
ds
mov
mov
pop
mov
test
xor
jae
into
sub
retf
xor
sbb
cdq
je
cdq
push
mov
(bad)
cld
and
outs
jo
out
(bad)
push
lea
xchg
loop
mov
or
xchg
mov
lea
push
mov
xor
and
adc
dec
ss
sub
lahf
cmp
sti
jge
and
ret
and
sbb
outs
fadd
jle
jle
pop
mov
dec
ret
mov
enter
fadd
dec
or
dec
pslld
sub
jge
xchg
xor
mov
repnz
dec
jbe
int3
ins
mov
mov
fld1
imul
rcr
sti
sti
in
imul
fisttp
xor
mov
ds
sbb
dec
mov
pop
(bad)
hlt
dec
xor
push
xlat
sub
addr16
and
push
shl
out
jp
out
mov
mov
sub
add
inc
or
pop
sub
xchg
xchg
xchg
push
repz
mov
dec
jno
or
pusha
jae
stos
cmps
mov
push
inc
je
adc
sub
mov
iret
test
(bad)
cwde
clc
in
enter
out
imul
test
fstp
inc
lahf
int3
jp
movs
(bad)
(bad)
jns
dec
loope
jae
fimul
push
rcl
lds
out
sub
mov
inc
inc
dec
mov
mov
cmps
stc
test
fist
xchg
cli
cmps
aas
or
inc
inc
push
and
jmp
inc
out
ffree
arpl
sbb
push
fiadd
jl
mov
inc
aas
sbb
lods
shr
pushf
sbb
fcomp
inc
inc
sub
adc
enter
shl
out
lock
add
imul
xchg
bound
lods
test
or
jbe
mov
arpl
fsub
add
jl
stos
movs
(bad)
xlat
aas
mov
mov
mov
mov
les
fld
inc
lods
pop
dec
xor
ror
sbb
pop
xchg
and
cs
xchg
loop
and
sub
imul
add
xor
push
pop
imul
leave
sbb
in
shl
mov
push
movs
jp
adc
xchg
push
push
mov
pop
mov
lock
push
pop
xchg
cdq
xor
ss
sbb
test
iret
mov
in
retf
jge
sub
add
mov
xchg
fucomip
mov
pop
and
popa
jmp
push
xor
mov
cmp
dec
ret
daa
ins
test
xor
loope
mov
dec
icebp
fcmovnb
inc
lds
cmp
enter
ficomp
mov
ins
xor
jno
pusha
xlat
in
data16
sbb
mov
arpl
adc
repz
xor
jl
xor
cmp
mov
adc
and
jb
daa
fucomip
inc
and
test
push
stos
jp
or
or
mov
aad
cbw
lock
sbb
dec
enter
imul
dec
inc
mov
add
dec
push
lock
dec
xchg
fcmovbe
fcomp
dec
pop
push
clc
(bad)
(bad)
daa
push
push
push
scas
stos
mov
jmp
cmp
adc
and
xchg
in
sub
addr16
out
mov
frstor
sti
fidivr
adc
or
cmp
fnsave
pop
cmps
fdivr
mov
out
pop
(bad)
retf
rcr
icebp
cmps
sbb
(bad)
and
cwde
ss
enter
sub
dec
xchg
cmc
jmp
jne
sub
mov
mov
mov
jnp
stc
xchg
daa
pop
test
push
jmp
mov
fidivr
(bad)
js
jnp
or
sub
mov
push
mov
jmp
arpl
sbb
ret
xchg
or
mov
(bad)
imul
push
push
gs
and
adc
and
and
jle
test
pop
repnz
int
rep
push
jbe
in
pop
(bad)
jns
xchg
ror
or
cld
pop
dec
in
jb
cmp
mov
sar
sub
pop
out
xor
pop
das
fisub
or
in
pop
jmp
or
bound
mov
hlt
(bad)
pop
or
jb
gs
xor
push
inc
mov
sub
mov
fisubr
aam
cmps
and
das
xlat
test
dec
push
lea
ret
ficomp
sbb
pop
fstp
mov
cld
out
or
aam
scas
arpl
mov
pop
cli
xchg
xor
add
jnp
test
sub
loopne
iret
scas
xor
push
push
mov
shl
jne
pop
fwait
or
pop
pop
mov
jae
lods
push
imul
js
inc
inc
clc
nop
std
popf
add
cmp
fnstenv
lock
test
pop
sub
xor
add
lds
cmp
(bad)
mov
cmps
(bad)
cdq
mov
jmp
jmp
inc
inc
ret
push
in
pop
jecxz
(bad)
mov
fimul
(bad)
out
cli
lahf
xor
cmp
jb
clc
js
ret
inc
icebp
imul
mov
inc
shr
cmp
les
mov
dec
push
mov
mov
stc
push
loop
pop
pop
add
cmp
mov
and
pop
xor
int3
adc
mov
xor
sahf
dec
sub
retf
cli
add
adc
ins
inc
ja
xchg
cs
xor
jl
ss
aaa
outs
mov
call
mov
inc
sar
cmp
dec
inc
repnz
stos
repz
mov
out
sbb
sub
push
inc
xchg
es
xor
aaa
rcl
inc
int
pop
adc
cmps
cs
jle
aam
push
aad
(bad)
loopne
pop
out
repz
sbb
jle
pop
add
(bad)
cmp
mov
test
dec
es
retf
cmp
and
inc
leave
push
mov
leave
in
stos
or
sbb
cmp
mov
jmp
mov
or
call
and
inc
push
cmp
push
mov
push
add
test
bound
mov
ss
retf
rcl
stc
ret
cmp
dec
sbb
shl
popa
fistp
mov
(bad)
fldz
nop
loope
pop
sub
test
mov
aad
push
daa
mov
iret
mov
pop
imul
xor
cmc
data16
mov
xchg
pusha
xchg
sub
popa
sbb
xchg
or
hlt
je
call
mov
xchg
(bad)
xor
mov
push
ficom
movs
data16
ficomp
sahf
inc
sbb
inc
jle
inc
mov
jg
or
push
jo
shl
fcom
ret
daa
loope
mov
lods
popf
xchg
sbb
cmc
and
lea
jbe
mov
lods
mov
outs
test
mov
jno
clc
xchg
sub
mov
scas
(bad)
xor
rcl
and
cld
add
mov
mov
cmp
adc
pop
mov
es
mov
scas
jae
mov
cmps
inc
push
pop
pop
jmp
and
or
push
inc
fistp
cdq
test
test
pop
call
mov
mov
sub
push
push
lods
and
dec
test
ds
sub
(bad)
sub
js
and
push
sbb
ins
mov
cmps
adc
mov
imul
mov
dec
inc
xor
fsub
es
xchg
ret
add
cmp
cs
xor
push
sbb
fistp
aam
fadd
inc
ja
fistp
mov
mov
xor
push
pop
xchg
(bad)
mov
out
sub
and
mov
jo
jmp
(bad)
sbb
pop
mov
mov
jp
out
out
sbb
ins
and
mov
cld
out
sbb
lahf
not
push
bound
xchg
mov
nop
into
faddp
or
out
xchg
movs
inc
in
adc
stos
inc
fsub
test
arpl
adc
sub
jne
inc
mov
and
nop
outs
clc
imul
je
or
xor
adc
lods
aas
pop
push
pop
sbb
xor
aaa
fcom
mov
leave
mov
pop
ret
jns
add
fldln2
xchg
or
xor
addr16
pop
cmp
lock
movs
push
imul
out
push
mov
out
mov
sbb
(bad)
sbb
mov
jns
push
xor
pushf
in
adc
mov
push
outs
call
inc
sar
pop
push
cdq
fs
cmp
or
aaa
aaa
pop
and
cld
add
xchg
mov
retf
jp
push
add
add
scas
loop
xor
inc
adc
rcr
mov
mov
retf
push
bound
fxch
mov
lods
mov
push
sbb
mov
test
and
sub
jmp
mov
mov
xor
cmp
xchg
aas
push
shl
sub
sahf
add
ret
adc
add
mov
push
out
jae
push
ins
xor
enter
cli
adc
arpl
adc
and
pop
adc
sbb
sub
jo
adc
enter
and
xchg
push
int3
xor
mov
and
test
addr16
arpl
jne
jle
push
jns
ds
loope
dec
mov
sbb
xchg
xchg
jnp
pop
push
repz
cdq
dec
in
ret
add
rol
pop
loop
test
cmp
or
xchg
cli
retf
pop
pop
lea
sbb
mov
popa
aaa
adc
jb
dec
stc
add
and
pusha
nop
sub
sub
and
jp
jno
popa
pop
sbb
int3
pop
lods
popa
xchg
ja
scas
call
ins
data16
jg
int3
nop
and
mov
in
mov
inc
ret
pop
movs
xchg
or
sbb
daa
loopne
sbb
mov
jg
push
adc
ds
mov
sub
shl
jge
jbe
pop
jno
ins
sub
ins
je
mov
cmp
ds
sub
(bad)
in
aam
sub
sub
inc
nop
mov
cmp
mov
mov
mov
lea
jae
lahf
jmp
and
push
xchg
rol
jmp
imul
mov
lods
mov
pop
jp
cmp
cmp
mov
dec
xchg
ja
push
aaa
gs
adc
shl
xor
test
pop
jno
xchg
out
in
in
push
xor
daa
les
add
jmp
and
arpl
scas
xor
clc
gs
push
fs
push
jb
out
push
shl
mov
(bad)
jno
cmps
icebp
lods
fisttp
icebp
ss
imul
add
adc
mov
push
test
mov
xchg
xchg
sub
in
inc
out
dec
sub
adc
inc
adc
cli
jae
int3
aas
inc
(bad)
shr
daa
cmp
xor
pop
fwait
pushf
faddp
pop
sbb
cmp
sub
inc
push
mov
(bad)
shld
ins
adc
enter
ins
inc
sub
daa
sbb
shl
test
push
fstp
mov
outs
xchg
push
mov
outs
sbb
adc
inc
int
cmps
pop
imul
mov
mov
outs
xchg
lahf
jne
cld
cmc
mov
popf
push
mov
popa
xor
into
pusha
neg
arpl
aas
cwde
dec
mov
leave
jno
in
rol
push
push
cli
stc
cs
sbb
xor
add
pop
mov
outs
jmp
out
je
enter
int3
repnz
adc
shr
test
push
add
mov
or
and
adc
in
scas
pop
fidivr
push
out
(bad)
mov
into
aad
in
daa
scas
(bad)
jno
not
adc
fstp
les
push
aas
stos
or
data16
retf
movs
xor
sbb
repnz
in
rcl
lods
and
mov
push
push
pusha
fadd
imul
xchg
pop
mov
movs
sbb
nop
rcr
push
xor
rol
iret
aas
xchg
fdivr
inc
lods
pop
ss
cwde
mov
inc
add
ror
out
je
inc
in
jmp
push
mov
mov
cs
push
xlat
in
ret
adc
push
push
repnz
xlat
mov
enter
out
and
ins
xor
xor
jno
add
(bad)
fucomip
mov
sbb
xchg
iret
and
jnp
jl
pop
int3
rcr
push
dec
cmp
test
jnp
int3
popa
dec
fcom
nop
mov
mov
mov
fst
loopne
fwait
pop
movs
cmps
out
adc
test
xchg
cmp
imul
test
xchg
cwde
sub
adc
retf
nop
xor
jb
lea
in
outs
ja
movs
data16
xor
push
xor
push
or
xchg
push
shl
jmp
mov
call
xchg
mov
jp
xor
fld
arpl
dec
push
mov
ds
(bad)
inc
jb
movs
nop
and
mov
out
pop
and
or
push
frstor
push
ret
mov
(bad)
paddb
fwait
rcl
or
push
mov
xchg
jp
pop
jnp
dec
enter
(bad)
sar
jle
cld
and
cmps
outs
repnz
mov
fld
iret
cmp
je
(bad)
mov
jmp
das
xchg
inc
mov
movs
mov
inc
ret
mov
adc
dec
dec
(bad)
pop
mov
jne
sub
mov
scas
fnstenv
sub
dec
(bad)
daa
js
cmp
pop
mov
pop
or
or
fwait
stos
push
fs
ret
mov
or
(bad)
outs
push
xchg
dec
pop
mov
adc
xor
adc
rol
movs
push
mov
pop
lock
scas
cmp
in
dec
xchg
aaa
mov
jle
cmp
(bad)
shr
test
shl
ret
add
xchg
xor
dec
fist
in
or
sbb
jb
fcomp
or
inc
push
push
add
mov
sbb
cmp
xchg
test
xor
sbb
lahf
and
inc
fiadd
stos
nop
cmp
aad
stc
pusha
retf
xor
mov
sbb
cmp
or
xchg
xchg
xor
mov
and
inc
fwait
aad
stos
mov
mov
pop
adc
lahf
shl
nop
test
xchg
daa
adc
mov
cli
fidivr
ds
push
or
lahf
mov
push
mov
loop
mov
push
cmp
jle
test
mov
push
adc
test
loop
dec
inc
aam
in
sbb
retf
lock
loopne
mov
pop
sub
jno
sbb
imul
jge
mov
(bad)
ficom
dec
add
dec
push
(bad)
sbb
std
or
pop
std
xchg
hlt
test
or
outs
fldcw
add
sub
mov
xor
mov
stc
mov
xchg
mov
cmp
inc
xor
inc
adc
aam
test
dec
(bad)
icebp
std
(bad)
jb
addr16
or
in
xor
adc
test
lods
std
fmul
aas
leave
jbe
jl
call
or
xchg
nop
popf
mov
mov
mov
push
and
and
movs
cmp
mov
dec
sub
js
movs
add
stc
fstp
cs
movs
idiv
pop
sbb
pop
sti
adc
and
adc
fcomp
int
xor
in
adc
popa
mov
scas
xor
cmp
or
fistp
idiv
int
push
pusha
lods
adc
enter
push
mov
fadd
jmp
push
jl
cmp
test
into
lock
sar
arpl
fdivr
mov
pop
jne
ret
jns
push
mov
popa
cmp
scas
sar
sub
test
out
xchg
adc
jo
mov
aaa
sub
inc
stos
mov
retf
scas
out
lea
test
inc
adc
jecxz
mov
and
loop
ins
aaa
fimul
or
or
fs
scas
popf
clc
jp
fmulp
or
in
cli
dec
ins
sub
pop
ins
sbb
arpl
mov
je
adc
cdq
sahf
fidiv
imul
pusha
test
add
sbb
mov
arpl
rcl
add
enter
test
ins
scas
xchg
repz
imul
mov
shl
cmp
pop
mov
loope
inc
mov
(bad)
movs
push
addr16
mov
push
xchg
sub
call
or
retf
loopne
mov
inc
cmps
test
lods
out
and
mov
mov
jge
loope
jge
mov
sub
std
ret
sub
inc
repz
in
popa
cmps
xorps
add
xor
hlt
add
adc
inc
jl
jb
jecxz
ins
xor
xchg
jno
fnsave
retf
fistp
sub
xchg
scas
(bad)
imul
mov
jecxz
pop
dec
sub
push
inc
lock
xor
mov
add
jmp
rcl
into
test
out
adc
or
fs
and
es
pop
ja
mov
mov
mov
cdq
mov
mov
mov
pop
cld
cmp
(bad)
xchg
and
mov
mov
push
icebp
retf
mov
fdivr
imul
pop
je
scas
outs
sbb
mov
xor
inc
and
mov
add
outs
pop
sbb
arpl
jp
or
pop
movs
dec
pop
ror
(bad)
stos
xor
sbb
cmp
xchg
mov
xlat
dec
jb
sbb
sti
mov
pop
push
int
lods
jno
arpl
fs
(bad)
loopne
mov
stos
adc
cdq
stos
cld
es
jo
mov
dec
test
and
pushf
loopne
or
push
loop
or
ja
or
leave
push
add
pop
es
or
xchg
dec
out
xchg
add
pop
data16
xchg
mov
jno
mov
sub
jmp
jnp
stos
and
call
fcomi
pop
aam
retf
mov
mov
(bad)
je
idiv
adc
xchg
retf
dec
(bad)
push
sbb
xchg
cmp
pop
mov
ds
stos
cli
and
dec
push
mov
dec
pop
not
into
hlt
out
lea
jmp
add
(bad)
xchg
sbb
dec
add
mov
imul
push
ins
add
lock
stc
xchg
push
in
mov
adc
add
mov
mov
push
xor
and
shr
pop
lds
loopne
and
pcmpgtd
ret
mov
jno
mov
and
icebp
sub
ins
push
icebp
or
xchg
xor
adc
or
mov
mov
xchg
out
out
lahf
jp
and
dec
cmp
sbb
cmps
mov
adc
sahf
xchg
movs
jbe
push
pop
inc
mul
ja
pushf
jmp
adc
lods
push
repnz
mov
cld
sbb
push
xor
lock
inc
pop
nop
mov
adc
cmc
mov
or
fdivp
loopne
xor
jmp
pop
inc
retf
aad
(bad)
push
fwait
stc
ret
pop
mov
aam
ret
mov
cmp
xor
shl
rcl
and
dec
sbb
fisub
pop
rcl
int
xor
mov
xor
adc
fcmovnu
jae
ja
pop
xchg
dec
loopne
nop
call
push
loopne
inc
in
mov
inc
jo
jnp
out
adc
out
stos
cmp
retf
pop
mov
or
ds
add
sti
and
jecxz
xlat
test
add
mov
je
jg
mov
dec
rcr
dec
test
(bad)
scas
push
lock
cwde
adc
or
or
js
xor
fadd
enter
jg
push
xor
out
cmp
push
mov
fldenv
fsubr
xchg
xchg
sbb
inc
jb
scas
xor
push
bound
pop
retf
add
mov
push
popa
aad
(bad)
cmps
sub
movs
shr
pop
sub
xchg
cmp
aaa
call
and
loop
add
les
fld
xchg
cmp
fistp
(bad)
call
test
aaa
leave
dec
lods
lods
jle
std
outs
outs
hlt
ins
dec
xchg
sub
(bad)
in
enter
mov
call
inc
lods
(bad)
pop
adc
dec
and
push
pop
push
fs
imul
adc
dec
inc
gs
pop
sub
pop
push
and
ret
int
aaa
call
pushf
sahf
sub
add
sti
cli
cmps
lods
inc
lods
shl
mov
lods
les
sbb
mov
jb
pop
gs
jo
imul
pop
loop
aaa
xor
rcl
mov
add
nop
adc
xor
mov
retf
aas
mov
mov
push
push
or
pop
sbb
ins
mov
jne
mov
int
inc
mov
dec
test
aam
cdq
or
std
sub
movs
dec
mov
cmps
mov
mov
mov
out
int
mov
xchg
inc
jb
in
fimul
movs
add
cmps
mov
cmp
ss
dec
mov
adc
pop
shr
repz
adc
xor
fiadd
shl
jle
(bad)
jno
jo
jae
push
jl
cmp
and
ins
shr
xchg
clc
push
mov
out
add
rol
sbb
or
mov
pop
mov
sub
push
lds
cmp
sbb
stc
adc
mov
in
xor
aad
clc
imul
adc
fistp
push
mov
and
out
mov
mov
cmc
adc
fld
pop
xor
cmps
inc
mov
mov
out
mov
adc
fcmovnu
pop
movs
ja
stos
aas
cmp
xchg
push
lds
fld
adc
imul
popa
adc
loop
pop
sub
add
cmp
jb
jmp
stc
pop
push
cli
mov
sbb
(bad)
jmp
dec
jmp
imul
aam
xchg
sbb
cmp
add
cmp
test
movs
or
jl
mov
pusha
push
adc
sub
jecxz
sar
test
or
push
dec
pop
daa
xor
jb
pop
mov
pop
inc
inc
pop
xchg
loopne
xor
sahf
add
push
scas
les
iret
mov
call
test
repnz
mov
fcmovbe
jecxz
pop
xor
jb
jge
gs
sbb
pop
sbb
push
or
jge
sub
in
mov
loop
out
loopne
sbb
or
repnz
mov
sbb
popa
pushf
popa
clc
mov
call
or
push
add
(bad)
lods
inc
cmc
jno
mov
adc
cmp
sbb
pop
mov
xchg
xor
adc
mov
inc
cs
mov
pop
and
sbb
cmp
imul
or
xchg
mov
xchg
in
shl
mov
das
pop
inc
add
dec
mov
mov
or
mov
imul
inc
aad
jmp
push
les
pop
test
pop
fs
add
jecxz
gs
sbb
mov
rol
movs
adc
test
xor
sar
stc
xor
dec
add
es
sbb
scas
dec
mov
sbb
push
fild
(bad)
mov
retf
or
mov
std
fist
nop
jg
shl
cmp
femms
scas
adc
repz
and
and
test
mov
hlt
enter
aas
and
jge
push
pop
pop
jb
xchg
add
aad
test
or
std
mov
aas
lea
inc
sub
pop
inc
jmp
pop
into
adc
loopne
addr16
rcr
repnz
out
retf
or
inc
pop
movs
push
xchg
fwait
shl
sub
adc
loope
(bad)
fidivr
push
jge
shl
cmps
cld
xlat
iret
push
mov
lock
dec
(bad)
mov
jmp
test
pop
repz
mov
sub
retf
mov
(bad)
jno
xor
dec
ret
adc
movs
xchg
ins
fidiv
adc
cld
ret
mov
scas
lods
cmp
or
mov
inc
or
mov
ins
push
sti
lock
imul
ret
pop
dec
aas
into
dec
or
in
lds
imul
dec
test
xchg
fnstsw
loopne
adc
cmp
(bad)
ds
loop
ret
or
nop
fbstp
(bad)
lock
add
adc
aam
adc
inc
lds
rcr
push
les
inc
lds
ja
out
dec
or
pop
jbe
add
lea
test
fcomp
(bad)
cmp
les
push
in
inc
icebp
sbb
pusha
mov
push
ficomp
jne
inc
jne
xchg
dec
call
out
sub
ja
sub
push
cmp
pusha
jnp
jne
(bad)
jg
inc
xor
sub
pop
fidivr
mov
iret
xchg
fldenv
lds
and
add
dec
movzx
cld
setne
cwde
and
int
mov
ja
push
mov
jg
fwait
lock
mov
fadd
repz
retf
or
out
shl
and
sub
sub
sub
inc
pusha
mov
pop
mov
ja
mov
adc
mov
loopne
jp
inc
and
imul
mov
jecxz
(bad)
(bad)
mov
ss
pop
rcr
shr
mov
pop
clc
lods
(bad)
aam
sar
sbb
or
cs
das
xchg
push
cmp
mov
mov
mov
mov
jbe
pushf
shl
in
adc
jmp
sar
push
imul
out
pop
imul
data16
(bad)
scas
das
xchg
fs
jbe
lock
or
pop
outs
sub
add
sub
dec
stos
out
mov
out
adc
xchg
hlt
pop
xchg
sahf
pop
jmp
ja
out
jp
fwait
sbb
ret
ret
mov
ficom
sbb
ins
sbb
je
jle
push
arpl
mov
push
out
add
jle
cmc
cmps
iret
call
loope
push
and
cmc
or
dec
mov
mov
dec
pop
inc
cwde
dec
add
std
icebp
push
aad
clc
popf
sub
call
inc
jmp
sbb
jnp
mov
xchg
call
jmp
mov
out
push
sub
shl
add
outs
fwait
std
sar
and
push
or
sbb
retf
mov
cmpxchg
inc
(bad)
sbb
push
test
pushf
jl
xor
adc
out
jbe
popf
dec
cmp
dec
rcr
and
push
cmp
inc
jecxz
mov
push
push
ss
dec
and
jae
imul
jmp
loope
iret
mov
inc
jg
imul
and
call
sar
loopne
mov
and
ins
mov
ins
test
lea
(bad)
pop
push
test
ss
outs
add
sbb
xor
jecxz
dec
or
loop
outs
in
add
jg
pop
fld
mov
push
out
je
xchg
aam
loope
daa
adc
jge
mov
adc
cmp
lea
jae
sub
hlt
mov
mov
popf
imul
(bad)
(bad)
pop
pop
jnp
idiv
xor
fstp
cmp
fs
jmp
adc
jl
xchg
xor
adc
mov
in
and
imul
addr16
mov
arpl
stos
loope
ss
xchg
push
xchg
mov
call
cmp
dec
xor
cmp
sub
cmp
dec
aam
mov
das
xchg
stc
out
add
data16
jp
mov
xor
pop
cmps
ins
scas
aaa
cli
dec
mov
pusha
mov
jb
push
mov
into
not
mov
mov
in
ins
fisttp
fcomp
push
mov
stc
pop
in
push
xchg
push
jmp
lods
dec
mov
enter
std
ret
add
cld
xor
fadd
test
addr16
or
xchg
push
test
(bad)
loop
xor
push
or
mov
dec
jmp
cld
or
dec
or
das
jp
adc
leave
xchg
ja
and
clc
rcr
jbe
mov
or
test
nop
cld
outs
out
mov
sub
pop
sub
mov
push
out
cmp
dec
js
out
cld
bound
fcmovb
push
inc
xor
dec
mov
pop
int
or
out
mov
push
pop
cli
adc
jns
jl
mov
lahf
jne
mov
test
ins
ret
ficomp
mov
outs
(bad)
(bad)
jmp
stos
test
mov
cmp
fs
arpl
jne
retf
adc
jnp
(bad)
arpl
test
mov
mov
scas
xchg
push
mov
jne
cld
jno
stos
ret
adc
sbb
in
fs
jl
add
loope
fcom
mov
cmc
lahf
(bad)
bound
lds
pusha
repz
in
fmul
push
nop
adc
push
fdivr
mov
push
(bad)
scas
jl
das
mov
adc
inc
cmps
xchg
fldenv
pop
mov
outs
in
mov
in
shl
std
mov
xchg
repz
mov
daa
in
mov
bound
imul
pop
jbe
push
sub
ss
dec
pop
push
add
lods
aaa
mov
movs
sub
xchg
lods
and
pop
into
cld
xor
dec
fild
mov
sbb
push
cmc
(bad)
dec
sub
sub
or
pop
outs
call
shr
pop
leave
mov
aad
addr16
add
inc
imul
outs
shl
inc
mov
xchg
das
xlat
div
(bad)
push
cmp
pop
push
ficomp
lahf
jbe
jge
mov
sbb
(bad)
repz
sahf
sub
push
mov
inc
cmp
push
or
bound
(bad)
xchg
mov
or
int
mov
mov
jns
mov
call
call
(bad)
stc
cmc
xchg
out
retf
test
mov
dec
aad
jb
mov
scas
stos
aaa
sbb
ror
cmp
scas
(bad)
cld
outs
lahf
sub
jg
jo
mov
rol
push
push
mov
xchg
sbb
mov
loopne
mov
dec
in
fbstp
jae
inc
push
ja
lds
jecxz
cmp
lahf
test
repnz
or
and
ret
fld
xchg
shl
dec
fisub
(bad)
imul
add
in
rcl
or
and
into
aad
mov
mov
mov
push
push
xchg
fisttp
pop
ins
pop
dec
out
xor
jb
popf
push
xchg
sub
ror
scas
xor
mov
(bad)
inc
xor
out
adc
ror
shl
jg
adc
ror
test
adc
push
jmp
lock
in
mov
fs
jle
xchg
xchg
push
sbb
or
out
adc
popa
inc
mov
cld
loope
sub
jp
jnp
cmps
dec
adc
(bad)
jg
fisub
fs
xor
add
sahf
adc
xchg
pop
and
mov
or
mov
sar
(bad)
call
xor
fsubr
pop
popf
sbb
in
and
aas
call
inc
daa
ins
sub
lods
clc
push
(bad)
es
inc
jbe
inc
iret
lods
jecxz
enter
dec
sbb
sbb
push
sub
pushf
inc
fxch
repnz
pusha
push
cmp
gs
push
clc
xor
xchg
cmp
movs
imul
cmp
loop
fistp
retf
cmp
sub
jp
dec
jne
and
adc
pushf
xchg
jge
push
xor
loope
xchg
stc
outs
inc
cdq
cmps
sub
and
test
xor
rol
aam
js
adc
xor
cmp
lods
jle
push
lahf
call
inc
ror
xchg
adc
dec
inc
pop
ins
(bad)
adc
add
pop
loop
mov
jge
(bad)
(bad)
jo
jmp
xor
dec
push
xchg
sahf
xchg
pop
mov
cmc
movs
adc
call
push
ror
fadd
sbb
(bad)
loope
add
and
les
jno
cmp
ret
cmps
mov
xor
fadd
pop
cld
out
sub
pusha
mov
push
push
int
aad
retf
lock
adc
std
xlat
in
in
sti
jp
dec
sub
and
fld
jmp
push
repz
xlat
popf
sbb
ins
jg
sub
call
lea
and
cmp
xchg
pop
dec
xor
and
aam
mov
(bad)
lods
aas
jno
mov
test
dec
es
data16
xor
cmp
sbb
psadbw
pushf
js
xchg
or
fwait
lahf
fst
les
sbb
repnz
mov
add
xchg
jno
retf
jge
cld
jb
imul
idiv
pop
pop
das
ror
out
inc
mov
xchg
pop
mov
pop
lds
test
pop
iret
jecxz
imul
cdq
daa
cld
dec
fld
adc
pop
mov
xchg
movs
jnp
jg
mov
ret
sbb
das
lods
out
push
ror
jmp
fcomip
xchg
jmp
leave
(bad)
xor
sti
cs
sub
cmc
sbb
ins
adc
dec
int3
jp
sar
loop
test
inc
push
in
nop
jns
dec
icebp
inc
repz
push
pop
pop
(bad)
fld
sub
(bad)
adc
inc
not
push
not
dec
mov
add
shl
neg
push
xor
sub
lahf
pop
dec
icebp
pop
in
xor
(bad)
dec
rcl
stos
and
pop
sahf
dec
push
mov
mov
mov
sbb
pop
je
jb
mov
xchg
mov
or
mov
out
in
fidiv
mov
fwait
clc
xchg
inc
sbb
fwait
adc
jl
mov
fisub
in
jno
sti
push
pop
cdq
sbb
test
inc
fisub
inc
mov
fwait
xor
(bad)
(bad)
pop
push
jae
mov
xor
(bad)
jno
imul
jnp
icebp
cdq
cdq
cmp
xor
gs
pop
clc
push
cmp
lock
(bad)
or
mov
mov
in
adc
cmps
ss
stos
or
test
aam
idiv
cmc
cmp
add
mov
aas
xor
push
pop
loop
clc
(bad)
push
out
or
rcr
jecxz
xor
pop
icebp
enter
sahf
aaa
movs
push
and
cmp
inc
mov
cmc
shr
cmp
and
loope
inc
pop
cs
das
sub
xor
inc
jmp
jb
jns
daa
div
mov
aaa
aas
int3
(bad)
push
in
cmp
pop
cld
sub
leave
mov
adc
pop
clc
and
mov
fs
xchg
pushf
scas
or
cmp
xchg
jmp
mov
inc
mov
fst
pusha
outs
cmp
mov
int
ja
push
lds
mov
xchg
push
mov
or
mov
cmps
call
xlat
xor
xor
xor
pop
ud1
retf
shr
or
adc
into
inc
xor
adc
imul
scas
das
cmc
mov
jle
cmp
pop
cwde
inc
dec
shl
nop
in
fisubr
arpl
inc
addr16
clc
cs
push
sti
bound
jmp
bts
ja
push
mov
adc
ins
fld
outs
out
ret
int
lea
dec
xor
pop
mov
xchg
in
jp
sbb
imul
stos
adc
push
lahf
push
into
ins
push
or
push
fwait
lods
mov
push
jne
sbb
sbb
cmp
push
or
sub
mov
adc
or
addr16
daa
movs
jno
dec
shr
sti
dec
inc
mov
(bad)
cmc
stos
loopne
xor
fst
je
adc
sub
sahf
arpl
in
cmp
(bad)
jmp
sub
js
cmp
add
clc
loopne
outs
mov
xchg
xor
mov
repnz
ds
jmp
xlat
xor
fcomp
(bad)
xor
js
arpl
sub
push
out
fimul
lds
call
pop
add
sub
(bad)
cld
gs
fidivr
cmp
adc
fwait
(bad)
addr16
add
sbb
repz
in
nop
cmp
into
cli
fbstp
mov
push
(bad)
mov
mov
cmp
xchg
fwait
mov
sbb
adc
pop
cli
repnz
xor
mov
xchg
cmp
mov
ss
out
or
cmps
xor
mov
aad
data16
cmp
mov
mov
aam
dec
pop
inc
(bad)
sbb
lock
adc
fsubr
cmp
cmp
push
xchg
adc
push
mov
(bad)
xor
sub
retf
jmp
and
jae
xchg
jmp
imul
inc
mov
out
nop
(bad)
mov
adc
clc
std
lahf
in
shl
or
call
or
xchg
jp
data16
imul
push
push
cmc
not
sbb
xchg
test
rcr
das
and
mov
out
(bad)
pop
xchg
mov
mov
jbe
mov
nop
xchg
and
cmp
aas
mov
pushf
inc
out
xchg
xor
scas
pusha
or
cmc
out
dec
pop
popw
aas
pop
inc
xor
ss
into
mov
ret
adc
add
or
sbb
xor
shl
pop
movs
fld
hlt
sub
pop
leave
not
jo
loopne
(bad)
(bad)
cld
leave
fcmovb
xor
jb
mov
xchg
stos
ins
jno
xchg
lods
rcl
not
loop
mov
jnp
mov
mov
jno
and
sub
rol
fcomp
addr16
jb
lahf
xchg
jae
or
jno
jne
js
icebp
xor
lahf
mov
mov
lds
dec
add
mov
pop
jae
stc
bound
into
jns
or
outs
call
dec
mov
pop
aaa
pop
retf
mov
call
and
ins
push
xor
popa
arpl
dec
mov
push
ret
data16
jne
push
out
mov
in
xchg
pop
jns
dec
pop
or
popf
dec
xchg
inc
clc
shr
clc
(bad)
iret
int3
ins
mov
jecxz
fadd
xor
nop
xchg
icebp
iret
rcl
mov
stc
xor
scas
jmp
mov
aad
mov
cmp
movs
adc
dec
dec
mov
pop
ror
and
inc
add
mov
sahf
mov
mov
adc
sub
xchg
or
in
fsub
add
and
repnz
adc
popa
lods
pop
push
push
or
loope
pop
or
add
xchg
xor
int
js
mov
retf
retf
pop
cmp
cmp
jmp
and
sti
pop
cmp
out
pop
(bad)
aaa
push
xor
mov
or
lods
jg
inc
xchg
call
cmps
bound
xchg
inc
sahf
xchg
sti
xlat
cmp
jae
scas
inc
fimul
sub
fistp
pop
push
or
inc
or
cmps
sbb
(bad)
(bad)
es
retf
adc
lahf
push
xchg
add
cmps
sbb
hlt
mov
and
shl
test
mov
mov
push
repnz
sub
daa
call
fsubr
aam
aas
add
sbb
into
or
xchg
xchg
sbb
dec
lock
xchg
sbb
inc
in
js
fisttp
add
mul
mov
cmps
push
inc
push
mov
dec
add
aad
cmps
xchg
or
jl
sbb
cli
adc
fcomip
push
gs
pop
cmp
adc
inc
or
mov
out
loope
dec
mov
hlt
xchg
jmp
jne
jo
cmp
sar
jle
adc
inc
sub
jge
mov
xchg
jg
jmp
mov
mov
in
scas
(bad)
lea
(bad)
push
sub
pop
xor
mov
xchg
cmp
jb
push
test
rcr
sub
and
dec
into
imul
add
out
push
pop
push
cmps
inc
or
leave
push
mov
into
xchg
cmp
jns
cmp
jns
jle
jnp
pop
stos
in
cmps
mov
in
call
mov
cmp
mov
pushf
mov
xchg
movs
cld
mov
or
push
sbb
jno
and
mov
inc
das
(bad)
jecxz
popa
push
add
ja
push
lods
lea
sbb
retf
inc
stc
dec
inc
mul
jl
dec
dec
mov
adc
mov
sub
hlt
sbb
inc
cmp
jns
loopne
xor
cmps
cmc
dec
fwait
inc
ror
inc
jae
movs
sub
cmp
or
inc
mov
sbb
jmp
das
pushf
jl
cmp
mov
dec
nop
mov
scas
iret
clc
test
sbb
and
xchg
ins
mov
retf
adc
mov
pop
xor
xchg
mov
inc
cmp
into
jecxz
cli
xchg
sub
lea
jb
sub
(bad)
nop
lock
xor
lds
jns
mov
jae
mov
imul
ds
mov
xor
mov
pop
dec
imul
or
lock
repz
cmps
inc
mov
lahf
int
gs
xor
cld
xchg
mov
mov
sub
cmp
xchg
icebp
mov
cmp
mov
or
and
int
inc
pop
sub
(bad)
cmp
movs
in
push
jo
push
jge
pop
lea
add
pop
ja
mov
movs
iret
test
jno
cwde
and
mov
lods
pop
(bad)
pop
adc
imul
or
sub
test
ins
mov
cmp
lea
int
pop
jmp
clc
jne
aaa
jo
fwait
sub
xchg
and
cmp
repz
in
xor
or
or
(bad)
dec
out
aaa
aam
adc
cmp
ds
or
cli
mov
mov
mov
test
dec
push
sub
call
mov
sub
adc
mov
adc
jg
xchg
sub
out
repz
test
fadd
sub
pop
imul
iret
jge
(bad)
into
inc
jl
es
pop
shr
mov
inc
mov
jle
into
rcr
cs
stos
mov
and
stos
fidivr
ds
cs
xor
in
sbb
hlt
clc
pop
pusha
xlat
imul
in
loope
out
adc
inc
in
pop
fldcw
lods
add
loop
inc
loopne
nop
fmul
lods
and
loop
sub
jle
leave
out
push
push
fstp
xor
aam
xchg
mov
dec
adc
test
clc
add
ins
in
icebp
add
mov
cmp
test
pop
aas
rol
les
add
outs
out
push
fdiv
in
mov
jle
inc
ds
jbe
(bad)
fbstp
sub
cli
adc
push
mov
dec
sahf
and
jp
jno
inc
push
dec
out
and
pop
or
cmp
dec
ret
xor
aas
cli
pop
or
adc
popa
retf
shl
push
mov
xor
xlat
or
sub
and
call
(bad)
scas
test
add
mov
fisttp
ret
adc
test
lock
push
sub
push
pop
(bad)
or
xor
mov
fimul
adc
push
aas
test
xor
nop
inc
ja
enter
cwde
jne
(bad)
cmp
dec
das
xchg
dec
stos
xor
(bad)
jmp
or
outs
xor
add
cs
jl
test
push
jne
dec
loope
push
xor
mov
fnsave
xchg
dec
inc
inc
push
sub
pop
cdq
lahf
xchg
orps
mov
mov
dec
popa
xor
test
fist
cld
loope
sbb
loop
(bad)
mov
jae
xor
jbe
jno
pop
js
lahf
mov
and
pop
pop
cmp
test
inc
repz
retf
and
dec
fs
pop
(bad)
data16
push
cmp
neg
push
sbb
inc
push
rcr
jne
adc
es
outs
pop
jecxz
lds
sub
sub
scas
dec
rol
cwde
sub
movs
mov
xor
cmps
pushf
dec
cmp
in
imul
xchg
ret
push
jb
sub
sahf
push
scas
mov
popa
sub
mov
(bad)
inc
mov
pop
inc
fldenv
jmp
and
sub
cmovle
nop
pop
mov
mov
xor
stc
stc
ja
movs
rol
add
idiv
and
out
xor
cs
pop
nop
cmc
retf
pusha
fwait
imul
aaa
arpl
rcr
mov
push
movs
sbb
pop
jne
inc
add
xchg
cmp
(bad)
shr
pop
in
into
xor
adc
loopne
mov
fdivr
xchg
call
xchg
inc
push
sbb
sub
clc
or
mov
scas
dec
pop
fwait
jg
push
adc
xor
dec
dec
push
lock
stos
xchg
inc
inc
test
push
pop
arpl
popf
retf
mov
sbb
xor
jecxz
xchg
inc
sbb
pushf
inc
ret
push
cmps
cmp
xchg
sub
mov
jg
lea
popw
std
out
adc
jno
and
lea
cmp
and
xor
fsin
xor
fisubr
ins
shl
mov
xabort
clc
lahf
inc
jo
int
test
shl
cmp
xchg
mov
sub
stos
out
add
mov
cmp
mov
test
jmp
mov
xchg
add
sub
inc
cmp
jns
test
inc
(bad)
cmps
out
imul
sub
mov
dec
lahf
lock
add
and
adc
pop
scas
jns
xor
popa
das
shr
push
xchg
jne
test
inc
push
mov
jg
cwde
mov
movs
aaa
or
ins
mov
xor
mov
aad
jmp
fcom
in
in
mov
rcl
add
ins
ret
mov
mov
mov
shr
cmovb
dec
shl
inc
popf
scas
push
adc
jbe
outs
jge
push
movs
or
push
xor
or
sub
jl
and
jmp
clc
es
add
fdivr
lds
scas
ss
mov
xor
jp
cld
outs
xchg
xlat
neg
rol
xor
fwait
call
adc
xor
jle
fstp
fs
sub
cmp
adc
jae
add
mov
div
(bad)
test
out
push
repz
pop
mov
rcr
mov
pop
sbb
inc
pusha
xchg
xor
inc
jno
(bad)
shl
je
or
inc
stos
dec
mov
mov
adc
mov
sar
pop
mov
xchg
(bad)
lods
lahf
adc
add
test
into
ret
ss
fstp
mov
out
mov
sub
ret
fisttp
lods
dec
mov
push
or
or
nop
cmp
outs
push
in
and
cmc
inc
cwde
sbb
ret
rep
dec
lods
mov
xor
sbb
lods
or
popa
je
stc
push
(bad)
fiadd
lea
lods
stos
sbb
dec
fadd
cmp
ffreep
pop
(bad)
ds
test
add
add
movs
popf
test
or
cld
scas
xchg
sub
inc
push
(bad)
cmc
add
movs
push
aad
dec
jle
pop
sub
xor
mov
aad
add
mov
clc
and
shr
mov
dec
test
push
je
jbe
mov
xor
pop
nop
fisttp
cmp
and
push
xchg
cmp
or
xchg
ins
loope
xchg
cmp
call
xchg
ret
or
and
gs
ficom
mov
cmp
cwde
mov
int
cmp
cmp
xchg
cmps
inc
pop
push
fdiv
in
push
popf
xchg
loopne
iret
dec
dec
enter
push
rcr
cld
loope
push
fidivr
fcmovnb
in
jnp
pop
lock
push
mov
sub
pop
mov
mov
(bad)
mov
xor
sub
mov
cmp
add
mov
mov
enter
adc
cmp
or
jo
lods
mov
add
popf
xchg
pop
fwait
jle
ret
popa
mov
rol
sbb
ss
or
fcmovnbe
ss
jp
fisttp
cmps
add
scas
dec
lods
adc
push
icebp
(bad)
es
out
cld
jecxz
pop
push
or
mov
push
ja
xor
in
mov
in
or
xchg
xor
ss
and
lock
into
mov
retf
nop
aaa
in
cli
mov
adc
xchg
enter
inc
inc
aam
xor
dec
dec
or
test
iret
cmp
retf
or
xchg
rol
das
clc
fisub
pushf
sub
ins
jle
add
inc
inc
jb
jge
es
fld
fdiv
xchg
mov
xchg
ds
cld
push
pop
adc
inc
cmp
push
adc
loop
leave
lea
dec
jecxz
out
enter
sub
inc
(bad)
ss
dec
leave
cmp
test
imul
ror
les
leave
addr16
fisttp
test
push
mov
fdivr
cld
cli
xor
or
dec
cmc
cwde
les
or
push
mov
lahf
icebp
jle
das
dec
(bad)
cmp
out
daa
push
(bad)
ja
icebp
sbb
mov
and
cli
scas
es
pop
push
or
cmp
or
mov
cmps
adc
xor
shl
shl
(bad)
outs
sbb
mov
fst
xchg
sahf
and
mov
cmc
mov
adc
inc
xor
xchg
loop
lea
xchg
xchg
xchg
lods
push
popf
pop
xor
call
or
jno
std
sbb
lahf
sbb
or
ret
sti
jmp
jae
nop
push
inc
scas
mov
std
scas
sbb
pushf
shl
stos
mov
jl
mov
sub
lock
ss
(bad)
inc
adc
arpl
call
push
jg
xor
test
cmp
pop
loop
push
std
int
pop
jecxz
test
pop
ret
cli
xchg
mov
ret
or
shl
out
pop
hlt
ins
sub
cs
pop
push
clc
push
nop
arpl
push
out
add
js
aas
jae
push
test
cmp
mov
test
mov
jge
mov
and
xchg
and
(bad)
inc
fiadd
stos
les
movs
ja
jmp
mov
aad
jo
ret
fisub
xchg
cmp
cmp
loope
stos
nop
not
dec
push
movs
mov
xor
sahf
pop
mov
xchg
xlat
pop
iret
mov
inc
and
loop
aas
out
sbb
pop
mov
inc
loope
(bad)
jmp
xchg
inc
pop
push
jg
in
shr
mov
xchg
push
les
lahf
movs
jmp
(bad)
add
ret
ja
daa
mov
sbb
jmp
xlat
jnp
add
xor
or
adc
cs
push
(bad)
xchg
inc
imul
mov
pop
ret
cmp
sub
cwde
pushf
mov
call
xlat
mov
in
inc
out
cld
(bad)
xor
adc
jp
dec
inc
xchg
nop
lods
adc
mov
pop
nop
mov
(bad)
stos
jecxz
xchg
and
ds
imul
mov
and
or
std
adc
outs
test
imul
jnp
(bad)
mov
jno
xchg
inc
add
(bad)
mov
addr16
scas
jae
popf
or
das
push
dec
dec
movs
into
repnz
lods
jl
ins
xchg
aam
mov
std
xchg
rcr
cld
jp
(bad)
in
stc
adc
sub
jns
xchg
inc
inc
rcr
sub
cmps
cmps
xchg
scas
push
stos
sub
les
pop
adc
pop
enter
mov
sbb
mov
les
mov
loopne
or
xchg
(bad)
push
fiadd
mov
sbb
xchg
push
jp
mov
(bad)
int
scas
cli
inc
push
fbstp
jo
leave
or
ins
mov
jl
test
retf
sbb
dec
div
call
cmp
inc
mov
push
jae
sub
mov
fidivr
push
pop
push
fisub
pop
in
jnp
fld
dec
ja
mov
and
push
aad
aaa
or
inc
pop
inc
das
ins
sahf
rcr
and
mov
mov
cmc
fld
mov
xor
cmp
fld
cs
mov
adc
pop
jge
mov
mov
hlt
xchg
and
and
xchg
jl
adc
fisubr
(bad)
lfence
and
mov
push
aaa
jecxz
(bad)
push
ss
and
inc
jbe
mov
sub
mov
xor
enter
jae
stos
jb
sbb
scas
ss
sbb
jle
xchg
sub
data16
pusha
mov
ret
sub
(bad)
mov
sub
fild
xchg
or
jno
sbb
adc
in
push
mov
pop
cmp
and
(bad)
push
cmps
pop
cld
dec
(bad)
sti
jne
add
adc
cmp
push
adc
fwait
jns
cwde
leave
jno
pushf
or
xor
push
sti
push
icebp
sar
jbe
sub
sub
pop
add
repz
push
jge
fmulp
std
shl
jecxz
push
xor
loope
pop
xlat
sahf
sahf
push
xchg
push
push
pop
cmps
or
mov
pop
enter
xor
(bad)
cmps
push
mov
test
mov
fstp
in
jns
mov
mov
mov
add
mov
cwde
cld
and
mov
loopne
mov
ret
(bad)
and
call
ins
push
add
scas
ins
jmp
pop
enter
mov
sar
mov
loop
out
pop
mov
sub
jns
or
and
(bad)
push
xchg
pop
mov
mov
pop
and
jp
add
mov
jae
out
inc
iret
loope
ror
inc
dec
adc
jmp
or
leave
stc
adc
or
sbb
add
dec
call
add
into
imul
pop
int3
loopne
ins
fld
ins
mov
push
sbb
je
or
or
push
jne
mov
mov
ds
adc
push
and
sar
mov
sbb
rol
jl
aaa
repz
scas
repz
mov
adc
mov
in
sbb
jl
ins
xor
idiv
call
shl
cmp
mov
pop
xor
add
adc
jo
inc
test
outs
add
iret
jecxz
daa
outs
outs
sbb
pop
data16
xchg
aam
sti
mov
loopne
mov
and
loope
adc
clc
mov
push
lahf
stos
dec
and
mov
(bad)
push
ret
jne
shr
xor
jle
aas
dec
std
stos
mov
xor
stc
movs
jge
mov
imul
push
ins
push
mov
add
unpckhps
js
inc
cmp
call
mov
dec
pusha
ja
and
int
test
sub
sub
nop
dec
push
popa
jnp
sahf
sub
fdivr
test
mov
or
inc
jle
push
push
sar
shl
ret
in
bound
in
stos
push
xchg
stos
xchg
jne
das
xchg
in
data16
ja
cdq
xchg
jns
in
je
pop
and
jmp
jmp
jno
add
cmps
mov
frstpm(287
xor
ins
dec
jae
les
hlt
mov
push
leave
cmp
out
and
mov
out
inc
gs
mov
jge
and
pop
imul
js
out
mov
std
sbb
(bad)
push
ja
xor
xchg
scas
adc
and
mov
sar
shl
frstor
ret
into
aas
pop
jl
or
and
test
pop
inc
add
mov
fild
(bad)
imul
mov
sti
icebp
out
fwait
sahf
in
fs
je
mov
adc
arpl
jge
shl
cmc
mov
out
mov
jno
xor
pop
retf
sti
pop
enter
imul
ds
xchg
movs
arpl
sbb
mov
xchg
add
mov
dec
cmp
xlat
inc
call
call
push
push
sbb
cmps
pop
and
(bad)
test
sub
xchg
jecxz
sahf
or
into
xor
movs
sub
js
je
sub
pop
aam
cmp
ja
mov
lods
inc
jmp
leave
push
lds
and
xlat
mov
aas
mov
ja
jg
dec
push
or
xor
into
and
jg
div
cmps
mov
sub
adc
das
mov
mov
or
call
fidivr
into
in
inc
add
mov
in
hlt
cmp
loop
stos
or
and
aaa
xchg
jg
pop
and
xor
xor
ds
pop
aam
sar
jle
dec
sbb
cwde
or
adc
pop
gs
xchg
ds
int3
js
fcmovnbe
call
push
aaa
jl
dec
lahf
loopne
icebp
scas
outs
(bad)
dec
jae
push
test
xchg
or
outs
mov
bound
into
es
cli
into
sbb
adc
outs
pop
mov
jge
dec
sub
stc
aad
jle
dec
mov
cmp
add
mov
xchg
and
fnsave
test
xchg
gs
ins
mov
xchg
into
mov
push
jmp
cmc
call
inc
test
lea
movs
and
jmp
push
ret
xchg
int
pop
xchg
icebp
xchg
xor
outs
in
push
addr16
mov
sar
lahf
adc
inc
or
(bad)
lds
sub
push
lods
sbb
and
scas
vandps
adc
(bad)
sti
cmc
fs
loop
fidiv
push
loop
xor
not
nop
xchg
lods
inc
ret
push
xchg
add
mov
dec
dec
imul
ins
leave
rol
loop
xlat
(bad)
in
adc
xor
xor
pop
mov
(bad)
daa
xchg
pop
cmps
jg
fisttp
mov
movs
retf
je
in
xor
arpl
popf
les
das
movs
shl
cld
icebp
pop
fstp
sbb
adc
xor
outs
test
sbb
jns
sub
into
mov
jnp
jecxz
hlt
mov
scas
outs
mov
or
aas
(bad)
aam
ja
jl
jmp
mov
int3
imul
cdq
arpl
cmp
enter
stos
ds
pop
pop
mov
inc
mov
or
(bad)
imul
addr16
out
stos
pop
scas
push
ja
in
movs
push
adc
cmp
adc
idiv
sub
mov
movs
jp
inc
test
xchg
lahf
pop
sub
jns
add
shl
add
sub
jp
pop
xor
dec
sub
fnstenv
xchg
ins
fidivr
in
add
jge
int3
clc
dec
ss
push
mov
adc
inc
ret
sub
pop
mov
(bad)
fild
jmp
outs
retf
sbb
push
or
xor
scas
popf
shl
mul
pop
out
pushf
ja
(bad)
movs
xor
cli
mul
retf
nop
dec
push
dec
(bad)
adc
movs
xchg
in
and
xor
lods
call
clc
or
call
cli
clc
cmps
xchg
or
lahf
(bad)
push
adc
dec
dec
test
lds
xchg
push
cmp
sar
retf
scas
cmp
mov
lds
mov
hlt
imul
clc
sub
fild
ss
jle
add
aas
pop
test
(bad)
addr16
dec
repnz
mov
call
mov
mov
fsubr
icebp
cs
push
and
(bad)
or
push
icebp
hlt
stos
dec
dec
adc
sar
inc
out
xor
imul
sub
aas
arpl
xchg
out
sub
or
xor
cmps
mov
and
adc
jp
push
mov
test
addr16
ss
loopne
or
nop
sub
stos
add
shl
xor
scas
or
xchg
xchg
iret
ins
adc
shr
xor
cmp
mov
cwde
mov
rol
repz
dec
in
or
jg
shl
in
je
mov
lock
gs
iret
jge
push
stos
xchg
pop
push
jl
stc
jo
(bad)
outs
lea
pop
mov
loope
ins
sbb
daa
sbb
stc
jmp
out
adc
inc
dec
div
pop
sub
mov
stos
(bad)
lea
daa
retf
sbb
and
mov
outs
loopne
out
xchg
loop
sub
and
rcl
mov
jns
pop
addr16
pop
lock
pop
xchg
sbb
in
cld
mov
loop
imul
adc
jnp
jns
fnsave
ins
stos
neg
ds
mov
or
push
pop
inc
mov
and
mov
les
push
outs
jns
dec
daa
jbe
xchg
sbb
das
mov
jnp
std
lods
fisubr
jo
fild
clc
add
ins
or
ds
test
xchg
xchg
add
icebp
add
cmc
scas
push
pop
dec
pop
cmps
jmp
push
xlat
jns
mov
adc
cmps
fst
ffreep
and
xchg
jnp
dec
sbb
pop
adc
or
jae
out
or
xor
test
lock
and
leave
fiadd
stc
mov
dec
ins
test
and
nop
popf
inc
xchg
fst
sbb
(bad)
cli
adc
sbb
test
stc
push
xchg
sub
inc
sti
cdq
mov
(bad)
test
loope
xchg
pop
enter
push
cs
add
xchg
inc
aas
test
mov
cmp
ss
inc
rcl
mov
stc
repnz
sub
or
(bad)
lahf
fsubp
fadd
mov
pop
add
retf
sbb
or
int3
std
jnp
dec
shl
mov
movs
imul
dec
sub
jne
loopne
xchg
cvtpi2ps
into
hlt
iret
(bad)
xchg
aad
xlat
xchg
fidivr
daa
ss
dec
xchg
hlt
cmp
mov
xor
arpl
dec
cli
addr16
push
pushf
call
pop
pop
popf
mov
imul
add
js
sub
dec
or
rcl
add
(bad)
adc
aam
sbb
mov
inc
cmps
(bad)
test
and
sub
aas
mov
adc
stos
sub
fist
mov
inc
aam
and
in
push
sbb
cmps
push
inc
xchg
retf
test
inc
out
aad
dec
sahf
cmp
cmp
mov
cmps
xchg
shr
sub
(bad)
test
icebp
and
dec
loop
pop
cdq
sbb
sbb
pop
pop
imul
lea
stos
dec
adc
rol
mov
int3
retf
add
in
inc
cmp
jle
test
mov
push
stc
aaa
ret
inc
test
adc
test
cmps
daa
inc
add
nop
push
jp
push
aam
mov
(bad)
push
sub
movzx
mov
dec
jns
sbb
in
or
xor
(bad)
cmp
jno
jmp
sub
daa
imul
mov
pop
xor
jmp
sahf
mov
lods
cmp
cwde
in
jbe
or
sbb
mov
(bad)
(bad)
push
(bad)
int
sbb
ret
mov
pop
mov
jbe
(bad)
cmp
and
pop
pminsw
lods
inc
jg
pop
icebp
mov
ds
pop
add
pop
push
scas
sbb
mov
push
or
mov
enter
mov
mov
adc
ja
(bad)
clc
sbb
or
jmp
mov
lds
das
or
push
jl
dec
div
cli
push
shr
xor
cmps
mov
ja
pusha
xchg
lods
cmp
ret
mov
pushf
xchg
xchg
iret
fadd
retf
ins
sbb
jge
bound
nop
adc
mov
sub
fisttp
mov
lods
xchg
sub
or
lods
jge
in
mov
cmp
pop
push
shl
cmps
test
mov
mov
ins
or
jmp
or
cdq
into
lock
sbb
jnp
jl
and
(bad)
loope
inc
sub
rol
imul
inc
xor
add
mov
shl
lds
inc
push
pop
fs
stos
seta
nop
mov
daa
mov
or
mov
dec
mov
mov
jp
dec
push
ja
or
and
pusha
push
xchg
je
call
sbb
ss
xchg
lds
add
xchg
inc
imul
add
pop
push
adc
js
sub
inc
xchg
and
jae
pop
add
jle
lahf
xchg
mov
sub
cs
add
mov
push
cmp
add
push
and
jae
add
and
cli
movs
and
call
imul
ss
pop
scas
imul
stos
aad
pop
mov
addr16
lods
ins
adc
pop
mov
ret
jle
mov
sbb
in
ds
lods
cmc
adc
pusha
test
ret
push
mov
mov
mov
add
sub
mov
scas
(bad)
pop
push
push
and
cmp
adc
call
lahf
in
cli
shl
push
movs
mov
xor
xor
xor
mov
out
pop
cmp
or
pop
push
xchg
jb
cs
pop
dec
retf
je
cmp
je
iret
nop
xchg
and
and
cmp
jmp
push
jge
mov
mov
jmp
sbb
std
inc
sub
daa
outs
sbb
fiadd
mov
and
lock
dec
jae
retf
jns
mov
(bad)
stc
nop
ror
jne
loopne
push
dec
inc
xlat
xchg
mov
jb
adc
ret
xor
mov
push
sti
es
fdivr
jae
fmul
inc
cmp
push
inc
adc
js
imul
mov
fadd
mov
mov
mov
push
add
seto
test
ret
nop
jp
ret
out
jne
jnp
mov
into
inc
dec
dec
loope
cmp
pop
jo
adc
jg
fdivr
mov
xchg
imul
sbb
push
test
inc
arpl
jecxz
push
mov
inc
jmp
xchg
nop
jmp
aad
inc
push
sub
cld
push
jns
in
inc
add
mov
pop
outs
pushf
aaa
jno
jle
(bad)
out
sub
fidiv
lods
mov
xchg
imul
popf
xor
sbb
into
mov
pop
dec
fadd
jg
loope
add
mov
imul
(bad)
dec
add
push
xor
cmp
es
rol
dec
loopne
loope
mov
sub
addr16
sub
jb
jmp
jo
adc
loopne
xchg
and
loope
repnz
(bad)
mov
inc
cmp
add
mov
imul
loop
fimul
gs
hlt
adc
repz
stc
add
mov
push
xor
push
fcmovb
mov
push
repnz
sar
pushf
loop
mov
(bad)
mov
cmp
jae
push
test
sti
push
inc
mov
add
shl
retf
inc
icebp
inc
jae
nop
mov
adc
ss
paddsw
dec
mov
cmp
cwde
and
ror
sbb
ffreep
cdq
and
popf
xchg
std
sub
xchg
sbb
(bad)
push
push
retf
cmp
jb
jne
sbb
sbb
mov
out
jb
mov
out
adc
mov
cwde
shr
es
neg
or
mov
jb
js
les
sbb
mov
xor
ror
cmp
in
add
popf
mov
daa
cmps
xor
sub
mov
mov
ffree
jne
push
arpl
push
out
adc
push
sub
push
mov
xchg
repnz
clc
or
jns
inc
mov
pop
mov
fs
test
jmp
repnz
(bad)
cmps
gs
addr16
cwde
dec
cmp
fld
xor
mov
fmul
pop
cli
dec
retf
add
push
outs
cdq
hlt
mov
nop
sti
xor
add
stc
into
sub
sti
xchg
pop
sub
bound
into
clc
mov
cmp
adc
and
xchg
shr
dec
imul
aas
ret
ins
and
popa
or
addr16
sti
add
movs
fdiv
cdq
xor
xchg
jae
sub
rcr
hlt
aaa
mov
and
popa
dec
mov
cmps
dec
push
and
repnz
mov
lock
loope
(bad)
shr
or
shl
mov
daa
push
enter
xchg
push
mov
cs
xchg
mov
adc
jne
xchg
xchg
int3
adc
(bad)
or
cdq
sub
or
in
push
mov
mov
out
cli
leave
xchg
dec
(bad)
fucom
call
or
inc
push
cmps
stc
dec
arpl
cmp
repnz
sub
shl
repz
xchg
inc
das
ds
sub
or
inc
xchg
in
sbb
imul
dec
aam
js
xor
fist
inc
push
push
dec
cmp
out
loopne
or
repnz
cli
out
dec
xchg
xor
jns
out
mov
and
imul
fistp
(bad)
out
lahf
lock
daa
jmp
pop
lods
out
pop
out
shr
mov
xor
inc
test
gs
out
xchg
mov
jnp
xchg
data16
jns
ret
mov
adc
rcl
dec
loop
and
shl
in
jb
inc
or
push
dec
inc
cmp
mov
xor
repnz
or
sbb
mov
hlt
adc
mov
mov
mov
stc
js
nop
sbb
je
mov
jecxz
pop
sbb
repz
add
dec
scas
jne
mov
ja
dec
mov
test
ds
dec
mov
dec
jmp
sbb
xchg
out
adc
dec
sti
xor
(bad)
mov
shr
sub
xlat
jge
mov
or
dec
mov
xchg
adc
mov
lds
out
ja
xlat
ds
clc
lods
mov
out
xchg
cmpps
retf
push
test
jae
paddd
ror
test
sub
dec
repz
in
cmp
and
pop
in
sbb
(bad)
aad
pop
mov
sbb
fsub
pop
ficom
mov
(bad)
mov
push
das
jbe
stos
pop
dec
or
mov
cmp
sub
addr16
retf
mov
pop
xor
scas
clc
cmp
push
sar
cmp
popf
mov
mov
movs
adc
lods
aad
xor
es
push
cmp
sub
mov
mov
add
das
mov
lahf
jne
ins
jbe
popf
imul
sbb
das
mov
mov
adc
lahf
jae
push
and
inc
cld
jecxz
pop
or
js
ins
fmul
or
das
call
movs
cmp
sub
and
add
iret
dec
mov
pop
jno
stos
pop
shr
fistp
or
sbb
jne
aas
in
in
ds
mov
xor
int
(bad)
icebp
add
fisubr
mov
fistp
mov
mov
shl
add
outs
int3
sbb
mov
pop
push
mov
push
ret
adc
mov
(bad)
clc
(bad)
sahf
aam
lock
xor
nop
inc
sub
mov
int3
rol
push
jno
(bad)
fs
rcr
ret
dec
pop
xchg
test
por
adc
jmp
mov
push
cmp
aam
in
add
mov
fnstenv
and
inc
ds
cli
inc
adc
daa
dec
aam
cmc
sub
xor
pop
push
cdq
xor
mov
push
adc
push
inc
mov
test
leave
xchg
int
xchg
es
test
(bad)
cmp
add
stc
adc
mov
mov
dec
push
add
sub
add
sbb
push
test
div
mov
adc
xchg
cwde
mov
mov
stos
inc
mov
xor
cmp
xlat
mov
sahf
sbb
leave
sahf
xchg
pop
popa
bound
push
cmps
dec
into
sahf
push
ins
inc
mov
fdivp
inc
je
(bad)
push
dec
jmp
cmp
aam
xor
lahf
call
push
mov
or
dec
fimul
or
sub
inc
fsub
aas
loope
jbe
xchg
div
dec
jno
fisttp
cmc
dec
cmc
pop
or
sar
lods
inc
xor
mov
icebp
mov
loope
ficomp
cmp
rcl
pop
mov
push
xchg
adc
add
jge
js
mov
popf
push
mov
and
dec
xchg
lds
int
sbb
movs
mov
mov
movs
push
sbb
add
cmp
sar
out
cmp
inc
add
mov
sub
outs
ja
test
pop
int
lods
inc
and
cmc
jmp
dec
in
enter
call
dec
dec
pop
pusha
jns
fs
fld
sbb
fidivr
sub
shl
rcl
jns
stos
or
mov
ins
(bad)
(bad)
fs
lds
lds
scas
jp
je
in
mov
mov
cmps
xchg
fidiv
xor
fisubr
xor
dec
xor
and
out
dec
jnp
sar
mov
cmp
push
sahf
cwde
inc
cld
xchg
psubusb
cli
sti
imul
retf
adc
mov
mov
sub
mov
ins
adc
dec
imul
and
jns
(bad)
mov
jmp
test
dec
push
loop
popa
mov
adc
mov
in
sbb
scas
inc
mov
shr
(bad)
jg
das
inc
aad
dec
popf
fiadd
call
lahf
push
inc
dec
mov
mov
mov
call
cmp
movs
cmp
aas
maxps
hlt
xchg
daa
int3
ret
mov
xor
cs
jp
test
iret
das
jne
fsub
dec
xchg
fcomp
xchg
cmps
jno
mov
jmp
(bad)
aad
cs
xor
or
add
mov
push
sbb
enter
add
fs
aam
mov
clc
aas
dec
mov
fadd
cmp
cdq
out
xchg
xor
popf
ds
fstp
sbb
cld
xor
mov
mov
scas
xor
repz
pop
and
cmps
mov
(bad)
sub
xchg
cmc
sub
xchg
mov
loop
jge
sbb
cwde
ficom
test
or
mov
fld
fidiv
adc
xchg
jmp
pop
cmc
movs
mov
test
movs
cmp
fwait
xchg
cs
repnz
xchg
dec
fsubr
mov
or
dec
leave
xchg
add
jmp
and
and
in
jae
add
dec
loopne
mov
mov
jns
inc
inc
loopne
add
jbe
cmp
push
push
out
int
sbb
icebp
and
mov
mov
mov
call
xor
ficom
inc
in
(bad)
pop
shr
jmp
mov
fbld
fsub
gs
xchg
test
in
pop
sub
sbb
(bad)
ins
add
mov
dec
dec
loope
addr16
fld
ret
out
dec
mov
and
lea
mov
cli
call
and
push
aaa
jmp
push
fnstsw
xor
pop
cmps
(bad)
popa
iret
js
and
test
fidivr
xchg
fadd
pop
ror
in
push
add
add
js
fdiv
jecxz
fucomp
psrad
outs
xchg
inc
pop
dec
xchg
stc
shr
or
outs
ret
mov
(bad)
aas
mov
nop
ror
movs
xchg
inc
adc
test
add
ret
int3
mov
mul
sbb
mov
adc
(bad)
out
(bad)
mul
dec
test
mov
xchg
sbb
outs
pop
ror
xor
and
mov
dec
mov
ror
jl
jne
stos
push
xor
push
pushf
ret
aas
pop
movs
bound
pop
ror
xor
ss
push
mov
clc
and
fbld
sbb
pop
dec
inc
idiv
lahf
in
cmp
pop
aam
xor
in
das
ror
adc
jne
cmc
gs
shl
call
cmp
push
aaa
fidivr
stos
and
fcmovu
outs
dec
or
int3
in
mov
(bad)
cmc
(bad)
repz
aaa
gs
cmps
movs
sar
imul
xchg
add
cwde
cwde
xchg
push
mov
sbb
inc
in
cli
out
cmp
cmps
xchg
sahf
mov
cmc
(bad)
movs
pop
jp
sbb
jp
bound
push
fild
and
mov
in
rep
(bad)
jle
ds
or
mov
imul
fwait
mov
fisttp
cs
mov
ss
rcr
and
sub
pop
push
pop
cs
scas
dec
repz
xchg
rol
(bad)
call
lock
adc
(bad)
xchg
mov
int
push
ds
das
add
call
jae
push
mov
pop
stos
not
pop
fdiv
xchg
cli
or
retf
mov
in
adc
aad
jecxz
add
inc
sub
popf
adc
jno
adc
repz
mov
xor
lds
cs
inc
xchg
or
push
(bad)
push
out
loope
jp
mov
dec
xchg
scas
push
cmps
mov
movs
mov
(bad)
leave
popa
adc
movs
mov
xchg
mov
jae
lds
sub
fsub
popa
dec
pop
mov
push
fwait
push
sbb
(bad)
test
dec
add
fisttp
lods
xchg
loopne
nop
shl
mov
dec
xchg
sub
lahf
sub
rcr
pusha
movs
push
fidiv
pop
nop
mov
inc
mov
xor
cwde
mov
push
cdq
push
mov
push
les
jbe
cmp
or
adc
(bad)
loope
jne
mov
mov
xor
cmp
ficomp
dec
inc
sbb
adc
xor
cmp
aas
inc
(bad)
mov
jnp
or
ffreep
out
xchg
sbb
pop
fmul
shr
ror
add
push
mov
pop
xchg
mov
out
bound
into
xchg
mov
clc
cli
xor
push
imul
jno
les
mov
ds
jo
sub
lock
xor
mov
test
mov
mov
popf
add
(bad)
out
mov
mov
jg
stos
lock
clc
jp
pop
xchg
jnp
add
out
jo
aas
ret
xchg
sbb
outs
dec
or
jg
sar
(bad)
mov
mov
call
mov
xor
jg
jle
push
and
add
nop
xchg
jmp
test
mov
and
sbb
or
or
inc
aaa
and
lds
inc
or
and
pop
jmp
mov
inc
adc
hlt
sbb
aas
push
and
fdivr
push
cmp
and
sbb
pop
(bad)
in
mov
cs
add
cwde
xor
(bad)
pusha
lods
lods
add
mov
jmp
dec
push
mov
cmp
lock
stos
dec
add
and
adc
cmp
pop
daa
jecxz
in
call
push
daa
push
pushf
sbb
gs
mov
test
inc
dec
in
outs
and
fnstcw
xor
test
(bad)
lds
mul
(bad)
aad
pop
fbld
jmp
aas
add
cdq
push
mov
pop
inc
test
push
sets
int
pop
fimul
jae
pop
hlt
shl
and
pop
call
nop
lahf
jb
mov
mov
sti
cs
stos
fnstcw
push
mov
sbb
movs
imul
nop
cmp
xlat
stc
mov
out
xlat
sbb
sbb
xor
push
pop
out
aaa
add
mov
repz
mov
outs
lds
int3
int3
add
adc
xchg
xchg
enter
mov
xlat
rcr
add
adc
push
pusha
int
mov
cld
ret
es
or
xchg
and
xchg
imul
fsub
mov
mov
inc
repnz
pshufw
sub
mov
push
pusha
les
outs
fcmovnu
repnz
fwait
xchg
mov
mov
adc
jmp
punpcklbw
aas
jae
add
sbb
jg
sub
jo
dec
xor
jns
lahf
movs
outs
cmp
cmp
and
cmp
inc
repz
mov
adc
outs
jb
xchg
ret
(bad)
out
or
pop
cdq
dec
sub
fs
aaa
sbb
mov
test
fisubr
mov
(bad)
daa
mov
repz
cmp
dec
inc
mov
repnz
inc
add
je
jns
(bad)
popa
adc
movs
push
jb
xor
or
xor
jmp
fwait
stc
push
sub
cmp
call
cli
cmp
not
hlt
cmp
mov
pop
lods
in
ja
pop
inc
retf
stc
ret
mov
jnp
dec
push
mov
test
jb
xor
(bad)
aam
cmp
xchg
jno
mov
test
cmp
pop
xor
or
scas
push
(bad)
mov
pushf
xchg
in
jle
scas
mov
ret
call
add
mov
pop
inc
mov
inc
imul
push
cmc
mov
push
sub
stos
(bad)
fs
into
cmps
(bad)
out
add
mov
call
retf
and
sar
stos
(bad)
cs
fisubr
dec
sti
aad
retf
inc
repz
and
scas
ffreep
out
cmp
pushf
(bad)
pop
jmp
sbb
jl
mov
mov
in
js
cmp
pop
test
mov
pop
pop
push
dec
ja
xlat
lods
sub
inc
retf
dec
sti
aam
sub
inc
mov
enter
push
lds
pop
mov
cs
lods
and
jns
jo
mov
jl
aaa
pusha
aad
cdq
in
cdq
neg
and
inc
xchg
sub
sbb
lock
add
sahf
call
popf
cli
loopne
and
mov
jle
jecxz
adc
xlat
test
stc
inc
aaa
test
add
dec
movs
retf
sti
jbe
or
in
mov
(bad)
(bad)
sub
jl
jne
fs
fdiv
ss
inc
add
inc
in
jp
cmp
or
repz
daa
inc
bound
icebp
je
sbb
push
imul
mov
mul
dec
mov
mov
dec
dec
bound
adc
xor
leave
scas
iret
and
sub
jo
into
js
jno
or
loop
iret
adc
push
inc
or
ins
jnp
mov
mov
ds
pop
fucomip
push
push
mov
arpl
nop
dec
push
call
adc
repz
leave
mov
mov
fidiv
icebp
shl
fidiv
or
xchg
(bad)
loope
jp
sub
sbb
out
movs
sar
cmp
cmp
fsubrp
inc
data16
aad
jnp
fldcw
mov
retf
or
stc
mov
push
jo
push
sbb
retf
(bad)
add
xchg
cmp
data16
rol
(bad)
sub
xor
add
popa
fistp
mov
(bad)
int
dec
sub
aad
mov
mov
daa
inc
retf
xor
inc
outs
push
sub
lahf
sub
sbb
lahf
push
ds
adc
add
sbb
retf
sub
scas
repnz
cmp
aas
jb
cmp
sbb
or
cwde
and
push
sub
dec
(bad)
or
outs
add
loopne
xchg
out
xchg
xor
push
and
jb
cs
(bad)
mov
int3
sub
loope
stos
xor
mov
data16
leave
out
mov
cmp
nop
or
inc
mov
(bad)
ja
cld
inc
into
pop
pop
dec
or
(bad)
mov
ja
push
or
cmp
rcr
cmp
dec
mov
jnp
dec
xor
add
adc
dec
and
inc
sti
add
cmp
cld
movs
mov
adc
mov
jmp
xor
mov
sti
mov
js
fs
dec
in
pop
stos
dec
(bad)
adc
loopne
idiv
jae
popa
pop
daa
scas
and
fnstcw
push
push
movs
mov
shl
pop
jp
(bad)
adc
cmp
add
scas
xchg
mov
(bad)
pop
or
ss
sub
fcomp
stos
adc
cld
inc
cdq
retf
jecxz
sub
xor
xchg
hlt
fidiv
out
rol
bound
arpl
in
mov
out
inc
or
push
xchg
(bad)
rcl
fld
xchg
enter
ins
test
jno
popa
lock
inc
mov
jae
sub
ds
repnz
pop
pop
out
les
jp
or
jge
inc
xchg
data16
int3
fist
sbb
jle
lock
xchg
adc
jnp
mov
or
mov
inc
mov
cwde
out
inc
add
ds
mov
or
test
dec
sub
jmp
push
mov
hlt
das
inc
loop
cli
aas
and
cmp
cdq
adc
xchg
inc
jmp
das
pop
cmp
sti
test
or
scas
inc
rcl
gs
popf
and
or
rcl
jecxz
mov
inc
je
ins
fs
and
mov
xchg
xor
bound
fst
sbb
inc
mov
lods
nop
or
jo
xchg
movs
cli
ja
movs
add
ds
das
movs
dec
(bad)
iret
mov
and
cmp
ret
pop
repz
push
sub
mov
std
jne
loopne
and
push
out
lock
data16
pop
mov
push
out
sbb
rcr
sub
retf
and
popf
loopne
push
sbb
cwde
push
mov
cwde
dec
adc
sub
pop
adc
aam
pop
sar
pop
imul
xor
mov
mov
mov
stc
mov
sub
mov
repz
sub
xor
and
(bad)
mov
outs
dec
movs
fcmovnbe
ins
addr16
retf
cld
sbb
fcom
sub
cmp
les
(bad)
pop
fimul
ja
sbb
mov
(bad)
in
in
push
inc
sar
rcl
inc
and
push
ins
add
(bad)
nop
sahf
lock
frstor
lods
inc
xchg
adc
sbb
xchg
test
ins
jns
pop
inc
xor
bound
sbb
xor
loop
mov
sub
lea
pushf
ret
mov
push
xor
imul
push
out
jmp
pop
mov
add
push
fwait
or
sbb
mov
push
pop
adc
or
outs
fldcw
pop
icebp
mov
bound
sub
mov
out
rcr
cmp
mov
aam
and
and
adc
jo
aam
in
mov
(bad)
(bad)
neg
arpl
push
mov
inc
pop
dec
cli
xchg
outs
mov
jmp
or
sub
mov
cmps
pushf
(bad)
cmc
adc
sbb
out
adc
jge
jmp
xchg
mov
retf
or
ins
adc
cmp
test
sbb
or
scas
scas
xor
mov
sar
and
push
mov
inc
pop
sub
aad
mov
setnp
cs
lods
cmp
fbld
xchg
lock
mov
data16
not
icebp
imul
icebp
int3
movs
add
or
mov
push
js
and
test
mov
test
and
test
or
xor
js
xor
pop
xchg
sbb
mov
dec
jbe
mov
inc
sub
jmp
push
mov
or
mov
mov
sar
cld
jae
(bad)
out
sub
add
mov
xor
adc
aaa
pop
stos
ss
add
lods
shr
jle
dec
pop
sbb
mov
imul
cmp
stc
cmps
add
lahf
push
sti
cld
or
sub
and
inc
cmp
jle
test
and
dec
(bad)
mov
(bad)
ins
fbstp
lods
rol
add
std
add
outs
(bad)
mov
mov
or
bound
lock
sbb
aaa
add
add
iret
scas
push
es
inc
pop
jnp
mov
inc
in
aam
scas
bound
daa
xchg
dec
test
fiadd
inc
shl
out
(bad)
mov
cmps
mov
push
xor
aam
or
jo
pop
enter
rcl
mov
adc
ret
sbb
repz
jmp
fimul
or
call
nop
jmp
mov
dec
cwde
lock
inc
add
ja
add
popa
popa
push
iret
xor
ins
cmp
mov
and
ret
pushf
lock
mul
iret
aaa
fst
adc
ret
sbb
cmps
aam
push
call
rcl
(bad)
dec
retf
in
mov
hlt
dec
dec
imul
lock
add
add
loope
repz
add
icebp
add
xchg
or
xchg
mov
div
cmp
(bad)
gs
shl
stc
inc
mov
icebp
retf
nop
inc
pop
pushf
add
push
hlt
sub
in
adc
push
mov
add
(bad)
fs
icebp
pusha
inc
popf
sub
rcl
push
(bad)
sbb
jb
mov
cli
les
(bad)
sahf
pop
push
inc
das
jnp
adc
dec
sti
mov
in
daa
mov
mov
inc
dec
cmp
fcom
aas
pusha
int3
ins
ja
xchg
xchg
in
sahf
gs
outs
push
sub
mov
xchg
push
pop
dec
fadd
xchg
stc
xlat
fiadd
dec
imul
mov
sub
imul
push
and
in
lahf
out
inc
xchg
and
call
mov
cmp
js
pop
xor
repz
mov
call
mov
loopne
fdivrp
sbb
xor
leave
push
jae
and
movs
ret
aas
cmps
jno
mov
mov
jl
jecxz
push
or
gs
test
xchg
dec
xor
inc
xor
fld
add
xchg
or
(bad)
and
jne
scas
mov
out
ret
out
loope
push
dec
mov
and
loop
push
mov
or
jmp
xor
lds
xor
mov
(bad)
xchg
xor
push
inc
cwde
inc
aad
cmp
arpl
js
sar
dec
pop
sbb
push
mov
fs
sbb
sbb
and
loope
imul
jg
sbb
ja
popa
xor
inc
ins
xchg
xor
test
push
mov
inc
int3
test
sub
call
mov
loope
and
retf
dec
cvtpi2ps
sub
xor
and
xor
cmp
in
cld
pop
xor
nop
js
push
pop
rcr
xor
xchg
and
test
ret
xor
(bad)
push
(bad)
repnz
push
push
push
sbb
mov
or
jg
call
add
xchg
mov
aad
add
sub
mov
push
inc
retf
jp
sub
inc
adc
jo
mov
cwde
or
xchg
mov
int3
movs
add
mov
fs
stos
stos
or
cld
test
int
sub
iret
add
mov
out
cmp
sub
add
push
retf
(bad)
into
daa
out
inc
and
enter
ret
inc
stc
inc
in
xor
mov
fidivr
mov
ins
into
icebp
test
inc
push
jae
jo
out
and
mov
push
fdivrp
retf
loop
pop
pop
das
out
jo
sub
(bad)
mov
dec
xchg
push
mov
inc
add
cmps
js
movs
test
and
mov
pop
and
mov
push
mov
aas
mov
mov
mov
add
cmp
ss
push
push
xchg
movs
sbb
xor
inc
or
lods
ficom
and
pop
inc
adc
test
mov
and
js
into
arpl
mov
frstor
in
mov
enter
pop
into
dec
shl
sbb
jno
dec
shl
sbb
xchg
add
or
xchg
and
(bad)
cmp
cmc
sar
xor
pop
inc
cld
inc
pop
push
adc
pop
scas
xchg
jae
je
jo
add
jg
and
arpl
xchg
xchg
mov
dec
push
sti
inc
loope
or
ins
sub
shl
movs
pusha
in
outs
xchg
and
xchg
in
fisub
sub
loopne
sub
cli
(bad)
popf
mov
loop
push
or
test
push
sub
retf
pop
adc
mov
mov
sbb
add
addr16
cmp
inc
mov
loope
outs
mov
or
jbe
xchg
jne
mov
scas
ficomp
dec
stos
js
mov
adc
mov
jl
test
loop
mov
mov
pop
sub
xchg
pop
add
mov
sub
cmp
movs
test
stos
jecxz
out
dec
mov
fadd
(bad)
cld
mov
int3
mov
xlat
lock
lahf
add
popa
(bad)
fadd
imul
push
fldenv
mov
lea
or
ins
add
call
stos
pop
jno
xchg
inc
mov
sbb
mov
clc
xchg
push
xor
cmps
aaa
lock
mov
outs
dec
pop
je
pushf
push
xor
add
mov
add
fwait
xor
arpl
or
sbb
cld
(bad)
test
mov
movs
cmp
lds
mov
xor
daa
adc
in
pop
out
ret
jae
adc
(bad)
xor
out
ds
add
jns
movs
ds
arpl
push
push
push
sbb
mov
push
aam
pop
mov
retf
in
scas
inc
loop
lahf
cmc
fnstenv
(bad)
in
push
mov
sub
jb
outs
xor
ret
dec
xor
add
(bad)
shr
jle
cmp
push
cmps
add
adc
dec
and
aad
(bad)
repz
or
inc
mov
xor
push
sbb
clc
jmp
aaa
or
outs
dec
fstp
sbb
push
fstp
xchg
addr16
push
cdq
pop
shl
ins
pop
push
mov
repnz
out
test
nop
mov
cmc
out
mov
enter
lods
jp
sbb
imul
push
adc
test
cmp
in
call
das
mov
sub
movs
or
data16
dec
mov
neg
and
xchg
xchg
mov
cmp
sbb
pop
or
mov
jb
loop
je
add
fdivr
cmc
(bad)
xor
sub
(bad)
lock
sar
xchg
and
call
arpl
arpl
test
push
pop
jle
aaa
pop
ins
mov
jno
scas
arpl
sub
and
test
push
bound
jmp
jne
mov
or
mov
add
cmovs
or
mov
push
mov
inc
dec
scas
xchg
call
test
push
and
(bad)
mov
push
and
sahf
xor
test
(bad)
xor
xchg
pop
adc
out
and
jnp
aad
inc
call
sar
xchg
cwde
jmp
adc
call
movs
adc
loope
xor
je
cwde
add
adc
xor
les
popa
sub
jo
dec
dec
pop
imul
mov
sahf
adc
jecxz
xchg
imul
loopne
sar
loop
dec
hlt
sbb
fdivp
add
dec
cmp
call
cs
add
adc
xor
rol
cli
iret
jmp
dec
daa
lods
or
movs
je
jmp
xor
idiv
inc
lahf
dec
adc
cmp
cdq
test
xchg
mov
fidivr
nop
jae
movs
sub
in
ins
icebp
cli
push
jb
mov
repz
xor
fistp
adc
js
retf
clc
xor
and
or
dec
mov
jmp
jg
icebp
popf
cmp
cmp
add
fstp
aam
movs
fwait
mov
mov
in
adc
lds
sar
movs
pop
outs
push
jecxz
jl
mov
jo
cmp
xchg
ret
ret
inc
xor
mov
mov
mov
pop
lds
jge
jno
outs
xchg
call
jecxz
pop
movs
sbb
xchg
leave
gs
push
rcr
sbb
dec
cmps
mov
sub
dec
dec
dec
lods
and
lock
repnz
std
sar
fs
addr16
je
test
scas
sbb
jae
jne
ja
sti
repz
mov
and
push
aas
js
aad
jle
or
jo
mov
ret
call
iret
cmps
inc
adc
jb
jae
mov
mov
mov
mov
add
jmp
push
ins
lea
shr
pop
mov
push
imul
aam
inc
or
dec
xlat
data16
mov
mov
jae
push
cs
or
mov
out
add
jns
rcl
fdiv
pop
in
ret
iret
jno
mov
imul
mov
in
int3
sbb
add
nop
mov
test
sbb
mov
(bad)
xor
mov
clc
sub
inc
inc
(bad)
cmp
pop
sbb
push
icebp
aam
lods
sbb
fstp
popa
ds
xor
jmp
gs
and
add
scas
lods
mov
adc
push
repnz
pusha
je
xchg
aas
xchg
xor
pop
ins
push
arpl
or
sub
add
push
xchg
cmps
retf
fwait
sbb
clc
lea
sub
mov
and
sbb
mov
and
outs
jae
data16
or
and
mov
jmp
inc
xor
loope
(bad)
outs
lods
aaa
xchg
sub
and
out
out
jo
push
mov
call
adc
sti
out
lods
ret
adc
test
cmp
or
fdiv
push
pop
xor
pop
fcomp
sete
jnp
pusha
ret
(bad)
sahf
dec
mov
popf
out
mov
or
(bad)
dec
fld
fild
jmp
pop
dec
inc
push
out
fnstsw
dec
xlat
adc
in
mov
scas
aas
push
retf
pop
and
mov
aad
hlt
push
(bad)
push
mov
mov
adc
leave
ret
loopne
ss
xor
int
loope
jo
mov
test
cli
outs
pop
je
addr16
fist
mov
inc
test
cmp
adc
mov
xor
xchg
ins
retf
(bad)
sbb
pop
imul
sub
mov
add
adc
sahf
xchg
test
hlt
xchg
sbb
loop
push
xchg
aaa
and
mov
xchg
loop
out
sub
sbb
shr
out
cmp
push
retf
jae
sbb
test
sub
lods
add
sti
movs
push
inc
fnstsw
mov
xor
jecxz
(bad)
sub
pop
cdq
aas
or
xor
test
dec
pop
jns
idiv
cmc
out
xchg
mov
imul
add
and
sbb
icebp
xor
das
and
jo
mov
ds
xlat
pop
inc
xchg
lods
rcr
add
mov
bound
call
(bad)
jns
pop
adc
pop
lds
clc
cmps
test
mov
rcl
cmps
mov
xor
pop
out
mov
call
mov
jmp
fs
jne
inc
(bad)
mov
fild
mov
jbe
pop
outs
lock
into
pop
loopne
in
fild
(bad)
movs
add
dec
xchg
mov
rcr
push
or
jl
add
push
fwait
mov
sar
test
jno
mov
hlt
adc
std
outs
bound
inc
fimul
(bad)
fldenv
sbb
ror
test
nop
div
addr16
out
ret
icebp
and
cmps
or
movs
out
xchg
mov
inc
push
fld
std
(bad)
and
mov
xor
jmp
in
sti
mov
js
(bad)
mov
mov
outs
pop
push
dec
jmp
in
je
(bad)
or
ins
ret
(bad)
daa
add
mov
icebp
cmp
aas
push
scas
mov
jb
sub
imul
xchg
stos
ja
push
je
into
ret
add
xor
sub
push
jp
and
mov
mov
and
cmp
std
jecxz
mov
dec
and
sahf
xchg
retf
lods
push
inc
call
sbb
ins
wrmsr
adc
dec
jns
cdq
mov
retf
cli
rcl
xchg
mov
cmp
mov
stc
cmp
inc
mov
or
or
pop
lea
repz
shl
xor
aam
cmp
stos
iret
sub
mov
mov
cwde
inc
sti
and
icebp
cmc
loope
in
fstp
mov
pop
mov
or
fidiv
movs
pusha
jns
mov
pop
inc
mov
rol
xor
in
inc
xor
fldcw
mov
(bad)
fucomip
outs
jbe
mov
push
stc
ret
sbb
mov
mov
add
imul
arpl
mov
push
mov
imul
mov
int3
add
in
(bad)
int3
add
push
mov
jno
cli
daa
mov
and
clc
or
outs
push
mov
aad
mov
dec
das
fst
and
scas
xchg
jnp
inc
imul
sub
mov
inc
mov
push
sbb
pop
fidiv
xchg
clc
sbb
shl
stc
pop
mov
test
pop
mov
icebp
lds
ficom
sub
(bad)
xchg
fwait
in
leave
pop
sub
imul
jb
mov
mov
fdivr
or
rcr
rcl
rcl
les
mov
movs
clc
dec
and
or
or
lods
sub
mov
(bad)
cmp
xchg
xor
cmp
cmps
outs
jbe
and
lgs
xor
fnstenv
out
mov
or
jae
int3
ret
add
clc
jle
lock
js
push
pop
int3
imul
jnp
inc
out
adc
ror
popf
mov
xor
(bad)
and
mov
lahf
xlat
jle
or
or
mov
not
dec
jmp
mov
mov
repz
mov
mov
cli
add
data16
fidiv
into
fistp
adc
inc
adc
sub
test
cmps
sti
dec
in
aaa
jno
leave
les
out
push
shl
pop
and
js
and
mov
xor
popa
repnz
cmp
jmp
repnz
ret
pop
sbb
idiv
cdq
mov
mov
xlat
jge
fs
push
xor
lock
inc
and
je
repnz
leave
add
mov
sub
and
cmp
mov
leave
jecxz
cmp
xchg
adc
jp
pop
test
push
fnsave
out
popf
popa
or
jno
frndint
inc
jne
or
or
imul
scas
lods
stos
mov
test
mov
mov
jmp
out
mov
fild
ins
mov
jbe
xor
mov
imul
retf
aas
mov
(bad)
jp
pop
add
mov
jle
mov
cmps
cmps
pop
mov
and
mov
xlat
inc
mov
adc
inc
scas
push
or
inc
lods
cmp
retf
(bad)
ds
mov
repnz
and
and
xlat
(bad)
inc
movs
cs
shl
cli
mov
inc
cmp
cmp
xor
out
enter
mov
(bad)
jmp
lods
leave
call
fiadd
or
xchg
call
mov
stos
aam
add
inc
push
jecxz
(bad)
pop
fcomp
pop
and
adc
mov
mov
std
test
int
(bad)
imul
fldenv
push
xchg
iret
pop
cmp
loop
xchg
mov
je
dec
cmps
aaa
dec
add
and
inc
js
pusha
dec
push
pop
scas
pop
lods
mov
cmp
and
cmp
dec
sbb
in
sti
mov
cmp
jns
mov
and
cvtdq2ps
adc
jg
xchg
sti
adc
aam
aad
shl
ds
push
xchg
cmp
push
mov
inc
inc
adc
movs
mov
and
outs
inc
in
int
mov
leave
ds
cmp
aaa
fwait
out
shl
mov
jns
dec
mov
fnstcw
jmp
(bad)
sbb
(bad)
jo
push
clc
(bad)
mov
repnz
jae
jbe
sbb
outs
cs
stos
pop
mov
mov
rcl
ds
(bad)
in
mov
leave
jge
jbe
pop
sub
shr
mov
int3
push
push
nop
sbb
sbb
out
arpl
lock
and
popa
movs
mov
bound
les
and
pop
push
and
pusha
mov
dec
and
lods
sbb
mov
cmp
sbb
and
push
dec
jp
dec
xor
push
or
xchg
stos
aas
fidivr
pop
and
push
jecxz
cdq
aam
jp
xlat
daa
mov
or
mov
outs
lods
inc
xchg
jo
sub
sahf
jbe
mov
sub
mov
cdq
scas
push
push
scas
outs
sar
jb
setg
push
icebp
(bad)
mov
inc
push
xor
dec
pop
xchg
stos
cmp
std
and
lea
cwde
mov
jmp
adc
das
(bad)
(bad)
xlat
mov
adc
in
xor
jno
mov
cmp
mov
jmp
mov
xor
jle
fnsave
jp
mov
or
imul
call
out
cmps
or
popf
push
jg
xchg
push
mul
rol
movs
mov
mov
imul
retf
jmp
fcomip
mov
push
mov
push
ds
in
and
push
sar
(bad)
mov
cmc
leave
inc
mov
call
or
mov
jmp
lods
movs
test
pop
xor
shl
cmp
push
cli
outs
mov
aas
inc
lods
popa
dec
xchg
mov
pop
mov
jecxz
push
dec
jo
jmp
out
inc
lods
iret
mov
xor
and
mov
inc
xchg
push
jo
int
cmp
dec
cld
mov
pop
pop
jnp
data16
test
and
inc
ja
dec
daa
mov
sbb
jp
sub
dec
pop
push
aam
mov
mov
ds
push
sbb
mov
mov
(bad)
pushf
xchg
mov
jne
and
cmp
dec
in
ret
sti
mov
mov
das
adc
ret
cmps
xchg
xor
and
push
aad
dec
fmul
or
ret
nop
inc
ret
enter
add
lods
push
stc
push
jbe
lock
stc
loop
mov
cmc
mov
rcl
cmp
aad
mov
mov
cwde
push
and
out
dec
(bad)
jno
rcr
enter
(bad)
cs
cmp
loop
xchg
mov
shr
nop
ret
leave
cmp
sub
in
sub
int3
aas
jo
adc
xchg
and
aad
dec
cs
fidiv
mov
mov
push
ret
inc
dec
or
lods
rcr
test
repz
pop
fsub
cmp
jecxz
xor
int3
mov
js
inc
push
dec
push
fdivr
pop
pop
jmp
in
dec
jb
mov
fstp
push
mov
jp
daa
nop
(bad)
jl
push
dec
test
mov
mov
cs
mov
repz
outs
retf
sbb
mov
inc
repnz
mov
sub
jle
mov
in
fs
xchg
sub
jl
adc
sbb
cdq
in
(bad)
shl
sti
fsubr
out
mul
or
out
cmps
adc
in
push
je
ret
pushf
fist
inc
lock
mov
lods
push
enter
jb
aam
pusha
movs
dec
pop
repnz
leave
cmp
fdiv
jbe
and
mov
jnp
inc
push
in
cmp
xchg
or
inc
pop
mov
jo
inc
add
mov
jmp
lods
dec
loopne
dec
test
add
jmp
push
push
icebp
jmp
and
add
push
in
aas
sbb
sub
loop
mov
int3
xlat
scas
pop
out
adc
mov
mov
inc
pop
push
clc
jns
xchg
bnd
stos
xor
push
pop
adc
add
jge
xchg
xchg
mov
adc
xor
jnp
pop
xchg
dec
std
loope
mov
lds
sub
lahf
mov
push
scas
std
rcr
mov
lods
sub
sub
call
jae
dec
out
lahf
mov
ja
mov
adc
in
nop
(bad)
jmp
push
sbb
stc
in
jnp
xchg
inc
or
fisub
add
xchg
fidiv
cmp
mov
mov
test
xchg
icebp
sub
iret
(bad)
sar
adc
dec
and
dec
je
aas
mov
and
mov
ret
xchg
dec
rcr
fdivr
jne
mov
cmps
cmp
popa
fs
out
cmp
mov
rcr
sbb
cdq
std
imul
mov
jb
ins
pop
dec
fimul
cmp
sbb
xor
inc
push
sti
push
pop
sbb
aad
dec
fnstsw
and
adc
pop
lea
add
jns
iret
xor
sbb
jmp
mov
jl
jg
test
pushf
pop
inc
add
mov
mov
mov
call
outs
xchg
sub
mov
xchg
dec
ficom
adc
mov
imul
push
out
sub
mov
lahf
jne
movs
sub
mov
pop
cmps
ret
outs
and
jo
push
vmovd
nop
mov
push
scas
(bad)
jns
dec
mov
jae
(bad)
icebp
push
mov
adc
push
retf
neg
in
scas
scas
add
int3
xor
sub
repnz
or
dec
mov
sbb
push
xchg
or
cmp
push
out
frstor
(bad)
jno
fidivr
das
(bad)
(bad)
cmp
push
xchg
or
push
aas
add
pop
or
inc
jle
inc
and
sahf
xchg
pop
in
lods
sbb
mov
cwde
xlat
jmp
adc
imul
jmp
out
inc
mov
je
lock
adc
movs
cdq
sbb
repnz
out
inc
mov
cmp
or
test
adc
data16
pop
sub
enter
loope
or
cmc
scas
in
icebp
mov
fcomp
xchg
xor
pop
dec
cdq
adc
dec
ret
enter
push
jo
fcom
push
jno
and
mov
data16
data16
or
(bad)
xor
loopne
lock
shr
mov
pop
xchg
aam
cmp
je
or
mov
pop
dec
sub
(bad)
aad
jge
pushf
enter
inc
push
push
or
fisttp
(bad)
xor
mov
clc
jnp
lahf
psrlq
lsl
push
mov
jge
mov
mov
mov
xor
popa
mov
and
lahf
xor
add
ror
out
call
jle
cli
nop
push
mov
inc
out
cmp
dec
and
mov
movs
cmp
mov
cli
mov
xchg
xor
outs
pop
hlt
mov
in
and
add
xchg
jl
out
add
xor
fstp
inc
movlps
in
fdiv
fdiv
sbb
sub
pop
xchg
fwait
mov
imul
inc
and
dec
into
out
xor
rcr
cmp
in
jmp
add
jo
mov
out
xchg
pushf
push
jge
mov
jmp
push
inc
shl
or
setb
aad
mov
dec
in
(bad)
fldenv
dec
(bad)
out
pop
adc
mov
inc
xor
inc
mov
xchg
push
ret
and
xor
cmp
test
nop
retf
rcr
movs
sar
pop
xor
mov
scas
in
jmp
jne
aas
xchg
add
cwde
xor
in
jo
push
das
jno
fsubr
sub
mov
xor
lock
push
push
cld
adc
loopne
movs
aad
push
and
sub
mov
or
push
mov
push
rol
repz
das
dec
sar
or
jmp
and
out
add
sub
sahf
xchg
rcr
jg
clc
retf
sbb
mov
imul
inc
dec
pop
out
addr16
aas
xchg
and
les
push
mov
mov
or
ficomp
push
sub
mov
mov
iret
es
add
ds
mov
cdq
mov
into
add
cmp
lods
ret
out
fist
rol
push
or
sub
cmc
cmps
mov
mov
mov
leave
sub
jg
pop
mov
repnz
iret
pop
stos
sub
and
cmp
or
pop
mov
pop
sub
jb
daa
mov
mov
pop
and
adc
into
or
loopne
add
jno
dec
cmp
xor
or
adc
cmp
fwait
or
adc
ficomp
mov
sub
mov
pop
sbb
xchg
mov
mov
outs
mov
push
xchg
mov
(bad)
(bad)
out
cmp
imul
enter
and
outs
adc
jmp
repnz
gs
repnz
inc
add
and
and
mov
inc
mov
inc
stc
ret
push
dec
mov
mov
mov
scas
xor
inc
mov
leave
retf
pop
sar
xor
pop
pusha
sub
ins
fmul
pop
stos
xlat
cld
adc
xor
push
and
in
idiv
push
imul
pop
sbb
adc
push
repz
cwde
mov
xor
cdq
pop
xchg
stos
ja
cmp
test
retf
ins
adc
repz
hlt
retf
cdq
aad
aas
mov
and
mov
(bad)
popa
adc
jl
icebp
jnp
sbb
xchg
popa
shr
inc
pop
movs
jmp
xor
bswap
cmp
xchg
imul
jecxz
(bad)
movs
adc
repnz
loop
pop
pop
addr16
dec
imul
add
scas
movs
out
rcl
dec
mov
add
popf
pop
in
and
and
pushf
or
add
xchg
push
loop
inc
je
adc
inc
jno
fisttp
cmp
jno
lods
and
or
les
in
push
jns
mov
dec
push
pop
ss
out
or
clc
xor
hlt
aas
jb
ja
dec
out
inc
and
add
icebp
imul
pop
cmc
mov
out
inc
pop
mov
enter
in
jge
inc
inc
add
xchg
pusha
and
lods
in
je
push
or
dec
in
xchg
add
scas
fadd
in
cmp
cmc
sar
push
imul
aam
xor
cmps
scas
rcr
retf
mov
pop
(bad)
xchg
test
(bad)
popa
ins
pop
xor
dec
hlt
movs
sbb
fsub
push
add
sub
fsubr
ror
pop
xor
xchg
arpl
mul
mov
mov
js
data16
sub
or
mov
repnz
mov
int
movs
jmp
das
sti
xor
xor
or
jmp
addr16
in
rcl
out
aaa
adc
mov
push
loopne
sbb
or
jno
ret
add
arpl
xor
aad
stc
ret
or
pop
test
mov
xchg
shl
adc
xchg
jmp
xlat
cld
xor
xchg
xor
ins
imul
dec
in
inc
aam
mov
jmp
in
cmps
inc
sub
jns
ds
add
mov
popa
cmp
shr
mov
movs
clc
dec
and
mov
adc
lods
cmp
enter
jmp
cmp
push
scas
pop
iret
jl
daa
mov
dec
sub
dec
je
mov
jp
ret
inc
sbb
out
jmp
push
sub
lods
push
mov
mov
push
add
test
bound
pop
ds
sub
test
pop
cmp
or
add
adc
xor
sbb
imul
xchg
movs
nop
cmc
inc
jne
js
data16
fdivr
das
mov
scas
test
pop
mov
cli
sub
je
xchg
sub
sub
ins
repnz
mov
int
sbb
cmp
inc
loope
jnp
push
das
dec
jb
inc
cwde
mov
mov
in
sub
dec
push
sbb
mov
enter
add
mov
(bad)
in
retf
mov
add
cs
pop
psraw
push
fsubr
jo
ss
dec
mov
retf
mov
lock
scas
mov
push
mov
xchg
std
jmp
test
pushf
(bad)
into
xchg
lods
cmp
or
sub
retf
adc
popa
or
div
std
into
test
pop
dec
xchg
int3
mov
scas
mov
add
adc
pusha
aad
shl
fnstenv
inc
and
or
repz
(bad)
push
movs
out
pop
add
push
sub
scas
in
jle
push
adc
pop
in
popa
cmp
mov
xor
(bad)
shr
mov
sub
xchg
jb
mov
pushf
cld
jmp
fwait
mov
mov
(bad)
and
in
stos
cmc
add
mov
fdiv
in
mov
add
xchg
jl
shr
ins
mov
mov
outs
js
clc
push
repz
mov
add
adc
cmp
(bad)
mov
imul
retf
fwait
dec
stos
inc
(bad)
std
test
mov
xor
jmp
int
jae
jmp
mov
cmp
in
cmp
fdecstp
ds
push
or
sub
push
mov
dec
mov
mov
xchg
sbb
add
sub
jle
cmp
xor
push
mov
cmps
sbb
mov
scas
clc
aas
push
aam
pop
cli
inc
arpl
mov
add
jmp
add
inc
cwde
test
jle
outs
or
or
add
pop
pusha
mov
jb
mov
cli
or
stos
ja
adc
adc
inc
in
ret
stos
mov
stos
les
add
lahf
mov
ds
icebp
popa
mov
iret
repz
loopne
cwde
inc
data16
out
pop
call
aaa
movs
jge
push
xor
lds
mov
ins
arpl
jl
mov
pop
dec
push
sub
xor
mov
mov
(bad)
xlat
in
lea
adc
out
mov
sahf
jns
shr
(bad)
cmp
popa
xor
lds
idiv
and
and
stos
out
nop
dec
or
js
add
out
xor
fs
pop
sub
cmovo
out
sahf
mov
jg
je
mov
mov
loopne
or
adc
jecxz
and
jo
rcr
adc
dec
or
or
cdq
mov
sbb
mov
add
mov
push
stos
nop
stc
out
adc
cwde
mov
adc
jno
jne
cmps
cmp
add
out
or
cmps
stos
mov
inc
ja
or
push
mov
pop
xrelease
icebp
adc
(bad)
js
nop
mov
sub
movs
aaa
scas
add
std
(bad)
adc
into
popa
out
mov
lods
call
(bad)
add
jno
cmps
jmp
jno
sar
or
xor
jl
test
icebp
fstp
das
int3
nop
mov
aas
jne
or
cmp
in
in
lds
sub
repz
pop
cmps
in
into
xor
jle
pop
movs
mov
sub
rol
sbb
(bad)
add
repz
pop
or
inc
(bad)
or
add
mov
call
sbb
pop
cdq
sub
sti
mov
inc
mov
ja
cld
ret
rcl
inc
outs
mov
les
fcomp
and
dec
and
ja
or
outs
shl
dec
dec
mov
inc
test
or
adc
and
ret
cdq
retf
retf
adc
xor
pop
test
sub
nop
cmp
js
cmps
mov
cmc
jmp
xchg
cwde
xor
(bad)
push
inc
cld
inc
imul
cdq
fistp
in
sub
xlat
inc
xchg
in
clc
popa
jecxz
retf
sahf
bound
sbb
call
mov
push
arpl
fs
ret
mov
mov
pushf
(bad)
adc
shl
push
dec
fld
add
and
adc
movs
mov
jg
fisttp
(bad)
cmp
cmp
cmps
icebp
or
jbe
iret
inc
sahf
out
adc
cmp
push
sub
test
cmps
push
or
retf
(bad)
pop
pop
popf
ds
pop
(bad)
push
mov
jae
aaa
inc
inc
call
clc
inc
test
rcl
jg
xchg
into
pop
pop
(bad)
cdq
mov
test
pop
cmp
pop
rol
pop
pop
xchg
xchg
rol
sub
xlat
movs
pop
rol
adc
in
mov
jg
(bad)
loopne
push
not
sahf
leave
mov
les
xor
jge
les
dec
xor
or
jae
dec
adc
lea
jbe
out
jns
pop
jmp
dec
sbb
mov
xor
mov
add
push
xchg
mov
add
add
add
xor
movs
int
addr16
jp
jl
jns
aam
add
ret
in
mov
hlt
js
xchg
enter
aam
test
aam
leave
test
popf
stos
jmp
push
dec
in
in
mul
xor
in
mov
xor
loop
pusha
dec
fnstcw
cs
mov
sbb
xchg
mov
and
push
cs
call
and
jecxz
loope
sahf
les
cmp
inc
push
sub
out
cwde
ins
sub
mov
xor
xchg
iret
or
imul
call
cli
dec
sahf
aas
jp
inc
mov
ds
shl
pop
loope
(bad)
fs
or
lea
test
scas
fldcw
jg
mov
mov
xlat
or
arpl
pop
push
movs
jnp
ficom
or
xchg
mov
pop
add
fadd
sahf
mov
btr
pop
mov
pop
inc
add
ss
jne
ins
call
mov
dec
sub
add
leave
sbb
test
scas
fwait
test
sub
fstp
das
mov
sub
jmp
add
xor
das
imul
dec
xlat
das
imul
sub
(bad)
test
inc
sbb
inc
(bad)
stos
push
xchg
inc
shl
jecxz
test
leave
inc
mov
je
out
or
push
cmp
mov
daa
dec
lods
pop
out
and
jnp
(bad)
pop
pusha
movs
inc
sub
call
test
lock
mov
sbb
mov
movs
clc
pop
shr
mov
in
inc
inc
nop
pop
sub
mov
push
push
out
sub
xchg
push
xor
jno
mov
test
fdiv
add
xchg
ins
or
adc
loope
push
int3
or
push
jge
mov
mov
cmp
mov
mov
leave
add
shr
xchg
(bad)
cmp
inc
jp
mov
ja
wrmsr
push
sbb
fdiv
imul
jge
dec
push
adc
in
loope
add
ret
jbe
cmps
popa
push
das
jmp
pop
dec
jp
dec
iret
pop
mov
cmp
adc
fwait
or
inc
bound
push
push
or
stc
rep
sbb
fistp
cmc
aaa
sbb
dec
loop
in
ftst
fidivr
add
iret
adc
jnp
dec
lods
fistp
fld
(bad)
cmp
pusha
sbb
shr
imul
out
sbb
or
pop
xor
(bad)
push
nop
pop
ds
out
jge
lods
and
hlt
add
loopne
arpl
sbb
imul
int
push
inc
shl
iret
imul
dec
add
cld
dec
xchg
push
lods
adc
lahf
pushf
popa
inc
bound
shl
inc
dec
pop
in
cs
rcr
mov
(bad)
fisub
test
out
in
and
sbb
leavew
add
xlat
in
xor
jmp
(bad)
into
or
pop
mov
out
jmp
add
fist
imul
cmc
cmp
xchg
mov
cmp
retf
shl
icebp
sbb
(bad)
jbe
xor
mov
adc
out
push
mov
mov
jge
std
pop
retf
mov
(bad)
(bad)
xchg
gs
test
leave
mov
adc
es
jg
jns
test
sbb
loop
lea
inc
(bad)
dec
in
retf
xor
sub
sti
inc
retf
push
xchg
lahf
pop
jmp
arpl
pop
and
adc
hlt
inc
outs
lods
mov
add
jbe
neg
mov
xchg
mov
jp
and
movs
jge
cmps
std
jnp
add
jae
pop
stos
(bad)
jge
cdq
jle
test
addr16
lea
and
pop
lods
dec
xchg
into
shr
mov
(bad)
mov
sbb
aaa
(bad)
xchg
lea
out
mov
jnp
mov
mov
sbb
hlt
mov
add
pusha
mov
fisub
xor
mov
mov
pop
and
rcr
jne
imul
scas
aaa
inc
inc
retf
(bad)
push
lds
loop
outs
out
inc
xor
add
pop
jl
repz
int3
cmp
inc
pop
push
cmps
ins
jge
jmp
xchg
test
mov
jbe
ret
lods
ret
mov
dec
ret
and
cmps
sbb
jle
push
sbb
add
aaa
xor
cmp
outs
push
push
dec
cs
and
adc
dec
or
test
jb
add
call
je
inc
sub
mov
xchg
(bad)
ror
adc
out
or
fisttp
fcmovnbe
xchg
pop
sti
add
sar
(bad)
adc
mov
fdivrp
rcr
loopne
mov
loopne
rcr
aas
xchg
std
aaa
mov
jno
inc
dec
or
cmp
cld
jno
push
and
int
retf
xor
test
cwde
or
jo
add
mov
ins
cwde
mov
push
(bad)
mov
xchg
mov
dec
sub
sbb
dec
icebp
add
jl
xor
inc
mov
retf
cmc
cmp
popf
repnz
and
pop
call
nop
dec
add
sbb
sbb
fldenv
dec
out
stos
xlat
nop
call
jnp
mov
mov
test
mov
scas
rcl
dec
sbb
(bad)
popa
movs
xor
popa
pop
cmp
xchg
popf
out
sbb
cmp
ret
add
jle
inc
enter
out
xchg
xor
outs
or
add
aad
repz
mov
xor
test
mov
add
add
(bad)
hlt
out
loope
push
jne
or
pinsrw
adc
mov
jns
cmp
movs
adc
addr16
lods
popf
lock
pushf
aaa
(bad)
sahf
(bad)
push
mov
(bad)
cmp
ror
pop
push
pop
inc
movs
cmc
movs
mov
push
sbb
fst
aam
jnp
test
fist
cld
aam
into
aam
add
popa
or
or
mov
in
cmp
pop
repz
je
jbe
addr16
loopne
test
jl
jae
frstor
(bad)
pop
sbb
and
cld
xchg
out
into
test
retf
imul
lods
mov
fwait
mov
in
es
scas
and
stos
inc
outs
sbb
xchg
je
inc
add
jne
fist
mov
cld
jne
push
add
cmp
xor
aas
mov
add
mov
mov
sar
loope
inc
sbb
add
cli
pop
sub
stos
lds
push
dec
inc
inc
add
push
add
dec
int3
aaa
mov
fild
inc
push
sti
adc
pop
xchg
push
inc
cdq
loop
pop
popf
std
dec
aas
pushf
jno
out
fstp
mov
xchg
inc
mov
xchg
inc
jne
lods
jb
jmp
or
fidiv
into
xor
xor
pop
shl
mov
sub
popa
jns
cmp
cmp
dec
ss
cs
mov
ins
adc
ja
xchg
not
xchg
jmp
push
pop
push
jo
push
mov
ja
adc
or
xchg
in
sbb
and
adc
scas
pop
addr16
ins
sub
mov
and
push
add
shr
fnstenv
rcl
inc
push
fisttp
jnp
fsub
adc
pusha
pop
and
mov
pop
or
push
push
fmul
cmp
add
fild
div
sbb
fld
mov
movs
xchg
int3
jnp
dec
or
rol
sbb
movs
aaa
stos
aaa
data16
and
xor
inc
dec
in
dec
(bad)
mov
out
pop
cmp
(bad)
mov
(bad)
cmp
mov
repz
mov
cdq
scas
adc
push
call
fimul
xor
cmp
pop
shl
test
push
cmp
loopne
(bad)
push
xchg
add
stos
jecxz
retf
mov
dec
and
pop
sti
lds
xchg
inc
out
int3
movs
sbb
std
fwait
xor
cmp
test
xchg
sub
jge
fs
into
add
jge
(bad)
pop
outs
cmp
leave
in
mov
mov
add
jmp
dec
aam
cwd
aas
push
lock
and
mov
aas
gs
jp
jmp
hlt
inc
mov
inc
cmp
inc
add
xlat
cmp
hlt
adc
ds
(bad)
aam
dec
scas
push
mov
cmps
push
fimul
cwde
pop
test
push
jecxz
dec
sub
push
int3
and
mov
aaa
push
push
clc
push
out
mov
cmp
ret
and
rcl
retf
test
aad
push
out
mul
fidiv
inc
fnstenv
(bad)
(bad)
cwde
fwait
sbb
mov
(bad)
jns
mov
lods
iret
scas
les
in
fld
inc
dec
push
data16
push
xchg
push
push
das
fist
and
push
push
cmp
iret
pop
xor
pushf
rol
jge
or
out
bound
jecxz
and
add
and
push
in
add
inc
inc
mov
jnp
sbb
or
mov
inc
popf
adc
lock
add
push
std
mov
jmp
retf
dec
inc
or
mov
dec
setle
cs
pusha
sub
cwde
jl
pusha
cmp
sbb
mov
sbb
cmp
add
ror
mov
sub
iret
(bad)
jb
add
push
fistp
(bad)
mov
ins
rcl
inc
mov
mov
pop
jle
pop
ja
inc
in
ins
pop
mov
fimul
jmp
ret
push
jmp
clc
pop
mov
addr16
int
push
test
dec
xchg
leave
adc
inc
push
mov
test
stc
call
rcr
push
(bad)
(bad)
inc
call
ins
dec
and
iret
repz
popf
test
jmp
ucomiss
pop
xchg
call
cli
daa
test
int3
icebp
sub
cmp
adc
xchg
mov
fisttp
in
and
cmp
dec
sub
fild
call
(bad)
in
(bad)
retf
aas
ret
out
mov
sbb
xchg
jmp
push
xchg
sti
mov
pminub
and
ficomp
mov
leave
jnp
loop
cmp
ror
ins
fimul
jae
aas
clc
sbb
xchg
pushf
test
sar
test
cld
push
push
pop
pusha
(bad)
lock
cmp
rol
bound
int
sbb
mov
popa
adc
or
add
loop
cwde
rol
mov
fs
add
adc
inc
add
mov
sub
jmp
and
pushf
ret
and
cmc
add
fwait
pop
pop
je
adc
jle
inc
out
cmp
aas
test
out
sahf
pushf
cmp
(bad)
and
cmps
scas
pop
lds
add
test
jo
(bad)
data16
mov
inc
sti
rol
pop
push
xchg
xchg
(bad)
in
mov
pop
dec
pusha
sub
dec
out
test
xchg
and
stc
cld
sbb
sbb
jmp
dec
and
in
and
cmp
push
push
(bad)
push
mov
imul
test
sub
jno
push
hlt
push
mov
mov
les
xor
push
push
popf
in
xchg
inc
in
cmp
dec
sbb
push
stos
adc
add
pop
cmp
lea
stos
aad
ret
js
scas
xchg
and
nop
movs
mov
enter
sbb
and
pushf
fadd
mov
scas
jne
aad
lods
shl
mov
push
arpl
lock
lahf
or
frstor
jbe
lea
in
out
mov
ins
pop
mov
movs
mov
jno
cmc
dec
retf
and
in
jns
mov
jae
daa
pop
cmp
ja
lds
ret
icebp
xchg
cmc
cmp
fsubrp
xor
mov
xor
mov
push
out
sahf
cmps
push
push
(bad)
jmp
sar
or
lock
xchg
sbb
sbb
inc
mov
mov
test
adc
out
jl
sbb
or
repnz
or
inc
in
stos
out
inc
out
push
test
in
mov
(bad)
pusha
mov
pop
bound
dec
add
ficomp
dec
movs
cmp
das
adc
and
pop
clc
cmp
imul
pusha
outs
sub
mov
repnz
mov
loopne
adc
pop
cwde
push
xor
bound
lea
push
hlt
gs
dec
movs
stc
pop
rol
ret
jg
stos
(bad)
mov
push
push
call
push
mov
pop
dec
or
jo
enter
dec
movs
dec
mov
jp
jle
sub
stc
add
dec
hlt
stos
mov
push
xchg
push
out
sahf
sbb
or
sub
add
fisttp
sbb
inc
ret
xchg
in
scas
dec
push
adc
test
push
sbb
xchg
sub
jp
mov
adc
(bad)
fpatan
hlt
sub
mov
mov
cmp
and
test
fist
pop
stc
cld
mov
xor
and
cmp
dec
mov
dec
mov
int
les
int3
adc
outs
cmp
mov
sbb
(bad)
jl
sahf
pop
xor
inc
add
or
and
cwde
dec
fistp
push
adc
stos
loop
mov
imul
out
loop
(bad)
jmp
mov
cwde
adc
sbb
jp
icebp
pop
icebp
ror
adc
fidivr
repz
in
data16
mov
add
loope
mov
jno
jle
aas
dec
mov
cs
out
or
daa
jge
jg
dec
ret
fnstsw
and
mov
out
mov
jb
sub
xor
in
dec
scas
fstp
ins
dec
dec
jecxz
mov
jae
(bad)
cld
inc
pop
and
pop
and
fnstenv
aaa
push
pop
sub
lock
mov
pop
cmc
clc
cmp
dec
cmp
daa
pop
lahf
dec
test
inc
pop
xor
mov
in
mov
retf
cmp
jae
xchg
in
fild
out
inc
pop
add
and
jmp
pop
test
sbb
out
or
xor
retf
fadd
add
ror
out
push
mov
int
cld
clc
fwait
lods
dec
sbb
mov
mov
push
repz
inc
stos
neg
and
sar
dec
outs
iret
inc
push
cmp
mov
push
icebp
xchg
loope
and
imul
cwde
dec
leave
test
mov
cmp
pop
shl
jmp
aas
cwde
shl
push
or
(bad)
fstp
and
jge
retf
sti
or
push
jmp
popf
cmp
cwde
jae
push
pusha
cdq
sbb
loop
adc
or
dec
adc
daa
int
mov
in
ret
mov
outs
into
inc
cmc
arpl
test
add
inc
sub
nop
add
js
jae
inc
mov
sub
dec
sub
out
inc
adc
mov
adc
cmp
gs
and
fisttp
retf
nop
lock
mov
sub
sub
and
cli
repnz
cli
sbb
leave
adc
mov
jmp
cdq
mov
int
jmp
mov
push
cli
or
fdiv
xor
inc
rol
aad
or
(bad)
and
mov
and
lods
lods
das
aad
lods
imul
push
cdq
ret
js
repz
jae
dec
mov
jnp
and
fst
xor
enter
adc
dec
pop
sub
cwde
sub
jle
mov
and
or
popf
dec
movs
jnp
push
hlt
cmps
leave
ret
lock
pop
jb
icebp
mov
call
mov
movs
push
test
dec
dec
out
adc
cld
popa
adc
mov
push
cs
and
xchg
ss
jmp
leave
push
shr
loope
add
popa
rcl
adc
inc
inc
inc
hlt
xchg
mov
aaa
lahf
mov
xchg
sbb
cmps
sub
retf
sub
rol
mov
adc
fbld
cmps
xor
aaa
push
xor
cmp
mov
(bad)
push
xchg
out
sub
adc
ins
scas
or
and
push
adc
cmp
xchg
xchg
sub
ins
out
enter
push
mov
stos
bound
(bad)
sbb
shr
push
jno
stos
(bad)
jae
cmp
cs
(bad)
je
arpl
dec
add
ret
test
out
fidiv
mov
mov
in
sbb
add
popa
add
call
mov
adc
enter
repnz
xor
cmp
test
aas
pop
ja
stos
inc
movs
lea
inc
mov
ja
xor
cmp
dec
(bad)
jp
xor
mov
add
test
sbb
jmp
jmp
retf
jp
xor
sbb
ds
cdq
(bad)
adc
mov
lahf
(bad)
int3
adc
or
jge
xchg
fld
dec
xor
add
sbb
sub
inc
std
mov
mov
test
aad
add
xchg
and
scas
or
mov
into
sbb
loopne
cmp
xor
arpl
xchg
lahf
mov
xchg
outs
xchg
dec
and
mov
fmul
fwait
out
push
lods
loop
mov
inc
pusha
jmp
clc
adc
push
and
push
pushf
mov
fstp
adc
pop
jl
sub
mov
ins
cmp
lahf
pop
std
in
es
push
mov
xor
fsubp
out
adc
std
(bad)
push
js
arpl
dec
jle
and
cmp
daa
inc
add
repz
sar
imul
ret
jp
sub
enter
cs
sbb
sub
mov
jae
jno
mov
shr
xor
inc
cdq
retf
cli
ffree
enter
pop
call
in
jnp
inc
or
stc
fnstenv
jg
dec
jae
jne
aaa
pop
push
jns
or
mov
mov
push
call
lea
imul
cmp
iret
ja
jo
pop
inc
sub
sbb
aad
ficomp
jp
cmp
(bad)
addr16
out
inc
loope
ror
js
ficom
out
int
addr16
adc
add
shl
jo
pop
ins
movs
jle
adc
mov
sub
adc
mov
mov
out
dec
jecxz
nop
retf
xor
jno
adc
loopne
mov
push
inc
rcl
xchg
sar
xchg
mov
xor
imul
repnz
inc
inc
sub
sub
xchg
aad
das
xor
(bad)
mov
mov
frstor
cmp
imul
stc
(bad)
xlat
jl
inc
fld
cmps
add
xlat
mov
call
imul
xchg
cs
push
int
cld
mov
js
xchg
out
div
imul
in
call
inc
push
jl
xor
repnz
ins
ds
inc
cs
ss
sbb
loopne
pop
popf
ja
les
xor
pop
mov
cs
sbb
int
imul
sahf
fnstsw
pop
icebp
scas
dec
push
xchg
mov
outs
mov
push
mov
popa
xchg
sub
or
cmp
cwde
push
loope
lds
jmp
xlat
cmp
je
stc
adc
popf
cli
xor
ins
jmp
and
jb
or
test
adc
ficom
and
mov
enter
xor
inc
aam
ficom
jg
das
loop
mov
jl
ja
add
jmp
rcl
pop
fwait
cli
add
loope
(bad)
fdiv
sbb
push
aaa
push
icebp
jns
inc
adc
stc
lods
mov
push
call
cmps
push
jns
and
out
(bad)
cdq
aas
test
call
ror
pop
dec
retf
ds
and
adc
and
sbb
rcl
inc
mov
cmp
cmc
fmul
push
mov
mov
out
adc
cli
std
stos
movs
mov
adc
jo
rol
xchg
cli
xchg
adc
cli
jns
add
pop
movs
push
xchg
push
mov
out
push
and
cmovns
and
add
(bad)
and
mov
in
icebp
scas
jb
test
push
or
and
fcmovb
std
pop
imul
popf
cld
in
sub
add
cli
sub
call
push
movs
aad
je
(bad)
push
dec
jae
out
mov
mov
fcomp
jnp
cmps
stos
cmc
(bad)
push
shl
dec
push
mov
ret
xchg
mov
mov
cmp
push
cmp
push
ss
arpl
dec
je
ret
cwde
aaa
repz
fwait
pop
inc
mov
call
cli
int
dec
and
mov
cmps
and
push
or
xor
cmp
add
bound
or
jmp
and
mov
scas
out
and
xor
cmp
mov
sbb
push
dec
nop
dec
sbb
mov
xchg
jae
push
(bad)
fcom
lock
xchg
mov
call
loope
inc
dec
ficom
pop
mov
fisttp
xor
jl
push
jg
ret
push
xor
cmp
imul
(bad)
fdivr
cld
push
daa
clc
fcom
daa
loopne
mov
jne
jge
imul
adc
jp
popf
ja
jb
dec
ins
or
sbb
sbb
dec
fwait
adc
aas
aam
imul
sbb
pusha
leave
xchg
cmp
pop
sbb
sbb
sbb
mov
int3
pop
pop
or
cdq
in
push
loope
and
fsub
out
icebp
dec
adc
jns
test
mov
jg
(bad)
in
jae
jb
and
test
xor
add
dec
jns
mov
xor
mov
sub
aad
test
gs
loopne
ja
dec
adc
popf
cmp
cs
xor
shl
jmp
rol
lods
xchg
ror
inc
adc
rcl
dec
fsubr
jle
and
mov
mov
xor
push
mov
aad
(bad)
pop
jg
ret
div
cmp
pop
jbe
sub
daa
out
aad
scas
(bad)
inc
jmp
mov
test
push
ds
lea
cmps
(bad)
sub
loopne
push
push
pop
arpl
in
mov
into
(bad)
or
shr
in
mov
xor
stc
test
cmp
mov
jmp
sbb
jp
sti
xchg
jmp
jo
outs
(bad)
push
ret
inc
das
or
shr
dec
mov
loopne
ins
sub
lds
iret
movs
jmp
push
cmp
jecxz
popf
mov
push
sbb
xchg
leave
lods
rep
jno
movs
int3
jnp
pop
hlt
shr
ja
jb
sar
push
adc
out
ret
enter
or
sahf
in
and
push
adc
pop
cmp
add
push
pop
mov
xor
jecxz
xchg
push
scas
jae
movs
leave
je
test
and
popf
stos
xor
repz
sti
jmp
sbb
in
pop
mov
add
iret
ss
ror
stos
and
push
mov
aas
and
jno
xchg
shr
pop
dec
pop
or
sub
aas
adc
inc
cmp
mov
push
inc
pop
push
loope
sbb
fnstcw
sbb
dec
jp
xor
rcl
dec
scas
mov
push
outs
xchg
cmp
add
popa
sub
sub
push
add
sub
ret
movs
adc
cli
inc
fstp
sub
mov
dec
and
mov
call
int
scas
(bad)
jl
mov
aam
jmp
mov
nop
(bad)
jmp
adc
lahf
and
cmc
dec
and
repnz
xor
leave
and
jno
xor
xchg
jmp
adc
stc
pop
inc
adc
pop
repnz
jns
push
sbb
cmp
mov
mov
dec
pop
iret
and
or
mov
xchg
mov
mov
jbe
daa
movd
nop
lods
frstor
leave
or
and
aaa
push
ret
in
mov
adc
daa
sar
fs
cwde
lods
aam
mov
fincstp
jle
and
fcmovnbe
sbb
inc
dec
jl
lods
pop
jg
adc
arpl
mov
ss
sbb
push
loopne
scas
test
rcl
lods
adc
fidiv
dec
loopne
lock
pop
pop
or
daa
jmp
aaa
addr16
out
rcl
fsubr
fmul
(bad)
stc
fs
push
push
add
xor
xchg
push
add
xchg
pop
test
jge
rcr
mov
stos
int
or
test
mov
add
jg
push
mov
push
adc
stc
outs
xchg
scas
mov
push
xor
dec
(bad)
mov
(bad)
test
adc
jo
adc
xor
sub
mov
xchg
mov
lods
addr16
jbe
push
sub
aaa
movs
sar
or
mov
mov
int3
xor
jo
push
push
xchg
sub
imul
clc
sub
repnz
test
out
test
scas
sub
adc
or
dec
loope
clc
les
sub
jne
sbb
xor
and
push
fstp
(bad)
not
lock
mov
mov
push
ja
fs
std
push
clc
push
shl
push
mov
or
cmp
and
test
stc
stos
leave
aas
jne
in
mov
and
jns
jns
push
scas
pushf
push
push
mov
inc
mov
xchg
mov
lock
push
jecxz
fdiv
push
xchg
jmp
xchg
push
adc
rol
pushf
pop
jne
out
jno
adc
push
pop
sub
call
push
sbb
inc
retf
xlat
xor
fld
push
sbb
cwde
nop
xchg
stc
lods
mov
cmp
sahf
daa
psubb
sub
arpl
lods
cld
adc
dec
dec
push
inc
push
ins
ss
and
call
addr16
xor
xor
dec
and
lock
stos
push
jne
mov
push
dec
mov
popf
cmp
push
push
xchg
test
(bad)
aaa
or
cmp
out
adc
xchg
jno
mov
and
(bad)
jne
daa
xor
cld
daa
loope
sub
push
inc
jl
xor
jae
push
add
adc
mov
fiadd
sahf
movs
in
loopne
sbb
aam
jmp
(bad)
in
adc
into
lock
and
sbb
je
push
push
cdq
enter
stos
mov
mov
mov
adc
mov
mov
sub
movs
movs
call
test
pusha
mov
fisubr
xor
or
add
das
add
cmc
or
mov
sbb
pusha
lods
int3
in
mov
dec
ds
test
(bad)
ins
and
jb
or
inc
pop
fbstp
loop
shl
div
cmovb
xchg
mov
push
adc
lahf
xor
xchg
mov
bound
loope
push
dec
scas
shl
shr
ins
into
rol
add
in
clc
jns
mov
loopne
(bad)
jge
icebp
fcom
outs
rol
shl
les
fisttp
sbb
aad
add
fs
fbstp
pop
in
mov
mov
outs
mov
fcomp
in
mul
push
sbb
mov
jecxz
movs
into
lods
jns
adc
faddp
popa
daa
popf
xchg
ficom
sub
mov
mov
pop
cmp
adc
jnp
icebp
jge
pop
jg
shl
es
push
iret
sub
mov
mov
pop
add
jecxz
or
add
in
add
inc
mov
mov
adc
and
adc
add
repz
lods
imul
stc
xchg
mov
sub
jmp
shl
mov
jecxz
xor
dec
sti
xchg
shl
adc
mov
(bad)
lods
pop
rcl
and
cdq
lea
lods
ss
stos
cmp
push
stos
xor
xor
push
data16
mov
push
in
adc
push
cs
xchg
hlt
into
dec
pop
push
movs
sub
cmp
pop
mov
popf
xchg
mov
jo
cmovno
adc
int3
ror
push
mov
push
inc
mov
data16
icebp
xlat
iret
xchg
mov
jae
aad
cmps
adc
xchg
xchg
ins
daa
sub
rol
test
out
ss
retf
sbb
xchg
dec
not
xlat
ds
push
push
xlat
and
fs
and
(bad)
mov
daa
ret
int3
add
or
jb
sahf
inc
gs
hlt
fs
xchg
jbe
jno
retf
mov
adc
cmp
les
shl
adc
xor
shl
daa
or
mov
push
xlat
adc
test
mov
movs
pop
mul
xor
xlat
arpl
or
(bad)
fnstenv
inc
sbb
push
add
(bad)
in
or
push
sbb
jae
and
xchg
and
clc
rcr
mov
mov
lahf
dec
mov
bound
in
pop
mov
dec
lods
sbb
enter
mov
dec
dec
sub
test
mov
test
ds
pop
dec
mov
imul
clc
mov
(bad)
adc
adc
cmp
xchg
ins
add
in
dec
int3
sub
push
outs
mov
iret
or
push
push
shr
aad
and
lock
xchg
jecxz
or
sub
leave
xchg
bound
ins
not
push
xrelease
test
vpcomuq
dec
retf
xchg
iret
stos
cmp
arpl
loope
inc
xchg
inc
jmp
sbb
dec
inc
pushf
push
cmp
jp
movs
cwde
(bad)
in
loopne
xchg
mov
push
push
pop
adc
es
cmp
sub
mov
clc
jle
cdq
mov
jmp
sub
push
int
arpl
xchg
cmps
lea
xchg
sub
jp
pusha
add
sub
xchg
(bad)
adc
lea
mov
icebp
inc
and
jne
jg
imul
(bad)
dec
pusha
(bad)
push
jg
mov
cld
mov
push
mov
test
call
xor
mov
movs
retf
add
aam
and
repz
push
sar
(bad)
(bad)
xchg
mov
mov
inc
rcl
and
mov
sub
dec
inc
push
dec
xchg
test
loopne
in
push
inc
test
mov
daa
add
rol
rcl
inc
mov
dec
test
pop
js
jns
(bad)
lods
aam
mov
mul
pop
popa
xchg
push
mov
aas
shl
mov
cmps
mov
push
jb
lock
mov
not
aad
pop
lock
cli
loop
xor
adc
sub
mov
outs
xor
out
aam
mov
cmp
mov
add
fsubr
mov
in
cmc
popf
pop
fld
cwde
add
dec
mov
loop
fs
sub
push
mov
jbe
sar
into
or
xlat
shr
mov
xor
in
iret
outs
(bad)
inc
fdivr
out
ins
push
int3
in
loope
and
call
inc
clc
xor
es
int
mov
sahf
fs
inc
push
xchg
jae
mov
repnz
lods
push
jbe
call
loope
adc
push
xor
(bad)
jmp
int3
mov
outs
inc
test
inc
mov
ja
sbb
int3
pop
jge
inc
sub
xchg
in
pop
add
pop
jecxz
(bad)
enter
aad
push
mov
ja
ror
mov
push
js
xchg
mov
js
popa
(bad)
push
sub
cs
popa
movd
mov
xor
mov
loope
rol
mov
les
mov
fidivr
dec
js
inc
cmps
cmp
dec
jbe
imul
in
cmp
sbb
dec
adc
push
xchg
sbb
daa
jnp
and
pop
retf
(bad)
outs
add
test
jmp
test
outs
jnp
imul
adc
mov
dec
or
jae
cwde
cmp
int
jb
call
cmp
repz
lods
mov
inc
jge
xchg
inc
dec
imul
add
fs
(bad)
jmp
aad
push
ds
icebp
scas
std
test
xor
xlat
cmps
mov
aam
cmp
dec
ss
jns
add
adc
or
stos
or
rcr
out
adc
cli
pusha
fidiv
sti
mov
test
std
pop
loopne
fsub
cmp
pop
mov
cmp
cmp
call
and
and
pop
addr16
cli
mov
ror
push
arpl
mov
pop
mov
shr
lahf
scas
cmp
test
inc
push
mov
std
xor
mov
pop
adc
mov
retf
jmp
push
sub
or
dec
pop
xor
scas
shl
sbb
cmc
jmp
jecxz
push
and
and
inc
and
jae
xor
mov
xlat
dec
mov
ins
cmp
shl
push
xor
jmp
sar
arpl
dec
xchg
cld
out
or
xchg
cmp
lods
test
iret
mov
mov
arpl
mov
jmp
inc
fadd
jle
sbb
push
ror
adc
cmp
mov
cmps
aad
ins
in
mov
ds
pop
sub
and
fist
lods
lods
rcr
pop
sbb
loop
icebp
in
dec
shl
loopne
and
mov
xchg
jmp
adc
or
jmp
pop
mov
in
loopne
out
es
pop
fidiv
cld
push
mov
das
gs
aam
js
ret
ds
adc
shr
pop
or
sbb
loop
psrld
ja
repz
imul
in
or
push
pop
ret
das
sub
repz
imul
xchg
lock
add
sbb
pusha
jo
pusha
xlat
das
int
xlat
push
enter
imul
push
cmps
or
(bad)
pusha
cmp
xchg
call
test
push
and
sbb
add
and
in
jo
retf
mov
adc
add
jle
pop
pop
icebp
in
push
adc
mul
aam
xchg
out
pusha
test
imul
in
mov
stos
out
in
xlat
xchg
arpl
mov
loopne
push
or
(bad)
mov
mov
aas
mov
je
push
ins
mov
pop
fsqrt
sbb
popa
push
push
lock
test
aam
cmc
or
or
mov
jb
jge
mov
xor
adc
push
xor
cmp
lock
push
or
mov
mov
test
into
in
pop
inc
ss
in
pop
or
cmp
or
test
and
sub
jecxz
pop
fsubr
popa
(bad)
pop
repz
xor
and
ins
call
inc
pop
ds
jbe
test
retf
lds
cmp
loope
hlt
inc
lods
stos
cmp
and
mov
add
(bad)
and
push
dec
dec
mov
cmc
imul
adc
adc
stos
xor
jmp
ret
mov
aad
mov
ret
push
push
iret
and
outs
jecxz
lods
mov
aam
jne
adc
ret
loop
int
ret
out
mov
aam
cmp
or
fs
jae
jl
mov
mov
or
rcr
mov
sbb
lock
popa
(bad)
jmp
lea
fnstenv
lahf
push
test
out
jmp
fistp
bound
out
add
mov
in
movs
push
inc
push
enter
add
mov
(bad)
std
adc
dec
jmp
out
adc
fimul
push
cmp
mov
cs
lods
aaa
and
or
or
dec
push
push
jne
adc
dec
mov
pushf
pop
mov
imul
mov
jecxz
pushf
call
pop
mov
in
mov
inc
cmc
mov
loop
test
std
addr16
and
dec
jb
mov
(bad)
repz
push
ja
aaa
stc
lahf
test
dec
lock
mov
cmp
cld
cmc
cmc
(bad)
mov
inc
clc
aam
lds
fsubr
mov
dec
rcl
movs
jle
push
xchg
mov
in
jg
or
ins
push
jbe
leave
xchg
pusha
imul
push
mov
xlat
and
popf
xchg
or
dec
cmp
and
pop
jns
push
ret
(bad)
sbb
lea
add
lock
lods
sub
pushf
icebp
xor
hlt
jmp
test
jnp
sbb
pusha
fs
add
xor
or
ins
and
cs
xlat
and
sub
sar
retf
xchg
cwde
imul
jno
and
jl
jle
clc
popf
jbe
movs
fsub
jb
xchg
cmp
add
loopne
out
(bad)
stc
aaa
cmps
leave
adc
adc
ss
cmps
mov
or
adc
jp
pop
adc
inc
mov
in
adc
test
push
stos
xchg
ins
out
ins
xchg
iret
sub
jge
int
cmp
fsubr
daa
mov
stc
push
jb
xor
add
mov
in
pop
cmp
sbb
xor
push
fcom
imul
and
outs
ret
jmp
mov
or
pop
push
sub
sbb
test
not
sub
pop
jo
jg
das
stos
xchg
adc
mov
mov
div
(bad)
jbe
repz
cwde
ja
aas
rcr
xchg
dec
xlat
dec
pop
pop
(bad)
mov
jbe
sub
iret
sub
mov
pop
loopne
jne
dec
mov
fdiv
mov
add
push
je
inc
repnz
sub
add
hlt
dec
cs
(bad)
mov
or
pop
sbb
and
pop
mov
test
pop
(bad)
and
mov
(bad)
sub
lock
call
mov
adc
jmp
inc
mov
pop
sbb
push
lock
xor
fidiv
push
sbb
push
mov
js
mov
neg
xlat
or
mov
lock
sub
cmp
das
fcom
push
add
add
call
and
mov
xchg
mov
js
iret
nop
(bad)
arpl
pop
retf
dec
inc
das
adc
mov
shl
arpl
mov
les
sbb
stc
mov
hlt
aas
stos
in
inc
loope
dec
rol
xor
cmp
(bad)
or
popf
test
inc
ret
and
jno
test
push
es
push
call
pop
das
mov
test
popf
adc
mov
add
iret
jg
xor
pop
ds
dec
cmp
inc
jb
int
(bad)
and
ins
cs
xor
jp
sub
jne
mov
pusha
ins
daa
xchg
mov
jp
mov
add
ror
ror
ret
data16
stc
mov
dec
loope
sub
(bad)
dec
pop
sbb
test
popa
pop
scas
cwde
fimul
neg
dec
mov
imul
mov
sbb
sbb
pop
aam
stos
outs
cmp
cwde
pop
pop
outs
add
enter
jle
nop
cdq
adc
mov
sbb
and
sbb
cmp
lock
sbb
jmp
mov
frstor
pop
pop
inc
loopne
arpl
sbb
sbb
mov
lahf
ins
pop
xchg
in
add
fwait
pop
cmp
push
inc
test
shl
outs
pop
add
lods
into
(bad)
out
inc
sbb
call
imul
loopne
inc
fbstp
add
add
lock
pop
cmp
and
jle
jae
pushf
ficomp
imul
dec
ss
imul
dec
ret
push
pop
out
cwde
cmp
cdq
jmp
fcomp
loope
mov
pop
repnz
adc
xor
test
fild
push
sub
movd
inc
inc
and
push
outs
mov
jecxz
push
ins
neg
std
mov
in
xor
adc
out
xlat
dec
xor
ficom
movs
iret
jmp
loope
and
rcr
mov
in
mov
lds
jo
movs
sub
jo
or
fld
sbb
inc
mov
cmps
inc
(bad)
push
loopne
push
push
(bad)
fstp
lahf
xlat
js
pop
imul
mov
dec
scas
jae
pusha
push
lahf
hlt
pop
mov
push
arpl
scas
(bad)
or
xor
add
cwde
fs
xchg
lea
gs
jnp
pop
xchg
xor
add
fwait
enter
aaa
mov
sub
ficomp
cmp
jecxz
aam
sbb
pop
nop
xchg
mov
cmp
push
lods
aaa
es
cmp
mov
jl
imul
lahf
mov
mov
sar
push
fld
inc
pop
or
(bad)
pusha
push
xor
imul
lods
inc
sbb
sub
mov
push
rcr
xor
ja
dec
or
ror
lea
or
nop
cmps
sbb
scas
mov
and
xchg
test
imul
sub
aaa
jmp
fs
push
mov
out
out
repz
mov
(bad)
ret
rol
or
add
cmp
and
jmp
daa
xchg
inc
cmp
rcr
bnd
xlat
add
fcomp
data16
stc
leave
les
ds
loope
xchg
jnp
mov
pavgb
fdivr
mov
sbb
or
jo
xchg
mov
addr16
inc
inc
sub
daa
cmps
popa
mov
push
into
add
in
cld
arpl
mov
iret
mov
addr16
adc
add
cmp
popf
mov
cmp
mov
outs
dec
xchg
pop
and
fs
and
push
lds
inc
inc
and
sbb
fld
mov
pop
and
push
fdiv
xchg
sar
mov
add
ror
inc
fs
dec
xchg
je
pop
push
or
dec
mov
not
sbb
mov
jge
scas
and
push
sbb
inc
push
call
and
sub
shr
sbb
outs
loop
idiv
dec
inc
xchg
out
sbb
mov
daa
nop
scas
jecxz
and
or
out
pop
sbb
loope
inc
jae
arpl
jmp
pop
(bad)
cli
add
and
jmp
mov
out
jle
and
das
push
and
xor
nop
jnp
dec
mov
inc
cmp
push
fs
mov
out
lahf
int
mov
mov
dec
xor
js
js
mov
out
(bad)
adc
pushf
sub
shl
lds
pusha
add
sahf
idiv
inc
cmp
je
mov
lods
lock
lock
ins
push
mov
enter
icebp
jne
xor
sbb
outs
jns
out
inc
sbb
mov
cmp
sahf
jo
ret
mov
call
push
cmp
test
xor
or
jno
xor
inc
sbb
push
mov
adc
fst
and
mov
pop
outs
mov
ret
fs
dec
(bad)
dec
aas
add
aad
adc
repnz
xor
fisub
fstp
sbb
cld
xchg
add
dec
data16
mov
mov
pop
cmovo
sti
ss
retf
jle
(bad)
cmp
aas
or
ficom
mov
in
mov
push
lds
push
push
cld
inc
jg
add
mov
and
xlat
call
jge
cmp
and
pushf
sbb
daa
xor
cmc
loopne
adc
fadd
or
push
pop
pop
out
mov
sahf
lahf
or
leave
add
lods
scas
nop
jns
loopne
into
pop
mov
ins
mov
jmp
pop
or
sub
pop
push
xor
daa
neg
mov
aaa
pop
xchg
mov
ins
push
enter
popa
xchg
sub
ja
call
jno
addr16
call
retf
ds
jp
lds
push
mov
add
adc
sahf
mov
arpl
mov
push
inc
mov
lea
or
aam
(bad)
adc
mov
mov
and
lea
push
(bad)
mov
test
mov
add
(bad)
mov
push
jmp
arpl
repnz
aad
push
mov
add
out
cmp
add
mov
sbb
add
cdq
sub
retf
pop
push
lahf
cmp
cld
mov
push
mov
ja
xor
mov
into
adc
pop
shl
cmp
mov
mov
dec
retf
addr16
cmp
popa
jmp
mov
xchg
idiv
int
cdq
js
imul
xor
jmp
mov
jnp
push
repnz
cmp
inc
mov
gs
enter
popf
push
shl
xchg
out
push
jne
pop
(bad)
bound
xchg
loop
jbe
pushf
mov
out
int
fcmove
push
xchg
jp
(bad)
into
sbb
daa
xchg
inc
mov
pop
ror
pop
(bad)
(bad)
aam
out
dec
xor
dec
sub
fsubr
les
enter
call
(bad)
(bad)
sbb
inc
fdivrp
pop
addr16
sbb
cmovno
mov
sar
aam
xlat
mov
xor
jmp
lea
test
jmp
inc
sbb
repz
or
xchg
mov
and
aas
jae
or
inc
xchg
clc
cmp
jo
out
lock
fsubr
cld
mov
mov
inc
xchg
mov
ins
push
fst
int3
inc
mov
popf
xor
fadd
push
push
shl
dec
data16
dec
adc
clc
mov
std
jns
test
and
mov
mov
mov
sbb
lds
cmp
or
mov
nop
xor
cld
cmps
fist
in
dec
test
rol
mov
cmps
ja
inc
sub
out
cmc
jge
leave
xor
cmc
out
inc
mov
out
das
mov
fiadd
mov
push
adc
ret
pop
fsub
scas
mov
fmul
mov
dec
imul
mov
stc
into
mov
repnz
xchg
ror
scas
xchg
jno
jo
mov
fcomp
dec
dec
push
mov
out
sbb
sar
or
frstor
jp
or
push
mov
pop
sbb
arpl
(bad)
cmps
scas
adc
xchg
xchg
and
int3
ss
mov
cld
inc
pusha
jae
push
cmps
into
dec
pushf
adc
stc
adc
(bad)
adc
std
mov
xchg
xor
mov
adc
push
adc
loope
mov
cdq
add
test
cmp
adc
and
cld
arpl
jb
loopne
mov
mov
sub
xchg
jo
pop
int
mov
outs
mov
xchg
mov
cmc
es
dec
or
test
xor
mov
pusha
cs
fwait
mov
xchg
out
ficomp
mov
ja
je
leave
mov
gs
xchg
jo
mov
xchg
and
jns
pop
jge
jg
les
sbb
call
cmp
push
in
xor
rcr
cmps
adc
aad
inc
fsub
mov
jg
xchg
ror
gs
cld
adc
cli
mov
or
out
ret
push
out
sub
pop
cdq
cmps
into
and
pop
dec
daa
xchg
out
rcl
inc
nop
xor
push
inc
sub
jmp
cmps
sahf
iret
and
(bad)
mov
cs
push
sti
lods
test
mov
xor
cmp
jl
jg
popa
xor
bound
pop
cmp
aad
cmp
adc
jl
lods
push
xchg
jecxz
jp
test
stc
stc
pop
xchg
rcl
mov
daa
cmc
and
clc
xchg
push
or
sar
clc
in
jae
push
stos
scas
popf
or
inc
stc
jnp
xchg
fucomp
enter
push
ja
jmp
push
rcr
int3
popa
ins
pop
sub
sub
fiadd
mov
adc
scas
cdq
xchg
popa
fistp
xor
rcl
mov
ds
data16
jnp
or
push
xchg
push
mov
and
sti
dec
push
adc
xchg
mov
xchg
lahf
ja
inc
fsub
in
pop
cmp
pop
retf
jb
cmp
inc
cmps
sahf
add
jne
xchg
call
dec
ins
(bad)
mov
loopne
popa
or
into
ja
test
push
push
fst
mov
mov
add
or
xlat
add
imul
sub
jnp
je
jbe
and
clc
(bad)
mov
shl
mov
in
xor
jg
jmp
pop
fadd
xchg
and
mov
test
and
fdivr
or
sbb
mov
adc
adc
out
stos
add
out
cmp
mov
xor
mov
add
xchg
leave
xchg
fs
mov
xchg
pop
xor
sbb
addr16
push
sub
inc
fcom
pop
scas
scas
mov
cs
mov
push
lea
mov
test
xlat
mov
push
and
cwde
mov
and
push
sahf
into
push
cmp
push
imul
push
test
inc
or
or
cli
loope
(bad)
jl
jae
mov
push
arpl
ds
pop
pop
fs
adc
and
lds
inc
xchg
fisttp
mov
cmp
jns
xor
(bad)
or
scas
sbb
dec
ror
(bad)
je
fld
sub
setl
dec
sbb
fwait
not
mov
push
push
lods
imul
dec
cmps
xor
retf
movs
sub
mov
aam
cmps
enter
mov
pop
cmp
jle
xor
xor
cmp
add
pop
lods
push
jle
call
adc
xchg
data16
mov
cmps
sbb
dec
cmp
add
cmp
js
pop
inc
outs
or
std
je
xchg
loop
cwde
push
and
push
push
in
fwait
add
pop
ins
ret
sub
pop
shl
aaa
push
sbb
mov
mov
xlat
pushf
retf
xor
pop
repz
scas
iret
xchg
jge
outs
or
jmp
xchg
in
cld
cld
jl
shr
(bad)
rcr
and
pop
sub
dec
push
inc
cmp
pop
hlt
sar
mov
pop
add
ficomp
cmp
push
adc
inc
adc
int
or
je
icebp
dec
add
into
movs
mov
iret
pop
jmp
xor
outs
cld
mov
adc
xchg
pop
dec
call
es
or
xchg
xchg
inc
pop
jbe
xchg
jle
cmp
xchg
and
test
jae
mov
(bad)
fisub
test
jle
cmp
(bad)
call
rcr
cmp
sbb
and
add
(bad)
loopne
xor
scas
cli
adc
mov
push
or
push
mov
repnz
mov
test
cld
cmps
pop
aaa
xchg
(bad)
hlt
add
sub
mov
(bad)
lock
and
xchg
mov
pushf
retf
inc
jge
mov
dec
popa
mov
ret
and
mov
inc
xchg
repnz
imul
ds
repnz
icebp
mov
mov
jp
sub
jae
sbb
sbb
add
aam
cwde
jbe
js
scas
xor
ret
js
shl
ror
cdq
outs
scas
jb
inc
push
mov
dec
xor
push
js
out
mov
fcom
movs
test
push
xchg
enter
cdq
mov
rcl
movs
ins
push
jle
nop
cmp
into
jmp
les
bound
sub
in
neg
dec
adc
(bad)
imul
std
movs
jle
fsubr
and
pop
inc
jno
out
(bad)
enter
xor
dec
fdiv
mov
jbe
mov
std
sbb
inc
pop
out
cmp
lock
xor
ins
pop
sub
je
lods
movs
mov
push
or
xchg
cli
call
(bad)
and
ja
sub
add
and
pusha
out
xor
jcxz
sbb
jo
(bad)
jp
inc
fst
xchg
aaa
das
cli
jmp
aas
jle
out
jae
out
stos
out
cmp
int
addr16
pusha
mov
mov
add
sbb
call
fwait
ror
mov
cmp
sub
adc
xor
neg
xor
inc
cwde
jecxz
cmp
mov
mov
data16
std
and
neg
out
js
(bad)
cdq
(bad)
std
mov
push
sub
adc
pop
mov
push
push
pop
sub
fwait
pushf
shl
test
lahf
jge
fild
inc
sbb
das
dec
jbe
xchg
cmp
sub
shl
cdq
mov
mov
call
push
sub
xor
les
mov
or
call
aad
outs
dec
mov
push
repz
aaa
test
add
div
cmp
ror
and
cmp
push
mov
mov
fild
cmp
fsub
jl
adc
out
add
or
repz
imul
(bad)
stos
(bad)
sti
mov
xchg
popf
sub
push
or
mov
cli
xchg
cmp
mov
sub
std
(bad)
stos
dec
push
mov
xchg
ret
int
test
and
dec
mov
cmp
loop
pop
lods
xchg
es
inc
adc
(bad)
loop
xchg
aam
jns
aam
scas
(bad)
in
xchg
pop
shr
and
pop
dec
call
out
cmc
scas
and
and
mov
jno
xor
movs
xchg
mov
rcl
pop
xchg
dec
mov
push
mov
data16
push
add
pop
add
div
inc
imul
sbb
xor
icebp
inc
lods
xor
cdq
add
cmp
js
xor
repnz
stos
jne
div
outs
jbe
or
cdq
lods
scas
das
mov
add
adc
jns
pop
shl
test
sbb
sub
sti
inc
inc
push
fsub
add
mov
xchg
push
inc
xor
mov
xchg
sub
cmps
xor
aam
jae
ss
shl
push
add
pop
mov
sti
das
cmp
test
push
xor
and
xchg
mov
mov
leave
fisttp
or
cmp
push
xlat
retf
fwait
xchg
test
push
mov
sub
inc
shl
cmp
dec
add
scas
mov
mov
mov
imul
sub
movs
(bad)
into
lsl
push
pusha
dec
sbb
loop
movs
int
retf
mov
ins
mov
pop
imul
mov
jmp
lods
mov
movs
std
lahf
xchg
jg
and
pop
or
in
dec
mov
mov
mov
and
sahf
pop
les
out
rcr
inc
pop
xchg
push
stc
das
add
sub
jo
lds
mov
out
or
dec
out
xor
test
fwait
sbb
retf
hlt
popf
ret
mov
xchg
or
aas
push
sbb
dec
jne
jb
mov
adc
retf
lea
mov
pop
pop
test
mov
call
dec
repnz
and
push
mov
and
fs
(bad)
arpl
cmps
inc
pop
adc
xor
mov
movs
retf
sahf
pop
mov
pop
or
jmp
jle
rcr
out
xchg
jecxz
and
mov
sbb
pop
jecxz
push
aaa
jle
leave
pop
pusha
out
mov
pop
cmp
in
and
clc
aad
adc
xchg
call
test
icebp
jmp
scas
sub
out
shl
sub
adc
scas
cmp
mov
mov
pop
cmp
or
movs
retf
cdq
and
(bad)
push
gs
aaa
pop
xchg
sbb
mov
sbb
jns
shl
and
mov
repz
addr16
sbb
cli
xchg
jo
pop
inc
cwde
xlat
retf
and
cmp
cmp
cmp
fldcw
jno
scas
inc
cdq
mov
push
or
sbb
or
outs
cmp
rcl
repnz
push
and
and
mov
lods
push
add
fcmovb
sbb
cmp
(bad)
cmc
call
out
sub
mov
dec
jo
aad
pushf
pushf
rol
aad
jmp
adc
cmps
data16
sub
inc
pop
jge
xchg
call
inc
repnz
sub
int
cmp
cmps
and
mov
int
add
fstp
sbb
hlt
cmps
sub
repz
jmp
mov
shr
xor
sbb
cdq
test
mov
pop
jl
mov
xor
cs
inc
rol
xchg
scas
pop
jne
xor
ret
cmp
sbb
jmp
add
sub
mov
and
mov
sub
add
dec
shr
mov
jne
add
push
(bad)
rol
push
test
jg
scas
xchg
jmp
out
mov
fst
adc
ja
shl
test
mov
push
mov
mov
in
fild
imul
out
xchg
test
fild
enter
mov
lahf
push
nop
sbb
(bad)
in
shl
jb
js
adc
repz
push
arpl
jecxz
pop
aaa
mov
jp
lods
fild
add
(bad)
test
dec
xor
call
sbb
scas
cmp
adc
sbb
cwde
sti
push
dec
call
inc
pop
xor
xlat
sub
add
jne
dec
lods
popa
jmp
das
or
leave
stos
(bad)
lods
das
lea
sbb
and
movs
loopne
dec
push
add
cs
jo
sahf
call
cmp
outs
sub
and
test
cwde
ins
cli
add
push
xchg
sbb
pop
fsub
inc
js
mov
pop
mov
xor
jae
cmp
dec
icebp
ret
fbld
mov
dec
fcom
retf
icebp
push
aam
sahf
sahf
clc
or
jbe
pushf
xchg
arpl
mov
and
scas
cmc
add
fnsave
inc
call
lods
test
aad
inc
jb
lods
inc
push
popa
movs
mov
sub
in
add
and
lds
or
pop
push
jmp
and
and
js
pop
pop
pop
mov
stc
pop
out
pop
push
jmp
and
mov
mov
cdq
adc
fs
cmp
push
mov
cs
mov
jmp
inc
popf
pop
into
jno
imul
popa
imul
adc
push
inc
in
jne
call
mov
push
stos
out
and
ins
sub
dec
pop
sbb
inc
scas
dec
sbb
push
imul
cmp
scas
push
xor
and
and
out
and
sbb
or
cmc
xchg
ret
xchg
(bad)
pushf
daa
ss
mov
pusha
xor
pop
dec
js
cmp
mov
std
stc
scas
mov
rcl
std
pop
push
adc
fbld
inc
call
test
or
jb
mov
jmp
jae
pop
fcmovnb
adc
jmp
es
into
out
mov
mov
out
add
xchg
or
stos
cmp
pop
sub
sbb
and
add
pop
or
pop
icebp
into
jg
sub
retf
shr
and
in
sub
ins
mov
cmp
cmps
das
mov
cmp
mov
cmp
sub
jge
cli
jg
cmp
sub
pop
sub
push
iret
lea
cmp
hlt
in
dec
fist
cmp
xlat
jge
js
mov
pop
push
aad
adc
mov
cdq
shr
imul
cdq
jg
add
mov
ins
cmp
push
sar
jle
mov
cmps
dec
adc
fs
pop
pop
ror
(bad)
mov
lock
cmp
mov
xor
clc
mov
push
(bad)
daa
in
xchg
push
shl
or
ret
add
dec
pop
out
in
mov
dec
ss
inc
ret
repz
(bad)
jbe
repnz
ret
enter
mov
cmps
jbe
mov
loop
add
iret
in
mov
adc
add
shl
jno
sar
push
into
push
pop
retf
cmp
sbb
and
fmul
mov
clc
mov
inc
iret
ja
or
adc
mov
push
int3
js
ror
fdiv
lgs
sbb
xlat
mov
daa
bnd
jns
sub
add
pop
je
cmp
jne
jmp
jge
bound
test
popf
std
adc
sub
push
pop
jl
leave
adc
rol
mov
push
mov
pop
es
(bad)
push
out
jecxz
outs
xchg
ss
pop
jl
clc
add
inc
retf
mov
je
(bad)
test
jp
(bad)
jo
jmp
jl
lods
ds
dec
xchg
imul
mov
jne
aas
hlt
loopne
mov
call
xor
outs
sub
fidivr
ja
pop
mov
cs
and
in
jo
sub
and
movs
pop
rol
fwait
jnp
call
pop
inc
loope
shl
and
add
push
int
mov
cmp
xor
jmp
pop
cmp
sub
cmp
in
jbe
imul
xchg
pop
jle
xor
in
popf
in
sbb
lock
jp
leave
sar
and
call
sub
pop
enter
add
out
loop
mov
scas
cdq
stos
sar
mov
lock
jne
call
gs
ds
pop
pop
inc
adc
outs
ret
jle
pop
rcl
mov
out
sub
fistp
xor
and
jae
xchg
out
lods
lods
adc
cld
mov
sbb
outs
repz
ja
xor
into
inc
and
and
movs
in
xor
adc
inc
call
jmp
mov
mov
repz
(bad)
push
jne
test
test
in
and
mov
call
or
sub
es
adc
pop
aad
sub
mov
or
adc
retf
pop
mov
out
mov
add
mov
jns
jns
push
push
add
cmp
cmp
clc
sbb
in
cmp
push
(bad)
sbb
cwde
push
jge
cdq
jecxz
cld
out
sbb
mov
out
cmc
push
xchg
add
xor
add
enter
push
movs
ds
loope
aad
clc
outs
adc
pop
mov
lahf
cld
in
movs
push
mov
add
xor
in
shl
cmp
call
in
cmp
scas
das
xor
cwde
ds
leave
repnz
cmp
cmp
jnp
test
mov
retf
push
or
sbb
data16
xchg
dec
int
sbb
xchg
xchg
push
clc
mov
push
mov
imul
pop
cwde
out
jg
loopne
int3
or
cwde
and
push
arpl
fadd
mov
and
cli
aad
dec
inc
mov
lods
inc
loop
or
ins
pop
cli
pushf
mov
push
rcl
xor
add
mov
stos
pop
jle
aaa
(bad)
push
dec
pop
je
and
add
test
add
dec
fnstcw
sbb
ror
scas
es
fsubr
or
fs
loop
daa
push
pushf
mov
fadd
ret
adc
ins
jbe
sbb
movs
retf
jb
in
or
cmc
pop
jp
cmc
pop
pop
mov
cmp
cld
inc
xor
fcomp
fnsave
push
pop
fnstsw
inc
in
adc
int3
test
movs
es
cmp
aam
mov
das
out
adc
lahf
pop
mov
xor
imul
mov
push
scas
jl
ds
mov
aas
sbb
mov
xor
rol
sbb
mov
int
int
fiadd
out
mov
and
daa
and
mov
enter
shl
ins
cmps
adc
jle
das
adc
push
or
cld
addr16
movs
iret
fidivr
add
ss
std
add
push
mov
sub
cld
addr16
pop
inc
dec
cmp
inc
cmp
daa
adc
pop
inc
and
cmp
mov
or
shr
mov
inc
and
inc
bound
es
cmp
fdivr
loopne
add
add
sbb
mov
movs
push
push
popf
sub
sub
loope
cwde
fsubr
test
cmps
xor
fcomp
fcmovne
sub
(bad)
push
fs
cli
jl
fcmovnbe
jle
cli
sbb
mov
mov
nop
bswap
rol
stos
push
fidivr
dec
cwde
mov
and
dec
imul
les
add
loopne
or
mov
jge
cmps
lock
cmp
add
mov
das
lea
imul
cs
cdq
lock
sbb
ret
aaa
mov
push
enter
mov
fwait
stos
sub
inc
xchg
cmc
adc
clc
push
and
inc
movs
mov
sub
clc
mov
and
gs
aas
inc
pop
cmps
sub
out
cli
and
cmps
pop
add
fstp
push
sbb
call
repz
and
mov
repz
aas
test
xor
dec
sub
pop
xchg
jecxz
out
ret
in
mov
stos
lahf
mov
repz
mov
aas
rcr
(bad)
push
pusha
mov
cwde
jmp
and
cld
dec
leave
jnp
xchg
dec
push
jne
mov
lods
xor
std
sub
nop
push
loop
xchg
sbb
and
ret
scas
jmp
xchg
imul
inc
arpl
test
sbb
mov
in
jns
sub
loop
jmp
popf
jg
xor
(bad)
push
daa
push
iret
cli
rol
inc
repnz
mov
clc
hlt
mov
and
imul
xchg
jecxz
stc
fadd
cmps
pusha
xchg
jp
mov
imul
add
rcl
stos
in
pop
mov
dec
daa
sbb
xor
push
inc
ss
les
stc
shld
mov
call
mov
xchg
lea
add
adc
test
dec
xchg
jmp
into
idiv
sub
mov
or
retf
outs
xor
sbb
jae
xor
inc
sub
mov
scas
adc
jecxz
mov
push
out
sti
mov
push
nop
dec
es
jnp
mov
jae
cmp
jbe
mov
mov
aas
fisubr
loopne
lock
and
sbb
shl
ret
cmp
fistp
xchg
sub
xchg
xchg
dec
pushf
mov
sbb
loopne
mov
ss
repnz
adc
cmps
xor
aaa
lea
out
int3
imul
or
dec
iret
jmp
sbb
and
fcom
xor
sti
pop
inc
sti
push
cmp
aaa
cmp
std
xchg
mov
sub
mov
dec
or
rcr
adc
mov
and
out
xchg
mov
out
cld
loopne
add
stos
push
jmp
push
sbb
fisubr
sub
pop
mov
test
cmp
iret
dec
test
outs
xchg
popa
dec
pop
jmp
add
(bad)
mov
or
mov
daa
rol
js
in
das
dec
lahf
xchg
repnz
fistp
pop
lods
in
icebp
jae
fwait
aas
cmp
mov
arpl
add
test
imul
xor
in
cdq
push
(bad)
jg
test
repz
(bad)
int
push
pop
and
loop
add
sbb
hlt
sub
fistp
jmp
add
shr
pusha
(bad)
loope
inc
push
imul
pop
stc
popf
push
xor
in
(bad)
std
imul
and
ins
in
xchg
cmps
arpl
adc
fnstsw
data16
mov
and
pop
jl
pop
shl
fsub
aam
push
dec
inc
test
test
ja
in
ss
and
xchg
or
pop
jae
inc
or
rol
leave
adc
retf
push
sub
sub
movs
mov
arpl
pop
adc
pop
jmp
sti
popa
sub
xor
push
pop
cmps
pop
sbb
aas
add
or
mov
adc
push
mov
out
sbb
repz
ret
mov
stos
mov
sbb
jg
popf
dec
test
and
sub
mov
xchg
sti
jo
imul
add
std
fmul
js
mov
loope
hlt
jbe
test
pcmpeqb
push
(bad)
in
and
jl
out
aaa
scas
sbb
and
ror
xor
rol
xchg
das
pop
call
cmps
pushf
mov
dec
clc
js
dec
aas
jmp
scas
cmp
inc
push
mov
xchg
mov
jle
lock
mov
aas
stos
mov
retf
es
es
pop
jne
sub
inc
shl
push
xchg
dec
pop
dec
hlt
lods
sub
mov
retf
loopne
ss
outs
add
fucom
lods
mov
es
xor
aas
int3
add
aas
aas
sbb
fldln2
shl
lods
adc
lahf
jns
pop
xor
aas
je
inc
adc
sbb
repnz
mov
ror
lods
loope
xor
loope
push
push
test
outs
and
int
and
pop
and
out
pusha
sub
sbb
push
mov
xchg
mov
pop
test
mov
jno
mov
mov
loopne
rcl
pushf
dec
(bad)
push
xchg
jmp
sub
jecxz
fsub
inc
lods
in
sbb
ret
sbb
idiv
xor
std
adc
ret
xor
xor
les
test
(bad)
ret
pop
sub
fisub
and
xor
outs
pop
(bad)
enter
sub
inc
rcl
add
fwait
(bad)
fisubr
fild
adc
clc
inc
repz
dec
ins
jnp
cmps
and
imul
lods
cld
pop
adc
cld
cmp
inc
xor
fldl2t
dec
cmp
hlt
mov
std
pop
fcomp
sbb
repz
popf
pop
cmp
jl
push
aad
adc
push
(bad)
nop
popa
pop
inc
popf
push
push
mov
hlt
inc
xor
dec
cmp
jmp
in
lea
data16
sbb
cmp
xlat
rcl
or
cmps
test
out
out
xchg
fcmovne
xchg
std
out
adc
mov
xchg
lea
cmp
loop
pop
and
cmps
ror
dec
out
test
sub
imul
fist
fiadd
sahf
test
inc
in
and
mov
mov
aas
in
out
pop
sbb
shl
mov
enter
jl
inc
push
add
push
pop
je
shl
adc
and
push
pop
rcl
ficom
popf
popf
jl
popa
aas
sbb
fwait
inc
and
jne
ret
pop
push
or
repz
(bad)
push
jmp
ds
imul
or
(bad)
dec
sub
pop
push
inc
pop
mov
add
rol
inc
pop
xor
cmps
movzx
clc
add
mov
inc
pop
pop
mov
xchg
je
ret
retf
pop
inc
push
leave
ret
inc
enter
mov
icebp
ins
mov
adc
dec
pop
inc
cmp
aad
jns
jne
push
push
dec
pushf
movs
mov
jl
xchg
(bad)
cwde
mov
ret
mov
mov
jno
iret
ds
aam
imul
adc
xlat
push
inc
add
rcl
adc
mov
in
xchg
xor
mov
inc
or
mov
sbb
jns
pop
popf
push
iret
and
push
push
bound
sub
inc
pop
mov
mov
mov
cs
cdq
fbstp
jle
xor
repz
xor
cwde
push
into
or
sbb
dec
inc
dec
mov
mov
out
scas
arpl
in
in
cmps
push
pop
fwait
adc
push
mov
xchg
pop
jmp
fwait
in
fisub
mov
inc
arpl
stos
or
pop
jbe
push
pop
dec
jge
out
jae
mov
out
xchg
les
pop
int
inc
pop
in
lods
sub
jo
test
jns
jl
mov
int3
call
jb
mov
nop
mov
pop
jbe
rol
stos
mov
mov
js
cmp
dec
jnp
mov
push
jno
es
bound
dec
sub
xchg
fwait
inc
enter
ret
and
mov
cmp
xchg
dec
push
cwde
ins
cmp
test
mov
outs
hlt
push
rcr
xor
mov
push
and
movs
popf
push
cmp
or
cwde
xor
cli
sub
xchg
sbb
mov
push
aam
xchg
xor
scas
rcl
pop
sbb
repz
retf
fwait
js
jecxz
sub
sub
addr16
push
imul
in
scas
in
iret
hlt
icebp
adc
adc
call
sahf
adc
push
inc
daa
int
or
scas
xchg
xor
and
icebp
jmp
xchg
mov
clc
inc
pusha
sbb
xchg
fsub
or
inc
nop
mov
je
inc
add
vcvttps2dq
dec
in
les
les
sub
rcr
sub
jne
or
jl
arpl
sbb
sub
xchg
icebp
retf
fst
lock
ds
push
and
jle
jnp
push
or
sub
arpl
sub
mov
shl
in
data16
imul
in
sbb
mov
sub
sub
cmc
hlt
ja
in
hlt
arpl
repnz
jae
push
sbb
mov
mov
rol
js
loop
jo
repnz
sahf
xor
and
lock
cs
cs
into
mov
mov
out
les
adc
xor
loopne
sar
inc
sbb
jae
add
rol
fwait
mov
or
xor
repz
movs
jae
xchg
mov
test
test
stos
sub
xlat
repz
cmovge
mov
sbb
push
nop
add
xchg
lock
sub
add
or
retf
sub
into
scas
xchg
out
xor
fadd
xlat
retf
ins
clc
mov
xchg
mov
push
aad
or
or
adc
mov
out
sbb
sub
xchg
data16
fmul
retf
shl
std
sbb
loop
fistp
xchg
jne
or
imul
int3
mov
add
ins
xchg
daa
pop
arpl
mov
cmc
fsub
dec
stos
pop
mov
in
xor
add
loopne
imul
clc
xor
adc
sahf
inc
sbb
sub
dec
fsub
mov
fist
clc
lock
dec
cdq
and
stc
stos
xor
fstp
mov
ss
cdq
mov
(bad)
scas
(bad)
or
popa
sbb
dec
retf
xchg
sahf
dec
cmc
jnp
pop
lds
xchg
pop
jle
(bad)
cmps
and
adc
pop
add
jp
fs
xchg
repz
retf
sbb
imul
fistp
mov
test
(bad)
fld
adc
leave
xchg
std
les
sub
pop
pop
dec
cmc
jno
mov
aas
xchg
fcomp
jae
jle
dec
movs
xchg
sbb
add
neg
iret
dec
mov
inc
cmp
(bad)
or
xor
mov
inc
jg
and
repnz
xlat
fisubr
or
jge
inc
or
xchg
push
imul
xor
test
sub
pop
shr
add
and
xchg
sbb
inc
sti
mov
jne
repnz
push
cmc
xchg
cmp
fcomp
xchg
das
push
push
xchg
push
imul
(bad)
inc
cmps
or
out
(bad)
stos
cmp
mov
jp
sahf
xor
sti
jae
shl
sbb
je
inc
xchg
lahf
(bad)
in
popf
pop
xor
or
and
lds
jg
lock
mov
jb
in
in
dec
push
sub
jns
jg
pop
adc
test
pusha
jb
jnp
inc
mov
aaa
int
fdivr
dec
mov
cli
inc
sbb
dec
(bad)
adc
push
fadd
sub
js
lods
pop
mov
sbb
arpl
jne
adc
call
and
sub
cmps
mov
cmp
lods
leave
mov
arpl
outs
mov
mov
add
lods
sbb
mov
sbb
mov
pop
shl
cmp
inc
fst
out
push
push
into
sbb
dec
mov
mov
mov
jo
xor
shl
retf
mov
push
mov
(bad)
mov
clc
mov
jl
xor
popa
pusha
int
jno
inc
jno
pop
fiadd
jb
(bad)
and
cdq
jae
add
(bad)
ficomp
mov
bound
mov
xchg
push
dec
dec
jne
push
push
daa
mov
and
ja
int3
(bad)
fstp
adc
pop
add
dec
in
out
bound
pusha
stos
sub
xchg
in
lods
adc
mov
add
xchg
ins
(bad)
jb
cmps
std
inc
sahf
mov
dec
(bad)
stos
retf
and
cdq
pop
push
mov
arpl
inc
stos
or
mov
enter
or
loop
xchg
sub
xchg
jns
dec
jns
scas
stc
sbb
rcl
or
scas
lods
jno
inc
adc
adc
cmps
cmps
cmp
in
sub
aad
or
daa
sbb
sar
pop
fs
stc
mov
bnd
adc
mov
mov
pop
mov
addr16
mov
pop
xchg
movs
(bad)
in
jnp
fmul
xchg
sub
sub
and
cld
test
fst
out
loope
and
pusha
jbe
sar
mov
mov
sub
mov
dec
lea
sbb
test
mov
pop
mov
lds
mov
(bad)
rcr
xor
sahf
push
adc
stos
mov
jnp
adc
or
adc
inc
xor
jns
aad
aas
pop
sbb
jmp
push
movs
rcr
and
mov
dec
add
outs
and
popf
xchg
cld
dec
arpl
adc
pushf
xor
ins
sbb
adc
or
cs
mov
pop
fs
xchg
dec
cli
mov
inc
push
nop
push
sub
test
jae
mov
addr16
shr
rol
sub
mov
test
fsubr
loopne
repz
push
pop
fwait
mov
cmp
push
in
(bad)
jmp
add
sub
fdivrp
icebp
cld
iret
aas
out
adc
jl
xor
dec
mov
adc
cdq
popf
lods
inc
and
int
fnstsw
sbb
xor
es
jo
xor
push
imul
xor
xchg
push
aaa
dec
sbb
cmp
sub
imul
xchg
(bad)
dec
retfw
dec
imul
jp
arpl
retf
pop
popf
rcr
cmp
and
in
ret
push
psubd
mov
mov
loopne
jns
ja
outs
push
cmps
or
dec
mov
xchg
icebp
clc
adc
es
mov
popw
shl
shl
push
or
adc
jne
bound
adc
ror
mov
jbe
sub
outs
sbb
mov
pop
ins
mov
jmp
in
pop
inc
push
mov
popf
add
mov
out
and
inc
mov
sti
fwait
shr
fwait
jnp
rol
mov
scas
xchg
xchg
call
jge
pushf
add
xchg
mov
sbb
call
aas
cwde
xchg
xor
mov
(bad)
mov
in
fs
mov
sti
je
(bad)
cmp
int
push
and
pop
cdq
cs
rcl
pop
(bad)
(bad)
in
push
in
shr
jno
imul
sub
jecxz
in
ja
and
pop
inc
lods
into
jmp
fisttp
leave
push
lahf
jmp
bound
xchg
cmp
mov
mov
call
mov
fisttp
jmp
sbb
lahf
in
jnp
sbb
mov
inc
add
cmp
push
xor
scas
or
inc
dec
ins
xor
push
retf
mov
shr
adc
pop
bound
or
and
ja
pop
pcmpeqw
or
rol
int
nop
dec
pmullw
add
xor
add
inc
mov
fs
mov
outs
(bad)
movs
sub
movs
je
outs
and
cmovp
sbb
mov
test
idiv
sbb
outs
je
mov
pop
xlat
cmp
mov
and
jecxz
add
idiv
inc
es
loop
mov
mov
jmp
ins
fimul
ficomp
ds
add
adc
neg
jb
ins
sbb
mov
retf
cdq
jb
pop
(bad)
push
add
pop
ret
jge
ret
sbb
push
in
movs
cdq
sar
xchg
mov
cmps
mov
test
inc
mov
jb
lahf
scas
mov
mov
mov
mov
push
das
mov
or
dec
pusha
xor
mov
bound
xor
or
fcomp
mov
pop
xchg
or
push
cli
popf
sbb
push
aaa
or
mov
pusha
xchg
(bad)
retf
call
push
cmp
fwait
les
cmps
xor
sbb
(bad)
xchg
and
scas
add
fstp
or
push
push
and
cmp
outs
fldcw
add
cmp
lock
retf
add
xor
inc
stc
mov
fcom
pushf
jmp
mov
ficom
xor
or
jecxz
sub
or
jbe
sub
pop
add
xchg
fidivr
or
mov
push
(bad)
mov
aam
arpl
iret
jge
jg
outs
shl
xchg
popf
mov
xchg
cli
cmp
jo
cwde
cmp
sbb
bound
or
fmul
shl
mov
push
dec
mov
sub
int
fdivr
sub
(bad)
sub
jns
mov
out
jmp
(bad)
jmp
adc
test
pop
clc
pusha
sar
addr16
in
gs
icebp
cs
push
push
cli
mov
jae
leave
fwait
and
lahf
bound
fs
push
outs
fld
test
jge
loopne
rol
xchg
sbb
inc
xor
data16
sbb
fcom
pusha
fmul
pop
sar
add
sti
fwait
pop
or
outs
cmps
push
les
jge
xchg
add
outs
aad
inc
xor
jp
sti
outs
jae
or
jmp
lea
gs
jb
or
and
js
sti
scas
test
push
int
cdq
jno
add
xchg
adc
sbb
and
das
jle
sub
adc
(bad)
cmp
push
in
lea
jp
lahf
mov
in
popa
addr16
push
ins
push
xor
and
cmp
jl
sbb
pop
lea
loop
sub
ret
rol
inc
xor
and
mov
je
push
add
dec
ss
(bad)
cld
add
sub
sbb
idiv
pop
mov
add
fiadd
lods
daa
aaa
sub
cmp
test
icebp
pop
ds
pop
rcr
inc
dec
mov
and
push
aam
pusha
sub
into
loope
rcr
xchg
mov
xchg
paddq
addr16
jo
test
pop
popf
aam
sbb
mov
push
and
loopne
inc
mov
pop
js
imul
ja
lods
or
shr
jge
and
lods
inc
push
(bad)
loopne
xor
in
out
stos
scas
ins
dec
xchg
push
jp
add
mov
aaa
aam
ins
xchg
jno
jp
mul
jne
jge
stos
xor
push
es
mov
loope
dec
mov
mov
icebp
lods
cmp
pop
or
rol
sub
cmps
mov
jnp
fst
xchg
cwde
ja
add
outs
jae
lds
stc
mov
xchg
mov
jb
push
jbe
lahf
loopne
add
retf
pop
(bad)
ja
sub
ja
add
sub
rcr
add
bound
cmp
shr
jecxz
mov
and
adc
imul
(bad)
scas
dec
jno
(bad)
sbb
mov
fld
(bad)
mov
mov
jg
int3
sbb
fist
mov
cmp
push
xlat
mov
mov
ror
add
mov
xor
call
dec
add
sbb
sti
mov
add
mov
movs
push
dec
test
pop
jno
in
(bad)
frstor
sub
mov
cmp
pop
dec
out
jne
pop
and
adc
arpl
add
mul
dec
nop
or
ins
mov
push
xchg
dec
dec
or
pop
les
dec
stc
daa
mov
out
inc
push
(bad)
adc
jno
sbb
cdq
adc
adc
push
in
sub
cld
rcr
shl
out
mov
push
jle
jg
jnp
lea
scas
lea
mov
in
(bad)
in
repnz
adc
test
aad
cmp
stos
out
xlat
mov
out
aam
push
mov
xor
loope
shl
dec
jno
and
int3
pop
push
stos
cmp
jmp
stos
and
mov
mov
pop
test
mov
not
test
xchg
dec
xlat
out
sbb
mov
sar
sub
inc
dec
sbb
add
out
xor
pushf
movs
and
fimul
and
cwde
xlat
mov
out
mov
and
mov
or
or
sub
retf
fistp
imul
inc
aaa
mov
aam
lods
out
out
retf
pop
push
mov
mov
lahf
out
add
adc
or
mov
hlt
pop
xchg
jno
add
and
jge
add
(bad)
scas
xchg
sbb
ja
iret
inc
es
retf
inc
(bad)
cld
shl
add
fstp
inc
add
popa
push
cmc
lods
ja
cmc
repnz
push
xchg
lahf
mov
ret
xor
cwde
out
imul
in
loope
xchg
ja
or
mov
nop
add
leave
mov
pop
pop
sar
lock
dec
call
and
mov
jbe
push
push
cmp
pop
sub
mov
ins
and
ins
adc
push
add
pop
daa
adc
nop
loop
retf
shl
ret
lahf
jl
shl
icebp
fstp
sbb
pop
inc
call
call
pop
shl
add
xchg
sbb
pop
lods
pusha
ror
pop
popa
jge
shl
adc
jno
icebp
js
cmp
out
popa
je
aam
jnp
mov
mov
cmp
fcomp
pop
inc
cmp
pop
pop
push
mov
mov
fdiv
aam
push
xlat
dec
adc
int
sub
in
dec
out
jge
adc
add
push
push
sbb
mov
mov
je
push
in
inc
and
mov
push
cmp
xchg
je
xchg
out
or
dec
ror
push
mov
or
push
ret
mov
sahf
scas
jmp
movs
pop
sub
test
mov
push
mov
int3
sub
repnz
pop
xchg
xchg
dec
fisub
cdq
xor
push
inc
sub
xchg
sub
cmp
es
adc
mov
aaa
xor
ja
pop
xchg
pop
test
inc
push
dec
data16
add
push
sar
shr
mov
jne
pop
lds
sub
add
pop
jmp
jmp
and
and
loopne
xchg
loop
dec
fs
pop
nop
into
popf
out
jecxz
inc
retf
(bad)
fmul
mov
mov
mov
pop
push
adc
jbe
cmp
adc
pop
mov
inc
daa
mov
ja
jmp
inc
jb
ds
ja
pop
and
enter
sbb
ficomp
jbe
scas
int3
adc
and
imul
inc
psubw
(bad)
sub
rcr
cld
stos
jnp
call
out
pop
push
and
enter
or
gs
outs
hlt
ins
js
data16
jmp
adc
xchg
rdtsc
mov
push
vshufps
jmp
inc
scas
mov
inc
mov
mov
scas
stc
adc
test
inc
push
dec
(bad)
and
sbb
inc
shl
xor
sub
test
add
sbb
daa
add
mov
aas
cs
mov
mov
fwait
add
or
add
jne
rcr
imul
sbb
sub
aad
ins
packuswb
(bad)
imul
xchg
ss
shr
jmp
xor
shl
xor
and
outs
ss
mov
fild
cmp
icebp
pushf
pusha
xor
fimul
jmp
call
xor
jbe
or
sar
sahf
sahf
out
test
xor
mov
mov
pop
sbb
inc
mov
jbe
sahf
add
push
and
retf
xlat
dec
dec
gs
(bad)
ins
jmp
test
ss
push
test
call
(bad)
mov
add
int3
xor
xchg
or
repz
stos
ds
mov
sahf
sbb
mov
aas
fisubr
cmp
mov
mov
cmps
adc
ffreep
push
fucomi
add
mov
imul
out
mov
mov
mov
gs
mov
pop
mov
and
cwde
adc
sub
shr
ds
mov
sbb
cmp
mov
(bad)
mov
aaa
adc
dec
inc
xor
and
xor
push
bound
lods
ins
jp
and
mov
xor
stos
test
xor
ins
scas
mov
stc
in
fistp
call
sub
js
lds
adc
pop
lods
test
mov
mov
inc
iret
mov
sub
call
rol
pusha
or
aad
les
(bad)
(bad)
outs
mov
mov
jne
pusha
xor
inc
inc
fadd
jmp
ret
cmp
sub
xchg
std
lahf
into
dec
cmc
dec
js
sar
test
sbb
loope
adc
and
cmp
dec
test
aas
mov
pop
ja
jge
jmp
ins
(bad)
jmp
push
xchg
inc
jl
lahf
fnstsw
xor
cmp
(bad)
xor
fist
shl
xlat
addr16
jnp
je
ss
jnp
pushf
(bad)
stos
test
mov
adc
sub
push
push
pop
sbb
out
push
mov
mov
enter
jb
inc
xchg
sbb
dec
push
xchg
inc
addr16
xchg
fs
sbb
(bad)
push
stc
inc
retf
hlt
nop
pop
sbb
mov
cmp
call
(bad)
idiv
pusha
hlt
ins
cld
sub
in
xchg
pop
jmp
fwait
hlt
sbb
(bad)
in
cmp
push
mov
add
into
push
movs
sub
sub
out
in
inc
dec
clc
retf
sahf
sub
push
cmp
in
(bad)
xor
mov
stos
dec
or
sub
sbb
add
push
cs
jg
cmp
mov
and
add
push
and
loopne
pop
int3
or
push
ficom
xor
add
mov
xor
push
out
push
and
cmc
or
lods
xor
push
and
movs
add
addr16
jbe
dec
mov
lahf
lds
in
es
cli
bound
or
je
(bad)
jne
repz
pop
mov
in
and
rcr
dec
in
jne
and
inc
add
add
test
xor
iret
pop
mov
loope
inc
movs
cmc
test
outs
dec
or
xor
out
and
mov
cld
loope
xor
pop
jge
stc
or
add
push
push
(bad)
fcmovnb
outs
or
push
aaa
jge
jge
fnstenv
(bad)
outs
arpl
loop
adc
loopne
test
jmp
rcl
popa
mov
aas
xor
jge
imul
dec
scas
mov
mov
pusha
jbe
mov
xchg
popf
(bad)
int
in
sti
pop
cwde
xchg
jb
mov
aaa
repz
inc
and
ins
loop
cmp
mov
aad
inc
cmp
mov
push
jno
test
fs
mov
and
imul
jp
and
add
lahf
idiv
mov
test
xor
mov
rcl
sub
push
pop
fldcw
out
imul
cmp
out
xchg
and
or
fsubrp
xchg
push
fdivr
cmps
xchg
xlat
enter
mov
popf
js
push
xor
fnstenv
pop
ss
adc
and
pop
hlt
pusha
or
lock
add
shl
xor
aas
clc
punpckhbw
in
xor
cmps
xchg
pop
ins
ins
push
(bad)
pop
or
sahf
jecxz
(bad)
ror
dec
mov
mov
test
inc
loope
cmp
or
sub
loop
push
push
inc
call
mov
bound
sub
push
cmps
ret
pop
lods
fsubr
push
push
nop
dec
fnstcw
mov
lea
rcl
xor
dec
add
shl
popf
xchg
loop
jl
pop
icebp
pop
inc
xor
(bad)
pop
add
popa
add
or
inc
int3
dec
adc
jae
xchg
outs
and
mov
mov
lods
adc
outs
push
(bad)
lods
and
ror
mov
fimul
ret
sbb
dec
cmc
lea
int3
enter
repz
ss
dec
cmp
cmp
mov
les
dec
jmp
je
mov
push
(bad)
and
les
(bad)
pop
jmp
sar
push
mov
loope
ret
sub
cmp
pop
cli
jne
add
jl
ss
sbb
sub
jbe
inc
jne
inc
jge
sbb
adc
xor
es
stc
mul
push
repnz
pusha
sbb
push
jno
(bad)
mov
inc
stc
jg
mov
rol
pop
mov
pop
pusha
add
arpl
sbb
jmp
repnz
maxps
test
push
idiv
lods
sbb
mov
sub
repnz
jae
out
inc
sbb
data16
mov
xor
(bad)
mov
scas
jnp
dec
push
inc
cmp
inc
xor
or
ficom
pop
sbb
dec
mov
and
lds
sub
loop
or
fwait
push
ds
xchg
pop
lea
pop
movs
fnstenv
mov
jb
sbb
js
leave
inc
iret
mov
popa
ret
dec
push
stos
pop
lea
sar
call
fimul
mov
mov
outs
popa
shl
sub
stc
ja
dec
loope
pusha
cmp
js
nop
xor
mov
ret
daa
pop
jge
jno
jmp
and
std
int3
rcr
ins
push
dec
ret
cwde
and
scas
stos
repnz
clc
sar
add
jmp
xchg
imul
inc
jbe
outs
out
or
xor
fs
jns
(bad)
jmp
xchg
adc
cli
and
or
inc
mov
ds
ror
jb
test
mov
sti
add
push
scas
dec
stc
fs
fs
fst
mov
and
inc
fcomp
pop
push
sub
jge
fs
xor
sbb
inc
data16
push
add
inc
fwait
xchg
js
xchg
and
push
jo
jne
push
sbb
out
sub
aaa
mov
leave
dec
bound
cmp
out
js
mov
jnp
cmp
fsubr
pop
xchg
xlat
or
adc
sti
push
loopne
js
inc
mov
loope
in
or
mov
push
jno
mov
pop
add
idiv
fadd
pop
mov
in
movs
enter
push
lods
push
lock
cmp
lock
xor
and
mov
push
cmps
adc
fild
jp
cmp
xor
jae
pop
pop
mov
clc
es
pop
cwde
outs
cmp
add
sub
add
cmc
scas
push
or
gs
rol
fmul
movs
(bad)
pop
xchg
push
mov
push
xor
test
lods
mov
sub
(bad)
jg
mov
sbb
lock
loopne
cdq
add
sub
add
cs
xchg
sbb
or
sahf
adc
ret
mov
xchg
pop
in
pop
cmps
cmp
pop
mov
pop
cmp
mov
jle
outs
dec
in
sub
je
jnp
daa
inc
in
pop
ds
adc
or
jge
fdiv
repnz
inc
inc
add
or
mov
xor
std
fsub
inc
adc
hlt
mov
add
push
hlt
inc
fiadd
inc
retf
retf
jb
mov
push
gs
lock
xor
pop
jmp
mov
test
nop
test
mov
retf
jmp
or
gs
mov
mov
mov
dec
cwde
sbb
pop
xor
mov
push
fcom
sub
pop
dec
mul
test
ret
test
stc
inc
mov
dec
dec
adc
adc
inc
ret
fwait
mov
ffree
xchg
fstp
push
push
int3
mov
xchg
push
(bad)
out
ret
repz
icebp
mov
hlt
(bad)
mov
not
sar
mov
dec
push
icebp
sub
stc
sar
xchg
mov
dec
push
or
div
xchg
data16
mov
lods
mov
xchg
mov
xor
push
cld
xor
xor
and
xchg
fisub
sbb
sub
lods
mov
sbb
cmp
cmp
test
fcom
call
mov
fcomp
and
inc
fist
stc
scas
xchg
push
leave
jns
cmp
es
mov
dec
mov
int3
dec
pop
mov
scas
stos
aaa
in
(bad)
cmp
xor
repnz
inc
pop
push
add
sub
jg
call
cmc
mov
xor
push
pop
mov
outs
nop
add
and
inc
mov
jge
jmp
add
cmp
sub
loop
push
pop
shr
add
pop
nop
rep
jns
cmc
rol
xchg
data16
push
cmp
sti
cmp
and
xor
call
push
push
jb
add
fmul
jle
cmc
or
mov
scas
inc
sbb
(bad)
sti
fidivr
das
add
jmp
lahf
ret
stos
push
push
xchg
test
add
stc
adc
lods
(bad)
das
cmc
adc
sar
mov
jge
add
adc
fistp
pop
mov
xor
mov
mov
sti
addr16
ror
outs
into
les
add
out
rol
daa
add
xor
shr
retf
jno
cwde
add
cmps
mov
in
lds
pop
stos
pop
iret
pop
fldenv
aad
movs
push
cwde
sbb
add
arpl
jmp
add
das
sub
loope
mov
gs
jns
sahf
pop
dec
mov
mov
imul
sbb
cmps
mov
cmp
jle
and
mov
jl
mov
ret
add
inc
add
mov
jp
jecxz
popf
xor
xchg
jbe
xor
xchg
sbb
and
xchg
cwde
cmp
movs
jl
mov
inc
mov
loope
call
pop
mov
rol
adc
push
push
sub
aaa
fsub
dec
stos
sar
xchg
sahf
sub
pop
xchg
dec
xor
arpl
mov
ror
pop
dec
sbb
add
mov
or
or
xor
stos
mov
push
cmps
fwait
stc
cmp
mov
pop
or
inc
xchg
out
xchg
sub
aaa
jmp
mov
mov
push
pop
mov
outs
inc
inc
jg
add
mov
xchg
or
jb
loopne
ret
mov
inc
jo
mov
add
out
pop
mov
(bad)
cwde
test
aad
jo
push
inc
push
gs
aas
cmp
or
jge
sahf
hlt
cld
mov
shr
test
call
addr16
add
push
lock
scas
jmp
jbe
es
mov
ds
push
pop
mov
push
iret
jnp
xor
fcom
push
add
jmp
cmc
lock
dec
dec
pop
and
mov
call
das
data16
ret
jno
pop
clc
mov
and
cwde
dec
in
jl
xchg
xor
je
(bad)
pusha
pop
jbe
push
or
xchg
sbb
stc
jmp
pusha
push
adc
ret
js
push
mov
push
xor
imul
ins
lock
cmp
mov
and
cmp
jbe
pop
sbb
xchg
pop
aad
lea
sub
xor
sub
in
mov
frstor
loopne
adc
mov
retf
mov
lahf
mov
fnsave
pop
jns
xor
xor
rol
xor
mov
pusha
pop
mov
test
xor
std
xor
inc
aad
jl
jmp
sar
lods
mov
push
dec
daa
retf
sti
add
out
dec
or
pop
xchg
out
inc
jge
xchg
push
(bad)
cmp
jle
xor
mov
and
pop
in
sub
fcmovbe
push
call
out
adc
in
dec
out
stos
fdiv
sbb
jne
(bad)
out
ins
sub
(bad)
mov
or
push
pop
pop
inc
scas
sub
inc
cli
out
and
out
sub
aad
sar
sar
mov
mov
stc
mov
mov
inc
popw
xchg
xchg
push
std
out
push
cdq
test
push
sti
push
sbb
jno
lods
mov
dec
bound
ins
inc
xlat
cmp
loope
jae
out
sar
push
mov
repnz
in
int3
mov
stos
sahf
inc
jmp
or
movs
out
jge
cdq
fsubr
fisub
jae
cmp
scas
mov
inc
push
jp
dec
dec
fwait
inc
jnp
stc
jne
pop
in
cmp
adc
cmps
std
adc
and
out
shl
inc
das
lea
mov
push
sub
mov
xor
or
sbb
outs
jbe
imul
outs
cmc
retf
nop
ret
jge
out
jno
push
punpcklbw
push
sub
repz
enter
lahf
retf
ret
pop
fcomip
fmulp
packsswb
add
cmp
call
repnz
ficomp
pushf
mov
sbb
sar
repz
out
cmps
lods
dec
and
popa
and
push
push
push
out
inc
xor
mov
enter
out
scas
enter
std
push
push
into
mov
jnp
sbb
ror
es
out
call
or
test
rcl
imul
nop
sub
jb
push
inc
js
out
push
daa
cmp
outs
jecxz
shl
aad
push
adc
and
outs
setne
gs
test
jle
loop
add
pop
xchg
ss
or
mov
xor
jo
je
dec
and
(bad)
jg
push
std
popa
lods
int
retf
test
retf
jg
mov
cli
int3
fimul
stos
jp
xchg
push
add
stos
mov
clc
pop
pop
addr16
fld
rcl
sub
add
xor
(bad)
aas
push
aas
jbe
cmp
xchg
cld
xchg
pop
test
add
xchg
movs
push
sub
sti
mov
pop
jo
add
mov
mov
hlt
sub
out
iret
jmp
mov
adc
adc
lds
mov
jo
fnstsw
pop
jns
inc
hlt
std
mov
cmps
fmul
fxch
push
out
inc
imul
adc
cmps
mov
push
dec
pop
test
and
fcom
popa
jg
inc
push
inc
dec
mov
or
ds
retf
sti
fild
jae
push
adc
sbb
mov
sahf
mov
(bad)
cld
and
mov
aad
popa
into
ss
imul
mov
push
xchg
shl
dec
and
add
out
or
mov
repnz
leave
xchg
in
ins
mov
repz
shr
jae
mov
add
out
aas
sub
cmp
imul
and
mov
jno
push
and
frstor
or
ja
lock
pop
int
adc
jbe
sbb
arpl
or
cmps
outs
mov
inc
xlat
fwait
pop
jmp
inc
dec
xor
cld
mov
mov
(bad)
cli
cmp
cmp
aaa
adc
sahf
popa
and
jge
gs
sar
imul
test
jno
pop
or
bound
push
cld
push
arpl
div
je
repz
rcl
sbb
xchg
xor
fdiv
add
or
test
adc
jbe
movs
add
push
cmp
pop
ja
movs
jno
xchg
inc
sub
cmp
xchg
pop
and
sub
mov
xor
sbb
mov
jge
sbb
aam
xor
imul
xchg
xor
jl
pusha
stos
js
aad
pop
inc
retf
in
cmps
retf
cmp
std
fisttp
mov
mov
or
xor
mov
add
scas
mov
adc
sub
les
call
or
(bad)
es
push
add
dec
bound
and
je
das
add
mov
mov
mov
cmp
call
rcl
add
jns
inc
push
rcl
sub
into
fadd
fst
mov
inc
cmp
or
pop
cmp
enter
js
xor
ror
mov
je
or
lods
xchg
xchg
and
push
fiadd
loopne
cmc
xlat
sbb
push
xchg
je
xchg
mov
(bad)
sbb
lods
pushf
inc
jmp
mov
call
or
outs
sub
or
cli
push
imul
shl
dec
cmp
xchg
call
xchg
pop
es
jecxz
pusha
test
mul
and
mov
daa
pop
(bad)
fsub
out
outs
mov
fmulp
fimul
cmp
mov
add
outs
or
ds
arpl
adc
mov
lods
(bad)
call
jmp
and
clc
dec
fdiv
movs
xchg
shr
icebp
popa
outs
sub
je
xor
pushfw
fbld
stos
arpl
and
das
aas
cs
ins
add
sbb
jno
inc
and
sbb
sub
adc
mov
push
sbb
stos
mov
aad
fs
xchg
ja
xlat
and
dec
push
jnp
pushf
dec
sbb
adc
inc
test
(bad)
cmps
std
out
dec
outs
dec
fild
adc
into
mov
test
(bad)
dec
fisub
jle
nop
cdq
leave
or
mov
retf
test
inc
cmp
mov
or
xor
ret
mov
je
pop
fidivr
jecxz
mov
loope
les
pop
mov
mov
jp
mov
stos
adc
mov
lods
push
xor
push
stos
or
call
xor
(bad)
xchg
(bad)
jge
iret
sbb
sbb
call
fild
outs
pusha
or
retf
vmovhps
xor
pop
xor
aad
mov
push
sbb
push
inc
sub
outs
aas
cli
in
push
add
popa
pop
push
retf
adc
xor
sbb
mov
cmps
mov
test
ins
push
jns
cwde
fs
xor
mov
hlt
xlat
inc
inc
aas
dec
mov
mov
xchg
call
and
push
pop
xor
cmp
les
test
call
inc
les
and
fisubr
ret
dec
fucom
mov
xor
xor
mov
ror
sub
fdivr
bound
inc
dec
add
sub
loope
shr
xchg
in
and
pop
jbe
rol
mov
cmp
sub
js
call
xor
pop
xchg
pushw
bound
inc
xchg
and
repnz
int3
or
(bad)
div
jns
pop
inc
sbb
sti
mov
xchg
jecxz
adc
aaa
(bad)
cmps
in
shl
cmp
repnz
imul
mov
ja
and
dec
and
lahf
cli
cdq
data16
adc
adc
adc
jo
and
clc
loop
adc
in
repnz
cld
push
mov
mov
sub
aad
adc
mov
mov
aam
lds
outs
add
rol
dec
push
sbb
jns
fwait
jp
inc
sub
adc
mov
outs
mov
inc
xchg
xchg
mov
fdivr
or
sub
into
aas
pop
pop
test
mov
sub
clc
pop
cmp
or
jle
push
iretw
shl
pop
xchg
sub
inc
test
imul
jg
xchg
cwde
shl
stc
call
(bad)
pop
jp
cdq
test
test
out
adc
scas
shl
mov
xchg
in
shl
xor
ins
loopne
push
pop
jbe
cs
repz
test
cli
dec
repz
nop
leave
push
push
loop
xchg
pop
iret
sbb
icebp
int
push
repz
cmps
mov
sbb
fadd
pop
push
sbb
mov
or
push
add
lahf
or
and
inc
rol
dec
in
cs
fadd
mov
xor
iret
arpl
mov
cmp
cvttps2pi
cmp
das
fwait
push
fcom
adc
sbb
jb
enter
sbb
pop
daa
sub
cmp
rcr
pop
in
and
adc
cmp
xor
adc
mov
xchg
test
popf
loope
pop
scas
add
sub
test
cmp
mov
data16
mov
mov
fiadd
lods
ds
popf
pop
add
cmp
ss
xlat
mov
or
jnp
sbb
mov
fsub
inc
mov
adc
fbstp
push
ret
test
mul
mov
aaa
xor
je
(bad)
out
cmps
clc
jbe
mov
xchg
pop
mov
outs
push
adc
pop
psraw
sar
ror
pop
popf
loope
cmp
lods
mov
and
repnz
inc
push
scas
cli
and
nop
or
stos
cmp
push
xchg
rol
or
lahf
jo
xor
sbb
mov
stos
mov
pop
dec
pop
sbb
lods
sbb
(bad)
loope
pop
mov
jp
and
cmp
out
xchg
retf
mov
out
mov
jl
xor
and
retf
push
ficomp
stc
stos
mov
push
std
adc
into
sti
mov
fcomp
adc
or
pusha
fdivr
mov
dec
loopne
xchg
jge
inc
retf
repz
mov
dec
xor
repz
push
or
stos
push
popf
in
pop
sbb
stos
ret
push
cmp
outs
xchg
das
xor
cmc
popw
mov
(bad)
cld
aas
jo
jg
or
imul
int
push
xor
hlt
or
push
sub
mov
loop
push
lods
daa
int3
sbb
(bad)
(bad)
call
aas
pop
dec
mov
jns
dec
xchg
outs
(bad)
jns
inc
and
mov
ss
fcomip
pop
icebp
gs
movs
xor
adc
add
inc
out
jne
and
dec
push
cli
mov
ja
iret
lea
fimul
jecxz
div
mov
and
push
shl
fcom
jnp
push
mov
mov
pop
cwde
mov
out
fist
or
call
addr16
mov
adc
repnz
dec
dec
lahf
add
stos
sar
jno
fdivr
jno
add
jmp
mov
dec
fnstenv
or
test
jg
and
rcl
push
xchg
repnz
ss
jb
out
sub
jl
jns
gs
lods
in
jbe
call
dec
inc
mov
movs
mov
jp
scas
add
lods
xchg
sbb
inc
sub
push
inc
ins
(bad)
out
sub
lods
test
fmulp
xor
fisttp
and
das
or
ins
mov
int
lods
out
inc
sbb
sar
std
sbb
cmp
cmp
mov
rcl
and
mov
out
or
movs
clc
inc
sbb
mov
fwait
aaa
ror
sbb
inc
sub
cmp
and
xchg
test
aad
icebp
sub
imul
cmp
ret
call
(bad)
fcomp
sbb
sbb
arpl
ficom
data16
stos
xor
pop
pop
pop
xchg
outs
push
cmp
enter
addr16
mov
pushf
(bad)
pop
push
pusha
and
pop
aam
inc
(bad)
cdq
(bad)
sar
jns
clc
in
in
pop
stc
aam
jp
aam
sbb
cmp
adc
or
or
push
adc
sbb
pop
push
inc
push
mov
jmp
jnp
mov
pop
xor
out
push
call
mov
shr
movs
xor
jmp
imul
loope
aaa
outs
lock
shl
test
retf
jns
mov
cmp
push
test
xor
jb
mov
and
test
xor
or
xchg
jnp
rcr
in
clc
adc
xchg
icebp
sub
inc
fbstp
movs
test
(bad)
dec
test
push
mov
test
xor
xchg
sub
xchg
pop
adc
jno
xlat
adc
or
mov
and
sub
popf
psraw
aam
jnp
and
jb
or
jo
sbb
inc
or
or
adc
dec
les
xchg
xor
mov
jae
sahf
ss
(bad)
jmp
pushf
movs
cdq
push
mov
fs
js
mov
in
inc
bound
sbb
add
rcr
or
adc
add
mov
mov
mov
add
in
push
prefetcht0
clc
mov
jp
adc
ror
ins
out
into
scas
and
lea
xlat
movs
movd
push
jns
mov
loop
lea
and
jne
test
push
mov
rcr
cmp
adc
aam
adc
cmp
cs
jnp
js
add
in
bound
mov
cmc
je
mov
mov
fwait
xor
in
loop
xchg
mov
(bad)
rol
daa
out
mov
fdivp
icebp
int3
in
add
fbld
ins
adc
lds
jecxz
shl
mov
jmp
or
xchg
fimul
jl
iret
leave
mov
add
jbe
out
xor
int3
push
popf
pop
shr
sbb
xlat
sub
jo
aam
xchg
jecxz
mov
cmp
lods
test
cmp
mov
adc
ret
(bad)
pop
or
ja
jmp
xor
jl
jae
push
mov
(bad)
push
cmp
jns
cld
ins
push
mov
aas
fisttp
arpl
loopne
mov
hlt
out
ds
dec
xor
in
stos
pop
imul
ret
out
sbb
mov
retf
inc
fdiv
mov
add
ret
mov
adc
test
and
mov
scas
ins
and
ins
cli
dec
es
or
test
and
sbb
mulps
ret
nop
mov
and
(bad)
mov
xor
xor
ins
test
cmp
ds
in
jg
xchg
xchg
rcl
hlt
add
fadd
dec
outs
(bad)
(bad)
iret
mov
sub
mov
retf
or
add
pop
sahf
push
int
inc
mov
mov
jecxz
jne
mov
in
lods
imul
cld
inc
jge
push
sahf
xlat
or
je
xor
pushf
retf
sub
push
xchg
rcr
sbb
int
int
(bad)
ss
iret
push
enter
xchg
lods
rcl
sub
inc
inc
cmp
loope
cmp
adc
(bad)
jb
cli
add
mov
mov
pop
scas
rcr
es
xchg
xchg
mov
sub
fidiv
jne
neg
repz
jl
jg
or
pushf
mov
aam
sub
fisub
push
push
sbb
sub
push
cli
mov
add
or
jecxz
ror
pop
mov
and
jbe
pop
int
sti
fild
push
adc
fdiv
or
mov
jl
or
inc
xchg
jmp
add
dec
or
push
mov
mov
ss
mov
cld
cmc
dec
loop
xor
jmp
adc
dec
sub
sub
dec
xor
int3
lods
mov
retf
push
je
js
mov
aam
das
adc
mov
lods
leave
cmp
iret
jmp
mov
inc
or
mov
push
in
imul
test
int3
xor
jmp
push
cmp
mov
or
lea
push
std
pushf
stos
aam
je
popa
mov
sbb
push
pushf
rol
mov
fwait
and
retf
sub
inc
(bad)
jmp
jne
mov
xchg
fwait
imul
sti
inc
das
inc
add
push
outs
jnp
shl
outs
out
sahf
inc
aad
hlt
sbb
out
mov
mov
sbb
aas
push
cmps
fbstp
jno
fcomp
xor
or
int
dec
leave
xchg
scas
mov
loopne
cmp
fcom
sbb
cmps
mov
in
out
icebp
js
pop
inc
and
xlat
dec
int3
or
nop
stos
push
call
out
das
xor
call
fisttp
hlt
add
fidiv
inc
dec
mov
fild
push
adc
sub
test
hlt
(bad)
outs
loop
dec
cs
mov
mov
ret
jmp
mov
push
and
aad
xor
cmp
inc
cmp
pop
push
adc
retf
arpl
ret
daa
cmp
add
sub
lahf
nop
adc
pop
sub
sub
outs
push
push
jno
in
xchg
and
iret
push
dec
bound
mov
enter
or
fisttp
fld
pushf
lds
and
mov
test
popf
pop
stos
pop
jne
cdq
push
inc
std
je
xchg
daa
cmps
bound
stc
loope
mov
xor
je
into
cmp
dec
jmp
jg
push
inc
add
push
cdq
rol
out
in
sub
ss
add
and
dec
or
ret
pop
adc
test
adc
and
mov
mov
adc
or
inc
cmps
inc
fisub
sub
mov
pop
xchg
(bad)
retf
loopne
rcl
cmp
jp
sub
mov
aaa
xlat
arpl
cmp
(bad)
hlt
adc
sub
push
cs
stos
sbb
lods
mov
push
(bad)
retf
cmp
sub
in
(bad)
and
inc
jecxz
xchg
sub
(bad)
outs
jg
jnp
adc
cld
fcmove
lods
sbb
sub
fstp
das
jecxz
cmps
int3
mov
inc
shl
adc
jge
jo
jecxz
xchg
mov
mov
mov
les
push
lods
push
mov
cmp
pop
pop
jb
cmp
stos
adc
popf
sub
dec
mov
test
xlat
sbb
mov
dec
cwde
pop
mov
pushf
(bad)
push
das
mov
dec
xor
fwait
pop
adc
(bad)
cmp
cmp
push
jmp
stc
sbb
and
xchg
icebp
daa
push
cmc
xor
inc
sbb
push
sbb
dec
cld
sub
and
test
cwde
out
loope
inc
lods
mov
push
dec
les
jb
shl
pushf
or
push
fld
mov
mov
push
sahf
adc
pop
cdq
push
jecxz
stc
inc
sub
call
inc
enter
inc
sbb
inc
mov
lock
std
jo
ds
pop
dec
lods
sbb
mov
sbb
cmp
in
ss
repnz
in
xchg
sbb
int
or
popa
cmp
cmc
dec
(bad)
stc
std
mov
retf
or
mov
test
jb
mov
pop
mov
stos
inc
pushf
add
inc
outs
cmp
ins
sbb
dec
dec
dec
mov
lods
sub
arpl
mov
sub
pop
add
pushf
movs
push
sub
imul
inc
cld
and
sub
push
xchg
fldcw
pop
cwde
(bad)
lock
pop
vdivsd
adc
mov
xlat
sub
sti
or
add
(bad)
xor
and
mov
cwde
push
scas
xchg
in
cdq
push
dec
in
scas
fwait
xchg
(bad)
mov
adc
rol
inc
jbe
inc
jge
cs
aam
and
dec
sar
dec
xchg
inc
jecxz
in
out
out
cmp
pop
pop
mov
jmp
push
push
mov
mov
ret
cs
pop
xor
ins
out
cmp
inc
inc
adc
nop
ss
shl
mov
push
test
test
pop
push
cmp
mov
sbb
push
mov
stos
fwait
push
inc
lods
sub
mov
sub
add
loopne
push
int3
(bad)
cmp
xor
div
mov
popf
and
inc
fidivr
test
fstp
(bad)
mov
loopne
push
jno
inc
ja
and
xchg
mov
leave
mov
enter
push
cmp
xchg
inc
xlat
fild
scas
sar
dec
cmps
adc
push
push
hlt
aam
jmp
test
mov
mov
call
or
xchg
jmp
add
(bad)
adc
and
sbb
mov
scas
push
iret
out
(bad)
jo
pushf
cld
mov
cmps
imul
push
outs
xchg
pop
cmps
daa
fs
fisttp
adc
fnstenv
les
push
mov
jge
aad
sub
mov
clc
jae
push
or
inc
dec
pop
add
cmp
add
or
dec
mov
loop
sbb
pusha
xor
retf
nop
add
pop
adc
adc
in
add
repz
cmp
push
(bad)
mov
mov
fild
or
sbb
and
hlt
mov
imul
in
data16
loopne
daa
int3
lods
hlt
add
jmp
icebp
push
xchg
jge
test
inc
scas
loope
jnp
in
inc
leave
cmp
clc
repz
jp
retf
lods
push
jmp
cmc
and
and
cmps
retf
sbb
jo
lahf
sbb
repz
pop
lods
test
repnz
test
add
jl
ins
imul
dec
mov
repnz
xor
lds
inc
mov
jge
and
mov
pop
xchg
je
adc
enter
retf
sub
jae
test
jmp
aaa
mov
pushf
jns
rol
(bad)
arpl
or
sub
cmp
lds
or
lea
test
ret
jg
cli
ret
arpl
jns
in
mov
fwait
jnp
in
cmp
popa
retf
pusha
jp
sbb
bnd
scas
shl
cli
jne
pop
in
xor
(bad)
push
loope
cwde
jge
ret
mov
push
shl
jmp
inc
repnz
xchg
ins
imul
aad
adc
(bad)
sbb
mov
adc
fs
adc
inc
adc
inc
std
add
xor
dec
aam
sub
mov
dec
pop
cmp
jg
push
push
cmc
jl
outs
je
hlt
mov
ins
push
paddq
xlat
addr16
xor
repz
jno
out
in
sub
lea
in
push
xchg
jmp
mov
cli
or
ret
mov
mov
push
xor
pop
adc
add
xor
dec
pop
imul
leave
adc
cmps
(bad)
call
lods
retf
push
sub
ja
cmp
dec
outs
or
lahf
mov
sbb
or
call
mov
outs
mov
xchg
ja
cmp
push
ja
cmp
mov
fwait
push
test
xor
sbb
idiv
js
pop
or
daa
mov
mov
pop
jb
ds
or
les
xchg
dec
jo
sub
jae
xor
push
mov
scas
cmc
jno
mov
popf
movs
sbb
mov
out
in
cmp
jmp
jnp
enter
jne
fisub
push
pop
sub
and
lods
clc
mov
fwait
sbb
sbb
cmp
jp
or
mov
mov
sub
stc
xchg
jno
into
mov
test
and
xlat
mov
dec
test
movs
sbb
leave
cdq
lods
or
in
sbb
push
cmp
hlt
sbb
rcl
sahf
push
dec
xchg
pop
ret
std
jmp
out
jnp
xchg
cmp
mov
hlt
or
test
jmp
fist
inc
test
out
mov
xchg
lock
sub
xor
test
jae
xchg
retf
jge
jnp
xchg
test
jecxz
loop
pop
int3
mov
or
dec
dec
retf
in
enter
test
mov
pop
add
fimul
fisttp
jo
gs
ds
ja
outs
fmul
adc
loopne
mov
mov
cmps
leave
cmp
out
cmps
in
aas
pop
rol
stos
jp
arpl
mov
jae
inc
ficomp
xchg
in
in
pushf
xchg
xchg
inc
add
repnz
mov
pop
and
mov
ins
dec
outs
not
sub
mov
out
shl
cmps
pop
sar
push
jmp
xor
gs
adc
fbld
push
iret
lods
js
mov
push
int3
outs
leave
mov
cld
add
push
(bad)
in
idiv
popf
xchg
add
sub
push
sub
aas
retf
les
sar
mov
ret
iret
sahf
xchg
dec
mov
inc
lds
out
das
imul
aam
les
rcl
call
mov
sbb
jmp
sar
dec
pop
rcl
pop
adc
cmps
jg
cmc
and
and
or
loopne
mov
mov
pop
imul
sti
(bad)
mov
xchg
inc
or
inc
cmps
adc
outs
and
stc
hlt
int
jmp
push
cmp
xor
in
repnz
lods
sub
mov
call
and
int3
and
test
dec
call
aas
mov
mov
or
inc
add
inc
pop
jbe
addr16
sub
nop
movs
cmp
test
ss
into
mov
xlat
gs
loop
push
dec
push
mov
pop
push
xchg
fdivr
ficomp
dec
mov
mov
mov
push
das
outs
xor
repz
push
sub
or
push
push
out
or
(bad)
push
lods
mov
stos
fild
cli
jmp
jmp
cmp
xchg
mov
cwde
push
test
stc
sub
(bad)
imul
push
jp
popa
cmps
shl
adc
imul
fidivr
xor
pop
jae
mov
inc
mov
jecxz
scas
adc
popa
ficomp
f2xm1
lock
dec
pop
sub
cdq
push
adc
cmp
add
mov
or
cmp
push
push
test
mov
retf
adc
movs
adc
dec
js
stos
popa
add
push
push
push
adc
addr16
xchg
add
push
add
add
js
(bad)
shr
mov
ds
fiadd
mov
dec
dec
(bad)
je
stos
or
imul
xchg
cmc
test
cmc
test
mov
fdivr
and
sub
mov
inc
in
dec
std
jnp
cmc
mov
aam
mov
sub
add
fiadd
(bad)
neg
test
sub
sub
daa
push
add
mov
cs
ret
adc
sar
sub
pop
cdq
loope
inc
adc
imul
(bad)
ficomp
adc
outs
retf
lahf
push
dec
jl
out
xchg
xchg
shl
ret
into
add
fwait
mov
pop
es
(bad)
mov
in
xor
pop
xor
mov
push
sbb
jo
inc
and
aam
add
xchg
mov
adc
aas
dec
repz
stos
mov
pop
mov
fdivr
pop
ret
test
inc
scas
mov
sbb
and
or
cdq
shl
mov
sub
cmps
push
call
push
cmp
pop
xchg
arpl
lahf
lods
xchg
aad
push
dec
inc
pop
leave
jl
popf
pushf
lahf
je
sub
and
mov
fwait
int
cld
addr16
out
sub
(bad)
bound
fsubr
push
inc
sub
lea
pop
dec
mov
dec
(bad)
cmp
mov
ret
or
in
inc
fdiv
adc
fild
out
es
(bad)
or
xchg
mov
mov
jmp
push
lods
cmps
cmps
add
jns
push
mov
jns
clc
ja
pop
in
jb
lods
dec
lea
aam
mov
jns
inc
xchg
stos
retf
stc
lea
cld
cwde
mov
enter
jle
mov
adc
and
rcl
scas
mov
jns
mov
xchg
stos
sbb
jbe
mov
in
das
adc
cs
(bad)
movs
leave
pushf
inc
test
stos
sub
es
xlat
mov
call
mov
jmp
cmp
push
cs
(bad)
mov
pusha
(bad)
lea
sub
xchg
lahf
aad
jno
adc
repnz
sub
arpl
out
mov
in
test
inc
mov
data16
jmp
out
in
xor
sub
xchg
push
fistp
mov
fisub
mov
out
fsubr
jno
pop
inc
push
xchg
pop
push
das
psubw
lds
rol
in
aas
les
dec
loopne
sar
inc
fistp
xlat
bound
sub
test
addr16
icebp
xchg
shl
jp
and
xchg
or
cmps
pop
mov
cs
cmp
aad
adc
cdq
test
pop
(bad)
frstor
jmp
(bad)
dec
or
xlat
inc
sub
jle
int3
daa
pusha
mov
push
popa
and
dec
sub
push
mov
test
inc
mov
or
popf
xchg
popw
push
inc
ja
jle
or
jmp
mov
dec
iret
ret
mov
add
pusha
mov
push
and
add
mov
jp
pop
ins
inc
and
add
stc
cmps
mov
mov
idiv
mov
sti
push
push
adc
add
sar
retf
push
setb
add
xchg
and
jae
ds
cmp
and
add
ret
jb
cmc
in
out
cmp
sub
jecxz
pop
dec
sbb
mov
fs
jno
and
repz
xchg
stc
pop
sub
(bad)
rep
imul
pop
imul
push
mov
dec
int
mov
dec
les
jl
ins
pop
jmp
xchg
aas
loope
js
push
or
(bad)
sub
xor
das
imul
(bad)
jg
(bad)
inc
stc
add
xor
mov
ficom
jae
inc
nop
inc
bound
xor
pushf
mov
aaa
jae
mov
cmp
and
dec
mov
sbb
jns
mov
xchg
sub
ja
shr
pushf
mov
loope
jno
sbb
movs
jns
std
fucomp
iret
push
dec
aaa
or
jp
dec
adc
xor
lea
iret
movs
sbb
outs
ret
loopne
add
pop
sar
arpl
and
xchg
rcr
cmc
jae
jmp
xchg
inc
leave
shl
lahf
push
rcl
inc
leave
cmp
xchg
outs
dec
imul
and
mov
xchg
inc
and
jp
jae
xchg
xchg
shr
push
xchg
sbb
and
iret
jmp
into
xor
imul
hlt
(bad)
jg
jl
retf
dec
mov
pop
arpl
cmc
hlt
daa
shl
mov
sbb
xchg
out
dec
adc
sub
icebp
pop
daa
add
rcl
mov
jbe
mov
push
add
or
inc
jnp
lea
aam
mov
xchg
mov
movs
gs
popa
test
sub
push
or
out
outs
jl
xchg
xchg
mov
jp
shl
pop
mov
(bad)
adc
push
jne
dec
(bad)
sub
movs
fsub
shl
popa
mov
adc
sbb
fisub
cs
push
and
xchg
xor
ror
outs
dec
mov
adc
sub
in
jmp
fld
int3
test
gs
out
xchg
add
fbld
push
in
jcxz
mov
sahf
adc
ds
adc
int
not
arpl
test
or
daa
mov
mov
mov
mov
popf
push
sbb
aas
cld
out
pop
inc
stc
icebp
jbe
xor
inc
mov
sub
sub
imul
popa
xor
jg
pop
icebp
xor
pop
sub
adc
scas
push
test
xor
(bad)
fadd
ret
sub
test
mov
adc
out
push
cmp
xchg
cdq
or
cmp
jne
jbe
sbb
test
inc
jbe
cmp
lods
fxtract
mov
outs
xor
fistp
xchg
aam
dec
bound
(bad)
es
mov
stc
dec
inc
movs
test
cmc
xlat
dec
call
push
cdq
iret
add
inc
and
xchg
ficomp
xchg
mov
dec
sub
mov
aaa
call
loop
mov
lods
dec
fisub
xor
dec
xchg
mov
cli
dec
xor
xor
lods
cmp
add
mov
call
xor
cmp
dec
cmps
add
add
shl
jmp
into
jnp
add
cmp
inc
mov
ds
pop
lds
cmc
jmp
dec
scas
sbb
inc
jb
mov
in
mov
in
jns
dec
adc
test
sahf
jecxz
out
adc
retf
or
jo
lods
stc
sbb
cmc
arpl
into
and
xor
push
pop
pop
jnp
xchg
jl
aam
mov
sub
inc
push
(bad)
pop
sub
test
cmp
mov
lods
call
out
imul
inc
jnp
dec
xor
aad
dec
in
fcom
ror
inc
or
(bad)
dec
inc
dec
mov
dec
cmp
sbb
aas
xchg
adc
(bad)
mov
ins
and
outs
je
(bad)
cmp
jae
bswap
out
cdq
pop
(bad)
(bad)
in
xor
int
out
in
mov
mov
push
lahf
call
add
pop
cmc
enter
inc
xchg
push
mov
xchg
std
sar
push
xor
mov
rol
cmps
lods
adc
les
out
and
shl
sbb
scas
push
pop
mov
xor
std
cmp
ret
cmp
(bad)
mov
mov
cmp
push
cmp
jbe
cmps
xchg
push
adc
or
pop
sub
dec
push
cmps
jp
movs
mov
sbb
pusha
movs
call
dec
fs
mov
scas
add
sub
cmps
dec
mov
(bad)
scas
mov
call
jns
adc
jno
bound
(bad)
and
aaa
sbb
int3
sub
fwait
push
mov
xchg
out
sub
mov
adc
aam
sub
mov
cld
push
imul
aas
jl
shl
ja
(bad)
push
cdq
cdq
test
int3
scas
cs
jmp
dec
mov
pop
in
xchg
hlt
loop
push
loop
repz
hlt
pop
std
inc
pop
fcom
jp
lods
push
fld
enter
scas
fcmovnu
add
mov
daa
jecxz
jl
ja
(bad)
add
dec
mov
inc
hlt
mov
cmp
xchg
mov
push
jae
sub
lds
in
je
jnp
sahf
sti
jno
mov
(bad)
cwde
stos
jne
ror
rcl
adc
imul
sbb
(bad)
data16
push
pop
dec
mov
ror
adc
dec
into
test
sbb
(bad)
and
cwde
sbb
and
aaa
mov
js
in
je
movs
or
lods
xchg
mov
sub
into
sbb
sub
add
adc
or
or
fistp
mov
jno
rcr
add
sub
cmp
shl
leave
aam
ficom
push
int
push
mov
sbb
adc
cs
std
cmp
(bad)
lods
adc
mov
aad
div
cmp
push
loope
sbb
stos
xchg
push
daa
xor
sub
push
sahf
cmp
add
sbb
mov
faddp
in
jge
retf
mov
push
jge
xchg
fstp
and
push
nop
es
aas
mov
jecxz
cmp
add
rcl
ret
adc
mov
shr
inc
out
cmp
add
lods
ss
loope
and
pop
pop
div
xchg
and
pop
xor
sahf
pop
mov
lock
mov
test
clc
sub
aas
out
sar
push
pop
sbb
fs
les
dec
data16
mov
xor
outs
shl
mul
jb
sbb
add
cmp
jb
sub
inc
add
addr16
jno
mov
or
push
adc
imul
and
adc
push
adc
sub
fwait
or
xchg
sub
nop
pop
or
rol
mov
ds
je
cld
and
adc
movs
and
(bad)
cdq
test
jge
out
mov
mov
fld
push
pop
in
pop
push
clc
or
push
jg
mov
cs
adc
popf
(bad)
mov
shl
jp
push
call
clc
and
xchg
inc
mov
aad
pop
rcr
lock
xor
enter
(bad)
iret
int
dec
sub
xor
movs
fadd
movs
dec
ret
jecxz
or
pop
mov
sbb
inc
xchg
mov
add
jmp
(bad)
mov
in
xlat
push
mov
ja
push
xor
or
call
(bad)
mov
stc
sbb
xor
or
mov
push
mov
aas
(bad)
lods
xor
adc
adc
mov
mov
rcl
lods
pop
fist
test
add
loop
loope
jb
mov
xlat
xchg
ficomp
movs
cmp
jns
pop
mov
mov
ja
cld
xor
push
out
mov
xlat
adc
dec
in
mov
imul
call
inc
mov
dec
out
jp
adc
mov
jns
scas
add
xlat
aam
icebp
push
xlat
pop
dec
push
dec
mov
inc
dec
(bad)
fmul
aad
dec
lock
adc
aam
inc
push
dec
pop
add
aad
sbb
or
lods
push
in
and
dec
cmp
sti
retf
retf
jmp
sub
retf
jb
push
push
add
xor
sub
dec
adc
jmp
push
test
mov
cmp
clc
outs
les
stc
sub
aaa
jns
repnz
mov
inc
popf
xor
test
imul
pop
(bad)
pop
mov
mov
cmps
add
cwde
mov
sub
gs
repnz
pop
test
ins
repz
cmp
jmp
gs
cmps
hlt
ror
bound
aam
mov
cdq
pop
hlt
pushf
bnd
das
jmp
aad
fstp
cmp
adc
fdivr
adc
pop
in
jmp
mov
jnp
pop
jnp
dec
pusha
pop
fild
ds
jb
or
(bad)
daa
addr16
or
ins
and
inc
cmps
sub
pop
xlat
or
push
aas
inc
ins
ss
lds
cld
shl
lea
test
inc
ss
xchg
cmp
mov
pop
movs
pop
and
mov
dec
or
ret
pop
lahf
test
not
add
enter
xchg
jl
jl
dec
fst
push
or
aad
repz
enter
and
fwait
pusha
cld
hlt
js
ss
fsubrp
xchg
popa
test
pop
lods
mov
ror
std
fnstenvw
mov
jg
sar
xchg
dec
(bad)
sar
aaa
fistp
adc
jmp
fldcw
pushf
sbb
enter
fisttp
bound
mov
andps
ret
ret
sub
scas
mov
stos
push
sub
xor
push
cmps
xor
and
mov
fwait
fs
push
and
push
in
pushf
imul
or
call
and
sub
out
ret
cmp
mov
(bad)
xchg
inc
jmp
js
arpl
loopne
cld
xchg
adc
xor
pop
or
lods
pop
pop
lods
into
(bad)
mov
(bad)
inc
popf
in
ins
iret
jmp
out
(bad)
fsubr
and
in
loop
and
mov
mul
push
xchg
pop
add
mov
xor
jmp
xchg
mov
pop
lods
test
cmps
mov
pop
jge
aam
jle
pop
add
cmp
ins
mov
or
jmp
jl
cmp
pop
fdivp
mov
pop
cmp
repnz
or
(bad)
aaa
mov
cmps
cmp
jmp
lahf
dec
sub
out
mov
add
xor
outs
jae
pushf
outs
repnz
scas
ins
add
or
push
xchg
ds
and
int
(bad)
push
inc
adc
icebp
les
imul
(bad)
popw
call
aas
lahf
jbe
fwait
shl
fnstcw
repnz
(bad)
lock
sbb
imul
cmp
clc
push
stos
pcmpeqd
add
jle
sbb
movs
pop
xor
bound
fisubr
jle
or
inc
aas
adc
dec
scas
retf
sub
sub
mov
cmp
pop
mov
xor
mov
dec
push
cdq
pop
ficom
xchg
addr16
inc
jp
loop
scas
mov
(bad)
adc
enter
ss
in
and
dec
sbb
inc
fdiv
pushf
mov
xlat
push
jecxz
mov
daa
and
push
dec
lea
dec
mov
in
pop
mov
add
push
inc
adc
push
enter
sub
push
jp
pop
mov
inc
inc
std
rep
ret
push
jns
mov
add
adc
xchg
in
sub
jp
adc
sbb
inc
adc
cmp
movs
fidiv
push
push
mov
mov
dec
adc
mov
and
(bad)
pop
xor
mov
test
push
xor
movs
mov
pop
xor
mov
test
push
or
lods
div
adc
push
mov
push
loope
(bad)
pop
jmp
add
cmp
cmps
loopne
test
xchg
pop
xor
mov
xchg
dec
ffreep
mov
les
das
cmps
fcom
in
js
pushf
push
in
mov
add
and
adc
je
lods
mov
ja
push
into
mov
out
pushf
or
and
add
(bad)
add
jo
inc
mov
push
mov
sub
jnp
jmp
mov
test
retf
mov
and
hlt
setge
push
(bad)
or
in
out
inc
cld
dec
cli
sar
pop
mov
aas
ins
aaa
in
xchg
dec
hlt
aaa
mov
sbb
push
arpl
cdq
push
sub
xchg
sub
xchg
jo
iret
mov
xor
cld
sub
and
jnp
mov
into
test
add
cdq
lahf
jns
sti
or
cmp
adc
ss
(bad)
cmp
push
and
push
sbb
inc
mov
cli
fs
rcr
cmp
jne
jns
inc
sbb
popa
xor
push
das
cmc
hlt
repnz
xchg
shl
mov
mov
jl
sbb
ret
(bad)
mov
lock
mov
test
jb
into
into
push
fdivr
lahf
stos
(bad)
sar
add
mov
lock
cld
repnz
cli
jne
push
mov
arpl
push
ret
jno
push
add
repnz
test
add
mov
push
mov
clc
pop
mov
fst
loope
cmc
and
into
int3
call
imul
xor
es
or
push
add
nop
mov
sbb
rcr
outs
xor
push
shl
jle
fisttp
ror
mov
push
imul
mov
lods
sub
xchg
mov
xchg
aad
sbb
cmp
aaa
(bad)
leave
push
add
and
xor
(bad)
adc
mov
stc
in
adc
jae
mov
aam
cmp
mov
adc
ins
and
pop
or
fs
jbe
and
stc
popf
orps
mov
(bad)
out
cmp
hlt
mov
out
sbb
mov
push
gs
sti
pop
sbb
push
shl
push
mov
add
mov
test
mov
sar
mov
inc
sti
xor
ret
push
inc
pusha
pop
icebp
jne
mov
retf
(bad)
sbb
mov
lods
rol
sbb
jmp
fld
stc
mov
and
adc
loope
icebp
imul
adc
stos
pop
sti
sbb
xchg
out
jno
loop
add
les
repnz
push
cli
dec
jno
sub
xchg
mov
mov
inc
push
push
push
sub
aaa
iret
cmp
xor
mov
cmp
into
xchg
cmp
pushf
and
sbb
into
push
pop
jns
movs
hlt
and
mov
adc
cmp
std
ja
xchg
imul
(bad)
loopne
into
pop
stos
ret
(bad)
inc
jge
sbb
jmp
lods
cmc
jmp
mov
div
idiv
loop
cmp
mov
ss
ret
pop
xlat
stos
sub
mov
ja
mov
cmp
sub
lods
xor
shr
int3
and
or
call
outs
cld
in
inc
push
rol
xor
leave
push
dec
pop
xor
pop
mov
hlt
nop
js
repnz
jno
mov
ins
loope
lahf
gs
mov
outs
xor
xor
jmp
xchg
add
mov
inc
iret
push
shr
pop
sar
repnz
push
sub
std
xor
aas
aad
xor
add
cli
mov
enter
add
mov
adc
jnp
stos
imul
jo
push
fwait
lea
xor
shl
stos
sbb
pushf
mov
pop
stos
mov
gs
mov
and
in
or
ret
sbb
push
cwde
adc
xlat
sub
(bad)
fld
outs
shr
cmp
lds
retf
jl
mov
sahf
or
mov
push
sbb
xchg
ret
cs
dec
xchg
mov
les
sbb
cmps
iret
mov
or
aas
adc
mov
push
stc
rcl
or
mov
sub
pop
mov
inc
jae
vpmacssww
xchg
adc
fmulp
in
lods
cmp
lea
sub
xor
data16
dec
test
jne
pop
dec
sbb
dec
pop
call
xchg
std
push
dec
mov
and
adc
pop
xchg
cmc
sbb
push
dec
test
jbe
dec
cmps
push
popf
nop
add
or
cs
add
pop
add
push
std
sub
pop
iret
sub
pushf
aas
mov
shr
jge
popa
call
pusha
mov
xchg
in
adc
mov
es
pop
in
icebp
call
(bad)
(bad)
repnz
adc
cmp
and
stc
xchg
ins
fld
push
lahf
call
lods
sbb
mov
xchg
lea
inc
test
xchg
inc
inc
jp
add
in
fstp
sti
lock
scas
popa
push
std
hlt
fcom
cmp
push
and
push
(bad)
rcr
enter
mov
stc
gs
(bad)
cwde
pop
xchg
mov
add
mov
pop
in
fidiv
enter
or
mov
push
loop
ss
(bad)
mov
mov
out
or
in
retf
mov
push
sbb
sar
outs
icebp
jnp
je
mov
xor
mov
pop
mov
xor
ds
jp
sbb
push
jl
push
mov
mov
int3
jecxz
jg
push
inc
fcom
or
pop
xor
das
jae
cmp
adc
iret
adc
fadd
rol
push
sub
loopne
js
cs
jnp
lea
add
dec
jnp
jecxz
mov
and
sbb
xor
push
in
in
movs
jmp
mov
pop
push
xchg
pop
outs
sbb
fisub
out
lock
or
aaa
mov
jae
fs
lea
leave
xor
mov
dec
or
push
jne
out
retf
jmp
pop
adc
and
retf
pop
add
imul
xor
call
mov
clc
test
adc
shl
hlt
fucomip
jo
fdivr
jno
cmp
(bad)
xor
xor
jno
xor
shl
dec
mov
and
push
push
into
mov
mov
pop
fdivr
pushf
out
xchg
push
xor
mov
test
bound
sub
pop
(bad)
fsubr
stc
sbb
push
xor
mov
jge
enter
mov
sub
out
and
inc
fcmovu
clc
pop
push
into
and
dec
imul
mov
adc
shl
xchg
sub
sbb
mov
pushf
cmp
dec
out
or
test
sub
push
pop
cs
popf
dec
test
bound
sbb
mov
mov
repnz
mov
out
pop
adc
jecxz
and
jno
mov
mov
push
inc
xlat
mov
aad
xor
mov
dec
jp
mov
mov
xchg
inc
(bad)
cmps
and
lods
dec
and
fmul
clc
jg
pop
test
mov
and
test
ins
mul
pop
test
pop
mov
outs
dec
fucomip
stos
adc
out
retw
xor
push
dec
mov
jmp
push
or
push
les
mov
in
fidivr
mov
or
call
add
adc
scas
loop
mov
mov
imul
es
xchg
pushf
popf
fdiv
mov
add
push
sub
dec
pop
cld
sbb
rcl
mov
cmps
(bad)
out
(bad)
dec
or
jnp
das
outs
jl
mov
ins
inc
stos
mov
popf
movs
lahf
ficom
sub
ror
je
xor
movs
cmp
add
imul
stos
push
inc
add
inc
cmp
fs
mov
xor
fsub
popa
inc
sti
cmp
(bad)
ror
mov
out
aaa
push
mov
cdq
pusha
sbb
(bad)
cmp
nop
in
sub
popf
sbb
nop
inc
xchg
arpl
stos
add
inc
scas
rcr
rol
dec
nop
movs
hlt
pusha
fimul
cmp
std
popa
stc
inc
jmp
and
inc
outs
add
rol
std
mov
aas
pop
cmp
shl
and
and
cmp
mov
rol
push
jbe
sbb
test
dec
xchg
and
xlat
sahf
push
sbb
and
mov
nop
pop
push
in
mov
mov
jbe
cmps
lds
mov
jns
es
(bad)
xor
sti
out
arpl
cmp
aam
dec
sub
push
xchg
rcr
sahf
mov
fs
sahf
movs
push
sub
cmc
xchg
popf
dec
jbe
out
dec
sbb
push
pop
fdiv
sbb
cs
test
cmps
call
mov
add
mov
in
popa
or
and
test
push
push
clc
cmp
fsub
mov
mov
(bad)
dec
loopne
enter
jo
stc
xor
mov
add
loope
ficom
xchg
not
jb
das
iret
fstp
les
dec
jns
fsubr
(bad)
dec
outs
sub
pop
outs
jnp
sbb
add
ja
mov
adc
or
lods
sub
pop
ret
sbb
jmp
inc
jb
cwde
push
call
jns
or
pop
sub
ficom
xlat
mov
inc
adc
aaa
jle
in
cld
xchg
daa
leave
enter
jnp
addr16
mov
aaa
pop
shl
jle
rcl
push
ds
mov
add
ret
lock
mov
(bad)
shl
adc
(bad)
movs
jp
dec
cmp
cdq
push
out
dec
fucomi
popf
xor
mov
push
sub
ins
into
pop
add
daa
into
inc
fldln2
fwait
inc
fsubr
xor
adc
movs
ror
loopne
xor
mov
out
adc
mov
dec
mov
lds
adc
mov
jno
mov
retf
cmp
jo
cwde
pop
aas
fwait
mov
cmps
jmp
in
pop
adc
xchg
fwait
das
sbb
inc
or
xor
jl
and
enter
jo
and
mov
add
mov
inc
jnp
daa
xchg
cmps
jl
aaa
dec
pop
sbb
or
push
fiadd
adc
pop
pop
cmp
mov
adc
pop
loopne
fdiv
fsubr
loopne
fisubr
dec
outs
inc
jmp
sub
mov
xchg
lea
or
call
mov
test
fmul
mov
xor
push
adc
xor
mov
ds
je
repz
mov
call
mov
lods
pusha
jae
mov
dec
adc
xchg
pop
pop
lahf
or
addr16
pop
nop
daa
pushf
dec
mov
call
enter
mov
add
or
and
lods
test
test
xchg
or
push
push
int
outs
lods
xchg
xor
std
lods
pop
mov
or
nop
ins
pop
jbe
adc
mov
or
inc
xchg
xor
sub
jle
test
stc
scas
cmp
pop
pop
rcr
push
repnz
cmp
jb
dec
add
adc
movs
add
xchg
lods
addr16
jge
xchg
xchg
sbb
sbb
hlt
cmps
push
pusha
pop
in
push
cld
pop
adc
or
outs
adc
movs
loopne
aaa
lahf
sbb
add
sub
fld
mov
lds
sub
mov
call
jmp
fild
cmp
push
xor
mov
fmul
popf
mov
ins
test
lods
sbb
out
push
adc
pushf
jmp
mov
jae
daa
fcomp
push
call
(bad)
sub
xchg
ror
xchg
cli
mul
push
dec
shl
mov
imul
push
or
pop
not
jne
pushf
sti
sbb
adc
aaa
mov
mov
push
outs
dec
sub
mov
mov
mov
sub
aas
in
xor
inc
inc
(bad)
imul
jb
jns
and
fs
sbb
icebp
es
cld
mov
lahf
adc
idiv
xchg
mov
sar
gs
jl
xchg
loop
lahf
xor
paddb
push
xchg
push
add
popf
push
std
cld
(bad)
ds
mov
imul
push
pop
mov
adc
je
iret
adc
test
sub
sub
sub
adc
(bad)
aaa
cld
aaa
sti
out
push
daa
add
xchg
dec
inc
outs
mov
loope
pop
loop
int
lods
test
ins
mov
fstp
les
call
xchg
lods
test
dec
mov
sub
ss
ins
std
mov
pop
push
adc
movs
sbb
outs
dec
sub
pop
inc
xchg
imul
jmp
ins
jmp
sbb
push
(bad)
ds
sbb
ret
xlat
in
int
mov
jbe
mov
pop
ja
call
repnz
aam
xlat
mov
jmp
clc
nop
outs
sbb
sahf
les
xor
cs
test
test
data16
scas
js
out
push
clc
mov
pop
inc
not
arpl
(bad)
pop
ret
icebp
cmps
(bad)
push
push
cwde
adc
and
inc
and
imul
addr16
(bad)
adc
jne
fild
retf
adc
retf
cmp
add
sbb
data16
fbstp
(bad)
sar
and
xor
inc
pop
and
aad
jp
popa
add
dec
inc
int
and
jmp
adc
and
jp
mov
inc
arpl
and
loope
stos
and
cmp
inc
dec
clc
adc
inc
push
pop
fwait
out
mov
rdpmc
pop
inc
sbb
adc
jp
ret
or
inc
cmove
jnp
ret
xchg
sti
pop
dec
call
fcmove
in
sub
or
inc
(bad)
imul
mov
push
cmps
(bad)
xor
push
add
ret
add
mov
movs
fnsave
inc
and
std
(bad)
sti
add
dec
pop
jae
sar
push
sbb
adc
mov
mov
test
xor
jo
cmc
xchg
inc
pop
mov
lods
cmps
cmp
mov
mov
mul
push
icebp
sar
jbe
sub
test
ins
cmp
scas
into
retf
add
adc
ret
add
push
mov
sbb
pusha
scas
xchg
xor
jle
sbb
fs
pop
cmp
(bad)
or
push
push
mov
fwait
push
sub
xor
test
cmps
add
pusha
pop
mov
xchg
jmp
js
pushf
in
mov
movs
sbb
add
adc
imul
es
loopne
jecxz
stos
cmp
xchg
fidiv
cmp
loopne
stos
cwde
sub
inc
mov
inc
test
push
pop
jmp
repnz
call
stos
(bad)
mov
xor
or
push
dec
lahf
addr16
or
mov
xor
lea
cmp
adc
aaa
jb
sub
pusha
fldenv
jae
jg
jae
push
cmp
je
adc
mov
outs
mov
iret
mov
call
iret
sub
add
imul
jne
movs
xor
and
in
or
xor
ins
into
and
mov
and
push
xchg
stc
dec
sbb
in
adc
cmc
push
imul
jnp
xchg
mov
xchg
mov
pop
and
xor
pop
lds
repz
(bad)
leave
addr16
rol
jae
sbb
sub
out
test
mov
pop
push
mov
js
add
(bad)
push
fwait
add
dec
sbb
ds
inc
push
(bad)
bound
das
je
jp
bnd
(bad)
xor
xchg
mov
and
ins
call
jo
ficom
adc
ficomp
rcl
dec
cdq
push
loop
mov
pop
inc
mov
adc
aam
push
imul
or
sub
sub
(bad)
pushf
mov
and
aas
retf
leave
cmp
sub
or
cmp
mov
push
xor
cmp
jl
cmps
jbe
sub
scas
cmp
cs
ds
test
jne
cs
inc
lods
jbe
or
icebp
dec
dec
push
jne
in
mov
cwde
arpl
cmp
(bad)
das
aaa
sub
adc
mov
(bad)
cmc
inc
hlt
bound
xchg
add
jp
dec
cdq
or
mov
aam
aam
imul
jnp
xor
xchg
inc
fild
push
jns
add
push
test
arpl
in
inc
fwait
stc
dec
cmps
dec
mov
mov
pop
sub
xor
mov
dec
xchg
sar
addr16
cli
push
lahf
mov
push
or
aas
xor
addr16
ins
ret
inc
mov
movs
xchg
mov
or
pop
iret
stc
push
icebp
dec
mov
mov
jle
cld
es
pusha
repnz
or
pusha
sbb
cwde
inc
jle
mov
daa
into
pop
pop
test
stos
or
jmp
in
ss
pop
mov
mov
ins
movs
and
fadd
pushfw
and
mov
add
push
loop
cmp
scas
pop
push
in
pop
adc
ss
mov
pop
pushf
inc
inc
aas
push
rcr
call
jbe
mov
push
mov
xor
movs
push
repnz
pop
inc
push
bound
mov
lods
sahf
clc
pop
or
lods
push
or
xlat
(bad)
out
mov
(bad)
adc
or
scas
imul
into
mov
cmp
sub
cmps
and
cmp
js
into
mov
gs
mov
pusha
sbb
(bad)
out
gs
test
pusha
pop
adc
ror
inc
pushf
fistp
in
rcl
(bad)
sub
push
mov
cmp
sub
aaa
popf
mov
mov
js
(bad)
sub
push
xor
xor
jae
sbb
loope
fwait
or
pxor
dec
sub
outs
xor
mov
jl
mov
repz
dec
push
leave
out
add
adc
dec
fnsave
loop
vsqrtps
fldenv
out
adc
mov
cmc
fnstenv
sbb
jmp
sbb
xor
and
xchg
mov
push
pop
retf
or
fld
leave
push
ss
icebp
popa
popa
cmps
ds
(bad)
hlt
loop
push
jns
inc
cmp
xor
fldcw
push
cld
push
and
sbb
retf
ficom
in
(bad)
xor
mov
sbb
cs
xchg
pop
repz
pop
mov
or
pop
jno
into
clc
push
jp
icebp
sbb
shl
leave
mov
mov
ins
xchg
stos
pop
repz
dec
pop
not
or
aaa
dec
add
bound
jbe
and
sub
cmps
adc
mov
adc
rcl
jecxz
dec
push
jge
inc
ja
push
xchg
in
neg
pop
inc
js
push
xchg
shr
xor
xchg
test
add
sbb
ret
fdivrp
jl
and
inc
lock
pop
ret
xchg
pop
lods
out
int
inc
adc
push
popa
mov
and
stos
xor
bound
inc
and
dec
adc
or
mov
call
dec
aas
sar
neg
or
sub
shl
scas
es
ins
dec
das
ja
fdivrp
xchg
push
mov
pushf
ror
mov
mov
stc
adc
mov
jb
aaa
in
repz
adc
mov
jmp
cmc
inc
jb
test
pushf
jecxz
dec
pop
call
mov
add
adc
scas
gs
fisttp
aad
imul
dec
cmc
test
pop
mov
repnz
cmp
add
pusha
pop
sahf
xor
sub
aas
or
push
or
push
cmps
nop
daa
push
pop
and
cmp
sub
dec
mov
mov
and
inc
ficom
and
dec
ds
add
push
jge
inc
mov
sub
lahf
shl
(bad)
cmc
mov
pop
(bad)
mov
sbb
or
inc
xchg
push
movs
(bad)
jg
xor
aam
jne
int3
cli
xor
dec
mov
ror
leave
aam
mov
push
outs
(bad)
inc
pop
jmp
push
(bad)
hlt
or
ficom
xchg
sahf
jecxz
js
mov
xchg
aam
sbb
jne
into
xor
mov
mov
test
call
dec
add
jbe
add
sub
jbe
jns
xor
retf
test
repnz
add
js
push
push
mov
adc
push
sahf
fisub
mov
movs
lods
fs
hlt
sbb
mov
mov
ds
and
(bad)
jecxz
push
repz
in
pushf
enter
mov
shr
jno
xchg
xor
jne
retf
popa
add
scas
int3
es
stos
add
xchg
mov
(bad)
dec
mov
fist
cmp
and
jns
inc
cmps
test
(bad)
and
push
aaa
popa
cmp
je
dec
xchg
inc
mov
arpl
shl
cdq
or
sbb
div
adc
(bad)
sub
mov
mov
(bad)
mov
cmp
mov
outs
scas
pop
and
jmp
pushf
test
or
or
cwde
arpl
ficomp
pop
adc
mov
repnz
test
not
hlt
mov
push
mov
jp
mov
mov
gs
in
and
cmp
movs
sbb
jge
dec
movs
aas
clc
sub
pop
pop
jns
stos
cli
or
mov
stc
dec
push
xchg
repz
mov
lahf
push
call
mov
or
retf
test
push
ins
lock
jge
cmp
inc
sbb
aam
das
lea
mov
(bad)
push
das
mov
imul
(bad)
int3
adc
push
popf
adc
in
in
lods
push
fbld
mov
(bad)
repz
int3
out
push
fnstenv
xchg
xchg
sbb
inc
jmp
out
add
test
test
iret
mov
das
(bad)
sbb
mov
retf
inc
xchg
stos
jae
dec
lahf
into
fisub
addr16
int
or
pop
cs
push
call
fld
(bad)
sbb
sbb
(bad)
out
cmp
popf
clc
xchg
test
jne
in
mov
xor
outs
or
and
inc
mov
popa
xchg
test
pop
mov
aad
pop
dec
pushf
push
repnz
outs
and
xchg
stc
cmp
inc
outs
pusha
adc
add
push
adc
cdq
fsubp
cmps
cdq
inc
push
ins
dec
mov
int
test
imul
cmps
add
jns
ins
cmp
fcmovnb
sbb
jecxz
cwde
mov
jmp
inc
out
loop
pusha
repnz
data16
cli
out
call
popa
sub
cmps
frndint
rcl
fwait
out
sbb
pop
pop
movs
daa
hlt
lock
push
mov
lds
and
sbb
sub
aaa
in
push
leave
pop
fldcw
xchg
inc
(bad)
xor
mov
nop
sbb
out
dec
(bad)
pop
test
sbb
add
scas
stos
fstp
adc
cmp
sbb
mov
add
mov
xchg
jb
fcom
mov
in
cdq
cmp
sbb
ret
out
dec
hlt
add
sbb
test
add
in
out
rcr
push
div
stos
and
mov
fldcw
add
std
int
jne
idiv
sub
xor
in
call
das
xchg
lods
pop
retf
call
jnp
or
or
add
mov
data16
push
jmp
jo
inc
outs
push
sub
out
fstp
pop
js
stc
packsswb
mov
cmp
addr16
cmps
and
nop
add
fisttp
sbb
push
ja
xor
push
ficom
mov
dec
sbb
enter
fisub
jge
popa
lods
daa
out
icebp
mov
pop
inc
ins
retf
int3
jbe
push
cwde
in
xor
sbb
div
sub
pop
xchg
xchg
into
je
lock
div
jl
imul
dec
add
(bad)
fdivr
rol
enter
mov
mov
add
nop
cdq
popa
pop
jge
inc
stos
adc
sub
xchg
outs
inc
loopne
push
push
mov
cli
gs
ins
sti
int
pop
mov
xchg
mov
adc
sbb
inc
xchg
leave
cli
dec
push
push
imul
sbb
adc
(bad)
push
push
pop
xchg
popf
dec
sub
jne
mov
fsub
sbb
jno
ja
aas
loop
(bad)
std
inc
retf
fmul
pop
adc
push
pop
push
xchg
push
sahf
pop
pop
mov
js
js
sbb
sar
jo
add
push
mov
pop
sti
pop
adc
test
or
adc
pop
mov
test
lahf
and
add
ins
js
sub
xchg
inc
cmps
dec
and
adc
inc
jl
mov
data16
mov
add
fwait
add
out
or
mov
js
dec
mov
xor
xchg
mov
cmps
nop
ja
mov
pop
sub
inc
xchg
mul
ds
imul
shl
mov
dec
adc
add
or
cmp
push
jnp
aaa
add
shl
xchg
mov
dec
cmc
dec
or
sbb
test
cmp
xor
shl
pop
or
bound
pop
adc
mov
mov
(bad)
xor
ins
les
mov
mov
jecxz
cmp
push
xchg
or
inc
add
inc
pushf
imul
push
jle
pushf
dec
sar
stos
pop
add
popf
pop
repz
ficomp
fimul
push
xor
dec
push
add
jo
mov
aaa
out
pop
and
call
fisub
into
rol
or
xchg
add
dec
rcr
cmps
jl
sub
icebp
mov
or
xchg
sub
lahf
xchg
loope
pop
jmp
push
je
leave
lods
sub
mov
xchg
jecxz
dec
stos
xor
fcmovu
xor
sbb
mov
mov
fld1
imul
xchg
ds
jo
add
addr16
je
es
jb
shr
push
scas
fnstcw
xor
and
das
mov
mov
je
(bad)
mov
pop
add
ret
pop
pop
add
add
mov
cmps
dec
adc
mov
inc
mov
mov
gs
mov
(bad)
mov
in
sbb
and
sbb
inc
mov
movs
leave
sbb
push
mov
mov
retf
cs
and
lods
scas
jl
push
outs
pop
lahf
sbb
mov
or
popa
(bad)
fnstenv
xor
pop
sub
scas
das
mov
jae
ret
fsub
in
push
inc
(bad)
(bad)
rol
ror
(bad)
scas
mov
fbld
add
test
cmp
rep
inc
xor
mov
sbb
mov
push
ds
idiv
jl
pop
adc
sbb
addr16
jmp
lea
jbe
sti
(bad)
lahf
(bad)
out
jl
pop
sbb
test
dec
mov
stos
ret
sub
in
outs
jne
jecxz
inc
pop
jae
xlat
xchg
int
cmp
dec
popa
cwde
in
repz
fdivr
add
sar
lahf
add
fsub
fcomp
sbb
or
popf
xchg
dec
mov
pop
mov
mov
or
cmc
mov
out
fbstp
addr16
ret
cmp
cmps
into
pop
mov
fwait
pop
outs
test
clc
imul
scas
cli
jp
mov
mov
fcos
or
mov
loope
dec
jmp
push
mov
adc
stos
and
xor
(bad)
add
aam
retf
bound
inc
out
test
rcl
mov
mov
fidiv
and
xor
mov
aam
loop
lahf
and
out
adc
push
cmps
cmc
call
or
dec
vcvttss2si
xchg
mov
scas
shr
scas
xlat
cwde
xchg
mov
mov
cdq
fisubr
jo
or
sbb
imul
inc
push
mov
jne
gs
test
leave
xchg
imul
cmps
or
inc
xor
xchg
je
int
inc
out
sub
bnd
xchg
test
sub
sub
sub
dec
xchg
pop
jbe
xor
xchg
loop
inc
ret
xchg
out
mov
and
adc
in
xor
or
cld
outs
xchg
jbe
fcomp
out
adc
and
jp
xchg
sub
shr
(bad)
mov
fs
sbb
test
movs
stos
call
stos
stos
sub
loopne
mov
mov
loope
mov
jae
and
sbb
xchg
call
lods
int3
outs
or
das
ja
add
leave
cmps
out
push
(bad)
add
bound
and
ds
call
cmp
neg
rcl
imul
outs
jge
inc
iret
pushf
sbb
fs
adc
sub
xchg
xlat
cmp
or
add
sar
data16
dec
pop
pop
sbb
loope
(bad)
icebp
jl
daa
(bad)
adc
mov
mov
add
clc
cli
jnp
pusha
(bad)
fild
stc
aam
mov
test
icebp
repnz
mov
bnd
mov
(bad)
mov
adc
jmp
adc
xor
dec
xor
sahf
add
das
icebp
cmp
addr16
xchg
cld
(bad)
enter
leave
scas
jno
lea
jl
sub
dec
jge
cmp
dec
and
out
xchg
shl
jb
lahf
jge
jns
adc
push
xor
je
cmps
add
mov
in
test
scas
fist
rcr
ins
test
jmp
rcl
sbb
bound
sub
cmps
ja
sar
sbb
loopne
cmp
inc
adc
and
into
arpl
jmp
imul
cdq
push
add
jb
mov
jle
movs
nop
mov
dec
inc
jo
leave
sbb
sub
sub
mov
inc
pop
push
ficom
mov
mov
enter
add
test
or
sbb
mov
pushf
dec
adc
cs
xor
clc
push
adc
sar
mov
mov
dec
jge
adc
xchg
jns
(bad)
or
push
sbb
int
js
cmc
xchg
es
lea
mov
xchg
enter
hlt
pusha
pop
add
inc
rcr
jne
dec
add
test
push
inc
and
adc
cmp
xchg
test
dec
push
lock
or
outs
sbb
inc
adc
lea
xor
sub
sti
sti
adc
in
xchg
mov
sub
icebp
jae
mov
test
pop
or
add
jmp
xchg
or
inc
pop
adc
dec
(bad)
dec
push
outs
jmp
loop
test
das
pop
add
and
jle
push
sbb
add
ja
inc
xchg
(bad)
ja
push
inc
das
ret
cmp
pop
adc
add
jmp
lea
inc
push
mov
out
std
push
lods
mov
jbe
jecxz
mov
adc
inc
pop
xor
cmps
clc
inc
cmp
jp
sbb
movs
pop
outs
mov
test
enter
inc
std
sbb
lds
dec
sbb
in
scas
nop
add
sar
mov
aam
fwait
jne
aas
sub
mov
add
mov
cmp
int
popf
ja
call
jle
mov
or
frstor
sub
cdq
push
cmps
inc
sbb
xor
dec
push
xchg
adc
dec
dec
jae
popa
jecxz
imul
sub
pop
mov
test
mov
nop
pop
jb
jmp
or
stos
inc
adc
xchg
jb
jecxz
(bad)
sti
push
cmp
mov
ret
jmp
ins
adc
adc
sub
icebp
(bad)
sti
jmp
mov
je
scas
xchg
jno
test
mov
inc
test
sub
ins
aaa
(bad)
pop
and
add
cmp
pop
xchg
and
xor
sub
mov
lock
push
je
retf
mov
mov
lahf
push
mov
dec
mov
add
loop
jmp
fucomip
test
sub
xchg
mov
fwait
mov
mov
popw
push
jns
pop
add
fwait
imul
call
aaa
push
jle
pop
not
add
loopne
rcr
imul
or
xchg
popa
mov
out
stos
mov
mov
repz
aam
int3
add
mov
push
dec
adc
lods
stos
xor
sbb
(bad)
stos
call
sub
stos
push
stos
cmp
das
aas
popf
retf
movs
icebp
cmp
fnstcw
repnz
fstp
imul
sub
in
imul
xor
sub
dec
icebp
cld
inc
sbb
jg
push
inc
nop
loopne
mov
or
inc
popf
mov
int3
in
fmul
dec
and
or
dec
push
fwait
int
repnz
mov
imul
iret
or
cmp
xchg
sahf
dec
pop
dec
nop
ja
movs
aaa
mov
shl
outs
push
std
inc
adc
enter
sti
jge
es
push
dec
xor
jo
add
push
inc
mov
mov
mov
dec
jmp
jmp
push
inc
sahf
dec
addr16
dec
ins
jl
scas
dec
sbb
cmp
loopne
aaa
xor
dec
data16
push
fwait
inc
mov
xor
pushf
pusha
mov
jle
outs
mov
inc
jmp
xor
and
mov
dec
xchg
jnp
sbb
(bad)
out
das
xchg
sub
push
sbb
add
rcl
shr
xor
out
inc
xor
iret
inc
push
pop
push
arpl
jge
dec
or
int3
mov
out
jg
mov
aaa
inc
out
sub
cmp
js
imul
js
add
push
enter
icebp
je
int
and
xchg
into
inc
cmp
pushf
jle
cli
cmp
fiadd
mov
pop
xor
mov
pop
mov
fbld
dec
pop
cdq
or
sahf
cli
jle
mov
(bad)
rcr
movs
(bad)
data16
and
mov
mov
nop
jg
loope
cmp
dec
push
fwait
lods
cmps
xor
xchg
ret
cmc
jl
iret
cmp
xor
dec
xchg
jmp
scas
inc
mov
mov
mov
sbb
mov
sub
xor
jle
cmps
inc
pop
and
ja
shr
jae
mov
adc
add
test
add
xchg
pop
mov
and
pushf
dec
movs
dec
cmp
repz
xchg
add
mov
sbb
mov
sahf
ret
jp
xlat
mov
lds
jnp
idiv
ret
das
mov
or
ins
and
fcmove
cmp
call
sub
sub
sbb
jge
(bad)
loopne
pop
clc
mov
retf
daa
pusha
ds
imul
pop
xchg
or
pop
aas
sbb
sbb
mov
aam
cmp
rcr
js
ret
out
dec
rcr
iret
data16
popf
push
scas
mov
fcomp
outs
mov
out
mov
cdq
repnz
pop
cmp
fbld
lods
test
xor
repz
adc
mov
nop
repz
mov
mov
mov
imul
add
adc
lahf
cld
test
add
(bad)
xor
pop
arpl
xlat
jae
bound
daa
out
sbb
adc
sub
outs
pop
sub
je
inc
adc
add
mov
aaa
gs
fucomp
xlat
iret
imul
dec
dec
dec
pop
xchg
push
cmp
or
out
imul
jnp
mov
push
pop
push
ja
lock
sbb
xor
bound
(bad)
mov
mov
mov
movhps
sbb
rol
in
xchg
jle
stc
ins
and
repz
gs
adc
inc
pavgb
jecxz
adc
jmp
and
pop
lods
push
xlat
(bad)
sub
in
push
xlat
xchg
mov
cwd
xor
mov
mov
push
stos
mov
and
pop
jo
cld
outs
mov
push
adc
add
aad
out
fwait
jbe
sbb
fstp
pushf
or
fisttp
aam
sbb
test
sub
popa
mov
jno
clc
call
inc
sbb
mov
push
cmp
mov
sahf
ror
retf
bound
dec
adc
push
loopne
mov
pop
shl
xchg
nop
pop
fdiv
(bad)
push
xchg
jnp
adc
cli
and
dec
sbb
xchg
aam
lea
ds
(bad)
call
aas
movs
push
(bad)
cmp
adc
and
in
xchg
aas
movs
ss
cmp
inc
stos
imul
push
jg
shl
or
push
adc
inc
lds
mov
mov
xchg
add
(bad)
add
lds
pop
jno
scas
push
and
and
leave
aad
push
dec
jno
js
jmp
pop
and
dec
xchg
pop
ficomp
dec
fs
sbb
outs
cmps
inc
in
movs
iret
outs
dec
stc
xlat
out
mov
movs
dec
and
push
xchg
out
inc
inc
cmp
inc
cmps
pop
fwait
pop
xchg
mov
and
jge
or
xchg
and
xchg
std
pop
lahf
and
cmp
js
mov
pop
ret
mov
loopne
jmp
hlt
les
stos
sahf
mov
bound
sahf
daa
jl
mov
retf
(bad)
shl
in
mov
mov
retf
ds
xchg
adc
sahf
outs
push
dec
cmp
xbegin
fwait
jne
nop
stc
fdiv
imul
loop
nop
pop
cmps
fsubr
test
mov
int3
jae
dec
test
std
out
lods
or
or
mov
sub
icebp
sub
call
inc
and
fwait
popf
je
xor
movs
mov
arpl
scas
add
(bad)
sbb
xor
xchg
sar
mov
loope
push
ds
mov
jmp
mov
push
xchg
in
xlat
fcmovne
adc
xor
clc
pushf
(bad)
ss
jb
dec
mov
sbb
jp
mov
adc
pop
jnp
addr16
and
test
mov
sbb
gs
cmp
arpl
xchg
sub
inc
(bad)
xor
jo
dec
mov
and
je
or
xchg
icebp
aad
push
xor
cmp
xchg
or
cmp
adc
or
loope
jmp
lds
add
dec
add
cld
xor
xor
loopne
aam
or
sub
xchg
jo
add
arpl
iret
push
push
add
sub
pop
push
and
repnz
xchg
test
lods
leave
pop
jmp
ror
pop
(bad)
and
jbe
adc
pop
je
push
xchg
sbb
les
clc
fucom
scas
out
xor
jo
xchg
dec
push
repnz
sbb
ins
xchg
aam
aad
jmp
repz
icebp
test
imul
add
out
jge
inc
fdivr
inc
sub
cld
aad
mov
adc
vpshuflw
pop
rcr
pop
int
push
aas
lods
loope
push
cld
adc
pop
pop
daa
and
and
mov
call
push
or
pop
and
sbb
int3
dec
out
test
call
les
adc
stos
cmp
push
outs
cmp
pop
lods
aaa
addr16
pop
imul
iret
mov
dec
xor
cmps
lods
push
push
cdq
sub
fisttp
push
bnd
dec
shr
test
ins
ins
jg
dec
loop
scas
dec
sub
adc
dec
xchg
aad
lods
aas
xchg
add
mov
jle
and
aad
push
pop
fisttp
pmaxub
add
into
call
int
imul
bound
mov
jb
add
add
mov
(bad)
xlat
int
xor
js
call
sub
into
or
fs
rcr
rcr
test
mov
dec
push
xor
pop
cmp
jecxz
add
out
into
cdq
and
xor
test
jp
and
sub
xchg
ja
(bad)
jl
leave
xor
adc
adc
out
(bad)
ins
les
cmps
mov
lds
xor
cmp
and
stc
iret
sub
aas
sub
inc
ja
cdq
fist
movs
ret
or
mov
jge
cmps
mov
in
leave
mov
and
push
in
shr
jo
push
mov
cli
jo
adc
xchg
movs
inc
xchg
or
outs
or
xchg
pop
scas
or
fxam
mov
in
icebp
xchg
inc
lock
push
arpl
(bad)
mov
cmp
fisttp
test
mov
pop
(bad)
retf
sub
das
(bad)
stos
jne
aam
or
dec
and
rcl
mov
mov
arpl
adc
rcl
js
fist
pop
lods
adc
repnz
inc
pop
adc
ficom
retf
stos
stos
addr16
mov
push
cmps
in
sbb
int3
sti
and
pop
nop
stos
mov
and
shr
sub
loopne
adc
mov
cmp
push
push
add
jno
ds
retf
xchg
push
add
or
or
push
or
test
test
xchg
add
fcom
fild
add
xor
sub
inc
mov
std
and
jecxz
dec
add
clc
cwde
adc
mov
cmp
(bad)
pop
aaa
cmp
ds
xlat
mov
(bad)
pop
mov
and
or
cmp
cmps
movs
and
retf
cwde
mov
sar
xor
dec
mov
(bad)
loope
fstp
mov
sub
cmp
cli
inc
das
dec
mov
retf
cmp
push
dec
mov
cmc
gs
mov
loope
sub
push
fs
sbb
xchg
ret
inc
jne
xchg
xchg
xchg
jb
dec
clc
fisub
enter
mov
not
lea
and
(bad)
jmp
popa
mov
inc
in
or
fs
inc
enter
push
rol
loop
pushf
jle
mov
fnstenv
jnp
xchg
in
xor
ja
jecxz
mov
mov
in
xchg
xchg
ins
jle
mov
jmp
and
ins
pushf
imul
mov
loope
or
loop
sub
push
dec
ror
in
adc
cwde
mov
out
jecxz
pop
push
sar
push
cdq
jmp
cwde
aas
or
mov
sbb
jae
cmp
dec
inc
dec
movs
fstp
jne
addr16
xchg
sbb
xor
scas
hlt
adc
push
call
push
push
add
dec
int3
test
ret
add
cmp
stos
data16
pop
jl
and
mov
fwait
jecxz
cmp
or
xor
inc
call
loop
repnz
push
add
dec
scas
jmp
push
sbb
div
mov
int3
xchg
out
xor
rcl
xor
sub
mov
cmps
sub
enter
icebp
and
popf
in
mov
add
mov
repz
xchg
pop
sub
outs
mov
jge
or
push
inc
xor
mov
icebp
sti
cmp
add
xor
xor
mov
jae
mov
mov
pushf
retf
add
lahf
prefetchw
mov
imul
jne
and
mov
int3
sar
jl
leave
mov
es
movs
cld
sub
out
into
push
dec
cld
clc
xor
mov
inc
int
imul
(bad)
add
push
sbb
ret
xor
sti
mov
add
aam
dec
jb
jmp
mov
ja
jge
push
mov
push
add
jnp
pop
xor
jno
div
mov
sub
sub
cmp
les
inc
loopne
mov
leave
lods
jmp
adc
dec
inc
pusha
sub
mov
inc
leave
out
cmp
pop
pop
(bad)
stos
push
cmp
hlt
retf
test
jne
pop
icebp
cmc
retf
and
push
outs
cmp
in
lds
fsubr
mov
retf
fld
mov
push
mov
pop
sub
push
mov
int
sub
xchg
xchg
jp
push
xchg
retf
sbb
(bad)
fwait
loop
dec
dec
das
data16
pop
sbb
cmp
cmps
sbb
adc
sub
add
imul
jmp
pop
fmul
mov
sbb
enter
ds
push
int
retf
movs
stos
mov
push
outs
mov
dec
sub
sub
inc
loope
push
sbb
(bad)
movs
retf
push
jne
out
or
inc
fcom
arpl
mov
pop
out
mov
adc
movs
repnz
scas
xchg
push
stos
je
pusha
pop
cli
mov
pop
and
retf
cmp
xchg
push
push
pop
or
or
mov
iret
add
les
pop
xchg
rol
js
movs
lock
and
sub
loope
imul
rcr
les
imul
movs
sbb
add
and
cmp
push
ja
sbb
dec
jbe
in
addr16
push
ins
xor
and
cwde
inc
movs
push
inc
pushf
push
add
(bad)
in
fisttp
jmp
mov
add
pop
jmp
sbb
(bad)
mov
test
shl
out
das
bound
mov
jg
dec
dec
cwde
popf
or
jnp
lahf
es
xor
inc
adc
dec
data16
add
(bad)
jge
jmp
sti
sub
lea
sub
and
and
xor
jg
fisub
ret
sub
fimul
aaa
sub
xchg
cmc
cmp
ficomp
jle
push
scas
push
add
popa
xchg
push
ins
fcomp
retf
cmp
cmp
fstp
sub
ins
and
mov
push
loopne
call
add
imul
and
mov
add
xchg
je
out
push
loope
mov
jle
lods
inc
pop
xchg
cmp
sbb
jmp
cs
mov
mov
daa
into
dec
rcl
(bad)
int
xchg
jns
mov
call
and
dec
dec
out
xchg
xor
stc
sbb
std
mov
jl
lods
sub
(bad)
fst
cmp
mov
std
cmc
jns
jecxz
popa
clc
test
test
or
call
shl
inc
daa
fldcw
pop
xor
cmps
jle
(bad)
push
xlat
mov
adc
or
mov
jno
call
cmp
fsubp
out
fidivr
iret
push
pop
jns
cmp
lods
out
or
xor
inc
jae
je
fs
mov
cmp
gs
mov
and
test
ret
and
adc
outs
push
pop
aas
mov
repz
sub
xchg
push
rol
daa
pop
pop
popf
sbb
sub
push
cmps
cmps
sub
jmp
sbb
cs
out
mov
leave
lea
fld1
pusha
adc
je
gs
fdiv
mov
dec
arpl
dec
sbb
xor
and
and
jo
dec
or
mov
inc
imul
idiv
add
retf
into
mov
push
popa
cmp
inc
loopne
(bad)
mov
jmp
ins
retf
pop
lods
pop
call
push
ret
enter
push
push
loopne
mov
ret
cmps
and
lods
add
or
inc
mov
add
popf
movs
fild
jb
mov
mov
iret
dec
fadd
lods
ficom
es
xor
scas
outs
fcom
cmc
sti
push
repz
(bad)
loope
inc
das
fild
mov
je
xchg
retf
sar
lahf
les
inc
int
hlt
or
sub
inc
(bad)
push
inc
jb
les
pop
jbe
xchg
add
xor
mov
aam
fild
fnstenv
sub
stc
sbb
sbb
into
aam
xchg
sbb
jmp
adc
push
sbb
pop
inc
sub
sub
fisub
gs
adc
jge
fisttp
cld
scas
cmp
icebp
jne
lock
sbb
mov
sbb
or
movs
adc
xlat
push
mov
add
jecxz
jmp
or
inc
pop
dec
xchg
mov
daa
xor
pop
in
mov
aad
scas
mov
ss
aaa
ja
jbe
movs
lahf
test
enter
jns
dec
dec
sar
xchg
add
mov
loope
jae
cmp
xlat
inc
jb
push
(bad)
shl
mov
jmp
push
pushf
data16
popa
lea
aaa
pop
pop
neg
jle
nop
xlat
stc
lock
ret
stos
mov
push
mov
xchg
dec
xchg
xor
out
mov
fs
stc
cmc
popf
inc
sbb
mov
fnstcw
das
push
jo
cmps
inc
dec
imul
add
or
in
dec
dec
arpl
cmps
leave
cmp
add
inc
ret
add
mov
push
imul
ins
xchg
cmp
out
iret
rcr
push
bound
fisttp
fcmovb
mov
imul
push
mov
cmc
fistp
rol
mov
in
jne
add
add
xchg
xchg
iret
inc
push
(bad)
sbb
add
or
mov
neg
and
je
sbb
(bad)
mov
in
push
jl
popf
cli
scas
jmp
scas
jno
pop
xor
mov
(bad)
sub
cld
mov
test
call
jg
inc
test
test
pop
jae
add
inc
je
jp
mov
js
jb
lods
bound
mov
adc
out
loop
pop
sub
mov
in
ins
pop
inc
sub
sbb
fnstenv
retf
inc
cmp
in
pushf
pop
adc
leave
mov
xchg
(bad)
lahf
out
pushf
cli
add
repz
push
push
and
call
pop
fwait
enter
mov
and
push
mov
iret
mov
add
jne
in
jge
jbe
pop
jl
ins
(bad)
add
or
jle
ret
cmp
fdiv
repz
adc
rcr
and
fistp
icebp
stc
add
fistp
out
jo
xchg
test
mov
sub
(bad)
xor
aam
mov
cmc
adc
cwde
ret
and
jg
cld
and
ret
leave
and
xchg
or
or
jle
(bad)
mov
sbb
sbb
mov
lea
or
jmp
inc
test
sysenter
pop
test
mov
mov
nop
mov
or
xchg
and
test
out
popf
sbb
push
jae
fwait
repz
inc
pop
push
fiadd
aam
xor
cld
cmc
sub
jne
ja
push
mov
mov
aas
jmp
rcl
push
sbb
stc
and
sbb
adc
and
inc
add
fisubr
jne
dec
dec
test
fild
mov
dec
mov
dec
pop
mov
ja
or
ins
jge
add
loopne
or
fstp
or
xlat
pop
cmp
add
cld
(bad)
jp
(bad)
cld
pop
inc
mov
jmp
test
pop
outs
cmp
and
fwait
sbb
hlt
out
retf
cmp
dec
xor
add
cmps
lock
lods
xor
xor
adc
(bad)
fstp
sbb
mov
sub
xchg
xchg
test
inc
cld
jmp
jmp
add
retf
fwait
in
pop
out
fdivr
xor
je
mov
mov
inc
adc
jle
sub
into
lock
cmps
or
test
inc
inc
int
dec
daa
cld
sub
jmp
nop
js
aaa
(bad)
outs
push
fsub
xchg
ret
es
call
mov
add
pop
mov
pop
cmp
push
jmp
jle
jbe
ret
mov
cmp
sbb
sbb
retf
and
pop
outs
repz
in
mov
push
cli
mov
pop
push
ins
xchg
xlat
cmps
inc
call
shl
sti
retf
mov
lock
or
into
add
mov
xor
test
int
sub
movs
fldln2
icebp
mov
xor
inc
fwait
(bad)
mov
rol
sub
jno
(bad)
in
cmp
mov
lahf
addr16
or
retf
mov
repz
add
jns
int3
and
and
sub
pop
rol
xchg
jnp
hlt
jmp
cwde
dec
push
mov
jae
add
pcmpeqb
jmp
mov
sahf
xor
xor
popa
jae
mov
shl
pop
neg
sub
aad
shl
out
cmp
enter
push
(bad)
jnp
sbb
inc
add
add
lock
mov
imul
cdq
push
adc
stos
fcmovne
fist
rcr
hlt
inc
sbb
push
ret
movs
lds
or
loop
xchg
loop
inc
mov
jecxz
mov
push
in
je
bound
add
mov
test
mov
js
popaw
das
(bad)
clc
repnz
mov
mov
xlat
push
into
or
aaa
dec
jge
mov
(bad)
sti
jnp
add
push
xchg
je
mov
push
or
fiadd
dec
fcmovne
pop
push
cld
mov
xor
in
repnz
xchg
leave
adc
adc
jmp
sbb
out
ror
jmp
mov
add
pusha
lods
sbb
cwde
(bad)
ins
aad
ss
push
add
cmp
mov
sbb
mov
push
dec
sub
cwde
dec
sbb
pushf
add
in
pop
adc
sub
mov
movs
shl
into
aaa
or
aam
mov
ins
cmovg
mov
outs
sub
dec
jge
xor
call
xchg
in
repz
and
cmp
mov
push
mov
dec
loopne
frstor
adc
and
scas
xchg
fidiv
fst
xchg
jne
out
push
mov
mov
shr
sub
push
jmp
in
inc
mov
into
mov
push
mov
xchg
pop
jp
inc
or
aas
dec
test
and
mov
cli
movs
in
ror
or
mov
push
test
call
ds
movs
push
push
repz
pop
loopne
mov
fxch
jno
cmps
aam
cmp
imul
cmps
push
push
adc
icebp
arpl
cmp
pushf
mov
popa
fimul
add
and
enter
cli
xor
ins
scas
jmp
stos
add
jge
xor
xchg
push
sbb
rcr
adc
mov
push
bound
aaa
jb
pop
cmp
dec
mov
push
in
xchg
xchg
cdq
rcr
fnsave
in
sbb
mov
mov
xlat
cmp
retf
mov
test
jmp
ret
cmc
and
seto
lods
fs
leave
(bad)
push
and
adc
test
jno
sub
sbb
addr16
movs
mov
mov
mov
rcl
add
pusha
std
cdq
and
cld
mov
adc
fcom
fidivr
xor
ins
(bad)
push
neg
add
mov
imul
inc
sub
pusha
bound
mov
dec
gs
loope
lods
sub
(bad)
je
in
(bad)
jbe
jae
mov
arpl
test
pop
cdq
jno
pop
std
mov
lods
scas
out
rcr
aaa
fdivrp
test
in
movs
retf
or
leave
or
xchg
mov
scas
test
and
add
inc
push
out
add
adc
sub
mov
das
sbb
outs
arpl
sbb
clc
aas
add
sahf
(bad)
leave
addr16
mov
hlt
pop
xchg
lds
cdq
cmps
shl
popa
mov
arpl
movs
mov
test
or
popa
jb
push
pop
adc
jno
jno
(bad)
and
ret
fidiv
(bad)
mov
lods
das
jge
add
push
push
xchg
inc
cmp
pop
test
pop
jo
into
xor
dec
repnz
add
mov
mov
fwait
push
or
cmps
mov
dec
add
mov
xchg
push
jecxz
pushf
inc
fmul
iret
test
dec
push
dec
pop
je
fiadd
clc
mov
enter
push
mov
cdq
inc
fwait
dec
xchg
sub
mov
ins
xchg
ds
mov
in
dec
sbb
cmc
pushf
out
ss
push
push
jnp
test
popa
inc
enter
ja
push
push
mov
mov
loopne
cld
push
clc
pop
cmp
jmp
push
mov
cld
ds
sub
call
add
loopne
sub
mov
ja
out
call
jo
dec
and
(bad)
and
mov
cmps
cmps
sbb
das
data16
and
icebp
inc
push
ror
mov
xchg
aaa
pop
rcr
shl
jmp
push
sbb
xchg
adc
jno
dec
gs
mov
xchg
push
jp
fisub
test
ret
add
and
aas
inc
or
and
mov
cmps
in
and
mov
mov
jle
dec
fimul
loopne
jns
jl
push
retf
xchg
jmp
dec
cmps
fwait
dec
add
cmp
push
fistp
fist
jmp
jmp
sub
add
les
fldenv
pusha
mov
out
(bad)
fiadd
xlat
mov
fnstcw
xor
jle
js
nop
add
retf
(bad)
stc
std
push
retf
outs
mov
idiv
jl
and
add
pop
lea
hlt
ins
in
cwde
bound
les
mov
je
push
movs
push
push
bound
fdivr
aam
repnz
out
sar
loope
test
sbb
cmp
rol
fcmovbe
stos
inc
loopne
retf
pop
stos
fnstenv
pop
dec
inc
adc
loop
neg
xchg
adc
in
test
fistp
mov
scas
aas
ja
dec
sbb
outs
xchg
jge
or
in
sub
ja
cld
jnp
mov
mov
inc
lea
aaa
shl
mov
in
xlat
inc
ins
psrlw
inc
dec
hlt
jns
(bad)
iret
lock
and
pop
mov
lock
ss
(bad)
sbb
add
push
loope
shr
jo
aad
loopne
sbb
sub
inc
sub
loope
pop
xchg
push
cli
jne
hlt
ins
push
mov
cmp
dec
and
stos
jnp
mov
mov
aas
data16
jne
cwde
mov
mov
rcl
test
out
lods
aam
repnz
inc
lea
aas
mov
adc
push
(bad)
bound
push
xor
jmp
icebp
div
sub
jmp
jae
leave
lods
mov
push
in
test
mov
dec
ret
cmp
loopne
pop
js
inc
ins
scas
outs
sbb
(bad)
scas
mov
pushf
int
(bad)
cmc
call
aas
mov
mov
jmp
sbb
int
dec
mov
loop
icebp
inc
in
or
sbb
out
and
xchg
data16
xchg
out
enter
pop
imul
test
xchg
mov
push
icebp
push
retf
std
pushf
cmp
icebp
cmps
xor
or
cmc
push
inc
sbb
push
dec
ror
mov
xor
mov
pushf
adc
div
xor
add
mov
sbb
sbb
xor
xchg
neg
into
xchg
xchg
mov
loope
cmp
jnp
(bad)
aad
dec
mov
and
cdq
sbb
ins
cmp
ins
push
xor
sti
jb
fcom
pop
push
sub
fcom
sub
inc
xchg
jp
mov
int
leave
je
mov
fadd
push
int3
rcl
xlat
cs
stc
jmp
mov
les
call
enter
cmc
ss
sbb
jmp
(bad)
gs
add
fcmovu
and
jne
jl
jmp
cwde
add
nop
jl
(bad)
mov
xor
xchg
retf
jo
sar
loop
out
mov
in
or
add
mov
outs
in
aad
inc
loop
cli
sbb
pop
rcr
and
icebp
jbe
mov
test
fiadd
enter
hlt
gs
cli
(bad)
sub
test
test
mov
and
or
iret
(bad)
movs
mov
movs
pop
(bad)
cmps
jbe
mov
pop
rol
xchg
jmp
(bad)
int
pop
inc
clc
rcr
(bad)
pushf
xor
lods
xchg
int
pop
pop
mov
mov
cmp
jae
iret
jno
cmp
jbe
push
dec
sar
lock
xchg
nop
xchg
inc
push
loop
enter
xchg
add
and
push
clc
pop
xchg
push
out
mov
jmp
das
(bad)
sub
mov
add
xor
sub
ret
pop
stos
stos
push
movs
mov
xor
iret
pop
out
xchg
adc
sahf
cmp
mov
pop
or
enter
test
bound
pop
in
mov
push
icebp
xor
jge
shl
jl
adc
or
iret
not
(bad)
sbb
mov
push
sub
push
xor
lock
push
fwait
lahf
mov
inc
mov
mov
push
or
stos
push
push
mov
pop
inc
add
jge
das
sbb
loopne
mov
mov
repnz
int
jnp
add
rcr
jnp
jge
or
add
add
mov
mov
ins
and
daa
mov
inc
and
push
cmp
sbb
xor
nop
shr
mov
gs
ror
cmp
adc
aas
mov
inc
shr
aam
fidiv
sbb
mov
or
cmp
jo
cmps
cmps
les
ins
mov
lods
xchg
pop
sahf
xchg
mov
adc
xchg
aaa
dec
push
call
dec
call
test
push
leave
adc
push
movs
xor
sbb
out
jno
pop
psrlq
sbb
repnz
mov
mov
addr16
add
fist
mov
daa
int3
in
fbld
jecxz
pop
stc
(bad)
fild
ins
sbb
fdivr
xor
push
cmp
test
cmp
loop
pop
sbb
loope
cmp
scas
or
sub
dec
inc
stc
push
cmc
mov
loope
setp
pop
and
sub
popf
add
sub
cwde
or
dec
pop
clc
idiv
sbb
outs
and
mov
stc
ror
out
stos
cmp
jns
adc
adc
xor
(bad)
mov
movs
fs
mov
aad
mov
dec
in
fwait
and
in
pop
ror
mov
push
rcr
adc
(bad)
fdiv
pop
push
cmps
cmps
test
sub
jne
inc
bound
std
test
adc
je
adc
mov
sti
dec
rcl
scas
sti
fist
pop
xor
std
out
leave
retf
adc
inc
mov
xor
in
repz
in
lods
lock
push
and
sub
adc
repz
or
adc
sbb
dec
xchg
jl
push
push
call
dec
mov
xchg
mov
hlt
cmc
jns
mov
ret
push
mov
jae
mov
dec
ret
sub
in
aaa
leave
xor
popa
je
ins
popa
sbb
int3
cmp
push
sbb
int
test
mov
xor
mov
sbb
adc
inc
xchg
cs
js
fcmove
jmp
inc
and
jp
std
ja
nop
sahf
and
mov
add
sbb
or
mov
adc
pop
adc
add
sub
cmp
clc
cwde
inc
outs
mov
cmp
adc
push
sub
dec
in
push
scas
inc
mov
ins
mov
ins
jno
mov
fs
jbe
sbb
push
fs
add
inc
nop
(bad)
arpl
push
loop
lds
sbb
shr
mov
pop
mov
shl
lds
into
fisubr
push
loop
fsub
test
lods
cld
ret
mov
pop
mov
call
scas
push
or
pop
pushf
stc
scas
nop
mov
adc
sti
movs
mov
inc
pushf
outs
dec
call
shl
mov
dec
lds
stos
pushf
test
mov
stc
imul
cmp
(bad)
cmp
icebp
pop
pop
pushf
sub
daa
jl
mov
push
in
in
aad
push
and
call
lods
inc
test
test
jmp
hlt
clc
adc
into
fs
push
mov
popa
pcmpgtb
xchg
int
stos
mov
xchg
pusha
fmul
(bad)
(bad)
mov
xchg
out
loope
out
mov
and
xchg
xchg
fcomp
xor
in
mov
mov
nop
pushf
ret
test
xor
rcl
out
dec
call
bound
clc
lods
ja
outs
sahf
je
or
fidiv
xchg
or
jae
test
mov
push
shl
add
xchg
(bad)
xchg
or
pop
leavew
jbe
push
repnz
sub
or
mov
pop
hlt
add
fist
fs
pushf
inc
pop
icebp
retf
pop
push
mov
(bad)
push
xor
and
xor
jns
test
sub
sar
cmps
jge
ja
pop
adc
stos
movs
icebp
or
rcl
mov
xlat
lahf
hlt
sbb
and
movs
ja
push
test
add
fwait
xor
sub
ret
pop
mov
inc
test
and
inc
sub
mov
sbb
test
fwait
in
out
arpl
mov
addr16
shr
sub
inc
inc
pop
sbb
push
and
and
icebp
xchg
call
mov
xor
dec
add
adc
int3
pushf
pop
fst
xor
jle
out
adc
push
mov
mov
xlat
adc
icebp
or
pop
test
and
cwde
jl
mov
into
push
je
movs
std
pop
jae
pop
pop
adc
mov
push
(bad)
cwde
rcr
shl
jo
loopne
scas
loopne
jmp
nop
pop
fwait
mov
lock
or
mov
dec
xor
retf
imul
inc
dec
pop
pusha
push
cmp
loopne
enter
je
cli
lahf
scas
fistp
cmp
(bad)
outs
add
das
lahf
mov
test
call
dec
sbb
fsubr
add
movs
jle
xchg
adc
pop
ja
aas
jmp
(bad)
mov
xchg
cmp
mov
push
xlat
arpl
test
or
or
mov
jg
mov
or
mov
pop
push
mov
dec
pop
lds
lods
arpl
jne
pop
sub
or
cmp
int3
call
(bad)
xchg
std
lock
jmp
xor
lock
rol
fmul
cli
jne
cmp
or
xchg
btc
mov
cs
aam
or
adc
rol
dec
iret
jl
xchg
jbe
sti
jb
mov
mov
and
add
mov
push
ror
and
in
in
gs
hlt
mov
sbb
out
nop
mov
push
sub
fdiv
xchg
(bad)
call
sub
xlat
dec
jae
pop
ror
sbb
jecxz
mov
sub
test
mov
popa
jecxz
sahf
dec
ret
adc
ror
imul
mov
jmp
sub
mov
adc
fmul
xchg
jno
adc
or
pop
xor
jp
loopne
mov
mov
push
mov
push
pop
adc
xchg
sub
mov
jmp
or
imul
pop
std
neg
loope
mov
sti
add
ds
and
sbb
(bad)
aad
cld
xchg
jmp
int
sub
xor
inc
mov
push
cmp
jne
pushf
push
sbb
cmp
(bad)
jae
lock
test
jbe
push
movs
mov
push
inc
cmp
add
cdq
rcr
inc
js
fst
jp
ins
mov
aam
add
cs
xlat
int3
jb
jp
xchg
es
pop
sub
pop
mov
jnp
lea
popa
scas
mov
sub
xchg
in
push
jo
push
retf
xor
and
sahf
and
popa
mov
lock
push
jbe
dec
scas
js
cmps
dec
sub
mov
cmps
and
rcl
jne
adc
shl
mov
in
test
adc
ss
clc
sar
cmp
aam
add
(bad)
jp
cmp
cmc
push
cmp
fucomip
adc
mov
inc
xor
xor
mov
test
xchg
pop
test
stos
mov
scas
mov
outs
ins
fidiv
mov
popf
ss
adc
and
dec
inc
add
mov
push
xor
mov
xchg
sbb
movs
int3
inc
adc
mov
and
cmp
jl
gs
out
es
daa
fwait
das
out
mov
mov
sar
retf
fucomi
bound
add
pop
jge
dec
mov
ja
jmp
ins
cmps
out
mov
iret
cmp
ja
cmp
cmp
push
adc
pmaddwd
lds
inc
xchg
daa
repnz
or
inc
mov
sub
sbb
dec
xor
aam
out
clc
push
xor
movs
add
mov
aas
inc
ficomp
pop
retf
mov
dec
sub
(bad)
jl
xlat
fwait
push
dec
lods
sub
inc
adc
or
aam
mov
mov
pop
test
(bad)
mov
out
or
call
shr
movs
les
adc
xchg
popa
out
and
mov
jnp
push
mov
xor
jb
jmp
into
or
loope
inc
dec
enter
jb
push
pushf
sbb
inc
adc
cmp
sbb
scas
mov
cmp
push
or
sahf
aad
imul
mov
out
jns
dec
or
or
jne
lock
cwde
push
outs
js
push
push
and
mul
sub
jmp
pop
pop
and
dec
imul
(bad)
jno
in
dec
test
mov
hlt
jge
out
sbb
jns
pop
cwde
and
mov
xchg
inc
or
pop
imul
adc
and
out
cmc
(bad)
xor
fisttp
sub
mov
and
mov
or
adc
lock
cdq
jge
dec
xchg
nop
jne
(bad)
mov
xor
fiadd
cmp
push
stos
push
cmps
xchg
jmp
fsub
mov
push
mov
dec
gs
jl
jae
cmp
stos
dec
test
fcom
xchg
jbe
int
inc
push
or
cmp
lea
aaa
out
dec
and
in
repz
lahf
pop
cli
and
jg
loope
hlt
(bad)
lods
jge
call
dec
jno
out
in
inc
jmp
ins
jmp
mov
mov
jp
pop
ret
loop
add
jne
std
sub
adc
pusha
add
and
cmps
or
hlt
mov
adc
xchg
jae
jle
xchg
outs
xlat
fsubp
xor
hlt
call
das
hlt
jp
fdiv
popf
dec
jmp
jp
jecxz
out
cli
cmp
lahf
xchg
or
mov
jns
sbb
cmps
pop
mov
ja
xchg
or
outs
ins
push
addr16
nop
cmc
xlat
adc
gs
cwde
jle
jne
xor
pop
loope
out
and
fwait
pop
mov
shl
popf
dec
mov
shl
add
push
(bad)
sub
pop
adc
push
add
cmc
pop
fwait
stc
inc
out
or
data16
(bad)
mov
into
or
rol
sub
stos
ret
xor
fsub
mov
fild
aam
mov
jb
jecxz
out
out
push
bound
sub
ins
stos
sbb
clc
jne
cli
(bad)
loopne
mov
(bad)
pop
jno
inc
mov
stos
dec
das
mov
and
out
lea
mov
int
or
popf
adc
ficomp
and
mov
pop
pop
scas
jns
mov
int3
retf
mov
fwait
or
mov
pop
pop
sub
add
sub
add
jae
ins
pop
arpl
inc
jno
lods
adc
jmp
pushf
or
pop
scas
cmps
pop
pop
jle
mov
imul
jb
and
popa
rcr
ss
cmp
(bad)
fwait
mov
nop
xchg
mov
or
addr16
jmp
xor
cmp
adc
mov
movs
int3
ins
jecxz
jg
push
inc
fs
pop
inc
mov
imul
int3
push
rcr
mov
jnp
add
jb
and
inc
es
fwait
neg
stos
xor
jae
xchg
lahf
push
test
or
rcr
and
das
jmp
mov
retf
or
rol
xchg
shl
js
jne
cdq
pusha
sbb
jns
mov
lea
mov
jmp
or
or
cmp
in
retf
out
inc
gs
push
sahf
jmp
xor
xchg
mov
cmp
or
pop
lods
push
cwde
arpl
es
push
dec
cwde
div
cmp
sbb
push
jne
xchg
cmp
add
add
pop
in
cmps
mov
jecxz
inc
or
mov
inc
aad
lds
push
jmp
pop
into
test
in
and
data16
push
pop
fucomi
add
push
fdiv
inc
vpaddsw
xor
dec
jns
pop
jo
loopne
gs
pop
xchg
pop
mov
ins
retf
jb
mov
stc
cwde
mov
rcr
sub
pushf
xchg
std
mov
add
std
pusha
mov
sbb
js
pusha
push
or
add
fisttp
into
lds
mov
xchg
inc
arpl
adc
shl
shl
mov
arpl
push
out
sub
sbb
or
inc
imul
mov
mov
jne
mul
pop
mov
dec
push
loope
(bad)
sbb
jmp
imul
and
dec
int
and
add
dec
cmps
jno
loopne
jne
in
fucom
mov
mov
and
pop
jl
pop
(bad)
jo
or
mov
add
mov
cmp
pop
(bad)
jnp
rcl
test
stc
retf
fild
dec
stc
ret
cmps
add
repz
adc
cli
out
adc
mov
mov
in
outs
push
push
shl
in
popf
sahf
into
ins
xchg
add
popa
xchg
adc
inc
pop
in
mov
ss
mov
scas
mov
mov
test
mov
adc
in
mov
in
jmp
jno
xchg
movs
jno
imul
fwait
imul
leave
xchg
mov
retf
mov
add
jg
sub
push
and
sub
inc
clc
cmc
jmp
sub
repz
mov
xor
cmp
loop
push
ja
popf
sbb
pop
lods
lock
lock
push
lea
cmps
(bad)
sahf
adc
push
inc
pop
add
stos
or
fnstenv
jge
and
daa
out
jge
jae
push
les
pop
xchg
sub
out
outs
jo
sub
dec
sbb
and
and
cwde
or
stos
and
cld
mov
dec
enter
jge
loope
ret
add
je
dec
sub
loope
jns
cmp
sub
dec
test
push
stos
idiv
dec
jnp
das
cmp
pusha
pop
test
dec
in
xchg
mov
add
cli
add
cmp
sub
rsm
sub
lahf
outs
dec
pop
(bad)
rol
push
pusha
fadd
hlt
pop
iret
adc
push
and
(bad)
sti
mov
mov
addr16
(bad)
xchg
in
sti
test
inc
mov
test
inc
jb
adc
(bad)
ds
int
(bad)
xchg
push
xchg
pop
xlat
adc
cmp
neg
xchg
dec
pop
mov
mov
bound
xchg
in
dec
xchg
cmp
push
fstp
fild
cmc
cld
cmp
and
fs
mov
shr
inc
xchg
(bad)
les
sbb
xchg
std
in
sub
jo
or
jg
dec
(bad)
lods
fistp
data16
rcr
mov
es
repz
mov
and
jnp
jge
mov
mov
loope
mov
test
je
push
fs
and
fadd
push
mov
mov
test
(bad)
push
pusha
ja
push
mov
cmp
fsubrp
mov
push
mov
mov
icebp
fiadd
leave
gs
pop
(bad)
push
inc
pop
adc
xor
push
fiadd
call
movs
pop
or
mov
outs
(bad)
add
les
ds
cmp
dec
stos
mov
mov
ins
xchg
enter
push
mov
test
cmp
adc
pop
imul
cmp
addr16
pop
sub
(bad)
mov
and
in
outs
rcl
pop
mov
popf
aaa
add
addr16
pop
push
das
ret
mov
dec
add
leave
inc
lods
xchg
and
lds
mov
push
outs
pop
adc
xchg
mov
lods
mov
out
sbb
sub
(bad)
cli
dec
imul
retf
imul
stos
xor
sbb
mov
sub
sar
mov
retf
sbb
(bad)
(bad)
sub
ins
dec
(bad)
push
jo
clc
pop
jo
je
fidivr
add
mov
fadd
js
dec
jmp
mov
cwde
or
cwde
sti
push
push
mov
adc
js
iret
arpl
in
jge
cld
jo
ins
jg
inc
popa
xchg
fs
sbb
ja
cmp
je
jbe
and
dec
mov
fadd
pusha
and
mov
cli
ret
stos
dec
dec
xlat
(bad)
adc
in
xlat
popa
mov
es
into
scas
(bad)
sti
mov
test
mov
into
sbb
xchg
lods
ficomp
js
jp
cmp
jne
xchg
test
inc
pop
pop
cmp
and
enter
jl
dec
push
aad
js
xchg
cmp
dec
add
push
ret
add
int3
jmp
inc
push
mov
adc
test
sbb
mov
sbb
sbb
pop
out
push
sbb
cmova
cmp
and
or
pop
out
push
xor
mov
(bad)
movs
mov
mov
xor
fs
and
test
test
mov
in
cmc
mov
or
or
sub
jo
test
push
mov
mov
push
inc
rol
xor
out
mov
sub
cmps
call
sub
jl
aam
push
and
mov
ja
and
leave
outs
push
aaa
out
addr16
enter
push
mov
or
mov
out
sahf
mov
jbe
sub
(bad)
dec
cmps
push
pop
mov
inc
imul
ss
loop
(bad)
jns
iret
std
cld
loope
inc
dec
jl
fstp
ss
pop
cmp
lods
jp
mov
jns
fistp
into
inc
xor
out
push
ins
xchg
and
add
and
out
in
add
fisubr
dec
jp
bnd
ins
jne
loop
sbb
loop
dec
(bad)
aas
(bad)
and
mov
and
and
adc
push
push
adc
les
pushf
in
mov
in
sub
bound
adc
into
push
cmp
cmp
cli
scas
out
imul
push
in
les
rcl
mov
call
pop
fs
xor
js
(bad)
mov
cdq
xchg
sti
fst
je
add
iret
(bad)
fmul
mov
ret
sub
in
or
(bad)
add
shl
js
cmp
fisub
rcl
jecxz
jo
sub
aaa
es
xchg
div
cwde
sbb
jecxz
mov
fild
xor
ret
dec
call
aam
sar
shr
xchg
xchg
inc
in
ja
lahf
gs
xchg
outs
(bad)
jne
mov
push
in
pop
pop
mov
pusha
inc
mov
jmp
inc
lock
lea
pop
jb
cmp
mov
data16
mov
sub
xor
iret
iret
fcmovb
scas
mov
(bad)
repz
and
lahf
stos
rcl
(bad)
lds
mov
aam
retf
sbb
test
sub
mov
mov
xchg
(bad)
test
xchg
mov
or
mov
icebp
(bad)
loope
(bad)
pop
(bad)
push
jno
inc
scas
loopne
cdq
xor
adc
sahf
inc
test
adc
fsubrp
add
aas
dec
dec
push
bound
jae
imul
jecxz
stos
sbb
mov
mov
mov
and
add
mov
xchg
sbb
(bad)
push
mov
into
sub
mov
and
sbb
mov
test
test
mov
aam
push
mov
popa
test
cmps
jp
push
fist
xor
ds
or
and
inc
(bad)
mov
in
js
pop
jp
cmp
pop
inc
xor
fadd
scas
and
mov
ffreep
(bad)
stos
push
sahf
(bad)
int
fwait
imul
data16
(bad)
call
mov
test
lock
dec
nop
fld
cmp
xor
and
leave
xchg
scas
cwde
lahf
mov
and
mov
pop
add
and
into
jns
jmp
imul
add
(bad)
sub
or
mov
pop
jbe
retf
ins
jmp
xor
fstp
gs
scas
inc
add
scas
pop
xlat
in
push
retf
ror
loopne
push
or
jmp
push
js
inc
movs
push
sub
sbb
sbb
data16
push
cmps
push
ins
repnz
mov
imul
dec
and
mov
add
xchg
mov
and
and
cld
fiadd
scas
(bad)
mov
pop
sbb
mov
jmp
loopne
cmps
jp
jp
adc
inc
adc
mov
cmp
arpl
jecxz
retf
mov
leave
or
arpl
out
fnstcw
jns
lock
mov
jnp
test
ret
je
inc
ja
cdq
pop
js
push
lds
mov
mov
sub
add
jmp
shl
inc
shr
push
popa
cmps
sub
jp
mov
pop
inc
arpl
jbe
and
xlat
mov
outs
int3
outs
aas
sbb
xchg
out
xchg
pusha
adc
jmp
inc
cmp
sbb
or
dec
imul
mov
cmps
push
inc
test
xchg
mov
int3
imul
fdiv
or
xchg
sar
mov
dec
dec
mov
push
mov
call
or
cdq
es
or
push
inc
in
sbb
cwde
adc
push
mov
enter
pop
xor
test
ins
fcom
sbb
aam
arpl
sar
stc
lods
mov
iret
pop
inc
xchg
jp
lods
addr16
jb
mov
sbb
ficom
or
lock
mov
popa
sbb
cmp
push
ffree
repnz
pop
cld
(bad)
(bad)
pop
pop
and
mov
jp
cld
mov
inc
(bad)
iret
xchg
sbb
cld
neg
xlat
rcr
adc
dec
mov
dec
int
jmp
add
ror
out
jnp
push
mov
adc
ds
or
in
push
iret
or
adc
inc
in
sahf
movs
jae
push
mov
aaa
xchg
fsubr
add
pop
mov
add
xor
outs
test
sbb
retf
push
cmp
add
outs
sti
cmp
cmp
mov
push
mov
mov
or
mov
jne
out
enter
nop
cmp
pop
test
cmp
xor
retf
out
fs
fdivr
inc
push
xchg
retf
test
jne
sub
dec
push
sub
fwait
test
dec
clc
je
popa
and
(bad)
cli
scas
icebp
test
pop
scas
jmp
mov
imul
fwait
or
fiadd
cwde
fwait
lods
test
std
push
fdiv
xor
adc
fcmovu
and
mov
scas
xchg
mov
in
sub
fidivr
bound
and
outs
fiadd
test
imul
cwde
pop
dec
lods
stos
adc
in
jge
es
mov
pop
cs
pop
dec
out
xchg
sar
retf
out
push
push
call
pop
sub
mov
repz
cmp
in
out
cmp
cmp
test
mov
pop
jbe
inc
bound
and
bound
test
mov
push
jno
xor
xor
inc
cmp
call
test
xchg
cwde
les
and
stos
jmp
mov
arpl
outs
pop
out
dec
mov
imul
inc
sbb
sahf
cs
ins
aas
add
jp
push
sbb
test
lods
popa
int3
sbb
xchg
mov
fdivr
mov
push
ins
aad
mov
mov
fistp
call
mov
mov
push
scas
push
cmp
addr16
scas
or
xchg
push
adc
add
data16
inc
aaa
dec
add
pop
pop
xchg
xlat
pop
jnp
gs
out
test
push
sub
mov
inc
fidiv
dec
ret
mov
mov
mov
inc
mov
xlat
clc
cld
cmp
scas
fcomip
rcl
jg
mov
xchg
scas
push
popf
ja
into
ret
imul
pop
jne
mov
xlat
pop
jnp
daa
or
neg
icebp
pop
sub
iret
push
ret
sbb
dec
out
dec
mov
retf
fldcw
and
daa
clc
cli
xchg
sbb
mov
inc
loope
loopne
pop
mov
adc
loopne
mov
into
leave
and
xchg
jns
popa
daa
cdq
push
and
push
(bad)
sbb
and
jmp
pusha
cmp
mov
dec
push
je
cdq
mov
sub
jge
out
mov
ror
jno
jnp
test
or
push
cmp
mov
hlt
loopne
fist
jmp
imul
sub
stos
in
mov
sbb
stos
pop
fiadd
mov
dec
in
pop
rcr
out
cmp
lock
mov
and
xchg
push
fnstcw
mov
inc
push
mov
jl
fistp
cdq
loope
dec
loopne
(bad)
ss
mov
sahf
rdtsc
mov
or
mov
pop
mov
cs
ficomp
mov
mov
sti
mov
jbe
pop
push
movs
add
sbb
cmp
mov
mov
or
int3
aad
fsubr
scas
dec
push
sbb
or
iret
dec
out
mov
mov
ret
ret
inc
(bad)
out
dec
daa
call
aam
pop
(bad)
push
pop
mov
rcl
mov
fwait
push
pop
sti
and
mov
(bad)
in
bound
dec
xor
dec
pop
pop
or
jbe
test
jo
hlt
push
dec
push
and
cli
add
xor
inc
sti
dec
lods
dec
sbb
out
jl
add
lahf
push
cmp
imul
jl
jo
adc
test
mov
cli
cmp
out
jne
fcmovnbe
(bad)
stc
dec
pop
cld
fadd
dec
mov
cli
xchg
int3
adc
mov
stos
(bad)
mov
lods
mov
jmp
add
scas
inc
jns
mov
or
ins
out
sbb
mov
(bad)
mov
mov
out
scas
std
cmpxchg8b
mov
inc
add
push
call
or
gs
mov
mov
and
leave
rol
and
fisubr
mov
dec
aam
retf
dec
jge
or
mov
mov
mov
in
mov
int3
dec
adc
nop
jo
das
rcr
sub
mov
or
scas
jbe
jb
and
adc
adc
lods
clc
jmp
inc
mov
mov
in
sbb
inc
cwde
cmp
in
and
out
fnstsw
mov
xor
retf
mov
cmp
sub
stos
or
jl
adc
xchg
(bad)
sub
sbb
add
sbb
adc
pusha
adc
sti
pop
popf
add
inc
clc
and
test
mov
outs
mov
dec
and
out
adc
retf
jp
jmp
xor
fistp
adc
cmp
adc
xchg
fs
xor
addr16
out
pop
and
push
push
adc
jmp
ret
test
fs
clc
sbb
fdivr
jge
and
mov
dec
sub
xchg
cmc
retf
shl
xor
sbb
in
fsubr
dec
ficom
sbb
ror
or
ret
test
leave
add
repz
and
fmul
xchg
lea
mov
aam
sti
stos
push
jo
jnp
sub
sub
adc
in
jg
popf
lea
cli
out
mov
jl
mov
sbb
pop
bound
popa
jp
add
retf
cdq
or
jecxz
rcr
dec
inc
lods
outs
outs
into
mov
frstor
mov
jbe
cli
mov
out
xor
in
enter
lods
mov
scas
movs
loope
std
leave
xor
call
push
cmp
mov
cwde
cdq
stos
aas
arpl
adc
inc
adc
and
mov
push
jnp
or
fwait
xor
lock
dec
fimul
sub
js
dec
mov
mov
(bad)
imul
icebp
sub
jmp
dec
popa
scas
not
push
jno
mov
daa
clc
fdiv
pop
ret
fmul
leave
(bad)
cld
mov
cmp
lods
rol
pushf
and
retf
adc
jecxz
xlat
dec
or
adc
lea
mov
mov
sbb
or
jae
cmp
hlt
scas
mov
sub
pop
add
adc
xchg
pop
inc
loop
std
clc
push
adc
dec
mov
sbb
scas
hlt
shl
scas
adc
or
mov
xchg
adc
into
pop
mov
jecxz
jle
ret
sbb
imul
mov
add
mov
aam
jno
xlat
call
push
ds
dec
jno
fild
clc
mov
sub
movs
adc
bound
mov
das
scas
mov
mov
mov
pushf
dec
aad
(bad)
or
ret
xchg
aam
cmp
stos
test
jg
sahf
bound
lahf
inc
pushf
pushf
push
stc
mov
pop
add
pop
scas
jnp
rcl
push
and
mov
sub
fldcw
rcl
and
or
sbb
in
scas
jno
enter
push
jae
addr16
in
(bad)
jge
arpl
adc
enter
aas
ss
push
mov
popf
mov
jb
xor
das
cs
xchg
pop
hlt
es
ss
not
dec
out
ret
lahf
and
mov
scas
dec
rcr
adc
mov
adc
jmp
cld
mov
mov
sub
les
jmp
jl
fcom
fwait
push
das
adc
mov
ss
push
cmps
add
ja
in
inc
xchg
dec
or
inc
(bad)
ret
sahf
fnstenv
jbe
cmp
or
xor
aam
mov
sti
cmp
xchg
and
and
xor
jle
aas
shl
add
jge
cmp
pop
pop
jbe
or
pop
rcl
sub
into
int3
xchg
sahf
fidivr
push
fistp
imul
icebp
jbe
ss
inc
popf
int3
in
sub
push
sahf
inc
jl
mov
sub
or
jne
out
ret
mov
nop
push
popa
jns
mov
outs
mov
add
scas
and
mov
je
ds
xchg
shl
mov
xchg
cwde
ss
(bad)
cli
push
mov
movs
arpl
retf
sub
ds
cwde
out
push
push
adc
xchg
mov
cwde
js
or
dec
fstp
das
mov
pop
cli
pop
out
xor
xchg
jmp
push
sbb
sar
into
dec
mov
mov
out
cld
jg
das
cmp
les
test
adc
mov
mov
dec
and
dec
adc
jbe
ins
mov
outs
mov
cmp
rcl
call
xlat
call
sub
aad
inc
in
addr16
ins
mov
call
stos
(bad)
aas
scas
loop
push
lods
enter
rol
test
mov
push
adc
in
mov
and
je
dec
test
out
mov
test
or
nop
jecxz
test
fistp
mov
jne
(bad)
repnz
in
mov
cmp
jmp
arpl
pushf
inc
cmp
fisubr
add
pop
xor
sub
jne
cld
jecxz
rcr
pop
retf
mov
xchg
cli
mov
cmp
mov
jmp
xchg
test
ja
jecxz
je
xor
scas
pop
sbb
aas
xchg
test
push
cmove
std
sbb
(bad)
cmc
xor
pusha
dec
mov
aam
sub
push
sbb
cmp
rcr
nop
ret
retf
icebp
xchg
repnz
int3
jmp
imul
inc
xchg
push
cdq
jae
sub
jbe
mov
pop
adc
lahf
jne
inc
enter
push
ja
jecxz
movs
inc
imul
xor
push
cmps
inc
adc
cmc
add
push
push
cld
in
mov
fmul
jmp
or
mov
xor
pop
or
pusha
out
int3
mov
cmp
inc
fs
xchg
test
add
stos
add
out
sub
sub
clc
cld
cmp
xor
stos
pusha
fstp
jecxz
imul
aam
mov
repnz
in
setb
add
nop
rcr
mov
out
sub
addr16
xchg
outs
sar
loop
sub
sbb
test
dec
(bad)
in
(bad)
push
dec
aad
cdq
stos
dec
out
outs
sti
sub
xor
test
sub
call
retf
fsub
mov
pop
add
and
jge
int3
mov
pop
push
das
sbb
push
mov
(bad)
xchg
cmp
icebp
sbb
data16
test
test
sub
cmp
lods
jae
sti
iret
nop
or
stc
sbb
pop
ss
mov
repz
sub
inc
(bad)
retf
aad
jae
jnp
mov
sbb
or
shl
push
imul
popa
xchg
xor
sbb
sbb
jns
xor
retf
push
push
mov
fistp
mov
xchg
hlt
cmp
fadd
into
scas
lock
inc
dec
sbb
cwde
lahf
mov
pop
xchg
packuswb
fisttp
adc
push
ror
sbb
mul
mov
push
pop
lock
cmps
pop
mov
sti
sbb
mov
dec
add
inc
je
adc
and
push
adc
mov
mov
shl
repnz
push
arpl
test
(bad)
ins
add
jmp
imul
dec
add
arpl
rcr
push
sbb
bsr
or
sbb
lahf
cmp
jmp
test
cli
cmp
ss
(bad)
add
inc
leave
imul
adc
aad
inc
sbb
popf
call
cli
push
mov
mov
inc
sub
imul
add
gs
ret
daa
or
jg
ret
xchg
imul
push
xchg
mov
pop
mov
jle
lods
ror
int
sub
mov
add
cmc
pop
cli
xchg
leave
je
fxam
mov
xlat
jae
test
inc
add
push
xchg
pop
pushf
jecxz
mov
or
shl
test
pusha
mov
dec
mov
xor
add
cdq
dec
push
das
fs
ret
dec
lahf
out
push
inc
sub
int
call
scas
test
mov
repnz
in
hlt
push
ja
sti
and
pop
xchg
icebp
stos
dec
test
mov
sbb
xchg
jbe
je
nop
addr16
dec
(bad)
cs
inc
in
(bad)
jecxz
mov
mov
adc
div
mov
push
pop
and
adc
fcom
xor
(bad)
out
jp
or
out
ret
mov
imul
movs
or
ja
stos
retf
cmp
call
mov
div
(bad)
push
clc
adc
sbb
jns
or
imul
outs
push
jle
push
fild
test
lds
push
arpl
cmp
stos
or
inc
rcl
int
sub
cmp
fnstenv
cmc
and
push
inc
cld
mov
sbb
mov
jp
or
stos
movs
push
xor
rol
xchg
test
and
test
mov
retf
mov
push
xor
into
mov
cdq
fcom
out
(bad)
jo
hlt
mov
and
mov
mov
ret
mov
inc
and
pop
inc
imul
sbb
fs
mov
fcomp
jmp
retf
pop
sbb
inc
call
jno
sbb
inc
mov
scas
into
sahf
xchg
cmp
and
dec
xor
and
out
mov
out
out
jne
pop
dec
mov
or
xor
jo
movs
xor
hlt
inc
or
shl
mov
sti
jno
or
mov
mov
dec
mov
mov
(bad)
push
hlt
jmp
and
pusha
pushf
mov
es
test
dec
xchg
test
cld
ficom
sub
push
inc
push
jbe
popf
pop
cld
icebp
in
cmps
test
cmp
or
sbb
sbb
fwait
pop
(bad)
cdq
ins
or
or
sbb
rol
jmp
ja
cli
std
push
fsub
aam
mov
push
jne
or
adc
mov
sbb
lods
cmp
xor
cmp
mov
(bad)
popa
xchg
adc
dec
xchg
(bad)
mov
and
adc
leave
sbb
daa
cmps
sbb
adc
pop
sub
dec
addr16
ins
popa
mov
icebp
fcmovnu
jge
out
inc
gs
pop
pop
retf
popa
jge
cmp
ja
mov
lock
sbb
jmp
jnp
sbb
mov
in
(bad)
test
add
loop
icebp
les
mov
arpl
xchg
rcl
popa
and
daa
cs
movs
ficomp
dec
add
ret
ja
sub
cmp
sub
and
jo
or
fs
inc
inc
xor
aaa
cmc
out
and
jg
and
mov
cwde
pop
cmp
stos
jae
jmp
push
jnp
mov
aam
mov
and
lock
and
daa
fdiv
popa
mov
repz
pushf
xchg
sbb
fadd
jo
aam
jecxz
pop
jp
mov
pop
or
pop
loopne
outs
mov
adc
jb
das
add
mov
mov
cmps
frndint
ja
push
add
adc
test
or
adc
or
dec
repnz
sbb
aad
out
jne
pop
jo
ret
xchg
jmp
sbb
adc
mov
and
int
fist
mov
stos
mov
stos
and
stos
les
and
jmp
sub
bound
test
test
(bad)
sub
mov
aas
in
or
cmp
fild
(bad)
xchg
xor
fst
xchg
shr
and
movs
shr
or
adc
pop
stos
xchg
clc
jmp
jge
xchg
pop
sbb
fsubr
push
in
xchg
sub
sbb
add
(bad)
cdq
pushf
into
add
push
sbb
mov
mulps
aad
add
pop
mov
mov
test
xor
xchg
retf
test
inc
cwde
sahf
scas
mov
cmp
(bad)
aaa
mov
dec
cdq
xor
add
mov
stos
jle
dec
push
cmc
js
in
test
fsubr
push
dec
sub
or
fs
inc
and
das
ret
pusha
outs
les
xor
adc
pop
stos
adc
or
add
mov
mov
cli
sub
jle
stos
(bad)
(bad)
int
add
push
cmp
xor
dec
dec
out
sbb
lock
shr
mov
xchg
adc
fs
stos
pop
aad
pop
dec
pop
and
bound
add
xchg
adc
imul
jl
lea
push
outs
rcr
sbb
ins
add
or
inc
test
mov
mov
mov
push
pop
test
cmp
and
jle
dec
adc
xor
pop
int
cmp
cmc
cmc
and
lods
fnsave
mov
adc
dec
mov
mov
aas
icebp
jmp
jecxz
or
shl
outs
ss
pop
int
aam
data16
push
push
push
sub
dec
fs
out
in
in
add
not
aas
ss
call
ins
lock
cmp
jmp
repnz
cmp
into
and
out
pop
outs
scas
repnz
sub
call
add
fidiv
mov
in
(bad)
mov
add
cs
pop
sbb
mov
cwde
mov
mov
and
push
bswap
adc
inc
jae
fdivp
das
inc
(bad)
out
rol
mov
inc
ins
pusha
out
pop
and
ret
mov
push
gs
mov
inc
and
std
scas
dec
xor
(bad)
imul
xchg
fmul
push
jbe
in
out
das
cld
add
mov
je
pop
sub
ins
cmp
push
mov
neg
es
pop
fisttp
push
sub
fst
push
jecxz
bound
imul
iret
dec
push
dec
pop
or
push
xchg
daa
jle
cmps
push
xchg
xor
in
adc
repz
cmp
out
(bad)
in
xor
sub
adc
ins
cmp
sbb
push
test
sub
adc
jno
iret
aad
mov
outs
sub
call
daa
js
clc
mov
mov
data16
imul
or
pop
inc
mov
jge
push
jo
ins
fbstp
or
xchg
push
mov
pop
(bad)
outs
out
cmp
push
cs
adc
dec
pop
adc
push
in
and
dec
cmp
ss
mov
js
xchg
or
add
fs
xor
cmp
and
cld
jns
pop
cmp
int
aas
mov
push
xchg
and
js
shl
leave
fwait
sub
test
mov
repnz
jecxz
(bad)
push
fimul
sub
inc
jle
pusha
clc
jmp
jne
adc
cwde
adc
cmp
ds
(bad)
imul
(bad)
(bad)
shl
and
pusha
mov
push
or
and
mov
stos
jo
stos
sar
int
xchg
bound
inc
mov
cld
rcr
push
ds
push
in
in
cdq
inc
lods
push
test
mov
pop
inc
cmp
fstp
outs
les
pop
lea
jge
mov
iret
mov
nop
mov
lock
xchg
xor
ins
inc
stos
clc
mov
cmp
sbb
mov
mov
inc
mov
xchg
inc
jbe
jnp
mov
dec
(bad)
xchg
xor
and
add
test
(bad)
aas
sub
push
inc
or
call
sub
and
or
mov
pop
int
lds
in
dec
xchg
mov
(bad)
mov
(bad)
push
outs
cmps
rcr
jnp
cmp
mov
test
fucomi
scas
loop
push
jmp
jle
nop
repz
add
xlat
jle
cld
and
push
mov
xchg
rep
and
into
fs
cmp
xchg
test
mov
mov
mov
pop
fidivr
leave
mov
sub
inc
adc
and
stos
pop
jecxz
ficomp
pushf
lods
jae
mov
dec
fs
mov
and
sub
les
pop
adc
je
mov
inc
and
jae
inc
nop
shr
stc
mov
xchg
rol
stos
inc
push
and
mov
xor
sub
dec
stc
movs
cs
daa
mov
mov
adc
test
(bad)
mov
inc
call
inc
mov
jbe
cmp
sahf
xor
xor
dec
xor
dec
leave
add
call
mov
xor
(bad)
fistp
sub
jecxz
add
sbb
test
lock
int
aas
pop
and
jb
and
lahf
jl
xchg
mov
mov
add
sbb
add
test
xchg
jae
or
push
xor
jno
fsub
inc
cwde
mov
mov
inc
adc
xor
fild
jp
pop
xor
dec
out
and
pop
stos
cmps
dec
aam
sbb
loopne
or
or
stc
xchg
leave
je
bound
retf
and
shl
out
retf
(bad)
mov
adc
inc
into
adc
scas
cmps
in
test
sbb
push
ret
xor
enter
nop
daa
lods
cs
shl
cmp
xor
mov
ja
sbb
xchg
pop
mov
cmps
mov
dec
cdq
or
adc
add
adc
jo
retf
or
bound
or
dec
out
mov
iret
cmc
mov
dec
xchg
jb
jmp
mov
popa
jmp
mov
pop
adc
out
jecxz
xchg
jns
into
sub
pop
rol
test
push
cdq
int
loopne
mov
hlt
jmp
fbstp
mov
push
icebp
jl
(bad)
test
mov
or
fisub
std
jbe
pusha
cmp
mov
nop
dec
in
fdivr
push
daa
push
sub
inc
icebp
(bad)
adc
in
sbb
jb
aad
popa
jle
jmp
jecxz
cmp
pop
inc
sub
sar
cmp
fwait
jb
daa
shl
mov
jecxz
dec
mov
inc
jbe
cmp
in
pop
repz
pop
or
cmps
(bad)
mov
jl
fmul
add
sub
mov
sub
in
jle
sub
jecxz
in
push
cmp
(bad)
ret
pop
data16
jo
movs
sbb
mov
mov
ds
ss
mov
lods
push
in
loope
jmp
ds
ja
dec
nop
and
dec
(bad)
adc
push
sub
push
mov
mov
xchg
(bad)
out
mov
fadd
xor
mov
outs
into
adc
mov
jb
int3
xchg
out
sub
sti
stc
cmp
inc
lods
mov
and
ja
push
sbb
les
out
test
adc
mov
ret
add
retf
jle
fstp
mov
daa
add
sbb
repnz
push
ret
push
mov
mov
inc
fidiv
push
mov
push
and
addr16
test
dec
and
sub
dec
(bad)
fidivr
stc
mov
jl
mov
pop
xchg
mov
addr16
cmc
inc
(bad)
scas
push
pop
jnp
mov
jge
xor
fiadd
pop
icebp
stos
inc
jno
jmp
int
jg
fdivr
xchg
mov
jmp
fs
jg
hlt
aas
jg
lds
js
js
scas
mov
out
lods
push
xchg
push
enter
inc
(bad)
retf
dec
xchg
push
mov
and
pop
pushf
push
mov
inc
or
into
enter
sar
out
stos
clc
cmps
stos
std
pushf
rcl
lods
sub
aaa
popa
jp
mov
add
dec
fsub
nop
cdq
daa
dec
and
sbb
add
adc
and
je
sub
imul
popa
scas
int3
aam
scas
ins
stos
mov
mov
scas
fwait
mov
enter
call
iret
jmp
stos
mov
dec
jl
cmp
mov
leave
dec
push
jo
mov
test
dec
mov
add
dec
inc
nop
adc
shr
fs
sbb
mov
jmp
mov
adc
xchg
mov
xor
push
call
cld
sbb
jns
je
addr16
mov
outs
aam
pop
cmp
and
push
push
ret
cld
cld
mov
call
mov
arpl
rcr
aaa
mov
(bad)
fdivr
inc
ja
into
push
aas
and
adc
sbb
jmp
push
fbld
xor
fld
xor
clc
push
sbb
mov
arpl
add
fmul
sbb
das
mov
aam
mov
shr
push
in
sbb
mov
push
clc
mov
(bad)
adc
lock
scas
aaa
adc
push
and
mov
cmp
cmp
retf
push
mov
xor
push
pop
cld
pop
mov
add
jecxz
or
ret
xchg
(bad)
push
aaa
(bad)
mov
aaa
inc
dec
mov
popa
jle
adc
sub
rcr
cmc
imul
inc
popa
mov
ins
addr16
push
scas
xor
inc
cld
sbb
cmps
jp
mov
pop
call
in
mov
das
cmp
gs
push
sbb
xor
adc
stos
fwait
push
fld
test
xchg
cmps
cli
sahf
lahf
push
fs
ret
test
sub
repz
xor
mov
sub
mov
pop
pop
mov
cmp
xor
imul
cld
retf
pop
ds
jne
retf
movs
mov
int3
xchg
mov
and
call
loop
cmps
push
(bad)
xchg
jl
and
or
mov
mov
pop
xchg
and
scas
cld
inc
sbb
int
call
bound
dec
pop
mov
paddsw
sbb
dec
xchg
ja
aaa
add
popa
or
(bad)
das
mul
fistp
std
rcr
pop
in
lahf
imul
popa
mov
inc
lock
stos
retf
jp
xchg
jns
imul
(bad)
xchg
push
popa
mov
push
xor
enter
popa
jnp
out
push
call
inc
es
push
jnp
adc
imul
outs
ds
loope
jmp
mov
sahf
xchg
push
fbstp
ds
xchg
sar
sti
mov
repz
mov
mov
das
jb
stc
shr
(bad)
out
pop
and
cmps
sbb
add
push
jg
mov
push
push
loopne
add
inc
push
push
fisub
ret
loope
pop
mov
aam
mov
aaa
pop
cwde
add
adc
dec
mov
jo
adc
or
sbb
not
bound
iret
mov
sti
and
js
mov
sbb
mov
mov
aad
xchg
or
sub
dec
fadd
pop
pop
jle
push
add
ss
test
mov
ret
fsub
nop
mov
mov
mov
jne
mov
adc
fwait
out
daa
test
push
popa
loop
hlt
dec
pushf
sub
fisubr
push
dec
mov
adc
or
xchg
cld
into
sub
movs
imul
sub
arpl
mov
add
pop
call
push
sti
and
dec
jbe
jbe
pop
xor
loopne
adc
mov
jle
bnd
out
jge
fisttp
pop
cmp
mov
jb
cld
(bad)
mov
xor
push
cwde
dec
(bad)
leave
cli
sub
adc
mov
sub
pusha
push
hlt
loope
mov
inc
add
cwde
mov
dec
imul
lods
jo
xor
sub
sbb
lods
or
xchg
sbb
repnz
jle
dec
or
push
cmp
sbb
mov
sahf
xor
gs
jne
adc
loope
and
lea
out
addr16
fsub
sbb
or
shl
into
das
mov
push
fiadd
mov
sub
(bad)
add
push
aas
sbb
jae
fsubp
push
sbb
lds
jmp
mov
dec
push
mov
in
mov
into
sub
arpl
arpl
jb
xchg
jmp
je
repnz
imul
stos
jae
sbb
adc
out
jge
movs
sub
in
lea
rol
jle
std
ss
pushw
mov
mul
cmp
or
outs
ins
sub
movs
jg
out
jmp
(bad)
sbb
movs
and
jno
push
push
mov
xchg
xchg
xchg
mov
je
pop
jne
and
push
dec
fcomip
daa
sti
fs
stos
mov
inc
bound
call
jmp
xor
mov
xchg
dec
and
and
sbb
(bad)
mov
stc
cmp
pop
sbb
jb
sub
repz
stos
into
lahf
je
popa
(bad)
std
mov
test
sbb
jecxz
js
stos
pop
mov
push
js
xchg
leave
and
adc
pop
mov
cmp
cmp
into
dec
xchg
mov
sub
imul
sbb
jno
shl
or
jp
push
ja
into
jg
sar
xlat
xchg
retf
loopne
or
mov
inc
addr16
inc
dec
jnp
push
jb
cmp
xor
jmp
in
push
xor
popa
push
loop
and
mov
pop
shl
pop
shl
out
mov
lock
jecxz
add
or
js
leave
mov
mov
cmc
test
fcom
pop
and
sbb
fadd
gs
lock
add
pop
scas
and
out
stos
sub
adc
and
jb
jge
aaa
cmp
push
call
and
sub
push
push
pop
jae
repnz
(bad)
ds
in
sub
pushf
test
cmp
sub
out
adc
lods
icebp
pop
aad
imul
std
mov
sti
aad
lds
cmp
ins
or
inc
and
leave
out
out
sub
daa
pop
fadd
lock
mov
inc
pushf
(bad)
and
in
push
stos
nop
sub
xchg
or
xor
lea
mov
retf
rcr
sbb
std
imul
jge
popf
cmp
jp
jmp
dec
pop
jmp
jmp
sub
add
sub
jmp
nop
mov
sub
xchg
test
inc
mov
ins
xor
pop
arpl
ret
scas
sbb
dec
mov
leave
xchg
or
push
ffree
fnstcw
xlat
mov
xor
sti
cs
test
cmp
add
mov
ins
or
ss
xlat
or
cwde
fcomp
mov
ficomp
mov
mov
rcr
movs
jl
push
neg
std
jge
cmps
mov
sub
inc
addr16
ja
jae
jmp
cmps
and
arpl
retf
xor
addr16
aaa
push
scas
sub
inc
(bad)
pusha
and
adc
sbb
call
std
(bad)
dec
mov
mov
and
dec
mov
or
cmp
push
inc
add
dec
push
mov
cmp
ror
dec
jg
test
cmp
aas
test
aaa
(bad)
xchg
xchg
push
inc
xlat
xor
out
scas
popf
in
dec
jo
stos
push
adc
cs
xor
imul
push
mov
popa
jnp
cmp
push
push
xor
mov
xor
clc
retf
adc
sub
fld
mov
mov
mov
adc
add
pop
rol
in
pop
sbb
loope
les
jp
jae
xchg
pop
mov
(bad)
call
sub
dec
mov
out
aas
(bad)
pop
nop
jne
fwait
imul
ss
push
cld
push
mov
outs
sub
and
test
xchg
xchg
das
add
jno
push
stc
sysenter
jp
fstp
dec
jecxz
aam
add
mov
(bad)
pushf
rcl
ins
jo
mov
jnp
in
mov
inc
cwde
inc
fimul
mov
add
das
movs
jns
dec
mov
jb
mov
push
and
mov
mov
movs
jmp
fimul
imul
ret
xchg
xchg
stos
into
pop
aaa
mov
and
lock
add
das
lock
and
xor
mov
retf
fcmovne
inc
xor
jmp
jecxz
push
mov
sub
push
sub
stos
(bad)
std
xor
pop
mov
call
in
test
movs
fidiv
push
jg
cdq
leave
cmp
ror
jl
pop
repz
dec
and
cld
mov
mov
fiadd
push
inc
mov
call
jmp
adc
xor
(bad)
xor
test
(bad)
cld
cmp
adc
xor
imul
push
xchg
out
fdiv
ins
push
movs
out
pop
retf
imul
push
aaa
je
and
(bad)
fistp
push
fnstcw
popa
ret
pop
add
inc
lods
push
cmps
or
mov
xor
sti
sbb
jmp
test
std
xor
push
dec
jecxz
daa
fimul
mov
sbb
retf
dec
and
and
fnsave
shl
and
cmp
idiv
cmp
nop
ficomp
and
loopne
or
push
cmp
or
push
dec
das
ret
xor
dec
dec
inc
mov
inc
push
(bad)
dec
push
sar
(bad)
jle
sbb
ds
les
jb
adc
fld
ins
push
test
xchg
lock
sbb
jae
xchg
lahf
mov
dec
pop
adc
test
leave
daa
mov
add
sub
jae
adc
inc
jmp
inc
sub
cmp
pop
mov
cld
cmps
mov
or
test
aaa
or
loop
test
sbb
imul
adc
cmp
div
sub
dec
push
ja
loopne
mov
addr16
dec
pop
scas
fimul
mov
pop
push
js
fnstsw
das
ss
push
call
arpl
scas
(bad)
push
sti
xchg
xor
ja
xchg
push
scas
fcomp
sahf
sub
dec
lock
and
add
xor
stos
xchg
pusha
push
and
sbb
aam
cmc
dec
xor
jl
bound
call
inc
fcom
in
inc
fwait
lahf
repz
or
jnp
mov
push
shr
jle
adc
mov
fdivr
dec
mov
adc
fstp
addr16
popf
adc
cmp
in
sub
jno
gs
pop
inc
movs
inc
mov
mov
push
jae
js
or
pop
bound
push
xchg
mov
in
push
mov
ror
push
lods
and
jl
jl
inc
stos
daa
and
aad
pushf
jo
repnz
xchg
mov
pop
data16
push
lea
fisubr
out
xchg
xchg
jle
std
adc
mov
cmp
fsubp
cld
popa
mov
lds
mov
mov
and
shr
inc
lea
add
int3
ins
scas
or
lahf
mov
mov
movs
inc
pop
lods
shl
push
pop
cmp
in
cmp
cmp
and
xor
sbb
or
ror
push
and
dec
pop
repz
stos
shl
sub
in
bound
jge
and
and
push
mov
push
push
adc
inc
cwde
cwde
dec
push
(bad)
jne
jge
sub
xchg
hlt
mov
fwait
xor
retf
push
add
imul
mov
adc
neg
sub
fwait
in
push
in
stos
loope
sub
push
mov
inc
cmp
inc
jle
jle
nop
pop
int3
and
or
jl
pusha
je
cmp
sub
fisttp
pop
icebp
rol
mov
retf
shl
pop
enter
sub
aad
test
imul
int
mov
push
jecxz
xor
sti
pushf
cmp
cmp
push
(bad)
or
xor
ins
pop
cmp
cmp
xor
je
mov
pop
cmp
jne
aam
call
lds
mov
adc
push
out
fstp
shl
dec
inc
sbb
pop
loope
imul
add
xchg
mov
addr16
fiadd
sub
addr16
loop
aaa
pushf
jae
and
adc
(bad)
cmc
xchg
and
dec
mov
jnp
push
add
imul
enter
ret
mov
pushf
lock
ror
out
arpl
xlat
shl
test
aaa
mov
int3
les
dec
sub
dec
nop
test
add
dec
(bad)
jmp
mov
jo
fcmovne
add
pop
sub
pop
in
in
iret
pop
pushf
rcr
arpl
push
pop
cs
sub
or
dec
jb
mov
push
inc
jb
ds
stos
mov
or
sub
or
cmc
inc
push
xchg
out
loopne
add
inc
mov
xchg
or
shl
loopne
aas
imul
stos
(bad)
push
cmp
mov
sbb
dec
stos
inc
fcom
nop
xor
sbb
fs
mov
sub
xor
mov
jb
sar
fst
ret
hlt
test
add
in
xchg
(bad)
and
dec
lods
sahf
jge
push
xchg
cmp
neg
jo
pop
int
std
sub
xor
mov
test
je
ins
(bad)
call
xchg
test
and
mov
outs
jb
dec
dec
cmp
push
(bad)
cmp
repnz
jne
leave
mov
push
cmp
pop
add
jl
pop
sub
bound
data16
stos
(bad)
into
mov
imul
xor
push
pop
jmp
mov
rcr
fwait
sbb
rcl
cmp
scas
dec
cwde
lock
or
or
sub
dec
xchg
aad
test
(bad)
shl
pop
fisttp
mov
jl
das
push
lea
bnd
jmp
(bad)
push
bound
dec
ss
shl
test
xor
add
movs
jbe
das
icebp
iret
ret
in
ins
adc
mov
mov
jb
push
xchg
sub
push
jbe
jb
dec
mov
repnz
pop
les
test
xchg
jecxz
mov
(bad)
repz
aaa
dec
xchg
jl
push
(bad)
xchg
jecxz
scas
dec
data16
pop
or
outs
cmp
sub
fisubr
mov
pop
aas
(bad)
dec
xchg
icebp
bound
push
hlt
adc
ss
ds
jp
xchg
das
xchg
pop
scas
cmp
jge
les
mov
ret
push
loop
test
mov
imul
cmp
xchg
pop
push
pushf
fild
retf
or
and
in
std
out
jle
or
add
fisttp
pop
aam
adc
or
inc
(bad)
mov
xor
ds
mov
or
sbb
sbb
pop
lds
aad
sub
jg
xor
mov
aas
push
inc
mov
cmp
fnsave
fsubp
cmp
in
ja
xchg
jecxz
rcr
mov
mov
or
adc
xchg
xchg
sahf
mov
pop
sti
inc
and
ja
mov
and
adc
and
pop
repnz
stc
xor
xchg
push
dec
leave
pop
or
fs
xor
ja
sub
lods
and
mov
xchg
push
js
lds
(bad)
lock
mov
adc
out
mov
ins
stos
cmp
mov
shl
cmp
or
dec
pop
push
lock
dec
ret
(bad)
xchg
aad
cld
sbb
pop
inc
cwde
retf
in
push
mov
pusha
xchg
sub
out
je
fsub
rcr
mov
out
jmp
stos
ja
fwait
imul
push
cmp
xlat
call
cmp
sbb
push
fdivr
int
stc
mul
fistp
(bad)
bound
(bad)
iret
jmp
push
test
ret
nop
adc
mov
jo
and
adc
push
jns
test
jmp
cli
movs
adc
or
sahf
idiv
jmp
cmps
xor
test
sti
adc
inc
pop
add
sahf
jbe
(bad)
hlt
fs
pop
mov
jae
sbb
adc
dec
mov
push
pop
fcmovb
(bad)
adc
cwde
not
jbe
jp
movs
rol
adc
push
xchg
push
sti
inc
mov
pop
xor
(bad)
adc
in
sbb
adc
into
pop
jmp
fwait
adc
dec
mov
xor
loope
cli
out
shl
add
pop
test
retf
inc
sub
sbb
lahf
jno
push
cdq
add
lods
scas
add
retf
out
dec
movs
jl
push
add
or
daa
mov
out
dec
sbb
pop
ret
push
loope
dec
sar
sbb
dec
pop
adc
mov
mov
(bad)
clc
cmps
cmp
pop
ds
mov
enter
out
sub
cmc
cli
mov
pop
es
mov
mov
add
add
int
push
jmp
sahf
imul
pop
adc
in
sub
mov
inc
dec
imul
outs
inc
push
mov
(bad)
sub
fadd
inc
mov
js
lods
in
xchg
push
mov
sub
mov
rcr
loope
cmc
dec
aaa
mov
xchg
je
dec
mov
sbb
jo
push
dec
test
sahf
and
not
fistp
ss
cli
or
enter
retf
pop
cmp
test
movs
dec
ins
cwde
arpl
fwait
ins
cmp
jno
(bad)
push
int
and
(bad)
aam
sub
sub
jo
push
adc
bound
and
cld
push
cwde
mov
icebp
nop
out
jnp
mov
push
jb
mov
jns
adc
enter
sub
shl
js
test
cmp
xor
adc
popa
ins
(bad)
popa
mov
cmp
(bad)
dec
xchg
stos
cld
push
xor
pop
adc
je
xchg
pop
jmp
mov
or
add
test
mov
movs
and
cdq
cwde
or
pop
adc
cs
shl
jl
adc
pop
cmp
mov
xor
add
jmp
mov
mov
dec
pop
xor
pop
inc
sar
mov
and
jle
out
pop
or
xor
aaa
das
ds
shl
adc
sub
cmps
(bad)
xchg
push
push
hlt
push
retf
jmp
fsubr
loop
xor
call
cmp
jo
mov
leave
inc
(bad)
jmp
pop
cmp
(bad)
repnz
xchg
add
jmp
fmul
push
sub
iretw
repnz
mov
ins
(bad)
test
push
mov
sbb
pop
jl
into
xchg
in
imul
push
and
jnp
fimul
pop
data16
and
fdiv
dec
jl
inc
repnz
sub
adc
test
enter
inc
iret
inc
mul
xor
or
inc
in
jne
cmp
mov
push
mov
pop
scas
loop
and
(bad)
sbb
mov
mov
aas
fwait
scas
js
fcmovnu
test
jno
call
or
bnd
fs
sub
icebp
sbb
pop
cmp
and
inc
cmp
xchg
add
lods
stos
inc
mov
xor
je
jmp
pop
push
adc
call
test
push
je
cmc
(bad)
fbld
cmp
(bad)
cwde
xchg
in
enter
nop
sub
icebp
jbe
mov
add
and
nop
pusha
stos
push
in
adc
adc
mov
and
mov
inc
popa
jp
ret
jg
cld
cmp
xlat
lock
and
adc
and
and
clc
pop
cmp
xor
inc
loop
addr16
and
inc
or
gs
adc
mov
in
inc
push
sbb
mov
cmp
ins
mov
daa
in
les
fs
or
jns
mov
ins
mov
daa
aad
addr16
jecxz
inc
pushf
push
mov
retf
xor
add
fwait
cmp
int
cmp
scas
sahf
out
xchg
jne
xor
popf
daa
(bad)
push
pop
rol
repnz
fst
dec
cmp
(bad)
(bad)
add
sbb
mov
cmp
ret
pop
ss
jle
std
fwait
sub
popf
movs
es
dec
(bad)
mov
xor
mov
xlat
mov
pop
stos
cmps
add
xor
sub
dec
movs
adc
shl
lea
and
ror
test
pushf
sbb
sbb
cmps
(bad)
xor
mov
sub
cmp
inc
push
inc
lds
sub
jo
loop
cmps
or
call
add
std
mov
aaa
push
cmp
or
jl
scas
neg
sub
dec
cmp
ror
out
test
mov
inc
jns
stc
das
inc
push
outs
dec
mov
jp
push
sub
add
int3
push
dec
(bad)
imul
aam
push
(bad)
ficomp
jo
xchg
push
inc
push
shl
and
jmp
mov
or
(bad)
fwait
movs
inc
pop
xchg
pop
xor
jmp
add
jno
push
int3
in
dec
jmp
mov
mov
cli
aas
cli
push
test
hlt
sbb
int3
sbb
adc
pop
inc
mov
jmp
sub
jmp
lods
jp
pop
jb
test
mov
mov
into
bound
cmc
sub
sub
pop
into
mov
fldenv
adc
fdivr
xchg
test
dec
cdq
in
in
jno
adc
test
and
sub
aas
into
mov
fsubr
xchg
inc
aam
jns
or
jbe
stc
in
sahf
addr16
pop
sbb
sub
mov
aam
dec
xchg
xchg
sahf
clc
int3
sahf
das
pop
out
mov
sub
pop
pop
hlt
xchg
ret
sub
pop
out
repnz
dec
pusha
test
pop
pop
pop
add
sbb
sub
dec
jp
mov
adc
js
mov
cmps
dec
outs
popf
rol
movs
mov
das
xchg
add
dec
and
pop
cmp
dec
and
ss
and
in
iret
push
inc
jb
sub
lahf
cmp
or
fs
inc
mov
and
jl
out
mov
into
in
ins
out
ins
ds
inc
xchg
scas
sti
rcr
cwde
pop
imul
aam
in
aam
push
std
(bad)
lds
pop
sti
mov
jle
cwde
sub
mov
bts
pop
int3
mov
mov
mov
imul
test
data16
mov
mov
add
xchg
mov
lods
aaa
loop
add
bound
cld
and
sub
inc
xlat
ja
pop
loopne
xchg
dec
pop
push
inc
jo
sub
push
neg
(bad)
out
dec
jno
jle
dec
xchg
cmp
and
push
int
pop
sbb
add
cmc
inc
dec
shl
ds
lods
sub
pushf
lods
ss
test
jns
and
and
add
xchg
es
pop
in
out
sub
lahf
aam
add
push
xor
dec
hlt
sbb
dec
pop
icebp
adc
adc
mov
push
xchg
jo
int
repnz
push
sbb
stos
shl
dec
xor
sub
cmp
lea
adc
xchg
int
push
test
data16
pop
je
sub
aad
retf
adc
pop
lock
rcl
sar
xchg
mov
sub
add
enter
pop
fcmove
sbb
int3
rcl
not
dec
push
mov
push
lods
ds
call
ins
mov
jg
sub
xor
ds
inc
and
enter
xchg
arpl
in
add
sbb
dec
push
xchg
mov
movs
mov
dec
mov
lea
sub
rcr
dec
lods
adc
mov
mov
lds
mov
jnp
or
test
retf
mov
movs
in
cmp
jg
cmp
lods
and
sbb
data16
push
call
mul
(bad)
mov
mov
and
pop
inc
stc
(bad)
cmp
push
fimul
jle
iret
adc
or
push
sbb
and
lock
xchg
cmp
popa
cli
fadd
and
mov
inc
js
push
in
jmp
push
mov
lods
inc
iret
sahf
jg
xchg
dec
mov
retf
shl
lods
jb
add
dec
dec
in
ror
ret
dec
fdiv
mulps
cmp
xchg
mov
adc
cwde
xchg
hlt
mov
jle
imul
or
fimul
arpl
adc
(bad)
jp
clc
jb
xchg
(bad)
and
xor
xchg
push
xor
mov
retf
jnp
adc
test
scas
test
cmp
inc
xor
cmp
lea
pop
int
imul
loop
(bad)
push
mov
repz
push
jb
add
mov
test
jns
cmp
push
clc
test
mov
jno
mov
add
test
jle
dec
jns
int
mov
push
sub
in
mov
les
(bad)
out
dec
dec
ror
xchg
add
pop
cmps
in
test
adc
icebp
jge
and
pop
sbb
leave
mov
or
dec
inc
mov
movs
hlt
imul
enter
mov
ror
data16
push
lock
sbb
out
jbe
sahf
inc
jb
jge
movs
scas
xchg
addr16
push
(bad)
test
inc
dec
into
add
mov
and
push
pop
test
movs
pop
jae
in
cmp
push
xor
cmps
lds
imul
stos
or
xchg
cmp
stc
in
dec
aaa
int
xor
mov
pop
sahf
and
inc
sbb
mov
js
pop
jne
in
push
jg
sub
sub
xchg
bound
imul
inc
test
out
out
shr
push
out
jae
sub
mov
jl
jmp
clc
xchg
xchg
cmps
sub
xchg
jno
mov
fstp
xchg
inc
sbb
mov
lods
aad
mov
and
cwde
popa
mov
fs
push
std
retf
bound
cwde
enter
xchg
loopne
in
imul
pop
pop
imul
adc
out
lea
stos
arpl
das
mov
cmp
add
loopne
push
lods
fs
shl
mov
sbb
add
pop
js
cmp
retf
mov
mov
js
pop
int
mov
shr
pop
test
or
es
mov
mov
pop
sahf
repz
jge
int
in
and
out
cmp
cld
ja
fisttp
cdq
add
je
jg
mov
(bad)
and
cmp
test
sub
push
dec
(bad)
and
pop
pop
and
addr16
popf
aad
jae
jg
int
ss
popf
add
mov
test
jg
cmps
(bad)
call
sbb
movs
scas
push
xlat
cmps
adc
mov
fisttp
push
push
mov
mov
pop
repz
(bad)
xor
cwde
test
(bad)
inc
loope
pop
jno
out
xchg
call
aas
mov
je
mov
mov
push
lock
cmp
sbb
add
dec
mov
push
imul
outs
cli
aad
mov
mov
cmp
movs
sbb
sub
js
rol
mov
ja
pop
stos
cmp
ficom
mov
mov
shl
jbe
mov
stos
xchg
pusha
shl
cmp
and
add
inc
fcom
mov
xor
loope
and
(bad)
lahf
sub
nop
sbb
dec
pop
ins
test
enter
jno
dec
dec
fdivr
popa
inc
aad
dec
call
sub
sbb
pusha
dec
adc
stc
data16
dec
out
inc
xchg
mov
sub
rcr
mov
sbb
pop
mov
jl
adc
mov
mov
cmp
je
pop
cmp
jbe
ds
pop
shl
ret
in
xchg
push
sahf
add
lods
or
pop
pop
shr
mov
lods
call
sub
cmps
cwde
push
loopne
dec
sar
retf
jb
cmp
add
mov
jnp
add
xchg
or
mov
test
push
arpl
pop
push
out
push
pop
cmps
xchg
scas
fild
outs
jmp
pop
fcmovb
pop
sbb
imul
movnti
loopne
(bad)
cmp
adc
and
out
sub
scas
lods
pop
out
int3
adc
bound
retf
dec
xchg
shr
mov
jg
test
aaa
sahf
mov
pop
(bad)
out
pop
dec
lahf
stos
jo
fiadd
adc
inc
js
mov
sti
mov
outs
int3
or
fs
rcl
push
ds
cmp
push
cmp
nop
dec
xchg
ret
pop
dec
lea
jmp
nop
out
fld
jnp
cmp
or
inc
shl
mov
(bad)
or
test
push
mov
mov
mov
mov
leave
mov
jl
jmp
ja
loop
adc
movs
jg
sub
push
enter
pop
out
xchg
xchg
sub
add
jle
aad
inc
(bad)
retf
fnstenv
fs
adc
sar
ret
or
adc
dec
push
or
sbb
sahf
in
ror
inc
fwait
shl
scas
cmps
cmp
dec
outs
lea
movs
arpl
dec
out
(bad)
cs
xchg
stos
xchg
ins
retf
jne
jnp
pop
pop
cs
pop
and
push
push
xchg
and
mov
sbb
(bad)
movs
inc
jg
jnp
jle
aas
adc
or
add
mul
mov
nop
mov
dec
add
imul
xchg
call
mov
fmul
lds
leave
xor
js
loope
cdq
stos
mov
dec
jl
push
ins
and
jmp
mov
push
dec
shl
cmp
fdivr
mov
rol
xor
lahf
cmp
(bad)
mov
add
mov
sbb
stos
sahf
in
data16
test
xor
in
pop
sub
es
mov
xchg
data16
lods
imul
inc
pop
dec
xchg
out
xchg
sbb
dec
leave
aas
(bad)
adc
xlat
enter
add
stos
sbb
ja
sbb
xor
dec
jo
push
dec
jle
fwait
inc
cdq
mov
or
fisttp
pop
shl
xchg
add
pop
repz
mov
ret
test
mov
add
jns
cmp
jae
sahf
xchg
add
add
or
sub
aam
jmp
pop
push
fidiv
dec
icebp
test
sbb
jae
jge
cmp
and
jae
push
das
ficom
in
jae
div
pop
dec
adc
sub
jb
xor
mov
aam
xchg
mov
jns
leave
dec
inc
mov
fdiv
mov
out
movs
mov
dec
ret
add
pop
(bad)
mov
sbb
mov
or
(bad)
ins
push
cmp
mov
jle
mov
pop
mov
sub
sar
mov
clc
cld
(bad)
hlt
rol
mov
dec
call
xor
dec
jbe
push
xor
sbb
sub
clc
mov
mov
cmc
aas
in
mov
cmp
dec
cwde
mov
cwde
ret
in
push
mov
rcl
cs
not
xor
push
xor
aam
aam
ins
stc
ins
loope
repnz
push
shr
lods
sbb
cmc
push
jmp
sub
bound
mov
add
sbb
mov
outs
jno
imul
imul
inc
push
add
adc
out
mov
and
push
int3
mov
adc
jle
es
pop
mov
or
daa
xor
stc
sub
dec
sbb
sbb
jne
sub
push
es
inc
cmc
sub
in
xchg
jp
adc
jmp
push
nop
mov
inc
mov
jno
rol
test
into
stos
mov
push
lahf
xchg
ret
enter
cmp
jmp
jbe
mov
retf
cmp
xchg
xor
movs
pop
xor
(bad)
les
mov
cs
cmps
(bad)
ror
mov
add
aam
fxch
cdq
pop
jnp
popa
imul
sbb
movs
enter
fbld
popf
and
bound
stos
popf
inc
cmp
and
and
outs
sahf
jbe
stos
pop
xor
push
xchg
fcomp
jg
pushf
pop
leave
push
or
mov
mov
jno
jae
push
jp
shl
or
movs
ins
fs
enter
pop
repnz
mov
movs
dec
inc
push
imul
in
inc
mov
loope
pusha
lods
in
imul
pop
sub
mov
mov
jbe
movs
jnp
std
add
mov
mov
icebp
test
enter
(bad)
dec
fwait
sub
das
inc
cmp
xchg
inc
test
aas
int3
ret
inc
movs
loopne
int3
in
mov
fidiv
mov
retf
(bad)
shr
mov
xor
popa
xor
xchg
push
pop
mov
xor
xchg
nop
ja
(bad)
stc
aad
sbb
pop
xchg
sbb
adc
mov
stc
add
push
mov
arpl
inc
scas
fnstenv
xor
sub
retf
jle
les
rol
dec
xchg
mov
jl
(bad)
leave
sar
xor
shl
pop
sbb
push
xor
std
inc
lfs
loopne
pushf
or
call
das
loopne
cld
mov
sbb
xor
lods
loopne
and
clc
int3
mov
jmp
imul
fild
jle
mov
popf
push
aad
mov
push
test
or
dec
mov
outs
mov
outs
sbb
mov
retf
mov
movs
mov
popa
xchg
arpl
ss
push
ins
scas
jo
mov
pusha
popa
mov
mov
imul
xor
mul
test
cmps
add
daa
xchg
aaa
ja
jo
fwait
or
test
adc
pop
mov
cmp
rol
sub
xchg
addr16
out
mov
push
cmps
xchg
jns
stos
test
jnp
dec
or
fld
and
ret
cmp
mov
fidivr
jb
outs
sbb
scas
mov
push
and
dec
lods
jno
add
jl
mov
cs
mov
inc
sub
inc
xchg
adc
and
inc
aas
add
xor
jno
mov
cmc
sbb
fwait
js
inc
lods
sub
add
inc
xchg
mov
arpl
xchg
sbb
push
mov
mov
(bad)
jne
ficomp
add
mov
push
mov
hlt
add
add
in
push
push
push
test
iret
arpl
imul
dec
cmp
(bad)
sahf
stos
iret
add
lock
shl
mov
push
fcmove
aad
or
scas
dec
imul
mov
stc
push
test
and
xchg
dec
and
mov
mov
jne
cmp
inc
lock
xor
fld
push
repnz
mov
or
stc
mov
test
mov
movs
shl
loopne
adc
inc
iret
mov
mov
(bad)
stos
test
pop
clc
dec
and
jnp
push
and
call
fnstenv
dec
xchg
or
fucomip
arpl
movs
aam
sub
mov
cmp
out
push
pop
(bad)
adc
rcl
pop
push
pop
retf
div
xlat
sub
les
cli
aas
push
(bad)
push
pop
add
xchg
inc
inc
ja
je
mov
mov
out
test
push
push
out
movs
lods
shr
push
adc
enter
mov
cmps
ret
adc
sbb
inc
push
dec
mov
call
and
xchg
and
rol
aam
movs
push
dec
push
fcomp
rcl
ds
lea
ret
inc
aas
adc
mov
sub
rcl
icebp
mov
sub
call
dec
push
fist
(bad)
ss
out
gs
and
push
cmp
mov
push
dec
out
push
adc
pop
or
test
jnp
mov
fs
mov
fimul
or
sbb
cld
icebp
repnz
loopne
push
loope
sbb
daa
test
cmp
std
popa
imul
inc
leave
out
ret
push
dec
hlt
fdiv
xor
push
mov
cmp
sub
pop
jne
fiadd
mov
or
fadd
test
idiv
fnstenv
sub
mov
nop
jne
hlt
clc
les
loope
loop
push
xchg
mov
ds
stos
stc
adc
test
xchg
mov
pop
fisub
pop
unpcklps
(bad)
shl
inc
mov
fadd
out
cmp
js
cmp
dec
dec
push
(bad)
cmp
out
dec
cld
std
sub
repz
ret
iret
adc
iret
jmp
test
inc
adc
push
or
xchg
outs
loop
cdq
jb
sub
imul
cli
scas
int
push
sub
jbe
xor
dec
add
mov
pop
test
je
jl
adc
mov
adc
jmp
mov
or
icebp
jns
ds
test
mov
xchg
adc
dec
mov
dec
cs
or
sti
shr
into
test
enter
mov
xor
push
inc
std
cs
jge
mov
ret
push
call
jb
and
mov
cmp
in
leave
mov
ror
icebp
sbb
mov
jecxz
stos
sar
add
mov
jno
xchg
push
jne
mov
fild
xchg
add
outs
push
lea
adc
inc
(bad)
je
mov
mov
pop
push
dec
loope
pop
(bad)
xor
xchg
cmp
inc
stos
mov
gs
adc
iret
sub
pusha
in
jne
(bad)
push
sbb
out
and
je
add
cmps
out
dec
out
enter
xor
pop
jge
rcl
dec
(bad)
mov
or
dec
bnd
stos
mov
or
gs
lds
push
leave
mov
lods
enter
scas
mov
mov
scas
mov
mov
int
test
or
hlt
repnz
test
add
and
inc
clc
int3
loopne
mov
sbb
and
pop
jno
test
je
jl
jg
adc
ins
call
xor
aaa
add
popa
into
cdq
sub
push
scas
or
ins
cmps
into
shl
lock
mov
ins
ja
jp
ret
sbb
pop
dec
jp
or
jno
xor
fldenv
pop
mov
jmp
mov
mov
nop
sbb
jae
ret
add
mov
xlat
not
or
jnp
cs
adc
rcl
or
in
jnp
cmp
cmp
sbb
add
out
sbb
iret
xor
or
scas
aam
imul
test
scas
inc
sbb
lock
jle
stc
push
and
pop
jecxz
adc
ret
adc
sbb
rol
test
(bad)
(bad)
in
sar
mov
or
sbb
push
xchg
cmp
and
scas
cmp
(bad)
cdq
jp
das
and
mov
jle
xchg
cli
push
xchg
dec
mov
aam
pop
jp
mov
into
xchg
pushf
xchg
daa
mov
cld
pop
mov
push
push
shl
ins
inc
cli
in
xor
or
pusha
shl
repnz
or
loop
test
lds
pop
jmp
dec
shl
test
add
mov
and
mov
mov
inc
out
mov
jp
ret
xchg
jnp
inc
fidiv
test
jns
xchg
add
jnp
test
test
scas
aad
pop
adc
dec
repnz
cmp
fsubr
out
xchg
mov
and
add
mov
jge
and
(bad)
mov
scas
loope
xor
inc
outs
out
mov
sub
xchg
and
inc
pop
cmp
mov
pop
dec
cwde
pushf
pusha
push
adc
shl
arpl
push
clc
int
shr
sbb
in
jmp
(bad)
xchg
ret
inc
push
mov
loope
push
and
inc
mov
jnp
adc
leave
jbe
aam
dec
push
mov
pop
icebp
adc
mov
call
sub
int3
mov
mov
sahf
sbb
pop
mov
les
sbb
pop
lods
sbb
ins
mov
sub
push
popa
mov
leave
fcomp
inc
add
and
loope
push
mov
sbb
loopne
sbb
jnp
aaa
stos
mov
and
xor
mov
sub
xor
or
cmp
mov
(bad)
imul
popf
aad
pop
adc
in
mov
pop
mov
add
rol
mov
or
test
push
daa
or
sti
daa
jo
call
sub
(bad)
mov
gs
pop
clc
mov
xor
pop
retf
pop
test
or
or
push
cmc
nop
sahf
pushf
jo
imul
fwait
inc
push
fidivr
sub
(bad)
test
or
jle
push
imul
call
out
or
adc
cmc
jl
pushf
fldenv
add
daa
xor
rcl
test
push
cmps
pop
dec
mov
xchg
push
jbe
(bad)
xor
cmc
xchg
std
mov
dec
add
out
pushf
ds
repz
gs
fwait
ins
lods
jae
dec
mov
cmps
lea
out
js
push
dec
ins
push
push
rcl
push
xchg
dec
dec
mov
mov
and
repnz
sti
(bad)
push
(bad)
ins
pop
mov
jecxz
clc
inc
(bad)
scas
cmp
std
test
enter
xor
dec
lds
pop
and
inc
add
adc
daa
push
add
hlt
mov
in
jecxz
xchg
hlt
jmp
xchg
xchg
xchg
pop
mov
cmp
arpl
mov
push
sub
out
jmp
xchg
pop
arpl
inc
pop
add
or
pop
adc
dec
inc
in
mov
out
mov
mov
pushf
pop
stc
xor
and
xor
and
pop
push
stc
sbb
or
xchg
sbb
sub
pop
jns
push
leave
ins
inc
mov
xchg
(bad)
jb
lock
push
add
rcr
adc
clc
(bad)
sub
loope
sub
arpl
lods
jno
cmps
push
sar
mov
test
xchg
mov
xor
sahf
clflush
push
jmp
inc
or
dec
cmovle
inc
repnz
inc
mov
iret
mov
(bad)
shl
sub
mov
std
xor
sub
fisubr
jmp
repnz
in
sub
shl
or
mov
inc
jno
call
adc
inc
xor
mov
pop
ret
mov
inc
repz
jnp
je
cmps
test
cmp
pop
dec
push
jo
push
xor
mov
sub
dec
fisttp
cmp
pop
mov
pop
mov
jp
and
xchg
adc
or
daa
(bad)
ret
mov
js
dec
mov
or
dec
and
add
mov
jno
(bad)
shl
shl
loop
mov
test
cmp
push
movs
call
ja
pop
push
dec
cmps
mov
cwde
cli
pop
shr
mov
pop
inc
jge
ss
ja
into
ds
in
mov
lds
and
nop
cs
lods
and
jecxz
mov
shr
das
mov
iret
sub
fadd
ss
call
pop
fadd
loopne
data16
mov
mov
shr
std
adc
add
scas
out
out
or
ins
cmc
stos
jle
push
inc
inc
repnz
jle
xor
mov
lods
jb
xchg
inc
or
jo
xchg
sbb
add
je
(bad)
mov
outs
in
or
cmps
sub
pop
bound
mov
cmp
mov
je
ss
(bad)
xchg
xchg
dec
enter
jno
ror
jge
popa
inc
pop
cmc
(bad)
cmp
jp
mov
in
sbb
rcl
sbb
jnp
jo
iret
lahf
ret
clc
inc
dec
mov
and
pop
adc
push
adc
movs
int
mov
iret
call
dec
xchg
pushf
cmps
cmp
movs
stos
cmp
repz
fstp
aad
imul
cs
adc
ins
mov
lahf
cdq
adc
movs
dec
cmp
into
ror
dec
xchg
sub
stos
adc
mov
mov
fadd
inc
pop
fwait
stos
mov
push
cmp
or
rcl
stc
sbb
xchg
inc
pop
push
js
cmp
inc
push
cmps
add
icebp
(bad)
test
jg
add
(bad)
outs
repz
ret
cmp
adc
test
test
lods
movsx
bound
xor
pop
das
jle
addr16
and
hlt
stos
jmp
cmp
and
scas
test
push
xchg
mov
xchg
xchg
(bad)
stos
stos
inc
mov
les
sub
adc
leave
icebp
popf
ja
push
int3
fcomi
mov
xchg
gs
out
push
push
dec
js
inc
ret
jnp
in
or
mov
pusha
or
sahf
ss
adc
mov
dec
pop
mov
sub
aad
ss
cmp
xchg
pop
dec
imul
das
xor
out
or
pushf
dec
ins
fcomp
sub
pusha
test
jbe
jnp
mov
inc
or
or
xchg
dec
popa
mov
cmp
into
loope
ss
adc
jne
mov
pop
dec
stos
gs
fbstp
jo
xchg
adc
adc
mov
pop
add
push
in
dec
cmps
fdiv
je
adc
or
cmp
xchg
dec
add
jne
call
shl
pop
inc
xor
icebp
fsub
pop
out
pop
mov
xchg
ja
movs
jmp
mov
inc
pop
adc
sbb
icebp
xor
push
adc
adc
mov
fcmovnu
xor
jns
jbe
stc
or
(bad)
aas
sub
enter
dec
sbb
lods
aad
sub
mov
sub
mov
pop
(bad)
dec
nop
xchg
push
jae
dec
mov
inc
fwait
dec
cmp
ret
shr
pop
or
mov
adc
adc
inc
movs
enter
pop
loope
mov
xor
loope
adc
dec
cmp
lods
stos
int3
call
mov
mov
(bad)
or
mov
pop
cmp
fldcw
pop
pop
shr
imul
int
daa
fnstsw
stc
mov
fwait
neg
int3
lods
mov
mov
sub
aam
xchg
sbb
pop
inc
retf
pop
sbb
add
fcomp
(bad)
bnd
sub
jmp
sbb
fwait
retf
xchg
retf
leave
pop
(bad)
jo
fwait
cmp
cld
push
or
lock
or
mov
adc
leave
enter
push
add
xor
mov
jno
or
enter
mov
mov
scas
lods
loope
scas
cmp
outs
out
dec
cwde
cmp
and
(bad)
or
in
es
inc
cmp
sub
mov
or
jae
inc
pop
dec
adc
adc
cmps
shl
adc
retf
xchg
pop
sub
and
mov
mov
sbb
pop
inc
pusha
(bad)
push
pop
jmp
inc
test
stos
xchg
stos
lods
dec
cmp
sbb
movs
pop
ins
and
fmul
mov
dec
xchg
neg
or
inc
push
outs
sub
sub
dec
rcl
fsubr
dec
xchg
ins
addr16
data16
push
mov
std
callw
fsub
test
lock
cmc
mov
sbb
add
mov
fstp
mov
or
pop
mov
jmp
cmc
adc
call
call
dec
cld
sbb
mov
add
inc
inc
pushf
jns
stos
or
cld
pop
jno
lahf
daa
pop
adc
popf
dec
mov
inc
sub
and
push
lds
call
retf
clc
out
(bad)
(bad)
lea
mov
mov
push
dec
pop
in
sar
mov
shl
movs
imul
pop
inc
push
jp
imul
cmp
cmc
pop
enter
mov
mov
int3
jge
and
loope
aam
dec
push
int
and
push
fstp
push
repnz
cmp
in
xor
stc
pushf
mov
ins
mov
pop
adc
add
xchg
loope
repz
adc
in
(bad)
xchg
sar
xchg
daa
shr
iret
or
loope
jae
push
js
call
jmp
repz
mov
push
push
shl
xor
xchg
clc
(bad)
je
int
test
nop
pop
ficom
lds
mov
sbb
pop
sub
ror
pop
in
aad
or
push
add
cli
adc
cmp
(bad)
into
nop
mov
sbb
inc
jne
lahf
iret
out
in
sbb
iret
test
add
xchg
fmul
iret
sar
hlt
pop
es
in
aas
popf
popa
(bad)
dec
cmp
jge
leave
cmps
loope
out
or
movs
mov
fwait
jae
aad
xor
pop
sub
xor
neg
push
test
arpl
test
push
push
push
sahf
xchg
adc
call
lods
ins
cmp
loope
or
lahf
je
rcl
xor
dec
xor
cwde
pop
lock
icebp
leave
inc
mov
mov
pop
in
push
mov
add
add
cmp
mov
push
jns
adc
jno
ins
mov
enter
jg
mov
call
dec
add
mov
jecxz
std
pop
outs
xor
push
push
xchg
sub
stos
ja
pushf
add
and
rcl
stc
std
dec
outs
imul
test
sbb
sbb
movs
inc
neg
sbb
jg
push
ret
xor
test
xor
arpl
shl
fldenv
inc
dec
sbb
cmps
jae
dec
ins
loope
iret
and
pop
lock
sbb
adc
scas
ror
pop
sahf
scas
mov
pop
mov
mov
inc
int
mov
jge
pop
loop
mov
mov
es
imul
cvtpi2ps
ja
mov
idiv
gs
sub
stos
popa
or
pushf
pusha
mov
or
sbb
test
ja
sub
cdq
jp
lahf
mov
ds
jae
add
xchg
std
sbb
pop
add
and
cmp
inc
mov
ins
cli
jmp
outs
outs
data16
lock
popf
cmps
jbe
jg
mov
add
pop
in
xchg
fs
aad
push
lods
sbb
adc
shl
or
popa
dec
mov
mov
or
cli
out
adc
js
pop
cmp
or
dec
or
sti
cmp
je
sti
adc
jle
fisttp
add
sub
fild
nop
shl
fst
and
adc
and
pushf
arpl
call
in
ins
movs
jmp
and
cwde
lea
add
lea
mov
add
ret
std
mov
outs
ror
cwde
test
jae
xor
xor
sbb
es
pop
xor
xchg
adc
add
mov
in
sub
mov
add
mov
xor
aaa
inc
xchg
sub
iret
arpl
ret
lds
fidiv
mov
adc
sahf
push
adc
sbb
pop
pushf
retf
mov
lock
lock
adc
(bad)
jg
jmp
fst
inc
ins
fimul
fstp
pop
inc
mov
jmp
stc
call
adc
add
and
les
adc
jecxz
ret
mov
adc
pop
dec
jae
leave
cmc
xchg
addr16
sbb
jmp
pop
jbe
mov
imul
stos
or
pop
fist
ret
hlt
mov
inc
bound
or
add
repnz
imul
adc
fistp
pop
mov
inc
cmp
aad
jmp
dec
loope
push
inc
push
cmps
int3
xchg
xor
xchg
stos
call
adc
iret
loope
popa
jmp
mov
and
sub
push
jns
push
cmp
push
out
lahf
xchg
push
mov
or
jno
push
sub
xor
xchg
mov
jmp
adc
movs
inc
retf
jns
ins
in
and
or
test
xchg
jmp
jns
cwde
inc
scas
push
out
mov
hlt
pushf
mov
adc
mov
or
mov
retf
and
pop
sbb
inc
dec
cmp
sar
mov
push
cmp
ret
std
sub
pop
fst
out
(bad)
ins
inc
test
jmp
repnz
push
adc
jl
aas
sbb
sahf
test
scas
stos
sti
shr
mov
sar
pop
mov
sbb
scas
dec
xor
mov
inc
xchg
cmp
mov
movs
js
pop
sub
push
enter
jo
dec
xchg
in
outs
xchg
pop
sub
in
jecxz
jb
or
(bad)
push
mov
aad
xchg
int
push
cmp
and
jmp
lods
add
cmp
or
sbb
sub
(bad)
cld
call
shl
inc
xchg
sub
sbb
mov
xchg
sub
inc
fistp
jne
xchg
push
(bad)
sbb
push
scas
inc
inc
push
sub
addr16
xor
and
mov
sti
call
lds
mov
data16
int
push
(bad)
and
mov
icebp
pop
mov
lods
push
sub
pop
cs
pop
addr16
or
push
addr16
out
lock
in
hlt
xor
call
shr
jno
and
repnz
adc
icebp
xchg
fdivr
cmp
shr
mov
repnz
cwde
imul
popf
mov
enter
xor
cmp
pop
dec
xchg
or
dec
sbb
test
scas
sbb
test
gs
jbe
adc
jb
popf
sbb
sbb
adc
int3
aad
push
sbb
sbb
cdq
xchg
ficomp
xchg
jae
adc
lock
sub
pop
mov
sbb
dec
xchg
pop
jl
xor
or
imul
in
dec
hlt
jp
push
push
dec
sar
lock
call
sub
xor
xor
arpl
dec
cdq
push
scas
dec
mov
jp
adc
ror
sbb
into
test
out
lock
lock
adc
push
mov
cwde
bound
jecxz
inc
dec
or
scas
fnsave
push
pop
(bad)
xchg
jns
adc
nop
inc
xor
push
cmp
popf
push
cmc
sbb
ja
hlt
push
out
push
shl
push
xchg
out
scas
sbb
std
(bad)
jns
xor
aad
sbb
ja
sub
(bad)
std
rcl
jmp
add
ss
or
js
xchg
mov
retf
cmp
fsub
pop
lock
push
popa
in
bound
enter
dec
xchg
cmp
shl
add
in
sub
lea
add
adc
stos
cmp
mov
movs
popa
mov
dec
gs
jmp
xlat
mov
and
jmp
add
stos
movs
(bad)
test
or
mov
andnps
loopne
add
rcl
outs
sbb
test
sbb
dec
loope
ds
xchg
push
addr16
or
aaa
fst
daa
aad
add
add
adc
repnz
pop
inc
and
cmp
ficomp
xchg
lods
mov
adc
mov
mov
ret
aam
dec
popa
or
sti
xchg
add
adc
into
adc
mov
or
mov
fwait
add
jae
or
call
dec
push
test
loop
movs
aas
das
pop
cmp
shr
sub
enter
cmp
adc
sbb
mov
sbb
retf
inc
mov
cli
sub
jmp
pusha
push
inc
sub
popf
mov
adc
pop
xor
outs
into
sbb
shl
jno
iret
push
pushf
int
fbld
cmp
pop
fadd
jmp
sbb
mov
int
mov
xlat
push
pushf
or
(bad)
mov
and
xchg
jmp
inc
inc
fstp
imul
popa
loop
das
ja
xchg
movs
cli
jecxz
ret
sub
loope
inc
pushf
pop
mov
or
loope
aam
mov
or
cdq
push
xchg
out
mov
adc
dec
or
aaa
pop
jb
mov
mov
stos
mov
sub
push
test
add
sbb
lock
ficomp
(bad)
out
test
pop
mov
xor
je
popa
test
call
dec
sbb
icebp
xchg
dec
push
fs
jne
outs
dec
dec
shr
aam
out
jg
out
and
jg
mov
pushf
loopne
movs
outs
mov
stc
add
xchg
push
sti
mov
pop
fcmovne
cmp
and
sub
scas
sti
in
fwait
or
icebp
test
fimul
jmp
pop
loope
outs
lahf
imul
cwde
rol
fisttp
mov
xor
xor
mov
ret
push
sub
lods
sub
jle
in
or
jno
jge
(bad)
std
jae
mov
jmp
leave
lock
cmp
bound
inc
dec
mov
dec
adc
rcl
out
loopne
cmp
mov
jp
pop
in
jae
pop
(bad)
adc
cmps
retf
or
push
outs
lahf
mov
dec
mov
mov
hlt
ror
sahf
jbe
shl
pop
aad
jp
and
je
movs
jnp
fs
mov
neg
or
pop
pop
call
adc
js
sub
mov
sbb
pop
dec
outs
mov
mov
mov
xchg
mov
mov
or
aad
or
not
push
aam
adc
mov
cmp
dec
push
js
or
das
shl
cmp
mov
mov
icebp
sbb
ja
xchg
push
lods
and
fcompp
neg
jecxz
clc
pop
in
push
cdq
xchg
jmp
shl
iret
dec
mov
sar
jl
repnz
cli
test
adc
mov
xchg
test
fnsave
mov
lahf
jl
adc
and
(bad)
fdivp
inc
and
push
scas
mov
les
sbb
xchg
arpl
mov
push
into
cdq
pop
ret
repnz
pop
outs
in
mov
stos
jp
and
out
pop
mov
rcl
xor
(bad)
shl
enter
sub
cmp
xchg
test
in
idiv
mov
mov
test
jmp
hlt
mov
inc
add
inc
push
shr
clc
js
push
femms
cmp
daa
scas
dec
in
xor
mov
stos
ror
pop
icebp
mov
cwde
or
push
call
mov
leave
xchg
adc
push
fcom
mov
imul
ds
(bad)
sub
push
dec
xor
lock
xchg
cwde
mov
mov
sbb
repz
movs
push
add
add
out
fdivr
push
mov
dec
jecxz
sub
sbb
and
cmp
icebp
imul
outs
jmp
shl
js
xor
jle
test
mov
and
fadd
and
xchg
ja
adc
dec
lahf
and
cmp
mov
(bad)
leave
test
cmp
sub
sahf
dec
mov
push
scas
push
sub
or
mov
sub
lock
mov
pop
hlt
xor
in
add
movs
aad
mov
inc
retf
xchg
push
pop
lods
(bad)
jno
pop
stos
push
xchg
loope
pop
jl
fistp
bound
test
enter
jno
dec
pop
jecxz
cmp
(bad)
into
push
rol
xor
js
jecxz
inc
aam
and
leave
clc
dec
mov
stc
rcl
std
or
inc
ss
aad
popa
cmps
sbb
cmp
xchg
inc
adc
rcl
and
dec
push
maskmovq
or
int3
xchg
stos
xchg
nop
ins
rcl
leave
jo
cmp
in
es
lods
push
stc
jns
push
dec
sbb
aas
xor
in
scas
and
loope
mov
mov
mov
retf
fdivr
in
mov
imul
movs
fisub
sub
fs
push
mov
mul
add
jo
mov
or
cmc
sub
pop
add
and
dec
call
loope
sbb
aas
and
out
pop
fnstsw
pop
adc
scas
stos
lahf
mov
lods
mov
out
mov
inc
jp
jle
imul
mov
xchg
dec
bnd
sbb
cmps
(bad)
lods
or
sbb
jmp
or
es
inc
push
in
xchg
inc
lods
nop
aam
cvtpi2ps
jmp
call
or
dec
adc
pop
pop
mov
add
cdq
push
mov
jo
mov
push
lock
mov
fcomp
add
adc
push
(bad)
mov
mov
dec
shr
pop
sub
inc
mov
jo
(bad)
sbb
repz
mov
enter
inc
mov
jge
icebp
push
cwde
in
xor
ins
inc
aas
xor
xchg
mov
fs
dec
mov
es
xchg
sbb
test
(bad)
adc
inc
int
fistp
mov
loope
inc
pop
into
std
call
loop
aas
mov
jns
cmps
add
mov
cdq
mov
bound
xchg
add
call
rol
xrelease
xchg
add
and
retf
sbb
mov
mov
pop
clc
cmps
add
imul
arpl
push
test
xchg
xlat
fcomi
adc
sbb
mov
mov
dec
cmp
and
push
mov
cmp
push
push
xor
fisub
enter
jmp
fwait
pop
fucompp
mov
ret
rol
lods
add
leave
cmc
in
mov
stos
xchg
cmp
lods
and
das
(bad)
push
shl
add
int3
out
xchg
xor
adc
add
imul
mul
dec
pushf
fsubr
cmp
push
add
scas
add
cmp
push
(bad)
pop
or
or
cwde
loop
cwde
inc
push
mov
mov
cmc
(bad)
in
jne
mov
(bad)
in
jbe
dec
push
stc
pop
dec
imul
retf
std
mov
out
pop
sbb
(bad)
popf
ror
loopne
arpl
jo
or
adc
jl
sub
push
arpl
adc
jmp
pop
cmp
popf
idiv
cld
mov
dec
movs
js
test
loope
mov
jle
clc
pusha
retf
add
(bad)
(bad)
cli
loope
cmc
ret
xlat
pop
movs
fsubrp
das
push
les
mov
out
inc
push
lock
xlat
out
test
mov
xchg
pushf
mov
sub
into
and
das
sub
mov
push
cs
jmp
or
ja
movs
jmp
fld
mov
jae
push
mov
dec
fidivr
test
gs
std
jg
movs
aam
pop
add
out
mov
jbe
jge
sub
jmp
inc
xchg
test
cmp
test
mov
mov
push
mov
hlt
push
cmp
fist
mov
xlat
inc
fdiv
fwait
mov
sub
cs
pop
movs
add
or
xchg
add
push
mov
sbb
and
cmc
add
mov
mov
fist
adc
rol
stos
inc
ja
or
pop
pop
out
sbb
mov
add
sub
shl
pop
hlt
adc
sub
lahf
sbb
xchg
in
jle
push
aaa
mov
in
and
mov
dec
cmp
(bad)
mov
stos
xor
call
icebp
inc
inc
aas
fcmovb
xchg
and
push
jnp
or
test
sbb
inc
iret
inc
aad
or
sqrtps
scas
xor
adc
fdiv
xor
cmp
enter
dec
out
push
push
scas
mov
inc
jge
push
push
cdq
mov
add
sbb
and
pop
sbb
or
mov
lods
jne
xor
mov
mov
retf
and
out
dec
aad
adc
mov
stos
lahf
mov
jmp
dec
push
mov
lahf
int3
imul
mov
adc
bound
and
les
dec
ins
pop
outs
and
push
add
jge
scas
sub
in
mov
rcr
pop
mov
movs
daa
adc
mov
adc
popf
pop
int3
xor
cwde
movs
aam
pop
mov
inc
gs
scas
and
out
scas
or
mov
add
inc
les
jmp
mov
or
sbb
mov
mov
xchg
pop
pop
and
jae
pop
aas
(bad)
mov
xchg
and
cld
cs
pop
clc
mov
sub
mov
lock
outs
fld
ja
sbb
aam
or
pop
data16
add
mov
or
pop
adc
sbb
sub
jmp
cdq
es
pmulhuw
push
mov
pop
test
sbb
push
ds
jnp
or
jmp
push
cmps
cmps
into
stos
in
lea
and
sub
cs
retf
or
pop
call
in
pop
sub
aas
int
xchg
sbb
add
mov
mov
dec
cmps
pop
and
jmp
das
mov
jbe
outs
inc
jns
inc
push
push
hlt
sbb
xchg
mov
or
mov
push
ret
inc
mov
add
xchg
dec
scas
mov
mov
mov
ins
jecxz
addr16
sbb
jp
out
add
mov
out
xchg
inc
movs
loopne
movs
pop
cmp
cwde
fnstcw
pop
mov
adc
or
pop
lods
loope
lds
es
(bad)
adc
pop
scas
mov
push
inc
test
(bad)
fstp
fwait
(bad)
mov
mov
les
mov
cs
sbb
mov
ficom
push
add
fistp
out
call
jne
mov
pushf
jl
call
cli
push
inc
xchg
ret
mov
loop
ret
cs
or
xor
mov
sbb
pusha
pop
sbb
pop
stos
iret
loopne
cs
inc
xor
aam
sar
jge
pop
push
jae
inc
xor
or
adc
test
int
cmp
sub
outs
retf
(bad)
cdq
pushf
xor
sub
mov
mov
inc
jae
dec
dec
or
addr16
aam
push
jmp
icebp
push
push
lahf
call
xchg
inc
addr16
sbb
mov
nop
xchg
lods
mov
jnp
mov
cmc
or
pop
mov
add
mov
int3
pop
sbb
or
popf
jne
nop
dec
jns
sub
mov
mov
cmps
or
inc
xor
push
sub
mov
es
fs
push
mov
popf
icebp
in
push
or
xlat
cwde
sahf
sbb
cs
call
push
pop
and
(bad)
push
repz
shl
push
imul
push
inc
push
add
push
jp
aad
mov
cwde
outs
adc
sub
les
into
enter
ins
inc
loopne
stos
adc
ds
jae
cli
(bad)
(bad)
pop
leave
pop
outs
pop
in
gs
jne
lock
popa
in
push
(bad)
es
pop
or
hlt
mov
jns
call
loop
pusha
pop
pop
ret
jne
stos
jbe
in
push
jmp
ror
mov
add
push
out
jo
inc
pop
cmp
leave
loop
in
ret
jmp
pop
repz
xlat
inc
mov
cmp
dec
daa
test
pop
sub
sbb
repz
aam
dec
adc
movs
jmp
push
enter
jno
adc
lock
cmp
push
inc
xchg
retf
cmps
cs
dec
mov
(bad)
mov
dec
inc
and
mov
add
les
cmp
ret
adc
sub
pop
fisttp
cmp
je
mov
push
xchg
sbb
push
ds
test
mov
and
sub
fcom
js
push
add
aas
(bad)
aas
and
fldcw
xchg
or
dec
cmps
mov
sub
xor
jmp
and
jmp
fistp
out
inc
movs
test
ins
adc
push
pmuludq
jns
ret
push
adc
cwde
add
mov
aas
and
cmp
jmp
clc
retf
es
leave
sbb
inc
test
lods
loopne
cdq
mov
fimul
inc
retf
enter
xchg
push
sbb
push
dec
not
ins
dec
add
cli
mov
pop
clc
jbe
dec
mov
in
mov
(bad)
stos
add
mov
pop
scas
arpl
sahf
fwait
inc
in
leave
adc
add
popf
daa
pop
test
into
dec
mov
sub
daa
out
adc
inc
xor
xor
dec
sub
cwde
xchg
xchg
sbb
out
cmp
push
sbb
inc
adc
add
xchg
imul
mov
or
jge
shr
lock
je
popa
adc
lods
mov
inc
sub
push
xor
mov
push
es
sbb
push
jecxz
jmp
pop
xor
out
data16
dec
(bad)
adc
sub
mov
mov
movs
xor
jnp
rcr
inc
jmp
cmp
cmp
lods
repz
rol
retf
test
(bad)
add
outs
mov
sti
adc
or
lods
pop
sar
push
or
pop
iret
mov
ror
inc
dec
(bad)
xor
stos
in
mov
(bad)
faddp
jns
stos
inc
xchg
std
push
paddq
jno
int3
mov
std
fiadd
stos
sbb
test
dec
xor
cmp
mov
xor
imul
js
dec
ror
or
mov
sbb
pusha
mul
push
and
xchg
mov
shr
popf
inc
cmp
xor
pusha
inc
aas
retf
sti
cmp
jnp
stc
adc
aaa
dec
cld
rcr
cmp
mov
adc
sbb
fisub
out
fucom
js
add
cmp
xor
mov
outs
or
push
mov
stos
js
(bad)
(bad)
dec
mov
fimul
mov
fcmovu
dec
inc
in
inc
imul
popf
outs
mov
push
shl
mov
xchg
dec
fdiv
lock
add
je
das
mov
xchg
mov
bound
imul
xor
push
mov
iret
push
ret
or
call
sub
add
xchg
add
outs
pop
cmps
aad
out
inc
aas
push
mov
add
pushf
daa
and
xchg
frstor
cmp
loope
cmp
lods
mov
sub
add
push
aaa
inc
shr
arpl
push
ret
mov
lds
and
sbb
push
popf
inc
cmp
xchg
ret
inc
dec
cmp
push
cld
xlat
add
push
shl
mov
add
pop
jl
sahf
xor
add
xor
loopne
test
mov
mov
inc
daa
push
aam
test
clc
dec
(bad)
push
in
sahf
cmc
neg
in
js
cli
test
lds
call
xor
pop
push
ret
daa
and
add
in
jmp
inc
pop
or
loopne
adc
sbb
das
lds
lods
jmp
xrelease
lea
scas
or
mov
dec
mov
mov
lds
(bad)
stc
aad
pop
leave
dec
mov
cmps
sub
push
mov
shr
or
arpl
nop
lods
and
scas
in
and
sbb
jne
pavgw
cmp
cmp
addr16
test
xchg
cmp
dec
mov
ficomp
aad
mov
stc
inc
ret
rcl
mov
mov
cmps
inc
jb
pop
add
fs
sbb
pop
(bad)
fisubr
call
mov
xor
daa
fcom
cmp
add
push
and
sbb
out
lds
pop
pop
xchg
add
push
ret
pop
push
mov
rcr
inc
pop
lahf
hlt
xor
jecxz
cwde
inc
shl
imul
call
outs
pushf
repnz
mov
hlt
arpl
xchg
mov
ds
xor
pop
pop
fdivr
sbb
and
add
pop
int3
inc
jl
fst
adc
mov
or
ret
js
(bad)
jnp
rcr
ss
mov
inc
jns
inc
js
clc
in
jo
loopne
jo
mov
dec
pusha
mov
mov
iret
fmul
call
mov
lahf
push
xchg
inc
push
fs
sub
adc
sbb
jns
mov
add
shl
add
or
into
xchg
lods
leave
stc
shl
jae
sub
push
adc
das
pop
fst
push
adc
fwait
jbe
xchg
or
nop
or
jle
push
push
je
xor
or
xor
cmps
jo
mov
xor
in
test
aas
jbe
call
add
ret
or
sub
jecxz
fadd
sbb
jnp
stos
jmp
dec
sub
imul
jmp
push
and
cmp
dec
mov
test
jl
and
cs
adc
mov
inc
test
in
lods
inc
call
sysenter
fcmovne
push
daa
mov
jno
movs
data16
call
push
xchg
(bad)
test
cwde
pop
inc
aad
lods
lods
pop
xor
or
enter
add
pop
shl
scas
bound
in
jnp
inc
fnstenv
mov
cld
inc
dec
arpl
cmp
das
jge
ds
fs
or
les
pop
cdq
mov
pusha
fdiv
icebp
xchg
movs
lods
scas
inc
mov
mov
repnz
js
inc
mov
test
dec
lds
outs
lea
movs
ins
sar
ror
mov
mov
(bad)
addr16
mov
pop
mov
mov
mov
int
stos
and
test
dec
add
pop
jb
push
inc
jns
jmp
xchg
mov
pop
pop
jno
or
out
popf
and
and
mov
repz
xor
mov
sti
and
jge
cmp
imul
jae
test
es
neg
addr16
rcl
or
retf
rcl
inc
jmp
ret
rol
add
fs
inc
sbb
fidivr
or
ret
push
add
ret
repnz
inc
jge
jno
adc
cmp
or
outs
cmps
loop
adc
jl
movs
fsub
jl
das
hlt
(bad)
cdq
pop
jo
dec
xor
lods
xor
pop
aas
mov
sub
addr16
add
rcr
cs
mov
imul
and
or
jmp
sar
ja
xchg
cdq
cmps
mov
jmp
enter
and
mov
sub
pusha
imul
pop
adc
pop
pop
or
mov
cwde
jmp
jp
jmp
leave
and
inc
push
aam
call
adc
popf
xlat
push
or
stc
shl
jno
mov
(bad)
scas
pop
ins
addr16
popf
push
les
pop
js
mov
fld
inc
dec
test
mov
out
jnp
adc
lds
sub
das
mul
ss
push
cmps
cmp
(bad)
push
loope
add
lods
adc
mov
inc
adc
(bad)
aad
xchg
scas
jmp
ins
daa
cli
push
sbb
or
dec
jo
add
imul
imul
call
pop
cmp
inc
sub
(bad)
in
jmp
and
pcmpeqd
ficomp
pop
pop
and
jo
int
arpl
pop
dec
bound
repnz
(bad)
mov
xor
xchg
pop
jl
call
xor
or
jb
call
push
pop
fldenv
sub
repz
pop
ret
shl
mov
out
jg
sub
and
out
(bad)
lods
adc
fdivr
rcl
iret
mul
dec
inc
pop
sub
rcr
frstor
aas
mov
xlat
mov
pop
push
jmp
scas
daa
add
xchg
scas
scas
or
jle
mov
mov
out
aas
pop
add
add
out
adc
packssdw
or
xchg
shl
or
or
push
icebp
mov
dec
mov
cwde
xor
jg
fisttp
xchg
fnstsw
push
jo
sbb
fsubr
fsub
aad
and
aas
sub
add
xchg
outs
pop
lds
mov
inc
xor
push
aad
sub
cmp
jmp
leave
bound
cs
xchg
dec
addr16
int
push
loopne
dec
xchg
mov
out
call
call
jmp
ja
push
jecxz
push
jmp
mov
sub
retf
cmp
test
sub
daa
nop
stc
lods
push
xchg
nop
mov
rol
mov
cmp
mov
jge
jg
sbb
or
adc
and
sub
mov
gs
push
lock
mov
cmp
pusha
ss
jl
lock
dec
jg
in
test
sbb
aas
cmp
mov
mov
mov
ret
and
xor
fld
push
push
mov
stos
fnsave
aas
push
sar
mov
jmp
ja
pop
and
cld
outs
xlat
push
cmp
xchg
or
rol
mov
xor
mov
mov
push
and
adc
out
cli
xchg
idiv
popa
mov
mov
xor
aaa
add
cmps
imul
shr
aam
(bad)
gs
out
or
jnp
outs
jbe
test
add
ss
ins
or
mov
clc
sar
data16
add
xor
mov
aaa
jmp
gs
scas
inc
fwait
out
ss
cmps
out
mov
jb
push
jo
sub
stos
hlt
or
xor
mov
shl
fisub
xchg
lods
(bad)
and
hlt
inc
pop
xchg
fst
mov
adc
fistp
jno
push
or
adc
add
shl
inc
icebp
popf
adc
fldcw
cmp
test
outs
sar
xchg
mov
fs
push
int3
adc
ds
in
outs
cli
in
outs
push
dec
not
sbb
mov
sub
in
add
jb
jg
gs
cdq
stos
scas
push
fcmovbe
outs
aaa
call
pusha
dec
adc
mov
mov
shl
bswap
push
jge
adc
(bad)
cld
rcl
pop
sub
les
lods
pusha
lea
cmps
and
mov
add
inc
popf
and
mov
scas
daa
cmp
mov
xchg
test
dec
loop
cdq
xor
push
mov
push
mov
rol
xchg
add
mov
inc
sbb
hlt
pushf
in
inc
mov
cld
jns
xor
sub
pop
or
adc
jl
add
dec
push
jne
mov
aam
mov
je
test
js
pop
and
hlt
into
xor
ins
test
repnz
stos
pop
pop
aaa
add
or
test
pusha
fld
test
outs
mov
dec
xor
test
mov
mov
std
inc
inc
rcr
(bad)
sbb
ja
mov
fs
jecxz
(bad)
arpl
call
mov
sub
popf
mov
and
push
or
cli
jae
inc
int3
ret
scas
(bad)
scas
and
or
int3
ja
dec
scas
inc
sub
jno
int
(bad)
outs
inc
cld
movs
fst
pushf
ss
jp
scas
xlat
mov
xlat
mov
dec
cmp
loopne
(bad)
scas
aaa
jne
pop
push
jmp
lea
add
lods
or
jmp
retf
cmp
js
add
cmp
outs
jns
shr
cmp
mov
cli
out
mov
mov
sysexit
clc
mov
and
fsincos
mov
call
dec
vmwrite
leave
push
repz
jg
pop
lods
fist
out
sub
jns
pop
cmc
popf
or
mov
imul
mov
(bad)
cmp
mov
call
sub
sbb
jle
mov
jnp
jl
stos
dec
mov
or
adc
test
push
add
add
adc
ror
inc
lock
adc
mov
jns
lea
dec
push
push
(bad)
stos
mov
(bad)
lea
clc
xchg
sti
sbb
(bad)
jg
jle
and
adc
adc
inc
jmp
xchg
test
and
mov
add
inc
repz
jnp
out
sar
in
sub
loop
push
ds
dec
enter
mov
cmps
imul
retf
mov
adc
mov
lods
in
in
xchg
jmp
jo
std
addr16
ss
xor
or
and
aaa
or
jmp
ret
fsubr
(bad)
mov
pop
push
sbb
xlat
xchg
jle
mov
test
loopne
adc
ins
fistp
and
or
js
cmp
lock
sbb
inc
sbb
adc
cmps
or
adc
pop
test
pop
push
(bad)
or
pop
adc
adc
jle
pushf
mov
lea
cmc
sub
mov
pop
cmp
xor
out
dec
mov
adc
pop
pusha
(bad)
shl
jmp
cdq
mov
and
jge
push
mov
(bad)
pop
jns
pop
xchg
repz
cld
push
clc
inc
jecxz
popf
lds
jno
add
imul
sub
push
mov
cmp
adc
inc
cdq
repnz
cmp
or
mov
popa
iret
jns
inc
push
or
in
je
retf
jmp
jb
xor
cmp
sub
sahf
pop
jns
sbb
push
sbb
and
xchg
cmp
fisttp
stos
test
out
ins
in
cmp
sbb
clc
aaa
aam
xlat
push
pop
or
adc
dec
shl
pop
das
ret
push
fld
aam
and
mov
jecxz
into
ds
xor
push
mov
lds
mov
icebp
in
pusha
scas
jnp
shl
xor
mov
pop
mov
call
mov
inc
mov
pop
add
fisub
je
xchg
pop
addr16
or
dec
mov
xchg
icebp
sbb
sbb
and
sub
pop
movs
outs
add
pushf
enter
js
cmp
cmps
cmps
dec
cmps
lods
xchg
xlat
add
rcr
loope
pop
add
push
int3
imul
cmp
jbe
mov
adc
ins
dec
loopne
inc
inc
mov
dec
ja
(bad)
add
stc
(bad)
jno
or
aaa
arpl
fld
cdq
sub
int3
dec
jbe
fcom
adc
ins
xor
ins
inc
add
outs
xor
inc
jo
int
or
fsubr
repz
xchg
ss
aad
rcr
stc
aas
pop
mov
sahf
add
xor
cs
and
bnd
xor
xor
cld
jp
push
mov
inc
aad
(bad)
adc
and
loopne
adc
pop
push
cmp
ja
bound
shr
mov
add
sub
sbb
xchg
(bad)
ja
jno
dec
pop
jo
add
(bad)
or
into
mov
fnstsw
mov
push
mov
pop
push
lea
cmc
dec
xor
cld
cmp
cmp
pop
fwait
push
shr
outs
sbb
xchg
inc
cmp
xchg
fld
stos
mov
push
int
enter
popa
jle
mov
sub
rcr
addr16
lods
push
push
mov
pop
xor
jp
stos
addr16
loop
push
aad
dec
addr16
inc
stc
jecxz
mov
sub
cmps
sahf
gs
push
xchg
pop
mov
or
out
hlt
cmc
cmp
or
xor
pushf
inc
sub
add
push
les
jmp
pop
rcl
inc
and
mov
mov
cli
mov
mov
cmps
xor
adc
and
sbb
test
inc
sbb
and
push
lea
jl
retf
test
in
cmp
cmp
mov
add
addr16
push
call
loope
jmp
cs
mov
xor
xchg
cmp
sbb
fcomp
test
cmp
mov
and
outs
gs
sbb
sub
stos
jo
movs
repnz
cld
jecxz
jl
sar
sbb
jb
adc
jne
ret
retf
pop
fs
mov
pop
xchg
xor
or
call
xlat
mov
jnp
pop
xor
gs
out
arpl
inc
js
add
push
jb
sbb
cmp
sub
inc
ss
xchg
das
sub
iret
xchg
inc
mov
cmp
ins
addr16
or
in
or
cwde
add
add
mov
into
clc
sub
or
mov
lock
nop
fs
retf
cdq
leave
push
dec
fwait
mov
pop
sbb
ret
and
lds
ins
dec
stos
jmp
mov
aad
in
add
arpl
mov
mov
(bad)
mov
or
bound
push
repz
inc
mov
in
and
mov
push
cdq
push
push
scas
bound
add
xchg
push
cli
or
movs
int3
scas
ja
adc
mov
pop
cmp
dec
popf
or
add
std
pop
ins
and
cmps
fnsave
mov
jmp
jb
imul
dec
data16
add
jne
addr16
xchg
push
xchg
clc
imul
fnstsw
sbb
sub
pop
je
pop
jg
neg
push
or
mov
in
in
in
es
pop
hlt
push
retf
sub
data16
ror
mov
hlt
mov
xor
(bad)
adc
aaa
pushf
xor
jne
bound
or
sbb
sub
mov
xchg
cmp
ins
scas
xor
mov
cmp
out
jecxz
sub
int3
inc
int
add
out
cmp
fdiv
rcl
jbe
mov
sbb
ret
adc
cmp
push
and
mov
inc
sub
inc
and
std
(bad)
or
pop
lods
mov
add
dec
ror
imul
and
shr
and
mov
(bad)
in
jmp
fucomi
and
mov
cld
jecxz
and
inc
sbb
or
(bad)
in
aaa
mov
lods
cmc
dec
or
add
jmp
inc
mov
adc
dec
cmp
pushf
(bad)
loopne
mov
dec
mov
je
and
cmc
add
adc
dec
xchg
inc
push
push
test
addr16
lods
stos
cmp
pop
pop
dec
dec
in
inc
lahf
outs
mov
(bad)
clc
xor
sahf
scas
push
push
sbb
dec
cmp
out
inc
sbb
dec
fsubr
in
and
in
fisub
inc
mov
jle
wrmsr
jmp
mov
pusha
hlt
cdq
sub
mov
dec
dec
mov
inc
adc
adc
dec
iret
out
nop
mov
sahf
dec
pop
ret
adc
aad
xor
push
pop
mov
ds
mov
cmp
mov
lods
movs
mov
adc
retf
fidivr
(bad)
outs
retf
mov
mov
(bad)
mov
into
inc
jno
dec
add
dec
xchg
sbb
and
cmp
movs
repz
sahf
std
and
jnp
data16
gs
add
sub
add
sbb
adc
daa
lods
ret
pop
stos
dec
push
push
cwde
mov
out
jns
dec
add
or
out
out
leave
sbb
xchg
(bad)
sbb
dec
pop
xchg
inc
ja
aas
(bad)
xor
xchg
aaa
sar
sar
push
push
rcr
dec
mov
or
mov
nop
push
jg
xor
pop
ins
not
cs
pop
std
(bad)
(bad)
cld
fwait
int3
ret
loopne
cdq
fmul
adc
or
data16
(bad)
xchg
xor
or
jne
and
(bad)
out
inc
sar
mov
xchg
jmp
std
mov
sbb
fidiv
sbb
out
mov
out
add
sahf
adc
mov
dec
out
push
push
dec
loope
mov
mov
jl
jmp
sub
push
add
int
rol
shl
cmps
enter
call
retf
push
inc
xor
mov
sbb
test
mov
lahf
mov
movs
inc
loopne
frstor
inc
push
push
xchg
imul
or
mov
push
mov
(bad)
les
and
js
ds
sti
jmp
jecxz
fstp
sub
pusha
sub
inc
add
push
enter
jb
sub
push
mov
aad
fmul
fcomp
add
cmp
in
fstp
cdq
(bad)
aas
out
fsub
test
push
lahf
jns
cli
cmp
rol
clc
clc
ret
xor
clc
cdq
(bad)
jge
js
stos
push
push
(bad)
out
add
les
pusha
cmp
xor
pop
inc
xchg
jb
es
fdiv
retf
pop
push
popa
rol
mov
cs
ins
or
gs
push
adc
es
jb
in
mov
push
xchg
scas
rol
sub
and
or
cmp
(bad)
or
sbb
jle
xchg
ja
or
int3
pop
mov
call
adc
cmp
inc
push
push
adc
rcl
push
aas
or
adc
push
les
inc
mov
push
mov
es
inc
clc
cmp
cli
cmp
cwde
(bad)
mov
fisttp
add
scas
arpl
stc
add
add
xor
arpl
mov
xor
adc
jbe
outs
fwait
out
inc
push
push
xor
jl
pop
mov
push
cmp
pop
fdiv
arpl
cwde
cmps
(bad)
daa
and
out
pop
stos
mov
test
(bad)
mov
ds
pop
cld
mov
mov
mov
xor
jge
pop
mov
inc
cmc
mov
xor
adc
mov
jae
mov
jno
jl
push
cwde
push
daa
mov
dec
inc
in
dec
adc
rol
cmp
mov
cdq
nop
xlat
jp
jae
pop
cmc
mov
sub
pop
xchg
add
std
pop
sti
or
xchg
repnz
(bad)
mov
and
call
aad
and
repz
xor
mov
ret
mov
movs
jns
cwde
cdq
out
ja
fcomi
and
std
clc
mov
ja
mov
mov
in
shr
ja
or
mov
cmp
stos
adc
or
sbb
sub
mov
jns
lea
adc
popa
add
cmp
or
xor
push
dec
pop
xor
or
sub
stc
lods
xchg
push
cli
mov
ret
mov
add
jge
movs
div
jl
mov
sbb
sub
(bad)
jb
push
dec
or
mov
sbb
sahf
mov
call
push
push
mov
dec
(bad)
adc
push
inc
xor
lods
adc
push
call
pop
in
mul
sbb
ror
adc
xchg
lock
scas
sbb
pop
jmp
mov
lds
lock
pop
int
ins
jmp
aas
in
cmp
jmp
xchg
data16
jecxz
jg
cwde
aad
push
cli
repnz
in
xchg
mov
jg
lds
sahf
sub
or
outs
mov
mov
xchg
inc
mov
out
(bad)
hlt
jecxz
dec
push
jl
pop
cmp
arpl
xchg
jae
stos
into
clc
mov
add
push
dec
es
cmp
sub
push
jg
add
fdiv
and
xchg
cld
(bad)
jge
movs
stos
pop
ins
cmps
dec
push
jmp
(bad)
hlt
cli
dec
push
outs
push
popa
adc
sub
mov
push
ja
lds
shr
das
movs
fstp
jle
das
lock
pop
xchg
cmp
mov
pop
push
cmp
mov
cmp
arpl
scas
outs
gs
iret
dec
repz
lods
jmp
mov
cmps
dec
ret
lods
and
pop
sub
out
aad
inc
xchg
xchg
les
enter
inc
inc
jmp
test
(bad)
sub
xchg
cli
cwde
cmps
cmp
ins
scas
cmp
cmp
test
adc
int3
mov
popf
pop
inc
stos
jns
jne
or
loope
xchg
push
or
inc
fs
inc
stc
es
data16
pop
add
out
lds
hlt
pop
xchg
scas
rcr
pop
mov
ret
outs
js
or
pop
daa
cmp
cmp
mov
mov
mov
pop
mov
mov
enter
movs
cmp
xor
cmp
pop
xchg
in
and
(bad)
leave
jge
mov
cmp
jp
and
jne
mov
push
adc
(bad)
ins
out
iret
or
int
data16
sbb
mov
push
in
xor
dec
mov
mov
ficomp
icebp
lock
rol
icebp
push
std
push
arpl
retf
inc
fst
dec
sub
ror
test
mov
ins
add
fisubr
xchg
fldcw
and
xor
mov
(bad)
and
test
(bad)
fs
mov
adc
call
int3
jmp
sub
test
rol
ret
dec
ret
mov
(bad)
jne
push
mov
cdq
(bad)
pop
cmp
push
xchg
aaa
popf
jmp
retf
mov
loope
cdq
outs
std
out
add
dec
xor
(bad)
cmc
mov
sahf
cmps
dec
bound
int
pop
mov
jecxz
sbb
sub
out
adc
pop
sbb
test
push
mov
ins
adc
mov
(bad)
sub
mov
dec
ss
in
mov
or
push
sub
mov
push
(bad)
jp
outs
pop
ss
push
cdq
fs
fist
and
pop
sub
xor
bound
jge
mul
mov
jmp
cmps
mov
xchg
repz
push
push
jae
mov
dec
std
jmp
mov
push
push
fstp
adc
xchg
mov
test
aaa
stos
in
outs
scas
leave
fmul
test
scas
sub
aad
pop
jbe
mov
push
adc
ins
leave
imul
loopne
scas
call
ins
cli
scas
out
push
xchg
cmp
xchg
aad
add
pop
pop
rcr
mov
sti
jg
addr16
dec
ins
fisub
(bad)
lods
cmc
gs
ins
loop
fs
sbb
xchg
mov
adc
xor
jge
aad
xchg
sahf
cli
pop
scas
dec
mov
sub
jg
push
xor
xor
inc
aam
sub
push
ret
adc
jecxz
push
nop
les
sub
or
daa
(bad)
jne
add
adc
ins
in
rcl
retf
pop
push
mov
std
shl
test
dec
push
cwde
cmc
lods
cmc
pop
jbe
test
fiadd
mov
ja
pusha
mov
lods
in
fdivr
lods
xor
iret
sbb
lahf
out
mov
xchg
pop
xor
jns
add
call
ret
repz
leave
clc
jns
jge
std
call
cmp
mov
fs
mov
sbb
inc
mov
mov
pop
pop
je
adc
sahf
mov
leave
sbb
jne
mov
and
mov
sub
or
cmc
sbb
ret
ret
jnp
in
in
cwde
push
and
mov
jae
inc
xor
add
adc
mov
dec
cmp
mov
outs
jne
sub
mov
addr16
rol
jns
sar
push
pop
movs
xchg
ins
aam
inc
out
inc
push
rcr
icebp
jnp
cdq
jp
loop
aas
loop
and
lahf
popa
cmp
js
jmp
cmps
leave
dec
push
cmps
and
push
pop
sti
push
inc
dec
or
enter
xchg
add
xor
dec
cs
leave
cmp
sub
inc
push
call
leave
leave
cdq
mov
pop
mov
test
jmp
mov
retf
scas
pop
stos
xor
jnp
jl
add
add
push
out
jecxz
ss
idiv
repz
loop
fsub
ror
cmp
cdq
xchg
cli
add
aad
cmp
ja
arpl
add
adc
(bad)
enter
mov
xor
(bad)
pop
or
cmc
retf
popa
push
pop
lods
into
(bad)
inc
loope
push
ins
shl
clc
scas
repz
mov
sbb
test
jecxz
and
mov
and
das
pop
mov
int
xor
retf
outs
xor
out
push
clc
into
(bad)
ss
xchg
pushf
push
sbb
inc
mov
adc
and
inc
lock
cmp
push
sahf
dec
les
xchg
jg
sub
int3
daa
test
xor
dec
and
dec
out
add
loopne
scas
test
popf
gs
stos
mov
inc
dec
push
dec
jb
sbb
stc
ins
leave
ror
repz
imul
adc
cmps
cwde
enter
inc
cmp
and
jo
pop
shr
xor
dec
enter
jbe
add
add
push
iret
rcl
les
cli
xor
dec
icebp
rcl
dec
gs
jle
jno
mov
(bad)
cdq
fld
add
(bad)
stos
push
aas
jle
push
mov
xor
sub
pop
cmp
idiv
fidivr
adc
inc
jnp
mov
ins
or
jbe
inc
mov
pop
fcomp
adc
out
sbb
retf
iret
ins
(bad)
aas
mov
push
outs
and
mov
dec
loope
loop
add
lock
shl
movs
pusha
pop
xlat
je
imul
sbb
in
or
sub
mov
movs
mov
sbb
ins
mov
outs
pop
(bad)
stc
call
sub
out
pop
push
fimul
pusha
rcl
pop
mov
push
push
pop
rol
(bad)
arpl
jbe
jns
bound
xchg
fnstenv
sub
push
scas
push
retf
cli
jp
mov
push
outs
bound
sbb
int
pop
ss
ror
retf
(bad)
shl
mov
call
pop
lds
push
and
loopne
mov
xor
sti
cmp
leave
lds
in
jge
jmp
loop
cmp
xchg
jmp
add
and
mov
jmp
enter
and
inc
fdiv
dec
and
loope
adc
dec
push
push
jb
lock
cld
int
repz
popa
cmps
sub
push
sub
icebp
mov
retf
aaa
(bad)
in
retf
lahf
or
dec
(bad)
jecxz
sub
jns
mov
sbb
ja
push
jne
cld
inc
fadd
fadd
sub
fild
test
mov
popa
push
and
add
ret
shl
fistp
cmps
xor
xchg
lea
loope
jle
cdq
inc
mov
call
lock
jnp
or
mov
adc
jbe
sti
out
pop
out
push
lods
mov
push
add
repz
push
xchg
addr16
jb
mov
pop
or
ins
sbb
and
mov
std
dec
cmps
les
daa
inc
push
xor
mov
loope
stos
cs
ins
jnp
loope
push
push
mov
aad
jmp
mov
adc
inc
sub
stos
popa
jno
imul
fstp
les
loop
sahf
mov
and
jmp
in
lds
outs
fbld
push
sahf
sbb
outs
cmc
loop
dec
cmp
leave
loope
(bad)
pushf
aad
imul
inc
or
xor
and
sub
and
out
jp
pop
mov
jl
nop
pop
mov
outs
push
sub
mov
sub
add
push
(bad)
jge
adc
pop
add
or
fbld
cmp
jle
ret
out
and
pop
mov
loope
mov
push
into
inc
fnstenv
jle
pop
push
repnz
std
out
stos
adc
frstor
fisttp
in
sub
mov
adc
adc
sub
das
xor
mov
jmp
pop
loope
sar
adc
pop
push
addr16
push
mov
push
inc
movhps
push
lods
out
jl
pop
es
das
lods
cmps
(bad)
cli
rcl
(bad)
jmp
push
daa
mov
mul
repnz
pushf
jle
ret
bound
mov
aad
loope
and
mov
xchg
add
int3
jno
cmps
cmps
xchg
outs
sub
pop
mov
mov
or
push
daa
lods
not
jne
in
xor
ins
mov
inc
das
call
jmp
ret
dec
xchg
mov
cmp
jmp
out
xor
pop
stos
cld
inc
test
pop
addr16
mov
shl
inc
mov
test
mov
inc
fdivr
mov
int3
push
dec
sub
outs
sub
cwde
je
sub
jno
retf
mov
ret
rol
inc
pop
lahf
mov
cmp
stc
sbb
adc
xchg
js
lahf
inc
mov
push
cwde
cmp
mov
mov
in
xchg
adc
lds
inc
push
dec
mov
xchg
mov
dec
mov
mov
enter
ds
mov
into
pop
xor
and
ds
sub
loopne
test
and
ja
loop
mov
pop
mov
mov
pop
sbb
pop
push
bound
push
add
fdiv
xchg
loope
enter
and
mov
lods
add
test
push
fpatan
sbb
fist
xchg
mov
dec
das
mov
repz
jo
std
shl
addr16
and
inc
das
or
cmc
pop
nop
popa
sbb
mov
ins
inc
cmp
aas
ds
test
push
xlat
xlat
dec
fwait
sub
pop
xchg
lods
xchg
push
push
pop
adc
shr
sbb
outs
dec
pop
in
in
lods
pop
rcl
fmul
add
jb
ror
jo
mov
jae
dec
or
scas
pop
dec
dec
in
mov
xchg
cdq
xchg
jg
and
push
shl
mov
add
cmc
jns
sbb
push
inc
inc
test
pop
lock
popf
in
mov
sub
out
outs
mov
(bad)
adc
sbb
sub
cmps
in
scas
sub
jnp
in
cmp
fnstenv
shr
cs
jmp
jmp
dec
mov
inc
cld
ss
leave
push
dec
clc
fst
mov
cmp
imul
and
mov
popa
mov
or
mov
lea
jmp
aad
shr
and
adc
stos
arpl
push
or
mov
add
mov
mov
mov
cmp
mov
dec
ret
sub
fisttp
push
call
mov
sbb
inc
jl
adc
mov
inc
neg
pop
sub
fmul
cs
push
adc
jmp
(bad)
pop
dec
fidivr
jns
repz
in
movs
sub
outs
sub
mov
lods
(bad)
repz
in
adc
dec
sbb
cmp
enter
push
nop
add
sub
shl
jg
xor
and
cmp
movs
add
and
shl
leave
add
xor
push
sbb
add
jg
fs
xchg
outs
mov
jo
cwde
or
xchg
mov
aas
pop
ss
sub
jp
popf
cmps
jmp
dec
push
(bad)
fiadd
or
outs
ret
loopne
xchg
cwde
xchg
sub
pop
xchg
cmp
into
xor
(bad)
jge
movsx
adc
dec
sbb
aas
sbb
jns
fsubr
jnp
mov
and
lock
sbb
hlt
enter
std
mov
shl
inc
repz
lock
les
fs
push
ret
out
or
or
add
push
repz
xor
sbb
imul
stos
adc
xchg
cwde
adc
daa
sbb
repnz
jae
js
int
outs
push
jmp
cmp
test
mov
dec
arpl
xchg
mov
jnp
pusha
mov
mov
shr
es
or
push
and
(bad)
mov
cmp
and
jle
(bad)
add
fsub
cmp
ret
push
aad
xor
les
dec
fistp
jo
pusha
sbb
inc
jp
ds
mov
pop
dec
in
cmp
pop
lea
jbe
jo
sbb
out
out
lea
add
arpl
sbb
jmp
jge
aas
ret
pop
js
push
imul
mov
nop
jg
daa
sub
sti
repnz
in
jg
test
xchg
sbb
xchg
outs
ja
mov
pushf
out
sub
inc
jo
cmp
add
sbb
adc
sbb
push
and
mov
push
sub
cs
fwait
cli
inc
mov
jo
sub
rol
adc
adc
or
or
(bad)
imul
iret
addr16
or
push
fisub
add
mov
or
push
pop
mov
popa
sub
idiv
stos
cdq
mov
adc
ror
mov
sar
imul
jmp
mov
jge
fcomip
jbe
shl
xlat
in
mov
jecxz
ins
or
clc
lods
inc
sar
pop
popf
aas
xchg
inc
ss
xchg
push
je
sbb
into
loop
fld
dec
mov
mov
push
dec
xor
cmps
xlat
aaa
lahf
in
or
dec
or
in
xchg
jp
sub
mov
mov
lods
cwde
loopne
jne
mov
ret
imul
mov
pop
mov
loopne
dec
and
lea
in
or
xchg
cwde
jge
dec
or
push
inc
push
mov
cmp
xchg
xor
push
in
dec
cmc
ror
pop
jecxz
pop
adc
sub
or
stos
sbb
lock
aam
in
test
and
mov
out
mov
cld
xchg
cmp
sbb
or
push
leave
and
cmp
inc
mov
cwde
mov
or
fstp
push
stc
aaa
sub
pop
sub
jmp
xchg
mov
nop
xchg
imul
ss
scas
in
cmp
out
in
hlt
push
cmp
push
into
lods
sbb
aam
add
bound
adc
in
mov
cmp
int3
lock
fcomp
cmp
pop
(bad)
pop
jmp
xchg
xchg
loop
in
fiadd
cmp
and
add
(bad)
pop
loop
inc
cmps
ficom
sub
inc
sbb
loope
fcom
cmp
push
fist
lds
cdq
pop
lahf
or
rol
cs
movs
cmp
pop
mov
loope
aas
mov
mov
mov
push
and
xor
retf
imul
js
cli
lahf
in
push
xchg
jb
and
fiadd
or
test
popa
repnz
(bad)
jo
or
retf
mov
jns
test
test
dec
pop
mov
and
and
push
std
icebp
test
es
in
mov
mov
dec
xchg
stos
or
or
les
sub
retf
stos
shl
movhlps
cmps
iret
(bad)
out
leave
cmp
cmp
sub
addr16
jo
add
xchg
fdivr
cmc
and
inc
fadd
mov
fwait
mov
xchg
repz
cmp
ins
inc
popf
(bad)
pop
mov
push
sub
imul
mov
pushf
adc
dec
cmp
imul
sbb
stos
cmc
xchg
cmc
inc
mov
in
sub
jb
dec
out
pop
je
jo
adc
mov
jno
popa
pop
and
popa
cld
add
loopne
cmps
jno
ins
ja
add
mov
cs
cld
js
inc
je
push
ror
jne
xor
retf
loop
lock
inc
test
lods
loope
aam
in
gs
neg
and
add
xchg
ja
dec
mov
cs
add
shl
rcr
icebp
jmp
pusha
and
jo
dec
imul
push
test
jg
mov
seto
mov
(bad)
adc
cdq
icebp
inc
dec
je
int3
fcomi
out
xchg
jge
mov
jb
test
cmp
inc
xchg
jno
mov
call
imul
jo
fidiv
push
rol
dec
sub
xrelease
inc
(bad)
jl
push
mov
adc
leave
clc
sub
pop
dec
int
push
data16
xchg
pushf
call
push
(bad)
mov
mov
sbb
jecxz
loop
mov
rol
cmc
sbb
sbb
mov
stos
sub
mov
ins
mov
mov
std
or
dec
dec
test
inc
sti
cmp
gs
push
lds
mov
nop
rcl
cld
cmps
test
and
int3
inc
(bad)
xchg
or
xchg
je
dec
sub
jb
and
xlat
push
inc
lahf
repz
outs
popf
sar
and
jecxz
rol
(bad)
imul
dec
call
in
enter
loop
cdq
retf
jae
mov
adc
sub
dec
xor
(bad)
mov
mov
cmp
ret
lods
loopne
push
jmp
scas
push
cmps
cmp
in
adc
loop
inc
cmp
out
mov
into
xchg
jae
sub
ss
int
(bad)
and
push
rol
pop
and
or
push
add
push
call
xor
mov
adc
es
les
int3
mov
addr16
inc
jns
inc
retf
pop
jle
add
mov
fisubr
test
retf
sbb
add
fisttp
mov
fmul
dec
cld
push
stc
ins
sbb
inc
aad
and
mov
inc
xchg
mov
aad
sahf
mov
jp
enter
pop
mov
adc
push
js
int
inc
push
(bad)
lods
ret
test
mov
jg
cmp
repnz
sub
mov
aad
jge
(bad)
cmp
xchg
sub
test
jns
mov
loope
push
mov
xor
pop
pusha
mov
pop
fld
and
jo
mov
int
xchg
sti
dec
adc
into
daa
shl
pusha
pop
out
pop
pop
mov
xor
dec
aaa
(bad)
adc
push
add
bound
jmp
movs
mov
cmc
fisttp
mov
(bad)
lock
inc
pop
(bad)
test
(bad)
jmp
push
sub
lods
pushf
jp
sub
dec
xchg
hlt
loope
popa
add
test
pushf
mov
lea
rcl
pushf
loop
xor
and
xchg
mov
int3
(bad)
es
rol
fist
mov
jmp
imul
cmp
js
and
push
or
js
inc
movs
inc
inc
pop
mov
and
outs
push
fld
call
xchg
fadd
test
setne
jge
mov
mov
jge
leave
and
aam
inc
pop
movs
jp
cmc
sti
sub
int3
sub
outs
adc
les
sbb
dec
or
pusha
ins
inc
xchg
fs
inc
test
cdq
or
je
in
jmp
and
xor
enter
fnop
push
xor
mov
add
daa
sbb
inc
ja
xor
sar
pop
out
mov
xchg
test
mov
push
jge
test
leave
call
adc
pusha
pop
mov
inc
sub
fiadd
sub
push
mov
and
add
mov
xor
or
fnstcw
sbb
mov
or
add
out
shl
mov
retf
xchg
or
enter
in
pop
jge
loope
jbe
jae
in
xor
pop
std
or
xchg
lods
mov
jp
push
sub
enter
jne
cmps
aaa
ss
adc
jo
mov
sub
dec
cmp
jns
std
leave
in
adc
in
adc
cmp
dec
outs
sti
sub
add
adc
in
pop
inc
int3
outs
pop
repnz
leave
add
jge
mov
data16
(bad)
and
shr
pusha
in
xor
mov
push
mov
inc
pop
or
ja
mov
xor
movs
push
dec
or
mov
aas
mov
cmp
jb
inc
sub
ja
iret
call
add
gs
cmp
inc
jbe
(bad)
bnd
dec
fistp
push
je
cmp
popf
in
cmc
(bad)
and
popa
xor
jg
shl
out
pushf
leave
arpl
popa
stc
sbb
push
sti
test
test
xor
fxch
clc
xchg
jb
test
aad
and
mov
les
lods
retf
mov
inc
mov
js
movs
fstp
xchg
movs
cmc
pop
popf
imul
mov
mov
inc
(bad)
in
fdivr
jae
mov
sti
adc
jb
(bad)
cmp
idiv
xchg
dec
ret
push
inc
lea
xor
or
shr
xor
jno
in
or
xor
jle
lock
lds
sti
mov
sub
mov
data16
cli
xchg
hlt
ja
xchg
mov
out
xor
pop
jmp
jecxz
imul
mov
jb
inc
mov
outs
aad
sub
xor
shl
jle
test
xchg
iret
or
ds
test
fisub
mov
inc
inc
dec
movs
push
inc
xor
ja
lds
leave
mov
inc
addr16
hlt
stos
pushf
pusha
outs
push
shr
vmovlps
mov
sub
cmp
push
sbb
pop
sub
xor
inc
xchg
add
es
mov
sbb
or
mov
repz
test
(bad)
popf
icebp
lds
ret
mov
mov
mov
cmp
xchg
mov
in
sbb
xlat
mov
sub
movs
dec
jmp
das
push
scas
ins
push
add
mov
retf
cmps
adc
call
bound
xchg
mov
push
sbb
imul
int3
cld
(bad)
(bad)
(bad)
in
xor
dec
xor
test
xor
jp
ss
ja
mov
pop
ror
sbb
jmp
shl
aaa
and
fistp
outs
dec
mov
mov
fcomp
push
mov
cmp
fild
mov
movs
fidivr
pop
repnz
lahf
aam
add
jecxz
sub
inc
iret
ret
and
push
mov
xor
scas
jae
add
add
icebp
adc
cs
dec
pusha
hlt
sub
aad
mov
xchg
jo
out
add
adc
ret
mov
jb
or
aad
aam
pop
cmp
dec
push
jo
jg
and
mov
adc
fwait
or
mov
popf
ret
xor
repz
and
lds
sbb
sub
xchg
cld
xor
in
icebp
cdq
add
and
pop
xchg
in
push
in
mov
in
pop
mov
sub
loope
push
stos
add
in
xor
out
call
cmp
outs
mov
pusha
jg
stc
mov
pop
(bad)
cs
fimul
inc
out
mov
or
movs
mov
cmp
neg
loopne
outs
pop
cmc
or
sub
cwde
fs
sbb
sahf
push
cmps
shl
mov
ss
dec
(bad)
sti
mov
aad
out
loopne
fisttp
adc
xlat
ficomp
xchg
in
add
sbb
in
cmps
mul
dec
or
xchg
or
cmp
ret
nop
and
scas
xor
sar
fimul
and
mov
dec
mov
cmp
push
scas
add
jle
arpl
or
loop
je
inc
jge
sub
in
lods
pop
dec
jmp
mov
sub
jmp
jnp
mov
push
sbb
(bad)
mov
push
std
sub
leave
gs
popa
or
push
gs
hlt
push
(bad)
rcr
gs
mov
stos
pushf
push
xchg
mov
jnp
call
ja
sub
daa
jmp
dec
mov
sub
movs
adc
mov
dec
mov
add
or
call
(bad)
call
sub
retf
mov
push
and
push
scas
cmp
mov
sub
cmps
pop
fldcw
ret
test
cmp
mov
cmp
inc
ins
xor
pop
aad
fs
jl
sets
push
ss
icebp
(bad)
into
loopne
dec
data16
and
int
mov
dec
loopne
and
sub
call
inc
dec
jo
push
iret
cmp
pop
fisttp
mov
outs
test
or
sti
mov
xchg
inc
loop
cmp
add
cdq
jnp
add
not
(bad)
cmp
mov
(bad)
(bad)
jmp
bnd
adc
movs
adc
add
repnz
aaa
imul
stc
out
jmp
cmp
xor
dec
inc
or
adc
xor
jmp
call
outs
jmp
cmc
mov
cs
movs
xlat
or
popf
das
pop
adc
jno
int
aas
rcr
outs
push
pop
test
std
repnz
(bad)
lods
xchg
adc
mov
push
shl
jmp
dec
mov
loope
lock
dec
sti
das
xchg
ret
pop
cmp
pop
pop
pop
fsub
and
adc
out
mov
or
cld
and
test
sub
add
scas
(bad)
out
inc
mov
push
inc
push
adc
dec
mov
gs
ret
jns
test
je
or
xor
inc
mov
adc
ret
jmp
and
xlat
or
retf
inc
cmps
jbe
jnp
inc
xlat
xlat
test
pop
pushf
pop
cmp
cmp
dec
mov
push
xchg
jns
ins
sbb
xor
cdq
retf
adc
mov
stos
inc
cmc
sbb
cmp
leave
adc
movs
cmps
jg
xlat
mov
cmp
cmp
xor
mov
push
pop
out
je
fld
es
dec
mov
sbb
rol
pop
ins
shr
nop
add
test
outs
(bad)
test
repnz
add
inc
dec
sbb
jmp
outs
mov
hlt
sub
add
push
pop
jmp
mov
cmp
stc
or
inc
addr16
push
xor
xchg
jno
fidiv
pop
repz
jl
icebp
cwde
sbb
cdq
jno
mov
mov
out
fmul
xchg
in
lds
into
mov
xchg
fwait
dec
mov
aad
pop
dec
mov
xor
lea
pop
stos
shl
sub
xchg
jae
int
inc
adc
les
(bad)
mov
fisub
ror
ja
cmps
sbb
les
mov
cmp
mov
xlat
mov
adc
mov
mov
sub
addr16
jne
jns
dec
pop
mov
js
jne
pop
jecxz
mov
jo
sbb
xor
aaa
sbb
cmp
inc
and
jmp
fmul
sub
dec
mov
cmps
dec
xor
test
fsub
test
imul
stos
xchg
(bad)
cdq
jmp
int
push
xchg
mov
mov
mov
outs
xchg
test
dec
mov
sbb
sahf
imul
dec
jb
mov
in
shl
jecxz
lods
sti
jno
xor
inc
cmc
call
sub
pushf
adc
rol
mov
iret
mov
cmp
mov
mov
pop
(bad)
mov
(bad)
stos
jne
pop
jmp
(bad)
and
mov
or
mov
or
xchg
mov
fpatan
pop
gs
cs
sti
stc
add
cdq
cdq
add
imul
mov
shl
cdq
push
xor
mov
lea
fisubr
pop
ja
xchg
mov
sbb
test
inc
test
jmp
jmp
xchg
inc
mov
or
ffreep
mov
jg
std
das
pop
add
nop
pop
mov
xchg
jge
or
xor
pop
and
pop
or
jns
inc
retf
xor
ror
dec
inc
aaa
jns
scas
(bad)
out
push
fcomi
inc
icebp
aaa
stos
xor
(bad)
out
sti
mov
cmp
and
inc
addr16
jae
or
aas
sar
ret
ret
mov
cmc
and
clc
and
xlat
das
fcom
pop
scas
add
cmps
dec
mov
cmp
sbb
lods
xchg
add
outs
cs
adc
lods
stos
iret
pusha
mov
fidivr
xor
aam
sar
dec
and
sub
test
adc
xchg
inc
jne
ds
imul
mov
inc
mov
out
jle
(bad)
retf
mov
mov
(bad)
dec
jbe
mov
(bad)
jb
push
popf
push
xchg
and
sub
cdq
xchg
add
pop
jne
imul
sbb
cmps
or
ins
lock
jo
dec
cdq
sbb
sub
xchg
sbb
hlt
push
popf
outs
imul
fstp
xchg
cdq
sbb
mov
sub
dec
out
mov
add
xor
jmp
loope
mov
jae
pop
aas
mov
fisub
loopne
jns
outs
jecxz
out
sbb
test
loopne
mov
bound
pop
inc
daa
clc
sub
popf
outs
jb
rol
gs
cmp
pushf
push
mov
push
lock
pop
jbe
add
or
outs
arpl
and
cmps
xor
mov
shl
or
in
and
imul
repnz
(bad)
in
stos
dec
push
movs
stos
jmp
push
push
fs
cmp
mov
movs
popa
imul
out
js
pop
mov
jp
(bad)
xor
ret
dec
jl
mov
add
mov
cld
and
mov
dec
call
sub
xchg
mov
sti
xchg
sub
rol
jp
es
outs
fcom
movs
les
and
loop
imul
mov
call
imul
out
inc
ficomp
mov
loope
lock
dec
lds
addr16
(bad)
enter
sbb
mov
imul
test
push
mov
jmp
mov
daa
(bad)
lods
test
jbe
sahf
jae
cmp
mov
dec
bound
sub
sub
cmp
data16
cmc
ret
push
inc
dec
(bad)
ja
(bad)
in
add
inc
retf
adc
lods
xchg
mov
lds
inc
push
stc
dec
xchg
adc
ret
pop
lahf
jbe
mov
add
ds
fisttp
add
not
push
jo
mov
push
dec
and
arpl
adc
out
jmp
mov
nop
call
sbb
ror
cdq
jmp
push
repz
inc
fiadd
inc
xchg
out
retf
cmp
pushf
push
movs
enter
aad
outs
or
jp
imul
add
dec
ja
xchg
push
mov
shr
arpl
(bad)
inc
retf
je
pop
pop
or
mov
popa
dec
outs
es
pop
sar
jg
push
cmp
out
pushf
sub
xor
or
imul
(bad)
lock
xchg
fnstsw
(bad)
jmp
repz
xchg
lods
jae
or
pusha
mov
fidiv
mov
mov
int
std
pop
jmp
ins
push
sub
add
pop
pop
xchg
jp
in
cs
cdq
push
addr16
int
iret
jmp
scas
cld
push
mov
mov
jbe
mov
(bad)
or
js
cmp
test
repz
fwait
dec
in
inc
pop
jp
pop
ss
mov
inc
mov
aam
dec
out
test
inc
adc
sub
iret
xchg
mov
leave
dec
jge
xor
mov
dec
clc
jnp
jmp
dec
pusha
out
push
(bad)
popf
aaa
std
adc
inc
add
popa
icebp
int3
loopne
std
(bad)
mov
xchg
jo
xchg
aad
dec
inc
mov
mov
pop
repz
out
into
test
shl
sbb
sbb
adc
push
or
iret
sub
aas
sahf
and
adc
inc
es
mov
pop
jno
xlat
push
mov
call
and
mov
xchg
cmc
mov
cmp
adc
test
aad
cmp
fimul
dec
shl
fdivr
shl
cmp
and
xchg
test
ja
push
sbb
add
(bad)
sub
mov
pop
lods
xchg
int
mov
or
mov
pushf
scas
or
jg
push
mov
icebp
pusha
mov
xchg
sbb
add
int
neg
xchg
retf
aaa
fnstenv
inc
inc
xor
shl
pop
les
sub
das
aad
mov
xchg
retf
repnz
dec
adc
sbb
std
std
daa
inc
add
sub
pop
and
dec
dec
icebp
xor
xchg
jns
sbb
dec
jb
sti
pop
mov
retf
test
mov
popf
rcr
and
inc
add
xor
adc
sub
ret
sub
cld
mov
mov
mov
jecxz
loope
(bad)
ficomp
and
nop
jnp
pop
dec
adc
dec
mov
cli
pop
outs
imul
add
add
xor
pop
sub
in
stos
inc
rcl
imul
retf
jecxz
hlt
cld
pusha
mov
xlat
fstp
rcl
add
mov
jne
outs
or
xor
(bad)
call
cli
jo
lahf
cli
test
mov
daa
cld
ret
sbb
jnp
xchg
and
jae
shr
repz
inc
jle
inc
jmp
test
mov
and
mov
push
clc
inc
inc
sub
jmp
dec
test
(bad)
fidiv
add
and
adc
mov
cmp
movs
sub
setp
fnstenv
cmp
sysret
lods
in
mov
xor
and
xchg
cld
jecxz
sbb
pop
bound
mov
(bad)
fisub
xlat
adc
pop
inc
je
pop
jp
push
out
or
aam
or
and
inc
jmp
sub
xor
mov
dec
xchg
mov
sub
sbb
dec
and
je
je
sbb
mov
adc
xchg
lahf
stc
jg
xor
pop
pop
mov
xlat
xor
mov
(bad)
jae
popf
popa
dec
xor
mov
fwait
aad
clc
mov
mov
dec
(bad)
pop
xchg
fnstenv
rcl
inc
mov
pop
xor
sub
mov
test
push
sbb
sub
jno
push
sbb
sub
jne
inc
add
nop
fmul
inc
je
cli
fmul
xchg
jle
das
push
add
lds
pop
outs
push
cmps
add
pop
in
stos
pop
add
jg
iret
adc
and
shl
lock
add
pop
fbstp
mov
pop
outs
mov
xchg
add
pop
push
retf
inc
and
pop
and
js
sub
and
in
jne
dec
cmc
push
stos
dec
movs
bnd
xor
fwait
call
js
outs
sub
shl
and
push
aas
add
cmc
mov
sub
outs
push
xchg
sbb
xchg
scas
inc
retf
mov
jb
jmp
push
out
stos
pop
cmps
pop
or
or
repnz
xchg
mov
aaa
les
mov
sbb
pop
jecxz
pop
or
inc
cli
cmp
dec
shl
fs
mov
test
dec
rcr
fdiv
jo
adc
lods
iret
mov
mov
mov
dec
(bad)
shrd
out
or
movs
and
jl
loop
add
sbb
ror
loope
sub
cmps
inc
sbb
adc
shr
shl
dec
rcl
sub
cmp
sub
dec
loopne
sbb
push
pop
cmc
jecxz
ds
mov
call
xchg
int
or
shr
fdivr
sahf
jecxz
data16
xor
mov
mov
pop
hlt
mov
in
ret
lahf
and
std
push
mov
cmc
and
sub
jbe
jo
(bad)
retf
sti
mov
cmc
retf
add
or
mov
sub
mov
(bad)
jo
inc
stos
iret
mov
std
mov
repz
cmps
xchg
jbe
in
shr
mov
adc
xchg
pop
add
xchg
dec
add
fsubr
daa
adc
icebp
mov
pop
shl
idiv
jnp
fbld
popf
fist
jg
test
aam
fst
lock
mov
pop
pop
mov
mov
fwait
jmp
push
adc
mov
loop
je
out
jmp
fstp
cld
jp
cmp
lea
and
fwait
ins
popf
sbb
enter
shr
or
stos
mov
movs
outs
ret
or
cwde
fcos
in
popf
movs
pop
pusha
mov
(bad)
xchg
jno
fwait
sub
jmp
(bad)
icebp
or
sbb
dec
pop
ret
xor
adc
fstp
push
sahf
sbb
pop
aas
jle
dec
sub
je
aaa
pop
mov
cmp
mov
mov
sub
jmp
mov
mov
or
lds
fsubr
mov
cmp
hlt
or
cmp
imul
jmp
inc
xchg
jbe
call
sbb
sbb
out
cmp
enter
jmp
pop
ss
push
out
movs
and
mov
adc
jno
std
(bad)
in
cmps
es
add
mov
mov
add
jecxz
add
test
and
jno
cmp
mov
cmp
cwde
adc
jmp
les
sar
mov
xchg
mov
push
push
mov
call
loop
hlt
ret
out
xor
inc
leavew
mov
push
and
in
fptan
adc
scas
fisub
sbb
dec
jp
or
outs
jno
ret
pusha
xor
fmul
fsubr
test
sub
jmp
hlt
mov
adc
loop
push
lahf
aam
push
push
push
dec
cmp
mov
je
outs
fidiv
loope
mov
xor
iret
cdq
or
mov
lods
out
cmp
outs
mov
xor
mov
arpl
popa
sub
add
jno
add
into
stos
mov
sbb
inc
fist
loopne
mov
jae
lahf
add
inc
mov
(bad)
jbe
std
pusha
lahf
bnd
add
jge
mov
push
in
fs
(bad)
(bad)
in
push
(bad)
shr
xor
sbb
sti
jnp
cs
sub
pop
push
and
lods
scas
loopne
xchg
xor
add
mov
hlt
out
xchg
dec
add
sub
sti
xor
mov
in
div
mov
dec
push
inc
xor
loopne
mov
inc
fisttp
call
fisttp
cs
cli
xchg
jle
dec
mov
inc
mov
out
sar
xchg
test
pushf
rcl
mov
scas
frstor
adc
pop
and
cmp
mov
lods
add
jmp
cmp
and
cld
aas
or
inc
les
adc
lods
fisubr
js
jp
movs
fcmove
cmp
mov
scas
xor
aaa
lahf
stos
cwde
mov
js
adc
sub
leave
pop
hlt
in
(bad)
pop
mov
daa
mov
leave
pop
xchg
push
xchg
(bad)
in
lds
hlt
aas
jns
imul
dec
cmp
pushf
fcom
fnstenv
shl
pusha
lods
loopne
into
test
in
sahf
xor
or
jne
test
add
jae
out
cmp
jge
ror
rcr
sub
xchg
adc
jbe
cmp
enter
ins
(bad)
adc
sbb
stc
vpmacssdql
dec
movs
rcr
into
popf
inc
sub
jle
bound
push
test
dec
jmp
hlt
cmps
jne
js
ins
push
push
gs
mov
sub
outs
sub
fsubr
mov
je
xchg
shl
pop
adc
leave
mov
jae
arpl
xor
retf
fimul
push
inc
xchg
mov
adc
lds
and
push
lods
mov
push
and
enter
ins
leave
lea
adc
xor
jge
into
inc
jae
shl
rsm
jp
cdq
mov
adc
sub
pop
xchg
mov
cdq
jp
aaa
inc
adc
mov
xchg
in
push
pop
les
lock
inc
bound
add
jb
js
dec
push
push
int3
jmp
jmp
scas
lods
mov
popa
loop
and
mov
(bad)
cmp
mov
inc
test
das
div
js
cmp
xchg
sbb
cs
push
xor
stc
adc
daa
hlt
in
inc
sahf
hlt
xchg
and
(bad)
les
xchg
push
pop
xor
pop
mov
add
mov
cli
mov
pop
pop
sahf
cmp
sbb
call
rcl
push
xchg
es
push
inc
xor
xor
add
and
jge
fild
add
mov
add
or
fisttp
push
mov
xor
fwait
add
(bad)
cmp
mov
sahf
push
arpl
ja
jge
mov
xchg
lahf
ds
dec
and
out
sbb
(bad)
ror
ja
dec
cmp
mov
xchg
test
or
arpl
xor
push
(bad)
popa
sub
jg
das
cmp
test
jo
stc
cmp
les
add
idiv
mov
push
sub
add
outs
imul
dec
inc
and
fidiv
push
dec
jecxz
(bad)
imul
push
and
mov
mov
cli
push
fmul
imul
(bad)
sar
repnz
sar
in
sub
xor
mov
or
pop
and
popa
repz
cmp
and
leave
aas
stc
test
addr16
imul
icebp
test
adc
cmp
push
push
jp
(bad)
jmp
test
rol
mov
mov
in
adc
push
mov
inc
inc
(bad)
leave
or
push
out
mov
xor
xchg
push
sbb
inc
daa
or
cmp
lahf
into
cwde
hlt
aam
cld
fimul
into
mov
iret
cs
lods
pop
mov
push
adc
jl
push
jb
add
outs
and
inc
xchg
mov
jne
cld
cdq
sbb
inc
mov
add
data16
cmp
mov
imul
rcl
not
inc
aam
and
push
xor
lahf
push
inc
fnstenv
mov
dec
int3
arpl
mov
out
ret
dec
push
add
push
repnz
xchg
sbb
sbb
pop
and
or
out
loope
mov
loope
and
lds
imul
mov
xor
das
cs
stc
sti
jg
jmp
scas
repnz
xchg
outs
(bad)
dec
sti
daa
mov
dec
mov
es
pop
push
pop
pusha
sub
xlat
shl
cmp
repnz
mov
cmp
into
fst
push
or
pop
ss
inc
cmp
mov
mov
cmps
(bad)
or
and
cmc
adc
cmp
xchg
mov
stos
cmps
jle
add
mov
sbb
adc
in
jo
jmp
push
test
jl
xor
cmps
lods
fstp
sub
gs
mov
sbb
fwait
add
out
xor
sbb
sbb
sub
cli
sbb
jae
or
sahf
xchg
dec
mov
fs
ret
and
jnp
pop
xor
jns
push
lods
xor
ds
and
jmp
jmp
in
jp
dec
cdq
stos
jmp
rcr
sub
test
mov
sti
scas
cmps
cld
cmp
pusha
jo
or
popf
fs
test
jns
xor
mov
cmp
mov
hlt
idiv
adc
std
in
jl
sahf
add
les
pop
pxor
rcl
gs
mov
jo
je
add
mov
call
xchg
test
mov
inc
sbb
add
and
mov
sub
popa
lods
pop
mov
cmp
imul
je
add
lods
sahf
mov
aam
dec
mov
mov
hlt
cmp
pusha
adc
lock
mov
jmp
push
push
adc
push
push
push
dec
call
mov
shr
in
pusha
add
pop
mov
adc
dec
inc
xchg
ins
aad
retf
sahf
outs
shl
dec
loop
add
pop
and
xchg
mov
cmp
xor
jo
mov
mov
xor
ror
jbe
mov
inc
repnz
cld
out
in
scas
test
dec
mov
icebp
cmp
pop
stos
(bad)
adc
hlt
mov
(bad)
cs
(bad)
arpl
xor
pop
idiv
push
lods
rol
loop
xlat
adc
or
sub
leave
push
cmp
ud2
outs
aaa
jle
pop
imul
jmp
cld
fs
loopne
cmp
sub
xlat
inc
cmp
push
ret
sub
sahf
aam
repnz
or
imul
fwait
imul
dec
ja
jbe
fld
mov
xlat
or
jge
sbb
or
sub
aas
add
push
les
push
ret
push
imul
adc
stc
lea
mov
push
in
fwait
int3
add
sub
xor
cmps
cmp
inc
sbb
xchg
mov
dec
xor
adc
cmp
stos
rol
in
xchg
(bad)
hlt
push
cwde
mov
push
pop
outs
mov
fxtract
mov
stos
pop
in
lea
pop
pop
mov
test
add
xchg
and
aas
xor
xchg
retf
adc
jecxz
mov
pop
iret
retf
mov
addr16
sbb
and
xchg
inc
bound
jmp
cmps
xchg
inc
test
imul
outs
push
(bad)
pushf
jae
or
rol
mov
nop
in
mov
jecxz
cmps
jb
bound
loope
sub
mov
cs
out
dec
stc
cmp
pop
dec
xor
pusha
repz
xor
add
xor
cmp
sar
fldenv
gs
ret
mov
ret
and
push
push
xor
(bad)
repz
and
lods
cld
push
mov
jecxz
jns
ins
loop
(bad)
sti
(bad)
fdiv
ret
je
or
push
push
outs
dec
jecxz
push
loopne
aas
mov
aam
xlat
je
cmps
or
cmps
mov
clc
xlat
je
test
add
mov
mov
div
cmp
fcmovb
test
jl
xor
mov
and
push
xor
jo
lock
pop
sub
xchg
push
int
daa
push
je
push
xor
data16
or
rol
fiadd
pop
and
pop
cdq
loop
outs
(bad)
add
mov
(bad)
xor
pushf
popa
mov
push
dec
dec
inc
leave
out
mov
daa
aam
(bad)
sbb
jns
xor
loope
mov
pop
xchg
fst
cmp
cs
add
cli
inc
jl
(bad)
sub
ror
call
mov
sub
adc
shufps
push
and
jns
jns
inc
jl
or
pop
test
repz
dec
xchg
xchg
imul
add
sub
retf
pusha
dec
pop
aam
rcl
cmp
enter
sub
adc
popa
arpl
adc
xchg
lods
mov
and
jmp
icebp
into
jmp
adc
lfs
xor
xchg
adc
cmp
sbb
pop
cmp
jecxz
and
lds
or
in
mov
xchg
fbstp
or
inc
adc
jle
repnz
in
adc
shl
outs
lahf
je
icebp
shl
iret
push
mov
inc
xor
mov
and
les
(bad)
ficom
aaa
cmps
in
pop
xor
pushfw
vpunpcklbw
inc
dec
ins
rol
sbb
cmp
mov
icebp
(bad)
fist
jg
jle
sti
add
mov
sub
sbb
xchg
mov
outs
mov
mov
xor
repz
dec
cwde
cmp
add
or
std
lahf
or
not
inc
mov
stos
mov
out
pop
ret
fcom
mov
lahf
loop
pop
push
mov
stc
xor
or
sub
ins
cmc
push
dec
mov
retf
sub
mov
jns
inc
cdq
cmp
inc
jne
xchg
dec
jae
movhps
mov
outs
inc
out
mov
clc
in
fs
stos
inc
sub
jns
int
or
dec
loope
mov
dec
imul
or
push
aad
stos
fldcw
(bad)
int3
fwait
test
leave
lahf
jb
mov
xchg
or
fimul
inc
mov
(bad)
daa
out
cld
loopne
es
retf
and
jbe
xchg
dec
cmp
sti
adc
ds
sub
mov
push
inc
push
sub
mov
mov
dec
cmp
dec
adc
ins
fdivr
jg
sbb
std
test
push
(bad)
fsub
call
cdq
loopne
xchg
mov
adc
push
js
shr
jns
fsubr
sub
sub
lock
cmp
ins
and
sub
mov
pop
jbe
inc
or
mov
cmp
andps
mov
nop
inc
inc
fisubr
push
add
pop
ds
and
dec
std
test
sub
fs
mov
ins
std
lods
fisub
sub
leave
out
jmp
fidivr
and
mov
dec
sub
div
sub
loopne
sub
sbb
xchg
cmc
icebp
jae
in
aad
iret
lea
test
xor
call
mov
shr
outs
test
test
sub
cs
xchg
sub
das
pop
movs
adc
inc
sub
sbb
mov
repnz
int3
and
adc
call
aad
imul
imul
or
or
movs
(bad)
ds
jo
mov
js
into
mov
jge
inc
sbb
xchg
pusha
(bad)
push
(bad)
or
test
jne
and
hlt
pop
iret
pop
jmp
jg
es
inc
push
sub
and
shr
mov
test
imul
enter
dec
mov
fstp
fwait
xor
ja
movs
mov
and
xor
and
fs
js
out
pop
aaa
in
inc
mov
dec
add
lahf
adc
or
call
xchg
in
imul
aad
je
rol
retf
cmp
ja
xchg
clc
stc
jmp
cld
inc
adc
and
inc
adc
dec
mov
test
retf
jae
mov
cmps
xlat
or
ins
retf
sub
test
mov
popf
dec
cwde
mov
jbe
arpl
call
sar
test
in
cmps
jmp
cmps
cdq
sti
inc
or
call
aam
jg
mov
mov
xor
jmp
add
cmp
and
je
inc
pop
js
or
rcl
(bad)
pop
int3
fimul
sub
or
je
in
clc
loop
jmp
pusha
cmp
fnstcw
dec
jp
or
out
xchg
push
(bad)
int
cmps
mov
loope
ss
jb
adc
inc
mov
retf
or
pusha
(bad)
popf
or
push
jns
pop
cmps
add
push
fcmovnu
or
adc
pop
popf
lock
jl
jmp
cwde
(bad)
loopne
xor
adc
jg
mov
int3
outs
push
aaa
(bad)
into
xchg
push
retf
push
jmp
gs
mov
repnz
add
popf
mov
popa
pop
fmul
cmp
sbb
push
mov
adc
push
or
into
sti
div
adc
add
pusha
inc
adc
mov
test
retf
mov
jmp
dec
xor
pop
fucomi
xor
lds
invd
cld
popf
fild
dec
pusha
jo
jb
into
dec
in
inc
mov
and
fsub
mov
in
clc
xlat
jmp
or
cmp
jmp
or
inc
jmp
outs
add
dec
push
push
sbb
out
scas
mov
and
mov
sbb
ss
add
mov
and
and
lea
pop
in
push
xchg
xchg
sbb
hlt
sub
xchg
push
jmp
jmp
imul
cmp
or
sti
fcomp
xor
dec
nop
jl
add
ins
call
outs
sbb
sub
into
pop
aas
mov
xchg
pop
out
or
xchg
add
inc
adc
es
out
push
mov
and
dec
sub
mov
shl
scas
mov
xchg
jmp
fisub
dec
dec
sub
outs
lods
xor
push
or
jecxz
das
dec
js
lods
in
cli
xor
push
aas
jg
sbb
ja
sbb
movs
mov
je
xchg
adc
and
pop
adc
pop
leave
pop
rcr
pop
fist
xchg
xor
pusha
je
mov
dec
xchg
inc
aad
xor
mov
push
fiadd
fs
retf
adc
jg
or
(bad)
xlat
popa
add
add
in
(bad)
enter
pushf
(bad)
div
jle
mov
push
mov
or
mov
push
(bad)
inc
lock
fmul
sar
xchg
push
mov
movhps
xchg
fcomip
stc
mov
jno
call
leave
jg
jae
mov
dec
jmp
jle
cmp
bound
add
icebp
adc
mov
dec
pop
sub
test
inc
pop
hlt
sbb
jp
rcr
vpunpcklwd
add
pushw
inc
mov
sub
pop
lods
stos
push
ins
mov
mov
cmp
pop
adc
jge
nop
mov
lock
ss
xchg
sub
ret
into
push
jo
rcl
adc
ins
and
add
in
outs
inc
pop
xchg
in
dec
bnd
sbb
cmps
xchg
xchg
sub
jne
xchg
sub
lods
popa
das
retf
pop
int3
fwait
push
arpl
jp
js
xor
pop
je
pop
(bad)
adc
push
sbb
mov
and
cmp
xchg
jns
daa
add
pusha
sub
add
mov
inc
xchg
push
push
jg
dec
sub
inc
imul
cmp
pop
jbe
jecxz
mov
push
in
scas
loopne
mov
mov
sbb
shl
xor
cwde
pop
or
pusha
pop
sbb
xor
push
dec
retf
xchg
clc
and
or
mov
sbb
popa
or
pop
mov
inc
shr
sub
inc
les
(bad)
test
push
sti
xchg
hlt
js
inc
std
jae
in
inc
out
push
cmps
cmp
pop
call
and
cmp
sub
mov
push
sub
jmp
jg
inc
fstp
sub
into
in
cmp
mov
repnz
in
stos
out
loop
jmp
ds
xchg
add
jge
(bad)
push
or
cs
mov
int3
popa
sub
out
fs
cmps
jno
xor
sbb
inc
fbstp
mov
jno
out
sbb
xchg
jge
les
dec
xchg
inc
or
test
mov
or
mov
out
shl
sbb
adc
cdq
ret
repnz
rcr
data16
and
inc
outs
mov
pusha
add
inc
cmp
je
dec
retf
sub
lea
cmps
push
retf
push
or
popf
jle
xlat
int
sti
pop
xchg
neg
(bad)
mov
iret
pop
jmp
sub
cwde
iret
cmp
test
movs
stc
dec
pusha
test
pop
movs
imul
mov
mov
and
add
xchg
or
pop
push
inc
imul
cmp
mov
test
pop
mov
push
outs
inc
dec
mov
jle
rol
mov
gs
in
cmc
jno
mov
add
out
jg
jecxz
fdiv
xor
mov
das
dec
(bad)
ins
test
popa
xor
or
mov
fwait
test
push
cmp
sbb
movs
sti
adc
shr
in
inc
jg
sub
(bad)
mov
pop
sub
xlat
out
mov
pop
retf
mov
cmp
cmp
int3
fnsave
cmp
fimul
cmp
mov
push
in
mov
cmp
pop
pop
cs
mov
lahf
jb
adc
pusha
cmp
dec
xor
jno
jns
xchg
add
loopne
jns
pop
push
adc
push
mov
add
push
jmp
lods
cmc
out
dec
mov
jecxz
add
(bad)
dec
xor
dec
rcr
hlt
imul
push
nop
jl
mov
or
dec
jnp
ins
push
sub
or
sub
mov
int3
retf
gs
sar
div
mov
fidiv
aad
add
push
mov
sti
cmp
xlat
push
gs
adc
jl
pop
cmp
cmc
mov
icebp
hlt
or
adc
cmp
cli
popa
jne
or
loopne
je
test
mov
sub
jns
sub
mov
push
sbb
cmp
mov
adc
jno
xor
sahf
pop
ret
cmp
jb
imul
rcl
(bad)
cli
leave
xchg
inc
inc
sahf
pop
mov
pop
pop
stos
pop
mov
pushf
cmps
cld
sbb
adc
es
ss
clc
fs
loop
cmc
adc
and
mov
lock
pop
sahf
mov
mov
icebp
dec
pushf
in
out
push
sar
and
dec
imul
or
and
cli
(bad)
jl
mov
pusha
lahf
icebp
sbb
movs
dec
pop
popa
test
pop
lods
ror
shl
or
bound
jmp
cmp
adc
das
xor
sub
mov
sbb
or
sub
(bad)
mov
jecxz
fcomp
jmp
or
mov
aaa
leave
nop
add
mov
and
loope
pop
cmp
das
sar
aas
jmp
add
push
stos
cld
add
loop
scas
ret
int
push
xor
cmp
pop
sbb
sbb
xlat
sbb
into
jbe
xchg
or
cmps
xor
je
sti
(bad)
test
js
add
enter
repnz
into
in
xchg
xchg
mov
sti
add
add
rcl
jns
xchg
xlat
push
lods
sti
nop
sub
imul
imul
cmc
push
mov
dec
mov
adc
daa
add
repnz
sti
jo
jle
adc
jne
mov
rcl
idiv
push
sahf
push
mov
dec
add
arpl
cmp
xor
repnz
cmp
xor
inc
inc
jecxz
ds
or
es
jnp
mov
xchg
or
and
int
(bad)
xlat
(bad)
cmps
out
sti
jmp
(bad)
aad
xor
fst
adc
mov
sub
scas
mov
sub
push
jp
mov
jnp
les
in
inc
std
imul
push
sahf
stos
cmc
fld
jne
sbb
clc
dec
and
adc
mov
iret
(bad)
mov
adc
idiv
ds
adc
(bad)
(bad)
data16
push
jmp
xchg
xor
(bad)
retf
push
popa
popa
in
inc
or
cmc
adc
mov
std
not
retf
pusha
mov
stos
mov
in
xor
aad
shl
mov
sti
cmp
sti
pop
cmp
fisttp
stos
dec
int
sbb
jle
lods
dec
pop
sub
mov
out
leave
shl
lods
dec
adc
jl
popa
push
mul
and
std
mov
jle
adc
bound
mov
cld
hlt
dec
cmp
daa
fdivr
lods
push
fiadd
add
imul
gs
mov
xor
cli
xor
sbb
add
xor
push
leave
inc
or
mov
fld
test
push
fnstenv
mov
mov
mov
add
in
and
shl
push
clc
dec
adc
xchg
push
call
ins
cmp
push
fadd
sbb
adc
mov
lods
sub
into
or
push
push
ffree
cld
test
adc
push
sbb
xlat
scas
mov
adc
inc
scas
daa
out
cmp
sub
dec
pop
adc
fs
out
jb
or
mov
lahf
clc
adc
jecxz
popf
into
dec
es
push
dec
xchg
inc
mov
lods
add
or
ret
xlat
inc
mov
xor
push
div
idiv
cmc
sub
into
adc
xor
add
out
add
lock
cmp
dec
lods
and
outs
dec
shl
inc
mov
mov
dec
popa
pusha
sahf
lea
loop
in
jbe
(bad)
xchg
add
sti
sbb
pop
adc
inc
jecxz
sub
test
push
push
sbb
xchg
xor
pop
call
mov
add
out
mov
mov
les
xchg
push
mov
data16
pop
dec
mov
sub
test
adc
jo
(bad)
gs
xchg
call
and
leave
ins
mov
add
push
test
jmp
add
pop
inc
mov
loopne
xor
jle
cs
xchg
xchg
bnd
jg
cmp
imul
jns
test
and
fsub
sbb
xor
lock
xchg
rcl
ss
adc
out
mov
adc
cmp
mov
jae
push
cmp
call
out
fdivr
and
inc
inc
int3
mov
cmp
arpl
stos
cwde
call
dec
retf
js
push
adc
cmp
daa
call
pop
push
enter
call
enter
icebp
and
mov
mov
test
jo
inc
mov
outs
cmp
ja
(bad)
outs
call
mov
jmp
out
loopne
add
test
cmp
loopne
sub
dec
(bad)
js
cmp
stos
sbb
xor
push
cdq
lds
jg
sbb
pop
cmp
sbb
adc
(bad)
mov
iret
add
dec
jle
xchg
xchg
mov
cdq
inc
adc
cmp
push
add
sub
enter
test
neg
xor
push
out
loop
imul
movs
add
fwait
sub
pop
in
add
push
push
add
stos
or
add
sahf
ret
push
vshufps
mov
or
jge
js
pop
ret
or
xor
stos
pushf
jbe
cmps
jnp
into
or
pop
xlat
out
gs
fcom
push
jne
jge
loop
cmp
xor
jge
pop
jg
jae
pop
mov
push
or
(bad)
arpl
ds
or
jle
das
mov
push
shl
and
mov
inc
push
into
cmps
dec
mov
stc
out
mov
add
mov
jmp
or
ss
add
and
dec
clc
sub
ja
fbstp
(bad)
mov
add
dec
popf
in
inc
push
cdq
lock
jo
out
adc
and
dec
in
or
icebp
or
push
cwde
ror
lds
mov
in
inc
cli
rcl
mov
xchg
jmp
sub
add
mov
gs
les
stos
repnz
addr16
mov
push
adc
mov
scas
ficom
rcl
xchg
inc
inc
aam
popa
push
cld
int3
lock
cli
out
pop
and
dec
sub
loopne
fs
push
dec
ins
mov
pop
sti
mov
xor
add
lods
jnp
inc
push
js
add
jno
mov
dec
mov
test
or
add
sbb
ins
add
in
sub
stos
mov
pop
mov
add
movs
dec
push
cwde
movs
test
jae
mov
inc
imul
xchg
push
arpl
adc
mov
js
(bad)
sbb
xchg
sub
jle
dec
mov
inc
ins
mov
xchg
or
fs
jno
or
xor
out
sbb
fbstp
arpl
mov
inc
cld
push
out
adc
ins
pushf
mov
rol
lods
jmp
ss
in
mov
cmp
mov
xchg
pop
cwde
pushf
or
jge
push
sub
retf
movs
rcr
fadd
cli
sahf
dec
icebp
int3
cdq
sbb
mov
adc
push
jbe
mov
push
xor
pop
jb
call
aas
popf
lock
fnsave
daa
adc
hlt
movs
jns
xor
push
out
cli
sti
test
sbb
sub
cmps
jb
test
iret
mov
mov
and
rcr
scas
mov
movs
push
add
push
(bad)
test
push
dec
jo
in
fdivp
pop
sbb
stos
push
mov
mov
test
jb
cld
(bad)
retf
push
movs
mov
test
cmp
out
ja
xchg
xchg
dec
mov
sub
call
push
push
repnz
sbb
mov
cmps
xor
and
(bad)
js
and
in
movs
retf
inc
push
in
jno
mul
inc
pop
das
add
pop
adc
es
xlat
out
loopne
xchg
or
xchg
fld
shl
loope
cmp
scas
scas
test
pop
add
xchg
ins
and
sar
and
jb
jge
push
xchg
jne
push
pop
push
pop
xchg
xchg
cld
imul
sub
out
cdq
mov
fisubr
mov
repnz
mov
data16
cmp
or
push
aas
or
push
mov
sub
add
xchg
out
ja
sub
out
arpl
sub
cmp
mov
inc
xchg
push
dec
leave
jp
jl
jl
inc
or
or
test
popf
or
xor
mov
int3
or
mov
movs
xor
push
adc
int3
sub
iret
mov
cmp
or
xor
sti
iret
pop
mov
push
aas
mov
jge
or
or
adc
mov
int
mov
dec
jne
or
(bad)
leave
in
xchg
mov
mov
aad
pop
rcr
pop
inc
test
sbb
arpl
pop
(bad)
pop
loop
jg
push
loope
add
push
xor
lds
nop
mov
push
cmc
jmp
ins
int3
add
adc
dec
stos
daa
mov
pop
retf
test
push
movq
test
xchg
sub
sub
push
push
jp
int
(bad)
ret
mov
enter
pop
sub
add
out
jno
mov
cs
nop
and
(bad)
outs
and
pop
mov
(bad)
(bad)
push
aas
dec
ss
xchg
sub
hlt
bound
shl
stos
setg
cwde
hlt
stos
int3
je
loop
out
pop
into
cmp
stc
out
cmps
(bad)
imul
pop
fsubr
cld
add
in
jne
or
imul
fprem1
dec
and
cs
xor
jae
jp
and
add
js
cmp
mov
fstp
into
das
push
nop
xchg
sar
sbb
dec
(bad)
lods
xchg
sbb
inc
xchg
lods
movs
cmp
add
scas
xchg
test
push
jge
and
or
stos
xchg
stos
lock
sbb
addr16
or
push
push
xor
fs
ret
popa
sub
mov
push
pop
jne
test
inc
out
retf
cmc
ror
add
icebp
(bad)
loopne
pushf
push
int3
div
aaa
dec
push
into
ins
ds
jne
pop
stos
pop
xchg
jbe
mov
stc
cmp
pop
lods
iret
push
adc
or
mov
ffreep
scas
std
stos
sbb
imul
xlat
add
int3
add
or
mov
mov
sub
lock
push
call
xchg
dec
mov
push
mov
push
dec
in
into
adc
jp
jne
pushf
xchg
sbb
xchg
test
stc
mov
xlat
(bad)
sub
and
sbb
(bad)
div
xchg
repz
mov
push
out
sub
es
mov
xchg
cdq
ins
es
rcl
lock
inc
adc
inc
push
jecxz
xor
jmp
ja
loope
pop
pushf
cmps
push
adc
ficomp
les
shl
popa
call
call
xor
or
fwait
adc
jge
js
and
xchg
pop
leave
div
jae
jnp
inc
cmp
loop
popa
jo
add
into
pop
mov
adc
pop
push
das
dec
pop
add
lds
addr16
ss
sub
fstp
mov
(bad)
push
dec
das
pop
fsubr
stos
les
in
bound
aad
cdq
(bad)
sti
repnz
cmp
pop
dec
popa
icebp
dec
add
xor
cmc
jns
sub
shl
stc
mov
cmp
loop
pop
xchg
in
inc
daa
xchg
add
jbe
jmp
cli
loopne
xchg
sbb
or
mov
xor
push
gs
lods
mov
je
add
dec
dec
pop
das
inc
in
idiv
aaa
sub
not
inc
mov
and
cmp
js
xor
mov
add
dec
(bad)
cmp
dec
lock
inc
call
sub
jg
ficom
sti
jl
fisub
ins
fmul
stos
mov
add
dec
sahf
ret
jge
pusha
push
mov
push
leave
push
ins
jmp
lahf
lods
adc
xor
movs
or
imul
cld
icebp
fwait
daa
es
or
and
mov
jmp
jb
mov
stc
fdivr
fimul
add
jbe
aam
in
ja
mov
bound
inc
mov
adc
jbe
mov
xor
xchg
call
jns
mov
jecxz
stos
xchg
(bad)
clc
in
cli
jl
dec
sbb
stc
pop
movq
bound
(bad)
rcr
jne
sub
push
ja
stos
pop
add
pop
mov
out
or
shr
pushf
movs
jae
push
or
imul
in
call
push
fisubr
or
stos
and
loop
xchg
and
mov
lds
pop
inc
inc
jle
sti
jbe
xor
xchg
push
push
xchg
daa
fadd
push
push
jnp
xchg
add
push
add
pop
mov
cmp
cld
fild
sub
out
pop
repz
cwde
ret
out
out
aam
xor
loopne
add
dec
sbb
pop
ret
out
jae
setb
enter
rcl
fimul
clc
dec
popa
cli
jp
inc
pop
fisub
sbb
jg
fimul
pushf
sub
fsubr
add
jmp
iret
int
hlt
sub
out
sbb
(bad)
pop
xchg
mov
dec
inc
pop
sbb
add
stos
sub
and
iret
mov
jmp
inc
jne
mov
aaa
outs
mov
or
jne
push
jae
(bad)
mov
mov
or
fstp
imul
(bad)
and
sbb
repz
push
pop
cmp
(bad)
popf
pushf
xchg
fistp
xor
mov
jge
out
pop
or
loope
cmp
jmp
clc
test
xor
adc
data16
mov
jns
or
push
(bad)
in
sar
lds
dec
sti
movs
cmps
cmps
inc
or
(bad)
mov
or
sbb
cmp
and
or
scas
js
cmp
std
in
cwde
(bad)
mov
mov
sbb
sub
scas
push
jae
lock
das
pushf
icebp
cmp
sub
loopne
leave
mov
xchg
mov
cs
cmp
mov
icebp
cmc
jb
push
int
pop
sti
jmp
iret
sbb
pop
rcl
xor
(bad)
dec
fsub
xchg
out
jb
jmp
adc
outs
loopne
push
xchg
ja
sub
iret
adc
adc
fwait
mov
scas
push
in
mov
mov
add
mov
inc
pop
out
hlt
shl
int3
pushf
push
cmc
scas
mov
(bad)
cmp
mov
(bad)
test
pop
cmps
sti
scas
stos
pop
xor
aaa
pop
retf
std
fs
ffreep
hlt
or
inc
xlat
or
test
aam
mov
add
inc
fs
push
push
movs
js
xor
lods
cwde
add
aad
xchg
ss
ficom
pop
repz
fbstp
hlt
out
xchg
lock
jle
dec
add
add
mov
cmp
pusha
pop
mov
iret
xor
xor
shr
and
fsubr
inc
cli
shr
push
or
out
push
or
add
cmp
loop
int
pop
dec
inc
pop
push
psubq
sti
ret
ss
pop
cmp
fcom
or
adc
shr
loop
sbb
retf
and
push
xor
push
fld
test
sar
sbb
fld
jae
inc
mov
fist
cli
retf
fst
jns
lock
stos
cmp
cmp
aad
ficom
adc
(bad)
and
cmp
mov
inc
sub
lds
pop
stos
jae
mov
mov
jb
inc
cwde
dec
fcmove
movs
sti
push
out
jne
es
fucomp
and
fmulp
mov
xlat
xor
movs
popa
ss
dec
xor
mov
jnp
pop
cmp
mov
fild
test
shr
icebp
jecxz
ja
scas
and
adc
mov
mov
inc
sub
adc
in
push
stos
jp
aad
mov
in
scas
fs
jecxz
adc
pop
pushf
and
xlat
sub
jg
dec
xor
mov
adc
xor
test
or
dec
mov
add
cli
pop
mov
dec
cmp
rcl
outs
push
retf
xchg
jg
pop
inc
add
cmp
sub
gs
inc
ss
jp
popa
in
hlt
cmp
adc
dec
mov
dec
into
mov
js
xlat
mov
std
jg
pop
bound
ja
(bad)
outs
int3
pop
jge
arpl
xor
imul
stos
repz
cmps
inc
call
adc
das
out
xchg
push
fcom
push
pop
add
imul
aam
sub
mov
cmp
push
pop
sub
dec
cmp
out
xor
stos
loopne
xchg
outs
sbb
js
pop
scas
mov
xlat
(bad)
xchg
ret
mov
mov
dec
push
icebp
lock
sahf
repnz
repz
pop
je
hlt
sbb
sti
fadd
sub
fadd
jns
icebp
mov
stos
or
jbe
outs
hlt
pop
add
sub
xchg
pop
daa
test
(bad)
sbb
dec
sub
(bad)
or
js
inc
loopne
test
out
ret
xchg
out
daa
and
pusha
jno
mov
xor
xchg
inc
pop
mov
sti
aad
ss
imul
xor
push
in
mov
fsubr
or
mov
xlat
push
mov
adc
iret
ss
test
rcl
in
push
adc
xor
enter
pop
lea
inc
out
in
jmp
mov
dec
rol
ss
and
in
jnp
sub
call
and
mov
into
push
add
pop
int3
or
sbb
lods
es
mov
adc
or
ins
jmp
imul
ret
sub
clc
fistp
out
rcl
jns
stc
fst
sub
adc
push
pop
xlat
(bad)
fiadd
lahf
cmp
jmp
inc
cmp
and
montmul
cmps
push
add
pushf
pop
stos
or
sub
add
ja
fisubr
stos
sbb
imul
xchg
repnz
pop
mov
xchg
pop
mov
mov
test
cmp
mov
cmp
imul
adc
xlat
out
stos
cmp
or
mov
les
dec
mov
lahf
xchg
loop
hlt
mov
and
mov
inc
mov
retf
jecxz
mov
pusha
retf
out
adc
add
(bad)
repz
out
pop
jns
fisttp
or
inc
imul
lds
popf
mov
repz
mov
inc
es
dec
mov
addr16
(bad)
pop
outs
daa
std
loop
cmp
or
(bad)
and
aad
hlt
mov
movs
pop
test
ins
mov
push
sub
das
loope
leave
(bad)
or
add
mov
sub
cli
into
push
jmp
jb
nop
dec
and
imul
xchg
stos
cmps
pusha
push
push
imul
jecxz
aad
or
ins
push
fidivr
pop
mov
dec
imul
scas
jbe
add
std
cdq
sub
das
cmp
jbe
and
jmp
call
xchg
cmp
adc
and
popa
inc
(bad)
or
js
cmc
inc
cmps
mov
mov
aas
xor
sub
lahf
push
or
gs
add
ds
ins
sub
jmp
fadd
push
fdiv
adc
fwait
rcr
(bad)
(bad)
sbb
jle
cmp
pop
mov
aad
cmc
sub
cmp
mov
mov
adc
dec
mov
lods
nop
(bad)
jp
xchg
sub
pop
ucomiss
ret
lods
cmc
mov
fstp
push
not
sbb
out
out
xchg
fcmovnb
mov
repz
repnz
mov
pop
icebp
fwait
aas
cmc
cdq
or
ins
retf
ret
das
xchg
mov
cld
fnstsw
jne
push
push
cmp
cmp
test
xchg
in
retf
mov
ja
in
inc
jl
movs
push
or
(bad)
ror
repz
pop
sbb
jg
pop
rol
xchg
inc
dec
and
inc
retf
sbb
mov
dec
sbb
cmp
or
cmp
popf
jp
pshufw
mov
mov
xor
xchg
and
gs
(bad)
fnstcw
mov
lock
stc
lods
dec
fwait
pusha
jp
out
lock
and
cmp
xlat
xchg
or
jb
jmp
or
push
jno
mov
xor
rcl
fs
hlt
lock
dec
sub
es
fmul
sub
icebp
add
dec
icebp
add
dec
mov
jns
and
add
push
pop
push
pop
jecxz
sub
rcl
pusha
fisttp
(bad)
sti
adc
rcr
sub
jae
popa
fisub
sub
mov
sub
call
pop
jns
test
cmp
shl
fwait
or
scas
jg
popf
add
mov
rcr
mov
(bad)
(bad)
rcr
mov
adc
push
pushf
in
repnz
repnz
je
cs
js
pop
mov
jg
xor
sbb
cmp
push
mov
mov
xchg
fwait
stos
cmps
dec
xor
xchg
pop
outs
cwde
je
shld
pop
xor
inc
out
fiadd
ror
dec
fnstsw
ret
push
pop
dec
add
test
or
lods
jp
test
jno
mov
mov
mov
dec
xlat
jmp
aaa
mov
enter
leave
or
sbb
pop
jg
sbb
sti
mov
add
adc
sbb
mov
pop
jge
sub
imul
and
sub
push
mov
mov
mov
add
fsubrp
lock
cmp
or
push
push
mov
xor
or
(bad)
retf
xchg
jp
xor
cmp
in
outs
xchg
jl
gs
dec
ins
(bad)
xor
cdq
xor
push
lock
aas
mov
sbb
mov
mov
fbld
rcl
adc
out
cld
fild
imul
lods
sbb
pop
push
dec
pop
cmp
jae
mov
pushf
jns
lea
inc
sahf
scas
retf
mov
(bad)
(bad)
jne
pop
and
or
mov
cmps
cmp
or
pop
cmps
push
dec
sbb
pop
(bad)
rcr
ins
push
lahf
adc
jg
test
(bad)
ja
push
add
and
repz
test
xchg
sti
inc
mov
push
or
jmp
dec
sbb
jl
sbb
cmps
sar
cli
mov
sub
cmps
adc
xchg
xchg
std
jl
imul
ja
push
inc
or
into
jnp
xlat
out
jle
(bad)
int
imul
mov
test
or
mov
jne
mov
xchg
mov
in
mov
imul
xlat
pop
std
or
add
pop
sub
clc
in
stc
into
sbb
xchg
call
bnd
outs
je
add
shl
pop
jl
jae
xor
(bad)
sti
rcl
jg
retf
lea
xchg
dec
cmp
pop
sub
in
push
fdivr
in
pop
mov
xchg
pop
js
dec
jnp
or
mov
xlat
mov
jns
sbb
jle
and
je
mov
ds
daa
xor
fdiv
fsubr
cmp
inc
cmp
cmp
sub
outs
pusha
out
lahf
sbb
and
jle
aas
adc
arpl
hlt
add
pop
adc
adc
icebp
fist
dec
push
out
jns
lock
imul
stos
mov
push
movs
dec
cdq
test
push
jno
cmp
mov
inc
int3
retf
xchg
pop
jne
adc
outs
cmps
mov
push
add
xchg
imul
fwait
inc
or
fstp
push
adc
jnp
jae
xchg
lods
bound
nop
ss
xchg
enter
cmps
jns
inc
aas
sub
arpl
mov
push
retf
xchg
(bad)
adc
pop
retf
inc
mov
in
fisubr
push
iret
and
fwait
add
retf
neg
jno
inc
dec
std
push
lods
(bad)
(bad)
add
or
sub
jl
cmps
dec
sar
cmc
inc
and
sub
mov
data16
adc
and
aam
mov
adc
dec
enter
sub
xor
push
sub
sbb
out
add
out
clc
jecxz
leave
cmp
mov
mov
ds
dec
or
mov
out
add
fmul
movs
sbb
bound
jg
(bad)
rcr
add
je
test
in
mov
dec
xor
arpl
sar
jae
loope
sub
(bad)
pushf
xchg
push
loope
mov
mov
int3
fbld
and
cmps
repz
dec
jne
je
ret
push
xchg
sbb
imul
xchg
dec
inc
dec
mov
retf
add
inc
dec
mov
add
and
ins
fild
and
and
inc
aas
movs
pop
add
loopne
cmp
xchg
repz
cdq
std
fs
jo
xchg
lods
call
scas
out
or
push
in
and
adc
ds
fcom
xor
ins
std
xor
sbb
leave
pop
push
xchg
adc
dec
int
test
xchg
imul
sub
scas
(bad)
enter
mov
and
sub
addr16
enter
jne
push
pop
fstp
xchg
and
lea
inc
std
inc
adc
mov
pop
ret
inc
sbb
test
sbb
dec
shl
shl
retf
daa
mov
pop
popf
jb
mov
mov
cld
cli
and
cmp
lea
jle
xchg
pushf
out
dec
es
xor
add
retf
xlat
mov
adc
in
test
icebp
ret
and
jl
push
clc
add
mov
pushf
jmp
xchg
fsub
sbb
pop
jmp
test
movs
in
pop
out
je
push
add
call
stos
(bad)
cld
mov
mov
push
mov
gs
aas
loop
sbb
xor
retf
lds
cmp
sub
fdiv
loop
das
call
pop
add
dec
mov
div
mov
(bad)
daa
test
sbb
sub
cwde
add
mov
mov
pop
lods
shl
ins
sub
out
repnz
fist
leave
and
sub
pop
and
pop
add
call
frstor
cdq
jb
js
ins
call
rcr
icebp
or
(bad)
(bad)
hlt
ret
adc
mov
cmp
je
popa
xor
sub
xor
(bad)
sub
inc
sub
jne
jne
test
data16
mov
jb
xor
in
push
inc
js
push
stos
pop
push
xlat
out
enter
scas
cmp
ret
(bad)
cli
mov
mov
push
adc
inc
cmp
(bad)
addr16
lock
(bad)
leave
ret
jne
mov
iret
add
and
outs
pusha
hlt
(bad)
jl
or
xlat
inc
dec
scas
jecxz
push
jne
inc
arpl
xor
xor
lods
iret
dec
ss
jmp
cdq
test
or
push
xchg
sub
xor
pop
inc
xchg
mov
out
mov
and
mov
push
(bad)
es
sbb
pop
sbb
adc
jp
cwde
inc
fs
mov
repz
aam
cmp
and
test
shl
outs
movs
sbb
mov
mov
and
adc
lods
sub
fimul
stos
call
cmp
pop
add
aas
mov
test
add
out
pusha
in
les
and
sar
add
call
pop
xchg
jecxz
(bad)
adc
test
xor
push
xlat
and
cmp
cmp
pop
lds
fild
gs
or
aam
in
(bad)
cli
scas
ficom
dec
cwde
adc
in
sbb
das
jae
pop
xor
cmp
lahf
dec
imul
test
dec
jecxz
fdiv
jg
mov
push
sub
aaa
push
add
test
in
sub
loopne
or
xchg
std
push
jge
mov
nop
cmc
push
push
shl
ficomp
push
int3
bound
test
jge
mov
jmp
ficom
fisub
mov
pop
dec
nop
mov
loopne
jmp
add
stos
retf
dec
sub
sbb
ror
jle
inc
push
or
out
cmps
jno
scas
ficomp
sar
inc
xor
lea
push
pop
into
ss
jb
mov
inc
scas
rcr
pop
cmp
add
xor
pop
sar
sbb
ret
(bad)
mov
fsub
pop
and
cld
push
dec
mov
mov
fcom
push
mov
inc
imul
imul
stc
hlt
cmp
xlat
mov
push
xchg
pop
xchg
push
jmp
mov
inc
add
data16
(bad)
mov
aam
cmps
mov
add
sbb
xchg
inc
jmp
(bad)
jl
ror
and
push
xor
test
mov
popf
fsubr
ins
sbb
nop
push
addr16
adc
loope
mov
mov
xchg
add
cmp
push
push
jbe
push
mov
xor
cmp
ins
dec
(bad)
mov
stos
jnp
add
pop
ja
out
or
div
and
(bad)
jns
fwait
push
dec
cmp
cmp
mov
push
mov
mov
xor
or
xchg
xchg
test
(bad)
frstor
(bad)
mov
fs
(bad)
pop
mov
xchg
dec
mov
mov
scas
hlt
lods
scas
div
fcom
leave
cmp
dec
imul
dec
cs
inc
mov
push
xor
adc
and
adc
mov
inc
(bad)
cmp
mov
mov
mov
xchg
imul
and
arpl
dec
(bad)
repz
sbb
sbb
inc
mov
xchg
dec
mov
mov
mov
mov
mov
push
mov
cs
lock
jb
sti
sti
mov
or
in
xor
inc
cmc
ror
and
sub
stos
retf
das
sub
inc
adc
outs
inc
jmp
jo
adc
xchg
xchg
or
stos
retf
push
mov
aaa
lahf
dec
pop
dec
cmp
pushf
sub
xchg
nop
test
mov
clc
sub
jmp
fsubr
pop
stos
or
shl
outs
fsubrp
loopne
mov
sbb
inc
inc
mov
popa
jmp
sub
or
jbe
in
test
inc
leave
sub
add
ins
mov
fsub
clc
(bad)
sar
fiadd
sbb
std
jo
sbb
hlt
cli
test
add
add
mov
jne
xor
jno
lods
lock
add
out
mov
call
inc
cmp
sbb
into
out
jmp
fwait
lds
shl
xchg
bound
retf
test
loop
xor
out
push
(bad)
xchg
pushf
iret
in
pop
(bad)
in
stos
add
mov
jo
das
stos
mov
pusha
sbb
sbb
out
lods
jp
pop
stos
ja
mov
sbb
popf
cmp
jne
lea
push
mov
ret
xchg
and
iret
dec
pop
or
(bad)
push
jmp
sar
pop
jle
jo
cli
jmp
jo
lea
mov
test
in
mov
pop
mov
cmp
and
cmp
mov
mov
pop
inc
mov
dec
mov
and
add
shrd
mov
push
dec
adc
das
cwde
lahf
std
out
add
ss
mov
mov
jmp
xchg
fst
imul
popa
xor
rcr
jg
pop
jl
cli
cli
dec
arpl
jl
xchg
repz
call
lods
push
sub
cmps
(bad)
std
mov
or
std
data16
pop
into
pop
outs
mov
inc
push
or
mul
adc
mov
pop
popa
mov
sbb
mov
popf
mov
push
ret
or
sub
(bad)
push
loope
fisttp
fisubr
sbb
mov
push
js
jecxz
mov
(bad)
jno
fiadd
mov
repz
adc
pop
test
push
cdq
scas
add
xlat
pop
(bad)
repnz
jne
cld
and
mov
adc
loop
cwde
push
mov
mov
aad
dec
retf
and
jmp
js
stos
adc
mov
enter
sbb
ret
in
repz
int
cmps
sbb
call
xchg
xchg
and
fwait
iret
xchg
and
mov
loopne
jp
aam
xchg
vcvtpd2ps
addr16
push
inc
adc
fdivr
cmp
and
dec
fld
into
mov
add
test
gs
int3
and
push
lds
ja
adc
pop
push
inc
push
pop
lock
xchg
pushf
xor
out
loopne
and
mov
jecxz
ins
jl
cmp
fcom
ror
stos
xchg
sti
fs
mov
imul
std
mov
cmc
jae
jl
rol
out
xor
lods
div
mov
and
dec
mov
mov
es
xor
jmp
cmps
push
and
scas
ret
cmc
sub
or
mov
sbb
inc
pop
xor
fidivr
jmp
daa
arpl
popa
scas
mov
sub
aam
daa
mov
mov
or
imul
(bad)
out
cmp
shl
shl
addr16
cwde
idiv
div
stos
std
add
fsubr
cli
shl
aas
and
fsub
lea
inc
addr16
cmp
xchg
inc
pop
test
inc
int
mov
and
cli
ins
jmp
fcom
pop
les
stos
sar
cmp
xlat
push
shl
and
xchg
repnz
into
cmc
xchg
les
cmc
dec
cmp
(bad)
cmp
lds
or
loopne
mov
xlat
outs
mov
cmps
jne
addr16
xor
lods
push
cdq
pop
ffree
cwde
mov
jo
and
mov
std
test
xchg
jnp
call
out
jg
sub
inc
call
outs
xor
xor
mov
sbb
cmp
sub
dec
push
out
inc
pop
dec
push
jnp
xor
and
and
lods
aad
pop
sar
and
pop
lds
clc
imul
xchg
or
fbld
cmp
xchg
push
mov
xlat
sbb
sub
mov
(bad)
imul
pop
pop
jo
fnstsw
adc
xor
test
nop
pusha
sar
ja
retf
inc
fs
pusha
jo
je
cmp
out
(bad)
jp
or
nop
pop
js
xor
(bad)
push
sub
aaa
fadd
(bad)
mov
jne
sbb
fild
dec
fwait
pop
(bad)
and
cli
and
sar
mov
cmp
ja
gs
mov
jle
cmp
outs
lahf
xor
xchg
and
or
gs
xchg
add
add
movs
inc
mov
cmp
ret
pop
xor
mov
add
push
xor
out
enter
into
push
out
fstp
pop
jo
or
paddd
je
pop
dec
js
fdiv
add
aas
test
daa
arpl
push
and
test
mov
xor
call
fcmovb
fist
out
pop
gs
out
pop
in
cs
jp
(bad)
cmp
out
scas
iret
outs
int
cmps
addr16
(bad)
in
jae
sbb
pushf
daa
scas
ins
loope
popf
cmp
inc
ss
mov
or
call
(bad)
sbb
sbb
mov
ret
dec
dec
cmp
aam
jge
fiadd
or
stc
jecxz
sbb
mov
aas
out
div
xchg
jecxz
int3
loopne
push
mov
test
rcr
sub
mov
dec
aam
pop
dec
xor
icebp
add
test
push
inc
adc
mov
mov
inc
sub
div
or
adc
jb
mov
movs
jo
jnp
sbb
or
loope
neg
cs
in
sub
pop
arpl
jbe
dec
cmp
xchg
pop
dec
scas
xor
pushf
push
mov
ret
jae
stc
add
cmps
(bad)
(bad)
mov
or
imul
xor
cmp
mov
cwde
xor
sub
popf
mov
neg
cli
sub
test
mov
retf
adc
jg
inc
daa
cmps
xor
jbe
cld
dec
mov
(bad)
xchg
pop
jns
sub
sbb
pop
(bad)
jecxz
fs
mov
jnp
xor
fsubr
push
push
and
sbb
std
pop
jmp
stos
dec
jecxz
add
inc
inc
fld
xchg
retf
mov
(bad)
sbb
xor
mov
rcl
pop
or
dec
iret
add
repnz
mov
je
inc
cdq
sub
jne
jmp
lods
jnp
add
pop
test
sub
jae
in
retf
adc
and
cld
adc
ja
pop
push
adc
icebp
sub
push
xor
or
call
(bad)
and
mov
daa
nop
dec
es
pop
lock
cld
je
pop
pop
fisub
xacquire
cmps
inc
nop
xchg
jmp
movs
out
out
dec
add
pop
rcl
imul
cmp
dec
adc
hlt
pop
ins
sti
fdivr
dec
fisubr
scas
dec
add
or
jno
pusha
ds
mov
cdq
bound
xor
frstpm(287
shl
jl
stc
xor
test
sub
sub
sub
pop
xchg
shl
(bad)
loopne
cs
jo
pop
cmp
mov
jmp
cwde
inc
stc
mov
cmp
stos
inc
ins
cmp
jne
pop
push
test
xor
jecxz
les
mov
or
xchg
mov
into
mov
add
test
in
shl
cmps
mov
and
cmp
enter
test
push
loopne
mov
mov
sbb
xchg
stos
sub
inc
popa
inc
mov
movs
test
mov
std
pop
sub
clc
mov
jmp
cmps
cli
repnz
fdiv
aad
mov
cmp
retf
jg
mov
das
pop
in
push
push
jg
adc
cmp
and
push
out
adc
mov
es
push
pop
inc
mov
xchg
mov
dec
fwait
mov
and
stos
inc
fcmovne
icebp
or
add
push
popa
xchg
cs
pop
jo
xchg
cmp
sbb
push
adc
mov
or
inc
sti
ret
es
dec
test
lds
push
gs
jmp
dec
out
fadd
ficom
mov
or
inc
xor
cli
call
xchg
adc
in
push
ror
push
inc
les
adc
sub
ins
sub
imul
ja
mov
shl
mov
in
or
fidivr
test
mov
add
outs
sti
jl
ret
mov
inc
jg
les
pop
scas
inc
icebp
mov
mov
lods
out
shr
ss
out
pop
mov
jb
arpl
and
add
int
call
mov
pop
push
retf
dec
movs
and
sbb
stc
adc
pop
popa
adc
sbb
fst
mov
cmp
sub
aaa
mov
jmp
in
fild
sbb
pop
push
lds
add
sub
sahf
pusha
pop
add
rol
dec
mov
jnp
inc
dec
jae
dec
icebp
pop
out
pop
cmp
fcom
fsub
ins
clc
inc
pop
pop
nop
xor
xor
pop
ds
imul
sbb
pop
mov
adc
add
cwde
dec
xchg
add
or
push
mov
jne
sar
lock
pop
ror
retf
bound
scas
loopne
pop
pop
mov
test
jg
mov
ja
add
pop
sbb
pop
ins
lods
cwde
mov
aaa
cmp
cmps
xchg
mov
adc
test
lea
cld
xor
sbb
stc
mov
xor
jae
jns
sub
cmp
pop
int3
mov
(bad)
les
leave
js
mov
popf
ret
and
or
test
aam
pop
cld
fidivr
mov
arpl
dec
cmps
and
nop
xor
jg
sub
cmp
inc
mov
and
pop
pop
loop
add
out
sti
adc
mov
mov
aad
imul
cmp
(bad)
cli
add
outs
and
xchg
adc
in
mov
aam
dec
xchg
or
cdq
jo
lods
xlat
enter
aam
imul
jle
inc
mov
scas
std
mov
sub
add
gs
mov
xchg
pop
mov
cmp
mov
out
push
mov
popf
sbb
gs
or
js
inc
adc
cli
call
inc
call
mov
icebp
lods
loopne
mov
and
push
mov
in
into
out
adc
mov
xor
in
movs
adc
sub
ss
fild
sub
(bad)
or
cmp
or
out
pop
mov
push
push
mov
sub
inc
jmp
mov
add
test
mov
cmp
pop
aad
xchg
mov
cs
and
fs
imul
push
enter
inc
mov
int3
ds
js
les
out
mov
lahf
into
and
dec
hlt
xor
mov
sub
int3
cmp
je
lods
pop
aam
pusha
jmp
fcmovnbe
xchg
daa
inc
xor
adc
inc
call
sar
call
mov
cmp
ss
jg
mov
movs
xchg
inc
arpl
sbb
pop
sbb
loop
bound
div
ins
sub
sub
inc
movs
mov
mov
fwait
test
xchg
sub
inc
and
int3
push
or
(bad)
shr
push
je
xor
pop
mov
or
(bad)
cmp
xlat
sub
int3
xor
and
sub
xor
inc
jmp
lds
or
test
push
daa
push
xlat
push
fstp
inc
jl
jmp
add
adc
adc
cmp
push
sub
jne
mov
adc
dec
enter
fucom
popa
cmp
sub
sub
inc
mov
or
add
ins
or
outs
xor
xchg
outs
das
xor
in
mov
movs
mov
xchg
xor
das
inc
loop
fwait
(bad)
call
mov
cmp
dec
and
into
dec
xor
repz
repnz
cld
xor
push
xchg
add
fistp
add
sbb
or
mov
add
inc
outs
cvtdq2ps
sbb
dec
lods
test
ja
xchg
inc
cmp
movs
push
ds
fwait
test
xor
mov
outs
sub
mov
out
cli
and
sbb
clc
jle
xor
out
movs
jle
pushf
and
aad
rcl
inc
push
lods
in
or
mov
cli
outs
jl
xor
into
sub
mov
xchg
adc
mov
mov
arpl
mov
fimul
adc
push
mov
nop
xlat
push
movs
jle
imul
add
mov
sbb
leave
jmp
pop
or
cmps
lods
or
call
adc
out
scas
mov
addr16
test
test
jnp
sub
gs
mov
enter
jl
aas
and
sub
loop
cli
cmp
xlat
push
mov
add
mov
mov
rol
movs
add
fld
jmp
rol
lock
in
sub
sbb
add
(bad)
mov
(bad)
dec
cmp
jle
and
(bad)
mov
mov
mov
es
outs
rol
mov
mov
cmp
jmp
in
(bad)
mov
fisubr
pop
mov
add
fadd
add
inc
(bad)
jb
dec
or
cwde
jnp
pop
sahf
xchg
shl
jmp
fs
and
aam
mov
pop
sub
fidivr
inc
out
sahf
cmps
test
jbe
ret
in
and
(bad)
pop
in
lsl
push
xchg
je
xchg
in
icebp
iret
mov
cdq
push
pop
inc
adc
mov
sti
add
jae
stos
lahf
inc
jae
mov
mov
fstp
cmps
adc
inc
cmps
popf
or
dec
inc
dec
or
mov
push
test
cmp
dec
pop
faddp
sub
inc
hlt
cmp
cmp
or
push
int
sub
out
jl
sbb
iret
mov
out
dec
pop
ret
mov
mov
mov
sbb
stos
fcomi
movs
xchg
in
mov
sbb
sub
cmps
cdq
push
ds
adc
lahf
mov
jge
add
neg
out
es
pop
sub
imul
pop
fimul
add
dec
(bad)
pop
icebp
test
sbb
pusha
jne
out
xor
shr
mov
cdq
mov
and
push
cmc
fmul
lock
and
inc
lods
mov
sbb
iret
jl
enter
pop
xor
stos
out
jae
sub
sub
leave
lods
sbb
cmp
jo
ins
mov
pop
in
mov
sbb
hlt
adc
aam
loopne
in
pop
test
jae
xchg
and
movs
cmp
jmp
mov
stos
movs
mov
arpl
fwait
outs
pop
ror
push
xchg
cmc
push
jne
cmp
inc
(bad)
jmp
dec
out
cmp
or
jbe
xor
lock
call
jmp
jnp
add
ds
and
repz
and
nop
sbb
or
out
out
loop
arpl
movs
(bad)
retf
xor
pop
sub
or
lods
repnz
into
mov
push
push
sbb
into
sbb
scas
out
ret
dec
lea
push
popf
pop
shr
pop
je
mov
cmps
jge
imul
arpl
adc
mov
std
out
pushf
jae
imul
rcl
and
mov
es
and
loope
xchg
mov
add
call
and
cmp
clc
xchg
adc
ds
add
sub
outs
adc
dec
ss
pop
push
mov
pop
push
sgdtd
xchg
fwait
inc
xor
inc
out
loopne
(bad)
cli
xchg
or
sbb
adc
sub
mov
cmp
inc
dec
dec
add
sub
cli
pusha
test
add
cmps
dec
sub
mov
mov
pushfw
xchg
ret
adc
std
dec
cmp
xor
ins
cld
adc
push
mov
mov
push
cwde
scas
in
dec
js
pxor
fisubr
sbb
test
push
push
ja
cmp
pop
aad
arpl
(bad)
stc
push
or
stc
bound
jns
add
clc
repnz
(bad)
enter
mov
test
dec
xchg
xor
adc
mov
lahf
mov
repz
dec
mov
loop
and
(bad)
jno
inc
xor
ja
jp
jle
es
int
mov
mov
mov
dec
ins
stos
clc
lods
gs
retf
daa
je
dec
push
leave
retf
mov
stos
int3
repz
jnp
out
jno
test
or
push
mov
jg
xchg
push
cmps
xchg
jae
jg
dec
mov
xchg
sbb
mov
sub
and
xchg
adc
in
out
daa
sub
std
das
mov
pop
lea
adc
retf
adc
aad
mov
(bad)
shl
cld
jne
and
ja
mov
retf
je
aad
js
or
xor
je
in
mov
cmp
add
stos
pop
imul
daa
xor
xchg
iret
jbe
jae
xchg
loope
imul
shl
movs
xchg
in
inc
loop
cmp
and
out
sub
lods
cmp
pop
xchg
add
or
in
cmp
pop
xchg
hlt
pop
add
mov
dec
sbb
dec
xchg
leave
mov
lds
sub
pop
loope
enter
jns
dec
ja
iret
add
mov
sbb
mov
push
in
jns
cdq
xlat
sub
jbe
push
fsub
pop
mov
aad
jle
or
cmp
ret
dec
mov
cwde
jns
iret
aas
inc
adc
pop
mov
test
jb
in
stos
aas
inc
xchg
mov
fstp
dec
mov
mov
dec
jne
hlt
xor
mov
les
sbb
stc
out
add
mov
jmp
add
and
aas
retf
jns
push
call
ret
loop
cmp
clc
add
push
mov
test
xchg
mov
mov
push
ins
out
adc
pop
push
mov
loop
rcr
pop
leave
push
pop
pop
cmp
add
nop
add
fimul
mov
cmp
jne
imul
(bad)
mov
mov
or
add
push
cmp
sbb
stos
sub
add
test
or
int3
add
int
ret
jecxz
push
aad
mov
add
add
adc
out
outs
sub
sub
leave
pop
and
gs
pop
das
jno
lods
adc
mov
cmps
pop
xchg
xchg
adc
sbb
push
int3
jg
add
mov
icebp
outs
inc
pusha
int
mov
pop
inc
and
mov
test
pop
popf
and
es
pop
inc
mov
shr
mov
mov
or
add
mov
mov
and
jge
js
xlat
ret
cmc
xchg
or
mov
inc
scas
mov
push
ins
hlt
fiadd
adc
inc
bound
ror
movs
cmc
imul
push
dec
xor
lahf
out
hlt
std
cmp
mov
idiv
aaa
or
addr16
(bad)
std
adc
sar
ret
or
(bad)
or
cld
pop
and
pop
pop
dec
data16
cs
test
mov
mov
aad
sbb
aad
icebp
cs
mov
mov
mov
pop
dec
lahf
push
sbb
retf
xchg
pushf
leave
inc
imul
sub
rcl
sbb
mov
sub
jbe
jo
fcom
mov
iret
lods
lahf
mov
pop
and
push
push
loop
push
jp
hlt
xor
cmp
bound
out
lods
and
inc
outs
lock
sar
daa
add
and
cld
xor
repnz
shl
jbe
inc
or
push
mov
dec
pop
dec
mov
push
dec
mov
loopne
loopne
adc
jmp
out
inc
sub
inc
mov
add
mov
mov
lea
and
sbb
cmps
sbb
xchg
mov
mov
add
jbe
jae
pop
cs
adc
jle
mov
jmp
or
loopne
aas
xlat
js
add
scas
sar
pusha
std
out
mov
mov
mov
pop
or
push
fldenv
popf
es
test
data16
mov
xchg
es
push
mov
push
movs
test
or
cmc
outs
fistp
daa
mov
shl
leave
aas
xchg
sbb
pop
add
xor
pop
pop
sbb
sahf
(bad)
iret
enter
add
cmp
nop
push
mov
pop
in
data16
jns
mov
std
mov
xchg
out
and
and
mov
cdq
nop
xor
fidiv
fadd
lahf
jb
psrld
mov
fimul
adc
hlt
(bad)
aam
bound
gs
repz
imul
push
push
push
mov
clc
push
cld
xor
sub
ins
push
pop
inc
test
adc
dec
dec
fdiv
pop
retf
pop
ror
and
sti
cmp
arpl
dec
and
fcom
retf
mov
jb
jmp
mov
add
(bad)
pushf
lods
adc
in
(bad)
push
mov
int3
xchg
fdivp
jp
stos
ret
cdq
sbb
pop
fnsave
popa
xchg
mov
mov
mov
gs
xchg
lahf
jne
jge
fistp
(bad)
pop
inc
xchg
bound
cmc
xor
arpl
hlt
imul
push
or
div
shl
sahf
xchg
mov
pop
fcmovnb
test
mov
add
test
xchg
pop
in
fistp
mov
adc
repz
jecxz
fabs
xor
mov
inc
int3
jne
or
mov
xchg
jle
jbe
add
rcr
xchg
cs
inc
mov
xor
inc
fcomp
int3
rcr
loope
jle
xchg
dec
push
sbb
mov
sub
add
scas
mov
and
jge
mov
and
mov
push
xchg
add
push
and
in
push
jmp
pop
test
mov
push
or
(bad)
xlat
sub
mov
jb
jne
fcom
mov
int
xchg
jmp
xor
mov
mov
mov
arpl
cmps
es
jge
cmp
rcr
loop
xchg
sub
(bad)
into
cmp
lea
pop
dec
mov
lds
mov
and
sbb
or
ret
test
fcmovne
pop
retf
xchg
cmps
or
ss
dec
mov
scas
fdiv
adc
xchg
cs
xchg
push
and
idiv
je
inc
cld
aad
dec
push
ins
xchg
or
mov
std
push
adc
fldenv
pop
mov
dec
and
hlt
les
xor
and
push
mov
call
mov
dec
loope
mov
(bad)
adc
fwait
dec
adc
add
cs
retf
cwde
in
jbe
fst
or
repz
add
push
out
iret
push
dec
(bad)
(bad)
mov
in
test
sbb
clc
jl
fcmovne
dec
fs
into
xchg
enter
pusha
fwait
push
iret
xor
jl
push
jle
push
test
stos
fdivr
retf
cli
rol
sub
iret
je
shl
or
out
xlat
add
pop
mov
retf
fstp
mov
push
jp
jne
cwde
test
cmc
mov
stos
kmovb
jmp
rcr
repz
ss
push
fistp
sbb
jno
mov
pop
cli
cmovne
and
xor
(bad)
loop
cmps
dec
push
or
fstp
jg
in
and
xchg
push
mov
mov
movs
sbb
adc
push
out
mov
aad
cwde
sub
mov
movs
cmp
test
add
lahf
popf
loope
call
sbb
sub
clc
out
ja
mov
data16
jo
add
cdq
add
lds
mov
(bad)
jmp
dec
pop
mov
and
push
jo
lahf
add
in
inc
mov
and
jmp
or
(bad)
clc
dec
jne
jb
mov
dec
or
jle
test
xchg
leave
std
ret
je
inc
xchg
jo
cdq
lods
mov
nop
pop
sti
inc
enter
xchg
jg
mov
jl
and
movs
xchg
sahf
xor
iret
int3
fisttp
jmp
sbb
(bad)
push
jle
add
mov
stc
cmp
xor
icebp
mov
repz
repz
xchg
aas
sbb
inc
les
stos
mov
es
or
test
sbb
cmps
loope
test
loopne
push
adc
popf
bnd
pushf
cmp
xor
mov
jmp
(bad)
movs
jbe
push
push
xchg
in
cmp
aas
or
inc
stos
add
test
mov
(bad)
xchg
arpl
sbb
mov
sub
cdq
rol
jecxz
test
xchg
sub
sbb
pop
mov
sbb
dec
jmp
sar
xchg
jp
dec
test
mov
std
mov
cli
and
sub
fild
(bad)
in
mul
xchg
pop
movs
jmp
dec
sbb
cdq
mov
stos
shl
call
mov
movs
jno
call
mov
cmp
fisubr
rcr
mov
popa
arpl
mov
sub
cmp
jecxz
xchg
dec
bound
xchg
adc
rcl
dec
mov
and
(bad)
mov
sub
adc
in
dec
mov
mov
outs
lock
jo
jns
pop
aad
and
pop
aas
(bad)
or
mov
out
push
sub
dec
and
les
dec
cmp
cdq
mov
frstor
mov
mov
add
mov
test
iret
mov
enter
repnz
sub
mov
je
inc
hlt
jno
test
pop
mov
shl
outs
lahf
mov
cmp
sub
idiv
int
daa
sub
repnz
lds
sbb
xor
int
jl
add
popf
mov
mov
scas
push
sbb
retf
iret
scas
jp
es
iret
mul
iret
xchg
fcomp
mov
xor
hlt
or
jmp
mov
pushf
pop
cmp
push
ja
repz
pop
movs
movs
mov
dec
jbe
xor
sub
pop
movs
and
push
test
stc
retw
stc
cmp
push
leave
loop
(bad)
scas
lea
push
xlat
and
xchg
mov
stos
mov
add
sbb
fist
adc
pusha
iret
add
(bad)
and
cmp
pop
inc
dec
inc
test
ret
test
jl
dec
sub
xchg
das
mov
repz
cmc
push
aad
rcr
stos
push
data16
sub
ret
pusha
and
mov
shl
dec
es
(bad)
jae
call
and
sbb
push
xchg
sar
fst
and
jmp
jge
pop
mov
dec
jns
(bad)
imul
mov
sbb
add
sub
sub
and
rol
fsubr
inc
dec
cmp
jp
leave
cmc
inc
sub
xchg
jae
mov
xlat
cmps
mov
pop
ror
jecxz
ret
adc
out
pop
push
add
cmp
cmp
adc
fcom
movs
mov
cwde
cli
sub
call
mov
jl
sub
iret
inc
mov
pop
aaa
test
rol
jbe
fst
add
(bad)
mov
fwait
rcr
fstp
sub
into
aam
call
or
call
pop
push
sbb
jp
sti
or
mov
icebp
mov
inc
(bad)
sbb
psubusw
je
adc
fisub
or
std
and
jae
ds
aaa
shl
jl
in
test
xlat
repnz
leave
lods
hlt
scas
jae
jmp
mov
mov
scas
je
icebp
arpl
(bad)
sbb
fidiv
idiv
sub
push
mov
jg
and
cwde
sub
mov
jge
in
xadd
sahf
jb
scas
inc
jae
or
jecxz
jmp
mov
pop
adc
aad
add
cmc
lods
outs
leave
inc
and
pop
xor
out
lahf
jno
ror
dec
jne
mov
pop
xchg
hlt
pop
or
jle
enter
jge
cmp
inc
loopne
mov
sbb
inc
daa
dec
mov
sub
add
shl
ss
icebp
sbb
retf
retf
test
movs
cmps
out
push
or
loop
adc
dec
pushf
xchg
adc
sub
jmp
je
sub
ss
xor
imul
scas
sub
mov
mov
je
add
mov
aas
dec
ja
jl
jl
shl
sub
push
push
lahf
je
lds
stos
cli
cmp
mov
pop
push
push
into
out
mov
les
jne
shl
aam
dec
in
xchg
mov
lea
mov
retf
cmps
adc
aaa
sahf
pop
psubb
mov
popa
leave
cmp
inc
push
icebp
and
jne
outs
sbb
xor
scas
xor
add
adc
mov
mov
or
mov
push
jge
sub
ret
xchg
retf
jae
scas
ins
rol
hlt
dec
mov
or
sbb
inc
out
sub
adc
cmp
jge
ficomp
lock
fld
push
xchg
(bad)
xchg
dec
cmps
pop
pop
cmc
in
cmp
push
push
xor
into
dec
cld
dec
push
pusha
rol
aad
les
popf
cmp
lea
(bad)
ins
scas
retf
shl
jmp
adc
out
add
lods
mov
pop
dec
sbb
pop
cwde
mov
mov
sub
in
or
ror
adc
fmul
je
out
and
retf
xchg
sub
pushf
pop
out
jl
mov
pop
scas
cmp
xchg
stos
lds
cli
mov
mov
lea
mov
xor
das
xor
xchg
test
mov
cmps
rcr
push
mov
retf
cmps
and
fmulp
loope
add
retf
and
(bad)
jg
cli
mov
or
dec
dec
cmps
popa
aaa
movs
mov
pop
fcmovnb
bnd
ja
mov
mov
adc
dec
add
or
ret
add
retf
in
leave
aaa
aam
sub
sahf
leave
cld
repnz
or
mov
and
(bad)
popf
movs
xchg
push
inc
inc
dec
and
mov
imul
ffreep
xchg
addr16
inc
dec
fisubr
and
shl
xor
xor
or
mov
xor
and
mov
stos
jb
loope
xor
aas
aam
add
mov
push
mul
cdq
ds
mov
(bad)
(bad)
and
inc
mov
jmp
jne
or
cmps
ret
jo
inc
bound
repz
add
dec
cmc
push
pop
sbb
jg
mov
and
(bad)
aam
pop
cmp
jg
push
xor
in
push
pop
outs
cdq
cmps
loop
xchg
aas
xor
sub
out
xor
cmp
sar
inc
xor
inc
xchg
jns
dec
sahf
les
lock
jbe
push
sahf
(bad)
and
xor
aaa
adc
or
(bad)
pop
in
dec
test
(bad)
sbb
test
iret
add
xlat
rcr
push
and
in
push
fcomp
pop
test
arpl
inc
test
pop
retf
dec
popa
jmp
fstp
pop
hlt
js
xor
cli
popa
(bad)
jecxz
leave
or
aas
jne
int3
and
outs
ret
test
sub
push
pop
test
(bad)
push
xchg
mov
idiv
hlt
es
mov
test
pop
and
ja
dec
int
rcr
loop
fisttp
jno
sbb
stc
imul
jno
sbb
pop
repz
xchg
mov
jp
mov
push
cmp
xor
stc
aam
inc
pop
sbb
scas
stos
adc
cwde
inc
cmp
cmp
stc
push
push
xor
(bad)
fdiv
hlt
add
lods
and
aam
and
ret
and
adc
sbb
push
movs
leave
hlt
pop
jmp
mov
test
std
lahf
mov
xchg
das
imul
out
mov
pushf
call
mov
xor
xchg
sbb
or
pop
and
adc
adc
xchg
pop
push
cmp
inc
mov
cmc
pop
jmp
cmp
and
not
adc
dec
mov
dec
lahf
addr16
adc
retf
mov
xchg
pop
out
movs
mov
fnstsw
adc
retf
sub
aaa
hlt
and
sub
repz
out
test
lods
mov
xchg
xor
shr
(bad)
test
mov
cmps
ins
mov
sub
repz
add
adc
shl
add
mov
sub
shr
ret
outs
mov
repz
fisubr
mov
xor
push
cwde
cs
adc
push
xor
fwait
and
mov
ins
xchg
jne
mov
mov
popa
pop
xchg
sub
adc
cmp
(bad)
mov
inc
mov
push
xlat
idiv
fcom
inc
nop
js
shr
mov
in
adc
jne
sbb
pop
aad
shr
add
fisub
inc
or
lds
xchg
mov
in
imul
leave
rol
popa
aad
pop
sahf
pop
mov
outs
pop
and
jle
push
add
(bad)
dec
push
fild
mov
lds
stos
cld
pop
jo
rol
cmp
inc
mov
movs
retf
jmp
sahf
adc
mov
sub
daa
jl
rol
cs
jnp
cdq
addr16
(bad)
idiv
sub
test
push
dec
es
mov
popa
adc
sbb
stc
pop
inc
mov
mov
inc
fnstsw
adc
adc
inc
sub
pop
cmp
out
pop
icebp
jno
in
jnp
pop
rcl
mov
dec
pushf
cmps
cmp
jmp
pop
xor
enter
mov
jge
mov
int
push
inc
mov
pop
adc
pop
es
push
lahf
test
add
sub
in
sti
lea
sbb
js
int
das
xor
sbb
dec
adc
loopne
push
sbb
lock
jnp
test
inc
push
or
sbb
push
lods
fwait
mov
mov
leave
mov
xchg
lea
das
pop
cmp
fisttp
lods
add
retf
add
pop
xor
movs
inc
xor
das
cwde
je
add
mul
bound
daa
add
xchg
sbb
xchg
lods
adc
dec
mov
ret
retf
or
popf
js
xor
movs
add
or
or
aas
int
test
xchg
aad
push
imul
mov
fstp
inc
in
cmp
xchg
xchg
add
inc
ins
push
outs
ret
call
add
enter
lods
inc
dec
jge
sub
test
pop
inc
jecxz
xchg
repz
push
mov
lds
clc
push
and
fwait
add
pushf
push
jns
xor
fwait
jle
xor
mov
and
ficomp
jne
std
daa
sub
push
jns
outs
into
ror
ja
inc
jnp
add
scas
cmp
ins
js
xor
jle
sbb
test
dec
sbb
mov
mov
sahf
sub
mov
(bad)
aaa
xchg
or
in
cdq
ftst
iret
popf
xchg
cli
mov
cmp
cmp
adc
mov
pop
cmp
outs
or
pop
cmp
inc
xlat
std
pop
test
test
aad
sbb
ficomp
xchg
in
inc
test
inc
out
lock
and
das
dec
pushf
xchg
mov
mov
test
(bad)
dec
mov
daa
out
cmc
add
iret
push
and
out
mov
addr16
nop
lock
sti
pusha
mov
pop
test
xlat
pusha
adc
scas
popa
loopne
adc
inc
xchg
mov
jo
push
mov
test
mul
mov
xchg
xchg
sub
add
loope
push
dec
inc
xor
push
imul
pusha
pop
shl
cmc
outs
std
gs
(bad)
loop
dec
cmp
pop
cmp
push
out
test
scas
sub
sub
dec
scas
dec
dec
loopne
data16
je
in
(bad)
(bad)
jecxz
inc
or
xchg
(bad)
aam
mov
fiadd
jne
outs
imul
addr16
repz
cmps
cmp
pop
call
sub
pop
scas
dec
xchg
push
out
jns
gs
mov
add
pop
aaa
stos
add
jmp
and
mov
jbe
scas
popa
(bad)
jl
mov
call
vhsubpd
sub
adc
sbb
jmp
repnz
cwde
in
outs
pop
clc
call
dec
stc
sub
push
xchg
repz
lds
jecxz
dec
jb
sub
mov
aaa
mov
inc
aaa
pop
dec
movs
sub
and
idiv
push
xor
movs
in
nop
outs
and
pop
movs
cmp
adc
cmp
push
sbb
leave
int
push
pop
into
or
dec
(bad)
sti
or
mov
and
xchg
imul
push
or
or
outs
scas
enter
sub
rcl
fsub
lea
jecxz
icebp
sub
mov
stc
repnz
ror
sbb
dec
or
pop
cmps
fs
sar
in
sar
imul
mov
pop
aas
dec
dec
inc
cli
rol
popf
loopne
mov
dec
push
std
xchg
fstp
in
cmp
fiadd
es
mov
rol
sar
add
pop
imul
(bad)
aas
inc
cli
mov
lds
arpl
xor
jae
sti
sub
mov
xlat
add
cmp
scas
fbld
scas
mov
aad
pusha
aad
mov
icebp
pushf
push
int3
mov
sub
cmp
std
aaa
inc
push
fisubr
xchg
pushf
pop
jmp
cmps
rcr
pusha
mov
inc
xchg
fiadd
imul
and
clc
sub
mov
adc
and
push
or
mov
dec
je
jg
push
mov
cmp
lahf
int3
add
ret
out
cmp
pop
clc
mov
in
sub
ret
jmp
pop
cmp
dec
in
(bad)
nop
jnp
aaa
sub
mov
xchg
push
dec
cmps
(bad)
push
or
mov
ret
fcmovne
mov
xchg
dec
mov
or
ins
adc
push
mov
rcl
cli
pop
jge
pushf
fsubr
aad
cmp
adc
or
addr16
pushf
repz
mov
dec
fstp
dec
pusha
push
ror
das
mov
adc
sbb
add
pop
or
enter
push
xor
jne
jae
and
pushf
js
add
mov
in
mov
xor
push
jbe
ror
push
imul
pop
dec
or
mov
pop
fist
sbb
sbb
adc
xor
mov
clc
inc
push
das
and
(bad)
retf
lds
mov
imul
mov
pop
fistp
outs
sbb
mov
push
jno
xchg
add
mov
mov
jle
gs
jnp
push
xor
mov
add
(bad)
adc
pop
mov
sub
add
fcomp
loope
popa
test
arpl
imul
shl
mov
adc
int3
cld
loope
pop
clc
and
jle
movs
xor
xor
ja
movs
inc
dec
neg
nop
mov
(bad)
or
push
cmp
test
out
fwait
mov
repnz
and
jmp
jmp
les
mov
iret
lds
out
adc
xchg
in
outs
push
sub
into
xor
inc
jb
sub
or
pop
repnz
scas
xor
mov
test
loope
and
and
lods
pop
jl
sbb
clc
jge
sub
in
inc
dec
cmp
mov
mov
jb
scas
out
inc
mov
sub
into
dec
jp
adc
(bad)
cdq
das
das
cli
xchg
xor
iret
jge
je
xchg
xor
sbb
rol
or
lock
inc
mov
pop
push
stos
dec
sahf
daa
dec
xor
ret
mov
mov
inc
push
pop
fiadd
lock
mov
and
loop
aas
jp
cmc
sbb
sbb
and
mov
push
outs
int
in
xor
(bad)
pusha
xor
imul
and
leave
mov
sub
out
aad
(bad)
mov
mov
fucom
ds
daa
jo
sti
xor
and
push
jge
push
mov
test
mov
sub
repnz
mov
test
shl
jmp
stos
loop
and
push
jmp
lods
pop
sub
imul
or
in
ret
daa
xor
iret
mov
in
mov
adc
out
sub
stos
push
cwde
pop
adc
sub
int
fisttp
push
pop
xchg
mov
sbb
mov
cmp
scas
jo
hlt
mov
shl
aaa
sbb
dec
int3
fist
pusha
jge
cmp
push
sub
pop
add
pop
jmp
ss
jmp
adc
jne
les
jbe
dec
icebp
call
test
inc
xchg
(bad)
dec
add
icebp
mov
jnp
push
aam
jo
das
pop
shl
sti
repnz
pop
int
loope
popa
jnp
sbb
fcom
cdq
inc
xchg
xchg
shr
push
fwait
push
ins
loope
mov
ds
dec
(bad)
mov
call
fsub
cli
cmp
bound
dec
ds
in
push
test
mov
mov
adc
sbb
mov
cmp
rol
or
outs
and
push
sar
add
out
inc
sar
fdivp
popa
not
xchg
sub
adc
mov
dec
enter
fimul
cmp
or
and
(bad)
nop
mov
rol
aad
test
pop
dec
fst
mov
xlat
mov
movs
jb
pop
les
sbb
fist
pop
dec
das
repz
aam
stos
xor
fistp
shl
mov
je
pop
and
jecxz
inc
and
ins
inc
jnp
push
sbb
fcom
mov
out
jbe
mov
clc
rcl
adc
mov
inc
in
hlt
adc
and
sub
jno
cwde
pop
jnp
pop
mov
iret
cmp
push
mov
scas
cli
mov
stos
dec
push
pop
mov
sub
lods
iret
pshufw
push
popf
mov
gs
mov
in
mov
inc
popf
fs
fild
aad
aad
fiadd
das
popf
das
inc
ins
test
into
jmp
mov
out
add
retf
ret
es
xchg
and
fsub
fld
inc
loope
push
cmp
stos
jno
je
sbb
jmp
fwait
sbb
xor
pop
pop
in
std
pop
les
or
xchg
jmp
jle
rcr
xor
jecxz
test
pop
inc
cmc
in
sub
xchg
sbb
lds
xchg
mov
mov
and
mov
mov
cmc
nop
jmp
aad
push
mov
jl
fwait
and
int3
les
dec
sbb
js
mov
jns
jp
test
sbb
cmp
cmp
int
xchg
mov
and
mov
sub
xchg
mov
ins
sub
mov
mov
jae
loop
call
inc
shl
sbb
xor
mov
push
adc
ins
push
call
dec
int3
add
movs
(bad)
scas
(bad)
xchg
fs
pop
pop
fisub
mov
fsubr
and
xor
shl
shr
not
and
out
sub
jo
sub
fcom
jg
movs
push
add
addr16
dec
push
aas
jb
jnp
push
leave
and
retf
std
sub
xchg
shr
or
push
dec
mov
(bad)
cmps
ret
dec
cmp
cld
cmp
push
push
(bad)
cmp
mov
push
cmp
cld
xchg
jo
test
test
xchg
xor
cmp
jecxz
mov
std
test
xor
pop
push
popf
xchg
(bad)
xor
mov
pop
xor
adc
dec
lds
pop
pop
add
push
shl
ss
xchg
adc
ins
pop
in
outs
push
fwait
mov
jbe
xchg
sub
inc
test
(bad)
sub
in
push
inc
sub
adc
sub
cmp
xchg
icebp
mov
(bad)
imul
pop
scas
movs
inc
mov
fnstsw
xchg
data16
sbb
mul
cmc
int
mov
bound
dec
out
std
and
add
xchg
mov
pop
jb
das
mov
js
xor
push
and
mov
int
ret
pop
std
mov
or
out
int
out
mov
jcxz
outs
mov
sbb
sbb
imul
int3
ret
dec
popf
or
add
ja
xor
dec
lds
(bad)
popf
mov
lock
xor
sahf
xor
xchg
psubd
out
adc
dec
inc
fadd
jns
mov
movs
ins
cmp
ds
ja
nop
mov
loope
sub
and
sti
or
sub
xchg
fs
push
inc
cli
scas
inc
jb
jmp
sbb
daa
jno
fld
ja
mov
cmps
movs
jg
hlt
sahf
jb
push
test
out
sbb
jbe
xchg
push
dec
mov
push
xor
in
inc
aam
(bad)
adc
inc
jno
mov
out
push
in
ret
addr16
or
adc
and
mov
and
sahf
jo
aam
shrd
push
sbb
push
sub
and
push
adc
push
out
sub
pop
dec
dec
jecxz
ins
xchg
sbb
dec
pusha
push
sbb
inc
and
int
mov
imul
addr16
mov
jns
shl
nop
add
dec
sbb
aam
and
in
mov
imul
jo
mov
imul
jne
cmc
xchg
dec
mov
retf
fisub
pushf
sbb
mov
lods
mov
push
cs
imul
cli
pop
leave
adc
dec
jg
cli
call
sub
and
and
mov
mov
ret
int
or
std
test
sub
mov
jg
ret
xchg
loopne
(bad)
out
jnp
lods
not
push
push
add
stc
in
jmp
push
(bad)
sub
aaa
pop
leave
cdq
lods
cmc
or
adc
lods
xor
cli
mov
adc
push
xlat
add
cmp
push
xor
int
daa
pop
aas
jns
aaa
ret
stos
push
or
fdivp
and
or
cmp
sbb
xchg
sub
add
dec
sbb
or
push
ss
sahf
jmp
sbb
push
test
pop
lds
mov
stos
test
and
push
mov
push
das
leave
cwde
aam
sbb
ja
cmps
pusha
iret
jl
jmp
fsub
cdq
(bad)
or
mov
mov
xchg
pop
xor
cmp
add
mov
xchg
fisttp
mov
xlat
xor
loopne
jge
cli
ins
push
jb
push
(bad)
pop
add
cmps
movs
push
cmp
push
xchg
(bad)
dec
mov
out
mov
and
cmp
mov
fsub
loopne
jp
shr
std
(bad)
adc
movs
jnp
jbe
or
imul
out
ror
data16
addr16
mov
clc
fwait
gs
sub
int3
add
sahf
jmp
stos
or
aas
out
fnstenv
push
or
inc
stc
pop
add
outs
sub
jnp
bound
psrlw
adc
data16
cwde
lods
fs
mov
aas
dec
pop
inc
adc
test
in
ror
xchg
dec
scas
(bad)
aad
jne
xchg
inc
(bad)
out
add
jmp
push
push
retf
mov
cmps
inc
mov
push
jno
test
retf
xor
inc
pop
xchg
sbb
dec
stos
sub
jns
outs
mov
push
xchg
pop
inc
xor
fisttp
and
rol
cmp
jae
daa
sti
adc
xchg
test
test
mov
shl
mov
jb
inc
sub
jp
sub
xchg
mov
(bad)
fdiv
adc
push
cmps
ficom
push
retf
xchg
test
mov
movs
pop
cmp
mov
sub
(bad)
loope
mov
cmp
sbb
sbb
mov
inc
fisttp
in
and
test
cmp
xchg
scas
inc
mov
add
sbb
push
call
les
fisttp
pop
mov
mov
fwait
push
repnz
std
xchg
dec
xor
or
test
iret
jbe
aad
ja
push
cmp
xor
push
test
pop
mov
aas
xlat
out
pushf
test
sar
movs
mov
push
pushf
in
adc
leave
ins
mov
jno
ficomp
sub
jmp
push
or
shr
out
push
hlt
add
or
dec
and
loope
sahf
ins
mov
outs
shl
lods
inc
push
xchg
sbb
jbe
mov
add
dec
mov
sbb
(bad)
stos
mov
push
xchg
dec
fldl2e
cmp
clc
leave
or
mov
rcl
ins
stos
stc
js
fstp
cmps
mov
jae
mov
xchg
inc
mov
and
lods
loopne
mov
in
and
loope
shl
aad
add
or
cmc
mov
outs
cmp
sbb
add
dec
movs
and
les
cwde
mov
push
mov
out
xchg
or
ins
mov
fistp
fldcw
add
das
jmp
ds
adc
cli
xor
xchg
and
push
add
js
mov
lea
jno
add
sbb
shl
pop
jge
jo
out
pop
dec
aad
repnz
or
pop
out
sbb
fdivr
aad
nop
mov
cmp
movs
ret
mov
pop
out
lea
fadd
aam
cmp
lods
mov
les
outs
and
es
xchg
outs
inc
std
cmp
pop
mov
in
jge
int
pop
xor
push
(bad)
push
jne
popa
mov
and
retf
mov
mov
gs
int3
mov
mov
inc
cmp
mov
push
mul
mov
add
mov
test
dec
fnstcw
dec
leave
scas
inc
js
jp
sar
scas
das
rcl
or
ror
cmovbe
call
xor
sub
or
jnp
jae
popf
ret
outs
jnp
sub
xchg
in
lods
dec
iret
ins
data16
cmps
push
push
std
push
cmp
mov
cmc
adc
xchg
aas
mov
pop
loop
int
lods
mov
popf
ftst
out
inc
cmp
mov
nop
sub
mov
je
xchg
sar
aaa
mov
out
xchg
sbb
and
dec
(bad)
push
in
(bad)
and
mov
(bad)
sub
dec
mov
scas
jns
sti
jg
cmc
sbb
int
inc
pop
sar
push
and
xor
stos
aam
jns
xchg
mov
xchg
mov
repz
or
fwait
retf
xchg
pop
xchg
and
xchg
pop
xchg
cwde
mov
pop
or
inc
cmp
pop
into
test
sub
inc
cmp
aaa
imul
adc
adc
aam
xchg
mov
xchg
pop
xor
xchg
jmp
jle
shr
xor
fcmovnbe
xchg
stc
call
mov
jecxz
dec
pop
vphaddwd
mov
mov
cmp
or
xor
cmp
cld
mov
jp
jmp
sub
dec
mov
dec
dec
ss
adc
ja
pop
inc
clc
pop
cld
adc
inc
adc
mov
jmp
mov
clc
xchg
add
jae
repz
pop
mov
and
jle
push
fwait
adc
push
mov
mov
jae
and
clc
sbb
add
inc
pop
jecxz
xchg
lock
int3
cld
pop
jb
cld
dec
inc
inc
fidivr
outs
pop
sbb
ins
mov
sub
xchg
(bad)
sub
movs
neg
pop
mov
call
inc
mov
hlt
xlat
jnp
les
pushf
sahf
stos
cli
cmp
icebp
pushf
or
push
jbe
cwde
and
outs
dec
jae
aaa
xor
jnp
jl
mov
sahf
rol
mov
repz
sbb
test
dec
adc
test
in
mov
and
shr
(bad)
(bad)
dec
sahf
loopne
fisubr
mov
mov
cld
(bad)
js
jl
dec
add
pop
mov
cmp
cmp
aaa
dec
int3
adc
sub
pop
pop
xlat
imul
or
jae
cmp
inc
out
gs
movs
test
dec
leave
cs
cdq
shl
pop
pop
jmp
repz
push
adc
lods
sbb
aas
mov
sbb
stos
sub
dec
repz
xchg
jo
mov
lahf
and
cdq
sbb
mov
xor
push
cmp
lahf
fwait
mov
lahf
sbb
dec
push
stos
inc
or
fdiv
mov
pop
sbb
pushf
(bad)
addr16
inc
fs
xor
out
xchg
out
push
jg
mov
stos
mov
push
xor
mov
jb
cmps
sub
push
mov
mov
mov
or
cmp
mov
pop
fisttp
and
xchg
dec
repz
mov
xor
or
clc
xor
push
xor
outs
ins
leave
sbb
sbb
out
mov
test
xchg
cmp
and
sbb
mov
mov
rcr
dec
and
xor
leave
outs
dec
(bad)
cmc
jno
call
daa
gs
cmp
inc
mov
stc
pop
hlt
mov
mov
ja
sub
mov
hlt
mov
pop
dec
pusha
fwait
imul
call
push
dec
out
jb
mov
mov
xor
je
stos
in
les
cdq
iret
add
pusha
imul
hlt
popa
sbb
inc
pushf
pop
xchg
add
cmp
stos
xchg
dec
sub
mov
std
ja
pop
or
mov
mov
jbe
adc
fnstcw
add
and
pop
(bad)
mov
jo
loope
adc
icebp
(bad)
cmp
jl
es
add
and
jno
pop
mov
pushf
mov
scas
and
and
hlt
lds
dec
shr
lods
hlt
je
adc
int3
and
pop
je
loop
dec
(bad)
in
je
cmp
pushf
mov
popa
cmp
mov
sbb
ja
into
jns
test
xchg
mov
sbb
jge
ins
mov
mov
push
xor
loope
add
inc
xor
or
pop
ins
das
jo
scas
pop
sub
int3
(bad)
stc
mov
call
xchg
push
aas
cmp
push
pop
add
mov
push
iret
adc
stc
mov
dec
xchg
sbb
jmp
lahf
out
xchg
xor
xor
cmps
lahf
pinsrw
enter
xchg
mov
xor
mov
shl
push
sbb
(bad)
repnz
mov
or
add
or
jno
add
into
enter
xchg
jns
mov
lods
mov
jl
jle
mov
stc
es
out
xor
adc
pop
push
iret
aam
sbb
in
adc
ror
mov
loopne
and
outs
fcmovne
add
cli
out
add
mov
push
or
icebp
push
sub
mov
push
mov
out
(bad)
sub
out
lds
int3
cdq
cmp
outs
adc
mov
stc
push
dec
lods
aaa
out
or
or
xchg
int3
sbb
fist
pop
jle
xchg
loope
pushf
int
add
pusha
mov
rol
push
clc
(bad)
jmp
mov
adc
shl
pop
dec
js
inc
mov
xor
push
pop
xchg
(bad)
in
jmp
mov
and
adc
cli
mov
mov
movs
jno
and
and
inc
mov
push
sbb
jl
ret
xchg
xor
and
add
or
imul
inc
test
pop
add
fadd
je
out
mov
mov
sub
aaa
call
movs
and
std
out
(bad)
out
pop
jle
adc
and
scas
mov
sub
in
mov
push
mov
dec
cdq
nop
nop
jne
(bad)
jge
mov
pushf
pusha
xchg
inc
test
ins
hlt
test
fldenv
mov
push
adc
push
aas
std
loop
(bad)
addr16
retf
pop
pop
jbe
inc
daa
xor
add
mov
add
dec
xchg
movs
(bad)
jl
sbb
or
inc
mov
sub
std
cmps
mov
outs
dec
sub
push
dec
jp
popa
rcr
or
dec
out
adc
ss
pop
mov
xlat
or
xor
push
or
lds
mov
add
gs
in
inc
clc
cmp
xchg
iret
(bad)
sbb
xabort
and
pop
xchg
cmp
mov
icebp
or
(bad)
or
cmp
sub
and
les
enter
cmps
rol
call
sbb
retf
mov
fst
pop
cmp
xchg
(bad)
leave
call
mov
popf
adc
pop
int
mov
ja
neg
pop
mov
dec
clc
stos
or
sahf
imul
push
xchg
mov
stos
sbb
imul
add
ss
lahf
and
pushf
in
or
adc
enter
das
dec
outs
paddsb
scas
xchg
aam
or
addr16
sbb
jl
jb
push
xchg
inc
mov
jne
(bad)
cmp
pop
imul
push
shl
xor
test
dec
(bad)
cmc
dec
and
lea
push
dec
adc
sbb
xchg
ins
jecxz
cmp
js
mov
aaa
mov
dec
push
sub
sbb
les
ret
mov
ins
mov
aas
inc
pop
xchg
cs
out
adc
out
dec
push
sub
mov
gs
test
pop
stos
gs
cmp
nop
jmp
popa
xchg
test
inc
xchg
aam
test
fadd
sbb
sbb
popf
dec
dec
adc
sbb
cmps
push
call
push
inc
dec
lods
test
nop
add
jle
inc
(bad)
cmp
inc
jno
lods
iret
mov
dec
and
jmp
lock
and
and
or
mov
xor
fnsetpm(287
mov
sub
xor
mov
(bad)
sar
jo
ins
and
test
inc
cmp
pop
rcl
adc
xor
imul
dec
adc
aaa
(bad)
jmp
or
xor
(bad)
push
mov
sub
and
sbb
pushf
pop
movs
bound
sub
popf
jae
or
mov
add
or
addr16
mov
mov
inc
inc
mov
mov
and
jle
push
jle
jmp
je
stos
pop
pop
test
mov
icebp
dec
jmp
mov
aam
lock
adc
cmc
push
dec
je
inc
in
push
jb
into
add
daa
inc
imul
jl
popf
imul
loope
jle
xlat
pop
out
push
lods
pop
sub
cmps
adc
idiv
ror
dec
or
outs
inc
pop
(bad)
xchg
loopne
pop
cs
retf
sub
or
dec
inc
mov
ins
fwait
das
arpl
cs
ret
dec
pop
dec
aas
inc
cli
pusha
sub
xor
test
xor
add
adc
je
(bad)
out
dec
pop
cmp
loop
adc
xor
sti
pop
push
bound
adc
shl
inc
pop
sar
pop
jg
mov
sub
jno
sub
stc
or
xor
cs
icebp
sbb
jb
add
dec
push
pop
mov
mov
(bad)
shl
push
popf
int
add
pop
mov
mov
add
cld
jns
and
jmp
dec
sub
pop
std
mov
repnz
mov
or
cmp
inc
mov
cmp
ficom
sahf
mov
cli
pop
and
sbb
xchg
mov
out
pop
or
sub
xor
scas
ret
pop
xor
cli
jge
mov
cwde
test
icebp
cmc
or
je
mov
push
int3
fs
hlt
arpl
mov
arpl
inc
mov
daa
add
into
lea
pop
add
clc
aas
mov
inc
lods
mov
jae
inc
in
xchg
mov
call
jne
dec
fwait
lds
mov
cmp
adc
sbb
sar
pop
gs
pop
inc
lock
retf
mov
dec
push
stos
dec
rcr
loopne
sub
jb
mov
mov
sub
dec
shr
in
ficomp
cmp
push
aad
es
push
cmp
push
and
shl
popa
shl
dec
enter
mov
je
sbb
je
adc
inc
adc
sbb
add
mov
pop
fdiv
sar
pop
arpl
popf
pop
(bad)
loopne
and
push
in
push
dec
push
in
std
add
mov
pop
into
movs
fimul
or
clc
sar
arpl
mov
pop
lahf
test
in
sbb
inc
and
and
stc
or
fcmovbe
push
inc
push
out
dec
pop
scas
sbb
pop
imul
push
imul
sub
clc
jb
xor
fld
fwait
xor
loopne
and
icebp
sbb
adc
aam
xchg
call
push
popf
or
(bad)
int
je
(bad)
sbb
and
cmp
adc
sub
inc
inc
jns
xor
into
xchg
shrd
mov
call
jl
out
imul
jno
fsubr
xor
mov
xchg
pop
inc
mov
pop
sub
mov
and
push
inc
xor
push
fcom
mov
das
or
push
jecxz
adc
xchg
mov
mov
aaa
retf
(bad)
loopne
enter
bound
test
inc
sti
cld
and
and
stc
fldenv
xor
iret
inc
out
mov
cmp
aam
sub
fimul
mov
(bad)
cs
imul
add
into
hlt
clc
jle
mov
arpl
test
clc
mov
push
aad
jecxz
shl
shl
adc
and
jecxz
xchg
sar
call
(bad)
in
and
lea
and
dec
jne
mov
mov
jmp
clc
mov
movs
iret
xchg
ins
push
lods
sbb
mov
inc
adc
mov
retf
inc
ret
jp
hlt
cmp
jle
shl
jmp
dec
inc
shl
add
mov
fwait
pop
mov
mov
mov
xchg
xor
test
loope
aaa
pop
jg
mov
loopne
(bad)
(bad)
fbld
lock
test
in
sub
pushw
jle
in
fs
xchg
xor
push
cwde
pop
mov
mov
pop
and
dec
loop
addps
idiv
pop
mov
and
js
stos
mov
sahf
mov
test
push
out
cmp
out
or
mov
test
adc
paddb
dec
fidiv
jle
daa
mov
adc
lods
repz
adc
xchg
out
xor
and
and
push
mov
add
fisttp
test
test
retw
hlt
push
cwde
out
das
or
ror
scas
out
or
test
retf
stos
or
push
lock
sbb
xchg
fwait
loope
and
xlat
mov
dec
std
xchg
fwait
sbb
cmp
sbb
xor
inc
test
mov
cmp
movs
cli
test
jne
imul
or
movs
mov
jmp
mov
test
test
ss
mov
add
call
aaa
mov
fstp
xchg
std
mov
pop
mov
ds
(bad)
repz
(bad)
xor
add
repnz
jns
fstp
pushf
mov
call
sub
and
pop
aaa
loope
pusha
and
add
sahf
push
pop
mov
out
jae
mov
enter
(bad)
mov
inc
jle
push
add
inc
ja
mov
cmp
sahf
sub
and
cmp
movs
dec
popa
retf
inc
fcmovnu
mov
mov
mov
jbe
and
imul
pop
add
rcl
aas
(bad)
in
ret
mov
mov
and
xor
enter
jo
mov
add
sete
mov
fstp
in
repz
or
fild
mov
pop
cld
aad
ins
xor
xlat
cmp
jg
pop
and
cs
jnp
ss
sub
ss
lds
loopne
sub
aaa
std
pop
dec
retf
cmc
cmc
adc
jge
or
shl
aas
sbb
in
xchg
mov
addr16
jne
sbb
jl
jmp
js
inc
cs
jae
inc
into
aam
(bad)
shr
dec
xor
sub
inc
push
pop
push
cmc
hlt
(bad)
std
lahf
jl
mov
fsubr
popf
ja
cmp
xchg
fisubr
xor
mov
or
std
xchg
hlt
pop
test
jae
ror
(bad)
jo
ret
jp
sub
aam
lods
fild
jmp
daa
(bad)
xchg
jno
outs
xlat
sbb
pop
add
cmp
dec
mov
retf
mov
call
mov
test
cmp
mov
and
adc
scas
pop
aam
dec
cmp
xchg
loop
ins
pop
or
sbb
lahf
aas
dec
int
test
leave
in
fimul
adc
bts
lods
add
dec
gs
inc
loop
lods
enter
fdivr
mov
inc
xor
(bad)
xor
shl
adc
clc
(bad)
lock
sbb
push
mov
fstp
mov
imul
pop
js
mov
jo
sbb
inc
mov
push
scas
cmp
dec
hlt
stc
xor
jge
lock
lock
jge
dec
or
cmp
jo
add
jno
pushf
and
daa
arpl
rcr
shl
daa
add
xchg
loope
xor
mov
sahf
loop
data16
inc
dec
fld
dec
in
mov
cmp
fnstenv
fld
mov
sbb
add
push
iret
loopne
push
inc
es
in
inc
aam
cmp
dec
xchg
push
jns
enter
mov
icebp
mov
retf
scas
vmovss
adc
das
sti
mov
inc
imul
xor
test
nop
ror
push
mov
mov
retf
cmp
mov
pop
cmp
cdq
in
pop
mov
aad
lods
movs
int3
arpl
call
jno
add
fucomi
dec
push
and
or
pop
jmp
aad
data16
ja
test
clc
add
sub
mov
jb
imul
popa
ret
inc
popa
xchg
sub
mov
xor
movs
(bad)
push
sbb
cwde
adc
test
test
xor
aad
sti
loop
push
inc
dec
mov
popa
cmp
sub
loope
lahf
movaps
fsub
xlat
fist
cmp
mov
mov
add
adc
ins
or
scas
cmp
mov
popf
das
xchg
inc
loopne
std
aam
sbb
mov
(bad)
xlat
mov
fistp
mov
cli
and
in
ret
pop
add
add
sub
mov
adc
gs
add
ins
ss
or
fprem1
jne
sbb
mov
call
mov
sub
xor
jecxz
xchg
stos
adc
call
add
scas
fiadd
or
in
xchg
hlt
out
loopne
out
outs
cmp
xor
loopne
jne
sbb
cmp
xchg
fdivr
sar
stos
xor
mov
adc
mov
jmp
pusha
(bad)
inc
pop
cld
add
outs
loope
mov
push
stc
push
push
fcom
cmp
jmp
(bad)
dec
shl
call
popa
cli
cmp
aaa
retf
test
jg
inc
imul
dec
loopne
or
cdq
icebp
mov
addr16
pop
fwait
and
or
nop
push
mov
shl
push
rcl
add
in
movs
int
dec
add
mov
adc
pusha
retf
mov
outs
push
and
dec
pop
(bad)
lea
or
dec
inc
sub
arpl
xchg
int3
test
xchg
fdivr
xor
inc
imul
jecxz
dec
cdq
hlt
jp
mov
(bad)
bsr
gs
cmp
shl
aad
mov
sar
mov
push
shl
xor
test
pop
rcr
(bad)
mov
mov
popa
test
psubd
mov
aaa
mov
cmp
(bad)
sub
mov
lock
ret
mov
outs
mov
and
inc
push
ror
lods
push
scas
dec
sbb
push
mov
out
out
push
mov
in
mov
xor
add
es
inc
popa
xchg
sbb
add
dec
adc
stos
icebp
in
jae
out
push
mov
xor
mov
jno
addr16
and
clc
sub
rol
int3
dec
add
pop
push
pop
mov
aad
ins
mov
test
dec
(bad)
jb
mov
popa
mov
push
inc
sti
sbb
das
scas
(bad)
adc
cwde
jmp
mov
cmp
mov
sbb
mov
bound
sub
lods
and
in
adc
outs
adc
dec
loope
jae
sbb
in
adc
xchg
xchg
mov
sbb
or
fist
or
sbb
aam
inc
xor
push
sar
pop
dec
(bad)
mov
jge
sub
rol
dec
fidiv
(bad)
idiv
int
inc
mov
and
xor
cmc
push
repnz
es
call
test
jmp
adc
inc
sbb
push
leave
inc
sbb
sbb
in
inc
out
jb
pop
jg
add
ret
ret
xor
push
repz
clc
jnp
inc
cli
lds
out
sahf
pop
out
fwait
in
jmp
jp
dec
sub
xchg
cmp
jne
adc
xor
in
loop
cmp
pop
lea
add
inc
xor
loop
jns
inc
and
out
and
xor
pop
repz
inc
dec
movs
nop
ss
je
adc
fadd
sbb
mov
lahf
daa
mov
mov
xor
jg
iret
cmp
pop
jmp
mov
sbb
add
mov
mov
cmp
fld
add
jnp
add
sub
push
xchg
jg
xor
popa
xchg
mov
mov
sub
ja
cmps
or
push
fwait
inc
test
out
mov
stos
and
sub
or
js
sar
mov
rep
mov
retf
movs
pop
ins
jecxz
cmp
push
(bad)
xlat
pop
adc
push
iret
jmp
jmp
rcl
movs
cld
sbb
adc
sub
repnz
idiv
cdq
sar
retf
in
es
pop
rcl
dec
mov
js
in
dec
push
push
pushf
pop
dec
(bad)
xor
(bad)
aam
lahf
in
pop
xchg
sti
popf
and
sbb
mov
pushf
repnz
std
cmps
shr
fild
call
mov
imul
jbe
adc
pop
push
cs
xchg
push
fs
mov
adc
int
and
sub
jp
jp
mov
out
aad
xor
fwait
mov
fnstenv
jno
and
sub
fwait
lock
scas
xor
add
iret
hlt
(bad)
fisubr
jle
test
stos
xor
loopne
xchg
mov
fdivr
xchg
or
daa
scas
pushf
cld
mov
movs
movs
and
mov
les
call
rcl
fwait
pushf
fimul
xchg
(bad)
jmp
call
and
and
call
(bad)
(bad)
das
cmp
arpl
in
inc
mov
adc
and
or
or
addr16
push
dec
lods
mov
loope
push
ret
mov
jp
popf
jbe
jmp
jmp
mov
jnp
pop
pusha
sub
pop
lds
pop
fstp
data16
jo
sub
cmp
mov
mov
jae
push
mov
jg
inc
es
loopne
movs
cli
inc
xor
repz
jo
repz
(bad)
inc
and
dec
mov
imul
adc
jmp
adc
xchg
call
xor
js
mov
inc
popa
aaa
je
mov
or
xchg
jl
fadd
mov
adc
aam
dec
fstp
dec
shl
fs
adc
shl
repnz
jnp
fist
int
add
retf
push
mov
adc
cdq
add
iret
(bad)
in
imul
jp
cmp
fisttp
stc
loope
xchg
in
call
mov
mov
pop
mov
stc
sub
or
or
sbb
xchg
and
mov
rcr
add
mov
cli
jae
mov
rcr
mov
jl
rsm
jl
retf
or
test
xor
test
cmp
xchg
addr16
fisttp
ins
mov
cmc
repz
cmp
sub
pop
or
xor
adc
xchg
push
cmp
fcmovb
pop
call
pushf
retf
in
mov
loop
xchg
nop
aas
sbb
inc
dec
mov
mov
retf
cli
lahf
adc
(bad)
add
adc
sub
loop
jo
or
bound
mov
popf
cmp
retf
dec
mov
loope
cmp
jae
js
and
mov
push
cmp
(bad)
loope
dec
mov
in
loop
add
jne
xchg
push
mov
in
idiv
out
mov
cdq
rcl
data16
aad
neg
pslld
jnp
jb
(bad)
iret
std
out
mov
aad
out
pop
ins
sub
loop
(bad)
inc
mov
inc
push
dec
mov
add
jo
mov
adc
cli
or
cmps
add
mov
jge
inc
cmp
mov
adc
nop
mov
sbb
dec
imul
clc
xor
popw
test
lods
out
inc
popa
or
pop
shl
adc
and
arpl
jbe
mov
add
cmp
add
jg
xchg
jbe
pop
popa
dec
inc
or
stos
cdq
cmp
or
mov
sub
ret
ror
les
int3
arpl
mov
mov
js
repz
cmp
add
or
push
cvtps2pd
pop
adc
cld
inc
movs
test
or
cmp
jae
sub
sbb
into
call
push
scas
xor
test
pop
cmp
loop
xor
pop
adc
(bad)
in
enter
int
or
add
fimul
shl
inc
test
fcomp
sti
sbb
clc
dec
lea
fbstp
ins
xchg
(bad)
cmp
sar
sub
fdiv
cmp
dec
inc
jge
dec
iret
out
jnp
jecxz
inc
sub
xor
add
mov
test
int
aas
or
clc
cmps
push
call
leave
or
inc
repz
pop
jl
daa
cmp
mov
sub
jae
nop
lock
out
sbb
scas
das
std
mov
sbb
pop
in
clc
xor
xchg
dec
jnp
jno
pmulhuw
push
imul
jecxz
mov
popf
pop
ins
(bad)
imul
jl
shr
mov
jno
adc
inc
xor
(bad)
mov
pop
hlt
aad
dec
mov
jbe
xor
jbe
in
mov
popf
or
push
adc
dec
arpl
xor
and
lahf
sbb
repnz
mov
lods
jmp
or
push
xchg
pop
xlat
dec
jo
stos
jl
retf
sahf
cwde
dec
or
hlt
or
or
cmp
in
(bad)
and
mov
pop
test
stos
add
add
aam
lock
jnp
adc
jns
jge
cmp
sahf
test
int3
loope
ss
es
fdiv
in
cmps
xchg
adc
adc
add
imul
lods
mov
sbb
dec
jl
dec
in
cmp
mov
arpl
retf
jl
enter
mov
loop
push
pop
and
xor
push
ins
adc
test
bound
fist
adc
mov
mov
outs
ret
push
xor
fcmovne
pop
xor
mov
sbb
mov
in
push
xor
jb
sar
stos
aad
dec
mov
and
dec
push
test
lods
dec
inc
loop
cwde
cli
xor
sbb
mov
enter
cmps
pop
add
cmp
imul
ror
adc
pop
cdq
cdq
push
cmp
scas
out
into
cwde
cmp
mov
imul
push
mov
mov
mov
push
push
jo
dec
cmc
jne
popa
fnstsw
add
popa
cmp
adc
add
mov
xchg
mov
out
sub
pop
sahf
adc
(bad)
(bad)
frstor
dec
loop
daa
xchg
test
cs
inc
ja
mov
jno
ins
mov
sub
dec
jmp
aad
jle
call
add
ret
ret
jo
ret
in
loop
xlat
loop
sbb
in
js
push
mov
fisubr
xchg
inc
movs
sub
mov
aaa
out
movs
jae
test
mov
mov
jle
addr16
out
inc
repnz
add
(bad)
call
xchg
popf
push
xchg
(bad)
mov
lods
mov
pop
ror
xor
mov
dec
mov
xchg
dec
movs
add
mov
cld
cmp
jmp
pop
push
push
shr
push
mov
sbb
jnp
mov
dec
aas
dec
movs
add
test
iret
push
cmp
iret
sub
mov
daa
and
jbe
rcr
xor
outs
and
pop
adc
push
scas
sbb
dec
scas
push
or
pop
dec
fidiv
int3
inc
push
or
mov
(bad)
ins
les
call
(bad)
sub
adc
arpl
fimul
dec
sbb
add
mov
dec
or
mov
inc
popf
jno
retf
cmps
xor
fwait
sbb
dec
sub
jle
mov
pop
pop
test
movs
or
lahf
dec
jbe
sub
xchg
movs
arpl
ficom
(bad)
cmp
adc
inc
mov
shr
or
mov
mov
outs
nop
mov
fsub
adc
adc
jns
cmp
sub
rcl
mov
pop
fcmove
dec
mov
mov
sti
push
push
scas
fs
inc
adc
jns
jge
dec
mov
mov
scas
out
stc
mov
mov
neg
pop
repz
push
imul
pop
xchg
mov
xor
sbb
ror
dec
shr
and
add
xchg
addr16
xchg
pop
addr16
mov
jne
push
outs
or
gs
pop
mov
dec
fwait
cmp
cwde
nop
cli
and
std
dec
into
or
jnp
rol
out
mov
cwde
pop
mov
inc
pop
int
inc
frstor
cs
lods
mov
sti
sar
jge
fdivr
neg
xor
jae
in
int3
stos
xchg
mov
fistp
popa
rcl
jns
(bad)
cmps
dec
icebp
imul
xchg
push
dec
call
test
es
mov
shl
ss
leave
cmp
gs
jae
and
push
pop
and
mov
xlat
aam
into
in
dec
push
pop
in
inc
test
mov
test
xor
(bad)
mov
dec
mul
inc
mov
push
in
aam
pop
push
in
push
jb
aas
lods
jp
and
pushf
mov
mov
cld
shl
imul
and
cmp
jmp
push
or
mov
jmp
push
sub
add
adc
adc
add
mov
cmps
mov
je
mov
out
jmp
jecxz
xor
iret
push
into
stc
mov
cmp
xchg
scas
or
pop
mov
aam
push
repnz
stos
iret
gs
jecxz
mov
jecxz
les
fnstenv
sahf
adc
cmp
iret
das
(bad)
push
pop
jecxz
inc
mov
jg
sahf
cmp
and
stc
jmp
mov
xchg
push
fldenv
stc
in
into
data16
out
jbe
cmp
dec
std
mov
les
(bad)
sbb
pop
loope
mov
mov
inc
int
loop
out
xor
xor
in
push
pusha
mov
imul
movs
scas
pop
xor
or
mov
push
mov
mov
jnp
push
in
movs
jge
ficom
jl
xor
xchg
xchg
dec
xchg
int
jecxz
scas
inc
je
popa
push
cmp
mov
mov
neg
imul
sbb
xchg
or
dec
ins
int3
jne
fcom
or
lods
std
xchg
iret
mov
xor
dec
shr
lods
mov
arpl
in
imul
clc
jmp
push
in
add
push
loope
ss
pushf
sub
sub
xor
in
sub
das
xchg
ins
lock
xor
mov
jne
aam
jmp
cmp
and
adc
data16
mov
inc
ja
mov
int
and
test
js
rcl
jmp
sahf
cmc
call
je
cmp
pusha
adc
mov
push
(bad)
data16
add
pop
xchg
jge
enter
inc
cli
sub
test
sbb
gs
or
std
pop
xchg
outs
mul
test
and
jmp
or
sbb
imul
mov
ss
dec
scas
ret
data16
shr
neg
cs
iret
and
cdq
mov
stos
lea
enter
adc
repz
cmp
mov
movs
sbb
icebp
mov
adc
xor
call
rcr
popa
add
jne
or
cmps
jmp
adc
out
push
fnsave
cwde
adc
(bad)
in
sub
or
sub
mov
aad
loope
mov
cwde
cmps
sub
enter
pop
fild
jnp
ins
pop
jge
repz
dec
sub
inc
push
jns
push
mov
jmp
fcmovnb
push
jnp
iret
mov
aad
sti
xor
xchg
shl
cmps
aaa
enter
(bad)
fisub
xchg
daa
ds
inc
out
mov
out
sub
dec
sub
adc
lods
mov
out
sub
add
xor
call
mov
mov
sub
stos
mov
and
(bad)
ins
jge
out
ror
fcmovnbe
cdq
test
inc
js
sub
mov
enter
movs
into
mov
push
inc
pop
lds
mov
call
push
cs
pop
mov
sbb
jp
stos
scas
sub
cmp
in
popa
mov
enter
sbb
call
outs
sar
xchg
inc
mov
mov
or
ret
cmp
sbb
jb
or
test
mov
out
pop
jg
or
add
add
(bad)
sub
ror
xbegin
test
pop
sbb
mov
jnp
mov
cwde
lea
mov
xchg
movs
retf
je
mov
rol
fnstenv
adc
jmp
adc
inc
fwait
inc
xor
mov
jb
fmul
push
add
cwde
push
icebp
mov
sub
fild
xchg
mov
mov
into
loop
call
movs
inc
mov
pop
sbb
xchg
mov
call
xchg
jge
jp
mov
pop
in
inc
mov
inc
xchg
imul
cwde
push
es
inc
push
je
add
adc
jp
or
ss
mov
cli
lods
lahf
retf
xor
xor
and
push
call
or
dec
lock
retf
fnstsw
loopne
stos
mov
aas
scas
lods
mov
mov
add
(bad)
(bad)
(bad)
mov
sbb
out
mov
push
repz
enter
xchg
xor
idiv
dec
imul
pop
jno
mov
xor
push
test
sbb
mov
pop
movs
mov
fs
in
test
push
loope
ins
adc
or
xor
dec
mov
popf
in
mov
mov
inc
hlt
movs
jbe
fist
fcmovnb
scas
adc
cmp
jge
xor
shl
sahf
in
out
mov
call
ds
xchg
int
adc
retf
push
inc
hlt
jecxz
jae
add
jmp
je
outs
cmp
aam
mov
and
cs
fdiv
les
cmp
les
out
cmps
cmp
enter
pop
jne
retf
(bad)
xchg
cmp
cmp
jae
pop
push
push
xchg
lock
imul
mov
mov
iret
inc
test
ret
xor
gs
push
out
sar
jecxz
pop
cmp
ret
(bad)
inc
ret
or
mov
sbb
int
dec
add
push
jmp
jg
repnz
mov
fsub
fcomp
pop
pop
retf
rcl
ret
jp
test
stos
leave
loopne
cwde
dec
push
add
add
pushf
mov
test
ja
out
xor
leave
lods
mov
xor
dec
hlt
xchg
dec
push
lock
push
push
or
sub
mov
dec
inc
clc
clc
icebp
imul
lods
out
mov
cli
mov
test
jbe
(bad)
and
leave
pop
sbb
sbb
cli
sbb
add
xchg
and
cmp
cmp
inc
aaa
pop
(bad)
cmps
adc
sub
fstp
add
push
or
rol
ror
aad
neg
ins
xchg
sbb
cli
pop
aad
push
(bad)
jecxz
jg
and
dec
jge
sub
pop
or
jno
jecxz
cmps
jo
sbb
jo
mov
outs
sbb
bound
jle
addr16
clc
jnp
jne
mov
fst
and
stos
xchg
imul
fld1
pop
inc
neg
cmp
adc
aad
clc
mov
xlat
(bad)
into
xor
xchg
gs
dec
sub
add
inc
mov
aas
cmp
mov
fnstsw
call
bound
retf
xchg
mov
enter
ss
mov
sub
xchg
jl
mov
add
xlat
mov
pop
mov
xor
jecxz
sub
in
adc
sub
push
mov
sbb
cmp
adc
sub
dec
push
xchg
pop
adc
(bad)
(bad)
push
inc
xor
mov
out
xchg
popa
addr16
xor
arpl
loop
loope
add
jecxz
dec
xchg
mov
mov
xchg
pop
xchg
outs
pop
pop
sub
dec
mov
out
dec
xchg
sub
ins
jnp
mov
loop
test
cmps
push
xor
out
das
adc
pop
xchg
or
outs
or
dec
pop
inc
push
xchg
adc
pop
xor
inc
dec
jge
in
int
hlt
mov
daa
fbld
and
(bad)
add
mov
jbe
stc
or
xor
out
fstp
sub
dec
or
mov
int
pop
lods
and
cmp
ret
sahf
inc
(bad)
(bad)
xchg
lahf
add
or
shr
jae
push
test
cmp
sti
stc
sub
mov
scas
fdiv
cld
jmp
add
or
xchg
das
xor
mov
cmc
aad
or
std
(bad)
sub
mov
cs
push
jp
mov
test
push
sub
(bad)
jb
inc
xlat
out
cmp
adc
sbb
xchg
ret
push
mov
js
dec
or
or
cli
stos
or
jmp
push
jae
das
(bad)
cmp
jmp
xchg
jae
jge
loope
ffreep
jbe
std
dec
fisttp
fnstenv
push
movs
sub
inc
mov
les
dec
fucomi
add
popf
aad
mov
call
mov
xchg
fsubrp
pop
(bad)
add
adc
or
push
jge
ins
or
scas
pop
ret
sbb
mov
scas
mov
sbb
xor
popf
push
loopne
ja
lea
loop
outs
sbb
pop
jl
adc
mov
rol
jmp
push
and
lea
and
mov
lods
xor
inc
push
xchg
enter
lods
(bad)
sbb
push
push
mov
dec
add
xor
fsubr
xor
xchg
sub
ds
jne
push
sub
xor
inc
ret
dec
dec
push
sbb
dec
movs
xchg
pop
icebp
fild
cmp
repnz
retf
cmp
test
fcmovbe
aaa
xchg
mov
pop
sahf
mov
mov
sub
cmp
(bad)
pop
dec
ja
jge
lods
imul
rol
or
(bad)
sbb
pop
js
xchg
push
movs
mov
sbb
add
mov
cmc
cmp
adc
add
or
cwde
test
cli
or
sahf
push
add
adc
jl
movs
das
cmp
or
jnp
mov
hlt
hlt
mov
jmp
(bad)
ds
cmp
pushf
adc
add
sbb
add
mov
fcomi
jmp
xor
aaa
je
or
out
inc
rcr
push
pop
ret
in
xchg
add
in
jb
inc
(bad)
push
and
cmps
stc
jo
xchg
push
ins
xor
pop
nop
scas
push
shr
and
xor
sbb
retf
iret
in
in
adc
mov
fild
inc
jl
repz
hlt
les
pop
fst
cmp
dec
and
std
in
fld
fidivr
or
test
jne
and
repz
mov
ficomp
ins
lea
bound
xchg
je
mov
pop
adc
or
adc
(bad)
cmps
nop
inc
ret
loopne
cmp
lahf
int3
xor
in
push
inc
or
ins
lds
mov
xor
mov
sub
arpl
pop
ja
(bad)
leave
and
push
jg
out
ret
jge
push
mov
clc
fadd
aas
jae
retf
in
daa
daa
mov
add
mov
sub
jno
cmp
xor
jge
in
mov
push
sbb
inc
(bad)
fwait
shl
movs
cmp
jno
hlt
pop
push
sub
pop
push
or
daa
loopne
mov
xchg
add
popf
xor
jnp
inc
mov
xchg
ins
iret
add
das
mov
pop
shl
cmp
mov
icebp
cmp
dec
das
loopne
push
push
xor
sub
call
daa
aam
leave
les
dec
test
adc
int
fisttp
xor
addr16
repz
xor
cld
shl
push
aaa
out
pop
inc
add
mov
test
dec
not
and
and
neg
into
xchg
ret
cmps
dec
adc
pop
sbb
push
pushf
inc
mov
or
mov
sbb
out
in
pop
mov
iret
xchg
jle
push
sub
mov
es
push
cdq
inc
or
clc
add
cmp
mov
popf
cs
into
push
out
pop
lods
mov
add
lahf
das
pop
sub
add
sbb
in
jg
mov
push
xor
cld
and
xchg
(bad)
mov
push
mov
jae
sub
mov
lahf
call
or
daa
gs
leave
or
out
mov
and
dec
ret
test
xor
xor
push
pop
out
sub
lods
int3
test
gs
mov
outs
mov
adc
xchg
sbb
loopne
hlt
cdq
mov
fnstenv
mov
sub
xchg
mov
mov
ficom
lahf
dec
or
fs
repnz
clc
push
jne
or
mov
and
mov
add
or
data16
shl
xchg
shl
xchg
cmp
mov
xchg
add
mov
movs
(bad)
lods
loop
inc
test
jno
and
adc
in
and
scas
clc
fidiv
inc
pop
push
pop
mov
fwait
mul
test
xchg
pop
dec
stos
fsub
adc
dec
xor
ret
retf
lods
xchg
neg
add
dec
add
lds
push
push
push
push
pop
(bad)
repz
test
lods
ss
adc
pushf
and
loope
int3
stos
stc
mov
int
xor
es
mov
imul
mov
or
inc
repz
jmp
out
xor
mov
in
adc
mov
or
add
or
xor
xor
cmp
stos
jle
jg
pop
movs
pusha
in
retf
push
adc
sbb
push
jo
ret
mov
mov
mov
popf
leave
idiv
adc
add
shr
pop
cmp
cli
mov
cmc
sar
scas
push
rcr
lock
lds
xchg
outs
or
nop
adc
and
aas
(bad)
test
sub
stos
or
push
in
test
dec
pop
je
das
idiv
imul
shl
shl
ror
pop
cmp
lock
inc
dec
push
or
add
jg
jmp
dec
pop
movs
and
jne
test
(bad)
es
fs
in
dec
inc
sar
loope
aad
push
xchg
out
add
dec
xchg
dec
cmp
gs
jmp
(bad)
mov
hlt
push
js
movs
leave
jl
and
lods
pop
aam
fcomp
fs
cwde
cmps
push
adc
sbb
xor
push
push
mov
mov
mov
shr
fxch
(bad)
add
cld
retf
fwait
pop
or
ret
mov
mov
xchg
mov
test
cmp
add
arpl
mov
add
rcr
pop
test
cmp
and
retf
pop
cdq
arpl
repz
lock
outs
adc
mov
mov
ds
mov
xchg
pop
cmp
fnstenv
pop
les
xor
dec
retf
mov
test
ss
(bad)
cmp
dec
jns
sar
in
jmp
cli
fwait
fs
enter
lds
adc
inc
sub
fsubr
addr16
pop
fcmove
repnz
cmp
inc
test
cmps
pop
cli
jnp
dec
jle
jge
sub
push
sub
in
jg
xor
jb
pushf
in
jb
and
xlat
sub
xor
adc
js
xchg
in
scas
mov
idiv
xchg
rcl
pop
or
in
adc
popa
push
push
cmp
push
pop
retf
pushf
and
outs
jo
repz
loope
daa
inc
popa
scas
mov
dec
ficom
(bad)
loopne
pop
pop
sbb
retf
mov
pop
dec
inc
(bad)
and
das
fstp
and
mov
das
rcr
(bad)
js
and
retf
or
pop
cmp
fs
movs
jecxz
in
or
jo
mov
push
(bad)
jbe
pop
(bad)
jnp
mov
and
jb
lahf
xchg
in
xchg
cli
(bad)
push
movs
aad
adc
jecxz
imul
jle
(bad)
out
mov
ror
add
xchg
aam
pop
add
test
jge
mov
xchg
inc
icebp
dec
cmp
dec
call
sbb
cmps
xchg
out
push
push
popa
jg
mov
and
pop
test
xchg
out
pop
mov
retf
sub
xor
loope
scas
xlat
pop
pusha
jbe
add
in
jns
and
add
fisubr
out
pop
jmp
lahf
inc
push
sbb
mov
pop
push
test
jmp
dec
jno
mov
popf
popf
hlt
out
or
ss
test
ins
xor
inc
aad
pop
sahf
pop
lock
jno
xchg
fnstenv
mov
mov
sub
shl
push
shl
dec
daa
stos
and
sub
pop
pop
rep
sahf
unpckhps
inc
or
push
mov
or
xor
loop
mov
push
mov
or
repnz
icebp
mov
iret
(bad)
sbb
ins
loop
and
add
(bad)
adc
pop
sbb
cli
xchg
mov
pop
mov
mov
std
call
xchg
or
mov
mov
push
cmp
jb
push
add
dec
sbb
xchg
int3
lods
or
pop
pushf
clc
pop
loop
mov
pop
jmp
lahf
rcl
push
div
cmp
jno
mov
inc
add
lods
ret
outs
aam
ret
(bad)
sti
mov
jg
std
shl
leave
mov
daa
test
xchg
cmps
pop
mov
mov
xchg
cmp
add
jle
ret
dec
dec
xchg
mov
shl
jno
jns
sbb
sti
fsubr
push
push
sti
add
leave
ds
xor
jmp
add
imul
es
xchg
jae
cld
sbb
iret
data16
sbb
jo
add
and
xor
daa
xchg
mov
int
lds
cmc
push
fild
cmp
mov
iret
imul
sbb
mov
jmp
cmp
retf
cmp
pop
xchg
jmp
loop
push
pop
or
mov
(bad)
sub
jns
ja
addr16
(bad)
and
pop
mov
in
jb
mov
idiv
retf
jb
fstp
retf
fiadd
ror
neg
mov
mov
mov
vprotd
out
inc
test
cmp
push
bound
mov
push
dec
out
mov
lahf
mov
out
push
in
call
stc
(bad)
inc
mov
adc
into
dec
add
xchg
mov
xlat
shl
jmp
sbb
fmul
ins
nop
int
aaa
ins
call
aad
push
mov
xor
jmp
pop
mov
(bad)
in
cmps
xchg
shl
or
adc
add
push
scas
stos
jg
push
(bad)
push
outs
jae
xchg
mov
call
jmp
or
sbb
sahf
sbb
mov
(bad)
clc
dec
inc
cld
pop
xchg
rcl
data16
loope
mov
xchg
jno
inc
jle
adc
stc
dec
sbb
jg
dec
or
dec
xor
outs
cmp
jp
je
pop
cmp
bound
stos
gs
adc
aas
movs
adc
mov
cs
int3
retf
es
cld
dec
jge
arpl
sub
push
push
xor
xchg
cdq
imul
ins
loope
inc
pop
dec
test
gs
stos
dec
(bad)
in
sahf
add
mov
cmp
xchg
sbb
sbb
cwde
xchg
mov
out
clc
and
mov
sub
lods
sub
xchg
xchg
cmp
shl
jp
xor
ins
push
xor
or
adc
or
mov
aas
movs
inc
iret
inc
in
inc
pop
jno
stos
mov
loop
pop
add
rcl
aas
pushf
cmps
mov
out
mov
jmp
nop
mov
ror
jmp
pop
and
stos
movs
scas
xchg
sub
mov
jg
dec
xchg
push
pop
xchg
bound
js
xor
jmp
xchg
call
mul
jbe
adc
test
dec
mov
add
and
lds
es
cmc
or
adc
fs
sbb
(bad)
ja
in
ins
or
mov
mov
dec
das
cmp
ret
xor
test
fwait
cdq
mov
adc
inc
jmp
xchg
pop
mov
enter
dec
sub
sahf
sbb
sahf
pushf
mov
cdq
test
sbb
shr
adc
or
jg
loope
sub
icebp
je
ja
cmps
adc
fidiv
(bad)
jbe
iret
dec
out
loop
fucomip
out
fldenv
ret
addr16
in
rol
out
sti
mov
movs
scas
movs
int3
mov
das
or
or
jne
cmp
cwde
movs
xor
push
inc
xchg
mov
outs
sbb
mov
mov
or
cmp
mov
sub
add
inc
add
push
sbb
mov
and
sub
shr
push
fcomp
les
popa
jecxz
fcmovnu
xor
jge
xchg
int
mov
mov
dec
mov
std
or
fcomp
in
call
inc
cmp
lahf
xor
and
inc
ins
push
mov
arpl
jae
push
in
lea
addr16
popf
(bad)
push
fsubr
rcl
dec
push
xchg
lods
les
scas
test
jae
fsubr
mov
movs
mov
and
stos
sti
inc
test
ins
xor
bound
in
outs
mov
push
das
aas
stc
dec
sbb
dec
out
jne
std
cmp
outs
mov
cmps
xor
sbb
int3
mov
sahf
sbb
scas
out
xor
in
aaa
push
leave
jge
sar
inc
sub
int
cwde
jp
lock
pop
mov
sbb
mov
sti
sub
outs
out
es
outs
inc
cmp
jb
enter
fnsave
mov
jnp
movs
dec
mov
mov
mov
sbb
push
mov
xor
dec
pop
std
pop
cmp
cwde
jl
out
or
test
mov
jl
push
dec
sbb
mov
cmps
hlt
xchg
int
retf
lds
dec
jg
inc
cmc
iret
mov
fs
adc
sub
jnp
scas
sub
addr16
sub
addr16
mov
pop
jmp
cmp
sub
out
sbb
dec
adc
lods
jne
sub
pop
xchg
ins
pop
add
enter
mov
mov
std
rol
stos
inc
lea
or
mov
cmp
sbb
or
ds
ret
(bad)
or
adc
add
rcr
test
daa
nop
push
pop
add
jo
in
fcomp
push
mov
sbb
div
sbb
sub
inc
sbb
cs
dec
mov
leave
rcl
inc
push
dec
add
jo
(bad)
sti
dec
and
arpl
outs
arpl
mov
jne
sbb
mov
pop
inc
push
loop
les
movs
xor
cmp
pop
int3
push
fiadd
jne
inc
sub
test
test
movs
cmp
mov
ficomp
rcl
pop
scas
push
jg
nop
dec
xor
mov
les
mov
xor
popa
mov
fs
jo
xchg
sti
in
rol
test
pop
xor
xchg
mov
mov
dec
inc
test
gs
pop
(bad)
fstp
retf
test
es
(bad)
and
xchg
das
mov
dec
pop
cmp
inc
or
pusha
cmp
sahf
or
lea
sbb
xchg
mov
or
ss
(bad)
add
inc
cwde
leave
inc
pushf
push
std
add
lahf
mov
push
shl
std
int
dec
xor
out
dec
icebp
test
shl
ret
ins
mov
pop
jmp
sahf
jo
adc
mov
ret
js
dec
mov
scas
out
dec
sbb
xlat
xor
adc
jmp
jge
je
cwde
sub
mov
bswap
mov
rcl
leave
cdq
sti
(bad)
adc
push
stos
popf
mov
fs
cmps
pop
xchg
fild
mov
jbe
or
jb
iret
or
daa
xor
fcomp
fwait
imul
xor
dec
jne
retf
and
sub
mov
push
stos
cmps
cli
add
retf
fcom
sub
adc
aad
movs
outs
pusha
sub
mov
push
sub
fwait
lea
xor
jbe
sbb
pop
push
fucomp
inc
mov
and
in
push
sbb
mov
test
js
or
sbb
mov
jae
cwde
mov
jle
cwde
movs
xchg
sub
fld
dec
call
sub
xor
push
dec
mov
jo
push
repz
pop
jne
les
pop
push
add
fsubp
adc
push
cld
out
js
movs
mov
push
add
stos
test
repz
push
movs
sbb
mov
int3
push
jge
mov
mov
data16
jbe
push
jmp
fstp
xlat
inc
out
data16
ins
shl
pusha
out
xor
mov
mov
sbb
aas
and
out
mov
push
sbb
mov
and
or
nop
in
and
das
and
cmp
test
pop
push
inc
jns
cld
stc
mov
xor
pop
and
pop
and
bound
jne
push
je
adc
mov
popa
fsubrp
push
sar
xor
std
icebp
sbb
push
cmp
inc
push
pushfw
dec
add
jmp
pop
test
(bad)
jbe
mov
cmp
out
xor
or
dec
loop
mov
clc
or
mov
pop
neg
fcomp
push
sub
les
cmps
xchg
cmps
or
mov
rcr
cmp
dec
sbb
(bad)
and
iret
imul
iret
sar
jmp
mov
(bad)
cs
mov
shl
arpl
push
int
mov
pop
jae
aad
lods
ds
push
fadd
dec
ror
jge
cmp
push
gs
aaa
cdq
jns
mov
add
sub
imul
add
push
std
jae
mov
sub
sbb
push
or
cmp
data16
pop
cmp
jecxz
dec
xchg
mov
outs
add
sahf
and
cmps
in
pushf
mov
outs
call
and
leave
sahf
aas
mov
inc
xor
mov
scas
add
sti
push
cwde
xor
push
idiv
out
sahf
cld
stos
mov
jle
cmp
mov
cld
pushf
ins
sbb
lods
sbb
bswap
push
xchg
jo
aad
pop
icebp
imul
or
loop
ror
push
mov
hlt
repnz
outs
mov
pop
aas
cdq
ss
cld
fnstcw
jne
adc
test
pushf
xchg
movs
lods
or
or
mov
mov
mov
bound
inc
xor
jo
adc
(bad)
lods
sub
(bad)
jg
sahf
xchg
xor
sbb
loope
fcomp
inc
xchg
out
call
xchg
jbe
mov
and
xchg
mov
push
mov
jb
xor
outs
(bad)
adc
int3
leave
jae
mov
loop
fwait
test
inc
mov
shl
sbb
or
mov
fild
dec
mov
xor
shl
inc
(bad)
lods
stos
iret
(bad)
sbb
sub
adc
jo
cwde
pop
xor
sbb
sbb
mov
stc
dec
in
gs
or
(bad)
mov
into
push
call
mov
cmp
jo
aam
sub
pop
sbb
gs
jmp
jmp
cmps
jb
adc
jns
adc
pushf
adc
out
inc
push
fidivr
outs
test
retf
cli
(bad)
dec
push
(bad)
push
cmp
(bad)
sti
push
ins
push
jp
adc
pop
mov
idiv
inc
fstp
or
test
clc
push
data16
sbb
lock
nop
sbb
sub
dec
and
adc
adc
cmp
cmps
icebp
push
scas
mov
stos
add
pop
mov
sub
sar
pop
mov
loope
bound
xchg
inc
ret
and
imul
(bad)
pop
xchg
repz
dec
enter
adc
mov
pop
xchg
mov
mov
movd
add
mov
dec
aad
(bad)
adc
pop
rcl
repz
push
and
adc
or
sahf
cmp
cmp
call
outs
or
xchg
jecxz
fisubr
outs
xchg
push
ins
das
or
rol
ret
push
cmps
sahf
out
ins
inc
and
jecxz
shl
cmc
frstor
or
jp
sbb
cmp
push
sub
movs
xlat
jg
rol
or
aas
jns
mov
fmul
int
cmps
jb
push
xor
adc
frstor
push
out
(bad)
div
mov
mov
(bad)
loope
add
xor
push
mov
jecxz
jns
fidiv
sti
mov
mov
mov
add
inc
sbb
push
add
xchg
push
clc
and
pop
pop
push
movs
push
mov
mov
mov
xchg
ret
(bad)
mov
mov
jl
push
pop
cli
xchg
bound
mov
inc
mov
je
aad
mov
jmp
jmp
cmp
jle
cli
xchg
rcl
jbe
mov
jl
push
pop
ins
outs
pop
dec
xchg
dec
inc
mov
dec
loopne
sub
xor
cmp
push
mov
sti
sbb
push
iret
mov
jp
mov
(bad)
aam
mov
je
xor
jno
xchg
and
sbb
das
mov
push
popa
jmp
mov
mov
retf
mov
hlt
push
mov
arpl
call
jmp
mov
test
mov
rol
div
ret
gs
or
mov
push
imul
jl
cmp
jnp
sqrtps
adc
ja
inc
cdq
mov
inc
lds
jmp
hlt
fsubrp
jge
popa
hlt
out
mov
xlat
inc
mov
lods
or
pshufw
mov
and
das
dec
xchg
xchg
ja
sbb
xchg
icebp
xor
stos
xchg
js
pop
call
mov
and
aaa
mov
or
xor
pop
stos
stos
adc
(bad)
popa
cmp
sub
ror
jae
or
daa
cmp
sub
sub
stos
cmp
aad
cmp
clc
mov
jbe
and
fcomi
scas
pusha
pop
test
adc
add
sub
mov
(bad)
or
mov
inc
les
push
rol
fs
inc
ja
mov
sub
or
mov
mov
sub
dec
fsubr
rcr
dec
sahf
jns
(bad)
stos
ja
fiadd
sti
dec
push
in
and
xchg
push
enter
pop
xor
repnz
xor
jmp
jmp
popf
push
loop
in
push
xchg
mov
sub
or
xlat
mov
hlt
rcl
lea
add
imul
xor
mov
mov
sub
pop
scas
xor
jg
sub
(bad)
(bad)
ret
test
dec
loop
and
sbb
and
pop
dec
std
jb
test
add
adc
jae
aad
push
and
push
in
lds
pop
(bad)
cmp
sti
mov
add
mov
stos
fcomp
pop
popa
sbb
cmps
push
(bad)
push
adc
arpl
ret
gs
xor
mov
jge
adc
jg
daa
sub
hlt
into
mov
push
aad
ret
inc
retf
add
fadd
outs
mov
mov
cwde
jge
mov
imul
test
arpl
imul
test
or
outs
not
pop
mov
jns
mov
xor
mov
mov
jg
pop
mov
xchg
push
push
std
inc
call
pushf
test
push
push
jb
outs
test
pop
xchg
push
sub
mov
ss
jmp
gs
cmp
mov
jo
sub
sub
jo
jmp
mov
adc
popa
sbb
shl
mov
cs
and
mov
inc
outs
jmp
add
dec
sbb
hlt
push
pop
xchg
pop
add
mov
ins
ficomp
cmps
bound
lods
cmp
or
imul
inc
jp
int3
pop
mov
xor
arpl
mov
pusha
inc
dec
jecxz
lahf
cmps
xchg
test
xor
cld
xchg
std
sbb
inc
js
lea
std
pop
jne
mov
xor
sbb
jmp
cmc
add
jo
jmp
jl
(bad)
retf
loop
sbb
mov
ds
xor
jbe
ins
das
test
enter
pop
mov
(bad)
xor
bound
fcmovnu
mov
aaa
xchg
popf
pop
or
jmp
mov
adc
pop
test
(bad)
in
jmp
mov
mov
lods
dec
dec
not
push
inc
dec
repnz
add
loopne
test
je
lea
cs
dec
jmp
shl
jne
fidiv
out
(bad)
call
add
jae
lods
add
mov
stc
(bad)
loop
addr16
mov
add
mov
or
inc
push
jb
cmp
mov
test
lods
mov
jge
adc
mov
scas
int
mov
inc
adc
inc
jg
ds
out
dec
ins
push
retf
icebp
jbe
or
in
jle
aaa
cmp
jnp
jle
sub
outs
leave
xchg
mov
push
push
fisttp
aas
aam
or
outs
pop
mov
xor
sub
jb
test
scas
sbb
or
pop
cli
pop
cmp
xchg
aam
inc
fcmovbe
test
ins
(bad)
cmps
and
push
cs
mov
adc
imul
jbe
stos
mov
xchg
dec
call
mov
test
mov
movs
mov
aas
ds
pop
push
cmc
cwde
sahf
push
ins
int3
push
aad
cmps
cwde
outs
sbb
cs
loopne
mov
retf
push
or
shl
call
pop
lea
loope
cli
sbb
icebp
stos
fstp
push
sbb
mov
in
call
add
ret
dec
xchg
sub
xor
jnp
(bad)
xor
cdq
push
mov
ins
ret
retf
das
or
ret
fcmove
dec
enter
sub
sbb
cmp
jns
pop
push
mov
add
cld
pop
(bad)
push
test
cmp
div
(bad)
lea
add
gs
lods
cmc
sub
enter
and
aam
or
bound
dec
imul
sbb
imul
imul
into
add
or
test
retf
and
cli
popa
jo
jp
and
inc
repz
push
pop
leave
mov
int
jl
sub
or
mov
stos
inc
je
cwde
add
cli
mov
and
or
scas
je
add
cmps
ins
pop
pop
js
test
jbe
mov
outs
aas
add
sub
jbe
cmc
sub
add
fcomi
gs
cwde
mov
pop
mov
push
push
sbb
movs
fisub
popa
test
(bad)
xor
dec
ss
lods
outs
and
jle
lods
dec
push
mov
out
int3
fnsave
pop
jle
cmp
int
lds
sar
jnp
mov
sti
xchg
dec
fdiv
push
rcl
out
ror
push
outs
ret
pop
popf
xor
cmp
jmp
inc
fisubr
xlat
xchg
sub
cdq
adc
jns
lods
push
push
mov
xor
leave
iret
push
mov
ins
sar
jl
retf
test
pop
ror
scas
inc
outs
std
xchg
sbb
arpl
jns
xor
leave
int3
sti
cmc
and
push
movs
leave
pop
ss
mov
mov
rcl
push
hlt
cmps
cmps
fsubr
(bad)
loope
hlt
inc
dec
inc
xchg
outs
dec
push
mov
call
xor
mov
outs
ja
movs
mov
lods
and
fst
int3
mul
add
adc
hlt
test
mov
imul
xor
ret
pushf
jmp
retf
cld
mov
in
or
xchg
mov
lock
and
fnstsw
inc
sbb
bound
push
dec
xor
mov
hlt
mov
adc
repz
push
std
push
cwde
and
out
mov
lahf
mov
jl
jl
out
sar
mov
es
dec
dec
or
nop
popa
arpl
(bad)
jmp
mov
std
mov
fwait
in
xor
pop
retf
shr
and
mov
loop
cmps
iret
sar
or
dec
mov
jo
inc
lds
xchg
lahf
std
mov
and
mov
cmp
movs
call
jge
jmp
mov
cdq
pop
sbb
gs
push
mov
jo
jmp
ds
push
dec
adc
fdiv
xchg
and
push
xchg
mov
push
mov
mov
dec
adc
or
cmps
fwait
cmp
sub
sbb
add
push
xchg
sbb
cmc
or
jbe
lahf
movs
dec
shl
imul
jo
dec
aad
sub
jae
adc
dec
mov
fsub
(bad)
adc
inc
sbb
add
xor
jo
dec
adc
push
sahf
movs
out
imul
icebp
and
fdivr
fistp
jb
pusha
aam
and
pusha
pop
xor
mov
adc
mov
retf
mov
mov
sub
lods
das
dec
in
lods
popa
jg
xor
push
aam
push
xchg
mov
arpl
mov
fdivr
ja
(bad)
mov
xor
shl
aam
loopne
mov
jbe
enter
mov
cli
mov
xchg
pushf
out
mov
pop
rol
mov
fwait
xor
sbb
les
popf
popf
call
jbe
leave
xor
enter
pop
sahf
adc
sub
inc
(bad)
sar
xor
mov
inc
test
jbe
sbb
pusha
sbb
xor
repnz
mov
dec
mov
js
fstp
scas
arpl
dec
mov
dec
or
loope
jo
shl
test
lahf
push
pushf
jmp
mov
int3
pop
nop
adc
pop
inc
sub
or
or
inc
aaa
cld
in
xchg
sbb
mov
js
xchg
xchg
inc
(bad)
cld
sub
lods
jne
jno
jmp
jae
std
ja
add
dec
cmp
xchg
add
push
fdiv
xor
out
(bad)
sub
scas
in
into
or
inc
ins
in
sub
fidivr
push
ror
sub
in
sti
arpl
movs
out
nop
dec
ins
test
retf
test
out
mov
and
xor
fdivr
or
add
jno
dec
push
(bad)
aam
jmp
push
nop
mov
pop
pop
sahf
push
fisttp
jl
add
lahf
js
jns
push
dec
sub
in
push
pop
or
daa
mov
push
movhps
icebp
sbb
repz
add
pop
test
xchg
pop
call
xor
xor
retf
aam
and
popa
and
jnp
jecxz
sbb
sti
ret
shl
cmps
push
fbld
lock
in
(bad)
pop
pushf
stos
xor
arpl
fsubr
setns
xor
mov
pop
pop
int3
les
push
ds
jl
test
xlat
clc
sub
ror
iret
aas
test
aas
bound
jne
ss
sub
fist
fwait
clc
in
cmp
loope
jp
test
jp
in
bt
mov
(bad)
xchg
leave
lahf
iret
sbb
(bad)
fnstsw
sbb
stos
into
outs
mov
sbb
mov
jo
mov
mov
bound
mov
pushf
adc
mov
inc
and
xlat
jnp
or
icebp
mov
push
add
ficomp
sub
loop
repnz
push
icebp
sbb
jge
dec
imul
rcr
and
fldenv
enter
idiv
dec
ins
imul
movs
lods
pop
cwde
dec
sub
inc
xchg
push
mov
mov
mov
add
jbe
adc
mov
loopne
and
sbb
sti
sbb
sar
(bad)
shl
jae
sbb
loope
sub
cli
outs
adc
push
xchg
mov
adc
fnsave
jge
jmp
pop
(bad)
xlat
and
mov
mov
out
xchg
jae
sub
xor
push
retf
out
mov
push
cmp
in
out
push
sub
(bad)
out
ja
loope
xchg
pop
xor
xor
and
xchg
dec
scas
push
dec
mov
xor
adc
cmp
sbb
call
inc
add
das
das
push
mov
xor
mov
icebp
(bad)
jbe
or
aas
pop
jns
pop
shl
mov
je
dec
lds
mov
jnp
or
rol
fucomip
stos
mov
fld
(bad)
outs
or
add
sub
retf
mov
ss
cld
mov
shl
ficom
add
mov
sub
out
or
cmp
fs
xor
and
in
mov
sbb
faddp
les
ds
call
xor
adc
jge
pop
test
das
test
and
push
cmc
sub
cmp
and
or
shl
add
cmc
sbb
xchg
in
xchg
xchg
sbb
sub
aam
cmp
fistp
scas
mov
sbb
jne
scas
inc
cmp
ds
mov
outs
inc
push
pop
pushf
xor
int3
pop
enter
jb
sub
jns
outs
call
cmp
fistp
fidivr
cdq
mov
rcr
test
mov
daa
ja
and
and
add
pushf
adc
shl
jmp
push
jnp
xor
stos
pushf
in
mov
fmul
shr
adc
test
add
popf
adc
sbb
mov
sub
jno
jbe
ds
les
lods
cmp
push
mov
ds
stos
scas
test
rcl
mov
jg
popa
or
ret
(bad)
adc
(bad)
lea
sbb
mov
arpl
xchg
(bad)
cs
mov
pop
popa
sbb
mov
ror
data16
fnstsw
push
sbb
adc
jmp
push
sub
nop
push
movs
mov
dec
nop
push
sub
loope
in
das
imul
leave
imul
leave
cli
sbb
in
and
push
cmps
test
push
push
mov
lea
je
aas
add
cmp
cmps
dec
adc
test
pushf
push
or
mov
(bad)
div
or
js
lods
test
out
inc
jbe
dec
inc
and
cmc
jns
sub
mov
ret
jno
fisttp
enter
lock
cmp
jb
cmps
repz
xchg
cmp
push
pop
dec
mov
mov
mov
inc
(bad)
and
xchg
sub
das
add
jp
mov
iret
pop
push
mov
in
test
mov
sub
shl
pop
jmp
and
inc
movs
jecxz
(bad)
jae
add
push
xchg
mov
lods
scas
and
jae
push
push
xlat
cmp
pusha
push
pop
in
push
jmp
and
mov
test
mov
xor
add
ja
pushf
xchg
(bad)
jge
jge
xor
arpl
jo
xor
out
jbe
mov
and
mov
call
mov
bound
lea
vpmulhw
movs
push
lds
push
inc
shl
outs
cwde
mov
lods
mov
xchg
sar
ss
inc
jg
push
mov
fmul
or
cmp
mov
retf
jmp
mov
je
add
add
aad
cmp
int3
mov
dec
fs
ss
mov
push
cwde
push
dec
(bad)
aad
dec
adc
stos
push
leave
cmp
pop
hlt
cmp
ins
cmp
cdq
and
lods
push
stos
sbb
ins
loopne
addr16
mov
pop
jns
mov
ret
jp
adc
push
in
outs
shl
xlat
adc
ret
sub
sub
mov
repz
mov
jmp
popf
lahf
jae
lock
dec
add
jmp
aas
mov
test
(bad)
iret
sbb
lods
inc
and
test
sbb
jns
inc
xlat
repz
lds
clc
addr16
pop
pop
lock
pop
mov
(bad)
in
and
inc
mov
stos
leave
mov
mov
adc
or
fdivr
out
push
gs
add
adc
xchg
push
fnstcw
or
out
lahf
sub
xlat
clc
sbb
xchg
push
int3
(bad)
add
adc
pop
fwait
add
les
mov
daa
inc
ja
es
call
sbb
push
out
jmp
add
mov
das
hlt
test
cmps
jne
push
retf
arpl
adc
xchg
dec
cmp
fcomp
inc
mov
mov
xchg
fild
fld
bound
mov
push
test
push
aad
push
add
dec
inc
lock
lea
daa
inc
xchg
adc
mov
out
or
in
pop
cs
pop
adc
mov
xor
aam
rcr
jmp
movs
repnz
cmp
or
adc
or
inc
sbb
mov
mov
jp
dec
retf
gs
mov
push
jo
mov
push
lods
movs
icebp
xor
arpl
cmp
push
arpl
ja
in
or
mov
sub
nop
mov
mov
loope
ss
fisubr
dec
sti
addr16
and
and
fcmovbe
out
movs
div
fstp
add
mov
enter
add
mov
add
xchg
lahf
daa
jne
cwde
scas
dec
mov
push
jns
fst
sbb
fiadd
jge
pushf
dec
fsubr
loop
add
cld
outs
pop
jl
dec
pop
mov
icebp
push
xchg
fsub
xchg
pop
ds
aas
cmp
test
sub
mov
pushf
jmp
mov
push
jne
xchg
sub
pop
pop
or
ja
addr16
hlt
clc
jecxz
ja
outs
std
bound
xchg
cdq
cdq
and
gs
fidiv
xor
pop
lds
xor
or
adc
add
inc
mov
mov
inc
sbb
jp
push
cmp
mov
pop
pop
cwde
stc
mov
add
dec
stc
inc
in
enter
jno
cmps
adc
xchg
cmp
fistp
adc
das
adc
popf
mov
jns
mov
xchg
jne
hlt
or
aad
cmp
std
pop
mul
sbb
(bad)
xchg
inc
sub
lods
stos
lods
cmp
aaa
mov
jbe
imul
mov
iret
xchg
movs
lods
mov
scas
fadd
sahf
dec
mov
pop
push
outs
ins
loopne
cld
or
mov
and
lods
test
clc
push
pop
loop
sbb
cwde
sub
mov
adc
ds
cdq
push
neg
mov
(bad)
stos
retf
popa
sbb
out
nop
dec
push
loope
or
into
adc
shr
mov
lds
mov
in
push
out
sbb
mov
loope
jne
aam
jge
jno
xchg
in
pop
push
(bad)
xchg
pop
test
shl
out
bound
cs
shr
jne
ss
test
ins
add
inc
push
add
lds
paddsw
add
inc
xchg
les
test
bndldx
sahf
add
sbb
adc
les
adc
adc
lahf
pop
mov
sub
inc
lahf
test
out
or
in
xor
jb
add
repnz
in
mov
fist
es
mov
dec
lahf
cld
jne
inc
mov
cmps
retf
leave
xor
out
or
or
test
fidivr
xchg
inc
ret
push
test
push
sbb
(bad)
movs
push
imul
(bad)
lock
into
pop
iret
fmul
aad
outs
sar
or
sti
jp
scas
lods
mov
lea
sti
ss
retf
xchg
sbb
xchg
ror
leave
in
sub
pop
or
sub
sbb
test
mov
imul
pop
pop
mov
mov
lods
inc
adc
mov
dec
cmp
inc
dec
cmp
outs
retf
std
sbb
xor
xor
lods
xor
into
dec
call
fwait
add
sbb
repz
sbb
into
out
test
cmc
mov
leave
add
jp
sqrtps
stos
mov
fcmove
cs
sbb
pushf
clc
out
aaa
sbb
inc
pop
cmp
mov
cmp
cli
cmp
cmp
loop
push
add
push
iret
sti
jg
mov
jmp
mov
add
and
cmps
mov
xchg
sub
cmps
es
fdivr
jne
sub
clc
inc
mov
iret
inc
in
lods
dec
push
dec
sbb
jmp
adc
(bad)
sub
shl
jbe
xchg
pop
pop
push
cmp
mov
fldcw
fistp
adc
sub
cmps
aas
push
lock
jns
arpl
jne
in
cwde
push
sbb
enter
jmp
stos
push
jne
fld
aad
mov
push
fs
push
xchg
jb
fild
outs
mov
div
inc
arpl
push
inc
jecxz
cld
xchg
push
loop
add
cmp
jo
push
mov
pop
test
mov
in
(bad)
repz
repnz
mov
popa
adc
repz
mov
mov
xchg
ins
mov
fstp
and
mov
data16
mov
fld
inc
or
fist
push
ret
xchg
push
sbb
ret
gs
stc
in
neg
bound
cmp
out
div
xchg
mov
nop
jb
pop
xchg
adc
sbb
jno
sub
dec
mov
add
in
scas
dec
loop
mov
cs
xchg
add
repz
lds
stos
cdq
pop
cmps
enter
push
fadd
cld
or
pop
daa
dec
cmps
xor
adc
and
in
xor
pushf
ss
mov
fiadd
sbb
push
cmp
js
jbe
xchg
xor
inc
push
cmp
xchg
mov
(bad)
sub
or
add
push
mov
lods
inc
je
fs
mov
add
in
int
sbb
int
push
inc
fdivp
sahf
adc
sahf
cmp
mov
pushf
pop
adc
pop
arpl
jmp
cli
mov
xchg
(bad)
push
enter
mov
jg
mov
mov
mov
sbb
jns
test
test
dec
js
ins
fld
in
into
arpl
xchg
push
sbb
es
pop
pusha
sbb
adc
push
call
push
fild
inc
cwde
movs
aad
scas
sbb
jmp
scas
fidiv
xchg
and
fwait
shr
loop
cmp
in
add
add
push
addr16
lock
xor
mov
dec
jp
fst
push
aad
add
imul
pop
and
cmp
jge
add
sub
call
pop
inc
lds
mov
mov
pop
jne
stos
adc
test
int
arpl
mov
dec
test
fwait
inc
(bad)
shl
retf
jb
add
cmp
push
cmc
ss
data16
jae
test
inc
dec
std
xchg
mov
inc
out
movs
das
mov
and
sub
mov
out
cwde
aad
sub
jns
mov
inc
mov
and
ret
stc
jne
imul
sahf
mov
(bad)
std
ficomp
cmps
or
lods
stos
mov
push
add
std
outs
jecxz
jp
(bad)
test
fdiv
jo
jmp
ins
aam
in
stc
adc
inc
loopne
es
shl
mov
sub
les
mov
and
bound
test
ret
aad
call
push
lahf
ret
sbb
xchg
mov
mov
sub
mov
(bad)
ja
ins
adc
call
adc
dec
sbb
mov
ret
dec
popa
(bad)
sar
popf
sub
les
dec
outs
cmp
sbb
mov
jb
loopne
xor
cmp
iret
xchg
cmp
ja
sub
addr16
pushf
(bad)
loop
xor
out
mov
lds
mul
jne
shl
out
les
mul
sub
lods
mov
add
stc
xor
jae
into
out
pop
clc
mov
mov
push
jb
icebp
pop
mov
cli
rcr
in
fidiv
mov
mov
outs
lods
(bad)
scas
xchg
imul
push
push
lea
in
cmp
in
mov
sbb
push
or
cwde
xchg
daa
xor
pop
sub
cmp
pop
sub
sahf
pop
lods
arpl
repnz
shl
xor
cmps
cmp
(bad)
loopne
dec
pop
ret
add
test
pop
movs
cmp
test
push
xchg
mov
jno
clc
jo
test
push
in
mov
mov
or
dec
mov
pop
or
mov
mov
xchg
sub
add
loop
fdiv
mov
(bad)
std
mov
add
inc
or
push
mov
nop
pop
dec
push
xchg
and
sahf
xchg
pop
int3
in
xlat
js
push
push
out
mov
mov
and
mov
push
push
icebp
mov
cmp
aas
jnp
mov
ficomp
xchg
jnp
sub
daa
out
jmp
stos
or
inc
adc
in
imul
dec
aas
in
xchg
pushf
fcom
xor
scas
iret
mov
int
inc
pop
imul
sub
mov
jp
cmp
adc
retf
stos
scas
jmp
shl
imul
xchg
pushf
mov
jo
movs
mov
cdq
(bad)
pushf
add
xor
in
fwait
push
cmp
mov
lock
pop
gs
rcr
(bad)
(bad)
cmp
addr16
xchg
dec
push
sbb
cmps
xlat
adc
call
push
repnz
push
cli
cli
aaa
adc
out
dec
add
lea
or
mov
add
add
ins
inc
out
shr
in
pop
fld1
push
movs
mov
inc
and
xchg
adc
mov
adc
adc
mov
outs
add
adc
dec
aaa
leave
sbb
pop
pop
cmp
inc
jle
movs
push
jmp
mov
or
stc
jo
pop
xor
xor
sub
ds
(bad)
pop
popf
leave
mov
test
dec
or
and
add
cmp
iret
inc
and
xor
cs
jb
and
aaa
sub
in
adc
cmp
push
mov
sbb
xchg
shl
fsubr
das
test
dec
add
rcr
fistp
pop
call
pushf
fadd
retf
inc
cmp
scas
sbb
mov
jbe
inc
jne
retf
adc
cmp
push
sub
push
mov
(bad)
int3
or
jmp
push
in
ret
repnz
imul
pop
mov
pop
leave
or
out
retf
clc
mov
push
or
popf
jge
jle
aaa
call
ja
sub
je
inc
inc
mov
(bad)
loop
jl
ins
cmp
sub
lods
popa
(bad)
shl
fs
inc
xchg
mov
mov
fdiv
sbb
dec
push
ins
fs
push
pushw
adc
test
cdq
movs
lods
sbb
sbb
in
jo
int3
adc
cs
nop
mov
arpl
cmps
or
cmps
cli
lds
xchg
ret
(bad)
mov
sub
pop
ficom
push
mov
mov
outs
stos
pop
ins
std
jbe
jbe
repnz
cld
pusha
cmp
jo
adc
das
pop
loop
sbb
sub
int3
sub
ret
int
mov
movs
and
aas
mov
adc
aad
push
dec
inc
mov
fsubr
ins
std
push
mul
xor
xor
lods
lods
mov
mov
mov
xor
xchg
je
add
jnp
mov
dec
and
repnz
(bad)
fiadd
retf
popa
outs
(bad)
adc
xor
aaa
xchg
shl
jmp
push
icebp
xor
fyl2x
in
(bad)
stc
aam
mov
dec
stc
push
push
data16
sub
dec
popa
jb
dec
mov
addr16
ja
mov
mov
in
xor
(bad)
ror
ret
pop
mov
dec
clc
xor
inc
jg
and
outs
pop
add
lds
mov
(bad)
mov
(bad)
pop
leave
xchg
repz
pop
lahf
dec
call
or
pop
call
in
inc
sub
jge
sub
(bad)
sub
es
scas
inc
add
push
sbb
push
call
test
xchg
addr16
call
mov
gs
push
movs
leave
(bad)
pop
xchg
fdiv
inc
sbb
outs
and
test
int
(bad)
pop
pop
ins
retf
inc
pop
or
fsubr
xchg
xchg
lods
gs
(bad)
outs
fsubr
mov
(bad)
stos
pop
mov
fstp
xchg
adc
xor
repz
jno
call
push
loop
push
je
les
inc
add
mov
jns
daa
into
sbb
adc
pop
cmps
xchg
jg
inc
sbb
lea
or
inc
repnz
jnp
test
push
pop
inc
jmp
cmps
mov
ja
test
(bad)
sbb
or
adc
push
fcomi
or
and
ss
scas
(bad)
sbb
add
cmp
out
sub
jnp
mov
mov
xor
dec
xchg
into
adc
mov
jmp
or
nop
inc
out
xchg
(bad)
jmp
rcl
not
rol
loopne
repnz
dec
push
(bad)
cmps
pop
push
fstp
rol
je
movups
popf
push
data16
mov
dec
sbb
jbe
dec
mov
fwait
mov
xchg
sub
hlt
movs
sub
mov
scas
ret
cdq
xchg
(bad)
push
aaa
pushf
or
loop
(bad)
mov
les
dec
dec
cli
dec
add
xor
out
mov
push
cld
xlat
push
sar
cli
mov
sbb
jbe
sti
fsubr
jg
mov
lods
inc
fimul
jne
lds
clc
sub
(bad)
or
push
scas
ins
jg
xchg
cmps
data16
xor
add
jno
fidivr
and
stos
pushf
and
out
bnd
lods
lahf
mov
push
add
mov
sub
imul
push
loop
out
dec
test
dec
hlt
imul
neg
jae
jl
movs
adc
push
push
cld
rcr
push
scas
dec
mov
neg
add
cmc
dec
cmps
push
and
xor
adc
icebp
mov
mov
(bad)
xchg
dec
push
sbb
stc
sar
pop
jnp
ds
dec
add
or
mov
fstp
jg
sbb
das
(bad)
sbb
jnp
add
sbb
loope
daa
jne
sub
inc
ret
(bad)
(bad)
shr
movs
imul
cmc
out
pop
setg
adc
sbb
dec
into
movs
inc
cmp
sub
and
cmp
xor
sti
ficom
push
retf
js
inc
cmp
in
cmps
jmp
add
ja
in
cmp
inc
je
shl
sub
movs
cmp
mov
shr
xor
sub
into
data16
xchg
adc
cmp
push
sahf
repz
jp
int3
inc
sbb
cmp
adc
jb
push
aaa
ins
mov
retf
cwde
out
push
test
jae
cs
xchg
xor
xor
das
out
jl
int
mov
stos
push
cmp
int
lock
pusha
mov
inc
repnz
loopne
dec
mov
cs
add
test
cmc
mov
rcr
loop
mov
fisttp
jo
call
loope
pop
leave
pop
fsubp
fadd
fild
xchg
pop
cmps
mov
sti
xchg
sbb
iret
pop
sbb
add
int3
xchg
adc
add
adc
js
sub
xchg
stos
test
pop
xor
fdivp
jl
sub
out
les
scas
test
cmc
mov
ret
arpl
test
jmp
ds
sbb
dec
das
jmp
(bad)
retf
add
in
cdq
mov
mov
daa
js
scas
push
mov
adc
lock
frstor
dec
aaa
int3
xchg
clc
mov
movs
aam
mov
jns
or
cmp
aaa
iret
fcomp
(bad)
sub
(bad)
imul
sub
jno
out
lods
(bad)
in
ins
or
test
add
(bad)
xchg
in
sub
mov
lock
imul
std
jmp
dec
mov
das
out
fwait
les
dec
in
addr16
movs
test
push
xchg
pop
pop
es
in
mov
sub
adc
ror
and
push
outs
or
inc
mov
mov
mov
and
xor
or
sub
cmps
ror
pop
add
cmc
sub
sbb
ins
mov
xchg
push
cmp
push
fist
adc
outs
loop
sub
pusha
push
icebp
out
inc
inc
inc
hlt
in
mov
pop
test
les
xor
bound
dec
sti
dec
retf
and
pop
adc
fnstenv
fisub
add
test
inc
push
(bad)
xchg
mov
ret
lahf
jno
xchg
mov
call
xor
imul
mov
inc
leave
inc
test
jo
rcr
push
cdq
xor
leave
sub
ss
rcr
xchg
inc
inc
sbb
mov
stc
or
mov
sub
push
jns
(bad)
test
repnz
add
pop
leave
repnz
add
in
cmp
int
lods
mov
dec
xlat
mov
dec
push
jl
dec
add
cwde
mov
inc
sbb
adc
jge
adc
and
dec
adc
inc
rol
out
sub
or
vmovaps
adc
xchg
xchg
js
mov
int3
cmp
enter
mov
adc
sbb
jo
(bad)
fwait
in
es
clc
xlat
ins
push
cmp
pop
xor
stos
sbb
popf
fisttp
mov
(bad)
inc
cmp
mov
mov
jnp
int3
mov
inc
int3
cmp
xor
cld
inc
push
js
jae
jp
xchg
(bad)
leave
hlt
les
push
cmp
sub
icebp
xchg
test
jno
(bad)
icebp
shl
sbb
xchg
test
in
xor
xchg
sub
jo
(bad)
jmp
icebp
loope
pop
and
lods
xchg
je
je
call
sub
mov
(bad)
test
cmp
mov
imul
ja
push
add
mov
cld
push
mov
and
push
push
push
pop
push
retf
and
ret
mov
inc
enter
pushf
ret
dec
into
pop
inc
aas
div
jnp
inc
ins
or
add
aam
retf
ins
hlt
mov
and
(bad)
lock
pop
gs
ins
ficom
cmp
cmp
fadd
aam
imul
mov
push
push
mov
data16
ins
and
scas
xor
popa
push
in
sub
mov
adc
shr
adc
shl
aaa
lods
fistp
sahf
and
cmp
xor
jg
mov
dec
outs
leave
adc
or
fldcw
das
mov
or
fstp
std
jp
movs
sar
imul
mul
add
add
loopne
mov
clc
and
push
lea
retf
test
add
cmp
mov
xor
push
mov
inc
or
(bad)
or
mov
xchg
cmp
jb
stos
int3
std
(bad)
xchg
xchg
jp
stos
inc
into
fld
leave
push
ins
sub
jmp
pop
cmc
inc
cmp
pop
daa
xchg
imul
in
push
mov
jno
popf
cmp
mov
pusha
ds
dec
arpl
mov
test
(bad)
leave
xchg
adc
bound
js
cmp
fistp
inc
mov
xchg
or
and
inc
push
jno
retf
mov
push
jb
cmp
push
(bad)
fisub
push
sar
inc
cmp
cwde
push
js
sub
les
xchg
fbstp
or
mov
sbb
mov
scas
aaa
lahf
xchg
outs
test
and
or
popf
jg
jmp
(bad)
and
add
add
(bad)
xchg
dec
idiv
fs
sahf
pop
jecxz
ss
repz
repnz
push
scas
xchg
fs
and
dec
aas
xor
or
mov
cmp
dec
scas
imul
jb
and
gs
cld
call
jmp
xchg
sbb
mov
adc
xchg
mov
pop
cmc
call
fstp
mov
iret
mov
xor
push
sbb
imul
xchg
addr16
repz
loopne
adc
loope
rcr
pop
out
push
imul
mov
sub
jle
adc
fld
jae
pushf
aad
mov
jle
push
cmp
mov
fs
jae
or
xchg
lods
mov
mov
inc
aad
or
test
int3
push
mov
cwde
retf
or
push
push
mov
cmps
mov
sub
mov
fwait
icebp
add
cli
std
jns
jo
mov
sahf
or
jb
data16
jmp
and
hlt
outs
adc
or
mov
jns
mov
mov
mov
aas
imul
dec
xlat
sub
ss
stos
addr16
(bad)
sbb
xor
cld
sti
je
adc
(bad)
dec
sbb
out
mov
dec
xchg
dec
adc
adc
rol
jnp
push
shl
sub
(bad)
std
seto
or
(bad)
stos
lea
pop
inc
pop
sahf
or
push
cmps
sub
push
xchg
repnz
lods
mov
lahf
cmc
cmps
addr16
test
pop
aad
shr
arpl
xor
adc
xchg
jne
scas
xchg
xchg
xor
out
adc
pop
push
popf
mov
into
retf
xchg
mov
data16
loope
sbb
mul
xchg
push
shr
cdq
sub
push
inc
add
in
imul
test
rcr
mov
aam
dec
icebp
xchg
jbe
mov
test
cld
fdivr
pushf
mov
add
xchg
js
fsubr
and
out
fdivr
inc
jl
bound
sbb
mov
xchg
jp
inc
leave
push
cmp
sub
or
add
push
je
sub
ret
mov
sbb
out
dec
cmp
mov
nop
test
ja
in
(bad)
cmps
pusha
sbb
loope
add
sti
push
sub
jns
cli
mov
std
sub
loope
cwde
cdq
in
mov
test
stos
mov
dec
sub
sbb
mov
sbb
int
dec
inc
and
adc
(bad)
test
ret
test
mov
xchg
push
scas
push
ss
dec
retf
cwde
cmp
lods
jns
mov
sbb
or
add
push
retf
les
outs
and
sahf
data16
data16
inc
sub
test
mov
push
div
mov
sbb
pushf
pop
jnp
mov
pop
jl
int3
mov
adc
jnp
jmp
mov
out
push
ss
je
(bad)
mov
or
in
jecxz
shr
pop
mov
fcom
mov
fcom
dec
rcl
lock
add
mov
in
movs
push
ror
push
xlat
sbb
cmps
out
pop
repnz
pop
sbb
pop
sbb
inc
popa
shl
rcl
pop
jmp
in
and
test
dec
(bad)
gs
sbb
retf
es
sbb
stos
pop
or
rol
es
sbb
sti
je
ror
sub
imul
stos
xchg
fidivr
inc
sbb
mov
xor
sub
jl
dec
sub
mov
xor
inc
(bad)
sub
push
cmp
add
add
push
or
xor
xor
sbb
push
cmp
adc
lea
stc
hlt
and
es
ret
enter
sub
mov
clc
cmp
pop
and
jl
mov
out
sub
sbb
jnp
es
pop
or
jnp
pop
add
and
(bad)
push
nop
dec
xchg
pop
xor
dec
sub
popf
jbe
es
pushf
xchg
jne
loopne
inc
and
push
sbb
mov
mov
fild
out
or
push
test
fmul
pop
retf
ins
idiv
jne
test
jb
out
and
int3
(bad)
loope
jne
stos
and
pop
ja
inc
push
xlat
dec
out
or
sbb
jb
mov
pop
push
pop
stos
pop
add
add
fmul
fwait
xor
inc
inc
scas
test
inc
imul
jmp
mov
push
xor
jp
je
mov
aas
add
das
cmp
and
ret
mov
cmc
lods
test
add
(bad)
sahf
jne
call
and
mov
jmp
sub
nop
mov
movs
xor
ss
pop
and
cdq
stos
inc
mov
sub
pop
(bad)
mov
lahf
pop
imul
ins
jnp
(bad)
xor
movs
pop
arpl
push
movs
lds
div
push
ins
dec
pop
(bad)
sahf
es
sbb
rcr
movs
ret
push
cwde
outs
test
dec
mov
pop
sub
pop
mov
fst
sbb
jmp
push
cmp
xor
pop
popf
push
in
gs
cld
aaa
int3
xchg
into
(bad)
repnz
mov
aaa
test
in
shr
movs
or
xchg
add
mov
fsub
adc
cmp
rol
mov
xchg
pop
pop
ins
xor
ds
inc
mov
fsub
push
shr
or
sbb
mov
push
loope
aad
(bad)
fistp
sbb
(bad)
mov
jmp
sbb
add
xor
adc
sbb
jb
xchg
rcl
sahf
or
inc
mov
xchg
imul
ss
jne
mov
inc
xor
mov
xor
ret
test
pop
cmp
(bad)
(bad)
dec
stos
icebp
mov
mov
and
and
sbb
inc
push
loop
jmp
mov
jp
mov
popa
pop
pop
mov
push
cmp
adc
xchg
mov
sub
sub
(bad)
mov
jmp
push
mov
push
ds
clc
aaa
out
push
cmc
and
adc
sbb
ins
sbb
mov
jg
jecxz
sub
cdq
jge
sub
sbb
jo
jo
cmp
inc
push
cmp
add
pop
mov
ror
rep
and
sbb
mov
cmp
jmp
push
and
mov
cmp
rcr
xchg
jns
cmp
in
mov
ror
or
arpl
loope
fxtract
adc
test
in
push
push
sub
cmp
ja
scas
xor
add
adc
ret
dec
jmp
inc
xor
mov
inc
mov
test
cmp
or
mov
call
xchg
mov
mov
std
pop
imul
inc
mov
pop
xor
test
mov
mov
pop
ds
and
or
dec
or
jge
inc
sub
and
mov
add
imul
stc
pop
inc
out
jbe
jle
mov
mov
cmc
loop
or
inc
ror
add
push
pop
jb
retf
(bad)
std
sub
sbb
mov
pop
test
rol
push
ss
stos
add
lock
outs
int3
mov
int3
jle
daa
mov
sti
lds
inc
sahf
lds
shl
fisub
push
sub
icebp
xchg
pop
mov
je
jmp
inc
and
mov
repz
jp
xor
dec
and
mov
(bad)
add
les
add
adc
mov
loopne
xchg
aam
mov
add
fmul
mov
cmp
xchg
fwait
mov
fadd
xchg
mov
mov
push
push
stos
dec
ror
in
sbb
sub
fsubr
adc
int3
icebp
mov
in
loopne
xlat
ret
mov
xchg
xor
dec
jne
js
jbe
pop
cmp
loope
cmp
adc
fsub
xor
xchg
dec
sbb
or
mov
push
pop
imul
xchg
retf
and
xor
adc
test
(bad)
fdivr
hlt
push
pop
xlat
cmp
mov
cmp
mov
fs
shl
test
fdiv
sub
add
mov
icebp
jno
daa
mov
mov
fisttp
fstp
xchg
enter
(bad)
jb
fwait
pop
je
pop
adc
pop
jge
xor
mov
leave
movhps
std
adc
jbe
mov
pop
inc
rol
inc
fstp
(bad)
jne
gs
push
(bad)
mov
adc
sahf
cmp
daa
adc
loope
aad
add
ss
jge
test
jne
mov
jno
xor
mov
fild
inc
cs
fisub
adc
cwde
dec
test
push
popf
xor
aas
or
loop
cmp
mov
and
mov
xchg
cmc
jmp
pop
ret
fnstenv
out
out
int3
(bad)
sbb
mov
inc
xor
and
int
fwait
mov
sbb
inc
pop
fisubr
jno
mov
xor
das
xor
mov
out
mov
(bad)
bound
mov
fcomp
fwait
test
sbb
xchg
xchg
adc
inc
sub
pushf
pusha
mov
pop
push
mov
xlat
jne
or
cdq
push
mov
(bad)
fimul
popa
nop
icebp
xchg
pop
outs
push
jne
aad
xor
push
and
add
pop
jnp
inc
sbb
retf
fistp
imul
mov
and
xchg
mov
mov
js
int
icebp
pusha
mov
test
les
out
mov
ins
push
in
adc
mov
(bad)
stos
shl
or
fimul
dec
or
int3
leave
ror
mov
jb
scas
inc
dec
ffreep
push
mov
mov
push
add
add
(bad)
sub
mov
pop
and
push
rcr
mov
adc
adc
cwde
stc
cdq
xchg
not
jo
dec
or
add
mov
mov
cmp
out
stos
lock
inc
pop
inc
nop
or
in
ss
test
ins
or
nop
push
jne
ret
in
lds
adc
pop
add
test
int3
hlt
out
adc
and
inc
addr16
ret
xchg
outs
dec
xchg
pop
and
push
retf
sbb
mov
mov
fucomip
(bad)
adc
mov
dec
fbld
xor
aaa
int3
jne
jb
hlt
push
adc
adc
movs
nop
add
stos
push
push
fcmovne
mov
push
pop
inc
ss
rcl
neg
dec
adc
jbe
jmp
sub
mov
inc
pop
loop
mov
scas
les
cmp
and
ja
ins
icebp
cmps
call
cdq
retf
mov
and
sar
adc
(bad)
jns
inc
jno
inc
bound
mov
outs
pop
fs
add
and
nop
mov
div
and
mov
dec
cmps
outs
inc
outs
jecxz
mov
mov
popf
lods
adc
nop
dec
mov
adc
lock
imul
jl
mov
pop
(bad)
icebp
or
inc
ss
adc
out
mov
in
outs
push
inc
out
scas
imul
retf
xchg
jecxz
adc
adc
es
sbb
push
xchg
in
pop
pop
push
in
ins
aad
jmp
into
(bad)
jmp
fdiv
jb
cdq
sub
inc
mov
sub
pop
inc
repz
cs
out
retf
icebp
dec
and
lahf
fmul
mov
js
xchg
add
retf
sbb
in
mov
fst
adc
sar
mov
out
push
fs
pop
jp
popf
mov
mov
cwde
arpl
mov
iret
repz
inc
push
inc
push
cdq
rcl
nop
outs
int
push
pop
mov
sbb
inc
imul
cwde
pop
or
and
pop
cmp
jp
nop
(bad)
pop
push
stos
ror
enter
or
jge
ret
push
and
cmp
fmul
cdq
ins
sub
shl
cs
retf
fstp
stos
imul
add
sub
ss
sbb
retf
mov
iret
(bad)
mov
and
imul
fidiv
add
xchg
iret
shr
mov
jb
mov
sahf
cld
fst
cld
sar
push
sbb
xlat
lea
adc
out
in
dec
sub
adc
bound
push
sub
and
xchg
cmps
cmp
jle
cs
(bad)
out
xchg
imul
and
aad
mov
jl
pop
xchg
sub
pop
cmps
mov
dec
mov
cmp
(bad)
and
or
aas
fsubr
dec
pop
rol
push
jle
jno
mov
cmp
mov
fxtract
mov
xor
pop
call
xor
out
dec
xor
cli
dec
adc
enter
daa
jae
inc
adc
aaa
outs
xor
jb
cli
or
data16
push
jb
nop
imul
test
xchg
inc
push
lods
xlat
sar
mov
(bad)
xor
sub
test
add
cmp
mov
add
jo
or
(bad)
jns
add
xchg
pop
jnp
cdq
movs
sahf
mov
push
test
enter
lods
out
and
in
das
and
jmp
stc
or
test
jns
call
je
ins
cmc
pop
lahf
cli
adc
fcmovnb
push
das
fwait
jns
and
jmp
and
mov
xchg
lock
out
lea
cmps
push
iret
inc
das
popf
cdq
jb
scas
aaa
or
dec
daa
mov
sub
cli
(bad)
or
and
movs
jl
ins
xor
out
mov
ins
inc
mov
ror
rcl
loopne
jmp
jae
ret
dec
inc
fist
cli
(bad)
jp
xchg
mov
shl
jb
div
in
sbb
dec
aaa
pop
bswap
xchg
xchg
ror
mov
mov
adc
dec
xchg
jg
loopne
or
xor
(bad)
mov
cld
icebp
adc
dec
es
xor
push
ret
pop
mov
mov
(bad)
pop
cmp
leave
(bad)
mov
or
into
jg
inc
out
out
sub
daa
xor
jmp
pop
or
push
push
or
lods
ins
adc
xchg
mul
jb
stc
jmp
mov
mov
les
ret
xchg
and
cmp
add
jmp
lds
jne
call
stos
fisttp
test
ror
scas
jge
into
mov
jmp
push
push
(bad)
xchg
and
sbb
xor
cmps
rcl
fbld
sbb
fs
imul
cli
(bad)
pop
icebp
mov
popa
outs
aaa
int3
out
sar
popf
dec
out
xchg
int
and
jb
jbe
xchg
cmps
push
out
mov
fs
aam
lds
ret
pop
add
std
loop
inc
scas
xor
jle
stos
dec
retf
movs
js
sahf
das
sbb
adc
cdq
xchg
jnp
lea
mov
cmps
ror
jnp
fstp
imul
sub
shl
push
sbb
inc
jmp
add
and
xor
xchg
add
xchg
cld
std
aad
imul
daa
(bad)
ja
mov
sub
jl
ss
int3
pop
pop
or
xchg
call
outs
xchg
xor
add
fcomp
sub
sbb
test
or
or
xor
mov
add
xchg
fbstp
push
dec
xor
fnstsw
arpl
pop
mov
int
sbb
xor
in
aaa
dec
ret
sub
jp
push
cvtps2pd
mov
ss
mov
(bad)
popf
mov
add
push
popf
shl
lods
add
mov
mov
int3
das
push
sub
shl
jmp
xchg
(bad)
mov
add
or
push
and
mov
call
addr16
sub
jo
shl
(bad)
or
test
cmp
(bad)
into
outs
les
push
and
neg
add
lods
mov
dec
pop
outs
ror
pushf
jg
dec
inc
pop
test
repnz
out
adc
push
and
repnz
ds
inc
fdivr
scas
aaa
enter
jl
addr16
inc
cmp
call
(bad)
xlat
mov
mov
hlt
js
add
shl
repz
out
sbb
ret
xchg
sbb
loop
pop
xchg
mov
push
scas
or
xchg
pop
daa
sbb
pop
cli
adc
repnz
pop
mov
enter
jmp
ins
scas
mov
and
rol
jnp
aam
in
clc
cmp
fs
push
addr16
int
call
addr16
xchg
outs
out
mov
xor
sub
add
cmc
inc
jle
pushf
pop
inc
dec
mov
dec
(bad)
jp
retf
sub
fisubr
sahf
repnz
push
cmps
call
push
pop
mov
inc
dec
jae
inc
ins
xchg
cmp
pavgw
lock
mov
in
inc
mov
shl
lods
cmps
mov
sub
jg
pop
shr
popa
pop
data16
aam
imul
jnp
adc
and
mov
(bad)
into
dec
cmp
into
cdq
sub
data16
mov
jge
imul
sbb
lahf
push
jmp
and
in
rol
inc
xchg
jge
mov
jo
movs
outs
mov
sbb
(bad)
repnz
(bad)
fisub
dec
or
jnp
jmp
sbb
mov
add
mov
(bad)
test
sbb
in
jmp
and
hlt
and
dec
and
inc
mov
cmp
add
repz
sbb
xchg
and
mov
pop
arpl
mov
retf
cmps
mov
rcl
jbe
ins
jg
das
mov
stc
add
xor
rol
adc
retf
and
loop
mov
loope
or
in
mov
pop
xlat
pushf
retf
inc
ret
arpl
sahf
xchg
cli
cmp
sar
pop
das
pop
push
iret
and
mov
rcr
mov
into
sub
pop
ds
add
push
push
test
pop
out
mov
pop
sbb
cli
es
inc
call
mov
leave
pop
jo
hlt
leave
xchg
jle
adc
mov
mov
ins
ss
jns
call
pop
mov
or
aas
xor
sbb
sub
jae
jo
cmp
jno
cdq
js
data16
sbb
xor
push
je
inc
nop
and
xchg
add
ins
in
cmps
jbe
push
std
cs
push
adc
dec
mov
out
int
xchg
xor
mov
push
stos
jnp
std
and
and
test
push
pop
cmp
push
outs
push
(bad)
retf
out
jp
ds
retf
adc
mov
sbb
enter
add
sbb
inc
lea
je
mov
hlt
in
mov
repz
cmp
fcmovb
push
push
add
in
add
shl
ror
mov
push
jno
sub
xor
out
fstp
stc
movs
das
cmp
xchg
ins
jmp
pop
mov
sbb
outs
jmp
or
xor
popf
lahf
hlt
xor
or
test
mov
mov
scas
ret
dec
adc
lds
mov
mov
aad
test
fsub
pop
push
jg
mov
xchg
mov
loope
mov
xchg
and
inc
sub
sbb
jns
in
repz
pop
icebp
jbe
xchg
push
pop
adc
jno
mov
xchg
aad
mov
add
test
icebp
fisub
sti
jno
push
js
movs
dec
fstp
pop
sbb
add
cli
pop
inc
mov
or
pop
icebp
inc
adc
into
ds
jns
stos
mov
out
push
mov
push
pop
dec
es
jmp
jmp
jecxz
(bad)
fild
inc
xchg
pop
mov
sbb
mov
movs
or
ret
repz
pop
outs
inc
push
pop
sbb
in
inc
inc
jnp
dec
push
lea
and
pop
adc
cli
push
addr16
pop
lods
lock
mov
jns
jp
shl
dec
adc
sub
sbb
adc
or
inc
mov
aas
in
rol
test
arpl
ds
mov
dec
repz
cs
mov
cli
iret
ror
cs
clc
xchg
(bad)
fisttp
(bad)
jb
dec
xor
mov
and
jae
scas
bts
fisubr
pushf
shl
pop
daa
into
xor
add
mov
xchg
ds
mov
outs
jbe
(bad)
add
mov
push
sbb
add
in
in
lea
pop
mov
stos
mov
pop
iret
lea
repz
imul
sbb
cmps
stos
(bad)
push
add
and
push
lea
cdq
mov
into
jbe
rcl
cmps
gs
jne
fist
shr
mov
mov
cmps
fist
sbb
pop
(bad)
add
lock
fimul
test
outs
movs
jb
inc
out
stos
mov
out
scas
mov
in
push
cmp
arpl
mov
mov
sbb
pop
xchg
jns
pop
stos
pop
out
pop
js
fistp
scas
icebp
dec
pop
(bad)
ror
repz
jp
or
aaa
or
cs
sub
cs
sbb
stos
push
ret
(bad)
out
lahf
sar
inc
inc
cdq
pop
mov
add
or
dec
adc
enter
outs
cmp
test
dec
add
push
mov
xor
sbb
sub
lods
inc
sbb
je
cmp
lds
xor
ret
aaa
(bad)
sub
or
dec
mov
jbe
gs
inc
sbb
sti
popf
setge
test
pop
inc
sub
and
inc
inc
push
popf
rol
jg
sbb
cmp
lods
adc
sti
or
movs
push
push
jecxz
add
push
jne
adc
pop
cmp
fistp
int3
adc
not
push
or
fs
stos
sbb
cmp
adc
cmp
pop
scas
aam
add
rcr
pushf
in
in
mov
dec
add
sub
imul
sub
loope
inc
mov
mov
xchg
push
push
popf
rcr
lods
mov
int3
test
movs
out
nop
jmp
inc
cmp
jo
push
dec
sbb
aad
in
shl
xor
add
xlat
sti
adc
push
fwait
cli
movs
cmp
xchg
fs
in
in
mov
outs
pop
xor
add
cmp
jg
push
push
sub
(bad)
push
mov
or
jl
or
aaa
mov
xchg
shl
lea
sub
fwait
cmp
ret
pop
add
and
(bad)
pop
leave
js
in
and
mov
lds
retf
inc
cmp
js
shl
loope
pop
push
ret
mov
adc
dec
mov
cmc
xor
ds
bound
movs
(bad)
push
pop
out
and
dec
add
xor
sbb
mov
adc
addr16
mov
dec
jne
inc
add
mov
ret
mov
xchg
jg
cs
test
add
pop
dec
lods
xchg
ret
or
pop
dec
mov
sub
xor
ficom
clc
int3
cmp
test
enter
jne
fcomp
sub
xor
add
repnz
pop
jmp
int3
xor
ja
jmp
js
mov
aaa
int3
xchg
jecxz
add
gs
rol
jno
mov
jo
sub
sbb
(bad)
jmp
(bad)
in
call
xlat
and
je
dec
mov
ficomp
mov
ins
or
cmps
js
jo
push
out
out
int
js
outs
in
fwait
mov
aaa
mov
mov
ret
sub
ret
mov
outs
inc
add
jns
adc
lods
push
das
and
mov
test
add
push
les
scas
dec
lods
sahf
ret
cmc
out
pop
std
imul
mov
mov
dec
lea
repz
jge
test
push
add
ret
or
xchg
in
aaa
lods
jnp
sub
mov
sbb
sub
aam
cdq
imul
push
sbb
jno
adc
ins
ins
ins
pop
mov
(bad)
mov
stos
gs
pop
lods
pop
mov
and
push
jo
ds
add
xor
lea
movs
jae
pop
rol
mov
pushf
jg
imul
jb
fwait
std
add
jae
es
or
lds
push
and
pop
sbb
in
dec
dec
add
dec
inc
loop
loop
add
push
jecxz
xchg
cld
cmps
cli
push
adc
add
cmp
bound
mov
adc
xor
mov
pop
and
lock
icebp
out
adc
loope
rol
and
sbb
ins
adc
nop
mov
in
in
jae
cs
rol
cld
add
int3
pop
and
clc
mov
dec
xor
mov
push
or
out
fs
pop
dec
cdq
mov
xlat
mov
mov
sub
and
cmp
jp
ss
test
mov
enter
lahf
(bad)
repz
je
xchg
out
call
clc
aaa
ins
jnp
and
dec
and
fld
dec
or
fwait
cs
cdq
mov
out
in
aaa
cmp
inc
adc
in
cli
fld
aas
pop
retf
dec
dec
mov
stos
add
dec
cmp
pop
push
xchg
ret
jmp
loopne
or
jns
mov
test
cmp
aam
stos
in
mov
icebp
cwde
rcr
xor
add
in
es
int
idiv
stc
leave
mov
sbb
dec
xchg
dec
and
movs
cmps
les
lods
sub
loop
retf
or
jb
lahf
rcl
lds
movs
dec
inc
jae
cmp
pop
xor
cmp
or
xchg
(bad)
fcom
push
fld
aaa
xor
and
aaa
scas
cmps
repnz
mov
add
pop
and
rcr
int
push
jne
test
push
push
fcomp
jmp
out
dec
mov
arpl
dec
xor
stos
sbb
out
add
mov
push
pop
mov
cmp
sahf
and
sbb
adc
jg
movsx
ja
enter
cmp
cs
int
inc
xor
mov
int3
dec
adc
xor
ss
ins
cld
push
mov
shl
js
cld
popf
stc
lods
test
xchg
imul
adc
gs
xchg
les
ss
or
push
inc
sbb
push
repnz
pop
fs
adc
ret
pop
xchg
pop
pop
loop
stos
imul
mov
je
and
lea
mov
fwait
lods
dec
adc
push
sub
dec
sbb
sub
push
mov
push
xchg
adc
or
xchg
mov
inc
daa
es
cmp
int3
jg
or
int
dec
movs
mov
cld
push
bnd
jno
(bad)
(bad)
in
mov
dec
cmc
add
out
es
aam
adc
inc
cmp
and
fidivr
mov
add
xor
pop
push
cmp
repz
stc
or
dec
stc
movs
and
fldcw
push
imul
jecxz
mov
push
out
or
sar
xor
in
cmp
nop
mov
out
lods
inc
add
cmp
loop
jbe
loopne
sbb
sbb
fdivr
push
or
enter
(bad)
ret
aas
fild
inc
in
js
inc
sti
daa
addr16
daa
pop
adc
inc
sbb
add
int3
pop
mov
or
dec
and
aaa
push
mov
scas
mov
push
pop
cs
mov
jo
sbb
pop
push
into
fcmovb
and
(bad)
pop
dec
dec
(bad)
out
retf
sbb
nop
imul
lds
jmp
aam
fld
push
arpl
or
cmps
ins
cs
or
bound
and
xor
inc
pop
xchg
pusha
jmp
aam
and
xchg
xor
cmp
mov
loop
or
pop
cmp
lahf
test
cmovle
fild
jb
inc
xor
mov
mov
sbb
add
push
add
sub
inc
jb
mov
mov
cmp
ret
mov
jle
jge
mov
outs
cmp
push
and
out
mov
push
and
dec
fst
add
jno
in
adc
or
and
inc
hlt
xchg
ss
aam
fs
cld
cdq
sbb
add
adc
lock
dec
fmul
lods
repz
iret
sbb
(bad)
movs
ror
loopne
test
aaa
and
push
sub
aad
pop
sub
js
ffreep
movs
int3
cmp
iret
mov
xchg
xor
cld
pusha
push
jns
add
arpl
or
inc
imul
lock
mov
lahf
mov
neg
mov
addr16
sti
and
je
test
mov
xchg
rcl
jmp
arpl
xchg
mov
sahf
cmp
in
mov
sub
fdiv
out
mov
push
out
int
fldln2
dec
jg
(bad)
xchg
outs
xor
stc
or
jno
fistp
repnz
push
xor
xchg
mov
mov
xor
js
lea
fsubr
dec
out
aad
pop
ins
aaa
mov
(bad)
cmps
ins
jge
(bad)
cmps
data16
mov
mov
int
daa
xor
not
test
sbb
and
mov
mov
push
div
test
rol
out
xor
adc
and
xlat
dec
push
and
or
cmp
mov
leave
add
mov
cmp
call
lods
jne
adc
or
adc
jmp
sbb
call
push
lahf
pushf
push
int
int3
cmp
or
adc
push
dec
pop
cmps
(bad)
hlt
loop
mov
or
popf
sti
sbb
sub
je
xchg
mov
(bad)
mov
into
outs
nop
dec
add
ja
loop
loop
loop
sahf
xchg
add
test
daa
mov
sub
push
outs
(bad)
dec
lahf
cld
lahf
js
loop
mov
mov
retf
push
bound
repz
scas
std
(bad)
pop
or
mov
mov
sbb
pop
out
cld
xchg
xlat
leave
xchg
dec
sub
jmp
imul
lods
add
dec
mov
pop
into
adc
xor
jge
outs
dec
cmp
xor
test
jl
mov
pushf
lahf
cmp
(bad)
lea
pushf
stos
data16
mov
inc
xchg
lea
test
popa
rol
js
iret
dec
add
add
adc
xor
mov
shl
sub
cmp
push
sahf
retf
lods
sbb
scas
xor
xor
jmp
(bad)
cmc
adc
xor
outs
jno
pop
pushf
pop
ficomp
into
dec
rcr
add
or
xchg
push
sub
div
push
stc
gs
cdq
aaa
add
test
stos
and
mov
adc
adc
xchg
cmps
inc
mov
fcmovnbe
iret
imul
inc
ins
test
je
sbb
adc
outs
shl
retf
fs
xchg
jmp
xor
aad
mov
push
inc
dec
aam
arpl
(bad)
jns
push
and
and
mov
pop
cmps
pop
jmp
inc
jge
xor
(bad)
(bad)
adc
(bad)
xchg
ja
push
stos
movs
mov
cmp
jge
dec
jp
scas
sbb
inc
mov
xchg
and
repnz
mov
or
or
jnp
(bad)
adc
mov
mov
fincstp
inc
mov
outs
mov
dec
mov
sti
imul
lods
call
outs
pop
mov
mov
js
xor
lods
leave
mov
mov
push
inc
inc
pop
arpl
ja
push
pop
inc
fwait
test
ins
cmps
pop
push
ins
loop
or
adc
pushf
inc
jmp
jg
dec
sbb
sbb
cmp
cwde
jae
bound
aaa
mov
jmp
push
ja
adc
cmps
into
or
cmp
mov
test
mov
dec
fisub
sar
mov
mov
pmullw
(bad)
and
mov
test
dec
mov
inc
aam
mov
repz
jnp
dec
(bad)
out
cmp
cmps
and
fdivr
push
mov
adc
xchg
add
add
push
pop
loop
stc
sub
jl
in
xchg
scas
or
mov
ret
mov
pop
bound
sbb
pop
push
cmp
jo
lods
adc
fnstsw
mov
sahf
ret
push
sub
fild
ficomp
sti
sbb
sub
stos
add
out
mov
int
loop
push
lea
stos
pushf
lahf
pop
je
mov
bound
gs
(bad)
fsubrp
inc
icebp
scas
cli
push
int3
push
cmps
pop
cli
ss
sbb
popf
clc
xchg
jb
dec
inc
and
rcl
mov
fs
jno
inc
cld
inc
adc
outs
sbb
repz
dec
out
push
adc
mov
sbb
aaa
loopne
(bad)
std
(bad)
xchg
push
pop
popf
sbb
push
jecxz
mov
enter
pushf
cmp
sbb
push
pushf
les
pop
pop
cwde
fndisi(8087
fcomp
or
inc
or
xchg
sahf
test
mul
leave
inc
cli
in
mov
shl
sub
out
into
call
push
xchg
scas
retf
outs
(bad)
lock
stos
fcom
or
scas
stc
aas
frstor
test
lods
int
in
mov
int
repz
mov
push
adc
test
dec
push
movs
pop
loopne
hlt
dec
mov
xor
and
cli
sbb
inc
jno
dec
jae
pop
into
test
xchg
mov
add
add
icebp
das
ror
icebp
addr16
mov
jmp
cmp
jmp
mov
popf
ds
inc
and
out
fucom
cmp
or
icebp
scas
adc
dec
mov
aas
hlt
lds
out
clc
mov
in
xor
ror
jmp
retf
hlt
jbe
lds
nop
ficom
daa
rcr
sub
xchg
repnz
outs
push
mov
repz
pop
ds
int3
les
add
inc
xchg
mov
gs
xchg
outs
mov
add
xchg
loop
imul
xchg
dec
inc
outs
leave
mov
inc
push
push
push
mov
sbb
sbb
dec
and
or
leave
sub
or
in
mov
jno
jae
push
(bad)
outs
mov
xor
scas
and
ds
inc
ret
retf
fcom
(bad)
sahf
jmp
and
inc
dec
(bad)
cmp
enter
(bad)
pop
inc
loopne
mov
sbb
je
cmp
(bad)
jns
push
cmp
out
enter
push
loopne
popa
dec
push
dec
iret
lahf
div
rcl
pop
int3
cwde
loop
stos
jp
jb
inc
mov
xchg
(bad)
repnz
push
in
out
adc
sbb
xchg
push
into
shr
ins
jge
or
mov
cwde
inc
mov
mov
or
cs
div
mov
scas
cmp
push
mov
fdiv
call
loopne
in
(bad)
pushf
pop
les
sbb
pop
in
aam
cmp
jbe
inc
mov
push
les
arpl
cmp
inc
std
cmps
arpl
aam
fldcw
sub
test
das
push
cmp
adc
mov
not
mov
pop
mov
jns
mov
jmp
sbb
jg
rol
pop
mov
xchg
xor
mov
xor
test
cmp
inc
push
mov
pop
pop
adc
adc
in
dec
iret
jmp
or
push
lock
inc
mov
je
or
xor
mov
ret
mov
dec
rol
jmp
sbb
xchg
mov
jo
jp
ror
or
iret
mov
add
out
cmc
fstp
loopne
jg
or
out
jne
jns
fwait
push
pop
or
add
and
out
fld
mov
push
add
lods
and
cmps
and
mov
pop
out
(bad)
jb
mov
dec
cmps
nop
(bad)
jns
or
ret
fistp
mov
fcomp
mov
retf
(bad)
cli
into
cmps
jp
add
cmp
cmp
lea
and
adc
push
add
outs
adc
inc
inc
pop
inc
add
mov
imul
mov
pop
cmp
mov
mov
pop
fcmove
add
imul
xchg
ror
iret
xor
add
sbb
mov
lods
outs
add
xor
sti
mov
pop
inc
add
mov
add
xlat
push
ds
sub
(bad)
fld
sahf
sbb
pop
aad
cs
aad
mov
xchg
out
out
mov
jns
rep
add
(bad)
pop
lds
add
push
aaa
mov
pop
inc
or
inc
jbe
repz
ret
pusha
out
jl
mov
add
push
sbb
dec
jnp
ret
push
dec
xchg
dec
xchg
and
xchg
ins
fsub
cs
ficom
sub
retf
fwait
jp
push
je
mov
aad
js
jnp
fimul
xor
xor
nop
out
ret
inc
hlt
and
sub
xchg
test
stos
push
rol
in
retf
lods
pop
les
push
les
fwait
aam
adc
clc
inc
arpl
dec
aad
sbb
push
scas
mov
sub
test
arpl
je
xchg
cmp
xor
aas
dec
pop
push
jae
out
js
mov
sbb
pop
icebp
push
xor
mov
mov
push
inc
cmps
push
jnp
jl
es
shr
imul
pop
pop
inc
pop
or
std
mov
dec
mov
xor
mov
and
out
push
retf
mov
mov
sub
mov
(bad)
movs
mov
ror
sbb
lock
jge
scas
aam
mov
outs
mov
cmp
fistp
lods
and
ins
rcr
and
mov
pop
or
popf
out
leave
mov
push
push
int
add
or
and
mov
pushf
lock
stos
out
sbb
out
mov
adc
xchg
int3
cmc
not
mov
adc
mov
jp
cmp
inc
pop
ja
hlt
jnp
jbe
adc
mov
addr16
mov
fst
jmp
fld
jb
add
push
dec
fstp
fsub
jo
sbb
in
idiv
fsub
mov
ret
sub
movs
and
test
cmc
(bad)
jno
add
mov
nop
jno
push
ins
xchg
add
cmp
lahf
xchg
adc
pop
or
sti
pop
scas
dec
pop
dec
pop
(bad)
push
mov
dec
sar
arpl
inc
xchg
adc
cmps
(bad)
fiadd
iret
arpl
add
sub
es
pop
sub
ss
lods
test
dec
sub
fstp
shr
jg
cmp
test
add
dec
mov
mov
cld
push
retf
je
and
sbb
arpl
ret
push
mov
inc
cmp
xchg
call
xchg
aas
ret
jb
cmp
outs
cli
les
je
xor
neg
sub
leave
push
imul
bound
inc
test
jmp
jg
and
pusha
mov
xchg
dec
inc
out
clc
loopne
push
mov
push
add
pinsrw
mov
lods
ins
dec
jno
mov
pop
xor
push
in
xor
mov
pop
out
lods
inc
and
in
test
retf
ss
rcl
push
lock
dec
push
sbb
mov
xchg
lods
bound
or
les
adc
hlt
enter
dec
mov
movs
jne
jno
xchg
xor
mov
retf
mov
clc
sbb
mov
hlt
ins
pop
daa
cmp
pop
cdq
pop
or
xchg
dec
jo
clc
retf
iret
ja
pop
pop
and
adc
mov
aam
jle
mov
lahf
fs
sbb
push
jno
add
or
daa
jbe
inc
or
scas
retf
cmp
fdiv
cli
push
jge
loope
dec
sbb
and
or
test
aaa
mov
pop
aas
sbb
push
stos
xchg
pop
dec
inc
mov
into
ins
pop
lds
mov
lods
xor
outs
push
vaddss
push
xchg
sbb
mov
aas
xor
imul
mov
scas
loope
push
dec
imul
aas
stos
loopne
add
addr16
xor
sub
mov
neg
sbb
sbb
repnz
push
jns
test
dec
mov
pop
inc
jmp
dec
inc
mov
sub
pushf
fbld
and
repnz
fist
mov
dec
add
sti
sub
jmp
inc
leave
cs
iret
cmps
pop
movs
push
cs
pop
ins
cmp
xlat
add
mov
arpl
mov
adc
dec
lea
mov
sbb
push
ins
mov
mov
mov
add
add
mov
mov
dec
and
aad
xchg
mov
pushf
aad
and
jbe
xor
or
dec
inc
sub
popf
push
not
jmp
cmp
xor
mov
push
sti
inc
cmp
jmp
ret
div
out
mov
add
jnp
ficom
std
setae
cmp
jg
mov
stos
push
ins
aad
retf
xchg
pop
sbb
(bad)
shl
mov
test
clc
push
or
push
inc
rcl
ins
push
push
push
push
dec
jae
(bad)
jnp
push
sbb
setb
(bad)
imul
rcl
lahf
mov
mov
mov
xor
ja
stos
pop
pop
xchg
das
jmp
xor
xchg
in
xor
retf
arpl
or
add
bound
dec
ins
ds
stos
loopne
jb
arpl
stos
mov
mov
and
mov
test
test
inc
mov
or
mov
sub
js
cmp
into
xchg
xor
push
adc
into
int3
push
repz
ror
repnz
dec
push
dec
ins
ins
and
xlat
ds
jne
into
jne
or
adc
cli
int
and
xchg
and
stc
cli
das
stos
cwde
or
xchg
ror
(bad)
rcl
adc
ror
push
jnp
retf
(bad)
scas
test
out
sbb
data16
mov
les
or
test
je
test
or
int
shr
jmp
and
mov
mov
or
retf
push
test
dec
xchg
fsub
xor
pop
xor
std
shl
les
mov
sub
jb
cld
test
stos
xor
add
xor
outs
jle
inc
das
std
mov
mov
push
fnsave
xor
in
clc
and
das
mov
aaa
fbstp
dec
dec
arpl
repnz
mov
push
fcomp
jnp
dec
sbb
inc
nop
iret
pop
add
mov
push
popa
mov
or
xor
sti
rcr
jge
xchg
push
les
inc
sub
pop
xor
jmp
int
sahf
pop
mov
or
add
push
adc
xor
mov
xchg
ins
call
in
enter
sub
out
shr
fimul
(bad)
pop
or
jbe
mov
stos
inc
mov
or
sub
cmp
mov
push
push
adc
(bad)
fld
outs
cmp
cmps
les
and
dec
or
stc
test
retf
test
loope
or
push
pusha
test
mov
xchg
sbb
and
pop
pop
cmc
shl
test
shl
fstp
inc
pop
in
lods
pop
sbb
cmp
pop
out
adc
cld
cmp
outs
int3
mul
sahf
call
stos
add
xor
imul
std
mov
test
and
shl
adc
inc
push
adc
cdq
loop
or
inc
mov
rcr
and
or
fs
fcom
test
or
outs
mov
in
jg
xor
test
je
adc
mov
fwait
dec
push
jo
mov
adc
loop
mov
dec
and
jle
and
and
push
sbb
mov
imul
in
dec
fwait
mov
push
and
mov
mov
dec
jmp
cld
pop
shl
mov
xchg
jg
mov
pop
push
bound
mov
add
repz
push
ror
xchg
out
jmp
and
mov
inc
rcl
imul
inc
inc
and
inc
cmp
dec
jecxz
mov
dec
pop
mov
and
nop
and
loopne
sbb
jecxz
les
in
push
(bad)
aas
adc
xor
mov
retf
lds
mov
jo
test
cmp
dec
or
loop
jecxz
cwde
xchg
dec
outs
push
or
push
es
jno
push
mov
adc
xchg
mov
fwait
ret
push
enter
jp
jg
hlt
into
mov
push
fs
ret
pop
pop
mov
push
dec
inc
mov
pop
push
movs
jp
and
(bad)
and
call
pop
dec
fnsave
gs
pop
aam
(bad)
rcl
dec
jb
pop
aam
add
mov
xchg
or
pusha
mov
mul
ins
iret
fcom
dec
and
sti
sbb
movs
push
cld
fdivr
mov
or
nop
fadd
into
mov
int
mov
pop
ret
push
lods
movs
test
push
js
push
push
in
cmp
call
push
dec
addr16
in
into
lods
or
add
enter
es
pop
mov
mov
mov
retf
stc
dec
nop
sub
push
fmul
into
pusha
popa
rol
mov
inc
outs
push
out
in
and
repnz
outs
dec
daa
inc
add
add
fsub
cmps
pop
(bad)
mov
jb
retf
shl
aad
inc
scas
daa
mov
cmps
pop
aam
fadd
xor
jb
mov
pop
pop
addr16
pop
and
sbb
loop
cmp
fnstcw
ret
pop
or
push
gs
add
xor
and
push
pop
imul
cmps
sar
sub
pusha
comiss
pop
add
sub
pop
ja
push
sbb
fwait
into
pop
inc
mov
loope
add
cdq
ja
test
fbld
daa
add
out
loopne
ret
(bad)
icebp
xchg
mov
icebp
cmc
xchg
daa
mov
inc
lds
arpl
ret
dec
adc
dec
jmp
and
mov
add
pop
mov
pop
xor
pop
cwde
ss
sub
scas
mov
xor
pop
or
lods
jmp
push
pusha
stc
fucomi
cmc
pop
movs
or
jle
ror
jp
cmps
gs
outs
xor
call
dec
outs
push
mov
or
inc
dec
xchg
(bad)
test
push
movs
leave
ret
js
bound
inc
xor
cs
call
fild
cmp
mov
icebp
nop
push
addr16
dec
xchg
ror
and
sub
lds
mov
mov
or
sbb
push
outs
push
nop
cmp
mov
ins
xchg
das
jl
push
out
xchg
mov
fistp
in
dec
shl
mov
int
mov
lahf
mov
xchg
out
add
or
jmp
inc
das
stc
mov
mov
stos
icebp
lods
cdq
mov
cmp
or
jb
dec
sbb
loop
jno
stos
pop
sti
es
push
mov
dec
icebp
jge
push
push
xchg
aam
add
adc
xor
test
mov
xor
out
adc
enter
repz
test
stos
sbb
mov
out
adc
add
inc
adc
add
jmp
movs
sub
inc
retf
push
rcr
or
xchg
rol
pop
jecxz
adc
sahf
lahf
or
rcl
or
das
lea
dec
mov
into
add
mov
fadd
out
int
dec
(bad)
mov
retf
fucomi
push
sbb
pop
and
push
push
xchg
adc
push
add
dec
mov
arpl
push
cld
lods
sbb
stos
or
jmp
das
xchg
jecxz
jnp
pop
and
jns
icebp
adc
lods
add
sbb
or
xchg
xlat
in
je
popa
sub
add
adc
call
jae
aaa
xor
cmp
mov
add
mov
punpckhwd
mov
xchg
(bad)
or
stc
not
lahf
jae
sbb
xor
fs
cmps
add
or
xor
retf
mov
fwait
jne
jae
mov
addr16
xor
lods
jb
popa
and
adc
sub
inc
popa
dec
in
add
stos
loopne
jb
xchg
push
test
sbb
in
inc
and
push
pop
sub
mov
stos
aas
dec
sbb
in
push
cmp
cdq
(bad)
lea
xlat
sbb
cmp
retf
and
adc
pop
in
imul
test
pop
adc
lods
(bad)
xchg
inc
jns
cmp
sbb
test
arpl
(bad)
iret
mov
mov
lea
(bad)
jae
sub
ss
pusha
xchg
cmc
push
or
inc
sub
cmp
fstp
push
mov
pop
pop
xlat
sbb
push
ror
iret
add
add
xor
mov
jmp
fstp
mov
mov
xor
into
aad
loop
fild
stos
jl
add
sub
inc
out
inc
or
scas
(bad)
mov
xchg
adc
mov
sbb
sbb
dec
clc
std
test
xchg
imul
sub
fcomp
fs
dec
retf
xchg
sbb
fwait
and
mov
pop
clc
out
mov
push
shl
aam
push
cmp
hlt
dec
cs
imul
call
and
xchg
das
dec
mov
xchg
sub
inc
test
shl
arpl
pop
dec
je
pop
js
pop
test
xchg
or
add
sti
call
leave
mov
test
lods
or
xchg
ror
cli
shl
rcr
imul
jmp
sti
push
add
lahf
dec
add
mov
js
call
mov
rcr
sub
fnsave
int3
cmps
adc
jne
aas
outs
mov
in
jl
cli
ja
xor
ret
dec
call
or
adc
gs
popf
cmp
call
mov
outs
sbb
outs
jne
stos
in
push
or
cwde
out
mov
(bad)
movs
call
mov
out
ret
adc
scas
(bad)
mov
cmp
lds
test
mov
jne
into
and
mov
fisub
xchg
xchg
add
icebp
dec
bound
rcl
test
call
pop
push
pop
or
push
mov
sub
sub
pop
js
ret
imul
cdq
sbb
sub
mov
fwait
add
pop
mov
int3
jnp
fs
sub
sahf
pushf
aas
stos
pop
mov
mov
aaa
sbb
fwait
pop
mov
(bad)
cli
(bad)
xchg
fidiv
inc
sbb
jae
and
dec
push
lods
cwde
xchg
adc
pop
mov
jbe
inc
xor
into
enter
pop
rol
int3
mov
in
cmp
adc
imul
add
cli
sbb
in
call
jecxz
sub
pop
in
sbb
aaa
xor
hlt
inc
or
lea
rol
jo
scas
loop
vmovlpd
movs
and
dec
and
shl
call
std
cld
pushf
inc
jmp
push
cmp
xchg
(bad)
call
fs
sbb
pop
cmc
ret
jnp
(bad)
ins
and
inc
jp
ror
mov
(bad)
out
mov
mov
adc
sub
fsub
cdq
mov
icebp
(bad)
xor
jne
cs
hlt
test
inc
adc
inc
fdivp
add
hlt
movntps
cmp
push
nop
inc
shl
pop
cmps
nop
stos
ins
sti
dec
and
pop
jns
mov
ret
arpl
ins
repnz
jl
push
inc
and
push
jns
cmp
dec
xchg
jmp
inc
dec
outs
inc
je
jbe
ins
aas
xchg
sti
and
je
add
out
sub
jge
imul
(bad)
cmp
jmp
xchg
(bad)
push
mov
not
jno
mov
mov
pop
jmp
or
sbb
fs
inc
xor
clc
adc
inc
fnstcw
or
sub
fcos
xchg
call
rcr
or
aaa
or
jb
mov
(bad)
jl
imul
pop
mov
sub
leave
data16
enter
ret
movs
call
out
jmp
cmp
xchg
xchg
cmps
adc
xchg
jns
sbb
mov
or
icebp
mov
test
adc
xchg
out
jg
test
jnp
dec
sti
pop
mov
in
jnp
pop
add
xor
add
sbb
sbb
test
and
mov
dec
mov
fldcw
cmc
mov
cmps
imul
test
mov
mov
mov
and
call
mov
dec
fwait
scas
mov
inc
shl
push
pop
nop
cdq
and
or
inc
xchg
cmc
push
add
add
adc
inc
jle
popa
daa
std
mov
repz
push
addr16
mov
fiadd
inc
inc
ja
add
cmp
pop
push
addr16
pop
xor
dec
cmp
pop
or
imul
push
ins
xor
scas
xor
inc
xchg
pop
cmp
adc
sub
sub
push
es
das
ja
jb
mov
dec
pop
dec
mov
dec
iret
sub
xchg
outs
aaa
jmp
ins
inc
jbe
lea
xchg
cwde
sub
clc
cli
ret
pop
rol
enter
fsub
mov
jg
sub
mov
mov
adc
pop
fsubr
shl
scas
pusha
and
into
mov
jmp
ucomiss
(bad)
in
pmaddwd
fs
jnp
cmp
mov
retf
mov
pop
cwde
or
leave
cmp
std
arpl
mov
or
and
add
aam
cmp
test
dec
inc
fdiv
das
stos
jp
inc
movs
ins
out
sbb
test
add
repz
push
mov
js
fstp
adc
outs
mov
dec
jge
dec
or
push
cdq
out
les
mov
lds
inc
dec
lods
out
(bad)
fild
lahf
test
sbb
jbe
push
cmps
inc
jne
push
cmps
lods
loopne
movs
cmp
add
shr
jecxz
push
sub
jg
dec
pop
mov
repnz
in
stos
hlt
jne
test
fwait
cmp
cmp
add
xchg
loope
in
sbb
mov
sbb
clc
or
and
jmp
loope
mov
push
pop
xchg
dec
imul
adc
daa
stos
popa
out
mov
xchg
mov
sbb
mov
push
(bad)
xlat
clc
frstor
or
jg
sub
mov
and
add
sbb
movs
jle
sbb
test
sbb
push
jecxz
mov
mov
stos
add
int
idiv
adc
enter
and
ins
mov
enter
xchg
in
xor
out
(bad)
add
stos
xchg
clc
jle
call
repz
jbe
ficomp
hlt
out
(bad)
call
div
xchg
pop
mov
in
inc
dec
sbb
jae
es
sbb
sbb
add
cmp
leave
fcomp
xor
imul
inc
fnstenv
cwde
and
push
or
lds
(bad)
rcr
outs
call
in
push
add
jae
ficomp
fsubr
sbb
(bad)
jne
mov
sub
cmp
pop
jmp
dec
mov
das
out
pop
add
mov
sbb
xor
inc
mov
pusha
cmp
sub
sar
mov
jg
lods
scas
rcr
xchg
out
or
mov
xor
push
jb
xchg
mov
(bad)
jmp
inc
call
rcl
dec
push
imul
ret
jo
push
std
fwait
pop
test
jb
cs
pop
fstp
add
fs
bound
out
sbb
mov
jge
or
adc
cmp
int
or
call
dec
aas
dec
loopne
cmp
pop
mov
dec
add
jmp
add
push
in
(bad)
mov
pop
imul
dec
pop
pop
pop
movs
mul
mov
pop
ret
imul
push
ftst
jp
shl
dec
mov
mov
lds
fwait
jecxz
arpl
sub
loope
add
hlt
jmp
jmp
fld
mov
inc
iret
mov
test
xchg
mov
add
or
stos
retf
aas
dec
adc
inc
mul
aad
adc
and
push
push
push
in
push
add
sub
sbb
int
mov
outs
icebp
cwde
dec
(bad)
out
cdq
scas
out
pop
bound
les
xor
test
ja
and
sub
or
cmps
fdiv
sahf
pop
dec
mov
loop
jmp
adc
push
ja
fwait
into
and
jno
stos
cli
pop
scas
inc
jnp
push
imul
xor
fidivr
sbb
test
stos
mov
jo
push
push
dec
sub
jne
pusha
ins
pop
test
hlt
ja
cmp
mov
aas
jne
pusha
lahf
out
out
mov
push
popf
lahf
inc
sub
sub
ss
pop
adc
dec
inc
(bad)
mov
mov
ins
inc
inc
dec
adc
not
test
test
push
adc
(bad)
repz
xchg
cmp
daa
ret
dec
sub
icebp
repz
sahf
mov
movs
pusha
lahf
pop
jg
arpl
xchg
pop
adc
sbb
bswap
ja
test
punpcklbw
in
cmp
sbb
outs
cmc
pop
cmpxchg
lahf
sbb
pop
repz
sbb
stc
std
jecxz
xchg
retf
and
fnstenv
xor
dec
inc
inc
adc
push
ret
mov
stc
call
mov
cmp
out
adc
add
cmps
sar
inc
sub
loope
jb
cli
test
xchg
in
(bad)
sar
mov
adc
jl
aaa
adc
adc
dec
sub
in
daa
pop
jbe
xor
xchg
inc
jno
daa
jne
es
lock
movs
pop
ins
jmp
js
mov
sub
xor
sar
fmul
out
leave
movs
adc
xor
adc
pop
lods
movs
xor
push
mul
in
mov
lea
stos
add
jecxz
jge
loope
mov
fucomi
add
pop
add
pop
mov
gs
push
xchg
add
xor
or
inc
rcl
ins
sbb
jnp
ins
mov
lods
add
ret
xchg
cmps
cmp
shr
dec
inc
xchg
ficomp
or
jmp
inc
mov
jns
mov
repz
push
xor
or
pop
mov
push
cmp
cli
adc
sbb
ror
mov
inc
in
xchg
nop
jmp
retf
sbb
ret
fld
lea
lods
test
outs
leave
push
or
pop
rcr
repz
pop
ds
pop
lock
or
loope
jo
out
hlt
mov
cmp
or
push
mov
mov
xchg
mov
ja
mov
mov
or
daa
pop
mov
sahf
xor
outs
pop
cli
jmp
vcvtpd2ps
loopne
mov
mov
sub
fcom
xor
push
shl
cdq
inc
dec
(bad)
repz
pushf
inc
xor
mov
jg
gs
data16
and
outs
dec
xchg
scas
cmps
jecxz
inc
mov
mov
mov
int
lods
mov
inc
shr
cmp
ins
enter
pop
sbb
sbb
std
imul
lahf
and
add
(bad)
into
sub
addr16
sbb
mov
and
pop
push
(bad)
das
test
fsub
dec
scas
pop
ficom
dec
xchg
sub
sub
jo
push
retf
mov
adc
pop
push
cmps
pushf
cdq
xchg
push
mov
mov
xor
sbb
lods
adc
stos
dec
das
clc
lahf
(bad)
adc
inc
test
ret
inc
push
pop
dec
inc
push
or
test
sbb
cli
add
push
sbb
std
or
cmp
fisttp
push
pop
jb
pop
xor
shl
pusha
test
xchg
jmp
lock
movs
call
pushf
ins
and
call
adc
sub
push
jae
and
in
test
outs
inc
ret
xchg
dec
bound
xchg
imul
fcmovu
inc
ret
cmp
out
dec
pusha
sbb
pop
lds
mov
loop
(bad)
ds
fmul
and
test
shl
push
loope
sbb
fs
xchg
lock
mov
sub
cdq
lds
dec
mov
xor
ins
mov
inc
ror
inc
dec
adc
push
sti
stc
mov
xor
mov
(bad)
xor
and
lahf
out
jne
pop
push
xchg
(bad)
lods
sbb
out
dec
bound
sbb
repz
dec
inc
ficom
xchg
ins
cmps
mov
mov
(bad)
xchg
jle
sbb
and
adc
xchg
jmp
push
add
out
aam
mov
and
sahf
ror
and
cdq
jmp
aam
mov
or
nop
div
mov
push
hlt
ja
ret
mov
inc
xchg
fsubp
jbe
jl
pop
ffreep
cli
leave
dec
push
sub
cmps
jecxz
mov
pop
cmp
fild
cmp
hlt
jno
lods
cmp
scas
mov
inc
mov
fcmovu
mov
push
popf
jbe
fcom
and
repz
sbb
lods
sti
stc
rcl
inc
jno
add
inc
or
adc
add
mov
sub
add
mov
xchg
push
cmp
dec
arpl
loop
xor
mov
mov
pop
push
sbb
jne
cmp
(bad)
shr
sbb
repz
cs
mov
sub
xchg
xor
or
xor
in
sahf
sbb
loope
xchg
pushf
adc
xchg
shl
das
(bad)
jmp
mov
push
hlt
nop
adc
sbb
dec
add
cmp
arpl
hlt
mov
movs
mov
dec
in
inc
lea
loopne
or
mov
aas
inc
cmps
fstp
add
cmp
mov
cmp
pop
mov
add
and
pmaxsw
mov
sbb
int
mov
sub
cmps
xchg
outs
dec
lds
sbb
jmp
mov
mov
push
mov
outs
jl
loop
inc
dec
or
push
cmps
pop
repz
je
shl
xchg
mov
and
outs
cmp
sbb
lahf
xchg
cmps
int3
jo
adc
imul
jne
in
(bad)
mov
jb
dec
xchg
les
pop
out
dec
inc
mov
pop
sti
mov
stos
sub
xchg
jne
js
jg
pop
xor
dec
cmp
rcl
push
out
imul
movs
cmc
push
js
sub
push
bound
or
cs
mov
inc
cdq
cli
or
jl
in
(bad)
pop
pop
les
pushf
dec
mov
pop
push
xor
into
dec
jge
sbb
mov
stos
mov
jl
fnsave
ret
lods
es
jl
sar
in
scas
pop
outs
mov
scas
ins
mov
pop
imul
push
test
jb
fistp
or
call
sbb
pop
xchg
push
pushf
jns
sbb
add
mov
movs
psubusw
xor
jae
cmps
adc
xor
sbb
jg
xlat
or
les
not
or
jnp
(bad)
push
icebp
fidivr
test
pop
xor
adc
or
rol
push
fdivr
out
sbb
xchg
cmc
sub
mov
dec
hlt
inc
jg
in
mov
mov
push
mov
and
(bad)
adc
adc
in
mov
int3
daa
xchg
rcl
gs
lods
fbld
cmps
push
popf
ret
jbe
adc
jb
(bad)
fs
cmp
std
imul
test
fstp
jmp
retf
or
xor
sahf
push
sub
or
dec
push
and
cmps
loopne
push
into
sub
mov
jnp
inc
jle
adc
sti
jno
inc
inc
and
xor
and
clc
dec
(bad)
or
clc
int3
add
push
popf
addr16
(bad)
mov
inc
inc
lahf
and
xchg
mov
(bad)
ret
push
add
sub
mov
and
loopne
sub
fsubr
aam
cmp
jae
popa
cmp
sti
mov
xchg
jmp
in
mov
mov
pop
shr
js
or
repz
cmp
movs
ret
jecxz
mov
test
add
(bad)
in
lods
mov
out
mov
push
xchg
ss
lods
test
test
es
retf
push
mov
push
nop
(bad)
mov
(bad)
mov
adc
pop
xor
neg
popa
aam
pushf
jae
stc
jle
sbb
jmp
pop
imul
test
lock
mov
adc
jg
int3
dec
div
bound
test
ret
jmp
clc
mov
jg
add
bnd
test
push
push
popf
repnz
es
outs
jo
fdiv
mov
adc
sbb
sbb
mul
pop
icebp
sub
movs
jecxz
fist
in
leave
out
mov
adc
out
arpl
jae
xchg
ins
shr
jg
or
std
mov
mov
(bad)
xchg
adc
jmp
inc
sar
sub
(bad)
push
xchg
xor
inc
or
sbb
mov
sbb
xchg
cmp
test
lds
call
fmulp
adc
mov
ins
mov
cmp
sar
adc
(bad)
es
dec
(bad)
aad
cmp
sbb
iret
out
push
sbb
jg
clc
add
retf
int3
int3
test
std
cmps
xchg
mov
shl
add
sar
mov
imul
dec
ins
pop
push
pop
push
or
jae
xor
mov
push
in
mov
sub
int
pop
xchg
dec
push
pop
or
and
and
push
div
mov
call
les
push
scas
adc
cs
(bad)
daa
adc
sbb
stc
mov
packssdw
fs
outs
xchg
enter
inc
jbe
jb
sub
cli
jne
pusha
pop
and
in
sub
ds
sub
xor
es
idiv
add
push
call
dec
loop
jmp
mov
mul
imul
dec
adc
inc
push
mov
(bad)
inc
out
dec
loopne
in
shl
adc
jmp
fsubr
dec
mov
ins
jmp
cwde
push
loopne
jns
ja
sub
pop
or
cdq
jmp
test
fiadd
or
pop
add
pop
mov
pop
inc
icebp
adc
in
add
pop
pop
dec
add
shl
cmp
int
mov
pushf
xchg
pop
xchg
out
(bad)
mov
fcmovbe
add
sub
popa
pop
(bad)
jl
cmps
mov
add
pop
sbb
xor
test
jae
test
lea
or
xor
push
pop
xchg
test
lds
repnz
lds
ja
pop
cmps
imul
xor
or
aaa
xchg
cld
inc
xchg
test
ficomp
mov
sub
jb
dec
xchg
mov
mov
sub
popf
stc
cmp
xor
adc
mov
sbb
jae
mov
inc
jo
aad
enter
test
and
pop
aad
movs
stos
cmps
mov
ins
jbe
mov
or
popa
mov
mov
aad
add
lods
aaa
cmp
xchg
adc
and
jb
xlat
and
pop
add
mov
mov
ins
sub
scas
sbb
into
mov
jne
jae
shl
mov
pop
ficomp
lahf
push
and
xchg
pop
inc
ds
xacquire
fs
add
repz
nop
mov
xlat
cmp
mov
fild
or
inc
mov
xchg
mov
xchg
stc
out
and
lock
loop
xchg
xor
push
xor
cs
bound
dec
imul
mov
inc
dec
mov
sbb
xor
dec
popa
xor
or
push
xchg
lahf
call
retf
mov
es
jmp
mov
popa
sub
mov
adc
jl
sbb
mov
neg
retf
call
dec
retf
hlt
outs
icebp
shl
sub
mov
xor
mov
dec
arpl
and
add
or
sub
xchg
cmp
(bad)
mov
add
cmp
pop
pusha
and
pop
cld
arpl
xchg
pop
jle
adc
mov
mov
aam
xor
out
mov
jns
mov
in
test
push
and
sub
pop
adc
outs
in
mov
jecxz
call
mov
lock
jae
dec
jb
ss
dec
pop
aad
test
jb
cld
xchg
loop
mov
out
xacquire
or
sub
loopne
out
loope
sbb
lods
cmp
test
rol
sar
adc
imul
or
jecxz
fnsave
out
sbb
or
into
or
std
ins
or
cdq
gs
rcr
or
ror
push
cmc
pop
cwde
push
pop
repz
cmc
ret
mov
mov
adc
pop
call
and
xchg
or
inc
jge
jmp
mov
das
addr16
movs
jmp
ins
leave
(bad)
pop
stos
mov
outs
in
jmp
aam
add
and
js
cmp
in
fld
scas
(bad)
dec
movs
and
xchg
int3
and
jno
add
pop
mov
stc
mov
(bad)
imul
(bad)
das
stos
rcr
(bad)
mov
jle
shr
inc
ror
stc
xchg
inc
sub
fdecstp
cmps
add
inc
jne
push
into
iret
inc
scas
imul
ror
xlat
jb
mov
imul
or
push
fdiv
xor
cdq
or
daa
sub
rcr
call
nop
cmp
and
adc
jbe
xor
test
scas
mov
(bad)
mov
sub
div
(bad)
cmps
les
cs
cli
cwde
pop
loop
fwait
cmp
or
test
or
and
cmp
clc
sbb
pop
(bad)
out
sub
inc
and
imul
cli
rcr
fild
xor
icebp
and
shr
sti
inc
(bad)
fistp
push
fbstp
clc
adc
jnp
add
into
in
stc
cmp
inc
scas
dec
sti
outs
sahf
int
sbb
nop
int
movs
pusha
inc
xor
icebp
mov
pop
aam
pop
outs
sbb
adc
and
inc
popa
outs
sbb
test
pop
dec
pop
cmps
pop
push
mov
push
cmp
dec
cld
add
fwait
add
pop
test
mov
dec
test
loop
mov
xchg
xchg
movs
mov
jle
(bad)
pop
jmp
sbb
mov
jmp
pop
fst
in
push
stos
movs
stos
into
mov
(bad)
in
push
mov
mov
shr
rcl
loop
pop
ds
cmps
iret
mov
sahf
pandn
mov
out
pop
sahf
push
sahf
lock
or
cmps
(bad)
jl
cmps
dec
out
je
inc
and
pop
pop
xchg
dec
jns
sar
fstp
mov
mov
lea
and
inc
jns
fwait
adc
adc
pushf
in
jae
pop
sahf
push
push
hlt
jle
fs
inc
cdq
bound
data16
dec
pop
pushf
mov
xchg
call
into
into
ins
and
jecxz
mov
test
sbb
jnp
adc
sbb
sbb
xlat
pop
sar
sbb
nop
lods
shr
test
hlt
jbe
xchg
ja
stc
jns
jge
mov
pop
mov
inc
xor
mov
dec
sbb
sti
loop
xchg
and
dec
xor
sub
loop
lock
lahf
stos
cmp
add
mov
lahf
gs
xor
push
dec
retf
ins
call
outs
pop
shl
std
xor
(bad)
sub
sub
and
pushf
(bad)
fist
or
mov
inc
mov
js
sbb
sbb
arpl
mov
or
sbb
dec
aaa
xor
test
icebp
add
mov
xchg
mov
fstp
xchg
test
cmp
jmp
add
xchg
sub
push
adc
(bad)
and
cs
or
cmp
loopne
inc
sub
(bad)
fnstenv
arpl
neg
loopne
jle
(bad)
xchg
xor
mov
aam
push
mov
mov
shr
mov
dec
ss
push
jno
in
and
dec
mov
dec
and
js
mov
xor
push
pop
outs
and
sahf
dec
lahf
and
neg
xchg
mov
or
add
outs
sti
push
mov
loopne
adc
sbb
and
fwait
repz
or
nop
sub
leave
ret
je
pop
xchg
lds
pusha
int
je
movs
push
pop
sahf
ja
sub
std
sbb
test
mov
mov
pop
addr16
push
and
mov
addr16
into
dec
daa
push
pop
add
and
inc
pop
cmp
(bad)
mov
push
sub
cmps
iret
cwde
or
xchg
fdivrp
sbb
stc
mov
test
movs
dec
movs
xchg
mov
sbb
(bad)
fisub
shr
das
gs
in
xor
mov
pop
dec
(bad)
retf
adc
in
test
pop
(bad)
mov
mov
(bad)
arpl
mov
adc
pop
dec
lea
inc
cmps
movs
pop
mov
(bad)
push
inc
jge
fadd
dec
in
mov
adc
pop
lds
(bad)
sbb
add
call
dec
out
clc
cdq
mov
xchg
cwde
push
or
pop
add
inc
test
popf
cmp
xchg
(bad)
pop
retf
mov
xchg
add
xor
mov
shl
retf
ret
aas
clc
mov
or
scas
(bad)
lds
inc
mov
and
(bad)
jp
inc
cs
dec
push
ins
cmp
data16
test
(bad)
cld
jno
mov
sbb
adc
or
call
mov
rcr
dec
or
xchg
adc
out
out
pop
rcr
mov
pop
shl
arpl
inc
adc
jne
xor
sbb
xchg
fist
lds
sbb
fs
out
inc
pop
call
ss
iret
iret
pop
cmp
sbb
pusha
test
fst
sahf
pop
sub
(bad)
push
gs
repnz
loopne
and
or
pop
or
iret
inc
fsub
inc
push
jae
or
pop
jo
outs
es
mov
dec
push
push
push
mov
cli
retf
and
mov
sub
and
add
xchg
push
mov
test
ja
xchg
or
outs
fcomip
lahf
push
loop
out
fisttp
push
dec
add
fwait
ins
mov
sub
mov
or
mov
retf
leave
sub
mov
push
jb
inc
sub
hlt
add
and
les
aaa
cs
dec
fst
push
or
sub
push
mov
iret
gs
fisubr
sbb
mov
call
jb
pop
out
dec
in
lods
lea
pop
hlt
hlt
icebp
sbb
imul
jl
scas
fwait
loopne
or
push
and
ficomp
mov
sub
jle
sub
je
cmps
xchg
xor
mov
fstp
es
lods
shr
xchg
jmp
jne
in
pop
test
mov
jmp
jo
jo
xchg
cmp
add
iret
pop
pop
or
loop
aam
dec
aaa
fadd
sub
jmp
xor
inc
imul
pop
pop
clc
or
out
xchg
add
dec
ds
es
dec
(bad)
iret
and
mov
and
sbb
dec
mov
lock
jg
mov
mul
xor
sbb
xchg
push
sub
xchg
xor
push
loop
loopne
pop
movs
and
sbb
aam
or
mov
call
push
push
mov
mov
bound
in
daa
cmp
dec
mov
push
jno
ds
mov
xchg
fstp
mul
pop
mov
loop
sub
test
in
pop
(bad)
mov
push
aam
inc
sub
cs
(bad)
adc
or
repz
mov
lods
sar
ss
mov
lahf
mov
mov
sub
lock
cmp
sbb
mov
jne
push
js
pop
sbb
cmp
shr
je
and
dec
mov
es
ins
mov
jge
inc
mov
mov
pop
je
jno
xchg
neg
sub
jle
mov
xor
ins
mov
inc
stos
fild
or
and
or
sub
mov
jnp
fnstsw
ins
gs
xor
add
jle
cmps
adc
add
adc
add
mov
dec
(bad)
mov
hlt
or
sbb
ror
mov
pop
repnz
add
call
(bad)
das
lock
add
sbb
add
sub
fdivp
mov
js
test
fnstsw
jns
mov
dec
pop
call
ret
jp
pop
xor
push
and
mov
mov
in
push
adc
loope
xor
inc
in
das
cmp
(bad)
sub
push
xor
test
mov
dec
retf
push
push
std
push
std
mov
(bad)
dec
fcom
rcl
test
sbb
jmp
mov
sub
out
hlt
xor
cs
repnz
push
clc
cwde
or
mov
ins
lock
clc
or
imul
mov
scas
cld
call
cdq
mov
leave
gs
fisub
adc
(bad)
cmp
inc
frstor
retf
movs
shl
sub
(bad)
out
fsub
(bad)
sub
shl
pop
lds
add
loop
das
cmc
shl
dec
jb
adc
aad
add
test
hlt
dec
adc
mov
dec
mov
fstp
cmps
imul
mov
or
popf
sbb
mov
aaa
and
add
lods
xor
clc
mov
pop
fistp
sub
imul
into
sbb
rcr
mov
daa
sbb
pop
ja
add
lea
sahf
mov
popf
(bad)
xlat
adc
test
fwait
cli
cmp
xlat
test
or
cld
push
lods
outs
mov
jae
jo
int3
sbb
out
mov
add
pop
xchg
push
fisubr
loop
jae
fidiv
and
mov
in
imul
daa
pop
(bad)
int
mov
adc
(bad)
fwait
hlt
inc
push
stos
xor
inc
nop
mov
loope
mov
ja
dec
fcmovnu
dec
lahf
(bad)
mov
lods
in
cmp
dec
push
rol
out
loopne
pop
dec
add
dec
ss
test
cmps
fwait
ins
bound
push
(bad)
fs
xchg
in
lea
fistp
inc
jmp
cmps
leave
fidiv
lea
add
loop
in
cld
sub
out
in
into
cwde
adc
xchg
xchg
fiadd
mov
mov
pop
outs
call
out
arpl
mov
fstp
jae
dec
add
xchg
retf
lods
jmp
scas
xchg
lods
(bad)
xor
mov
outs
xchg
lds
add
fs
adc
adc
jno
and
adc
add
or
xor
(bad)
mov
aad
push
mov
jno
pop
push
push
xchg
das
mov
cwde
sub
xor
loope
cmp
xor
xchg
pusha
sbb
mov
cmp
and
les
cmps
into
les
popf
mov
push
mov
outs
pop
inc
or
mov
cs
into
(bad)
ja
cmp
mov
fcom
adc
call
mov
in
pushf
aad
adc
cmp
(bad)
or
xlat
(bad)
fbld
int
inc
pop
clc
addr16
xchg
cmp
sar
jl
cmp
and
xor
xor
xor
dec
xchg
in
out
arpl
mov
adc
add
adc
mov
outs
jmp
imul
ins
daa
mov
xchg
enter
ret
sbb
inc
add
(bad)
out
stos
pushf
daa
dec
and
bound
xchg
cmp
adc
push
pop
jp
dec
mov
jecxz
aaa
mov
int
sbb
test
adc
dec
jns
loop
xchg
enter
adc
mov
cmp
rol
jl
dec
pop
sbb
mov
sub
cmp
jo
mov
xor
sub
imul
inc
pop
jbe
bnd
test
loope
mov
xlat
iret
pop
popa
in
cmp
jns
add
out
sub
lods
fdivr
mov
out
or
sbb
mov
xor
cmps
or
sub
inc
dec
std
fwait
pop
or
mov
mov
dec
retf
sub
push
aad
cmp
sahf
adc
imul
sub
lea
repnz
fstp
bound
(bad)
mov
push
nop
push
dec
mov
mov
sbb
enter
imul
push
leave
push
jg
ret
(bad)
imul
xor
inc
mov
pop
and
or
std
out
mov
(bad)
cmp
mov
int
nop
daa
pop
and
mov
iret
push
aaa
mov
test
mov
sub
bound
dec
pop
and
xor
dec
outs
out
sub
jo
push
sub
movs
sub
xlat
dec
lods
jge
pop
inc
stos
scas
jns
or
add
mov
sub
je
gs
fnstenv
cmps
add
mov
jge
shr
xor
stc
test
int3
mov
pop
xlat
jle
xchg
dec
test
mov
mov
jno
push
rcr
sbb
aas
int3
(bad)
cmp
sbb
enter
out
inc
xchg
dec
sub
shl
cwde
push
loopne
bound
daa
bound
xchg
ret
cwde
adc
hlt
in
cmp
repz
sbb
enter
and
add
and
outs
repz
or
stos
lahf
leave
inc
xchg
cmp
dec
hlt
and
add
and
inc
enter
mov
cmp
iret
inc
imul
fst
sahf
or
cmp
sbb
xchg
out
mov
clc
loopne
pop
ds
and
jno
je
jge
(bad)
fimul
pusha
or
xor
xor
xchg
xor
sub
xor
xchg
ret
retf
xor
push
dec
ret
lea
hlt
mov
sahf
cdq
pop
loopne
adc
add
out
dec
cmps
mov
cmps
fadd
push
pop
ror
call
stos
jle
cmps
mov
call
test
lods
dec
mov
inc
mov
fisttp
in
sti
sbb
mov
pop
in
mov
inc
repnz
clc
aam
mov
mov
movs
xor
inc
xchg
mov
or
fadd
add
int
dec
xor
xchg
sbb
(bad)
loope
jmp
fidivr
lds
call
daa
sub
cmp
push
add
push
pop
pusha
mov
stc
in
add
cwde
or
jmp
add
imul
mov
popa
sbb
pop
popw
cmp
sti
mov
scas
std
js
sar
xor
test
fs
lds
rcr
xor
hlt
aad
ins
loop
inc
test
xchg
push
fdiv
xchg
call
cdq
add
div
loop
adc
jmp
adc
mov
sbb
sti
pushf
scas
mov
adc
movs
retf
es
and
mov
pop
loopne
mov
dec
retf
ins
add
cmc
retf
pop
leave
adc
dec
jl
push
jne
out
aam
sbb
add
int
dec
pushf
fisttp
dec
add
data16
lahf
movs
pop
or
mov
mov
test
or
in
js
rcr
xlat
mov
fdecstp
mov
iret
cmp
mul
ins
xor
pop
aas
call
ss
cmps
sbb
cli
inc
movs
push
sbb
call
test
or
hlt
and
fisttp
cwde
sub
xchg
neg
jnp
outs
cmp
jmp
stos
hlt
add
sbb
lods
push
mov
sbb
in
add
pop
dec
into
retf
add
push
call
dec
movs
mov
clc
cmp
rcl
push
cmps
xor
std
in
add
push
add
and
push
adc
add
xchg
and
pop
push
dec
jo
push
aad
cmps
adc
dec
lock
ds
add
pop
retf
push
(bad)
aam
sub
dec
movs
jno
inc
or
mov
mov
and
fs
ins
les
sub
movs
ins
jg
add
xchg
out
pop
cmp
shl
fidiv
out
cmp
imul
or
xchg
or
frstor
push
jp
xlat
retf
cdq
jle
push
jns
xchg
xor
xchg
sub
adc
push
idiv
jg
add
or
movs
nop
movs
jns
gs
dec
jl
adc
test
or
xchg
jge
rcr
push
imul
adc
shl
or
retf
xor
fisttp
je
repnz
call
xchg
push
push
and
test
push
(bad)
sbb
repnz
xchg
dec
outs
std
mov
lock
or
ja
sbb
sbb
mov
and
aam
jg
popf
outs
sbb
xchg
pushf
cmp
push
out
retf
je
jle
mov
push
push
(bad)
xor
and
ret
xchg
mov
pop
aas
dec
test
clc
xchg
cmps
sub
sbb
aas
test
shl
loopne
inc
add
scas
lods
or
add
imul
sbb
std
xchg
(bad)
not
popf
(bad)
mov
call
push
sub
pop
mov
in
es
out
jno
push
sbb
mov
jae
(bad)
and
out
jne
mov
jmp
leave
and
mov
loope
mov
add
push
hlt
jg
xor
in
idiv
bound
lds
inc
add
pop
ins
inc
mov
mov
out
inc
jecxz
push
sbb
mov
push
jmp
jge
in
adc
jp
popf
je
mov
push
(bad)
movs
mov
push
add
arpl
(bad)
jge
lods
or
jno
mov
or
inc
pop
ja
add
jns
push
cmp
clc
data16
mov
xor
push
cdq
daa
push
jb
test
leave
repnz
mul
inc
push
les
call
mov
xchg
rcl
repz
jo
adc
mov
jno
push
outs
jae
fdivrp
adc
call
adc
ror
pop
and
ret
push
int
xchg
stos
aad
lahf
and
mov
adc
adc
or
bound
mov
sbb
dec
into
mov
and
(bad)
sbb
cli
jp
cmp
dec
pusha
scas
stc
jmp
cmp
inc
sbb
sbb
or
and
lods
lds
scas
(bad)
xor
dec
ds
fwait
in
das
xor
and
fs
inc
mov
in
addr16
sbb
push
lods
aam
mov
shl
pop
xor
out
xchg
mov
cdq
(bad)
push
dec
mov
gs
fist
jno
dec
jmp
mov
mov
cmps
cmc
xchg
mov
cmp
inc
cmp
xchg
daa
not
je
mov
adc
ret
cmps
and
int
push
sbb
inc
outs
xor
call
mul
cmps
push
xchg
arpl
adc
mov
jne
sub
rol
pop
enter
jecxz
mov
push
or
dec
xchg
pop
sbb
std
ret
out
mov
or
mov
aas
popf
sti
clc
mov
pop
sbb
xchg
and
je
into
jne
mov
xchg
xchg
leave
inc
dec
add
mov
jmp
xchg
test
(bad)
push
inc
div
cdq
xlat
xchg
mov
cmc
xor
(bad)
adc
daa
dec
dec
in
inc
test
mov
bound
mov
cmp
push
mov
xor
inc
sbb
xor
push
jbe
retf
bound
sub
ja
in
cdq
inc
pop
pop
leave
retf
ins
add
xchg
cs
sub
lds
and
nop
xchg
in
inc
pop
ficomp
add
(bad)
loope
push
lds
sbb
cmps
cld
mov
inc
sub
jne
mov
sub
add
sbb
xor
xor
cld
movs
loope
out
jle
jge
cdq
adc
int
pop
jg
jle
jmp
cmp
jne
push
(bad)
or
push
scas
jns
(bad)
xchg
and
push
test
inc
cmp
push
rcr
add
xor
and
rol
and
icebp
pop
lods
mov
shl
rcl
jecxz
test
shl
arpl
ins
cmp
pop
jns
inc
inc
movs
enter
fcomp
and
lock
and
push
inc
nop
or
mov
xor
push
int
fsubp
add
retf
rol
int
push
pop
pavgb
pop
mov
popf
cmp
imul
(bad)
xlat
fwait
push
and
sub
test
ja
imul
idiv
cmps
sahf
sub
jnp
call
inc
(bad)
stc
lods
pop
pop
cli
mov
mul
loop
js
and
mov
aaa
fdivr
mov
daa
out
je
and
mov
cmp
pop
mov
xor
jb
or
dec
imul
or
lahf
retf
cmp
pop
dec
shl
inc
cmp
pusha
lock
aad
mov
bnd
stc
or
cmp
into
dec
dec
addr16
inc
dec
and
mov
cmp
stos
mov
call
pop
repz
adc
push
xchg
rcl
cmps
scas
ins
lahf
rcr
shl
push
jno
mov
pop
dec
(bad)
iret
int3
xlat
loopne
in
mov
cmp
pop
dec
and
dec
fs
loop
push
pusha
in
cs
cmp
jmp
dec
adc
pop
cmp
mov
(bad)
in
sbb
dec
xor
cmp
test
shl
lock
dec
int
sub
push
xor
mov
jecxz
fdecstp
loope
sub
ffreep
xor
outs
les
pop
popf
dec
(bad)
cmp
(bad)
push
push
adc
ja
aas
call
jno
test
xchg
push
dec
mov
xchg
xor
add
fistp
dec
dec
shl
retf
or
mov
int3
sub
xchg
aaa
mov
mov
mov
aam
xchg
dec
ret
inc
into
call
jle
loope
push
repz
or
je
nop
and
das
popf
mov
outs
mov
cmp
sub
loopne
out
(bad)
fcmovb
mov
aas
xchg
aas
and
retf
hlt
cmp
mov
pusha
mov
(bad)
cld
push
push
(bad)
jnp
sub
js
mov
(bad)
add
mov
retf
shl
push
(bad)
pushf
sub
add
dec
push
test
push
jo
aad
add
and
mov
cmp
pop
dec
mov
sbb
cmp
jge
mov
in
scas
fldcw
mov
push
add
(bad)
ficomp
ret
push
cwde
sbb
mov
(bad)
or
inc
sbb
inc
jo
adc
mov
ret
add
dec
sti
dec
dec
(bad)
push
addr16
gs
mov
pop
xor
test
push
inc
cdq
es
popa
push
ss
push
dec
pushf
ins
leave
(bad)
pop
add
adc
dec
xchg
pop
iret
inc
cmps
leave
jp
dec
loope
retf
push
daa
push
gs
push
push
push
ins
pop
mov
sub
xor
inc
jl
add
test
push
mov
aam
lahf
shr
hlt
pop
(bad)
add
push
jle
jg
jl
xor
ins
lahf
in
aas
push
push
cmp
add
sbb
push
pop
(bad)
add
daa
jae
xchg
xchg
popf
and
mov
mov
in
fs
push
fld
sahf
dec
push
nop
mov
pop
sub
cmps
mov
stos
push
ins
(bad)
loope
sahf
xor
mov
in
xor
cmp
add
mov
iret
cwde
int3
int3
push
dec
retf
adc
nop
aaa
fst
loopne
ret
fild
pusha
cmc
sub
pop
in
ficom
cli
dec
fadd
mov
or
cdq
lds
lea
xor
add
sub
jle
stos
mov
push
jge
int3
jle
add
jl
movs
fmul
sub
rcl
mov
pop
scas
cmp
xchg
int
popa
dec
stos
sub
xchg
aad
mov
fisttp
(bad)
xchg
push
add
xor
test
adc
sub
push
nop
cdq
sbb
pop
mov
sbb
pop
xor
in
xor
int3
mov
popa
lods
aad
push
sub
and
stc
loopne
xor
mov
inc
or
scas
imul
xor
(bad)
xor
bound
sbb
aas
leave
mov
mov
jle
std
and
inc
daa
push
mov
jnp
sbb
sub
(bad)
mov
inc
mov
mov
or
hlt
js
xlat
push
shr
popa
pop
inc
adc
into
stos
push
jle
and
rcr
mov
add
outs
mov
adc
addr16
adc
and
cmp
pop
movs
popa
arpl
and
mov
aaa
lods
(bad)
frstpm(287
fisub
push
add
jmp
pop
xor
movs
adc
inc
sub
jecxz
sbb
mov
push
aad
dec
jge
and
add
cli
div
iret
push
(bad)
std
les
push
arpl
pushf
sub
pusha
adc
pop
cmp
inc
dec
cmp
push
retf
adc
pop
pop
ins
sbb
out
mov
adc
inc
scas
mov
rol
push
test
sbb
lods
xor
jns
test
leave
xchg
fwait
pusha
in
enter
push
fdivp
xor
jmp
xchg
xchg
push
fwait
cmp
add
(bad)
rcl
pop
push
inc
fs
repnz
adc
pop
push
ja
mov
shl
sub
das
(bad)
cmp
xor
xchg
addr16
xor
(bad)
jmp
scas
and
sbb
cld
mov
xor
call
aad
(bad)
pop
push
fisub
sub
sub
push
mov
cmp
aaa
jns
jecxz
retf
neg
sub
out
fist
cmp
arpl
nop
inc
jmp
or
inc
mov
xchg
dec
push
retf
repz
jecxz
ret
(bad)
(bad)
push
add
and
jnp
(bad)
cmc
lea
or
ja
arpl
iret
dec
add
int3
cli
sub
and
pop
lahf
push
int
and
mov
jmp
jmp
dec
jb
add
(bad)
jmp
mov
push
pop
adc
ja
cmps
aam
fcom
jb
and
and
pop
test
push
mov
cli
mov
xor
mov
pop
pop
push
adc
push
xchg
dec
scas
push
bound
shl
ins
shr
inc
and
adc
daa
cwde
or
test
jge
jne
or
adc
arpl
xor
jl
pop
and
jp
mov
pop
mov
leave
sbb
ret
(bad)
sbb
retf
int
push
mov
fstp
out
pop
adc
or
inc
adc
test
rol
cmp
fwait
jne
(bad)
xlat
int
out
leave
push
cld
add
xchg
cwde
push
int3
jp
jae
test
es
mov
inc
xchg
xchg
sbb
push
push
push
fs
xor
cld
push
imul
(bad)
mov
and
push
pop
lahf
cli
and
fs
push
mov
je
and
mov
inc
push
jne
dec
mov
xor
sbb
(bad)
lods
jmp
pop
fstp
fbstp
jnp
adc
sub
in
nop
nop
cmp
xchg
cmc
arpl
pop
jno
mov
out
sub
int
push
dec
pop
xchg
call
cmp
push
inc
cmp
fsub
xchg
pop
and
loope
jo
in
iret
inc
push
loopne
out
ds
test
lods
(bad)
(bad)
or
xchg
ds
jne
mov
jmp
jnp
shr
push
sahf
jl
inc
aaa
shr
mov
fnstenv
and
lods
ret
pop
xor
outs
pusha
cmp
ja
repz
mov
mov
adc
int3
adc
sub
cmp
inc
cmp
aad
jmp
out
jl
mov
pop
pop
out
dec
pop
hlt
scas
pop
sub
sub
ret
int3
mov
and
rcr
xchg
in
add
call
dec
and
sti
cmps
push
hlt
mov
xchg
inc
xchg
movs
pusha
mov
pop
cmp
hlt
test
push
pop
pop
out
fdiv
sub
jmp
popf
sub
cmps
xor
int
mov
cmp
adc
xor
jb
popw
push
stos
or
retf
arpl
or
outs
sbb
in
jge
push
lock
fimul
mov
test
push
cmp
adc
in
hlt
pop
stc
imul
xchg
lds
mov
rol
loop
int
mov
call
addr16
aas
mov
cmp
popa
aad
sub
imul
dec
inc
lahf
in
mov
dec
xor
movs
cs
mov
jbe
div
cld
mov
aad
dec
pop
cmp
pop
dec
add
inc
xchg
test
pop
xor
ja
sahf
ins
mov
ud0
xor
js
xchg
fnstsw
and
ds
sub
cmp
repz
test
sbb
pop
mov
push
sub
jmp
pop
mov
loopne
cdq
jmp
jnp
(bad)
sbb
sbb
sub
inc
ja
pusha
mov
(bad)
mov
fcomp
inc
popf
out
retf
sub
aam
outs
adc
mov
shl
jns
push
test
repnz
stos
(bad)
bound
jbe
sub
add
fdiv
cmps
push
push
les
lock
leave
iret
and
or
dec
cmc
movs
in
or
sbb
js
dec
movs
loop
mov
push
das
sub
sub
push
out
pop
mov
xchg
mov
xchg
fimul
mov
dec
dec
pop
push
outs
push
mov
xchg
fadd
sbb
mov
jae
(bad)
xor
(bad)
fimul
xchg
xor
cmp
pop
shr
dec
ss
jmp
cld
loop
sub
out
dec
jae
clc
add
cmp
pmulhw
add
mov
cmp
dec
jg
fcmovne
adc
in
xchg
shl
push
ret
popf
mov
mov
scas
in
pop
push
and
cld
push
adc
inc
outs
jns
xchg
push
cmp
ss
loope
sub
jmp
mov
or
out
shr
icebp
jp
test
push
mov
xchg
push
or
aaa
pop
xor
mov
stos
sbb
ins
mov
adc
jmp
pop
mov
addr16
mov
scas
push
mov
xor
pop
int3
cli
div
dec
shl
bound
xchg
cmp
gs
jo
jo
cmp
or
jp
ins
imul
jmp
mov
cld
ret
mov
ja
adc
les
mov
fild
cmps
fisub
mov
aas
cmps
ror
test
jnp
mov
ins
js
ret
jbe
sbb
ret
dec
cmps
mov
push
dec
scas
jge
jp
fimul
mov
les
aam
mov
sub
test
ja
cmp
xor
sbb
push
mov
arpl
dec
ins
das
js
mov
push
jp
push
in
popf
in
mov
xor
clc
mov
lock
jecxz
outs
and
jbe
mov
jbe
in
pop
je
gs
mov
or
cwde
ja
mov
fild
adc
repnz
sbb
fist
retf
lea
scas
adc
lock
mov
push
test
ror
add
fdivr
mov
jmp
loopne
scas
jo
sbb
test
mov
cmp
cli
(bad)
rcl
jnp
sahf
loope
out
sbb
push
lock
xchg
xchg
jb
push
or
dec
jmp
push
push
shl
mov
mov
out
dec
jo
jno
jle
sub
cmp
xchg
fwait
ss
movs
cwde
push
popf
mov
popa
mov
mov
adc
xchg
jecxz
arpl
adc
mov
inc
push
push
or
push
xor
out
pop
aas
adc
addr16
idiv
bound
xor
daa
dec
inc
adc
sub
dec
ds
ds
jl
retf
jns
out
pop
mov
jns
jmp
inc
push
mov
in
out
mov
sbb
repz
push
aas
pop
sbb
xchg
jnp
pop
lahf
hlt
iret
test
mov
xchg
ror
push
and
scas
cmp
int3
sbb
and
add
out
sar
loopne
out
je
popa
xchg
cmp
int3
cmp
stos
ret
leave
sub
pop
add
xor
mov
nop
mov
cmp
cmp
gs
inc
pop
sahf
mov
in
aad
pop
mov
pop
repz
cmps
out
cmp
dec
jecxz
xchg
push
mov
inc
fcom
sbb
inc
dec
hlt
push
sbb
jbe
std
push
sbb
or
pop
adc
xor
xor
stos
jmp
mov
stos
fsub
jns
or
pop
xchg
mov
pop
add
mov
or
and
xchg
xor
pushf
mov
push
inc
push
fcomip
into
jno
pop
jl
lea
jmp
cmps
cmp
dec
mov
shr
punpcklwd
std
adc
xor
loopne
stc
cwde
adc
push
addr16
sub
repz
jns
inc
mov
jle
iret
int3
stc
ins
shr
cmp
sub
in
xchg
jmp
dec
inc
mov
test
push
shl
push
aaa
sub
pop
(bad)
sub
dec
fist
loop
jae
int3
test
xor
test
push
and
fsubrp
sbb
mov
push
pop
adc
in
lds
repz
mov
add
iret
mov
mov
jo
push
or
push
inc
(bad)
test
iret
jmp
push
int3
dec
or
pop
leave
out
jae
cmp
retf
mov
dec
mov
sar
(bad)
adc
push
push
ins
lock
sbb
mov
push
jge
lea
outs
push
add
stos
clc
pushf
pop
dec
mov
dec
push
lods
dec
rcr
int
(bad)
(bad)
dec
pop
inc
mov
jae
clc
out
push
inc
aad
pop
ret
cld
stos
jb
(bad)
fsub
xchg
xchg
aaa
mov
xchg
mov
fbld
jo
fld
sub
ret
mov
ror
adc
sbb
add
cmp
das
sbb
movs
xchg
out
hlt
loop
push
stos
dec
retf
dec
rcl
mov
mov
jmp
rcl
mov
das
stc
pop
sub
pop
sub
stos
xchg
loop
xchg
push
push
xlat
add
outs
loop
push
call
xor
movs
aam
(bad)
jmp
push
retf
xchg
pop
push
out
xor
adc
adc
push
movs
lea
push
inc
or
jp
cmp
aam
xchg
mov
sbb
dec
js
sub
pop
fidiv
pop
sub
cld
dec
addr16
jmp
leave
cmp
cld
xchg
retf
mov
sbb
popf
jne
push
mov
(bad)
xchg
xchg
adc
loop
adc
xchg
mov
(bad)
dec
lea
sbb
mov
add
inc
jmp
xchg
mov
outs
cmp
jle
sbb
shl
jmp
dec
pop
imul
push
cli
pop
push
inc
out
push
into
mov
xor
test
mov
push
mov
cwde
imul
xchg
into
ins
mov
(bad)
pop
cli
push
lods
scas
neg
nop
(bad)
aam
sbb
or
dec
xchg
cmp
pop
test
movs
out
adc
mov
mov
sbb
in
pop
jno
mov
mov
mov
cwde
or
dec
loope
pop
jno
pop
shl
push
(bad)
aam
mov
fdiv
movs
mov
outs
sub
jo
add
push
adc
test
pop
jnp
inc
ins
mov
jl
inc
pop
(bad)
xchg
dec
les
inc
daa
pop
mov
outs
jle
js
mov
push
or
je
push
sbb
and
dec
stos
ss
xchg
xstore-rng
cmps
sbb
cld
pop
scas
cmp
dec
jo
sbb
mov
fcmovnu
sbb
add
or
test
loope
in
adc
fld
in
clc
sub
mov
jge
xchg
jne
jo
fisubr
or
push
ret
mov
sbb
rcl
adc
or
dec
retf
xor
iret
add
push
imul
inc
xchg
enter
ffreep
mov
add
mov
sbb
xchg
push
aas
cmp
test
pop
xchg
js
jmp
mov
sahf
mov
fwait
popa
call
or
and
add
ror
push
pop
mov
sub
xor
sbb
mov
add
push
in
jns
sub
sbb
dec
cmp
test
add
xchg
test
push
dec
fsub
and
lea
lahf
icebp
adc
cmp
cmp
test
(bad)
jmp
cwde
inc
ret
xchg
push
icebp
cli
jge
inc
bound
xchg
mov
push
add
xchg
ret
imul
repz
adc
stos
push
jmp
rcl
pop
xor
jno
xchg
xor
shl
mul
(bad)
sbb
mov
cmp
jge
mov
push
jmp
test
das
test
inc
push
jl
les
mov
inc
sub
in
or
mov
push
cmp
inc
cmp
inc
jg
inc
retf
jns
xor
lods
fcom
pop
mov
retf
or
add
lahf
sub
push
call
add
std
or
dec
mov
aaa
sbb
jns
inc
xor
xor
dec
lock
mov
lock
rcr
sub
leave
dec
sub
ret
fisub
inc
sbb
mov
es
add
cld
popa
ret
lahf
add
popa
dec
and
popf
out
repnz
mov
daa
test
js
stc
xchg
fadd
retf
sbb
mov
test
loop
dec
or
pop
xchg
ins
add
add
(bad)
sbb
into
shl
cmc
and
jmp
xor
mov
add
cmps
pop
(bad)
xchg
xchg
out
sub
jecxz
inc
(bad)
sti
jno
nop
(bad)
and
mov
std
test
mov
inc
jmp
push
repnz
ja
sbb
jmp
dec
xchg
dec
push
sbb
js
std
int3
sub
jl
push
jne
aaa
in
cmps
rcr
mov
in
enter
mov
jo
mov
hlt
(bad)
push
out
js
jns
or
daa
xchg
stc
add
call
shr
pop
push
or
pop
xchg
xchg
cwde
mov
int3
xchg
shl
add
jg
inc
leave
into
and
or
mov
les
push
cmps
xchg
out
xchg
loope
imul
mov
enter
popa
sbb
or
jg
das
jbe
or
pop
mov
xlat
push
push
mov
mov
cmp
cs
mov
push
push
pop
jne
jne
sbb
xchg
test
fwait
pop
mov
push
or
rcr
fisttp
mov
mov
fucompp
sub
add
push
dec
push
cld
retf
mov
cwde
xchg
btc
pop
xchg
(bad)
mov
jge
aaa
stos
pop
iret
hlt
aam
xchg
mov
mov
pop
stos
es
jecxz
aad
stos
scas
ja
fist
sub
shl
add
retf
push
xchg
pop
movq
jle
mov
clc
pop
sbb
adc
mov
jae
push
scas
mul
xchg
(bad)
ror
mov
in
int3
les
loopne
shr
sbb
and
pop
fisubr
mov
mov
(bad)
repz
xchg
mov
(bad)
nop
adc
fwait
mov
stos
dec
jnp
jbe
ins
jnp
push
inc
xor
xchg
add
and
or
fnsave
movsx
jnp
sub
pop
test
inc
xchg
fild
pop
stos
mov
push
ret
bound
adc
cli
cmp
arpl
(bad)
mov
sbb
jg
mov
(bad)
adc
pop
call
inc
cmc
out
sbb
mov
lods
cmovo
mov
mov
xor
jmp
xchg
(bad)
faddp
cs
jmp
hlt
mov
mov
rol
imul
jae
xor
repz
and
and
(bad)
xchg
sbb
cmps
jecxz
xchg
sub
in
popa
frstor
xchg
movs
and
dec
add
scas
adc
sub
ret
push
movs
cmps
das
xlat
jnp
and
mov
sar
push
and
dec
repz
jo
aas
and
retf
inc
inc
ror
fsub
retf
dec
push
sub
sbb
les
push
xor
imul
push
cmc
dec
or
add
or
cli
mov
push
push
int
jecxz
leave
jecxz
xlat
inc
retf
aad
and
jns
sbb
sbb
(bad)
fnstsw
xchg
pop
dec
adc
pop
sbb
and
adc
mov
movs
retf
and
jae
and
push
pop
and
imul
push
push
jns
retf
outs
pop
jae
rcl
cmp
push
jp
mov
div
scas
mov
ret
hlt
xchg
or
jns
clc
mov
pop
xor
push
pop
js
inc
loopne
sbb
xchg
imul
adc
test
stc
stos
push
jb
push
xor
shr
push
ss
mov
xchg
xchg
cmp
jl
jb
push
dec
(bad)
mov
jnp
dec
lods
sbb
mov
out
add
dec
mov
(bad)
call
sbb
retf
mov
mov
pop
jmp
pop
nop
lods
mov
dec
xor
xchg
xor
xor
hlt
arpl
pop
js
adc
mov
(bad)
sbb
xor
xor
scas
retf
outs
cwde
movs
stos
inc
lods
xlat
in
mov
and
int
stos
fimul
fistp
scas
mov
mov
lds
cmps
adc
or
retf
ficomp
aas
cli
pop
push
dec
dec
and
mov
stos
aad
adc
add
stos
xor
lods
adc
pushf
rcl
mov
push
das
pusha
add
cli
or
jmp
sub
ss
push
and
push
xchg
push
adc
cdq
xchg
jno
sbb
lds
and
shr
stc
and
cmp
leave
cmp
and
rcr
or
fist
cmp
ds
push
inc
outs
pop
fnsave
in
cmc
inc
xchg
cdq
push
es
lods
(bad)
adc
cmc
adc
popf
pop
test
(bad)
test
or
and
test
cld
cmp
loop
cmp
cmc
(bad)
fnstsw
dec
mov
and
or
out
and
adc
call
pop
fdiv
ins
add
push
mov
iret
cmps
adc
rcr
icebp
add
mov
and
lea
data16
outs
shl
mov
cmps
mov
rcr
mov
mov
push
iret
pop
repnz
iret
fs
icebp
hlt
mov
mov
scas
xchg
(bad)
adc
push
add
std
and
dec
cmps
mov
leave
push
mov
and
fistp
loopne
add
(bad)
lock
sahf
aas
mov
sar
out
aaa
jmp
into
push
pop
xor
cmc
mov
mov
sti
mov
pushf
or
mov
xchg
in
or
xchg
jno
aad
stos
add
jg
pop
fst
xchg
in
push
jmp
ja
push
daa
or
stos
(bad)
lds
(bad)
xchg
pop
jne
add
lods
mov
outs
jns
jnp
xchg
fst
lods
iret
push
test
dec
sub
call
dec
sbb
xchg
out
imul
pop
and
jmp
test
(bad)
call
fist
rcr
push
cmc
shl
or
mov
cwde
jae
inc
out
add
leave
rcr
sub
and
sub
cmp
mov
mov
not
std
pop
stc
xor
xor
pop
xor
xor
or
pop
fst
fidivr
(bad)
or
ret
(bad)
out
test
inc
mov
mov
neg
dec
lahf
loope
dec
(bad)
test
push
fsubr
ins
jae
in
pop
cdq
fldcw
fwait
std
adc
stos
mov
fistp
cmp
inc
adc
pop
int3
lahf
and
jo
hlt
fwait
scas
rcl
cmp
popf
xchg
jb
(bad)
jmp
jecxz
and
int
out
inc
mov
movs
jl
pop
mov
ret
rcr
repz
xchg
lock
add
xlat
ret
dec
xor
mov
test
test
stos
push
shr
add
xchg
scas
es
popa
adc
xchg
inc
mov
stc
sbb
adc
inc
rol
add
xchg
pusha
mov
ds
dec
imul
je
jae
inc
mov
xchg
ret
mov
mov
xchg
je
not
jns
stos
cmp
fstp
fwait
sub
out
inc
mov
cmc
test
fstp
imul
push
push
or
nop
inc
(bad)
loopne
imul
sbb
xchg
pop
call
or
gs
dec
pop
and
dec
mov
jno
push
cmps
pusha
pop
in
sti
loope
arpl
out
inc
js
push
fwait
test
mov
jb
ficomp
mov
push
test
push
inc
mov
iret
and
not
mov
dec
(bad)
div
mov
sbb
loope
test
lods
fwait
lahf
fistp
aaa
(bad)
(bad)
adc
out
push
outs
mov
add
dec
iret
and
iret
jl
out
xchg
jns
jne
jb
int
in
mov
xchg
push
repz
sbb
mov
add
mov
mov
jae
repnz
mov
jo
mov
xor
hlt
mov
or
xor
shr
sar
push
mov
je
addr16
push
xchg
scas
lds
xchg
add
int
xor
int
pop
pop
jb
cli
test
mov
lods
nop
(bad)
cld
sub
jecxz
lods
pop
ins
dec
idiv
imul
jl
and
mov
cmp
jb
scas
adc
and
repz
sub
ds
xlat
sbb
sub
xchg
in
mov
repnz
jb
int
adc
or
imul
and
adc
popa
leave
mov
mov
ret
rol
mov
xchg
mov
(bad)
int
(bad)
imul
out
mov
sbb
sti
jmp
jecxz
sbb
push
push
ds
es
sbb
mov
ret
es
bound
iret
xchg
push
mov
mov
aas
jg
shr
pop
leave
add
(bad)
stos
push
loopne
push
std
jno
shl
sti
lock
xchg
and
mov
mov
cld
jmp
push
inc
pop
imul
outs
pop
repnz
loop
(bad)
in
mov
pop
fsub
inc
adc
or
repz
js
or
not
cmp
das
es
jnp
dec
pusha
jp
mov
add
int
je
cmp
jle
loop
jnp
and
mov
jmp
sbb
mov
aas
or
inc
xchg
retf
sub
or
cmp
add
or
cmps
cmp
mov
fidiv
inc
push
jo
push
cld
je
push
loopne
lahf
xor
mov
into
cs
xchg
scas
cwde
sbb
cld
jae
in
iret
mov
push
arpl
mov
mov
ja
es
cmp
es
shl
inc
out
cli
fldcw
adc
mov
add
xchg
adc
cmc
repz
call
add
sbb
or
sti
cld
aam
loop
cwde
jo
jp
inc
jb
pop
mov
repz
cmp
xchg
out
loop
dec
pop
mov
xor
lods
mov
xchg
test
mov
xor
ficomp
shl
loope
cmp
arpl
jg
sub
cdq
or
lds
mov
sub
cmp
mul
mov
push
mov
fwait
movs
adc
test
and
cld
mov
nop
sbb
call
scas
xor
xor
mov
mov
out
push
add
ds
push
dec
in
push
repz
add
retf
jae
out
outs
cmp
cwde
mov
sub
fistp
add
mov
aad
(bad)
loop
jmp
dec
jns
or
xchg
xor
inc
into
inc
rcl
sub
ss
mov
sub
fs
jae
jl
nop
movs
sar
mov
test
adc
xor
sub
pop
add
mov
mov
xchg
leave
adc
aaa
sbb
paddusw
(bad)
dec
leave
pop
add
xor
sbb
mov
fnstenv
mov
ret
ror
iret
mov
mov
sub
repnz
mov
xchg
xchg
xchg
ja
mov
xor
mul
mov
ss
mov
xlat
(bad)
xor
push
adc
add
stos
in
les
jbe
xchg
scas
jmp
aam
cwde
adc
and
sbb
retf
xor
sub
ja
mov
(bad)
add
cmps
ficom
lods
or
fcmovnu
ret
(bad)
add
cmp
dec
or
sahf
cli
xchg
sub
add
adc
cmps
xchg
xchg
mov
add
test
imul
lahf
xor
cmp
and
jg
hlt
cli
int
mov
jns
sub
hlt
jae
call
clc
xchg
jbe
mov
pop
fdiv
push
call
les
xchg
push
dec
mov
dec
mov
mov
retf
xchg
inc
cmp
sti
scas
(bad)
mov
daa
pop
test
cli
sahf
mov
call
add
leave
mov
sbb
cmp
push
xor
scas
test
add
je
sub
leave
outs
push
hlt
and
push
mov
xchg
lds
int
push
sbb
loop
dec
sahf
mov
fld
push
pushf
push
mov
pop
(bad)
adc
inc
pusha
outs
xor
push
push
sti
jnp
repnz
(bad)
pushf
sbb
bound
(bad)
int3
cmps
loopne
cs
cmc
data16
daa
pop
dec
stc
rol
ret
xchg
mov
(bad)
or
shl
repnz
mov
mov
cmp
call
sbb
cld
test
and
out
bound
and
or
ds
xchg
push
(bad)
es
push
retf
xchg
cld
and
xor
(bad)
mov
and
imul
int3
imul
je
push
sub
inc
scas
jle
(bad)
and
cli
jno
shr
mov
push
daa
dec
add
test
sub
mov
cmps
and
mov
movs
xchg
clc
inc
cmp
push
scas
dec
retf
push
mov
adc
mov
std
inc
adc
xchg
mov
clc
mov
inc
fbstp
sbb
inc
inc
cdq
inc
ins
mov
repnz
sbb
mov
shr
cmc
pop
(bad)
cmps
pop
push
fs
xlat
int
jecxz
je
dec
sub
sub
xor
popf
ins
inc
adc
pop
fld
(bad)
mov
adc
fiadd
bound
mov
and
push
mov
repnz
push
jns
outs
jo
push
push
movs
sti
xchg
or
pop
fmul
fisttp
cmps
in
xchg
mov
jge
loopne
push
xchg
int
adc
pop
sub
sbb
daa
outs
rcl
sub
dec
mov
jmp
mov
inc
dec
xor
(bad)
(bad)
mov
data16
bound
cwde
(bad)
jge
jmp
call
fistp
out
dec
adc
jnp
js
dec
jno
lock
adc
repnz
adc
mov
(bad)
sub
ret
inc
inc
push
or
adc
popf
lds
cmp
sti
test
addr16
and
push
scas
iret
xchg
mov
int
lock
std
retf
inc
iret
mov
jae
jmp
dec
mov
mov
add
xor
sub
xchg
xchg
je
and
call
aam
push
mov
imul
push
rcr
dec
hlt
mov
aaa
xchg
pushw
add
je
(bad)
inc
(bad)
sbb
jecxz
cld
fcomp
xor
and
shr
inc
pushf
mov
das
retf
fisttp
dec
dec
cmps
das
repnz
(bad)
adc
pop
push
bound
ds
int
add
xchg
test
aad
aaa
out
and
or
cmp
jae
aas
xlat
cmp
lds
seto
add
xchg
jmp
aas
jle
out
or
adc
les
mov
movs
fs
aaa
ror
repnz
mov
xchg
pusha
mov
lahf
imul
push
pop
mov
mov
pushf
clc
and
mov
test
mov
sbb
hlt
dec
mov
loopne
push
pusha
mov
(bad)
mov
pop
cmp
(bad)
sti
push
outs
adc
mov
int
mov
idiv
ds
pop
jle
and
xchg
xchg
mov
jo
xor
adc
scas
dec
ja
arpl
imul
mov
dec
aam
ror
scas
xor
pop
imul
loope
xor
mov
int
addr16
mov
loop
fdivr
mov
mul
mov
push
in
jp
and
loopne
int3
or
xor
or
adc
loop
sub
push
(bad)
out
and
sbb
jle
icebp
push
or
stc
jnp
sub
leave
enter
push
jp
push
or
call
xchg
ja
and
mov
mov
call
lods
je
push
or
pop
pop
ins
mov
jnp
adc
scas
sbb
ss
ret
dec
or
inc
cmp
popfw
mov
fistp
push
sar
jno
ins
jae
mov
jl
call
mov
sti
xor
in
mov
pop
dec
(bad)
div
mov
adc
movs
cld
push
and
xor
sub
pop
inc
sub
cmp
cmp
scas
lock
mov
pusha
cmp
push
push
out
push
test
mov
fistp
scas
or
mov
pushf
xor
or
dec
dec
cmp
add
aad
sar
out
and
ins
call
mov
daa
pop
test
xor
adc
xor
xor
and
sbb
jle
dec
pxor
jns
js
xchg
mov
jno
es
scas
sbb
stos
iret
sbb
or
out
inc
and
je
imul
mov
or
sub
cmps
push
lods
add
icebp
xchg
repnz
inc
dec
add
cs
mov
(bad)
push
mov
push
mov
pop
outs
gs
ins
movs
mov
inc
sbb
fbstp
repz
es
inc
sbb
push
cmps
rcl
stos
fcmovb
pop
and
inc
enter
and
jns
mov
and
sub
push
cmps
jbe
(bad)
rcl
neg
push
sbb
mov
shr
dec
xor
and
inc
ja
dec
push
adc
popf
lock
cmp
test
int3
stos
cs
dec
arpl
repnz
test
jecxz
test
mov
fst
fistp
mov
xor
push
mov
int
fisub
mov
pop
adc
out
cmp
pop
sbb
or
(bad)
xor
jle
daa
inc
and
(bad)
cli
dec
adc
inc
mov
int
ins
shl
add
test
dec
xor
mov
ja
dec
cmp
xchg
xor
xchg
mov
mov
imul
call
cmps
cmp
or
ret
rol
dec
mov
dec
jmp
mov
adc
push
ret
pop
icebp
mov
xchg
aas
nop
adc
adc
(bad)
mov
(bad)
xor
sub
pop
hlt
mov
push
xlat
rcl
ins
mov
pop
pop
sahf
js
jo
xchg
mov
or
lea
jo
sub
rol
xor
test
movs
test
push
in
cwde
(bad)
cli
aaa
ret
xchg
pop
cmp
(bad)
mov
push
idiv
bound
in
fadd
mov
mov
mov
test
test
jnp
ficom
ss
out
xor
in
ins
xor
std
xor
cmp
sub
xchg
xor
adc
test
gs
jb
mov
or
(bad)
pusha
adc
in
jmp
mov
and
fldenv
scas
xlat
or
cmp
pop
hlt
call
and
mov
xchg
cwde
xor
out
inc
mov
push
fidiv
mov
rcr
inc
jae
fmul
daa
xchg
cli
(bad)
jmp
dec
(bad)
pop
fucomp
in
pop
inc
(bad)
push
out
das
xchg
pop
test
add
cmp
or
pop
data16
push
fmul
and
jmp
xchg
adc
lds
cmp
jae
pop
xchg
pop
bound
sub
jb
add
xchg
popa
cmc
xchg
and
mov
outs
aaa
or
(bad)
rol
mov
mov
mov
jne
sub
pop
pusha
clc
ins
mov
mov
imul
es
and
mov
add
cli
xor
inc
sbb
stc
cmc
add
xor
or
push
cmp
sbb
nop
xchg
adc
adc
les
or
push
jl
rcr
jbe
retf
(bad)
loope
mov
into
pushf
pop
adc
setl
repz
xor
xchg
pop
jg
add
dec
jne
xchg
cwde
sbb
push
jmp
imul
mov
jp
addr16
pusha
jmp
add
das
mov
mov
push
nop
dec
cdq
gs
out
sbb
mov
inc
ret
push
xchg
mov
cmp
pop
mov
jae
aas
neg
mov
enter
sbb
test
xchg
out
cld
es
sahf
ffree
movs
jae
mov
mov
hlt
ja
jmp
add
(bad)
push
(bad)
xor
push
or
stc
mov
idiv
mov
push
rol
sti
arpl
lods
dec
sti
(bad)
es
xchg
xchg
lods
leave
js
ja
jnp
dec
scas
aam
dec
pop
xchg
xlat
or
mov
test
test
xchg
mov
push
xchg
inc
imul
les
hlt
aas
mov
dec
sub
bound
pusha
sbb
jge
jo
cmp
and
ds
sti
out
mov
pop
test
mov
push
enter
mov
faddp
cmp
push
adc
sub
xor
fs
pusha
jbe
fbstp
mov
adc
mov
scas
test
inc
(bad)
aaa
xchg
sub
out
in
outs
cs
rcl
sub
popf
arpl
shl
push
pop
push
mov
ret
repnz
xchg
aaa
enter
jnp
aam
popf
sar
pop
stos
(bad)
out
jo
or
or
lds
jmp
adc
and
lds
int
cdq
mov
nop
add
or
or
mov
dec
jae
int
lahf
dec
(bad)
mov
pushf
and
ins
mul
adc
dec
xlat
lock
jmp
enter
iret
xchg
cmp
cmps
sti
hlt
inc
fcmovnb
loop
inc
mov
dec
dec
adc
mov
movs
mov
push
jns
cli
dec
push
mov
mov
add
call
mov
mov
data16
jle
adc
retf
sub
sahf
pop
inc
or
stos
imul
pop
arpl
mov
retf
ror
loop
in
mov
jmp
stos
cwde
loopne
pop
shr
(bad)
fdivr
mov
fistp
mov
(bad)
in
xor
pop
outs
add
bound
retf
or
scas
stos
xchg
nop
imul
imul
ja
dec
xchg
or
cmp
mov
jmp
je
retf
mov
or
iret
test
sub
inc
mov
add
icebp
jge
sar
call
push
mov
call
imul
(bad)
fiadd
sub
out
or
rcr
pop
jmp
push
dec
jl
in
mov
push
fst
hlt
ret
movs
inc
dec
mov
cld
jmp
dec
les
sub
ror
gs
xchg
je
nop
rcl
pop
add
xlat
mov
loop
cvtpi2ps
cli
mov
fsub
lea
jmp
lds
pop
ret
xchg
push
shl
mov
pop
test
fimul
dec
mov
lds
inc
outs
jecxz
and
gs
mov
lods
sub
pop
cmp
cmp
pop
cmps
jnp
inc
xchg
mov
sti
(bad)
out
repz
loop
ins
icebp
mov
cmp
inc
xor
cmp
push
(bad)
popf
packssdw
fwait
sahf
popa
pop
imul
push
cmp
push
sub
mov
jl
test
or
(bad)
jmp
dec
ds
test
ret
fsub
cmp
lods
ficom
test
xor
ror
push
sbb
dec
scas
dec
ins
scas
cwde
jb
(bad)
xchg
sbb
add
adc
lods
sti
cdq
and
(bad)
mov
cmps
cmc
jne
push
sub
test
xchg
mov
cmp
jae
xchg
in
inc
mov
into
movlps
add
jmp
sbb
sbb
xor
icebp
aad
movs
aad
jnp
and
inc
mov
aam
mov
ror
inc
xor
xlat
aam
iret
or
test
stc
sbb
push
push
jle
ins
movs
iret
outs
jmp
fsubr
mov
icebp
leave
pop
or
ja
arpl
loop
not
or
scas
shl
scas
lahf
mov
adc
xchg
pop
jnp
mov
lock
push
pushf
sub
cld
push
pop
(bad)
cld
lea
push
inc
or
dec
imul
cmps
imul
sub
mov
lods
cmp
or
dec
jne
(bad)
popf
(bad)
imul
enter
(bad)
test
add
dec
jne
cli
xchg
test
(bad)
in
and
sub
cwde
mov
mov
xor
jo
shl
and
outs
scas
add
ins
adc
(bad)
xchg
clc
or
mov
aam
xor
mov
mov
es
popf
test
test
cmps
test
and
xchg
sbb
pop
cwde
pop
adc
fild
jne
inc
fild
ins
or
push
in
(bad)
neg
add
push
mov
lock
push
or
fist
std
dec
xchg
or
scas
movs
rcl
into
xchg
mov
out
scas
xor
fmul
mov
inc
cmc
or
jg
shl
or
cmp
cmp
call
sub
arpl
sti
pop
fldcw
sahf
(bad)
xor
pop
call
daa
and
scas
test
cli
mov
in
push
or
and
stos
stc
call
sub
arpl
out
mov
iret
in
and
lods
aaa
(bad)
mov
pop
push
mov
lea
mov
add
into
pop
jecxz
adc
sbb
repnz
push
or
(bad)
xchg
jns
ds
sub
sub
mov
cmp
add
pop
pop
mov
rcl
cld
mov
(bad)
mov
cmps
mov
jbe
push
pop
call
leave
imul
test
pop
scas
scas
in
xchg
inc
iret
das
ins
rol
mov
sub
adc
in
test
outs
dec
pop
or
mov
mov
sub
call
mov
mov
daa
push
cmovge
in
bound
stos
sar
jb
push
(bad)
xchg
push
in
movs
jmp
iret
add
das
repz
test
jp
repnz
xor
movs
outs
(bad)
push
out
(bad)
je
or
jg
adc
xchg
mov
inc
xlat
popf
or
mov
(bad)
cmc
iret
adc
cs
jecxz
mov
(bad)
cmp
pop
pushf
aas
add
pop
jmp
dec
add
jp
loope
push
mov
scas
jmp
sbb
fnstenv
push
or
jle
push
mov
scas
cdq
in
imul
sbb
jmp
aaa
cwde
out
push
xor
popf
shl
dec
daa
lods
pop
(bad)
push
jae
sub
xor
dec
cmp
dec
shl
fidiv
sub
jp
lea
int
mov
cmp
int
js
push
lahf
and
xchg
cmp
jl
push
and
push
es
fs
push
xchg
imul
cmps
cmp
jb
dec
test
add
mov
in
cmp
xchg
lods
rol
cmp
mov
and
mov
into
pop
or
and
out
cmps
mov
icebp
jae
test
inc
call
and
push
add
je
mov
inc
je
aad
fs
jns
es
pop
iret
mov
sbb
add
rcr
or
test
jl
jle
and
add
sbb
scas
outs
fnsave
xor
add
and
daa
pusha
leave
sbb
fidiv
lods
dec
jmp
jo
pop
jecxz
xchg
out
inc
rol
fs
sahf
ins
aad
ficom
mov
adc
sub
das
(bad)
and
fld
mov
xchg
lods
test
xor
jmp
mov
cmp
jle
xchg
fs
(bad)
ret
push
icebp
add
scas
retf
fsubr
mov
jmp
xchg
and
bound
pop
mov
popf
mov
in
dec
dec
dec
pop
mov
dec
mov
rcl
cmp
cli
push
shr
loope
(bad)
push
and
int
mov
inc
cmps
ret
aad
jmp
mov
sar
fdiv
dec
jge
into
(bad)
fbstp
pop
and
sub
adc
jae
(bad)
jo
retf
or
retf
shl
cmp
imul
ins
or
ins
loope
loop
jmp
(bad)
pop
mov
(bad)
and
mov
retf
xchg
ret
inc
int3
movs
imul
jno
xor
inc
inc
stos
lea
cs
not
dec
pop
lods
out
sub
mov
xor
lods
jne
loop
js
xor
mov
mov
(bad)
sbb
or
mov
aam
mov
sahf
fcomp
inc
shl
jnp
inc
cli
xchg
xor
mov
mov
cmp
jb
aad
sub
fistp
(bad)
lods
cld
xchg
mov
mov
(bad)
mov
dec
push
hlt
adc
fs
push
adc
push
loop
jecxz
vpmacssdql
xor
push
int
es
les
hlt
xor
dec
in
std
dec
shr
cmps
sub
adc
shr
sub
inc
cmc
inc
push
sub
add
lds
mov
jp
sub
jb
jecxz
out
add
pop
(bad)
in
mov
repnz
pop
test
sar
pop
lods
iret
aam
out
stc
(bad)
ins
(bad)
iret
aam
jg
or
jns
sbb
std
dec
push
pop
mov
jbe
adc
sub
ror
fmul
ffreep
adc
sbb
pushf
dec
cld
xor
mov
into
and
test
dec
mov
or
enter
xchg
sbb
scas
(bad)
fstp
movs
movs
xor
shl
and
test
push
pop
dec
push
dec
dec
jbe
adc
mov
lds
dec
movs
sub
pop
mov
(bad)
pushf
ins
mov
pop
popf
or
movs
inc
sbb
jbe
rol
xchg
cmps
cmp
addr16
mov
retf
add
dec
fmulp
push
cli
xchg
push
push
mov
xchg
cmps
clc
inc
xor
and
jb
push
cmp
dec
mov
stos
lods
les
out
cwde
add
pop
pop
mov
xchg
cwde
jo
pop
add
cli
imul
das
fwait
or
ret
outs
ja
jmp
ficomp
inc
jl
scas
imul
inc
(bad)
int
pop
or
pop
sbb
mov
push
inc
scas
xor
sbb
push
dec
xor
rol
call
lahf
cmp
shr
push
je
or
add
or
test
pop
fild
sbb
idiv
fst
cs
dec
out
dec
xor
out
add
call
shl
xor
les
cdq
cld
mov
loope
aam
sub
cld
gs
mov
adc
inc
dec
das
jl
xchg
push
cmp
shl
mov
mov
dec
adc
retf
sbb
daa
mov
das
inc
out
mov
aaa
adc
sub
cmp
and
add
xor
jne
dec
(bad)
mov
jg
lods
ins
adc
cmp
mov
dec
adc
jmp
leave
or
push
dec
retf
inc
push
je
pop
push
inc
popf
sahf
ret
sub
aas
les
sti
sar
dec
jno
sub
or
push
cdq
sbb
or
push
rcl
outs
mov
sub
test
jle
dec
fst
rol
cli
cmc
(bad)
sti
cdq
stos
or
adc
ss
push
mov
mov
push
out
fwait
or
xlat
loope
mov
jmp
adc
or
ficom
mov
sbb
xchg
xor
ins
pusha
mov
neg
inc
outs
cdq
lock
aas
rcl
adc
jne
pop
in
jo
popf
sar
ja
pusha
js
out
pop
inc
jne
jno
push
mov
out
test
cmp
test
aas
aaa
mov
xor
dec
sahf
sbb
mov
cmp
fist
div
das
sbb
ret
xor
fcmovnb
xor
int3
sbb
data16
aaa
xchg
cmps
aas
jg
sub
dec
fwait
adc
push
mov
xchg
mov
lods
movs
xlat
sub
cmps
bound
push
fstp
pop
dec
pop
repz
sbb
(bad)
jo
rol
jne
test
nop
stos
loop
xor
je
add
std
loop
loopne
adc
movs
cmp
jae
sbb
fs
push
idiv
adc
pop
and
mov
mov
pop
mov
mov
into
iret
jge
(bad)
adc
mov
(bad)
mov
sar
mov
out
jb
jg
mov
mov
lea
popa
xchg
pushf
loopne
movs
in
cli
stos
jecxz
cli
push
sahf
sbb
sub
cmp
leave
push
push
(bad)
ja
pop
(bad)
xor
and
out
mov
fidiv
sbb
test
sar
mov
clc
sub
jl
jle
sbb
cmps
sbb
add
sbb
call
std
loopne
sbb
sbb
shl
jb
fcom
xor
retf
mov
cs
leave
push
ret
sbb
and
dec
and
sbb
(bad)
jmp
pop
popa
cli
cmp
mov
(bad)
out
or
add
shl
sub
loop
cmp
add
ds
xchg
inc
xor
loop
sbb
mov
adc
dec
fist
inc
loope
pop
cmps
dec
jne
push
call
xor
push
xor
mov
ds
loope
cmp
xchg
ins
inc
pop
les
call
cmc
mov
xor
pop
fsubrp
mov
test
pusha
in
pop
mov
and
popa
or
mov
sbb
adc
pop
hlt
mov
aas
sub
mov
adc
ins
out
rol
arpl
jg
cwde
in
cmp
add
fwait
lds
fisttp
push
mov
mov
test
mov
or
addr16
cwde
or
xlat
lock
jl
mov
andps
xchg
ret
icebp
(bad)
pop
pop
xchg
jecxz
cmp
es
inc
scas
jge
fistp
xor
enter
call
mov
gs
pop
inc
sbb
inc
and
fld
xchg
inc
leave
xor
cmp
jno
movs
cld
pop
fcom
jmp
out
popa
cli
push
cmps
rol
std
aad
dec
mov
ins
gs
adc
or
aaa
pop
push
sahf
call
adc
jbe
outs
dec
cmps
add
cs
cmp
jmp
mov
loope
lea
in
sbb
xor
aam
mov
push
dec
jl
shr
shl
jmp
xor
out
ja
int3
in
push
data16
punpckhdq
pop
in
movs
in
movs
int
jnp
sbb
pop
inc
clc
shl
ins
adc
popf
push
ins
pop
sti
push
jge
call
test
push
scas
mov
mov
add
cmp
pop
add
outs
sub
push
iret
shr
push
out
loop
xor
jmp
add
add
cld
push
xor
or
fld
es
pop
xchg
jae
push
dec
and
icebp
fisub
fstp
mov
and
add
fcmovbe
inc
in
ja
adc
stc
pop
dec
fisttp
and
pop
xchg
xchg
call
pop
cmc
sub
pushf
in
iret
pop
jg
pop
inc
sub
sti
fnsave
pop
loopne
shr
push
aad
ror
dec
or
lea
pop
std
jnp
movs
sub
mov
xor
es
jns
aaa
imul
outs
mov
cs
aad
or
push
arpl
inc
mov
in
add
imul
lods
pop
xchg
scas
mov
stos
bound
jae
shl
and
pop
and
adc
and
leave
pop
xor
ins
sub
push
fs
push
jno
cdq
stos
pushf
bound
pop
xchg
mov
dec
aaa
add
xor
pop
xchg
xor
mov
or
les
mov
stos
dec
pushf
retf
sub
jge
pop
lock
(bad)
push
jp
cdq
inc
cdq
(bad)
and
sub
pop
sub
add
test
lahf
or
in
std
aaa
adc
adc
mov
mov
push
add
sub
inc
add
(bad)
dec
mov
lock
adc
in
iret
aaa
mov
int3
mov
push
pusha
stc
fild
shl
cmp
ins
jb
mov
mov
mov
sub
stos
sbb
pop
pop
iret
xor
lahf
mov
mov
std
xchg
inc
fwait
cwde
push
sahf
adc
lods
sti
sub
imul
(bad)
jo
(bad)
sbb
or
mov
out
add
call
mov
fwait
mov
cmp
xchg
out
movs
inc
adc
out
(bad)
fcomi
sbb
fcmovu
mov
jle
jg
pop
push
mov
pop
call
fisttp
fucomip
xlat
test
mov
int
lods
sti
nop
or
jb
cdq
ins
jb
repnz
imul
mov
or
pop
sti
dec
add
inc
test
or
sahf
adc
(bad)
cmps
int
mov
xchg
and
sbb
mov
add
sti
xor
out
inc
and
push
mov
(bad)
fcmovnb
push
test
lds
xlat
movs
(bad)
jg
mov
ins
xchg
xchg
add
sahf
cmp
inc
int3
jge
push
pop
pop
out
mov
jecxz
inc
mov
xchg
popf
mov
retf
jbe
ss
push
sub
and
retf
or
push
jns
ret
xchg
jl
inc
repz
pop
psubusb
mov
out
sub
add
lods
call
xor
popa
mov
cmps
shl
xchg
nop
jne
lahf
add
pop
mov
mov
lods
add
sub
ss
loope
or
shl
add
pop
mov
push
push
mov
adc
gs
inc
enter
mov
jns
outs
inc
popa
push
aaa
scas
popf
inc
popa
adc
(bad)
mov
in
jno
jns
sbb
ror
idiv
jge
jle
neg
xchg
dec
sub
xchg
and
in
mov
pop
add
lahf
add
pop
mov
inc
jae
mov
pop
mov
mov
stos
shl
dec
(bad)
xchg
jno
adc
(bad)
mov
mov
pop
aam
xor
ficomp
pop
sub
in
iret
repnz
icebp
cmps
cmp
cmps
xor
cmc
bound
lahf
std
sahf
in
lods
fimul
fs
stc
mov
pop
btr
jnp
push
enter
adc
mov
not
adc
adc
xchg
shl
push
adc
add
arpl
push
sbb
and
retf
shl
lea
call
push
das
aad
test
div
xor
or
loopne
push
push
adc
push
push
inc
xchg
inc
mov
in
sbb
icebp
data16
sbb
dec
stos
sub
sbb
pop
xchg
dec
(bad)
pop
sbb
aad
xor
enter
les
cmp
imul
ret
cmp
iret
adc
stos
xor
cmp
jl
scas
cmp
xor
popa
jle
cmp
paddw
ret
mov
retf
aad
movs
sti
loop
pop
cmp
fistp
in
or
push
push
push
dec
and
mov
pop
(bad)
sub
cdq
(bad)
push
add
xor
add
mov
mov
sub
inc
inc
pushf
in
mov
mov
ret
mov
stos
les
out
movs
mov
cmps
jo
aam
scas
xlat
test
cmp
xor
add
test
mov
js
mov
out
clc
or
mov
xchg
(bad)
repz
push
stc
pop
pop
in
adc
jb
jecxz
push
scas
dec
mov
inc
push
rcr
movs
and
aaa
popf
mov
aas
mov
inc
leave
scas
mov
xchg
xor
jmp
sub
icebp
lea
mov
adc
or
popa
fnstcw
mov
or
out
test
add
pushf
xor
imul
inc
jge
mov
mov
out
push
in
add
cmp
jnp
icebp
data16
add
mov
iret
jmp
or
adc
(bad)
push
test
std
daa
mov
or
jb
xor
or
and
sahf
sub
pop
lahf
or
jecxz
inc
jb
pop
pop
sbb
xor
jge
ror
lods
jge
repnz
mov
repz
in
jmp
scas
xchg
pop
stc
nop
dec
das
bound
not
push
js
fmul
fsubr
cmp
xchg
mov
lods
xor
rol
aas
test
retf
inc
stc
in
sub
test
sub
ss
push
add
pop
jmp
daa
jno
and
mov
cmps
and
or
and
retf
cli
nop
call
or
sbb
pop
lods
pop
jnp
clc
shr
jmp
xor
pop
popf
xlat
into
sbb
in
and
out
pop
int3
js
das
jo
pop
xchg
pop
nop
or
(bad)
enter
xchg
popf
lea
mov
lds
mov
inc
cmp
or
es
lods
inc
pop
xchg
inc
(bad)
xchg
adc
and
popa
jg
adc
mov
in
or
aam
inc
rol
das
movs
push
mov
inc
add
sub
fs
add
mov
mov
push
dec
test
mov
cmp
bound
push
test
push
sbb
mov
out
inc
push
sti
cmp
inc
jmp
cwde
push
dec
je
add
jge
mov
xor
dec
in
xor
sahf
jbe
mov
add
push
xchg
sahf
inc
mov
js
in
lea
fld
add
repz
mov
adc
jg
mov
es
jg
scas
outs
push
pusha
je
inc
jg
pop
mov
fsubp
mov
jle
dec
and
sub
push
mov
mov
loop
je
lahf
sbb
cmp
xchg
movs
(bad)
pop
sbb
xchg
aas
mov
fcomp
sbb
jnp
out
ss
dec
cmp
or
ret
xor
sahf
push
call
jl
mov
push
fsub
and
adc
in
xor
mov
in
shl
jecxz
jb
dec
repz
stos
mov
cmc
push
lods
dec
sbb
jae
add
pop
or
rcr
lock
push
xchg
scas
pop
test
dec
adc
push
mov
inc
adc
out
cld
in
jno
inc
fnstsw
lahf
popa
popa
or
add
les
inc
movs
inc
imul
aas
fild
and
cmp
xchg
add
hlt
js
icebp
shl
jno
retf
jp
mov
jae
jae
call
or
lods
add
cmp
pop
retf
outs
retf
bound
ret
aad
mov
adc
mov
or
adc
sbb
addr16
xchg
cdq
(bad)
aaa
imul
lahf
sub
shl
pop
inc
sbb
push
xchg
inc
xchg
and
fld
sbb
lea
movs
sbb
xchg
sbb
and
pop
clc
push
or
xlat
pop
mov
les
jnp
adc
jne
cdq
and
fwait
dec
(bad)
lds
push
in
call
sbb
mov
mov
movzx
adc
ja
mov
mul
lods
xchg
test
out
jg
popf
or
push
xchg
shl
xor
mov
mov
push
rol
jmp
pop
rcr
in
sub
cmp
rol
mov
out
mov
cmp
sub
mov
fwait
xor
dec
sub
jns
and
jno
loopne
jbe
mov
loopne
cmps
pop
cwde
sahf
cmp
fstp
jecxz
jno
pop
test
dec
popa
inc
test
ins
sub
or
mov
lods
je
xor
cmp
sub
aam
ss
fdiv
add
enter
outs
je
or
push
adc
dec
push
jge
mov
dec
adc
stos
lods
inc
jnp
mov
mov
call
adc
std
inc
xchg
pop
adc
pop
pop
ja
fstp
xor
lods
fsubr
push
jno
fadd
sub
cmp
mov
pop
xchg
call
adc
fistp
push
push
xor
xchg
dec
cmp
repnz
pop
adc
jge
lods
aaa
and
fcmovnu
inc
ja
or
mov
mov
ret
jecxz
cmp
pusha
jl
(bad)
xchg
movs
lods
dec
nop
not
jle
(bad)
imul
aas
es
arpl
jl
dec
mov
xchg
pop
inc
sub
jb
inc
neg
sub
push
dec
jbe
lds
add
mov
test
sub
xchg
dec
dec
rcl
daa
pop
dec
test
mov
pop
jg
push
xor
jp
pop
cmp
lods
lock
cld
push
xchg
rcr
loop
loope
xchg
les
jns
mov
shl
stos
in
repz
mov
imul
popf
xchg
pop
imul
daa
sbb
dec
int
add
js
dec
stc
nop
test
sub
jle
push
xor
and
xchg
movs
out
and
push
neg
ins
pop
lahf
das
mov
call
(bad)
mov
lods
mov
fsubr
inc
xor
push
lock
push
fs
xchg
xor
push
(bad)
jle
repnz
and
retf
push
outs
dec
adc
adc
icebp
sub
push
pop
lods
push
iret
imul
dec
cdq
pop
add
mov
lds
cmp
inc
cmc
les
out
jns
push
icebp
sahf
xor
jns
daa
rol
std
and
mov
test
js
adc
push
retf
pop
add
shr
adc
dec
push
ss
imul
adc
mov
cmp
in
add
jge
adc
mov
into
mov
pop
dec
call
bnd
and
mov
shl
adc
daa
test
pop
adc
or
mov
pop
dec
pop
int
jmp
cmc
jp
add
rcl
pop
pop
mov
add
adc
sub
pop
neg
adc
test
cld
adc
mov
pusha
clc
(bad)
mov
movs
loope
mov
xchg
cmp
ins
dec
shl
cmp
cwde
aam
test
neg
cdq
push
adc
adc
or
popa
cmp
test
add
ins
sbb
mov
mov
daa
cwde
call
xchg
and
sub
cmp
cmp
in
test
ds
dec
repnz
push
inc
pop
test
sahf
dec
ss
in
cs
mov
loope
cmp
aas
fmul
std
mov
shl
sar
mov
cwde
pop
xchg
dec
pop
xor
lods
or
mov
into
daa
in
xchg
cmps
cmovle
data16
(bad)
mov
xor
and
int3
mov
sahf
mov
sbb
pop
test
pop
call
dec
cmps
neg
pop
inc
mov
arpl
push
sub
int
mov
dec
mov
pop
or
jg
js
add
push
mov
ja
jmp
gs
jge
(bad)
mul
ficomp
dec
add
imul
cmps
call
sar
test
loope
mov
fisttp
fs
in
push
xor
addr16
bound
out
jae
ins
rcl
outs
jge
pop
push
mov
cmps
mov
xlat
js
mov
sahf
cmp
fisub
push
aaa
adc
fs
jb
cmc
bound
adc
scas
xor
out
inc
fsubr
mov
movs
std
jo
and
aaa
lahf
mov
pushf
xchg
push
cdq
test
test
pusha
dec
stc
repnz
cmp
add
scas
fwait
xor
xlat
dec
out
scas
mov
ja
mov
sub
in
movs
mov
daa
xor
cmps
and
sbb
and
jg
mov
sub
inc
sub
imul
fsub
adc
iret
inc
loop
dec
push
cmp
and
mov
cld
push
shr
retf
std
adc
pusha
cld
xor
jecxz
mov
pop
inc
out
cmp
dec
jnp
movs
mov
mov
cmovl
in
dec
sbb
and
inc
cmps
stc
scas
xlat
popf
loop
lods
xor
addr16
lock
pop
pop
push
ret
push
mov
ror
(bad)
adc
addr16
jno
inc
test
jl
int
test
sub
fistp
add
(bad)
ror
aam
xor
xor
daa
(bad)
iret
int3
repz
jmp
icebp
dec
das
sbb
sub
inc
jns
xchg
xor
pop
ret
inc
imul
(bad)
addr16
cs
cmp
xchg
sbb
int3
or
inc
xchg
mov
mov
mov
dec
dec
xor
cmp
dec
sbb
rcr
cs
xor
pop
push
push
mov
in
jge
lods
sub
inc
je
add
xlat
jp
mov
jp
sub
xor
(bad)
jecxz
test
mov
pop
cmp
and
xabort
mov
push
mov
mov
mov
inc
fistp
xor
out
xchg
test
pushf
lods
dec
adc
mov
jmp
pop
scas
push
sahf
lock
push
add
push
push
jg
xor
es
gs
jge
out
push
fxch
std
daa
adc
or
gs
add
mov
ror
loop
stc
mov
not
and
or
jl
inc
sub
xchg
inc
les
inc
push
mov
lods
pop
adc
add
aad
xor
div
(bad)
fdiv
jnp
add
hlt
(bad)
loopne
push
dec
repz
arpl
xchg
jnp
pop
mov
call
xor
mov
mov
repz
jo
push
add
cmp
mov
xchg
in
xor
add
ret
or
rcl
xchg
out
or
xchg
shr
clc
add
test
cmp
aam
cmc
dec
scas
fwait
subps
inc
in
mov
jecxz
fidivr
dec
cmp
sbb
xlat
jge
push
mov
test
frstor
xchg
add
xchg
aam
lock
or
fidivr
je
sbb
cld
ret
sbb
pop
inc
push
ffreep
sub
sub
xor
inc
pop
call
out
pop
xchg
out
rol
push
cs
js
and
mov
sbb
sub
jo
popf
(bad)
push
stc
pop
ja
ret
inc
out
out
mov
and
xor
or
cmp
mov
mov
pop
icebp
sti
ins
cmp
and
test
bound
aaa
add
cmp
dec
xchg
daa
ja
sbb
sub
sti
sbb
lds
(bad)
imul
push
pop
cmp
dec
pusha
enter
cmp
shl
test
sub
jae
bnd
jecxz
loop
pop
add
sbb
das
call
jmp
inc
bswap
push
xchg
jg
jo
push
aaa
sbb
retf
(bad)
pop
(bad)
aam
adc
sbb
xor
push
outs
loope
jbe
sti
mov
jmp
test
push
push
cmp
out
push
sub
ret
mov
dec
vmovsd
dec
pop
or
lea
retf
cmp
adc
push
xor
int
addr16
popa
out
stc
or
xlat
fcmovbe
jmp
fdivr
mov
aam
dec
iret
jge
xchg
(bad)
(bad)
xchg
std
or
retf
sub
cmp
adc
div
repz
push
sub
mov
je
jmp
ins
lahf
jg
xchg
mov
jmp
or
cmps
sbb
push
sbb
cmp
push
dec
arpl
jne
mov
out
ins
sub
add
mov
sahf
add
ds
push
adc
test
xor
adc
pop
sbb
aaa
jmp
movs
push
call
pop
push
mov
cli
adc
aam
das
mov
jno
and
adc
dec
sub
mov
mov
mul
jmp
(bad)
xlat
js
int3
sub
xor
pusha
call
lods
lods
pushf
mov
and
add
push
and
outs
sahf
adc
fsubp
xlat
mov
mov
jb
inc
dec
push
int3
mov
fwait
test
pop
pop
dec
jge
add
adc
or
push
and
aad
sbb
std
retf
add
pop
xlat
jp
int3
cdq
ins
dec
xor
mov
push
dec
or
into
sbb
retf
clc
test
push
enter
add
fild
mov
cld
enter
dec
mov
cdq
es
iret
adc
mov
mov
cmovg
jge
mov
xchg
adc
out
out
dec
inc
js
in
dec
jne
jmp
xchg
sbb
or
mov
push
dec
out
xor
add
mov
cs
das
mov
sti
mov
or
sub
loopne
inc
lods
cli
repnz
jmp
stos
sub
ins
data16
xchg
sub
enter
fwait
xchg
jg
fstp
or
inc
leave
shl
sbb
sbb
pop
addr16
div
jne
std
xor
sub
cmp
pop
xchg
mov
pop
push
movs
and
jmp
inc
inc
jg
stc
pusha
jo
lock
xchg
into
jno
sbb
cmp
and
fimul
loop
push
fdivr
neg
or
jae
fwait
pop
adc
mov
and
xchg
sahf
out
imul
fisttp
aam
nop
adc
push
daa
and
outs
mov
sbb
arpl
stos
out
jnp
pop
test
out
add
mov
sub
shl
pop
ret
repz
pop
std
xor
retf
dec
aam
and
cmp
repz
outs
inc
loope
leave
add
mov
mov
fimul
ins
retf
ror
push
ror
stc
out
jle
outs
sbb
ds
(bad)
jbe
mov
xchg
xor
imul
out
into
in
gs
lds
test
mov
fsubr
cmps
addr16
xor
xchg
cli
test
xor
mov
ss
sub
aas
sbb
dec
dec
mov
es
jns
inc
jo
jmp
test
mov
mov
dec
push
arpl
fcomip
fist
stos
pop
test
movs
xchg
hlt
mov
jge
push
in
test
sbb
sub
fisubr
call
xor
adc
mov
jns
cmp
inc
xchg
jns
and
rcl
cmps
scas
add
push
add
xor
ror
int
sar
popa
(bad)
cmp
enter
sar
xchg
sar
push
fiadd
(bad)
lock
dec
push
fadd
xor
outs
pop
xor
call
sub
aaa
in
lods
adc
jmp
js
xchg
adc
out
js
and
pop
iret
popa
popf
movs
call
xor
push
(bad)
cmp
jno
lahf
ror
inc
fild
sub
cmc
loopne
push
cmc
ja
pop
lods
dec
fsubrp
rol
jmp
retf
xchg
mov
fbld
sti
imul
xlat
(bad)
movs
xchg
inc
cmp
jge
cdq
fwait
push
jmp
movs
push
push
mov
adc
mov
adc
stc
int3
mov
popa
sub
popa
or
adc
mov
push
addr16
inc
sub
mov
int
xchg
les
cli
(bad)
bnd
jne
mov
jb
mov
push
inc
dec
sub
jae
cmp
arpl
retf
fs
int
retf
sbb
cmp
icebp
cmp
dec
fbld
mov
(bad)
jl
push
enter
lea
mov
mov
sub
loope
adc
mov
pop
mov
mov
pop
enter
ds
je
or
pop
sub
retf
(bad)
(bad)
push
in
sub
jp
loopne
xor
in
pop
lock
xor
jmp
xlat
sub
sbb
fnstsw
inc
nop
xor
inc
and
mov
pusha
stc
ss
leave
not
xchg
jae
(bad)
std
shl
push
ins
aaa
mov
repz
fldcw
sar
icebp
stos
(bad)
scas
mov
dec
ds
mov
sub
xor
jge
lss
dec
stc
ja
mov
loope
cwde
jne
mov
jp
in
(bad)
into
add
aaa
or
lock
imul
icebp
xor
mov
ja
jns
(bad)
ins
movs
mov
mov
rcl
xchg
push
in
(bad)
mov
and
leave
loopne
push
cmc
cmp
(bad)
pop
pop
or
mov
aaa
push
push
sub
and
fs
ret
adc
imul
daa
inc
dec
push
sbb
cmp
pop
mov
outs
mov
fistp
hlt
dec
fsubr
js
jb
outs
mov
adc
dec
loopne
mov
dec
fisttp
movs
mov
sub
stos
sub
pop
cmp
xchg
fld
xchg
cmp
push
in
push
sbb
mov
in
(bad)
pop
mov
jb
ja
sbb
jmp
adc
xor
loopne
or
push
iret
cmc
cmps
pop
jo
cld
and
and
fistp
cmps
data16
jne
ficomp
repnz
retf
xlat
fcmovu
mov
dec
ret
or
cmp
rol
test
jnp
pop
loopne
or
rcr
xchg
bound
cmps
je
adc
(bad)
dec
std
xchg
cwde
repnz
cwde
int3
or
pop
sar
xlat
xor
in
cmp
mov
(bad)
mov
pop
adc
inc
xor
es
sub
stos
jmp
call
or
test
pop
call
mov
rcl
dec
(bad)
in
cwde
and
jne
xlat
call
popf
xchg
fist
and
out
mov
add
xchg
add
jmp
mov
js
and
xor
into
in
xor
inc
sub
out
or
out
fwait
out
aam
or
xor
xchg
xor
mov
std
iret
xchg
jmp
push
mov
adc
(bad)
(bad)
jl
mov
into
retf
lods
pop
shl
jmp
mov
jb
and
int3
mov
adc
mov
lds
push
shl
pop
add
mov
shl
inc
xor
inc
mov
xor
xor
push
aam
fdivr
jmp
bound
aaa
call
jle
(bad)
out
or
cmps
dec
lds
ret
imul
adc
pop
sub
sbb
jne
ss
or
pushf
push
jns
add
jmp
ins
pop
cdq
(bad)
ret
mov
je
jl
dec
cmp
cmp
push
adc
fs
pop
hlt
cdq
arpl
sub
out
popf
call
xchg
mov
jb
nop
icebp
mov
and
lods
inc
sbb
add
aam
ins
les
xor
cmp
dec
stos
xor
cmp
push
and
es
repz
enter
cmp
cmps
dec
out
push
inc
push
mov
pop
rcl
aaa
push
movs
cmc
lods
movs
out
fmul
or
or
sti
rcr
imul
and
loop
js
clc
cmc
leave
dec
xor
xchg
pop
pushf
scas
pop
or
xor
push
dec
xchg
xchg
lds
push
lahf
xchg
outs
and
lock
push
popf
and
iret
mov
mov
std
(bad)
cmp
xchg
movs
scas
and
xlat
or
mov
call
push
das
dec
adc
mov
fld
push
scas
cmp
jne
fnstenv
call
(bad)
mov
add
or
xchg
and
test
leave
dec
sub
mov
call
mov
jnp
jp
test
fld
call
lods
outs
push
inc
cmp
sahf
push
dec
test
fisttp
mov
out
adc
sub
shr
or
or
pop
in
cmp
ds
sbb
scas
sti
shl
fmulp
mov
mov
stos
lods
push
cmp
lds
ja
dec
lock
or
repnz
gs
sbb
xor
xchg
fidivr
or
scas
(bad)
ja
enter
mov
jle
leave
mov
loope
and
test
or
inc
and
mov
sbb
sbb
xchg
movs
int
leave
pop
cmp
sti
ficom
or
(bad)
in
ds
test
aaa
cmp
mov
ins
daa
cli
jl
inc
dec
scas
push
cdq
out
or
push
ins
xor
lods
cmps
in
sar
fcom
mov
loop
xlat
and
push
push
adc
mov
shl
jge
mov
dec
sbb
(bad)
ficom
pushf
lods
jo
aas
sbb
sub
sbb
xchg
mov
arpl
or
cmc
sti
or
adc
lahf
mov
pop
pop
call
mov
(bad)
mov
rcl
mov
(bad)
inc
imul
in
adc
xchg
cmps
and
pop
or
or
test
xchg
and
pop
test
cmc
add
sahf
xor
xchg
jg
in
cmp
vminpd
fmulp
outs
fild
nop
les
cmp
xor
daa
imul
gs
jns
js
sbb
mov
fwait
inc
sbb
inc
ret
fnstsw
movs
jno
pushf
sbb
pop
mov
push
aaa
sbb
test
ins
addr16
mov
or
jbe
dec
push
xor
mov
cdq
outs
mov
(bad)
out
and
addr16
mov
sub
mov
and
movs
inc
cli
inc
push
into
cmp
pusha
xor
mov
sbb
lock
push
pop
repz
(bad)
xchg
fbstp
sub
sahf
dec
imul
icebp
mov
dec
loopne
movs
adc
dec
ins
test
mov
imul
pushf
and
call
sbb
or
js
add
int3
jp
into
mov
dec
mov
mov
imul
jecxz
repnz
ss
cs
jp
jmp
xchg
jge
and
jae
mov
into
mov
add
out
popa
shr
xchg
aam
mov
nop
bound
shr
mov
fs
sub
shl
fld
popf
pop
xchg
lods
mov
imul
fs
leave
cdq
je
pop
sbb
cmp
repz
loop
xchg
pusha
push
out
mov
push
or
gs
cmc
lds
pop
xchg
aas
dec
or
or
aad
cmps
push
(bad)
push
out
mov
xchg
ja
je
jle
daa
repnz
cmp
sbb
dec
into
xchg
jne
lods
add
jno
outs
call
rcl
loop
push
pop
xor
(bad)
pop
rcr
shr
cdq
dec
sbb
or
ret
xchg
or
mov
adc
jmp
mov
adc
stc
mov
and
jl
fisubr
test
(bad)
mov
lea
cmp
pop
mov
enter
out
cmp
add
(bad)
das
into
push
jns
fist
(bad)
fadd
cdq
and
setb
xchg
out
mov
mov
dec
or
aaa
mov
aas
les
cmp
(bad)
dec
xor
xchg
cmp
fwait
mov
push
cwde
or
mov
(bad)
(bad)
ss
mov
xor
push
loop
mov
and
not
mov
js
pop
jg
mov
adc
adc
test
xchg
mov
pushf
mov
push
mov
push
inc
cmp
mov
sbb
into
xor
add
jae
mov
scas
pop
or
pop
pushf
adc
push
daa
mov
cmp
mov
scas
xchg
in
pop
add
and
jl
adc
clc
xor
ret
das
sbb
(bad)
hlt
clc
leave
test
pop
pop
xchg
adc
inc
out
adc
and
add
mov
fbld
cmp
mov
cmps
stos
mov
jmp
pop
push
cmp
adc
fs
fsubr
mov
enter
mov
rol
mov
cld
test
test
out
mov
xor
and
sub
(bad)
dec
push
cli
jo
daa
fdivr
sub
out
(bad)
leave
cmp
jns
int
bsf
and
cmp
mov
in
add
mov
lahf
imul
cmc
pop
or
arpl
inc
daa
push
fistp
sti
xor
xchg
rcr
jns
and
xchg
pop
iret
adc
mov
mov
cs
and
(bad)
icebp
xchg
sar
adc
mov
adc
mov
cvtps2pi
xchg
fidiv
or
scas
int3
cmps
aaa
js
test
ins
mov
aaa
mov
mov
fwait
or
fs
sub
fisubr
lahf
leave
and
dec
add
aaa
push
adc
outs
mov
cmp
cmp
xor
adc
xor
inc
and
out
mov
jbe
fwait
jge
cmps
adc
or
daa
aaa
sbb
push
jbe
(bad)
in
pop
aas
dec
sub
mov
(bad)
leave
adc
or
dec
or
cmc
aam
mov
lds
push
call
and
pop
or
mov
imul
scas
xchg
das
xor
aad
mov
jae
test
sub
jp
pusha
(bad)
jl
fwait
jns
ja
adc
adc
daa
jl
cmp
mov
ror
js
imul
test
div
sub
loop
outs
(bad)
fcmovne
lahf
sub
and
int
loopne
mov
and
adc
stc
loopne
xor
std
mov
stc
sar
je
jp
xor
and
bound
retf
retf
mov
jmp
ror
stos
push
mov
shr
sub
sbb
aam
pusha
das
arpl
aad
lds
sub
push
xor
cmp
add
mov
rcr
retf
add
int3
bound
inc
int
sbb
mov
pop
retf
ss
scas
ins
add
mov
(bad)
mov
aam
xchg
fld
or
inc
push
aas
inc
loopne
xchg
xchg
inc
push
cmp
sbb
pop
leave
fwait
ret
fsub
out
cmp
lods
jnp
scas
pop
pop
add
xor
dec
push
mov
mov
jb
mov
cmps
jns
call
cdq
daa
mov
xadd
cs
inc
and
ret
jns
xchg
cli
imul
add
(bad)
xchg
push
mov
neg
add
jae
stos
inc
xchg
mov
repz
mov
cmps
cs
inc
aas
ins
ja
cmp
loop
in
sbb
gs
fs
jmp
mov
sbb
mov
dec
scas
xor
out
cmp
mov
and
adc
push
jle
(bad)
leave
fdiv
not
pop
fwait
sub
jge
stos
inc
test
in
sti
pop
jg
pop
pop
xor
xlat
ror
inc
push
dec
stc
retf
xor
push
mov
jb
and
mov
jo
push
daa
fcomp
push
icebp
and
les
add
dec
stc
sbb
retf
(bad)
out
dec
std
add
cmps
cmp
push
dec
aaa
aad
lahf
ret
mov
stc
test
xor
lds
inc
mov
push
pop
retf
and
in
(bad)
jno
push
sbb
or
(bad)
fsub
sbb
sbb
and
xchg
and
cmp
outs
ins
sub
mov
push
mov
sar
nop
sbb
mov
mov
fcmovne
adc
test
neg
dec
cwde
fst
pop
mov
add
mov
mov
inc
stc
(bad)
mov
push
adc
cli
and
pop
or
sub
dec
mov
push
or
mov
xchg
jne
test
mov
sub
push
mov
loopne
out
mov
mov
fs
in
or
lods
pop
jno
aaa
xchg
cmps
out
push
leave
mov
retf
and
cmp
out
(bad)
push
in
fwait
cmps
cmc
lea
fild
in
popa
pop
inc
xchg
out
in
xchg
jno
clc
ret
lods
cld
jbe
sbb
sbb
jl
cmps
mov
repz
inc
ja
jl
sar
cmp
cmp
sub
lahf
push
test
xchg
mov
sti
jbe
shl
stc
sar
test
enter
out
fsub
adc
fcomp
push
je
ja
rcl
(bad)
test
pop
mov
loope
sub
fist
adc
and
adc
cmp
dec
(bad)
push
test
mov
(bad)
aas
inc
rol
test
mov
push
pop
mov
fcomp
xchg
movs
jbe
cdq
sar
repnz
cmp
dec
ds
loop
cmp
push
in
xchg
xchg
or
pop
cmp
pop
jle
imul
add
sub
es
sub
mov
(bad)
cmp
or
int3
clc
xchg
or
or
fldenv
jns
adc
mov
lods
data16
sti
xchg
jno
push
xchg
lds
shr
inc
in
jecxz
xchg
push
aaa
imul
test
xchg
xor
xchg
push
test
jo
das
ret
and
jno
adc
and
rcl
cmps
lock
aaa
and
add
(bad)
push
pop
xchg
jb
xchg
ja
inc
out
mov
jno
mov
ror
popf
cmp
mov
xchg
enter
and
imul
push
outs
repnz
and
or
or
sbb
push
mov
or
push
jl
in
cmp
iret
popf
loop
jo
repz
ficom
mov
cmp
loop
jae
arpl
aas
fld
mov
xor
xchg
xchg
repz
pop
nop
pop
in
fisubr
pop
and
aas
jno
ror
jae
sub
push
mov
jmp
push
xor
sub
mov
call
dec
cmps
cs
adc
jno
test
pop
mov
shr
fadd
dec
cmps
jns
sar
cmp
adc
pop
xchg
and
cmp
fsub
cmc
add
ins
or
xchg
loope
mov
sub
mov
inc
mov
add
pushf
push
sub
pop
shl
xor
mov
imul
fcomip
jae
clc
mov
ror
jecxz
icebp
pop
cmp
fs
jno
inc
pop
sub
add
fbld
and
gs
hlt
dec
dec
inc
dec
dec
mov
std
aas
or
push
pop
mov
add
push
sbb
mov
arpl
ret
out
mov
imul
or
xchg
in
and
xchg
ins
dec
call
ror
ins
call
loop
lahf
in
add
inc
cwde
cmp
loope
mov
add
xchg
mov
inc
add
fcmovnbe
mov
xchg
int3
cs
mov
jg
lock
pushf
push
push
stos
and
sub
and
inc
bound
dec
mov
sbb
mov
pop
pop
cmps
sbb
(bad)
ins
mov
jle
outs
fcomp
jl
ja
inc
scas
call
adc
sbb
retf
pop
ins
mov
add
pop
aam
addr16
ja
or
clc
pop
push
ror
jl
(bad)
lock
jmp
jge
push
outs
jge
ds
cli
xchg
mov
mov
ins
test
mov
pop
aaa
and
jecxz
sub
pop
jle
fisub
adc
das
je
dec
cdq
mov
add
mov
jae
mov
repnz
dec
imul
jecxz
xor
cs
mov
xchg
inc
mov
loope
mov
sub
std
push
rcl
adc
adc
std
scas
pop
inc
add
pop
xchg
dec
es
jmp
cdq
or
(bad)
sbb
test
popa
or
sbb
pop
dec
cmps
cld
or
dec
push
les
mov
stos
lods
les
test
pop
inc
pop
cmp
int3
int
cmp
inc
push
mov
mov
retf
cmp
mov
cmps
push
and
jnp
lahf
sahf
retf
in
xor
cwde
add
fisubr
stc
dec
mov
loop
in
mov
jl
mov
hlt
jge
adc
and
imul
arpl
aas
push
add
call
or
jae
inc
mov
in
push
pop
cmps
and
and
jecxz
imul
ret
or
mov
lds
aam
ficom
(bad)
out
add
mov
mov
xor
mov
xchg
or
cwde
loop
ret
rcl
add
std
in
ss
jg
mov
clc
jne
hlt
pop
out
mov
mov
mov
cmp
jle
add
cmc
inc
ds
pushf
es
imul
js
stos
or
arpl
mov
jp
cmps
adc
jae
cmp
stos
fisttp
out
push
mov
popa
or
and
pop
add
lea
inc
loope
or
aam
rol
loop
and
inc
jp
addr16
fstp
iret
fld
jne
fstp
ja
mov
cdq
cmp
mov
fcomp
cs
or
scas
dec
adc
bound
push
push
jle
push
int3
call
cmps
xchg
rcl
cmp
ficomp
xchg
push
jl
mov
es
ds
dec
xchg
inc
into
les
inc
jae
cli
cdq
sub
xchg
push
(bad)
stc
sbb
test
mov
mov
pushf
adc
jb
jbe
(bad)
xor
test
imul
sub
in
xchg
or
dec
(bad)
ret
js
retf
xchg
das
cmp
adc
adc
mov
repz
cmp
inc
adc
mov
add
enter
in
mov
xchg
adc
xor
repz
cwde
push
test
xchg
jnp
dec
sub
(bad)
(bad)
or
cmps
jae
adc
outs
jmp
int
test
test
test
dec
sar
pop
neg
mov
lods
out
lea
dec
jl
xlat
shl
pop
les
pop
stc
jmp
jle
enter
mov
test
test
jo
rol
outs
fcomi
retf
mov
pop
or
and
pop
or
pusha
jae
hlt
lods
jo
xor
pop
jp
repz
jno
call
les
rcl
xchg
xchg
(bad)
dec
call
inc
push
(bad)
out
movs
or
push
dec
add
cmp
imul
push
loope
data16
das
add
mov
lock
cmps
xchg
fwait
bound
stos
xchg
daa
fadd
dec
stos
sub
outs
mov
nop
int
mov
loop
inc
cmp
mov
dec
outs
ins
or
mov
mov
rcr
mov
xor
adc
in
cdq
xlat
mov
mov
pop
jle
jge
(bad)
enter
cwde
xchg
test
mov
sub
inc
dec
jg
xor
sub
mov
xor
mov
mov
xor
out
or
and
neg
in
push
jae
inc
adc
or
mov
(bad)
xor
idiv
lahf
xchg
dec
cmp
push
xor
int
cmp
push
push
int
daa
out
aaa
lahf
shr
stc
cld
push
sub
out
push
jne
jne
lods
loop
call
cmp
clc
cli
adc
ds
pop
in
adc
xchg
cli
daa
cmp
dec
adc
push
sub
call
and
push
inc
or
inc
inc
fild
call
jg
cli
imul
sub
and
ins
and
scas
lahf
movs
push
cmp
mov
add
pop
mov
jns
shl
jmp
in
sahf
stc
mov
pop
adc
pop
retf
push
pop
pop
pop
fcom
test
push
pop
push
int
inc
test
adc
adc
cmp
ficom
into
pop
xor
push
sub
test
cmp
addr16
ins
sar
sbb
scas
das
mov
ins
(bad)
lds
xchg
jmp
sub
push
repnz
sbb
cdq
jp
mov
out
and
xor
jne
fiadd
imul
push
sub
xchg
or
pop
cmp
xor
cmp
mov
push
fcmovnbe
xchg
add
shl
je
mov
jmp
xor
movs
xor
pop
pop
jb
aas
lods
sub
daa
clc
cli
int
dec
or
outs
fwait
test
xor
sub
jbe
out
retf
mov
(bad)
std
push
(bad)
mov
movs
clc
es
hlt
push
xchg
lock
push
ret
stc
jbe
xchg
shl
push
pop
rcr
inc
xor
mov
fnstcw
(bad)
jmp
add
cmp
fnstenv
bts
inc
sub
cld
cmp
iret
retf
(bad)
pop
pushf
xchg
mov
aas
leave
inc
std
inc
pusha
fst
pusha
adc
add
mov
jb
js
jp
mov
mov
xchg
std
sub
cld
push
mov
sbb
call
retf
xchg
dec
stc
popf
test
mov
pop
and
xchg
push
rcr
jbe
enter
cmp
sub
ins
lods
js
data16
mov
shl
lods
pop
(bad)
repnz
and
push
lods
sbb
and
fldcw
pushf
adc
shr
icebp
into
adc
in
mov
repz
pop
and
rcl
dec
cmp
dec
push
cmp
push
inc
and
dec
sbb
sub
popf
pop
(bad)
mov
cmp
ja
test
push
mov
add
jle
repnz
cmc
pop
pop
xchg
and
jmp
and
fisubr
clc
fistp
mov
or
and
fwait
jg
loop
cmp
nop
xchg
pop
fimul
pop
scas
imul
xor
lock
xchg
sub
pop
sbb
dec
sbb
mov
xor
adc
imul
test
jmp
(bad)
std
xchg
or
in
inc
cmps
add
(bad)
inc
out
xor
push
jbe
mov
stos
test
inc
sbb
adc
add
(bad)
adc
lds
pop
stos
out
add
mov
mov
xlat
outs
imul
hlt
sub
aam
sti
inc
jl
or
fld
pusha
xor
ja
inc
sub
adc
dec
xchg
mov
inc
mov
or
nop
or
loop
jle
sbb
pop
into
mov
sahf
jl
not
push
xchg
add
xor
jecxz
test
xchg
(bad)
xchg
xchg
icebp
rcl
push
sbb
dec
xor
dec
fistp
jmp
(bad)
imul
cmp
jb
stos
push
mov
jno
jle
hlt
fcom
push
fstp
stc
rcl
ret
rol
sub
loopne
cmp
data16
pop
loope
enter
jg
add
cmp
jl
mov
(bad)
(bad)
test
cmps
into
das
std
les
ins
push
push
fist
inc
jns
pop
xor
aad
sub
pop
jp
fmul
inc
xchg
xchg
adc
mov
mov
fwait
push
or
push
and
adc
sub
stos
in
sbb
ret
stc
mov
fwait
lock
xor
fdivr
or
pop
popf
mov
mov
in
push
out
jge
lods
and
lods
(bad)
ror
(bad)
or
add
pop
hlt
pop
addr16
arpl
stc
test
pop
ja
lea
inc
add
xor
(bad)
fcmovnb
pop
jns
jnp
ret
ja
and
xor
mov
out
enter
mov
call
adc
retf
dec
out
pusha
add
mov
or
sbb
aam
sub
adc
add
jl
(bad)
pop
arpl
lods
loop
mov
inc
iret
xchg
mov
loopne
xor
sbb
mov
mov
lahf
scas
out
shl
loopne
sub
jbe
and
pushf
xchg
and
sub
inc
sub
(bad)
push
mov
in
ins
push
stos
sbb
inc
add
or
jge
inc
add
mov
cmp
ror
push
xchg
shr
js
inc
adc
mov
xchg
loop
adc
push
outs
jecxz
sub
jb
sub
or
imul
and
loopne
push
xor
stos
lea
je
mov
xor
aam
push
lea
or
test
push
mov
les
popf
add
leave
cmp
movs
mov
or
sub
test
or
mov
mov
push
enter
xchg
xlat
add
mov
call
xchg
fsubr
imul
mov
mov
jle
ret
adc
inc
mov
aas
pop
push
icebp
or
jp
pop
mov
lock
xor
pop
inc
inc
fnsave
xchg
mov
sub
stos
out
pushf
pop
or
add
aad
daa
loope
mov
adc
test
jns
jne
sbb
jge
jg
and
xlat
jecxz
loop
stc
(bad)
div
retf
add
inc
neg
addr16
(bad)
mov
cmp
aam
add
repnz
xchg
mov
xor
jmp
and
mov
cdq
sar
dec
popa
jnp
mov
push
data16
clc
loopne
cmps
push
sub
test
xor
icebp
jbe
or
punpckhbw
mov
sbb
in
dec
or
adc
adc
push
movs
mov
shl
jb
adc
jmp
repz
inc
dec
pop
ins
data16
iret
cs
movs
jnp
sbb
and
stos
pop
mov
retf
jne
push
popf
lods
push
xor
mov
adc
jmp
lea
movs
pop
out
dec
and
ds
inc
cli
pusha
xor
mov
adc
pop
dec
aas
cli
in
jne
mov
ss
jb
enter
test
ffree
jmp
pop
mov
call
out
aas
jne
sbb
sub
popf
cmc
inc
rol
push
add
fstp
out
mov
cld
or
clc
daa
test
cwde
ja
mov
ror
repnz
aad
mov
leave
ss
jno
loop
and
pop
xor
in
inc
pop
jnp
fs
sub
mov
push
xchg
outs
inc
loop
out
bnd
jge
inc
outs
xchg
outs
mov
sbb
jnp
sbb
loopne
loope
cmp
fldcw
(bad)
pop
sub
mov
mov
jne
xchg
xchg
bound
ins
add
jl
lods
xchg
mov
rcl
inc
jo
imul
mov
xchg
jg
jo
daa
push
jmp
dec
imul
in
nop
ds
fucomp
jmp
cmp
mov
dec
dec
sar
neg
pop
int
sub
xchg
lahf
xchg
xchg
out
pop
mov
cdq
dec
in
inc
jge
scas
cmp
nop
stos
aad
aad
and
scas
imul
movs
jae
les
add
test
outs
and
xchg
cmc
call
fs
mov
mov
fidiv
and
bswap
push
add
xchg
dec
cli
mov
scas
shr
pop
add
pop
push
shr
lods
jl
jmp
js
push
cmp
test
jb
(bad)
out
and
sub
int3
scas
ja
popa
xchg
or
mov
cli
outs
or
xchg
dec
pop
dec
(bad)
iret
fisttp
pop
jns
fs
sub
inc
cs
xchg
sti
mov
jge
xchg
mov
xchg
in
clc
mov
cmps
out
cli
xor
adc
add
lods
or
fsubp
xchg
jle
cmp
lods
cmp
push
inc
jle
adc
pop
test
add
fild
and
test
or
sub
xchg
and
sub
xor
ja
dec
dec
dec
in
bound
dec
jp
cli
jecxz
es
dec
ficomp
das
pushf
loopne
aad
mov
add
mov
out
aad
cs
ret
clc
inc
ret
scas
test
clc
pop
mov
scas
test
mov
lahf
out
mov
pop
(bad)
mov
gs
int
(bad)
jecxz
pop
ins
xchg
div
mov
scas
(bad)
movs
icebp
lods
loopne
int
retf
aad
out
into
dec
lods
je
inc
mov
rcl
cld
ret
in
mov
mov
in
fcom
(bad)
stos
retf
out
in
jae
imul
iret
ret
or
xor
dec
mov
lods
pop
and
jl
js
or
xchg
mov
or
jl
pop
stc
mov
push
pop
mov
sbb
dec
xor
shl
jg
pusha
sbb
aam
lods
ins
and
lahf
push
outs
scas
scas
ret
mov
sbb
jnp
fild
cmp
inc
xchg
jae
in
enter
pop
nop
movs
retf
mov
inc
out
jb
call
lahf
sbb
retf
mov
jns
mov
xchg
push
in
xor
mov
movs
sbb
sub
and
jmp
add
inc
sub
lahf
dec
clc
mov
(bad)
dec
js
or
inc
pop
add
lock
dec
mov
lock
mov
ret
cmps
sbb
jb
daa
js
mov
inc
arpl
fst
mov
xor
xor
aas
mov
clc
mov
cli
sub
imul
call
pop
inc
inc
popf
cld
and
mul
(bad)
xlat
xor
cs
jnp
sbb
cwde
int3
push
pop
xchg
ds
adc
movs
adc
test
jae
pop
sbb
cli
xor
pushf
out
pushf
mov
add
pop
call
out
pop
pop
icebp
(bad)
cwde
mov
sbb
xchg
xor
sub
pop
ss
aam
cmp
xor
or
pop
fcmovne
fld
mov
pop
cmc
mov
pop
dec
lds
(bad)
mov
add
sbb
push
add
dec
les
ins
xchg
xor
xor
dec
jno
xchg
aad
loop
xor
lea
add
mov
cs
add
push
clc
cli
lods
mov
xchg
push
movs
or
fadd
loope
std
mov
retf
out
pop
mov
ins
lds
faddp
mov
loopne
and
stos
ins
test
xchg
sub
push
push
jns
mov
xchg
push
retf
(bad)
clc
cs
sub
fdivr
cmp
fdivr
movs
nop
je
xchg
sbb
clc
jb
mov
adc
jl
ficom
jbe
mov
imul
mov
or
icebp
fld
out
out
neg
sub
mov
sti
sbb
lahf
(bad)
bswap
push
push
ret
mov
mov
sbb
(bad)
mov
into
inc
mov
les
(bad)
icebp
pop
lahf
lea
imul
mov
aam
push
ficomp
imul
inc
push
ret
push
sub
leave
call
adc
mov
adc
or
jo
ror
int3
aas
retf
ins
cmp
jmp
dec
in
in
int3
adc
or
and
bound
in
std
ins
xchg
popf
cmp
xor
push
fcomp
mov
mov
and
or
mov
loop
out
retf
aam
daa
dec
lds
jmp
popa
pop
jmp
or
retf
outs
xchg
push
and
add
fstp
inc
(bad)
cmp
sub
shr
cmp
xor
cmp
lods
int3
fdivrp
add
or
xchg
ja
mov
lods
mov
sub
fsubrp
cmp
jbe
ja
ret
sub
sbb
rol
std
dec
iret
jae
and
stos
xchg
inc
mov
push
fs
loopne
dec
push
xor
and
push
jnp
jne
jmp
in
sbb
(bad)
dec
fs
xchg
test
pusha
sbb
(bad)
sub
das
add
dec
rcr
push
gs
sub
jmp
inc
and
inc
cmps
loopne
jbe
std
out
sub
bound
xlat
retf
and
sti
shl
push
push
and
mov
sub
repz
cmp
in
into
das
test
fdivr
add
pop
jae
push
inc
cmc
mov
data16
mov
sub
frstor
fnsave
outs
shr
out
sbb
sbb
jge
lock
push
rol
sbb
std
stos
dec
jge
(bad)
push
mov
(bad)
loop
push
lds
jmp
arpl
cmp
jae
call
fdivr
int3
and
sbb
bound
inc
lahf
gs
adc
movs
in
ins
shl
mov
mov
and
dec
jns
in
push
stos
retf
(bad)
mov
cmp
dec
mov
dec
add
dec
add
rep
mov
in
std
xchg
jmp
ret
nop
adc
fwait
test
sbb
out
mov
mov
push
cmps
fldenv
sahf
cmp
(bad)
pusha
sbb
ins
not
push
or
(bad)
mov
sub
adc
xchg
add
(bad)
movs
sbb
and
cld
jmp
inc
aad
pop
jnp
pusha
(bad)
jmp
pop
and
int3
test
fstp
clc
cmps
jmp
xchg
inc
pop
pop
push
or
push
pop
retw
clc
xchg
je
aam
pushf
xor
ins
outs
cmps
fdivr
adc
dec
mov
lea
jnp
xchg
mov
ror
mov
xchg
stos
test
inc
lods
push
aas
fmul
add
hlt
and
xchg
cmp
sbb
ret
mov
cmp
call
jo
mov
jmp
mov
lods
mov
mov
mov
(bad)
xchg
aam
daa
mov
scas
cmp
out
pop
outs
stc
xor
repz
aad
dec
mov
or
xchg
cmp
pop
jl
xchg
sbb
inc
xor
sub
in
sbb
add
fisttp
lods
sub
mov
(bad)
sbb
pop
push
jne
mov
(bad)
repnz
sahf
fcom
ss
aam
mov
test
out
loop
xchg
or
rcr
jge
and
hlt
pop
loop
adc
inc
mov
(bad)
shr
jl
add
push
adc
sar
push
and
fisubr
cs
div
ja
scas
jmp
scas
leave
pop
imul
loop
sub
jmp
mov
mov
push
xchg
add
test
jne
jmp
aas
pop
or
pop
das
pushw
jp
dec
div
ins
mov
outs
mov
inc
jg
jecxz
push
ja
icebp
(bad)
xchg
cwde
dec
in
js
ins
cmps
jae
jecxz
push
dec
pop
pop
jmp
in
ret
sbb
cmps
aas
sbb
xchg
mov
loopne
or
jmp
(bad)
cmp
test
stos
jnp
push
aam
sbb
inc
and
lds
sub
dec
dec
shl
push
dec
add
(bad)
cli
cmp
jg
jmp
aam
push
adc
sub
push
retf
mov
leave
mov
mov
test
jle
movs
test
movs
popa
arpl
ins
movs
cmps
clc
pop
jge
not
outs
(bad)
lods
lods
aad
ja
push
std
iret
jge
js
cmp
loopne
loopne
mov
sbb
int
push
scas
jmp
xchg
and
das
test
daa
scas
or
xor
xor
mov
pop
xchg
fmul
jb
and
cmps
dec
enter
rcr
inc
aas
add
sub
jmp
sbb
pop
in
adc
scas
adc
cmp
pop
or
dec
cmps
arpl
mov
aad
lock
xchg
cmp
pop
and
and
xchg
sbb
jg
xor
call
daa
(bad)
mov
movs
jmp
adc
mov
adc
mov
jmp
test
and
pop
iret
mov
rol
dec
sub
sub
inc
daa
lock
out
or
dec
jno
jno
fst
imul
and
pop
sbb
cli
mov
ficomp
push
fdiv
add
pop
(bad)
repz
pop
retf
test
mov
xchg
xchg
mov
mov
aam
sbb
jae
push
jle
dec
pop
xchg
adc
ror
stos
dec
popa
jle
cwde
loopne
dec
(bad)
mov
sbb
imul
jmp
in
inc
xchg
popa
jmp
fwait
cmc
out
mov
add
in
xor
pop
mov
popf
xor
(bad)
jmp
adc
mov
adc
mov
bound
jp
and
and
in
fdiv
les
leave
cdq
jle
and
loope
push
inc
jp
pushf
xor
into
les
add
retf
mov
ficom
jecxz
outs
in
sbb
scas
jae
mov
fs
ror
nop
jns
dec
ins
dec
idiv
xchg
mov
jmp
add
pushf
ss
inc
pop
sub
push
je
mov
inc
out
sbb
xor
inc
mov
inc
inc
sahf
neg
sub
and
push
push
mov
xchg
addr16
push
in
xor
cmp
mov
movs
add
xchg
xor
cmp
enter
mov
out
jmp
pop
int3
jne
je
mov
inc
inc
mov
ja
add
inc
push
pop
add
ds
jno
fs
adc
pop
das
push
xor
pop
pop
stc
scas
push
add
loop
lds
jle
out
sbb
xchg
cmp
out
cmp
int
pushf
mov
mov
adc
neg
cld
inc
jp
aad
sbb
fimul
sub
call
repz
xchg
hlt
mov
(bad)
and
sub
push
mov
pop
mov
lods
test
cs
inc
cmp
call
jnp
ror
cdq
jecxz
sbb
test
es
dec
in
scas
movs
mov
outs
dec
or
push
mov
inc
in
(bad)
fst
in
dec
cdq
cmp
cmp
imul
jge
sub
enter
mov
inc
in
pushf
inc
cwde
mov
pop
jmp
imul
je
jp
mov
mov
ficom
sub
mov
pop
out
je
fsubr
cmp
pop
sub
lahf
(bad)
jno
daa
scas
loop
sbb
or
push
hlt
cwde
ret
imul
nop
or
ror
lods
dec
jns
fisttp
icebp
xchg
jne
jbe
or
cmc
test
add
cld
pop
cdq
xchg
jnp
rol
ins
jmp
repnz
movs
xchg
add
inc
dec
mov
sbb
lahf
sbb
into
ret
in
add
mov
jmp
and
mov
pop
adc
mov
inc
and
xchg
add
mov
stc
sbb
cli
jge
outs
lock
nop
jl
or
and
xor
mov
adc
mov
sbb
pop
xchg
xchg
hlt
pop
test
xchg
mov
jmp
dec
inc
sbb
push
mov
cmp
out
pop
jmp
outs
repnz
push
test
ja
int3
out
mov
push
fwait
and
(bad)
fbld
ret
and
add
jne
in
icebp
and
shl
mov
ja
fwait
(bad)
jg
dec
mov
sbb
xchg
(bad)
push
push
dec
mov
(bad)
sbb
inc
in
movs
xchg
sub
les
pop
stc
mov
mov
or
pop
loop
(bad)
leave
xor
fisttp
arpl
lods
scas
or
rcr
(bad)
add
int3
rcr
sub
xor
xchg
xor
pop
mov
mov
popf
outs
mov
les
pop
xchg
jl
jg
arpl
sbb
sbb
rcr
aaa
xchg
sub
out
test
inc
inc
enter
(bad)
loope
xchg
push
or
xor
mov
push
sub
dec
pop
aad
mov
push
push
inc
mul
lds
jnp
daa
movs
jl
inc
sub
jecxz
jmp
sbb
dec
and
mov
popa
fwait
out
aaa
push
(bad)
mov
inc
jmp
out
cdq
add
jle
mov
jnp
ins
xchg
mov
jge
addr16
hlt
imul
jo
xchg
lock
xlat
cmp
aaa
or
push
mov
xchg
das
loopne
xchg
js
dec
add
fstp
les
and
add
push
mov
inc
lods
mov
jecxz
scas
mov
(bad)
sub
(bad)
in
aad
dec
push
xchg
inc
xor
movs
cwde
addr16
retf
dec
mov
add
loop
pop
clc
inc
mov
lds
pop
sub
xchg
out
shl
js
xchg
out
ret
xchg
ret
mov
sar
and
in
jp
lds
inc
les
and
mov
and
pop
push
mov
inc
sahf
mov
scas
sti
pop
dec
xchg
push
mov
or
icebp
sahf
cmp
mov
or
into
imul
cmp
repnz
and
test
cmp
and
push
jge
push
js
sub
add
sti
mov
jnp
push
daa
pushf
leave
retf
xor
sar
inc
call
call
and
es
mov
inc
cmp
popf
dec
(bad)
dec
les
into
arpl
pop
and
enter
xor
dec
aas
lahf
xchg
and
adc
and
pop
cld
add
mov
jae
aaa
mov
neg
pop
or
sbb
rol
dec
stc
add
repnz
lods
mov
int
cmp
xor
fdiv
daa
in
stc
(bad)
or
ins
xchg
das
sub
je
out
sahf
push
sub
add
cmp
cmp
mov
std
aam
xchg
imul
inc
and
fwait
push
push
xchg
dec
cmp
pusha
mov
dec
mov
out
std
clc
out
mov
out
test
fcmovb
or
xor
mov
(bad)
arpl
sbb
daa
cmc
add
cmp
sub
or
mov
push
inc
lds
aas
cmp
inc
ret
jp
adc
cmp
call
pop
scas
dec
loope
dec
pusha
and
shl
test
jl
fdiv
or
mov
xchg
(bad)
cmp
movs
cmp
mov
dec
imul
mov
xchg
(bad)
cli
mov
inc
inc
xchg
mov
aad
mov
jge
loopne
jae
push
dec
shr
les
in
fist
cwde
out
adc
mov
mov
mov
or
sbb
sbb
movs
and
rcr
mov
xor
pushf
(bad)
test
adc
add
sub
mov
sti
retf
nop
mov
and
xor
jns
pusha
inc
push
sbb
pop
arpl
jno
pop
cmp
cmc
mov
add
(bad)
les
xlat
sbb
inc
pop
and
mov
cmc
out
popa
rcr
arpl
jo
stc
jge
rol
add
xor
scas
push
imul
mov
mov
loop
movs
aad
add
sbb
aad
pushf
jmp
sahf
(bad)
pop
fwait
stos
mov
add
pusha
nop
repz
mov
daa
xchg
dec
cmps
in
mov
dec
(bad)
jg
inc
retf
inc
mov
lods
adc
jno
shl
adc
push
ins
ror
pop
cmp
je
sub
and
jmp
jb
clc
enter
lock
enter
dec
pop
daa
or
rcl
out
cdq
in
cdq
lea
retf
std
ins
ss
sub
fisub
sub
mul
clc
scas
bnd
test
out
and
aaa
popa
inc
ror
mov
adc
mov
shl
cmp
stos
stc
call
(bad)
iret
pusha
lods
cli
adc
repz
jl
scas
cmps
mov
sub
outs
imul
mov
hlt
push
sub
add
mov
cli
popf
gs
add
test
in
loopne
iret
jbe
cmp
dec
out
pop
xor
jno
mov
inc
(bad)
cmc
ficomp
adc
in
rcr
jmp
push
push
sub
mov
adc
xchg
lahf
add
cmp
ret
pop
arpl
sti
das
push
imul
add
and
test
popf
lods
mov
add
(bad)
xchg
int
stos
jle
cmp
test
jl
jmp
fld
scas
or
rcl
out
dec
mov
cmp
cmp
js
mov
int
xchg
cmp
push
cmps
sbb
out
xor
mov
sbb
sbb
out
ror
inc
and
pop
and
push
xor
or
mov
dec
lea
xchg
shl
adc
imul
in
push
mov
sub
in
sub
outs
aam
clc
das
test
ret
std
dec
add
pop
rol
jmp
pop
mov
mov
cmp
stos
cwde
nop
push
lock
nop
cld
add
test
jns
cmp
and
shl
je
out
es
add
xchg
xchg
pop
or
fucomip
push
mov
adc
aad
jle
clc
mov
jmp
cdq
dec
xchg
outs
imul
imul
or
daa
ins
aad
in
jns
sahf
add
add
adc
mov
or
adc
hlt
mov
scas
jge
push
add
aad
in
imul
fs
std
dec
and
pop
jecxz
jl
xor
ins
out
retf
fwait
lea
movs
cs
(bad)
outs
(bad)
sub
mov
imul
dec
retf
mov
pusha
xor
jo
or
je
scas
div
sub
call
or
add
xor
adc
nop
shl
dec
bound
or
adc
enter
xchg
jmp
add
pop
cli
shr
aad
nop
int3
or
push
push
rol
mov
enter
xchg
in
arpl
lods
cmp
mov
call
cmp
in
movs
and
mov
adc
mov
mov
pop
loope
retf
fisubr
push
mov
add
test
xlat
xor
mov
jo
mov
fild
or
sbb
aaa
sub
mov
or
imul
xchg
outs
mov
outs
jo
fld
xchg
jge
pop
lea
dec
mov
dec
sbb
pop
xchg
dec
fisub
cmc
(bad)
dec
cmc
sar
das
sub
popf
push
rol
xchg
cmp
xor
cli
jae
pop
pop
pop
sbb
pop
imul
(bad)
jmp
or
scas
adc
das
inc
scas
jg
xchg
je
and
imul
sahf
mov
stc
(bad)
fldcw
xchg
xor
xor
int3
pusha
es
add
pop
outs
stos
xchg
inc
jl
push
sbb
call
xchg
out
mov
test
cmp
mov
std
sub
mov
adc
xor
mov
push
adc
dec
inc
lods
and
mov
dec
xor
repz
out
fs
xchg
in
push
mov
fadd
movs
push
test
stc
push
stos
inc
ins
pop
fidivr
outs
dec
cmp
icebp
out
mov
cmps
(bad)
daa
repz
sub
dec
cmp
add
call
mov
jg
aad
dec
sub
fiadd
pop
xor
ftst
or
xor
dec
dec
cmps
jne
addr16
pop
fcmovnu
test
and
aas
jno
ins
mov
mov
inc
jmp
std
xchg
add
xchg
mov
sti
pop
out
(bad)
test
repnz
xchg
mov
neg
dec
pop
jmp
lds
sbb
fstp
sub
jle
loopne
aam
inc
aad
xchg
jae
icebp
push
or
out
pop
icebp
push
out
les
in
cwde
mov
jmp
dec
add
test
sub
ja
inc
xchg
jbe
or
movs
mov
sbb
call
add
sub
stos
arpl
mov
lods
xor
cmp
ins
clc
sahf
int
pop
sahf
call
pop
jmp
jmp
jmp
ins
fwait
aad
inc
inc
mov
adc
jg
xor
jne
in
inc
adc
inc
pop
sbb
mov
mov
ret
(bad)
xchg
sub
(bad)
cld
call
jae
sbb
push
sub
aaa
xor
je
push
or
fcmovnb
pushf
shl
or
adc
rol
popa
mov
jb
lahf
stos
mov
mov
mov
pop
call
cmps
ret
dec
jp
sub
mov
test
sub
push
dec
inc
mov
mov
cmp
das
xchg
cmp
adc
push
test
adc
fcomi
loopne
xor
loop
mov
pop
or
ficomp
inc
(bad)
lea
mov
cmp
repnz
imul
pop
ins
out
jp
retf
pop
icebp
ret
dec
sub
ds
retf
nop
repnz
xchg
add
pop
scas
dec
add
push
xor
mov
xor
mov
push
push
ret
mov
std
adc
xchg
jo
sub
call
jmp
lds
lods
lahf
sbb
inc
(bad)
inc
jno
das
int
mov
mov
inc
fstp
imul
repz
(bad)
adc
(bad)
pop
xor
xor
adc
aaa
push
fwait
ss
cli
mov
shr
ret
shl
cmps
cmp
(bad)
hlt
mov
or
std
cmp
loopne
fimul
mov
out
fbstp
shl
test
push
stc
push
into
rcl
mov
add
xchg
ja
inc
retf
add
test
js
pop
jb
xor
aad
fiadd
push
push
xchg
sbb
jmp
jl
sbb
lock
data16
movs
dec
jns
or
inc
jae
xchg
sbb
add
mov
call
jge
(bad)
int3
std
pop
inc
pop
ror
mov
cmps
(bad)
imul
(bad)
mov
push
dec
mov
jecxz
movs
jb
xlat
xchg
xor
pop
aaa
pop
call
hlt
pop
cmc
add
xor
jne
xor
and
sbb
test
push
test
mov
ficom
leave
pushf
mov
mov
movs
push
xor
repz
imul
dec
mov
(bad)
push
lea
dec
sub
push
mov
jne
mov
add
std
in
out
jg
(bad)
jno
mov
sbb
call
call
cdq
cli
repz
push
jmp
dec
popa
repz
rol
jg
cli
aad
aad
jb
stc
in
push
push
inc
adc
icebp
pop
mov
cmp
jle
sbb
cmp
mov
cmp
es
repnz
out
inc
jle
lds
jns
adc
call
lock
addr16
xchg
mov
std
outs
fdivr
pop
mov
mov
mov
mov
xchg
xlat
stos
xor
retf
lahf
imul
adc
mov
das
loop
adc
out
(bad)
jns
test
adc
add
adc
mov
shl
lock
ins
fwait
and
rol
lahf
xchg
or
push
dec
xchg
xchg
aas
nop
in
in
sbb
int
sahf
xchg
mov
mov
adc
sbb
jge
(bad)
xchg
jl
sar
movs
dec
sbb
push
jns
push
out
jp
mov
arpl
leave
push
xor
mov
(bad)
dec
inc
bound
cwde
dec
or
aam
mov
sub
mov
xchg
test
inc
cld
jl
pop
mov
retf
sbb
shl
mov
sub
adc
and
scas
inc
dec
cmp
int
push
adc
inc
retf
or
dec
mov
retf
inc
shl
and
lds
or
cmps
lds
enter
popf
cld
sti
outs
adc
pop
pop
or
into
xchg
and
adc
mov
inc
xor
and
push
fild
(bad)
jge
pusha
call
dec
pop
idiv
in
sbb
inc
fisub
aad
ret
pop
xor
mov
jmp
(bad)
hlt
xchg
or
fcomp
jb
int
repz
leave
mov
imul
adc
and
inc
mov
push
aad
xchg
xchg
hlt
mov
pop
js
or
xchg
int3
xchg
cdq
cmp
jne
sbb
adc
dec
jmp
cmp
xor
les
int
or
aam
jl
jp
mov
imul
push
loop
pop
ja
inc
scas
xchg
pusha
adc
cmp
sub
inc
adc
stos
cld
imul
(bad)
out
sub
xor
cmc
cli
ins
popf
nop
pop
cmp
pop
mov
cmc
mov
mov
xchg
adc
in
(bad)
icebp
add
fnstsw
add
icebp
sub
stos
pop
inc
sbb
cmp
push
ror
add
out
push
jge
and
inc
cmp
pop
dec
lea
shl
std
ins
adc
sub
inc
or
inc
xchg
inc
sub
xchg
aaa
push
sar
leave
and
jl
stos
fistp
cli
fiadd
mov
and
popa
push
inc
add
shr
jl
and
cmps
dec
jg
xor
xchg
ror
jne
fdivr
inc
data16
adc
cmp
out
and
in
inc
mul
add
dec
stos
adc
xchg
pop
mov
shl
push
je
lahf
adc
dec
sahf
cmp
jge
iret
aas
out
pop
sbb
cmps
in
cli
add
or
test
(bad)
or
add
aam
inc
push
cmp
adc
push
aad
mov
mov
sbb
test
xor
add
outs
dec
jb
mov
retf
or
fwait
(bad)
jnp
cmc
inc
mov
add
outs
pop
mov
pop
jp
mov
iret
mov
stc
inc
fistp
shl
jl
xchg
inc
ror
xor
or
sbb
mov
(bad)
pop
(bad)
jge
or
sahf
jbe
stc
leave
mov
sub
mov
mov
mov
or
(bad)
fld
addr16
mov
cs
or
cmps
xchg
stos
cmp
push
mov
(bad)
cmps
stos
mov
fisttp
mov
xchg
cdq
mov
jp
inc
pusha
mov
xchg
pushf
mov
push
sahf
add
push
fimul
stos
nop
les
jl
jg
mov
test
js
xor
add
mov
adc
loopne
sbb
movs
jmp
les
enter
sub
test
shl
cmps
inc
cmp
stos
add
xor
inc
pop
test
dec
dec
sub
add
cwde
cmp
inc
mov
mul
push
test
xor
sub
ins
mov
pop
jge
lods
jne
lods
lahf
adc
sbb
les
lods
or
fstp
jno
jl
sub
adc
jb
add
dec
jnp
mov
mov
gs
mov
mov
pop
es
jns
pop
clc
or
and
xor
nop
fld
or
psubusw
jmp
pop
mov
scas
outs
sbb
add
mov
mov
sbb
jge
inc
sahf
jbe
cli
mov
shr
das
lods
stos
pushw
sub
ret
xchg
xchg
lods
xor
cwde
mov
outs
push
call
test
mov
xchg
in
lds
div
mov
popf
movs
cld
int3
add
stos
sbb
mov
loopne
call
dec
iret
movs
and
outs
jl
test
test
loope
adc
gs
pop
sub
add
adc
in
or
lods
dec
mov
sahf
add
inc
jno
hlt
out
mov
xchg
cmp
pop
mov
pop
(bad)
push
loop
repnz
sbb
or
stos
push
lds
cmp
(bad)
in
pop
xchg
push
xor
ja
fidiv
xchg
push
mov
lea
push
mov
enter
or
cmps
ret
jb
push
repz
mov
jns
rol
out
and
jmp
imul
pushf
and
adc
sbb
loopne
and
leave
mov
and
push
lock
shr
jae
int
inc
fdivr
stos
nop
sbb
lods
test
aas
retf
jmp
or
dec
add
arpl
ficomp
dec
or
sbb
sub
push
not
fs
popa
and
adc
jbe
mov
ins
mov
sub
pop
scas
mov
std
call
outs
push
imul
inc
mov
adc
mov
add
mov
movs
cmp
pop
add
cmps
sbb
(bad)
pop
pop
cmp
sub
lods
aad
dec
jae
mov
mov
call
test
push
jecxz
mov
js
push
jecxz
pop
mov
repz
cmp
rol
(bad)
fcos
sbb
mov
fisttp
data16
loopne
repnz
dec
(bad)
push
in
aam
mov
add
aas
imul
fiadd
mov
or
ds
xor
jl
add
inc
pop
sub
or
pop
dec
mov
pop
add
and
push
lods
cdq
xchg
dec
or
jmp
mov
jmp
popf
or
xchg
call
rol
jb
(bad)
sahf
clc
aam
jmp
pop
loop
pop
jns
adc
cmps
retf
test
dec
mov
xchg
test
cmps
jae
aaa
ret
mov
xor
mov
or
mov
mov
xchg
mov
xor
and
int
out
or
cmc
pop
aam
loop
dec
(bad)
push
jecxz
push
ins
cmps
call
mov
iret
mov
or
mov
dec
loope
mov
mov
outs
xchg
sub
sub
cmp
push
jecxz
push
jge
add
xor
rcl
dec
or
inc
call
push
arpl
add
icebp
(bad)
mov
aas
(bad)
push
arpl
cld
adc
or
scas
sbb
ins
lods
aad
pusha
cdq
imul
out
ja
cli
push
xchg
aam
clc
inc
shl
(bad)
stc
sar
jecxz
inc
aas
cld
lahf
data16
imul
ret
adc
scas
mov
scas
xchg
mov
add
jae
pop
cmp
push
inc
ja
adc
and
sbb
sub
repz
mov
in
and
into
(bad)
sbb
cmp
gs
je
xchg
rcl
xlat
xchg
inc
pop
(bad)
shl
mov
ss
sbb
push
adc
fistp
push
dec
pop
test
dec
mov
in
dec
xor
ret
and
shl
adc
sub
mov
xlat
dec
fisubr
xchg
jno
cdq
pop
push
or
push
fwait
sti
mov
or
es
jp
rcr
out
scas
lock
sahf
imul
xchg
pop
scas
hlt
xchg
and
and
add
sub
aad
push
(bad)
call
cmps
rol
cmp
stc
xlat
shl
dec
(bad)
dec
lods
(bad)
aam
in
push
in
mov
nop
pushf
jecxz
(bad)
xchg
push
stos
adc
pop
loopne
test
jmp
xchg
daa
mov
dec
js
mov
mov
jmp
arpl
out
dec
adc
xchg
jae
mov
lds
inc
ficom
dec
add
movs
loope
(bad)
mov
in
loope
xor
fisttp
nop
into
repz
pusha
hlt
inc
jnp
cmp
adc
pop
lahf
ficomp
ror
stos
int
mov
xchg
fsincos
mov
leave
cmp
inc
movs
mov
mov
(bad)
or
inc
pop
(bad)
dec
js
fidiv
xchg
xor
repz
daa
ror
(bad)
push
aas
pop
outs
jl
pop
test
fmul
mov
call
fwait
mov
repz
stos
jbe
stc
test
call
pop
cmc
pop
loopne
xor
adc
fs
jecxz
dec
lds
jns
or
arpl
out
movs
inc
movs
mov
leave
add
adc
cmp
addr16
mov
jb
adc
call
adc
outs
jl
dec
mov
stc
nop
(bad)
pop
push
inc
fwait
mov
mov
xchg
sub
push
fs
push
fnstenv
mov
(bad)
xchg
les
mov
test
mov
stos
repnz
inc
out
dec
test
movs
sub
and
retf
iret
sti
es
fiadd
mov
dec
sbb
cmc
loopne
sub
cs
and
sub
or
daa
add
rcr
sbb
sbb
push
inc
cmp
xlat
sahf
xlat
adc
jb
cmp
fsubr
or
xor
mov
jo
inc
mov
mov
out
inc
sub
dec
xchg
mov
inc
add
fild
cs
int
pop
mov
or
cmps
pop
stos
ins
add
clc
adc
push
fisubr
pusha
neg
mov
or
jb
xor
sbb
(bad)
cmp
iret
jmp
ins
sub
int
stc
in
cmp
js
cld
dec
leave
dec
xor
es
mov
pop
xlat
test
xor
into
outs
jns
iret
sar
and
or
add
popf
sub
cmps
push
repnz
inc
bound
pop
dec
mov
std
mov
daa
sahf
sbb
jle
pop
adc
push
inc
imul
shl
imul
inc
mov
xor
xchg
xlat
cli
enter
sub
jns
scas
repz
pmaxsw
rcl
dec
sbb
jno
sti
aam
or
mov
pop
adc
in
aad
div
add
xor
fwait
adc
inc
das
jp
imul
pop
sbb
je
push
pushf
jbe
mov
sub
(bad)
xlat
adc
add
loope
ds
js
fidivr
and
cmc
pop
mov
sbb
(bad)
mov
ss
jno
ds
test
scas
sbb
mov
movs
or
test
mov
cmp
in
adc
clc
dec
cwde
mov
data16
shr
call
xchg
adc
nop
fldenv
sbb
ret
xor
jmp
in
imul
dec
jae
les
pop
test
adc
dec
or
addr16
push
movs
mov
lds
jle
sbb
ds
imul
mov
jbe
jnp
cmps
pop
mov
aas
fiadd
cmp
jne
cs
movd
mov
fmul
jmp
mov
jge
outs
outs
daa
pop
jg
and
jmp
test
imul
aaa
retf
pop
nop
and
jl
sbb
push
push
neg
movs
jmp
cwde
mov
aam
inc
jge
(bad)
fnstsw
stos
jg
or
out
sub
retf
popf
mov
cmp
aas
ror
xchg
outs
or
mov
mov
pop
sub
lods
movs
div
scas
std
es
push
mov
xor
sub
and
xchg
mov
mov
jmp
pop
sbb
popa
icebp
(bad)
popa
iret
or
inc
jmp
and
stos
imul
pop
fcom
bound
test
in
pop
shr
dec
add
popf
sbb
out
mov
xchg
jo
cli
dec
xor
leave
push
add
cmp
sbb
mov
cmp
stc
cmp
push
ret
ja
loope
addr16
out
clc
push
in
cmps
add
xor
bound
shr
cwde
(bad)
mov
repz
mov
mov
in
or
xor
cli
retf
fidiv
pop
inc
push
fs
(bad)
aaa
add
pusha
mov
repnz
mov
cmp
lahf
push
pop
xchg
movs
pop
xchg
repz
add
icebp
inc
aam
outs
or
(bad)
rcr
js
popa
ret
call
cld
(bad)
cmp
cmp
dec
lock
xchg
test
das
sub
inc
push
or
daa
xchg
xchg
xor
jbe
popf
inc
adc
pop
xor
aas
mov
jae
xchg
mov
inc
pop
ror
lock
push
out
es
call
or
sub
loopne
adc
sub
jo
pop
(bad)
fst
in
push
cmp
push
ins
in
aad
aad
gs
mov
push
adc
call
in
ss
loope
sub
xchg
pop
out
or
xor
dec
mov
loop
pop
or
xor
mov
add
mov
dec
sub
fwait
adc
add
daa
fld
pop
mov
jb
pop
dec
xor
pusha
or
dec
and
scas
imul
sti
push
or
inc
xor
pop
xchg
in
nop
dec
dec
repz
mov
jnp
dec
and
or
cld
in
stos
les
mov
cmp
jo
mov
push
cdq
sub
scas
repnz
pusha
test
add
pop
or
out
pushf
cs
in
(bad)
js
mov
jnp
popa
sbb
mov
je
adc
fiadd
(bad)
loop
push
(bad)
mov
popa
es
push
ss
dec
push
cmc
ret
cdq
add
xor
add
(bad)
adc
mov
lea
xor
jnp
jp
stos
loopne
shr
fstp
xchg
cmp
sbb
and
inc
pop
mov
dec
into
and
mov
add
inc
movs
in
ins
add
xchg
mov
push
xor
mov
jae
adc
push
sbb
retf
fld
adc
fisttp
pop
push
push
mov
mov
fcomp
out
jmp
sti
push
mov
xlat
adc
mov
xchg
jb
je
cmp
mov
or
inc
test
shl
arpl
retf
sub
jmp
in
mov
fdiv
xchg
leave
fist
xchg
or
les
jo
sub
push
mov
ror
add
imul
and
sar
adc
or
mov
mov
ret
xchg
dec
aad
push
cmps
cmps
cmps
mov
rcl
dec
push
add
inc
mov
stc
dec
sar
pusha
cdq
bound
xchg
xor
jge
mov
dec
loop
mov
jmp
into
test
stc
movs
push
mov
xchg
push
mov
and
xor
cld
jmp
test
jb
sbb
push
out
cld
int
call
sahf
(bad)
pop
xchg
pushf
cmp
scas
push
jne
fnstsw
lds
inc
pop
push
sbb
mov
adc
aaa
js
pop
xor
das
(bad)
xlat
adc
jns
leave
pop
test
adc
sar
jmp
xlat
mov
test
cmp
add
mov
nop
fcompp
cs
mov
loope
jns
(bad)
ins
in
sub
(bad)
js
push
pop
add
add
out
jbe
sub
aad
add
jecxz
xor
mov
ficomp
mov
inc
pop
adc
inc
test
push
push
bound
sar
or
lock
cli
lods
mov
repz
imul
jnp
xchg
mov
push
inc
push
adc
xor
jl
mov
jp
ret
cmps
rol
mov
outs
cmc
mov
test
(bad)
mov
and
mov
add
popf
cmp
cmp
iret
stos
repnz
in
push
push
out
mov
mov
dec
ss
and
add
nop
loop
jb
jo
arpl
cmp
fnstsw
mov
lahf
push
arpl
pop
leave
sub
mov
and
mov
or
pop
stc
xchg
jmp
push
ret
sub
jmp
cs
jbe
rol
rcl
adc
nop
or
fild
push
mov
sbb
out
loopne
adc
mov
mov
cmps
jae
pop
mov
cld
jmp
fwait
add
in
cmovb
popa
cmp
push
jo
inc
jle
and
jmp
inc
shl
popa
push
lahf
mov
push
cwde
or
enter
fist
xor
lahf
mov
sub
mov
pop
push
push
mov
lock
iret
jbe
mov
loope
and
xchg
push
inc
das
mov
and
int
pop
test
test
int
test
fdivr
mov
sbb
cmc
xchg
fcom
mov
cmp
inc
cmps
sbb
xor
stos
(bad)
sahf
shr
mov
ffreep
retf
jg
dec
scas
push
jecxz
sbb
dec
inc
cld
fabs
mov
jle
arpl
add
fsubr
fisttp
scas
pop
int3
mov
(bad)
dec
int3
int3
(bad)
das
(bad)
cld
hlt
scas
mov
push
pop
in
out
dec
inc
lds
mov
mov
ror
cs
cmp
mov
mov
(bad)
mov
out
dec
mov
aad
push
dec
mov
hlt
push
nop
xchg
fs
cmps
movs
pop
adc
ret
jmp
add
inc
shl
add
loop
mov
push
push
lea
icebp
push
sub
retf
popa
push
out
and
mov
lods
push
jne
xchg
out
aam
mov
(bad)
mov
dec
or
out
mov
cs
cs
hlt
pop
inc
and
jle
dec
lods
aas
mov
cld
dec
adc
lea
daa
cvtpi2ps
jg
(bad)
xlat
and
jmp
xchg
cs
dec
inc
mov
loop
xor
mov
mov
call
jo
pop
dec
outs
jge
cmp
dec
and
inc
sbb
jb
xor
aas
les
mov
sub
mov
les
fimul
outs
mov
cs
xor
add
jne
call
push
xchg
cdq
movs
cmps
cwde
pushf
leave
cmps
push
inc
xor
ins
leave
mov
xor
pop
out
sbb
xor
push
in
xchg
lea
lods
setp
lods
fldcw
scas
adc
mov
inc
scas
adc
push
push
loop
cmp
jbe
dec
jge
iret
adc
inc
inc
sub
sar
dec
mov
sbb
xchg
hlt
add
jp
popa
cs
nop
mov
push
(bad)
(bad)
repz
data16
mov
imul
aas
sbb
push
pop
ss
mov
sbb
icebp
popa
ret
mov
add
push
loope
int3
lds
mov
jno
and
sbb
(bad)
out
mov
or
inc
fst
aaa
scas
jns
lods
je
pop
das
jle
addr16
inc
add
jnp
dec
or
stos
xlat
mov
mov
addr16
mov
cmp
lock
add
jae
jecxz
mov
cmps
sbb
xchg
outs
jmp
pop
jle
sub
add
cmc
pushf
inc
retf
(bad)
jmp
dec
fiadd
jl
mov
les
sbb
pop
sar
or
addr16
mov
loope
adc
cli
cld
sahf
mov
add
mov
jecxz
(bad)
adc
jo
pop
xchg
mov
out
push
adc
fisub
mov
push
mov
std
jbe
pop
push
lds
push
mov
sbb
stos
mov
xchg
or
jbe
dec
inc
(bad)
cmps
js
push
sbb
popa
movs
pop
pop
push
add
cld
push
scas
dec
or
fs
in
mov
cmp
sub
jmp
and
fcomp
sbb
ins
mov
out
dec
(bad)
ss
and
stc
test
fbld
xchg
push
push
cmp
addr16
push
and
pop
mov
mov
movs
push
stos
pushf
aaa
sub
sti
add
inc
int
pop
cli
sar
xchg
add
iret
mov
(bad)
fstp
addr16
lock
xor
xchg
dec
movs
imul
js
push
xor
xchg
fadd
loope
out
jno
inc
mov
push
xchg
cmp
cs
jne
jl
sti
mov
adc
cmps
lods
gs
mov
test
xchg
sbb
addr16
mov
mov
xchg
aas
xor
adc
pop
cmp
mov
adc
xchg
outs
or
add
pop
jle
lock
jmp
hlt
(bad)
jp
add
aas
das
xchg
adc
pop
inc
cs
inc
adc
repnz
xchg
addps
dec
pop
(bad)
nop
xchg
idiv
lock
lods
xchg
pusha
inc
(bad)
stc
mov
xchg
fcom
fsubr
inc
push
mov
push
cmp
pop
data16
sub
add
pop
xchg
shl
les
mov
mov
call
cmp
xchg
pop
mov
lods
sbb
psubw
cmp
or
sbb
cmp
cmp
out
inc
mov
cmps
jle
out
cmp
test
call
jg
add
repnz
jg
jg
ss
cmp
cmps
pusha
push
cmp
cdq
mov
(bad)
xchg
mov
jns
pop
int
aas
or
fwait
jns
int3
or
sub
pushf
movs
cs
call
icebp
mov
lods
ret
or
pop
pop
lods
jne
ja
out
mov
mov
push
dec
cld
int3
pop
push
and
addr16
dec
sbb
push
pop
rol
inc
cld
mov
das
je
in
push
iret
mov
jmp
pop
es
retf
jp
cmps
(bad)
cmc
and
cwde
mov
pop
adc
inc
mov
fidivr
(bad)
idiv
push
js
jo
iret
scas
(bad)
xchg
mov
cmp
pop
jno
rcl
imul
cmp
out
loopne
mov
scas
jge
rcr
bound
sub
mov
sub
aad
icebp
(bad)
mov
das
jbe
scas
in
loop
packuswb
xchg
mov
xchg
and
adc
ds
add
cmp
test
and
rol
repz
(bad)
adc
sbb
push
lock
xchg
and
push
popf
add
push
jmp
dec
xor
and
push
jmp
push
mov
inc
iret
clc
scas
push
mov
mov
mov
jbe
xor
sbb
jns
add
in
seto
jae
loope
inc
pop
mov
sar
push
scas
fnstsw
adc
mov
push
jp
(bad)
cmp
lock
push
je
shl
push
jae
cmpxchg
inc
mov
ja
sbb
or
dec
adc
jecxz
mov
stos
xor
and
icebp
ds
pop
ds
ret
jns
sti
idiv
dec
xchg
xor
cmp
pop
or
or
or
imul
pop
jne
popa
(bad)
int3
sub
or
sahf
sub
jb
test
stc
nop
sub
hlt
clc
pop
fdivrp
ret
call
nop
push
pop
int
adc
cmp
repz
in
dec
ss
xchg
bound
movs
mov
pop
sub
mov
loop
int
in
mov
inc
test
push
inc
fidivr
es
push
adc
in
xchg
sub
loopne
ret
gs
and
je
lds
inc
jo
pop
pushf
stc
(bad)
out
cmp
push
(bad)
aas
icebp
push
hlt
sub
xchg
sub
cld
inc
dec
in
jnp
sbb
add
mov
and
je
cmc
jo
jmp
ret
fnstcw
mov
pop
pushf
lock
cdq
call
movs
jae
dec
enter
enter
out
inc
and
jmp
xchg
imul
jmp
xchg
outs
(bad)
test
lea
fst
fwait
xchg
fnsave
(bad)
jns
(bad)
sbb
sub
mov
and
dec
loop
iret
inc
add
xchg
jl
pop
mov
scas
std
adc
inc
push
ja
pop
mov
jno
mov
cmp
push
mov
xchg
pop
rcr
lods
jmp
(bad)
xchg
mov
xor
imul
adc
mov
jmp
mov
mov
and
in
pusha
jecxz
aaa
retf
or
stos
sub
scas
fidivr
xor
mov
mov
sub
and
into
push
cmp
inc
mov
ficomp
mov
mov
mov
shr
push
lods
sub
mov
sbb
cmp
and
jae
jle
aas
dec
nop
sbb
lods
loop
fcmovu
pop
(bad)
pop
add
pop
test
pop
cdq
icebp
out
adc
pop
retf
xor
test
or
xor
and
xor
gs
sub
outs
or
sbb
ss
xor
adc
fcom
adc
mov
loopne
ds
in
mov
jl
xchg
add
lods
es
xchg
push
les
dec
mov
lea
cmp
fld
(bad)
jae
sub
push
das
ja
pop
je
lds
and
stos
sub
jle
pop
mov
addr16
mov
loope
cmp
jb
clc
jns
repz
add
jbe
scas
mov
sahf
outs
movs
loopne
cmp
inc
push
shl
leave
ret
dec
xchg
call
add
(bad)
call
adc
imul
mov
fcom
jg
ret
jmp
ds
out
shr
push
imul
jmp
int
fdivp
(bad)
retf
ja
out
cli
stos
mov
inc
loop
mov
out
sub
(bad)
add
std
ret
mov
(bad)
xchg
mov
lods
mov
sub
or
fist
adc
inc
push
loopne
mov
jne
sbb
lods
sub
in
lock
or
cmps
jns
sbb
pop
call
cmp
cmp
lods
and
jg
mov
lods
cmps
mov
lds
loope
cmc
xchg
mov
adc
inc
inc
add
pop
adc
div
sub
add
and
push
adc
xor
ss
mov
ja
xor
repnz
(bad)
pop
popaw
scas
je
pop
ja
scas
mov
cmp
cmp
ffree
add
dec
cmp
sub
fldcw
push
push
cmp
jge
inc
jge
xlat
test
out
mov
and
push
mov
in
outs
cmp
call
out
cmp
inc
fwait
cmp
imul
(bad)
mov
popf
cmp
cmp
pusha
aad
cmps
pop
(bad)
(bad)
shr
stos
cmp
popf
mov
call
adc
aaa
adc
ja
fadd
lods
mov
pop
iret
call
repz
push
jb
call
xchg
sub
outs
xlat
jl
sub
mov
push
push
mov
outs
and
mov
scas
push
adc
jae
enter
mov
aaa
lds
call
scas
mov
xchg
aas
or
shl
mov
push
daa
jl
and
push
and
aaa
cld
sub
(bad)
bound
and
add
out
push
scas
fnstsw
mov
retf
adc
mov
xor
clc
adc
sbb
dec
pop
test
pop
imul
fidivr
xor
mov
and
adc
or
or
sbb
js
test
push
xchg
push
movs
lahf
xchg
movzx
dec
push
out
mov
aam
mov
mov
adc
jo
or
in
ror
cmp
inc
stos
mov
jmp
cmp
mov
int
xor
mov
(bad)
daa
sbb
(bad)
adc
lds
cmp
xchg
mov
sbb
adc
adc
rcr
call
cmp
dec
sti
cmc
pusha
(bad)
pop
pop
aam
dec
vcvttss2si
mov
call
popf
popf
je
push
sub
adc
mov
test
fdiv
imul
pop
sbb
scas
mov
scas
aas
(bad)
in
retf
popa
fxch
mov
push
scas
sub
(bad)
jo
sahf
bound
aad
ret
ds
mov
sub
cmps
fwait
adc
pop
mov
sub
repz
push
pop
push
sbb
leave
not
inc
(bad)
scas
retf
hlt
xchg
mov
or
popf
pushf
push
aad
or
mov
mov
cmp
outs
xor
or
lods
add
cmp
xchg
bound
xor
ds
jb
enter
das
call
add
add
hlt
cmp
das
or
xchg
js
outs
popa
enter
iret
sub
adc
(bad)
mov
jno
add
addr16
push
lock
jmp
dec
in
imul
mov
lods
hlt
leave
or
ins
or
add
cmp
add
jmp
outs
xchg
mov
mov
inc
mov
lods
add
(bad)
in
movs
cmp
cmp
xchg
daa
sar
(bad)
es
in
test
imul
mov
mov
movs
or
call
shr
ss
imul
imul
icebp
ins
addr16
add
(bad)
fidivr
push
mov
arpl
adc
loope
dec
scas
adc
jno
jae
and
out
pop
nop
stc
imul
xor
mov
fs
xchg
stos
lock
xor
ins
or
retf
leave
in
mov
mov
push
stc
les
stos
inc
sbb
enter
add
out
dec
mov
inc
sub
sbb
xchg
in
push
jmp
mov
dec
mov
rcr
das
dec
dec
enter
ret
das
mov
fld
inc
div
in
iret
retf
loopne
jns
xchg
dec
(bad)
fcomi
push
push
icebp
cmps
mov
or
(bad)
mov
shl
out
mov
aas
mov
sbb
rcr
xlat
sub
push
jb
jo
pop
pop
xchg
inc
stos
aas
pop
push
cld
outs
stos
inc
push
sbb
lahf
imul
loope
out
dec
sti
les
mov
mov
mov
into
lea
mov
jmp
pop
and
sbb
arpl
inc
mov
mov
pop
pop
fdiv
mov
pop
leave
lods
popf
xor
adc
pop
push
data16
jns
pop
and
jns
shl
ds
xchg
push
jecxz
call
ss
fisttp
addr16
daa
test
mov
stc
mov
mov
sbb
mov
push
mov
int
retf
shl
sbb
xlat
jb
sub
pop
pop
sti
cmp
dec
cmc
mov
pop
mov
test
or
cmp
dec
out
popf
bnd
mov
add
or
xor
xchg
les
in
jno
mov
and
arpl
fwait
xchg
not
scas
shl
dec
xor
cmp
int3
jae
jno
jbe
(bad)
mov
cwde
push
sahf
or
jno
jne
sbb
test
in
inc
sbb
sahf
pop
dec
sbb
cmp
ret
or
push
int3
mov
and
sar
or
mov
sbb
push
mov
jnp
ins
add
iret
cwde
aas
retf
aam
fwait
int
and
adc
sar
mov
jmp
dec
cwde
fisttp
lods
out
dec
(bad)
out
mov
xchg
pop
adc
dec
xlat
xchg
loop
xchg
iret
imul
sbb
js
xor
xchg
mov
test
mov
sub
pusha
das
push
les
inc
mov
lods
sti
fidivr
ret
pop
pop
test
data16
jns
pop
arpl
fild
xchg
pop
xchg
retf
outs
(bad)
ja
jg
popa
sub
int
sub
fdiv
sbb
or
fsubr
inc
ja
cmps
and
dec
pop
push
mov
adc
sti
sti
jge
sbb
addr16
cmp
movs
inc
sbb
aas
mov
popf
xchg
iret
arpl
loop
shl
hlt
xchg
cs
fisttp
sar
gs
mov
pop
mov
stos
outs
nop
in
dec
(bad)
jl
rol
lods
pop
aas
nop
mov
cmp
mov
or
movs
out
xchg
sbb
sbb
xchg
mov
or
xchg
popf
push
and
js
dec
mov
(bad)
jle
mov
xor
out
jge
clc
add
push
add
ds
pop
aas
(bad)
hlt
push
ret
imul
dec
pop
sti
inc
or
xlat
call
jl
mov
pop
or
mov
loope
outs
stc
addr16
xor
sar
lods
adc
mov
adc
adc
cld
(bad)
mov
pop
cmp
xchg
shr
and
fmul
or
dec
je
enter
sti
jae
lock
dec
inc
jmp
pushf
sbb
pop
pop
aam
push
jecxz
imul
lods
stos
jbe
mov
aaa
ins
mov
repnz
enter
dec
dec
or
clc
mov
cmp
add
push
loopne
pop
cli
xlat
xchg
xchg
movs
ret
ins
retf
aam
bound
xchg
mov
jecxz
dec
pushf
int
inc
xchg
push
(bad)
sti
call
and
pop
in
xor
ja
sbb
ror
cmp
xchg
push
mov
xchg
(bad)
(bad)
xchg
mov
imul
push
and
lock
mov
xor
imul
jp
cwde
jne
dec
pop
iret
sbb
mov
test
outs
int3
mov
test
pusha
ss
icebp
and
jmp
dec
pusha
addr16
addr16
cmps
and
ins
pushf
loopne
mov
ds
loopne
arpl
not
scas
cmp
stos
retf
mov
add
out
xchg
sub
xor
jge
aam
lea
xor
jns
enter
xor
test
xchg
push
mov
hlt
mov
(bad)
int
dec
push
ja
mov
jno
cmp
test
movs
mov
mov
sbb
cmps
scas
jbe
dec
dec
sbb
mov
shl
loopne
sbb
es
dec
add
xor
xchg
add
popf
js
jp
inc
xor
in
inc
sti
out
int
sub
mov
mov
push
stos
pop
push
arpl
inc
cmc
or
ja
adc
cmp
pop
or
clc
add
mov
cdq
nop
mov
idiv
call
lds
rcr
inc
lods
in
es
xchg
shl
outs
mov
ins
push
dec
sbb
out
sbb
js
and
adc
mov
sti
pop
push
out
cwde
std
adc
sbb
ror
sti
outs
sbb
jne
pop
dec
xlat
pusha
leave
xchg
dec
xor
jb
fstp
add
mov
xchg
pushf
in
pop
ret
dec
pop
stc
cmc
daa
test
jb
pushf
into
adc
dec
lahf
pop
loopne
mov
jl
loopne
mov
stos
mov
mov
retf
div
repnz
stos
das
or
xchg
inc
jbe
inc
push
les
pop
dec
pop
inc
test
pop
(bad)
jo
pop
(bad)
lods
cmp
outs
mov
inc
rcl
shl
stos
je
jmp
jno
ror
movs
jp
call
test
mov
inc
outs
cmp
add
cmp
js
int3
scas
imul
xor
and
sbb
je
outs
or
daa
mov
movs
cld
les
adc
add
push
or
mov
mov
sbb
dec
mov
jl
ja
fwait
pop
retf
add
inc
enter
daa
in
cdq
pop
aam
push
mov
pop
lahf
fdivr
pop
pop
retf
pushfw
imul
add
mov
pusha
push
mov
cli
mov
dec
jmp
add
jne
mov
or
mov
in
fdiv
pop
in
mov
xor
rcr
sbb
out
bound
gs
cdq
mov
pop
das
pop
gs
(bad)
aas
mov
xor
jnp
outs
adc
sub
adc
and
ffree
mov
out
push
or
test
mov
push
cmp
adc
popf
(bad)
shl
pop
pop
fstp
cld
mov
lahf
(bad)
(bad)
pop
iret
fs
xor
and
imul
pop
movs
lods
add
sub
aam
and
mov
inc
test
push
xchg
fisubr
add
or
jo
test
jmp
push
inc
cmp
test
je
mov
and
pop
adc
xor
cwde
jge
jg
stos
or
dec
lea
scas
movs
mov
add
enter
pop
jno
pushf
push
pop
call
sti
test
and
xlat
mov
mov
mov
ja
nop
imul
mul
cld
dec
into
jle
dec
xchg
add
ss
dec
retf
out
jge
(bad)
nop
cld
icebp
sbb
js
mov
int
inc
stos
repz
or
pusha
lds
xchg
and
pop
and
sub
mov
lds
(bad)
call
jae
sub
xor
mov
pop
mov
add
push
sub
sbb
pop
xchg
fmul
(bad)
jle
jnp
fst
mov
aam
or
cmp
mov
imul
js
adc
fadd
adc
cmp
data16
cmp
jbe
fs
cmc
xor
popa
stc
test
or
xor
xchg
outs
ror
sbb
les
add
add
push
xchg
(bad)
dec
mov
and
mov
out
movs
cmp
cli
or
push
push
shl
ja
and
aas
mov
scas
lods
and
out
jb
outs
mov
dec
add
ins
xlat
sbb
fucomip
push
test
sbb
shl
sbb
es
pop
aad
aaa
fild
mov
push
je
aam
clc
inc
fmul
out
add
dec
popa
cld
and
sbb
dec
ret
sub
push
inc
mov
mov
in
in
lahf
cwde
leave
in
fldcw
mov
pop
mov
add
xchg
adc
push
imul
and
jo
fwait
jp
sti
dec
xor
push
scas
inc
sbb
push
popf
jbe
ret
repnz
cs
hlt
(bad)
fidivr
mov
mov
call
jne
cmp
into
xchg
leave
fcomp
fcom
or
fs
or
mov
cmp
pop
dec
mov
loop
sahf
or
outs
cli
lods
or
or
xchg
in
nop
ds
cli
fs
das
aad
xor
stos
in
lods
mov
fstp
je
mov
dec
sub
(bad)
ret
int3
cmp
xchg
inc
pop
cli
dec
push
(bad)
ficomp
add
push
mov
pop
ja
aas
ret
nop
not
ret
inc
adc
popf
pop
jle
adc
enter
pushf
aas
pop
mov
popa
mov
sbb
mov
loope
dec
ds
loope
sub
cs
cdq
outs
int
jo
int3
push
pop
ins
shl
push
push
pop
jnp
mov
mov
lea
and
jecxz
movs
repz
mov
cvtps2pd
push
pop
sbb
or
push
pushf
mov
jle
add
add
sahf
in
jns
in
sub
cld
hlt
sub
mov
cli
add
sbb
cmc
and
cmp
(bad)
icebp
mov
jl
push
sbb
in
mov
cdq
and
sbb
push
popa
dec
in
test
inc
movs
cld
popf
push
xor
jbe
pop
imul
mov
push
push
lds
pusha
push
in
es
call
test
shr
sbb
add
push
sub
js
sub
pextrw
es
sub
pop
ss
in
cdq
out
add
push
jecxz
xchg
xchg
mov
push
les
test
js
dec
lods
je
les
cmp
pop
fisttp
mov
push
gs
sub
cs
int
pusha
dec
setne
or
push
pop
jle
gs
les
pop
push
mov
or
mov
sahf
mov
fisttp
aas
dec
sbb
enter
xor
cmp
test
mov
call
cwde
std
outs
mov
add
xchg
jbe
and
ins
adc
sbb
cli
lea
call
inc
jmp
and
loopne
sti
push
mov
add
(bad)
je
stos
(bad)
gs
and
dec
mov
mov
adc
xor
(bad)
mov
xchg
adc
push
cli
ds
xchg
or
(bad)
cmp
cdq
repz
movs
out
push
in
add
push
out
and
fld
ror
jbe
push
and
pop
out
dec
bound
fdivr
push
and
jle
nop
mov
cmp
inc
xchg
push
cmps
mov
mov
shr
cwde
mov
xchg
mov
jns
dec
cmp
(bad)
dec
loopne
adc
cwde
aaa
xor
stc
pop
icebp
cs
jg
repz
sub
mov
(bad)
lock
lods
nop
test
es
ja
add
sti
push
out
mov
ror
mov
add
mov
cmp
xor
dec
ret
dec
rcr
aam
je
push
and
push
fadd
outs
cmc
fs
std
mov
xor
hlt
aaa
js
dec
adc
xor
xchg
push
ins
ja
jp
lea
add
mov
fist
mov
js
adc
mov
xchg
into
(bad)
sbb
stos
lahf
lea
jbe
and
inc
outs
jno
inc
cmp
cdq
pusha
cdq
fnstsw
mov
xchg
jg
aaa
js
mov
pop
sub
cmp
pop
push
test
je
in
sbb
sbb
sub
dec
jle
xchg
push
cmp
mov
dec
adc
or
and
or
jmp
lea
dec
xor
xchg
je
loop
hlt
xchg
adc
add
pop
pop
stos
push
lods
retf
dec
jmp
int3
scas
ficom
test
fisttp
popf
sub
test
rcr
adc
movs
in
out
xchg
js
adc
addr16
fbld
outs
aaa
push
sar
mov
daa
adc
push
scas
clc
inc
inc
ror
loop
imul
mov
xor
xor
inc
loopne
push
and
out
int
dec
test
int
add
xchg
xor
cmp
adc
mov
sbb
pop
imul
mov
mov
lock
pop
and
cmp
dec
out
and
dec
jl
shr
(bad)
loope
repz
mov
les
cmc
dec
sahf
xor
out
dec
int
xchg
push
les
(bad)
mov
sub
mov
sbb
mov
movs
xor
ins
dec
and
jbe
bnd
retf
nop
loopne
popf
das
movs
jo
push
idiv
aam
sub
retf
adc
das
cmp
xor
je
ret
xchg
push
in
cmp
jl
adc
ret
cmp
add
cmps
pop
lods
xor
dec
pusha
xchg
adc
and
adc
imul
mov
inc
mov
cmp
pushf
loop
or
xchg
retf
gs
mov
sub
js
fmul
sbb
ror
or
leave
scas
rcl
inc
aas
jae
out
(bad)
sub
test
jl
adc
push
movs
imul
xchg
mov
inc
mov
inc
mov
dec
jne
dec
out
arpl
les
pop
add
loop
mov
mov
shl
bound
and
jbe
jno
loope
push
retf
inc
ss
pop
rol
lods
loopne
mov
or
jae
not
push
add
cmc
daa
push
std
jnp
scas
pop
out
or
or
cdq
int
sub
scas
enter
xchg
mov
mov
cmp
test
test
add
pop
mov
dec
push
sub
mov
inc
mov
mov
cmp
mov
fnstcw
pushf
cdq
mov
out
xor
pop
dec
ds
aam
xor
mov
ds
movs
fnstsw
mov
(bad)
xchg
ins
xor
shr
(bad)
cmp
pushf
dec
pop
repnz
fwait
and
loopne
lahf
xor
aaa
fcom
dec
xchg
inc
xchg
(bad)
lods
inc
(bad)
inc
ins
xchg
test
cmp
aam
repnz
mov
pop
in
jecxz
jp
shr
cmp
call
fisubr
mov
leave
lea
in
add
int
ins
loope
pop
out
push
outs
outs
mov
dec
mov
sbb
call
cwde
ret
xchg
jmp
push
es
add
xor
aad
jbe
add
daa
je
mov
xchg
(bad)
pop
cmp
int3
ret
mov
jecxz
nop
daa
jnp
ins
mov
idiv
sahf
add
sti
shr
(bad)
jae
mov
jmp
call
clc
shl
inc
loopne
ds
gs
jmp
or
ss
aaa
idiv
ret
movhps
xchg
inc
in
pusha
lea
shr
push
out
mov
cmp
dec
jae
dec
or
push
jp
jbe
xchg
out
in
mov
movs
mov
xor
out
pusha
mov
inc
jo
sub
jno
mov
xchg
ins
aas
push
hlt
adc
xchg
push
sar
les
pop
jg
(bad)
pop
jle
and
mov
pop
mov
xchg
mov
push
dec
dec
sbb
push
pusha
stos
std
movs
cmp
int
cmp
and
mov
adc
xchg
and
jg
xor
loopne
xor
mov
leave
repnz
(bad)
adc
int
mov
mov
jbe
and
pop
iret
sar
inc
scas
out
adc
ds
clc
sub
mov
fs
mov
xchg
pop
addr16
jae
pop
or
sub
fs
push
push
xor
push
retf
gs
(bad)
repz
stc
shl
inc
out
xchg
and
xor
and
je
fdiv
pusha
mov
xor
arpl
sub
outs
pop
inc
(bad)
push
movs
imul
test
or
(bad)
mov
cmp
ja
not
pop
mov
enter
clc
(bad)
dec
movs
shl
jmp
inc
popf
mov
or
push
inc
push
xor
jnp
sbb
loop
sbb
push
jbe
les
push
inc
iret
mov
(bad)
ins
cdq
fisub
and
scas
mov
loop
xchg
out
xchg
pop
repnz
or
push
div
imul
and
loop
xchg
adc
loope
test
sbb
add
loope
inc
or
pop
in
fwait
data16
push
mov
aam
and
mul
pop
leave
mov
shr
ja
inc
xlat
sbb
stc
jl
jne
mov
sbb
(bad)
movs
in
and
xor
push
lods
jg
data16
adc
cmp
int3
add
jmp
leave
cs
xlat
scas
pop
jle
icebp
retf
int
lea
pop
pop
ss
cdq
aaa
and
adc
int
dec
aam
mov
sbb
out
cmp
xor
xor
pop
sub
xchg
dec
and
rcr
lods
bound
cmp
ret
push
xchg
and
shr
jge
xchg
mov
add
push
sub
lods
add
jns
push
or
mov
and
cdq
add
in
jle
sbb
sub
sub
mov
push
xchg
adc
inc
out
scas
jp
xchg
adc
and
and
(bad)
add
mov
ins
scas
sbb
adc
lock
loopne
xor
gs
adc
shl
ins
or
pop
mov
jnp
aaa
(bad)
and
sbb
movs
jno
outs
pop
mov
dec
xchg
out
cmp
sub
js
or
mov
outs
jnp
in
mov
and
or
int3
xchg
or
push
jnp
ror
push
mov
or
call
adc
push
out
xchg
icebp
xchg
inc
int3
inc
push
pop
sub
(bad)
call
movs
jmp
retf
rcl
inc
lds
and
test
fld
mov
retf
pop
mov
rol
xchg
retf
mov
and
mov
mov
pop
ficomp
dec
shr
mov
hlt
or
ret
ins
in
cmp
cmc
cmp
inc
sar
sub
cmp
mov
cwde
or
pop
mov
jle
jg
jb
test
mov
mov
xlat
pop
sub
or
jge
pop
(bad)
stc
pop
ret
fsub
jecxz
jmp
inc
sbb
xor
jge
gs
retf
fcomi
call
rcl
lock
in
lods
out
rcr
scas
jmp
inc
xlat
fwait
lds
push
cmp
xor
lods
aaa
ss
or
mov
gs
lock
sub
stos
push
pushf
(bad)
rcl
ficom
leave
and
out
and
rcr
mov
iret
sub
test
bswap
cmc
lahf
test
sbb
cmp
(bad)
mov
add
fwait
jb
cld
mov
test
dec
cli
test
arpl
pop
sub
pusha
cmps
inc
inc
pop
add
mov
fisttp
enter
cmp
jl
je
xchg
sub
jae
mov
sti
pop
lods
imul
call
add
mov
push
sbb
aaa
mov
jno
lods
xchg
jmp
inc
icebp
loope
sbb
je
data16
mov
cmp
jg
or
or
shl
and
push
push
mov
mov
aam
mov
cmp
lds
jl
nop
imul
mov
out
sub
jns
hlt
inc
out
xchg
lock
(bad)
cmp
add
lds
mov
int
mov
pop
sub
nop
cmc
mov
pop
dec
out
jp
add
dec
lods
sbb
cmp
mov
jg
dec
int
mov
cmc
popf
ror
into
enter
neg
add
cmp
adc
repnz
sub
ss
dec
add
jne
jge
xor
push
or
sub
push
xor
and
inc
(bad)
(bad)
adc
mov
xchg
push
cld
out
or
lods
xadd
pushf
mov
xchg
cmps
(bad)
cmp
ins
or
fwait
jns
pushf
(bad)
ds
inc
sbb
dec
add
add
data16
std
fs
and
test
test
sub
(bad)
movs
dec
in
shl
and
dec
popf
daa
ss
dec
or
mov
xchg
adc
mov
cmp
movs
sub
arpl
pop
inc
adc
sub
(bad)
jno
lahf
and
(bad)
fsubp
arpl
cmps
jno
push
stc
(bad)
cmp
push
sbb
xchg
in
xor
movs
scas
mov
mov
in
jg
jge
mov
in
fild
retf
aas
add
and
sub
gs
popf
mov
jnp
sub
inc
jne
popf
outs
aaa
adc
sbb
xchg
pop
into
fisttp
inc
and
adc
adc
inc
pop
scas
and
add
push
sti
bound
mov
(bad)
mov
jl
js
sub
cli
inc
cmp
stos
mov
loopne
sti
pop
push
inc
push
xchg
mov
int3
cmp
jnp
rcr
xchg
int
fcom
int
popa
shr
rcr
cmp
jno
mov
int3
scas
retf
mov
icebp
gs
icebp
dec
mov
jmp
inc
add
push
mov
(bad)
push
or
add
push
sbb
(bad)
push
call
test
jle
xchg
mov
psubd
pusha
mov
sti
in
mov
xor
mov
scas
inc
add
jmp
pop
and
jns
xchg
loopne
lods
mov
out
dec
xor
fild
scas
in
inc
sub
in
cdq
and
int3
xchg
arpl
dec
inc
xor
test
add
mov
pop
or
shr
cdq
inc
pop
push
retf
test
call
pop
jp
test
adc
and
cmp
jnp
stc
sub
pop
ret
mov
cwde
jns
out
mov
cmp
push
xchg
inc
hlt
pop
pop
or
cli
pop
(bad)
jne
(bad)
out
test
nop
jle
push
adc
jle
dec
xor
pop
ret
ss
int
in
pop
cmps
jle
cwde
shl
jl
dec
dec
mov
aas
rol
pop
movs
scas
hlt
jmp
push
imul
pop
xor
dec
int
repz
dec
test
mov
ret
rcl
(bad)
xchg
mov
ret
int3
or
cmp
jmp
cld
mov
xor
jp
inc
pushf
jge
inc
out
aam
dec
call
adc
jae
mov
xlat
sub
push
push
inc
push
mov
adc
inc
test
std
mov
mov
add
mov
or
adc
fistp
push
pop
add
ror
sbb
mov
mov
iret
cmp
jno
lock
aad
cmp
pop
lods
out
pop
sbb
call
nop
movs
out
test
out
jmp
pop
sbb
ins
add
xchg
daa
mov
jle
jno
(bad)
enter
(bad)
fbld
mul
jmp
mov
pop
pop
and
mov
cs
retf
lods
cmp
in
movs
sti
xor
nop
jne
pop
out
aad
jno
movs
pusha
and
lea
mov
(bad)
push
xchg
shl
test
mov
aaa
xlat
pop
psrlq
shl
ja
mov
mov
outs
repnz
add
shl
inc
add
mov
cli
enter
add
cdq
mov
mov
ret
iret
xchg
div
popf
inc
loop
sbb
arpl
pushf
sub
inc
jge
inc
mov
or
add
stc
jmp
pushf
outs
sub
fcmovnu
js
add
jns
nop
sub
lea
push
or
outs
pop
lds
sub
fimul
int3
pop
sbb
xchg
nop
rcr
ds
fsubr
jbe
(bad)
fbstp
movs
pushf
and
pop
xchg
das
in
(bad)
xor
nop
mov
inc
mov
test
mov
jnp
aad
das
test
pop
fwait
jge
or
xchg
dec
retf
push
push
(bad)
out
fsub
test
shr
in
add
add
mov
mov
pop
not
or
rol
ret
sbb
jmp
out
xchg
lea
ror
call
aad
sbb
(bad)
mov
leave
std
cmps
lahf
retf
add
clc
push
imul
jmp
pop
test
pop
xor
pop
call
cmp
cmp
stos
ret
adc
adc
xor
leave
cmps
pushf
inc
cmp
imul
call
cmps
push
scas
sub
sbb
xchg
je
stc
repnz
loope
clc
movs
pop
mov
cmp
jle
ret
das
jl
ret
std
call
jae
daa
aam
fisub
jg
ror
jne
dec
bound
in
sub
jp
cdq
lahf
sbb
daa
div
and
cmp
test
push
dec
and
jge
cmp
int
popa
push
and
xchg
jnp
pushf
sbb
mov
jb
jl
pop
push
out
push
xchg
pop
sbb
push
std
(bad)
in
pop
enter
test
add
dec
out
mov
loop
ja
lds
loope
ss
mov
hlt
out
and
sbb
ins
ja
pop
and
cmps
bsr
icebp
shl
add
mov
or
cdq
in
mov
push
arpl
shl
call
xchg
pop
and
cwde
aam
call
mov
adc
sahf
sbb
clc
add
mov
mov
cs
push
xor
ret
inc
sahf
inc
inc
stc
inc
int
ret
jg
shl
mov
lahf
test
repz
es
aas
inc
in
inc
sbb
cmc
pop
cmps
ror
or
dec
je
aas
aas
imul
hlt
fst
mov
inc
jnp
push
arpl
inc
pop
lods
sbb
inc
out
mov
mov
fidivr
inc
inc
lock
push
push
fist
pop
cli
in
inc
(bad)
out
neg
cmp
mov
in
sar
cmps
lods
into
call
sbb
mov
in
int
sbb
cld
xchg
add
lods
jb
in
cmp
daa
(bad)
sbb
mov
out
add
daa
addr16
sbb
and
dec
push
add
clc
ins
mov
lock
pushf
bound
daa
push
pop
push
ror
inc
jmp
push
mov
dec
cld
jne
retf
(bad)
jl
mov
jnp
(bad)
retf
retf
mov
and
test
in
mov
mov
push
xchg
cdq
mov
pop
out
std
mov
clc
or
cmp
outs
cmp
pop
cmp
movs
mov
push
(bad)
ins
retf
imul
or
inc
jmp
out
repnz
fstp
pushf
imul
sbb
mov
outs
pop
mov
in
nop
lock
sub
nop
mov
test
and
push
or
inc
cmp
push
mov
inc
mov
into
lods
jno
jno
pop
fdiv
sub
test
and
ss
xor
sbb
ins
and
jmp
frstor
mul
retf
sbb
lds
imul
add
adc
xchg
xchg
(bad)
int3
sahf
mov
jmp
pop
les
cli
jno
push
out
push
(bad)
mov
jne
cmps
xchg
xchg
adc
lods
or
jo
xor
hlt
xor
nop
add
inc
sbb
xchg
movs
out
call
mov
jle
ror
inc
pop
out
fist
ror
cmp
xchg
push
mov
mov
mov
jae
cmp
aad
imul
call
sbb
pop
adc
pop
fst
xchg
push
rcl
cmp
cmp
cmps
fdivr
loopne
mov
push
inc
cli
inc
ja
xchg
pop
push
sbb
mov
test
cmp
xchg
sub
mov
(bad)
stos
js
cmps
in
dec
or
mov
stos
cmp
mov
xor
or
dec
and
outs
arpl
arpl
cwde
cmp
dec
icebp
xchg
push
jmp
sbb
ins
in
movs
lods
and
popa
push
jae
fnsave
outs
test
gs
mov
std
cmp
ins
mov
(bad)
retf
and
aam
sbb
or
leave
sbb
mov
iret
(bad)
xchg
or
cmps
cmc
std
inc
jecxz
lods
cmps
or
pushf
arpl
ja
inc
mov
xchg
bnd
cmp
cs
les
int
out
and
cmc
ret
out
in
repz
sub
fistp
(bad)
push
mov
shl
sbb
mov
cmp
in
test
les
or
mov
ds
push
ja
test
xor
jp
xor
mov
pop
jg
pop
aam
sti
and
stos
sbb
fwait
push
mov
adc
or
inc
sbb
popa
xchg
sub
enter
dec
pop
mov
mov
sbb
dec
inc
mov
push
lds
and
ss
jnp
pop
imul
cmp
fbstp
idiv
mov
jno
js
mov
and
cwde
jmp
mov
add
jmp
lods
jle
or
loope
or
gs
outs
adc
jl
xchg
test
mov
cld
inc
fadd
push
mov
inc
scas
cmovo
or
adc
pop
sahf
mov
push
mov
test
sub
cmp
hlt
dec
scas
rol
(bad)
sub
lock
push
ret
sti
loope
loope
mov
sub
jns
sub
jp
jae
add
mov
and
cmp
sahf
shl
outs
imul
int3
mov
cmps
loop
mov
inc
es
les
ds
fs
add
sub
popa
add
xchg
scas
mov
loopne
mov
mov
popa
inc
sbb
add
addr16
sbb
mov
pop
jno
imul
aas
mov
sub
pop
sub
imul
add
es
loop
dec
add
(bad)
dec
into
sbb
cli
mov
push
mov
fdiv
jo
push
(bad)
not
xchg
aad
out
shr
push
in
sub
cli
push
int
xchg
mov
adc
sar
mov
cmp
in
xchg
sub
out
add
ror
je
std
enter
or
adc
dec
scas
test
jbe
pusha
mov
mov
xchg
adc
stos
and
jmp
xchg
pop
mov
out
jae
shl
dec
jl
shr
ins
sar
pop
lds
lods
popa
pop
jno
inc
mov
fst
sbb
pusha
adc
repz
fcomp
lds
mov
cmp
jae
mov
mov
cmp
mov
in
int3
popf
and
stos
jmp
rcr
add
or
and
call
jmp
bound
iret
ja
mov
fsub
addr16
leave
xchg
and
dec
pop
sbb
and
pop
adc
add
pop
ds
sub
imul
mov
mov
cld
(bad)
jp
lock
cmp
into
sti
fwait
mov
mov
mov
add
mov
movs
test
or
adc
jno
out
cmc
shl
mov
add
arpl
fbld
daa
repnz
je
in
popa
adc
fsubr
retf
ja
jg
das
stos
stos
pop
mov
and
test
and
jo
ds
adc
mov
(bad)
and
add
test
add
xchg
test
idiv
mov
repz
out
push
outs
xor
inc
call
mov
aam
mov
arpl
(bad)
jmp
cmps
mov
nop
mov
mul
mov
jno
push
mov
scas
lods
outs
repnz
cs
mov
inc
mov
stos
dec
pop
fucom
(bad)
pop
xchg
add
jnp
sub
jmp
cmp
test
pop
or
test
cmc
pusha
or
inc
xchg
mov
arpl
daa
jge
je
sbb
arpl
ins
cmp
pop
xchg
inc
add
lods
nop
xor
sub
xchg
cdq
adc
sbb
shl
ficomp
cmp
pop
sub
adc
(bad)
sahf
dec
icebp
adc
mov
rol
es
sub
cmp
mov
dec
inc
test
repz
inc
mov
cmp
or
jnp
inc
mov
mov
dec
vpshlq
mov
mov
push
mov
mov
test
(bad)
mov
adc
jo
lahf
fiadd
push
sti
xchg
scas
out
stos
fist
or
jo
loope
hlt
mov
bound
mov
xor
pusha
out
call
cli
inc
lds
adc
js
xor
xor
pop
sub
sbb
inc
jmp
aam
stos
and
pop
adc
push
loop
scas
out
cmp
or
push
jle
sti
push
repnz
cmp
adc
mov
call
arpl
stos
lods
(bad)
bound
xchg
mov
sub
mov
sub
arpl
popa
inc
sbb
(bad)
int3
aam
int
xchg
mov
mov
jecxz
inc
sbb
xchg
cmp
xlat
int3
adc
mov
lods
xor
inc
add
int3
adc
or
inc
mov
popa
imul
inc
pop
push
push
jp
ins
jecxz
adc
add
mov
adc
dec
mov
lahf
sub
jbe
leave
mov
rcr
sbb
not
or
inc
outs
pop
inc
jb
mov
leave
sub
mov
repz
xor
aam
push
push
jne
lea
dec
or
in
xchg
test
jmp
sti
mov
clc
xor
(bad)
adc
add
(bad)
icebp
mov
adc
jmp
sbb
and
jmp
ss
fcom
cmp
dec
pop
out
sub
dec
sbb
data16
sub
daa
mov
add
jne
fwait
cli
fstp
push
adc
and
sti
push
dec
mov
adc
(bad)
push
mov
sbb
push
cli
pop
loop
push
imul
sub
sahf
(bad)
(bad)
daa
sbb
dec
popf
push
sbb
sbb
shl
leave
fistp
fcmovnu
xchg
mov
push
stc
xchg
cmps
or
push
xor
repnz
dec
dec
mov
call
cmp
cwde
jne
int
pop
xor
stos
fs
inc
cmc
mov
mov
xor
shr
mov
push
enter
shl
jg
(bad)
imul
and
jle
sbb
mov
xchg
into
jmp
inc
stos
lds
dec
mov
test
ja
sub
inc
add
dec
add
cmp
sub
mov
loope
mov
push
push
outs
mov
inc
adc
dec
not
lahf
cmp
pop
(bad)
push
xor
outs
jno
mov
int
lea
sbb
into
cwde
dec
pop
shl
push
sub
inc
(bad)
in
fild
out
shr
call
(bad)
jae
(bad)
mov
mov
mov
je
jg
pop
pushf
cmp
in
fs
pop
sbb
lods
mov
mov
dec
fwait
jp
jg
fnstcw
sbb
movs
push
adc
xchg
xor
mov
stc
outs
sbb
cdq
sub
sub
outs
out
in
es
or
add
in
cmp
add
xchg
xchg
std
mov
icebp
adc
sbb
cdq
leave
aad
arpl
data16
or
xchg
cmp
inc
or
sbb
jo
loop
ret
sub
push
or
adc
dec
xchg
movs
aaa
inc
cmps
fst
daa
out
jne
xchg
push
mov
adc
mov
(bad)
push
jge
mov
and
mov
dec
xchg
outs
sub
adc
cmp
imul
(bad)
cmp
cdq
ret
stc
cmp
jecxz
and
popf
ds
sbb
jae
and
in
ins
cmp
(bad)
cmp
sub
mov
repz
lods
retf
cmp
imul
pop
add
stc
mov
test
push
call
adc
pusha
mov
aas
ins
jle
dec
dec
aaa
int
pushf
lds
and
cmps
pop
jbe
(bad)
jmp
xor
retf
fs
out
mov
xor
jge
pop
retf
cmp
ret
push
cmc
lock
mov
add
and
push
cmp
stos
inc
packssdw
cmps
sahf
xchg
lock
scas
add
add
adc
mov
repz
xlat
pop
sbb
jmp
pop
inc
inc
leave
and
mov
sahf
or
(bad)
aad
arpl
imul
sub
adc
mov
cmp
and
outs
and
pop
jb
popa
repz
rcl
xchg
push
cmps
push
inc
mov
pop
das
mov
cs
jo
inc
fs
outs
push
outs
int
mov
sub
adc
pop
pop
pop
pop
sub
clc
jge
dec
sub
outs
dec
nop
aas
loopne
xor
int
nop
arpl
mov
int
cdq
sbb
(bad)
jle
outs
xchg
or
mov
xchg
push
pop
ja
inc
cmp
cld
sub
push
test
push
pusha
pop
rol
aas
and
fsubr
add
jmp
lods
mov
pop
and
das
sbb
(bad)
ret
jo
lahf
fwait
cli
push
mov
jmp
jmp
(bad)
jmp
sbb
adc
and
ja
rcr
xor
pop
das
call
pop
cwde
mov
xor
popa
cld
xchg
(bad)
into
mov
bound
les
movs
or
mov
ror
mov
add
mov
aaa
call
push
add
cmc
and
jmp
movs
dec
imul
daa
dec
push
out
ss
cld
adc
ror
je
mov
inc
jbe
daa
xchg
mov
fnstsw
das
ret
fwait
add
fadd
je
push
daa
inc
mov
hlt
(bad)
lea
call
mov
adc
test
(bad)
movs
aas
or
and
pop
sbb
retf
jae
fisttp
pop
dec
cli
in
jbe
push
inc
jnp
fwait
imul
push
mov
in
mov
jle
sbb
call
push
jno
jnp
test
lods
sub
sbb
(bad)
(bad)
ret
jp
das
pop
push
xchg
fsubr
pop
sbb
icebp
xchg
mov
(bad)
and
inc
loop
mov
jle
adc
push
fs
fisub
imul
dec
retf
daa
adc
bound
iret
inc
inc
jmp
add
pop
fidiv
inc
pop
jbe
jns
in
push
stc
movs
xor
inc
rcr
mov
and
xchg
mov
sbb
mov
ja
cmp
sub
dec
call
ret
enter
hlt
retf
sub
or
mov
mov
(bad)
das
xor
repz
xchg
dec
shr
xchg
ins
cmps
lds
imul
sub
jns
mov
mov
xchg
and
shl
ja
or
cmp
clc
lea
mov
pop
out
adc
jg
scas
div
add
cdq
clc
mov
or
pop
les
mov
fist
or
and
cmp
push
inc
jp
fwait
jb
shl
jo
daa
data16
adc
or
in
jae
ins
adc
sbb
call
jp
ins
cmp
cmp
fcomp
push
int3
movs
xor
xor
cwde
je
mov
shl
and
call
scas
cs
test
mov
dec
xchg
stos
and
dec
xchg
push
ja
xchg
aas
add
xor
or
out
sahf
pop
add
jns
mov
add
(bad)
inc
mov
int
xchg
pop
lods
or
imul
shr
cdq
out
dec
xchg
out
int3
add
popf
push
pop
cld
inc
mov
sub
mov
(bad)
jecxz
ss
fldcw
xchg
aas
jnp
data16
outs
arpl
add
loopne
pop
pop
cmps
cmp
cli
inc
pop
pop
hlt
sub
pop
mov
mov
sbb
test
cli
adc
or
repz
cdq
cmp
pop
inc
jmp
neg
xchg
mov
neg
js
bound
lea
jge
ins
mov
xchg
adc
cdq
dec
mov
or
xchg
sub
es
jecxz
mov
in
jb
imul
xor
pop
push
sbb
add
or
mov
cmp
mov
mov
xor
inc
and
pushf
and
pop
and
push
idiv
pusha
ror
sbb
jmp
adc
pop
and
scas
loop
xchg
(bad)
push
dec
cwde
adc
aas
jns
cmp
dec
and
cli
jno
adc
(bad)
jg
mov
jge
dec
add
pop
jmp
and
pop
(bad)
pop
inc
xor
idiv
fcomp
imul
dec
or
pop
sub
out
fdiv
xor
mov
(bad)
hlt
jne
fwait
cmc
ror
mov
iret
jbe
xchg
fsubrp
call
vminsd
cmp
jbe
jne
jno
ins
xchg
and
les
cs
sbb
out
je
jae
dec
or
mov
jp
mov
jb
inc
add
add
popf
mov
sub
lods
or
imul
push
mov
add
adc
imul
mov
add
sbb
push
int
js
out
bound
inc
xor
or
push
(bad)
retf
xchg
fisub
mov
mov
scas
gs
and
popa
js
inc
stos
add
push
sbb
jge
sbb
inc
jle
scas
aas
cli
(bad)
fbstp
sbb
push
and
push
in
(bad)
xchg
mov
js
mov
mov
cmp
pop
add
loope
test
in
inc
xchg
or
push
rol
sub
jno
xchg
xchg
xchg
mov
jge
jmp
mov
or
sahf
aaa
push
mov
stc
mov
mov
out
ins
loopne
inc
sub
mov
sub
dec
aam
xchg
fist
mov
lahf
test
and
pop
cmp
sahf
outs
pop
scas
xor
push
jg
mov
or
fdivr
addr16
pop
pop
or
leave
cmc
push
or
enter
push
mov
loop
xor
mov
xchg
pop
mov
jg
mov
fstp
jbe
pop
mov
mov
addr16
jbe
push
push
fwait
or
out
adc
(bad)
repz
mov
int
mov
mov
jns
rcl
fstp
test
push
lahf
cmc
xor
and
sbb
jp
jl
sbb
scas
fcomp
mov
pop
aad
mov
lods
pop
ret
mov
cmp
test
add
sbb
scas
add
jb
js
and
add
hlt
out
(bad)
mov
push
jno
bound
ret
mov
sbb
das
das
ss
adc
and
outs
inc
pslld
jmp
add
fwait
jge
and
test
push
test
and
jnp
leave
cmp
js
and
sub
and
fnstenv
pop
cmp
xchg
pop
loope
into
dec
cmp
mov
pop
sbb
out
popf
rol
das
mov
mov
repz
or
sbb
pusha
mov
inc
rol
fstp
mov
xchg
add
outs
add
sub
dec
ret
pop
xchg
cmp
cmc
mov
sub
pusha
test
test
ret
inc
xchg
mov
push
pop
vcvtps2pd
pop
dec
cs
fst
xor
sub
pop
mov
sub
xchg
xor
test
xor
fisttp
dec
inc
movs
and
xor
(bad)
mov
fstp
mov
clc
mov
pop
int
xlat
jmp
in
fimul
(bad)
std
add
jne
arpl
cmp
cmp
in
sar
fwait
xchg
mov
es
mov
pop
cli
xor
das
adc
loope
ja
xchg
loop
out
(bad)
cld
adc
mov
rcr
scas
rcl
clc
mov
int3
cmp
mov
mov
adc
jmp
sub
or
cwde
adc
xchg
inc
and
adc
loope
cmp
out
mov
ins
jg
enter
popf
out
or
add
push
mov
cmp
or
ror
(bad)
jns
add
mov
xchg
sub
push
repnz
scas
hlt
fsub
scas
cmp
pop
stos
mov
mov
jbe
and
scas
mov
mov
enter
(bad)
mov
mov
in
shr
fnstenv
sahf
sub
rcr
add
clc
jmp
scas
shr
cs
or
and
mov
ret
(bad)
inc
dec
retf
cmps
mov
or
dec
push
rcl
mov
inc
retf
(bad)
jp
fcom
mov
mov
jmp
mov
movs
mov
cmp
adc
out
ror
mov
mov
sub
loope
xor
les
test
int
or
inc
fld
fiadd
mov
add
inc
cdq
dec
mul
sbb
mov
cmps
sbb
cdq
icebp
scas
or
xchg
popf
mov
jmp
not
retf
xor
and
pminsw
pop
jnp
mov
mov
jl
jns
mov
xchg
jbe
and
pop
dec
add
nop
mov
fwait
mov
add
cmc
mul
cmc
outs
cmp
mov
jnp
cmp
pop
ins
xor
stos
sbb
ins
inc
hlt
shr
addr16
fnsave
inc
xor
mov
test
cmc
and
xor
outs
cmc
sbb
push
sbb
jne
iret
pop
sbb
test
loopne
add
out
mov
jmp
add
shr
add
and
sbb
fld
adc
inc
fwait
std
movs
lahf
adc
aam
jmp
mov
mov
(bad)
retf
retf
and
popf
mov
pop
jno
inc
or
and
clc
leave
jg
mov
das
jae
fnsetpm(287
add
out
push
lods
(bad)
dec
sub
adc
mov
fist
fnstenv
fwait
cld
xor
dec
add
xor
adc
addr16
adc
jp
mov
push
xchg
retf
in
mov
push
push
clc
clc
and
in
retf
call
push
aaa
xchg
jle
cmovge
jle
inc
sahf
xor
fsub
(bad)
and
div
add
pop
fcmovnu
cmp
jecxz
add
test
jb
push
dec
and
movs
mov
xchg
(bad)
rcr
rcl
sub
ins
mov
iret
pop
pop
pusha
jmp
repnz
daa
stos
aaa
push
jno
ror
add
push
test
push
push
lahf
aaa
ins
repz
jmp
outs
fcom
(bad)
jmp
and
pop
and
jbe
xor
loop
ror
sub
mov
mov
aad
ja
mov
fstp
mov
pushf
ret
rol
xchg
mov
jl
xor
jmp
adc
adc
dec
mov
jae
mov
mov
jl
sahf
into
cvttps2pi
sbb
mov
mov
std
xor
mov
mov
aad
or
movs
jo
fwait
pop
xchg
lea
add
fiadd
dec
in
xor
pop
lods
adc
jp
xchg
shl
dec
imul
inc
cmp
or
xchg
fadd
dec
cmp
popa
xchg
retf
inc
jge
cmp
and
popf
jno
adc
cmps
jno
push
data16
(bad)
mov
or
mov
lock
es
neg
movs
and
(bad)
sbb
ja
retf
cmp
cmc
mov
repnz
inc
jae
or
repz
cwde
call
lahf
sub
or
push
out
(bad)
das
rcr
test
(bad)
stc
int
aad
cmp
in
cmp
dec
aam
enter
sbb
pop
cmp
and
adc
adc
dec
in
or
(bad)
inc
cmps
mov
cmp
sub
in
pop
mov
psraw
cmps
jnp
sbb
xchg
jge
ds
mov
iret
mov
mov
jecxz
test
adc
test
mov
popa
cmp
pop
mov
inc
out
ds
(bad)
mov
or
imul
mov
jmp
(bad)
pop
sbb
mov
xchg
mov
xchg
lods
addr16
fwait
jmp
and
test
xchg
mov
sbb
mov
pusha
pop
lods
pusha
and
mov
daa
jecxz
fdiv
imul
cmps
shl
movs
shl
nop
push
repz
daa
clc
fistp
add
in
lods
fldcw
scas
repz
imul
(bad)
push
ficomp
mov
movs
push
xchg
adc
adc
call
push
dec
jp
(bad)
imul
repz
or
jne
add
cmp
out
push
movs
xor
mov
pusha
movs
pushf
mov
push
movaps
push
pop
jb
xchg
and
and
shr
pop
cmp
xor
ja
mov
jae
push
mov
fs
xchg
mov
test
mov
adc
mov
aam
popf
push
imul
lods
or
nop
inc
fsub
idiv
jne
fldz
lods
jge
les
scas
inc
(bad)
push
stos
scas
cmp
jecxz
out
sbb
mov
mov
cmp
fisub
jno
add
dec
in
cdq
inc
out
cmc
mov
imul
in
cmp
jp
cwde
cs
sbb
jl
sbb
out
out
adc
cmp
lds
lods
ret
mov
sub
push
push
mov
push
adc
mov
mov
jno
enter
and
test
in
add
mov
inc
rol
fsub
or
into
cld
test
fimul
mov
mov
cmp
pop
cli
dec
mov
(bad)
loope
jle
dec
mov
retf
mov
call
test
push
test
adc
retf
pop
mov
inc
mov
(bad)
push
jl
add
mov
sub
loop
loopne
add
and
xchg
mov
stos
mov
sub
jp
pop
mov
mov
fs
xor
xor
lds
cld
repnz
xchg
stos
retf
sbb
or
in
dec
mov
cli
(bad)
imul
mov
adc
add
adc
or
pop
daa
jmp
mov
jmp
movs
retf
inc
es
sub
std
data16
cmp
push
ficom
cmp
inc
movs
dec
inc
enter
ror
sub
dec
out
int
or
cmp
into
sbb
out
add
push
movs
and
daa
es
cwde
ror
mov
jo
jecxz
mov
and
dec
dec
inc
idiv
pop
clc
mov
push
mov
mov
cmp
or
stos
cmp
fwait
shl
outs
jp
push
add
adc
jns
js
mov
push
xor
sub
shl
(bad)
push
mov
popf
adc
adc
cmp
mov
mov
scas
adc
sbb
push
mov
mov
mov
cwde
xchg
js
imul
sub
fidivr
mov
out
rol
(bad)
or
sbb
test
inc
add
loop
test
sti
inc
cmps
call
sub
and
mov
and
mov
xchg
aad
leave
std
dec
jmp
retf
add
xor
mov
out
sbb
mov
(bad)
jge
pop
or
add
inc
and
and
icebp
pop
xchg
mov
hlt
lahf
sbb
icebp
pop
push
cmp
(bad)
or
je
cwde
jbe
ds
cld
out
jmp
mov
mov
ins
xor
loop
xor
xchg
lods
nop
pop
(bad)
xor
dec
in
into
pop
mov
sub
jns
push
ss
sub
(bad)
cld
movs
das
gs
enter
adc
jge
fwait
leave
adc
push
sbb
fcomi
push
sub
sahf
fistp
sub
push
stc
xchg
into
je
mov
test
imul
(bad)
loop
push
inc
test
pop
icebp
mov
std
idiv
test
test
ss
and
xchg
jecxz
dec
push
cdq
sub
dec
loope
mov
jno
xchg
stos
rcl
xchg
pop
inc
call
aas
rcl
adc
mov
add
inc
inc
in
dec
shl
addr16
pop
popa
and
mov
movs
repz
ss
fs
add
jmp
neg
(bad)
sti
call
xor
test
cmc
lods
or
loop
adc
jnp
aas
dec
push
rcl
mov
cwde
and
add
mov
outs
aam
(bad)
sahf
jg
push
dec
push
popf
test
aas
cmp
clc
test
xchg
sub
jge
neg
cld
sub
ds
jne
test
(bad)
xor
add
xor
stc
cmp
in
nop
jecxz
loopne
cmp
jne
sbb
pop
and
call
adc
lods
lds
jb
test
cmp
stc
fisttp
inc
fisttp
dec
dec
jge
in
mov
shr
jle
mov
sub
fs
and
fs
add
mov
mov
aam
ds
cli
cld
lock
ret
push
ins
repz
xor
loope
scas
pop
push
out
adc
out
cdq
jge
mov
out
pop
sbb
jno
or
(bad)
mov
stc
aam
xor
mov
add
ret
(bad)
loopne
ret
sti
(bad)
popf
jge
add
or
rol
push
std
mov
std
xor
pop
xor
jg
repnz
jecxz
ror
adc
stos
dec
jnp
nop
imul
jbe
cld
push
dec
fld
sbb
ret
arpl
outs
inc
jmp
push
clc
mov
jecxz
xchg
mov
or
pop
inc
retf
dec
pop
dec
pop
psubb
push
inc
pop
mov
xchg
fsub
les
repnz
in
cwde
mov
aad
xchg
test
mov
xchg
push
dec
out
aas
add
leave
jbe
pop
pop
scas
jbe
pop
fwait
lock
loop
push
pop
ret
shl
mov
add
loope
inc
xor
repz
pop
cld
fwait
or
xor
mov
cwde
mov
cmps
mov
es
add
pop
ffreep
jns
pop
or
xor
(bad)
sub
mov
pop
mov
cmps
mov
in
sub
pop
mov
rcl
jnp
push
adc
adc
loop
dec
and
push
add
or
sub
pop
shl
add
push
(bad)
cmp
jno
mov
bound
push
cmp
les
pop
icebp
pop
test
pop
jl
or
cmp
cmp
stos
push
dec
add
cmp
shl
inc
fwait
inc
(bad)
mov
sub
jl
add
cmp
mov
arpl
jne
retf
push
popf
cs
in
jg
jbe
stos
pop
mov
mov
cdq
jge
add
jp
out
sub
mov
pop
sbb
jmp
add
jne
dec
das
jne
or
cwde
retf
pand
(bad)
jl
(bad)
inc
fidivr
lods
push
dec
loope
rcl
add
dec
xchg
xor
jle
push
fild
std
fst
fwait
pop
push
and
xor
out
inc
adc
dec
call
loope
iret
mov
pop
cwde
xor
lods
adc
mov
pop
jae
imul
imul
(bad)
lds
or
popa
pop
retf
mov
jmp
into
ficom
push
sub
(bad)
stc
adc
dec
mov
neg
sti
das
fldcw
sbb
stos
jl
(bad)
lods
pusha
pop
fsubr
sbb
push
(bad)
pop
jnp
fiadd
or
or
hlt
xchg
div
inc
jg
inc
ss
sbb
jmp
sbb
jmp
mov
cmp
sbb
cld
cmps
push
mov
cmps
icebp
and
xor
in
(bad)
pop
jnp
stos
fst
xchg
stc
fstp
movs
mov
nop
test
pop
xchg
or
test
cwde
or
sub
repz
into
(bad)
fild
cmps
scas
or
or
je
mov
pop
lea
mov
cld
rcl
das
out
inc
xlat
sub
xchg
adc
cmp
test
into
stos
cmps
ins
iret
imul
or
inc
add
cld
les
mov
xchg
xor
xor
jo
cmps
aam
aad
in
jmp
adc
div
cdq
gs
inc
bound
retf
cwde
and
call
addr16
mov
aam
dec
mov
jno
pop
in
adc
or
and
xchg
push
or
push
lods
push
add
(bad)
scas
adc
push
jb
sub
jne
arpl
push
xor
mov
arpl
repz
leave
inc
test
out
(bad)
rcr
sbb
leave
inc
sbb
clc
sbb
sub
inc
jle
adc
ins
lea
es
inc
sbb
dec
pop
(bad)
sub
xchg
sbb
push
in
inc
adc
movs
mov
test
outs
movs
outs
dec
add
push
repnz
sbb
mov
jb
push
and
sahf
(bad)
in
iret
pop
das
adc
mov
clc
inc
sub
mov
repz
mov
addr16
jp
inc
cmp
stos
xchg
add
imul
mul
sub
rol
mov
xor
arpl
mov
and
sub
add
add
sub
ret
mov
repnz
bound
mov
xor
fcom
dec
imul
jns
outs
mov
test
jmp
inc
cmp
mov
pop
and
pop
pop
or
cmp
ins
and
push
cdq
pop
and
xor
das
icebp
inc
cmp
es
repnz
int
inc
lock
mov
mov
and
mov
clc
retf
adc
adc
mov
imul
in
xchg
jnp
adc
and
mov
mov
outs
fidivr
sbb
dec
nop
sbb
ss
das
mov
dec
jmp
pop
cmps
imul
cwde
xchg
mov
cli
add
xor
arpl
sbb
cmp
fistp
mov
pop
leave
test
hlt
add
outs
scas
mov
stc
jns
and
push
push
xchg
dec
pushf
mul
push
or
push
aaa
cdq
xchg
xchg
sbb
shr
je
ret
fisubr
sbb
(bad)
jnp
scas
dec
xor
mov
dec
fbstp
jne
cwde
xchg
inc
cmp
sub
xor
call
adc
add
repz
push
push
loopne
cmp
sub
fnstcw
mov
call
mov
cmc
dec
cld
sahf
adc
movs
push
retf
daa
ror
sub
pusha
not
jo
jnp
sbb
pop
fstp
push
addr16
adc
jo
or
into
inc
add
sbb
cdq
ins
test
add
and
test
push
cdq
add
fisubr
call
pop
jo
stos
mov
add
out
inc
dec
popf
test
jmp
cli
cld
test
add
pop
int
inc
push
test
pusha
sub
pop
outs
jns
xor
cmps
andnps
sbb
mov
pop
xor
and
add
mov
jnp
adc
push
push
pop
bound
sub
icebp
pushf
sub
ret
jle
mov
retf
ror
and
aam
jno
and
outs
push
jnp
and
fsubrp
xchg
dec
jge
fsubr
jmp
adc
data16
jmp
out
cs
and
xchg
imul
in
nop
mov
ror
sti
and
xchg
pushf
adc
xchg
call
mov
call
jne
adc
btc
mov
lods
mov
imul
fs
cmps
add
out
jno
or
mov
ror
jbe
pop
push
jmp
xchg
mov
or
icebp
fidivr
jne
imul
(bad)
jnp
sahf
dec
test
mov
mov
lock
(bad)
rol
pop
and
in
jo
dec
int
add
lahf
sub
inc
mov
repz
retf
leave
or
clc
je
sub
repnz
mov
sub
push
jmp
adc
cmp
and
sbb
pusha
inc
out
or
retf
jmp
hlt
mov
jmp
shr
sbb
out
ds
or
aas
fst
fdiv
(bad)
(bad)
mov
imul
sub
mov
xor
sbb
outs
push
mov
pop
retf
inc
adc
push
ja
jmp
inc
inc
mov
jp
fucomp
pop
push
lods
(bad)
jg
xchg
in
sar
adc
js
jae
cdq
xchg
or
out
sbb
push
jne
jmp
call
and
ret
int3
cdq
push
inc
idiv
fldcw
in
xlat
cdq
jmp
dec
das
adc
scas
out
pusha
fs
iret
mov
jne
pop
or
mov
loopne
sbb
or
pop
mov
or
std
pop
ins
xchg
cmp
dec
(bad)
push
jno
lds
pop
and
or
jle
pop
xor
std
les
and
sub
cmp
cmp
push
ins
push
mov
into
sub
and
daa
popf
sbb
adc
or
jne
mov
out
mul
xor
rcl
movs
xchg
pop
jge
mov
shl
loop
or
cmp
sbb
cmps
out
push
or
retf
mov
pop
mov
xchg
fidiv
mov
in
mov
fdiv
outs
adc
fsub
call
fstp
maskmovq
dec
das
mov
idiv
test
push
js
jecxz
push
push
hlt
cmc
icebp
(bad)
ds
jns
jmp
inc
in
mov
rol
adc
popa
jbe
mov
push
jmp
int
(bad)
ins
pop
cld
int
js
arpl
adc
loopne
jp
mov
mov
push
pop
(bad)
push
mov
pop
ds
data16
dec
inc
jmp
sub
inc
cmps
js
dec
in
and
inc
mov
pop
jo
aaa
fld
imul
hlt
pop
jnp
sbb
es
or
sar
inc
inc
imul
inc
xchg
xchg
fprem1
ds
dec
ret
or
fist
jmp
mov
call
xor
cmp
push
push
gs
les
xchg
repnz
pop
loopne
repz
gs
ss
pop
push
add
ins
ror
das
jmp
mov
mov
retf
jge
leave
fnsave
ins
adc
icebp
stos
mov
sbb
add
cmps
cmc
(bad)
es
dec
popf
lahf
movs
or
sbb
push
jmp
mov
sahf
mov
mov
adc
cs
pushf
cmp
mov
aaa
fdiv
aam
pusha
pop
adc
les
inc
shl
xor
ret
std
loope
and
ret
cmp
inc
inc
pusha
mov
inc
pop
sbb
mov
jae
out
cdq
iret
dec
gs
in
pop
cs
xor
int3
mov
pushf
stos
xchg
ja
add
rcl
xchg
jne
call
stc
mov
movntps
lds
(bad)
imul
mov
xchg
xor
(bad)
aad
or
xlat
out
add
xchg
mov
fistp
mov
mov
das
ins
jno
push
inc
and
adc
repnz
jno
push
bound
shl
cld
bound
ss
xor
mov
outs
or
cmp
popa
or
cli
das
cmp
imul
mov
into
mov
dec
loopne
sbb
inc
mov
stos
jg
js
pop
loopne
mov
fdivr
pop
aad
ss
mov
push
(bad)
push
(bad)
jp
adc
dec
dec
push
adc
sbb
xor
outs
jmp
test
jne
xchg
mov
dec
or
(bad)
ins
jmp
xchg
push
sbb
ss
aaa
inc
ja
mov
call
adc
test
js
addr16
ins
loop
inc
int3
nop
push
in
add
mov
inc
scas
(bad)
movs
pop
push
sar
and
mov
scas
adc
or
std
cmp
pop
mov
test
scas
push
popf
mov
ss
shr
mov
push
aad
ret
sbb
clc
test
test
jmp
fwait
push
cmp
push
repz
sbb
or
xor
in
sbb
adc
pop
enter
sub
int
in
gs
outs
sbb
test
push
aad
pop
in
mov
adc
pusha
repnz
jnp
xchg
fiadd
push
fmul
pushf
cmp
sti
jnp
bound
stos
push
xchg
jbe
lock
mov
cmps
mov
(bad)
in
mov
movs
adc
mov
ret
jnp
outs
add
shl
pushf
fxch
stos
mov
(bad)
stc
sub
addr16
sub
imul
or
(bad)
pushf
fdivr
int3
inc
enter
pushf
movs
(bad)
retf
pop
std
retf
dec
(bad)
jp
sub
push
es
nop
and
sbb
push
and
xchg
(bad)
xor
ficom
fist
xor
mov
(bad)
into
idiv
js
push
push
sub
iret
int
out
out
cmp
int
push
dec
mov
add
gs
push
jmp
clc
dec
nop
ss
xor
sti
jecxz
jae
imul
mov
mov
dec
mov
es
(bad)
push
outs
xchg
clc
test
imul
xchg
(bad)
push
data16
jmp
dec
push
inc
jl
mov
retf
aaa
mov
(bad)
daa
pop
fisubr
push
bound
sbb
dec
mov
and
sahf
and
dec
sub
cmp
mov
inc
push
jo
mov
adc
loopne
and
jnp
xor
sbb
aas
jnp
retf
mov
enter
movs
sbb
loopne
cmc
xchg
outs
or
loope
fs
or
pop
or
enter
xchg
inc
mov
fdiv
je
or
call
stos
sub
sbb
ret
push
xchg
pop
cmp
stos
mov
iret
bound
inc
scas
inc
lock
cmp
mov
sub
xchg
js
add
push
iret
or
lock
add
xor
cld
inc
daa
cmps
adc
push
push
push
mov
test
sub
into
pop
and
dec
pop
or
or
in
mov
nop
test
mov
sbb
aaa
mov
ror
cmps
(bad)
pop
imul
sub
xchg
jbe
mov
sub
jp
xchg
or
cmp
ins
int3
push
sub
cmp
mov
scas
and
xor
sub
test
push
fsubr
add
add
mov
shr
sahf
sbb
sub
cli
jge
fistp
movs
mov
clc
mov
out
in
gs
jge
sbb
cmp
sbb
idiv
wrmsr
repz
adc
dec
cdq
(bad)
or
mov
cmp
jbe
jg
pop
adc
push
mov
mov
stos
sub
mov
(bad)
stos
push
xchg
xchg
aaa
push
sub
jne
jmp
(bad)
xchg
shl
jecxz
or
std
dec
jnp
or
cmp
add
cs
je
jb
int3
mov
xchg
int
stos
sbb
inc
dec
scas
sbb
outs
arpl
jno
inc
or
pop
fisttp
bound
push
jb
push
xchg
cmp
pusha
inc
mov
mov
pop
fbstp
je
dec
lods
sbb
push
test
cld
jae
popf
mov
pop
sbb
jmp
cli
fcom
pop
and
adc
cdq
or
xor
aam
jg
jl
jmp
xor
je
stos
scas
call
mov
push
sub
pop
mov
cmp
enter
cmp
cmp
cmp
xchg
xor
(bad)
ins
lock
fdiv
fsubr
enter
sbb
je
adc
sahf
test
xor
mov
xor
sub
arpl
aas
aam
lahf
cmp
push
mov
mov
fsubr
test
push
pop
jb
jecxz
mov
lds
sti
stc
xor
cs
fmul
ins
(bad)
xchg
fcmovb
push
xor
pop
push
jb
test
xchg
inc
movs
ret
cmps
(bad)
sub
out
mov
add
pop
cmp
imul
and
sub
arpl
fisttp
dec
js
cwde
pop
lods
pop
sbb
cli
test
push
jmp
mov
retf
aas
repnz
outs
ret
ss
js
arpl
call
jmp
fisub
ins
loope
movs
je
shl
pop
int
add
pop
xchg
pop
push
(bad)
shr
out
imul
aam
repz
jnp
test
cmc
add
xchg
sbb
or
hlt
std
adc
repz
fisttp
rol
mov
sbb
and
add
ins
out
in
call
std
inc
mov
cmp
jecxz
in
pop
repz
mov
ss
jmp
dec
pop
adc
lock
sti
fimul
and
push
retf
xchg
sub
(bad)
pop
cmp
mov
(bad)
xchg
adc
fidivr
jl
mov
neg
dec
push
adc
xlat
adc
lods
dec
jb
pop
xchg
imul
gs
xchg
sbb
push
sub
mov
hlt
cli
cmc
xor
push
inc
int3
mov
push
(bad)
xlat
por
or
mov
push
lahf
sub
repz
out
int
inc
(bad)
stos
inc
dec
js
push
adc
sti
lahf
jo
fnstcw
retf
cmps
out
dec
or
and
mov
test
jae
fidivr
cld
addr16
sub
push
lds
neg
ja
call
in
(bad)
int3
or
push
pop
jmp
in
or
push
int3
inc
mov
mov
pusha
sub
outs
lds
ffree
xchg
repnz
sbb
les
add
or
jne
icebp
mov
loope
out
ins
and
or
inc
cmp
mov
lods
pop
mov
test
mov
sub
cmp
add
mov
mov
mov
adc
mov
daa
scas
movs
es
lds
mov
popf
push
add
ret
fnsave
leave
and
mov
lahf
ror
fnsave
stos
iret
dec
mov
sbb
push
push
aam
dec
xor
mov
jno
jl
push
jnp
and
adc
mov
mov
inc
dec
jp
adc
push
add
cmp
mov
inc
pop
jns
jp
les
loop
(bad)
dec
fcom
cli
outs
enter
add
outs
cmp
inc
addr16
lahf
xor
popa
sbb
dec
retf
jns
dec
push
pop
jle
push
dec
jno
(bad)
push
mov
ds
cmp
mov
outs
push
into
jns
movs
std
push
dec
pop
pop
test
inc
pop
push
pop
pop
aad
mov
cmps
jae
cmps
push
call
aam
cmp
gs
xchg
mov
test
adc
or
mov
inc
cmp
xchg
je
test
sub
aas
out
mov
cmps
add
out
shl
repz
pushf
mov
mov
ja
popa
movs
repnz
enter
add
stc
or
scas
call
(bad)
and
(bad)
inc
pop
mov
dec
xor
push
inc
in
cmp
mov
cmp
cmp
inc
jne
stc
sbb
popa
push
push
pop
jmp
out
stos
adc
(bad)
jb
sub
movs
div
stc
repnz
pop
sahf
inc
rcr
and
in
out
push
inc
mov
cs
(bad)
pop
sub
cmp
mov
adc
adc
(bad)
lock
js
hlt
cmp
mov
jne
mov
cmps
dec
cmp
out
ret
xchg
adc
xchg
int3
shr
and
mov
call
mov
sahf
jg
test
or
xchg
fist
setl
pusha
sub
lock
jp
xor
rol
mov
or
sbb
js
sbb
mov
add
inc
loope
mov
mov
shl
or
or
sbb
(bad)
pushf
xchg
popa
xchg
sbb
sub
and
mov
sub
dec
mov
xor
fs
adc
jns
popf
mov
and
push
test
jb
inc
cmp
jns
ja
mov
inc
fwait
cs
in
push
cmp
pop
adc
pop
mov
aam
mov
and
stc
les
cld
imul
out
push
cwde
imul
cmps
or
or
or
push
jne
popa
scas
or
sti
mov
pop
cmp
cmp
cwde
ffree
enter
je
cmp
aam
dec
(bad)
call
cwde
adc
bound
ror
scas
add
inc
imul
js
out
inc
mov
test
and
push
pop
in
pop
xor
dec
cmc
jecxz
daa
xor
jae
pushf
out
(bad)
pusha
imul
mov
add
arpl
cmp
add
cld
imul
pop
dec
mov
mov
mov
jnp
jl
jb
repz
pop
loop
jle
or
sub
add
fidiv
les
(bad)
shr
cmp
out
sbb
inc
and
dec
jmp
sub
stos
sub
in
adc
add
int3
movs
pop
(bad)
(bad)
mov
pushf
in
sub
xchg
mov
icebp
mov
retf
xor
ds
popa
pop
dec
enter
fcom
test
pop
ss
test
mov
add
mov
(bad)
push
movs
adc
cwde
sub
add
xchg
pushf
mov
jmp
sahf
(bad)
or
jmp
repnz
inc
xchg
add
sub
mov
scas
adc
cmp
fwait
ror
push
mov
hlt
call
fld
les
fwait
sub
mov
test
jns
inc
lock
fcomp
mov
push
jl
xor
(bad)
xor
adc
mov
test
push
pop
mov
in
xor
mov
cli
pop
mov
jnp
push
(bad)
xchg
add
call
xchg
dec
mov
pop
into
jb
clc
and
and
hlt
adc
rol
adc
int
and
or
mov
pushf
xor
mov
or
pop
test
fidivr
jno
fdiv
jae
dec
jg
cli
clc
idiv
fcmovne
mov
xor
mov
repnz
loope
or
daa
icebp
repz
mov
cmc
xor
test
jnp
sub
(bad)
pop
pop
xchg
sbb
sub
jmp
mov
fwait
pusha
inc
sahf
loopne
push
daa
fild
xchg
add
adc
popa
icebp
push
popa
cmp
jns
inc
(bad)
jl
pop
scas
sub
cmps
pop
stc
sub
mov
xor
pop
add
dec
add
fcom
jecxz
retf
je
jg
outs
loopne
sub
sbb
popa
sar
(bad)
or
mov
lahf
retf
pop
push
cwde
fist
mov
inc
(bad)
test
rol
into
es
pop
mov
xor
push
mov
gs
fs
aam
ins
int
pop
int
push
rol
dec
dec
dec
nop
retf
jmp
stos
xchg
inc
scas
mov
lds
pop
std
add
jo
rep
rcr
leave
inc
std
sbb
imul
and
js
test
dec
out
xchg
mov
shl
dec
or
or
pop
(bad)
stos
cmp
scas
bound
xchg
arpl
sbb
jmp
stos
pop
mov
pop
ficomp
clc
stos
jge
fdivr
lods
push
gs
(bad)
daa
sbb
aad
xchg
lea
dec
mov
or
or
in
dec
mov
dec
mul
jle
mov
add
(bad)
push
call
mov
(bad)
out
inc
(bad)
in
push
xor
lods
shl
(bad)
push
cmp
pop
ret
test
cmp
sub
xchg
pop
cmp
(bad)
jno
or
test
push
mov
stos
add
test
mov
and
mov
inc
int
xchg
js
fstp
arpl
call
xchg
je
push
pop
add
dec
push
cdq
sub
std
es
mov
push
add
pop
mov
stos
dec
jb
pop
adc
dec
mov
or
iret
popa
jmp
cmp
repnz
dec
jne
jo
adc
xor
cld
in
(bad)
jmp
fsubrp
pop
mov
dec
cdq
mov
mov
mov
(bad)
retf
mov
bound
lds
leave
mov
outs
adc
mov
rcl
lahf
shl
mul
ins
lea
xor
inc
out
jae
dec
xchg
adc
sub
clc
icebp
mov
sti
movs
ins
jne
mov
not
inc
jmp
push
push
aaa
xchg
or
adc
add
jg
out
es
imul
mov
popa
fs
fld
jbe
mov
push
movs
pop
mov
fcom
loope
jb
mov
and
lock
inc
push
sahf
hlt
movs
jl
scas
cli
xchg
repz
mov
push
mov
jg
aad
fld
(bad)
pop
or
outs
aaa
pop
add
int3
cs
inc
pushf
jnp
int3
loopne
rcl
xor
cmp
mov
leave
cmp
inc
xlat
fwait
ds
sbb
dec
sbb
into
sbb
xchg
inc
push
inc
sbb
pop
cmp
enter
jl
adc
mov
add
push
jo
rcr
leave
imul
mov
fdiv
sub
mov
xor
or
in
sub
jo
mov
xchg
ror
pop
mov
jecxz
inc
lods
ins
bound
aas
xchg
scas
js
cmp
sub
not
int
xlat
shl
movs
ror
adc
xchg
loop
sub
cmp
jae
or
hlt
cli
sbb
in
pop
dec
add
(bad)
xor
rol
ins
je
adc
inc
loop
shld
je
cli
add
dec
loopne
xchg
test
repnz
push
mov
repz
push
clc
add
sbb
cdq
add
imul
inc
inc
in
xor
es
jbe
fadd
inc
sbb
scas
fist
aad
stos
lock
repz
int
jp
pop
sub
jg
adc
push
mov
sbb
mov
ror
jo
sub
mov
das
cmp
xor
fldln2
cmc
cmp
dec
or
repz
jne
and
jnp
rcr
stos
push
pop
xor
in
mov
loope
pop
add
test
test
test
mov
sub
sub
xor
mov
push
mov
gs
out
cmp
into
xchg
jne
cmp
shl
loop
lods
lods
stos
outs
jne
jp
inc
sti
push
dec
cdq
rol
jnp
dec
add
test
adc
outs
jno
das
ins
je
sbb
ror
mov
and
xchg
aad
mov
retf
pop
outs
dec
cmp
mov
jmp
ret
xor
xchg
icebp
and
sbb
loop
out
mov
pop
cmp
outs
loope
out
(bad)
loopne
jmp
lods
add
(bad)
mov
pop
mov
pop
mov
cmp
jecxz
les
mov
addr16
push
xor
clc
(bad)
(bad)
jno
gs
movs
cmc
add
cmp
mov
xor
mov
add
dec
mov
data16
shr
mov
bound
push
icebp
lahf
mov
test
cld
je
mov
inc
dec
mov
call
xor
jns
pop
pop
fst
push
sub
pop
pop
and
out
dec
cmp
pop
(bad)
lods
outs
ss
lahf
dec
out
push
test
and
int
mov
mov
and
shr
jno
push
adc
mov
push
and
push
jne
sub
mov
xor
imul
mov
mov
aas
lods
out
cmps
arpl
pop
jmp
std
cmps
call
movs
call
mov
movaps
test
and
xor
mov
outs
push
xchg
sub
mov
and
or
dec
and
push
mov
push
icebp
xor
cs
jle
push
imul
out
pop
ja
mov
(bad)
sti
out
fstp
cs
gs
dec
popf
outs
mov
mov
jne
int3
mov
out
cmp
xlat
mov
out
mov
jns
jmp
ins
add
sbb
cli
loop
xor
ret
inc
call
test
lds
or
aas
repnz
daa
shr
jne
push
or
scas
pop
sbb
push
inc
or
cmps
cmp
test
enter
adc
xchg
pop
inc
es
or
iret
out
movs
mov
mov
es
push
sbb
or
mov
cmp
dec
cmps
fbld
and
neg
dec
mov
push
xor
test
mov
mov
xchg
js
ins
fs
push
js
push
inc
rcl
xor
pop
jo
or
icebp
cmp
mov
dec
hlt
jno
or
das
lods
mov
sbb
fld
jmp
(bad)
iret
push
adc
std
and
push
call
mov
or
out
repnz
outs
ficomp
adc
mov
fiadd
mov
out
mov
dec
ins
ins
xchg
cmps
test
push
add
ja
shl
mov
pop
pop
bound
retf
fcmovb
inc
out
cld
popf
dec
sbb
shl
mov
cdq
sub
fbld
lock
clc
adc
(bad)
imul
pop
dec
cld
jg
or
ror
sbb
add
mov
pop
xor
add
aad
loop
dec
fbstp
jmp
sub
pop
lds
push
sub
je
cli
cmp
mov
or
inc
out
mov
mov
stos
fwait
xor
dec
and
sti
cmp
jnp
out
int3
xchg
sbb
cmp
outs
fld
pop
mov
fstp
mov
shl
push
jns
and
dec
sbb
adc
inc
stc
sub
lock
retf
sbb
jnp
and
sbb
push
mov
sub
les
add
mov
xchg
or
push
sub
movs
cmps
pop
cwde
mov
add
js
pop
xor
jno
ret
add
mov
xchg
pop
dec
cmp
adc
mov
dec
jmp
push
add
(bad)
mov
inc
add
int3
cmps
(bad)
cli
xor
add
clc
inc
sub
fimul
not
xchg
push
pop
std
bound
or
mov
retf
stc
in
pop
cmp
rcr
stos
ds
push
daa
sub
test
xor
xchg
scas
and
sar
lods
in
data16
push
repnz
xchg
mov
xchg
mov
rcl
push
sub
stos
in
add
jae
xor
out
call
jl
xor
(bad)
movs
in
cmps
cmc
icebp
fbstp
xor
push
pop
xchg
sbb
hlt
rol
push
pop
jmp
test
cmp
ret
out
push
mov
pusha
lock
je
test
jl
jae
imul
pop
pop
inc
pop
push
mov
sbb
or
sub
sbb
adc
fcomp
rol
mov
or
(bad)
test
dec
sub
push
xor
cdq
inc
outs
jb
xchg
cmps
scas
and
xchg
dec
aad
jge
ror
retf
xchg
cmp
sbb
cmps
popa
pop
fstp
mov
or
call
cs
aaa
sub
push
ds
call
lods
and
push
sub
mov
imul
inc
or
fidiv
cs
or
(bad)
or
fisub
adc
and
ds
xchg
sahf
jmp
aam
and
cmp
xor
fcomp
mov
push
cdq
jo
cdq
daa
pop
js
pop
sub
and
pop
push
xchg
xchg
or
stos
test
cmps
sbb
xor
xchg
mov
popa
jecxz
retf
mov
add
add
cmp
mov
das
cmp
mov
outs
add
ret
mov
(bad)
mov
and
jle
adc
loop
cdq
push
jmp
push
mov
call
mov
fldenv
ins
fcom
adc
jbe
mov
or
cmps
sti
stos
lea
out
jmp
and
pop
aaa
cmc
mov
fmul
jne
int
pop
pop
inc
xor
in
or
pop
or
add
jno
aas
cmp
es
icebp
es
sub
mov
je
jg
lahf
lahf
dec
sub
xchg
push
push
sar
push
dec
mov
icebp
lahf
xchg
sbb
cli
push
jl
mov
ret
adc
ins
pusha
add
sub
mov
mov
lds
sahf
and
sbb
mov
adc
or
sub
out
push
mov
sbb
add
in
inc
inc
cmps
lds
pop
mov
pop
adc
and
cmp
fs
retf
int
inc
xor
out
mov
mov
ins
lods
xchg
push
add
adc
lods
dec
fisubr
sub
mov
add
mov
popf
es
(bad)
test
cld
jge
inc
or
mov
xchg
loop
fbld
lods
and
(bad)
mov
fcom
(bad)
fs
or
mov
in
(bad)
cmc
dec
xchg
popf
aaa
bound
push
(bad)
sub
test
pusha
push
in
add
sub
shl
retf
xlat
sbb
jecxz
mov
or
lds
fadd
cs
push
mov
and
jns
cmp
lock
add
jno
adc
dec
mov
iret
mov
dec
xchg
adc
out
scas
inc
xor
jg
cmps
and
fisubr
xchg
aas
shr
jnp
lahf
sbb
inc
retf
adc
out
mov
dec
data16
loopne
or
jmp
jge
adc
mov
in
icebp
je
cmp
jp
xor
mov
pop
cmps
add
retf
or
test
or
mov
mov
or
scas
add
pop
push
stos
mov
add
das
popf
ror
fist
movs
sub
jl
cmps
mov
mov
xchg
das
rcr
xchg
daa
sub
dec
cdq
jg
jmp
call
cmp
mov
mov
mov
dec
into
pop
inc
mov
adc
xor
fild
in
cmp
sub
push
(bad)
jnp
xchg
jb
dec
mov
mov
add
push
ja
sub
inc
and
das
aam
jbe
repz
sbb
ja
icebp
inc
sub
rol
dec
sub
into
into
loope
jo
shl
out
repnz
jo
jmp
mov
aam
xor
sub
push
pop
or
mov
outs
(bad)
xor
outs
xor
ja
mov
push
add
loopne
stos
scas
cwde
and
mov
(bad)
shl
stc
iret
int3
sub
pop
xchg
dec
test
jmp
mov
and
mov
sbb
cmp
jmp
xor
cmps
xor
push
push
xchg
or
sbb
mov
or
leave
fldpi
inc
(bad)
jnp
push
ret
jl
cmp
adc
mov
jnp
or
add
mov
push
aaa
scas
add
sar
loopne
xlat
add
push
addr16
aad
jl
loopne
cmp
outs
adc
sti
bound
dec
and
stc
and
pop
in
push
add
push
jmp
fild
fiadd
jnp
es
or
lods
or
mov
je
repnz
sub
(bad)
mov
fwait
std
cwde
scas
movs
xchg
int3
pop
lea
add
mov
arpl
xrelease
out
mov
lods
adc
and
mov
in
inc
je
adc
fist
cmp
push
ja
fistp
jae
outs
jmp
push
inc
xchg
add
icebp
ins
ror
pop
push
sub
test
js
(bad)
xor
in
mov
dec
mov
fs
push
dec
xlat
mov
jl
movs
mov
aaa
dec
xchg
mov
cmp
mov
and
retf
mov
mov
lahf
inc
or
xchg
ja
cmp
mov
(bad)
pop
loope
sbb
cmp
jecxz
xchg
sahf
push
pushf
out
clc
lds
ins
mov
icebp
retf
xchg
sbb
ins
cmps
push
and
jbe
into
adc
inc
inc
mov
retf
mov
mov
mov
hlt
(bad)
pop
(bad)
xchg
adc
lds
cld
lds
push
int3
pusha
movaps
jge
xchg
int
sbb
aad
push
hlt
xor
pop
and
sbb
rcl
repnz
adc
push
push
add
in
add
and
(bad)
push
cmp
push
xor
jge
lea
pusha
idiv
jl
or
idiv
fstp
cmps
push
sbb
out
jg
pop
adc
inc
mov
xchg
sbb
pop
ss
xlat
push
jp
test
cmps
icebp
mov
dec
push
fnsave
sar
mov
or
icebp
out
push
or
cdq
jno
cmps
mov
movs
mov
clc
repnz
in
jo
xor
cmps
and
cli
repz
(bad)
lahf
or
sub
xchg
fsubrp
push
outs
mov
xor
jle
sub
std
adc
hlt
aas
mov
adc
fs
hlt
mov
jnp
push
ficom
cwde
or
arpl
cmp
sti
ss
ret
or
enter
mov
pop
ss
mov
movs
add
pop
push
sti
loop
jmp
cmp
iret
int
mov
das
jb
fidivr
xchg
jb
outs
stos
outs
xchg
sub
push
jp
or
hlt
mov
pop
push
mov
sbb
mov
mov
leave
jl
push
fst
inc
jmp
pop
sbb
ja
pop
xchg
add
jmp
mov
ss
aam
sub
mov
and
pop
(bad)
aad
lods
ins
xor
pop
out
(bad)
stc
jmp
call
pop
daa
test
add
mov
mov
(bad)
aam
in
ret
xor
xor
push
mov
push
outs
pop
in
sub
imul
popa
fadd
mov
repnz
sbb
mov
push
ss
or
add
inc
xchg
cmp
jmp
push
push
adc
cmp
or
fisubr
or
(bad)
jmp
push
mov
push
ins
xchg
out
loopne
sub
sub
repz
dec
or
jmp
fs
dec
(bad)
paddb
les
or
ds
cld
add
std
cmp
lahf
out
push
inc
dec
dec
xlat
mov
je
sbb
fwait
push
mov
adc
arpl
leave
jne
mov
cdq
mov
js
adc
add
out
mov
addr16
out
jne
xchg
mov
sahf
mov
or
mov
addr16
and
xchg
push
repz
bound
adc
jle
(bad)
and
mov
pop
inc
into
xor
mov
inc
add
sbb
and
shr
aam
sub
(bad)
and
and
int
ret
mov
push
push
(bad)
not
adc
sub
push
lahf
mov
(bad)
fs
dec
ins
cmp
(bad)
int
cmp
mov
push
fstp
pop
test
mov
mov
push
xchg
fsub
cmp
call
aaa
pop
call
(bad)
sub
stc
inc
pop
ja
cmps
mov
and
xchg
dec
ror
dec
test
cli
fcomp
clc
inc
or
(bad)
sub
clc
adc
pop
xor
sbb
sbb
fsubrp
cmps
mov
(bad)
shl
(bad)
jmp
cmp
and
fiadd
js
adc
(bad)
push
jo
mov
push
leave
push
mov
push
cmp
or
lock
pop
in
or
inc
jecxz
test
sub
xor
jne
xchg
xchg
out
jmp
daa
out
cvtps2pd
test
dec
std
lock
add
xor
(bad)
int
sti
ror
pop
jbe
cmps
lock
jmp
out
mov
scas
aad
adc
jg
dec
shl
outs
int
je
add
inc
push
iret
mov
mov
arpl
stos
outs
sub
mov
pop
pop
and
xchg
(bad)
out
fstp
pop
std
mov
fsub
pop
jle
jmp
xchg
sub
sub
loop
pop
mov
or
mov
aad
cmps
fdiv
and
add
sub
repnz
ins
push
jae
xchg
and
xchg
adc
int3
or
in
movs
mov
ja
inc
sbb
xchg
pop
inc
xchg
pop
inc
mov
push
sbb
loop
xor
ss
sub
jns
mov
aas
repnz
cmps
cwde
mov
push
mov
jle
mov
dec
enter
push
outs
enter
shl
push
cli
xchg
test
(bad)
pop
inc
jmp
pop
push
dec
cmp
outs
out
mov
mov
aam
inc
add
ins
(bad)
cdq
stos
es
jne
es
cmc
dec
fxch
mov
in
cwde
sub
inc
cli
fwait
cdq
lods
ss
or
pop
mov
sub
push
into
cmps
es
adc
fldenv
popa
popf
cmp
loopne
repz
in
ret
outs
mov
stos
es
pop
add
jae
lea
outs
outs
es
jne
outs
add
jge
jl
(bad)
xor
nop
icebp
clc
pop
pop
push
hlt
dec
pop
and
es
lods
sub
cmp
cdq
sbb
icebp
push
repz
xchg
ins
pinsrw
cmp
jae
movlps
sbb
lahf
cmp
fld
icebp
iret
sbb
sbb
xchg
xor
movs
in
enter
xchg
pop
das
addr16
dec
mov
sbb
xor
mov
hlt
inc
mov
retf
inc
sar
push
sbb
mov
dec
pushf
sbb
aam
call
out
cmp
add
sbb
mov
stos
sub
movs
stos
jmp
pop
sbb
ret
outs
fs
inc
shl
add
syscall
loop
and
cdq
pop
stos
(bad)
jmp
xchg
or
in
mov
cmc
je
idiv
xor
jne
adc
mov
enter
jbe
sbb
push
cld
aaa
cmp
adc
pusha
xchg
pop
add
cmp
push
fadd
and
test
fdiv
mov
xor
mov
xor
cdq
inc
dec
lock
out
fmul
cli
ror
xchg
xlat
enter
and
in
les
test
or
jge
popf
add
bound
push
cwde
fs
sub
pop
xor
cs
push
jns
add
outs
or
push
clc
push
pop
idiv
retf
movs
cmp
inc
inc
pop
(bad)
aad
dec
loop
cmps
mov
cmp
movs
leave
shl
imul
cmp
es
in
cdq
call
arpl
jo
jl
dec
shr
and
sub
cmp
les
fnstsw
lock
push
mov
push
adc
or
jle
stc
dec
xor
and
clc
lds
jb
cpuid
aad
add
in
enter
ss
xchg
add
xchg
mov
jecxz
sar
ror
push
mov
in
aam
jmp
jge
les
mov
add
mov
loopne
or
nop
push
loop
and
lahf
stos
loopne
pusha
mov
jb
test
(bad)
cmps
aam
or
cmp
or
xchg
pop
stos
adc
pop
add
(bad)
(bad)
xchg
mov
mov
movs
repnz
xchg
sub
push
mov
xchg
sahf
mov
cmp
jb
cmp
cmp
sub
popa
aas
pop
jecxz
fisub
fwait
mov
repnz
cmovae
loopne
out
(bad)
mov
fidiv
fidivr
and
jno
inc
sbb
xor
loop
or
(bad)
(bad)
jg
push
pushf
loop
test
mov
(bad)
mov
sti
jmp
xchg
test
sbb
punpckhdq
(bad)
loope
or
fild
(bad)
mov
in
lds
dec
mov
lahf
pop
fisub
push
lods
mov
mov
neg
add
into
(bad)
lods
dec
push
das
aaa
pop
jb
mov
int3
pop
pop
xor
pcmpgtw
cmp
in
mov
in
mov
(bad)
iret
out
clc
push
ins
ins
push
push
push
mov
fst
scas
cli
add
fwait
mov
pushf
es
repz
jae
inc
js
gs
adc
fwait
sbb
inc
push
xchg
sbb
xchg
cmovb
clc
in
xchg
popa
sub
add
xor
test
imul
xchg
ja
push
cmp
pop
ret
push
and
data16
sbb
in
retf
loop
cmps
in
shl
cld
mov
je
mov
dec
mov
stc
mov
xchg
jbe
add
pusha
cmp
jbe
adc
bound
mov
sbb
sub
popf
sub
pusha
lea
call
jno
les
call
sbb
ins
push
in
popa
push
fimul
add
add
mov
inc
(bad)
das
add
daa
jecxz
pushf
sbb
and
xor
jb
shl
sahf
mov
icebp
out
mov
sub
add
mov
rol
cmp
pop
in
and
scas
pop
scas
ins
jno
or
loopne
inc
and
into
pop
das
in
cmp
dec
mov
xchg
adc
sub
dec
and
(bad)
out
ror
dec
jb
cmps
ja
fcom
jg
xchg
inc
jg
jae
mov
pop
mov
or
mov
fwait
xor
push
cld
call
fs
shl
fld
mov
sbb
cld
ins
and
in
jecxz
jp
dec
mov
cld
in
fisub
mov
test
ins
(bad)
mov
push
sbb
push
movs
scas
in
sbb
inc
sti
jle
jge
and
cmc
cmp
inc
or
ins
call
mov
lahf
lea
outs
xor
pop
xchg
out
in
cmp
cdq
mov
and
ss
cmp
ins
je
mov
data16
inc
mov
jnp
sbb
lock
cmps
inc
sbb
jbe
mov
data16
jae
cs
jmp
mov
push
imul
nop
dec
out
cmps
or
jg
mov
shr
push
or
mov
mov
adc
stos
xchg
shr
popf
xor
inc
out
add
add
lahf
inc
xchg
dec
dec
fsubp
jle
jno
xchg
ins
ret
mov
xchg
lods
mov
stos
imul
in
xor
and
xor
jmp
rol
cs
idiv
ror
jle
jns
jnp
push
shl
sub
inc
aad
mov
outs
test
sub
pop
nop
push
xchg
in
shr
sahf
loop
mov
(bad)
outs
add
jae
xchg
movs
push
data16
outs
xchg
or
outs
jno
adc
loope
out
jo
adc
mov
movs
add
pop
add
in
inc
test
add
mov
jne
jo
rcl
dec
push
das
sbb
add
(bad)
in
jle
ret
xchg
dec
xor
cmp
cmps
cmp
xor
sub
loope
and
test
jns
fmul
push
xchg
retf
ret
in
test
imul
push
mov
lds
and
aaa
adc
call
mov
jmp
stos
(bad)
adc
sti
adc
push
shl
ja
test
in
adc
add
sbb
add
stc
sahf
jecxz
fimul
jae
adc
aad
and
fs
fstp
inc
sahf
mov
lods
or
add
ins
push
inc
dec
out
scas
push
mov
stc
lods
and
xchg
dec
jmp
lahf
icebp
sahf
mov
adc
xchg
xor
sub
std
aad
push
outs
or
imul
mov
xchg
mov
gs
cmp
stos
jo
repz
(bad)
leave
cmps
sub
shl
js
outs
mov
xchg
jge
test
xchg
xchg
fimul
movs
imul
lock
pop
pop
xor
mov
xor
xchg
sub
js
int3
mov
sub
cs
sbb
mov
xchg
mov
repz
sar
ins
gs
(bad)
and
jnp
fsubr
mov
fmul
into
hlt
movs
bound
sbb
cmc
xor
mov
adc
and
sub
(bad)
mov
sbb
or
sbb
nop
add
in
dec
inc
adc
les
loop
mov
js
pusha
stos
test
mov
fidiv
mov
mov
mov
dec
sbb
test
out
xchg
pusha
dec
ins
and
sbb
retf
add
adc
pop
add
adc
lahf
scas
mov
es
push
cmps
mov
sti
cmps
or
push
out
call
and
add
(bad)
mov
movs
call
aam
popf
inc
ds
mov
mov
xchg
add
inc
aad
loop
fstp
xor
shl
cmp
in
sbb
lock
(bad)
mov
or
pop
xchg
nop
mov
aaa
jae
leave
and
jp
stos
pushf
enter
adc
cld
adc
add
push
(bad)
call
stos
pop
push
rol
push
adc
pop
ret
pop
or
jb
div
lods
and
mov
xor
or
jmp
in
xchg
cld
inc
fstp
xchg
scas
fisttp
inc
lock
xchg
sub
mov
xchg
(bad)
xchg
sub
pop
sub
outs
dec
mov
aas
mov
sub
aam
mov
pop
icebp
ret
cmp
or
sar
popf
ret
inc
cmp
xchg
lds
and
mov
sub
and
enter
xchg
add
mov
pusha
pop
test
popa
push
cmps
cwde
outs
(bad)
add
and
test
xchg
jbe
pop
xor
inc
mov
add
push
scas
cld
dec
pop
imul
(bad)
in
cmp
dec
push
xchg
xor
mov
mov
or
inc
adc
or
stos
add
jmp
sub
xor
jne
daa
ins
xor
xlat
add
je
ret
jns
lock
sbb
pusha
(bad)
fisubr
sbb
data16
inc
adc
cmps
loop
test
ret
ror
push
ja
add
out
dec
cs
mov
sti
das
jecxz
cmp
push
jecxz
ins
je
sub
retf
xor
cli
inc
test
loopne
fisub
push
inc
sahf
and
add
(bad)
das
test
movs
mov
mov
sub
cmp
inc
cwde
adc
shr
mov
xchg
sub
adc
(bad)
or
fisubr
add
sti
xchg
enter
jno
jmp
xor
scas
and
repz
scas
and
push
cmp
enter
sbb
(bad)
imul
dec
inc
jmp
out
pop
cdq
and
test
push
mov
ins
ds
mov
call
push
mov
outs
mov
mov
fisub
push
xor
inc
or
lahf
(bad)
imul
mov
std
adc
jnp
shl
or
mul
sbb
inc
mov
xchg
mov
push
sub
das
mov
mov
leave
hlt
mov
mov
mov
pop
test
movs
aaa
add
add
lock
test
in
pop
sti
icebp
adc
mov
dec
sbb
xor
rcr
add
or
sub
into
sbb
inc
je
test
adc
xchg
aaa
lds
and
dec
inc
ds
mov
push
mov
popa
mov
mov
(bad)
cli
xchg
cmp
test
pop
jge
mov
mov
es
jle
cmps
cmp
sub
push
gs
pop
jae
pop
fs
cdq
rcl
fidiv
ror
or
push
pop
stc
data16
call
sti
imul
and
sar
outs
push
xchg
in
ds
add
test
sub
enter
adc
add
cdq
rcr
call
ja
out
fdiv
push
mov
div
mov
pop
into
jmp
mov
pop
call
dec
in
leave
pop
mov
in
test
retf
idiv
(bad)
pop
xchg
shr
mov
sub
scas
cmps
rcl
adc
and
dec
and
mov
inc
add
push
jno
adc
jns
push
cmp
in
push
jb
push
and
add
leave
idiv
sub
cdq
fidiv
aad
in
add
jmp
add
int3
lock
in
push
adc
cli
loop
lock
pop
push
add
aam
icebp
push
push
je
jl
dec
in
push
repz
lea
cmp
mov
popf
jmp
aaa
inc
inc
and
push
sbb
mov
mov
sbb
mov
sub
xor
ret
mov
ds
fist
lods
cmp
jp
std
pop
addr16
xchg
iret
inc
mov
dec
shr
in
mov
adc
pusha
std
adc
jl
and
xor
push
(bad)
pop
add
cmp
mov
popf
out
add
cmp
(bad)
and
outs
fstp
jmp
les
fdiv
push
pop
les
add
mov
adc
mov
lahf
sar
xor
scas
jo
fstp
fbld
jns
repnz
mov
jo
div
rep
icebp
icebp
and
ret
sub
(bad)
dec
pop
lock
jmp
push
mov
push
mov
ja
iret
or
dec
sub
add
dec
add
sar
jmp
in
and
in
faddp
fnsave
cmps
jmp
adc
add
adc
fmul
jbe
adc
jns
dec
outs
lods
mov
inc
jg
jno
mov
mov
mov
add
pop
cmp
mov
imul
jo
loopne
xchg
pop
push
pop
leave
jmp
repz
push
ins
adc
(bad)
push
adc
test
sub
add
stos
movntps
mov
push
jns
jmp
adc
ficomp
add
loope
adc
pop
sbb
add
ja
in
into
lock
jge
mov
jp
or
test
mov
clc
fidivr
(bad)
scas
leave
loop
aam
push
mov
dec
push
mov
cmp
call
out
inc
enter
(bad)
jp
sub
loopne
jecxz
jb
rol
out
aam
mov
loop
mov
mov
adc
push
fdivr
ins
xor
pop
push
push
repnz
sub
jno
pop
jle
nop
(bad)
sbb
mov
or
stc
mov
adc
inc
int
ss
or
addr16
or
dec
arpl
xor
cmovge
dec
call
cmc
loop
scas
ret
stos
ja
fs
enter
jl
sti
out
out
push
dec
mov
mov
xchg
add
push
fild
fcomp
retfw
xchg
pop
adc
or
mov
add
inc
cmp
push
pop
dec
push
clc
adc
test
repz
pop
xor
sub
hlt
ja
and
push
or
fst
pop
mov
and
mov
sbb
lds
adc
push
xchg
add
jg
mov
add
xchg
and
ins
adc
cld
or
cmps
std
retf
or
mov
inc
test
mov
mov
cmc
or
cmps
test
movs
(bad)
movs
pop
jp
jl
test
movs
add
retf
iret
popf
std
xor
lock
stos
es
popa
xchg
ds
aad
repnz
mov
adc
movs
push
aad
dec
and
and
cmps
inc
mov
jno
movs
inc
adc
sub
dec
pop
add
or
or
jne
jmp
push
push
add
lea
xchg
out
or
jns
aaa
mov
mov
imul
out
fwait
jp
stos
bound
xor
sysenter
outs
out
mov
jo
push
sbb
adc
add
movs
xor
repz
cmp
or
js
cld
imul
pop
mov
adc
mov
inc
sbb
cmp
or
mov
cmps
inc
(bad)
sub
mov
daa
jp
cmp
mov
pusha
adc
add
add
or
inc
(bad)
mov
scas
(bad)
fdecstp
icebp
push
out
sub
mov
fstp
dec
sub
test
int3
nop
jno
scas
fmul
shl
dec
int
mov
outs
mov
cmp
push
in
pop
lea
and
mul
and
sbb
std
adc
into
js
ret
pop
push
in
lahf
xchg
sub
cmp
sub
jo
xchg
cmps
mov
div
aas
cli
xor
ret
pusha
sub
sahf
not
xchg
push
frstor
mov
aas
ds
rol
stos
sbb
or
fiadd
fiadd
movs
pop
xchg
ja
xlat
in
sub
jmp
adc
ss
addr16
sbb
loopne
jg
test
ficom
aad
push
sub
pop
(bad)
sbb
inc
xchg
push
fwait
mov
mov
jno
cmps
iret
sub
dec
push
sub
test
movs
mov
add
shl
push
rcr
and
sbb
mov
movs
les
je
lea
adc
sub
pop
xchg
cwde
call
mov
jge
outs
pop
mov
dec
or
js
test
leave
pop
out
outs
jmp
daa
ins
jge
pop
xchg
cmps
pop
push
inc
or
aaa
push
mov
pop
fs
pop
mov
int3
add
or
call
out
mov
fidivr
clc
or
ret
mov
mov
add
retf
xor
jecxz
mov
add
adc
in
retf
cmp
jp
outs
jg
sti
mov
inc
loope
sti
or
fcomp
cld
arpl
and
jecxz
inc
pop
xchg
pop
test
jns
jecxz
dec
jmp
jp
xor
nop
jmp
sbb
mov
and
mov
in
mov
adc
push
das
cmp
call
in
jl
and
xchg
paddusw
or
mov
outs
mul
push
jmp
push
lods
mov
fidivr
cs
dec
aaa
jle
sbb
pop
not
dec
jge
jle
mov
dec
ficom
loope
leave
cdq
sti
pop
sub
add
and
bound
pop
sbb
and
xor
shr
rep
leave
xor
xor
push
nop
into
or
xor
(bad)
pop
inc
loopne
mov
jecxz
rcr
mov
mov
or
jo
fbld
outs
inc
cdq
add
sahf
push
sub
sub
pop
add
jnp
cmps
fwait
dec
add
sti
adc
mov
int3
ret
shl
mov
stos
dec
cwde
dec
mov
daa
ret
out
adc
pusha
add
mov
dec
or
dec
in
repz
std
and
(bad)
leave
mov
mov
aaa
fisttp
out
adc
jno
adc
cs
inc
xchg
add
mov
ret
repnz
pop
mov
das
mov
ins
arpl
rol
mov
ds
jmp
jmp
jns
clc
call
repz
ror
data16
push
jmp
pusha
ja
sahf
xor
xor
mov
mov
outs
cdq
repnz
daa
clc
cmp
mov
dec
xor
fild
sbb
xchg
test
inc
inc
js
xchg
pop
mov
je
and
popf
adc
loope
dec
repnz
test
fld
cmp
adc
push
movs
mov
adc
or
sub
mov
gs
inc
and
xchg
test
mov
(bad)
call
dec
je
mov
shl
loopne
dec
sbb
fbld
xor
or
cmp
rcl
pop
out
dec
dec
fs
dec
xchg
mov
jmp
lahf
ds
shl
jmp
dec
pop
test
pushf
pop
pop
mov
je
(bad)
add
push
mov
popf
dec
scas
cli
popa
ss
leave
cmp
inc
cmp
scas
inc
sub
lds
jg
fbld
in
sbb
sub
cmp
pop
add
stc
jae
icebp
scas
xchg
shr
repnz
mov
mov
push
push
cmc
xor
ss
cwde
xchg
push
adc
jb
aas
fist
xchg
and
pavgb
leave
mov
cld
mov
jge
dec
nop
cmp
mov
mov
jb
or
xchg
mov
inc
cmp
mov
fcmovnu
les
jb
fs
out
xchg
inc
xchg
ret
xor
inc
mov
retf
outs
ds
or
stos
xchg
mul
in
adc
adc
inc
sub
mov
stc
adc
das
mov
mov
jmp
cld
pusha
add
push
xor
lds
loope
or
shr
lods
arpl
inc
add
ins
pop
addr16
dec
pop
jl
ficom
xchg
jg
mov
push
mov
or
test
add
in
pop
mov
leave
ret
(bad)
inc
es
popa
ins
adc
dec
pop
pusha
pop
inc
and
pop
adc
loop
ret
dec
mov
adc
mov
fadd
std
add
push
imul
repz
stos
cmp
cmp
sti
sbb
sti
(bad)
lea
mov
sbb
add
in
and
inc
sub
cwde
pop
psrad
rcr
movs
add
ds
jns
push
(bad)
in
rcr
cdq
into
in
pusha
and
outs
mov
lea
dec
pushf
sbb
xchg
dec
into
gs
or
leave
retf
scas
jae
rcl
jno
sub
mov
enter
inc
xor
xor
and
push
inc
push
lock
dec
dec
fwait
sahf
xchg
push
in
xchg
call
scas
dec
sbb
xchg
stos
push
dec
(bad)
fwait
mov
loop
fld
ds
out
and
arpl
dec
pop
mov
mov
repnz
pop
push
popf
push
adc
mov
(bad)
sbb
jns
mov
inc
add
sbb
mov
icebp
xchg
xchg
arpl
dec
sub
xchg
retf
addr16
(bad)
movzx
cmp
pop
aam
fdivr
addr16
jbe
push
hlt
push
sbb
ret
jno
inc
call
pusha
cmp
clc
and
ins
mov
fiadd
stos
push
(bad)
sbb
(bad)
pop
pop
je
xor
or
mul
push
aad
adc
retf
in
mov
pop
mov
push
cmp
sub
das
sub
aaa
mov
pop
(bad)
fs
mov
stos
dec
in
pop
jns
ror
in
cwde
shl
sub
pop
mov
mov
add
imul
bound
imul
fwait
imul
or
int
inc
rcl
or
mov
enter
mov
mov
mov
movs
cdq
cdq
pop
dec
fistp
ror
mov
or
mov
adc
imul
dec
inc
das
imul
xor
outs
shl
shl
mov
ins
aaa
enter
jo
rol
xor
jbe
push
or
jp
pop
ds
sbb
cmp
cmp
(bad)
dec
or
add
fist
aas
imul
in
cdq
push
xor
jp
test
mov
and
out
test
inc
aam
arpl
xchg
or
in
push
mov
cdq
idiv
(bad)
add
mov
or
jo
cmp
push
and
jl
pop
mov
mov
fmul
sbb
gs
push
mov
cmp
and
cwde
repnz
dec
loope
jmp
in
cmps
(bad)
or
test
mov
aas
sbb
jge
mov
xchg
enter
add
xlat
neg
ins
mov
lock
icebp
imul
fwait
clc
xor
or
stos
mov
(bad)
test
pop
jnp
jne
jbe
aaa
fnstenv
ins
repnz
xchg
in
in
imul
(bad)
daa
pop
dec
sahf
mov
mov
xchg
outs
loope
les
(bad)
jne
sar
fdivr
rcl
and
sbb
xor
push
push
add
fsub
push
ja
frstor
dec
mov
call
enter
jp
push
fwait
out
aam
mov
add
data16
mov
push
xlat
iret
adc
add
aaa
fstp
scas
push
inc
test
hlt
xchg
jnp
out
popf
adc
push
xchg
dec
pusha
pop
mov
jbe
jb
mov
push
mov
popf
test
sbb
dec
aaa
ret
adc
sub
rcr
or
movs
add
xor
std
icebp
leave
cmp
xchg
mov
xchg
mov
int
and
sbb
dec
mov
enter
fidivr
sub
fwait
mov
rcpps
repz
gs
sub
mov
jge
jns
ret
inc
in
iret
retf
call
pop
shr
mov
xchg
add
and
cmp
stos
sub
xchg
std
or
shr
scas
sbb
push
or
adc
xchg
lods
inc
sbb
jecxz
icebp
movs
les
jge
(bad)
or
cmp
mov
mov
fiadd
(bad)
out
imul
push
push
cmp
pop
push
ret
add
pop
fiadd
cmp
in
popf
pop
out
sub
xchg
(bad)
pop
mov
sub
mov
sbb
push
inc
sbb
adc
fild
sbb
call
xchg
mov
push
jno
or
inc
stos
cmp
(bad)
and
enter
adc
mov
push
int
or
ret
movs
pop
add
dec
mov
push
rol
out
loope
ins
out
push
adc
in
xor
mov
stos
sahf
addr16
stos
pop
jnp
jp
jno
or
pusha
sbb
mov
xor
and
imul
and
test
aas
mov
jl
out
lahf
dec
(bad)
test
jae
retf
and
clc
mov
test
adc
mov
mov
and
leave
cmps
call
hlt
pop
ins
or
adc
mov
dec
std
imul
scas
out
inc
lahf
test
pop
ins
cmc
push
pop
rcr
inc
adc
mov
jb
in
sahf
into
dec
push
sbb
jl
inc
xchg
popf
sub
fisttp
inc
mov
cmp
cli
and
xchg
test
add
cmp
stos
cs
loope
mov
xor
mov
jge
push
jb
cli
adc
or
mov
fist
xchg
hlt
mov
iret
arpl
ror
adc
fcomip
xor
or
xchg
(bad)
fimul
sbb
xlat
mov
cmps
inc
fwait
pop
stos
lds
loope
cmps
ja
das
add
shr
stc
dec
adc
adc
cwde
aas
mov
arpl
adc
sbb
es
cdq
or
and
cmp
or
xchg
jnp
(bad)
sub
aas
sbb
cmp
xchg
idiv
jb
xchg
repz
and
pop
aas
int
rol
inc
cwde
xchg
mov
retf
mov
jecxz
xchg
sahf
cmp
adc
xchg
or
pop
add
xlat
in
mov
mov
mov
fwait
push
mov
inc
inc
push
dec
push
sub
mov
pop
into
mov
inc
xchg
not
cmp
in
xchg
lods
xchg
enter
fcom
hlt
mov
dec
fs
sub
loope
das
xchg
inc
sti
shr
jns
fyl2xp1
(bad)
dec
adc
push
xchg
inc
pop
imul
xchg
stos
les
fwait
cmp
inc
cld
sar
mov
mov
pmulhuw
cdq
mov
lock
pop
ss
mov
push
and
pop
sti
test
xchg
pop
bound
ret
lods
dec
jb
inc
jmp
xor
shl
and
jo
and
and
push
jae
icebp
jne
mov
jno
fwait
cmp
mov
cmp
loope
or
es
(bad)
pop
jo
mov
sub
inc
cld
jle
push
cmps
out
jae
jl
outs
mov
and
pop
inc
jecxz
or
test
xchg
fs
shl
sub
mov
(bad)
lods
inc
hlt
in
stos
sbb
inc
int
mov
aam
jnp
xchg
movs
or
popa
cmp
xchg
(bad)
in
int
mov
cdq
lods
mov
push
dec
cs
add
mov
mov
and
fs
hlt
in
xchg
sar
imul
xchg
sub
rcl
addr16
into
sub
or
in
mov
test
push
push
jne
je
daa
pop
push
test
pop
push
aas
push
push
je
sbb
jns
cs
jge
sub
lods
jae
imul
scas
pop
retf
es
add
adc
mov
fistp
mov
shl
push
not
lea
retf
dec
xchg
lahf
xor
int
mov
lds
shl
cwde
add
repnz
and
add
je
add
push
lds
xor
pop
std
xchg
jp
add
call
les
std
and
or
gs
inc
jb
sbb
mov
fild
scas
and
jle
mov
rcr
pop
shl
jecxz
adc
mov
cmps
enter
push
repz
not
cmps
repz
retf
lahf
sub
add
iret
cwde
mov
inc
dec
mov
mov
cli
jnp
paddusw
adc
enter
jecxz
push
cmps
arpl
push
mov
js
aam
jnp
or
pop
adc
jae
fcom
es
inc
cld
sbb
sub
test
sti
sub
cmp
cli
pusha
mov
inc
xor
pop
retf
pop
(bad)
cld
cli
xor
or
cs
xor
mov
loopne
mov
aad
std
imul
jge
dec
retf
popa
adc
aaa
sub
xchg
rol
out
rcr
(bad)
fld
cwde
mov
and
in
mov
cmp
jae
fs
ss
je
and
and
adc
int
enter
inc
in
cmps
pop
xchg
push
and
popf
mov
add
add
and
idiv
retf
or
or
pushf
and
or
xor
sbb
inc
jnp
dec
inc
jnp
jnp
cmp
loop
push
fisttp
es
dec
int
(bad)
sbb
add
pop
push
je
loop
int3
retf
xor
xor
pop
call
es
lock
sbb
les
test
jmp
adc
xchg
sbb
mov
add
shl
pusha
ins
fucomip
nop
movs
push
add
dec
sub
inc
dec
std
push
pop
outs
or
inc
fst
ret
enter
mov
inc
or
mov
jno
in
mov
popf
(bad)
mov
xchg
push
xchg
call
push
je
inc
lods
jbe
sbb
inc
push
cdq
inc
pop
or
aad
cmps
dec
dec
mov
jne
mov
hlt
aam
adc
dec
test
cmp
loop
mov
movs
add
scas
test
aad
out
inc
out
(bad)
out
push
inc
sub
xor
ds
std
aas
jae
test
aam
movs
push
shr
in
mov
xor
sub
jb
jo
sub
sbb
enter
push
(bad)
outs
cdq
mov
sahf
dec
popf
mov
std
aad
and
push
iret
shr
ins
fs
arpl
or
cmc
(bad)
(bad)
jle
sub
xchg
aam
sahf
push
jg
cmp
mov
ds
xchg
jbe
cmp
jnp
xor
jnp
pop
mov
cmp
jmp
shl
cwde
pop
lock
and
mov
jmp
mov
pop
push
and
xor
test
lods
mov
aam
push
icebp
sbb
push
dec
xor
add
retf
dec
sbb
not
mov
ret
cs
xlat
(bad)
jmp
stc
daa
stc
ins
jo
inc
retf
sbb
jne
inc
neg
mov
lods
jmp
pusha
cmp
call
xor
mov
fcom
(bad)
ror
cmp
lods
retf
sub
mov
repz
pushf
daa
test
jl
dec
mov
pop
or
mov
pop
clc
push
mov
stc
out
lods
bound
stos
dec
push
xor
ret
sub
imul
and
ss
jecxz
rol
fld
jge
pop
fsub
scas
and
mov
sahf
sub
lods
pop
clc
add
fwait
inc
push
fs
sub
mov
in
mov
add
aad
mov
mov
dec
dec
mov
mov
cdq
out
js
xchg
adc
call
ja
sub
cs
and
sbb
sub
loope
in
movs
pop
aas
fs
leave
push
jo
inc
in
out
push
lock
(bad)
clc
sub
xchg
dec
adc
sbb
pop
cld
(bad)
jmp
pop
pushf
mov
add
cmp
dec
push
push
cmp
in
fimul
and
retf
(bad)
cmp
(bad)
nop
pop
mov
cmp
or
or
and
inc
sub
mov
inc
cld
push
mov
ss
and
add
test
or
mov
std
(bad)
icebp
js
cs
mov
jmp
mov
mov
mov
jl
fstp
sbb
ret
ja
es
xchg
add
arpl
out
adc
sub
cdq
or
test
push
add
fldenv
xor
fwait
rcl
jns
pop
popa
pop
xor
es
mov
ja
lea
pop
(bad)
sbb
mov
(bad)
cmp
(bad)
sbb
adc
jmp
bnd
jnp
xor
dec
and
add
dec
xchg
jecxz
jnp
scas
hlt
xor
add
clc
pop
nop
jle
mov
ss
mov
xchg
out
test
cmps
mov
mov
jb
cwde
mov
sub
pop
and
iret
and
or
call
out
repz
sub
sub
add
sub
jecxz
fnstsw
daa
pop
or
jo
or
int
xor
push
and
push
or
xor
mov
cli
jne
mov
or
and
add
(bad)
dec
rcr
cmps
mov
sbb
psrlw
outs
test
xchg
icebp
push
xchg
push
adc
stc
fs
movs
clc
adc
in
xchg
popa
sbb
push
mov
pop
mov
cmps
adc
loop
dec
xchg
pop
pop
imul
ror
lods
fsubr
lock
sub
cmp
out
pusha
adc
rcr
jle
adc
mov
bound
outs
popf
mov
or
test
test
loopne
mov
adc
sar
lahf
mov
mov
cmps
bound
loope
mov
lock
cmp
dec
jne
repz
sbb
addr16
inc
xchg
mov
add
dec
xchg
xor
pop
loopne
call
ss
shl
(bad)
jmp
enter
test
dec
xor
jecxz
mov
xchg
int
cmp
loopne
fwait
mov
lods
scas
jns
mov
call
jl
sar
sahf
cmp
stc
xchg
lods
cli
imul
add
(bad)
inc
mov
lahf
dec
xchg
je
mov
ins
stos
fwait
mov
out
mov
push
lock
xchg
xchg
lock
clc
and
inc
xchg
movs
pop
rol
xchg
fld
mov
mov
and
xchg
js
xchg
pushf
xchg
pop
test
xchg
sub
sbb
lahf
ror
cmp
mov
inc
rol
inc
ins
dec
xor
and
es
retf
mov
fdiv
cli
shl
(bad)
idiv
mov
stc
xchg
ret
sub
jnp
cmp
mov
push
cwde
mov
dec
and
mov
aas
pop
sub
je
popa
cwde
ja
pop
ins
(bad)
fist
pop
push
imul
imul
and
ror
jbe
push
std
xchg
sti
cdq
pop
xchg
mov
add
test
jecxz
stos
mov
stos
ins
add
daa
sar
push
jo
in
mov
rcl
paddsw
rcr
sub
sub
push
in
add
and
int
test
dec
imul
addr16
retf
sub
call
jp
sub
push
mov
sbb
pop
sub
outs
mov
out
inc
outs
sub
add
push
and
es
in
dec
push
aas
dec
xchg
es
mov
inc
pop
ins
dec
pop
fisttp
fcmove
push
cs
cmp
test
push
mov
imul
add
fdiv
data16
inc
adc
pop
jne
inc
mov
jl
inc
mov
fwait
pop
nop
cmp
mov
fs
into
out
dec
outs
clc
call
ficomp
mov
xchg
pop
int
lds
xor
lea
mov
ficomp
pop
inc
xchg
gs
pushf
mov
and
ins
sub
inc
xlat
repz
imul
rol
jbe
lea
test
movs
mov
pop
movs
popa
inc
mov
sub
dec
sub
sub
es
shl
jbe
stos
mov
jb
push
sbb
daa
sub
loope
dec
movs
mov
xchg
cmp
hlt
xchg
(bad)
(bad)
sub
mov
call
and
push
outs
(bad)
pusha
adc
dec
out
pushf
int
sbb
mov
les
jmp
fs
daa
icebp
cmc
mov
and
jp
sub
int3
loop
pop
pop
(bad)
std
inc
pop
cmp
scas
ja
push
and
icebp
call
(bad)
lea
mov
daa
mov
imul
pop
ficomp
lods
fnstcw
mov
int
jl
mov
push
fidiv
ins
mov
lock
out
xchg
lock
in
test
xor
rol
test
push
jl
nop
les
sbb
retf
jmp
xchg
scas
mov
mov
stc
mov
cld
xchg
adc
call
inc
and
cdq
mov
mov
outs
int3
popa
stos
js
mov
mov
xor
stc
inc
in
daa
int3
sar
aaa
pop
sbb
jecxz
dec
cld
fmul
inc
adc
inc
mov
jb
mov
test
xor
or
lock
arpl
pop
mov
das
xchg
in
gs
and
jmp
jb
data16
pop
xchg
adc
(bad)
jnp
cmc
sbb
pusha
inc
push
mul
icebp
mov
mov
js
pushf
leave
test
add
rol
outs
mov
pushf
repz
and
movs
sahf
mov
mov
out
dec
dec
mov
mov
out
ret
pop
inc
cmps
cmp
push
and
mov
push
mov
sbb
(bad)
cmc
mov
imul
cdq
fucom
je
into
retf
fadd
mov
xor
bound
inc
imul
jae
cmp
xchg
(bad)
mov
cmp
fs
test
retf
xchg
or
inc
pushf
cmp
retf
in
sub
movs
stos
popa
or
mov
sbb
and
popa
iret
push
jecxz
push
xor
dec
add
out
pop
pop
or
mov
int
sar
push
imul
out
push
or
adc
(bad)
in
test
and
push
fst
retf
cld
sbb
and
mov
ins
sbb
adc
pop
aam
jae
cs
adc
pop
jno
cmp
enter
add
test
jle
in
mov
jmp
in
jbe
gs
mov
cmp
add
cdq
xor
ja
adc
fnstcw
xor
mov
xchg
xor
icebp
ffreep
hlt
sti
or
xchg
push
lock
push
movs
jmp
fistp
js
int3
mov
rcr
push
movs
mov
jl
pop
mov
and
dec
cmp
push
pop
mov
mov
xchg
(bad)
xchg
(bad)
or
imul
push
loopne
xor
test
stos
pop
stc
loopne
shl
stos
cmps
push
push
mov
aad
fsubr
call
test
fiadd
inc
mov
or
fcomp
mov
dec
fadd
les
popf
adc
sub
pop
or
scas
nop
pop
cmps
inc
call
mov
clc
adc
daa
xchg
outs
pop
pop
pop
loope
jnp
outs
jnp
out
loopne
popa
inc
push
pushf
bound
ret
inc
sbb
cs
rcr
mov
jmp
mov
push
shl
jcxz
sbb
xchg
sub
daa
test
sbb
fimul
stc
or
dec
(bad)
cmp
aam
inc
push
loop
sbb
call
inc
push
ins
mov
cli
pop
adc
outs
jg
or
sub
test
mov
iret
lahf
sub
cmp
dec
xchg
nop
sub
cmp
dec
sar
sbb
stos
push
mov
loopne
dec
xchg
sar
outs
cmps
push
jae
test
outs
popa
(bad)
stos
mov
xor
adc
(bad)
clc
mov
or
xor
jns
pop
push
into
sbb
push
dec
push
add
cdq
jg
dec
sti
rcl
adc
iret
add
push
lock
cmp
fadd
adc
aad
xchg
arpl
jge
enter
retf
stos
cmp
fxch
cmps
fldcw
adc
sbb
jnp
(bad)
mov
inc
xor
push
jnp
cmp
rcr
fwait
xchg
jne
inc
aam
test
jp
cmp
mov
outs
hlt
add
call
sahf
inc
fsubr
or
scas
or
mov
adc
fisttp
cmp
xor
sub
cmps
es
mov
jecxz
inc
pop
pop
jecxz
lods
or
cdq
xor
shl
xor
nop
pop
cmp
iret
cmp
jl
loop
dec
xor
and
out
lods
xlat
pop
rol
add
or
out
femms
jae
xor
dec
pop
push
data16
call
test
xlat
fcom
or
inc
inc
sub
or
jl
inc
outs
pop
(bad)
mov
jae
repnz
or
cmp
test
jb
fild
dec
mov
add
push
dec
or
sub
loope
call
adc
arpl
pop
push
hlt
cmps
cmps
add
push
xor
icebp
xchg
mov
in
push
dec
out
and
jmp
fisub
sub
cmps
fist
clc
add
dec
jnp
mov
adc
adc
sub
xor
sub
and
scas
and
popf
mov
fmul
movs
jbe
jmp
pop
xchg
xchg
push
lods
retf
stos
dec
loopne
mov
ss
scas
add
mov
jo
xlat
or
clc
in
ins
lock
add
rol
out
sbb
pop
cli
mov
scas
stc
ret
outs
or
cmp
push
loop
cs
(bad)
pop
retf
pop
add
lock
xchg
stc
mov
out
inc
retf
dec
and
je
out
mov
cmp
rcl
adc
jae
sub
enter
pusha
pop
lds
lock
out
addr16
mov
sahf
pop
addr16
pop
std
sbb
iret
(bad)
inc
sub
std
inc
push
ret
loopne
jle
sub
outs
jns
mul
ficom
icebp
into
xchg
neg
les
mov
ret
jl
je
dec
out
jmp
sbb
sti
adc
imul
adc
cmp
scas
cmp
dec
push
imul
pop
movs
adc
mov
lds
imul
pop
pop
pop
add
pop
and
outs
jmp
mov
outs
out
ffree
mul
add
inc
sbb
pop
(bad)
adc
mov
movs
pushf
inc
mov
inc
pushf
int
fucom
loop
jg
cmp
outs
jbe
add
xchg
dec
pop
gs
xor
fild
into
call
mov
je
popa
sub
and
cmp
jmp
fcmovnb
mov
popa
or
ss
mov
das
pop
push
ret
or
arpl
lahf
retf
push
mov
sbb
call
xor
or
js
and
shl
jle
call
cli
push
jmp
cmps
cmc
in
test
add
pop
dec
sub
jbe
xor
jmp
dec
cmp
outs
(bad)
movlps
enter
ss
mov
ror
adc
mov
scas
xchg
or
pop
or
xchg
jmp
(bad)
bound
fild
imul
push
imul
mov
jo
jp
cmc
loopne
std
addr16
call
cs
add
and
sbb
add
and
scas
add
and
mov
mov
xchg
inc
shl
movs
std
fs
push
sbb
jge
in
iret
stc
call
jo
retf
adc
lahf
mov
mov
push
add
stos
dec
mov
jb
out
pusha
fs
sub
in
and
mov
gs
icebp
jne
popf
leave
jae
push
rcr
sbb
jge
pop
sbb
stos
enter
je
xchg
test
jmp
mov
or
clc
ret
xchg
jno
dec
xor
add
pop
ins
add
adc
push
jle
pop
mov
loope
dec
ins
int3
popf
cmp
mov
pop
dec
mov
scas
jmp
push
rcl
sub
call
push
(bad)
pop
fsubr
xchg
(bad)
ficom
popf
cmps
pop
retf
mov
mov
iret
cld
xor
lock
ja
dec
repnz
push
sbb
cli
mov
jne
fld
pop
jnp
not
jp
in
pop
or
xchg
cmp
sar
fwait
sahf
imul
mov
das
lahf
push
movs
nop
mov
xor
cmp
push
cmp
mov
and
sbb
and
mov
sti
mov
mov
mov
lea
mov
(bad)
cmp
loope
nop
pop
adc
pop
outs
dec
jecxz
push
dec
jg
jo
sbb
test
rcl
stos
push
shl
cmp
mov
mov
movs
pusha
rcr
or
jne
and
outs
mov
aam
fimul
retf
(bad)
aad
mov
mov
cwde
fld
les
cli
pop
jmpw
call
mov
inc
popf
(bad)
jmp
fs
ins
mov
xor
sub
out
mov
icebp
test
dec
out
xor
push
mov
bnd
inc
adc
mov
out
inc
retf
daa
cdq
xor
xchg
cmp
xchg
adc
test
imul
test
pushf
(bad)
mov
(bad)
push
cmp
out
or
pop
adc
jl
mov
cli
mov
and
pop
jbe
adc
mov
adc
mov
cmps
fwait
loopne
push
sti
sahf
retf
cmps
sub
jp
xchg
scas
mov
sub
(bad)
pop
ds
add
test
stos
inc
hlt
xchg
mov
pop
add
icebp
test
(bad)
pop
xchg
sbb
loopne
mov
adc
mov
iret
xor
rcl
xchg
jl
mov
loop
shr
es
push
jp
sbb
iret
outs
repz
push
jp
inc
repnz
sub
mov
fist
dec
pop
xor
in
jo
jo
push
mov
adc
cmps
cdq
xchg
out
int3
jne
(bad)
add
outs
inc
jns
test
scas
cmc
or
imul
sbb
test
jno
lods
jecxz
les
sub
shr
fidiv
cmp
aad
mov
ret
xchg
mov
daa
outs
push
cmp
fwait
les
stos
jae
jmp
(bad)
sar
aas
sub
and
pop
adc
mov
sub
(bad)
(bad)
adc
or
mov
scas
inc
jge
mov
iret
aam
xlat
adc
xor
pop
repz
inc
lods
push
scas
mov
jge
mov
cmp
shl
sbb
sub
fs
mov
clc
ss
cld
push
aam
mov
in
movs
xchg
fsub
repnz
test
jno
sub
mov
jmp
inc
pop
mov
int
push
inc
leave
dec
jns
mov
sbb
das
lods
retf
fmul
test
ins
sbb
lods
ds
inc
fisubr
add
int3
add
and
rol
and
popf
stos
loop
push
int
int
movs
jp
mov
mov
or
inc
stc
pop
std
xchg
pop
mov
fcomp
mov
pushf
xchg
jns
jae
sub
adc
adc
mov
xchg
aam
mov
shl
shr
mov
(bad)
nop
test
xor
mov
leave
mov
(bad)
inc
(bad)
cmp
adc
cmp
mov
mov
xchg
push
xor
push
dec
cmp
jl
dec
sub
movs
mov
stc
dec
jo
pop
mov
or
and
adc
dec
out
shr
pop
retf
pop
adc
std
jae
out
dec
add
pop
xor
aaa
mov
inc
cli
adc
and
inc
fwait
cmp
sbb
jp
cmp
inc
movs
and
das
(bad)
aam
and
das
jle
cmp
inc
lock
loopne
out
push
and
out
outs
add
fwait
popf
(bad)
cmp
dec
es
mov
sub
mul
jb
jbe
mov
lock
lds
add
mov
bound
push
dec
mov
out
or
stos
push
ret
adc
clc
jns
fisub
(bad)
sti
inc
pop
mul
lods
cmp
call
cmp
mov
xchg
fcom
hlt
lods
aam
inc
fldlg2
inc
jge
repz
sbb
arpl
mov
call
lea
xor
(bad)
cld
in
mov
div
adc
dec
aad
xchg
sbb
jle
pop
and
int
pop
addr16
push
cmp
jo
lds
adc
dec
cld
mov
in
syscall
dec
or
movs
inc
xchg
cmp
imul
dec
push
ffreep
test
lods
pop
mov
add
retf
mov
xor
addr16
sub
jb
call
ret
pop
xchg
mov
inc
xchg
sbb
push
cmc
sbb
cmp
jbe
arpl
sbb
xor
add
jmp
stos
jo
pusha
mov
or
mov
out
daa
or
mov
inc
mov
repz
sub
shl
push
sbb
cmp
and
jl
icebp
(bad)
cs
pop
(bad)
jmp
jl
stc
addr16
xchg
movs
cwde
fcmovnbe
or
mov
ret
int
inc
or
iret
push
inc
sbb
add
dec
iret
(bad)
mov
aas
add
and
leave
shr
dec
bound
mov
sub
cmp
bound
adc
test
mul
fild
mov
shr
xchg
aad
cwde
sub
pop
jmp
loopne
(bad)
adc
rcr
mov
add
adc
mov
jb
pop
popf
cmc
(bad)
repz
enter
sub
outs
dec
sbb
fwait
(bad)
or
push
(bad)
push
and
pop
ret
(bad)
movs
mov
xor
jmp
mov
dec
xor
scas
cmp
int
leave
mov
or
cmp
add
fst
jns
jns
test
sub
jo
in
sbb
pop
popf
fcmovb
cs
fdiv
cwde
mov
cmp
(bad)
jb
sbb
and
bound
aad
nop
popa
ror
imul
mov
sub
pop
mov
jae
(bad)
dec
mov
jmp
aam
sub
or
addr16
or
popa
or
mov
push
(bad)
in
call
pop
sub
outs
popf
ins
retf
push
sub
loopne
outs
sbb
popa
xor
xchg
mov
jns
xchg
and
imul
cmp
mov
lea
jnp
bound
into
xor
push
and
popa
push
in
push
and
jb
xchg
sti
aaa
inc
(bad)
cli
or
dec
pusha
retf
out
or
je
pop
xor
sahf
and
pop
push
jmp
push
inc
and
out
les
repnz
add
cwde
xchg
add
jp
shl
scas
aad
xchg
add
(bad)
in
add
and
les
pop
pop
loope
outs
fwait
mov
mov
fisttp
fld
std
loopne
(bad)
(bad)
pop
jnp
not
idiv
mov
adc
data16
and
inc
and
mov
in
ja
or
adc
jbe
inc
push
jmp
jns
leave
adc
pop
retf
cmps
push
cwde
inc
popf
iret
or
add
(bad)
and
fidivr
fild
mov
mov
xor
jb
out
mov
mov
ret
adc
dec
adc
fistp
push
pushf
mov
leave
imul
jo
clc
jge
sahf
pop
fsub
lahf
cmp
test
fwait
ret
or
ds
in
mov
outs
aam
jl
mov
pop
loop
dec
pop
dec
cmp
mov
pop
mov
imul
fwait
xor
fdiv
fisttp
scas
fdiv
dec
scas
dec
dec
mov
or
sub
mov
fmul
push
lgs
inc
push
dec
mov
push
loopne
jb
adc
and
or
dec
sahf
aaa
(bad)
adc
sar
push
adc
daa
lods
test
mov
lock
int3
sub
mov
pop
push
outs
lea
lds
cdq
jecxz
and
pushf
adc
jo
enter
test
xor
jl
push
fidiv
ds
sahf
xor
jbe
(bad)
stc
inc
mov
pop
sbb
adc
test
out
(bad)
call
retf
xor
inc
int
add
imul
mov
cmc
sub
shr
and
cmp
(bad)
xlat
int
mov
mov
or
cmp
lods
(bad)
movs
or
ss
(bad)
ror
ja
mov
push
gs
or
ss
out
xchg
imul
add
or
xor
jecxz
jmp
lds
sbb
sbb
dec
push
xor
rcl
mov
and
and
(bad)
in
xor
test
enter
loope
sub
(bad)
(bad)
imul
ret
inc
adc
jne
mov
sub
test
sub
mov
ins
ins
xlat
mov
inc
clc
mov
hlt
stc
push
fcom
sub
mov
xchg
mov
jge
js
add
popa
scas
shl
bound
xchg
fcom
inc
loopne
sbb
ja
loope
jnp
mov
mov
dec
outs
mul
push
rcr
bound
and
les
xor
rcr
xchg
add
mov
xor
aad
mov
cmps
jg
sub
test
sbb
and
or
hlt
test
int
jo
cmp
mov
cs
jns
(bad)
push
jo
mov
mov
cmp
push
int3
repnz
push
jl
ja
xchg
in
push
jp
jbe
mov
push
xchg
stos
iret
xor
sti
mov
mov
mov
jbe
(bad)
fdivr
cmp
mov
data16
adc
cld
das
jns
or
test
ins
mov
sbb
mov
jbe
imul
pop
sahf
inc
sbb
fdiv
ror
inc
mov
cmp
popf
retf
inc
jle
cli
dec
adc
adc
sub
sbb
scas
rol
stc
mov
dec
es
fisttp
pusha
mov
rol
sub
bound
push
retf
test
ins
mov
retf
xlat
retf
dec
push
daa
(bad)
and
xor
fwait
mov
adc
or
nop
push
test
sub
in
cmp
mov
ficom
(bad)
mov
inc
pop
dec
int
mov
adc
sub
sub
add
mov
lods
adc
jle
scas
add
xchg
test
sub
xor
add
mov
bound
(bad)
in
push
enter
jno
mov
add
mov
add
jae
add
outs
cmc
or
data16
pop
fimul
jp
mov
xor
xor
data16
lods
stc
in
test
vaddpd
and
pop
mov
pop
or
xlat
jmp
mov
push
push
jmp
fisttp
jb
int3
jge
xor
sbb
cmp
pop
cmp
ret
sar
fs
scas
jp
pop
push
sub
not
push
or
enter
xchg
xchg
xor
cwde
inc
(bad)
aad
movs
movs
mov
pop
or
(bad)
adc
sub
pop
test
shl
(bad)
mov
das
aad
test
cmp
mov
fsubr
in
add
(bad)
rcl
xchg
or
mov
xor
data16
mov
push
mov
ret
xor
ins
and
inc
add
or
inc
xchg
or
(bad)
xor
jecxz
clc
daa
repz
push
mov
js
mov
(bad)
or
stos
sub
dec
jecxz
(bad)
mov
nop
mov
xor
aaa
add
jb
xchg
fistp
dec
pop
dec
add
inc
loop
mov
movs
and
fstp
out
add
rol
cld
jno
mov
popa
out
and
dec
sbb
sbb
loop
dec
sbb
adc
mov
imul
push
push
mov
xor
jge
ins
cld
out
mov
(bad)
mov
lahf
xchg
fidiv
xchg
out
xchg
nop
test
cmc
add
push
neg
(bad)
push
xor
adc
(bad)
xchg
out
mov
repz
or
add
sbb
stos
mov
leave
sbb
xor
movs
aam
mov
cld
lahf
ja
push
and
setnp
add
jbe
ret
mov
adc
adc
sbb
and
cmp
sub
aaa
fstp
iret
push
imul
ror
or
cmp
loope
test
jo
pop
sahf
inc
adc
cmp
mov
in
inc
jmp
dec
add
mov
mov
sub
cwde
pop
aaa
inc
sub
dec
ss
fsubr
call
clc
ret
xchg
inc
xor
rol
pop
fisttp
cwde
cmp
test
xor
fsub
inc
int3
push
(bad)
mov
fdivrp
aam
mov
sub
fwait
pusha
xor
or
jno
stos
or
sbb
jns
adc
lods
push
adc
jne
jno
mov
pop
addr16
xor
push
push
sbb
aam
jg
addr16
fiadd
pop
(bad)
push
mov
push
push
jle
and
xor
push
fiadd
int
daa
dec
int
icebp
fisubr
int3
mov
ret
sub
inc
mov
mov
call
mov
aas
xor
dec
sub
sub
ds
inc
fsubr
push
lds
adc
out
test
hlt
sub
push
cmps
or
and
xor
and
fdivr
dec
jmp
enter
lds
into
dec
cmp
inc
pop
add
mov
mov
inc
rcl
pop
retf
mov
popa
cdq
sub
lds
std
pop
adc
gs
fidiv
loope
push
jg
xchg
mov
dec
popa
(bad)
mov
jle
aas
push
data16
sar
ffree
test
or
cs
and
pop
jmp
popa
(bad)
hlt
ds
sbb
daa
pop
push
fidivr
repz
loope
test
ja
xchg
cmps
xchg
sub
inc
jmp
adc
call
movs
mov
sub
rcl
xchg
scas
repnz
and
fmul
and
ror
inc
add
push
sub
(bad)
sub
xor
cmc
xchg
cld
mov
sahf
adc
aad
jmp
push
adc
pop
or
jge
sbb
jns
mov
fdivr
push
push
cmp
xchg
shl
cmp
and
add
das
addr16
jg
xchg
shl
sbb
mov
push
mul
std
cmc
and
adc
outs
and
jne
xchg
sub
jmp
push
int3
fsub
in
shl
xchg
inc
fbld
pop
test
jns
mov
out
neg
push
push
pop
ss
xchg
pop
mov
cmp
inc
mov
cmc
add
(bad)
sar
in
ja
dec
push
sbb
test
add
sar
pop
pop
pop
ins
xchg
retf
jb
mov
jb
js
pop
int3
and
push
xor
mov
movs
mov
mov
popa
sub
xlat
adc
clc
pop
int3
cmp
sbb
mov
and
stos
sub
mov
arpl
pop
repnz
sub
add
jns
pusha
imul
push
push
pop
fs
pop
scas
(bad)
xlat
or
push
arpl
ret
add
add
movs
jge
pusha
dec
(bad)
pop
adc
dec
mov
xchg
iret
inc
pusha
add
fstp
mov
mov
adc
ds
jmp
ret
push
in
sbb
xor
jge
dec
dec
jno
ds
mov
bound
nop
pop
xor
in
fcmovu
adc
cmp
mov
inc
or
mov
jns
into
bound
popa
pop
iret
aas
pop
(bad)
sbb
imul
clc
pop
sbb
mov
in
sub
xchg
push
or
enter
mov
shl
sub
cli
add
jmp
lahf
cmp
mov
(bad)
in
icebp
pop
retf
and
jl
(bad)
ffree
jmp
inc
or
add
add
shl
xor
cmp
xlat
jbe
sub
loope
in
mov
ror
dec
jo
mov
lahf
std
xor
rcr
xor
cwde
inc
outs
nop
sbb
xchg
ret
gs
call
and
sub
imul
inc
add
inc
(bad)
in
or
sahf
ins
dec
test
jmp
push
das
pop
mov
mov
xlat
cli
mov
icebp
cmp
jne
es
add
push
cmp
fcmovnu
bound
sbb
xor
ror
cdq
mov
sub
lea
movs
add
fld
scas
jmp
daa
repnz
mov
mov
bound
sbb
cmp
sub
stos
xor
mov
loopne
mov
loope
aad
call
mov
pop
sbb
int
leave
pop
sub
adc
mov
pop
stc
enter
movs
dec
mov
xor
or
aaa
nop
inc
pop
xchg
hlt
jnp
fist
ins
cmp
and
mov
hlt
xor
mov
or
jmp
mov
xor
fild
mov
push
in
mov
pop
ret
mov
mov
jo
dec
movs
clc
scas
sbb
stos
fisttp
add
mov
in
sub
add
(bad)
jmp
push
sub
fdiv
cmps
out
jns
shl
scas
mov
fwait
test
lea
inc
ret
and
inc
cmp
neg
test
xor
test
push
dec
loopne
leave
in
inc
cmp
int
dec
xchg
mov
aam
out
movs
pop
mov
add
xchg
push
jg
push
scas
adc
sub
cdq
and
out
dec
adc
loop
jmp
loope
movs
scas
lea
inc
psubsw
fcom
jmp
xchg
and
and
nop
mov
jb
add
mov
lods
dec
mov
fwait
cmp
mov
cmc
lods
sahf
mov
pop
stos
lds
pushf
dec
popf
in
out
cwde
mov
mov
aaa
pusha
or
(bad)
repnz
xchg
out
mov
les
aam
pop
sbb
hlt
in
es
xchg
int
cmp
call
imul
and
ret
inc
int
xor
mov
xchg
xor
xchg
adc
push
push
(bad)
pop
(bad)
js
adc
(bad)
(bad)
sahf
or
sti
das
fldcw
(bad)
mov
push
loopne
lahf
jb
call
inc
mov
or
fs
repnz
push
and
jecxz
xchg
mov
mov
xlat
popf
cmp
dec
aas
dec
adc
fsubr
cwde
pop
push
dec
adc
push
pop
add
and
mov
test
lods
or
jnp
jmp
push
inc
mov
cmp
jbe
cmps
xor
mov
test
jae
cmc
push
retf
mov
sub
mov
cwde
xchg
mov
sti
jmp
add
xlat
enter
inc
lods
ret
pushw
mov
add
(bad)
jae
scas
inc
add
out
adc
movs
dec
or
mov
cmps
test
inc
test
ret
xor
cmps
push
xchg
mov
xor
jmp
pop
add
sub
lea
or
pop
sbb
test
ds
cwde
cs
inc
out
out
cmps
fsubr
rcl
cwde
mov
inc
aas
in
aaa
ja
cmp
mov
movs
leave
sub
ja
mov
ret
out
stos
inc
adc
inc
jnp
movs
and
gs
neg
or
in
push
cwde
pop
push
or
cmp
mov
xchg
pusha
test
jbe
xchg
fs
jne
mov
and
xchg
add
mov
add
cmps
std
inc
add
mov
clc
das
or
xchg
xchg
rcr
stos
mov
push
xlat
mov
ins
mov
fstp
fwait
mov
aam
into
add
rol
push
push
jle
jne
lahf
int3
sub
jl
int3
clc
in
jp
rcl
repz
mov
fwait
mov
mov
sahf
retf
daa
mov
push
sbb
shl
outs
or
cmc
xor
(bad)
(bad)
xchg
leave
aas
cld
or
not
js
imul
mov
cdq
das
add
push
pop
sahf
inc
xor
xor
push
cwde
push
jnp
aas
add
cld
retf
call
repz
out
cmp
adc
int
cdq
into
xor
enter
or
adc
aas
cmp
jno
js
dec
test
ret
cmps
mov
adc
mov
aaa
sub
adc
leave
ret
mov
cwde
shl
push
mov
mov
jg
add
push
outs
test
push
mov
adc
aaa
lahf
call
ss
and
sbb
xchg
repnz
jb
neg
mov
mov
xchg
or
jl
rcr
pop
pop
xor
test
adc
fcom
repnz
pop
ds
jp
adc
test
xchg
pushf
push
fisub
rcl
shl
xor
dec
sub
xor
fs
mov
sub
jle
aam
push
mov
jmp
cmps
add
in
push
mov
neg
jnp
inc
pop
pop
adc
pop
mov
add
inc
int3
mov
movs
mov
repz
mov
clc
sbb
push
cmp
stos
adc
jecxz
push
push
inc
iret
adc
mov
push
mov
iret
lods
and
aam
(bad)
test
push
stos
popa
pop
or
je
lods
push
fist
fninit
jne
inc
(bad)
retf
je
shr
movs
inc
sti
pop
(bad)
in
enter
outs
pop
push
data16
or
and
xlat
aaa
lods
jne
cmp
pop
(bad)
xor
je
aam
dec
xor
mov
arpl
scas
movs
dec
xor
(bad)
rcr
sar
sbb
(bad)
and
ret
bound
cld
xlat
into
cwde
(bad)
push
add
cmc
fst
aam
and
inc
out
fdivr
mov
mov
dec
sbb
das
(bad)
out
out
mov
jmp
pop
dec
pushf
jb
(bad)
sbb
dec
leave
(bad)
out
mov
jp
and
neg
test
mov
scas
cmp
pop
adc
loop
jmp
xor
fwait
fwait
shl
sbb
cmp
std
imul
sub
cmp
cld
(bad)
call
or
cmp
adc
mov
hlt
and
add
mov
mov
pop
xor
cmp
sbb
imul
clc
popf
(bad)
ds
adc
mov
imul
nop
(bad)
out
les
dec
dec
mov
dec
shl
cwde
cmp
sti
jmp
cdq
add
ret
ret
cmps
jmp
movhps
mov
ror
pop
inc
(bad)
and
jbe
aas
mov
bound
dec
pop
push
(bad)
adc
or
cwde
push
adc
xor
test
sub
sub
test
(bad)
inc
or
mov
push
out
cmc
cmps
mov
je
scas
or
lea
xor
mov
mov
int
push
shl
cmps
mov
sub
jmp
or
es
std
es
and
out
pop
sbb
ret
or
jl
addr16
adc
sbb
ret
sub
int3
push
mov
hlt
aaa
inc
shr
or
push
pop
into
cmp
dec
loope
ss
mov
pop
std
icebp
iret
push
(bad)
and
iret
inc
jle
push
push
stc
pop
into
xor
push
bnd
and
jne
mov
xlat
retf
lds
(bad)
fstp
(bad)
xchg
fs
imul
idiv
imul
inc
pop
repz
pop
inc
sub
test
jb
and
push
ja
pusha
jge
inc
cmp
aas
xor
sbb
mov
xchg
inc
mov
xor
xlat
inc
inc
dec
data16
mov
sti
(bad)
xchg
or
icebp
xchg
inc
inc
cdq
add
inc
push
jbe
pop
pop
cli
test
adc
xchg
loop
loope
inc
dec
sbb
cmp
scas
xchg
in
out
and
add
adc
in
pop
xchg
jbe
pop
mov
sub
xchg
push
data16
and
or
mov
dec
mov
sbb
add
sub
ins
push
add
jg
fidivr
dec
(bad)
dec
aas
imul
ins
in
inc
jmp
movs
test
lea
mov
lea
outs
mov
je
arpl
call
in
aas
push
movs
dec
or
xchg
xchg
retf
popa
popa
pusha
sbb
sbb
pop
(bad)
scas
mov
sub
inc
adc
test
movs
shr
dec
cmp
jg
mov
sub
sar
push
sub
pop
jns
cli
xchg
mov
sub
cld
int3
jae
mov
mov
shl
(bad)
clc
std
cmp
ins
mov
inc
xor
je
jo
xchg
push
mov
dec
xchg
sbb
sbb
data16
add
scas
aam
jo
out
jg
out
push
das
loope
stos
repz
sbb
jmp
fwait
pusha
jbe
mov
push
cmp
add
push
scas
loopne
test
xor
jae
cmp
stc
push
add
sub
aaa
xchg
xlat
frndint
ror
adc
sbb
cli
(bad)
out
xchg
adc
add
test
repnz
ja
mov
sbb
sbb
in
mov
pop
call
mov
xchg
push
fcmovbe
jp
retf
pop
push
ins
lock
push
das
add
inc
cld
cmp
in
or
or
cld
add
retf
mov
dec
cmps
scas
int3
jae
bound
xchg
retf
das
and
mov
movs
test
ds
xchg
test
push
inc
stc
add
jmp
mov
mov
xlat
in
popf
mov
mov
shl
add
inc
stos
aad
test
test
repnz
ss
mov
in
dec
push
lods
cs
in
fwait
jl
xor
std
stos
cmp
lods
add
dec
out
or
dec
dec
fldenv
(bad)
xchg
mov
test
adc
je
mov
sbb
jnp
push
push
bound
xlat
xchg
cmp
les
(bad)
lahf
cld
clc
xchg
cmp
add
sub
call
xor
pop
ja
pop
lods
inc
call
sbb
pop
in
(bad)
out
mov
mov
js
ds
and
loope
enterw
inc
xor
mov
int3
sub
pop
jle
jg
adc
mov
mov
adc
xchg
div
mov
ror
xor
jnp
pushf
sub
adc
sub
jmp
dec
cld
scas
dec
sub
mov
sahf
aam
xchg
sub
sbb
mov
push
hlt
rcl
loope
retf
aas
jnp
dec
loop
into
sbb
add
test
imul
das
jae
jns
ds
xor
ret
push
pcmpgtb
xchg
sub
or
jmp
add
push
rcl
sbb
jge
and
lods
push
cli
and
jno
pushf
in
xchg
rcl
sbb
push
ficom
fnstenv
jmp
mov
pushf
aam
cmp
pop
lods
aaa
sub
pop
(bad)
test
arpl
jo
mov
jns
je
test
shl
imul
sti
mov
js
xchg
cs
add
cmp
mov
dec
aas
mov
(bad)
jg
imul
pop
stos
fsubr
outs
mov
test
lock
hlt
repnz
push
mov
xor
dec
jb
xlat
aam
into
cmp
retf
inc
xchg
sub
push
jns
rcl
cs
leave
inc
mov
xor
xchg
xchg
cmp
and
dec
sahf
bound
inc
ins
sub
adc
mov
sbb
dec
sar
jge
cmps
mov
jno
fldenv
jbe
mov
jnp
or
in
mov
pop
ds
xchg
dec
rcr
jg
test
or
mov
ins
adc
sahf
lds
push
(bad)
sahf
gs
test
fs
adc
dec
out
pushf
sub
adc
lock
inc
xor
lock
ret
dec
push
push
iret
loopne
inc
adc
aaa
in
adc
adc
push
fidiv
imul
xchg
add
adc
add
(bad)
jb
jp
pop
shl
shr
xchg
sub
lock
mov
clc
push
bound
ins
sbb
fmulp
or
(bad)
xor
cdq
fstp
lahf
mov
icebp
jne
push
imul
shl
ja
adc
adc
sbb
(bad)
mov
aas
in
mov
outs
inc
and
pop
adc
shr
nop
icebp
xor
add
and
test
fimul
gs
and
cmp
scas
inc
xor
les
xor
mov
cmps
push
inc
popa
enter
mov
sar
sbb
push
daa
clc
lods
xor
mov
mov
pop
ss
dec
aaa
inc
pusha
jno
dec
add
sbb
cmc
clc
cmp
dec
out
push
out
sbb
js
cmp
fwait
sbb
push
into
push
nop
test
jnp
push
jae
aas
jle
test
frstor
cwde
sar
inc
lock
jnp
cmp
push
das
mov
mov
sahf
cdq
jg
cmps
and
inc
cmovle
hlt
xchg
and
std
jl
cmp
dec
mov
push
sbb
add
js
dec
mov
test
fs
enter
int
retf
add
out
(bad)
mov
xchg
cld
dec
ret
dec
pop
ficomp
stos
ins
jae
jge
push
inc
pop
xchg
mov
xchg
cmps
ins
cmp
dec
repnz
jne
scas
sub
enter
loopne
rol
mov
jle
test
mov
xor
sub
ja
(bad)
retf
scas
xchg
xor
xchg
xor
aaa
mov
fwait
pushf
les
push
aad
jmp
jl
in
inc
enter
jne
dec
sbb
les
cmp
push
xor
clc
mov
cmp
cmps
cmp
mov
rcl
pop
ja
gs
hlt
and
mov
lods
pop
movs
adc
pushf
dec
push
(bad)
retf
and
mov
es
jp
inc
hlt
jge
ds
pop
dec
push
mov
adc
mov
push
or
adc
out
jo
jle
stos
bound
fnstenv
ficom
cli
ret
sub
(bad)
cwde
sub
out
push
ja
sub
je
bound
ror
hlt
ret
inc
jle
movs
gs
and
test
idiv
jg
xchg
es
adc
sbb
xor
movs
lods
popa
sub
add
call
pusha
pusha
in
cmp
fiadd
inc
jp
sub
jle
jmp
pop
les
pop
mov
dec
mov
push
sub
xlat
mov
lods
int3
pop
(bad)
push
jne
leave
sub
inc
sub
jb
loop
dec
inc
jns
mov
jl
neg
jp
je
dec
jno
mov
jae
push
cmp
xor
popa
sub
in
sub
jecxz
out
and
imul
xor
cwde
and
stos
pop
fiadd
repz
pop
mov
loope
fnsave
cmp
dec
dec
jle
or
inc
xlat
dec
lock
cli
mov
mov
cmp
or
xor
movs
sbb
xor
in
dec
mov
adc
inc
daa
xchg
jg
cmc
and
or
popf
cs
inc
mov
fwait
jnp
add
imul
addr16
push
(bad)
es
add
add
xor
bound
add
push
je
xor
xchg
data16
out
sbb
add
shl
shl
loop
inc
rcr
adc
ss
xchg
shl
xchg
inc
fcomp
data16
mov
mov
data16
push
scas
ss
sti
push
jmp
test
arpl
push
jmp
push
push
jge
jmp
loope
or
ficomp
cmp
cmp
mov
jecxz
or
out
or
imul
or
retf
imul
fadd
sbb
(bad)
sti
xor
repz
and
or
(bad)
pusha
(bad)
jge
sti
mov
cld
in
pop
mov
or
je
mov
adc
xchg
shl
dec
jb
inc
fs
pop
and
ss
jbe
adc
loope
jne
fstp
jbe
in
adc
push
aaa
(bad)
out
lds
out
xchg
jae
xchg
outs
rcr
imul
ficomp
push
cmp
sub
movs
jns
aad
mov
mov
and
mov
pop
fnsave
in
sub
and
pop
out
repz
inc
jmp
lods
cld
in
xor
xor
(bad)
out
into
mov
dec
push
cld
cmp
lock
dec
movs
arpl
dec
sar
xlat
mov
in
pop
(bad)
cmp
arpl
je
es
mov
dec
mov
in
call
or
xchg
push
call
and
repz
mov
mov
mov
gs
add
mov
mov
aad
add
and
and
int3
fst
sti
ja
push
or
jl
xchg
mov
dec
cmp
push
lods
imul
jb
adc
iret
mov
xor
adc
(bad)
adc
xor
dec
push
in
xor
xlat
or
leave
jecxz
and
cmp
push
sbb
ss
repz
sbb
popa
cmc
ret
outs
push
test
fbld
sub
jno
stos
retf
xchg
xchg
(bad)
dec
xchg
add
mov
sub
mov
cmp
inc
fiadd
cmps
cdq
and
outs
push
inc
fdecstp
add
rcl
dec
in
lahf
fbstp
push
xchg
sub
test
xor
mov
add
in
dec
sbb
lea
jbe
(bad)
sub
cmp
push
push
push
and
call
xor
nop
add
xor
cmp
pop
stos
pop
push
fdiv
xchg
fidivr
bound
dec
mov
repz
sahf
push
shr
hlt
pop
xchg
popa
sub
imul
pushf
adc
xchg
repnz
mov
or
fs
stos
mov
cdq
or
mov
inc
sub
sub
push
xor
rep
or
and
xchg
sub
outs
pop
pop
loopne
out
out
sub
fnstenv
or
loop
or
inc
xor
ds
(bad)
imul
out
jecxz
es
mul
xchg
sub
jecxz
pop
sbb
jno
in
int3
pop
(bad)
popf
mov
sbb
enter
std
or
or
mov
fbstp
test
mov
and
jbe
inc
jae
mov
jmp
leave
mov
push
mov
jge
pop
inc
push
rcr
clc
movs
xchg
pop
dec
pop
les
lock
sub
or
je
icebp
cld
inc
xchg
jae
sti
xchg
xchg
sub
dec
push
or
jno
mov
add
adc
imul
mov
not
or
jecxz
loop
imul
call
shl
and
rol
and
(bad)
sar
fisttp
xor
(bad)
in
and
popf
stc
cmp
add
cmp
add
xchg
stc
gs
dec
adc
bound
cmp
dec
cmp
repnz
mov
adc
xchg
pop
cs
dec
clc
inc
push
mov
or
add
data16
or
movs
dec
lds
push
sub
cs
push
pop
test
and
push
pop
test
(bad)
scas
inc
mov
push
inc
in
mov
std
pusha
cmp
xor
rep
mov
jg
jmp
loopne
sub
int
aam
das
aad
daa
ss
stos
(bad)
jns
test
mov
pop
mov
jp
adc
stc
sub
lods
ins
(bad)
jmp
enter
stos
stos
ds
mov
test
out
fwait
retf
ret
bound
jno
jae
pushaw
pop
fwait
dec
in
xchg
push
push
cmps
fmulp
mov
ins
out
scas
dec
fistp
push
ficom
lock
sbb
jne
sub
pop
out
mov
mov
iret
loope
daa
mov
out
inc
add
add
ins
cli
shr
scas
mov
jl
or
pop
xor
and
push
or
mov
jae
pop
sbb
push
pushf
pop
adc
pusha
lahf
test
jbe
shl
jle
or
inc
addr16
repz
retf
ins
popf
fs
bound
cmc
lahf
daa
sbb
cmps
jmp
jl
mov
jmp
mov
jae
jge
leave
fld
and
adc
jg
jbe
mov
mov
or
in
dec
(bad)
call
mov
cmp
(bad)
xor
sahf
and
mov
mov
push
imul
mov
sub
mov
aam
jne
adc
dec
pop
jg
es
int
imul
dec
fs
pushf
ret
cs
aaa
mov
sbb
cmp
sbb
int
fcom
add
jmp
push
add
add
(bad)
cli
aam
rcl
imul
test
shl
fdiv
jno
stos
lods
sahf
mov
fprem
mov
ss
iret
sub
outs
or
sahf
pop
and
retf
mov
mov
mov
ja
dec
imul
and
or
jo
pop
retf
jno
push
adc
pop
jge
sub
push
and
add
pop
in
pop
(bad)
pop
call
sahf
scas
jno
dec
add
or
sub
stc
inc
(bad)
test
into
cmp
or
aam
gs
jle
sbb
mov
lods
ins
xor
out
pop
sahf
leave
cs
xor
(bad)
sub
cli
lods
mov
ja
jmp
ds
hlt
push
movs
in
leave
ins
leave
shl
add
ins
pop
in
leave
mov
loopne
xchg
lods
shr
cmp
hlt
add
sub
mov
xchg
inc
sub
pop
iret
adc
in
xchg
add
or
jnp
and
cwde
cmp
out
pop
jbe
lods
out
xchg
movs
std
das
aam
(bad)
pop
out
scas
push
shl
por
dec
mov
inc
cli
ins
sar
repnz
dec
cmp
ret
cmp
cs
outs
mov
and
inc
xor
cmp
pushf
ret
das
test
ja
cmp
jg
pop
lods
mov
mov
cmp
pop
repz
and
stos
jg
loop
shr
sub
adc
test
ja
inc
inc
std
mov
loope
test
aaa
jnp
ret
ins
adc
aad
inc
rcl
fldpi
xchg
ds
icebp
sub
mov
enter
xchg
jne
add
cmp
rcr
and
loope
sahf
lock
test
sbb
jne
rcr
push
rcl
retf
fdiv
out
xchg
std
int
shl
sub
jbe
inc
cmp
fild
(bad)
lds
jno
push
inc
outs
enter
or
sbb
ins
lock
and
mov
mov
lahf
sti
and
pop
xor
ror
mov
jl
jne
sub
lods
dec
cmp
push
lock
xor
es
loope
jbe
mov
mov
retf
movs
icebp
or
push
lds
or
and
ja
stc
cmp
pop
fbld
xchg
dec
and
sub
mov
xchg
scas
ret
cli
cdq
js
std
and
inc
out
rcl
sbb
cmps
jae
call
xlat
mov
mov
push
mov
jbe
fwait
popa
dec
jbe
mov
sbb
outs
mov
pop
adc
fs
push
lods
daa
stos
outs
pusha
and
(bad)
add
lods
rcr
retf
mov
sbb
jae
loopne
cmp
add
mul
mov
shl
stc
lahf
adc
sub
ds
inc
add
push
pop
dec
data16
xchg
arpl
inc
into
jmp
jns
and
or
popa
adc
mov
cmp
adc
retf
js
cmp
(bad)
cwde
enter
sub
jl
xchg
mov
jmp
mov
mov
out
add
ss
mov
lea
push
and
pop
addr16
pop
ret
popf
mov
sahf
push
inc
in
loop
iret
pop
dec
mov
mov
pop
jmp
push
retf
sbb
rcr
inc
cmp
sub
adc
xor
jbe
mov
popf
and
pop
xor
scas
jae
xchg
pop
jne
cs
pushf
jle
pop
stos
loop
mov
cmp
and
in
test
(bad)
retw
inc
xlat
in
sub
push
jge
enter
mov
or
jne
dec
(bad)
jmp
dec
shr
retf
and
inc
jmp
lods
sbb
addr16
lock
fldl2t
xor
xchg
fidivr
fmul
mov
mov
int3
popa
dec
mov
sbb
mov
xor
xor
sbb
sar
push
popa
gs
or
dec
je
test
jno
movs
cmps
(bad)
call
aad
out
in
mov
iret
das
into
mov
sbb
pop
(bad)
cmp
out
fld
fisub
sbb
sub
aad
mov
out
jle
add
pop
stos
mov
mov
loope
add
cmp
pop
push
cwde
adc
lds
es
pop
int3
and
push
imul
add
mov
sbb
xor
pop
and
and
adc
test
and
sub
bound
sbb
dec
dec
ins
push
mov
icebp
ja
sahf
or
jbe
jb
pushf
xchg
inc
xchg
inc
in
jmp
cmp
adc
mov
mov
loope
xchg
mov
jae
cmps
icebp
pop
xlat
clc
pop
jg
addr16
pop
outs
jnp
lock
mov
cmp
scas
sbb
lds
cmps
mov
leave
std
nop
inc
cmps
movs
pop
in
idiv
mov
mov
loope
dec
int3
bound
(bad)
out
shl
xchg
and
adc
fadd
cli
jge
mov
aad
jle
dec
mov
ds
inc
cmp
pop
pop
clc
cdq
mov
stos
sbb
push
out
(bad)
dec
sar
cmp
pushf
sub
jb
jle
out
aam
push
scas
adc
in
and
stos
dec
sub
adc
sbb
jns
scas
xlat
xor
or
call
test
lods
int3
xor
jne
push
ins
jl
inc
in
mov
push
mov
ja
sbb
(bad)
ffreep
ja
stc
outs
mov
mov
shl
repnz
leave
sub
(bad)
xchg
mov
mov
or
iret
out
dec
ss
xchg
or
lods
ret
jl
sub
in
cmp
cmp
test
mov
frndint
sub
jno
dec
mov
inc
(bad)
fadd
loopne
fnsave
pop
xchg
test
add
jno
into
mov
xchg
xor
ret
jl
cld
out
mov
(bad)
mov
mov
rcl
test
xchg
lock
pop
retf
mov
sbb
xor
cs
sub
push
inc
xchg
and
bound
inc
(bad)
arpl
inc
xchg
retf
sti
cld
or
je
inc
loop
gs
aam
cmp
pusha
(bad)
mov
mov
cmc
cmc
in
(bad)
movs
jmp
inc
gs
jnp
push
int3
loope
cmp
sahf
xchg
jmp
mov
push
dec
in
push
aam
push
je
pand
jno
mov
cmp
jo
lds
jg
inc
mov
pop
scas
mov
out
jmp
test
mov
mov
fimul
jp
jecxz
cmp
fisttp
pop
sbb
xchg
cmps
mov
movs
add
div
mov
jmp
xor
jp
adc
mov
add
inc
in
out
mov
mov
inc
mov
cmc
jle
and
fidiv
cwde
js
test
xchg
lods
mov
jmp
ret
push
sbb
icebp
jmp
cmp
test
and
xchg
xor
shl
sbb
sub
bnd
repnz
mov
add
cmp
pop
aas
loope
cld
fst
xchg
iret
(bad)
push
mov
and
and
jns
or
stos
or
mov
mov
jbe
es
jmp
dec
sub
fwait
out
dec
or
or
pop
mov
jno
push
aam
aad
outs
lds
into
sub
fs
mov
jecxz
add
inc
cld
daa
lock
shr
add
test
sti
repz
jno
mov
ins
loope
(bad)
test
xchg
out
fidiv
mov
inc
movs
jmp
fwait
sbb
lock
loopne
shl
push
dec
or
popa
fcmovnb
xor
dec
loope
mov
sbb
bound
sbb
inc
in
sub
mov
xchg
jmp
mul
mov
push
ficom
jb
fcmovnu
push
sub
pop
mov
jmp
pop
retf
loopne
aas
cwde
ins
cmp
popa
xor
sbb
lea
push
dec
dec
add
sidtd
lock
mov
rcl
jmp
mov
(bad)
adc
ret
and
out
cmps
ret
dec
inc
pop
lea
cmp
fst
call
loopne
add
call
inc
push
shr
shl
jg
jns
movs
es
(bad)
mov
dec
xor
imul
dec
add
or
addr16
test
out
js
fimul
adc
popf
aad
test
push
loopne
push
push
mov
and
cmps
imul
mov
jbe
ja
or
sub
lods
test
leave
push
sub
div
mov
enter
into
cmp
scas
ficom
cs
jb
repz
jecxz
icebp
nop
inc
mov
inc
jae
mov
nop
stc
inc
mov
arpl
mov
cwde
cmp
xchg
fidiv
leave
push
jmp
(bad)
adc
sub
pop
cdq
cmp
xor
push
(bad)
call
(bad)
pushf
out
inc
mov
bnd
inc
xchg
mov
gs
sub
rol
int
outs
jl
cwde
cmp
iret
dec
loop
out
xchg
test
mov
push
in
inc
cmp
jl
ins
pop
dec
mov
inc
leave
push
loop
push
imul
or
mov
out
out
fidivr
pop
fidiv
mov
arpl
sti
xchg
adc
ss
sbb
xchg
out
inc
std
fstp
pop
into
shl
lods
pop
or
fidiv
das
cmps
fadd
lods
xlat
inc
leave
mov
into
sbb
jns
inc
sbb
mov
or
xchg
mov
sub
adc
adc
lds
dec
ds
dec
nop
xor
call
test
pop
fs
mov
int
ret
push
test
jnp
in
inc
or
jmp
repnz
jmp
rcl
jne
sub
add
add
pop
dec
int3
dec
xlat
sub
shr
hlt
cmp
dec
cmp
and
(bad)
pop
pop
movs
repz
dec
movs
cmp
and
or
fdivr
pop
cdq
dec
jb
dec
(bad)
rcl
xor
mov
mov
sti
mov
dec
stc
movs
call
addr16
adc
into
xor
push
ror
(bad)
push
sub
cmc
sbb
add
pop
call
push
mov
pop
mov
cmps
cmp
fisttp
cmp
pop
js
pop
sub
lea
ins
pop
jl
clc
iret
and
loopne
push
push
cmp
mov
sti
xchg
lock
loop
ins
lods
sar
jle
cmovle
mov
enter
div
push
lods
adc
pop
push
fs
pop
pop
ret
jns
dec
cmp
bound
push
jle
adc
jnp
sub
leave
xor
test
imul
dec
stc
cdq
adc
mov
pop
in
ins
add
add
xchg
mov
pop
inc
xchg
mov
xchg
or
outs
add
(bad)
(bad)
enter
dec
push
xor
scas
outs
sahf
cdq
jmp
sub
inc
cmp
rcl
movs
pushf
sbb
push
in
push
fcmovnbe
test
cmc
aas
fild
xchg
adc
(bad)
xchg
adc
mov
ror
shl
(bad)
mov
movs
mov
mov
xor
sub
or
push
out
mov
mov
rol
lahf
or
sub
lds
lods
cwde
shr
jecxz
pop
out
inc
xchg
cld
jne
arpl
cmp
cs
jp
mov
aam
movs
mov
ja
fmul
clc
loope
retf
xor
cmps
add
inc
out
lds
mov
das
cmc
pop
or
add
hlt
fwait
rcl
rcr
sub
das
mov
test
and
stos
xchg
xor
mov
or
in
or
jl
popf
mov
push
jl
jg
dec
fst
pusha
jbe
out
or
dec
sbb
adc
enter
jbe
add
clc
xor
inc
cmp
cmp
sub
test
shl
movs
out
(bad)
pop
sbb
mov
mov
push
adc
daa
jne
mov
imul
loope
retf
push
ror
mov
inc
or
inc
or
adc
xchg
fidivr
and
inc
je
pop
pop
sub
mov
call
jl
lea
loope
fdivr
cmp
jbe
icebp
(bad)
pushf
or
clc
aad
xchg
cmps
clc
inc
push
(bad)
loop
xor
pop
(bad)
fidiv
std
jg
enter
push
xchg
daa
repnz
clc
inc
pop
fnstcw
fdivr
inc
mov
cld
add
cli
adc
leave
inc
gs
(bad)
(bad)
and
push
loope
les
test
out
ss
push
or
add
jle
cdq
test
cmp
inc
repz
out
add
dec
cmp
iret
push
inc
les
stc
pop
test
fs
fisubr
pop
or
jbe
imul
fs
and
(bad)
jmp
push
inc
jb
out
push
jmp
inc
mov
inc
test
shr
inc
les
or
push
lds
inc
xchg
cmp
jge
(bad)
out
fwait
lods
xor
cld
ins
pushf
jmp
jne
and
push
call
into
add
call
jne
mov
push
sub
aaa
jmp
mov
div
(bad)
dec
hlt
imul
(bad)
or
inc
mov
sti
adc
add
dec
shl
sbb
mov
sbb
push
xchg
mov
(bad)
data16
mov
leave
scas
push
(bad)
xchg
cmp
daa
inc
retf
(bad)
jmp
ins
(bad)
sub
sbb
mov
loop
dec
mov
mov
add
call
leave
xchg
mov
(bad)
dec
add
daa
cmc
mov
loopne
std
dec
stos
in
inc
sahf
enter
xor
mov
lods
mov
les
nop
push
mov
inc
sub
and
je
stos
ja
or
jmp
and
popa
sub
xchg
pop
lds
jno
addr16
add
xor
test
arpl
pop
push
shr
mov
lods
pop
pop
not
test
mov
imul
jle
arpl
pop
add
(bad)
adc
imul
pandn
mov
inc
cmp
xchg
or
dec
mov
outs
adc
fist
dec
std
add
iret
mov
in
xor
add
aad
es
stos
inc
es
add
xor
push
pop
mov
mov
movs
(bad)
adc
sti
mov
mov
pop
and
rcl
out
add
xor
mov
bound
inc
popf
out
aas
into
sbb
pusha
addr16
dec
arpl
jnp
or
or
jae
test
mov
das
sbb
cmps
shr
xchg
fiadd
jno
(bad)
in
pop
popa
fnstsw
ficomp
mov
mov
or
test
xchg
mov
cld
push
or
dec
cmp
movzx
dec
dec
aam
and
and
pushf
rcl
add
lock
xchg
pop
dec
cdq
jge
pop
xchg
hlt
out
pop
lods
push
repnz
xchg
pop
mov
jg
fidivr
cmps
jge
jge
cld
add
sub
adc
iret
jge
std
jp
sbb
fucomi
lds
jmp
mov
sub
jmp
aaa
icebp
jp
inc
cld
enter
pop
cld
mov
stc
js
cs
or
cmp
movs
cmpps
adc
call
xor
jno
test
jg
push
push
jmp
cmp
rol
push
ret
push
xor
jnp
cmp
ror
dec
dec
xchg
cmps
mov
adc
jp
push
jg
scas
nop
int3
adc
xor
in
mov
fisub
jne
push
ja
(bad)
jle
pop
inc
mov
in
jno
test
fwait
push
ins
paddsb
jno
jo
jns
sbb
ins
mov
cmps
mov
push
adc
lock
cmp
sub
push
and
repnz
dec
dec
cmp
shr
movs
sub
add
cmp
test
add
stos
test
add
bound
mov
popf
sub
add
fnstcw
rol
xchg
int3
adc
jae
call
cs
mov
in
shr
out
cmp
rcl
idiv
add
mov
hlt
int3
sub
enter
movs
les
enter
jne
(bad)
and
push
das
stos
cmp
add
dec
call
or
inc
pop
and
xchg
adc
adc
pop
jo
mov
pop
jg
stos
push
sub
pop
lahf
pusha
in
sbb
jecxz
daa
cmps
retf
or
sbb
mov
mov
cmp
jg
ror
not
pop
inc
inc
jno
xor
sbb
lahf
pop
push
and
loopne
popf
dec
jbe
pop
cmp
push
jnp
cwde
mov
es
inc
arpl
and
add
aad
pop
xchg
mov
clc
rcr
add
repz
push
mov
jp
sub
stos
jge
push
cmps
addr16
into
imul
sub
and
sub
int
push
ds
dec
jle
and
jmp
cmp
ror
cdq
aaa
mov
(bad)
jb
daa
gs
jmp
pushf
dec
dec
repnz
inc
xchg
aas
fmulp
adc
fmul
inc
sub
adc
mov
fstp
out
cdq
aas
das
mov
mov
push
sub
in
jl
lods
mov
jne
idiv
sbb
sub
gs
push
outs
(bad)
sbb
mov
adc
lock
std
sub
popa
fs
gs
out
jg
shr
add
in
push
fimul
xchg
stc
ja
mov
nop
dec
mov
arpl
in
sbb
or
push
ins
inc
test
dec
movs
cwde
ins
cmp
int
sbb
fs
packssdw
int
adc
jns
lahf
outs
add
push
adc
sub
std
xchg
sbb
mov
pop
mov
cmp
dec
movs
gs
loop
sub
sbb
outs
jle
fisttp
add
pusha
shl
sar
xor
and
out
mov
mov
inc
dec
mov
nop
aas
pushf
or
ss
or
popa
sbb
adc
jbe
fcomp
popa
scas
sti
daa
dec
ins
scas
pop
(bad)
and
call
cmp
or
pop
mov
test
imul
jg
aaa
nop
and
fstp
fdivr
cmps
sar
jl
dec
gs
fmul
fstp
sub
mov
ds
sbb
inc
adc
popf
int
shl
and
sbb
mov
movs
xchg
jb
inc
hlt
in
sbb
pop
fbld
jo
in
popa
lods
aam
jmp
sub
xor
mov
cmps
mov
push
cdq
pop
xchg
fcmovne
mov
fidivr
push
adc
and
rcl
or
xchg
jl
(bad)
(bad)
pop
mov
loop
jbe
xchg
jp
loop
movs
not
sar
div
(bad)
bnd
stos
inc
cs
and
xor
or
or
jecxz
test
pop
cmc
jne
pop
aam
push
out
stc
jg
lods
dec
mov
gs
cmp
or
ret
pop
or
push
ins
inc
push
xchg
jo
lock
jb
pop
xor
cld
stos
mov
lahf
dec
xchg
mov
jb
aaa
mov
fsub
imul
stos
mov
mov
jmp
out
inc
in
fistp
cmc
aaa
data16
movs
scas
jp
ja
push
jne
outs
sbb
leave
add
pop
add
sub
mov
add
shl
loop
mov
cmp
cmp
mov
(bad)
lock
aad
push
pop
pop
pop
mov
mov
aam
cs
dec
test
mov
inc
fstp
sar
fwait
cmp
cmps
test
adc
enter
shr
mov
and
mov
pop
or
or
pusha
daa
pop
mov
and
mov
adc
and
stc
shr
xchg
mov
sbb
aas
push
push
sbb
jne
in
out
push
iret
ret
add
scas
into
rcl
jae
xchg
adc
mov
dec
popa
and
jge
out
ret
cmps
push
jl
push
adc
push
cmp
mov
inc
arpl
adc
mov
(bad)
js
mov
into
dec
mov
enter
lods
dec
divps
push
jmp
je
ror
fdivr
repz
mov
add
popf
loope
(bad)
(bad)
ret
scas
cmp
jb
push
retf
jmp
mov
mov
mov
cmps
jle
inc
mov
push
je
jmp
xchg
outs
fcmovu
xchg
rcl
imul
mov
mov
push
mov
mov
loopne
repnz
mov
mov
xchg
cwde
mov
sti
les
or
jo
push
shl
dec
(bad)
push
pop
sbb
lea
adc
pusha
sbb
add
mov
out
retf
jb
xchg
dec
push
ds
in
je
das
retf
mov
call
mov
js
mov
ja
gs
sub
in
adc
mov
fild
daa
dec
ficomp
jge
shl
cmp
sub
mov
add
adc
movhps
jp
stc
inc
ret
sbb
jle
sbb
cmp
int
ins
mov
dec
mov
mov
push
xor
or
(bad)
adc
sar
mov
xchg
shl
popa
imul
lds
jl
mul
or
in
fadd
dec
in
in
pop
and
cmp
xchg
xchg
rdtsc
popf
loope
(bad)
dec
pop
fdivr
data16
rol
cmps
mov
mov
call
gs
adc
aaa
div
mov
sahf
repnz
inc
cmp
je
in
mov
dec
jno
sbb
mov
adc
dec
push
add
mov
lahf
xlat
xor
loop
cmp
je
sbb
arpl
xchg
inc
fxtract
popa
sti
sti
pop
fbld
call
sub
pop
shr
es
mov
lea
ds
iret
popf
popf
jl
out
bound
mov
mov
pop
sbb
jl
std
cmp
scas
mov
jl
mov
fdiv
dec
(bad)
fidivr
mov
sub
mov
mov
xor
icebp
mov
cmp
adc
inc
push
cmp
cmps
mov
js
sbb
add
repz
hlt
push
aad
scas
push
dec
mov
mov
xor
cmp
loope
inc
cmp
xor
and
sbb
dec
lods
retf
dec
jmp
xchg
push
add
into
imul
inc
xor
es
nop
xchg
test
es
cmp
pusha
mov
call
rcl
sub
es
sub
inc
pop
cmp
adc
or
in
fsubr
out
retf
ins
aad
inc
retf
mov
outs
inc
aad
leave
xor
rcl
sbb
popf
lock
mov
fnstcw
sbb
in
in
cld
mov
arpl
fdivp
ins
jb
je
popa
mov
push
pop
jb
cmc
pushf
ds
repz
xor
inc
cmp
sub
inc
das
fidivr
push
sub
dec
fs
and
and
loop
ret
lds
ret
out
and
loop
addr16
push
fbld
div
pop
add
push
div
dec
push
pop
neg
test
(bad)
mov
retf
push
jns
fs
and
je
or
dec
call
sar
clc
inc
ret
push
mov
std
fidivr
or
in
popa
stos
pop
inc
sbb
xchg
enter
das
adc
idiv
in
les
(bad)
and
imul
push
addr16
xchg
cdq
push
dec
sbb
sti
add
and
mov
push
and
out
push
inc
fld
jmp
lods
test
fidivr
push
test
call
cmps
in
fcomp
pop
adc
adc
test
cdq
xor
shr
mov
mov
jne
cmps
movs
mov
pusha
cmps
loope
dec
mov
pop
cli
xchg
sbb
or
out
arpl
sbb
pop
lock
fisub
mov
enter
lods
test
inc
add
test
out
mov
or
int3
loope
imul
jo
adc
inc
mov
(bad)
leave
cmp
mov
adc
clc
cmp
inc
pop
sbb
imul
or
mov
jg
pop
mov
ss
outs
cmp
movs
stc
aad
jg
mov
pop
sbb
dec
push
xchg
xor
out
jbe
push
xor
dec
imul
or
or
cmp
or
inc
pop
not
xchg
cld
fwait
jg
ror
(bad)
daa
ss
dec
pop
dec
mov
out
cwde
into
sbb
mov
add
dec
ficomp
mov
loopne
lahf
mov
jg
xchg
bsf
xchg
rol
cmp
pushf
iret
retf
push
mov
and
adc
sahf
push
aas
jle
out
neg
les
call
mov
mov
mov
test
pop
dec
(bad)
fninit
mov
test
scas
iret
jmp
call
mov
mov
leave
popf
hlt
sub
cmp
dec
xchg
test
rcr
push
scas
inc
add
jge
jae
cmp
mov
dec
arpl
pause
mov
and
stos
std
fbstp
jl
sbb
movs
sti
or
lock
jne
stos
sub
push
jp
jle
jmp
jmp
mov
cmps
(bad)
pushf
and
jl
dec
sbb
sub
in
int3
jle
test
sub
and
mov
dec
xlat
int3
pop
jl
jmp
aas
pusha
jae
jle
ja
ss
gs
pop
cmps
and
push
in
or
pop
clc
mov
iret
aaa
or
adc
in
jne
push
push
push
mov
sbb
sub
scas
int3
je
ficomp
mov
xchg
dec
sbb
mov
jge
and
jo
xchg
jg
out
sahf
ret
das
ins
stc
adc
push
pop
stos
or
je
aas
inc
pop
aas
in
movs
std
movs
lods
jmp
icebp
arpl
test
mov
fwait
stos
xor
es
(bad)
push
cmps
sbb
jg
add
loop
sbb
sub
cmps
(bad)
xchg
or
int3
sbb
add
sbb
iret
retf
cmp
aad
into
movs
mov
hlt
jno
cs
pop
ret
in
inc
xlat
gs
dec
test
mov
dec
nop
cmc
das
(bad)
ins
shl
bound
retf
push
xchg
pop
jno
stc
inc
inc
in
(bad)
mov
mov
es
xchg
adc
pop
test
repnz
sti
(bad)
xlat
cmp
in
xchg
sar
cmp
test
xchg
sbb
clc
lock
in
or
(bad)
sbb
jae
out
aaa
jl
js
(bad)
cdq
dec
jne
sti
sub
mov
(bad)
outs
cmp
xchg
movs
pop
pop
dec
inc
call
dec
jo
ss
jo
and
jecxz
fwait
and
add
sub
push
pop
xchg
jbe
push
mov
into
gs
nop
xor
mov
pop
pop
cld
dec
fcmovbe
imul
xchg
movs
clc
pandn
retf
xchg
inc
out
xor
push
adc
ficom
jmp
in
jl
xchg
in
add
jmp
out
or
pop
inc
inc
mov
pop
push
add
xchg
pushf
int
clc
mov
mov
(bad)
adc
cmp
stos
nop
mov
fs
retf
push
fcom
add
addr16
pop
push
and
(bad)
mov
out
add
add
mov
jle
cmp
outs
dec
push
cmp
push
imul
pop
sbb
sub
add
xchg
jo
inc
clc
mov
or
jmp
and
nop
ss
xor
pop
fs
mov
cs
pop
inc
call
and
bswap
outs
xlat
daa
rcl
and
add
dec
push
retf
mov
into
mov
cmc
addr16
inc
pop
lahf
pop
jmp
arpl
loope
xor
sbb
(bad)
iret
popf
mov
jmp
adc
mov
adc
jge
xor
mov
out
scas
adc
dec
sbb
rcr
aam
dec
push
hlt
jmp
sub
sub
or
push
aas
cmp
sahf
sahf
add
sub
aad
test
mov
cmp
inc
fs
xchg
jae
add
popf
xor
ss
(bad)
add
rcr
and
xor
ror
dec
lock
inc
les
push
jbe
idiv
xchg
scas
test
jl
cld
or
rcr
(bad)
hlt
(bad)
rcr
cmp
shl
(bad)
loopne
cmc
mov
add
dec
mov
xchg
mov
lods
out
jns
or
mov
ins
in
mov
out
xor
ja
add
scas
mov
cmps
lods
je
nop
fistp
in
mov
adc
cmc
jl
jecxz
dec
pop
and
add
js
lds
lds
js
test
pop
in
(bad)
mov
jge
push
nop
lods
leave
and
xor
hlt
mov
retf
movs
and
cmp
repz
stos
sub
sbb
icebp
sub
mov
jge
and
jl
dec
popf
mov
test
jg
popa
retf
iret
lahf
cmp
call
mov
push
pop
jmp
fild
sbb
mov
loope
cmp
xchg
mov
lea
or
cdq
push
jmp
pop
adc
pop
fidivr
sahf
mov
dec
pop
ins
mov
mov
out
repnz
sbb
(bad)
mov
lock
jle
push
retf
xchg
cli
jg
aas
push
in
cmp
mov
(bad)
das
cmc
mov
add
dec
ins
clc
push
mov
fs
push
mov
outs
or
mov
scas
mov
sub
cdq
pop
scas
pop
mov
jb
push
sub
stos
sbb
adc
pop
xchg
je
adc
sbb
cmp
sub
movs
cmps
push
sbb
mov
aad
pop
add
adc
inc
out
aaa
cs
jbe
adc
push
les
mov
lahf
test
fild
test
sahf
test
cs
(bad)
not
xor
lock
push
lods
test
out
push
add
shl
push
fstp
jns
mov
fst
pop
inc
mov
popa
mov
jo
leave
ret
fld
movs
xchg
sbb
push
mov
cmp
and
mov
movs
jg
clts
hlt
out
push
mov
fbld
dec
dec
pop
icebp
xchg
push
icebp
rol
shl
sbb
xchg
stos
std
ins
call
aam
xchg
daa
cli
(bad)
(bad)
in
nop
call
push
out
pop
retf
or
push
sbb
and
sub
inc
nop
mov
lods
pop
ins
dec
loope
xor
and
nop
xlat
adc
(bad)
sbb
inc
test
fistp
(bad)
jb
sbb
sub
sub
(bad)
sar
shl
cmps
repz
pop
inc
xchg
movs
outs
jle
adc
fwait
adc
cs
pop
test
pop
ficom
mov
dec
retf
push
mov
dec
xor
sbb
sbb
stos
jno
fdiv
enter
outs
rol
jge
sbb
xchg
lds
jns
enter
(bad)
inc
mov
mov
sub
stc
jecxz
mov
outs
retf
add
mov
ins
scas
push
dec
mov
adc
(bad)
push
imul
lds
add
pop
jno
pushf
cmp
jno
jp
and
jne
dec
ss
in
push
jae
popf
xor
sub
addr16
mov
push
outs
ss
cmc
mov
in
or
lods
call
cwde
sbb
mov
int
cs
icebp
xor
test
mov
pop
adc
loopne
lock
jmp
(bad)
clc
gs
cmp
into
mov
sub
jp
xchg
jmp
add
fidiv
and
xchg
sbb
pop
iret
inc
push
cmp
inc
out
inc
cmp
sub
das
add
and
icebp
push
dec
adc
fstp
add
test
cmp
test
and
cmp
pop
push
pop
xor
cmp
push
push
into
mov
fcomi
call
sub
xchg
retf
inc
add
popf
sbb
xchg
mov
sbb
int3
mov
fisttp
out
ret
mov
ds
mov
(bad)
adc
push
aaa
icebp
cmp
cmp
fstp
addr16
push
bound
mov
and
mov
dec
push
ror
scas
inc
jl
mov
fs
sbb
imul
jne
lods
into
call
lods
in
jl
scas
push
cs
out
mov
hlt
repz
int
jmp
sbb
cmp
dec
sbb
mov
cmp
sub
xchg
sti
add
dec
xchg
jmp
fidivr
ins
jo
sbb
das
stos
outs
loopne
jge
ret
mov
or
sub
mov
int
and
sahf
addr16
dec
push
in
pop
fmul
sub
jo
xchg
data16
mov
mov
sbb
mov
sbb
stos
test
popf
xchg
inc
xchg
jle
jbe
movs
push
mov
mov
and
push
mov
das
push
mov
inc
xchg
cli
cli
push
call
pop
lods
push
loopne
(bad)
fisubr
pusha
sbb
inc
(bad)
mov
mov
sbb
(bad)
shl
add
inc
(bad)
push
data16
push
or
(bad)
jae
test
leave
jmp
dec
stos
in
mov
cli
sbb
fild
fsub
pop
pop
push
mov
das
imul
xor
js
jg
cmp
fucom
das
and
mov
jle
inc
jmp
inc
mov
stc
pop
jns
ror
adc
in
xor
popa
in
jno
lahf
jp
jns
cs
mov
jnp
nop
xchg
adc
or
pop
call
cld
xchg
mov
push
mov
mov
ja
lods
cmp
push
cmps
xchg
cmp
push
push
jae
or
iret
adc
sub
enter
adc
sub
mov
outs
sub
cmps
xchg
jns
out
nop
mov
lods
fs
sub
imul
(bad)
call
sub
xor
mov
out
clc
(bad)
(bad)
mov
ins
and
mov
xchg
cmp
lods
mov
add
loop
retf
daa
mov
jl
mov
add
sbb
aad
sbb
cmp
lods
test
mov
lock
aas
add
aas
scas
mov
xchg
jle
jp
sti
sub
mov
push
cmp
fwait
jl
stos
mov
fucom
es
xor
aas
mov
or
stos
jne
dec
add
movs
mov
hlt
idiv
pop
scas
in
repz
adc
push
or
hlt
or
jle
retf
in
call
cmp
push
and
add
add
dec
ret
pop
push
mov
jecxz
in
sar
cmc
mov
and
movs
dec
inc
and
and
xchg
imul
fwait
pop
push
mov
xlat
add
(bad)
movs
jecxz
ret
aam
loope
popa
mov
pop
shl
jl
dec
and
out
inc
or
mov
or
adc
dec
loop
ss
out
mov
mov
fidiv
pop
fld
push
popf
ret
sbb
dec
sbb
push
pop
mov
fst
dec
les
xor
das
and
jmp
cmp
out
out
mov
sub
jmp
stos
je
fist
mov
mov
sahf
lea
cmp
in
mov
or
shr
and
cmp
sti
dec
mov
cmp
shr
cmp
push
and
xchg
sub
mov
push
scas
pop
shr
pop
jp
test
pop
mov
or
pop
lock
out
test
sub
jl
adc
lea
ins
lahf
jl
mov
imul
mov
adc
mov
movs
cmp
push
icebp
repnz
cmp
shl
mov
jecxz
sahf
add
and
mov
popa
cld
and
into
mov
xchg
inc
call
stos
pop
inc
(bad)
bound
jp
add
outs
imul
stos
push
sti
xchg
xlat
shl
outs
test
add
in
out
cli
mov
or
cmp
jle
add
fs
int
pushf
lock
and
das
ins
mov
add
sahf
add
imul
data16
jecxz
mov
scas
jo
inc
jecxz
std
dec
jmp
ror
jo
daa
stos
retf
inc
xor
add
sub
outs
jnp
shl
je
fdivr
sahf
push
xchg
sub
mov
std
sub
jp
jmp
mov
pop
xchg
movs
sub
or
mov
xor
aam
cmp
mul
mov
push
add
movs
or
pop
pop
and
ret
jne
cmp
and
repnz
pop
jmp
loopne
popf
mov
push
mov
xchg
and
(bad)
cmp
(bad)
cwde
add
rcl
mov
into
inc
dec
xchg
adc
icebp
xchg
pop
pop
loope
add
mov
add
lahf
aad
inc
mov
and
xor
mov
xor
jo
retf
push
and
mov
mov
sub
mov
add
sub
mov
inc
adc
cmp
mov
cmp
mov
sub
mov
cwde
das
mov
mov
mov
retf
mov
int3
ja
imul
cmps
bound
out
aad
or
push
jo
mov
mov
fwait
mov
cmps
fs
nop
xchg
mov
fldenv
dec
outs
jecxz
xchg
cmps
inc
call
mov
fidiv
movs
jne
inc
lock
and
repnz
aad
sahf
push
mov
mov
movs
add
rol
aad
push
mov
sub
mov
pop
lods
out
rcr
inc
inc
fdivrp
cmps
pop
add
mov
imul
int3
push
or
push
icebp
add
pop
mov
mov
sahf
adc
arpl
rcr
rol
jbe
shl
pop
in
clc
mov
pop
jb
fsub
mov
je
cmc
mov
ins
pop
retf
jae
test
push
pusha
lods
shl
mov
test
call
pop
sahf
popa
xchg
(bad)
mov
jae
mov
mov
pop
and
jnp
mov
stc
dec
out
cmp
xchg
inc
push
mov
das
and
enter
or
cwde
ret
xchg
mov
adc
xchg
inc
cwde
scas
xor
cmp
dec
mov
(bad)
cmp
jle
imul
loop
push
jae
retf
mov
adc
cmc
mov
sbb
push
neg
imul
push
jg
ret
xor
mov
or
mov
ins
or
movs
mov
push
pop
sahf
in
push
sbb
xchg
push
mov
pop
(bad)
sub
jmp
loope
jmp
jmp
in
xchg
xchg
fdiv
mov
adc
push
xor
pop
mov
retf
push
inc
xchg
adc
jnp
push
pop
adc
dec
out
outs
movs
aad
imul
dec
mov
aad
mov
push
mov
xchg
cmp
lock
jnp
push
sbb
push
ds
shl
icebp
xor
cmc
js
or
push
icebp
sub
jle
dec
pop
fsubr
dec
daa
test
sahf
adc
sub
add
std
daa
les
and
push
mov
lds
into
xor
mov
bound
test
outs
and
(bad)
sub
ds
cdq
fdivp
add
xor
xchg
or
push
pop
aas
push
pop
inc
jmp
pop
jbe
(bad)
(bad)
mov
and
ja
sar
in
cs
mov
cmovo
in
aas
call
jne
push
push
cmp
in
repnz
xor
mov
loop
jo
retf
sbb
div
push
adc
fs
mov
ficomp
movs
xchg
nop
bound
push
cmp
nop
add
mov
sbb
jg
push
add
bound
out
enter
jg
or
fst
repnz
xor
mov
sub
mov
pop
je
add
xchg
movs
mov
add
add
and
push
loope
ds
aam
inc
arpl
shr
in
pushf
mov
cmp
xchg
mov
out
ins
fcom
mov
dec
add
out
sub
mov
out
add
mov
sahf
daa
lahf
xchg
jae
pop
adc
mov
add
call
jmp
add
out
sti
dec
fisttp
jnp
jb
repnz
jge
add
jmp
sbb
jl
(bad)
lods
rol
in
jp
or
cmp
out
jle
pop
or
sub
retf
fiadd
fild
ins
jbe
jl
jmp
sub
ins
cmp
add
clc
xchg
mov
jecxz
push
adc
mov
mov
jne
xchg
inc
pop
mov
ror
cld
inc
stos
jecxz
lds
cmp
int3
imul
xchg
sub
pop
push
or
add
popa
add
and
jbe
mov
outs
mov
mov
sub
dec
push
pop
fcomip
enter
sbb
fmul
inc
dec
loopne
iret
test
mov
int
and
je
mov
lods
dec
fcom
jp
jne
xor
inc
mov
inc
jmp
mov
cmc
pop
adc
add
jns
ds
int3
aas
fwait
and
cdq
or
es
retf
push
dec
jae
xchg
xor
(bad)
cdq
add
ja
pop
adc
into
push
and
repz
xchg
push
div
xor
or
js
movs
push
jae
and
test
inc
cmps
mov
xor
dec
xlat
xchg
int
pop
test
in
dec
jns
push
pop
sbb
mov
xchg
and
adc
fwait
leave
cli
mov
lahf
jmp
ins
in
xchg
inc
jmp
neg
in
lahf
nop
xor
add
push
dec
xor
loop
loope
popa
outs
push
jb
cmp
lods
and
wrmsr
repnz
jmp
movs
inc
jmp
sub
ret
xchg
jno
mov
mov
mov
adc
leave
mov
add
push
jmp
adc
daa
pop
xchg
cs
cs
xchg
mov
jge
cwde
and
push
and
xchg
mov
and
pop
retf
inc
dec
mov
outs
out
(bad)
push
cli
aad
loop
sub
int
aas
(bad)
cli
inc
mov
pop
jge
mov
nop
sbb
sar
jnp
jae
add
pop
xchg
stc
arpl
test
pop
inc
popa
cmps
cmp
push
out
ror
call
xchg
lods
lods
rcr
in
fdivr
movs
xchg
xor
pop
jns
mov
add
add
loope
lahf
sbb
mov
mov
lods
iret
bound
inc
in
cmp
push
push
addr16
sub
stos
sub
add
xchg
inc
sub
cs
cli
(bad)
pop
scas
xchg
mov
repz
adc
inc
fs
and
movs
call
mov
ror
cmp
xchg
mov
js
inc
sti
repz
test
cmp
jne
repnz
imul
imul
cmp
cmp
retf
mov
std
ins
mov
lds
add
add
jp
add
das
or
mov
addr16
dec
inc
ds
mov
cld
jg
dec
in
mov
pop
js
mov
(bad)
clc
adc
inc
sub
cdq
mov
push
pop
jl
jg
shr
adc
inc
fadd
(bad)
xor
pop
pop
sub
dec
jmp
int3
xor
mov
sbb
fcmovne
mov
lock
sar
test
inc
or
or
xor
sub
pop
cmps
ficom
rol
mov
lea
or
push
aas
rcr
enter
out
adc
sbb
sahf
rcr
pop
jb
push
xor
push
sub
(bad)
rcr
mov
loopne
mov
add
rcr
mov
(bad)
pop
cmp
ins
cld
fld
stc
sahf
out
imul
aas
jnp
sti
inc
jg
mov
adc
cmp
inc
sar
mov
add
mov
sbb
ds
pop
rol
lahf
cs
jne
shl
fild
repnz
mov
or
push
pop
in
lods
mov
shr
in
loopne
add
sbb
(bad)
(bad)
aaa
(bad)
ss
push
fdivr
int3
mov
jmp
(bad)
sbb
popa
daa
xor
sub
ret
scas
jecxz
xor
cld
mov
cmps
stos
adc
or
and
dec
or
stc
int
cmps
xor
aaa
mov
pop
pop
sub
cmps
in
gs
sbb
loopne
jno
push
sbb
xchg
sti
push
xchg
adc
jp
mov
repnz
bound
aad
xchg
add
loop
add
or
(bad)
xor
dec
adc
mov
cli
jno
call
(bad)
push
lods
enter
sbb
add
out
mov
je
outs
mov
push
xchg
es
rcr
je
xchg
inc
cli
cmps
cmp
jmp
xchg
fldenv
or
pop
dec
or
adc
test
cmps
call
popf
or
lock
and
sbb
adc
in
xchg
jbe
enter
adc
adc
push
mov
les
or
cmp
sti
cmp
stos
add
into
sbb
hlt
les
ins
call
mov
jo
mov
leave
xchg
adc
cs
and
dec
mov
pop
dec
icebp
xchg
aam
sbb
in
dec
retf
xchg
jg
xchg
xchg
bound
pop
outs
sbb
dec
pop
jo
(bad)
adc
mov
(bad)
sbb
mov
lods
cli
sbb
and
movs
pop
or
mov
in
jo
scas
je
xor
inc
sbb
(bad)
and
in
jmp
aaa
or
inc
std
imul
sbb
xchg
cmp
jb
ds
mov
xor
add
adc
shr
movs
dec
into
mov
clc
xchg
pop
inc
xor
jbe
outs
fist
cmp
push
outs
lock
jbe
or
sti
pop
push
and
fiadd
lock
stos
daa
jno
jbe
fst
xchg
pop
or
or
pusha
jmp
sbb
out
fidivr
or
jp
aad
sti
xor
and
dec
dec
(bad)
(bad)
lahf
loope
sub
hlt
nop
icebp
leave
jo
mov
out
into
cmp
in
cli
lahf
and
jle
inc
movs
push
dec
sub
push
add
mov
pop
into
xor
movntps
movs
fnstsw
mov
imul
ror
xchg
jge
pop
in
mov
sbb
pop
and
cwde
mov
je
out
adc
neg
out
pop
mov
rcl
leave
icebp
pop
jl
sbb
mov
cmp
popa
mov
test
mov
sub
mov
loope
lea
sbb
dec
xor
in
into
cld
push
and
fwait
retf
out
pop
xchg
cmps
bound
out
push
add
retf
(bad)
adc
mov
mov
sbb
test
loopne
adc
in
nop
test
cmp
fisubr
test
ret
outs
and
mov
ins
mov
lods
pop
pop
push
xchg
push
xor
fisub
mov
jns
add
push
push
retf
and
mov
movs
pop
pop
xchg
repnz
imul
add
sub
add
cmps
push
daa
adc
cs
pop
rcr
in
cmp
repnz
inc
sub
cmps
jb
fisub
dec
or
(bad)
and
cmps
loope
out
inc
sbb
fs
stos
mov
cs
cmp
and
inc
cwde
mov
jne
cmc
pop
pop
retf
nop
imul
(bad)
adc
mov
cmp
jae
jle
push
push
inc
mov
cmps
pop
data16
call
(bad)
dec
das
loop
adc
outs
mov
imul
xor
dec
lods
xchg
sub
xchg
or
push
popf
mov
sar
(bad)
adc
xchg
inc
pop
push
dec
out
xor
mov
lds
pop
fsubr
iret
push
push
ret
xchg
push
add
xchg
and
mov
push
cmp
retf
aaa
mov
mov
xor
xor
repnz
leave
and
dec
cmps
or
mov
or
pop
movs
loopne
inc
mov
loop
sahf
outs
rcr
push
dec
gs
js
cwde
push
dec
xor
or
les
ds
test
aas
mov
jne
je
and
shr
add
pop
ud2
call
ins
sub
adc
dec
ror
leave
adc
push
cs
outs
aas
out
es
std
seta
mov
add
lahf
or
or
imul
scas
and
xchg
push
mov
mov
clc
fst
cmc
inc
and
cli
add
rol
enter
rcl
xchg
imul
cmp
gs
mov
mov
and
fmul
jae
mov
lea
add
adc
test
lods
push
fdiv
popf
imul
retf
imul
movs
inc
in
iret
sbb
inc
stos
inc
leave
in
das
mov
sub
xchg
(bad)
(bad)
test
nop
sbb
in
(bad)
aas
add
mul
pop
in
pop
out
jmp
push
mov
sub
xor
pop
push
cmp
sub
jb
sub
jmp
sbb
pop
mov
mov
sbb
cmc
adc
add
dec
mov
mov
sbb
cmp
or
ficomp
inc
push
shl
push
repz
xor
pushf
icebp
inc
in
dec
fidiv
xor
int
cdq
dec
xor
adc
stos
mov
retf
ss
rcl
mov
aas
call
popa
jmp
test
xor
ret
dec
(bad)
mov
ret
xor
fldcw
jmp
sar
icebp
xchg
xor
scas
jg
movs
and
lods
add
aad
push
or
out
test
mov
add
mov
adc
push
jo
jmp
mov
mov
shr
loope
dec
cs
push
adc
jno
dec
adc
pop
xor
pop
pop
pop
mov
dec
jmp
mov
jnp
sub
shl
and
mul
mov
stos
sti
es
mov
mov
aad
mov
sahf
adc
lods
dec
div
stos
cmp
jmp
push
fild
push
cwde
adc
sub
mov
retf
lods
jo
repz
sub
call
test
in
inc
popa
jnp
out
sbb
mov
push
mov
stos
out
sub
retf
dec
sbb
adc
mov
aad
mov
xchg
push
dec
xchg
cmps
ret
retf
mov
and
dec
jg
mov
inc
shl
mov
int
inc
jns
imul
aam
add
pop
ins
pop
jle
mov
add
mov
and
mov
xor
dec
popf
jmp
xchg
inc
and
xchg
dec
or
pop
dec
mov
scas
sub
pop
test
mov
pop
into
fs
adc
push
fisttp
gs
pusha
xlat
pop
movntps
(bad)
retf
out
lahf
loopne
ja
mov
mov
das
mov
jg
mov
cmc
push
sbb
xor
pusha
fcom
out
(bad)
xchg
jbe
jecxz
mov
lods
push
fdivr
or
mov
and
or
xchg
push
and
addr16
pop
add
push
aad
add
clc
stos
cmp
jns
sahf
pop
loopne
sti
lods
repnz
imul
daa
ficom
sub
add
dec
dec
xor
jmp
lods
mov
push
mov
shl
pop
mov
dec
daa
(bad)
pop
retf
cmc
in
push
cli
ins
ror
inc
add
pop
ja
cmp
movs
fwait
xchg
jbe
push
stos
outs
cmp
push
add
inc
cld
xchg
jno
mov
inc
inc
cld
xor
dec
popa
push
mov
aam
pop
xchg
out
xchg
xlat
xor
cmp
push
xchg
xchg
mov
mov
loop
xor
aaa
mov
rcr
lods
adc
repnz
sbb
xor
sbb
rol
mov
xchg
out
out
pusha
push
mov
adc
pop
inc
sbb
(bad)
int
or
clc
int
mov
popa
or
data16
jg
xchg
xchg
hlt
jbe
iret
pop
push
xchg
dec
and
cmp
fimul
mov
mov
sub
ins
enter
push
lahf
push
(bad)
push
das
pop
(bad)
jno
inc
mov
push
ins
mov
jge
push
test
cmc
push
repz
push
push
(bad)
mov
pop
pop
lock
jne
mov
xchg
pushf
push
lods
out
jle
mov
mov
mov
or
or
fdiv
mov
arpl
pop
clc
ss
imul
into
xor
lahf
test
movs
dec
retf
cmp
(bad)
daa
xchg
push
xor
test
push
ins
jo
add
addr16
repz
iret
lods
or
push
(bad)
jmp
daa
ret
push
xchg
add
lahf
es
outs
sub
mov
fcmovbe
jno
or
jo
jae
fnstsw
(bad)
sub
ins
call
mov
inc
xor
pop
aaa
fstp
xor
icebp
xor
call
sub
pop
xchg
xchg
push
call
cdq
je
shr
xor
retf
mov
cmps
dec
dec
mov
inc
add
push
sub
xor
sub
movs
dec
pop
stos
sbb
lods
mov
xor
lahf
mov
or
xchg
arpl
dec
xchg
sbb
fsubr
sbb
int
sbb
and
sahf
dec
inc
rol
scas
mov
xchg
dec
mov
cmp
add
cmp
fs
pop
pop
mov
pop
push
inc
sahf
mov
and
out
dec
sub
in
mov
push
push
and
popaw
rol
cld
mov
scas
mov
mov
(bad)
mov
call
mov
jmp
dec
push
push
int
mov
sub
dec
and
or
adc
(bad)
cmp
pusha
into
fs
or
cmp
out
sbb
push
lods
lahf
xchg
pop
outs
inc
cmp
pop
into
inc
fstp
in
push
out
rcr
pushf
cld
fidiv
ret
(bad)
xchg
inc
stos
add
push
xchg
fwait
into
jae
fnstenv
sub
int
ja
(bad)
scas
adc
sbb
(bad)
mov
call
inc
xlat
xor
sahf
(bad)
ds
scas
and
and
push
js
call
and
in
cs
scas
movs
xlat
sbb
mov
mov
cli
jnp
fsubr
and
aaa
call
int
cmp
inc
jae
mov
loope
repz
mov
lahf
repz
or
mov
add
retf
es
mov
sub
out
call
aaa
les
bound
dec
(bad)
xor
aas
fmul
movs
add
mov
mov
cwde
adc
mov
fild
and
mov
aam
lods
call
loope
(bad)
in
jge
mov
and
shl
jno
mov
popf
jb
cmp
dec
in
mov
out
sbb
imul
mov
hlt
jns
lea
pop
(bad)
scas
scas
ss
pusha
xor
lods
enter
cmp
push
xor
xor
jl
sti
fcmovnb
mov
xor
movs
leave
aaa
mov
sar
mov
pop
ins
outs
mov
loope
out
daa
jmp
arpl
inc
cmps
cli
sbb
push
int
loopne
cmp
in
dec
add
xor
sbb
mov
aas
(bad)
fidivr
lods
sbb
or
xchg
pop
push
pop
adc
pop
out
xlat
sub
push
or
cdq
lock
out
nop
dec
mov
daa
ds
ret
xchg
inc
idiv
pop
shl
or
xor
add
fdivr
pusha
xlat
inc
adc
stc
inc
clc
rol
push
push
(bad)
(bad)
ret
int
jge
loopne
hlt
xor
out
xchg
imul
jl
dec
test
mov
mov
push
fbld
sub
sbb
inc
push
lds
fsubr
sub
fcom
xor
inc
out
ins
(bad)
jp
ja
out
lea
mov
mov
loop
push
ret
push
inc
out
popa
ror
jne
cs
sbb
adc
or
out
jle
dec
jge
or
mov
mov
enter
das
sub
sbb
mov
mov
xor
mov
cmp
lds
mov
pop
data16
pop
test
stc
xchg
shl
xchg
sub
jg
aas
fcomp
add
fcmovbe
in
mov
sub
xor
and
in
aam
jo
push
ds
pushf
(bad)
test
loopne
dec
inc
push
aas
loopne
xchg
jnp
inc
adc
push
dec
dec
jecxz
and
leave
daa
daa
mov
in
xchg
pop
es
xor
add
retf
add
sahf
loope
jb
fcmovnb
pop
jnp
(bad)
not
xor
fisub
out
pop
shl
jmp
xchg
sbb
popf
mov
lock
sub
pop
or
jl
shr
mov
jae
mov
ret
pop
add
(bad)
scas
out
push
cmp
xor
loopne
inc
push
cdq
inc
pxor
add
xchg
jne
fcom
ds
mov
loop
mov
into
lahf
sub
pop
push
js
fwait
dec
sub
cmp
iret
inc
sbb
jae
cmp
stc
mov
nop
mov
out
nop
mov
mov
test
jp
call
mov
dec
dec
clc
cmp
ror
and
xchg
int
fiadd
pop
outs
shl
mov
mov
mov
and
les
mov
leave
mov
or
in
mov
les
and
and
xchg
cld
mov
mov
inc
cmp
sub
fmul
adc
adc
jge
loope
push
(bad)
jmp
pop
dec
push
js
add
xchg
inc
push
mov
sbb
pushf
aam
aad
mov
pop
and
ins
js
xchg
cmps
pop
(bad)
aad
push
(bad)
js
xchg
dec
std
into
cwde
push
(bad)
aam
inc
inc
mov
or
leave
xchg
jecxz
call
or
and
jns
inc
arpl
dec
jno
sar
xchg
cdq
pusha
xchg
movs
in
addr16
fmul
push
adc
or
bound
cmp
pop
pusha
pop
sbb
push
stc
push
xor
sub
fmulp
mov
inc
sub
and
adc
or
mov
or
(bad)
aas
cmp
gs
hlt
pusha
xchg
lahf
push
stos
ror
into
push
mov
xlat
pusha
sub
pop
aaa
xor
cs
push
inc
pop
std
out
popa
pop
adc
jmp
dec
es
adc
imul
dec
clc
xchg
adc
push
ja
ss
cmc
and
les
adc
popa
popa
(bad)
arpl
push
rcl
repz
fistp
and
ins
stc
inc
in
xchg
rol
xchg
dec
xor
and
lahf
adc
push
pop
sbb
or
sub
adc
call
outs
(bad)
ins
sub
sub
sub
aam
ja
mov
leave
adc
pop
sub
(bad)
clc
(bad)
and
shl
leave
pop
outs
jmp
xor
mov
sahf
int3
and
xor
push
sub
xor
cmps
or
ret
sbb
push
repz
push
push
test
inc
sbb
xchg
push
jbe
das
lahf
call
or
cld
dec
cs
and
popa
loopne
mov
xchg
jmp
mov
(bad)
jo
mov
mov
js
pop
xor
pop
jmp
dec
cs
stos
cmp
mov
scas
imul
nop
cwde
cmp
scas
cmp
ins
adc
sub
pop
loopne
mov
xchg
push
sub
and
fyl2x
jg
js
retf
pop
cwde
cwde
fist
mov
fs
adc
pop
and
enter
out
dec
loopne
cdq
mov
pop
dec
std
add
cmp
add
jnp
push
cmp
pop
mov
cmp
test
outs
inc
push
idiv
xchg
pop
imul
cld
add
scas
leave
mov
test
push
cmp
cmps
push
mov
(bad)
ss
and
mov
inc
mov
call
fstp
test
push
imul
pop
(bad)
out
cmps
(bad)
popf
cmps
loopne
sub
cs
ja
cmps
cmp
dec
repz
lods
mov
aad
pop
(bad)
stc
dec
jmp
idiv
inc
mov
(bad)
xchg
(bad)
dec
jl
out
mov
jns
and
or
sar
jecxz
jno
pop
cld
rol
inc
xor
fstp
mov
cmp
jne
jge
not
sti
call
stos
cmp
push
mov
stos
ja
push
test
in
pop
inc
lds
mov
jmp
sub
cmps
or
shl
jmp
mov
(bad)
jg
add
(bad)
int3
xor
fwait
or
aad
arpl
jl
push
push
and
xor
xchg
out
xchg
mov
outs
dec
and
cwde
cmps
iret
lods
and
and
mov
int
call
pop
lods
and
movs
pusha
in
imul
shl
div
ja
and
xor
mov
loope
outs
pop
js
sub
(bad)
lds
mov
xchg
mov
jb
ins
mov
or
ret
pop
stos
enter
inc
ja
cmp
scas
dec
test
ret
and
add
ins
retf
cmp
sbb
inc
stos
popa
jecxz
cmp
arpl
rcr
call
dec
js
add
in
ds
pop
and
outs
call
call
mov
cld
push
ror
div
jge
das
cmp
jp
arpl
cmps
add
xlat
mov
adc
inc
sti
mov
(bad)
pop
pop
into
cmps
sub
add
(bad)
(bad)
xchg
out
or
outs
into
int
mul
aad
out
mov
retf
push
repnz
sbb
loop
mov
add
aad
pop
outs
jle
lea
jbe
lods
loopne
or
movs
jg
stos
bound
jmp
retf
pop
int3
jae
mov
imul
jno
lahf
ds
inc
and
into
mov
xor
mov
sbb
jmp
jge
and
xor
cmp
xchg
scas
sub
add
and
rol
(bad)
paddw
xor
stc
sti
test
shl
adc
pop
sbb
(bad)
jbe
mov
(bad)
adc
inc
in
mov
jle
cdq
stos
mov
cld
sub
jnp
out
mov
jmp
mov
fwait
hlt
cmp
pop
(bad)
pop
ret
fstp
ins
cld
adc
or
mov
in
mov
enter
data16
repnz
xchg
stc
mov
sbb
retf
cli
lea
add
push
loope
in
mov
sub
hlt
retf
add
imul
push
pushf
adc
xchg
fcom
pop
pop
daa
test
sub
fsubr
(bad)
pop
(bad)
jmp
mov
xor
pop
ret
retf
add
test
sub
imul
sbb
js
cmp
fimul
popf
movs
xchg
jmp
nop
pusha
and
jo
das
pop
rcl
loope
scas
mov
xor
and
ins
sbb
mov
pushf
adc
cs
retf
outs
leave
pusha
pop
inc
add
dec
inc
mov
pushf
fimul
cmc
out
icebp
rol
stos
add
bound
sti
sbb
outs
mov
xor
pop
cdq
jecxz
cmp
(bad)
loop
outs
xchg
in
dec
fstp
cs
add
sbb
lock
mov
in
cli
inc
pop
fstp
xchg
test
lods
icebp
fisub
and
sbb
push
mov
int3
cmp
xor
xchg
dec
and
cmp
je
pusha
fwait
and
xchg
dec
inc
comiss
imul
sub
scas
sub
xchg
daa
inc
xchg
scas
(bad)
imul
inc
cdq
jnp
retf
xor
push
jo
loope
dec
movs
mov
test
out
and
repz
push
inc
stc
fwait
mov
das
repnz
stos
mov
and
jle
call
pusha
jmp
jmp
ret
retf
adc
or
pushf
clc
pop
inc
adc
mov
add
jl
rcl
add
call
or
in
cmp
mov
jnp
adc
(bad)
sub
mov
icebp
int
jmp
dec
int3
fs
fidivr
adc
int
mov
push
dec
mov
push
movs
pop
sysret
push
je
int3
aad
bound
enter
xchg
fsub
cmps
jnp
(bad)
jb
scas
mov
adc
mov
dec
jge
mul
bnd
inc
push
pop
jno
push
pop
js
stc
adc
jp
and
int3
inc
cmp
rcr
out
fucomi
xchg
dec
(bad)
push
cwde
in
adc
fbld
sub
push
mov
iret
mov
mov
xor
(bad)
dec
std
ror
push
push
pop
and
xlat
jp
fcmovnu
call
dec
add
mov
push
cs
movs
add
lock
push
or
out
popa
or
adc
inc
inc
ret
rol
test
shl
xor
ret
or
lods
out
dec
and
cwde
loop
inc
push
(bad)
cmp
outs
xchg
ins
push
mov
cmp
jl
dec
xchg
lea
out
fmul
push
sbb
(bad)
jmp
dec
adc
and
je
and
sub
xor
mov
ds
push
ret
mov
push
loope
iret
nop
mov
or
xchg
lea
pop
sahf
rcl
dec
fisubr
xchg
mov
mov
dec
(bad)
mov
popf
mov
aaa
mov
mov
jae
shl
(bad)
mov
mov
int
bound
pop
rol
xchg
lods
pop
or
scas
cli
and
dec
fsubr
xor
hlt
test
and
cmp
outs
jns
dec
inc
pop
ins
test
sbb
(bad)
not
adc
adc
cld
mov
mov
xchg
rcr
lods
nop
(bad)
cld
dec
cmp
imul
xchg
sbb
push
jbe
xchg
mov
pop
in
gs
stos
inc
lods
sahf
and
shl
lock
push
jecxz
push
lods
int3
cmps
out
adc
in
ret
in
mov
jns
inc
sub
mov
movs
shr
jl
adc
stos
add
push
addr16
and
imul
push
lock
mov
sbb
cmp
test
rol
xchg
repnz
test
(bad)
fsub
ror
inc
inc
sub
cwde
mov
in
addr16
inc
lods
into
sbb
mov
outs
jp
pop
jns
pop
push
hlt
and
sub
movs
lahf
movs
and
and
xchg
leave
mov
dec
or
add
sub
outs
and
add
aaa
test
lds
outs
rol
cmc
out
xchg
mov
movs
mov
inc
sbb
mov
ss
fyl2xp1
in
or
pop
call
add
jnp
jmp
sbb
and
mov
ret
daa
or
inc
sbb
inc
jo
jmp
pop
or
mov
and
call
mov
cld
imul
jle
cmps
push
leave
outs
int
out
test
mov
les
inc
adc
xchg
iret
mov
push
xchg
adc
in
fimul
or
jl
enter
imul
ds
js
in
or
dec
call
dec
or
fnstcw
xor
test
mov
loope
or
inc
inc
xchg
push
(bad)
(bad)
std
sbb
arpl
dec
push
jo
cmp
pusha
stos
pop
push
sub
jo
ret
add
mov
cmc
ja
sbb
in
jge
jecxz
pop
mov
push
imul
es
imul
sbb
test
daa
or
lock
xor
(bad)
aad
push
dec
jl
xor
xor
inc
xchg
add
inc
jne
enter
add
xchg
in
jmp
adc
hlt
in
sbb
add
inc
xchg
adc
icebp
or
jnp
imul
inc
and
adc
cmc
setge
xor
nop
cli
cs
pop
cmp
inc
dec
or
ja
jmp
ss
aad
pop
retf
mov
jnp
adc
jb
or
dec
test
mov
xchg
(bad)
fs
test
inc
cmp
mov
jno
jae
jo
inc
jg
popa
aad
mov
xchg
jns
jle
xor
push
pop
push
and
or
iret
mov
daa
jno
jmp
cmp
lea
imul
dec
retf
sbb
loope
outs
mov
push
gs
adc
and
enter
clc
xor
cmc
push
mov
sbb
clc
mov
jne
mov
leave
xlat
pop
lods
out
mov
jne
data16
dec
mov
pop
cmp
jmp
push
jne
call
icebp
int
add
dec
push
sub
cmps
repz
mov
push
(bad)
jp
(bad)
fwait
leave
and
fisubr
cmp
inc
mov
inc
out
pusha
inc
or
and
dec
cmps
(bad)
pop
mov
mov
cld
xchg
xor
out
fild
bound
out
out
and
pop
xchg
and
push
cmp
div
ret
lea
sahf
mov
cmp
dec
dec
sbb
addr16
es
fcom
das
jg
jo
add
xchg
pop
inc
add
jge
cmp
and
jle
sbb
push
stos
clc
and
push
sub
test
or
and
xchg
das
xor
inc
sar
outs
push
pop
push
out
push
sub
dec
jno
sub
retf
cmp
jmp
and
push
xchg
pop
call
and
aam
popa
rcl
nop
adc
call
(bad)
lods
shr
jle
or
ss
lahf
daa
fisub
mul
dec
int
cs
push
mul
hlt
ror
add
std
push
dec
sub
or
enter
push
sbb
and
or
jg
pop
pop
aas
aaa
adc
rep
(bad)
xchg
je
fstp
imul
push
rcr
cmp
gs
pop
dec
push
adc
rcr
in
dec
push
xor
scas
lea
dec
pushw
and
(bad)
retf
xor
push
jae
push
adc
movs
push
lahf
mov
sub
dec
mov
retf
jo
movs
fcom
mov
in
pop
in
pusha
xor
inc
(bad)
mov
sar
int3
adc
cmp
mov
scas
ror
lods
test
jnp
(bad)
mov
std
and
cmp
lock
mov
adc
xor
test
in
retf
or
das
int
sahf
or
(bad)
sbb
loope
cmc
rol
aaa
shr
or
xchg
fcom
push
lds
hlt
or
push
jb
outs
rcl
xor
dec
jecxz
dec
push
inc
sbb
push
cmc
fcomp
xchg
xchg
mov
sbb
pusha
push
inc
xchg
jecxz
cmp
adc
and
pop
pusha
and
sub
push
mov
pop
shl
test
call
fild
mov
sbb
rol
cmp
dec
rcl
mov
loop
mov
cli
pop
adc
jge
xor
xchg
and
cmps
test
or
mov
mov
xchg
es
inc
sbb
loope
adc
jmp
xor
mov
adc
jne
sub
xlat
pop
dec
push
dec
daa
sub
jge
push
mov
in
add
dec
loope
cmp
icebp
xor
cs
adc
(bad)
pop
lods
pushf
bound
push
call
shl
daa
push
test
out
add
int
pop
or
or
mov
sti
xor
and
ret
or
inc
jnp
and
cdq
xchg
daa
(bad)
call
inc
icebp
scas
icebp
cmps
and
push
and
cdq
fsub
cmp
push
push
outs
into
xor
test
push
adc
(bad)
(bad)
stc
inc
(bad)
out
lahf
xchg
fwait
dec
xor
fwait
popa
loop
inc
mov
dec
lods
dec
and
push
dec
not
loop
xor
scas
mov
xor
in
inc
addr16
push
daa
sahf
test
inc
les
bound
popa
xchg
mov
loopne
xor
out
cmp
mov
mov
and
add
pusha
mov
clc
ss
or
or
mov
jl
mov
add
lods
jp
sub
mov
and
xchg
ds
cli
cli
popf
and
shl
jl
sbb
push
jbe
push
push
rcr
jge
mov
fisubr
cli
hlt
adc
jae
xchg
ror
rol
cmps
add
mov
(bad)
inc
dec
push
dec
das
push
fisttp
jmp
jbe
fwait
data16
je
fdiv
push
call
jl
pop
jg
pop
sbb
push
outs
cmp
int3
call
in
dec
jno
lea
sbb
mov
and
loopne
jge
imul
xchg
stos
popa
out
cmp
gs
inc
test
retf
xchg
push
adc
cmp
outs
mov
mov
ret
(bad)
push
xor
pop
paddusw
inc
test
into
pop
mov
lahf
int
scas
mov
sbb
cdq
dec
sub
out
jg
test
xor
aad
mov
(bad)
in
and
scas
xor
gs
push
push
add
inc
jns
js
xor
cs
jne
cwde
pushf
js
add
not
push
mov
cmp
cmp
xchg
add
ja
and
mov
push
pushf
sbb
mov
mov
xchg
inc
and
sub
imul
push
sub
fisubr
add
jecxz
mov
out
push
icebp
xchg
jmp
icebp
je
lds
es
shr
xchg
(bad)
mov
cld
(bad)
or
adc
cmp
cmp
into
push
rcl
cmps
(bad)
fidiv
(bad)
adc
inc
rol
inc
cmp
inc
add
mov
fmul
add
adc
and
lods
add
pop
mov
ss
fsub
adc
loope
cmp
ds
ror
push
pop
fisub
shr
inc
(bad)
in
loope
cwde
jmp
pop
(bad)
repz
stos
jnp
inc
sub
(bad)
xchg
test
and
popf
cmp
xchg
or
aad
ja
or
je
lods
fist
jno
dec
mov
xor
ror
ins
inc
inc
mov
push
(bad)
sbb
and
push
xchg
sar
jl
in
repnz
pushf
fbstp
daa
adc
jnp
jns
or
test
aam
jne
sbb
jnp
mov
jp
pop
arpl
mov
jl
ja
rcl
movs
in
push
pop
movs
idiv
leave
gs
xchg
sbb
push
and
or
sahf
sti
xor
cs
mov
imul
call
aas
popf
push
test
movs
inc
frstor
pop
sub
mov
xor
inc
lods
sub
frstor
push
jp
fisub
xchg
or
push
test
out
pop
inc
sbb
outs
fwait
test
fnstsw
scas
or
cwde
mov
in
call
inc
pop
(bad)
fisubr
fidiv
imul
(bad)
(bad)
pop
inc
jge
fwait
xchg
jp
jb
sub
xor
(bad)
push
retf
push
mov
scas
xor
not
fwait
sbb
in
cmp
lods
cli
jnp
shl
or
daa
pop
loop
or
ret
pop
inc
mov
or
mov
js
xchg
add
cmp
jmp
mov
test
mov
cmc
in
sahf
pop
jne
xlat
je
das
test
inc
push
nop
jnp
fld
std
sbb
pop
mov
and
pop
call
ja
fs
repz
ret
jbe
fistp
xor
gs
xor
out
push
cmps
cmp
ja
or
test
(bad)
pop
pop
pop
and
fidivr
dec
data16
neg
mov
(bad)
nop
les
movs
xor
test
ror
push
lahf
data16
add
or
ss
fmul
nop
jecxz
sbb
scas
in
sbb
mov
gs
push
cwde
push
out
data16
mov
bound
sbb
add
(bad)
out
loope
js
push
xchg
sub
jmp
sbb
or
fs
mov
(bad)
cwde
bound
push
xor
mov
jno
popa
stos
cli
add
xor
mov
dec
push
out
shl
and
jae
lods
adc
mov
mov
icebp
sub
jns
cmps
cld
iret
stc
jmp
gs
pop
div
jo
inc
pop
lock
ins
cmp
mov
out
cmp
jnp
push
cdq
sub
jp
gs
(bad)
fld
jmp
fdivr
(bad)
cmp
shr
cwde
mov
repz
push
das
push
jle
mov
mov
or
pop
or
cmp
(bad)
lds
shr
in
enter
pop
sub
dec
or
pop
add
mov
outs
jg
popa
dec
repnz
pop
and
fild
in
addr16
and
mov
daa
leave
gs
jne
inc
or
push
push
call
mov
inc
mov
in
xor
in
or
(bad)
cmp
(bad)
mov
out
add
jle
dec
jo
or
out
mov
lds
inc
and
out
and
clc
ss
jns
add
push
inc
jl
in
sub
jne
sbb
aam
and
dec
std
jns
inc
pop
mov
jno
cmp
mov
or
les
jmp
sub
mov
or
ins
fs
sbb
cli
jle
pop
sbb
ds
ret
ins
bound
ss
pop
ds
not
sub
sbb
repz
xchg
add
cmp
sahf
stc
jbe
push
ret
scas
xor
aad
xor
adc
lea
mov
dec
inc
lock
sbb
out
mov
(bad)
or
ds
int3
jmp
repnz
enter
dec
ja
movs
rol
mov
mov
jg
jp
dec
popf
retf
fistp
les
je
and
pop
add
rcl
mov
ds
xchg
outs
jl
hlt
enter
push
xor
aam
addr16
mov
sbb
sbb
cmps
push
xor
jge
les
inc
adc
(bad)
add
sub
lods
inc
lods
(bad)
dec
and
inc
xor
jb
shl
jl
adc
mov
pop
neg
mov
cld
test
push
cmc
pusha
arpl
add
adc
jg
mov
retf
pop
push
and
iret
loop
mov
lods
mov
ins
pop
fdivr
js
sbb
inc
or
mov
fist
rol
(bad)
jmp
push
pop
ror
in
jbe
cmps
iret
mov
xor
loopne
popa
imul
pop
add
sbb
xchg
add
hlt
mov
mov
aam
(bad)
scas
cmp
sbb
sbb
xchg
aam
mov
repz
jns
sbb
or
add
sahf
inc
and
movs
mov
cdq
into
jns
or
repnz
sbb
in
aad
push
sub
mov
sti
int
and
in
mov
jl
test
cli
ffreep
mov
jg
pop
rcl
or
bnd
ss
adc
cmp
push
mov
retf
inc
data16
pop
loopne
enter
cld
sbb
push
(bad)
lods
mov
sahf
test
push
stos
and
add
ds
int3
push
fcom
inc
jno
inc
pop
lock
sub
mov
fist
xchg
and
jge
test
jecxz
inc
add
sbb
ds
or
rol
test
cli
cmp
aas
jne
push
or
mov
pop
mov
cmc
xchg
imul
sub
sub
xor
and
push
test
movsx
mov
xchg
lods
popf
mov
lea
jmp
or
aam
popa
cmp
pop
sub
cmp
cli
ret
mov
lods
jmp
and
sub
lds
cmp
in
inc
inc
outs
aam
out
popa
push
lds
sbb
retf
adc
jmp
push
sub
jmp
lahf
dec
sub
loope
pop
fisub
mov
push
xor
fs
(bad)
sbb
mov
push
repz
jp
in
pusha
ds
ins
adc
jecxz
mov
test
out
mov
cmp
imul
add
popa
rcr
call
and
rcr
xor
out
inc
cmps
or
inc
sar
jle
int3
int3
xchg
(bad)
pop
xor
arpl
or
jmp
sub
int
jae
cmps
test
psubusb
ins
retf
push
aas
nop
pushf
jno
hlt
sbb
dec
lods
(bad)
jmp
inc
add
lds
add
add
and
jnp
push
xchg
or
dec
jae
cmps
jl
xor
popa
cmc
outs
add
fcmovnb
push
xchg
mov
dec
(bad)
cdq
jb
retf
jmp
push
push
shr
outs
xlat
mov
push
bound
xlat
add
or
je
cmp
(bad)
cmpxchg
cmp
or
shr
xchg
leave
jbe
xlat
mov
aam
lahf
cmp
dec
jge
cmp
adc
test
lods
jg
or
push
xor
movs
in
sar
call
retf
inc
sbb
imul
cmp
sbb
push
mov
xor
push
ins
loope
adc
int
push
movs
aad
and
bound
pop
pop
mov
mov
push
xchg
pop
loopne
inc
dec
mov
rol
in
loope
pop
sbb
mov
mov
scas
or
adc
push
aas
jg
ret
js
mov
mov
push
adc
scas
mov
jns
xchg
jnp
mov
addr16
xor
leave
lahf
sub
fidiv
leave
jns
mov
mov
sti
(bad)
imul
packssdw
mov
cld
push
aam
adc
movs
xor
sbb
shl
enter
fstp
push
add
push
adc
push
shl
icebp
adc
push
pop
in
inc
or
shr
dec
sub
adc
int
idiv
repz
sbb
xchg
inc
sub
mov
sub
sub
jno
hlt
adc
dec
inc
xchg
cmp
(bad)
call
jnp
mul
or
fiadd
pop
jmp
jmp
or
sub
arpl
jmp
xor
std
mov
add
aam
jb
or
(bad)
in
(bad)
mov
mov
imul
neg
xchg
call
(bad)
push
out
nop
xchg
xor
imul
push
out
pop
movs
shl
ret
xor
and
cmps
or
(bad)
aam
xchg
mov
or
and
cmp
or
ret
jne
pop
mov
sbb
pop
addr16
(bad)
mov
loopne
mov
xchg
test
push
inc
out
nop
aad
pushf
loop
(bad)
cli
push
ret
out
mov
sbb
fcmovne
enter
ret
pop
inc
inc
mov
out
pop
ins
shl
fwait
std
stc
jge
or
loopne
std
xlat
out
sbb
jb
ds
(bad)
pop
push
jbe
or
out
xor
cmps
cdq
test
add
jmp
jp
or
cmps
xchg
push
iret
jb
aam
sbb
push
pop
imul
mov
pop
(bad)
pop
(bad)
pop
jns
pop
push
dec
pop
(bad)
loop
ret
retf
pop
adc
xchg
jbe
fcmovnbe
fcmovnu
jbe
(bad)
lock
shl
push
mov
jg
out
add
jg
out
test
sub
ins
adc
movlps
leave
arpl
pop
push
mov
or
sahf
sbb
bound
dec
pop
ret
cs
inc
cmp
out
(bad)
nop
sbb
scas
div
int
retf
sub
pop
outs
retf
jmp
sub
mov
jbe
je
arpl
mov
pop
mov
hlt
fwait
mov
out
push
jns
jp
mov
packsswb
or
sub
push
sti
mov
test
pusha
xor
cwde
dec
push
push
cmp
shr
dec
mov
mul
push
add
jno
aam
adc
rol
in
push
mov
movs
fnstcw
clc
shl
pop
add
and
int
dec
sbb
and
cmp
outs
or
push
xor
in
push
push
cs
outs
cld
sahf
das
fs
test
mov
mov
mov
xor
cmp
and
xor
fcomp
cmp
and
daa
jl
add
cmp
shr
scas
hlt
(bad)
in
cmp
ret
sbb
sbb
stos
and
into
out
cmc
push
int
mov
cmps
in
ins
scas
jmp
pop
adc
push
inc
leave
mov
es
sbb
pop
and
hlt
mov
repz
pop
pop
dec
sbb
bound
or
iret
retf
outs
ret
sub
dec
push
ins
pop
ss
xchg
pop
and
test
cwde
test
xor
sbb
jns
xchg
pop
fcomp
add
ret
push
adc
out
mov
dec
test
(bad)
mov
fs
and
icebp
dec
call
call
rcl
mov
jg
push
xchg
xor
mov
aam
jl
push
mov
out
(bad)
stc
jno
jecxz
mov
mov
sbb
es
and
test
adc
(bad)
outs
loope
in
(bad)
hlt
mov
push
pop
(bad)
test
inc
sbb
mov
cmp
cli
cmps
mov
and
mov
stc
test
sar
outs
mov
cmc
in
(bad)
or
add
push
mov
cmp
cmp
imul
or
popa
push
cs
cdq
out
enter
or
imul
jle
xchg
imul
and
inc
adc
clc
loop
jmp
daa
xor
pop
cli
sbb
in
push
mov
dec
lock
xlat
pop
les
cmp
sbb
(bad)
pushf
das
push
or
pushf
pop
xchg
xchg
clc
call
add
in
mov
popf
into
inc
adc
rcl
(bad)
das
pop
mov
repz
pop
nop
sbb
in
cmp
pusha
pop
das
xlat
in
lea
xchg
jmp
(bad)
adc
(bad)
enter
jle
enter
enter
push
jmp
test
(bad)
adc
mov
mov
imul
movs
inc
ja
or
arpl
jmp
add
mov
sub
inc
add
jb
cmp
retf
xor
icebp
ins
add
int
ins
fstp
ficomp
push
mov
dec
push
outs
(bad)
mov
js
or
and
int
inc
inc
ror
idiv
push
pop
in
xor
das
push
cmc
xor
les
cmp
adc
sbb
or
add
nop
pop
shr
xor
pop
shr
cli
nop
sbb
pusha
(bad)
mov
xor
pop
push
and
adc
popf
push
loope
jnp
and
push
mov
mov
cmp
in
(bad)
push
xor
mov
gs
mov
sbb
aaa
and
cmp
repnz
fcmovbe
stos
mov
mov
and
sub
jmp
in
ror
arpl
stos
in
ret
lock
jmp
sub
inc
cwde
inc
mov
jmp
into
push
aas
sub
add
fisttp
cli
sbb
(bad)
neg
inc
js
or
or
aas
fwait
add
cmp
pop
mov
pop
cli
adc
and
pop
add
pop
mov
(bad)
(bad)
(bad)
movs
xchg
dec
mov
leave
push
hlt
movs
jge
and
mov
push
in
sbb
push
jmp
in
push
dec
and
add
add
pop
mov
sbb
mov
pop
cmp
enter
imul
jnp
jnp
fst
test
jge
ins
icebp
jmp
sub
fsubr
je
cs
sbb
lea
cmp
cvtps2pi
test
cmp
inc
xchg
jo
pop
leave
shr
lods
fwait
mov
(bad)
test
inc
xchg
sar
mov
rcr
sahf
enter
xchg
or
rol
test
push
push
lock
mov
outs
(bad)
sbb
dec
and
(bad)
cmp
(bad)
cmp
mov
sub
sbb
jp
sbb
jb
xor
(bad)
cld
or
mov
mov
mov
pop
adc
stos
loop
push
int
stos
stc
aad
jmp
shl
add
les
retf
xchg
adc
in
hlt
push
adc
pop
jge
sbb
(bad)
add
jmp
xor
popa
xchg
rol
aaa
in
mov
jmp
inc
sbb
mov
adc
xor
xor
lock
add
mov
out
pop
lods
ret
push
rcr
xchg
(bad)
add
push
dec
adc
xor
pop
jbe
and
in
xchg
lods
das
or
das
loopne
pusha
test
dec
mov
retf
int3
cmp
shr
daa
in
dec
lahf
pushf
xchg
cmp
xchg
xchg
jb
adc
pcmpeqd
pop
sbb
jg
sub
imul
xchg
jns
mov
jae
leave
outs
pop
jg
xchg
icebp
fiadd
jmp
iret
jne
push
xor
and
sbb
dec
les
movs
fstp
jle
test
xor
call
cmp
data16
std
xor
or
ss
fimul
and
in
inc
inc
xchg
daa
inc
sahf
dec
xchg
or
pop
mov
cmp
out
adc
cmp
fnstsw
fild
ja
jae
clc
outs
repnz
popf
xchg
inc
push
mov
xlat
call
adc
push
pop
or
mov
pop
test
(bad)
mov
mov
dec
xchg
fs
jecxz
arpl
aaa
sub
gs
xchg
pop
xor
ss
xchg
pop
mov
mov
call
nop
sbb
sbb
sub
stc
jle
pop
mov
add
shl
pop
sti
pushf
aas
aam
pop
arpl
(bad)
es
or
sar
sub
jl
pop
and
xor
mov
fwait
ret
(bad)
sahf
and
pusha
mov
xchg
sub
mov
popf
cli
mov
push
shl
adc
mov
es
sbb
sbb
xor
sti
cmp
adc
gs
stos
ficom
push
shr
fisubr
call
hlt
nop
pop
std
mov
mov
popa
sub
icebp
repz
xchg
inc
das
pushf
sahf
mov
js
and
mov
sub
int3
pop
jne
fs
popa
pop
fild
add
hlt
add
jge
pop
mov
adc
into
cmp
dec
nop
test
dec
sbb
jge
js
cwde
fsub
dec
jecxz
jp
push
and
pop
stos
repnz
mov
lods
add
dec
in
pop
adc
pusha
xor
popa
enter
data16
push
call
jno
icebp
or
jecxz
ss
sbb
into
mov
aaa
adc
lea
pop
call
push
pop
call
cmps
dec
push
clc
add
xchg
repz
pop
cmp
adc
ins
lock
repnz
and
nop
sbb
mov
cmp
pop
sub
mov
in
push
in
ror
jmp
in
(bad)
xor
mov
iret
hlt
ins
push
popf
pop
cmps
jb
in
xchg
pop
clc
pop
and
jg
out
cmc
(bad)
outs
push
imul
mov
addr16
iret
mov
mov
aaa
nop
xchg
sub
xor
test
sbb
(bad)
pop
and
lds
jbe
(bad)
jl
ret
add
or
ror
sar
cld
xchg
add
mov
test
out
loop
xor
sbb
aas
test
mov
dec
rol
xchg
test
xchg
arpl
dec
test
sub
adc
mov
in
sub
cmp
daa
cld
push
pop
inc
inc
(bad)
push
call
cmp
mov
cs
call
cmp
retf
push
sti
jmp
mov
in
out
jb
leave
fldlg2
je
sahf
in
stos
mov
aam
sub
shl
pop
xchg
adc
jb
sub
ret
out
xor
pop
or
adc
pop
jns
rcr
leave
sub
lods
sti
pop
push
dec
loop
adc
mov
adc
loope
imul
out
push
dec
pop
fsubr
les
jmp
inc
pop
ds
out
push
ja
hlt
sbb
outs
inc
or
mov
and
scas
jmp
and
pop
fcmovnbe
clc
dec
cwde
rol
push
popa
lods
adc
loopne
cmc
dec
dec
mov
add
sub
sar
push
xor
jo
(bad)
jnp
and
adc
add
jl
(bad)
daa
jge
pop
mov
fsub
adc
add
pop
(bad)
pushf
(bad)
pop
pop
and
xor
loope
mov
nop
(bad)
xor
(bad)
rol
or
out
lods
stos
daa
repz
repnz
xchg
(bad)
repnz
push
call
jae
ins
clc
gs
or
loop
(bad)
in
xor
(bad)
out
cmps
iret
or
shr
push
loopne
push
(bad)
mov
jbe
xor
arpl
jns
inc
sbb
cmps
mov
popa
mov
xchg
inc
fwait
sbb
scas
cdq
pop
pop
mov
push
pop
call
xlat
sti
add
fdivr
jnp
mov
sbb
(bad)
pop
sub
ret
leave
sub
mov
mov
jg
arpl
lds
out
mov
fisub
push
jbe
rcl
cmp
mov
cmp
(bad)
sar
mov
in
cmps
pop
adc
xchg
sub
xchg
or
loopne
cmp
jno
(bad)
stc
ja
xlat
pop
stos
pusha
repz
mov
add
stos
mov
add
hlt
sbb
movzx
scas
out
les
daa
dec
push
mov
cmp
sbb
in
jb
xor
xchg
dec
ja
push
ins
data16
movs
ss
(bad)
ficomp
inc
in
ror
mov
mov
in
xchg
jb
push
adc
movs
xchg
xor
sbb
xchg
adc
dec
sub
lea
jecxz
enter
mov
repz
outs
test
or
loope
mov
lods
and
mov
sub
mov
push
test
xchg
ror
inc
gs
pop
jb
mov
(bad)
pop
or
repz
fs
(bad)
call
mov
shl
lods
jbe
add
dec
adc
pusha
or
xor
or
lock
add
loope
out
cmc
ins
cmc
cmp
loop
pop
loopne
outs
movs
cmp
push
not
nop
push
push
inc
or
or
push
mov
push
push
dec
sbb
ret
sbb
adc
add
popf
in
xlat
lahf
test
out
adc
pop
dec
fcmove
push
fcomp
fisttp
sbb
mov
dec
dec
adc
mov
mov
call
or
cmp
or
push
add
(bad)
popa
jmp
xor
jle
mul
iret
mov
movs
pop
iret
jns
inc
add
repz
jmp
ret
sahf
int3
push
or
(bad)
jmp
mov
or
sahf
jmp
(bad)
xor
fucomp
pop
das
jecxz
pop
or
out
clc
jg
aaa
(bad)
int
or
in
call
dec
aam
mov
cmp
bound
repnz
mov
shl
push
cmp
mov
mov
arpl
fcomp
jae
pop
sub
cwde
pop
adc
enter
dec
sub
ret
ja
aas
and
out
pop
ret
push
mov
out
lds
dec
jmp
rol
ins
inc
sbb
das
xlat
mov
inc
and
neg
out
mov
ret
xchg
pushf
sub
mov
scas
sbb
fmul
pop
cmp
loop
mov
xchg
push
push
bound
or
cmp
push
xchg
not
pop
popa
lock
loopne
in
push
sbb
adc
fld
xchg
leave
pop
sbb
sbb
dec
imul
push
mov
test
mov
adc
in
popf
in
xor
inc
lahf
add
pop
push
xlat
aaa
pusha
pop
and
adc
mov
add
fstp
mov
cs
(bad)
xor
mov
test
stc
in
or
jo
cmp
lea
jno
cmp
scas
outs
push
sub
popa
in
fidiv
ret
mov
cmps
bound
jne
dec
jno
push
aad
shr
(bad)
sar
mov
mov
fwait
push
movs
sti
dec
fbld
sub
(bad)
mov
and
cmovae
fld
mul
imul
fdiv
dec
jge
mov
jno
fs
dec
mov
es
inc
add
in
cli
int3
mov
xchg
outs
cli
aas
lods
mov
sub
cdq
sahf
dec
push
inc
inc
push
clc
pop
in
dec
stos
mov
mov
scas
adc
xor
(bad)
mov
test
ins
pusha
scas
dec
lock
dec
mov
jg
inc
and
sub
cli
int
mov
dec
idiv
xchg
cwde
daa
adc
xchg
inc
add
vmovq
fcomp
cmp
mov
inc
or
stos
push
adc
pop
jecxz
stos
add
xchg
pop
aad
jo
iret
cs
pop
mov
lods
stos
xor
cmc
out
std
cmp
dec
into
je
mul
in
ss
lahf
mov
idiv
leave
ficom
sbb
push
imul
mov
cmp
mov
out
inc
jo
push
xor
aaa
dec
test
rol
test
mov
fstp
push
xchg
or
push
lock
dec
pop
sub
mov
not
cli
xchg
push
pop
push
ja
mov
ds
pop
fcomp
aas
or
bound
push
xor
sub
and
(bad)
jecxz
jb
or
cmp
push
mov
stos
jge
daa
inc
or
aas
fsub
mov
sbb
div
loope
ret
lock
pop
mov
cmp
out
dec
push
(bad)
ficom
retf
adc
or
sbb
ret
int
adc
jp
jo
cmp
jp
sub
hlt
sub
xchg
push
lods
test
pop
mov
mov
iret
xlat
or
sub
dec
push
xchg
in
dec
xchg
nop
es
adc
jle
cmp
push
mov
jbe
in
fld
jmp
jle
jae
fsub
sub
(bad)
(bad)
std
push
sahf
in
stc
xchg
ins
dec
rcr
ins
adc
lods
or
outs
jle
popa
fistp
or
(bad)
enter
jb
xchg
xor
call
ins
sub
mov
or
inc
and
test
(bad)
popa
xchg
mov
pop
jle
repnz
shr
aas
mov
nop
neg
pop
xchg
(bad)
mov
div
inc
fld
scas
inc
ss
pop
sub
mov
sbb
ret
loope
push
and
adc
adc
push
dec
repz
out
mov
dec
sub
mov
call
mov
ins
fisub
rol
jns
sbb
xchg
push
(bad)
ret
sar
mov
pop
and
adc
cmp
push
xchg
cld
inc
test
fst
jnp
adc
retf
sub
leave
out
xor
adc
popa
pop
add
push
into
cmp
sub
and
sbb
cmp
push
lods
cmp
mov
push
daa
sub
lahf
xchg
sub
dec
es
(bad)
out
pop
idiv
movs
xor
pop
pop
adc
mov
mov
test
push
sbb
jb
(bad)
xlat
jl
and
inc
call
fadd
xchg
sbb
and
dec
inc
xor
cs
popa
jp
jecxz
add
dec
add
iret
jge
mov
mov
sar
mov
pop
jae
jmp
ins
arpl
dec
push
jle
(bad)
mov
or
sbb
dec
mov
cmps
inc
or
mov
sub
(bad)
(bad)
aam
mov
stos
sub
inc
mov
rol
cmps
ffreep
js
and
mov
ins
xor
sbb
or
leave
push
mul
ds
add
shl
imul
inc
mov
sub
iret
nop
jmp
mov
add
dec
adc
out
jg
mov
imul
cmp
jmp
mov
cmp
and
sbb
mov
aaa
out
jmp
pop
(bad)
cmc
push
mov
push
pop
jge
ror
retf
inc
cmp
lods
fild
mov
lahf
lea
xlat
dec
jb
test
ror
xchg
push
pop
mov
aad
fild
xor
loopne
xor
dec
cmp
cli
dec
sub
imul
fidiv
jne
or
xor
pop
ret
inc
dec
sub
sbb
lock
dec
iret
in
xchg
bound
retf
in
pop
call
xchg
imul
pop
mov
fsub
out
pusha
(bad)
sbb
mov
cmp
xor
les
bound
jmp
jno
inc
rol
pushf
inc
jae
cmp
mov
fcomp
xchg
mov
inc
xchg
jbe
repnz
scas
addr16
mov
sbb
sub
push
int3
xchg
xor
xchg
inc
dec
pop
hlt
pop
xlat
sbb
add
enter
xchg
or
xchg
mov
cli
push
mov
sbb
jno
rol
les
fucom
lods
ins
retf
mov
inc
mov
inc
call
sub
jl
dec
xchg
add
cwde
pop
mov
sar
in
das
fwait
pop
into
mov
test
sbb
xchg
out
inc
fstp
xor
push
xchg
(bad)
cli
fcmovu
(bad)
push
pop
or
or
fdivr
mov
or
xchg
and
icebp
aad
inc
cmp
loop
xchg
add
(bad)
mov
xchg
popf
nop
shl
push
cmps
fst
ror
(bad)
ds
cmp
jl
mov
adc
push
pop
xchg
and
sbb
shr
(bad)
jne
jbe
shl
popa
mov
ret
inc
or
sbb
add
jns
aad
or
ror
int3
out
mov
pushf
mov
mov
outs
adc
cmp
dec
cmp
test
push
rol
and
popf
call
xchg
cmp
outs
(bad)
les
mov
imul
mov
adc
dec
jo
mov
mov
cld
push
inc
psubd
jle
lods
call
call
sub
push
mov
inc
or
enter
aas
xchg
mov
mov
jnp
mov
shl
mov
sbb
add
test
push
enter
sti
aas
cmp
mov
mov
sub
xchg
repnz
fist
xor
mov
dec
daa
inc
enter
scas
mov
and
mov
xor
mov
jmp
mov
and
dec
add
xchg
xchg
or
inc
dec
pop
jle
outs
mov
or
test
icebp
lods
icebp
test
mov
pop
dec
fwait
mov
into
mov
and
jb
call
outs
icebp
lods
inc
pop
push
fild
popf
popa
mov
test
ror
inc
fcomp
loop
cdq
popa
adc
ror
push
jg
or
sbb
pop
stos
mov
scas
jae
mov
mov
fistp
jb
out
inc
cmp
xor
in
push
mov
ins
mov
jecxz
test
adc
pop
and
xchg
repnz
jae
cdq
lods
mov
xchg
clc
lods
dec
adc
ss
inc
pop
sub
enter
int3
dec
(bad)
sahf
pop
jg
jo
dec
mov
das
add
call
loopne
pusha
dec
test
in
inc
lods
add
out
bound
xchg
mov
loopne
xchg
leave
mov
loop
std
outs
fidivr
out
push
(bad)
les
addr16
jge
dec
shl
fnsave
repz
hlt
mov
js
popf
mov
into
nop
xchg
push
and
xchg
dec
jo
pop
fwait
(bad)
je
jb
repnz
ja
mov
out
in
daa
lock
enter
or
xchg
fld
push
enter
mov
lock
cmp
and
fs
cwde
jnp
rol
and
xchg
gs
sbb
adc
fistp
push
inc
aad
mov
cmp
scas
xor
pop
mov
xchg
jmp
add
enter
sub
pop
sub
(bad)
call
inc
adc
add
cmp
test
shl
and
fwait
push
mov
test
(bad)
lods
retf
ja
fst
daa
ins
and
jnp
das
or
jne
sub
retf
scas
jge
dec
mov
inc
cmps
(bad)
in
push
inc
rol
mov
and
fwait
push
lods
(bad)
ds
cld
mov
je
imul
pmuludq
push
xchg
cli
and
push
cmp
ret
pop
adc
xchg
push
mov
dec
retf
mov
push
mov
inc
pop
mov
lea
adc
pop
cmps
ror
bound
in
das
daa
das
scas
pop
(bad)
stc
imul
push
shr
mov
jle
scas
dec
mov
test
push
popa
rol
std
fwait
sbb
shl
xchg
mov
fcomi
sbb
mov
arpl
pop
jmp
push
dec
inc
add
pop
adc
sahf
dec
ss
pop
mov
sbb
push
mov
jo
push
jmp
fs
mov
fidiv
and
retf
sub
push
add
add
popa
mov
outs
mov
aas
fmul
movs
jno
mov
dec
push
jo
push
sub
sub
dec
sbb
pop
lods
push
jns
xchg
dec
xchg
ss
cmp
and
add
call
mov
xchg
loop
ds
jmp
adc
ins
(bad)
stos
xor
push
xchg
cmp
mov
sub
je
sub
in
xchg
lods
pushf
add
and
retf
lods
cmc
(bad)
mov
adc
cmp
mov
xor
fcom
iret
sub
push
test
and
jnp
ret
movs
das
std
jp
jecxz
lods
cmps
push
xor
push
pop
ins
sub
xor
jmp
or
mov
les
ss
mov
mov
neg
hlt
mov
dec
leave
sahf
dec
sbb
jnp
cwde
fidivr
mov
mov
(bad)
lods
nop
ss
mov
pop
retf
push
imul
rcl
push
sbb
test
rcr
or
or
aam
sbb
rcl
add
push
dec
aam
aaa
test
push
and
sbb
mov
pop
shr
and
jecxz
lea
iret
(bad)
mov
dec
mov
adc
xchg
and
sbb
stos
fnsave
push
cmp
setns
jo
xlat
sub
stc
in
add
push
je
(bad)
fwait
scas
jl
jne
scas
test
popa
push
ret
paddsw
sub
dec
(bad)
in
inc
popf
or
rcr
mov
jle
mov
sahf
xchg
in
cmps
pop
xchg
dec
cs
xor
mov
inc
and
lods
adc
inc
cmc
pop
out
push
hlt
aas
push
cmps
ror
imul
jnp
push
ins
test
sub
xor
movaps
loop
sub
jbe
retf
push
jbe
cmp
shl
nop
ja
jl
dec
loope
sub
fst
jecxz
jp
shl
in
xchg
loopne
xchg
cmp
mov
mov
fs
inc
not
inc
(bad)
mov
pop
fisttp
std
test
cmp
addr16
(bad)
mov
aas
mov
aaa
push
push
pusha
daa
nop
sub
cmps
arpl
std
jo
je
add
jmp
push
mov
mov
adc
and
retf
jae
mov
cmp
pop
(bad)
cmp
dec
pusha
not
pusha
scas
fcom
push
stos
cmp
shl
pop
int3
sbb
push
scas
dec
addr16
ret
in
push
leave
inc
pop
xor
dec
adc
pop
pushf
xchg
push
test
xor
cmp
add
or
(bad)
popa
(bad)
mov
add
or
test
mov
and
lods
call
and
leave
mov
add
outs
scas
(bad)
ins
adc
jle
and
pop
jge
pop
mov
ja
mov
in
sub
cmp
cmp
ins
add
mov
xchg
xchg
mov
add
aam
sar
xchg
mov
call
(bad)
fcomp
ror
jl
cli
cmp
repnz
ficom
xor
add
jp
iret
mov
out
jae
jbe
push
adc
xor
clc
xlat
pop
sbb
stos
imul
mov
inc
test
lods
data16
and
ins
dec
ds
imul
inc
pusha
jns
add
ret
mov
pusha
pop
popa
or
xor
xlat
or
jmp
mov
addr16
fbstp
xor
cmp
xchg
gs
xchg
push
inc
ficomp
cmp
cmp
xchg
ret
(bad)
sti
(bad)
jae
call
cmps
add
push
or
adc
and
xor
cmp
das
bound
ins
lahf
gs
stc
push
and
mov
cmc
jbe
sbb
leave
imul
pop
cmc
and
out
xchg
jno
or
fbld
int
jge
mov
hlt
dec
movs
in
cmc
xor
mov
sbb
std
and
pop
mov
jmp
sbb
xor
sub
add
fwait
cld
inc
jecxz
xor
inc
ins
test
lock
pop
adc
mov
xchg
shl
mov
jnp
and
jbe
pop
dec
add
les
push
dec
or
rcl
dec
sti
dec
lods
and
mov
xor
mov
or
(bad)
xchg
or
retf
stc
retf
cmps
icebp
ins
inc
or
mov
fnsave
ror
jg
out
js
jle
push
pusha
adc
jb
pop
imul
xor
mov
dec
and
cmp
je
and
cmps
imul
out
pop
add
xlat
bound
add
cdq
popa
mov
jge
or
rcl
or
jecxz
mul
dec
(bad)
je
jmp
loopne
stos
jg
push
xlat
push
arpl
pop
mov
jecxz
mov
sbb
stos
or
or
sbb
retf
mov
xchg
fxrstor
fptan
or
aaa
mov
push
test
jno
mov
dec
mov
cwde
sar
and
xlat
out
pop
and
lahf
xor
pusha
stos
outs
mov
dec
out
pop
inc
fmul
pop
dec
pop
stos
call
pop
repnz
(bad)
shl
sub
dec
out
inc
mov
leave
sub
jne
sbb
inc
mov
pop
inc
or
scas
pop
and
mov
mov
or
jno
ds
jmp
mov
faddp
xchg
mov
aad
cmp
inc
inc
or
and
std
cwde
mov
out
rcr
rcl
mov
dec
out
push
into
jbe
sar
sub
inc
cmp
div
arpl
fmul
sahf
dec
dec
or
enter
xchg
dec
xchg
out
pop
mov
cmc
cmp
dec
test
cmps
jmp
int
pop
scas
ds
push
push
xchg
xchg
push
lods
into
inc
pop
fisubr
xor
fisubr
xchg
div
(bad)
or
push
mov
bound
cmp
sbb
cmp
add
pop
mov
rol
mov
fdiv
push
push
xor
xchg
or
enter
int3
into
fs
fidiv
popa
xor
dec
lock
xchg
mov
in
into
js
pop
jmp
jle
imul
xor
in
inc
cs
fmul
xchg
movs
arpl
nop
arpl
in
imul
mov
fild
or
in
leave
cmp
out
and
xor
pop
pop
xchg
xor
movs
cmps
sahf
inc
sub
lea
test
xor
out
lds
mov
jo
push
mov
push
sub
seta
out
test
ror
lea
xor
sub
jecxz
repnz
out
popa
(bad)
adc
sbb
mov
dec
(bad)
ins
mov
bound
inc
pop
call
pop
pop
dec
xchg
test
add
dec
lea
push
sub
call
inc
movs
gs
pop
hlt
cmp
enter
arpl
(bad)
or
iret
mov
jmp
and
aas
aad
sub
shl
pop
and
mov
imul
sahf
(bad)
fisubr
aam
dec
cli
mov
xchg
clc
es
es
pusha
push
lods
fnsave
push
xor
xchg
cmps
inc
xchg
mov
xchg
in
mov
fwait
into
dec
dec
das
ret
hlt
aam
fcomp
push
pop
sbb
or
les
xchg
xor
dec
test
adc
aam
ja
or
inc
xchg
fwait
pop
das
fs
pop
and
sbb
push
retf
mov
xchg
enter
ins
mov
scas
xchg
xlat
pushf
add
mov
test
xlat
loop
fcom
sub
out
push
jg
lods
cmc
adc
sub
push
popa
push
ds
cmps
(bad)
push
imul
stc
xchg
push
cmp
je
inc
xchg
mov
fistp
cmps
cmps
psubb
add
cmc
inc
dec
lahf
jg
mov
mov
mov
mov
(bad)
jmp
pop
das
loop
mov
in
aas
jmp
dec
out
mov
push
adc
rol
add
jmp
pop
pop
dec
inc
popa
jno
add
pop
je
retf
jns
out
dec
shr
mov
mov
cmps
scas
xchg
cmc
sub
mov
pop
int
aaa
cmps
xchg
xor
inc
pushf
jge
xor
shr
daa
push
mov
dec
xchg
shl
int3
test
xor
cdq
lahf
mov
sbb
xchg
mov
jl
jno
add
aad
pushf
or
pop
pushf
jne
imul
sbb
loopne
sbb
in
aas
jmp
jmp
xor
(bad)
mul
cmp
hlt
sub
xor
stos
cmp
xor
push
pop
sub
push
and
sub
pop
dec
cmps
fidivr
push
cmp
mov
jp
fimul
dec
adc
icebp
mov
cmps
rol
repz
fisubr
retf
jmp
xor
mov
dec
(bad)
adc
cmp
test
xchg
jbe
xchg
pop
call
or
and
adc
pop
jb
aam
push
ja
mov
pop
xchg
outs
iret
inc
test
mov
or
add
push
xchg
xor
sbb
xchg
xor
pmaxub
mov
icebp
sub
fstp
mov
mov
je
add
jb
loopne
lock
rcl
test
mov
inc
fidiv
aaa
or
fimul
aas
cmovl
jns
(bad)
push
lods
fild
je
popf
cmp
dec
sub
pop
cmp
pop
push
(bad)
mov
xor
push
mov
sub
shl
stos
hlt
in
mov
and
call
add
sbb
lods
sbb
dec
in
jnp
push
dec
int
test
out
aad
jmp
mov
push
retf
adc
es
loopne
push
cmp
popa
popf
lahf
in
jne
jae
inc
jmp
stos
dec
cs
cmp
cmps
pop
mov
aam
fmul
int3
pop
setge
in
cmp
ret
test
push
push
push
cmps
jmp
mov
fcmovu
sti
imul
stos
stos
dec
sub
mov
imul
std
jmp
mov
jmp
out
pushf
sub
jbe
jns
bound
loop
scas
xchg
dec
cmps
cmps
add
push
inc
lds
movs
pusha
dec
arpl
mov
jle
aam
xchg
jae
push
std
jne
xor
pushf
sub
loopne
ss
cs
movs
mov
outs
ret
movs
sbb
sub
div
mov
xor
sbb
pop
les
ds
jle
jbe
mov
call
cli
xor
mov
fmul
fcom
mov
sbb
cmp
mov
test
test
add
pop
(bad)
cmc
mov
mov
push
leave
mov
daa
(bad)
and
pop
sub
pop
sub
popf
or
arpl
sub
retf
outs
and
push
cmp
mov
sbb
bound
movs
int3
xor
sub
inc
adc
js
push
sub
aaa
sub
fbstp
mov
loope
push
cmp
aad
sbb
jmp
adc
cmps
fwait
dec
shl
add
jp
imul
(bad)
iret
adc
in
popa
cmc
repz
xchg
pop
push
sar
(bad)
fdiv
pop
(bad)
cs
test
inc
and
pop
mov
jg
test
outs
pop
into
pop
leave
mov
sub
xor
cmps
sbb
jmp
mov
pushf
mov
sbb
cmp
stc
jns
push
lock
rol
inc
popa
and
js
inc
jle
popf
mov
lea
fist
inc
mov
out
leave
(bad)
dec
movs
jl
loop
jns
out
in
and
sar
or
and
push
out
call
add
shl
sbb
pop
pop
scas
out
sub
cmp
cli
add
mov
pusha
push
mov
mov
(bad)
ds
push
call
xor
dec
jno
add
sub
mul
stos
xlat
leave
cmp
aaa
push
cwde
lods
cli
lods
and
cdq
ins
pop
adc
add
inc
jmp
shr
ds
sub
idiv
aaa
xor
sub
xchg
iret
(bad)
sahf
neg
cmp
inc
cmp
fidivr
mov
mov
cld
push
jmp
fbld
sbb
imul
int3
or
pop
outs
or
dec
dec
loop
xor
mov
jg
ss
js
pusha
pop
int3
jp
sbb
xor
push
mov
in
ret
push
add
mov
(bad)
retf
push
or
cmps
or
adc
ins
jp
icebp
shl
ret
add
sub
or
xchg
pop
or
(bad)
fcomp
imul
in
in
jae
test
add
cmps
int3
sub
mov
add
cmps
adc
inc
and
adc
push
div
les
pop
shl
sti
sbb
sbb
test
and
inc
mov
or
or
jle
mov
gs
(bad)
jmp
xchg
(bad)
jmp
aad
bound
iret
test
adc
lods
movs
mov
sub
sub
jle
mov
jl
int
cmps
pop
out
xor
jbe
daa
cmp
(bad)
mov
adc
mov
xor
lea
fcomp
or
gs
popf
or
mov
mov
(bad)
out
int
pop
int3
mov
dec
or
out
iret
push
int3
or
push
dec
std
add
enter
rcr
enter
pop
scas
jecxz
sbb
inc
enter
scas
xchg
push
repz
mov
(bad)
fsubr
cmps
mov
pop
sbb
addr16
cmps
or
and
rcl
lods
(bad)
mov
ja
inc
sub
inc
adc
pushf
cs
or
dec
mov
xor
jecxz
sbb
idiv
xchg
cmp
push
scas
push
sub
(bad)
sar
pop
cmp
retf
fwait
inc
dec
hlt
sub
pop
inc
pop
cli
lods
inc
pop
loop
dec
shl
div
fcmovu
xor
jmp
repz
sahf
nop
outs
cmp
pop
mov
add
test
push
ficom
xor
xchg
mov
iret
pushf
and
xor
fld
pushf
ins
push
rcr
cmps
aas
xlat
ror
inc
adc
aas
add
or
cmc
and
push
or
in
(bad)
scas
dec
or
xchg
outs
outs
nop
sub
(bad)
repz
and
sbb
iret
sbb
test
xor
movs
imul
xor
bound
enter
push
clc
and
js
int3
(bad)
add
outs
push
fsubr
push
nop
mov
(bad)
jl
sti
dec
mov
pop
les
test
repz
test
repz
cwde
cs
pop
sbb
loopne
sahf
in
ret
xor
das
call
mov
(bad)
mov
mov
mov
ret
gs
add
pop
sub
sbb
inc
shl
xor
pop
add
out
push
pop
shr
jae
xchg
lods
and
ret
outs
pop
xchg
call
ror
(bad)
mov
cld
bound
adc
out
push
add
in
retf
call
inc
bound
aaa
repnz
inc
inc
jl
or
push
aad
mov
mov
ins
sbb
out
cmp
lock
std
aam
pop
mov
sbb
and
outs
out
mov
mov
push
mov
lock
jno
cmp
mov
xor
int3
sub
jecxz
ins
sbb
mov
aam
adc
nop
cmp
jge
mov
mov
scas
addr16
mov
mov
and
mov
ja
sub
(bad)
outs
cmp
in
fwait
test
or
nop
jb
sub
mov
fldcw
ds
iret
push
pusha
je
loop
arpl
cmp
imul
jb
jg
xchg
push
dec
push
push
std
xor
dec
in
adc
test
lods
daa
cmp
les
mov
cmp
adc
ss
jne
xor
and
pop
adc
aam
jno
and
ins
mov
fwait
push
ret
jno
mov
mov
or
movs
clc
pop
lock
mov
ficom
in
and
dec
(bad)
out
lods
sar
mov
jno
mov
test
dec
lods
hlt
js
outs
xchg
pop
arpl
push
and
sbb
test
ins
(bad)
dec
or
pop
sub
loopne
shl
in
popf
aam
fs
(bad)
dec
iret
and
jecxz
or
stos
inc
mov
xor
push
in
sbb
jns
cmps
mov
lods
aam
xor
out
test
dec
sub
jmp
fiadd
bound
test
adc
push
(bad)
and
dec
jbe
cmps
(bad)
mov
cmp
retf
scas
pop
psadbw
aam
popf
out
inc
popa
mov
xchg
jb
dec
out
movs
adc
stos
lea
push
movs
inc
push
mov
out
das
rcr
mov
leave
and
shl
imul
xchg
xor
retf
jns
and
mov
adc
(bad)
jno
mov
jmp
pop
mov
and
pusha
pop
arpl
xor
jne
nop
dec
rol
sti
jge
mov
pusha
outs
(bad)
cmp
aaa
add
xor
movs
lahf
not
sbb
imul
fmul
add
add
into
sbb
movs
and
or
xchg
mov
(bad)
shr
movs
ins
stos
arpl
inc
or
(bad)
jb
fcomp
mov
xor
add
in
imul
fistp
fnstsw
adc
xchg
popf
mov
xchg
cdq
mov
cli
out
mov
jns
punpcklbw
ret
and
sub
movs
lods
dec
mov
sub
nop
sub
sub
mov
mov
sti
push
es
mov
fs
aas
inc
(bad)
fcmove
fistp
je
or
in
daa
mov
xlat
repz
adc
fsubr
jae
mov
mov
mov
push
imul
sbb
out
jp
and
jmp
retf
dec
mov
retf
sti
xchg
fs
cmp
sub
sar
or
cmp
data16
sub
jae
mov
out
les
inc
jmp
add
cld
fxch
sbb
mov
ss
pop
or
dec
and
nop
sub
pop
das
xlat
stos
xchg
scas
jmp
stos
loop
jp
xor
(bad)
cmp
sub
in
cmp
(bad)
(bad)
movs
imul
sub
daa
adc
aaa
loope
(bad)
dec
mul
or
in
fdivp
shl
cmp
sub
dec
jo
jle
inc
lea
ss
pop
cmp
sbb
adc
popa
push
mov
hlt
fs
in
imul
ins
jge
mov
les
dec
add
jecxz
cmp
cli
dec
test
add
jmp
and
stc
aas
sbb
leave
adc
js
jnp
add
cmp
fldenv
adc
pusha
jecxz
inc
mov
je
xchg
add
push
pop
lods
iret
int
inc
cmps
add
or
push
(bad)
cwde
dec
sub
cld
mov
jbe
stos
dec
outs
mov
and
mov
dec
or
and
or
js
sbb
movs
or
ja
hlt
out
jns
sub
scas
ror
xchg
mov
push
sub
adc
jmp
pop
scas
retf
push
not
cmp
or
jns
dec
pop
inc
lock
pop
or
mov
push
dec
mov
bound
mov
inc
cmp
out
add
leave
shl
pop
xchg
sub
inc
aam
mov
add
clc
sub
sub
cs
xchg
or
fidivr
test
shld
cmp
mov
mov
arpl
into
add
mov
or
out
popa
add
retf
stos
pop
push
xor
ficom
sub
push
daa
outs
and
adc
ret
ins
mov
adc
arpl
out
in
inc
mov
jb
mov
int
jb
ins
inc
int3
mov
ds
xor
adc
adc
cli
mov
adc
cwde
ffree
or
addr16
jmp
popa
int
inc
sub
iret
adc
xchg
dec
retf
adc
cmp
mov
cmp
cmps
pusha
test
shl
jo
pop
add
adc
loop
or
call
out
sbb
jge
pop
dec
mov
pop
popa
xor
and
xchg
pop
rol
aas
mov
sti
pop
test
fxtract
rol
mov
stos
shl
jmp
cmp
bnd
jno
jl
lods
mov
cmps
pop
xchg
sub
add
add
cld
dec
(bad)
jg
repnz
cmp
jecxz
sbb
mov
adc
mov
test
enter
test
mov
xlat
repz
dec
test
aad
in
pop
xchg
imul
adc
pop
shr
adc
mov
add
jmp
pop
or
in
popf
aam
aad
test
and
sbb
hlt
outs
aas
mov
addr16
and
xor
jmp
enter
mov
pop
cmp
xchg
inc
daa
and
mov
adc
and
and
scas
jmp
mov
cmps
(bad)
das
(bad)
shl
sub
mov
mov
out
in
lds
jle
add
jle
mov
dec
mov
pop
push
out
jge
cmp
out
xor
push
outs
and
sbb
popf
retf
fisttp
addr16
mov
pushf
add
mov
mov
pop
inc
js
fwait
and
add
leave
mov
imul
xor
das
dec
xor
xchg
out
sub
ret
ja
aam
cs
test
mov
jle
(bad)
rcr
imul
pop
shl
xor
js
dec
js
cmp
push
jp
fsubr
cdq
rcr
mov
shl
push
mov
loope
xchg
mov
retf
(bad)
and
out
sub
fwait
adc
mov
daa
push
dec
adc
(bad)
arpl
xor
movs
or
clc
mov
call
adc
cmp
shl
loopne
dec
add
pop
dec
pop
xchg
mov
inc
jbe
xchg
add
add
(bad)
mov
neg
adc
imul
repnz
out
sub
jmp
mov
add
xchg
jge
mov
(bad)
mul
sbb
iret
jo
test
push
add
add
call
inc
dec
dec
xchg
mov
pop
xor
bound
or
pop
xchg
xchg
aad
std
xchg
jae
lods
pop
or
std
push
cmp
aaa
into
inc
mov
lods
imul
inc
push
or
pop
std
fucomip
hlt
inc
cli
push
pop
inc
vpaddsw
imul
stos
sub
mov
mov
sub
je
(bad)
and
jne
mov
xchg
add
movs
mov
jg
stos
test
ds
leave
fisttp
jge
adc
xchg
and
sub
movs
xchg
cmp
mov
rol
jae
fwait
and
out
jge
sbb
xchg
cmc
push
(bad)
(bad)
ret
aas
pop
add
mov
jae
mov
jno
into
fwait
movs
outs
jne
cmp
xchg
addr16
mov
ficomp
push
or
lds
ins
clc
push
or
xor
mov
cmps
daa
dec
lock
xchg
mov
fsubr
mov
test
icebp
ja
mov
or
out
call
fld
jge
and
sbb
mov
(bad)
sbb
push
adc
pop
inc
cli
cmp
or
movs
push
sbb
in
jns
dec
adc
inc
mov
setbe
imul
retf
shl
jmp
and
fimul
cli
imul
and
jo
inc
push
pop
mov
mov
fcomp
movs
repz
fisubr
sub
and
pushf
fidiv
xchg
mov
jp
xchg
iret
call
aaa
xor
cmp
adc
mov
mov
xor
inc
popf
out
lock
sub
jnp
add
pop
pop
sbb
mov
xchg
repz
dec
add
rep
iret
sti
dec
stc
adc
ror
fsubp
mov
lods
jb
ds
out
(bad)
mov
push
imul
shl
(bad)
pop
ror
sub
jmp
push
add
leave
dec
ror
or
icebp
icebp
fldenv
popa
aad
repnz
mov
aas
sahf
sub
jne
xor
loopne
mov
or
inc
pop
mov
push
adc
jbe
sbb
inc
icebp
(bad)
cmps
out
mov
bound
fcos
mov
shl
or
mov
popf
imul
hlt
movs
dec
into
sbb
repnz
iret
jbe
and
aad
out
add
sub
shl
into
fild
and
aas
xchg
xor
sti
jne
dec
inc
repnz
gs
jmp
jge
xchg
ret
in
sub
mov
(bad)
stos
loopne
sbb
push
repnz
cld
mov
mov
jg
stos
repz
adc
cmp
mov
pop
stos
jbe
je
cmc
xor
cmc
stc
data16
mov
pushf
dec
cmp
mov
push
add
(bad)
mov
loope
lahf
bound
sub
iret
mov
pop
lea
mov
fbstp
fisttp
mov
dec
inc
clc
mov
and
enter
int
xor
xchg
jb
and
cld
shl
xchg
dec
sbb
in
adc
nop
xchg
push
stos
sbb
and
cdq
dec
fidivr
add
(bad)
xor
xor
test
jmp
fistp
dec
mov
out
sahf
icebp
add
dec
cmp
or
shl
cmp
push
and
adc
mov
sbb
add
leave
pushf
mov
jle
jns
pusha
(bad)
pop
ret
sub
push
xor
test
sub
ins
addr16
jle
xor
(bad)
popf
push
add
add
retf
retf
fisttp
cmp
and
jecxz
cmc
inc
jge
mov
retf
les
cmp
and
xor
add
inc
ss
xlat
jno
pushf
shl
adc
dec
int
pop
int3
or
jmp
inc
adc
jae
(bad)
fcomp
cld
jge
retf
cmp
jl
call
clc
and
jecxz
in
sbb
add
adc
in
enter
je
ins
lock
ins
jns
or
shl
mov
xchg
xor
xchg
and
outs
test
imul
loope
icebp
icebp
sub
aaa
mov
ins
(bad)
test
out
xchg
add
pusha
clc
nop
scas
cwde
out
mov
lock
cwde
push
addr16
dec
jo
jmp
sbb
cld
lods
imul
dec
pushf
cld
push
imul
jp
ins
es
test
rol
rcr
add
std
sbb
mov
(bad)
out
sub
jo
mov
(bad)
das
xor
mov
jb
adc
out
pop
ficom
in
sub
push
or
sbb
mov
and
add
push
bound
retf
push
jns
sbb
sub
and
clc
int
jns
xor
mov
and
mov
mov
daa
mov
pop
das
lds
sub
or
enter
out
mov
xor
mov
mov
lods
lock
add
std
xor
sub
fstp
out
sti
cmp
add
xor
sub
out
(bad)
es
hlt
add
inc
aas
(bad)
push
pop
(bad)
push
mov
cmp
jne
cmp
mov
add
icebp
shl
gs
jmp
and
sub
inc
cmp
fwait
xor
repz
mov
cmp
icebp
jbe
sub
cs
je
jg
add
mov
(bad)
xor
jno
loop
xor
in
lahf
add
mov
pop
jns
call
fst
mov
sbb
rcr
hlt
cli
iret
in
retf
loop
or
outs
mov
scas
sub
enter
xchg
fdiv
das
outs
cwde
and
cmp
dec
sub
sbb
pop
mov
int
or
push
jnp
out
aam
mov
push
into
sub
push
div
dec
mov
or
leave
imul
rcr
iret
scas
sbb
std
dec
mov
mov
mov
cmp
jmp
loop
dec
sbb
cmp
jle
cmp
aaa
imul
inc
arpl
out
xchg
and
mov
add
in
in
push
jmp
inc
xchg
jb
call
and
(bad)
jp
pusha
cdq
sbb
fdivr
sbb
mov
and
lds
or
pop
mov
jb
push
and
movs
out
sbb
stos
addr16
or
js
xchg
add
adc
xchg
test
push
aaa
and
data16
imul
dec
dec
cmps
and
nop
pop
push
mov
fbstp
outs
push
mov
inc
jmp
mov
cli
jmp
pop
mov
jo
xchg
and
std
iret
sub
inc
mov
fidiv
lds
jne
push
stc
pop
sbb
and
jae
pop
jns
dec
stos
jle
add
cmps
cmps
mov
or
sub
add
xor
cmovns
jge
cdq
in
out
xor
cwde
jge
in
xchg
jge
ror
mov
mov
bound
jg
or
arpl
mov
adc
cs
mov
mov
push
ins
pop
inc
mov
mov
shl
jle
movs
push
dec
mov
ficom
sub
retf
push
pop
xor
lock
jns
ja
lods
xchg
and
mov
xor
mov
stos
add
sbb
out
inc
inc
inc
push
inc
fisttp
dec
daa
dec
xor
inc
jge
xor
push
sub
call
add
addr16
adc
jl
fistp
gs
pcmpgtd
test
inc
pop
sahf
sub
js
ja
cmp
test
int
loopne
adc
dec
pop
mov
mov
or
daa
shl
shl
mov
xor
dec
mov
pop
or
dec
jns
in
sbb
scas
mov
and
sti
xor
adc
cmp
in
mov
dec
fnstenv
cwde
call
outs
pop
std
inc
sbb
cs
inc
or
dec
mov
dec
(bad)
aad
pop
gs
shl
and
int
pop
pop
xchg
or
mov
push
lods
lahf
lahf
popa
ds
icebp
dec
sbb
sub
fisttp
jae
frstpm(287
stos
sub
adc
mov
jo
scas
or
and
aad
movs
clc
jb
cmps
sbb
mov
xchg
ins
bound
lock
mov
pop
adc
jno
daa
jg
inc
in
mov
dec
jns
test
or
cmc
sbb
test
mov
and
dec
scas
and
popf
pop
cmc
add
cwde
outs
leave
add
movs
sub
mov
jae
fdivr
cmp
leave
aaa
dec
push
mov
dec
sbb
jecxz
sahf
lods
cmc
push
pop
xor
cmc
fsub
inc
cmp
sub
rcl
mov
xchg
mov
pop
aaa
push
mov
and
or
in
push
imul
mov
adc
std
es
xor
outs
fild
out
sub
xchg
leave
cwde
loope
push
sub
jl
jp
test
fist
(bad)
jmp
cmp
aam
aaa
leave
mov
mov
fcom
jo
xchg
loop
sbb
cmps
jp
xchg
cmps
les
jb
cmp
xor
js
pop
jb
push
aas
and
cmps
iret
add
cs
and
ror
enter
cmps
aaa
jnp
jp
(bad)
xor
inc
ret
lock
cmp
xor
dec
imul
add
icebp
sbb
mov
mov
ret
mov
jo
stos
ror
mov
js
scas
sub
adc
inc
jmp
dec
lock
inc
jnp
(bad)
xor
fstp
test
repnz
rcl
xor
lea
(bad)
imul
stos
or
out
sub
mov
sahf
mov
loopne
cmp
shl
xchg
out
jg
ss
xor
cwde
stc
mov
pop
push
call
bound
out
sahf
xchg
push
or
mov
aaa
aaa
xlat
mov
push
popf
jae
fidivr
push
mov
mov
(bad)
xor
push
cmps
jne
jno
cmp
out
fisttp
int3
div
pop
adc
mov
(bad)
push
jno
rcl
stos
jl
mov
jo
iret
cs
mov
call
jns
ret
mov
loope
movs
mov
ficom
pop
adc
ja
cmp
fadd
pop
int3
push
mov
test
je
iret
push
push
xchg
cmps
push
mov
loope
jae
jmp
call
pushw
into
push
jno
cmp
mov
lds
dec
inc
or
mov
jg
or
sbb
jb
mov
xchg
stc
push
ret
push
scas
js
pop
xor
jnp
sub
pushf
outs
jl
jle
jle
loop
or
pop
sub
test
jo
repnz
popa
call
xor
xchg
mov
aaa
mov
push
jno
mov
jmp
xchg
add
adc
add
scas
inc
stc
cmp
clc
cdq
in
push
fadd
nop
sahf
push
adc
mov
and
inc
add
movs
(bad)
xchg
jecxz
inc
iret
fucomi
adc
cli
mov
xchg
sub
push
clc
sbb
xchg
xchg
int
jl
jl
mov
jnp
sub
sub
adc
sbb
popa
call
jbe
das
fist
outs
mov
sar
pop
div
sub
mov
push
movs
aad
fst
js
jo
pop
in
aaa
retf
in
sub
cmp
push
fdiv
sbb
mov
dec
adc
cdq
jmp
push
mov
sbb
push
mov
sar
ins
out
inc
shl
xor
jle
movs
add
xor
test
jne
sbb
cmp
in
cdq
jle
shr
inc
or
jbe
jae
and
aam
cmp
adc
jnp
repz
add
jb
aad
call
(bad)
stc
sbb
jg
leave
(bad)
fdivr
fidivr
shr
cdq
fmul
int3
rcr
sub
xchg
mov
pop
jmp
cmp
cld
cld
dec
xlat
adc
sbb
imul
imul
add
pop
stc
adc
mov
sbb
mov
lds
loopne
scas
inc
xchg
das
jl
fimul
mov
adc
outs
outs
inc
pop
mov
gs
daa
iret
xor
dec
push
sbb
popf
jmp
lds
retf
ret
scas
je
fist
mov
icebp
cld
pop
cmp
jae
push
lock
inc
data16
mov
jne
cld
xor
ins
mov
adc
ins
xchg
jae
inc
jmp
fdivr
outs
pop
iret
aad
gs
repz
sbb
jmp
daa
mov
push
scas
and
pop
pop
or
ror
push
add
dec
aad
not
mov
das
scas
cmp
mov
pop
jecxz
fisttp
into
mov
(bad)
movs
mov
push
scas
jmp
arpl
ja
xchg
jnp
in
ret
pop
cmps
or
sahf
ret
movs
push
pusha
stc
add
adc
leave
imul
cwde
sub
jo
mov
pop
sub
pop
cmp
pop
mov
xlat
cmp
dec
cmp
xor
add
fnstsw
sbb
cmc
dec
adc
lahf
or
xor
or
sti
push
jne
adc
pop
call
fistp
pop
mov
outs
and
lods
leave
inc
imul
ja
adc
cmp
xchg
dec
cmp
aam
in
pop
push
adc
leave
mov
mov
int
and
sbb
push
cdq
(bad)
or
or
rcl
out
pusha
out
popa
push
leave
and
adc
xchg
dec
cmp
or
mov
dec
(bad)
inc
push
aad
aam
mov
mov
and
push
jb
addr16
je
idiv
push
repnz
loopne
cmc
cmp
enter
mov
mov
je
and
test
mov
clc
push
cmc
sub
loope
and
mov
and
aaa
sti
add
cld
xor
xchg
rcr
cmps
push
adc
in
sbb
inc
shl
repnz
pop
ins
mov
xchg
mov
inc
(bad)
and
xchg
jp
pop
pop
xchg
jmp
cli
sar
inc
inc
shr
inc
repnz
pop
out
sbb
scas
jo
cli
xchg
xor
mov
or
(bad)
sub
mov
and
inc
test
add
and
mov
mov
in
pushf
nop
sub
shr
fisub
loop
xor
(bad)
cmc
mov
inc
mov
popf
add
push
rcl
(bad)
push
sub
movs
frstor
out
jl
idiv
mov
adc
inc
and
in
nop
test
fwait
jnp
push
sbb
lahf
add
sbb
out
int
xor
(bad)
loopne
js
div
ret
jne
mov
mov
retf
mov
mov
jne
mov
add
out
mov
mov
jl
dec
push
fnstsw
clc
scas
push
jmp
xchg
popa
mov
fisttp
bound
lods
jp
mov
pop
gs
mov
xchg
push
fisubr
ss
lock
push
inc
ret
inc
push
ret
enter
cmps
xor
cmp
mov
in
and
and
aas
lds
lods
xchg
mov
cmp
(bad)
out
or
cmp
lea
or
mov
in
sub
jae
or
xchg
xor
fmul
pop
out
bound
xchg
loope
push
lods
lods
xchg
retf
xor
fldcw
rcr
pushf
stos
ret
jnp
jl
cwde
std
xchg
test
cmp
nop
push
dec
pushf
clc
add
neg
in
in
out
sbb
xchg
pop
fwait
push
arpl
add
inc
outs
sbb
ret
fistp
int3
das
cmp
pop
ficomp
cmp
jne
loope
dec
es
mov
xor
pop
icebp
inc
sub
jbe
aaa
stos
rol
push
cwde
xchg
ss
clc
jle
mov
loop
mov
jge
fist
mov
xchg
cmp
sub
jmp
fcomip
lock
leave
js
dec
jns
jmp
test
sbb
cs
out
imul
movs
push
mov
pop
sar
sbb
mov
or
cmc
int
popa
scas
add
mov
aas
cdq
ret
fxch
bound
push
push
iret
leave
push
mov
aam
data16
nop
test
cmp
xor
sbb
cld
fisub
addr16
ret
or
mov
dec
push
xchg
pop
loopne
fst
in
in
mov
dec
out
mov
leave
cdq
inc
cli
adc
pushf
int3
pusha
stos
mov
int
jns
leave
adc
sbb
ja
add
xchg
push
xchg
jge
daa
clc
int
fidivr
inc
cdq
adc
sbb
(bad)
push
mov
iret
cmp
add
out
cdq
cmp
dec
cdq
or
inc
add
xor
fadd
xlat
repz
movs
(bad)
xor
push
xchg
dec
rcl
inc
jbe
ret
into
enter
leave
mov
vpmadcswd
aas
loop
jmp
jl
mov
outs
call
addr16
in
sbb
adc
pop
xchg
pop
call
test
sbb
movs
and
das
je
leave
push
sub
out
bound
adc
retf
xor
retf
dec
jge
push
or
imul
nop
jno
dec
test
bound
mov
(bad)
lods
mov
inc
push
stc
xor
pop
scas
fs
push
es
cli
rcr
mov
movs
xchg
xchg
rcr
(bad)
xchg
outs
fwait
cld
jo
into
adc
or
test
adc
mov
xchg
clc
jns
cmp
fdivr
adc
clc
scas
xor
jg
mov
fsub
sbb
pop
out
mov
test
add
xchg
fwait
jecxz
ret
xor
mov
mov
call
or
push
mov
or
outs
pop
or
push
xchg
jns
hlt
jl
mov
xor
add
aas
enter
mov
add
aam
xor
push
inc
sbb
or
dec
aad
bound
jecxz
fcomp
push
inc
test
lods
mov
sbb
fcom
mov
(bad)
sar
stc
mov
sbb
mov
call
es
jb
xchg
std
cdq
frstor
inc
xchg
shl
enter
in
les
das
int3
push
(bad)
inc
shr
add
jg
pop
mov
nop
add
cmp
xor
int
shl
inc
test
mov
outs
pop
test
jo
aaa
push
push
mov
push
int3
xchg
hlt
push
pop
mov
mov
enter
dec
out
loop
ss
sub
jge
(bad)
jne
out
lahf
in
jnp
pop
cmp
jg
mov
out
dec
and
fdiv
out
sub
test
or
adc
jmp
sbb
mov
or
mov
and
out
jp
call
adc
mov
inc
jg
and
ja
jmp
and
xor
jbe
adc
(bad)
or
sbb
and
shl
mov
hlt
mov
in
test
or
fisttp
dec
sbb
outs
xor
scas
mov
mov
xchg
mov
rcl
pushf
test
jl
xor
adc
cmp
enter
shr
int3
idiv
adc
mov
xchg
mov
aas
mov
inc
mov
mov
pop
out
es
cmp
retf
xor
cld
das
mov
add
jmp
mov
pusha
bound
test
popa
outs
ins
mov
fs
adc
in
mov
call
fldenv
mov
test
out
pop
inc
hlt
mov
repnz
dec
in
xlat
and
rep
imul
pop
xchg
mov
jecxz
push
out
add
inc
mov
and
mov
rcr
or
jns
mov
jp
push
ins
addr16
daa
mov
mov
ins
fcom
rcl
lds
scas
movs
test
pop
gs
les
dec
xor
in
popf
xor
add
mov
clc
mov
dec
test
aas
inc
cmp
jo
adc
pop
add
je
fisubr
les
and
ds
lods
dec
mov
xor
test
(bad)
lock
data16
jnp
cmp
movs
sub
sbb
icebp
neg
cmp
(bad)
addr16
sbb
daa
cli
adc
xchg
data16
shl
in
push
pop
jmp
and
sbb
or
sar
jmp
repz
rcl
or
xchg
xchg
jnp
dec
push
xor
mov
xor
mov
sub
sbb
and
sbb
push
gs
jmp
in
xchg
xchg
mov
sub
adc
xchg
aad
popf
xchg
xor
js
pushf
retf
mov
shr
repnz
bound
or
sbb
push
out
inc
xchg
mov
(bad)
sbb
ret
stos
sbb
loop
ins
out
movs
adc
cdq
out
push
adc
push
jae
inc
push
push
add
clc
call
or
cmp
add
aad
sbb
xchg
fdivr
fild
fsubr
lea
js
add
cld
pushf
stos
pusha
outs
ss
inc
inc
fst
adc
pop
imul
push
int
ficom
aas
pop
add
sbb
mov
lds
sub
movs
mov
cmp
mov
fcomp
frstor
jmp
enter
or
bound
xchg
shl
popf
mov
stos
cmp
jg
xchg
pop
xchg
js
mov
jge
std
mov
cmps
mov
and
cmp
enter
pop
clc
cmp
push
cmp
rcl
xchg
aam
std
shr
and
adc
xor
(bad)
lea
xor
mov
cmc
sbb
adc
push
xchg
or
push
adc
xlat
in
fcomp
push
jmp
(bad)
dec
test
xor
xchg
inc
xor
outs
inc
push
jl
das
retf
dec
call
mov
xchg
out
xchg
in
jp
aad
(bad)
mov
and
sub
(bad)
and
push
pop
inc
cmps
add
push
or
cmp
mov
jge
push
shr
adc
jmp
outs
jno
mov
xor
mov
fwait
scas
dec
fidivr
jns
jo
rcl
mov
in
sti
push
mov
or
sub
ret
pop
xchg
dec
pop
aas
iret
mul
jecxz
sub
add
xchg
cdq
int3
pop
fcmovnbe
fdiv
mov
and
add
es
imul
mov
add
adc
ins
xor
les
jne
fs
stos
xor
(bad)
or
jg
imul
or
daa
call
pop
cs
pushf
test
adc
stos
mov
pusha
cld
inc
ret
mov
sub
xchg
mov
data16
clc
daa
sub
loopne
les
fisttp
aas
stc
adc
sub
xchg
adc
or
pushf
call
pop
fisub
sbb
mov
sbb
pop
push
mov
cmps
mov
jg
xchg
dec
push
mov
xchg
imul
pop
movs
std
(bad)
xchg
mov
in
or
mov
mov
lds
nop
cmp
and
sahf
xor
adc
jnp
lods
scas
(bad)
mov
pop
scas
jae
rcl
sbb
ss
cmp
shr
sbb
sub
dec
mov
jl
call
popa
retf
push
std
inc
dec
movs
test
test
xchg
sub
sbb
pusha
in
or
pop
push
loop
push
cmps
sti
sub
mov
mov
or
mov
cmp
fsub
sar
cdq
jge
and
loope
test
jp
and
dec
or
out
(bad)
cli
fadd
xchg
fmul
inc
out
cdq
gs
jae
dec
out
add
call
mov
push
ins
sub
cmp
add
jge
cwde
test
sub
push
adc
mov
setbe
in
sub
movs
inc
mov
sahf
push
out
ja
mov
jg
daa
enter
push
inc
ins
ds
daa
cmc
test
xor
mov
pop
hlt
test
test
pop
(bad)
sub
(bad)
cmp
xlat
sti
shl
xchg
push
retf
push
sub
mov
mov
mov
and
jp
mov
jb
mov
add
stos
sub
mov
sbb
add
xor
ins
or
icebp
jle
fsub
sub
pop
mov
push
(bad)
lds
loopne
leave
call
pop
xchg
fdivp
nop
outs
ins
mov
test
mov
mov
dec
mov
stos
out
add
retf
les
data16
fmul
sbb
pop
pop
data16
cmp
xchg
std
rol
retf
xor
add
sbb
pop
int3
fdivr
in
out
inc
outs
mov
adc
mov
ins
jmp
retf
(bad)
jb
jmp
shl
mov
add
lods
or
sti
idiv
xchg
or
rcl
push
mov
ret
mov
xor
aam
ror
fs
jecxz
dec
push
sub
pop
xor
rcl
pop
xchg
push
inc
xchg
cmc
xor
lods
xor
cdq
arpl
movs
sbb
mov
jb
fcomp
sti
pop
inc
sub
ret
jno
push
js
cs
stos
lods
add
mov
sub
xchg
movs
lock
outs
retf
sbb
push
retf
bound
sub
pop
pop
sbb
cwde
ja
shr
dec
mov
push
mov
sbb
sbb
mov
push
mov
inc
mov
add
mov
dec
mov
xor
data16
out
adc
lds
sub
dec
fcos
call
sub
mov
hlt
jl
loop
(bad)
outs
out
inc
imul
ret
sti
jl
xlat
aas
adc
jbe
xlat
sbb
mov
and
inc
pop
int3
cld
jecxz
mov
mov
mov
sbb
fbstp
push
jecxz
push
pushf
sbb
div
xchg
jge
rcr
out
mov
push
or
push
hlt
aaa
popa
push
leave
mov
std
xchg
shl
xlat
(bad)
cmps
aaa
mov
dec
test
mov
int
add
sbb
pop
mov
call
aad
and
pop
cmp
pop
xor
data16
and
inc
es
addr16
sub
dec
into
js
ins
out
mov
cli
mov
sahf
xor
inc
int3
mov
jo
mov
vminsd
dec
xor
inc
fs
loop
rep
stos
pop
cld
int
mov
call
fnsave
and
shl
call
fucomi
outs
sub
fsubp
lea
add
pop
add
xor
push
in
lock
enter
retf
scas
cwde
aad
sub
das
sbb
(bad)
(bad)
fwait
clc
sub
fsub
call
int3
(bad)
or
push
mov
icebp
pop
xchg
lea
xor
(bad)
stos
mov
shl
in
pop
popa
dec
jle
(bad)
mov
mov
(bad)
xchg
sub
pushf
cli
repz
adc
(bad)
(bad)
bound
mov
fstp
mov
lods
shl
cmps
pop
in
fcmove
lods
pop
cmp
sar
adc
ficom
retf
push
out
ja
or
add
mov
push
mov
inc
xchg
out
inc
(bad)
mov
fcomp
pop
fild
hlt
cli
push
jne
sub
iret
push
je
xor
and
ds
cwde
xchg
(bad)
je
ja
sub
(bad)
sar
inc
and
lock
and
jo
and
lahf
into
inc
xor
mov
stos
push
popf
and
scas
sub
ja
ficom
addr16
pop
aad
hlt
sub
shr
xor
jp
dec
daa
mov
(bad)
out
cmp
mov
adc
dec
push
cmp
mov
sub
mov
scas
loop
pop
gs
(bad)
mov
inc
xchg
push
jo
dec
mov
mov
add
icebp
inc
ror
dec
cmc
sbb
ss
icebp
push
popa
pop
sub
jno
push
sbb
jns
mov
adc
adc
je
mov
inc
je
and
sti
push
xor
sti
pop
es
frstor
mov
sar
adc
mov
dec
add
pop
pop
cdq
daa
ss
mov
pop
cmp
test
push
ret
imul
aas
gs
mov
cmc
arpl
inc
clc
adc
outs
mov
fstp
mov
jl
enter
call
sub
push
inc
loop
mov
pusha
aaa
iret
mov
dec
sbb
pop
out
lds
dec
xor
jle
popa
xchg
stos
mov
jmp
mov
mov
cwde
push
cld
mov
movs
adc
mov
in
mov
adc
repnz
sbb
dec
mov
dec
dec
sahf
dec
iret
push
ret
sub
int3
jno
lea
imul
in
fwait
nop
dec
pop
push
xchg
pop
jne
xchg
into
or
retf
iret
xlat
pop
mov
cmp
mov
test
jge
mov
std
pop
popa
cmp
call
dec
ins
out
pushf
adc
or
ins
adc
dec
pop
pop
or
inc
cdq
pop
ror
pop
inc
iret
test
push
mov
jb
cmp
les
adc
dec
mov
push
lods
mov
cwde
bound
sahf
add
push
push
sbb
iret
add
cmp
sbb
(bad)
int
mov
push
sbb
inc
gs
adc
in
or
sbb
mov
cs
push
cs
mov
xor
iret
icebp
loope
jb
gs
pop
stc
xor
push
test
xchg
xchg
mov
mov
adc
lds
pop
(bad)
shl
jno
pop
push
push
jg
cdq
dec
push
lods
cmps
outs
mov
(bad)
call
(bad)
popa
inc
add
imul
retf
and
mov
repnz
mov
sub
jno
mov
sbb
add
dec
inc
pop
push
test
lods
adc
or
or
jmp
add
push
sub
push
cmc
pop
xor
les
(bad)
imul
sub
imul
jge
push
jmp
cmp
mov
dec
inc
clc
fptan
imul
jno
add
js
adc
popf
inc
scas
aaa
jmp
or
pushf
xlat
inc
inc
shr
mov
mov
add
mov
mov
cmp
sahf
add
pop
loopne
stos
sbb
shl
call
loopne
sub
outs
cmps
push
mov
ss
popf
pop
pop
test
xchg
cmp
pushf
cld
add
push
add
inc
inc
or
push
add
push
sbb
mov
inc
scas
imul
dec
out
inc
dec
je
shl
jge
add
mov
enter
jg
iret
(bad)
lods
loop
shr
mov
cs
adc
test
mov
and
xor
into
aas
movs
push
(bad)
xchg
xor
xchg
ret
shr
cli
call
cmp
sbb
sub
add
aaa
les
xlat
inc
push
and
scas
imul
hlt
call
rcr
jo
stos
mov
in
and
(bad)
jo
out
sub
push
cmp
test
jg
fistp
in
shl
xor
test
jmp
test
cmp
mov
js
push
ins
add
test
sbb
push
scas
dec
and
xor
mov
retf
test
out
push
mov
and
pop
cmp
mov
cld
hlt
(bad)
sub
sub
or
test
lahf
idiv
out
out
sub
inc
jnp
inc
(bad)
mov
xor
and
fst
aas
cld
rcl
xor
jnp
pop
cmp
cmp
xchg
inc
shl
sbb
adc
push
leave
cmp
fnstsw
rol
ins
popf
dec
dec
div
jo
fucomp
adc
iret
inc
repz
mov
js
jo
sub
lods
int
out
pop
fstp
cmp
retf
loope
loope
jmp
push
push
or
or
mov
scas
hlt
(bad)
sar
mov
jb
push
sbb
gs
lds
mov
test
jge
(bad)
mov
push
int3
(bad)
fwait
xor
mov
jg
leave
mov
or
mov
lods
stos
push
push
out
das
dec
and
je
mov
pop
fyl2x
mov
push
test
cli
mov
shr
pop
add
push
adc
xchg
adc
push
aad
fwait
mov
inc
lahf
imul
inc
push
imul
cmp
jo
dec
out
sbb
stc
sti
test
cmc
lods
mov
fstp
ja
popf
push
cmp
sti
cmp
test
fld
jle
stc
mov
xor
cwde
xchg
outs
(bad)
jb
and
pop
sbb
imul
fs
(bad)
out
cmps
push
xchg
aad
sbb
fild
das
icebp
sub
movs
call
in
sbb
mov
in
mov
xor
sub
call
mov
dec
shr
test
cmc
jnp
inc
clc
stos
jmp
xchg
inc
xlat
sub
rcl
push
fs
test
sub
mul
ins
lods
pusha
rcr
les
int
fucom
cmps
lea
idiv
mov
sbb
icebp
pop
or
sub
dec
xchg
mov
lahf
add
mov
dec
xchg
dec
sbb
jne
push
or
push
fs
int3
jb
mov
cs
ret
dec
ins
pop
cmp
cli
fcmovbe
or
sub
push
shl
test
mov
adc
pop
xchg
or
je
test
push
inc
cwde
mov
stos
xlat
cmp
ins
sti
movs
mov
je
mov
fwait
adc
and
pop
pop
mov
pop
jp
sub
(bad)
jecxz
push
cmp
ja
addr16
in
out
ret
sbb
xor
sub
stos
add
or
paddsb
call
mov
lea
inc
push
jmp
pop
test
xor
movs
dec
test
movs
(bad)
jae
xchg
int
pop
addr16
je
adc
pop
xchg
test
cmp
cmc
fld
xor
mov
pop
sbb
iret
in
push
push
ret
adc
into
jl
pop
mov
push
cmp
pop
and
loop
inc
imul
aad
jp
imul
or
cmc
cmp
inc
nop
pusha
lds
in
fwait
stos
leave
inc
xchg
sbb
sbb
int
addr16
xor
mov
xchg
hlt
mov
lea
imul
push
xor
dec
mov
daa
sbb
daa
out
xor
xchg
shr
sti
fadd
jmp
add
les
sbb
(bad)
xlat
pop
daa
cmp
cmp
aam
jb
dec
jb
popf
mov
cmp
lods
mov
out
scas
ja
pop
add
gs
fimul
test
cmp
adc
sub
sbb
mov
popfw
inc
xchg
test
or
push
test
rol
xor
inc
cmp
(bad)
fsubr
cmp
or
cdq
mov
stc
lds
fmulp
mov
aam
and
iret
cwde
mov
add
push
std
jle
cmps
(bad)
fwait
dec
out
add
clc
or
rcl
ret
out
sbb
pop
and
xchg
loope
push
inc
and
lahf
and
and
daa
cmp
sbb
mov
mov
jno
push
or
aas
cmp
retf
sub
mov
xchg
jmp
and
add
xchg
jne
push
pusha
int3
xchg
xor
test
loopne
daa
cs
data16
loopne
push
ss
pop
dec
add
inc
push
jmp
fbld
cmp
jmp
outs
xor
push
sub
mov
jb
push
aas
test
mov
mov
(bad)
iret
shl
xor
or
adc
sbb
inc
aas
xchg
in
pop
jbe
das
dec
xchg
sbb
xor
enter
sbb
dec
sti
leave
aas
xchg
sbb
push
pop
mov
ja
bound
in
dec
lods
jge
mov
push
subps
xchg
fmul
repnz
cmp
je
and
test
dec
inc
fnsave
add
mov
mov
cdq
dec
out
xchg
xor
js
mov
shr
push
mov
push
sub
out
out
sbb
pop
ret
test
add
idiv
sbb
sub
pop
ss
cmp
jnp
or
push
mov
popa
pusha
adc
dec
dec
mov
dec
enter
dec
xchg
mov
int3
mov
cmp
pop
enter
jb
cmp
push
mov
cmp
aas
add
rol
imul
xchg
mov
dec
sti
and
addr16
and
push
loope
mov
loope
sbb
push
xchg
adc
inc
adc
popf
or
cmps
in
or
mov
loope
dec
(bad)
push
inc
xchg
sub
repnz
pop
inc
mov
jnp
or
ret
arpl
mov
cmp
into
sahf
jg
mov
jg
arpl
jg
dec
dec
addr16
cmps
mov
adc
sbb
(bad)
hlt
add
nop
lea
es
stos
sub
repnz
jae
push
fwait
dec
push
pop
retf
int
jae
stc
sub
inc
mov
cmps
pop
pop
(bad)
mov
add
shl
(bad)
and
and
out
push
mov
push
pop
call
push
out
fld
jecxz
xor
jns
ss
outs
je
add
pop
sbb
cld
out
outs
ficomp
xlat
mov
fmul
inc
test
outs
mov
sbb
adc
and
(bad)
js
in
loop
setp
push
xlat
in
sahf
inc
mov
hlt
cmps
retf
lock
sahf
cld
jnp
pop
mov
mov
mov
je
ins
xor
mov
out
sbb
or
fdivr
xchg
inc
xlat
repz
or
cwde
in
mov
dec
jge
pop
pop
inc
push
loopne
xor
adc
in
lahf
gs
or
(bad)
fs
xchg
(bad)
movs
in
sub
mov
mov
test
cmp
mov
cmp
mov
inc
rcr
movs
in
mov
popa
xchg
ficomp
sub
mov
mov
pop
jl
xlat
test
sbb
dec
xor
jge
cld
dec
test
in
hlt
loop
gs
xor
in
nop
fist
mov
sbb
jb
pop
scas
es
ins
xor
jp
retf
cmps
idiv
or
addr16
xor
dec
je
jb
popa
clc
mov
add
xchg
dec
cs
xlat
jge
adc
push
xor
icebp
jo
imul
(bad)
or
stc
int
enter
loopne
pop
aad
dec
scas
jno
or
jmp
sbb
fstp
icebp
pop
sub
lds
sti
xchg
repz
mov
xor
adc
arpl
cmp
dec
lods
in
pop
inc
cs
cli
push
xor
mov
cmps
stc
aas
inc
ins
adc
fs
mov
out
pop
push
mov
adc
sbb
lahf
add
mov
inc
xchg
movs
jnp
add
std
rcl
sub
xchg
mov
es
sbb
xor
jno
iret
mov
loop
mov
push
xchg
xor
repnz
lods
enter
in
inc
xchg
push
push
loop
mov
add
cmp
sbb
aam
cmp
sub
mov
nop
mov
test
inc
mov
jle
jnp
loopne
je
shl
cmc
ja
push
ret
(bad)
fldpi
or
stos
(bad)
sub
push
(bad)
int3
dec
mov
out
jae
jl
aas
push
cmp
pop
sub
call
mov
lods
mov
jg
push
xchg
cmp
add
add
leave
(bad)
mov
mov
stos
(bad)
push
int3
adc
sbb
outs
imul
sub
adc
stc
test
fcmovu
mov
les
cmps
mov
xchg
dec
inc
mov
sti
ins
mov
pop
mov
cmp
sbb
out
cmp
xor
mov
mov
xor
jmp
xchg
mov
or
push
xchg
push
ss
dec
out
dec
pop
in
scas
repnz
xchg
outs
test
jge
ds
cmp
sbb
or
mov
stc
es
sbb
jns
cmp
popf
mov
push
sub
mov
call
cmp
sub
popf
sbb
push
mov
movlps
scas
cwde
sar
push
xor
nop
cmp
fistp
bound
cmp
movs
or
jnp
lods
test
(bad)
in
mov
cs
fist
dec
shl
lods
sti
dec
pop
out
cmps
cmp
push
mov
mov
in
fucomip
les
mov
push
fs
je
push
mov
pop
sbb
aaa
xchg
lods
cwde
pop
lods
mov
aad
ffreep
sub
mov
dec
inc
inc
mov
pop
dec
lds
mov
push
daa
pushf
popf
outs
lea
xchg
mov
cmc
out
add
push
fwait
xor
jg
das
pop
and
sub
or
sbb
ss
mov
jae
mov
enter
jbe
mov
call
std
pop
js
into
add
sub
adc
mov
pop
movs
inc
add
add
test
xchg
cmp
shr
into
cdq
and
dec
(bad)
lds
sbb
lahf
movs
adc
cmp
mov
aas
gs
jns
leave
js
std
aam
in
mul
or
aaa
xchg
fnsave
scas
test
dec
and
and
xchg
dec
sti
push
pop
sbb
sbb
sti
xor
ror
inc
icebp
pusha
test
push
imul
inc
cmc
xlat
lahf
fisttp
and
sahf
push
pop
dec
cwde
ror
mov
push
dec
(bad)
cmp
imul
and
add
dec
dec
lahf
push
nop
pop
dec
les
popf
adc
rcr
add
push
cmp
fisttp
inc
jno
mov
ins
repz
call
dec
fs
in
push
dec
xchg
retf
mov
or
in
test
push
call
push
jl
repz
mov
pop
xchg
lea
xlat
push
mov
in
ror
xor
data16
in
push
mov
mov
sbb
clc
pop
fst
int3
jmp
dec
outs
shl
ds
jae
jae
call
arpl
cli
es
xchg
jns
mov
sub
push
bound
daa
and
mov
sub
mov
and
and
lea
aas
repz
mov
xchg
movs
jno
clc
mov
sbb
push
adc
xchg
push
fdiv
into
int3
hlt
(bad)
hlt
imul
mov
adc
ds
loopne
sub
jl
in
mov
in
xchg
adc
and
cmp
push
dec
jecxz
nop/reserved
neg
sub
jl
xor
in
push
mov
add
cmp
mov
pop
(bad)
mov
jmp
(bad)
xchg
inc
push
adc
push
cmp
iret
mov
inc
ret
call
shl
shl
daa
xlat
frstor
cmc
retf
lahf
cdq
sbb
popf
arpl
pusha
sbb
add
and
int
pop
adc
mov
arpl
jge
cmp
push
add
push
pop
bound
jl
cmp
xor
fsubr
pushf
and
(bad)
ja
mov
frstor
lock
or
jg
in
inc
movs
addr16
push
in
pop
inc
popf
adc
fisubr
mov
xchg
lods
in
xchg
or
lds
cmc
mov
mov
cdq
push
mov
out
call
es
ret
xchg
(bad)
fidivr
mov
(bad)
lahf
lods
jno
pop
xchg
push
xchg
(bad)
jecxz
xor
push
push
jmp
or
sbb
add
push
push
xor
ret
rcr
push
int3
push
jns
dec
sub
test
daa
inc
scas
adc
sbb
loope
arpl
pop
icebp
or
repz
(bad)
push
stos
pusha
mov
sub
jbe
imul
stos
out
movs
pusha
jne
fs
daa
(bad)
push
mov
fwait
sub
sub
shr
jmp
jnp
sub
es
xor
and
push
mov
outs
pop
and
aas
jno
sbb
(bad)
or
dec
mov
retw
outs
imul
rcr
int
(bad)
mov
fsubr
or
ss
aad
ror
push
mov
daa
jb
ins
jae
adc
daa
sbb
mov
pop
mov
jl
adc
mov
mov
sbb
ret
scas
pop
out
aad
jae
pop
push
mov
mul
ins
out
adc
pusha
push
scas
sub
mov
xor
xchg
push
pop
fild
out
push
mov
into
and
dec
pop
add
cli
push
cld
mov
stc
push
test
adc
shl
test
test
fadd
sub
and
add
lods
setae
pop
dec
mov
out
xchg
popf
pop
arpl
sbb
(bad)
push
ins
push
int
add
(bad)
jle
shl
add
mov
push
push
cmp
add
jle
jne
inc
push
jns
icebp
mov
add
sbb
je
ins
(bad)
mov
loopne
movs
aaa
sahf
xor
mov
enter
mov
fwait
test
add
fs
jecxz
ficomp
mov
mov
repnz
fld
sub
out
and
(bad)
sub
test
xor
dec
xchg
cwde
mov
fld
sbb
sahf
jno
or
dec
jge
out
adc
sub
adc
or
out
adc
mov
jmp
lahf
mov
pop
or
jecxz
dec
mov
fnstenv
dec
(bad)
(bad)
jle
inc
sub
test
xlat
adc
fcom
xchg
jb
into
stos
enter
push
dec
push
xor
mov
cmp
cs
add
jl
xlat
mov
sti
ins
test
fiadd
stc
fadd
iret
shl
add
mov
dec
fcom
clc
adc
push
ret
add
repnz
push
cmp
inc
mov
adc
and
aad
sbb
ja
push
cmp
mov
lds
mov
jmp
mov
sub
mov
jo
dec
jge
push
repz
sahf
mov
fcom
outs
jge
add
imul
cmp
leave
clc
arpl
imul
mov
sbb
ds
mov
movs
or
hlt
movs
jbe
loop
push
jecxz
arpl
mov
shl
mov
xchg
fisttp
cwde
pop
dec
test
xchg
jge
xchg
pop
pop
cmp
jmp
ds
icebp
fcmovu
jo
(bad)
aam
mov
pop
adc
aad
(bad)
loop
mov
or
nop
sbb
sbb
outs
popf
mul
pusha
mov
fld
in
pop
mov
inc
inc
(bad)
inc
mov
je
stos
popa
fs
mov
xchg
hlt
sbb
into
les
push
cmp
xor
pop
fnstenv
into
jb
bound
push
jmp
retf
hlt
aam
fisubr
cmc
aad
in
sbb
sub
ss
leave
push
out
pop
addr16
in
mov
sar
jecxz
mov
push
(bad)
pop
loopne
mov
ret
sub
pop
push
cmc
std
mov
sbb
(bad)
stc
out
mov
xor
mov
push
mov
push
push
lds
fidivr
mov
pop
lock
loope
jmp
push
out
inc
mov
test
jecxz
into
push
lock
xchg
push
out
pop
retf
retf
cmp
mov
sbb
pop
rcl
loopne
mov
stos
stos
leave
cli
adc
dec
fimul
sub
sbb
and
das
outs
pop
sbb
test
inc
jle
mov
inc
mov
add
neg
sub
scas
fidiv
pop
fst
iret
ficomp
adc
mov
adc
outs
jo
aaa
adc
sub
call
imul
sahf
inc
fist
xor
adc
push
jbe
sti
movs
inc
out
aad
sar
call
rol
cwde
dec
inc
nop
shr
pop
dec
jge
js
not
lahf
mov
sub
cmp
clc
mov
sbb
jmp
adc
mov
jb
retf
loope
arpl
shr
dec
out
(bad)
sar
in
(bad)
mov
stos
loopne
mov
std
xor
stos
sti
icebp
add
enter
jge
or
test
and
xchg
pop
pop
fbld
inc
test
(bad)
ret
adc
jne
push
push
mov
mov
sub
xchg
pop
adc
adc
or
test
ret
sbb
dec
sbb
jp
aaa
xchg
mov
xchg
sbb
or
sar
jae
and
loopne
dec
sahf
xchg
scas
sbb
and
das
(bad)
adc
pop
out
popa
ror
sub
arpl
mov
fbstp
mov
add
fsub
ins
into
xchg
retf
xchg
push
imul
xchg
mov
loope
es
test
add
mov
and
cmp
fs
mov
mov
cmp
nop
add
into
lods
outs
mov
in
retf
iret
xor
lock
es
xchg
dec
jmp
movs
stc
and
dec
ins
sub
pop
cmp
lahf
mov
repz
jecxz
adc
lods
gs
lea
mov
(bad)
fild
xor
sub
movs
and
jl
repz
lods
push
in
rol
pop
or
nop
fwait
fwait
loop
jns
ss
into
or
call
fcom
dec
pushf
push
or
add
sbb
test
sti
pop
test
mov
sub
loope
jb
not
arpl
add
lahf
imul
sub
frstor
sub
(bad)
inc
pop
xchg
sub
pop
xchg
mov
mov
pop
imul
mov
add
sbb
cdq
sbb
daa
mov
and
fld
sahf
pop
movs
test
mov
fidiv
int
mov
jns
push
ins
dec
scas
adc
push
out
cmc
mov
dec
push
jnp
inc
inc
loop
pop
mov
inc
cmp
jns
fldenv
add
and
jmp
(bad)
in
ret
int
xchg
or
(bad)
jle
dec
push
mov
jo
call
push
in
push
or
jmp
mov
sbb
in
sub
out
outs
ja
mov
(bad)
push
in
je
jge
xchg
sub
mov
out
mov
movs
or
lds
mov
lahf
int3
xor
or
popa
out
aaa
jns
push
push
(bad)
or
push
mov
jo
(bad)
add
loop
mov
and
jb
ins
inc
xchg
or
push
jnp
je
aad
mov
lds
add
cmp
dec
mov
sub
dec
adc
and
and
lds
aad
mov
fwait
les
pextrw
add
xor
shl
popa
fstp
shl
bound
ja
outs
dec
xchg
js
or
and
int3
sbb
imul
jmp
pop
mov
push
dec
adc
xor
sbb
xchg
mov
lea
int
(bad)
or
pop
scas
adc
mov
jecxz
outs
cmps
jecxz
loop
lock
out
out
ret
sub
shr
dec
jno
jecxz
push
mov
out
mov
sub
xchg
movs
call
xor
mov
adc
aaa
mov
fwait
xlat
mov
dec
inc
cmp
fiadd
sub
jmp
ja
mov
jp
aam
inc
jp
dec
mov
outs
iret
mov
outs
scas
jb
adc
and
out
test
(bad)
movs
and
outs
lock
mov
dec
aad
or
add
daa
shl
stos
pop
cld
jmp
add
mov
dec
xlat
mov
xor
aas
jecxz
je
lds
scas
and
aad
imul
jp
jecxz
retf
test
adc
pop
cli
push
fld
sbb
push
sbb
push
in
mov
xchg
and
cs
push
xchg
retf
jl
sahf
fisttp
sbb
in
and
scas
cmp
xchg
repnz
fs
mov
in
jmp
jnp
out
pop
pop
cdq
push
enter
cdq
pushf
dec
or
lock
mov
(bad)
stc
xor
push
pop
shl
pop
shl
mov
cli
sbb
mov
inc
(bad)
inc
mov
fild
mov
xchg
pop
or
outs
and
test
pop
stos
cmps
mov
adc
jmp
mov
js
mov
dec
popf
ror
loop
or
test
adc
cld
cmp
add
(bad)
retf
cmp
aaa
mov
xchg
push
test
xor
arpl
(bad)
repnz
mov
movs
cmp
gs
cdq
fdivr
sub
push
mov
mov
jle
imul
mov
jmp
pop
xor
gs
mov
inc
dec
push
sbb
mov
or
test
xchg
fs
xchg
aaa
lea
test
jmp
mov
xchg
mov
ror
xchg
pushf
xor
mov
push
sbb
pop
movs
imul
jae
not
scas
mov
mov
and
inc
and
dec
xchg
and
mov
jecxz
xor
mov
aad
add
jle
inc
into
and
cld
leave
gs
fisubr
pop
xchg
xchg
cmps
imul
(bad)
or
cmp
xchg
push
xor
jge
loop
popf
mov
repnz
xor
ror
icebp
stc
in
sub
vpshaw
jmp
xlat
jmp
xchg
xchg
jg
addr16
pop
pop
and
out
addr16
movs
fistp
out
loope
out
add
sub
jne
sbb
sahf
xor
(bad)
cmps
mov
sub
xchg
loop
mov
mov
lds
in
outs
(bad)
cmp
mov
stc
mov
nop
test
outs
mov
pushf
fst
cs
cs
cli
aad
in
cmps
clc
inc
or
push
push
inc
ret
aam
cld
jo
shl
dec
dec
daa
outs
add
test
mov
pop
cmps
addr16
mov
imul
inc
and
xchg
test
jne
jmp
jno
mov
mov
in
xchg
mov
xor
neg
aas
inc
inc
outs
add
push
mov
push
mov
shr
out
inc
stos
push
mov
je
rcr
push
add
cld
hlt
test
mov
and
das
ss
cld
jne
and
mov
in
scas
cmps
mov
lahf
jl
xlat
xor
fwait
lock
out
or
add
(bad)
xor
(bad)
mov
mov
sahf
pop
mov
or
jg
aaa
fcomp
mov
(bad)
ja
mov
nop
mov
add
and
jmp
popa
(bad)
mov
inc
sti
jg
sar
cmp
cmp
cmp
mov
adc
mov
lods
or
lods
loope
mov
out
cmp
cmps
iret
xchg
add
je
add
cwde
push
fst
add
mov
pop
iret
pop
or
push
out
sti
sbb
dec
push
scas
add
adc
cmp
ficom
loop
adc
ds
pop
adc
sbb
call
push
jns
push
shr
push
push
jle
out
out
scas
mov
mov
rol
iret
jmp
mov
ret
mov
and
push
mov
mov
inc
mov
jmp
sub
mov
clc
fimul
push
or
aam
cmp
xchg
stos
(bad)
mov
scas
jl
jne
int3
mov
rol
inc
adc
xchg
ret
add
pusha
rcl
not
ins
pushf
int
ds
retf
sbb
cmps
sbb
test
retf
stos
lods
add
push
dec
cmp
push
and
inc
bound
cmp
scas
mov
je
aam
jg
mov
cmps
out
aam
jae
and
imul
cmp
add
data16
test
push
fs
cwde
ret
mov
cmp
or
dec
fnstsw
pop
das
mov
push
mov
fist
mov
popa
(bad)
jae
cmp
in
fs
out
mov
add
push
or
outs
dec
cmps
mov
sbb
ficomp
jae
push
cmp
jle
(bad)
in
loopne
popa
or
sbb
inc
jno
cli
arpl
cs
mov
sbb
pusha
mov
pop
fisub
outs
add
adc
imul
sub
inc
jmp
cmp
jle
cmc
scas
dec
in
imul
in
popa
(bad)
or
retf
push
mov
inc
sbb
mov
adc
je
(bad)
xchg
and
or
sbb
and
xor
call
aas
pop
mov
inc
mov
dec
mov
enter
or
add
(bad)
cli
push
push
add
mov
loopne
cmp
pop
hlt
test
add
or
(bad)
cmc
mov
pop
shl
or
mov
pop
js
stc
push
popa
or
in
push
loopne
into
mov
fidivr
pop
mov
push
aas
inc
xor
aas
or
pop
add
cmp
mov
mov
push
fbld
into
aad
mov
dec
faddp
inc
pop
int
mov
mov
in
inc
xor
jo
aas
bound
mov
test
popf
sbb
fisubr
dec
fadd
rol
lahf
jb
sbb
sbb
sub
adc
mov
mov
(bad)
inc
xchg
mov
adc
inc
ins
fs
push
and
jne
sahf
inc
and
mov
(bad)
adc
cmp
rol
repnz
adc
push
mov
mov
hlt
adc
xor
icebp
jmp
inc
mov
xchg
lds
outs
dec
mov
xor
mov
add
adc
xchg
push
lahf
xchg
cmp
sub
pop
cdq
into
aaa
(bad)
cmp
es
test
mov
inc
push
popa
push
fwait
loope
xchg
xchg
mov
sub
sbb
fs
sub
mov
pop
mov
mov
mov
jge
test
sbb
sahf
int3
es
ins
mov
(bad)
mov
mov
sar
push
sbb
ja
fstp
sbb
mov
out
push
sub
adc
push
dec
cmp
fdivr
or
or
jns
add
jb
sbb
lahf
movs
sar
je
xlat
es
mov
addr16
stos
ins
stc
or
push
mov
mov
(bad)
lods
ds
sti
ins
dec
fild
imul
mov
xchg
ficomp
push
popf
scas
scas
cs
mov
push
in
sub
retf
adc
sub
cli
cs
xchg
xor
das
jb
add
into
mov
lahf
repnz
or
iret
sar
dec
je
aaa
adc
js
xchg
push
dec
and
cmp
adc
xchg
out
mov
mov
dec
outs
mov
int3
ins
and
loopne
inc
add
sub
fdiv
lock
add
out
inc
xchg
dec
gs
(bad)
fcom
mov
mov
in
fwait
ja
and
inc
xor
scas
sbb
pop
pop
add
push
(bad)
mov
test
repz
movs
lds
aas
in
push
cwde
jns
and
ja
stos
and
inc
xor
mov
inc
push
rcr
icebp
inc
inc
jmp
mov
sbb
mov
jge
loop
out
enter
aaa
xchg
daa
sbb
mov
pop
stos
ret
call
arpl
or
cmp
outs
test
inc
sbb
rcr
cmp
xchg
call
lahf
not
or
leave
std
mov
jg
enter
dec
pop
or
cmps
pusha
aad
jo
xchg
sar
dec
adc
scas
cli
inc
xchg
dec
inc
mov
push
mov
jecxz
ret
iret
mov
fsubr
xchg
pusha
push
xor
mov
xchg
inc
mov
add
je
movs
xchg
xchg
inc
mov
xchg
ja
pop
xchg
popa
mov
cld
fcmovne
jle
push
ficom
jle
mov
push
jb
loopne
adc
out
xchg
sub
xchg
cmp
outs
sub
mov
jl
loopne
cmp
and
or
dec
xchg
outs
fnstsw
iret
ss
inc
push
mov
retf
dec
xor
sub
inc
inc
add
cmc
pop
adc
sub
test
inc
mov
add
mov
(bad)
nop
ja
mov
pop
xor
lods
inc
sbb
jnp
ret
outs
ret
daa
out
fldenv
push
pop
popf
(bad)
movs
call
aas
aas
sbb
xchg
lods
enter
iret
dec
and
daa
xor
nop
mov
jmp
stos
iret
daa
mov
jge
cmp
stos
inc
dec
enter
dec
in
sti
shr
cmp
jecxz
mov
push
mov
(bad)
pop
jo
add
mov
mov
pop
and
stos
mov
xor
lea
lods
fs
je
lahf
imul
mov
je
lds
or
cmps
popf
pop
in
pop
ror
pop
add
push
movs
int3
or
scas
inc
dec
outs
mov
xchg
enter
dec
dec
loope
ja
xor
pop
lahf
sub
repz
ds
cli
dec
lock
pushf
xchg
add
add
sub
inc
repz
test
add
sbb
inc
cld
dec
inc
cwde
data16
or
pop
sbb
(bad)
dec
or
inc
sub
or
rcr
xchg
sar
xor
mov
dec
rcl
scas
mov
cmps
inc
or
shl
or
retf
dec
iret
sbb
sub
outs
mov
cld
int3
movs
movs
nop
jae
sub
iret
pop
mov
fnstsw
xor
and
cmp
popf
xchg
ss
jle
or
stc
add
pop
mov
add
lds
outs
adc
mov
sbb
fstp
jns
test
pop
xlat
and
push
loopne
inc
retf
sub
jle
pop
(bad)
jnp
gs
shl
lds
add
out
ror
push
push
add
gs
mov
push
ds
aad
xor
in
or
aaa
sub
nop
adc
clc
push
jmp
pop
mov
xor
xor
jmp
or
push
vunpckhpd
ins
jmp
out
(bad)
fdiv
shl
out
cld
out
rcl
int
fisttp
cmps
inc
or
pusha
popa
pop
dec
dec
ret
(bad)
push
mov
mov
xor
add
dec
stos
pusha
pop
dec
adc
stos
int3
fdiv
mov
out
push
mov
cmp
adc
ja
into
es
add
rol
jl
(bad)
and
xchg
sbb
in
mov
aaa
and
adc
and
movs
nop
lds
out
xchg
inc
and
iret
cmp
mov
aad
push
cmp
out
ins
sub
xchg
jecxz
xor
(bad)
pushf
mov
add
inc
daa
sbb
out
popa
nop
test
push
pop
out
test
mov
imul
mov
or
out
dec
xchg
popf
lods
pop
(bad)
pusha
pop
mov
mov
dec
ret
int3
xchg
mov
loope
xadd
inc
test
js
xor
aaa
mov
lea
jae
cmp
jecxz
enter
inc
xchg
jl
popf
lods
push
jnp
sti
fimul
sub
jmp
xlat
or
mov
pop
push
fwait
sbb
sbb
int3
mov
loop
mov
xchg
mov
jl
arpl
ss
jg
js
inc
and
fwait
into
neg
and
std
lods
shl
shr
jbe
mov
icebp
pop
(bad)
aad
sub
neg
rol
dec
pop
mov
out
and
xor
adc
inc
(bad)
xor
ins
jecxz
or
cmp
or
mov
push
and
and
or
inc
cdq
and
or
shl
jl
dec
pop
cmps
jae
rol
sub
xchg
lods
mov
jno
(bad)
stos
ja
xchg
sbb
imul
adc
in
daa
mov
ins
inc
mov
ret
fcomp
mov
sahf
bound
adc
sbb
push
mov
popa
in
mov
dec
push
arpl
imul
sbb
movs
jae
test
(bad)
sub
or
sbb
jle
in
jmp
pushf
jle
mov
inc
sub
scas
push
ins
lahf
xor
sub
inc
ror
adc
jge
and
retf
xchg
out
pop
add
xor
fist
mov
xchg
(bad)
loopne
sti
outs
test
jmp
pop
push
in
jnp
or
movs
fstp
pop
mov
stos
dec
sbb
sbb
lods
out
enter
or
out
fisubr
cmps
hlt
js
pop
push
jmp
mov
sbb
jmp
jbe
inc
stos
xchg
cmp
jbe
mov
xlat
and
int3
ret
mov
movs
inc
inc
cmps
cmps
std
arpl
dec
or
shl
jbe
push
scas
stos
push
stc
mov
jne
mov
add
jnp
fidivr
mov
or
jg
fwait
test
mov
inc
popf
int
not
xor
cmps
xchg
(bad)
jae
das
loopne
jns
out
test
shr
mov
in
add
mov
xchg
test
cdq
out
mov
dec
rol
mov
nop
lahf
or
mov
shl
retf
pop
call
loop
jbe
adc
inc
add
cmc
push
pop
pop
cld
ret
dec
bound
test
xchg
mov
jecxz
adc
jo
cmp
pop
add
mov
cmp
imul
test
repz
pusha
fisubr
jle
repz
inc
xor
lock
xor
(bad)
mov
push
pop
stc
xchg
int
ror
mov
enter
or
mov
add
inc
xor
retf
in
xchg
adc
push
dec
cwde
mov
jecxz
cmp
push
mov
dec
mov
sbb
out
mov
pop
sub
scas
jmp
jmp
out
outs
xor
add
inc
inc
inc
add
cmp
push
push
shl
jmp
popf
cld
xchg
mov
xlat
inc
or
jl
mov
sub
pop
pop
scas
stos
mov
mov
cwde
cmp
fld
cmc
dec
aad
ja
jo
dec
xor
js
jbe
popf
dec
popa
outs
cld
sbb
xchg
mov
out
add
movs
xchg
sub
retf
jno
cmps
mov
jmp
mov
mov
neg
pop
sub
scas
(bad)
test
xor
ins
push
adc
cld
(bad)
mov
(bad)
dec
loope
add
repnz
jno
jmp
jne
push
adc
add
mov
movs
pop
mov
add
test
add
adc
push
push
sub
pushf
into
(bad)
rcr
cmc
push
and
and
dec
jecxz
retf
jno
rol
ja
cmc
push
or
je
pop
dec
pop
mov
inc
adc
mov
push
addr16
test
mov
jns
jne
mov
cwde
rol
retf
xor
outs
sti
sbb
aad
cmp
sbb
push
xchg
rol
push
sub
mov
jo
jno
pop
adc
in
shr
or
loop
dec
fsub
test
lods
jle
loope
push
shl
dec
cmc
and
pop
ror
fmul
adc
pop
cmp
jecxz
(bad)
push
and
addr16
jmp
div
fist
add
hlt
scas
jne
popa
das
cmp
and
lods
mov
ds
xchg
iret
push
mov
loopne
out
jb
aas
pushf
pop
push
pusha
leave
imul
ss
out
out
lods
xor
in
jns
or
arpl
fmul
data16
jg
ds
inc
enter
rol
pop
inc
jb
cmp
push
shl
fnstenv
scas
hlt
outs
add
sbb
enter
popa
cmp
sahf
mov
(bad)
fdivr
cli
ds
mov
inc
dec
jmp
sub
icebp
cmp
xchg
pop
mov
cmps
sbb
sbb
imul
std
sbb
iret
sub
cdq
(bad)
mov
adc
adc
jbe
icebp
push
outs
pushf
sub
sbb
xchg
mov
xor
mov
mov
pop
mov
fs
push
sbb
xlat
inc
dec
pushf
adc
mov
inc
rcr
sub
cmc
icebp
mov
mov
dec
xor
cmp
in
push
imul
xchg
push
jb
jge
mov
test
cwde
sti
sahf
cmps
xchg
jnp
maskmovq
mov
in
and
(bad)
jmp
lods
(bad)
mov
mov
and
int3
js
(bad)
jge
lea
iret
stos
sub
scas
push
cmp
cmps
cwde
loope
std
pop
inc
inc
sbb
aam
jle
movs
(bad)
cmp
mov
out
push
xchg
push
retf
ficomp
fwait
cdq
mov
stos
add
inc
mov
(bad)
dec
sahf
(bad)
fs
ss
cwde
mov
retf
les
adc
imul
or
jo
xor
test
out
dec
sbb
and
test
or
ss
std
pop
inc
test
xor
imul
test
push
aam
jle
push
in
out
mov
mov
out
test
in
xchg
(bad)
int
pop
mov
dec
push
adc
mov
or
cmp
jl
movs
jb
inc
(bad)
and
popf
(bad)
in
mov
push
inc
xchg
mov
cwde
pop
xor
xchg
retf
popa
mov
cmp
push
test
aad
pop
not
jbe
add
and
adc
scas
mov
xor
inc
push
cmps
jge
adc
lea
int
xlat
adc
inc
pop
dec
add
sti
aam
xlat
sub
mov
and
(bad)
jo
clc
into
pop
sbb
(bad)
scas
stos
add
mov
jge
dec
ficom
cs
(bad)
or
or
dec
adc
iret
cmc
inc
nop
ss
js
adc
loopne
clc
xchg
or
out
int
mov
scas
sbb
push
xlat
scas
mov
inc
or
cs
pop
mov
mov
inc
push
push
add
jge
scas
or
or
jp
stos
lods
std
sbb
(bad)
inc
mov
adc
(bad)
rcr
mov
inc
xchg
push
push
sub
pop
mov
mov
lods
iret
jmp
mov
cs
call
inc
cmp
out
fisub
sbb
xor
and
aaa
xor
in
cld
movs
pop
es
inc
arpl
sahf
cdq
ret
jg
pop
adc
push
push
ficomp
inc
or
jl
and
mov
mov
shl
js
cmp
pop
out
stos
(bad)
xchg
mov
inc
dec
mov
mov
repnz
dec
cdq
fnstsw
mov
or
movs
pop
in
movs
(bad)
out
mov
cmps
outs
cmp
cmp
loopne
add
xor
sbb
repnz
mov
clc
xchg
jne
jmp
sub
dec
js
xchg
adc
dec
fs
mov
hlt
retf
xchg
xor
jb
push
pop
inc
push
stos
ficomp
mov
xor
mov
movs
cmp
repnz
and
add
add
and
push
adc
fs
inc
jle
and
dec
jo
pop
add
pusha
das
or
test
stc
jns
popa
in
push
enter
addr16
sbb
jmp
dec
sub
call
dec
stc
out
daa
out
pop
ins
loopne
or
out
sbb
out
mov
je
in
repz
sub
or
int
cmp
movs
repnz
cmp
aaa
cli
xlat
popa
mov
pusha
add
xor
or
je
lea
stos
bound
sbb
fwait
popf
pop
int3
jmp
jle
jp
push
jnp
fucomp
jbe
(bad)
in
jp
inc
fistp
inc
cmp
or
pop
adc
stos
or
std
add
repnz
dec
std
loopne
xchg
std
stos
cmp
aaa
into
test
fldenv
cmp
mov
cmp
loopne
mov
clc
dec
(bad)
mov
push
lea
imul
call
in
pop
lahf
aad
lock
add
sbb
and
xchg
scas
stos
cli
stos
fmul
xlat
pushf
enter
rcr
mov
xchg
cmp
dec
adc
cmp
jmp
mov
stc
mov
xchg
sub
fs
add
or
stos
mul
sub
(bad)
jno
xchg
mov
pop
movs
arpl
pop
xchg
jp
lea
inc
fld
mov
ret
lods
sbb
es
ret
mov
(bad)
repnz
pop
les
xlat
sub
(bad)
out
jle
sbb
xor
push
lods
(bad)
mov
fidiv
(bad)
fcomp
leave
xchg
repz
imul
and
mov
adc
pop
xchg
sbb
scas
aas
adc
pop
not
sub
imul
jmp
in
add
mov
cmc
ror
mov
jo
cld
retf
add
adc
jmp
sbb
add
dec
mov
dec
retf
sub
aas
shld
and
mov
movs
movs
and
imul
push
xchg
inc
sub
cmps
es
mov
push
bound
dec
mov
mov
stc
cmp
js
pushf
dec
add
lods
nop
call
outs
cmp
xchg
add
popf
adc
push
or
xchg
dec
add
(bad)
xor
imul
clc
movs
push
es
xchg
stc
fsubr
jnp
fisubr
and
mov
inc
scas
std
mov
mov
adc
sar
pusha
jmp
(bad)
mov
adc
push
les
fld
pop
jns
jne
push
push
idiv
js
pop
fwait
add
sub
jb
jecxz
mov
dec
mov
xor
push
jp
icebp
and
xor
fidiv
jae
xchg
sbb
cli
mov
mov
jb
jle
call
hlt
(bad)
fsub
cdq
adc
add
xchg
adc
ret
add
adc
aaa
and
sar
call
or
arpl
sub
imul
mov
pop
push
(bad)
in
mov
scas
stos
push
sar
repnz
pop
std
dec
push
test
mov
mov
mov
in
pop
cmp
ds
sbb
push
mov
adc
pushf
xchg
mov
mov
push
aam
ret
js
aad
mov
aas
xor
jno
adc
enter
jge
pop
cli
arpl
add
int
add
pop
test
sbb
lds
imul
loop
inc
ja
test
adc
push
xor
sti
or
ins
xchg
inc
cmc
add
sub
inc
sub
add
fidiv
fbstp
enter
push
sub
mov
jecxz
mov
pop
pop
pushf
pop
add
leave
pop
inc
cmps
add
mov
scas
adc
mov
out
test
dec
fs
push
push
imul
xlat
pop
inc
jmp
iret
sbb
imul
mov
inc
xchg
sbb
mov
test
jle
sbb
sub
fwait
call
leave
gs
rcr
shr
fdiv
scas
mov
xor
(bad)
cwde
dec
sti
mov
lea
jnp
shl
aaa
stc
push
cmps
mov
pushf
xchg
frstor
jmp
ret
cmc
add
repnz
cmp
bound
push
and
cmp
cmc
cs
arpl
jne
dec
adc
mov
aad
or
mov
add
enter
pusha
dec
and
mov
push
sahf
sti
int
mov
xchg
jge
xor
xchg
mov
adc
(bad)
(bad)
inc
mov
sub
mov
lds
inc
add
jae
sub
scas
xor
lods
fisttp
pop
jge
test
and
or
shr
repz
inc
loopne
dec
jecxz
or
popf
sbb
push
jno
xchg
add
shl
mov
mov
adc
lods
pop
push
pop
cmp
xchg
sbb
xchg
repz
comiss
les
ret
fldenv
mov
daa
xchg
dec
push
les
iret
adc
sahf
into
mov
push
dec
pushf
iret
daa
aas
push
xchg
fs
(bad)
xor
pop
sub
enter
sub
mov
jmp
sub
jg
stos
inc
jne
sub
sbb
push
imul
and
push
mov
in
mov
adc
in
cmps
loopne
push
mov
mov
(bad)
jb
adc
call
cmc
xchg
pop
pop
adc
or
sub
jge
cmps
mov
cld
repnz
arpl
clc
push
div
test
js
jnp
cmp
lods
jg
fimul
xor
mov
je
pop
sub
sbb
sub
fmul
leave
imul
test
xor
jns
bnd
and
rcr
xchg
pushw
in
rcr
mov
dec
push
or
xor
outs
test
aas
fmul
dec
or
inc
idiv
out
je
pushf
xchg
stos
cmp
popf
rol
mov
aad
lods
push
inc
push
arpl
xchg
and
pop
push
adc
rcr
push
or
jno
lock
es
ins
pop
mov
adc
xlat
sbb
jecxz
cli
dec
sub
dec
fsin
pusha
cli
add
dec
jo
stos
cli
mov
mov
arpl
lea
pop
sti
fidivr
sub
cld
pop
mov
or
dec
test
mov
nop
repnz
xor
out
or
sub
ror
stos
mov
dec
add
leave
dec
vcomiss
pushf
mov
adc
dec
stos
das
adc
retf
movs
xlat
adc
xor
cmps
jge
iret
push
dec
cld
bound
xchg
mov
cmps
loope
sub
ja
mov
fwait
pushf
jp
xchg
lods
inc
xchg
cdq
adc
xlat
jg
push
sbb
xor
outs
xlat
push
adc
xchg
jle
jae
mov
mov
push
fdivrp
cmc
in
dec
movs
jbe
and
xor
adc
push
adc
stc
pop
xchg
shl
(bad)
add
cmovp
push
add
push
pusha
clc
mov
mov
cmc
cmp
in
mov
add
retf
jns
dec
or
inc
stos
test
aam
test
xlat
sbb
sbb
jle
or
xchg
lahf
in
push
cmp
scas
leave
dec
in
push
fld
nop
aam
xor
add
mov
das
lock
mov
in
das
mov
ins
test
and
add
cmp
lahf
sub
cmp
sub
or
in
cmp
jne
div
pop
jmp
and
mov
adc
mov
add
inc
pop
lea
push
cli
pop
or
pop
mov
(bad)
jnp
in
sbb
or
repz
lds
mov
or
out
xor
fidiv
movs
push
std
imul
xor
jo
call
sub
adc
ret
and
(bad)
rol
xor
cmp
shl
inc
enter
in
inc
push
div
bound
lds
mov
adc
aam
sub
fcom
repnz
out
in
mov
pop
je
cmc
pop
cld
mov
and
push
call
sub
js
scas
mov
test
sub
push
inc
dec
call
xor
xchg
std
shl
inc
je
pop
dec
and
add
cmp
xchg
lea
mov
sbb
mov
aam
cmp
mov
sub
mov
imul
(bad)
mov
mov
stc
sub
arpl
dec
or
xor
cli
xchg
outs
add
pop
add
test
xchg
mov
xor
adc
(bad)
ficomp
repnz
pushf
das
cmp
add
les
ins
push
cmp
ret
leave
and
inc
outs
out
ret
sbb
(bad)
fsub
ret
(bad)
sub
movs
xor
test
xchg
shl
and
shl
iret
xor
xor
dec
and
test
inc
sbb
enter
loopne
cwde
push
(bad)
dec
imul
jno
hlt
sub
mov
sub
sub
push
pushf
jmp
js
pop
pop
out
in
mov
xlat
pop
and
rcl
cmp
fsubr
mov
data16
fdivr
xchg
sub
jb
sar
cmp
jno
xor
int
cmps
xlat
out
xchg
ds
cmps
cmp
fisubr
shl
int3
push
loope
loop
adc
daa
sti
and
pop
arpl
dec
inc
inc
and
in
mov
loopne
pop
push
addr16
cmp
or
cli
xor
fucom
lea
sub
test
or
push
push
xchg
into
jbe
or
cwde
push
test
dec
call
dec
pop
xchg
xor
movs
repz
aaa
adc
lods
cmp
mov
xor
xchg
ss
sub
test
into
or
mov
dec
mov
cli
jmp
and
xor
push
cwde
fdiv
mov
out
rcr
ret
lds
xchg
sbb
enter
jne
mov
je
scas
and
cmp
popa
xchg
repz
cs
dec
mov
test
sbb
(bad)
retf
push
cmps
adc
xor
out
jo
jle
pop
outs
cmps
scas
add
leave
out
mov
(bad)
sti
lods
mul
out
ret
(bad)
pop
dec
xchg
pop
adc
jg
cdq
retf
ret
sub
and
pop
push
pushf
pop
jb
xor
or
sub
push
add
mov
push
in
push
in
lods
add
lods
and
cmc
cmps
loopne
inc
sub
out
sub
or
or
call
hlt
mov
jge
imul
cwde
repz
pusha
xchg
sbb
out
(bad)
pop
push
scas
fidivr
push
lds
(bad)
pushf
dec
movs
push
push
sub
aas
cli
mov
xor
mov
outs
shr
or
mov
mov
call
outs
push
(bad)
mul
sahf
pop
repnz
sub
adc
mov
xchg
push
add
adc
out
jne
aad
and
enter
(bad)
iret
cmps
stos
adc
test
retf
or
adc
cmps
inc
int3
repnz
test
and
xlat
rcl
sbb
mov
retf
dec
jle
fild
xlat
fs
in
jmp
inc
and
mov
jmp
mov
mov
pop
and
sbb
mov
add
data16
mov
gs
aam
inc
movs
sar
aas
imul
inc
xor
lods
and
test
cmp
mov
or
movs
dec
jl
mov
xchg
ins
(bad)
fisttp
jo
fidivr
mov
xchg
dec
push
push
in
jno
cld
dec
or
cmc
test
(bad)
mov
hlt
sbb
ins
fmul
mov
mov
jmp
sbb
and
dec
mov
mov
jmp
retf
hlt
cmp
stc
in
mov
cmps
mov
xchg
in
or
in
jns
rol
call
cmp
fsub
push
rcl
aaa
push
xchg
sub
xchg
xor
daa
mov
popa
mov
adc
shl
jbe
sub
stos
pop
cs
pop
ror
push
fsubp
mov
ins
pop
xchg
add
lods
ret
cmps
push
ds
cwde
mov
outs
xchg
loop
jecxz
mov
out
or
and
not
in
jle
iret
jp
mov
rcr
pop
es
cdq
inc
mov
pusha
ja
or
addps
xor
push
lods
mov
add
dec
sahf
fdivr
mov
call
cli
and
push
in
push
sti
mov
jb
inc
lods
cmp
or
ror
into
daa
sbb
aaa
sbb
movs
jle
sar
fwait
pop
(bad)
outs
xor
pop
pop
sar
sbb
cwde
inc
inc
retf
jns
xchg
and
pop
or
add
fadd
retf
mov
(bad)
outs
and
shr
add
js
lds
dec
add
push
fsubr
imul
stos
cmp
sbb
icebp
cmp
gs
rol
pop
lock
sbb
ret
inc
loop
cmp
(bad)
sti
mov
add
or
xchg
add
mov
cmp
push
add
inc
test
loop
repz
lea
sbb
and
pop
adc
add
inc
retf
mov
rol
xchg
sbb
mov
xor
hlt
out
push
cmp
fld
loope
aad
jp
rol
call
lea
outs
lahf
das
sub
xchg
cmps
jne
xchg
rcl
adc
adc
test
xor
adc
lock
xor
sbb
mov
ret
or
fisttp
shl
loopne
ins
adc
enter
in
dec
ds
add
jecxz
leave
(bad)
les
sub
vmptrld
stc
daa
fimul
out
push
hlt
pop
push
inc
in
lods
ja
cmp
pop
(bad)
push
dec
mov
sbb
retf
popf
(bad)
test
xchg
pop
pop
in
addr16
ins
jne
int
(bad)
loope
jno
sbb
shr
mov
out
rcl
pop
push
ja
icebp
jmp
jo
(bad)
sub
adc
or
loope
(bad)
call
rol
cs
cwde
pop
mov
mov
add
sbb
xchg
push
je
fs
(bad)
pop
xor
popf
(bad)
push
xchg
sub
xchg
out
and
or
sub
inc
fucomp
cmp
in
mov
sbb
inc
xor
clc
inc
mov
addr16
(bad)
ss
jb
ror
cdq
aaa
pusha
inc
jnp
scas
es
inc
adc
popf
cmp
mov
lea
and
test
into
add
mov
sar
cmps
ds
iret
xor
sub
movs
mov
xor
pop
jge
push
jmp
aad
pop
xor
mov
fistp
mov
arpl
ins
mov
and
mov
push
mov
push
and
cmc
scas
and
mov
sbb
xor
mov
xor
dec
pop
dec
mov
or
stos
jl
sub
(bad)
pop
jp
mov
xchg
loopne
fwait
mov
push
push
aam
cmps
or
data16
scas
adc
mov
sbb
addr16
xchg
push
cld
mov
aam
ins
int3
and
cli
adc
mov
jmp
push
popa
jb
adc
mov
mov
(bad)
repnz
outs
mov
pushf
pop
cs
mov
xor
inc
mov
not
sti
add
mov
test
add
sahf
jmp
push
loopne
mov
test
add
dec
rcr
jp
jecxz
movs
mov
push
cmp
daa
xchg
arpl
inc
add
dec
jecxz
mov
fadd
iret
push
add
je
(bad)
jne
adc
mov
ja
dec
outs
fwait
js
movs
add
push
in
push
mov
in
enter
cmps
xor
mov
push
pop
xor
or
mov
clc
xor
sub
icebp
(bad)
adc
mul
clc
add
pop
sbb
sbb
push
clc
pop
add
sbb
mov
ret
xor
mov
inc
inc
fcmovu
mov
ds
mov
or
and
(bad)
test
scas
call
dec
adc
pop
mov
int
loop
mov
mov
inc
arpl
and
mov
rcr
mov
cmps
ds
bound
push
mov
mov
loop
leave
(bad)
in
pop
aad
jp
pop
jecxz
pop
mov
inc
repz
(bad)
in
mov
sub
pusha
rcr
and
sbb
mov
mov
lods
mov
ret
jbe
push
(bad)
ss
ret
dec
lea
mov
cmps
dec
add
pop
xchg
and
or
outs
popf
sahf
js
pop
sub
adc
and
shr
mov
push
jle
mov
inc
mov
adc
pushf
ja
repnz
jnp
dec
test
inc
pop
nop
xchg
xchg
dec
push
cmp
call
cli
std
mov
sub
sbb
aaa
(bad)
push
popa
mov
push
punpckhwd
mov
xchg
loop
xlat
ret
and
mov
cld
cmp
pop
cdq
inc
mov
stos
out
aam
adc
cdq
inc
and
int3
mov
xor
push
or
xchg
dec
mov
sub
adc
sub
in
inc
fistp
shr
test
lods
cmps
in
sbb
mov
fimul
add
je
stos
mov
and
mov
mov
inc
xchg
push
and
sbb
mov
aaa
shl
fdivr
ds
jl
sbb
loope
mov
iret
sbb
jp
and
or
mov
sar
cmp
(bad)
iret
xor
inc
mov
push
mov
sub
xor
imul
arpl
dec
push
pop
mov
mov
push
or
jno
int
pop
cmp
pop
mov
push
sub
dec
inc
inc
mov
imul
shl
imul
shr
nop
movs
ficom
mov
lods
push
hlt
cmp
or
mov
pop
add
mov
mov
stos
arpl
cmp
mov
add
cmp
mov
das
repz
loopne
hlt
push
dec
pushw
jo
(bad)
dec
(bad)
popf
test
cld
dec
cmc
cmp
xchg
mov
mov
adc
imul
push
jae
retf
sahf
in
sbb
sub
jg
fcom
out
add
mov
leave
xchg
adc
mov
adc
xchg
das
sub
adc
loopne
gs
mov
xor
retf
cmp
xchg
stos
ss
cmp
pop
aad
sbb
dec
mov
or
loop
pop
pop
das
loope
loopne
pop
rcl
ins
pop
int
adc
test
pop
or
aas
icebp
xor
and
lock
inc
les
jmp
sub
in
in
not
pop
dec
mov
add
call
sub
inc
ja
ret
pop
enter
inc
jno
jae
cwde
div
loop
cld
bound
push
mov
add
sti
xchg
and
adc
add
inc
iret
sbb
ds
pushf
rol
or
test
add
xor
sub
test
jecxz
pop
push
popf
(bad)
cmc
les
cmp
ja
call
neg
dec
or
inc
and
mov
iret
xchg
jmp
test
(bad)
fiadd
jmp
inc
jne
push
out
xchg
and
popf
cld
pop
adc
lahf
ins
scas
jne
int
pop
lock
fdivr
mov
mov
mov
cmp
test
fstp
jg
pop
call
fs
xchg
ret
mov
mov
je
iret
xlat
jg
es
xor
and
sahf
mov
and
aad
inc
fsubrp
loop
xlat
cmp
mov
pop
push
sub
retf
jno
ds
push
mov
dec
sub
sbb
es
adc
sub
pop
shl
pop
sub
push
pop
sar
xchg
and
cmp
add
sbb
push
push
bound
inc
sbb
push
jg
and
fs
push
or
in
sbb
mov
into
arpl
imul
push
mov
retf
push
hlt
adc
xchg
lea
cmp
cmp
in
jmp
mov
xor
pushf
pop
xor
jecxz
out
push
mov
adc
call
mov
daa
pop
call
fiadd
rol
fstp
mov
xchg
mov
and
mov
daa
jge
or
dec
and
test
sbb
sbb
sbb
mov
mov
mov
xchg
imul
pop
and
fcos
add
cmp
jne
lods
add
rcl
or
call
jb
call
bound
mov
jnp
xor
mov
fdiv
fld
mov
mov
xchg
mov
pop
sub
and
add
or
inc
xor
xchg
je
(bad)
sub
fs
mov
pop
xor
es
pop
pop
es
xor
outs
cmp
and
mov
xor
dec
frstor
mov
gs
and
out
dec
or
fcom
mov
test
lahf
stos
sub
mov
inc
in
cmps
outs
cmps
fidivr
inc
cmc
dec
cmc
cmp
adc
mov
pop
or
fsub
sub
movs
stos
gs
cld
xor
aam
mov
test
movs
or
ins
push
cmp
xchg
mov
rol
dec
inc
cmc
mov
ins
arpl
lods
gs
jg
jl
jmp
or
addr16
adc
or
scas
ins
jl
jp
(bad)
xchg
aad
pop
popf
xchg
adc
in
inc
jl
pop
mov
xchg
cmp
lock
mov
xor
xchg
jmp
push
or
jl
adc
mov
mov
cmp
inc
ss
loopne
icebp
adc
call
adc
dec
sbb
xor
mov
hlt
jle
into
stos
cmp
mov
test
mov
push
mov
test
jecxz
in
xor
jae
std
push
in
and
adc
mov
lahf
enter
pop
shr
xchg
cmp
(bad)
jge
or
test
mov
adc
inc
pop
inc
ja
lock
cs
repz
push
iret
xlat
adc
cmp
popa
aas
std
or
popa
fst
and
jge
push
rcr
int3
movs
sbb
or
cld
sub
xchg
jbe
imul
ficomp
or
mov
push
repnz
std
nop
icebp
std
xchg
inc
popa
mov
(bad)
xlat
ficom
mov
sbb
or
jo
hlt
inc
xor
sbb
loope
sti
xlat
retf
repnz
mov
and
fimul
cmp
xor
enter
xor
push
loope
cmps
inc
ret
aad
(bad)
nop
mov
or
jecxz
and
sbb
cld
rol
cmp
scas
out
mov
aad
dec
jns
test
and
fbld
xchg
jl
push
pop
ret
in
add
jmp
cdq
adc
(bad)
add
loope
sbb
test
xchg
pop
mov
fmul
out
je
int3
xor
pop
add
cwde
mov
out
les
mov
push
xchg
movs
pushf
xor
ret
cmc
mov
ret
mov
in
cmps
pushf
push
mov
scas
jmp
mov
xchg
xchg
xchg
arpl
pop
cmp
or
add
dec
xchg
sub
daa
sbb
and
sbb
push
sub
adc
mov
xchg
loopne
imul
inc
aad
pop
adc
inc
pop
jo
push
fidivr
cmps
lahf
pop
sti
scas
ins
loopne
pop
add
stos
leave
hlt
push
cmp
sbb
jp
cmp
ja
cld
jnp
xchg
mov
xor
es
xchg
mov
cmp
cwde
sbb
push
dec
adc
in
dec
pop
sub
std
inc
imul
inc
xchg
dec
bound
pop
or
js
sti
sbb
add
jnp
inc
call
stc
xor
jb
push
test
xor
sbb
ret
add
pusha
ret
lods
cdq
vcvttss2si
pop
or
retf
sub
cmps
xchg
mov
dec
popa
pop
jle
mov
xor
loope
sub
sub
movs
test
cmp
push
sub
lock
dec
sahf
pop
and
mov
cmp
mov
adc
mov
ins
cwde
retf
fstp
adc
ss
daa
test
cmp
pop
popf
push
mov
cmp
sbb
lea
cmp
(bad)
call
dec
imul
retf
clc
add
stos
mov
fldenv
pop
inc
cmp
dec
aaa
cli
sbb
jle
pop
cli
ffreep
or
push
pop
cmc
dec
mov
imul
mov
xor
dec
push
shl
mov
cs
ins
dec
dec
es
popf
jbe
dec
sub
mov
(bad)
mov
icebp
imul
sbb
inc
jecxz
mov
aam
cmp
sti
pop
sbb
push
mov
pusha
mov
fisubr
rol
mov
imul
nop
xchg
push
xchg
(bad)
push
jle
xor
icebp
mov
push
std
mov
cs
or
adc
push
xchg
cmp
xor
push
mov
inc
adc
add
rcl
or
adc
xchg
and
xchg
push
jb
loop
adc
(bad)
xchg
in
pop
or
(bad)
mov
dec
in
mov
jp
leave
inc
out
js
or
and
jecxz
push
retf
in
and
inc
add
jge
lods
daa
int
stc
pop
in
loope
jb
pop
cdq
call
outs
mov
inc
push
out
iret
fdivp
mov
inc
adc
scas
dec
nop
icebp
push
(bad)
cdq
or
shl
stos
mov
fiadd
cmc
xchg
fnsave
fisttp
adc
mov
outs
and
and
xchg
sbb
lods
cmc
es
jmp
pop
cwde
add
movs
add
sbb
cmps
ds
jg
mov
push
outs
xor
push
xlat
leave
sbb
pop
fst
neg
call
ins
lea
cmp
mov
mov
cmps
mov
mov
fs
mov
movs
jbe
push
aas
push
cmp
mov
xchg
xor
push
jnp
xchg
inc
fcmovnu
ins
xor
push
jae
add
xor
xor
retf
mov
mov
bound
retf
push
mov
rcl
cli
add
test
sbb
idiv
shl
rol
test
mov
fwait
pop
inc
inc
mov
aad
push
out
aas
xchg
xor
cdq
mov
icebp
mov
pop
adc
data16
sub
in
dec
retf
mov
repz
push
imul
xor
bound
leave
xor
iret
pop
daa
rep
mul
mov
push
sbb
mov
lods
push
push
and
pop
jnp
sbb
mov
cmp
gs
cld
xor
retf
call
xor
mov
sub
aam
push
inc
pop
icebp
sti
data16
cmp
ins
sub
or
jae
ss
mov
mov
ret
cmp
push
fisubr
or
mov
(bad)
and
and
sub
arpl
xor
jmp
xor
or
fistp
push
movs
(bad)
pusha
mov
stc
ss
ficom
add
idiv
movs
scas
sbb
loopne
adc
ret
add
add
repnz
popa
jp
cmp
adc
inc
adc
xchg
mov
ror
jns
stos
xchg
dec
inc
inc
sub
xchg
sub
(bad)
ins
aaa
popa
inc
lods
xor
imul
pusha
mov
or
(bad)
aas
into
clc
fnstcw
(bad)
cmp
mov
cmps
retf
daa
cmp
sub
sar
push
popa
jg
or
pop
loopne
push
jo
adc
push
jmp
popf
mov
xor
enter
loopne
add
xlat
js
ss
lea
jns
inc
rol
cmp
jmp
pop
fisttp
push
ret
fnstcw
shr
cmp
imul
jge
dec
cmp
stos
pop
sub
jo
retf
sbb
or
add
jne
sbb
jno
xor
dec
loop
and
out
lea
dec
test
dec
cld
push
xchg
mov
aaa
mov
leave
mov
mov
fnsave
bnd
inc
es
ds
and
sub
adc
sub
repnz
shr
jo
pop
into
gs
inc
fistp
out
fild
jl
pop
neg
enter
mov
icebp
loopne
test
push
sub
popf
cli
pop
aam
lahf
jns
outs
cld
pop
or
add
lods
cld
adc
push
fcmove
in
fcomp
inc
xchg
ins
lea
cs
ds
je
xor
fidiv
mov
addr16
mov
aad
mov
hlt
cs
inc
push
mov
sbb
neg
pop
adc
lds
idiv
imul
jo
mov
xchg
mov
and
rol
popf
jae
ja
stos
in
sbb
ficomp
inc
int
aad
mov
das
mov
shl
dec
mov
test
sbb
and
inc
adc
cld
pop
bound
jnp
xchg
imul
cmp
mov
adc
sbb
out
mul
push
xchg
sub
mov
jp
xlat
jne
mov
jb
retf
dec
inc
lods
fisub
mov
test
pop
jo
jl
pop
mov
test
(bad)
jae
and
pop
or
lds
add
pop
jbe
fucomip
xor
xchg
add
cmp
mov
pop
iret
mov
ins
jl
clc
loopne
xchg
rol
push
das
and
xor
imul
test
aaa
repz
fisttp
mov
aaa
push
(bad)
mov
cmp
int3
(bad)
or
(bad)
cld
dec
test
jmp
and
pop
sbb
xor
je
and
push
call
sbb
sti
add
cli
xchg
cmp
dec
mov
test
fmulp
std
fxch
jo
dec
test
repz
jmp
imul
xchg
dec
lea
outs
or
mul
cmp
pop
cmp
fdecstp
cdq
test
nop
leave
mov
pusha
ret
fldenv
push
pushw
adc
scas
adc
ret
sub
xor
popf
and
in
int
cdq
pop
ret
retf
cli
mov
dec
push
inc
mov
add
clc
xchg
cs
mov
movq
lds
je
lds
pop
add
xchg
mov
adc
out
dec
lds
pop
scas
les
(bad)
xor
div
out
pmulhuw
das
(bad)
das
xlat
sub
cmp
pop
pop
call
or
dec
pop
mov
aam
xor
popf
ins
push
cmc
hlt
add
outs
inc
push
int3
sub
adc
sar
push
mov
xchg
or
dec
add
fs
out
enter
shl
pop
iret
or
mov
aad
mov
jg
mov
call
repz
test
pusha
inc
aam
dec
aaa
mov
xchg
movs
jo
stc
jge
jge
loopne
imul
xchg
das
imul
push
jecxz
dec
arpl
data16
jae
jo
adc
xchg
add
in
dec
(bad)
xchg
add
mov
fwait
inc
stc
mov
inc
cmp
push
and
or
ja
dec
(bad)
push
aad
cmp
call
(bad)
push
mov
and
and
enter
std
cmc
push
aam
jae
inc
push
arpl
dec
std
add
inc
sbb
push
pop
imul
shl
ret
fisttp
sbb
mov
inc
(bad)
mov
pop
retf
adc
call
fnstsw
mov
rol
jmp
pop
dec
inc
add
outs
pop
push
xor
pop
xor
cld
mov
popa
inc
lds
jecxz
rcr
pusha
and
xor
sub
in
xchg
cmps
mov
xchg
xchg
cdq
pop
pop
or
shl
pop
mov
or
ficom
cmp
mov
out
push
js
push
jle
sbb
out
dec
pop
fist
xor
je
(bad)
cld
mov
xor
mov
outs
out
dec
pop
pop
aad
daa
sbb
inc
loope
ror
or
(bad)
cmp
loop
out
cmp
sbb
popa
scas
das
ret
mov
(bad)
adc
cmps
push
sub
mov
jae
xor
int3
xor
inc
inc
push
into
dec
and
push
in
push
lea
leave
sub
and
sbb
dec
ss
in
cmp
outs
mov
xchg
cwde
arpl
push
fidivr
mov
outs
sub
or
popf
push
mov
xor
mov
or
push
mov
mov
inc
cmp
sub
loopne
xchg
(bad)
sbb
and
inc
cmps
into
cmp
addr16
in
clc
daa
jbe
ja
adc
in
aas
clc
adc
ds
sub
and
inc
hlt
pop
inc
mov
pop
test
inc
push
loopne
push
sbb
aaa
mov
xor
xchg
cmc
inc
in
or
ins
dec
and
bound
mul
xor
inc
retf
or
es
push
fdivr
add
or
js
data16
pop
in
and
dec
push
aam
je
or
cdq
mov
lds
movs
xchg
pop
fist
push
je
out
inc
out
adc
inc
pop
and
movs
and
inc
dec
(bad)
lock
mov
ror
pushf
repnz
out
lods
push
outs
xchg
fadd
sub
push
imul
sub
lods
jnp
push
mov
adc
mov
imul
mov
cli
ja
xor
or
mov
out
mov
imul
popf
push
(bad)
cdq
scas
sbb
and
mov
lods
add
mov
(bad)
mov
sbb
add
cdq
arpl
and
lea
mov
icebp
pop
or
adc
sub
cmp
mov
lock
dec
pop
or
xchg
out
cs
mov
or
fisubr
jle
call
repz
sub
mov
cli
test
cli
sub
mov
pop
shl
int3
js
jl
xor
inc
and
and
loope
dec
sti
call
fldcw
mov
jecxz
xchg
inc
lock
sbb
movs
into
xor
cmp
push
clc
repz
aad
and
xchg
sahf
mov
cli
inc
into
(bad)
mov
sub
rcr
sub
dec
fadd
clc
lahf
cmp
mov
jmp
sar
add
(bad)
in
mov
or
lods
addr16
cmps
sbb
pop
ja
out
lods
xor
cdq
adc
das
inc
icebp
test
push
jne
retf
jmp
mov
inc
xchg
dec
xchg
jmp
and
ss
cmp
cmc
(bad)
icebp
push
cld
push
pop
pop
aaa
push
popa
jl
(bad)
push
fdivr
add
clc
mov
out
jl
cmp
or
scas
in
xchg
cmp
jp
xor
out
ins
jl
test
out
pop
jae
jo
gs
pop
dec
shl
not
or
xchg
adc
ret
and
add
les
or
loop
mov
cdq
les
xchg
xchg
jnp
arpl
and
test
jp
mov
out
add
int3
aas
mov
xchg
xchg
ss
pop
cmp
int3
sbb
mov
inc
push
ins
or
cmp
push
bound
js
push
xchg
ret
addr16
mov
sub
popf
cmp
shl
dec
jno
push
in
out
retf
out
fld
ret
mov
push
call
and
add
lea
add
scas
jbe
aas
pop
clc
push
cdq
add
fisub
sbb
and
loope
adc
pop
jmp
push
enter
xor
mov
and
inc
pop
jb
(bad)
sbb
pop
(bad)
scas
inc
jne
daa
out
outs
push
mov
mov
fild
push
mov
pushf
loopne
dec
test
retf
and
loopne
je
dec
cli
dec
cmp
(bad)
aam
adc
nop
sbb
out
dec
inc
inc
stos
push
(bad)
mov
repz
pop
nop
shr
push
mov
add
xchg
icebp
cmp
pop
in
jo
pop
lea
adc
inc
sub
adc
jb
sub
test
lods
(bad)
mov
push
push
loopne
jle
ins
xchg
push
add
push
stc
pushf
inc
jl
je
out
and
xor
imul
je
cmps
cli
call
lods
inc
or
inc
scas
xor
int3
cmp
push
mov
std
fwait
and
std
jbe
inc
(bad)
rcl
mov
pop
lahf
xor
scas
shr
lods
dec
mov
lds
inc
cmc
inc
mov
into
xor
pushf
repz
xchg
push
mov
aas
dec
scas
arpl
(bad)
sub
daa
pop
int3
mov
mov
pushf
mov
aas
jne
and
loop
call
pop
xor
jbe
rol
jmp
pop
mov
(bad)
fs
call
cmp
outs
out
fwait
(bad)
lds
mov
nop
popa
sub
jmp
mov
fcomi
mov
scas
rcr
add
lods
fmul
pusha
cwde
mov
stc
sub
and
sbb
les
mov
inc
pop
cmp
xlat
xlat
mov
es
popa
cmp
xchg
out
test
ret
mov
mov
mov
jnp
out
dec
jbe
out
popf
aaa
jnp
retf
into
pause
or
popf
daa
pop
ins
out
inc
pop
in
stos
cwde
xor
add
mov
in
ror
adc
iret
fs
and
lea
sahf
fxch
and
mov
cmp
pop
sar
xor
and
dec
mov
popa
call
mov
adc
inc
mov
xor
push
int
xlat
lods
fst
pop
fcmove
pop
test
or
jg
mov
stos
stos
js
pop
dec
scas
int
xor
hlt
jle
xor
gs
addr16
push
jmp
dec
xor
push
push
cmc
mov
or
idiv
idiv
xor
in
les
fwait
pusha
call
pop
xor
int
stc
lock
sbb
push
movs
mov
imul
sti
mov
mov
cmps
jp
dec
inc
lea
repnz
mov
sti
jmp
pop
mov
inc
lods
sub
scas
mov
jge
and
xchg
dec
test
std
dec
sbb
pop
out
push
shr
test
push
xchg
mov
ret
jl
mov
mov
inc
push
xor
and
xchg
rol
push
jge
inc
test
sub
push
pop
jle
add
stc
(bad)
iret
dec
cmps
lock
jno
inc
cmc
fiadd
fwait
mov
fidivr
pop
cld
lods
sbb
sbb
pop
adc
xlat
out
repz
(bad)
lock
(bad)
cmps
adc
sar
push
jno
jne
fbld
adc
jbe
je
and
imul
das
loopne
pop
ins
ja
jb
dec
gs
or
dec
and
call
jae
mov
push
and
lea
inc
fwait
ror
rcl
test
lock
adc
sub
repz
push
mov
gs
mov
mov
shl
or
paddsw
jo
test
lods
imul
pop
adc
xchg
rcr
test
xchg
cmp
cmp
leave
xchg
iret
repnz
imul
sub
push
jg
inc
and
nop
cli
cdq
call
out
push
push
cmps
fwait
mov
dec
repz
sbb
push
jns
inc
std
retf
mov
xchg
das
add
call
inc
aad
in
loopne
test
jne
xlat
dec
out
xchg
mov
jmp
dec
dec
push
sub
push
sub
pop
xchg
mov
and
sar
sbb
pop
and
mov
dec
adc
lahf
cmc
popa
adc
aam
ins
mov
sar
imul
fistp
pop
xor
adc
sti
mov
neg
mov
ins
add
hlt
repz
mov
and
mov
cwde
jnp
(bad)
mov
sub
xchg
repz
cwde
test
inc
xor
scas
in
popf
test
call
sub
jmp
in
push
retf
mov
xchg
std
mov
push
xor
call
push
shr
and
addr16
leave
sbb
xchg
ret
dec
data16
push
inc
xor
sar
jb
cwde
mov
popa
cmps
xlat
rcl
pop
xchg
into
cli
push
jmp
(bad)
retf
jo
test
xor
and
lods
mov
push
int3
repnz
push
outs
push
cmp
popf
cmps
call
icebp
mov
xchg
loop
nop
xchg
das
sub
and
imul
mov
or
sbb
inc
push
xchg
push
mov
out
jmp
and
stos
ja
push
push
or
sbb
jbe
xchg
inc
adc
add
mov
(bad)
scas
cs
std
xchg
or
xchg
outs
cmp
mov
ja
pop
xchg
arpl
or
adc
div
add
pop
mov
movs
inc
jbe
mov
jge
jae
loopne
out
in
std
sbb
clc
xor
xchg
jge
inc
or
outs
(bad)
adc
jb
mov
pop
or
repnz
sbb
push
mov
sbb
push
push
inc
dec
xchg
jecxz
xchg
cld
call
pop
xchg
xchg
push
adc
xor
sub
stos
mov
(bad)
xchg
or
adc
std
loope
out
ins
pop
dec
push
xchg
(bad)
outs
dec
sub
sbb
dec
sbb
inc
jle
movs
fcomp
int
popf
movs
mov
scas
xchg
xlat
cwde
jae
icebp
or
mov
repz
cli
gs
out
push
adc
sbb
test
daa
mov
pop
mov
sti
xor
in
(bad)
push
js
cdq
fisttp
push
add
ret
mov
jbe
in
push
mov
pop
retf
cmp
out
and
cmp
xchg
mov
adc
add
pop
mov
je
out
sbb
cwd
mov
inc
push
xchg
adc
pop
je
mov
push
ss
push
add
dec
jmp
ja
dec
call
repnz
sbb
push
xchg
and
sbb
cmps
jecxz
pusha
xor
scas
in
in
fcomp
adc
lea
mov
fidiv
cmp
test
xor
push
xchg
ja
xchg
sbb
int3
mov
out
sbb
(bad)
(bad)
fwait
mov
xchg
mov
mov
shl
cmps
ret
rcl
lahf
mov
sahf
mov
fwait
xlat
test
lods
inc
outs
ror
sbb
repnz
sbb
mov
mul
and
ss
and
jmp
xchg
cmc
jl
xchg
dec
pop
mov
xlat
jmp
scas
test
and
lahf
xlat
fcmove
std
adc
jmp
bound
mov
mov
stc
pop
sub
sbb
add
(bad)
xchg
imul
out
sub
adc
cmp
aas
inc
fisub
icebp
cmp
jbe
scas
mov
mov
xchg
call
enter
mov
into
jge
jbe
rol
lods
popa
mov
sbb
ins
std
and
mov
xor
lea
aas
xor
cdq
xchg
lds
fs
cmps
imul
mov
pop
enter
adc
sub
ret
dec
movs
push
and
out
retf
clc
gs
jnp
std
and
je
int
js
clc
push
jg
and
lods
sbb
adc
sub
(bad)
stc
aad
fs
mov
scas
je
ins
stc
xlat
loopne
xor
icebp
stos
dec
fldcw
mov
clc
adc
out
push
jmp
icebp
mov
aad
sub
pop
jne
inc
jno
cmp
ficomp
call
out
sub
lock
cdq
mov
mul
mov
jne
aaa
xor
loope
inc
jae
push
mov
(bad)
pop
push
jecxz
adc
pop
shr
inc
push
xchg
add
and
push
xor
cmc
imul
pop
push
mov
add
jg
adc
outs
into
xchg
pop
inc
add
ds
xor
and
pop
outs
inc
shr
mov
jb
popa
add
cmps
cmps
adc
push
sbb
ins
cwde
mov
mov
jae
jmp
cdq
jecxz
ins
add
or
in
or
sub
push
inc
das
push
rol
inc
enter
inc
fstp
dec
movs
loope
push
add
pop
pop
or
inc
jle
dec
aaa
pop
rcl
jle
or
adc
mov
xchg
retf
jp
jp
inc
test
push
cmps
jmp
jp
adc
inc
and
mov
pop
movs
push
adc
cld
das
xchg
icebp
and
imul
popf
sbb
pop
add
mov
ror
mov
popa
push
add
pushf
pop
in
mov
aad
sub
and
rol
scas
neg
inc
cmp
out
out
jne
jo
gs
mov
in
xchg
cmp
cmp
pop
icebp
ret
(bad)
jo
cmc
scas
in
ja
mov
and
xor
repz
dec
xchg
aaa
xchg
cdq
in
fwait
data16
jae
int
jp
imul
xchg
shl
ret
out
mov
(bad)
push
jns
(bad)
lods
jmp
loopne
cs
rcr
daa
mov
push
(bad)
iret
jge
dec
fwait
mov
mov
call
and
dec
jae
sbb
in
mov
(bad)
mov
addr16
movs
test
stc
hlt
test
adc
pusha
cmps
ja
in
add
mov
shl
sbb
push
(bad)
cmp
ins
push
retf
ins
mov
lahf
xor
js
clc
mov
pushf
adc
aam
push
je
mov
and
(bad)
xchg
loop
pop
dec
daa
loop
shl
icebp
rol
(bad)
mov
adc
loope
and
cmps
inc
aaa
xchg
adc
(bad)
(bad)
cmc
jo
sub
stc
fcomp
and
dec
sub
mov
rcr
sub
sub
jno
retf
jo
push
cmc
jnp
xor
(bad)
mov
sbb
ja
and
sahf
cld
xor
mov
add
push
or
data16
push
pusha
mov
xor
fdivrp
shl
test
lock
mov
sbb
adc
fist
xchg
(bad)
loopne
or
test
rol
repz
gs
nop
mov
jae
xchg
push
inc
repnz
outs
mov
ds
fs
inc
xchg
inc
(bad)
lahf
jnp
test
push
dec
jmp
add
(bad)
stos
stc
sub
mov
mov
xchg
push
push
pop
adc
jge
pop
(bad)
sub
addr16
sub
xchg
adc
loopne
jle
fwait
div
mov
add
sbb
pop
sbb
pop
and
and
sahf
jecxz
outs
and
ins
fld
xchg
pop
pop
sbb
mov
out
test
call
xchg
dec
fbld
sbb
nop
out
es
js
repnz
ins
and
xchg
jnp
jb
out
je
(bad)
int3
test
ins
cs
and
adc
ja
add
div
add
(bad)
(bad)
icebp
es
fidiv
mov
add
ret
sti
inc
sbb
cmp
sub
mov
ja
sub
inc
adc
jo
mov
xchg
xchg
shr
mov
test
sti
dec
pop
mov
mov
and
sub
sub
xchg
test
pop
cmp
xchg
and
lods
imul
pop
leave
and
xor
outs
pop
dec
mov
pop
call
aas
loope
fwait
jb
mov
(bad)
std
jbe
jge
or
inc
dec
mov
pop
movs
iret
outs
mov
popa
xchg
lods
mov
shl
cmp
fdivr
cmp
or
lods
mov
pusha
xor
(bad)
pmulhw
sub
or
enter
pushf
adc
jo
test
pop
push
bound
test
adc
push
adc
add
pop
(bad)
sub
imul
jnp
fwait
aad
or
sub
movs
in
int
mov
ins
inc
xchg
sub
mov
mov
and
mov
lea
sbb
xlat
pop
cld
in
movs
dec
dec
jb
sub
scas
cld
inc
std
mov
repnz
mov
jmp
push
sbb
inc
xchg
xor
lea
sub
aas
dec
mov
gs
nop
xor
movs
add
pop
cli
add
ds
xor
jb
daa
mov
ret
xor
arpl
test
push
inc
mov
xchg
push
jle
xor
sub
pop
dec
adc
mov
fadd
mov
mov
daa
xor
pop
fstp
push
lods
loope
fst
ret
mov
pop
mov
ss
dec
dec
push
lods
cmp
repz
sub
data16
xor
jb
mov
xchg
jae
sub
sbb
sub
adc
push
loope
xchg
push
cwde
sub
xchg
xor
add
daa
clc
xchg
and
dec
fcomp
sub
jecxz
mov
lods
dec
das
dec
inc
mov
and
out
stc
or
pop
test
mov
cmps
idiv
std
jbe
pushf
stc
inc
inc
mov
pop
mov
dec
fxch
adc
sbb
dec
and
xor
and
ja
adc
shl
xor
cld
fisubr
clc
lods
lods
mov
jne
dec
mov
and
ins
dec
pusha
shl
push
mov
fsubr
jg
ja
scas
sub
clc
aad
pop
cmps
sub
inc
xchg
and
std
loope
dec
push
push
push
test
lds
pop
mov
mov
fwait
arpl
packuswb
xchg
ficom
inc
in
ss
and
out
retf
(bad)
sub
out
lds
sbb
or
rol
xchg
xor
adc
pop
in
fsubp
movs
jmp
enter
dec
lahf
mov
fwait
lds
jmp
xor
inc
add
call
dec
xlat
shr
pop
or
hlt
jae
scas
xchg
sbb
pop
sti
pop
mov
xlat
fild
cmp
mov
fistp
shl
outs
xor
ficom
push
outs
xor
sub
dec
out
xchg
stos
repz
dec
sbb
or
test
pop
retf
push
cmp
enter
js
lea
mov
add
xor
fisubr
popa
and
scas
cdq
jno
in
or
jle
or
call
ror
ror
cs
sub
adc
mov
sbb
dec
mov
cld
test
xlat
mov
in
rcl
in
jmp
ror
sbb
sub
test
mov
cld
imul
inc
nop
push
retf
add
in
inc
xchg
test
sar
shl
pop
leave
ret
in
cs
outs
jbe
mov
xchg
out
xchg
mov
nop
stos
pushf
mov
stos
add
push
aaa
push
pusha
mov
xor
out
int
iret
adc
popa
mov
cwde
and
lods
aaa
push
and
(bad)
mov
xchg
xor
pushw
test
rol
push
cdq
mov
(bad)
sub
mov
ins
mov
fxch
dec
repnz
xchg
pop
pop
dec
pop
sub
in
or
retf
sub
or
push
push
push
(bad)
lds
ja
ins
stos
mov
mov
sub
dec
or
scas
push
jg
(bad)
adc
sahf
call
dec
out
daa
(bad)
retf
arpl
lahf
in
out
jg
pop
jmp
push
dec
jle
xchg
scas
sub
xor
mov
std
jo
popa
mov
xchg
mov
xor
lds
enter
scas
scas
shr
mov
icebp
ins
ja
repnz
pop
cdq
bound
mov
(bad)
sub
push
adc
imul
loope
or
hlt
in
pop
push
dec
sbb
or
rol
nop
lods
cdq
cli
call
jle
aaa
jns
clc
ins
cmp
jle
jge
(bad)
std
test
ja
jl
jg
jmp
or
ja
jno
ret
retf
(bad)
mov
sar
or
adc
int3
pop
xchg
mov
push
mov
in
das
scas
inc
mov
or
pusha
or
sahf
mov
fidivr
retf
lea
js
cmp
fistp
mov
shr
jg
bound
mov
push
ror
fstp
jmp
cmp
lahf
inc
mov
pushf
jmp
std
mov
sub
and
or
pop
hlt
mov
daa
ss
mov
gs
and
inc
jl
xchg
lahf
scas
test
pop
pop
addr16
sbb
mov
je
in
(bad)
xchg
mov
neg
xor
mov
in
mov
pop
shl
scas
(bad)
mov
mov
mov
cmovp
mov
push
sbb
mov
stos
cli
and
cs
push
dec
inc
int
and
or
mov
jmp
loop
adc
xor
das
pop
mov
add
lods
dec
loop
mov
mov
xor
repz
movs
fldcw
js
jg
mov
rol
jno
iret
push
pushf
push
sub
adc
mov
and
xlat
sub
adc
iret
les
or
aad
mov
fbld
rcr
cmc
mov
aad
and
inc
mov
or
(bad)
add
mov
pop
cmp
je
mov
movs
mov
push
or
test
aaa
fld
push
sbb
(bad)
cmp
div
jmp
and
test
les
push
add
and
cmp
push
lds
sbb
stos
xor
shl
movs
(bad)
cmp
imul
rcl
xor
and
scas
stos
ins
lods
sahf
pusha
pop
jnp
imul
outs
dec
adc
in
cmp
xor
hlt
push
ss
sub
sbb
rcl
dec
sbb
xor
fidivr
or
fnstsw
cdq
mov
xor
xlat
bound
or
out
or
scas
clc
test
add
push
imul
mov
cmp
dec
xlat
pusha
inc
in
clc
movs
movs
iret
lods
xchg
lods
inc
(bad)
ja
cli
jns
mov
loope
adc
hlt
sub
mov
dec
xchg
pop
arpl
xchg
ficomp
(bad)
ror
shl
xchg
cmp
pusha
pusha
adc
mov
cmp
ja
dec
xchg
shl
ret
int3
gs
pop
cs
lahf
jmp
jnp
pop
jg
mov
push
push
ds
psubusw
sahf
and
mov
inc
pop
es
int3
lds
push
mov
out
pop
sbb
rol
fdivr
mov
dec
adc
add
adc
dec
aad
aas
sub
sbb
jne
call
xchg
mov
mov
(bad)
in
in
push
push
dec
xor
pop
mov
jne
and
dec
xor
stos
mov
fnstenv
inc
add
sar
icebp
mov
pop
cdq
call
test
push
push
and
test
ins
push
imul
movs
push
(bad)
sub
(bad)
jae
ja
xor
into
dec
mov
mov
sti
ret
mov
push
mov
mov
push
movs
bound
cmp
mov
push
sub
imul
jns
fld
mov
(bad)
adc
cmp
add
sbb
cdq
mov
in
push
nop
sbb
sbb
xchg
inc
sbb
jp
int
mov
lea
mov
int3
mov
stc
clc
xor
mov
or
mov
icebp
xor
fxtract
mov
mov
shl
pop
cmp
add
xor
outs
repnz
data16
enter
push
cmps
in
call
test
ret
mov
das
cld
pop
mov
jae
aad
xchg
mov
repz
nop
stc
jmp
sbb
lea
movs
call
sbb
dec
mov
and
jl
pop
imul
sti
adc
inc
ret
aam
and
jo
inc
sub
dec
jge
shr
jmp
inc
mov
pop
mov
mov
(bad)
in
movs
data16
and
add
sti
or
sbb
pop
mov
cmps
jp
addr16
(bad)
mov
dec
gs
sar
sahf
nop
pop
add
jmp
adc
call
stc
mov
push
data16
xor
out
cli
rcl
mov
cmp
arpl
jb
push
xor
shl
lahf
and
inc
ret
cmp
add
(bad)
fmul
adc
out
popa
jnp
out
cmc
jb
or
push
rol
lahf
mov
dec
inc
addr16
(bad)
and
push
pop
jns
mov
into
repnz
pop
adc
test
pusha
in
pushf
push
add
test
dec
ins
popa
icebp
outs
daa
fcomp
push
data16
loopne
clc
sar
dec
push
xchg
test
push
popf
mov
lock
push
sbb
xor
(bad)
loop
cmp
dec
es
and
jle
stos
inc
in
fst
mov
mov
ret
imul
sub
addr16
sar
mov
cmp
xor
cmp
retf
cmp
add
dec
mov
push
inc
jb
push
mov
sbb
bound
push
jnp
xchg
mov
cdq
popa
xor
xchg
aam
mov
and
mov
sbb
lock
pop
inc
cmp
mov
and
dec
add
sub
test
ss
cld
imul
pusha
xchg
pop
(bad)
or
loopne
fwait
add
mov
not
aas
jo
mov
cdq
push
test
mov
mov
ret
addr16
mov
(bad)
mov
ss
div
push
lods
sub
les
mov
add
inc
push
outs
js
xchg
imul
cmp
push
scas
jle
sbb
loopne
jmp
pop
and
cmp
sbb
cli
push
movs
fisttp
mov
dec
xchg
mov
sbb
stos
outs
ret
jl
ror
out
stos
aaa
movs
out
bound
lahf
inc
mov
cwde
loop
push
sbb
inc
ret
fst
cld
fcomp
add
retf
and
out
inc
sar
jbe
stc
push
mov
xchg
lods
mov
fadd
sub
xor
shl
mov
push
ins
and
adc
in
popf
dec
push
mov
icebp
pop
push
cld
fistp
popa
retf
(bad)
pop
imul
vshufps
sahf
push
mov
icebp
outs
pop
lahf
adc
daa
test
sbb
xlat
cdq
outs
(bad)
push
fs
jp
mov
lock
inc
push
ins
int
jno
and
fcomp
(bad)
aaa
mov
ret
add
mov
out
add
jno
mov
loop
addr16
icebp
jmp
cmps
into
xchg
sti
hlt
lods
enter
inc
sbb
mov
cld
xchg
jbe
push
mov
push
retf
mov
jb
add
iret
bound
or
cmp
stos
cmps
inc
xchg
mov
ja
xor
sbb
xor
dec
call
ja
inc
stos
inc
push
ret
xchg
jecxz
test
add
sub
xchg
or
push
int3
test
inc
(bad)
loopne
repz
dec
cmps
lahf
push
mov
int3
mov
jae
data16
jbe
lods
mov
fiadd
or
daa
or
cmps
inc
cli
fld
dec
scas
or
leave
dec
pop
in
and
xchg
cmp
dec
stos
scas
cld
jge
mov
retf
loop
test
and
xor
mov
sub
or
pushw
es
fs
movs
sbb
dec
(bad)
pop
test
xchg
mov
(bad)
mov
loopne
sub
(bad)
pusha
retf
add
iret
fild
or
mov
mov
outs
shr
leave
pusha
das
cwde
in
adc
push
lods
or
sub
inc
mov
ins
(bad)
ds
pop
add
pop
in
inc
mov
fidivr
gs
shr
sbb
mov
ror
inc
arpl
out
inc
inc
test
and
lock
ja
xchg
cmp
gs
xchg
and
mov
mov
jmp
mov
jo
rol
out
dec
ret
pop
loopne
jns
xchg
in
or
mov
adc
pop
mov
sub
bound
pop
ror
xor
es
fimul
inc
inc
inc
adc
cmps
pop
fld
imul
cmps
fbld
push
mov
dec
pushf
jge
das
dec
fisttp
adc
sbb
xchg
stos
sar
or
push
nop
js
lock
out
pop
arpl
sbb
fwait
dec
lea
cmp
cmc
or
push
pop
mov
dec
mov
mov
xor
fst
push
xchg
scas
dec
and
cmp
push
add
(bad)
jg
or
loopne
das
test
stos
jb
outs
dec
or
ret
jmp
sbb
mov
and
mov
daa
and
inc
movs
dec
push
mov
jmp
or
mov
cmp
add
sahf
xchg
jecxz
push
pusha
dec
loop
mov
and
jp
cs
stos
fwait
sub
pop
dec
cmp
push
nop
xchg
and
mov
cmp
or
ins
ret
push
mov
rcl
push
pop
jle
pop
in
arpl
inc
sbb
mov
sbb
mov
cmc
push
and
es
into
movs
out
cmps
test
xor
mov
xor
fwait
adc
sar
call
nop
inc
push
add
mov
or
cs
iret
push
xchg
jecxz
sub
push
aas
sub
xchg
mov
xchg
fdiv
aas
into
and
nop
js
sar
loope
(bad)
movs
ins
add
jle
test
(bad)
mov
cli
or
inc
jecxz
jmp
mov
repnz
out
outs
imul
xlat
test
out
inc
cld
fistp
sti
and
test
xchg
outs
xor
jae
and
xor
les
dec
inc
and
cmc
retf
mov
inc
mov
sub
cmps
inc
pop
ins
push
test
push
mov
lds
test
das
xor
add
call
in
push
pushf
rcr
mov
ret
call
cwde
jb
pop
cmp
ins
dec
and
dec
js
sub
scas
nop
inc
retf
push
push
and
ins
add
mov
les
dec
aaa
xchg
inc
fstp
jne
jecxz
mov
fwait
and
retf
iret
shl
fsub
xchg
sbb
call
xchg
pop
dec
adc
pop
xchg
fbstp
ret
leave
nop
sub
std
inc
(bad)
int3
test
mov
push
mov
adc
mov
(bad)
jge
dec
aaa
mov
xor
mov
inc
push
rcr
pop
scas
sub
dec
mov
add
int3
cli
movs
imul
addr16
pusha
ja
adc
and
and
shl
call
jbe
push
xchg
mov
or
or
sub
and
jne
scas
or
add
outs
adc
loopne
or
cmp
sbb
not
cld
fist
sub
adc
in
loop
xchg
stos
(bad)
mov
mov
ins
sub
sbb
mov
and
push
adc
mov
call
add
in
add
call
in
sub
add
xor
ret
sbb
or
loop
inc
lea
inc
jg
dec
jb
in
movs
xor
es
cmp
mov
xor
and
cmp
adc
dec
sbb
jbe
(bad)
test
mov
and
(bad)
or
mov
pop
cld
pop
stos
popf
sbb
sub
xor
enter
lods
(bad)
push
fisub
clc
cli
push
adc
push
ja
inc
imul
adc
stos
js
fcom
and
enter
call
(bad)
(bad)
fld
ds
sbb
test
push
andps
mov
call
push
(bad)
mov
ret
int
leave
sub
loop
jge
clc
addr16
and
sub
(bad)
shl
add
hlt
rcl
push
push
and
or
daa
test
enter
add
cmp
ins
push
or
and
test
dec
out
sbb
dec
int3
cmp
jns
mov
mov
jmp
jmp
xor
mov
xchg
mov
jmp
mov
cmp
sbb
lods
xor
inc
pop
stos
leave
rcr
arpl
cdq
cmp
shl
bound
fdivr
lods
clc
mov
mov
push
mov
shl
aas
xlat
call
xlat
cmp
inc
adc
cmp
ret
lahf
or
cmp
add
sub
(bad)
enter
mov
in
aas
fstp
or
cmc
nop
jbe
sbb
xchg
push
sbb
push
jl
jo
jbe
xor
ja
(bad)
push
cmp
mov
mov
xor
cmp
imul
out
and
add
in
mov
jno
add
or
mov
sti
xchg
jge
out
imul
lods
pop
dec
adc
push
cmp
pcmpgtw
mov
test
xchg
add
mov
jp
xchg
and
ds
sbb
shl
or
sbb
sbb
fs
shr
mov
and
(bad)
mov
sub
or
(bad)
cs
out
cmc
add
popf
std
mov
pop
and
fdivr
aam
or
xor
inc
jo
icebp
adc
pop
dec
add
mov
cmps
out
mov
mov
mov
sub
gs
cmp
(bad)
fwait
test
pop
das
xor
dec
sbb
inc
rcl
xchg
pop
xchg
push
sub
mov
aad
mov
out
(bad)
adc
repz
mov
sbb
mov
sbb
and
adc
mov
jecxz
repnz
and
ss
mov
lods
and
add
xor
leave
das
(bad)
or
mov
or
mov
clc
inc
mov
and
shr
pop
ret
add
movs
jl
cmp
inc
mov
js
push
inc
out
push
pop
adc
jb
push
out
(bad)
push
push
sub
inc
popf
mov
sbb
jbe
es
int3
adc
jae
lahf
aas
cdq
jecxz
rol
push
xor
pop
push
add
mov
adc
outs
enter
pusha
repz
sub
jo
lock
arpl
ret
stc
in
and
fiadd
sbb
push
rol
pop
lods
enter
mov
cmps
jmp
idiv
sub
inc
push
fwait
mul
js
lock
adc
push
(bad)
cld
adc
(bad)
dec
in
pop
fimul
sbb
mov
xor
push
out
add
not
loopne
xchg
adc
and
out
shr
push
cmp
mov
icebp
dec
inc
rcr
ds
sti
mov
pushf
ss
sub
add
sub
jb
xchg
or
or
mov
mov
popf
jp
xchg
sub
test
fsubrp
in
shl
add
std
mov
test
cmps
push
xchg
xor
ja
sbb
(bad)
dec
push
pushf
sahf
das
sahf
xchg
cs
xchg
dec
dec
clc
pop
pop
(bad)
cdq
fistp
(bad)
ret
test
jnp
mov
pop
jo
fisubr
mov
adc
push
dec
sub
or
ins
push
mov
mov
jae
in
adc
xchg
loopne
jmp
mov
xchg
jl
popa
jae
mov
xchg
clc
mov
aaa
sbb
rcr
leave
sti
loope
dec
retf
xchg
aam
repz
repnz
push
or
jnp
ret
and
das
dec
dec
or
and
jmp
fmulp
mov
out
iret
xchg
push
hlt
xchg
cmp
ins
pop
cwde
dec
mov
xor
inc
inc
outs
push
push
imul
add
ror
inc
jmp
call
pop
lods
push
jmp
out
push
ret
mov
push
or
daa
mov
dec
jg
pop
jmp
fst
mov
or
lahf
adc
adc
test
mov
cmp
sbb
cld
mov
movs
pushf
dec
scas
cld
nop
jnp
sti
ror
push
(bad)
mov
adc
test
jae
sub
cmp
adc
mov
add
mov
jle
sub
mov
mov
in
lds
cmc
mov
adc
cmp
push
adc
lods
mov
shl
(bad)
jl
popa
fisubr
jns
pop
idiv
or
ret
add
arpl
xchg
xlat
or
pop
in
push
pop
mov
jae
push
dec
sar
adc
push
adc
in
xchg
ret
std
jno
test
je
cmp
fsubp
inc
loopne
fcomp
jl
xor
cdq
jmp
dec
test
std
mov
loop
mov
cmp
mov
inc
inc
sbb
xchg
nop
lahf
inc
adc
aam
movs
inc
pop
dec
dec
shl
mov
and
pop
scas
add
sub
das
push
mov
icebp
jmp
cld
outs
xor
aas
xchg
stos
movs
ret
in
jbe
pop
dec
cmc
push
adc
and
add
or
sbb
in
cmovb
ins
pusha
mov
jmp
cld
jg
and
pop
inc
and
mov
test
les
mov
call
hlt
lahf
les
outs
js
fcmovnbe
ds
jmp
dec
loopne
imul
je
int
ins
mov
sub
in
loopne
jb
movs
mov
enter
popa
dec
mov
das
out
(bad)
mov
sub
push
inc
fnstsw
push
stc
xchg
xor
in
popf
sbb
cmps
cld
je
dec
xchg
aaa
xor
push
add
retf
jl
and
stos
sub
in
push
imul
fisubr
mov
mov
sbb
(bad)
scas
sub
mov
cmc
add
xchg
outs
sbb
ror
(bad)
stc
sub
fsubp
push
xchg
test
mov
pop
pop
ins
push
sbb
dec
sbb
out
jl
sub
cmp
fadd
jns
daa
mov
fsubr
loopne
or
lea
or
mov
mov
(bad)
mov
(bad)
popa
sbb
gs
ds
mov
xchg
imul
adc
mov
popf
fld
adc
inc
icebp
cmp
xchg
jmp
push
pop
pop
xchg
lock
cmp
and
fisttp
cli
in
mov
and
stos
push
fst
leave
test
pusha
mov
mov
das
lock
mov
jp
(bad)
push
inc
cmp
sub
xchg
repnz
popf
xor
ins
sar
xor
mov
icebp
jl
out
or
pusha
mov
xchg
xchg
mov
cmp
mov
pop
je
mov
fchs
(bad)
or
sub
repz
sbb
or
mov
and
mov
loopne
cwde
adc
mov
stc
cmp
pop
fs
xchg
adc
scas
cs
adc
ins
add
xor
add
cmc
je
lds
add
xchg
inc
jnp
xchg
(bad)
les
or
xchg
xor
or
inc
fwait
jns
dec
cmp
inc
cmps
lea
imul
loope
and
mov
mov
call
shl
div
clc
and
inc
imul
inc
push
dec
dec
shr
adc
aas
jae
push
jp
mov
int
and
fdivr
into
cld
jne
inc
push
stos
mov
and
cmp
or
adc
adc
or
js
icebp
iret
ss
inc
in
imul
inc
jbe
pusha
mov
movs
sbb
lock
sub
ja
sbb
xchg
test
jo
mov
cmp
mov
into
push
imul
sbb
aas
pop
aad
jl
cmp
inc
adc
rol
icebp
cwde
dec
and
and
popa
cmp
add
sbb
ja
fld
or
aam
xor
enter
dec
push
mov
outs
xlat
xor
(bad)
jle
mov
out
dec
push
jo
jmp
xchg
imul
imul
add
call
shl
loope
ja
cwde
repnz
push
mov
pop
lahf
dec
push
fstp
mov
fcomp
or
and
fs
jne
and
or
inc
push
lods
lock
mov
sub
inc
mov
and
or
addr16
mov
sbb
int
fdiv
ret
jno
xlat
push
mov
pop
cwde
or
xchg
test
push
es
mov
push
dec
out
mov
cmp
ret
adc
xacquire
xchg
leave
mov
cmps
leave
out
xchg
lock
pop
rol
in
pusha
call
je
cmc
xor
pop
int3
sar
out
push
fcomp
mov
mov
dec
inc
adc
pop
or
rcl
cmps
xchg
call
rol
and
pusha
loop
stc
jle
popf
fcom
mov
xchg
inc
cmp
mov
or
(bad)
pop
sub
mov
cmps
or
scas
push
inc
pop
sub
jno
jne
in
outs
sub
outs
inc
popf
bound
or
xchg
xchg
add
out
mov
jge
xor
fidiv
mov
push
mov
jle
jb
in
fincstp
gs
enter
mov
int
xor
sbb
movs
inc
jecxz
push
mov
xor
test
add
enter
in
(bad)
dec
and
imul
mov
enter
aas
mov
aaa
cmp
and
xchg
les
lahf
jno
pop
mov
retf
mov
sub
sbb
mov
add
cmp
xor
ins
mov
xchg
cmp
lods
jg
push
shr
xlat
mov
loopne
les
stc
loop
movs
mov
pop
pop
jmp
jae
inc
push
sbb
add
in
aas
daa
loopne
xor
loope
(bad)
fldcw
adc
pop
mov
push
pusha
(bad)
call
ins
mov
jmp
mov
cdq
and
das
and
sub
ja
clc
daa
jns
mov
mov
mov
and
and
xchg
pop
inc
jbe
add
jmp
sub
and
pop
fsubr
int
int3
in
aaa
jnp
test
dec
inc
dec
cmps
dec
(bad)
pop
xchg
sub
and
or
jno
shl
cmps
mov
(bad)
cdq
pop
shl
jmp
stos
xchg
inc
sahf
test
aas
lea
ja
sbb
inc
int3
popa
fbld
dec
and
fs
mov
jp
or
mul
xchg
xor
pop
in
fsub
cmp
iret
ins
addr16
aaa
and
sti
retf
(bad)
aam
mov
inc
inc
fsub
pop
inc
lock
push
enter
cs
pop
mov
ret
xchg
cmp
cmp
pop
dec
push
mov
gs
pop
mov
sbb
int
nop
pop
mov
imul
iret
in
xor
cmps
shl
pop
pop
adc
jno
xchg
fistp
test
in
inc
cmp
adc
sub
je
or
iret
gs
(bad)
aad
push
pop
mov
jo
adc
jne
xor
(bad)
dec
lods
sub
sub
daa
dec
sub
popa
popf
ss
out
mov
adc
das
mov
(bad)
pop
adc
stc
je
popf
ins
adc
clc
jmp
mov
sub
lods
xchg
jmp
in
ret
xor
jmp
xor
jg
test
jecxz
sbb
cmps
das
sub
dec
mov
call
mov
lea
cmp
or
add
loopne
leave
pop
ret
adc
inc
xor
aas
xchg
jb
(bad)
fst
cwde
call
repnz
retf
ret
cmc
repz
mov
add
mov
push
pop
dec
aas
mov
(bad)
mov
lock
ds
retf
jmp
test
outs
ds
pop
rcl
push
test
(bad)
lahf
adc
mov
cmp
test
fldenv
sub
inc
push
mov
pop
outs
movs
cmp
xchg
imul
xchg
pop
jg
cmp
push
in
stos
rol
adc
pop
icebp
or
(bad)
sbb
fistp
cmp
mov
imul
or
jb
mov
loop
(bad)
mov
lds
mov
xor
jb
mov
fst
fstp
sub
jo
cmp
pop
(bad)
test
jnp
xchg
cli
sbb
add
xor
lods
ds
pop
jnp
sbb
int3
sbb
push
ins
jns
pushf
in
xchg
sbb
call
xor
cmps
mov
xor
sbb
cmps
icebp
and
std
ret
out
(bad)
ins
mov
push
fwait
lods
cmp
fiadd
(bad)
fsubr
cwde
or
push
in
cmp
cdq
lods
mov
test
jb
lock
hlt
mov
dec
xchg
imul
int3
test
pop
xor
cmps
data16
(bad)
push
push
xlat
movs
dec
add
cmp
pusha
outs
push
jb
dec
loopne
and
add
jmp
cmps
cmc
mov
cs
iret
call
icebp
call
xchg
jo
cmp
out
cmp
cld
leave
xchg
icebp
mov
add
rol
inc
sub
into
pop
and
in
(bad)
call
std
sub
lahf
sbb
cmp
nop
rcr
xor
xor
punpcklwd
xor
dec
sub
mov
mov
mov
or
fsub
retf
into
out
shl
xor
arpl
pop
dec
paddsb
mov
popa
mov
jle
or
cmp
fadd
clc
rol
add
xchg
inc
xor
dec
fisubr
icebp
leave
dec
push
bound
pusha
push
repz
or
mov
ds
jmp
scas
test
jb
leave
push
xor
cmp
jbe
js
sti
xor
repnz
jnp
lds
pop
pop
mov
mov
pop
xchg
inc
pop
pusha
repnz
mov
jb
cld
stos
retf
retf
jnp
js
sub
(bad)
aaa
popf
in
sbb
shr
sbb
out
inc
cdq
cwde
hlt
pop
jbe
dec
mov
lds
push
stos
inc
cmps
fild
fwait
mov
cld
mov
fwait
aam
icebp
sbb
ficomp
lea
pusha
idiv
pop
mov
mov
and
jb
test
fwait
ins
xchg
clc
adc
fdiv
(bad)
sub
mov
push
cwde
xchg
stc
daa
stos
(bad)
or
ficomp
mov
mov
push
fiadd
and
or
fdivr
sbb
dec
push
rol
imul
cmp
dec
push
aaa
jecxz
fs
cmp
ret
cwde
iret
pushf
adc
jno
add
xchg
mov
retf
(bad)
sbb
mov
adc
inc
mov
adc
shl
cmps
loopne
data16
mov
je
mov
aam
fisub
sbb
in
cmc
cmp
js
sub
adc
push
in
mov
xchg
das
fstp
sub
outs
into
dec
into
(bad)
mov
adc
es
call
aas
mov
cwde
movs
pop
and
or
jno
adc
pop
ja
daa
push
rol
ins
sbb
add
jmp
xor
sbb
ins
icebp
fwait
mov
sub
mov
mov
jo
pop
pop
int
(bad)
loop
hlt
js
outs
int3
xor
popf
mov
inc
sahf
push
push
aad
jl
jns
in
in
fwait
loop
test
mov
addr16
call
xchg
mov
cmps
test
mov
jg
pop
mov
cmc
loope
mov
ins
jae
xchg
lock
fcmovnb
sar
adc
stos
clc
inc
(bad)
sub
mov
sti
inc
xchg
fmul
or
pushf
enter
sbb
xchg
pop
push
cmp
mov
out
push
and
push
std
or
dec
scas
out
and
and
jmp
xor
xchg
sbb
cmps
push
hlt
jmp
push
in
cs
pop
ins
stos
ja
pop
rol
aaa
mov
sbb
aas
jmp
(bad)
dec
inc
rcl
adc
lahf
cmps
xchg
and
mov
nop
mov
push
pop
push
cmp
add
xchg
cmp
mov
nop
cli
fbld
es
sbb
or
test
add
cmp
jae
mov
or
cmps
jl
xor
nop
imul
pop
inc
mov
sar
outs
rol
test
fcom
jb
mov
ins
ret
out
data16
repz
retf
xchg
sbb
aaa
and
lea
into
inc
mov
adc
mov
dec
mov
ins
mov
(bad)
cmp
or
ret
mov
sbb
nop
dec
fwait
or
or
adc
stos
inc
adc
pop
add
push
pop
shr
je
push
xchg
push
jno
jecxz
inc
fadd
dec
push
push
jl
ret
add
and
push
push
and
popf
or
mov
neg
add
and
push
push
lods
sbb
push
push
mov
hlt
jp
bound
inc
jne
fcom
cmp
sbb
mov
jo
add
(bad)
inc
retf
xor
cld
pop
and
and
mov
aas
xor
jle
cmp
test
xchg
add
ss
xchg
jp
ret
scas
lods
push
call
sahf
or
nop
aas
mov
rcr
cld
ins
ret
mov
jnp
jae
dec
repnz
aas
call
fstp
rcl
ret
jecxz
mov
cwde
add
stos
dec
push
and
mov
stos
pop
fwait
push
dec
sub
xor
jbe
(bad)
int
add
xchg
add
adc
xchg
cmp
lock
jns
stos
aas
xchg
mov
stc
add
dec
shl
in
cwde
cs
jo
mov
push
push
mov
shl
mov
inc
ret
fidivr
sbb
mov
call
mov
stos
mov
jl
inc
push
es
loope
jp
loope
call
sahf
movs
mov
or
mov
hlt
dec
jle
cmc
mov
xor
dec
add
ja
pushf
je
mov
mov
inc
inc
std
inc
popf
push
sti
or
cmps
movs
and
mov
jnp
rcl
jno
fsubr
cld
adc
xor
dec
sbb
and
sbb
int3
ror
or
cmp
or
(bad)
(bad)
push
pop
dec
loope
pop
enter
test
test
div
nop
adc
das
lock
inc
mov
loop
test
push
pop
jmp
mov
mov
loop
sbb
cld
and
loop
jns
sub
mov
jmp
jmp
sti
mov
call
pop
inc
push
cmp
xchg
pop
(bad)
aas
stos
out
jmp
ret
imul
inc
mov
sbb
aaa
ds
mov
add
nop
push
scas
push
sub
in
fstp
pop
mov
or
out
test
pop
fist
cmp
(bad)
and
test
sbb
loopne
push
(bad)
push
imul
inc
jp
(bad)
add
jl
pop
push
pop
jb
icebp
loopne
dec
adc
add
mov
stos
or
in
int
mov
cmp
add
loop
pop
jmp
push
sub
inc
lods
xlat
add
jle
in
add
pop
mov
pop
sub
lahf
icebp
sbb
dec
aam
cld
push
data16
mov
fwait
inc
and
dec
mov
cmp
lock
cli
icebp
mov
and
xchg
jmp
dec
stos
mul
xchg
add
pop
push
(bad)
xchg
stc
mov
push
std
fwait
jo
jge
call
pop
mov
dec
movs
jno
xlat
mov
cmp
mov
aad
test
mov
cli
int
and
add
ja
retf
sub
mov
pusha
icebp
data16
and
mov
cmp
dec
cs
mov
test
cmc
sbb
scas
dec
sti
scas
test
jo
mov
popf
xchg
es
lds
repz
movs
(bad)
aad
call
jnp
loope
and
pop
mov
cmp
inc
lahf
lock
xchg
clc
stc
cmp
dec
(bad)
fbld
loope
rcl
in
inc
push
adc
jle
pop
pushf
clc
mov
js
sbb
sti
push
or
xor
add
jae
mov
mov
cmps
push
je
enter
mov
dec
fwait
xchg
dec
repz
mov
stc
jmp
mov
push
jl
sub
inc
test
pop
inc
test
les
test
arpl
inc
cmp
lods
in
(bad)
dec
fistp
aas
sbb
outs
mov
cmp
les
push
(bad)
pop
aad
and
popa
jle
fild
jmp
pop
jle
mov
jecxz
dec
push
push
xor
out
sub
retf
jnp
inc
sbb
sub
mov
mov
popf
stc
retf
aam
test
call
and
std
neg
fld
mov
clc
data16
lods
sub
aaa
in
in
sub
or
push
or
pop
add
pop
pop
dec
adc
adc
loopne
jae
imul
dec
sub
pop
sbb
rep
cmc
call
push
arpl
fsub
and
inc
cld
call
imul
daa
ficom
ret
fs
cld
mov
shl
inc
bound
lahf
xchg
cmp
jae
icebp
loope
dec
mov
push
movs
and
jecxz
sbb
cmp
fiadd
fst
data16
mov
mov
adc
ins
inc
pushf
sub
out
retf
sbb
daa
stc
and
and
ins
loope
inc
fidiv
adc
aas
dec
pushf
movs
ins
pop
(bad)
fwait
adc
inc
push
mov
je
xor
loope
mov
cmps
ret
inc
vpminsw
xor
mov
nop
mov
enter
sub
fadd
jge
fbld
push
xor
addr16
ret
(bad)
dec
mov
pop
shl
sub
out
cmp
jb
stos
jb
scas
retf
or
xor
outs
scas
outs
fist
push
icebp
mov
out
arpl
out
mov
sbb
push
adc
jno
bound
int3
and
cmps
cwde
inc
call
loop
fsub
sub
jecxz
pop
stos
jp
jno
xlat
pop
scas
pop
bound
inc
push
(bad)
fwait
jae
sub
in
and
pop
fimul
adc
outs
mov
and
es
arpl
idiv
ret
sub
int3
sub
sti
jns
mov
and
xchg
adc
cmp
fwait
dec
cdq
mov
rol
mov
mov
dec
loope
sub
aam
pop
jbe
add
ds
ficomp
jmp
xor
ret
aas
fistp
cmp
inc
jbe
cmp
movs
cli
mov
cwde
mov
in
jl
retf
jnp
cld
scas
sub
mov
pushf
cmp
xor
dec
jge
adc
imul
xchg
mov
sub
or
sub
xchg
inc
xchg
ror
or
pop
jmp
es
jb
xor
fld
outs
mov
pop
retf
push
add
std
adc
sub
retf
push
xor
stc
xor
xlat
push
mov
xor
jmp
xor
repnz
xchg
inc
dec
in
out
dec
popf
out
repnz
aas
jb
mov
ins
cmp
jg
(bad)
into
push
mov
inc
sbb
xchg
mov
dec
lds
push
mov
push
mov
in
(bad)
into
add
xor
mov
sbb
fmul
mov
imul
cmp
mov
mov
inc
and
lock
out
jg
cmp
stos
cld
dec
ret
ret
jae
int
imul
iret
jnp
xchg
inc
(bad)
repz
jns
xchg
push
push
xchg
ins
aam
push
add
mov
jmp
fcom
fistp
mov
mov
ds
mov
jnp
sbb
iret
push
cdq
adc
test
mov
and
mov
lahf
data16
push
mov
mov
and
xchg
call
test
hlt
push
pop
jl
mov
inc
pop
jns
dec
scas
sub
dec
nop
int
(bad)
add
pop
bound
pop
pop
sub
push
jbe
mov
adc
imul
jecxz
into
aam
push
ins
imul
in
cmps
add
stc
xor
or
or
shr
sbb
xchg
or
call
jle
ja
add
out
ret
xchg
mov
sub
mov
xor
cmp
and
push
jmp
in
mov
sub
sbb
push
push
add
mov
outs
out
test
ret
dec
adc
leave
mov
nop
jmp
aaa
fisttp
cmp
je
pop
adc
mov
or
loop
aas
pusha
adc
rol
out
in
mov
push
push
xor
out
mov
lahf
shr
sbb
cs
cs
jle
jne
inc
pop
add
jecxz
aaa
sub
lock
mov
mov
movs
mov
in
out
jmp
jge
xchg
mov
cli
stos
dec
push
stos
xor
xchg
out
aas
push
dec
jg
pop
jg
out
popa
cmps
rol
jmp
adc
adc
into
adc
inc
push
or
dec
inc
inc
fwait
iret
jp
pop
scas
xor
clc
jge
ins
daa
jle
fnsave
(bad)
push
scas
(bad)
mov
push
(bad)
int
cmp
inc
call
sti
or
cdq
fcomp
(bad)
cmps
pop
or
sub
ins
call
xor
sar
or
jbe
jb
neg
mov
mov
sub
jo
mov
aaa
out
stos
and
mov
stc
das
or
sbb
mov
dec
retf
nop
push
xor
rcl
sbb
push
mov
mov
cmp
mov
cs
pop
mov
and
cmp
ret
mov
mov
mov
(bad)
(bad)
sahf
push
xor
sar
dec
push
cmp
dec
and
add
jmp
lock
and
cmp
scas
push
adc
imul
loopne
xor
stos
jge
int
ins
jmp
mov
(bad)
push
xchg
jl
xor
pop
rcl
test
sub
cs
aam
pop
out
xchg
and
or
aaa
(bad)
sub
mov
push
dec
and
inc
xor
arpl
scas
das
dec
rol
stc
push
test
add
fild
les
xchg
outs
jne
pop
jge
loopne
out
and
cmps
(bad)
out
add
fimul
sub
push
retf
mov
jne
or
ins
loope
cmp
pop
or
jno
or
push
ret
push
daa
in
stos
inc
inc
ins
jmp
mov
pop
and
mov
xor
or
(bad)
mov
xor
(bad)
clc
jmp
mov
movs
cwde
jbe
sbb
inc
dec
fmul
loopne
shl
or
fimul
ja
clc
inc
mov
sbb
daa
out
or
mov
leave
jb
ja
mov
pop
xchg
or
addr16
retf
fist
out
das
mov
es
jb
shl
(bad)
push
rol
jno
add
test
lea
mov
fsubr
xor
fs
rol
mov
in
mov
mov
add
dec
in
pop
xor
les
xchg
push
aam
mov
out
sbb
xchg
retf
add
clc
and
ret
(bad)
sub
(bad)
xchg
imul
jo
jbe
nop
push
sub
int3
sub
dec
and
xor
mov
cmc
pop
sbb
cs
imul
adc
push
fimul
add
mov
pop
mov
cwde
inc
iret
(bad)
and
popa
arpl
xchg
movs
iret
enter
sub
daa
inc
scas
xchg
ja
jbe
sub
and
jmp
stc
cmp
sub
pop
rcl
les
je
adc
xchg
jmp
mul
dec
cmp
inc
or
aas
cmps
pop
sub
inc
call
loopne
pop
add
(bad)
nop
xor
(bad)
jb
pushf
loop
jecxz
jnp
popa
in
in
into
dec
ret
push
jb
fstp
cmp
fld
xchg
jne
inc
dec
mov
mov
sub
push
inc
jns
div
xor
or
and
ret
push
test
pop
sbb
xchg
mov
sbb
mov
cmp
jbe
sbb
and
ins
mov
aaa
fcmovb
adc
jge
cmp
bound
sahf
ds
retf
fld
lods
pop
std
inc
pop
or
outs
jno
lods
fsubr
xchg
fidiv
jmp
xchg
jmp
sbb
sbb
xor
mov
sub
fwait
rcr
push
push
ret
xlat
(bad)
outs
sub
mov
xchg
add
cmp
or
jmp
ja
adc
cmp
dec
xchg
rol
xchg
shl
imul
pop
in
std
mul
out
push
inc
(bad)
jns
out
adc
pop
add
xchg
scas
punpckhdq
push
mov
iret
push
xchg
dec
pop
cmp
inc
cmps
xchg
jmp
pinsrw
xchg
out
dec
xchg
fsubr
or
cmp
sbb
push
leave
cmp
add
out
repz
add
mov
cmp
enter
jp
push
pushf
and
imul
adc
dec
mov
shl
(bad)
jb
mov
push
cmps
addr16
mov
loop
jl
pop
pop
adc
int3
pop
rcl
xlat
retf
scas
movs
dec
mov
cs
stos
ret
ja
(bad)
jb
sti
lods
ror
popa
fsub
imul
xor
hlt
adc
ss
and
dec
jmp
mov
ss
cdq
jle
dec
dec
mov
xchg
outs
cmp
ins
(bad)
in
xchg
jae
add
bsf
jecxz
retf
xor
sbb
and
fdiv
mov
sub
dec
sbb
lock
sbb
or
adc
fistp
int
inc
lods
or
push
dec
sub
call
(bad)
out
lds
test
pop
(bad)
and
jmp
xchg
jmp
loopne
pop
push
pop
inc
test
fisttp
icebp
xchg
jae
pushf
xchg
arpl
mov
ret
or
enter
stos
add
add
cmc
stos
sub
call
and
in
sub
stos
inc
out
stos
adc
push
mov
popa
adc
scas
inc
sub
adc
loop
xchg
lds
fcom
cmp
mov
ss
fadd
cmp
sub
sub
call
jl
and
mov
les
(bad)
test
into
les
hlt
add
and
cmp
push
or
loopne
mov
jp
lods
dec
ss
fld
mov
int3
scas
mov
mov
jle
mov
fstp
xchg
ds
ins
sub
loop
push
fwait
ss
retf
mov
push
and
arpl
and
inc
or
(bad)
arpl
pop
xchg
mov
push
mov
repnz
add
xchg
sub
shl
ret
pushf
fwait
fs
fnsetpm(287
push
pop
mov
jl
js
icebp
add
call
test
jb
or
mov
pop
lock
shr
sub
jno
(bad)
push
pop
enter
jae
je
jl
jnp
(bad)
scas
fistp
ret
stos
mov
inc
stos
loop
mov
mov
cmp
retf
in
pop
and
mov
mov
mov
iret
movs
xchg
(bad)
repz
xchg
lea
stc
or
sbb
jb
mov
ds
dec
mov
jnp
(bad)
(bad)
cmp
jecxz
test
shr
sbb
pop
push
into
ret
mov
sbb
iret
adc
cmp
in
lahf
imul
ror
jl
add
(bad)
aad
div
imul
xor
retf
std
inc
mov
mov
jbe
and
sub
pop
mov
ja
mov
and
fmul
out
daa
mov
mov
xchg
xchg
xchg
inc
cmc
ficom
cmps
add
inc
dec
mov
pushf
pop
mov
pop
in
jge
push
xor
push
test
jmp
aas
fcomip
cmps
xor
mov
mov
dec
ret
popf
dec
test
and
push
fcompp
adc
sub
add
fisubr
jmp
inc
sbb
mov
xchg
cmp
aaa
xchg
inc
mov
aam
sub
(bad)
mov
das
adc
loope
into
aaa
cmp
pop
fwait
shl
or
jg
inc
(bad)
imul
jge
mov
cmp
daa
les
dec
dec
int3
fild
mov
cmps
in
data16
inc
cmc
neg
push
xchg
repz
mov
aaa
push
mov
in
jl
cmp
push
fisubr
inc
lea
xchg
push
movs
sub
imul
dec
imul
aad
jbe
retf
xchg
push
pop
xchg
jmp
sub
in
jmp
ret
or
push
mov
fistp
loopne
mov
fdiv
push
add
pop
mov
dec
jae
lock
repnz
xchg
dec
xchg
imul
jnp
pop
add
std
paddusw
aam
sub
cli
sbb
inc
sar
cmp
mov
lods
xor
fimul
in
nop
and
fnstcw
fidiv
mov
dec
inc
movs
std
cmp
(bad)
adc
hlt
pop
adc
push
xor
sbb
(bad)
sub
(bad)
add
cld
adc
push
pop
push
loopne
cs
call
ret
pop
sub
arpl
dec
pop
out
ret
push
jne
add
scas
or
fdiv
pop
push
dec
gs
xor
aad
lea
(bad)
pop
stc
int3
or
or
leave
jmp
dec
in
or
xchg
cmps
mov
(bad)
js
and
bound
sbb
xchg
mov
pop
repnz
sar
pop
(bad)
pusha
fnstsw
(bad)
inc
cmp
fild
fucom
jl
popa
pop
jb
pop
imul
repz
fisubr
pop
inc
sar
pop
test
push
test
mul
cmc
dec
idiv
pop
xor
scas
ds
ret
cwde
jg
mov
scas
es
stc
aas
js
push
mov
sbb
imul
push
icebp
xor
xchg
mov
fwait
stc
and
gs
cmp
outs
sbb
cmp
(bad)
retf
add
jae
pop
enter
ffree
shl
sub
imul
lods
es
push
fidivr
jb
ins
push
and
mov
xchg
loop
xor
lea
inc
data16
lea
add
mov
jge
icebp
lods
sbb
and
fdivrp
cmc
mov
cwde
in
inc
out
lea
iret
call
xchg
test
add
mov
adc
lods
jmp
sbb
inc
adc
fisubr
sbb
ret
sub
add
pop
inc
mov
faddp
cmp
cmp
cdq
add
rol
sbb
mov
cmp
les
fbld
movs
ds
cwde
mov
shl
mov
sub
xchg
inc
stos
sub
fbstp
dec
pmullw
xchg
icebp
push
or
sub
data16
cmp
cdq
sbb
mov
push
sbb
jp
scas
fild
and
mov
adc
sub
retf
ret
loope
and
mov
add
cmp
or
rol
adc
aam
sbb
test
addr16
call
iret
sbb
xor
out
inc
sub
lods
jbe
js
push
jmp
into
sub
or
mov
outs
out
and
dec
es
fist
dec
(bad)
push
scas
inc
mov
xchg
nop
ss
mov
pop
fisub
(bad)
dec
hlt
sahf
mov
xor
pop
or
xchg
xor
ss
mov
popa
lods
(bad)
pop
mov
pop
mov
cdq
mov
mov
xchg
sbb
nop
push
pop
shr
cmps
(bad)
adc
or
adc
fdiv
inc
mov
jne
dec
jg
in
xor
pop
add
sar
inc
jmp
lahf
scas
icebp
aas
fs
mov
add
enter
sbb
add
stos
icebp
rcl
clc
mov
xchg
or
(bad)
es
mov
xchg
adc
cmps
pop
push
lods
mov
xchg
cmps
fiadd
cmp
push
sbb
push
mov
inc
adc
jae
lahf
cld
jecxz
ja
paddd
pop
stc
add
dec
add
or
push
dec
int3
xor
adc
repnz
pop
je
retf
cdq
les
dec
pop
rcl
pop
dec
add
in
fs
nop
xor
dec
call
arpl
int3
and
mov
shr
arpl
dec
sti
dec
mov
ins
gs
push
cmc
jle
sub
mov
lods
sub
pusha
xchg
cmc
cmp
mov
add
cmp
pop
outs
test
add
ror
sbb
das
push
inc
enter
out
(bad)
or
jbe
div
dec
cmp
hlt
jle
dec
pop
lock
xchg
jb
jnp
aad
addr16
pop
lds
test
test
pop
mov
test
out
cdq
add
inc
clc
outs
push
into
test
mov
fsubr
push
sti
or
add
dec
or
mov
leave
cmp
sub
mov
pop
inc
inc
daa
adc
inc
hlt
push
in
cmc
xchg
push
sub
lea
leave
mov
pop
stos
pop
scas
into
dec
cli
sbb
mov
mov
fldcw
fs
xchg
es
push
cmp
scas
lock
retf
push
ror
xchg
mov
movs
test
cmc
sbb
adc
loope
mov
(bad)
movs
rcr
jns
sbb
mov
aad
sub
aam
mov
ins
adc
jg
dec
add
sbb
adc
mov
aas
xor
mov
or
cmps
jmp
cmp
popf
in
sar
aaa
cmps
inc
sahf
scas
jnp
xlat
cld
push
aas
out
xor
call
jo
pop
outs
mov
es
out
xchg
dec
shl
sbb
in
lds
dec
mov
in
sbb
add
jle
cmps
sbb
sar
popf
push
(bad)
mov
sti
sub
cmp
bound
cmp
iret
arpl
or
mov
xchg
retf
aaa
ret
loope
dec
add
jmp
imul
movs
mov
dec
outs
xchg
mov
repnz
cs
pushf
xor
push
mov
fst
aad
xchg
inc
xchg
and
stos
in
push
imul
mov
push
xchg
cmp
jmp
ds
xor
add
add
lahf
sbb
clc
inc
(bad)
dec
imul
xor
xchg
or
xor
jb
retf
loopne
xchg
adc
pop
adc
cmp
js
mov
imul
adc
mov
cwde
fcomp
jae
jg
movs
dec
loope
xor
test
test
add
push
stc
push
je
jmp
dec
or
movs
mov
hlt
or
(bad)
adc
mov
xor
cs
sbb
daa
sar
das
xor
sbb
mov
stos
push
mov
inc
out
es
cmps
push
fwait
sbb
std
mov
arpl
cmp
mov
repz
and
cmp
test
add
cmp
cld
sbb
push
adc
cmp
enter
and
jmp
mov
push
and
xchg
inc
idiv
mov
jl
das
adc
xor
pop
retf
ror
in
pusha
push
xor
mov
jae
mov
(bad)
xchg
push
rcr
adc
out
sub
hlt
ret
adc
lods
inc
sbb
cdq
icebp
mov
(bad)
jb
stos
mov
hlt
ins
dec
jecxz
retf
jbe
jo
mov
pop
clc
repnz
push
test
inc
dec
mov
add
fwait
xlat
cdq
clc
addr16
inc
or
cmc
push
adc
inc
(bad)
sbb
aad
sbb
aad
ds
clc
jp
je
xor
in
mov
jecxz
push
push
call
adc
xlat
mov
jnp
sar
push
ficomp
into
ret
cmp
push
cmp
inc
fbld
push
scas
xlat
imul
in
mov
idiv
test
inc
repnz
sub
ret
push
inc
or
push
sbb
jno
sub
mov
jge
stos
adc
xor
outs
jae
ret
cmp
test
jne
mov
and
cmp
sub
imul
fsubrp
jo
lea
dec
shl
dec
jmp
lea
cmp
sub
or
loope
hlt
jne
mov
movs
or
adc
out
xchg
inc
cdq
ficomp
push
sub
icebp
in
cmps
push
movs
sub
(bad)
xchg
neg
mov
mov
or
mov
shl
pop
mov
jp
retf
xchg
outs
out
adc
arpl
sbb
ret
imul
data16
icebp
popa
sub
sub
add
dec
sti
pop
retf
and
jae
push
icebp
push
push
cmc
add
jmp
in
lea
and
(bad)
mov
arpl
sbb
stos
rol
and
xor
mov
stc
push
fucomip
mov
adc
aas
fdiv
imul
dec
add
out
dec
ss
adc
lods
push
add
or
lahf
aas
nop
and
inc
movs
inc
lahf
pop
cmp
mov
je
mov
sub
rcl
xor
in
lock
or
sub
jmp
sub
and
sbb
cmp
(bad)
imul
mov
xchg
jg
fist
adc
jns
xchg
aaa
data16
rcr
test
jg
pop
mov
js
call
jb
pop
dec
cmp
push
jo
les
mov
inc
inc
xor
inc
das
clc
add
fld
push
daa
jbe
in
pop
sub
xchg
or
mov
xchg
sbb
loope
sbb
adc
imul
sbb
push
jbe
add
jecxz
in
int3
cmp
xchg
mov
fcom
mov
mov
or
ins
jmp
popf
cmp
cmc
jb
stos
xchg
mov
and
int
sub
xchg
push
jbe
pop
xor
inc
scas
inc
jno
movs
loopne
xchg
scas
int3
movs
shl
movs
cmp
stos
inc
pop
mov
aam
dec
push
dec
retf
hlt
sbb
or
push
test
xchg
out
fld
sahf
das
mov
sub
dec
or
and
outs
hlt
scas
dec
xchg
outs
out
mov
push
jecxz
xchg
cli
mov
xor
adc
xchg
retf
inc
sbb
scas
std
jp
mov
push
mov
or
push
xchg
add
pop
dec
push
mov
pusha
adc
cmp
xchg
mov
cmc
or
mov
(bad)
jmp
inc
or
push
cdq
retw
in
sub
js
rcr
adc
pop
loop
retf
fwait
xchg
cmp
clc
into
xor
pop
(bad)
mov
push
xor
loope
or
pop
mov
push
fidivr
pop
cmp
xchg
cwde
mov
mov
out
mov
ror
retf
pop
outs
jns
out
rol
sahf
and
outs
dec
jmp
jmp
or
icebp
dec
push
jnp
rcr
add
mov
fwait
test
not
push
test
xor
pop
out
fadd
bound
sub
test
jge
call
sbb
(bad)
(bad)
and
pop
mov
inc
and
(bad)
dec
inc
dec
jecxz
repnz
addr16
dec
mov
push
pop
in
sahf
leave
loop
fcomp
fist
mov
jbe
sub
aam
(bad)
mov
out
mov
adc
sbb
mov
sar
je
aam
sbb
je
scas
pop
xor
sub
fcomp
xor
push
sub
dec
aas
js
daa
xchg
jne
out
add
popa
mov
xchg
stc
in
mov
dec
popa
(bad)
jge
mov
sub
cmp
jmp
mov
outs
fs
test
cmps
jne
retf
jno
dec
leave
jno
sub
sub
cmp
out
test
mov
push
xor
popa
repnz
inc
mov
inc
cmp
mov
and
psubusw
push
loop
retf
add
retf
xor
sub
int
and
push
mov
inc
lahf
xchg
retf
das
push
add
les
aas
in
inc
pop
pop
test
daa
xor
xchg
std
xchg
repnz
and
sbb
push
out
pusha
or
mov
xor
sub
jbe
inc
and
shl
repnz
pop
xchg
shl
cmp
mov
or
dec
adc
aas
jnp
or
cmp
jmp
clc
adc
nop
dec
movs
loope
cmps
pop
ja
daa
test
pop
daa
mov
addr16
ins
pop
xchg
jl
pop
sub
pop
mov
rcr
push
ins
and
call
mov
adc
mov
mov
add
cld
sbb
outs
inc
jecxz
pop
jbe
push
push
xchg
nop
in
mov
pop
pushf
inc
jge
jae
push
xchg
dec
loopne
xadd
popa
sub
xchg
jae
test
xor
xchg
pop
xor
idiv
imul
mov
xor
adc
jl
scas
cld
test
jne
mov
shl
jp
sbb
push
sbb
push
adc
push
cmp
in
popf
je
(bad)
cmp
lea
mov
inc
push
sti
sub
mov
test
stc
hlt
lods
xchg
sub
das
xor
das
aam
jmp
or
jp
pop
dec
call
lds
test
lods
mov
xor
sub
xor
mov
jg
pop
leave
jle
and
mov
ins
adc
push
jne
mov
out
ret
or
(bad)
(bad)
mov
mov
int3
rcr
adc
jl
cs
mov
imul
ins
or
inc
popa
push
ror
dec
cld
sti
xchg
push
outs
cmp
fcomi
lods
inc
int
push
popf
out
and
adc
sbb
cwde
rcr
inc
test
push
add
retf
pop
mov
fst
ret
xchg
out
daa
and
add
not
repnz
lods
loope
jmp
and
xlat
fdivr
into
sbb
iret
movs
mov
shl
mov
jle
pop
fwait
call
mov
adc
aam
in
stc
js
or
xchg
xor
pop
adc
sbb
pop
std
mov
xor
or
hlt
movs
mov
and
inc
(bad)
jo
(bad)
cmp
cmps
test
xchg
outs
jo
mov
mov
jg
popa
adc
mov
xchg
dec
cld
clc
xchg
imul
out
repz
lds
ror
push
(bad)
icebp
(bad)
dec
jg
sub
stc
loope
add
cmp
mov
jle
mov
mov
or
inc
enter
or
pop
fprem1
adc
push
inc
adc
sbb
xchg
popa
fsub
cmps
sub
xchg
mov
outs
jle
fwait
pop
or
inc
inc
mov
scas
xchg
mov
mov
leave
and
sbb
add
adc
lea
ror
pop
sbb
fstp
pusha
and
not
mov
mov
repz
inc
adc
das
jb
inc
xchg
jbe
inc
std
cli
loope
pop
lods
popa
stos
jmp
push
dec
outs
adc
sub
loope
shr
in
ins
cmps
pop
into
popf
daa
ds
push
les
mov
xchg
pusha
push
push
jbe
pop
xor
xchg
pop
xor
lods
test
loop
outs
dec
xor
push
inc
call
test
icebp
call
scas
sub
iret
adc
call
mov
inc
ins
(bad)
stc
ss
mov
sbb
inc
cdq
push
sub
xor
xor
pop
mov
pop
pusha
ds
dec
aam
je
call
pop
sahf
cmp
cld
dec
xchg
jne
ins
imul
or
push
sbb
push
scas
jp
shl
or
out
jg
out
rcr
mov
sub
add
sbb
ins
aas
ds
lahf
jle
outs
mov
(bad)
adc
cmp
aaa
fistp
inc
(bad)
add
enter
aam
adc
xor
outs
mov
movups
add
in
fwait
mov
inc
retf
sub
xchg
into
xor
pop
lea
cmps
add
mov
or
into
dec
fst
inc
inc
cmps
or
mov
out
pop
jmp
push
jns
imul
mov
leave
das
dec
inc
mov
push
scas
fisubr
pop
adc
ins
pop
or
popf
sub
inc
or
dec
sub
dec
mov
sub
sbb
rcl
jo
mov
std
adc
aas
icebp
cmp
mov
call
(bad)
mov
mov
(bad)
dec
push
js
cmp
add
ins
mov
jnp
push
ret
mov
outs
push
(bad)
out
add
sub
pop
ins
sti
pop
es
jmp
jge
sbb
retf
fst
mov
repnz
pop
pop
in
jmp
xor
lods
and
and
or
push
aas
ficomp
add
enter
outs
scas
mov
jmp
xor
in
jge
jmp
jne
inc
jns
pop
pop
loop
lock
cmp
(bad)
enter
mov
xlat
ins
test
scas
daa
clc
lock
mov
es
or
jae
jnp
loopne
mov
add
sub
xchg
movs
dec
push
outs
inc
fiadd
jbe
pop
nop
out
pop
lea
xchg
test
mov
sub
pop
mov
pop
inc
or
into
(bad)
jle
neg
lods
mov
jno
adc
mov
dec
add
push
es
scas
lea
leave
rol
cmp
pushf
call
pop
push
ss
ds
jmp
pop
or
aam
mov
xlat
inc
scas
in
fs
sti
or
out
neg
xchg
dec
or
int3
xor
cmp
out
add
das
leave
xchg
fs
mov
adc
addr16
mov
test
js
add
in
lods
xor
or
sub
pop
dec
or
dec
pop
dec
jb
sub
clc
mov
ror
inc
ja
xchg
cli
movs
loop
cmp
pop
add
jns
sub
inc
or
cmp
xchg
xchg
repnz
xchg
in
mov
iret
cdq
out
or
sbb
outs
mov
cdq
xchg
add
sub
mov
retf
adc
mov
jecxz
leave
rol
dec
pop
push
push
add
xchg
inc
push
ja
or
test
movs
jge
xchg
outs
stc
adc
adc
mov
sbb
fmul
mov
mul
(bad)
xchg
sbb
outs
loop
cli
or
in
arpl
das
ret
ds
nop
in
inc
push
dec
sub
xchg
add
cmps
or
adc
add
stos
cmovle
aad
retf
test
jle
int
enter
jmp
shr
cmp
push
xchg
push
jae
sub
cli
mov
cmc
sar
add
arpl
es
jl
mov
mov
imul
mov
ss
push
ins
jecxz
pop
popf
adc
pop
pusha
sbb
shr
add
inc
xor
dec
jnp
xor
lock
sub
xchg
pop
pop
dec
xor
ror
mov
jmp
inc
sub
test
cmp
pop
sbb
xor
cwde
call
xor
retf
ficom
or
sbb
xor
scas
jg
ret
or
icebp
sbb
mov
jmp
ins
imul
mov
xlat
(bad)
jb
and
sar
mov
dec
jp
mov
and
xchg
imul
cld
js
enter
pop
shl
sub
xor
jae
add
loopne
ins
imul
popf
ret
adc
retf
cmps
cmps
ss
retf
mov
pop
fwait
and
sub
ror
(bad)
rcl
aaa
xor
int3
imul
cdq
jae
loopne
nop
jg
sub
das
test
cmc
jae
mov
pusha
mov
or
dec
loop
rol
xor
mul
add
push
or
sub
pop
outs
push
div
dec
jg
popf
and
mov
ins
leave
pop
cmp
out
mov
pop
pop
dec
mov
scas
fsubr
mov
stos
imul
cdq
dec
xor
push
mov
or
xchg
aam
popa
jg
hlt
add
push
jns
pop
push
xlat
lods
dec
or
or
movs
pop
or
aad
mov
adc
add
mov
sahf
jbe
jmp
(bad)
mov
in
pop
mov
jecxz
jmp
les
xchg
jnp
out
inc
jp
fwait
adc
sub
dec
jbe
mul
(bad)
push
mov
push
scas
xchg
int3
aaa
adc
inc
mov
xchg
neg
ds
pop
xchg
push
and
outs
push
fldenv
jle
fist
mov
jno
fisttp
mov
xchg
or
dec
and
or
ret
add
popa
mov
add
add
cwde
outs
pop
push
lahf
fadd
popf
inc
dec
outs
push
daa
mov
add
call
mov
xor
ds
xlat
pop
pop
ror
ins
xchg
xlat
iret
cmp
inc
mov
lods
pop
or
pop
xchg
hlt
push
xchg
add
xor
mov
lods
inc
inc
leave
dec
enter
sub
int
jno
shl
(bad)
pop
loopne
addr16
ds
or
arpl
cmp
sbb
jo
mov
sti
mov
fiadd
and
or
dec
push
push
outs
arpl
pop
sbb
cld
cmp
aas
cmp
sub
cmps
fcomp
dec
xchg
jecxz
or
lahf
mov
cmp
and
sub
in
inc
ret
xchg
idiv
retf
psubusw
push
dec
faddp
test
jl
inc
pop
ss
std
push
mov
pusha
popa
out
cmp
mov
pop
cmp
or
repz
push
xlat
ins
sar
inc
es
or
aad
icebp
into
(bad)
imul
sub
je
repnz
dec
cmps
repz
lods
loopne
clc
pop
mov
in
daa
xchg
mov
movs
leave
xchg
mov
or
out
adc
fadd
dec
add
adc
jo
mov
xchg
enter
fstp
inc
push
pop
fs
jecxz
mov
jno
ja
jle
or
pop
push
imul
jmp
cmps
clc
jae
repz
push
push
ins
ror
inc
test
imul
dec
inc
jae
outs
mov
mov
mov
outs
test
stos
fnstcw
div
dec
adc
mov
sub
inc
pop
adc
pop
xchg
add
nop
adc
mov
pop
sbb
loop
push
(bad)
mov
ins
ins
in
popf
add
fbld
jle
jbe
sahf
xor
ds
and
or
push
(bad)
pop
test
enter
pop
std
or
jae
std
lods
sub
ret
in
add
pop
push
rol
into
sbb
into
lods
lods
push
dec
call
aam
movs
mov
(bad)
(bad)
test
aam
pusha
dec
jmp
ss
mov
inc
and
add
xor
mov
jmp
mov
and
and
std
xchg
dec
pop
(bad)
pop
aas
mov
jnp
popf
test
mov
(bad)
pop
push
add
cmp
push
mov
call
push
xor
jp
jo
push
shr
ret
daa
cwde
out
call
mov
iret
inc
pop
test
sub
push
inc
add
lock
push
loop
mov
sbb
call
arpl
push
xchg
call
dec
call
inc
cmps
iret
mov
mov
mov
dec
jl
call
xchg
mov
mov
loope
les
jmp
aaa
aad
adc
call
aas
in
cmps
and
into
cmps
daa
cli
fcom
dec
ficom
xor
mov
mov
test
add
cwde
inc
test
xor
dec
push
mov
sub
xlat
scas
mov
repz
loop
int
lea
sub
sbb
(bad)
xor
jg
add
mov
mov
mov
push
dec
int3
push
mov
xor
jg
or
jle
std
push
cli
mov
ja
(bad)
cli
mov
and
in
mov
mov
cs
pop
sbb
ficomp
xchg
jnp
and
mov
pop
add
pusha
or
fld
or
shl
mov
add
mov
movs
adc
dec
lds
imul
push
fsub
cmp
lahf
dec
rol
pop
cli
mov
or
fsub
das
imul
push
add
xchg
sar
sub
test
fnsave
scas
or
ds
pop
xlat
adc
loop
nop
mov
sbb
(bad)
ds
cmp
mov
dec
mov
xchg
not
dec
addr16
in
or
sbb
mov
mov
and
int
dec
cmp
inc
stos
lods
push
xchg
pop
sbb
push
repnz
push
scas
iret
je
out
ror
mov
jae
popa
pop
fld
gs
clc
fiadd
sbb
cmp
adc
int3
mov
or
outs
call
sub
pusha
ficomp
jnp
imul
mov
lock
icebp
lahf
into
push
pop
in
jo
jb
xor
fdivr
mov
lock
jbe
push
xor
es
mov
inc
inc
mov
mov
loop
xor
add
cmp
cmp
movs
push
iret
sbb
std
sti
outs
in
push
leave
cli
jo
outs
xchg
pop
mov
push
cs
fidivr
pop
sbb
mov
jns
into
mov
repnz
push
jbe
gs
mov
jg
cmp
adc
sub
or
jb
sbb
rol
and
xor
lds
int
js
jb
(bad)
cs
pop
cmp
sahf
mov
inc
ret
adc
pop
or
lods
ret
cmp
scas
mov
push
jo
jge
cli
and
fst
mov
dec
mov
ror
jnp
cmp
sub
xchg
mov
sbb
or
fsub
movs
pop
fidivr
pop
add
imul
es
shr
into
jne
xchg
xchg
fadd
bound
mov
cli
ins
ja
aaa
add
popf
(bad)
cmp
cdq
test
retf
(bad)
xlat
cmp
or
adc
mov
inc
retf
lods
icebp
dec
mov
imul
bound
(bad)
push
mov
fidiv
pop
lahf
test
mov
xor
sbb
pop
addr16
cwde
cmp
sub
sahf
or
cdq
push
jl
xchg
rcr
sbb
sub
cli
lods
std
scas
fs
ja
pop
aad
jbe
pop
rol
(bad)
dec
jmp
jmp
sar
pop
test
mov
inc
adc
cwde
xchg
lods
inc
dec
hlt
jmp
shr
out
and
jmp
xchg
pop
out
xor
jl
pop
mov
cld
mov
imul
(bad)
rcr
jo
sub
fistp
sub
fbstp
aad
adc
mov
and
jo
xchg
mov
scas
dec
cmps
jb
mov
mov
xchg
or
jns
xlat
ins
or
xlat
add
pop
(bad)
(bad)
clc
push
lods
push
mov
jle
xchg
clc
in
mov
add
pop
sub
retf
popf
inc
adc
ret
jne
pop
push
loopne
(bad)
jmp
jl
jae
mov
and
pop
cmps
and
mov
(bad)
push
out
add
jmp
cli
ret
sbb
je
ss
(bad)
fdivr
je
cmp
rol
pop
mov
outs
mov
jmp
jb
ins
nop
and
popa
push
sub
jmp
and
or
pop
mov
scas
jns
ss
mov
ret
jbe
or
xor
sbb
jp
adc
xchg
addr16
ret
cmp
in
adc
jecxz
jne
loopne
retf
cmova
vhaddpd
test
dec
push
fwait
cli
or
mov
or
jmp
adc
stos
jge
push
mov
dec
adc
xor
dec
dec
cmp
fild
mov
inc
jns
or
adc
movs
test
sar
arpl
ds
and
(bad)
ror
jne
and
dec
daa
stos
out
mov
(bad)
iret
add
add
pusha
mov
and
mov
adc
cmp
xchg
int3
mov
fild
mov
sahf
xchg
pop
mov
fs
gs
pop
rcl
es
sbb
gs
jmp
out
mov
inc
(bad)
(bad)
push
xor
xchg
pop
psubw
ja
popf
dec
or
mov
cld
push
mov
pop
push
fsub
js
sbb
out
ds
or
iret
xor
daa
rcl
add
out
mov
add
pop
test
inc
dec
push
adc
aas
xchg
shl
add
stc
rcl
stos
push
mov
leave
inc
(bad)
stc
fiadd
push
shl
addr16
test
popa
punpcklwd
sub
enter
cld
call
cs
stos
in
add
repz
jge
jnp
sar
inc
(bad)
das
popa
sub
push
sbb
bound
into
mov
fs
cmps
out
out
push
mov
stc
add
adc
or
call
xchg
xchg
pop
jle
lock
lahf
or
shl
or
add
mov
or
das
push
xchg
frstor
dec
rcl
pop
inc
ret
xchg
jo
ins
xchg
push
inc
(bad)
sbb
xchg
xor
fcmovb
lea
rcr
inc
loope
outs
rcr
sbb
pop
fcom
dec
pop
out
ins
adc
pop
daa
jmp
mov
out
fild
sbb
movs
xor
loop
xchg
iret
or
jno
dec
xor
mov
sub
fsub
mov
xchg
imul
jo
(bad)
(bad)
jmp
stos
aaa
imul
adc
scas
ss
sub
(bad)
rol
jge
pop
and
vmwrite
lods
push
mov
not
xor
push
inc
scas
inc
jg
cs
inc
test
shr
sbb
push
mov
repnz
mov
sti
mov
or
sbb
jmp
pusha
movs
and
lods
jnp
dec
or
and
mov
fstp
mov
inc
pop
sbb
std
fadd
or
lock
mov
add
popa
mov
cmps
arpl
stc
or
nop
fcmovb
mov
imul
jmp
and
cmp
ret
not
popf
pop
xor
dec
or
mov
es
loopne
pop
hlt
sub
jge
inc
jmp
cdq
icebp
ss
retf
sti
data16
bound
inc
pop
retf
(bad)
xchg
adc
mov
cmp
popa
retf
mov
sahf
xchg
sub
jb
xchg
loop
test
mov
inc
fidivr
cwde
stc
jnp
jbe
and
push
fcom
inc
pop
ss
cmp
jmp
into
xlat
pushf
cwde
mov
xchg
pusha
pop
bound
mov
ret
jecxz
leave
adc
mov
sub
mov
out
pop
xor
jl
sar
into
outs
mov
mov
inc
pop
div
jb
and
jmp
fcomp
jmp
dec
bound
sbb
pop
lahf
xchg
dec
add
int3
rcr
add
dec
push
jnp
xor
aaa
sub
sbb
(bad)
mov
mov
fidiv
xchg
imul
cmps
mov
dec
cmp
cmp
xchg
mov
icebp
aad
mov
fstp
imul
bound
in
adc
mov
inc
or
(bad)
into
leave
adc
mov
cdq
test
das
out
jg
pushf
test
jmp
or
dec
pop
mov
ins
pop
std
in
mov
xchg
es
mov
not
xor
adc
or
mov
inc
fucomi
xor
cwd
and
xchg
ins
daa
bound
jge
imul
cmp
and
test
aam
je
jp
iret
in
mov
stos
(bad)
fst
out
ins
(bad)
movs
imul
or
push
dec
push
pop
movs
ins
into
scas
sub
aad
jmp
nop
sti
outs
cmps
clc
jl
push
ins
dec
test
mov
mov
sbb
xchg
rcl
adc
sub
dec
jle
int3
call
fld
movs
add
mov
xor
jp
cmps
pushf
mov
push
adc
inc
aas
nop
xor
movs
cmps
cmp
xor
idiv
push
push
icebp
stos
repz
ret
cmp
lock
dec
or
fst
loopne
inc
cmps
leave
inc
jp
test
cmp
aad
outs
mov
add
jns
mov
stc
sub
(bad)
in
mov
add
add
icebp
(bad)
in
push
fstp
adc
mov
mov
popa
ss
sbb
add
das
inc
mov
(bad)
aas
sbb
xor
jnp
jno
mov
and
rcl
into
xchg
mov
pusha
pop
movs
lods
pop
in
in
add
xchg
xchg
adc
inc
adc
or
(bad)
movs
push
sub
outs
fidiv
imul
xlat
mov
cmp
ja
(bad)
rol
mov
sub
push
sub
movs
js
adc
lea
mov
pop
iret
dec
cdq
fstp
aad
dec
pushf
jae
and
jmp
and
inc
jl
bound
add
fild
pop
leave
pop
mov
sar
aad
mov
push
ss
icebp
xchg
lea
mov
jb
inc
cmps
and
fcmovu
sbb
jnp
inc
cmp
call
mov
sbb
outs
xor
sub
pop
and
js
(bad)
fs
(bad)
sub
xor
xchg
cld
loop
scas
sub
bound
push
in
pop
in
push
dec
and
out
mov
fisttp
xor
mov
inc
xchg
push
pop
mov
jne
out
push
dec
sti
jmp
lods
mov
mov
in
out
pusha
retf
pop
dec
inc
sub
movs
stos
lds
in
test
movs
xor
loopne
xchg
fsub
fnstsw
pushf
push
mov
gs
(bad)
les
loop
jno
sub
ins
or
(bad)
outs
push
cmp
test
mov
sahf
push
add
push
mov
sbb
xchg
cli
pop
outs
stc
std
cli
call
mov
(bad)
daa
xchg
repnz
bound
pop
mov
push
dec
dec
scas
mov
inc
daa
fwait
push
xor
or
das
ret
jmp
xchg
(bad)
mov
into
add
retf
ins
jge
out
sub
push
(bad)
mul
stos
jg
mov
push
daa
pushf
and
cmp
popf
sar
mov
hlt
mov
jl
mov
pop
(bad)
xor
adc
xor
pusha
mov
and
cmps
jmp
fadd
adc
jne
mov
xor
popa
mov
out
cmp
je
and
loope
(bad)
lds
push
adc
and
pop
ss
add
in
aam
xor
je
es
mov
cmp
sbb
push
es
dec
sbb
icebp
push
aas
xchg
popf
xchg
ja
pop
icebp
(bad)
in
hlt
xchg
lods
pusha
aam
push
js
mov
add
push
clc
inc
mov
cmp
cli
push
sub
lods
mov
ror
ftst
(bad)
(bad)
cmc
push
(bad)
ror
xor
mov
pop
dec
(bad)
sti
retf
dec
mov
sahf
sti
cmp
pop
clc
dec
pop
sub
pop
icebp
loopne
xchg
data16
inc
mov
mov
xor
test
xchg
mov
mov
cmp
inc
push
std
dec
inc
xor
xor
or
jecxz
sbb
ins
mov
daa
sub
mov
das
adc
out
popa
mov
sbb
in
fcom
cmps
mov
and
inc
dec
adc
inc
inc
cmps
and
mov
xor
(bad)
or
fnstsw
adc
cmps
dec
push
dec
mov
shl
stc
test
xchg
sub
lods
fxch
scas
rol
cmp
cmp
je
mov
aad
aad
xchg
mov
cdq
rcr
mov
in
add
mov
add
sbb
and
sub
enter
dec
mov
inc
sub
add
sub
nop
(bad)
test
cmp
fldenv
sub
(bad)
ds
dec
jmp
mov
fild
cmp
jecxz
jno
(bad)
into
repnz
fs
mov
inc
pop
call
into
test
idiv
mov
pop
es
out
outs
mov
push
add
cmps
push
sahf
fs
imul
xor
outs
ret
ins
repnz
addr16
mov
hlt
imul
cmp
loopne
fld
mov
out
sub
push
popf
xchg
fwait
push
or
mov
add
mov
repnz
adc
jecxz
js
mov
test
jo
push
movs
loop
test
cld
inc
sbb
jmp
mov
and
pop
push
test
xor
(bad)
cmp
dec
imul
xor
sub
pop
mov
jmp
push
out
arpl
adc
mov
dec
stos
push
pop
adc
fsub
les
sbb
cmp
jo
cmc
jb
sti
cwde
(bad)
popa
cmp
push
(bad)
(bad)
daa
and
dec
mov
push
jecxz
lahf
pushf
add
cmp
pushf
std
retf
jb
retf
jle
movs
xchg
xchg
fisubr
sub
into
push
sub
fidivr
jnp
int3
push
in
in
sbb
fsub
loop
push
xor
dec
dec
fwait
push
jnp
jnp
mov
retf
cmc
test
add
jae
jno
addr16
adc
dec
dec
dec
mov
push
mov
shl
or
ss
fs
ss
mov
pop
xor
(bad)
mov
daa
sub
loope
ss
sbb
mov
xchg
push
int
mov
add
cli
mov
ja
jno
rol
jmp
pop
xor
js
xor
ins
xor
fist
imul
jne
mov
dec
pushf
jno
div
xchg
xor
jo
fcmovb
mov
push
add
push
mov
gs
push
ss
mov
xor
xchg
ret
int
mov
or
xor
ret
push
sub
xchg
shl
sbb
shr
mov
push
outs
jmp
cmp
mov
mov
inc
add
push
rol
pushf
fisubr
cmp
xchg
fcmovnb
mov
xchg
and
(bad)
imul
or
jle
or
push
fs
dec
mov
adc
fwait
pop
jp
pusha
cmp
push
shl
mov
mov
test
inc
fidivr
cwde
xor
bound
dec
fmul
sbb
mov
pop
stos
cmc
(bad)
mov
mov
out
pop
mov
fwait
mov
mov
sub
les
ds
cwde
retf
int3
mov
cmp
mov
mul
or
adc
aad
xor
jmp
rcl
or
jno
nop
lods
mov
jmp
dec
ins
pusha
sbb
inc
inc
mov
xchg
das
and
xchg
mov
test
stc
(bad)
lods
xchg
inc
pushf
movs
pop
retf
mov
fwait
outs
xchg
retf
add
in
xchg
es
leave
mov
inc
jno
in
sub
or
out
movs
cli
imul
sub
sbb
jno
js
imul
cmp
scas
cdq
pop
frstor
jns
test
sub
mov
inc
test
test
sbb
inc
fsubr
pusha
fcomp
sub
sar
mov
test
jecxz
cmc
sti
mov
lods
movs
shl
aam
pusha
les
jbe
mov
test
and
out
adc
jnp
into
sbb
and
leave
retf
fld
push
lods
push
jl
sbb
lock
leave
inc
or
push
push
in
dec
data16
jbe
push
ins
or
idiv
mov
rcl
popf
add
movs
adc
repz
add
push
ds
push
push
repz
gs
push
mov
mov
fld
add
inc
in
mov
push
(bad)
cmps
push
or
lea
jp
stc
test
pop
push
stc
loope
sbb
cmp
mov
xor
xchg
add
xrelease
push
lss
push
or
cs
(bad)
jb
push
pop
cmc
sub
push
js
sub
arpl
inc
pop
call
sub
mov
inc
inc
and
adc
pop
(bad)
and
pop
dec
pop
pop
out
and
out
inc
clc
jmp
pusha
adc
pop
into
add
in
adc
shr
jbe
adc
dec
xor
mov
lods
jg
in
pop
mov
or
sbb
mov
or
retf
or
xor
cmp
jecxz
lods
add
dec
and
shl
mov
push
pusha
ret
jnp
aam
stos
setl
push
cmp
mov
mov
push
mov
xchg
call
sbb
lods
jmp
adc
and
dec
mov
xor
lea
pushf
jne
add
fwait
imul
cmp
call
jmp
jl
idiv
xor
int3
push
movs
dec
fsubrp
rol
mov
stos
cmp
xchg
cs
ja
mov
jno
push
(bad)
cmp
mov
push
outs
mov
imul
pop
jo
fprem
mov
(bad)
push
pop
scas
inc
outs
in
dec
adc
loop
in
mov
mov
lods
out
xchg
imul
fild
push
imul
jg
out
mov
popf
loop
sub
cmp
dec
push
aad
mov
scas
jns
xor
cwde
dec
jl
dec
cmp
movs
jno
xor
retf
adc
stc
and
sub
sub
xchg
jecxz
retf
shl
std
imul
ins
xchg
push
call
jb
xchg
mov
xchg
xor
dec
(bad)
popf
test
or
push
sahf
je
push
inc
ret
rdmsr
mov
mov
(bad)
pop
cdq
add
lods
mov
xlat
mov
pusha
ins
js
push
icebp
jb
gs
in
mov
and
imul
ins
xchg
sub
rcl
push
sbb
inc
add
bound
adc
sbb
out
js
mov
push
mov
mov
xor
add
ins
rcl
pop
add
fldcw
(bad)
push
sub
lods
xchg
iret
pop
or
mov
fstp
or
int
addr16
ds
aaa
jns
dec
dec
xor
lds
mov
aaa
mov
out
sub
bound
add
and
mov
cmp
mov
cmp
jl
sbb
movs
add
(bad)
idiv
sbb
stos
inc
test
sbb
aas
jg
mov
imul
(bad)
jl
cmp
inc
ror
fldenv
pusha
or
nop/reserved
leave
jle
sub
repz
add
fild
scas
clc
das
mov
sbb
inc
inc
test
xchg
rcl
es
mov
adc
or
and
dec
(bad)
adc
loop
jp
ins
retf
shl
cmps
push
mov
mov
cmps
push
repnz
adc
data16
repnz
das
mov
sahf
mov
mov
out
sahf
lea
cli
dec
sub
mov
or
adc
pop
adc
retf
adc
adc
pop
mov
mov
xor
xor
push
adc
movs
std
push
xchg
arpl
outs
leave
or
dec
mov
inc
shr
pop
popf
mov
(bad)
sti
stc
movs
popf
cmp
aaa
bound
mov
retf
clc
dec
sub
dec
cs
inc
push
and
hlt
push
in
xchg
add
shr
pop
add
cdq
retf
(bad)
or
xlat
les
mov
sub
stc
push
inc
(bad)
lods
push
in
pop
movs
jmp
cld
xlat
sub
mov
mov
popa
sub
mov
jmp
or
mov
mov
lods
fucom
test
or
mov
inc
stos
mov
mov
les
(bad)
sahf
call
push
mov
cmp
mov
in
js
mov
inc
push
xlat
add
ins
outs
aad
pop
movs
pop
aaa
and
sbb
mov
sub
stc
xor
or
jg
xchg
adc
and
aas
retf
out
pop
std
pop
jmp
iret
mov
cmp
mov
(bad)
sbb
aad
ret
sbb
call
sbb
push
sbb
mov
and
ror
shl
cdq
stos
(bad)
out
inc
sub
sub
inc
in
inc
cmp
xchg
mov
sub
sahf
scas
imul
pop
dec
jno
rcl
push
bound
mov
nop
sbb
cwde
cmp
rol
std
cmc
jecxz
and
pop
cmp
fs
sti
retf
or
mov
jl
mov
icebp
sbb
cmp
jmp
cli
fsubr
mov
movs
arpl
sbb
daa
jg
mov
jmp
aam
(bad)
xchg
cmps
pusha
lahf
mov
das
out
mov
jp
mov
sbb
ins
imul
cmp
xchg
adc
and
pop
lds
jle
mov
cmc
push
dec
js
addr16
mov
sbb
pop
xchg
mov
adc
clc
mov
cs
or
into
nop
cmps
xor
mov
aas
outs
pop
xor
jmp
iret
or
jg
iret
sbb
rcl
sbb
push
mov
iret
xor
imul
out
leave
xor
add
jnp
jmp
mov
aad
(bad)
xor
pop
cmp
out
xchg
sbb
sbb
pop
mov
je
dec
popf
stc
sbb
and
loop
cs
mov
fdivr
or
retf
shl
add
mov
aad
stc
mov
pushf
cmp
adc
cld
mov
aaa
adc
dec
dec
lock
pop
mov
ss
stc
cmps
adc
out
jne
cmp
push
fs
mov
imul
mov
stos
popf
imul
rcr
inc
or
xlat
jecxz
or
or
out
test
(bad)
out
int3
jmp
mov
ja
xchg
dec
push
dec
jle
(bad)
js
into
int3
mov
nop
or
inc
pop
pushf
clc
xchg
or
ret
pop
inc
dec
cs
(bad)
ror
and
xchg
(bad)
lock
ja
into
lds
mov
cwde
(bad)
xlat
add
cmp
mov
pandn
xor
test
mov
sub
pop
jmp
sti
int
cli
jecxz
mov
lahf
add
and
outs
xor
repnz
mov
scas
cmp
adc
jno
push
pushf
in
out
cld
adc
lods
cmps
sbb
pop
mov
mov
lds
fidiv
pop
push
adc
addr16
bound
jbe
inc
js
inc
pushf
dec
in
div
xlat
lock
ins
dec
pop
call
cmp
mov
jo
xchg
cmps
int
dec
dec
or
push
sub
dec
dec
push
stc
aad
xor
or
xchg
addr16
jns
xchg
cmp
repnz
div
adc
test
jo
jns
mov
lea
movs
jge
fstp
xchg
sbb
and
popa
aas
sbb
daa
movs
cmps
jge
jmp
xor
in
int
jmp
arpl
shl
inc
pop
gs
cmc
lea
xor
add
daa
test
dec
arpl
(bad)
pop
pop
cs
shr
in
lods
and
iret
mov
(bad)
rol
jno
mov
add
cmc
cmp
inc
mov
xor
iret
into
popa
shr
stc
cmp
jne
and
cmp
add
add
sbb
adc
out
out
mov
jb
pushf
(bad)
mov
fld
fwait
mov
jno
inc
cs
lds
sub
cs
das
out
(bad)
pop
jmp
sub
pop
cmp
mov
dec
cmp
push
pusha
std
repnz
mov
push
mov
fwait
xchg
jo
dec
dec
bound
dec
test
mov
mov
or
ret
or
(bad)
int3
jp
aas
(bad)
or
(bad)
sbb
xchg
push
jbe
test
sbb
jo
clc
mov
jae
js
mov
in
push
push
mov
jbe
and
stos
ins
ror
movs
add
in
mov
out
in
stos
movs
jle
movs
xchg
pusha
lahf
mov
jmp
inc
clc
fcomp
lea
cmps
fbld
fldcw
or
fdiv
add
cld
stos
call
sub
mov
lods
dec
mov
pop
mov
or
mov
jecxz
in
aam
sbb
loope
cmp
(bad)
gs
cmp
add
pop
mov
(bad)
xlat
jbe
cmp
dec
ins
xchg
jecxz
inc
push
retf
pop
aas
mov
out
ror
dec
lock
sbb
dec
pushf
sub
movs
mov
test
and
jne
and
xchg
push
pop
mov
outs
psubb
outs
push
mov
pop
ja
movs
mov
pop
inc
sub
xchg
scas
pop
out
aas
add
jb
imul
cwde
cmc
bnd
mov
and
push
jb
or
inc
not
xor
test
add
mov
jp
clc
mov
xchg
rcr
clc
in
clc
mov
and
mov
mov
sub
push
fdiv
mov
popa
inc
or
fnsave
and
mov
inc
or
add
inc
add
cwde
(bad)
stc
dec
enter
xor
sbb
add
mov
loope
sar
das
das
repnz
inc
push
test
xchg
daa
lods
sub
add
shl
push
in
iret
mov
sar
inc
jmp
and
push
cmc
mov
xor
lahf
inc
pop
xchg
inc
cmp
fbstp
std
es
test
repnz
