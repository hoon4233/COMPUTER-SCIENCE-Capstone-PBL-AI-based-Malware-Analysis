xchg
retf
call
dec
outs
je
addr16
add
xchg
dec
rol
or
jae
jb
outs
add
rcr
sub
add
mov
adc
mov
in
push
dec
bound
arpl
pop
or
std
not
jae
gs
pushf
(bad)
dec
cwde
jb
popa
arpl
fstp
not
add
sub
in
add
mov
add
jmp
or
cmps
jmp
daa
cld
int3
int3
das
leave
add
dec
frstor
outs
fs
add
bound
lea
fs
add
jmp
pushf
and
cwde
add
in
and
push
(bad)
lock
pop
jmp
pop
clc
hlt
fs
inc
push
lock
jo
inc
push
sbb
in
inc
push
sbb
fadd
sbb
ror
enter
inc
(bad)
sar
mov
inc
push
sbb
test
push
sbb
push
push
sbb
mov
nop
inc
inc
inc
cwde
fs
inc
push
xchg
nop
mov
push
add
mov
loope
in
jmp
add
sub
je
movzx
mov
sbb
sub
pop
cmp
data16
popa
cmp
(bad)
(bad)
inc
jb
popa
outs
and
imul
xor
xor
add
fcomi
in
or
add
arpl
das
adc
mov
gs
sub
and
je
popa
and
gs
dec
ins
gs
adc
inc
mov
mov
mov
mov
add
dec
add
inc
or
adc
push
or
or
or
mov
test
adc
std
mov
retf
adc
adc
fild
fild
mov
(bad)
and
and
jp
add
gs
push
adc
pop
and
popa
adc
sub
and
xchg
ins
sub
xor
pop
ss
enter
xor
pop
sub
cmp
pop
das
adc
lock
sub
add
add
neg
jns
(bad)
fild
mov
adc
cmp
add
js
adc
mov
xchg
mov
mov
sbb
or
mov
mov
cmp
ror
sbb
add
sub
retf
add
mov
mov
jge
mov
and
jns
jmp
add
jmp
(bad)
pop
outs
or
add
leave
and
add
dec
mov
popa
sti
push
add
retf
push
mov
mov
add
sti
imul
loopne
arpl
popa
loopne
cmp
fbstp
mov
cld
add
or
adc
sbb
ror
mov
cmp
movs
shl
lock
and
push
jb
adc
jnp
ins
add
inc
sbb
jnp
sbb
mov
and
add
outs
and
add
inc
rol
fucomip
test
add
mov
mov
sub
sar
(bad)
retf
mov
ror
retf
sub
mov
fild
push
adc
push
idiv
xchg
mov
nop
cmp
jmp
in
out
mov
ja
mov
add
test
push
ja
mov
test
push
sbb
mov
mov
lea
mov
out
shl
jecxz
(bad)
sti
sbb
or
ja
dec
push
pusha
mov
test
pop
add
mov
sbb
add
sbb
ret
adc
pop
pop
pop
arpl
mov
rol
lock
cmp
push
mov
push
dec
push
jb
push
jne
jb
add
push
cmp
mov
xor
jmp
or
cmp
in
punpckhdq
pushf
or
push
and
jecxz
(bad)
out
jne
sub
mov
cmp
jbe
sub
add
jmp
test
jne
(bad)
jo
fistp
mov
enter
movs
mov
add
nop
mov
cld
repnz
adc
and
mov
ins
mov
dec
ficomp
lahf
mov
loope
fcmovnu
mov
add
cmp
jbe
jmp
adc
and
add
retf
cdq
or
popf
cmp
fs
xchg
mov
aad
or
shl
mov
ins
pop
sti
imul
dec
and
jae
fdiv
pop
mov
push
out
ret
out
sub
inc
lods
aam
(bad)
jo
rol
pop
or
xor
mov
jmp
mov
mov
cld
push
std
sub
in
ins
fild
and
sub
mov
xlat
outs
mov
xchg
fcom
push
fild
shr
cmp
jb
inc
sub
ja
jmp
movs
outs
push
in
inc
and
inc
nop
out
(bad)
mov
inc
shr
fdiv
push
add
add
sbb
ja
mov
sub
in
lea
push
mov
ret
mov
dec
pop
cmp
rol
dec
xor
cld
je
(bad)
adc
mov
adc
inc
or
jbe
mov
fisttp
data16
sbb
pop
or
adc
add
pusha
xor
lahf
popa
inc
fild
fistp
inc
jp
pause
cmp
pop
sbb
leave
cmp
cmp
lods
push
outs
cmp
nop
jno
and
jbe
xchg
retf
inc
out
or
mov
mov
je
bsf
lea
idiv
push
add
adc
(bad)
mov
adc
mov
cmp
add
push
aam
xchg
pop
fild
cmp
xlat
jne
mov
test
sbb
pop
btr
mov
or
gs
or
ins
mov
es
sub
lea
fbld
sbb
push
inc
shr
cmp
jb
mov
xchg
out
in
or
imul
mov
jmp
pop
inc
sbb
(bad)
pusha
adc
ror
aaa
cld
test
(bad)
arpl
mov
mov
mov
inc
and
dec
pop
mov
adc
push
or
imul
iret
mov
mov
and
outs
inc
dec
cmp
xchg
sbb
out
cmp
ins
push
or
and
sbb
fnsave
popa
jne
lea
mov
ins
or
mov
je
loope
imul
outs
push
mov
cdq
sbb
pop
gs
jmp
shl
xor
fdiv
sbb
add
mov
sub
cdq
test
jo
or
pop
cld
jmp
mov
daa
pop
scas
xchg
add
inc
inc
and
pop
cmp
(bad)
sbb
movs
adc
adc
sbb
xor
cdq
daa
mov
add
test
test
jns
sub
gs
sbb
jecxz
fisttp
push
jne
adc
imul
movs
inc
ins
pop
xor
xchg
mov
fist
push
fidivr
outs
adc
pop
fidiv
je
dec
inc
adc
cmp
mov
xchg
sub
pop
shl
xchg
xlat
push
movs
xor
push
push
fstp
outs
or
dec
sbb
jmp
sbb
cmp
inc
and
jbe
ins
hlt
add
lock
mov
push
mov
lods
mov
inc
push
xchg
mov
xor
or
or
inc
push
jne
cmp
jbe
push
lea
inc
pop
aaa
aaa
and
test
fisubr
jmp
aaa
or
scas
xchg
cmp
add
cmp
pop
ret
das
dec
clc
sub
push
pop
jmp
sbb
cmp
loopne
sub
mov
iret
rcr
daa
or
push
in
cmp
sbb
(bad)
loop
mov
mov
test
dec
gs
mov
pop
add
clc
out
and
test
cmp
push
mov
sbb
or
test
retf
jb
inc
mov
mov
aaa
fcom
mov
mov
mov
mov
(bad)
mov
aam
lea
push
mov
jno
rol
(bad)
stc
xor
pop
bound
cmp
addr16
(bad)
or
sbb
clc
call
addr16
mov
inc
sbb
sub
push
push
leave
bndstx
jmp
cmp
jb
lea
cmc
sub
int
ss
sahf
int3
add
inc
cli
not
(bad)
jbe
lea
(bad)
and
inc
pushf
add
jmp
xor
pop
das
push
ds
pop
sar
or
inc
jge
dec
mov
mov
cld
or
mov
mov
ficomp
lea
or
pop
nop
into
and
cmp
rol
xlat
xchg
add
icebp
(bad)
pop
clc
inc
inc
cs
dec
push
or
les
or
inc
push
(bad)
out
sub
(bad)
stc
sub
xor
fsubr
sub
bound
cmp
daa
fist
out
xor
push
imul
addr16
(bad)
call
jmp
aam
jl
fisubr
or
jmp
loope
mov
in
test
and
shl
push
ret
and
pop
push
pop
mov
or
cld
ds
in
pop
add
adc
fisttp
mov
icebp
je
imul
xor
pop
mov
cmp
movs
test
sbb
fisttp
or
jecxz
and
outs
ins
adc
or
sti
dec
lods
neg
fldz
fst
inc
push
scas
pop
stos
in
or
icebp
mov
ss
jmp
add
mov
test
jne
dec
cmp
je
in
nop
jp
sub
jb
xlat
cmp
add
jp
jae
rcl
or
add
aas
movs
ss
cmp
mov
adc
hlt
inc
add
cmp
jbe
pop
mov
sub
pushf
jnp
cmp
retf
and
push
inc
add
fmul
dec
fnsave
(bad)
pop
add
clc
pop
jo
mul
xor
loop
fdiv
push
fst
enter
shl
add
and
mov
arpl
(bad)
pop
sahf
xchg
inc
inc
push
jae
sbb
pop
add
cdq
sbb
sbb
sbb
out
jns
pop
jg
sub
adc
xchg
sbb
inc
add
icebp
mov
mov
mov
sbb
loope
(bad)
xor
in
push
mov
loope
inc
push
push
jne
mov
in
cmp
ja
pop
or
add
mov
out
out
(bad)
pop
sbb
leave
or
in
dec
mov
ret
fmul
mov
jb
or
adc
test
mov
mov
mov
push
adc
add
mov
nop
pop
sub
loop
adc
add
jge
push
xor
mov
adc
pop
test
fdivr
push
arpl
(bad)
sbb
sbb
test
es
outs
mov
and
jge
shl
jne
push
push
pop
pop
sti
sahf
in
fist
inc
lock
xor
push
sub
sar
in
push
mov
mov
mov
mov
sbb
add
add
sbb
and
xchg
fwait
lock
test
sub
aas
icebp
push
and
and
mov
cs
add
(bad)
pop
inc
pinsrw
xor
xchg
dec
mov
pop
clc
dec
icebp
ror
jl
inc
(bad)
(bad)
je
add
xchg
fcmovnu
push
(bad)
add
or
push
test
mov
dec
add
dec
jne
push
or
outs
adc
xor
pop
xor
add
mov
mov
adc
in
(bad)
or
lea
(bad)
call
ins
add
or
inc
imul
test
push
xchg
adc
ins
psrld
add
(bad)
mov
adc
clc
test
sub
cwde
add
xchg
mov
xor
pop
pop
out
fcom
mov
or
outs
sbb
or
mov
test
push
or
packsswb
cmp
pop
pop
cmp
(bad)
jb
add
dec
loopne
fld
aaa
mov
mov
loop
sub
je
add
or
fldcw
inc
sub
pop
jg
mov
xlat
es
xchg
add
add
aaa
xchg
in
xchg
jmp
dec
push
mov
lock
dec
mov
(bad)
jne
xor
mul
test
jle
jmp
mov
adc
pop
sbb
sahf
inc
add
lods
push
pop
mov
add
add
cli
sbb
pop
out
adc
idiv
test
add
mov
cmp
or
adc
inc
sub
jge
and
mov
xor
fdiv
repnz
out
pop
popa
data16
xchg
sbb
aas
(bad)
call
ret
jno
jne
mov
aam
mov
mov
mov
mov
(bad)
jmp
mov
push
es
cmp
jb
dec
push
sbb
nop
mov
dec
sti
push
mov
movs
jl
cmp
mov
xchg
dec
test
sti
push
call
pop
sbb
mov
fimul
test
sbb
inc
test
das
pop
jae
ss
jo
imul
add
loope
mul
mov
xor
push
mov
test
jnp
dec
mov
add
xchg
(bad)
div
jbe
mov
daa
push
js
add
mov
dec
inc
or
mov
push
mov
pusha
pop
and
inc
pop
stos
sbb
jae
out
push
sbb
or
jmp
es
xor
add
out
cmp
sub
and
pop
sbb
in
mov
mov
fcmovnu
aas
stos
daa
ror
mov
push
jecxz
adc
cwde
in
fs
js
scas
dec
xor
mov
and
lods
or
push
jns
call
jle
xor
or
cmp
js
in
mov
xor
inc
mov
aam
mov
push
ja
pop
mov
mov
or
xor
pusha
jo
add
loopne
push
je
or
adc
cmp
add
stos
sbb
das
aam
inc
outs
and
gs
push
gs
ins
outs
jb
dec
hlt
call
lods
popa
imul
popa
jae
outs
arpl
mov
fild
and
jae
popa
ins
ins
and
and
mov
imul
enter
add
jns
jae
xor
imul
outs
cmps
jne
es
or
imul
mov
imul
in
out
dec
addr16
pop
dec
jae
cdq
jae
push
mov
dec
jle
dec
shl
mov
mov
test
jne
stc
cmp
out
add
mov
clc
fild
leave
add
clc
jbe
mov
cmc
adc
adc
pop
inc
out
and
adc
xor
mov
cmp
dec
ins
mov
add
repnz
inc
clc
add
call
inc
in
je
nop
jp
mul
add
add
scas
fbld
adc
push
add
rol
dec
or
mov
enter
loop
push
in
or
push
jg
push
(bad)
cld
iret
out
(bad)
sbb
loope
lea
and
xor
(bad)
mov
js
dec
cmp
mov
sbb
xlat
mov
jae
not
imul
data16
data16
(bad)
call
mov
idiv
loopne
mov
add
add
hlt
sub
add
out
mov
jge
mov
or
repz
add
test
ja
aaa
imul
jnp
add
ror
push
fisttp
cmp
jne
mov
mov
shl
fisttp
add
mov
movs
push
mov
push
sbb
sbb
test
mov
lahf
sbb
pop
jnp
fistp
fimul
mov
jbe
add
mov
ficom
mov
or
mov
aas
or
lods
adc
adc
ror
mov
out
inc
xchg
fsub
dec
fsubr
or
(bad)
xor
add
ret
inc
enter
sbb
adc
dec
mov
dec
jnp
nop
xor
add
xor
or
push
jmp
pop
or
out
popa
movs
loop
mov
sbb
or
push
xor
shr
ja
jl
out
movs
push
les
(bad)
prefetchw
(bad)
push
xchg
pop
add
leave
test
or
enter
in
scas
loope
mov
xrelease
fdiv
pop
aas
fadd
mov
mov
or
mov
daa
cmps
or
daa
loopne
loop
or
jo
scas
mov
add
and
dec
hlt
fstp
call
mov
push
ficomp
push
push
cwde
add
pop
pop
jne
lods
cmp
ja
pop
mov
adc
mov
(bad)
mov
and
push
inc
sub
jg
sub
cmp
jl
cmp
jg
add
pop
mov
(bad)
mov
inc
rep
jmp
mov
jmp
mov
jmp
pop
lods
ins
mov
ss
lods
mov
ds
ror
sbb
outs
cmc
cmp
je
jge
ja
sub
jg
call
pop
push
fstp
and
sub
cmps
jp
movs
pop
adc
test
test
es
mov
(bad)
push
inc
lea
movs
cli
std
test
push
neg
and
or
mov
mov
jl
dec
pop
xlat
jle
xchg
call
fld
retf
adc
jbe
mov
add
and
sub
pop
cwde
std
data16
mov
or
fld
data16
jge
jno
mov
mov
mov
adc
in
xor
or
or
mov
(bad)
add
add
pop
dec
stos
jecxz
js
clc
sub
push
cmp
pop
mov
adc
inc
xor
imul
(bad)
cmp
cmp
loop
pop
sub
and
mov
in
shl
jae
adc
jmp
push
ret
add
mov
call
les
out
inc
sbb
cmp
adc
pop
push
jecxz
xchg
mov
push
(bad)
jnp
mov
call
push
(bad)
and
and
or
fild
inc
cmp
mov
ja
push
xor
ins
in
mov
or
jne
mov
addr16
and
sbb
outs
cwde
aam
fcmovnu
movs
dec
aam
imul
fist
into
shr
je
sub
cmp
jne
dec
je
pusha
stos
fild
and
add
cmp
cmp
jmp
or
pop
add
outs
jg
add
jne
sub
mov
cmp
retf
mov
lahf
or
add
push
jecxz
jge
fcomp
cmp
cmp
jne
shr
pushf
jg
xchg
outs
adc
and
scas
sbb
call
ret
mov
add
adc
fst
rol
loopne
ret
pop
clc
movs
jo
ficom
es
jl
xchg
jl
ffree
pop
adc
push
mov
pop
(bad)
push
cmp
shl
clc
jmp
pop
dec
sbb
sbb
push
xor
shl
adc
push
or
dec
ror
jge
test
mov
push
adc
ret
std
shl
add
push
inc
in
and
add
mov
mov
add
je
and
je
jp
div
pop
je
xor
daa
adc
les
and
add
sub
or
cmp
and
add
add
sub
mov
dec
retf
int
imul
(bad)
jle
js
pop
sub
arpl
mov
sub
xchg
cwde
ins
pop
sub
in
xchg
call
add
or
jb
jle
xchg
ret
push
aad
dec
pop
xor
mov
imul
or
xchg
and
shr
cmp
je
dec
outs
add
pop
call
sub
sbb
sub
or
fmulp
(bad)
cmc
frstor
je
adc
ror
cmp
es
sbb
push
imul
and
sbb
inc
test
fcomp
stos
xor
xor
fldz
not
jbe
or
enter
mov
pslld
psubd
inc
pushf
or
ret
cmovg
and
adc
mov
mov
sbb
add
cmp
and
movs
aam
xor
sub
test
sub
sub
pop
jecxz
add
leave
sbb
xor
cs
jbe
imul
cmp
mov
xchg
mov
mov
bound
cmp
xlat
fadd
in
nop
lods
outs
xor
xchg
push
or
push
push
int3
(bad)
(bad)
(bad)
dec
sbb
ror
mov
push
pop
test
enter
mov
inc
cmp
and
daa
(bad)
(bad)
(bad)
(bad)
dec
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
addr16
leave
repnz
sti
(bad)
(bad)
jmp
xchg
and
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
(bad)
(bad)
(bad)
jg
mov
stos
mov
cmp
or
mov
pop
out
sub
cld
(bad)
inc
push
daa
cmp
inc
xor
cmp
call
mov
(bad)
(bad)
jle
push
inc
mov
push
sbb
sar
repnz
test
nop
(bad)
(bad)
jmp
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
idiv
(bad)
(bad)
(bad)
jmp
dec
jp
iret
inc
bound
ds
push
cmps
scas
mov
pop
or
add
dec
in
xchg
cmp
xor
pop
cmp
sahf
xchg
pop
jmp
mov
mov
popa
mov
and
addr16
repz
(bad)
(bad)
jmp
mov
sub
and
and
outs
bound
xor
stos
and
iret
pusha
jmp
adc
inc
(bad)
push
es
add
loop
stc
jo
stc
or
fs
sub
xor
hlt
pop
shl
inc
mov
jmp
inc
cld
push
xor
addr16
mov
cli
(bad)
add
push
adc
test
and
inc
hlt
push
das
or
in
hlt
push
xor
add
push
adc
pusha
outs
jp
ins
inc
ret
xchg
xor
out
jno
aaa
pusha
add
data16
(bad)
jmp
mov
inc
push
push
inc
push
inc
pop
cmc
(bad)
aas
sub
jo
imul
push
dec
lahf
mov
mov
or
jecxz
mov
sub
mov
(bad)
(bad)
retf
shl
sub
pop
sbb
add
dec
mul
(bad)
outs
lea
test
outs
or
movs
cmp
cmp
in
jnp
xlat
push
or
ins
jo
ret
ds
cmp
fsubr
sub
and
and
and
lock
mov
pop
jle
add
pusha
iret
mov
and
or
push
push
mov
or
rcr
test
ss
popa
or
push
sub
or
mov
jg
sub
pop
sub
sbb
call
xor
pop
mov
or
sub
cld
ret
add
stos
mov
outs
lock
mov
pop
nop
add
stos
mov
mov
adc
mov
mov
inc
es
in
in
cmp
je
mov
lods
xchg
or
fldenv
fdivr
pop
nop
sbb
jecxz
fstp
add
push
loop
scas
mov
pop
xchg
pop
inc
or
fdiv
jbe
xchg
cmp
pop
(bad)
jb
cvtdq2ps
push
in
mov
loope
loope
add
stos
and
pop
les
mov
or
mov
mov
mov
clc
call
out
mov
aas
loop
push
imul
inc
adc
pop
loop
or
adc
push
mov
in
lods
mov
push
nop
pop
lea
push
sbb
ja
jle
sub
fld
icebp
inc
push
xor
sbb
mov
push
mov
cmps
sub
pusha
mov
clc
lods
les
cmp
push
jb
cmp
or
pop
or
jne
or
and
pop
inc
inc
and
dec
lds
pop
push
fbld
mov
adc
test
lds
rol
jmp
mov
pop
pop
outs
push
(bad)
pop
push
mov
jg
ret
cld
pop
jnp
push
jecxz
mov
cmp
dec
fucom
pop
mov
daa
inc
or
xchg
(bad)
push
arpl
test
mov
add
test
pop
mov
pop
(bad)
add
in
arpl
pop
mov
push
push
add
pop
inc
mul
(bad)
imul
mov
pusha
das
mov
movs
js
adc
add
dec
push
or
add
dec
jne
js
mov
add
sub
bound
sbb
mov
das
fsub
fbstp
dec
sbb
daa
and
aaa
push
dec
enter
inc
dec
mov
(bad)
xlat
pop
dec
repnz
add
retf
sbb
dec
in
fsubr
mov
push
pop
pop
push
xchg
push
hlt
push
das
fdivr
jl
div
xor
pushf
and
fs
cmc
das
clc
mov
mov
mov
or
or
pop
loopne
pushf
mov
push
imul
mov
push
and
inc
cmp
pop
cmps
adc
push
clc
lods
(bad)
ror
daa
push
jno
out
xchg
pop
mov
xor
adc
fsub
pop
test
jmp
pop
jecxz
jl
ja
dec
mov
dec
mov
(bad)
jg
inc
cmp
pop
jo
scas
push
and
and
(bad)
aam
cmp
(bad)
in
push
jle
je
aaa
xchg
rcl
push
xor
sbb
xchg
ins
cmps
pop
add
jbe
fs
add
or
in
retf
shl
sub
imul
push
adc
cli
sbb
jmp
mov
jmp
movsx
inc
inc
jmp
aad
or
sub
push
dec
jb
sub
and
pop
adc
loop
out
ja
fldenv
adc
jecxz
pop
arpl
neg
sub
push
fcomp
jne
fisub
sub
push
outs
pop
push
mov
mov
in
icebp
and
push
clc
push
sar
ins
aad
mov
cmp
cli
out
push
je
ja
and
outs
sub
jbe
inc
ja
pop
dec
scas
stc
and
mov
mov
sub
dec
(bad)
test
test
cmp
jbe
fistp
inc
adc
cmp
dec
fisttp
data16
mov
sbb
xchg
ficom
cs
fdivr
rcl
mov
mov
jmp
mov
mov
jecxz
clc
jecxz
mov
mov
adc
sbb
lock
jb
sbb
sub
pop
jnp
sbb
and
or
push
pop
jecxz
in
mov
or
push
icebp
pusha
jns
add
lds
scas
cmps
fwait
add
mov
(bad)
aas
cmp
adc
fbstp
fdivr
dec
fcom
pusha
mov
outs
adc
inc
inc
mov
je
inc
jl
out
jg
xor
jne
stos
or
rcr
and
cwde
adc
inc
enter
add
jae
xchg
push
iret
and
adc
ret
mov
adc
xchg
add
mov
scas
or
jmp
xchg
xor
(bad)
or
xor
mov
and
push
rol
aam
mov
cmp
sar
adc
test
push
scas
jno
and
imul
mov
sub
push
ja
cmp
sub
mov
push
add
pop
push
push
push
push
push
test
lds
sbb
imul
pop
xor
inc
dec
cmps
lea
sbb
bound
mov
push
cwde
iret
aam
in
or
adc
or
xchg
dec
cmp
fs
cmp
mov
jmp
ret
icebp
(bad)
pop
push
add
jmp
ret
cwde
ror
dec
add
and
jg
je
cmp
push
sub
fmul
sub
je
jmp
add
sti
jg
call
xor
push
cmp
cmp
(bad)
in
sti
ins
adc
and
cmp
cmp
mov
jmp
mov
leave
jmp
mov
jmp
mov
jmp
bndldx
into
jmp
mov
jmp
mov
push
clc
(bad)
or
js
or
mov
push
or
pop
ret
or
mov
(bad)
jge
sub
or
ficomp
test
js
aaa
inc
sbb
mov
cli
loopne
call
out
stc
push
jg
pusha
adc
sub
sti
cmp
shr
mov
pop
cmp
out
xor
or
scas
or
mov
and
in
cwde
mov
add
jmp
addr16
mov
cmp
mov
shl
cmp
or
and
inc
in
add
adc
imul
xor
(bad)
int3
mov
jge
leave
adc
xor
pop
jle
dec
mov
lods
fstp
not
adc
jmp
adc
pop
pop
xor
bound
cmps
mov
movs
outs
cmp
mov
dec
cld
in
gs
cmp
jle
mov
(bad)
inc
imul
jg
clc
int
mov
nop
push
arpl
mov
outs
xor
movs
(bad)
jbe
add
shl
pop
fsub
xor
mov
or
scas
adc
movs
fisttp
int3
out
sub
dec
or
sbb
mov
call
push
das
cmc
inc
in
cmp
jge
fs
ret
arpl
mov
sub
out
rcr
jl
je
das
jmp
jne
mov
pop
dec
sbb
xor
jne
pop
loopne
adc
pop
jb
ror
push
loop
jnp
add
push
hlt
pop
mov
fdivr
pop
pop
xchg
daa
mov
mov
add
add
es
or
mov
fs
xor
outs
dec
(bad)
mov
add
neg
mov
pop
adc
adc
jbe
pop
xor
fdiv
outs
(bad)
and
and
mov
mov
push
sub
ffreep
loope
aaa
xchg
xchg
rol
adc
jle
inc
cli
outs
adc
ja
add
mov
mov
ror
leave
sti
push
cmp
inc
dec
cmp
fcomp
push
sbb
and
or
dec
dec
dec
mov
push
je
adc
jb
xchg
sbb
add
jl
ret
aam
xor
and
cmp
sbb
adc
add
jne
mov
xchg
inc
cmp
aas
scas
pop
stos
adc
(bad)
loope
jmp
int3
sahf
cs
jbe
xchg
xor
stos
push
mov
jne
pop
dec
cmp
or
out
sbb
sbb
sbb
jnp
aas
sbb
push
clc
pop
icebp
dec
loopne
imul
imul
fdiv
push
scas
inc
lahf
push
jne
push
mov
mov
ror
and
sbb
and
push
icebp
mov
inc
push
sti
data16
mov
rcr
xchg
test
(bad)
jmp
xor
cwde
and
push
pop
and
loop
aas
lods
push
push
loopne
adc
or
fadd
dec
rol
mov
cld
mov
(bad)
mov
sbb
(bad)
mov
sbb
shl
inc
add
push
add
push
hlt
mov
test
push
mov
mov
adc
push
and
push
sub
scas
xchg
cmp
(bad)
aas
rcr
mov
clc
dec
jl
adc
mov
sub
jne
clc
scas
out
mov
adc
sbb
add
ins
fs
or
cmp
scas
jae
jne
sbb
and
inc
jg
jno
das
push
loop
push
sub
mov
or
jmp
mov
xchg
dec
inc
fnstenv
ss
or
test
test
add
push
(bad)
push
and
mov
pop
cmps
adc
xchg
mov
imul
mov
mov
xchg
pushf
bound
mov
lds
ror
pop
or
dec
aad
push
xchg
add
pop
mov
jae
cmp
int3
or
push
jno
mov
fyl2x
outs
clc
ins
jg
pop
mov
jmp
lea
cmp
push
inc
mov
push
out
mov
cmp
inc
aas
jl
push
das
icebp
ins
inc
out
adc
mov
add
ins
ins
mov
call
xchg
pop
neg
jge
xor
jl
adc
jl
mov
mov
mov
mov
push
and
je
xchg
mov
mov
jle
add
(bad)
not
xchg
sbb
call
pop
sub
jmp
arpl
sub
and
imul
sub
add
xor
jmp
add
mov
ins
add
cmp
cmp
mov
inc
dec
nop
push
sub
repnz
loopne
pop
add
pop
pop
sbb
add
add
cld
not
out
xchg
mov
aad
cmp
jl
(bad)
inc
(bad)
movs
rol
retf
lahf
imul
cmps
test
sub
cs
pushf
or
idiv
rcl
dec
arpl
add
jo
cmp
mov
mov
mov
jmp
adc
sub
push
sbb
aaa
fistp
mov
arpl
cmp
je
in
push
jmp
mov
loopne
fistp
lock
ror
sbb
jo
jnp
lea
dec
(bad)
call
mov
push
stos
popf
sbb
pop
cmp
inc
mov
jmp
jo
and
push
pop
test
fsub
xor
hlt
xchg
adc
cmp
ror
dec
push
cmp
jl
pop
adc
pop
cmp
dec
sub
lods
jnp
jne
pop
pop
jnp
ja
and
dec
into
cmp
push
add
dec
jmp
cdq
push
mov
pop
mov
inc
pushf
cmp
or
add
scas
add
mov
idiv
and
jmp
xchg
imul
add
sub
jne
push
pop
cld
std
(bad)
test
cdq
push
adc
and
sub
enter
sbb
xor
or
push
mov
fisttp
mov
nop
jns
mov
cmp
pop
adc
(bad)
mov
cmp
jmp
push
clc
inc
cmps
jmp
mov
imul
cmp
mov
push
(bad)
xchg
rcl
adc
in
stos
sbb
inc
in
cmc
ret
mov
aas
cmp
loope
shl
push
rol
arpl
clc
fistp
dec
jl
cmp
jge
sub
fwait
sbb
or
(bad)
fnstsw
in
jmp
adc
pop
dec
inc
cmp
shl
xor
sub
es
or
jle
sub
fwait
jle
stc
add
je
pop
mov
push
adc
jns
call
scas
loope
dec
(bad)
cld
xchg
cmp
jl
aam
push
out
sbb
add
popf
mov
fcomp
loop
sbb
mov
aam
cmp
out
add
or
inc
dec
jecxz
push
xor
cmp
jb
and
jmp
(bad)
xor
mov
add
ret
dec
out
push
xchg
jmp
ret
sti
mov
and
sbb
jae
iret
repz
push
jae
dec
cwde
dec
push
shl
enter
mov
mov
xor
xchg
mov
fcom
lock
aas
mov
sub
xor
sub
sub
push
fisttp
dec
call
stos
mov
sbb
loopne
jne
aas
or
pushf
add
(bad)
jle
sub
mov
adc
icebp
and
add
arpl
inc
ins
xor
pop
popa
in
pop
mov
push
loope
xorps
les
data16
push
push
mov
dec
jb
dec
push
sbb
daa
xor
cmp
and
pop
leave
dec
adc
lods
mov
nop
pop
fs
aas
jl
pop
add
cs
fs
pop
xor
ins
jmp
pop
inc
enter
xor
dec
push
xchg
or
sbb
pushf
lock
enter
xor
xor
mov
xchg
jg
lods
ss
into
or
add
and
cld
pusha
jo
out
mov
shr
mov
mov
ficom
push
outs
or
or
shl
fist
jmp
mov
inc
dec
dec
add
pop
xor
(bad)
or
int3
or
add
pop
and
mov
pop
and
and
jmp
loopne
mov
push
push
cvtps2pd
or
pop
and
or
imul
lock
inc
in
cmp
jge
pop
dec
cmp
sbb
sub
lock
or
add
add
dec
or
mov
iret
in
(bad)
sbb
adc
int
daa
dec
or
ins
aas
rol
push
xlat
pop
shr
lock
fmulp
add
inc
push
adc
or
aas
rcl
push
mov
push
loopne
jno
adc
mov
jno
adc
inc
pop
add
push
xor
adc
and
sbb
adc
mov
call
and
pop
jmp
mov
pop
jg
push
mov
cmp
cmp
je
cmp
jbe
or
mov
cmp
je
cmp
sub
cmp
pop
mov
dec
rcl
pop
inc
xor
jg
not
cmp
ds
leave
cmp
aas
xchg
jmp
fidivr
cmps
inc
movs
repz
sti
pop
cmp
aad
push
or
dec
rcr
sbb
call
sbb
repnz
sub
mov
mov
push
sbb
retf
inc
xor
or
idiv
and
fimul
dec
sbb
and
mov
ins
prefetcht2
or
pop
cmps
xchg
lea
outs
sbb
out
in
sub
jle
test
ret
rol
cld
adc
retf
(bad)
add
je
or
dec
or
data16
je
xor
mov
xor
xor
mov
stc
and
aas
mov
mov
loope
stc
clc
push
add
je
jp
inc
dec
cld
or
inc
test
lds
pop
add
cmp
(bad)
dec
push
mov
and
push
aam
push
inc
mov
fcmovbe
xor
pop
jmp
mov
and
dec
psadbw
popa
test
bnd
sahf
es
lods
mov
daa
cmp
out
dec
jne
push
inc
jno
mov
lds
sar
adc
adc
lock
dec
cwde
cmp
sbb
or
mov
inc
pop
and
call
adc
mov
imul
add
sub
push
fisub
or
std
dec
mov
mov
push
xor
sub
adc
shl
pop
ror
sbb
push
test
pop
pop
inc
cmps
stos
adc
xchg
ins
mov
dec
xlat
mov
mov
mov
adc
sti
add
pop
add
jbe
(bad)
cmp
sbb
mov
mov
hlt
cmp
(bad)
push
fadd
xlat
adc
je
add
jmp
pop
cmp
fs
add
(bad)
dec
push
sub
push
push
push
ja
das
or
stc
div
ins
call
test
in
not
dec
sub
mov
adc
inc
ret
cmp
sbb
cli
mov
cmp
sbb
mul
jg
xlat
imul
ret
sub
jg
dec
mov
mov
xchg
lods
loopne
call
push
mov
jbe
gs
inc
in
jge
add
sub
cmp
fsubrp
inc
dec
xor
mov
pop
add
push
adc
enter
add
xchg
mov
adc
imul
cmps
into
add
sub
pop
imul
add
push
adc
outs
jno
jge
jle
int3
or
dec
mov
mov
inc
sbb
lods
mov
mov
pusha
mov
(bad)
cmovg
mov
mov
cmpxchg
add
mov
sub
mov
xor
sub
inc
xchg
dec
daa
arpl
pop
xchg
dec
outs
push
mov
jb
mov
and
mov
es
sbb
push
imul
adc
dec
and
inc
div
mov
sti
push
push
inc
xchg
ret
adc
push
pop
mov
mov
scas
clc
or
add
jne
push
in
and
mov
push
mov
mov
mov
mov
add
or
outs
test
and
jae
add
je
or
cs
ret
mov
push
fdivr
clc
aad
xchg
mov
mov
xor
aaa
ss
mov
inc
xchg
out
cs
xor
jecxz
sahf
add
lods
mov
clc
push
mov
dec
dec
imul
sahf
cld
sahf
push
add
adc
mov
jecxz
and
mov
dec
pop
ret
lods
inc
add
rol
adc
scas
sti
das
sub
loope
or
pop
js
pop
fild
dec
add
mov
or
mov
adc
add
or
mov
out
call
fisubr
push
inc
mov
data16
cmp
ja
inc
int3
sub
arpl
mov
ss
xor
inc
push
push
xor
xor
inc
mov
dec
repz
push
mov
mov
and
std
(bad)
fbstp
xor
push
cmps
ret
push
mov
pop
mov
fimul
mov
outs
jle
aas
inc
add
not
test
sub
dec
nop
and
xchg
imul
gs
xor
pop
std
clc
xor
fs
ins
iret
inc
gs
outs
addr16
popa
stc
or
outs
or
ins
gs
adc
ret
mov
jbe
arpl
hlt
mov
pushw
add
dec
movs
push
sbb
cmp
sub
popf
in
sbb
sbb
or
in
loope
xchg
lods
inc
call
or
cld
push
fiadd
loopne
add
repnz
adc
adc
mov
nop
les
std
pop
jecxz
and
push
push
repz
iret
in
addr16
push
cmp
sbb
pushf
or
pop
cwde
xchg
cs
or
jle
mov
(bad)
fdiv
or
ins
xor
sub
shl
ret
test
push
in
aaa
inc
xor
je
pop
jo
pop
fdiv
repz
mov
mov
out
or
test
mov
push
arpl
adc
xor
icebp
popa
pusha
and
dec
lock
dec
xchg
inc
mov
adc
mov
mov
pop
stos
ja
or
cmp
outs
test
mov
lds
mov
dec
(bad)
and
jmp
mov
sahf
mov
add
out
cli
sub
rol
mov
es
jmp
iret
or
pop
xchg
movs
add
push
mov
leave
mov
in
mov
clc
sbb
push
or
ja
(bad)
cmp
scas
mov
cmp
xchg
dec
test
jmp
dec
inc
add
je
push
mov
out
dec
dec
pop
cmp
inc
xchg
add
cmp
pop
mov
and
push
jecxz
xor
jne
into
pop
push
int3
push
ret
mov
cs
or
or
push
pop
sbb
pusha
pop
in
sbb
push
and
and
je
push
dec
dec
xor
arpl
mov
xor
adc
cs
add
(bad)
sub
jae
inc
shl
loope
push
cmp
rcl
mov
inc
sbb
cwde
shl
adc
jo
jg
sahf
outs
and
xor
or
icebp
and
push
jb
pop
jl
jns
not
stos
xchg
pop
stos
pop
jmp
jg
push
mov
inc
jmp
mov
jle
les
xor
ja
fcmovb
test
or
retf
loopne
sbb
or
and
or
mov
loop
retf
add
sub
mov
add
push
shl
les
cwde
add
dec
or
fld
frstor
mov
mov
xor
sbb
or
add
sbb
jecxz
push
loopne
das
xor
lock
push
and
inc
mov
xor
push
and
(bad)
repnz
jmp
hlt
call
or
inc
test
fld
lods
mov
adc
je
sbb
dec
ins
loopne
rol
(bad)
es
push
rol
loope
or
mov
fld
and
out
fidivr
adc
jmp
sub
or
inc
dec
jecxz
loopne
out
cmp
add
sti
mov
add
sahf
dec
and
mov
ret
aaa
push
or
adc
(bad)
cli
xor
sbb
xor
xchg
data16
pushf
lock
xchg
mov
daa
xor
push
loopne
push
pshufw
fwait
jnp
je
(bad)
push
cwde
inc
push
mov
add
or
sbb
pushf
pop
fcom
ret
mov
dec
and
mov
dec
cmp
inc
and
dec
sub
icebp
bnd
int
leave
push
out
sub
hlt
push
fwait
rcl
fisub
retf
jne
movs
add
in
adc
and
lea
sar
push
stos
mov
(bad)
pop
pop
mov
add
xchg
jl
mov
mov
pop
mov
push
pop
sub
jmp
pop
loopne
rol
push
jb
sqrtps
dec
repnz
or
or
adc
add
jle
cmp
mov
add
sbb
dec
fimul
sbb
or
call
add
push
inc
cmp
add
push
jmp
cwde
xchg
js
cmps
call
lods
call
jne
mov
cwde
das
xchg
mov
push
test
inc
mov
in
push
mov
clc
(bad)
addr16
or
enter
adc
add
jo
jl
inc
push
mov
mov
popf
pop
adc
(bad)
ss
and
fsub
dec
lods
gs
or
mov
push
mov
lock
and
pop
pop
pinsrw
lods
dec
(bad)
add
clc
ja
sub
sub
and
cmps
or
shl
cld
push
in
int3
ja
xor
inc
inc
lods
in
adc
mov
mov
add
ret
mov
xchg
lds
je
xchg
adc
(bad)
and
js
scas
pushf
dec
dec
sar
aaa
js
jne
mov
jg
push
and
into
test
mov
lods
push
add
sbb
xor
xor
xor
or
ins
push
enter
push
or
enter
inc
xor
and
and
and
and
sbb
or
enter
add
nop
daa
add
cld
clc
nop
inc
push
sbb
lock
inc
push
sbb
loopne
sbb
fcom
rcr
fs
inc
int3
enter
inc
push
sar
mov
inc
push
sbb
mov
pushf
cwde
xchg
nop
sbb
mov
push
cmp
push
sbb
je
push
sbb
pop
push
sbb
push
push
dec
sbb
dec
inc
inc
fs
inc
push
cmp
xor
inc
push
sbb
sub
or
fs
sbb
pop
(bad)
out
pop
aaa
leave
icebp
adc
or
loop
sbb
pop
fld
push
mov
pop
ds
test
test
icebp
or
enter
hlt
xor
and
and
and
std
or
(bad)
jmp
loope
xor
and
jecxz
xor
and
dec
mov
fistp
pop
jmp
enter
pop
in
in
enter
out
out
shl
or
rcl
or
aam
(bad)
xlat
or
enter
fidiv
enter
(bad)
enter
(bad)
shl
or
rol
or
(bad)
(bad)
or
enter
retf
and
and
and
mov
or
enter
mov
xor
and
and
and
and
mov
movs
movs
cmps
cmps
or
enter
stos
leave
test
add
repz
fs
jbe
and
test
or
add
mov
das
or
arpl
ins
inc
int3
jbe
and
adc
sbb
jle
adc
gs
jo
inc
pop
and
nop
pop
pop
sub
clc
(bad)
xchg
or
sub
dec
les
or
or
outs
pop
or
pop
mov
push
(bad)
mov
sbb
aaa
add
(bad)
popa
fwait
push
pop
xor
and
pop
nop
adc
pop
xchg
xor
or
or
xor
push
in
cld
jmp
jns
dec
or
imul
outs
nop
add
and
rol
popa
mov
gs
pushf
lea
enter
xchg
in
cld
retf
dec
outs
jbe
jb
ins
outs
ja
clc
or
adc
mov
lods
adc
push
push
lods
xchg
daa
das
pop
push
pop
lods
sub
mov
imul
or
mov
jb
or
pop
gs
pusha
add
imul
int
imul
out
in
sub
pop
push
outs
fs
nop
push
and
xchg
pop
push
outs
imul
or
or
or
pop
inc
sbb
push
outs
pop
push
or
xlat
(bad)
push
mov
pop
(bad)
(bad)
retf
sbb
add
inc
inc
arpl
push
in
scas
pop
mov
sub
jecxz
enter
push
jb
xchg
outs
and
jl
mov
jl
push
sub
xchg
je
arpl
pop
fdiv
inc
pusha
fadd
je
or
cs
inc
imul
arpl
ret
xor
or
fs
xchg
lahf
pop
mov
les
(bad)
or
outs
fs
pop
in
in
fs
push
pop
or
je
add
dec
pop
fs
dec
jbe
pusha
stos
data16
sbb
cmp
adc
mov
cld
dec
mov
cld
(bad)
push
mov
data16
gs
add
aaa
xor
ins
cmp
imul
sbb
push
and
imul
and
cmp
sbb
test
fiadd
call
inc
dec
mov
xor
push
push
push
aas
mov
(bad)
jne
int3
add
mov
mov
mov
mov
xor
pop
cmp
jg
add
stc
push
aad
ret
push
mov
jnp
fwait
in
call
push
loopne
sbb
sub
fwait
cmp
inc
mov
and
data16
test
stc
add
mov
jne
movs
pop
aaa
mov
jne
je
push
ins
jbe
pop
push
cmc
popf
imul
out
push
ret
adc
ins
das
shl
repz
adc
dec
rol
retf
mov
es
mov
sub
imul
cmp
ss
(bad)
fidiv
mov
sub
xchg
cmp
ja
test
aas
mov
ror
adc
arpl
sub
or
or
sub
mov
sub
movs
jmp
adc
mov
aaa
jae
call
jae
xor
pop
add
xchg
aaa
xchg
xchg
movs
and
or
or
ins
sub
ret
mov
jb
mov
je
repz
sub
pop
(bad)
and
mov
ret
sub
movs
xor
mov
add
ror
jg
dec
cmp
out
rcl
push
mov
fdiv
mov
cmp
jne
ror
pop
push
fcomp
dec
xor
jle
cmp
jg
sbb
inc
stc
push
jg
adc
pop
mov
pop
jg
fwait
pop
pop
cmp
jne
loop
test
dec
mov
push
add
mov
fstp
ret
mov
cld
push
push
mov
mov
fld
jmp
fucomi
outs
mov
add
pop
adc
fdiv
add
mov
cmp
jl
cmp
jg
(bad)
popa
jmp
cmp
or
jmp
sub
jne
das
and
clc
cmp
je
jp
sub
sub
pop
lods
jl
mov
pop
pop
mov
call
pop
or
imul
cld
jne
cwde
mov
addr16
mov
stos
jmp
dec
cmc
test
or
push
and
mov
(bad)
int
mov
adc
test
mov
push
xchg
test
ror
(bad)
jmp
mov
pop
add
repz
cmp
jbe
or
push
(bad)
ins
mov
adc
clc
cmp
mov
into
sub
mov
pop
mov
push
data16
ficom
and
push
mov
enter
pusha
mov
test
aas
push
sti
in
stos
pop
mov
lds
jle
pop
jmp
adc
inc
pop
dec
hlt
jne
pop
in
or
(bad)
and
mov
loop
sub
inc
cmp
jne
mov
dec
out
lea
(bad)
lods
jo
mov
clc
dec
pop
pop
add
mov
mov
xchg
daa
mov
sub
mov
(bad)
and
jle
sub
sbb
mov
pop
pop
xchg
shl
xor
add
xchg
mov
and
or
pop
inc
outs
cmc
add
add
mov
mov
add
je
or
mov
xor
mov
test
and
test
(bad)
movs
xlat
fwait
cmp
mov
inc
fimul
test
je
or
push
stc
fcos
in
or
dec
jne
jmp
inc
inc
mov
or
cmp
cdq
push
fisubr
ret
or
mov
jns
sub
ins
ds
inc
dec
mov
ret
push
cli
cmp
test
cmp
jb
pop
pop
mov
outs
std
mov
jmp
adc
shl
mov
mov
fild
cli
xor
in
adc
aaa
xor
dec
repnz
test
xor
imul
add
jmp
jo
push
mov
neg
or
add
mov
(bad)
cmp
mov
dec
inc
aaa
or
add
jl
add
cmp
cmp
or
enter
and
push
and
fild
ret
mov
push
jo
jle
add
mov
dec
fprem
fild
stc
mov
(bad)
(bad)
add
push
push
fcom
fstsw
sahf
jae
fnstenv
mov
ffree
ffree
ffree
pop
jmp
add
mov
or
xchg
and
adc
out
into
out
adc
xchg
dec
add
sub
push
inc
mov
mov
xchg
ret
mov
push
ret
xor
and
mov
mov
fs
fcom
ficomp
xchg
xor
push
xchg
adc
ss
inc
pop
out
daa
popw
xor
ss
pop
aaa
or
jl
mov
sub
ud1
pop
daa
loope
je
daa
stc
pop
jne
mov
adc
in
and
xor
xor
adc
push
adc
loopne
jb
stos
pop
mov
adc
pop
ror
pop
jl
sub
mov
int3
inc
add
inc
cmp
cmps
in
mov
or
and
or
aas
or
xchg
sbb
and
shr
sbb
add
leave
(bad)
jmp
dec
hlt
jne
sub
mov
aaa
pop
cmc
adc
xor
sti
dec
fild
fld
fcomp
or
sub
xchg
add
dec
sbb
and
dec
shl
sbb
mov
outs
mov
xor
addr16
push
fs
pop
and
adc
ret
int
xchg
xor
add
xor
push
fdiv
sub
outs
stos
xchg
mov
scas
adc
dec
(bad)
arpl
and
adc
test
or
(bad)
mov
adc
fdivr
add
pop
xor
mov
push
jg
pop
jl
inc
ja
rol
inc
ja
mov
push
add
fisttp
mov
rol
push
popa
sbb
pop
mov
push
and
(bad)
push
lods
push
mov
js
dec
inc
and
(bad)
jae
in
neg
stos
pop
sub
push
cmp
dec
push
sub
and
add
add
mov
daa
add
jne
jae
mov
inc
cld
dec
adc
or
stc
and
leave
test
ret
rol
fdiv
adc
add
pusha
sbb
mov
sti
cmp
(bad)
push
inc
or
push
les
sti
add
add
inc
(bad)
pop
jnp
or
jno
pop
outs
dec
pushf
sub
cmps
rcr
cs
cmps
clc
mov
sbb
mov
mov
sbb
add
push
aad
je
(bad)
xlat
mov
cld
arpl
cmp
add
dec
scas
jg
sub
or
(bad)
ja
add
cli
jl
xchg
adc
ja
mov
fsubr
loop
sub
push
jmp
cmp
or
dec
add
jnp
cmp
jle
xchg
xor
sbb
mov
add
adc
ja
lock
mov
jo
sbb
mov
pop
cmp
and
loopne
loop
and
push
les
mov
sbb
xchg
pop
call
mov
mov
iret
push
add
clc
cld
push
cmp
xor
ins
rcl
mov
mov
dec
hlt
or
xchg
lods
adc
xchg
mov
or
imul
adc
xchg
stos
or
nop
sub
ss
inc
shl
ficomp
sbb
inc
add
or
jne
ret
add
ret
add
jmp
(bad)
mov
mov
(bad)
cmp
cdq
(bad)
shl
into
rcr
push
push
das
ficomp
retf
and
mov
inc
sub
mov
mov
cmp
sar
mov
movs
loopne
xchg
xchg
(bad)
push
xlat
mov
xor
or
clc
or
xor
jge
repz
je
mov
xchg
sbb
ja
sub
mov
cs
sub
or
jmp
fild
fisub
xor
stc
cmp
jne
adc
inc
mov
xchg
mov
jg
ror
cs
mov
(bad)
jbe
lods
mov
pop
rcl
lods
mov
mov
push
cmp
enter
int
loope
call
mov
int3
mov
or
mov
inc
es
and
test
adc
je
test
jae
stos
call
mov
jo
dec
ja
loope
(bad)
push
inc
test
jbe
pop
das
jl
inc
mov
pusha
cmp
dec
dec
mov
outs
ja
sbb
push
inc
mov
les
push
sub
ja
fs
sub
push
fisub
push
test
rcr
or
sbb
pop
xlat
lods
sbb
xchg
push
xchg
loope
scas
mov
sub
(bad)
mov
std
pop
mov
hlt
mov
pop
mov
lea
cmp
in
mov
mov
sub
js
push
lock
cmps
bnd
mov
cmp
push
mov
scas
adc
jbe
int
sar
adc
lods
jmp
mov
jmp
mov
fmul
mov
xchg
jle
jae
fild
in
mov
shl
movs
xchg
or
mov
aas
mov
rep
or
hlt
xchg
aas
arpl
or
dec
popf
jne
inc
cmp
sar
jb
or
paddw
ja
imul
ja
xchg
pop
ret
xchg
add
pop
daa
retf
and
jg
inc
jle
int3
mov
cmp
je
leave
(bad)
add
and
mov
iret
sbb
cld
addr16
jne
lea
mov
push
int
imul
add
sub
mov
scas
or
pop
push
add
scas
jmp
fwait
pop
add
adc
add
or
add
ret
js
int
dec
fsubr
shl
mov
jne
adc
stos
movs
dec
inc
mov
inc
inc
test
inc
cmc
dec
mov
sbb
and
xor
xor
inc
push
enter
hlt
nop
hlt
ins
cmc
or
ja
cmp
adc
mov
xor
sub
mov
cmovnp
stc
dec
out
shr
dec
outs
and
lods
fild
fisttp
adc
jmp
sar
js
push
mov
jo
in
add
pop
and
ins
aad
mov
jbe
(bad)
pop
cmp
mov
or
add
add
mov
lods
adc
push
jmp
mov
dec
mov
int3
pop
pop
push
leave
jge
lds
(bad)
repz
cs
mov
das
mov
mov
push
inc
je
mov
inc
je
pop
mov
retf
mov
dec
std
ds
mov
mov
mov
ret
mov
jbe
jne
retf
mov
adc
push
adc
mov
fwait
movups
cmc
test
iret
movs
jp
cmps
out
lods
inc
jl
ret
sbb
adc
adc
add
cwde
push
inc
mov
jp
cmp
adc
inc
add
or
or
xlat
(bad)
jne
inc
or
mov
dec
lds
add
shl
jns
mov
jp
push
invlpg
mov
add
jge
adc
add
hlt
out
dec
add
cmc
dec
hlt
jge
jmp
sub
in
pushw
into
mov
pop
jg
jmp
adc
add
call
sbb
pop
ins
fcom
mov
fild
push
inc
mov
add
jle
xor
xchg
inc
mov
add
les
imul
mov
mov
mov
retf
mov
in
mov
stos
xchg
push
mov
adc
push
js
mov
inc
dec
adc
fbld
pusha
jg
dec
mov
stos
cmp
jne
pop
pop
xchg
sbb
mov
pop
or
mov
pop
ds
repz
or
cmps
ins
xor
push
adc
test
je
in
sbb
js
or
xor
add
adc
sub
out
add
stos
add
jge
jge
in
sbb
pop
or
sub
pop
jnp
lea
pop
stos
js
test
out
cs
cmp
dec
pop
adc
ja
emms
outs
fdiv
jle
ror
pop
unpcklps
push
sbb
cmp
sti
pop
pop
stos
jmp
in
icebp
aas
enter
dec
dec
inc
dec
inc
dec
lods
or
xor
ret
cdq
(bad)
and
sub
das
adc
xor
or
sbb
sbb
test
sub
je
mov
inc
mov
(bad)
inc
jge
mov
stos
loop
pop
adc
or
mov
daa
push
fwait
cdq
cs
ins
push
pop
add
mov
mov
dec
or
inc
cmp
leave
mov
mov
mov
cmp
dec
cli
adc
mov
jnp
xchg
add
pop
pop
mov
mov
repz
pusha
sti
adc
dec
jne
(bad)
cli
popf
jmp
pop
ds
stos
sbb
call
add
jnp
out
stos
jecxz
cmp
or
stc
cs
(bad)
outs
mov
ret
dec
jns
jno
jg
jl
or
cmp
xchg
mov
add
lea
cmp
bound
mov
push
push
push
cmp
jmp
or
jl
xlat
push
sbb
jne
loop
push
lock
mov
mov
or
imul
add
lods
fst
sub
inc
sub
fbld
sub
or
add
adc
sub
mov
sub
sub
jmp
loopne
inc
push
sub
je
frstor
(bad)
jle
jg
or
(bad)
sub
ret
fild
push
jne
test
cmp
sub
adc
jle
add
js
mov
xor
mov
jl
rcl
ins
clc
adc
iret
mov
fabs
push
in
int3
in
fbstp
fld
fstsw
fwait
pop
fistp
add
fidiv
jne
lea
jl
jnp
mov
inc
sub
dec
ror
movhps
or
xor
popf
jmp
jmp
add
jns
cld
data16
inc
fsubr
add
call
jae
jle
hlt
dec
xchg
cmp
xor
add
or
out
adc
in
jmp
data16
mov
add
sbb
frstor
mov
xor
mov
or
mov
add
ret
add
cmc
fs
(bad)
push
xchg
test
or
lods
(bad)
jo
pop
mov
dec
xchg
lods
push
test
imul
(bad)
jge
mov
pop
mov
sub
cmps
sbb
jae
dec
add
inc
je
jnp
fild
shl
mov
ficomp
fidiv
sub
ss
or
jle
mov
jne
into
and
jne
dec
adc
cmp
test
push
div
sub
mov
adc
sub
mov
mov
cmp
idiv
fisttp
push
mov
mov
push
adc
sbb
shr
pop
fstcw
lds
js
fnclex
jmp
push
imul
pop
xor
(bad)
add
cmc
add
push
fcom
lods
add
xor
test
adc
cmp
frstor
rol
ret
in
mov
dec
jne
sti
iret
mov
sub
fchs
push
outs
mov
sbb
fstp
xor
test
mov
mov
jmp
call
push
data16
and
ret
sub
add
jae
in
lods
add
fiadd
inc
jmp
sbb
sti
scas
stc
xchg
sub
fidivr
inc
imul
pop
jmp
mov
dec
inc
cdq
movs
pop
pmaxsw
dec
ins
inc
xor
push
retf
mov
sub
dec
outs
das
add
and
sbb
(bad)
pop
jg
mov
add
add
push
aam
loop
inc
or
sub
fstp
fwait
dec
mov
pop
gs
jae
mov
xchg
pusha
mov
and
jl
jmp
pop
pop
jmp
sub
mov
test
pusha
or
xchg
ds
inc
add
dec
shl
or
gs
test
add
stc
or
inc
ret
cmp
mov
xor
shr
pusha
in
in
frstor
call
fsubr
dec
fild
fdiv
fisttp
fwait
add
pop
nop
push
inc
adc
ins
ins
test
les
add
push
std
mov
add
dec
ins
or
cdq
retf
jo
mov
in
(bad)
add
cld
popa
mov
pop
call
ins
dec
lock
enter
loopne
mov
or
fisubr
js
ss
xchg
mov
mov
add
test
pop
imul
jno
adc
ja
add
adc
push
int3
add
in
jge
push
lods
stos
outs
(bad)
add
out
outs
in
ja
adc
jb
add
sti
imul
(bad)
jl
(bad)
ja
or
adc
dec
int3
push
jnp
add
arpl
rol
adc
lahf
cdq
xchg
mov
clc
idiv
imul
jns
ret
mov
add
repnz
pop
mov
stc
add
xor
adc
and
add
out
mov
jo
out
std
adc
xchg
call
jmp
or
pop
fs
int
pop
clc
hlt
add
daa
fld
push
es
xlat
mov
add
dec
data16
or
or
jl
sub
adc
xor
cmp
sub
fwait
lods
mov
pushf
sub
add
or
dec
lock
push
mov
push
imul
push
fsubr
dec
jmp
mov
sub
lock
push
sbb
daa
pop
lock
ins
adc
mov
mov
cmp
stc
pop
mov
dec
cmp
jb
or
sub
cmp
fistp
sbb
clc
pop
push
popa
sbb
aam
or
sub
add
dec
cmp
scas
sbb
out
push
clc
ret
xor
xor
cmp
dec
inc
sti
lock
inc
dec
aad
or
and
or
test
push
cdq
cld
pusha
shl
mov
inc
sbb
neg
lea
xchg
or
mov
cli
lahf
icebp
pop
xlat
or
je
mov
and
loopne
push
cmp
fwait
test
add
(bad)
or
inc
mov
mov
aaa
jne
push
inc
popa
mov
add
fdiv
stc
or
scas
mov
out
push
cmp
(bad)
mov
and
mov
pop
sub
fnstsw
shr
pop
jge
or
fstp
out
data16
dec
out
add
test
or
inc
in
add
aaa
jecxz
xchg
mov
dec
sub
push
ds
and
xor
nop
js
jl
stos
in
or
nop
scas
cwde
fiadd
adc
cmp
repnz
cmp
in
or
out
out
int
jb
add
or
push
in
push
outs
in
shl
and
push
xlat
push
sahf
loop
call
xchg
sub
push
mov
cmp
enter
add
push
mov
sbb
shr
imul
lods
sbb
or
mov
int3
jb
push
mov
jge
mov
mov
sahf
movs
add
bound
push
stos
js
sbb
cmp
lods
xchg
cmc
lods
fsub
mov
dec
or
sub
sbb
or
sbb
ret
in
popa
not
push
sub
pop
push
adc
fiadd
inc
addr16
pop
ret
jne
dec
inc
mov
jg
jp
adc
repnz
jmp
mov
sub
test
or
test
cmp
jne
dec
mov
add
nop
xchg
add
mov
xchg
add
daa
xor
sbb
add
mov
ror
fs
xchg
cmp
nop
ds
pop
shl
xor
mov
mov
add
ud0
scas
loop
add
add
loope
or
lahf
int3
nop
jns
pop
jb
mov
(bad)
imul
adc
push
lea
pop
retf
or
add
leave
adc
fadd
cmps
sti
je
mov
sub
jae
or
mov
rol
push
sti
push
add
pop
loop
pop
ficom
lock
ja
(bad)
ffree
int3
push
and
push
dec
paddsb
addr16
cld
add
add
ja
push
or
add
sahf
fmul
add
fdiv
out
imul
out
imul
sti
in
call
in
pop
push
xchg
pop
add
and
ror
pop
inc
loop
std
mov
fwait
jge
mov
add
push
clc
sub
lea
adc
sar
aam
or
not
sbb
sbb
xor
cmp
cmps
adc
sub
test
fs
outs
(bad)
or
dec
je
add
jg
push
add
pop
xchg
out
int3
rol
pop
mov
test
mov
sub
and
in
or
(bad)
push
pop
xchg
loopne
sbb
pop
push
iret
rol
loopne
sbb
dec
jg
je
fisub
je
add
je
sbb
pusha
mov
call
je
jmp
mov
jne
inc
mov
mov
xlat
inc
or
adc
mov
and
enter
sbb
mov
pop
xrelease
in
pusha
inc
leave
popa
test
call
xchg
ficomp
inc
add
jmp
push
mov
or
or
add
in
xlat
pop
sbb
push
mov
mov
xor
xchg
inc
mov
sub
popa
add
call
add
sbb
in
rol
adc
jmp
dec
mov
imul
pushf
cmp
and
inc
inc
add
push
cmp
ret
xor
jae
loop
int
fdiv
movs
jmp
adc
inc
test
dec
inc
xor
shl
cmp
add
xchg
fadd
add
ss
pushf
jmp
and
test
inc
sbb
add
and
or
pop
retf
and
mov
xchg
movs
sti
loop
jb
xor
(bad)
lods
adc
sbb
aaa
push
in
jbe
sbb
jmp
xchg
or
push
pushf
lds
mov
add
or
pop
les
rcl
pop
sub
adc
jmp
retf
adc
mov
clc
push
dec
pushf
daa
and
and
scas
arpl
push
jmp
dec
das
push
dec
jae
xor
or
add
and
cwde
pop
fwait
lds
addr16
clc
retf
ja
sub
xchg
or
stos
ins
xor
sbb
cmp
call
xor
or
in
mov
mov
pop
dec
clc
test
cmp
jg
and
pop
adc
int
mov
adc
push
std
cmps
xor
jo
test
stos
div
imul
push
inc
mov
aam
pop
shr
xor
ret
mov
inc
add
sub
jae
xlat
outs
or
shl
scas
sbb
ret
dec
cmp
ss
adc
ret
add
outs
pop
or
mul
and
dec
mov
in
mov
mov
mov
ret
xchg
mov
inc
or
iret
test
repz
test
mov
into
sbb
and
add
ret
jae
and
sub
shr
xor
pop
add
mov
add
adc
(bad)
scas
and
fldcw
mov
sbb
(bad)
or
push
(bad)
cmp
jne
xchg
adc
mov
pop
mov
mov
adc
sub
je
dec
fisubr
(bad)
push
je
jmp
mov
jmp
add
sub
cmp
inc
idiv
jle
jae
sub
push
add
jnp
mov
or
cwde
jge
repz
add
stos
dec
sub
mov
(bad)
es
lods
mov
adc
sub
je
fisttp
pop
pop
add
mov
xchg
xchg
push
xor
or
ret
push
rcr
popf
sub
sahf
(bad)
pop
mov
sti
arpl
mov
cmp
xor
sub
add
das
add
mov
shl
mov
shl
add
test
dec
cld
xor
ret
ret
push
mov
sbb
mov
hlt
inc
xchg
outs
sbb
mov
inc
jmp
repz
adc
add
not
loop
pop
adc
xor
loopne
or
adc
or
lods
sti
or
and
adc
js
jbe
sbb
mov
jae
cmps
mov
xchg
pop
in
mov
sub
add
movzx
jae
enter
out
repz
es
add
mov
fnstenv
jb
add
pop
cmp
jge
mov
in
in
lock
call
or
xchg
lock
out
sbb
stos
pop
(bad)
loope
fdiv
clc
jmp
out
add
in
or
xlat
loopne
call
or
jae
jae
ja
push
ss
sbb
jbe
inc
cmp
jle
mov
mov
adc
fs
cmp
repnz
ret
xchg
adc
ret
sbb
sub
cmp
out
pop
xchg
jns
movs
pushf
ret
dec
pusha
and
adc
cld
jb
ins
dec
cmc
xchg
xor
or
xor
pop
mov
mov
adc
lods
pusha
or
movs
fcom
inc
mov
punpckhwd
aaa
in
dec
fcom
sub
ds
pop
cmp
dec
sti
push
jae
or
add
sahf
cmps
xchg
jne
push
loopne
adc
mov
pop
jecxz
repz
add
xor
out
adc
aad
repnz
or
mov
dec
not
mov
mov
push
xor
sub
and
mov
adc
cmp
ja
adc
movs
jecxz
ins
push
push
or
not
ret
pop
add
sbb
sbb
test
xlat
add
fwait
nop
inc
sbb
test
sbb
push
sbb
clc
(bad)
ins
adc
add
or
ds
xchg
jne
or
push
(bad)
pop
retf
pusha
sbb
test
push
lods
adc
mov
(bad)
inc
add
xor
das
ret
add
push
mov
and
xchg
fmulp
inc
push
call
mov
sbb
setl
inc
inc
sub
lock
xchg
cmp
mov
mov
adc
aam
pusha
xchg
xchg
dec
mov
std
dec
in
fnsave
adc
add
pop
shl
inc
push
fsubr
sub
add
cmp
aad
pusha
jb
paddusb
(bad)
mov
or
call
adc
and
popf
repz
sub
fs
mov
pop
add
psubw
out
in
and
add
je
mov
xchg
stos
adc
or
clc
into
jle
pop
or
adc
inc
and
adc
mov
cli
or
pop
inc
dec
sbb
js
push
or
out
fprem
push
cmovo
mov
add
test
arpl
cli
adc
leave
push
call
or
cmp
retf
imul
outs
cmp
push
add
xchg
adc
in
jmp
mov
sub
add
push
push
mov
mov
xchg
fsub
pop
dec
inc
inc
(bad)
and
mov
in
mov
inc
cdq
ficomp
or
test
add
(bad)
dec
push
fmul
xchg
in
in
inc
add
jo
cmps
dec
jb
and
add
or
dec
push
cmp
jb
or
push
mov
adc
pop
outs
arpl
jne
ds
je
push
inc
or
dec
cmp
sub
add
(bad)
mov
cli
cmp
fsub
or
sbb
sub
cwde
or
mov
add
mov
xor
sub
nop
mov
push
pop
pop
ja
rcl
ja
cwde
or
mov
aaa
sub
mov
ins
test
cmp
adc
push
push
in
and
icebp
lock
sbb
jne
push
sub
and
adc
popf
(bad)
xor
adc
shr
mov
or
in
ins
xabort
aam
or
dec
mov
or
pop
lds
mov
adc
mov
jmp
ficomp
jmp
je
sub
je
jp
xchg
int
andps
xor
ret
mov
mov
pop
mov
inc
test
nop
dec
cs
mov
xchg
inc
lods
pusha
lock
fucomp
mul
add
mov
mov
dec
leave
adc
sbb
sub
call
inc
adc
push
mov
stos
push
mov
pslld
xchg
and
pop
je
movs
popa
in
jne
sbb
jmp
in
sub
push
in
jle
and
lahf
ret
xor
ror
dec
inc
jmp
jge
xor
dec
or
mov
add
add
adc
pop
sub
mov
sti
push
or
shl
lahf
sti
dec
push
dec
sub
jne
loop
mov
out
and
int
test
lods
test
add
sbb
stos
test
popf
xor
es
mov
clc
mov
inc
psllq
add
jp
outs
(bad)
int3
mov
retf
xor
inc
test
sbb
sub
imul
or
stos
add
shl
mov
dec
aam
cld
add
clc
add
imul
and
push
mov
inc
push
adc
test
mov
cld
mov
enter
mov
and
mov
mov
sbb
mov
jae
int3
dec
jl
inc
lea
sub
jns
mov
lea
add
lods
dec
inc
or
mov
cmp
aad
hlt
jo
and
dec
aam
push
fwait
adc
pop
cmp
pop
or
hlt
in
sub
adc
je
clc
dec
shl
jmp
push
push
fs
cmp
xor
lods
and
mov
(bad)
ficom
inc
daa
enter
inc
inc
test
mov
je
add
out
inc
add
sbb
push
xchg
or
fcmovne
adc
pop
inc
push
imul
sahf
inc
mov
pop
adc
push
jns
sbb
and
or
in
mov
mov
retf
mov
leave
(bad)
push
loopne
fwait
xor
and
popa
mov
int
inc
lahf
inc
lahf
cmp
lahf
add
movs
adc
or
gs
push
shl
nop
inc
jmp
jae
test
pop
rol
icebp
xchg
push
or
xor
adc
add
or
jge
cmp
test
sbb
xor
fcom
dec
mov
pop
and
ja
(bad)
jg
push
or
or
sub
dec
retf
inc
mov
push
jb
shl
sbb
sub
sbb
add
sub
inc
in
outs
mov
push
add
aaa
jmp
or
inc
ret
jno
or
pop
mov
lods
cld
cmp
mov
jle
pushf
add
or
push
(bad)
jle
push
sub
(bad)
fimul
mov
mov
jge
clc
jnp
ins
cmps
in
sub
mov
test
sbb
mov
add
movs
je
push
int3
fwait
adc
inc
mov
iret
or
rol
dec
(bad)
aam
test
cmp
pusha
ins
push
aam
fistp
call
and
cmp
in
stc
dec
je
jmp
xor
inc
xor
sub
jmp
and
fnstcw
add
mov
add
xchg
gs
or
or
push
cmp
xchg
bound
sbb
xor
mov
cmps
nop
enter
fwait
or
enter
test
or
pop
cld
cmp
es
test
xchg
fisub
mov
dec
jae
lods
aaa
inc
or
push
pop
ror
sub
mov
fist
int3
pusha
or
in
mov
iret
(bad)
inc
fsub
(bad)
lea
add
adc
sbb
jb
mov
sub
and
mov
push
aam
push
icebp
es
inc
sbb
in
lock
mov
jmp
xchg
xchg
ds
in
fs
pop
pushf
mov
fs
add
push
nop
xchg
inc
push
xchg
xor
cmps
rol
aad
ret
pop
push
cmp
dec
sub
mov
or
adc
rol
ss
jp
or
and
aam
adc
mov
push
jnp
push
popa
hlt
add
nop
int
fadd
lock
call
xchg
pop
pop
nop
push
rol
sub
cmp
test
sar
mov
xchg
bound
push
push
and
mov
pusha
sbb
xchg
or
movs
mov
loop
jl
mov
jl
scas
jge
jl
jo
mov
int
or
and
add
(bad)
jmp
jb
add
sti
ja
mov
add
nop
mov
cmp
dec
sbb
fcomip
xchg
fwait
lahf
adc
mov
jb
and
cmp
imul
lock
xlat
cwde
push
and
xchg
push
fadd
push
sbb
ins
inc
mov
xchg
jge
mov
fsub
cmp
or
or
mov
or
and
jnp
iret
adc
push
test
or
mov
inc
adc
xor
pop
sbb
scas
mov
cmp
push
mov
or
dec
mov
test
jl
sbb
loop
mov
sbb
iret
sub
add
sub
add
inc
sbb
stos
mov
jmp
add
inc
push
add
pop
xor
xchg
shr
inc
mov
ret
jbe
es
stos
enter
sbb
pop
adc
repz
popa
add
push
cmp
jle
sbb
mov
rol
or
daa
and
test
jg
bound
mov
aaa
jl
mov
popa
adc
cmp
jl
jge
lods
mov
ror
and
fcomp
cmp
outs
retf
daa
sbb
inc
push
xchg
pop
adc
jge
jl
jne
ss
xchg
jge
sbb
mov
test
adc
pop
iret
clc
push
sub
cwde
mov
fwait
cld
(bad)
pop
mov
jle
adc
loop
(bad)
cmp
in
sti
dec
sbb
lods
add
mov
cmp
setle
test
jmp
inc
xor
sub
jmp
mov
cmp
adc
jmp
(bad)
or
jge
push
retf
sub
jl
adc
fs
ror
jno
add
and
imul
pop
lods
not
ret
pop
or
test
xchg
out
and
xor
adc
xchg
(bad)
dec
inc
ret
pop
inc
leave
xchg
mov
and
and
ret
pop
aaa
ja
adc
sub
add
jmp
std
inc
pop
test
inc
jmp
dec
xor
mov
ins
imul
dec
or
adc
adc
push
add
sub
dec
stos
add
mov
or
xchg
push
add
stc
cmp
fld
sbb
pop
js
es
or
addr16
cmp
das
push
xor
jbe
movs
outs
mov
push
adc
or
mov
push
push
sub
mov
xchg
jmp
push
jnp
xor
loopne
test
xchg
ins
xlat
movs
ficom
and
pop
xor
inc
inc
and
jne
aas
inc
or
stos
hlt
add
in
push
and
scas
lock
mov
aaa
pop
sub
jb
inc
mov
lea
dec
retf
jne
mov
pop
or
or
or
pop
jne
push
adc
jge
fwait
mov
or
mov
test
push
or
rol
stos
or
int3
shl
pop
ror
mov
in
call
mov
mov
das
rcr
rol
rcr
add
mov
push
(bad)
hlt
punpckhdq
push
adc
xchg
jb
dec
pop
push
inc
test
movs
add
jae
dec
jne
push
mov
mov
scas
enter
sti
aad
ret
cmp
or
test
scas
and
cwde
mov
sbb
loop
jo
sbb
adc
pop
jne
add
out
cmps
add
and
stc
outs
mov
or
clc
adc
mov
mov
or
ins
in
dec
or
add
in
mov
mov
inc
xchg
or
fsub
iret
idiv
loopne
sub
repnz
sub
mov
(bad)
cmp
fcom
cmp
fs
mov
nop
out
shl
int3
and
sahf
add
and
sbb
pop
hlt
enter
inc
nop
add
and
sbb
enter
inc
xchg
mov
pop
fldcw
aas
popa
rol
shl
clc
add
push
in
out
jl
(bad)
cld
push
hlt
pop
hlt
enter
enter
mov
mov
or
dec
dec
sbb
mov
cwde
mov
pusha
inc
mul
push
ins
das
fs
jg
ins
retf
adc
and
stos
add
pop
in
ins
or
push
push
push
mov
push
and
dec
(bad)
cmp
or
jae
ins
fdivr
(bad)
push
outs
imul
jb
jns
push
aaa
imul
das
pop
fisubr
clc
call
push
dec
outs
fs
gs
outs
outs
test
inc
into
pushf
mov
and
xor
mov
add
add
inc
(bad)
out
sub
pop
jg
or
xor
inc
jmp
pop
inc
mov
add
aaa
aam
test
add
cmp
stos
pop
or
or
test
ror
adc
pop
gs
mov
cmp
cdq
call
and
or
adc
add
mov
(bad)
outs
ins
jl
cmp
pop
jnp
movs
mov
and
lea
mov
or
jmp
sbb
or
mov
push
inc
xor
mov
mov
mov
mov
add
lods
push
mov
and
or
dec
sbb
fcom
cmp
fstp
cmp
dec
adc
inc
jb
or
aad
adc
mov
inc
fild
xchg
cmp
scas
or
and
test
push
adc
mov
iret
xchg
push
xor
mov
push
inc
mov
sub
add
mov
(bad)
imul
mov
(bad)
sub
adc
aad
ret
or
cld
pop
push
lods
fnsave
fs
inc
adc
add
nop
call
rcl
ret
pusha
add
leave
mov
pop
push
sti
ficom
and
mov
pusha
fcmovbe
push
rcl
mov
mov
scas
dec
in
jo
or
fstp
vmread
or
sbb
cmp
fdivr
add
sub
in
jae
adc
xchg
inc
imul
push
jo
jmp
inc
add
xchg
lock
inc
ret
mov
lock
xchg
pop
or
mov
sbb
ds
pop
mov
add
xchg
jne
cld
fnstsw
adc
mov
icebp
inc
cmp
jne
js
fimul
sub
loopne
aad
mov
int3
jle
or
xor
pop
enter
sbb
out
mov
fdiv
xchg
std
mov
int
adc
xchg
shr
ins
xchg
adc
push
jne
mov
jne
sub
sub
jne
loopne
sbb
sub
push
jg
xor
push
test
lea
sbb
test
fs
push
mov
xchg
mov
loop
(bad)
out
push
add
int
mov
repnz
dec
sar
dec
inc
xchg
cmp
lea
sub
mov
jno
inc
add
shr
shl
inc
(bad)
addr16
inc
inc
fadd
es
unpcklps
sbb
jnp
cmp
sbb
in
jae
popa
jecxz
test
mov
mov
bound
jo
adc
fimul
push
and
cmps
(bad)
pusha
(bad)
mov
mov
push
loopne
pusha
pop
xor
clc
adc
sbb
dec
and
unpcklps
add
daa
jl
mov
ret
clc
cmp
mov
das
mov
adc
out
arpl
call
or
ret
outs
loope
loope
pop
or
push
sbb
xchg
sub
mov
push
mov
sbb
mov
cmp
and
pop
inc
or
shl
dec
cmp
nop
mov
inc
sbb
push
fdivr
leave
out
xchg
dec
sbb
jnp
dec
and
push
ins
jmp
inc
cmp
ret
pop
inc
push
ds
xor
xor
test
mov
lods
sqrtps
fadd
add
idiv
inc
or
add
cmp
je
fld
arpl
movs
jne
ret
jmp
inc
icebp
sbb
mov
pop
sbb
add
push
in
mov
sub
adc
int
mov
fdiv
in
jbe
xor
jne
xchg
iret
imul
jmp
pushf
dec
les
adc
dec
pusha
sbb
mov
daa
or
xor
inc
xchg
sub
pop
fisubr
shr
call
xchg
mov
outs
mov
inc
cmp
push
mov
pop
inc
mov
adc
sbb
cmovne
push
jne
inc
or
and
mov
adc
mov
sbb
iret
rol
adc
jmp
adc
loope
scas
imul
mov
pop
test
cs
add
rcr
clc
add
xor
pop
call
imul
mov
enter
scas
loopne
sar
pushf
call
test
pop
mov
imul
dec
xlat
sbb
adc
js
dec
xlat
je
jo
punpckhbw
pop
pusha
aam
dec
xlat
xor
pop
pop
push
sub
dec
pop
neg
cmp
push
shl
and
xchg
dec
neg
sbb
add
mov
adc
hlt
and
rcr
inc
call
test
xor
call
fdivr
push
imul
cmp
je
fsubr
cmp
cmp
or
cwde
or
and
fwait
sbb
jo
fcomp
movs
sbb
adc
and
dec
mov
mov
mov
inc
mov
mov
xchg
movs
mov
je
xor
lods
inc
push
test
xor
xor
mov
fisub
adc
call
or
add
jne
mov
fs
call
rcl
lods
pop
add
pop
int
adc
mov
sub
test
xchg
out
push
hlt
or
jns
fsub
cmp
adc
fs
dec
sbb
and
aad
sub
mov
pop
adc
pop
enter
mov
and
aam
or
xchg
outs
adc
or
xor
test
fdiv
cmp
add
daa
cmp
adc
adc
mov
push
nop
out
call
xor
fld
cwde
xchg
nop
sub
loop
aaa
jge
or
mov
jmp
jg
sbb
inc
inc
fst
arpl
push
imul
es
or
lods
bound
fwait
scas
rol
mov
fs
lods
mov
adc
add
push
test
adc
push
repnz
shl
dec
cwde
jae
fild
add
loope
or
sbb
inc
or
cmp
cmp
dec
mov
jbe
mov
add
or
ret
push
fs
xchg
add
ret
and
into
mov
popf
jle
xor
push
jmp
inc
imul
sbb
mov
stc
sub
mov
jmp
sbb
xchg
xchg
test
adc
sti
add
sbb
iret
sub
push
scas
cld
cmp
fcomi
ins
imul
nop
and
adc
jno
fmul
sbb
ret
push
or
or
dec
inc
lea
outs
aam
adc
add
adc
fld
push
mov
shl
xor
dec
and
imul
adc
pop
clc
cld
js
add
sbb
fadd
add
fwait
outs
xlat
push
mov
pop
lds
mov
dec
or
lock
cmp
xchg
pop
js
cld
xor
xchg
sbb
pop
nop
and
and
sub
sub
xor
and
jns
xchg
cmp
or
cmp
cs
adc
inc
cmp
jns
inc
in
lock
ret
add
jns
les
push
ret
xor
mov
push
mov
mov
les
inc
pop
call
dec
outs
shr
push
hlt
lods
mov
mov
jns
push
add
inc
push
jns
outs
je
fs
jne
dec
jne
jl
xchg
ins
inc
imul
lahf
pushf
xchg
imul
dec
jb
pop
fidivr
enter
ins
jo
inc
jb
ins
push
je
mov
push
cmp
gs
ret
adc
pop
inc
outs
outs
ins
inc
jle
xchg
(bad)
je
inc
jns
test
rcr
aaa
dec
add
sub
push
imul
pushf
sub
jne
in
bound
xor
add
cmp
leave
sub
mov
jnp
push
pmaxsw
add
aam
xchg
frstor
call
or
xchg
fucomp
dec
and
in
test
add
push
clc
push
adc
pop
adc
pop
add
jge
nop
jnp
pop
sbb
add
adc
push
sti
leave
clc
fsub
(bad)
in
inc
pop
adc
mov
and
pop
adc
aam
ins
xchg
xchg
arpl
mov
adc
test
sub
leave
adc
retf
and
inc
jb
fs
bound
mov
inc
popa
or
arpl
test
jbe
ficomp
fs
int3
push
arpl
or
inc
int3
push
sbb
pop
xor
movs
nop
mov
push
adc
(bad)
mov
inc
jb
jl
int
nop
and
sub
ins
arpl
inc
leave
test
bound
dec
test
xchg
in
arpl
inc
xor
dec
test
test
push
int
push
into
pushf
sub
mov
rol
inc
popa
and
or
daa
test
jbe
(bad)
fld
call
mov
jmp
mov
jns
in
or
call
push
fldcw
in
in
add
push
push
and
enter
scas
jmp
iret
mov
loopne
lods
mov
push
enter
cmp
pop
repnz
inc
xor
das
inc
rcl
adc
ins
rcr
or
push
pop
mov
shl
mov
adc
in
or
ins
scas
sbb
pop
adc
pop
pop
or
sub
sub
fnstsw
push
shl
or
je
dec
je
push
or
sub
lahf
xor
adc
dec
outs
aaa
cmp
fdivr
sahf
into
or
enter
fst
retf
cmp
push
fnstcw
iret
push
clc
fsub
mov
leave
and
das
push
fxch
and
hlt
xor
and
lock
fimul
int3
add
fdiv
and
cmp
aam
xchg
push
and
and
cmp
fsub
mov
fsub
sbb
mov
and
mov
pop
icebp
mov
dec
enter
mov
(bad)
and
push
aam
(bad)
les
fcomp
enter
inc
mov
rcr
add
shr
js
or
dec
fisub
addr16
push
rcl
sbb
cwde
shl
or
sub
sub
push
jae
je
add
psadbw
mov
jmp
jmp
nop
xchg
jno
daa
out
jp
in
cmp
fmul
add
add
rol
loopne
sbb
pop
(bad)
movs
call
add
mov
add
outs
add
mov
mov
lahf
ret
loopne
push
inc
add
jge
jae
fnsave
inc
cs
mov
cmp
add
(bad)
pushf
xchg
test
jnp
mov
push
or
retf
dec
outs
rol
pop
pop
pop
rcl
cld
test
or
(bad)
sbb
add
imul
in
mov
adc
cmps
push
movq
(bad)
push
jge
jne
les
ins
addr16
add
xchg
ins
xchg
ins
jmp
adc
inc
clc
push
shl
push
lock
add
mov
dec
call
add
sub
or
inc
test
adc
adc
dec
data16
inc
xchg
and
push
add
lss
and
movs
inc
mov
xchg
sbb
inc
dec
scas
sub
add
and
sbb
fdiv
push
and
fnstcw
test
sbb
push
in
push
stc
dec
fcomp
sub
movs
mov
les
add
push
(bad)
retf
push
push
inc
inc
mov
and
inc
aas
add
mov
mov
idiv
and
and
and
aaa
out
clc
lods
xchg
out
pusha
add
call
xor
mov
pushf
pop
aas
cmp
out
adc
mov
aad
adc
stos
mov
pop
ret
lahf
(bad)
fs
cmp
nop
loopne
clc
fimul
mov
icebp
xchg
inc
(bad)
in
cmp
or
mov
leave
test
jb
add
loopne
pop
movs
arpl
dec
std
jl
and
sbb
add
int3
xchg
inc
push
cld
or
int
scas
or
or
sub
test
dec
call
in
push
in
aaa
xor
push
loope
pushf
out
xchg
call
sbb
xor
jmp
push
in
lods
and
lock
retf
or
rcr
jg
ds
jb
ror
push
or
push
cmp
fstp
lea
pop
sbb
das
adc
cmp
sub
sbb
call
(bad)
shr
and
mov
mov
add
pusha
sub
or
lods
es
out
sbb
mov
cmp
je
lods
jne
mov
(bad)
and
inc
adc
and
add
add
ret
fcom
push
xor
inc
mov
fist
xchg
mov
mov
pop
jp
pop
mov
sbb
and
pusha
push
stos
or
enter
dec
fld
movzx
repnz
retf
dec
je
and
inc
repz
cld
lea
xchg
ins
pop
test
mov
es
lock
hlt
data16
add
xor
fidiv
push
repz
movs
xchg
xor
adc
adc
call
fcom
or
push
and
xchg
popa
adc
or
mov
lea
clc
pushf
nop
mov
out
add
jl
int
xchg
xchg
adc
fs
sbb
xchg
popf
or
aas
xchg
xchg
mov
ret
mov
cdq
rcr
loope
and
mov
test
je
adc
into
bound
cs
popa
adc
or
mov
hlt
fst
jge
push
and
stos
leave
add
gs
mov
mov
aas
hlt
adc
jae
sub
in
(bad)
fsubr
adc
or
mov
pop
mov
fisttp
xchg
ins
outs
jb
movs
xchg
add
test
fild
mov
add
fdiv
imul
cmps
imul
rcl
mov
add
adc
jl
inc
dec
inc
jl
popa
loope
fiadd
sub
popa
or
and
jg
pop
adc
daa
fadd
xchg
fcomp
movsx
je
(bad)
sbb
sbb
stos
fsub
fcmovu
push
jmp
push
fsubr
adc
push
(bad)
lock
jae
add
call
test
mov
call
sbb
(bad)
mov
and
mov
lods
jo
fcomp
fdiv
cdq
in
movzx
mov
call
enter
int3
sbb
cmp
mul
mov
enter
out
mov
dec
je
jmp
push
sbb
or
aaa
(bad)
fisttp
add
je
loop
push
and
xchg
add
leave
in
repnz
cmp
loope
fisttp
stos
(bad)
jmp
mov
and
pop
or
push
cmps
stc
add
jns
mov
in
push
popa
ret
mov
dec
rol
out
inc
mov
push
cdq
mov
add
mov
enter
mov
push
push
dec
and
or
push
lods
sbb
lods
push
pop
stc
push
sti
adc
test
mov
pop
enter
movs
jmp
mov
pop
enter
sbb
sar
enter
cwde
cmp
jmp
rcl
dec
push
jmp
dec
sar
xchg
nop
nop
and
es
(bad)
jo
xor
int
sub
add
cwde
pop
mov
test
pusha
pusha
inc
inc
std
test
sbb
mov
sbb
mov
daa
nop
xchg
inc
lock
loop
or
add
push
and
xchg
in
in
sub
jo
xchg
add
dec
loop
inc
xor
fbld
ret
xor
ret
and
leave
loopne
sbb
or
xchg
in
jecxz
repnz
imul
(bad)
enter
sub
sub
loopne
mov
(bad)
sbb
inc
les
sub
leave
add
fnsave
xchg
rol
in
xor
xor
rcr
mov
dec
in
in
(bad)
and
xor
pop
nop
leave
add
daa
ror
arpl
cmp
or
vorps
mov
push
sbb
rcl
sbb
test
and
pop
and
ins
and
aas
mov
sbb
sbb
adc
in
jnp
pusha
add
xor
jecxz
loop
es
adc
sbb
sbb
dec
or
fcom
aam
mov
xor
lods
cmp
sbb
mov
int3
fsub
adc
nop
in
push
fmul
out
add
sub
mov
cmps
frndint
out
ds
and
mov
dec
or
lsl
mov
(bad)
adc
les
adc
cmp
or
and
mov
retf
inc
dec
xor
xor
ret
mov
mov
or
cs
mov
outs
adc
mov
lods
mov
arpl
lods
dec
test
nop
mov
movs
adc
adc
fwait
movs
sbb
mov
adc
push
ret
dec
and
pusha
cmp
sub
jecxz
jecxz
xchg
dec
xchg
leave
inc
push
adc
aas
jl
int3
ror
fst
and
jmp
dec
sbb
and
add
nop
ins
xor
shl
push
dec
pushf
in
nop
cmp
les
push
out
test
into
adc
in
xchg
adc
ret
aad
or
outs
push
fiadd
or
pop
pop
mov
lea
push
add
out
inc
push
add
adc
or
sub
or
js
sub
add
movs
dec
scas
int3
fstp
fwait
pop
nop
retf
dec
fist
pop
push
add
(bad)
(bad)
mov
add
pop
mov
in
adc
fidiv
push
imul
stc
lahf
push
or
scas
cwde
shl
pop
or
and
les
lock
ins
jo
jns
xchg
adc
or
xor
push
ins
mov
xchg
cmp
jne
push
pop
ins
gs
aaa
in
cmove
bound
shr
add
outs
arpl
dec
mov
xor
xor
pop
xchg
stos
mov
xchg
xchg
ins
push
and
inc
add
inc
arpl
cs
nop
sub
xor
push
pop
je
mov
in
sbb
jb
jmp
inc
repnz
sahf
sub
xor
mov
rcl
push
sub
sbb
mov
mov
fiadd
adc
mov
pop
and
and
sbb
ss
leave
xor
add
in
dec
xor
sahf
call
cmp
aas
xchg
cld
jl
sub
add
xor
(bad)
pop
jl
stc
xor
mov
pop
pop
xchg
ins
mov
fadd
adc
cmp
(bad)
and
jmp
in
or
fisub
mov
inc
arpl
or
inc
dec
mov
pop
xor
leave
test
movs
hlt
cmovb
sub
movs
sub
lods
mov
and
xchg
in
(bad)
push
xor
lock
test
leave
jl
mov
mov
dec
mov
fmul
leave
xchg
add
in
add
ins
dec
sbb
dec
icebp
mov
cmp
mov
push
fcomp
lock
push
repz
ror
xor
push
test
out
add
addr16
stos
cmp
and
pop
ror
push
rcl
push
leave
xlat
add
and
or
js
sub
xor
int3
shr
ss
cmp
je
lods
inc
in
mov
into
pop
clc
inc
mov
adc
mov
adc
aaa
or
pop
xlat
sub
cmp
fidivr
adc
add
add
popa
xor
les
aaa
ror
xchg
mov
call
jge
push
enter
(bad)
and
dec
inc
(bad)
mov
mov
jnp
out
xor
dec
inc
add
dec
inc
daa
push
mov
stos
mov
inc
xchg
sub
and
cmp
push
inc
inc
inc
popa
js
stos
inc
jle
or
cs
lods
daa
inc
(bad)
imul
nop
push
add
cmp
cli
pop
or
mov
repz
shr
aam
mov
push
sbb
mov
enter
or
adc
orps
sti
jno
lock
rcl
jmp
jmp
adc
test
mov
mov
mov
pushf
pop
js
mov
sbb
ret
cmp
and
add
push
pop
test
je
push
in
jne
jo
sbb
pop
lock
and
sbb
jmp
lock
add
call
mov
icebp
jno
cmp
dec
jl
inc
xor
movs
sbb
iret
(bad)
dec
cmp
cmp
add
or
int
push
fld
mov
pop
imul
jb
ss
sub
mov
icebp
js
mov
push
xor
pop
or
rcl
and
pop
adc
cmc
mov
xchg
push
in
sbb
mov
inc
inc
hlt
or
adc
in
retf
in
xor
das
mov
fs
inc
mov
nop
inc
push
sbb
sbb
xchg
push
sbb
xchg
xchg
cwde
sbb
cdq
call
popf
sahf
nop
inc
push
sbb
adc
pusha
add
mov
arpl
test
mov
inc
inc
adc
pop
adc
or
dec
add
nop
add
adc
pusha
imul
ror
pop
adc
inc
call
test
jne
jns
push
pop
ror
hlt
mov
and
add
clc
jle
xchg
fwait
pop
sbb
sahf
imul
pop
add
cmp
xor
jne
xor
not
arpl
sub
add
push
mov
inc
inc
(bad)
inc
sbb
in
pop
in
dec
scas
and
ror
mov
mov
mov
fisttp
pop
cli
sbb
mov
movs
jl
or
or
fist
sbb
je
aas
dec
adc
sbb
fisubr
sub
inc
and
jmp
aas
and
mov
(bad)
cmp
jmp
sbb
ins
sbb
test
out
mov
pop
fbstp
(bad)
push
cmp
aas
pop
je
jg
ret
or
add
dec
adc
jb
ja
fst
push
inc
inc
outs
sbb
mov
xlat
pop
inc
movs
or
xchg
cmp
jb
push
jae
adc
add
arpl
hlt
or
inc
dec
not
loopne
mov
jbe
fcomi
mov
push
push
adc
add
sti
das
mov
ja
jb
xor
xor
push
(bad)
mov
movs
out
mov
mov
push
push
mov
cli
inc
cwde
cmp
arpl
lahf
test
rcl
mov
add
add
sub
por
dec
mov
sub
fsubrp
aaa
mov
jle
or
sbb
les
call
push
add
jb
or
cli
out
push
out
in
sub
jb
out
call
sub
inc
add
add
call
pop
pop
(bad)
into
ror
int
call
enter
sbb
mov
sbb
jp
rol
cmc
lods
mov
inc
xor
add
fwait
clc
add
sti
mov
xor
adc
out
inc
cmp
push
out
not
push
and
call
adc
dec
or
mov
or
or
adc
push
dec
mov
hlt
adc
and
nop
ret
neg
scas
mov
add
push
cld
and
hlt
repz
fmul
cmp
jmp
pop
sub
jmp
loop
sbb
adc
je
add
fisubr
dec
cmp
mov
lock
mov
or
cmp
fild
jne
inc
adc
mov
test
push
sbb
iret
push
or
fadd
popa
push
mul
xchg
mov
jecxz
jle
xor
fwait
mov
(bad)
retf
jnp
mov
xlat
mov
inc
mov
call
std
dec
shl
pop
ja
fld
fstp
fwait
dec
adc
fstp
add
inc
retf
push
adc
mov
and
cmp
sbb
loopne
pop
pop
retf
add
(bad)
in
ror
jge
pop
sbb
mov
and
je
rol
in
stc
lsl
cmp
cld
fstp
fwait
das
mov
adc
(bad)
mov
adc
sub
sbb
fistp
mov
imul
xchg
stc
add
xchg
test
pushf
scas
shr
(bad)
imul
or
jmp
xchg
mov
sbb
stos
mov
mov
xor
jbe
pop
das
jp
in
jno
push
add
pcmpgtd
add
or
fsub
add
mov
js
cmp
pop
ror
sbb
fnstsw
adc
rcr
push
mov
clc
dec
or
dec
add
jecxz
mov
dec
fld
and
jmp
or
sti
mov
sbb
mov
(bad)
int
dec
inc
add
inc
fcmovne
xor
ud0
or
mov
pop
ror
add
jp
ja
data16
xchg
sbb
jne
icebp
fisubr
dec
inc
mov
or
fiadd
loope
popa
ins
inc
ror
sub
sbb
cld
sbb
jo
imul
sbb
js
pop
adc
mov
inc
dec
xlat
(bad)
pop
aam
or
jo
outs
pop
adc
inc
and
xchg
sub
sub
xchg
mov
call
dec
cs
cld
loopne
rol
sub
dec
jg
(bad)
daa
or
or
pusha
scas
(bad)
xor
(bad)
xor
inc
call
push
inc
inc
ins
popa
jae
adc
mov
nop
pop
nop
das
mov
sbb
jae
push
aad
je
(bad)
mov
sbb
mov
fs
dec
dec
jecxz
mov
adc
jo
outs
jbe
inc
sbb
mov
fnsave
or
adc
out
outs
mov
adc
adc
mov
add
adc
add
pop
and
fimul
push
pop
sbb
inc
mov
ins
push
jae
add
add
pop
push
or
arpl
call
push
or
loopne
mov
jno
dec
jae
xor
xchg
rol
mov
adc
xor
add
(bad)
cmovns
push
sti
adc
jae
fs
jo
retf
cwde
add
ret
(bad)
jmp
pushf
jae
push
rcl
sahf
cmps
add
scas
cmp
pop
nop
fmul
fisub
ret
add
mov
into
sbb
adc
dec
aam
leave
push
xchg
sbb
pop
(bad)
jmp
je
fadd
sbb
aam
sbb
movs
mov
sbb
and
daa
push
cmp
add
aaa
or
sbb
das
sbb
ins
pop
push
mov
add
pop
and
and
scas
or
push
push
je
add
or
sub
mov
out
push
sbb
aaa
nop
fild
push
std
and
dec
adc
or
add
push
ins
pop
or
add
add
adc
pushf
jo
(bad)
cmp
call
daa
loopne
sub
cmps
rcl
aaa
sub
sub
sub
or
sub
sub
leave
xchg
sub
sub
xor
add
cmp
lea
mov
jae
adc
out
xor
sti
fbld
mov
pop
adc
fadd
add
pop
mov
and
jecxz
pop
pop
inc
mov
sbb
xor
das
aam
pop
pop
push
das
xchg
outs
adc
fisttp
mov
or
outs
xor
add
adc
test
xchg
or
mov
inc
stc
and
leave
add
mov
or
leave
adc
test
xor
add
xchg
add
and
outs
add
lock
jmp
cmp
add
inc
cmp
mov
jnp
mov
ss
pop
in
mov
loopne
jns
add
mov
clc
inc
cmp
fsubr
aaa
and
push
popa
jb
in
gs
push
jl
push
mov
das
mov
mov
arpl
xchg
pop
mov
test
cmp
cmp
test
(bad)
xor
pop
pop
cmp
push
ret
pop
enter
in
mov
jle
or
sbb
mov
pop
leave
test
cmp
inc
cmp
pop
and
add
push
pop
mov
pop
dec
or
push
add
jo
xchg
in
rcr
xchg
out
add
out
dec
pop
rcr
pusha
sub
inc
mov
aam
xor
pop
cdq
aam
add
pop
xor
rcr
xchg
lahf
or
in
(bad)
call
mov
xchg
pop
inc
(bad)
int
dec
add
pop
test
sub
and
mov
addr16
or
lds
or
pop
mov
xor
xchg
inc
bound
mov
add
out
sahf
mov
or
pop
cwde
add
jnp
xchg
jo
xchg
jmp
enter
cwde
das
test
pop
dec
adc
cld
(bad)
sti
ja
(bad)
mov
(bad)
clc
push
push
push
push
push
push
cmp
cmps
jmp
add
mov
jge
imul
cmp
jae
mov
ins
pop
(bad)
add
mov
jmp
adc
sub
add
call
test
add
ja
(bad)
push
add
push
inc
rcl
fiadd
push
popa
addr16
or
repnz
and
push
repnz
or
enter
or
enter
mov
jp
mov
in
dec
aam
mov
mov
pop
or
ret
push
push
ss
(bad)
lods
fsub
xor
and
repnz
mov
test
test
lock
adc
inc
mov
fcom
call
push
jns
or
in
jl
(bad)
fdivr
adc
adc
xchg
daa
in
inc
dec
jne
ins
inc
scas
fldcw
or
out
push
stos
jge
inc
cmc
push
xor
nop/reserved
pop
adc
(bad)
sbb
fs
adc
pop
cmp
mov
comiss
push
shl
add
pop
mov
adc
adc
adc
xor
out
sbb
in
or
out
dec
cmp
pop
enter
mov
and
and
(bad)
int3
retf
fadd
nop
xchg
xchg
enter
or
inc
sub
in
sbb
in
sbb
adc
adc
loope
sahf
in
inc
adc
or
popa
out
jmp
sahf
push
push
inc
mov
push
mov
dec
jae
adc
or
mov
adc
shl
or
pop
lods
enter
inc
dec
loop
inc
cmp
and
cmp
cmp
test
into
or
dec
jne
in
xchg
mov
ud2
push
test
ret
jae
cmps
xor
or
cmps
lock
jo
fiadd
and
mov
sub
scas
stos
or
push
sub
leave
pop
ror
add
push
jae
inc
push
les
cmp
jmp
into
fisubr
stos
push
mov
loop
or
mov
enter
mov
in
call
add
pop
cmc
add
push
push
cmp
mov
repnz
pop
test
inc
pop
jl
pop
rcr
rep
cwde
sub
lds
jbe
add
dec
mov
jb
mov
push
cli
xchg
sbb
inc
or
adc
cmp
call
jmp
outs
dec
je
and
and
push
cmp
jne
mov
dec
nop
and
push
and
sub
iret
ret
mov
xlat
mov
pop
shr
push
pop
imul
call
adc
sbb
push
fs
inc
loopne
sbb
push
or
mov
jae
sbb
mov
inc
adc
cmp
call
inc
xor
adc
push
movs
ret
ds
add
dec
or
js
jb
dec
mov
(bad)
push
call
add
shl
mov
push
mov
push
fistp
aaa
imul
adc
add
inc
push
loopne
mov
inc
mov
ret
fisttp
dec
test
je
mov
jae
movs
cli
mov
inc
jmp
pop
xor
data16
aaa
mov
dec
jne
call
adc
xor
cmps
jmp
jnp
push
add
inc
or
mov
leave
repnz
stc
add
adc
or
jmp
inc
add
mov
inc
push
pop
mov
jb
add
push
ja
inc
sar
add
fdiv
or
arpl
jne
leave
retf
or
or
inc
dec
mov
pop
clc
out
mov
clc
je
shl
cmp
shl
call
ficom
lahf
mov
or
add
mov
sub
or
pop
jle
or
add
adc
push
sbb
es
cdq
call
ss
int3
jle
add
jle
sub
int
ss
sbb
das
lock
fisttp
(bad)
sub
jg
dec
jae
lods
or
sahf
mov
add
pusha
lock
stos
lea
inc
push
inc
movs
mov
adc
xor
lds
add
pusha
push
pop
nop
jnp
inc
scas
cmp
lods
punpckldq
cmp
loopne
sub
je
outs
adc
fidiv
cwde
mov
fcomp
and
xor
(bad)
jnp
addr16
add
test
adc
mov
nop
pop
mov
cmp
and
push
mov
and
daa
mov
repnz
push
add
movs
xchg
inc
mov
xchg
xchg
adc
retf
ret
fwait
imul
xchg
in
add
inc
rcr
mov
dec
push
rol
aam
in
test
pusha
retf
lock
add
pop
hlt
clc
je
and
inc
jecxz
fcom
xor
lods
cs
enter
outs
imul
fcom
mov
fdivr
in
sahf
mov
(bad)
xlat
jmp
fisubr
rcl
xor
add
mov
jg
ins
jecxz
push
lods
add
add
aaa
cmp
fadd
pop
cmp
or
adc
push
mov
repz
mov
or
fs
sbb
and
call
push
xor
mov
jle
cmp
and
push
xchg
or
mov
sbb
pop
jnp
mov
jbe
call
cwde
xchg
adc
scas
push
and
inc
xchg
enter
and
sub
arpl
jecxz
mov
in
push
adc
pusha
push
mov
cmps
iret
cmp
add
jo
and
les
push
hlt
fsubr
leave
movs
jns
mov
sbb
pop
jns
mov
fisttp
push
or
int
add
jle
enter
cmp
in
(bad)
lss
pop
sbb
push
dec
rcl
ja
aas
scas
out
mov
in
add
xchg
mov
das
(bad)
sbb
inc
mov
mov
adc
xchg
data16
sub
or
inc
call
cs
pop
pop
push
and
lods
fld
inc
int
jne
xor
popa
add
sti
adc
or
and
inc
adc
into
push
stos
push
test
add
dec
fdiv
sub
fisttp
jp
clc
push
push
pop
repz
xchg
add
ret
cmps
add
loopne
inc
inc
(bad)
push
cmps
and
and
push
and
pop
jno
sub
fidiv
shl
test
xchg
or
push
cmp
mov
and
mov
sahf
nop
dec
in
xchg
add
loope
arpl
or
adc
add
jns
lock
lock
js
scas
inc
dec
push
in
(bad)
cmp
test
jne
inc
shl
dec
cmp
add
pop
inc
push
nop
imul
or
lock
leave
adc
push
xchg
outs
sbb
arpl
(bad)
iret
add
hlt
mov
pop
sbb
fidiv
adc
lock
fwait
inc
xchg
daa
sbb
and
ds
movs
imul
or
and
nop
lds
push
pop
adc
dec
mov
or
hlt
and
mov
out
sbb
cmps
sbb
and
scas
mov
push
dec
shr
or
sbb
mov
popf
das
cmp
mov
pop
test
inc
fsubr
adc
add
xchg
clc
pop
xchg
jp
sahf
sub
shl
dec
hlt
sbb
push
pop
ins
mov
mov
in
call
xchg
arpl
adc
les
inc
push
inc
jne
mov
call
add
ins
jmp
rol
dec
push
adc
leave
and
fstp
or
aaa
loopne
pusha
sub
cld
push
call
pop
mul
xor
pop
or
and
test
test
sub
sbb
call
xchg
xchg
(bad)
cld
xchg
sbb
push
popa
shr
xor
mov
pop
mov
int3
add
cmps
or
adc
mov
inc
xchg
mov
mov
dec
add
lods
mov
push
pop
dec
push
mov
hlt
push
dec
bound
mov
pop
sbb
add
xor
add
aad
push
rol
retf
inc
xor
repnz
pmuludq
inc
jne
(bad)
leave
test
inc
sbb
add
push
xor
jecxz
ja
and
rcl
and
inc
mov
push
xor
sub
add
into
call
ja
jmp
jnp
pusha
or
popf
inc
ins
pop
adc
pop
push
das
and
add
mov
xor
enter
ins
leave
pop
and
mov
or
out
xchg
add
add
rcr
fwait
inc
add
mov
cwde
sub
push
sbb
into
or
mov
inc
mov
je
jmp
gs
enter
and
iret
xor
mov
and
and
and
inc
and
add
and
pop
mov
pop
and
pop
adc
push
sbb
dec
mov
lds
int
imul
movs
popa
icebp
inc
cmp
pop
mov
imul
or
xor
push
fldcw
mov
cmp
cmp
sbb
push
into
and
retf
mov
ror
push
popa
mov
and
js
and
inc
mov
pop
sbb
push
stos
ficomp
add
add
xchg
cld
and
and
pop
pop
or
or
adc
adc
mov
adc
xchg
dec
jmp
and
mov
mov
adc
rcl
add
mov
mov
sti
cmp
cmp
rol
call
sub
inc
push
add
int3
repz
add
or
cmps
(bad)
xchg
mov
sub
mov
dec
mov
cmp
jne
add
push
push
ret
loope
add
mov
sbb
or
scas
or
fnstcw
es
add
jno
mov
repz
loopne
pop
push
mov
cmps
xchg
inc
mov
sti
jne
sbb
jmp
add
xchg
scas
cmps
add
and
or
jl
rcr
or
stos
sbb
add
lahf
ret
add
bound
add
xchg
mov
sbb
or
cmp
and
pop
pop
add
es
lds
sbb
pop
or
or
retf
push
ins
call
out
ja
lock
sub
jb
jmp
xchg
push
or
std
es
shr
jmp
mov
mov
push
push
mov
and
pcmpeqb
test
mov
cmp
jne
pmulhw
push
call
adc
xor
(bad)
div
(bad)
inc
jecxz
sbb
jecxz
repnz
inc
es
push
pop
jo
test
push
mov
mov
adc
in
inc
add
add
or
lea
dec
and
or
push
adc
outs
dec
ja
pushf
dec
add
sub
popf
pop
(bad)
pop
adc
ror
push
sub
cmp
jne
test
dec
push
leave
mov
neg
or
or
push
push
mov
or
or
or
pop
inc
inc
push
or
add
xor
sbb
adc
add
or
out
xor
repz
mov
pushf
fcmovnb
or
pop
mov
add
pop
(bad)
repnz
fwait
in
sub
sub
xor
push
nop
mov
adc
inc
icebp
popf
mov
sbb
add
cld
sub
and
or
sub
ja
fimul
jne
leave
cmp
out
js
stc
xor
or
mov
lds
inc
pop
sbb
inc
mov
cmp
jmp
xchg
mov
aad
sub
scas
loopne
push
pop
not
add
push
jne
loopne
in
adc
sub
push
inc
sub
and
mov
sub
xor
test
xor
xchg
test
jmp
pop
in
sub
adc
test
lock
inc
jmp
lahf
fwait
sub
nop
and
pop
push
stos
mov
or
test
xchg
pop
leave
and
addr16
sub
pop
inc
pop
jnp
mov
cmps
in
and
mov
mov
sbb
scas
mov
add
stos
enter
push
(bad)
jne
pop
cmc
add
lea
in
(bad)
je
jg
mov
(bad)
jmp
sub
or
inc
adc
or
adc
scas
test
or
add
sbb
adc
mov
add
in
jle
int
jbe
cmc
mov
adc
je
or
adc
add
push
jns
fwait
sbb
inc
or
ret
stos
repnz
jbe
add
push
mov
xchg
inc
mov
mov
(bad)
mov
mov
sbb
push
ret
push
arpl
int3
js
mov
stc
je
sbb
mov
(bad)
push
je
pop
xchg
xchg
or
ret
xchg
push
cmp
fs
push
mov
call
sti
mov
push
add
cmp
sub
nop
and
push
repnz
cwde
jno
sub
ret
adc
jge
retf
cmp
jb
sbb
loope
in
inc
add
stos
dec
mov
movs
cmp
pushf
add
pop
inc
mov
or
loopne
jecxz
mov
add
(bad)
add
xchg
and
inc
or
scas
add
adc
hlt
fsub
and
imul
(bad)
pop
cmp
mov
cmp
mov
jno
add
mov
clc
jle
ins
push
adc
ins
sub
and
xor
jl
dec
xor
dec
push
in
test
and
ror
jmp
add
sbb
cmps
or
adc
arpl
xchg
into
push
xor
aas
sub
sbb
sub
mov
jle
push
dec
xchg
inc
ret
sub
es
xchg
ror
add
aaa
out
mov
(bad)
push
gs
mov
push
arpl
push
fwait
in
jnp
mov
pop
adc
ret
and
cmp
cmp
cmp
pop
cmp
add
fdiv
inc
sbb
sbb
xchg
add
xchg
xchg
sub
jge
dec
div
add
xchg
outs
lahf
pop
jbe
adc
xchg
inc
xchg
iret
(bad)
pop
clc
sbb
jno
push
in
or
cmp
sar
push
in
test
add
(bad)
sti
jo
mov
sub
lahf
mov
lea
and
push
shl
pop
enter
adc
or
add
inc
jne
push
xor
lds
cmp
cmp
add
push
mov
cli
out
sbb
and
fdiv
js
ins
stos
adc
pusha
retf
in
add
adc
cdq
push
cdq
dec
add
mov
xlat
add
outs
es
das
xchg
mov
loope
mov
mov
std
cmp
sub
jns
adc
hlt
nop
and
add
sub
inc
push
mov
push
mov
jo
clc
call
jb
add
movs
rcr
mov
sbb
ja
sbb
push
scas
test
sbb
fdivr
(bad)
or
push
scas
mov
and
pop
push
xor
retf
movs
je
pusha
inc
dec
rcl
add
or
aas
fcomp
mov
fadd
call
lock
mov
jo
mov
enter
cmp
aam
cmp
inc
add
mov
add
jns
frstor
pusha
jmp
mov
adc
lds
adc
or
or
dec
in
xchg
movs
xor
das
in
add
adc
ror
sub
arpl
cmp
jo
push
fs
or
and
mov
pop
push
sub
mov
inc
add
jmp
push
adc
xor
rol
or
sbb
fadd
or
jle
into
jge
lds
or
add
int
test
jmp
dec
mov
jmp
mov
add
add
or
int
ins
mov
push
mov
xchg
leave
push
inc
push
push
enter
dec
push
jb
add
in
jo
adc
mov
out
sti
add
dec
in
cmp
mov
adc
int
loopne
pop
mov
aas
xlat
push
add
and
(bad)
call
nop
sbb
sar
mov
in
addr16
mov
fcom
mov
mov
or
adc
mov
lds
add
cmp
jge
xchg
dec
push
adc
sub
or
xor
fcmove
pop
adc
test
loope
mov
(bad)
in
loopne
push
movs
cmp
add
or
into
jp
lods
repnz
hlt
pshufw
push
pop
cdq
scas
xlat
fimul
sbb
or
mov
pop
mov
add
in
hlt
adc
inc
push
jmp
stos
cmp
mov
retf
jle
imul
fisttp
adc
enter
mov
lds
adc
ror
lods
mov
into
leave
add
dec
movs
inc
or
sbb
or
xlat
fstp
mov
cmc
aaa
fistp
ret
pop
push
mov
shl
add
je
cmp
mov
clc
pop
push
mov
push
pop
jo
imul
addr16
adc
inc
ss
pop
ja
inc
adc
lods
push
pop
cmps
popa
test
adc
nop
dec
adc
mov
and
lea
mov
gs
adc
and
jne
cmc
cld
out
xor
jmp
push
mov
mov
lea
and
inc
or
cmp
subps
call
or
mov
inc
inc
rcr
cs
ds
adc
rol
inc
cli
(bad)
mov
and
or
hlt
add
test
cmp
retf
mov
adc
mov
lea
push
(bad)
jmp
cmp
dec
push
add
sub
jae
mov
pop
push
stos
or
shr
push
out
adc
shr
sbb
cs
xor
popa
sub
pop
add
sub
push
push
cmp
ja
loop
lods
loop
xchg
mov
add
xchg
les
sbb
leave
cmp
add
outs
dec
pop
mov
dec
cmp
and
mov
les
mov
sub
repnz
sub
push
add
jg
je
mov
cmp
sub
xchg
cmp
lea
cmps
retf
add
dec
sbb
pop
pop
add
pop
xor
cmp
out
xor
stc
mov
or
push
shl
out
or
or
add
adc
sub
mov
sub
sbb
jecxz
bound
adc
lock
push
pop
int3
cmp
mov
adc
pop
fsub
mov
push
popf
jp
jns
add
push
dec
adc
out
push
rol
call
lea
add
jbe
popf
mov
cwde
fnstcw
mov
test
int
mov
sbb
xor
scas
mov
inc
test
cmp
leave
push
inc
stos
mov
mov
pushf
pop
and
xchg
and
jns
sbb
cmp
pop
inc
jns
add
mov
fistp
dec
scas
push
(bad)
aam
sub
(bad)
(bad)
push
and
dec
or
data16
and
paddsw
hlt
out
test
dec
fcomp
jnp
inc
lea
adc
xchg
adc
loop
push
sub
cld
scas
test
xchg
inc
not
add
push
jae
inc
cmps
out
and
sub
and
pop
sbb
nop/reserved
pop
sar
inc
and
inc
fld
(bad)
jbe
sysret
jno
movs
jae
adc
ins
mov
cmp
popf
or
adc
jne
cmp
add
cs
push
add
call
and
repnz
ds
loope
sti
xchg
push
pop
or
jne
(bad)
xor
nop
rol
mov
and
and
push
jo
mov
cmp
aas
repnz
xor
cdq
repz
aas
aad
or
jae
or
mov
inc
adc
fsub
inc
xchg
adc
and
sub
clc
mov
sub
jne
sbb
adc
and
call
sti
push
jp
jl
js
arpl
cmp
xor
call
shl
adc
and
sbb
inc
dec
or
inc
mov
test
aas
fmul
jns
inc
inc
and
stc
dec
cmp
pop
mov
inc
pop
inc
fist
add
adc
outs
pop
mov
dec
mov
pop
repnz
mov
inc
xor
sbb
cmp
pusha
and
jbe
call
add
add
or
mov
xor
mov
pop
scas
inc
xchg
icebp
or
cmp
loopne
sub
(bad)
push
jl
adc
jne
mov
aam
loopne
cmps
jae
pop
pusha
sub
or
push
xchg
imul
cwde
out
imul
aaa
jmp
repnz
fisubr
rol
mov
das
retf
mov
mov
dec
cmp
or
adc
dec
fst
imul
es
inc
or
cld
push
lock
add
(bad)
pop
inc
inc
lds
fsub
rol
test
sub
or
movs
jnp
inc
mov
aad
movs
xchg
add
dec
jle
adc
inc
test
fs
pop
push
call
and
mov
rol
pop
iret
rol
js
xor
ret
xchg
sar
not
ficom
sub
inc
adc
or
(bad)
sub
jae
inc
mov
int3
dec
add
inc
lock
sbb
mov
pusha
dec
inc
je
and
gs
adc
xchg
inc
pop
mul
add
sbb
out
xor
sidtd
and
adc
xchg
push
mov
lahf
loop
push
(bad)
push
retf
jo
call
sbb
push
fsub
xchg
bound
enter
lea
push
movs
pop
stos
jb
test
or
je
pop
inc
push
(bad)
enter
dec
add
add
push
mov
fiadd
cmp
test
mov
cmps
ds
out
loopne
push
std
je
mov
pusha
mov
(bad)
fcom
push
cmp
fiadd
or
dec
xor
fcmovnb
mov
jmp
adc
adc
push
mov
pop
xor
out
sub
add
js
add
out
les
xor
test
cmp
mov
push
mov
fstp
pop
xor
push
dec
dec
pop
aam
hlt
inc
int3
lds
adc
adc
out
sub
aas
cmp
inc
retf
rol
cmp
je
or
pusha
(bad)
call
sbb
jl
sbb
dec
jo
add
ins
test
in
int3
jno
add
push
hlt
ss
mov
in
dec
sbb
adc
test
lods
dec
sub
or
into
and
lds
pop
xchg
adc
ret
xchg
outs
sbb
sub
push
push
xor
mov
(bad)
psubsb
in
inc
ins
mov
pop
mov
sub
lods
in
mov
xor
xchg
outs
jmp
jl
sub
cmp
repnz
scas
inc
bswap
xchg
test
xchg
in
add
sahf
or
mov
movs
inc
mov
sbb
inc
mov
stos
mov
mov
test
mov
and
daa
dec
pop
push
loopne
bound
cdq
imul
sub
mov
movs
sti
push
lock
lds
xchg
call
mov
sti
dec
sub
inc
sbb
mov
jge
push
idiv
je
(bad)
fidivr
pop
jmp
inc
loopne
sbb
in
mov
dec
jmp
ret
inc
or
push
sti
jge
mov
pop
clc
pop
dec
and
and
int3
fs
pop
ret
inc
or
loopne
sub
cmp
sbb
ins
jl
in
mov
add
test
jg
and
sbb
push
xor
jno
adc
repz
popa
fcomp
fs
mov
ins
scas
jp
out
sub
mov
iret
inc
pop
sbb
ret
jmp
sbb
pop
and
or
shl
dec
(bad)
int3
fdiv
jbe
xor
fsubr
fsub
out
arpl
push
cs
cld
add
fsub
push
sbb
fstp
or
inc
xor
inc
add
push
iret
inc
xor
sahf
push
inc
push
shl
in
dec
mov
pop
ds
pop
xchg
sub
popa
mov
sahf
mov
pop
adc
or
into
les
sub
push
sti
and
fwait
sub
dec
add
add
mov
mov
sbb
sbb
sub
rol
ins
cmp
int3
dec
mov
fistp
jge
or
sub
out
and
xchg
stos
cmp
xlat
aam
hlt
pop
pushf
and
jmp
mov
sbb
xchg
lock
and
add
aaa
je
and
xchg
fld
adc
and
fsub
dec
add
add
fld
add
and
fcmovnu
rcr
adc
(bad)
fild
or
xlat
adc
pusha
inc
fild
(bad)
ja
out
and
dec
xor
inc
lock
mov
ret
add
mov
or
xchg
add
(bad)
push
push
add
std
movs
or
scas
in
adc
xchg
mov
das
or
xchg
and
adc
or
mov
add
mov
daa
mov
add
jmp
cwde
mov
mov
aam
sbb
mov
or
push
adc
or
neg
retf
cmp
jmp
jbe
pavgb
adc
sti
lock
aad
outs
cmp
dec
pop
jg
sbb
xchg
dec
add
push
fcmovnb
(bad)
pusha
pop
and
cmp
jne
popa
and
pop
test
pop
mov
xor
mov
push
push
xchg
xchg
add
jb
adc
out
mov
int
sbb
push
mov
ds
mov
or
or
leave
mov
scas
fsub
xchg
lods
jne
mov
sub
in
stos
dec
pushf
call
or
sub
test
inc
cmp
(bad)
in
xchg
adc
xor
add
push
in
shr
jmp
and
imul
pop
push
push
dec
mov
push
push
or
mov
inc
mov
jle
cs
and
mov
jl
cs
sbb
mov
mov
inc
hlt
xor
mov
sub
xchg
popa
pop
add
into
repz
repnz
ds
sub
adc
popf
cmps
inc
in
sbb
adc
jo
or
iret
lds
dec
pop
lock
ficomp
push
push
cmp
cmp
mov
xlat
pop
hlt
cmp
push
xchg
es
adc
outs
add
jno
les
push
(bad)
mov
push
cmp
popa
rol
stos
or
cs
loope
imul
outs
pop
pop
cmp
mov
push
scas
mov
jg
mov
add
ret
and
xchg
hlt
add
cmps
loop
nop
cs
mov
mov
pop
sti
arpl
inc
(bad)
call
pop
push
adc
rol
sbb
adc
inc
dec
sub
fsub
test
inc
rcr
and
inc
aas
push
cmp
les
call
mov
int
sub
clc
dec
jb
push
jo
nop
stc
hlt
gs
daa
dec
add
sub
sahf
and
push
adc
dec
inc
test
mov
mov
jmp
fsubr
sub
stos
sahf
clc
ds
sbb
sbb
dec
clc
neg
push
sbb
adc
call
mov
mov
jne
inc
fcom
rol
pop
shl
inc
adc
or
sub
push
dec
adc
jne
addr16
scas
or
sbb
push
mov
(bad)
lods
scas
add
repz
xor
push
aaa
ins
xchg
mov
sbb
(bad)
or
jne
jns
push
rcl
xor
data16
add
fiadd
or
mov
push
nop
cmp
xchg
mov
cwde
mov
cwde
inc
mov
imul
mov
inc
mov
xchg
jl
sbb
mov
in
int
jb
cli
inc
xchg
dec
cmp
mov
inc
div
jmp
sbb
mul
fsubr
repnz
in
mov
cmp
pop
rcl
push
xor
add
adc
sub
shr
push
call
and
and
push
pop
fcomp
xchg
ins
add
dec
clc
fs
stos
js
mov
pop
mov
dec
aam
add
sbb
je
push
xor
jecxz
add
jne
retf
mov
push
push
pop
ins
jmp
pop
pop
jno
aas
pusha
enter
inc
aam
adc
mov
push
dec
inc
je
lock
addr16
xor
movs
or
cdq
or
add
inc
add
mov
xchg
dec
push
clc
das
adc
(bad)
sub
ja
bts
jmp
or
jne
test
ror
cmp
test
lds
inc
mov
test
leave
push
fld
aaa
in
shr
add
popf
sub
mov
jmp
data16
jno
push
ins
add
jmp
add
lahf
cld
add
rol
int3
inc
and
push
imul
push
in
and
or
test
push
push
hlt
dec
mov
int3
and
jmp
mov
outs
pusha
out
sub
pop
in
mov
ins
adc
sar
sahf
and
sub
rcr
xchg
sub
jmp
clc
pop
retf
adc
pop
push
push
cmp
or
dec
xchg
sbb
arpl
mov
jne
shr
mov
hlt
inc
push
add
ja
fiadd
mov
out
or
pop
out
fucomp
(bad)
ja
nop
out
cmp
mov
call
sbb
fs
cmp
mov
mov
push
ror
pop
test
add
adc
ja
add
and
pop
je
sbb
mov
pop
xor
repz
sbb
aaa
inc
mov
outs
rcl
mov
pop
or
adc
xchg
dec
leave
xchg
add
ja
add
mov
mov
jmp
sbb
mov
pop
jmp
push
or
inc
push
in
push
mov
inc
ret
xchg
add
sbb
pusha
push
sbb
pop
mov
mov
dec
movs
stos
pop
int
sbb
and
adc
add
jecxz
lods
sbb
mov
jo
pusha
sub
add
xchg
jecxz
adc
lock
lock
ins
ret
ret
ret
jmp
daa
cmp
adc
dec
call
test
stc
xor
and
push
jge
sbb
cmps
sub
xor
add
inc
mov
mov
push
xor
pop
add
mov
and
daa
add
outs
add
aaa
sub
nop
in
sub
sbb
mov
inc
or
push
mov
mov
dec
or
or
addr16
fwait
mov
push
dec
or
xor
test
add
pop
cli
mov
test
dec
addr16
movs
jae
outs
in
or
ins
mov
inc
mov
pop
and
adc
call
hlt
stos
sbb
inc
std
mov
fidiv
jo
jmp
xor
mov
jmp
mov
or
les
adc
push
in
rol
xchg
xchg
pop
fstp
mov
or
js
cwde
mov
fcomp
fs
cs
test
xchg
sti
add
pushf
les
sbb
push
lods
and
xor
and
mov
pop
cmp
add
movs
inc
mov
(bad)
lods
push
sbb
cmc
arpl
cmp
lock
mov
pop
push
mov
or
(bad)
lock
sbb
fwait
pop
fwait
in
mov
and
add
push
or
pop
call
pop
mov
call
xchg
dec
push
jnp
mov
sub
aas
sbb
xor
add
adc
bound
add
test
jne
pusha
add
pcmpeqb
add
fs
add
test
xor
pop
push
imul
ret
or
or
mov
and
xchg
popa
in
mov
jmp
sbb
iret
mov
(bad)
pop
lea
jmp
sub
dec
xor
dec
je
in
dec
mov
xchg
inc
fwait
dec
clc
sbb
jmp
push
hlt
call
push
sahf
push
sti
or
xchg
ret
aas
pop
sub
add
pop
mov
fld
fbld
xor
sub
adc
pusha
pop
sbb
jecxz
pop
mov
dec
or
dec
add
add
mov
stc
jmp
sub
push
mov
add
add
mov
jo
adc
das
add
mov
repz
cmp
mov
sbb
adc
inc
sub
or
jg
mov
sub
or
add
add
ja
inc
cmp
mov
jnp
lods
loopne
loope
dec
je
mov
sbb
mov
adc
xor
daa
and
push
in
add
repnz
add
xlat
stos
or
sub
rcl
bound
xchg
add
inc
pop
or
add
and
arpl
xor
and
arpl
push
mov
or
push
enter
adc
cmp
je
dec
cmp
sbb
test
ins
push
inc
xor
mov
add
loopne
cwde
lods
sub
xorps
test
pop
inc
pusha
pusha
pop
daa
clc
ret
dec
sub
or
sub
add
ins
cmc
pop
adc
neg
sbb
xchg
sbb
mov
cmps
add
jno
daa
push
and
adc
jecxz
or
jmp
leave
ds
jl
hlt
mov
inc
(bad)
data16
push
fcmovb
sbb
sbb
or
xor
fnstsw
inc
inc
ins
sub
sti
hlt
sub
loope
cs
or
sub
push
xor
mov
leave
mov
mov
jb
push
inc
add
cmp
and
inc
mov
mov
dec
pusha
inc
sti
adc
add
retf
jecxz
inc
test
cmp
call
pop
int3
cmp
jmp
test
jg
dec
push
ins
enter
jl
push
push
shr
mov
mov
pop
or
add
push
dec
mov
outs
std
or
pop
cmp
addr16
pop
lgs
adc
adc
push
mov
mov
inc
xchg
dec
inc
xchg
dec
sub
push
add
jp
int3
scas
cmps
in
rcr
sub
xchg
scas
mov
or
or
push
xchg
stos
fcomp
mov
xor
aaa
test
pop
ror
xor
xchg
leave
lock
rcr
or
and
mov
(bad)
push
xchg
adc
(bad)
js
adc
rcr
or
and
daa
fisttp
or
je
mov
or
(bad)
imul
jg
sbb
clc
sub
inc
iret
lock
or
push
ret
iret
adc
adc
retf
sbb
add
add
cmp
xchg
pop
sbb
mov
lahf
add
aam
mov
cmc
adc
or
shl
pop
xchg
push
dec
lahf
inc
sbb
data16
or
xchg
inc
adc
imul
cmp
mov
test
pop
cmp
loope
jl
cmp
push
push
jne
call
mov
xor
inc
xchg
outs
dec
or
mov
mov
jne
cmp
ja
and
(bad)
push
aad
push
dec
js
cmc
mov
xlat
mov
in
dec
or
cld
xlat
ins
je
jo
jmp
inc
sti
mov
mov
cmp
or
mov
jbe
adc
shl
inc
or
or
ds
xchg
shl
jb
imul
inc
xchg
inc
mov
or
inc
cmp
adc
mov
adc
loop
popa
punpckhbw
rol
data16
mov
inc
and
adc
jbe
fidiv
push
mov
(bad)
xchg
ins
and
xor
pop
mov
push
push
pop
push
jns
les
pop
bndstx
xchg
sub
xor
js
pop
mov
cmp
(bad)
pop
adc
sub
jmp
clc
inc
adc
add
dec
dec
setge
leave
jbe
(bad)
sub
add
inc
push
add
in
add
rol
fmul
call
adc
adc
sub
push
sub
aam
sbb
adc
jge
adc
ror
pop
inc
mov
or
xor
jo
pop
repnz
shl
mov
fmul
pop
push
or
dec
add
push
pop
xor
rol
mov
cmp
mov
ins
fmul
movs
jmp
add
lods
adc
or
outs
lock
pop
adc
sub
adc
dec
cmp
pop
addr16
mov
shl
mov
inc
leave
push
jnp
or
cmp
sub
in
aaa
xlat
(bad)
or
xchg
jno
sub
pop
aad
adc
or
or
outs
mov
or
jb
(bad)
data16
ins
dec
pop
cmp
ja
sbb
adc
movs
sub
pop
bound
jmp
movups
in
add
and
xchg
add
mov
sbb
push
adc
pop
xor
adc
cwde
or
mov
inc
dec
fsub
push
sbb
or
daa
(bad)
sti
jb
test
test
mov
fst
arpl
cs
adc
retf
ret
dec
mov
and
adc
ss
inc
icebp
and
jmp
inc
movs
js
sbb
sbb
(bad)
ins
pop
dec
and
or
or
scas
jmp
rol
(bad)
pop
adc
mov
adc
xchg
dec
pushf
sub
dec
push
pop
jb
sbb
lods
fidivr
outs
aas
(bad)
cs
leave
and
pop
adc
fsub
fsub
(bad)
fldcw
or
xor
cwde
movs
xor
or
sub
xor
mov
inc
xchg
or
dec
adc
and
shl
inc
icebp
mov
cmc
or
sub
and
adc
xchg
ins
push
test
mov
jo
(bad)
cmps
bound
sbb
add
inc
outs
and
push
adc
pop
dec
xchg
mov
in
data16
bnd
inc
(bad)
or
inc
inc
sbb
into
sbb
and
popf
add
arpl
(bad)
daa
pop
mov
je
jge
dec
adc
test
jo
pop
aad
dec
loope
xchg
cmp
jne
xchg
cmp
mov
mov
and
add
or
adc
loope
push
adc
pop
sbb
or
popf
sub
push
push
ret
hlt
pop
lds
stos
cwde
cmps
mov
cmps
xor
inc
mov
mul
inc
xor
or
clc
ret
pop
sub
jne
xor
xchg
pusha
sbb
push
mov
mov
imul
sbb
add
or
aad
aam
mov
iret
pop
push
xchg
(bad)
in
hlt
mov
or
add
mov
pop
add
loope
shr
or
pop
stos
adc
jnp
scas
in
inc
xor
aas
adc
adc
pop
cmp
not
shr
pop
xor
jae
sar
dec
sbb
push
data16
and
in
call
neg
inc
lods
adc
xchg
add
pop
test
jne
jecxz
mov
ja
sub
adc
or
cmp
nop
adc
or
loope
sbb
jmp
add
push
out
outs
push
inc
mul
mov
rol
or
and
daa
cmp
and
sub
mov
pop
cli
add
sar
jge
ds
or
dec
sub
aad
lock
iret
adc
or
inc
and
jne
pop
xor
iret
lahf
xor
das
or
ins
inc
test
scas
pop
stos
fs
or
repnz
sbb
je
push
xor
mov
push
add
sub
das
je
adc
adc
or
pop
repnz
add
mov
jge
outs
inc
inc
ins
and
jnp
ds
xchg
inc
add
inc
push
adc
daa
push
cmp
and
cmp
mov
lods
and
xchg
mov
dec
call
fidiv
jmp
lahf
add
add
push
mov
sbb
ss
pushf
pop
nop
fisttp
add
and
adc
ds
adc
in
fsub
cmp
hlt
iret
sub
push
in
and
add
inc
sahf
add
or
nop
out
pop
adc
jns
adc
sbb
pushf
and
sbb
in
and
and
(bad)
push
call
inc
add
push
xor
(bad)
sar
outs
popa
jo
push
dec
push
scas
sbb
mov
imul
cmovle
je
sbb
aam
fst
dec
jns
add
and
dec
add
enter
ss
add
push
pop
push
dec
xchg
in
sbb
(bad)
add
cmp
jae
inc
fcomp
push
push
fnstsw
jne
or
push
jo
pop
call
leave
or
sti
pop
sub
add
popa
cmps
and
sbb
add
add
or
sbb
mov
leave
add
sbb
jo
adc
repz
in
add
or
inc
push
pop
push
sbb
pop
jns
inc
sbb
js
test
jnp
xor
jae
add
pusha
ins
jo
aaa
dec
shl
or
cmps
push
jmp
pop
mov
je
clc
or
arpl
mov
push
push
ja
cmp
adc
add
je
dec
dec
fs
inc
adc
stos
jle
or
outs
add
leave
pusha
inc
push
cli
or
loopne
inc
inc
push
pop
iret
test
rcl
popa
hlt
add
cs
cmp
xor
pop
cmp
add
enter
xlat
pusha
inc
call
push
sub
pusha
mov
rcl
push
outs
test
and
pusha
inc
xor
cld
test
sbb
mov
and
push
jp
mov
sbb
dec
jl
mov
fisubr
aad
pop
or
stos
mov
or
and
fxch
and
scas
(bad)
ja
sub
retf
sub
adc
xor
dec
aaa
inc
repnz
ins
fdiv
mov
and
jl
(bad)
pop
add
fadd
add
fadd
or
jno
test
fs
sti
xchg
pop
adc
add
int3
push
adc
inc
fwait
loope
lock
mov
add
sub
or
add
mov
push
stc
cld
ds
push
jl
inc
add
aaa
cld
fnstsw
push
and
xor
add
add
fwait
push
shr
mov
(bad)
mov
out
push
(bad)
xor
and
and
lds
or
inc
or
mov
and
ret
and
add
inc
or
(bad)
and
adc
repz
(bad)
and
add
mov
cld
and
(bad)
cmc
sbb
repnz
mov
jno
sbb
adc
test
dec
inc
add
and
fcomp
sub
test
sub
mov
(bad)
push
add
in
pop
mov
repnz
xchg
aas
cmp
cmp
mov
cmps
inc
dec
inc
add
out
or
and
(bad)
and
sub
xor
push
lds
inc
sar
and
pop
pop
es
ret
ret
(bad)
stos
pop
ret
(bad)
mov
xchg
mov
adc
stc
add
das
(bad)
sub
push
adc
add
or
inc
add
jb
sti
shl
das
mov
inc
mov
sub
out
loope
cmp
(bad)
pop
aaa
ret
stc
add
pop
adc
and
in
adc
inc
(bad)
jg
cmp
or
clc
nop
cld
and
add
add
xchg
aas
xor
mov
push
mov
arpl
inc
cmp
(bad)
mov
fmul
jle
div
mov
ret
mov
ins
mov
adc
int
jnp
add
push
enter
add
and
jg
stc
add
sub
jo
mov
dec
cmp
add
cli
daa
mov
test
add
sbb
inc
(bad)
adc
add
add
stc
push
enter
in
(bad)
inc
add
pusha
and
or
gs
lods
(bad)
repnz
pop
fimul
not
or
inc
and
hlt
mov
push
and
jmp
fs
sub
and
pop
cmps
and
push
or
js
(bad)
cmp
in
and
xor
ret
pop
pop
adc
aas
nop
cld
sub
test
pop
xchg
test
leave
pop
dec
inc
loopne
sub
sbb
adc
add
cmp
adc
cmp
and
xor
aas
nop
cld
or
mov
add
mov
add
enter
cmp
inc
lds
js
add
adc
add
int
inc
das
mov
mov
lds
mov
and
shr
jnp
jge
inc
cmc
(bad)
nop
push
inc
ss
inc
cmp
or
jnp
sub
push
rol
adc
inc
les
fldl2t
and
mov
fsub
sub
jmp
or
popa
bound
sbb
outs
rol
push
ins
outs
jmp
or
ja
mov
add
inc
inc
inc
add
inc
addr16
inc
mov
fdivr
dec
xor
mov
adc
aas
fild
add
cmp
inc
cmp
sub
nop
inc
adc
idiv
inc
mov
xchg
in
sub
add
enter
sti
shr
add
add
mov
outs
or
cmp
jbe
adc
test
mov
push
imul
cmp
jb
push
sub
inc
cmps
fiadd
pop
and
(bad)
popa
retf
sub
or
sbb
pop
inc
(bad)
in
inc
jmp
daa
xchg
cmp
test
adc
ja
in
adc
call
pop
je
imul
imul
fs
and
std
mov
push
add
jne
or
stos
cmp
or
add
test
push
and
mov
inc
fwait
add
jl
les
sub
fld
nop
xchg
adc
xchg
inc
(bad)
cld
stos
pop
push
or
inc
int3
add
stos
movs
mov
xor
push
push
mov
int
or
repnz
mov
push
mov
sub
push
inc
imul
push
push
mov
mov
adc
out
mov
or
push
push
jo
and
push
mov
jle
sar
mov
mov
lea
(bad)
cmp
mov
fsubr
cmp
loope
popa
push
in
into
or
sub
mov
enter
jl
inc
mov
mov
push
push
adc
mov
mov
stos
inc
test
cmps
cmp
sub
pop
cmp
sub
into
dec
and
pop
adc
ret
(bad)
int
aam
repz
in
xchg
add
or
mov
lods
nop
rcl
nop
(bad)
push
and
xchg
cwde
or
sbb
leave
mov
aam
retf
inc
fist
xchg
je
mov
stc
ja
push
cmp
in
gs
shl
mov
and
ret
or
add
ja
jae
test
(bad)
cmps
test
or
mov
test
das
xor
and
in
ss
mov
xchg
xor
pop
mov
fdiv
loop
call
lea
or
(bad)
std
add
cmp
xchg
adc
mov
test
push
aas
nop
cld
adc
and
ss
mov
add
js
inc
sub
and
aam
sub
mov
cwde
adc
clc
push
popa
out
ror
rcr
inc
sub
xchg
fbld
mov
test
call
sbb
adc
mov
jo
cmp
mov
in
and
and
imul
daa
sbb
add
nop
push
jno
mov
sahf
or
pmulhuw
cmps
add
mov
dec
push
das
adc
rcr
clc
mov
push
adc
adc
xchg
xchg
sbb
push
lea
push
mov
and
pop
push
jle
adc
(bad)
aas
and
sti
iret
mov
je
inc
fs
mov
popa
adc
(bad)
adc
data16
add
push
gs
ins
gs
adc
clc
mov
mov
sub
add
push
sbb
enter
or
pop
mov
fisttp
rcl
ss
xor
or
ds
movs
aaa
pop
push
stos
push
pusha
push
inc
mov
mov
sub
adc
retf
jne
mul
mov
arpl
add
(bad)
or
int
xchg
and
(bad)
xchg
bound
mov
enter
mov
call
ja
es
loopne
int3
je
mov
sbb
and
jmp
out
sbb
nop
sahf
sbb
(bad)
(bad)
adc
dec
xor
xchg
in
aam
pop
jb
fidiv
ror
pop
jns
(bad)
adc
adc
sub
loopne
jb
ret
test
repnz
mov
pop
inc
movs
mov
or
add
jl
scas
sbb
push
or
push
xchg
sbb
xor
loopne
mov
push
sub
mov
or
stc
xor
add
or
int
jns
icebp
stos
mov
fidivr
repnz
sub
pop
(bad)
fisttp
jmp
push
(bad)
ficom
push
(bad)
fsubr
call
push
(bad)
and
or
add
push
in
push
scas
cmp
jne
push
fnstenv
push
mov
movs
push
and
test
sti
test
jnp
dec
or
dec
loopne
retf
xchg
or
sub
jle
cli
pop
gs
pop
and
pop
out
xor
pop
sub
ss
or
pop
add
add
aaa
sub
stos
stos
pop
outs
in
vpshuflw
aaa
adc
push
mov
push
test
pusha
add
push
(bad)
pushf
jmp
push
mov
imul
pop
mov
add
neg
xor
data16
or
sbb
ja
sub
and
gs
bound
in
mov
ror
or
es
arpl
sti
xchg
dec
and
or
xchg
aad
xchg
fs
lods
sub
inc
scas
es
cs
add
nop
add
dec
std
outs
xor
mov
idiv
mov
mov
xor
mov
mov
add
or
sbb
jno
retf
add
in
(bad)
int
movs
call
mov
add
inc
daa
mov
dec
inc
aam
fld
imul
in
jbe
fstp
rcl
call
sub
add
mov
inc
adc
add
(bad)
xchg
inc
retf
push
lea
clc
push
xchg
push
adc
mov
shl
mov
ret
pop
sbb
in
into
repz
retf
fistp
enter
and
sbb
leave
or
ror
mov
out
xor
jbe
sbb
jns
dec
pop
mov
lds
pop
push
ss
push
pop
lock
xchg
jns
dec
repnz
nop
nop
push
jo
movs
dec
adc
scas
fld
fild
mov
test
xor
dec
push
jns
mov
xor
xchg
outs
mov
add
jbe
pop
sbb
les
xchg
int3
inc
add
in
inc
add
pop
add
jne
jb
push
movs
and
sar
mov
scas
out
inc
mov
xor
jmp
rol
inc
stos
mov
push
inc
xor
xchg
add
jnp
mov
mov
loop
mov
and
int3
add
push
or
in
xor
jne
std
daa
dec
mov
or
in
pop
sbb
and
pop
inc
adc
stos
out
add
sbb
shr
(bad)
loopne
xchg
xor
in
pusha
adc
or
push
rol
pusha
pop
xchg
test
enter
fisttp
sub
in
ret
sbb
fsubr
pusha
aaa
dec
xchg
fsub
mov
fdiv
out
rol
stos
pop
jl
cmps
call
ret
ret
dec
rol
sbb
test
push
jno
jl
lods
lock
fsubr
in
pop
fcom
or
ret
call
ins
xchg
pop
test
add
xor
daa
or
movs
test
jb
or
jo
add
or
jg
push
sub
jae
outs
outs
imul
jae
int3
in
and
cmp
imul
add
dec
inc
inc
jns
pop
inc
xor
sub
imul
push
or
(bad)
lods
dec
push
jecxz
mov
push
adc
test
xchg
xor
xor
(bad)
hlt
pop
sub
mov
inc
jne
fcmovb
inc
mov
jge
mov
leave
add
dec
inc
in
dec
jne
cdq
xor
jl
dec
fnsave
sbb
xchg
adc
jecxz
lea
pop
aaa
pop
mov
push
ins
clc
popf
dec
loopne
and
push
fwait
loopne
or
add
popa
push
xor
in
push
xchg
fcom
push
inc
pop
xchg
mov
test
dec
push
xchg
inc
adc
cdq
push
add
in
push
hlt
push
int
cmps
sbb
stos
adc
cmp
pop
sub
push
xchg
clc
sbb
mov
sub
adc
inc
adc
xchg
jmp
mov
and
jno
addr16
jmp
stc
jno
pushf
and
jg
adc
xor
and
retf
adc
test
rol
(bad)
in
call
xchg
js
call
ja
push
popa
adc
sbb
jl
xor
xor
outs
and
bound
pop
movs
call
ret
add
ror
and
inc
cmove
adc
add
jmp
push
sub
add
xlat
inc
jle
aaa
loop
cs
je
clc
js
and
mov
mov
fld
xchg
cmp
cld
mov
pushf
pop
xor
cld
cld
mov
jl
in
cld
in
sbb
pop
ss
aam
fdivp
clc
jne
cmp
data16
call
inc
in
add
lods
fmul
and
pushf
cwde
mov
add
dec
jne
inc
adc
dec
aas
ss
sub
nop
and
inc
mov
cmp
bound
pop
dec
pop
dec
icebp
push
daa
aas
push
shl
sbb
and
rol
jbe
cmp
pop
or
add
pop
cmp
pusha
gs
sub
pusha
sub
mov
mov
sahf
pushf
push
or
dec
mov
mov
sub
mov
add
es
cs
dec
cmp
mov
mov
adc
or
push
in
sahf
mov
or
xor
or
cmp
mov
(bad)
enter
pop
mov
xchg
mov
out
inc
xchg
test
int3
pcmpgtw
gs
in
jne
dec
fsubr
mov
data16
sub
mov
and
inc
sbb
gs
and
data16
mov
xor
js
scas
popf
jb
sbb
mov
sbb
popa
lahf
cmp
pop
push
sbb
sahf
mov
and
jg
inc
dec
sahf
pop
dec
sbb
jnp
inc
dec
lods
jae
stc
push
push
and
cmp
mov
scas
pop
ja
nop
ins
mov
mov
jp
adc
scas
rcl
addr16
inc
adc
fbstp
xchg
jo
je
mov
and
jb
rcl
fsubr
or
shl
adc
sub
jne
enter
sub
sti
mov
push
add
dec
jp
pop
lds
jp
daa
cmp
dec
or
scas
jg
mov
jne
loop
test
and
rcl
push
adc
ss
arpl
cmps
stc
mov
jge
call
push
js
nop
add
jge
sub
pop
and
sbb
cdq
nop
clc
(bad)
mov
or
ins
jmp
test
mov
mov
outs
xor
mov
shl
mov
mov
pop
sub
adc
pop
in
rcr
stos
mov
ret
adc
sub
dec
add
lock
pop
stos
pslld
mov
nop
and
pop
lock
mov
add
out
sbb
movs
cld
mov
lods
(bad)
lea
push
mov
(bad)
jmp
int
cmp
test
mov
jmp
adc
add
mov
add
sbb
dec
or
xchg
ret
and
adc
and
or
xchg
add
sbb
inc
leave
mov
mov
repnz
pop
pop
hlt
into
jb
into
push
mov
stos
jb
sub
ds
ins
inc
mov
mov
les
xchg
adc
(bad)
and
pop
adc
les
mov
dec
std
sbb
jb
push
add
out
inc
push
and
xchg
mov
add
add
and
int
push
push
push
mov
cmp
sbb
pop
add
push
push
in
(bad)
sti
and
sbb
adc
adc
adc
push
sbb
call
rcl
lahf
sub
(bad)
sbb
or
add
(bad)
repz
cs
stos
pop
sub
xor
bound
arpl
cdq
or
sbb
xor
xchg
adc
hlt
pop
add
aad
jo
inc
jo
paddsb
push
sti
movs
icebp
sbb
fsubr
loope
jmp
pusha
or
mov
inc
dec
mov
loopne
jae
adc
adc
js
sbb
push
stos
inc
jne
mov
fst
and
mov
test
movs
out
inc
leave
pop
movs
and
popa
ret
arpl
shl
or
inc
ret
jae
mov
ror
jl
es
pop
mov
pop
jecxz
push
sub
int3
pusha
mov
ins
je
or
xchg
adc
lahf
lock
pop
test
lea
adc
sub
repnz
and
sub
and
adc
imul
cmps
ror
je
and
xchg
ins
ds
arpl
cmp
push
sub
ret
sub
push
in
stc
push
repnz
cmps
mov
(bad)
das
shr
dec
jae
jae
js
dec
jb
and
push
sub
mov
or
mov
xor
cmp
jmp
mov
movs
loopne
(bad)
sbb
mov
dec
jmp
and
xor
sbb
xor
sub
mov
push
pop
sub
pop
inc
push
in
jmp
push
or
(bad)
mov
add
retf
lock
pop
cmp
cmp
nop
jp
in
test
adc
add
sbb
xor
pop
and
inc
pop
adc
mov
les
pop
mov
test
sub
and
mov
test
pop
sub
imul
mov
loopne
std
mov
das
mov
cmc
inc
in
inc
(bad)
add
movs
and
js
inc
push
pushf
jmp
xchg
xchg
pop
or
int
dec
sub
rcl
lods
sbb
push
add
dec
and
dec
dec
inc
inc
push
dec
inc
dec
inc
inc
push
and
aad
les
push
jo
lods
aad
out
aaa
xor
and
push
xor
loopne
push
and
ja
das
(bad)
leave
mov
rol
add
mov
lock
enter
adc
add
imul
and
retf
pop
mov
adc
add
fstp
sbb
mov
and
or
mov
enter
shr
xchg
sub
dec
add
push
in
lock
sbb
pushf
add
sub
(bad)
jno
cmps
inc
cmps
or
int
mov
sbb
push
push
mov
fs
cwde
pop
push
dec
not
jmp
and
jne
enter
push
and
xchg
test
mov
icebp
into
sub
hlt
push
outs
rol
add
mov
sub
inc
ret
push
or
inc
(bad)
(bad)
jg
and
mov
scas
mov
fidiv
ret
mov
xchg
xlat
rol
loopne
scas
outs
aaa
add
push
loopne
xchg
cli
mov
out
sub
pop
into
aas
shl
test
mov
jno
and
jbe
cmc
mov
pop
imul
sbb
je
jbe
jo
ds
pop
mov
pushf
push
push
and
jl
enter
pop
mov
lock
daa
dec
sar
or
(bad)
jmp
sbb
mov
add
or
test
sub
test
lods
adc
imul
lods
mov
xor
adc
imul
or
and
inc
inc
rol
add
dec
mov
xor
add
xchg
add
push
and
inc
jo
sti
mov
inc
mov
push
push
and
cmp
loop
and
scas
mov
add
push
scas
cdq
ret
scas
sbb
cmp
leave
xchg
or
enter
or
dec
rol
jg
cs
and
pop
or
mov
mov
mul
loopne
lahf
inc
push
cmp
and
adc
popf
or
xor
inc
(bad)
dec
add
sub
jo
and
rol
fs
inc
jp
add
add
ja
addps
cs
gs
cmp
leave
cmp
mul
aad
mov
xor
imul
loop
inc
xor
add
cmp
cld
hlt
fdivr
gs
in
and
xor
in
nop
xchg
xchg
lock
fs
mov
sub
add
shr
jns
or
scas
fadd
and
mov
xor
repnz
mov
pop
popa
and
lods
iret
cmp
adc
pop
scas
lock
push
cmps
adc
dec
outs
imul
mov
ret
mov
repnz
shl
mov
shl
inc
adc
push
hlt
mov
pop
retf
pop
adc
jo
data16
push
or
sbb
sbb
fcmovne
push
mov
push
push
mov
arpl
jne
mov
and
call
jne
and
xchg
mov
and
inc
inc
shl
test
and
imul
inc
push
ss
sbb
fs
and
retf
mov
mov
inc
mov
hlt
je
das
or
push
sbb
push
nop
hlt
pop
cmp
test
inc
push
inc
jno
and
push
push
adc
test
xor
pop
test
push
xor
enter
jno
test
sbb
rol
aad
dec
test
mov
push
call
jo
xchg
add
lock
je
mov
or
loopne
sub
push
enter
mov
(bad)
imul
add
aam
mov
inc
and
daa
dec
sahf
lock
adc
mov
xor
add
xchg
fst
setno
or
ret
je
push
mov
fadd
adc
mov
pop
xor
add
push
inc
dec
cmp
rcl
aam
xor
pusha
xor
mov
inc
fwait
int3
leave
or
fwait
xchg
adc
fwait
or
add
pop
pop
push
sbb
test
daa
add
fs
das
mov
enter
adc
or
les
jmp
cmp
and
xor
jo
jns
inc
ja
mov
pop
push
xor
and
lods
mov
and
jno
scas
mov
dec
bound
jnp
das
push
or
mov
jecxz
ins
ins
inc
xchg
pop
mov
inc
inc
mov
fsubr
jg
stos
xchg
adc
push
xchg
setae
push
dec
mov
add
fmul
push
inc
repz
clc
ret
push
cmps
or
iret
outs
jae
(bad)
out
cmp
sti
mov
mov
adc
in
ficomp
jnp
mov
jne
cwde
push
xchg
pushf
rcl
scas
cmp
in
and
add
sub
push
or
pusha
adc
fbstp
leave
pop
inc
and
push
and
adc
aas
add
es
xstore-rng
cmps
test
cwde
or
call
shl
pusha
inc
nop
fild
lock
lods
add
clc
add
ins
or
test
ret
mov
add
xchg
and
add
add
mov
add
mov
sub
xchg
mov
push
cld
mov
ror
mov
mov
or
mov
loopne
stos
mov
nop
call
neg
jbe
call
addr16
sbb
ins
das
pop
cmp
sbb
in
ja
pop
mov
sbb
or
call
mov
or
dec
inc
add
xchg
push
rcr
add
cmp
jl
or
in
and
adc
inc
mov
inc
je
or
cmp
jo
mov
js
sbb
ja
xor
xchg
mov
jmp
pusha
push
ss
shl
outs
(bad)
call
js
push
je
(bad)
fwait
sub
add
xchg
retf
dec
mov
pop
jns
shr
jo
xor
repnz
leave
sub
iret
pop
jl
into
push
add
sbb
jg
clc
mov
or
sbb
fld
inc
jle
fisttp
fiadd
jecxz
mov
sub
pop
push
cmp
xchg
(bad)
in
push
mov
push
in
(bad)
call
mov
icebp
xchg
pop
popa
pop
mov
fistp
pop
(bad)
push
add
add
adc
sbb
push
add
mov
xchg
(bad)
xor
mov
push
mov
push
les
xchg
mov
ins
sub
mov
int
and
data16
(bad)
jl
aaa
pop
inc
sub
adc
adc
cs
sub
or
xchg
push
(bad)
aam
adc
xchg
or
jmp
mov
adc
dec
push
jns
adc
add
add
adc
sbb
sub
cld
adc
(bad)
and
pop
pop
sbb
xchg
in
and
and
pop
cmp
inc
outs
nop
sub
sub
fbld
inc
pop
pop
sbb
xchg
pusha
push
sub
sub
dec
xchg
fs
mov
dec
rcl
xchg
and
adc
xchg
or
xor
sbb
inc
pusha
xchg
ffreep
jb
sbb
adc
dec
xchg
ins
sub
mov
inc
leave
and
pop
ror
jb
and
retf
inc
lock
add
push
pop
jo
call
inc
leave
adc
pop
or
and
push
or
or
neg
jle
test
push
jl
or
xor
enter
enter
es
(bad)
fcmovnu
fcmovu
retf
(bad)
loopne
jecxz
in
daa
sbb
outs
(bad)
mov
gs
popa
je
xor
(bad)
mov
xor
xor
ss
cmp
inc
inc
inc
inc
inc
inc
jne
xor
imul
sub
xor
add
fistp
add
or
or
lods
movs
imul
mov
out
and
push
neg
add
sub
cwde
cs
or
jmp
add
and
call
int
clc
pop
add
adc
dec
shl
inc
dec
xor
shl
pop
pusha
push
sar
mov
dec
mov
enter
xor
fsub
jg
leave
push
cmps
pop
pop
pop
pop
cwde
inc
push
jns
retf
adc
les
jns
in
in
pop
inc
pop
pushf
pop
push
daa
pop
inc
sahf
pop
test
pop
popa
or
fs
or
bound
mov
arpl
shl
mov
mov
add
fs
sub
xchg
cmp
mov
xlat
xor
or
adc
(bad)
inc
adc
dec
add
cmps
imul
cmps
imul
adc
xor
shl
inc
push
fs
xor
je
inc
mov
das
test
addr16
(bad)
dec
repz
push
cwde
cmp
dec
mov
xchg
aas
jge
loope
jb
push
lock
(bad)
cld
rcl
popa
xchg
in
jge
dec
ins
retf
cmp
push
add
loopne
(bad)
popa
mov
dec
sub
xor
xor
pop
(bad)
mov
inc
inc
aaa
inc
inc
xor
sub
xor
jmp
inc
inc
ss
inc
inc
xor
xor
xor
push
dec
inc
sbb
aad
mov
cmp
call
lea
pop
and
or
inc
jbe
pop
jmp
addr16
adc
outs
ror
xor
fistp
add
pop
aas
pop
and
and
jae
pusha
push
push
xor
add
sub
(bad)
adc
invd
pop
or
push
or
jbe
pop
cwde
add
sti
adc
aas
or
pop
lock
xor
addr16
push
aas
pop
jmp
hlt
movs
dec
cmps
pop
mov
sub
mov
add
adc
cwde
(bad)
out
jae
scas
or
xlat
pop
or
pop
xor
cmp
pop
call
addr16
mov
repnz
cmp
pusha
repnz
sahf
jmp
repnz
pop
sti
out
mov
retf
pop
(bad)
repz
mov
mov
aas
cmps
pop
js
fs
xor
sar
sub
div
push
pop
daa
pop
test
mov
sti
daa
jo
xor
dec
pop
fmul
xor
inc
pop
mov
test
out
pop
frstor
mov
inc
xchg
xchg
scas
outs
xlat
cdq
pusha
imul
pop
(bad)
repz
ja
cmps
cmp
and
pop
adc
clc
pop
push
pop
cmp
mov
mov
nop
stc
pushf
stos
mov
pop
loopne
ret
jnp
mov
imul
hlt
push
sbb
addr16
pop
out
cmp
adc
(bad)
xor
add
push
cmp
adc
add
push
dec
lea
nop
push
add
rol
add
jg
add
inc
add
inc
add
push
fwait
mov
or
add
dec
add
dec
test
add
inc
add
dec
pop
xchg
and
inc
add
add
jb
outs
add
gs
mov
pop
and
adc
or
adc
js
imul
add
popa
add
ja
jb
fdiv
jae
and
add
and
arpl
je
outs
add
fldenv
cmp
xor
out
xchg
and
sti
or
test
and
jge
lods
jo
gs
outs
scas
fsub
pop
dec
(bad)
ins
jns
xor
and
fldcw
ins
fst
inc
ins
or
in
jae
sbb
in
sub
mov
fld
inc
or
or
ficomp
xor
ins
or
xchg
add
enter
test
test
adc
ficom
mov
test
xor
dec
or
jo
jo
mov
(bad)
into
add
sbb
mov
inc
arpl
daa
idiv
in
add
pop
sub
adc
std
sbb
sub
cmp
not
sub
dec
and
daa
ins
mov
ins
(bad)
jnp
push
xlat
inc
inc
sub
jae
sbb
fldenv
ins
and
xchg
push
sub
adc
xor
or
stc
ins
sbb
adc
arpl
add
ror
ins
and
dec
mov
addr16
push
shr
ins
ror
outs
sbb
xchg
data16
push
aam
xor
xor
add
jne
inc
es
lea
pop
mov
es
add
xor
or
or
adc
or
adc
popa
jne
leavew
pop
and
sbb
rol
inc
je
popw
in
sub
sbb
sbb
jmp
sbb
push
cmovne
imul
mov
popa
movs
jecxz
pop
in
jp
push
loopne
out
add
dec
sbb
outs
inc
xor
ja
mov
jo
das
inc
repz
mov
xor
push
out
push
ins
popa
inc
mov
mov
adc
or
aaa
ret
dec
test
inc
std
test
xchg
dec
cmp
or
mov
or
add
test
jno
cmp
pop
pop
add
mov
jae
or
inc
or
scas
or
xor
je
ja
dec
jmp
fld
push
xchg
emms
dec
or
arpl
add
mov
sti
fisubr
outs
pop
xchg
mul
or
cmps
jae
sti
xchg
adc
(bad)
and
(bad)
(bad)
std
popa
jmp
jmp
(bad)
hlt
add
gs
das
or
test
fld
xchg
mov
pop
pusha
mov
inc
sbb
popf
fstp
fsubrp
cdq
cmp
data16
cmp
adc
pop
fbstp
xchg
loope
cmps
jecxz
dec
add
lock
aas
xor
data16
and
add
push
adc
cmc
shr
xor
xor
jecxz
pop
test
loope
fild
fld
int
xchg
add
add
dec
outs
lods
mov
pop
je
jb
add
shl
adc
pop
push
pop
adc
jl
jecxz
pop
xor
jmp
jo
cmp
cmc
cmp
aas
ins
dec
pusha
sub
and
or
jmp
and
mov
pop
shl
je
ret
data16
jne
adc
arpl
sbb
mov
push
push
imul
(bad)
enter
inc
mov
mov
out
adc
das
outs
das
mov
adc
adc
pop
push
and
pusha
and
jo
mov
push
pop
imul
pop
adc
jae
sbb
daa
jb
xchg
push
sub
call
movs
imul
fld
sub
pop
(bad)
inc
scas
je
fstp
mov
mov
cmp
and
addr16
adc
int
pop
imul
sub
adc
popa
in
(bad)
xchg
test
mov
and
stos
push
fld
or
jecxz
inc
pop
jns
fstp
pop
imul
sbb
dec
cmp
and
xchg
int
cmp
popf
xor
sub
mov
lock
leave
daa
add
adc
sbb
loope
pop
jae
cmc
pop
ins
dec
cwde
adc
jnp
cmps
ins
pop
int
and
sbb
in
bound
push
daa
pop
mov
mov
icebp
and
mov
inc
pop
and
adc
call
and
xchg
add
das
fistp
and
or
pop
mov
adc
jb
or
push
or
das
pop
arpl
cdq
inc
pop
pop
or
inc
xor
sar
adc
push
outs
outs
out
add
mov
rcl
addr16
sub
cmovno
mov
mov
pop
bound
mov
pop
fist
xchg
sbb
das
imul
adc
jb
or
sub
aas
jp
dec
pushf
pop
mov
ret
or
pushf
iret
daa
adc
test
dec
push
rcl
es
adc
inc
daa
or
pop
pop
fs
ss
(bad)
pop
aas
mov
outs
inc
adc
es
aaa
mov
xchg
data16
add
fwait
cmp
imul
(bad)
and
mov
dec
inc
ret
fist
add
adc
cmp
jne
jg
or
and
dec
inc
outs
outs
or
pop
out
push
adc
xor
(bad)
mov
je
jbe
pop
add
dec
gs
popa
addr16
adc
int
outs
add
adc
dec
ins
sbb
or
stos
or
add
and
fwait
jne
in
cmps
stos
inc
inc
push
dec
mov
jne
inc
add
loop
into
not
ins
or
bound
cmp
fucomi
into
xchg
jae
popa
xor
arpl
sbb
ins
inc
frstor
movs
inc
sbb
push
ins
dec
jae
push
ins
jo
inc
bound
je
sub
pop
loope
xor
and
inc
fs
shr
psllq
push
adc
xor
xchg
jae
pop
mov
xchg
or
ins
ins
outs
arpl
ins
push
fwait
cmp
dec
data16
jae
xor
rdpmc
hlt
ret
pop
je
inc
sti
pop
add
jb
dec
sub
or
sub
add
push
imul
push
pop
test
jae
add
jb
(bad)
bound
mov
push
add
adc
retf
sub
mov
sbb
inc
mov
pop
xchg
adc
sbb
mov
pop
sub
or
add
push
outs
adc
or
pop
adc
je
inc
inc
test
fld
arpl
or
stos
push
adc
bound
jns
ret
dec
pushf
xchg
sbb
cwde
(bad)
push
je
jno
and
push
add
stc
jb
(bad)
ins
and
adc
int
scas
add
push
jmp
mov
outs
and
mov
mov
inc
add
inc
inc
cvttps2pi
jae
movs
imul
or
or
mov
xchg
popa
or
mov
repnz
(bad)
(bad)
sub
or
push
or
pop
mov
adc
sbb
leave
pop
and
imul
ins
and
arpl
or
fs
jl
xchg
ins
fst
popa
ficom
adc
adc
push
stos
or
scas
je
ds
mov
in
(bad)
gs
push
push
xor
dec
and
adc
sbb
clc
add
jbe
and
cmp
cdq
dec
neg
xor
rol
and
adc
dec
xor
mul
shl
xchg
ins
in
adc
xor
push
sub
popa
xor
sub
and
sbb
mov
fwait
mov
xchg
mov
or
jp
ja
sbb
adc
push
mov
inc
cmp
push
(bad)
je
(bad)
in
adc
xchg
mov
jns
fs
pop
dec
add
sub
ret
adc
add
push
mov
lea
add
sub
ss
adc
adc
mov
inc
xchg
xor
outs
inc
pusha
adc
inc
jp
or
xchg
popa
bound
outs
imul
dec
inc
add
ds
pusha
nop
inc
(bad)
lea
sti
inc
sbb
ins
adc
cmp
scas
jle
(bad)
sbb
adc
dec
gs
out
ret
push
cmp
ss
ss
je
or
adc
cmps
sub
xor
cdq
dec
xchg
fwait
sub
sbb
scas
add
push
jnp
loope
cmps
jae
add
sub
adc
push
inc
inc
jb
dec
sub
adc
stos
int
adc
retf
sbb
outs
add
sub
test
or
mov
inc
xor
aaa
push
ja
stos
adc
mov
dec
in
add
sbb
and
out
push
push
jbe
jb
outs
jae
adc
sub
popa
ret
and
add
sbb
les
inc
pop
adc
sbb
les
add
add
or
lods
dec
mov
xor
xlat
sub
frstor
dec
jae
push
mov
stos
adc
or
ins
mov
pop
jnp
sub
mov
adc
gs
inc
add
adc
adc
in
mov
sub
adc
adc
dec
dec
sbb
sbb
dec
jnp
mov
popa
inc
test
mov
data16
bound
push
xor
es
adc
stc
arpl
pop
add
or
or
or
adc
cld
into
mov
adc
add
or
sbb
(bad)
(bad)
fisttp
pop
lock
push
adc
sbb
sysret
or
xor
and
jmp
dec
nop
push
or
sub
or
adc
or
push
sbb
mov
(bad)
mov
or
or
push
adc
push
cmp
sbb
or
lock
add
sbb
add
xchg
adc
lock
in
dec
adc
aaa
or
inc
and
lea
lea
xor
adc
idiv
push
out
push
push
and
rol
add
adc
jge
cmp
or
xchg
mov
sbb
test
(bad)
mov
or
pop
outs
(bad)
(bad)
(bad)
fcomi
inc
add
adc
or
dec
add
adc
push
push
sbb
pop
add
loopne
outs
jg
add
adc
adc
adc
sbb
adc
xor
pop
and
ud0
fisttp
sub
pop
and
jno
aaa
dec
add
pop
sbb
xor
or
or
aas
fsubr
sti
push
pop
aaa
adc
add
push
or
fisub
(bad)
in
pop
pop
or
or
sbb
and
sbb
add
(bad)
jg
aas
or
cmp
add
and
pop
add
lock
add
add
push
lock
add
push
sbb
lock
add
movups
push
adc
adc
or
lock
mov
mov
mov
sub
je
or
adc
test
sub
xor
add
push
jg
fisttp
test
adc
popa
inc
fadd
imul
fs
push
adc
or
adc
dec
and
and
dec
gs
sub
inc
or
js
ins
imul
adc
pop
nop
push
mov
pop
lock
push
std
(bad)
out
dec
push
or
test
or
adc
inc
in
(bad)
fld
mov
xor
add
add
clc
(bad)
int3
pop
ret
add
gs
sbb
dec
scas
add
adc
or
lock
adc
add
jmp
sti
push
push
xor
movq
outs
pop
cmp
daa
adc
xor
jg
(bad)
call
cmp
and
pop
xor
xor
adc
add
mov
adc
mov
dec
push
cmps
out
out
(bad)
call
dec
sbb
sbb
adc
adc
xor
lock
or
cld
mov
cli
sub
xor
sbb
adc
push
bndldx
cmp
sub
(bad)
jmp
sti
sbb
sbb
aad
add
mov
dec
sbb
xchg
das
(bad)
cmp
arpl
pop
and
test
push
pop
popa
inc
push
sub
adc
mov
(bad)
inc
lahf
xor
bsf
dec
adc
sub
dec
push
add
sbb
sub
ins
or
(bad)
push
fild
add
add
adc
add
push
bound
imul
adc
pushf
add
outs
push
jb
sub
ins
pop
(bad)
jg
sbb
adc
or
push
pop
sbb
adc
adc
and
push
and
add
or
cmp
or
pop
pop
loope
sub
push
into
add
aas
fst
sub
or
nop
jg
(bad)
or
sbb
or
jge
cdq
cdq
push
or
ss
add
sbb
inc
pop
sbb
mov
sub
add
add
cmp
push
add
adc
or
es
test
mov
cmp
add
pop
ins
lahf
lods
jge
xchg
and
xor
ja
movs
jg
addr16
sbb
push
lahf
cmp
pusha
cmp
sbb
sti
xchg
or
sbb
push
xor
sbb
add
add
lock
sbb
aam
imul
ret
sub
ss
std
add
sbb
push
lock
pop
adc
jle
add
sub
sbb
imul
movs
push
push
sysret
mov
outs
push
sbb
cs
or
adc
mov
mov
pop
push
jnp
jb
or
sub
arpl
inc
push
jne
js
pop
and
popa
rol
inc
adc
mov
xchg
hlt
mov
push
enter
das
or
or
retf
and
adc
adc
dec
movs
mov
fimul
sbb
sbb
mov
add
pushf
mov
ret
push
mov
sub
mul
mov
dec
cmp
or
and
sbb
mov
retf
cmp
dec
and
add
and
mov
push
retf
push
jnp
pusha
sbb
ins
mov
jl
add
add
call
push
dec
fmul
sub
mov
(bad)
jmp
inc
pop
pop
dec
push
sbb
push
dec
sbb
dec
or
push
jmp
push
sub
push
ja
ds
lock
cmp
das
clc
in
inc
aam
xor
push
aas
and
arpl
cmp
aaa
push
call
push
lock
sbb
(bad)
lock
sbb
cmp
lock
call
push
js
sbb
cwde
dec
add
pop
pop
adc
mov
and
add
add
pop
fnstenv
dec
test
out
rcr
dec
cmp
punpcklbw
daa
xchg
adc
movs
jmp
rol
jmp
test
sbb
stos
(bad)
(bad)
push
sub
xor
sbb
mov
dec
and
and
ja
push
outs
adc
cmp
lock
(bad)
jg
jnp
push
inc
lock
lock
pushf
add
add
test
xor
lock
es
add
push
js
mov
scas
inc
and
pop
enter
or
jo
bound
jle
ret
call
or
pop
cs
inc
(bad)
push
movs
lods
test
or
or
adc
xor
sbb
es
dec
add
mov
ficom
cmp
xor
push
adc
inc
imul
add
rcl
outs
lods
mov
or
or
jle
shl
add
jns
push
sub
out
iret
pop
ja
mov
in
test
(bad)
sbb
pop
movhps
dec
xor
inc
and
and
xor
outs
adc
mov
das
sub
lock
rcr
push
std
ror
and
sbb
fwait
mov
(bad)
jmp
xor
inc
adc
inc
adc
pop
sub
adc
jle
sbb
pop
mov
aas
adc
xor
mov
mov
sbb
or
mov
and
pop
inc
pop
inc
and
inc
sub
sbb
or
or
add
sbb
cwde
push
sar
das
(bad)
lds
cmps
and
sub
and
xor
aaa
sbb
and
jle
sti
ret
clc
add
or
push
jo
or
aaa
imul
test
and
and
cmp
popa
or
das
and
fisttp
es
xor
adc
lock
add
(bad)
mov
scas
or
dec
(bad)
fwait
(bad)
jge
mov
xor
sbb
or
sbb
sub
dec
and
mov
sub
nop
call
ret
es
push
or
push
pop
int3
push
jo
xchg
dec
or
adc
or
push
outs
or
sbb
pop
pushf
(bad)
mov
sbb
push
(bad)
rcr
xchg
or
inc
sbb
jmp
xor
add
add
adc
pop
out
or
sbb
push
or
orps
add
in
add
add
or
add
mov
in
or
scas
add
pop
add
add
push
jg
inc
add
cmps
or
sub
jp
cmp
mov
add
rcl
adc
inc
or
xchg
mov
sub
adc
add
xchg
out
or
stos
mov
sub
aam
dec
pop
or
pop
and
cs
mov
nop
pop
xlat
in
mov
add
fnstenv
mov
sub
dec
shl
in
xchg
daa
fs
je
or
and
inc
mov
adc
bound
cmp
lock
mov
add
pop
pop
xor
sbb
daa
inc
dec
cwde
jo
gs
push
je
test
retf
cs
(bad)
dec
gs
call
in
and
mov
out
cmps
add
add
inc
xor
add
add
add
inc
add
inc
cmp
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
