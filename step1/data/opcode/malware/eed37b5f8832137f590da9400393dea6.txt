mov
sub
pop
data16
pop
bound
xchg
or
xchg
or
xchg
pusha
xchg
and
dec
xor
lods
pop
inc
ds
pushf
inc
es
inc
loopne
cs
bound
cmp
es
jmp
jbe
xchg
adc
movs
loope
pop
push
and
or
imul
imul
or
xchg
sub
movs
arpl
sub
push
shl
push
idiv
sub
pop
bound
movs
fld
js
mov
js
dec
or
dec
pop
or
pop
mov
pop
bound
inc
cmp
jae
xchg
jno
jmp
test
jg
xchg
pop
(bad)
fldenv
fs
ins
stos
call
movs
arpl
jmp
fidivr
imul
and
lods
ins
outs
movs
pop
pop
loope
fst
out
es
bound
test
dec
aaa
mov
retf
movs
es
jmp
lea
scas
and
lods
pop
lea
scas
and
jo
xor
stos
and
fs
jmp
cs
out
adc
scas
and
scas
and
fs
cmp
loopne
mov
jnp
imul
aaa
sbb
lods
fs
into
xor
cmps
sub
mul
jmp
in
movs
adc
push
cs
outs
pop
lods
sub
mov
pop
jae
or
dec
loopne
(bad)
mov
popf
shl
fsub
xchg
pop
bound
sub
pop
loope
cs
mov
jmp
es
bound
es
(bad)
ja
bound
movs
fld
out
gs
daa
pop
bound
int
loope
fldcw
jle
sub
fs
mov
pop
bound
ss
and
into
adc
cs
cmps
sub
inc
cmp
jae
pushf
pop
add
sbb
das
es
(bad)
(bad)
dec
sahf
fs
or
daa
pop
bound
int
push
(bad)
es
bound
jae
xchg
jle
fs
or
xchg
inc
cs
bound
jno
pop
(bad)
jbe
pop
or
outs
or
sbb
add
pushf
cmps
sub
cs
aaa
shr
inc
sahf
fs
or
xchg
pop
(bad)
(bad)
or
fldcw
dec
sahf
fs
popf
sbb
scas
and
fldcw
inc
sahf
fs
jmp
xor
adc
ss
(bad)
jmp
fimul
sbb
pop
(bad)
out
jnp
cs
(bad)
in
es
jmp
sahf
ucomiss
es
pop
es
xor
mov
jmp
sar
jmp
(bad)
lods
pushf
shr
pop
or
dec
pop
bound
cmps
ja
mov
pop
pop
bound
popa
pop
bound
pop
fisttp
stos
shr
bound
pop
out
stos
fisubr
hlt
pop
pop
bound
jecxz
cs
inc
daa
ja
mov
stos
adc
rcl
(bad)
cmp
pop
bound
fstp
bound
mov
fnstenv
push
bound
movs
fnstenv
xchg
jmp
rcr
ins
scas
pop
out
cmp
out
fdiv
cmps
ret
pushf
mov
jo
fstp
pusha
imul
ficomp
call
xchg
daa
shl
bound
pop
ins
cs
pop
or
dec
pop
popf
pop
sub
pop
es
mov
movs
scas
loope
inc
cs
xchg
pop
and
mov
fldcw
rcl
or
fldcw
rcl
mov
pop
pop
bound
into
xchg
cs
xchg
pop
and
mov
(bad)
daa
push
xchg
and
bound
int
jmp
sar
jmp
rcl
cmp
cmps
ret
dec
xor
cdq
pop
dec
repz
xchg
movs
mov
aas
pop
pusha
cs
pop
popf
pop
sub
pop
es
inc
sbb
es
movs
daa
shr
pop
out
push
rcl
popf
pop
xor
pop
xor
pop
ss
ror
pop
sbb
es
movs
rcl
mov
pop
bound
shr
pop
out
imul
cmps
fcomp
imul
cmp
cmps
ret
pushf
mov
jne
xor
imul
or
(bad)
scas
pop
xchg
cmps
arpl
xchg
dec
(bad)
xchg
daa
(bad)
scas
pop
call
pushf
pop
fisub
pushf
pop
shl
hlt
or
std
xchg
daa
(bad)
scas
pop
xchg
ret
repnz
pop
call
cs
lds
xchg
daa
shl
out
jnp
adc
sub
fdivr
sbb
mov
daa
pop
jmp
movs
xlat
popf
outs
cmps
and
push
out
in
push
setge
xchg
daa
ds
pop
xchg
pop
and
imul
popa
cs
jmp
movs
xlat
popf
outs
cmps
and
push
out
jmp
ficom
out
pop
loop
daa
pop
pop
xlat
pop
pop
sahf
and
popf
shl
pop
cmp
jnp
cli
fisubr
es
(bad)
(bad)
pop
push
cs
xor
jae
fsub
rcr
loope
stos
imul
fnstenv
cs
pop
xchg
pop
bound
movs
xlat
popf
outs
cmps
and
push
out
call
daa
pop
popf
shl
hlt
push
cmps
shl
jo
fidiv
xchg
movs
jae
call
sub
pop
popf
shl
mov
rcr
loope
cmps
in
mov
rcr
xchg
mov
sub
pop
popf
shl
xchg
out
es
jno
inc
stos
in
jae
xchg
jno
aas
and
pop
sahf
lahf
cmp
movs
arpl
jmp
ficom
call
cs
lds
imul
push
es
jmp
arpl
cmps
out
mov
fcomp
mov
cmps
test
movs
fld
cmps
xor
and
clc
arpl
ds
jmp
ret
mov
inc
repz
ret
sar
cmp
in
jmp
movs
repz
jo
jmp
rol
pop
sub
mov
fmul
cmp
movs
pop
pop
fdivr
imul
scas
ficom
out
fild
dec
in
iret
cmp
scas
or
pop
rcr
fstp
push
call
ss
daa
shr
jmp
dec
ficom
sahf
jno
inc
stos
in
jae
xchg
jno
pop
lods
inc
jbe
arpl
and
imul
mov
rcr
sbb
call
jmp
sub
xchg
cwde
pop
aam
das
and
mov
push
sub
fbld
lds
pop
pop
icebp
pop
(bad)
jmp
(bad)
scas
pop
xchg
fld
jmp
(bad)
xchg
daa
rcl
fistp
jnp
cli
xor
xchg
pop
es
lock
inc
inc
sahf
movs
jne
pop
(bad)
and
ins
es
and
sub
popf
cmps
arpl
jmp
inc
js
and
jo
push
rcr
loopne
movs
pop
jecxz
jns
test
out
dec
jmp
ja
xor
lods
inc
outs
xchg
popa
inc
repnz
scas
out
(bad)
scas
fcomp
pop
es
jmp
dec
pop
or
dec
loopne
cs
xor
push
pop
or
dec
pop
mov
push
pop
(bad)
call
(bad)
hlt
outs
xchg
push
bound
sar
jmp
ficom
stos
in
jae
xchg
dec
xor
push
cmp
inc
cmps
fidiv
call
pop
bound
push
adc
mov
pop
bound
pop
popf
jge
xchg
and
fldcw
movs
ds
lods
sbb
jge
xchg
call
fmul
jno
inc
stos
in
jae
xchg
jno
pop
es
call
ficom
loope
and
or
into
cmps
adc
es
daa
fidiv
jb
fs
mov
in
(bad)
jmp
out
mov
imul
mov
sahf
lds
inc
and
mov
dec
outs
bound
scas
fcom
das
les
out
daa
(bad)
das
fist
sbb
dec
or
and
push
movs
ss
cmp
pop
bound
scas
fsubr
(bad)
sar
jmp
ret
pop
out
mov
imul
mov
outs
int
xor
cs
sar
lea
pop
bound
out
cmp
out
fdiv
cmps
ret
cmps
push
cs
pop
mov
push
pop
bound
dec
(bad)
lea
es
pop
push
xchg
pop
(bad)
fstp
bound
pushf
inc
push
xchg
pop
bound
xchg
ins
es
and
fwait
stos
das
es
jmp
call
(bad)
fld
xchg
out
fabs
popf
cmps
in
pop
mov
pop
bound
push
pop
ret
mov
pop
bound
das
popf
js
sahf
xchg
pop
pop
pop
bound
es
jecxz
push
push
bound
dec
loopne
cs
out
fabs
popf
jle
push
mov
or
les
mov
(bad)
or
loopne
lods
loop
pop
rcr
pop
bound
pushf
inc
mov
pop
bound
iret
push
arpl
cmps
out
es
xchg
int
call
stos
pop
xchg
jle
pop
push
sbb
movs
push
loopne
xor
jmp
and
pushf
pop
shl
adc
ss
pop
bound
sbb
ins
es
cs
mov
push
xchg
pop
bound
pop
stos
and
push
sbb
or
and
es
jmp
ficomp
bound
popa
pop
es
cmp
in
movs
imul
bound
into
mov
out
imul
out
pop
(bad)
pushf
mov
scas
clc
fld
es
(bad)
fld
pusha
data16
and
shl
pop
imul
inc
or
out
and
lods
pop
xchg
jle
daa
popf
cmp
pop
bound
es
daa
shr
fist
adc
call
stos
call
mov
xchg
pop
shl
xchg
daa
shr
fist
cmp
sbb
call
jmp
repnz
popf
pop
adc
mov
ins
es
push
and
es
jmp
shl
jmp
(bad)
sub
loope
mov
xchg
mov
jno
inc
stos
in
jae
xchg
jno
inc
push
xor
out
jmp
scas
out
(bad)
scas
fsub
dec
ficomp
jmp
push
and
out
es
bound
std
push
jmp
es
jmp
cmps
call
mov
out
dec
imul
call
xchg
es
and
and
es
pop
popa
das
jbe
repnz
add
bound
xor
cs
ret
pop
(bad)
(bad)
mov
fist
and
jp
cs
out
(bad)
scas
fsub
push
ficomp
push
jp
dec
ret
mov
mov
call
loope
ficomp
push
cmc
int
jmp
pop
out
jmp
pop
in
pop
sub
or
pushw
sbb
sbb
sub
call
and
arpl
loop
push
pop
ins
stos
adc
popf
shl
bound
pop
cs
mov
pop
mov
dec
pop
(bad)
lds
call
jne
inc
and
inc
es
cs
or
mov
outs
bound
scas
pop
call
dec
mov
bound
movs
xlat
popf
outs
cmps
and
push
out
in
dec
pop
out
arpl
dec
xor
push
pop
popf
pop
fdivp
icebp
pop
es
or
stos
pop
xchg
jle
sbb
(bad)
push
out
push
push
pop
bound
es
(bad)
into
or
jne
fdiv
cmps
ret
cmps
into
cs
mov
dec
pop
bound
dec
fcos
or
cmps
(bad)
cs
rcr
loope
cs
sti
sub
inc
es
jmp
shl
pushf
shr
loopne
(bad)
mov
push
mov
cs
mov
inc
div
mov
mov
sahf
mov
and
bound
call
and
popf
shl
add
es
push
loope
in
add
stos
(bad)
loopne
shl
dec
push
loopne
scas
pop
sahf
daa
out
shl
(bad)
dec
lds
movs
mov
dec
jmp
cs
bound
jb
bound
das
fild
jl
bound
stos
call
mov
xchg
pop
shl
jmp
ficom
mov
and
ja
mov
popf
fwait
out
pushf
ror
cmp
es
fsub
rcr
xchg
out
fabs
popf
lea
and
cmps
fsubr
aaa
es
out
stos
cwde
loopne
shl
dec
push
loopne
push
scas
pop
sahf
daa
out
out
and
bound
mov
bound
mov
lahf
(bad)
fabs
popf
sub
or
dec
inc
sub
popf
jle
(bad)
xchg
rcr
pushf
cmps
and
lods
popf
rcr
xchg
mov
sbb
popf
cmps
in
aad
xchg
loopne
rcr
loopne
cs
adc
bound
xchg
call
stos
call
jbe
and
into
das
adc
es
cmps
and
test
pushf
fabs
popf
call
addr16
bound
fstp
loope
dec
stos
and
es
call
add
stos
mov
pushf
shr
retf
es
mov
mov
loopne
lods
loop
pop
rcr
pop
bound
jne
inc
call
mov
xor
shl
loopne
cs
adc
pushf
shl
pop
bound
dec
push
or
les
inc
jbe
and
into
adc
sbb
popf
cs
ja
int3
fs
out
xchg
fneni(8087
pushf
shl
xchg
fcmovnu
loopne
jmp
push
and
call
es
or
dec
mov
ins
es
mov
mov
shl
popf
lods
loop
pop
rcr
pop
bound
jne
inc
lahf
std
and
stos
mov
xor
shl
loopne
cs
adc
pushf
shl
pop
bound
cmps
in
nop
push
es
or
dec
mov
xor
shl
popf
lods
loop
pop
rcr
pop
bound
jne
inc
lahf
std
and
stos
mov
xor
shl
loopne
cs
adc
pushf
shl
pop
bound
dec
push
or
jbe
and
into
pop
xchg
rcr
pushf
cmps
and
loopne
cs
stos
popf
rcr
push
bound
es
inc
movs
std
and
dec
dec
ret
idiv
fchs
loope
sub
popf
shl
pop
push
and
call
es
or
dec
sub
xor
shl
popf
lods
loop
pop
rcr
pop
bound
jne
inc
lahf
std
and
stos
mov
xor
shl
loopne
cs
add
das
dec
outs
sub
rcr
loope
jns
mov
cmps
and
loopne
cs
stos
popf
rcr
push
bound
es
mov
pop
bound
fstp
pop
cmp
sbb
call
popf
rcr
dec
mov
fsub
popf
ja
push
movs
sub
and
daa
mov
ror
bound
in
out
fabs
popf
cs
xor
mov
mov
(bad)
stos
cli
loopne
shl
pop
shl
jmp
ficom
mov
cs
out
fabs
popf
jle
call
push
loopne
push
scas
pop
sahf
cmps
(bad)
ss
shl
adc
cli
and
bound
fstp
jmp
pop
(bad)
jmp
movs
mov
bound
fstp
ins
mov
cmps
in
jmp
jmp
(bad)
(bad)
jmp
fstp
bound
es
out
fabs
popf
jle
call
mov
dec
jmp
scas
in
pop
cs
out
fabs
popf
jle
pop
mov
loope
jle
daa
popf
cmp
pop
bound
es
daa
shr
fild
jne
bound
stos
call
mov
dec
jmp
cs
jmp
ficom
mov
and
xchg
out
fabs
popf
jle
call
push
loopne
push
scas
pop
sahf
daa
out
dec
(bad)
hlt
sbb
cs
call
mov
dec
jmp
cmps
arpl
jmp
(bad)
jmp
movs
bound
sub
sar
jmp
xchg
loopne
shr
loopne
shl
out
fabs
popf
jle
daa
popf
jns
xchg
daa
shr
fild
push
sbb
cs
inc
add
es
popf
rcr
xchg
mov
rcr
pop
popf
fsubp
pushf
ror
ret
xchg
out
fabs
popf
jle
jae
cs
cmps
and
loopne
(bad)
xor
bound
dec
pop
mov
dec
pop
bound
in
xlat
ret
popf
mov
(bad)
dec
les
mov
(bad)
push
dec
pop
bound
mov
sbb
popf
rcr
xchg
out
fabs
popf
mov
(bad)
fwait
mov
pushf
shl
cmps
cs
xchg
mov
loopne
ret
test
aad
jmp
shl
pop
shl
jmp
ficomp
bound
out
out
and
bound
fstp
out
stos
mov
pushf
shl
loop
fs
jmp
shl
pop
shl
and
es
jmp
ficomp
bound
out
out
and
bound
(bad)
stos
mov
pushf
shl
pop
shl
jmp
fisub
xchg
int
call
movs
bound
sub
pop
loope
mov
pushf
shl
test
into
xor
cs
jmp
sar
jmp
jp
pushf
shr
outs
popf
rcr
sbb
popf
rcr
xchg
out
fabs
popf
mov
(bad)
fwait
push
loopne
shl
cmps
cs
xchg
mov
loopne
ret
test
aad
jmp
shl
pop
shl
jmp
ficomp
bound
out
out
daa
pop
bound
fstp
out
stos
scas
loopne
shl
adc
fs
jmp
shl
pop
shl
and
es
jmp
ficom
mov
cs
fbld
sub
out
stos
inc
loopne
shl
(bad)
xchg
jmp
rcr
xchg
out
fabs
popf
jle
daa
popf
jns
xchg
daa
rcr
call
popf
rcr
xchg
mov
and
jns
xchg
inc
loopne
shr
adc
jecxz
pop
bound
fstp
ins
stos
out
bound
stos
call
xchg
ja
rcr
idiv
fstp
loopne
jmp
ss
loopne
fucom
cmp
cmps
mov
bound
mov
fsub
fcompp
loope
das
es
bound
xlat
sbb
popf
mov
(bad)
jae
pop
bound
(bad)
jl
pop
bound
(bad)
jmp
stos
xchg
lahf
rcr
loopne
out
pop
loop
daa
pop
pop
xlat
scas
call
jb
lahf
shr
loopne
movs
mov
xchg
out
fneni(8087
pushf
shl
test
jmp
popf
rcr
dec
or
pop
bound
(bad)
fmul
lods
loop
jmp
daa
(bad)
jmp
movs
mov
bound
xchg
out
fabs
popf
jle
das
popf
js
cmps
cli
dec
es
xchg
int
call
fstp
jmp
rcr
call
and
popf
shr
loopne
movs
push
loopne
lods
call
push
loopne
fstp
jmp
rcr
call
cli
jecxz
shl
loopne
pop
and
out
fabs
popf
cs
(bad)
arpl
scas
fsubr
stos
into
loopne
shl
push
shl
loope
mul
pushf
shl
imul
iret
popf
rcr
dec
jmp
xchg
sub
cs
jmp
mov
pushf
shr
loopne
shl
imul
retf
popf
rcr
dec
jmp
movs
mov
dec
jmp
movs
mov
dec
jmp
xchg
xor
bound
sar
jmp
mov
pushf
shr
loopne
shl
push
shl
mov
shl
popf
jno
inc
stos
in
jae
xchg
out
fs
or
pop
bound
es
push
cmps
add
bound
es
mov
jne
xor
imul
dec
cmp
xchg
leave
scas
pop
and
fsub
shl
pop
bound
cmps
pop
xchg
pop
bound
sbb
or
es
cmps
sub
jbe
rcr
pushf
pop
scas
xchg
pop
bound
push
ror
es
mov
push
ret
rcr
loopne
ror
cmp
cs
daa
repnz
pop
(bad)
loope
mov
scas
dec
(bad)
std
jae
pop
mov
fchs
popf
jno
inc
rep
arpl
push
lea
pop
bound
mov
mov
retf
ja
xor
jnp
out
(bad)
scas
fmul
scas
xchg
pop
bound
bound
cmp
cs
pop
or
into
imul
xchg
movs
js
repz
cs
popa
add
scas
pop
sahf
cmps
loope
cmp
in
jmp
movs
repz
jo
aas
es
inc
sbb
pop
out
xchg
mov
ins
es
mov
outs
es
fisub
(bad)
xchg
daa
shr
and
es
inc
push
mov
cmp
popw
(bad)
jmp
sbb
es
mov
jmp
sbb
es
xchg
push
mov
sbb
mov
pop
imul
xchg
in
es
pop
shl
pop
bound
test
loopne
stos
mov
and
cmps
adc
addr16
and
dec
sbb
push
call
inc
and
sbb
cmps
arpl
arpl
push
and
iret
push
pusha
cs
outs
ss
sbb
mov
jmp
bound
push
adc
ret
bound
and
std
outs
es
shl
daa
std
outs
es
mov
aaa
sbb
pop
mov
pop
mov
and
(bad)
and
ins
es
bound
push
sbb
iret
pop
popa
cs
push
and
pop
xchg
iret
scas
pop
xchg
cmps
out
outs
ss
pop
sti
outs
es
mov
fchs
popf
fsub
pop
std
outs
sbb
sub
fisttp
scas
out
pop
cs
outs
ss
adc
ss
sbb
iret
in
pusha
cs
outs
ss
xlat
arpl
scas
faddp
outs
mov
mov
pushf
rcr
jmp
bound
push
sbb
iret
fldenv
es
outs
ss
fiadd
es
movs
sub
and
and
bound
iret
stos
pushf
rcr
jmp
bound
sbb
iret
test
es
stos
pop
out
xchg
mov
outs
es
and
and
bound
iret
xchg
pushf
rcr
loopne
pop
xchg
pop
(bad)
and
std
outs
es
stos
pop
out
xchg
mov
outs
es
mov
pop
bound
daa
sbb
addr16
jmp
daa
xlat
jmp
cmps
adc
addr16
and
retf
pop
bound
xchg
jmp
pushf
mov
mov
pop
mov
es
bound
daa
sbb
popw
mov
es
bound
daa
sbb
addr16
mov
imul
es
addr16
mov
mov
cs
mov
es
xchg
iret
scas
pop
mov
mov
(bad)
bound
es
cmps
adc
addr16
inc
xchg
inc
sbb
cs
jmp
into
xchg
mov
test
ins
es
sub
and
das
fistp
jp
out
push
and
inc
stos
mov
and
sbb
and
jmp
and
aam
es
outs
ss
sub
cs
ret
ret
bound
and
std
outs
es
inc
shl
daa
std
outs
es
mov
scas
sub
std
outs
es
mov
pop
fisttp
cmps
out
ss
cmps
out
addr16
xchg
pop
(bad)
fsub
pop
std
outs
es
ins
stos
loope
bound
scas
out
and
es
jmp
sar
jmp
(bad)
xchg
mov
(bad)
fs
inc
out
es
bound
and
ins
es
sub
pop
xchg
and
pop
bound
sub
loop
rcr
sub
sbb
popw
fisub
pop
pop
(bad)
fld
xchg
daa
ret
ins
cwde
arpl
pop
scas
es
bound
mov
arpl
cs
and
movs
and
mov
pop
pusha
pop
xor
cs
pop
jmp
addr16
bound
sbb
or
pop
loop
out
push
stos
cmps
out
xchg
push
mov
sbb
into
and
xchg
sub
loop
rcr
pop
sub
pop
lods
add
repnz
es
mov
scas
out
and
xor
repnz
es
bound
addr16
popf
sub
(bad)
and
xchg
repnz
es
pop
std
sahf
xchg
push
sbb
bound
es
mov
scas
out
and
xor
repnz
es
bound
fs
popf
sub
(bad)
and
xchg
std
outs
es
pop
std
loopne
pop
xchg
pop
bound
and
and
and
bound
(bad)
mov
jle
dec
fdiv
mov
stc
jmp
ficom
(bad)
ins
es
xchg
fs
mov
pop
bound
fs
xor
test
ins
es
xchg
fs
xor
test
std
outs
cmps
pop
jl
pop
xchg
enter
cmps
loopne
pop
xchg
fs
xor
cs
jmp
ja
xchg
fs
xor
test
std
outs
es
xchg
fs
xor
test
ins
es
cmp
in
jmp
movs
repz
dec
fldenv
jle
cmps
(bad)
push
mov
pop
xchg
pop
bound
movs
and
stos
pop
retf
or
mov
imul
bound
es
mov
lods
inc
repz
(bad)
fsub
fisub
bound
movs
jp
cmps
hlt
push
cmp
pop
loope
ficomp
popf
sub
and
movs
jp
cs
lds
cmps
arpl
mov
loope
mov
jmp
es
out
sub
and
scas
pop
adc
imul
fsub
sahf
and
bound
cmps
fsub
xor
pop
movs
imul
pop
xchg
es
pop
xchg
stos
push
xchg
and
bound
aad
out
imul
or
sbb
arpl
xor
xor
jmp
sahf
mov
mov
es
daa
mov
bound
inc
and
pop
retf
add
es
daa
mov
pop
mov
push
mov
and
ins
es
rcl
or
dec
pop
or
dec
sbb
dec
es
jecxz
xlat
inc
bound
fldcw
(bad)
inc
fstp
push
call
popf
pop
xchg
xchg
daa
retf
ja
mov
sti
mov
cmps
in
test
es
cmp
jnp
cli
loope
cmp
daa
rcl
push
or
in
mov
imul
daa
fisubr
out
dec
rcr
push
cld
scas
dec
mov
dec
pop
or
stos
pop
call
push
inc
es
daa
fidiv
popf
rcl
popf
cmp
and
lods
pop
xchg
lds
cmps
mul
pop
xchg
dec
ficom
sahf
out
dec
jmp
jno
sub
push
jecxz
lahf
jbe
fstp
push
call
popf
shl
paddw
inc
aas
in
jae
xchg
jno
pop
lods
inc
outs
shl
imul
es
and
pop
bound
push
sub
bound
arpl
fstp
bound
push
aaa
ins
cwde
bound
pusha
adc
pop
bound
push
add
bound
popa
adc
pop
bound
push
(bad)
cwde
bound
adc
pop
bound
sub
jmp
sub
scas
or
arpl
bound
nop
pop
popf
and
pop
bound
nop
or
adc
mov
fcom
cwde
xor
pop
in
sub
jmp
movs
cmc
pusha
and
push
cmps
fcomp
cmp
fst
inc
scas
out
(bad)
and
aam
and
mov
es
pop
jo
test
ins
mov
fs
xor
ja
bound
sub
jbe
xor
mov
fs
xor
dec
aas
cs
daa
(bad)
movs
xlat
popf
movs
jae
out
jp
sbb
movs
cmc
popw
neg
(bad)
movs
mul
arpl
jmp
sub
into
sbb
jnp
xchg
jbe
daa
pop
bound
int
ins
cwde
arpl
or
xor
and
imul
loopne
(bad)
adc
popf
rcr
sbb
call
pop
jp
out
scas
sbb
pop
ins
xchg
call
sbb
outs
scas
out
(bad)
and
push
cmps
ficomp
sub
ja
cmp
mov
imul
push
or
mul
daa
lods
int3
sbb
out
and
bound
cmps
and
jp
(bad)
outs
lahf
pop
sub
cmps
ficomp
sub
dec
jmp
movs
mul
sbb
pusha
pop
pusha
xchg
call
sbb
es
bound
and
add
pxor
sbb
movs
cmc
popw
neg
mov
imul
daa
ds
pop
popa
sub
out
(bad)
and
das
es
bound
je
call
push
jmp
movs
mul
sbb
arpl
xchg
call
push
pop
sbb
and
aam
and
pop
pop
sub
pushf
cs
push
sub
loopne
cs
mov
jb
jb
addr16
fcomp
das
es
bound
loopne
sub
pop
ins
lods
xchg
loop
sar
cmp
in
jmp
movs
rep
jge
dec
popf
sub
and
lods
push
lds
cs
lds
lahf
pop
adc
push
imul
loopne
sub
pusha
xchg
daa
and
mul
es
pop
(bad)
test
sub
addr16
xchg
pop
bound
nop
dec
jb
les
rep
es
jle
fwait
xchg
rcr
inc
popf
sub
and
sub
bound
imul
pop
bound
push
aas
loope
ficomp
mov
scas
(bad)
popa
imul
jbe
scas
or
jecxz
sub
jecxz
(bad)
int
call
xor
pop
jmp
ficom
mov
fcomp
mov
fisubr
dec
xchg
cmps
ss
sub
sbb
movs
movs
xlat
popf
cmps
aam
mov
das
cld
push
mov
into
sbb
imul
sbb
xor
xchg
aaa
(bad)
scas
setge
push
stos
and
movs
xlat
popf
pop
ficom
mov
into
sbb
imul
gs
scas
sbb
es
bound
adc
jnp
fiadd
jbe
pop
(bad)
(bad)
push
jecxz
shl
inc
stos
in
jae
xchg
into
fstp
cs
xor
into
loope
rcr
(bad)
int
loopne
cs
scas
cmp
and
es
adc
loopne
xor
mov
pop
loope
push
stos
and
and
popf
cs
push
ins
cwde
mov
lahf
pop
sub
and
daa
imul
cld
mov
cmp
leave
loopne
scas
sbb
add
and
cmp
nop
mov
mov
dec
aad
mov
fs
xor
xchg
lods
mov
lock
jmp
mov
sti
outs
es
mov
dec
aad
mov
fs
xor
les
popf
rcr
sub
mov
inc
bound
lods
mov
lock
jmp
xor
rep
es
out
leave
loopne
das
sub
popf
inc
out
loop
and
fldcw
ins
stos
imul
shl
call
nop
mov
int3
and
pop
cmp
mov
cs
mov
pop
bound
nop
mov
int3
and
jbe
jbe
and
scas
mov
sub
and
cmps
mov
bound
mov
idiv
stos
inc
popf
rcr
sbb
call
popf
shr
fiadd
cs
bound
fldcw
popf
lds
ja
ds
xor
add
scas
fabs
fsub
fiadd
leave
loopne
imul
lock
rcl
out
stos
mov
div
sub
and
movs
mov
(bad)
(bad)
stos
pop
bound
dec
loopne
cs
ret
popf
rcl
idiv
fchs
loope
sub
push
dec
movs
mov
bound
fxtract
and
fst
mov
shr
sbb
fwait
out
rcr
push
imul
loopne
sub
scas
(bad)
addr16
bound
fxtract
sub
in
jb
es
cdq
cs
pop
bound
loopne
ror
pop
cwde
rcr
inc
jecxz
retf
shl
pop
arpl
lods
call
fstp
bound
mov
adc
jae
loopne
shl
imul
es
idiv
loopne
(bad)
pop
inc
bound
iret
pop
popa
cs
mov
out
pusha
movs
xor
inc
mov
shl
popf
shl
loopne
movs
mov
(bad)
rcr
fiadd
(bad)
and
sub
jmp
xor
mov
fcmove
loopne
out
les
pusha
out
(bad)
sbb
test
sub
popf
stos
shl
popf
shl
loopne
sub
pop
adc
fs
loop
(bad)
shl
push
inc
js
and
into
mov
out
clc
loopne
cmps
in
jbe
sbb
bound
scas
mov
lock
loope
pop
sbb
cmps
mov
xchg
out
clc
loopne
movs
mov
mov
xor
rcr
fchs
jmp
shl
rcr
fchs
jmp
shr
loopne
xor
loopne
rcl
idiv
jbe
pop
jmp
rcr
call
lods
call
xchg
rcr
fchs
loop
(bad)
shl
push
inc
es
fs
dec
pop
jmp
shl
cmc
outs
jl
mov
icebp
fchs
mov
and
push
(bad)
mov
mov
shl
imul
es
mov
out
pusha
movs
stos
ret
mov
cli
stc
loopne
cmps
sub
push
mov
mov
(bad)
rcr
fiadd
push
mov
bound
fnstenv
ds
xor
adc
cs
call
sub
loop
cs
ins
stos
sbb
bound
lods
call
and
and
fwait
pop
das
es
mov
mov
xchg
jbe
daa
pop
bound
movs
cmc
popf
mov
mov
(bad)
(bad)
clc
loopne
movs
mov
icebp
fchs
movs
xchg
sti
mov
data16
daa
bound
xchg
xchg
lods
into
sbb
jl
(bad)
pushf
mov
xor
loop
es
cmps
(bad)
pushf
mov
cmps
daa
bound
push
mov
fstp
push
call
mov
sub
stos
ja
cld
loopne
scas
mov
push
ins
cwde
and
mov
es
pop
cmp
pop
bound
push
sbb
stos
ret
ror
popf
jmp
int
jmp
shl
out
fisubr
(bad)
stc
loopne
pop
iret
lahf
iret
(bad)
clc
loopne
das
sub
popf
out
les
mov
cmps
and
es
bound
push
aaa
loop
sbb
pop
xor
pop
bound
push
or
adc
sbb
es
pop
and
and
es
bound
push
sbb
vmovss
stos
test
popf
shr
fistp
das
push
add
mov
dec
popf
fwait
cli
rcr
fchs
mov
loopne
lods
loop
loop
(bad)
shl
imul
sub
rcr
pop
jmp
shl
std
pusha
cmps
(bad)
fimul
sub
xor
mov
aas
fstp
jecxz
shl
popf
shl
sbb
push
iret
popf
sub
and
iret
xor
(bad)
loopne
das
sub
popf
inc
out
loop
and
fldcw
ins
stos
or
popf
sar
cmp
in
jmp
movs
repz
dec
jmp
(bad)
mov
sub
sahf
or
es
scas
cmps
arpl
movs
imul
out
push
rcl
xchg
aaa
pop
bound
aad
jmp
pop
in
aaa
(bad)
stos
bound
ins
cmps
ins
cs
xchg
mov
mov
ins
cmps
gs
xchg
mov
pop
jmp
pop
in
aaa
(bad)
cmps
pop
popf
das
loopne
pushf
cs
call
rcr
ja
push
sbb
imul
mov
pop
pushf
das
cmps
bound
fisubr
daa
shl
test
es
call
rcr
ja
sub
loop
fstp
ins
cwde
gs
pop
out
es
bound
cmps
es
pop
xchg
dec
ficom
call
pop
bound
movs
out
pop
and
aam
daa
xchg
mov
aam
imul
sbb
daa
movs
out
push
and
aam
daa
jmp
outs
lods
(bad)
sbb
(bad)
and
scas
arpl
popa
and
pop
bound
sbb
data16
arpl
scas
arpl
dec
adc
pop
ins
cwde
and
pop
pop
and
pop
arpl
push
sbb
imul
loop
fistp
loop
fist
ins
lods
je
popf
shl
pop
sahf
cs
call
rcr
ja
push
sbb
imul
mov
pop
sahf
das
cmps
bound
imul
daa
out
pop
cmps
fld
jmp
out
daa
(bad)
sub
bound
push
sbb
imul
ins
cwde
arpl
cmp
jnp
cli
xor
dec
jmp
ds
sub
jne
pop
(bad)
fld
xchg
daa
shr
pop
bound
pop
mov
je
bound
data16
pop
das
es
cmps
loope
ins
scas
sbb
ds
and
sbb
pop
mov
imul
jnp
cli
fisub
push
pop
(bad)
(bad)
das
dec
bound
jo
fld
test
jmp
fcmovb
popf
shr
dec
popf
pop
cs
out
(bad)
loopne
jle
pop
xor
sub
pop
xchg
leave
scas
call
stos
call
sub
bound
movs
(bad)
rcl
movs
jno
(bad)
mov
jns
mov
and
xchg
leave
scas
pop
sahf
cmps
loope
bound
pop
es
pop
mov
bound
fdiv
cmps
ret
pushf
mov
jne
xor
or
pop
or
dec
lahf
bound
es
inc
es
inc
es
bound
xlat
dec
bound
scas
fabs
rcr
push
lods
pop
adc
and
scas
sar
cs
js
ret
xor
es
mov
inc
idiv
jl
pop
jmp
fisub
xchg
leave
scas
pop
xchg
cmps
loope
bound
cs
daa
and
xchg
daa
(bad)
scas
pop
xchg
rcl
xor
push
jecxz
(bad)
mov
neg
jg
pop
jmp
pop
out
jmp
js
stos
in
jae
xchg
dec
xor
cdq
jnp
in
sahf
(bad)
lds
bound
loop
es
or
dec
pop
or
dec
pop
bound
out
pop
es
push
xor
es
movs
lods
fsub
pop
sub
fisttp
push
pop
or
pop
or
jo
xor
jmp
lods
out
loopne
scas
sbb
bound
xchg
mov
shl
pop
sub
mov
pop
bound
daa
shl
pusha
inc
(bad)
std
and
jo
jmp
(bad)
cmovle
sahf
int
cs
jmp
xchg
daa
pop
bound
jns
cmp
in
jmp
ja
xor
cdq
xchg
or
sbb
bound
loop
es
or
dec
pop
or
dec
pop
bound
out
pop
es
scas
xor
es
movs
cmps
ficomp
call
sbb
int
or
pop
or
jo
aad
es
or
stos
pop
sahf
jle
push
rcl
xor
aaa
dec
bound
jo
int
es
ficom
push
pop
(bad)
fld
xchg
daa
(bad)
scas
fcom
inc
cmp
in
jmp
movs
repz
jo
jmp
shr
and
cmps
push
into
sub
bound
std
xchg
mov
sub
push
mov
push
ror
sub
int3
fs
mov
pop
bound
pop
fucomp
jnp
ja
int3
fs
mov
pop
bound
int
ins
cwde
and
xor
std
and
into
add
cs
cmps
es
and
push
ror
adc
adc
pop
pop
sub
sbb
and
and
xor
push
std
and
into
jmp
cs
cmps
lods
pop
sahf
cmps
arpl
jmp
shr
pop
(bad)
scas
pop
xchg
cmps
arpl
cmp
jnp
cli
loope
ss
xor
lods
inc
push
push
adc
push
push
xchg
daa
shr
jmp
dec
ficom
sahf
inc
sbb
mov
cs
push
ror
or
cwde
and
inc
adc
and
into
mov
cs
cmps
es
es
pop
iret
ja
int3
fs
mov
jb
cmp
pop
bound
inc
stos
in
jae
xchg
jno
imul
pop
(bad)
sub
(bad)
fld
xchg
daa
repnz
fadd
arpl
arpl
movs
jp
movs
jp
movs
jp
cs
bound
ins
cmps
popa
cs
xchg
mov
pop
loop
ss
pop
sub
daa
int3
ds
jmp
outs
and
daa
ror
cmp
not
cld
jmp
(bad)
xchg
mov
and
fistp
repz
fstp
mov
jb
das
cmps
bound
push
push
pop
(bad)
fld
xchg
daa
imul
adc
outs
and
daa
ror
cmp
cwde
arpl
ins
cwde
bound
xchg
lods
out
arpl
lahf
pop
shl
lods
dec
mul
(bad)
cs
shl
lahf
pop
shl
push
xchg
mov
cld
jmp
repnz
mov
cdq
es
aaa
sub
mov
and
frstor
ret
(bad)
scas
xlat
dec
imul
aad
(bad)
call
arpl
sahf
mov
movs
arpl
ins
cdq
sbb
jnp
adc
jl
ss
xchg
dec
and
frstor
ret
and
test
lods
dec
push
xchg
dec
push
neg
daa
retf
xchg
inc
stos
in
inc
(bad)
repnz
ss
bound
es
(bad)
stos
dec
mov
mov
push
add
pop
repnz
mov
repnz
mov
and
data16
repnz
mov
repnz
mov
fisubr
xchg
pop
bound
es
fistp
bound
push
mov
mov
push
xor
pop
repnz
and
repnz
mov
repnz
mov
add
shl
jg
mov
into
pop
bound
es
repnz
mov
and
mov
xor
popw
repnz
ds
repnz
mov
repnz
jbe
repnz
mov
repnz
in
repnz
mov
repnz
retf
mov
mov
repnz
push
pop
repnz
mov
repnz
mov
repnz
aaa
loop
cs
bound
pop
bound
stos
dec
cs
pop
(bad)
inc
pop
bound
bound
push
in
inc
(bad)
repnz
ss
bound
mov
cmp
mov
mov
push
jl
(bad)
repnz
es
jmp
mov
repnz
mov
push
cld
mov
repnz
mov
jmp
mov
repnz
mov
repz
jle
repnz
sub
repnz
mov
repnz
mov
fisubr
xchg
pop
bound
mov
push
jl
(bad)
repnz
es
jmp
mov
repnz
mov
push
cld
mov
repnz
mov
jmp
mov
repnz
mov
repz
jle
repnz
bound
push
mov
mov
arpl
mov
repnz
mov
add
inc
neg
fneni(8087
mov
lods
retf
js
xchg
aas
lods
pop
outs
dec
scas
pop
outs
jmp
movs
pusha
jecxz
fimul
jne
es
movs
arpl
jmp
retf
(bad)
sar
cmps
arpl
jmp
fidivr
imul
(bad)
mov
(bad)
arpl
jbe
sub
cmps
in
aaa
aad
pop
sahf
cmps
in
mov
push
fstp
pop
sub
pop
cwde
cs
mov
imul
fcmovbe
pop
pop
bound
sub
dec
(bad)
mov
xchg
daa
into
mov
xchg
aaa
aam
sbb
ins
jbe
pop
push
xchg
outs
sub
cwde
pop
in
xchg
jb
nop
sbb
pop
bound
push
por
daa
out
and
nop
(bad)
cwde
imul
in
pminub
inc
jecxz
imul
daa
ror
mov
arpl
xor
jae
bound
sub
mov
imul
aam
fcomp
mov
into
das
sub
mov
(bad)
push
xchg
jle
aas
sub
or
mov
call
(bad)
adc
imul
pop
call
fchs
cmp
jnp
cli
loope
push
dec
xor
cwde
call
xchg
fld
xchg
daa
repnz
(bad)
xchg
sub
popa
out
ja
mov
out
fcom
mov
cmps
test
scas
dec
lea
arpl
jmp
movs
and
pop
and
mov
cs
pop
cmp
push
pop
out
shl
push
mov
cs
push
leave
fiadd
sbb
retf
pop
jmp
imul
test
sub
fwait
pop
bound
fwait
pop
bound
inc
sub
cmps
pop
xor
pop
xchg
enter
cmps
loopne
outs
inc
es
mov
ins
es
(bad)
jbe
and
pop
loope
ds
jmp
(bad)
jne
(bad)
sbb
shr
pop
push
ds
out
arpl
scas
fabs
imul
ret
out
pop
bound
es
rcl
cli
fwait
pop
bound
scas
out
arpl
scas
fldpi
mul
ret
fild
jb
arpl
data16
repnz
mov
imul
mov
cs
pop
mov
rcl
lods
bound
in
sub
imul
and
hlt
imul
cmps
arpl
mov
imul
movs
pop
shr
fst
mov
cmps
sbb
fild
mov
cmp
bound
ficom
and
pop
xor
push
push
bound
movs
fld
out
mov
xchg
lds
xchg
fld
xchg
daa
out
fldpi
mul
iret
fild
jb
arpl
data16
out
mov
scas
xchg
fs
pop
imul
mov
repnz
xchg
lds
xchg
xchg
das
(bad)
xchg
movs
cmps
(bad)
sbb
fisubr
pop
push
movs
pop
xchg
sub
sbb
neg
out
adc
scas
shl
mov
aaa
shl
jmp
ins
es
outs
(bad)
fwait
pop
bound
and
pop
ins
cwde
jae
mov
lods
or
retf
bound
es
outs
adc
out
xchg
enter
cmps
loopne
pop
shl
lods
dec
idiv
xchg
pop
mov
(bad)
popa
sub
mov
sbb
fchs
loope
cs
inc
es
inc
es
inc
es
bound
push
(bad)
stos
push
bound
scas
pop
xchg
daa
(bad)
jbe
pop
into
jne
pop
retf
sub
es
mov
push
sti
mov
into
push
sub
es
out
dec
jmp
cmps
repz
es
xor
mov
jecxz
add
cmps
sbb
call
out
xor
(bad)
and
scas
out
push
fisubr
pop
bound
xchg
mov
sub
out
pop
in
xchg
mov
scas
fsub
jmp
mov
pushf
rcr
fldenv
shl
hlt
dec
(bad)
or
sub
das
dec
ss
jmp
shl
mov
xor
aad
(bad)
jg
mov
mov
fstp
daa
rcr
pop
adc
loopne
gs
loopne
(bad)
xlat
push
bound
scas
fst
mov
sub
stos
and
popf
rcl
xchg
fld
xchg
out
fneni(8087
popf
cmps
loopne
out
fsub
popf
jle
pop
ins
es
iret
fs
out
stos
fucom
popf
shl
test
cs
pop
or
pop
or
dec
pop
bound
xchg
out
fneni(8087
popf
jle
ja
cs
out
fneni(8087
popf
cmps
(bad)
ss
cmps
loopne
pop
es
xchg
scas
ins
es
mov
es
out
fneni(8087
popf
jle
push
js
es
xchg
fs
popf
fwait
shl
popf
ror
fild
cs
fcmovu
loopne
(bad)
jg
bound
fstp
push
call
and
stos
call
jae
bound
scas
out
dec
fisubr
loop
shl
mov
stos
fabs
popf
shl
bound
es
mov
pop
(bad)
and
ins
es
iret
fs
or
(bad)
pop
bound
(bad)
cs
loop
add
ja
iret
fs
or
pop
bound
pop
bound
es
cmps
jp
jmp
cmp
jnp
cli
xor
dec
jmp
pop
int3
pop
jecxz
xchg
push
bound
fstp
push
call
bound
movs
jp
cs
pop
call
pop
or
adc
es
inc
es
and
push
(bad)
jecxz
bound
scas
out
(bad)
scas
fsubr
fbld
and
push
out
imul
pop
(bad)
jo
arpl
pop
fldcw
(bad)
jmp
bound
fldcw
mov
stos
in
jae
xchg
mov
jmp
sar
jmp
ficom
mov
daa
dec
popf
pop
xor
pop
fldcw
rcl
mov
es
bound
in
jmp
jno
clc
je
ds
inc
aaa
bound
dec
sbb
sub
push
rcl
popf
pop
mul
pop
loope
ds
aas
in
jae
xchg
dec
(bad)
das
and
rcl
daa
(bad)
jbe
daa
shl
bound
pop
pusha
cs
pop
or
dec
pop
popf
pop
sub
pop
es
pop
sub
es
mov
lds
loopne
fldcw
rcl
or
fldcw
rcl
mov
pop
bound
out
outs
rcl
mov
outs
pop
bound
out
jae
ficomp
call
iret
sub
es
jnp
cli
loope
ss
xor
imul
jmp
mov
jmp
daa
out
jmp
fisubr
call
ja
cs
or
fldcw
rcl
mov
imul
hlt
pop
mov
dec
pop
or
fldcw
rcl
mov
imul
jecxz
dec
outs
pop
bound
out
jne
push
jecxz
je
pop
bound
xchg
pop
jp
das
xchg
call
fdivr
cmps
ret
dec
xor
mov
jmp
daa
out
jmp
fs
bound
test
(bad)
outs
pop
bound
scas
pop
call
mov
pop
imul
dec
pop
out
mov
pop
or
es
bound
bound
add
fs
mov
pop
bound
cmps
fdivr
es
imul
sbb
int
popf
sbb
enter
out
and
es
daa
ror
sbb
jmp
jns
stos
in
lahf
add
mov
xchg
and
mov
es
xor
in
jmp
ja
xor
lods
push
xchg
sub
fdiv
pop
jmp
scas
sbb
outs
pop
pop
xchg
daa
and
xchg
nop
das
in
popf
pop
mul
es
loope
sub
jmp
sub
xchg
call
(bad)
dec
imul
and
in
pop
and
imul
and
cmp
fs
or
imul
bound
scas
(bad)
xchg
int
pop
sahf
cmps
in
daa
and
and
jbe
sub
pop
jmp
scas
(bad)
arpl
scas
fsubr
push
add
fisub
push
mov
bound
scas
(bad)
xchg
int
pop
sahf
cmps
in
daa
and
out
and
fisttp
int
pop
sahf
cmps
in
cmp
out
fdiv
cmps
ret
pushf
mov
jne
xor
imul
push
dec
push
sahf
daa
fidiv
xor
jne
lea
pop
jmp
ficom
movs
es
and
cmp
cs
pop
xchg
movs
arpl
jmp
paddusw
jnp
cs
lds
adc
sub
fist
and
test
adc
push
out
retf
inc
fsub
shl
pop
mov
test
shr
test
(bad)
pop
bound
movs
fld
js
out
xor
pop
bound
std
mov
ret
loope
inc
dec
jmp
je
pop
bound
or
cmp
daa
shr
test
rcr
xchg
daa
fcmove
adc
mov
fidivr
cmp
in
jmp
sahf
push
bound
imul
es
xor
movs
enter
jmp
daa
(bad)
jmp
movs
mov
bound
fstp
out
stos
fsubp
pushf
shl
pop
and
dec
xchg
rcr
pushf
cmps
es
(bad)
in
scas
push
bound
das
jmp
mov
sub
out
rcr
pop
pop
and
push
ins
es
push
out
iret
cmp
cs
cmp
(bad)
and
es
out
(bad)
popf
xchg
aas
pop
bound
sar
jmp
repnz
shr
loopne
xchg
(bad)
loopne
rcl
idiv
(bad)
popf
mov
es
xor
ins
es
jmp
(bad)
pushf
rcr
call
popf
rcr
xchg
mov
sub
pop
(bad)
(bad)
pop
pop
bound
sahf
push
and
arpl
jmp
out
loopne
shr
pop
loop
daa
pop
pop
xlat
scas
fmul
lods
mov
aam
div
jmp
popf
pop
mul
es
loope
cs
iret
fs
popf
(bad)
pushf
ror
iret
daa
cs
cmps
es
scas
daa
cs
push
(bad)
pushf
cwde
sub
or
les
rcl
imul
jmp
(bad)
pop
bound
and
(bad)
pop
pop
bound
lahf
jl
cs
rcr
loope
jns
and
pop
arpl
bound
(bad)
jmp
into
dec
daa
cs
push
(bad)
pushf
cwde
sub
or
les
rcl
test
iret
fs
popf
(bad)
pushf
ror
inc
daa
cs
cmps
es
pop
daa
cs
push
(bad)
pushf
cwde
sub
or
les
rcl
not
es
loope
not
and
pop
bound
and
mov
bound
lahf
jl
cs
rcr
loope
jns
and
lock
bound
add
iret
fs
jmp
shl
inc
iret
fs
xor
out
bound
movs
(bad)
(bad)
cs
push
pop
(bad)
pop
bound
and
inc
(bad)
std
and
fldcw
mov
pop
or
pop
(bad)
xchg
jecxz
rcr
test
jmp
(bad)
pop
bound
and
inc
(bad)
std
and
fldcw
mov
pop
or
xchg
jecxz
rcr
test
sub
pop
(bad)
mov
bound
lahf
adc
xchg
xlat
movs
in
push
add
pop
fisttp
pop
bound
fwait
jecxz
rcr
dec
or
(bad)
pop
bound
(bad)
cs
cmps
ds
out
and
cmps
mov
fisttp
rol
pop
bound
(bad)
shl
mov
(bad)
pop
ss
out
fabs
popf
jle
iret
sub
cld
gs
bound
gs
bound
mov
sbb
or
cmps
add
es
sti
(bad)
dec
jmp
shl
pop
iret
fs
xor
movs
(bad)
repz
jmp
loop
lahf
shr
pop
bound
mov
sbb
cmp
es
rcr
loope
(bad)
stos
pop
bound
movs
fld
outs
pop
bound
lahf
adc
xchg
xlat
movs
in
push
xor
pop
popf
(bad)
pushf
ror
ja
cs
cmps
es
cmp
cs
push
(bad)
pushf
cwde
sub
or
les
rcl
mul
ins
es
loope
cs
mov
pop
bound
jmp
fldcw
movs
mov
dec
or
jecxz
cs
cmps
cmp
ret
and
cmps
push
(bad)
pushf
cwde
sub
or
(bad)
pop
(bad)
xchg
jecxz
rcr
neg
jmp
(bad)
pop
bound
and
inc
(bad)
std
and
fldcw
mov
fs
bound
fs
bound
mov
sbb
or
cmps
add
es
sti
(bad)
dec
jmp
shl
pop
iret
fs
xor
movs
(bad)
pop
aas
bound
mov
pushf
(bad)
out
(bad)
popf
cs
pop
arpl
es
cs
cs
pop
push
cs
popf
rcr
xchg
mov
rcr
pop
mov
call
call
rcr
loopne
inc
lods
mov
popa
xchg
call
adc
pop
bound
inc
dec
jmp
lahf
add
sub
int3
out
popa
cmps
mov
popf
rcr
xchg
mov
loope
xor
rcr
dec
or
bound
(bad)
lock
bound
call
rcr
loopne
cs
adc
fsub
popf
pop
ds
out
es
jle
call
inc
jmp
cs
lds
pop
loope
ds
xchg
sbb
(bad)
(bad)
cmps
pop
bound
lahf
adc
xchg
xlat
movs
in
push
xor
pop
popf
(bad)
pushf
ror
mov
cmps
es
inc
and
cmps
push
(bad)
pushf
cwde
sub
or
(bad)
pop
(bad)
xchg
jecxz
rcr
neg
outs
es
loope
not
es
(bad)
pop
bound
and
inc
(bad)
std
and
fldcw
mov
pop
bound
out
lahf
shl
call
fsubp
pushf
rcr
call
(bad)
loope
shr
loopne
fstp
jbe
cs
sahf
arpl
es
daa
xor
loopne
popa
daa
pop
bound
fstp
ins
stos
fs
bound
cmps
in
pop
ja
pop
jmp
out
pop
pop
stos
fsubp
pushf
shr
pushf
cs
es
jmp
shr
loopne
pop
xor
into
fs
out
stos
shl
lahf
shl
lds
pop
loope
sub
popf
lods
out
loopne
scas
sbb
bound
xchg
movs
dec
scas
mov
jmp
daa
(bad)
jmp
stos
call
xchg
call
and
popf
rcr
dec
mov
jmp
rcr
dec
mov
loop
jmp
(bad)
loopne
rcr
stos
xchg
rcr
loopne
pop
ds
fcompp
loop
movs
mov
dec
or
pop
bound
sub
cs
cmps
ss
or
cs
push
(bad)
pushf
cwde
sub
or
pop
(bad)
xchg
jecxz
rcr
not
es
loope
cs
mov
(bad)
iret
and
lahf
adc
xchg
xlat
movs
in
push
xor
pop
popf
(bad)
pushf
ror
pop
and
es
cmps
es
fistp
cmps
push
(bad)
pushf
cwde
sub
or
les
rcl
test
fcompp
loop
(bad)
ja
bound
fstp
jmp
sar
jmp
call
stos
es
popf
shl
xlat
(bad)
fabs
popf
js
pop
xchg
rcr
pushf
cmps
and
loopne
out
sub
or
pop
(bad)
xchg
jecxz
rcr
imul
adc
pop
loope
cs
mov
pop
(bad)
(bad)
arpl
bound
lahf
adc
xchg
xlat
movs
in
push
xor
pop
popf
(bad)
pushf
ror
jnp
cs
cmps
es
aas
pop
cs
push
(bad)
pushf
cwde
sub
or
(bad)
pop
(bad)
xchg
jecxz
rcr
neg
es
loope
neg
and
pop
bound
and
inc
(bad)
std
and
fldcw
mov
pop
bound
(bad)
pop
(bad)
xchg
jecxz
rcr
mul
es
loope
cs
mov
(bad)
fwait
and
lahf
adc
xchg
xlat
movs
in
push
add
pop
fisttp
pop
bound
fwait
jecxz
rcr
dec
or
(bad)
pop
bound
mov
cs
cmps
ds
xchg
pop
cs
push
(bad)
pushf
cwde
sub
or
pop
(bad)
xchg
jecxz
rcr
test
jmp
(bad)
pop
bound
and
inc
in
jmp
fldcw
mov
pop
mov
sbb
bound
mov
sbb
cmp
es
rcr
loope
(bad)
jnp
bound
movs
fld
int
or
div
es
(bad)
pop
bound
and
(bad)
daa
and
lahf
jl
cs
rcr
loope
jns
and
rcr
pop
bound
(bad)
pop
(bad)
xchg
jecxz
rcr
imul
es
loope
imul
and
pop
bound
and
inc
(bad)
std
and
fldcw
mov
sbb
bound
bound
(bad)
fld
xchg
out
(bad)
popf
cmps
in
jle
fs
popf
(bad)
pushf
ror
xlat
pop
cs
cmps
es
fwait
pop
cs
push
(bad)
pushf
cwde
sub
or
les
rcl
test
jmp
popf
(bad)
pushf
ror
(bad)
pop
cs
cmps
es
mov
cs
popf
rcr
xchg
mov
cs
adc
xchg
xlat
movs
in
push
xor
pop
popf
(bad)
pushf
ror
inc
pop
cs
cmps
es
call
mov
dec
or
pop
bound
add
es
cmps
ds
jecxz
cs
push
(bad)
pushf
cwde
sub
or
les
rcl
idiv
es
loope
cs
into
fs
popf
(bad)
pushf
ror
pop
pop
cs
cmps
cmps
fdivr
sub
sbb
bound
mov
sbb
cmp
es
rcr
loope
(bad)
sti
and
movs
fld
mov
mul
xchg
jmp
jno
(bad)
fabs
popf
jns
idiv
mov
loop
mov
pop
bound
mov
sbb
cmp
es
rcr
loope
(bad)
stos
and
movs
fld
sub
bound
sar
jmp
sahf
loopne
shr
pop
(bad)
xchg
jecxz
rcr
test
jmp
(bad)
pop
bound
and
inc
(bad)
std
and
fldcw
mov
pop
bound
sbb
bound
mov
sbb
or
cmps
add
es
sti
(bad)
dec
jmp
shl
pop
iret
fs
xor
movs
(bad)
test
fldcw
mov
sbb
pop
or
dec
pop
or
pop
or
dec
pop
bound
data16
es
addr16
cs
out
(bad)
popf
cmps
(bad)
push
mov
rcr
loope
(bad)
(bad)
bound
dec
pop
out
xchg
shl
pushf
shl
popf
(bad)
pushf
rcr
stos
mov
fneni(8087
mov
push
pop
(bad)
xchg
neg
sbb
pop
popf
(bad)
pushf
ror
pop
pop
cs
xchg
adc
es
jmp
sar
cmp
in
jmp
cmps
repz
es
xor
outs
scas
out
(bad)
scas
fsub
scas
out
(bad)
scas
fsubr
arpl
xor
shl
stos
call
or
cs
pop
or
mov
dec
or
es
loop
repz
popf
shl
loopne
movs
arpl
pop
sub
cs
daa
mov
icebp
fs
or
es
loop
xchg
out
popf
ror
mov
lock
or
clc
pop
bound
pop
bound
fstp
(bad)
scas
fdivr
retf
cmps
repz
sub
pop
xor
mov
jmp
sar
jmp
cmps
loop
shr
loop
shl
xchg
daa
cmps
daa
arpl
mov
loope
daa
xchg
out
fneni(8087
popf
movs
arpl
jmp
cs
out
fneni(8087
popf
cmps
fsubrp
test
fst
daa
es
fabs
call
adc
bound
and
and
(bad)
test
pop
bound
fchs
xlat
mov
loopne
(bad)
mov
dec
push
stos
imul
and
jmp
mov
out
(bad)
scas
fdiv
push
sub
scas
call
xchg
popf
ror
jnp
cs
out
fneni(8087
popf
rcl
div
sbb
pop
jmp
pop
fneni(8087
popf
mov
stos
jae
rcr
xchg
ss
xchg
ss
pop
jmp
scas
loop
shl
pop
or
(bad)
pop
(bad)
(bad)
pop
sub
scas
call
mov
invd
cs
call
push
bound
into
xlat
push
cs
mov
push
bound
stos
call
mov
and
dec
stos
mov
cs
mov
leave
loopne
lods
loop
imul
or
(bad)
aas
sub
pop
fisttp
scas
leave
rol
cs
fchs
jmp
pop
out
jmp
es
out
fsub
popf
jle
call
out
sub
fldcw
popf
fwait
mov
popf
rcr
stos
out
rcr
loopne
fwait
scas
loop
rcr
stos
cli
rcr
loopne
fwait
xchg
popf
shl
out
fneni(8087
popf
jle
aaa
nop
rcr
pushf
cmps
push
scas
call
push
adc
sub
cs
fisttp
inc
xchg
and
stos
call
aaa
bound
cmps
lock
es
out
stos
xchg
loop
shl
out
fsub
popf
jle
out
cs
rcr
jmp
mov
call
or
pop
out
stos
sahf
loope
shl
adc
jmp
(bad)
jmp
fstp
cs
retf
popf
das
es
bound
call
movs
mov
bound
jns
stos
into
loope
shl
pop
jmp
movntq
out
jmp
fchs
xor
jmp
mov
loopne
jle
call
es
inc
push
jne
inc
es
mov
(bad)
cs
inc
push
cs
mov
cs
xchg
loopne
(bad)
aas
sub
sahf
repnz
cs
lahf
rcr
xchg
movs
rcl
ja
iret
fs
or
pop
bound
(bad)
sub
pop
bound
dec
loop
shl
hlt
dec
cmps
fidiv
call
loopne
jle
push
ins
neg
sbb
pop
jmp
das
fist
xor
mul
stos
dec
loop
shl
xchg
out
fneni(8087
popf
adc
ins
stos
daa
std
imul
bound
push
cs
fistp
push
adc
(bad)
(bad)
mov
bound
dec
sbb
es
out
fsub
popf
jle
imul
es
or
dec
jne
ins
es
out
fsub
popf
jle
mov
rcr
pushf
cmps
and
loopne
cs
lods
add
cmp
loopne
scas
leave
mov
cs
lods
add
stos
xchg
loop
shl
fstp
es
jecxz
dec
jl
cs
mov
es
or
fldcw
mov
pop
(bad)
xchg
mov
imul
int
jmp
sar
jmp
dec
loop
shr
(bad)
mov
retf
movs
repz
jo
jmp
popa
xor
jmp
daa
out
jmp
pop
sub
scas
fld
jae
jecxz
sub
push
mov
bound
scas
fld
jae
popf
pop
div
es
jmp
inc
xchg
aaa
fdiv
imul
inc
xchg
aaa
fisubr
test
shr
test
shl
iret
ins
cdq
jae
arpl
sub
jb
jbe
(bad)
mov
bound
scas
(bad)
and
daa
fisubr
bound
sub
jmp
dec
jmp
dec
mov
adc
bound
cs
xchg
lods
out
xor
mov
lock
aas
es
popf
pop
sub
aad
fcom
xor
mov
push
and
sbb
xchg
dec
sahf
mov
into
jae
cs
ins
cdq
arpl
out
push
sbb
jae
arpl
sub
jb
jbe
sub
rcl
(bad)
fld
xchg
daa
(bad)
scas
fsubr
imul
or
jo
cs
pop
or
dec
pop
mov
bound
into
pop
push
cs
daa
(bad)
jbe
mov
fsubrp
test
jo
int
es
jmp
jne
fdiv
cmps
ret
cmps
sub
es
mov
push
pop
bound
dec
jmp
add
out
jmp
sahf
call
stos
call
cs
call
mov
dec
or
pop
(bad)
(bad)
cmp
bound
scas
fldcw
sub
jecxz
and
bound
jne
xlat
jmp
bound
movs
fld
out
jnp
xchg
xlat
adc
loopne
and
xchg
push
cs
call
pop
mov
call
es
out
stos
call
out
(bad)
loopne
jle
imul
out
push
sub
(bad)
pop
out
jmp
(bad)
loopne
(bad)
mov
bound
movs
fld
out
jnp
xchg
xlat
adc
loopne
and
sub
es
lea
out
mov
int
push
out
int
jmp
daa
out
jmp
in
jmp
sahf
pop
inc
cs
es
scas
pop
clc
sbb
bound
loopne
or
daa
pop
(bad)
(bad)
xchg
das
bound
scas
(bad)
loope
fstp
adc
pop
pop
xlat
scas
fmul
es
lds
je
add
jmp
movs
inc
jae
and
jne
cmc
sbb
pop
loope
cs
xchg
fld
xchg
out
stc
loopne
movs
mov
xchg
movs
inc
push
call
imul
movs
fld
or
bound
lahf
adc
xchg
xlat
movs
in
push
xor
int3
fs
out
stos
call
sbb
pop
loope
mul
es
(bad)
pop
bound
and
(bad)
shr
cs
jl
cs
cs
loopne
jns
inc
mov
cs
loopne
jns
repz
cs
cmps
ds
rcl
cmps
push
(bad)
pushf
cwde
sub
or
les
mov
(bad)
les
pop
jecxz
and
cs
sub
cs
loopne
jle
iret
push
cs
cmps
es
xchg
push
cs
push
(bad)
pushf
cwde
sub
or
les
mov
(bad)
test
pop
mov
pop
bound
mov
sbb
pop
into
dec
push
cs
add
es
sti
(bad)
dec
out
xchg
call
lock
out
xchg
call
sbb
ss
ds
or
out
(bad)
loopne
jle
sub
cs
loopne
jle
aaa
push
cs
cmps
cmp
(bad)
xchg
sub
bound
mov
sbb
cmp
sub
cs
loopne
jle
aas
push
cs
cmps
es
adc
out
(bad)
loopne
jle
adc
es
cmps
es
xlat
push
cs
push
(bad)
pushf
cwde
sub
or
les
mov
(bad)
enter
lods
loop
or
mov
dec
mov
adc
bound
daa
out
jmp
into
xchg
push
cs
push
(bad)
pushf
cwde
sub
mov
pop
bound
mov
mov
xor
cs
mov
xor
movs
(bad)
ud0
cs
call
pop
sub
push
pop
sub
bound
xchg
push
xor
int3
fs
out
stos
call
sbb
pop
loope
cmps
jb
es
xchg
enter
icebp
fchs
jmp
dec
push
mov
cs
loopne
jle
sub
es
cmps
es
out
push
cs
push
(bad)
pushf
cwde
sub
or
les
mov
(bad)
and
bound
(bad)
pop
bound
(bad)
aam
pop
bound
hlt
jg
cs
scas
push
cs
push
(bad)
pushf
cwde
sub
or
les
mov
(bad)
loopne
pop
bound
sub
popf
jle
xor
(bad)
loopne
jle
xchg
push
cs
cmps
ds
jae
cs
push
(bad)
pushf
cwde
sub
or
les
mov
(bad)
movs
pop
pop
bound
(bad)
pop
bound
(bad)
pop
pop
pop
bound
pop
pop
bound
mov
sbb
cmp
sub
cs
loopne
jle
dec
push
cs
cmps
es
shl
es
mov
(bad)
fld
bound
lahf
mul
xchg
jmp
jno
fild
(bad)
loopne
jns
or
(bad)
loopne
jns
repz
cs
cmps
ds
rcl
cmps
push
(bad)
pushf
cwde
sub
or
les
mov
(bad)
les
pop
bound
stc
pop
bound
(bad)
clc
push
pop
bound
sar
jmp
into
rcr
push
pop
bound
mov
sbb
cmp
sub
cs
loopne
jle
mov
cmps
es
jg
cs
push
(bad)
pushf
cwde
sub
mov
pop
bound
mov
mov
xor
cs
mov
xor
movs
(bad)
test
cs
call
jae
bound
movs
fld
es
inc
and
bound
bound
es
xor
div
bound
scas
call
and
cs
call
jae
bound
dec
pop
out
xchg
faddp
popf
shl
out
xchg
call
sar
loopne
(bad)
or
bound
fldcw
mov
or
pop
mov
cmps
jmp
cmp
jnp
cli
jecxz
mov
bound
jne
xor
add
es
loope
mov
cs
scas
leave
mov
cs
aas
es
lea
es
jmp
sub
xchg
idiv
fsubrp
test
fst
bound
jbe
loope
es
mov
shl
popf
xchg
mov
clc
jmp
cmps
in
shr
pop
(bad)
(bad)
fwait
xor
cs
call
sar
jmp
pop
in
shr
pop
out
stos
and
shl
cdq
add
pop
or
daa
pop
bound
(bad)
cmp
shl
dec
sbb
pop
retf
fchs
loope
add
mov
cs
das
es
out
stos
(bad)
popf
shl
out
fneni(8087
popf
jle
imul
xchg
call
mov
out
stos
xchg
loop
shl
imul
sub
mov
cs
lock
out
stos
(bad)
popf
shl
add
xchg
loop
shl
out
fsub
popf
jle
iret
dec
cs
retf
fchs
jmp
mov
call
or
pop
out
stos
sahf
loope
shl
sub
jmp
xchg
leave
scas
call
loope
fcmovbe
fchs
es
movs
stos
ret
shl
pop
bound
movs
mov
bound
jns
stos
into
loope
shl
pop
fimul
pop
(bad)
fld
xchg
out
fucom
popf
cmps
loope
out
fsub
popf
jle
test
stos
and
shl
out
fsub
popf
jle
pop
or
dec
aas
or
dec
pop
or
stos
call
test
sub
popf
fwait
mov
popf
ror
test
ficom
lahf
rcr
ja
iret
fs
or
pop
bound
(bad)
hlt
or
bound
push
in
shl
hlt
push
cmps
fsubrp
test
fst
pushf
rcr
dec
or
pop
(bad)
(bad)
imul
scas
fldcw
push
add
(bad)
and
xor
adc
movs
mov
and
in
xchg
and
ja
fisub
pop
mov
bound
push
bound
stos
call
into
out
dec
cs
(bad)
push
bound
or
fs
out
stos
mov
popf
shl
adc
and
stos
repz
bound
stos
call
into
bound
es
fild
fwait
pop
bound
dec
pop
popf
fwait
mov
popf
shr
loopne
(bad)
push
bound
stos
call
xchg
mov
clc
fchs
jmp
sahf
adc
call
cdq
rcr
xchg
movs
rcl
test
and
adc
imul
aaa
xor
movs
(bad)
out
dec
inc
sub
pop
dec
cs
push
int
xor
fldcw
mov
loop
mov
lods
call
adc
mov
stc
fchs
loope
sub
bound
aas
dec
cs
mov
loopne
das
es
bound
loope
out
fneni(8087
popf
jle
ret
dec
cs
rcl
div
(bad)
sar
jmp
push
in
shr
loop
ror
xor
es
out
fneni(8087
popf
jno
inc
stos
in
and
aaa
cmps
ret
pushf
mov
jne
xor
push
push
add
jae
es
mov
bound
sub
cmp
jnp
xchg
ss
dec
or
(bad)
xchg
movs
cmps
fidiv
call
cmp
jne
pop
pop
es
popf
pop
sub
mov
pop
bound
imul
call
jecxz
inc
es
or
pop
bound
(bad)
mov
bound
scas
(bad)
shl
mov
es
fidivr
sbb
xchg
daa
fisubr
dec
xor
jae
bound
jo
sbb
imul
imul
out
jmp
jns
cmp
in
jmp
sahf
pop
jb
es
or
pop
xor
cdq
enter
xchg
call
loopne
es
sbb
es
movs
daa
shr
pop
out
and
loope
popf
and
pop
out
stos
daa
out
popf
shl
mov
push
pop
bound
pop
and
loopne
(bad)
pusha
scas
popf
shl
loopne
cs
sbb
fmulp
adc
sub
neg
push
es
jmp
int
cmp
cmps
ret
pushf
mov
jno
xchg
adc
data16
sar
jmp
ficom
pushf
das
es
or
loope
aad
fmul
sub
pop
bound
repz
mov
pop
or
pop
(bad)
adc
push
pop
es
ins
cdq
arpl
loope
and
pop
bound
(bad)
xor
jp
arpl
xor
and
es
popf
sbb
and
into
sbb
es
xchg
sub
dec
fstp
and
adc
mov
scas
cli
xor
dec
fcom
(bad)
call
jmp
dec
pop
or
pop
or
dec
sbb
das
dec
pop
or
dec
pop
or
es
inc
and
(bad)
arpl
bound
scas
fmul
das
jno
push
rcl
fwait
ret
ins
es
das
jno
push
rcl
idiv
outs
es
push
es
jmp
sar
jmp
ficom
or
fldcw
loop
fs
mov
bound
or
fldcw
dec
mov
pop
mov
bound
or
fldcw
jle
popw
mov
bound
or
fldcw
dec
mov
pop
mov
bound
es
jns
das
popf
sbb
and
into
sub
es
jns
das
popf
sbb
cmp
es
jns
das
popf
sbb
and
into
or
es
mov
daa
dec
or
fldcw
push
mov
pop
mov
add
bound
or
fldcw
xchg
mov
pop
mov
add
bound
or
fldcw
test
pop
bound
or
fldcw
cli
lea
loopne
pop
bound
(bad)
mov
test
call
loopne
(bad)
mov
cmp
test
imul
ja
test
fldcw
mov
add
bound
push
scas
xchg
(bad)
pop
cmp
test
std
outs
es
test
fldcw
loop
fs
mov
add
bound
push
add
cmp
test
std
outs
es
test
fldcw
dec
mov
pop
mov
pop
bound
loope
sahf
rcl
add
outs
test
inc
iret
cwde
and
dec
jecxz
sbb
mov
cs
inc
jne
rcl
aaa
std
outs
mul
push
xchg
inc
iret
cwde
and
dec
jecxz
sbb
and
into
mov
sahf
rcl
aas
std
outs
es
add
cwde
and
dec
jecxz
sbb
and
into
xchg
jne
rcl
fwait
ret
ins
neg
xor
cwde
and
dec
jecxz
sbb
imul
mov
ret
xor
sub
fmul
(bad)
pop
(bad)
push
pop
mov
loopne
mov
fs
xor
mov
(bad)
and
dec
pop
xor
mov
bound
cmps
call
out
imul
xor
scas
cmp
dec
pop
popf
sbb
and
dec
pop
xor
arpl
dec
imul
jmp
fidiv
bound
bound
cmps
dec
or
(bad)
pop
bound
ret
dec
pop
pusha
cs
or
pop
shr
bound
push
sbb
dec
or
lods
pop
call
dec
or
dec
or
cs
xor
ret
dec
lds
mov
bound
test
std
outs
es
lea
es
sbb
loopne
push
pop
bound
push
bound
lods
pop
call
dec
or
or
daa
es
xor
(bad)
and
dec
lds
mov
bound
test
ins
es
inc
and
bound
addr16
daa
jne
inc
es
inc
call
cs
pop
or
into
cmp
xchg
movs
inc
daa
dec
or
fldcw
data16
pop
mov
loopne
sbb
loopne
push
pop
bound
push
sub
pop
or
aaa
or
es
xor
ret
dec
lds
(bad)
push
cmp
test
ins
es
rcl
sub
outs
es
rcl
pop
ret
jne
inc
add
or
bound
jbe
jp
fs
or
sti
pop
bound
pop
or
pop
ror
call
jmp
dec
pop
popf
sbb
and
dec
pop
popf
sbb
and
dec
(bad)
jmp
pop
bound
pop
bound
dec
aaa
or
es
xor
ret
and
dec
lds
(bad)
fstp
bound
test
std
outs
es
rcl
sub
outs
es
rcl
pop
ret
jne
inc
pop
push
bound
dec
mov
dec
inc
es
bound
xchg
mov
repz
or
into
fild
es
or
fldcw
push
mov
pop
or
fldcw
add
dec
jnp
test
pop
bound
popa
cmps
dec
or
(bad)
pop
bound
ret
and
dec
pop
mov
into
and
cmps
fcomp
dec
es
or
bound
and
es
xor
imul
cs
push
ins
es
inc
gs
bound
fldcw
mov
add
bound
push
sbb
loopne
dec
xchg
inc
or
bound
dec
sub
bound
popa
cmps
dec
or
(bad)
pop
bound
ret
and
dec
pop
mov
add
bound
dec
pop
popf
sbb
and
dec
pop
popf
sbb
and
dec
xor
es
inc
mov
bound
dec
mov
cs
cmps
dec
or
(bad)
pop
bound
ret
and
dec
pop
mov
add
and
into
and
rcl
sub
outs
es
rcl
pop
ret
jne
inc
sbb
pop
or
pop
bound
pop
bound
je
ins
es
repz
or
into
mov
cs
jmp
sar
jmp
into
xchg
movs
inc
es
sbb
loopne
push
pop
bound
jecxz
es
or
es
bound
push
bound
dec
pop
bound
jbe
xor
fs
or
sti
pop
bound
add
pop
xchg
inc
es
sbb
loopne
push
pop
bound
add
cs
fsub
es
cs
or
bound
ret
dec
pop
mov
add
xchg
cs
pop
popf
sbb
and
dec
pop
popf
sbb
and
dec
(bad)
shl
pop
bound
push
bound
dec
jnp
cs
xor
ret
and
dec
lds
(bad)
sar
jmp
jne
rcl
sub
outs
es
rcl
pop
ret
jne
inc
jo
sub
es
or
es
bound
sbb
repz
or
into
mov
test
sub
addr16
or
fldcw
add
dec
xor
es
cs
or
dec
pop
bound
fs
or
cli
pop
bound
sbb
inc
cs
or
fldcw
push
mov
pop
or
fldcw
add
dec
popf
bound
es
cs
or
dec
pop
bound
fs
or
cli
pop
bound
sbb
inc
cs
jecxz
pop
or
dec
pop
popf
sbb
and
dec
pop
popf
sbb
and
dec
pop
or
dec
ret
bound
es
inc
es
loop
dec
ret
sub
repnz
or
and
(bad)
(bad)
and
std
outs
es
rcl
sub
outs
es
rcl
jg
ins
es
inc
inc
ja
cs
or
dec
pop
bound
fs
or
cli
pop
bound
sbb
inc
cs
or
fldcw
push
mov
pop
or
fldcw
mov
or
dec
test
es
das
es
or
dec
pop
bound
fs
or
std
pop
bound
icebp
(bad)
pop
shl
out
shr
fmul
jno
(bad)
mov
ret
xor
sub
fdiv
pop
or
sti
pop
(bad)
push
pop
mov
popf
cmps
loopne
mov
fs
xor
adc
popf
shl
and
sahf
and
es
jmp
dec
pop
popf
sbb
and
into
aas
inc
cs
daa
fidiv
mov
pop
bound
es
rcl
sub
outs
es
js
pop
sahf
add
arpl
dec
imul
or
dec
pop
or
es
xor
(bad)
and
dec
(bad)
mov
sub
pop
mov
push
pop
bound
dec
pop
popf
sbb
and
dec
pop
xor
daa
(bad)
or
jnp
inc
xor
inc
es
loop
dec
(bad)
mov
repz
or
into
scas
inc
cs
or
fldcw
push
mov
pop
or
fldcw
mov
or
daa
pop
bound
(bad)
pushf
mov
jne
inc
xor
cmps
dec
or
(bad)
pop
bound
ret
dec
pop
mov
bound
dec
pop
or
pop
or
dec
sbb
das
dec
pop
or
dec
pop
or
es
inc
cs
(bad)
xchg
aas
bound
scas
(bad)
jmp
dec
push
xor
push
loopne
sub
aas
bound
dec
pop
popf
sbb
and
dec
pop
popf
sbb
and
dec
jnp
dec
dec
or
cmp
bound
fs
or
mul
es
rol
pop
bound
loope
sbb
fs
or
dec
pop
arpl
es
(bad)
mov
add
dec
push
ins
es
inc
gs
bound
fldcw
mov
cmp
bound
sub
cmp
das
dec
push
arpl
es
(bad)
mov
add
int
or
dec
pop
or
pop
(bad)
adc
jmp
not
xor
pop
or
fldcw
push
mov
pop
or
fldcw
add
daa
pop
bound
jbe
pop
ja
cmps
dec
or
(bad)
pop
bound
ret
and
dec
pop
mov
pop
bound
scas
out
(bad)
scas
fmul
fldcw
push
mov
pop
or
fldcw
add
daa
pop
bound
jbe
mov
bound
dec
sbb
scas
jbe
mov
stos
cli
pop
bound
inc
xor
pop
rol
pop
(bad)
(bad)
pop
jmp
adc
popf
sbb
and
dec
(bad)
scas
es
bound
jbe
es
or
es
xor
ret
and
dec
lds
(bad)
iret
add
test
ins
es
xchg
jge
pop
bound
push
sbb
loopne
push
pop
bound
add
cs
fsub
es
cs
or
bound
ret
dec
pop
mov
xchg
cs
pop
popf
sbb
and
dec
pop
popf
sbb
and
dec
(bad)
shl
pop
bound
pop
bound
dec
jnp
cs
xor
ret
and
dec
lds
(bad)
push
add
test
jmp
jne
rcl
sub
outs
es
rcl
pop
ret
jne
inc
jo
fld
es
or
es
bound
sbb
repz
or
into
daa
jl
es
or
fldcw
push
mov
pop
or
fldcw
mov
or
dec
sti
arpl
es
cs
or
dec
pop
bound
jbe
sbb
fs
or
sti
pop
bound
popf
xor
pop
rcl
bound
loope
(bad)
adc
std
outs
es
rcl
pop
ret
jne
inc
fistp
bound
dec
loopne
cs
inc
es
bound
dec
mov
repz
or
into
fistp
es
or
fldcw
push
mov
pop
or
fldcw
add
dec
popf
bound
es
inc
xor
cmps
dec
or
daa
ret
and
dec
pop
pusha
cs
xor
pop
shl
pop
bound
push
sbb
loopne
dec
xchg
inc
ds
inc
pusha
jne
inc
es
loop
dec
ret
sub
repnz
or
and
(bad)
(bad)
ja
bound
test
std
outs
es
xchg
es
bound
push
sbb
loopne
dec
xchg
inc
ds
inc
jns
jbe
es
loop
dec
ret
sub
repnz
or
and
(bad)
(bad)
xor
bound
test
std
outs
es
rcl
sub
outs
es
rcl
pop
ret
jne
inc
mov
pop
arpl
es
inc
es
loop
dec
cld
mov
cmc
fs
or
into
ret
jle
es
mov
aad
popf
(bad)
stc
jmp
shl
pop
cmp
cmps
ret
pushf
mov
jne
xor
dec
sahf
dec
cs
arpl
jmp
dec
pop
or
and
ja
cs
popf
pop
cs
call
mov
jne
js
mov
cs
mov
cs
mov
aas
pop
bound
arpl
cs
out
imul
out
imul
out
imul
popf
pop
ss
call
loop
inc
mov
jp
fsubrp
test
pop
inc
sahf
pop
outs
jne
rcl
or
bound
les
fldcw
rcl
mov
loopne
lods
loop
jmp
ficom
movs
lods
pop
out
pop
cmp
inc
and
pop
ds
and
ins
es
cs
mov
loop
cmp
jnp
cli
jecxz
and
bound
jne
fsubr
leave
push
cmps
(bad)
cs
cmps
loopne
movs
sbb
bound
scas
and
stos
call
dec
pop
bound
into
sbb
cmps
ins
cs
sti
(bad)
xchg
mov
jnp
loop
fstp
pop
aas
dec
mov
out
fchs
popf
jle
pop
jp
es
pop
shl
jae
(bad)
scas
and
stos
call
sysret
bound
cmps
icebp
or
pop
loop
fstp
aas
dec
jmp
fchs
popf
jle
adc
es
pop
shl
push
inc
xor
(bad)
fchs
xor
ror
bound
cmps
bound
push
xchg
pop
bound
(bad)
lock
bound
aaa
ja
lahf
fs
out
stos
es
shl
movs
cmp
pop
jecxz
aas
dec
bound
cmps
bound
dec
xchg
pop
bound
(bad)
test
pop
bound
aaa
ja
lahf
fs
out
stos
es
shl
icebp
cmp
pop
loop
fst
pop
aas
dec
mov
out
fchs
popf
jle
arpl
es
pop
shr
jae
stc
scas
and
stos
call
inc
or
scas
out
xchg
enter
rcr
loopne
call
push
push
or
xchg
pop
bound
(bad)
ins
xor
bound
aaa
ja
pushf
fs
out
stos
es
shl
dec
cmp
pop
loop
fst
pop
aas
dec
shr
out
fchs
popf
jle
or
es
pop
shr
push
inc
jae
and
stos
call
fisttp
bound
dec
pop
or
dec
pop
mov
cmc
fs
out
stos
es
shl
bound
ret
inc
sbb
mov
and
fneni(8087
popf
inc
out
imul
pop
jns
es
cmps
push
scas
out
arpl
scas
(bad)
jo
(bad)
mov
retf
ja
xor
lods
push
xchg
imul
sahf
xor
test
scas
call
bound
stos
inc
fs
jno
mov
loop
imul
pop
or
jno
add
es
cmp
sub
dec
jmp
cmps
repz
es
xor
mov
jmp
pxor
call
scas
(bad)
pop
xchg
pop
bound
(bad)
adc
pop
(bad)
(bad)
repz
bound
xchg
(bad)
fchs
loop
aad
popf
shl
push
inc
mov
(bad)
(bad)
loopne
(bad)
sub
bound
sahf
inc
bound
es
xchg
rcr
xchg
movs
scas
fwait
in
call
fnop
ins
es
out
shl
popf
jle
sti
ja
es
(bad)
fsubp
popf
sub
xchg
pop
bound
(bad)
in
pop
bound
fstp
pop
aas
dec
push
shr
out
shl
popf
jle
scas
ja
es
(bad)
fsubp
popf
sub
or
xchg
pop
bound
(bad)
mov
(bad)
call
xchg
rcr
xchg
movs
scas
fwait
in
call
sub
ins
es
out
shl
popf
jle
outs
ja
es
(bad)
fsubp
popf
sub
or
pop
bound
(bad)
js
pop
bound
fst
pop
aas
dec
jae
ins
es
out
shl
popf
jle
and
es
xchg
fld
xchg
out
shl
popf
cmps
loopne
(bad)
fsubp
popf
daa
push
push
or
mov
dec
mov
xor
bound
fst
shr
out
shl
popf
jle
jecxz
cs
(bad)
fsubp
popf
and
xchg
pop
bound
(bad)
int3
xor
bound
fst
pop
aas
dec
not
ins
es
out
shl
popf
jle
xlat
jbe
es
movs
clc
pop
pop
bound
fst
pop
aas
dec
sbb
ins
es
out
shl
popf
jle
mov
cs
(bad)
fsubp
popf
and
or
xchg
pop
bound
(bad)
mov
push
mov
(bad)
(bad)
loopne
(bad)
and
popf
shl
pop
or
pop
bound
lods
and
into
repnz
fstp
(bad)
loopne
xchg
aad
popf
rcl
outs
lods
fwait
not
stos
xor
out
push
fisubr
adc
cs
les
cs
outs
ret
mul
in
fchs
loope
cs
out
fsubp
popf
daa
out
out
and
(bad)
mov
mov
bound
mov
lahf
(bad)
(bad)
popf
adc
call
(bad)
popf
rcr
out
daa
pop
(bad)
call
fstp
jmp
daa
out
jmp
stos
call
adc
and
stos
call
mov
fld
fwait
out
rcr
pop
push
pop
into
inc
jp
movs
mov
cmps
out
mov
fcomp
mov
cmps
test
popa
and
(bad)
fsubp
popf
and
pushf
pop
dec
mov
sub
mov
or
and
stos
call
pop
pop
bound
cmps
jmp
or
cmp
and
stos
call
xor
bound
movs
fstp
gs
sub
pop
out
stos
(bad)
popf
shl
pop
cmp
pop
jecxz
scas
and
cs
call
les
cs
call
(bad)
or
dec
sbb
ins
es
out
fsubp
popf
jle
jmp
cs
cmps
cmp
loopne
(bad)
pop
or
stos
call
and
stos
(bad)
popf
shl
cwde
hlt
fs
out
stos
(bad)
popf
shl
std
cmp
pop
loope
ss
mov
(bad)
in
pop
bound
xchg
hlt
fs
out
stos
(bad)
popf
shl
cli
mov
loopne
jmp
arpl
es
out
(bad)
popf
lods
out
xor
daa
or
jg
out
fsubp
popf
cmps
(bad)
push
xchg
cmps
loopne
(bad)
fsubp
popf
and
cdq
dec
das
es
popf
fsubp
popf
ror
ret
ins
es
hlt
fs
out
stos
(bad)
popf
shl
dec
cmp
pop
loope
ss
pushf
fs
out
stos
(bad)
popf
shl
cmp
stos
(bad)
popf
shl
cmp
stos
(bad)
call
jmp
shl
loopne
add
jmp
shl
fwait
addr16
loopne
cs
popf
mov
movs
mov
popa
pop
neg
(bad)
xchg
out
rcr
xchg
out
fsub
popf
jle
leave
mov
rcr
loopne
jle
scas
je
es
cmps
ds
call
ror
cs
call
(bad)
popf
shl
cmp
stos
arpl
jno
and
aaa
or
cs
call
(bad)
popf
shl
xlat
fcmovu
loopne
(bad)
mov
bound
stos
call
mov
cs
mov
xor
rcr
xchg
push
sub
dec
mov
cli
pop
cs
out
fsubp
popf
jle
pop
popf
fwait
shl
popf
ror
adc
jne
inc
es
cmp
and
sahf
rcr
loopne
jge
stos
mov
fchs
mov
adc
in
das
fild
push
loop
rcr
stos
mov
fchs
mov
enter
es
pop
cmp
pop
bound
rcr
jne
frstor
jae
xchg
into
repz
es
xor
popf
xor
dec
sahf
mov
cmps
(bad)
ss
sahf
fs
or
dec
push
bound
imul
cmp
pop
jmp
xor
shr
fist
and
sbb
es
or
into
sub
es
jmp
mov
pop
fidiv
pop
(bad)
fld
xchg
out
retf
loopne
cmps
in
addr16
pop
bound
jbe
and
into
(bad)
jae
es
cs
or
ja
bound
into
jnp
cs
mov
pop
bound
es
das
es
out
stos
xchg
icebp
popf
shl
pop
es
jecxz
cs
inc
mov
and
stos
call
adc
popf
shl
loopne
sub
loope
push
stos
and
cs
inc
pop
xchg
pop
(bad)
and
ins
cmps
aad
es
xchg
int
call
into
xlat
jbe
movs
mov
inc
rdpmc
cmps
out
mov
fcomp
mov
cmps
test
movs
fsub
cmps
fcom
popf
call
fstp
mov
into
xchg
es
xchg
xchg
repnz
rcr
jmp
shl
mov
xor
aad
(bad)
jg
movs
lods
loopne
jmp
scas
mov
retf
loopne
scas
mov
push
call
rcr
pop
adc
loopne
leave
ret
fchs
(bad)
(bad)
ja
bound
scas
fst
mov
sub
stos
mov
popf
rcl
mov
mov
(bad)
mov
jmp
ret
xor
pop
or
dec
pop
out
stos
mov
xchg
out
enter
into
imul
xchg
out
retf
jle
shl
(bad)
retf
loopne
jle
jg
rcr
pushf
cmps
ss
(bad)
push
imul
call
femms
bound
sahf
add
cs
mov
fst
sub
es
or
mov
and
dec
fnstcw
mov
pop
mov
in
pop
cs
fisttp
popf
mov
cmps
inc
cs
xchg
dec
xor
fs
or
loopne
and
dec
outs
ret
imul
cmp
push
icebp
popf
shr
pop
(bad)
es
(bad)
fld
jmp
(bad)
jmp
dec
mov
ins
es
(bad)
fs
or
cld
pop
bound
(bad)
and
into
inc
jno
es
(bad)
retf
loopne
mov
cmps
inc
cs
xchg
dec
xor
fs
or
loopne
and
dec
pop
cld
outs
test
xchg
fist
adc
mov
cs
xchg
mov
pop
or
dec
pop
or
dec
pop
or
dec
pop
bound
data16
mov
pop
mov
arpl
or
jbe
mov
in
fild
fcmovbe
sub
bound
mov
dec
mov
bound
fstp
das
es
inc
es
pop
xchg
jo
out
xchg
xchg
lock
shl
pop
call
bound
and
xchg
int3
fs
popf
pop
xchg
div
imul
daa
xchg
jbe
out
leave
loopne
jle
xchg
jae
es
out
fwait
leave
loopne
lods
out
loopne
scas
sbb
bound
jne
mov
stos
mov
xor
mov
pop
bound
daa
xchg
jbe
pusha
inc
(bad)
std
and
fldcw
(bad)
mov
push
mov
bound
scas
(bad)
push
imul
ret
scas
pop
or
pop
scas
mov
es
daa
out
dec
pop
sbb
mov
bound
scas
pop
mov
adc
sar
jmp
xchg
repnz
shr
loopne
in
dec
sbb
cs
(bad)
out
adc
scas
pop
mov
arpl
bound
es
or
into
mov
cs
daa
mul
pop
fisubr
int
imul
fsub
jmp
stos
cs
bound
(bad)
adc
dec
pop
popf
sbb
and
dec
pop
or
dec
pop
or
dec
pop
or
dec
pop
(bad)
in
ja
repz
or
sti
pop
bound
jns
es
shr
pop
bound
scas
and
dec
pop
or
into
inc
ins
cs
(bad)
out
popf
shl
adc
sbb
bound
cmps
ins
pop
inc
mov
and
into
das
outs
cs
hlt
fs
xor
sbb
bound
scas
call
inc
pop
(bad)
fld
xchg
out
retf
loopne
movs
mov
xchg
mov
cs
push
xor
mov
(bad)
rcr
fsub
or
popf
sub
pop
bound
es
out
retf
loopne
jle
call
dec
stos
and
dec
mov
ja
call
loop
mov
fstp
out
lods
add
ins
es
movs
sub
and
daa
pop
bound
into
xchg
rcr
xchg
mov
mov
(bad)
cs
pop
or
push
pop
bound
(bad)
(bad)
xor
bound
jbe
in
and
pop
out
stos
mov
popf
shl
bound
call
pop
mov
sub
bound
outs
outs
cs
inc
rcr
bound
dec
push
popf
sbb
and
into
jg
cs
jp
arpl
xor
out
bound
scas
(bad)
dec
imul
dec
mov
es
inc
es
daa
retf
cmp
es
imul
retf
jge
mov
retf
cmps
repz
sub
pop
xor
mov
jecxz
aas
bound
lods
pop
outs
lods
fimul
ins
stos
mov
adc
(bad)
and
out
daa
pop
(bad)
(bad)
in
bound
sbb
arpl
es
pop
and
bound
xor
add
aas
daa
pop
bound
stos
mov
pop
das
es
ins
stos
cmps
push
bound
iret
mov
es
pop
inc
xchg
pop
bound
sub
or
sti
pop
(bad)
adc
ins
neg
fchs
jmp
retf
shr
call
dec
repz
ret
popf
(bad)
cmp
popf
shl
neg
neg
loopne
jle
stos
mov
fchs
mov
pop
bound
out
out
es
bound
(bad)
sbb
and
into
out
cs
mov
into
fneni(8087
popf
add
fstp
rcr
loopne
mov
pop
iret
pop
xor
loopne
stos
cli
loop
shl
retf
lahf
rcr
xor
loop
loopne
pop
imul
inc
daa
xchg
out
fneni(8087
popf
add
(bad)
stos
(bad)
loop
ror
loopne
inc
es
rcl
pop
ret
test
(bad)
movntq
out
jmp
fs
bound
mov
mov
rol
bound
loope
inc
dec
xchg
pop
bound
cmps
and
call
push
inc
xchg
pop
(bad)
(bad)
std
hlt
popf
sar
pop
pop
xchg
pop
bound
sub
popf
sbb
and
into
inc
test
fld
inc
and
bound
loope
bound
cs
jp
pop
bound
popa
and
pop
mov
pop
bound
pop
pop
push
cs
es
movq
es
call
sbb
lods
pop
jbe
mov
sahf
xchg
push
sub
bound
imul
and
ins
imul
das
sti
outs
imul
out
jmp
imul
mov
ins
imul
arpl
ins
imul
mov
jbe
and
std
outs
imul
or
outs
es
(bad)
and
bound
pop
ds
imul
es
out
fsub
popf
adc
imul
mov
push
and
sti
outs
es
inc
xchg
(bad)
fldcw
(bad)
fwait
adc
dec
loopne
shl
loopne
ds
mov
lea
pop
bound
fstp
loope
ret
shl
xchg
out
fneni(8087
popf
jle
sub
xchg
out
fneni(8087
popf
mov
arpl
scas
fmul
scas
loope
ins
cs
cs
out
stos
daa
loopne
shl
push
(bad)
mov
adc
arpl
fchs
bound
jne
inc
es
hlt
fs
or
into
jg
cs
(bad)
mov
adc
cs
in
addr16
xchg
repnz
bound
xchg
out
fneni(8087
popf
call
fstp
loop
push
stos
and
daa
adc
mov
fstp
bound
stos
call
adc
in
and
pop
out
mov
movs
xlat
popf
outs
cmps
and
push
out
(bad)
and
inc
daa
ja
int
pop
out
mov
loopne
shl
bound
and
push
dec
pop
or
dec
sub
ins
es
(bad)
not
out
fs
mov
pop
(bad)
mov
push
(bad)
scas
fsubr
stos
daa
loopne
shl
out
fneni(8087
popf
jle
xor
fcmovnu
loopne
jle
mov
es
cmps
ds
loopne
cs
out
fchs
popf
jle
sub
popw
mov
das
pop
bound
fstp
pop
push
dec
pop
or
dec
adc
(bad)
dec
adc
jle
popw
mov
sub
(bad)
(bad)
ficomp
bound
stos
xchg
arpl
fchs
loope
fstp
adc
pop
pop
xlat
movs
out
pop
push
jne
inc
es
mul
cs
sub
es
xor
push
bound
iret
fsub
es
cs
popf
cs
ins
cwde
mov
xchg
out
daa
loopne
rcr
das
push
sub
es
dec
pop
or
dec
clc
mov
(bad)
rcl
bound
fldcw
jle
popw
mov
sbb
cmps
call
mov
and
lahf
xchg
call
push
popf
rcr
dec
out
stos
shl
popf
shl
dec
hlt
fs
out
stos
shl
popf
shl
lds
ss
cs
out
stos
daa
loopne
shl
push
scas
xchg
(bad)
aaa
push
bound
cmps
mov
bound
jne
inc
es
mul
cs
arpl
es
scas
xchg
(bad)
movhps
iret
adc
cmps
sub
es
xchg
leave
scas
call
stos
call
mov
dec
or
cld
pop
bound
(bad)
sbb
(bad)
shl
pop
bound
(bad)
sbb
and
into
mov
fild
fchs
popf
cs
aas
or
dec
pop
or
imul
es
popf
sbb
and
into
cmps
push
es
sub
daa
loopne
shl
out
fneni(8087
popf
jle
mov
out
fneni(8087
popf
jle
retf
push
ds
loopne
cs
out
fchs
popf
jle
sub
addr16
mov
cs
bound
fstp
pop
push
dec
pop
or
dec
je
ins
es
(bad)
(bad)
pop
bound
fldcw
dec
mov
pop
mov
pop
(bad)
(bad)
sbb
cs
xchg
arpl
fchs
loope
fstp
adc
pop
pop
xlat
movs
out
pop
push
jne
inc
es
mul
cs
imul
loopne
push
mov
pop
bound
iret
sbb
es
rcr
loopne
cs
ins
cwde
mov
xchg
out
daa
loopne
rcr
das
push
sub
es
dec
pop
or
dec
xor
(bad)
adc
bound
fldcw
dec
mov
pop
mov
and
(bad)
(bad)
out
sbb
popf
rcr
loopne
movs
mov
and
lahf
xchg
call
push
popf
rcr
dec
out
stos
shl
popf
shl
dec
hlt
fs
out
stos
shl
popf
shl
test
es
loope
ss
cs
out
stos
daa
loopne
shl
push
push
mov
sbb
cmps
mov
bound
jne
inc
es
mul
cs
mov
push
push
mov
sbb
iret
push
pusha
cs
rcr
loopne
cs
ins
cwde
mov
xchg
out
daa
loopne
rcr
das
push
sub
es
dec
pop
or
dec
icebp
mov
(bad)
pop
sbb
fldcw
inc
mov
pop
mov
pop
(bad)
(bad)
ss
pushf
rcr
loopne
mov
fstp
das
es
and
loopne
in
push
mov
(bad)
sar
jmp
into
loop
shr
loopne
jmp
fchs
xor
(bad)
add
pop
bound
(bad)
cmp
pop
bound
sar
jmp
ret
shr
loopne
jmp
dec
sbb
cs
pop
or
es
and
and
into
and
xchg
out
fsub
popf
inc
and
bound
xlat
fcmovu
loopne
(bad)
(bad)
sbb
cmps
and
call
outs
push
mov
loopne
scas
sbb
bound
xchg
mov
(bad)
loopne
jl
ja
mov
pop
popf
fwait
shl
popf
ror
jmp
es
mov
(bad)
sub
out
sub
fcmovu
loopne
(bad)
jecxz
bound
stos
xchg
xchg
rcr
loopne
out
pop
loop
daa
pop
pop
xlat
dec
pop
out
mov
je
out
mov
loop
shl
xlat
fcmovu
loopne
(bad)
mov
pop
out
stos
(bad)
loop
shl
pusha
inc
(bad)
std
and
fldcw
mov
pop
bound
loope
xlat
fcmovu
loopne
(bad)
aaa
sbb
fldcw
mov
mov
es
inc
and
inc
es
cs
or
mov
(bad)
(bad)
lahf
sbb
scas
call
arpl
cs
sbb
popf
fwait
shl
popf
ror
fbld
es
outs
mov
out
loopne
scas
sbb
bound
xchg
mov
(bad)
loopne
jl
ja
mov
fwait
shl
popf
ror
pop
addr16
mov
(bad)
das
dec
repz
fcmovu
loopne
mov
bound
fldcw
mov
pop
(bad)
jmp
es
bound
es
call
jne
inc
dec
stos
and
dec
mov
ja
call
loop
mov
popf
shl
loopne
es
sbb
scas
out
leave
scas
call
int
popf
pop
xor
pop
fldcw
rcl
mov
and
bound
inc
stos
in
ss
aaa
cmps
ret
pushf
mov
jne
xor
pop
xor
bound
sar
jmp
ficom
pop
cs
pop
bound
mov
pushf
pop
ds
adc
in
es
bound
es
rcl
idiv
outs
es
mov
(bad)
fld
xchg
daa
fisubr
and
push
adc
sbb
xchg
data16
scas
xchg
pop
sub
pop
(bad)
(bad)
push
sbb
sbb
pop
pop
and
popw
mov
bound
loope
push
xor
loopne
push
mov
sbb
sbb
pop
pop
and
addr16
mov
and
bound
es
scas
sbb
ins
es
pop
and
addr16
mov
pop
bound
loope
push
push
mov
lahf
pop
pop
xchg
pop
bound
push
adc
sbb
out
cs
outs
es
movs
cmp
imul
xchg
call
lahf
ret
ins
es
movs
cmp
std
outs
es
add
xchg
jg
mov
add
outs
es
movs
cmp
repnz
es
push
mov
xchg
jg
xchg
scas
rcr
pop
cs
push
mov
xchg
jg
mov
fwait
ret
ins
es
movs
cmp
std
outs
es
mov
cmp
push
rcl
xor
into
arpl
es
outs
xchg
test
bound
sar
jmp
rcl
stos
in
ss
bound
es
es
bound
es
and
pop
bound
es
ds
bound
es
cmp
pop
bound
es
push
aad
bound
es
add
pop
bound
es
push
aad
bound
es
sbb
pop
bound
es
jmp
ja
mov
loope
pop
or
cmp
or
out
jle
dec
addr16
cmps
es
pop
sahf
daa
out
dec
cmps
loope
mov
popa
lahf
pop
push
push
in
xor
fsubr
das
fist
sub
hlt
arpl
mov
lods
fidivr
push
fisttp
call
daa
dec
or
jbe
push
out
inc
jecxz
punpckldq
or
jb
es
es
mov
loop
data16
(bad)
bound
es
or
mov
shl
(bad)
out
fst
cs
push
add
xchg
mov
cmp
cs
bound
es
outs
aad
bound
es
push
pop
bound
es
data16
bound
es
(bad)
aad
bound
es
jle
pop
bound
es
jp
pop
bound
es
jbe
pop
bound
es
jb
pop
bound
es
dec
aad
bound
es
dec
aad
bound
es
inc
aad
bound
es
inc
aad
bound
es
pop
aad
bound
es
pop
aad
bound
es
push
aad
bound
es
push
aad
bound
es
scas
aad
bound
es
stos
aad
bound
es
cmps
aad
bound
es
mov
mov
bound
es
mov
mov
bound
es
mov
mov
bound
es
mov
pop
bound
es
mov
pop
bound
es
mov
pop
bound
es
mov
pop
bound
es
xchg
pop
bound
es
adc
bound
es
sahf
aad
bound
es
call
bound
es
xchg
aad
bound
es
xchg
aad
bound
es
out
aad
bound
es
jmp
bound
es
out
pop
bound
es
loop
pop
bound
es
(bad)
aad
bound
es
cli
aad
bound
es
not
pop
bound
es
repnz
bound
es
into
aad
bound
es
retf
bound
es
(bad)
aad
bound
es
ret
bound
es
(bad)
aad
bound
es
rcl
pop
bound
es
rcr
mov
es
sub
pop
bound
es
rcr
mov
es
and
pop
bound
es
rcr
mov
es
cmp
pop
bound
es
rcr
mov
es
xor
pop
bound
es
push
rcr
mov
es
or
pop
bound
es
push
rcr
mov
es
add
pop
bound
es
push
rcr
mov
es
sbb
pop
bound
es
push
rcr
mov
es
adc
pop
bound
es
outs
rcr
mov
es
push
pop
bound
es
data16
mov
es
(bad)
mov
bound
es
jle
pop
bound
es
jp
pop
bound
es
jbe
pop
bound
es
jb
pop
bound
es
dec
rcr
mov
es
dec
rcr
mov
es
pop
rcr
mov
es
pop
rcr
mov
es
push
rcr
mov
es
push
rcr
mov
es
scas
rcr
mov
es
mov
mov
bound
es
mov
mov
bound
es
mov
mov
bound
es
mov
pop
bound
es
mov
pop
bound
es
mov
pop
bound
es
mov
pop
bound
es
xchg
pop
bound
es
adc
bound
es
xchg
rcr
mov
es
xchg
rcr
mov
es
out
rcr
mov
es
jmp
bound
es
out
pop
bound
es
loop
pop
bound
es
(bad)
rcr
mov
es
cli
rcr
mov
es
not
pop
bound
es
repnz
mov
es
into
rcr
mov
es
retf
bound
es
(bad)
rcr
mov
es
ret
bound
es
(bad)
pop
bound
es
fcmovbe
pop
bound
es
(bad)
rcr
mov
es
rcl
pop
bound
es
